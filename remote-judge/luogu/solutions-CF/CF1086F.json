[
    {
        "content": "\u9996\u5148\u770b\u5230\u8fd9\u4e2a\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u77e9\u5f62\u9762\u79ef\u5e76\uff0c\u7136\u800c\u54b1\u4eec\u662f\u6c42\u6743\u503c\u548c\uff0c\u800c\u8fd9\u4e9b\u6743\u503c\u548c\u770b\u4e0a\u53bb\u5b9e\u5728\u662f\u592a\u79bb\u6563\u4e86\u5b8c\u5168\u6ca1\u6cd5\u5904\u7406\u3002\u90a3\u4e48\u6211\u4eec\u4f7f\u7528\u8ba1\u6570\u7684\u7edf\u8ba1\u8d21\u732e\u7684\u5957\u8def\uff0c\u6211\u4eec\u4ee4$f(i)$\u4e3a\u7b2c$i$\u79d2\u7684\u65f6\u5019\u7740\u706b\u683c\u5b50\u7684**\u4e2a\u6570**\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u8ba9\u4e00\u4e2a\u5728$j$\u79d2\u65f6\u5f00\u59cb\u7740\u706b\u7684\u683c\u5b50\u88ab\u7edf\u8ba1$j$\u6b21\uff0c\u90a3\u4e48\u5c31\u662f$f(t)-f(i)$\u8868\u793a**\u6743\u503c\u5927\u4e8ei\u7684\u683c\u5b50\u4e2a\u6570**\uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u5c31\u662f$\\sum_{i=0}^{t-1}f(t)-f(i)=tf(t)-\\sum_{i=0}^{t-1}f(i)$\u4e86\u3002\n\n\u663e\u7136$f(i)$\u53ef\u4ee5\u7528$O(n\\log n)$\u7684\u77e9\u5f62\u9762\u79ef\u5e76\u505a\uff0c\u4f46\u662f\u54b1\u4eec\u5e76\u4e0d\u80fd\u5bf9\u6bcf\u4e2a$t$\u90fd\u505a\u4e00\u904d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5177\u4f53\u5206\u6790\u4e00\u4e0b$f(i)$\u3002$f(i)$\u662f\u77e9\u5f62\u7684\u5e76\u5bf9\u5427\uff0c\u5b83\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u8fd9$n$\u4e2a\u77e9\u5f62\u4e92\u76f8\u4e4b\u95f4\u7684\u4ea4\u5bb9\u65a5\u641e\u51fa\u6765\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u77e9\u5f62\u4e4b\u95f4\u9700\u8981\u8fc7\u4e00\u6bb5\u65f6\u95f4\u624d\u4f1a\u6709\u4ea4\uff0c\u4f46\u662f\u4e24\u4e2a\u77e9\u5f62\u4e00\u65e6\u6709\u4ea4\uff0c\u5b83\u4eec\u7684\u4ea4\u7684\u9762\u79ef\u663e\u7136\u4e5f\u662f\u4e00\u4e2a**\u4e8c\u6b21\u51fd\u6570**\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u4f7f\u7528\u6bcf\u4e24\u4e2a\u77e9\u5f62\u4e4b\u95f4\u5f00\u59cb\u51fa\u73b0\u4ea4\u7684\u65f6\u95f4\u628a\u8fd9\u4e2a$f$\u51fd\u6570\u5206\u6bb5\uff0c\u90a3\u4e48\u5728\u4e24\u4e2a\u65f6\u95f4\u70b9\u4e4b\u95f4\u663e\u7136\u6bcf\u4e2a\u77e9\u5f62\u96c6\u5408\u7684\u4ea4\u96c6\u90fd\u662f\u4e8c\u6b21\u51fd\u6570\uff0c\u800c\u5bb9\u65a5\u662f\u7ebf\u6027\u7684\u8fd0\u7b97\uff0c\u6240\u4ee5\uff0c**$f(i)$\u5fc5\u7136\u4e5f\u662f\u5206\u6bb5\u7684\u4e8c\u6b21\u51fd\u6570**\u3002\n\n\u90a3\u4e48\u8fd9\u6709\u5565\u7528\u5462\uff1f\u54b1\u4eec\u597d\u597d\u60f3\u4e00\u4e0b\uff0c\u8fd9\u4e0d\u662f\u8981\u6c42$f$\u7684\u548c\u5417\uff1f\u90a3\u76f4\u63a5\u628a$f(i)$\u7684\u5f0f\u5b50\u63d2\u503c\u51fa\u6765\u4e0d\u5c31\u884c\u4e86\u5417\uff1f\uff08\u5f53\u7136\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u624b\u7b97\uff09\uff0c\u4e8e\u662f\u54b1\u4eec\u6bcf\u6b21\u53ea\u9700\u8981\u6c423\u904d\u77e9\u5f62\u9762\u79ef\u5e76\u5f97\u52303\u4e2a\u70b9\u5c31\u884c\u4e86\uff0c\u800c\u65f6\u95f4\u70b9\u662f$O(n^2)$\u7684\uff0c\u6240\u4ee5\u590d\u6742\u5ea6$O(n^3\\log n)$\u3002\n\n\u6240\u4ee5\u6709\u4e9b\u770b\u4e0a\u53bb\u7279\u522b\u79bb\u6563\u7684\u4e1c\u897f\u5f80\u5f80\u90fd\u80fd\u63d2\u503c\u554a\u2026\u2026\u800c\u4e14\u4f60\u770b\u8fd9\u4e2a$t$\u8fd8\u8fd9\u4e48\u5927\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#define ls(_o) (_o << 1)\n#define rs(_o) ((_o << 1) | 1)\n#define ll long long\n#define p 998244353\n#define abs(_o) ((_o < 0) ? -(_o) : _o)\nusing namespace std;\nnamespace ywy {\n\tinline ll mi(int a, int b) {\n\t    ll ans = 1, tmp = a;\n\t    while (b) {\n\t        if (b & 1)\n\t            ans = (ans * tmp) % p;\n\t        tmp = (tmp * tmp) % p;\n\t        b >>= 1;\n\t    }\n\t    return (ans);\n\t}\n\tint lsh[300], cnt[2001];\n\tint data[2001];\n\tinline void up(int tree, int l, int r) {\n\t    if (cnt[tree])\n\t        data[tree] = lsh[r] - lsh[l - 1];\n\t    else\n\t        data[tree] = data[ls(tree)] + data[rs(tree)];\n\t}\n\tvoid add(int rl, int rr, int l, int r, int tree, int x) {\n\t    if (rl == l && rr == r) {\n\t        cnt[tree] += x;\n\t        if (!cnt[tree]) {\n\t            if (l == r)\n\t                data[tree] = 0;\n\t            else\n\t                data[tree] = data[ls(tree)] + data[rs(tree)];\n\t        } else\n\t            data[tree] = lsh[r] - lsh[l - 1];\n\t        return;\n\t    }\n\t    int mid = (l + r) >> 1;\n\t    if (rl > mid)\n\t        add(rl, rr, mid + 1, r, rs(tree), x);\n\t    else {\n\t        if (rr <= mid)\n\t            add(rl, rr, l, mid, ls(tree), x);\n\t        else {\n\t            add(rl, mid, l, mid, ls(tree), x);\n\t            add(mid + 1, rr, mid + 1, r, rs(tree), x);\n\t        }\n\t    }\n\t    up(tree, l, r);\n\t}\n\tll inv2, inv6;\n\tinline ll sig2(ll n) {\n\t    ll cjr = n;\n\t    cjr *= (n + 1);\n\t    cjr %= p;\n\t    cjr *= (n * 2 + 1);\n\t    cjr %= p;\n\t    cjr *= inv6;\n\t    return (cjr % p);\n\t}\n\tinline ll sig(ll n) {\n\t    ll cjr = n;\n\t    cjr *= (n + 1);\n\t    cjr %= p;\n\t    cjr *= inv2;\n\t    return (cjr % p);\n\t}\n\ttypedef struct _n {\n\t    int l;\n\t    int r;\n\t} node;\n\tvector<node> adds[300], dels[300];\n\tinline void clear(vector<node> &v) {\n\t    vector<node> tmp;\n\t    v = tmp;\n\t}\n\tint xs[60], ys[60];\n\tint n;\n\tvoid build(int l, int r, int tree) {\n\t    cnt[tree] = data[tree] = 0;\n\t    if (l == r)\n\t        return;\n\t    int mid = (l + r) >> 1;\n\t    build(l, mid, ls(tree));\n\t    build(mid + 1, r, rs(tree));\n\t}\n\tinline ll getS(int t) {\n\t    int ptr = 1;\n\t    for (register int i = 1; i <= n; i++) {\n\t        lsh[ptr] = xs[i] - t - 1;\n\t        ptr++;\n\t        lsh[ptr] = xs[i] + t;\n\t        ptr++;\n\t        lsh[ptr] = ys[i] - t - 1;\n\t        ptr++;\n\t        lsh[ptr] = ys[i] + t;\n\t        ptr++;\n\t    }\n\t    ptr--;\n\t    sort(lsh + 1, lsh + 1 + ptr);\n\t    ptr = unique(lsh + 1, lsh + 1 + ptr) - lsh - 1;\n\t    build(1, ptr, 1);\n\t    for (register int i = 1; i <= ptr; i++) clear(adds[i]), clear(dels[i]);\n\t    for (register int i = 1; i <= n; i++) {\n\t        node cjr;\n\t        cjr.l = lower_bound(lsh + 1, lsh + 1 + ptr, ys[i] - t - 1) - lsh + 1;\n\t        cjr.r = lower_bound(lsh + 1, lsh + 1 + ptr, ys[i] + t) - lsh;\n\t        int l = lower_bound(lsh + 1, lsh + 1 + ptr, xs[i] - t - 1) - lsh;\n\t        int r = lower_bound(lsh + 1, lsh + 1 + ptr, xs[i] + t) - lsh;\n\t        adds[l].push_back(cjr);\n\t        dels[r].push_back(cjr);\n\t    }\n\t    ll ans = 0;\n\t    for (register int i = 1; i <= ptr; i++) {\n\t        ans = (ans + data[1] * (ll)(lsh[i] - lsh[i - 1])) % p;\n\t        for (register int j = 0; j < adds[i].size(); j++) add(adds[i][j].l, adds[i][j].r, 1, ptr, 1, 1);\n\t        for (register int j = 0; j < dels[i].size(); j++) add(dels[i][j].l, dels[i][j].r, 1, ptr, 1, -1);\n\t    }\n\t    return (ans);\n\t}\n\tint tme[100001];\n\tvoid ywymain() {\n\t    inv2 = mi(2, p - 2);\n\t    inv6 = mi(6, p - 2);\n\t    int t;\n\t    cin >> n >> t;\n\t    for (register int i = 1; i <= n; i++) cin >> xs[i] >> ys[i];\n\t    int ptr = 1;\n\t    for (register int i = 1; i <= n; i++) {\n\t        for (register int j = 1; j < i; j++) {\n\t            tme[ptr] = max(abs(xs[i] - xs[j]), abs(ys[i] - ys[j])) / 2;\n\t            if (tme[ptr] <= t)\n\t                ptr++;\n\t            tme[ptr] = max(abs(xs[i] - xs[j]), abs(ys[i] - ys[j])) / 2 + 1;\n\t            if (tme[ptr] <= t)\n\t                ptr++;\n\t        }\n\t    }\n\t    tme[ptr] = 0;\n\t    ptr++;\n\t    tme[ptr] = t;\n\t    sort(tme + 1, tme + 1 + ptr);\n\t    ptr = unique(tme + 1, tme + 1 + ptr) - tme - 1;\n\t    ll ans = (getS(t) * t) % p;\n\t    for (register int i = 1; i < ptr; i++) {\n\t        if (tme[i + 1] - tme[i] <= 2) {\n\t            for (register int j = tme[i]; j < tme[i + 1]; j++) ans = (ans + p - getS(j)) % p;\n\t            continue;\n\t        }\n\t        ll c = getS(tme[i]), A = getS(tme[i] + 1), B = getS(tme[i] + 2);\n\t        ll a = (B - A * 2 + c) * inv2;\n\t        a %= p;\n\t        a += p;\n\t        a %= p;\n\t        ll b = A - c - a;\n\t        b %= p;\n\t        b += p;\n\t        b %= p;\n\t        ans -= a * sig2(tme[i + 1] - tme[i] - 1);\n\t        ans %= p;\n\t        ans += p;\n\t        ans %= p;\n\t        ans -= b * sig(tme[i + 1] - tme[i] - 1);\n\t        ans %= p;\n\t        ans += p;\n\t        ans %= p;\n\t        ans -= c * (tme[i + 1] - tme[i]);\n\t        ans %= p;\n\t        ans += p;\n\t        ans %= p;\n\t    }\n\t    cout << ans << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1560166616,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1086F \u3010Forest Fires\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u795e\u79d8 $O(n^2\\log n)$ \u505a\u6cd5\uff0c\u5e94\u8be5\u975e\u5e38\u96be\u5199\uff08\n\n\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e00\u4e2a\u70b9\u67d3\u8272\u4e3a\u7b2c\u4e00\u4e2a\u4f7f\u5f97\u5b83\u7740\u706b\u7684\u521d\u59cb\u70b9\u3002\uff08\u82e5\u6709\u591a\u4e2a\u8fd9\u79cd\u7ec6\u8282\u95ee\u9898\u6700\u540e\u8bf4\uff09\n\n\u8fd9\u79cd\u67d3\u8272\u5c06\u6574\u4e2a\u5e73\u9762\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8fde\u901a\u533a\u57df\uff0c\u6ce8\u610f\u5230\u6bcf\u4e24\u4e2a\u533a\u57df\u7684\u8fb9\u754c\u7684\u610f\u4e49\u4e3a\u201c\u5230\u4e24\u4e2a\u5bf9\u5e94\u7684\u521d\u59cb\u70b9\u8ddd\u79bb\u76f8\u540c\u7684\u70b9\u7684\u4e00\u90e8\u5206\u201d\uff0c\u5b83\u4e00\u5b9a\u662f\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u6216\u8005\u659c\u7387\u4e3a $1,-1$ \u7684\u76f4\u7ebf\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u53ea\u7528 $O(n\\log n)$ \u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $s$\uff0c\u5305\u542b\u5b83\u7684\u533a\u57df\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5176\u4f59\u70b9\uff0c\u505a\u51fa $\\text{dis}(s,x) \\le \\text{dis}(t,x)$ \u7684\u70b9\u7684\u533a\u57df\uff08\u8fb9\u754c\u5bb9\u6613\u53d1\u73b0\u4e3a\u4e24\u6761\u6c34\u5e73\u6216\u8005\u7ad6\u76f4\u7684\u76f4\u7ebf\u52a0\u4e0a\u4e00\u6761 $45$ \u5ea6\u7684\uff09\uff0c\u5e76\u53d6\u4ea4\u5373\u53ef\u3002\n\n\u5177\u4f53\u53d6\u4ea4\u7684\u8fc7\u7a0b\u53ef\u4ee5\u626b\u63cf\u7ebf\u7ef4\u62a4\uff0c\u7531\u4e8e\u53ef\u80fd\u7684\u659c\u7387\u53ea\u6709\u4e09\u79cd\uff0c\u53ea\u7528\u7528 `set` \u7ef4\u62a4\u6bcf\u4e00\u79cd\u659c\u7387\u5bf9\u5e94\u7684\u6700\u5927\u503c\u7136\u540e\u8ba8\u8bba\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\u663e\u7136\u53ef\u4ee5\u5207\u5f00\u6765\u7136\u540e\u5206\u522b\u7b97\uff0c\u8fd9\u6837\u5c31 $O(n^2\\log n)$ \u4e86\u3002\u770b\u8d77\u6765 $\\log$ \u7684\u74f6\u9888\u5728\u4e8e $O(n)$ \u6b21 `set` \u64cd\u4f5c\uff0c\u4f3c\u4e4e\u80fd\u4f18\u5316\u3002 ",
        "postTime": 1657548427,
        "uid": 254752,
        "name": "JohnVictor",
        "ccfLevel": 6,
        "title": "CF1086F\u9898\u89e3"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/1086/problem/F) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1086F)\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u57fa\u4e8e\u62c9\u683c\u6717\u65e5\u63d2\u503c\u7684\u6700\u4f18\u53ef\u505a\u5230 $n^3\\log n$ \u7684\u505a\u6cd5\uff0c\u53e6\u4e00\u79cd\u662f\u57fa\u4e8e\u5bb9\u65a5\u7684\u6700\u4f18\u53ef\u505a\u5230 $n^2\\log n$ \u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u5148\u63a8\u4e00\u6ce2\u5f0f\u5b50\uff0c\u76f4\u63a5\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7740\u706b\u7684\u65f6\u523b\u663e\u7136\u6ca1\u5565\u6027\u8d28\u53ef\u8a00\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u59a8\u5c06\u8d21\u732e\u644a\u5230\u6bcf\u4e2a\u65f6\u523b\u4e0a\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e2a\u65f6\u523b $T\\in[0,t]$ \u8ba1\u7b97\u7740\u706b\u683c\u5b50\u6570\u5e76\u7d2f\u8ba1\u6c42\u548c\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u5bf9\u4e8e\u4e00\u4e2a\u7740\u706b\u65f6\u523b\u4e3a $t_0$ \u7684\u683c\u5b50\uff0c\u5176\u4f1a\u4ea7\u751f $t+1-t_0$ \u7684\u8d21\u732e\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u7528\u62ff $(t+1)\u00b7t\\text{\u65f6\u523b\u7740\u706b\u7684\u683c\u5b50\u6570}$ \u518d\u51cf\u53bb\u4e4b\u524d\u6c42\u5f97\u7684\u548c\u5f0f\u5373\u53ef\u7b97\u51fa\u7b54\u6848\uff0c\u524d\u8005\u76f4\u63a5\u77e9\u5f62\u9762\u79ef\u4ea4\u5373\u53ef\uff0c\u4e8e\u662f\u74f6\u9888\u5728\u4e8e\u8ba1\u7b97\u540e\u8005\u3002\n\n\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u60f3\u6cd5\u662f\uff0c\u6ce8\u610f\u5230\u8fd9\u4e2a\u503c\u57df\u5f88\u5927\uff0c\u4f46\u662f\u53ea\u8981\u77e9\u5f62\u4e4b\u95f4\u4e24\u4e24\u662f\u5426\u76f8\u4ea4\u7684\u60c5\u51b5\u4e0d\u53d8\uff0c\u77e9\u5f62\u9762\u79ef\u5e76\u5c31\u662f\u5173\u4e8e\u65f6\u95f4\u7684\u591a\u9879\u5f0f\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u50cf 2022 \u5e74\u7701\u9009 D1T2 \u90a3\u6837\uff0c\u628a $[1,t]$ \u5206\u6210\u82e5\u5e72\u4e2a\u533a\u95f4\u4f7f\u5f97\u6bcf\u4e2a\u533a\u95f4\u7684\u9762\u79ef\u5e76\u90fd\u662f\u5173\u4e8e\u65f6\u95f4\u7684\u591a\u9879\u5f0f\uff0c\u8fd9\u6837\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u63d2\u4e09\u4e2a\u503c\uff08\u56e0\u4e3a\u591a\u9879\u5f0f\u6b21\u6570\u663e\u7136\u53ea\u6709 $2$\uff09\u7136\u540e\u7d2f\u52a0\u6c42\u524d\u7f00\u548c\u5373\u53ef\u3002\u6ce8\u610f\u5230\u533a\u95f4\u4e2a\u6570\u662f $\\mathcal O(n^2)$ \u7ea7\u522b\u7684\uff0c\u518d\u52a0\u4e0a\u77e9\u5f62\u9762\u79ef\u5e76\u7684\u590d\u6742\u5ea6\uff0c\u603b\u590d\u6742\u5ea6 $n^3\\log n$\uff0c\u5df2\u7ecf\u8db3\u591f\u901a\u8fc7 CF \u7684\u6570\u636e\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u505a\u6cd5\uff0c\u4e4b\u524d\u7684\u63d2\u503c\u505a\u6cd5\u597d\u50cf\u6ca1\u5565\u4f18\u5316\u7684\u4f59\u5730\uff0c\u4e8e\u662f\u6211\u4eec\u4e0d\u59a8\u53e6\u8f9f\u8e4a\u5f84\u3002\u6211\u4eec\u8003\u8651\u6c42\u77e9\u5f62\u5e76\u7684\u7ecf\u5178\u505a\u6cd5\uff1a\u6c42\u77e9\u5f62\u4ea4\uff0c\u7136\u540e\u5bb9\u65a5\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u8fd9\u6837\u8ba1\u7b97 $[0,t]$ \u6240\u6709\u65f6\u523b\u7740\u706b\u683c\u5b50\u6570\u4e4b\u548c\uff1a\u679a\u4e3e\u4e00\u4e2a\u5b50\u96c6 $S$\uff0c\u7136\u540e\u6c42 $[0,t]$ \u65f6\u523b\u5bf9\u5e94\u77e9\u5f62\u4ea4\u5927\u5c0f\u4e4b\u548c\uff0c\u4e58\u4e0a\u5bb9\u65a5\u7cfb\u6570 $(-1)^{|S|+1}$\u3002\u8fd9\u6837\u770b\u4f3c\u590d\u6742\u5ea6\u5347\u9ad8\u4e86\uff0c\u53d8\u6210\u4e86 $2^nn$\uff0c\u4f46\u662f\u4ed4\u7ec6\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u96c6\u4e2d\u5b58\u5728\u67d0\u4e2a\u70b9\u88ab\u5176\u4ed6\u70b9\u5305\u56f4\u4e86\uff0c\u90a3\u4e48\u4e2d\u95f4\u8fd9\u4e2a\u70b9\u5c31\u662f\u53ef\u6709\u53ef\u65e0\u7684\uff0c\u6b64\u65f6\u77e9\u5f62\u7684\u8d21\u732e\u5c31\u53d8\u6210\u4e86 $0$\uff0c\u6709\u70b9\u7c7b\u4f3c\u4e8e\u6c42\u77e9\u9635\u884c\u5217\u5f0f\u7684\u6b63\u8d1f\u76f8\u6d88\u7684\u601d\u60f3\u3002\u4e8e\u662f\u6211\u4eec\u79f0\u4e0d\u5b58\u5728\u4e00\u4e2a\u70b9\u88ab\u5305\u56f4\u7684\u96c6\u5408\u662f\u201c\u597d\u7684\u201d\uff0c\u6211\u4eec\u4e0d\u59a8\u679a\u4e3e\u8fd9\u4e9b\u201c\u597d\u7684\u201d\u96c6\u5408\u7684\u5de6\u53f3\u8fb9\u754c\uff0c\u5e76\u7528 multiset \u5b58\u50a8\u4e2d\u95f4\u90a3\u4e9b\u70b9\u7684\u7eb5\u5750\u6807\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u6709\u5de6\u53f3\u8fb9\u754c\u5bf9\u5e94\u7684\u70b9\u5728 multiset \u4e2d\u76f8\u90bb\u624d\u6709\u53ef\u80fd\u4ea7\u751f\u8d21\u732e\uff0c\u56e0\u6b64\u201c\u597d\u7684\u201d\u96c6\u5408\u4e2a\u6570\u662f $\\mathcal O(n^2)$ \u7684\uff0c\u518d\u52a0\u4e0a multiset \u7684\u590d\u6742\u5ea6\uff0c\u53ef\u5f97\u6700\u7ec8\u590d\u6742\u5ea6 $n^2\\log n$\u3002\n\n```cpp\nconst int MAXN = 2000;\nconst int MOD = 998244353;\nconst int INV2 = MOD + 1 >> 1;\nconst int INV6 = (MOD + 1) / 6;\nint n, t, x[MAXN + 5], y[MAXN + 5], res = 0;\nnamespace CalcUnion {\n\tint sum[MAXN * 2 + 5][MAXN * 2 + 5];\n\tint kx[MAXN * 2 + 5], ky[MAXN * 2 + 5], ux[MAXN * 2 + 5], uy[MAXN * 2 + 5], nx, ny, cx, cy;\n\tint calc() {\n\t\tcx = cy = nx = ny = 0; kx[0] = ky[0] = -1e9;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tkx[++cx] = x[i] - t; kx[++cx] = x[i] + t + 1;\n\t\t\tky[++cy] = y[i] - t; ky[++cy] = y[i] + t + 1;\n\t\t}\n\t\tsort(kx + 1, kx + cx + 1); sort(ky + 1, ky + cy + 1);\n\t\tfor (int i = 1; i <= cx; i++) if (kx[i] != kx[i - 1]) ux[++nx] = kx[i];\n\t\tfor (int i = 1; i <= cy; i++) if (ky[i] != ky[i - 1]) uy[++ny] = ky[i];\n\t\tfor (int i = 1; i <= nx; i++) for (int j = 1; j <= ny; j++) sum[i][j] = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tint lx = lower_bound(ux + 1, ux + nx + 1, x[i] - t) - ux;\n\t\t\tint rx = lower_bound(ux + 1, ux + nx + 1, x[i] + t + 1) - ux;\n\t\t\tint ly = lower_bound(uy + 1, uy + ny + 1, y[i] - t) - uy;\n\t\t\tint ry = lower_bound(uy + 1, uy + ny + 1, y[i] + t + 1) - uy;\n\t\t\tsum[lx][ly]++; sum[lx][ry]--; sum[rx][ly]--; sum[rx][ry]++;\n\t\t}\n\t\tint ret = 0;\n\t\tfor (int i = 1; i <= nx; i++) for (int j = 1; j <= ny; j++)\n\t\t\tsum[i][j] += sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1];\n\t\tfor (int i = 1; i <= nx; i++) for (int j = 1; j <= ny; j++) {\n\t\t\tif (sum[i][j]) ret = (ret + 1ll * (ux[i + 1] - ux[i]) * (uy[j + 1] - uy[j])) % MOD;\n\t\t} \t\t\n\t\treturn ret;\n\t}\n}\nint getsum2(int x) {return 1ll * x * (x + 1) % MOD * (2 * x + 1) % MOD * INV6 % MOD;}\nint getsum2(int l, int r) {return (getsum2(r) - getsum2(l - 1) + MOD) % MOD;}\nint getsum1(int x) {return 1ll * x * (x + 1) % MOD * INV2 % MOD;}\nint getsum1(int l, int r) {return (getsum1(r) - getsum1(l - 1) + MOD) % MOD;}\nnamespace CalcInter {\n\tint calc(vector<int> vec) {\n\t\tfor (int x : vec) if (!x) return 0;\n\t\tint mnx = 1e9, mxx = -1e9, mny = 1e9, mxy = -1e9;\n\t\tfor (int id : vec) {\n\t\t\tchkmin(mnx, x[id]); chkmax(mxx, x[id]);\n\t\t\tchkmin(mny, y[id]); chkmax(mxy, y[id]);\n\t\t}\n\t\tint lim = max(mxx - mnx + 1, mxy - mny + 1) / 2;\n\t\tint V1 = mxx - mnx - 1, V2 = mxy - mny - 1;\n\t\tif (lim <= t) {\n\t\t\t// \\sum\\limits_{i=lim}^t(2i-V1)(2i-V2)\n\t\t\tint sum = (4ll * getsum2(lim, t) % MOD -\n\t\t\t\t\t2ll * (V1 + V2) * getsum1(lim, t) % MOD +\n\t\t\t\t\t1ll * V1 * V2 % MOD * (t - lim + 1) % MOD +\n\t\t\t\t\tMOD) % MOD;\n\t\t\treturn sum;\n\t\t} else return 0;\n\t}\n}\nint ord[MAXN + 5];\nvoid solve() {\n\tscanf(\"%d%d\", &n, &t);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d%d\", &x[i], &y[i]);\n\tres = 1ll * CalcUnion :: calc() * (t + 1) % MOD;\n\tfor (int i = 1; i <= n; i++) res = (res - CalcInter :: calc({i}) + MOD) % MOD;\n\tfor (int i = 1; i <= n; i++) ord[i] = i;\n\tsort(ord + 1, ord + n + 1, [&](int a, int b) {\n\t\tif (x[a] != x[b]) return x[a] < x[b];\n\t\tif (y[a] != y[b]) return y[a] < y[b];\n\t\treturn a < b;\n\t});\n\tfor (int i = 1; i <= n; i++) {\n\t\tset<pii> st; st.insert(mp(-1e9, 0)); st.insert(mp(1e9, 0));\n\t\tint id = ord[i]; st.insert(mp(y[id], id));\n\t\tfor (int j = i + 1; j <= n; j++) {\n\t\t\tst.insert(mp(y[ord[j]], ord[j]));\n\t\t\tauto it1 = st.find(mp(y[id], id));\n\t\t\tauto it2 = st.find(mp(y[ord[j]], ord[j]));\n\t\t\tif (it1 == next(it2)) {\n\t\t\t\tres = (res + CalcInter :: calc({id, ord[j]})) % MOD;\n\t\t\t\tres = (res - CalcInter :: calc({id, ord[j], prev(it2) -> se}) + MOD) % MOD;\n\t\t\t\tres = (res - CalcInter :: calc({id, ord[j], next(it1) -> se}) + MOD) % MOD;\n\t\t\t\tres = (res + CalcInter :: calc({id, ord[j], next(it1) -> se, prev(it2) -> se})) % MOD;\n\t\t\t}\n\t\t\tif (it2 == next(it1)) {\n\t\t\t\tres = (res + CalcInter :: calc({id, ord[j]})) % MOD;\n\t\t\t\tres = (res - CalcInter :: calc({id, ord[j], prev(it1) -> se}) + MOD) % MOD;\n\t\t\t\tres = (res - CalcInter :: calc({id, ord[j], next(it2) -> se}) + MOD) % MOD;\n\t\t\t\tres = (res + CalcInter :: calc({id, ord[j], next(it2) -> se, prev(it1) -> se})) % MOD;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", res);\n}\nint main() {\n\tfreopen(\"fire.in\", \"r\", stdin);\n\tfreopen(\"fire.out\", \"w\", stdout);\n\tint qu; scanf(\"%d\", &qu);\n\twhile (qu--) solve();\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1654506865,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1086F Forest Fires"
    },
    {
        "content": "\u53d1\u73b0\u81ea\u5df1\u5f97\u5230\u4e86\u4e00\u4e2a\u4e0e\u4f17\u4e0d\u540c\u7684\u505a\u6cd5\uff1f\u867d\u7136\u662f $O(n^4)$ \u7684\u3002\n\n\u4ee4 $F(x)$ \u4e3a $x$ \u65f6\u523b\u8986\u76d6\u7684\u70b9\u6570\uff0c\u5219\u7b54\u6848\u4e3a $tF(t)-\\sum_{i=0}^{t-1\n}F(i)$ \u3002\u8fd9\u4e2a $F(x)$ \uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u5806\u77e9\u9635\u7684\u5e76\u3002\n\n\u6211\u4e0d\u4f1a\u62c9\u63d2\uff0c\u6211\u53ea\u4f1a\u5c0f\u5965\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bb9\u65a5\u3002\n\n\u679a\u4e3e\u4e00\u4e2a\u70b9\u96c6\uff0c\u53d1\u73b0\u5b83\u4eec\u7684\u4ea4\u6ee1\u8db3 $a_i-t\\leq x\\leq a_i+t$ \u4e14 $b_i-t\\leq y\\leq b_i+t$ \uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u73a9\u610f\u513f\u53ea\u548c $a_i$ \u7684\u6781\u5dee\uff0c$b_i$ \u7684\u6781\u5dee\u6709\u5173\u3002\n\n\u4ee4  $a_i$ \u6781\u5dee\u4e3a $A$ , $b_i$ \u6781\u5dee\u4e3a $B$ ,\u5219\u8fd9\u4e2a\u4ea4\u7684\u9762\u79ef\u4e3a $(2t+1-A)(2t+1-B)$ \uff0c\u6ee1\u8db3 $2t+1>\\max(A,B)$ \u3002\n\n\u90a3\u4e48\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u901a\u8fc7\u5c0f\u5b66\u5965\u6570\u77e5\u8bc6\u662f\u53ef\u4ee5\u8f7b\u6613\u7b97\u51fa\u6765\u7684\uff0c\u4e5f\u5c31\u662f $t(2t+1-A)(2t+1-B)-\\sum_{i=\\max(A,B)/2}^{t-1}(2i+1-A)(2i+1-B)$ \uff0c\u518d\u4e58\u4e2a\u5bb9\u65a5\u7cfb\u6570\u3002\n\n\u65e2\u7136\u8fd9\u4e2a\u8d21\u732e\u53ea\u548c\u70b9\u96c6\u7684\u6781\u5dee\u6709\u5173\uff0c\u5c31\u53ef\u4ee5\u679a\u4e3e\u56db\u4e2a\u6781\u503c\u3002\n\n\u95ee\u9898\u8f6c\u6362\u6210\uff1a\u8ba1\u7b97\u6240\u6709\u6781\u503c\u662f\u5b83\u4eec\u56db\u4e2a\u7684\u70b9\u96c6\u7684\u5bb9\u65a5\u7cfb\u6570\u548c\u3002\n\n\u90a3\u4e48\u5c31\u6709\u56db\u4e2a\u6761\u4ef6\uff0c\u8bf8\u5982\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\uff0c\u6a2a\u5750\u6807\u6216\u8005\u7eb5\u5750\u6807\u7b49\u4e8e\u67d0\u4e2a\u6570\uff1b\u4ee5\u53ca\u6240\u6709\u70b9\u90fd\u5e94\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u3002\n\n\u7136\u540e\u5c31\u53c8\u80fd\u8fdb\u884c\u5bb9\u65a5\uff0c\u5f3a\u5236\u4e0d\u80fd\u53d6\u5230\u4e00\u4e9b\u6781\u503c\uff0c\u5269\u4e0b\u7684\u5728\u77e9\u9635\u5185\u7684\u4efb\u53d6\u3002\u8bbe\u4efb\u53d6\u4e2a\u6570\u4e3a $p$ ,\u5219\u8d21\u732e\u4e3a $\\sum_{i=0}^p(-1)^{i+1}\\dbinom{p}{i}$ \u3002\u6211\u4eec\u60ca\u8bb6\u7684\u53d1\u73b0\uff0c\u8fd9\u73a9\u610f\u7b49\u4e8e$-[p=0]$ \u3002\u7136\u540e\u5c31\u80fd\u8f7b\u677e\u8ba1\u7b97\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,t,x[60],y[60];const int mod=998244353,inv6=(mod+1)/6;\nint S(int x){return 1ll*x*(x+1)%mod*(2*x+1)%mod*inv6%mod;}\nint S2(int x){return 1ll*x*(x+1)%mod;}\nconst int INF=1e9;\nint f(int a,int b,int n){return 1ll*(2*n+1-a)*(2*n+1-b)%mod;}\nint sf(int a,int b,int n){\n\tif(n<0)return 0;\n\tint ans=1ll*a*b%mod*(n+1)%mod;\n\t(ans+=4ll*S(n)%mod)%=mod;\n\t(ans+=2ll*S2(n)%mod)%=mod;\n\t(ans+=n+1)%=mod;\n\t(ans-=1ll*(S2(n)+n+1)*(a+b)%mod)%=mod;\n\treturn ans;\n}\nint wow(int a,int b){\n\tint e=max(a,b),p=(e+1)/2;\n\tif(p>t)return 0;\n\treturn ((1ll*f(a,b,t)*t%mod-sf(a,b,t-1))%mod+sf(a,b,p-1))%mod;\n    //\u6781\u503c\u4e3aa\uff0cb\uff0c\u6c42\u8d21\u732e\n} \nint ans;\nint qx[60],xs,qy[60],ys,F[60],s[60][60];\nint calc(int mix,int mxx,int miy,int mxy){return s[mxx][mxy]+s[mix-1][miy-1]-s[mxx][miy-1]-s[mix-1][mxy];}\nint main(){\n    F[0]=-1;//F(n)=-[n=0]\n\tscanf(\"%d%d\",&n,&t);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&x[i],&y[i]),qx[++xs]=x[i],qy[++ys]=y[i];\n\tsort(qx+1,qx+xs+1),sort(qy+1,qy+ys+1);\n\txs=unique(qx+1,qx+xs+1)-qx-1;\n\tys=unique(qy+1,qy+ys+1)-qy-1;\n    for(int i=1;i<=n;i++){\n        x[i]=lower_bound(qx+1,qx+xs+1,x[i])-qx;\n        y[i]=lower_bound(qy+1,qy+ys+1,y[i])-qy;\n        s[x[i]][y[i]]++;\n    }\n    for(int i=1;i<=xs;i++)for(int j=1;j<=ys;j++)s[i][j]+=s[i-1][j]+s[i][j-1]-s[i-1][j-1];\n\tint ans=0;\n\tfor(int i=1;i<=xs;i++)for(int j=i;j<=xs;j++)for(int k=1;k<=ys;k++)for(int k2=k;k2<=ys;k2++){\n\t\tint f=wow(qx[j]-qx[i],qy[k2]-qy[k]),tp=0;\n\t\t(ans+=1ll*f*tp%mod)%=mod;\n        if(i==j&&k==k2)tp=F[calc(i,j,k,k2)]-F[0];\n        else if(i==j){\n            for(int s=0;s<4;s++){\n                bool f1=(s>>1)&1,f2=s&1;\n                tp+=((f1^f2)?-1:1)*F[calc(i,j,k+f1,k2-f2)];\n            }\n        }\n        else if(k==k2){\n            for(int s=0;s<4;s++){\n                bool f1=(s>>1)&1,f2=s&1;\n                tp+=((f1^f2)?-1:1)*F[calc(i+f1,j-f2,k,k2)];\n            }\n        }\n        else{\n            for(int s=0;s<16;s++){\n                bool f1=s&1,f2=(s>>1)&1,f3=(s>>2)&1,f4=(s>>3)&1;\n                tp+=((f1^f2^f3^f4)?-1:1)*F[calc(i+f1,j-f2,k+f3,k2-f4)];\n            }\n        }\n        (ans+=1ll*f*tp%mod)%=mod;\n\t}\n\treturn printf(\"%d\",(ans+mod)%mod),0;\n}\n```\n\n",
        "postTime": 1633657695,
        "uid": 223624,
        "name": "Apollo13",
        "ccfLevel": 8,
        "title": "CF1086F \u9898\u89e3"
    },
    {
        "content": "> [CF1086F Forest Fires](https://www.luogu.com.cn/problem/CF1086F)\n\n\u624b\u5203 *3500\uff0c\u723d\u4e86\uff01\n\n\u9996\u5148\u5c06\u7b54\u6848\u8f6c\u5316\u4e3a $F(t) (t + 1) - \\sum\\limits_{i = 0} ^ t F(i)$\uff0c\u5176\u4e2d $F(i)$ \u8868\u793a $i$ \u65f6\u523b\u7740\u706b\u7684\u683c\u5b50\u6570\u3002\n\n\u8003\u8651\u56fe\u6848\u5916\u8f6e\u5ed3\u6269\u5c55\u7684\u5927\u5c0f\uff0c\u53d1\u73b0\u5b83\u5728\u77e9\u5f62\u4e4b\u95f4\u76f8\u4ea4\u5173\u7cfb\u4e0d\u53d8\u65f6\uff0c\u968f\u7740\u65f6\u95f4\u589e\u957f\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\u7528\u6bcf\u4e24\u4e2a\u77e9\u5f62\u76f8\u4ea4\u7684\u65f6\u523b\u5c06 $[0, t]$ \u5206\u6210 $\\mathcal{O}(n ^ 2)$ \u6bb5\uff0c\u6bcf\u6bb5 $[l_i, r_i]$ \u7684\u6240\u6709\u65f6\u523b\u7684\u77e9\u5f62\u4e4b\u95f4\u76f8\u4ea4\u5173\u7cfb\u4e0d\u53d8\uff0c\u53ea\u9700\u6c42\u51fa\u4e09\u4e2a\u65f6\u523b\u7684\u4f4d\u7f6e\u5373\u53ef\u5f97\u5230 $F(x) (l_i\\leq x\\leq r_i)$ \u7684\u8868\u8fbe\u5f0f\u3002\n\n\u5177\u4f53\u5730\uff0c\u6c42\u51fa $F(l_i), F(l_i + 1), F(l_i + 2)$\u3002\u8bbe $F$ \u7684\u5dee\u5206\u4e3a $G$\uff0c\u5219 \n$$\nG(l_i + 1) = F(l_i + 1) - F(l_i) \\\\\nG(l_i + 2) = F(l_i + 2) - F(l_i + 1)\n$$\n\u8bbe $G$ \u7684\u5dee\u5206\u4e3a $H$\uff0c\u5219\n$$\nH(l_i + 2) = G(l_i + 2) - G(l_i + 1)\n$$\n\u5219\n$$\nF(l_i + x) = \\dbinom x 0 F(l_i) + \\binom x 1 G(l_i + 1) + \\binom x 2 H(l_i + 2)\n$$\n$F$ \u5728 $[l_i, r_i]$ \u7684\u533a\u95f4\u548c\u5373\n$$\n\\binom x 1 F(l_i) + \\binom x 2 G(l_i + 1) + \\binom x 3 H(l_i + 2)\n$$\n\u5176\u4e2d $x = r_i - l_i + 1$\u3002\n\n\u5355\u6b21 $\\mathcal{O}(n\\log n)$ \u6c42 $F$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 3 \\log n)$\u3002[\u4ee3\u7801](https://codeforces.com/contest/1086/submission/176627877)\u3002\n\n\u6362\u79cd\u601d\u8def\uff0c\u8003\u8651\u5bb9\u65a5\u3002\u8bbe $F_S(t)$ \u8868\u793a\u70b9\u96c6 $S$ \u5728 $t$ \u65f6\u523b\u5f62\u6210\u7684 **\u77e9\u5f62\u4ea4**\uff0c\u5219\u7b54\u6848\u4e3a\n$$\n\\sum\\limits_{S} (-1) ^ {|S| - 1} \\left(F_S(t)(t + 1) - \\sum\\limits_{i = 0} ^ t F_S(i)\\right)\n$$\n\u8bbe\u540e\u9762\u8fd9\u4e00\u5806\u4e3a $g(S)$\uff0c\u5b83\u5bb9\u6613 $\\mathcal{O}(1)$ \u8ba1\u7b97\u3002\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e $x$ \u5750\u6807\u7684\u6781\u5dee\u548c $y$ \u5750\u6807\u6781\u5dee\u76f8\u540c\u7684\u70b9\u96c6 $S$ \u548c $T$\uff0c\u5b83\u4eec\u5728\u4efb\u610f\u65f6\u523b\u5f62\u6210\u7684\u77e9\u5f62\u4ea4\u7684\u957f\u5bbd\u5747\u76f8\u540c\uff0c$g(S) = g(T)$\u3002\u56e0\u6b64\uff0c\u53ea\u9700\u8003\u8651 $n ^ 2$ \u79cd $x$ \u5750\u6807\u7684\u5de6\u53f3\u8fb9\u754c\u548c $n ^ 2$ \u79cd $y$ \u5750\u6807\u7684\u4e0a\u4e0b\u8fb9\u754c\uff0c\u5e76\u7b97\u51fa\u5bf9\u5e94\u70b9\u96c6\u7684\u5bb9\u65a5\u7cfb\u6570\u4e4b\u548c\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6846\u5b9a\u7684\u77e9\u5f62\uff0c\u5982\u679c\u5b83\u5185\u90e8\u5b58\u5728\u4efb\u4f55\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u5bf9\u8fb9\u754c\u4ea7\u751f\u5f71\u54cd\uff0c\u53ef\u6709\u53ef\u65e0\uff0c\u5bb9\u65a5\u7cfb\u6570\u6b63\u8d1f\u62b5\u6d88\u4e86\uff0c\u8d21\u732e\u4e3a $0$\u3002\u79f0\u8fd9\u4e9b\u77e9\u5f62\u4e3a\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u5047\u8bbe\u6a2a\u5750\u6807\u4e92\u4e0d\u76f8\u540c\u3002\u8fd9\u6837\uff0c\u679a\u4e3e\u5bf9\u77e9\u5f62\u5de6\u8fb9\u754c\u548c\u53f3\u8fb9\u754c\u4ea7\u751f\u8d21\u732e\u7684\u70b9 $p, q$\uff0c**\u94a6\u5b9a\u5b83\u4eec\u51fa\u73b0**\uff08\u5b83\u4eec\u5fc5\u987b\u51fa\u73b0\uff0c\u56e0\u4e3a\u6a2a\u5750\u6807\u4e92\u4e0d\u76f8\u540c\uff09\uff0c\u5219 $p, q$ \u5f62\u6210\u7684\u77e9\u5f62\u5185\u90e8\u548c **\u8fb9\u754c\u4e0a** \u4e0d\u80fd\u6709\u4efb\u4f55\u70b9\uff08\u8fd9\u4e9b\u70b9\u53ef\u6709\u53ef\u65e0\uff0c\u5df2\u7ecf\u6709 $p, q$ \u6491\u4f4f\u6574\u4e2a\u77e9\u5f62\u4e86\uff09\u3002\n\n\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u4efb\u4f55\u4ee5 $x_p$ \u4f5c\u4e3a\u5de6\u8fb9\u754c\uff0c$x_q$ \u4f5c\u4e3a\u53f3\u8fb9\u754c\u7684\u77e9\u5f62\u90fd\u4e0d\u5408\u6cd5\u3002\n\n\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48 $p, q$ \u5f62\u6210\u7684\u77e9\u5f62\u4ee5 $(-1) ^ {2 - 1} = -1$ \u7684\u5bb9\u65a5\u7cfb\u6570\u8d21\u732e\u81f3\u7b54\u6848\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u5c06\u4e0a\u4e0b\u8fb9\u754c\u6269\u5c55\u81f3\u7eb5\u5750\u6807\u524d\u9a71\u548c\u540e\u7ee7\u3002\u5047\u8bbe\u6269\u5c55\u7684\u7eb5\u5750\u6807\u524d\u9a71 $y$ \u5728 $x_p$ \u548c $x_q$ \u4e4b\u95f4\u6709 $u$ \u4e2a\u70b9\uff0c\u5373\u5b58\u5728 $u$ \u4e2a\u70b9\u7684\u7eb5\u5750\u6807\u4e3a $y$\uff0c\u6a2a\u5750\u6807\u5728 $x_p$ \u548c $x_q$ \u4e4b\u95f4\u3002\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u70b9\uff1a\u5047\u8bbe\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u51fa\u73b0\u6216\u4e0d\u51fa\u73b0\uff0c\u5bb9\u65a5\u7cfb\u6570\u4e4b\u548c\u4e3a $0$\uff0c\u518d\u51cf\u53bb\u6240\u6709\u70b9\u90fd\u4e0d\u51fa\u73b0\u7684\u7cfb\u6570\u4e3a $(-1) ^ 0 = 1$\uff08\u5bf9 $|S|$ \u7684\u8d21\u732e\u4e3a $0$\uff09\u7684\u60c5\u51b5\uff0c\u5f97\u5230\u7cfb\u6570 $-1$\u3002\u5bf9\u4e8e\u4e0b\u8fb9\u754c\u540c\u7406\u3002\u56e0\u6b64\uff0c\u4ee5 $-1 \\times (-1) = 1$ \u7684\u7cfb\u6570\uff08\u7b2c\u4e00\u4e2a $-1$ \u662f $p, q$ \u7684 $(-1) ^ {2 - 1}$\uff09\u52a0\u5165\u6269\u5c55\u81f3\u524d\u9a71\u6216\u540e\u7ee7\u7684\u77e9\u5f62\uff0c\u4ee5 $-1 \\times (-1) ^ 2 = -1$ \u7684\u7cfb\u6570\u52a0\u5165\u540c\u65f6\u6269\u5c55\u81f3\u524d\u9a71\u540e\u7ee7\u7684\u77e9\u5f62\u3002 \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4dyr001i.png)\n\n\u5982\u4e0a\u56fe\uff0c\u7ea2\u8272\u548c\u84dd\u8272\uff08\u5de6\u4e0a\u548c\u53f3\u4e0b\uff09\u77e9\u5f62\u7684\u8d21\u732e\u7cfb\u6570\u4e3a $-1$\uff0c\u9ec4\u8272\u548c\u7eff\u8272\uff08\u53f3\u4e0a\u548c\u5de6\u4e0b\uff09\u77e9\u5f62\u7684\u8d21\u732e\u7cfb\u6570\u4e3a $1$\u3002\n\n\u5f53\u6a2a\u5750\u6807\u76f8\u540c\u65f6\uff0c\u53ea\u8981\u7ed9\u6a2a\u5750\u6807\u76f8\u540c\u7684\u70b9\u94a6\u5b9a\u4e00\u4e2a\u987a\u5e8f\uff0c\u8ba4\u4e3a\u987a\u5e8f\u5728\u524d\u7684\u6a2a\u5750\u6807\u5c0f\u4e8e\u987a\u5e8f\u5728\u540e\u7684\u6a2a\u5750\u6807\uff0c\u76f8\u5f53\u4e8e\u8fdb\u884c\u5fae\u6270\uff0c\u518d\u5957\u7528\u4e0a\u8ff0\u505a\u6cd5\u5373\u53ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k7jgjgoh.png)\n\n\u8003\u8651\u5982\u4e0a\u60c5\u51b5\uff0c$q$ \u548c $r$ \u6a2a\u5750\u6807\u76f8\u540c\uff0c\u4f46\u6211\u4eec\u94a6\u5b9a $r$ \u6392\u5728 $q$ \u4e4b\u524d\u3002\u8fd9\u6837 $p, r$ \u5f62\u6210\u7684\u77e9\u5f62\u4f1a\u5728\u679a\u4e3e $p, q$ \u65f6\u88ab\u8ba1\u7b97\u81f3\u7b54\u6848\uff0c\u4f46\u5728\u679a\u4e3e $p, r$ \u65f6\u8fd8\u4f1a\u518d\u7b97\u8fdb\u7b54\u6848\uff08\u6211\u4eec\u4e0d\u8ba4\u4e3a $q$ \u5728 $p, r$ \u5f62\u6210\u7684\u77e9\u5f62\u7684\u8fb9\u754c\u4e0a\uff09\u4e14\u7cfb\u6570\u76f8\u53cd\uff08$q$ \u88ab\u53bb\u6389\u4e86\uff09\u3002\n\n\u8003\u8651\u5177\u4f53\u5b9e\u73b0\u3002\u5c06\u6240\u6709\u70b9\u6309\u7167\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u679a\u4e3e $p, q(p < q)$ \u5206\u522b\u4f5c\u4e3a\u5de6\u53f3\u8fb9\u754c\u3002\u4e3a\u67e5\u524d\u9a71\u540e\u7ee7\uff0c\u5012\u5e8f\u679a\u4e3e $q$ \u5e76\u7528\u53cc\u5411\u94fe\u8868\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 2)$\u3002[\u4ee3\u7801](https://codeforces.com/contest/1063/submission/177820601)\u3002",
        "postTime": 1666747671,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1086F Forest Fires"
    },
    {
        "content": "## \u524d\u8a00\n\n\u53ef\u4ee5\u5eb7\u5eb7\u5927\u4f6c\u7684[\u535a\u5ba2](https://www.cnblogs.com/PYWBKTDA/p/16213435.html#:~:text=%5Bcf1086F%5DForest%20Fires%20%E8%AE%B0%20f%20%28i%29%20%E8%A1%A8%E7%A4%BA%E6%97%B6%E5%88%BB%20i%20%E6%97%B6%E7%9D%80%E7%81%AB%E7%9A%84%E6%A0%BC%E5%AD%90%E6%95%B0%EF%BC%8C%E5%88%99%E7%AD%94%E6%A1%88%E5%8D%B3,f%20%28i%29%20%EF%BC%8C%E5%8D%B3%E5%AF%B9%E6%89%80%E6%9C%89%E7%82%B9%E4%B8%BA%E4%B8%AD%E5%BF%83%E3%80%81%E8%BE%B9%E9%95%BF%E4%B8%BA%202%20i%20%2B%201%20%E2%80%8B%E7%9A%84%E7%9F%A9%E5%BD%A2%E6%B1%82%E5%B9%B6%EF%BC%8C%E5%AE%B9%E6%96%A5%E5%8F%AF%E5%BE%97)\n\n\u8fd9\u7bc7\u662f\u8bb2\u89e3\u5927\u4f6c\u7684 $O(n^2)$ \u505a\u6cd5\uff0c\u662f @[tzc_wk](https://www.luogu.com.cn/blog/et2006/solution-cf1086f) \u5927\u4f6c\u505a\u6cd5\u7684\u8fdb\u5316\u7248\uff0c\u662f @[Apollo13\n](https://www.luogu.com.cn/blog/hfytcl/solution-cf1086f) \u7684\u8d85\u7ea7\u7248\u3002\n\n\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\n\n## \u9898\u89e3\n\n\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u80fd\u8f7b\u6613\u7684\u8fd9\u4e2a\u683c\u5b50\u6700\u521d\u7740\u706b\u7684\u65f6\u95f4\u2014\u2014\u9664\u975e\u5012\u7740\u505a\uff0c\u5426\u5219\u6ca1\u5565\u6027\u8d28\u53ef\u8a00\u3002\u56e0\u6b64\u6211\u4eec\u8f6c\u5316\u7528\u8363\u65a5\u8f6c\u5316\u4e3a:\u6700\u7ec8\u65f6\u95f4 $t$ \u51cf\u53bb\u8fd9\u4e2a\u683c\u5b50\u5df2\u7ecf\u7740\u706b\u7684\u65f6\u95f4\u3002\n\n\u4efb\u52a1\u8f6c\u5316\u4e3a\u8ba1\u7b97\u6bcf\u4e2a\u65f6\u523b\u6bcf\u4e2a\u683c\u5b50\u662f\u5426\u5df2\u7ecf\u7740\u706b\uff0c\u6ce8\u610f\u5230\u6211\u4eec\u80fd\u8f7b\u677e\u7b97\u51fa $i$ \u65f6\u523b\u5df2\u7ecf\u7740\u706b\u7684\u70b9\u6570\uff0c\u6211\u4eec\u8003\u8651\u4ece\u8fd9\u65b9\u9762\u5165\u624b\u3002\u8bbe $f(i)$ \u8868\u793a $i$ \u65f6\u523b\u5df2\u7ecf\u7740\u706b\u7684\u70b9\u6570\uff0c\u7b54\u6848\u8868\u793a\u4e3a\uff1a\n\n$$\nt\\times f(i) -\\sum_{i=0}^{t-1}f(i)\n$$\n\n\u56e0\u4e3a\u5230 $t$ \u5f88\u5927\uff0c\u90a3\u4e48\u66b4\u529b\u679a\u4e3e $\\sum$ \u80af\u5b9a\u662f\u884c\u4e0d\u901a\u7684\u3002\u4e00\u4e2a\u65b9\u9762\u662f\u4f18\u5316 $\\sum$  \u8ba1\u7b97\uff0c\u5373\u62c9\u683c\u6717\u65e5\u63d2\u503c\u7684 $O(n^3\\log_2n)$ \u505a\u6cd5\u3002\uff08\u5177\u4f53\u53ef\u4ee5\u770b\u5176\u4ed6\u535a\u5ba2\uff09\u4f46\u662f\u8fd9\u5341\u5206\u96be\u4f18\u5316\uff1a\u74f6\u9888\u662f\u679a\u4e3e $n^2$ \u4e2a\u5206\u5272\u70b9\uff0c\u4f46\u5206\u5272\u70b9\u65e0\u6cd5\u5408\u5e76\u51cf\u5c11\u6570\u91cf\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u4ece\u53e6\u4e00\u4e2a\u65b9\u9762\u6765\u8003\u8651\uff1a\u77e9\u9635\u5e76\u53ef\u4ee5\u901a\u8fc7\u8363\u65a5\u8f6c\u5316\u4e3a\u77e9\u9635\u4ea4\uff0c\u800c\u77e9\u9635\u4ea4\u6709\u4e00\u4e9b\u4f18\u7f8e\u7684\u6027\u8d28\uff08\u4ee5\u8fd9\u4e2a\u9898\u76ee\u800c\u8a00\uff09\uff1a\n\n\n> \u6211\u4eec\u5047\u8bbe\u5f53\u524d\u9009\u62e9\u7684\u5f00\u59cb\u5c31\u7740\u706b\u7684\u70b9\u96c6\u4e3a $S\\not \\in \\emptyset$\uff0c\u90a3\u4e48\u5728 $i$ \u65f6\u523b\u65f6\uff0c\u82e5\u4e0d\u8003\u8651\u77e9\u9635\u91cd\u53e0\uff0c\u90a3\u4e48\u4ed6\u4eec\u5f62\u6210\u4e86 $|S|$ \u4e2a\u957f\u5ea6\u4e3a $2i+1$ \u7684\u6b63\u65b9\u5f62\u3002\n\n> \u8003\u8651\u6c42\u8fd9\u4e9b\u77e9\u9635\u7684\u4ea4\uff0c\u7531\u4e8e\u8fd9\u4e9b\u77e9\u5f62\u7684\u4ea4\u8fd8\u662f\u77e9\u5f62\uff08\u6216\u7a7a\u96c6\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5206\u522b\u8ba8\u8bba\u4ea4\u77e9\u5f62\u7684\u6a2a\u8fb9\u957f\u548c\u7ad6\u8fb9\u957f\uff0c\u5373 $\\sum_{(x,y)\\in S}\\bigcap [x-i,x+i]$ \u548c $\\sum_{(x,y)\\in S}\\bigcap [y-i,y+i]$\uff0c\u5176\u4e2d $\\sum \\bigcap$ \u8868\u793a\u679a\u4e3e\u533a\u95f4\u5e76\u53d6\u4ea4\u96c6\u3002\n\n> \u5148\u8ba8\u8bba\u6a2a\u8fb9\u957f\u7684\u60c5\u51b5\uff0c\u7ad6\u8fb9\u957f\u7684\u60c5\u51b5\u540c\u7406\uff1a\u6ce8\u610f\u5230\u6240\u6709\u533a\u95f4\u7684\u957f\u5ea6\u76f8\u540c\uff0c\u90a3\u4e48\u77e9\u5f62\u7684\u8fb9\u957f\u80af\u5b9a\u4e3a $[x_{mn}-i,x_{mn}+i]$ \u548c $[x_{mx}-i,x_{mx}+i]$ \u7684\u4ea4\uff08\u53cd\u8bc1\u6cd5\u6613\u8bc1\uff09\uff0c\u5176\u4e2d $x_{min}$ \u548c $x_{mx}$ \u8868\u793a $S$ \u4e2d\u6700\u5c0f\u548c\u6700\u5927\u7684 $x$\u3002\u90a3\u4e48\u8fb9\u957f\u5373\u4e3a $\\max(0,2i+1-(x_{mx}-x_{mn}))$\u3002\u6211\u4eec\u8bb0 $d_x(S)=x_{mx}-x_{mn}$\n\n\n* \u90a3\u4e48 $i$ \u65f6\u523b $S$ \u7684\u4ea4\u7b54\u6848\u5373\u4e3a $\\max(2i+1-d_x(S),2_i+1-d_y(S))$\n\n\u56e0\u6b64\uff0c\u901a\u8fc7\u5bb9\u65a5\u7528\u77e9\u5f62\u4ea4\u8868\u793a\u77e9\u5f62\u5e76\uff0c\u6709\uff1a\uff08\u8bbe $p_i$ \u4e3a\u7b2c $i$ \u4e2a\u70b9\u5f00\u59cb\u7740\u706b\u7684\u70b9\u7684\u5750\u6807\uff09\uff1a\n$$\nt\\sum_{S\\in\\{p_1....p_n\\},S\\not\\in \\emptyset}(-1)^{|S|-1} \\max(2t+1-d_x(S),0)\\times \\max(2t+1-d_y(S),0) - \\sum_{i=0}^{t-1}\\sum_{S\\in\\{p_1....p_n\\},S\\not\\in \\emptyset} (-1)^{|S|-1}\\max(2i+1-d_x(S),0)\\times \\max(2_i+1-d_y(S),0)=\n$$\n$$\n\\sum_{S\\in\\{p_1....p_n\\},S\\not\\in \\emptyset}(-1)^{|S|-1}(t\\times \\max(2t+1-d_x(S),0)\\times \\max(2t+1-d_y(S),0) - \\sum_{i=0}^{t-1}\\max(2i+1-d_x(S),0)\\times max(2_i+1-d_y(S),0))\n$$\n\u8fd9\u4e2a\u5f0f\u5b50\uff1a\n\n\u662f\u53ef\u4ee5 $O(1)$ \u7b97\u7684\u3002\u7531\u4e8e\u4e0d\u91cd\u8981\uff0c\u540e\u6587\u518d\u8bb2\u3002\n\n\u6ce8\u610f\u5230\u96c6\u5408 $S$ \u7684\u8d21\u732e\u4ec5\u4e0e $x,y$ \u7684\u6781\u5dee\uff08$d_x(S),d_y(S)$) \u6709\u5173\uff0c\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u679a\u4e3e $x$ \u548c $y$ \u5750\u6807\u4e2d\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u70b9\uff0c\u8ba1\u7b97\u8fd9\u4e2a\u6781\u5dee\u7684\u8d21\u732e\u3002\n\n\u7136\u540e\u4f1a\u53d1\u73b0\u4e00\u4e2a\u6709\u8da3\u7684\u6027\u8d28\uff1a\u82e5\u96c6\u5408 $S$ \u4e2d\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u6ee1\u8db3\u4ed6\u4e0d\u80fd\u5bf9\u6781\u5dee\u9020\u6210\u8d21\u732e\uff0c\u90a3\u4e48\u53bb\u6389\u4ed6\u4e4b\u540e\u96c6\u5408 $S$ \u7684\u7edd\u5bf9\u503c\u4e0d\u53d8\uff0c\u7b26\u53f7\u6539\u53d8\u3002\n\n> \u5047\u8bbe\u8fd9\u6837\u7684\u70b9\u5728\u96c6\u5408\u4e2d\u6709 $x$ \u4e2a\uff0c\u90a3\u4e48\u96c6\u5408 $S$ \u7684\u8d21\u732e\u5728 $i$ \u65f6\u523b\u53ef\u4ee5\u8868\u793a\u6210\uff08\u5047\u8bbe $|S|-x$ \u662f\u5947\u6570\uff09\uff1a\n$$\n\\max(2i+1-d_x(S),2i+1-d_y(S))(\\sum_{i=0}^{\\lfloor\\frac{x}{2}\\rfloor}C_{x}^{2i}-\\sum_{i=0}^{\\lfloor\\frac{x-1}{2}\\rfloor}C_{x}^{2i+1})\n$$\n\n> \u90a3\u4e48\u540e\u9762\u7684 $(\\sum_{i=0}^{\\lfloor\\frac{x}{2}\\rfloor}C_{x}^{2i}-\\sum_{i=0}^{\\lfloor\\frac{x-1}{2}\\rfloor}C_{x}^{2i+1})$ \u7b49\u4e8e $0$\uff0c\u5728\u5076\u6570\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u4e00\u6837\u3002\u8bc1\u660e\u7684\u8bdd\u8003\u8651\u62c6\u6210 $C_{x}^{i}=C_{x-1}^{i-1}+C_{x-1}^{i}$\uff0c\u5404\u7b49\u4e8e $2^{x-1}$ \u5373\u53ef\u3002\n\n> \u6216\u8005\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\uff1a\u8003\u8651\u63d0\u53d6\u51fa\u6765\u4e00\u4e2a\u4e0a\u9762\u7684\u70b9\uff08\u8bbe\u4e3a $q$\uff09\uff0c\u6709 $S'=S/ \\{q\\}$\uff0c\u8bbe\u5728 $i$ \u65f6\u523b\u7684\u7b54\u6848\u4e3a $Ans$\u3002\u90a3\u4e48\u5206\u8ba8\u52a0\u5165\u548c\u4e0d\u52a0\u5165\u8fd9\u4e2a\u70b9\uff0c\u6709 $Ans-Ans=0$\u3002\n\n\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408 ,\u82e5\u4ed6\u91cc\u9762\u7684\u4e00\u4e2a\u70b9\u4e0d\u80fd\u5bf9\u6781\u5dee\u9020\u6210\u8d21\u732e\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u8003\u8651\u8fd9\u4e2a\u96c6\u5408\u7684\u8d21\u732e\u3002\n\n\u56e0\u6b64\uff0c\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u679a\u4e3e\u9020\u6210\u8d21\u732e\u6781\u5dee\u8d21\u732e\u7684\u4e00\u3001\u4e8c\u3001\u4e09\u3001\u56db\u4e2a\u70b9\uff08\u6700\u591a\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u81f3\u5c11\u5bf9\u4e00\u4e2a\u6781\u5dee\u9020\u6210\u8d21\u732e\uff0c\u4e00\u4e2a\u6781\u5dee\u53ea\u6709\u4e24\u4e2a\u70b9\u5bf9\u4ed6\u9020\u6210\u8d21\u732e\uff09\uff0c\u8fd9\u662f\u8fd9\u8fc7\u4e8e\u66b4\u529b\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u9996\u5148\u5c06\u8d77\u59cb\u70b9\u6309 $x$ \u6392\u5e8f\uff0c\u679a\u4e3e\u5bf9 $d_x(S)$  \u8d21\u732e\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\u663e\u7136\uff0c\u63a5\u4e0b\u6765\u8981\u9009\u53d6\u7684\u70b9\u5fc5\u987b\u6ee1\u8db3 $x$ \u5750\u6807\u5728\u6211\u4eec\u9009\u62e9\u7684\u4e24\u4e2a\u70b9\u5185\u3002\n\n\u5f53\u6240\u6709\u70b9\u7684 $x$ \u8f74\u5750\u6807\u4e92\u4e0d\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u80fd\u591f\u8f7b\u677e\u7684\u7b97\u51fa\u7b54\u6848\uff1a\u6211\u4eec\u679a\u4e3e\u8fd9\u6837\u7684\u77e9\u5f62\uff0c\u6ee1\u8db3\u77e9\u5f62\u5185\u90e8\u548c\u8fb9\u4e0a\u9664\u4e86\u6211\u4eec\u5f00\u59cb\u679a\u4e3e\u7684\u4e24\u4e2a\u70b9\u5916\u6ca1\u6709\u5176\u4ed6\u70b9\u3002\u663e\u7136\uff0c\u5f53\u6211\u4eec\u6700\u591a\u5728\u8fd9\u6837\u7684\u77e9\u5f62\u4e0a\u65b9\u6216\u4e0b\u65b9\uff08\u627e\u5230\u4e00\u4e2a $y$ \u5750\u6807\u5c0f\u4e8e\u6216\u5927\u4e8e\u6211\u4eec\u9009\u62e9\u7684\u70b9\u7684 $y$ \u5750\u6807\uff09\u5404\u62d3\u5c55\u4e00\u683c\u3002\u5e76\u4e14\u7531\u4e8e\u62d3\u5c55\u7684\u70b9\u7684\u6a2a\u5750\u6807\u4e25\u683c\u5728\u6211\u4eec\u679a\u4e3e\u7684\u4e24\u4e2a\u70b9\u7684\u4e2d\u95f4\uff0c\u56e0\u6b64\u4ed6\u53ea\u4f1a\u5bf9 $d_y(S)$ \u9020\u6210\u8d21\u732e\u3002\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u77e9\u5f62\u6700\u591a\u6709 $O(n^2)$ \u4e2a\uff0c\u56e0\u6b64\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u3002\n\n\u5f53 $x$ \u5750\u6807\u53ef\u80fd\u76f8\u540c\u7684\u65f6\u5019\uff0c\u4e0a\u9762\u7684\u65b9\u6cd5\u4e0d\u518d\u9002\u7528\uff0c\u8fd9\u6216\u8bb8\u610f\u5473\u7740\u6211\u4eec\u8981\u66b4\u529b\u5206\u7c7b\u8ba8\u8bba\uff1f\n\n\u5176\u5b9e\u4e0d\u7136\uff0c\u82e5\u6211\u4eec\u8ba1\u7b97\u4e86\u4e00\u4e2a\u8d21\u732e\u4e3a $0$ \u7684\u77e9\u5f62\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u6211\u4eec\u679a\u4e3e\u4e86\u4ed6\u7684\u6bcf\u4e00\u4e2a\u4e0d\u5bf9\u6781\u5dee\u8d21\u732e\u7684\u70b9\u662f\u5426\u5b58\u5728\u65f6\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u907f\u514d\u8ba8\u8bba\uff0c\u6211\u4eec\u5355\u72ec\u628a $|S|=1$ \u7684\u60c5\u51b5\u63d0\u53d6\u51fa\u6765\u8ba1\u7b97\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u6709\u5982\u4e0b\u7b97\u6cd5\uff1a\n\n* \u8ba1\u7b97 $|S|=1$ \u65f6\u5019\u7684\u60c5\u51b5\u3002\n\n* \u6309 $x$ \u8f74\u5750\u6807\u6392\u5e8f\uff08$y$ \u8f74\u5750\u6807\u65e0\u6240\u8c13\uff09\n\n* \u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u5e76\u5012\u5e8f\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u7528\u94fe\u8868\u7ef4\u62a4\u4ed6\u4eec\u7684 $y$ \u5750\u6807\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u5176\u4ed6\u7684\u70b9\u3002\n\n* \u82e5\u4e0d\u5b58\u5728\u5176\u4ed6\u7684\u70b9\uff0c\u8ba1\u7b97\u5f53\u524d\u8fd9\u4e2a\u77e9\u5f62\u7684\u8d21\u732e\u3001\u8fd9\u4e2a\u77e9\u5f62\u5f80\u4e0a\u6269\u5c55\u4e00\u683c\u7684\u8d21\u732e\u3001\u8fd9\u4e2a\u77e9\u5f62\u5f80\u4e0b\u6269\u5c55\u4e00\u683c\u7684\u8d21\u732e\u3001\u8fd9\u4e2a\u77e9\u5f62\u5f80\u4e0a\u5f80\u4e0b\u6269\u5c55\u4e00\u683c\u7684\u8d21\u732e,\u5e76\u5e26\u4e0a\u7cfb\u6570\u3002\n\n* \u4ece\u94fe\u8868\u4e2d\u5220\u53bb\u8fd9\u4e2a\u70b9\u3002\n\n\u6ce8\u610f\u5230\u5f53\u6709\u8d21\u732e\u4e3a $0$ \u7684\u77e9\u5f62\u65f6\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u5148\u679a\u4e3e\u4e86\u4e0d\u5bf9\u6781\u5dee\u4ea7\u751f\u8d21\u732e\u7684\u70b9\uff0c\u628a\u4ed6\u5220\u53bb\u540e\uff0c\u8fd9\u4e2a\u539f\u77e9\u5f62\u4e2d $d_y(S)$ \u9020\u6210\u8d21\u732e\u7684\u70b9\u76f8\u90bb\uff0c\u4e8e\u662f\u53c8\u8ba1\u7b97\u4e86\u4e00\u904d\uff0c\u62b5\u6d88\u4e86\u91cd\u590d\u7684\u8d21\u732e\u3002\n\n\n\u6ce8\u610f\u5230 $|S|$ \u4e3a $1$ \u65f6\uff0c\u6781\u5dee\u4e3a $0$\u3002\u4e58\u4e0a\u7cfb\u6570 $n$ \u5373\u53ef\u3002\n\n\u6700\u540e\u8003\u8651\u7ed9\u5b9a $x,y$\uff0c\u6c42\uff1a\n\n$$\n(t\\times \\max(2t+1-x,0)\\times \\max(2t+1-y,0) - \\sum_{i=0}^{t-1}\\max(2i+1-x,0)\\times \\max(2_i+1-y,0))\n$$\n\n\u9996\u5148\u8bbe $X=2t+1-x$\uff0c$Y=2t+1-y,d=\\lfloor\\frac{\\min(X,Y)}{2}\\rfloor$\uff0c\u524d\u4e00\u9879\u5bb9\u6613\u8ba1\u7b97\u3002\u540e\u5f0f\u8f6c\u53d8\u4e3a\uff1a\n\n$$\n\\sum_{i=0}^{d}(X-2i)(Y-2i)=\n$$\n$$\nd\\times X\\times Y-2(x+y)\\times \\sum_{i=0}^{d}i+4\\sum_{i=0}^{d}i^2\n$$\n\n\u540e\u4e24\u9879\u7528\u548c\u5f0f\u79ef\u5206\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n\u4ee3\u7801\u8fd8\u662f\u633a\u77ed\u7684\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mk make_pair\n#define pb push_back\n#define int long long\nusing namespace std;\nconst int N=5e3+10,mod=998244353;\nint power(int x,int y,int t=1){for(;y;y>>=1,x=x*x%mod)if(y&1)t=t*x%mod;return t;}\nint Inv(int x){return power(x,mod-2);}\nconst int i2=Inv(2),i6=Inv(6);\nint T,n,t,ans;\nint S1(int x){return x*(x+1)%mod*i2%mod;}\nint S2(int x){return x*(x+1)%mod*(x*2+1)%mod*i6%mod;}\nint calc(int x,int y)\n{\n    x=t*2+1-x,y=t*2+1-y;\n    if(x<0||y<0)return 0;\n    int d=min(x,y)/2,res=t*x%mod*y%mod;\n    return (res-4*S2(d)%mod+2*S1(d)%mod*(x+y)%mod-d*x%mod*y%mod+2*mod)%mod;\n}\npii a[N];\nint b[N],cnt[N],pre[N],nxt[N];\nsigned main()\n{\n    scanf(\"%lld%lld\",&n,&t);\n    for(int i=1;i<=n;i++)\n        scanf(\"%lld%lld\",&a[i].fi,&a[i].se),b[i]=a[i].se;\n    sort(a+1,a+n+1);sort(b+1,b+n+1);\n    int tot=unique(b+1,b+n+1)-b;\n    for(int i=1;i<=n;i++)a[i].se=lower_bound(b+1,b+tot,a[i].se)-b;\n    ans=n*calc(0,0)%mod;\n    for(int i=1;i<=n;i++)\n    {\n        memset(cnt,0,sizeof(cnt));\n        for(int j=i;j<=n;j++)cnt[a[j].se]++;\n        int lst=0;\n        for(int j=1;j<=n;j++)\n            if(cnt[j])pre[j]=lst,nxt[lst]=j,lst=j;\n        pre[0]=0;nxt[lst]=0;\n        for(int j=n;j>i;j--)\n        {\n            int k=a[j].se;\n            if(--cnt[k]>(k==a[i].se))continue;\n            if(cnt[a[i].se]==1)\n            {\n                int l=a[j].fi-a[i].fi,x=a[i].se,y=a[j].se;\n                if(x>y)swap(x,y);\n                if(x==y||(nxt[x]==y))\n                {\n                    ans=(ans-calc(l,b[y]-b[x])+mod)%mod;\n                    if(pre[x])ans=(ans+calc(l,b[y]-b[pre[x]]))%mod;\n                    if(nxt[y])ans=(ans+calc(l,b[nxt[y]]-b[x]))%mod;\n                    if(pre[x]&&nxt[y])ans=(ans-calc(l,b[nxt[y]]-b[pre[x]])+mod)%mod;\n                }\n            }\n            if(!cnt[k])pre[nxt[k]]=pre[k],nxt[pre[k]]=nxt[k];\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1664174941,
        "uid": 223891,
        "name": "max67",
        "ccfLevel": 0,
        "title": "CF1086F Forest Fires \u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u8bb0$f(x)$\u4e3a\u524d$x$\u79d2\u7684\u7740\u706b\u70b9\u6570\u91cf\uff0c\u8fb9\u754c$f(0)=n$\n\n\u5355\u4e2a$f$\u7684\u8ba1\u7b97\u662f\u5f88\u7b80\u5355\u7684\uff0c\u76f4\u63a5\u77e9\u9635\u9762\u79ef\u5e76\u5373\u53ef\u3002\n\n\u8003\u8651\u8ba1\u7b97\u7b54\u6848\uff0c\u7b54\u6848\n$$ans=(t+1)f(t)-\\sum_{i=1}^tf(i)$$\n\n\u8003\u8651$f(i)$\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5b83\u5176\u5b9e\u662f\u4e00\u4e2a\u5206\u6bb5\u7684\u4e8c\u6b21\u51fd\u6570\uff0c\u4e24\u4e2a\u6ca1\u6709\u76f8\u4ea4\u7684\u65f6\u5019\uff0c\u603b\u9762\u79ef\u662f\u4e8c\u6b21\u51fd\u6570\uff1b\u4e24\u4e2a\u76f8\u4ea4\u4ee5\u540e\u5b83\u4eec\u4e4b\u95f4\u201c\u4e92\u76f8\u6e17\u900f\u201d\u7684\u9762\u79ef\u53d8\u5316\u4e5f\u662f\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570\u3002\n\n\u8981\u6c42\u7684\u662fsum\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u4e8c\u6b21\u51fd\u6570\u518d\u53d6\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u7b54\u6848\u662f\u4e09\u6b21\u51fd\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u53ef\u4ee5\u9009\u53d64\u4e2a\u70b9\u6765\u8fdb\u884c\u62c9\u683c\u6717\u65e5\u63d2\u503c\uff0c\u4ee3\u5165\u81ea\u53d8\u91cf\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6$O(n^{4})$\u6216$O(n^{3}logn)$\uff0c\u53d6\u51b3\u4e8e\u77e9\u9635\u9762\u79ef\u5e76\u7684\u5b9e\u73b0\u590d\u6742\u5ea6\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define mk make_pair\nconst int inf=(int)1e9;\nconst ll INF=(ll)5e18;\nconst int MOD=998244353;\nint _abs(int x){return x<0 ? -x : x;}\nint add(int x,int y){x+=y; return x>=MOD ? x-MOD : x;}\nint sub(int x,int y){x-=y; return x<0 ? x+MOD : x;}\n#define mul(x,y) (ll)(x)*(y)%MOD\nvoid Add(int &x,int y){x+=y; if(x>=MOD) x-=MOD;}\nvoid Sub(int &x,int y){x-=y; if(x<0) x+=MOD;}\nvoid Mul(int &x,int y){x=mul(x,y);}\nint qpow(int x,int y){int ret=1; while(y){if(y&1) ret=mul(ret,x); x=mul(x,x); y>>=1;} return ret;}\nvoid checkmin(int &x,int y){if(x>y) x=y;}\nvoid checkmax(int &x,int y){if(x<y) x=y;}\nvoid checkmin(ll &x,ll y){if(x>y) x=y;}\nvoid checkmax(ll &x,ll y){if(x<y) x=y;}\n#define out(x) cerr<<#x<<'='<<x<<' '\n#define outln(x) cerr<<#x<<'='<<x<<endl\n#define sz(x) (int)(x).size()\ninline int read(){\n    int x=0,f=1; char c=getchar();\n    while(c>'9'||c<'0'){if(c=='-') f=-1; c=getchar();}\n    while(c>='0'&&c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    return x*f;\n}\nconst int N=205;\nint n,t,ans=0;\nstruct node{\n    int x,y;\n}a[N];\nstruct Line{\n    int sx,ex,y,flag;\n    bool operator < (const Line &rhs) const{\n        return y<rhs.y;\n    }\n}A[N];\n\nint val[N];\nstruct Segment_Tree{\n    int cover[N<<2],len[N<<2],bl[N<<2];\n    void pushup(int x,int l,int mid,int r){\n        if(cover[x]) len[x]=val[r]-val[l]+1;\n        else{\n            len[x]=(1ll*len[x<<1]+len[x<<1|1])%MOD;\n            if(bl[x]) Add(len[x],val[mid+1]-val[mid]-1);\n        }\n    }\n    void update(int x,int l,int r,int L,int R,int val){\n        int mid=(l+r)>>1;\n        if(L<=l&&r<=R){\n            cover[x]+=val;\n            pushup(x,l,mid,r);\n            return;\n        }\n        if(mid>=L&&mid<R) bl[x]+=val;\n        if(mid>=L) update(x<<1,l,mid,L,R,val);\n        if(mid<R) update(x<<1|1,mid+1,r,L,R,val);\n        pushup(x,l,mid,r);\n    }\n}tree;\n\nint calc(int t){\n    int tot=0,ret=0;\n    memset(tree.len,0,sizeof(tree.len)); \n    memset(tree.cover,0,sizeof(tree.cover));\n    memset(tree.bl,0,sizeof(tree.bl));\n    for(int i=1;i<=n;i++){\n        int sx=a[i].x-t,sy=a[i].y-t,ex=a[i].x+t,ey=a[i].y+t+1;\n        A[++tot]={sx,ex,sy,1}; val[tot]=sx;\n        A[++tot]={sx,ex,ey,-1}; val[tot]=ex;\n    }\n    sort(val+1,val+tot+1);\n    int m=unique(val+1,val+tot+1)-val-1;\n    for(int i=1;i<=tot;i++){\n        A[i].sx=lower_bound(val+1,val+m+1,A[i].sx)-val;\n        A[i].ex=lower_bound(val+1,val+m+1,A[i].ex)-val;\n    }\n    sort(A+1,A+tot+1);\n    for(int i=1;i<=tot;i++){\n        Add(ret,mul(tree.len[1],A[i].y-A[i-1].y));\n        tree.update(1,1,m,A[i].sx,A[i].ex,A[i].flag);\n    }\n    return sub(ret,n);\n}\nint Colli[N*N],cnt=0;\n\nvoid init(){\n    n=read(); t=read();\n    for(int i=1;i<=n;i++) a[i].x=read(),a[i].y=read();\n    Colli[++cnt]=1;\n    for(int i=1;i<=n;i++){\n        for(int j=i+1;j<=n;j++){\n            Colli[++cnt]=max((_abs(a[i].x-a[j].x)+1)/2,(_abs(a[i].y-a[j].y)+1)/2);\n        }\n    }\n    sort(Colli+1,Colli+cnt+1); cnt=unique(Colli+1,Colli+cnt+1)-Colli-1;   \n}\n\nvoid solve(){\n    int ti=1; Colli[++cnt]=inf;\n    Add(ans,mul(t,calc(t)));\n    while(Colli[ti]<t){\n        static int f[5],id[5];\n        if(Colli[ti+1]-Colli[ti]<=4){\n            for(int i=Colli[ti];i<Colli[ti+1];i++){\n                if(i==t){cout<<ans<<endl; return;}\n                else Sub(ans,calc(i));\n            }\n        }\n        else{\n            for(int i=1;i<=4;i++){\n                id[i]=Colli[ti]+i-1;\n                f[i]=add(calc(id[i]),f[i-1]);\n            }\n            int R=min(Colli[ti+1]-1,t-1),tmp=0;\n            for(int i=1;i<=4;i++){\n                int s=1;\n                for(int j=1;j<=4;j++) if(i!=j){\n                    Mul(s,mul(sub(R,id[j]),qpow(sub(i,j),MOD-2)));\n                }\n                Sub(ans,mul(f[i],s));\n            }\n            Sub(ans,tmp);\n        }\n        ti++;\n    }\n    cout<<ans<<endl;\n}\n\nint main()\n{\n    init(); solve();\n    return 0;\n}\n```",
        "postTime": 1608508561,
        "uid": 69107,
        "name": "_tourist_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1086F \u3010Forest Fires\u3011"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n&emsp;&emsp;[link](https://www.luogu.com.cn/problem/CF1086F).\n\n&emsp;&emsp;\u4e00\u4e2a\u65e0\u9650\u5927\u7684\u7f51\u683c\u56fe\u4e0a\u5728\u7b2c $0$ \u65f6\u523b\u6709 $n$ \u4e2a\u683c\u5b50\u7740\u706b\uff0c\u6bcf\u4e00\u65f6\u523b\uff0c\u6bcf\u4e2a\u7740\u706b\u7684\u683c\u5b50\u4f1a\u8ba9\u5468\u56f4**\u516b\u8fde\u901a**\u7684\u683c\u5b50\u7740\u706b\u3002\u4e00\u4e2a\u683c\u5b50\u7684\u6743\u503c\u5b9a\u4e49\u4e3a\u6b64\u683c\u5b50\u6700\u65e9\u7684\u7740\u706b\u65f6\u523b\uff0c\u6ca1\u6709\u7740\u706b\u7684\u683c\u5b50\u6743\u503c\u4e3a $0$\u3002\u6c42\u7b2c $t$ \u65f6\u523b\u6240\u6709\u683c\u5b50\u7684\u6743\u503c\u4e4b\u548c\u3002\n\n### \u6570\u636e\u89c4\u6a21\n\n&emsp;&emsp;$n\\le50;~|x_i|,|y_i|,t\\le10^8$\u3002\n\n### Solution\n\n#### Step 0 \u524d\u7f6e-\u77e9\u5f62\u9762\u79ef\u5e76\n\n&emsp;&emsp;\u6c42\u7f51\u683c\u56fe\u4e0a\u591a\u4e2a\u53ef\u4ea4\u77e9\u5f62\u7684\u8986\u76d6\u9762\u79ef\u548c\uff0c\u7528\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811 $O(n\\log n)$ \u6c42\u89e3\u3002\u8fd9\u91cc\u4e0d\u8d58\u8ff0\u3002\n\n#### Step 1\n\n&emsp;&emsp;\u4ee4 $f(i)$ \u8868\u793a $t$ \u65f6\u523b\u65f6\u6743\u503c\u4e3a $i$ \u7684\u683c\u5b50\u7684\u4e2a\u6570\u3002\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\sum_{i=0}^ti\\cdot f(i)$ \u5982\u679c\u5f3a\u884c\u6c42\u6bcf\u4e00\u4e2a $f(i)$ \u662f\u5f88\u590d\u6742\u7684\uff0c\u56e0\u4e3a\u6743\u503c\u4e3a $i$ \u7684\u683c\u5b50\u7684\u5206\u5e03\u662f\u8bb8\u591a\u4e2a\u73af\u3002\n\n&emsp;&emsp;\u6362\u79cd\u601d\u8def\u2014\u2014\u5bf9 $f(i)$ \u6c42\u524d\u7f00\u548c\uff0c\u4ee4 $g(i)=\\sum_{j=0}^if(i)$\u3002\u53ef\u4ee5\u53d1\u73b0 $g(i)$ \u5b9e\u9645\u4e0a\u5c31\u662f $i$ \u65f6\u523b\u7f51\u683c\u56fe\u4e0a\u88ab\u8986\u76d6\u7684\u9762\u79ef\u4e4b\u548c\u3002\u5e76\u4e14 $g(t)-g(i)$ \u5b9e\u8d28\u4e0a\u5c31\u662f**\u6743\u503c\u5927\u4e8e $i$ \u7684\u683c\u5b50\u6570\u91cf**\u3002\u6240\u4ee5\u7b54\u6848\u53c8\u53ef\u4ee5\u8868\u793a\u4e3a $\\sum_{i=0}^{t-1}g(t)-g(i)=tg(t)-\\sum_{i=0}^{t-1}g(i)$\u3002\n\n&emsp;&emsp;\u5982\u679c\u66b4\u529b\u6c42\u6bcf\u4e2a $g(i)$\uff0c\u590d\u6742\u5ea6 $O(tn\\log n)$\u3002~~\u539f\u5730\u7206\u70b8\u3002~~\n\n#### Step 2\n\n&emsp;&emsp;~~\u518d\u6b21\u7ed3\u5408\u672c\u6587\u4e3b\u9898\uff0c~~\u6211\u4eec\u6765\u7814\u7a76\u4e00\u4e0b\u5173\u4e8e $x$ \u7684\u51fd\u6570 $g(x)$ \u7684\u6b21\u6570\u6027\u8d28\u3002\n\n&emsp;&emsp;\u9996\u5148\uff0c\u5047\u8bbe\u77e9\u5f62\u90fd\u4e0d\u4ea4\u3002\u5355\u72ec\u8003\u8651\u6bcf\u4e2a\u77e9\u5f62\uff0c\u5b83\u7684\u9762\u79ef\u6309\u65f6\u523b\u9012\u589e\u5448\u73b0**\u5300\u52a0\u901f\u589e\u957f**\uff0c\u8fd9\u662f\u5178\u578b\u7684\u4e8c\u6b21\u51fd\u6570\u3002\u6240\u4ee5\uff0c\u5e38\u6570\uff08\u6307\u4e0e $x$ \u65e0\u5173\uff09\u4e2a\u4e8c\u6b21\u51fd\u6570\u4e4b\u548c\u4ecd\u7136\u662f\u4e8c\u6b21\u51fd\u6570\u3002\n\n&emsp;&emsp;\u63a5\u7740\uff0c\u8003\u8651\u4e24\u77e9\u5f62**\u76f8\u4ea4\u540e**\u7684\u60c5\u5f62\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u77e9\u5f62\u6574\u4f53\u770b\u505a\u4e00\u4e2a\u4e0d\u89c4\u5219\u56fe\u5f62\u3002\u5355\u72ec\u8003\u8651\u4e0a\u4e0b\u5de6\u53f3\u6bcf\u4e00\u9762\uff0c\u5176\u968f\u65f6\u523b\u589e\u52a0\uff0c\u4ecd\u662f**\u5300\u52a0\u901f\u589e\u6da8**\uff0c\u9762\u79ef\u4ea6\u4e3a\u4e8c\u6b21\u51fd\u6570\u3002\n\n&emsp;&emsp;\u7efc\u5408\u4e0a\u9762\u4e24\u4e2a\u7ed3\u8bba\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a**\u5f53\u6ca1\u6709\u65b0\u7684\u77e9\u5f62\u76f8\u4ea4\u65f6\uff0c$g(x)$ \u662f\u5173\u4e8e $x$ \u7684\u4e8c\u6b21\u51fd\u6570**\u3002\u4e5f\u5373\u662f\uff0c$g(x)$ \u662f\u4e00\u4e2a**\u5206\u6bb5\u51fd\u6570**\uff0c\u6bcf\u4e00\u6bb5\u90fd\u662f\u4e00\u4e2a**\u4e8c\u6b21\u51fd\u6570**\u3002\n\n&emsp;&emsp;\u663e\u7136\u6bb5\u6570\u4e3a $O(n^2)$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u5148\u66b4\u529b\u7b97\u51fa\u4e09\u4e2a $g(x)$ \u7684\u503c\uff0c\u4ee5\u6b64\u89e3\u51fa $g(x)=ax^2+bx+c$\uff08\u53ef\u4ee5\u63d2\u503c\uff0c\u4e5f\u53ef\u4ee5\u624b\u73a9\u89e3\u65b9\u7a0b\uff09\uff0c\u518d\u6c42\u4e00\u4e2a $g(x)$ \u7684\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n&emsp;&emsp;\u590d\u6742\u5ea6 $O(n^3\\log n)$\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\ninline int rint () {\n\tint x = 0, f = 1; char s = getchar ();\n\tfor ( ; s < '0' || '9' < s; s = getchar () ) f = s == '-' ? -f : f;\n\tfor ( ; '0' <= s && s <= '9'; s = getchar () ) x = x * 10 + ( s ^ '0' );\n\treturn x * f;\n}\n\ntemplate<typename Tp>\ninline void wint ( Tp x ) {\n\tif ( x < 0 ) putchar ( '-' ), x = ~ x + 1;\n\tif ( 9 < x ) wint ( x / 10 );\n\tputchar ( x % 10 ^ '0' );\n}\n\ninline int abs_ ( const int x ) { return x < 0 ? -x : x; }\n\ninline int max_ ( const int a, const int b ) { return a < b ? b : a; }\n\nconst int MAXN = 50, MOD = 998244353, INV2 = 499122177, INV6 = 166374059;\nint n, t, x[MAXN + 5], y[MAXN + 5];\n\nnamespace MatrixInter {\n\nint tmp[MAXN * 4 + 5];\n\nclass SegmentTree {\nprivate:\n\tint cover[MAXN << 4], cnt[MAXN << 4];\n\npublic:\n\tinline void clear ( const int rt, const int l, const int r ) {\n\t\tcover[rt] = cnt[rt] = 0;\n\t\tif ( l == r ) return ;\n\t\tint mid = l + r >> 1;\n\t\tclear ( rt << 1, l, mid ), clear ( rt << 1 | 1, mid + 1, r );\n\t}\n\tinline void pushup ( const int rt, const int l, const int r ) {\n\t\tcover[rt] = cnt[rt] ? tmp[r] - tmp[l - 1] : cover[rt << 1] + cover[rt << 1 | 1];\n\t}\n\tinline void add ( const int rt, const int al, const int ar, const int l, const int r, const int v ) {\n\t\tif ( al <= l && r <= ar ) {\n\t\t\tif ( ! ( cnt[rt] += v ) ) cover[rt] = l == r ? 0 : cover[rt << 1] + cover[rt << 1 | 1];\n\t\t\telse cover[rt] = tmp[r] - tmp[l - 1];\n\t\t\treturn ;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tif ( al <= mid ) add ( rt << 1, al, ar, l, mid, v );\n\t\tif ( mid < ar ) add ( rt << 1 | 1, al, ar, mid + 1, r, v );\n\t\tpushup ( rt, l, r );\n\t}\n\tinline int getTop () { return cover[1]; }\n} st;\n\nstruct Event { int l, r, opt; };\nstd :: vector<Event> evt[MAXN * 4 + 5];\n\ninline int calcS ( const int t ) {\n\tint cnt = 0;\n\tfor ( int i = 1; i <= n; ++ i ) {\n\t\ttmp[++ cnt] = x[i] - t - 1, tmp[++ cnt] = x[i] + t;\n\t\ttmp[++ cnt] = y[i] - t - 1, tmp[++ cnt] = y[i] + t;\n\t}\n\tstd :: sort ( tmp + 1, tmp + cnt + 1 );\n\tcnt = std :: unique ( tmp + 1, tmp + cnt + 1 ) - tmp - 1;\n\tst.clear ( 1, 1, cnt );\n\tfor ( int i = 1; i <= cnt; ++ i ) evt[i].clear ();\n\tfor ( int i = 1, up, dn, le, ri; i <= n; ++ i ) {\n\t\tup = std :: lower_bound ( tmp + 1, tmp + cnt + 1, y[i] - t - 1 ) - tmp + 1;\n\t\tdn = std :: lower_bound ( tmp + 1, tmp + cnt + 1, y[i] + t ) - tmp;\n\t\tle = std :: lower_bound ( tmp + 1, tmp + cnt + 1, x[i] - t - 1 ) - tmp;\n\t\tri = std :: lower_bound ( tmp + 1, tmp + cnt + 1, x[i] + t ) - tmp;\n\t\tevt[le].push_back ( { up, dn, true } ), evt[ri].push_back ( { up, dn, false } );\n\t}\n\tint ret = 0;\n\tfor ( int i = 1; i <= cnt; ++ i ) {\n\t\tret = ( ret + 1ll * st.getTop () * ( tmp[i] - tmp[i - 1] ) % MOD ) % MOD;\n\t\tfor ( Event e: evt[i] ) st.add ( 1, e.l, e.r, 1, cnt, e.opt ? 1 : -1 );\n\t}\n\treturn ret;\n}\n\n} // namespace MatrixInter.\n\nint itime[MAXN * MAXN + 5];\n\ninline int preS ( const int n ) { return n * ( n + 1ll ) % MOD * INV2 % MOD; }\n\ninline int sqrS ( const int n ) { return n * ( n + 1ll ) % MOD * ( n * 2ll + 1 ) % MOD * INV6 % MOD; }\n\nint main () {\n#define MI MatrixInter\n\tn = rint (), t = rint ();\n\tfor ( int i = 1; i <= n; ++ i ) x[i] = rint (), y[i] = rint ();\n\tint icnt = 0;\n\tfor ( int i = 1; i < n; ++ i ) {\n\t\tfor ( int j = i + 1, tmpt; j <= n; ++ j ) {\n\t\t\ttmpt = max_ ( abs_ ( x[i] - x[j] ), abs ( y[i] - y[j] ) ) >> 1;\n\t\t\tif ( tmpt <= t ) itime[++ icnt] = tmpt;\n\t\t\tif ( ++ tmpt <= t ) itime[++ icnt] = tmpt;\n\t\t}\n\t}\n\titime[++ icnt] = 0, itime[++ icnt] = t;\n\tstd :: sort ( itime + 1, itime + icnt + 1 );\n\ticnt = std :: unique ( itime + 1, itime + icnt + 1 ) - itime - 1;\n\tint ans = 1ll * t * MI :: calcS ( t ) % MOD;\n\tfor ( int i = 1, tl, tr, a, b, c, ta, tb; i < icnt; ++ i ) {\n\t\tif ( ( tl = itime[i] ) + 3 > ( tr = itime[i + 1] ) ) {\n\t\t\tfor ( ; tl < tr; ++ tl ) ans = ( ans - MI :: calcS ( tl ) + MOD ) % MOD;\n\t\t\tcontinue;\n\t\t}\n\t\tc = MI :: calcS ( tl ), ta = MI :: calcS ( tl + 1 ), tb = MI :: calcS ( tl + 2 );\n\t\ta = ( ( tb - ta * 2ll % MOD + c ) % MOD + MOD ) % MOD * INV2 % MOD;\n\t\tb = ( ( ta - c - a ) % MOD + MOD ) % MOD;\n\t\tans = ( ans - 1ll * a * sqrS ( tr - tl - 1 ) % MOD + MOD ) % MOD;\n\t\tans = ( ans - 1ll * b * preS ( tr - tl - 1 ) % MOD + MOD ) % MOD;\n\t\tans = ( ans - 1ll * c * ( tr - tl ) % MOD + MOD ) % MOD;\n\t}\n\treturn wint ( ans ), putchar ( '\\n' ), 0;\n}\n```",
        "postTime": 1592197114,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1086F \u3010Forest Fires\u3011"
    }
]