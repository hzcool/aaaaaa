[
    {
        "content": "\u7b80\u6d01\u7684\u9898\u610f\u7ffb\u8bd1\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u51f8\u5305\u5f62\u72b6\u7684\u5438\u5c18\u5668\uff0c\u95ee\u4f60\u8fd9\u4e2a\u5438\u5c18\u5668\u5728\u6e05\u7406\u77e9\u5f62\u7684\u89d2\u843d\u65f6\uff0c\u9057\u7559\u4e0b\u7684\u6700\u5c0f\u9762\u79ef\uff0c\u53ef\u4ee5\u65cb\u8f6c\n\n~~\u90fd\u7ffb\u8bd1\u6210\u8fd9\u6837\u4e86\uff0c\u660e\u663e~~**\u8fd9\u9898\u9700\u8981\u8ba1\u7b97\u51e0\u4f55**\n\n![tmp.png](https://i.loli.net/2018/11/25/5bfa412598c34.png)\n\n\u5982\u56fe\uff0c\u6b7b\u89d2\u7684\u9762\u79ef\u662f$S_{\\Delta ABC}-S_1$ (\u6ce8\uff1a1\u53ef\u4e3a\u4efb\u4f55\u8fb9\u5f62)\uff0c\u660e\u663e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u56fa\u5b9a\u7684A\u548cB\uff0c$S_1$\u7684\u9762\u79ef\u662f\u56fa\u5b9a\u7684\u4e14$\\Delta ABC$\u7684\u9ad8AB\u4e5f\u662f\u56fa\u5b9a\u7684\u3002\u4e8e\u662f\uff0c**\u4e3a\u4e86\u8ba9\u6b7b\u89d2\u9762\u79ef\u6700\u5c0f\uff0c\u5c31\u662f\u8ba9$\\Delta ABC$ AB\u8fb9\u4e0a\u7684\u9ad8\u6700\u5c0f**\u3002\u56e0\u4e3a\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u659c\u8fb9\u7684\u4e2d\u7ebf\u7b49\u4e8e\u659c\u8fb9\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u70b9O\u5728\u4ee5AB\u4e3a\u76f4\u5f84\u7684\u5706\u4e0a\uff0c\u6240\u4ee5**\u5f53\u4e09\u89d2\u5f62\u7684\u8fb9\u4e0e\u591a\u8fb9\u5f62\u7684\u8fb9\u91cd\u5408\u65f6\u9ad8\u6700\u5c0f**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8be5\u591a\u8fb9\u5f62\u7684n\u6761\u8fb9\uff0c\u8ba8\u8bba\u5176\u9760\u5de6\u5899\u6216\u9760\u4e0b\u5899\uff0c\u7136\u540e\u901a\u8fc7\u4f5c\u5782\u76f4\u4e8e\u8be5\u8fb9\u7684\u7ebf\u6c42\u51fa\u8d34\u5728\u53e6\u4e00\u5899\u4e0a\u79bb\u70b9O\u6700\u8fd1\u7684\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u6b64\u65f6\u9762\u79ef\uff0c\u53d6\u6700\u5c0f\u503c\u3002\u7ef4\u62a4\u5185\u90e8\u591a\u8fb9\u5f62\u7684\u9762\u79ef\u65f6\u53ef\u5c06\u5176\u5206\u5272\u6210\u82e5\u5e72\u4e09\u89d2\u5f62\uff0c\u7136\u540e\u7528\u53c9\u79ef\u7ef4\u62a4\u3002\n\n\u6700\u540e\uff0c\u6ce8\u610f\u7cbe\u5ea6\u63a7\u5236 \n\n\u4ee3\u7801\u5982\u4e0b\n\n```\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nlong long sqr(long long x) __attribute__((always_inline));\n\nlong long sqr(long long x) {\n\treturn x * x;\n}\n\nstruct Point {\n\tPoint(int x = 0, int y = 0) : x(x), y(y) {}\n\tinline Point &operator -=(const Point &o) {\n\t\tx -= o.x;\n\t\ty -= o.y;\n\t\treturn *this;\n\t}\n\tdouble dis() const __attribute__((always_inline));\n\tint x, y;\n};\n\ndouble Point::dis() const {\n\treturn sqrt(sqr(x) + sqr(y));\n}\n\ninline Point operator - (Point a, const Point &b) {\n\treturn a -= b;\n}\n\nlong long det(const Point &a, const Point &b) __attribute__((always_inline));\nlong long dot(const Point &a, const Point &b) __attribute__((always_inline));\nlong long get_sum(int i,int j) __attribute__((always_inline));\nint nxt(int i) __attribute__((always_inline));\ndouble solve() __attribute__((always_inline));\n\nlong long det(const Point &a, const Point &b) {\n\treturn (long long)a.x * b.y - (long long)a.y * b.x;\n}\n\nlong long dot(const Point &a, const Point &b) {\n\treturn (long long)a.x * b.x + (long long)a.y * b.y;\n}\n\nconst int N = 40000;\n\nint n;\nPoint p[N];\nlong long sum[N + 1];\n\nlong long get_sum(int i, int j) {\n\tlong long s = sum[j] - sum[i];\n\treturn i <= j ? s : sum[n] + s;\n}\n\nint nxt(int i) {\n\treturn (i + 1) % n;\n}\n\ndouble solve() {\n\tsum[0] = 0;\n\tfor (int i = 0; i < n; ++ i) sum[i + 1] = sum[i] + det(p[i], p[(i + 1) % n]);\n\tdouble result = INFINITY;\n\tfor (int i = 0, j = 0; i < n; ++ i) {\n\t\twhile (dot(p[nxt(i)] - p[i], p[nxt(j)] - p[j]) > 0) j = nxt(j);\n\t\tPoint a = p[nxt(i)] - p[i];\n\t\tPoint b = p[j] - p[i];\n\t\tdouble n = a.dis();\n\t\tresult = min(result, det(a, b) / n * dot(a, b) / n - (get_sum(i, j) + det(p[j], p[i])));\n\t\tif (i == j) return 0.;\n\t}\n\treturn .5 * result;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; ++ i) scanf(\"%d%d\", &p[i].x, &p[i].y);\n\tsolve();\n\tif (sum[n] < 0) reverse(p, p + n);\n\tdouble result = solve();\n\tfor (int i = 0; i < n; ++ i) p[i].x *= -1;\n\treverse(p, p + n);\n\tresult = min(result, solve());\n\tprintf(\"%.10f\\n\", result);\n\treturn 0;\n}\n```",
        "postTime": 1543129011,
        "uid": 119553,
        "name": "rEdWhitE_uMbrElla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF54E \u3010Vacuum \u0421leaner\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\n- \u5bf9\u4e8e\u4e00\u4e2a\u51f8\u5305\u5f62\u72b6\u7684\u5438\u5c18\u5668\uff0c\u95ee\u4f60\u8fd9\u4e2a\u5438\u5c18\u5668\u5728\u6e05\u7406\u77e9\u5f62\u7684\u89d2\u843d\u65f6\uff0c\u9057\u7559\u4e0b\u7684\u6700\u5c0f\u9762\u79ef\u3002\n- \u53ef\u4ee5\u65cb\u8f6c\u3002\n---\n\n## \u9898\u76ee\u5206\u6790 \n- \u8ba1\u7b97\u4ece\u7b2ci\u4e2a\u70b9\u5230\u7b2cj\u4e2a\u70b9\u6240\u56f4\u6210\u7684\u9762\u79ef\uff0c\uff08\u4ecei\u5230j \u5411\u91cf\u65cb\u8f6c\u4e0d\u80fd\u8d85\u8fc790\u5ea6\uff09\u3002\n- \u7b97\u51fa\u51f8\u5305\u7684i\u4e0ej\u8fde\u7ebf\u5728\u77e9\u5f62\u4e2d\u5bf9\u5e94\u7684\u957f\u4e0e\u5bbd\uff0c\u7528\u957f\uff0c\u5bbd\uff0c\u4ee5\u53cai\uff0cj\u8fde\u7ebf\u6784\u6210\u7684\u4e09\u89d2\u5f62\u51cf\u53bb\u524d\u9762\u7684\u9762\u79ef\uff0c\u5c31\u662f\u591f\u4e0d\u5230\u7684\u89d2\u843d\uff0c\u6700\u540e\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n- \u6ce8\u610f\u987a\u65f6\u9488\u9006\u65f6\u9488\u90fd\u8981\u6765\u4e00\u6b21\u3002\n\n## $Code$\n```cpp\n\n#include<stdio.h>\n#include<math.h>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct P\n{\n    double x,y;\n    P(double a=0,double b=0):x(a),y(b){}\n    P operator +(const P &a)const{\n        return P(x+a.x,y+a.y);\n    }\n    P operator -(const P &a)const{\n        return P(x-a.x,y-a.y);\n    }\n    P operator *(const double a)const{\n        return P(x*a,y*a);\n    }\n    P operator /(const double a)const{\n        return P(x/a,y/a);\n    }\n    double operator *(const P &a)const{\n        return x*a.x+y*a.y;\n    }\n    double operator ^(const P &a)const{\n        return x*a.y-y*a.x;\n    }\n};\ndouble dis(P a,P b)\n{\n    return sqrt((b-a)*(b-a));\t//\u5e73\u65b9\u5dee\n}\nP p[100100];\nint n;\ndouble sum[100100];\ndouble solve()\n{\n    for(int i=n;i<n+n;i++) p[i]=p[i-n];\n    sum[0]=0;\n    for(int i=1;i<2*n;i++) {sum[i]=sum[i-1]+(p[i]^p[i-1])/2.0;}\n    int j=0;\n    double ans=1e18;\n    for(int i=0;i<n;i++)\n    {\n        if(j<=i) j=i+1;\n        while(j+1<2*n&&(((p[j+1]-p[i])*(p[i+1]-p[i]))>=((p[j]-p[i])*(p[i+1]-p[i])))) j++;\n        //cout<<\"j=\"<<j<<endl;\n        if(j==i+1) ans=0;\n        if(j>=2*n) break;\n        double s=sum[j]-sum[i];\n \n        s+=(p[i]^p[j])/2.0;\n \n        double x=((p[j]-p[i])*(p[i+1]-p[i]))/dis(p[i],p[i+1]);\n        double y=sqrt(((p[i]-p[j])*(p[i]-p[j]))-x*x);\n        //cout<<\"s=\"<<s<<\" x=\"<<x;\n        //printf(\" y=%.10lf\\n\",y);\n        ans=min(ans,x*y/2.0-fabs(s));\n    }\n    return ans;\n}\nint main()\n{\n    while(scanf(\"%d\",&n)!=EOF)\t//\u76f4\u5230\u8f93\u5165\u7ed3\u675f\n    {\n        for(int i=0;i<n;i++)\n            scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n        double ans=solve();\n        for(int i=0;i<n/2;i++)\n            swap(p[i],p[n-i-1]);\n        ans=min(ans,solve());\n        printf(\"%.10lf\\n\",ans);\t//\u4fdd\u755910\u4f4d\u5c0f\u6570\n    }\n    return 0;\t\u3001//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n\n```",
        "postTime": 1584498562,
        "uid": 327385,
        "name": "luosw",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF54E \u3010Vacuum \u0421leaner\u3011"
    },
    {
        "content": "## $\\text{Description}$\n\u5bf9\u4e8e\u4e00\u4e2a $n$ \u4e2a\u7ed3\u70b9\u7684\u51f8\u5305\u5f62\u72b6\u7684\u5438\u5c18\u5668\uff0c\u95ee\u4f60\u8fd9\u4e2a\u5438\u5c18\u5668\u5728\u6e05\u7406\u77e9\u5f62\u7684\u89d2\u843d\u65f6\uff0c\u9057\u7559\u4e0b\u7684\u6700\u5c0f\u9762\u79ef\uff0c\u53ef\u4ee5\u65cb\u8f6c.  \n$n\\le 4\\times10^4$.\n## $\\text{Solution}$\n\u53ef\u80fd\u662f\u5165\u95e8\u96be\u5ea6\u7684\u8ba1\u7b97\u51e0\u4f55\u4e86.  \n\u4e0d\u96be\u53d1\u73b0\u6700\u4f18\u7684\u65f6\u5019\u5899\u4e00\u5b9a\u548c\u4e00\u6761\u8fb9\u91cd\u5408\uff08\u53ef\u4ee5\u901a\u8fc7\u753b\u5706\u8bc1\u660e\uff09.  \n\u90a3\u4e48\u6211\u4eec\u5c31\u66b4\u529b\u679a\u4e3e\u8fd9\u6761\u8fb9\uff0c\u53cc\u6307\u9488\u7ef4\u62a4\u5899\u53e6\u4e00\u6761\u8fb9\u8fc7\u7684\u9876\u70b9\u5373\u53ef.  \n\u6700\u540e\u628a\u6240\u6709\u70b9\u7ffb\u8f6c\u8fc7\u6765\u518d\u505a\u4e00\u6b21.  \n\u5b9e\u73b0\u4e0a\u7684\u6280\u5de7\uff1a  \n1. \u5bfb\u627e\u53e6\u4e00\u6761\u5899\u8fb9\u8fc7\u7684\u70b9\u53ef\u4ee5\u901a\u8fc7\u5224\u65ad\u5411\u91cf\u5728\u5f53\u524d\u8fb9\u4e0a\u6295\u5f71\u7684\u5927\u5c0f\u6765\u5b9e\u73b0.\n2. \u8ba1\u7b97\u9762\u79ef\u65f6\u7528\u5899\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u51cf\u53bb\u591a\u8fb9\u5f62\u4e24\u4e2a\u9876\u70b9\u622a\u51fa\u7684\u591a\u8fb9\u5f62\u9762\u79ef\uff0c\u8fd9\u4e2a\u591a\u8fb9\u5f62\u9762\u79ef\u53ef\u4ee5\u5904\u7406\u4e00\u4e2a\u9762\u79ef\u5173\u4e8e\u9876\u70b9\u53c9\u79ef\u7684\u524d\u7f00\u548c\u518d\u51cf\u53bb\u8fd9\u4e24\u4e2a\u9876\u70b9\u53c9\u79ef\u6c42\u51fa\uff08\u5efa\u8bae\u753b\u56fe\u7406\u89e3\uff09.\uff08\u7b97\u51fa\u7684\u9762\u79ef **\u53ef\u80fd\u4e3a\u8d1f**\uff0c\u6240\u4ee5\u8981\u53d6\u7edd\u5bf9\u503c\uff09\n3. \u5899\u89d2\u4e09\u89d2\u5f62\u7684\u8fb9\u957f\u4e00\u6761\u53ef\u4ee5\u901a\u8fc7\u6295\u5f71\u6765\u6c42\uff0c\u53e6\u4e00\u6761\u52fe\u80a1\u5b9a\u7406\u5373\u53ef.\n\n\u5177\u4f53\u5b9e\u73b0\u5efa\u8bae\u53c2\u8003\u4ee3\u7801\u7406\u89e3.  \n\n## $\\text{Code}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n//#define double long double\n#define debug(...) fprintf(stderr,__VA_ARGS__)\nconst int N=1e5+100;\nconst int mod=1e9+7;\ninline ll read(){\n  ll x(0),f(1);char c=getchar();\n  while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n  while(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n  return x*f;\n}\n\nint n,m,k;\nstruct P{\n  double x,y;\n}p[N];\ninline P operator + (P a,P b){return (P){a.x+b.x,a.y+b.y};}\ninline P operator - (P a,P b){return (P){a.x-b.x,a.y-b.y};}\ninline double operator * (P a,P b){return a.x*b.x+a.y*b.y;}\ninline double operator ^ (P a,P b){return a.x*b.y-a.y*b.x;}\ninline double dis(P a,P b){return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));}\ninline double calc(double x,double y){return sqrt(x*x-y*y);}\ndouble sum[N];\ndouble solve(){\n  double res=2e18;\n  for(int i=n+1;i<=n+n;i++) p[i]=p[i-n];\n  for(int i=2;i<=n+n;i++) sum[i]=sum[i-1]+(p[i]^p[i-1])/2;\n  int j=1;\n  for(int i=1;i<=n;i++){\n    j=max(j,i+1);\n    while(j+1<=n*2&&(p[i+1]-p[i])*(p[j+1]-p[i])>=(p[i+1]-p[i])*(p[j]-p[i])) ++j;\n    if(j==i+1) res=0;\n    if(j>2*n) break;\n    double s=sum[j]-sum[i]+(p[i]^p[j])/2;\n    double x=(p[j]-p[i])*(p[i+1]-p[i])/dis(p[i+1],p[i]);\n    double y=calc(dis(p[i],p[j]),x);\n    res=min(res,x*y/2-abs(s));\n    //printf(\"i=%d j=%d s=%lf x=%lf y=%lf res=%lf\\n\",i,j,s,x,y,x*y/2-s);\n  }\n  return res;\n}\nsigned main(){\n  #ifndef ONLINE_JUDGE\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n  #endif\n  n=read();\n  for(int i=1;i<=n;i++) p[i].x=read(),p[i].y=read();\n  double ans=solve();\n  reverse(p+1,p+1+n);\n  ans=min(ans,solve());\n  printf(\"%.10lf\\n\",ans);\n  return 0;\n}\n/*\n\n*/\n\n```\n",
        "postTime": 1639980413,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "CF54E Vacuum \u0421leaner"
    }
]