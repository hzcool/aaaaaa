[
    {
        "content": "![](https://cdn.luogu.com.cn/upload/image_hosting/1yju9cc8.png)\n\n\u6709\u4e24\u4e2a\u989c\u8272\u76f8\u540c\u7684\u70b9 $A,B$ \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5b83\u4eec\u9020\u6210\u7684\u5f71\u54cd\u662f\u5404\u81ea\u671d\u5916\u7684\u4e24\u4e2a\u5b50\u6811\u5185\u6240\u6709\u70b9\u4e0d\u80fd\u4f5c\u4e3a\u7b54\u6848\u4e86\u3002\u800c\u4e2d\u95f4\u90e8\u5206\u6682\u65f6\u5b89\u5168\uff0c\u4e0d\u4f1a\u53d7\u8fd9\u4e24\u4e2a\u540c\u8272\u70b9\u5f71\u54cd\u3002\u4e00\u4e2a\u601d\u8def\u662f\uff1a\u5bf9\u6240\u6709\u7684\u540c\u8272\u70b9\u5bf9\uff0c\u6807\u8bb0\u5b83\u4eec\u671d\u5916\u7684\u4e24\u4e2a\u5b50\u6811\uff0c\u6700\u540e\u6240\u6709\u6ca1\u6807\u8bb0\u8fc7\u7684\u70b9\u5c31\u80fd\u8bb0\u5165\u7b54\u6848\u4e86\u3002\n\n\u8981\u505a\u7684\u8bdd\u80af\u5b9a\u5f97\u8f6c\u6210\u6709\u6839\u6811\u6765\u505a\uff0c\u89c4\u5b9a $1$ \u4e3a\u6839\uff0c\u8fd9\u65f6\u5019\u6bcf\u4e2a\u540c\u8272\u70b9\u5bf9\u6709\u4e24\u79cd\u53ef\u80fd\u6027\uff1a\n\n- \u975e\u7956\u5b59\u5173\u7cfb\n- \u7956\u5b59\u5173\u7cfb\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5728 DFS \u5230\u7ed3\u70b9 $u$ \u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u73b0\u9664\u4e86 $u$ \u5b50\u6811\u5916\u8fd8\u5b58\u5728\u989c\u8272 $a_u$ \u7684\u8bdd\uff0c\u5c31\u628a\u6574\u4e2a $u$ \u5b50\u6811\u7ed9\u6807\u8bb0\u3002\n\n\u6807\u8bb0\u5b50\u6811\uff0c\u53ea\u9700\u6c42\u51fa\u4e00\u8fdb\u4e00\u51fa\u7684\u65f6\u95f4\u6233\uff0c\u7136\u540e\u5dee\u5206\u6807\u8bb0\u6765\u5b9e\u73b0\u533a\u95f4\u52a0\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53c2\u8003\u4e0b\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8ymi0ija.png)\n\n\u5bf9\u665a\u8f88 $B$ \u6765\u8bf4\uff0c\u540c\u6837\u662f\u6807\u8bb0\u5b50\u6811\uff0c\u4f46\u5bf9\u7956\u5148 $A$ \u6765\u8bf4\uff0c\u6807\u8bb0\u7684\u662f\u9664\u4e86 $B$ \u6240\u5728\u7684 $S$ \u5b50\u6811\u5916\u7684\u4efb\u4f55\u7ed3\u70b9\u3002\n\n\u7efc\u5408\u4e00\u4e0b\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\uff1a\n\n- \u5728 DFS \u5230\u7ed3\u70b9 $u$ \u65f6\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u5b50\u6811 $S$ \u4e5f\u5305\u542b\u989c\u8272 $a_u$ \uff0c\u90a3\u5c31\u6807\u8bb0\u9664 $S$ \u5b50\u6811\u5916\u7684\u5176\u4ed6\u6240\u6709\u70b9\uff08\u5728\u65f6\u95f4\u6233\u4e0a\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u533a\u95f4\uff09\u3002\n\n- \u5728 DFS \u5230\u7ed3\u70b9 $u$ \u65f6\uff0c\u7edf\u8ba1\u5b8c $u$ \u5b50\u6811\u7684 $a_u$ \u7684\u989c\u8272\u540e\uff0c\u53d1\u73b0\u5c11\u4e8e\u603b\u5171\u7684 $a_u$ \u989c\u8272\uff0c\u8bf4\u660e\u5916\u90e8\u4e5f\u5b58\u5728 $a_u$\uff0c\u90a3\u5c31\u628a\u6574\u4e2a $u$ \u5b50\u6811\u6807\u8bb0\u3002\n\n\u7136\u540e\u600e\u4e48\u7edf\u8ba1\u989c\u8272\u4e2a\u6570\uff1f\u76f4\u63a5\u7528`map` \u8bb0\u5f55\u5168\u5c40\u6bcf\u4e2a\u989c\u8272\u7684\u4e2a\u6570\uff0c\u9012\u5f52\u540e\u548c\u9012\u5f52\u524d\u7684\u5dee\u503c\u5c31\u662f\u5b50\u6811\u91cc\u8fd9\u79cd\u989c\u8272\u7684\u4e2a\u6570\u3002\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\nconst LL mod = 1e9 + 7;\nconst int N = 200005;\n\nvector<int> G[N];\nint a[N], d[N];\nint dfn[N], out[N], ck;\nmap<int, int> mp, c;\nvoid dfs(int u, int fa) {\n    dfn[u] = ++ck;\n    int tt = c[a[u]];\n    c[a[u]]++;\n    for (auto v : G[u]) {\n        if (v == fa) continue;\n        int tmp = c[a[u]];\n        dfs(v, u);\n        if (c[a[u]] > tmp) {\n            d[1]++, d[dfn[v]]--;\n            d[out[v] + 1]++;\n        }\n    }\n    out[u] = ck;\n    if (c[a[u]] - tt < mp[a[u]]) {\n        d[dfn[u]]++, d[out[u] + 1]--;\n    }\n}\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &a[i]);\n        mp[a[i]]++;\n    }\n    for (int i = 1; i < n; i++) {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        G[u].push_back(v);\n        G[v].push_back(u);\n    }\n    dfs(1, 0);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        d[i] += d[i - 1];\n        if (d[i] == 0) ans++;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1610236272,
        "uid": 54357,
        "name": "OMG_wc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1467E \u3010Distinctive Roots in a Tree\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1467E)\n\n## \u601d\u8def\n\n\u8fd9\u79cd\u96be\u5ea6\u7684\u9898\u6709 $2500$\uff1f\n\n\u8003\u8651\u6211\u4eec\u5148\u7edf\u8ba1\u6839\u8282\u70b9\u80fd\u5426\u88ab\u8bb0\u5165\u7b54\u6848\uff0c\u8fd9\u662f\u7b80\u5355\u7684\uff0c\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5185\u662f\u5426\u6709\u4e0e\u5b83\u76f8\u540c\u989c\u8272\u7684\u8282\u70b9\u5373\u53ef\u3002\n\n\u7136\u540e\u8003\u8651\u6362\u6839\uff0c\u628a\u6839\u4ece $u$ \u6362\u5230\u5b83\u7684\u4e00\u4e2a\u5b50\u8282\u70b9 $v$\uff0c\u53d7\u5230\u5f71\u54cd\u7684\u53ea\u6709 $u$ \u548c $v$\uff0c\u800c\u4e14\u5f71\u54cd\u4e5f\u5f88\u597d\u7b97\uff1a\n\n+ $u$ \u7684\u5b50\u6811\u4ece\u5168\u4f53\u8282\u70b9\u53d8\u6210\u4e86\u5168\u4f53\u8282\u70b9\u9664\u53bb\u5f53\u524d $v$ \u7684\u5b50\u6811\u3002\n+ $v$ \u7684\u5b50\u6811\u53d8\u6210\u4e86\u5168\u4f53\u8282\u70b9\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u590d\u6742\u5ea6 $\\mathcal O(n \\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n//A tree without skin will surely die.\n//A man without face will be alive\n#include<bits/stdc++.h>\nusing namespace std;\n#define all(x) (x).begin(),(x).end()\nint const N=2e5+10;\nint a[N],t[N],siz[N],ct[N],f[N],s[N],dfn[N],cnt;\nvector<int>b[N],c[N];\ninline void dfs(int x,int fa){\n    dfn[x]=++cnt,siz[x]=1;\n    for (auto v:b[x])\n        if (v^fa) dfs(v,x),siz[x]+=siz[v];\n}\nint sum,ans;\ninline void bfs(int x,int fa){\n    ans+=!sum;\n    for (auto v:b[x]){\n        if (v==fa) continue;\n        int la=s[v],pre=sum,La=s[x];\n        sum-=s[x];\n        s[x]=!!(ct[a[x]]-1-(upper_bound(all(c[a[x]]),dfn[v]+siz[v]-1)-ower_bound(all(c[a[x]]),dfn[v])));\n        sum+=s[x];\n        sum-=s[v],\n        s[v]=!!(ct[a[v]]-1),\n        sum+=s[v];\n        bfs(v,x);\n        sum=pre,s[v]=la;\n        s[x]=La;\n    }\n}\nsigned main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    int n;cin>>n;\n    for (int i=1;i<=n;++i)\n        cin>>a[i],t[i]=a[i];\n    sort(t+1,t+n+1);\n    int l=unique(t+1,t+n+1)-t-1;\n    for (int i=1;i<=n;++i)\n        a[i]=lower_bound(t+1,t+l+1,a[i])-t,\n        ++ct[a[i]];\n    for (int i=1;i<n;++i){\n        int u,v;cin>>u>>v;\n        b[u].push_back(v),\n        b[v].push_back(u);\n    }\n    dfs(1,0);\n    for (int i=1;i<=n;++i) c[a[i]].push_back(dfn[i]);\n    for (int i=1;i<=n;++i) sort(all(c[i]));\n    for (int i=1;i<=n;++i){\n        int L=upper_bound(all(c[a[i]]),dfn[i])-c[a[i]].begin();\n        int R=upper_bound(all(c[a[i]]),dfn[i]+siz[i]-1)-c[a[i]].begin();\n        if (L<R) s[i]=1;\n    }\n    for (int i=1;i<=n;++i) sum+=s[i];\n    bfs(1,0);\n    cout<<ans<<'\\n';\n    return 0;\n}\n```",
        "postTime": 1677652576,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF1467E Distinctive Roots in a Tree"
    },
    {
        "content": "\u7a81\u7136\u53d1\u73b0\u6df1\u7a76\u4e00\u4e9b\u6811\u4e0a\u95ee\u9898\u8fd8\u662f\u633a\u6709\u610f\u601d\u7684\u54c8\u3002\n\n\u663e\u7136\u5bf9\u4e8e\u540c\u4e00\u79cd\u6743\u503c\u7684\u4efb\u610f\u4e24\u4e2a\u7ed3\u70b9\uff0c\u5176\u4e24\u7aef\u7684\u90e8\u5206\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n![](https://gitee.com/May2nd/pic-cloud/raw/master/14269432-1.png)\n\n\u7ef4\u62a4\u4e24\u4e2a\u6807\u8bb0\u8868\u793a\u5b50\u6811\u5185\u5747\u4e0d\u5408\u6cd5\u548c\u5b50\u6811**\u5916**\u5747\u4e0d\u5408\u6cd5\u5373\u53ef\u3002\u4f46\u76f8\u540c\u6743\u503c\u5bf9\u6570\u662f $O(n^2)$ \u7684\uff0c\u6211\u4eec\u8981\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u53d1\u73b0\u5f88\u591a\u5bf9\u90fd\u662f\u65e0\u7528\u7684\u3002DFS \u4e0b\u53bb\uff0c\u9047\u5230\u4e00\u4e2a $x$ \u6743\u503c\u7684\u7ed3\u70b9 $u$\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u4e0e\u4e0a\u4e00\u4e2a\u9047\u5230\u7684 $x$ \u6743\u503c\u7684\u7ed3\u70b9 $v$ \u505a\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u539f\u56e0\u5982\u4e0b\uff1a\n\n- $v$ \u662f $u$ \u7684\u7956\u5148\u3002$u$ \u4e0e $v$ \u5b50\u6811\u5916\u7684\u7ed3\u70b9\u505a\u6ca1\u6709\u5f71\u54cd\u3002\n- $v$ \u4e0d\u662f $u$ \u7684\u7956\u5148\u3002\u80fd\u4e0d\u7ecf\u8fc7\u5176\u5b83 $x$ \u6743\u503c\u7684\u9664 $v$ \u5916\u7684\u7ed3\u70b9\u76f4\u63a5\u8d70\u5230 $u$ \u7684 $x$ \u6743\u503c\u7684\u7ed3\u70b9\u4e00\u5b9a\u5df2\u7ecf\u505a\u8fc7\u4e86\u4e14 $u$ \u4e0e\u5b83\u4eec\u505a\u6ca1\u6709\u5f71\u54cd\u3002\n\n![](https://gitee.com/May2nd/pic-cloud/raw/master/14269432-2.png)\n\n\u7ea2\u8272\u7ed3\u70b9\u8868\u793a\u6743\u503c $x$ \u7684\u7ed3\u70b9\uff0c\u84dd\u8272\u7ed3\u70b9\u5c31\u662f $u$\u3002\n\n\u753b\u56fe\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u7ed3\u8bba\u592a\u5bb9\u6613\u5f97\u51fa\u5566\u3002\n\n\u6700\u540e\u518d\u6765\u4e00\u6b21 DFS \u5904\u7406\u6240\u6709\u6807\u8bb0\u3002\u8bb0\u4e00\u4e0b\u662f\u5426\u5b58\u5728\u5b50\u6811\u5916\u5747\u4e0d\u5408\u6cd5\u6807\u8bb0\u548c**\u5f53\u524d**\u5b50\u6811\u5185\u5408\u6cd5\u7ed3\u70b9\u6570\u3002\u5f53\u4e00\u4e2a\u7ed3\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u4e2d\u90fd\u51fa\u73b0\u5b50\u6811\u5916\u5747\u4e0d\u5408\u6cd5\u65f6\u7b54\u6848\u4e00\u5b9a\u4e3a $0$\u3002\u7ec6\u8282\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\u74f6\u9888\u5728\u4e8e\u79bb\u6563\u5316\uff0c\u653e\u4e00\u4e0b\u4ee3\u7801\u53ed\u3002\n\n***code:***\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 200005\n#define For(i,x,y)for(i=x;i<=(y);i++)\nstruct node\n{\n\tint next,to;\n}e[400005];\nmap<int,int>col;\nbool vis[N],fa[N],son[N];\nint a[N],head[N],sta[N],last[N],pos[N],g,cnt,top;\nint read()\n{\n\tint A;\n\tbool K;\n\tchar C;\n\tC=A=K=0;\n\twhile(C<'0'||C>'9')K|=C=='-',C=getchar();\n\twhile(C>'/'&&C<':')A=(A<<3)+(A<<1)+(C^48),C=getchar();\n\treturn(K?-A:A);\n}\ninline void add(int u,int v)\n{\n\te[++g].to=v;\n\te[g].next=head[u];\n\thead[u]=g;\n}\nvoid dfs(int u,int t)\n{\n\tint i,v,tmp;\n\tvis[u]=1;\n\tsta[++top]=u;\n\tpos[u]=top;\n\tif(!col.count(a[u]))tmp=col[a[u]]=++cnt;\n\telse\n\t{\n\t\ttmp=col[a[u]];\n\t\tif(vis[last[tmp]])fa[sta[pos[last[tmp]]+1]]=1;\n\t\telse son[last[tmp]]=1;\n\t\tson[u]=1;\n\t}\n\tlast[tmp]=u;\n\tfor(i=head[u];i;i=e[i].next)\n\t{\n\t\tv=e[i].to;\n\t\tif(v==t)continue;\n\t\tdfs(v,u);\n\t\tlast[tmp]=u;\n\t}\n\tvis[u]=0;\n\ttop--;\n}\npair<int,int>calc(int u,int t)\n{\n\tint i,v,tot,siz;\n\tpair<int,bool>pa;\n\ttot=siz=0;\n\tfor(i=head[u];i;i=e[i].next)\n\t{\n\t\tv=e[i].to;\n\t\tif(v==t)continue;\n\t\tpa=calc(v,u);\n\t\t/*cout<<v<<' '<<pa.first<<' '<<pa.second<<endl;*/\n\t\tsiz+=pa.second;\n\t\tif(siz>1)cout<<0,exit(0);\n\t\tif(!siz)tot+=pa.first;\n\t\telse if(pa.second)tot=pa.first;\n\t}\n\treturn make_pair((son[u]?0:tot+!siz),siz||fa[u]);\n}\nint main()\n{\n\tint n,i,u,v;\n\tn=read();\n\tFor(i,1,n)a[i]=read();\n\tFor(i,1,n-1)\n\t{\n\t\tu=read(),v=read();\n\t\tadd(u,v),add(v,u);\n\t}\n\tdfs(1,0);\n\t/*For(i,1,n)cout<<son[i]<<' '<<fa[i]<<endl;*/\n\tcout<<calc(1,0).first;\n\treturn 0;\n}\n```",
        "postTime": 1639229922,
        "uid": 334643,
        "name": "\u65b0\u7248\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "CF1467E Distinctive Roots in a Tree"
    },
    {
        "content": "\u6ce8\u610f\u5230\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u5b83\u6ee1\u8db3\u6761\u4ef6\u5f53\u4e14\u4ec5\u5f53\uff0c\u82e5\u4ee5\u5b83\u4e3a\u6839\u7684\u8bdd\uff0c\u90a3\u4e48\u6ca1\u6709\u989c\u8272\u76f8\u540c\u7684\u7956\u5148\u540e\u4ee3\u5bf9\u3002\n\n\u90a3\u4e48\u5f88\u81ea\u7136\u7684\u60f3\u5230\u6362\u6839\uff0c\u5b9e\u65f6\u7ef4\u62a4\u5f53\u524d\u989c\u8272\u76f8\u540c\u7684\u7956\u5148\u540e\u4ee3\u5bf9\u4e2a\u6570\uff08\u6ce8\u610f\u8981\u5f00 `ll`\uff09\u3002\n\n\u9996\u5148\u6c42\u51fa\u521d\u59cb\u503c\u3002\u6211\u4eec\u8003\u8651\u6362\u4e00\u6b21\u6839\u8fd9\u4e2a\u503c\u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\u3002\n\n\u8003\u8651\u6240\u6709\u70b9\u5bf9\u3002\u5982\u679c\u70b9\u5bf9\u5728\u8001\u6839\u548c\u65b0\u6839\u7684\u5b50\u6811\u4e2d\u7684\u540c\u4e00\u4e2a\u7684\u8bdd\uff0c\u90a3\u5173\u7cfb\u663e\u7136\u4e0d\u53d8\u3002\u7136\u540e\u5982\u679c\u662f\u4e0d\u540c\u7684\uff0c\u5e76\u4e14\u4e24\u4e2a\u90fd\u4e0d\u662f\u8001\u6839\u6216\u65b0\u6839\uff0c\u90a3\u663e\u7136\u4e5f\u4e0d\u53d8\u3002\u4e8e\u662f\u53ea\u9700\u8981\u8003\u8651\u65b0\u6839\u5b50\u6811\u5bf9\u8001\u6839\u7684\u8d21\u732e\u548c\u8001\u6839\u5b50\u6811\u5bf9\u65b0\u6839\u7684\u8d21\u732e\u5373\u53ef\u3002\u8fd9\u4e2a\u53ea\u9700\u8981\u4e00\u5f00\u59cb\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u88c5\u4e2a\u6876\uff0c\u7136\u540e\u5728 dfs \u5e8f\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u7ebf\u5bf9\u3002\u6709\u65f6\u5019\u7814\u7a76\u7ebf\u6027\u505a\u6cd5\u4e5f\u662f\u6ca1\u5565\u610f\u4e49\u7684\u3002",
        "postTime": 1610856403,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1467E \u3010Distinctive Roots in a Tree\u3011"
    },
    {
        "content": "\u6211\u4eec\u5148\u968f\u4fbf\u94a6\u5b9a\u70b9$root$\u4e3a\u6839\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4efb\u4e00\u70b9$u$\uff0c\u5176\u80fd\u591f\u4fdd\u8bc1\u8981\u6c42\u5f53\u4e14\u4ec5\u5f53\u70b9$u$\u5230\u5b50\u6811\u5185\u7684\u6240\u6709\u8def\u5f84\u4e0d\u7ecf\u8fc7\u91cd\u590d\u70b9\u4e14$u$\u5230\u5b50\u6811\u5916\u7684\u8def\u5f84\u4e0d\u7ecf\u8fc7\u91cd\u590d\u70b9\u3002\n\n\u53ea\u8981\u6211\u4eec\u5206\u522b\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u8981\u6c42\u6700\u540e\u4e0e\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u5b50\u6811\u5185\u7684\u60c5\u51b5\uff1a\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8981\u6ee1\u8db3\u8981\u6c42\u5fc5\u987b\u8981\u6ee1\u8db3\u5176\u6240\u6709\u5b50\u8282\u70b9\u5230\u5176\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u7684\u8def\u5f84\u4e0a\u4e0d\u7ecf\u8fc7\u91cd\u590d\u70b9\uff0c\u4e14\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u70b9\u6743$w[u]$\u4ec5\u51fa\u73b0\u4e00\u6b21\u3002 \u81f3\u4e8e\u51fa\u73b0\u6b21\u6570\u7684\u7ef4\u62a4\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7c7b\u4f3c[P1600 [NOIP2016 \u63d0\u9ad8\u7ec4] \u5929\u5929\u7231\u8dd1\u6b65](https://www.luogu.com.cn/problem/P1600) \u7528\u6876\u7ef4\u62a4\u5168\u5c40\u7684\u60c5\u51b5\u5728\u904d\u5386\u5b8c\u5f53\u524d\u5b50\u6811\u65f6\u5c06\u5b50\u6811\u5185\u7684\u60c5\u51b5\u5dee\u5206\u51fa\u6765\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5b50\u6811\u5916\u7684\u60c5\u51b5\uff1a\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u8981\u6ee1\u8db3\u8981\u6c42\uff0c\u90a3\u4e48\u5176\u7236\u8282\u70b9$fa$\u5fc5\u987b\u8981\u6ee1\u8db3\u8981\u6c42\uff0c\u5373$fa$\u5230$fa$\u5b50\u6811\u5916\u7684\u6240\u6709\u70b9\u7684\u8def\u5f84\u5fc5\u987b\u4e0d\u7ecf\u8fc7\u91cd\u590d\u70b9\uff0c\u4e14\u7236\u8282\u70b9\u5230\u5176\u5144\u5f1f\u8282\u70b9\u4e0d\u80fd\u7ecf\u8fc7\u91cd\u590d\u70b9\uff08\u7528\u7c7b\u4f3c\u4e0a\u9762\u7ef4\u62a4\u5b50\u6811\u5185\u7684\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5355check\uff09\uff0c\u800c\u4e14\u5728$u$\u7684\u5b50\u6811\u5916\u4e0d\u80fd\u51fa\u73b0\u70b9\u6743$w[u]$\uff0c\u8fd9\u4e2a\u6211\u4eec\u4e5f\u662f\u53ef\u4ee5\u7528\u6876\u5dee\u5206\u51fa\u6765\u7684\u3002\n\n\u6700\u540e\u4e24\u4e2a\u8981\u6c42\u4e0e\u4e00\u4e0b\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <algorithm>\n\nnamespace wxy{\n\tconst int N = 2e5 + 5;\n\tint head[N],fail[N << 1],edge[N << 1],tot,n;\n\tint a[N],b[N],w[N],cnt[N],d[N],f[N],s[N],son[N],size[N],sf[N],m;\n\tinline void add(int x,int y){\n\t\tedge[++tot] = y;\n\t\tfail[tot] = head[x];\n\t\thead[x] = tot;\n\t}\n\tinline int get(int x){return std::lower_bound(b + 1,b + 1 + m,x) - b;}\n\tinline void dfs1(int x,int fa){\n\t\tint pre = cnt[w[x]];d[x] = 1;int pre2;\n\t\tif (x != 1) pre2 = cnt[w[fa]];\n\t\tfor (int i = head[x];i;i = fail[i]){\n\t\t\tint v = edge[i];\n\t\t\tif (v == fa) continue;\n\t\t\tsize[x]++;\n\t\t\tdfs1(v,x);\n\t\t\td[x] &= d[v];\n\t\t\tif (d[v] == 1) son[x]++;\n\t\t}\n\t\tint sum = cnt[w[x]]; \n\t\tif (sum - pre > 0) d[x] = 0;\n\t\tcnt[w[x]]++;\n\t\ts[x] = sum - pre + 1;\n\t\tif (x != 1){\n\t\t\tint sum2 = cnt[w[fa]];\n\t\t\tsf[x] = sum2 - pre2;\n\t\t\tif (w[x] == w[fa]) sf[x]++;\n\t\t}\n\t}\n\tinline void dfs2(int x,int fa){\n\t\tif (x != 1){\n\t\t\tif (f[fa] == 1 && son[fa] - d[x] == size[fa] - 1 && s[fa] - sf[x] == 1){\n\t\t\t\tf[x] = 1;\n\t\t\t}\n\t\t\tif (cnt[w[x]] - s[x] != 0) f[x] = 0;\n\t\t}\n\t\tfor (int i = head[x];i; i = fail[i]){\n\t\t\tint v = edge[i];\n\t\t\tif (v == fa) continue;\n\t\t\tdfs2(v,x);\n\t\t}\n\t}\n\tvoid main(){\n\t\tm = tot = 0;\n\t\tstd::cin >> n;\n\t\tfor (int i = 1; i <= n; i++) std::cin >> a[i];\n\t\tfor (int i = 1; i < n; i++){\n\t\t\tint x,y;std::cin >> x >> y;\n\t\t\tadd(x,y);add(y,x);\n\t\t}\n\t\tfor (int i = 1; i <= n; i++)w[i] = a[i];\n\t\tstd::sort(a + 1,a + n + 1);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (i == 1 || a[i] != a[i - 1]) b[++m] = a[i];\n\t\t\n\t\tfor (int i = 1; i <= n; i++) w[i] = get(w[i]);\n\t\tdfs1(1,0);f[1] = 1;dfs2(1,0);\n\t\tint ans = 0;\n\t\tfor (int i = 1; i <= n; i++) f[i] &= d[i];\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (f[i] == 1) ans++;\n\t\tstd::cout << ans;\n\t}\n}signed main(){wxy::main();return 0;}\n```\n",
        "postTime": 1610351662,
        "uid": 317459,
        "name": "RyexAwl",
        "ccfLevel": 6,
        "title": "CF1467E \u3010Distinctive Roots in a Tree\u3011 \u6876\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\u6362\u6839"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u66b4\u529b\u65b9\u6cd5\u3002\n\n\u5bf9\u4e8e $v$ ,\u5f53\u4ed6\u4e3a\u6839\u7684\u65f6\u5019\uff0c\u5047\u5982\u5b58\u5728\u5b50\u6811\uff0c\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6709 $a_x=a_v$ \u90a3\u4e48\uff0c\u7b54\u6848\u53ea\u53ef\u80fd\u51fa\u73b0\u5728 $a_u$ \u7684\u5b50\u6811\u3002\n\n\u56e0\u4e3a\u4e0d\u5728 $u$ \u7684\u5b50\u6811\u4e2d\uff0c\u5b58\u5728\u8def\u5f84\uff0c\u540c\u65f6\u7ecf\u8fc7 $u$ , $x$\u3002\u8fd9\u4e2a\u4e0d\u5408\u6cd5\u3002\n\n\u6bcf\u4e2a\u70b9\u90fd\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u53ef\u4ee5\u9009\u7684\u533a\u95f4\uff0c\u5269\u4e0b\u7684\u5c31\u597d\u505a\u4e86\u3002\n\n1. \u7b2c\u4e00\u6b65\u60f3\u600e\u4e48\u786e\u5b9a\u4ee5 $v$ \u4e3a\u6839\uff0c\u54ea\u4e2a\u5b50\u6811\u91cc\u9762\u6709\u6ca1\u6709 $a_v$\u3002\n\n   \u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u3002(\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u662f\u6743\u503c $c$ \u51fa\u73b0\u7684\u6b21\u6570)\n   \n   \u9996\u5148\uff0c\u6211\u4eec\u7528 \u53ef\u6301\u4e45\u5316\u201c\u7ebf\u6bb5\u6811\u5408\u5e76\u201d\u6765\u7ef4\u62a4\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u91cc\u9762\u4ec0\u4e48\u989c\u8272\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8fd9\u4e2a\u5f88\u7b80\u5355\u3002\n   \n   \u5176\u6b21\uff0c\u4e0e $v$ \u76f8\u8fde\u7684\u65e0\u975e\u5c31\u662f $v$ \u5728\u6709\u6839\u6811\u4e2d\u7684\u513f\u5b50\uff0c\u6216\u7236\u4eb2\u3002\n   \n   1. \u513f\u5b50\u53ef\u4ee5\u76f4\u63a5\u5728\u513f\u5b50\u90a3\u68f5\u7ebf\u6bb5\u6811\u4e2d\u67e5\u8be2\u3002\n   \n   2. \u7236\u4eb2\u5c31\u76f8\u5f53\u4e8e\u5168\u4f53- $v$ \u7684\u7ebf\u6bb5\u6811\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n   \n2. \u5982\u679c\u5728 \u7b2c $1$ \u6b65\uff0c\u6709 $2$ \u4e2a\u4ee5\u4e0a\u7684\u6709 $a_x=a_v$,\u90a3\u4e48\u6b64\u65f6\uff0c\u603b\u4f53\u7b54\u6848\u5c31\u662f $0$\u3002\n   \u5426\u5219\u5728\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u662f\u5426\u53ef\u884c\u3002\n   1. \u5982\u679c\u662f $v$ \u5728\u6709\u6839\u6811\u4e2d\u7684\u513f\u5b50\u4e2d\u5b58\u5728 $a_x=a_v$\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5c31\u628a \u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811 \u4e2d\u7684\u6240\u6709\u70b9 $+1$\u3002\n   2. \u5982\u679c\u662f $v$ \u5728\u6709\u6839\u6811\u4e2d\u7684\u7236\u4eb2\u4e2d\u5b58\u5728 $a_x=a_v$\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u6574\u4e2a\u7ebf\u6bb5\u6811 $+1$,\u7279\u522b\u7684\u628a \u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811 $-1$\u3002\n   3. \u5982\u679c\u6ca1\u6709\uff0c\u5c31\u5168\u4f53 $+1$\u3002\n3. \u53ef\u884c\u7684\u662f\u6bcf\u4e00\u6b21\u90fd\u88ab\u5305\u542b\u7684\u70b9\uff0c\u6700\u540e\u4e00\u904d $dfs$ \u7edf\u8ba1\u6240\u6709 \u6743\u503c\u7b49\u4e8e $n$\u7684\u70b9\uff0c\u5373\u6bcf\u4e00\u6b21\u90fd\u88ab\u5305\u542b\u7684\u70b9\u3002\n\n$\\mathcal{Tips}$\n\u56e0\u4e3a\u6211\u7684\u65b9\u6cd5\u5927\u591a\u53ea\u7528\u5230\u6570\u636e\u7ed3\u6784\u6a21\u677f\uff0c\u5728\u786e\u5b9a\u6a21\u677f\u6ca1\u6253\u9519\u7684\u65f6\u5019\uff0c\u7ec6\u8282\u8f83\u5c11\u3002\n\u5982\u679c\u5bf9\u6570\u636e\u7ed3\u6784\u7279\u522b\u719f\u6089\u7684\u8bdd\uff0c\u8fd9\u4e2a\u9898\u770b\u8d77\u6765\u4e5f\u5c31\u5341\u5206\u7b80\u5355\u4e86\u3002\n\n\u5bf9\u4e8e $1$ \u7684\u8ba8\u8bba\uff0c\u7ed9\u51fa\u4e00\u4e2a\u56fe\u628a\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/lzohm0v9.png)\n\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5,M=9e6;\nint ls[M],rs[M],f[M];\nstruct node{int x,id;}a[N];\nvector<int> v[N];\nint cnt,rt[N],n;\nint fa[N],sz[N];\ninline void insert(int &pos,int x,int l,int r)\n{\n    if(pos==0) pos=++cnt;\n    if(l==r)\n    {\n        f[pos]++;\n        return ;\n    }\n    int mid=l+r>>1;\n    if(x<=mid) insert(ls[pos],x,l,mid);\n    else insert(rs[pos],x,mid+1,r);\n    f[pos]=f[ls[pos]]+f[rs[pos]];\n}\ninline int merge(int x,int y,int l,int r)\n{\n    if(x==0) return y;\n    if(y==0) return x;\n    int t=++cnt,mid=l+r>>1;\n    f[t]=f[x]+f[y];\n    ls[t]=merge(ls[x],ls[y],l,mid);\n    rs[t]=merge(rs[x],rs[y],mid+1,r);\n    return t;\n}\ninline int ask(int pos,int x,int l,int r)\n{\n    if(l==r)\n        return f[pos];\n    int mid=l+r>>1;\n    if(x<=mid)\n    {\n        if(ls[pos]) return ask(ls[pos],x,l,mid);\n        return 0;\n    }\n    if(rs[pos]) return ask(rs[pos],x,mid+1,r);\n    return 0;\n}\nint id[N],num[N],kth;\ninline void dfs(int x,int f)\n{\n    fa[x]=f,sz[x]=1;\n    id[x]=++kth,num[kth]=x;\n    insert(rt[x],a[x].x,1,n);\n    for(int i=0;i<v[x].size();i++)\n    {\n        int y=v[x][i];\n        if(y==f) continue;\n        dfs(y,x);\n        rt[x]=merge(rt[x],rt[y],1,n);\n        sz[x]+=sz[y];\n    }\n}\ninline bool cmp(node a,node b){return a.x<b.x;}\ninline bool cmp1(node a,node b){return a.id<b.id;}\nint b[N];\nstruct seg{int l,r,v,tag;}t[N<<2];\ninline void build(int pos,int l,int r)\n{\n    t[pos].l=l,t[pos].r=r;\n    if(l==r) return ;\n    int mid=l+r>>1;\n    build(pos<<1,l,mid),build(pos<<1|1,mid+1,r);\n}\ninline void pushdown(int pos)\n{\n    if(t[pos].tag)\n    {\n        int tag=t[pos].tag;\n        t[pos].tag=0;\n        t[pos<<1].tag+=tag,t[pos<<1|1].tag+=tag;\n        t[pos<<1].v  +=tag*(t[pos<<1].r  -t[pos<<1].l+1);\n        t[pos<<1|1].v+=tag*(t[pos<<1|1].r-t[pos<<1|1].l+1);\n    }\n}\ninline void modify(int pos,int x,int y,int v)\n{\n    if(x<=t[pos].l&&t[pos].r<=y)\n    {\n        t[pos].tag+=v;\n        t[pos].v+=v*(t[pos].r-t[pos].l+1);\n        return ;\n    }\n    pushdown(pos);\n    int mid=t[pos].l+t[pos].r>>1;\n    if(y<=mid) modify(pos<<1,x,y,v);\n    else if(x>mid) modify(pos<<1|1,x,y,v);\n    else modify(pos<<1,x,y,v),modify(pos<<1|1,x,y,v);\n    t[pos].v=t[pos<<1].v+t[pos<<1|1].v;\n}\nint ans=0;\ninline void find(int pos)\n{\n    if(t[pos].l==t[pos].r)\n    {\n        if(t[pos].v==n) ans++;\n        return ;\n    }\n    pushdown(pos);\n    find(pos<<1);\n    find(pos<<1|1);\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>a[i].x,a[i].id=i;\n    sort(a+1,a+1+n,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i].x==a[i-1].x) b[i]=b[i-1];\n        else b[i]=b[i-1]+1;\n    }\n    for(int i=1;i<=n;i++) a[i].x=b[i];\n    sort(a+1,a+1+n,cmp1);\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        v[x].push_back(y),v[y].push_back(x);\n    }\n    dfs(1,0);\n    build(1,1,n);\n    for(int x=1;x<=n;x++)\n    {\n        int num=0,pos=0;\n        for(int i=0;i<v[x].size();i++)\n        {\n            int y=v[x][i];\n            if(y==fa[x])\n            {\n                if(ask(rt[1],a[x].x,1,n)-ask(rt[x],a[x].x,1,n))\n                    num++,pos=y;\n            }\n            else\n            {\n                if(ask(rt[y],a[x].x,1,n))\n                    num++,pos=y;\n            }\n        }\n        if(num>=2) cout<<\"0\",exit(0);\n        if(pos==0)\n        {\n            modify(1,1,n,1);\n            continue;\n        }\n        if(pos==fa[x])\n        {\n            modify(1,1,n,1);\n            modify(1,id[x],id[x]+sz[x]-1,-1);\n        }\n        else\n            modify(1,id[pos],id[pos]+sz[pos]-1,1);\n    }\n    find(1);\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1610243419,
        "uid": 184069,
        "name": "Imitators",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1467E \u3010Distinctive Roots in a Tree\u3011"
    },
    {
        "content": "\u8003\u8651\u628a\u6240\u6709\u6743\u503c\u76f8\u540c\u7684\u70b9\u5212\u5206\u6210\u4e00\u7ec4\uff0c\u4f5c\u4e3a\u5f53\u524d\u7684 **\u5173\u952e\u70b9**\uff0c\u6211\u4eec\u8981\u4f7f\u5f97\u9009\u5b9a\u7684\u6839 **\u4e0d\u80fd\u8ba9\u4efb\u610f\u4e24\u4e2a\u5173\u952e\u70b9\u6709\u7956\u5148\u540e\u4ee3\u5173\u7cfb**\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u5173\u952e\u70b9\u6309\u7167 dfn \u5e8f\uff08\u4efb\u610f\u6307\u5b9a\u4e00\u4e2a\u6839\uff0c\u4ee5\u4e0b\u79f0\u4f5c **\u5047\u6839** \uff09\u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e9b\u60c5\u51b5\u7684\u56fe\uff1a\n\n\n#### Case 1\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2i7ygo5k.png)\n\n\n\u7ea2\u70b9\u8868\u793a\u5173\u952e\u70b9\uff0c\u5176\u4e2d\u6700\u4e0a\u9762\u6709\u4e00\u4e2a\u7ea2\u70b9\u662f\u6240\u6709\u70b9\u7684\u7956\u5148\uff1b\u9ec4\u70b9\u8868\u793a\u5269\u4f59\u7ea2\u70b9\u7684 Lca\uff0c\u7eff\u70b9\u8868\u793a\u9ec4\u70b9\u5f80\u5047\u6839\u65b9\u5411\u8d70\uff0c**\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u7684\u4e00\u4e2a\u70b9\uff0c\u6ee1\u8db3 dfn \u5e8f\u6bd4\u6700\u4e0a\u9762\u90a3\u4e2a\u7ea2\u70b9\u5927**\uff08\u627e\u5230\u6700\u4e0a\u9762\u7ea2\u70b9\u7684\u67d0\u4e2a\u513f\u5b50\uff0c\u662f\u5269\u4f59\u70b9\u7684\u516c\u5171\u7956\u5148\uff09\n\n\u90a3\u4e48\u5982\u679c\u9ec4\u70b9\u5c31\u662f\u6700\u4e0a\u9762\u90a3\u4e2a\u7ea2\u70b9\u5462\uff1f\u6b64\u65f6\u662f\u4e00\u4e2a\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u51fa\u73b0\u4e86 **\u4e09\u4e2a\u5173\u952e\u70b9\u5728\u540c\u4e00\u6761\u94fe\u4e0a** \u7684\u60c5\u51b5\u3002\n\n\u9664\u4e86\u4e0a\u8ff0\u7684\u7279\u6b8a\u60c5\u51b5\uff0c**\u7eff\u70b9\u7684\u540e\u4ee3\u4e14\u975e\u4e0b\u9762\u7ea2\u70b9\u7684\u540e\u4ee3\uff08\u5305\u62ec\u4e0b\u9762\u7ea2\u70b9\u81ea\u8eab\uff09**\uff0c\u5728\u53ea\u8003\u8651\u5f53\u524d\u7ec4\u7684\u65f6\u5019\u53ef\u4ee5\u4f5c\u4e3a\u5408\u6cd5\u7684\u6839\u3002\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e9b\u70b9\u4f5c\u4e3a\u6839\u7684\u65f6\u5019\uff0c\u6240\u6709\u5173\u952e\u70b9\u5e76\u4e0d\u5b58\u5728\u5b50\u5b59\u540e\u4ee3\u5173\u7cfb\u3002\n\n---\n\n#### Case 2\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/noniiawj.png)\n\n\u6ca1\u9519\uff0c\u53ea\u662f\u628a\u4e0a\u9762\u90a3\u4e2a\u7ea2\u70b9\u6390\u6389\u4e86\u3002\n\n\u6b64\u65f6\u53ea\u8981\u628a\u6240\u6709\u5173\u952e\u70b9\u7684\u540e\u4ee3\uff08\u5305\u62ec\u81ea\u8eab\uff09\u53c9\u6389\u5c31\u597d\u4e86\uff0c\u5176\u4ed6\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6839\u3002\n\n---\n\n#### \u5b9e\u73b0\n\n\u5177\u4f53\u7684\uff0c\u7531\u4e8e\u4e0a\u8ff0\u64cd\u4f5c\u53ef\u4ee5\u8f6c\u5316\u6210\u5c06 **\u82e5\u5e72\u4e2a\u5b50\u6811\u7684\u4ea4\u6216\u5e76** \u6253\u4e0a **\u4e0d\u80fd\u4f5c\u4e3a\u6839\u7684\u6807\u8bb0**\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528 dfn \u5e8f\uff0c\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u626b\u4e00\u904d\uff0c\u7edf\u8ba1\u90a3\u4e9b\u70b9\u6ca1\u6709\u88ab\u6253\u4e0a\u6807\u8bb0\u5373\u53ef\u3002\n\n---\n\n#### \u4ee3\u7801\n\n```cpp\n#include <stdio.h>\n#include <vector>\n#include <algorithm>\n#define LL long long\nusing namespace std;\nconst int N=2e5+3;\ninline LL rin()\n{\n    LL s=0;\n    bool bj=false;\n    char c=getchar();\n    for(;(c>'9'||c<'0')&&c!='-';c=getchar());\n    if(c=='-')bj=true,c=getchar();\n    for(;c>='0'&&c<='9';c=getchar())s=(s<<1)+(s<<3)+(c^'0');\n    if(bj)s=-s;\n    return s;\n}\ninline int max(int x,int y){return x>y?x:y;}\ninline int min(int x,int y){return x<y?x:y;}\ninline void jh(int &x,int &y){if(x!=y)x^=y^=x^=y;return;}\n\n\nint n;\nstruct gyq\n{\n    int val,num,dfn;\n}a[N];\ninline bool myru_gyq(gyq x,gyq y){return (x.val==y.val)?(x.dfn<y.dfn):(x.val<y.val);}\nint nam;\nvector<int>b[N];\n\nint fa[20][N];\nint dep[N];\nint lar[N];\nint dfn[N];\ninline void dfs(int x,int Fa)\n{\n    a[x].dfn=++nam;\n    dfn[x]=nam;\n    dep[x]=dep[Fa]+1;\n    lar[x]=1;\n    fa[0][x]=Fa;\n    for(int i=b[x].size()-1;i>=0;i--)\n    {\n        int to=b[x][i];\n        if(to==Fa)continue;\n        dfs(to,x);\n        lar[x]+=lar[to];\n    }\n    return;\n}\n\ninline int Lca(int x,int y)\n{\n    if(dep[x]<dep[y])jh(x,y);\n    for(int i=dep[x]-dep[y],j=0;i;i>>=1,j++)if(i&1)x=fa[j][x];\n    for(int j=0;j>=0;)\n    {\n        if(fa[j][x]!=fa[j][y])x=fa[j][x],y=fa[j][y],j++;\n        else j--;\n    }\n    if(x!=y)x=fa[0][x];\n    return x;\n}\n\nint sl[N];\ninline void add(int l,int r,int s){sl[l]+=s;sl[r+1]-=s;return;}\ninline int work()\n{\n    n=rin();\n    for(int i=1;i<=n;i++)a[i].val=rin(),a[i].num=i;\n    for(int i=1;i<n;i++){int x=rin(),y=rin();b[x].push_back(y);b[y].push_back(x);}\n    dfs(1,0);\n    for(int i=1;i<20;i++)for(int j=1;j<=n;j++)fa[i][j]=fa[i-1][fa[i-1][j]];\n    sort(a+1,a+n+1,myru_gyq);\n    for(int i=1,j;i<=n;i=j)\n    {\n        for(j=i+1;j<=n&&a[j].val==a[i].val;j++)if(j!=i+1&&a[j].dfn<a[j-1].dfn+lar[a[j-1].num])return 0;\n        if(j==i+1)continue;\n        for(int _=i;_<j;_++)add(a[_].dfn,a[_].dfn,1);\n        for(;true;)\n        {\n            int _;\n            for(_=i+1;_<j;_++)\n            {\n                if(a[_].dfn>=a[i].dfn+(lar[a[i].num]))\n                {\n                    if(_==i+1)break;\n                    return 0;\n                }\n            }\n            if(_==j)\n            {\n                int z=a[i+1].num;\n                for(_=i+2;_<j;_++)z=Lca(z,a[_].num);\n                if(z==a[i].num)return 0;\n                \n                add(1,n,1);\n                int lxt=z;\n                for(int p=19;p>=0;p--)if(dfn[fa[p][lxt]]>a[i].dfn)lxt=fa[p][lxt];\n                add(dfn[lxt],dfn[lxt]+lar[lxt]-1,-1);\n                i++;\n            }\n            break;\n        }\n        for(int _=i;_<j;_++)add(a[_].dfn,a[_].dfn+lar[a[_].num]-1,1);\n    }\n    int sum=0;\n    LL cutt=0;\n    for(int i=1;i<=n;i++)cutt+=sl[i],sum+=(cutt==0);\n    return sum;\n}\nint main()\n{\n    int i,j;\n    printf(\"%d\\n\",work());\n    return 0;\n}\n```",
        "postTime": 1610151494,
        "uid": 73551,
        "name": "zjjws",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1467E \u3010 Distinctive Roots in a Tree\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u6700\u5927\u5728 $10^9$ \u5927\u5c0f\uff0c\u8fd9\u4f7f\u5f97\u6570\u7ec4\u5b58\u4e0d\u4e0b\u3002\u6211\u4eec\u53c8\u6ce8\u610f\u5230\u6b64\u9898\u5bf9\u6743\u503c\u5177\u4f53\u5927\u5c0f\u5e76\u4e0d\u654f\u611f\uff0c\u4ec5\u4ec5\u5bf9\u76f8\u5bf9\u5927\u5c0f\u6709\u8981\u6c42\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u79bb\u6563\u5316\u964d\u4f4e\u6743\u503c\u5927\u5c0f\u3002\n\n\u663e\u7136\uff0c\u7528\u666e\u901a\u641c\u7d22\u5f88\u5bb9\u6613\u8fc7\u3002\u4f46\u662f\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u526a\u679d\u3002\n\n\u5047\u8bbe $1$ \u4e3a\u6811\u6839\u3002\n\n\u5728\u641c\u7d22\u65f6\uff0c\u6211\u4eec\u5efa\u7acb\u4e24\u4e2a\u6570\u7ec4\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5206\u522b\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u53ef\u9009\u70b9\u4e0e\u5b50\u6811\u5916\u53ef\u9009\u70b9\u3002\n\n\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u9047\u5230\u76f8\u540c\u6743\u503c\u7684\u70b9\uff08\u8bbe\u4e3a $u$ \u548c $v$\uff09\uff0c\u5219\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n+ $u,v$ \u662f\u5b50\u5b59\u5173\u7cfb\u3002\u5219\u6b64\u5b50\u6811\u5916\u4efb\u610f\u4e00\u70b9\u4e0d\u53d7\u5f71\u54cd\u3002\n\n+ $u,v$ \u975e\u5b50\u5b59\u5173\u7cfb\u3002\u5219\u5b50\u6811\u5185\u4efb\u610f\u4e00\u70b9\u8d70\u5230\u8fd9\u4e24\u70b9\u5fc5\u662f\u4e24\u6761\u8def\u5f84\u3002\u4f46\u5b50\u6811\u5916\u5fc5\u662f\u4e00\u6761\u8def\u5f84\u3002\u6545\u5b50\u6811\u5185\u4efb\u610f\u4e00\u70b9\u4e0d\u53d7\u5f71\u54cd\u3002\n\n\u7136\u540e DFS \u5904\u7406\u6240\u6709\u6807\u8bb0\u3002\u5224\u65ad\u662f\u5426\u5b58\u5728\u5b50\u6811\u5916\u5747\u4e0d\u5408\u6cd5\u6807\u8bb0\u548c\u5f53\u524d\u5b50\u6811\u5185\u5408\u6cd5\u7ed3\u70b9\u6570\u3002\u5f53\u540c\u4e00\u5b50\u6811\u4e2d\u4e24\u70b9\u4e2d\u90fd\u51fa\u73b0\u5b50\u6811\u5916\u5747\u4e0d\u5408\u6cd5\u65f6\u7b54\u6848\u4e00\u5b9a\u4e3a $0$\u3002\n\n\u590d\u6742\u5ea6\uff1aDFS $O(n)$\uff0c\u79bb\u6563\u5316 $O(n \\log n)$\u3002\n\n## Code\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define pii pair<int, int>\nusing namespace std;\nconst int N = 5e5 + 10;\nint n;\nint a[N], b[N], s[N], lst[N], pos[N];\nint fath[N], son[N];\nvector<int> vec[N];\nbool vis[N];\nint top;\ninline void dfs(int u, int fa) {\n\tvis[u] = 1;\n\ts[++ top] = u;\n\tpos[u] = top;\n\tif(lst[a[u]]) {\n\t\tif(vis[lst[a[u]]]) fath[s[pos[lst[a[u]]] + 1]] = 1;\n\t\telse son[lst[a[u]]] = 1;\n\t\tson[u] = 1; \n\t}\n\tlst[a[u]] = u;\n\tfor(auto v :vec[u]) {\n\t\tif(v == fa) continue;\n\t\tdfs(v, u);\n\t\tlst[a[u]] = u;\n\t}\n\tvis[u] = 0;\n\t-- top;\n}\ninline pii work(int u, int fa) {\n\tpii now;\n\tint sum = 0, ans = 0;\n\tfor(auto v : vec[u]) {\n\t\tif(v == fa) continue;\n\t\tnow = work(v, u);\n\t\tsum += now.second;\n\t\tif(sum > 1) cout << 0, exit(0);\n\t\tif(!sum) ans += now.first;\n\t\tif(sum == 1 && now.second) ans = now.first; \n\t}\n\treturn make_pair((son[u] ? 0 : ans + sum ^ 1), sum != 0 || fath[u]);\n}\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor(int i = 1; i <= n; i ++) cin >> a[i], b[i] = a[i];\n\tsort(b + 1, b + n + 1); \n\tint len = unique(b + 1, b + n + 1) - b - 1;\n\tfor(int i = 1; i <= n; i ++) a[i] = lower_bound(b + 1, b + len + 1, a[i]) - b;\n\tfor(int i = 1; i < n; i ++) {\n\t\tint l, r;\n\t\tcin >> l >> r;\n\t\tvec[l].push_back(r);\n\t\tvec[r].push_back(l);\n\t}\n\tdfs(1, 0);\n\tcout << work(1, 0).first;\n\treturn 0;\n}\n```\n\nUpd\uff1a\u4ee3\u7801\u65b9\u9762\u501f\u9274\u4e86\u4e00\u4e0b @\u65b0\u7248\u7c73\u5947\u5947\u7c73 \u7684\u4ee3\u7801\u3002",
        "postTime": 1675511791,
        "uid": 526017,
        "name": "The_cosmos",
        "ccfLevel": 4,
        "title": "CF1467E"
    },
    {
        "content": "\u9898\u76ee\u4f20\u9001\u95e8\uff1a[CF1467E](https://www.luogu.com.cn/problem/CF1467E)\n\n\u770b\u5230\u9898\u76ee\uff0c\u539f\u672c\u8003\u8651\u7684\u662f\u5148\u628a\u989c\u8272\u76f8\u540c\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u6df1\u641c\u65f6\u5728\u6bd4\u8f83\u7236\u8282\u70b9\u4e0e\u5b50\u8282\u70b9\u7684\u989c\u8272\uff0c\u6700\u540e\u4ece\u4e0a\u5f80\u4e0b\u66f4\u65b0\uff0c\u5982\u679c\u7236\u8282\u70b9\u88ab\u6253\u4e86\u6807\u8bb0\uff0c\u90a3\u4e48\u5b50\u8282\u70b9\u4e5f\u968f\u7740\u7236\u8282\u70b9\u6253\u4e0a\u6807\u8bb0\u3002\n\n\u770b\u7740\u5f88\u5408\u7406\uff0c\u4f46\u5b9e\u9645\u662f\u6d4b\u8bd5\u70b9\u4e09\u5c31\u88ab\u5361\u4e86\uff0c\u627e\u4e86\u51e0\u7bc7\u9898\u89e3\u770b\u4e86\u770b\uff0c\u624d\u53d1\u73b0\u95ee\u9898\uff0c\u4e24\u4e2a\u989c\u8272\u76f8\u540c\u7684\u70b9\u4e4b\u95f4\u7684\u70b9\u6709\u53ef\u80fd\u662f\u7b26\u5408\u8981\u6c42\u7684\u70b9\uff0c\u4f46\u5982\u679c\u989c\u8272\u76f8\u540c\u7684\u70b9\u505a\u4e86\u6811\u6839\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e9b\u70b9\u5c31\u5168\u67aa\u6bd9\u4e86\u3002\n\n\u6240\u4ee5\u8981\u6362\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e24\u4e2a\u989c\u8272\u76f8\u540c\u7684\u70b9\uff0c\u5b83\u4eec\u5f80\u5916\u7684\u70b9\u5c31\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\u3002\n\n\u5982\u56fe![](https://cdn.luogu.com.cn/upload/image_hosting/93p7a821.png)\n\n\u6211\u4eec\u8bbe $1$ \u4e3a\u6811\u6839\u3002\n\n\u5728\u641c\u7d22\u5230\u4e00\u4e2a\u7ed3\u70b9\u65f6\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u5b50\u6811\u4e2d\u5305\u542b\u989c\u8272\u4e0e\u8be5\u8282\u70b9\u989c\u8272\u76f8\u540c\u7684\u8282\u70b9\uff0c\u90a3\u5c31\u6807\u8bb0\u9664\u8be5\u5b50\u6811\u5916\u7684\u5176\u4ed6\u6240\u6709\u70b9\u3002\n\n\u5728\u641c\u7d22\u5230\u4e00\u4e2a\u7ed3\u70b9\u65f6\uff0c\u7edf\u8ba1\u5b8c\u5b83\u7684\u5b50\u6811\u4e2d\u4e0e\u5b83\u989c\u8272\u76f8\u7b49\u7684\u989c\u8272\u540e\uff0c\u53d1\u73b0\u5c11\u4e8e\u603b\u5171\u7684\u989c\u8272\u4e2a\u6570\uff0c\u8bf4\u660e\u5916\u90e8\u4e5f\u5b58\u5728\u8be5\u989c\u8272\uff0c\u90a3\u5c31\u628a\u6574\u4e2a\u5b50\u6811\u6807\u8bb0\u3002\n\n\u5229\u7528\u6811\u4e0a\u5dee\u5206\u548cdfs\u5e8f\u6765\u6253\u6807\u8bb0\u3002\n\n\u7531\u4e8e $a_i$ \u6570\u636e\u8303\u56f4\u8fc7\u5927\uff0c\u6240\u4ee5\u6570\u636e\u8fd8\u8981\u79bb\u6563\u5316\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\ntypedef long long ll;\nusing namespace std;\nconst int N = 2e5 + 5;\nint n, cnt, tim;\nbool g;\nint h[N], vis[N], st[N], en[N], k[N], calubound[N];\n// st dfs\u5e8f\u8d77\u59cb\u4f4d\u7f6e en dfs\u5e8f\u7ed3\u675f\u4f4d\u7f6e calubound \u5dee\u5206\u6570\u7ec4\nll a[N], col[N];\n// a \u539f\u989c\u8272 col \u79bb\u6563\u540e\u7684\u989c\u8272\nstruct edge \n{\n\tint v, nxt;\n} e[N << 1];\n\ninline ll read()\n{\n\tll x = 0;\n\tbool fg = false;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tfg |= (ch == '-');\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 3) + (x << 1) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn fg ? ~x + 1 : x;\n}\nvoid add(int u, int v)\n{\n\te[++cnt].v = v;\n\te[cnt].nxt = h[u];\n\th[u] = cnt;\n}\nvoid dfs(int u, int fat)\n{\n\tst[u] = ++tim;\n\tint g = k[col[u]];\n\t++k[col[u]];\n\tfor(int i = h[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].v;\n\t\tif(v == fat)\tcontinue;\n\t\tint tmp = k[col[u]];\n\t\tdfs(v, u);\n\t\tif(k[col[u]] > tmp)\n\t\t{\n\t\t\tcalubound[1]++;\n\t\t\tcalubound[st[v]]--;\n\t\t\tcalubound[en[v] + 1]++;\n\t\t}\n\t}\n\ten[u] = tim;\n\tif(k[col[u]] - g < vis[col[u]])\n\t{\n\t\tcalubound[st[u]]++;\n\t\tcalubound[en[u] + 1]--;\n\t}\n}\n\nint main()\n{\n\tn = read();\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\ta[i] = read();\n\t\tcol[i] = a[i];\n\t}\n\tfor(int i = 1; i <= n-1; ++i)\n\t{\n\t\tint x = read(), y = read();\n\t\tadd(x, y);\n\t\tadd(y, x);\n\t}\n\tsort(a + 1, a + n + 1);\n\tint last = unique(a + 1,a + n + 1) - a - 1;\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\tcol[i] = lower_bound(a + 1, a + last + 1, col[i]) - a;\n\t\tvis[col[i]]++;\n\t}\n\tdfs(1, 0);\n\tll ans = 0;\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\tcalubound[i] += calubound[i-1];\n\t\tif(calubound[i] == 0)\t++ans;\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1659405461,
        "uid": 715213,
        "name": "yi_fan0305",
        "ccfLevel": 4,
        "title": "CF1467E Distinctive Roots in a Tree \u9898\u89e3"
    },
    {
        "content": "\u8d5b\u65f6\u60f3\u5230\u4e00\u79cd\u865a\u6811+\u6811\u72b6\u6570\u7ec4\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u7ec6\u8282\u5f88\u591a\u6ca1\u6709rush\u51fa\u6765\n\n\u5c31\u662f\u5bf9\u6bcf\u79cd\u989c\u8272\u5efa\u51fa\u865a\u6811\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u5b50\u6811\u5185\u7684\u70b9\u6807\u8bb0\uff08\u5927\u6982\u662f\u8fd9\u6837\u628a\uff1f\uff09\n\n\u8003\u8651\u6362\u4e86\u79cd\u5199\u6cd5\uff0c\u4e5f\u5dee\u4e0d\u591a\u662f\u8fd9\u6837\uff0c\u4f46\u5b9e\u73b0\u8d77\u6765\u7b80\u5355\u5f88\u591a\n\n\u9996\u5148\u94a6\u5b9a\u4e00\u4e2a\u6839\uff0c\u540c\u6837\u662f\u8003\u8651\u76f8\u540c\u989c\u8272\u7684\u4e00\u6761\u8def\u5f84\u53bb\u6807\u8bb0\u4e0d\u5408\u6cd5\u7684\u70b9\n\n- \u4e24\u4e2a\u70b9\u6ca1\u6709\u7956\u5b59\u5173\u7cfb\uff1a\n\n\u6807\u8bb0\u4e24\u4e2a\u70b9\u7684\u5b50\u6811\n\n- \u4e24\u4e2a\u70b9\u6709\u7956\u5b59\u5173\u7cfb\uff1a\n\n\u665a\u8f88\u7684\u5b50\u6811\u540c\u6837\u8981\u6807\u8bb0\uff0c\u4ee5\u53ca\u62a0\u6389\u665a\u8f88\u5bf9\u5e94\u5230\u7956\u5148\u90a3\u4e2a\u5b50\u6811\u5269\u4e0b\u90e8\u5206\n\n\u5229\u7528\u5929\u5929\u7231\u8dd1\u6b65\u5b50\u6811\u5dee\u5206\u7684\u601d\u8def\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u6811\u72b6\u6570\u7ec4\uff0c\u56e0\u4e3a\u6700\u540e\u624d\u7edf\u8ba1\u7b54\u6848\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n+n)$\uff0c\u4e3b\u8981\u74f6\u9888\u5728\u79bb\u6563\u5316\u4e0a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N=2e5+10;\nint n,tot,ts;\nint fir[N],v[N],tmp[N],size[N],cnt[N],val[N],all[N],dfn[N][2];\nstruct edge\n{\n\tint to;\n\tint nxt;\n}e[N<<1];\ninline void add(int x,int y)\n{\n\te[++tot].to=y; e[tot].nxt=fir[x]; fir[x]=tot;\n\te[++tot].to=x; e[tot].nxt=fir[y]; fir[y]=tot;\n}\ninline void update(int l,int r,int opt)\n{\n\tif(opt) val[1]++,val[l]--,val[r+1]++,val[n+1]--;\n\telse val[l]++,val[r+1]--;\n}\ninline void dfs(int p,int fa)\n{\n\tdfn[p][0]=++ts;\n\tint cur0=-size[v[p]];\n\tcnt[v[p]]++,size[v[p]]++;\n\tfor(int i=fir[p];i;i=e[i].nxt)\n\t{\n\t\tint q=e[i].to,cur;\n\t\tif(q==fa) continue;\n\t\tcur=size[v[p]],dfs(q,p);\n\t\tif(cur^size[v[p]]) update(dfn[q][0],dfn[q][1],1);\n\t}\n\tdfn[p][1]=ts;\n\tcur0+=size[v[p]];\n\tif(cnt[v[p]]>1||cur0<all[v[p]]) update(dfn[p][0],dfn[p][1],0);\n\tcnt[v[p]]--;\n}\nint main()\n{\n\tint a,b,ans=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&v[i]),tmp[i]=v[i];\n\tsort(tmp+1,tmp+n+1);\n\tint m=unique(tmp+1,tmp+n+1)-(tmp+1);\n\tfor(int i=1;i<=n;i++)\n\t\tv[i]=lower_bound(tmp+1,tmp+m+1,v[i])-tmp,all[v[i]]++;\n\tfor(int i=1;i<n;i++)\n\t\tscanf(\"%d%d\",&a,&b),add(a,b);\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++)\n\t\tval[i]+=val[i-1],ans+=(!val[i]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1614063795,
        "uid": 81238,
        "name": "MCAdam",
        "ccfLevel": 7,
        "title": "CF1467E Distinctive Roots in a Tree"
    },
    {
        "content": "\u8ba8\u8bba\u4e86\u4e0b\u53d1\u73b0\u8c8c\u4f3c\u8fd8\u6709\u4e2a $\\Theta(n\\sqrt n)$ \u6216 $\\Theta(n\\log n)$ \u7684\u679a\u4e3e\u6bcf\u4e2a\u6839\u662f\u5426\u80fd\u4f5c\u4e3a\u7b54\u6848\u7684\u505a\u6cd5\n\n\u5927\u81f4\u5373\u968f\u610f\u56fa\u5b9a\u4e00\u4e2a\u6839 dp \u5b50\u6811\u5185\u662f\u5426\u5b58\u5728\u4e3a\u524d\u540e\u4ee3\u5173\u7cfb\u7684\u540c\u8272\u8282\u70b9\u5bf9\uff0c\u53ef\u4ee5\u53d1\u73b0\u5f53\u524d\u6839\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8282\u70b9\u5bf9\uff1b\u7136\u540e\u518d\u6362\u6839\n\n\u4e3b\u8981\u95ee\u9898\u5728\u4e8e\u7b2c\u4e8c\u6b21 dfs\uff08\u6362\u6839\uff09\u65f6\u8be2\u95ee\u5b50\u6811\u5185\u662f\u5426\u5b58\u5728\u67d0\u79cd\u989c\u8272\u7684\u7ed3\u70b9\u65f6\u8981\u5982\u4f55\u5904\u7406\u3002\u7b80\u5355\u5730\u53ef\u4ee5\u60f3\u5230\u628a\u8be2\u95ee\u90fd\u79bb\u7ebf\u4e0b\u6765\uff0c\u7136\u540e\u53ef\u4ee5\u76f4\u63a5\u83ab\u961f\u505a\uff08\u4e3b\u5e2d\u6811\u5219\u8c8c\u4f3c\u641e\u4e0d\u4e86...\uff09\uff1b\u66f4\u8fdb\u4e00\u6b65\u7684\u53ef\u4ee5\u53d1\u73b0\u8be2\u95ee\u90fd\u662f\u4f9d\u8d56\u4e8e\u8fb9\uff08\u6709\u5411\uff09\u7684\uff0c\u5373\u6700\u591a\u6709 $2(n-1)$ \u79cd\u8be2\u95ee\uff08\u5305\u62ec\u7b2c\u4e00\u6b21 dfs \u65f6\uff09\u4e14\u5f88\u5bb9\u6613\u5728\u7b2c\u4e00\u6b21 dfs \u65f6\u7528\u5e38\u89c4\u65b9\u6cd5\u90fd\u6c42\u51fa\u6765\uff08\u5411\u513f\u5b50\u7684\u8fb9\u7684\u8be2\u95ee\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u5408\u5e76\u6216 dsu on tree \u505a\uff1b\u5411\u7236\u4eb2\u7684\u8fb9\u7684\u8be2\u95ee\u53ef\u4ee5\u7528\u603b\u540c\u989c\u8272\u6570\u51cf\u53bb\u5b50\u6811\u5185\u540c\u989c\u8272\u6570\uff09\uff0c\u8fd9\u6837\u5c31\u80fd\u505a\u5230 $\\Theta(n\\log n)$\n\n\u8bb2\u5f97\u6bd4\u8f83\u7b80\u7565\uff0c\u4e0d\u8fc7\u6ca1\u8981\u6c42\u7684\u8bdd\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u5c55\u5f00\u4e86 \\kk\n\n## \u89e3\u6790\n\n\u679a\u4e3e\u8def\u5f84\u4e0d\u592a\u597d\u641e\n\n\u4e00\u6761\u8def\u5f84\u4e0d\u5408\u6cd5\u7684\u672c\u8d28\u662f\u542b\u6709\u76f8\u540c\u989c\u8272\u7684\u4e00\u5bf9\u7ed3\u70b9\n\n\u8003\u8651\u4e00\u5bf9\u540c\u8272\u7ed3\u70b9 $u, v$ \u4f1a\u4f7f\u54ea\u4e9b\u7ed3\u70b9\u4e0d\u80fd\u4f5c\u4e3a\u7b54\u6848\n\n\u8bbe $x$ \u4e3a\u8def\u5f84 $p(u, v)$\uff08\u6709\u5411\uff09\u7684 $u$ \u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\uff1b\u540c\u6837\u8bbe $y$ \u4e3a\u8def\u5f84 $p(v, u)$\u7684 $v$ \u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u3002\u540c\u8272\u7ed3\u70b9\u5bf9 $u, v$ \u4f1a\u5bfc\u81f4\uff0c\u6839\u5728 $u$ \u7684 $(u, x)$ \u65b9\u5411\u7684\u610f\u4e49\u4e0b\u7684 $u$ \u5b50\u6811\uff0c\u548c\u6839\u5728 $v$ \u7684 $(v, y)$ \u65b9\u5411\u7684\u610f\u4e49\u4e0b\u7684 $v$ \u5b50\u6811\uff0c\u8fd9\u4e9b\u7ed3\u70b9\u65e0\u6cd5\u4f5c\u4e3a\u7b54\u6848\n\n\u5982\u679c\u5c06\u4e0a\u8ff0\u7684 \u201c$u$ \u5b50\u6811\u201d\u3001\u201c$v$ \u5b50\u6811\u201d \u89c6\u4e3a $u$\u3001$v$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u90a3\u4e48\u8981\u60f3\u77e5\u9053\u4e00\u4e2a\u7ed3\u70b9\u7684\u8d21\u732e\uff0c\u5b9e\u9645\u4e0a\u5c31\u53ea\u9700\u786e\u5b9a\u5176\u6240\u6709\u8fde\u51fa\u53bb\u7684\u8fb9\u7684 \u201c\u65b9\u5411\u201d \u662f\u5426\u5b58\u5728\u540c\u8272\u7ed3\u70b9\uff08\u5373\u6765\u81ea\u540c\u4e00\u6761\u8fb9\u7684\u65b9\u5411\u7684\u540c\u8272\u7ed3\u70b9\u4ea7\u751f\u7684\u8d21\u732e\u662f\u4e00\u6837\u7684\uff09\u3002\u63a5\u4e0b\u6765\u79f0\u5bf9\u4e8e $u$\uff0c\u5b58\u5728\u540c\u8272\u7ed3\u70b9\u7684\u8fb9 $(u, x)$\uff08\u6709\u5411\uff09\u662f \u201c\u4ea7\u751f\u8d21\u732e\u7684\u201d\n\n\u5982\u679c\u77e5\u9053\u4e86\u6bcf\u6761\u8fb9\u662f\u5426\u4ea7\u751f\u8d21\u732e\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u662f\u6700\u591a $2(n-1)$ \u4e2a\u5b50\u6811\u67d3\u8272\u7684\u4fee\u6539\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u89e3\u51b3\uff1b\u7531\u4e8e\u672c\u9898\u67d3\u8272\u7684\u7279\u6b8a\u6027\uff08\u4ec5\u6709\u4e00\u79cd\u989c\u8272\uff0c\u6700\u540e\u8be2\u95ee\u672a\u67d3\u8272\u7ed3\u70b9\u6570\u76ee\uff09\uff0c\u8fd8\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u8f6c\u533a\u95f4 $+1$ \u5dee\u5206\u505a\uff0c\u6700\u540e\u8f93\u51fa\u503c\u4e3a $0$\uff08\u5373\u672a\u88ab\u67d3\u8272\uff09\u7684\u5143\u7d20\u6570\u5373\u53ef\n\n\u63a5\u4e0b\u6765\u5c31\u8003\u8651\u5982\u4f55\u6c42\u51fa\u6bcf\u6761\u8fb9\u662f\u5426\u4ea7\u751f\u8d21\u732e\n\n\u8fd9\u53ef\u4ee5\u968f\u610f\u56fa\u5b9a\u4e00\u4e2a\u6839 dfs\uff0c\u5bf9\u4e8e\u5411\u5b50\u6811\u7684\u8fb9\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6216 dsu on tree \u786e\u5b9a\uff1b\u81f3\u4e8e\u5411\u7236\u4eb2\u7684\u8fb9\uff0c\u53ef\u4ee5\u7528\u5168\u5c40\u540c\u989c\u8272\u6570\u51cf\u53bb\u5b50\u6811\u5185\u540c\u989c\u8272\u6570\u6765\u786e\u5b9a\uff0c\u5b50\u6811\u5185\u540c\u989c\u8272\u6570\u53ef\u4ee5\u7528\u4e00\u6837\u7684\u65b9\u5f0f\u6c42\u51fa\u3002\u5982\u679c\u662f dsu on tree \u7684\u8bdd\u5199\u8d77\u6765\u4e5f\u4e0d\u4f1a\u5f88\u9ebb\u70e6\uff1b\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u5373\u4e3a $\\Theta(n\\log n)$\n\n\u4f46\u80fd\u4e0d\u80fd\u518d\u7ed9\u529b\u70b9\uff1f\n\n\u51b7\u9759\u4e00\u4e0b\uff0c\u521a\u624d\u6211\u4eec\u505a\u7684\u5176\u5b9e\u5c31\u662f\uff0c\u8be2\u95ee\u5b50\u6811\uff08\u5904\u7406\u7684\u90a3\u6761\u6709\u5411\u8fb9\u8fde\u5411\u7684\u90a3\u4e2a\u7ed3\u70b9\u7684\u5b50\u6811\uff09\u5185\u662f\u5426\u5b58\u5728\u67d0\u79cd\u989c\u8272\u7684\u7ed3\u70b9\uff08`1.`\uff09\uff0c\u548c\u8be2\u95ee\u5b50\u6811\u5185\u548c\u5b50\u6811\u6839\u540c\u989c\u8272\u7684\u7ed3\u70b9\u6570\u76ee\uff08`2.`\uff09\n\n\u8003\u8651\u53cd\u8fc7\u6765\u5904\u7406\u8fd9\u4e9b\u8be2\u95ee\u3002\u5373\u5728 dfs \u65f6\u7ef4\u62a4\u5f53\u524d\u7ed3\u70b9 $u$ \u5230\u6839 $r$ \u7684\u8def\u5f84 $p(u, r)$\uff0c\u5e76\u8003\u8651\u66f4\u65b0\u5b83\u4eec\n\n\u770b\u8d77\u6765\u8c8c\u4f3c\u66f4\u96be\u505a\u4e86\u3002\u4f46\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u9996\u5148\u53d1\u73b0\u5728\u7ed3\u70b9 $u$ \u6211\u4eec\u53ea\u4f1a\u66f4\u65b0\u548c\u7ed3\u70b9 $u$ \u540c\u8272\u7684\u7ed3\u70b9\uff0c\u63a5\u7740\u53d1\u73b0\u6211\u4eec\u5176\u5b9e\u53ea\u9700\u5bf9\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4\u6df1\u5ea6\u6700\u6df1\u7684\u90a3\u4e2a\u5c31\u53ef\u4ee5\u505a\u4e86\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e `1.`\uff0c\u4ece $u$ \u7684\u8fb9 $(u, v)$ dfs \u8fdb\u5165 $v$ \u5b50\u6811\u65f6\u4f1a\u6709\u4e00\u4e2a \u201c$v$ \u5b50\u6811\u5185\u662f\u5426\u5b58\u5728 $u$ \u7684\u989c\u8272\u7684\u7ed3\u70b9\u201d \u7684\u8be2\u95ee\uff0c\u6211\u4eec\u6bd4\u8f83\u8fd9\u91cc\u7684 \u201c$u$\u201d \u7684\u6df1\u5ea6\u5e76\u4fdd\u7559\uff0c\u5bb9\u6613\u53cd\u8bc1\u8fd9\u6837\u662f\u4e0d\u91cd\u4e0d\u6f0f\u7684\uff1b\u5bf9\u4e8e `2.`\uff0c\u6211\u4eec\u5355\u7eaf\u5730\u5bf9\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4 $p(u, r)$ \u4e0a\u6df1\u5ea6\u6700\u6df1\u7684\u90a3\u4e2a\u7ed3\u70b9\uff0c\u7136\u540e\u7528\u7c7b\u4f3c dp \u7684\u601d\u8def\u66f4\u65b0\u5373\u53ef\uff08\u611f\u89c9\u6bd4\u8f83\u663e\u7136\u5c31\u4e0d\u5177\u4f53\u63cf\u8ff0\u4e86\uff1b\u7531\u4e8e\u8f6c\u79fb\u53ea\u5728\u540c\u989c\u8272\u7ed3\u70b9\u95f4\uff0c\u53ef\u4ee5\u8003\u8651\u540c\u989c\u8272\u7684\u7ed3\u70b9\u7684\u865a\u6811\u8fdb\u884c\u7406\u89e3\uff09\n\n\u4e8e\u662f\u5c31\u80fd\u628a\u8fd9\u90e8\u5206\u505a\u5230 $\\Theta(n)$ \u4e86\n\n\uff08\u8fd9\u91cc\u5df2\u7ecf\u5c3d\u529b\u8be6\u7ec6\u5730\u63cf\u8ff0\u4e86\uff0c\u5982\u679c\u8fd8\u611f\u89c9\u8bb2\u4e0d\u6e05\u695a\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801qaq\uff09\n\n## CODE\n\n\u5b9e\u73b0\u7ec6\u8282\u53ef\u80fd\u8f83\u591a\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing std::vector;\nusing std::min;\nusing std::sort;\n\nconst int MAXN =2e5+20;\n\n/*------------------------------IO------------------------------*/\n\nnamespace IO_number{\n\tint read(){\n\t\tint x =0; char c =getchar(); bool f =0;\n\t\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\t\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\t\treturn (f) ? -x : x;\n\t}\n}\nusing namespace IO_number;\n\n/*------------------------------Graph------------------------------*/\n\nint first[MAXN], tote;\nstruct edge{\n\tint net, to;\n}e[MAXN<<1];\n\ninline void addedge(const int &u, const int &v){\n\t++tote, e[tote].to =v, e[tote].net =first[u], first[u] =tote;\n\t++tote, e[tote].to =u, e[tote].net =first[v], first[v] =tote;\n}\n\ninline int twin(const int &eid){\n\treturn ((eid-1)^1)+1;\n}\n\n/*------------------------------Arrays------------------------------*/\n\nvector<int> a, cnt_tot_color;\n\n/*------------------------------Range_Query------------------------------*/\n\nnamespace RQ{\n\tvector<int> diff;\n\t\n\tvoid init(const int &n){\n\t\tdiff.resize(n+2, 0);\n\t}\n\n\tvoid assign(const int &l, const int &r){\n\t\tconst int n =a.size()-1;\n\t\t\n\t\t++diff[l], --diff[min(r, n)+1];\n\t}\n}\nusing RQ::assign;\n\n/*------------------------------Dfs------------------------------*/\n\nnamespace Dfs{\n\tvector<int> dfn, siz;\n\tint Dfn =0;\n\t\n\tvoid dfs_pre(const int &u, const int &fa){\n\t\tsiz[u] =1, dfn[u] =++Dfn;\n\t\tfor(int l =first[u]; l; l =e[l].net)\n\t\t\tif(e[l].to != fa)\n\t\t\t\tdfs_pre(e[l].to, u), siz[u] +=siz[e[l].to];\n\t}\n\t\n\tint vis[MAXN];\n\tvector<int> cnt;\n\t/**\n\t * vis[color]: p(r, u) \u6bcf\u79cd\u989c\u8272\u6df1\u5ea6\u6700\u6df1\u7684\u7ed3\u70b9\uff0c\u7684\u8fdb\u5165\u5f53\u524d\u5b50\u6811\u7684\u8fb9 id //\n\t * cnt[u]: u \u5b50\u6811\u5185\u6709\u591a\u5c11\u540c\u989c\u8272\u7ed3\u70b9 ( \u542b u ) //\n\t**/\n\tvoid dfs(const int &u, const int &fa){\n\t\tcnt[u] =1;\n\t\t\n\t\tfor(int l =first[u]; l; l =e[l].net)\n\t\t\tif(e[l].to != fa){\n\t\t\t\tint backup =vis[a[u]];\n\t\t\t\tvis[a[u]] =l;\n\t\t\t\tdfs(e[l].to, u);\n\t\t\t\tvis[a[u]] =backup;\n\t\t\t}\n\t\t\n\t\t// 1. \u8003\u8651\u8fb9 vis[a[u]] ( \u6709\u5411 ) \u662f\u5426\u4ea7\u751f\u8d21\u732e //\n\t\tif(vis[a[u]]){\n\t\t\tconst int eid_into_subtree =vis[a[u]];\n\t\t\tconst int _u =e[eid_into_subtree].to;\n\t\t\t/* V- \u53ef\u80fd\u6709\u591a\u6b21\u76f8\u540c\u7684\u4fee\u6539\uff0c\u4e0d\u8fc7\u65e0\u6240\u8c13 */\n\t\t\tassign(1, dfn[_u]-1), assign(dfn[_u]+siz[_u], 0x3f3f3f3f);\n\t\t\t\n\t\t\t// \u7c7b\u4f3c dp \u5730\u7edf\u8ba1 cnt //\n\t\t\tcnt[e[twin(eid_into_subtree)].to] +=cnt[u];\n\t\t}\n\t\t// 2. \u8003\u8651 u \u5411\u6839\u65b9\u5411\u7684\u8fb9\u662f\u5426\u4ea7\u751f\u8d21\u732e //\n\t\tif(cnt[u] < cnt_tot_color[a[u]])\n\t\t\tassign(dfn[u], dfn[u]+siz[u]-1);\n\t}\n\t\n\tvoid init(const int &n){\n\t\tdfn.resize(n+1), siz.resize(n+1), cnt.resize(n+1);\n\t}\n}\nusing Dfs::dfs_pre;\nusing Dfs::dfs;\n\n/*------------------------------Main------------------------------*/\n\nvoid recolor(){\n\tconst int n =a.size()-1;\n\t\n\tstruct node{\n\t\tint val, pos;\n\t};\n\tvector<node> arr(n);\n\tfor(int i =0; i < n; ++i)\n\t\tarr[i].val =a[i+1], arr[i].pos =i+1;\n\tsort(arr.begin(), arr.end(), [&](const node &A, const node &B){ return A.val < B.val; });\n\tint Col =0;\n\tfor(int i =0; i < n; ++i){\n\t\tif(i != 0 && arr[i].val != arr[i-1].val)\n\t\t\t++Col;\n\t\ta[arr[i].pos] =Col;\n\t\t++cnt_tot_color[Col];\n\t}\n}\n\nint main(){\n\tint n =read();\n\ta.resize(n+1), cnt_tot_color.resize(n, 0);\n\tfor(int i =1; i <= n; ++i)\n\t\ta[i] =read();\n\tfor(int i =0; i < n-1; ++i)\n\t\taddedge(read(), read());\n\t\n\trecolor();\n\tDfs::init(n);\n\tdfs_pre(1, 0);\n\tRQ::init(n);\n\tdfs(1, 0);\n\tint ans =0;\n\tfor(int i =1, sum =RQ::diff[1]; i <= n; ++i, sum +=RQ::diff[i])\n\t\tif(sum == 0)\n\t\t\t++ans;\n\tprintf(\"%d\", ans);\n}\n```",
        "postTime": 1612327708,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1467E \u3010Distinctive Roots in a Tree\u3011"
    },
    {
        "content": "\u5148\u786e\u7acb\u4e00\u4e2a\u6839\u3002\u6211\u4eec\u8981\u5224\u65ad\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u5f00\u59cb\u7684\u6240\u6709\u8def\u5f84\u662f\u5426\u5b58\u5728\u91cd\u590d\u503c\u3002\u90a3\u4e48\u53ef\u4ee5 dfs\uff1a\n\n1. \u5f80\u4e0b\u722c\n\n\u8fd9\u90e8\u5206\u5f88\u597d\u505a\uff0c\u76f4\u63a5\u8fdb\u884c\u4e00\u6b21\u81ea\u4e0b\u800c\u4e0a\u7684 dfs \u5373\u53ef\uff0c$u$ \u5982\u679c\u53ef\u884c\uff0c\u5c31\u9700\u8981\u5728 $u$ \u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u503c\u90fd\u548c $u$ \u7684\u503c\u4e0d\u4e00\u6837\uff08\u53ef\u4ee5\u7528 dfs \u5e8f\u5b9e\u73b0\uff09\uff0c\u800c\u4e14\u6ee1\u8db3 $fa[v]=u$ \u7684\u6240\u6709 $v$ \u4e5f\u9700\u8981\u53ef\u884c\u3002\u5982\u679c\u53ef\u4ee5\u90a3\u4e48\u79f0\u4e4b\u4e3a $1$ \u7c7b\u53ef\u884c\u3002\n\n2. \u5f80\u4e0a\u8dd1\u540e\u5f80\u4e0b\u722c\n\n\u8fd9\u90e8\u5206\u4e5f\u4e0d\u96be\uff0c\u76f4\u63a5\u8fdb\u884c\u4e00\u6b21\u81ea\u4e0a\u800c\u4e0b\u7684 dfs \u5373\u53ef\u3002$u$ \u5982\u679c\u53ef\u884c\uff0c\u5c31\u9700\u8981 $u$ \u548c $fa[u]$ \u5728\u9664\u53bb $u$ \u7684\u5b50\u6811\u7684\u5927\u6811\u4e0a\u7684\u503c\u662f\u552f\u4e00\u7684\uff0c$fa[u]$ \u9700\u8981\u53ef\u884c\uff0c\u800c\u4e14 $fa[u]$ \u7684\u5b50\u6811\u7684\u5b50\u8282\u70b9\uff08\u9664\u53bb $u$\uff09\u4e5f\u9700\u8981 $1$ \u7c7b\u53ef\u884c\uff0c\u5982\u679c\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\uff08\u5f53\u7136\u9700\u8981 $1$ \u7c7b\u53ef\u884c\uff09\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002",
        "postTime": 1610240691,
        "uid": 107484,
        "name": "wmy_goes_to_thu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1467E \u3010Distinctive Roots in a Tree\u3011"
    }
]