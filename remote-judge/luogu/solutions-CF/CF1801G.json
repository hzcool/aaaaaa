[
    {
        "content": "\u591a\u6a21\u5f0f\u4e32\u5339\u914d\u95ee\u9898\uff0c\u5148\u5f80 AC \u81ea\u52a8\u673a\u4e0a\u60f3\u3002\n\n\u53d1\u73b0\u8be2\u95ee\u533a\u95f4\u662f $t$ \u524d\u7f00\u7684\u8be2\u95ee\u662f\u5f88\u597d\u505a\u7684\u3002\u53ea\u9700\u8981\u5148\u8dd1\u4e00\u904d\u5339\u914d\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c $sum$ \u5373\u53ef\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5 $[l,r]$\uff0c\u53ef\u4ee5\u7528 $sum_r-sum_{l-1}$ \u5f97\u5230\u4e00\u4e2a**\u521d\u6b65**\u7684\u7ed3\u679c\u3002\u6b64\u65f6\u8de8\u8fc7\u4e86 $l$ \u4e0e $l+1$ \u4e14\u7ed3\u675f\u4f4d\u7f6e $\\le r$ \u7684\u4e32\u4e5f\u88ab\u7edf\u8ba1\u4e86\u8fdb\u6765\u3002\u53ea\u9700\u8981\u628a\u8fd9\u4e9b\u4e32\u51cf\u6389\u5373\u53ef\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4f4d\u7f6e $i$\uff0c\u5206\u6790\u54ea\u4e9b\u4e32\u53ef\u4ee5\u8de8\u8fc7\u5b83\u3002\u8bbe\u4f4d\u7f6e $i$ \u5bf9\u5e94\u5230\u8be5\u6a21\u5f0f\u4e32 $s$ \u7684\u4f4d\u7f6e\u4e3a $j$\uff0c$s$ \u957f\u5ea6\u4e3a $k$\uff0c\u5219\u6709\uff1a\n\n- $s_{1,j}$ \u4e3a $t_{1,i}$ \u7684\u540e\u7f00\u3002\n- $s_{j+1,k}$ \u4e3a $t_{i+1,n}$ \u7684\u524d\u7f00\u3002\n\n\u56de\u987e AC \u81ea\u52a8\u673a\u5339\u914d\u7684\u8fc7\u7a0b\u3002\u82e5 $t_{1,i}$ \u5728\u81ea\u52a8\u673a\u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\u4e3a $x$\uff0c\u5219**\u5176\u5728 $fail$ \u6811\u4e0a\u6240\u6709\u7956\u5148\u4ee3\u8868\u7684\u4e32\u4e00\u5b9a\u662f\u5f53\u524d\u524d\u7f00\u7684\u540e\u7f00**\u3002\n\n\u4e3a\u4e86\u5e94\u5bf9\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u9700\u8981\u5efa\u7acb\u53cd\u4e32\u7684\u81ea\u52a8\u673a\u3002\n\n$j$ \u7684\u5212\u5206\u5f62\u6210\u4e86\u4e00\u79cd\u914d\u5bf9\u7684\u5173\u7cfb\uff0c\u5373 $s_{1,j}$ \u5728\u6b63\u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9\u4e0e $s_{j+1,r}$ \u5728\u53cd\u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9\u914d\u5bf9\u3002\u8be2\u95ee\u5219\u5f62\u5982\u67e5\u8be2\u4e24\u4e2a\u70b9\u5230\u5bf9\u5e94\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u914d\u5bf9\u70b9\u5bf9\u7684\u6570\u91cf\u3002\n\n\u7136\u540e\u5c31\u662f\u7b80\u5355\u6570\u636e\u7ed3\u6784\u4e86\u3002\u70b9\u5bf9\u6570\u4e0d\u8d85\u8fc7 $\\sum|s|$\uff0cdfs \u7b2c\u4e00\u68f5\u6811\uff0c\u5bf9\u7b2c\u4e8c\u68f5\u505a\u5b50\u6811\u52a0\uff0c\u9000\u51fa\u65f6\u64a4\u9500\u5373\u53ef\u3002\u6811\u72b6\u6570\u7ec4\u7b80\u5355\u7ef4\u62a4\u3002\n\n\u4f46\u6ce8\u610f\u5230\u8fd8\u6f0f\u4e86\u4e00\u4e2a\u91cd\u8981\u6761\u4ef6\uff1a**\u8de8\u8d8a\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\u4e0d\u8d85\u8fc7** $r$\u3002\u8fd9\u4e2a\u597d\u529e\uff0c\u67e5\u8be2\u65f6\u5148\u8df3\u5230 $s_{l,r}$ \u5728\u53cd\u81ea\u52a8\u673a\u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\u5373\u53ef\uff0c\u7b80\u5355\u500d\u589e\u4e00\u4e0b\u3002\n\n\u53ef\u80fd\u6709\u4e00\u4e9b\u5361\u5e38\uff0c\u7ebf\u6bb5\u6811\u4e0d\u4e00\u5b9a\u80fd\u8fc7\u3002",
        "postTime": 1678536870,
        "uid": 170890,
        "name": "Cxny",
        "ccfLevel": 7,
        "title": "\u819c\u62dc\u4f20\u5947\u7279\u7ea7\u5b57\u7b26\u4e32\u5927\u5e08 @I_am_Accepted @ButtercAKe @\u88c2\u5934\u7075\u67e9\uff01"
    },
    {
        "content": "\u6a21\u62df\u8d5b\u51fa\u8fc7\u52a0\u5f3a\u7248\uff0c\u57fa\u672c\u4e0a\u590d\u8ff0\u4e86\u51fa\u9898\u4eba @ButterCake \u7684\u505a\u6cd5\u3002\n\n\u79bb\u7ebf\u6240\u6709\u8be2\u95ee\uff0c\u628a $[l,r]$ \u7684\u8d21\u732e\u62c6\u6210 $[1,l]$\uff0c$[1,r]$ \u548c\u8de8\u8d8a $l-1,l$ \u7684\u4e09\u79cd\u5206\u522b\u8ba1\u7b97\u3002\n\n\u5bf9\u4e8e\u524d\u7f00\u7684\u60c5\u51b5\uff0c\u5efa\u7acb $s_i$ \u7684 ACAM \u4ee5\u540e\u628a $t$ \u62c9\u4e0a\u53bb\u8dd1\uff0c\u6bcf\u8d70\u4e00\u6b65\u8bb0\u5f55 fail \u6811\u4e0a\u7ec8\u6b62\u8282\u70b9\u7956\u5148\u7684\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u8de8\u8d8a\u7684\u60c5\u51b5\uff0c\u518d\u5efa\u7acb\u6240\u6709 $s_i$ \u53cd\u4e32\u7684 ACAM\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u8bb0\u5f55 $[1,l-1]$ \u5728\u6b63 ACAM \u4e0a\u7684\u8282\u70b9\u548c $[l,r]$ \u5728\u53cd ACAM \u4e0a\u7684\u8282\u70b9\uff0c\u540e\u8005\u9700\u8981\u5148\u5904\u7406\u540e\u7f00\u7684\u8282\u70b9\u7136\u540e\u500d\u589e\u8df3\u7956\u5148\u3002\u95ee\u9898\u8f6c\u5316\u6210\uff1a\u4e24\u4e2a\u8282\u70b9\u5728\u5bf9\u5e94 ACAM \u7684 fail \u6811\u4e0a\u7684\u7956\u5148\u4e2d\uff0c\u6709\u591a\u5c11\u5bf9\u80fd\u62fc\u6210\u4e00\u4e2a\u5b8c\u6574\u7684 $s_i$\u3002\n\n\u5c06\u8be2\u95ee\u6302\u5728\u53cd ACAM \u7684\u5bf9\u5e94\u8282\u70b9\u4e0a\u3002\u5904\u7406\u8be2\u95ee\u65f6\u5728\u53cd ACAM \u7684 fail \u6811\u4e0a dfs\uff0c\u6bcf\u6b21\u8fdb\u5165\u5b50\u6811\u65f6\uff0c\u5c06\u53ef\u4ee5\u548c\u6839\u8282\u70b9\u5408\u5e76\u6210\u4e00\u4e2a $s_i$ \u7684\u5bf9\u5e94\u8282\u70b9\u52a0\u4e0a\u53bb\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u64cd\u4f5c\u662f $O(S)$ \u7684\u3002\u5b50\u6811\u52a0\u5355\u70b9\u67e5\u8be2\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(S(|\\Sigma|+\\log S)+q\\log S+|t|)$\u3002\n\n```cpp\ntypedef long long ll;\nconst int max_tl = 5e6, max_n = 5e5, max_q = 5e5, max_sm = 1e6, max_lgsm = 22, cs = 26;\n\nstruct acam\n{\n\tint tr[max_sm + 1][cs], fail[max_sm + 1], len[max_sm + 1], cnt[max_sm + 1], ind = 1;\n\tacam() { memset(tr, -1, sizeof tr); }\n\tvoid insert(char *s)\n\t{\n\t\tint ptr = 0;\n\t\tfor (int i = 0; s[i]; i++)\n\t\t{\n\t\t\tint &nxt = tr[ptr][s[i] - 'a'];\n\t\t\tif (nxt == -1)\n\t\t\t{\n\t\t\t\tnxt = ind++;\n\t\t\t\tlen[nxt] = i + 1;\n\t\t\t}\n\t\t\tptr = nxt;\n\t\t}\n\t\tcnt[ptr]++;\n\t}\n\tvoid build()\n\t{\n\t\tstatic queue<int> q;\n\t\tfail[0] = -1;\n\t\tfor (int i = 0; i < cs; i++)\n\t\t\tif (tr[0][i] == -1)\n\t\t\t\ttr[0][i] = 0;\n\t\t\telse\n\t\t\t{\n\t\t\t\tfail[tr[0][i]] = 0;\n\t\t\t\tq.push(tr[0][i]);\n\t\t\t}\n\t\twhile (!q.empty())\n\t\t{\n\t\t\tint cur = q.front();\n\t\t\tq.pop();\n\t\t\tfor (int i = 0; i < cs; i++)\n\t\t\t\tif (tr[cur][i] == -1)\n\t\t\t\t\ttr[cur][i] = tr[fail[cur]][i];\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfail[tr[cur][i]] = tr[fail[cur]][i];\n\t\t\t\t\tq.push(tr[cur][i]);\n\t\t\t\t}\n\t\t}\n\t}\n} A1, A2;\n\nstruct fwt\n{\n\tll tr[max_sm + 2];\n\tint n;\n\t\n\tinline int lowbit(int x) { return x & -x; }\n\tvoid add(int x, int v)\n\t{\n\t\tfor (x++; x <= n; x += lowbit(x))\n\t\t\ttr[x] += v;\n\t}\n\tll get(int x)\n\t{\n\t\tll ret = 0;\n\t\tfor (x++; x; x -= lowbit(x))\n\t\t\tret += tr[x];\n\t\treturn ret;\n\t}\n} tr;\n\nint hd[max_sm + 1], des[max_sm], nxt[max_sm], len[max_n], fa[max_lgsm][max_sm + 1], e_cnt = 0;\nint st[max_sm + 1], ed[max_sm + 1], dfs_ind = 0;\nll ans[max_q], pf[max_tl + 1], gcnt[max_sm + 1];\nvector<pair<int, int>> qr[max_sm + 1];\nvector<int> md[max_sm + 1];\n\nvoid add(int s, int t)\n{\n\tdes[e_cnt] = t;\n\tnxt[e_cnt] = hd[s];\n\thd[s] = e_cnt++;\n}\n\nvoid dfs0(int id)\n{\n\tgcnt[id] += A1.cnt[id];\n\tst[id] = dfs_ind++;\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tgcnt[dst] += gcnt[id];\n\t\tdfs0(dst);\n\t}\n\ted[id] = dfs_ind;\n}\n\nvoid dfs1(int id)\n{\n\tfor (int x : md[id])\n\t{\n\t\ttr.add(st[x], 1);\n\t\ttr.add(ed[x], -1);\n\t}\n\tfor (auto [lx, x] : qr[id])\n\t\tans[x] -= tr.get(st[lx]);\n\t\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tdfs1(dst);\n\t}\n\t\n\tfor (int x : md[id])\n\t{\n\t\ttr.add(st[x], -1);\n\t\ttr.add(ed[x], 1);\n\t}\n}\n\nchar rs[max_sm + max_n], t[max_tl + 1];\nint ps[max_tl + 1], rps[max_tl + 1], anc[max_sm];\nchar *s[max_n];\n\nsigned main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\t\n\tint n, m;\n\t\n\tcin >> n >> m >> t;\n\t\n\tchar *nxtrs = rs;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\ts[i] = nxtrs;\n\t\tcin >> s[i];\n\t\tlen[i] = strlen(s[i]);\n\t\tnxtrs += len[i] + 1;\n\t\t\n\t\tA1.insert(s[i]);\n\t\treverse(s[i], s[i] + len[i]);\n\t\tA2.insert(s[i]);\n\t}\n\tA1.build();\n\tA2.build();\n\ttr.n = A1.ind;\n\t\n\tfill(hd, hd + A1.ind, -1);\n\tfor (int i = 1; i < A1.ind; i++)\n\t\tadd(A1.fail[i], i);\n\tdfs0(0);\n\t\n\tint tl = 0;\n\tfor (int i = 0, ptr = 0; t[i]; i++, tl++)\n\t{\n\t\tps[i + 1] = ptr = A1.tr[ptr][t[i] - 'a'];\n\t\tpf[i + 1] = pf[i] + gcnt[ptr];\n\t}\n\tfor (int i = tl, ptr = 0; i > 0; i--)\n\t\trps[i - 1] = ptr = A2.tr[ptr][t[i - 1] - 'a'];\n\t\n\tcopy(A2.fail, A2.fail + A2.ind, fa[0]);\n\t\n\tint lgsm = 1;\n\tfor (int cc = 2; cc <= A2.ind; cc <<= 1, lgsm++)\n\t\tfor (int i = 0; i < A2.ind; i++)\n\t\t\tif (fa[lgsm - 1][i] == -1)\n\t\t\t\tfa[lgsm][i] = -1;\n\t\t\telse\n\t\t\t\tfa[lgsm][i] = fa[lgsm - 1][fa[lgsm - 1][i]];\n\t\n\tfor (int i = 0, l, r; i < m; i++)\n\t{\n\t\tcin >> l >> r;\n\t\tans[i] = pf[r] - pf[l - 1];\n\t\t\n\t\tint rxn = rps[l - 1];\n\t\tfor (int j = lgsm - 1; j >= 0; j--)\n\t\t\tif (fa[j][rxn] != -1 && A2.len[fa[j][rxn]] > r - l + 1)\n\t\t\t\trxn = fa[j][rxn];\n\t\tif (A2.len[rxn] > r - l + 1)\n\t\t\trxn = fa[0][rxn];\n\t\tqr[rxn].emplace_back(ps[l - 1], i);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tint lp = 0, rp = 0;\n\t\tfor (int j = 0; s[i][j]; j++)\n\t\t\tanc[j + 1] = rp = A2.tr[rp][s[i][j] - 'a'];\n\t\t\n\t\treverse(s[i], s[i] + len[i]);\n\t\tfor (int j = 0; j < len[i] - 1; j++)\n\t\t{\n\t\t\tlp = A1.tr[lp][s[i][j] - 'a'];\n\t\t\tmd[anc[len[i] - j - 1]].push_back(lp);\n\t\t}\n\t}\n\t\n\te_cnt = 0;\n\tfill(hd, hd + A2.ind, -1);\n\tfor (int i = 1; i < A2.ind; i++)\n\t\tadd(A2.fail[i], i);\n\tdfs1(0);\n\t\n\tfor (int i = 0; i < m; i++)\n\t\tcout << ans[i] << \" \\n\"[i == m - 1];\n\t\n\treturn 0;\n}\n```",
        "postTime": 1678408940,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1801G A task for substrings"
    },
    {
        "content": "\u7c7b\u4f3c [P3246 [HNOI2016]\u5e8f\u5217](https://www.luogu.com.cn/problem/P3246) \u5c06\u7b54\u6848\u8868\u793a\u4e3a\uff1a$[1,r]$ \u5185\u90e8\u7b54\u6848\u51cf\u53bb $[1,l-1]$ \u5185\u90e8\u7b54\u6848\u51cf\u53bb\u5f00\u5934\u5728 $[1,l-1]$\uff0c\u7ed3\u5c3e\u5728 $[l,r]$ \u7684\u7b54\u6848\u3002\n\n\u524d\u4e24\u4e2a\u5bb9\u6613\u4f7f\u7528 ACAM \u9884\u5904\u7406\uff0c\u5173\u952e\u5728\u7b2c\u4e09\u90e8\u5206\uff0c\u5176\u7b49\u4ef7\u4e8e $[1,l-1]$ \u9009\u4e00\u4e2a\u540e\u7f00\uff0c$[l,r]$ \u9009\u4e00\u4e2a\u524d\u7f00\u62fc\u8d77\u6765\u662f\u5408\u6cd5\u4e32\u7684\u65b9\u6848\u6570\u3002\n\n\u5efa\u7acb\u6b63\u4e32\uff0c\u53cd\u4e32\u7684 ACAM\uff0c\u95ee\u9898\u53d8\u4e3a\u7ed9\u5b9a\u6b63\u4e32\u8282\u70b9 $u$ \u4e0e\u53cd\u4e32\u8282\u70b9 $v$\uff08\u627e\u8282\u70b9\u53ef\u4ee5\u76f4\u63a5\u500d\u589e\u5b9a\u4f4d\uff09\uff0c\u6c42\u6709\u591a\u5c11\u5bf9\u7956\u5148\u53ef\u4ee5\u62fc\u8d77\u6765\u53d8\u4e3a\u5408\u6cd5\u4e32\u3002\n\n\u6ce8\u610f\u5230\u5408\u6cd5\u7ed3\u70b9\u5bf9\u6570\u53ea\u6709 $S$ \u79cd\uff0c\u800c\u7edf\u8ba1\u7b54\u6848\u662f\u4e8c\u7ef4\u504f\u5e8f\uff0c\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\uff0c\u590d\u6742\u5ea6 $O((S+q)\\log S)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define lowbit(x) (x&-x)\nusing namespace std;\nconst int maxn=500005,maxt=1000005,maxN=5000005,maxk=27,maxf=20;\nint n,m,w;\nint ps[2][maxt],xx[maxt],yy[maxt],pos[maxN],rpos[maxN],T[maxt];\nlong long ans[maxn],sum[maxN];\nvector<int>o[maxt];\nvector< pair<int,int> >q[maxt];\nstring s,t;\nvoid update(int x,int v) {\n\tfor(int i=x; i<maxt; i+=lowbit(i))\n\t\tT[i]+=v;\n}\nint query(int x) {\n\tint res=0;\n\tfor(int i=x; i; i-=lowbit(i))\n\t\tres+=T[i];\n\treturn res;\n}\nstruct ACAM {\n\tint tot=1,dfns=0;\n\tint nxt[maxt][maxk],fail[maxt],L[maxt],R[maxt],len[maxt],fore[maxt][maxf],val[maxt];\n\tvector<int>v[maxt];\n\tqueue<int>q;\n\tvoid insert(string s,int typ) {\n\t\tint now=1;\n\t\tfor(int i=0; i<s.size(); i++) {\n\t\t\tint c=s[i]-96;\n\t\t\tif(nxt[now][c]==0)\n\t\t\t\tnxt[now][c]=++tot,len[tot]=len[now]+1;\n\t\t\tnow=nxt[now][c],ps[typ][i+1]=now;\n\t\t}\n\t}\n\tvoid dfs(int x,int last) {\n\t\tL[x]=++dfns,fore[x][0]=last;\n\t\tfor(int i=1; i<=19; i++)\n\t\t\tfore[x][i]=fore[fore[x][i-1]][i-1];\n\t\tfor(int i=0; i<v[x].size(); i++)\n\t\t\tdfs(v[x][i],x);\n\t\tR[x]=dfns;\n\t}\n\tvoid build() {\n\t\tfor(int i=1; i<=26; i++) {\n\t\t\tif(nxt[1][i])\n\t\t\t\tfail[nxt[1][i]]=1,q.push(nxt[1][i]);\n\t\t\telse nxt[1][i]=1;\n\t\t}\n\t\twhile(!q.empty()) {\n\t\t\tint x=q.front();\n\t\t\tq.pop(),val[x]+=val[fail[x]];\n\t\t\tfor(int i=1; i<=26; i++) {\n\t\t\t\tif(nxt[x][i])\n\t\t\t\t\tfail[nxt[x][i]]=nxt[fail[x]][i],q.push(nxt[x][i]);\n\t\t\t\telse nxt[x][i]=nxt[fail[x]][i];\n\t\t\t}\n\t\t}\n\t\tfor(int i=2; i<=tot; i++)\n\t\t\tv[fail[i]].emplace_back(i);\n\t\tdfs(1,0);\n\t}\n\tint get(int p,int k) {\n\t\tif(len[p]<=k)\n\t\t\treturn p;\n\t\tfor(int i=19; i>=0; i--)\n\t\t\tif(len[fore[p][i]]>k)\n\t\t\t\tp=fore[p][i];\n\t\treturn fore[p][0];\n\t}\n} M1,M2;\nvoid solve(int x) {\n\tfor(int i=0; i<o[x].size(); i++)\n\t\tupdate(M2.L[o[x][i]],1),update(M2.R[o[x][i]]+1,-1);\n\tfor(int i=0; i<q[x].size(); i++)\n\t\tans[q[x][i].second]-=query(M2.L[q[x][i].first]);\n\tfor(int i=0; i<M1.v[x].size(); i++)\n\t\tsolve(M1.v[x][i]);\n\tfor(int i=0; i<o[x].size(); i++)\n\t\tupdate(M2.L[o[x][i]],-1),update(M2.R[o[x][i]]+1,1);\n}\nint main() {\n\tios::sync_with_stdio(false);\n\tcin>>n>>m>>t;\n\tfor(int i=1; i<=n; i++) {\n\t\tcin>>s,M1.insert(s,0),reverse(s.begin(),s.end()),M2.insert(s,1);\n\t\tint l=s.size();\n\t\tfor(int j=1; j<l; j++)\n\t\t\txx[++w]=ps[0][j],yy[w]=ps[1][l-j];\n\t\tM1.val[ps[0][l]]++;\n\t}\n\tM1.build(),M2.build();\n\tfor(int i=1; i<=w; i++)\n\t\to[xx[i]].emplace_back(yy[i]);\n\tpos[0]=1;\n\tfor(int i=0,now=1; i<t.size(); i++)\n\t\tnow=M1.nxt[now][t[i]-96],pos[i+1]=now,sum[i+1]=sum[i]+M1.val[now];\n\tfor(int i=t.size()-1,now=1; i>=0; i--)\n\t\tnow=M2.nxt[now][t[i]-96],rpos[i+1]=now;\n\tfor(int i=1,x,y; i<=m; i++) {\n\t\tcin>>x>>y,ans[i]=sum[y]-sum[x-1];\n\t\tq[pos[x-1]].emplace_back(make_pair(M2.get(rpos[x],y-x+1),i));\n\t}\n\tsolve(1);\n\tfor(int i=1; i<=m; i++)\n\t\tprintf(\"%lld%c\",ans[i],i==m? '\\n':' ');\n\treturn 0;\n}\n```",
        "postTime": 1683808806,
        "uid": 105611,
        "name": "IdnadRev",
        "ccfLevel": 0,
        "title": "\u3010\u5b57\u7b26\u4e32\u8bb0\u5f55\u3011CF1801G A task for substrings"
    },
    {
        "content": "\u9996\u5148\uff0c\u663e\u7136\u7b54\u6848\u7b49\u4e8e $[1,r]$ \u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u4e32\u4e2a\u6570\u51cf\u53bb $[1,l-1]$ \u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u4e32\u4e2a\u6570\u51cf\u53bb\u8de8 $l-1,l$ \u7684\u5b50\u4e32\u4e2a\u6570\u3002\u524d\u9762\u4e24\u90e8\u5206\u7684\u5904\u7406\u662f\u5bb9\u6613\u7684\uff0c\u76f4\u63a5\u5efa\u51fa ACAM \u7136\u540e\u6bcf\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\u5c31\u5728\u4e0a\u9762\u6761\u8f6c\u79fb\u8fb9\u5373\u53ef\u3002\n\n\u8003\u8651\u600e\u4e48\u5904\u7406\u8de8\u4e2d\u95f4\u7684\u8d21\u732e\u3002\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u627e $[1,l-1]$ \u7684\u4e00\u6bb5\u540e\u7f00\u4e0e $[l,r]$ \u4e00\u6bb5\u524d\u7f00\u62fc\u8d77\u6765\u5f97\u5230\u67d0\u4e2a $s_i$\u3002\u8003\u8651\u518d\u5efa\u51fa $s_i$ \u53cd\u4e32\u7684 ACAM \u5e76\u5b9a\u4f4d\u51fa $[l,r]$ \u5728\u53cd\u4e32 ACAM \u4e0a\u7684\u8282\u70b9\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\uff0c\u5148\u4ece\u540e\u5230\u524d\u626b\u4e00\u904d\u5904\u7406\u51fa\u6bcf\u4e2a\u540e\u7f00\u5bf9\u5e94\u7684\u53cd\u4e32\u5728\u53cd ACAM \u4e0a\u7684\u8282\u70b9\uff0c\u7136\u540e\u5728\u53cd ACAM \u6811\u4e0a\u500d\u589e\u76f4\u5230\u5bf9\u5e94\u8282\u70b9\u7684\u6df1\u5ea6 $\\le r-l+1$\uff0c\u6211\u4eec\u8bbe $[1,l-1]$ \u5728\u6b63 ACAM \u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\u4e3a $A$\uff0c\u5728 $[l,r]$ \u5728\u53cd ACAM \u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\u4e3a $B$\uff0c\u90a3\u4e48\u6211\u4eec\u76f8\u5f53\u4e8e\u8981\u6c42\u51fa\u6709\u591a\u5c11\u5bf9 $(x,y)$ \u6ee1\u8db3 $x$ \u5728\u6b63 fail \u6811\u4e0a\u662f $A$ \u7684\u7956\u5148\uff0c$y$ \u5728\u53cd fail \u6811\u4e0a\u662f $B$ \u7684\u7956\u5148\uff0c\u4e14 $x,y$ \u80fd\u62fc\u6210\u67d0\u4e2a $s_i$\uff0c\u79bb\u7ebf BIT \u5373\u53ef\u3002\n\n\u8bb0 $S=\\sum|s_i|,T=|t|$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(S\\log S+T)$\u3002\n\n```cpp\nconst int MAXN=5e5;\nconst int MAXM=5e6;\nconst int MAXL=1e6;\nconst int LOG_N=20;\nint n,m,qu;char t[MAXM+5],buf[MAXL+5];string s[MAXN+5];\nstruct ACAM{\n\tint ch[MAXL+5][26],ncnt,cnt[MAXL+5],fail[MAXL+5],dep[MAXL+5];\n\tvoid insert(string str){\n\t\tint cur=0;\n\t\tfor(int i=0;i<str.size();i++){\n\t\t\tif(!ch[cur][str[i]-'a'])ch[cur][str[i]-'a']=++ncnt,dep[ncnt]=i+1;\n\t\t\tcur=ch[cur][str[i]-'a'];\n\t\t}cnt[cur]++;\n\t}\n\tint hd[MAXL+5],to[MAXL+5],nxt[MAXL+5],ec;\n\tvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\n\tvoid getfail(){\n\t\tqueue<int>q;\n\t\tfor(int i=0;i<26;i++)if(ch[0][i])q.push(ch[0][i]);\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tfor(int i=0;i<26;i++){\n\t\t\t\tif(ch[x][i])fail[ch[x][i]]=ch[fail[x]][i],q.push(ch[x][i]);\n\t\t\t\telse ch[x][i]=ch[fail[x]][i];\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=ncnt;i++)adde(fail[i],i);\n\t}\n}S,rv;\nint sumc[MAXL+5],nd_pre[MAXM+5],nd_suf[MAXM+5],fa[MAXL+5][LOG_N+2];\nint dfn[MAXL+5],edt[MAXL+5],tim;\nll sum[MAXM+5],res[MAXN+5];\nvoid dfs1(int x){\n\tdfn[x]=++tim;\n\tfor(int e=S.hd[x];e;e=S.nxt[e]){\n\t\tint y=S.to[e];sumc[y]=sumc[x]+S.cnt[y];\n\t\tdfs1(y);\n\t}edt[x]=tim;\n}\nvector<pii>qv[MAXL+5];vector<int>ins[MAXL+5];\nstruct fenwick{\n\tll t[MAXL+5];\n\tvoid add(int x,int v){for(int i=x;i<=S.ncnt+1;i+=(i&(-i)))t[i]+=v;}\n\tll query(int x){ll ret=0;for(int i=x;i;i&=(i-1))ret+=t[i];return ret;}\n}T;\nvoid dfs2(int x){\n\tfor(int id:ins[x])T.add(dfn[id],1),T.add(edt[id]+1,-1);\n\tfor(pii p:qv[x])res[p.se]-=T.query(dfn[p.fi]);\n\tfor(int e=rv.hd[x];e;e=rv.nxt[e])dfs2(rv.to[e]);\n\tfor(int id:ins[x])T.add(dfn[id],-1),T.add(edt[id]+1,1);\n}\nint main(){\n\tscanf(\"%d%d%s\",&n,&qu,t+1);m=strlen(t+1);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",buf+1);int len=strlen(buf+1);\n\t\tfor(int j=1;j<=len;j++)s[i].pb(buf[j]);\n\t\tS.insert(s[i]);reverse(s[i].begin(),s[i].end());\n\t\trv.insert(s[i]);reverse(s[i].begin(),s[i].end());\n\t}S.getfail();rv.getfail();dfs1(0);\n\tfor(int i=1;i<=m;i++)nd_pre[i]=S.ch[nd_pre[i-1]][t[i]-'a'];\n\tfor(int i=m;i;i--)nd_suf[i]=rv.ch[nd_suf[i+1]][t[i]-'a'];\n\tfor(int i=1;i<=m;i++)sum[i]=sum[i-1]+sumc[nd_pre[i]];\n//\tfor(int i=1;i<=m;i++)printf(\"%lld%c\",sum[i],\" \\n\"[i==m]);\n\tfor(int i=1;i<=rv.ncnt;i++)fa[i][0]=rv.fail[i];\n\tfor(int i=1;i<=LOG_N;i++)for(int j=1;j<=rv.ncnt;j++)\n\t\tfa[j][i]=fa[fa[j][i-1]][i-1];\n\tfor(int i=1;i<=qu;i++){\n\t\tint l,r;scanf(\"%d%d\",&l,&r);\n\t\tres[i]=sum[r]-sum[l-1];\n\t\tint A=nd_pre[l-1],B=nd_suf[l];\n\t\tfor(int j=LOG_N;~j;j--)if(rv.dep[fa[B][j]]>r-l+1)B=fa[B][j];\n\t\tif(rv.dep[B]>r-l+1)B=fa[B][0];\n//\t\tprintf(\"! %d %d\\n\",A,B);\n\t\tqv[B].pb(mp(A,i));\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tvector<int>bk(s[i].size()+2),fw(s[i].size()+2);\n\t\tfor(int j=1;j<=s[i].size();j++)fw[j]=S.ch[fw[j-1]][s[i][j-1]-'a'];\n\t\tfor(int j=s[i].size();j;j--)bk[j]=rv.ch[bk[j+1]][s[i][j-1]-'a'];\n\t\tfor(int j=1;j<s[i].size();j++)ins[bk[j+1]].pb(fw[j]);\n\t}\n\tdfs2(0);\n\tfor(int i=1;i<=qu;i++)printf(\"%lld%c\",res[i],\" \\n\"[i==qu]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1682483872,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1801G A task for substrings"
    }
]