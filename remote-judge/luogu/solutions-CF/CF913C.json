[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n$n$\u79cd\u67e0\u6aac\u6c41\uff0c\u6bcf\u79cd\u4f53\u79ef\u4e3a$2^{i-1}$\uff0c\u4ef7\u683c\u4e3a$W_i$\u3002\u8be2\u95ee\u8d2d\u4e70\u603b\u4f53\u79ef\u4e0d\u5c0f\u4e8e$L$\u7684\u67e0\u6aac\u6c41\uff0c\u6700\u5c11\u8981\u82b1\u591a\u5c11\u94b1\u3002\n\n## \u9898\u89e3\n\n\u5f88\u663e\u7136\uff0c\u5982\u679c$2\\times W_i<W_{i+1}$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e24\u74f6$i$\u79cd\u67e0\u6aac\u6c41\u6765\u66ff\u4ee3\u4e00\u74f6$i+1$\u79cd\u67e0\u6aac\u6c41\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u4e00\u6b21\u8d2d\u4e70\u7684\u4f53\u79ef\u8d8a\u5927\uff0c\u5e73\u5747\u82b1\u8d39\u7684\u94b1\u8d8a\u5c11\u3002\n\n\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u5165\u624b\uff1a\u5047\u5982\u4f60\u6709$m$\u5143\uff0c\u4f60**\u6700\u591a**\u80fd\u591f\u8d2d\u4e70\u5230\u591a\u5c11\u67e0\u6aac\u6c41\u5462\uff1f\n\n\u6839\u636e\u4e0a\u8ff0\u7684\u8d2a\u5fc3\u65b9\u6cd5\uff0c\u6211\u4eec\u80fd\u591f\u53d1\u73b0\uff0c**\u5c3d\u53ef\u80fd\u8d2d\u4e70\u4f53\u79ef\u66f4\u5927\u7684\u67e0\u6aac\u6c41\u80fd\u7701\u66f4\u591a\u94b1**\u3002\u4ed6\u7684\u6b63\u786e\u6027\u6bd4\u8f83\u5bb9\u6613\u8bf4\u660e\u3002\u5f88\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u8d2d\u4e70\u4e24\u6b21$i$\u79cd\u67e0\u6aac\u6c41\uff0c\u5c31\u4e0d\u5982\u8d2d\u4e70\u4e00\u6b21$i+1$\u79cd\u67e0\u6aac\u6c41\uff0c\u56e0\u6b64\u6bcf\u79cd\u679c\u6c41**\u6700\u591a\u8d2d\u4e70\u4e00\u74f6**\u3002\u5982\u679c\u6211\u4eec\u653e\u5f03\u8d2d\u4e70\u7b2c$i$\u79cd\u67e0\u6aac\u6c41\uff0c\u5373\u4f7f\u6211\u4eec\u5c06\u5269\u4e0b\u7684\u79cd\u7c7b\u90fd\u4e70\u4e86\u4e00\u904d\uff0c\u4e5f\u8fbe\u4e0d\u5230\u5b83\u7684\u4f53\u79ef\uff0c\u751a\u81f3\u8fd8\u8981\u82b1\u8d39\u66f4\u591a\u7684\u94b1\u3002\n\n\u56e0\u6b64\uff0c\u8fd9\u6837\u4e00\u4e2a\u4e8c\u5206\u7684\u7b97\u6cd5\u5c31\u51fa\u6765\u4e86\u3002\u6bcf\u6b21\u5224\u65ad$x$\u5143\u80fd\u5426\u8d2d\u4e70\u5230$L$\u4f53\u79ef\u7684\u67e0\u6aac\u6c41\uff0c\u8fdb\u884c\u4e8c\u5206\u64cd\u4f5c\u5373\u53ef\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define up(l,r,i) for(int i=l;i<=r;i++)\n#define dn(l,r,i) for(int i=l;i>=r;i--)\nusing namespace std;\n\ntypedef long long LL;\nconst int INF =2147483647;\nLL qread(){\n    LL w=1,c,ret;\n    while((c=getchar())> '9'||c< '0')\n    w=(c=='-'?-1:1); ret=c-'0';\n    while((c=getchar())>='0'&&c<='9')\n    ret=ret*10+c-'0';\n    return ret*w;\n}\nLL n,l,W[31],ans,p,k;\nbool chk(LL x){\n    LL ret=0;\n    dn(30,0,i) if(x>=W[i]) ret+=(1<<i),x-=W[i];\n    return ret>=l;\n}\nint main(){\n    n=qread(),l=qread(); W[0]=qread();\n    up(1,n-1,i){\n        W[i]=qread(); if(W[i]>W[i-1]<<1) W[i]=W[i-1]<<1;\n    }\n    up(n,30,i) W[i]=W[i-1]<<1;\n    p=0,k=1; while(k){\n        if(!chk(p+k)) p+=k,k<<=1; else k>>=1;\n    }\n    printf(\"%lld\\n\",p+1);\n    return 0;\n}\n```",
        "postTime": 1589376438,
        "uid": 330759,
        "name": "\u56e7\u4ed9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF913C \u3010Party Lemonade\u3011"
    },
    {
        "content": "\u4e00\u9053\u975e\u5e38\u5de7\u5999\u7684\u8d2a\u5fc3\u9898\u3002\n\n\u5148\u6765\u5c1d\u8bd5\u5904\u7406$l$\u7684\u6bcf\u4e00\u4f4d\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e00\u4f4d\u6709\u4e09\u79cd\u5904\u7406\u65b9\u5f0f\u3002\n\n- \u5f53\u9ad8\u4f4d\u91cf\u591a\u4ef7\u5ec9\u65f6\uff0c\u591a\u4e70\u4e86\u9ad8\u4f4d\u5c31\u6ca1\u5fc5\u8981\u518d\u4e70\u4efb\u4f55\u4f4e\u4f4d\u4e86\uff0c\u5305\u62ec\u5f53\u524d\u8fd9\u4e00\u4f4d\n\n- \u53ea\u6309\u8fd9\u4e00\u4f4d$i$\u5bf9\u5e94\u7684$2^i$\u4e2a$c[i]$\u5143\u8d2d\u4e70\n\n- \u7531\u4f4e\u4f4d\u51d1\u51fa\u6765\u66f4\u5b9e\u60e0\n\n~~\u611f\u89c9\u7206\u641c\u53ef\u4ee5\u505a\uff0c~~\u6211\u4eec\u53ef\u4ee5\u7528$dp$\u5904\u7406\u51fa\u8d2d\u4e70$2^i$\u4e2a\uff08\u5373\u7b2ci\u4f4d\u7684\u4ee3\u4ef7\uff09\u6240\u9700\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u8fd9\u6837\u5c31\u4e0d\u5fc5\u8003\u8651\u7b2c\u4e09\u79cd\u60c5\u51b5\u3002\n```cpp\ndp[0]=c[0];\n\tfor(int i=1;i<n;i++)//\u8d2d\u4e702^i\u6700\u5c0f\u4ee3\u4ef7\n\t\tdp[i]=min(c[i],dp[i-1]*2);\n```\n\n\u4ece$l$\u7684\u9ad8\u4f4d\u5411\u4f4e\u4f4d\u626b\u4e00\u904d\uff0c\u4f9d\u6b21\u7d2f\u52a0\u6d88\u9664$l$\u7684\u6bcf\u4e00\u4f4d\u7684\u4ee3\u4ef7\uff0c\u5e76\u5728\u6bcf\u4e00\u4f4d\u90fd\u8bd5\u4e00\u4e0b\u662f\u5426\u5728\u8fd9\u4e00\u4f4d\u591a\u4e70\u4e00\u4efd\u80fd\u5f97\u5230\u66f4\u4f18\u89e3\uff0c\u7b54\u6848\u5373\u4e3a\u5176\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u590d\u6742\u5ea6$O(n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n//#define int ll\nconst int maxn=210,inf=0x3f3f3f3f,mod=1000000007;\nll c[maxn],dp[maxn];\nsigned main()\n{\n\tll n,l,x,y;\n\tcin>>n>>l;\n\tfor(int i=0;i<n;i++)\n\t\tcin>>c[i];\n\tdp[0]=c[0];\n\tfor(int i=1;i<n;i++)//\u8d2d\u4e702^i\u6700\u5c0f\u4ee3\u4ef7\n\t\tdp[i]=min(c[i],dp[i-1]*2);\n\tll ans=LLONG_MAX,sum=0;\n\tfor(ll i=n-1;i>=0;i--)\n\t{//\u9ad8\u4f4d\u5230\u4f4e\u4f4d\n\t\tll des=l/(1ll<<i);\n\t\tsum+=des*dp[i];//\u7d2f\u8ba1\u4ee3\u4ef7\n\t\tl&=(1<<i)-1;//\u4fdd\u7559\u4f4e\u4f4d\n\t\tans=min(ans,sum+(l>0)*dp[i]);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1586244355,
        "uid": 186219,
        "name": "Overstars",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF913C \u3010Party Lemonade\u3011"
    },
    {
        "content": "http://www.elijahqi.win/2018/01/09/codeforces-913c-party-lemonade/ \u200e\n\n\n http://blog.csdn.net/elijahqi/article/details/79008889\n\nC. Party Lemonade\n\ntime limit per test\n\n1 second\n\nmemory limit per test\n\n256 megabytes\n\ninput\nstandard input\n\noutput\nstandard output\n\n\nA New Year party is not a New Year party without lemonade! As usual, you are expecting a lot of guests, and buying lemonade has already become a pleasant necessity.\n\n\nYour favorite store sells lemonade in bottles of n different volumes at different costs. A single bottle of type i has volume 2i\u2009-\u20091 liters and costs ci roubles. The number of bottles of each type in the store can be considered infinite.\n\n\nYou want to buy at least L liters of lemonade. How many roubles do you have to spend?\n\nInput\n\nThe first line contains two integers n and L (1\u2009\u2264\u2009n\u2009\u2264\u200930; 1\u2009\u2264\u2009L\u2009\u2264\u2009109) \u2014 the number of types of bottles in the store and the required amount of lemonade in liters, respectively.\n\n\nThe second line contains n integers c1,\u2009c2,\u2009...,\u2009cn (1\u2009\u2264\u2009ci\u2009\u2264\u2009109) \u2014 the costs of bottles of different types.\n\nOutput\n\nOutput a single integer \u2014 the smallest number of roubles you have to pay in order to buy at least L liters of lemonade.\n\nExamples\n\nInput\n\n4 12\n20 30 70 90\n\n\nOutput\n\n150\n\nInput\n\n4 3\n10000 1000 100 10\n\n\nOutput\n\n10\n\nInput\n\n4 3\n10 100 1000 10000\n\n\nOutput\n\n30\n\nInput\n\n5 787787787\n\n123456789 234567890 345678901 456789012 987654321\n\n\nOutput\n\n44981600785557577\n\n\nNote\n\nIn the first example you should buy one 8-liter bottle for 90 roubles and two 2-liter bottles for 30 roubles each. In total you'll get 12 liters of lemonade for just 150 roubles.\n\n\nIn the second example, even though you need only 3 liters, it's cheaper to buy a single 8-liter bottle for 10 roubles.\n\n\nIn the third example it's best to buy three 1-liter bottles for 10 roubles each, getting three liters for 30 roubles.\n\n\n\u8fd8\u662ficefox\u5de8\u4f6c\u5f3a\u554aorz  %%\u6211\u597d\u83dc\u554a \u7ec6\u8282\u592a\u591a\u6211\u8fd8\u662ffail system test\u4e86\n\n\n\u9898\u610f\uff1a\u7ed9\u5b9a2^0~2^n-1L\u7684\u6c7d\u6c34 \u7684\u82b1\u8d39 \u6700\u540e\u81f3\u5c11L\u7684\u6c7d\u6c34\u7684\u6700\u5c0f\u82b1\u8d39\u662f\u591a\u5c11\n\n\n\u90a3\u4e48\u9996\u5148\u6211\u4eec\u628a\u4ed6\u7ed9\u7684\u6570\u90fd\u8bfb\u8fdb\u6765  \u7136\u540e\u5012\u7740dp\u4e00\u4e0b \u8bbedp[i]\u8868\u793a\u4e702^i\u7684\u6700\u5c0f\u82b1\u8d39\u662f\u591a\u5c11\n\n\n\u7136\u540e\u5f97\u5230\u6bcf\u4e2a\u6b63\u786e\u7684\u82b1\u8d39 \u7136\u540e\u9488\u5bf9\u6bcf\u4e00\u4f4d\u8d2a\u5fc3\u8003\u8651\u5373\u53ef \u4e3a\u4ec0\u4e48\u8fd9\u9898\u53ef\u4ee5\u8d2a\u5fc3\u8003\u8651 \u56e0\u4e3a\u8fd9\u4e2a\u90fd\u662f2\u7684\u6b21\u5e42 \u6240\u4ee5\u6211 \u786e\u4fe1\u6211\u5982\u679c\u5c0f\u7684\u6b21\u5e42\u591a\u9009\u4e86 \u4e00\u5b9a\u4e0d\u4f1a\u5f71\u54cd\u6211\u5927\u7684\u6b21\u5e42\n\n\n\u6240\u4ee5\u53ef\u4ee5\u8fd9\u4e48\u6765\u641e \u6211\u628aL\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236 \u5355\u72ec\u8003\u8651\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e0a\u7684\u6570\u600e\u4e48\u53bb\u641e\n\n\n\u5047\u8bbe\u6211\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u662f1010110001 \u90a3\u4e48 \u9996\u5148\u67091\u7684\u4f4d\u7f6e\u6211\u53ef\u4ee5\u8ba4\u4e3a\u4e00\u5b9a\u4e702^i\u6700\u4f18 \u6bd4\u5982\u5904\u7406\u5176\u4e2d\u4e00\u4e2a\u5b50\u95ee\u9898110001\u7684\u65f6\u5019 \u5728\u5904\u7406\u6700\u9ad8\u4f4d1\u7684\u65f6\u5019 \u6211\u6709\u53ef\u80fd\u9009\u4e24\u4e2a\u8fd9\u4e2a\u4e00\u4f4d\u7f6e\u4e0a\u7684\u6570 \u6709\u53ef\u80fd\u5c31\u662f\u6309\u90e8\u5c31\u73ed\u7684\u9009\u4e00\u4e2a \u7136\u540e\u6bd4\u6211\u6700\u9ad8\u4f4d\u5c0f\u7684\u5730\u65b9\u6211\u518d\u9012\u5f52\u4e0b\u53bb\u53bb\u641e \u8fd9\u91cc\u5f97\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282 \u5c31\u662f\u6bd4\u5982\u6211\u9009\u4e86\u6700\u540e\u4e00\u4e2a1010110001\u7684\u6700\u540e\u4e00\u4e2a1  \u4f46\u662f\u6211\u53d1\u73b0 \u5b83\u5230\u4e0a\u4e00\u4e2a1\u7684\u4f4d\u7f6e\u4e2d\u7684\u67d0\u4e2a0\u7684\u4f4d\u7f6e\u6211\u9009\u4e86\u53cd\u800c\u4f1a\u66f4\u597d \u90a3\u4e48\u6211\u5c31\u9700\u8981\u53bb\u9009\u4e00\u4e0b\u8fd9\u4e2a\u4f4d\u7f6e\u76840  \u7136\u540e\u540e\u9762\u539f\u672c\u7b97\u51fa\u6765\u7684\u4ee3\u4ef7\u76f4\u63a5\u88ab\u66ff\u6362\u5c31\u597d\n\n\n\u8fd8\u6709\u4e2a\u5c0f\u7ec6\u8282 \u6211\u8fd9\u6837\u7b97\u51fa\u6765 \u6bd4\u59828\u7684\u8d39\u7528\u662f1000 \u4f46\u662f\u6211\u53d1\u73b0\u6211\u4e701000\u7684\u8d39\u7528\u53ea\u9700\u898110\u5373\u53ef \u6211\u6700\u540e\u8fd8\u9700\u8981\u626b\u4e00\u904d \u628a\u8fd9\u79cd\u60c5\u51b5\u505a\u6389\u5373\u53ef\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nint n,L;long long cost[33];\ninline ll dfs(int v){\n    double len=log2(v);int len1=len;\n    if(len==len1) return cost[len1];\n    ll left=v-(1<<len1);ll tmp=dfs(left);int len2=log2(left);\n    for (int i=len2+1;i<=len1;++i) tmp=min(tmp,cost[i]);\n    return cost[len1]*2<cost[len1]+tmp?cost[len1]*2:cost[len1]+tmp;\n}\nint main(){\n    freopen(\"cf.in\",\"r\",stdin);\n    scanf(\"%d%d\",&n,&L);\n    for (int i=1;i<=32;++i) cost[i]=1LL<<62; \n    for (int i=0;i<n;++i) scanf(\"%lld\",&cost[i]);\n    for (int i=1;i<=32;++i) cost[i]=min(cost[i],cost[i-1]*2);\n    //for (int i=0;i<30;++i) printf(\"%lld \",cost[i]);puts(\"\");\n    int len=log2(L);ll ans=dfs(L);\n    for (int i=len+1;i<=32;++i) ans=min(ans,cost[i]);\n    printf(\"%I64d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1517178207,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF913C \u3010Party Lemonade\u3011"
    },
    {
        "content": "# CF913C\n\n## \u9898\u76ee\u5206\u6790\n\u672c\u9898\u6309\u987a\u5e8f\u7ed9\u51fa 1L\u30012L\u30014L \u2026\u2026 \u67e0\u6aac\u6c41\u7684\u4ef7\u94b1\u3002\u663e\u7136\u5982\u679c 2L \u67e0\u6aac\u6c41\u6bd4 2 * 1L \u7684\u4ef7\u94b1\u8981\u8d35\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 2\u676f1L \u67e0\u6aac\u6c41\u6765\u4ee3\u66ff2L\u67e0\u6aac\u6c41\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u8bfb\u5165\u7684\u65f6\u5019\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e2a\u5c0f\u5904\u7406\uff0c\u8bfb\u53d6 $c_i$ \u540e\uff0c\u4f7f $c_i=min( c_i ,c_{i-1}* 2)$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u53ef\u4ee5\u4ee5\u6700\u4fbf\u5b9c\u7684\u4ef7\u683c\u4e70\u5230 $2^i$ L \u67e0\u6aac\u6c41\u4e86\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u83b7\u5f97\u4e86\u7b2c\u4e00\u4e2a\u8d2a\u5fc3\u601d\u8def:\u5c06\u8981\u4e70\u7684\u679c\u6c41\u6570 L \u770b\u6210\u4e00\u4e2a\u591a\u4f4d\u4e8c\u8fdb\u5236\u6570\uff08\u6211\u4eec\u628a\u9996\u4f4d\u53eb\u505a\u7b2c 0 \u4f4d\uff09\uff0c\u4ece\u9ad8\uff08n-1\uff09\u4f4d\u5230\u4f4e\u4f4d\u8003\u8651\uff0c\u5982\u679c\u7b2c $i$ \u4f4d\u662f 1 \uff0c\u90a3\u4e48\u5c31\u5c06\u7b54\u6848\u7d2f\u52a0\u4e0a $c_i$ \u3002\n\n\u4f46\u662f\u5230\u4e86 \u6837\u4f8b2 \u5c31\u53d1\u73b0\u4e0d\u5bf9\u4e86\u3002\u7b54\u6848\u662f20\uff0c\u6211\u4eec\u5374\u8f93\u51fa 11000 \u3002**\u4e3a\u4ec0\u4e48\u5462\uff1f** \u518d\u6b21\u770b\u9898\uff0c**\u8d2d\u4e70\u4e0d\u5c0f\u4e8e L \u5347\u67e0\u6aac\u6c41**\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u4e70\u8d85\u8fc7 L \u5347\u3002\u5728 \u6837\u4f8b2 \u4e2d\uff0c\u4e70 2L \u67e0\u6aac\u6c41\u82b1 \uffe51000\uff0c\u4f46\u4e70 8L \u67e0\u6aac\u6c41\u53ea\u8981 \uffe510 \uff01~~\uff08\u771f\u662f\u5947\u5999\uff09~~ \u8fd9\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5728\u8003\u8651\u7b2c $i$ \u4f4d\u7684\u65f6\u5019\uff0c\u5982\u679c\u7b2c i \u4f4d\u662f 1\uff0c\u6211\u4eec\u53ef\u4ee5\u82b1 $c_i$ \u9009\u62e9\u4e70 $2^i$ \u5347\u67e0\u6aac\u6c41\uff0c\u518d\u8003\u8651\u66f4\u4f4e\u4f4d\uff0c\u4e5f\u53ef\u4ee5\u5e72\u8106\u76f4\u63a5\u82b1 $2* c_i$ \u7684\u4ef7\u683c\u4e70 $2* 2^i$ \u676f\u67e0\u6aac\u6c41\u3002\u5c31\u4e0d\u53bb\u7ba1\u66f4\u4f4e\u4f4d\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u6765\u8fdb\u884c\u89e3\u51b3\uff0c\u7528 $dfs(x)$ \u6765\u5904\u7406\u7b2c $i$ \u4f4d\u53ca\u4ee5\u4e0b\u8981\u82b1\u7684\u94b1\uff0c\u6211\u4eec\u53ef\u4ee5\u5148 $dfs(x-1)$ \u770b\u770b\u4e0b\u9762\u51e0\u4f4d\u8981\u82b1\u591a\u5c11\u94b1\uff0c\u518d\u51b3\u5b9a\u662f\u82b1\u4e0b\u9762\u8981\u82b1\u7684\u94b1\uff0c\u8fd8\u662f\u76f4\u63a5\u591a\u4e70\u4e00\u676f $2^i$ \u91cf\u7684\u67e0\u6aac\u6c41\u3002\u8fb9\u754c\u662f x=0 \u65f6\uff0c\u5982\u679c L \u7684\u7b2c 0 \u4f4d\u662f 1 \u7684\u8bdd\u5c31\u8fd4\u56de $c_0$ \uff0c\u5426\u5219\u8fd4\u56de 0\u3002\n\n\u9012\u5f52\u90e8\u5206\u4ee3\u7801\uff1a\n```cpp\n#define ull unsigned long long \null dfs(ull x){\n\tif(x==0){//\u8fb9\u754c\u4e86\n\t\tif(L&1) return c[0];//\u4e701\u5347\n\t\telse return 0;//\u4e0d\u7528\u4e70\u8fd9 1 \u5347\uff08L\u662f\u5076\u6570\uff09\n\t}\n\tull anss=dfs(x-1);//\u5148\u5904\u7406\u4f4e\u4f4d\n\tif((L>>x)&1) return min(c[x]<<1,c[x]+anss);//\u5982\u679c\u8fd9\u4f4d\u672c\u6765\u5c31\u8981\u4e70\n\treturn min(c[x],anss);//\u5982\u679c\u8fd9\u4f4d\u672c\u6765\u4e0d\u7528\u4e70\uff0c\u4f46\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e70\u8fd9\u4e00\u4f4d\u8ba9\u540e\u9762\u51e0\u4f4d\u4e0d\u7528\u4e70\n}\n```\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u53d1\u73b0\u8fd8\u662f\u8fc7\u4e0d\u4e86\u7b2c\u56db\u4e2a\u6837\u4f8b\uff0c\u518d\u4e00\u770b\u9898\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u6ca1\u4fdd\u8bc1 $L<2^n* 2-1$ (\u7528\u4e00\u4e2an \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u4e0d\u4e00\u5b9a\u80fd\u8868\u793a L\uff09\u3002\u56e0\u4e3a\u4e0a\u9762\u8bf4\u4e86\uff0c\u4e70\u9ad8\u4f4d\u4e00\u5b9a\u6700\u4f18\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e00\u76f4\u4e70 $c_{n-1}$(\u6700\u9ad8\u4f4d\uff09,\u76f4\u5230 $L<2^n* 2-1$ \u3002\n\n## \u8be6\u7ec6\u6ce8\u91ca\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ull unsigned long long \nusing namespace std;\nvoid read(ull &x){\n\tint f=1;x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n\tx*=f;\n}\n#define N 40\null n,L;\null ans;\null c[N];\null dfs(ull x){\n\tif(x==0){//\u8fb9\u754c\u4e86\n\t\tif(L&1) return c[0];//\u4e701\u5347\n\t\telse return 0;//\u4e0d\u7528\u4e70\u8fd9 1 \u5347\uff08L\u662f\u5076\u6570\uff09\n\t}\n\tull anss=dfs(x-1);//\u5148\u5904\u7406\u4f4e\u4f4d\n\tif((L>>x)&1) return min(c[x]<<1,c[x]+anss);//\u5982\u679c\u8fd9\u4f4d\u672c\u6765\u5c31\u8981\u4e70\n\treturn min(c[x],anss);//\u5982\u679c\u8fd9\u4f4d\u672c\u6765\u4e0d\u7528\u4e70\uff0c\u4f46\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e70\u8fd9\u4e00\u4f4d\u8ba9\u540e\u9762\u51e0\u4f4d\u4e0d\u7528\u4e70\n}\nint main(){\n\tread(n),read(L),read(c[0]);//\u5148\u4e13\u95e8\u8bfb\u5165\u7b2c 0 \u4f4d \n\tfor(int i=1;i<n;i++){\n\t\tread(c[i]);\n\t\tc[i]=min(c[i],c[i-1]<<1);//\u4fdd\u8bc1\u6700\u4f18\u60e0 \n\t}\n\twhile(L>=(1<<n)){//\u4e00\u76f4\u5c06 L \u51cf\u5c0f\uff0c\u76f4\u5230\u53ef\u4ee5\u7528 n \u4f4d 2\u8fdb\u5236\u6570\u8868\u793a \n\t\tL-=1<<(n-1);\n\t\tans+=c[n-1];\n\t}\n\tcout<<ans+dfs(n-1);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1596267644,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF913C \u3010Party Lemonade\u3011"
    }
]