[
    {
        "content": "# $CodeForces 571B$ \u9898\u89e3\n# $tags$: $dp$,\u601d\u7ef4\u3002\n## \u9898\u610f\u5982\u9898\n\n### \u9996\u5148,\u539f\u9898\u7684\u6bcf$k$\u4e2a\u76f8\u51cf\uff0c\u5c31\u76f8\u5f53\u4e8e\u8f6c\u5316\u4e3a\u5c06\u539f\u6570\u5217\u6309\u7167\u4e0b\u6807%$k$\u5212\u5206\u6210$k-1$\u4e2a\u6570\u96c6\n\u4f8b\u5982\uff1a\u539f\u6570\u5217 $A_1+A_2+A_3+...+A_n$\u5212\u5206\u4e3a          \n**\u6570\u96c60:**$A_{i\\%k==0}$ **\u6570\u96c61:**$A_{i\\%k==i}$ $~...~...~$ **\u6570\u96c6k-1:**$A_{i\\%k==k-1}$ ,\u8fd9\u91cc\u5c31\u6709$k$\u4e2a\u6570\u96c6\n\n\u628a\u6570\u96c6$n$\u5f53\u505a\u4f8b\u5b50 $A_{i1}+A_{i2}+A_{i3}+...+A_{in}$,\u663e\u7136\u6570\u96c6\u6392\u5e8f\u540e\u7b54\u6848\u6700\u4f18\uff0c\u5e76\u4e14**\u5f53\u524d\u6570\u5217\u8d21\u732e\u5c31\u662f\u6700\u5927\u51cf\u53bb\u6700\u5c0f**$A_{in}-A_{i1}$ \n\n### \u8003\u8651\u6570\u96c6\u7684\u6570\u91cf\u4ee5\u53ca\u6bcf\u4e2a\u6570\u96c6\u7684\u5927\u5c0f\n\u5148\u8003\u8651\u4ee5\u540e\u9762$len\\%k$\u4e2a\u6570\u7ed3\u5c3e\u7684\u6570\u96c6,\u6bcf\u4e2a\u6570\u96c6\u7684\u5927\u5c0f\u4e3a$num_x=\\frac{n}{k}+1$,\u5e76\u4e14\u6570\u96c6\u7684\u4e2a\u6570$cnt_x$\u5373\u4e3a$len\\%k$,\u79f0\u4e4b\u4e3a**\u96c6\u5408$X$**\u3002\u7136\u540e\u4e4b\u524d\u4e0d\u662f\u4f59\u6570\u7ed3\u5c3e\u7684\u6570\u96c6\u4e2a\u6570\u4e3a(\u603b\u6570\u96c6\u6570-\u4e4b\u524d\u7ed3\u5c3e\u7684\u6570\u96c6\u6570)\u5373$cnt_y=k-len\\%k$,\u5927\u5c0f$num_y=\\frac{n}{k}$,**\u79f0\u4e4b\u4e3a\u96c6\u5408$Y$**\u3002\n\n### \u73b0\u5728\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u4e00\u5b9a\u5c5e\u4e8e\u96c6\u5408$X$\u6216\u96c6\u5408$Y$\u3002\u56e0\u4e3a\u96c6\u5408\u5927\u5c0f\u786e\u5b9a,\u5373\u9996\u5c3e\u5df2\u7ecf\u786e\u5b9a\u3002\u90a3\u4e48\u4fbf\u5177\u6709\u4e86\u65e0\u540e\u6548\u6027\u3002\n\u8bbe**$dp[i][j]$\u8868\u793a\u9009\u5b8c\u4e86i\u4e2a$X$\u96c6\u5408,j\u4e2a$Y$\u96c6\u5408\u7684\u6700\u5c0f\u548c\u3002** $dp$\u521d\u503c\u8d4b\u4e3a`0x3f`\u3002  \n\u663e\u7136\u7684$dp$\u65b9\u7a0b \n$dp[i][j]=min(dp[i][j],dp[i-1][j]+a[i*num_x+j*num_y]-a[(i-1)*num_x+j*num_y+1]);$  \n$dp[i][j]=min(dp[i][j],dp[i][j-1]+a[i*num_x+j*num_y]-a[(j-1)*num_y+i*num_x+1]);$\n\u540e\u9762$dp$\u65b9\u7a0b\u52a0\u4e0a\u7684\u8d21\u732e\u503c\u5373\u4e3a\u672b\u4f4d\u51cf\u53bb\u9996\u4f4d\u3002   \n### \u4ee3\u7801\n```\n#include<cstring>\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define rr register int\ntypedef long long ll;\nusing namespace std;\ninline ll read(){\n    char i=getchar();\n    ll f=1,res=0;\n    while(i<'0'||i>'9'){if(i=='-')f=-1;i=getchar();}\n    while(i>='0'&&i<='9'){res=res*10+i-'0';i=getchar();}\n    return res*f; \n}\nconst int N=3e5+50;\nconst int M=5e3+50; \nll a[N],dp[M][M];\nint main(){\n    int n=read(),k=read();\n    for(rr i=1;i<=n;++i) a[i]=read();\n    sort(a+1,a+n+1);\n    int cntx=n%k,cnty=k-cntx,numx=n/k+1,numy=n/k;\n    memset(dp,0x3f,sizeof dp);\n    for(rr i=0;i<=cntx;++i)\n     for(rr j=0;j<=cnty;++j){\n     \tif(!i&&!j) dp[i][j]=0;\n     \telse{\n     \t\t//\u4e00\u6bb5\u7684\u4ee3\u4ef7\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u51cf\u7b2c\u4e00\u4e2a \n     \t\tif(i!=0) dp[i][j]=min(dp[i][j],dp[i-1][j]+a[i*numx+j*numy]-a[i*numx-numx+j*numy+1]);\n     \t\tif(j!=0) dp[i][j]=min(dp[i][j],dp[i][j-1]+a[i*numx+j*numy]-a[j*numy-numy+i*numx+1]);\n     \t}\n     }\n    printf(\"%lld\\n\",dp[cntx][cnty]);\n    return 0;\n}\n```",
        "postTime": 1547732199,
        "uid": 19905,
        "name": "DarkMoon_Dragon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF571B \u3010Minimization\u3011"
    },
    {
        "content": "\u8fd9\u9053\u662f\u6bd4\u8f83\u597d\u7684\u601d\u7ef4\u9898\uff0c\u7efc\u5408\u4e86\u5f88\u591a\u601d\u8003\u65b9\u5f0f\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5b83\u662f\u957f\u8fd9\u6837\u7684\uff1a\n\n$a_1,a_2,\\cdots,a_{k-1},a_k,a_{k+1},\\cdots,a_n$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e $a_1$ \u53ea\u548c $a_{k+1}$ \u8fd8\u6709 $a_{2\\times k+1}$\uff0c$a_{3 \\times k+1}$ \u6709\u5173(\u5f53\u7136\u540e\u9762\u8fd8\u6709\u5f88\u591a)\u3002\n\n\u8fd9\u4e2a\u5206\u5272\u7684\u4e1c\u897f\u5904\u7406\u8d77\u6765\u975e\u5e38\u96be\u53d7\uff0c\u6240\u4ee5\u8003\u8651\u628a\u4e92\u76f8\u80fd\u5f71\u54cd\u7684\u6570\u90fd\u7ed9\u63d0\u51fa\u3002\n\n\u63d0\u51fa\u4e86\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e9b\u80fd\u4e92\u76f8\u5f71\u54cd\u7684\u5e8f\u5217\u90fd\u662f\u957f\u5ea6\u4e3a $n/k$ \u6216\u8005 $n/k+1$ \u7684\u3002\n\n\u4e24\u6bb5\u957f\u5ea6\u4e2d\u6bcf\u4e2a\u5e8f\u5217\u53ef\u4ee5\u770b\u6210\u662f\u76f8\u540c\u7684\u3002\n\n\u6240\u4ee5\u95ee\u9898\u5373\u8f6c\u5316\u6210\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u8ba9\u4f60\u628a\u5b83\u5206\u6210\u82e5\u5e72\u4e2a $n/k$ \u957f\u5ea6\u7684\u5e8f\u5217\uff0c\u4ee5\u53ca $n/k+1$ \u957f\u5ea6\u7684\u5e8f\u5217\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5e8f\u5217\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u6570\u53ef\u4ee5\u770b\u6210\u6570\u8f74\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u88ab\u5206\u914d\u597d\u4e86\uff0c\u90a3\u4e48\u663e\u7136\u662f\u8ba9\u6574\u4e00\u4e2a\u5e8f\u5217\u6392\u4e2a\u5e8f\u6700\u4f18\uff0c\u56e0\u4e3a $|a-b|$ \u53ef\u4ee5\u770b\u6210\u6570\u8f74\u4e0a $a$ \u70b9\u5230 $b$ \u70b9\u7684\u8ddd\u79bb\u3002\n\n\u5904\u7406\u5b8c\u4ee5\u4e0a\u8fd9\u4e9b\u4e1c\u897f\uff0c\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u8fd8\u662f\u6bd4\u8f83\u96be\u641e\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f3c\u4e4e\u6ca1\u6709 dp \u7684\u5b50\u7ed3\u6784\u6027\u8d28\u3002\n\n\u8003\u8651\u5982\u679c\u53ea\u6709\u4e24\u4e2a\u957f\u5ea6\u5206\u522b\u4e3a $x$ \u548c $x+1$ \u7684\u5e8f\u5217\uff0c\u8981\u4f60\u4ece $2\\times x +1$ \u4e2d\u5206\u51fa\u8fd9\u4e24\u4e2a\u5e8f\u5217\uff0c\u53ef\u4ee5\u731c\u4e00\u4e0b\uff0c\u5927\u6982\u662f\u6392\u4e2a\u5e8f\u7136\u540e\u518d\u5206\u5f00\u6765\u3002\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u5e8f\u5217\u672c\u8d28\u4e0a\u7684\u8d21\u732e\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u6570\u51cf\u53bb\u7b2c\u4e00\u4e2a\u6570\u3002\n\n\u5982\u679c\u628a\u8fd9\u4e2a\u539f\u5e8f\u5217(\u6392\u5e8f\u4e4b\u540e)\u53d8\u6210\u4e24\u4e2a\u5c0f\u5e8f\u5217\uff0c\u5982\u679c\u4ea4\u6362\u4e24\u4e2a\u5c0f\u5e8f\u5217\u7684\u4efb\u610f\u4e24\u4e2a\u6570\u90fd\u4f1a\u4f7f\u5f97\u7b54\u6848\u53d8\u52a3\u3002\n\n\u6240\u4ee5\u5c31\u662f\u8981\u628a\u8fd9\u4e2a\u5e8f\u5217\u6392\u5e8f\uff0c\u7136\u540e\u5206\u6210 $n/k$ \u548c $n/k+1$ \u4e24\u79cd\u957f\u5ea6\u7684\u533a\u95f4\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u957f\u5ea6\u90fd\u662f\u8fde\u7eed\u7684\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u6bd4\u8f83\u597d\u7684\u72b6\u6001\uff0c\u5373 $f_{i,j}$ \u8868\u793a\u957f\u5ea6\u4e3a $n/k+1$ \u5df2\u7ecf\u9009\u4e86 $i$ \u4e2a\uff0c$n/k$ \u957f\u5ea6\u9009\u4e86 $j$ \u4e2a\u3002\n\n\u8fd9\u6837\u5b50\u8fdb\u884c\u8f6c\u79fb\u5c31\u6bd4\u8f83\u65b9\u4fbf\u4e00\u4e9b\u3002\n\n~~\u5f53\u7136\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\u600e\u4e48\u6c42\u957f\u5ea6\u4e3a $n/k$ \u6216\u8005  $n/k+1$ \u7684\u5e8f\u5217\u4e2a\u6570\u3002~~\n\ndp \u7684\u65f6\u5019\u7a0d\u5fae\u6ce8\u610f\u4e00\u4e0b\u8fb9\u754c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio> \n#include <cstring>\n#include <algorithm>\n#define int long long \nusing namespace std;\nconst int INF=3e5+5;\nconst int INFN=5e3+5;\nint n,k,a[INF],f[INFN][INFN];\nsigned main()\n{\n\tmemset(f,63,sizeof f);\n\tios::sync_with_stdio(false);\n\tcin>>n>>k;\n\tfor (int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tsort(a+1,a+1+n);\n\t// len len+1\n\tint len=n/k;\n\t//   len+1   len\n\tint cntx=n%k,cnty=(n-cntx)/len-cntx;\n\tfor (int i=0;i<=cntx;i++)\n\t\tfor (int j=0;j<=cnty;j++) {\n\t\t\tint kk=i*(len+1)+j*len;\n\t\t\tif (i==0 && j==0) f[i][j]=0;\n\t\t\telse {\n\t\t\t\tif (i) f[i][j]=min(f[i][j],f[i-1][j]+a[kk]-a[kk-len]);\n\t\t\t\tif (j) f[i][j]=min(f[i][j],f[i][j-1]+a[kk]-a[kk-len+1]);\n\t\t\t}\n//\t\t\tcout<<i<<\" \"<<j<<\" \"<<kk<<\" \"<<f[i][j]<<\" kk\\n\"; \n\t\t}\n\tcout<<f[cntx][cnty]<<\"\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1653483169,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF571B"
    },
    {
        "content": "2023.6.5 upd\uff1a\u4fee\u590d\u4e86 typo\u3002\n\n---\n\n\u76f8\u5bf9\u7b80\u5355\u7684\u4e00\u9053 *2000\u3002\n\n\u770b\u5230\u4e0b\u6807 $+k$ \u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u4e00\u4e2a\u5957\u8def\u5316\u7684\u6a21 $k$ \u610f\u4e49**\u5206\u7ec4**\u3002\u8fd9\u6837\uff0c\u8bb0\u7b2c $i$ \u7ec4\u4e3a\u4e0b\u6807\u6a21 $k=i$ \u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6bcf\u7ec4\u91cc\u9762\u7684\u8fd9\u4e2a\u4e1c\u897f\u7684\u548c\u7684\u6700\u5c0f\u503c\uff1a\n\n$$\\sum_{j=0}^{z-1} |A_{jk+i}-A_{(j+1)k+i}|$$\n\n\u5176\u4e2d $z$ \u4e3a\u4e0b\u6807\u6ee1\u8db3\u8fd9\u4e2a\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\u3002\n\n\u5f62\u8c61\u5730\u753b\u4e2a\u56fe\uff0c\u8fd9\u662f $n=3$\uff0c$k=3$ \u65f6\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/uinms7q3.png)\n\n\u6211\u4eec\u5148\u8bc1\u660e\u8fd9\u6837\u4e00\u4e2a\u4e1c\u897f\uff1a**\u82e5\u4e00\u4e2a\u989c\u8272\u91cc\u7684\u503c\u6700\u5c0f\uff0c\u5219\u5e8f\u5217\u6709\u5355\u8c03\u6027\uff08\u975e\u4e25\u683c\uff09**\u3002\u60f3\u60f3\u7edd\u5bf9\u503c\u7684\u51e0\u4f55\u610f\u4e49\uff0c\u5373\u5728\u6570\u8f74\u4e0a\u4e24\u4e2a\u6570\u7684\u8ddd\u79bb\u3002\u73b0\u5728\u6709\u51e0\u4e2a\u6570\u8f74\u4e0a\u7684\u6570\uff0c\u6211\u4eec\u5982\u679c\u4e0d\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6216\u8005\u4ece\u5927\u5230\u5c0f\u8d70\u8fc7\u53bb\uff0c\u90a3\u4e48\u80af\u5b9a\u4f1a\u6709\u4e00\u6bb5\u8def\u591a\u8d70\uff0c\u8fd9\u80af\u5b9a\u662f\u4e0d\u5212\u7b97\u7684\u3002\u5982\u56fe\uff0c\u7ea2\u8272\u7684\u8ddd\u79bb\u4e00\u5b9a\u6bd4\u7eff\u8272\u7684\u77ed\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7blqseu0.png)\n\n\u56e0\u6b64\u4e00\u4e2a\u989c\u8272\u8981\u586b\u6570\uff0c\u6211\u4eec\u5c31\u5c06\u8fd9\u4e9b\u6570\u4ece\u5c0f\u5f80\u5927\u586b\u3002\u8fd9\u4e00\u6bb5\u7684\u8d21\u732e\u4e3a\n\n$$\n\\begin{aligned}\n&\\sum_{j=0}^{z-1} A_{(j+1)k+i}-A_{jk+i} \\\\\n=&\\sum_{j=0}^{z-1} A_{(j+1)k+i}-\\sum_{j=0}^{z-1}A_{jk+i} \\\\\n=&\\sum_{j=1}^{z} A_{jk+i}-\\sum_{j=0}^{z-1}A_{jk+i} \\\\\n=&A_{kz+i}-A_{i}\n\\end{aligned}\n$$\n\n\u4e5f\u5c31\u662f\u8fd9\u4e2a\u533a\u95f4\u7684**\u6781\u5dee**\u3002\n\n***\n\n\u63a5\u4e0b\u6765\u8bc1\u660e\uff0c\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e**\u4efb\u610f**\u4e24\u79cd\u989c\u8272\u7ec4\u522b\u7684\u96c6\u5408 $S_x,S_y$\uff08$S_i=\\{A_j\\mid j\\bmod k=i\\}$\uff09\uff0c\u4e00\u5b9a\u6709 $\\max(S_x)\\le \\min(S_y)$\u3002\u540c\u6837\u4ece\u6570\u8f74\u7684\u51e0\u4f55\u610f\u4e49\u8bc1\u660e\uff0c\u82e5\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u6570\u7684\u533a\u95f4\u5728\u6570\u8f74\u4e0a\u6709\u5927\u5c0f $>0$ \u7684\u4ea4\u96c6\uff0c\u90a3\u4e48\u8ddd\u79bb\u52a0\u8d77\u6765\u4e00\u5b9a\u4e0d\u4f18\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lw8mswgj.png)\n\n\u56fe\u4e2d\u95f4\u91cd\u53e0\u7684\u90e8\u5206\u662f\u53ef\u4ee5\u7701\u6389\u7684\u3002\n\n***\n\n\u8fd9\u6837\u6211\u4eec\u5b8c\u6210\u4e86\u4ee5\u4e0a\u4e24\u9879\u8bc1\u660e\u3002\u73b0\u5728\u8fd8\u5dee\u6c42\u3002\n\n\u6211\u4eec\u8003\u8651\u5148\u6392\u5e8f\u540e\u5206\u7ec4\u3002\u56e0\u4e3a\u6392\u5e8f\u540e\u5bf9\u5176\u8fdb\u884c\u5206\u7ec4\u7684\u6bcf\u7ec4\u90fd\u662f\u8fde\u7eed\u7684\u3002\n\n\u95ee\u9898\u8f6c\u6362\u4e3a\uff1a\u5728\u5e8f\u5217\u4e2d\u5206 $k$ \u7ec4\u8fde\u7eed\u6bb5\uff0c\u6709 $n\\bmod k$ \u6bb5\u957f\u5ea6\u4e3a $\\lfloor\\dfrac nk\\rfloor+1$\uff0c\u5176\u4f59\u6bb5\u4e3a $\\lfloor\\dfrac nk\\rfloor$\uff0c\u6bcf\u6bb5\u7684\u6781\u5dee\u4e4b\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u8bbe\u8ba1\u4e00\u4e2a dp\u3002\u770b\u5230 $k\\le 5000$\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6697\u793a\u3002\u4e8e\u662f\u6211\u4eec\u8bbe $dp_{i,j}$ \u8868\u793a\u653e\u4e86 $i$ \u7ec4\uff0c\u5176\u4e2d $j$ \u7ec4\u957f\u5ea6\u4e3a $\\lfloor\\dfrac nk\\rfloor+1$ \u7684\u6bcf\u7ec4\u6781\u5dee\u4e4b\u548c\u6700\u5c0f\u503c\u3002\n\n\u5bb9\u6613\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5373\n\n$$dp_{i,j} = \\min(dp_{i-1,j-1} + A_{pos(i, j)} - A_{pos(i - 1, j - 1) + 1}, dp_{i-1,j} + A_{pos(i, j)} - A_{pos(i - 1, j) + 1})$$\n\n\u5176\u4e2d $pos(i,j)=i \\times  \\lfloor\\dfrac nk\\rfloor + j$\uff0c\u8868\u793a\u8fd9\u6837\u653e\uff08$i,j$ \u610f\u4e49\u4e0e dp \u8bbe\u8ba1\u76f8\u540c\uff09\u7684\u53f3\u7aef\u70b9\u3002\n\n\u6700\u540e\u8f93\u51fa $dp_{k,n\\bmod k}$ \u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n\nusing namespace std;\n\nconst int maxn = 3e5 + 10;\nconst int maxk = 5e3 + 10;\n\nint n, k, r;\nint a[maxn];\nint dp[maxk][maxk]; // dp[i][j] \u8868\u793a\u653e\u4e86 i \u7ec4\uff0cj \u7ec4\u5927\u7684\uff0c\u6700\u5c0f\u503c\u3002\n\nint pos(int i, int j) {\n    return i * (n / k) + j;\n}\n\nsigned main() {\n    cin >> n >> k; r = n % k;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    sort(a + 1, a + 1 + n);\n    memset(dp, 0x3f, sizeof(dp));\n    dp[0][0] = 0;\n    for (int i = 1; i <= k; i++) {\n        for (int j = 0; j <= min(i, r); j++) {\n            if (j) dp[i][j] = min(dp[i - 1][j - 1] + (a[pos(i, j)] - a[pos(i - 1, j - 1) + 1]), dp[i - 1][j] + (a[pos(i, j)] - a[pos(i - 1, j) + 1]));\n            else dp[i][j] = dp[i - 1][j] + (a[pos(i, j)] - a[pos(i - 1, j) + 1]);\n        }\n    }\n    cout << dp[k][r] << endl;\n    return 0;\n}\n```",
        "postTime": 1681913155,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "CF571B \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u662f\u6bd4\u8f83\u597d\u7684\u601d\u7ef4\u9898\uff0c\u7efc\u5408\u4e86\u5f88\u591a\u601d\u8003\u65b9\u5f0f\u3002\n\n- \u9898\u610f\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a$ \u548c \u6570 $k$\uff0c\u91cd\u6392 $a$,\u8f93\u51fa $\\sum\\limits_{i = 1}^{n - k}\\mid a_{i + k} - a_i \\mid$ \u7684\u6700\u5c0f\u503c\u3002\n\n- \u5206\u6790\n\n\u5b66\u8fc7\u5c0f\u5b66\u5965\u6570\u7684\u540c\u5b66\u4eec\u4f1a\u60f3\u5230\uff0c\u8fd9\u4e9b\u76f8\u51cf\u7684\u6570\u5747\u76f8\u5dee $k$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6570\u6309\u6a21 $k$ \u7684\u4f59\u6570\u5206\u6210 $k$ \u7ec4\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u7ec4\u76f8\u4e92\u72ec\u7acb\uff0c\u4e14\u6700\u5c0f\u8d21\u732e\u4e3a\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\uff0c\u5373\u6392\u5e8f\u540e\u7684\u672b\u51cf\u9996\u3002\n\n\u76f8\u4e92\u72ec\u7acb\u542f\u53d1\u6211\u4eec\u7528\u52a8\u89c4\uff0c\u672b\u51cf\u9996\u542f\u53d1\u6211\u4eec\u6392\u5e8f\u540e\u5904\u7406\uff0c\u6211\u4eec\u53c8\u53d1\u73b0\u4e00\u7ec4\u7684\u957f\u5ea6\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u542f\u53d1\u6211\u4eec\u8bbe\u4e8c\u7ef4\u52a8\u89c4\u3002\n\n\u8bbe $f_{i,j}$ \u4e3a\u9009 $i$ \u4e2a\u957f\u5ea6\u4e3a $\\frac{n}{k}$ \u7684\u7ec4\uff0c$j$ \u4e2a\u957f\u5ea6\u4e3a $\\frac{n}{k}+ 1$ \u7684\u7ec4\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u663e\u7136\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$$f_{i,j}=\\min\\{f_{i-1,j}+a_{now}-a_{now-len},f_{i,j-1}+a_{now}-a_{now-len+1}\\}$$\n\n- code\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nnamespace q_wr {\n\tinline int read() {\n\t\tchar c = getchar();\n\t\tint x = 0, f = 1;\n\t\twhile (c < '0' || c > '9') {\n\t\t\tif (c == '-') f = -1;\n\t\t\tc = getchar();\n\t\t}\n\t\twhile (c >= '0' && c <= '9') {\n\t\t\tx = (x << 1) + (x << 3) + c - '0';\n\t\t\tc = getchar();\n\t\t}\n\t\treturn x * f;\n\t}\n\tinline void write(int x) {\n\t\tif (x < 0) {\n\t\t\tx = ~(x - 1);\n\t\t\tputchar('-');\n\t\t}\n\t\tif (x > 9)\n\t\t\twrite(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\n\nusing namespace q_wr;\n\nconst int maxn = 3e5 + 500;\nint n, k, a[maxn], f[5005][5005], len, m1, m2;\n\nsigned main () {\n\tn = read(), k = read();\n\tfor (int i = 1; i <= n; i++) a[i] = read();\n\tsort(a + 1, a + n + 1);\n\tmemset(f, 63, sizeof(f));\n\tf[0][0] = 0;\n\tlen = n / k, m1 = n % k, m2 = (n - m1) / len - m1;\n\tfor (int i = 0; i <= m1; i++) {\n\t\tfor (int j = 0; j <= m2; j++) {\n\t\t\tint now = i * (len + 1) + j * len;\n\t\t\tif (i) f[i][j] = min(f[i][j], f[i - 1][j] + a[now] - a[now - len]);\n\t\t\tif (j) f[i][j] = min(f[i][j], f[i][j - 1] + a[now] - a[now - len + 1]);\n\t\t}\n\t}\n\twrite(f[m1][m2]);\n}\n```",
        "postTime": 1656593494,
        "uid": 317495,
        "name": "JWRuixi",
        "ccfLevel": 7,
        "title": "Solution CF571B"
    }
]