[
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1147B)\t[CF\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/1147/B)\n\n### \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u56fe\uff0c\u5176\u4e2d\u6709 $m$ \u6761\u7ebf\u6bb5\u3002\u6c42\u8be5\u56fe\u5f62\u662f\u5426\u4e3a\u65cb\u8f6c\u5bf9\u79f0\u56fe\u5f62\u3002\n\n### Solution\n\n\u6211\u4eec\u8bbe\u65cb\u8f6c $x$ \u4e2a\u70b9\u53ef\u4ee5\u548c\u539f\u56fe\u5f62\u91cd\u5408\uff0c\u90a3\u4e48 $k\\cdot x$ \u4e2a\u70b9\u4e5f\u53ef\u4ee5\n\n\u53cd\u8fc7\u6765\uff0c\u5df2\u77e5\u65cb\u8f6c\u4e00\u5708\u5c31\u662f\u539f\u56fe\u5f62\uff0c\u6b64\u65f6\u65cb\u8f6c\u4e86 $n$ \u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u8981\u627e\u5230\u4e00\u4e2a $n$ \u7684\u56e0\u5b50\u6ee1\u8db3`\u65cb\u8f6c\u540e\u548c\u539f\u56fe\u5f62\u91cd\u5408`\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e $n$ \u7684\u56e0\u5b50\u548c\u6bcf\u4e00\u4f4d\u65cb\u8f6c\u540e\u7684\u60c5\u51b5\u5c31\u597d\u4e86\n\n\u5224\u65ad\u65f6\u8bbe\u6b64\u65f6\u679a\u4e3e\u5230 $d(d|n)$ \u548c\u7b2c $i$ \u4f4d\uff0c\u53ea\u8981\u5224\u65ad $i,i+d$ \u6240\u542b\u7684\u7ebf\u6bb5\u6570\u91cf\u662f\u5426\u76f8\u7b49\u548c\u6bcf\u4e00\u6761\u7ebf\u6bb5\u662f\u5426\u90fd\u5bf9\u5e94\u3002\n\n\u5c0f\u526a\u679d\uff1a\u679a\u4e3e\u6bcf\u4e00\u4f4d\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u51fa\u73b0\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\u53ef\u4ee5\u7acb\u5373\u8df3\u51fa\uff0c\u679a\u4e3e $n$ \u7684\u56e0\u5b50\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u51fa\u73b0\u6ee1\u8db3\u7b54\u6848\u7684\u60c5\u51b5\u5c31\u7acb\u5373\u8df3\u51fa\u3002\n\n\u6ce8\u610f\uff1a\u8f93\u5165\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9 $u,v$ \u65f6\uff0c\u662f\u6709\u4e24\u6761\u7ebf\u6bb5\u7684\uff0c\u4e00\u6761\u662f $v-u$ \uff0c\u4e00\u6761\u662f $u-v+n$ \uff0c\u8bb0\u5f97\u90fd\u50a8\u5b58\n\n### Code\n\n```c++\n#include<bits/stdc++.h>\n\nusing namespace std;\nconst int N=1e5+10;\nvector<int> d,p[N];\nint n,m,flag=1;\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n/2;i++)\n        if(n%i==0) d.push_back(i);\n    for(int i=1,u,v;i<=m;i++){\n        scanf(\"%d%d\",&u,&v);\n        if(u>v) swap(u,v);\n        p[u].push_back(v-u);\n        p[v].push_back((n+u-v-1)%n+1);\n    }\n    for(int i=1;i<=n;i++)\n        sort(p[i].begin(),p[i].end());\n    for(int i=0;i<d.size();i++){\n        flag=1;\n        int now=d[i];\n        for(int j=1;j<=n;j++){\n            if(p[j].size()!=p[(j+now-1)%n+1].size()){\n                flag=0;\n                break;\n            }\n            for(int k=0;k<p[j].size();k++){\n                if(p[j][k]!=p[(j+now-1)%n+1][k]){\n                    flag=0;\n                    break;\n                }\n            }\n            if(flag==0) break;\n        }\n        if(flag==1) break;\n    }\n    if(flag==0) puts(\"No\");\n    else puts(\"Yes\");\n    return 0;\n}\n```\n\n",
        "postTime": 1603425457,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "CF1147B Chladni Figure"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u6bd4\u8f83\u66b4\u529b\u7684\u505a\u6cd5\n\n\uff08upd: \u8865\u5145\u4e86 $O(m\\log n+n)$ \u7684\u505a\u6cd5qaq\uff09\n\n## \u89e3\u6790\n\n\u7531\u4e8e\u6bcf\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u7ebf\u6bb5\u4ec5\u80fd\u7531\u76f8\u540c\u7c7b\u578b\u7684\u7ebf\u6bb5 \u201c\u66ff\u4ee3\u201d\uff0c\u56e0\u6b64\u8003\u8651\u5bf9\u6bcf\u79cd\u8fb9\u5206\u522b\u8ba8\u8bba\n\n\u5bf9\u4e8e\u4e00\u6761\u7ebf\u6bb5 $a, b$\uff0c\u6211\u4eec\u53d6\u51fa\u5176\u4e2d\u4e00\u4e2a\u4f5c\u4e3a \u201c\u4ee3\u8868\u7aef\u70b9\u201d\uff1b\u8bbe \u201c\u4ee3\u8868\u7aef\u70b9\u201d \u4e3a $x$\uff0c\u53e6\u4e00\u70b9\u4e3a $y$\uff0c\u6211\u4eec\u8981\u6c42 $y$ \u9006\u65f6\u9488\u5230 $x$ \u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e $\\lfloor\\frac n 2\\rfloor$\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u7ebf\u6bb5\uff0c\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u8981\u627e\u5230\u6240\u6709 $k$ \u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e2a \u201c\u4ee3\u8868\u7aef\u70b9\u201d $x_i$\uff0c\u90fd\u6709 $x_i+k$\uff08\u5faa\u73af\u610f\u4e49\u4e0b\u7684\u4e0b\u6807\uff09\u5b58\u5728\uff1b\u5bf9\u4e8e\u6240\u6709\u7ebf\u6bb5\uff0c\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u8981\u627e\u5230\u4e00\u4e2a $k_0$\uff0c\u4f7f\u5f97\u6bcf\u7ec4\u7ebf\u6bb5\u90fd\u5b58\u5728\u4e00\u4e2a $k=k_0$\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u662f\u4e2a\u5224\u5b9a\u6027\u95ee\u9898\uff1b\u4e8e\u662f\u5c31\u53ef\u4ee5\u60f3\u5230\u7528 `bitset` \u4f18\u5316\u3002\u590d\u6742\u5ea6 $O(\\frac {mn} w)$\uff0c$n\\leq 10^5, m\\leq 2\\cdot 10^5$ \u80fd\u8fc7\n\n\u5173\u4e8e\u5177\u4f53\u5b9e\u73b0\uff0c\u8fd9\u91cc\u4ec5\u63d0\u4e0b\u5bf9\u4e8e\u6bcf\u79cd\u7ebf\u6bb5\u600e\u4e48\u627e\u5230\u6240\u6709\u6ee1\u8db3\u8981\u6c42\u7684 $k$\n\n\u8bbe `bitset` \u7684\u7b2c $i$ \u4f4d\u8868\u793a\u8be5\u4e0b\u6807\u662f\u5426\u5b58\u5728\u7aef\u70b9\u3002\u6211\u4eec\u679a\u4e3e\u9700\u8be5\u7ec4\u8981\u68c0\u67e5\u7684\u7aef\u70b9 $x_i$\uff0c\u5c06 $[0, x_i-1]$ \u5355\u72ec\u62ce\u51fa\u6765\uff0c\u518d\u5c06 $[x_i, n]$ \u5355\u72ec\u62ce\u51fa\u6765\uff1b\u5e76\u5c06 $[0, x_i-1]$ \u201c\u642c\u201d \u5230 $[x_i, n]$ \u7684\u53f3\u8fb9\uff0c\u518d\u7ed9\u5143\u7d20\u91cd\u65b0\u6807\u53f7\uff08\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e $[x_i, n]$\uff0c\u7b2c $y$ \u4f4d\u53d8\u4e3a\u7b2c $y-x_i$ \u4f4d\uff1b\u5bf9\u4e8e $[0, x_i-1]$\uff0c\u7b2c $y$ \u4f4d\u53d8\u4e3a\u7b2c $y+(n-x_i)$ \u4f4d\uff09\u3002\u8fd9\u6837\u7b2c $i$ \u4f4d\u7684\u503c\u82e5\u4e3a $1$\uff0c\u5c31\u4ee3\u8868 $x_i+i$ \u5b58\u5728\u7aef\u70b9\uff0c\u5373 $i$ \u5bf9\u4e8e $x_i$ \u662f\u4e00\u4e2a\u53ef\u884c\u7684 $k$\u3002\u518d\u628a\u6240\u6709 $x_i$ \u7684\u7b54\u6848\u90fd $\\&$ \u8d77\u6765\uff0c\u5c31\u5f97\u5230\u4e86\u8be5\u7ec4\u7ebf\u6bb5\u7684\u7b54\u6848\n\n## CODE\n\n\u89e3\u6790\u4e2d\u4e0d\u6e05\u695a\u7684\u5730\u65b9\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u7406\u89e3qaq\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <bitset>\nusing std::vector;\nusing std::sort;\nusing std::bitset;\n\nconst int MAXN =1e5+20;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar(); bool f =0;\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int dist(const int &a, const int &b, const int &n){/*b \u9006\u65f6\u9488\u5230 a \u7684\u8ddd\u79bb*/\n\tif(a < b)\n\t\treturn b-a;\n\telse\n\t\treturn b+(n-a);\n}\n\nvector<int> v[MAXN];/*\u6bcf\u79cd\u957f\u5ea6\u7684\u7ebf\u6bb5\u7684 \"\u8f83\u5de6\" \u7684\u7aef\u70b9 ( \u8bbe\u5176\u4e3a a\uff0cb \u9006\u65f6\u9488\u5230 a \u7684\u8ddd\u79bb\u5c0f\u4e8e n/2 )*/\nbitset<MAXN+1> nw1, nw2, able, ans;\n\nint main(){\n\tint n =read(), m =read();\n\tfor(int i =0; i < m; ++i){\n\t\tint a =read(), b =read();\n\t\tif(dist(a, b, n) > n/2)\n\t\t\ta ^=b ^=a ^=b;\n\t\tv[dist(a, b, n)].push_back(a);\n\t}\n\tans.set();\n\tfor(int i =1; i <= n/2; ++i){\n\t\tsort(v[i].begin(), v[i].end());\n\t\tnw1.reset(), nw2.reset(), able.set();\n\t\tfor(int index:v[i])/*\u7aef\u70b9\u5e94\u4e0d\u4f1a\u6709\u91cd\u590d*/\n\t\t\tnw1[index] =1;\n\t\tfor(int index:v[i]){\n\t\t\tnw1[index] =0;\n\t\t\table &=((nw1>>index)|(nw2<<(n-index)));\n\t\t\tif((n&1) == 0 && i == n/2)/*<- \u6ce8\u610f\u7279\u4f8b\uff0c\u5373\u81ea\u5df1 \" \u66ff\u4ee3 \" \u81ea\u5df1*/\n\t\t\t\table[n/2] =1;\n\t\t\tnw2[index] =1;\n\t\t}\n\t\tans &=able;\n\t}\n\tif(ans.any())\n\t\tputs(\"Yes\");\n\telse\n\t\tputs(\"No\");\n}\n```\n\n## \u5173\u4e8e\u53e6\u4e00\u505a\u6cd5\u7684\u8bc1\u660e\n\n\uff08\u5373\u590d\u6742\u5ea6\u4e3a $O(m\\cdot d(n))$ \u7684\u505a\u6cd5\uff09\n\n\u611f\u89c9\u597d\u50cf\u6ca1\u4ec0\u4e48\u5730\u65b9\u6709\u8bb2...\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\u8f6c $k$ \u548c\u8f6c $\\gcd(n, k)$ \u662f\u7b49\u4ef7\u7684\n\n\u8003\u8651\u4e3a\u4e00\u79cd\u7ebf\u6bb5\u7684\u4e00\u4e2a\u7aef\u70b9 $x$\uff08\u6216\u8005\u8bf4\u521a\u624d\u7684\u7684 \u201c\u4ee3\u8868\u7aef\u70b9\u201d\uff09\u627e\u66ff\u4ee3\u7684\u7aef\u70b9\uff0c\u4e0d\u59a8\u4ee5\u987a\u65f6\u9488\u987a\u5e8f\uff0c\u90a3\u4e48\u5e94\u8be5\u662f $x+k$\uff1b\u63a5\u7740\u53c8\u7ed9 $x+k$ \u627e\u66ff\u4ee3\u7684\u7aef\u70b9\uff0c\u90a3\u4e48\u5c31\u662f $x+2k$...\n\n\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u7b2c\u4e00\u6b21\u9047\u5230\u66fe\u7ecf\u8bbf\u95ee\u8fc7\u7684\u70b9\u4e00\u5b9a\u662f $x$\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5f80\u56de\u8df3\u82e5\u5e72\u4e2a $k$ \u5230 $x$\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u7136\u5df2\u7ecf\u7b2c\u4e8c\u6b21\u8df3\u5230 $x$\uff08\u53ef\u80fd\u6709\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u4f46\u5dee\u4e0d\u591a\u5c31\u662f\u8fd9\u4e2a\u610f\u601d\uff09\n\n\u4e8e\u662f\u6211\u4eec\u8bbf\u95ee\u7684\u603b\u70b9\u6570\u5c31\u662f $\\frac {\\text{lcm}(k, n)} k$\uff0c\u5373 $\\frac {n} {\\gcd(n, k)}$\u3002\u53ef\u4ee5\u53d1\u73b0\u6bcf\u9694 $\\gcd(n, k)$ \u4e2a\u70b9\u4e00\u5b9a\u6709\u4e00\u4e2a\u70b9\u6211\u4eec\u9700\u8981\u8bbf\u95ee\uff1b\u4e8e\u662f\u8f6c $k$ \u548c\u8f6c $\\gcd(n, k)$ \u662f\u7b49\u4ef7\u7684\n\n## $O(m\\log n+n)$ \u7684\u505a\u6cd5\uff08\u8865\u5145\uff09\n\n\u770b\u89c1\u793e\u8bba\u6709\u63d0\u5230...\u73b0\u5728\u56de\u6765\u628a\u5751\u586b\u4e86\n\n\u5148\u8003\u8651\u4e00\u4e2a\u8f83\u7b80\u5355\u7684\u7248\u672c\uff1a\u6240\u6709\u7ebf\u6bb5\u7684 \u201c\u4ee3\u8868\u7aef\u70b9\u201d \u90fd\u4e0d\u91cd\u590d\n\n\u8003\u8651\u7ed9 \u201c\u4ee3\u8868\u7aef\u70b9\u201d \u6839\u636e\u5176\u7ebf\u6bb5\u7684\u957f\u5ea6\u5206\u914d\u4e00\u79cd\u5b57\u7b26\uff1b\u7a7a\u4f4d\u7f6e\u4e5f\u5206\u914d\u4e00\u79cd\u5b57\u7b26\u3002\u8fd9\u6837\u539f\u9898\u5c31\u76f8\u5f53\u4e8e\u95ee\u5b57\u7b26\u4e32\u662f\u5426\u5b58\u5728\u975e\u5e73\u51e1\u7684\uff08\u5373\u5faa\u73af\u8282\u4e0d\u4e3a\u6574\u4e2a\u4e32\uff09\u5faa\u73af\u8282\u957f\u5ea6\uff08\u8fd9\u91cc\u7684 \u201c\u5faa\u73af\u8282\u201d \u5f53\u7136\u662f\u5bf9\u6574\u4e2a\u4e32\uff09\n\n\u53ef\u4ee5\u8003\u8651\u6c42\u6700\u5c0f\u5faa\u73af\u8282\u957f\u5ea6\uff1b\u5373\u6700\u591a\u5faa\u73af\u8282\u91cd\u590d\u6b21\u6570\u3002\u6c42\u8fd9\u4e2a\u7684\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5177\u4f53\u5c55\u5f00\u8bb2\u4e86\uff1b\u793e\u8bba\u63d0\u5230 z-algorithm\uff0c\u4f46\u8fd9\u91cc\u7528\u7684\u662f kmp\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u7684 \u201c\u4ee3\u8868\u7aef\u70b9\u201d \u91cd\u590d\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u67d0\u4e2a\u7aef\u70b9\u7684\u6240\u6709\u7ebf\u6bb5\u6309\u957f\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u8fd9 \u6574\u4e2a\u5e8f\u5217\uff0c\u6216\u8bf4 \u5b57\u7b26\u4e32\uff0c\u89c6\u4e3a \u4e00\u79cd\u5b57\u7b26\n\n\u95ee\u9898\u5728\u4e8e\u53bb\u91cd\u3002\u53ef\u4ee5\u8003\u8651\u7528 Trie-tree\uff1b\u4f46\u7531\u4e8e\u5b57\u7b26\u96c6\u8f83\u5927\uff08\u662f $O(n)$ \u7ea7\u522b\u7684\uff0c\u8003\u8651\u7ebf\u6bb5\u7684\u4e0d\u540c\u957f\u5ea6\u7684\u4e2a\u6570\uff09\uff0c\u9700\u8981\u7528 `map` \u5b58\u513f\u5b50\uff0c\u4e8e\u662f\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u5c31\u662f $O(m\\log n)$ \u7684\n\n## CODE\uff08$O(m\\log n+n)$ \u7248\u672c\uff09\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <map>\nusing std::max;\nusing std::vector;\nusing std::map;\n\nconst int MAXN =1e5+20, MAXM =2e5+20;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn x;\n}\n\n/*------------------------------Trie------------------------------*/\n\nvector<int> arr[MAXN/2];\n// \u6bcf\u79cd\u957f\u5ea6\u7684 \" \u4ee3\u8868\u7aef\u70b9 \" //\nvector<int> str[MAXN];\n\nint ID;\nmap<int, int> son[MAXM];\nint vis[MAXM], tot;\n\nint insert(const int &x, const int &cur, vector<int> &Str){\n\tif(cur == (int)Str.size()-1){\n\t\tif(!vis[x])\n\t\t\treturn vis[x] =++ID;\n\t\telse\n\t\t\treturn vis[x];\n\t}\n\telse{\n\t\tif(!son[x].count(Str[cur+1]))\n\t\t\tson[x].insert(std::pair<int, int>(Str[cur+1], ++tot));\n\t\treturn insert(son[x].find(Str[cur+1])->second, cur+1, Str);\n\t}\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int dist(const int &a, const int &b, const int &n){/*b \u9006\u65f6\u9488\u5230 a \u7684\u8ddd\u79bb*/\n\tif(a < b)\n\t\treturn b-a;\n\telse\n\t\treturn b+(n-a);\n}\n\nint s[MAXN], pi[MAXN];\n// \u4e0b\u6807\u4ece $1$ \u5f00\u59cb //\n\nint main(){\n\tint n =read(), m =read();\n\t\n\tfor(int i =0; i < m; ++i){\n\t\tint a =read(), b =read();\n\t\tint Dist =dist(a, b, n);\n\t\t// \u8981\u6c42 a \u987a\u65f6\u9488\u5230 b \u7684\u8ddd\u79bb\u4e0d\u5927\u4e8e n/2 //\n\t\tif(Dist > n/2)\n\t\t\ta ^=b ^=a ^=b, Dist =dist(a, b, n);\n\t\t// \u8fd9\u4e00\u6b65\u662f\u4e3a\u4e86\u907f\u514d\u6392\u5e8f\u7684\u590d\u6742\u5ea6 //\n\t\t// \u4e0d\u8fc7\u4e4b\u540e\u7ef4\u62a4 trie-tree \u513f\u5b50\u5217\u8868\u7684\u590d\u6742\u5ea6\u8fd8\u662f\u5e26 log \u7684... //\n\t\tarr[Dist].push_back(a);\n\t\tif(Dist == n/2 && n%2 == 0)\n\t\t\tarr[Dist].push_back(b);\n\t}\n\tfor(int i =1; i <= n; ++i)\n\t\tstr[i].push_back(-1);\n\tfor(int i =0; i <= n/2; ++i)\n\t\tfor(int j:arr[i])\n\t\t\tstr[j].push_back(i);\n\tfor(int i =1; i <= n; ++i)\n\t\ts[i] =insert(0, -1, str[i]);\n\t\n\tint mx =1;\n\tfor(int i =2; i <= n; ++i){\n\t\tint j =pi[i-1];\n\t\twhile(j && s[j+1] != s[i])\n\t\t\tj =pi[j];\n\t\tif(s[j+1] == s[i])\n\t\t\tpi[i] =j+1;\n\t\telse\n\t\t\tpi[i] =0;\n\t}\n\tfor(int cur =pi[n]; cur; cur =pi[cur]){\n\t\tint cur_len =n-cur;\n\t\tif(n%cur_len == 0)\n\t\t\tmx =max(mx, n/cur_len);\n\t}\n\t\n\tif(mx > 1)\n\t\tputs(\"Yes\");\n\telse\n\t\tputs(\"No\");\n}\n```",
        "postTime": 1605242339,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1147B \u3010Chladni Figure\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u6b63\u591a\u8fb9\u5f62\u4e0a\u6302\u591a\u6761\u7ebf\u6bb5\uff0c\u95ee\u591a\u8fb9\u5f62\u662f\u5426\u65cb\u8f6c\u5bf9\u79f0\u3002\n\n\u65cb\u8f6c\u5bf9\u79f0\u7684\u5b9a\u4e49\u662f\u56fe\u5f62\u65cb\u8f6c\u67d0\u4e2a\u89d2\u5ea6\u4e4b\u540e\u4e0e\u539f\u56fe\u91cd\u5408\u3002\n\n\u7531\u4e8e\u8fd9\u91cc\u662f\u6b63 $n$ \u8fb9\u5f62\uff0c\u6211\u4eec\u4e0d\u59a8\u679a\u4e3e\u8f6c\u8fc7\u7684\u8fb9\u6570\u3002\n\n\u81ea\u7136\u60f3\u5230\u679a\u4e3e $n$ \u7684\u56e0\u6570\uff0c\u5426\u5219\u4e0d\u53ef\u80fd\u91cd\u5408\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u56e0\u6570\uff0c\u66b4\u529b\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u67e5\u8be2\u7aef\u70b9\u5e73\u79fb\u540e\u662f\u5426\u6709\u5339\u914d\u7684\u7ebf\u6bb5\u5373\u53ef\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5 set \u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n\\log n)$\u3002\n\n\u6ce8\u610f\u7ebf\u6bb5\u5e73\u79fb\u4e4b\u540e\u662f\u53ef\u4ee5\u5339\u914d\u81ea\u5df1\u7684\uff0c\u6240\u4ee5\u67e5\u627e\u5230\u7ebf\u6bb5\u672c\u8eab\u4e5f\u7b97\u5339\u914d\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<set>\n#include<cmath>\nusing namespace std;\nint n,m;\nset<pair<int,int> > s;\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;++i)\n    {\n        int x,y;\n        cin>>x>>y;\n        if(x>y)\n            x^=y^=x^=y;\n        s.insert({x,y});\n    }\n    for(int i=2;i*i<=n;++i)\n        if(n%i==0)\n        {\n            int g=i;\n            bool flag=1;\n            for(auto i:s)\n            {\n                pair<int,int> p={(i.first+g-1)%n+1,(i.second+g-1)%n+1};\n                if(p.first>p.second)\n                    p.first^=p.second^=p.first^=p.second;\n                if(!s.count(p))\n                {\n                    p={p.second,p.first};\n                    if(s.count(p))\n                        continue;\n                    flag=0;\n                    break;\n                }\n            }\n            if(flag)\n            {\n                puts(\"YES\");\n                return 0;\n            }\n            g=n/i;\n            flag=1;\n            for(auto i:s)\n            {\n                pair<int,int> p={(i.first+g-1)%n+1,(i.second+g-1)%n+1};\n                if(p.first>p.second)\n                    p.first^=p.second^=p.first^=p.second;\n                if(!s.count(p))\n                {\n                    p={p.second,p.first};\n                    if(s.count(p))\n                        continue;\n                    flag=0;\n                    break;\n                }\n            }\n            if(flag)\n            {\n                puts(\"YES\");\n                return 0;\n            }\n        }\n    int g=1;\n    bool flag=1;\n    for(auto i:s)\n    {\n        pair<int,int> p={(i.first+g-1)%n+1,(i.second+g-1)%n+1};\n        if(p.first>p.second)\n            p.first^=p.second^=p.first^=p.second;\n        if(!s.count(p))\n        {\n            p={p.second,p.first};\n            if(s.count(p))\n                continue;\n            flag=0;\n            break;\n        }\n    }\n    if(flag)\n    {\n        puts(\"YES\");\n        return 0;\n    }\n    puts(\"NO\");\n    return 0;\n}\n```",
        "postTime": 1635334222,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "CF1147B Chladni Figure \u9898\u89e3"
    }
]