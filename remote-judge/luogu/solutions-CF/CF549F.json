[
    {
        "content": "\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u5f88\u5957\u8def\uff0c\u679a\u4e3e\u6700\u5927\u503c\u4e4b\u540e\u5904\u7406\u51fa\u5b83\u662f\u6700\u5927\u503c\u7684\u533a\u95f4\uff0c\u518d\u679a\u4e3e\u77ed\u7684\u533a\u95f4\uff0c\u4e4b\u540e\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u533a\u95f4\u4e2d\u6a21 $k$ \u4f59 $x$ \u7684\u6570\u6709\u591a\u5c11\uff0c\u5e76\u4e14 $k$ \u662f\u56fa\u5b9a\u7684\u3002\u8fd9\u5c31\u76f8\u5f53\u4e8e\u95ee\u533a\u95f4\u4e2d $x$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7528 vector \u52a0\u4e8c\u5206\u6216\u626b\u63cf\u7ebf\u6216\u8005\u5176\u4ed6\u505a\u6cd5\u90fd\u884c\u3002\n\n\u8fd9\u91cc\u4e3b\u8981\u8bc1\u660e\u4e00\u4e0b\u679a\u4e3e\u77ed\u533a\u95f4\u4e3a\u4ec0\u4e48\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n\u6211\u4eec\u5bf9\u8fd9\u4e2a\u5e8f\u5217\u5efa\u51fa\u7b1b\u5361\u5c14\u6811\uff0c\u4e4b\u540e\u53d1\u73b0\u6bcf\u4e2a\u6570\u7684\u6700\u5927\u503c\u533a\u95f4\u5c31\u662f\u5b83\u7684\u5b50\u6811\uff0c\u5de6\u513f\u5b50\u662f\u5de6\u8fb9\uff0c\u53f3\u513f\u5b50\u662f\u53f3\u8fb9\u533a\u95f4\u3002\u90a3\u4e48\uff0c\u679a\u4e3e\u77ed\u533a\u95f4\u7684\u590d\u6742\u5ea6\u5c31\u662f\n\n$$\\sum_{u}\\min(size_{ls_u},size_{rs_u})$$\n\n\u5bf9\u7b1b\u5361\u5c14\u6811\u505a\u91cd\u94fe\u5256\u5206\uff0c\u6709\u4e2a\u7ed3\u8bba\u662f\u8f7b\u5b50\u6811\u7684\u603b\u5927\u5c0f\u662f $O(n\\log n)$ \u7684\uff0c\u6240\u4ee5\u679a\u4e3e\u77ed\u533a\u95f4\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log n)$ \u7684\u3002\n\n\u5982\u679c\u7528 vector \u52a0\u4e8c\u5206\u590d\u6742\u5ea6\u662f\u4e24\u4e2a $\\log$ \u7684\uff0c\u626b\u63cf\u7ebf\u5c31\u662f\u4e00\u4e2a\u3002\n\n\u4ee3\u7801\uff08\u6700\u4f18\u89e3\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int inf = 1e9;\ninline int read() {\n\tint s = 0,f = 1;char ch = getchar();\n\twhile (!isdigit(ch)) f = ch == '-' ? -1 : 1, ch = getchar();\n\twhile (isdigit(ch)) s = (s << 3) + (s << 1) + ch - '0', ch = getchar();\n\treturn s*f;\n}\nint n,k,L[300010],R[300010];\nll ans;\nint a[300010],pre[300010];\nvector<int> vc[1000010];\nint query(int x,int l,int r) {\n\treturn lower_bound(vc[x].begin(),vc[x].end(),r) - lower_bound(vc[x].begin(),vc[x].end(),l);\n}\nint main() {\n\tn = read(), k = read();\n\tfor (int i = 1;i <= n;i ++ ) a[i] = read();\n\tL[1] = 1, R[n] = n;\n\tfor (int i = 2;i <= n;i ++ ) {\n\t\tif (a[i] >= a[i-1]) {\n\t\t\tint t = i;\n\t\t\twhile (t > 1 && a[t-1] < a[i]) t = L[t-1];\n\t\t\tL[i] = t;\n\t\t}\n\t\telse L[i] = i;\n\t}\n\tfor (int i = n - 1;i;i -- ) {\n\t\tif (a[i] >= a[i+1]) {\n\t\t\tint t = i;\n\t\t\twhile (t < n && a[t+1] <= a[i]) t = R[t+1];\n\t\t\tR[i] = t;\n\t\t}\n\t\telse R[i] = i;\n\t}//\u5947\u602a\u7684\u5904\u7406\u6700\u503c\u533a\u95f4\u65b9\u6cd5\uff0c\u7528\u5355\u8c03\u6808\u5c31\u597d\u4e86\n//\tfor (int i = 1;i <= n;i ++ ) cout << L[i] << ' ' << R[i] << endl; \n\tfor (int i = 1;i <= n;i ++ ) pre[i] = (a[i] + pre[i-1]) % k;\n\tfor (int i = 0;i <= n;i ++ ) vc[pre[i]].push_back(i);\n\tans = 0;\n\tfor (int i = 1;i <= n;i ++ ) {\n\t\tif (i - L[i] > R[i] - i) {//\u77ed\u533a\u95f4\n\t\t\tfor (int j = i;j <= R[i];j ++ ) {\n\t\t\t\tint x = ((pre[j] - a[i]) % k + k) % k;\n\t\t\t\tans += query(x,L[i]-1,i);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (int j = L[i];j <= i;j ++ ) {\n\t\t\t\tint x = (pre[j-1] + a[i]) % k;\n\t\t\t\tans += query(x,i,R[i]+1);\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans - n;//\u51cfn\u662f\u56e0\u4e3a\u533a\u95f4\u957f\u5ea6\u81f3\u5c11\u662f2\uff0c\u7b97\u591a\u4e86\n\treturn 0;\n}\n```\n",
        "postTime": 1647929142,
        "uid": 94777,
        "name": "Jsxts_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF549F"
    },
    {
        "content": "\u8003\u8651\u5206\u6cbb\u3002\n\n\u5bf9\u4e8e\u533a\u95f4 $ [L,R] $\uff0c\u5176\u7b54\u6848\u4e3a $ [L,mid],[mid+1,R] $ \u533a\u95f4\u5185\u7684\u7b54\u6848\u52a0\u4e0a\u8de8\u8d8a\u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u8de8\u533a\u95f4\u7b54\u6848\u3002\u663e\u7136\u8de8\u8d8a\u5de6\u53f3\u533a\u95f4\u7684\u4e00\u4e2a\u5b50\u6bb5\u53ef\u4ee5\u770b\u4f5c\u662f\u7531 $ [L',mid],[mid+1,R'] $ \u62fc\u63a5\u800c\u6210\u3002\n\n\u5206\u7c7b\u770b $ \\max $ \u503c\u5728\u5de6\u533a\u95f4\u8fd8\u662f\u53f3\u533a\u95f4\u3002\n\n- \u82e5\u5728\u5de6\u533a\u95f4\uff0c\u5219\u5de6\u533a\u95f4\u5bf9\u5b50\u6bb5\u6743\u503c\u7684\u8d21\u732e\u4e3a $ sum(L',mid)-\\max(L',mid) $\uff0c\u53f3\u533a\u95f4\u8d21\u732e\u4e3a $ sum(mid+1,R') $\u3002\n\n- \u82e5\u5728\u53f3\u533a\u95f4\uff0c\u5219\u5de6\u533a\u95f4\u5bf9\u5b50\u6bb5\u6743\u503c\u7684\u8d21\u732e\u4e3a $ sum(L',mid) $\uff0c\u53f3\u533a\u95f4\u5bf9\u8d21\u732e\u4e3a $ sum(mid+1,R')-\\max(mid+1,R') $\u3002\n\n\u5de6\u8fb9\u53ef\u4f9b\u62fc\u63a5\u7684\u6709 $ mid-l+1 $ \u4e2a\u4e32\uff0c\u53f3\u533a\u95f4\u53ef\u4f9b\u62fc\u63a5\u7684\u6709 $ r-mid $ \u4e2a\u4e32\u3002\u5c06\u8fd9\u4e9b\u4e32\u653e\u5728\u4e00\u8d77\u6309\u4e32\u5185\u6700\u5927\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08**\u76f8\u540c\u5219\u6839\u636e\u662f\u5de6\u533a\u95f4\u8fd8\u662f\u53f3\u533a\u95f4\u6392\u5e8f**\uff09\u3002\n\n\u987a\u5e8f\u5012\u5e8f\u626b\u4e24\u6b21\uff0c\u7528\u6a21 $ k $ \u7684\u6876\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u4e0b\u9762\u662f\u4e00\u4e9b\u7ec6\u8282\u3002\n\n\u4e3a\u4e86\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u6211\u4eec\u89c4\u5b9a\u6876\u4e2d\u5b58\u7684\u662f**\u5de6\u533a\u95f4\u7684\u4e32\u7684\u8d21\u732e**\uff0c\u5373\u7edf\u8ba1\u8d21\u732e\u65f6\u5de6\u533a\u95f4\u7684\u4e32\u4e00\u5b9a\u6bd4\u53f3\u533a\u95f4\u7684\u4e32\u5148\u626b\u5230\u3002\n\n- \u987a\u5e8f\u65f6\uff0c\u5148\u626b\u5230\u7684\uff08\u5373\u5de6\u533a\u95f4\uff09\u6700\u503c\u8f83\u5c0f\uff0c\u5176\u8d21\u732e\u4e3a\u8be5\u4e32\u7684 $ sum $\uff0c\u540e\u626b\u5230\u7684\uff08\u5373\u53f3\u533a\u95f4\uff09\u8d21\u732e\u4e3a $ sum-\\max $\u3002\n\n- \u5012\u5e8f\u65f6\uff0c\u5148\u626b\u5230\u7684\uff08\u5373\u5de6\u533a\u95f4\uff09\u6700\u503c\u8f83\u5927\uff0c\u5176\u8d21\u732e\u4e3a $ sum-\\max $\uff0c\u540e\u626b\u5230\u7684\uff08\u5373\u53f3\u533a\u95f4\uff09\u8d21\u732e\u4e3a $ sum $\u3002\n\n\u7531\u4e8e\u6700\u503c\u76f8\u540c\u65f6\u6211\u4eec\u6839\u636e\u662f\u5de6\u533a\u95f4\u8fd8\u662f\u53f3\u533a\u95f4\u6392\u4e86\u5e8f\uff0c\u6240\u4ee5\u5f53\u5de6\u53f3\u4e24\u8fb9\u7684\u4e24\u4e2a\u4e32\u7684 $ \\max $ \u76f8\u540c\u65f6\uff0c\u6211\u4eec\u540c\u6837\u6ca1\u6709\u91cd\u590d\u7edf\u8ba1\u3002\n\n\u81f3\u6b64\u89e3\u51b3\u8be5\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $ O(n \\log^2n) $\u3002\n\n\u53e6\u5916\uff0c\u8003\u8651\u5230\u5de6\u533a\u95f4\u7684\u4e32\u548c\u53f3\u533a\u95f4\u7684\u4e32\u7684 $ \\max $ \u5177\u6709\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u5f52\u5e76\u6392\u5e8f\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u81f3 $ O(n \\log n) $\uff0c\u4f46\u662f\u4f5c\u8005\u4e0d\u60f3\u5199\u4e86\u3002\n\n\u5269\u4e0b\u7684\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nconst int N=1000005;\n#define int ll\n#define inv(x) (k-(x)%k)%k\nint n,k,a[N],bk[N];\nstruct P{int sum,mx,id;}t[N];\nint solve(int x,int y)\n{\n\tif(x==y) return 0;\n\tint mid=x+y>>1,Ans=solve(x,mid)+solve(mid+1,y),j=1;\n\n\tfor(int i=mid;i>=x;j++,i--) t[j].mx=max(t[j-1].mx,a[i]),t[j].sum=t[j-1].sum+a[i],t[j].id=0;\n\tfor(int i=mid+1;i<=y;j++,i++) t[j].mx=max((i!=mid+1)*t[j-1].mx,a[i]),t[j].sum=(i!=mid+1)*t[j-1].sum+a[i],t[j].id=1;\n\n\t--j;\n\tsort(t+1,t+j+1,[](P A,P B){return A.mx==B.mx?A.id<B.id:A.mx<B.mx;});\n\n\tfor(int i=1;i<=j;i++) t[i].id?Ans+=bk[inv(t[i].sum-t[i].mx)]:++bk[t[i].sum%k];\n\tfor(int i=1;i<=j;i++) bk[t[i].sum%k]-=(!t[i].id);\n\n\tfor(int i=j;i>=1;i--) t[i].id?Ans+=bk[inv(t[i].sum)]:++bk[(t[i].sum-t[i].mx)%k];\n\tfor(int i=j;i>=1;i--) bk[(t[i].sum-t[i].mx)%k]-=(!t[i].id);\n\n\treturn Ans;\n}\nsigned main()\n{\n\tscanf(\"%lld %lld\",&n,&k);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n\tprintf(\"%lld\\n\",solve(1,n));\n}\n```\n\n",
        "postTime": 1679399735,
        "uid": 432127,
        "name": "Avocadooo",
        "ccfLevel": 0,
        "title": "CF549F-\u9898\u89e3"
    },
    {
        "content": "\u540c\u6b65\u53d1\u8868\u4e8e\u6211\u7684 [$\\text{cnblog}$](https://www.cnblogs.com/UperFicial/p/16377512.html)\u3002\n\n\u697c\u4e0b\u7684\u4e24\u7bc7\u9898\u89e3\u90fd\u770b\u4e0d\u61c2\uff0c\u4e0d\u4f1a\u7b1b\u5361\u5c14\u6811\uff0c\u4e0d\u4f1a\u6253\u6807\u627e\u89c4\u5f8b\u3002\n\n\u4f46\u662f $\\texttt{CDQ}$ \u5206\u6cbb\u4f60\u503c\u5f97\u62e5\u6709\u3002\n\n\n\u5bf9\u4e8e\u5206\u6cbb\u7684\u4e24\u4e2a\u533a\u95f4 $[l,mid]$ \u548c $(mid,r]$\uff0c\u5bf9\u4e8e\u5206\u522b\u4f4d\u4e8e\u4e24\u4e2a\u533a\u95f4\u7684\u70b9 $j,i$\uff0c\u8ba1\u7b97\u662f\u5426\u6709\u8d21\u732e\u3002\n\n\u8bbe $s_i$ \u8868\u793a\u524d\u7f00/\u540e\u7f00\u548c\uff0c$b_i$ \u8868\u793a\u524d\u7f00/\u540e\u7f00\u6700\u5927\u503c\u3002\n\n\u5219\u53ef\u4ee5\u5c06\u9898\u76ee\u6761\u4ef6\u5199\u6210\u53e6\u4e00\u79cd\u5f62\u5f0f\uff1a$s_j+s_i -\\max (b_i,b_j)\\equiv 0\\pmod k$\u3002\n\n\u5bf9\u4e8e\u53d6 max \u64cd\u4f5c\uff0c\u6211\u4eec\u6700\u5e38\u89c1\u7684\u624b\u6cd5\u5c31\u662f\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\n\n\u8fd9\u91cc\u53ea\u8ba8\u8bba $b_j>b_i$ \u7684\u60c5\u51b5\uff0c\u53e6\u4e00\u79cd\u60c5\u51b5\u7559\u7ed9\u8bfb\u8005\u5206\u6790\u3002\n\n\u90a3\u4e48\u539f\u5f0f\u5316\u4e3a $s_j+s_i -b_j\\equiv 0\\pmod k$\u3002\n\n\u4ee4 $c_i =s_j -b_j$\uff0c\u5219\u539f\u5f0f\u53d8\u4e3a $s_i+c_j \\equiv 0\\pmod k$\u3002\n\n\u90a3\u4e48\u672c\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff0c\u5bf9\u4e8e $b_j>b_i$ \u7684\u6240\u6709\u4e0b\u6807 $j$\uff0c\u6709\u591a\u5c11\u4e2a\u6ee1\u8db3\u4e0e $c_j+s_i\\equiv 0\\pmod k$\u3002\n\n\u8fd9\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u5bf9 $[l,mid]$ \u548c $(mid,r]$ \u5206\u522b\u6309\u7167 $b_i$ \u6392\u5e8f\uff0c\u7136\u540e\u4e00\u4e2a Two-Pointers \u4e24\u8fb9\u626b\u8fc7\u53bb\u5c31\u884c\u4e86\u3002\n\n\u5355\u70b9\u4fee\u6539\u5355\u70b9\u67e5\u8be2\u7684\u95ee\u9898\u6211\u7adf\u7136\u4e00\u5f00\u59cb nt \u5199\u4e86\u6811\u72b6\u6570\u7ec4\u7136\u540e\u88ab\u5361\u5e38\u4e86\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u662f $\\Theta(n\\log^2 n)$\uff0c\u74f6\u9888\u5728\u4e8e\u6392\u5e8f\u3002\n\n**\u80fd\u4e0d\u80fd\u66f4\u5feb\uff1f**\n\n\u7b54\u6848\u662f\u53ef\u4ee5\u7684\u3002\n\n\u6211\u4eec\u6392\u5e8f\u7684 $b$ \u662f\u4e00\u4e2a\u524d\u7f00/\u540e\u7f00\u6700\u5927\u503c\uff0c\u5b83\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u533a\u95f4\u53cd\u8f6c\uff0c\u8fd9\u662f $\\Theta(n\\log n)$ \u7684\uff01\n\n\u4f46\u4f60\u4f1a\u53d1\u73b0\u4e0d\u7ba1\u662f $\\Theta(n\\log n)$ \u8fd8\u662f $\\Theta(n\\log ^2 n)$ \u90fd\u662f\u6700\u52a3\u89e3\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8gcqvss7.png)\n\n\u4e24\u6b21\u901f\u5ea6\u5bf9\u6bd4\u3002\n\n\u653e\u4e00\u4e0b\u4ee3\u7801\uff08\u9700\u8981\u9488\u5bf9 $b$ \u7684\u5927\u5c0f\u5173\u7cfb\u505a\u4e24\u6b21 $\\texttt{CDQ}$\uff0c\u6240\u4ee5\u6709\u70b9\u957f\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#include<cctype>\n#include<stack>\n#include<map>\n#include<climits>\n#include<set>\n#include<iostream>\n#define rint() read<int>()\n#define rll() read<ll>()\n#define rep(i,a,b) for(register int i=a;i<=b;++i)\n#define rev(i,a,b) for(register int i=a;i>=b;--i)\n#define gra(i,u) for(register int i=head[u];i;i=edge[i].nxt)\n#define print(a,l,r) rep(i,l,r) printf(\"%d \",a[i]);\n#define printll(a,l,r) rep(i,l,r) printf(\"%lld \",a[i]);\n#define Clear(a) memset(a,0,sizeof(a))\n#define yes puts(\"YES\")\n#define no puts(\"NO\")\n#define yyds puts(\"YYDS\")\nusing namespace std;\ntypedef long long ll;\ninline int read()\n{\n\tregister int s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')s=s*10+(ch-'0'),ch=getchar();\n\treturn s*w;\n}\nconst int INF=1e9;\nconst ll LLINF=1e18;\ntemplate<typename T>\ninline T Min(T x,T y){return x<y?x:y;}\ntemplate<typename T>\ninline T Max(T x,T y){return x>y?x:y;}\ntemplate<typename T>\ninline void Swap(T&x,T&y){int t=x;x=y;y=t;return;}\nconst int MAXN(3e5+10);\nconst int MAXM(1e6+10);\nint n,k,a[MAXN],b[MAXN];\nll s[MAXN],c[MAXN]; \nstruct node{int s,c;int b;};\nnode h[MAXN];\ninline bool cmp2(node x,node y){return x.b<y.b;}\ninline bool cmp4(node x,node y){return x.b>y.b;}\nint bit[MAXM];\ninline ll CDQ(int l,int r)\n{\n\tif(l==r) return 0;\n\tint mid=(l+r)>>1;\n\tll ans=CDQ(l,mid)+CDQ(mid+1,r);\n\tb[mid]=a[mid],s[mid]=a[mid],b[mid+1]=a[mid+1],s[mid+1]=a[mid+1];\n\trev(i,mid-1,l) b[i]=Max(a[i],b[i+1]),s[i]=s[i+1]+(ll)a[i];\n\trep(i,mid+2,r) b[i]=Max(a[i],b[i-1]),s[i]=s[i-1]+(ll)a[i];\n\trep(i,l,r) c[i]=s[i]-(ll)b[i];\n\trep(i,l,r)\n\t{\n\t\tc[i]%=k,s[i]=(-s[i]%k+(ll)k)%k;\n\t\th[i].c=(int)c[i]+1,h[i].s=(int)s[i]+1,h[i].b=b[i];\n\t} \n\treverse(h+l,h+mid+1);\n\tint j(l);\n\trep(i,mid+1,r)\n\t{\n\t\twhile(j<=mid&&h[j].b<h[i].b) ++bit[h[j].s],++j;\n\t\tans+=(ll)bit[h[i].c];\n\t}\n\trep(i,l,j-1) --bit[h[i].s];\n\treturn ans;\n}\ninline ll CDQ2(int l,int r)\n{\n\tif(l==r) return 0;\n\tint mid=(l+r)>>1;\n\tll ans=CDQ2(l,mid)+CDQ2(mid+1,r);\n\tb[mid]=a[mid],s[mid]=a[mid];\n\tb[mid+1]=a[mid+1],s[mid+1]=a[mid+1];\n\trev(i,mid-1,l) b[i]=Max(a[i],b[i+1]),s[i]=s[i+1]+(ll)a[i];\n\trep(i,mid+2,r) b[i]=Max(a[i],b[i-1]),s[i]=s[i-1]+(ll)a[i];\n\trep(i,l,r)\n\t{\n\t\tc[i]=((b[i]-s[i])%k+(ll)k)%k,s[i]%=k;\n\t\th[i].c=(int)c[i]+1,h[i].s=(int)s[i]+1,h[i].b=b[i];\n\t} \n\treverse(h+mid+1,h+r+1);\n\tint j(l);\n\trep(i,mid+1,r)\n\t{\n\t\twhile(j<=mid&&h[j].b>=h[i].b) ++bit[h[j].c],++j;\n\t\tans+=bit[h[i].s];\n\t}\n\trep(i,l,j-1) --bit[h[i].c];\n\treturn ans;\n}\nint main()\n{\n\tn=read(),k=read();\n\trep(i,1,n) a[i]=read();\n\tprintf(\"%lld\\n\",CDQ(1,n)+CDQ2(1,n));\n\treturn 0;\n}\n```",
        "postTime": 1655260155,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010CF549F Yura and Developers\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217,\u95ee\u53c8\u591a\u5c11\u5b50\u4e32\u7684\u548c($sum$)\u51cf\u53bb\u6700\u5927\u503c($max$)\u9664 $k$ \u540e\u7684\u4f59\u6570\u7b49\u4e8e $0$($(sum-max)\\bmod k=0$).\n\n# \u5206\u6790\n\n\u53ef\u4ee5\u5148\u7528\u5355\u8c03\u6808\u5904\u7406\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u4e3a\u6700\u5927\u503c\u7684\u533a\u95f4,\u90a3\u4e48\u53ef\u4ee5\u8ba1\u7b97\u51fa\u524d\u7f00\u548c\u4e4b\u540e\u5728\u8fd9\u4e2a\u6700\u5927\u503c\u7684\u4e24\u8fb9\u5404\u679a\u4e3e\u4e00\u4e0b\u8fd9\u4e2a\u5b50\u4e32\u7684\u8d77\u70b9\u548c\u7ec8\u70b9,\u5229\u7528\u524d\u7f00\u548c\u53ef\u4ee5\u505a\u5230 $\\mathcal{O}(1)$ \u5224\u65ad\u8fd9\u4e2a\u5b50\u4e32\u662f\u5426\u5408\u6cd5.\u5f53\u7136,\u5982\u679c\u53ea\u679a\u4e3e\u4e00\u8fb9,\u53e6\u5916\u4e00\u8fb9\u53ef\u4ee5\u7528\u4e00\u4e9b\u5947\u602a\u7684\u6570\u636e\u7ed3\u6784\u7b49\u4e1c\u897f\u7ef4\u62a4\u4e00\u4e0b\u524d\u7f00\u548c\u5bf9 $k$ \u53d6\u6a21\u540e\u7684\u7ed3\u679c\u4e5f\u662f\u53ef\u4ee5\u7684.\u4f46\u4e00\u4e2a\u70b9\u5230\u8fd9\u4e2a\u70b9\u4e3a\u6700\u5927\u503c\u7684\u533a\u95f4\u4e24\u8fb9\u7684\u8ddd\u79bb\u6700\u5927\u662f\u53ef\u4ee5\u5230 $n$ \u7ea7\u522b\u7684,\u76f4\u63a5\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal{O}(n^2)$ \u4e86,\u663e\u7136\u4e0d\u884c.\u4f46\u5982\u679c\u662f\u679a\u4e3e\u8f83\u77ed\u7684\u4e00\u8fb9\u5462?\u53d1\u73b0\u5c45\u7136\u662f\u53ef\u4ee5\u8fc7\u7684!!!\n\n\u73b0\u5728\u6765\u975e\u5e38\u4e0d\u79d1\u5b66\u5f97\u8bc1\u660e\u4e00\u4e0b(\u56e0\u4e3a\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u4e2a\u95ee\u9898\u662f\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6bcf\u4e2a\u6570\u90fd\u4e0d\u540c\u7684,\u6240\u4ee5\u4e0b\u9762\u8003\u8651\u7684\u5e8f\u5217\u662f\u4e00\u4e2a\u6392\u5217):\n\n\u663e\u7136\u53ef\u4ee5\u5199\u51fa\u5982\u4e0b $\\operatorname{dp}$($f_i$ \u8868\u793a\u957f\u5ea6\u4e3a $i$ \u7684\u5e8f\u5217\u901a\u8fc7\u4ee5\u4e0a\u65b9\u6cd5\u679a\u4e3e\u7684\u6700\u591a\u679a\u4e3e\u6b21\u6570)\n\n```cpp\nf[0]=0;\nf[1]=1;\nf[2]=1;\nREP(i,3,n)\n{\n    //\u4e00\u4e2a\u957f\u5ea6\u4e3a i \u7684\u6392\u5217\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6700\u5927\u503c,\u5e76\u4e14\u5bf9\u4e8e\u9664\u8fd9\u4e2a\u6700\u5927\u503c\u5bf9\u5e94\u7684\u533a\u95f4\u4ee5\u5916,\u5176\u4ed6\u6570\u7684\u533a\u95f4\u662f\u4e0d\u53ef\u80fd\u7ecf\u8fc7\u8fd9\u4e2a\u4f4d\u7f6e\u7684,\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a\u6700\u5927\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e,\u90a3\u4e48\u5c31\u53d8\u6210\u4e86\u4e24\u4e2a\u957f\u5ea6\u8f83\u77ed\u7684\u6392\u5217,\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u524d\u9762\u8ba1\u7b97\u51fa\u6765\u7684 dp \u503c\n\tREP(j,0,i-1)\n\t{\n\t\tf[i]=max(f[i],f[j]+f[i-1-j]+min(j,i-1-j));\n\t}\n}\n```\n\n\u5728 $n=10000$ \u65f6,\u901a\u8fc7\u4ee5\u4e0a\u4ee3\u7801\u8ba1\u7b97\u51fa\u6765\u7684 $f_n=59613$,\u5728 $n=100000$ \u65f6,\u901a\u8fc7\u4ee5\u4e0a\u4ee3\u7801\u8ba1\u7b97\u51fa\u6765\u7684 $f_n=765030$,\u5728 $n=300000$ \u65f6,\u901a\u8fc7\u4ee5\u4e0a\u4ee3\u7801\u8ba1\u7b97\u51fa\u6765\u7684 $f_n=2528456$,\u636e\u6b64,\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u731c\u6d4b\u8fd9\u4e2a $f_i$ \u662f $n\\log_2n$ \u7ea7\u522b,\u4e14\u5728 $n$ \u8f83\u5927\u65f6(\u6b64\u9898\u6570\u636e\u8303\u56f4)\u6bd4 $n\\log_2n$ \u5c0f\u5f88\u591a.\n\n\u5f53\u7136,\u901a\u8fc7\u8fd9\u4e2a\u4ee3\u7801\u4e5f\u4e0d\u96be\u770b\u51fa $f_i$ \u7684\u8f6c\u79fb\u663e\u7136\u662f\u4ece\u4e2d\u95f4\u65ad\u5f00\u65f6\u6700\u5927(\u7c7b\u4f3c\u5feb\u901f\u6392\u5e8f\u7b49\u5206\u6cbb\u7b97\u6cd5)\u4e14\u6bcf\u4e00\u5c42\u7684\u8ddd\u79bb\u7684\u548c\u662f $n$ \u7ea7\u522b,\u59b9\u5b50\u533a\u95f4\u7684\u957f\u5ea6\u90fd\u4f1a\u521d\u4e8c,\u6240\u4ee5\u5c42\u6570\u662f $log_2n$ \u7ea7\u522b(\u56e0\u4e3a\u4e2d\u95f4\u4e3a\u6700\u5927\u503c\u7684\u6570\u4e0d\u53ef\u4ee5\u88ab\u8ba1\u7b97\u5230\u8ddd\u79bb\u91cc,\u6240\u4ee5\u6700\u7ec8\u80fd\u8ba1\u7b97\u7ed3\u679c\u4e0e\u5c0f\u4e8e $n\\log_2n$).\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define REP(i,first,last) for(int i=first;i<=last;++i)\n#define DOW(i,first,last) for(int i=first;i>=last;--i)\nnamespace IO\n//\u5feb\u8bfb\u6a21\u677f\nusing namespace IO;\nusing namespace std;\nconst int MAXN=3e5+20;\nint n,k;\nstruct Number\n{\n\tint num,l,r,sum;\n}arr[MAXN];\nint st[MAXN],top=0;\nint root_[MAXN];\nint *root=root_+10;\nnamespace SGT//\u56e0\u4e3a\u95f2\u5f97\u65e0\u804a\u5c31\u76f4\u63a5\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u524d\u7f00\u548c\u6a21 k \u540e\u7684\u7ed3\u679c\u4e2a\u6570\u4e86(\u53ef\u4ee5\u7528 vector+\u4e8c\u5206\u6765\u7ef4\u62a4)\n{\n\tstruct SegmentTree\n\t{\n\t\tint sum,lson,rson;\n\t}sgt[MAXN<<6];\n\tint sgt_cnt=0;\n\t#define LSON sgt[now].lson\n\t#define RSON sgt[now].rson\n\t#define MIDDLE ((left+right)>>1)\n\t#define LEFT LSON,left,MIDDLE\n\t#define RIGHT RSON,MIDDLE+1,right\n\t#define NEW_LSON sgt[new_tree].lson\n\t#define NEW_RSON sgt[new_tree].rson\n\tvoid Updata(int place,int &new_tree,int now,int left=0,int right=k)\n\t{\n\t\tif(place<left||right<place)\n\t\t{\n\t\t\tnew_tree=now;\n\t\t\treturn;\n\t\t}\n\t\tnew_tree=++sgt_cnt;\n\t\tif(left==right)\n\t\t{\n\t\t\tsgt[new_tree].sum=sgt[now].sum+1;\n\t\t\treturn;\n\t\t}\n\t\tUpdata(place,NEW_LSON,LEFT);\n\t\tUpdata(place,NEW_RSON,RIGHT);\n\t}\n\tint Query(int place,int cut,int now,int left=0,int right=k)\n\t{\n\t\tif(place<left||right<place)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif(left==right)\n\t\t{\n\t\t\treturn sgt[now].sum-sgt[cut].sum;\n\t\t}\n\t\treturn Query(place,sgt[cut].lson,LEFT)+Query(place,sgt[cut].rson,RIGHT);\n\t}\n}\nint main()\n{\n\tRead(n,k);\n\tSGT::Updata(0,root[0],root[-1]);\n\tint sum=0;\n\tREP(i,1,n)//\u5355\u8c03\u6808\u5904\u7406\u51fa\u6bcf\u4e2a\u6570\u4e3a\u6700\u5927\u503c\u7684\u533a\u95f4\n\t{\n\t\tRead(arr[i].num);\n\t\tarr[i].sum=(arr[i-1].sum+arr[i].num)%k;\n\t\tSGT::Updata(arr[i].sum,root[i],root[i-1]);\n\t\twhile(top&&arr[st[top]].num<arr[i].num)\n\t\t{\n\t\t\ttop--;\n\t\t}\n\t\tarr[i].l=st[top]+1;\n\t\tst[++top]=i;\n\t}\n\ttop=0;\n\tDOW(i,n,1)\n\t{\n\t\twhile(top&&arr[st[top]].num<=arr[i].num)\n\t\t{\n\t\t\ttop--;\n\t\t}\n\t\tarr[i].r=st[top]?st[top]-1:n;\n\t\tst[++top]=i;\n\t}\n\tlong long answer=-n;\n\tREP(i,1,n)\n\t{\n\t\tif(i-arr[i].l<arr[i].r-i)//\u679a\u4e3e\u8f83\u77ed\u7684\u4e00\u8fb9\n\t\t{\n\t\t\tREP(j,arr[i].l,i)\n\t\t\t{\n\t\t\t\tanswer+=SGT::Query((arr[j-1].sum+arr[i].num)%k/*\u9700\u8981\u7528\u5230\u7684\u524d\u7f00\u548c\u7684\u6570\u503c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u8ba1\u7b97\u5f97\u51fa,\u8fd9\u91cc\u4e0d\u5c55\u5f00*/,root[i-1],root[arr[i].r]);\n\t\t\t}\n\t\t}\n\t\telse//\u4e0b\u9762\u540c\u7406\n\t\t{\n\t\t\tREP(j,i,arr[i].r)\n\t\t\t{\n\t\t\t\tanswer+=SGT::Query((arr[j].sum-arr[i].num%k+k)%k,root[arr[i].l-2],root[i-1]);\n\t\t\t}\n\t\t}\n\t}\n\tWriteln(answer);\n\treturn 0;\n}\n```",
        "postTime": 1601988505,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF549F \u3010Yura and Developers\u3011"
    }
]