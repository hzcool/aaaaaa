[
    {
        "content": "~~\uff08\u600e\u4e48\u8fde\u7eed\u4e24\u573a1F\u90fd\u662f\u6811\u4e0a\u7684\u795e\u4ed9\u9898\u554a\uff09~~\n\n\u9996\u5148\u8003\u8651\u80fd\u4e0d\u80fd\u627e\u5230\u4e00\u4e2a\u5f62\u5f0f\u5316\u7684\u70b9\uff0c\u4f7f\u5f97\u53ea\u8981\u6709\u4ea4\u96c6\u5c31\u5305\u542b\u8fd9\u4e2a\u70b9\u3002\n\n\u53d1\u73b0\u771f\u6709\u8fd9\u4e48\u4e00\u4e2a\u70b9\uff0c\u90a3\u5c31\u662f\u6240\u6709\u8def\u5f84\u7684$lca$\u6df1\u5ea6\u6700\u5927\u7684\u4e00\u4e2a\u7684$d$\u7ea7\u7956\u5148\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a\u6839\u8282\u70b9\uff09\u3002\u4e0d\u59a8\u5047\u8bbe\u8fd9\u6761\u8def\u5f84\u4e3a$p$\uff0c\u8fd9\u4e2a$d$\u7ea7\u7956\u5148\u4e3a$u$\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u9996\u5148$lca$\u5728$u$\u5b50\u6811\u5185\u7684\u8def\u5f84\u4e00\u5b9a\u6ee1\u8db3\u6761\u4ef6\uff08\u5426\u5219\u6709\u6df1\u5ea6\u66f4\u5927\u7684$lca$\uff09\u3002\n\n\u5426\u5219\uff0c\u82e5$u$\u4e0d\u662f\u67d0\u6761\u4e0d\u5728$u$\u5b50\u6811\u5185\u7684\u8def\u5f84$q$\u7684$d$\u90bb\u5c45\u5185\uff0c\u90a3\u4e48$p$\u548c$q$\u4e4b\u95f4\u4e00\u5b9a\u6ca1\u6709\u4ea4\u96c6\uff08\u8fd9\u79cd\u60c5\u51b5$u$\u662f\u6700\u6709\u53ef\u80fd\u5c5e\u4e8e\u4ea4\u96c6\u7684\uff09\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u628a\u95ee\u9898\u8f6c\u6362\u4e3a\u4e86\uff0c\u67d0\u4e2a\u786e\u5b9a\u7684\u70b9$u$\u662f\u5426\u5c5e\u4e8e\u6240\u6709\u8def\u5f84\u7684$d$\u90bb\u5c45\uff08\u8fd9\u4e2a$u$\u80af\u5b9a\u662f\u5341\u5206\u5bb9\u6613\u627e\u5230\u7684\uff09\u3002\n\n\u5047\u8bbe$u$\u7684$d$\u7ea7\u7956\u5148\u4e3a$v$\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a\u6839\u8282\u70b9\uff09\uff0c\u90a3\u4e48\u9996\u5148\u8981\u6ee1\u8db3\u7684\u662f\u6bcf\u6761\u8def\u5f84\u4e0e$v$\u7684\u5b50\u6811\u6709\u4ea4\u96c6\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u6811\u4e0a\u5dee\u5206+\u5b50\u6811\u6c42\u548c\u89e3\u51b3\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e$lca$\u5728$v$\u5b50\u6811\u5916\u7684\u8def\u5f84\u662f\u80af\u5b9a\u6ee1\u8db3\u6761\u4ef6\u7684\uff08\u5176\u4e00\u5b9a\u7ecf\u8fc7$v$\uff09\u3002\u5bf9\u4e8e$v$\u5b50\u6811\u5185\u7684\u8def\u5f84\uff0c\u53ea\u8981\u6ee1\u8db3\u5176$lca$\u4e0e$u$\u7684$dis\\le d$\u5373\u53ef\u3002\n\n\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u76f8\u5f53\u4e8e\uff1a\n\n1.\u5c06\u67d0\u70b9\u8bbe\u4e3a\u5173\u952e\u70b9\u3002\n\n2.\u5c06\u67d0\u70b9\u8bbe\u4e3a\u975e\u5173\u952e\u70b9\u3002\n\n3.\u8be2\u95ee\u4e00\u4e2a\u5b50\u6811\u5185\u5173\u952e\u70b9\u5230$x$\u7684\u6700\u957f\u8ddd\u79bb\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u7ef4\u62a4\u533a\u95f4\u76f4\u5f84\u89e3\u51b3\uff0c\u7136\u540e\u8fd9\u9053\u9898\u5c31\u6109\u5feb\u7684\u89e3\u51b3\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\u3002\uff08\u8981\u662f\u6709\u4ec0\u4e48\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u4ee3\u7801\uff09\u3002\n\n### \u4ee3\u7801\n\n```cpp\n//W4P3R\n#include<bits/stdc++.h>\n#define inf 1e9\n#define eps 1e-6\n#define mp make_pair\n#define pb push_back\n#define re register int\n#define fr first\n#define sd second\n#define pa pair<int,int>\n#define FOR(i,a,b) for(re i=a;i<=b;i++)\n#define REP(i,a,b) for(re i=a;i>=b;i--)\n#define N 200010\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ninline ll read()\n{\n\tchar ch=getchar();\n\tll s=0,w=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\ninline int lowbit(int x){return x&(-x);}\nint n,q;\nvector<int>e[N];int fa[N][21],deep[N];\nint L[N],R[N],Time,nowm,Q[N];\nmultiset<pa>S;\t\nstruct path{int x,y;};\n\ninline int LCA(int u,int v)\n{\n\tif(deep[u]<deep[v])swap(u,v);\n\tREP(i,20,0)if(deep[fa[u][i]]>=deep[v])u=fa[u][i];\n\tif(u==v)return u;\n\tREP(i,20,0)if(fa[u][i]!=fa[v][i])u=fa[u][i],v=fa[v][i];\n\treturn fa[u][0];\n}\ninline int dis(int x,int y)\n{\n\tif(x<0||y<0)return -inf;\n\treturn deep[x]+deep[y]-2*deep[LCA(x,y)];\n}\npath operator +(path a,path b)\n{\n\tint x=-1,y=-1,d=-inf;\n\tif(dis(a.x,a.y)>d)d=dis(a.x,a.y),x=a.x,y=a.y;\n\tif(dis(a.x,b.x)>d)d=dis(a.x,b.x),x=a.x,y=b.x;\n\tif(dis(a.x,b.y)>d)d=dis(a.x,b.y),x=a.x,y=b.y;\n\tif(dis(a.y,b.x)>d)d=dis(a.y,b.x),x=a.y,y=b.x;\n\tif(dis(a.y,b.y)>d)d=dis(a.y,b.y),x=a.y,y=b.y;\n\tif(dis(b.x,b.y)>d)d=dis(b.x,b.y),x=b.x,y=b.y;\n\treturn (path){x,y};\n}\nvoid dfs(int x,int father)\n{\n\tfa[x][0]=father;FOR(i,1,20)fa[x][i]=fa[fa[x][i-1]][i-1];\n\tdeep[x]=deep[father]+1;L[x]=++Time;Q[Time]=x;\n\tfor(int y:e[x])if(y!=father)dfs(y,x);R[x]=Time;\n}\nnamespace S1\n{\n\tint c[N];\n\tinline void add(int x,int v){for(;x<=n;x+=lowbit(x))c[x]+=v;}\n\tinline int qry(int x){int s=0;for(;x;x-=lowbit(x))s+=c[x];return s;}\n\tinline int qry(int l,int r){return qry(r)-qry(l-1);}\n}\nnamespace S2\n{\n\t#define ls (x<<1)\n\t#define rs (x<<1|1)\n\t#define mid ((l+r)>>1)\n\tint sum[N];path t[N<<2];\n\tvoid build(int l,int r,int x)\n\t{\n\t\tt[x]=(path){-1,-1};if(l==r)return ;\n\t\tbuild(l,mid,ls);build(mid+1,r,rs);\n\t}\n\tvoid upd(int l,int r,int x,int pos,int opt)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tif(opt==+1){t[x]=(path){Q[l],Q[l]};}\n\t\t\tif(opt==-1){t[x]=(path){-1,-1};}\n\t\t\treturn ;\n\t\t}\n\t\tif(pos<=mid)upd(l,mid,ls,pos,opt);\n\t\telse upd(mid+1,r,rs,pos,opt);\n\t\tt[x]=t[ls]+t[rs];\n\t}\n\tpath qry(int l,int r,int x,int left,int right)\n\t{\n\t\tif(l==left&&right==r)return t[x];\n\t\tif(right<=mid)return qry(l,mid,ls,left,right);\n\t\telse if(left>mid)return qry(mid+1,r,rs,left,right);\n\t\telse return qry(l,mid,ls,left,mid)+qry(mid+1,r,rs,mid+1,right);\n\t}\n\tinline void add(int x)\n\t{\n\t\tif(!sum[x])upd(1,n,1,L[x],+1);\n\t\tsum[x]++;\n\t}\n\tinline void del(int x)\n\t{\n\t\tsum[x]--;\n\t\tif(!sum[x])upd(1,n,1,L[x],-1);\n\t}//\u4e00\u4e2a\u70b9\u53ef\u4ee5\u51fa\u73b0\u591a\u6b21\u54e6\n}\ninline int FA(int x,int d)\n{\n\tif(deep[x]<=d)return 1;//\u4e0d\u5b58\u5728\u4e3a\u6839\u8282\u70b9\n\tREP(i,20,0)if((1<<i)<=d){d-=(1<<i),x=fa[x][i];}\n\treturn x;\n}\ninline int ask(int d)\n{\n\tint v=(*(--S.end())).sd;v=FA(v,d);int t=FA(v,d);\n\tif(S1::qry(L[t],R[t])!=nowm)return 0;//\u4e0d\u662f\u6240\u6709\u8def\u5f84\u4e0ev\u5b50\u6811\u6709\u4ea4\u96c6\n\tpath p=S2::qry(1,n,1,L[t],R[t]);//\u533a\u95f4\u6700\u957f\u94fe\n\tif(dis(v,p.x)<=d&&dis(v,p.y)<=d)return 1;//x\u5230\u8fd9\u4e9b\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e00\u5b9a\u662f\u6700\u957f\u94fe\u7aef\u70b9\u4e4b\u4e00\n\telse return 0;\n}\nint main()\n{\n\t//ios::sync_with_stdio(false);\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),q=read();\n\tFOR(i,1,n-1)\n\t{\n\t\tint x=read(),y=read();\n\t\te[x].pb(y),e[y].pb(x);\n\t}\n\tdfs(1,0);S2::build(1,n,1);\n\twhile(q--)\n\t{\n\t\tint opt=read();\n\t\tif(opt==1)\n\t\t{\n\t\t\tint u=read(),v=read();int z=LCA(u,v);\n\t\t\tS1::add(L[u],1);S1::add(L[v],1);S1::add(L[z],-1);//\u6811\u4e0a\u5dee\u5206\n\t\t\tS2::add(z);nowm++;\n\t\t\tS.insert(mp(deep[z],z));\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tint u=read(),v=read();int z=LCA(u,v);\n\t\t\tS1::add(L[u],-1);S1::add(L[v],-1);S1::add(L[z],1);\n\t\t\tS2::del(z);nowm--;\n\t\t\tS.erase(S.lower_bound(mp(deep[z],z)));\n\t\t}\n\t\tif(opt==3)\n\t\t{\n\t\t\tint d=read();\n\t\t\task(d)?cout<<\"Yes\\n\":cout<<\"No\\n\";\n\t\t}\n\t}\n\treturn 0;\n}\n//gl\n\n```\n**\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u90a3\u4f60\u53ef\u4ee5\u70b9\u4e2a\u8d5e\u652f\u6301\u6211\u4e00\u4e0bqwq\u3002\u5982\u679c\u4f60\u5bf9\u9898\u89e3\u6709\u4efb\u4f55\u95ee\u9898/\u8ba4\u4e3a\u6211\u7684\u9898\u89e3\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u53ef\u4ee5\u79c1\u4fe1/\u5728\u8bc4\u8bba\u533a\u53d1\u51fa\u6765\uff0c\u5f53\u7136\u5982\u679c\u4f60\u5bf9\u6211\u7684\u9898\u89e3\u6709\u4efb\u4f55\u610f\u89c1/\u5efa\u8bae\u4e5f\u6b22\u8fce\u6307\u51fa\u3002\u6211\u4f1a\u5c3d\u6211\u5168\u529b\u628a\u6211\u9898\u89e3\u5199\u5230\u6700\u597d\u7684qwq**\n\n",
        "postTime": 1608733256,
        "uid": 72419,
        "name": "WAPER4EVER",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1464F \u3010My Beautiful Madness\u3011"
    },
    {
        "content": "# CF1464F My Beautiful Madness\n\n## Meaning\n\n\u5b9a\u4e49\u6811\u4e0a\u4e00\u6761\u8def\u5f84\u7684 $d$ \u90bb\u5c45\uff08\u4e00\u4e2a\u70b9\u96c6\uff09$S$\uff1a$x \\in S$ \u5f53\u524d\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u8def\u5f84\u4e0a\u7684\u70b9 $y$ \u6ee1\u8db3 $dis_{x,y}\\le d$\uff0c\u6709\u4e09\u4e2a\u64cd\u4f5c\uff1a\u52a0\u8fb9\uff0c\u5220\u8fb9\uff0c\u8be2\u95ee\u6240\u6709\u8def\u5f84\u7684 $d$ \u90bb\u5c45\u4ea4\u96c6\u662f\u5426\u4e3a\u7a7a\uff08\u901a\u4fd7\u4e00\u70b9\u5c31\u662f\uff1a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\u4f7f\u5b83\u5230\u6240\u6709\u8def\u5f84\u8ddd\u79bb\uff08\u5230\u8def\u5f84\u4e0a\u70b9\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\uff09\u6bd4 $d$ \u5c0f\uff09\u3002\n\n------------\n\n## Solution\n\n\u6211\u4eec\u96be\u4ee5\u5224\u65ad\u8def\u5f84\u5173\u7cfb\uff0c\u6b32\u6c42\u4e00\u79cd\u7b80\u5355\u7684\u7b49\u4ef7\u7684\u5bb9\u6613\u5224\u65ad\u7684\u8868\u793a\u6cd5\uff0c\u53ef\u4ee5\u6293\u4f4f\u6811\u4e0a\u67d0\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u5982\u679c\u6709\u89e3\uff0c\u90a3\u5b83\u5fc5\u7136\u5904\u4e8e\u6240\u6709\u8def\u5f84\u7684\u4ea4\u96c6\uff0c\u800c\u8fd9\u4e2a\u5173\u952e\u8282\u70b9\u5219\u662f\u6811\u4e0a\u6700\u6df1\u7684 LCA \u7684 $d$ \u7ea7\u7956\u5148\uff0c\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c~~\u753b\u56fe\u611f\u6027\u7406\u89e3\u4e00\u4e0b~~\u3002\n\n\n![\u793a\u4f8b1](https://cdn.luogu.com.cn/upload/image_hosting/albbzdue.png?x-oss-process=image/resize,m_lfit,h_340,w_450)\n\n\u5047\u8bbe\u6211\u4eec\u52a0\u4e86 $(1,3),(1,5),(7,9),(9,9)$ \u56db\u6761\u8fb9\uff0c\u73b0\u5728\u8be2\u95ee $2$\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u5173\u952e\u8282\u70b9\u5c31\u662f $5$\uff0c\u6240\u6709\u8def\u5f84\u4e5f\u90fd\u4f1a\u6709\u4ea4\uff0c\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u5411\u4e0a\uff0c\u5c31\u66f4\u4e0d\u53ef\u80fd\u53ef\u80fd\u6027\u5c31\u4f1a\u66f4\u5927\uff08\u5982\u679c\u8fd9\u4e2a\u793a\u4f8b\u6811\u66f4\u5927\u4e00\u4e9b\uff0c\u8fb9\u6570\u591a\u4e00\u4e9b\uff0c\u90a3\u5c31\u53ea\u6709\u8fd9\u4e00\u79cd\u60c5\u51b5\uff09\u3002\n\n\u6c42\u51fa\u4e86\u5173\u952e\u8282\u70b9\u540e\uff0c\u6211\u4eec\u53c8\u5e94\u8be5\u5982\u4f55\u5224\u65ad\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u5b50\u6811\u5185\u5916\u5206\u522b\u8003\u8651\uff0c\u5bf9\u4e8e\u5b50\u6811\u5185\u7684\u8def\u5f84\u6ee1\u8db3\uff0c\u56e0\u4e3a\u6700\u6df1\u7684 LCA \u90fd\u80fd\u5230\u8fbe\uff1b\u8003\u8651\u5b50\u6811\u5916\u7684\u8def\u5f84\uff0c\u56e0\u4e3a\u6211\u4eec\u9009\u53d6\u7684\u5173\u952e\u8282\u70b9\uff0c\u5373\u662f\u5728\u6ee1\u8db3\u5b50\u6811\u5185\u7684\u9650\u5236\u5c3d\u91cf\u5f80\u5916\u8d70\u7684\u70b9\uff0c\u6240\u4ee5\u7b49\u6548\u4ee3\u66ff\uff0c\u73b0\u5728\u7684\u5224\u5b9a\u53d8\u4e3a\u4e86\u8ba1\u7b97\u5173\u952e\u8282\u70b9\u4e0e\u5173\u952e\u8282\u70b9\u5b50\u6811\u5916\u7684 LCA \u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u4e0e $2d$ \u7684\u5173\u7cfb\u3002\n\n\u540c\u65f6\u6211\u4eec\u4ee4\u5173\u952e\u8282\u70b9\u4e3a $u$\uff0c\u5b83\u7684 $d$ \u7ea7\u7956\u5148\u4e3a $v$\uff0c\u540c\u6837\u7684\u5b50\u6811\u5185\u5916\u5206\u522b\u8003\u8651\uff0c\u9996\u5148\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u7684\u8def\u5f84\u90fd\u8981\u7ecf\u8fc7 $v$ \u7684\u5b50\u6811\uff08\u672c\u6765\u662f\u548c $u$ \u6709\u4ea4\uff09\uff0c\u8fd9\u4e2a\u4e5f\u597d\u7406\u89e3\uff0c~~\u8111\u6d1e\u753b\u56fe\u7406\u89e3\u4e00\u6ce2~~\u3002\n\n![\u793a\u4f8b2](https://cdn.luogu.com.cn/upload/image_hosting/qtvv40na.png?x-oss-process=image/resize,m_lfit,h_340,w_450)\n\n\u518d\u6b21\u5047\u8bbe\u6211\u4eec\u52a0\u4e86 $(7,9),(2,3),(5,7),(2,5),(9,9)$ \u4e94\u6761\u8fb9\uff0c\u8be2\u95ee\u7684\u662f $1$\uff0c\u53ef\u4ee5\u5f88\u597d\u7684\u53d1\u73b0\u5982\u679c\u4e0d\u6ee1\u8db3\u7684\u8bdd\uff0c\u90a3\u5b83\u662f\u65e0\u89e3\u7684\uff0c\u662f\u80af\u5b9a\u5927\u4e8e $d$ \u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e $v$ \u5b50\u6811\u5185\u7684\u8def\u5f84\uff0c\u53d8\u6210\u4e86\u6c42\u89e3 $u$ \u548c $v$ \u5b50\u6811\u5185\u7684 LCA \u6700\u8fdc\u8ddd\u79bb\uff0c\u5230\u73b0\u5728\u90a3\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5 AC \u4e86\uff08\u9ed1\u9898\u5440\uff09\u3002\n\n------------\n\n## Hint\n\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u6765\u7406\u4e00\u7406\u6211\u4eec\u9700\u8981\u6c42\u89e3\u7684\u4e1c\u897f\u548c\u9700\u8981\u7528\u5230\u7684\u7b97\u6cd5\u4e86\uff1a\n\n1. \u5904\u7406\u51fa\u6811\u7684 $dfn$ \u5e8f\uff0c\u7136\u540e\u500d\u589e\u6c42 LCA\u3002\n2. \u7528 `multiset` \u8bb0\u5f55\u8def\u5f84\u548c\u6df1\u5ea6\uff0c\u6bcf\u6b21\u53d6\u6df1\u5ea6\u6700\u5927\u503c\u3002\n3. \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6811\u4e0a\u5dee\u5206\uff0c\u7edf\u8ba1\u8def\u5f84\u6761\u6570\u3002\n4. \u7ebf\u6bb5\u6811\u7ef4\u62a4\u6811\u7684\u76f4\u5f84\u3002\n5. \u5224\u65ad\u6240\u6709\u8def\u5f84\u662f\u5426\u7ecf\u8fc7 $v$ \u7684\u5b50\u6811\uff0c\u4ee5\u53ca\u8ba1\u7b97\u5b50\u6811\u76f4\u5f84\u4e0e $2d$ \u7684\u5173\u7cfb\u3002\n\n\u4e0b\u9762\u5c31\u662f\u4ee3\u7801\u4e86\n\n------------\n\n## AC Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,dfn,inf=0x3f3f3f3f,dep[200001],st[200001][21],ls[200001],rs[200001],cnt[200001];\nvector <int> G[200001];\nmultiset <pair<int,int> > s;//\u8bb0\u5f55\u8def\u5f84\u53ca\u5176lca\u7684\u6df1\u5ea6\nstruct spot{\n\tint x,y,val;\n};\nvoid get(int rt,int fa){\n\tls[rt]=++dfn;\n\tdep[rt]=dep[fa]+1;\n\tst[rt][0]=fa;\n\tfor(int i=1;i<=20;i++) st[rt][i]=st[st[rt][i-1]][i-1];\n\tfor(int i=0;i<G[rt].size();i++){\n\t\tint to=G[rt][i];\n\t\tif(fa!=to) get(to,rt);\n\t}\n\trs[rt]=dfn;\n}\nint lca(int u,int v){\n\tif(dep[u]<dep[v]) swap(u,v);\n\tfor(int i=20;i>=0;i--){\n\t\tif(dep[st[u][i]]>=dep[v]) u=st[u][i];\n\t}\n\tif(u==v) return u;\n\tfor(int i=20;i>=0;i--){\n\t\tif(st[u][i]!=st[v][i]){\n\t\t\tu=st[u][i];\n\t\t\tv=st[v][i];\n\t\t}\n\t}\n\treturn st[u][0];\n}\nint dist(int u,int v){\n\tif(u==-1||v==-1) return -inf;\n\tint fa=lca(u,v);\n\treturn dep[u]+dep[v]-2*dep[fa];\n}\nint find(int x,int k){\n\tfor(int i=20;i>=0;i--){\n\t\tif((1<<i)<=k&&st[x][i]){\n\t\t\tk-=(1<<i);\n\t\t\tx=st[x][i];\n\t\t}\n\t\telse if((1<<i)<=k&&!st[x][i]) return 1;\n\t}\n\treturn x;\n}\nspot merge(spot p,spot q){\n\tif(p.x==-1) return q;\n\tif(q.x==-1) return p;\n\tspot res=q;\n\tif(p.val>q.val) res=p;\n\tint a=dist(p.x,q.x),b=dist(p.x,q.y),c=dist(p.y,q.x),d=dist(p.y,q.y);\n\tif(res.val<a) res=spot{p.x,q.x,a};\n\tif(res.val<b) res=spot{p.x,q.y,b};\n\tif(res.val<c) res=spot{p.y,q.x,c};\n\tif(res.val<d) res=spot{p.y,q.y,d};\n\treturn res;\n}\nstruct SegmentTree{\n\tspot node[800001];\n\tvoid build(int rt,int l,int r){\n\t\tnode[rt]=spot{-1,-1,-inf};\n\t\tif(l==r) return;\n\t\tint mid=(l+r)/2;\n\t\tbuild(rt*2,l,mid);\n\t\tbuild(rt*2+1,mid+1,r);\n\t}\n\tspot query(int rt,int l,int r,int L,int R){\n\t\tif(L<=l&&r<=R) return node[rt];\n\t\tint mid=(l+r)/2;\n\t\tif(R<=mid) return query(rt*2,l,mid,L,R);\n\t\tif(L>=mid+1) return query(rt*2+1,mid+1,r,L,R);\n\t\treturn merge(query(rt*2,l,mid,L,R),query(rt*2+1,mid+1,r,L,R));\n\t}\n\tvoid updata(int rt,int l,int r,int id,int x,int pos){\n\t\tif(l==r&&l==id){\n\t\t\tif(pos==1) node[rt]=spot{x,x,0};\n\t\t\telse node[rt]=spot{-1,-1,-inf};\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)/2;\n\t\tif(id<=mid) updata(rt*2,l,mid,id,x,pos);\n\t\telse updata(rt*2+1,mid+1,r,id,x,pos);\n\t\tnode[rt]=merge(node[rt*2],node[rt*2+1]); \n\t}\n}t1;//\u7ef4\u62a4\u6811\u7684\u76f4\u5f84\nstruct TreeArray{\n\tint tree[800001];\n\tvoid add(int x,int n,int y){\n\t\tfor(int i=x;i<=n;i+=i&-i) tree[i]+=y;\n\t}\n\tint ask(int x){\n\t\tint res=0;\n\t\tfor(int i=x;i>=1;i-=i&-i) res+=tree[i];\n\t\treturn res;\n\t}\n}t2;//\u7ef4\u62a4\u6811\u4e0a\u5dee\u5206\uff0c\u8bb0\u5f55\u8def\u5f84\u6761\u6570\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tG[x].push_back(y);\n\t\tG[y].push_back(x);\n\t}\n\tget(1,0);\n\tt1.build(1,1,n);\n\twhile(m--){\n\t\tint pos;\n\t\tscanf(\"%d\",&pos);\n\t\tif(pos==1){\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tint z=lca(x,y);\n\t\t\tt2.add(ls[x],n,1);\n\t\t\tt2.add(ls[y],n,1);\n\t\t\tt2.add(ls[z],n,-1);\n\t\t\ts.insert(make_pair(-dep[z],z));\n\t\t\tcnt[z]++;\n\t\t\tif(cnt[z]==1) t1.updata(1,1,n,ls[z],z,1);\n\t\t}\n\t\telse if(pos==2){\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tint z=lca(x,y);\n\t\t\tt2.add(ls[x],n,-1);\n\t\t\tt2.add(ls[y],n,-1);\n\t\t\tt2.add(ls[z],n,1);\n\t\t\ts.erase(s.lower_bound(make_pair(-dep[z],z)));\n\t\t\tcnt[z]--;\n\t\t\tif(cnt[z]==0) t1.updata(1,1,n,ls[z],z,0);\n\t\t}\n\t\telse{//\u6240\u6709\u8def\u5f84\u4e00\u5b9a\u8981\u4e48\u7a7f\u8fc7\u5b83\uff0c\u8981\u4e48\u5728\u5b83\u7684\u5b50\u6811\u5185\n\t\t\tint d;\n\t\t\tscanf(\"%d\",&d);\n\t\t\tint x=find((*s.begin()).second,d),y=find(x,d);\n\t\t\tif(t2.ask(rs[y])-t2.ask(ls[y]-1)!=s.size()){//\u4e0d\u662f\u6240\u6709\u8def\u5f84\u4e0e\u5b83\u7684\u5b50\u6811\u6709\u4ea4\u96c6\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tspot res=t1.query(1,1,n,ls[y],rs[y]);//\u533a\u95f4\u6700\u957f\u94fe(\u5b50\u6811\u76f4\u5f84)\n\t\t\tif(dist(res.x,x)<=d&&dist(res.y,x)<=d) printf(\"Yes\\n\");\n\t\t\telse printf(\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1661867160,
        "uid": 673294,
        "name": "zyxawa",
        "ccfLevel": 6,
        "title": "CF1464F My Beautiful Madness \u9898\u89e3"
    },
    {
        "content": "\u6765\u81ea https://codeforces.com/blog/entry/85792?#comment-735683\n\n\u9996\u5148\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u628a\u95ee\u9898\u53d8\u6210\u53ea\u6709\u63d2\u5165\uff0c\u6216\u8005\u7528\u4e00\u4e2a\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\u7ef4\u62a4\u4e0b\u9762\u7684\u4fe1\u606f\uff0c\u6bcf\u6b21\u5220\u9664 / \u6dfb\u52a0\u4e00\u4e2a\u53f6\u5b50\u7684\u4fe1\u606f\u3002\n\n\u8fd9\u4e2a\u4fe1\u606f\u662f\u4ec0\u4e48\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u7c7b\u6bd4\u6811\u4e0a\u70b9\u7684\u76f4\u5f84\uff0c\u6211\u4eec\u8ba4\u4e3a**\u8def\u5f84\u96c6\u7684\u4e2d\u70b9**\u662f\u4e00\u4e2a\u70b9\uff08\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u662f\u67d0\u4e2a\u8fb9\u7684\u4e2d\u70b9\uff09\uff08\u6216\u70b9\u96c6\uff0c\u82e5\u6240\u6709\u8def\u5f84\u6709\u4ea4\uff0c\u90a3\u4e48\u4e2d\u70b9\u5c31\u662f\u8fd9\u4e2a\u4ea4\uff09\uff0c\u5230\u6240\u6709\u8def\u5f84\u7684\u8ddd\u79bb\u6700\u5927\u503c\u6700\u5c0f\uff0c\u800c**\u8def\u5f84\u96c6\u7684\u76f4\u5f84**\u662f\u8fd9\u4e2a\u6700\u5c0f\u7684\u6700\u5927\u8ddd\u79bb\u3002\u90a3\u4e48\uff0c\u4efb\u610f\u4e00\u4e2a\u70b9\u5230\u6240\u6709\u8def\u5f84\u7684\u6700\u5927\u8ddd\u79bb\uff0c\u5c31\u662f\u8def\u5f84\u96c6\u7684\u76f4\u5f84\u52a0\u4e0a\u5b83\u5230\u6700\u8fd1\u7684\u8def\u5f84\u96c6\u7684\u4e2d\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u56e0\u6b64\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u8def\u5f84\u96c6\u7684\u4e2d\u70b9\u4e0e\u76f4\u5f84\u957f\u5ea6\u5373\u53ef\uff0c\u8be2\u95ee\u5c31\u662f\u95ee\u662f\u5426\u6709\u76f4\u5f84\u957f\u5ea6 $\\le 2d$\u3002\u5982\u4f55\u7ef4\u62a4\uff1f\n\n- \u82e5\u52a0\u5165\u7684\u8def\u5f84\u4e0e\u5f53\u524d\u7684\u4e2d\u70b9\u6709\u4ea4\uff0c\u628a\u4e2d\u70b9\u6539\u4e3a\u8fd9\u4e2a\u4ea4\u3002\n- \u5426\u5219\uff0c\u9002\u5f53\u5f80\u65b0\u8def\u5f84\u7684\u65b9\u5411\u79fb\u52a8\u4e2d\u70b9\uff0c\u4f7f\u5f97\u76f4\u5f84\u957f\u5ea6\u7b49\u4e8e\u5230\u65b0\u8def\u5f84\u7684\u8ddd\u79bb\u3002\n\n\u4e0b\u9762\u662f\u4e00\u4efd\u4e0a\u9762 comment \u91cc\u9762\u7684 implemention\uff0c\u6709\u4e00\u4e9b\u5de7\u5999\u7684\u5730\u65b9\uff08\u8868\u793a\u76f4\u5f84\u7684\u65b9\u6cd5\u4e0a\uff09\uff0c\u6211\u52a0\u4e86\u6ce8\u91ca\u3002\u4ee5\u4e0b\uff0c\u8ba4\u4e3a\u201c\u76f4\u5f84\u8def\u5f84\u201d\u662f\u5230\u76f4\u5f84\u6700\u8fdc\u7684\u4e24\u4e2a\u8def\u5f84\u5230\u76f4\u5f84\u6700\u8fd1\u7684\u70b9\u7ec4\u6210\u7684\u8def\u5f84\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/83hl09uk.png)\n\n\u56fe\u4e2d\u7684\u6807\u6ce8\u4e0e\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\u540d\u610f\u4e49\u5b8c\u5168\u76f8\u540c\u3002\n\n```cpp\n\tusing path_t = pair<int, int>;\n\tusing diam_t = pair<int, path_t>;\n\tdiam_t NO_DIAM{int(1e9), path_t{-1, -1}};\n\t//\u76f4\u5f84\u662f (len,(x,y)) \u8868\u793a\u76f4\u5f84\u7684\u957f\u5ea6\u4e3a len/2\n\t//\u82e5\u6240\u6709\u8def\u5f84\u6709\u4ea4 d=0\uff0c(x,y) \u5c31\u662f\u4ea4\u51fa\u6765\u7684\u8def\u5f84\n\t//\u5426\u5219 d \u662f\u76f4\u5f84\u957f\u5ea6\uff0c(x,y) \u5c31\u662f\u4e00\u6761\u76f4\u5f84\u8def\u5f84\n \n\tauto lca = [&](int a, int b) {\n\t\treturn lcaer.lca(a, b);\n\t};\n \n\tauto dist = [&](int a, int b) {\n\t\treturn depth[a] + depth[b] - 2 * depth[lca(a,b)];\n\t};\n \n\tauto closest_pt = [&](int a, path_t p) {\n\t\tint c = lca(p.first, p.second);\n\t\tint x = lca(a, p.first);\n\t\tint y = lca(a, p.second);\n\t\treturn max({c,x,y}, [&](int a, int b) { return depth[a] < depth[b]; });\n\t};\n \n\tauto build_diam = [&](int a, int b) -> diam_t {\n\t\treturn {dist(a,b), {a,b}};\n\t};\n \n\tauto update_diam = [&](diam_t d, path_t a) -> diam_t {\n\t\tif (d == NO_DIAM) return {0, a};\n\t\tint x = closest_pt(d.second.first, a);\n\t\tint y = closest_pt(d.second.second, a);\n\t\tif (x != y) {\n\t\t\tif (d.first == 0) {//\u4e4b\u524d\u6240\u6709\u8def\u5f84\u6709\u4ea4\uff0c\u4e4b\u524d\u7684\u4ea4\u5230\u65b0\u8def\u5f84\u7684\u6700\u8fd1\u70b9\u4e0d\u540c\uff0c\u8bf4\u660e\u4ecd\u6709\u4ea4\uff0c\u4ea4\u5c31\u662f\u65b0\u6700\u8fd1\u70b9\uff08\u56fe 1\uff09\n\t\t\t\treturn {0, {x, y}};\n\t\t\t} else {\n            //\u4e4b\u524d\u6240\u6709\u8def\u5f84\u65e0\u4ea4\uff0c\u4e00\u6761\u76f4\u5f84\u5230\u65b0\u8def\u5f84\u6700\u8fd1\u70b9\u4e0d\u540c\uff0c\u90a3\u4e00\u5b9a\u4e0d\u53ef\u80fd\u51fa\u73b0\u4f7f\u76f4\u5f84\u53d8\u5316\u7684\u60c5\u51b5\uff0c\n            //\u65b0\u8def\u5f84\u4e00\u5b9a\u7ecf\u8fc7\u4e86\u76f4\u5f84\u8def\u5f84\uff0c\u76f4\u5f84\u4e0d\u53d8\uff08\u56fe 2\uff09\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t\tassert(x == y);\n\t\tif (d.first == 0) {\n            //\u4e4b\u524d\u6240\u6709\u8def\u5f84\u6709\u4ea4\uff0c\u4e4b\u524d\u7684\u4ea4\u5230\u65b0\u8def\u5f84\u7684\u6700\u8fd1\u70b9\u76f8\u540c\uff0c\u8bf4\u660e\u6ca1\u6709\u4ea4\u4e86\uff0c\u65b0\u76f4\u5f84\u8def\u5f84\u662f\u76f4\u5f84\u8def\u5f84\u5230\u65b0\u8def\u5f84\u7684\u8ddd\u79bb\uff08\u56fe 3\uff09\n\t\t\tint z = closest_pt(x, d.second);\n\t\t\treturn build_diam(x, z);\n\t\t} else {\n            //\u4e4b\u524d\u6240\u6709\u8def\u5f84\u65e0\u4ea4\uff0c\u76f4\u5f84\u8def\u5f84\u5230\u65b0\u8def\u5f84\u7684\u6700\u8fd1\u70b9\u76f8\u540c\uff0c\u65b0\u76f4\u5f84\u957f\u5ea6\u662f\u4ee5\u4e0b\u4e09\u8005\u7684\u8f83\u5927\u503c\uff08\u56fe 4\uff09\n\t\t\treturn max({d, build_diam(d.second.first, x), build_diam(d.second.second, x)});\n\t\t}\n\t};\n```",
        "postTime": 1635423067,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1464F\u3010My Beautiful Madness\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\uff08\uff1f\uff09\u590d\u6742\u6570\u636e\u7ed3\u6784\u9898\u3002\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ef4\u62a4\u4e00\u4e2a\u6811\u4e0a\u8def\u5f84\u7684 $\\text{multiset}$\u3002\u652f\u6301\u8be2\u95ee\u6240\u6709\u8def\u5f84\u7684 $d$ \u90bb\u57df\u662f\u5426\u6709\u4ea4\u96c6\u3002\n\n\u4e00\u6761\u8def\u5f84\u7684 $d$ \u90bb\u57df\u5b9a\u4e49\u4e3a\u6811\u4e0a\u6240\u6709\u8ddd\u79bb\u5176\u5c0f\u4e8e\u7b49\u4e8e $d$ \u7684\u70b9\u96c6\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u80fd\u4e0d\u80fd\u627e\u5230\u4e00\u4e2a\u70b9\u4f7f\u5f97\u53ea\u8981\u5224\u65ad\u5b83\u662f\u5426\u5728\u4ea4\u96c6\u91cc\u5934\u5373\u53ef\u3002\n\n\u8003\u8651\u6240\u6709\u8def\u5f84 $lca$ \u7684\u6df1\u5ea6\u3002\u53d6\u6700\u6df1\u7684\u70b9\u7684 $d$ \u7ea7\u7956\u5148 $x$ \u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u70b9\u3002\n\n\u8003\u8651 $x$ \u5b50\u6811\u5185\u7684\u8def\u5f84\u4e00\u5b9a\u662f\u7b26\u5408\u7684\uff08\u6df1\u5ea6\u6700\u5927\uff09\uff0c\u6b64\u65f6\u8d8a\u5f80\u4e0a\uff0c\u5176\u4ed6\u4e0d\u7b26\u5408\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5c0f\u3002\u6240\u4ee5 $x$ \u5c31\u662f\u8981\u627e\u7684\u70b9\u3002\n\n\u7136\u540e\u6211\u4eec\u627e\u5230 $x$ \u7684 $d$ \u7ea7\u7956\u5148 $y$\u3002\u4e8e\u662f\u6240\u6709\u8def\u5f84\u4e00\u5b9a\u8981\u4e48\u7a7f\u8fc7 $y$\uff0c\u8981\u4e48\u5728 $y$ \u7684\u5b50\u6811\u5185\u3002\n\n\u5728\u5b50\u6811\u5185\u7684\u8bdd\u6211\u4eec\u5c31\u9700\u8981\u67e5\u8be2\u6240\u6709 $lca$ \u5230 $u$ \u7684\u6700\u957f\u8ddd\u79bb\u3002\u8fd9\u662f\u4e2a\u7ecf\u5178\u7684\u533a\u95f4\u76f4\u5f84\u95ee\u9898\u3002\n\n\u4e8e\u662f\u677f\u5b50\u62c9\u62c9\u5c31\u5199\u5b8c\u4e86\u3002\n\n\u8fd9\u4e2a\u9898\u53d6\u6df1\u5ea6\u6700\u5927\u70b9\u7684\u601d\u60f3\u8fd8\u662f\u5f88\u597d\u7684\u3002\n\nSubmission : http://codeforces.com/contest/1464/submission/102506126\n\n",
        "postTime": 1609115979,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1464F \u3010My Beautiful Madness\u3011"
    },
    {
        "content": "\u9ad8\u8d28\u91cf\u597d\u9898 \u8c03\u4e862\u5929\u7ec8\u4e8e\u8fc7\u53bb\u4e86\n\n~~\u867d\u7136\u5728cf\u4e0a\u6ca1\u62a2\u5230\u4e00\u8840 \u4f46\u662f\u60ca\u9669\u5730\u62a2\u5230\u4e86\u524d\u5341AC~~\n\n## \u9898\u610f:\n\n\u7ed9\u4f60\u4e00\u68f5\u6811 \u8ba9\u4f60\u7ef4\u62a4\u4e00\u4e2a multiset \u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c:\n\n1. \u52a0\u5165\u4e00\u6761$(u,v)$\u7684\u7b80\u5355\u8def\u5f84\n2. \u5220\u9664\u4e00\u6761$(u,v)$\u7684\u7b80\u5355\u8def\u5f84\n3. \u8be2\u95ee multiset \u4e2d\u6240\u6709\u7684\u8def\u5f84\u7684 $d$-neighborhoods\u7684\u4ea4\u96c6\u662f\u5426\u4e3a\u7a7a\u96c6\n\n\u4e00\u6761\u8def\u5f84\u7684 $d$-neighborhoods \u662f\u6240\u6709\u8ddd\u79bb\u8fd9\u6761\u8def\u5f84\u5c0f\u4e8e\u7b49\u4e8e$d$\u7684\u70b9\u7684\u96c6\u5408\n\n\u4e00\u4e2a\u70b9\u5230\u4e00\u6761\u8def\u5f84\u7684\u8ddd\u79bb \u662f \u8fd9\u4e2a\u70b9\u5230\u8def\u5f84\u4e0a\u4efb\u610f\u4e00\u70b9\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\n\n## solution\n\n\u8003\u8651\u5982\u4f55\u5904\u7406\u4e00\u4e2a\u8be2\u95ee\n\n\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u76f4\u63a5\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9 \u6c42\u51fa\u8fd9\u4e2a\u70b9\u8ddd\u79bb multiset \u5185\u7684\u8def\u5f84\u7684\u6700\u5927\u503c\n\n\u8003\u8651\u5982\u4f55\u9009\u53d6\u8fd9\u4e2a\u70b9 \u6211\u4eec\u770b\u4e00\u773c\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wrqnxfd9.png)\n\n\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u7684 multiset \u4e2d\u7684\u5143\u7d20\u5206\u522b\u662f: $(1,6),(1,8),(5,10),(10,10)$\n\n\u4e0d\u96be\u53d1\u73b0\u4e8b\u5b9e\u4e0a\u5236\u7ea6\u4ea4\u96c6\u7684\u8def\u5f84\u4e3b\u8981\u662f$(10,10)$ \u8fd9\u6761\u8def\u5f84 \u8fd9\u63d0\u793a\u6211\u4eec\u8003\u8651 lca \u6700\u6df1\u7684\u8def\u5f84\u7684\u5f71\u54cd\n\n\u90a3\u4e48\u6211\u4eec\u9009\u53d6\u7684\u70b9\u5c31\u5f88\u597d\u51b3\u5b9a\u4e86 \u9009\u53d6\u7684\u662f\u8fd9\u6761\u8def\u5f84\u7684 lca \u7684 $d$ \u7ea7\u7956\u5148 \u8bbe\u4e3a$u$ \u539f\u56e0\u7684\u8bdd\u8003\u8651\u5176\u4ed6\u8def\u5f84 \u7531\u4e8e\u8def\u5f84\u7684 lca \u7684\u6df1\u5ea6\u5747\u5c0f\u4e8e\u8fd9\u6761\u8def\u5f84 \u90a3\u4e48\u53ea\u6709\u4e24\u79cd\u60c5\u51b5:\n\n1. lca \u8ddd\u79bb $u$ \u5c0f\u4e8e\u7b49\u4e8e $d$\n2. lca \u8ddd\u79bb $u$ \u5927\u4e8e $d$ \u4f46\u662f \u9664\u4e86 lca \u5916\u7684\u67d0\u4e2a\u70b9\u8ddd\u79bb $u$ \u5c0f\u4e8e\u7b49\u4e8e $d$\n\n\u4e8b\u5b9e\u4e0a\u6211\u4eec\u518d\u6c42\u51fa $u$ \u7684 $d$ \u7ea7\u7956\u5148 \u8bbe\u4e3a $v$ \u5047\u8bbe\u67d0\u6761\u8def\u5f84\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5 \u90a3\u4e48\u4ed6\u5fc5\u7136\u7a7f\u8fc7 $v$ \u8fd9\u4e2a\u4e0d\u96be\u8bc1\u660e\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5224\u65ad $v$ \u7684\u5b50\u6811\u5185\u7aef\u70b9\u5206\u5c5e\u7684\u8def\u5f84\u7684\u6761\u6570 \u6765\u6392\u9664\u7b2c\u4e8c\u79cd\u60c5\u51b5 \u5177\u4f53\u5730\u6211\u4eec\u53ef\u4ee5\u6811\u4e0a\u5dee\u5206 \u5373:\n\n> \u5bf9\u4e8e\u4e00\u6761\u8def\u5f84(u,v) \u6211\u4eeca[u]++,a[v]++,a[lca(u,v)]-- \u90a3\u4e48\u67e5\u8be2\u5b50\u6811\u548c\u5c31\u53ef\u4ee5\u77e5\u9053\u8def\u5f84\u6761\u6570\u4e86\n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u6240\u6709\u5728 $v$ \u5b50\u6811\u5185\u7684 lca \u8ddd\u79bb $u$ \u7684\u6700\u5927\u503c\n\n\u8003\u8651\u5982\u4f55\u5224\u65ad \u6211\u4eec\u53ea\u9700\u8981\u52a8\u6001\u7ef4\u62a4\u5b50\u6811\u5185\u6709 multiset \u4e2d\u7684 lca \u6240\u6784\u6210\u7684\u76f4\u5f84\u5c31\u53ef\u4ee5\u4e86\n\n\u6240\u4ee5\u628a\u8be2\u95ee\u8f6c\u6362\u6210\u4e86\u4e09\u4e2a\u51e0\u4e4e\u6a21\u677f\u7684\u4e1c\u897f:\n\n1. \u6811\u4e0a$k$\u7ea7\u7956\u5148\n2. \u6811\u4e0a\u5dee\u5206+\u5b50\u6811\u6c42\u548c\n3. \u52a8\u6001\u76f4\u5f84\n\n\u9884\u5904\u7406\u590d\u6742\u5ea6$O(n\\log n)$ \u6bcf\u6b21\u8be2\u95ee\u590d\u6742\u5ea6 $O(\\log n)$\n\n\u6700\u540e\u7684\u603b\u590d\u6742\u5ea6$O(n\\log n)$\n\n~~\u597d\u50cfstd\u7528\u4e86\u6811\u5256 \u6211\u597d\u50cf\u6bd4\u4ed6\u5c11\u4e00\u652flog\u8bf6~~\n\n\u6700\u540e\u7ed9\u51fa\u6211\u7684\u5b9e\u73b0:\n\n```cpp\n#pragma comment(linker,\"/stack:200000000\")\n#pragma GCC optimize(\"Ofast,no-stack-protector\")\n#pragma GCC optimize(2)\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#include <bits/stdc++.h>\n#define N 200005\n#define int long long\nusing namespace std;\n\ntemplate <typename T>\n\nvoid read(T &a)\n{\n\tT x = 0,f = 1;\n\tregister char ch = getchar();\n\twhile (ch < '0' || ch > '9')\n\t{\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\ta = x * f;\n}\n\ntemplate <typename T>\n\nvoid write(T x)\n{\n\tif (x < 0) putchar('-'),x = -x;\n\tif (x < 10) return (void) putchar(x + '0');\n\twrite(x / 10);\n\tputchar(x % 10 + '0');\n}\n\ntemplate <typename T>\n\nvoid writeln(T x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n\ntemplate <typename T>\n\nvoid writes(T x)\n{\n\twrite(x);\n\tputchar(' ');\n}\n\ntemplate <typename T,typename... Args> \n\nvoid read(T &t,Args &... args)\n{\n\tread(t);\n\tread(args...);\n}\n\ntemplate <typename T,typename... Args>\n\nvoid writes(T t,Args ... args)\n{\n\twrites(t);\n\twrites(args...);\n}\n\ntemplate <typename T,typename... Args>\n\nvoid writeln(T t,Args ... args)\n{\n\twrites(t);\n\twrites(args...);\n\tputchar('\\n');\n}\n\nint n,m,t,head[N],pnt[N << 1],nxt[N << 1],E = 0;\nint siz[N],dep[N],son[N],fa[N],p[N],top[N],dfn[N],rnk[N],cnt = 0;\nstd::vector<int> ou;\nmultiset<pair<int,int>,greater<pair<int,int> > > s;\n\nint checkmax(int x,int y)\n{\n\treturn dep[x] < dep[y] ? x : y;\n}\n\nstruct ST\n{\n\tint st[N << 1][21],LOG[N << 1];\n\tvoid build()\n\t{\n\t\tLOG[0] = -1;\n\t\tfor (int i = 1; i < ou.size(); i++)\n\t\t\tLOG[i] = LOG[i >> 1] + 1;\n\t\tfor (int i = 1; i < ou.size(); i++)\n\t\t\tst[i][0] = ou[i];\n\t\tfor (int j = 1; j <= 20; j++)\n\t\t\tfor (int i = 1; i + (1 << j) - 1 < ou.size(); i++)\n\t\t\t\tst[i][j] = checkmax(st[i][j - 1],st[i + (1 << (j - 1))][j - 1]);\n\t}\n\tint query(int l,int r)\n\t{\n\t\tint k = LOG[r - l + 1];\n\t\treturn checkmax(st[l][k],st[r - (1 << k) + 1][k]);\n\t}\n}st;\n\nvoid add_edge(int u,int v)\n{\n\tpnt[E] = v;\n\tnxt[E] = head[u];\n\thead[u] = E++;\n}\n\nvoid dfs1(int u,int f)\n{\n\tdep[u] = dep[f] + 1;\n\tfa[u] = f;\n\tsiz[u] = 1;\n\tson[u] = -1;\n\tfor (int i = head[u]; i != -1; i = nxt[i])\n\t{\n\t\tint v = pnt[i];\n\t\tif (v == f) continue;\n\t\tdfs1(v,u);\n\t\tsiz[u] += siz[v];\n\t\tif (son[u] == -1 || siz[son[u]] < siz[v]) son[u] = v;\n\t}\n}\n\nvoid dfs2(int u,int tp)\n{\n\tp[u] = ou.size();\n\tou.push_back(u);\n\ttop[u] = tp;\n\tdfn[u] = ++cnt;\n\trnk[cnt] = u;\n\tif (son[u] == -1) return ;\n\tdfs2(son[u],tp);\n\tou.push_back(u);\n\tfor (int i = head[u]; i != -1; i = nxt[i])\n\t{\n\t\tint v = pnt[i];\n\t\tif (v == son[u] || v == fa[u]) continue;\n\t\tdfs2(v,v);\n\t\tou.push_back(u);\n\t}\n}\n\nint LCA(int x,int y)\n{\n\tif (p[x] > p[y]) swap(x,y);\n\treturn st.query(p[x],p[y]);\n}\n\nint getdis(int x,int y)\n{\n\treturn dep[x] + dep[y] - 2 * dep[LCA(x,y)];\n}\n\nstruct path\n{\n\tint u,v;\n};\n\npath max(path x,path y)\n{\n\tif (x.u == -1) return y;\n\tif (y.u == -1) return x;\n\treturn getdis(x.u,x.v) < getdis(y.u,y.v) ? y : x;\n}\n\npath operator+(path x,path y)\n{\n\tpath res = (path) {-1,-1};\n\tif (x.u == -1) return y;\n\tif (y.u == -1) return x;\n\tres = max(x,y);\n\tres = max(res,(path) {x.u,y.v});\n\tres = max(res,(path) {x.v,y.u});\n\tres = max(res,(path) {x.u,y.u});\n\tres = max(res,(path) {x.v,y.v});\n\treturn res;\n}\n\nstruct Segment_Tree\n{\n\tint sum[N << 2];\n\tvoid pushup(int now)\n\t{\n\t\tsum[now] = sum[now << 1] + sum[now << 1 | 1];\n\t}\n\tvoid update(int now,int l,int r,int x,int k)\n\t{\n\t\tif (l == r)\n\t\t{\n\t\t\tsum[now] += k;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (x <= mid) update(now << 1,l,mid,x,k);\n\t\tif (x > mid) update(now << 1 | 1,mid + 1,r,x,k);\n\t\tpushup(now);\n\t}\n\tint query(int now,int l,int r,int ll,int rr)\n\t{\n\t\tif (ll <= l && rr >= r) return sum[now];\n\t\tint mid = (l + r) >> 1,ans = 0;\n\t\tif (ll <= mid) ans += query(now << 1,l,mid,ll,rr);\n\t\tif (rr > mid) ans += query(now << 1 | 1,mid + 1,r,ll,rr);\n\t\treturn ans;\n\t}\n}T;\n\nstruct Segment_Tree2\n{\n\tint sum[N << 2],maxx[N << 2];\n\tpath tr[N << 2];\n\tvoid pushup(int now)\n\t{\n\t\tmaxx[now] = max(maxx[now << 1],maxx[now << 1 | 1]);\n\t\ttr[now] = tr[now << 1] + tr[now << 1 | 1];\n\t}\n\tvoid build(int now,int l,int r)\n\t{\n\t\tmaxx[now] = -1;\n\t\ttr[now] = (path) {-1,-1};\n\t\tif (l == r) return ;\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(now << 1,l,mid);\n\t\tbuild(now << 1 | 1,mid + 1,r);\n\t}\n\tvoid update(int now,int l,int r,int x,int k)\n\t{\n\t\tif (l == r)\n\t\t{\n\t\t\tsum[now] += k;\n\t\t\tif (sum[now]) maxx[now] = dep[rnk[l]];\n\t\t\telse maxx[now] = -1;\n\t\t\tif (sum[now]) tr[now] = (path) {rnk[l],rnk[l]};\n\t\t\telse tr[now] = (path) {-1,-1};\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (x <= mid) update(now << 1,l,mid,x,k);\n\t\tif (x > mid) update(now << 1 | 1,mid + 1,r,x,k);\n\t\tpushup(now);\n\t}\n\tint querymax(int now,int l,int r,int ll,int rr)\n\t{\n\t\tif (ll > rr) return -1;\n\t\tif (ll <= l && rr >= r) return maxx[now];\n\t\tint mid = (l + r) >> 1,ans = -1;\n\t\tif (ll <= mid) ans = max(ans,querymax(now << 1,l,mid,ll,rr));\n\t\tif (rr > mid) ans = max(ans,querymax(now << 1 | 1,mid + 1,r,ll,rr));\n\t\treturn ans;\n\t}\n\tpath querypath(int now,int l,int r,int ll,int rr)\n\t{\n\t\tif (ll > rr) return (path) {-1,-1};\n\t\tif (ll <= l && rr >= r) return tr[now];\n\t\tint mid = (l + r) >> 1;\n\t\tpath ans = (path) {-1,-1};\n\t\tif (ll <= mid) ans = ans + querypath(now << 1,l,mid,ll,rr);\n\t\tif (rr > mid) ans = ans + querypath(now << 1 | 1,mid + 1,r,ll,rr);\n\t\treturn ans;\n\t}\n}T2;\n\nint query(int x,int k)\n{\n\tif (!k) return x;\n\twhile (dfn[x] - dfn[top[x]] < k && top[x] != 1)\n\t{\n\t\tk -= dfn[x] - dfn[top[x]] + 1;\n\t\tx = fa[top[x]];\n\t}\n\treturn rnk[max(dfn[x] - k,1LL)];\n}\n\nint clac(int u,int ac)\n{\n\tpath x = T2.querypath(1,1,n,dfn[ac],dfn[ac] + siz[ac] - 1);\n\tif (x.u == -1) return -1;\n\treturn max(getdis(x.u,u),getdis(x.v,u));\n}\n\nint query(int d)\n{\n\tint u = query(s.begin() -> second,d);\n\tint v = query(u,d);\n\tif (T.query(1,1,n,dfn[v],dfn[v] + siz[v] - 1) != s.size()) return 0;\n\tif (clac(u,v) > d) return 0;\n\tint qaq = T2.querymax(1,1,n,dfn[u],dfn[u] + siz[u] - 1);\n\tif (qaq - dep[u] > d) return 0;\n\treturn 1;\n}\n\nsigned main()\n{\n\tmemset(head,-1,sizeof(head));\n\tread(n,m);\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tint u,v;\n\t\tread(u,v);\n\t\tadd_edge(u,v);\n\t\tadd_edge(v,u);\n\t}\n\tou.push_back(0);\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tst.build();\n\tT2.build(1,1,n);\n\tfor (t = 1; t <= m; t++)\n\t{\n\t\tint opt;\n\t\tread(opt);\n\t\tif (opt == 1)\n\t\t{\n\t\t\tint x,y;\n\t\t\tread(x,y);\n\t\t\tint lca = LCA(x,y);\n\t\t\tT.update(1,1,n,dfn[x],1);\n\t\t\tT.update(1,1,n,dfn[y],1);\n\t\t\tT.update(1,1,n,dfn[lca],-1);\n\t\t\tT2.update(1,1,n,dfn[lca],1);\n\t\t\ts.insert(make_pair(dep[lca],lca));\n\t\t}\n\t\tif (opt == 2)\n\t\t{\n\t\t\tint x,y;\n\t\t\tread(x,y);\n\t\t\tint lca = LCA(x,y);\n\t\t\tT.update(1,1,n,dfn[x],-1);\n\t\t\tT.update(1,1,n,dfn[y],-1);\n\t\t\tT.update(1,1,n,dfn[lca],1);\n\t\t\tT2.update(1,1,n,dfn[lca],-1);\n\t\t\ts.erase(s.find(make_pair(dep[lca],lca)));\n\t\t}\n\t\tif (opt == 3)\n\t\t{\n\t\t\tint d;\n\t\t\tread(d);\n\t\t\tputs(query(d) ? \"Yes\" : \"No\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1608713751,
        "uid": 68030,
        "name": "serverkiller",
        "ccfLevel": 0,
        "title": "CF1464F \u3010My Beautiful Madness\u3011"
    },
    {
        "content": "### Description\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8282\u70b9 $1$ \u5230 $n$ \u6807\u53f7\uff0c$q$ \u4e2a\u64cd\u4f5c\uff0c\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u8def\u5f84**\u53ef\u91cd**\u96c6\u5408 $P$\uff0c\u64cd\u4f5c\u4e00\u5171\u4e09\u79cd\uff1a\n\n1. \u5411 $P$ \u96c6\u5408\u52a0\u5165 $u\\to v$\u3002\n2. \u5728 $P$ \u96c6\u5408\u4e2d\u5220\u6389 $u\\to v$\uff08\u4fdd\u8bc1\u64cd\u4f5c\u4e4b\u524d\u6709\u52a0\u5165\uff0c\u5e76\u4e14**\u53ea\u5220\u4e00\u4e2a**\uff09\u3002\n3. \u67e5\u8be2 $P$ \u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u8def\u5f84\u7684 $d$ \u90bb\u57df\u7684\u4ea4\u96c6\u662f\u5426\u4e3a\u7a7a\u96c6\u3002\u4e00\u6761\u8def\u5f84 $p$ \u7684 $d$ \u90bb\u57df\u5b9a\u4e49\u4e3a\u6240\u6709\u5230 $p$ \u8ddd\u79bb\u4e0d\u8d85\u8fc7 $d$ \u7684\u70b9\u7ec4\u6210\u7684\u70b9\u96c6\u3002\n\n### Solution\n\n\u8003\u8651\u5230\u96be\u4ee5\u6c42\u51fa\u6240\u6709\u8def\u5f84\u7684 $d$ \u90bb\u57df\u4ea4\u96c6\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u96c6\u5408\u5927\u5c0f\u662f $O(n)$ \u7684\uff0c\u8003\u8651\u4e00\u4e2a\u6700\u4f18\u51b3\u7b56\u70b9 $v$ \uff0c\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u5c3d\u91cf\u80fd\u88ab $P$ \u4e2d\u6700\u591a\u7684\u8def\u5f84\u90bb\u57df\u8986\u76d6\u5230\u3002\n\n\u8bbe $low$ \u4e3a $P$ \u7684\u5143\u7d20\u8def\u5f84\u4e2d\u4e24\u4e2a\u7aef\u70b9\u7684 $lca$ \u6df1\u5ea6\u6700\u5927\u7684\u70b9\uff0c$q$ \u4e3a\u8fd9\u6761\u8def\u5f84\uff0c\u4e0b\u8bc1\u53d6 $v=father_{d}(low)$ \uff08\u5373 $low$ \u7684 $d$ \u7ea7\u7956\u5148\uff09\u65f6\u6700\u4f18\u3002\u5373\u9898\u76ee\u539f\u547d\u9898\u6210\u7acb\u5f53\u4e14\u4ec5\u5f53 $v$ \u5728\u8fd9\u4e2a\u90bb\u57df\u4ea4\u96c6\u4e2d\u3002\n\n\u8003\u8651 $p\\in P$\uff0c\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n\u9996\u5148\u5982\u679c $p$ \u6709\u70b9\u7ecf\u8fc7 $v$\uff0c\u90a3\u663e\u7136\u662f\u53ef\u4ee5\u53d6\u7684\u3002\n\n\u82e5 $lca_p\\in subtree(v)$ \uff0c\u5373 $p$ \u8def\u5f84\u7684 $lca$ \u5728 $v$ \u7684\u5b50\u6811\u4e2d\uff0c\u7531 $low$ \u7684\u6df1\u5ea6\u6700\u5927\u7684\u6027\u8d28\uff0c\u663e\u7136\u6709 $dis(v,lca_p)\\le d$\u3002\n\n\u82e5 $lca_p\\notin subtree(v)$\uff0c\u5219 $q$ \u548c $p$ \u5fc5\u7136\u4e0d\u5b58\u5728\u4ea4\u96c6\u4e14 $p$ \u5728 \uff0c\u90a3\u6b64\u65f6\u51b3\u7b56\u70b9\u80af\u5b9a\u5c3d\u91cf\u5f80\u4e0a\u53d6\uff0c\u4f46\u662f\u7531\u4e8e $low$ \u7684\u9650\u5236\uff0c$v$ \u7684\u6df1\u5ea6\u4e0d\u80fd\u5c0f\u4e8e $dep_{low}-d$\uff0c\u90a3 $v$ \u53d6 $low$ \u7684 $d$ \u7ea7\u7956\u5148\u662f\u6700\u4f18\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u51fa $low$\uff08\u5177\u4f53\u53ef\u4ee5\u4f7f\u7528 `set` \u7ef4\u62a4\u96c6\u5408 $P$ \u6240\u6709\u8def\u5f84 $p$ \u7684 $lca$\uff09\uff0c\u7136\u540e\u6c42\u51fa $v=father_d(low)$\uff0c\u5224\u65ad $v$ \u662f\u5426\u5408\u6cd5\u3002\n\n\u7531\u4e8e\u4e0a\u9762\u8bc1\u660e\u4e86 $p\\in P$ \u7684 $p$ \u7ecf\u8fc7 $v$ \u6216\u8005\u5728 $v$ \u7684\u5b50\u6811\u5185\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u5c31\u8003\u8651\u5728 $v$ \u5b50\u6811\u5916\u7684\u6240\u6709\u8def\u5f84\uff0c\u5b83\u4eec\u5230 $v$ \u7684\u8ddd\u79bb\u662f\u5426 $\\le d$\uff0c\u4ecd\u7136\u5206\u7c7b\u8ba8\u8bba\uff0c\u4ee4 $u=father_d(v)=father_{2d}(low)$\uff1a\n\n\u82e5\u6709\u8def\u5f84\u6ca1\u6709\u7ecf\u8fc7 $u$ \u7684\u5b50\u6811\uff1a\u8bf4\u660e\u8fd9\u6761\u8def\u5f84\u5728 $u$ \u7684\u5916\u90e8\uff0c\u90a3\u5c31\u4e0d\u53ef\u80fd\u8ddd\u79bb $v\\le d$\uff0c\u76f4\u63a5\u5224\u6389\u5373\u53ef\u3002\n\n\u82e5\u6240\u6709\u8def\u5f84\u90fd\u7ecf\u8fc7\u4e86\u70b9 $u$ \u7684\u5b50\u6811\uff1a\u90a3\u4e48\u53ea\u9700\u8981\u4efb\u610f\u8def\u5f84\u7684 $lca$ \u5230 $v$ \u7684\u6700\u957f\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $d$ \u5373\u53ef\u3002\u56e0\u4e3a $v$ \u7ecf\u8fc7\u5b50\u6811\u7684\u8def\u5f84\u4e00\u5b9a\u6ee1\u8db3\uff0c\u5e76\u4e14\u5176\u5b83\u7684\u8def\u5f84\u4e00\u5b9a\u662f $lca$ \u5230 $v$ \u7684\u8ddd\u79bb\u6700\u77ed\u3002\u53ef\u4ee5\u753b\u56fe\u7406\u89e3\u3002\n\n\u800c\u8fd9\u4e2a\u6700\u957f\u8ddd\u79bb\u53ef\u4ee5\u7528\u52a8\u6001\u6c42\u5b50\u6811\u76f4\u5f84\u89e3\u51b3\uff0c\u6c42\u51fa\u5b50\u6811\u5185\u4ee5 $lca(p)(p\\in P)$ \u4e3a\u7aef\u70b9\u7684\u6700\u957f\u8def\u5f84 $i\\to j$\uff0c\u7136\u540e\u6700\u957f\u8ddd\u79bb\u5c31\u662f $\\max\\{dis(v,i),dis(v,j)\\}$ \u4e86\u3002\n\n\u5224\u65ad\u662f\u5426\u6240\u6709\u8def\u5f84\u90fd\u7ecf\u8fc7\u4e86\u67d0\u68f5\u5b50\u6811\u53ef\u4ee5\u6811\u4e0a\u5dee\u5206\uff0c\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84 $i\\to j$\uff0c\u5728 $dfn_i,dfn_j$ \u5904 $+1$\uff0c\u5728 $dfn_{lca(i,j)}$ \u5904 $-1$\uff0c\u67e5\u8be2 $u$ \u5b50\u6811\u548c\u5373\u53ef\u77e5\u9053\u6709\u591a\u5c11\u6761\u8def\u5f84\u7ecf\u8fc7\u4e86 $u$ \u7684\u5b50\u6811\u3002\n\n\u7136\u540e\u52a8\u6001\u6c42\u76f4\u5f84\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u3002\u57fa\u4e8e\u4e00\u4e2a\u57fa\u672c\u7ed3\u8bba\uff1a\u4e00\u4e2a\u8fde\u901a\u5757 $A$ \u5408\u5e76\u5230\u53e6\u5916\u4e00\u4e2a\u8fde\u901a\u5757 $B$ \u4e0a\uff0c\u65b0\u7684\u76f4\u5f84\u7aef\u70b9\u5fc5\u7136\u5728 $A$ \u76f4\u5f84\u7aef\u70b9\u3001$B$ \u76f4\u5f84\u7aef\u70b9 $4$ \u4e2a\u4e2d\u53d6 $2$ \u4e2a\uff0c\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u8fde\u7eed\u7684 $dfn$ \u533a\u95f4\u7ef4\u62a4\u533a\u95f4\u76f4\u5f84\u7aef\u70b9\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5f88\u597d\u5199\uff0c\u4e0d\u653e\u4e86\u3002\u4f7f\u7528\u6811\u5256\u6c42 $father_k$\uff0c\u662f $O(n\\log^2 n)$ \u7684\uff0c\u4f46\u662f\u5982\u679c\u6362\u6210\u6b27\u62c9\u5e8f+ `RMQ` \u7684\u8bdd\u53ef\u4ee5\u8fbe\u5230 $O(n\\log n)$\uff0c\u90fd\u633a\u597d\u5199\u7684\u3002\n\n[\u8bc4\u6d4b\u8bb0\u5f55](https://codeforces.com/contest/1464/submission/176884528)\uff0c\u7528\u4e86\u6b27\u4ebf LCA \u5361\u5e38\uff0c\u4f46\u8fd8\u662f\u4e0d\u5982\u6811\u5256\u5feb\u3002",
        "postTime": 1668241852,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF1464F My Beautiful Madness \u9898\u89e3"
    },
    {
        "content": "[CF1464F My Beautiful Madness](https://www.luogu.com.cn/problem/CF1464F)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/xiaoziyao/p/15248925.html)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u8def\u5f84\u7684\u53ef\u91cd\u96c6\u3002\u4e00\u5171\u4f1a\u8fdb\u884c $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u652f\u6301\u52a0\u5165/\u5220\u9664\u4e00\u6761\u8def\u5f84\uff0c\u6216\u8005\u662f\u67e5\u8be2\u53ef\u91cd\u96c6\u5185\u6240\u6709\u8def\u5f84\u7684 $d$ \u90bb\u57df\u662f\u5426\u6709\u4ea4\u3002\n\n$1\\leqslant n\\leqslant 2\\times 10^5,2\\leqslant m\\leqslant 2\\times 10^5$\u3002\n\n## \u5206\u6790\n\n\u6027\u8d28\u9898\u3002\n\n\u76f4\u63a5\u6c42\u4ea4\u4fe1\u606f\u8fc7\u4e8e\u590d\u6742\uff0c\u8003\u8651\u627e\u5230\u4e00\u4e2a\u70b9\u6ee1\u8db3\u5176\u5305\u542b\u5728\u4ea4\u5185\u7684\u6982\u7387\u5fc5\u7136\u6700\u9ad8\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u70b9\u662f\u6240\u6709\u8def\u5f84\u7684 $\\text{lca}$ \u6700\u6df1\u70b9\u7684 $d$ \u7ea7\u7956\u5148\uff08\u8bbe\u5176\u4e3a $p$\uff09\uff0c\u5982\u679c $p$ \u4e0d\u5728\u67d0\u6761\u8def\u5f84\u7684 $d$ \u90bb\u57df\u4e2d\u7684\u8bdd\uff0c\u90a3\u4e48 $\\text{lca}$ \u6700\u6df1\u7684\u8def\u5f84\u7684 $d$ \u90bb\u57df\u4e00\u5b9a\u4e0e\u8fd9\u6761\u8def\u5f84\u65e0\u4ea4\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7528\u4e00\u4e2a $\\text{multiset}$ \u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8003\u8651\u600e\u4e48\u5224\u65ad\u5b83\u662f\u5426\u5728\u4ea4\u4e2d\u3002\n\n\u6211\u4eec\u53d6\u51fa $p$ \u7684 $d$ \u7ea7\u7956\u5148 $q$\uff0c\u90a3\u4e48\u5728 $q$ \u5b50\u6811\u5916\u7684\u8def\u5f84\u4e00\u5b9a\u4e0d\u5305\u542b $p$\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u6811\u4e0a\u5dee\u5206\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5728 $q$ \u5185\u7684\u8def\u5f84\u6700\u9760\u8fd1 $p$ \u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u5b83\u7684 $\\text{lca}$\uff0c\u4e8e\u662f\u6211\u4eec\u7ef4\u62a4\u4e00\u4e0b\u5b50\u6811\u5185\u5f53\u524d\u6240\u6709\u5173\u952e\u70b9\u7684\u76f4\u5f84\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\log n)$\u3002\n\n## \u4ee3\u7801\n\n\u6ce8\u610f\u7ec6\u8282\uff0c\u5b9e\u9645\u4e0a\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u7684\u3002\n\n```cpp\n#include<stdio.h>\n#include<vector>\n#include<set>\n#define lc(x) (x)<<1\n#define rc(x) (x)<<1|1\n#define lowbit(x) x&(-x)\n#define inf 1000000000\nusing namespace std;\nconst int maxn=200005,maxt=maxn<<2,maxk=21;\nint n,m,euls,dfns;\nint st[maxn<<1][maxk],eul[maxn],lg[maxn<<1],dep[maxn],L[maxn],R[maxn],tt[maxn],fore[maxn][maxk],cnt[maxn];\nvector<int>v[maxn];\nmultiset< pair<int,int> >s;\nvoid dfs(int x,int last){\n\teul[x]=++euls,st[euls][0]=x,L[x]=++dfns;\n\tdep[x]=dep[last]+1,fore[x][0]=last;\n\tfor(int i=1;i<=20;i++)\n\t\tfore[x][i]=fore[fore[x][i-1]][i-1];\n\tfor(int i=0;i<v[x].size();i++)\n\t\tif(v[x][i]!=last)\n\t\t\tdfs(v[x][i],x),st[++euls][0]=x;\n\tR[x]=dfns;\n}\ninline int calc(int a,int b){\n\treturn dep[a]<dep[b]? a:b;\n}\ninline int lca(int a,int b){\n\ta=eul[a],b=eul[b];\n\tif(a>b)\n\t\tswap(a,b);\n\tint k=lg[b-a+1];\n\treturn calc(st[a][k],st[b-(1<<k)+1][k]);\n}\ninline int dis(int a,int b){\n\tif(a==-1||b==-1)\n\t\treturn -inf;\n\tint c=lca(a,b);\n\treturn dep[a]+dep[b]-2*dep[c];\n}\nint getkth(int x,int k){\n\tfor(int i=0;i<=20&&x!=1;i++)\n\t\tif((k>>i)&1)\n\t\t\tx=fore[x][i];\n\treturn x;\n}\nvoid tupdate(int x,int v){\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\ttt[i]+=v;\n}\nint tquery(int x){\n\tint res=0;\n\tfor(int i=x;i;i-=lowbit(i))\n\t\tres+=tt[i];\n\treturn res;\n}\nstruct node{\n\tint x,y,len;\n}t[maxt];\nnode merge(node p,node q){\n\tif(p.x==-1)\n\t\treturn q;\n\tif(q.x==-1)\n\t\treturn p;\n\tnode res=p.len>q.len? p:q;\n\tint a=dis(p.x,q.x),b=dis(p.x,q.y),c=dis(p.y,q.x),d=dis(p.y,q.y);\n\tif(a>res.len)\n\t\tres=node{p.x,q.x,a};\n\tif(b>res.len)\n\t\tres=node{p.x,q.y,b};\n\tif(c>res.len)\n\t\tres=node{p.y,q.x,c};\n\tif(d>res.len)\n\t\tres=node{p.y,q.y,d};\n\treturn res;\n}\ninline void pushup(int now){\n\tt[now]=merge(t[lc(now)],t[rc(now)]);\n}\nvoid build(int l,int r,int now){\n\tt[now]=node{-1,-1,-inf};\n\tif(l==r)\n\t\treturn ;\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,lc(now)),build(mid+1,r,rc(now));\n}\nvoid modify(int l,int r,int now,int p,int x,int w){\n\tif(l==r){\n\t\tif(w==1)\n\t\t\tt[now]=node{x,x,0};\n\t\tif(w==0)\n\t\t\tt[now]=node{-1,-1,-inf};\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(p<=mid)\n\t\tmodify(l,mid,lc(now),p,x,w);\n\telse modify(mid+1,r,rc(now),p,x,w);\n\tpushup(now);\n}\nnode query(int l,int r,int now,int L,int R){\n\tif(L<=l&&r<=R)\n\t\treturn t[now];\n\tint mid=(l+r)>>1;\n\tif(L<=mid&&mid<R)\n\t\treturn merge(query(l,mid,lc(now),L,R),query(mid+1,r,rc(now),L,R));\n\tif(L<=mid)\n\t\treturn query(l,mid,lc(now),L,R);\n\treturn query(mid+1,r,rc(now),L,R);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tv[x].push_back(y),v[y].push_back(x);\n\t}\n\tdfs(1,1);\n\tlg[0]=-1;\n\tfor(int i=1;i<=euls;i++)\n\t\tlg[i]=lg[i>>1]+1;\n\tfor(int i=1;i<=20;i++)\n\t\tfor(int j=1;j+(1<<i)-1<=euls;j++)\n\t\t\tst[j][i]=calc(st[j][i-1],st[j+(1<<(i-1))][i-1]);\n\tbuild(1,n,1);\n\twhile(m--){\n\t\tint t,x,y,z;\n\t\tscanf(\"%d%d\",&t,&x);\n\t\tif(t==1){\n\t\t\tscanf(\"%d\",&y),z=lca(x,y);\n\t\t\ttupdate(L[x],1),tupdate(L[y],1),tupdate(L[z],-1);\n\t\t\ts.insert(make_pair(dep[z],z));\n\t\t\tif(cnt[z]==0)\n\t\t\t\tmodify(1,n,1,L[z],z,1);\n\t\t\tcnt[z]++;\n\t\t}\n\t\tif(t==2){\n\t\t\tscanf(\"%d\",&y),z=lca(x,y);\n\t\t\ttupdate(L[x],-1),tupdate(L[y],-1),tupdate(L[z],1);\n\t\t\ts.erase(s.lower_bound(make_pair(dep[z],z)));\n\t\t\tcnt[z]--;\n\t\t\tif(cnt[z]==0)\n\t\t\t\tmodify(1,n,1,L[z],z,0);\n\t\t}\n\t\tif(t==3){\n\t\t\ty=getkth(s.rbegin()->second,x),z=getkth(y,x);\n\t\t\tif(tquery(R[z])-tquery(L[z]-1)!=s.size()){\n\t\t\t\tputs(\"No\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnode res=query(1,n,1,L[z],R[z]);\n\t\t\tputs((dis(y,res.x)<=x&&dis(y,res.y)<=x)? \"Yes\":\"No\"); \n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1631234533,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1464F\u3010My Beautiful Madness\u3011"
    }
]