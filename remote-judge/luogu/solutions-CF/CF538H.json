[
    {
        "content": "\u4e5f\u5c31\u662f\u8981\u628a\u8001\u5e08\u5206\u6210\u4e24\u7ec4\uff0c\u6ee1\u8db3\u6bcf\u7ec4\u7684 $[l_i, r_i]$ \u7684\u4ea4\u96c6\uff0c\u201c\u76f8\u52a0\u201d\u540e\u4e0e $[t, T]$ \u6709\u4ea4\u3002\n\n\u5982\u679c\u6709\u4e09\u4e2a\u8001\u5e08\u7684 $[l_i, r_i]$ \u4e24\u4e24\u65e0\u4ea4\u96c6\uff0c\u90a3\u4e48\u5c31\u5b8c\u86cb\u4e86\uff0c\u6839\u672c\u6ca1\u6cd5\u5206\u7ec4\u3002\n\n\u5426\u5219\uff0c\u5982\u679c\u6211\u4eec\u8003\u8651\u5176\u4e2d\u4e00\u7ec4\u7684\u4eba\u6570\u4e3a $n_1 = \\min \\{ r_i \\}$\uff0c\u53e6\u4e00\u7ec4\u7684\u4eba\u6570\u4e3a $n_2 = \\max \\{ l_i \\}$\u3002\n\n\u5982\u679c $n_1 \\ge n_2$\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u8001\u5e08\u7684 $[l_i, r_i]$ \u4e24\u4e24\u6709\u4ea4\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6bcf\u4e2a\u8001\u5e08\u90fd\u53ef\u4ee5\u4efb\u610f\u9009\u7ec4\u3002\n\n\u5982\u679c $n_1 < n_2$\uff0c\u90a3\u4e48\u8fd9\u4e5f\u662f\u6700\u201c\u677e\u201d\u7684\u4e00\u79cd\u65b9\u6848\u4e86\uff0c\u5982\u679c $n_1$ \u589e\u5927\u6216 $n_2$ \u51cf\u5c0f\u90fd\u4f1a\u5bfc\u81f4\u67d0\u4e2a\u8001\u5e08\u65e0\u6cd5\u9009\u7ec4\u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\uff0c\u4e5f\u5c31\u662f\u8bf4 $n_1$ \u53ea\u80fd\u51cf\u5c0f\uff0c$n_2$ \u53ea\u80fd\u589e\u5927\u3002\n\n\u7136\u800c\uff0c\u73b0\u5728 $n_1 + n_2$ \u8fd8\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u5728 $[t, T]$ \u5185\u7684\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u5982\u679c $n_1 + n_2 < t$\uff0c\u5c31\u53ea\u80fd\u589e\u5927 $n_2$\uff1b\u5982\u679c $n_1 + n_2 > T$\uff0c\u5c31\u53ea\u80fd\u51cf\u5c0f $n_1$\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u7b97\u51fa\u6700\u4f18\u7684\u4e00\u4e2a $n_1$ \u548c $n_2$ \u7684\u9009\u53d6\u65b9\u6848\uff0c\u518d\u6839\u636e\u8fd9\u4e2a\u65b9\u6848\u5bf9\u8001\u5e08\u8fdb\u884c\u4e00\u6b21\u4e8c\u5206\u56fe\u67d3\u8272\u5224\u5b9a\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O (n + m)$\uff0c[\u8bc4\u6d4b\u94fe\u63a5](https://codeforces.com/contest/538/submission/72777616)\u3002",
        "postTime": 1583766091,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF538H \u3010Summer Dichotomy\u3011"
    },
    {
        "content": "> [CF538H Summer Dichotomy](https://codeforces.com/contest/538/problem/H)\n\n## \u9898\u610f\n\n- \u6709 $T$ \u540d\u5b66\u751f\uff0c\u4f60\u8981\u4ece\u4e2d\u9009\u51fa\u81f3\u5c11 $t$ \u4eba\uff0c\u5e76\u5c06\u9009\u51fa\u7684\u4eba\u5206\u6210\u4e24\u7ec4\uff0c\u53ef\u4ee5\u6709\u67d0\u4e00\u7ec4\u662f\u7a7a\u7684\u3002\n- \u6709 $n$ \u540d\u8001\u5e08\uff0c\u6bcf\u540d\u8001\u5e08\u8981\u88ab\u5206\u914d\u5230\u4e24\u4e2a\u5c0f\u7ec4\u4e4b\u4e00\uff0c\u5bf9\u4e8e\u7b2c $i$ \u540d\u8001\u5e08\uff0c\u8981\u6c42\u6240\u5728\u7684\u5c0f\u7ec4\u4e2d\u7684\u5b66\u751f\u4eba\u6570 $\\in [l_i, r_i]$\u3002\n- \u6b64\u5916\uff0c\u6709 $m$ \u5bf9\u8001\u5e08\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u5c0f\u7ec4\u4e2d\u3002\n- \u4f60\u9700\u8981\u5224\u65ad\u80fd\u5426\u6ee1\u8db3\u6240\u6709\u8981\u6c42\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8bf7\u7ed9\u51fa\u4e00\u79cd\u65b9\u6848\u3002\n- $t \\le T \\le 10^9$\uff0c$n,m \\le 10^5$\u3002\n\n## \u9898\u89e3\n\n\u5148\u4e0d\u8003\u8651 $t,T$ \u7684\u9650\u5236\uff0c\u53ef\u4ee5\u8bc1\u660e $n_1 = \\min_{i=1}^n r_i$\uff0c$n_2 = \\max_{i=1}^n l_i$ \u662f\u6700\u4f18\u7684\u3002\n\n\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u5c06\u6240\u6709 $[l_i, r_i]$ \u5f53\u4f5c\u4e00\u6761\u6570\u8f74\u4e0a\u7684\u7ebf\u6bb5\uff0c\u90a3\u4e48\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1. \u6709\u4e09\u6761\u7ebf\u6bb5\u4e24\u4e24\u4e0d\u4ea4\uff0c\u5219\u65e0\u89e3\u3002\n2. \u6240\u6709\u7ebf\u6bb5\u4e24\u4e24\u6709\u4ea4\uff0c\u5373\u6709 $n_1 \\ge n_2$\uff0c\u5219\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u8001\u5e08\u90fd\u53ef\u4ee5\u968f\u610f\u7684\u9009\u62e9\u5c0f\u7ec4\u3002\n3. $n_1 < n_2$\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u663e\u7136 $n_1$ \u4e0d\u80fd\u66f4\u5927\uff0c\u800c\u66f4\u5c0f\u5219\u4e0d\u4f18\uff0c$n_2$ \u540c\u7406\u3002\n\n\u56e0\u6b64 $n_1 = \\min_{i=1}^n r_i$\uff0c$n_2 = \\max_{i=1}^n l_i$ \u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u5982\u679c\u8003\u8651 $t,T$ \u7684\u9650\u5236\u5462\uff1f\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5 $n_1 + n_2 < t$\uff0c\u5219\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u589e\u5927 $n_2$ \u662f\u6700\u4f18\u7684\uff1b\u82e5 $n_1 + n_2 > T$\uff0c\u5219\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u51cf\u5c0f $n_1$ \u7684\u6700\u4f18\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u6700\u4f18\u7684 $n_1,n_2$\uff0c\u6700\u540e\u505a\u4e00\u6b21\u4e8c\u5206\u56fe\u67d3\u8272\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n+m)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#define Fail return prints(\"IMPOSSIBLE\"), 0\n\nconst int N = 1e5 + 7;\nint t, T, n, m, l[N], r[N], n1 = 1e9 + 1, n2 = -1, c[N];\nvi e[N];\n\ninline bool pd(int x, int i) {\n\treturn l[i] <= x && x <= r[i];\n}\n\nbool dfs(int x) {\n\tfor (auto y : e[x])\n\t\tif (!c[y]) {\n\t\t\tc[y] = 3 - c[x];\n\t\t\tif (!dfs(y)) return 0;\n\t\t} else if (c[x] == c[y]) return 0;\n\treturn 1;\n}\n\nint main() {\n\trd(t), rd(T), rd(n), rd(m);\n\tfor (int i = 1; i <= n; i++)\n\t\trd(l[i]), rd(r[i]), n1 = min(n1, r[i]), n2 = max(n2, l[i]);\n\tif (n1 + n2 < t) n2 = t - n1;\n\tif (n1 + n2 > T) n1 = T - n2;\n\tif (n1 < 0 || n2 < 0) Fail;\n\tfor (int i = 1; i <= n; i++) {\n\t\tbool o1 = pd(n1, i), o2 = pd(n2, i);\n\t\tif (!o1 && !o2) Fail;\n\t\tif (o1 && !o2) c[i] = 1;\n\t\tif (!o1 && o2) c[i] = 2;\n\t}\n\tfor (int i = 1, x, y; i <= m; i++)\n\t\trd(x), rd(y), e[x].pb(y), e[y].pb(x);\n\tfor (int i = 1; i <= n; i++) if (c[i] && !dfs(i)) Fail;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!c[i]) {\n\t\t\tc[i] = 1;\n\t\t\tif (!dfs(i)) Fail;\n\t\t}\n\tstring ans = \"\";\n\tfor (int i = 1; i <= n; i++) ans += c[i] + '0';\n\tprints(\"POSSIBLE\"), print(n1, ' '), print(n2), prints(ans); \n\treturn 0;\n}\n```",
        "postTime": 1578854235,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF538H \u3010Summer Dichotomy\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u662f\u4e2a\u61a8\u61a8\uff0c\u6211\u4e0d\u4f1a\u5927\u5bb6\u90fd\u4f1a\u7684\u7ebf\u6027\u505a\u6cd5\uff0c\u6211\u53ea\u4f1a\u5927\u66b4\u529b\u7ebf\u6bb5\u6811\uff08\u636e\u8bf4\u5b98\u89e3\u4e5f\u662f\u7ebf\u6bb5\u6811\uff1f\uff01\uff09\u3002\n## Solution\n\n### Part one\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u8001\u5e08\u7684$m$\u4e2a\u654c\u5bf9\u5173\u7cfb\u662f\u4e00\u4e2a\u7ecf\u5178\u76842-SAT,\u82e5\u5b58\u5728\u8fde\u901a\u5757\u6709\u5947\u73af\uff0c\u5219\u65e0\u89e3\u3002\u5426\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u6c42\u51fa\u6240\u6709\u5947\u6570\u6df1\u5ea6\u7684\u70b9\u7684\u533a\u95f4\u4ea4$[l, r]$\u548c\u5076\u6570\u6df1\u5ea6\u7684\u70b9\u7684\u533a\u95f4\u4ea4$[L, R]$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5f53\u524d\u7b2c\u4e00\u7ec4\u53ef\u9009\u7684\u5b66\u751f\u6570\u533a\u95f4$[L_1,R_1]$\u548c\u7b2c\u4e8c\u7ec4\u53ef\u9009\u5b66\u751f\u6570\u533a\u95f4$[L_2, R_2]$\u3002\n\n\u73b0\u5728\u8981\u628a\u5947\u6570\u6df1\u5ea6\u70b9\u548c\u5076\u6570\u6df1\u5ea6\u70b9\u5206\u522b\u5206\u914d\u7ed9\u7b2c\u4e00\u7b2c\u4e8c\u7ec4\uff08\u4e0d\u80fd\u5206\u914d\u5230\u540c\u4e00\u7ec4\uff09\uff0c\u76f8\u5f53\u4e8e\u7b2c\u4e00\u7ec4\u9009\u62e9$[l,r]$\u548c$[L,R]$\u4e2d\u7684\u4e00\u4e2a\u505a\u533a\u95f4\u4ea4\uff0c\u7b2c\u4e8c\u7ec4\u9009\u53e6\u4e00\u4e2a\u505a\u533a\u95f4\u4ea4\u3002\n\n\u6bcf\u4e2a\u8fde\u901a\u5757\u90fd\u7ed9\u4e24\u7ec4\u505a\u5b8c\u533a\u95f4\u4ea4\u4e4b\u540e\uff0c\u8bbe\u7ed9\u5b9a\u7684\u603b\u5b66\u751f\u6570\u533a\u95f4\u4e3a$[T_l, T_r]$\uff0c\u6211\u4eec\u8981\u6c42$[L_1+ L_2, R_1+R_2]\\cap[T_l,T_r]\\not = \\emptyset$\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u51fa\u7b2c\u4e00\u7ec4\u7684\u4eba\u6570$x$\u548c\u7b2c\u4e8c\u7ec4\u7684\u4eba\u6570$y$\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\u901a\u8fc7\u5176\u4e24\u4e2a\u533a\u95f4\u7684\u9650\u5236\u5224\u65ad\u5b83\u5728\u5076\u6570\u6df1\u5ea6\u70b9\u4e3a\u7b2c\u4e00\u7ec4\u8fd8\u662f\u5947\u6570\u6df1\u5ea6\u70b9\u4e3a\u7b2c\u4e00\u7ec4\u53bb\u6784\u9020\u65b9\u6848\u4e86\u3002\n\n### Part two\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\uff1a\u5982\u4f55\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u5408\u7406\u5206\u914d$[l,r]$\u548c$[L,R]$\u4f7f\u5f97\u4e0a\u8ff0\u6761\u4ef6\u6210\u7acb\u3002\n\n\u8fd9\u4e2a\u4f3c\u4e4e\u4e0d\u597d\u76f4\u63a5\u505a\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u7ed3\u70b9$[l,r]$\u8868\u793a\u7b2c\u4e00\u7ec4\u7684\u53ef\u9009\u4eba\u6570\u5728$[l,r]$\u4e4b\u95f4\u65f6\uff0c\u7b2c\u4e8c\u7ec4\u7684\u53ef\u9009\u533a\u95f4\u662f\u4ec0\u4e48\uff0c\u64cd\u4f5c\u662f\u4e00\u4e2a\u533a\u95f4\u5bf9\u53e6\u4e00\u4e2a\u533a\u95f4\u505a\u533a\u95f4\u4ea4\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\u5947\u5076\u6df1\u5ea6\u7684\u533a\u95f4$[l,r]$\u548c$[L,R]$\uff0c\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe$l < L$\u3002\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n- $r < L$\uff0c\u8fd9\u6837\u4e24\u4e2a\u533a\u95f4\u4e0d\u4ea4\uff0c\u56e0\u6b64\u82e5\u6211\u4eec\u9009\u62e9\u7684\u7b2c\u4e00\u7ec4\u7684\u4eba\u6570\u5728$[l,r]$\u5185\uff0c\u7b2c\u4e8c\u7ec4\u53ea\u80fd\u9009\u62e9$[L,R]$\uff0c\u4e8e\u662f\u6211\u4eec\u5728\u7ebf\u6bb5\u6811$[l,r]$\u5185\u6253\u4e0a$[L,R]$\u7684tag\uff0c\u8868\u793a\u5176\u53ea\u80fd\u9009\u62e9$[L,R]$\u4e4b\u95f4\u7684\u4eba\u6570\uff1b\u82e5\u6211\u4eec\u9009\u62e9\u7684\u7b2c\u4e00\u7ec4\u4eba\u6570\u5728$[L,R]$\u4e4b\u95f4\uff0c\u90a3\u4e48\u5728$[L,R]$\u7684\u7ebf\u6bb5\u6811\u7ed3\u70b9\u4e0a\u6253\u4e0a$[l,r]$\u7684tag\uff1b\u6700\u540e\u5728\u5176\u4ed6\u7ed3\u70b9\u4e0a\u6253\u4e0a$[Tr, 0]$\u7684\u8868\u793a\u4e0d\u53ef\u884c\u7684tag\u3002\n- $r < R$\uff0c\u6b64\u65f6\u8fd9\u4e24\u4e2a\u533a\u95f4\u4e2d\u95f4\u6709\u4e00\u6bb5\u533a\u95f4$[L, r]$\u76f8\u4ea4\u4e86\uff0c\u8fd9\u8868\u793a\u4ec0\u4e48\u5462\uff1f\u8fd9\u8868\u793a\u8fd9\u6bb5\u533a\u95f4\u5185\u7684\u70b9\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u5076\u6570\u548c\u6df1\u5ea6\u7684\u70b9\uff0c\u56e0\u6b64\u8fd9\u6bb5\u533a\u95f4\u8981\u6253\u4e0a$[l,R]$\u7684\u6807\u8bb0\uff01\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u8c03\u6362\u4f7f\u5f97\u7b2c\u4e8c\u7ec4\u7684\u4eba\u6570\u5728$[l,R]$\u90fd\u53ef\u884c\uff0c\u5bf9\u4e8e\u5176\u4ed6\u90e8\u5206\u8fd8\u662f\u548c\u4e0a\u9762\u4e00\u6837\u7684\uff0c\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n- $r \\geq R$\uff0c\u6b64\u65f6$[l,r]$\u5305\u542b$[L,R]$\uff0c\u8fd8\u662f\u50cf\u4e0a\u9762\u4e00\u6837\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811+\u6807\u8bb0\u6c38\u4e45\u5316\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5927\u5e38\u6570$O(nlogT_r)$\u3002\n\n### Part three\n\u6700\u540e\u5c31\u662f\u600e\u4e48\u6c42$x,y$\u4e86\uff0c\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u628a\u7ebf\u6bb5\u6811\u7684$tag$\u4e0b\u653e\uff0c\u76f4\u81f3\u5230\u4e00\u4e2a\u6ca1\u6709\u5de6\u53f3\u513f\u5b50\u7684\u7ed3\u70b9\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u6c42\u51fa\u4e86\u4e00\u4e2a\u6709\u7b2c\u4e00\u7ec4\u9009\u62e9\u7684\u4eba\u6570\u5728$[L_1,R_1]$\u4e4b\u95f4\u65f6\uff0c\u7b2c\u4e8c\u7ec4\u4eba\u6570\u5728$[L_2,R_2]$\u5185\u90fd\u53ef\u884c\u7684\u4fe1\u606f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u518d\u901a\u8fc7\u7b80\u5355\u7684\u5206\u7c7b\u8ba8\u8bba\u770b\u770b\u662f\u5426\u5b58\u5728$x\\in[L_1,R_1], y\\in[L_2, R_2]$\u4f7f\u5f97$x+y\\in[T_l, T_r]$\uff0c\u6c42\u51fa$x,y$\u540e\u5c31\u53ef\u4ee5$O(n+m)$\u6784\u9020\u65b9\u6848\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u53c2\u7167\u4ee3\u7801\uff08\u867d\u7136\u611f\u89c9\u5927\u5bb6\u4e5f\u4e0d\u4f1a\u6765\u770b\u8fd9\u4e2a\u53c8\u66b4\u529b\u53c8\u957f\u7684\u505a\u6cd5\u7684\uff09\u3002\n## Code\n\n```cpp\n//\u6b64\u5904\u7701\u756570\u884c\u5feb\u8bfb\u548c\u5934\u6587\u4ef6\n\nvector<int> e[MAXN];\nint dep[MAXN], vis[MAXN], ls[MAXN * 20], rs[MAXN * 20], flag[MAXN], Ans[MAXN], nodenum = 0, Ansx, Ansy, Tl, Tr, n, m;\nPR A[MAXN], B[2], C[MAXN][2], tag[MAXN * 20];\nPR operator & (PR x, PR y) { return MP(max(x.fi, y.fi), min(x.se, y.se)); }\nPR operator | (PR x, PR y) { return MP(min(x.fi, y.fi), max(x.se, y.se)); }\nvoid dfs(int x, int father) { //\u6c42\u51fa[l, r]\u548c[L, R] \n\tvis[x] = 1;\n\tdep[x] = dep[father] + 1;\n\tB[dep[x] & 1] = B[dep[x] & 1] & A[x];\n\tfor (auto v : e[x]) {\n\t\tif (!vis[v]) dfs(v, x);\n\t\telse if ((dep[x] & 1) == (dep[v] & 1)) { cout << \"IMPOSSIBLE\" << endl; exit(0); } \n\t}\n}\nvoid Dfs(int x, int opt) { //\u6784\u9020\u65b9\u6848 \n\tvis[x] = 1;\n\tif ((dep[x] & 1) == opt) Ans[x] = 1;\n\telse Ans[x] = 2;\n\tfor (auto v : e[x]) if (!vis[v]) Dfs(v, opt);\n}\n\nint update(int x, int l, int r, int L, int R, PR y) {\n\tif (!x) tag[x = ++ nodenum] = MP(0, Tr);\n\tif (l >= L && r <= R) { tag[x] = tag[x] & y; return x; }\n\tint mid = (l + r) >> 1;\n\tif (R <= mid) ls[x] = update(ls[x], l, mid, L, R, y);\n\telse if (L > mid) rs[x] = update(rs[x], mid + 1, r, L, R, y);\n\telse ls[x] = update(ls[x], l, mid, L, mid, y), rs[x] = update(rs[x], mid + 1, r, mid + 1, R, y);\n\treturn x;\n}\nvoid check(int l, int r, int L, int R) { // \u627e\u5408\u6cd5\u7684x, y \n\tif (l > r || L > R) return;\n\tif (l + L > Tr) return;\n\tif (l + L >= Tl) { Ansx = l, Ansy = L; return; }\n\tif (Tl - (l + L) > (r - l) + (R - L)) return;\n\tif (Tl - (l + L) > (r - l)) { Ansx = r, Ansy = L + (Tl - (l + L) - (r - l)); return; }\n\tAnsx = l + (Tl - (l + L)), Ansy = L;\n}\nvoid solve(int x, int l, int r, PR y) {  \n\tif (Ansx || Ansy) return;\n\ty = y & tag[x];\n\tif (!ls[x] && !rs[x]) { check(l, r, y.fi, y.se); return; }\n\tint mid = (l + r) >> 1;\n\tif (ls[x]) solve(ls[x], l, mid, y);\n\tif (rs[x]) solve(rs[x], mid + 1, r, y);\n}\nsigned main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"a.in\", \"r\", stdin);\n#endif\n\tread(Tl), read(Tr), read(n), read(m);\n\tfor (int i = 1; i <= n ; ++ i) {\n\t\tread(A[i].fi), read(A[i].se), upmin(A[i].se, Tr);\n\t\tif (A[i].fi > A[i].se) { cout << \"IMPOSSIBLE\" << endl; return 0; }\n\t}\n\tfor (int i = 1, u, v; i <= m ; ++ i) read(u), read(v), e[u].PB(v), e[v].PB(u);\n\ttag[nodenum = 1] = MP(0, Tr);\n\tfor (int i = 1; i <= n ; ++ i)\n\t\tif (!vis[i]) {\n\t\t\tB[0] = B[1] = MP(0, Tr);\n\t\t\tdfs(i, 0);\n\t\t\tflag[i] = 1, C[i][0] = B[0], C[i][1] = B[1];\t\t\n\t\t\tif (B[0].fi > B[1].fi) swap(B[0], B[1]);\t\n\t\t\tif (B[0].se < B[1].fi) {\n\t\t\t\tif (B[0].fi > 0) update(1, 0, Tr, 0, B[0].fi - 1, MP(Tr, 0));\n\t\t\t\tif (B[0].fi <= B[0].se) update(1, 0, Tr, B[0].fi, B[0].se, B[1]);\n\t\t\t\tif (B[0].se + 1 <= B[1].fi - 1) update(1, 0, Tr, B[0].se + 1, B[1].fi - 1, MP(Tr, 0));\n\t\t\t\tif (B[1].fi <= B[1].se) update(1, 0, Tr, B[1].fi, B[1].se, B[0]);\n\t\t\t\tif (B[1].se < Tr) update(1, 0, Tr, B[1].se + 1, Tr, MP(Tr, 0));\n\t\t\t} //Condition 1\n\t\t\telse if (B[0].se < B[1].se) {\n\t\t\t\tif (B[0].fi > 0) update(1, 0, Tr, 0, B[0].fi - 1, MP(Tr, 0));\n\t\t\t\tif (B[0].fi < B[1].fi)  update(1, 0, Tr, B[0].fi, B[1].fi - 1, B[1]);\n\t\t\t\tif (B[1].fi <= B[0].se) update(1, 0, Tr, B[1].fi, B[0].se, B[0] | B[1]);\n\t\t\t\tif (B[0].se < B[1].se)  update(1, 0, Tr, B[0].se + 1, B[1].se, B[0]);\n\t\t\t\tif (B[1].se < Tr) update(1, 0, Tr, B[1].se + 1, Tr, MP(Tr, 0));\n\t\t\t}//Condition 2\n\t\t\telse {\n\t\t\t\tif (B[0].fi > 0) update(1, 0, Tr, 0, B[0].fi - 1, MP(Tr, 0));\n\t\t\t\tif (B[0].fi < B[1].fi)  update(1, 0, Tr, B[0].fi, B[1].fi - 1, B[1]);\n\t\t\t\tif (B[1].fi <= B[1].se) update(1, 0, Tr, B[1].fi, B[1].se, B[0]);\n\t\t\t\tif (B[1].se < B[0].se)  update(1, 0, Tr, B[1].se + 1, B[0].se, B[1]);\n\t\t\t\tif (B[0].se < Tr) update(1, 0, Tr, B[0].se + 1, Tr, MP(Tr, 0));\n\t\t\t}//Condition 3\n\t\t}\n\tsolve(1, 0, Tr, MP(0, Tr));\n\tif (!Ansx && !Ansy) { cout << \"IMPOSSIBLE\" << endl; return 0; }\n\tcout << \"POSSIBLE\" << endl;\n\tprint(Ansx), putc(' '), print(Ansy), putc('\\n');\n\tfor (int i = 1; i <= n ; ++ i) vis[i] = 0;\n\tfor (int i = 1; i <= n ; ++ i) {\n\t\tif (!flag[i]) continue;\n\t\tif (C[i][0].fi <= Ansx && Ansx <= C[i][0].se && C[i][1].fi <= Ansy && Ansy <= C[i][1].se) Dfs(i, 0); //\u5224\u65ad\u7b2c\u4e00\u7ec4\u62ff\u5076\u6570\u70b9\u8fd8\u662f\u5947\u6570\u70b9\u3002 \n\t\telse Dfs(i, 1);\n\t}\n\tfor (int i = 1; i <= n ; ++ i) putc('0' + Ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1615737288,
        "uid": 32063,
        "name": "fade_away",
        "ccfLevel": 0,
        "title": "CF538H"
    },
    {
        "content": "\u81ea\u5df1\u5b66\u7684\u65f6\u5019\u4e0d\u592a\u8bfb\u7684\u61c2\u7c89\u5154\u548c xht \u7684\u9898\u89e3\uff0c\u4e8e\u662f\u5c1d\u8bd5\u5199\u4e00\u7bc7\u8be6\u7ec6\u4e00\u70b9\u7684\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u5b58\u5728\u4e09\u4e2a\u8001\u5e08\u4e24\u4e24\u65e0\u4ea4\u76f4\u63a5\u5c31\u65e0\u89e3\u4e86\u3002\n\n\u6211\u4eec\u5148\u5ffd\u7565 $t,T,m$ \u6784\u9020\u4e00\u4e2a\u80fd\u591f\u5408\u6cd5\u5212\u5206\u8001\u5e08\u7684\u4e24\u90e8\u4e2a\u6570 $n_1,n_2$\u3002\n\n- \u6240\u6709\u8001\u5e08\u90fd\u4e24\u4e24\u6709\u4ea4\uff0c\u5219\u6211\u4eec\u53d6\u4ea4\u7684\u4e24\u4e2a\u7aef\u70b9\u5373\u53ef\uff08\u5b9e\u9645\u4e0a\u53d6\u4efb\u610f\u4e00\u70b9\u5728\u4ea4\u5185\u5373\u53ef\uff09\u3002\u79f0\u4f5c\u60c5\u51b5 $1$\u3002\n\n- \u5b58\u5728\u4e24\u4e2a\u8001\u5e08\u65e0\u4ea4\uff0c\u5219\u6211\u4eec\u9009\u62e9\u6700\u9760\u5de6\u7684\u53f3\u7aef\u70b9\u4f5c\u4e3a $n_1$\uff0c\u6700\u9760\u53f3\u7684\u5de6\u7aef\u70b9\u4f5c\u4e3a $n_2$\uff0c\u5176\u4f59\u7ebf\u6bb5\u4e00\u5b9a\u81f3\u5c11\u4e0e\u5176\u4e2d\u4e4b\u4e00\u6709\u4ea4\uff0c\u5426\u5219\u8fd9\u4e09\u4e2a\u7ebf\u6bb5\u4e24\u4e24\u65e0\u4ea4\u4e86\u3002\u79f0\u4f5c\u60c5\u51b5 $2$\u3002\u6ce8\u610f\u5230\u8fd9\u79cd\u60c5\u51b5\u4e0b $n_1$ \u53d8\u5927\u548c $n_2$ \u53d8\u5c0f\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b $n_1,n_2$ \u90fd\u53ef\u4ee5\u8868\u793a\u4e3a $\\min\\{r_i\\}$ \u548c $\\max\\{l_i\\}$\u3002\n\n\u8003\u8651 $t,T,m$ \u7684\u9650\u5236\uff0c$t,T$ \u7684\u9650\u5236\u786e\u5b9a\u4e86 $n_1,n_2$ \u7684\u589e\u51cf\uff0c$m$ \u9650\u5236\u4e86 $n_1,n_2$ \u8981\u5305\u542b\u5c3d\u91cf\u5927\u7684\u8001\u5e08\u96c6\u5408\u3002\n\n- $n_1+n_2\\in[t,T]$\u3002\u82e5\u4e3a\u60c5\u51b5 $1$\uff0c\u5219\u82e5 $m$ \u6761\u9650\u5236\u4e3a\u4e8c\u5206\u56fe\u5219 $n_1,n_2$ \u5df2\u7ecf\u662f\u5408\u6cd5\u89e3\uff1b\u5426\u5219\u82e5 $n_1$ \u51cf\u5c0f\u5219\u5305\u542b\u7684\u96c6\u5408\u4e3a\u4e4b\u524d\u7684\u5b50\u96c6\uff0c$n_2$ \u589e\u5927\u4ea6\u7136\u3002\n\n- $n_1+n_2<t$\u3002\u82e5\u4e3a\u60c5\u51b5 $2$\uff0c\u5219\u53ea\u80fd\u662f $n_2$ \u589e\u5927\uff1b\u5426\u5219 $n_1$ \u51cf\u5c0f\u7684\u8bdd $n_2$ \u9700\u8981\u589e\u52a0\u66f4\u591a\uff0c\u4e24\u8fb9\u90fd\u662f\u5b50\u96c6\u4e86\uff0c\u4e8e\u662f $n_1$ \u53ea\u80fd\u589e\u5927\uff0c\u82e5 $n_1,n_2$ \u90fd\u5927\u4e8e\u4ea4\u7684\u53f3\u7aef\u70b9\u5219\u4e0d\u5408\u6cd5\u4e86\uff0c\u5219\u5fc5\u7136\u6709\u4e00\u4e2a\u5728\u4ea4\u5185\uff0c\u5219\u4f4d\u4e8e\u4ea4\u7684\u53f3\u7aef\u70b9\u6700\u4f18\u3002\u6545\u5e94\u5f53 $n_2$ \u589e\u5927\u3002\n\n- $n_1+n_2>T$\u3002\u540c\u7406\uff0c\u53ea\u80fd $n_1$ \u51cf\u5c0f\u3002\n\n\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u6700\u4f18\u79c0\u7684 $n_1,n_2$\uff0c\u5269\u4e0b\u7684\u5224\u5b9a\u662f\u7b80\u5355\u7684\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+10;\nconst int mod=1e9+7;\n#define inf 1e9\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\nint n,m,tl,tr,n1=inf,n2,l[maxn],r[maxn],col[maxn],ok=1;\n#define pb push_back\nvector<int>G[maxn];\ninline void dfs(int x){\n\tfor(auto t:G[x]){\n\t\tif(col[t]==col[x])ok=0;\n\t\tif(!col[t])col[t]=3-col[x],dfs(t);\n\t}\n}\nint main(){\n\ttl=read(),tr=read(),n=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tl[i]=read(),r[i]=read(),n1=min(n1,r[i]),n2=max(n2,l[i]);\n\tif(n1+n2<tl)n2=tl-n1;if(n1+n2>tr)n1=tr-n2;\n\tif(n1<0||n2<0)return puts(\"IMPOSSIBLE\")&0;\n\tfor(int i=1;i<=n;i++){\n\t\tint f1=(l[i]<=n1&&n1<=r[i]);\n\t\tint f2=(l[i]<=n2&&n2<=r[i]);\n\t\tif(!f1&&!f2)return puts(\"IMPOSSIBLE\")&0;\n\t\tif(!f1)col[i]=2;if(!f2)col[i]=1;\n\t}for(int i=1,x,y;i<=m;i++)\n\t\tx=read(),y=read(),G[x].pb(y),G[y].pb(x);\n\tfor(int i=1;i<=n;i++)if(col[i])dfs(i);\n\tfor(int i=1;i<=n;i++)if(!col[i])col[i]=1,dfs(i);\n\tif(!ok)return puts(\"IMPOSSIBLE\")&0;\n\tputs(\"POSSIBLE\");printf(\"%d %d\\n\",n1,n2);\n\tfor(int i=1;i<=n;i++)printf(\"%d\",col[i]);puts(\"\");\n\treturn 0;\n}\n```\n\n\u6df1\u6df1\u5730\u611f\u5230\u81ea\u5df1\u7684\u5f31\u5c0f\u3002",
        "postTime": 1673580273,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "CF538H Summer Dichotomy"
    },
    {
        "content": "[CF538H Summer Dichotomy](https://www.luogu.com.cn/problem/CF538H)  \n\n\u4e00\u9053\u4e0d\u9519\u7684\u9898\u3002\u89e3\u6cd5\u5f88\u591a\u3002\u4e3a\u65b9\u4fbf\u8868\u8ff0\uff0c\u8bbe\u4e24\u4e2a\u5c0f\u7ec4\u7684\u5b66\u751f\u6570\u5206\u522b\u4e3a $n_1,n_2 $\n\n**\u7b97\u6cd5\u4e00\uff1a**\n\n\u9996\u5148\uff0c\u770b\u5230` \u6709m\u5bf9\u8001\u5e08\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u5c0f\u7ec4\u4e2d `\uff0c\u60f3\u5230 **2-SAT**\u3002\u53c8\u770b\u5230 $[l_i,r_i]$ \u7684\u9650\u5236\uff0c\u60f3\u5230\u524d\u7f00\u4f18\u5316\u5efa\u56fe\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u7c7b\u4f3c[CF1215F Radio Stations](https://www.luogu.com.cn/blog/flyingfan/cf1215f-radio-stations-qian-zhui-you-hua-jian-tu-2-sat)\u7684\u505a\u6cd5\u3002\u4f46\u672c\u9898 $T$ \u8fc7\u5927\uff0c\u8fd9\u6837\u5efa\u56fe\u65e0\u6cd5\u901a\u8fc7\u3002\u53d1\u73b0\uff0c\u53ef\u4ee5\u6784\u9020\u4e00\u7ec4\u89e3\u4f7f $n_1,n_2$ \u53ea\u5728 $0,t,l_i,r_i,t-l_i,t-r_i$ \u4e2d\u53d6\u503c\uff0c\u5982\u679c\u53ea\u5efa\u8fd9\u4e9b\u70b9\uff0c\u8dd1 2-SAT\uff0c\u590d\u6742\u5ea6\u5c31\u4f1a\u964d\u5230 $O(n+m)$\u3002 \n\n**\u7b97\u6cd5\u4e8c\uff1a**\uff08\u53c2\u8003\u8d44\u6599\uff1a[CF\u5b98\u65b9\u9898\u89e3](https://codeforces.com/blog/entry/17612)\uff09\n\n\u5c06\u8001\u5e08\u4eec\u7684\u5173\u7cfb\u8fde\u8fb9\uff0c\u8fd9\u6837\u4f1a\u4ea7\u751f\u4e00\u4e9b\u8054\u901a\u5757\uff0c\u663e\u7136\u5982\u679c\u8fd9\u4e2a\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\u5c31\u65e0\u89e3\uff0c\u5426\u5219\u5bf9\u4e8e\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u53ef\u4ee5\u5206\u6210\u5206\u7ec4\u4e0d\u540c\u7684\u4e24\u4e2a\u96c6\u5408\uff0c\u4ee4\u8fd9\u4e24\u4e2a\u96c6\u5408\u5bf9\u5b66\u751f\u4eba\u6570\u8981\u6c42\u7684\u533a\u95f4\u7684\u4ea4\u4e3a $l_1,r_1,l_2,r_2$\u3002\n\u4ece\u6bcf\u4e00\u4e2a $(l_1,r_1,l_2,r_2)$ \u5165\u624b\uff0c\u5c06 $(n1,n2)$ \u770b\u4f5c\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5bf9\u5e94\u7684\u5408\u6cd5\u70b9\u96c6\u662f $r(l_1,l_2,r_1,r_2)\\bigcup r(l_2,l_1,r_2,r_1)$ \uff0c\u800c\u5168\u5c40\u5408\u6cd5\u70b9\u662f\u6bcf\u4e2a\u8fde\u901a\u5757\u5408\u6cd5\u70b9\u7684\u4ea4\uff0c\u5176\u4e2d $r(a,b,c,d)$ \u8868\u793a\u4ee5 $( a,b)$ \u4e3a\u5de6\u4e0a\u89d2\uff0c$(c,d)$ \u4e3a\u53f3\u4e0b\u89d2\u7684\u77e9\u5f62\u3002\u7528**\u626b\u63cf\u7ebf**\u7ef4\u62a4\uff0c\u53d6\u7b54\u6848\u7684\u65f6\u5019\u5224\u4e00\u4e0b $[t,T]$ \u7684\u9650\u5236\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(n\\log n)$\n\n**\u7b97\u6cd5\u4e09\uff1a**\n\n\u6211 orz \u9898\u89e3\u4ee5\u540e\u5f97\u5230\u4e86\u8fd9\u4e2a\u4f18\u79c0\u7684\u505a\u6cd5\u3002\u8fd9\u4e2a\u505a\u6cd5\u7684\u4ee3\u7801\u662f\u5982\u6b64\u4e4b\u77ed\u4ee5\u81f3\u4e8e\u6211\u770b\u5230\u5b83\u5c31\u4e0d\u60f3\u5199\u81ea\u5df1 yy \u51fa\u6765\u7684\u505a\u6cd5\u4e86\u3002~~\u6ca1\u9519\u4e0a\u9762\u4e24\u79cd\u505a\u6cd5\u90fd\u662f\u6211\u53e3\u80e1\u7684~~\n\n\u8bbe $n1\\le n2$ \uff0c\u5982\u679c\u6ca1\u6709 $[t,T]$ \u7684\u9650\u5236\uff0c\u6211\u4eec\u8d2a\u5fc3\u5730\u8ba9 $n1=\\min r_i,n2=\\max l_i$\u3002\u56e0\u4e3a $n1<n2$ \uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a $r_i<n1$ \uff0c\u5219 $i$ \u65e0\u6cd5\u5206\u7ec4\u3002$n2$ \u540c\u7406\u3002\u6240\u4ee5\u8fd9\u6837\u8d2a\u5fc3\u4f1a\u4f7f\u9650\u5236\u6761\u4ef6\u662f\u6700\u201c\u677e\u201d\u7684\uff0c\u4e14 $n1$ \u53ef\u4ee5\u53d8\u5c0f\u4e0d\u80fd\u53d8\u5927\uff0c $n2$ \u53ef\u4ee5\u53d8\u5927\u4e0d\u80fd\u53d8\u5c0f\u3002\n\n\u52a0\u5165 $[t,T]$ \u7684\u9650\u5236\uff0c\u5982\u679c $n1+n2>T$ \u5c31\u8c03\u5c0f $n1$\uff0c\u5982\u679c $n1+n2<t$ \u5c31\u8c03\u5927 $n2$\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4e00\u7ec4\u5408\u6cd5\u7684 $(n1,n2 )$\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u6784\u9020\u65b9\u6848\u3002\u5148\u4ece\u53ea\u53ef\u80fd\u88ab\u5206\u5230\u67d0\u4e00\u7ec4\u7684\u8001\u5e08\u5f00\u59cb\uff0c\u50cf\u7b97\u6cd5\u4e8c\u90a3\u6837\u8fdb\u884c\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u5982\u679c\u4e0d\u662f\u4e8c\u5206\u56fe\u5c31\u65e0\u89e3\u3002\u590d\u6742\u5ea6 $O(n+m)$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nnamespace FGF\n{\n\tint n,m,t,T;\n\tconst int N=1e5+5;\n\tint l[N],r[N],n1=0x3f3f3f3f,n2,ans[N];\n\tvector<int> g[N];\n\tvoid dfs(int u,int col)\n\t{\n\t\tif(ans[u])\n\t\t{\n\t\t\tif(ans[u]!=col)\n\t\t\t{\n\t\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\t\texit(0);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tans[u]=col;\n\t\tfor(auto v:g[u])\n\t\t\tdfs(v,3-col);\n\t}\n\tvoid work()\n\t{\n\t\tscanf(\"%d%d%d%d\",&t,&T,&n,&m);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%d%d\",&l[i],&r[i]),n1=min(n1,r[i]),n2=max(n2,l[i]);\n\t\tif(n1+n2<t)n2=t-n1;\n\t\telse if(n1+n2>T)n1=T-n2;\n\t\tif(n1<0||n2<0){puts(\"IMPOSSIBLE\");return;}\n\t\tfor(int i=1,u,v;i<=m;i++)\n\t\t\tscanf(\"%d%d\",&u,&v),g[u].push_back(v),g[v].push_back(u);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif((l[i]<=n1&&n1<=r[i])&&!(l[i]<=n2&&n2<=r[i]))dfs(i,1);\n\t\t\tif(!(l[i]<=n1&&n1<=r[i])&&(l[i]<=n2&&n2<=r[i]))dfs(i,2);\n\t\t\tif(!(l[i]<=n1&&n1<=r[i])&&!(l[i]<=n2&&n2<=r[i])){puts(\"IMPOSSIBLE\");return;}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(!ans[i])dfs(i,1);\n\t\tputs(\"POSSIBLE\");\n\t\tprintf(\"%d %d\\n\",n1,n2);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tprintf(\"%d\",ans[i]);\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```",
        "postTime": 1611022855,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "CF538H Summer Dichotomy"
    },
    {
        "content": "### \u9898\u610f\n\n- \u6709\u4e00\u4e9b\u540c\u5b66\u548c$n$\u4e2a\u8001\u5e08\uff0c\u8981\u6c42\u4ece\u4e2d\u9009\u51fa\u81f3\u5c11$t$\u4e2a\u81f3\u591a$T$\u5b66\u751f\u5206\u6210\u4e24\u7ec4\n- \u8981\u6c42\u7b2c$i$\u540d\u8001\u5e08\u6240\u5206\u5f97\u7684\u5b66\u751f\u4eba\u6570\u5728$[l_i, r_i]$\u7684\u8303\u56f4\u5185\u5e76\u4e14\u6bcf\u4e2a\u8001\u5e08\u90fd\u8981\u5206\u5230\u67d0\u4e00\u7ec4\u53bb\n- \u5e76\u4e14\u6709\u4e00\u4e9b\u8001\u5e08\u4e0d\u80fd\u5728\u540c\u4e00\u7ec4\n- \u6784\u9020\u4e00\u7ec4\u65b9\u6848\n\n\u5148\u4e0d\u8003\u8651$t, T$\u7684\u9650\u5236\uff0c\u90a3\u4e48\u5206\u60c5\u51b5\u8003\u8651\uff1a\n\n1. \u6240\u6709\u533a\u95f4\u90fd\u6709\u4ea4\u96c6\n2. \u6700\u540e\u7b54\u6848\u5c06\u8001\u5e08\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff0c\u4e14\u4e24\u96c6\u5408\u4ea4\u96c6\u7684\u4ea4\u96c6\u4e3a\u7a7a\n\n\n\n\u5bf9\u4e8e\u60c5\u51b51\uff0c\u53ea\u8981\u5728\u4ea4\u96c6\u91cc\u9762\u9009\u4e24\u4e2a\u70b9\u5c31\u597d\n\n\n\n\u5bf9\u4e8e\u60c5\u51b52\uff0c\u8003\u8651\u9009\u7684\u8f83\u5c0f\u7684\u90a3\u4e2a\u70b9$x$\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u4f1a\u5728\u6240\u6709$r_i$\u7684\u524d\u9762\uff0c\u5426\u5219\u53e6\u5916\u4e00\u4e2a\u70b9\u66f4\u5927\uff0c\u90a3\u8fd9\u4e2a$r_i$\u5c31\u65e0\u6cd5\u5206\u7ec4\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u4f1a\u6ee1\u8db3\uff1a\n$$\nx\\leq\\min_{i=1}^{n}\\{r_i\\}\n$$\n\u518d\u8003\u8651\u8f83\u5927\u7684\u90a3\u4e2a\u70b9$y$\uff0c\u540c\u6837\u7684\uff0c\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u4f1a\u6240\u6709$l_i$\u7684\u540e\u9762\uff0c\u5426\u5219\u540c\u6837\u4e0d\u6ee1\u8db3\u9898\u610f\uff0c\u5373\uff1a\n$$\ny\\geq\\max_{i=1}^n\\{l_i\\}\n$$\n\u7136\u540e\u518d\u8003\u8651$t,T$\u7684\u9650\u5236\uff0c\u540c\u6837\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $x+y<t$\uff0c\u7531\u4e8e$x$\u53ea\u80fd\u51cf\u5c0f\uff0c\u6240\u4ee5\u53ea\u80fd\u589e\u5927$y$\uff0c\u4f46\u589e\u5927\u591a\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u8db3\u533a\u95f4\u7684\u9650\u5236\uff0c\u6240\u4ee5\u5c3d\u91cf\u8ba9$y$\u66f4\u5c0f\n2. $x+y>T$\uff0c\u540c\u7406\u53ea\u80fd\u6700\u5c0f\u5730\u51cf\u5c0f$x$\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u80fd\u5f97\u5230\u7684\u6700\u7ec8\u7684$x,y$\u4e00\u5b9a\u80fd\u6ee1\u8db3\u9898\u610f\uff0c\u5426\u5219\u5c31\u65e0\u89e3\uff0c\u4e4b\u540e\u5efa\u51fa\u4e8c\u5206\u56fe\u8dd1\u8dd1\u5c31\u597d\u4e86\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i, a, b) for(int i = (a), en = (b); i <= en; ++i)\n#define Rof(i, a, b) for(int i = (a), en = (b); i >= en; --i)\n#define Tra(u, i) for(int i = hd[u]; ~i; i = e[i].net)\n#define cst const\n#define LL long long\n#define DD double\n#define LD long double\n#define pb push_back\n#define mp make_pair\n#define fir first\n#define sec second\n#define inf 0x3f3f3f3f\n#define Inf 0x3f3f3f3f3f3f3f3f\n#define eps 1e-12\n#define maxn 100000\nusing namespace std;\n\nint T, t, n, m, mn = inf, mx = 0, L[maxn + 5], R[maxn + 5], col[maxn + 5];\n\ntemplate <class T>\nvoid read(T &x){\n\tchar ch;\n\tbool ok;\n\tfor(ok = 0, ch = getchar(); !isdigit(ch); ch = getchar()) if(ch == '-') ok = 1;\n\tfor(x = 0; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\tif(ok) x = -x;\n}\n\nint fa[2 * maxn + 5], to[maxn + 5];\nint find(int x){return fa[x] == x ? x : fa[x] = find(fa[x]);}\n\nint main(){\n\t//freopen(\"in\", \"r\", stdin);\n\tread(t); read(T); read(n); read(m);\n\tFor(i, 1, n){\n\t\tread(L[i]); read(R[i]);\n\t\tmn = min(mn, R[i]);\n\t\tmx = max(mx, L[i]);\n\t}\n\tif(mn + mx < t) mx = t - mn;\n\tif(mn + mx > T) mn = T - mx;\n\tif(mn + mx < t || mn + mx > T || mn < 0){puts(\"IMPOSSIBLE\"); return 0;};\n\tFor(i, 1, 2 * n) fa[i] = i;\n\tFor(i, 1, m){\n\t\tint u, v; read(u); read(v);\n\t\tif(find(u) == find(v)){puts(\"IMPOSSIBLE\"); return 0;}\n\t\tfa[find(n + u)] = find(v);\n\t\tfa[find(n + v)] = find(u);\n\t}\n\tFor(i, 1, n) if(find(n + i) != n + i) to[find(n + i)] = find(i);\n\tFor(i, 1, n) L[find(i)] = max(L[find(i)], L[i]), R[find(i)] = min(R[find(i)], R[i]);\n\tFor(i, 1, n) if(find(i) == i){\n\t\tif(L[i] > R[i]){puts(\"IMPOSSIBLE\"); return 0;}\n\t\tif(!to[i]){\n\t\t\t//cout << L[i] << \" \" << R[i] << endl;\n\t\t\tif(mn >= L[i] && mn <= R[i]) col[i] = 1;\n\t\t\telse if(mx >= L[i] && mx <= R[i]) col[i] = 2;\n\t\t\telse{puts(\"IMPOSSIBLE\"); return 0;}\n\t\t}\n\t\telse{\n\t\t\tif(mn >= L[i] && mn <= R[i] && mx >= L[to[i]] && mx <= R[to[i]]){\n\t\t\t\tcol[i] = 1;\n\t\t\t\tcol[to[i]] = 2;\n\t\t\t}\n\t\t\telse if(mn >= L[to[i]] && mn <= R[to[i]] && mx >= L[i] && mx <= R[i]){\n\t\t\t\tcol[i] = 2;\n\t\t\t\tcol[to[i]] = 1;\n\t\t\t}\n\t\t\telse{puts(\"IMPOSSIBLE\"); return 0;}\n\t\t}\n\t}\n\tputs(\"POSSIBLE\");\n\tprintf(\"%d %d\\n\", mn, mx);\n\tFor(i, 1, n) printf(\"%d\", col[find(i)]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1602728395,
        "uid": 114164,
        "name": "lprdsb",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF538H \u3010Summer Dichotomy\u3011"
    },
    {
        "content": "# CF 538H\n\n\u8fd9\u4e2a\u9898\u4e5f\u8bb8\u5728 rating 3100 \u4e2d\u7684\u9898\u76ee\u4e2d\u7b97\u6c34\u7684\u5427\uff0c\u611f\u89c9\u6709\u4e00\u4e9b rating \u66f4\u4f4e\u7684\u9898\u76ee\u6bd4\u4ed6\u96be\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5bf9 $n_1$ \u548c $n_2$ \u7684\u9650\u5236\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5\u5bf9\u4eba\u6570\u65e0\u9700\u6c42\u7684\u8bdd\uff0c\u90a3\u4e48 $n_1=\\min \\{r_i\\},n_2=\\max \\{l_i\\}$ \u7684\u8bdd\u662f\u4e00\u4e2a\u6700\u5927\u7684\u7ea6\u675f\u533a\u95f4\u3002\n\n\u4f46\u662f\u95ee\u9898\u5728\u4e8e\u6709\u4eba\u6570\u4e0b\u9650 $t$ \u548c\u4e0a\u9650 $T$ \u7684\u9650\u5236\u3002\u5982\u679c\u662f $n_1+n_2<t$ \u7684\u8bdd\uff0c\u90a3\u4e48\u589e\u52a0 $n_2$ \u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u82e5\u589e\u52a0 $n_1$ \u5c31\u4f1a\u4f7f\u5f97\u4eba\u6570\u8fc7\u591a\u3002\u5982\u679c\u662f $n_1+n_2 > T$ \u7684\u8bdd\uff0c\u90a3\u4e48\u51cf\u5c11 $n_1$ \u662f\u6700\u4f18\u7684\uff0c\u5426\u5219\u4eba\u6570\u53ef\u80fd\u8fc7\u5c11\u3002\n\n\u6839\u636e\u8fd9\u70b9\u6211\u4eec\u5c31\u80fd\u6839\u636e $t,T$ \u548c\u6240\u6709\u7684 $l_i,r_i$ \u6c42\u51fa $n_1,n_2$ \u4e86\u3002\n\n\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u5224\u5b9a\u662f\u5426\u53ef\u884c\u3002\u6211\u4eec\u628a\u6240\u6709\u7684\u8001\u5e08\u7684\u51b2\u7a81\u6761\u4ef6\u8fde\u8fb9\u5efa\u56fe\uff0c\u56e0\u4e3a\u53ea\u6709\u4e24\u4e2a\u7ec4\uff0c\u6240\u4ee5\u5f88\u81ea\u7136\u60f3\u5230\u4e8c\u5206\u56fe\u67d3\u8272\u3002\u6211\u4eec\u5e94\u5f53\u4ece\u53ea\u53ef\u80fd\u88ab\u5206\u5230\u4e00\u7ec4\u7684\u8001\u5e08\u5f00\u59cb\u8fdb\u884c\u67d3\u8272\u3002\u5728\u67d3\u8272\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6ce8\u610f\u5982\u679c\u67d3\u7684\u8272\u51b2\u7a81\u8868\u660e\u4e0d\u662f\u4e8c\u5206\u56fe\u5c31\u65e0\u89e3\uff1b\u5982\u679c\u6709\u8001\u5e08\u4e24\u4e2a\u7ec4\u90fd\u5206\u4e0d\u8fdb\u53bb\u4e5f\u65e0\u89e3\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e9b\u95ee\u9898\u5c31\u53ef\u4ee5\u6839\u636e\u4e8c\u5206\u56fe\u67d3\u8272\u7684\u7ed3\u679c\u76f4\u63a5\u5f97\u5230\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+m)$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <cctype>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\nint T,t,n,m,l[100050],r[100050],n1,n2,ans[100050];\n\nvector <int> G[100050];\n\ninline void dfs(int u,int col)\n{\n\tif (ans[u])\n\t{\n\t\tif (ans[u]!=col)\n\t\t{\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\texit(0);\n\t\t}\n\t\treturn;\n\t}\n\tans[u]=col;\n\tfor (int i=0;i<G[u].size();i++)\n\t{\n\t\tint v=G[u][i];\n\t\tdfs(v,3-col);\n\t}\n}\n\nint main()\n{\n\tt=read(),T=read();\n\tn=read(),m=read();\n\tn1=1<<30,n2=-(1<<30);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tl[i]=read();\n\t\tr[i]=read();\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tn1=min(n1,r[i]);\n\tfor (int i=1;i<=n;i++)\n\t\tn2=max(n2,l[i]);\n\tif (n1+n2<t)\n\t\tn2=t-n1;\n\telse if (n1+n2>T)\n\t\tn1=T-n2;\n\tif (n1<0 || n2<0)\n\t{\n\t\tputs(\"IMPOSSIBLE\");\n\t\treturn 0;\n\t}\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (l[i]<=n1 && n1<=r[i] && !(l[i]<=n2 && n2<=r[i]))\n\t\t\tdfs(i,1);\n\t\telse if (l[i]<=n2 && n2<=r[i] && !(l[i]<=n1 && n1<=r[i]))\n\t\t\tdfs(i,2);\n\t\telse if (!(l[i]<=n2 && n2<=r[i]) && !(l[i]<=n1 && n1<=r[i]))\n\t\t{\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tif (!ans[i])\n\t\t\tdfs(i,1);\n\tputs(\"POSSIBLE\");\n\tcout << n1 << \" \" << n2 << endl;\n\tfor (int i=1;i<=n;i++)\n\t\tcout << ans[i];\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1585143630,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF538H \u3010Summer Dichotomy\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\u7684\u8d2a\u5fc3\u6a21\u578b\u3002\n\n\u65e0$t,T$\u9650\u5236\u4e0b\u7684\u4e24\u7ec4\u4eba\u6570$s1,s2$\u3002\n\n\u4e0b\u8bc1$s1$\u5728$r_i$\u4e2d\u53d6 $min$\uff0cs2\u5728$l_i$\u4e2d\u53d6$max$\u65f6\u6700\u4f18\u3002\n\n\u9996\u5148\u533a\u95f4$l_i,r_i$\u5fc5\u987b\u6709\u4ea4\u3002\n\n\u82e5$s2 \\leq s1$\uff0c\u53ef\u4ee5\u4efb\u610f\u9009\u7ec4\u3002\n\n\u53cd\u4e4b\uff0c$s1$\u589e\u52a0\u5fc5\u6709\u4e00\u4eba\u65e0\u6cd5\u9009\u7ec4\u3002\n\n\u5bf9$s2$\u4ea6\u7136\u3002\n\n\u6709\u9650\u5236\u65f6\u8fc7\u5c0f\u589e\u5927$s2$\uff0c\u8fc7\u5927\u51cf\u5c0f$s1$\u3002\n\n\u6700\u540e\u4e0d\u80fd\u5728\u540c\u4e00\u7ec4\u5185\u7684\u4eba\u8fde\u8fb9\uff0c\u4e8c\u5206\u56fe\u67d3\u8272\u5373\u53ef\u3002\n\ncode:\n\n```cpp\n#include <vector>\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nint n , m , t , T;\n\nint x , y;\n\nvector <int> g[100005];\n\nint c[100005] , l[100005] , r[100005];\n\nbool dfs(int x) {\n\tfor(auto y : g[x]) {\n\t\tif(!c[y]){\n\t\t\tc[y] = 3 - c[x];\n\t\t\tif(!dfs(y))\n\t\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t\tif(c[x] == c[y])\n\t\t\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nbool pd(int x , int i){\n\treturn x >= l[i] && x <= r[i];\n}\n\nint main() {\n\tcin >> t >> T >> n >> m;\n\tfor(int i = 1; i <= n; i++)\n\t\tcin >> l[i] >> r[i];\n\tfor(int i = 1; i <= m; i++) {\n\t\tcin >> x >> y;\n\t\tg[x].push_back(y) , g[y].push_back(x);\n\t}\n\tint t1 = 0x3f3f3f3f , t2 = 0;\n\tfor(int i = 1; i <= n; i++)\n\t\tt1 = min(t1 , r[i]) , t2 = max(t2 , l[i]);\t\n//\tcout << t1 << \" \" << t2 << endl;\n\tif(t1 + t2 < t)\n\t\tt2 =  t - t1;\n\tif(t1 + t2 > T)\n\t\tt1 = T - t2;\n\tif(t1 < 0 || t2 < 0) {\n\t\tcout << \"IMPOSSBLE\" << endl;\n\t\treturn 0;\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tbool a = 0 , b = 0;\n\t\tif(t1 >= l[i] && t1 <= r[i])\n\t\t\ta = 1;\n\t\tif(t2 >= l[i] && t2 <= r[i])\n\t\t\tb = 1;\n\t\tif(!a && !b) {\n\t\t\tcout << \"IMPOSSBLE\" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif(a && !b)\n\t\t\tc[i] = 1;\n\t\tif(!a && b)\n\t\t\tc[i] = 2;\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tif(!dfs(i) && c[i]) {\n\t\t\tcout << \"IMPOSSBLE\" << endl;\n\t\t\treturn 0;\n\t\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(!c[i]) {\n\t\t\tc[i] = 1;\n\t\t\tif(!dfs(i)) {\n\t\t\t\tcout << \"IMPOSSIBLE\" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << \"POSSIBLE\" << endl;\n\tcout << t1 << \" \" << t2 << endl;\n\tfor(int i = 1; i <= n; i++)\n\t\tcout << c[i];\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1584018161,
        "uid": 145078,
        "name": "RainSong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF538H \u3010Summer Dichotomy\u3011"
    },
    {
        "content": "# [CF538H]Summer Dichotomy\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u200b\t\u5c06\u82e5\u5e72\u4e2a\u5b66\u751f\u5206\u4e3a\u4e24\u4e2a\u73ed\u7ea7$S_1,S_2$\uff0c\u6bcf\u4e2a\u73ed\u7684\u5b66\u751f\u6570\u5206\u522b\u4e3a$n_1,n_2$\uff08\u751a\u81f3\u53ef\u4ee5\u6ca1\u6709\u5b66\u751f\uff0c\u4e5f\u53ef\u4ee5\u6ca1\u6709\u8001\u5e08\uff09\u3002\u7ed9\u51fa\u9650\u5236$t_{\\min},t_{\\max}$\uff0c\u8981\u6c42$t_{\\min}\\le n_1+n_2\\le t_{\\max}$\u3002\u6709$n(n\\le10^5)$\u4e2a\u8001\u5e08\uff0c\u6bcf\u4e2a\u8001\u5e08\u5e0c\u671b\u4ed6\u6240\u4efb\u6559\u7684\u73ed\u7ea7\u4eba\u6570\u5728$[l_i,r_i]$\u8303\u56f4\u5185\u3002\u6709$m(m\\le10^5)$\u5bf9\u8001\u5e08\u4e4b\u95f4\u6709\u4e00\u4e9b\u79c1\u4eba\u6069\u6028\uff0c\u4e0d\u80fd\u5206\u5728\u4e00\u4e2a\u73ed\u7ea7\u3002\u95ee\u662f\u5426\u5b58\u5728\u5408\u6cd5\u7684\u5206\u73ed\u65b9\u6848\u3002\u5982\u679c\u6709\uff0c\u6c42\u51fa\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u79cd\uff0c\u8f93\u51fa\u6bcf\u4e2a\u73ed\u7684\u603b\u4eba\u6570\u4ee5\u53ca\u5404\u4e2a\u8001\u5e08\u6240\u4efb\u6559\u7684\u73ed\u7ea7\u3002\n\n### \u601d\u8def\uff1a\n\n\u200b\t\u5bf9\u4e8e\u6240\u6709$[l_i,r_i]$\u7684\u9650\u5236\uff0c\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe$n_1=\\min\\{r_i\\},n_2=\\max\\{l_i\\}$\uff0c\u663e\u7136\u8fd9\u662f\u6bd4\u8f83\u677e\u7684\u7ea6\u675f\u3002\u518d\u8003\u8651$t_{\\min},t_{\\max}$\u7684\u9650\u5236\uff0c\u786e\u5b9a\u53ef\u884c\u7684\u4e00\u7ec4$n_1,n_2$\u3002\u8003\u8651\u4e8c\u5206\u56fe\u67d3\u8272\u6784\u9020\u8001\u5e08\u5206\u914d\u7684\u65b9\u6848\u3002\u5bf9\u4e8e\u53ea\u80fd\u5206\u5230$S_1$\u6216\u53ea\u80fd\u5206\u5230$S_2$\u7684\u8001\u5e08DFS\u904d\u5386\u67d3\u8272\uff0c\u82e5\u66f4\u65b0\u5230\u7684\u7ed3\u70b9\u4e0e\u5df2\u67d3\u8272\u7ed3\u70b9\u77db\u76fe\uff0c\u8bf4\u660e\u6839\u672c\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u4e0d\u5b58\u5728\u5408\u6cd5\u7684\u65b9\u6848\u3002\u5bf9\u4e8e\u4e24\u4e2a\u90fd\u4e0d\u53ef\u4ee5\u5206\u8fdb\u53bb\u7684\uff0c\u8bf4\u660e\u4e5f\u4e0d\u5b58\u5728\u5408\u6cd5\u65b9\u6848\u3002\u6700\u540e\u518d\u5bf9\u4e8e$S_1$\u548c$S_2$\u90fd\u53ef\u4ee5\u7684\u8fdb\u884c\u67d3\u8272\u3002\n\n### \u6e90\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<vector>\n#include<climits>\ninline int getint() {\n\tregister char ch;\n\twhile(!isdigit(ch=getchar()));\n\tregister int x=ch^'0';\n\twhile(isdigit(ch=getchar())) x=(((x<<2)+x)<<1)+(ch^'0');\n\treturn x;\n}\nconstexpr int N=1e5;\nint l[N],r[N],ans[N];\nstd::vector<int> e[N];\ninline void add_edge(const int &u,const int &v) {\n\te[u].push_back(v);\n\te[v].push_back(u);\n}\nvoid dfs(const int &x,const int &c) {\n\tif(ans[x]) {\n\t\tif(ans[x]!=c) throw(0);\n\t\treturn;\n\t}\n\tans[x]=c;\n\tfor(auto &y:e[x]) {\n\t\tdfs(y,3-c);\n\t}\n}\nint main() {\n\tconst int t_min=getint(),t_max=getint();\n\tconst int n=getint(),m=getint();\n\tint n1=INT_MAX,n2=INT_MIN;\n\tfor(register int i=0;i<n;i++) {\n\t\tn2=std::max(n2,l[i]=getint());\n\t\tn1=std::min(n1,r[i]=getint());\n\t}\n\tif(n1+n2<t_min) n2=t_min-n1;\n\telse if(n1+n2>t_max) n1=t_max-n2;\n\tif(n1<0||n2<0) {\n\t\tputs(\"IMPOSSIBLE\");\n\t\treturn 0;\n\t}\n\tfor(register int i=0;i<m;i++) {\n\t\tadd_edge(getint()-1,getint()-1);\n\t}\n\tfor(register int i=0;i<n;i++) {\n\t\ttry {\n\t\t\tif(!(l[i]<=n1&&n1<=r[i])&&!(l[i]<=n2&&n2<=r[i])) throw(0);\n\t\t\tif((l[i]<=n1&&n1<=r[i])&&!(l[i]<=n2&&n2<=r[i])) dfs(i,1);\n\t\t\tif((l[i]<=n2&&n2<=r[i])&&!(l[i]<=n1&&n1<=r[i])) dfs(i,2);\n\t\t} catch(...) {\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(register int i=0;i<n;i++) {\n\t\ttry {\n\t\t\tif(!ans[i]) dfs(i,1);\n\t\t} catch(...) {\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"POSSIBLE\");\n\tprintf(\"%d %d\\n\",n1,n2);\n\tfor(register int i=0;i<n;i++) {\n\t\tprintf(\"%d\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1527157610,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF538H \u3010Summer Dichotomy\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u7801\u91cf\u6bd4\u8f83\u5927\u7684\u5927\u529b\u5206\u7c7b\u8ba8\u8bba\u89e3\u6cd5\u3002\n\n\u9996\u5148\u5bf9\u539f\u56fe\u7684\u9650\u5236\u8fdb\u884c\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u76f8\u4e92\u72ec\u7acb\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e24\u4e2a\u533a\u95f4\u6765\u523b\u753b\u4e00\u4e2a\u8fde\u901a\u5757\uff1a$[l_1,r_1]$ \u548c $[l_2,r_2]$\uff0c\u8868\u793a\u8fd9\u4e2a\u8fde\u901a\u5757\u88ab\u5212\u5206\u6210\u4e24\u4e2a\u96c6\u5408\u4e4b\u540e\u5206\u522b\u4ee3\u8868\u7684\u533a\u95f4\u3002\u5bf9\u4e8e\u5b64\u7acb\u70b9\uff0c\u5c31\u76f8\u5f53\u4e8e\u989d\u5916\u589e\u52a0\u4e00\u4e2a $(-\\infty,\\infty)$ \u7684\u533a\u95f4\u3002\n\n\u63a5\u4e0b\u6765\u7528\u4e0d\u7b49\u5f0f\u6765\u8868\u793a\u539f\u9898\u7684\u9650\u5236\uff1a\n\n$$\n\\begin{cases}\nl_{1\\max}\\le r_{1\\min} \\\\\nl_{2\\max}\\le r_{2\\min} \\\\\nr_{1\\min}+r_{2\\min}\\ge t\\\\\nl_{1\\max}+l_{2\\max}\\le T\n\\end{cases}\n$$\n\n\u6ce8\u610f\u5230\u6574\u4e2a\u9650\u5236\u53ea\u8ddf\u6bcf\u4e2a\u96c6\u5408 $l,r$ \u7684\u6700\u5c0f\u6700\u5927\u503c\u6709\u5173\u7cfb\u3002\n\n\u6211\u4eec\u627e\u5230\u6240\u6709\u533a\u95f4\u4e2d $l$ \u7684\u6700\u5927\u503c $l_{\\max}$ \u548c $r$ \u7684\u6700\u5c0f\u503c $r_{\\min}$\uff0c\u5e76\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- $l_{\\max}$\uff0c$r_{\\min}$ \u4e0d\u5728\u540c\u4e00\u96c6\u5408\n\n\u5047\u8bbe $l_{\\max}$ \u5728\u96c6\u5408 1\uff0c$r_{\\min}$ \u5728\u96c6\u5408 2\uff0c\u90a3\u4e48\u9650\u5236\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\n\n$$\n\\begin{cases}\nl_{\\max}\\le r_1 \\\\\nl_2\\le r_{\\min} \\\\\nr_1\\ge t-r_{\\min}\\\\\nl_{2}\\le T-l_{\\max}\n\\end{cases}\n$$\n\n\u66b4\u529b\u5224\u65ad\u6bcf\u4e2a\u70b9\u6240\u4ee3\u8868\u7684\u4e24\u4e2a\u533a\u95f4\u5206\u522b\u5728\u54ea\u4e2a\u96c6\u5408\u5373\u53ef\u3002\n\n- $l_{\\max}$\uff0c$r_{\\min}$ \u5728\u540c\u4e00\u96c6\u5408\n\n\u6ce8\u610f\u6b64\u65f6\u9700\u8981 $l_{\\max} \\le r_{\\min}$\uff0c\u9650\u5236\u8f6c\u5316\u4e3a\uff1a\n\n$$\n\\begin{cases}\nl_2\\le r_2 \\\\\nr_2\\ge t-r_{\\min}\\\\\nl_2\\le T-l_{\\max}\n\\end{cases}\n$$\n\n\u540e\u9762\u4e24\u4e2a\u9650\u5236\u90fd\u5f88\u597d\u89e3\u51b3\uff0c\u95ee\u9898\u5728\u4e8e\u7b2c\u4e00\u4e2a\u9650\u5236\u3002\u4f7f\u7528\u626b\u63cf\u7ebf\u626b\u63cf $x$\uff0c\u68c0\u67e5\u662f\u5426\u6ee1\u8db3 $l_2\\le x$ \u4e14 $r_2\\ge x$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u95f4\u63a5\u68c0\u67e5\u9650\u5236\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+m)$\u3002\n\n[Code](https://www.luogu.com.cn/paste/e3w8p3as)",
        "postTime": 1675944385,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF538H\u3010Summer Dichotomy\u3011"
    },
    {
        "content": "\u6211\u4eec\u8bbe\u4e24\u4e2a\u5c0f\u7ec4\u4eba\u6570\u4e3a $x,y$\n\n\u5148\u5904\u7406\u4e0d\u80fd\u5728\u540c\u4e00\u5c0f\u7ec4\u7684\u9650\u5236\uff0c\u8fde\u8fb9\u540e\u4e8c\u5206\u56fe\u67d3\u8272\u53ef\u4ee5\u76f4\u63a5\u6d88\u9664\u6389\u8fd9\u4e2a\u9650\u5236\u3002\n\n\u5269\u4e0b\u5c5e\u4e8e $[l_i,r_i]$ \u53ef\u4ee5\u5efa\u7acb\u51fa\u4e8c\u7ef4\u5e73\u9762\uff0c\u5c06\u9650\u5236\u753b\u4e0a\u53bb\u3002\n\n\u6700\u540e\u679a\u4e3e $x$ \u626b\u63cf\u7ebf\uff0c\u5efa\u7acb\u7ef4\u62a4\u6700\u5927\u503c\u7684\u7ebf\u6bb5\u6811\uff0c\u5c06\u9650\u5236\u5185\u7684\u70b9 $+1$\uff0c\u6700\u540e $y\\in[t-x,T-x]$ \u67e5\u6700\u5927\u503c\u662f\u5426\u4e3a $n$ \u5373\u53ef\u3002",
        "postTime": 1672898566,
        "uid": 359952,
        "name": "_lbw_",
        "ccfLevel": 6,
        "title": "\u6c89\u8ff7"
    },
    {
        "content": "\u6765\u70b9\u66b4\u529b\u4e14\u76f4\u89c2\u7684\u7b97\u6cd5\u3002\n\n\u9996\u5148\u8fd9\u79cd\u9009\u62e9\u4e24\u79cd\u5206\u7ec4\u7684\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a 2-SAT\u3002\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u4e24\u4e2a\u533a\u95f4 $[l_1,r_1],[l_2,r_2]$\uff0c\u5982\u679c $r_1<l_2$ \u6216\u8005 $l_1>r_2$\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u4eba\u4e0d\u80fd\u5206\u5230\u540c\u4e00\u7ec4\u91cc\u3002\n\n\u90a3\u4e48\u6839\u636e\u8fd9\u4e2a\u9650\u5236\u5efa\u7acb\u51fa 2-SAT \u6a21\u578b\u5373\u53ef\u3002\u76f4\u63a5\u7528\u524d\u7f00\u540e\u7f00\u4f18\u5316\u5efa\u56fe\uff0c\u5373\u53ef\u5c06\u65f6\u7a7a\u590d\u6742\u5ea6\u4f18\u5316\u5230 $O(n)$\u3002\n\n\u6ce8\u610f\u7531\u4e8e\u4f18\u5316\u5efa\u56fe\uff0c\u8981\u79bb\u6563\u5316\u539f\u533a\u95f4\u3002\n\n```c++\n#include<bits/stdc++.h>\n#define rep(i,x,y) for(int i=x;i<=y;++i)\n#define per(i,x,y) for(int i=x;i>=y;--i)\n#define lon long long\n#define mar(o) for(int E=fst[o],v=e[E].to;E;E=e[E].nxt,v=e[E].to)\n#define root(x) rot[x],1,inf\n#define lson tre[o].lv,l,mid\n#define rson tre[o].rv,mid+1,r\nusing namespace std;\nmt19937 rng( time(0) );\nconst int n7=2012345,z7=401234,m7=n7*2;\nstruct dino{int to,nxt;}e[m7];\nstruct golf{int id,l,r,L,R;}a[z7];\nstruct mist{int lv,rv;}tre[n7];\nint n,m,cnt,ecnt,fst[n7],t,dfn[n7],low[n7],ans[z7],lsh[n7];\nint top,sak[n7],in[n7],colc,col[n7],id[4][n7];\n\nint rd(){\n\tint shu=0;bool fu=0;char ch=getchar();\n\twhile( !isdigit(ch) ){if(ch=='-')fu=1;ch=getchar();}\n\twhile( isdigit(ch) )shu=(shu<<1)+(shu<<3)+ch-'0',ch=getchar();\n\treturn fu?-shu:shu;\n}\n\nvoid edge(int p,int q){\n\tecnt++;\n\te[ecnt]=(dino){q,fst[p]};\n\tfst[p]=ecnt;\n}\n\nvoid tar(int o){\n\tt++,dfn[o]=low[o]=t;\n\ttop++,sak[top]=o,in[o]=1;\n\tmar(o){\n\t\tif(!dfn[v])tar(v),low[o]=min(low[o],low[v]);\n\t\telse if(in[v]==1)low[o]=min(low[o],dfn[v]);\n\t}\n\tif(low[o]^dfn[o])return;\n\tcolc++;\n\twhile(sak[top+1]^o){\n\t\tcol[ sak[top] ]=colc;\n\t\tin[ sak[top] ]=0;\n\t\ttop--;\n\t}\n}\n\nvoid Dlsh(){\n\tint sz=0;\n\trep(i,1,n)sz++,lsh[sz]=a[i].l,sz++,lsh[sz]=a[i].r;\n\tsort(lsh+1,lsh+sz+1);\n\tsz=unique(lsh+1,lsh+sz+1)-lsh-1;\n\trep(i,1,n){\n\t\ta[i].L=lower_bound(lsh+1,lsh+sz+1,a[i].l)-lsh;\n\t\ta[i].R=lower_bound(lsh+1,lsh+sz+1,a[i].r)-lsh;\n\t}\n}\n\nint main(){\n\tint l0=rd(),r0=rd();\n\tn=rd(),m=rd(),cnt=n+n;\n\trep(i,1,n)a[i]=(golf){i,rd(),rd()};\n\tDlsh();\n\trep(i,0,3)rep(j,1,n*2)cnt++,id[i][j]=cnt;\n\trep(i,0,3){\n\t\tif(i<2){\n\t\t\tper(j,n*2-1,1)edge(id[i][j],id[i][j+1]);\n\t\t}\n\t\telse{\n\t\t\trep(j,2,n*2)edge(id[i][j],id[i][j-1]);\n\t\t}\n\t}\n\trep(i,1,n)edge(id[0][ a[i].L ],a[i].id+n);\n\trep(i,1,n)edge(id[1][ a[i].L ],a[i].id);\n\trep(i,1,n)edge(id[2][ a[i].R ],a[i].id+n);\n\trep(i,1,n)edge(id[3][ a[i].R ],a[i].id);\n\trep(i,1,n)edge(a[i].id,id[0][ a[i].R+1 ]);\n\trep(i,1,n)edge(a[i].id+n,id[1][ a[i].R+1 ]);\n\trep(i,1,n)edge(a[i].id,id[2][ a[i].L-1 ]);\n\trep(i,1,n)edge(a[i].id+n,id[3][ a[i].L-1 ]);\n\trep(i,1,m){\n\t\tint p=rd(),q=rd();\n\t\tedge(p,q+n),edge(p+n,q);\n\t\tedge(q,p+n),edge(q+n,p);\n\t}\n\trep(i,1,cnt)if(!dfn[i])tar(i);\n\trep(i,1,n)if(col[i]==col[i+n]){puts(\"IMPOSSIBLE\");return 0;}\n\tint l1=0,r1=1e9,l2=0,r2=1e9;\n\trep(i,1,n){\n\t\tif(col[i]>col[i+n]){\n\t\t\tans[i]=1,l1=max(l1,a[i].l),r1=min(r1,a[i].r);\n\t\t}\n\t\telse{\n\t\t\tans[i]=2,l2=max(l2,a[i].l),r2=min(r2,a[i].r);\n\t\t}\n\t}\n\tif(l1>r1||l2>r2||l1+l2>r0||r1+r2<l0){puts(\"IMPOSSIBLE\");return 0;}\n\tputs(\"POSSIBLE\");\n\tint ll=l1,rr=r1,val1=0,val2=0;\n\twhile(ll<=rr){\n\t\tint mid=(ll+rr)>>1;\n\t\tif(l2+mid>r0)rr=mid-1;\n\t\telse if(r2+mid<l0)ll=mid+1;\n\t\telse{val1=mid;break;}\n\t}\n\tll=l2,rr=r2;\n\twhile(ll<=rr){\n\t\tint mid=(ll+rr)>>1; \n\t\tif(val1+mid>r0)rr=mid-1;\n\t\telse if(val1+mid<l0)ll=mid+1;\n\t\telse{val2=mid;break;}\n\t}\n\tprintf(\"%d %d\\n\",val1,val2);\n\trep(i,1,n)printf(\"%d\",ans[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1649911479,
        "uid": 99623,
        "name": "BlankAo",
        "ccfLevel": 0,
        "title": "solution-cf538h"
    }
]