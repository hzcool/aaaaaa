[
    {
        "content": "## CF1330B Dreamoon Likes Permutations \u9898\u89e3\n\u8fd9\u9053\u9898\u76ee\u6211\u4eec\u4e0d\u59a8\u8fd9\u6837\u60f3\uff1a\n\n\u5047\u8bbe\u81f3\u5c11\u6709\u4e00\u79cd\u5212\u5206\u65b9\u6cd5\uff0c\u5219\u5212\u5206\u51fa\u6765\u7684\u4e24\u4e2a\u96c6\u5408\u4e2d\uff0c\u6bcf\u4e2a\u96c6\u5408\u4e2d\u7684\u6700\u5927\u503c\u5373\u4e3a\u8fd9\u4e2a\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\u3002\u987a\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u51fa\u521d\u59cb\u6570\u5217\u7684\u6700\u5927\u503c $Max$\uff0c\u7136\u540e\u5f97\u51fa\u4e24\u79cd\u53ef\u80fd\u7684\u5212\u5206\u65b9\u6cd5\uff1a\n- \u524d $Max$ \u4e2a\u6570\u5206\u4e3a\u4e00\u7ec4\uff0c\u540e $n-Max$ \u4e2a\u6570\u5206\u4e3a\u4e00\u7ec4\u3002\n- \u524d $n-Max$ \u4e2a\u6570\u5206\u4e3a\u4e00\u7ec4\uff0c\u540e $Max$ \u4e2a\u6570\u5206\u4e3a\u4e00\u7ec4\u3002\n\n\u6211\u4eec\u5f00\u4e00\u4e2a _check()_ \u51fd\u6570\u68c0\u6d4b\u4e0a\u8ff0\u4e24\u79cd\u5212\u5206\u65b9\u6cd5\u662f\u5426\u53ef\u884c\uff0c\u6700\u540e\u8f93\u51fa\u53ef\u884c\u7684\u65b9\u6cd5\u5373\u53ef\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53 $n$ \u521a\u597d\u662f $Max$ \u7684\u4e24\u500d\u65f6\uff0c\u53ea\u4f1a\u67091\u4e2d\u53ef\u80fd\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u6700\u591a\u53ea\u80fd\u67092\u79cd\u65b9\u6cd5\uff0c\u6240\u4ee5\u5728\u8f93\u51fa\u65f6\u4e0d\u7528\u5f00for\u5faa\u73af\uff0c\u9010\u4e2a\u5224\u65ad\u5c31\u884c\u4e86\u3002\n\n\u81f3\u4e8e _check()_ \u51fd\u6570\u600e\u4e48\u5199\uff0c\u6211\u60f3\u5e94\u8be5\u5f88\u7b80\u5355\u3002\u53ef\u4ee5\u8fd0\u7528\u6876\u6392\u7684\u601d\u60f3\uff0c\u628a\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u6570\u5206\u522b\u653e\u5165\u4e24\u4e2a\u6876\u4e2d\uff0c\u518d\u68c0\u67e5\u6bcf\u4e2a\u6876\u4e2d\u6709\u6ca1\u6709\u6f0f\u6389\u7684\u6570\u3002\u63a8\u8350\u4f7f\u7528C++ _STL_ \u4e2d\u7684 _map_ \u6765\u5b9e\u73b0\u3002\u4f60\u4e5f\u53ef\u4ee5\u7528 _set_ \u53bb\u91cd\u7684\u529e\u6cd5\u5224\u65ad\uff0c\u5c31\u662f\u5199\u8d77\u6765\u6ca1\u6709 _map_ \u597d\u5199\u3002\n\n\u601d\u8def\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u7684\uff0c\u8fd9\u662f\u6211\u7684AC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Rep(i,a,b) for(register int i=(a);i>=(b);--i)\nusing namespace std;\nconst int maxn=200050;\nint T,n,a[maxn];\nbool check(int x,int y)\n{\n\tmap<int,int> mp1,mp2; //\u7528map\u5f00\u4e24\u4e2a\u6876\n\tFor(i,1,x) mp1[a[i]]++;\n    For(i,x+1,x+y) mp2[a[i]]++;\n    For(i,1,x)\n        if(mp1[i]!=1)\n\t\t\treturn false;\n    For(i,1,y)\n        if(mp2[i]!=1)\n\t\t\treturn false;\n    return true;\n}\nint main()\n{\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tcin>>n;\n\t\tint Max=0;\n\t\tFor(i,1,n)\n\t\t\tcin>>a[i],Max=max(a[i],Max);\n\t\tint cnt=0;\n\t\tbool f1=false,f2=false;\n\t\tif(check(Max,n-Max)) f1=true,cnt++;\n\t\tif(check(n-Max,Max)) f2=true,cnt++;\n\t\tif(f1||f2) //\u81f3\u5c11\u6709\u4e00\u79cd\u5212\u5206\u65b9\u6cd5\n\t\t{\n\t\t\tif(Max+Max==n) //n\u521a\u597d\u662fMax\u7684\u4e24\u500d\uff0c\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\n\t\t\t\tcout<<1<<endl<<Max<<' '<<n-Max<<endl;\n\t\t\telse //\u6709\u4e00\u79cd\u6216\u4e24\u79cd\u65b9\u6cd5\uff0c\u89c6cnt\u800c\u5b9a\n\t\t\t{\n\t\t\t\tcout<<cnt<<endl;\n\t\t\t\tif(f2) cout<<n-Max<<' '<<Max<<endl;\n\t\t\t\tif(f1) cout<<Max<<' '<<n-Max<<endl;\n\t\t\t}\n\t\t}\n\t\telse cout<<0<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1586180691,
        "uid": 219866,
        "name": "Blunt_Feeling",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1330B \u3010Dreamoon Likes Permutations\u3011"
    },
    {
        "content": "## \u9898\u76ee\u7ffb\u8bd1\n\n\u5b9a\u4e49\u957f\u5ea6\u4e3a $m$ \u7f6e\u6362\u4e3a $m$ \u4e2a\u6570\u7684\u5e8f\u5217\uff0c\u4e14\u8fd9 $m$ \u4e2a\u6570\u5206\u522b\u4e3a $1,2,3...m$\n\n\u73b0\u5728 $2$ \u4e2a\u7f6e\u6362\u7ec4\u6210\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6c42\u51fa\u8fd9 $2$ \u4e2a\u7f6e\u6362\u5bf9\u5e94\u7684 $m$ \uff0c\u5982\u679c\u6709\u591a\u7ec4\uff0c\u5219\u6309\u7b2c\u4e00\u4e2a $m$ \u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u3002\n\n#### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $T$ \uff0c\u8868\u793a\u6709\u591a\u7ec4\u6570\u636e\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e:\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n$ \uff0c\u8868\u793a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n\u7b2c\u4e8c\u884c $n$ \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6240\u7ed9\u7684\u5e8f\u5217\u3002\n\n#### \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e:\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $k$ \uff0c\u8868\u793a\u4e00\u5171\u6709 $k$ \u7ec4\u7f6e\u6362\u3002\n\n\u63a5\u4e0b\u6765 $k$ \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 $l1,l2$\uff0c\u8868\u793a\u4e24\u4e2a\u7f6e\u6362\u7684\u957f\u5ea6\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u601d\u8def\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff0c\u6211\u4eec\u53bb\u679a\u4e3e\u4e24\u4e2a\u7f6e\u6362\u7684\u65ad\u70b9\uff0c\u518d\u5f00\u4e24\u4e2a\u6876\uff0c\u7136\u540e\u6bcf\u4e2a\u6876\u6709\u4e00\u4e2a $cnt$\uff0c\u8868\u793a\u4ece\u6807\u53f7 $1$ \u5f00\u59cb\u5171\u6709\u591a\u5c11\u8fde\u7eed\u7684 $1$\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u65ad\u70b9\u524d/\u540e\u7684\u6700\u957f\u7f6e\u6362\u7684\u957f\u5ea6\u3002\u5982\u679c\u65ad\u70b9\u524d/\u540e\u7684\u6700\u957f\u7f6e\u6362\u957f\u5ea6\u6070\u597d\u5230\u4e86\u6211\u4eec\u7684\u65ad\u70b9\uff0c\u5c31\u8bb0\u5f55\u4e0b\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u679a\u4e3e\u65ad\u70b9\uff0c\u5bf9\u524d\u9762\u7684\u6876\u6253\u4e0a\u6807\u8bb0\uff0c\u5bf9\u540e\u9762\u7684\u6876\u62b9\u6389\u6807\u8bb0\uff0c\u5e76\u5bf9\u5404\u4e2a\u7684 $cnt$ \u66f4\u65b0\u3002\n\n## Code:\n~~~cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint T,n,cnt1,cnt2,len,ans[200001],a[200001],vis1[200001],vis2[200001];\nint main()\n{\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tcnt1=cnt2=len=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tvis1[i]=vis2[i]=0;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tvis2[a[i]]++;\n\t\twhile(vis2[cnt2+1]==1) cnt2++;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tvis1[a[i]]++;\n\t\t\tvis2[a[i]]--;\n\t\t\tif(vis1[a[i]]==2&&cnt1>=a[i]) cnt1=a[i]-1;\n\t\t\tif(vis2[a[i]]==0&&cnt2>=a[i]) cnt2=a[i]-1;\n\t\t\twhile(vis1[cnt1+1]==1) cnt1++;\n\t\t\twhile(vis2[cnt2+1]==1) cnt2++;\n\t\t\tif(cnt1==i&&cnt2==n-i)\n\t\t\t\tans[++len]=i;\n\t\t}\n\t\tprintf(\"%d\\n\",len);\n\t\tfor(int i=1;i<=len;i++)\n\t\t\tprintf(\"%d %d\\n\",ans[i],n-ans[i]);\n\t}\n}\n~~~",
        "postTime": 1586139579,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1330B \u3010Dreamoon Likes Permutations\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u5173\u952e\u70b9\u662f\u627e\u5230\u6700\u5927\u503c\uff0c\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a\u53ea\u6709\u627e\u5230\u6700\u5927\u503c\u4e86\u4e4b\u540e\u6211\u4eec\u624d\u80fd\u786e\u5b9a\u4e24\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a $\\max(a_1,a_2,\u2026,a_n)$\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u957f\u5ea6\u5c31\u662f $n$ \u51cf\u53bb\u90a3\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5f53\u7136\uff0c\u8fd9\u4e24\u4e2a\u5e8f\u5217\u957f\u5ea6\u987a\u5e8f\u8fd8\u6ca1\u6709\u5b8c\u5168\u786e\u5b9a\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u5206\u7c7b\u8ba8\u8bba\u5b83\u4eec\u4e24\u4e2a\u7684\u4f4d\u7f6e\uff08\u7531\u6b64\u6211\u4eec\u8fd8\u53ef\u4ee5\u5f97\u51fa\u6700\u591a\u6709\u4e24\u4e2a\u7b54\u6848\uff09\uff0c\u7136\u540e\u6211\u4eec\u518d\u5224\u65ad\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u90fd\u6210\u7acb\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u7b2c\u4e00\u4e2a\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3 $1$~$\\max(a_1,a_2,\u2026,a_n)$ \u7684\u6240\u6709\u6b63\u6574\u6570\u90fd\u51fa\u73b0\u8fc7\uff0c\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3 $1$~$n-\\max(a_1,a_2,\u2026,a_n)$ \u7684\u6240\u6709\u6b63\u6574\u6570\u90fd\u51fa\u73b0\u8fc7\uff0c\u5982\u679c\u4e24\u4e2a\u6761\u4ef6\u90fd\u6210\u7acb\uff0c\u7b54\u6848\u5c31\u591a\u4e00\u4e2a\u3002\u5426\u5219\u4e0d\u53d8\u3002\u3002\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u8303\u56f4\u5185\u6240\u6709\u6b63\u6574\u6570\u90fd\u51fa\u73b0\u8fc7\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6392\u5e8f\uff08\u4f46\u5fc5\u987b\u4fdd\u8bc1\u4f60\u4f7f\u7528\u7684\u6392\u5e8f\u4e0d\u4f1a\u8d85\u65f6\uff0c\u6bd4\u5982\u5feb\u901f\u6392\u5e8f\uff0c\u5f52\u5e76\u6392\u5e8f\uff0c\u5806\u6392\u5e8f\uff09\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 set\uff0cmap\uff0cbitset \u7b49\u4e00\u7cfb\u5217\u65b9\u6cd5\u3002\u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f set\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n \\log n)$\uff08\u8fd9\u91cc\u6307\u4f7f\u7528 set \u53bb\u91cd\u7684\u7b97\u6cd5,\u4f46\u597d\u50cf\u4f7f\u7528 bitset \u4f1a\u8ba9\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 $O(n)$\u3002\u3002\u3002\uff09\n\n# code\uff1a\n```\n#include<cstdio>\n#include<set>\nusing namespace std;\ninline int read(){\n\tint x=0;\n\tbool f=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-'){\n\t\t\tf=1;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn f?-x:x;\n}\nint a[200005];\nint main(){\n    int t,i;\n    t=read();\n    for(i=1;i<=t;i++){\n    \tint n,j,maxn=0,ans=0,l1,l2,l11,l22;\n    \tn=read();\n    \tfor(j=1;j<=n;j++){\n    \t\ta[j]=read();\n    \t\tif(a[maxn]<a[j]){\n    \t\t\tmaxn=j;\n    \t\t}\n    \t}\n    \tif(a[maxn]>=maxn){\n    \t\tset<int> s;\n    \t\tfor(j=1;j<=a[maxn];j++){\n    \t\t\ts.insert(a[j]);\n    \t\t}\n    \t\tif(s.size()==a[maxn]&&*s.begin()==1&&*(--s.end())==a[maxn]){\n    \t\t\ts.clear();\n    \t\t\tfor(j=a[maxn]+1;j<=n;j++){\n    \t\t\t    s.insert(a[j]);\n    \t\t    }\n    \t\t    if(*s.begin()==1&&*(--s.end())==n-a[maxn]&&s.size()==n-a[maxn]){\n    \t\t    \tans++;\n    \t\t    \tl1=a[maxn];\n    \t\t    \tl2=n-a[maxn];\n    \t\t    }\n    \t\t}\n    \t}\n    \tif(n-a[maxn]+1<=maxn){\n    \t\tset<int> s;\n    \t\tfor(j=1;j<=n-a[maxn];j++){\n    \t\t\ts.insert(a[j]);\n    \t\t}\n    \t\tif(s.size()==n-a[maxn]&&*s.begin()==1&&*(--s.end())==n-a[maxn]){\n    \t\t\ts.clear();\n    \t\t\tfor(j=n-a[maxn]+1;j<=n;j++){\n    \t\t\t    s.insert(a[j]);\n    \t\t    }\n    \t\t    if(*s.begin()==1&&*(--s.end())==a[maxn]&&s.size()==a[maxn]){\n    \t\t    \tans+=2;\n\t\t\t\t\tl11=n-a[maxn];\n    \t\t    \tl22=a[maxn];\n    \t\t    }\n    \t\t}\n    \t}\n    \tif(ans==0){\n    \t\tprintf(\"0\\n\");\n    \t}\n    \tif(ans==1){\n    \t\tprintf(\"1\\n%d %d\\n\",l1,l2);\n    \t}\n    \tif(ans==2){\n    \t\tprintf(\"1\\n%d %d\\n\",l11,l22);\n    \t}\n    \tif(ans==3){\n    \t    printf(\"2\\n%d %d\\n%d %d\\n\",l1,l2,l11,l22);\n    \t}\n    }\n\treturn 0;\n}\n```\n",
        "postTime": 1586158079,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1330B \u3010Dreamoon Likes Permutations\u3011"
    },
    {
        "content": "# Solution For CF1330B\n\n## \u9898\u610f:\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217,\u5c06\u5176\u62c6\u6210\u957f\u5ea6\u4e3a $n_1$ $n_2$ \u7684\u4e24\u4e2a\u5e8f\u5217,\u4f7f\u5f97\u4e24\u4e2a\u5e8f\u5217\u4e3a $1-n_1$ , $1-n_2$ \u7684\u6392\u5217,\u6c42 $n_1$ , $n_2$\n\n## \u5206\u6790:\n\n\u770b\u5230\u8fd9\u9053\u9898,\u6211\u7b2c\u4e00\u601d\u8def\u662f\u679a\u4e3e\u65ad\u70b9,\u68c0\u67e5\u662f\u5426\u53ef\u884c,\u7136\u540e\u8f93\u51fa\u5373\u53ef.\u4f46\u6211\u770b\u4e86\u4e00\u773c\u6570\u636e\u8303\u56f4,\u522b\u8bf4\u679a\u4e3e\u540e ``sort`` \u4e86,\u7528 $O(n^2)$ \u5927\u6982\u7387\u90fd\u4f1a\u70b8.\u770b\u6765\u5f97\u627e\u5230\u4e00\u79cd\u66f4\u5feb\u6377\u9ad8\u6548\u7684\u7b97\u6cd5.\u4ed4\u7ec6\u60f3\u4e00\u60f3,\u68c0\u67e5\u7684\u90e8\u5206\u4e0d\u592a\u53ef\u80fd\u8fdb\u4e00\u6b65\u4f18\u5316,\u90a3\u4e48\u65ad\u70b9\u7684\u679a\u4e3e\u5f97\u8fdb\u4e00\u6b65\u4f18\u5316.\u5982\u4f55\u4f18\u5316\u5462?\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u5e8f\u5217\u4e2d\u6709\u6700\u5927\u503c,\u90a3\u4e48\u5728\u5206\u89e3\u51fa\u7684\u4e24\u4e2a\u5e8f\u5217\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u5e8f\u5217\u5305\u542b\u8fd9\u4e2a\u6700\u5927\u503c.\u6211\u4eec\u4e0d\u59a8\u8bbe\u8fd9\u4e2a\u6700\u5927\u503c\u4e3a $max$ , \u90a3\u4e48\u8fd9\u4e24\u4e2a\u5e8f\u5217\u4e00\u5b9a\u662f\u4ece $1$ \u5230 $max$ , \u4ece $max + 1$ \u518d\u5230 $n$ \u6216\u8005\u662f\u4ece $1$ \u5230 $n - max$ , \u4ece $n - max + 1$ \u518d\u5230 $n$ \u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u5c31\u7b80\u5355\u591a\u4e86\n\n## \u4ee3\u7801:\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 10;\nint T;\nint n;\nint a[N];\nint a1[N];\nint flag11;\nint flag22;\nint main()\n{\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tflag11 = 0;\n\t\tflag22 = 0;\n\t\tmemset(a1, 0, sizeof(a1));\n\t\tint maxx = 0;\n\t\tcin >> n;\n\t\tfor(int i = 1; i <= n; i++)\n\t\t{\n\t\t\tcin >> a[i];\n\t\t\ta1[i] = a[i];\n\t\t\tmaxx = max(maxx, a[i]);\n\t\t}\n\t\tsort(a + 1, a + maxx + 1);\n\t\tsort(a + maxx + 1, a + n + 1);\n\t\tbool flag = false;\n\t\tfor(int i = 2; i <= maxx; i++)\n\t\t{\n\t\t\tif(a[i] - a[i - 1] != 1)\n\t\t\t{\n\t\t\t\tflag = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ta[maxx] = 0; \n\t\tfor(int i = maxx + 1; i <= n; i++)\n\t\t{\n\t\t\tif(a[i] - a[i - 1] != 1)\n\t\t\t{\n\t\t\t\tflag = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag == false)\n\t\t{\n\t\t\tflag11 = 1;\n\t\t}\n\t\tsort(a1 + 1, a1 + (n - maxx + 1));\n\t\tsort(a1 + n - maxx + 1, a1 + n + 1);\n\t\tbool flag1 = false;\n\t\tfor(int i = 1; i <= n- maxx; i++)\n\t\t{\n\t\t\tif(a1[i] - a1[i - 1] != 1)\n\t\t\t{\n\t\t\t\tflag1 = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ta1[n - maxx] = 0;\n\t\tfor(int i = n - maxx + 1; i <= n; i++)\n\t\t{\n\t\t\tif(a1[i] - a1[i - 1] != 1)\n\t\t\t{\n\t\t\t\tflag1 = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag1 == false)\n\t\t{\n\t\t\tflag22 = 1;\n\t\t}\n\t\tif((flag11 + flag22) == 0)\n\t\t{\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\telse if(maxx == n - maxx)\n\t\t{\n\t\t\tputs(\"1\");\n\t\t\tcout << maxx << \" \" << n - maxx<< endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << flag11 + flag22 << endl;\n\t\t\tif(flag11)\n\t\t\t{\n\t\t\t\tcout << maxx << \" \" << n - maxx << endl; \n\t\t\t}\n\t\t\tif(flag22)\n\t\t\t{\n\t\t\t\tcout << n - maxx << \" \" << maxx << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1627006667,
        "uid": 453778,
        "name": "Need_No_Name",
        "ccfLevel": 0,
        "title": "CF1330B \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5b8c\u5168\u53ef\u4ee5\u7528\u66b4\u529b\u7684\u65b9\u6cd5\u8fc7\u3002\n\n## \u9898\u610f\n\n\u7ed9\u5f88\u591a\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u6c42\u51fa\u6765\u6709\u591a\u5c11\u4e2a\u5207\u5206\u70b9\uff0c\u4f7f\u5b83\u524d\u9762\u7684\u5b50\u5e8f\u5217\u662f\u4e00\u4e2a\u6392\u5217\uff0c\u540e\u9762\u7684\u5b50\u5e8f\u5217\u4e5f\u662f\u4e00\u4e2a\u6392\u5217\u3002\u4e5f\u8981\u8f93\u51fa\u65b9\u6848\u3002\n\n## \u601d\u8def\n\n\u60f3\u4e00\u4e0b\u6700\u6734\u7d20\u7684\u7b97\u6cd5\uff1a\u679a\u4e3e\u5206\u5272\u70b9\uff0c\u5224\u65ad\u5de6\u53f3\u4e24\u8fb9\u662f\u5426\u4e3a\u67d0\u4e2a\u6392\u5217\uff08\u6bd4\u5982\u679a\u4e3e\u5206\u5272\u70b9\u4e3a $i$\uff0c\u5de6\u8fb9\u770b $a_1\\sim a_i$ \u662f\u5426\u4e3a $i$ \u7684\u4e00\u4e2a\u6392\u5217\uff1b\u53f3\u8fb9\u770b $a_{i+1} \\sim a_n$ \u662f\u5426\u4e3a $n-i$ \u7684\u4e00\u4e2a\u6392\u5217\uff09\u3002\n\n**\u5148\u8003\u8651\u5de6\u9762\u7684\u5e8f\u5217\u5982\u4f55\u786e\u5b9a\u662f\u5426\u4e3a\u4e00\u4e2a\u6392\u5217\uff1a**\n\n\u9996\u5148\uff0c\u679a\u4e3e\u5230\u4e00\u4e2a\u5206\u5272\u70b9\u7684\u65f6\u5019\uff0c\u7528\u4e00\u4e2a `bool` \u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u6570\u662f\u5426\u51fa\u73b0\u8fc7\u3002\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u5c31\u628a\u8fd9\u4e2a\u6570\u6807\u4e3a $1$\uff0c\u5426\u5219\u76f4\u63a5 pass \u6389\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5e8f\u5217\u7684\u67d0\u4e2a\u6570\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u8fd9\u4e2a\u5e8f\u5217\u662f\u4e0d\u53ef\u80fd\u6210\u4e3a\u4e00\u4e2a\u6392\u5217\u7684\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6c42\u51fa\u6765\u8fd9\u4e2a\u5e8f\u5217\u7684\u548c\uff0c\u5f53\u8fd9\u4e2a\u548c\u4e3a\u957f\u5ea6\u4e3a\u5f53\u524d\u4f4d\u7f6e\u7684\u6392\u5217\u7684\u548c\u65f6\uff0c\u8fd9\u4e2a\u5e8f\u5217\u5c31\u4e00\u5b9a\u4e3a\u4e00\u79cd\u6392\u5217\uff1b\u5426\u5219\u4e5f\u4e0d\u662f\u3002\n\n\u6c42\u8fd9\u4e2a\u548c\uff0c\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u9884\u5904\u7406\u51fa\u6765\uff0c\u4e5f\u53ef\u4ee5\u6bcf\u6b21\u679a\u4e3e\u65f6\u5c31\u52a0\u4e0a\u8fd9\u4e2a\u6570\uff08\u8be6\u89c1\u4ee3\u7801\uff09\u3002\n\n**\u518d\u8003\u8651\u53f3\u9762\u7684\u5e8f\u5217\u5982\u4f55\u786e\u5b9a\u662f\u5426\u4e3a\u4e00\u4e2a\u6392\u5217\uff1a**\n\n\u540c\u6837\uff0c\u548c\u5de6\u9762\u7684\u5e8f\u5217\u7684\u5224\u65ad\u65b9\u6cd5\u4e00\u6837\uff1a\n\n\u9996\u5148\uff0c\u5148\u5224\u65ad\u540e\u9762\u8fd9\u4e2a\u5e8f\u5217\u7684\u548c\u662f\u5426\u4e3a\u6392\u5217\u7684\u548c\uff0c\u4e0d\u662f\u7684\u8bdd\u5148 pass \u6389\uff0c\u5426\u5219\u5c31\u7ee7\u7eed\u5224\u65ad\u3002\n\n\u63a5\u7740\uff0c\u548c\u4e0a\u9762\u4e00\u6837\uff0c\u66b4\u529b\u5224\u65ad\u662f\u5426\u8fd9\u4e2a\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u3002\u5982\u679c\u90fd\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e8f\u5217\u80af\u5b9a\u662f\u4e00\u79cd\u6392\u5217\u3002\n\n## \u4ee3\u7801\n\n\u4ee3\u7801\u91cc\uff0c\u7b97\u51fa\u5de6\u9762\u7684\u5e8f\u5217\u76f4\u63a5\u7528\u4e00\u4e2a\u6570\u52a0\u4e0a\u4e86\uff0c\u6ca1\u6709\u7528\u524d\u7f00\u548c\uff0c\u4f46\u662f\u6c42\u53f3\u9762\u7684\u5e8f\u5217\uff0c\u8fd8\u662f\u8981\u7528\u540e\u7f00\u548c\u7684\u3002\n\n\u6211\u4f7f\u7528\u4e86 `bitset` \u66ff\u4ee3\u4e86\u601d\u8def\u4e2d\u7684 `bool` \u6570\u7ec4\uff0c\u4f7f\u7528\u65f6\u90fd\u5dee\u4e0d\u591a\uff0c\u5c06\u6570\u7ec4\u4e2d\u6240\u6709\u6570\u8d4b `0` \u4f7f\u7528 `xxx.reset()` \u5373\u53ef\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\uff0c\u5c31\u662f\u6c42\u533a\u95f4\u548c\u9700\u8981\u5f00 `long long`\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint a[200010];\n\nlong long hzh[200010]; // \u540e\u7f00\u548c\u6570\u7ec4\n\nbitset<200010> vis,vis2;\n\nint ans[200010];\n\nint main()\n{\n\tios::sync_with_stdio(false),cin.tie(0);\n\tint t,n;\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\t// \u540e\u7f00\u548c\u7531\u4e8e\u662f\u8d4b\u503c\u64cd\u4f5c\uff0c\u6240\u4ee5\u591a\u6d4b\u4e5f\u4e0d\u7528\u6e05\u7a7a\n\t\tint k=0; // \u65b9\u6848\u6570\n\t\tvis.reset(); // vis \u6570\u7ec4\u591a\u6d4b\u6e05\u7a7a\n\t\tcin>>n;\n\t\tfor(int i=1; i<=n; ++i)\n\t\t{\n\t\t\tcin>>a[i];\n\t\t}\n\t\thzh[n+1]=0; // n+1 \u8981\u6e05\u7a7a\u4e3a 0\n\t\tfor(int i=n; i>=1; --i) // \u6c42\u540e\u7f00\u6570\u7ec4\n\t\t{\n\t\t\thzh[i]=hzh[i+1]+a[i];\n\t\t}\n\t\tlong long qzh=0; // \u524d\u7f00\u548c\u76f4\u63a5\u626b\u4e00\u904d\u5373\u53ef\n\t\tfor(int i=1; i<n; ++i) // \u679a\u4e3e\u5207\u5206\u70b9\n\t\t{\n\t\t    qzh+=a[i]; // \u524d\u7f00\u548c\u52a0\u4e0a\u5f53\u524d\u6570\n\t\t\tif(vis[a[i]]) break; // \u5982\u679c\u5de6\u9762\u7684\u533a\u95f4\u4e4b\u524d\u6709\u8fd9\u4e2a\u6570\uff0c\u5c31\u4e0d\u662f\u4e00\u4e2a\u6392\u5217\n\t\t\tvis[a[i]]=1; // \u6807\u8bb0\u51fa\u73b0\u4e86\u8fd9\u4e2a\u6570\n\t\t\tif(qzh==(1ll*(i+1)*i>>1) /* \u5de6\u9762\u7684\u533a\u95f4\uff0c\u5224\u65ad\u5f53\u524d\u533a\u95f4\u4e4b\u548c\u662f\u5426\u4e3a\u6392\u5217\u7684\u533a\u95f4\u548c */ && hzh[i+1]==(1ll*(n-i+1)*(n-i)>>1) /* \u53f3\u9762\u7684\u533a\u95f4\uff0c\u540c\u4e3a\u5224\u65ad\u662f\u5426\u548c\u76f8\u7b49 */ )\n\t\t\t{\n\t\t\t\t// \u5982\u679c\u5230\u76ee\u524d\u90fd\u6ee1\u8db3\u8981\u6c42\uff0c\u73b0\u5728\u5c31\u6765\u770b\u53f3\u9762\u7684\u533a\u95f4\u662f\u5426\u6709\u91cd\u590d\u7684\u6570\n\t\t\t\tvis2.reset(); // vis2 \u4e3a\u6807\u8bb0\u53f3\u9762\u7684\u533a\u95f4\u51fa\u73b0\u8fc7\u7684\u6570\uff0c\u6bcf\u6b21\u8981\u6e05\u7a7a\n\t\t\t\tbool flag=1; // \u662f\u5426\u6ee1\u8db3\u8981\u6c42\n\t\t\t\tint j=n; // \u4ece\u6700\u53f3\u7aef\u70b9\u5f00\u59cb\u679a\u4e3e\uff0c\u5b9e\u9645\u4e0a\u4ece\u5de6\u9762\u679a\u4e3e\u4e5f\u884c\uff0c\u662f\u4e2a\u4eba\u4e60\u60ef\n\t\t\t\twhile(j>i)\n\t\t\t\t{\n\t\t\t\t\tif(vis2[a[j]]) // \u662f\u5426\u4e4b\u524d\u6709\u8fd9\u4e2a\u6570\uff0c\u5982\u679c\u6709\uff0c\u5c31\u4e0d\u662f\u4e00\u4e2a\u6392\u5217\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tvis2[a[j]]=1; // \u6807\u8bb0\u8fd9\u4e2a\u6570\n\t\t\t\t\t--j;\n\t\t\t\t}\n\t\t\t\tif(flag) // \u5982\u679c\u6ee1\u8db3\u8981\u6c42\uff0c\u52a0\u5165\u7b54\u6848\u6570\u7ec4\n\t\t\t\t{\n\t\t\t\t\tans[++k]=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<k<<endl; // \u8f93\u51fa\u65b9\u6848\u6570\n\t\tfor(int i=1; i<=k; ++i)\n\t\t{\n\t\t\tcout<<ans[i]<<' '<<n-ans[i]<<endl; // \u8f93\u51fa\u4e24\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626874235,
        "uid": 353688,
        "name": "\u738b\u7199\u6587",
        "ccfLevel": 0,
        "title": "CF1330B \u9898\u89e3"
    },
    {
        "content": "## [B] Dreamoon Likes Premutations\n\n\u8003\u8651\u4e00\u4e0b\u6392\u5217\u7684\u6027\u8d28\uff1a\n\n- \u6392\u5217\u5185\u5404\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\uff0c\u5373\u957f\u5ea6 $l$ \u7684\u6392\u5217\u5185\u4e0d\u540c\u7684\u5143\u7d20\u6709 $l$ \u4e2a\u3002\n- \u6392\u5217\u7684\u548c\u5c31\u662f\u7b49\u5dee\u6570\u5217\u6c42\u548c\uff0c$sum=\\frac{l\\times(l+1)}{2}$\u3002\n- \u6392\u5217\u5185\u6700\u5927\u7684\u5143\u7d20\u5c31\u662f\u6392\u5217\u7684\u957f\u5ea6\u3002\n\n\u6211\u7684\u505a\u6cd5\u7528\u5230\u4e86\u6027\u8d28\u4e00\u3001\u4e8c\uff0c\u5b98\u65b9\u9898\u89e3\u7528\u5230\u4e86\u6027\u8d28\u4e09\u3002\n\n**\u6211\u7684\u505a\u6cd5**\uff1a\n\n\u8003\u8651\u679a\u4e3e\u5206\u754c\u70b9\uff0c\u90a3\u4e48\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u5408\u6cd5\u6392\u5217\u5f53\u4e14\u4ec5\u5f53\u540c\u65f6\u6ee1\u8db3\u6027\u8d28\u4e00\u548c\u6027\u8d28\u4e8c\u3002\u5bb9\u6613\u8bc1\u660e\u5f53 $a_i$ \u662f\u6b63\u6570\u65f6\u8fd9\u6837\u505a\u4e00\u5b9a\u6b63\u786e\u3002\u6570\u636e\u8303\u56f4\u4fdd\u8bc1\u4e86\u8fd9\u4e00\u70b9\u3002\u6027\u8d28\u4e00\u548c\u6027\u8d28\u4e8c\u90fd\u53ef\u4ee5 $O(n)$ \u9884\u5904\u7406\uff0c\u7136\u540e\u6700\u540e\u679a\u4e3e\u5206\u754c\u70b9\u4e5f\u662f $O(n)$\u7684\u3002\n\n```\n#include<bits/stdc++.h>\n#define int long long\n#define ll long long\nusing std::pair;\nusing std::make_pair;\nnamespace QiFeng233{\n\tint t,n,k;\n\tint a[200020],dif1[200020],dif2[200020],vis[200020];\n\tll s[200020];\n\tpair<ll,ll> ans[200020];\n\tvoid solve(){\n\t\tscanf(\"%lld\",&t);\n\t\twhile(t--){\n\t\t\tscanf(\"%lld\",&n);\n\t\t\tfor(int i=0;i<=n+1;++i)a[i]=0,dif1[i]=0,dif2[i]=0,s[i]=0;\n\t\t\tk=0;\n\t\t\tfor(int i=1;i<=n;++i)scanf(\"%lld\",&a[i]),s[i]=s[i-1]+a[i];\n\t\t\tfor(int i=0;i<=n;++i)vis[i]=0;\n\t\t\tfor(int i=1;i<=n;++i){\n\t\t\t\tdif1[i]=dif1[i-1];\n\t\t\t\tif(!vis[a[i]])++dif1[i],vis[a[i]]=1;\n\t\t\t}\n\t\t\tfor(int i=0;i<=n;++i)vis[i]=0;\n\t\t\tfor(int i=n;i;--i){\n\t\t\t\tdif2[i]=dif2[i+1];\n\t\t\t\tif(!vis[a[i]])++dif2[i],vis[a[i]]=1;\n\t\t\t}\n\t\t\tfor(int i=1;i<n;++i){\n\t\t\t\tll s1=s[i],s2=s[n]-s[i],l1=i,l2=n-i;\n\t\t\t\tif(2*s1==l1*(l1+1)&&2*s2==l2*(l2+1)&&dif1[i]==l1&&dif2[i+1]==l2&&l1!=0&&l2!=0){\n\t\t\t\t\tans[++k]=make_pair(l1,l2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%lld\\n\",k);\n\t\t\tfor(int i=1;i<=k;++i)printf(\"%lld %lld\\n\",ans[i].first,ans[i].second);\n\t\t}\n\t}\n}\nsigned main(){\n\tQiFeng233::solve();\n\treturn 0;\n}\n```\n\n**\u5b98\u65b9\u9898\u89e3**\uff1a\n\n\u8bb0 $a_i$ \u4e2d\u6700\u5927\u7684\u6570\u4e3a $ma$\uff0c\u90a3\u4e48\u6839\u636e\u6027\u8d28\u4e09\uff0c\u6700\u591a\u53ef\u80fd\u5212\u5206\u4e3a\u4e24\u4e2a\u6392\u5217\u2014\u2014$(ma,n-ma)$ \u6216\u8005 $(n-ma,ma)$\u3002\u6211\u4eec\u53ea\u7528 $O(n)$ \u68c0\u67e5\u4e00\u4e0b\u5b83\u4eec\u662f\u5426\u662f\u5408\u6cd5\u7684\u6392\u5217\u5373\u53ef\u3002\n\n\u4ee3\u7801\u6765\u81ea\u4e8e\u5b98\u65b9\u9898\u89e3\u3002\n\n```\n#include<cstdio>\nconst int SIZE = 200000;\nint p[SIZE];\nint ans[SIZE][2];\nint ans_cnt;\nbool judge(int a[], int n){\n    static int used[SIZE+1];\n    for(int i = 1; i <= n; i++) used[i] = 0;\n    for(int i = 0; i < n; i++) used[a[i]] = 1;\n    for(int i = 1; i <= n; i++) {\n        if(!used[i]) return 0;\n    }\n    return 1;\n}\nbool judge(int len1, int n){\n    return judge(p, len1) && judge(p + len1, n - len1);\n}\nint main() {\n    int t = 0;\n    scanf(\"%d\", &t);\n    while(t--) {\n        ans_cnt = 0;\n        int n;\n        scanf(\"%d\", &n);\n        int ma=0;\n        for(int i = 0; i < n; i++) {\n            scanf(\"%d\", &p[i]);\n            if(ma < p[i]) ma = p[i];\n        }\n        if(judge(n - ma,n)) {\n            ans[ans_cnt][0] = n - ma;\n            ans[ans_cnt++][1] = ma;\n        }\n        if(ma * 2 != n && judge(ma,n)) {\n            ans[ans_cnt][0] = ma;\n            ans[ans_cnt++][1] = n - ma;\n        }\n        printf(\"%d\\n\", ans_cnt);\n        for(int i = 0; i < ans_cnt; i++) {\n            printf(\"%d %d\\n\", ans[i][0], ans[i][1]);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1586144278,
        "uid": 233357,
        "name": "QiFeng233",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1330B \u3010Dreamoon Likes Permutations\u3011"
    },
    {
        "content": "## 1 \u9898\u610f\u7b80\u8ff0\n\u7ed9\u4f60 $n$ \u4e2a\u6570\uff0c\u8f93\u51fa\u6240\u6709\u5212\u5206\u65b9\u6848\uff0c\u4f7f\u5f97\u5212\u5206\u540e\u5de6\u53f3\u7684\u4e24\u4e2a\u5e8f\u5217\u90fd\u662f\u4ece $1$ \u5230 $k$ \u7684\u4e00\u79cd\u6392\u5217\u3002\n## 2 \u601d\u8def\u7b80\u8ff0\n\u8fd9\u9898\u5176\u5b9e\u6bd42A\u597d\u60f3?\n\n\u524d\u540e\u5206\u522b\u7edf\u8ba1\u5408\u6cd5\u4f4d\u7f6e\u7136\u540e\u5bf9\u6bd4\u5373\u53ef\n\n\u4e00\u4e2a\u6392\u5217\u662f\u5408\u6cd5\n\n\u7a0d\u7a0d\u6709\u4e00\u70b9\u70b9\u590d\u6742(\u6307Wa\u4e863\u53d1)\n## 3 \u4ee3\u7801\n```\n# include <bits/stdc++.h>\nconst int N=200010,INF=0x3f3f3f3f;\nint a[N],n,T;\nbool pre[N],suf[N];\nstd::map <int,bool> Map;\nint read()\n{\n\tint res,f=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9')\n\t\tif(c=='-')f=-1;\n\tres=c-48;\n\twhile((c=getchar())>='0'&&c<='9')\n\t\tres=res*10+c-48;\n\treturn res*f;\n}\nint main(void){\n\tT=read();\n\twhile(T--)\n    {\n\t\tMap.clear();\n\t\tn=read();\n\t\tfor(int i=1;i<=n;++i){\n\t\t\ta[i]=read();\n\t\t\tpre[i]=suf[i]=false;\n\t\t}\n\t\tint cnt=0,maxx=0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif(!Map[a[i]]) Map[a[i]]=true,++cnt;\n\t\t\tmaxx=std::max(maxx,a[i]);\n\t\t\tif(cnt==i&&maxx==i) pre[i]=true;\n\t\t}\n\t\tMap.clear();\n\t\tmaxx=0,cnt=0;\n\t\tfor(int i=n;i;--i){\n\t\t\tif(!Map[a[i]]) Map[a[i]]=true,++cnt;\n\t\t\tmaxx=std::max(maxx,a[i]);\n\t\t\tif(cnt==n-i+1&&maxx==n-i+1) suf[i]=true;\n        }\n\t\tint ans=0;\n\t\tfor(int i=1;i<n;++i) if(pre[i]&&suf[i+1]) ++ans;\n\t\tprintf(\"%d\\n\",ans);\n\t\tfor(int i=1;i<n;++i) if(pre[i]&&suf[i+1]) printf(\"%d %d\\n\",i,n-i);\n\t}\n \n\treturn 0;\n}\n```\n## 4 \u603b\u7ed3\n\u601d\u8def\u663e\u7136\uff0c\u5199\u8d77\u6765\u6709\u4e00\u70b9\u70b9\u6076\u5fc3\n\n\u6b63\u5e38\u76842B(\u6307\u6211\u8fc7\u4e0d\u53bb)",
        "postTime": 1586091749,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1330B \u3010Dreamoon Likes Permutations\u3011"
    }
]