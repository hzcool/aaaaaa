[
    {
        "content": "\u6807\u9898\u5c31\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u3002\u6240\u4ee5\u5148dfs\u4e00\u904d\u8fdb\u884c\u4e8c\u5206\u56fe\u67d3\u8272\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/14831.png)\n\n\u8fde\u63a5\u6240\u6709\u7684\u9ed1\u767d\u70b9\u5bf9\u9700\u8981$cnt[black]*cnt[white]$\u6761\u8fb9\uff0c\u800c\u6811\u4e0a\u5171\u6709$n-1$\u6761\u8fb9\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a\uff1a\n\n$$cnt[black]*cnt[white]-n+1$$\n\n35\u884c\u65e0\u538b\u884cAC\u4ee3\u7801\n```\n#include<cstdio>\nstruct Edge\n{\n\tint to,next;\n}edge[200005];\nint first[100005],size;\nvoid AddEdge(int u,int v)\n{\n\tedge[++size]=(Edge){v,first[u]};\n\tfirst[u]=size;\n}\nint color[100005];\nlong long cnt[3];\nvoid dfs(int point,int c)\n{\n\tcolor[point]=c;\n\t++cnt[c];\n\tfor(int i=first[point];i;i=edge[i].next)\n\t\tif(!color[edge[i].to])\n\t\t\tdfs(edge[i].to,c==1?2:1);\n}\nint main()\n{\n\tint n,u,v;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tAddEdge(u,v);\n\t\tAddEdge(v,u);\n\t}\n\tdfs(1,1);\n\tprintf(\"%lld\",cnt[1]*cnt[2]-n+1);\n\treturn 0;\n}\n```",
        "postTime": 1519528532,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF862B \u3010Mahmoud and Ehab and the bipartiteness\u3011"
    },
    {
        "content": "# CF862B\u7684\u9898\u89e3\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c\u8f93\u5165 $n-1$ \u6761\u8fb9\uff0c\u6c42\u5982\u679c\u8fd9\u5f20\u56fe\u8981\u6784\u6210\u4e8c\u5206\u56fe\uff0c\u6700\u5c11\u8981\u52a0\u591a\u5c11\u6761\u8fb9\u3002\n\n### \u4ec0\u4e48\u662f\u4e8c\u5206\u56fe\uff1f\n\n\u4e8c\u5206\u56fe\u5c31\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u56fe\uff0c\u8fd9\u5f20\u56fe\u4e2d\u7684\u8282\u70b9\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff0c\u5e76\u4e14\u5728\u540c\u4e00\u96c6\u5408\u5185\u7684\u8282\u70b9\u6ca1\u6709\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u60f3\u4ece\u4e00\u4e2a\u8282\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u5728\u540c\u4e00\u96c6\u5408\u7684\u8282\u70b9\uff0c\u8d70\u7684\u8fb9\u7684\u6570\u91cf\u662f\u5076\u6570\uff0c\u5982\u56fe\u8fd9\u5c31\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c$t_{1}$\uff0c$t_{2}$\uff0c$t_{3}$\uff0c$t_{4}$ \u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u5e76\u4e14\u5728\u8fd9\u4e2a\u96c6\u5408\u5185\u7684\u8282\u70b9\u4e4b\u95f4\u90fd\u6ca1\u6709\u8fb9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6lz7q52k.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n### \u601d\u8def\u4e0e\u5206\u6790\n\n\u597d\u4e86\uff0c\u8bf4\u5b8c\u4ec0\u4e48\u4e8b\u4e8c\u5206\u56fe\u4e86\uff0c\u90a3\u5c31\u6765\u8bb2\u8bb2\u601d\u8def\u3002\u5177\u4f53\u601d\u8def\u5c31\u662f\u628a\u8fd9\u4e2a\u56fe\u5f53\u6210\u4e00\u5f20\u4e8c\u5206\u56fe\u7528\u67d3\u8272\u6cd5\u628a\u4e24\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u5206\u5f00\uff0c\u6211\u4eec\u7528 $cnt_{1}$ \u8868\u793a\u96c6\u5408 $1$ \u8282\u70b9\u7684\u6570\u91cf\uff0c$cnt_{2}$ \u8868\u793a\u96c6\u5408 $2$ \u8282\u70b9\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u8fb9\u7684\u6570\u91cf\u5c31\u4e3a $cnt_{1} * cnt_{2}$\uff0c\u6240\u4ee5\u6211\u4eec\u6c42\u7684\u7b54\u6848\u5c31\u662f\u6784\u6210\u4e8c\u5206\u56fe\u6700\u5c11\u9700\u8981\u7684\u8fb9\u7684\u6570\u91cf\u51cf\u53bb\u9898\u76ee\u4e2d\u5df2\u7ed9\u51fa\u7684\u8fb9\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f $cnt_{1} * cnt_{2} - (n - 1)$\u3002\n\n\u6ce8\u610f\u4e8b\u9879\uff0c\u8bb0\u4f4f\u4e00\u5b9a\u8981\u5f00 `long long` \uff0c\u4e0d\u7136\u4f1a\u70b8\uff0c\u4fd7\u8bdd\u8bf4\u7684\u597d\u554a\uff0c\u5341\u5e74 oi \u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00 `long long` ......\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long // \u4e00\u5b9a\u8981\u5f00 long long\ninline long long read(){ // \u5feb\u8bfb\u4f18\u5316\n\tint sum=0,h=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') h=-1;ch=getchar();}\n\twhile(isdigit(ch)) sum=sum*10+ch-'0',ch=getchar();\n\treturn sum*h;\n}\nconst int N=2e5+5; // \u56e0\u4e3a\u8981\u5efa\u53cc\u5411\u8fb9\uff0c\u6240\u4ee5\u7a7a\u95f4\u8981\u5f00\u4e24\u500d\nint color[N];\nint n;\nint cnt[3]; // \u50a8\u5b58\u4e24\u4e2a\u96c6\u5408\u7684\u8282\u70b9\u6570\u91cf\nint ver[N],head[N],ne[N],tot;\nvoid add(int x,int y){ // \u90bb\u63a5\u8868\u50a8\u5b58\n\tver[++tot]=y;\n\tne[tot]=head[x];\n\thead[x]=tot;\n\treturn;\n}\nvoid dfs(int x,int pos){ // \u67d3\u8272\u6cd5\u533a\u5206\u8282\u70b9\n\tcolor[x]=pos;\n\t++cnt[pos];\n\tfor(register int i=head[x];i;i=ne[i]){\n\t\tint y=ver[i];\n\t\tif(!color[y]) dfs(y,3-pos);\n\t}\n\treturn;\n}\nsigned main(){\n\tn=read();\n\tfor(register int i=1;i<n;++i){\n\t\tint x,y;\n\t\tx=read(),y=read();\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdfs(1,1);\n\tprintf(\"%lld\",cnt[1]*cnt[2]-n+1);\n\treturn 0;\n}\n```\n\u849f\u84bb\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u6c42\u70b9\u8d5e\u3002",
        "postTime": 1631426087,
        "uid": 363807,
        "name": "Hamer_sans",
        "ccfLevel": 5,
        "title": "CF862B\u7684\u9898\u89e3"
    },
    {
        "content": "**\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u6a21\u677f**\n\n# \u6982\u5ff5\n[\u4e8c\u5206\u56fe](https://baike.baidu.com/item/%E4%BA%8C%E5%88%86%E5%9B%BE/9089095?fr=aladdin)\n\n\u4f46\u662f\u672c\u9898\u7684\u4e8c\u5206\u56fe\u8981\u6c42\u662f [\u5b8c\u5168\u4e8c\u5206\u56fe](https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%88%86%E5%9B%BE)\n\n\u5c31\u662f\u8981\u5c06\u4e00\u5f20\u56fe\u4e2d\u7684\u6240\u6709\u70b9\u5212\u5206\u6210\u4e24\u4e2a\u70b9\u96c6\uff0c\u5e76\u4e14\u540c\u4e2a\u70b9\u96c6\u4e2d\u7684\u70b9\u4e4b\u95f4\u4e92\u4e0d\u76f8\u8fde\uff0c\u800c\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0e\u53e6\u5916\u7684\u4e00\u4e2a\u5b50\u96c6\u4e2d\u6240\u6709\u70b9\u90fd\u8981\u6709\u8fde\u8fb9\u3002\n\n# \u601d\u8def\n\n\u7b97\u51fa\u73b0\u5728\u7684\u4e8c\u5206\u56fe\u6709\u51e0\u6761\u8fb9\uff0c\u518d\u7b97\u51fa\u4e00\u5171\u9700\u8981\u51e0\u6761\u8fb9\u3002\n\n\u51cf\u4e00\u51cf\uff0c\u4fbf\u662f\u8981\u52a0\u7684\u8fb9\u6570\u3002\n\n# \u5b9e\u73b0\n\n\u7528 $dfs$ \u8fdb\u884c\u904d\u5386\uff0c\u5206\u522b\u6570\u51fa\u4e24\u4e2a\u70b9\u96c6\u4e2d\u70b9\u7684\u4e2a\u6570\u3002\n\n\u5c06\u7b2c\u4e00\u4e2a\u70b9\u653e\u5165 $A$ \u70b9\u96c6\u4e2d\uff0c\u6839\u636e\u4e8c\u5206\u56fe\u6027\u8d28\uff0c\u6240\u6709\u4e0e\u8be5\u70b9\u76f8\u8fde\u7684\u70b9\u90fd\u653e\u5165 $B$ \u70b9\u96c6\u4e2d\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5c06\u6240\u6709\u70b9\u5206\u597d\u3002\n\n\u8bbe $A$ \u4e2d\u6709 $a$ \u4e2a\u70b9 \u90a3\u4e48 $B$ \u4e2d\u4e00\u5b9a\u662f $n-a$ \u4e2a\u70b9\uff08\u5171\u6709 $n$ \u4e2a\u70b9\uff09\u3002\n\n\u603b\u8fb9\u6570\u4e3a\uff1a $ a*(n-a)$\n\n\u539f\u6709\u8fb9\u6570\uff1a $ n-1 $\n\n\u7b54\u6848\u5373\u4e3a\uff1a $ a*(n-a)-n+1 $\n\n# \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n#define int long long\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar(); \n\t}\n\treturn x*f;\n}\nint h[200000],nex[200000],v[200000],tot;\ninline void add(int x,int y){\n\tnex[++tot]=h[x];\n\th[x]=tot;\n\tv[tot]=y;\n}\nusing namespace std;\nint n,ans; \nbool used[200000];//\u8bb0\u5f55\u7b2ci\u4e2a\u70b9\u653e\u5165\u54ea\u4e2a\u96c6\u5f53\u4e2d\ninline void dfs(int now,int fa){\n\tfor(int i=h[now];i;i=nex[i]){\n\t\tif(v[i]==fa)\tcontinue;\n\t\tused[v[i]]=!used[now];//\u76f8\u4e92\u6709\u8fde\u8fb9\u7684\u70b9\u5728\u4e0d\u540c\u70b9\u96c6\u4e2d\n\t\tdfs(v[i],now);\n\t}\n}\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n-1;++i){\n\t\tint x=read(),y=read();\n\t\tadd(x,y),add(y,x);\n\t}\n\tused[1]=1;\n\tdfs(1,1);\n\tfor(int i=1;i<=n;++i)\n\t\tif(used[i]==1)\tans++;\n\tprintf(\"%lld\",ans*(n-ans)-n+1);\n\treturn 0;\n} \n```\n",
        "postTime": 1617600170,
        "uid": 202606,
        "name": "\u8f7b\u7ed8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF862B \u3010Mahmoud and Ehab and the bipartiteness\u3011"
    },
    {
        "content": "**\u697c\u4e0b\u5927\u4f6cdfs\uff0c\u6211\u6765\u4e00\u53d1bfs**\n\n\u8fd9\u9053\u9898\u5f88\u660e\u663e\u7684\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u7136\u540e _black*white-n+1_\n\n\u9644\u4e0a\u4ee3\u7801\uff08\u4e8c\u5206\u56fe\u90e8\u5206\u662f\u4ece\u5c01\u9501\u9633\u5149\u5927\u5b66copy\u7684\uff0c\u6709\u5197\u4f59\u90e8\u5206\u8bf7dalao\u4eec\u539f\u8c05\uff09\n\n```\n#include<iostream>\n#include<cstring>\n#include<vector>\n#include<queue>\n\n#define int long long\n\nusing namespace std;\n\nvector <int>  edge[1000010];\nqueue <int> que;\nint vis[1000010],ans[2],col[1000010];\nint n,m,ansn,aa,bb,flag;\n\nvoid bfs(int x)\n{\n    while(!que.empty())\n    {\n        int tmp=que.front();\n        que.pop();\n        vis[tmp]=1;\n        for(int i=0;i<edge[tmp].size();i++)\n        {\n            int nowp=edge[tmp][i];\n            if(col[nowp]==col[tmp]) \n            {\n                ans[0]=-1;\n                ans[1]=-1;\n                return;\n            }  \n            if(!vis[nowp])\n            {\n                que.push(nowp);\n                col[nowp]=(col[tmp]+1)%2;\n                ans[col[nowp]]++;\n            }\n        }\n    }\n}\n\nvoid scan()\n{\n    cin>>n;\n    for(int i=1;i<n;i++)\n    {\n        cin>>aa>>bb;\n        edge[aa].push_back(bb);\n        edge[bb].push_back(aa);\n    }\n    memset(col,-1,sizeof(col));\n}\n\nvoid solve()\n{\n    for(int i=1;i<=n;i++)\n    {\n        if(vis[i]!=1)  \n        {\n            ans[0]=1;\n            ans[1]=0;\n            col[i]=0;\n            que.push(i);\n            bfs(i);\n            if(ans[0]==-1)\n            {\n                break;\n            }\n            ansn+=ans[0]*ans[1]-n+1;\n        }\n    }\n    cout<<ansn;\n}\n\nmain()\n{\n    scan();\n    solve();\n}\n```\n",
        "postTime": 1519545967,
        "uid": 53241,
        "name": "partychicken",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF862B \u3010Mahmoud and Ehab and the bipartiteness\u3011"
    },
    {
        "content": "### \u9898\u76ee\u7b80\u5316\u548c\u5206\u6790\uff1a\n\n\u8fd9\u662f\u4e00\u9053\u8f83\u4e3a\u7ecf\u5178\u7684\u4e8c\u5206\u56fe\u67d3\u8272\u9898\u3002    \n\n[\u4e8c\u5206\u56fe\u7684\u57fa\u672c\u6982\u5ff5](https://baike.baidu.com/item/%E4%BA%8C%E5%88%86%E5%9B%BE/9089095?fr=aladdin)\n\n\u4f46\u8fd9\u9898\u8ba9\u6211\u4eec\u6c42\u5f97\u662f\u5b8c\u5168\u4e8c\u5206\u56fe\u3002  \n\n[\u4ec0\u4e48\u662f\u5b8c\u5168\u4e8c\u5206\u56fe](https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%88%86%E5%9B%BE/10074098?fr=aladdin)\n\n$cnt_{1}$ \u8868\u793a\u67d3\u6210\u989c\u8272\u79cd\u7c7b\u4e3a $1$ \u7684\u4e2a\u6570\u3002   \n$cnt_{2}$ \u8868\u793a\u67d3\u6210\u989c\u8272\u79cd\u7c7b\u4e3a $2$ \u7684\u4e2a\u6570\u3002      \n\n\u56e0\u4e3a\u662f\u5b8c\u5168\u4e8c\u5206\u56fe\u6240\u4ee5\u5b83\u7684\u8282\u70b9\u4e2a\u6570\u4e3a\uff1a  \n\n$$ cnt_{1} \\times cnt_{2} $$   \n\n\u6211\u4eec\u5df2\u7ecf\u6709\u9898\u76ee\u7ed9\u51fa\u7684 $n$  \u4e2a\u70b9\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a\uff1a  \n\n$$ cnt_{1} \\times cnt_{2} -n+1 $$    \n\n> \u6ce8\u610f\u4e0d\u5f00 long long \u89c1\u7956\u5b97\u3002\n\n### Solution:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n#define int long long\nconst int N=1e5+50;\n\nint n;\n\n\nstruct edge{\n\tint to,next;\n}e[N<<1];\nint head[N<<1],cnt;\nvoid add_edge(int u,int v){\n\t++cnt;\n\te[cnt].to=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\nint res[3],col[N<<1];\nvoid dfs(int n,int c){\n\tcol[n]=c;\n\tres[c]++;\n\tfor(int i=head[n];i;i=e[i].next){\n\t\tint y=e[i].to;\n\t\tif(!col[y]){\n\t\t\tdfs(y,3-c);\n\t\t}\n\t}\n}\nsigned main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;++i){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd_edge(u,v);\n\t\tadd_edge(v,u);\n\t}\n\tdfs(1,1);\n\tprintf(\"%lld\\n\",res[1]*res[2]-n+1);\n}\n```",
        "postTime": 1659580439,
        "uid": 750803,
        "name": "_Revenge_",
        "ccfLevel": 0,
        "title": "CF862B"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u67d3\u8272\u597d\u9898\u3002\n\n\u4e00\u5f00\u59cb\u7ed9\u5b9a\u7684\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\u3002$n$ \u4e2a\u70b9 $n - 1$ \u6761\u8fb9\u7684\u8fde\u901a\u56fe\u4e00\u5b9a\u662f\u4e00\u68f5\u6811\uff0c\u800c\u4e00\u68f5\u6811\u4e0d\u5b58\u5728\u5947\u6570\u73af\uff0c\u663e\u7136\u662f\u4e8c\u5206\u56fe\u3002\n\n\u65e2\u7136\u662f\u4e8c\u5206\u56fe\uff0c\u5fc5\u7136\u53ef\u4ee5\u9ed1\u767d\u67d3\u8272\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u767d\u70b9\uff0c\u90fd\u53ef\u4ee5\u548c\u5176\u4ed6\u6bcf\u4e00\u4e2a\u9ed1\u70b9\u8fde\u8fb9\u3002\u5168\u90e8\u8fde\u5b8c\u4e4b\u540e\u603b\u5171\u6709 $c1 \\times c2$ \u6761\u8fb9\uff0c$c1, c2$ \u5206\u522b\u8868\u793a\u9ed1\u70b9\u767d\u70b9\u6570\u91cf\uff0c\u80fd\u52a0\u7684\u8fb9\u6570\u4e3a $c1 \\times c2 - (n - 1)$\u3002",
        "postTime": 1655896738,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF862B Mahmoud and Ehab and the bipartiteness"
    },
    {
        "content": "\u9898\u9762\u4e2d\u7684\u201c\u4e8c\u5206\u56fe\u201d\u7684\u6982\u5ff5\u8bf4\u5f97\u4e0d\u592a\u76f4\u89c2\uff08\u867d\u7136\u8fd9\u4e5f\u662f\u5b98\u65b9\u7684\u5b9a\u4e49\uff09\uff0c\u8fd9\u91cc\u5c31\u7b80\u5355\u8bf4\u4e00\u4e0b\uff1a\u5982\u679c\u80fd\u628a\u4e00\u4e2a\u56fe\u4e2d\u7684\u6240\u6709\u70b9\u9ed1\u767d\u67d3\u8272\uff0c\u4efb\u610f\u4e00\u6761\u8fb9\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56fe\u5c31\u662f\u4e2a\u201c\u4e8c\u5206\u56fe\u201d\u3002\n\n\u4e00\u68f5\u6811\u4e00\u5b9a\u662f\u4e2a\u4e8c\u5206\u56fe\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rjkn53bl.png)\n\n\u5982\u56fe\uff0c\u6211\u4eec\u5c06\u6839\u8282\u70b9\u67d3\u6210\u9ed1\u8272\uff08\u56fe\u4e2d\u70b9\u5916\u9762\u7684\u5708\u662f\u7c97\u7684\u5c31\u662f\u9ed1\u8272\uff0c\u7ec6\u7684\u5c31\u662f\u767d\u8272\uff09\uff0c\u63a5\u7740\u628a\u5176\u513f\u5b50\u67d3\u6210\u767d\u8272\uff0c\u513f\u5b50\u7684\u513f\u5b50\u4eec\u67d3\u6210\u9ed1\u8272\u2026\u2026\u53ea\u8981\u8be5\u8282\u70b9\u4e0e\u5176\u513f\u5b50\u989c\u8272\u4e0d\u540c\uff0c\u5c31\u4e00\u5b9a\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\uff0c\u56e0\u4e3a\u7236\u4eb2\u8282\u70b9\u4e0e\u5176\u989c\u8272\u4e5f\u662f\u4e0d\u540c\u7684\u3002\n\n\u6211\u4eec\u5728\u4e00\u68f5\u6811\u4e0a\uff0c\u52a0\u8fb9\u800c\u4e0d\u80fd\u52a0\u70b9\u3002\u5bf9\u4e8e\u5df2\u6709\u7684\u8fb9\uff0c\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u5df2\u7ecf\u6ce8\u5b9a\u4e86\u989c\u8272\uff0c\u4e0d\u80fd\u518d\u6539\u4e86\uff0c\u6211\u4eec\u53ea\u80fd\u5728\u8fd9\u68f5\u5df2\u7ecf\u67d3\u597d\u8272\u7684\u6811\u4e0a\u52a0\u8fb9\uff0c\u663e\u7136\u53ea\u80fd\u5c06\u989c\u8272\u4e0d\u540c\u7684\u4e24\u4e2a\u70b9\u76f8\u8fde\u3002\u5148\u5ffd\u7565\u73b0\u6709\u7684\u8fb9\uff0c\u6211\u4eec\u4e00\u5171\u53ef\u4ee5\u8fde\u9ed1\u8272\u70b9\u7684\u6570\u91cf\u4e0e\u767d\u8272\u70b9\u7684\u6570\u91cf\u4e4b\u4e58\u79ef\uff0c\u518d\u628a\u8fd9\u4e2a\u6570\u51cf\u6389\u539f\u6709\u7684\u8fb9\u7684\u6570\u91cf $(n-1)$ \u5373\u53ef\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u600e\u4e48\u67d3\u8272\u4e86\uff0c\u8fd9\u4e2a\u8fd8\u662f\u6bd4\u8f83\u597d\u505a\uff0c\u628a\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u6c42\u51fa\uff0c\u5c06\u5176 $\\bmod \\ 2 $ \u5c31\u662f\u5b83\u7684\u989c\u8272\u3002\n\nCode(C++):\n\n```cpp\n// ========================================\n//  Author: BreakPlus\n//  Email: breakplus@foxmail.com\n//  Blog: www.luogu.com.cn/blog/BreakPlus/\n// ========================================\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\n#define rint register int\ninline int read(){\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') f=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nconst int maxn=100010;\nint n,u,v,dep[maxn],cnt1,cnt2,head[maxn],tot;\nstruct Edge{\n\tint to,nxt;\n}edge[maxn<<1];\ninline void add(int u,int v){\n\tedge[++tot].to=v;\n\tedge[tot].nxt=head[u];\n\thead[u]=tot;\n}\ninline void dfs(int u,int fa,int d){\n\tdep[u]=d;\n\tfor(rint i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u,d+1);\n\t}\n}\nint main(){\n\tn=read();\n\tfor(rint i=1;i<n;i++) u=read(),v=read(),add(u,v),add(v,u);\n\tdfs(1,0,0);\n\tfor(rint i=1;i<=n;i++)\n\t\tif(dep[i]%2) cnt1++;\n\t\telse cnt2++;\n\tprintf(\"%lld\\n\",1ll*cnt1*cnt2-1ll*(n-1));\n\treturn 0;\n}\n\n```",
        "postTime": 1624671680,
        "uid": 334727,
        "name": "BreakPlus",
        "ccfLevel": 0,
        "title": "Solution CF862B"
    },
    {
        "content": "\u8fd9\u91cc\u9996\u5148\u70b9\u660e\u4e00\u4e2a\u6982\u5ff5\uff1a\u4e8c\u5206\u56fe\uff08~~\u4e0d\u8fc7\u6211\u76f8\u4fe1\u4f1a\u6765\u505a\u8fd9\u9053\u9898\u7684\u90fd\u77e5\u9053\u4e86~~\uff09\n### \u4e8c\u5206\u56fe\uff1a\u5c06\u56fe\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5404\u90e8\u5206\u4e4b\u95f4\u6ca1\u6709\u8fde\u7ebf\uff0c\u4e24\u90e8\u5206\u4e4b\u95f4\u6bcf\u4e00\u5bf9\u70b9\u90fd\u6709\u8fde\u7ebf\n\u4e00\u56fe\u80dc\u5343\u8a00\uff0c\u4e0a\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p6k4tfzd.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5982\u56fe\u53ef\u89c1\uff0c\u4e24\u4e2a\u7c97\u9ed1\u5708\u5c06\u70b9\u5206\u6210\u4e24\u90e8\u5206\uff0c\u7ea2\u7ebf\u8868\u793a\u4e24\u90e8\u5206\u4e4b\u95f4\u7684\u8fde\u70b9\uff08\u4f46\u5404\u90e8\u5206\u4e4b\u95f4\u7684\u70b9\u65e0\u8fde\u7ebf\uff09\uff0c\u8fd9\u79cd\u56fe\u6211\u4eec\u79f0\u4e4b\u4e8c\u5206\u56fe\n\n### \u4e8c\u5206\u56fe\u5efa\u7acb\u65b9\u5f0f\n\n\u5f88\u660e\u663e\uff0c\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\u4e00\u5b9a\u5206\u5c5e\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u5f00\u59cb\uff0c\u5c06\u4e00\u4e2a\u70b9\u67d3\u6210\u9ed1\u8272\uff0c\u4e0e\u5b83\u76f4\u63a5\u76f8\u8fde\u7684\u67d3\u6210\u767d\u8272\u2026\u2026\u5982\u6b64\u4e0b\u53bb\uff0c\u518d\u5c06\u989c\u8272\u76f8\u540c\u7684\u653e\u5728\u4e00\u8d77\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u4e8c\u5206\u56fe\n\n```\nq.push(1),num[1]=1;//\u961f\u5217\u5b58\u50a8+\u67d3\u8272\n\twhile (!q.empty())//\u5faa\u73af\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tf(i,0,v[x].size()-1)//\u613f\u610f\u7528\u90bb\u63a5\u8868\u7684\u5c31\u6362\u4e00\u4e0b\n\t\t{\n\t\t\tif (!num[v[x][i]]) num[v[x][i]]=((num[x]==1)?2:1),q.push(v[x][i]);//\u67d3\u6210\u4e0d\u540c\u7684\u989c\u8272\n\t\t}\n\t}\n```\n\n\n## Solution\n\n\u56de\u5230\u8fd9\u9053\u9898\n\n\u8981\u628a\u4e00\u68f5\u6811\u6539\u6210\u6ee1\u8db3\u4e8c\u5206\u56fe\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6811\u6309\u4e8c\u5206\u56fe\u7684\u65b9\u5f0f\u67d3\u8272\uff0c\u518d\u770b\u770b\u4e24\u90e8\u5206\u4e4b\u95f4\u6709\u591a\u5c11\u8fb9\u6ca1\u8fde\uff0c\u5373\u662f\u6700\u5927\u6570\u91cf\u6dfb\u52a0\u8fb9\n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define f(i,a,b) for (ll i=a;i<=b;i++)\n#define fx(i,a,b) for (ll i=a;i>=b;i--)\nusing namespace std;\nconst int maxn=1e5+10;\nll n,v1=1,v2;\nint num[maxn];\nvector<int> v[maxn];\ninline ll read()\n{\n\tll l=0,f=1;\n\tchar c;\n\twhile (!isdigit(c=getchar())) if (c=='-') f=-1;\n\twhile (isdigit(c)) l=(l<<3)+(l<<1)+(c^48),c=getchar();\n\treturn l*f;\n}\nqueue<int> q;\nsigned main()\n{\n\tn=read();\n\tf(i,1,n-1)\n\t{\n\t\tint a1=read(),a2=read();\n\t\tv[a1].push_back(a2),v[a2].push_back(a1);\n\t}\n\tq.push(1),num[1]=1;\n\twhile (!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tf(i,0,v[x].size()-1)\n\t\t{\n\t\t\tif (!num[v[x][i]])\n\t\t\t{\n\t\t\t\tnum[v[x][i]]=((num[x]==1)?2:1),q.push(v[x][i]);\n\t\t\t\tif (num[v[x][i]]==1) v1++;\n\t\t\t\telse v2++;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<v1*v2-n+1;\n\treturn 0;\n}\n```\n",
        "postTime": 1615123900,
        "uid": 152648,
        "name": "huangxianghui",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF862B Mahmoud and Ehab and the bipartiteness"
    },
    {
        "content": "## Subject\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF862B)\n\n## Analysis\n\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\u8fde\u63a5\u4e24\u4e2a\u70b9\u96c6\u7684\u8fb9\u9700\u8981$ size[a] \\times size[b] $\uff0c\u7136\u540e\u6211\u4eec\u6709$ n-1 $\u6761\u8fb9\uff0c\u5269\u4e0b\u7684\u8fb9\u5c31\u662f$ size[a] \\times size[b]-n+1 $\uff0c\u67d3\u8272\u5c31\u597d\u4e86\u3002\n\n## Code\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define M 1000010\n#define int long long \ninline int Readint(void){\n\tint s=0,f=1;char c=getchar();\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n\twhile(isdigit(c)){s=s*10+c-48;c=getchar();}\n\treturn s*f;\n}\nstruct Node{\n\tint u,v,idx;\n}Edge[M];\nint n,u,v;\nint head[M],cnt;\nint belong[M],size[M],idx;\nvoid addEdge(int u,int v){\n\tEdge[++cnt]=(Node){head[u],v};\n\thead[u]=cnt;\n\treturn;\n}\nvoid Dfs(int u,int idx){\n\tbelong[u]=idx;\n\tsize[idx]++;\n\tfor(int i=head[u];i;i=Edge[i].u){\n\t\tint v=Edge[i].v;\n\t\tif(belong[v]==-1)\n\t\t\tDfs(v,!idx);\n\t}\n\treturn;\n}\nsigned main(void){\n\tn=Readint();\n\tmemset(belong,-1,sizeof belong);\n\tfor(int i=1;i<n;i++){\n\t\tu=Readint();v=Readint();\n\t\taddEdge(u,v);\n\t\taddEdge(v,u);\n\t}\n\tDfs(1,1);\n\tprintf(\"%lld\\n\",size[0]*size[1]-n+1);\n\treturn 0;\n}\n```\n~~\u8c22\u8c22\u670b\u53cb\u4eec\uff01~~",
        "postTime": 1607080299,
        "uid": 246005,
        "name": "StupidSeven",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF862B \u3010Mahmoud and Ehab and the bipartiteness\u3011"
    },
    {
        "content": "\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u662f\u4e00\u9053\u8003\u56fe\u8bba\u7684\u9898\u76ee\n\n\u9996\u5148\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u9898\u76ee\n\n\u9898\u76ee\u8bf4\uff1a\u7ed9\u7684\u56fe\u4e00\u5b9a\u662f\u4e00\u68f5\u6811\uff08\u4e5f\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u5206\u56fe\uff09\n\n\u6811\u6765\u6309\u7167\u4e8c\u5206\u56fe\u6765\u5206\u4e86\u8bdd\uff0c\u662f\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\n\n\u5373\u5947\u6570\u5c42\u4e3a\u4e00\u90e8\u5206\uff0c\u8ba1\u70b9\u6570\u4e3aa\uff0c\u5076\u6570\u5c42\u4e3a\u53e6\u4e00\u90e8\u5206\uff0c\u8ba1\u70b9\u6570\u4e3ab\n\n\u90a3\u4e48\u6b64\u65f6\u4e8c\u5206\u56fe\u6700\u591a\u8fb9\u4fbf\u4e3a\u90a3\u4e24\u4e2a\u90e8\u5206\u7684\u70b9\u4e00\u4e00\u5bf9\u5e94\uff0c\u5171\u6709a*b\u4e2a\u8fb9\n\n\u539f\u6765\u6811\u662f\u6709\uff08n-1\uff09\u6761\u8fb9\n\n\u6240\u4ee5\u6700\u591a\u5c31\u53ef\u4ee5\u6dfb\u52a0ab-\uff08n-1\uff09=ab-n+1\u6761\u8fb9\n\n\u5176\u5b9e\u9898\u76ee\u5c31\u8ba9\u4f60\u6c42\u7ed9\u51fa\u7684\u6811\u53ef\u4ee5\u5206\u4e3a\u591a\u5c11\u5c42\n\n\u6240\u4ee5\u5c31\u7528dfs\u904d\u5386\u6811\u5c31\u53ef\u4ee5\u5566\uff01\n\n\u6700\u540e\u9001\u4e0aAC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<iomanip>\n#include<cmath>\n#include<vector>\n\nusing namespace std;\n\nconst int N=100050;\n\nint n,father[N]={-1},q[N],g;\n\nlong long sa,sb;\n\nvector<int> z[N];\n\nvoid dfs(int s,int d,int e)\n{\n   if(e==1)\n   {\n   \tsa++;\n   }\n   else\n   {\n   \t sb++;\n   }\n   for(int i=0;i<z[d].size();i++)\n   {\n   \tif(s==z[d][i]) continue;\n   \tdfs(d,z[d][i],1-e);\n   }\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\tfather[b]=a;\n\t\tz[a].push_back(b);\n\t\tz[b].push_back(a);\n\t}\n\tdfs(0,1,0);\n\tcout<<sa*sb-n+1;\n\treturn 0;\n}\n```\n",
        "postTime": 1572088042,
        "uid": 188885,
        "name": "Edmundino",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF862B \u3010Mahmoud and Ehab and the bipartiteness\u3011"
    }
]