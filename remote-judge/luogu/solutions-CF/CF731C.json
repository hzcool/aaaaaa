[
    {
        "content": "## \u9898\u610f\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6574\u6570\u5e8f\u5217 $a$\uff0c\u503c\u57df\u4e3a $[1,k]$\uff0c\u6709 $m$ \u4e2a\u9650\u5b9a\u6761\u4ef6\uff0c\u6bcf\u4e2a\u9650\u5b9a\u6761\u4ef6\u4f1a\u7ed9\u5b9a\u4e00\u7ec4\u4e0b\u6807 $(x,y)$\uff0c\u8981\u6c42 $a_x=a_y$\uff0c\u95ee\u6700\u5c11\u4fee\u6539\u591a\u5c11\u4e2a\u6570\u7684\u503c\u53ef\u4ee5\u4f7f\u5f97\u8fd9\u4e9b\u6761\u4ef6\u88ab\u5168\u90e8\u6ee1\u8db3\u3002   \n$2\\le n\\le 2\\times 10^5,0\\le m\\le 2\\times10^5,1\\le k\\le2\\times 10^5$\u3002\n## Solution\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e9b\u9650\u5b9a\u6761\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u5177\u6709\u4f20\u9012\u6027\u7684\uff0c\u5373\u5982\u679c $a_x=a_y$ \u4e14 $a_y=a_z$\uff0c\u90a3\u4e48 $a_x=a_z$\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u8fd9\u4e9b\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \n\u5bf9\u4e8e\u6bcf\u7ec4\u4e0b\u6807 $(x,y)$ \u6211\u4eec\u628a $x,y$ \u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\uff08\u6ce8\u610f\u4e0d\u662f\u5408\u5e76\u539f\u5e8f\u5217\u91cc\u9762\u7684\u6570\uff09\uff0c\u5408\u5e76\u5b8c\u4e4b\u540e\u4f1a\u5f62\u6210\u591a\u4e2a\u4e0b\u6807\u96c6\u5408\uff0c\u800c\u9898\u76ee\u7684\u8981\u6c42\u5c31\u662f\u4fee\u6539\u82e5\u5e72\u4e2a\u6570\uff0c\u4f7f\u5f97\u5404\u4e2a\u96c6\u5408\u5185\u7684\u6570\u5bf9\u5e94\u7684\u539f\u5e8f\u5217\u7684\u6570\u5168\u90e8\u76f8\u7b49\uff0c\u8fd8\u8981\u6c42\u4fee\u6539\u6b21\u6570\u6700\u5c11\u3002    \n\u6682\u4e14\u628a\u539f\u5e8f\u5217\u4e2d\u4e0b\u6807\u5728\u67d0\u4e00\u96c6\u5408\u5185\u5e76\u4e14\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u53eb $b_i$\uff0c\u90a3\u4e48\u6700\u4f18\u7684\u65b9\u6848\u5c31\u662f\u628a\u8be5\u96c6\u5408\u5bf9\u5e94\u7684\u539f\u5e8f\u5217\u4e2d\u7684\u6570\u5168\u90e8\u6539\u4e3a $b_i$\uff0c\u8fd9\u6837\u4fee\u6539\u6b21\u6570\u4e00\u5b9a\u6700\u5c11\u3002\u5982\u679c\u6709\u591a\u4e2a\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u7684 $b_i$\uff0c\u968f\u4fbf\u6539\u4e00\u4e2a\u5373\u53ef\uff0c\u8be5\u96c6\u5408\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a\u96c6\u5408\u5927\u5c0f\u51cf\u53bb $b_i$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\u5bf9\u5176\u4ed6\u96c6\u5408\u540c\u7406\uff0c\u6bcf\u5904\u7406\u5b8c\u4e00\u4e2a\u96c6\u5408\u8bb0\u5f97\u6e05\u7a7a\u8ba1\u6570\u6570\u7ec4\u3002\n## Code\n~~\u6700\u4f18\u89e3rk1&rk3\uff0crk1\u662f\u5c0f\u53f7\u7684~~\u3002\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nint fa[200001],a[200001],x,y,size[200001],col[200001],f[200001],ff[200001],fk;\nvector<int> fff[200001];\nbool ap[200001];\nconst int LEN=16384;\nchar BUF[LEN],*Pin,*Pin_last,PUF[LEN],*Pout=PUF,*Pout_last=PUF+LEN-1;\nchar gc(){\n\treturn Pin==Pin_last&&(Pin_last=(Pin=BUF)+fread(BUF,1,LEN,stdin),Pin==Pin_last)?EOF:*Pin++;\n}\nint read(){\n\tint x=0;\n\tchar ch=gc();\n\twhile(ch<48||ch>57) ch=gc();\n\twhile(ch>47&&ch<58) x=x*10+ch-48,ch=gc();\n\treturn x;\n}\nint find(int x){\n\tif(fa[x]==x) return x;\n\treturn fa[x]=find(fa[x]);//\u8def\u5f84\u538b\u7f29\uff0c\u76f4\u63a5\u628a\u8be5\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u6539\u4e3a\u96c6\u5408\u4ee3\u8868\n}\nvoid merge(int x,int y){\n\tx=find(x),y=find(y);\n\tif(x==y) return;//\u5982\u679c\u4e24\u8005\u5df2\u7ecf\u5728\u540c\u4e00\u96c6\u5408\u5185\u5219\u65e0\u9700\u5408\u5e76\n\tif(size[x]<size[y]) swap(x,y);//\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u628a\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\u91cc\u9762\n\tfa[y]=x,size[x]+=size[y];\n}\nsigned main(){\n\tint n=read(),m=read(),k=read(),cnt=0,ans=0;\n\tif(m==0){//\u5982\u679c\u6ca1\u6709\u9650\u5b9a\u6761\u4ef6\u5c31\u4e0d\u7528\u6539\u3002\n\t    putchar('0');\n\t    return 0;\n\t}for(int i=1;i<=n;i++) a[i]=read(),fa[i]=i,size[i]=1;//\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u96c6\u5408\u6700\u521d\u7684\u5927\u5c0f\u90fd\u4e3a1.\n\tfor(int i=1;i<=m;i++) x=read(),y=read(),merge(x,y);//\u5408\u5e76\u4e0b\u6807\uff08x,y\uff09\u6240\u5728\u96c6\u5408\u3002\n\tfor(int i=1;i<=n;i++){\n\t\tint fat=find(i);\n\t\tif(ap[fat]==0) ap[fat]=1,f[fat]=++cnt,ff[cnt]=fat;//\u5982\u679c\u8be5\u96c6\u5408\u7684\u4ee3\u8868\u672a\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\uff0ccnt\u4e3a\u8be5\u96c6\u5408\u7684\u7f16\u53f7\uff0cfat\u4e3a\u8be5\u96c6\u5408\u7684\u4ee3\u8868\uff0cf\u548cff\u6570\u7ec4\u7528\u4e8e\u5728\u77e5\u9053\u7f16\u53f7\u548c\u96c6\u5408\u4ee3\u8868\u4e2d\u7684\u4e00\u4e2a\u7684\u524d\u63d0\u4e0b\u5feb\u901f\u627e\u5230\u5bf9\u5e94\u7684\u53e6\u4e00\u4e2a\u3002\n\t}for(int i=1;i<=n;i++) fff[f[find(i)]].push_back(i);//\u628a\u6bcf\u4e2a\u4e0b\u6807\u90fd\u653e\u5230\u6240\u5728\u7684\u96c6\u5408\u7684vector\u91cc\u3002\n\tfor(int i=1;i<=cnt;i++){\n\t\tint sz=fff[i].size(),zs=0;\n\t\tfor(int j=0;j<sz;j++){\n\t\t\tfk=fff[i][j],col[a[fk]]++;\n\t\t\tif(col[a[fk]]>zs) zs=col[a[fk]];//\u66f4\u65b0\u6bcf\u4e2a\u96c6\u5408\u5bf9\u5e94\u7684\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570 \u7684\u51fa\u73b0\u6b21\u6570\u3002  \n\t\t}ans+=size[ff[i]]-zs;//\u7edf\u8ba1\u5230\u7b54\u6848\u91cc\n\t\tfor(int j=0;j<sz;j++) fk=fff[i][j],col[a[fk]]=0; //\u6e05\u7a7a\u8ba1\u6570\u6570\u7ec4\n\t}printf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1641359275,
        "uid": 438168,
        "name": "OldVagrant",
        "ccfLevel": 6,
        "title": "CF731C"
    },
    {
        "content": "> ### Description\n>\n> \u6709$n$\u53ea\u889c\u5b50\uff0c$k$\u79cd\u989c\u8272\uff0c\u5728$m$\u5929\u4e2d\uff0c\u95ee\u6700\u5c11\u4fee\u6539\u51e0\u53ea\u889c\u5b50\u7684\u989c\u8272\uff0c\u53ef\u4ee5\u4f7f\u6bcf\u5929\u8981\u7a7f\u7684\u889c\u5b50\u989c\u8272\u76f8\u540c\u3002 \n>\n> ### Input\n>\n> \u7b2c\u4e00\u884c$n,m,k$\u5206\u522b\u5bf9\u5e94\u9898\u76ee\u63cf\u8ff0\u3002\n>\n> \u63a5\u4e0b\u6765$m$\u884c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570$l_i\uff0cr_i$\u8868\u793a\u7b2c$i$\u5929\u8981\u7a7f\u7684\u4e24\u53ea\u889c\u5b50\u7684\u7f16\u53f7\u3002\n>\n> ### Output\n>\n> \u4e00\u4e2a\u6574\u6570,\u4ee3\u8868\u6700\u5c0f\u8981\u4fee\u6539\u51e0\u53ea\u889c\u5b50\u7684\u989c\u8272\u3002\n\n\u9996\u5148,\u5bf9\u4e8e\u6bcf\u4e00\u5929\u8981\u7a7f\u7684\u889c\u5b50,\u6211\u4eec\u52a0\u5165\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\u3002(\u8fd9\u4e2a\u5f88\u660e\u663e\u5427)\n\n\u5982\u679c\u6709\u4e00\u53ea\u889c\u5b50\u9700\u8981\u88ab\u7a7f\u591a\u6b21\u7684\u8bdd,\n\n\u663e\u7136\u6211\u4eec\u4f1a\u5c06\u5176\u67d3\u6210\u5f53\u524d\u8054\u901a\u5757\u4e2d\u5305\u542b\u889c\u5b50\u6700\u591a\u7684\u4e00\u79cd\u989c\u8272\u3002\n\n\u6211\u4eec\u7528$vector$\u7ef4\u62a4\u6bcf\u4e2a\u8054\u901a\u5757\u4e2d\u7684\u889c\u5b50\u7684\u989c\u8272\u3002\n\n\u518d\u5f00$vis$\u6570\u7ec4\u7ef4\u62a4\u6bcf\u79cd\u889c\u5b50\u7684\u51fa\u73b0\u6b21\u6570\u3002(**\u6ce8\u610f\u8981\u6e05\u7a7a**)\n\n\u6bcf\u6b21\u6211\u4eec\u7d2f\u52a0\u7684\u7b54\u6848\u5c31\u662f$size-mx$\n\n> \u5176\u4e2d$size$\u4e3a\u8054\u901a\u5757\u5927\u5c0f,$mx$\u4e3a\u989c\u8272\u76f8\u540c\u7684\u6700\u591a\u7684\u889c\u5b50\u7684\u4e2a\u6570\u3002\n\n``\u4ee3\u7801``\n\n```c++\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<iostream>\n#define R register\n\nusing namespace std;\n\nconst int gz=200001;\n\ninline void in(R int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n    while(isdigit(s)){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\n\nvector<int>v[gz];\n\nint col[gz],f[gz],n,m,k,ans,vis[gz];\n\nint find(R int x){return f[x]==x?x:f[x]=find(f[x]);}\n\nsigned main()\n{\n    in(n),in(m),in(k);\n    for(R int i=1;i<=n;i++)in(col[i]),f[i]=i;\n    for(R int i=1,x,y;i<=m;i++)\n    {\n        in(x),in(y);\n        R int fa=find(x),fb=find(y);\n        if(fa==fb)continue;\n        f[fa]=fb;\n    }\n    for(R int i=1;i<=n;i++)\n    {\n        R int fa=find(i);\n        v[fa].push_back(col[i]);\n    }\n    \n    for(R int i=1;i<=n;i++)\n    {\n        R int tmp=v[i].size();\n        R int mx=0;\n        if(tmp>1)\n        {\n            for(R int j=0;j<tmp;j++)\n            {\n                vis[v[i][j]]++;\n                mx=max(mx,vis[v[i][j]]);\n            }\n            for(R int j=0;j<tmp;j++)\n                vis[v[i][j]]--;\n            ans+=tmp-mx;\n        }\n    }\n    printf(\"%d\",ans); \n}\n\n```\n\n",
        "postTime": 1541402652,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF731C \u3010Socks\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u90fd\u6e05\u695a\uff0c\u5495\u4e86\n\n## \u601d\u8def\n\u9898\u76ee\u8981\u6c42\u5bf9\u4e8e\u7b2c $i$ \u5929\u7684\u4e24\u4e2a\u889c\u5b50\u989c\u8272\u76f8\u540c\n\n\u90a3\u4e48\u5982\u679c\u6709\u4e00\u5929\u7a7f\u4e86 $i$ \u53f7\u889c\u5b50\u548c $j$ \u53f7\u889c\u5b50\uff0c\u53e6\u4e00\u5929\u7a7f\u4e86 $i$ \u53f7\u889c\u5b50\u548c $k$ \u53f7\u889c\u5b50\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u76f8\u7b49\u7684\u5173\u7cfb\u5177\u6709\u4f20\u9012\u6027\uff0c\u5373\u7b2c $i$\uff0c$j$\uff0c$k$ \u4e09\u53ea\u889c\u5b50\u989c\u8272\u5168\u76f8\u540c\n\n\u5bf9\u4e8e\u8fd9\u79cd\u6709\u4f20\u9012\u6027\u7684\u5173\u7cfb\uff0c\u4e00\u822c\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\uff0c\u8bb2\u989c\u8272\u9700\u8981\u76f8\u540c\u7684\u889c\u5b50\u7f16\u53f7\u5408\u5e76\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u96c6\u5408\uff0c\u627e\u5230\u5728\u6b64\u96c6\u5408\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u989c\u8272\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u518d\u7528\u8fd9\u4e2a\u96c6\u5408\u5143\u7d20\u7684\u6570\u91cf\u51cf\u53bb\u8fd9\u4e2a\u6b21\u6570\uff0c\u663e\u7136\u7684\uff0c\u8fd9\u662f\u6700\u5c0f\u4fee\u6539\u6b21\u6570\u3002\u6700\u540e\u5c06\u6bcf\u4e2a\u96c6\u5408\u6700\u5c0f\u4fee\u6539\u6b21\u6570\u7d2f\u52a0\uff0c\u5c31\u662f\u6211\u4eec\u8981\u7684\u7b54\u6848\u3002\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <list>\n#include <map>\n#include<unordered_map>\nusing namespace std;\n//#define  long long int\n//#define int long long\n//#define int __int128\n#define ff first\n#define ss second\n#define mr make_pair\nconst int mod = 1e9 + 7 ;\nint fa[200005] ; \nint n, k, m ;\nint c[200005] ;\nint t[200005] ;\nint vis[200005] ;\nint num ;\nunordered_map<int, int>mp ;\nint find(int x) {\n\tif(fa[x] == x) return fa[x] ;\n\treturn fa[x] = find(fa[x]) ;\n}\nvoid join(int x, int y) {\n\tint fx = find(x), fy = find(y) ;\n\tif(fx != fy) fa[fx] = fy ; \n}\nvector<int>zc ;\nvector<int>s[200005] ;\nsigned main() {\n\tfor(int i = 1 ; i <= 200000 ; i++) fa[i] = i ;\n\tcin >> n >> m >> k ;\n\tfor(int i = 1 ; i <= n ; i++) scanf(\"%d\", c + i) ;//\u5176\u5b9e\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u5375\u7528\n\tfor(int i = 1 ; i <= m ; i++) {\n\t\tint x, y ;\n\t\tscanf(\"%d%d\", &x, &y) ;\n\t\tif(!vis[x]) num++ ;\n\t\tif(!vis[y]) num++ ; //num\u4e3a\u7528\u5230\u7684\u539f\u8272\u4e00\u5171\u6709\u591a\u5c11\u79cd\n\t\tvis[x] = vis[y] = 1 ;\n\t\tjoin(x, y) ;\n\t}\n\tfor(int i = 1 ; i <= n ; i++) {\n\t\ts[find(i)].push_back(i); \n\t\tif(fa[i] == i && vis[i]) zc.push_back(i);\n\t}\n\t// zc\u4e2d\u5b58\u7684\u662f\u6bcf\u4e2a\u96c6\u5408\u7684\u7956\u5b97\n\t// s[i]\u8868\u793a\u4ee5i\u4e3a\u7956\u5b97\u7684\u96c6\u5408\u7684\u6240\u6709\u5143\u7d20\n\tint ans = 0, nns = 0 ;\n\tfor(int i = 0 ; i < zc.size() ; i++) {\n\t\tmp.clear() ;\n\t\tint now = zc[i] ;\n\t\tfor(int j = 0 ; j < s[now].size() ; j++) {\n\t\t\tint k = s[now][j] ;\n\t\t\tmp[c[k]]++ ;\n\t\t\tnns = max(nns, mp[c[k]]) ;\n\t\t}\n\t\tans += nns ;nns = 0 ;\n\t}\n\tcout << num - ans ;\n\treturn 0 ;\n}\n```\n",
        "postTime": 1657175811,
        "uid": 632162,
        "name": "quarmer",
        "ccfLevel": 0,
        "title": "CF731C"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\u6709 $n$ \u53ea\u989c\u8272\u7684\u889c\u5b50\uff0c\u6709 $m$ \u5929\uff0c\u6bcf\u5929\u5fc5\u987b\u7a7f $l$\uff0c$r$ \u4fe9\u4e2a\u7f16\u53f7\u7684\u889c\u5b50\uff0c\u53ef\u4ee5\u5c06\u889c\u5b50\u8fdb\u884c\u67d3\u8272\uff0c\u5982\u679c\u60f3\u8981\u6bcf\u6b21\u7a7f\u7684\u889c\u5b50\u662f\u540c\u4e00\u79cd\u989c\u8272\uff0c\u95ee\u6700\u5c11\u67d3\u591a\u5c11\u6b21\uff1f\n\n## \u601d\u8def\uff1a\n\u53ef\u4ee5\u5c06 $m$ \u5929\u770b\u505a $m$ \u6761\u8fb9\uff0c\u6700\u7ec8\u4f1a\u5904\u7406\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u5219\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5c06\u6bcf\u4e2a\u8054\u901a\u5757\u4e2d\u7684\u70b9\u67d3\u6210\u540c\u4e00\u79cd\u989c\u8272\u6240\u9700\u8981\u7684\u6b21\u6570\u7684\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u904d\u5386\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u7528 vector \u5c06\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u889c\u5b50\u5b58\u653e\u8d77\u6765\uff0c\u904d\u5386 vector\uff0c\u7136\u540e\u7528 map \u8bb0\u5f55\u4e2d\u8fd9\u4e2a\u8054\u901a\u5757\u4e2d\u540c\u79cd\u989c\u8272\u889c\u5b50\u7684\u4e2a\u6570\uff0c\u5c06\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u603b\u889c\u5b50\u6570\u51cf\u53bb\u989c\u8272\u6700\u591a\u889c\u5b50\u6570\u5373\u4e3a\u5f53\u524d\u8fde\u901a\u5757\u4e2d\u7684\u70b9\u67d3\u6210\u540c\u4e00\u989c\u8272\u6240\u9700\u8981\u7684\u6700\u5c0f\u503c\uff0c\u5c06\u6bcf\u4e2a\u8fde\u901a\u5757\u6240\u9700\u8981\u7684\u6700\u5c0f\u503c\u90fd\u7d2f\u52a0\u8d77\u6765\u5373\u4e3a\u6700\u7ec8\u67d3\u8272\u6b21\u6570\u3002\n\n## \u4ee3\u7801\n```c\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <string>\n#include <cstdio>\n#include <cstring>\n#include <map>\n#include <vector>\nusing  namespace  std;\n\ninline int read() {\n\tint f = 0, s = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch)) f |= ch == '-', ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -s : s;\n}\n\nvoid print(int x) {\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x > 9) print(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int maxn = 200010;\nint n, m, k, ans, cnt, fa[maxn], color[maxn], num[maxn];\n\nvector<int> v[maxn];\nmap<int, int> mp;\n\nint find(int x) {\n\treturn fa[x] == x ? x : fa[x] = find(fa[x]);\n}\n\nsigned main() {\n\tn = read(), m = read(), k = read();\n\tfor (int i = 1; i <= n; i++) fa[i] = i;\n\tfor (int i = 1; i <= n; i++) color[i] = read();\n\tfor (int i = 1; i <= m; i++) {\n\t\tint l, r;\n\t\tl = read(), r = read();\n\t\tint fl = find(l);\n\t\tint fr = find(r);\n\t\tif (fl != fr) fa[fr] = fl;\n\t}\n\tfor (int i = 1; i <= n; i++) if (fa[i] == i) num[i] = ++cnt;\n\tfor (int i = 1; i <= n; i++) v[num[find(i)]].push_back(color[i]);\n\tfor (int i = 1; i <= cnt; i++) {\n\t\tint siz = v[i].size(), maxx = 0;\n\t\tmp.clear();\n\t\tfor (int j = 0; j < siz; j++) {\n\t\t\tmp[v[i][j]] ++;\n\t\t\tmaxx = max(maxx, mp[v[i][j]]);\n\t\t}\n\t\tans += (siz - maxx);\n\t}\n\tprint (ans);\n\treturn 0;\n}\n```",
        "postTime": 1626859447,
        "uid": 371178,
        "name": "Fan_Tuan",
        "ccfLevel": 4,
        "title": "CF731C Socks \u9898\u89e3"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n[\u535a\u5ba2\u98df\u7528\u53e3\u5473\u66f4\u4f73](https://www.cnblogs.com/fusiwei/p/11797495.html)\n\n~~2019.11.5\u6a21\u62df\u8d5b95\u5206\u573a~~\n\n\u9898\u76ee\u7ffb\u8bd1\u8fd8\u633a\u597d\u7684\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6709\u4e00\u53ea\u889c\u5b50\u9700\u8981\u5728$m$\u5929\u4e2d\u7684\u591a\u5929\u51fa\u73b0\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u53ea\u889c\u5b50\u8981\u4e0e\u6240\u6709\u548c\u5b83\u914d\u5bf9\u7684\u889c\u5b50\u989c\u8272\u4e00\u6837\u3002\n\n\u4ee5\u6b64\u8054\u60f3\uff0c\u6211\u53d1\u73b0\uff1a\u8fd9\u4e2a\u5173\u8054\u5173\u7cfb\u662f\u4e00\u5f20\u56fe\uff0c\u56fe\u4e0a\u7684\u8282\u70b9\u5c31\u662f\u889c\u5b50\u7684\u7f16\u53f7\uff0c\u56fe\u7684\u8fb9\u8868\u793a\u8fd9\u4e24\u53ea\u889c\u5b50\u8981\u989c\u8272\u4e00\u6837\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\uff0c**\u5bf9\u4e8e\u8fd9\u5f20\u56fe\u7684\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u6765\u8bb2\uff0c\u5b83\u7684\u989c\u8272\u5fc5\u987b\u662f\u5168\u90e8\u4e00\u6837\u7684**\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u8fde\u901a\u5757\u6765\u8bb2\uff0c\u6700\u4f18\u7684\u51b3\u7b56\uff08\u5373\u4fee\u6539\u6700\u5c11\uff09\u5c31\u662f\u8fd9\u4e2a\u5b50\u56fe\u7684\u5168\u90e8\u8282\u70b9\u6570\u51cf\u53bb\u8fd9\u4e2a\u5b50\u56fe\u4e2d\u51fa\u73b0\u989c\u8272\u6700\u591a\u7684\u989c\u8272\u6570\u3002\u8fd9\u4e00\u70b9\u4e0d\u592a\u660e\u767d\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u770b\u6837\u4f8b\u753b\u56fe\u89e3\u51b3\u3002\n\n\u601d\u8def\u51fa\u6765\u4e86\uff1a\n\n\u4f9d\u9898\u610f\u5efa\u56fe\uff0c\u5728\u56fe\u4e0a\u8fdb\u884c\u6df1\u641c\uff0c\u7edf\u8ba1\u6bcf\u5f20\u5b50\u56fe\u7684\u8282\u70b9\u6570\u548c\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u989c\u8272\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c\u7d2f\u52a0\u7b54\u6848\u5373\u53ef\u3002\n\n~~\u4e8e\u662fT\u5230\u4e8695~~\u611f\u8c22\u51fa\u9898\u4eba@littleseven\n\n\u4e00\u5f00\u59cb\u6211\u4f7f\u7528\u4e86\u8ba1\u6570\u6570\u7ec4\uff0c\u6bcf\u6b21\u6df1\u641c\u4e00\u5f20\u5b50\u56fe\u6211\u6e05\u96f6\u4e00\u6b21(memset).\n\n\u540e\u6765\u6211\u5b66\u5230\u4e86\u4e00\u79cd\u53eb\u505a$map$\u7684\u5bb9\u5668\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5bb9\u5668\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$log$\u7ea7\u522b\u7684\uff0c\u800c\u4e14\u5b83\u63d0\u4f9b\u7684\u6620\u5c04\u64cd\u4f5c\u80fd\u591f\u7edf\u8ba1\u9898\u76ee\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u7528\u8fd9\u4e2a\u4e1c\u897f\u6765\u4f18\u5316\u5b9e\u73b0\u590d\u6742\u5ea6/\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\nconst int maxn=2*1e5+10;\nint n,m,k,tmp,ans,t;\nint tot,head[maxn],nxt[maxn<<1],to[maxn<<1];\nbool v[maxn];\nmap<int,int> mp;\nmap<int,int>::iterator it;\nchar *p1,*p2,buf[100000];\n#define nc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n    int x=0,f=1;\n    char ch=nc();\n    while(ch<48){if(ch=='-')f=-1;ch=nc();}\n    while(ch>47)    x=(((x<<2)+x)<<1)+ch-48,ch=nc();\n    return x*f;\n}\nint col[maxn];\nvoid add(int x,int y)\n{\n    to[++tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}\nvoid dfs(int x)\n{\n    v[x]=1;\n    mp[col[x]]++;\n    tmp++;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int y=to[i];\n        if(v[y])\n            continue;\n        dfs(y);\n    }\n}\nint main()\n{\n    n=read(),m=read(),k=read();\n    for(int i=1;i<=n;i++)\n        col[i]=read();\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        x=read();y=read();\n        add(x,y);\n        add(y,x);\n    }\n    for(int i=1;i<=n;i++)\n        if(!v[i])\n        {\n            tmp=0,mp.clear(),t=0;\n            dfs(i);\n            for(it=mp.begin();it!=mp.end();it++)\n                t=max(t,it->second);\n            ans+=(tmp-t);\n        }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1572925465,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF731C \u3010Socks\u3011"
    },
    {
        "content": "\u5199\u5e76\u67e5\u96c6\u7684\u65f6\u5019\u770b\u4e86\u4e00\u773c\uff0c\u975e\u5e38 $\\text{Naive}$ \u7684\u9898\u76ee\u3002\n\n\u5148\u5e76\u67e5\u96c6\u5904\u7406\u51fa\u54ea\u4e9b\u889c\u5b50\u989c\u8272\u5fc5\u987b\u76f8\u540c\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u989c\u8272\u76f8\u540c\u7684\u5757\uff0c\u5728\u8fd9\u4e2a\u5757\u91cc\u627e\u5230\u4e00\u4e2a\u989c\u8272\u6700\u591a\u7684\uff08\u5e76\u975e\u989c\u8272\u79cd\u6570\u6700\u591a\uff09\uff0c\u8ba4\u4e3a\u8fd9\u79cd\u989c\u8272\u4e0d\u9700\u8981\u88ab\u4fee\u6539\u800c\u5176\u4ed6\u9700\u8981\u88ab\u4fee\u6539\u3002\n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u66f4\u5177\u6709\u62d3\u5c55\u6027\u7684\u505a\u6cd5\uff0c\u5982\u679c\u5728\u6bcf\u6b21\u6dfb\u52a0\u4e00\u53cc\u889c\u5b50\u540e\u9644\u52a0\u4e00\u6b21\u8be2\u95ee\u5462\uff1f\uff08\u5927\u96fe\n\n**Show the Code**\n\n```cpp\n#include<cstdio>\n#include<vector>\nint a[200005],fa[200005],t[200005];\nstd::vector<int> vec[200005]; \ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n} \ninline int find(int x) {return x==fa[x]? x:fa[x]=find(fa[x]);}\ninline void merge(int x,int y) {int fx=find(x),fy=find(y); if(fx!=fy) fa[fx]=fy;} \nint main() { \n\tint n=read(),m=read(),k=read(),ans=0;\n\tfor(register int i=1;i<=n;++i) {a[i]=read();fa[i]=i;}\n\tfor(register int i=1;i<=m;++i) {int l=read(),r=read();merge(l,r);}\n\tfor(register int i=1;i<=n;++i) {vec[find(i)].push_back(i);}\n\tfor(register int i=1;i<=n;++i) {\n\t\tint mx=0;\n\t\tfor(register int j=0;j<vec[i].size();++j) ++t[a[vec[i][j]]];\n\t\tfor(register int j=0;j<vec[i].size();++j) {if(mx<t[a[vec[i][j]]]) mx=t[a[vec[i][j]]];}\n\t\tfor(register int j=0;j<vec[i].size();++j) --t[a[vec[i][j]]]; \n\t\tans+=vec[i].size()-mx;\n\t} \n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1601367619,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF731C \u3010Socks\u3011"
    }
]