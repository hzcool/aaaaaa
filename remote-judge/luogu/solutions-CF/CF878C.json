[
    {
        "content": "## \u601d\u8def\n\n\u200b       \u53c8\u662f\u4e00\u9053\u5efa\u6a21\u601d\u7ef4\u9898\u3002\u6211\u4eec\u8003\u8651\u4e24\u4e2a\u9009\u624b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5982\u679c\u4e00\u4e2a\u9009\u624b\u80fd\u5728\u67d0\u4e00\u9879\u8fd0\u52a8\u4e2d\u6218\u80dc\u5bf9\u624b\uff0c\u90a3\u4e48\u5c31\u4ece\u4ed6\u81ea\u8eab\u5411\u5bf9\u624b\u8fde\u4e00\u6761\u6709\u5411\u8fb9\u3002\u8fd9\u6837\u663e\u7136\u4f1a\u51fa\u73b0\u5f88\u591a\u73af\uff0c\u4e8e\u662f\u53ef\u4ee5\u5927\u529b\u7f29\u70b9\uff0c\u5c06\u6574\u5f20\u56fe\u7f29\u6210\u4e00\u4e2aDAG\uff08\u5b9e\u9645\u5b9e\u73b0\u4e2d\u4f1a\u53d8\u4e3a\u4e00\u6761\u94fe\uff09\u3002\u90a3\u4e48\u663e\u7136\u5165\u5ea6\u4e3a\u96f6\u7684\u73af\u4e2d\u5305\u542b\u7684\u70b9\u6570\u5373\u4e3a\u6700\u540e\u53ef\u80fd\u6210\u4e3a\u51a0\u519b\u7684\u4eba\u6570\u3002\n\n## \u5b9e\u73b0\u7ec6\u8282\n\n\u200b       \u7531\u4e8e\u9898\u76ee\u8981\u6c42\u52a8\u6001\u63d2\u5165\u70b9\uff0c\u90a3\u4e48tarjan\u5c31\u4e0d\u518d\u9002\u5408\u4e86~~\uff08\u867d\u7136\u6211\u5e76\u4e0d\u6e05\u695a\u6709\u6ca1\u6709\u5927\u4f6c\u80fd\u7528tarjan\u5207\u6389\uff09~~\uff0c\u4e8e\u662f\u6211\u4eec\u6362\u4e00\u79cd\u65b9\u6cd5\u5efa\u56fe\u3002\u7531\u4e8e\u4e00\u4f4d\u9009\u624b\u4e0d\u53ef\u80fd\u6218\u80dc\u5bf9\u624b\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u8fd0\u52a8\u80fd\u529b\u5747\u5f31\u4e8e\u5bf9\u65b9\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u4ee5\u8fd9\u4e2a\u6761\u4ef6\u6765\u5224\u65ad\uff0c\u5982\u679c\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u5c31\u8fde\u5355\u5411\u8fb9\uff0c\u5426\u5219\u5c31\u5408\u5e76\u5230\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u9009\u62e9set\u4f5c\u4e3a\u5bb9\u5668\uff0c\u628a\u4e0a\u8ff0\u5224\u65ad\u7684\u6761\u4ef6\u91cd\u8f7d\u6210\u5c0f\u4e8e\u53f7\uff0c\u5728set\u4e2d\u7528find\u67e5\u627e\u662f\u5426\u6709\u4e0e\u5f53\u524d\u9009\u624b\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u5e76\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u3002\u5408\u5e76\u540e\uff0c\u6211\u4eec\u7684\u8282\u70b9\uff08\u5373\u4e00\u4e2a\u73af\uff09\u8bb0\u5f55\u7684\u662f\u73af\u4e2d\u6bcf\u9879\u8fd0\u52a8\u6240\u6709\u9009\u624b\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u73af\u4e0e\u73af\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002\n\n\u200b\t\u5c06\u6240\u6709\u70b9\u63d2\u5165\u540e\uff0c\u7b54\u6848\u5373\u4e3aset\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u6211\u4eec\u91cd\u8f7d\u4e86\u5c0f\u4e8e\u53f7\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u201c\u5927\u4e8e\u201d\u4e4b\u524d\u7684\u70b9\u7684\uff0c\u5728\u7f29\u70b9\u540e\u7684\u56fe\u4e2d\u4e00\u5b9a\u662f\u5165\u5ea6\u4e3a\u96f6\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, k;\n\nstruct node{\n    int sz;\n    int mx[15], mn[15];\n    node(){\n        memset(mx, 0, sizeof(mx));\n        memset(mn, 0x3f, sizeof(mn));\n    }\n    friend bool operator <(node a, node b){\n        for(int i = 1; i <= k; i++){\n            if(a.mx[i] > b.mn[i]){\n                return false;\n            }\n        }\n        return true;\n    }\n};\n\nset<node> s;\nset<node>::iterator it;\n\nint main()\n{\n    cin >> n >> k;\n    node t;\n    for(int i = 1; i <= n; i++){\n        t.sz = 1;\n        for(int j = 1; j <= k; j++){\n            scanf(\"%d\", &t.mn[j]);\n            t.mx[j] = t.mn[j];\n        }\n        while((it = s.find(t)) != s.end()){\n            t.sz += it->sz;\n            for(int j = 1; j <= k; j++){\n                t.mn[j] = min(t.mn[j], it->mn[j]);\n                t.mx[j] = max(t.mx[j], it->mx[j]);\n            }\n            s.erase(it);\n        }\n        s.insert(t);\n        printf(\"%d\\n\", (--s.end())->sz);\n    }\n    \n    return 0;\n}\n```\n\n",
        "postTime": 1552914561,
        "uid": 22991,
        "name": "fighter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF878C \u3010Tournament\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/LaoMang-no-blog/p/16304953.html)\n\n---\n\n[**\u4f60\u8c37 link**](https://www.luogu.com.cn/problem/CF878C)\n\n[**CF link**](https://codeforces.com/problemset/problem/914/F)\n\n\u8fd9\u4e2a\u9898\u4e5f\u662f\u975e\u5e38\u795e\u5947\u4e86\u3002\n\nCF \u8bc4\u5206 2700\uff0c\u770b\u8d77\u6765\u5f88\u96be\u641e\u7684\u6837\u5b50\uff0c\u5176\u5b9e\u96be\u5ea6\u5e76\u6ca1\u6709\u60f3\u8c61\u4e2d\u90a3\u4e48\u5927\uff0c\u4e3b\u8981\u662f\u8981\u5229\u7528 C++ \u7684\u4f18\u52bf\u2014\u2014STL\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u8bb2\u505a\u6cd5\uff0c\u8003\u8651\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2a\u8bf4\u6cd5\uff0c\u5982\u679c\u4e24\u4e2a\u4eba $A$ \u548c $B$ \u6ee1\u8db3 $A$ \u4efb\u4f55\u8fd0\u52a8\u90fd\u5f3a\u4e8e $B$\uff0c\u5219\u79f0 $A$ **\u540a\u6253** $B$\u3002\n\n\u60f3\u60f3\u4ec0\u4e48\u65f6\u5019**\u53ea\u6709**\u4e00\u4e2a\u4eba\u80fd\u593a\u51a0\uff0c\u90a3\u5c31\u662f\u4ed6\u540a\u6253\u6240\u6709\u4eba\u7684\u65f6\u5019\uff0c\u800c\u5982\u679c\u4e00\u4e2a\u4eba\u53ef\u80fd\u593a\u51a0\uff0c\u6761\u4ef6\u4e0d\u9700\u8981\u8fd9\u4e48\u82db\u523b\uff0c\u53ea\u8981\u4ed6\u8981\u80fd\u95f4\u63a5\u6253\u8d25\u6240\u6709\u4eba\uff0c\u6bd4\u5982\u77f3\u5934\u526a\u5200\u5e03\uff0c\u4e09\u4e2a\u5bf9\u51b3\u7684\u65f6\u5019\u6b21\u5e8f\u51b3\u5b9a\u4e86\u51a0\u519b\u3002\n\n\u8003\u8651\u52a0\u5165\u6211\u4eec\u5df2\u7ecf\u7ef4\u62a4\u597d\u4e00\u4e2a\u51a0\u519b\u96c6\u5408\uff0c\u5373\u8fd9\u4e2a\u96c6\u5408\u91cc\u7684\u4eba\u90fd\u53ef\u80fd\u6210\u4e3a\u51a0\u519b\uff0c\u90a3\u4e48\u4e00\u4e2a\u4eba\u5982\u679c\u60f3\u6210\u4e3a\u51a0\u519b\uff0c\u90a3\u4e48\u4ed6\u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u67d0\u4eba\u4ece\u67d0\u4e2a\u65b9\u9762\u6253\u8d25\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u5148\u6267\u884c\u4e4b\u524d\u8fd9\u4e2a\u4eba\u83b7\u5f97\u51a0\u519b\u7684\u5bf9\u5c40\uff0c\u7136\u540e\u518d\u8ba9\u65b0\u4eba\u6253\u8d25\u4ed6\u5c31\u597d\u4e86\uff0c\u4f46\u5982\u679c\u4ed6\u60f3\u8981\u8ba9\u522b\u4eba\u65e0\u6cd5\u6210\u4e3a\u51a0\u519b\uff0c\u5c31\u5fc5\u987b\u540a\u6253\u8fd9\u4e2a\u96c6\u5408\u91cc\u7684\u6240\u6709\u4eba\u3002\n\n\u540c\u65f6\u9700\u8981\u6ce8\u610f\u5982\u679c\u65b0\u4eba\u80fd\u6210\u4e3a\u51a0\u519b\uff0c\u800c\u4e4b\u524d\u672c\u6765\u65e0\u6cd5\u6210\u4e3a\u51a0\u519b\u7684\u4eba\u53ef\u4ee5\u6253\u8d25\u8fd9\u4e2a\u65b0\u4eba\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4eba\u4e5f\u53ef\u4ee5\u6210\u4e3a\u51a0\u519b\uff0c\u540c\u7406\u80fd\u6253\u8d25\u8fd9\u4e2a\u4eba\u7684\u4eba\u4e5f\u80fd\u6210\u4e3a\u51a0\u519b\u3002\n\n\u7ef4\u62a4\u8d77\u6765\u5176\u5b9e\u4e0d\u9ebb\u70e6\uff0c\u6211\u4eec\u8003\u8651\u6a21\u4eff\u51a0\u519b\u96c6\u5408\u7ef4\u62a4\u5f88\u591a\u96c6\u5408\uff0c\u6bcf\u4e2a\u96c6\u5408\u8868\u793a\u4e00\u7fa4\u4eba\uff0c\u8fd9\u7fa4\u4eba\u5355\u72ec\u53d6\u51fa\u6765\u6bcf\u4e2a\u4eba\u90fd\u80fd\u6210\u4e3a\u51a0\u519b\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u65b0\u4eba\u52a0\u5165\u65f6\u5bf9\u8fd9\u4e48\u591a\u96c6\u5408\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u5148\u8981\u51cf\u5c11\u96c6\u5408\u7ef4\u62a4\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u8981\u8bb0\u5f55\u6bcf\u4e2a\u96c6\u5408\u6bcf\u4e2a\u8fd0\u52a8\u6700\u5f3a\u8005\u548c\u6700\u5f31\u8005\u7684\u80fd\u529b\u503c\u5c31\u597d\u4e86\uff0c\u7528\u6765\u5224\u65ad\u80fd\u4e0d\u80fd\u6253\u8d25\u548c\u88ab\u6253\u8d25\uff0c\u7136\u540e\u518d\u8bb0\u5f55\u4eba\u6570\u5c31\u597d\u4e86\uff0c\u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u96c6\u5408 $A$ \u6bcf\u4e2a\u8fd0\u52a8\u7684\u6700\u5f3a\u503c\u90fd\u5f31\u4e8e\u53e6\u4e00\u4e2a\u96c6\u5408 $B$ \u8be5\u8fd0\u52a8\u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u79f0\u96c6\u5408 $A$ **\u540a\u6253** $B$\uff0c\u5982\u679c $A$ \u548c $B$ \u90fd\u4e0d\u4f1a\u4e92\u76f8\u540a\u6253\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u96c6\u5408\u663e\u7136\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u800c\u51a0\u519b\u96c6\u5408\u5c31\u662f\u80fd\u540a\u6253\u5176\u4ed6\u6240\u6709\u96c6\u5408\u7684\u90a3\u4e2a\u96c6\u5408\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8981\u7ef4\u62a4\u8fd9\u4e48\u591a\u96c6\u5408\u7684\u5173\u7cfb\uff0c\u53d1\u73b0 C++ \u7684 STL \u91cc\u6709\u4e2a\u4e1c\u897f\u53eb\u505a `set`\uff0c\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u5730\u4f7f\u7528\u8fd9\u4e2a\u4e1c\u897f\uff0c\u9996\u5148\u5b9a\u4e49\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff0c\u51fa\u4e8e\u5f62\u8c61\u6211\u4eec\u5b9a\u4e49\u5927\u4e8e\u53f7\uff0c\u6211\u4eec\u7528\u540a\u6253\u5b9a\u4e49\u5927\u4e8e\u53f7\uff0c\u8fd9\u6837\u7684\u8bdd $set$ \u5185\u7f6e\u4e5f\u4f1a\u628a\u7b49\u53f7\u5b9a\u4e49\u597d\uff0c\u5c31\u662f\u6ee1\u8db3 $A\\not>B\\land B\\not>A$\uff0c\u8fd9\u6837\u7684\u8bdd\u81ea\u7136\u5730\u5c31\u5f62\u6210\u4e86\u4e24\u4e2a\u96c6\u5408\u53ef\u4ee5\u5408\u5e76\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u65b0\u63d2\u5165\u7684\u4eba\u4e00\u4e2a\u4eba\u770b\u505a\u4e00\u4e2a\u96c6\u5408\uff0c\u6bcf\u6b21\u7528 `set` \u7684 `find` \u51fd\u6570\u627e\u51fa `set` \u4e2d\u4e0e\u65b0\u4eba\u53ef\u4ee5\u5408\u5e76\u7684\u96c6\u5408\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u5408\u5e76\uff0c\u7136\u540e\u53d6\u51fa\u6700\u5927\u7684\u96c6\u5408\u8f93\u51fa\u5927\u5c0f\u5c31\u597d\u4e86\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/878/submission/158257559)\u5b9e\u73b0\u4e0a\u96be\u5ea6\u4e0d\u5927\uff0c\u56e0\u4e3a STL \u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u5f88\u5927\u7684\u4fbf\u5229\u3002",
        "postTime": 1653363417,
        "uid": 310525,
        "name": "\u8001\u83bd\u83bd\u7a7f\u4e00\u5207",
        "ccfLevel": 0,
        "title": "[CF878C] Tournament \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u628a\u4e24\u4e2a\u4eba\u7684\u6bd4\u8d5b\u8fde\u8fb9\uff0c\u5982\u679cA\u53ef\u80fd\u8d62B\u4e14B\u53ef\u80fd\u8d62A\uff0c\u5219\u4ed6\u4eec\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u7528\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u65b9\u6cd5\u8fdb\u884c\u7f29\u70b9\uff0c\u90a3\u4e48\u6700\u540e\u6574\u5f20\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a\u94fe(\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48)\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\u5c31\u662f\u7b54\u6848\u3002\n\n\u4e0d\u8fc7\u5bf9\u4e8e\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5904\u7406\uff0c\u8fd9\u9898\u6709\u4e00\u4e2a\u975e\u5e38\u7cbe\u5999\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u7528set\uff0c\u628a\u8f93\u8d62\u53d8\u6210\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u90a3\u4e48\u5982\u679c\u5982\u679cA\u53ef\u80fd\u8d62B\u4e14B\u53ef\u80fd\u8d62A\uff0c\u5219A==B\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528find\u51fd\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read() {\n    int data=0,w=1;\n    char ch=0;\n    while(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n    if(ch=='-') {w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {data=data*10+ch-'0';ch=getchar();}\n    return data*w;\n}\nvoid write(int x) {\n    if(x>=10) write(x/10);\n    register char ch=x%10+'0';\t\n    putchar(ch);\n}\nint n,m,ans,k;\nstruct node {\n    int sz,mx[12],mn[12];\n    friend bool operator < (node a,node b) {\n        for(int i=1;i<=k;i++)\n            if(a.mx[i]>b.mn[i]) return 0;\n        return 1;\n    }\t\n} sxd;\nset <node> q;\nsigned main() {\n    cin>>n>>k;\n    for(int i=1;i<=n;i++) {\n        sxd.sz=1;\n        for(int j=1;j<=k;j++) {sxd.mn[j]=sxd.mx[j]=read();}\n        set <node> :: iterator it=q.find(sxd);\n        while(it!=q.end()) {\n            sxd.sz+=(*it).sz;\n            for(int j=1;j<=k;j++) {\n                sxd.mx[j]=max(sxd.mx[j],(*it).mx[j]);\n                sxd.mn[j]=min(sxd.mn[j],(*it).mn[j]);\n            }\n            q.erase(it);\n            it=q.find(sxd);\n        }\n        q.insert(sxd);\n        write((*q.rbegin()).sz);\n        puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1542150591,
        "uid": 83859,
        "name": "wky32768",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF878C \u3010Tournament\u3011"
    }
]