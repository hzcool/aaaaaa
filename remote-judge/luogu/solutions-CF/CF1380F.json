[
    {
        "content": "## \u52a8\u6001 dp\n\n\u5148\u8003\u8651\u5982\u679c\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\u600e\u4e48 dp\u3002\n\n\u8bbe $dp_i$ \u8868\u793a $1\\sim i$ \u4f4d\u7684\u7b54\u6848\u3002\n\n\u5982\u679c\u7b2c $i$ \u53ef\u4ee5\u8fdb\u4f4d\u90a3\u4e48\u9700\u8981\u4fdd\u8bc1 $a_{i-1}=1$\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u5c31\u663e\u7136\u4e86\uff1a\n\n$$dp_i=(a_i+1)dp_{i-1}+[a_{i-1}=1](9-a_i)dp_{i-2}$$\n\n\u6bcf\u6b21\u4fee\u6539\u90fd $\\mathcal{O}(n)$ dp \u4e00\u904d\u663e\u7136\u4f1a\u7206\u70b8\uff0c\u8003\u8651\u628a\u8f6c\u79fb\u5199\u6210\u77e9\u9635\u5f62\u5f0f\uff1a\n\n$$\n\\begin{bmatrix}\ndp_i \\\\\ndp_{i-1}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\na_i+1 & [a_{i-1}=1](9-a_i)\\\\\n1 & 0 \n\\end{bmatrix}\n\n\\times\n\n\\begin{bmatrix}\ndp_{i-1} \\\\\ndp_{i-2}\n\\end{bmatrix}\n$$\n\n\u8fb9\u754c\uff1a\u628a $dp_0$ \u548c $dp_{-1}$ \u8bbe\u6210 $1$\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u5f53\u4fee\u6539 $a_x$ \u7684\u65f6\u5019\u9700\u8981\u628a $x$ \u548c $x+1$ \u4f4d\u7f6e\u7684\u77e9\u9635\u90fd\u66f4\u65b0\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal{O}(2^3m\\log n)$\u3002\n\n---\n\n***code:***\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int mod=998244353;\n#define N 500050\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nint n,Q,a[N];\nchar s[N];\nstruct Matrix{    //\u77e9\u9635\u677f\u5b50\n\tint g[3][3];\n\tMatrix(){memset(g,0,sizeof(g));}\n\tinline Matrix operator *(const Matrix a){\n\t\tMatrix b;\n\t\tfor(int i=1;i<=2;++i){\n\t\t\tfor(int j=1;j<=2;++j){\n\t\t\t\tfor(int k=1;k<=2;++k){\n\t\t\t\t\tb.g[i][j]=(b.g[i][j]+1LL*g[i][k]*a.g[k][j])%mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn b;\n\t}\n}e,ed;\nstruct node{\n\tint l,r;\n\tMatrix p;\n}tree[N<<2];\n#define ls i<<1\n#define rs i<<1|1\ninline void update(int i){\n\ttree[i].p=tree[rs].p*tree[ls].p;\n}\nvoid build(int i,int l,int r){      //\u521d\u59cb\u5efa\u6811\n\ttree[i].l=l;\n\ttree[i].r=r;\n\tif(l==r){\n\t\ttree[i].p.g[2][1]=1;\n\t\ttree[i].p.g[1][1]=a[l]+1;\n\t\ttree[i].p.g[1][2]=(a[l-1]==1)*(9-a[l]);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tupdate(i);\n}\nvoid Change(int i,int pos){           //\u66f4\u65b0\u77e9\u9635\n\tif(tree[i].l==tree[i].r){\n\t\ttree[i].p.g[1][1]=a[pos]+1;\n\t\ttree[i].p.g[1][2]=(a[pos-1]==1)*(9-a[pos]);\n\t\treturn;\n\t}\n\tint mid=(tree[i].l+tree[i].r)>>1;\n\tif(pos<=mid)Change(ls,pos);\n\telse Change(rs,pos);\n\tupdate(i);\n}\nint main(){\n\tn=read(),Q=read();\n\tscanf(\"%s\",s+1);\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]=s[i]-'0';\n\t}\n\te.g[1][1]=e.g[2][2]=1;\n\ted.g[1][1]=ed.g[2][1]=1; \n\tbuild(1,1,n);\n\twhile(Q--){\n\t\tint pos=read(),x=read();\n\t\ta[pos]=x;\n\t\tChange(1,pos);\n\t\tif(pos<n)Change(1,pos+1);\n\t\tprintf(\"%d\\n\",(tree[1].p*ed).g[1][1]); //\u6700\u540e\u522b\u5fd8\u4e86\u518d\u4e58\u4e0a\u521d\u77e9\u9635\n\t}\n\treturn 0;\n}\n```\n\n[*Froggy's blog*](https://www.luogu.org/blog/1445353309froggy/)\n\n#### \u5471!!",
        "postTime": 1595404344,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1380F \u3010Strange Addition\u3011"
    },
    {
        "content": "\u8003\u8651\u4e24\u4e2a\u4e2a\u4f4d\u6570\u76f8\u52a0\u5176\u503c\u5728 $[0,18]$ \u4e4b\u95f4\u3002\n\n\u8bbe $dp_{i,0/1}$ \u8868\u793a\u524d $i$ \u4e2a\u6570\u672b\u5c3e\u4e00\u4f4d\u4e3a $1$ / \u4e0d\u662f $1$ \u7684\u914d\u5bf9\u65b9\u6848\u3002     \n\n\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u5f97\u51fa\u5982\u4e0b\u65b9\u7a0b\uff1a            \n\n$dp_{i,0} = [(dp_{i - 1,0} + dp_{i - 1,1}) \\times (s_i + 1) + (dp_{i - 2,0} + dp_{i - 2 , 1}) \\times (9 - s_i) \\times [s_{i - 1} = 1]] \\times [s_i \\neq 1]$\n\n$dp_{i,1} = [(dp_{i - 1,0} + dp_{i - 1,1}) \\times (s_i + 1) + (dp_{i - 2,0} + dp_{i - 2 , 1}) \\times (9 - s_i) \\times [s_{i - 1} = 1]] \\times [s_i = 1]$\n\n\u5f53\u7136\u518d\u89c2\u5bdf\u4e00\u4e0b\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u53ea\u7528\u4e00\u7ef4\u8868\u793a\u7684\uff0c\u4f46\u662f\u592a\u61d2\u4e86\u5c31\u61d2\u5f97\u5316\u7b80\u4e86\u3002\n\n\u53d1\u73b0\u662f\u4e00\u4e2a\u5e38\u7cfb\u6570\u9f50\u6b21\u9012\u63a8\uff0c\u628a\u5bf9\u5e94\u7684\u628a\u7cfb\u6570\u6253\u8fdb\u77e9\u9635\u91cc\u9762\u540e\u505a\u5355\u70b9\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u4e58\u5c31\u597d\u4e86\u3002    \n\n\u6ce8\u610f\u4e00\u4e0b\u6bcf\u6b21\u6539\u7684\u65f6\u5019\u82e5\u4fee\u6539\u7684\u662f\u4f4d\u7f6e $x$ \u5219 \u4f4d\u7f6e $x + 1$ \u7684\u77e9\u9635\u4e5f\u8981\u91cd\u7f6e\u3002          \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(4 ^ 3 n \\log n)$\uff0c\u76f4\u63a5\u6bd4\u522b\u4eba\u591a\u4e86\u4e2a $8$ \u500d\u5e38\u6570\u3002\n```cpp\n/*\n\u56e0\u4e3a\u8fd9\u4e2a\u9898\u5f97\u77e9\u4e58\uff0c\u6240\u4ee5\u7b54\u6848\u53ea\u80fd\u4ecedp_{i - 1}\u8f6c\u79fb2344\n\u5b9a\u4e49dp_{i,j}\u8868\u793a\u524di\u4e2a\u6570\u5408\u5e76\u51fa\u6765\u672b\u5c3e\u4e3aj\u7684\u65b9\u6848\u6570\n\u7136\u800c\u8fd9\u4e2a\u80af\u5b9a\u4f1a\u88ab\u5361\u6389\u7684\n\u53d1\u73b0\u53ea\u6709\u524d\u4e00\u4f4d\u4e3a1\u65f6\u5b58\u5728\u8fdb\u4f4d\uff0c\u90a3\u4e48\u5c31\u5c04dp_{i,0/1}\u8868\u793a\u524di\u4e2a\u6570\u5408\u5e76\u51fa\u6765\u672b\u5c3e\u662f\u4e0d\u662f0/1\u5c31\u884c\u4e86\n\u7136\u540e\u5927\u6982\u5f97\u7528\u4e00\u4e2a4 * 4\u7684\u77e9\u9635\u8f6c\u79fb\uff1a\n\u9996\u5148\u770b\u662f1\u8fd8\u662f\u5176\u4ed6\uff0c\u7136\u540e\u628a\u5bf9\u5e94\u7684\u7cfb\u6570\u6254\u5c31\u597d\u4e86dp_{i,0/1} = dp_{i - 1,0} * (s[i] + 1) + dp_{i - 1,1} * (s[i] + 1) + [s_{i - 1} = 1] * (dp_{i - 2,1} * (9 - s_i) + dp_{i-2,0} * (9 - s_i))\n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 5e5 + 5 , MOD = 998244353;\nint n,q,vis[Len << 2];\nstruct node\n{\n\tint a[5][5];\n\tnode(){memset(a , 0 , sizeof a);}\n\tinline void clear(){for(int i = 1 ; i <= 4 ; i ++) for(int j = 1 ; j <= 4 ; j ++) a[i][j] = 0;}\n\tinline void build(){for(int i = 1 ; i <= 4 ; i ++) a[i][i] = 1;}\n\tnode operator * (const node &y)\n\t{\n\t\tnode z;z.clear();\n\t\tfor(int i = 1 ; i <= 4 ; i ++)\n\t\t\tfor(int k = 1 ; k <= 4 ; k ++)\n\t\t\t{\n\t\t\t\tif(!a[i][k]) continue; \n\t\t\t\tfor(int j = 1 ; j <= 4 ; j ++)\n\t\t\t\t\tz.a[i][j] = (z.a[i][j] + 1ll * a[i][k] * y.a[k][j] % MOD) % MOD;\n\t\t\t}\n\t\treturn z; \n\t}\n}tree[Len << 2],Int,Ans,ADD;\nchar s[Len];\n#define ls(p) p << 1\n#define rs(p) p << 1 | 1\nvoid push_up(int x){tree[x] = tree[ls(x)] * tree[rs(x)];vis[x] = vis[ls(x)] | vis[rs(x)];}\nvoid build(int p,int l,int r)\n{\n\tif(l == r) \n\t{\n\t\ttree[p].clear();\n\t\ttree[p].a[1][3] = 1 , tree[p].a[2][4] = 1;\n\t\tint x = s[l] - '0';\n\t\tif(s[l] == '1') \n\t\t{\n\t\t\ttree[p].a[1][2] = x + 1;\n\t\t\ttree[p].a[2][2] = x + 1;\n\t\t\tif(s[l - 1] == '1')\n\t\t\t{\n\t\t\t\ttree[p].a[4][2] = 9 - x;\n\t\t\t\ttree[p].a[3][2] = 9 - x;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttree[p].a[1][1] = x + 1;\n\t\t\ttree[p].a[2][1] = x + 1;\n\t\t\tif(s[l - 1] == '1')\n\t\t\t{\n\t\t\t\ttree[p].a[4][1] = 9 - x;\n\t\t\t\ttree[p].a[3][1] = 9 - x;\n\t\t\t}\n\t\t}\n\t\tif(s[l] == '0') vis[p] = 0;\n\t\telse vis[p] = 1;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid);\n\tbuild(rs(p) , mid + 1 , r);\n\tpush_up(p);\n}\nvoid update(int p,int l,int r,int idx)\n{\n\tif(l == r)\n\t{\n\t\ttree[p].clear();\n\t\ttree[p].a[1][3] = 1 , tree[p].a[2][4] = 1;\n\t\tint x = s[l] - '0';\n\t\tif(s[l] == '1') \n\t\t{\n\t\t\ttree[p].a[1][2] = x + 1;\n\t\t\ttree[p].a[2][2] = x + 1;\n\t\t\tif(s[l - 1] == '1')\n\t\t\t{\n\t\t\t\ttree[p].a[4][2] = 9 - x;\n\t\t\t\ttree[p].a[3][2] = 9 - x;\t\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttree[p].a[1][1] = x + 1;\n\t\t\ttree[p].a[2][1] = x + 1;\n\t\t\tif(s[l - 1] == '1')\n\t\t\t{\n\t\t\t\ttree[p].a[4][1] = 9 - x;\n\t\t\t\ttree[p].a[3][1] = 9 - x;\n\t\t\t}\n\t\t}\n\t\tif(s[l] == '0') vis[p] = 0;\n\t\telse vis[p] = 1;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(idx <= mid) update(ls(p) , l , mid , idx);\n\telse update(rs(p) , mid + 1 , r , idx);\n\tpush_up(p);\n}\nint findidx(int p,int l,int r)\n{\n\tif(l == r) \n\t{\n\t\tif(!vis[p]) return -1;\n\t\treturn l;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(vis[ls(p)]) return findidx(ls(p) , l , mid);\n\telse return findidx(rs(p) , mid + 1 , r);\n}\nvoid query(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r){ADD = ADD * tree[p];return;}\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) query(ls(p) , l , mid , nl , nr);\n\tif(nr > mid) query(rs(p) , mid + 1 , r , nl , nr);\n}\nchar ss[5];\nint main()\n{\n\tInt.clear();\n\tscanf(\"%d %d\",&n,&q);\n\tscanf(\"%s\",s + 1);\n\ts[0] = '?';\n\tbuild(1 , 1 , n);\n\tfor(int j = 1 ; j <= q ; j ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\ts[x] = y + '0';\n\t\tupdate(1 , 1 , n , x);\n\t\tif(x + 1 <= n) update(1 , 1 , n , x + 1);\n\t\tADD.clear();ADD.build();\n\t\tint idx = findidx(1 , 1 , n);\n\t\tif(idx == -1) \n\t\t{\n\t\t\tputs(\"1\");\n\t\t\tcontinue;\n\t\t} \n\t\tquery(1 , 1 , n , idx , n);\n\t\tInt.clear();\n\t\tInt.a[1][1] = 1;\n\t\tAns = Int * ADD;\n\t\tif(s[n] == '1') printf(\"%d\\n\",Ans.a[1][2]);\n\t\telse printf(\"%d\\n\",Ans.a[1][1]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1637052534,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1380F Strange Addition"
    },
    {
        "content": "\u52a8\u6001dp\uff1f\n~~\u7406\u89e3\u6210\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u77e9\u9635\u5c31\u884c\u4e86~~\n\n\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u7684 $dp$ \u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\u8bbe $dp_i$ \u4e3a\u5230\u5f53\u524d $i$ \u4f4d\u7684\u65b9\u6848\u6570\u3002\n\n\u5219 $dp_i$ \u662f\u53ef\u4ee5\u4ece $dp_{i-1}$ \u548c $dp_{i-2}$ \u8f6c\u79fb\u5f97\u5230\u7684\u3002\n\n\u8003\u8651\u8fdb\u4f4d\u95ee\u9898\uff0c\u5982\u679c\u8fdb\u4f4d\u4e86\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f 1\u3002\n\n~~\u4ee5\u4e0b\u95ee\u9898\u81ea\u52a8\u7701\u7565~~\n\n\u5f97\u5230 $dp_i = (a_i + 1)dp_{i-1} + [a_{i-1}=1] (9 - a_i)\\times dp_{i-2}$\n\n$$ \\left[\\begin{matrix}dp_i \\\\ dp_{i-1}\\end{matrix}\\right] =\\left[ \\begin{matrix}a_i + 1 & [a_{i-1}=1]\\times(9-a_i) \\\\ 1 & 0 \\end{matrix} \\right] \\times \\left[\\begin{matrix}dp_{i-1} \\\\ dp_{i-2}\\end{matrix}\\right]$$\n\n\u7279\u6b8a\u7684\uff0c\u4ee4 $dp_0 = dp_{-1} = 1$\n\n\u4ee3\u7801\u8dd1\u5f97\u6162\uff0c\u4e0d\u653e\u4e86\u3002",
        "postTime": 1595491591,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1380F \u3010Strange Addition\u3011"
    }
]