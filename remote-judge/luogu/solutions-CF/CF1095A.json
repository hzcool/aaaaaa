[
    {
        "content": "# CF1095A Repeating Cipher  \u7b2c\u4e09\u7bc7\u9898\u89e3\n## \u5148\u770b\u9898\uff1a\n\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32,\u6709\u5982\u4e0b\u673a\u5bc6\u89c4\u5219:\n    \n\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26$s_i$,\u5c06\u5b83\u590d\u5236$i$\u904d,\u7136\u540e\u653e\u5230\u52a0\u5bc6\u4e32\u7684\u672b\u5c3e.\n    \n\u73b0\u5728\u7ed9\u51fa\u52a0\u5bc6\u4e32,\u8981\u6c42\u8fd8\u539f\u539f\u4e32.\n#### \u770b\u4e86\u4e00\u4e0b\uff0c\u524d\u9762\u7684\u5927\u4f6c\u4eec\u597d\u50cf\u90fd\u6ca1\u8bb2\u6e05\u695a\u9898\u610f&\u601d\u8def\uff0c\u6211\u6765\u8bb2\u4e00\u4e0b\u5427\n### \u9898\u610f\uff1a\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u73b0\u5728\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32$s$\uff0c\u7136\u540e\u5c06$s_1$\u5199$1$\u904d\uff0c\u7136\u540e\u5c06$s_2$\u5199$2$\u904d\uff0c\u7136\u540e\u5c06$s_3$\u5199$3$\u904d\u3002\u3002\u3002\u3002\u3002\u3002\u7136\u540e\u5c06$s_n$\u5199$n$\u904d,\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32$s'$\n\n$for$ $example:$ $bab$->\u5199\u4e00\u904d$s_1$(\u5c31\u662fb)->\u5199\u4e24\u904d$s_2$(\u5c31\u662fa)->\u5199\u4e09\u904d$s_3$(\u5c31\u662fb)->\u5f97\u5230$s'$(\u5c31\u662fbaabbb)\n\n\u8f93\u5165\u683c\u5f0f\uff1a\u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6570$n(1\u2264n\u226455)$,\u8868\u793a\u5b57\u7b26\u4e32$s$\u7684\u957f\u5ea6\n\u7b2c\u4e8c\u884c\u8f93\u5165\u5b57\u7b26\u4e32$s'$\uff08\u6ce8\u610f\u8f93\u5165\u7684\u662f$s'$\uff0c\u8fd9\u662f\u4e00\u4e2a\u89e3\u5bc6\u8fc7\u7a0b\uff09\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\u4e00\u884c\uff0c\u5b57\u7b26\u4e32$s$\n### \u601d\u8def\uff1a\n\u6211\u4eec\u60f3\u60f3\uff0c$s_i$\u4f1a\u51fa\u73b0\u5728$s'$\u7684\u54ea\u91cc\u5462\uff1f\n\n\u5728\u5b57\u7b26\u4e32$s$\u91cc\uff0c$s_i$\u524d\u9762\u6709$i-1$\u4e2a\u5b57\u7b26\n\n\u5219\u5728\u5b57\u7b26\u4e32$s'$\u91cc\uff0c$s_i$\u524d\u9762\u6709$1+2+3+\u2026\u2026+(i-1)$\u5373$\\frac{i*(i-1)}{2}$\u4e2a\u5b57\u7b26\uff0c\u8fd9\u8bf4\u660e$s_i$\u4f1a\u51fa\u73b0\u5728$s'$\u7684$\\frac{i*(i-1)}{2}+1$\u4e2a\u5b57\u7b26\u5230$\\frac{i*(i+1)}{2}$\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8f93\u51fa\u7b2c$\\frac{1*(1-1)}{2}+1$\u4e2a\u5b57\u7b26\uff0c\u7b2c$\\frac{2*(2-1)}{2}+1$\u4e2a\u5b57\u7b26\uff0c\u7b2c$\\frac{3*(3-1)}{2}$\u4e2a\u5b57\u7b26\u2026\u2026\u7b2c$\\frac{n*(n-1)}{2}+1$\u4e2a\u5b57\u7b26\u5c31\u76f8\u5f53\u4e8e\u8f93\u51fa\u4e86\u5b57\u7b26\u4e32$s$\u5566\uff01\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u6109\u5feb\u7684\u5f00\u59cb\u6572\u4ee3\u7801\u5566\n### \u8fd8\u6709\u4e00\u70b9\uff1a\u4e0d\u7528\u4e07\u80fd\u5934\uff01\n\u4ee3\u7801\u5728\u8fd9\uff1a\n```cpp\n#include<cstdio>\nusing namespace std;\nint i=0,l,n=0;//\u521d\u59cb\u5316\nchar s[60];//\u5b57\u7b26\u4e32s\nint main(){\n\tscanf(\"%d%s\",&l,s);//\u8bfb\u5165\n\tfor(;i<l;i+=n+1,n++) printf(\"%c\",s[i]);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1547823633,
        "uid": 133264,
        "name": "teacup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    },
    {
        "content": "# CF1095A:Repeating Cipher\u9898\u89e3\n---\n---\n## \u5148\u8d34\u4ee3\u7801\n###### ~~\uff08\u7231\u6284\u4e0d\u6284\uff0c\u53cd\u6b63\u8d26\u53f7\u662f\u4f60\u4eec\u7684\uff09~~\n---\n### \u5728\u7ebf\u505a\u6cd5:\n```cpp\n#include<cstdio>\nusing namespace std;\nint book[20]={0,1,3,6,10,15,21,28,36,45,55,66,78,91,105,120,136};\nint main(){\n\tchar x;int n=1,a=1,m;\n\tscanf(\"%d\",&m);getchar();\n\twhile(1){\n\t\tx=getchar();\n\t\tif(n==m+1)return 0;\n\t\telse if(n==book[a]){a++;printf(\"%c\",x);}\n\t\tn++;\n\t}\n\treturn 0;\n}\n```\n---\n### \u79bb\u7ebf\u505a\u6cd5:\n```cpp\n#include<cstdio>\nusing namespace std;\nint book[20]={0,1,3,6,10,15,21,28,36,45,55,\n\t66,78,91,105,120,136},n;\nchar a[120];\nint main(){\n\tscanf(\"%d\\n%s\",&n,a);\n\tfor(int i=0,j=0;i<=n+1;i++)\n\t\tif(i==book[j]){\n\t\t\tj++;printf(\"%c\",a[i]);\n\t\t}\n\treturn 0;\n}\n```\n##### ~~(\u79bb\u7ebf\u8fd9\u4e2a\u601d\u8def\u597d\u50cf\u8fc7\u4e0d\u4e86\uff1f\u8fd8\u662f\u6211\u5199\u9519\u4e86\uff1f\u8bf7\u5927\u4f6c\u6307\u6b63\uff0c\u975e\u5e38\u7384\u5b66)~~\n---\n---\n---\n---\n## \u4e0b\u8fb9\u8bb2\u89e3\uff08\u5728\u7ebf\u505a\u6cd5\uff09\u4ee3\u7801\uff1a\n#### \u9996\u5148\uff0c\u8bf4\u4e00\u4e0bbook[]\u6570\u7ec4\u662f\u5e72\u5565\u7528\u7684\u3002\u6211\u4eec\u77e5\u9053\uff0c\u8fd9\u9053\u9898\u7684\u52a0\u5bc6\u662f\u5c06s[i]\u5199i\u904d\u4f5c\u4e3a\u52a0\u5bc6\u7684\u65b9\u6cd5\uff0c\u8ba9\u6211\u4eec\u8fdb\u884c\u89e3\u5bc6\u3002\n#### \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\uff0c\u52a0\u5bc6\u540e\u7684\u4e32\u4e2d\u7684\u54ea\u51e0\u4e2a\u5e94\u8be5\u8f93\u51fa\u3002\n### \u6211\u4eec\u5148\u6309\u7167\u4ed6\u7684\u8fd9\u51e0\u4e2a\u6837\u4f8b\u4e0e\u8981\u6c42\u63a8\u4e00\u63a8\uff0c\u5f97\u5230\u4e86\u8fd9\u6837\u7684\u89c4\u5f8b\uff0c\u5f97\u5230\u8fd9\u4e2a\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/59747.png)\n### \u8fd9\u4e2a\u7a0d\u5fae\u6709\u70b9\u9519\u4f4d ~~(\u51d1\u5408\u7740\u770b\u5427)~~\n#### \u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/59749.png)\n#### \u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5217\u4e3e\u4e00\u4e0b\u90a3\u4e9b\u6570\u5b57\u4e3a1+...+x\u7684\u548c(*)\n#### \u6ce8\u610f\uff1ax\u4e00\u5b9a\u5c0f\u4e8en\n### \u6240\u4ee5\u6211\u4eec\u7684\u7ed3\u8bba\u5c31\u662f\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/59748.png)\n### \u73b0\u5728\uff0c\u6211\u4eec\u641e\u6e05\u695a\u4e86book[]\u662f\u5e72\u561b\u7528\u7684\uff0c\u5c31\u8fdb\u5165main\u51fd\u6570\u7684\u4ee3\u7801\u5206\u6790\u4e86\u3002\u9996\u5148\u6709\u8fd9\u51e0\u4e2a\u53d8\u91cf\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/59750.png)\n### \u6ce81\uff1a\u8bf7\u5ffd\u7565\u6700\u540e\u4e00\u884c(OVO)\uff0cf\u90fd\u66ff\u6362\u6210book\n---\n---\n#### a\u53d8\u91cf\uff1a\u56e0\u4e3a\u4e0a\u8fb9\u7684\u8bc1\u660e\u4e2d\uff0cx\u662f\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u503c\u7684(\u89c1\u4e0a\u6587'*'\u6807\u8bb0\u5904)\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u5b83\u6765\u8bb0\u4e00\u4e0b\u5df2\u7ecf\u8f93\u51fa\u5230book[\u51e0]\u4e86\uff0c\u56e0\u4e3abook[0]\u4e3a0\uff0c\u6240\u4ee5\u8fd9\u4e2aa\u53d8\u91cf\u521d\u59cb\u5316\u4e3a1\n#### x\u53d8\u91cf\uff1a\u8fd9\u4e2a\u6211\u4e0d\u60f3\u8bf4\u4e86\uff0c\u5728\u7ebf\u505a\u6cd5\u5f53\u524d\u8bfb\u5165\u7684\u5b57\u7b26\n#### n\u53d8\u91cf\uff1a\u8fd9\u4e2a\u7528\u6765\u7edf\u8ba1\u5df2\u8f93\u5165\u5b57\u7b26\u6570\u91cf\uff0c\u5c31\u662f\u8bf4\u7528\u6765\u5224\u65ad\uff1a\n1. \u662f\u5426\u4e0ebook[a]\u76f8\u7b49\uff0c\u662f\uff1aa++;\u8f93\u51fa\u5b57\u7b26x\uff0c\u5426\u7ee7\u7eed\n2. \u5224\u65ad\u662f\u5426\u4e0em+1(\u6700\u540e\u4e00\u4e2a\u4e5f\u53ef\u80fd\u8f93\u51fa)\u76f8\u7b49\uff0c\u662f\u9000\u51fa\u5426\u7ee7\u7eed\n#### m\u53d8\u91cf\uff1a\u4e00\u5f00\u59cb\u8f93\u5165\u4e00\u4e2a\u4e00\u5171\u6709\u591a\u5c11\u5b57\u7b26\uff0c\u63d0\u4f9b\u4e86\u4fbf\u5229\u3002\n### \u77e5\u9053\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5e72\u5565\u7528\uff0c\u5c31\u4e0d\u96be\u5199\u51fa\u4ee3\u7801\u4e86\uff01\n---\n### \u5230\u73b0\u5728\uff0c\u6211\u7684code\u5df2\u7ecf\u89e3\u91ca\u5b8c\u6bd5\uff0c\u6211\u4f1a\u5728\u51e0\u4e4e\u6bcf\u5929\u665a\u4e0a\u4e0a\u7ebf\u5728\u8bc4\u8bba\u533a\u89e3\u7b54\uff01",
        "postTime": 1559137624,
        "uid": 167689,
        "name": "TerryGong",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    },
    {
        "content": "# **CF1095A Repeating Cipher \u9996\u7bc7\u9898\u89e3**\n### \u8fd9\u9053\u9898\u96be\u5728\u4e86\u9898\u76ee\uff0c\u8bf4\u662f\u8f93\u51fa\u52a0\u5bc6\u5b50\u4e32\uff0c\u5176\u5b9e\u662f\u627e\u89c4\u5f8b\n\u8fd9\u9053\u9898\uff0c\u9898\u76ee\u8499\u773c\u775b\uff0c\u627e\u5230\u89c4\u5f8b\uff0c\u540e\u9762\u7684\u5c31\u597d\u529e\u4e86\uff01\n\u5176\u6b21\uff0c\u4e0d\u8981\u7528**string**\uff0c\u4e0d\u7136\u4f1a\u663e\u5f97\u5f88\u4e0d\u548c\u8c10\u3002\n### \u8bf4\u91cd\u70b9\n#### \u6b64\u9898\u89c4\u5f8b\uff1a\u8f93\u51fa\u7b2c1,1+2,1+2+3,1+2+3+4\u2026\u2026\u4e2a\u5b57\u7b26\uff1b\n\u6211\u4ece\u7b2c\u4e00\u5f00\u59cb\u52a0\n#### \u7136\u540e\u5c31\u534e\u4e3d\u7684 **~~WA~~** \u4e86\uff1b\n\u5927\u5bb6\u6ce8\u610f\u662f\u4ece**\u8f93\u51fa**\u7b2c\u4e00\u9879\u5f00\u59cb\uff0c~~\u4e0d\u662f\u4ece1\u5f00\u59cb\u52a0~~\n### \u4e0b\u9762\u662fAC\u4ee3\u7801\uff0c\u672c\u849f\u84bb\u8d44\u672c\u6d45\uff0c\u5927\u795e\u8bf7\u591a\u591a\u6307\u6559\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\uff0c\u5565\u90fd\u80fd \nusing namespace std;//\u7f16\u8bd1\u6307\u4ee4 \nunsigned N,bj;//\u65e0\u7b26\u53f7\u7c7b\u578b\uff0c\u4f9b\u849f\u84bb\u88c5\u903c \nchar a[60];\nint main(void){\n\tscanf(\"%d\",&N);//\u5b8c\u7f8e\u7684\u8f93\u5165 \n\tfor (int i=1;i<=N;++i)\n\t\tcin>>a[i];\n\tfor (int i=1;i<=N;i+=bj){\n\t\tcout<<a[i];\n\t\tbj++;//\u5728\u524d\u4e00\u57fa\u7840\u4e0a\u7d2f\u52a0\u5668\u52a0\u4e00 \n\t}\n\tcout<<'\\n';//\u6362\u884c\u7b26 \n\treturn 0;//\u534e\u4e3d\u7684\u7ed3\u675f \n}\n```\n#### \u53cb\u60c5\u63d0\u793a\uff0c\u8d26\u53f7\u73cd\u8d35\uff0c\u8fdc\u79bb\u6284\u88ad",
        "postTime": 1554602888,
        "uid": 133389,
        "name": "Lzf_Mannar",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u89c4\u5f8b\u5f88\u5bb9\u6613\u770b\u51fa\u3002\n\n\u6211\u4eec\u6765\u770b\u6837\u4f8b\uff1a\n\n$baabbb$ \n\n\u7b2c\u4e00\u6b21\u8f93\u51fa $b$\n\n\u7136\u540e\u9694 $1$ \u4e2a\u8f93\u51fa $a$\n\n\u7136\u540e\u9694 $2$ \u4e2a\u8f93\u51fa $b$\n\n\u7b2c\u4e8c\u4e2a\u6837\u4f8b\u540c\u7406\uff1a\n\n$ooopppssss$\n\n\u7b2c\u4e00\u6b21\u8f93\u51fa $o$\n\n\u7136\u540e\u9694 $1$ \u4e2a\u8f93\u51fa $o$\n\n\u7136\u540e\u9694 $2$ \u4e2a\u8f93\u51fa $p$\n\n\u7136\u540e\u9694 $3$ \u4e2a\u8f93\u51fa $s$\n\n\u73b0\u5728\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u6c34\u9898\u4e86\u5427\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>//\u8fd9\u79cd\u9898\u4e0d\u9700\u8981\u4e07\u80fd\u5934\u5427\u3002\nchar s[60];//\u957f\u5ea6\u4e0d\u8d85\u8fc755\uff0c\u6240\u4ee5\u5f0060\u3002\nint main(){\n\tregister long long cnt=0,n,i;\n\tstd::cin>>n>>s;//\u8f93\u5165\n\tfor(i=0;i<n;i+=++cnt/*\u7528cnt\u6765\u8bb0\u5f55\u6bcf\u6b21\u9694\u51e0\u4e2a\u8f93\u51fa*/)std::cout<<s[i];//\u7136\u540e\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\treturn 0;\n}\n\n```\n",
        "postTime": 1606130470,
        "uid": 157506,
        "name": "yf\u6700qhhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    },
    {
        "content": "\u7531\u9898\u53ef\u77e5\uff0c\u52a0\u5bc6\u540e\u7b2c $i$ \u4e2a\u5b57\u7b26\u6709 $i$ \u904d\uff0c\u5373\u8f93\u51fa\u7684\u5b57\u7b26\u4e3a\u52a0\u5bc6\u540e\u5b57\u7b26\u4e32\u7684\u7b2c $s_1, s_3, s_6, s_{10} \\cdots$ \u4f4d\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c$3 - 1 = 2, 6 - 3 = 3, 10 - 6 = 4 \\cdots$\uff0c\u6240\u4ee5\u6bcf\u6b21\u5faa\u73af $i$ \u8981\u52a0\u4e0a $p$\uff0c$p$ \u8981\u52a0 $1$\u3002\n\n\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u5427\u3002\n\nCode\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, p = 1;//p \u521d\u59cb\u5316\u4e3a 1\nchar s[66];\nint main(void) {\n\tcin >> n;\n\tscanf(\"%s\", s + 1);//\u4e3a\u4e86\u65b9\u4fbf\u8f93\u51fa\uff0c\u8f93\u5165\u65f6 s \u4ece 1 \u5f00\u59cb\u8f93\u5165\n\tfor (int i = 1; i <= n; i += p) { //\u6bcf\u6b21 i += p\n\t\tprintf(\"%c\", s[i]);\n\t\tp++;//\u6bcf\u6b21\u5faa\u73af p \u8981\u52a0 1\n\t}\n\treturn 0;\n}\n```\nTks.",
        "postTime": 1603196136,
        "uid": 205301,
        "name": "Tazuaki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    },
    {
        "content": "# Problems3\n\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32,\u6709\u5982\u4e0b\u673a\u5bc6\u89c4\u5219:\n\n* \u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26$s_i$,\u5c06\u5b83\u590d\u5236$i$\u904d,\u7136\u540e\u653e\u5230\u52a0\u5bc6\u4e32\u7684\u672b\u5c3e.\n\n\u73b0\u5728\u7ed9\u51fa\u52a0\u5bc6\u4e32,\u8981\u6c42\u8fd8\u539f\u539f\u4e32.\n\n# Answer\n* \u65b9\u6cd51\uff1a\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd$s_i$\uff0c\u4ed6\u540e\u9762\u7684$i$\u4e2a\u5b57\u6bcd\u80af\u5b9a\u662f\u7531\u8fd9\u4e2a\u5b57\u6bcd\u590d\u5236\u800c\u6765\u7684\uff0c\u5c06\u540e\u9762\u7684\u6570\u5b57\u5220\u9664\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n* \u65b9\u6cd52\uff1a\u5f00\u4e00\u4e2a\u6307\u9488$i$\u4e0e\u7edf\u8ba1\u95f4\u9694\u53d8\u91cf$t$\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\u8f93\u51fa$s_i$\u5e76$\\text{i+=t,t++}$\u5373\u53ef\u3002\n# Code\n* \u8fd9\u91cc\u91c7\u7528\u65b9\u68482\u3002\n\n![](https://s1.ax1x.com/2020/09/22/wOvxFU.png)",
        "postTime": 1600777243,
        "uid": 202802,
        "name": "BotDand",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    },
    {
        "content": "\u8fd9\u9898\uff0c\u6211\u4eec\u7528\u4e00\u4e2a $while$ \u5faa\u73af\u6765\u505a\uff0c\u9996\u5148\u52a0\u4e0a\u5f53\u524d\u7684\u90a3\u4e2a\u5b57\u6bcd\uff0c\u7136\u540e\u5728\u628a\u8fd9\u4e2a\u5b57\u6bcd\u540e\u9762\u7684 $i$ \u4e2a\u5b57\u6bcd\u5220\u6389\uff0c\u6700\u540e\u8f93\u51fa\u3002\n\n\u4ee3\u7801\uff1a\n```pascal\nvar i,k,n:longint;\ns,ss:string;//\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u5b9a ansistring\nbegin\nreadln(n);\nreadln(s);//\u8bfb\u5165\ni:=1;k:=1;//\u521d\u59cb\u5316\nwhile i<=length(s)do//\u8fd9\u91cc\u4e0d\u80fd\u7528 n\uff0c\u56e0\u4e3a\u540e\u9762\u8fd8\u5f97\u5220\u6389\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u67d0\u4e9b\u5b57\u7b26\n  begin\n  ss:=ss+s[i];//\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u7b2c i \u4e2a\n  delete(s,i,k);//\u5220\u9664\u5f53\u524d\u5b57\u7b26\u4e32\u7b2c i \u4e2a\u540e\u9762 k \u4e2a\uff08k \u4ee3\u8868\u7b2c\u51e0\u6b21\u64cd\u4f5c\uff09\n  k:=k+1;i:=i+1;//\u64cd\u4f5c\u6b21\u6570\u52a0\u4e00\uff0c\u8868\u793a\u5f53\u524d\u7684\u7b2c\u51e0\u4f4d\u7684\u6570\u52a0\u4e00\n  end;\nwriteln(ss);//\u8f93\u51fa\nend.\n```\n\n\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\u5148\u7528 $while$ \u5faa\u73af\uff0c\u7136\u540e\u5728\u5faa\u73af\u4f53\u91cc\u7528\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\uff0c\u6700\u540e\u6b21\u6570\u52a0\u4e00\uff0c\u8868\u793a\u5f53\u524d\u7684\u4f4d\u6570\u7684\u6570\u52a0\u4e0a\u6b21\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u90a3\u4e9b\u91cd\u590d\u7684\u5b57\u7b26\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```pascal\nvar i,k,n:longint;\ns,ss:string;//\u5b9a\u4e49\nbegin\nreadln(n);\nreadln(s);//\u8f93\u5165\ni:=1;k:=1;//\u8d4b\u521d\u503c\nwhile i<=n do\n  begin\n  ss:=ss+s[i];//\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\n  k:=k+1;i:=i+k;//\u64cd\u4f5c\u6b21\u6570\u52a0\u4e00\uff0c\u8868\u793a\u5f53\u524d\u4f4d\u6570\u7684\u6570\u52a0\u4e0a\u64cd\u4f5c\u6b21\u6570\n  end;\nwriteln(ss);//\u8f93\u51fa\nend.\n```",
        "postTime": 1586834582,
        "uid": 190978,
        "name": "FR_qwq",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    },
    {
        "content": "#### \u8fd9\u9053\u9898\u5f97\u626f\u5230\u4e00\u4e2a\u5c0f\u5b66\u6982\u5ff5\uff1a\u9ad8\u65af\u6c42\u548c\uff08\u542c\u8d77\u6765NB\u5b9e\u9645\u4e0aSOEASY\uff09\n\n\n------------\n\n\n### \u6982\u5ff5\u90e8\u5206\uff08\u77e5\u9053\u9ad8\u65af\u6c42\u548c\u7684\u8df3\u8fc7\uff09\n\n\n\u5982\u679c\u6211\u4eec\u8981\u8ba1\u7b971\u5230100\u7684\u548c\u4e5f\u5c31\u662f1+2+3+......+99+100\n\n\u6211\u4eec\u53ef\u4ee5\u5c061\u548c100\u770b\u505a\u4e00\u7ec4\uff0c2\u548c99\u770b\u505a\u4e00\u7ec4\uff0c\u7531\u4e8e\u8fd9\u662f\u7b49\u5dee\u7684\uff0c\u6bcf\u4e00\u7ec4\u7684\u548c\u90fd\u4e00\u5b9a\n\n\u9700\u8981\u6c42\u603b\u548c\u90a3\u5c31\u7528\u6bcf\u7ec4\u7684\u5927\u5c0f101\u4e58\u7ec4\u6570100/2\u4e5f\u5c31\u662f5050\n\n\u63a8\u5e7f\u4e4b\u540e\uff0c\u6c421+2+......+n\uff0c\u5c31\u7528\uff08n+1\uff09\u4e58n/2\u5c31\u53ef\u4ee5\u4e86\uff0c\u7b80\u5316\u540e\u4e3an(n+1)/2\n\n\n\n------------\n\n### \u77e5\u9053\u4e86\u8fd9\u4e2a\uff0c\u9898\u76ee\u5c31\u5bb9\u6613\u4e86\uff08\u672c\u849f\u84bbtcl\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u9ad8\uff0c\u4f46\u65e0\u6240\u8c13\uff0c\u6570\u636e\u4e0d\u5927\uff09\n\n\u601d\u8def\uff1a\u5148\u626b\u4e00\u904d\u5f97\u51fa\u539f\u4e32\u957f\u5ea6\uff0c\u518d\u901a\u8fc7\u9ad8\u65af\u6c42\u548c\u516c\u5f0f\u8f93\u51fa\uff0c\u5177\u4f53\u5728\u4ee3\u7801\u91cc\u8bf4\uff1a\n\n```\n#include <bits/stdc++.h>   //\u4e07\u80fd\u5934\nusing namespace std;\nint n,i; \nstring s;           //\u4e60\u60ef\u7528string\nint main(){\ncin>>n;\ncin>>s;         //\u8f93\u5165\nfor(i=1;i<=n;i++){        //\u5faa\u73af\u679a\u4e3e\u539f\u4e32\u957f\u5ea6\nif(i*(i+1)==2*n){\nn=i;\nbreak;      //\u5982\u679c\u8fd9\u4e2a\u539f\u4e32\u957f\u5ea6\u662f\u7b26\u5408\u7684\u5c31\u7528n\u8bb0\u5f55\u4e0b\u6765\n}\n}\nfor(i=1;i<=n;i++)\ncout<<s[i*(i+1)/2-1];  //\u8f93\u51fa\u539f\u4e32\u4f4d\u7f6e\u5bf9\u5e94\u7684\u5b57\u7b26\u5373\u53ef\nreturn 0;        //\u597d\u4e60\u60ef\n}\n```\n",
        "postTime": 1568384012,
        "uid": 127520,
        "name": "\u6587\u00b7\u548c",
        "ccfLevel": 5,
        "title": "CF1095A\u9898\u89e3"
    },
    {
        "content": "## \u4e00\u9053\u6a21\u62df\u9898\n### \u601d\u60f3\n# \u8f93\u51fa\u57281\uff0c1+2\uff0c1+2+3\u2026\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\n#### \u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<iostream>\nusing namespace std;\nchar a;\nint n,k=1,t=2;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a;\n\t\tif(i==k)\n\t\t\tcout<<a,k+=t,t++;//\u5728\u8bfb\u5165\u662f\u5224\u65ad\uff0ck\u4e3a\u5224\u65ad\u53d8\u91cf\uff0ct\u4e3a\u8981\u52a0\u7684\u503c\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1556683480,
        "uid": 60159,
        "name": "moqizhu2005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u610f\uff0c\u6bcf\u6b21\u8bfb1 2 3 ...\u4e2a\u5b57\u7b26\uff0c\u6a21\u62df\u5373\u53ef  \n```cpp\n#include <bits/stdc++.h>\n#define rg register\n#define inl inline\ntypedef long long ll;\nusing namespace std;\nnamespace fast_IO {\n    long long read()\n    {\n        rg long long num = 0;\n        rg char ch;\n        rg bool flag = false;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        if (ch == EOF)return ch; if (ch == '-')flag = true; else num = ch ^ 48;\n        while ((ch = getchar()) >= '0'&&ch <= '9')\n            num = (num << 1) + (num << 3) + (ch ^ 48);\n        if (flag)return -num; return num;\n    }\n    char cread()\n    {\n        rg char ch;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        return ch;\n    }\n};\n\n\nint main()\n{\n    rg int n = fast_IO::read(), j, step = 0;\n    for (rg int i = 1; i <= n; i+=j-1)\n    {\n        rg char ch; ++step;\n        for (j = 1; j <= step; ++j)\n            ch = fast_IO::cread();\n        putchar(ch);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1545937882,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1095A \u3010Repeating Cipher\u3011"
    }
]