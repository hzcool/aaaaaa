[
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://registergen.github.io/post/solution-cf1476d/)\n\n\u8fd9\u9053\u9898\u5145\u5206\u7684\u8bf4\u660e\uff1a\u6211\u6570\u636e\u7ed3\u6784\u5b66\u50bb\u4e86\uff08\n\n# Solution\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u4eba\u5982\u679c\u80fd\u4ece $a$ \u8d70\u5230 $b$\uff0c\u5219\u4ed6\u4e00\u5b9a\u5728\u5230\u8fbe $b$ \u7684\u65f6\u5019\u7acb\u5373\u6389\u5934\u7136\u540e\u8d70\u56de $a$\u3002\uff08\u4e3a\u4ec0\u4e48\uff1f\uff09\n\n\u6240\u4ee5\u53ea\u9700\u6c42\u51fa\u8fd9\u4e2a\u4eba\u5f80\u5de6\u8d70\u80fd\u8d70\u591a\u8fdc\uff0c\u5f80\u53f3\u8d70\u80fd\u8d70\u591a\u8fdc\uff0c\u7136\u540e\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n\u5982\u679c\u4e00\u4e2a\u4eba\u80fd\u5728\u4e00\u4e2a\u4e32\u4e0a\u4e00\u76f4\u8d70\u4e0b\u53bb\uff0c\u5219\u8fd9\u4e2a\u4e32\u5fc5\u987b\u662f `LRLRLR...` \u6216\u8005 `RLRLRL...`\u3002\n\n\u7136\u540e\u6211\u7528\u4e86\u4e8c\u5206 + \u7ebf\u6bb5\u6811\uff08\n\n```cpp\nstruct Node{\n    char l,r; // \u8fd9\u4e2a\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u7684\u5b57\u7b26\n    bool ok; // \u4e00\u4e2a\u4eba\u662f\u5426\u80fd\u5728\u8fd9\u4e2a\u533a\u95f4\u8868\u793a\u7684\u5b50\u4e32\u4e0a\u4e00\u76f4\u8d70\u4e0b\u53bb\n};\n\ninline Node pushUp(Node L,Node R){\n\tNode res;\n\tres.l=L.l;\n\tres.r=R.r;\n\tres.ok=L.ok&&R.ok&&((L.r=='L'&&R.l=='R')||(L.r=='R'&&R.l=='L'));\n\treturn res;\n}\n```\n\n\u8fd9\u68f5\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u533a\u95f4\u662f\u5426\u201c\u5408\u6cd5\u201d\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log^2 n)$\uff0c\u53ef\u80fd\u9700\u8981\u5361\u5e38\u624d\u80fd\u8fc7\u3002\n\n# Code\n\n\u7ec6\u8282\u6bd4\u8f83\u591a\u3002\n\n<https://codeforces.com/contest/1476/submission/105930535>",
        "postTime": 1612169624,
        "uid": 242702,
        "name": "registerGen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1476D \u3010Journey\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709\u70b9 $0...n$ \uff0c\u5bf9\u4e8e\u7b2c $i$ \u6761\u8fb9 $(i-1,i)$ \u544a\u8bc9\u4f60\u8be5\u8fb9\u7684\u65b9\u5411\uff0c\u6bcf\u8d70\u4e00\u6b65\u6240\u6709\u8fb9\u7684\u65b9\u5411\u90fd\u4f1a\u53cd\u8f6c\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8bf7\u4f60\u6c42\u51fa\u4ece\u8be5\u70b9\u6700\u591a\u80fd\u8d70\u5230\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u70b9\u3002\n\n\u9898\u89e3\uff1a\u4ece\u67d0\u4e2a\u70b9\u5f00\u59cb\u5f80\u53f3\u8d70\uff0c\u4f9d\u6b21\u7ecf\u8fc7\u7684\u8fb9\u5fc5\u5b9a\u662f $\\texttt{RLRL...RL(RR)(L)}$\uff0c\u540c\u7406\u5f80\u5de6\u8d70\u4f9d\u6b21\u7ecf\u8fc7\u7684\u8fb9\u5fc5\u5b9a\u662f $\\texttt{LRLR...LR(LL)(R)}$\u3002\u4e5f\u5c31\u662f\u8bf4\u8d70\u7684\u8fc7\u7a0b\u4e2d**\u5982\u679c\u78b0\u5230\u4e24\u6761\u76f8\u540c\u7684\u8fb9\uff0c\u5c31\u4f1a\u5f80\u56de\u8d70\uff0c\u6cbf\u539f\u8def\u8fd4\u56de\u5230\u8d77\u70b9\uff0c\u7136\u540e\u518d\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\u3002**\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5411\u53f3\u8d70\u548c\u5411\u5de6\u8d70\u5206\u522b\u80fd\u8d70\u5230\u591a\u8fdc\u5c31\u884c\u4e86\u3002\n\n\u540e\u9762\u7684\u90e8\u5206\u6211\u4eec\u5747\u5047\u8bbe\uff1a $0$ \u65b9\u5411\u4e3a $\\texttt R$\uff0c$1$ \u65b9\u5411\u4e3a $\\texttt L$\n\n\u4ee4\uff1a\n\n$Lmin[i][0/1]$ \u8868\u793a\u4ece $i$ \u70b9\u5f80**\u5de6**\u8d70\uff0c\u7ecf\u8fc7\u7684\u7b2c\u4e00\u6761\u8fb9\u65b9\u5411\u4e3a $(0/1)$\uff0c**\u6700\u8fdc**\u80fd\u8d70\u5230\u54ea\u4e2a\u70b9\u3002\n\n$Rmax[i][0/1]$ \u8868\u793a\u4ece $i$ \u70b9\u5f80**\u53f3**\u8d70\uff0c\u7ecf\u8fc7\u7684\u7b2c\u4e00\u6761\u8fb9\u65b9\u5411\u4e3a $(0/1)$\uff0c**\u6700\u8fdc**\u80fd\u8d70\u5230\u54ea\u4e2a\u70b9\u3002\n\n$g[i]$ \u8868\u793a\u7b2c $i$ \u6761\u8fb9\u7684\u65b9\u5411\u3002\n\n\u6613\u6839\u636e\u6027\u8d28\u63a8\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n```cpp\nLmin[i][g[i]] = Lmin[i - 1][!g[i]]\nRmax[i][g[i + 1]] = Rmax[i + 1][!g[i + 1]]\n```\n\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u80fd\u5230\u7684\u70b9\u5373\u4e3a\u4ed6\u5f80\u5de6\u8d70\u80fd\u5230\u7684\u6700\u8fdc\u70b9\u4e0e\u5f80\u53f3\u8d70\u80fd\u5230\u7684\u6700\u8fdc\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u70b9\uff0c\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n)$\u3002\n\n\uff08\u6ce8\u610f\uff1a\u82e5 $i$ **\u4e0d\u80fd**\u5f80\u67d0\u4e2a\u65b9\u5411\u8d70\uff0c\u5219\u5f80\u8be5\u65b9\u5411\u8d70\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u70b9\u5373\u4e3a**\u8be5\u70b9\u672c\u8eab**\uff09\n\n$\\mathcal{View\\ Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+5;\nint n,g[N],T,Rmax[N][2],Lmin[N][2];char s[N];\n\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d%s\",&n,s);\n\t\tfor(int i=0;i<=n;i++) Rmax[i][0]=Rmax[i][1]=Lmin[i][0]=Lmin[i][1]=i; \n\t\tfor(int i=1;i<=n;i++) g[i]=(s[i-1]=='L');\n\t\tfor(int i=n-1;i>=0;i--)\n\t\t\tRmax[i][g[i+1]]=Rmax[i+1][!g[i+1]];\n\t\tfor(int i=1;i<=n;i++) \n\t\t\tLmin[i][g[i]]=Lmin[i-1][!g[i]];\n\t\tfor(int i=0;i<=n;i++) \n\t\t{\n\t\t\tint l=i,r=i;\n\t\t\tif(i!=0 && g[i]==1) l=Lmin[i][g[i]];\n\t\t\tif(i!=n && g[i+1]==0) r=Rmax[i][g[i+1]];\n\t\t\tprintf(\"%d \",r-l+1);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n$\\mathcal{Thanks\\ for\\ watching}$",
        "postTime": 1612707132,
        "uid": 108610,
        "name": "Dzhao",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1476D \u3010Journey\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u5e76\u4e0d\u600e\u4e48\u6b63\u5e38\u7684 $O(n\\log n)$ \u505a\u6cd5\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e00\u6761\u8fb9\u5230\u8fbe\u76f8\u90bb\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u53cd\u5411\u4e4b\u540e\u4f60\u8fd8\u53ef\u4ee5\u518d\u8d70\u56de\u6765\uff0c\u53cd\u4e4b\uff0c\u4f60\u65e2\u4e0d\u80fd\u8d70\u8fc7\u53bb\uff0c\u4e5f\u4e0d\u80fd\u8d70\u56de\u6765\u3002\n\n\u7531\u4e8e\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u7ecf\u8fc7\u82e5\u5e72\u70b9\u56de\u5230\u539f\u70b9\u4e00\u5b9a\u7ecf\u8fc7\u5076\u6570\u6761\u8fb9\uff0c\u6240\u4ee5\u5982\u679c\u521d\u59cb\u4e00\u6761\u8fb9\u53ef\u4ee5\u901a\u8fc7\uff0c\u90a3\u4e48\u5728**\u4efb\u4f55\u65f6\u523b**\u90fd\u53ef\u4ee5\u4ece**\u4efb\u4f55\u65b9\u5411**\u901a\u8fc7\uff0c\u53cd\u4e4b\u5219**\u4efb\u4f55\u65f6\u523b**\u4e0d\u80fd\u4ece**\u4efb\u4f55\u65b9\u5411**\u901a\u8fc7\u3002\n\n\u7531\u4e8e\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u7ecf\u8fc7\u82e5\u5e72\u70b9\u56de\u5230\u539f\u70b9\u4e00\u5b9a\u7ecf\u8fc7\u5076\u6570\u6761\u8fb9\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5f97\u51fa\u6211\u4eec\u4ece\u67d0\u70b9\u51fa\u53d1\u5411\u4e00\u4e2a\u65b9\u5411\u8d70\uff0c\u518d\u56de\u5230\u539f\u70b9\uff0c\u9053\u8def\u7684\u65b9\u5411\u548c\u521d\u59cb\u65f6\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8003\u8651\u4e24\u8fb9\u5148\u540e\u987a\u5e8f\u3002\n\n\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5206\u4e24\u8fb9\u8ba1\u7b97\u8d21\u732e\uff0c\u4e00\u76f4\u8d70\u5230\u8d70\u4e0d\u8fc7\u53bb\u5c31\u597d\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u8003\u8651\u4ec0\u4e48\u6837\u7684\u5e8f\u5217\u53ef\u4ee5\u4ea7\u751f\u8d21\u732e\uff0c\u56e0\u4e3a\u6bcf\u8d70\u4e00\u6b65\u9053\u8def\u65b9\u5411\u90fd\u4f1a\u6539\u53d8\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5e8f\u5217\u4ea4\u66ff\u51fa\u73b0 `L` \u548c `R` \u5c31\u597d\u4e86\u3002\n\n\u7acb\u5373\u6709\u4e86\u4e00\u4e2a naive \u7684\u505a\u6cd5\uff1a\u6bcf\u4e2a\u70b9\u5411\u4e24\u8fb9\u66b4\u529b\u5ef6\u4f38\u3002\u7136\u800c\u8fd9\u4f1a\u88ab\u5361\u3002\n\n\u8003\u8651\u4f18\u5316\u7b97\u6cd5\uff0c\u770b\u5230\u6700\u957f\u4e0d\u91cd\u590d\u7684\u5b50\u4e32\uff0c\u5bb9\u6613\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\uff08\u4e4b\u524d\u6709\u4e00\u4e2a\u9898\u76ee\u53eb\u201c\u597d\u4e00\u4e2a\u4e00\u4e2d\u8170\u9f13\u201d\uff0c\u8003\u7684\u5c31\u662f\u8fd9\u4e2a\u4e1c\u897f\uff0c\u53ef\u60dc\u8fd9\u9898\u73b0\u5728\u6ca1\u6389\u4e86\uff0c\u4e0d\u8fc7\u6211\u5199\u4e86\u4e00\u7bc7\u9898\u89e3\uff0c\u4e0d\u61c2\u600e\u4e48\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u2192[\u4f20\u9001\u95e8](https://www.luogu.com.cn/blog/FrozaFerrari/solution-p2253)\uff09\n\n\u5176\u5b9e\u8fd9\u4e00\u9898\u4f1a\u6bd4\u521a\u624d\u63d0\u5230\u7684\u90a3\u4e00\u9898\u66f4\u7b80\u5355\u4e00\u4e9b\uff0c\u56e0\u4e3a\u6211\u4eec\u67e5\u8be2\u7684\u65f6\u5019\u8981\u7684\u90fd\u662f\u5305\u542b\u5de6\uff08\u53f3\uff09\u7aef\u70b9\u7684\u6700\u957f\u5408\u6cd5\u5b50\u4e32\uff0c\u4e8e\u662f\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u5408\u5e76\u7b54\u6848\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint t,n,ql[300005<<2][2],qr[300005<<2][2],len[300005<<2],ans;\nchar c[300005];\nstruct element\n{\n    int q[2],len;\n    element()\n    {\n        q[0]=q[1]=len=0;\n    }\n};\ninline int ls(int k)\n{\n    return k<<1;\n}\ninline int rs(int k)\n{\n    return k<<1|1;\n}\ninline void push_up(int k)\n{\n    len[k]=len[ls(k)]+len[rs(k)];\n    ql[k][0]=ql[ls(k)][0];\n    ql[k][1]=ql[ls(k)][1];\n    qr[k][0]=qr[rs(k)][0];\n    qr[k][1]=qr[rs(k)][1];\n    if(ql[ls(k)][0]==len[ls(k)])\n        ql[k][0]+=ql[rs(k)][len[ls(k)]&1];\n    if(ql[ls(k)][1]==len[ls(k)])\n        ql[k][1]+=ql[rs(k)][(len[ls(k)]&1)^1];\n    if(qr[rs(k)][0]==len[rs(k)])\n        qr[k][0]+=qr[ls(k)][len[rs(k)]&1];\n    if(qr[rs(k)][1]==len[rs(k)])\n        qr[k][1]+=qr[ls(k)][(len[rs(k)]&1)^1];\n}\nvoid build(int k,int l,int r)\n{\n    if(l==r)\n    {\n        len[k]=1;\n        ql[k][c[l]=='R']=qr[k][c[l]=='R']=1;\n        ql[k][c[l]=='L']=qr[k][c[l]=='L']=0;\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(ls(k),l,mid);\n    build(rs(k),mid+1,r);\n    push_up(k);\n}\nelement query1(int node,int l,int r,int k)\n{\n    if(r<=node)\n    {\n        element res;\n        res.len=len[k];\n        res.q[0]=qr[k][0];\n        res.q[1]=qr[k][1];\n        return res;\n    }\n    int mid=(l+r)>>1;\n    element res,tmp;\n    tmp=query1(node,l,mid,ls(k));\n    if(mid<node)\n        res=query1(node,mid+1,r,rs(k));\n    if(!res.len&&!res.q[0]&&!res.q[1])\n        return tmp;\n    if(res.q[0]==res.len)\n    {\n        res.q[0]+=tmp.q[res.len&1];\n        res.len+=tmp.len;\n    }\n    if(res.q[1]==res.len)\n    {\n        res.q[1]+=tmp.q[(res.len&1)^1];\n        res.len+=tmp.len;\n    }\n    return res;\n}\nelement query2(int node,int l,int r,int k)\n{\n    if(l>=node)\n    {\n        element res;\n        res.len=len[k];\n        res.q[0]=ql[k][0];\n        res.q[1]=ql[k][1];\n        return res;\n    }\n    int mid=(l+r)>>1;\n    element res,tmp;\n    tmp=query2(node,mid+1,r,rs(k));\n    if(mid>=node)\n        res=query2(node,l,mid,ls(k));\n    if(!res.len&&!res.q[0]&&!res.q[1])\n        return tmp;\n    if(res.q[0]==res.len)\n    {\n        res.q[0]+=tmp.q[res.len&1];\n        res.len+=tmp.len;\n    }\n    if(res.q[1]==res.len)\n    {\n        res.q[1]+=tmp.q[(res.len&1)^1];\n        res.len+=tmp.len;\n    }\n    return res;\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        for(register int i=1;i<=n;++i)\n        {\n            c[i]=getchar();\n            if(c[i]!='L'&&c[i]!='R')\n                c[i]=getchar();\n        }\n        build(1,1,n);\n        for(register int i=1;i<=n+1;++i)\n        {\n            ans=1;\n            if(i^1)\n                ans+=query1(i-1,1,n,1).q[0];\n            if(i^(n+1))\n                ans+=query2(i,1,n,1).q[1];\n            printf(\"%d \",ans);\n        }\n        puts(\"\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1612178231,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1476D \u3010Journey\u3011"
    },
    {
        "content": "\u8003\u8651\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u591a\u5c11\u4e2a\u70b9\uff0c\u672c\u8d28\u4e0a\u662f \u5de6\u8fb9\u80fd\u5230\u8fbe\u7684\u70b9\u6570 $+$ \u53f3\u8fb9\u80fd\u5230\u8fbe\u7684\u70b9\u6570 $+$ \u81ea\u5df1\u672c\u8eab\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u5de6\u8fb9\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u5c06\u4f1a\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5jdl3tq9.png)\n\n\u8fd9\u5f20\u56fe\u91cc\u6700\u53f3\u8fb9\u7684\u70b9\u53ef\u4ee5\u5230\u8fbe\u6700\u5de6\u8fb9\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\uff1a`\u2026RLRL`\u3002\n\n\u540c\u7406\uff0c\u8fd8\u662f\u521a\u624d\u90a3\u5f20\u56fe\uff0c\u6700\u5de6\u8fb9\u7684\u70b9\u4e5f\u53ef\u4ee5\u5230\u8fbe\u6700\u53f3\u8fb9\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\uff1a`RLRL\u2026`\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5728\u7ebf\u6027\u6c42\u51fa\u4e00\u4e2a\u70b9\u80fd\u5230\u8fbe\u6700\u5de6\u8fb9\u7684\u70b9\u7684\u8ddd\u79bb\u4ee5\u53ca\u6700\u53f3\u70b9\u5462\uff1f\n\n\u8003\u8651\u52a8\u6001\u89c4\u5212\u6c42\u89e3\u3002\n\n\u8bbe $l_i$ \u8868\u793a\u70b9 $i$ \u6700\u591a\u5f80\u5de6\u8d70\u51e0\u6b65\uff0c$r_i$ \u8868\u793a\u70b9 $i$ \u6700\u591a\u5f80\u53f3\u8d70\u51e0\u6b65\u3002\n\n\u5219\u6709\uff1a\n\n$$\nl_i=\n\\begin{cases}\nl_{i-2}+2 &(s_{i-1}=\\texttt{\"R\"}\\ \\&\\ s_{i}=\\texttt{\"L\"}) \\\\\n1 &(s_{i-1}=\\texttt{\"L\"}\\ \\&\\ s_{i}=\\texttt{\"L\"}) \\\\\n0 &(s_{i}=\\texttt{\"R\"})\n\\end{cases}\n$$\n\n$$\nr_i=\n\\begin{cases}\nr_{i+2}+2 &(s_{i+1}=\\texttt{\"R\"}\\ \\&\\ s_{i+2}=\\texttt{\"L\"}) \\\\\n1 &(s_{i+1}=\\texttt{\"R\"}\\ \\&\\ s_{i+2}=\\texttt{\"R\"}) \\\\\n0 &(s_{i+1}=\\texttt{\"L\"})\n\\end{cases}\n$$\n\n\u5176\u4e2d $s_i$ \u8868\u793a\u8fde\u63a5\u70b9 $i-1$ \u4e0e $i$ \u7684\u8def\u7684\u65b9\u5411\u3002\n\n\u8bb0\u5f97 $l_i$ \u662f\u6b63\u63a8\uff0c$r_i$ \u662f\u5012\u63a8\u3002\n\n\u7136\u540e\u76f4\u63a5\u4f9d\u6b21\u8f93\u51fa $l_i+r_i+1$ \u5373\u53ef AC\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\Theta(\\sum n)$\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 3e5 + 1;\n\nint t, n;\nchar s[maxn];\nint l[maxn], r[maxn];\n\nint main() {\n    cin >> t;\n    while (t--) {\n        cin >> n >> (s + 1);\n        l[0] = 0, l[1] = s[1] == 'L';\n        r[n] = 0, r[n - 1] = s[n] == 'R';\n        for (int i = 2; i <= n; i++) l[i] = s[i - 1] == 'R' && s[i] == 'L' ? l[i - 2] + 2 : s[i] == 'L';\n        for (int i = n - 2; i >= 0; i--) r[i] = s[i + 1] == 'R' && s[i + 2] == 'L' ? r[i + 2] + 2 : s[i + 1] == 'R';\n        for (int i = 0; i <= n; i++) cout << l[i] + r[i] + 1 << \" \"; cout << endl;\n        for (int i = 0; i <= n; i++) s[i] = l[i] = r[i] = 0;\n    }\n    return 0;\n}\n```",
        "postTime": 1664699032,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "CF1476D Journey"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u548c\u5176\u4ed6\u9898\u89e3\u4e0d\u4e00\u6837\u7684\u505a\u6cd5\u3002\n\n\u5728\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u6ca1\u60f3\u51fa\u6765\uff0c\u4e00\u76f4\u60f3\u7684\u662f\u8bf4\u7528$f[0][i]$\u4e0e$f[1][i]$\u505a\u8f6c\u79fb\u2014\u2014$f[1][i]$\u8868\u793a\u5947\u6570\u6b65\u5230$i$\u904d\u5386\u57ce\u5e02\u6570\uff0c$f[0][i]$\u8868\u793a\u5076\u6570\u6b65\u5230$i$\u904d\u5386\u57ce\u5e02\u6570\uff0c\u7ed3\u679c\u8bb0\u641c\u5d29\u4e86\uff0c\u5e76\u4e14\u88abABC\u9898\u62d6\u7d2f\u5bfc\u81f4\u6ca1\u6709\u65f6\u95f4\u505a\u8fd9\u4e2a\u9898\u2026\u2026\u5f53\u7136\u8fd9\u9898\u4e5f\u53ef\u4ee5DP\uff0c\u5176\u4ed6\u9898\u89e3\u6709\u63d0\u5230\u3002\n\n\u5176\u5b9e\u8fd9\u4e2a\u9898\u53ef\u4ee5\u7528**\u56fe\u8bba**\u7684\u60f3\u6cd5\u53bb\u505a\u3002\n\n\u6ce8\u610f\u5230\uff0c\u6bcf\u8d70\u4e00\u6b21\u8def\u5c31\u4f1a\u5168\u90e8\u53cd\u5411\u3002\u90a3\u4e48\u7b2c\u4e00\uff1a\u6574\u4e2a\u8fde\u63a5\u72b6\u6001\u5c31\u4e24\u79cd\uff0c\u8981\u4e48\u5168\u6b63\u7740\u8981\u4e48\u5168\u53cd\u7740\uff1b\u7b2c\u4e8c\uff0c\u8d70\u4e24\u6b21\u56fe\u5c31\u6062\u590d\u4e86\uff1b\u7b2c\u4e09\uff0c\u6765\u7684\u65f6\u5019\u600e\u4e48\u8d70\u8fc7\u53bb\u63a5\u4e0b\u6765\u4e00\u6b65\u5c31\u53ef\u4ee5\u600e\u4e48\u8d70\u56de\u53bb\uff1a\n\n\u5047\u8bbe\u73b0\u5728\u6709\u4e00\u6761\u8fb9\u4ece2\u5355\u5411\u6307\u54113\uff0c\u4ece2\u51fa\u53d1\u53ef\u4ee5\u8d70\u52303\uff0c\u7136\u540e\u7531\u4e8e\u8d70\u8fc7\u4e86\u4e00\u6b65\uff0c\u6240\u6709\u9053\u8def\u53cd\u5411\uff0c\u90a3\u4e48\u73b0\u5728\u8fd9\u4e2a\u8def\u662f\u4ece3\u6307\u54112\u7684\uff0c3\u53c8\u53ef\u4ee5\u8d70\u56de\u52302\u3002\u56e0\u800c\uff0c\u5982\u679c$i$\u80fd\u5230$j$\uff0c\u90a3\u4e48$j$\u5c31\u4e00\u5b9a\u80fd\u56de\u5230$i$\u3002\n\n\u57fa\u4e8e\u8fd9\u51e0\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff1a**\u8d70\u7684\u987a\u5e8f\u4e0d\u4f1a\u5f71\u54cd\u8fde\u901a\u6027**\u3002\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u65e0\u8bba\u662f\u5148\u8d70\u5de6\u8fb9\u518d\u904d\u5386\u53f3\u8fb9\uff0c\u8fd8\u662f\u4e2d\u95f4\u7a7f\u63d2\u5de6\u53f3\u6a2a\u8df3\u5f0f\u6e38\u89c8\uff0c**\u80fd\u5230\u7684\u57ce\u5e02\u603b\u662f\u80fd\u5230**\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u7814\u7a76\u8fd9\u4e2a\u56fe\u800c\u975e\u6bcf\u4e2a\u8282\u70b9\u4e86\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u56fe\u5e94\u8be5\u600e\u4e48\u62bd\u8c61\u51fa\u6765\u5462\uff1f\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff1a**\u8d70\u7684\u6b65\u6570\u4e0d\u540c\u7684\u65f6\u5019\u4e00\u4e2a\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u70b9\u7684\u72b6\u6001\u4e0d\u540c**\u3002\u4f8b\u5982\u4e00\u4e2a\u8282\u70b9\u5982\u679c\u7ed9\u7684\u662f$\\tt LR$\uff0c\u90a3\u4e48\u7b2c\u5947\u6570\u6b65\u7684\u65f6\u5019\u56fe\u662f\u6b63\u56fe\uff0c\u4e24\u8fb9\u90fd\u80fd\u53bb\uff1b\u800c\u5982\u679c\u662f\u7b2c\u5076\u6570\u6b65\u5230\u8fbe\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u4e24\u8fb9\u90fd\u4e0d\u80fd\u53bb\uff0c\u56e0\u4e3a\u8fde\u63a5\u72b6\u6001\u53d8\u6210\u4e86$\\tt RL$\u3002\u56e0\u800c\uff0c\u6211\u4eec\u5e94\u8be5\u8003\u8651**\u5206\u5c42\u56fe**\u2014\u2014\u7528\u8fde\u63a5\u72b6\u6001\u505a\u5206\u5c42\u4f9d\u636e\u3002\u7ed3\u5408\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5efa\u56fe\u65b9\u6cd5\uff1a\n\n**\u5982\u679c\u662f$\\tt L$\uff0c\u5219\u7b2c\u4e00\u5c42$i-1$\u5411\u7b2c\u4e8c\u5c42$i$\u8fde\u53cc\u5411\u8fb9\uff1b\u5982\u679c\u662f$\\tt R$\uff0c\u5219\u662f\u7b2c\u4e00\u5c42$i$\u8fde\u5411\u7b2c\u4e8c\u5c42\u7684$i-1$\uff0c\u8fde\u53cc\u5411\u8fb9;\u7b2c\u4e00\u5c42$i$\u4e0e\u7b2c\u4e8c\u5c42$i$\u4e0d\u76f8\u8fde\u3002**\n\n\u6700\u540e\u7b54\u6848\u76f4\u63a5\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u6240\u5c5e\u7684\u8fde\u901a\u5757\u548c\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u5373\u53ef\u3002\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u540c\u4e00\u8fde\u901a\u5757\u5185\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u56e0\u800c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u7b54\u6848\u76f8\u540c\uff1b\u7531\u4e8e\u540c\u4e00\u8282\u70b9\u4e0d\u540c\u5c42\u4e0d\u80fd\u5230\u8fbe\uff0c\u56e0\u800c\u4e0d\u4f1a\u51fa\u73b0\u4e00\u4e2a\u8282\u70b9\u4e24\u5c42\u540c\u65f6\u51fa\u73b0\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u56e0\u800c\u8fde\u901a\u5757\u5927\u5c0f\u5c31\u662f\u5230\u8fbe\u57ce\u5e02\u6570\uff0c\u5176\u4e2d\u5728\u7b2c\u4e8c\u5c42\u7684\u8282\u70b9\u4e3a\u5076\u6570\u6b65\u5230\u8fbe\u7684\uff0c\u7b2c\u4e00\u5c42\u8282\u70b9\u662f\u5947\u6570\u6b65\u5230\u8fbe\u7684\u3002\n\n\u4ee3\u7801\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u7ed9\u51fa\u6838\u5fc3\u90e8\u5206\u4ee3\u7801\u3002\n\n```cpp\nfor (int i = 1; i <= n;i++)//\u5efa\u8fb9\u3002\u5b57\u7b26\u4e32\u4e2d\u4ece1\u5f00\u59cb\u7f16\u53f7\n\tif(a[i]=='R')//\u5982\u679c\u662fR\u7684\u60c5\u51b5\uff0c\u9ed1\u4f53\u5b57\u5206\u6790\u4e86\u3002\n\t{\n\t\tadd(i - 1, i + n + 1);\n\t\tadd(i + n + 1, i - 1);\n\t}\n\telse//L\u7684\u60c5\u51b5\n\t{\n\t\tadd(i, i + n);\n\t\tadd(i + n, i);\n\t}\nfor (int i = 0; i <= 2 * n + 1; i++)//\u4e00\u4e2a\u6734\u7d20\u7684\u8ba1\u7b97\u8fde\u901a\u5757\u6570\u76ee\u548c\u8fde\u901a\u5757\u5927\u5c0f\u7684\u4ee3\u7801\n\tif (!col[i])\n\t\tbfs(i, ++tot);//\u56fe\u7684\u904d\u5386\uff0c\u904d\u5386\u8fd9\u4e2a\u8fde\u901a\u5757\uff0ctot\u4e3a\u67d3\u8272\u4e13\u7528\n```\n",
        "postTime": 1612354658,
        "uid": 80026,
        "name": "walk_alone",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 CF1476D \u3010Journey\u3011"
    },
    {
        "content": "\u7531\u4e8e\u8def\u7684\u65b9\u5411\u5728\u4eba\u6bcf\u8d70\u4e00\u683c\u5c31\u4f1a\u53d8\uff0c\u56e0\u6b64\uff0c\u4e00\u4e2a\u4eba\u80fd\u4ece\u4ed6\u6240\u5728\u7684\u70b9\u8d70\u51fa\u53bb\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ed6\u8d70\u7684\u8def\u7684\u521d\u59cb\u65b9\u5411\u662f**\u5de6\u53f3\u4ea4\u66ff**\u7684\u4e14\u4e00\u5f00\u59cb\u51fa\u53bb\u7684\u90a3\u6761\u8def\u662f\u51fa\u53bb\u7684\u65b9\u5411\u3002\u8fd9\u6837\u5de6\u53f3\u4ea4\u66ff\u7684\u8def\u4ea4\u66ff\u5730\u53d8\u65b9\u5411\uff0c\u6bcf\u4e00\u6b21\u90fd\u662f\u4ed6\u8981\u7684\u65b9\u5411\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u4ed6\u8d70\u8fc7\u7684\u8def\u5de6\u53f3\u4ea4\u66ff\uff0c\u4ed6\u8fd8\u53ef\u4ee5\u539f\u8def\u8fd4\u56de\u53bb\u53e6\u4e00\u4e2a\u65b9\u5411\u8d70\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u4e00\u4e2a\u70b9\u5f80\u5de6\u7684\u6700\u957f\u4ea4\u66ff\u8def\u5f84\u548c\u4e00\u4e2a\u70b9\u5f80\u53f3\u7684\u6700\u957f\u4ea4\u66ff\u8def\u5f84\u7684\u957f\u5ea6\u3002\n\n\u5f00\u4e00\u4e2a\u6570\u7ec4 $f_{i,0/1}$ \u8868\u793a\u70b9 $i$ \u5411\u5de6\u7684\u8def\u7684\u521d\u59cb\u65b9\u5411\u662f **\u5de6/\u53f3** \u65f6\uff0c\u5411\u5de6\u7684\u6700\u957f\u4ea4\u66ff\u8def\u5f84\u3002$g_{i,0/1}$ \u8868\u793a\u70b9 $i$ \u5411\u53f3\u7684\u8def\u7684\u521d\u59cb\u65b9\u5411\u662f **\u53f3/\u5de6** \u65f6\uff0c\u5411\u53f3\u7684\u6700\u957f\u4ea4\u66ff\u8def\u5f84\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a $f,g$ \u90fd\u53ef\u4ee5\u7ebf\u6027\u9012\u63a8\u3002\n\n$$f_{i,0}=\\left\\{\\begin{matrix}\nf_{i-1,1}+1 & s[i]=L\\\\ \n0 & s[i]=R\n\\end{matrix}\\right.$$\n\n$$f_{i,1}=\\left\\{\\begin{matrix}\nf_{i-1,0}+1 & s[i]=R\\\\ \n1 & s[i]=L\n\\end{matrix}\\right.$$\n\n$$g_{i,0}=\\left\\{\\begin{matrix}\ng_{i+1,1}+1 & s[i]=R\\\\ \n0 & s[i]=L\n\\end{matrix}\\right.$$\n\n$$g_{i,1}=\\left\\{\\begin{matrix}\ng_{i+1,0}+1 & s[i]=L\\\\ \n1 & s[i]=R\n\\end{matrix}\\right.$$\n\n\u7b54\u6848\u5373\u4e3a $f_{i,0}+g_{i+1,0}+1$\uff0c$+1$ \u662f\u56e0\u4e3a\u4ed6\u672c\u8eab\u5c31\u80fd\u5230\u4ed6\u81ea\u5df1\u6240\u5728\u7684\u5730\u65b9\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\n#define per(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int N=3e5+5;\nint _,n;\nchar s[N];\nint f[N][2],g[N][2];\nint main() {\n    for(scanf(\"%d\",&_);_;--_) {\n        scanf(\"%d\",&n);\n        rep(i,0,n+1) f[i][0]=f[i][1]=g[i][0]=g[i][1]=0;\n        scanf(\"%s\",s+1);\n        rep(i,1,n) {\n            if(s[i]=='L') f[i][0]=f[i-1][1]+1,f[i][1]=0;\n            else f[i][1]=f[i-1][0]+1,f[i][0]=0;\n        }\n        per(i,n,1) {\n            if(s[i]=='R') g[i][0]=g[i+1][1]+1,g[i][1]=0;\n            else g[i][1]=g[i+1][0]+1,g[i][0]=0;\n        }\n        rep(i,0,n) {\n            printf(\"%d \",f[i][0]+g[i+1][0]+1);\n        }\n        puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1612165702,
        "uid": 76156,
        "name": "henrytb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1476D \u3010Journey\u3011"
    },
    {
        "content": "\u573a\u4e0a $ O(n) $ \u5207\u6389\u7684\u4e00\u9053\u633a\u6c34\u7684\u9898\u3002\n\n\u9996\u5148\u5411\u5de6\u8d70\u548c\u5411\u53f3\u8d70\uff0c\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u7ed3\u8bba\u662f\uff0c\u5982\u679c\u5411\u5de6\u8d70\u4e86\u4e00\u6bb5\u8ddd\u79bb\u53c8\u56de\u5230\u539f\u70b9\uff0c\u90a3\u4e48\u65b9\u5411\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6c42\u51fa\u80fd\u591f\u5411\u5de6\u8d70\u7684\u6700\u8fdc\u8ddd\u79bb\u548c\u5411\u53f3\u8d70\u7684\u6700\u8fdc\u8ddd\u79bb\uff0c\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n\u770b\u4e0a\u53bb\u662f $ O(n^2) $ \u7684\uff0c\u5b9e\u9645\u4e0a\u80fd\u591f\u9012\u63a8\u3002\n\n\u8bbe $ L[i] $ \u662f $ i $ \u5411\u5de6\u8d70\u7684\u6700\u8fdc\u8ddd\u79bb\uff0c$ R[i] $ \u662f $ i $ \u5411\u53f3\u8d70\u7684\u6700\u8fdc\u8ddd\u79bb\u3002\n\n\u5f53 $ i \\leq n \\And 2 \\leq i $ \u65f6\uff0c\u82e5\u4ece $ i $ \u5f00\u59cb\u80fd\u5411\u5de6\u8d70 $ 2 $ \u683c\uff08\u6b64\u65f6\u9053\u8def\u65b9\u5411\u8fd8\u539f\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u53ef\u4ee5\u4ece $ i-2 $ \u5f00\u59cb\u8d70\uff09\uff0c$ L[i] = L[i-2]+2 $\uff0c$ R[i] $ \u7d2f\u6b7b\u3002\n\n\u5bf9\u4e8e $ 0,1,n-1,n $ \u53ef\u4ee5\u7279\u5224\u3002\n\ncode:\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\ntypedef long long ll;\nconst int M=3e5+5; \nint T,n,L[M],R[M];bool a[M];char s[M];\nsigned main(){\n\tregister int i;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\" %d%s\",&n,s+1);\n\t\tfor(i=1;i<=n;++i)a[i]=s[i]=='L';\n\t\tR[n]=0;R[n-1]=!a[n];\n\t\tL[0]=0;L[1]=a[1];\n\t\tfor(i=n-2;i>=0;--i){\n\t\t\tif(!a[i+1]){\n\t\t\t\tif(a[i+2])R[i]=R[i+2]+2;\n\t\t\t\telse R[i]=1;\n\t\t\t}\n\t\t\telse R[i]=0;\n\t\t}\n\t\tfor(i=2;i<=n;++i){\n\t\t\tif(a[i]){\n\t\t\t\tif(!a[i-1])L[i]=L[i-2]+2;\n\t\t\t\telse L[i]=1;\n\t\t\t}\n\t\t\telse L[i]=0;\n\t\t}\n\t\tfor(i=0;i<=n;++i)printf(\"%d \",L[i]+R[i]+1);printf(\"\\n\");\n\t}\n}\n```",
        "postTime": 1612162431,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u9012\u63a8 CF1476D\u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b $\\mathcal{O}(n \\alpha (n))$ \u7684\u5e76\u67e5\u96c6\u601d\u8def\u3002\n\n\u8bbe\u64cd\u4f5c\u6570\u91cf\u4e3a $t$\u3002\n\n\u5bf9\u4e8e\u4efb\u610f\u56fa\u5b9a\u7684\u4f4d\u7f6e\uff0c\u89c2\u5bdf\u5230\u51b3\u5b9a\u7b54\u6848\u7684\u662f $t$ \u7684\u5947\u5076\u6027\uff0c\u8003\u8651\u62c6\u70b9\u3002\u8bbe\u7ed3\u70b9 $(i, v)$ \u8868\u793a\u89d2\u8272\u5f53\u524d\u5728\u7b2c $i$ \u5ea7\u57ce\u5e02\uff0c$v = t \\bmod 2$\u3002\n\n\u4f7f\u7528\u5e76\u67e5\u96c6\u8fde\u8fb9\u3002\u4ece\u7b2c $i$ \u5ea7\u57ce\u5e02\u51fa\u53d1\u7684\u7b54\u6848\u5373\u4e3a\u7ed3\u70b9 $(i, 0)$ \u6240\u5728\u7684\u8054\u901a\u5757\u7684\u5927\u5c0f\u3002\n\n```cpp\nvoid solve() {\n    int n;\n    std::cin >> n;\n    std::string d;\n    std::cin >> d;\n    DSU s(2 * (n + 1));\n    for (int i = 0; i < n; i++) {\n        if (d[i] == 'L') {\n            s.merge(i + 1, i + (n + 1));\n        } else {\n            s.merge(i, (i + 1) + (n + 1));\n        }\n    }\n    for (int i = 0; i < n + 1; i++) {\n        std::cout << s.size(i) << (i < n ? \" \" : \"\\n\");\n    }\n}\n```",
        "postTime": 1671713441,
        "uid": 609972,
        "name": "VectorLi",
        "ccfLevel": 0,
        "title": "CF1476D"
    }
]