[
    {
        "content": "\u5728\u6211\u7684\u535a\u5ba2\u56ed\u770b\u6548\u679c\u66f4\u4f73\uff1a[\u70b9\u8fd9\u91cc](https://www.cnblogs.com/1000Suns/p/11919065.html)\n\n\u672c\u9898\u96be\u70b9\u5728\u6b63\u786e\u6027\u8bc1\u660e\uff0c\u6240\u4ee5\u5199\u4e2a~~\u6211\u5c3d\u529b\u5199\u51fa\u7684~~\u8bc1\u660e\u4e25\u8c28\uff08\uff1f\uff09\u7684\u9898\u89e3\u3002\n\n\u4ee4 $f_i$ \u8868\u793a $[1,i]$ \u88ab\u5168\u90e8\u8986\u76d6\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u7b54\u6848\u4e3a $f_m$\u3002\n\n\u9996\u5148\u53d1\u73b0\uff0c\u6dfb\u52a0\u4e00\u4e2a\u533a\u95f4 $[0,0]$ \u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\u6240\u4ee5 $f_i$ \u7684\u521d\u503c\u53ef\u4ee5\u8bbe\u4e3a $i$\u3002\uff08\u8fd9\u4e2a\u5f88\u91cd\u8981\uff0c\u6ca1\u4e86\u5c31\u4e0d\u5bf9\u4e86\uff01\uff09\n\n\u8f6c\u79fb\uff0c\u5982\u679c $i$ \u5df2\u7ecf\u88ab\u67d0\u4e2a\u521d\u59cb\u533a\u95f4\u5b8c\u5168\u8986\u76d6\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u4ece $f_{i-1}$ \u8f6c\u79fb\u6765\u3002\n\n\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u5728 $i$ \u5de6\u8fb9\uff0c\u8ba1\u7b97\u628a\u8fd9\u4e2a\u533a\u95f4\u6269\u5f20\u5230\u80fd\u6070\u597d\u8986\u76d6\u5230 $i$ \u540e\u7684\u5de6\u7aef\u70b9\u3002\u4e5f\u5c31\u662f\u4ece $f_{\\max(0,l[j]-(i-r[j]))}+i-r[j]$ \u8f6c\u79fb\u6765\u3002\n\n\u8bb0\u4e0b\u6bcf\u4e2a\u533a\u95f4\u88ab\u6269\u5f20\u6210\u4ec0\u4e48\u6837\u4f1a\u70b8\u72b6\u6001\uff0c\u6240\u4ee5\u76f4\u63a5\u4ece\u521d\u59cb\u7684\u533a\u95f4\u5f00\u59cb\u6269\u5f20\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm)$\u3002\n\n\u5f00\u59cb\u8bc1\u660e\u6b63\u786e\u6027\u3002\n\n\u9996\u5148\u8bc1\u660e\u53ea\u7528\u8003\u8651\u88ab\u5de6\u8fb9\u7684\u533a\u95f4\u8986\u76d6\uff0c\u4e0d\u9700\u8981\u8003\u8651\u53f3\u8fb9\u7684\u3002\n\n\u5176\u5b9e\u88ab\u53f3\u8fb9\u7684\u533a\u95f4\u8986\u76d6\u4e5f\u88ab\u8003\u8651\u8fc7\u4e86\uff0c\u4e0d\u8fc7\u8f6c\u79fb\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u8df3\u8fc7\u4e86\u8fd9\u4e9b\u70b9\uff08\u5728\u8fd9\u4e2a\u88ab\u6269\u5f20\u540e\u7684\u533a\u95f4\u4e2d\uff09\u3002\u6240\u4ee5\u4e0d\u7528\u7ba1\u3002\n\n\u63a5\u4e0b\u6765\u8bc1\u660e\u76f4\u63a5\u4ece\u521d\u59cb\u7684\u533a\u95f4\u5f00\u59cb\u6269\u5f20\u5c31\u662f\u6700\u4f18\u89e3\u3002\n\n\u5982\u679c\u9700\u8981\u5728\u88ab\u6269\u5f20\u7684\u533a\u95f4\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u6269\u5f20\uff0c\u8bf4\u660e\u8fd9\u6b21\u6269\u5f20\u5230\u7684\u70b9 $i$ \u4e00\u5b9a\u5728\u4e0a\u6b21\u6269\u5f20\u5230\u7684\u70b9 $j$ \u7684\u53f3\u8fb9\uff0c\u6269\u5f20\u5230 $i$ \u540e\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e00\u5b9a\u8df3\u8fc7\u4e86 $j$\u3002\u800c\u6211\u4eec\u6700\u540e\u8981\u7528\u5230\u7684\u662f $i$ \u7684\u72b6\u6001\uff08\u56e0\u4e3a\u9700\u8981\u7ee7\u7eed\u6269\u5f20\uff09\uff0c\u6240\u4ee5\u4e2d\u95f4\u8fd9\u7b2c\u4e00\u6b21\u6269\u5f20\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\n\n\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e0d\u53ef\u80fd\u53d1\u751f\u3002\n\n\u63a5\u4e0b\u6765\u8bc1\u660e\u6070\u597d\u6269\u5f20\u5230\u80fd\u8986\u76d6 $i$ \u5c31\u662f\u6700\u4f18\u89e3\uff0c\u4e5f\u5c31\u662f\u6700\u4f18\u89e3\u4e0d\u9700\u8981\u6269\u5f20\u5230\u8986\u76d6\u8d85\u8fc7 $i$ \u4e00\u70b9\u70b9\u3002\n\n\u5982\u679c\u9700\u8981\u6269\u5f20\u66f4\u591a\uff0c\u4e00\u5b9a\u662f\u56e0\u4e3a\u53ef\u4ee5\u8986\u76d6\u5de6\u8fb9\u7684\u66f4\u591a\u70b9\uff0c\u8ba9\u5de6\u8fb9\u7684\u533a\u95f4\u66f4\u77ed\uff08\u4e0d\u7136\u8986\u76d6\u5230\u8d85\u8fc7 $i$ \u7684\u4f4d\u7f6e\u5728 $f_i$ \u662f\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u7684\uff09\u3002\n\n\u4f46\u662f\u7531\u4e8e\u6dfb\u52a0\u4e86\u533a\u95f4 $[0,0]$\uff08\u6ca1\u9519\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u5728\u8fd9\uff09\uff0c\u4e00\u5b9a\u6709 $f_{i+1}\\le f_i+1$\uff08\u56e0\u4e3a\u8986\u76d6\u5230 $i$ \u7684\u533a\u95f4\u53ef\u4ee5\u518d\u6269\u5c55\u4e00\u683c\uff09\u3002\n\n\u6240\u4ee5\u8df3\u8fc7\u533a\u95f4\u540e\u7684\u8f6c\u79fb\u70b9\u5e94\u8be5\u662f\u8d8a\u53f3\u8d8a\u597d\u3002\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u6269\u5c55\u5230 $i$ \u53f3\u8fb9\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u5c31\u662f\u5bf9\u7684\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst int maxn=100010;\n#define MP make_pair\n#define PB push_back\n#define lson o<<1,l,mid\n#define rson o<<1|1,mid+1,r\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(int i=(a);i>=(b);i--)\n#define MEM(x,v) memset(x,v,sizeof(x))\ninline ll read(){\n\tchar ch=getchar();ll x=0,f=0;\n\twhile(ch<'0' || ch>'9') f|=ch=='-',ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\nint n,m,x[maxn],s[maxn],f[maxn]; \nint main(){\n\tn=read();m=read();\n\tFOR(i,1,n) x[i]=read(),s[i]=read();\n\tf[0]=0;\n\tFOR(i,1,m){\n\t\tf[i]=i;\n\t\tbool flag=false;\n\t\tFOR(j,1,n) if(x[j]+s[j]>=i && x[j]-s[j]<=i) flag=true;\n\t\tif(flag) f[i]=f[i-1];\n\t\tFOR(j,1,n) if(x[j]+s[j]<i) f[i]=min(f[i],f[max(0,2*x[j]-i-1)]+i-(x[j]+s[j]));\n\t}\n\tprintf(\"%d\\n\",f[m]);\n}\n```",
        "postTime": 1574506209,
        "uid": 72118,
        "name": "AThousandSuns",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1253E \u3010Antenna Coverage\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u4e2a\u5b98\u65b9\u6b63\u89e3\u4e3aDP\u7684\u9898\uff0c\u6211\u6765\u4e00\u4e2a\u795e\u5947\u7684\u505a\u6cd5\uff0c\u5c06\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u6210\u4e00\u4e2a\u56fe\u8bba\u95ee\u9898\uff0c\u53d8\u6210\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u95ee\u9898\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8ba4\u4e3a\u5728\u56fe\u5f53\u4f5c\u4ece$i$\u5230$i+1$\u4ee3\u8868\u7740\u5c06\u4f4d\u7f6ei\u7ed9\u8986\u76d6\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u6211\u4eec\u77e5\u9053\u8986\u76d6\u4e00\u4e2a\u4e00\u4e2a\u5730\u65b9\u81f3\u5c11\u9700\u8981$1$\u7684\u4ee3\u4ef7\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5efa\u8fb9\uff0c\u4ece$i$\u5230$i+1$\uff0c\u4ee3\u8868\u8986\u76d6\u4f4d\u7f6e$i$\uff0c\u8ddd\u79bb\u4e3a$1$\u3002\u540c\u65f6\u5bf9\u4e8e\u6bcf\u4e2a\u5929\u7ebf\uff0c\u6211\u4eec\u4e0d\u59a8\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u4ece\u6bcf\u4e2a\u5929\u7ebf\u7684L\u5230R\u5f00\u59cb\u9010\u6e10\u5f80\u4e24\u8fb9\u6269\u5f20\uff0c\u6bcf\u5f80\u5916\u6269\u5f20\u4e00\u4e2a\u5355\u4f4d\u9700\u8981\u52a0$1$\u7684\u4ee3\u4ef7\uff0c\u77e5\u9053\u78b0\u5230\u4e24\u7aef$1$\u6216\u8005$m+1$\u505c\u6b62\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u8981\u6ce8\u610f\u5230\u53ef\u80fd\u4f1a\u6709\u5929\u7ebf\u6709\u91cd\u590d\u8986\u76d6\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u8fd8\u8981\u5efa\u4ece$i+1$\u5230$i$\u8ddd\u79bb\u4e3a0\u7684\u8fb9\u3002\n\n\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a\u53ca\u4e3a\u8dd1Dijkstra\u7684\u590d\u6742\u5ea6\uff0c\u4e3a $O(mlogm)$\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<set>\n#define _USE_MATH_DEFINES\n#include<math.h>\n#include<queue>\n#include<vector>\n#include<limits.h>\n#include<functional>\n#include<stack>\n#include<map>\n#include<unordered_map>\n#include<iomanip>\n#include<bitset>\ntypedef long long ll;\n#pragma GCC optimize(2)\n#define maxm 8001000\n#define maxn 200020\n#define lowbit(x) x & -x\n#define endl '\\n'\nusing namespace std;\nint n, m, s, t, cnt;\nint head[maxn], to[maxm], Next[maxm], val[maxm], dis[maxn], a[maxn], b[maxn];\nbool vis[maxn];\nvoid add(int u, int v, int w)\n{\n\tto[++cnt] = v;\n\tval[cnt] = w;\n\tNext[cnt] = head[u];\n\thead[u] = cnt;\n}\nvoid dijkstra()\n{\n\tpriority_queue<pair<int,int> > q;\n\tmemset(dis, 0x3f, sizeof(dis));\n\tmemset(vis, 0, sizeof(vis));\n\tdis[s] = 0;\n\tq.push(make_pair(0, s));\n\twhile (q.size())\n\t{\n\t\tauto u = q.top().second;\n\t\tq.pop();\n\t\tif (vis[u])\n\t\t\tcontinue;\n\t\tvis[u] = true;\n\t\tfor (int i = head[u]; i; i = Next[i])\n\t\t{\n\t\t\tint v = to[i];\n\t\t\tif (dis[v] > dis[u] + val[i])\n\t\t\t{\n\t\t\t\tdis[v] = dis[u] + val[i];\n\t\t\t\tq.push(make_pair(-dis[v], v));\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tcout.tie(nullptr);\n\tcin >> n >> m;\n\ts = 1, t = m + 1;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i] >> b[i];\n\t}\n\tfor (int i = 1; i <= m; i++)\n\t\tadd(i, i + 1, 1), add(i + 1, i, 0);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tint k = 0;\n\t\tint l = max(1, a[i] - b[i]), r = min(a[i] + b[i] + 1, m + 1);\n\t\tint flag = 0;\n\t\twhile (1)\n\t\t{\n\t\t\tl = max(1, l);\n\t\t\tr = min(r, m + 1);\n\t\t\tadd(l, r, k);\n\t\t\tk++;\n\t\t\tif (l == 1 || r == m + 1)\n\t\t\t\tbreak;\n\t\t\tflag = 1;\n\t\t\tl--;\n\t\t\tr++;\n\t\t}\n\t}\n\tdijkstra();\n\tcout << dis[t] << endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1581580575,
        "uid": 138569,
        "name": "youngk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1253E \u3010Antenna Coverage\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u7684\u5176\u5b83\u505a\u6cd5\u90fd\u597d\u7cbe\u5999\u554a\uff0c\u6211\u6765\u4e00\u79cd\u597d\u60f3\u7684 $O(n^2m)$ \u505a\u6cd5\u5427\uff083 \u79d2\u7684\u65f6\u9650\u4e0d\u614c\uff09\u3002\n\n\u770b\u7740 $n$ \u90a3\u4e48\u5c0f\uff0c\u8003\u8651\u628a $n$ \u653e\u8fdb\u72b6\u6001\u91cc\u3002$f(i, j)$ \u8868\u793a\u8986\u76d6\u5230 $i$\uff0c$i$ \u88ab\u7b2c $j$ \u4e2a\u8986\u76d6\u7f29\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u7136\u540e\u5206\u6210\u4e24\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u79cd\u662f $a_j \\le i$\uff0c\u5373\u7b2c $j$ \u4e2a\u5929\u7ebf\u5728 $i$ \u4e4b\u524d\uff0c\u53e6\u4e00\u79cd\u662f\u5728\u5176\u540e\u9762\u3002\n\n\u5bf9\u4e8e\u540e\u9762\u7684\u60c5\u51b5\uff0c\u5982\u679c\u524d\u9762\u4e5f\u662f\u7528\u5929\u7ebf $j$ \u6765\u8986\u76d6\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u518d\u52a0\u4e86\uff0c\u56e0\u4e3a\u4e00\u5b9a\u5df2\u7ecf\u8986\u76d6\u5230\u5f53\u524d\u4e86\u3002\u5426\u5219\u679a\u4e3e\u4e4b\u524d\u4f7f\u7528\u7684\u5929\u7ebf $k$\uff0c\u6709\u8f6c\u79fb $f(i, j) \\leftarrow f(i-1, k) + a_j - i - s_j$\uff0c\u5373\u628a\u5929\u7ebf $j$ \u64cd\u4f5c\u5230\u53ef\u4ee5\u8986\u76d6\u5f53\u524d\u7684\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e8e\u524d\u9762\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u8fd9\u6837\u53bb\u8f6c\u79fb\u4e86\uff0c\u56e0\u4e3a\u5f80\u540e\u62d3\u5c55\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u591a\u8986\u76d6\u5230\u524d\u9762\uff0c\u82b1\u8d39\u4f1a\u53d8\u5f97\u66f4\u5c0f\uff0c\u6240\u4ee5\u5f97\u4ece\u5f53\u524d\u70b9\u5173\u4e8e $a_j$ \u7684\u5bf9\u79f0\u70b9\u8f6c\u79fb\u8fc7\u6765\u3002\u5373 $f(i, j) \\leftarrow f(2a_j-i-1, k) + i - a_j - s_i$\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u8981\u8003\u8651\uff08\u611f\u8c22\u6837\u4f8b\u56db\uff0c\u4e0d\u7136\u6211\u8fd8\u771f\u53d1\u73b0\u4e0d\u4e86\uff09\uff0c\u5929\u7ebf\u4e3a\u4e86\u8986\u76d6\u5230\u4e00\u4e2a\u70b9\uff0c\u662f\u53ef\u4ee5\u591a\u8986\u76d6\u4e00\u70b9\u4e1c\u897f\u7684\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u8fd9\u8868\u73b0\u4e3a $a_j$ \u66f4\u63a5\u8fd1 $i$ \u800c\u4e0d\u662f\u66f4\u63a5\u8fd1 $1$ \u65f6\u53ef\u80fd\u662f\u76f4\u63a5\u628a $1 \\to 2a_j-1$ \u6574\u6bb5\u76d6\u8fc7\u3002\u5bf9\u4e8e\u524d\u9762\u4e00\u79cd\u60c5\u51b5\uff0c\u4e0d\u5b58\u5728\u9700\u8981\u7279\u6b8a\u7167\u987e\u7684\u60c5\u51b5\uff0c\u524d\u9762\u5df2\u7ecf\u8986\u76d6\u5230\u4e86\uff0c\u800c\u5f80\u540e\u591a\u7684\u540e\u9762\u4f1a\u8003\u8651\u3002\u6240\u4ee5\u53ea\u8981\u52a0\u4e00\u4e2a\u7279\u5224\u5373\u53ef\u3002\n\n~~\u8fd9\u4e2a\u505a\u6cd5\u5176\u5b9e\u8dd1\u5f97\u633a\u5feb\uff0c\u6700\u4f18\u89e3\u7b2c\u56db\u5341\u4e5d\u9875\u3002~~\n\n\n```cpp\nvoid main() {\n\tstd::cin >> n >> m;\n\tfor (int i = 1; i <= n; i++) std::cin >> a[i] >> s[i];\n\tmemset(f, 0x3f, sizeof f);\n\tfor (int i = 1; i <= m; i++)\n\t    for (int j = 1; j <= n; j++)\n\t        if (a[j] <= i) \n\t            for (int k = 1; k <= n; k++) {\n    \t            int w = std::max(i - a[j] - s[j], 0);\n    \t            if (2 * a[j] - i - 1 > 0) w += f[2 * a[j] - i - 1][k];\n    \t            f[i][j] = std::min(f[i][j], w);\t            \n    \t            if (i - a[j] < a[j]) // \u90a3\u4e2a\u7279\u5224\n        \t            f[i][j] = std::min(f[i][j], std::max(0, a[j]-s[j]-1));\n    \t        }\n    \t    else {\n    \t        if (i != 1) f[i][j] = std::min(f[i][j], f[i-1][j]);\n    \t        for (int k = 1; k <= n; k++)\n    \t            f[i][j] = std::min(f[i][j], \n    \t            ((i-1) ? f[i-1][k] : 0) + std::max(a[j]-i-s[j], 0));\n    \t    }\n    std::cout << *std::min_element(f[m] + 1, f[m] + 1 + n); \n}\n```",
        "postTime": 1643196649,
        "uid": 499996,
        "name": "Qiaoqia",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1253E Antenna Coverage"
    },
    {
        "content": "\u8fd9\u9898\u6211\u91c7\u7528\u4e00\u79cd\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm)$ \u7684 dp \u65b9\u6cd5\u3002\n\n\u6211\u4eec\u8bbe $dp(i)$ \u4e3a\u524d i \u4e2a\u70b9\u5747\u88ab\u8986\u76d6\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u7531\u4e8e\u8fd9\u9898 n \u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u6839\u5929\u7ebf\u5e76\u4e14\u679a\u4e3e\u5728\u8fd9\u6839\u5929\u7ebf\u4e0a\u82b1\u8d39\u7684\u94b1\u6570\uff0c\u8bb0\u4e3a j \u3002\uff08 j \u4ece 1 \u5230 m \uff09\n\n\u5219\u6b64\u65f6\u7b2c i \u6839\u5929\u7ebf\u80fd\u8986\u76d6\u7684\u8303\u56f4\u4e3a $[x_i-s_i-j,x_i+s_i+j]$ \u3002\n\n\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$dp[x_i+s_i+j]=\\min(dp[x_i+s_i+j],dp[x_i-s_i-j-1]+j)$$\n\n\u6ce8\u610f $x_i-s_i-j-1$ \u53ef\u80fd\u5c0f\u4e8e 0 \uff0c$x_i+s_i+j$ \u53ef\u80fd\u5927\u4e8e m \u3002\n\n\u4f46\u662f\u6211\u4eec\u89c2\u5bdf\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u4f4d\u7f6e i \u548c j \uff0c\u5982\u679c dp[i] < dp[j] \u4e14 i > j \uff0c\u90a3\u4e48 dp[j] \u5176\u5b9e\u5e94\u8be5\u662f\u7b49\u4e8e dp[i] \u7684\uff0c\u56e0\u4e3a\u524d j \u4e2a\u5168\u90e8\u88ab\u8986\u76d6\u4e86\u524d i \u4e2a\u4e5f\u4e00\u5b9a\u5168\u90e8\u88ab\u8986\u76d6\u4e86\u3002\u8fd9\u79cd\u60c5\u51b5\u8981\u8003\u8651\u3002\n\n\u6700\u540e\u8f93\u51fa $dp[m]$ \u3002\n\n\u56e0\u4e3a $dp$ \u6570\u7ec4\u8981\u4ece\u5c0f\u5230\u5927\u5904\u7406\uff08\u4e0d\u7136 $dp[x_i+s_i+j]$ \u53ef\u80fd\u6709\u66f4\u597d\u7684\u65b9\u6848\u6ca1\u6709\u88ab\u5904\u7406\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u8981\u5bf9\u6240\u6709\u5929\u7ebf\u6309 $s_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n# \u4ee3\u7801\n\n\u662f\u6211\u5728\u8001\u5e08\u6a21\u62df\u8d5b\u4e0a\u5199\u7684\uff0c\u6570\u636e\u8303\u56f4\u4e0d\u540c\uff0c\u8bf7\u89c1\u8c05\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\ninline void in(int &x)\n{\n\tchar c=getchar(),f=1;\n\twhile((c<'0'||c>'9')&&c!='-')c=getchar();\n\tif(c=='-')c=getchar(),f=-1;\n\tfor(x=0;c>='0'&&c<='9';c=getchar())\n\tx=x*10+c-'0';\n\treturn ;\n}\ninline void fre()\n{\n\tfreopen(\"lamp.in\",\"r\",stdin);\n\tfreopen(\"lamp.out\",\"w\",stdout);\n\treturn ;\n}\nclass N{\n\tpublic:\n\t\tint x,c;\n\t\tinline bool operator <(const N a)const{\n\t\t\treturn x<a.x;\n\t\t}\n\t\tinline void _in()\n\t\t{\n\t\t\tin(x);in(c);\n\t\t\treturn ;\n\t\t}\n}a[105];\nint dp[500005];\nint main()\n{\n//\tfre();\n\tmemset(dp,0x7f,sizeof(dp));\n\tint n,m;\n\tin(n);in(m);\n\tfor(int i=0;i<n;++i)a[i]._in();\n\tstd::sort(a,a+n);\n\tdp[0]=0;\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tfor(int j=0;j<m;++j)\n\t\t{\n\t\t\tif(a[i].x-a[i].c-j<0&&a[i].x+a[i].c+j>m)break;//\u5c0f\u4f18\u5316\uff0c\u5c31\u662f\u5f53\u8fd9\u4e2a\u5929\u7ebf\u5c06\u6240\u6709\u4f4d\u7f6e\u8986\u76d6\u4e86\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u8df3\u8fc7\uff08\u82b1\u66f4\u591a\u94b1\u4e00\u5b9a\u4e0d\u4f18\uff09\n\t\t\tdp[std::min(a[i].x+a[i].c+j,m)]=std::min(dp[std::min(a[i].x+a[i].c+j,m)],j+dp[std::max(a[i].x-a[i].c-j-1,0)]);\n\t\t}\n\t\tfor(int j=m-1;j>=0;--j)dp[j]=std::min(dp[j],dp[j+1]);//\u5904\u7406 i>j \u4e14 dp[i]<dp[j] \u7684\u60c5\u51b5\n\t}\n\tprintf(\"%d\\n\",dp[m]);\n\treturn 0;\n}\n```\n",
        "postTime": 1680924552,
        "uid": 566878,
        "name": "IAWNA",
        "ccfLevel": 0,
        "title": "CF1253E Antenna Coverage \u9898\u89e3"
    }
]