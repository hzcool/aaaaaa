[
    {
        "content": "Update:\n\n2020-2-18 \u52d8\u8bef\n\n---\n\n### solution\n\n\u4e00\u4e2a\u663e\u7136\u7684\u60f3\u6cd5\u662f\uff0c\u89c4\u5b9a\u4e00\u79cd\u6620\u5c04 $f(a_i)=i$\uff0c\u7136\u540e\u5206\u522b\u628a $a_i$ \u8bbe\u4e3a $f(a_i)$\uff0c$b_i$ \u8bbe\u4e3a $f(b_i)$\uff0c\u5bb9\u6613\u8bc1\u660e\uff0c\u73b0\u5728 $a$ \u548c $b$ \u4ecd\u662f $1$ \u5230 $n$ \u7684\u6392\u5217\u3002\n\n```cpp\nfor(int i=1; i<=n; ++i) pos[a[i]]=i;\nfor(int i=1; i<=n; ++i) b[i]=pos[b[i]];\n```\n\n\u6b64\u65f6\uff0c\u8be2\u95ee\u5c31\u8f6c\u5316\u4e3a\uff1a\u8ba1\u7b97\u6392\u5217 $b$ \u7684\u533a\u95f4 $[l_b,r_b]$ \u4e2d\uff0c\u503c\u7684\u8303\u56f4\u5728\u533a\u95f4 $[l_a,r_a]$ \u4e2d\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n#### 1. \u5206\u5757\n\n\u5c06 $b$ \u5e8f\u5217\u5206\u6210 $\\sqrt n$ \u5757\uff0c\u5757\u5185\u6392\u5e8f\uff0c\u9884\u5904\u7406\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u67e5\u8be2\u65f6\u5bf9\u4e8e\u6574\u5757\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u6c42\u51fa $[l_a,r_a]$ \u8303\u56f4\u4e2d\u6570\u7684\u4e2a\u6570\uff0c\u5176\u4f59\u90e8\u5206\u66b4\u529b\u67e5\u627e\uff0c\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6 $O(\\sqrt n \\log n)$\u3002\n\n\u4fee\u6539\u65f6\u76f4\u63a5\u91cd\u6784\u5f53\u524d\u5757\u5373\u53ef\uff0c\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6 $O(\\sqrt n\\log n)$\u3002\n\n\u603b\u590d\u6742\u5ea6\u662f $O(m\\sqrt n\\log n)$\uff0c\u5982\u679c\u5e38\u6570\u4e0d\u5927\u662f\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u7684\u3002\u6240\u4ee5\u5728\u6bd4\u8d5b\u4e2d\uff0c\u5982\u679c\u53ef\u4ee5\u786e\u4fdd\u5e38\u6570\u4e0d\u5927\u7684\u8bdd\uff0c\u662f\u4e00\u79cd\u6027\u4ef7\u6bd4\u5f88\u9ad8\u7684\u505a\u6cd5\u3002\u4e0d\u8fc7\u5728\u6bd4\u8d5b\u4e2d\u4e3a\u4e86\u4fdd\u9669\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u4e00\u4e9b\u4f18\u5316\uff0c\u4e0b\u6587\u4f1a\u8bb2\u5230\u8be5\u505a\u6cd5\u7684\u4e00\u79cd\u4f18\u5316\u3002\n\n```cpp\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 2e5 + 5;\nconst int MAXM = 2e5 + 5;\n\ninline void chk_max(int &a,int b){ if(a<b) a=b;}\n\nint n,a[MAXN],b[MAXN];\n\nint lB[MAXN],rB[MAXN],pos[MAXN],tot;\nint val[MAXN];\n\nvoid init(void)//\u521d\u59cb\u5316\n{\n\ttot=sqrt(n);\n\tfor(int i=1; i<=tot; ++i)\n\t\tlB[i]=(i-1)*tot+1,\n\t\trB[i]=lB[i]+tot-1;//\u6bcf\u4e2a\u5757\u7684\u5de6\u53f3\u8fb9\u754c\n\tchk_max(rB[tot],n);\n\tfor(int i=1; i<=tot; ++i)\n\t{\n\t\tfor(int j=lB[i]; j<=rB[i]; ++j)\n\t\t\tpos[j]=i, val[j]=b[j];//pos[i]\u8868\u793a\u7b2ci\u4e2a\u6570\u5c5e\u4e8e\u54ea\u4e2a\u5757\n\t\tsort(val+lB[i],val+rB[i]+1);//val\u662f\u5757\u5185\u6392\u5e8f\u540e\u7684\u6570\u7ec4\n\t}\n}\n\nvoid updateBlock(int now)//\u91cd\u6784\u8be5\u5757\n{\n\tfor(int i=lB[now]; i<=rB[now]; ++i)\n\t\tval[i]=b[i];\n\tsort(val+lB[now],val+rB[now]+1);\n}\n\nint query(int l,int r,int x,int y)\n{\n\tint res=0;\n\tif(pos[l]==pos[r])//\u5728\u540c\u4e00\u5757\u5185\n\t{\n\t\tfor(int i=l; i<=r; ++i)\n\t\t\tif(x<=b[i] && b[i]<=y) ++res;\n\t\treturn res;\n\t}\n\t//\u96f6\u6563\u90e8\u5206\u66b4\u529b\n\tint nowl=pos[l];\n\tfor(int i=l; i<=rB[nowl]; ++i)\n\t\tif(x<=b[i] && b[i]<=y) ++res;\n\tint nowr=pos[r];\n\tfor(int i=lB[nowr]; i<=r; ++i)\n\t\tif(x<=b[i] && b[i]<=y) ++res;\n\t//\u6574\u5757\u4e2d\u4e8c\u5206\u67e5\u627e\n\tfor(int i=nowl+1; i<nowr; ++i)\n\t\tres += upper_bound(val+lB[i],val+rB[i]+1,y) - upper_bound(val+lB[i],val+rB[i]+1,x-1);\n\treturn res;\n}\n\nint main(void)\n{\n\tint Q;\n\tscanf(\"%d%d\",&n,&Q);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\ta[x]=i;\n\t}\n\tfor(int i=1; i<=n; ++i)\n\t\tscanf(\"%d\",&b[i]),\n\t\tb[i]=a[b[i]];\n\tinit();\n    \n\twhile(Q--)\n\t{\n\t\tint oper,x,y;\n\t\tscanf(\"%d%d%d\",&oper,&x,&y);\n\t\tif(oper==1)\n\t\t{\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tprintf(\"%d\\n\",query(l,r,x,y));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tswap(b[x],b[y]);\n\t\t\tupdateBlock(pos[x]);\n\t\t\tif(pos[x]!=pos[y]) updateBlock(pos[y]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n#### 2. CDQ \u5206\u6cbb\n\n\u628a $b$ \u5e8f\u5217\u4e2d\u7684\u6570\u770b\u6210\u70b9\uff0c\u7b2c $i$ \u4e2a\u70b9\u7684\u5750\u6807\u662f $(i,b_i)$\uff0c\u6743\u503c\u4e3a $1$ \uff0c\u5e73\u9762\u4e2d\u5176\u4ed6\u70b9\u7684\u6743\u503c\u4e3a $0$\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff0c\u6bcf\u6b21\u53ef\u4ee5\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u6216\u67e5\u8be2\u6a2a\u5750\u6807\u5728 $[l_b,r_b]$\uff0c\u7eb5\u5750\u6807\u5728 $[l_a,r_a]$ \u4e2d\u7684\u70b9\u7684\u6743\u503c\u4e4b\u548c\uff0c\u663e\u7136\u53ef\u4ee5\u7528 CDQ \u5206\u6cbb\u89e3\u51b3\u3002\n\nCDQ \u5206\u6cbb\u662f\u4e00\u79cd\u79bb\u7ebf\u7b97\u6cd5\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u5c06\u70b9 $(x,y)$ \u7684\u6743\u503c\u589e\u52a0 $k$ \u3002\n2. \u67e5\u8be2\u6a2a\u5750\u6807\u5728 $[l,r]$\u8303\u56f4\uff0c\u7eb5\u5750\u6807 $\\leq y$ \u7684\u70b9\u7684\u6743\u503c\u4e4b\u548c\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4f7f\u7528\u8be5\u7b97\u6cd5\u53ef\u4ee5\u6c42\u51fa\u5e73\u9762\u5185\u4efb\u610f\u77e9\u5f62\u7684\u6743\u503c\u4e4b\u548c\u3002\u6ce8\u610f\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u64cd\u4f5c\uff08\u4fee\u6539\u548c\u67e5\u8be2\uff09\u7684\u6a2a\u5750\u6807\u5fc5\u987b\u662f\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6574\u6570\uff0c\u800c\u7eb5\u5750\u6807\u53ef\u4ee5\u662f\u4efb\u610f\u652f\u6301\u6bd4\u8f83\u7684\u6570\u636e\u7c7b\u578b\uff0c\u60f3\u8981\u6269\u5c55\u6a2a\u5750\u6807\u7684\u8303\u56f4\uff0c\u5219\u9700\u8981\u53e6\u5916\u7684\u5904\u7406\u3002\n\nCDQ \u5206\u6cbb\u7684\u5927\u4f53\u601d\u8def\u5982\u4e0b\uff1a\u5c06\u5f53\u524d\u7684\u64cd\u4f5c\u5e8f\u5217\uff08\u5305\u62ec\u4fee\u6539\u548c\u67e5\u8be2\uff09\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u9012\u5f52\u5904\u7406\u5de6\u53f3\u4e24\u90e8\u5206\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u7136\u540e\u8ba1\u7b97\u5de6\u534a\u8fb9\u7684\u6bcf\u4e2a\u4fee\u6539\u5bf9\u53f3\u534a\u8fb9\u7684\u6bcf\u4e2a\u4fee\u6539\u7684\u8d21\u732e\u3002\n\n\uff08\u4e0b\u9762\u4e24\u6bb5\u610f\u4f1a\u4e00\u4e0b\uff0c\u770b\u4ee3\u7801\u6700\u597d\u61c2\uff09\n\n\u5982\u4f55\u8ba1\u7b97\u8d21\u732e\uff1f\uff08\u4ee5\u4e0b\uff0c\u4f7f\u7528 \u201c \u5143\u7d20 \u201d \u79f0\u547c \u201c \u64cd\u4f5c \u201d\uff09\u53ef\u4ee5\u5c06\u5de6\u53f3\u4e24\u8fb9\u5206\u522b\u6309\u7eb5\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7528\u53cc\u6307\u9488\u7ef4\u62a4\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u53f3\u534a\u8fb9\u7684\u5143\u7d20\uff08\u4ee5\u4e0b\u79f0\u4f5c $p$ \uff09\uff0c\u6700\u5927\u7684\u3001\u7eb5\u5750\u6807\u5c0f\u4e8e $p$ \u7684\u7eb5\u5750\u6807\u7684\u3001\u5de6\u534a\u8fb9\u7684\u5143\u7d20\uff08\u4ee5\u4e0b\u79f0\u4f5c $q$ \uff09\uff1b\u901a\u8fc7\u4ee5\u4e0a\u5904\u7406\u65b9\u5f0f\u5904\u7406\u65b9\u5f0f\u53d1\u73b0\uff0c\u6240\u6709\u4ece \u5f53\u524d\u5e8f\u5217\u5f00\u5934 \u5230 $q$ \u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u5176\u7eb5\u5750\u6807\u5747\u5c0f\u4e8e $p$ \u7684\u7eb5\u5750\u6807\uff0c\u6240\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4ece \u5f53\u524d\u5e8f\u5217\u5f00\u5934 \u5230 $q$ \u7684\u4fee\u6539\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6a2a\u5750\u6807\u7684\u6743\u503c\u4e4b\u548c\u3002\u8fd9\u4e2a\u548c\u5373\u4e3a\u5de6\u534a\u533a\u95f4\u5bf9\u4e8e $p$ \u7684\u8d21\u732e\u3002\uff08\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4e5f\u662f\u5bf9\u6a2a\u5750\u6807\u6709\u9650\u5236\u7684\u539f\u56e0\uff09\n\n\u5982\u4f55\u6392\u5e8f\uff1f\u53d1\u73b0\u4ee5\u4e0a\u65b9\u6cd5\u548c\u5f52\u5e76\u6392\u5e8f\u76f8\u4f3c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5904\u7406\u65f6\u5c31\u5c06\u5143\u7d20\u6392\u5e8f\uff0c\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\n\u9012\u5f52\u662f $O(n\\log n)$ \u7684\uff0c\u6811\u72b6\u6570\u7ec4 $O(\\log n)$\uff0c\u603b\u590d\u6742\u5ea6 $O(nlog^2n)$\u3002\n\n```cpp\nint mid = (l+r)>>1;\nsolve(l,mid);//\u9012\u5f52\u5904\u7406\u4e24\u8fb9\u7684\u533a\u95f4\nsolve(mid+1,r);\n\nint cur=l;\nfor(int i=l,j=mid+1; i<=mid || j<=r;)\n{\n    if(j>r || (i<=mid && event[i].y<=event[j].y))\n    {\n        if(event[i].is_update())\n            tree.update(event[i].l, event[i].val);//tree\u662f\u6811\u72b6\u6570\u7ec4   event[i].l\u662f\u5f53\u524d\u4fee\u6539\u64cd\u4f5c\u7684\u6a2a\u5750\u6807\n        buffer[cur++] = event[i++];//buffer \u662f\u6392\u597d\u5e8f\u7684\u6570\u7ec4\n    }\n    else\n    {\n        if(event[j].is_query())\n            res[event[j].id] += event[j].val * tree.query(event[j].l, event[j].r);//res\u662f\u6bcf\u4e2a\u8be2\u95ee\u7684\u7b54\u6848   event[j].val\u662f\u6bcf\u4e2a\u8be2\u95ee\u7684\u6743\u503c\uff08\u4e0b\u9762\u4f1a\u8bb2\uff09\n        buffer[cur++] = event[j++];\n    }\n}\n\nfor(int i=l; i<=mid; ++i)\n    if(event[i].is_update())\n        tree.update(event[i].l,-event[i].val);//\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\n\nfor(int i=l; i<=r; ++i) event[i] = buffer[i];//\u6392\u597d\u5e8f\n```\n\n\u4e3a\u4ec0\u4e48\u4ee3\u7801\u4e2d\u7684\u67e5\u8be2\u4e5f\u6709\u6743\u503c\uff1f\u5b9e\u9645\u4e0a\u7a0b\u5e8f\u4e2d\u7684 \u201c \u67e5\u8be2 \u201d \u64cd\u4f5c\uff0c\u662f\u5c06 ```res[id]``` \u7684\u503c\uff0c\u52a0\u4e0a\u6a2a\u5750\u6807\u5728 $[l,r]$\u8303\u56f4\uff0c\u7eb5\u5750\u6807 $\\leq y$ \u7684\u70b9\u7684\u6743\u503c\u4e4b\u548c\uff0c\u4e58\u4ee5 $val$ \u7684\u7ed3\u679c\uff0c\u8fd9\u4e48\u505a\u662f\u4e3a\u4e86\u65b9\u4fbf\u8be2\u95ee\u7684\u8f93\u51fa\uff0c\u8fd9\u4e00\u70b9\u7ed3\u5408\u4ee3\u7801\u4f1a\u66f4\u597d\u7406\u89e3\u3002\n\n\u6ce8\u610f\uff0c\u4e3a\u4e86\u51cf\u5c0f\u5e38\u6570\uff0c\u5728\u533a\u95f4\u5927\u5c0f\u5230\u4e00\u5b9a\u8303\u56f4\u65f6\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u8ba1\u7b97\uff0c\u800c\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\u7684\u64cd\u4f5c\u5728\u533a\u95f4\u5927\u5c0f\u5230\u4e00\u5b9a\u8303\u56f4\u65f6\u4e5f\u53ef\u66b4\u529b\u89e3\u51b3\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff08\u521d\u5b66 CDQ \u5206\u6cbb\uff0c\u501f\u9274\u4e86 @neal \u5927\u4f6c\u7684\u7a0b\u5e8f\uff09\uff1a\n\n```cpp\nusing namespace std;\nconst int MAXN = 2e5 + 5;\nconst int MAXM = 2e5 + 5;\n\ninline void chk_max(int &a,int b){ if(a<b) a=b;}\n\nstruct BIT//\u6811\u72b6\u6570\u7ec4\n{\n\tint n,tree[MAXN];\n\t#define lowbit(x) ((x)&-(x))\n\tBIT(int n_=0){ init(n_);}\n\tinline void init(int n_){ n=n_; memset(tree,0,sizeof(tree));}\n\tinline void clean(void){ memset(tree,0,sizeof(tree));}\n\tinline void update(int x,int k)\n\t{\n\t\twhile(x<=n)\n\t\t\ttree[x]+=k,\n\t\t\tx+=lowbit(x);\n\t}\n\tinline int query(int x)\n\t{\n\t\tint res=0;\n\t\twhile(x)\n\t\t\tres+=tree[x],\n\t\t\tx^=lowbit(x);\n\t\treturn res;\n\t}\n\tinline int query(int l,int r){ return query(r)-query(l-1);}\n};\n\nstruct CDQ\n{\n\tstruct Event//\u64cd\u4f5c\n\t{\n\t\tint l,r,y;//\u4fee\u6539\u64cd\u4f5c\u7684 l=r=x\n\t\tint val,id;//id\u662f\u67e5\u8be2\u64cd\u4f5c\u7684\u7f16\u53f7\uff0c\u4fee\u6539\u64cd\u4f5c\u7684id=-1\n\t\tEvent(int l_=0,int r_=0,int y_=0,int val_=0,int id_=0){ l=l_; r=r_; y=y_; val=val_; id=id_;}\n\t\t\n\t\tinline bool is_update(void){ return id<0;}\n\t\tinline bool is_query(void){ return id>=0;}\n\t\t\n\t\tinline friend operator < (const Event &p,const Event &q){ return p.y<q.y;}\n\t};\n\t\n\tvector<Event> event, buffer;\n\tvector<int> res;\n\tBIT tree;\n\tint maxx,maxid;\n\t\n\tCDQ(void){ init();}\n\tinline void init(void){ maxx=maxid=0;}\n\t\n\tinline void add_update(int x,int y,int val)//\u52a0\u5165\u4e00\u4e2a\u4fee\u6539\n\t{\n\t\tevent.push_back((Event){x,x,y,val,-1});\n\t\tchk_max(maxx,x);\n\t}\n\t\n\tinline void add_query(int l,int r,int y,int val,int id)//\u52a0\u5165\u4e00\u4e2a\u67e5\u8be2\n\t{\n\t\tevent.push_back((Event){l,r,y,val,id});\n\t\tchk_max(maxx,r); chk_max(maxid,id);\n\t}\n\t\n\tvoid solve(int l,int r)\n\t{\n\t\tif(r-l+1<=100)//\u533a\u95f4\u5f88\u5c0f\u65f6\u76f4\u63a5\u66b4\u529b\n\t\t{\n\t\t\tfor(int i=l; i<=r; ++i) if(event[i].is_query())\n\t\t\t{\n\t\t\t\tEvent now = event[i];\n\t\t\t\tfor(int j=l; j<i; ++j) if(event[j].is_update())\n\t\t\t\t\tif(event[j].y<=event[i].y && now.l <= event[j].l && event[j].l <= now.r)\n\t\t\t\t\t\tres[now.id] += now.val * event[j].val;\n\t\t\t}\n\t\t\tsort(event.begin()+l, event.begin()+r+1);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint mid = (l+r)>>1;\n\t\tsolve(l,mid);\n\t\tsolve(mid+1,r);\n\t\t\n\t\tint cur=l;\n\t\tfor(int i=l,j=mid+1; i<=mid || j<=r;)\n\t\t{\n\t\t\tif(j>r || (i<=mid && event[i].y<=event[j].y))\n\t\t\t{\n\t\t\t\tif(event[i].is_update())\n\t\t\t\t\ttree.update(event[i].l, event[i].val);\n\t\t\t\tbuffer[cur++] = event[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(event[j].is_query())\n\t\t\t\t\tres[event[j].id] += event[j].val * tree.query(event[j].l, event[j].r);\n\t\t\t\tbuffer[cur++] = event[j++];\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(mid-l+1 > (tree.n>>9)) tree.clean();//\u8fd9\u91cc\u662f\u4e0a\u6587\u63d0\u53ca\u7684\u5e38\u6570\u4f18\u5316\n\t\telse for(int i=l; i<=mid; ++i)\n\t\t\tif(event[i].is_update())\n\t\t\t\ttree.update(event[i].l,-event[i].val);\n\t\t\n\t\tfor(int i=l; i<=r; ++i) event[i] = buffer[i];\n\t}\n\t\n\tvoid solve(void)\n\t{\n\t\tres.assign(maxid+1,0);\n\t\ttree.init(maxx);\n\t\tbuffer.resize(event.size());\n\t\tsolve(0,event.size()-1);\n\t}\n}solver;\n\nint a[MAXN],b[MAXN],pos[MAXN];\n\nint main(void)\n{\n\tint n,Q;\n\tscanf(\"%d%d\",&n,&Q);\n\tfor(int i=1; i<=n; ++i) scanf(\"%d\",&a[i]);\n\tfor(int i=1; i<=n; ++i) scanf(\"%d\",&b[i]);\n\t\n\tfor(int i=1; i<=n; ++i) pos[a[i]]=i;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tb[i]=pos[b[i]];\n\t\tsolver.add_update(i,b[i],1);\n\t}\n\t\n\tint cnt=0;\n\twhile(Q--)\n\t{\n\t\tint oper,x,y;\n\t\tscanf(\"%d%d%d\",&oper,&x,&y);\n\t\tif(oper==1)\n\t\t{\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n            //cnt\u662f\u5f53\u524d\u8be2\u95ee\u7684\u7f16\u53f7\n\t\t\tsolver.add_query(l,r,y,1,cnt);//val=1\uff0c\u8fd9\u91cc\u662f\u5c06\u7f16\u53f7\u4e3acnt\u7684\u8be2\u95ee\u52a0\u4e0a\u8be5\u77e9\u5f62\u7684\u548c\n\t\t\tsolver.add_query(l,r,x-1,-1,cnt);//val=-1\uff0c\u8fd9\u91cc\u662f\u5c06\u7f16\u53f7\u4e3acnt\u7684\u8be2\u95ee\u51cf\u53bb\u8be5\u77e9\u5f62\u7684\u548c\n\t\t\t++cnt;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsolver.add_update(x,b[x],-1);\n\t\t\tsolver.add_update(y,b[y],-1);\n\t\t\tswap(b[x],b[y]);\n\t\t\tsolver.add_update(x,b[x],1);\n\t\t\tsolver.add_update(y,b[y],1);\n\t\t}\n\t}\n\t\n\tsolver.solve();\n\tfor(int i=0; i<cnt; ++i)\n\t\tprintf(\"%d\\n\",solver.res[i]);\n\treturn 0;\n}\n```\n\n#### 3. \u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u8fd9\u4e2a\u505a\u6cd5\u4e5f\u6bd4\u8f83\u663e\u7136\u3002\u95ee\u9898\u53ef\u4ee5\u62c6\u5206\u6210\uff0c\u533a\u95f4 $[l_b,r_b]$ \u4e2d\u5c0f\u4e8e\u7b49\u4e8e $r_a$ \u7684\u6570\u7684\u4e2a\u6570 \u51cf\u53bb \u5c0f\u4e8e\u7b49\u4e8e $l_a-1$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\u5373\uff0c\u67e5\u8be2\u533a\u95f4\u4e2d\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u6570\u7684\u4e2a\u6570\u3002\n\n\u5982\u679c\u6ca1\u6709\u4fee\u6539\uff0c\u8be5\u95ee\u9898\u663e\u7136\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u89e3\u51b3\uff0c\u800c\u4e3b\u5e2d\u6811\u7684\u672c\u8d28\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u5efa\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u52a0\u4e0a\u67e5\u8be2\uff0c\u5982\u679c\u5bf9\u6bcf\u68f5\u7ebf\u6bb5\u6811\u8fdb\u884c\u4fee\u6539\u663e\u7136\u8017\u65f6\u53c8\u8017\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u8fd9\u4e00\u8fc7\u7a0b\u3002\u5728\u6811\u72b6\u6570\u7ec4\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ef4\u62a4\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u8be5\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\uff0c\u67e5\u8be2\u4e0e\u4fee\u6539\u90fd\u4e0e\u666e\u901a\u7684\u6811\u72b6\u6570\u7ec4\u5f88\u50cf\u3002\n\n\u5355\u6b21\u64cd\u4f5c\uff0c\u6811\u72b6\u6570\u7ec4\u7684\u590d\u6742\u5ea6\u662f $O(\\log n)$\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u662f $O(\\log n)$\u3002\u603b\u590d\u6742\u5ea6\u662f $O(m\\log^2 n)$\u3002\n\n\u6ce8\u610f\uff0c\u4e0d\u52a0\u4efb\u4f55\u7a7a\u95f4\u7684\u4f18\u5316\uff0c\u70b9\u7684\u4e2a\u6570\u4f1a\u5f88\u591a\u5bfc\u81f4\u7a7a\u95f4\u4e0d\u8db3\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5 \u201c \u56de\u6536 \u201d \u4e00\u4e9b\u4e0d\u7528\u7684\u70b9\uff0c\u5373\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u4e3a $0$\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u70b9\u5220\u9664\u5e76\u5c06\u7f16\u53f7\u5b58\u8d77\u6765\uff0c\u5f00\u65b0\u70b9\u7684\u65f6\u5019\u4f18\u5148\u4f7f\u7528\u8fd9\u4e9b\u7f16\u53f7\u5373\u53ef\u3002\n\n```cpp\nusing namespace std;\nconst int MAXN = 2e5 + 5;\n\nstruct Segment_Tree//\u6743\u503c\u7ebf\u6bb5\u6811\n{\n\tstatic const int MAXP = MAXN*200;\n\tint ls[MAXP],rs[MAXP],sum[MAXP],pcnt;\n\tvector<int> okNodes;\n\t#define lson(u) ls[u],l,mid\n\t#define rson(u) rs[u],mid+1,r\n\t\n\tinline void newNode(int &u)\n\t{\n\t\tif(okNodes.empty()){ u=++pcnt; return;}\n\t\tu = okNodes.back();\n\t\tokNodes.pop_back();\n\t}\n\tinline void delNode(int &u)\n\t{\n\t\tokNodes.push_back(u);\n\t\tu=0;\n\t}\n\t\n\tSegment_Tree(void){ init();}\n\tvoid init(void)\n\t{\n\t\tmemset(sum,0,sizeof(sum));\n\t\tmemset(ls,0,sizeof(ls));\n\t\tmemset(rs,0,sizeof(rs));\n\t\tpcnt=0;\n\t\tokNodes.clear();\n\t}\n\t\n\tinline void push_up(int u){ sum[u]=sum[ls[u]]+sum[rs[u]];}\n\t\n\tvoid update(int &u,int l,int r,int q,int k)\n\t{\n\t\tif(!u) newNode(u);\n\t\tsum[u]+=k;\n\t\tif(l<r)\n\t\t{\n\t\t\tint mid = (l+r)>>1;\n\t\t\tif(q<=mid) update(lson(u),q,k);\n\t\t\telse update(rson(u),q,k);\n\t\t}\n\t\tif(!sum[u]) delNode(u);\n\t}\n\t\n\tint query(int u,int l,int r,int ql,int qr)\n\t{\n\t\tif(!u) return 0;\n\t\tif(ql<=l && r<=qr) return sum[u];\n\t\tint mid = (l+r)>>1, res=0;\n\t\tif(ql<=mid) res+=query(lson(u),ql,qr);\n\t\tif(mid<qr) res+=query(rson(u),ql,qr);\n\t\treturn res;\n\t}\n};\n\nstruct BIT//\u6811\u72b6\u6570\u7ec4\n{\n\tint n;\n\tSegment_Tree segTree;\n\tint root[MAXN];//\u6bcf\u4e2a\u8282\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u6811\u6839\n\t#define lowbit(x) ((x)&-(x))\n\t\n\tvoid init(int n_=0){ n=n_; segTree.init();}\n    \n\t//\u4fee\u6539\u4e0e\u67e5\u8be2\u90fd\u548c\u666e\u901a\u7684\u6811\u72b6\u6570\u7ec4\u5f88\u50cf\n\tvoid update(int x,int q,int k)\n\t{\n\t\twhile(x<=n)\n\t\t\tsegTree.update(root[x],1,n,q,k),\n\t\t\tx+=lowbit(x);\n\t}\n\tint query(int x,int ql,int qr)\n\t{\n\t\tint res=0;\n\t\twhile(x)\n\t\t\tres += segTree.query(root[x],1,n,ql,qr),\n\t\t\tx^=lowbit(x);\n\t\treturn res;\n\t}\n\tint query(int l,int r,int ql,int qr){ return query(r,ql,qr)-query(l-1,ql,qr);}\n}solver;\n\nint a[MAXN],b[MAXN],pos[MAXN];\n\nint main(void)\n{\n\tint n,Q;\n\tscanf(\"%d%d\",&n,&Q);\n\tfor(int i=1; i<=n; ++i) scanf(\"%d\",&a[i]);\n\tfor(int i=1; i<=n; ++i) scanf(\"%d\",&b[i]);\n\t\n\tsolver.init(n);\n\tfor(int i=1; i<=n; ++i) pos[a[i]]=i;\n\tfor(int i=1; i<=n; ++i)\n\t\tb[i]=pos[b[i]],\n\t\tsolver.update(i,b[i],1);\n\t\n\twhile(Q--)\n\t{\n\t\tint oper,x,y;\n\t\tscanf(\"%d%d%d\",&oper,&x,&y);\n\t\tif(oper==1)\n\t\t{\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tprintf(\"%d\\n\",solver.query(l,r,x,y));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsolver.update(x,b[x],-1);\n\t\t\tsolver.update(y,b[y],-1);\n\t\t\tswap(b[x],b[y]);\n\t\t\tsolver.update(x,b[x],1);\n\t\t\tsolver.update(y,b[y],1);\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}\n```\n\n#### 4. \u4e00\u79cd\u795e\u5947\u7684\u89e3\u6cd5\n\n\u53d1\u73b0\u9759\u6001\u7684\u7ef4\u62a4\u597d\u50cf\u6bd4\u5e26\u4fee\u6539\u5bb9\u6613\u5f97\u591a\uff0c\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u8fd9\u6837\u7684\u601d\u8def\uff1a\u5c06\u6240\u6709\u4fee\u6539\u64cd\u4f5c\u4fdd\u5b58\u4e0b\u6765\uff0c\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5728\u521d\u59cb\u5e8f\u5217\u7684\u7b54\u6848\u7684\u57fa\u7840\u4e0a\uff0c\u904d\u5386\u4e00\u904d\u4e4b\u524d\u51fa\u73b0\u7684\u6240\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u6839\u636e\u8fd9\u4e9b\u4fee\u6539\u64cd\u4f5c\u66f4\u65b0\u6bcf\u4e2a\u7b54\u6848\u3002\n\n\u8fd9\u662f\u67e5\u8be2\u64cd\u4f5c\uff1a\n\n```cpp\nint ans = query(...);//ans\u5728\u8fd9\u91cc\u662f\u521d\u59cb\u5e8f\u5217\u7684\u7b54\u6848\uff0cquery\u4e2d\u7684\u5185\u5bb9\u6839\u636e\u7b97\u6cd5\u6709\u6240\u4e0d\u540c\nfor(int i=0; i<(int)upd.size(); ++i)//upd\u662f\u4e4b\u524d\u51fa\u73b0\u7684\u4fee\u6539\u64cd\u4f5c\n{\n    //\u6839\u636e\u4e4b\u524d\u4fee\u6539\u7684\u5185\u5bb9\u8c03\u6574ans\n    int xx=upd[i].x, yy=upd[i].y;\n    if(l<=xx && xx<=r && x<=b[xx] && b[xx]<=y) --ans;\n    if(l<=yy && yy<=r && x<=b[yy] && b[yy]<=y) --ans;\n    swap(b[xx],b[yy]);\n    if(l<=xx && xx<=r && x<=b[xx] && b[xx]<=y) ++ans;\n    if(l<=yy && yy<=r && x<=b[yy] && b[yy]<=y) ++ans;\n}\nfor(int i=upd.size()-1; i>=0; --i)\n    swap(b[upd[i].x],b[upd[i].y]);\nprintf(\"%d\\n\",ans);\n```\n\n\u8fd9\u662f\u4fee\u6539\u64cd\u4f5c\uff1a\n\n```cpp\nupd.push_back((Oper){x,y});\n```\n\n\u6211\u4eec\u8bbe\u521d\u59cb\u5316\u7684\u590d\u6742\u5ea6\u4e3a $A$\uff0c\u4e00\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a $B$\uff0c\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u662f $O(A + m^2 B)$\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u663e\u7136\u592a\u9ad8\u4e86\u3002\n\n\u5982\u4f55\u4f18\u5316\uff1f\u53d1\u73b0\u67e5\u8be2\u548c\u4fee\u6539\u7684\u64cd\u4f5c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u5dee\u592a\u5927\uff0c**\u4e8e\u662f\u8003\u8651\u5982\u4f55\u5e73\u8861\u67e5\u8be2\u548c\u4fee\u6539\u7684\u590d\u6742\u5ea6**\u3002\n\n**\u591a\u79cd\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u5dee\u592a\u5927\uff0c\u53ef\u4ee5\u8003\u8651\u5982\u4f55\u5e73\u8861\u8fd9\u4e9b\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u3002**\n\n\u60f3\u5230\uff0c\u53ef\u4ee5\u5728\u79ef\u7d2f\u5230\u4e00\u5b9a\u91cf\u7684\u4fee\u6539\u64cd\u4f5c\u540e\uff0c\u76f4\u63a5\u91cd\u65b0\u521d\u59cb\u5316\u4e00\u904d\uff0c\u5373\uff1a\n\n```cpp\nif((int)upd.size()>=k)//\u4fee\u6539\u64cd\u4f5c\u5230\u8fbe\u4e00\u5b9a\u7684\u6570\u91cf\n{\n    for(int i=0; i<(int)upd.size(); ++i)\n        swap(b[upd[i].x],b[upd[i].y]);//\u4fee\u6539\u5e8f\u5217\n    init(...);//\u91cd\u65b0\u521d\u59cb\u5316\uff0c\u6839\u636e\u7b97\u6cd5\u6709\u6240\u4e0d\u540c\n    upd.clear();\n}\n```\n\n\u90a3\u4e48\u8fd9\u4e2a $k$ \u53d6\u591a\u5c11\u5462\uff1f\u8fd9\u79cd\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u662f $O(\\frac{m}{k}\\cdot A + m(B+k) = O(m(\\frac{A}{k}+k)+mB)$\uff0c\u5373\uff0c\u8981\u4f7f\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5c0f\uff0c\u5c31\u8981\u4f7f $\\frac{A}{k}+k$ \u6700\u5c0f\uff0c\u8ba1\u7b97\u5f97\u51fa\uff0c$k=\\sqrt A$ \u65f6\uff0c\u590d\u6742\u5ea6\u6700\u5c0f\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u7ebf\u6bb5\u6811\u7684\u89e3\u6cd5\u3002\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u5b58\u7684\u662f\u8be5\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u6392\u5e8f\u540e\u7684\u5e8f\u5217\uff0c\u67e5\u8be2\u8fd9\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u5373\u53ef\u3002\u521d\u59cb\u5316\u590d\u6742\u5ea6\u662f $O(n\\log n)$\uff0c\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6\u662f $O(\\log^2 n)$\uff0c\u9009\u53d6 $k=\\sqrt{n\\log_2 n}$\uff0c\u590d\u6742\u5ea6\u662f $O(m(\\sqrt{n\\log n}+\\log^2 n))$\u3002\n\n```cpp\nusing namespace std;\nconst int MAXN = 2e5 + 5;\n\nint n;\nint a[MAXN],pos[MAXN],b[MAXN];\n\nvector<int> tree[MAXN<<2];\n#define ls(u) ((u)<<1)\n#define rs(u) ((u)<<1|1)\n#define lson(u) ls(u),l,mid\n#define rson(u) rs(u),mid+1,r\n\ninline void push_up(int u)\n{\n\tconst vector<int> &v1=tree[ls(u)], &v2=tree[rs(u)];\n\t\n\tint i=0,j=0;\n\twhile(i<(int)v1.size() && j<(int)v2.size())\n\t{\n\t\tif(v1[i]<=v2[j]) tree[u].push_back(v1[i++]);\n\t\telse tree[u].push_back(v2[j++]);\n\t}\n\twhile(i<(int)v1.size()) tree[u].push_back(v1[i++]);\n\twhile(j<(int)v2.size()) tree[u].push_back(v2[j++]);\n}\n\nvoid build(int u,int l,int r)\n{\n\ttree[u].clear();\n\tif(l==r){ tree[u].push_back(b[l]); return;}\n\tint mid = (l+r)>>1;\n\tbuild(lson(u)); build(rson(u));\n\tpush_up(u);\n}\n\nint query(int u,int l,int r,int ql,int qr,int k)\n{\n\tif(ql<=l && r<=qr)\n\t\treturn upper_bound(tree[u].begin(),tree[u].end(),k) - tree[u].begin();\n\tint mid=(l+r)>>1, res=0;\n\tif(ql<=mid) res += query(lson(u),ql,qr,k);\n\tif(mid<qr) res += query(rson(u),ql,qr,k);\n\treturn res;\n}\n\nstruct Oper\n{\n\tint x,y;\n};\nvector<Oper> upd; \n\nint main(void)\n{\n\tint n,Q;\n\tscanf(\"%d%d\",&n,&Q);\n\tfor(int i=1; i<=n; ++i) scanf(\"%d\",&a[i]);\n\tfor(int i=1; i<=n; ++i) scanf(\"%d\",&b[i]);\n\t\n\tfor(int i=1; i<=n; ++i) pos[a[i]]=i;\n\tfor(int i=1; i<=n; ++i) b[i] = pos[b[i]];\n\tbuild(1,1,n);\n\t\n\tint sqn = sqrt(n*(log(n)/log(2)));\n\twhile(Q--)\n\t{\n\t\tint oper,x,y;\n\t\tscanf(\"%d%d%d\",&oper,&x,&y);\n\t\tif(oper==1)\n\t\t{\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tint ans = query(1,1,n,l,r,y)-query(1,1,n,l,r,x-1);\n\t\t\tfor(int i=0; i<(int)upd.size(); ++i)\n\t\t\t{\n\t\t\t\tint xx=upd[i].x, yy=upd[i].y;\n\t\t\t\tif(l<=xx && xx<=r && x<=b[xx] && b[xx]<=y) --ans;\n\t\t\t\tif(l<=yy && yy<=r && x<=b[yy] && b[yy]<=y) --ans;\n\t\t\t\tswap(b[xx],b[yy]);\n\t\t\t\tif(l<=xx && xx<=r && x<=b[xx] && b[xx]<=y) ++ans;\n\t\t\t\tif(l<=yy && yy<=r && x<=b[yy] && b[yy]<=y) ++ans;\n\t\t\t}\n\t\t\tfor(int i=upd.size()-1; i>=0; --i)\n\t\t\t\tswap(b[upd[i].x],b[upd[i].y]);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tupd.push_back((Oper){x,y});\n\t\t\tif((int)upd.size()>=sqn)\n\t\t\t{\n\t\t\t\tfor(int i=0; i<(int)upd.size(); ++i)\n\t\t\t\t\tswap(b[upd[i].x],b[upd[i].y]);\n\t\t\t\tbuild(1,1,n);\n\t\t\t\tupd.clear();\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u7528\u540c\u6837\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f18\u5316\u5206\u5757\u3002\u521d\u59cb\u5316\u590d\u6742\u5ea6\u662f $O(n\\log n)$\uff0c\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6\u662f $O(\\sqrt n\\log n)$ \uff0c\u9009\u53d6 $k=\\sqrt{n\\log_2 n}$\uff0c\u590d\u6742\u5ea6\u662f $O(m(\\sqrt{n\\log n}+\\sqrt n\\log n))$\uff0c\u5728\u6bd4\u8d5b\u4e2d\u662f\u4e00\u79cd\u6bd4\u8f83\u4fdd\u9669\u7684\u505a\u6cd5\u3002\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 2e5 + 5;\nconst int MAXM = 2e5 + 5;\nconst int MAXB = 1e3 + 5;\n\ninline void chk_max(int &a,int b){ if(a<b) a=b;}\n\nint n,a[MAXN],b[MAXN];\n\nint lB[MAXB],rB[MAXB],bId[MAXN],tot;\nint val[MAXN];\n\nvoid calcAll(void)\n{\n\tstatic int cur[MAXB];\n\tstatic int tmp[MAXN];\n\t\n\tfor(int i=1; i<=tot; ++i) cur[i]=lB[i];\n\tfor(int i=1; i<=n; ++i) tmp[b[i]]=i;\n\t\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tint now = bId[tmp[i]];\n\t\tval[cur[now]] = i;\n\t\t++cur[now];\n\t}\n}\n\nvoid init(void)\n{\n\ttot=sqrt(n);\n\tfor(int i=1; i<=tot; ++i)\n\t\tlB[i]=(i-1)*tot+1,\n\t\trB[i]=lB[i]+tot-1;\n\tchk_max(rB[tot],n);\n\tfor(int i=1; i<=tot; ++i)\n\t\tfor(int j=lB[i]; j<=rB[i]; ++j)\n\t\t\tbId[j]=i;\n\tcalcAll();\n}\n\nint query(int l,int r,int x,int y)\n{\n\tint res=0;\n\tif(bId[l]==bId[r])\n\t{\n\t\tfor(int i=l; i<=r; ++i)\n\t\t\tif(x<=b[i] && b[i]<=y) ++res;\n\t\treturn res;\n\t}\n\t\n\tint nowl=bId[l];\n\tfor(int i=l; i<=rB[nowl]; ++i)\n\t\tif(x<=b[i] && b[i]<=y) ++res;\n\tint nowr=bId[r];\n\tfor(int i=lB[nowr]; i<=r; ++i)\n\t\tif(x<=b[i] && b[i]<=y) ++res;\n\t\n\tfor(int i=nowl+1; i<nowr; ++i)\n\t\tres += upper_bound(val+lB[i],val+rB[i]+1,y) - upper_bound(val+lB[i],val+rB[i]+1,x-1);\n\treturn res;\n}\n\nstruct Oper\n{\n\tint x,y;\n};\nvector<Oper> upd; \n\nint main(void)\n{\n\tint Q;\n\tscanf(\"%d%d\",&n,&Q);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\ta[x]=i;\n\t}\n\tfor(int i=1; i<=n; ++i)\n\t\tscanf(\"%d\",&b[i]),\n\t\tb[i]=a[b[i]];\n\tinit();\n\t\n\tint sqn = sqrt(n*(log(n)/log(2)));\n\twhile(Q--)\n\t{\n\t\tint oper,x,y;\n\t\tscanf(\"%d%d%d\",&oper,&x,&y);\n\t\tif(oper==1)\n\t\t{\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tint ans = query(l,r,x,y);\n\t\t\tfor(int i=0; i<(int)upd.size(); ++i)\n\t\t\t{\n\t\t\t\tint xx=upd[i].x, yy=upd[i].y;\n\t\t\t\tif(l<=xx && xx<=r && x<=b[xx] && b[xx]<=y) --ans;\n\t\t\t\tif(l<=yy && yy<=r && x<=b[yy] && b[yy]<=y) --ans;\n\t\t\t\tswap(b[xx],b[yy]);\n\t\t\t\tif(l<=xx && xx<=r && x<=b[xx] && b[xx]<=y) ++ans;\n\t\t\t\tif(l<=yy && yy<=r && x<=b[yy] && b[yy]<=y) ++ans;\n\t\t\t}\n\t\t\tfor(int i=upd.size()-1; i>=0; --i)\n\t\t\t\tswap(b[upd[i].x],b[upd[i].y]);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tupd.push_back((Oper){x,y});\n\t\t\tif((int)upd.size()>=sqn)\n\t\t\t{\n\t\t\t\tfor(int i=0; i<(int)upd.size(); ++i)\n\t\t\t\t\tswap(b[upd[i].x],b[upd[i].y]);\n\t\t\t\tcalcAll();\n\t\t\t\tupd.clear();\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u5e94\u7528\u5728\u4e3b\u5e2d\u6811\u4e0a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8d58\u8ff0\u4e86\u3002\n\n### \u5dee\u8ddd\n\n\u5b66\u4e60\u5230\u7684\u70b9\uff1a\n\n1. \u5c06\u6570\u636e\u7ed3\u6784\u5c01\u88c5\u53ef\u4ee5\u4f7f\u601d\u8def\u66f4\u6e05\u6670\uff0c\u6709\u6548\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002\n2. \u5b66\u4f1a\u7528\u4e0d\u540c\u601d\u8def\u601d\u8003\u540c\u4e00\u9053\u9898\uff0c\u5c06\u9898\u76ee\u5b8c\u5168\u641e\u61c2\n3. \u53d1\u73b0\u4e00\u79cd\u590d\u6742\u5ea6\u4e0d\u53ef\u884c\u7684\u505a\u6cd5\uff0c\u4e0d\u8981\u6025\u4e8e\u653e\u5f03\u8fd9\u79cd\u601d\u8def\uff0c\u800c\u8981\u4ed4\u7ec6\u8bc1\u660e\u8be5\u7b97\u6cd5\u662f\u4e0d\u662f\u771f\u7684\u4e0d\u53ef\u884c\uff0c\u6e05\u6670\u5730\u627e\u51fa\u8be5\u7b97\u6cd5\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u884c\uff0c\u5e76\u5c1d\u8bd5\u6539\u8fdb\u3002",
        "postTime": 1581823588,
        "uid": 73687,
        "name": "He_Ren",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "~~\u5927\u5bb6\u597d\uff0c \u6211\u975e\u5e38\u559c\u6b22\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c \u4e8e\u662f\u5c31\u7528\u5206\u5757A\u4e86\u6b64\u9898~~\n\n\n\u5206\u5757\u9898\uff0c\u8003\u8651\u524d\u7f00\u548c $b_i$ \u8868\u793a bitset \u5373 $0$ ~ $i\n$ \u51fa\u73b0\u8fc7\u7684\u6570\u5b57\uff0c\u7136\u540e\u8003\u8651\u76f4\u63a5\u66b4\u529b\u590d\u5236\u5757\u7136\u540e\u524d\u7f00\u548c\uff0c\u4fee\u6539\u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5220\u9664\u5b8c\u4e86 swap \u4e00\u4e0b\uff0c\u518d\u5f04\u56de\u53bb\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(q \\sqrt n + q \\frac{n}{w})$\n\n```cpp\n// by Isaunoya\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#include <cstdio>\n#include <bitset>\n\nusing namespace std;\n\n#define rep(i, x, y) for (register int i = (x); i <= (y); ++i)\n#define Rep(i, x, y) for (register int i = (x); i >= (y); --i)\n//#define int long long\n\nconst int _ = 1 << 21;\nstruct I {\n\tchar fin[_], *p1 = fin, *p2 = fin;\n\tinline char gc() {\n\t\treturn (p1 == p2) && (p2 = (p1 = fin) + fread(fin, 1, _, stdin), p1 == p2) ? EOF : *p1++;\n\t}\n\tinline I& operator>>(int& x) {\n\t\tbool sign = 1;\n\t\tchar c = 0;\n\t\twhile (c < 48) ((c = gc()) == 45) && (sign = 0);\n\t\tx = (c & 15);\n\t\twhile ((c = gc()) > 47) x = (x << 1) + (x << 3) + (c & 15);\n\t\tx = sign ? x : -x;\n\t\treturn *this;\n\t}\n\tinline I& operator>>(double& x) {\n\t\tbool sign = 1;\n\t\tchar c = 0;\n\t\twhile (c < 48) ((c = gc()) == 45) && (sign = 0);\n\t\tx = (c - 48);\n\t\twhile ((c = gc()) > 47) x = x * 10 + (c - 48);\n\t\tif (c == '.') {\n\t\t\tdouble d = 1.0;\n\t\t\twhile ((c = gc()) > 47) d = d * 0.1, x = x + (d * (c - 48));\n\t\t}\n\t\tx = sign ? x : -x;\n\t\treturn *this;\n\t}\n\tinline I& operator>>(char& x) {\n\t\tdo\n\t\t\tx = gc();\n\t\twhile (isspace(x));\n\t\treturn *this;\n\t}\n\tinline I& operator>>(string& s) {\n\t\ts = \"\";\n\t\tchar c = gc();\n\t\twhile (isspace(c)) c = gc();\n\t\twhile (!isspace(c) && c != EOF) s += c, c = gc();\n\t\treturn *this;\n\t}\n} in;\nstruct O {\n\tchar st[100], fout[_];\n\tsigned stk = 0, top = 0;\n\tinline void flush() {\n\t\tfwrite(fout, 1, top, stdout), fflush(stdout), top = 0;\n\t}\n\tinline O& operator<<(int x) {\n\t\tif (top > (1 << 20)) flush();\n\t\tif (x < 0) fout[top++] = 45, x = -x;\n\t\tdo\n\t\t\tst[++stk] = x % 10 ^ 48, x /= 10;\n\t\twhile (x);\n\t\twhile (stk) fout[top++] = st[stk--];\n\t\treturn *this;\n\t}\n\tinline O& operator<<(char x) {\n\t\tfout[top++] = x;\n\t\treturn *this;\n\t}\n\tinline O& operator<<(string s) {\n\t\tif (top > (1 << 20)) flush();\n\t\tfor (char x : s) fout[top++] = x;\n\t\treturn *this;\n\t}\n} out;\n#define pb emplace_back\n#define fir first\n#define sec second\n\ntemplate < class T > inline void cmax(T & x , const T & y) {\n\t(x < y) && (x = y) ;\n}\ntemplate < class T > inline void cmin(T & x , const T & y) {\n\t(x > y) && (x = y) ;\n}\n\nint n , m ;\nconst int maxn = 2e5 + 200 ;\ntemplate < int bl > \nstruct BLOCK {\n\tbitset < maxn > b[maxn / bl] ;\n\tbitset < maxn > temp ;\n\tint per[maxn] ;\n\tinline void ins(int x , int v) {\n\t\tper[x] = v ;\n\t\tfor(register int i = x ; i <= n ; i += bl)\n\t\t\tb[i / bl].set(v) ;\n\t}\n\tinline void del(int x , int v)  {\n\t\tfor(register int i = x ; i <= n ; i += bl)\n\t\t\tb[i / bl].reset(v) ;\n\t}\n\tinline bitset < maxn > qry(int x) {\n\t\ttemp = x / bl ? b[x / bl - 1] : 0 ;\n\t\trep(i , max(x / bl * bl , 1) , x) \n\t\t\ttemp.set(per[i]) ;\n\t\treturn temp ;\n\t}\n\tinline bitset < maxn > qry(int l , int r) {\n\t\treturn qry(r) ^ qry(l - 1) ;\n\t}\n};\nint a[maxn] , b[maxn] ;\nBLOCK < 256 > A ;\nBLOCK < 512 > B ;\nsigned main() {\n#ifdef _WIN64\n\tfreopen(\"testdata.in\" , \"r\" , stdin) ;\n#endif\n\tin >> n >> m ;\n\trep(i , 1 , n) in >> a[i] , A.ins(i , a[i]) ;\n\trep(i , 1 , n) in >> b[i] , B.ins(i , b[i]) ;\n\twhile(m --) {\n\t\tint opt ;\n\t\tin >> opt ;\n\t\tif(opt == 1) {\n\t\t\tint l , r , a , b ;\n\t\t\tin >> l >> r >> a >> b ;\n\t\t\tint ans = (A.qry(l , r) & B.qry(a , b)).count() ;\n\t\t\tout << ans << '\\n' ;\n\t\t}\n\t\telse {\n\t\t\tint x , y ;\n\t\t\tin >> x >> y ;\n\t\t\tB.del(x , b[x]) ; B.del(y , b[y]) ;\n\t\t\tswap(b[x] , b[y]) ;\n\t\t\tB.ins(x , b[x]) ; B.ins(y , b[y]) ;\n\t\t}\n\t}\n\treturn out.flush(), 0;\n}\n\n```",
        "postTime": 1578892499,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "\u6211\u6c38\u8fdc\u559c\u6b22\u6811\u5957\u6811\u3002\n\n\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u6ce8\u610f\u5230$a_i$\u548c$b_i$\u90fd\u662f\u6392\u5217\uff0c\u53ef\u4ee5\u8bbe`p[a[i]]=i`\uff0c\u8fd9\u6837\u7684\u6620\u5c04\u4e00\u5b9a\u662f\u4e00\u4e00\u6620\u5c04\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u96c6\u5408$\\{a[l_a],a[l_a+1],\\cdots,a[r_a]\\}$\u4e0e\u96c6\u5408$\\{b[l_b],b[l_b+1],\\cdots,b[r_b]\\}$\u7684\u4ea4\u96c6\u5927\u5c0f\u4e00\u5b9a\u7b49\u4e8e\u96c6\u5408$\\{p[a[l_a]],p[a[l_a+1]],\\cdots,p[a[r_a]]\\}$\uff08\u4e5f\u5c31\u662f\u96c6\u5408$\\{l_a,l_a+1,\\cdots,r_a\\}$\uff09\u4e0e\u96c6\u5408$\\{p[b[l_b]],p[b[l_b+1]],\\cdots,p[b[r_b]]\\}$\u7684\u4ea4\u96c6\u5927\u5c0f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u5e8f\u5217$p[b[i]]$\uff0c\u6bcf\u4e2a\u8be2\u95ee\u5c31\u662f\u5728\u67e5\u8be2\u8fd9\u4e2a\u5e8f\u5217\u7684\u7b2c$l_b$\u4e2a\u5143\u7d20\u5230\u7b2c$r_b$\u4e2a\u5143\u7d20\u4e2d\uff0c\u503c\u57df\u5728$[l_a,r_a]$\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a\uff0c\u4e5f\u5c31\u662f\u533a\u95f4\u4e0a\u7684\u503c\u57df\u6570\u70b9\u3002\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u503c\u57df\u5373\u53ef\u3002\n\n\u4fee\u6539\u4e5f\u5c31\u6ca1\u6709\u4efb\u4f55\u96be\u5ea6\u4e86\u3002\n\n\u5982\u679c\u4e0d\u5e26\u4fee\u6539\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u4e3b\u5e2d\u6811\u7684\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u66f4\u52a0\u4f18\u79c0\u3002\n\n\u5c0f\u5fc3\u5361\u7a7a\u95f4\uff0c\u6211\u7528\u4e86\u5783\u573e\u56de\u6536\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n#include <vector>\n\ntemplate <typename T> inline void read(T& x) {\n    int f = 0, c = getchar(); x = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    if (f) x = -x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& x, Args&... args) {\n    read(x); read(args...); \n}\ntemplate <typename T> void write(T x) {\n    if (x < 0) x = -x, putchar('-');\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T> void writeln(T x) { write(x); puts(\"\"); }\ntemplate <typename T> inline bool chkmin(T& x, const T& y) { return y < x ? (x = y, true) : false; }\ntemplate <typename T> inline bool chkmax(T& x, const T& y) { return x < y ? (x = y, true) : false; }\n\nconst int maxn = 2e5 + 7;\nint lc[maxn << 7], rc[maxn << 7], sum[maxn << 7], tot;\nint root[maxn];\nint b[maxn], p[maxn];\nint n, m;\nstd::vector<int> can;\n\ninline int newNode() {\n    if (can.empty()) return ++tot;\n    else {\n        int x = can.back();\n        can.pop_back();\n        return x;\n    }\n}\ninline void deleteNode(int x) {\n    lc[x] = rc[x] = sum[x] = 0;\n    can.push_back(x);\n}\nvoid modify(int &o, int l, int r, int pos, int d) {\n    if (!o) o = newNode();\n    sum[o] += d;\n    if (l < r) {\n        int mid = (l + r) >> 1;\n        if (pos <= mid) modify(lc[o], l, mid, pos, d);\n        else modify(rc[o], mid + 1, r, pos, d);\n    }\n    if (!sum[o]) deleteNode(o), o = 0;\n}\nint query(int o, int lb, int rb, int l, int r) {\n    if (!o || l > rb || r < lb) return 0;\n    if (l <= lb && r >= rb) return sum[o];\n    int mid = (lb + rb) >> 1;\n    return query(lc[o], lb, mid, l, r) + query(rc[o], mid + 1, rb, l, r);\n}\ninline void modify(int x, int v, int d) {\n    for (; x <= n; x += x & -x) modify(root[x], 1, n, v, d);\n}\ninline int query(int l, int r, int x, int y) {\n    int ans = 0;\n    for (; r; r -= r & -r) ans += query(root[r], 1, n, x, y);\n    for (--l; l; l -= l & -l) ans -= query(root[l], 1, n, x, y);\n    return ans;\n}\n\nint main() {\n    read(n, m);\n    for (int i = 1, x; i <= n; ++i) read(x), p[x] = i;\n    for (int i = 1; i <= n; ++i) read(b[i]), modify(i, p[b[i]], 1);\n    while (m--) {\n        int q; read(q);\n        if (q == 1) {\n            int l1, r1, l2, r2;\n            read(l1, r1, l2, r2);\n            writeln(query(l2, r2, l1, r1));\n        } else {\n            int x, y; read(x, y);\n            modify(x, p[b[x]], -1);\n            modify(y, p[b[y]], -1);\n            std::swap(b[x], b[y]);\n            modify(x, p[b[x]], 1);\n            modify(y, p[b[y]], 1);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1549958392,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "\u7528 $ pa[i] $ \u8868\u793a $ i $ \u8fd9\u4e2a\u6570\u5728\u7b2c\u4e00\u4e2a\u6392\u5217\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c$ pb[i] $ \u8868\u793a $ i $ \u8fd9\u4e2a\u6570\u5728\u7b2c\u4e8c\u4e2a\u6392\u5217\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u5047\u8bbe\u67e5\u8be2\u533a\u95f4\u4e3a $ l1\uff0cr1\uff0cl2\uff0cr2 $\n\n\u5982\u679c $ i $ \u8fd9\u4e2a\u70b9\u5bf9\u7b54\u6848\u9020\u6210\u4e86\u8d21\u732e\uff0c\u90a3\u4e48 $ l1 \\le pa[i] \\le r1 $ && $ l2 \\le pb[i] \\le r2 $\n\n\u5bb9\u6613\u53d1\u73b0\u95ee\u9898\u53d8\u6210\u4e86\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c$ cdq $ \u5206\u6cbb\u79bb\u7ebf\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\n\n```cpp\n#pragma GCC target(\"avx\")\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define F(i,j,n) for(int i=j;i<=n;i++)\n#define D(i,j,n) for(int i=j;i>=n;i--)\n#define ll long long\n#define maxn 1000005\n#define maxm 1000005\ntemplate <typename _T>\ninline void read(_T &f) {\n    f = 0; _T fu = 1; char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') fu = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { f = (f << 3) + (f << 1) + (c & 15); c = getchar(); }\n    f *= fu;\n}\n\ntemplate <typename T>\nvoid print(T x) {\n    if(x < 0) putchar('-'), x = -x;\n    if(x < 10) putchar(x + 48);\n    else print(x / 10), putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid print(T x, char t) {\n    print(x); putchar(t);\n}\n\nusing namespace std;\nint n,cnt,tot;\nint ans[maxn],c[maxn];\nstruct data{int flag,x,y,v,pos,id;}a[maxm],b[maxm];\n\ninline bool cmp(data a,data b)\n{\n    if (a.x!=b.x) return a.x<b.x;\n    return a.pos<b.pos;\n}\ninline void add(int x,int y)\n{\n    for(;x<=n;x+=(x&(-x))) c[x]+=y;\n}\ninline int query(int x)\n{\n    int ret=0;\n    for(;x;x-=(x&(-x))) ret+=c[x];\n    return ret;\n}\ninline void solve(int l,int r)\n{\n    if (l>=r) return;\n    int mid=(l+r)>>1,l1=l,l2=mid+1;\n    F(i,l,r)\n    {\n        if (a[i].flag==1&&a[i].pos<=mid) add(a[i].y,a[i].v);\n        if (a[i].flag==2&&a[i].pos>mid) ans[a[i].id]+=a[i].v*query(a[i].y);\n    }\n    F(i,l,r) if (a[i].flag==1&&a[i].pos<=mid) add(a[i].y,-a[i].v);\n    F(i,l,r)\n    {\n        if (a[i].pos<=mid) b[l1++]=a[i];\n        else b[l2++]=a[i];\n    }\n    F(i,l,r) a[i]=b[i];\n    solve(l,mid);solve(mid+1,r);\n}\nconst int N = 1e6 + 5;\nint A[N], B[N], pa[N], pb[N], m;\n\nint main()\n{\n    read(n); read(m);\n    for(register int i = 1; i <= n; i++) {\n    \tread(A[i]); pa[A[i]] = i; \n    }\n    for(register int i = 1; i <= n; i++) {\n    \tread(B[i]); pb[B[i]] = i;\n    }\n    for(register int i = 1; i <= n; i++) {\n        cnt++;a[cnt]=(data){1,pa[i],pb[i],1,cnt,0};\n    } \n    for(register int i = 1; i <= m; i++) {\n    \tint opt; read(opt);\n    \tif(opt == 1) {\n    \t\tint aa, b, c, d;\n    \t\tread(aa); read(c); read(b); read(d);\n    \t\tint x1=aa-1,y1=b-1,x2=c,y2=d;\n            tot++;\n            cnt++;a[cnt]=(data){2,x1,y1,1,cnt,tot};\n            cnt++;a[cnt]=(data){2,x2,y2,1,cnt,tot};\n            cnt++;a[cnt]=(data){2,x1,y2,-1,cnt,tot};\n            cnt++;a[cnt]=(data){2,x2,y1,-1,cnt,tot};\n    \t}\n    \tif(opt == 2) {\n    \t\tint aa, b;\n    \t\tread(aa); read(b);\n    \t\tif(aa == b) continue;\n//    \t\tdel(root, Point(pa[B[a]], pb[B[a]], 1), 0);\n//    \t\tdel(root, Point(pa[B[b]], pb[B[b]], 1), 0);\n    \t\tcnt++;a[cnt]=(data){1,pa[B[aa]],pb[B[aa]],-1,cnt,0};\n    \t\tcnt++;a[cnt]=(data){1,pa[B[b]],pb[B[b]],-1,cnt,0};\n    \t\tswap(B[aa], B[b]); pb[B[aa]] = aa; pb[B[b]] = b;\n    \t\tcnt++;a[cnt]=(data){1,pa[B[aa]],pb[B[aa]],1,cnt,0};\n    \t\tcnt++;a[cnt]=(data){1,pa[B[b]],pb[B[b]],1,cnt,0};\n    \t}\n    }\n    sort(a+1,a+cnt+1,cmp);\n    solve(1,cnt);\n    F(i,1,tot) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1545048318,
        "uid": 51815,
        "name": "LJC00118",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "~~\u8fd9\u4e2a\u65f6\u9650\u7ed9\u7684\u2026\u2026\uff0c\u53ea\u8981\u4e0d\u4e71\u641e\u90fd\u80fd\u8fc7\u5427\u2026\u2026~~\n\n- \u9898\u610f\n\n\u7ed9\u5b9a\u6392\u5217 $a,b$\uff0c\u5b9e\u73b0\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n1. ```1 l r L R```\uff0c\u67e5\u8be2\u5373\u51fa\u73b0\u5728 $a_{[l,r]}$ \u4e2d\uff0c\u53c8\u51fa\u73b0\u5728 $b_{[L,R]}$ \u4e2d\u7684\u6570\u3002\n2. ```2 x y```\uff0c\u4ea4\u6362 $b_x$ \u548c $b_y$\u3002\n\n- \u5206\u6790\n\n\u9996\u5148\uff0c\u5982\u679c\u5c06\u6570 $i$ \u5728 $a$ \u4e2d\u7684\u4e0b\u6807\u8bbe\u6210 $x_i$\uff0c\u5c06\u5176\u5728 $b$ \u4e2d\u7684\u4e0b\u6807\u8bbe\u6210 $y_i$\uff0c\u5219\u8fd9\u9898\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5e26\u4fee\u4e8c\u7ef4\u6570\u70b9\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u505a\u6cd5\uff1a\n\n1. \u5206\u5757\u5957\u6811\u72b6\u6570\u7ec4\n\n\u5bf9 $y$ \u8f74\u8fdb\u884c\u5206\u5757\uff0c\u5bf9\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u53ef\u4ee5\u505a\u5230 $O(\\sqrt n \\log n)$ \u67e5\u8be2\uff0c$O(\\log n)$ \u4fee\u6539\uff0c\u4f1a TLE\uff0c\n\u600e\u4e48\u529e\u5462\uff1f\n\n\u8003\u8651\u53ef\u4ee5\u5728\u5206\u5757\u6570\u7ec4\u4e0a\u4e5f\u5957\u4e0a\u4e00\u79cd\u6811\u72b6\u6570\u7ec4\u7c7b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8bbe\u7b2c $i$ \u5757\u4e0a\u7684\u6811\u72b6\u6570\u7ec4\u8868\u793a $(i-\\operatorname{lowbit}(i),i]$ \u5757\u7684\u6811\u72b6\u6570\u7ec4\u641e\u8d77\u6765\u3002\n\n\u8fd9\u6837\u5b50\u53ef\u4ee5 $O(n \\log n \\log(\\sqrt n))$ \u9884\u5904\u7406\uff0c$O(\\sqrt n + \\log n \\log(\\sqrt n))$ \u67e5\u8be2\uff0c$O(\\log n \\log(\\sqrt n))$ \u4fee\u6539\uff0c\u53ef\u8fc7\uff0c\u800c\u4e14\u5e38\u6570\u5f88\u5c0f\uff0c\u76f4\u63a5\u6700\u4f18\u89e3\u3002\n\n2. \u5206\u5757\u52a0\u503c\u57df\u5206\u5757\n\n\u8fd9\u662f\u4e00\u79cd\u6781\u5176\u66b4\u529b\u7684\u7b97\u6cd5\uff0c\u6211\u60f3\u5feb\u901f\u67e5\u8be2 $y$ \u5728\u7b2c $LL$ \u5230\u7b2c $RR$ \u5757\uff0c\u4e14 $x$ \u5728 $l$ \u5230 $r$ \u4e2d\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u90a3\u9996\u5148\u60f3\u5230\u5dee\u5206\uff0c\u8ba9\u540e\u60f3\u5230\u503c\u57df\u5206\u5757\uff0c\u503c\u57df $[1,10^5]$\uff0c\u663e\u7136\u53ef\u8fc7\u3002\n\n\u5177\u4f53\u7684\uff0c\u53ef\u4ee5\u8bbe $b_{i,j}$ \u8868\u793a\u524d $i$ \u5757\uff0c\u7b2c $j$ \u503c\u57df\u5757\u4e2d\u7684\u70b9\u6570\uff1b$c_{i,j}$ \u8868\u793a\u524d $i$ \u5757\uff0c$x = j$ \u7684\u70b9\u6570\u3002\n\n\u90a3\u4e48\u67e5\u8be2\u7684\u65f6\u5019\u5bf9\u8fb9\u89d2\u5757\u76f4\u63a5\u66b4\u529b\uff0c\u5bf9\u8fb9\u89d2\u503c\u57df\u5757\uff0c\u7528 $c$ \u67e5\u8be2\uff0c\u6574\u5757\u7528 $b$ \u67e5\u8be2\u3002\u4fee\u6539\u7684\u65f6\u5019\u8003\u8651\u5c06 $r$ \u79fb\u5230 $l$\uff0c$[l,r - 1]$ \u90fd\u4f1a\u589e\u52a0\u8d21\u732e\uff0c\u5c06 $r$ \u79fb\u5230 $l$\uff0c$[l,r-1]$ \u90fd\u4f1a\u51cf\u5c11\u8d21\u732e\uff0c\u66b4\u529b\u5373\u53ef\u3002\n\n\n\u9884\u5904\u7406 $O(n\\sqrt n)$\uff0c\u67e5\u8be2 $O(\\sqrt n)$\uff0c\u5e38\u6570\u5de8\u5927\uff0c\u4fee\u6539 $O(\\sqrt n)$\uff0c\u5e38\u6570\u8f83\u5c0f\u3002\n\n- code\n\n\u5206\u5757\u52a0\u6811\u72b6\u6570\u7ec4\uff1a\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\nusing namespace std;\n\nnamespace IO{\n\tchar ibuf[(1 << 20) + 1], *iS, *iT;\n\t#if ONLINE_JUDGE\n\t#define gh() (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin), (iS == iT ? EOF : *iS++) : *iS++)\n\t#else\n\t#define gh() getchar()\n\t#endif\n\t#define reg register\n\tinline long long read () {\n\t\treg char ch = gh();\n\t\treg long long x = 0;\n\t\treg char t = 0;\n\t\twhile (ch < '0' || ch > '9') t |= ch == '-', ch = gh();\n\t\twhile (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gh();\n\t\treturn t ? -x : x;\n\t}\n\tinline void write(long long x) {\n\t\tif (x < 0) {\n\t\t\tx = ~(x - 1);\n\t\t\tputchar('-');\n\t\t}\n\t\tif (x > 9)\n\t\t\twrite(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\n\nusing IO::read;\nusing IO::write;\n\nconst int maxn(2e5 + 500), maxk(450);\nint n, m, sqn, len, a[maxn], b[maxn], X[maxn], id[maxn];\n\nstruct BIT {\n\tint tr[maxn];\n#define lowbit(x) (x & (-x))\n\tinline void mdy (int x, int v) {\n\t\tfor (; x <= n; x += lowbit(x)) tr[x] += v;\n\t}\n\tinline int query (int x) {\n\t\tint res = 0;\n\t\tfor (; x; x -= lowbit(x)) res += tr[x];\n\t\treturn res;\n\t}\n\tinline int qry (int l, int r) {\n\t\treturn query(r) - query(l - 1);\n\t}\n} tr[maxk];\n\ninline int qry (int x, int l, int r) {\n\tint res = 0;\n\tfor (; x; x -= lowbit(x)) res += tr[x].qry(l, r);\n\treturn res;\n}\n\nint main () {\n\tn = read(), m = read(), sqn = sqrt(n), len = (n - 1) / sqn + 1;\n\tfor (int i = 1; i <= n; i++) a[i] = read(), X[a[i]] = i;\n\tfor (int i = 1; i <= n; i++) b[i] = read();\n\tfor (int i = 1; i <= n; i++) id[i] = (i - 1) / sqn + 1;\n\tfor (int i = 1, now = 1; now <= len; now++) {\n\t\tfor (; id[i] == now; i++) {\n\t\t\tfor (int j = now; j <= len; j += lowbit(j))\n\t\t\t\ttr[j].mdy(X[b[i]], 1);\n\t\t}\n\t}\n\twhile (m--) {\n\t\tint opt = read();\n\t\tif (opt == 1) {\n\t\t\tint l = read(), r = read(), L = read(), R = read(), res = 0;\n\t\t\tint ll = id[L], rr = id[R];\n\t\t\tif (ll == rr) {\n\t\t\t\tfor (int i = L; i <= R; i++) if (l <= X[b[i]] && X[b[i]] <= r) res++;\n\t\t\t} else {\n\t\t\t\tfor (int i = L; id[i] == ll; i++) \n\t\t\t\t\tif (l <= X[b[i]] && X[b[i]] <= r) res++;\n\t\t\t\tfor (int i = R; id[i] == rr; i--) \n\t\t\t\t\tif (l <= X[b[i]] && X[b[i]] <= r) res++;\n\t\t\t\tres += qry(rr - 1, l, r) - qry(ll, l, r);\n\t\t\t}\n\t\t\twrite(res), puts(\"\");\n\t\t} else {\n\t\t\tint l = read(), r = read(), ll = id[l], rr = id[r];\n\t\t\tfor (int x = ll; x <= len; x += lowbit(x)) tr[x].mdy(X[b[l]], -1);\n\t\t\tfor (int x = rr; x <= len; x += lowbit(x)) tr[x].mdy(X[b[r]], -1);\n\t\t\tfor (int x = ll; x <= len; x += lowbit(x)) tr[x].mdy(X[b[r]], 1);\n\t\t\tfor (int x = rr; x <= len; x += lowbit(x)) tr[x].mdy(X[b[l]], 1);\n\t\t\tswap(b[l], b[r]);\n\t\t}\n\t}\n}\n```\n\n\u5206\u5757\u52a0\u503c\u57df\u5206\u5757\uff1a\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\nusing namespace std;\n\nnamespace IO{\n\tchar ibuf[(1 << 20) + 1], *iS, *iT;\n\t#if ONLINE_JUDGE\n\t#define gh() (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin), (iS == iT ? EOF : *iS++) : *iS++)\n\t#else\n\t#define gh() getchar()\n\t#endif\n\t#define reg register\n\tinline long long read () {\n\t\treg char ch = gh();\n\t\treg long long x = 0;\n\t\treg char t = 0;\n\t\twhile (ch < '0' || ch > '9') t |= ch == '-', ch = gh();\n\t\twhile (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gh();\n\t\treturn t ? -x : x;\n\t}\n\tinline void write(long long x) {\n\t\tif (x < 0) {\n\t\t\tx = ~(x - 1);\n\t\t\tputchar('-');\n\t\t}\n\t\tif (x > 9)\n\t\t\twrite(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\n\nusing IO::read;\nusing IO::write;\n\nconst int maxn(2e5 + 50), maxk(450);\nint n, m, sqn, len, x[maxn], y[maxn], pb[maxn], id[maxn], b[maxk][maxk], c[maxk][maxn];\n\nint main () {\n\tn = read(), m = read(), sqn = sqrt(n), len = (n - 1) / sqn + 1;\n\tfor (int i = 1; i <= n; i++) id[i] = (i - 1) / sqn + 1;\n\tfor (int i = 1; i <= n; i++) x[i] = read(), pb[x[i]] = i;\n\tfor (int i = 1; i <= n; i++) y[i] = read();\n\tfor (int now = 1, i = 1; now <= len; now++) {\n\t\tfor (int j = 1; j <= n; j++) c[now][j] = c[now - 1][j];\n\t\tfor (int j = 1; j <= len; j++) b[now][j] = b[now - 1][j];\n\t\tfor (; id[i] == now; i++) {\n\t\t\tint v = pb[y[i]];\n\t\t\tb[now][id[v]]++;\n\t\t\tc[now][v]++;\n\t\t}\n\t}\n\twhile (m--) {\n\t\tint opt = read(), l = read(), r = read();\n\t\tif (opt == 1) {\n\t\t\tint L = read(), R = read(), LL = id[L], RR = id[R], res = 0;\n\t\t\tif (LL == RR) {\n\t\t\t\tfor (int i = L; i <= R; i++) if (l <= pb[y[i]] && pb[y[i]] <= r) res++;\n\t\t\t} else {\n\t\t\t\tint ll = id[l], rr = id[r];\n\t\t\t\tfor (int i = L; id[i] == LL; i++) if (l <= pb[y[i]] && pb[y[i]] <= r) res++;\n\t\t\t\tfor (int i = R; id[i] == RR; i--) if (l <= pb[y[i]] && pb[y[i]] <= r) res++;\n\t\t\t\tif (ll == rr) {\n\t\t\t\t\tfor (int i = l; i <= r; i++) res += c[RR - 1][i] - c[LL][i];\n\t\t\t\t} else {\n\t\t\t\t\tfor (int i = l; id[i] == ll; i++) res += c[RR - 1][i] - c[LL][i];\n\t\t\t\t\tfor (int i = r; id[i] == rr; i--) res += c[RR - 1][i] - c[LL][i];\n\t\t\t\t\tfor (int i = ll + 1; i < rr; i++) res += b[RR - 1][i] - b[LL][i];\n\t\t\t\t}\n\t\t\t}\n\t\t\twrite(res), puts(\"\");\n\t\t} else {\n\t\t\tif (l > r) swap(l, r);\n\t\t\tint ll = id[l], rr = id[r];\n\t\t\tint v = pb[y[r]];\n\t\t\tfor (int i = ll; i < rr; i++) b[i][id[v]]++, c[i][v]++;\n\t\t\tv = pb[y[l]];\n\t\t\tfor (int i = ll; i < rr; i++) b[i][id[v]]--, c[i][v]--;\n\t\t\tswap(y[l], y[r]);\n\t\t}\n\t}\n}\n```",
        "postTime": 1667294211,
        "uid": 317495,
        "name": "JWRuixi",
        "ccfLevel": 7,
        "title": "Solution CF1093E"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u5206\u5757\u5199\u6cd5\n\u5bf9a,b\u90fd\u8fdb\u884c\u5206\u5757\uff0c \u9884\u5904\u7406b\u7684\u6bcf\u4e2a\u5757\u5728a\u7684\u6bcf\u4e2a\u5757\u4e2d\u7684\u8d21\u732e\u3002\n\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e2a\u8d21\u732e\u6570\u7ec4\u8fdb\u884c\u524d\u7f00\u548c\u3002\n\u9884\u5904\u7406\u590d\u6742\u5ea6\u662fO(n)\u7684\u3002\n\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\uff0c \u6574\u5757\u4e4b\u95f4\u53ef\u4ee5\u679a\u4e3eb\u5757\uff0c \u524d\u7f00\u548c\u7edf\u8ba1\u7b54\u6848\uff0c \u96f6\u788e\u90e8\u5206\u66b4\u529b\u5904\u7406\u5373\u53ef\u3002\n\u5bf9\u4e8e\u4fee\u6539\uff0c \u6211\u4eec\u53d1\u73b0\u53ea\u6709\u4e24\u4e2a\u5757\u7684\u524d\u7f00\u548c\u6539\u53d8\u4e86\uff0c \u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u5757\u66b4\u529b\u91cd\u6784\u5373\u53ef\u3002\n```cpp\n/*\n*/\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#include<map>\n#include<set>\n#include<cmath>\n#include<cmath>\n#define M 503\n#define N 201000\n#define ll long long\nusing namespace std;\n\nint read() {\n\tint nm = 0, f = 1;\n\tchar c = getchar();\n\tfor(; !isdigit(c); c = getchar()) if(c == '-') f = -1;\n\tfor(; isdigit(c); c = getchar()) nm = nm * 10 + c - '0';\n\treturn nm * f;\n}\nll f[M][M], sum[M][M];\nint a[N], b[N];\nint belong[N];\nint id[N], zd[N];\nint n, m, biao;\nint main() {\n\t//freopen(\".in\", \"r\", stdin), freopen(\".out\", \"w\", stdout);\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; i++) a[i] = read(), id[a[i]] = i;\n\tfor(int i = 1; i <= n; i++) b[i] = read(), zd[b[i]] = i;\n\tbiao = sqrt(n);\n\tfor(int i = 1; i <= n; i++) belong[i] = (i - 1) / biao + 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tint op = id[b[i]];\n\t\tint zz = belong[op];\n\t\tf[zz][belong[i]]++;\n\t}\n\tfor(int i = 1; i <= belong[n]; i++) {\n\t\tfor(int j = 1; j <= belong[n]; j++) {\n\t\t\tsum[i][j] = sum[i - 1][j] + f[i][j];\n\t\t}\n\t}\n\twhile(m--) {\n\t\tint op = read();\n\t\tint ans = 0;\n\t\tif(op == 1) {\n\t\t\tint aa = read(), bb = read(), c = read(), d = read();\n\t\t\tfor(int i = aa; i <= min(belong[aa] * biao, bb); i++) {\n\t\t\t\tif(zd[a[i]] >= c && zd[a[i]] <= d) ans++;\n\t\t\t}\n\t\t\tif(belong[aa] != belong[bb]) {\n\t\t\t\tfor(int i = (belong[bb] - 1) * biao + 1; i <= bb; i++)\n\t\t\t\t\tif(zd[a[i]] >= c && zd[a[i]] <= d) ans++;\n\t\t\t}\n\t\t\tint ln = belong[aa], rn = belong[bb] - 1;\n\n\t\t\tfor(int i = c; i <= min(belong[c] * biao, d); i++) if(id[b[i]] >= belong[aa] * biao + 1 && id[b[i]] <= (belong[bb] - 1) * biao) ans++;\n\t\t\tif(belong[c] != belong[d]) {\n\t\t\t\tfor(int i = (belong[d] - 1) * biao + 1; i <= d; i++)\n\t\t\t\t\tif(id[b[i]] >= belong[aa] * biao + 1 && id[b[i]] <= (belong[bb] - 1) * biao) ans++;\n\t\t\t}\n\t\t\tif(ln <= rn) for(int i = belong[c] + 1; i <= belong[d] - 1; i++) ans += sum[rn][i] - sum[ln][i];\n\t\t\tcout << ans << \"\\n\";\n\t\t} else {\n\t\t\tint aa = read(), bb = read();\n\t\t\tint op = id[b[aa]], zz = belong[op];\n\t\t\tf[zz][belong[aa]]--;\n\t\t\top = id[b[bb]], zz = belong[op];\n\t\t\tf[zz][belong[bb]]--;\n\t\t\tzd[b[aa]] = bb;\n\t\t\tzd[b[bb]] = aa;\n\t\t\tswap(b[aa], b[bb]);\n\t\t\top = id[b[aa]], zz = belong[op];\n\t\t\tf[zz][belong[aa]]++;\n\t\t\top = id[b[bb]], zz = belong[op];\n\t\t\tf[zz][belong[bb]]++;\n\t\t\taa = belong[aa], bb = belong[bb];\n\t\t\tfor(int i = 1; i <= belong[n]; i++) sum[i][aa] = sum[i - 1][aa] + f[i][aa], sum[i][bb] = sum[i - 1][bb] + f[i][bb];\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1545018237,
        "uid": 39865,
        "name": "fastle",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "[**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.cnblogs.com/MnZnOIerLzy/articles/17166143.html)\n\n# $\\texttt{Description}$\n\n[**Codeforces \u9898\u76ee\u94fe\u63a5**](https://codeforces.com/problemset/problem/1093/E \"Codeforces \u9898\u76ee\u94fe\u63a5\")\n\n[**\u6d1b\u8c37\u9898\u76ee\u94fe\u63a5**](https://www.luogu.com.cn/problem/CF1093E \"\u6d1b\u8c37\u9898\u76ee\u94fe\u63a5\")\n\n> - \u7ed9\u5b9a\u4e24\u4e2a $1\\sim n$ \u7684\u6392\u5217 $a,b$\u3002\u6709 $m$ \u6b21\u64cd\u4f5c\uff1a\n>\n>     - $\\texttt{1 }l_a\\texttt{ }r_a\\texttt{ }l_b\\texttt{ }r_b$\uff0c\u67e5\u8be2 $|\\{a_i|l_a\\le i\\le r_a\\}\\cap\\{b_j|l_b\\le j\\le r_b\\}|$\u3002\n>\n>     - $\\texttt{2 }x\\texttt{ }y$\uff0c\u4ea4\u6362 $b_x,b_y$\u3002\n>\n> - $n,m\\le 2\\times 10^5$\u3002\n\n# $\\texttt{Solution}$\n\n\u9996\u5148\u53d1\u73b0\u67e5\u8be2\u7684\u9650\u5236\u4e0d\u592a\u597d\u5904\u7406\uff0c\u53c8\u7531\u4e8e\u4e24\u4e2a\u6570\u7ec4\u90fd\u662f\u6392\u5217\uff0c\u53ef\u4ee5\u8003\u8651\u5efa\u7acb\u6620\u5c04\uff1a$p_{a_i}=i$\u3002\n\n\u7136\u540e $\\{a_i|l_a\\le i\\le r_a\\}\\cap\\{b_j|l_b\\le j\\le r_b\\}$ \u7b49\u4ef7\u4e8e $\\{p_{a_i}|l_a\\le i\\le r_a\\}\\cap \\{p_{b_j}|l_b\\le j\\le r_b\\}$\uff0c\u5373 $\\{a_i|l_a\\le i\\le r_a\\}\\cap\\{b_j|l_b\\le j\\le r_b\\}$ \u7b49\u4ef7\u4e8e $\\{i|l_a\\le i\\le r_a\\}\\cap\\{p_{b_j}|l_b\\le j\\le r_b\\}$\u3002\u56e0\u4e3a\u76f8\u540c\u503c\u7684 $p$ \u503c\u80af\u5b9a\u76f8\u540c\uff0c\u4ea4\u96c6\u4e2d\u8fd8\u662f\u8fd9\u4e9b\u503c\u7684\u8d21\u732e\u3002\n\n\u6240\u4ee5\u8981\u6c42\u7684\u5c31\u662f $p_{b_{l_b}}\\sim p_{b_{r_b}}$ \u4e4b\u95f4\u5728 $l_a\\sim r_a$ \u8303\u56f4\u5185\u6709\u51e0\u4e2a\u6570\u3002\u8003\u8651\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u5957\u5e73\u8861\u6811\u7ef4\u62a4\u3002\u4e00\u5f00\u59cb\u5148\u5c06 $k$ \u4f4d\u7f6e\u63d2\u5165 $p_{b_k}$\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u7edf\u8ba1\u524d\u7f00\u4e2a\u6570\u518d\u5dee\u5206\uff0c\u4e2a\u6570\u53ef\u4ee5\u7528**\u4e24\u7aef\u7684\u6392\u540d\u4e4b\u5dee $+1$** \u8ba1\u7b97\u3002\n\n\u5bf9\u4e8e\u4ea4\u6362\u64cd\u4f5c\uff0c**\u5148\u5220\u9664\u539f\u4f4d\u7f6e\u4e0a\u7684\u503c**\uff0c\u518d\u63d2\u5165\u65b0\u4f4d\u7f6e\u4e0a\u7684\u503c\u3002\u56e0\u4e3a\u8981\u907f\u514d\u628a\u65b0\u63d2\u5165\u7684\u7ed9\u8bef\u5220\u6389\uff08\u6211\u7684\u5e73\u8861\u6811\u53bb\u91cd\uff09\u3002\u6700\u540e\u8981\u4ea4\u6362 $b_x$ \u548c $b_y$\u3002\u56e0\u4e3a\u4e0b\u4e00\u6b21\u4ea4\u6362\u64cd\u4f5c\u662f\u57fa\u4e8e\u5f53\u524d\u72b6\u6001\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}((n+m)\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log n)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\u4f18\u70b9\u662f\u53ef\u4ee5\u5728\u7ebf\u4ee5\u53ca\u7a7a\u95f4\u6bd4\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u5c0f\uff0c\u7f3a\u70b9\u662f\u5e38\u6570\u8f83\u5927\u3002\n\n# $\\texttt{Code}$\n\n\u4ee3\u7801\u8981\u70b9\uff1a\n\n- \u672c\u849f\u84bb\u5f88\u83dc\u4e0d\u4f1a\u5199\u5e73\u8861\u6811\uff0c\u6240\u4ee5\u7528\u7684\u662f `pb_ds` \u5e93\u4e2d\u7684\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u4f18\u70b9\u662f\u73b0\u6210\u3001\u7801\u91cf\u5c0f\u4e14\u8fd9\u79cd\u5e73\u8861\u6811\u6548\u7387\u8f83\u9ad8\uff0c\u7f3a\u70b9\u662f\u96be\u4ee5\u53ef\u6301\u4e45\u5316\u6216\u533a\u95f4\u53cd\u8f6c\uff08\u8c8c\u4f3c\u662f\u8fd9\u6837\u7684\uff0c\u56e0\u4e3a\u6211\u8fd8\u6ca1\u6709\u5b9e\u73b0\u8fc7\uff09\u3001\u4ee5\u53ca `STL` \u81ea\u5e26\u7684\u5927\u5e38\u6570\u3002\n\n- \u67e5\u8be2\u7684\u65f6\u5019\u6709\u4e00\u4e9b\u60c5\u51b5\u8981\u820d\u53bb\uff1a\n\n    - \u5f53\u524d\u533a\u95f4\u5185\u6240\u6709\u6570\u5747 $<l_a$\u3002\n\t\n\t- \u5f53\u524d\u533a\u95f4\u5185\u6240\u6709\u6570\u5747 $>r_a$\u3002\n\n- \u53ef\u4ee5\u7528\u6307\u4ee4\u96c6\u4f18\u5316\u4ee3\u7801\u6548\u7387\u3002\n\n[**\u8bc4\u6d4b\u8bb0\u5f55**](https://codeforces.com/contest/1093/submission/195268236 \"**\u8bc4\u6d4b\u8bb0\u5f55**\")\n\n  \n$1.49\\text{KB}$ \u8f83\u77ed\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#define N 200005\n#define pbds __gnu_pbds\nusing namespace std;\nint n,m,a[N],b[N],p[N];\npbds::tree<int,pbds::null_type,less<int>,pbds::rb_tree_tag,pbds::tree_order_statistics_node_update>bit[N];\nvoid bit_insert(int x,int k){\n    for(int i=x;i<=n;i+=i&-i){\n        bit[i].insert(k);\n    }\n}\nvoid bit_erase(int x,int k){\n    for(int i=x;i<=n;i+=i&-i){\n        bit[i].erase(k);\n    }\n}\nint rbt_query(int x,int ql,int qr){\n    auto l=bit[x].lower_bound(ql),r=bit[x].upper_bound(qr);\n    if(l==bit[x].end()||r==bit[x].begin()){\n        return 0;\n    }\n    return bit[x].order_of_key(*--r)-bit[x].order_of_key(*l)+1;\n}\nint bit_query(int l,int r,int ql,int qr){\n    int ret=0;\n    for(int i=r;i;i-=i&-i){\n        ret+=rbt_query(i,ql,qr);\n    }\n    for(int i=l-1;i;i-=i&-i){\n        ret-=rbt_query(i,ql,qr);\n    }\n    return ret;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",a+i);\n        p[a[i]]=i;\n    }\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",b+i);\n        bit_insert(i,p[b[i]]);\n    }\n    for(int op,la,ra,lb,rb;m--;){\n        scanf(\"%d%d%d\",&op,&la,&ra);\n        if(op&1){\n            scanf(\"%d%d\",&lb,&rb);\n            printf(\"%d\\n\",bit_query(lb,rb,la,ra));\n        }else{\n            bit_erase(la,p[b[la]]);\n            bit_erase(ra,p[b[ra]]);\n            bit_insert(ra,p[b[la]]);\n            bit_insert(la,p[b[ra]]);\n            swap(b[la],b[ra]);\n        }\n    }\n}\n```",
        "postTime": 1677591659,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "CF1093E Intersection of Permutations"
    },
    {
        "content": "- \u8bb0 $i$ \u5728 $a$ \u4e2d\u7684\u4e0b\u6807\u4e3a $P(i)$\uff0c\u5219 $1$ \u64cd\u4f5c\u8f6c\u5316\u4e3a\uff1a\u7ed9\u51fa $l,r,L,R$\uff0c\u6c42\u6ee1\u8db3 $l \\le i \\le r, L \\le P(b_i) \\le R$ \u7684\u70b9\u4e2a\u6570\u3002\u53ef\u4ee5\u53d1\u73b0\u662f\u4e2a\u52a8\u6001\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\n- $2$ \u64cd\u4f5c\u76f8\u5f53\u4e8e\u5355\u70b9\u4fee\u6539\uff0c\u6216\u8005\u8bf4\u52a0\u4e00\u4e2a\u70b9\u7136\u540e\u5220\u4e00\u4e2a\u70b9\u3002\n\n\u901a\u5e38\u6765\u8bb2\u6211\u4eec\u53ef\u4ee5\u540c\u901a\u8fc7\u6811\u5957\u6811\u89e3\u51b3\uff0c\u4f46\u662f\u542c\u8bf4\u8fd9\u9898\u597d\u50cf\u5361\u7a7a\u95f4\uff1f\u5c31\u5199\u4e86\u5206\u5757\u5957 `bitset`\uff0c\u5206\u5757\u7ef4\u62a4\u5e8f\u5217\u7ef4\uff0c`bitset` \u7ef4\u62a4\u503c\u57df\u7ef4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u8bb0\u5f55\u7b2c\u4e00\u4e2a\u5757\u5230\u5f53\u524d\u5757\u6240\u6709 $a_i$ \u4ee5\u53ca $b_i$ \u7684\u5e76\u96c6\uff0c\u7528 `bitset` \u7684\u6216\u8fd0\u7b97\u7ef4\u62a4\u4e4b\u3002\u76f4\u63a5\u9884\u5904\u7406\u6574\u5757\u7684\u524d\u7f00\u6216\uff0c\u9884\u5904\u7406\u590d\u6742\u5ea6\u5c31\u662f $O(n\\sqrt n)$ \u7684\u3002\n\n- \u5bf9\u4e8e $1$ \u64cd\u4f5c\uff0c\u76f4\u63a5\u628a\u53f3\u7aef\u70b9\u6240\u5728\u5757\u5bf9\u5e94\u7684 `bitset` \u548c\u5de6\u7aef\u70b9\u6240\u5728\u5bf9\u5e94\u7684 `bitset` \u5f02\u6216\u5dee\u5206\u4e00\u4e0b\uff0c\u7136\u540e\u66b4\u529b\u7edf\u8ba1\u6563\u5757\u8d21\u732e\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n +\\dfrac{n^2} w)$\u3002\n- \u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u53d1\u73b0\u6700\u591a\u4f1a\u8ba9 $O(\\sqrt n)$ \u4e2a `bitset` \u4e2d\u7684\u503c\u4fee\u6539\uff0c\u904d\u5386\u6574\u5757\u4fee\u6539\u5373\u53ef\uff0c\u6bcf\u5757\u90fd\u53ea\u4f1a\u4fee\u6539 $O(1)$ \u4e2a\u5143\u7d20\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4ee5 $O(n \\sqrt n + \\dfrac{n^2} w)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u8fc7\u4e86\u8be5\u9898\u3002\n\n[\u4ee3\u7801\u53c2\u8003](https://codeforces.com/contest/1093/submission/148106655)\u3002",
        "postTime": 1646221342,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "CF1093E \u9898\u89e3"
    },
    {
        "content": "\u7ffb\u8bd1\u5f88\u6e05\u6670\uff0c\u5c31\u4e0d\u518d\u91cd\u590d\u9898\u610f\u4e86\u3002\n\n $a$ \u548c $b$ \u90fd\u662f $1$ \u5230 $n$ \u7684\u4e00\u4e2a\u6392\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb0$ A_i$ \u4e3a $i$ \u5728 $a$ \u4e2d\u7684\u4f4d\u7f6e\uff0c  $B_i$ \u4e3a $i$ \u5728 $b$ \u4e2d\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u8be2\u95ee\u5c31\u662f\u6c42\u6709\u591a\u5c11\u4e2a $i$ \u6ee1\u8db3 $la \\le A_i \\le ra$ \u4e14 $lb \\le B_i \\le rb$ \u3002\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u4e3a\u4e00\u4e2a\u5f88\u88f8\u7684\u4e8c\u7ef4\u6570\u70b9\u4e86\uff0c\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4$A$\uff0c\u5957\u7ebf\u6bb5\u6811\u7ef4\u62a4$B$\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u7531\u4e8e\u9898\u76ee\u4fee\u6539\u64cd\u4f5c\u53ea\u8981\u6c42\u4e86\u4ea4\u6362\u4e24\u4e2a\u6570\u5728 $b$ \u6392\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5728\u4e24\u4e2a\u6570\u539f\u6765\u7684\u4f4d\u7f6e $-1$ \uff0c\u4ea4\u6362 $B$ \u7684\u503c\u518d\u5728\u65b0\u7684\u4f4d\u7f6e $+1$ \u3002\n\n\u6ce8\u610f\u4fee\u6539\u64cd\u4f5c\u5f88\u591a\uff0c\u4f1a\u4ea7\u751f\u5927\u91cf\u65e0\u7528\u8282\u70b9\uff0c**\u4e00\u5b9a\u8981\u56de\u6536**\uff01\uff01\uff08\u4e0d\u7136\u4f1aRE/MLE\uff09\n\n\u4ee3\u7801\uff08\u90e8\u5206\u7ec6\u8282\u6709\u51fa\u5165\uff09\uff1a\n\n```cpp\n#include <cstdio>\n\nusing namespace std;\n\n#define il inline\n#define re register\n\nconst int N=2e5+10;\n\nnamespace FastIO\n{\nchar buf[1<<21],buf2[1<<21],*p1=buf,*p2=buf;\nint p,p3=-1;\nil int getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\nil void flush(){fwrite(buf2,1,p3+1,stdout),p3=-1;}\n#define isdigit(ch) (ch>=48&&ch<=57)\ntemplate <typename T>\nil void read(T &x)\n{\n\tre bool f=0;x=0;\n\tre char ch=getc();\n\twhile(!isdigit(ch)) f|=(ch=='-'),ch=getc();\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getc();\n\tx=f?-x:x;\n}\ntemplate <typename T>\nil void print(T x)\n{\n\tif(p3>(1<<20)) flush();\n\tif(x<0) buf2[++p3]=45,x=-x;\n\tre int a[50]={};\n\tdo{a[++p]=x%10+48;}while(x/=10);\n\tdo{buf2[++p3]=a[p];}while(--p);\n\tbuf2[++p3]='\\n';\n}\n}\nusing namespace FastIO;\n//IO\u4f18\u5316\n\nil void swap(int &a,int &b){a^=b^=a^=b;return;}\n\nint rt[N],pool;\nint bin[N<<7],top;\n//\u5e9f\u5f03\u8282\u70b9\u56de\u6536\nil int newnode(){return top?bin[top--]:++pool;}\nint ls[N<<7],rs[N<<7];\nint cnt[N<<7];\nil void deletnode(int &p){bin[++top]=p;p=0;return;}\nil void insert(int &p,int l,int r,int pos,int x)\n{\n\tif(!p) p=newnode();\n\tcnt[p]+=x;\n\tif(l==r) return;\n\tre int mid=(l+r)>>1;\n\tif(pos>mid) insert(rs[p],mid+1,r,pos,x);\n\telse insert(ls[p],l,mid,pos,x);\n\tif(!cnt[p]) deletnode(p);\n\treturn;\n}\nil int query(int p,int l,int r,int L,int R)\n{\n\tif(!p||l>R||r<L) return 0;\n\tif(l>=L&&r<=R) return cnt[p];\n\tre int mid=(l+r)>>1;\n\treturn query(ls[p],l,mid,L,R)+query(rs[p],mid+1,r,L,R);\n}\n\nint n,m;\nint a[N],b[N],B[N];\n\n#define lowbit(x) (x&-x)\nil void add(int x,int y,int z)\n{\n\tfor(re int i=x;i<=n;i+=lowbit(i))\n\t\tinsert(rt[i],1,n,y,z);\n\treturn;\n}\nil int ask(int xa,int xb,int ya,int yb)\n{\n\tre int res=0;\n\tfor(re int i=xb;i;i-=lowbit(i))\n\t\tres+=query(rt[i],1,n,ya,yb);\n\tfor(re int i=xa-1;i;i-=lowbit(i))\n\t\tres-=query(rt[i],1,n,ya,yb);\n    //\u51cf\u6389\u591a\u52a0\u7684\n\treturn res;\n}\nil void Swap(int x,int y)\n{\n\tadd(a[B[x]],b[B[x]],-1);add(a[B[y]],b[B[y]],-1);\n    //\u51cf\u6389\u539f\u6765\u7684\n\tswap(B[x],B[y]);b[B[x]]=x;b[B[y]]=y;\n\tadd(a[B[x]],b[B[x]],1);add(a[B[y]],b[B[y]],1);\n    //\u52a0\u4e0a\u65b0\u7684\n\treturn;\n}\n\nint main()\n{\n\tread(n);read(m);\n\tfor(re int i=1,x;i<=n;++i) read(x),a[x]=i;\n\tfor(re int i=1;i<=n;++i) read(B[i]),b[B[i]]=i;\n\tfor(re int i=1;i<=n;++i) add(a[i],b[i],1);\n\tre int opt,x,y,la,ra,lb,rb;\n\twhile(m--)\n\t{\n\t\tread(opt);\n\t\tif(opt==1) read(la),read(ra),read(lb),read(rb),print(ask(la,ra,lb,rb));\n\t\telse read(x),read(y),Swap(x,y);\n\t}\n\tflush();return 0;\n}\n```\n\n",
        "postTime": 1604466045,
        "uid": 209454,
        "name": "watermonster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "\u6587\u7ae0\u9996\u53d1\u4e8e [\u4e2a\u4eba\u535a\u5ba2](https://zepto.page/post/codeforces-1093e)\u3002\n\n### \u601d\u8def\n\n\u770b\u5230\u8fd9\u9053\u9898\u6211\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\uff1a\u5e26\u4fee\u6539\u4e3b\u5e2d\u6811\u3002\n\n\u4ee4 $p_i$ \u4ee3\u8868 $b_i$ \u5728 $a$ \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u8be2\u95ee\u5c31\u662f\u6c42\u533a\u95f4 $[l_b,r_b]$ \u4e2d\uff0c\u6743\u503c\u5728 $[l_a,r_a]$ \u4e4b\u95f4\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u4fee\u6539\u5c31\u662f\u7b80\u5355\u7684\u5355\u70b9\u4fee\u6539\u3002\n\n\u9759\u6001\u4e3b\u5e2d\u6811\u7684\u5199\u6cd5\u5927\u5bb6\u975e\u5e38\u6e05\u695a\uff0c\u6211\u628a\u5b83\u7406\u89e3\u4e3a\u524d\u7f00\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u5982\u4f55\u52a8\u6001\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u6570\u7ec4\u5462\uff1f\u91c7\u7528\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\u6211\u5199\u7684\u5e26\u4fee\u6539\u4e3b\u5e2d\u6811\u672c\u8d28\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811\uff0c\u6811\u72b6\u6570\u7ec4\u4e0a\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u50a8\u5b58\u4e86\u76f8\u5e94\u533a\u95f4\u4fe1\u606f\u7684\u4e3b\u5e2d\u6811\u3002\n\n\u8fd9\u6837\u5199\u5b9e\u6d4b\u8fc7\u4e0d\u4e86\u3002\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u7a7a\u95f4\u4e0d\u591f\u3002\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u8fd8\u662f\u5f88\u6709\u7528\u7684\uff08~~\u6211\u5199\u7684\u4e5f\u5f88\u597d\u770b~~\uff09\uff0c\u4ee3\u7801\u653e\u5728\u6587\u7ae0\u672b\u5c3e\u4e86\u3002\n\n\u5982\u4f55\u5728 Codeforces \u4e0a\u901a\u8fc7\u6b64\u9898\uff1f\u628a\u4e3b\u5e2d\u6811\u6362\u6210 $\\text{pbds}$ \u91cc\u7684 \u7ea2\u9ed1\u6811 \u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n\u4ee5\u4e0b\u662f\u5728 Codeforces \u4e0a\u53ef\u4ee5\u901a\u8fc7\u7684\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/rope>\n#define maxn 2000100\n#define pi pair<int,int>\n#define mp make_pair\nusing namespace std;\nusing namespace __gnu_pbds;\nusing namespace __gnu_cxx;\ntemplate <class T> using Tree=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\nint read(){\n\tint x=0,flag=1;char ch=getchar();\n\twhile(!isdigit(ch)&&ch!='-') ch=getchar();\n\tif (ch=='-') flag=-1,ch=getchar();\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+(ch-'0'),ch=getchar();\n\treturn x*flag;\n}\ntemplate <int size> struct rbtree{\n\tTree<int> val[size+1];\n\tvoid update(int pos,int tag,int op){\n\t\twhile(pos<=size){\n\t\t\tif (op) val[pos].insert(tag);\n\t\t\telse val[pos].erase(tag);\n\t\t\tpos+=(pos&-pos);\n\t\t}\n\t}\n\tint query(int pos,int tag){\n\t\tint res=0;\n\t\twhile(pos){\n\t\t\tres+=val[pos].order_of_key(tag+1);\n\t\t\tpos-=(pos&-pos);\n\t\t}\n\t\treturn res;\n\t}\n\tint query(int l,int r,int L,int R){\n\t\treturn query(r,R)-query(r,L)-query(l,R)+query(l,L);\n\t}\n};\nrbtree<maxn>T;\nint n,m,a[maxn],b[maxn],p[maxn];\nint main(){\n\tn=read(),m=read();\n\tfor (int i=1;i<=n;++i)\n\t\ta[i]=read(),p[a[i]]=i;\n\tfor (int i=1;i<=n;++i)\n\t\tb[i]=read(),b[i]=p[b[i]],T.update(i,b[i],1);\n\tfor (int i=1,op,l,r,L,R;i<=m;++i){\n\t\top=read();\n\t\tif (op==1){\n\t\t\tl=read(),r=read(),L=read(),R=read();\n\t\t\tprintf(\"%d\\n\",T.query(L-1,R,l-1,r));\n\t\t}\n\t\tif (op==2){\n\t\t\tl=read(),r=read();\n\t\t\tT.update(l,b[l],0);T.update(r,b[r],0);\n\t\t\tswap(b[l],b[r]);\n\t\t\tT.update(l,b[l],1);T.update(r,b[r],1);\n\t\t}\n\t}\n} \n```\n\n\u4ee5\u4e0b\u662f\u5e26\u4fee\u6539\u4e3b\u5e2d\u6811\uff0c\u5728\u6781\u9650\u6570\u636e\u4e0b\u7206\u7a7a\u95f4\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 200100\n#define mid ((l+r)>>1)\n#define logn 100\nint rt[maxn],ts[maxn*135],ls[maxn*135],rs[maxn*135];\nint a[maxn],b[maxn],A[maxn],B[maxn],C[maxn],la,lb,cnt,n,m;\nvoid update(int &p,int f,int l,int r,int x,int v){\n\tif (!p) p=++cnt;ts[p]+=v;\n\tif (l>=r) return;\n\tif (mid>=x) update(ls[p],p,l,mid,x,v);\n\telse update(rs[p],p,mid+1,r,x,v);\n}\nint query(int p,int l,int r,int L,int R){\n\tif (L<=l&&r<=R) return ts[p];\n\tif (mid>=R) return query(ls[p],l,mid,L,R);\n\tif (mid<L) return query(rs[p],mid+1,r,L,R);\n\treturn query(ls[p],l,mid,L,R)+query(rs[p],mid+1,r,L,R);\n}\nvoid change(int x,int y){\n\tint fx=B[x],fy=B[y];\n\tfor (int i=fx;i<=n;i+=(i&-i)) update(rt[i],0,1,n,x,-1);\n\tfor (int i=fy;i<=n;i+=(i&-i)) update(rt[i],0,1,n,y,-1);\n\tfor (int i=fx;i<=n;i+=(i&-i)) update(rt[i],0,1,n,y,1);\n\tfor (int i=fy;i<=n;i+=(i&-i)) update(rt[i],0,1,n,x,1);\n\tstd::swap(B[x],B[y]);\n}\nvoid get(int l,int r,int L,int R){\n\tint sum=0;l--;\n\tfor (int i=l;i;i-=(i&-i)) sum-=query(rt[i],1,n,L,R);\n\tfor (int i=r;i;i-=(i&-i)) sum+=query(rt[i],1,n,L,R);\n\tprintf(\"%d\\n\",sum);\n}\nint main(){\n\tfreopen(\"test.in\",\"r\",stdin);\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;++i) scanf(\"%d\",a+i);\n\tfor (int i=1;i<=n;++i) scanf(\"%d\",b+i);\n\tfor (int i=1;i<=n;++i) B[b[i]]=i;\n\tfor (int i=1;i<=n;++i) A[i]=B[a[i]];\n\tfor (int i=1;i<=n;++i) C[a[i]]=i;\n\tfor (int i=1;i<=n;++i) B[i]=C[b[i]];\n\tfor (int i=1;i<=n;++i)\n\t\tfor (int j=i;j<=n;j+=(j&-j))\n\t\t\tupdate(rt[j],0,1,n,A[i],1);\n\tfor (int i=1,op,a,b,c,d;i<=m;++i){\n\t\tscanf(\"%d\",&op);\n\t\tif (op==2) scanf(\"%d%d\",&a,&b),change(a,b);\n\t\tif (op==1) scanf(\"%d%d%d%d\",&a,&b,&c,&d),get(a,b,c,d);\n\t}\n}\n```",
        "postTime": 1545141155,
        "uid": 37158,
        "name": "XG_Zepto",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u6211\u7684\u535a\u5ba2\uff1ahttps://demo.alpha1022.me/articles/fa5a1270.htm\n\n\u6253\u5b8c\u6bd4\u8d5b\u4e4b\u540e\u5728\u6bd4\u8d5b\u516c\u544a\u7684\u8bc4\u8bba\u533a\u53d1\u73b0\u4e86\u4e00\u79cd\u5206\u5757\u601d\u8def\u3002\n\n\u6211\u4e00\u770b\uff0c\u6570\u636e\u7ed3\u6784\u9898\u8bf6\u3002  \n\u4f46\u662f\u4e0d\u4f1a\u505a\u3002  \n\u5199\u4e86\u4e2a\u5206\u5757 + bitset \u4e0a\u53bb\u6210\u529f TLE \u98de\u3002\n\n\u5982\u524d\u6587\u6240\u8bf4\uff0c\u5728\u8bc4\u8bba\u533a\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u79cd\u601d\u8def\uff1a  \n\u8bbe $sum_{i,j}$ \u8868\u793a $b$ \u7684\u7b2c $i$ \u5757\u4e0e $a$ \u7684**\u524d** $j$ \u5757\u6709\u591a\u5c11\u4e2a\u6570\u76f8\u540c\u3002  \n\u8bbe $place_{a,i}$ \u8868\u793a $i$ \u5728 $a$ \u4e2d\u7684\u7f16\u53f7\uff0c\u8bbe $place_{b,i}$ \u8868\u793a $i$ \u5728 $b$ \u4e2d\u7684\u7f16\u53f7\u3002\n\n\u7136\u540e\u67e5\u8be2\u6211\u4eec\u5148\u5904\u7406 $b$ \u7684\u5b8c\u6574\u5757\uff0c  \n\u6211\u4eec\u7528 $sum$ \u6570\u7ec4\u8ba1\u7b97 $a$ \u7684\u5b8c\u6574\u5757\u5bf9 $b$ \u7684\u5b8c\u6574\u5757\u7684\u7b54\u6848\u8d21\u732e\uff0c  \n\u518d\u7528 $place_b$ \u8ba1\u7b97 $a$ \u7684\u89d2\u5757\u5bf9 $b$ \u7684\u5b8c\u6574\u5757\u7684\u7b54\u6848\u8d21\u732e\u3002\n\n\u63a5\u7740\u5904\u7406 $b$ \u7684\u89d2\u5757\uff0c\u8fd9\u4e2a\u5c31\u7528 $place_a$ \u8ba1\u7b97\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u7531\u4e8e $sum$ \u6570\u7ec4\u7b2c\u4e8c\u7ef4\u662f\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u4ee5\u4fee\u6539\u4ece $O(1)$ \u9000\u5316\u6210 $O(\\sqrt{n})$ \u7684\u4ee3\u4ef7\uff0c\u4fdd\u8bc1\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{n})$ \u800c\u6ca1\u6709\u9000\u5316\u6210 $O(n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\nconst int BUFF_SIZE = 1 << 20;\nchar BUFF[BUFF_SIZE],*BB,*BE;\n#define gc() (BB == BE ? (BE = (BB = BUFF) + fread(BUFF,1,BUFF_SIZE,stdin),BB == BE ? EOF : *BB++) : *BB++)\ntemplate<class T>\ninline void read(T &x)\n{\n\tx = 0;\n\tchar ch = 0,w = 0;\n\twhile(ch < '0' || ch > '9')\n\t\tw |= ch == '-',ch = gc();\n\twhile(ch >= '0' && ch <= '9')\n\t\tx = (x << 3) + (x << 1) + (ch ^ '0'),ch = gc();\n\tw ? x = -x : x;\n}\n\nconst int N = 2e5;\nconst int BLOCK_NUM = 500;\nint n,m;\nint ind[2][N + 10];\nint a[2][N + 10];\nint block,pos[N + 10];\nint cnt[BLOCK_NUM + 10][BLOCK_NUM + 10];\nint sum[BLOCK_NUM + 10][BLOCK_NUM + 10];\nint main()\n{\n\tread(n),read(m);\n\tblock = sqrt(n);\n\tfor(register int i = 1;i <= n;++i)\n\t\tread(a[0][i]),pos[i] = (i - 1) / block + 1,ind[0][a[0][i]] = i;\n\tfor(register int i = 1;i <= n;++i)\n\t\tread(a[1][i]),ind[1][a[1][i]] = i,++cnt[pos[i]][pos[ind[0][a[1][i]]]];\n\tfor(register int i = 1;i <= pos[n];++i)\n\t\tfor(register int j = 1;j <= pos[n];++j)\n\t\t\tsum[i][j] = sum[i][j - 1] + cnt[i][j];\n\tint op,l1,r1,l2,r2;\n\twhile(m--)\n\t{\n\t\tread(op),read(l1),read(r1);\n\t\tif(op == 1)\n\t\t{\n\t\t\tint ans = 0;\n\t\t\tread(l2),read(r2);\n\t\t\tif(pos[l1] + 1 < pos[r1])\n\t\t\t\tfor(register int i = pos[l2] + 1;i < pos[r2];++i)\n\t\t\t\t\tans += sum[i][pos[r1] - 1] - sum[i][pos[l1]];\n\t\t\tfor(register int i = l1;i <= min(pos[l1] * block,r1);++i)\n\t\t\t\tans += pos[l2] + 1 <= pos[ind[1][a[0][i]]] && pos[ind[1][a[0][i]]] <= pos[r2] - 1;\n\t\t\tif(pos[l1] ^ pos[r1])\n\t\t\t\tfor(register int i = (pos[r1] - 1) * block + 1;i <= r1;++i)\n\t\t\t\t\tans += pos[l2] + 1 <= pos[ind[1][a[0][i]]] && pos[ind[1][a[0][i]]] <= pos[r2] - 1;\n\n\t\t\tfor(register int i = l2;i <= min(pos[l2] * block,r2);++i)\n\t\t\t\tans += l1 <= ind[0][a[1][i]] && ind[0][a[1][i]] <= r1;\n\t\t\tif(pos[l2] ^ pos[r2])\n\t\t\t\tfor(register int i = (pos[r2] - 1) * block + 1;i <= r2;++i)\n\t\t\t\t\tans += l1 <= ind[0][a[1][i]] && ind[0][a[1][i]] <= r1;\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t--cnt[pos[l1]][pos[ind[0][a[1][l1]]]],--cnt[pos[r1]][pos[ind[0][a[1][r1]]]];\n\t\t\tswap(a[1][l1],a[1][r1]);\n\t\t\tind[1][a[1][l1]] = l1,ind[1][a[1][r1]] = r1;\n\t\t\t++cnt[pos[l1]][pos[ind[0][a[1][l1]]]],++cnt[pos[r1]][pos[ind[0][a[1][r1]]]];\n\t\t\tfor(register int i = 1;i <= pos[n];++i)\n\t\t\t\tsum[pos[l1]][i] = sum[pos[l1]][i - 1] + cnt[pos[l1]][i],sum[pos[r1]][i] = sum[pos[r1]][i - 1] + cnt[pos[r1]][i];\n\t\t}\n\t}\n}\n```\n\n",
        "postTime": 1545023356,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "\u9996\u5148\u5c06\u5c06 $b_i$ \u7684\u5b9a\u4e49\u6539\u4e3a $b_i$ \u5728 $a$ \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e $pos$\uff0c\u90a3\u4e48\u8be2\u95ee\u64cd\u4f5c\u5c31\u662f\u8be2\u95ee $b_{[l_b,r_b]}$ \u4e2d\u6709\u51e0\u4e2a\u6570\u7684\u503c\u5728 $[l_a,r_a]$ \u4e2d\u3002\n\n\u56e0\u4e3a\u65f6\u95f4\u6709 $\\texttt{6.00 S}$ \u4e14 $n,m\\le 2\\times 10^5$\uff0c\u6240\u4ee5~~\u8003\u8651\u5206\u5757~~\u3002\n\n\u6839\u636e\u5957\u8def\uff0c\u8fdb\u884c\u5757\u5185\u6392\u5e8f\uff0c\u5bf9\u4e8e\u8be2\u95ee\u64cd\u4f5c\uff0c\u6563\u5757\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\uff0c\u6574\u5757\u76f4\u63a5\u4e8c\u5206\u6c42\u51fa\u503c\u5728 $[l_a,r_a]$ \u7684\u4e2a\u6570\u3002\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u76f4\u63a5\u66b4\u529b\u91cd\u6784\u8be5\u5757\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n + m\\sqrt{n}\\log n)$\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/1093/submission/204582814)\u3002",
        "postTime": 1683299783,
        "uid": 740607,
        "name": "__ODT__",
        "ccfLevel": 0,
        "title": "CF1093E"
    },
    {
        "content": "### \u524d\u8a00\uff1a  \n\u8003\u5b8c\u671f\u4e2d\u7801\u529b\u4e0b\u6ed1\u4e25\u91cd\uff0c\u8c03\u4e86 $114514$ \u5929\u3002  \n### \u79d1\u6280\uff1a  \nCDQ \u5206\u6cbb   \n### \u601d\u8def\uff1a  \n\u6211\u4eec\u5148\u4ee4 $p_x$ \u8868\u793a\u5143\u7d20 $x$ \u5728 $a$ \u4e2d\u7684\u4f4d\u7f6e\uff0c\u518d\u628a $b_i$ \u8d4b\u503c\u4e3a $p_{b_i}$\u3002  \n\u8fd9\u6837\uff0c\u539f\u6392\u5217 $b$ \u7684\u7b2c $i$ \u4e2a\u5143\u7d20\u5728 $a,b$ \u7684\u4f4d\u7f6e\u5c31\u5206\u522b\u662f $b_i,i$\uff0c\u4ea4\u6362 $b$ \u7684\u7b2c $A,B$ \u4e3a\u4e5f\u5c31\u7b49\u4ef7\u4e8e\u4ea4\u6362 $b_A,b_B$\u3002\n\n\u6211\u4eec\u518d\u628a\u9898\u76ee\u62bd\u8c61\u5316\u4e00\u4e0b\uff1a    \n\u7b2c\u4e00\uff0c\u5e73\u9762\u4e0a\u6709 $n$ \u4e2a\u70b9 $(b_i,i)$\uff0c\u4e0e\u539f\u6765\u7684 $n$ \u4e2a\u5143\u7d20\u4e00\u4e00\u5bf9\u5e94\uff1b  \n\u7b2c\u4e8c\uff0c\u67e5\u8be2\u64cd\u4f5c\uff1a\u6c42\u6709\u591a\u5c11\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\u5728 $[l1,r1]$ \u4e4b\u95f4\u4e14\u7eb5\u5750\u6807\u5728 $[l2,r2]$ \u4e4b\u95f4\uff08\u6c42\u7684\u65b9\u6cd5\u7c7b\u4f3c\u4e8c\u4f4d\u524d\u7f00\u548c\uff0c\u89c1\u4ee3\u7801\uff09\uff1b  \n\u7b2c\u4e09\uff0c\u4ea4\u6362\u64cd\u4f5c\uff1a\u5c06\u70b9 $(b_x,x)$ \u4e0e $(b_y,y)$ \u5220\u53bb\uff0c\u52a0\u5165 $(b_y,x),(b_x,y)$ \u4e24\u70b9\u3002  \n\n\u8fdb\u4e00\u6b65\u5730\uff0c\u5220\u70b9\u53ef\u89c6\u4e3a\u5c06\u5176\u6743\u503c\u51cf\u4e00\uff0c\u52a0\u70b9\u53ef\u89c6\u4e3a\u5c06\u5176\u6743\u503c\u52a0\u4e00\uff0c\u67e5\u8be2\u4e5f\u5c31\u53d8\u4e3a\u4e86\u6c42\u533a\u95f4\u5185\u7684\u6743\u503c\u548c\u3002  \n\u63a5\u7740\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u53d1\u73b0\u8fd8\u8981\u8003\u8651\u65f6\u95f4\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u8981\u505a\u4e09\u7ef4\u504f\u5e8f\uff0c\u4e8e\u662f\u4e5f\u5c31\u81ea\u7136\u800c\u7136\u5730\u60f3\u5230 CDQ \u5206\u6cbb\u4e86\u3002   \n### \u4ee3\u7801\uff1a  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nint n,m,tot,cnt,op,A,B,C,D,b[N],p[N],ans[N],tr[N * 5],rk[N * 5];\nstruct node{int op,x,y,w;} s[N * 5];\n//\u5404\u79cd\u64cd\u4f5c\u52a0\u8d77\u6765\u6700\u5927\u4f1a\u662f5n\nint lowbit(int x){return x & (-x);}\nvoid update(int p,int v){for(int i = p;i <= tot;i += lowbit(i)) tr[i] += v;}\nint query(int p)\n{\n\tint ret = 0;\n\tfor(int i = p;i;i -= lowbit(i)) ret += tr[i];\n\treturn ret;\n}\nbool cmp(int x,int y){return s[x].x != s[y].x ? s[x].x < s[y].x : x < y;}\nvoid gb_sort(int l,int r)\n{\n\tif(l == r) return ;\n\tint mid = (l + r) / 2;\n\tgb_sort(l,mid);\n\tgb_sort(mid + 1,r);\n\tfor(int i = l;i <= r;i++) rk[i] = i;\n\tsort(rk + l,rk + r + 1,cmp);\n\tfor(int i = l;i <= r;i++)\n\t{\n\t\tif(rk[i] <= mid && s[rk[i]].op == -1) update(s[rk[i]].y,s[rk[i]].w);\n\t\tif(rk[i] > mid && s[rk[i]].op != -1) ans[s[rk[i]].op] += query(s[rk[i]].y) * s[rk[i]].w;\n\t}\n\tfor(int i = l;i <= mid;i++) if(s[i].op == -1) update(s[i].y,-s[i].w);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tscanf(\"%d\",&A);\n\t\tp[A] = i;\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\tb[i] = p[b[i]];\n\t}\n\ttot = n;\n\tfor(int i = 1;i <= n;i++) s[i] = (node){-1,b[i],i,1};\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tscanf(\"%d\",&op);\n\t\tif(op == 1)\n\t\t{\n\t\t\tscanf(\"%d%d%d%d\",&A,&B,&C,&D);\n\t\t\tcnt++; \n\t\t\ts[++tot] = (node){cnt,B,D,1};\n\t\t\ts[++tot] = (node){cnt,A - 1,D,-1};\n\t\t\ts[++tot] = (node){cnt,B,C - 1,-1};\n\t\t\ts[++tot] = (node){cnt,A - 1,C - 1,1};\n        //\u4ee5\u539f\u70b9\u4e3a\u5de6\u4e0b\u89d2\uff0c(x,y)\u4e3a\u53f3\u4e0a\u89d2\u6784\u6210\u7684\u77e9\u5f62\u5185\u7684\u6743\u503c\u548c\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&A,&B);\n\t\t\ts[++tot] = (node){-1,b[A],A,-1};\n\t\t\ts[++tot] = (node){-1,b[B],B,-1};\n\t\t\tswap(b[A],b[B]);\n\t\t\ts[++tot] = (node){-1,b[A],A,1};\n\t\t\ts[++tot] = (node){-1,b[B],B,1};\n\t\t}\n\t}\n\tgb_sort(1,tot);\n\tfor(int i = 1;i <= cnt;i++) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1682782978,
        "uid": 298037,
        "name": "allenchoi",
        "ccfLevel": 6,
        "title": "CF1093E\u9898\u89e3"
    },
    {
        "content": "\u7ecf\u5178\u52a8\u6001\u4e8c\u7ef4\u6570\u70b9\u3002\n\n\u8003\u8651\u4ee4 $f_{a_i}=i$\uff0c\u5219\u8be2\u95ee $l_a\\ r_a\\ l_b\\ r_b$ \u76f8\u5f53\u4e8e\u8be2\u95ee $l_a\\le f_{b_i}\\le r_a,l_b\\le i\\le r_b$ \u7684 $i$ \u7684\u4e2a\u6570\u3002\n\n\u6811\u5957\u6811\u7ef4\u62a4 $f_{b_i}$\uff0c\u4ea4\u6362\u76f8\u5f53\u4e8e\u5355\u70b9\u4fee\u6539\u3002\n\n\u5e73\u677f\u7535\u89c6\u771f\u7684\u5f88\u597d\u5199\u3002\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++)\nusing namespace std;\nusing namespace __gnu_pbds;\nchar buf[1 << 23], *p1 = buf, *p2 = buf, obuf[1 << 23], *O = obuf;\ninline int R()\n{\n    int r = 0;\n    char c = getchar();\n    while (c < '0' || c > '9')\n        c = getchar();\n    while (c >= '0' && c <= '9')\n        r = r * 10 + c - '0', c = getchar();\n    return r;\n}\nvoid P(int x)\n{\n    if (x >= 10)\n        P(x / 10);\n    *O++ = x % 10 + '0';\n}\nint n, m, a[200001], b[200001], k[200001];\nstruct T\n{\n    tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> c;\n    inline void C(int x, int k)\n    {\n        if (k == 1)\n            c.insert(x);\n        else\n            c.erase(x);\n    }\n    inline int Q(int x, int y) { return c.order_of_key(y + 1) - c.order_of_key(x); }\n} c[200001];\ninline void C(int x, int y, int k)\n{\n    for (; x <= n; x += x & -x)\n        c[x].C(y, k);\n}\ninline int Q(int x, int y, int s, int t)\n{\n    int q = 0;\n    for (--x; y > x; y &= y - 1)\n        q += c[y].Q(s, t);\n    for (; x > y; x &= x - 1)\n        q -= c[x].Q(s, t);\n    return q;\n}\nint main()\n{\n    n = R();\n    m = R();\n    for (int i = 1; i <= n; ++i)\n        k[a[i] = R()] = i;\n    for (int i = 1; i <= n; ++i)\n        C(i, k[b[i] = R()], 1);\n    for (int i = 0, o, x, y, p, q; i < m; ++i)\n    {\n        o = R();\n        x = R();\n        y = R();\n        if (o & 1)\n            p = R(), q = R(), P(Q(p, q, x, y)), *O++ = '\\n';\n        else\n            C(x, k[b[x]], -1), C(y, k[b[y]], -1), swap(b[x], b[y]), C(x, k[b[x]], 1), C(y, k[b[y]], 1);\n    }\n    fwrite(obuf, O - obuf, 1, stdout);\n    return 0;\n}\n```\n",
        "postTime": 1680509039,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "CF1093E Intersection of Permutations \u9898\u89e3"
    },
    {
        "content": "~~\u5927\u5bb6\u597d\uff0c\u6211\u975e\u5e38\u559c\u6b22\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c\u4e8e\u662f\u6211\u5c31\u7528\u5206\u5757 A \u4e86\u6b64\u9898\u3002~~\n\n\u9898\u89e3\u533a\u5206\u5757\u505a\u6cd5\u57fa\u672c\u90fd\u662f\u5e26 $\\log$ \u6216\u8005\u8bf4\u52a0\u4e0a `bitset` \u4f18\u5316\u66b4\u529b\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd $O((n+m) \\sqrt n)$ \u7684\u5206\u5757\u505a\u6cd5\uff0c\u76ee\u524d[\u6700\u4f18\u89e3](https://www.luogu.com.cn/record/list?pid=CF1093E&orderBy=1&status=&page=1)\uff08$826\\text{ms}$ $4.61\\text{MB}$\uff09\u3002\n\n\u9996\u5148\u6211\u4eec\u5b9a\u4e49 $p_i$ \u4e3a $i$ \u5728 $a$ \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u628a $b_i$ \u548c $p_{b_i}$ \u5bf9\u5e94\u8d77\u6765\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u56de\u7b54 $[l_b,r_b]$ \u4e2d\u7684 $p$ \u503c\u5728 $[l_a,r_a]$ \u7684\u4e2a\u6570\u3002\u53ef\u4ee5\u8fd9\u4e48\u5b9e\u73b0\uff1a\n```cpp\nfor(int i=1;i<=n;++i)\n\tcin>>a[i],p[a[i]]=i;\nfor(int i=1;i<=n;++i)\n\tcin>>b[i],a[p[b[i]]]=i;\n//\u6b64\u65f6\u8be2\u95ee\u76f8\u5f53\u4e8e\u95ee\u65b0\u7684 a \u5728 [lb,rb] \u8303\u56f4\u4e2d\u503c\u5728 [la,ra] \u7684\u4e2a\u6570\u3002\n```\n\u6211\u4eec\u5bf9\u5e8f\u5217\u548c\u503c\u57df\u5206\u5757\uff0c\u8bbe\u5757\u957f\u4e3a $s$\u3002\n\n\u6211\u4eec\u9884\u5904\u7406\u4e00\u4e2a\u6570\u7ec4 $f_{i,j}$ \u8868\u793a**\u5e8f\u5217**\u7b2c $i$ \u4e2a\u5757\u4e2d**\u6570\u503c**\u843d\u5728\u7b2c $1$ \u5230 $j$ \u4e2a\u5757\u7684\u6570\u7684\u4e2a\u6570\uff08\u5373\u5c0f\u4e8e\u7b49\u4e8e $j \\times s$ \u7684\u4e2a\u6570\uff09\u3002\u66b4\u529b\u9884\u5904\u7406\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\dfrac{n^2}{s})$\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u96f6\u6563\u5e8f\u5217\u5757\u66b4\u529b\uff0c\u6574\u5e8f\u5217\u5757\u4e2d\u96f6\u6563\u6570\u503c\u66b4\u529b\uff0c\u6574\u7684\u6570\u503c\u67e5 $f$ \u6570\u7ec4\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4\u6765\u5b58\u6bcf\u4e00\u4e2a\u503c\u7684\u4f4d\u7f6e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(s+\\dfrac{n}{s})$\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u76f8\u5f53\u4e8e\u4ea4\u6362\u5e8f\u5217\u7684\u4e24\u4e2a\u6570\uff0c\u76f8\u5e94\u66f4\u65b0\u8f85\u52a9\u6570\u7ec4\uff0c$f$ \u6570\u7ec4\u53ea\u8981\u66b4\u529b\u4fee\u6539\u6570\u6240\u5728\u5e8f\u5217\u5757\u7684\u6570\u503c\u4fe1\u606f\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\dfrac{n}{s})$\u3002\n\n\u56e0\u6b64\u7406\u8bba\u4e0a $s=\\sqrt n$ \u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u4e3a $O((n+m) \\sqrt n)$\uff0c\u5b9e\u9645\u53ef\u4ee5\u5fae\u8c03\u6765\u66f4\u5feb~~\u6211\u61d2\u5f97\u8c03~~\uff0c\u540c\u65f6\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$~~\uff0c\u611f\u89c9\u53ef\u4ee5\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u540a\u6253\u67d0\u4e9b\u6570\u636e\u7ed3\u6784~~\u3002\n\n\u4ee3\u7801\uff1a\n\n\u4e0d\u592a\u957f\uff0c\u4e5f\u4e0d\u662f\u5f88\u96be\u5199\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconstexpr int N=2e5+5,S=sqrt(N)+5;\nint n,s,b,a[N],c[N],pos[N],ps[N],in[N],f[S][S];\ninline int solve(int l,int r,int x){\n\tint res=0,m=x/s;\n\tfor(int i=in[l];i<=in[r];++i)\n\t\tres+=f[i][m];\n\tfor(int i=m*s+1;i<=x;++i)\n\t\tres+=l<=ps[i]&&ps[i]<=r;\n\treturn res;\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tint q,op,l,r,L,R,ans;\n\tcin>>n>>q;\n\ts=sqrt(n);\n\tb=n/s;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>a[i],pos[a[i]]=i,in[i]=(i-1)/s+1;\n\tin[n+1]=in[n];\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>c[i],a[pos[c[i]]]=i;\n\tfor(int i=1;i<=n;++i)\n\t\tps[a[i]]=i;\n\tfor(int i=1;i<=s*b;++i)\n\t\tfor(int j=b;j;--j){\n\t\t\tif(a[i]>j*s)\n\t\t\t\tbreak;\n\t\t\t++f[in[i]][j];\n\t\t}\n\twhile(q--){\n\t\tcin>>op>>l>>r;\n\t\tif(op==1){\n\t\t\tcin>>L>>R;\n\t\t\tans=0;\n\t\t\tif(in[l]==in[r])\n\t\t\t\tfor(int i=l;i<=r;++i)\n\t\t\t\t\tans+=L<=a[i]&&a[i]<=R;\n\t\t\telse{\n\t\t\t\tfor(;in[l-1]==in[l];++l)\n\t\t\t\t\tans+=L<=a[l]&&a[l]<=R;\n\t\t\t\tfor(;in[r+1]==in[r];--r)\n\t\t\t\t\tans+=L<=a[r]&&a[r]<=R;\n\t\t\t\tans+=solve(l,r,R)-solve(l,r,L-1);\n\t\t\t}\n\t\t\tcout<<ans<<'\\n';\n\t\t}\n\t\telse{\n\t\t\tswap(c[l],c[r]);\n\t\t\tl=pos[c[l]],r=pos[c[r]];\n\t\t\tswap(a[l],a[r]);\n\t\t\tps[a[l]]=l,ps[a[r]]=r;\n\t\t\tfor(int i=in[a[l]];i<=b;++i)\n\t\t\t\t++f[in[l]][i],--f[in[r]][i];\n\t\t\tfor(int i=in[a[r]];i<=b;++i)\n\t\t\t\t--f[in[l]][i],++f[in[r]][i];\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1666926857,
        "uid": 478461,
        "name": "lfxxx",
        "ccfLevel": 7,
        "title": "CF1093E Intersection of Permutations"
    },
    {
        "content": "$CDQ$\u5927\u6cd5\u543c\u5440\uff01\n\n~~\u5176\u5b9e\u4e0d\u60f3\u5199\u6811\u5957\u6811~~\n\n\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa$x[i],y[i]$\u8868\u793a$i$\u5728$a,b$\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u6761\u4ef6\u5c31\u662f$l_a\\leq x[i]\\leq r_a,l_b\\leq y[i]\\leq r_b$\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u5b83\u5957\u4e0a\u53bb\u4e86\u3002\n\n\u81f3\u4e8e\u4fee\u6539\u5c31\u662f\u76f4\u63a5\u6d88\u9664\u5f71\u54cd\uff0c\u7136\u540e\u518d\u6062\u590d\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define Rint register int\nusing namespace std;\nconst int N = 200003;\nint n, m, a[N], b[N], x[N], y[N], ans[N], cnt, tot;\nstruct Query {\n    int opt, x, y, z, id;\n    inline bool operator < (const Query &o) const {\n        if(x != o.x) return x < o.x;\n        return opt < o.opt;\n    }\n} q[N * 5];\nint c[N];\ninline int lowbit(int x){return x & -x;}\ninline void change(int pos, int val){\n    while(pos <= n){\n        c[pos] += val;\n        pos += lowbit(pos);\n    }\n}\ninline int query(int pos){\n    int res = 0;\n    while(pos){\n        res += c[pos];\n        pos -= lowbit(pos);\n    }\n    return res;\n}\ninline void clear(int pos){\n    if(!pos) return; \n    while(pos <= n){\n        c[pos] = 0;\n        pos += lowbit(pos);\n    }\n}\ninline void cdq(int l, int r){\n    if(l >= r) return;\n    int mid = l + r >> 1;\n    cdq(l, mid); cdq(mid + 1, r);\n    sort(q + l, q + mid + 1); sort(q + mid + 1, q + r + 1);\n    int i = mid + 1, j = l;\n    for(;i <= r;i ++){\n        while(j <= mid && q[j].x <= q[i].x){\n            if(q[j].opt == 0) change(q[j].y, q[j].z);\n            ++ j;\n        }\n        if(q[i].opt == 1) ans[q[i].id] += q[i].z * query(q[i].y);\n    }\n    for(Rint k = l;k < j;k ++) clear(q[k].y);\n}\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for(Rint i = 1;i <= n;i ++) scanf(\"%d\", a + i), x[a[i]] = i;\n    for(Rint i = 1;i <= n;i ++) scanf(\"%d\", b + i), y[b[i]] = i;\n    for(Rint i = 1;i <= n;i ++)\n        q[++ cnt] = (Query){0, x[i], y[i], 1, 0};\n    for(Rint i = 1;i <= m;i ++){\n        int opt;\n        scanf(\"%d\", &opt);\n        if(opt == 1){\n            int la, ra, lb, rb;\n            scanf(\"%d%d%d%d\", &la, &ra, &lb, &rb);\n            ++ tot;\n            q[++ cnt] = (Query){1, ra, rb, 1, tot};\n            q[++ cnt] = (Query){1, la - 1, rb, -1, tot};\n            q[++ cnt] = (Query){1, ra, lb - 1, -1, tot};\n            q[++ cnt] = (Query){1, la - 1, lb - 1, 1, tot};\n        } else {\n            int X, Y;\n            scanf(\"%d%d\", &X, &Y);\n            q[++ cnt] = (Query){0, x[b[X]], y[b[X]], -1, 0};\n            q[++ cnt] = (Query){0, x[b[Y]], y[b[Y]], -1, 0};\n            swap(b[X], b[Y]); y[b[X]] = X; y[b[Y]] = Y;\n            q[++ cnt] = (Query){0, x[b[X]], y[b[X]], 1, 0};\n            q[++ cnt] = (Query){0, x[b[Y]], y[b[Y]], 1, 0};\n        }\n    }\n    cdq(1, cnt);\n    for(Rint i = 1;i <= tot;i ++) printf(\"%d\\n\", ans[i]);\n}\n```",
        "postTime": 1553351225,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u65f6\u95f4\u7ebf\u6bb5\u6811+\u626b\u63cf\u7ebf\n\n\u8003\u8651\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\u3002\u5047\u8bbe\u67d0\u4e2a\u6570\u5b57\u5728$a$\u4e2d\u7684\u4f4d\u7f6e\u4e3a$x$\uff0c\u5728$b$\u4e2d\u7684\u4f4d\u7f6e\u4e3a$y$\uff0c\u5219\u770b\u505a\u4e00\u4e2a\u70b9$(x,y)$\u3002\u90a3\u4e48\u4e00\u4e2a\u8be2\u95ee\u5c31\u662f\u67e5\u8be2\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u70b9\u6570\uff0c\u8fd9\u4e2a\u662f\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u53ef\u4ee5\u626b\u63cf\u7ebf\u89e3\u51b3\u3002\n\n\u73b0\u5728\u6709\u4e86\u4fee\u6539\u64cd\u4f5c\uff0c\u5c31\u4e0a\u4e00\u68f5\u65f6\u95f4\u7ebf\u6bb5\u6811\u3002\u5c06\u4e00\u4e2a\u70b9\u8986\u76d6\u5728\u5b83\u51fa\u73b0\u7684\u65f6\u95f4\u533a\u95f4\u5185\uff0c\u4e00\u4e2a\u8be2\u95ee\u5219\u5728\u4ece\u5355\u72ec\u4ee3\u8868\u8fd9\u4e2a\u8be2\u95ee\u7684\u65f6\u95f4\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u5230\u7ebf\u6bb5\u6811\u7684\u6839\u7684\u8def\u5f84\u4e0a\u90fd\u653e\u4e00\u4e2a\uff0c\u904d\u5386\u7ebf\u6bb5\u6811\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u4e0a\u653e\u7684\u8be2\u95ee\u4eec\u548c\u70b9\u4eec\uff0c\u90fd\u505a\u4e00\u904d\u626b\u63cf\u7ebf\u3002\n\n\u590d\u6742\u5ea6$O(n \\log^2 n)$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\nint read() {\n\tint q=0;char ch=' ';\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') q=q*10+ch-'0',ch=getchar();\n\treturn q;\n}\nconst int N=200005;\nint n,m,qcnt;\nint a[N],X[N],T[N],ans[N],s[N];\nstruct node{int x,Y1,Y2,id;};\nvector<node> tr[N<<2];\n\nvoid insq(int x,int s,int t,int i,node k) {//\u5c06\u8be2\u95ee\u653e\u5728\u65f6\u95f4\u7ebf\u6bb5\u6811\u4e0a\n\ttr[i].push_back(k); if(s==t) return;\n\tint mid=(s+t)>>1;\n\tif(x<=mid) insq(x,s,mid,i<<1,k);\n\telse insq(x,mid+1,t,(i<<1)|1,k);\n}\nvoid insp(int l,int r,int s,int t,int i,node k) {//\u5c06\u70b9\u653e\u5728\u65f6\u95f4\u7ebf\u6bb5\u6811\u4e0a\n\tif(l<=s&&t<=r) {tr[i].push_back(k);return;}\n\tint mid=(s+t)>>1;\n\tif(l<=mid) insp(l,r,s,mid,i<<1,k);\n\tif(mid+1<=r) insp(l,r,mid+1,t,(i<<1)|1,k);\n}\n\nbool cmp(node A,node B) {return A.x==B.x?A.id==0:A.x<B.x;}\nint lowbit(int x) {return x&(-x);}\nvoid add(int x,int v) {while(x<=n) s[x]+=v,x+=lowbit(x);}\nint query(int x) {int re=0; while(x) re+=s[x],x-=lowbit(x); return re;}\nvoid work(int s,int t,int i) {\n\tsort(tr[i].begin(),tr[i].end(),cmp);//\u626b\u63cf\u7ebf\n\tint sz=tr[i].size();\n\tfor(RI j=0;j<sz;++j) {\n\t\tif(!tr[i][j].id) add(tr[i][j].Y1,1);\n\t\telse {\n\t\t\tint kl=query(tr[i][j].Y2)-query(tr[i][j].Y1-1);\n\t\t\tif(tr[i][j].id<0) ans[-tr[i][j].id]-=kl;\n\t\t\telse ans[tr[i][j].id]+=kl;\n\t\t}\n\t}\n\tfor(RI j=0;j<sz;++j) if(!tr[i][j].id) add(tr[i][j].Y1,-1);\n\tif(s==t) return;\n\tint mid=(s+t)>>1;\n\twork(s,mid,i<<1),work(mid+1,t,(i<<1)|1);\n}\n\nint main()\n{\n\tint op,X1,Y1,X2,Y2;\n\tn=read(),m=read();\n\tfor(RI i=1;i<=n;++i) a[read()]=i;\n\tfor(RI i=1;i<=n;++i) X[i]=a[read()],T[i]=0;\n\tfor(RI i=1;i<=m;++i) {\n\t\top=read();\n\t\tif(op==1) {\n\t\t\tX1=read(),X2=read(),Y1=read(),Y2=read(),++qcnt;\n\t\t\tinsq(i,0,m,1,(node){X1-1,Y1,Y2,-qcnt});\n\t\t\tinsq(i,0,m,1,(node){X2,Y1,Y2,qcnt});\n\t\t}\n\t\telse {\n\t\t\tX1=read(),X2=read();\n\t\t\tinsp(T[X1],i-1,0,m,1,(node){X[X1],X1,0,0});\n\t\t\tinsp(T[X2],i-1,0,m,1,(node){X[X2],X2,0,0});\n\t\t\tswap(X[X1],X[X2]),T[X1]=T[X2]=i;\n\t\t}\n\t}\n\tfor(RI i=1;i<=n;++i) insp(T[i],m,0,m,1,(node){X[i],i,0,0});\n\twork(0,m,1);\n\tfor(RI i=1;i<=qcnt;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1546776043,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "\u6211\u4eec\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u6570\u7ec4c[i]\uff0c\u4f7f\u5f97\u82e5a[j]==b[i]\u5219c[i]=j\uff0c\u90a3\u4e48\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\u67e5\u8be2\u76f8\u5f53\u4e8e\u67e5\u8be2c\u6570\u7ec4\u4e0b\u6807bl..br\u8303\u56f4\u5185\u5143\u7d20\u5728al..ar\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u6bcf\u6b21\u4ea4\u6362b[x]\u548cb[y]\u5c31\u76f8\u5f53\u4e8e\u4ea4\u6362c[x]\u548cc[y]\n\n\u7136\u540e\u663e\u7136\u8fd9\u53ef\u4ee5\u7528\u6811\u5957\u6811\u7ef4\u62a4\uff0c\u9996\u5148\u53d1\u73b0\u7ebf\u6bb5\u6811\u5957set\u8fc7\u4e0d\u4e86\uff0c\u6211\u5148\u5199\u4e86\u4e2a\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\uff0c\u5361\u4e86\u5361\u5e38\uff0c\u672c\u673a\u521a\u597d\u5361\u8fdb\u53bb\uff0c\u4ea4CF\u4e0aT\u4e86\u3002\u3002\u3002\uff08\u6211\u662f\u5e73\u8861\u6811\u7edd\u75c7\u60a3\u8005\uff0c\u5199\u5e73\u8861\u6811\u8981\u5199\u4e00\u5c0f\u65f6\uff09\n\n\u7136\u540e\u6211\u53c8\u628a\u7ebf\u6bb5\u6811\u6539\u4e3a\u6811\u72b6\u6570\u7ec4\uff0c\u7531\u4e8e\u6811\u72b6\u6570\u7ec4\u4e0d\u597d\u5361\u5e38\uff0c\u90fd\u6ca1\u7ebf\u6bb5\u6811\u5feb\n\n\u7531\u4e8e\u6211\u5199\u7684\u662f\u9ad8\u5e38\u6570\u7684Treap\uff0c\u6240\u4ee5\u6211\u628aTreap\u6362\u6210\u4e86\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u3002\u7136\u800c\u7a7a\u95f4\u590d\u6742\u5ea6\u7531$O(n\\log n)$\u5361\u6210$O(n\\log^2n)$\u4e86\uff0c\u5fc5\u987b\u5f97\u5199\u5185\u5b58\u56de\u6536\u7136\u540e\u624dA\n\n\u6743\u503c\u7ebf\u6bb5\u6811\u5185\u5b58\u56de\u6536\u548c\u5e73\u8861\u6811\u5185\u5b58\u56de\u6536\u5dee\u4e0d\u591a\u5c31\u662f\u5f53\u67d0\u4e00\u4e2a\u8282\u70b9\u6240\u6709\u513f\u5b50\u7684\u6743\u503c\u90fd\u662f0\uff0c\u5c31\u628a\u8fd9\u4e2a\u8282\u70b9\u5220\u9664\uff08\u5730\u5740\u6254\u5783\u573e\u6876\uff09\uff0c\u52a8\u6001\u5f00\u70b9\u4f18\u5148\u4ece\u5783\u573e\u6876\u53d6\u5185\u5b58\n\n\u4e0b\u9762\u662f\u4e71\u4e03\u516b\u7cdf\u7684\u4ee3\u7801\uff0c\u4ee3\u7801\u91cc\u76f4\u63a5\u628ab\u6570\u7ec4\u5f53\u6210\u4e0a\u9762\u8bf4\u5f97c\u4e86\uff0cid\u5b58\u50a8\u7684\u662fa\u6570\u7ec4\u7684\u53cd\u51fd\u6570\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint a[200010], b[200010], n, m;\nint id[200010], root[200010];\nint tree[35000010], l[35000010], r[35000010], tot;\nint laji[20000010], top;\n\nvoid add(int &x, int cl, int cr, int pos, int val)\n{\n\tif (x == 0)\n\t{\n\t\tif (top > 0)\n\t\t\tx = laji[top--];\n\t\telse\n\t\t\tx = ++tot;\n\t}\n\tif (cl == cr)\n\t{\n\t\ttree[x] += val;\n\t\tif (tree[x] == 0)\n\t\t{\n\t\t\tlaji[++top] = x;\n\t\t\tx = 0;\n\t\t}\n\t\treturn;\n\t}\n\tint mid = (cl + cr) / 2;\n\tif (pos > mid)\n\t\tadd(r[x], mid + 1, cr, pos, val);\n\telse\n\t\tadd(l[x], cl, mid, pos, val);\n\ttree[x] = tree[l[x]] + tree[r[x]];\n\tif (l[x] == 0 && r[x] == 0)\n\t{\n\t\tlaji[++top] = x;\n\t\tx = 0;\n\t}\n}\n\nint get(int x, int cl, int cr, int pos)\n{\n\tif (x == 0)\n\t\treturn 0;\n\tif (cl == cr)\n\t\treturn cl <= pos ? tree[x] : 0;\n\tint mid = (cl + cr) / 2;\n\tif (pos > mid)\n\t\treturn tree[l[x]] + get(r[x], mid + 1, cr, pos);\n\telse\n\t\treturn get(l[x], cl, mid, pos);\n}\n\nvoid chenge(int x, int val, int key)\n{\n\tfor (int i = x; i <= n; i += i & -i)\n\t\tadd(root[i], 1, n, val, key);\n}\n\nint query(int x, int val)\n{\n\tint res = 0;\n\tfor (int i = x; i > 0; i -= i & -i)\n\t\tres += get(root[i], 1, n, val);\n\treturn res;\n}\n\ninline void read(int &x)\n{\n\tstatic char ch;\n\tx = 0;\n\tch = getchar();\n\twhile (!isdigit(ch))\n\t\tch = getchar();\n\twhile (isdigit(ch))\n\t\tx = x * 10 + ch - 48, ch = getchar();\n}\n\nint main()\n{\n\tread(n), read(m);\n\tfor (int i = 1; i <= n; i++)\n\t\tread(a[i]), id[a[i]] = i;\n\tfor (int i = 1; i <= n; i++)\n\t\tread(b[i]), b[i] = id[b[i]];\n\tfor (int i = 1; i <= n; i++)\n\t\tchenge(i, b[i], 1);\n\tfor (int la, ra, lb, rb, x, y, opd, i = 1; i <= m; i++)\n\t{\n\t\tread(opd);\n\t\tif (opd == 1)\n\t\t{\n\t\t\tread(la), read(ra), read(lb), read(rb);\n\t\t\tprintf(\"%d\\n\", query(rb, ra) + query(lb - 1, la - 1) - query(rb, la - 1) - query(lb - 1, ra));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tread(x), read(y);\n\t\t\tchenge(x, b[x], -1);\n\t\t\tchenge(y, b[y], -1);\n\t\t\tswap(b[x], b[y]);\n\t\t\tchenge(x, b[x], 1);\n\t\t\tchenge(y, b[y], 1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1546694959,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    },
    {
        "content": "\u6211\u5c45\u7136\u4e00\u53d1\u6700\u4f18\u89e3\uff1f~~\u53ef\u80fd $CF$ \u505a\u7684\u4eba\u6bd4\u8f83\u5c11~~\n\n\u6211\u778e $yy$ \u4e86\u4e00\u4e2a\u65e2\u4e0d\u662f\u6574\u4f53\u4e8c\u5206\u53c8\u4e0d\u662f $CDQ$ \u5206\u6cbb\u7684\u4e1c\u897f\uff0c\u5c45\u7136\u8fc7\u4e86\u3002\u3002\u3002\n\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u4e2a\u6392\u5217\uff01\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u8d21\u732e\uff0c\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u8be2\u95ee $l_1\\leq pos_a\\leq r_1,l_2\\leq pos_b\\leq r_2$ \u7684\u4e2a\u6570\uff0c\u5dee\u5206\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651 $[l,mid]$ \u7684\u64cd\u4f5c\u5bf9 $[mid+1,r]$ \u7684\u64cd\u4f5c\u7684\u8d21\u732e\uff0c\u4e2d\u95f4\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) ((x)&(-(x)))\nusing namespace std;\nconst int maxn=200000+10;\nint n,m,a[maxn],b[maxn],posa[maxn],posb[maxn],c[maxn],ans[maxn],cnt,tot;\n\nstruct Query{\n\tint op,x,y,v,id;\n}q[maxn*5],q1[maxn*5],q2[maxn*5];\n\ninline void read(int &x){\n\tx=0;int f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\tif(f==-1) x=-x;\n}\n\ninline void add(int x,int y){\n\tfor(;x<=n;x+=lowbit(x)) c[x]+=y;\n}\ninline int sum(int x){\n\tint ans=0;\n\tfor(;x;x-=lowbit(x)) ans+=c[x];\n\treturn ans;\n}\n\nvoid solve(int L,int R,int l,int r){\n\tif(L>R) return ;\n\tif(l==r){\n\t\tfor(int i=L;i<=R;i++){\n\t\t\tif(q[i].op==1) add(q[i].y,q[i].v);\n\t\t\tif(q[i].op==2) ans[q[i].id]+=q[i].v*sum(q[i].y);\n\t\t}\n\t\tfor(int i=L;i<=R;i++)\n\t\t\tif(q[i].op==1) add(q[i].y,-q[i].v);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1,cnt1=0,cnt2=0;\n\tfor(int i=L;i<=R;i++){\n\t\tif(q[i].x<=mid){\n\t\t\tif(q[i].op==1) add(q[i].y,q[i].v);\n\t\t\tq1[++cnt1]=q[i];\n\t\t}\n\t\telse {\n\t\t\tif(q[i].op==2) ans[q[i].id]+=q[i].v*sum(q[i].y);\n\t\t\tq2[++cnt2]=q[i];\n\t\t}\n\t}\n\tfor(int i=L;i<=R;i++)\n\t\tif(q[i].x<=mid&&q[i].op==1) add(q[i].y,-q[i].v);\n\tfor(int i=1;i<=cnt1;i++) q[L+i-1]=q1[i];\n\tfor(int i=1;i<=cnt2;i++) q[L+i+cnt1-1]=q2[i];\n\tsolve(L,L+cnt1-1,l,mid);solve(L+cnt1,R,mid+1,r);\n}\n\nint main()\n{\n\tread(n),read(m);\n\tint op,x,y,l,r;\n\tfor(int i=1;i<=n;i++) read(a[i]),posa[a[i]]=i;\n\tfor(int i=1;i<=n;i++) read(b[i]),posb[b[i]]=i;\n\tfor(int i=1;i<=n;i++) q[++cnt]=(Query){1,posa[i],posb[i],1,0};\n\tfor(int i=1;i<=m;i++){\n\t\tread(op),read(x),read(y);\n\t\tif(op==1){\n\t\t\tread(l),read(r);\n\t\t\tq[++cnt]=(Query){2,y,r,1,++tot};\n\t\t\tif(x>1) q[++cnt]=(Query){2,x-1,r,-1,tot};\n\t\t\tif(l>1) q[++cnt]=(Query){2,y,l-1,-1,tot};\n\t\t\tif(x>1&&l>1) q[++cnt]=(Query){2,x-1,l-1,1,tot};\n\t\t}\n\t\telse {\n\t\t\tq[++cnt]=(Query){1,posa[b[x]],x,-1,0};\n\t\t\tq[++cnt]=(Query){1,posa[b[y]],y,-1,0};\n\t\t\tswap(posb[b[x]],posb[b[y]]);swap(b[x],b[y]);\n\t\t\tq[++cnt]=(Query){1,posa[b[x]],x,1,0};\n\t\t\tq[++cnt]=(Query){1,posa[b[y]],y,1,0};\n\t\t}\n\t}\n\tsolve(1,cnt,1,n);\n\tfor(int i=1;i<=tot;i++) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1545398215,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1093E \u3010Intersection of Permutations\u3011"
    }
]