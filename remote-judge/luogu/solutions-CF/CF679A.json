[
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u5224\u65ad\u4e00\u4e2a\u5c0f\u4e8e100\u7684\u8d28\u6570\uff0c\u53ea\u7528\u7528\u5c0f\u4e8e50\u7684\u8d28\u6570\u7b5b\u5373\u53ef  \n\u4f46\u662f\uff0c\u6ce8\u610f\u4f8b\u59824\u8fd9\u6837\u7684\u6570\u9700\u8981\u7279\u6b8a\u5904\u7406  \n\u4e8e\u662f\u5982\u679c\u8f93\u51fa\u4e00\u4e2a\u8d28\u6570\u7684\u5230yes\uff0c\u90a3\u4e48\u9700\u8981\u5224\u65ad\u8d28\u6570\u7684\u5e73\u65b9  \n**\u6ce8\u610f**\u8d28\u6570\u7684\u5e73\u65b9\u5982\u679c\u5927\u4e8e100\u5c31\u522b\u5224\u4e86\n\n\u653e\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <string> \n#include <iostream>\n\nusing namespace std;\n\nconst int p_num = 15;\nint prime[20] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47};\n\nint main(){\n    int cnt = 0;\n    string s;\n    for (int i = 0; i < p_num; ++i){\n        cout << prime[i] << endl;\n        fflush(stdout);\n        cin >> s;\n        if (s[0] == 'y'){\n            if ((prime[i] * prime[i]) <= 100){\n                cout << (prime[i] * prime[i]) << endl;\n                fflush(stdout);\n                cin >> s;\n                if (s[0] == 'y'){\n                    cout << \"composite\" << endl;\n                    return 0;\n                }\n            }\n            ++cnt;\n            if (cnt >= 2){\n                cout << \"composite\" << endl;\n                return 0;\n            }\n        }\n    }\n    if (cnt == 1 || cnt == 0)\n        cout << \"prime\" << endl;\n    else\n        cout << \"composite\" << endl;\n    fflush(stdout);\n    return 0;\n}\n```",
        "postTime": 1556421768,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF679A \u3010Bear and Prime 100\u3011"
    },
    {
        "content": "\u65e2\u7136\u53ea\u80fd\u8be2\u95ee20\u6b21\uff0c\u6211\u4eec\u5e94\u8be5\u8be2\u95ee\u54ea\u4e9b\u4e1c\u897f\u5462\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8be2\u95ee\u6240\u670950\u4ee5\u5185\u7684\u8d28\u6570\uff0c\u5b83\u4eec\u662f:\n\n>2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n\n\u5982\u679c\u4e00\u4e2a\u6570\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u8d28\u6570\uff0c\u90a3\u4e48\u5b83\u5fc5\u5b9a\u662f\u5408\u6570\u3002\n\n\u4f46\u662f\u5982\u679c\u53ea\u8fd9\u8be2\u95ee\u8fd9\u4e9b\u7d20\u6570\u662f\u4f1aWA\u7684\uff0c\u53cd\u4f8b\u5c31\u662f:\n\n>4, 9, 25, 49\n\n\u5b83\u4eec\u90fd\u662f\u67d0\u4e2a\u8d28\u6570\u7684\u5e73\u65b9\uff0c\u5206\u89e3\u8d28\u56e0\u6570\u65f6\u65e0\u6cd5\u5206\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684\u8d28\u6570\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u8be2\u95ee\u5217\u8868\u91cc\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4ee3\u7801:\n```\n#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std; //\u5934\u6587\u4ef6\u548c\u547d\u540d\u7a7a\u95f4\nint main(){\n\tios::sync_with_stdio(false); //\u8f93\u5165\u8f93\u51fa\u52a0\u901f\n\tstring sAns; //\u5b58\u653e\u7ed9\u51fa\u7684\u5e94\u7b54\n\tint i,nCount=0; //i-\u5faa\u73af\u8ba1\u6570\u5668\uff0cnCount-\u5b58\u653e\"yes\"\u5e94\u7b54\u7684\u4e2a\u6570\n\tint arrAsk[19] = { 2, 3, 4, 5, 9, 7, 11, 13, 17, 19, 23, 25, 29, 31, 37, 41, 43, 47, 49 }; //\u5b58\u653e\u8be2\u95ee\u7684\u6570\u5b57\n\tfor (i = 0; i <= 18; ++i){ //\u4e00\u4e2a\u4e2a\u8be2\u95ee\n\t\tcout << arrAsk[i]<<endl; //\u63d0\u51fa\u8be2\u95ee\n\t\tfflush(stdout); //\u5237\u65b0\u6d41\n\t\tcin >> sAns; //\u8bfb\u5165\u5e94\u7b54\n\t\tif (sAns[0] == 'y'){ //\u5982\u679c\u5e94\u7b54\u4e3a\"yes\"\n\t\t\t++nCount; //\u8ba1\u6570\u5668\u52a0\u4e00\n\t\t}\n\t\tif (nCount >= 2){ //\u5982\u679c\u67092\u4e2a\u53ca\u4ee5\u4e0a\u7684\"yes\"\n\t\t\tcout << \"composite\"; //\u5408\u6570\n\t\t\tgoto endapp; //\u7ed3\u675f\n\t\t}\n\t}\n\tcout << \"prime\"; //\u5426\u5219\u4e3a\u7d20\u6570\n\treturn 0; //\u7ed3\u675f\n}\n```",
        "postTime": 1518086722,
        "uid": 74038,
        "name": "PC_DOS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF679A \u3010Bear and Prime 100\u3011"
    },
    {
        "content": "## \u96f6. \u5b89\u5229\uff1a\n\n[\u5b89\u5229\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\u3002](https://rsdbkhusky.github.io/)\n\n## \u4e00. \u5ba1\u9898\uff1a\n\n#### 1. \u524d\u63d0\u6761\u4ef6\uff1a\n\n- \u65e0\n\n#### 2. \u8be2\u95ee & \u8f93\u5165\uff1a\n\n- \u8be2\u95ee\uff1a\uff08\u6700\u591a $20$ \u6b21\uff09\n\n\t\u8f93\u51fa\u4e00\u4e2a\u6570 $x$\uff0c\u4ee3\u8868\u8be2\u95ee $x$ \u662f\u5426\u662f\u88ab\u731c\u6570\u7684\u7ea6\u6570\u3002\n\t\n- \u8f93\u5165\uff1a\n\n\t\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26 ```yes``` \u6216 ```no``` \u4ee3\u8868\u8fd9\u4e2a\u6570\u662f\u5426\u662f\u88ab\u731c\u6570\u7684\u7ea6\u6570\u3002\n\n#### 3. \u8f93\u51fa\uff1a\n\n- \u8be5\u6570\u662f\u5426\u662f\u7d20\u6570\u3002\n\n## \u4e8c. \u601d\u8def\n\n- \u6211\u4eec\u77e5\u9053\u8d28\u6570\u7684\u56e0\u6570\u6709\u4e14\u53ea\u6709 $1$ \u548c\u81ea\u5df1\uff0c\u4e5f\u5c31\u662f $1$ \u548c\u4e00\u4e2a\u8d28\u6570\u3002\u6240\u4ee5\u7b2c\u4e00\u611f\u89c9\u662f\u628a $1-100$ \u7684\u8d28\u6570\u95ee\u4e00\u904d\u3002\u4f46\u5f88\u5feb\u53d1\u73b0\u8be2\u95ee\u6b21\u6570\u4e0d\u591f\u3002\u800c\u4e14\u4e5f\u7528\u4e0d\u7740\uff0c\u56e0\u4e3a\uff0c**\u5982\u679c\u53ea\u95ee 1-50 \u5185\u7684\u8d28\u6570\uff1a**\n\n    1. \u5982\u679c\u67092\u4e2a\u53ca\u4ee5\u4e0a\u7684 $yes$ \u56de\u7b54\uff0c\u76f4\u63a5\u5224\u65ad\u4e3a\u5408\u6570\u3002\n\n    2. \u5982\u679c\u6709\u4e00\u4e2a $yes$ \u56de\u7b54\uff0c$51-100$ \u4e0d\u53ef\u80fd\u6709\u56e0\u6570\uff0c\u90a3\u6837\u6240\u731c\u6570\u5c31\u8d85100\u4e86\u3002\n\n    3. \u5982\u679c\u65e0 $yes$ \u56de\u7b54\uff0c$51-100$ \u5fc5\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u56e0\u6570\uff0c\u5c31\u662f\u4ed6\u672c\u8eab\u5440\u3002\n\n    \u6240\u4ee5\u95ee $51-100$ \u7684\u8d28\u6570\u662f\u65e0\u610f\u4e49\u7684\u3002\n\n- \u95ee\u5b8c\u8d28\u6570\u8fd8\u4e0d\u591f\uff0c\u4f8b\u5982 **4** \u5c31\u5224\u65ad\u4e0d\u51fa\u6765\uff0c\u56e0\u4e3a\u672c\u4ea4\u4e92\u7a0b\u5e8f\u53ea\u5224\u65ad\u6709\u6ca1\u6709\u8fd9\u4e2a\u56e0\u6570\uff0c\u4e0d\u80fd\u8bf4\u51fa\u8be5\u56e0\u6570\u4e2a\u6570\u3002\u6240\u4ee5\u8fd8\u5f97\u5224\u65ad\u8d28\u6570\u7684\u5e73\u65b9\u6570\uff08$100$ \u4ee5\u5185\u7684\uff09\n\n## \u4e09. \u4ee3\u7801\n\n\u56e0\u4e3a\u6bcf\u4e2a\u8f93\u51fa\u540e\u90fd\u8ddf\u4e86```endl```\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u52a0```fflush(stdout)```\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint primes[20] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, \n\t\t\t\t  37, 41, 43, 47};\t//1-50\u5185\u8d28\u6570\uff0c\u517115\u4e2a\nint sq_nums[10] = {4, 9, 25, 49};\t//\u8d28\u6570\u7684\u5e73\u65b9\u6570(100\u4ee5\u5185\u7684) \nstring feedback;\t//\u4ea4\u4e92\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\nbool once;\t//\u662f\u5426\u5df2\u7ecf\u8fd4\u56de\u8fc7\u4e00\u6b21yes\u4e86\n\nint main() {\n\tfor (int i = 0; i < 15; ++i) {\n\t\tcout << primes[i] << endl;\n\t\tcin >> feedback;\n\t\tif (feedback == \"yes\") {\n\t\t\tif (!once) {\n\t\t\t\tonce = 1;\n\t\t\t} else {\n\t\t\t\tcout << \"composite\" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} \n\t}\n\tfor (int i = 0; i < 4; ++i) {\n\t\tcout << sq_nums[i] << endl;\n\t\tcin >> feedback;\n\t\tif (feedback == \"yes\") {//\u8fd9\u4e9b\u5e73\u65b9\u6570\u672c\u6765\u5c31\u662f\u5408\u6570\uff0c\u6240\u4ee5\u53ea\u8981\u8fd4\u56de1\u6b21yes\u5c31\u53ef\u4ee5\u5224\u65ad\u4e86\n\t\t\tcout << \"composite\" << endl;\n\t\t\treturn 0;\t\t\t\n\t\t}\n\t}\n\tcout << \"prime\" << endl;\n\treturn 0;\n} \n```",
        "postTime": 1612747892,
        "uid": 392727,
        "name": "rsdbk_husky",
        "ccfLevel": 8,
        "title": "Luogu CF679A Bear and Prime 100"
    },
    {
        "content": "~~\u53d1\u9898\u89e3\u7684\u4eba\u597d\u5c11\u554a\uff0c\u90a3\u6211\u6765\u53d1\u4e00\u7bc7\u5427~~   \n\u8fd9\u9053\u9898\u6709\u4e0d\u5c11\u9677\u9631\uff0c~~\u4f5c\u4e3a\u849f\u84bb\u7684\u6211\u88ab\u5751\u4e86\u8bb8\u591a(>=2)\u56deQWQ~~   \n\u9996\u5148\u8981\u5224\u65ad\u9690\u85cf\u6570(\u95ed\u5408\u533a\u95f4$[2,100]$)\uff0c\u6211\u4eec\u53ef\u4ee5\u95ee20\u4e2a\u95ee\u9898\u3002   \n\u800c**100\u4ee5\u5185\u7684\u5408\u6570\u80af\u5b9a\u4f1a\u88ab50\u4ee5\u5185\u7684\u591a(>=2)\u4e2a\u7d20\u6570\u6574\u9664**\uff0c\u4f8b\u598298\u53ef\u4ee5\u88ab2\u548c7\u6574\u9664\uff08\u672c\u6587\u8ba8\u8bba\u7684\u6574\u9664\u4e0d\u5305\u62ec\u88ab1\u548c\u6570\u7684\u672c\u8eab\u6574\u9664\uff09\u3002\u6240\u4ee5\u9a6c\u4e0a\u6211\u4eec\u5c31\u53ef\u4ee5\u6574\u7406\u51fa\u6211\u4eec\u7684\u201c\u95ee\u9898\u5217\u8868\u201d\n> 2,3,5,7,11,13,17,19,23,29,31,37,41,43,47 (\u517115\u4e2a)\n\n~~\u7136\u540e\u6211\u4eec\u5c31\u8fd9\u6837\u5199\u51fa\u4ee3\u7801\uff0c\u63d0\u4ea4\uff0c\u6700\u540e\u2026\u2026 WA!~~\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f   \n\u56e0\u4e3a\u4e0a\u9762\u7684\u95ee\u9898\u5bf9\u4e8e**\u5e73\u65b9\u6570**\u4e0d\u9002\u7528\uff0c\u4f8b\u598249\u53ea\u80fd\u88ab7\u6574\u9664\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u518d\u589e\u52a0**\u9488\u5bf9\u5e73\u65b9\u6570\u7684\u95ee\u9898**\u3002\n> 4,9,25,49\n\n\u6ce8\u610f\uff1a**\u4e0d\u589e\u52a036**\uff0c36\u867d\u7136\u662f\u5e73\u65b9\u6570\uff0c\u4f46\u662f\u5b83\u80fd\u88ab2,3,6\u6574\u9664\uff0c\u4e0d\u9700\u8981\u9488\u5bf9\u63d0\u95ee\u3002   \n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u5927\u6982\u7684\u601d\u8def\uff1a\u8f93\u51fa\u95ee\u9898\uff0c\u63a5\u6536\u56de\u7b54\uff0c\u5f53\"yes\"\u6570\u5927\u4e8e\u6216\u7b49\u4e8e2\u65f6\uff0c\u8f93\u51fa\"composite\"\uff08\u5408\u6570\uff09\uff0c\u5426\u5219\u8f93\u51fa\"prime\"\u3002   \n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff0c\u4f9b\u53c2\u8003\uff1a\uff08\u8bd1\u8005\u63d0\u4f9b\u4e86\u6a21\u677f\uff09\n```cpp\n#include <iostream>\nusing namespace std;\nconst int q[19]={2,3,4,5,7,9,11,13,17,19,23,25,29,31,37,41,43,47,49}; //\u95ee\u9898\u5217\u8868\nint main()\n{\n\tchar ans[4];  //\u7b54\u6848\n\tint cnt=0;  //\u8ba1\u6570\n\tfor(register int i=0;i<19;i++)  //\u9010\u4e2a\u63d0\u95ee\n\t{\n\t\tcout<<q[i]<<endl;  //\u63d0\u95ee\n\t\tfflush(stdout);  //\u5237\u65b0\u6d41\n\t\tcin>>ans;  //\u63a5\u6536\u56de\u7b54\n\t\tif(ans[0]=='y') cnt++;  //\u7edf\u8ba1\n\t\tif(cnt>=2)  //\"yes\"\u6570>=2,\u4e3a\u5408\u6570\n\t\t{\n\t\t\tcout<<\"composite\"<<endl;  //\u8f93\u51fa\u5224\u65ad\n\t\t\tfflush(stdout);\n\t\t\treturn 0;  //\u76f4\u63a5\u9000\u51fa\n\t\t} \n\t}\n\tcout<<\"prime\"<<endl;  //\u8f93\u51fa\u5224\u65ad\n\tfflush(stdout);\n\treturn 0;\n}\n```\n~~\u6c42\u901a\u8fc7\u2026\u2026~~",
        "postTime": 1581137696,
        "uid": 149493,
        "name": "stdout",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF679A \u3010Bear and Prime 100\u3011"
    },
    {
        "content": "## CF679A Bear and Prime 100 \u9898\u89e3\n\n\u8fd9\u662f\u4e00\u9053 **\u4ea4\u4e92\u9898**\n\n\u6709\u4e00\u4e2a\u5728\u95ed\u533a\u95f4$[2,100]$\u91cc\u9762\u7684\u6574\u6570X\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u5224\u65ad\u6574\u6570x\u662f\u8d28\u6570\u8fd8\u662f\u5408\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u95ee20\u6b21\u3002\n\n\u5bb9\u6613\u77e5\u9053\uff1a**100\u4ee5\u5185\u7684\u5408\u6570\u80af\u5b9a\u4f1a\u88ab50\u4ee5\u5185\u7684\u591a(>=2)\u4e2a\u7d20\u6570\u6574\u9664**\n\uff08\u53ca\u201c1+1\u201d\u5b9a\u7406\uff0c\u867d\u7136\u6ca1\u6709\u8bc1\u660e\uff0c\u4f46\u5728100\u4ee5\u5185\u8db3\u591f\u4e86\uff09\n\neg\uff1a15 = 3 * 5\uff0c77 = 7 * 11 ......\n\n\n\u7531\u4e8e\u5728$[2,50]$\u53ea\u6709\n\n[${2,3,5,7,11,13,17,19,23,29,31,37,41,43,47}$ ] \n\n\u8fd9 15 \u4e2a\u7d20\u6570\uff0c\u6240\u4ee5\u6211~~\u5929\u771f\u7684\u4ee5\u4e3a\u51fa\u9898\u4eba\u8111\u5b50\u8fdb\u6c34\u4e86\uff0c\u591a\u7ed9\u4e865\u6b21\u8be2\u95ee~~\uff0c\u4ea4\u4e86\u4e0a\u53bb\uff0c\u7406\u6240\u5f53\u7136\u7684 **WA** \u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\n\u56e0\u4e3a\u4e0a\u9762\u7684\u8be2\u95ee\u5bf9\u4e8e\u5e73\u65b9\u6570\u4e0d\u9002\u7528\uff0c\u4f8b\u598249\u53ea\u80fd\u88ab7\u6574\u9664\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u518d\u589e\u52a0\u9488\u5bf9\u5e73\u65b9\u6570\u7684\u8be2\u95ee\u3002\u89c1\u4e0b\n\n$2^2$ = 4; $3^2$ = 9; $5^2$ = 25; $7^2$ = 49; \n\n(\u540c\u201c1+1\u201d\u5b9a\u7406\uff0c\u53ea\u5728 50 \u4ee5\u5185\u627e\uff09\n\n\n```cpp\n\n#include <iostream>\n\nconst int q[19]={2,3,4,5,7,9,11,13,17,19,23,\n25,29,31,37,41,43,47,49}; // \u6253\u8868\n\nvoid CF679A() {\n    char ans[4];\n    cnt=0;\n    for(int i=0;i<19;i++) {\n        std::cout<<q[i]<<std::endl; // \u8be2\u95ee\n        fflush(stdout); // \u6e05\u7a7a\u8f93\u51fa\n        std::cin>>ans;\n        if(ans[0]=='y') cnt++;\n        if(cnt>=2) {\n            std::cout<<\"composte\"<<std::endl; // \u5224\u65ad\n            fflush(stdout);\n            return; // \u6210\u529f\u540e\uff0c\u76f4\u63a5\u8fd4\u56de\n        } \n    }\n    std::cout<<\"prime\"<<std::endl; // \u540c\u4e0a\n    fflush(stdout);\n    return;\n}\n\nint main() {\n    CF679A();\n    return 0; // \u5b8c\u7ed3\n}\n\n```\n\n~~\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6c42\u8fc7~~\n",
        "postTime": 1584498385,
        "uid": 259490,
        "name": "ChthollyForever",
        "ccfLevel": 0,
        "title": "CF679A Bear and Prime 100 \u9898\u89e3"
    },
    {
        "content": "### \u4e00\u3001\u601d\u8def\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u4ece\u4e0b\u9762\u7684\u8d28\u6570\u4e2d\u9009\u62e9 $2$ \u6b21\uff08\u6bcf\u6b21\u9009\u62e9\u7684\u8d28\u6570\u53ef\u4ee5\u76f8\u540c\uff09\uff0c\u7136\u540e\u76f8\u4e58\uff0c\u5c31\u53ef\u4ee5\u7ec4\u6210\u6240\u6709\u5927\u4e8e\u7b49\u4e8e $2$ \u5e76\u5c0f\u4e8e\u7b49\u4e8e $100$ \u7684\u5408\u6570\u3002\n\n$$2,3,5,7,11,13,17,19,23,29,31,37,41,43,47$$\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8be2\u95ee\u8fd9\u4e9b\u6570\u662f\u4e0d\u662f $x$\uff08\u610f\u4e49\u5982\u9898\u76ee\uff09\u7684\u56e0\u6570\u3002\u5982\u679c\u5176\u4e2d\u6709 $2$ \u4e2a\u6216\u4ee5\u4e0a\u7684\u6570\u662f $x$ \u7684\u56e0\u6570\uff0c$x$ \u5c31\u662f\u5408\u6570\u3002\u5426\u5219\u5c31\u662f\u8d28\u6570\u3002\n\n\u4f46\u662f\uff0c\u4e3e\u51e0\u4e2a\u53cd\u4f8b\uff1a$4$\u3001$9$\u3001$25$\u3001$49$\u3002\n\n\u8fd9\u4e9b\u6570\u90fd\u662f\u4e00\u4e2a\u8d28\u6570\u7684\u5e73\u65b9\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651\u8be2\u95ee\u7684\u6570\u7684\u5e73\u65b9\u662f\u4e0d\u662f $x$ \u7684\u56e0\u6570\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u5f97\u51fa\u4e86\u5b8c\u6574\u4ee3\u7801\u3002\n\n### \u4e8c\u3001\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint ask[20]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};//\u5b58\u50a8\u9700\u8981\u8be2\u95ee\u7684\u6570\u3002\nint cnt;//\u56e0\u6570\u4e2a\u6570\u3002\nint main()\n{\n\tfor(int i=0;i<15;i++)\n\t{\n\t\tprintf(\"%d\\n\",ask[i]);//\u8be2\u95ee\u3002\n\t\tfflush(stdout);\n\t\tchar status[4];\n\t\tscanf(\"%s\",&status);\n\t\tif(status[0]=='y')//\u8be2\u95ee\u7684\u6570\u662fx\u7684\u56e0\u6570\u3002\n\t\t{\n\t\t\tcnt++;\n\t\t\tif(ask[i]*ask[i]<=100)//\u8be2\u95ee\u7684\u6570\u7684\u5e73\u65b9\u6709\u53ef\u80fd\u662fx\u7684\u56e0\u6570\u3002\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",ask[i]*ask[i]);//\u518d\u8be2\u95ee\u4e00\u6b21\u3002\n\t\t\t\tfflush(stdout);\n\t\t\t\tscanf(\"%s\",&status);\n\t\t\t\tif(status[0]=='y')\n\t\t\t\t{\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(cnt>=2)//\u56e0\u6570\u4e2a\u6570\u5927\u4e8e2\u3002\n\t\t{\n\t\t\tprintf(\"composite\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"prime\\n\");\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n\n```\n\n### \u4e09\u3001\u540e\u8bb0\n\n\u8bb0\u5f55\uff1a<https://www.luogu.com.cn/record/51843130>\u3002\n\nBy [dengzijun](https://www.luogu.com.cn/user/387836)",
        "postTime": 1623849665,
        "uid": 387836,
        "name": "dengzijun",
        "ccfLevel": 5,
        "title": "CF0679A\u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n* \u4ea4\u4e92\u9898\u3002\n* \u4ea4\u4e92\u5e93\u751f\u6210\u4e00\u4e2a$[2,100]$\u7684\u6570\u3002\n* $20$\u6b21\u8be2\u95ee\u5224\u65ad\u662f\u5426\u662f\u8d28\u6570\u3002\n## \u9898\u76ee\u5206\u6790\n* $[2,100]$\u95f4\u7684\u6240\u6709\u5408\u6570\u90fd\u53ef\u4ee5\u7528$2,3,5,7,11,13,17,19,23,29,31,37,41,43,47$\u7ec4\u5408\u800c\u6210\u3002\n* \u4e00\u4e2a\u6570\u53ef\u4ee5\u6709\u591a\u4e2a\u76f8\u540c\u6570\u6784\u6210\uff0c\u5982\u5408\u6570$4=2*2$\u3002\n\n\u663e\u7136\uff0c\u53ea\u9700\u8f93\u5165\u5982\u4e0a\u7684\u8d28\u6570\uff0c\u5982\u679c\u6709$2$\u4e2a\u53ca\u4ee5\u4e0a\u8fd4\u56de'yes'\u5373\u4e3a\u5408\u6570\u3002\n\n\u5982\u679c\u6709\u4e00\u4e2a\u8d28\u6570\u662f\u5b83\u7684\u56e0\u6570\uff0c\u8003\u8651\u90a3\u4e2a\u8d28\u6570\u7684\u5e73\u65b9\u662f\u5426\u662f\u5b83\u7684\u56e0\u6570\u3002\n\n\u56e0\u6b64\uff0c\u6700\u591a\u9700\u8981\u8be2\u95ee$16$\u6b21\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nconst int a[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};\nusing namespace std;\nint main()\n{\n    char s[10],cnt=0;\n    for(int x=0;x<=14;x++)\n    {\n        cout<<a[x]<<endl;\n        fflush(stdout);\n        cin>>s;\n        if(s[0]=='y')\n        {\n            cnt++;\n            if(cnt>=2) return puts(\"composite\")*0;\n            if(a[x]*a[x]<=100)\n            {\n                cout<<a[x]*a[x]<<endl;\n                fflush(stdout);\n                cin>>s;\n                if(s[0]=='y')\n                {\n                    cnt++;\n                    if(cnt>=2) return puts(\"composite\")*0;\n                }\n            }\n        }\n    }\n    cout<<\"prime\"<<endl;\n    fflush(stdout);\n    return 0;\n}\n```\n```pascal\nconst\n  a:array[1..15] of integer=(2,3,5,7,11,13,17,19,23,29,31,37,41,43,47);\nvar\n  x,c:integer;\n  s:string;\nbegin\n  c:=0;\n  for x:=1 to 15 do\n  begin\n    writeln(a[x]);\n    flush(output);\n    readln(s);\n    if(s[1]='y')then\n    begin\n      c:=c+1;\n      if(c>=2)then begin writeln('composite');exit;end;\n      if(a[x]*a[x]<=100)then\n      begin\n        writeln(a[x]*a[x]);\n        flush(output);\n        readln(s);\n        if(s[1]='y')then\n        begin\n          c:=c+1;\n          if(c>=2)then begin writeln('composite');exit;end;\n        end;\n      end;\n    end;\n  end;\n  writeln('prime');\n  flush(output);\nend.\n```\n",
        "postTime": 1614570419,
        "uid": 320087,
        "name": "N_z_",
        "ccfLevel": 7,
        "title": "CF679A-\u3010Bear and Prime 100\u3011\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6bd4\u8f83\u6c34\u7684\u4ea4\u4e92\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff1a\u5728 $100$ \u91cc\u9762\u7684\u5408\u6570\uff0c\u4e00\u5b9a\u662f $2$ \u6216\u4ee5\u4e0a\u5728 $50$ \u4ee5\u5185\u7684\u8d28\u6570\u5408\u6210\u7684\u3002\uff08\u6bd4\u5982\u8bf4\uff1a $94=2*47,99=3*3*11$ \u7b49\u3002\uff09\n\n\u4f46\u662f\u4e0a\u9762\u7684\u6027\u8d28\u4e0d\u6ee1\u8db3\u8fd9\u4e9b\u5e73\u65b9\u6570\uff1a$2^2=4,3^2=9,5^2=25,7^2=49$\u3002\u6240\u4ee5\u8bf4\uff1a\u6211\u4eec\u53ef\u4ee5\u8be2\u95ee $19$ \u6b21\u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\ninline int solve() {\n\tfor (int i = 1; i <= 19; i++) {\n\t\tprintf(\"%d\\n\", zs[i]);\n\t\tfflush(stdout);\n\t\tstring s;\n\t\tcin >> s;\n\t\tif (s[0] == 'y') cnt++;\n\t\tif (cnt >= 2) {\n\t\t\tprintf(\"composite\\n\");\n\t\t\tfflush(stdout);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"prime\\n\");\n\tfflush(stdout);\n    return 0;\n}\n```",
        "postTime": 1609849219,
        "uid": 296967,
        "name": "ksdq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF679A \u3010Bear and Prime 100\u3011"
    },
    {
        "content": "~~\u5176\u5b9e\u6211\u6839\u672c\u4e0d\u77e5\u9053\u4ea4\u4e92\u63d0\u4e2d\u7684flush\u662f\u5565\uff0c\u6240\u4ee5\u6211\u6839\u672c\u6ca1\u7528fflush(stdout)~~\n\n\u5982\u679c\u4e00\u4e2a\u6570\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u8d28\u56e0\u6570\uff0c\u90a3\u5c31\u662f\u5408\u6570\u3002\n\n\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5408\u6570X\uff0c\u5c0f\u5b66\u7406\u8bba\u5df2\u7ecf\u8bc1\u660e\u51faX\u53ef\u4ee5\u88ab\u67d0\u4e2a\u8d28\u6570\u6574\u9664\uff0c\u5c06X\u9664\u4ee5\u8fd9\u4e2a\u8d28\u6570\uff0c\u5f97\u6570\u5982\u679c\u662f\u8d28\u6570\uff0c\u90a3\u4e48X\u6709\u4e24\u4e2a\u8d28\u56e0\u6570\uff0c\u5426\u5219\uff0c\u5c06X\u9664\u4ee5\u8fd9\u4e2a\u8d28\u6570\u7684\u7ed3\u679c\u7ee7\u7eed\u5206\u89e3\uff0c\u6700\u540e\u4f1a\u6709 >= 2\u4e2a\u8d28\u56e0\u6570\n\n\u4f46\u5bf9\u4e8e $\\large p$ \u4e3a\u8d28\u6570\uff0c\u5c06C\u8bbe\u4e3a\u5f62\u5982 $\\Large p ^ n$\u7684\u6570\uff0c\u5c06C\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u53ef\u5f97\u51fa\uff1a\n\n$\\LARGE C = p ^ n$\n\n\u56e0\u6b64\uff0cC\u53ea\u6709\u4e00\u4e2a\u8d28\u56e0\u6570\n\n\u6240\u4ee5\u5bf9\u4e8e\u5e73\u65b9\u6570\u662f\u4e2a\u95ee\u9898\uff0c\u4f8b\u59829\uff0c3 * 3 = 9\u6240\u4ee59\u4e3a\u5408\u6570\uff0c\u4f463\u53ea\u662f\u4e00\u4e2a\u8d28\u56e0\u6570\uff0c\u6240\u4ee5\u8981\u52a03\uff0c 5\uff0c 9\u5230\u8868\u4e2d\n\n\u6211\u4e0d\u4f1afflush\uff0c\u54c7\uff1a\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nchar ch[5];\n\nconst int zs[20] = {0, 2, 3, 4, 5, 7, 9, 11, 13, 17, 19, 23, 25, 29, 31, 37, 41, 43, 47, 49};\n\nint main()\n{\n    int cnt = 0;\n    for(register int i = 1; i <= 19; i++)\n    {\n        cout << zs[i] << endl;\n        cin >> ch;\n        if(ch[0] == 'y')\n        {\n            cnt++;\n        }\n        if(cnt >= 2)\n        {\n            cout << \"composite\\n\";\n            return 0;\n        }\n    }\n    cout << \"prime\\n\";\n    return 0;\n}\n```\n",
        "postTime": 1606222202,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF679A \u3010Bear and Prime 100\u3011"
    }
]