[
    {
        "content": "\u9047\u5230\u8fd9\u79cd\u4ea4\u6362\u53c8\u6392\u5e8f\u7684\u9898\uff0c\u76f4\u63a5\u8003\u8651\u6392\u5e8f\u524d\u540e\u4e00\u4e2a\u6570\u7684\u4f4d\u7f6e\u53d8\u5316\u4f60\u5c31\u8d62\u4e00\u534a\u4e86\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u7531\u4e8e\u6bcf\u4e2a\u4eba\u4ea4\u6362\u4e00\u6b21\u5c31\u4f1a\u6539\u53d8\u4e00\u6b21\u65b9\u5411\uff0c\u800c\u521d\u59cb\u548c\u6700\u540e\u65b9\u5411\u9700\u8981\u76f8\u540c\uff0c\u6240\u4ee5\u6bcf\u4e2a\u4eba\u521d\u59cb\u548c\u6700\u540e\u7684\u4f4d\u7f6e\u4e4b\u95f4\u76f8\u5dee\u7684\u8ddd\u79bb\u5fc5\u7136\u4e3a\u5076\u6570\u3002\n\n\u5982\u679c\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u90a3\u5f53\u7136\u6392\u4e2a\u5e8f\u76f4\u63a5\u778e\u5224\u65ad\u4e00\u4e0b\u5c31\u884c\u4e86\uff1b\u7136\u800c\u6709\u91cd\u590d\u5143\u7d20\u5c31\u6709\u70b9\u96be\u641e\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u5143\u7d20\u5982\u679c\u79fb\u52a8\u4e86\u5076\u6570\u6b21\u90a3\u4e48\u5b83\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u7684\u5947\u5076\u6027\u5fc5\u7136\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u4e24\u4e2a\u6876\uff1a\u7528 $f_{i,0}$ \u8868\u793a $i$ \u8fd9\u4e2a\u503c\u5728\u539f\u5e8f\u5217\u5076\u6570\u4f4d\u4e0a\u51fa\u73b0\u7684\u6b21\u6570\uff0c$g_{i,0}$ \u8868\u793a $i$ \u8fd9\u4e2a\u503c\u5728\u539f\u5e8f\u5217\u5947\u6570\u4f4d\u4e0a\u51fa\u73b0\u7684\u6b21\u6570\u3002$f_{i,1}$ \u8868\u793a $i$ \u8fd9\u4e2a\u503c\u5728\u6392\u5e8f\u540e\u7684\u65b0\u5e8f\u5217\u5076\u6570\u4f4d\u4e0a\u51fa\u73b0\u6b21\u6570\uff0c$g_{i,1}$ \u7c7b\u4f3c\u3002\n\n\u90a3\u4e48\u7a0d\u52a0\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u5bf9\u4efb\u610f $1\\le i\\le V$ \u6709 $f_{i,0}=f_{i,1},g_{i,0}=g_{i,1}$ \u5373\u53ef\u3002\u5176\u4e2d $V$ \u4e3a\u503c\u57df\u3002\n\n\u5176\u4e2d\u7684\u9053\u7406\u4e0d\u96be\u8bb2\uff1a\u82e5\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u79fb\u52a8\u65b9\u5f0f\uff0c\u90a3\u4e48\u4e00\u4e2a\u5143\u7d20\u5982\u679c\u539f\u6765\u5728\u5947\u6570\u4f4d\u4e0a\uff0c\u6700\u540e\u4e5f\u4e00\u5b9a\u5728\u5947\u6570\u4f4d\u4e0a\uff0c\u8fd9\u8868\u660e\u5bf9\u6bcf\u4e2a\u503c $i$\uff0c\u5b83\u5728\u5947\u6570\u4f4d\u4e0a\u7684\u51fa\u73b0\u6b21\u6570\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\uff1b\u5076\u6570\u540c\u7406\u3002\u5fc5\u8981\u6027\u662f\u663e\u7136\u7684\u3002\n\n\u4e8e\u662f\u53ea\u9700\u8981\u6392\u4e2a\u5e8f\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u4f46\u7531\u4e8e\u503c\u57df\u5f88\u5c0f\u5176\u5b9e\u53ef\u4ee5\u7528\u8ba1\u6570\u6392\u5e8f\u505a\u5230 $O(n)$\uff0c\u4e0d\u8fc7\u6ca1\u5fc5\u8981\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nint read(){\n\tint x=0,f=1;char ch=getchar();\n\tfor(;(!(ch>='0'&&ch<='9'));ch=getchar())if(ch=='-')f=-1;\n\tfor(;(ch>='0'&&ch<='9');ch=getchar())x=(x<<1)+(x<<3)+(ch-'0');\n\treturn x*f;\n}\n\nconst int MN=1e5+5;\nint n,a[MN],f[MN],g[MN];\n\nsigned main(void){\n\t\n\tint tt=read();while(tt--){\n\t\tn=read();bool ans=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\ta[i]=read();\n\t\t\tf[a[i]]+=(i%2==0),g[a[i]]+=(i%2==1);\n\t\t}\n\t\tsort(a+1,a+n+1);\n\t\tfor(int i=1;i<=n;i++)f[a[i]]-=(i%2==0),g[a[i]]-=(i%2==1);\n\t\tfor(int i=1;i<=n;i++)if(f[a[i]]!=0||g[a[i]]!=0)ans=0;\n\t\tputs(ans?\"YES\":\"NO\");\n\t\tfor(int i=1;i<=n;i++)f[a[i]]=g[a[i]]=0;\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1636368590,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1545A AquaMoon and Strange Sort"
    },
    {
        "content": "### \u9898\u610f\u5173\u952e\u70b9\uff1a\n\n1. \u521d\u59cb\u5168\u90e8\u5411\u53f3\n\n2. \u6309 $a_i$ \u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\n\n3. \u53ea\u80fd\u79fb\u52a8**\u76f8\u90bb**\u7684\u7684\u4e24\u4e2a\u4eba\n\n4. \u6bcf\u6b21\u79fb\u52a8\uff0c\u65b9\u5411\u6539\u53d8\u4e00\u6b21\n\n### \u601d\u8def\u8fc7\u7a0b\uff1a\n\n\u770b\u5230\u76f8\u90bb\u53c8\u6709\u6392\u5e8f\uff0c\u6211\u7b2c\u4e00\u53cd\u5e94\u662f\u5192\u6ce1\u6392\u5e8f\uff0c\u4f46\u4e00\u770b\u6570\u636e\u8303\u56f4\u548c\u9898\u76ee\u8981\u6c42\uff0c\u663e\u7136\u4e0d\u5bf9\uff0c\u5207\u6362\u601d\u8def\u3002\n\n\u6240\u6709\u4eba\u5f00\u59cb\u65f6\u90fd\u5411\u53f3\uff0c\u6700\u7ec8\u4e5f\u90fd\u5411\u53f3\uff08\u5047\u8bbe\u80fd\u529e\u5230\uff09\uff0c\u6bcf\u79fb\u52a8\u4e00\u6b21\uff0c\u9762\u5411\u7684\u65b9\u5411\u6539\u53d8\u4e00\u6b21\uff0c\u90a3\u4e48\u8981\u6ee1\u8db3\u8981\u6c42\uff0c\u663e\u7136\u8fd9\u4e2a\u4eba\u8981\u7ecf\u8fc7\u5076\u6570\u6b21\u79fb\u52a8\uff0c\u4ece**\u539f\u4f4d\u7f6e**\u79fb\u52a8\u5230**\u6392\u5e8f\u4e4b\u540e\u7684\u4f4d\u7f6e**\u3002\n\n\u6700\u76f4\u63a5\u7684\u611f\u89c9\u5c31\u662f\u770b\u770b\u67d0\u4e2a\u6570\u539f\u6765\u7684\u4f4d\u7f6e\u548c\u540e\u6765\u7684\u4f4d\u7f6e\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u662f\u4e0d\u662f\u5076\u6570\u3002\n\n\u90a3\u4e48\uff0c\u8fd9\u4e48\u60f3\u5bf9\u4e0d\u5bf9\u5462\u3002\n\n\u662f\u5bf9\u7684\uff1a\n\n\u5148\u5047\u8bbe\u76f4\u63a5\u5f80\u76ee\u6807\u4f4d\u7f6e\u79fb\u52a8\uff0c\u90a3\u4e48\u79fb\u52a8\u6b21\u6570\u5c31\u662f abs(\u521d\u59cb\u4f4d\u7f6e - \u6392\u5e8f\u540e\u4f4d\u7f6e) \uff0c\u5047\u8bbe\u4e2d\u95f4\u7ecf\u8fc7\u5468\u6298\uff0c\u90a3\u4e48\u5411\u5de6\u591a\u8d70\u7684\u6b21\u6570**\u7b49\u4e8e**\u5411\u53f3\u591a\u8d70\u7684\u6b21\u6570\uff0c\u5728\u4f4d\u7f6e\u7edd\u5bf9\u503c\u4e0a\u52a0\u4e86\u4e2a\u5076\u6570\uff0c\u5bf9\u539f\u6709\u7684\u5947\u5076\u6027\u65e0\u5f71\u54cd\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5750\u6807\u5947\u5076\u6765\u5224\u65ad\u3002\n\n\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u600e\u4e48\u5224\u65ad\uff1a\n\n\u65e2\u7136\u8d70\u5076\u6570\u6b65\uff0c\u90a3\u4e48\u539f\u6765\u4f4d\u7f6e\u662f\u5947\u6570\uff0c\u8d70\u5b8c\u540e**\u8fd8\u662f**\u5947\u6570\uff0c\u5076\u6570\u4ea6\u7136\u3002\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u7edf\u8ba1\u6709\u51e0\u6b21\u662f\u5728\u5947\u6570\u4f4d\u7f6e\u4e0a\uff0c\u6709\u51e0\u6b21\u5728\u5076\u6570\u4f4d\u7f6e\u4e0a\uff0c\u6392\u5e8f\u540e\u518d\u7edf\u8ba1\u4e00\u6b21\uff0c\u6bd4\u8f83\u6392\u5e8f\u524d\u540e\u5947\u6570\u4f4d\u7f6e\u6570\u91cf\u548c\u5076\u6570\u4f4d\u7f6e\u6570\u91cf\u662f\u5426\u5bf9\u5e94\u76f8\u7b49\u5373\u53ef\u3002\u76f8\u7b49\u5c31\u662f\u80fd\u5b9e\u73b0\uff0c\u4e0d\u76f8\u7b49\u5c31\u662f\u4e0d\u80fd\u5b9e\u73b0\u3002\n\n\u56e0\u4e3a\u67d0\u4e2a\u6570\u7684\u4e2a\u6570\u4e0d\u4f1a\u53d8\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u7edf\u8ba1\u5947\u6570\uff08\u5076\u6570\uff09\u5373\u53ef\u3002\n\n### \u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint inital[100005];\nint sorted[100005];\nint arr[100005];\nint n;\nint main(){\n\tint t;cin >>t;\n\twhile(t--){\n\t\tcin >>n;\n\t\tint mmax=0;\n\t\tint mmin=100005;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tcin >>arr[i];\n\t\t\tmmax=max(mmax,arr[i]);\n\t\t\tmmin=min(mmin,arr[i]);\n\t\t}\n\t\tfor(int i=mmin;i<=mmax;i++)inital[i]=sorted[i]=0;\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\tif(i%2){\n\t\t\t\tinital[arr[i]]++;\n\t\t\t}\n\t\t}\n\t\tsort(arr+1,arr+1+n);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(i%2){\n\t\t\t\tsorted[arr[i]]++;\n\t\t\t}\n\t\t}\n\t\tbool flag=1;\n\t\tfor(int i=mmin;i<=mmax;i++){\n\t\t\tif(inital[i]!=sorted[i]){\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)cout <<\"YES\"<<endl;\n\t\telse cout <<\"NO\"<<endl;\n\t}\n}\n```\n",
        "postTime": 1629125347,
        "uid": 448502,
        "name": "JCLinux",
        "ccfLevel": 0,
        "title": "CF1545A \u9898\u89e3"
    },
    {
        "content": "\u770b\u4e86\u4e00\u5708\uff0c\u6ca1\u6709\u8be5\u505a\u6cd5\u3002\n\n\u987a\u4fbf\n~~\u6c34\u4e00\u7bc7\u9898\u89e3~~\n\u8865\u5145\u4e00\u4e2a\u5341\u5206\u597d\u7528\u4f46\u76f8\u5f53\u51b7\u95e8\u7684 STL \u7cfb\u5217 -- std::valarray \u7684\u4e00\u5c0f\u90e8\u5206\u3002\n\n## \u9898\u610f\n\n\u5e8f\u5217 $\\{A\\}$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u4e3a $(A_i, 0)$\u3002\n\n\u4f60\u53ef\u591a\u6b21\u9009\u62e9\u76f8\u90bb\u4e24\u5143\u7d20 $A_{(i, i + 1)}$ \u4f7f\u5176\u53d8\u4e3a $(A_{i + 1}, s_{i + 1}\\oplus1), (A_i, s_i\\oplus1)$\u3002\u95ee\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u80fd\u5426\u4f7f\u5f97\u7b2c\u4e00\u7ef4\u4e0d\u9012\u51cf\u3001\u7b2c\u4e8c\u7ef4\u5168\u4e3a $0$\u3002\n\n## \u89e3\u7b54\n\n\u8981\u6ee1\u8db3\u540e\u4e00\u4e2a\u6761\u4ef6\uff0c\u8fd9\u8bf4\u660e\u6392\u5e8f\u524d\u540e\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u5fc5\u76f8\u540c\u3002\n\n\u56e0\u6b64\u76f4\u63a5 **\u628a\u4e24\u79cd\u4f4d\u7f6e\u4e0a\u7684\u6570\u62ce\u51fa\u6765\u6392\u5e8f\u518d\u63d2\u56de\u53bb** \u770b\u770b\u662f\u5426\u6709\u5e8f\u5373\u53ef\u3002\n\n## \u8bed\u6cd5/\u9010\u884c\u8be6\u89e3\n\n### Python\n\u5728 Python \u4e2d\uff0c\u8981\u5b8c\u6210\u8be5\u529f\u80fd\u5176\u5b9e\u662f\u5341\u5206\u7b80\u4fbf\u7684\u3002\n\u56e0\u4e3a Python \u4e2d\u6709\u4e2a\u975e\u5e38\u597d\u7528\u7684 **\u5207\u7247\u529f\u80fd**[^1]\uff1a\n\n[^1]: https://docs.python.org/3/whatsnew/2.3.html?highlight=extended%20slices#extended-slices\n\n```py\nfor tests in range( int(input()) ):\n    n, s = input(), [int(_) for _ in input().split()]\n    s[0::2] = sorted(s[0::2])\n    s[1::2] = sorted(s[1::2])\n    print(\"YES\" if s == sorted(s) else \"NO\")\n```\n\n### $C$++\n\u90a3\u4e48\u5728 $C$++ \u4e2d\uff0c\u4e5f\u6709\u7c7b\u4f3c\u7684\u8bed\u6cd5\u7cd6\u5417\uff1f\n\n\u5f88\u9057\u61be\uff0c\u5c31\u64cd\u4f5c\u7b26\u6765\u8bf4\u5e76\u6ca1\u6709\u3002\n\u4f46\u4ece\u8bed\u4e49\u4e0a\u6765\u8bb2\uff0c\u786e\u5b9e\u6709\u4e00\u4e2a\n[`std::slice`](https://en.cppreference.com/w/cpp/numeric/valarray/slice)\u3002\n\n\u8fd9\u4e2a\u5207\u7247\u76f8\u5f53\u5f3a\u5927\u7684\u5730\u65b9\u5728\u4e8e\u53ef\u4ee5\u9002\u914d `std::valarray`\uff1a\n**\u53ef\u4ee5\u901a\u8fc7 `operator[]` \u6765\u76f4\u63a5\u8d4b\u503c\uff01** \u90a3\u4e48\uff1a\n\n1.\u300c\u628a\u4e1c\u897f\u62ce\u51fa\u6765\u300d:\n\n  ```cpp\n  slice l{0, (n + 1) / 2, 2}, r{1, n / 2, 2};\n  valarray o = a[l], e = a[r];\n  ```\n\n2.\u300c\u5e76\u5c06\u4ed6\u4eec\u6392\u5e8f\u300d\u3002 \u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0c`std::valarray` \u6ca1\u6709 `.begin()` \u8fd9\u6837\u7684\u7b2c\u4e8c\u4ee3\u5668\uff0c\u4f46\u4f9d\u7136\u53ef\u4ee5 `std::begin(a)` \u8fd9\u6837\u6765\u4f7f\u7528\uff0c\u5177\u4f53\u800c\u8a00\uff1a\n\n  ```cpp\n  sort(begin(o), end(o));\n  sort(begin(e), end(e));\n  ```\n  \n\n3.\u300c\u63d2\u56de\u53bb\u300d\u3002\u518d\u6b21\u8c03\u7528 `operator[]`\uff1a\n\n  ```cpp\n  a[l] = o, a[r] = e;\n  ```\n\n4.\u300c\u5224\u6709\u5e8f\u300d\u3002`std::is_sorted` \u9ed8\u8ba4\u5224\u4e0d\u964d\uff0c\u5982\u679c\u8981\u5224\u4e0d\u5347\u5219\u53ef\u8ffd\u52a0 `std::greater` \u6216\u5176\u4ed6\u6bd4\u8f83\u5668\u3002\n\n  ```cpp\n  puts(is_sorted(begin(a), end(a)) ? \"YES\" : \"NO\");\n  ```\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u95ee\u9898\u3002\n\n## \u540e\u8bb0\n~~\u53d1\u7262\u9a9a\u73af\u8282~~\n\n\u5b9e\u9645\u4e0a `std::valarray` \n\u76f8\u5f53\u597d\u7528\u7684\u4e00\u70b9\u5176\u5b9e\u662f\u53ef\u4ee5\u76f8\u5f53\u7b80\u6d01\u5730\u5bf9\u6bcf\u4e2a\u5143\u7d20\u90fd `std::apply` \u4e00\u4e2a\u64cd\u4f5c\u3002\n\u4f46\u5e38\u6570\u8f83\u5927\uff0c\u505a\u4e86\u89e3\u5373\u53ef\u3002\n\u7b14\u8005\u4e5f\u5341\u5206\u671f\u5f85\u5728\u4e0d\u8fdc\u7684\u5c06\u6765\u80fd\u591f\u770b\u5230\u66f4\u9ad8\u6548\u7684\u5b9e\u73b0\u3002",
        "postTime": 1660098140,
        "uid": 411103,
        "name": "Patricky",
        "ccfLevel": 0,
        "title": "valarray_in_c++"
    },
    {
        "content": "\u6253\u7684\u65f6\u5019\u672c\u6765\u5dee\u70b9\u5c31\u6b63\u89e3\u4e86\uff0c\u7ed3\u679c\u81ea\u5df1\u6253\u9519\u52a0\u4e0a\u53bb WA \u6389\u4e86\u6ca1\u53d1\u73b0\uff0c\u542c\u522b\u4eba\u8bf4\u4e86\u4e00\u4e2a\u9519\u89e3\u4e5f\u6ca1\u60f3\u5c31\u76f4\u63a5\u6362\u4e0a\u53bb\u8fc7\u4e86 pretest \u8fc7\u540e\u4ee5\u4e3a\u5c31\u6ca1\u4e8b\u4e86\u2026\u2026\u4ee5\u540e\u8fd8\u662f\u8981\u5148\u601d\u8003\u4e00\u4e0b\u518d\u52a8\u624b\u554a/tuu   \n\n\n\u8f6c\u5316\u7684\u6709\u70b9\u590d\u6742\u3002           \n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4 $O(n \\log n)$ \u6c42\u4e00\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5927\u8bb0\u4e3a $x_i$ \uff0c\u4ee5\u53ca\u540e\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\u8bb0\u4e3a $y_i$\uff0c\u5982\u679c\u6240\u6709\u6570\u90fd\u4fdd\u8bc1\u4e92\u4e0d\u76f8\u540c\u90a3\u4e48\u5c31\u770b\u6240\u6709\u7684 $x_i + y_i$ \u662f\u4e0d\u662f\u5076\u6570\u5c31\u597d\u4e86\u3002               \n\n\u4f46\u662f\u7531\u4e8e\u6709\u76f8\u540c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u76f8\u540c\u7684\u6570\u8be5\u600e\u4e48\u529e\u3002\u6211\u4eec\u628a\u76f8\u540c\u7684\u6570\u7684 $x_i + y_i$ \u6a21 $2$ \u7684\u503c\u6309\u5b83\u4eec\u539f\u6765\u5728\u5e8f\u5217\u4e2d\u7684\u987a\u5e8f\u6392\u5217\uff0c\u90a3\u4e48\u73b0\u5728\u5f97\u5230\u4e86\u82e5\u5e72\u4e2a $01$ \u4e32\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u80fd\u4e0d\u80fd\u628a\u6bcf\u4e2a $01$ \u4e32\u53d8\u6210\u5168\u662f $0$ \u7684\u4e32\u5c31\u597d\u4e86\u3002         \n\n\u8003\u8651\u6211\u4eec\u7684\u4ea4\u6362\u64cd\u4f5c\uff0c\u5176\u5b9e\u4e5f\u5c31\u53ea\u80fd\u628a\u6328\u5728\u4e00\u8d77\u7684 $11$ \u6216 $00$ \u53d8\u6210 $00$ \u6216 $11$ \uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8981\u5339\u914d\u4e24\u4e2a $1$ \u628a\u5b83\u4eec\u90fd\u6d88\u6389\uff0c\u662f\u4e0d\u662f\u4e2d\u95f4\u5f97\u5168\u662f\u5076\u6570\u4e2a $0$ \uff0c\u5219\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a $1$ \u7684\u4e0b\u6807\u5947\u5076\u6027\u4e92\u5f02\u3002          \n\n\u6211\u4eec\u628a\u5947\u4e0b\u6807\u770b\u6210\u5de6\u62ec\u53f7\uff0c\u5076\u4e0b\u6807\u770b\u6210\u53f3\u62ec\u53f7\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u62ec\u53f7\u5339\u914d\u95ee\u9898\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $01$ \u4e32\u505a\u4e00\u4e2a\u62ec\u53f7\u5339\u914d\u5c31\u597d\u4e86\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$ \u3002           \n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 1e5 + 5;\nint n,m,c[Len],a[Len],sum[Len],maxa,cnt[Len][2],Cnt[Len];\n//vector<int> v[Len];\nint lowbit(int x){return x & (-x);}\nvoid add(int x,int Add)\n{\n\twhile(x <= maxa) \n\t{ \n\t\tc[x] += Add;\n\t\tx += lowbit(x);\n\t}\n}\nint query(int x)\n{\n\tint res = 0;\n\twhile(x) \n\t{\n\t\tres += c[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn res;\n}\nint main()\n{\n\tint t;scanf(\"%d\",&t);\n\twhile(t --)\n\t{\n\t\tmaxa = 0;\n\t\tscanf(\"%d\",&n);\n\t\t//memset(Cnt , 0 , sizeof Cnt);\n\t\tfor(int i = 1 ; i <= n ; i ++) \n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tmaxa = max(maxa , a[i]);\n\t\t\tcnt[a[i]][0] = cnt[a[i]][1] = 0;\n\t\t\t//if(n >= 1000) Cnt[a[i]] ++;\n\t\t\t//if(n >= 1000) if(Cnt[a[i]] >= 2) puts(\"124182r9qywdiaschud\");\n\t\t\tsum[i] = 0;\n\t\t}\n\t\tfor(int i = 0 ; i <= maxa ; i ++) c[i] = 0;\n\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t{\n\t\t\tsum[i] += i - 1 - query(a[i]);\n\t\t\t//printf(\"%d %d\\n\",i,sum[i]);\n\t\t\tadd(a[i] , 1);\n\t\t}\n\t\tfor(int i = 1 ; i <= maxa ; i ++) c[i] = 0;\n\t\tbool flag = true;\n\t\tfor(int i = n ; i >= 1 ; i --)\n\t\t{\n\t\t\tsum[i] += query(a[i] - 1);\n\t\t\t//printf(\"%d %d\\n\",i,sum[i]);\n\t\t\tsum[i] %= 2;\n\t\t\t//v[a[i]].push_back(sum[i]);\n\t\t\tadd(a[i] , 1);\n\t\t}\n\t\t/*for(int i = 1 ; i <= maxa ; i ++) \n\t\t{\n\t\t\tif(v[i].size() != 0) \n\t\t\t{\n\t\t\t\tprintf(\"%d:\\n\",i);\n\t\t\t\tfor(int j = 0 ; j < v[i].size() ; j ++) printf(\"%d \",v[i][j]);\n\t\t\t\tputs(\"\"); \n\t\t\t}\n\t\t}*/\n\t\tfor(int i = 1 ; i <= n ; i ++) \n\t\t{\n\t\t\tif(sum[i]) \n\t\t\t{\n\t\t\t\tif(cnt[a[i]][(i % 2) ^ 1]) cnt[a[i]][(i % 2) ^ 1] --;\n\t\t\t\telse cnt[a[i]][(i % 2)] ++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t{\n\t\t\tif(cnt[a[i]][0] || cnt[a[i]][1]) \n\t\t\t{\n\t\t\t\tputs(\"NO\");\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag) puts(\"YES\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626064677,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1545A AquaMoon and Strange Sort"
    },
    {
        "content": "\u7eaa\u5ff5\u6211\u7684\u7b2c\u4e00\u573a Div.1 $\\to$ A FST \u4e14 B pretest \u90fd\u6ca1\u8fc7\uff0c\u4e00\u591c\u56de\u5230 expert\u3002\n\n\u9898\u76ee\u8981\u6c42\u4e00\u4e2a\u6570\u8981\u88ab\u4ea4\u6362\u5076\u6570\u6b21\uff0c\u610f\u5473\u7740\u76f8\u5bf9\u539f\u6765\u7684\u4f4d\u7f6e\u79fb\u52a8\u7684\u8ddd\u79bb\u662f\u5076\u6570\u6b21\u3002  \n\u7136\u540e\u8d5b\u573a\u4e0a\u7684\u6211\u662f\u8fd9\u6837\u60f3\u7684\uff0c\u5982\u679c\u6bcf\u4e00\u4e2a\u80fd\u548c\u76ee\u6807\u4f4d\u7f6e\u76f8\u5339\u914d\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u4f5c\u4e2a\u5dee\uff0c\u7136\u540e\u82e5\u4e0d\u884c\u7684\u4ea4\u6362\u4e00\u4e0b\u5c31\u6539\u53d8\u5947\u5076\u6027\uff0c\u6240\u4ee5\u8981\u6709\u5076\u6570\u4e2a\u5728\u5947\u6570\u4f4d\u5c31\u884c\u4e86\u3002**\u6539\u53d8\u4e2a\u9524\u5b50\uff01** \u4f60\u628a\u4e24\u4e2a\u5947\u5076\u6027\u76f8\u540c\u4f4d\u7f6e\u7684\u8fdb\u884c\u4ea4\u6362\u6839\u5c31\u5565\u4e5f\u6ca1\u6709\u6539\u53d8\u5427\uff01\n\n\u4e8b\u5b9e\u4e0a\uff0c\u79fb\u52a8\u8ddd\u79bb\u662f\u5076\u6570\u610f\u5473\u7740\u6bcf\u4e2a\u5947\u5076\u6027\u76f8\u540c\u7684\u4f4d\u7f6e\u90fd\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\uff0c\u90a3\u4e48\u53ea\u8981\u6bd4\u8f83\u4e00\u4e2a\u6570\u5b57\u5728\u76ee\u6807\u72b6\u6001\u548c\u539f\u59cb\u72b6\u6001\u7684\u5947\u6570\u4f4d\u7f6e\u4e2a\u6570\u548c\u5076\u6570\u4f4d\u7f6e\u4e2a\u6570\u662f\u5426\u76f8\u540c\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u5fc5\u4e86\u3002",
        "postTime": 1626049494,
        "uid": 40318,
        "name": "Acfboy",
        "ccfLevel": 0,
        "title": "CF1545A AquaMoon and Strange Sort \u9898\u89e3"
    },
    {
        "content": "\u867d\u7136\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u786e\u5b9e\u662f\u672c\u573a\u6700\u5bb9\u6613 FST \u7684\u9898\u3002\n# \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a$\uff0c\u95ee\u662f\u5426\u80fd\u5bf9\u6bcf\u4e2a\u6570\u8fdb\u884c\u5076\u6570\u6b21\u4e0e\u76f8\u90bb\u6570\u4ea4\u6362\u7684\u64cd\u4f5c\uff08\u53ef\u4ee5\u4e3a $0$\uff09\uff0c\u4f7f $a$ \u5355\u8c03\u4e0d\u964d\u3002\n# \u9898\u76ee\u5206\u6790\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6570\uff0c\u5b83\u4ea4\u6362\u6b21\u6570\u7684\u5947\u5076\u6027\u81f3\u4e8e\u521d\u672b\u4f4d\u7f6e\u8ddd\u79bb\u7684\u5947\u5076\u6027\u6709\u5173\uff0c\u4e0e\u5176\u5b83\u6570\u65e0\u5173\uff0c\u56e0\u4e3a\u5982\u679c\u5176\u5b83\u6570\u6765\u5e72\u6270\uff0c\u90a3\u5fc5\u7136\u6362\u8d70\u540e\u53c8\u4f1a\u6362\u56de\u6765\u3002\u8fd9\u6837\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5728\u5947\u6570\u4f4d\u7f6e\u548c\u5076\u6570\u4f4d\u7f6e\u7684\u6570\u91cf\uff0c\u5c06 $a$ \u6392\u5e8f\u4f9d\u6b21\u5224\u65ad\u662f\u5426\u8fd8\u5269\u4f59\u5bf9\u5e94\u6570\u5bf9\u5e94\u7684\u5947\u5076\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u8fd9\u73a9\u610f\u4f7f\u591a\u6d4b\uff0c\u9700\u8981\u6bcf\u6b21\u5c06 $cnt$ \u6570\u7ec4\u6e05\u7a7a\u3002\u7531\u4e8e $a_i$ \u53ef\u4ee5\u5927\u4e8e $n$\uff0c\u6309\u4ee5\u5f80\u7684\u4e60\u60ef\u4ece $1$ \u626b\u5230 $n$ \u5c31\u4f1a\u5bfc\u81f4 FST\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u9898\u6ca1\u6709\u53bb\u9650\u5236 $\\sum n$ \u800c\u662f\u628a $T$ \u653e\u7684\u5f88\u5c0f\uff0c\u5c31\u662f\u7528\u6765\u4f60\u6e05\u7a7a\u6574\u4e2a $cnt$ \u7684\u3002\u5f53\u7136\u5176\u5b9e\u53ef\u4ee5\u66f4\u636e $a$ \u53bb\u6e05\u7a7a\uff0c\u6700\u540e\u4f7f $\\sum n$ \u7684\uff0c\u4f46\u662f\u6ca1\u6709\u5fc5\u8981\u3002\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define R register\n#define I inline\n#define ll long long\n#define ull unsigned long long\n#define db double\nusing namespace std;\n#define pii pair<int,int>\n#define mp(x,y) make_pair(x,y)\n#define piii pair<pair<int,int>,int>\n#define mp3(x,y,z) make_pair(make_pair(x,y),z)\n#define fi first.first\n#define se first.second\n#define th second\n#define putint(x) printf(\"%d\\n\",x)\n#define putll(x) printf(\"%lld\\n\",x)\n#define putull(x) printf(\"%llu\\n\",x)\n#define lowbit(x) ((x)&(-(x)))\n#define inf (1e9)\n#define INF (1e18)\n#define eps (1e-8)\nI int read()\n{\n\tchar ch=getchar();\n\tint res=0,flag=1;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t\tflag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tres=res*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn res*flag;\n}\nint T,n,a[100001],cnt[100001][2];\nint main()\n{\n\tT=read();\n\twhile(T--)\n\t{\n\t\tn=read();\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tfor(R int i=1;i<=n;++i)\n\t\t{\n\t\t\ta[i]=read();\n\t\t\t++cnt[a[i]][i&1];\n\t\t}\n\t\tsort(a+1,a+n+1);\n\t\tfor(R int i=1;i<=n;++i)\n\t\t{\n\t\t\tif(!cnt[a[i]][i&1])\n\t\t\t{\n\t\t\t\tputs(\"NO\");\n\t\t\t\tgoto over;\n\t\t\t}\n\t\t\t--cnt[a[i]][i&1];\n\t\t}\n\t\tputs(\"YES\");\n\t\tover:;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1626057394,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3CF1545A"
    }
]