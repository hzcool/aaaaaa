[
    {
        "content": "~~\u968f\u4fbf\u7f16\u7684\u505a\u6cd5\uff0c\u4e0d\u592a\u6e05\u695a\u600e\u4e48\u4e25\u683c\u8bc1\u660e\uff0c\u4f46\u975e\u5e38\u597d\u5199\u3002~~\n\n\u8003\u8651 $i, j$ \u4e24\u884c\uff08\u5206\u522b\u5728 A, B \u4e2d\uff09\u53ef\u4ee5\u5339\u914d\u7684\u4e00\u4e2a\u5fc5\u8981\u6761\u4ef6\uff1a$i, j$ \u4e24\u884c\u975e\u96f6\u5143\u7d20\u7ec4\u6210\u7684\u96c6\u5408\u76f8\u540c\u3002\u5bf9\u4e8e\u5217\u662f\u4e00\u6837\u7684\u3002\n\n\u52a0\u5f3a\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5982\u679c $i, j$ \u4e24\u884c\u53ef\u4ee5\u5339\u914d\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709 $i, j$ \u884c\u7684\u975e\u96f6\u5143\u7d20\u5bf9\u5e94\u7684\u5217\u53ef\u4ee5 **\u4e00\u4e00\u5bf9\u5e94\u5730** \u5339\u914d\u3002\n\n\u6240\u4ee5\u5212\u5206\u7b49\u4ef7\u7c7b\uff1a\u884c $i, j$ \u5728\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u5185\u5f53\u4e14\u4ec5\u5f53 $i, j$ \u53ef\u4ee5\u5339\u914d\u3002\n\n\u540c\u65f6\u7ef4\u62a4\u884c\u3001\u5217\u7684\u7b49\u4ef7\u7c7b\uff0c\u4e0d\u65ad\u6839\u636e\u6761\u4ef6\u5212\u5206\u76f4\u5230\u7b49\u4ef7\u7c7b\u4e0d\u518d\u53d8\u5316\u3002\n\n\u548c\u539f\u6765\u901a\u8fc7 DFS \u5339\u914d\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u6700\u591a\u53ea\u4f1a\u5212\u5206 $\\min(n, m)$ \u6b21\uff08\u5047\u8bbe $n < m$ \uff0c\u5219\u5212\u5206 $n$ \u6b21\u540e\u884c\u4e00\u5b9a\u53ef\u4ee5\u6b63\u786e\u5212\u5206\u3002\u56e0\u4e3a\u5217\u7684\u5212\u5206\u53ea\u548c\u884c\u6709\u5173\uff0c\u56e0\u6b64\u4e5f\u4e0d\u4f1a\u53d8\u5316\uff09\n\n\u5728\u5b9e\u73b0\u65f6\u4e0d\u9700\u8981\u771f\u6b63\u5730\u5bf9 A, B \u540c\u65f6\u8fd0\u884c\u5212\u5206\u7b49\u4ef7\u7c7b\u7684\u7b97\u6cd5\uff0c\u800c\u662f\u76f4\u63a5\u7ef4\u62a4\u6bcf\u884c\u3001\u5217\u7684 hash\uff0chash \u76f8\u7b49\u8868\u793a\u5728\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u3002\u6bcf\u6b21\u5212\u5206\u65f6\u5bf9\u6bcf\u884c\u7684\u975e\u96f6\u5143\u7d20\u6309\u7167\u503c\u7684\u987a\u5e8f\u5bf9\u5217\u7684 hash \u505a\u5b57\u7b26\u4e32 hash\uff08\u4f7f\u5f97\u5217\u4e0d\u80fd\u4e00\u4e00\u5bf9\u5e94\u5339\u914d\u7684\u884c hash \u503c\u4e0d\u540c\uff09\uff0c\u518d\u5bf9\u5217\u8fd0\u884c\u540c\u6837\u7684\u8fc7\u7a0b\u3002A, B \u53ef\u4ee5\u5206\u5f00\u8fd0\u884c\u3002\n\n\u7b49\u4ef7\u7c7b\u5212\u5206\u5b8c\u540e\u5148\u6309\u7b49\u4ef7\u7c7b\u6392\u5217\u884c\uff0c\u7136\u540e\u518d\u5339\u914d\u5217\u3002\n\n\u76ee\u524d\u662f CF \u6700\u77ed\u89e3\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing ull = unsigned long long;\n\n#define all(c) begin(c), end(c)\n\nconst int N = 200005;\nconst ull K = 0xbe97916f7ac87e8b;\n\nint n, m;\n\nstruct item {\n  int i, c;\n};\n\nstruct matrix {\n  ull hR[N], hC[N];\n  vector<item> R[N], C[N];\n  int a[N];\n\n  void init() {\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < m; ++j) {\n        int x;\n        scanf(\"%d\", &x);\n        a[i * m + j] = x;\n        if (x != 0)\n          R[i].push_back({j, x}), C[j].push_back({i, x});\n      }\n    for (int i = 0; i < n; ++i)\n      sort(all(R[i]), [](item a, item b) { return a.c < b.c; });\n    for (int i = 0; i < m; ++i)\n      sort(all(C[i]), [](item a, item b) { return a.c < b.c; });\n    for (int i = 0; i < n; ++i)\n      for (item j : R[i])\n        hR[i] = hR[i] * K + j.c;\n    for (int i = 0; i < m; ++i)\n      for (item j : C[i])\n        hC[i] = hC[i] * K + j.c;\n    for (int t = 0; t < min(n, m); ++t) {\n      for (int i = 0; i < n; ++i)\n        for (item j : R[i])\n          hR[i] = hR[i] * K + hC[j.i];\n      for (int j = 0; j < m; ++j)\n        for (item i : C[j])\n          hC[j] = hC[j] * K + hR[i.i];\n    }\n  }\n} A, B;\n\nvector<array<int, 3>> ans;\n\nvector<int> perform(ull a[], ull b[], int n, int id) {\n  unordered_multimap<ull, int> B;\n  for (int i = 0; i < n; ++i)\n    B.emplace(b[i], i);\n  vector<int> P(n), iP(n);\n  for (int i = 0; i < n; ++i) {\n    auto it = B.find(a[i]);\n    if (it == B.end()) {\n      puts(\"-1\");\n      exit(0);\n    }\n    P[i] = it->second;\n    B.erase(it);\n  }\n  for (int i = 0; i < n; ++i)\n    iP[P[i]] = i;\n  for (int i = 0; i < n; ++i) {\n    while (P[i] != i) {\n      ans.push_back({id, i, P[i]});\n      swap(P[i], P[P[i]]);\n    }\n  }\n  return iP;\n}\n\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  A.init();\n  B.init();\n  fill(all(A.hC), 0); fill(all(B.hC), 0);\n  for (int i : perform(A.hR, B.hR, n, 1))\n    for (int j = 0; j < m; ++j)\n      A.hC[j] = A.hC[j] * K + A.a[i * m + j];\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j < m; ++j)\n      B.hC[j] = B.hC[j] * K + B.a[i * m + j];\n  perform(A.hC, B.hC, m, 2);\n  printf(\"%d\\n\", int(ans.size()));\n  for (auto a : ans)\n    printf(\"%d %d %d\\n\", a[0], a[1] + 1, a[2] + 1);\n  return 0;\n}\n\n```",
        "postTime": 1660910422,
        "uid": 31756,
        "name": "RiverHamster",
        "ccfLevel": 9,
        "title": "CF1718E \u9898\u89e3"
    },
    {
        "content": "\u975e\u5e38\u597d\u9898\u76ee\uff0c\u7231\u6765\u81ea\u74f7\u5668\u3002\n\n\u884c\u4ea4\u6362\u4e0d\u6539\u53d8\u6bcf\u4e2a\u5143\u7d20\u6240\u5728\u5217\uff0c\u5217\u4ea4\u6362\u4e0d\u6539\u53d8\u6bcf\u4e2a\u5143\u7d20\u6240\u5728\u884c\uff0c\u6240\u4ee5\u8bbe\u5bf9\u884c\u8fdb\u884c\u7684\u4ea4\u6362\u5f62\u6210\u7684\u6392\u5217\u4e3a $p_i$\uff0c\u5373\u7b2c $i$ \u884c\u88ab\u6362\u5230\u7b2c $p_i$ \u884c\uff0c\u8bbe\u5bf9\u5217\u8fdb\u884c\u7684\u4ea4\u6362\u5f62\u6210\u7684\u6392\u5217\u4e3a $q_j$\uff0c\u5373\u7b2c $j$ \u5217\u88ab\u6362\u5230\u7b2c $q_j$ \u5217\uff0c\u5219\u539f $a_{i, j}$ \u88ab\u4ea4\u6362\u81f3 $(p_i, q_j)$\u3002\n\n\u5982\u679c\u6c42\u51fa\u4e00\u7ec4 $p_i, q_j$ \u4f7f\u5f97 $a_{i, j} = b_{p_i, q_j}$\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7 $p, q$ \u6784\u9020\u51fa\u4ea4\u6362\u65b9\u6848\uff0c\u8fd9\u662f\u5bb9\u6613\u7684\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u4ea4\u6362\u65b9\u6848\u5bf9\u5e94\u4e00\u7ec4 $p, q$\uff0c\u6240\u4ee5\u95ee\u9898\u6709\u89e3\u5f53\u4e14\u4ec5\u5f53 $p, q$ \u5b58\u5728\u3002\n\n\u82e5 $a_{i, j} > 0$\uff0c\u90a3\u4e48\u4ece\u5de6\u90e8\u70b9 $i$ \u5411\u53f3\u90e8\u70b9 $j$ \u8fde\u6743\u503c\u4e3a $a_{i, j}$ \u7684\u8fb9\uff0c\u5f97\u5230\u4e8c\u5206\u56fe $A$\u3002\u540c\u7406\uff0c\u6839\u636e $b$ \u53ef\u5f97\u4e8c\u5206\u56fe $B$\u3002\u95ee\u9898\u76f8\u5f53\u4e8e\u6c42 $p, q$\uff0c\u4f7f\u5f97 $A$ \u7684\u5de6\u90e8\u70b9\u7ecf\u8fc7 $p$ \u53d8\u6362\uff0c\u53f3\u90e8\u70b9\u7ecf\u8fc7 $q$ \u53d8\u6362\u4e4b\u540e\u548c $B$ \u5b8c\u5168\u76f8\u7b49\u3002\u8fd9\u662f\u4e8c\u5206\u56fe\u540c\u6784\u95ee\u9898\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4e0d\u4ece\u540c\u6784\u7684\u89d2\u5ea6\u601d\u8003\u3002\n\n\u4e0d\u59a8\u8bbe $n \\leq m$\u3002\u5982\u679c\u6211\u4eec\u786e\u5b9a $p_i = i'$\uff0c\u90a3\u4e48\u56e0\u4e3a\u6ca1\u6709\u76f8\u540c\u975e\u96f6\u5143\u7d20\u5728\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\uff0c\u6240\u4ee5 $A$ \u4e0a $i$ \u7684\u90bb\u5c45 $j$ \u9700\u8981\u548c $B$ \u4e0a $i'$ \u7684\u90bb\u5c45 $j'$ \u4e00\u4e00\u5339\u914d\uff0c\u4e14 $a_{i, j} = b_{i', j'}$\u3002\u8fdb\u4e00\u6b65\u53ef\u786e\u5b9a\u6574\u4e2a\u8fde\u901a\u5757\u7684\u5339\u914d\u65b9\u6848\u3002\u636e\u6b64\u53ef\u5224\u5b9a $p_i$ \u662f\u5426\u53ef\u4ee5\u7b49\u4e8e $i'$\uff0c\u4e14\u82e5\u53ef\u4ee5\u5219\u7ed9\u51fa\u4e00\u7ec4 $i$ \u6240\u5728\u8fde\u901a\u5757 $A_i$ \u548c $i'$ \u6240\u5728\u8fde\u901a\u5757 $B_{i'}$ \u5339\u914d\u7684\u65b9\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $A_i$ \u548c $B_{i'}$ \u5305\u542b\u7684\u8fb9\u6570\u4e4b\u548c\u3002\n\n\u5f53 $A_i$ \u7684\u4e24\u90e8\u70b9\u5927\u5c0f\u548c $B_{i'}$ \u4e0d\u7b49\u65f6\uff0c$p_i$ \u4e0d\u53ef\u80fd\u7b49\u4e8e $i'$\uff0c\u6240\u4ee5\u53ea\u9700\u5bf9\u4e24\u90e8\u70b9\u5927\u5c0f\u76f8\u7b49\u7684\u8fde\u901a\u5757\u5224\u540c\u6784\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9\u5de6\u90e8\u70b9\u5927\u5c0f\u76f8\u7b49\u7684\u8fde\u901a\u5757\u5224\u540c\u6784\u7684\u590d\u6742\u5ea6\u540c\u6837\u6b63\u786e\u3002\n\n\u540c\u65f6\uff0c\u5982\u679c $A_i$ \u548c $B_{i'}$ \u53ef\u4ee5\u5339\u914d\uff0c\u6211\u4eec\u76f4\u63a5\u4ee4 $A_i$ \u5339\u914d $B_{i'}$\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5f97\u5230\u5982\u4e0b\u7b97\u6cd5\uff1a\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $A$ \u7684\u5de6\u90e8\u70b9 $i$\u3002\u82e5 $A_i$ \u5df2\u7ecf\u88ab\u5220\u53bb\uff0c\u90a3\u4e48\u8df3\u8fc7\u3002\u5426\u5219\u679a\u4e3e $B$ \u7684\u6240\u6709\u5de6\u90e8\u70b9\u5927\u5c0f\u548c $A_i$ \u76f8\u7b49\u7684\u672a\u88ab\u5220\u53bb\u7684\u8fde\u901a\u5757 $B_{i'}$ \u7684\u6bcf\u4e2a\u5de6\u90e8\u70b9 $i'$\uff0c\u82e5 $p_i$ \u53ef\u4ee5\u7b49\u4e8e $i'$\uff0c\u5219\u5220\u53bb $A_i$ \u548c $B_{i'}$\uff0c\u7ed3\u675f\u5339\u914d\u3002\u82e5\u4e0d\u5b58\u5728 $i'$ \u4f7f\u5f97 $p_i$ \u53ef\u4ee5\u7b49\u4e8e $i'$\uff0c\u5219\u65e0\u89e3\u3002\n\n\u6bcf\u4e2a $A$ \u7684\u8fde\u901a\u5757 $A_i$ \u53ea\u4f1a\u88ab\u5c1d\u8bd5\u5339\u914d\u81f3\u591a $n$ \u6b21\uff0c\u8fd9\u662f\u663e\u7136\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a $B$ \u7684\u8fde\u901a\u5757 $B_{i'}$\uff0c\u5982\u679c\u5b83\u88ab\u67d0\u4e2a $A_i$ \u9009\u4e2d\uff0c\u90a3\u4e48\u5b83\u4f1a\u88ab\u5c1d\u8bd5\u5339\u914d\u5de6\u90e8\u70b9\u6570\u91cf\u6b21\uff0c\u53c8\u56e0\u4e3a $A_i$ \u7684\u5de6\u90e8\u70b9\u5927\u5c0f\u7b49\u4e8e $B_{i'}$ \u7684\u5de6\u90e8\u70b9\u5927\u5c0f\uff0c\u6240\u4ee5\u88ab\u5c1d\u8bd5\u5339\u914d\u7684\u6b21\u6570\u4e0d\u8d85\u8fc7 $A$ \u7684\u5de6\u90e8\u70b9\u5927\u5c0f\uff0c\u5373 $n$\u3002\n\n\u6700\u540e\u5269\u4e0b\u82e5\u5e72 $A$ \u548c $B$ \u7684\u53f3\u90e8\u6563\u70b9\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u5b83\u4eec\u4e00\u4e00\u5339\u914d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 2 m)$ \u5373 $\\mathcal{O}(nm\\sqrt {nm})$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define G return failed = 1, void()\n#define GG puts(\"-1\"), exit(0)\nusing pii = pair<int, int>;\nconstexpr int N = 4e5 + 5;\nbool visx[N], visy[N], occu[N];\nint n, m, p[N], q[N], comp, compa;\nvector<int> x[N];\nvector<pii> a[N], b[N];\nint main() {\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  ios::sync_with_stdio(0);\n  cin >> n >> m;\n  { // input\n    for(int i = 1; i <= n; i++)\n      for(int j = 1; j <= m; j++) {\n        int v; cin >> v;\n        if(v) {\n          a[i].push_back({n + j, v});\n          a[n + j].push_back({i, v});\n        }\n      }\n    for(int i = 1; i <= n; i++)\n      for(int j = 1; j <= m; j++) {\n        int v; cin >> v;\n        if(v) {\n          b[i].push_back({n + j, v});\n          b[n + j].push_back({i, v});\n        }\n      }\n    auto cmp = [&](pii x, pii y) {return x.second < y.second;};\n    for(int i = 1; i <= n + m; i++) {\n      sort(a[i].begin(), a[i].end(), cmp);\n      sort(b[i].begin(), b[i].end(), cmp);\n    }\n  }\n  { // get components\n    function<void(int, bool)> dfs = [&](int id, bool type) {\n      visx[id] = 1, x[comp].push_back(id);\n      for(auto _ : (type ? b[id] : a[id])) {\n        int it = _.first;\n        if(visy[it]) continue;\n        visy[it] = 1;\n        for(auto __ : (type ? b[it] : a[it])) {\n          int adj = __.first;\n          if(!visx[adj]) dfs(adj, type);\n        }\n      }\n    };\n    if(n < m) {\n      for(int i = 1; i <= n; i++) if(!visx[i]) dfs(i, 0), comp++;\n    }\n    else {\n      for(int i = n + 1; i <= n + m; i++) if(!visx[i]) dfs(i, 0), comp++;\n    }\n    compa = comp;\n    memset(visx, 0, sizeof(visx));\n    memset(visy, 0, sizeof(visy));\n    if(n < m) {\n      for(int i = 1; i <= n; i++) if(!visx[i]) dfs(i, 1), comp++;\n    }\n    else {\n      for(int i = n + 1; i <= n + m; i++) if(!visx[i]) dfs(i, 1), comp++;\n    }\n    if(compa * 2 != comp) GG;\n    auto cmp = [&](vector<int> &x, vector<int> &y) {\n      return x.size() < y.size();\n    };\n    sort(x, x + compa, cmp);\n    sort(x + compa, x + comp, cmp);\n  }\n  { // isomorphism\n    auto clear = [&](int id, bool type) {\n      type ? q[id] = 0 : p[id] = 0;\n      for(pii it : (type ? b[id] : a[id]))\n        type ? q[it.first] = 0 : p[it.first] = 0;\n    };\n    bool failed = 0;\n    function<void(int, int)> dfs = [&](int ida, int idb) {\n      assert(!p[ida] && !q[idb]);\n      if(failed) return;\n      p[ida] = idb, q[idb] = ida;\n      if(a[ida].size() != b[idb].size()) G;\n      for(int i = 0; i < a[ida].size(); i++) {\n        pii u = a[ida][i], v = b[idb][i];\n        if(u.second != v.second) G;\n        int ita = u.first, itb = v.first;\n        if(p[ita] && p[ita] != itb) G;\n        if(q[itb] && q[itb] != ita) G;\n        if(!p[ita]) dfs(ita, itb);\n      }\n    };\n    int pta = 0, ptb = compa;\n    while(pta < compa) {\n      int ra = pta, rb = ptb;\n      while(ra < compa && x[ra].size() == x[pta].size()) ra++;\n      while(rb < comp && x[rb].size() == x[ptb].size()) rb++;\n      if(ra - pta != rb - ptb) GG;\n      for(int i = pta; i < ra; i++) {\n        bool found = 0;\n        for(int j = ptb; j < rb && !found; j++) {\n          if(occu[j]) continue;\n          for(int idb : x[j]) {\n            for(int ida : x[i]) clear(ida, 0);\n            for(int idb : x[j]) clear(idb, 1);\n            failed = 0, dfs(x[i].front(), idb);\n            if(!failed) {found = occu[j] = 1; break;}\n          }\n        }\n        if(!found) GG;\n      }\n      pta = ra, ptb = rb;\n    }\n  }\n  { // output\n    for(int i = 1, j = 1; i <= n + m; i++) { // add this part\n      if(p[i]) continue;\n      while(q[j]) j++;\n      p[i] = j, q[j] = i;\n    }\n    memset(visx, 0, sizeof(visx));\n    vector<pii> row, col;\n    for(int i = 1; i <= n + m; i++) {\n      if(visx[i]) continue;\n      int cur = i;\n      do {\n        if(cur != q[cur] && !visx[q[cur]]) {\n          if(cur > n) col.push_back({cur - n, q[cur] - n});\n          else row.push_back({cur, q[cur]});\n        }\n        visx[cur] = 1, cur = q[cur];\n      } while(!visx[cur]);\n    }\n    cout << row.size() + col.size() << \"\\n\";\n    for(pii it : row) cout << \"1 \" << it.first << \" \" << it.second << \"\\n\";\n    for(pii it : col) cout << \"2 \" << it.first << \" \" << it.second << \"\\n\";\n  }\n  return 0;\n}\n// 2022.10.10, 10:23-13:29\n```",
        "postTime": 1665386230,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1718E Impressionism"
    },
    {
        "content": "\u5047\u5b9a $n\\le m$\u3002\u5bf9\u4e8e\u77e9\u9635 $a$ \u5efa\u4e00\u4e2a\u5de6\u8fb9 $n$ \u4e2a\u70b9\u53f3\u8fb9 $m$ \u4e2a\u70b9\u7684\u4e8c\u5206\u56fe $A$\uff0c\u5982\u679c $a_{i,j}\\ne0$ \u5219\u5de6\u8fb9\u7b2c $i$ \u4e2a\u70b9\u548c\u53f3\u8fb9\u7b2c $j$ \u4e2a\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u989c\u8272\u4e3a $a_{i,j}$ \u7684\u8fb9\u3002\u5bf9\u77e9\u9635 $b$ \u4e5f\u540c\u7406\u5efa\u56fe $B$\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u4e24\u4e2a\u4e8c\u5206\u56fe\u662f\u5426\u91cd\u6784\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217 $p$ \u548c\u957f\u5ea6\u4e3a $m$ \u7684\u6392\u5217 $q$\uff0c\u4f7f\u5f97 $A$ \u4e2d\u5de6\u8fb9 $i$ \u548c\u53f3\u8fb9 $j$ \u6709\u989c\u8272\u4e3a $c$ \u7684\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53 $B$ \u4e2d\u5de6\u8fb9 $p_i$ \u548c\u53f3\u8fb9 $p_j$ \u6709\u989c\u8272\u4e3a $c$ \u7684\u8fb9\u3002\u76f8\u5f53\u4e8e\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u4e00\u4e00\u6620\u5c04\uff0c\u628a $A$ \u4e2d\u6bcf\u4e2a\u70b9\u6620\u5c04\u5230 $B$ \u4e2d\u6bcf\u4e2a\u70b9\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u989c\u8272\u90fd\u4e0d\u540c\uff0c\u6240\u4ee5\u53ea\u8981\u786e\u5b9a\u4e86 $A$ \u4e2d\u4e00\u4e2a\u70b9\u7684\u6620\u5c04\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45\u7684\u6620\u5c04\uff0c\u8fdb\u800c\u786e\u5b9a\u5305\u542b\u8fd9\u4e2a\u70b9\u7684\u8fde\u901a\u5757\u5185\u7684\u6240\u6709\u70b9\u7684\u6620\u5c04\u2014\u2014\u5b83\u4eec\u5e94\u8be5\u6b63\u597d\u5728 $B$ \u4e2d\u4e5f\u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u901a\u8fc7 dfs \u5b9e\u73b0\u3002\u540c\u65f6\uff0c\u8fd9\u4e2a dfs \u4e5f\u53ef\u4ee5\u7528\u6765\u5224\u65ad\u4e24\u4e2a\u70b9\u80fd\u4e0d\u80fd\u4e92\u76f8\u6620\u5c04\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u5305\u542b\u8fd9\u4e24\u4e2a\u70b9\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u4e2d\u8fb9\u6570\u66f4\u5c11\u7684\u90a3\u4e2a\u7684\u8fb9\u6570\u6210\u7ebf\u6027\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u4e2a\u81ea\u7136\u7684\u66b4\u529b\u2014\u2014\u5bf9\u4e8e $A$ \u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u5728\u5176\u4e2d\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9 $u$\uff0c\u5728 $B$ \u4e2d\u679a\u4e3e\u6bcf\u4e2a\u8fd8\u6ca1\u6709\u88ab\u6620\u5c04\u7684\u70b9 $v$\uff0c\u8bd5\u56fe\u5c06 $u$ \u6620\u5c04\u5230 $v$ \u4e0a\u3002\u5982\u679c\u67d0\u4e2a\u70b9\u627e\u4e0d\u5230\u4efb\u4f55\u5408\u6cd5\u7684\u6620\u5c04\uff0c\u90a3\u4e48\u6574\u4e2a\u95ee\u9898\u65e0\u89e3\u3002\n\n\u770b\u8d77\u6765\u4e00\u5361\u5c31\u70b8\uff0c\u4f46\u662f\u597d\u50cf\u6709\u5f88\u591a\u80fd\u7528\u7684\u526a\u679d\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6bd4\u8f83\u5305\u542b $u$ \u548c $v$ \u7684\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u4e00\u4e9b\u4fe1\u606f\u6765\u5224\u65ad $u$ \u5230 $v$ \u7684\u6620\u5c04\u4e0d\u5408\u6cd5\u3002\u5e76\u4e14\uff0c\u7531\u4e8e $n\\le\\sqrt{nm}$\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u5c3d\u91cf\u53ea\u679a\u4e3e\u4f5c\u4e3a\u5de6\u4fa7\u70b9\u7684 $u$ \u548c $v$\u3002\n\n\u73b0\u5728\u6211\u4eec\u628a\u6bcf\u4e2a\u8fde\u901a\u5757\u6839\u636e\u201c\u5305\u542b\u5de6\u4fa7\u70b9\u7684\u70b9\u6570\u201d\u5206\u6210\u82e5\u5e72\u7b49\u4ef7\u7c7b\u3002\u8bbe\u7b2c $i$ \u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5757\u5305\u542b $x_i$ \u4e2a\u5de6\u4fa7\u70b9\uff0c\u6709 $y_i$ \u4e2a\u8fde\u901a\u5757\u662f $A$ \u4e2d\u7684\uff0c\u6574\u4e2a\u7b49\u4ef7\u7c7b\u91cc\u4e00\u5171\u6709 $z_i$ \u6761 $B$ \u4e2d\u7684\u8fb9\u3002\u82e5 $x_i=0$\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8fde\u901a\u5757\u53ea\u5305\u542b\u4e00\u4e2a\u53f3\u4fa7\u70b9\uff0c\u5bb9\u6613\u5904\u7406\u3002\n\n\u5426\u5219\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $A$ \u4e2d\u7684\u8fde\u901a\u5757\uff0c$B$ \u4e2d\u7684\u67d0\u4e2a\u8fde\u901a\u5757 $S$ \u5185\u7684\u67d0\u6761\u8fb9\u53ea\u4f1a\u5728\u679a\u4e3e\u5230 $S$ \u5185\u7684\u67d0\u4e2a\u5de6\u4fa7\u70b9\u65f6\u6709\u8d21\u732e\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5904\u7406\u8fd9\u4e2a\u7b49\u4ef7\u7c7b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u4e00\u4e2a $O(x_iy_iz_i)$ \u7684\u4e0a\u754c\u3002\u90a3\u4e48\u603b\u65f6\u95f4\u5219\u662f $\\sum x_iy_iz_i\\le(\\sum x_iy_i)(\\sum z_i)=O(n^2m)$\u3002\u4e8e\u662f\u6211\u4eec\u5b8c\u6574\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm\\sqrt{nm})$\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\ninline ll read(){\n\tll x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=2e5+5;\nint n,m;\nvector<pair<int,int>> g1[maxn],g2[maxn];\nint cnt1=0,no1[maxn],s1[maxn];\nvoid dfs1(int u){\n\ts1[no1[u]=cnt1]+=u<=n;\n\tfor(auto e:g1[u]){\n\t\tint v=e.second;\n\t\tif(!no1[v]) dfs1(v);\n\t}\n}\nint cnt2=0,no2[maxn],s2[maxn];\nvoid dfs2(int u){\n\ts2[no2[u]=cnt2]+=u<=n;\n\tfor(auto e:g2[u]){\n\t\tint v=e.second;\n\t\tif(!no2[v]) dfs2(v);\n\t}\n}\nint p[maxn];\nbool vis[maxn];\nvector<int> vec;\nbool dfs3(int u){\n\tvec.push_back(u);\n\tvis[p[u]]=1;\n\tif(g1[u].size()!=g2[p[u]].size()) return 0;\n\tfor(int i=0;i<(int)g1[u].size();i++){\n\t\tauto e1=g1[u][i],e2=g2[p[u]][i];\n\t\tint v1=e1.second,v2=e2.second;\n\t\tif(e1.first!=e2.first) return 0;\n\t\tif(p[v1]||vis[v2]){\n\t\t\tif(p[v1]!=v2) return 0;\n\t\t\tcontinue;\n\t\t}\n\t\tp[v1]=v2;\n\t\tif(!dfs3(v1)) return 0;\n\t}\n\treturn 1;\n}\nint main(){\n#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n#endif\n\tn=read();\n\tm=read();\n\tbool flag=n>m;\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++){\n\t\tint a=read();\n\t\tif(!a) continue;\n\t\tif(flag){\n\t\t\tg1[j].push_back({a,m+i});\n\t\t\tg1[m+i].push_back({a,j});\n\t\t}\n\t\telse{\n\t\t\tg1[i].push_back({a,n+j});\n\t\t\tg1[n+j].push_back({a,i});\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++){\n\t\tint b=read();\n\t\tif(!b) continue;\n\t\tif(flag){\n\t\t\tg2[j].push_back({b,m+i});\n\t\t\tg2[m+i].push_back({b,j});\n\t\t}\n\t\telse{\n\t\t\tg2[i].push_back({b,n+j});\n\t\t\tg2[n+j].push_back({b,i});\n\t\t}\n\t}\n\tif(flag) swap(n,m);\n\tfor(int i=1;i<=n+m;i++)\n\t\tsort(g1[i].begin(),g1[i].end());\n\tfor(int i=1;i<=n+m;i++)\n\t\tsort(g2[i].begin(),g2[i].end());\n\tfor(int i=1;i<=n+m;i++) if(!no1[i]){\n\t\tcnt1++;\n\t\tdfs1(i);\n\t}\n\tfor(int i=1;i<=n+m;i++) if(!no2[i]){\n\t\tcnt2++;\n\t\tdfs2(i);\n\t}\n\tfor(int i=1;i<=n;i++) if(!p[i]){\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!vis[j]&&s1[no1[i]]==s2[no2[j]]){\n\t\t\t\tp[i]=j;\n\t\t\t\tvec.clear();\n\t\t\t\tif(dfs3(i)) break;\n\t\t\t\tfor(int k:vec){\n\t\t\t\t\tvis[p[k]]=0;\n\t\t\t\t\tp[k]=0;\n\t\t\t\t}\n\t\t\t}\n\t\tif(!p[i]){\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tvector<int> vec;\n\tfor(int i=n+1;i<=n+m;i++)\n\t\tif(!vis[i]) vec.push_back(i);\n\tfor(int i=n+1;i<=n+m;i++) if(!p[i]){\n\t\tp[i]=vec.back();\n\t\tvec.pop_back();\n\t}\n\tvector<pair<int,int>> ans1,ans2;\n\tfor(int i=1;i<=n;i++) while(p[i]!=i){\n\t\tans1.push_back({i,p[i]});\n\t\tswap(p[i],p[p[i]]);\n\t}\n\tfor(int i=1;i<=m;i++) while(p[n+i]!=n+i){\n\t\tans2.push_back({i,p[n+i]-n});\n\t\tswap(p[n+i],p[p[n+i]]);\n\t}\n\tprintf(\"%d\\n\",(int)(ans1.size()+ans2.size()));\n\tfor(auto x:ans1)\n\t\tprintf(\"%d %d %d\\n\",flag?2:1,x.first,x.second);\n\tfor(auto x:ans2)\n\t\tprintf(\"%d %d %d\\n\",flag?1:2,x.first,x.second);\n#ifdef LOCAL\n\tfprintf(stderr,\"%f\\n\",1.0*clock()/CLOCKS_PER_SEC);\n#endif\n\treturn 0;\n}\n```",
        "postTime": 1661694932,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1718E Impressionism"
    }
]