[
    {
        "content": "## \u9898\u610f\u5206\u6790\n\u6ca1\u4ec0\u4e48\u597d\u5206\u6790\u7684\uff0c\u90fd\u80fd\u8bfb\u61c2\u9898\u3002\n## \u505a\u6cd5\u5206\u6790\n\u672c\u9898\u89e3\u4e3a\u7ebf\u6bb5\u6811\u9898\u89e3\uff0c\u5bf9\u7ebf\u6bb5\u6811\u4e0d\u592a\u719f\u6089\u7684\u540c\u5b66\u53ef\u4ee5\u5148[\u5b66\u4e60\u7ebf\u6bb5\u6811](https://www.cnblogs.com/juruo-wsy/p/14728124.html)\u3002\n\n\u6211\u4eec\u8003\u8651\u8fd9\u9053\u9898\u7ed9\u51fa\u7684 and \u7b97\u6cd5\u3002\u5f88\u660e\u663e\uff0c\u662f\u9700\u8981\u8fdb\u884c\u4f4d\u8fd0\u7b97\u7684\uff0c\u5373\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u7684\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5355\u72ec\u8fdb\u884c\u8ba1\u7b97\uff0c\u800c\u4e14\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u4e4b\u95f4\u662f\u4e92\u76f8\u4e0d\u5f71\u54cd\u7684\uff0c\u6700\u540e\u7edf\u8ba1\u7ed3\u679c\u7684\u65f6\u5019\uff0c\u5982\u679c\u67d0\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u662f 1\uff0c\u90a3\u4e48 ans \u5c31\u53ef\u4ee5\u52a0\u4e0a 1<<k\uff0ck \u662f\u8fd9\u4e2a\u4f4d\u7f6e\u3002\u5f53\u7136\u8fd9\u662f\u53e3\u80e1\uff0c\u7136\u540e\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5b9e\u73b0\u3002\n\n\u6211\u4eec\u9996\u5148\u89c2\u5bdf\u4e00\u4e0b\u8fd9\u4e2a\u6570\u5217\u3002\u5982\u679c\u6211\u7ed9\u51fa\u4e00\u4e2a $a_1={1,1,1,1,0,1,1,1}$ ,\u90a3\u4e48\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5269\u4e0b\u7684\u6570\u5217\u662f\u4ec0\u4e48\uff1a\n\n```\n    0 0 0 0   \n   1 0 0 0 0  \n  1 1 0 0 0 1\n 1 1 1 0 0 1 1\n1 1 1 1 0 1 1 1\n```\n\u5230\u8fd9\u91cc\u5c31\u8db3\u591f\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\u6700\u540e\u8fd9\u4e9b 1 \u90fd\u662f\u4f1a\u88ab 0 \u541e\u566c\u7684\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b01\u7684\u51fa\u73b0\u5f62\u5f0f\u662f\u4ee5\u4e00\u8fde\u4e32\u7684 1 \u4e3a\u5e95\uff0c\u5411\u4e0a\u6210\u4e00\u4e2a\u7b49\u8fb9\u4e09\u89d2\u5f62\u3002\u8fd9\u6837\u53ea\u8981\u6211\u4eec\u77e5\u9053\u8fd9\u4e00\u957f\u4e321\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u5927\u5c0f\u3002\n\n\u6211\u4eec\u7ef4\u62a418\u68f5\u7ebf\u6bb5\u6811\uff0c\u56e0\u4e3a $2^{18}>10^5$ \u4e5f\u5c31\u662f\u9898\u76ee\u4e2d $a_i$ \u7684\u6570\u636e\u8303\u56f4\u3002\u6bcf\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4e4b\u540e\u5462\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a lmax \u4e00\u4e2a rmax \uff0c\u5206\u522b\u4ee3\u8868\u5f53\u524d\u8282\u70b9\u6240\u8d1f\u8d23\u7684\u533a\u95f4\u4e2d\uff0c\u6700\u5de6\u8fb9\u7684\u4e00\u957f\u4e32 1 \u548c\u6700\u53f3\u8fb9\u7684\u4e00\u957f\u4e32 1 \u7684\u957f\u5ea6\u3002\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u70b9\u5728\u4e8e pushup \u51fd\u6570\uff0c\u8fd9\u91cc\u91cd\u70b9\u8bb2\u4e00\u4e0b\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u8282\u70b9 p \uff0c\u6211\u4eec\u5148\u628a $t_p.lmax$ \u7f6e\u6210 $t_{p<<1}.lmax$ \uff0c\u5373\uff0c\u663e\u800c\u6613\u89c1\u4ed6\u7684\u5de6\u513f\u5b50\u7684\u5de6\u4fa7\u6700\u957f\u53ef\u4ee5\u76f4\u63a5\u7ed9\u7238\u7238\u62ff\u6765\u7528\u3002\u4e4b\u540e\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u4ed6\u7684\u6574\u4e2a\u5de6\u513f\u5b50\u533a\u95f4\u90fd\u88ab1\u586b\u6ee1\uff0c\u5373\uff0c $t_{p<<1}.lmax=t_{p<<1}.r-t_{p<<1}.l+1$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53d1\u73b0\u5b83\u53ef\u4ee5\u8ddf\u8fd9\u4e2a\u7238\u7238\u7684\u53f3\u513f\u5b50\u7684 lmax \u8fde\u4e0a\uff01\uff01\uff01\u91cd\u5927\u7684\u60ca\u4eba\u53d1\u73b0\uff01\u4e8e\u662f\u6211\u4eec\u7279\u5224\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u628a $t_p.lmax+=t_{p<<1|1}.lmax$ \uff0c\u5373\u52a0\u4e0a\u53f3\u513f\u5b50\u7684\u5de6\u4fa7 max \u3002\u540c\u7406\uff0c\u6211\u4eec\u5728\u5904\u7406 $t_p.rmax$ \u7684\u65f6\u5019\u4e5f\u662f\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u3002\u8fd8\u8bb0\u4e0d\u8bb0\u5f97\u6211\u4eec\u4e4b\u524d\u8bb0\u5f55\u4e86\u4e00\u4e2a sum \uff1f\u8fd9\u4e2a sum \u8bb0\u5f55\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u662f\u8fd9\u4e2a\u533a\u95f4\u5185\u4ee5\u8fd9\u4e00\u5927\u5768 1 \u4e3a\u5e95\u7684\u4e09\u89d2\u5f62\u7684\u5927\u5c0f\u3002\n\n\u5982\u4f55\u8ba1\u7b97 sum \uff1f\u6211\u4eec\u9996\u5148\u628a $t_p.sum$ \u7f6e\u6210 $t_{p<<1}.sum+t_{p<<1|1}.sum$ \u3002\u5b8c\u4e86\u4e4b\u540e\u5462\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u6709\u53ef\u80fd\u5de6\u513f\u5b50\u7684 rmax \u548c\u53f3\u513f\u5b50\u7684 lmax \u8fde\u4e0a\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u5148\u8ba9 $t_p.sum$ \u51cf\u53bb\u5de6\u513f\u5b50\u7684 rmax \u548c\u53f3\u513f\u5b50\u7684 lmax \uff0c\u4e4b\u540e\u518d\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u8fde\u8d77\u6765\u7684\u5927\u5c0f\u3002\n\n\u5efa\u6811\u548c modify \u548c\u6b63\u5e38\u7684\u7ebf\u6bb5\u6811\u6ca1\u4ec0\u4e48\u4e24\u6837\uff0c\u5982\u679c\u5bf9\u591a\u68f5\u7ebf\u6bb5\u6811\u4e0d\u719f\u6089\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u7ec3\u4e60\u51e0\u9053\u9898\u3002\u5176\u4ed6\u7684\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n//Copyright: AladV\n//Finish Time: 2021.5.10 18:38\n//Editor: CP-Editor\n//Time Usage: 1746 ms\n//Memory Usage: 255100kib\n#include<bits/stdc++.h>\n#define int long long\n#define lson p<<1\n#define rson p<<1|1\nusing namespace std;\nconst int N=1e5+5;\nstruct SegTree\n{\n\tint sum,lmax,rmax,bit;\n}t[20][N<<2];\nint n,m;\nint a[N];\nint read()\n{\n    int x=0,f=1;\n    char c=getchar();\n    while (c<'0'||c>'9')\n    {\n        if(c=='-') f=-1;\n        c=getchar();\n    }\n    while (c>='0'&&c<='9')\n    {\n        x=(x<<1)+(x<<3)+(c^48);\n        c=getchar();\n    }\n    return x*f;\n}\n// int bit[N];\nvoid pushup(int b,int p,int len)\n{//wsy\n\tt[b][p].lmax=t[b][lson].lmax;\n\tif(t[b][lson].lmax==(len-(len>>1))) t[b][p].lmax+=t[b][rson].lmax;\n\tt[b][p].rmax=t[b][rson].rmax;\n\tif(t[b][rson].rmax==(len>>1)) t[b][p].rmax+=t[b][lson].rmax;\n\t\n\tt[b][p].sum=t[b][lson].sum+t[b][rson].sum;\n\tif(t[b][lson].rmax && t[b][rson].lmax)\n\t{\n\t\tint llen=t[b][lson].rmax,rlen=t[b][rson].lmax;\n\t\tt[b][p].sum-=llen*(llen+1)/2;\n\t\tt[b][p].sum-=rlen*(rlen+1)/2;\n\t\tt[b][p].sum+=(llen+rlen)*(llen+rlen+1)/2;\n\t}\n}\nvoid BuildTree(int b,int p,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tt[b][p].sum=t[b][p].lmax=t[b][p].rmax=(a[l]&(1<<b)?1:0);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tBuildTree(b,lson,l,mid);\n\tBuildTree(b,rson,mid+1,r);\n\tpushup(b,p,r-l+1);\n}\nvoid Modify(int b,int p,int l,int r,int pos,int val)\n{\n\tif(l==r)\n\t{\n\t\tt[b][p].sum=t[b][p].lmax=t[b][p].rmax=(val&(1<<b)?1:0);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid) Modify(b,lson,l,mid,pos,val);\n\telse Modify(b,rson,mid+1,r,pos,val);\n\tpushup(b,p,r-l+1);\n}\nsigned main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=0;i<18;i++)\n\t{\n\t\t// bit[i]=i;\n\t\tBuildTree(i,1,1,n);\n\t}\n\twhile(m--)\n\t{\n\t\tint pos=read(),val=read();\n\t\tint ans=0;\n\t\tfor(int i=0;i<18;i++)\n\t\t{\n\t\t\tModify(i,1,1,n,pos,val);\n\t\t\tans+=(1<<i)*t[i][1].sum;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\t// cout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1620644900,
        "uid": 517444,
        "name": "AladV",
        "ccfLevel": 0,
        "title": "CF400E\u9898\u89e3"
    }
]