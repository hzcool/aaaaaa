[
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\u548c\u4e24\u4e2a\u70b9 $a,b$\uff0c\u8fb9\u6709\u8fb9\u6743\u3002\u4f60\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u4ece\u5f53\u524d\u6240\u5728\u7684\u70b9\u8df3\u5230\u4efb\u610f\u9664\u4e86 $b$ \u4ee5\u5916\u7684\u70b9\u3002\u6c42\u6709\u6ca1\u6709\u65b9\u6848\u4f7f\u5f97\u4ece $a$ \u51fa\u53d1\uff0c\u5230\u8fbe $b$ \u65f6\u8fb9\u6743 $\\operatorname{xor}$ \u548c\u4e3a $0$\u3002\n\n$1\\le n\\le 10^5$\u3002\n\n## \u601d\u8def\n\n\u7531\u4e8e $\\operatorname{xor}$ \u7684\u6027\u8d28\uff0c\u6700\u7ec8\u8d70\u51fa\u6765\u7684\u8def\u5f84\u4e00\u5b9a\u662f\u4e00\u6761\u4ece $a$ \u51fa\u53d1\u7684\u7b80\u5355\u8def\u5f84\u548c\u4e00\u6761\u7531 $b$ \u7ed3\u675f\u7684\u7b80\u5355\u8def\u5f84\u62fc\u8d77\u6765\u5f97\u5230\u7684\uff0c\u7531\u4e8e\u8981\u6c42 $\\operatorname{xor}$ \u548c\u4e3a $0$\uff0c\u6240\u4ee5\u8fd9\u4e24\u6761\u7b80\u5355\u8def\u5f84\u7684 $\\operatorname{xor}$ \u548c\u5e94\u8be5\u76f8\u7b49\u3002\n\n\u9884\u5904\u7406\u4ece $a$ \u51fa\u53d1\u7684 $n$ \u6761\u7b80\u5355\u8def\u5f84\uff0c\u4e22\u8fdb\u4e00\u4e2a `set` \u91cc\uff0c\u63a5\u7740\u4ece $b$ \u51fa\u53d1\u904d\u5386\u6bcf\u6761\u7b80\u5355\u8def\u5f84\uff0c\u67e5\u4e00\u4e0b\u6709\u6ca1\u6709\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\nusing Pii = pair<int, int>;\n\nconst int kN = 1e5 + 1;\n\nint t, n, a, b;\nset<int> m;\nvector<Pii> e[kN];\n\nbool D(int x, int f, int v) {\n  if (x == b) {\n    return !v;\n  }\n  m.insert(v);\n  for (Pii &i : e[x]) {\n    if (i.first != f) {\n      if (D(i.first, x, v ^ i.second)) {\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\nbool C(int x, int f, int v) {\n  if (x != b && m.find(v) != m.end()) {\n    return 1;\n  }\n  for (Pii &i : e[x]) {\n    if (i.first != f) {\n      if (C(i.first, x, v ^ i.second)) {\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  for (cin >> t; t--; ) {\n    cin >> n >> a >> b;\n    for (int i = 1; i <= n; ++i) {\n      e[i].clear();\n    }\n    for (int i = 1, x, y, w; i < n; ++i) {\n      cin >> x >> y >> w;\n      e[x].emplace_back(y, w), e[y].emplace_back(x, w);\n    }\n    m.clear();\n    cout << (D(a, 0, 0) || C(b, 0, 0) ? \"YES\" : \"NO\") << '\\n';\n  }\n  return 0;\n}\n```",
        "postTime": 1669290806,
        "uid": 376161,
        "name": "wsfxk",
        "ccfLevel": 6,
        "title": "CF1760G \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\u7ed9\u5b9a\u4e00\u9897\u65e0\u5411\u65e0\u6839\u6811\uff0c\u8fb9\u5e26\u6743\uff0c\u7ed9\u51fa $a$\uff0c$b$ \u70b9\uff0c\u4f60\u6709\u4e00\u4e2a\u521d\u59cb\u6570\u503c\u4e3a $0$ \u6bcf\u6b21\u7ecf\u8fc7\u4e00\u6761\u8fb9\uff0c\u4f60\u7684\u6570\u503c\u5c31\u5f02\u6216\u4e0a\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u4f60\u6700\u591a\u80fd\u591f\u4f20\u9001\u4e00\u6b21\uff0c\u4f60\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u9876\u70b9\u4f20\u9001\u5230\u4efb\u610f\u4e00\u4e2a\u9664 $b$ \u4e4b\u5916\u7684\u9876\u70b9\uff0c\u4f60\u4e0d\u80fd\u901a\u8fc7\u4e0e $b$ \u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\uff0c\u9664\u975e\u4f60\u7684\u6570\u503c\u7b49\u4e8e\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u3002\u6c42\u80fd\u5426\u4ece $a$ \u70b9\u5230\u8fbe $b$ \u70b9\u3002\n\u53ef\u4ee5\u4f7f\u7528 `dfs` \u6c42\u51fa\u4ece $a$ \u70b9\u51fa\u53d1\uff0c\u5728\u4e0d\u7ecf\u8fc7 $b$ \u70b9\u7684\u60c5\u51b5\u4e0b\u81ea\u5df1\u53ef\u4ee5\u53d6\u5230\u7684\u503c\uff0c\u53ef\u4ee5\u7528 `map` \u8bb0\u5f55\uff0c\u4e4b\u540e\u4ece $b$ \u70b9\u5f00\u59cb `dfs`\uff0c$b$ \u70b9\u5f00\u59cb\u7684\u79fb\u52a8\u4e0d\u53d7\u9650\u5236\uff0c\u5982\u679c\u51fa\u73b0\u67d0\u4e2a\u503c\u65e2\u53ef\u4ee5\u4ece $a$ \u51fa\u53d1\u53d6\u5230\uff0c\u53c8\u53ef\u4ee5\u4ece $b$ \u51fa\u53d1\u53d6\u5230\uff0c\u5219\u53ef\u4ee5\u4ece $a$ \u70b9\u5230\u8fbe $b$ \u70b9\u3002\n## \u4ee3\u7801\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint read()\n{\n    int n=0,k=1;\n    char ch=getchar();\n    while(ch>'9'||ch<'0')\n    {\n        if(ch=='-')\n        {\n            k=-1;\n        }\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        n=n*10+ch-'0';\n        ch=getchar();\n    }\n    return n*k;\n}\nint n,m,T,a,b;\nstruct edge\n{\n\tint v,ne,w;\n}E[200101];\nint Ecnt=0;\nint head[100101];\nvoid addedge(int u,int v,int w)\n{\n\tEcnt++;\n\tE[Ecnt].v=v;\n\tE[Ecnt].ne=head[u];\n\thead[u]=Ecnt;\n\tE[Ecnt].w=w;\n}\nbool exist=0;\nstd::map<int,bool>M;\nvoid dfs1(int u,int fa,int Xor)\n{\n\tfor(int r=head[u];r;r=E[r].ne)\n\t{\n\t\tint v=E[r].v;\n\t\tif(v==fa||v==b)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tM[Xor^E[r].w]=1;\n\t\tdfs1(v,u,Xor^E[r].w);\n\t}\n}\nvoid dfs2(int u,int fa,int Xor)\n{\n\tfor(int r=head[u];r;r=E[r].ne)\n\t{\n\t\tint v=E[r].v;\n\t\tif(v==fa)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tif(M[Xor^E[r].w]!=0)\n\t\t{\n\t\t\texist=1;\n\t\t}\n\t\tdfs2(v,u,Xor^E[r].w);\n\t}\n}\nsigned main()\n{\n\tn=0;\n\tT=read();\n\twhile(T--)\n\t{\n\t\tM.clear();\n\t\texist=0;\n\t\tfor(int r=1;r<=Ecnt;r++)\n\t\t{\n\t\t\tE[r]={0,0,0};\n\t\t}\n\t\tEcnt=0;\n\t\tn=read();\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\thead[r]=0;\n\t\t}\n\t\tassert(n<=100000&&n>1);\n\t\ta=read();\n\t\tb=read();\n\t\tint u,v,w;\n\t\tfor(int r=1;r<n;r++)\n\t\t{\n\t\t\tu=read();\n\t\t\tv=read();\n\t\t\tw=read();\n\t\t\taddedge(u,v,w);\n\t\t\taddedge(v,u,w);\n\t\t}\n\t\tM[0]=1;\n\t\tdfs1(a,0,0);\n\t\tdfs2(b,0,0);\n\t\tif(!exist)\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tputs(\"YES\");\n\t\t}\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1669088391,
        "uid": 576702,
        "name": "_Remake_",
        "ccfLevel": 4,
        "title": "CF1760G SlavicG's Favorite Problem \u9898\u89e3"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u8d77\u70b9\u3001\u7ec8\u70b9\u4ee5\u53ca\u6811\u7684\u8fb9\u6743\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u6761\u8def\u5f84\u4f7f\u5f97\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7ecf\u8fc7\u7684\u8fb9\u7684\u8fb9\u6743\u5f02\u6216\u503c\u4e3a0\uff0c\u5141\u8bb8\u4ece\u4efb\u4e00\u70b9\u8df3\u8dc3\u81f3\u9664\u7ec8\u70b9\u5916\u7684\u4efb\u4e00\u70b9\u4e00\u6b21\u3002\n\n#### \u89e3\u9898\u601d\u8def\n\n\u5f02\u6216\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\uff1a$ a \\operatorname{xor} a = 0 $\n\n\u9996\u5148\u8003\u8651\u4e0d\u8df3\u8dc3\u7684\u60c5\u51b5\uff1a\n\n\u5373\u627e\u5230\u4e00\u6761\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u4f7f\u5f97\u5404\u8fb9\u8fb9\u6743\u5f02\u6216\u503c\u4e3a0\uff0c\u76f4\u63a5dfs\u5373\u53ef\u3002\n\n\u518d\u8003\u8651\u8df3\u8dc3\u7684\u60c5\u51b5\uff1a\n\n\u5047\u8bbe\u4e00\u6761\u4ece\u8d77\u70b9\u51fa\u53d1\u7684\u8def\u5f84\u5404\u8fb9\u8fb9\u6743\u5f02\u6216\u503c\u4e3a $ x $\uff0c\u4e00\u6761\u4ece\u7ec8\u70b9\u51fa\u53d1\u7684\u8def\u5f84\u5404\u8fb9\u8fb9\u6743\u5f02\u6216\u503c\u4e3a $ y $\uff0c\u82e5\u5b58\u5728 $ x = y $ \u5219\u5b58\u5728\u6ee1\u8db3\u9898\u610f\u7684\u8def\u5f84\u3002\n\n\u8bbe\u8d77\u70b9\u4e3a $ S $\uff0c\u7ec8\u70b9\u4e3a $ T $\u3002\n\n\u5206\u522b\u4ee5 $ S , T $ \u4e3a\u8d77\u70b9dfs\u8bb0\u5f55\u5230\u8fbe\u4efb\u4e00\u70b9\u6240\u6709\u53ef\u80fd\u8def\u5f84\u7684\u5404\u8fb9\u8fb9\u6743\u7684\u5f02\u6216\u503c\uff08\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u7528set\u7ef4\u62a4\u5f02\u6216\u503c\uff09\u3002\n\n\u82e5\u4e24\u79cddfs\u4e2d\u5b58\u5728\u76f8\u540c\u7684\u5f02\u6216\u503c\uff0c\u5219\u5b58\u5728\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u8def\u5f84\u3002\n\n#### \u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <cstring>\n#include <set>\nusing namespace std;\n\nstruct edge\n{\n    long long v, w;\n};\n\nstruct node\n{\n    long long u, v, w;\n} num[100010];\n\nvector<edge> G[100010];\nset<long long> se;\nset<long long>::iterator iter;\n\nlong long tl, t, n, m, s;\nbool pd[100010], pl;\n\nlong long read()\n{\n    char c = getchar();\n    long long k = 0;\n    while (c < '0' || c > '9')\n    {\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9')\n    {\n        k = k * 10 + c - 48;\n        c = getchar();\n    }\n    return k;\n}\n\nbool cmp(node x, node y)\n{\n    return x.w < y.w;\n};\n\nvoid dfs(long long p, long long ws, int mods) // mods=0 \u7b2c\u4e00\u79cd\u60c5\u51b5 mods=2 \u7b2c\u4e8c\u79cd\u60c5\u51b5\n{\n    if (pl)\n    {\n        return;\n    }\n\n    if (p == t && mods == 0) // \u5b58\u5728\u76f4\u8fbe\u7ec8\u70b9\u7684\u5408\u6cd5\u8def\u5f84\n    {\n        if (ws == 0 && !pl)\n        {\n            printf(\"YES\\n\");\n            pl = true;\n        }\n        return;\n    }\n    if (p != t && mods == 0)\n    {\n        se.insert(ws);\n    }\n    for (long long i = 0; i < G[p].size(); ++i)\n    {\n        long long V = G[p][i].v, W = G[p][i].w;\n        if (pl)\n        {\n            return;\n        }\n        if (!pd[V])\n        {\n            pd[V] = true;\n            if (mods == 1)\n            {\n                iter = se.find(ws ^ W);\n                if (iter != se.end() && !pl) // \u5b58\u5728\u8df3\u8dc3\u540e\u80fd\u5230\u8fbe\u7ec8\u70b9\u7684\u8def\u5f84\n                {\n                    printf(\"YES\\n\");\n                    pl = true;\n                    return;\n                }\n            }\n            dfs(G[p][i].v, ws ^ W, mods);\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%lld\", &tl);\n    while (tl--)\n    {\n        memset(pd, 0, sizeof(pd));\n        memset(G, 0, sizeof(G));\n        se.clear();\n        n = read();\n        s = read();\n        t = read();\n        pl = false;\n        for (long long a = 1; a <= n - 1; ++a)\n        {\n            edge tmp;\n            num[a].u = read();\n            num[a].v = read();\n            num[a].w = read();\n            tmp.v = num[a].v;\n            tmp.w = num[a].w;\n            G[num[a].u].push_back(tmp);\n            tmp.v = num[a].u;\n            G[num[a].v].push_back(tmp);\n        }\n        pd[s] = true;\n        dfs(s, 0, 0);\n        if (pl) // \u82e5\u5b58\u5728\n        {\n            continue;\n        }\n        memset(pd, 0, sizeof(pd));\n        if (!pl) //\u82e5\u4e0d\u5b58\u5728\n        {\n            pd[t] = true;\n            dfs(t, 0, 1);\n        }\n        if (!pl) // \u82e5\u4e0d\u5b58\u5728\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1670151383,
        "uid": 89910,
        "name": "C_Cong",
        "ccfLevel": 5,
        "title": "\u6d1b\u8c37\u9898\u89e3 CF1760G \u3010SlavicG's Favorite Problem\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u9700\u8981\u8fdb\u5165 $b$ \u65f6\u7684\u8fb9\u6743\u5f02\u6216\u548c\u4e3a $0$\uff0c\u4e14\u53ef\u4ee5\u4f7f\u7528\u4e00\u6b21\u4f20\u9001\u3002\u56e0\u4e3a\u4f20\u9001\u53ef\u4ee5\u4ece\u4efb\u610f\u70b9\u51fa\u53d1\uff0c\u4f20\u9001\u5230\u9664 $b$ \u4ee5\u5916\u7684\u4efb\u610f\u70b9\uff0c\u56e0\u6b64\u53ef\u4ee5\u89c6\u4e3a\u56fa\u5b9a\u4f7f\u7528\u4e00\u6b21\u4f20\u9001\u3002  \n\u8bbe\u4ece $a$ \u51fa\u53d1\u904d\u5386\u5230\u70b9 $i$ \u65f6\u7684\u8fb9\u6743\u5f02\u6216\u548c\u4e3a $w_i$\uff0c\u73b0\u5728\u5c31\u9700\u8981\u4f20\u9001\u5230\u4e00\u4e2a\u70b9\uff0c\u4e14\u8fd9\u4e2a\u70b9\u8d70\u5230 $b$ \u7684\u8fb9\u6743\u5f02\u6216\u548c\u4e5f\u4e3a $w_i$\uff0c\u8fd9\u6837\u8d70\u5230 $b$ \u65f6\u7684\u8fb9\u6743\u5f02\u6216\u548c\u5c31\u4e3a $0$ \u4e86\u3002  \n\u53ef\u4ee5\u53cd\u5411\u628a $b$ \u4f5c\u4e3a\u8d77\u70b9\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230 $b$ \u7684\u8fb9\u6743\u5f02\u6216\u548c\u3002\u518d\u4f7f\u7528 map \u8bb0\u5f55\u662f\u5426\u5b58\u5728\u8be5\u5f02\u6216\u548c\u7684\u7ed3\u679c\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\ntypedef long long ll;\nstruct Edge{\n\tint v,w;\n};\nvector<Edge> e[100005];\nint wa[100005],wb[100005];\nmap<int,bool> Map;\nint n,a,b;\nbool ok;\nvoid dfsa(int u,int fa){\n\tif(u == b && wa[u]==0) ok = true;\n\tif(Map[wa[u]]) ok = true;\n\tfor(int i = 0;i < e[u].size();i++){\n\t\tint v = e[u][i].v;\n\t\tif(v==fa || v==b) continue;\n\t\twa[v] = (wa[u]^e[u][i].w);\n\t\tdfsa(v,u);\n\t}\n}\nvoid dfsb(int u,int fa){\n\tfor(int i = 0;i < e[u].size();i++){\n\t\tint v = e[u][i].v;\n\t\tif(v == fa) continue;\n\t\twb[v] = (wb[u]^e[u][i].w);\n\t\tif(v != a) Map[wb[v]] = true;\n\t\tdfsb(v,u);\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(NULL);\n\tcin.tie(0);\n\tint T;\n\tcin>>T;\n\twhile(T--){\n\t\tcin>>n>>a>>b;\n\t\tint u,v,w;\n\t\tfor(int i = 1;i <= n;i++) e[i].clear(),wa[i]=wb[i]=0;\n\t\tfor(int i = 1;i <= n-1;i++){\n\t\t\tcin>>u>>v>>w;\n\t\t\te[u].pb(Edge{v,w});\n\t\t\te[v].pb(Edge{u,w});\n\t\t}\n\t\tMap.clear();\n\t\tok = false;\n\t\tdfsb(b,0);\n\t\tdfsa(a,0);\n\t\tif(ok) cout<<\"YES\"<<endl;\n\t\telse cout<<\"NO\"<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1669427826,
        "uid": 102849,
        "name": "Deft_t",
        "ccfLevel": 0,
        "title": "CF1760G\u9898\u89e3"
    }
]