[
    {
        "content": "\u6839\u53f7\u5206\u6cbb\u3002\n\n\u4ee4 $s$ \u4e32\u957f\u5ea6\u4e3a $n$ \uff0c\u5728 $s$ \u4e32\u4e2d\u957f\u5ea6\u4e0d\u8d85\u8fc7 $4$ \u7684\u5b50\u4e32\u51fa\u73b0\u603b\u6b21\u6570\u4e0d\u8d85\u8fc7 $4n$ \uff0c\u56e0\u6b64\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7 $\\sqrt{4n}$ \u7684\u5b50\u4e32\u4e0d\u8d85\u8fc7 $\\sqrt{4n}$ \u4e2a\u3002\n\n\u5148\u9884\u5904\u7406\u6bcf\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7 $4$ \u7684\u5b50\u4e32\u5728 $s$ \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7 $\\sqrt{4n}$ \u7684\u5b50\u4e32\uff0c\u5c06 $s$ \u4e32\u626b\u4e00\u904d\uff0c\u9884\u5904\u7406\u8fd9\u4e2a\u5b50\u4e32\u548c\u5176\u4ed6\u5b50\u4e32\u7684\u7b54\u6848\u3002\n\n\u5982\u679c\u8be2\u95ee\u4e2d\u4e24\u4e2a\u5b50\u4e32\u51fa\u73b0\u6b21\u6570\u90fd\u4e0d\u8d85\u8fc7 $\\sqrt{4n}$ \uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u4e32\u5728 $s$ \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u626b\u4e00\u904d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n)$ \u3002\n\n\u601d\u8def\u4e0d\u96be\u60f3\uff0c\u4f46\u4ee3\u7801\u7ec6\u8282\u8f83\u591a\u3002\u4ee3\u7801\u4e2d\u7528 $500$ \u4ee3\u66ff $\\sqrt{4n}$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=70009;\nchar s[N],a[5],b[5];\nint mp[500009],h[N],len[N],f[331][N],p[5][N];\n//mp\u4e3a\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u4e32\uff0ch\u4e3a\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7500\u7684\u4e32\uff0clen\u4e3a\u6bcf\u4e2a\u4e32\u7684\u957f\u5ea6\uff0cf\u4e3a\u9884\u5904\u7406\u7684\u7b54\u6848\uff0cp\u4e3as\u4e2d\u6bcf\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc74\u7684\u5b50\u4e32\u7684\u5e8f\u53f7\nvector<int>v[N];//\u6bcf\u4e2a\u4e32\u51fa\u73b0\u7684\u8d77\u59cb\u4f4d\u7f6e\ninline int get(char*s,int l){\n\tint r=0,i=0;\n\tfor(;i<l;++i)r=r*26+s[i]-96;\n\treturn r;\n}//\u5c06\u5b50\u4e32\u8f6c\u6210\u6570\u5b57\uff0c\u4fbf\u4e8e\u5b58\u50a8\nint main(){\n\tint n,q,id=0,ct=0,i,j,k,l,u,x,y,z,o;\n\tscanf(\"%s%d\",s+1,&q),n=strlen(s+1);\n\tfor(l=1;l<5;++l){\n\t\tfor(i=1,j=n-l+2;i<j;++i){\n\t\t\tk=get(s+i,l);\n\t\t\tif(!mp[k])mp[k]=++id,len[id]=l;\n\t\t\tv[p[l][i]=mp[k]].push_back(i);\n\t\t}\n\t}//\u9884\u5904\u7406\u6bcf\u4e2a\u4e32\u5728s\u4e2d\u51fa\u73b0\u4f4d\u7f6e\n\tfor(i=1;i<=id;++i)if(j=v[i].size(),j>500){\n\t\th[i]=++ct,u=len[i],memset(f[ct],9,id+2<<2);\n\t\tfor(k=1;k<j;++k){\n\t\t\tx=v[i][k-1],y=v[i][k];\n\t\t\tfor(z=x;z<y;++z)for(l=1;l<5;++l)f[ct][p[l][z]]=min(f[ct][p[l][z]],min(max(z+l-x,u),max(y+u-z,l)));\n\t\t}\n\t\tfor(z=x=v[i][j-1];z<=n;++z)for(l=1;l<5;++l)f[ct][p[l][z]]=min(f[ct][p[l][z]],max(z+l-x,u));\n\t\tfor(z=1,y=v[i][0];z<y;++z)for(l=1;l<5;++l)f[ct][p[l][z]]=min(f[ct][p[l][z]],max(y+u-z,l));\n\t}//\u9884\u5904\u7406\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7500\u7684\u5b50\u4e32\u7b54\u6848\n\twhile(q--){\n\t\tscanf(\"%s%s\",a,b),x=mp[get(a,strlen(a))],y=mp[get(b,strlen(b))];\n\t\tif(!x||!y)puts(\"-1\");//\u4e0d\u5b58\u5728\u5b50\u4e32\n\t\telse if(h[x])printf(\"%d\\n\",f[h[x]][y]);\n\t\telse if(h[y])printf(\"%d\\n\",f[h[y]][x]);//\u5b58\u5728\u4e00\u4e2a\u4e32\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7500\uff0c\u76f4\u63a5\u8f93\u51fa\n\t\telse{\n\t\t\tj=v[x].size(),k=v[y].size()-1,l=len[x],u=len[y],z=0,o=1e9;\n\t\t\tfor(i=0;i<j;++i){\n\t\t\t\twhile(z<k&&v[y][z]<v[x][i])++z;\n\t\t\t\tif(v[y][z]>=v[x][i]){\n\t\t\t\t\to=min(o,v[y][z]+u-v[x][i]);\n\t\t\t\t\tif(z)o=min(o,v[x][i]+l-v[y][z-1]);\n\t\t\t\t}else o=min(o,v[x][i]+l-v[y][z]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",max(o,max(l,u)));\n\t\t}//\u4e24\u4e2a\u4e32\u51fa\u73b0\u6b21\u6570\u90fd\u4e0d\u8d85\u8fc7500\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1585117827,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF444D \u3010DZY Loves Strings\u3011"
    },
    {
        "content": "\u53d1\u73b0 $|a|,|b|$ \u5f88\u5c0f\uff0c\u53ef\u4ee5\u66b4\u529b\u5904\u7406\u51fa $O(4|S|)$ \u4e2a\u53ef\u80fd\u7684\u4e32\u3002  \n\n\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570\u5927\u7b49\u4e8e $\\sqrt{4|S|}$ \u7684\u4e32\uff0c\u66b4\u529b\u9884\u5904\u7406\u548c\u5176\u4ed6\u4e32\u7684\u7b54\u6848\uff0c\u590d\u6742\u5ea6 $O(|S|\\sqrt{|S|})$ \u3002  \n\n\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e $\\sqrt{4|S|}$ \u7684\u4e32\uff0c\u66b4\u529b\u8ba1\u7b97\u7b54\u6848\uff0c\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{4|S|})$ \u3002  \n\n\u603b\u590d\u6742\u5ea6\u4e3a $O((q+|S|)\\sqrt{|S|})$ \u3002  \n\n\u6ce8\u610f\u4e00\u4e9b\u5b9e\u73b0**\u7ec6\u8282**\u3002  \n\n**\u6ce8\u610f\u4e8b\u9879\uff1a**\n1. \u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c27\u8fdb\u5236\uff0c`a-z` \u5bf9\u5e94 `1-26` \u3002  \n1. \u5185\u5b58\u95ee\u9898\n\t1. \u5b57\u7b26\u4e32\u5e93\u7684\u5185\u5b58\u4e3a $27^4$ \uff0c\u4e0d\u662f $26^4$ \uff01\uff01\uff01\n    1. \u9884\u5904\u7406\u7684\u6570\u7ec4\u5927\u5c0f\u4e0d\u662f $4|S| \\times \\sqrt{4|S|}$\uff0c\u8fd9\u6837\u4f1a **MLE** \u7684\uff0c\u89c2\u5bdf\u53d1\u73b0\uff0c\u80af\u5b9a\u4f1a\u6709\u91cd\u590d\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u8bc1\u660e\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u6570 $\\leqslant 3|S|$\u3002\n \n1. \u5757\u957f\u6211\u7528\u7684\u662f $450$ \uff0c\u672c\u9898\u4e0d\u5361\u5e38\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#define _for(i,a,b) for(register int i=(a);i<=(b);++i)\n#define __for(i,a,b) for(register int i=(a);i>=(b);--i)\n#define Re register int\n#define il inline\n#define pc putchar\nusing namespace std;\ntypedef long long ll;\nconst int N=50000+10,M=531441+10,inf=2147483647;\nil int re(){\n\tint x=0;\n\tbool f=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t\tf|=ch=='-',ch=getchar();\n\twhile(ch>='0'&&ch<='9')\n\t\tx=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nvoid pr(int x){\n\tif(x<0) x=-x,pc('-');\n\tif(x>9) pr(x/10);\n\tpc(x%10|48);\n}\n\nchar s[N];int n;\nil int calc(int l,int r){\n\tint num=0;\n\t_for(i,l,r)\n\t\tnum=num*27+s[i]-'a'+1;\n\treturn num;\n}\nconst int B=450,B1=B+10,B2=3*N/B+10;\nint all[M],L[N*3],cnt;\nint p[5][N];\nvector<int> v[N*3];\nint num,all2[N*3],f[B2][N*3];\nil int min(int a,int b){\n\treturn a<b?a:b;\n}\nil int max(int a,int b){\n\treturn a>b?a:b;\n}\nvoid init(){\n\t_for(len,1,4){//\u9884\u5904\u7406 O(4|S|) \u4e2a\u5b57\u7b26\u4e32\n\t\tfor(Re l=1,r;(r=l+len-1)<=n;++l){\n\t\t\tint slr=calc(l,r);\n\t\t\tif(!all[slr]){\n\t\t\t\tall[slr]=++cnt;//\u5bf9\u5e94id\n\t\t\t\tL[cnt]=len;//\u957f\u5ea6\n\t\t\t}\n\t\t\tp[len][l]=all[slr];//\u8d77\u59cb\u4f4d\u7f6e\u548c\u957f\u5ea6\u5bf9\u5e94\u4e32\u7684id\n\t\t\tv[all[slr]].push_back(l);//\u5b58\u653e\u51fa\u73b0\u4f4d\u7f6e\n\t\t}\n\t}\n\tmemset(f,0x3f,sizeof(f));\n\t_for(i,1,cnt)\n\t\tif(v[i].size()>=B){//\u5904\u7406\u51fa\u73b0\u6b21\u6570>=sqrt(4|S|) \u7684\u90e8\u5206\n\t\t\tall2[i]=++num;\n\t\t\tfor(Re j=1;j<v[i].size();++j){\n\t\t\t\t//\u901a\u8fc7\u679a\u4e3e\u5f53\u524d\u4e32\u7684\u51fa\u73b0\u4f4d\u7f6e\u6765\u627e\u4e2d\u95f4\u7684\u4e32\n\t\t\t\tint x=v[i][j-1],y=v[i][j],xx=x+L[i]-1,yy=y+L[i]-1;\n\t\t\t\t_for(len,1,4)\n\t\t\t\t\tfor(Re l=x,r;l<y&&(r=l+len-1)<=n;++l)\n\t\t\t\t\t\tf[num][p[len][l]]=min(f[num][p[len][l]],\n\t\t\t\t\t\tmin(max(r,xx)-x+1,max(r,yy)-l+1));\n\t\t\t}\n\t\t\tint x=v[i][0],y=x+L[i]-1;\n\t\t\t_for(len,1,4)//\u5f00\u5934\u7684\n\t\t\t\tfor(Re l=1;l<x;++l)\n\t\t\t\t\tf[num][p[len][l]]=min(f[num][p[len][l]],\n\t\t\t\t\tmax(y,l+len-1)-l+1);\n\t\t\tx=v[i][v[i].size()-1],y=x+L[i]-1;\n\t\t\t_for(len,1,4)//\u7ed3\u5c3e\u7684\n\t\t\t\tfor(Re l=x,r;(r=l+len-1)<=n;++l)\n\t\t\t\t\tf[num][p[len][l]]=min(f[num][p[len][l]]\n\t\t\t\t\t,max(y,r)-x+1);\n\t\t}\n\t\n}\n\nsigned main(){\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tinit();\n\tint m=re();\n\twhile(m--){\n\t\tscanf(\"%s\",s+1);\n\t\tint a=all[calc(1,strlen(s+1))];\n\t\tscanf(\"%s\",s+1);\n\t\tint b=all[calc(1,strlen(s+1))];\n\t\t//\u5206\u522b\u5c06\u5b57\u7b26\u4e32\u8bfb\u5165\uff0c\u5bf9\u5e94\u5230\u6570\u503c\u4e0a\n\t\tif(!a||!b)\n\t\t\tpr(-1),pc('\\n');\n\t\telse if(all2[a])//\u7279\u5224\u9884\u5904\u7406\u7684\u90e8\u5206\n\t\t\tpr(f[all2[a]][b]),pc('\\n');\n\t\telse if(all2[b])\n\t\t\tpr(f[all2[b]][a]),pc('\\n');\n\t\telse{//\u66b4\u529b\n\t\t\tint now=0,ans=inf;\n\t\t\tfor(Re i=0;i<v[a].size();++i){\n\t\t\t\tint la=v[a][i],ra=la+L[a]-1;\n\t\t\t\twhile(now+2<=v[b].size()&&v[b][now]<la)\n\t\t\t\t\t++now;//\u4f7flb\u5c3d\u53ef\u80fd\u5730\u63a5\u8fd1la\n\t\t\t\tint lb=v[b][now],rb=lb+L[b]-1;\n\t\t\t\tif(lb>=la){\n\t\t\t\t\tans=min(ans,max(ra,rb)-la+1);//lb\u5728la\u524d\n\t\t\t\t\tif(now){\n\t\t\t\t\t\tlb=v[b][now-1],rb=lb+L[b]-1;\n\t\t\t\t\t\tans=min(ans,max(ra,rb)-lb+1);\n\t\t\t\t\t\t//la\u5728lb\u524d\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans=min(ans,max(ra,rb)-lb+1);\n\t\t\t\t\t//la\u5728lb\u524d\n\t\t\t\t}\n\t\t\t}\n\t\t\tpr(ans),pc('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1672825061,
        "uid": 609626,
        "name": "St_john",
        "ccfLevel": 0,
        "title": "CF444D  DZY Loves Strings"
    },
    {
        "content": "\u5b57\u7b26\u4e32\uff1f\u54c8\u5e0c\uff01\n\n\u8003\u8651\u66b4\u529b\uff0c\u5bf9\u6bcf\u6b21\u8be2\u95ee $a,b$ \u627e\u5230\u5176\u5728 $S$ \u4e2d\u7684\u6240\u6709\u51fa\u73b0\uff0c\n\n\u5bf9 $a$ \u7684\u6240\u6709\u51fa\u73b0\uff0c\u627e\u5230\u4e0e\u5176\u6700\u8fd1\u7684 $b$ \u7684\u51fa\u73b0\uff0c\n\n\u4e0d\u96be\u53d1\u73b0\u82e5 $a$ \u7684\u679a\u4e3e\u662f\u5355\u8c03\u7684\uff0c\u5219 $b$ \u7684\u679a\u4e3e\u4e5f\u662f\u5355\u8c03\u7684\u3002\n\n\u5bf9 $a,b$ \u7684\u51fa\u73b0\u6b21\u6570\u6839\u53f7\u5206\u6cbb\uff0c\u6ce8\u610f\u5230 $1\\le|a|,|b|\\le4$\uff0c\u5219\u51fa\u73b0\u6b21\u6570 $\\Omega(\\sqrt n)$ \u7684\u4e32\u6709 $O(\\sqrt n)$ \u4e2a\u3002\n\n\u5bf9\u6240\u6709\u51fa\u73b0\u6b21\u6570 $\\Omega(\\sqrt n)$ \u7684\u4e32\uff0c\u5904\u7406\u5176\u4e0e\u5176\u4ed6\u6240\u6709\u4e32\uff08$O(n)$ \u4e2a\uff09\u7684\u7b54\u6848\u3002\n\n\u8be2\u95ee $a,b$ \u65f6\uff0c\u82e5\u5176\u4e00\u51fa\u73b0\u6b21\u6570 $\\Omega(\\sqrt n)$\uff0c\u67e5\u8868\u5373\u53ef\u3002\n\n\u82e5 $a,b$ \u51fa\u73b0\u6b21\u6570\u5747\u4e3a $O(\\sqrt n)$\uff0c\u5219\u53ef\u4ee5\u4fdd\u8bc1\u66b4\u529b\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n)$\u3002\n```cpp\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#define B 27ll\nusing namespace std;\nvector<int> v[150050];\nchar s[50050];\nint n, m, c1, c2, p1[600050], L[150050], p[5][50050], p2[150050], f[350][150050];\nint H(int l, int r)\n{\n    int q = 0;\n    for (int i = l; i <= r; ++i)\n        q = q * B + s[i] - 'a' + 1;\n    return q;\n}\nint main()\n{\n    memset(f, 0x3f, sizeof f);\n    scanf(\"%s\", s + 1);\n    n = strlen(s + 1);\n    for (int z = 1; z <= 4; ++z)\n        for (int l = 1, k; l + z - 1 <= n; ++l)\n        {\n            if (!p1[k = H(l, l + z - 1)])\n                L[p1[k] = ++c1] = z;\n            v[p[z][l] = p1[k]].push_back(l);\n        }\n    for (int i = 1; i <= c1; ++i)\n        if (v[i].size() >= 450)\n        {\n            p2[i] = ++c2;\n            for (int j = 1, x1, x2, y1, y2; j < v[i].size(); ++j)\n            {\n                x1 = v[i][j - 1];\n                x2 = x1 + L[i] - 1;\n                y1 = v[i][j];\n                y2 = y1 + L[i] - 1;\n                for (int z = 1; z <= 4; ++z)\n                    for (int l = x1, r; l < y1 && l + z - 1 <= n; ++l)\n                        r = l + z - 1, f[c2][p[z][l]] = min(f[c2][p[z][l]], min(max(r, x2) - x1 + 1, max(r, y2) - l + 1));\n            }\n            int x1 = v[i][0], x2 = x1 + L[i] - 1;\n            for (int z = 1; z <= 4; ++z)\n                for (int l = 1; l < x1; ++l)\n                    f[c2][p[z][l]] = min(f[c2][p[z][l]], max(x2, l + z - 1) - l + 1);\n            x1 = v[i][v[i].size() - 1], x2 = x1 + L[i] - 1;\n            for (int z = 1; z <= 4; ++z)\n                for (int l = x1; l + z - 1 <= n; ++l)\n                    f[c2][p[z][l]] = min(f[c2][p[z][l]], max(x2, l + z - 1) - x1 + 1);\n        }\n    scanf(\"%d\", &m);\n    while (m--)\n    {\n        scanf(\"%s\", s + 1);\n        int a = p1[H(1, strlen(s + 1))];\n        scanf(\"%s\", s + 1);\n        int b = p1[H(1, strlen(s + 1))];\n        if (!a || !b)\n            puts(\"-1\");\n        else if (p2[a])\n            printf(\"%d\\n\", f[p2[a]][b]);\n        else if (p2[b])\n            printf(\"%d\\n\", f[p2[b]][a]);\n        else\n        {\n            int u = 0, q = 1e9;\n            for (int i = 0, l1, r1, l2, r2; i < v[a].size(); ++i)\n            {\n                l1 = v[a][i];\n                r1 = l1 + L[a] - 1;\n                while (u + 1 < v[b].size() && v[b][u] < l1)\n                    ++u;\n                l2 = v[b][u];\n                r2 = l2 + L[b] - 1;\n                if (l2 >= l1)\n                {\n                    q = min(q, max(r1, r2) - l1 + 1);\n                    if (u)\n                    {\n                        l2 = v[b][u - 1];\n                        r2 = l2 + L[b] - 1;\n                        q = min(q, max(r1, r2) - l2 + 1);\n                    }\n                }\n                else\n                    q = min(q, max(r1, r2) - l2 + 1);\n            }\n            printf(\"%d\\n\", q);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1675486446,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "DZY Loves Strings"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u8be2\u95ee\u5305\u542b\u7ed9\u51fa\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u77ed\u5b50\u4e32\u3002\n## \u9898\u89e3\n\u5bf9\u4e8e\u7b54\u6848\u7684\u8ba1\u7b97\uff0c\u53ea\u8981\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32\u5728\u6a21\u677f\u4e32\u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5904\u7406\u4e86\u3002\n\n\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u5728\u7ebf\u5904\u7406\u662f\u51e0\u4e4e\u4e0d\u53ef\u80fd\u7684\uff0c\u54ea\u6015\u662f\u6700\u9ad8\u6548\u7684\u5339\u914d\u7b97\u6cd5\u4e5f\u65e0\u6cd5\u80dc\u4efb\uff0c\u4f46\u662f\u5982\u679c\u628a\u8be2\u95ee\u4e32\u62ff\u51fa\u6765\u76f4\u63a5\u5904\u7406\u5f88\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u6781\u7aef\u60c5\u51b5\u628a\u4eba\u5361\u6389\uff0c\u6240\u4ee5\u9700\u8981\u8003\u8651\u5747\u8861\u4e00\u4e0b\u590d\u6742\u5ea6\u3002\n\n\u9996\u5148\u53ef\u4ee5\u9884\u5904\u7406\u6240\u6709\u8be2\u95ee\u4e32\u5728\u6a21\u677f\u4e32\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u7531\u4e8e\u8be2\u95ee\u4e32\u975e\u5e38\u77ed\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u5339\u914d\u3002\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u51fa\u73b0\u4e86\u8d85\u8fc7 $ \\sqrt{n} $ \u7ea7\u522b\u9600\u503c\u7684\u4e32\u4e2a\u6570\u4e0d\u8d85\u8fc7 $ \\sqrt{n} $ \u7ea7\u522b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5411\u524d\u548c\u5411\u540e\u626b\u6574\u4e2a\u5e8f\u5217\u9884\u5904\u7406\u51fa\u8fd9\u4e9b\u4e32\u548c\u5176\u4ed6\u6240\u6709\u4e32\u7ec4\u5408\u8d77\u6765\u7684\u7b54\u6848\uff0c\u800c\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u9600\u503c\u7684\u6570\u53ef\u4ee5\u4e24\u8005\u95f4\u4f7f\u7528\u7c7b\u4f3c\u5f52\u5e76\u7684\u65b9\u5f0f\u6c42\u503c\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u662f $ \\sqrt{n} $ \u7ea7\u522b\u3002\u603b\u590d\u6742\u5ea6 $ O(n\\sqrt{n}) $ \u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nint n,cnt,sum[N],block=500;\nint last[N],siz[N];\nvector<int> v[N],res[N],id[N];\nmap<string,int> m;\npair<int,int> q[N];\nstring s,c;\nvoid solve(int x)\n{\n    for(int i=1;i<=cnt;i++) last[i]=0;\n    res[x].resize(cnt+5,2e9);\n    for(int i=1;i<=(int)s.size();i++)\n    {\n        for(int j : id[i])\n        {\n            last[j]=i;\n            if(last[x])\n            {\n                res[x][j]=min(res[x][j],max(siz[x]+i-last[x],siz[j]));\n            }\n        }\n    }\n    for(int i=1;i<=cnt;i++) last[i]=0;\n    for(int i=(int)s.size();i>=1;i--)\n    {\n        for(int j : id[i])\n        {\n            last[j]=i;\n            if(last[x])\n                res[x][j]=min(res[x][j],max(siz[j]+last[x]-i,siz[x]));\n        }\n    }\n}\nint query(int x,int y)\n{\n    if(!sum[x] || !sum[y]) return -1;\n    int res=2e9;\n    int i=0,j=0;\n    while(i<v[x].size() && j<v[y].size())\n    {\n        if(v[x][i]<v[y][j])\n        {\n            res=min(res,max(siz[x]+v[y][j]-v[x][i],siz[y]));i++;\n        }\n        else{\n            res=min(res,max(siz[y]+v[x][i]-v[y][j],siz[x]));j++;\n        }\n    }\n    while(i<v[x].size())\n    {\n        res=min(res,max(siz[y]-v[y][j-1]+v[x][i],siz[x]));i++;\n    }\n    while(j<v[y].size())\n    {\n        res=min(res,max(siz[x]-v[x][i-1]+v[y][j],siz[y]));j++;\n    }\n    return res;\n}\nint main()\n{\n    cin>>s;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>c;\n        if(!m[c]) m[c]=++cnt,siz[cnt]=c.size();\n        q[i].first=m[c];\n        cin>>c;\n        if(!m[c]) m[c]=++cnt,siz[cnt]=c.size();\n        q[i].second=m[c];\n    }\n    for(int i=1;i<=(int)s.size();i++)\n    {\n        string now=\"\";\n        for(int j=i;j>=max(i-5,1);j--)\n        {\n            now=s[j-1]+now;\n            if(m[now])\n            {\n                int x=m[now];\n                sum[x]++;v[x].push_back(i);\n                id[i].push_back(x);\n            }\n        }\n    }\n    for(int i=1;i<=cnt;i++)\n    {\n        if(sum[i]<block) continue;\n        solve(i);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(sum[q[i].first]<sum[q[i].second]) swap(q[i].first,q[i].second);\n        if(sum[q[i].first]>=block)\n        {\n            if(res[q[i].first][q[i].second]==2e9) printf(\"-1\\n\");\n            else printf(\"%d\\n\",res[q[i].first][q[i].second]);\n        }\n        else{\n            printf(\"%d\\n\",query(q[i].first,q[i].second));\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1673011905,
        "uid": 300710,
        "name": "xuyuansu",
        "ccfLevel": 0,
        "title": "CF444D DZY Loves Strings"
    },
    {
        "content": "\u7531\u4e8equery\u4e32\u7684\u6700\u5927\u957f\u5ea6\u53ea\u67094 \uff0c\u663e\u7136\u957f\u5ea6\u4e3a4\u7684\u4e0d\u540c\u5b50\u4e32\u6700\u591a4 * n\u4e2a \uff0c\u6240\u4ee5\u5199\u4e2a\u8d85\u7ea7\u5927\u66b4\u529b \uff0c\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\u52a0\u82b1\u5f0f\u526a\u679d\u538b\u5e38\u6570 \uff0c\u5c31A\u4e86\uff08\u5c45\u71361A\u4e86  \u6211\u81ea\u5df1\u90fd\u4e0d\u4fe1\uff09 \nAC\u4ee3\u7801\uff1a\n```cpp\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/hash_policy.hpp>\nusing namespace __gnu_pbds;\n#include <ext/rope>\nusing namespace __gnu_cxx;\n#include<string>\n#include<vector>\n#include<regex>\n#include<algorithm>\n#include<random>\n#include<map>\n#include<set>\n#include<deque>\n#include<iomanip>\n#include<sstream>\n#include<stack>\n#include<iostream>\n#include<limits>\n#include<bitset>\n#include<list>\n#include<queue>\n#include<memory>\n#include<functional>\n#include<unordered_map>\n#define EPS 1e-8\nconst int sigma = 26;\nusing namespace std;\nstruct Trie_node\n{\n\tTrie_node *next[sigma];\n\tTrie_node *fail;\n\tint end, end2, ans, depth;\n\tstring ends;\n \tTrie_node(Trie_node*a = NULL, bool b = 0)\n\t{\n\t\tmemset(next, 0, sizeof(next));\n\t\tfail = a;\n\t\tend2 = 0;\n\t\tend = b;\n\t\tans = 0;\n\t\tdepth = 0;\n\t}\n};\n\nstruct Trie\n{\n\tTrie_node *root;\n\tTrie()\n\t{\n\t\troot = new Trie_node(NULL, 0);\n\t}\n\tvoid insert(string &l)\n\t{\n\t\tTrie_node *found = root;\n\t\tfor (auto &s : l)\n\t\t{\n\t\t\tif (found->next[s - 'a'] != NULL)\n\t\t\t\tfound = found->next[s - 'a'];\n\t\t\telse\n\t\t\t{\n\t\t\t\tfound->next[s - 'a'] = new Trie_node(NULL, 0);\n\t\t\t\tfound = found->next[s - 'a'];\n\t\t\t}\n\t\t}\n\t\tfound->end++;\n\t\tfound->depth = l.size();\n\t\tfound->ends = l;\n\t}\n\n\tvoid compute_fail()\n\t{\n\t\tqueue<Trie_node *> part;\n\t\tpart.push(root);\n\t\twhile (!part.empty())\n\t\t{\n\t\t\tTrie_node *part2 = NULL;\n\t\t\tTrie_node *father = part.front();\n\t\t\tpart.pop();\n\t\t\tfor (int s = 0; s < sigma; ++s)\n\t\t\t{\n\t\t\t\tif (father->next[s] != NULL)\n\t\t\t\t{\n\t\t\t\t\tif (father == root)\n\t\t\t\t\t\tfather->next[s]->fail = root;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tpart2 = father->fail;\n\t\t\t\t\t\twhile (part2 != NULL)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (part2->next[s] != NULL)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfather->next[s]->fail = part2->next[s];\n\t\t\t\t\t\t\t\tfather->next[s]->end2 += part2->next[s]->end2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpart2 = part2->fail;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (part2 == NULL)\n\t\t\t\t\t\t\tfather->next[s]->fail = root;\n\t\t\t\t\t}\n\t\t\t\t\tpart.push(father->next[s]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tvoid clear()\n\t{\n\t\troot = new Trie_node(NULL, 0);\n\t}\n}trie1;\nlist<pair<string,string> > query;\ngp_hash_table<string, set<int> > trans;\nmap<pair<string, string>, int> trans2;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcout.tie(NULL);\n\tstring s,qs1,qs2;\n\tint n;\n\tcin >> s;\n\tcin >> n;\n\twhile (n--)\n\t{\n\t\tcin >> qs1 >> qs2;\n\t\ttrie1.insert(qs1);\n\t\ttrie1.insert(qs2);\n\t\tquery.push_back({ qs1,qs2 });\n\t}\n\ttrie1.compute_fail();\n\tTrie_node *p=trie1.root;\n\tfor (int i = 0; i < s.size(); ++i)\n\t{\n\t\tif (p->next[s[i] - 'a'] != NULL)\n\t\t{\n\t\t\tp = p->next[s[i] - 'a'];\n\t\t\tTrie_node *p2 = p;\n\t\t\twhile (p2!= trie1.root)\n\t\t\t{\n\t\t\t\ttrans[p2->ends].insert(i+1);\n\t\t\t\tp2 = p2->fail;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile (p != trie1.root && p->next[s[i] - 'a'] == NULL)\n\t\t\t\tp = p->fail;\n\t\t\tif (p->next[s[i] - 'a'] != NULL)\n\t\t\t{\n\t\t\t\tp = p->next[s[i] - 'a'];\n\t\t\t\tTrie_node *p2 = p;\n\t\t\t\twhile (p2 != trie1.root)\n\t\t\t\t{\n\t\t\t\t\ttrans[p2->ends].insert(i + 1);\n\t\t\t\t\tp2 = p2->fail;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\twhile (!query.empty())\n\t{\n\t\tauto k = query.front(),k2=query.front();\n\t\tquery.pop_front();\n\t\tswap(k2.first, k2.second);\n\t\tif (trans2.find(k) == trans2.end() && trans2.find(k2) == trans2.end())\n\t\t{\n\t\t\tint Min = 10000000;\n\t\t\tif (k.first == k.second)\n\t\t\t{\n\t\t\t\tif (!trans[k.first].empty())\n\t\t\t\t\ttrans2[k] = k.first.size();\n\t\t\t\telse\n\t\t\t\t\ttrans2[k] = -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (trans[k.first].size() > trans[k.second].size())\n\t\t\t\t{\n\t\t\t\t\tfor (auto &it1 : trans[k.second])\n\t\t\t\t\t{\n\t\t\t\t\t\tauto it2=trans[k.first].lower_bound(it1);\n\t\t\t\t\t\tint calc ;\n\t\t\t\t\t\tif (it2 != trans[k.first].end())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcalc = min(it1 - k.second.size(), *it2 - k.first.size());\n\t\t\t\t\t\t\tMin = min(int(*it2 - calc), Min);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (it2 != trans[k.first].begin())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tit2--;\n\t\t\t\t\t\t\tcalc = min(it1 - k.second.size(), *it2 - k.first.size());\n\t\t\t\t\t\t\tMin = min(int(it1-calc), Min);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor (auto &it1 : trans[k.first])\n\t\t\t\t\t{\n\t\t\t\t\t\tauto it2 = trans[k.second].lower_bound(it1);\n\t\t\t\t\t\tint calc;\n\t\t\t\t\t\tif (it2 != trans[k.second].end())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcalc = min(*it2 - k.second.size(), it1 - k.first.size());\n\t\t\t\t\t\t\tMin = min(int(*it2 - calc), Min);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (it2 != trans[k.second].begin())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tit2--;\n\t\t\t\t\t\t\tcalc = min(*it2 - k.second.size(), it1 - k.first.size());\n\t\t\t\t\t\t\tMin = min(int(it1 - calc), Min);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Min != 10000000)\n\t\t\t\t\ttrans2[k] = trans2[k2] = Min;\n\t\t\t\telse\n\t\t\t\t\ttrans2[k] = trans2[k2] = -1;\n\t\t\t}\n\t\t}\n\t\tif (trans2.find(k) != trans2.end())\n\t\t\tcout << trans2[k] << '\\n';\n\t\telse\n\t\t\tcout << trans2[k2] << '\\n';\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1554574907,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF444D \u3010DZY Loves Strings\u3011"
    }
]