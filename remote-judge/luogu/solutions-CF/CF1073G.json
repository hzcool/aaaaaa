[
    {
        "content": "## \u9898\u610f ##\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$ \u548c $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e24\u4e2a\u96c6\u5408 $A,B$ \uff0c\u6c42\n\n$$ \\sum_{i\\in A}\\sum_{j\\in B} lcp(i,j)$$\n\n## \u601d\u8def ##\n\n- \u6c42\u540e\u7f00\u4e4b\u95f4\u7684 LCP \u4e4b\u548c\uff0c\u81ea\u7136\u5730\u60f3\u5230\u4f7f\u7528\u540e\u7f00\u6570\u7ec4\uff1b\n- \u5bf9\u5b57\u7b26\u4e32 $s$ \u540e\u7f00\u6392\u5e8f\u5e76\u6c42\u51fa $height$ \u6570\u7ec4\uff0c\u4ee5\u4e0b\u63d0\u4f9b\u4e09\u79cd\u7edf\u8ba1\u7b54\u6848\u7684\u65b9\u5f0f\uff1a\n\n### \u4e00. \u5206\u5757 ###\n\n- \u5206\u5757\u601d\u8def\u7b80\u5355\uff0c\u4ee3\u7801\u597d\u5199\uff0c\u7528\u6765\u6df7\u90e8\u5206\u5206\u5341\u5206\u5bb9\u6613\uff1b\n- \u8003\u8651\u5bf9\u4e8e\u96c6\u5408 $B$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5411\u96c6\u5408 $A$ \u7edf\u8ba1\u7b54\u6848\uff1b\n- \u9996\u5148\u628a\u96c6\u5408 $A$ **\u6309 $rank$ \u6392\u5e8f**\u540e\u5206\u4e3a\u7ea6 $\\sqrt n$ \u4e2a\u5927\u5c0f\u4e3a $\\sqrt n$ \u7684\u5757\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/52688.png)\n- \u5bf9\u4e8e\u96c6\u5408 $B$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5230 $A$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5757\uff0c\u8ba1\u7b97\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/52689.png)\n- \u63a5\u4e0b\u6765\u8981\u7528\u5230\u4e00\u4e2a\u5b9a\u7406\uff1a$lcp(i,j)=min_{k={rank[i]+1}}^{rank[j]} height[k]\\;(i<j)$ \u3002\u8fd9\u4e2a\u516c\u5f0f\u7684\u610f\u601d\u662f\uff0c\u4e24\u4e2a\u540e\u7f00 $i,j\\;(i<j)$ \u7684 LCP \u7b49\u4e8e\u4ece $rank[i]+1$ \u5230 $rank[j]$ \u7684 $height$ \u7684\u6700\u5c0f\u503c\uff1b\n- \u6709\u4e86\u8fd9\u4e2a\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2aST\u8868\u6765\u7ef4\u62a4\u533a\u95f4 $height$ \u6700\u5c0f\u503c\uff0c\u5b9a\u4e49\u51fd\u6570 $lcp(i,j)$ \u8868\u793a\u540e\u7f00$i,j$\u4e4b\u95f4\u7684 LCP \u957f\u5ea6\uff0c\u5219 $lcp(i,j)$ \u53ef\u4ee5 O(1) \u6c42\u51fa\uff1b\n- \u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u5206\u522b\u6c42\u51fa\u5757\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u5230\u5757\u7684\u5de6\u53f3\u7aef\u70b9\u7684 LCP \uff1a\n![](https://cdn.luogu.com.cn/upload/pic/52690.png)\n- \u5bf9\u4e0a\u9762\u6c42\u7684\u4e1c\u897f\u505a\u4e00\u4e2a**\u524d\u7f00\u548c**\uff0c\u7528\u9014\u89c1\u4e0b\u6587\uff1b\n- \u7edf\u8ba1\u96c6\u5408 $B$ \u4e2d\u7684\u67d0\u4e00\u5143\u7d20\u5230 $A$ \u7684\u4e00\u4e2a\u5757\u7684\u7b54\u6848\u5206\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a\n1. \u5f53\u524d\u5757\u5de6\u7aef\u70b9\u7684 $rank$ $\\leq$ \u5f53\u524d\u5143\u7d20\u7684 $rank$ $\\leq$ \u5f53\u524d\u5757\u53f3\u7aef\u70b9\u7684 $rank$ :\n![](https://cdn.luogu.com.cn/upload/pic/52692.png)\n  \u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c31\u66b4\u529b\u7edf\u8ba1\u5f53\u524d\u5143\u7d20\u5230\u5757\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684 LCP \uff0c\u5e76\u5c06\u5176\u52a0\u5230\u7b54\u6848\u4e2d\u3002\u8fd9\u662f\u6700\u7b80\u5355\u7684\u4e00\u79cd\u60c5\u51b5\uff1b\n2. \u5f53\u524d\u5143\u7d20\u7684 $rank$ $<$ \u5f53\u524d\u5757\u5de6\u7aef\u70b9\u7684 $rank$ :\n![](https://cdn.luogu.com.cn/upload/pic/52693.png)\n  \u5982\u4e0a\u56fe\uff0c\u6839\u636e\u4e0a\u6587\u63d0\u5230\u7684\u5b9a\u7406\uff0c\u53ef\u4ee5\u5f97\u51fa\u5757\u7684\u5de6\u7aef\u70b9\u5230\u5757\u4e2d\u5143\u7d20\u7684 LCP \u662f\u9012\u51cf\u7684\u3002\u5148\u6c42\u51fa\u5f53\u524d\u5143\u7d20\u5230\u5757\u7684\u5de6\u7aef\u70b9\u7684 LCP \u4e3a $d$ \uff0c\u90a3\u4e48\u7531\u5b9a\u7406\u5f97\uff0c\u8be5\u5143\u7d20\u8fd9\u4e2a\u5757\u7684\u603b\u7b54\u6848\u5c31\u662f $\\sum_{i\\in block} min(d, lcp(block.left,i))$ \u3002\u53ef\u4ee5\u5728\u5757\u4e2d\u4e8c\u5206\u67e5\u627e\u51fa\u6700\u540e\u4e00\u4e2a\u4e0e\u5de6\u7aef\u70b9\u7684 LCP \u4e0d\u5c0f\u4e8e $d$ \u7684\u5143\u7d20 $p$\uff0c\u5219\u5728\u8fd9\u4e2a\u5757\u4e2d\uff0c\u4ee5 $p$ \u4e3a\u5206\u754c\uff0c\u5de6\u8fb9\u90e8\u5206\uff08\u5373\u7d2b\u8272\u90e8\u5206\uff09\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u7b54\u6848\u90fd\u662f $d$ \uff0c\u7b54\u6848\u603b\u548c\u5c31\u662f $d$ \u4e58\u4e0a\u8fd9\u90e8\u5206\u7684\u957f\u5ea6\uff1b\u53f3\u8fb9\u90e8\u5206\uff08\u5373\u6a59\u8272\u90e8\u5206\uff09\u7684\u7b54\u6848\u5c31\u662f\u5b83\u4e0e\u5de6\u7aef\u70b9\u7684 LCP \uff0c\u4f7f\u7528\u4e0a\u6587\u4e2d\u6211\u4eec\u9884\u5904\u7406\u7684\u524d\u7f00\u548c\u5373\u53ef\u5feb\u901f\u7edf\u8ba1\uff1b\n3. \u5f53\u524d\u5143\u7d20\u7684 $rank$ $>$ \u5f53\u524d\u5757\u53f3\u7aef\u70b9\u7684 $rank$ :\n  \u540c\u60c5\u51b5 2 \uff0c\u9884\u5904\u7406\u51fa\u5757\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5230\u8fd9\u4e2a\u5757\u7684\u53f3\u7aef\u70b9\u7684 LCP \u7684\u524d\u7f00\u548c\u5373\u53ef\u7528\u7c7b\u4f3c\u65b9\u6cd5\u7edf\u8ba1\u7b54\u6848\u3002\n\n#### \u590d\u6742\u5ea6\u5206\u6790 ####\n\n- \u500d\u589e\u6cd5\u6c42\u540e\u7f00\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$ \uff1b\n- \u96c6\u5408 $B$ \u4e2d\u6709 $O(n)$ \u4e2a\u5143\u7d20\uff0c\u96c6\u5408 $A$ \u5206\u6210 $O(\\sqrt n)$ \u4e2a\u5757\uff0c\u5e76\u5bf9\u5757\u505a\u4e86\u4e00\u6b21\u4e8c\u5206\u67e5\u627e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt n log \\sqrt n)$ \uff1b\n- \u7efc\u4e0a\uff0c\u5206\u5757\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt n log \\sqrt n)$ \uff0c**\u4e0d\u80fd\u901a\u8fc7\u672c\u9898** \u3002\n\n#### \u4ee3\u7801 ####\n\n```cpp\n// \u540e\u7f00\u6570\u7ec4+\u5206\u5757 O(n sqrt(n) log sqrt(n)) \n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <functional>\nusing namespace std;\nconst int MAXN=220000;\nconst int MAXQ=500;\nconst int MAXS=256;\nconst int MAXB=20;\nint n, q; char s[MAXN];\nint a[MAXN], b[MAXN];\nint sa[MAXN], rnk[2*MAXN], rnk1[2*MAXN];\nint ct[MAXS], cnt[MAXN], tmp[MAXN];\nint height[MAXN], lg[MAXN], h[MAXN][MAXB];\nint lef[MAXQ], righ[MAXQ];\nint pos[MAXN], cl[MAXN], cr[MAXN];\nlong long sl[MAXN], sr[MAXN];\ninline bool cmp(int a, int b)\n{\n\treturn rnk[a]<rnk[b];\n}\ninline int query(int l, int r)\n{\n\tint k=lg[r-l+1];\n\treturn min(h[l][k], h[r-(1<<k)+1][k]);\n}\ninline int lcp(int i, int j)\n{\n\tif (i==j) return n-i+1;\n\tif (rnk[i]>rnk[j]) swap(i, j);\n\treturn query(rnk[i]+1, rnk[j]);\n}\nint main()\n{\n//\tfreopen(\"CF1073G.in\", \"r\", stdin);\n//\tfreopen(\"CF1073G.out\", \"w\", stdout);\n\tscanf(\"%d%d%s\", &n, &q, s+1);\n\tmemset(ct, 0, sizeof ct);\n\tmemset(rnk, 0, sizeof rnk);\n\tfor (int i=1; i<=n; i++) ct[s[i]]=1;\n\tfor (int i=1; i<MAXS; i++) ct[i]+=ct[i-1];\n\tfor (int i=1; i<=n; i++) rnk[i]=ct[s[i]];\n\tfor (int k=0, p=1; k!=n; p<<=1)\n\t{\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tfor (int i=1; i<=n; i++) cnt[rnk[i+p]]++;\n\t\tfor (int i=1; i<=n; i++) cnt[i]+=cnt[i-1];\n\t\tfor (int i=n; i>=1; i--) tmp[cnt[rnk[i+p]]--]=i;\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tfor (int i=1; i<=n; i++) cnt[rnk[i]]++;\n\t\tfor (int i=1; i<=n; i++) cnt[i]+=cnt[i-1];\n\t\tfor (int i=n; i>=1; i--) sa[cnt[rnk[tmp[i]]]--]=tmp[i];\n\t\tmemcpy(rnk1, rnk, sizeof rnk1);\n\t\trnk[sa[1]]=k=1;\n\t\tfor (int i=2; i<=n; i++)\n\t\t{\n\t\t\tif (rnk1[sa[i]]!=rnk1[sa[i-1]]||rnk1[sa[i]+p]!=rnk1[sa[i-1]+p])\n\t\t\t\tk++;\n\t\t\trnk[sa[i]]=k;\n\t\t}\n\t}\n\tfor (int i=1, k=0; i<=n; i++)\n\t{\n\t\tif (rnk[i]==1)\n\t\t{\n\t\t\theight[rnk[i]]=k=0;\n\t\t\tcontinue;\n\t\t}\n\t\tif (--k<0) k=0;\n\t\twhile (s[i+k]==s[sa[rnk[i]-1]+k]) k++;\n\t\theight[rnk[i]]=k;\n\t}\n\tlg[0]=0;\n\tfor (int i=1; i<=n; i++)\n\t\tlg[i]=lg[i-1]+(1<<lg[i-1]+1==i);\n\tfor (int i=1; i<=n; i++) h[i][0]=height[i];\n\tfor (int j=1; 1<<j<=n; j++)\n\t\tfor (int i=1; i+(1<<j)-1<=n; i++)\n\t\t\th[i][j]=min(h[i][j-1], h[i+(1<<j-1)][j-1]);\n\twhile (q--)\n\t{\n\t\tint k, l;\n\t\tscanf(\"%d%d\", &k, &l);\n\t\tfor (int i=1; i<=k; i++) scanf(\"%d\", &a[i]);\n\t\tfor (int i=1; i<=l; i++) scanf(\"%d\", &b[i]);\n\t\tsort(a+1, a+k+1, cmp);\n\t\tint sz=sqrt(k), m=(k-1)/sz+1;\n\t\tfor (int i=1; i<=m; i++)\n\t\t\tlef[i]=sz*(i-1)+1, righ[i]=min(sz*i, k);\n\t\tfor (int i=1; i<=k; i++) pos[i]=(i-1)/sz+1;\n\t\tfor (int i=1; i<=k; i++)\n\t\t{\n\t\t\tcl[i]=lcp(a[i], a[lef[pos[i]]]);\n\t\t\tcr[i]=lcp(a[i], a[righ[pos[i]]]);\n\t\t}\n\t\tsl[0]=sr[0]=0;\n\t\tfor (int i=1; i<=k; i++) sl[i]=sl[i-1]+cl[i];\n\t\tfor (int i=1; i<=k; i++) sr[i]=sr[i-1]+cr[i];\n\t\tlong long ans=0;\n\t\tfor (int i=1; i<=l; i++)\n\t\t\tfor (int j=1; j<=m; j++)\n\t\t\t{\n\t\t\t\tif (rnk[b[i]]<rnk[a[lef[j]]])\n\t\t\t\t{\n\t\t\t\t\tint d=lcp(b[i], a[lef[j]]);\n\t\t\t\t\tint p=upper_bound(cl+lef[j], cl+righ[j]+1, d, greater<int>())-cl;\n\t\t\t\t\tans+=1ll*d*(p-lef[j])+(sl[righ[j]]-sl[p-1]);\n\t\t\t\t}\n\t\t\t\telse if (rnk[b[i]]>rnk[a[righ[j]]])\n\t\t\t\t{\n\t\t\t\t\tint d=lcp(b[i], a[righ[j]]);\n\t\t\t\t\tint p=lower_bound(cr+lef[j], cr+righ[j]+1, d)-cr-1;\n\t\t\t\t\tans+=1ll*d*(righ[j]-p)+(sr[p]-sr[lef[j]-1]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfor (int t=lef[j]; t<=righ[j]; t++)\n\t\t\t\t\t\tans+=lcp(b[i], a[t]);\n\t\t\t}\n\t\tprintf(\"%I64d\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n#### \u63d0\u4ea4\u8bb0\u5f55 ####\n\n![](https://cdn.luogu.com.cn/upload/pic/52695.png)\n\n---\n\n### \u4e8c. \u7ebf\u6bb5\u6811 ###\n\n- \u6211\u4eec\u5c1d\u8bd5\u5bf9\u4ee5\u4e0a\u5206\u5757\u7684\u505a\u6cd5\u8fdb\u884c\u4e00\u4e9b\u6539\u8fdb\u3002\u4e0a\u9762\u7684\u65b9\u6cd5\u4e4b\u6240\u4ee5\u8981\u5206\u5757\uff0c\u662f\u56e0\u4e3a\u8981\u7edf\u8ba1 $B$ \u4e2d\u7684\u5143\u7d20\u5230 $A$ \u4e2d $rank$ \u5c0f\u4e8e/\u5927\u4e8e\u5b83\u7684 $rank$ \u7684\u5143\u7d20\u7684 LCP \u7684\u524d\u7f00\u548c\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u505a\u5230\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u5462\uff1f\n- \u4e0d\u59a8\u628a $B$ \u4e2d\u7684\u5143\u7d20\u4e5f**\u6309 $rank$ \u6392\u5e8f**\u3002\u5bf9\u4e8e $B$ \u6392\u5e8f\u540e\u7684\u7b2c $i$ \u4e2a\u5143\u7d20\uff0c\u8bbe\u5b83\u4e0e $A$ \u4e2d $rank$ \u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u5143\u7d20 $k$ \u7684 LCP \u4e3a $d[i][j]$ \uff08$j$ \u8868\u793a $k$ \u6309 $rank$ \u6392\u5e8f\u5728 $A$ \u4e2d\u6392\u7b2c $j$ \u540d\uff09\u3002\u90a3\u4e48\uff0c\u6839\u636e\u4e0a\u6587\u63d0\u5230\u7684\u5b9a\u7406\uff0c\u4ece $d[i]$ \u8f6c\u79fb\u5230 $d[i+1]$ \u65f6\uff0c\u53ea\u9700\u8981\u628a\u6240 $d[i]$ \u4e2d\u6240\u6709\u5927\u4e8e $lcp(B[i],B[i+1])$ \u7684\u90fd\u6539\u6210 $lcp(B[i],B[i+1])$ \uff08\u8fd9\u4e00\u90e8\u5206\u548c\u5206\u5757\u4e2d\u4e8c\u5206\u67e5\u627e\u7684\u90a3\u6bb5\u5b9e\u73b0\u7684\u662f\u540c\u4e00\u4e2a\u76ee\u7684\uff09\uff0c\u518d\u5c06 $d[i+1][j]$ \u4e2d\u52a0\u5165 $A$ \u4e2d $rank[B[i]]<rank[A[k]]\\leq rank[B[i+1]]$ \u7684\u5143\u7d20\uff08$j,k$ \u542b\u4e49\u89c1\u4e0a\u6587\uff09\u5c31\u884c\u4e86\uff1b\n- \u6211\u4eec\u53d1\u73b0\u4ee5\u4e0a\u7ef4\u62a4 $d[i]$ \u7684\u8fc7\u7a0b\uff0c\u9700\u8981\u652f\u6301\u4e24\u4e2a\u64cd\u4f5c\uff1a\n1. \u628a\u6240\u6709\u5927\u4e8e $k$ \u7684\u6570\u6539\u4e3a $k$ \uff1b\n2. \u5355\u70b9\u4fee\u6539\u4e00\u4e2a\u5143\u7d20\u3002\n- \u5bb9\u6613\u53d1\u73b0\uff0c$d[i]$ \u5176\u5b9e\u662f\u4e00\u4e2a\u5355\u8c03\u7684\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u5927\u4e8e $k$ \u7684\u6570\u90fd\u4f1a\u8fde\u5728\u4e00\u8d77\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff1b\n- $B[i]$ \u7684\u7b54\u6848\uff0c\u5c31\u662f $d[i]$ \u7684\u548c\u3002\u56e0\u6b64\uff0c\u8fd8\u9700\u8981\u652f\u6301\u4e00\u4e2a\u533a\u95f4\u6c42\u548c\u7684\u64cd\u4f5c\uff1b\n- \u7efc\u4e0a\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6574\u4e2a $d[i]$ \u8f6c\u79fb\u7684\u64cd\u4f5c\u3002\u4e00\u9897\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u5c42 $d[i]$ \uff0c\u5c42\u5c42\u9012\u63a8\uff0c\u5373\u53ef\u7edf\u8ba1\u6240\u6709 $B[i]$ \u7684\u7b54\u6848\uff1b\n- \u4ee5\u4e0a\u8fc7\u7a0b\u7edf\u8ba1\u4e86 $B[i]$ \u4e0e $A[k]\\;(rank[A[k]]<=rank[B[i]])$ \u7684\u7b54\u6848\u3002\u518d\u53cd\u5411\u505a\u4e00\u904d\uff0c\u5373\u53ef\u7c7b\u4f3c\u5730\u7edf\u8ba1 $B[i]$ \u4e0e $A[k]\\;(rank[A[k]]>rank[B[i]])$ \u7684\u7b54\u6848\u3002\u8fd9\u4e24\u90e8\u5206\u7684\u7b54\u6848\u76f8\u52a0\uff0c\u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\u3002\n\n#### \u590d\u6742\u5ea6\u5206\u6790 ####\n\n- \u500d\u589e\u6cd5\u6c42\u540e\u7f00\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$ \uff1b\n- \u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\u548c\u5355\u70b9\u4fee\u6539\uff0c\u90fd\u662f $O(logn)$ \u7684\u3002\u4e00\u5171\u8981\u4fee\u6539 $n$ \u6b21\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nlogn)$ \uff0c**\u53ef\u4ee5\u901a\u8fc7\u672c\u9898**\u3002\n\n#### \u4ee3\u7801 ####\n\n```cpp\n// \u540e\u7f00\u6570\u7ec4+\u7ebf\u6bb5\u6811 O(nlogn) \n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=220000;\nconst int MAXS=256;\nconst int MAXB=20;\nnamespace ST\n{\n\tstruct Node\n\t{\n\t\tint l, r;\n\t\tlong long sum;\n\t\tint maxx, minx, cov;\n\t} tr[4*MAXN];\n\tstruct SegmentTree\n\t{\n\t\t#define lc (o<<1)\n\t\t#define rc (o<<1|1)\n\t\tinline void assign(int o, int k)\n\t\t{\n\t\t\ttr[o].sum=1ll*k*(tr[o].r-tr[o].l+1);\n\t\t\ttr[o].maxx=tr[o].minx=k;\n\t\t}\n\t\tinline void pushup(int o)\n\t\t{\n\t\t\ttr[o].sum=tr[lc].sum+tr[rc].sum;\n\t\t\ttr[o].maxx=max(tr[lc].maxx, tr[rc].maxx);\n\t\t\ttr[o].minx=min(tr[lc].minx, tr[rc].minx);\n\t\t}\n\t\tinline void cover(int o, int k)\n\t\t{\n\t\t\ttr[o].cov=k;\n\t\t\tassign(o, k);\n\t\t}\n\t\tinline void pushdown(int o)\n\t\t{\n\t\t\tif (tr[o].cov==-1) return;\n\t\t\tcover(lc, tr[o].cov);\n\t\t\tcover(rc, tr[o].cov);\n\t\t\ttr[o].cov=-1;\n\t\t}\n\t\tvoid build(int o, int l, int r)\n\t\t{\n\t\t\ttr[o].l=l; tr[o].r=r; tr[o].cov=-1;\n\t\t\tif (l==r) { assign(o, 0); return; }\n\t\t\tint mid=l+r>>1;\n\t\t\tbuild(lc, l, mid);\n\t\t\tbuild(rc, mid+1, r);\n\t\t\tpushup(o);\n\t\t}\n\t\tvoid change(int o, int x, int k)\n\t\t{\n\t\t\tif (tr[o].l==tr[o].r) { assign(o, k); return; }\n\t\t\tpushdown(o);\n\t\t\tint mid=tr[o].l+tr[o].r>>1;\n\t\t\tif (x<=mid) change(lc, x, k);\n\t\t\telse change(rc, x, k);\n\t\t\tpushup(o);\n\t\t}\n\t\tvoid update(int o, int k)\n\t\t{\n\t\t\tif (tr[o].maxx<=k) return;\n\t\t\tif (tr[o].minx>k) { cover(o, k); return; }\n\t\t\tpushdown(o);\n\t\t\tupdate(lc, k);\n\t\t\tupdate(rc, k);\n\t\t\tpushup(o);\n\t\t}\n\t\tinline long long query(int o)\n\t\t{\n\t\t\treturn tr[o].sum;\n\t\t}\n\t\t#undef lc\n\t\t#undef rc\n\t};\n}\nint n, q; char s[MAXN];\nint a[MAXN], b[MAXN];\nint sa[MAXN], rnk[2*MAXN], rnk1[2*MAXN];\nint ct[MAXS], cnt[MAXN], tmp[MAXN];\nint height[MAXN], lg[MAXN], h[MAXN][MAXB];\nST::SegmentTree st;\ninline bool cmp(int a, int b)\n{\n\treturn rnk[a]<rnk[b];\n}\ninline int query(int l, int r)\n{\n\tint k=lg[r-l+1];\n\treturn min(h[l][k], h[r-(1<<k)+1][k]);\n}\ninline int lcp(int i, int j)\n{\n\tif (i==j) return n-i+1;\n\tif (rnk[i]>rnk[j]) swap(i, j);\n\treturn query(rnk[i]+1, rnk[j]);\n}\nint main()\n{\n//\tfreopen(\"CF1073G.in\", \"r\", stdin);\n//\tfreopen(\"CF1073G.out\", \"w\", stdout);\n\tscanf(\"%d%d%s\", &n, &q, s+1);\n\tmemset(ct, 0, sizeof ct);\n\tmemset(rnk, 0, sizeof rnk);\n\tfor (int i=1; i<=n; i++) ct[s[i]]=1;\n\tfor (int i=1; i<MAXS; i++) ct[i]+=ct[i-1];\n\tfor (int i=1; i<=n; i++) rnk[i]=ct[s[i]];\n\tfor (int k=0, p=1; k!=n; p<<=1)\n\t{\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tfor (int i=1; i<=n; i++) cnt[rnk[i+p]]++;\n\t\tfor (int i=1; i<=n; i++) cnt[i]+=cnt[i-1];\n\t\tfor (int i=n; i>=1; i--) tmp[cnt[rnk[i+p]]--]=i;\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tfor (int i=1; i<=n; i++) cnt[rnk[i]]++;\n\t\tfor (int i=1; i<=n; i++) cnt[i]+=cnt[i-1];\n\t\tfor (int i=n; i>=1; i--) sa[cnt[rnk[tmp[i]]]--]=tmp[i];\n\t\tmemcpy(rnk1, rnk, sizeof rnk1);\n\t\trnk[sa[1]]=k=1;\n\t\tfor (int i=2; i<=n; i++)\n\t\t{\n\t\t\tif (rnk1[sa[i]]!=rnk1[sa[i-1]]||rnk1[sa[i]+p]!=rnk1[sa[i-1]+p])\n\t\t\t\tk++;\n\t\t\trnk[sa[i]]=k;\n\t\t}\n\t}\n\tfor (int i=1, k=0; i<=n; i++)\n\t{\n\t\tif (rnk[i]==1)\n\t\t{\n\t\t\theight[rnk[i]]=k=0;\n\t\t\tcontinue;\n\t\t}\n\t\tif (--k<0) k=0;\n\t\twhile (s[i+k]==s[sa[rnk[i]-1]+k]) k++;\n\t\theight[rnk[i]]=k;\n\t}\n\tlg[0]=0;\n\tfor (int i=1; i<=n; i++)\n\t\tlg[i]=lg[i-1]+(1<<lg[i-1]+1==i);\n\tfor (int i=1; i<=n; i++) h[i][0]=height[i];\n\tfor (int j=1; 1<<j<=n; j++)\n\t\tfor (int i=1; i+(1<<j)-1<=n; i++)\n\t\t\th[i][j]=min(h[i][j-1], h[i+(1<<j-1)][j-1]);\n\twhile (q--)\n\t{\n\t\tint k, l;\n\t\tscanf(\"%d%d\", &k, &l);\n\t\tfor (int i=1; i<=k; i++) scanf(\"%d\", &a[i]);\n\t\tfor (int i=1; i<=l; i++) scanf(\"%d\", &b[i]);\n\t\tsort(a+1, a+k+1, cmp);\n\t\tsort(b+1, b+l+1, cmp);\n\t\tlong long ans=0;\n\t\tst.build(1, 1, k);\n\t\tfor (int i=1, j=1; i<=l; i++)\n\t\t{\n\t\t\tst.update(1, lcp(b[i], b[i-1])); \n\t\t\twhile (j<=k&&rnk[a[j]]<=rnk[b[i]])\n\t\t\t\tst.change(1, j, lcp(b[i], a[j])), j++;\n\t\t\tans+=st.query(1);\n\t\t}\n\t\tst.build(1, 1, k);\n\t\tfor (int i=l, j=k; i>=1; i--)\n\t\t{\n\t\t\tst.update(1, lcp(b[i], b[i+1]));\n\t\t\twhile (j>=1&&rnk[a[j]]>rnk[b[i]])\n\t\t\t\tst.change(1, j, lcp(b[i], a[j])), j--;\n\t\t\tans+=st.query(1);\n\t\t}\n\t\tprintf(\"%I64d\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n#### \u63d0\u4ea4\u8bb0\u5f55 ####\n\n![](https://cdn.luogu.com.cn/upload/pic/52698.png)\n\n---\n\n### \u4e09. \u5355\u8c03\u6808 ###\n\n- \u6362\u4e00\u4e2a\u601d\u8def\uff0c\u5355\u8c03\u6808\u4e5f\u53ef\u4ee5\u89e3\u51b3\u672c\u9898\uff1b\n- \u672c\u9898\u5355\u8c03\u6808\u7684\u505a\u6cd5\u4e0e [POJ3415](http://poj.org/problem?id=3415) \u7c7b\u4f3c\uff0c\u53ef\u4ee5\u5148\u5c1d\u8bd5\u4e00\u4e0b\u8fd9\u9053\u9898\uff1b\n- \u628a\u96c6\u5408 $A$ \u4e0e\u96c6\u5408 $B$ \u653e\u5728\u4e00\u8d77\u5f97\u5230\u591a\u91cd\u96c6\u5408 $C$ \uff0c\u5e76\u5c06 $C$ \u6309 $rank$ \u6392\u5e8f\uff1b\n- \u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5b9a\u4e49 $hgt[i]=lcp(C[i], C[i-1])$ \u3002\u5176\u5b9e\u8fd9\u4e2a $hgt$ \u6570\u7ec4\u7684\u610f\u4e49\u548c $height$ \u6570\u7ec4\u662f\u7c7b\u4f3c\u7684\uff1b\n- \u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u3002\u6808\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(i,j)$ \uff0c\u8868\u793a\u8fd9\u4e2a\u5143\u7d20\u662f\u6309 $rank$ \u6392\u5e8f\u540e\u7684\u7b2c $i$ \u540d\uff0c\u6700\u524d\u9762\u7684 $hgt$ \u503c\u5927\u4e8e $hgt[i]$ \u7684\u5143\u7d20\u662f $C[j]$ \u3002\u8fd9\u4e2a\u5355\u8c03\u6808\u4e2d\u7684\u5143\u7d20\u7684 $hgt[i]$ \u7684\u503c\u662f\u9012\u589e\u7684\u3002\n- \u82e5\u53d1\u73b0\u5f53\u524d\u5143\u7d20 $C[i]$ \u7684 $hgt$ \u503c\u5c0f\u4e8e\u6808\u9876\u5143\u7d20\u7684 $hgt$ \u503c\uff0c\u5219\u5c06\u6808\u9876\u5143\u7d20\u5f39\u51fa\u3002\u8bbe\u6808\u9876\u5143\u7d20\u4e3a $C[top]$\uff0c\u5219 $[C[top].j-1,C[top].i-1]$ \u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0e $[C[top].i,i-1]$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684 LCP \u90fd\u662f $hgt[C[top].i]$ \u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u4e24\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u76f8\u4e58\u518d\u4e58\u4e0a LCP \u5c31\u662f\u8fd9\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\u6700\u540e\uff0c\u5c06\u5f53\u524d\u5143\u7d20\u5165\u6808\uff0c\u5b83\u7684 $j$ \u5c31\u662f\u8fd9\u6b21\u5f39\u51fa\u7684\u5143\u7d20\u7684 $j$ \u7684\u6700\u5c0f\u503c\uff1b\n- \u5f62\u8c61\u4e00\u70b9\uff0c\u5355\u8c03\u6808\u5176\u5b9e\u7ef4\u62a4\u7684\u662f\u8fd9\u4e2a\u4e1c\u897f\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/52703.png)\n- \u5728\u4e0a\u56fe\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u628a\u7b2c\u4e94\u4e2a\u5143\u7d20\u5f39\u51fa\u6808\uff0c\u7b2c\u4e94\u4e2a\u5143\u7d20\u7ef4\u62a4\u7684\u5c31\u662f\u7ea2\u8272\u7684\u90a3\u4e2a\u533a\u95f4\u3002\u8fd8\u662f\u6839\u636e\u90a3\u4e2a\u5b9a\u7406\uff0c\u5e95\u4e0b\u7eff\u8272\u533a\u95f4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0e\u84dd\u8272\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684 LCP \u90fd\u662f\u7b2c\u4e94\u4e2a\u5143\u7d20\u7684\u9ad8\u5ea6\uff08\u5373 $hgt[5]$\uff09\u3002\u8fd9\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $3*3*hgt[5]$ \uff1b\n- \u6700\u540e\u4e0d\u8981\u5fd8\u8bb0\u628a\u6808\u4e2d\u5143\u7d20\u5f39\u5c3d\uff0c\u628a\u7b54\u6848\u7edf\u8ba1\u5b8c\u6574\u3002\n\n#### \u590d\u6742\u5ea6\u5206\u6790 ####\n\n- \u500d\u589e\u6cd5\u6c42\u540e\u7f00\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$ \uff1b\n- \u6392\u5e8f $O(nlogn)$ \uff1b\n- \u5355\u8c03\u6808\u4e2d\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u8fdb\u6808\u4e00\u6b21\u51fa\u6808\u4e00\u6b21\uff0c\u56e0\u6b64\u5747\u644a\u590d\u6742\u5ea6\u4e3a $O(n)$ \uff1b\n- \u7efc\u4e0a\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nlogn)$ \u3002\n\n#### \u4ee3\u7801 ####\n\n```cpp\n// \u540e\u7f00\u6570\u7ec4+\u5355\u8c03\u6808 O(nlogn) \n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=220000;\nconst int MAXS=256;\nconst int MAXB=20;\nint n, q; char s[MAXN];\nint a[MAXN], b[MAXN], c[2*MAXN]; bool d[2*MAXN];\nint sa[MAXN], rnk[2*MAXN], rnk1[2*MAXN];\nint ct[MAXS], cnt[MAXN], tmp[MAXN];\nint height[MAXN], lg[MAXN], h[MAXN][MAXB];\nlong long sum[2*MAXN];\nstruct Node\n{\n\tint id, pos;\n\tNode(int i=0, int p=0): id(i), pos(p) {}\n} sta[2*MAXN];\nint top;\ninline bool cmp(int a, int b)\n{\n\treturn rnk[a]<rnk[b];\n}\ninline int query(int l, int r)\n{\n\tint k=lg[r-l+1];\n\treturn min(h[l][k], h[r-(1<<k)+1][k]);\n}\ninline int lcp(int i, int j)\n{\n\tif (i==j) return n-i+1;\n\tif (rnk[i]>rnk[j]) swap(i, j);\n\treturn query(rnk[i]+1, rnk[j]);\n}\nint main()\n{\n//\tfreopen(\"CF1073G.in\", \"r\", stdin);\n//\tfreopen(\"CF1073G.out\", \"w\", stdout);\n\tscanf(\"%d%d%s\", &n, &q, s+1);\n\tmemset(ct, 0, sizeof ct);\n\tmemset(rnk, 0, sizeof rnk);\n\tfor (int i=1; i<=n; i++) ct[s[i]]=1;\n\tfor (int i=1; i<MAXS; i++) ct[i]+=ct[i-1];\n\tfor (int i=1; i<=n; i++) rnk[i]=ct[s[i]];\n\tfor (int k=0, p=1; k!=n; p<<=1)\n\t{\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tfor (int i=1; i<=n; i++) cnt[rnk[i+p]]++;\n\t\tfor (int i=1; i<=n; i++) cnt[i]+=cnt[i-1];\n\t\tfor (int i=n; i>=1; i--) tmp[cnt[rnk[i+p]]--]=i;\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tfor (int i=1; i<=n; i++) cnt[rnk[i]]++;\n\t\tfor (int i=1; i<=n; i++) cnt[i]+=cnt[i-1];\n\t\tfor (int i=n; i>=1; i--) sa[cnt[rnk[tmp[i]]]--]=tmp[i];\n\t\tmemcpy(rnk1, rnk, sizeof rnk1);\n\t\trnk[sa[1]]=k=1;\n\t\tfor (int i=2; i<=n; i++)\n\t\t{\n\t\t\tif (rnk1[sa[i]]!=rnk1[sa[i-1]]||rnk1[sa[i]+p]!=rnk1[sa[i-1]+p])\n\t\t\t\tk++;\n\t\t\trnk[sa[i]]=k;\n\t\t}\n\t}\n\tfor (int i=1, k=0; i<=n; i++)\n\t{\n\t\tif (rnk[i]==1)\n\t\t{\n\t\t\theight[rnk[i]]=k=0;\n\t\t\tcontinue;\n\t\t}\n\t\tif (--k<0) k=0;\n\t\twhile (s[i+k]==s[sa[rnk[i]-1]+k]) k++;\n\t\theight[rnk[i]]=k;\n\t}\n\tlg[0]=0;\n\tfor (int i=1; i<=n; i++)\n\t\tlg[i]=lg[i-1]+(1<<lg[i-1]+1==i);\n\tfor (int i=1; i<=n; i++) h[i][0]=height[i];\n\tfor (int j=1; 1<<j<=n; j++)\n\t\tfor (int i=1; i+(1<<j)-1<=n; i++)\n\t\t\th[i][j]=min(h[i][j-1], h[i+(1<<j-1)][j-1]);\n\twhile (q--)\n\t{\n\t\tint k, l;\n\t\tscanf(\"%d%d\", &k, &l);\n\t\tfor (int i=1; i<=k; i++) scanf(\"%d\", &a[i]);\n\t\tfor (int i=1; i<=l; i++) scanf(\"%d\", &b[i]);\n\t\tsort(a+1, a+k+1, cmp);\n\t\tsort(b+1, b+l+1, cmp);\n\t\tfor (int i=1, j=1, t=1; i<=k||j<=l; t++)\n\t\t{\n\t\t\tif (i<=k&&(j>l||rnk[a[i]]<=rnk[b[j]]))\n\t\t\t\tc[t]=a[i++], d[t]=0;\n\t\t\telse if (j<=l&&(i>k||rnk[a[i]]>rnk[b[j]]))\n\t\t\t\tc[t]=b[j++], d[t]=1;\n\t\t}\n\t\tlong long ans=0;\n\t\tsum[0]=0; top=0;\n\t\tfor (int i=1; i<=k+l; i++) sum[i]=sum[i-1]+d[i];\n\t\tfor (int i=1; i<=k+l; i++)\n\t\t{\n\t\t\tint t=i;\n\t\t\twhile (top>0&&lcp(c[i], c[i-1])<lcp(c[sta[top-1].id], c[sta[top-1].id-1]))\n\t\t\t{\n\t\t\t\tt=min(t, sta[--top].pos);\n\t\t\t\tans+=(1ll*(sum[sta[top].id-1]-sum[sta[top].pos-2])\n\t\t\t\t         *((i-sta[top].id)-(sum[i-1]-sum[sta[top].id-1]))\n\t\t\t\t\t +1ll*((sta[top].id-sta[top].pos+1)-(sum[sta[top].id-1]-sum[sta[top].pos-2]))\n\t\t\t\t\t     *(sum[i-1]-sum[sta[top].id-1]))*lcp(c[sta[top].id], c[sta[top].id-1]);\n\t\t\t}\n\t\t\tsta[top++]=Node(i, t);\n\t\t}\n\t\twhile (top>0)\n\t\t{\n\t\t\ttop--;\n\t\t\tans+=(1ll*(sum[sta[top].id-1]-sum[sta[top].pos-2])\n\t\t\t         *((k+l-sta[top].id+1)-(sum[k+l]-sum[sta[top].id-1]))\n\t\t\t\t +1ll*((sta[top].id-sta[top].pos+1)-(sum[sta[top].id-1]-sum[sta[top].pos-2]))\n\t\t\t\t     *(sum[k+l]-sum[sta[top].id-1]))*lcp(c[sta[top].id], c[sta[top].id-1]);\n\t\t}\n\t\tprintf(\"%I64d\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n#### \u63d0\u4ea4\u8bb0\u5f55 ####\n\n![](https://cdn.luogu.com.cn/upload/pic/52701.png)\n\n## \u603b\u7ed3 ##\n\n\u540e\u7f00\u6570\u7ec4\u53ef\u4ee5\u4e0e\u591a\u79cd\u7b97\u6cd5/\u6570\u636e\u7ed3\u6784\u7ed3\u5408\uff0c\u6bd4\u5982\n\n- \u4e8c\u5206\n- \u5206\u5757\n- \u5355\u8c03\u961f\u5217/\u5355\u8c03\u6808\n- RMQ\u6570\u636e\u7ed3\u6784\uff08ST\u8868\uff09\n- \u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\n\n\u7075\u6d3b\u5e94\u7528\u7b97\u6cd5/\u6570\u636e\u7ed3\u6784\u548c $height$ \u6570\u7ec4\u7684\u6027\u8d28\uff0c\u662f\u5904\u7406\u8fd9\u4e00\u7c7b\u95ee\u9898\u7684\u4e3b\u8981\u65b9\u5f0f\u3002",
        "postTime": 1551016607,
        "uid": 43064,
        "name": "\u6500\u5ca9\u9ad8\u624b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    },
    {
        "content": "\u9898\u610f:\u5148\u7ed9\u51fa\u4e00\u4e2a\u4e32$T$\u7136\u540e\u6bcf\u6b21\u7ed9\u51fa\u4e24\u4e2a\u540e\u7f00\u96c6\u5408$A,B$,\u8be2\u95ee$\\sum\\limits_{i\u2208A,j\u2208B}lcp(i,j)$\n\n\u89e3\u6cd5:**\u540e\u7f00\u6811+\u865a\u6811**\n\n\u9996\u5148\u5efa\u7acb\u539f\u4e32\u7684\u540e\u7f00\u6811,\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86SAM,\u56e0\u4e3a\u53cd\u4e32\u7684parent tree\u5c31\u662f\u540e\u7f00\u6811,\u5f53\u7136\u4f60\u559c\u6b22Ukk\u4e5f\u884c\u3002\n\n\u7136\u540e,\u6839\u636e$lcp(i,j)=dep(lca(i,j))$,\u5373\u4e24\u4e2a\u540e\u7f00\u5728\u540e\u7f00\u6811\u4e0a\u7684$lca$\u7684\u6df1\u5ea6\u7b49\u4e8e\u4ed6\u4eec\u7684$lcp$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u8fd9\u4e9b\u540e\u7f00\u5bf9\u5e94\u7684\u70b9\u5efa\u7acb\u865a\u6811,\u7136\u540e\u6811\u5f62\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u88ab\u4f5c\u4e3a$lca$\u7684\u6b21\u6570,\u4e58\u4e0a\u8be5\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u7136\u540e\u8d21\u732e\u3002\n\ndp\u65b9\u6cd5\u8003\u8651\u7b80\u5355\u5bb9\u65a5,\u5177\u4f53\u89c1\u4ee3\u7801$dfs$\u51fd\u6570\u90e8\u5206\u3002\n\n\u6b64\u5916\u8fd9\u9898\u5efa\u865a\u6811\u7684\u65f6\u5019$O(logn)$\u6c42$lca$\u6709\u70b9\u4e0d\u7a33,\u4e8e\u662f\u5c31\u91c7\u7528\u4e86$O(1)$\u7684$ST$\u8868\u6c42\u6cd5\u3002\n\n\u6ca1\u6709\u4ec0\u4e48\u7ec6\u8282,\u5199\u8d77\u6765\u5f88\u6d41\u7545,\u5c31\u662f\u6ce8\u610f\u6570\u7ec4\u522b\u7206\u4e86\u3002\n\n\u603b\u7684\u590d\u6742\u5ea6$O(n+SlogS)$($S=\\sum k_i+l_i$)\n\n**Code:**\n\n```cpp\n#include<algorithm>\n#include<vector>\n#include<cstdio>\n#define MaxN 200500\nusing namespace std;\ninline int read()\n{\n  register int X=0;\n  register char ch=0;\n  while(ch<48||ch>57)ch=getchar();\n  while(ch>=48&&ch<=57)X=X*10+(ch^48),ch=getchar();\n  return X;\n}\nstruct Node\n{int t[26],f,len;}a[MaxN<<1];\nint tn,las;\nchar str[MaxN];\nvoid ins(int c)\n{\n  int np=++tn,p=las; las=np;\n  a[np].len=a[p].len+1;\n  for (;p&&!a[p].t[c];p=a[p].f)a[p].t[c]=np;\n  if (!p)a[np].f=1;\n  else {\n    int v=a[p].t[c];\n    if (a[p].len+1==a[v].len)a[np].f=v;\n    else {\n      int nv=++tn; a[nv]=a[v];\n      a[nv].len=a[p].len+1;\n      for (;p&&a[p].t[c]==v;p=a[p].f)a[p].t[c]=nv;\n      a[v].f=a[np].f=nv;\n    }\n  }\n}\nint tp[MaxN],dis[MaxN<<1],p[21][MaxN<<2],\n    dfn[MaxN<<1],tim;\nbool cmp(int A,int B){return dfn[A]<dfn[B];}\nvector<int> g[MaxN<<1];\nvoid dfspre(int num)\n{\n  p[0][dfn[num]=++tim]=num;\n  for (int i=0;i<g[num].size();i++){\n    dis[g[num][i]]=dis[num]+1;\n    dfspre(g[num][i]);\n    p[0][++tim]=num;\n  }\n}\nint lg2[MaxN<<2];\nint minp(int u,int v)\n{return dis[u]<dis[v] ? u : v;}\nvoid InitST()\n{\n  for (int j=0;(1<<(j+1))<=tim;j++)\n    for (int i=1;i+(1<<j)<=tim;i++)\n      p[j+1][i]=minp(p[j][i],p[j][i+(1<<j)]);\n  for (int i=2;i<=tim;i++)lg2[i]=lg2[i/2]+1;\n}\nint lca(int x,int y)\n{\n  x=dfn[x];y=dfn[y];\n  if (x>y)swap(x,y);\n  int j=lg2[y-x+1];\n  return minp(p[j][x],p[j][y-(1<<j)+1]);\n}\nint len,q,a1[MaxN],a2[MaxN],\n    in[MaxN<<1],ef,t[MaxN<<1],tot;\ninline void add(int pos)\n{\n  if (in[pos]<ef)\n    in[t[++tot]=pos]=ef;\n}\nint stk[MaxN<<1],top;\nlong long sum;\nint s1[MaxN<<1],s2[MaxN<<1];\nvoid dfs(int num)\n{\n  int sav=s1[num];\n  for (int i=0,v;i<g[num].size();i++){\n    dfs(v=g[num][i]);\n    s1[num]+=s1[v];\n    s2[num]+=s2[v];\n  }\n  for (int i=0;i<g[num].size();i++)\n    sum+=1ll*s1[g[num][i]]*(s2[num]-s2[g[num][i]])*a[num].len;\n  sum+=1ll*sav*s2[num]*a[num].len;\n}\nint main()\n{\n  len=read();q=read();\n  scanf(\"%s\",str);\n  las=tn=1;\n  for (int i=len-1;i>=0;i--)ins(str[i]-'a');\n  for (int i=len-1,p=1;i>=0;i--){\n    p=a[p].t[str[i]-'a'];\n    tp[i+1]=p;\n  }\n  for (int i=2;i<=tn;i++)\n    g[a[i].f].push_back(i);\n  dfspre(1);\n  InitST();\n  for (int i=1;i<=tn;i++)g[i].clear();\n  for (int qt=1,n1,n2;qt<=q;qt++){\n    n1=read();n2=read();++ef;\n    for (int i=1,sav;i<=n1;i++)\n      {add(sav=tp[read()]);s1[sav]++;}\n    for (int i=1,sav;i<=n2;i++)\n      {add(sav=tp[read()]);s2[sav]++;}\n    sort(t+1,t+tot+1,cmp);\n    int tmp=tot;\n    for (int i=1;i<tmp;i++)\n      add(lca(t[i],t[i+1]));\n    sort(t+1,t+tot+1,cmp);\n    stk[top=1]=t[1];\n    for (int i=2;i<=tot;i++){\n      while(lca(stk[top],t[i])!=stk[top])top--;\n      g[stk[top]].push_back(t[i]);\n      stk[++top]=t[i];\n    }\n    sum=0;dfs(t[1]);\n    printf(\"%I64d\\n\",sum);\n    for (int i=1;i<=tot;i++){\n      s1[t[i]]=s2[t[i]]=0;\n      g[t[i]].clear();\n    }tot=0;\n  }\n  return 0;\n}\n```",
        "postTime": 1565440978,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    },
    {
        "content": "### Part1 \u524d\u8a00\n\n\u4e00\u6253\u5f00\u9898\u89e3\uff0c\u53d1\u73b0\u4e00\u9053\u5b57\u7b26\u4e32 Hash \u7684\u9898\u76ee\u80fd\u770b\u5230\u7684\u5374\u662f\uff1a\n1. SAM+\u865a\u6811\uff1b\n2. SA+\u5206\u5757\uff1b\n3. SA+\u5355\u8c03\u6808\u3002\n\n\u5e76\u4e0d\u662f\u8bf4\u8fd9\u4e9b\u505a\u6cd5\u4e0d\u597d\uff0c\u53ea\u662f\u6211\u4e0d\u60f3\u5199\u3002\n\n### Part2 \u524d\u7f6e\u77e5\u8bc6\n\n1. \u5b57\u7b26\u4e32 Hash\uff1b\n2. \u6700\u957f\u516c\u5171\u524d\u7f00 LCP\uff1b\n3. \u5e76\u67e5\u96c6\u4e0e\u6700\u5c0f\u74f6\u9888\u8def\u3002\n\n### Part3 \u524d\u7f6e\u7ed3\u8bba\n\n\u4ee5\u4e0b\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\u5747\u4e3a\u5b57\u5178\u5e8f\u7684\u6bd4\u8f83\u3002\n\n\u9898\u76ee\u7ed9\u5b9a\u4e86\u5b57\u7b26\u4e32 $S$\uff0c\u6211\u4eec\u5bf9\u5b83\u5904\u7406 Hash \u6570\u7ec4\u540e\u5c31\u53ef\u4ee5\u7528\u4e8c\u5206\u5feb\u901f\u6c42 $\\operatorname{lcp}(x,y)$\uff0c\u8fdb\u800c\u6bd4\u8f83 $S[x\\dots n]$ \u4e0e $S[y\\dots n]$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log_2n)$\u3002\n\n\u5bf9\u4e8e\u4e09\u4e2a\u5b57\u7b26\u4e32 $A,B,C,A\\le B\\le C$\uff0c\u4e00\u5b9a\u6709 $\\operatorname{lcp}(A,C)=\\min\\{\\operatorname{lcp}(A,B),\\operatorname{lcp}(B,C)\\}$\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u9996\u5148\uff0c$\\operatorname{lcp}(A,C)\\le \\operatorname{lcp}(A,B)$\uff0c\u56e0\u4e3a\u5982\u679c $\\operatorname{lcp}(A,C)>\\operatorname{lcp}(A,B)$\uff0c\u90a3\u4e48 $A$ \u548c $B$ \u5728 $\\operatorname{lcp}(A,C)$ \u524d\u5c31\u201c\u5206\u51fa\u80dc\u8d1f\u201d\u4e86\uff0c\u5c31\u5fc5\u6709 $B<A$ \u6216 $B>C$\uff0c\u4e0d\u7b26\u5408\u524d\u63d0\uff0c\u540c\u7406\u6709 $\\operatorname{lcp}(A,C)\\le \\operatorname{lcp}(B,C)$\uff0c\u4e8e\u662f $\\operatorname{lcp}(A,C)\\le \\min\\{\\operatorname{lcp}(A,B),\\operatorname{lcp}(B,C)\\}$\u3002\n\n\u7136\u540e\u56e0\u4e3a $A,B$ \u7684\u524d $\\operatorname{lcp}(A,B)$ \u4e2a\u5b57\u7b26\u76f8\u540c\uff0c$B,C$ \u7684\u524d $\\operatorname{lcp}(B,C)$ \u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u6240\u4ee5\u5fc5\u6709 $A,C$ \u7684\u524d $\\min\\{\\operatorname{lcp}(A,B),\\operatorname{lcp}(B,C)\\}$ \u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u56fa\u6709 $\\operatorname{lcp}(A,C)\\ge \\min\\{\\operatorname{lcp}(A,B),\\operatorname{lcp}(B,C)\\}$\u3002\n\n\u7efc\u4e0a\uff0c$\\operatorname{lcp}(A,C)=\\min\\{\\operatorname{lcp}(A,B),\\operatorname{lcp}(B,C)\\}$\u3002\n\n\u6ce8\u610f\u8fd9\u4e2a\u547d\u9898\u662f\u5f88\u663e\u7136\u7684\uff0c\u4f46\u5df2\u7ecf\u662f\u672c\u9898\u6700\u6df1\u7684\u7ed3\u8bba\u4e86\u3002\n\n### Part4 \u8f6c\u5316\n\n\u9898\u76ee\u8981\u6c42\uff1a$\\sum\\limits_{x\\in A,y\\in B}\\operatorname{lcp}(x,y)$\u3002\n\n\u8003\u8651\u5c06 $A,B$ \u5f52\u5e76\u5728\u4e00\u8d77\uff0c\u53bb\u91cd\u3002\n\n\u7136\u540e\u6309\u5b57\u5178\u5e8f\u6392\uff0c\u8fd9\u4e00\u6b65\u662f\u590d\u6742\u5ea6\u74f6\u9888\uff0c$O(n\\log_2^2n)$\u3002\n\n\u8bbe\u6392\u5b8c\u5e8f\u7684\u6570\u7ec4\u4e3a $C_i$\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c $C_i$ \u548c $C_{i+1}$ \u4e4b\u95f4\u8fb9\u6743\u4e3a $\\operatorname{lcp}(C_i,C_{i+1})$\uff0c\u8fd9\u65f6\u5c31\u6709 $\\operatorname{lcp}(C_x,C_y)$ \u4e3a\u5b83\u4eec\u4e4b\u95f4\u7684\u8fb9\u6743\u6700\u5c0f\u503c\uff0c\u4e5f\u5373\u6700\u5c0f\u74f6\u9888\u8def\uff08\u5f31\u5316\uff09\u3002\n\n### Part5 \u8ba1\u7b97\n\n\u6309\u8fb9\u6743\u4ece\u5927\u5230\u5c0f\u5904\u7406\uff0c\u5904\u7406\u5b8c\u4e00\u6761\u8fb9\u4e4b\u540e\u5c06\u4e24\u70b9\u6240\u5728\u5e76\u67e5\u96c6\u5e76\u5728\u4e00\u8d77\uff0c\u8be5\u8fb9\u7684\u8d21\u732e\u5c31\u662f\u4e24\u8fb9\u8fde\u901a\u5757\u76f8\u5f02\u96c6\u5408\u7684\u65b9\u6848\u6570\u4e58\u4e0a\u8fb9\u6743\uff0c\u8fd9\u91cc\u5177\u4f53\u5316\u5c31\u662f\u8bb0\u5f55\u8fde\u901a\u5757\u7684 $sz_{x,0}$\uff08$A$ \u96c6\u5408\uff09\u4e0e $sz_{x,1}$\uff08$B$ \u96c6\u5408\uff09\uff0c\u8d21\u732e\u5c31\u662f $w_i(sz_{x,0}sz_{y,1}+sz_{x,1}sz_{y,0})$\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u6709\u4e00\u7c7b\u8d21\u732e\u65e0\u6cd5\u8ba1\u7b97\uff0c\u5373 $a_x=b_y$ \u65f6\uff0c\u5b83\u4eec\u76f4\u63a5\u8df3\u8fc7\u4e86\u5408\u5e76\u7684\u8fc7\u7a0b\uff0c\u6240\u4ee5\u8981\u7279\u6b8a\u5904\u7406\uff0c\u5373\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u65f6\u8ba9\u7b54\u6848\u52a0\u4e0a $n-a_x+1$\u3002\n\n\u81ea\u7136\u6ea2\u51fa\u5355 Hash \u88ab\u5361\u4e86\uff0c\u6240\u4ee5\u9644\u52a0\u4e86\u4e00\u4e2a\u53d6\u6a21\u7684 Hash\uff0c\u53ef\u4ee5\u901a\u8fc7\uff0c\u4ee3\u7801\u8f83\u77ed\uff0c\u4e0d\u5230 2K\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+6,M=1e9+7;\nusing ll=long long;\nusing ul=unsigned long long;\nchar s[N];\nint n,q,K,L,m,a[N],b[N],c[N],p[N];\nint U[N],V[N],w[N],f[N],sz[N][2];\nul pw[N],hs[N],ans;\nint rw[N],rs[N];\nint gf(int x){return x==f[x]?x:f[x]=gf(f[x]);}\nul gh(int l,int r){\n\treturn hs[r]-hs[l-1]*pw[r-l+1];\n}\u8fd9\u91cc\u662f\u4e24\u4e2a Hash\nint gr(int l,int r){\n\treturn(rs[r]+M-ul(rs[l-1])*rw[r-l+1]%M)%M;\n}\nint \\operatorname{lcp}(int x,int y){\n\tint rl=0,l=1,r=min(n-x+1,n-y+1),md;\n\twhile(l<=r){\n\t\tmd=l+r>>1;\n\t\tif(gh(x,x+md-1)==gh(y,y+md-1)&&gr(x,x+md-1)==gr(y,y+md-1))rl=md,l=md+1;\n\t\telse r=md-1;\n\t}\u4e8c\u5206\u6c42 LCP\n\treturn rl;\n}\nint main(){\n\tint i,j,k,x,y;\n\tscanf(\"%d%d%s\",&n,&q,s+1);\n\tfor(i=pw[0]=1;i<=n;++i)pw[i]=pw[i-1]*41719;\n\tfor(i=1;i<=n;++i)hs[i]=hs[i-1]*41719+s[i];\n\tfor(i=rw[0]=1;i<=n;++i)rw[i]=417191ll*rw[i-1]%M;\n\tfor(i=1;i<=n;++i)rs[i]=(417191ll*rs[i-1]+s[i])%M;\u9884\u5904\u7406\u53cc Hash\n\twhile(q--){\n\t\tscanf(\"%d%d\",&K,&L);\n\t\tfor(i=1;i<=K;++i)scanf(\"%d\",a+i);\n\t\tfor(i=1;i<=L;++i)scanf(\"%d\",b+i);\n\t\tmerge(a+1,a+K+1,b+1,b+L+1,c+1);\n\t\tfor(i=2,ans=0;i<=K+L;++i)\u7279\u5224a_x=b_y\n\t\t\tif(c[i]==c[i-1])ans+=n-c[i]+1;\n\t\tm=unique(c+1,c+K+L+1)-c-1;\n\t\tstable_sort(c+1,c+m+1,[&](int x,int y){\n\t\t\tint k=\\operatorname{lcp}(x,y);\u66b4\u529b\u6392\u5e8f\uff0c\u590d\u6742\u5ea6\u74f6\u9888\n\t\t\treturn s[x+k]<s[y+k];\n\t\t});\n\t\tfor(i=1;i<=m;++i)\n\t\t\tsz[c[i]][0]=sz[c[i]][1]=0,f[c[i]]=c[i];\u6e05\u7a7a\u5927\u5c0f\u53ca\u7236\u4eb2\u6570\u7ec4\n\t\tfor(i=1;i<m;++i)\n\t\t\tU[i]=c[i],V[i]=c[i+1],w[i]=\\operatorname{lcp}(c[i],c[i+1]),p[i]=i;\u8bb0\u8fb9\u6743\n\t\tfor(i=1;i<=K;++i)++sz[a[i]][0];\u8bb0\u70b9\u6743\n\t\tfor(i=1;i<=L;++i)++sz[b[i]][1];\n\t\tsort(p+1,p+m,[&](int x,int y){return w[x]>w[y];});\u6392\u8fb9\u6743\n\t\tfor(i=1;i<m;++i){\n\t\t\tx=gf(U[p[i]]),y=gf(V[p[i]]);\n\t\t\tans+=ul(w[p[i]])*sz[x][0]*sz[y][1];\n\t\t\tans+=ul(w[p[i]])*sz[x][1]*sz[y][0];\n\t\t\tf[x]=y,sz[y][0]+=sz[x][0],sz[y][1]+=sz[x][1];\n        \t\u5408\u5e76\uff01\n\t\t}printf(\"%llu\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1674477959,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "[CF1073G]\u4f7f\u7528 Hash \u5904\u7406 LCP \u95ee\u9898"
    },
    {
        "content": "## CF1073G\n\u9898\u610f\uff1a\u6c42$\\sum_i^{|A|}\\sum_j^{|B|}\\operatorname{LCP}(\\operatorname{suf}(a_i),\\operatorname{suf}(b_j))$.  $\\operatorname{suf}(x)$\u8868\u793a$[x...n]$\u8fd9\u4e2a\u540e\u7f00.\n \n\u9996\u5148\u4e24\u540e\u7f00\u7684 LCP \u5373\u4e3a\u5176\u5bf9\u5e94\u7ec8\u6b62\u8282\u70b9\u5728\u540e\u7f00\u6811\u4e0a\u7684 LCA \u7684\u72b6\u6001\uff0c\u90a3\u4e48\u663e\u7136\u6709 LCP \u7684\u957f\u5ea6\u5373\u4e3a\u540e\u7f00\u6811\u4e0a LCA \u7684\u6df1\u5ea6\uff08\u8868\u793a\u7684\u72b6\u6001\u7684\u957f\u5ea6\uff09\n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u7ed9\u4e24\u4e2a\u70b9\u96c6 $A,B,$\u6c42\n$$\n\\sum_{a\\in A}\\sum_{b\\in B}\\operatorname{dep}(\\operatorname{LCA}(a,b))\n$$\n\u8fd9\u5c31\u5f88\u88f8\u4e86\u5427\uff0c\u5c31\u662f \t[GXOI/GZOI2019]\u65e7\u8bcd \u90a3\u9898\u7684\u5957\u8def\u3002\u5bf9\u4e8e\u6bcf\u4e2a $b$,\u5c06\u5176\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743+1\uff0c$a$ \u7684\u8d21\u732e\u5c31\u8f6c\u5316\u4e3a\u5230\u6839\u7684\u8def\u5f84\u4e0a\u70b9\u6743\u548c\u3002\u76f4\u63a5 LCT/\u6811\u5256\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\n\n\u4e24\u4e2a\u5c0f\u7ec6\u8282\uff1a\n\n1. \u53ef\u4ee5\u7528 SAM\u5efa\u540e\u7f00\u6811\u3002\n2. \u540e\u7f00\u6811\u662f\u7ecf\u8fc7\u538b\u7f29\u7684\uff0cLCA\u7684\u6df1\u5ea6\u5e76\u4e0d\u76f4\u63a5\u662f\u6839\u5230\u4ed6\u7684\u8ddd\u79bb\uff0c\u800c\u5e94\u662f\u5176\u8868\u793a\u7684\u72b6\u6001\u7684\u957f\u5ea6\u3002\n\n\u540c\u65f6\u90a3\u4e9b\u88ab\u538b\u6389\u7684\u70b9\u4e5f\u662f\u6709\u8d21\u732e\u7684\uff0c\u4f46\u8fd9\u4e9b\u70b9\u6ca1\u6709\u5fc5\u8981\u771f\u7684\u53bb\u4fee\u6539\u70b9\u6743\uff0c\u76f4\u63a5\u52a0\u5230\u4e0b\u9762\u8fde\u7684\u6ca1\u6709\u88ab\u538b\u6389\u7684\u70b9\u4e0a\u5c31\u597d\u4e86\uff0c\u5c31\u53d8\u6210\u94fe\u4e0a\u6bcf\u4e2a\u70b9\u52a0\u5b9a\u503c\uff0c\u8be2\u95ee\u94fe\u548c\uff0c\u7528\u6811\u5256+\u7ebf\u6bb5\u6811/LCT\u7ef4\u62a4\u3002\n\n\nPS\uff1a\u5176\u5b9e\u7528 LCT \u5199\u4f1a\u77ed\u5f88\u591a~~\u4f46\u6211\u5199\u6302\u4e86~~\n```cpp\n#define MAXN 400011\nstruct SAM\n{\n    int t[MAXN][26],pre[MAXN],len[MAXN];\n    int last,tot;\n    SAM(){tot=last=1;}\n    void insert(int w)\n    {\n        int pos=last,cur=++tot;\n        len[cur]=len[pos]+1,last=cur;\n        while(pos&&!t[pos][w])t[pos][w]=cur,pos=pre[pos];\n        if(!pos){pre[cur]=1;return;}\n        int nxt=t[pos][w];\n        if(len[nxt]==len[pos]+1)pre[cur]=nxt;\n        else\n        {\n            int tmp=++tot;\n            len[tmp]=len[pos]+1;\n            memcpy(t[tmp],t[nxt],sizeof t[nxt]);\n            pre[tmp]=pre[nxt],pre[nxt]=pre[cur]=tmp;\n            while(pos&&t[pos][w]==nxt)t[pos][w]=tmp,pos=pre[pos];\n        }\n    }\n}sam;\nstruct Segment_Tree\n{\n    struct node\n    {\n        ll sum,k,tag;\n    }t[MAXN<<2|1];\n    #define rt t[num]\n    #define tl t[num<<1]\n    #define tr t[num<<1|1]\n    void pushdown(un l,un r,un num)\n    {\n        if(!rt.tag)return;\n        un mid=(l+r)>>1;\n        tl.sum+=tl.k*rt.tag,tl.tag+=rt.tag;\n        tr.sum+=tr.k*rt.tag,tr.tag+=rt.tag;\n        rt.tag=0;\n    }\n    void build(int* arr,un l=1,un r=sam.tot,un num=1)\n    {\n        if(l==r)rt.k=arr[l];\n        else\n        {\n            un mid=(l+r)>>1;\n            build(arr,l,mid,num<<1),build(arr,mid+1,r,num<<1|1);\n            rt.k=tl.k+tr.k;\n        }\n    }\n    void modify(un ql,un qr,ll k,un l=1,un r=sam.tot,un num=1)\n    {\n        if(ql<=l&&r<=qr){rt.sum+=k*rt.k,rt.tag+=k;return;}\n        pushdown(l,r,num);\n        un mid=(l+r)>>1;\n        if(ql<=mid)modify(ql,qr,k,l,mid,num<<1);\n        if(qr>mid)modify(ql,qr,k,mid+1,r,num<<1|1);\n        rt.sum=tl.sum+tr.sum;\n    }\n    ll Qsum(un ql,un qr,un l=1,un r=sam.tot,un num=1)\n    {\n        if(ql<=l&&r<=qr)return rt.sum;\n        pushdown(l,r,num);\n        un mid=(l+r)>>1;ll ans=0;\n        if(ql<=mid)ans+=Qsum(ql,qr,l,mid,num<<1);\n        if(qr>mid)ans+=Qsum(ql,qr,mid+1,r,num<<1|1);\n        return ans;\n    }\n}sgt;\nstruct edge{int v,nxt;}e[MAXN];\nint cnt=0,last[MAXN];\nvoid adde(int u,int v){e[++cnt].v=v,e[cnt].nxt=last[u],last[u]=cnt;}\nint size[MAXN],fa[MAXN],mson[MAXN];\nvoid dfs1(int u)\n{\n    size[u]=1;\n    for(int i=last[u];i;i=e[i].nxt)\n    {\n        int v=e[i].v;\n        fa[v]=u,dfs1(v);\n        if(size[v]>size[mson[u]])mson[u]=v;\n        size[u]+=size[v];\n    }\n}\nint top[MAXN],dfn[MAXN],w[MAXN], cur=0;\nvoid dfs2(int u,int now_top)\n{\n    top[u]=now_top,dfn[u]=++cur,w[cur]=sam.len[u]-sam.len[fa[u]];\n    if(mson[u])dfs2(mson[u],now_top);\n    for(int i=last[u];i;i=e[i].nxt)\n        if(e[i].v!=mson[u])dfs2(e[i].v,e[i].v);\n}\nvoid add_to_root(int u,int k)\n{\n    while(u)sgt.modify(dfn[top[u]],dfn[u],k),u=fa[top[u]];\n}\nll Qsum_to_root(int u)\n{\n    ll res=0;\n    while(u)res+=sgt.Qsum(dfn[top[u]],dfn[u]),u=fa[top[u]];\n    return res;\n}\nint ed[MAXN],a[MAXN],b[MAXN];\nchar s[MAXN];\nint main()\n{\n    int n=read(),m=read();scanf(\"%s\",s+1);\n    for(int i=n;i;--i)sam.insert(s[i]-'a'),ed[i]=sam.last;//\u5efa\u53cd\u4e32SAM\n    for(int i=2;i<=sam.tot;++i)adde(sam.pre[i],i);//\u5efa\u540e\u7f00\u6811\n    dfs1(1),dfs2(1,1),sgt.build(w);\n    while(m--)\n    {\n        int k=read(),l=read();\n        ll ans=0;\n        for(int i=1;i<=k;++i)a[i]=read();\n        for(int i=1;i<=l;++i)b[i]=read(),add_to_root(ed[b[i]],1);\n        for(int i=1;i<=k;++i)ans+=Qsum_to_root(ed[a[i]]);\n        for(int i=1;i<=l;++i)add_to_root(ed[b[i]],-1);\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1596955564,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    },
    {
        "content": "### \u9898\u610f:\n\n~~\u9898\u76ee\u7ffb\u8bd1\u5f88\u6e05\u695a\uff0c\u544a\u8f9e\u3002~~\n\n\n### sol:\n\n\u6211\u4eec\u8003\u8651\u5230 $lcp(x,y)$ \u7b49\u4ef7\u4e8e\u53cd\u4e32SAM\u4e0a\u7684 $dep_{lca(x,y)}$\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9 \u7ed9\u51fa\u4e32\u7684\u53cd\u4e32 \u5efa\u4e00\u4e2a\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u7136\u540e\u8bb0\u4e00\u4e0b $pos_x$ \u662f $x$ \u8fd9\u4e2a\u4f4d\u7f6e\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9\u4f4d\u7f6e\u3002\n\n\u600e\u4e48\u6c42 $\\sum_{a\\in A} \\sum_{b \\in B} lca(a,b)$ \u3002\n\n\u8003\u8651\u7ed9\u51fa\u7684\u96c6\u5408 $\\sum A,\\sum B \\leq 4\\times10^5$\u3002\n\n\u6211\u4eec\u76f4\u63a5\u865a\u6811\u5c31\u597d\u4e86\u5427\u3002\u5982\u679c\u4f60\u505a\u8fc7\u54c1\u9152\u5927\u4f1a\uff0c\u4f60\u5e94\u8be5\u4f1a\u4e0b\u9762\u8fd9\u4e2a\u5957\u8def\u3002\n\n```cpp\n// powered by c++11\n// by Isaunoya\n#include <bits/stdc++.h>\n#define rep(i, x, y) for (register int i = (x); i <= (y); ++i)\n#define Rep(i, x, y) for (register int i = (x); i >= (y); --i)\nusing namespace std;\nusing db = double;\nusing ll = long long;\nusing uint = unsigned int;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\n#define Tp template\n#define fir first\n#define sec second\nTp<class T> void cmax(T& x, const T& y) {\n  if (x < y) x = y;\n}\nTp<class T> void cmin(T& x, const T& y) {\n  if (x > y) x = y;\n}\n#define all(v) v.begin(), v.end()\n#define sz(v) ((int)v.size())\n#define pb emplace_back\nTp<class T> void sort(vector<T>& v) { sort(all(v)); }\nTp<class T> void reverse(vector<T>& v) { reverse(all(v)); }\nTp<class T> void unique(vector<T>& v) { sort(all(v)), v.erase(unique(all(v)), v.end()); }\ninline void reverse(string& s) { reverse(s.begin(), s.end()); }\nconst int SZ = 1 << 23 | 233;\nstruct FILEIN {\n  char qwq[SZ], *S = qwq, *T = qwq, ch;\n#ifdef __WIN64\n#define GETC getchar\n#else\n  inline char GETC() { return (S == T) && (T = (S = qwq) + fread(qwq, 1, SZ, stdin), S == T) ? EOF : *S++; }\n#endif\n  inline FILEIN& operator>>(char& c) {\n    while (isspace(c = GETC()))\n      ;\n    return *this;\n  }\n  inline FILEIN& operator>>(string& s) {\n    s.clear();\n    while (isspace(ch = GETC()))\n      ;\n    if (!~ch) return *this;\n    s = ch;\n    while (!isspace(ch = GETC()) && ~ch) s += ch;\n    return *this;\n  }\n  inline FILEIN& operator>>(char* str) {\n    char* cur = str;\n    while (*cur) *cur++ = 0;\n    cur = str;\n    while (isspace(ch = GETC()))\n      ;\n    if (!~ch) return *this;\n    *cur = ch;\n    while (!isspace(ch = GETC()) && ~ch) *++cur = ch;\n    *++cur = 0;\n    return *this;\n  }\n  Tp<class T> inline void read(T& x) {\n    bool f = 0;\n    while ((ch = GETC()) < 48 && ~ch) f ^= (ch == 45);\n    x = ~ch ? (ch ^ 48) : 0;\n    while ((ch = GETC()) > 47) x = x * 10 + (ch ^ 48);\n    x = f ? -x : x;\n  }\n  inline FILEIN& operator>>(int& x) { return read(x), *this; }\n  inline FILEIN& operator>>(ll& x) { return read(x), *this; }\n  inline FILEIN& operator>>(uint& x) { return read(x), *this; }\n  inline FILEIN& operator>>(ull& x) { return read(x), *this; }\n  inline FILEIN& operator>>(double& x) {\n    read(x);\n    bool f = x < 0;\n    x = f ? -x : x;\n    if (ch ^ '.') return *this;\n    double d = 0.1;\n    while ((ch = GETC()) > 47) x += d * (ch ^ 48), d *= .1;\n    return x = f ? -x : x, *this;\n  }\n} in;\nstruct FILEOUT {\n  const static int LIMIT = 1 << 22;\n  char quq[SZ], ST[233];\n  int sz, O, pw[233];\n  FILEOUT() {\n    set(7);\n    rep(i, pw[0] = 1, 9) pw[i] = pw[i - 1] * 10;\n  }\n  ~FILEOUT() { flush(); }\n  inline void flush() { fwrite(quq, 1, O, stdout), fflush(stdout), O = 0; }\n  inline FILEOUT& operator<<(char c) { return quq[O++] = c, *this; }\n  inline FILEOUT& operator<<(string str) {\n    if (O > LIMIT) flush();\n    for (char c : str) quq[O++] = c;\n    return *this;\n  }\n  inline FILEOUT& operator<<(char* str) {\n    if (O > LIMIT) flush();\n    char* cur = str;\n    while (*cur) quq[O++] = (*cur++);\n    return *this;\n  }\n  Tp<class T> void write(T x) {\n    if (O > LIMIT) flush();\n    if (x < 0) {\n      quq[O++] = 45;\n      x = -x;\n    }\n    do {\n      ST[++sz] = x % 10 ^ 48;\n      x /= 10;\n    } while (x);\n    while (sz) quq[O++] = ST[sz--];\n  }\n  inline FILEOUT& operator<<(int x) { return write(x), *this; }\n  inline FILEOUT& operator<<(ll x) { return write(x), *this; }\n  inline FILEOUT& operator<<(uint x) { return write(x), *this; }\n  inline FILEOUT& operator<<(ull x) { return write(x), *this; }\n  int len, lft, rig;\n  void set(int l) { len = l; }\n  inline FILEOUT& operator<<(double x) {\n    bool f = x < 0;\n    x = f ? -x : x, lft = x, rig = 1. * (x - lft) * pw[len];\n    return write(f ? -lft : lft), quq[O++] = '.', write(rig), *this;\n  }\n} out;\n#define int long long\nstruct Math {\n  vector<int> fac, inv;\n  int mod;\n  void set(int n, int Mod) {\n    fac.resize(n + 1), inv.resize(n + 1), mod = Mod;\n    rep(i, fac[0] = 1, n) fac[i] = fac[i - 1] * i % mod;\n    inv[n] = qpow(fac[n], mod - 2);\n    Rep(i, n - 1, 0) inv[i] = inv[i + 1] * (i + 1) % mod;\n  }\n  int qpow(int x, int y) {\n    int ans = 1;\n    for (; y; y >>= 1, x = x * x % mod)\n      if (y & 1) ans = ans * x % mod;\n    return ans;\n  }\n  int C(int n, int m) {\n    if (n < 0 || m < 0 || n < m) return 0;\n    return fac[n] * inv[m] % mod * inv[n - m] % mod;\n  }\n  int gcd(int x, int y) { return !y ? x : gcd(y, x % y); }\n  int lcm(int x, int y) { return x * y / gcd(x, y); }\n} math;\n\nint n;\nconst int maxn = 4e5 + 54;\n\nvector<int> g[maxn];\nstruct suffixautomaton {\n  int las, cnt;\n  suffixautomaton() { las = cnt = 1; }\n  int ch[maxn][26], fa[maxn], len[maxn], pos[maxn];\n\n  void ins(int c, int id) {\n    int p = las, np = las = ++cnt;\n    len[np] = len[p] + 1, pos[id] = np;\n    for (; p && !ch[p][c]; p = fa[p]) ch[p][c] = np;\n    if (!p) {\n      fa[np] = 1;\n    } else {\n      int q = ch[p][c];\n      if (len[q] == len[p] + 1) {\n        fa[np] = q;\n      } else {\n        int nq = ++cnt;\n        memcpy(ch[nq], ch[q], sizeof(ch[q]));\n        len[nq] = len[p] + 1, fa[nq] = fa[q], fa[q] = fa[np] = nq;\n        for (; p && ch[p][c] == q; p = fa[p]) ch[p][c] = nq;\n      }\n    }\n  }\n\n  void ins(char* S) {\n    char* Cur = S;\n    int qwq = 0;\n    while (*Cur) ins((*Cur++) - 'a', ++qwq);\n  }\n\n  void build() { rep(i, 2, cnt) g[fa[i]].pb(i); }\n} sam;\n\nint dfn[maxn], ed[maxn], idx = 0;\n\nstruct LCA {\n  int f[maxn][22], dep[maxn];\n\n  void dfs(int u) {\n    dfn[u] = ++idx;\n    for (int v : g[u]) dep[v] = dep[u] + 1, f[v][0] = u, dfs(v);\n    ed[u] = ++idx;\n  }\n\n  void solve() {\n    dfs(1);\n    rep(j, 1, 20) rep(i, 1, sam.cnt) f[i][j] = f[f[i][j - 1]][j - 1];\n  }\n\n  int lca(int x, int y) {\n    if (dep[x] < dep[y]) x ^= y ^= x ^= y;\n    for (int i = 20; ~i; i--)\n      if (dep[f[x][i]] >= dep[y]) x = f[x][i];\n    if (x == y) return x;\n    for (int i = 20; ~i; i--)\n      if (f[x][i] ^ f[y][i]) {\n        x = f[x][i], y = f[y][i];\n      }\n    return f[x][0];\n  }\n} Lca;\n\n// lcp = rev sam\n\nchar s[maxn];\n\nstruct Tree {\n  int dp[maxn][2], op[maxn << 1], tot = 0, st[maxn], top = 0;\n  bool book[maxn];\n\n  int solve(int k1, int k2) {\n    tot = 0;\n    rep(i, 1, k1) {\n      int x;\n      in >> x, x = n - x + 1, x = sam.pos[x], dp[x][0] = 1;\n      if (!book[x]) op[++tot] = x, book[x] = 1;\n    }\n    rep(i, 1, k2) {\n      int x;\n      in >> x, x = n - x + 1, x = sam.pos[x], dp[x][1] = 1;\n      if (!book[x]) op[++tot] = x, book[x] = 1;\n    }\n    sort(op + 1, op + tot + 1, [](int x, int y) { return dfn[x] < dfn[y]; });\n    for (int i = 1, lim = tot; i < lim; ++i) {\n      int lca = Lca.lca(op[i], op[i + 1]);\n      if (!book[lca]) op[++tot] = lca, book[lca] = 1;\n    }\n    rep(i, 1, tot) book[op[i]] = false;\n    for (int i = 1, lim = tot; i <= lim; ++i) op[++tot] = -op[i];\n    sort(op + 1, op + tot + 1,\n         [](int x, int y) { return (x > 0 ? dfn[x] : ed[-x]) < (y > 0 ? dfn[y] : ed[-y]); });\n    int ans = 0;\n    rep(i, 1, tot) {\n      if (op[i] > 0) {\n        int u = op[i];\n        st[++top] = u, ans += sam.len[u] * dp[u][0] * dp[u][1];\n      } else {\n        if (top == 1) {\n          dp[st[top]][0] = dp[st[top]][1] = 0, top--;\n        } else {\n          int u = st[top--], f = st[top];\n          ans += sam.len[f] * (dp[f][0] * dp[u][1] + dp[f][1] * dp[u][0]);\n          dp[f][0] += dp[u][0], dp[f][1] += dp[u][1], dp[u][0] = dp[u][1] = 0;\n        }\n      }\n    }\n    return ans;\n  }\n} tree;\n\nsigned main() {\n  // code begin.\n  int _;\n  in >> n >> _ >> s;\n  reverse(s, s + n), sam.ins(s), sam.build(), Lca.solve();\n  while (_--) {\n    int k1, k2;\n    in >> k1 >> k2;\n    out << tree.solve(k1, k2) << '\\n';\n  }\n  return 0;\n  // code end.\n}\n```",
        "postTime": 1585335217,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\n\u592a\u83dc\u4e0d\u4f1a\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u6765\u4e2a\u540e\u7f00\u6570\u7ec4\u7684\u505a\u6cd5\u5427\u3002\n\n\u540e\u7f00\u6570\u7ec4\u6700\u64c5\u957f\u7684\u5c31\u662f\u8fd9\u7c7b $lcp$ \u95ee\u9898\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u5148\u628a\u677f\u5b50\u6253\u4e86\u3002\n\n\u6211\u4eec\u77e5\u9053\uff1a\n\n$$lcp(l,\\ r) = \\left\\{\\begin{matrix} n + 1 - l\\ \\ (rnk_l = rnk_r)\\\\ \\min\\limits_{i \\in (rnk_l,\\ rnk_r]} \\{ height_i \\}\\ \\ (rnk_l < rnk_r)\\\\ \\min\\limits_{i \\in (rnk_r,\\ rnk_l]} \\{ height_i \\}\\ \\ (rnk_l > rnk_r) \\end{matrix}\\right.$$\n\n\u4f46\u5728\u8fd9\u9898\u4e2d\uff0c\u8be2\u95ee\u7684 $a_{1..n}$ \u548c $b_{1..n}$ \u7684\u5927\u5c0f\u5173\u7cfb\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u7ed9\u5b83\u4eec\u5206\u522b\u6309 $rnk$ \u6392\u4e2a\u5e8f\u3002\n\n\u6392\u5b8c\u5e8f\u540e\uff0c$a_i$ \u53ef\u4ee5\u76f4\u63a5\u6539\u4e3a $rnk_{a_i}$\uff0c$b_i$ \u540c\u7406\uff0c\u56e0\u4e3a\u8fd8\u53ef\u4ee5\u7528 $sa$ \u8f6c\u56de\u6765\u3002\u56e0\u4e3a\u61d2\uff0c\u4e0b\u9762 $lcp$ \u5b9a\u4e49\u76f4\u63a5\u662f\uff1a\n\n$$lcp(l,\\ r) = \\left\\{\\begin{matrix} n + 1 - sa_l\\ \\ (l = r)\\\\ \\min\\limits_{i \\in (l,\\ r]} \\{ height_i \\}\\ \\ (l < r)\\\\  \\min\\limits_{i \\in (r,\\ l]} \\{ height_i \\}\\ \\ (l > r) \\end{matrix}\\right.$$\n\n\u7136\u540e\uff0c\u6211\u4eec\u6309\u7740 $lcp$ \u7684\u5b9a\u4e49\uff0c\u5206 $3$ \u79cd\u60c5\u51b5\u505a\uff0c\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d\u6211\u628a\u7b2c $1$ \u79cd\u548c\u7b2c $2$ \u79cd\u5408\u5e76\u4e86\u3002\u53c8\u56e0\u4e3a\u7b2c $2$\u3001$3$ \u79cd\u60c5\u51b5\u7684\u505a\u6cd5\u7c7b\u4f3c\uff0c\u53ea\u9700\u601d\u8003\u5176\u4e2d\u4e00\u79cd\u5373\u53ef\u3002\n\n\u73b0\u5728\u8003\u8651 $b_j \\leqslant a_i$ \u600e\u4e48\u6c42 $lcp$ \u957f\u5ea6\u4e4b\u548c\u3002\n\n\u5bb9\u6613\u60f3\u5230 $O(n^2)$ \u7b97\u6cd5\uff0c\u679a\u4e3e\u6240\u6709\u7684 $b_j \\leqslant a_i$ \u7ed3\u5408 $ST$ \u8868\u66b4\u529b\u641e $lcp$\u3002\n\n\u4ed4\u7ec6\u4e00\u60f3\uff0c\u5bf9\u4e8e\u9009\u5b9a\u7684\u4e00\u4e2a $b_j$\uff0c\u968f\u7740 $a_i$ \u7684\u589e\u5927\uff0c$lcp(b_j,\\ a_i)$ \u662f\u4e0d\u589e\u7684\u3002\n\n\u6240\u4ee5\uff0c\u53ef\u4ee5\u987a\u7740\u679a\u4e3e $a_i$\uff0c\u4e4b\u540e\u5206 $2$ \u79cd\u60c5\u51b5\u3002$\\forall\\ b_j \\in (a_{i-1},\\ a_i]$\uff0c\u5b83\u4eec\u5728\u4e4b\u524d\u6ca1\u6709\u8ba1\u7b97\u8fc7\u8d21\u732e\uff0c\u56e0\u6b64\u8fd9\u4e9b\u53ef\u4ee5\u66b4\u529b\u6c42\u3002$\\forall\\ b_j \\leqslant a_{i-1}$\uff0c\u5b83\u4eec\u5728 $a_{i-1}$ \u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u6709\u8d21\u732e\u4e86\uff0c\u6b63\u5982\u4e0a\u4e00\u6bb5\u6240\u8bf4\uff0c\u8fd9\u4e2a\u8d21\u732e\u4e0d\u589e\uff0c\u53ef\u4ee5\u5148\u6c42\u51fa $(a_{i-1},\\ a_i]$ \u7684 $height$ \u6700\u5c0f\u503c\uff0c\u628a\u90a3\u4e9b\u8d21\u732e\u90fd $min$ \u4e0a\u8fd9\u4e2a\u6570\u3002\n\n\u589e\u52a0\u67d0\u4e2a\u503c\u7684\u8d21\u732e\u3001\u7ed9\u67d0\u4e2a\u533a\u95f4\u7684\u503c\u53d6 $min$\u2026\u2026\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\uff01\n\n\u7ed9\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e00\u4e2a $clear$ \u6807\u8bb0\u3002\u81f3\u4e8e $j$\uff0c\u4e5f\u662f\u968f\u7740 $i$ \u7684\u9012\u589e\u800c\u9012\u589e\u7684\uff0c\u6bd4\u8f83\u597d\u7ef4\u62a4\u3002\n\n\u540c\u7406\uff0c\u53ef\u4ee5\u6c42\u51fa $b_j \\geqslant a_i$\uff0c\u628a\u91cd\u590d\u7684 $b_j= a_i$ \u7684\u8d21\u732e\u51cf\u6389\u5c31 $ojbk$ \u4e86\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n\u8d85\u957f\u4ee3\u7801\u9884\u8b66\uff01\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n\ninline int read() {\n    char c = getchar(); int n = 0; bool f = false;\n    while (c < '0' || c > '9') { if (c == '-') { f = true; } c = getchar(); }\n    while (c >= '0' && c <= '9') { n = (n << 1) + (n << 3) + (c & 15); c = getchar(); }\n    return f ? -n : n;\n}\n\nconst int maxN = 200005, maxLog = 21;\n\nint n, m, max, num, numA, numB, logN, a[maxN], b[maxN], sa[maxN], rnk[maxN], cnt[maxN], old[maxN], f[maxLog][maxN], g[maxN], height[maxN];\nstd::string str;\n\ntypedef long long lol;\n\nstruct SegmentTree {\n    int cnt[maxN << 2]; lol sum[maxN << 2]; bool clr[maxN << 2];\n\n    inline void pushUp(int u) { cnt[u] = cnt[u << 1] + cnt[u << 1 | 1]; sum[u] = sum[u << 1] + sum[u << 1 | 1]; }\n    inline void pushClr(int u) { clr[u] = true; cnt[u] = sum[u] = 0; }\n    inline void pushDown(int u) { if (clr[u]) { clr[u] = false; pushClr(u << 1); pushClr(u << 1 | 1); } }\n    void modify(int u, int l, int r, int p, int x) {\n        if (!p) { return; }\n        if (l == r) { cnt[u] += x; sum[u] += 1ll * x * l; return; }\n        int mid = l + r >> 1; pushDown(u);\n        if (p <= mid) { modify(u << 1, l, mid, p, x); } else { modify(u << 1 | 1, mid + 1, r, p, x); }\n        pushUp(u);\n    }\n    void query(int u, int l, int r, int pl, int pr, int &res) {\n        if (pl > pr) { return; }\n        if (l == pl && r == pr) { res += cnt[u]; pushClr(u); return; }\n        int mid = l + r >> 1; pushDown(u);\n        if (pr <= mid) { query(u << 1, l, mid, pl, pr, res); }\n        else if (pl > mid) { query(u << 1 | 1, mid + 1, r, pl, pr, res); }\n        else { query(u << 1, l, mid, pl, mid, res); query(u << 1 | 1, mid + 1, r, mid + 1, pr, res); }\n        pushUp(u);\n    }\n} tr;\n\ninline void radixSort() {\n    for (int i = 1; i <= max; i++) { cnt[i] = 0; }\n    for (int i = 1; i <= n; i++) { cnt[rnk[i]]++; }\n    for (int i = 2; i <= max; i++) { cnt[i] += cnt[i - 1]; }\n    for (int i = n; i; i--) { sa[cnt[rnk[old[i]]]--] = old[i]; }\n}\nvoid suffixSort() {\n    for (int i = 1; i <= n; i++) { max = std::max(max, rnk[i] = str[i] - 'a' + 1); old[i] = i; }\n    radixSort();\n    for (int len = 1; true; len <<= 1) {\n        for (int i = n - len + 1; i <= n; i++) { old[++num] = i; }\n        for (int i = 1; i <= n; i++) { if (sa[i] > len) { old[++num] = sa[i] - len; } }\n        radixSort(); memcpy(old, rnk, sizeof(rnk)); rnk[sa[1]] = max = 1;\n        for (int i = 2; i <= n; i++) { rnk[sa[i]] = old[sa[i - 1]] == old[sa[i]] && old[sa[i - 1] + len] == old[sa[i] + len] ? max : ++max; }\n        if (max >= n) { num = 0; break; } else { num = 0; }\n    }\n    for (int i = 1, j; i <= n; i++) {\n        if (rnk[i] == 1) { height[1] = num = 0; continue; }\n        j = sa[rnk[i] - 1]; num = num ? num - 1 : 0;\n        while (i + num <= n && j + num <= n && str[i + num] == str[j + num]) { num++; }\n        height[rnk[i]] = num;\n    }\n}\n\nvoid buildST() {\n    for (int i = 1; i <= logN; i++) {\n        for (int j = 1; j + (1 << i) - 1 <= n; j++) { f[i][j] = std::min(f[i - 1][j], f[i - 1][j + (1 << i - 1)]); }\n    }\n}\ninline int getLcp(int l, int r) {\n    if (l > r) { std::swap(l, r); } else if (l == r) { return n + 1 - sa[l]; } else { l++; }\n    int logLen = g[r - l + 1]; return std::min(f[logLen][l], f[logLen][r - (1 << logLen) + 1]);\n}\n\nint main() {\n    n = read(); m = read(); while (1 << logN + 1 <= n) { logN++; }\n    std::cin >> str; str = \" \" + str; suffixSort();\n    for (int i = 1; i <= n; i++) { f[0][i] = height[i]; g[i] = log(i) / log(2); } buildST();\n    for (lol ans = 0; m; m--, ans = 0) {\n        numA = read(); numB = read();\n        for (int i = 1; i <= numA; i++) { a[i] = rnk[read()]; } std::sort(a + 1, a + numA + 1);\n        for (int i = 1; i <= numB; i++) { b[i] = rnk[read()]; } std::sort(b + 1, b + numB + 1);\n        for (int i = 1, j = 1; i <= numA; i++) {\n            if (i == 1) { tr.pushClr(1); } else {\n                int lcp = getLcp(a[i - 1], a[i]), tmp = 0;\n                tr.query(1, 1, n, lcp + 1, n, tmp);\n                if (lcp) { tr.modify(1, 1, n, lcp, tmp); }\n            }\n            for (; j <= numB && b[j] <= a[i]; j++) { tr.modify(1, 1, n, getLcp(b[j], a[i]), 1); }\n            ans += tr.sum[1];\n        }\n        for (int i = 1, j = 1; i <= numB; i++) {\n            if (i == 1) { tr.pushClr(1); } else {\n                int lcp = getLcp(b[i - 1], b[i]), tmp = 0;\n                tr.query(1, 1, n, lcp + 1, n, tmp);\n                if (lcp) { tr.modify(1, 1, n, lcp, tmp); }\n            }\n            for (; j <= numA && a[j] < b[i]; j++) { tr.modify(1, 1, n, getLcp(a[j], b[i]), 1); }\n            for (; j <= numA && a[j] <= b[i]; j++) { tr.modify(1, 1, n, getLcp(a[j], b[i]), 1); ans -= getLcp(a[j], b[i]); }\n            ans += tr.sum[1];\n        }\n        printf(\"%I64d\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1543898030,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    },
    {
        "content": "## \u9898\u89e3 CF1073G Yet Another LCP Problem\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.ml/problemset/problem/1073/G)\n\n\u9898\u610f\u63cf\u8ff0\n>\u5b9a\u4e49$LCP(S_i,S_j)$\u4e3a\u5b57\u7b26\u4e32$S$\u7684\u540e\u7f00$i$\u548c\u540e\u7f00$j$\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\u3002\n>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a$n$\u7684\u5b57\u7b26\u4e32$S$\uff0c$q$\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e24\u4e2a\u6b63\u6574\u6570\u96c6\u5408$A,B$\uff0c\u5927\u5c0f\u5206\u522b\u4e3a$k,l$\uff0c\u6c42$\\sum\\limits_{i\\in A,j\\in B}LCP(S_i,S_j)$\n\nSolution\uff1a\n\n\u770b\u5230\u5355\u5b57\u7b26\u4e32\u548c$LCP$\uff0c\u9a6c\u4e0a\u60f3\u5230\u540e\u7f00\u6811\uff0c\u7528$SAM$\u5efa\u51fa\u540e\u7f00\u6811\u540e\uff0c$LCP(S_i,S_j)$\u5c31\u662f\u540e\u7f00\u6811\u4e0a\u7684$Dep_{LCA(S_i,S_j)}$\u3002\n\n\u73b0\u5728\u770b\u5230\u6570\u636e\u8303\u56f4\uff1a$\\sum\\limits_{i=1}^{q}k_i,\\sum\\limits_{i=1}^{q}l_i\\leq2\\times10^5$\uff0c\u76f4\u63a5\u660e\u793a\u865a\u6811\u3002\u8003\u8651\u600e\u6837$DP$\uff0c\u6709\u4e00\u4e2a\u7ecf\u5178\u7684\u6811\u4e0a\u7edf\u8ba1\u6bcf\u6761\u8fb9\u7684\u7ecf\u8fc7\u6b21\u6570\u95ee\u9898\uff0c\u7b54\u6848\u662f$\\sum\\limits_{(u,v)\\in E}Size_v\\times(n-Size_v)$\u3002\u73b0\u5728\u8f6c\u5316\u6210$LCA$\u7684\u6570\u91cf\uff0c\u8003\u8651\u5bb9\u65a5\uff0c\u8bbe$Size_{u,0/1}$\u8868\u793au\u7684\u5b50\u6811\u4e2d\u5728$A/B$\u96c6\u5408\u4e2d\u7684\u70b9\u6570\uff0c\u4e00\u4e2a\u8282\u70b9\u5b50\u6811\u5185\u7684\u7b54\u6848\u5c31\u662f\u6bcf\u4e2a\u513f\u5b50$v$\u4e2d$A$\u96c6\u5408\u5185\u7684\u70b9\u6570\u4e58\u5176\u5b83\u513f\u5b50\u4e2d$B$\u96c6\u5408\u5185\u7684\u70b9\u6570\uff0c\u518d\u52a0\u4e0a\u8fd9\u4e2a\u8282\u70b9\u4e0a\u7684$A$\u96c6\u5408\u5185\u7684\u70b9\u6570\u4e58\u5b50\u6811\u4e2d$B$\u96c6\u5408\u5185\u7684\u70b9\u6570\uff0c\u6700\u540e\u4e58\u4e0a\u6df1\u5ea6\u3002\u5373\n$$\\sum\\limits_{u=1}^{n}[(\\sum\\limits_{v\\in Son(u)}Size_{v,0}\\times\\sum\\limits_{w\\in Son(u),w\\not= v}Size_{w,1})+(Size_{u,0}-\\sum\\limits_{v\\in Son(u)}Size_{v,0})\\times Size_{u,1}]\\times Dep_u$$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define INF 0x3f3f3f3f\n#define N 400005\n#define ls k<<1\n#define rs k<<1|1\n#define mid ((l+r)>>1)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define pii pair<int,int>\n#define il inline\n#define file(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout);\nusing namespace std;\nil int read(){\n\tint w=0,h=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')h=-h;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){w=w*10+ch-'0';ch=getchar();}\n\treturn w*h;\n}\nstruct Edge{\n\tint next,to;\n}edge[N<<2];\nchar S[N];\nint n,q,rev[N];\nint head[N],num;\nvoid add(int u,int v){\n\tedge[++num].next=head[u];\n\tedge[num].to=v;head[u]=num;\n}\nnamespace SAM{\n\tstruct Node{\n\t\tint len,link,ch[26];\n\t}t[N];\n\tint tot=1,cur=1;\n\tvoid extend(char c){\n\t\tint p=c-'a',u=++tot;\n\t\tt[u].len=t[cur].len+1;\n\t\tswap(u,cur);\n\t\twhile(u&&!t[u].ch[p])t[u].ch[p]=cur,u=t[u].link;\n\t\tif(!u)return t[cur].link=1,void();\n\t\tint v=t[u].ch[p];\n\t\tif(t[v].len==t[u].len+1)return t[cur].link=v,void();\n\t\tint w=++tot;\n\t\tt[w].len=t[u].len+1;\n\t\tt[w].link=t[v].link;\n\t\tt[v].link=t[cur].link=w;\n\t\tfor(int i=0;i<26;i++)t[w].ch[i]=t[v].ch[i];\n\t\twhile(u&&t[u].ch[p]==v)t[u].ch[p]=w,u=t[u].link;\n\t}\n\tvoid build(){\n\t\tint u=1;\n\t\tfor(int i=n;i>=1;i--){\n\t\t\tu=t[u].ch[S[i]-'a'];\n\t\t\trev[i]=u;\n\t\t}\n\t\tfor(int i=2;i<=tot;i++)add(t[i].link,i);\n\t}\n}\nnamespace Tree{\n\tstruct Node{\n\t\tint dep,fa,sz,son,seg,top,bot;\n\t}t[N];\n\tint dfn;\n\tvoid dfs1(int u,int fa){\n\t\tt[u].dep=t[fa].dep+1;\n\t\tt[u].fa=fa;t[u].sz=1;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].to;\n\t\t\tif(v==fa)continue;\n\t\t\tdfs1(v,u);\n\t\t\tt[u].sz+=t[v].sz;\n\t\t\tif(t[v].sz>t[t[u].son].sz)t[u].son=v;\n\t\t}\n\t}\n\tvoid dfs2(int u,int topf){\n\t\tt[u].top=topf;\n\t\tt[u].seg=++dfn;\n\t\tif(t[u].son)dfs2(t[u].son,topf);\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].to;\n\t\t\tif(v==t[u].fa||v==t[u].son)continue;\n\t\t\tdfs2(v,v);\n\t\t}\n\t\tt[u].bot=dfn;\n\t}\n\tint LCA(int x,int y){\n\t\tint fx=t[x].top,fy=t[y].top;\n\t\twhile(fx!=fy){\n\t\t\tif(t[fx].dep<t[fy].dep)swap(fx,fy),swap(x,y);\n\t\t\tx=t[fx].fa;fx=t[x].top;\n\t\t}\n\t\tif(t[x].dep>t[y].dep)swap(x,y);\n\t\treturn x;\n\t}\n}\nnamespace VirTree{\n\tvector<int>vir,G[N];\n\tint stk[N],top;\n\tint sum[N][2];\n\tint ans;\n\tbool cmp(int x,int y){return Tree::t[x].seg<Tree::t[y].seg;}\n\tvoid build(){\n\t\tsort(vir.begin(),vir.end(),cmp);\n\t\tfor(int i=vir.size()-2;~i;i--)vir.pb(Tree::LCA(vir[i],vir[i+1]));\n\t\tsort(vir.begin(),vir.end(),cmp);\n\t\tvir.erase(unique(vir.begin(),vir.end()),vir.end());\n\t\ttop=0;\n\t\tfor(auto u:vir){\n\t\t\twhile(top&&Tree::t[stk[top]].bot<Tree::t[u].seg)top--;\n\t\t\tif(top)G[stk[top]].pb(u);\n\t\t\tstk[++top]=u;\n\t\t}\n\t}\n\tvoid clear(){\n\t\tfor(auto u:vir)G[u].clear(),sum[u][0]=sum[u][1]=0;\n\t\tvir.clear();ans=0;\n\t}\n\tvoid dfs(int u){\n\t\tint tmp=sum[u][0];\n\t\tfor(auto v:G[u]){\n\t\t\tdfs(v);\n\t\t\tsum[u][0]+=sum[v][0];\n\t\t\tsum[u][1]+=sum[v][1];\n\t\t}\n\t\tfor(auto v:G[u])ans+=sum[v][0]*(sum[u][1]-sum[v][1])*SAM::t[u].len;\n\t\tans+=tmp*sum[u][1]*SAM::t[u].len;\n\t}\n}\nsigned main(){\n\tn=read();q=read();\n\tscanf(\"%s\",S+1);\n\tfor(int i=n;i>=1;i--)SAM::extend(S[i]);\n\tSAM::build();\n\tTree::dfs1(1,0);\n\tTree::dfs2(1,1);\n\twhile(q--){\n\t\tint kl=read(),kr=read();\n\t\tfor(int i=1,u;i<=kl;i++)\n\t\t\tVirTree::vir.pb(u=rev[read()]),VirTree::sum[u][0]++;\n\t\tfor(int i=1,u;i<=kr;i++)\n\t\t\tVirTree::vir.pb(u=rev[read()]),VirTree::sum[u][1]++;\n\t\tVirTree::build();\n\t\tVirTree::dfs(VirTree::stk[1]);\n\t\tprintf(\"%lld\\n\",VirTree::ans);\n\t\tVirTree::clear();\n\t}\n\treturn 0;\n}\n```\n\u8fd8\u6ca1\u5b8c\uff0c\u8fd9\u9898\u8fd8\u6709\u53e6\u4e00\u4e2a\u505a\u6cd5\uff1a\n\n\u770b\u5230$\\sum$\u548c$LCA$\uff0c\u9a6c\u4e0a\u60f3\u5230[[GXOI/GZOI2019]\u65e7\u8bcd](https://www.luogu.com.cn/problem/P5305)\u7684\u5957\u8def\uff0c\u5c06$A$\u96c6\u5408\u4e2d\u7684\u70b9\u5230\u6839\u7684\u8def\u5f84\u533a\u95f4$+1$\uff0c\u7136\u540e\u533a\u95f4\u67e5\u8be2$B$\u96c6\u5408\u4e2d\u7684\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6743\u7684\u548c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define INF 0x3f3f3f3f\n#define N 400005\n#define ls k<<1\n#define rs k<<1|1\n#define mid ((l+r)>>1)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define pii pair<int,int>\n#define il inline\n#define file(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout);\nusing namespace std;\nil int read(){\n\tint w=0,h=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')h=-h;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){w=w*10+ch-'0';ch=getchar();}\n\treturn w*h;\n}\nstruct Edge{\n\tint next,to;\n}edge[N<<2];\nchar S[N];\nint n,q,rev[N],pos[N];\nint kl,A[N],kr,B[N],ans;\nint head[N],num;\nvoid add(int u,int v){\n\tedge[++num].next=head[u];\n\tedge[num].to=v;head[u]=num;\n}\nnamespace SAM{\n\tstruct Node{\n\t\tint len,link,ch[26];\n\t}t[N];\n\tint tot=1,cur=1;\n\tvoid extend(char c){\n\t\tint p=c-'a',u=++tot;\n\t\tt[u].len=t[cur].len+1;\n\t\tswap(u,cur);\n\t\twhile(u&&!t[u].ch[p])t[u].ch[p]=cur,u=t[u].link;\n\t\tif(!u)return t[cur].link=1,void();\n\t\tint v=t[u].ch[p];\n\t\tif(t[v].len==t[u].len+1)return t[cur].link=v,void();\n\t\tint w=++tot;\n\t\tt[w].len=t[u].len+1;\n\t\tt[w].link=t[v].link;\n\t\tt[v].link=t[cur].link=w;\n\t\tfor(int i=0;i<26;i++)t[w].ch[i]=t[v].ch[i];\n\t\twhile(u&&t[u].ch[p]==v)t[u].ch[p]=w,u=t[u].link;\n\t}\n\tvoid build(){\n\t\tint u=1;\n\t\tfor(int i=n;i>=1;i--){\n\t\t\tu=t[u].ch[S[i]-'a'];\n\t\t\trev[i]=u;\n\t\t}\n\t\tfor(int i=2;i<=tot;i++)add(t[i].link,i);\n\t}\n}\nnamespace SGT{\n\tint Sum[N<<2],Val[N<<2],Tag[N<<2],Clr[N<<2];\n\tvoid pushup(int k){Sum[k]=Sum[ls]+Sum[rs];}\n\tvoid pushdown(int k,int l,int r){\n\t\tif(Clr[k]){\n\t\t\tSum[ls]=Sum[rs]=0;\n\t\t\tTag[ls]=Tag[rs]=0;\n\t\t\tClr[ls]=Clr[rs]=1;\n\t\t\tClr[k]=0;\n\t\t}\n\t\tif(!Tag[k])return;\n\t\tSum[ls]=Sum[ls]+Tag[k]*Val[ls];\n\t\tSum[rs]=Sum[rs]+Tag[k]*Val[rs];\n\t\tTag[ls]+=Tag[k];\n\t\tTag[rs]+=Tag[k];\n\t\tTag[k]=0;\n\t}\n\tvoid build(int k,int l,int r){\n\t\tif(l==r){\n\t\t\tVal[k]=pos[l];\n\t\t\treturn;\n\t\t}\n\t\tbuild(ls,l,mid);\n\t\tbuild(rs,mid+1,r);\n\t\tVal[k]=Val[ls]+Val[rs];\n\t}\n\tvoid modify(int k,int l,int r,int x,int y){\n\t\tif(l>y||r<x||l>r||x>y)return;\n\t\tif(l>=x&&r<=y){\n\t\t\tSum[k]+=Val[k];\n\t\t\tTag[k]+=1;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(k,l,r);\n\t\tif(x<=mid)modify(ls,l,mid,x,y);\n\t\tif(mid<y)modify(rs,mid+1,r,x,y);\n\t\tpushup(k);\n\t}\n\tint query(int k,int l,int r,int x,int y){\n\t\tif(l>y||r<x||l>r||x>y)return 0;\n\t\tif(l>=x&&r<=y)return Sum[k];\n\t\tpushdown(k,l,r);\n\t\tif(y<=mid)return query(ls,l,mid,x,y);\n\t\tif(mid<x)return query(rs,mid+1,r,x,y);\n\t\treturn query(ls,l,mid,x,y)+query(rs,mid+1,r,x,y);\n\t}\n}\nnamespace Tree{\n\tstruct Node{\n\t\tint dep,fa,sz,son,seg,top,bot;\n\t}t[N];\n\tint dfn;\n\tvoid dfs1(int u,int fa){\n\t\tt[u].dep=t[fa].dep+1;\n\t\tt[u].fa=fa;t[u].sz=1;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].to;\n\t\t\tif(v==fa)continue;\n\t\t\tdfs1(v,u);\n\t\t\tt[u].sz+=t[v].sz;\n\t\t\tif(t[v].sz>t[t[u].son].sz)t[u].son=v;\n\t\t}\n\t}\n\tvoid dfs2(int u,int topf){\n\t\tt[u].top=topf;\n\t\tt[u].seg=++dfn;\n\t\tpos[dfn]=SAM::t[u].len-SAM::t[t[u].fa].len;\n\t\tif(t[u].son)dfs2(t[u].son,topf);\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].to;\n\t\t\tif(v==t[u].fa||v==t[u].son)continue;\n\t\t\tdfs2(v,v);\n\t\t}\n\t\tt[u].bot=dfn;\n\t}\n\tint LCA(int x,int y){\n\t\tint fx=t[x].top,fy=t[y].top;\n\t\twhile(fx!=fy){\n\t\t\tif(t[fx].dep<t[fy].dep)swap(fx,fy),swap(x,y);\n\t\t\tx=t[fx].fa;fx=t[x].top;\n\t\t}\n\t\tif(t[x].dep>t[y].dep)swap(x,y);\n\t\treturn x;\n\t}\n\tvoid ask_modify(int x,int y){\n\t\tint fx=t[x].top,fy=t[y].top;\n\t\twhile(fx!=fy){\n\t\t\tif(t[fx].dep<t[fy].dep)swap(fx,fy),swap(x,y);\n\t\t\tSGT::modify(1,1,SAM::tot,t[fx].seg,t[x].seg);\n\t\t\tx=t[fx].fa;fx=t[x].top;\n\t\t}\n\t\tif(t[x].dep>t[y].dep)swap(x,y);\n\t\tSGT::modify(1,1,SAM::tot,t[x].seg,t[y].seg);\n\t}\n\tint ask_query(int x,int y){\n\t\tint fx=t[x].top,fy=t[y].top,res=0;\n\t\twhile(fx!=fy){\n\t\t\tif(t[fx].dep<t[fy].dep)swap(fx,fy),swap(x,y);\n\t\t\tres+=SGT::query(1,1,SAM::tot,t[fx].seg,t[x].seg);\n\t\t\tx=t[fx].fa;fx=t[x].top;\n\t\t}\n\t\tif(t[x].dep>t[y].dep)swap(x,y);\n\t\tres+=SGT::query(1,1,SAM::tot,t[x].seg,t[y].seg);\n\t\treturn res;\n\t}\n}\nvoid solve(){\n\tfor(int i=1;i<=kl;i++)\n\t\tTree::ask_modify(1,A[i]);\n\tfor(int i=1;i<=kr;i++)\n\t\tans+=Tree::ask_query(1,B[i]);\n}\nsigned main(){\n\tn=read();q=read();\n\tscanf(\"%s\",S+1);\n\tfor(int i=n;i>=1;i--)SAM::extend(S[i]);\n\tSAM::build();\n\tTree::dfs1(1,0);\n\tTree::dfs2(1,1);\n\tSGT::build(1,1,SAM::tot);\n\twhile(q--){\n\t\tkl=read(),kr=read();\n\t\tfor(int i=1;i<=kl;i++)A[i]=rev[read()];\n\t\tfor(int i=1;i<=kr;i++)B[i]=rev[read()];\n\t\tSGT::Clr[1]=1;\n\t\tSGT::Sum[1]=SGT::Tag[1]=ans=0;\n\t\tsolve();\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1.$SAM$\u5efa\u540e\u7f00\u6811\u8981\u4ece\u540e\u5f80\u524d\u63d2\u5165\u3002\n\n2.\u7b2c\u4e8c\u79cd\u505a\u6cd5\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u8d21\u732e\u5e76\u4e0d\u662f\u6df1\u5ea6\uff0c\u800c\u662f\u5b83\u5728$SAM$\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e\u7684$len$\n\n3.\u6765\u81eapidan\u8840\u7684\u6559\u8bad\uff1a\u7b2c\u4e8c\u79cd\u505a\u6cd5\u6302\u4e24\u4e2a$log$\uff0c\u8dd1\u5f97\u6781\u6162\uff0c\u8981\u5361\u5361\u5e38\u3002",
        "postTime": 1635941215,
        "uid": 191538,
        "name": "pidan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1073G Yet Another LCP Problem"
    },
    {
        "content": "> [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1073G)\u3002\n\n> \u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u51fa $s$\uff0c\u591a\u6b21\u8be2\u95ee\u7ed9\u51fa\u957f\u5ea6\u5206\u522b\u4e3a $k,l$ \u7684\u5e8f\u5217 $a,b$\uff0c\u6c42 $\\sum_{i=1}^k\\sum_{j=1}^l\\mathrm{LCP}(s[a_i:n],s[b_j:n])$\u3002\n\n[\u5728\u6211\u7684 cnblogs \u4e2d\u67e5\u770b](https://www.cnblogs.com/alex-wei/p/CF1073G.html)\u3002\n\nYet Another \u5957\u8def\u9898\u3002\n\n---\n\n\u5982\u679c\u4f60\u505a\u8fc7 [P4248 [AHOI2013]\u5dee\u5f02](https://www.luogu.com.cn/problem/P4248) \u5e94\u8be5\u53ef\u4ee5\u5f88\u5feb\u79d2\u6389\u8fd9\u9898\u3002\n\n\u6211\u4eec\u5148\u5bf9 $s$ \u8fdb\u884c\u540e\u7f00\u6392\u5e8f\uff0c\u6c42\u51fa height \u6570\u7ec4\uff0c\u5e76\u5c06 $a_i,b_i$ \u66ff\u6362\u4e3a $rk_{a_i},rk_{b_i}$\uff0c\u90a3\u4e48\u9898\u76ee\u5c31\u53d8\u4e3a $\\sum_{i=1}^k\\sum_{j=1}^l\\min_{k=\\min(a_i,b_i)+1}^{\\max(a_i,b_i)}ht_k$\u3002\n\n\u9884\u5904\u7406\u51fa $ht$ \u7684 ST \u8868\u4ee5 $\\mathcal{O}(1)$ RMQ\u3002\u7136\u540e\u4f7f\u7528\u7c7b\u4f3c\u4e0a\u9762\u90a3\u9898\u7684\u5957\u8def\uff0c\u5355\u8c03\u6808\u6c42\u51fa\u7b54\u6848\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u8981\u4ece\u5c0f\u5230\u5927\u8003\u8651 $a,b$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $pos$\uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u4f4d\u7f6e\u6307\u7684\u662f\u6392\u540d\uff0c\u56e0\u4e3a\u524d\u9762\u7528 $rk_a,rk_b$ \u66ff\u6362\u4e86 $a,b$\uff09\uff0c\u6c42\u51fa\u5728\u5b83\u524d\u9762\u7684\u6240\u6709\u4f4d\u7f6e $p_i\\ (p_i\\leq pos)$\uff08\u6ce8\u610f\u8fd9\u91cc\u53ef\u80fd\u53d6\u5230\u7b49\u4e8e\u53f7\uff0c\u56e0\u4e3a $a,b$ \u4e2d\u53ef\u80fd\u6709\u76f8\u540c\u7684\u4f4d\u7f6e\uff09\u4e2d\uff0c\u4e0e\u5b83\u7c7b\u578b\u4e0d\u540c\u7684\uff08\u5373\u82e5 $pos$ \u662f $b$ \u4e2d\u7684\u4f4d\u7f6e\uff0c\u5219 $p_i$ \u5e94\u8be5\u662f $a$ \u4e2d\u7684\uff09\u6240\u6709\u4f4d\u7f6e $+1$ \u540e\u4e0e\u5b83\u7684\u533a\u95f4 $ht$ \u6700\u5c0f\u503c\u4e4b\u548c\uff1a\u5bf9 $a,b$ \u5206\u522b\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808 $A,B$\u3002\u5148\u7528 $val=\\min_{i=pre+1}^{pos} ht_i$ \u66f4\u65b0**\u4e24\u4e2a**\u5355\u8c03\u6808 $A,B$\uff08$pre$ \u662f\u4e0a\u4e00\u6b21\u8003\u8651\u7684 $pos$\uff09\uff0c\u5982\u679c $pre=pos$ \u5219\u7528 $val=n-sa_{pos}+1$ \u66f4\u65b0\uff0c**\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u7684\u66f4\u65b0\u4e0d\u662f\u5c06\u4e00\u4e2a\u6570\u538b\u5165\u5355\u8c03\u6808 $A$ \u6216 $B$\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u662f\u4e0d\u7b97\u8d21\u732e\u7684\uff08\u5982\u679c\u7b97\u8d21\u732e\uff0c\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u4e86\u540c\u5c5e\u4e8e $a$ \u6216\u540c\u5c5e\u4e8e $b$ \u7684\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u7684\u91cd\u590d\u8d21\u732e\uff09\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u538b\u5165\u4e86\u4e00\u4e2a\u5bbd\u4e3a $0$\uff0c\u9ad8\u4e3a $val$ \u7684\u77e9\u5f62\uff1b** \u7136\u540e\uff0c\u82e5\u5f53\u524d\u4f4d\u7f6e\u5c5e\u4e8e $a$\uff0c\u5219\u8ba1\u7b97\u5355\u8c03\u6808 $B$ \u4e2d\u7684 \u201c\u77e9\u5f62\u9762\u79ef\u548c\u201d\uff0c\u5426\u5219\u8ba1\u7b97 $A$ \u4e2d\u7684\u77e9\u5f62\u9762\u79ef\u548c\uff1b\u6700\u540e\uff0c\u82e5\u5f53\u524d\u4f4d\u7f6e\u5c5e\u4e8e $a$\uff0c\u5c06 $n-sa_{pos}+1$ \u538b\u5165\u5355\u8c03\u6808 $A$\uff0c\u5426\u5219\u5c06\u5176\u538b\u5165 $B$\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u538b\u5165\u4e86\u4e00\u4e2a\u5bbd\u4e3a $1$\uff0c\u9ad8\u4e3a $n-sa_{pos}+1$ \u7684\u77e9\u5f62\u3002\u6240\u6709\u8ba1\u7b97\u51fa\u7684 \u201c\u77e9\u5f62\u9762\u79ef\u548c\u201d \u4e4b\u548c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n+\\sum k\\log\\sum k+\\sum l\\log \\sum l)$\uff08\u540e\u9762\u7684 $\\log$ \u662f\u6392\u5e8f\u6240\u9700\u7684 $\\log$\uff09\u3002\n\n```cpp\n/*\n\tPowered by C++11.\n\tAuthor : Alex_Wei.\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n\nconst int N=2e5+5;\nconst int K=18;\n\nstruct MonotoneStack{\n\tll stc[N],l[N],top,sum;\n\tvoid modify(int val){\n\t\tint len=0;\n\t\twhile(top&&stc[top]>=val)sum-=stc[top]*l[top],len+=l[top--];\n\t\tsum+=len*val,stc[++top]=val,l[top]=len;\n\t} void push(int val){\n\t\tstc[++top]=val,l[top]=1,sum+=val;\n\t}\n}ta,tb;\n\nint n,q,k,l,a[N],b[N];\nll sta[N],stb[N];\nchar s[N];\nstruct SA{\n\tint sa[N],rk[N<<1],ork[N<<1],ht[N];\n\tint buc[N],id[N],px[N],mi[N][K];\n\tbool cmp(int a,int b,int w){\n\t\treturn ork[a]==ork[b]&&ork[a+w]==ork[b+w];\n\t} void build(){\n\t\tint m=1<<7,p=0;\n\t\tfor(int i=1;i<=n;i++)buc[rk[i]=s[i]]++;\n\t\tfor(int i=1;i<=m;i++)buc[i]+=buc[i-1];\n\t\tfor(int i=n;i;i--)sa[buc[rk[i]]--]=i;\n\t\tfor(int w=1;w<=n;w<<=1,m=p,p=0){\n\t\t\tfor(int i=n;i>n-w;i--)id[++p]=i;\n\t\t\tfor(int i=1;i<=n;i++)if(sa[i]>w)id[++p]=sa[i]-w;\n\t\t\tfor(int i=0;i<=m;i++)buc[i]=0;\n\t\t\tfor(int i=1;i<=n;i++)buc[px[i]=rk[id[i]]]++;\n\t\t\tfor(int i=1;i<=m;i++)buc[i]+=buc[i-1];\n\t\t\tfor(int i=n;i;i--)sa[buc[px[i]]--]=id[i];\n\t\t\tfor(int i=1;i<=n;i++)ork[i]=rk[i]; p=0;\n\t\t\tfor(int i=1;i<=n;i++)rk[sa[i]]=cmp(sa[i],sa[i-1],w)?p:++p;\n\t\t} for(int i=1,k=0;i<=n;i++){\n\t\t\tif(k)k--;\n\t\t\twhile(s[i+k]==s[sa[rk[i]-1]+k])k++;\n\t\t\tht[rk[i]]=k;\n\t\t} for(int j=0;j<K;j++)\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\tif(j)mi[i][j]=min(mi[i][j-1],mi[i+(1<<j-1)][j-1]);\n\t\t\t\telse mi[i][j]=ht[i];\n\t} int query(int l,int r){\n\t\tif(l>r)swap(l,r);\n\t\tif(l==r)return n-sa[l]+1;\n\t\tif(l+1==r)return ht[r];\n\t\tint d=log2(r-(l++));\n\t\treturn min(mi[l][d],mi[r-(1<<d)+1][d]);\n\t} ll run(ll k,ll l){\n\t\tfor(int i=1;i<=k;i++)a[i]=rk[a[i]];\n\t\tfor(int i=1;i<=l;i++)b[i]=rk[b[i]];\n\t\tsort(a+1,a+k+1),sort(b+1,b+l+1);\n\t\tll lp=1,rp=1,ans=0,pre=0;\n\t\twhile(lp<=k||rp<=l){\n\t\t\tint tp,pos;\n\t\t\tif(lp>k||rp<=l&&b[rp]<a[lp])tp=2,pos=b[rp++];\n\t\t\telse tp=1,pos=a[lp++];\n\t\t\tint val=query(pre,pos);\n\t\t\tta.modify(val),tb.modify(val);\n\t\t\tif(tp==1)ans+=tb.sum,ta.push(n-sa[pos]+1);\n\t\t\telse ans+=ta.sum,tb.push(n-sa[pos]+1);\n\t\t\tpre=pos;\n\t\t} return ans;\n\t}\n}sa;\n\nint main(){\n\tscanf(\"%d%d%s\",&n,&q,s+1),sa.build();\n\twhile(q--){\n\t\tscanf(\"%d%d\",&k,&l);\n\t\tfor(int i=1;i<=k;i++)scanf(\"%d\",&a[i]);\n\t\tfor(int i=1;i<=l;i++)scanf(\"%d\",&b[i]);\n\t\tcout<<sa.run(k,l)<<endl;\n\t\tta.top=tb.top=ta.sum=tb.sum=0; \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1615034998,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1073G Yet Another LCP Problem"
    },
    {
        "content": "#### ~~\u9a6c\u4e0a\u5c31AHOI\u4e86\uff0c\u73b0\u5728\u9664\u4e86\u7b80\u5355\u5b57\u7b26\u4e32\u5565\u90fd\u4e0d\u4f1a\u3002~~\n\n---\n\n#### \u770b\u5230\u8fd9\u9053\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u60f3\u5230[\u8fd9\u9898](https://www.luogu.com.cn/problem/P4248)\u3002\n\n\u7136\u540e\u53d1\u73b0\u4e24\u9898\u672c\u8d28\u6ca1\u6709\u592a\u5927\u533a\u522b\uff0c\u90fd\u662f\u6c42 $\\sum lcp(i,j)$ \u4e00\u7c7b\u7684\u95ee\u9898\u3002\n\n\u6211\u4eec\u56de\u60f3\u4e00\u4e0b\u90a3\u9053\u9898\u76ee\u5e94\u8be5\u600e\u4e48\u505a\uff1a\u5148\u7528 $SA$ \u6c42\u51fa $height$ \u6570\u7ec4\uff0c\u7136\u540e\u5728 $height$ \u6570\u7ec4\u4e2d\u8dd1\u5355\u8c03\u6808\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u5efa $height$ \uff0c\u4f1a\u8d85\u65f6\u3002\n\n---\n\n#### \u6211\u4eec\u6765\u770b\u4e0b $height$ \u6570\u7ec4\u7684\u5b9a\u4e49\uff1a \n\u6392\u540d\u4e3a $i$ \u7684\u540e\u7f00\u4e0e\u6392\u540d\u4e3a $i-1$ \u7684\u540e\u7f00\u7684 $LCP$ \u3002\u8fd9\u9053\u9898\u76ee\u6070\u597d\u4e5f\u662f $LCP$ \uff0c\u4f46\u662f\u662f\u6bcf\u6b21\u7ed9\u51fa\u5173\u952e\u70b9\u3002\n\n---\n\n#### \u5173\u952e\u70b9\uff1f\u4e8e\u662f\u6613\u60f3\u5230\u7c7b\u4f3c\u865a\u6811\u7684\u5957\u8def\uff1a\n\u6211\u4eec\u53ef\u4ee5\u628a\u6392\u540d\u76f8\u90bb\u7684\u5173\u952e\u70b9\u7684 $LCP$ \u6c42\u51fa\uff0c\u7136\u540e\u5c31\u6210\u4e86\u90a3\u9898\u3002\n\n---\n\n#### \u53ef\u662f\u6392\u540d\u76f8\u90bb\u7684\u5173\u952e\u70b9\u7684 $LCP$ \u600e\u4e48\u6c42\u5462\uff1f\n\n\u663e\u7136 $LCP(i,j)$ $=$ $\\min \\limits_{k=i+1}^j LCP(k-1,k)$ \uff0c\u4e5f\u5c31\u662f $\\min \\limits_{k=i+1}^j height_k$ \u3002\n\uff08\u6b64\u5904 $i,j,k$ \u5747\u6307\u6392\u540d\uff09\u3002\n\n\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u6210\u529f\u7684\u8f6c\u6362\u4e86\u3002\n\n---\n\n#### \u7136\u540e\u53d1\u73b0\u9898\u76ee\u662f\u5728\u96c6\u5408A\u548cB\u4e2d\u5404\u9009\u4e00\u4e2a\u6570\uff0c\u5e76\u4e0d\u662f\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\n\n\u8fd9\u5e76\u4e0d\u96be\u8f6c\u6362\uff0c\u8003\u8651\u7b80\u5355\u5bb9\u65a5\u3002\n\n\u4ee4 $calc(A)$ \u8868\u793a\u5bf9\u4e8e\u96c6\u5408 $A$ \u7684\u7b54\u6848\uff0c\u90a3\u4e48 $ans=calc(A\\cup B)-calc(A)-calc(B)$ \u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n#### \u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing namespace std; \nchar s[200005];\nint n,T,m,sa[400005],rk[400005],tp[400005],tax[400005],h[400005],height[400005];\nstruct SGT{\n\tint tree[1000005];\n\tSGT(){\n\t\tmemset(tree,0x7f,sizeof(tree));\n\t\treturn;\n\t}\n\tinline void pushup(int now){\n\t\ttree[now]=min(tree[now*2],tree[now*2+1]);\n\t\treturn;\n\t}\n\tinline void tree_update(int now,int nowl,int nowr,int pos,int val){\n\t\tif (nowl==nowr){\n\t\t\ttree[now]=val;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(nowl+nowr)/2;\n\t\tif (pos<=mid)tree_update(now*2,nowl,mid,pos,val);\n\t\telse tree_update(now*2+1,mid+1,nowr,pos,val);\n\t\tpushup(now);\n\t\treturn;\n\t}\n\tinline void update(int pos,int val){\n\t\ttree_update(1,1,n,pos,val);\n\t\treturn;\n\t}\n\tinline int tree_query(int now,int nowl,int nowr,int lt,int rt){\n\t\tif (nowl>=lt&&nowr<=rt)return tree[now];\n\t\tint mid=(nowl+nowr)/2,s=1e9;\n\t\tif (mid>=lt)s=min(s,tree_query(now*2,nowl,mid,lt,rt));\n\t\tif (mid+1<=rt)s=min(s,tree_query(now*2+1,mid+1,nowr,lt,rt));\n\t\treturn s;\n\t}\n\tinline int query(int l,int r){\n\t\treturn tree_query(1,1,n,l,r);\n\t}\n}sgt;\ninline void Qsort(){\n\tmemset(tax,0,sizeof(tax));\n\tfor (int i=1;i<=n;i++)tax[rk[i]]++;\n\tfor (int i=1;i<=m;i++)tax[i]+=tax[i-1];\n\tfor (int i=n;i>=1;i--)\n\t\tsa[tax[rk[tp[i]]]--]=tp[i];\n\treturn;\n}\ninline void Suffix_Sorting(){\n\tm=200;\n\tfor (int i=1;i<=n;i++)tp[i]=i,rk[i]=(int)(s[i]); \n\tQsort();\n\tfor (int w=1,p=0;p<n;m=p,w*=2){\n\t\tp=0;\n\t\tfor (int i=n-w+1;i<=n;i++)tp[++p]=i;\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (sa[i]>w)tp[++p]=sa[i]-w;\n\t\tQsort();\n\t\tswap(rk,tp);\n\t\trk[sa[1]]=1;\n\t\tp=1;\n\t\tfor (int i=2;i<=n;i++){\n\t\t\tif (tp[sa[i]]==tp[sa[i-1]]&&tp[sa[i]+w]==tp[sa[i-1]+w])rk[sa[i]]=p;\n\t\t\telse rk[sa[i]]=++p;\n\t\t}\n\t}\n\treturn;\n} \ninline void Get_Height(){\n\tfor (int i=1;i<=n;i++){\n\t\th[i]=max(0,h[i-1]-1);\n\t\twhile(s[i+h[i]]==s[sa[rk[i]-1]+h[i]]&&i+h[i]<=n&&sa[rk[i]-1]+h[i]<=n)h[i]++;\n\t}\n\tfor (int i=1;i<=n;i++)height[i]=h[sa[i]];\n\treturn;\n}\nint a[200005],b[200005],c[400005],tot;\nint tail;\nstruct node{\n\tint cnt,val;\n\tnode(){\n\t\tcnt=val=0;\n\t}\n}q[400005];\nll calc(){\n\tfor (int i=1;i<=tot;i++)c[i]=rk[c[i]];\n\tsort(c+1,c+1+tot);\n\tif (tot==1)return 0; \n\ttot--;\n\tfor (int i=1;i<=tot;i++)\n\t\tif (c[i]==c[i+1])c[i]=n-sa[c[i]]+1;\n\t\telse c[i]=sgt.query(c[i]+1,c[i+1]);\n\tll nowsum=0,sum=0;\n\ttail=0;\n\tfor (int i=1;i<=tot;i++){\n\t\tnode now;\n\t\tnow.cnt=1,now.val=c[i];\n\t\twhile(tail>0&&q[tail].val>now.val){\n\t\t\tnow.cnt+=q[tail].cnt;\n\t\t\tnowsum-=q[tail].cnt*q[tail].val;\n\t\t\ttail--;\n\t\t}\n\t\tq[++tail]=now;\n\t\tnowsum+=q[tail].cnt*q[tail].val;\n\t\tsum+=nowsum;\n\t}\n\treturn sum;\n}\nint main(){\n\tfreopen(\"1073G.in\",\"r\",stdin);\n\tfreopen(\"1073G.out\",\"w\",stdout);\n\tcin>>n>>T;\n\tscanf(\"%s\",s+1);\n\tSuffix_Sorting();\n\tGet_Height();\n\tfor (int i=2;i<=n;i++)sgt.update(i,height[i]);\n\twhile(T--){\n\t\tint l1,l2;\n\t\tscanf(\"%d%d\",&l1,&l2);\n\t\tfor (int i=1;i<=l1;i++)scanf(\"%d\",&a[i]);\n\t\tfor (int i=1;i<=l2;i++)scanf(\"%d\",&b[i]);\n\t\tll ans=0;\n\t\ttot=0;\n\t\tfor (int i=1;i<=l1;i++)c[++tot]=a[i];\n\t\tans-=calc();\n\t\ttot=0;\n\t\tfor (int i=1;i<=l2;i++)c[++tot]=b[i];\n\t\tans-=calc();\n\t\ttot=0;\n\t\tfor (int i=1;i<=l1;i++)c[++tot]=a[i];\n\t\tfor (int i=1;i<=l2;i++)c[++tot]=b[i];\n\t\tans+=calc();\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1592447065,
        "uid": 235926,
        "name": "1kri",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1073G"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u7ed9\u4e00\u5b57\u7b26\u4e32\uff0c$q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $A,B$ \u4e24\u4e2a\u96c6\u5408\uff0c\u6c42\n\n$$\\sum_{p_a\\in A}\\sum_{p_b\\in B}\\textsf{lcp}(p_a,p_b)$$\n\n\u5176\u4e2d $\\textsf{lcp}(x,y)$ \u8868\u793a $x$ \u8fd9\u4e2a\u540e\u7f00\u548c $y$ \u8fd9\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\n\n\u9898\u89e3\uff1a\n\n\u9996\u5148\u8003\u8651\u6c42 $H(A)=\\sum_{p_1\\in A}\\sum_{p_2\\in A}\\textsf{lcp}(p_1,p_2)$ \uff08\u8fd9\u91cc\u662f $p_1,p_2$ \u662f\u65e0\u5e8f\u7684\uff09\n\n\u56e0\u4e3a\u6709 $\\textsf{lcp}$\uff0c\u6240\u4ee5\u8003\u8651\u6c42\u540e\u7f00\u6570\u7ec4\u548c $\\textsf{height}$ \u6570\u7ec4\n\n$\\textsf{lcp(x,y)}=\\min \\textsf{height}_i (i\\in [x,y])$\n\n\u6240\u4ee5\u5c06 $A$ \u4e2d\u5143\u7d20\u6392\u5e8f\u540e\uff0c\u95ee\u9898\u4fbf\u8f6c\u5316\u4e3a\u4e86\u6c42\uff1a\n\n$$\\sum_{i=1}\\sum_{j=i}\\min \\textsf{height}_k(k\\in [i,j])$$\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u6c42\u51fa\u6bcf\u4e2a\u6570\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u548c\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\uff08\u7528\u4e8c\u5206 st \u8868\u4e5f\u53ef\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa\u7b54\u6848\uff0c\u8be6\u89c1 P4248\n\n\u6700\u540e\u5c06 $\\sum_{p_a\\in A}\\sum_{p_b\\in B}\\textsf{lcp}(p_a,p_b)$ \u8f6c\u5316\u4e3a $H(A+B)-H(A)-H(B)$ \u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\n\n[\u7801](https://www.luogu.com.cn/paste/holhtztg)",
        "postTime": 1643892045,
        "uid": 359952,
        "name": "_lbw_",
        "ccfLevel": 6,
        "title": "CF1073G"
    },
    {
        "content": "\u8003\u8651\u5230\u53c8\u662f\u4e00\u4e2a\u505a $\\operatorname{lcp}$ \u7684\u95ee\u9898\u3002\u663e\u7136\u9700\u8981\u4e32\u53cd\u8f6c\u7136\u540e\u7528\u4e00\u4e2a\u5904\u7406\u540e\u7f00\u7684\u5de5\u5177\u53bb\u505a\u8fd9\u4e2a\u9898\u3002\u8fd9\u79cd\u9898\u89c1\u7684\u591a\u4e86\u6253\u8fd9\u53e5\u8bdd\u90fd\u66b4\u8e81\u4e86\u3002\u8fd9\u91cc\u7528\u7684\u540e\u7f00\u81ea\u52a8\u673a\u3002\n\n\u4e00\u4e2a\u719f\u77e5\u7ed3\u8bba\u662f\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u4e24\u4e2a\u7ed3\u70b9 $\\operatorname{parent}$ \u6811\u4e0a\u7684 $\\operatorname{LCA}$ \u8868\u793a\u7684\u6700\u957f\u4e32\u5c31\u662f\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u8868\u793a\u7684\u4e32\u7684 $\\operatorname{lcp}$\u3002\u90a3\u5c31\u5f80\u8fd9\u4e2a\u65b9\u9762\u505a\uff0c\u9996\u5148\u628a\u6811\u5efa\u51fa\u6765\u3002\n\n\u53d1\u73b0\u56e0\u4e3a\u67e5\u8be2\u7684\u70b9\u5f88\u591a\uff0c\u81ea\u7136\u60f3\u5230\u865a\u6811\u3002\n\n\u5728\u865a\u6811\u4e0a\u6c42\u7b54\u6848\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u6bd4\u8f83\u65b9\u4fbf\u7684\u5904\u7406\u65b9\u6cd5\u662f\u5728\u67d0\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5904\u7406\u5b8c\u4ee5\u5176\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u5185\u7684\u8de8\u5b50\u6811\u8d21\u732e\uff08\u5373\u8d21\u732e\u6765\u81ea\u7684\u70b9\u5728\u4e24\u4e2a\u5b50\u6811\uff09\u3002\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u663e\u7136\uff0c\u76f4\u63a5\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u96c6\u5408 $A$ \u4e2d\u7684\u540e\u7f00\u51fa\u73b0\u5728\u8fd9\u4e2a\u5b50\u6811\u5185\uff0c\u7136\u540e\u5206\u5b50\u6811\u7b97\u8d21\u732e\u5c31\u884c\u4e86\u3002\n\n\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u662f\u5f53\u524d\u7ed3\u70b9\u3002\u5177\u4f53\u505a\u6cd5\u662f\u770b\u770b\u6807\u8bb0\u5c31\u884c\u4e86\u3002\u8fd9\u91cc\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u592a\u597d\u4e86\u8fd9\u4e2a\u9898\u4e0d\u662f\u50bb\u903c SvT \u4e0d\u5361\u5e38\uff01\uff01\uff01\u592a\u597d\u4e86\uff01\uff01\uff011\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nint read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\tc=getchar();\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x;\n}\nvoid write(LL x)\n{\n\tif(x<0)\tputchar('-'),x=-x;\n\tif(x>9)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nconst int Sigma=26;\nchar s[500005];\nint pos[500005],n,dep[1000005],fa[1000005][21],lgs[1000005],dfn[1000005],sjc,val[1000005],sr[1000005],len,len1,len2,siza[1000005],sizb[1000005];\nbool tek1[1000005],tek2[1000005];\nvector<int> G[1000005],vir[1000005];\nLL ans;\nbool cmp(int x,int y){return dfn[x]<dfn[y];}\nstruct SAM{\n\tint las,cnt,ch[1000005][Sigma],len[1000005],fa[1000005];\n\tSAM(){las=cnt=1;}\n\tvoid extend(int c)\n\t{\n\t\tint p=las,cur=++cnt;\n\t\tlen[cur]=len[las]+1;\n\t\tlas=cur;\n\t\twhile(p && !ch[p][c])\tch[p][c]=cur,p=fa[p];\n\t\tif(!p)\tfa[cur]=1;\n\t\telse\n\t\t{\n\t\t\tint q=ch[p][c];\n\t\t\tif(len[p]+1==len[q])\tfa[cur]=q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint clone=++cnt;\n\t\t\t\tlen[clone]=len[p]+1;\n\t\t\t\tmemcpy(ch[clone],ch[q],sizeof ch[q]);\n\t\t\t\tfa[clone]=fa[q];\n\t\t\t\tfa[q]=fa[cur]=clone;\n\t\t\t\twhile(ch[p][c]==q)\tch[p][c]=clone,p=fa[p];\n\t\t\t}\n\t\t}\n\t}\n\tvoid build(){for(int i=2;i<=cnt;++i)\tG[fa[i]].push_back(i);}\n}sam;\nvoid dfs(int now)\n{\n\tdep[now]=dep[sam.fa[now]]+1;\n\tfa[now][0]=sam.fa[now];\n\tval[now]=sam.len[now];\n\tdfn[now]=++sjc;\n\tfor(int i=1;i<=20;++i)\tfa[now][i]=fa[fa[now][i-1]][i-1];\n\tfor(unsigned int i=0;i<G[now].size();++i)\tdfs(G[now][i]);\n}\nint LCA(int u,int v)\n{\n\tif(dep[u]>dep[v])\tu^=v^=u^=v;\n\twhile(dep[u]<dep[v])\tv=fa[v][lgs[dep[v]-dep[u]]];\n\tif(u==v)\treturn u;\n\tfor(int i=20;~i;--i)\tif(fa[u][i]!=fa[v][i])\tu=fa[u][i],v=fa[v][i];\n\treturn fa[u][0];\n}\nvoid dfs2(int now)\n{\n\tfor(unsigned int i=0;i<vir[now].size();++i)\n\t{\n\t\tint to=vir[now][i];\n\t\tdfs2(to);\n\t\tsiza[now]+=siza[to],sizb[now]+=sizb[to];\n\t}\n\tfor(unsigned int i=0;i<vir[now].size();++i)\n\t{\n\t\tint to=vir[now][i];\n\t\tans+=LL(siza[now]-siza[to])*(LL)sizb[to]*(LL)val[now];\n\t}\n\tif(tek1[now] && !tek2[now])\n\t{\n\t\t++siza[now];\n\t\tans+=(LL)val[now]*(LL)sizb[now];\n\t}\n\telse if(!tek1[now] && tek2[now])\n\t{\n\t\t++sizb[now];\n\t\tans+=(LL)val[now]*(LL)siza[now];\n\t}\n\telse if(tek1[now]&tek2[now])\n\t{\n\t\tans+=(LL)val[now]*LL(siza[now]+sizb[now]+1);\n\t\t++siza[now],++sizb[now];\n\t}\n}\nint main(){\n\tint T;\n\tn=read(),T=read();\n\tscanf(\"%s\",s+1);\n\treverse(s+1,s+1+n);\n\tfor(int i=1;i<=n;++i)\tsam.extend(s[i]-'a'),pos[i]=sam.las;\n\tsam.build();\n\tfor(int i=2;i<=1000000;++i)\tlgs[i]=lgs[i>>1]+1;\n\tdfs(1);\n\twhile(T-->0)\n\t{\n\t\tlen1=read(),len2=read();\n\t\tlen=len1+len2;\n\t\tfor(int i=1;i<=len1;++i)\ttek1[sr[i]=pos[n-read()+1]]=true;\n\t\tfor(int i=len1+1;i<=len;++i)\ttek2[sr[i]=pos[n-read()+1]]=true;\n\t\tsort(sr+1,sr+1+len,cmp);\n\t\tlen=unique(sr+1,sr+1+len)-sr-1;\n\t\tfor(int i=1;i<len;++i)\tsr[len+i]=LCA(sr[i],sr[i+1]);\n\t\tlen=2*len-1;\n\t\tsort(sr+1,sr+1+len,cmp);\n\t\tlen=unique(sr+1,sr+1+len)-sr-1;\n\t\tfor(int i=2;i<=len;++i)\tvir[LCA(sr[i-1],sr[i])].push_back(sr[i]);\n\t\tans=0;\n\t\tdfs2(sr[1]);\n\t\twrite(ans);\n\t\tputs(\"\");\n\t\tfor(int i=1;i<=len;++i)\tvir[sr[i]].clear(),siza[sr[i]]=sizb[sr[i]]=0,tek1[sr[i]]=tek2[sr[i]]=false;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1614694029,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "CF1073G Yet Another LCP Problem \u9898\u89e3"
    },
    {
        "content": "\u540e\u7f00\u81ea\u52a8\u59ec/\u540e\u7f00\u6570\u7ec4\u90fd\u80fd\u505a\n\n\u624b\u61d2\u4e86\u5c31\u6253\u4e86\u4e2a\u540e\u7f00\u81ea\u52a8\u59ec\n\n____________________\n### \u524d\u7f6e\u829d\u58eb:\u540e\u7f00\u81ea\u52a8\u59ec\n\n~~\u4e0d\u4f1a\u540e\u7f00\u81ea\u52a8\u59ec\u7684\u8bdd\u53ef\u4ee5\u51fa\u95e8\u5de6\u8f6c\u4f60\u7ad9\u6a21\u677f\u533a\uff0c\u4fdd\u6559\u5305\u4f1a~~\n\n### \u524d\u7f6e\u829d\u58eb\uff1a\u865a\u6811\n\n~~\u4e0d\u4f1a\u865a\u6811\u7684\u8bdd\u53ef\u4ee5\u5728\u4f60\u7ad9\u968f\u4fbf\u627e\u51e0\u9053\u5173\u4e8e\u865a\u6811\u7684\u9898\u505a\u505a\uff0c\u7136\u540e\u5c31\u4f1a\u4e86~~\n\n## \u672c\u9898\u9898\u89e3\n\n\u4e00\u53e5\u8bdd\u9898\u610f\uff0c\u8bb0lcp(i.j)\u8868\u793ai\u8fd9\u4e2a\u540e\u7f00\u548cj\u8fd9\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u5019\u7ed9\u51fa\u4e24\u4e2a\u6b63\u6574\u6570\u96c6\u5408A\u548cB,\u6c42\n\n$$\\sum_{i \\in A,j \\in B}lcp(i,j)$$\n\n\u7684\u503c\n### \u5173\u4e8eparent\u6811\u7684\u4e00\u4e9b\u5e38\u8bc6\n\n\u4f60\u9700\u8981\u77e5\u9053\u7684\u4e8b\u60c5\u662f,\u540e\u7f00\u81ea\u52a8\u59ec\u6709n\u4e2a\u8868\u793a\u524d\u7f00\u7684\u8282\u70b9\uff0c\u8fd8\u6709\u4e00\u4e9b\u8868\u793a\u5176\u4ed6\u5b50\u4e32\u7684\u8282\u70b9\uff0c\u8fd9\u4e9b\u70b9\u5171\u540c\u6784\u6210\u4e86\u540e\u7f00\u81ea\u52a8\u59ec\n\n\u800c\u540e\u7f00\u81ea\u52a8\u59ec\u4e0a\u4e00\u4e2a\u8282\u70b9i\u7684right\u96c6\u5408\u5176\u5b9e\u5c31\u662fi\u5b50\u6811\u4e2d\u51fa\u73b0\u7684\u524d\u7f00\u8282\u70b9\uff0c\u5982\u679cp\u8fd9\u4e2a\u524d\u7f00\u8282\u70b9\u5728i\u7684\u5b50\u6811\u4e2d\u51fa\u73b0\u4e86\uff0c\u90a3i\u7684right\u96c6\u5408\u4e2d\u5c31\u6709p\n\n\u90a3\u4e48\u6211\u4eec\u501f\u6b64\u53ef\u4ee5\u4f7f\u7528\u540e\u7f00\u81ea\u52a8\u59ec\u6765\u6c42\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\n\n\u5047\u8bbe\u5176\u4e2d\u4e00\u4e2a\u524d\u7f00\u5728\u540e\u7f00\u81ea\u52a8\u59ec\u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\u662fu\u53e6\u4e00\u4e2a\u8282\u70b9\u5728\u540e\u7f00\u81ea\u52a8\u59ec\u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\u662fv\u7684\u8bdd\uff0c\u8fd9\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u957f\u5ea6\u5c31\u662flca(u,v)\u8fd9\u4e2a\u8282\u70b9\u6240\u80fd\u8868\u793a\u7684\u6700\u957f\u5b50\u4e32\u957f\u5ea6\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662flca(u,v)\u7684len\u503c\n\n_______________\n\n### \u865a\u6811\n\n\u90a3\u597d\u4e86\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u6211\u4eec\u80fd\u505a\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u628a\u539f\u6765\u7684\u4e32\u53cd\u8fc7\u6765\u8dd1\u540e\u7f00\u81ea\u52a8\u59ec\uff0c\u90a3\u4e48\u4e24\u4e2a\u540e\u7f00\u5728\u53cd\u4e32\u4e0a\u5c31\u662f\u4e24\u4e2a\u524d\u7f00\uff0c\u800c\u6700\u957f\u516c\u5171\u524d\u7f00\u4e5f\u53d8\u6210\u4e86\u6700\u957f\u516c\u5171\u540e\u7f00\n\n\u90a3\u4e48\u6839\u636e\u6211\u4eec\u521a\u624d\u7684\u8f6c\u5316\u5c31\u662f\u4e24\u4e2a\u8282\u70b9\u7684lca\u7684len\u503c\n\n\u4f46\u662f\u95ee\u9898\u662f\u6211\u4eec\u7684A\u548cB\u662f\u4e24\u4e2a\u8282\u70b9\u7684\u96c6\u5408\uff0c\u76f4\u63a5\u5927\u529b\u679a\u4e3e\u70b9\u5bf9\u6c42lca\u663e\u7136\u4f1atle\u5bfc\u81f4gg\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u5bf9\u8fd9\u4e24\u4e2a\u70b9\u96c6\u7684\u5e76\u96c6\u5efa\u4e00\u4e2a\u865a\u6811\u51fa\u6765\n\n\u5728\u865a\u6811\u4e0adfs\uff0c\u5047\u8bbe\u6211\u4eecdfs\u5230\u4e86\u4e00\u4e2a\u70b9p\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u70b9\u5bf9(u,v)\u6ee1\u8db3lca(u,v)=p,\u7136\u540e\u4ee4\u7b54\u6848\u52a0\u4e0alen(p)\u00d7\u70b9\u5bf9\u4e2a\u6570\u5c31\u884c\u4e86\n\n\u600e\u4e48\u7edf\u8ba1\u70b9\u5bf9\u4e2a\u6570\u5462\uff1f\n\n\u6211\u4eec\u5c06\u6240\u6709\u5c5e\u4e8eA\u96c6\u5408\u7684\u70b9\u67d3\u6210\u767d\u8272\u800c\u6240\u6709\u5c5e\u4e8eB\u96c6\u5408\u7684\u70b9\u67d3\u6210\u9ed1\u8272,\u5f53\u7136\u4e00\u4e9b\u70b9\u53ef\u80fd\u6ca1\u6709\u989c\u8272\u800c\u53e6\u4e00\u4e9b\u70b9\u53ef\u80fd\u65e2\u662f\u767d\u8272\u53c8\u662f\u9ed1\u8272\n\n\u6211\u4eec\u4ee4dp(u,0/1)\u8868\u793au\u5b50\u6811\u5f53\u4e2d\u7684\u767d\u70b9\u548c\u9ed1\u70b9\u7684\u4e2a\u6570\u8f6c\u79fb\u5341\u5206\u663e\u7136\n\n\u5f53\u6211\u4eec\u5408\u5e76\u4e24\u4e2a\u8282\u70b9(u,v)\u5176\u4e2du\u662fv\u7684\u7236\u4eb2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4ee5u\u4e3alca\u7684\u70b9\u5bf9\u4e2a\u6570\u591a\u4e86\n\n$$dp(u,0)dp(v,1)+dp(u,1)dp(u,0)$$\n\n\u8fd9\u4e48\u591a\u4e2a\uff0c\u76f4\u63a5\u7ed9\u7b54\u6848\u8d21\u732e\u4e0a\u5c31ok\u4e86\n\n\u7136\u540e\u4ee3\u7801\u76f8\u5f53\u597d\u5199~\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=2*1e5+10;typedef long long ll;\nint n;int m;char mde[N];int v[2*N];int x[2*N];int ct;int al[2*N];int len[2*N];\nint fa[2*N][22];int dep[2*N];int dfi[2*N];int dfo[2*N];int df;\nbool book[2*N];int op[4*N];int tpop;int st[2*N];int tp;int dp[2*N][2];\ninline bool cmp(int a,int b){return ((a<0)?dfo[-a]:dfi[a])<((b<0)?dfo[-b]:dfi[b]);}\ninline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}\nstruct suffixautomaton//\u7b80\u6613\u540e\u7f00\u81ea\u52a8\u59ec\u6a21\u677f \n{\n\tint mp[2*N][30];int fa[2*N];int ct;\n\tinline void ih(){for(int i=1;i<=n;i++)len[i]=i;ct=n+1;}\n\tinline void ins(int nw,int c)\n\t{\n\t\tint p=(nw==1)?n+1:nw-1;for(;p&&mp[p][c]==0;p=fa[p])mp[p][c]=nw;\n\t\tif(p==0){fa[nw]=n+1;return;}int q=mp[p][c];\n\t\tif(len[q]==len[p]+1){fa[nw]=q;return;}++ct;len[ct]=len[p]+1;\n\t\tfor(int i=1;i<=26;i++)mp[ct][i]=mp[q][i];\n\t\tfor(;p&&mp[p][c]==q;p=fa[p])mp[p][c]=ct;fa[ct]=fa[q];fa[q]=fa[nw]=ct;\n\t}\n\tinline void build(){for(int i=1;i<=ct;i++)if(fa[i])add(fa[i],i);}\n}sam;\ninline void dfs(int u)//\u500d\u589e\u6c42lca \n{\n\tdfi[u]=++df;\n\tfor(int i=0;fa[u][i];i++)fa[u][i+1]=fa[fa[u][i]][i];dep[u]=dep[fa[u][0]]+1;\n\tfor(int i=al[u];i;i=x[i])fa[v[i]][0]=u,dfs(v[i]);dfo[u]=++df;\n}\ninline int lca(int u,int v)\n{\n\tif(dep[u]<dep[v])swap(u,v);for(int d=dep[u]-dep[v],i=0;d;d>>=1,i++)if(d&1)u=fa[u][i];\n\tif(u==v)return u;for(int i=18;i>=0;i--)if(fa[u][i]!=fa[v][i])u=fa[u][i],v=fa[v][i];\n\treturn fa[u][0];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);scanf(\"%s\",mde+1);sam.ih();reverse(mde+1,mde+n+1);\n\tfor(int i=1;i<=n;i++)sam.ins(i,mde[i]-'a'+1);sam.build();dfs(n+1);\n\tfor(int z=1,k1,k2;z<=m;z++)//\u865a\u6811\u677f\u5b50 \n\t{\n\t\tscanf(\"%d%d\",&k1,&k2);tpop=0;\n\t\tfor(int i=1,t;i<=k1;i++)scanf(\"%d\",&t),t=n-t+1,dp[t][0]=1,op[++tpop]=t,book[t]=true;\n\t\tfor(int i=1,t;i<=k2;i++)\n\t\t\t{scanf(\"%d\",&t),t=n-t+1,dp[t][1]=1;if(!book[t])op[++tpop]=t,book[t]=true;}\n\t\tsort(op+1,op+tpop+1,cmp);\n\t\tfor(int i=1,lim=tpop,lc;i<lim;i++)\n\t\t\t{lc=lca(op[i],op[i+1]);if(!book[lc])op[++tpop]=lc,book[lc]=true;}\n\t\tfor(int i=1;i<=tpop;i++)book[op[i]]=false;\n\t\tfor(int i=1,lim=tpop;i<=lim;i++)op[++tpop]=-op[i];sort(op+1,op+tpop+1,cmp);\n\t\tll ans=0;\n\t\tfor(int i=1;i<=tpop;i++)\n\t\t\tif(op[i]>0){int u=op[i];st[++tp]=u;ans+=(ll)len[u]*dp[u][0]*dp[u][1];}\n\t\t\telse \n\t\t\t{\n\t\t\t\tif(tp==1){dp[st[tp]][0]=dp[st[tp]][1]=0;tp--;continue;}\t\n\t\t\t\tint u=st[tp];tp--;int f=st[tp];\n\t\t\t\tans+=(ll)len[f]*((ll)dp[f][0]*dp[u][1]+(ll)dp[f][1]*dp[u][0]);\n\t\t\t\tdp[f][0]+=dp[u][0];dp[f][1]+=dp[u][1];dp[u][0]=dp[u][1]=0;\n\t\t\t}printf(\"%lld\\n\",ans);\n\t}return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n\n",
        "postTime": 1541405290,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    },
    {
        "content": "\u9996\u5148\u5efa\u7acb\u540e\u7f00\u6570\u7ec4\uff0c\u7136\u540e\u8003\u8651\u5904\u7406\u8be2\u95ee\u3002\n\n\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u505a\u6cd5\u662f\u6309 $height$ \u4ece\u5927\u5230\u5c0f\u5206\u7ec4\uff0c\u6bcf\u6b21\u5408\u5e76\u65f6\u7edf\u8ba1\u4e24\u534a\u8d21\u732e\u3002\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5355\u6b21\u505a\u662f $O(n\\alpha(n))$ \u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u8003\u8651\u6839\u53f7\u5206\u6cbb\uff0c\u8bbe\u5b9a\u9608\u503c $M$\uff0c\u5f53 $|A|\\ge M$ \u65f6\u5019\u4f7f\u7528\u8be5\u505a\u6cd5\uff0c\u5f53 $|A|\\le M$ \u65f6\uff0c\u53d1\u73b0\u66b4\u529b\u590d\u6742\u5ea6\u4e3a $\\sum|A||B|\\le M\\sum|B|$\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(\\frac {n^2\\alpha(n)}{M}+nM)$\uff0c\u5e73\u8861\u590d\u6742\u5ea6\u7684\u65f6\u5019\u9700\u8981 $M$ \u7565\u5927\u4e8e $\\sqrt n$\uff0c\u8fdb\u884c\u4e00\u4e9b\u5e38\u6570\u4f18\u5316\u5373\u53ef\u5361\u8fc7\uff0c[record](https://codeforces.com/contest/1073/submission/202589661)\u3002\n\n$|A|\\le M$ \u90e8\u5206\u7eaf\u7cb9\u7684\u66b4\u529b\u80af\u5b9a\u6ca1\u6709\u4f18\u5316\u7a7a\u95f4\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u7740\u624b $|A|\\ge M$ \u90e8\u5206\u4f18\u5316\u3002\n\n\u539f\u505a\u6cd5\u4e0d\u4f18\u4e3b\u8981\u56e0\u4e3a\u6bcf\u6b21 $height$ \u90fd\u4ece $n$ \u679a\u4e3e\u5230 $1$\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u5f88\u591a\u65f6\u5019\u5408\u5e76\u90fd\u662f\u65e0\u6548\u7684\uff0c\u53d1\u751f\u6709\u6548\u5408\u5e76\u7684 $height$ \u4e0d\u8d85\u8fc7 $|A|+|B|$ \u4e2a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u628a\u8fd9\u4e9b $height$ \u62ce\u51fa\u6765\u5408\u5e76\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c[record](https://codeforces.com/contest/1073/submission/202593572)\u3002",
        "postTime": 1681815871,
        "uid": 128606,
        "name": "2018ljw",
        "ccfLevel": 7,
        "title": "CF1073G \u9898\u89e3"
    },
    {
        "content": "\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6709\u82e5\u5e72\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa\u4e24\u4e2a\u96c6\u5408 $A,B$ \uff0c\u6c42\uff1a\n$$\n\\sum_{i\\in A}\\sum_{j\\in B}\\operatorname{LCP}(i,j)\n$$\n\n## \u601d\u8def\n\n\u56e0\u4e3a\u4e0d\u4f1a SAM\uff0c\u6240\u4ee5\u4f7f\u7528\u540e\u7f00\u6570\u7ec4\u3002\n\n\u9996\u5148\u6c42\u51fa\u540e\u7f00\u6570\u7ec4\u3002\n\n\u7136\u540e\u601d\u8003\u5982\u679c $A=B=\\{1,\\cdots n\\}$ \u3002\n\n\u6b64\u65f6\u5c31\u6709\u4e24\u79cd\u7ecf\u5178\u7684\u5904\u7406\u65b9\u5f0f\uff1a \u5355\u8c03\u6808\u548c\u5e76\u67e5\u96c6\u3002\n\n\u5982\u679c $A,B$ \u662f\u4e00\u4e2a\u5b50\u96c6\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5c06\u7ed9\u51fa\u7684\u540e\u7f00\u6309\u7167 $rk_i$ \u7136\u540e\u653e\u5728\u4e00\u8d77\u6392\u5e8f\u3002\n\n\u8fd9\u6837\u5b9e\u9645\u4e0a\u53c8\u53d8\u56de\u4e86\u5168\u96c6\u7684\u5904\u7406\u65b9\u5f0f\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u76f8\u5f53\u4e8e\u8fd8\u662f\u5c06\u7ed9\u51fa\u7684\u540e\u7f00\u6392\u5e8f\u4e86\uff0c\u7136\u540e\u6b64\u65f6\u9700\u8981\u5feb\u901f\u6c42\u51fa $height$ \u6570\u7ec4\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 ST \u8868+\u6c42\u539f\u6765\u5b57\u7b26\u4e32\u4e2d\u7684\u533a\u95f4\u6700\u5c0f\u503c\u6765\u5b9e\u73b0\u3002\n\n\u7136\u540e\u8fd9\u91cc\u660e\u663e\u4f7f\u7528\u5e76\u67e5\u96c6\u66f4\u52a0\u65b9\u4fbf\u3002\n\n\u65b9\u6cd5\u8fd8\u662f\u6309 $height$ \u4ece\u5927\u5230\u5c0f\u5408\u5e76\u540e\u7f00\uff0c\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\u7ef4\u62a4\u4e24\u4e2a\u503c\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u8fde\u901a\u5757\u4e2d\u5c5e\u4e8e $A$  \u96c6\u5408\u548c $B$ \u96c6\u5408\u7684\u6709\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u7136\u540e\u518d\u5408\u5e76\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u8fde\u901a\u5757\u5185\u90e8\u7684\u8d21\u732e\u5df2\u7ecf\u8ba1\u7b97\u5b8c\u4e86\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u8de8\u8fde\u901a\u5757\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u4e5f\u5c31\u662f\u8de8\u8fde\u901a\u5757\u4e14\u6240\u5c5e\u79cd\u7c7b\u4e0d\u540c\u7684\u540e\u7f00\u5bf9\u7684\u4e2a\u6570\u4e58\u4e0a\u5f53\u524d\u5408\u5e76\u7684 lcp \u7684\u957f\u5ea6\uff0c\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002\n\n\u7136\u540e\u6bcf\u6b21\u7684\u590d\u6742\u5ea6\u5c31\u662f $O\\left((|A|+|B|)\\log(|A|+|B|)\\right) $\u3002\n\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4ecd\u7136\u662f\u4e00\u4e2a $\\log $ \u800c\u4e14\u5e38\u6570\u6bd4\u8f83\u5c0f\u3002\n\n## code\n\n\u540e\u7f00\u6570\u7ec4\u677f\u5b50\u5c31\u4e0d\u653e\u4e86\u3002\n\n```c++\nconst int K=18;\nint F[K+1][MAXN];\nint n;\ninline int ask(int x,int y)\n{\n\tif(x==y)return n-sa[x]+1;//\u5c0f\u5fc3\uff0c\u8fd9\u91cc\u7684 x\uff0cy \u5df2\u7ecf\u53d8\u6210 rk[x] \u4e86\n\tint k=31-__builtin_clz(y-x);\n\treturn min(F[k][x+1],F[k][y-(1<<k)+1]);\n}\ninline void solve()\n{\n\tint n1,n2;\n\tcin>>n1>>n2;\n\tint x;\n\tvector<pii>ve;\n\tfor(int i=1;i<=n1;i++)cin>>x,ve.eb(rk[x],1);\n\tfor(int i=1;i<=n2;i++)cin>>x,ve.eb(rk[x],2);\n\tsort(all(ve));\n\tvector<pii>h;\n\tfor(int i=1;i<sz(ve);i++)\n\t{\n\t\th.eb(ask(ve[i-1].X,ve[i].X),i);\n\t}\n\tsort(all(h),greater<>());\n\tvi F(sz(ve));iota(all(F),0);\n\tfunction<int(int)>getf=[&](int x){return F[x]==x?x:F[x]=getf(F[x]);};\n\tvector<ll>s1(sz(ve)),s2(sz(ve));\n\tfor(int i=0;i<sz(ve);i++)\n\t{\n\t\tif(ve[i].Y==1)s1[i]++;\n\t\telse s2[i]++;\n\t}\n\tll ans=0;\n\tfor(int i=0,j;i<sz(h);i=j)\n\t{\n\t\tj=i;\n\t\tauto merge=[&](int x,int y)\n\t\t{\n\t\t\tx=getf(x),y=getf(y);\n\t\t\tif(x==y)return;\n\t\t\tans+=s1[x]*s2[y]*h[i].X;\n\t\t\tans+=s2[x]*s1[y]*h[i].X;\n\t\t\tF[x]=y;\n\t\t\ts1[y]+=s1[x],s2[y]+=s2[x];\n\t\t};\n\t\twhile(j<sz(h)&&h[j].X==h[i].X)//\u8fd9\u91cc\u597d\u50cf\u6ca1\u5fc5\u8981\u540c\u65f6\u52a0\u5165\u957f\u5ea6\u76f8\u540c\u7684\n\t\t{\n\t\t\tmerge(h[j].Y-1,h[j].Y);\n\t\t\tj++;\n\t\t}\n\t}\n\tcout<<ans<<'\\n';\n}\nint main()\n{\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);cout<<fixed<<setprecision(10);\n\tint m;\n\tcin>>n>>m;\n\tcin>>(s+1);\n\tget_sa(n,'z'),get_hi(n);\n\t//for(int i=1;i<=n;i++)cerr<<hi[i]<<' ';cerr<<'\\n';\n\tfor(int i=1;i<=n;i++)F[0][i]=hi[i];\n\tfor(int i=1;i<=K;i++)\n\t\tfor(int j=1;j+(1<<i)-1<=n;j++)\n\t\t\tF[i][j]=min(F[i-1][j],F[i-1][j+(1<<(i-1))]);\n\twhile(m--)\n\t{\n\t\tsolve();\n\t}\n\treturn 0;\n} \n```\n\n",
        "postTime": 1676968272,
        "uid": 571229,
        "name": "__stick",
        "ccfLevel": 7,
        "title": "CF1073G Yet Another LCP Problem"
    },
    {
        "content": "\u9996\u5148\u5173\u4e8e\u5feb\u901f\u6c42 LCP \u7684\u95ee\u9898\uff0c\u4e00\u822c\u53ef\u4ee5\u8f6c\u5316\u5230\u53cd\u4e32\u7684\u540e\u7f00\u94fe\u63a5\u6811\u4e0a\uff08\u8fd9\u6837\u524d\u7f00\u5c31\u4f1a\u53d8\u6210\u540e\u7f00\uff0c\u65b9\u4fbf\u7edf\u8ba1\uff09\u3002\n\n\u7136\u540e\u540e\u7f00\u94fe\u63a5\u6811\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u8be5\u8282\u70b9\u5230\u7236\u8282\u70b9\u7684\u6709\u4e00\u4e9b\u5b50\u4e32\uff08\u72b6\u6001\uff09\u4f1a\u88ab\u538b\u7f29\uff0c\u6211\u4eec\u8fd9\u65f6\u5019\u8981\u7edf\u8ba1\u6811\u4e0a\u95ee\u9898\u5c31\u8981\u8003\u8651\u5230\u3002\n\n\u6211\u4eec\u6709\u4e00\u4e2a\u7ed3\u8bba:\n\n$$lcp(i,j)=dis(lca(i,j))$$\n\n\u6bcf\u4e2a\u8282\u70b9\u5230\u5176\u7236\u8282\u70b9\u7684\u6743\u503c\uff0c\u8981\u8bbe\u7f6e\u4e3a\u4ed6\u548c\u4ed6\u7684\u7236\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u7684\u4e32\u7684\u957f\u5ea6\u5dee\u3002\n\n\u6211\u5f88\u83dc\uff0c\u4e0d\u4f1a\u8bc1\u660e\uff0c\u4f46\u662f\u770b\u56fe\u611f\u89c9\u662f\u5bf9\u7684\u3002\n\n\u663e\u7136\uff0c\u89c2\u5bdf\u4e0b\u56fe\u53ef\u4ee5\u5f97\u5230\uff0c\u5f53\u7136\u5bf9\u4e8e\u6b63\u4e32\u8bf4\u6c42\u7684\u662f\u6700\u957f\u516c\u5171\u540e\u7f00\u3002\n\n\u56fe\u7247\u6765\u81eaOI-wiki\uff1a\n\n![](https://oi-wiki.org/string/images/SAM/SA_suffix_links.svg)\n\n\u5f88\u81ea\u7136\u7684\u5c31\u7801\u51fa\u6765\u540e\u7f00\u81ea\u52a8\u673a\u3002\n\n\u7136\u540e\u5c31\u662f\u6811\u4e0a\u7684\u7edf\u8ba1\u4e86\u3002\n\n\u6211\u4eec\u8981\u6c42\u4e00\u5bf9\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u6df1\u5ea6\uff0c\u5bf9\u4e8e\u5c0f\u6570\u636e\uff0c\u4e00\u822c\u4f1a\u66b4\u529b LCA \u3002\n\n\u4f46\u662f\u78b0\u5230\u5927\u6570\u636e\u90a3\u5c31\u672a\u5fc5\u4e86\u3002\n\n\u6211\u4eec\u51b7\u9759\u4e0b\u6765\u5206\u6790\uff0c\u9996\u5148\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u6bcf\u4e2a\u8282\u70b9\u5230\u5176\u7236\u8282\u70b9\u7684\u6743\u503c\uff0c\u8981\u8bbe\u7f6e\u4e3a\u4ed6\u548c\u4ed6\u7684\u7236\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u7684\u4e32\u7684\u957f\u5ea6\u5dee\u3002\n\n\u5982\u679c\u4e0d\u80fd\u7406\u89e3\u89c2\u5bdf\u4e0a\u9762 OI-wiki \u7684\u90a3\u5f20\u56fe\uff0c\u4e5f\u8bb8\u5c31\u53ef\u4ee5\u7406\u89e3\u3002\n\n\u4e8e\u662f\u8fd9\u65f6\u5019\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff0c\u7ed9\u4f60\u4e24\u7ec4\u8282\u70b9\uff0c\u70b9\u5e26\u6743\uff0c\u6c42 $\\sum dis(root,lca(u,v))$\n\n\u60ca\u559c\u7684\u662f\uff0c\u8fd9\u4e2a\u67ff\u5b50\u53ef\u4ee5\u7528 LCT \u6c42\u89e3\u3002\n\n\u5177\u4f53\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\n\n\u6211\u4eec\u5148\u5c06\u7b2c\u4e00\u7ec4\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9\u5411\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u52a0\u4e00\uff08\u4e2d\u95f4\u538b\u7f29\u7684\u8282\u70b9\u5c31\u4e58\u4e00\u4e0b\uff09\uff0c\u7136\u540e\u4ece\u7b2c\u4e8c\u7ec4\u51fa\u53d1\uff0c\u4f9d\u6b21\u7d2f\u52a0\u6bcf\u4e2a\u7ec8\u70b9\u5230\u6839\u8282\u70b9\u7684\u7b54\u6848\uff0c\u8fd9\u6837\uff0c\u4e24\u4e2a\u70b9\u4e00\u6765\u4e00\u53bb\uff0c\u6b63\u597d\u7b97\u6e05\u695a\u4e86 $dis(root,lca(u,v))$\u3002\n\n\u6709\u4eba\u5c31\u4f1a\u95ee\u4e86\uff0c\u8fd9\u6837\u4f1a\u7b97\u4e0a $dis(v,kca(u,v))$ \u5440\u3002\n\n\u663e\u7136\u7684\u662f $dis(v,kca(u,v))$ \u7684\u8def\u5f84\u4ea7\u751f\u7684\u8d21\u732e\u5c5e\u4e8e\u4e0e\u53e6\u4e00\u4e2a\u7b2c\u4e00\u7ec4\u8282\u70b9\u4ea7\u751f\u7684\u8d21\u732e\uff0c\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528 LCT \u7ef4\u62a4\u8282\u70b9\u503c\uff0c\u94fe\u548c\uff0c\u8282\u70b9\u539f\u6765\u7684\u6743\u503c\uff0c\u548c\u94fe\u539f\u6765\u7684\u6743\u503c\u5373\u53ef\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6109\u5feb\u7684\u4f7f\u7528 LCT \u7ef4\u62a4\u4e86\u3002\n\n\u4ee3\u7801\u592a\u4e11\u4e86\uff0c\u5c31\u4e0d\u5c55\u793a\u4e86\u3002\n",
        "postTime": 1668269369,
        "uid": 285617,
        "name": "\u9ed1\u5f71\u6d1e\u4eba",
        "ccfLevel": 5,
        "title": "CF1073G Yet Another LCP Problem \u9898\u89e3"
    },
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a[\u540e\u7f00\u81ea\u52a8\u673a\uff08SAM\uff09](https://oi-wiki.org/string/sam/)\u3001[\u865a\u6811](https://oi-wiki.org/graph/virtual-tree/)\n\n\u9996\u5148\u5bf9\u53cd\u4e32\u5efa\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u5bb9\u6613\u53d1\u73b0\u6b64\u65f6 fail \u6811\u4e0a\u4e24\u4e2a\u4ee3\u8868\u540e\u7f00\u7684\u8282\u70b9\u7684 LCA \u4e3a\u4ee3\u8868\u5176 LCP \u7684\u8282\u70b9\u3002\n\n\u4e8e\u662f\u539f\u5f0f\u53ef\u4ee5\u8f6c\u5316\u4e3a $\\displaystyle\\sum_{i \\in A} \\sum_{j \\in B} len_{lca(pos_i, pos_j)}$\uff0c\u5176\u4e2d $pos_i$ \u8868\u793a fail \u6811\u4e0a\u4ee3\u8868 $i \\sim n$ \u7684\u540e\u7f00\u7684\u8282\u70b9\uff0c$len_u$ \u8868\u793a fail \u6811\u4e0a $u$ \u70b9\u5bf9\u5e94\u7684\u7b49\u4ef7\u7c7b\u4e2d\u6700\u957f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5bf9\u6ee1\u8db3 $\\forall i \\in A \\operatorname{or} i \\in B$ \u7684 $pos_i$ \u5efa\u865a\u6811\u6c42\u89e3\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n + \\sum (x_i + y_i) \\log (x_i + y_i) + \\log n \\sum (x_i + y_i))$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <stack>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef struct {\n\tint nxt;\n\tint end;\n} Edge;\n\ntypedef struct Node_tag {\n\tint pos;\n\tint dfn;\n\tNode_tag(){}\n\tNode_tag(int pos_, int dfn_){\n\t\tpos = pos_;\n\t\tdfn = dfn_;\n\t}\n} Node;\n\nint lst = 1, id = 1, cnt1 = 0, cnt2 = 0;\nint len[400007], nxt[400007][27], fa[400007][27], pos[400007], head1[400007], depth[400007], in[400007], out[400007], a[200007], b[200007], head2[400007], size1[400007], size2[400007];\nchar s[200007];\nbool vis[400007], mark1[400007], mark2[400007];\nEdge edge1[400007], edge2[400007];\nNode c[400007];\nstack<int> stk;\n\nbool operator <(const Node a, const Node b){\n\treturn a.dfn < b.dfn;\n}\n\nbool operator ==(const Node a, const Node b){\n\treturn a.pos == b.pos;\n}\n\ninline int insert(int ch){\n\tint u = lst, v = lst = ++id;\n\tlen[v] = len[u] + 1;\n\twhile (u != 0 && nxt[u][ch] == 0){\n\t\tnxt[u][ch] = v;\n\t\tu = fa[u][0];\n\t}\n\tif (u == 0){\n\t\tfa[v][0] = 1;\n\t\treturn v;\n\t}\n\tint w = nxt[u][ch];\n\tif (len[w] == len[u] + 1){\n\t\tfa[v][0] = w;\n\t\treturn v;\n\t}\n\tint x = ++id;\n\tlen[x] = len[u] + 1;\n\tfa[x][0] = fa[w][0];\n\tfa[v][0] = fa[w][0] = x;\n\tfor (register int i = 1; i <= 26; i++){\n\t\tnxt[x][i] = nxt[w][i];\n\t}\n\twhile (nxt[u][ch] == w){\n\t\tnxt[u][ch] = x;\n\t\tu = fa[u][0];\n\t}\n\treturn v;\n}\n\ninline void add_edge1(int start, int end){\n\tcnt1++;\n\tedge1[cnt1].nxt = head1[start];\n\thead1[start] = cnt1;\n\tedge1[cnt1].end = end;\n}\n\nvoid dfs1(int u, int &id){\n\tint t;\n\tdepth[u] = depth[fa[u][0]] + 1;\n\tt = log2(depth[u]);\n\tin[u] = ++id;\n\tfor (register int i = 1; i <= t; i++){\n\t\tfa[u][i] = fa[fa[u][i - 1]][i - 1];\n\t}\n\tfor (register int i = head1[u]; i != 0; i = edge1[i].nxt){\n\t\tint x = edge1[i].end;\n\t\tif (x != fa[u][0]) dfs1(x, id);\n\t}\n\tout[u] = id;\n}\n\ninline int lca(int u, int v){\n\tif (depth[u] < depth[v]) swap(u, v);\n\twhile (depth[u] > depth[v]) u = fa[u][(int)log2(depth[u] - depth[v])];\n\tif (u == v) return u;\n\tfor (register int i = log2(depth[u]); i >= 0; i--){\n\t\tif (fa[u][i] != fa[v][i]){\n\t\t\tu = fa[u][i];\n\t\t\tv = fa[v][i];\n\t\t}\n\t}\n\treturn fa[u][0];\n}\n\ninline bool check(int u, int v){\n\treturn in[u] <= in[v] && in[v] <= out[u];\n}\n\ninline void add_edge2(int start, int end){\n\tcnt2++;\n\tedge2[cnt2].nxt = head2[start];\n\thead2[start] = cnt2;\n\tedge2[cnt2].end = end;\n}\n\nll dfs2(int u){\n\tll ans;\n\tif (mark1[u]){\n\t\tsize1[u] = 1;\n\t} else {\n\t\tsize1[u] = 0;\n\t}\n\tif (mark2[u]){\n\t\tsize2[u] = 1;\n\t} else {\n\t\tsize2[u] = 0;\n\t}\n\tif (mark1[u] && mark2[u]){\n\t\tans = len[u];\n\t} else {\n\t\tans = 0;\n\t}\n\tfor (register int i = head2[u]; i != 0; i = edge2[i].nxt){\n\t\tint x = edge2[i].end;\n\t\tans += dfs2(x);\n\t\tans += len[u] * ((ll)size1[u] * size2[x] + (ll)size1[x] * size2[u]);\n\t\tsize1[u] += size1[x];\n\t\tsize2[u] += size2[x];\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint n, q, dfn_id = 0;\n\tscanf(\"%d %d\", &n, &q);\n\tscanf(\"%s\", &s[1]);\n\tfor (register int i = n; i >= 1; i--){\n\t\tpos[i] = insert(s[i] - 'a' + 1);\n\t}\n\tfor (register int i = 1; i <= id; i++){\n\t\tif (fa[i][0] != 0) add_edge1(fa[i][0], i);\n\t}\n\tdfs1(1, dfn_id);\n\tfor (register int i = 1; i <= q; i++){\n\t\tint x, y, z, cnt;\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tz = x + y;\n\t\tfor (register int j = 1; j <= x; j++){\n\t\t\tscanf(\"%d\", &a[j]);\n\t\t\ta[j] = pos[a[j]];\n\t\t\tc[j].pos = a[j];\n\t\t\tc[j].dfn = in[a[j]];\n\t\t\tvis[a[j]] = mark1[a[j]] = true;\n\t\t}\n\t\tfor (register int j = 1; j <= y; j++){\n\t\t\tint j_ = j + x;\n\t\t\tscanf(\"%d\", &b[j]);\n\t\t\tb[j] = pos[b[j]];\n\t\t\tc[j_].pos = b[j];\n\t\t\tc[j_].dfn = in[b[j]];\n\t\t\tvis[b[j]] = mark2[b[j]] = true;\n\t\t}\n\t\tsort(c + 1, c + z + 1);\n\t\tz = unique(c + 1, c + z + 1) - c - 1;\n\t\tcnt = z;\n\t\tfor (register int j = 1; j < z; j++){\n\t\t\tint cur_lca = lca(c[j].pos, c[j + 1].pos);\n\t\t\tif (!vis[cur_lca]){\n\t\t\t\tvis[cur_lca] = true;\n\t\t\t\tc[++cnt] = Node(cur_lca, in[cur_lca]);\n\t\t\t}\n\t\t}\n\t\tif (!vis[1]){\n\t\t\tvis[1] = true;\n\t\t\tc[++cnt] = Node(1, 1);\n\t\t}\n\t\tsort(c + 1, c + cnt + 1);\n\t\twhile (!stk.empty()) stk.pop();\n\t\tfor (register int j = 1; j <= cnt; j++){\n\t\t\twhile (!stk.empty() && !check(stk.top(), c[j].pos)) stk.pop();\n\t\t\tif (!stk.empty()) add_edge2(stk.top(), c[j].pos);\n\t\t\tstk.push(c[j].pos);\n\t\t}\n\t\tcout << dfs2(1) << endl;\n\t\tcnt2 = 0;\n\t\tfor (register int j = 1; j <= cnt; j++){\n\t\t\thead2[c[j].pos] = 0;\n\t\t\tvis[c[j].pos] = mark1[c[j].pos] = mark2[c[j].pos] = false;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1646726289,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u540e\u7f00 lcp \u8fd9\u79cd\u95ee\u9898\uff0c\u5148\u65e0\u8111\u5bf9\u53cd\u4e32\u5efa\u4e2a SAM\uff0c\u7136\u540e lcp \u5c31\u53d8\u6210\u540e\u7f00\u6811\u4e0a lca \u7684 len \u4e86\u3002\n\n\u8003\u8651\u5982\u679c\u53ea\u6709\u4e00\u6b21\u8be2\u95ee\u600e\u4e48\u505a\uff1a\u5bf9\u4e24\u4e2a\u96c6\u5408\u5185\u7684\u540e\u7f00\u6240\u5728\u7ed3\u70b9\u6253\u4e0d\u540c\u7684\u6807\u8bb0\uff0c\u76f4\u63a5 dfs \u4e00\u904d\u540e\u7f00\u6811\uff0c\u7ef4\u62a4\u5b50\u6811\u5185\u4e24\u79cd\u6807\u8bb0\u7684\u6570\u91cf\uff0c\u76f4\u63a5\u76f8\u4e58\u518d\u4e58\u4e0a $len_k-len_{link_k}$ \u5373\u53ef\u3002\uff08\u8fd9\u91cc\u4e0d\u76f4\u63a5\u4e58\u4e0a lcp \u7684\u957f\u5ea6 $len_k$ \u662f\u56e0\u4e3a\u8fd9\u4e9b\u8d21\u732e\u4f1a\u5728\u5f53\u524d\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u90fd\u88ab\u7b97\u4e00\u6b21\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u7b97\u91cd\u3002\uff09\n\n\u4f46\u662f\u73b0\u5728\u6709\u591a\u6b21\u8be2\u95ee\uff0c\u4e0d\u80fd\u6bcf\u6b21\u90fd dfs\uff0c\u4f46\u662f\u6240\u6709\u8be2\u95ee\u7684\u96c6\u5408\u603b\u5927\u5c0f\u662f\u6709\u9650\u5236\u7684\u3002\n\n\u4fd7\u8bdd\u8bf4\uff1a\u201c\u89c1 $\\sum$\uff0c\u60f3\u865a\u6811\u3002\u201d\n\n\u4e8e\u662f\u76f4\u63a5\u6bcf\u6b21\u4ece\u540e\u7f00\u6811\u4e0a\u62c9\u4e00\u9897\u865a\u6811\u51fa\u6765\u8dd1 dfs\uff0c\u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<algorithm>\nusing namespace std;\nstruct edge\n{\n    int nxt,to;\n}e[200001<<1];\nint n,m,tot,h[200001<<1],cnt,lst,link[200001<<1],ch[200001<<1][26],len[200001<<1],s[200001<<1][2],fa[200001<<1][21],dep[200001<<1],dfn[200001<<1],id,num[200001],top,t[200001],q[200001<<1];\nlong long ans;\nstring str;\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    while(c<'0'||c>'9')\n        c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<1)+(x<<3)+(c^48);\n        c=getchar();\n    }\n    return x;\n}\ninline bool cmp(int x,int y)\n{\n    return dfn[x]<dfn[y];\n}\ninline void add(int x,int y)\n{\n    e[++tot].nxt=h[x];\n    h[x]=tot;\n    e[tot].to=y;\n}\ninline void build(int c)\n{\n    int cur=++cnt,p=lst;\n    len[cur]=len[lst]+1;\n    lst=cur;\n    for(;~p;p=link[p])\n        if(!ch[p][c])\n            ch[p][c]=cur;\n        else\n            break;\n    if(p==-1)\n        return;\n    int q=ch[p][c];\n    if(len[p]+1==len[q])\n    {\n        link[cur]=q;\n        return;\n    }\n    int clone=++cnt;\n    link[clone]=link[q];\n    len[clone]=len[p]+1;\n    for(int i=0;i<26;++i)\n        ch[clone][i]=ch[q][i];\n    link[cur]=link[q]=clone;\n    for(;~p;p=link[p])\n        if(ch[p][c]==q)\n            ch[p][c]=clone;\n        else\n            break;\n}\ninline void dfs1(int k,int f,int deep)\n{\n    dep[k]=deep;\n    fa[k][0]=f;\n    dfn[k]=++id;\n    for(int i=1;i<=20;++i)\n        fa[k][i]=fa[fa[k][i-1]][i-1];\n    for(int i=h[k];i;i=e[i].nxt)\n        dfs1(e[i].to,k,deep+1);\n}\ninline int LCA(int x,int y)\n{\n    if(dep[x]<dep[y])\n        x^=y^=x^=y;\n    for(int d=dep[x]-dep[y],i=0;1<<i<=d;++i)\n        if(d&(1<<i))\n            x=fa[x][i];\n    if(x==y)\n        return x;\n    for(int i=20;~i;--i)\n        if(fa[x][i]^fa[y][i])\n        {\n            x=fa[x][i];\n            y=fa[y][i];\n        }\n    return fa[x][0];\n}\ninline void dfs2(int k,int f)\n{\n    for(int i=h[k];i;i=e[i].nxt)\n    {\n        dfs2(e[i].to,k);\n        s[k][0]+=s[e[i].to][0];\n        s[k][1]+=s[e[i].to][1];\n    }\n    if(k)\n        ans+=1ll*s[k][0]*s[k][1]*(len[k]-len[f]);\n}\ninline void dfs3(int k)\n{\n    for(int i=h[k];i;i=e[i].nxt)\n        dfs3(e[i].to);\n    h[k]=s[k][0]=s[k][1]=0;\n}\nint main()\n{\n    n=read(),m=read();\n    cin>>str;\n    link[0]=-1;\n    for(int i=n-1;~i;--i)\n    {\n        build(str[i]-'a');\n        num[i+1]=lst;\n    }\n    for(int i=1;i<=cnt;++i)\n    {\n        add(link[i],i);\n        //cout<<link[i]<<\" \"<<i<<'\\n';\n    }\n    dfs1(0,-1,1);\n    dfs3(0);\n    tot=0;\n    while(m--)\n    {\n        int p1=read(),p2=read();\n        t[top=1]=0;\n        for(int i=1;i<=p1;++i)\n            ++s[q[i]=num[read()]][0];\n        for(int i=1;i<=p2;++i)\n            ++s[q[i+p1]=num[read()]][1];\n        sort(q+1,q+p1+p2+1,cmp);\n        q[0]=0;\n        for(int i=1;i<=p1+p2;++i)\n        {\n            if(q[i]==q[i-1])\n                continue;\n            int lca=LCA(t[top],q[i]);\n            if(lca!=t[top])\n            {\n                while(dfn[lca]<dfn[t[top-1]])\n                {\n                    add(t[top-1],t[top]);\n                    --top;\n                }\n                if(lca!=t[top-1])\n                {\n                    add(lca,t[top]);\n                    t[top]=lca;\n                }\n                else\n                    add(lca,t[top--]);\n            }\n            t[++top]=q[i];\n        }\n        while(top>1)\n        {\n            add(t[top-1],t[top]);\n            --top;\n        }\n        ans=0;\n        dfs2(0,0);\n        cout<<ans<<'\\n';\n        dfs3(0);\n        tot=0;\n    }\n    return 0;\n}\n```",
        "postTime": 1643866704,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "CF1073G Yet Another LCP Problem"
    },
    {
        "content": "\u6709\u7ecf\u9a8c\u7684\u9009\u624b\u5e94\u8be5\u53ef\u4ee5\u79d2\u6740\u8fd9\u4e2a\u5957\u8def\u9898\u3002\n\n\u9996\u5148\uff0cLCP \u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u540e\u7f00\u6811\u4e0a\u7684 lca \u95ee\u9898\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5efa\u865a\u6811\uff0c\u679a\u4e3e lca \uff0c\u5f00\u4e00\u4e2a\u6876\uff0c\u6279\u91cf\u5904\u7406\u4e86\u3002\n\n\u6700\u4f18\u590d\u6742\u5ea6$O(n+\\sum{(k_i+q_i)})$\u3002\u5f53\u7136\u8fd9\u4e2a\u505a\u6cd5\u6bd4\u8f83\u6ca1\u610f\u601d\uff0c\u6211\u4eec\u60f3\u60f3\u540e\u7f00\u6570\u7ec4\u600e\u4e48\u505a\u3002\n\n\u9996\u5148\uff0cLCP \u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u533a\u95f4\u6700\u5c0f\u503c\u95ee\u9898\uff08rmq\uff09\uff0c\u7136\u540e\u95ee\u9898\u76f8\u5f53\u4e8e\u7ed9\u4f60\u4e24\u4e2a\u96c6\u5408$A,B$\uff0c\u8be2\u95ee\u4e24\u4e24\u4e4b\u95f4\u6700\u5c0f\u503c\u4e4b\u548c\u3002\n\n\u57fa\u7840\u597d\u7684\u9009\u624b\u53ef\u4ee5\u5f88\u5feb\u7684\u770b\u51fa\u89e3\u6cd5\u3002\u5148\u7528\u4e24\u4e2a\u96c6\u5408\u7ed9\u51fa\u7684\u503c\u6765\u628a\u6570\u7ec4\u5206\u6bb5\uff0c\u4e00\u4e2a\u6bb5\u5bf9\u5e94\u4e00\u4e2a\u533a\u95f4\uff0c\u663e\u7136\u6700\u5c0f\u503c\u90fd\u662f\u62ff\u8fd9\u4e9b\u6574\u6bb5\u62fc\u8d77\u6765\u7684\u3002\n\n\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u6bb5\u7684\u8d21\u732e\u3002\u7528\u5355\u8c03\u6808\u8ba1\u7b97\u51fa\u4e00\u4e2a\u6bb5\u4f5c\u4e3a\u6700\u5c0f\u503c\u8d21\u732e\u5230\u7684\u7aef\u70b9\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u524d\u7f00\u548c\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u843d\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u5c31\u597d\u4e86\u3002\n\n\u6700\u4f18\u590d\u6742\u5ea6$O(n+\\sum{(k_i+q_i)})$\u3002\n\n\u4ee3\u7801\u597d\u5199\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d34\u4e86\u3002",
        "postTime": 1588164367,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    },
    {
        "content": "\u4e00\u79cd\u7565\u5fae\u4e0d\u540c\u7684~~\u4e11\u964b\u7684~~\u505a\u6cd5\u3002\n\n\u9996\u5148\u628a\u6bcf\u6b21\u67e5\u8be2\u8f6c\u5316\u4e3a\u5728\u540e\u7f00\u6570\u7ec4\u4e2d\u7684$\\textrm{height}$\u6570\u7ec4\u4e0a\uff0c\u7ed9\u5b9a\u4e24\u4e2a\u7aef\u70b9\u96c6\u5408$A,B$\uff0c\u6c42\u6240\u6709\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u6765\u81ea\u4e24\u4e2a\u96c6\u5408\u7684\u5de6\u5f00\u53f3\u95ed\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4e4b\u548c\u3002\n\n**\u6211\u4eec\u8003\u8651\u7528\u5206\u6cbb\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002** \u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u628a\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u7aef\u70b9\uff08\u6765\u81ea$A$\u6216$B$\uff09\u7ec4\u6210\u7684\u5e8f\u5217\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u9884\u5904\u7406\u6bcf\u4e2a\u7aef\u70b9\u5728$A$\u8fd8\u662f\u5728$B$\u51fa\u73b0\uff0c\u6216\u662f\u90fd\u51fa\u73b0\u8fc7\u3002\u8bbe\u6b64\u5e8f\u5217\u4e3a$Q$\uff0c\u5927\u5c0f\u4e3a$c$\u3002\u7ea6\u5b9a\u7b2c$i$\u4e2a\u7aef\u70b9\u4e3a$Q_i$\u3002\n\n\u63a5\u4e0b\u6765\u4ee4$s(l,r)$\u4e3a\u8003\u8651$Q$\u4e2d\u7f16\u53f7\u5728$[l,r]$\u4e0a\u7684\u6240\u6709\u7684\u7aef\u70b9\uff0c\u7ec4\u6210\u7684\u6240\u6709\u5de6\u5f00\u53f3\u95ed\u533a\u95f4\u6700\u5c0f\u503c\u4e4b\u548c\uff0c$s(1,c)$\u5373\u4e3a\u6240\u6c42\u7b54\u6848\u3002\n\n\u8bbe$mid=\\lfloor \\frac{l+r}{2}\\rfloor$\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u5b8c\u4e86$s(l,mid)$\u4e0e$s(mid+1,r)$\uff0c\u90a3\u4e48\u73b0\u5728\u8fd8\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u7aef\u70b9\u7684\u7f16\u53f7\u5206\u522b\u5728$[l,mid]$\u4e0e$[mid+1,r]$\u4e2d\u7684\u533a\u95f4\u5bf9\u7b54\u6848\u9020\u6210\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e$s(l,r)$\uff0c\u5b9a\u4e49$p_x(x\\in [l,r])$\uff1a\n\n- \u82e5$x\\in [l,mid]$\uff0c$p_x=\\min\\limits_{i=Q_x+1}^{Q_{mid}} \\textrm{height}_i$\n\n- \u82e5$x\\in [mid+1,r]$\uff0c$p_x=\\min\\limits_{i=Q_{mid}+1}^{Q_x} \\textrm{height}_i$\n\n\u7279\u522b\u5730\uff0c\u5b9a\u4e49$\\min\\limits_{i=Q_{mid}+1}^{Q_{mid}} \\textrm{height}_i = +\\infty$\u3002\n\n\u5982\u679c\u6211\u4eec\u56fa\u5b9a\u4e86\u5de6\u7aef\u70b9\u7f16\u53f7$x\\in [l,mid]$\uff0c\u90a3\u4e48\u5728\u53f3\u7aef\u70b9$y$\u4efb\u610f\u53d6\u503c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- $p_y<p_x$\uff0c\u5219\u8be5\u533a\u95f4\u7684\u8d21\u732e\u4e3a$p_y$;\n\n- $p_x\\le p_y$\uff0c\u5219\u8be5\u533a\u95f4\u7684\u8d21\u732e\u4e3a$p_x$\u3002\n\n\u8003\u8651\u5230\u5bf9\u4e8e$y>mid$\uff0c$p_y$\u5173\u4e8e$y$\u662f\u9012\u589e\u7684\uff0c\u8fd9\u5c31\u8bf4\u660e\u4e24\u79cd\u8d21\u732e\u5e94\u8be5\u6709\u4e00\u4e2a\u5206\u754c$t$\u9694\u5f00\uff1a\u5f53$y\\le t$\u65f6\u8d21\u732e\u4e3a$p_x$\uff0c\u5f53$y>t$\u65f6\u8d21\u732e\u4e3a$p_y$\u3002\n\n\u5982\u679c$Q_x$\u5728$A$\u4e2d\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u503c\u4e3a$p_x$\u7684\u8d21\u732e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7edf\u8ba1$[mid+1,t]$\u4e0a\u5728$B$\u4e2d\u51fa\u73b0\u8fc7\u7684\u7aef\u70b9\u4e2a\u6570\u6765\u8ba1\u7b97\uff0c\u800c\u503c\u4e3a$p_y$\u7684\u8d21\u732e\u53ef\u4ee5\u901a\u8fc7\u7edf\u8ba1$[t+1,r]$\u4e0a\u5728$B$\u4e2d\u51fa\u73b0\u8fc7\u7684\u7aef\u70b9\u4e4b\u548c\u6765\u8ba1\u7b97\uff1a\u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5$O(r-l+1)$\u5904\u7406\u7684\u3002\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u5047\u8bbe\u6211\u4eec\u4ece$mid$\u5230$l$\u6765\u679a\u4e3e$x$\uff0c\u90a3\u4e48$p_x$\u662f\u9010\u6e10\u51cf\u5c0f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u7528$\\textrm{two-pointer}$\u6280\u672f\u6765\u7ef4\u62a4\u5206\u754c\u7ebf$t$\u7684\u53d6\u503c\uff0c\u590d\u6742\u5ea6\u662f$O(r-l+1)$\u7684\u3002\n\n\u8bbe$T(n)$\u4e3a\u5bf9\u4e8e\u957f\u5ea6\u4e3a$n$\u7684\u533a\u95f4$[l,r]$\u8ba1\u7b97$s(l,r)$\u7684\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u6709\uff1a\n\n$$T\\left(n\\right)=2T\\left(\\frac{n}{2}\\right)+O(n)$$\n\n\u5206\u6790\u6613\u5f97\u8ba1\u7b97$s(1,c)$\u7684\u590d\u6742\u5ea6\u4e3a$O(c\\log c)$\u3002\u7531\u4e8e\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c$c\\le |A|+|B|$\uff0c\u5219$\\sum c\\le \\sum |A|+|B|\\le 4\\times 10^5$\uff0c\u4ece\u800c\u603b\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\n\n**\u867d\u7136\u5206\u6cbb\u7edf\u8ba1\u7b54\u6848\u7684\u505a\u6cd5\u5728\u8fd9\u9053\u9898\u4e2d\u53c8\u96be\u5199\u53c8\u6162\uff0c\u4f46\u662f\u5b83\u542f\u53d1\u6211\u4eec\u4e0d\u8981\u5c0f\u89d1\u5206\u6cbb\u8fd9\u4e00\u521d\u5b66\u65f6\u5c31\u63a5\u89e6\u7684\u601d\u60f3\uff0c\u5b83\u6709\u53ef\u80fd\u5728\u8bb8\u591a\u5730\u65b9\u5927\u653e\u5f02\u5f69\u3002**\n\n\u5b9e\u73b0\u7ec6\u8282\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <map>\n#define inf (1<<30)\n#define pii pair<int,int>\n#define mp make_pair\n#define fi first\n#define se second\n\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 200005;\ninline int readint()\n{\n\tint res = 0, f = 1;\n\tchar c = 0;\n\twhile(!isdigit(c))\n\t{\n\t\tc = getchar();\n\t\tif(c=='-')\n\t\t\tf = -1;\n\t}\n\twhile(isdigit(c))\n\t\tres = res*10+c-'0', c = getchar();\n\treturn res*f;\n}\nstruct Node\n{\n    int fi,se,idx;\n}pa[MAXN],pb[MAXN];\nint n,m,a,b,x[MAXN],y[MAXN];\nchar str[MAXN];\nint pre[MAXN],sa[MAXN],rk[MAXN],h[MAXN],height[MAXN];\ninline void buildSA()\n{\n\tmemset(pre,0,sizeof(pre));\n    for(int i = 1; i<=n; i++)\n\t    pre[str[i]]++;\n\tfor(int i = 1; i<=255; i++)\n\t    pre[i] += pre[i-1];\n\tfor(int i = 1; i<=n; i++)\n\t    sa[pre[str[i]]--] = i;\n\tint tot = 0;\n\tfor(int i = 1; i<=n; i++)\n\t{\n        if(i>1&&str[sa[i]]==str[sa[i-1]])\n            rk[sa[i]] = tot;\n        else\n            rk[sa[i]] = ++tot;\n\t}\n\tfor(int j = 1; j<=n; j <<= 1)\n\t{\n        memset(pre,0,sizeof(pre));\n        for(int i = 1; i<=n; i++)\n            pa[i].fi = rk[i], pa[i].se = i+j>n?0:rk[i+j], pa[i].idx = i;\n\t\tfor(int i = 1; i<=n; i++)\n\t\t    pre[pa[i].se]++;\n\t\tfor(int i = 1; i<=n; i++)\n\t\t    pre[i] += pre[i-1];\n\t\ttot = 0;\n\t\tfor(int i = 1; i<=n; i++)\n\t\t    pb[pre[pa[i].se]--] = pa[i];\n\t\tmemset(pre,0,sizeof(pre));\n\t\tfor(int i = 1; i<=n; i++)\n\t\t    pre[pb[i].fi]++;\n\t\tfor(int i = 1; i<=n; i++)\n\t\t    pre[i] += pre[i-1];\n\t\tfor(int i = n; i>=1; i--)\n\t\t    pa[pre[pb[i].fi]--] = pb[i];\n\t\ttot = 0;\n\t\tfor(int i = 1; i<=n; i++)\n\t\t{\n            if(i>1&&pa[i].fi==pa[i-1].fi&&pa[i].se==pa[i-1].se)\n                rk[pa[i].idx] = tot;\n            else\n                rk[pa[i].idx] = ++tot;\n\t\t}\n\t}\n\tfor(int i = 1; i<=n; i++)\n\t    sa[rk[i]] = i;\n}\ninline void getHeight()\n{\n\tint tmp,pos;\n\tfor(int i = 1; i<=n; i++)\n\t{\n        if(rk[i]==1)\n            continue;\n        tmp = max(h[i-1]-1,0);\n        pos = sa[rk[i]-1];\n        while(tmp+pos<=n&&tmp+i<=n&&str[tmp+pos]==str[tmp+i])\n            tmp++;\n        h[i] = tmp;\n\t}\n\tfor(int i = 1; i<=n; i++)\n\t    height[rk[i]] = h[i];\n}\nint st[MAXN][19],bin[MAXN];\ninline void buildST()\n{\n    for(int i = 2; i<=n; i++)\n\t    bin[i] = bin[i>>1]+1;\n\tfor(int i = 1; i<=n; i++)\n\t    st[i][0] = height[i];\n\tfor(int j = 1; (1<<j)<=n; j++)\n\t    for(int i = 1; i+(1<<j)-1<=n; i++)\n            st[i][j] = min(st[i][j-1],st[i+(1<<(j-1))][j-1]);\n}\ninline int query(int l, int r)\n{\n\tif(r<l)\n\t    return inf;\n\tint k = bin[r-l+1];\n\treturn min(st[l][k],st[r-(1<<k)+1][k]);\n}\nmap<int,int> mq;\nmap<int,int>::iterator it;\npii q[MAXN];\nint now[MAXN];\nll tpre[MAXN][2],cpre[MAXN][2];\nint cnt = 0;\ninline ll solve(int l, int r)\n{\n\tif(l==r)\n        return q[l].se==3?n-sa[q[l].fi]+1:0;\n    int mid = (l+r)>>1;\n    ll res = solve(l,mid)+solve(mid+1,r);\n    for(int i = l; i<=mid; i++)\n        now[i] = query(q[i].fi+1,q[mid].fi);\n\tfor(int i = mid+1; i<=r; i++)\n        now[i] = query(q[mid].fi+1,q[i].fi);\n    tpre[mid][0] = tpre[mid][1] = 0;\n    cpre[mid][0] = cpre[mid][1] = 0;\n    for(int i = mid+1; i<=r; i++)\n    {\n        tpre[i][0] = tpre[i-1][0]+(q[i].se!=2?now[i]:0);\n        tpre[i][1] = tpre[i-1][1]+(q[i].se!=1?now[i]:0);\n        cpre[i][0] = cpre[i-1][0]+(q[i].se!=2);\n        cpre[i][1] = cpre[i-1][1]+(q[i].se!=1);\n\t}\n\tint pos1 = mid+1, pos2 = mid+1;\n\tfor(int i = mid; i>=l; i--)\n\t{\n        if(q[i].se!=2)\n        {\n            while(pos1<=r&&!(q[pos1].se!=1&&now[pos1]<now[i]))\n                pos1++;\n            res += tpre[r][1]-tpre[pos1-1][1]+cpre[pos1-1][1]*now[i];\n\t\t}\n\t\tif(q[i].se!=1)\n\t\t{\n\t\t\twhile(pos2<r&&!(q[pos2].se!=2&&now[pos2]<now[i]))\n\t\t\t    pos2++;\n\t\t\tres += tpre[r][0]-tpre[pos2-1][0]+cpre[pos2-1][0]*now[i];\n\t\t}\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tn = readint(), m = readint();\n\tscanf(\"%s\",str+1);\n\tbuildSA(), getHeight(), buildST();\n\twhile(m--)\n\t{\n        a = readint(), b = readint();\n\t\tmq.clear();\n        for(int i = 1; i<=a; i++)\n            mq[rk[readint()]] += 1; \n\t\tfor(int i = 1; i<=b; i++)\n        \tmq[rk[readint()]] += 2;\n        cnt = 0;\n        for(it = mq.begin(); it!=mq.end(); it++)\n            q[++cnt] = mp(it->fi,it->se);\n        sort(q+1,q+cnt+1);\n\t\tprintf(\"%lld\\n\",solve(1,cnt));\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1585054402,
        "uid": 31098,
        "name": "Caro23333",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1073G \u3010Yet Another LCP Problem\u3011"
    }
]