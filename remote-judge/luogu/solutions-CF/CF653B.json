[
    {
        "content": "# Solution\n\n\u6bd4\u8f83\u663e\u800c\u6613\u89c1\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u770b\u6210\u4e00\u4e2a\u7ed3\u70b9\uff0c\u7136\u540e\u6839\u636e\u9996\u5b57\u6bcd\u5411\u5176\u5b83\u65b0\u7684\u5b57\u7b26\u4e32\u4ee3\u8868\u7684\u7ed3\u70b9\u8fde\u8fb9\uff0c\u7136\u540e\u6839\u636e $n$ \u957f\u5ea6\u7684\u9650\u5236\u5f04\u51fa\u6765\u4e00\u4e2a $DAG$ \u3002\n\n\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u5e95\u5c42\u7684\u70b9\u7684\u6570\u91cf\u5c31\u53ef\u4ee5\u4e86\uff0c\u6ce8\u610f\u4e3a\u4ec0\u4e48\u662f\u7edf\u8ba1\u6570\u91cf\u800c\u4e0d\u662f\u5728\u6bcf\u6b21\u6709\u51fa\u8fb9\u7684\u65f6\u5019\u76f4\u63a5 $+1$ \uff1a\n\n\u56e0\u4e3a\u67d0\u4e00\u4e2a\u72b6\u6001\u53ef\u80fd\u7531\u4e24\u79cd\u4e0d\u540c\u7684\u72b6\u6001\u6765\u5230\u8fbe\uff0c\u4f46\u662f\u6700\u540e\u7b97\u4e5f\u53ea\u80fd\u7b97\u4e00\u79cd\uff0c\u5982\u679c\u76f4\u63a5\u6839\u636e\u8fb9\u6570\u6765\u52a0 $1$ \u7684\u8bdd\u4f1a\u7b97\u91cd\u3002\n\n# Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n    x=0;char ch=getchar();bool f=false;\n    while(!isdigit(ch)){if(ch=='-'){f=true;}ch=getchar();}\n    while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    x=f?-x:x;\n    return ;\n}\ntemplate <typename T>\ninline void write(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10^48);\n    return ;\n}\ntemplate <typename T>\ninline void print(T x){write(x),putchar(' ');}\n#define ll long long\n#define ull unsigned long long\n#define inc(x,y) (x+y>=MOD?x+y-MOD:x+y)\n#define dec(x,y) (x-y<0?x-y+MOD:x-y)\n#define min(x,y) (x<y?x:y)\n#define max(x,y) (x>y?x:y)\nconst int N=1e5+5,M=1e6+5,MOD=1e9+7;\nint n,m,k;\nint head[N],nex[M],to[M],idx,cnt=6,tot[N];\nll ans;\nstring op,op1;\nunordered_map<string,int> q,q1;\nunordered_map<int,string> iq;\ninline void add(int u,int v){\n    nex[++idx]=head[u];\n    to[idx]=v;\n    head[u]=idx;\n    return ;\n}\nvoid dfs(string x,int len){\n    if(len==n+1) return ;\n    if(!q1.count(x)&&len==n){q1[x]=++cnt;ans++;}\n    int now=x[0]-'a'+1;\n    for(int i=head[now];i;i=nex[i]){\n        int y=to[i];\n        string yy=iq[y];\n        x.erase(0,1);\n        x=yy+x;\n        dfs(x,len+1);\n    }\n    return ;\n}\nint main(){\n    read(n),read(k);\n    for(int i=1;i<=k;i++){\n        cin>>op>>op1;\n        if(!q.count(op)) q[op]=++cnt,iq[cnt]=op;\n        add(op1[0]-'a'+1,q[op]);\n    }\n    dfs(\"a\",1);\n    write(ans);\n    return 0;\n}\n```",
        "postTime": 1613289109,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF653B \u3010Bear and Compressing\u3011"
    }
]