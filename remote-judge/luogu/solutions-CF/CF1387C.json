[
    {
        "content": "\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u5b9a\u4e49\u4e00\u4e2a\u4e32\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53\u5b83\u4e3a $01$ \u4e32\u4e14\u4e0d\u80fd\u88ab\u68c0\u6d4b\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u6700\u5c0f\u5408\u6cd5\u4e32\u3002\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u6709\u591a\u4e2a\u4e0d\u80fd\u53d6\u5230\u7684\u4e32\uff0c\u5bb9\u6613\u60f3\u5230\u5229\u7528 AC \u81ea\u52a8\u673a\u5efa\u51fa\u5931\u914d\u5173\u7cfb\u3002\u5982\u679c\u6211\u4eec\u76f4\u63a5\u5c55\u5f00\u7684\u8bdd\u4f1a\u4f7f\u72b6\u6001\u6570\u8fc7\u591a\uff0c\u4e14\u6709\u65f6\u4f1a\u5f62\u6210\u591a\u4e2a\u73af\uff0c\u65e0\u6cd5\u5b8c\u5168\u5c55\u5f00\u6240\u6709\u7684\u60c5\u51b5\u3002\u4e0d\u59a8\u5b9a\u4e49 $f_{i,j,k}$ \u8868\u793a AC \u81ea\u52a8\u673a\u4e0a $i$ \u8282\u70b9\u63a5\u4e0a $j$ \u8fd9\u4e2a\u6570\u5b57\uff0c\u5728\u5c55\u5f00\u540e\u5408\u6cd5\u4e14\u5230\u8fbe $k$ \u8282\u70b9\u6240\u9700\u8981\u7684 $j$ \u7684\u6700\u5c0f\u5c55\u5f00\u957f\u5ea6\u3002\u82e5\u6c42\u5f97 $f$ \u6570\u7ec4\uff0c\u95ee\u9898\u81ea\u7136\u8fce\u5203\u800c\u89e3\u3002\n\n\u6c42\u89e3 $f$\uff0c\u8003\u8651 $f_{i,j,k}$ \u5982\u4f55\u8f6c\u79fb\uff0c\u5176\u5b9e\u5c31\u662f\u679a\u4e3e $j$ \u7684\u4e00\u79cd\u62c6\u5206\u65b9\u5f0f\u628a\u7b2c\u4e00\u4e2a\u63d0\u51fa\u6765\uff0c\u540e\u9762\u7684\u5f53\u4f5c\u6253\u5305\u5f53\u6210\u4e00\u4e2a\u5904\u7406\u3002\u5206\u522b\u8bbe\u4e3a $a, b$\uff0c\u5219\u6709 $f_{i,j,k} = \\min{(f_{i,a,t}+f_{t,b,k})}$\uff0c\u5904\u7406\u65f6\u53ef\u4ee5\u5c06 $j$ \u7684\u8303\u56f4\u6269\u5927\uff0c\u628a\u5c55\u5f00\u4e2d\u7684\u6bcf\u4e00\u4e2a\u540e\u7f00\u90fd\u5f53\u4f5c\u6570\u5b57\uff0c\u9012\u5f52\u5c55\u5f00\u3002\u8f6c\u79fb\u65f6\u7c7b\u4f3c\u4e0e\u6700\u77ed\u8def\u5904\u7406\u3002\u603b\u72b6\u6001\u6570 $m^2n$\uff0c\u8fb9\u6570 $m^3n$\uff0c\u7a20\u5bc6\u56fe\u7528 Dijkstra \u8f83\u4e3a\u4f18\u79c0\u3002\uff08\u5b9e\u73b0\u5f88\u4e11\u964b\uff0c\u5efa\u8bae\u4e0d\u8981\u770b\u4ee3\u7801\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define inf 1e18\n#define pii pair <int, int>\nconst int mod = 1e9 + 7;\nint read () {\n\tint x = 0, f = 1;\n\tchar ch = getchar ();\n\twhile (ch < '0' || ch > '9') {\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar ();\n\t}\n\twhile (ch >= '0' && ch <= '9') {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar ();\n\t}\n\treturn x * f;\n}\nvoid write (int x) {\n\tif (x < 0) x = -x, putchar ('-');\n\tif (x >= 10) write (x / 10);\n\tputchar (x % 10 + '0');\n}\nint quickmod (int x, int y) {\n\tint Ans = 1;\n\twhile (y) {\n\t\tif (y & 1) Ans = (Ans * x) % mod;\n\t\tx = (x * x) % mod;\n\t\ty >>= 1;\n\t}\n\treturn Ans;\n}\nstruct AC {\n    int t[500005][2], ban[500005];\n    int tot = 1;\n    void insert(int n, int a[]) {\n        int Rt = 1;\n        for(int i = 1; i <= n; i++) {\n            if(!t[Rt][a[i]]) t[Rt][a[i]] = ++tot;\n            Rt = t[Rt][a[i]];\n        }\n        ban[Rt] = 1;\n    }\n    int nxt[500005];\n    void get_nxt() {\n        t[0][0] = t[0][1] = 1;\n        queue <int> Q;\n        Q.push(1);\n        nxt[1] = 0;\n        while(!Q.empty()) {\n            int x = Q.front();\n            Q.pop();\n            ban[x] |= ban[nxt[x]];\n            for(int i = 0; i <= 1; i++) {\n                if(!t[x][i]) t[x][i] = t[nxt[x]][i];\n                else {\n                    Q.push(t[x][i]);\n                    ban[t[x][i]] |= ban[x];\n                    nxt[t[x][i]] = t[nxt[x]][i];\n                }\n            }\n        }\n        for(int i = 1; i <= tot; i++) if(ban[i]) t[i][0] = t[i][1] = 0;\n    }\n}AC;\nint tot;\nint head[500005];\nstruct Edge {\n    int v, ano, op, nxt;\n    // 0 : me ano\n    Edge() {}\n    Edge(int A, int B, int C, int D) {\n        v = A, ano = B, op = C, nxt = D;\n    } \n}edge[500005];\nvoid addedge(int u, int v, int ano, int op) {\n    edge[++tot] = Edge(v, ano, op, head[u]);\n    head[u] = tot;\n}\nstruct Node {\n    int i, j, k, e;\n    Node() {}\n    Node(int A, int B, int C, int D) {\n        i = A, j = B, k = C, e = D;\n    }\n    bool operator<(const Node &A) const {\n        return e > A.e;\n    }\n};\nint G, n, m;\nint f[105][205][105];\nbool vis[105][205][105];\nvoid Dij() {\n    for(int i = 0; i <= AC.tot; i++) for(int j = 0; j <= G; j++) for(int k = 0; k <= AC.tot; k++) f[i][j][k] = inf, vis[i][j][k] = 0;\n    priority_queue<Node> Q;\n    for(int i = 1; i <= AC.tot; i++) {\n        f[i][0][AC.t[i][0]] = 1, f[i][1][AC.t[i][1]] = 1;\n        Q.push(Node(i, 0, AC.t[i][0], 1)), Q.push(Node(i, 1, AC.t[i][1], 1));\n    }\n    while(!Q.empty()) {\n        Node now = Q.top();\n        Q.pop();\n        int i = now.i, j = now.j, k = now.k;\n        if(!i || !k || vis[i][j][k] || AC.ban[i] || AC.ban[k]) continue;\n        vis[i][j][k] = 1;\n        for(int p = head[j]; p; p = edge[p].nxt) {\n            int op = edge[p].op, v = edge[p].v, ano = edge[p].ano;\n            if(op == -1) {\n                if(f[i][v][k] > f[i][j][k]) {\n                    f[i][v][k] = f[i][j][k];\n                    Q.push(Node(i, v, k, f[i][v][k]));\n                }\n            }\n            else if(op == 0) {\n                for(int t = 1; t <= AC.tot; t++) {\n                    if(f[i][v][t] > f[i][j][k] + f[k][ano][t]) {\n                        f[i][v][t] = f[i][j][k] + f[k][ano][t];\n                        Q.push(Node(i, v, t, f[i][v][t]));\n                    }\n                }\n            }\n            else {\n                for(int t = 1; t <= AC.tot; t++) {\n                    if(f[t][v][k] > f[t][ano][i] + f[i][j][k]) {\n                        f[t][v][k] = f[t][ano][i] + f[i][j][k];\n                        Q.push(Node(t, v, k, f[t][v][k]));\n                    }\n                }\n            }\n        } \n    }\n}\nint id[500005], a[500005];\nsigned main () {\n\t// freopen (\"vir2.in\", \"r\", stdin);\n\t// freopen (\"mine.out\", \"w\", stdout);\n    G = read(), n = read(), m = read();\n    int firG = G;\n    for(int i = 1; i <= n; i++) {\n        int whi = read(), num = read();\n        for(int j = 1; j <= num; j++) a[j] = read();\n        if(num == 1) addedge(a[1], whi, -1, -1);\n        else {\n            id[1] = whi;\n            for(int j = 2; j < num; j++) id[j] = ++G;\n            id[num] = a[num];\n            for(int j = 1; j < num; j++) {\n                addedge(a[j], id[j], id[j+1], 0);\n                addedge(id[j+1], id[j], a[j], 1);\n            }\n        }\n    }\n    for(int i = 1; i <= m; i++) {\n        int num = read();\n        for(int j = 1; j <= num; j++) a[j] = read();\n        AC.insert(num, a);\n    }\n    AC.get_nxt();\n    Dij();\n    for(int i = 2; i < firG; i++) {\n        int Ans = inf;\n        for(int j = 1; j <= AC.tot; j++) for(int k = 1; k <= AC.tot; k++) if (!AC.ban[j] && !AC.ban[k]) Ans = min(Ans, f[k][i][j]);\n        if(Ans < inf) printf(\"NO \"), write(Ans), putchar('\\n');\n        else printf(\"YES\\n\");\n    }\n\treturn 0;\n}\n/*\n*/\n```",
        "postTime": 1664338840,
        "uid": 161847,
        "name": "Para",
        "ccfLevel": 0,
        "title": "[CF1387C] Viruses"
    }
]