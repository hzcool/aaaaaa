[
    {
        "content": "[CF1534E](https://www.luogu.com.cn/problem/CF1534E)\n\n\u672c\u9898\u6709\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u4e0d\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u4e0d\u9700\u8981 dp \u4e0d\u9700\u8981 bfs\u3002\n\n\u4e0d\u96be\u60f3\u8c61\uff0c\u56e0\u4e3a\u7ed9\u51fa\u7684\u662f\u5f02\u6216\u8fd0\u7b97\uff0c\u90a3\u4e48\u4f60\u6240\u80fd\u5f97\u5230\u7684\u6240\u6709\u4fe1\u606f\u5c31\u662f\u628a\u5df2\u77e5\u7684\u82e5\u5e72\u6761\u4fe1\u606f\u5f02\u6216\u8d77\u6765\u3002\u90a3\u4e48\u663e\u7136\uff0c\u8bbe\u7b2c $i$ \u4e2a\u6570\u88ab\u8be2\u95ee\u7684\u6b21\u6570\u4e3a $c_i$\uff0c\u90a3\u4e48\u9700\u8981\u6ee1\u8db3 $c_i$ \u4e3a\u5947\u6570\uff0c\u8fd9\u6837\u628a\u6240\u6709\u7684\u4fe1\u606f\u5f02\u6216\u8d77\u6765\u5c31\u53ef\u4ee5\u5f97\u5230 $a_1 \\oplus a_2 \\oplus \\dots \\oplus a_n$ \u7684\u503c\u3002\n\n\u601d\u8003\u4e00\u4e0b $c_i$ \u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\uff1a\u9996\u5148\uff0c\u4ee4 $sum=\\sum c_i$ \uff0c\u5219 $sum$ \u9700\u8981\u662f $k$ \u7684\u500d\u6570\u3002\u5176\u6b21\uff0c\u663e\u7136\u8fd9\u4e2a\u65f6\u5019\u9700\u8981 $\\frac {sum}k$ \u6b21\u64cd\u4f5c\uff0c\u90a3\u4e48\u663e\u7136\u9700\u8981\u6ee1\u8db3 $\\max(c_i)\\le \\frac {sum}k$\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u5c31\u5fc5\u7136\u6709\u89e3\uff0c\u8fd9\u8c8c\u4f3c\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u5177\u4f53\u8fc7\u7a0b\u5c31\u4e0d\u5c55\u5f00\u4e86\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u53ea\u8981\u6784\u9020\u51fa $c_i$ \u5c31\u53ef\u4ee5\u4e86\u3002\u56e0\u4e3a\u8981\u8ba9 $\\max(c_i)$ \u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a\u65b9\u6cd5\u5c31\u662f\u5148\u8ba9 $c_i=1$\uff0c\u7136\u540e\u8f6e\u6d41\u8ba9 $c_i$ \u52a0\u4e8c\u76f4\u5230\u6ee1\u8db3\u6761\u4ef6\u4e3a\u6b62\u3002\u5173\u4e8e\u4e0d\u5408\u6cd5\uff0c\u56e0\u4e3a\u7b54\u6848\u4fdd\u8bc1\u6b21\u6570 $\\le 500$ \u6240\u4ee5\u5f53 $sum>k \\times 500$ \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u505c\u4e0b\u6765\uff0c\u4f46\u662f\u6211\u5e76\u6ca1\u6709\u7279\u5224\u8fd9\u4e00\u70b9\u800c\u662f\u7279\u5224\u4e86\u4e00\u4e2a\u66f4\u663e\u7136\u7684\u60c5\u51b5\uff1a$k$ \u4e3a\u5076\u6570\u4e14 $n$ \u4e3a\u5947\u6570\uff0c\u5c31\u76f4\u63a5\u901a\u8fc7\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u731c\u6d4b\u5176\u4ed6\u60c5\u51b5\u90fd\u662f\u6709\u89e3\u7684\u3002\n\n\u5f97\u5230 $c_i$ \u540e\uff0c\u628a $(c_i,i)$ \u653e\u8fdb\u4f18\u5148\u961f\u5217\u6309\u7167 $c_i$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6bcf\u6b21\u53d6\u51fa\u524d $k$ \u5927\u7684\u8fdb\u884c\u4e00\u6b21\u8be2\u95ee\u518d\u653e\u56de\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\u3002\u8bbe\u8be2\u95ee\u6b21\u6570\u4e3a $t$\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal{O}(t \\times k \\times  \\log n)$\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define pb push_back\n#define mp make_pair\n#define x first\n#define y second\n#define WT int TT=read();while(TT--) \n#define NO puts(\"NO\");\n#define YES puts(\"YES\");\nusing namespace std;\n\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\n\nconst int M=510; \nint n,k,a[M],res,cnt,x[M],y[M];\npriority_queue<pair<int,int> >q;\n\nsigned main()\n{\n\tn=read(),k=read();\n\tif (n%2==1&&k%2==0)return puts(\"-1\"),0;\n\tfor (int i=1;i<=n;i++)a[i]=1,cnt++;\n\twhile(cnt%k!=0)\n\t{\n\t\tfor (int i=1;i<=n&&(cnt%k!=0||a[1]>cnt/k);i++)\n\t\t\ta[i]+=2,cnt+=2;\n\t}\n\tfor (int i=1;i<=n;i++)q.push(mp(a[i],i));\n\twhile(!q.empty())\n\t{\n\t\tfor (int i=1;i<=k;i++)\n\t\t\tx[i]=q.top().x,y[i]=q.top().y,q.pop();\n\t\tcout<<\"?\";\n\t\tfor (int i=1;i<=k;i++)\n\t\t\tcout<<' '<<y[i];cout<<endl;\n\t\tint l=read();res^=l;\n\t\tfor (int i=1;i<=k;i++)\n\t\t\tif (x[i]!=1)q.push(mp(x[i]-1,y[i]));\n\t}cout<<\"! \"<<res<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1623862665,
        "uid": 141179,
        "name": "pigstd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1534E"
    },
    {
        "content": "\u4f60\u80af\u5b9a\u4e0d\u4f1a\u60f3\u5199 @\u5929\u673a\u661f \u7684\u5927\u529b\u5206\u7c7b\u8ba8\u8bba\uff08\n\n\u9898\u76ee\u91cc\u9762\u8981\u6c42\u662f\u8be2\u95ee\u6700\u5c11\u7684\u6b65\u6570\uff0c\u90a3\u4e48\u80af\u5b9a\u5f97\u60f3\u60f3\u6700\u5c11\u7684\u6b65\u6570\u600e\u4e48\u6c42\u5f97\uff0c\u518d\u6784\u9020\u65b9\u6848\u3002\u800c\u8981\u8003\u8651\u6b65\u6570\u5c31\u5f97\u8003\u8651\u6211\u4eec\u624b\u5934\u6709\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\u3002\u9996\u5148\u5c31\u662f\u8be2\u95ee $k$ \u4e2a\u6ca1\u6709\u95ee\u8fc7\u7684\uff0c\u8fd9\u6837\u7684\u7b54\u6848\u5f02\u6216\u5728\u4e00\u8d77\u53ef\u4ee5\u5f97\u5230\u82e5\u5e72\u4e2a\u7684\u5f02\u6216\u548c\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u5f02\u6216\u7684\u6027\u8d28\u662f\u5f02\u6216\u4e24\u904d\u5c31\u7b49\u4e8e\u6ca1\u6709\u5f02\u6216\uff0c\u6240\u4ee5\u8fd8\u6709\u4e00\u79cd\u64cd\u4f5c\u662f\u9009\u8fc7\u7684\u53d6 $j$ \u4e2a\uff0c\u5269\u4e0b\u53d6 $k-j$ \u4e2a\uff0c\u628a\u9009\u8fc7\u7684 $j$ \u4e2a\u53c8\u5f02\u6216\u4e86\u4e00\u904d\u5f02\u6216\u6ca1\u4e86\uff0c\u6240\u4ee5\u589e\u52a0\u7684 $k-j$ \u4e2a\u91cc\u9762\u8981\u51cf\u53bb $j$ \u4e2a\uff0c\u76f8\u5f53\u4e8e\u591a\u83b7\u5f97\u4e86 $k-2j$ \u4e2a\u5f02\u6216\u5728\u4e00\u8d77\u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u64cd\u4f5c\u8fd8\u6709\u6ca1\u6709\u5462\uff1f\u56e0\u4e3a\u5f02\u6216\u5728\u4e00\u8d77\u7684\u4e1c\u897f\u4f60\u4e0d\u628a\u5b83\u5f02\u6216\u6389\u4e00\u4e9b\u662f\u6ca1\u6cd5\u8fd8\u539f\u7684\uff08\u4e0d\u7136\u5f3a\u5236\u5728\u7ebf\u5c31\u53ef\u4ee5\u7834\u89e3\u4e86\uff09\uff0c\u6240\u4ee5\u5176\u5b83\u7684\u5404\u79cd\u64cd\u4f5c\u5e94\u8be5\u662f\u65e0\u6548\u7684\uff0c\u6211\u4eec\u624b\u5934\u4e0a\u53ea\u6709\u4e0a\u9762\u7684\u4e00\u79cd\u53d8\u6362\u65b9\u5f0f\u3002\n\n\u8003\u8651\u6570\u636e\u5c0f\u7684\u65f6\u5019\uff0c\u76f4\u63a5 bfs \u4e00\u904d\u5c31\u884c\u4e86\u3002\u7b49\u7b49\uff0c\u9898\u76ee\u91cc\u4e0d\u662f\u8bf4\u53ef\u4ee5\u8bc1\u660e\u4e0d\u8d85\u8fc7 $500$ \u4e2a\u5417\uff0c\u800c\u4e14\u6211\u4eec\u597d\u50cf\u4e0d\u5173\u5fc3\u53d6\u7684 $j$ \u4e2a\u662f\u54ea $j$ \u4e2a\u554a\uff01\u90a3\u76f4\u63a5 bfs \u5c31\u884c\u4e86\uff01\n\n\u8fd9\u6837\u6211\u4eec\u77e5\u9053\u4e86\u6700\u5c11\u6b65\u6570\u3002\n\n\u73b0\u5728\u6765\u6784\u9020\u65b9\u6848\u3002\n\n\u7531\u524d\u9762\u7684\u5206\u6790\u77e5\u9053\u6211\u4eec\u6bcf\u6b21\u53ea\u9700\u8981\u968f\u4fbf\u9009\u53d6\u9009\u8fc7\u7684\u4e2d\u7684\u4e00\u4e9b\uff08\u201c\u4e00\u4e9b\u201d\u662f\u591a\u5c11\u53ef\u4ee5\u7531 bfs \u4e2d\u8bb0\u5f55\u4e0b\u6765\uff09\u548c\u6ca1\u9009\u8fc7\u4e2d\u7684\u4e00\u4e9b\uff0c\u7136\u540e\u8be2\u95ee\u4e4b\u540e\u9009\u8fc7\u7684\u53d8\u6210\u4e86\u6ca1\u9009\u8fc7\u7684\uff0c\u6ca1\u9009\u8fc7\u7684\u53d8\u6210\u4e86\u9009\u8fc7\u7684\u3002\u90a3\u4e48\u5c31\u5f00\u4e24\u4e2a vector \u8bb0\u5f55\u4e00\u4e0b\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e00\u4e9b\u4e22\u8fdb\u53e6\u4e00\u4e2a vector \u91cc\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <cstring>\n#include <algorithm>\nconst int N = 2005, INF = 0x3f3f3f3f;\nint dis[N], pre[N], n, k, x, ans;\nint main() {\n    std::cin >> n >> k;\n    memset(dis, 0x3f, sizeof dis);\n    std::queue<int> que;\n    dis[0] = 0, pre[0] = -1, que.push(0);\n    while(!que.empty()) {\n        int c = que.front(); que.pop();\n        for(int i = 0; i <= k; i++)\n            if(i <= n-c && k-i <= c) {\n                int v = c+i-(k-i);\n                if(dis[v] == INF) {\n                    dis[v] = dis[c]+1;\n                    pre[v] = c;\n                    que.push(v);\n                }\n            }\n    }\n    // \u4e0a\u9762 bfs\n    if(dis[n] == INF) return puts(\"-1\"), 0;\n    std::vector<int> sel, nosel, path;\n    for(int i = 1; i <= n; i++) nosel.push_back(i);\n   \t// nosel \u662f\u6ca1\u9009\u8fc7\u7684\uff0c\u5f00\u59cb\u65f6\u628a\u6bcf\u4e2a\u90fd\u6254\u8fdb\u53bb\u3002\n    for(int i = n; i != -1; i = pre[i]) path.push_back(i);\n    std::reverse(path.begin(), path.end());\n    // \u83b7\u53d6\u8def\u5f84\u3002\n    for(int i = 0; i < (signed)path.size()-1; i++) {\n        int a = path[i], b = path[i+1], d= b-a, num = (d+k) / 2, rnum = k-num;\n        // \u6839\u636e\u8def\u5f84\u7b97\u51fa\u8fd9\u6b21\u7684 j\u3002\n        std::vector<int> tmps, tmpns;\n        for(int j = 0; j < num; j++) {\n            tmps.push_back(nosel.back());\n            nosel.pop_back();\n        }\n        // \u4ece\u6ca1\u9009\u8fc7\u7684\u4e2d\u53d6\u3002\n        for(int j = 0; j < rnum; j++) {\n            tmpns.push_back(sel.back());\n            sel.pop_back();\n        }\n       \t// \u4ece\u9009\u8fc7\u7684\u53d6\u3002\n        std::cout << \"? \";\n        for(int j = 0; j < (signed)tmps.size(); j++) std::cout << tmps[j] << \" \";\n        for(int j = 0; j < (signed)tmpns.size(); j++) std::cout << tmpns[j] << \" \";\n        std::cout << std::endl;\n        // \u8be2\u95ee\u3002\n        nosel.insert(nosel.end(), tmpns.begin(), tmpns.end());\n        sel.insert(sel.end(), tmps.begin(), tmps.end());\n        // \u628a\u9009\u8fc7\u7684\u53d6\u7684\u4e22\u8fdb\u6ca1\u9009\u8fc7\u7684\u91cc\uff0c\u6ca1\u9009\u8fc7\u7684\u4e22\u8fdb\u9009\u8fc7\u7684\u91cc\u3002\n        std::cin >> x;\n        ans ^= x;\n        // \u52a0\u5165\u7b54\u6848\u3002\n    }\n    std::cout << \"! \" << ans << std::endl;\n    return 0;\n}\n```",
        "postTime": 1623655245,
        "uid": 40318,
        "name": "Acfboy",
        "ccfLevel": 0,
        "title": "CF1534E Lost Array \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u6bd4\u5176\u4ed6\u505a\u6cd5\u9633\u95f4\u7684\u5206\u7c7b\u8ba8\u8bba\u505a\u6cd5\u3002\n\n\u9996\u5148\u4e00\u6b21\u53ef\u4ee5\u8be2\u95ee $k$ \u4e2a\u6570\u7684\u5f02\u6216\u548c\u3002\u540c\u65f6\u5bf9\u4e8e\u4e0d\u5927\u4e8e $mx=2\\min(k,n-k)$ \u7684\u5076\u6570 $m$\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e24\u6b21\u8be2\u95ee\u5f97\u5230\u4efb\u610f $m$ \u4e2a\u6570\u7684\u5f02\u6216\u548c\uff0c\u65b9\u6cd5\u662f\u628a\u8981\u8be2\u95ee\u7684\u6570\u5206\u6210\u4e24\u534a\uff0c\u518d\u4efb\u9009 $k-\\dfrac{m}{2}$ \u4e2a\u5176\u5b83\u7684\u6570\uff0c\u6bcf\u6b21\u5206\u522b\u8be2\u95ee\u4e00\u534a\u548c\u627e\u5230\u7684\u5176\u4ed6\u7684\u6570\uff0c\u6240\u4ee5\u6709 $m+k-\\dfrac{m}{2}\\leqslant n$ \u5f97\u5230 $m\\leqslant 2(n-k)$\u3002\n\n\u6ce8\u610f\u5230\u5f53 $n$ \u662f\u5947\u6570\u4e14 $k$ \u662f\u5076\u6570\u7684\u65f6\u5019\u6211\u4eec\u53ea\u80fd\u5f97\u5230\u5076\u6570\u4e2a\u6570\u7684\u5f02\u6216\u548c\uff0c\u6240\u4ee5\u4e00\u5b9a\u65e0\u89e3\u3002\u5bf9\u4e8e\u5269\u4e0b\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5bf9 $n\\bmod k$ \u7684**\u5947\u5076\u6027**\u5206\u7c7b\u8ba8\u8bba\uff0c\u4e0b\u9762\u6211\u4eec\u79f0**\u9884\u7559**\u7684\u6570\u4e3a\u901a\u8fc7\u6211\u4eec\u4e0a\u9762\u6240\u8bb2\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u8be2\u95ee\u7684\u6570\u3002\n\n- \u5982\u679c $n\\bmod k$ \u662f\u5947\u6570\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u65f6 $k$ \u4e00\u5b9a\u662f\u5947\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u9884\u7559\u4e0b $k+n\\bmod k$ \u4e2a\u6570\uff0c\u6bcf\u6b21\u8d2a\u5fc3\u8be2\u95ee\u5373\u53ef\uff0c\u5269\u4e0b\u7684\u6570 $k$ \u4e2a\u4e00\u5806\u8be2\u95ee\u5373\u53ef\u3002\n- \u5982\u679c $n\\bmod k$ \u662f\u5076\u6570\uff0c\u5982\u679c $k+n\\bmod k\\leqslant mx$ \u4e14 $k$ \u662f\u5076\u6570\uff0c\u4ecd\u65e7\u9884\u7559 $k+n\\bmod k$ \u4e2a\u6570\uff0c\u5426\u5219\u6539\u6210\u9884\u7559 $n\\bmod k$ \u4e2a\u6570\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u4efb\u4f55\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u4e24\u79cd\u64cd\u4f5c\u8868\u793a\u51fa\u6765\uff08\u5206\u7c7b\u8ba8\u8bba\u8be2\u95ee\u96c6\u5408\u662f\u5426\u548c\u5f53\u524d\u88ab\u8be2\u95ee\u5947\u6570\u6b21\u7684\u96c6\u5408\u6709\u4ea4\u5373\u8bc1\uff09\uff0c\u540c\u65f6\u53d1\u73b0\u6211\u4eec\u5229\u7528\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u8be2\u95ee\u7684\u6570\u7684\u603b\u548c\u4e0d\u4f1a\u8d85\u8fc7 $2k$\uff08\u5426\u5219\u53ef\u4ee5\u7528\u7b2c\u4e00\u79cd\u66ff\u4ee3\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u4f1a\u9884\u7559 $k+n\\bmod k$ \u6216 $n\\bmod k$ \u4e2a\u6570\uff0c\u6240\u4ee5 $n\\bmod k$ \u662f\u5947\u6570\u7684\u60c5\u51b5\u5f97\u8bc1\u3002\n\n\u5bf9\u4e8e $n\\bmod k$ \u662f\u5076\u6570\u7684\u60c5\u51b5\uff0c\u82e5 $k$ \u662f\u5947\u6570\u540c\u4e0a\uff1b\u82e5 $k$ \u662f\u5076\u6570\u4e14 $k+n\\bmod k> mx$\uff0c\u5982\u679c $mx<k$ \u90a3\u4e48\u663e\u7136\u4e0d\u4f18\uff0c\u53cd\u4e4b $mx\\geqslant k$\uff0c\u9884\u7559 $k+n\\bmod k$ \u4e2a\u6570\u81f3\u5c11\u8981\u8be2\u95ee $4$ \u6b21\uff0c\u800c\u9884\u7559 $n\\bmod k$ \u4e2a\u6570\u53ea\u9700\u8981\u8be2\u95ee $3$ \u6b21\uff0c\u5f97\u8bc1\u3002\n\n\u663e\u7136\u672c\u505a\u6cd5\u5230\u8fbe\u4e86\u672c\u9898\u7684\u590d\u6742\u5ea6\u4e0b\u754c\u3002\n\n[\u8fd9\u91cc](https://codeforces.com/contest/1534/submission/119698063)\u662f\u4e00\u4efd\u4e0d\u592a\u4f18\u7f8e\u7684\u5b9e\u73b0\u3002 ",
        "postTime": 1623922241,
        "uid": 96912,
        "name": "AzusaCat",
        "ccfLevel": 9,
        "title": "CF1534E - Lost Array"
    },
    {
        "content": "\u8fd9\u9898\u6709\u4e24\u79cd\u633a\u4e0d\u4e00\u6837\u7684\u505a\u6cd5\uff0c\u90fd\u633a\u6709\u610f\u601d\u7684\u3002\n\n# $\\operatorname{I}$\n\n\u6211\u4eec\u672c\u8d28\u4e0a\u662f\u8981\u5bf9\u4e00\u4e2a $01$ \u5e8f\u5217\u8fdb\u884c\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u62e9 $m$ \u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u5c06\u5b83\u4e0a\u9762\u7684\u6570\u53cd\u8f6c\uff08$0\\rightarrow 1,1\\rightarrow 0$\uff09\u3002\u76ee\u6807\u662f\u5c06 $01$ \u5e8f\u5217\u5168\u53d8\u4e3a $1$\u3002\n\n\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u65e0\u89e3\u3002\u5982\u679c $n$ \u4e3a\u5947\u6570\uff0c$m$ \u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u65e0\u8bba\u5982\u4f55\u64cd\u4f5c $01$ \u5e8f\u5217\u7684\u5f02\u6216\u548c\u603b\u662f\u7b49\u4e8e $0$\uff0c\u6c38\u8fdc\u8fbe\u4e0d\u5230\u76ee\u6807\u3002\n\n\u5982\u679c $n$ \u6bd4 $m$ \u5927\u5f88\u591a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6784\u9020\uff1a\n\n\u5148\u8fdb\u884c $\\lfloor\\dfrac{n}{m}\\rfloor$ \u6b21\u64cd\u4f5c\uff0c\u4f7f\u5f97\u53ea\u5269\u4e0b $n\\mod m$ \u4e2a $0$\u3002\n\n\u5982\u679c $n\\mod m$ \u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u64a4\u56de\u4e00\u6b21\u64cd\u4f5c\uff0c\u663e\u7136\u6b64\u65f6 $(n\\mod m)+m$ \u4e00\u5b9a\u4e3a\u5076\u6570\u3002\n\n\u4ee4 $t$ \u4e3a\u5f53\u524d\u5269\u4f59 $0$ \u7684\u4e2a\u6570\uff0c\u663e\u7136 $t$ \u4e3a\u5076\u6570\u3002\u62ff\u51fa $\\dfrac{t}{2}$ \u4e2a $0$ \u548c $m-\\dfrac{t}{2}$ \u4e2a $1$ \u8fdb\u884c\u64cd\u4f5c\uff0c\u6b64\u65f6\u8fd8\u4f1a\u5269\u4f59\u603b\u5171 $m-\\dfrac{t}{2}+\\dfrac{t}{2}=m$ \u4e2a $0$\uff0c\u76f4\u63a5\u4e00\u6b21\u64cd\u4f5c\u5168\u90e8\u53d8\u4e3a $1$ \u5373\u53ef\u3002\n\n\u663e\u7136\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8fd9\u6837\u6784\u9020\u662f\u6b21\u6570\u6700\u5c11\u7684\u3002\n\n\u5982\u679c $n$ \u5e76\u4e0d\u6bd4 $m$ \u5927\u5f88\u591a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6784\u9020\u5c31\u4f1a\u51fa\u95ee\u9898\uff0c\u56e0\u4e3a\u5e76\u6ca1\u6709\u8db3\u591f\u7684 $1$ \u53ef\u9009\u3002\n\n\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u5982\u679c $n$ \u4e3a\u5076\u6570\u4e14 $m$ \u4e3a\u5947\u6570\u4e14 $n<2m$\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002\u64cd\u4f5c\u8fc7\u7a0b\u4e2d $0$ \u7684\u4e2a\u6570\u4e00\u5b9a\u65f6\u5947\u5076\u4ea4\u66ff\u7684\uff0c\u800c\u6211\u4eec\u5e0c\u671b\u7684\u7ec8\u6b62\u6001\u662f\u5076\u6570\u3002\u6240\u4ee5\u5728\u5947\u6570\u65f6\u6211\u4eec\u8981\u8ba9\u64cd\u4f5c\u51fa\u7684 $0$ \u5c3d\u91cf\u591a\uff0c\u8fd9\u6837\u5728\u5076\u6570\u65f6 $1$ \u5c31\u80fd\u5c3d\u91cf\u591a\u3002\u53cd\u590d\u6267\u884c\u8d2a\u5fc3\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u518d\u7ed3\u5408\u4e4b\u524d\u7684\u6784\u9020\uff0c\u5373\u53ef\u5f97\u51fa\u6b63\u89e3\u3002\n\n\u6728\u6709\u4ee3\u7801\u3002\n\n# $\\operatorname{II}$\n\n\u663e\u7136\u6240\u6709\u6070\u597d\u6709 $i$ \u4e2a $1$ \u7684\u72b6\u6001\u5176\u5b9e\u662f\u7b49\u4ef7\u7684\uff0c\u53ef\u4ee5\u7f29\u4e3a\u4e00\u4e2a\uff0c\u4e0b\u79f0 \"\u72b6\u6001 $i$\"\u3002\u8003\u8651\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\u5173\u7cfb\uff0c\u5bf9\u4e8e\u72b6\u6001 $i$\uff0c\u679a\u4e3e\u5f53\u524d\u64cd\u4f5c\u5305\u542b\u7684 $1$ \u7684\u4e2a\u6570\uff0c\u5e76\u6c42\u51fa\u65b0\u72b6\u6001\u4e2d $1$ \u7684\u4e2a\u6570 $i'$\uff0c\u8fde\u8fb9 $i\\rightarrow i'$\u3002\n\n\u5230\u8fbe\u72b6\u6001 $i$ \u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u5c31\u662f $0\\rightarrow i$ \u7684\u6700\u77ed\u8def\uff0c\u53ea\u9700\u5728 bfs \u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u524d\u9a71\u5e76\u5bf9\u5229\u7528\u5bf9\u5e94\u7684\u64cd\u4f5c\u72b6\u6001\u4e4b\u95f4\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u8fd9\u79cd\u505a\u6cd5\u76f8\u8f83\u4e8e\u4e4b\u524d\u90a3\u79cd\u6765\u8bf4\u7b80\u6d01\u3001\u76f4\u89c2\u5f88\u591a\uff0c\u5e76\u4e14\u5bb9\u6613\u60f3\u5230\uff0c\u7ec6\u8282\u4e5f\u66f4\u5c11\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 505\n#define pb push_back\nint n,m,w,ans,q[N],dst[N],pr[N],st[N];\nbool vs[N];vector<int> e[N];\nvoid slv(int x,int y)\n{\n\tint t[2]={(y-x+m)/2,(x-y+m)/2};printf(\"? \",x,y);\n\tfor(int i=1;i<=n;++i) if(t[vs[i]])\n\t\t--t[vs[i]],vs[i]^=1,printf(\"%d \",i);\n\tfflush(stdout);scanf(\"%d\",&w),ans^=w;\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);q[0]=q[1]=2;\n\tfor(int i=1;i<=n;++i) dst[i]=-1;\n\tfor(int i=0;i<=n;++i)\n\t\tfor(int j=max(m-n+i,0);j<=min(m,i);++j)\n\t\t\te[i].pb(m+i-j*2);\n\twhile(q[0]<=q[1])\n\t{\n\t\tint u=q[q[0]++];\n\t\tfor(auto v:e[u]) if(dst[v]==-1)\n\t\t\tq[++q[1]]=v,dst[v]=dst[u]+1,pr[v]=u;\n\t}if(dst[n]==-1) {puts(\"-1\");return 0;}\n\tfor(int i=n;i;i=pr[i]) st[++st[0]]=i;\n\tslv(0,st[st[0]]);\n\tfor(int i=st[0];i>1;--i) slv(st[i],st[i-1]);\n\tprintf(\"! %d\\n\",ans);return 0;\n}\n```",
        "postTime": 1625580885,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "CF1534E Lost Array"
    },
    {
        "content": "\u6b64\u9898\u672c\u8d28\u5c31\u662f\u7ffb\u786c\u5e01\u95ee\u9898\u3002\u5bf9\u9898\u89e3\u533a\u5176\u4ed6\u51e0\u4e2a\u5206\u7c7b\u8ba8\u8bba\u505a\u6cd5\u505a\u4e00\u4e2a\u7b80\u5316\u7684\u8bf4\u660e\u4e0e\u6ce8\u91ca\u3002\n\n\u6839\u636e AzusaCat \u5927\u4f6c\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u91cd\u8981\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u4e0d\u8d85\u8fc7 $x=2\\min\\{k,n-k\\}$ \u7684\u5076\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u6b21\u8be2\u95ee\u51fa\u8fd9\u4e00\u90e8\u5206\u7684\u5f02\u6216\u548c\u3002\u663e\u7136\u8fd9\u4e2a\u503c\u8981\u5c0f\u4e8e $k$\uff0c\u540c\u65f6\u8981\u9884\u7559\u51fa\u8db3\u591f\u591a\u7684\u5269\u4f59\u91cf\u8ba9\u6211\u4eec\u597d\u6d88\u9664\uff0c\u56e0\u800c\u6709\u4e0a\u754c $2(n-k)$\u3002\u5176\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n\u8003\u8651\u4e00\u4e2a\u957f\u5ea6\u4e3a $7$ \u7684\u5e8f\u5217 $\\{a_1,a_2,a_3,a_4,a_5,a_6,a_7\\}$\uff0c\u4e00\u6b21\u53ef\u4ee5\u8be2\u95ee $5$ \u4e2a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e0d\u8d85\u8fc7 $4$ \u7684\u5076\u6570\u5747\u53ef\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8be2\u95ee\u51fa\u6765\uff1a\uff08\u4ee5\u8be2\u95ee $\\{a_1,a_2,a_3,a_4\\}$ \u4e3a\u4f8b\uff09\n\n1. \u8be2\u95ee $\\{a_1,a_2,a_5,a_6,a_7\\}$\u3002\n\n2. \u8be2\u95ee $\\{a_3,a_4,a_5,a_6,a_7\\}$\u3002\n\n3. \u5c06\u4e8c\u8005\u5f02\u6216\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $\\{a_1,a_2,a_3,a_4\\}$\u3002\n\n\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u770b\u5230\uff0c\u9664\u4e86\u4e00\u6b21\u6027\u80fd\u8be2\u95ee\u7684\u6570 $k$\uff0c\u5269\u4e0b\u7684\u6570 $n-k$ \u4e5f\u662f\u4e00\u4e2a\u9650\u5236\u56e0\u7d20\u3002\n\n\u90a3\u4e48\u8003\u8651\u6700\u4f18\u7b56\u7565\uff08\u6216\u8005\u8bf4\u80fd\u6210\u529f\u7684\u7b56\u7565\uff09\u2014\u2014\u6700\u540e\u53ea\u5269\u4e0b\u5076\u6570\u4e2a\u6570\uff0c\u6570\u76ee\u8bb0\u4f4d $y$\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e24\u6b21\u8be2\u95ee\u5b8c\u6210\u5176\u4e2d $x$ \u4e2a\u6570\u7684\u8be2\u95ee\uff0c\u4f7f\u7528\u8be5\u7b56\u7565 $\\displaystyle \\lceil {\\frac{y}{x}} \\rceil$ \u6b21\u8be2\u95ee\u51fa\u8fd9 $y$ \u4e2a\u6570\u7684\u5f02\u6216\u548c\uff1b\u5269\u4e0b\u7684\u4f9d\u6b21\u8be2\u95ee\u8fc7\u53bb\uff0c\u53ea\u8986\u76d6\u4e00\u6b21\uff08\u4f8b\u5982\uff0c$\\{a_5,a_6,a_7\\},\\{a_8,a_9,a_{10}\\}$\uff09\u3002\u90a3\u4e48\u5c31\u8003\u8651\u5982\u4f55\u51cf\u5230\u8fd9\u4e2a\u6570 $y$\u3002\u8fd9\u91cc\u5c31\u6d89\u53ca\u5230\u5176\u4ed6\u9898\u89e3\u6d89\u53ca\u5230\u7684\u5947\u5076\u6027\u8ba8\u8bba\uff1a\n\n1. \u5982\u679c $n$ \u4e3a\u5947\u6570\u800c $k$ \u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u65e0\u8bba\u65e0\u4f55\u90fd\u51cf\u4e0d\u5230\u8fd9\u4e2a\u503c\u3002\u76f4\u63a5\u8f93\u51fa ```-1```\u3002\n\n2. \u5176\u4f59\u60c5\u51b5\u5747\u80fd\u51cf\u5230\u6211\u4eec\u6240\u9700\u7684\u90a3\u4e2a\u6570 $y$\u3002\u90a3\u4e48\u5148\u51cf\u5230 $n \\mod k$\uff0c\u5982\u679c\u4e3a\u5947\u6570\u5219\u52a0\u4e0a\u4e00\u4e2a $k$ \u4f7f\u5f97\u53d8\u6210\u5076\u6570\u3002\u82e5 $n,k$ \u5747\u4e3a\u5076\u6570\u90a3\u4e48\u4f59\u6570\u5fc5\u4e3a\u5076\u6570\uff1b\u5982\u679c $k$ \u4e3a\u5947\u6570\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u52a0 $k$ \u6539\u53d8\u6211\u4eec\u6240\u5f97\u5230\u7684\u8fd9\u4e2a\u503c\u7684\u5947\u5076\u6027\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u6700\u4f18\u7b56\u7565\u4ee5\u6700\u5c11\u7684\u8be2\u95ee\u6570\u8fbe\u6210\u8981\u6c42\u3002\n\n\uff08\u4ee3\u7801\u8fc7\u4e11\u5c31\u4e0d\u653e\u4e86\uff09",
        "postTime": 1624526925,
        "uid": 80026,
        "name": "walk_alone",
        "ccfLevel": 3,
        "title": "CF1534E Lost Array \u9898\u89e3"
    },
    {
        "content": "\u5bb9\u6613\u53d1\u73b0\u4f60\u77e5\u9053\u54ea\u51e0\u4e2a\u6570\u7684 $\\operatorname{xor}$ \u548c\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u4f60\u77e5\u9053\u51e0\u4e2a\u3002  \n\u8bbe $d_i$ \u4e3a\u7ecf\u8fc7 $d_i$ \u6b21\u64cd\u4f5c\u540e\u4f60\u77e5\u9053 $i$ \u4e2a\u6570\u7684 $\\operatorname{xor}$ \u548c\u3002  \n\u8f6c\u79fb\uff1a$d_{i+k}\\leftarrow d_i+1,d_{i+k-2j}\\leftarrow d_i+1(1\\le j\\le i)$  \n\u7528 bfs \u5b9e\u73b0\uff0c\u4e4b\u540e\u6c42\u6784\u9020\u7684\u8bdd bfs \u91cc\u52a0\u4e2a\u8bb0\u5f55\u8def\u5f84\u5373\u53ef\u3002\n\n[submission](https://codeforces.com/contest/1534/submission/176962977)",
        "postTime": 1666158411,
        "uid": 366338,
        "name": "fjy666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010CF1534E\u3011"
    },
    {
        "content": "\u4e00\u9053\u4f2a\u88c5\u6210\u4ea4\u4e92\u9898\u7684\u6784\u9020\u9898\uff0c\u6211\u4eec\u7684\u8f93\u51fa\u548c\u4ea4\u4e92\u5e93\u7684\u8f93\u51fa\u57fa\u672c\u6ca1\u6709\u5173\u7cfb\u3002\u3002\u3002\n\n\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u6570\u96c6\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u6bcf\u4e00\u6b21\u9009\u62e9 $k$ \u4e2a\u6570\uff0c\u628a\u4e0d\u5728\u6570\u96c6\u5185\u7684\u79fb\u5230\u6570\u96c6\u5185\uff0c\u5728\u6570\u96c6\u5185\u7684\u79fb\u51fa\u6570\u96c6\uff0c\u8981\u6c42\u7528\u6700\u5c0f\u7684\u6b21\u6570\u4f7f\u5f97\u539f\u5148\u5728\u6570\u96c6\u5916\u7684\u6240\u6709\u6570\u5168\u90e8\u8fdb\u5165\u6570\u96c6\u5185\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u628a\u4ea4\u4e92\u5e93\u7ed9\u51fa\u7684\u6240\u6709\u8f93\u51fa\u5f02\u6216\u8d77\u6765\u5c31\u662f\u6211\u4eec\u6700\u7ec8\u8981\u7684\u7b54\u6848\n\n\u90a3\u4e48\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u6784\u9020\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u80fd\u591f\u8fbe\u6210\u8fd9\u4e2a\u76ee\u6807\n\n\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u5047\u8bbe\u5f53\u524d\u96c6\u5408\u5185\u6709 $x$ \u4e2a\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u79bb\u7b54\u6848\u7684\u8ddd\u79bb\u53ea\u548c\u8fd9\u4e2a $x$ \u6709\u5173\n\n\u56e0\u6b64\u53ef\u884c\u7684\u72b6\u6001\u6570\u662f $O(n)$ \u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u8fde\u8fb9\uff0c\u4ece\u4e00\u4e2a\u53ef\u884c\u72b6\u6001\u5f00\u59cb\uff0c\u5f80\u6240\u6709\u540e\u7ee7\u7684\u53ef\u884c\u72b6\u6001\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1 $0\\rightarrow n$ \u7684\u6700\u77ed\u8def\u5373\u53ef\n\n\u7136\u540e\u8003\u8651\u8f93\u51fa\u65b9\u6848\uff0c\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u5728\u6700\u77ed\u8def\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u524d\u9a71\uff0c\u7136\u540e\u4ece $n$ \u5f00\u59cb\u9006\u63a8\uff0c\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e00\u6b21\u5165\u96c6\u7684\u6570\u7684\u4e2a\u6570\u548c\u51fa\u96c6\u7684\u6570\u7684\u4e2a\u6570\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u5047\u8bbe\u5206\u522b\u662f $c_1, c_2$\n\n\u800c\u5177\u4f53\u54ea\u4e9b\u6570\u51fa\u5165\u96c6\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\uff0c\u56e0\u6b64\u968f\u4fbf\u53d6 $c_1$ \u4e2a\u5f53\u524d\u5728\u96c6\u5408\u5916\u7684\u6570\u548c $c_2$ \u4e2a\u5f53\u524d\u5728\u96c6\u5408\u5185\u7684\u6570\u6539\u53d8\u72b6\u6001\u5373\u53ef\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u662f\u5bf9\u7684\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\n\n```cpp\n#include <cstring>\n#include <cstdio>\n#include <queue>\nint ans = 0, n, k;\nconst int MAXN = 505;\nstruct DPair {int val, id; DPair(int val, int id) : val(val), id(id) {} inline bool operator< (const DPair &tmp) const{return val > tmp.val;}};\nstd::priority_queue < DPair > q;\nconst int INF = 0x3f3f3f3f;\nint head[MAXN], e[MAXN * MAXN], nxt[MAXN * MAXN], cnt, dis[MAXN], pre[MAXN];\ninline void add(int u, int v) { nxt[++ cnt] = head[u]; head[u] = cnt; e[cnt] = v; }\nbool vis[MAXN];\ninline void Dijkstra() {\n    for(int i = 1;i <= n;++ i) dis[i] = INF;\n    q.push(DPair(0, 0));\n    while(!q.empty()) {\n        const int x = q.top().id; q.pop();\n        if(vis[x]) continue;\n        vis[x] = 1; for (int i = head[x];i;i = nxt[i]) {\n            if(dis[e[i]] > dis[x] + 1) {\n                dis[e[i]] = dis[x] + 1; pre[e[i]] = x;\n                q.push(DPair(dis[e[i]], e[i]));\n            }\n        }\n    }\n}\ninline int mx(int x, int y) {return x > y? x : y;}\ninline void init() {\n    scanf(\"%d%d\", &n, &k);\n    for (int i = 0;i <= n;++ i) {\n        for (int j = mx(0, k + i - n);j <= k && j <= i;++ j) {\n            const int v = i - j + (k - j);\n            if(v <= n && !vis[v]) { vis[v] = 1; add(i, v); }\n        } memset(vis, 0, sizeof(vis));\n    }\n}\ninline int abs(int x) {return x < 0? -x : x;}\nvoid output(int x) {\n    if(!x) return ;\n    const int y = pre[x]; int r1 = (k + x - y) >> 1, r2 = k - r1;\n    printf(\"?\");\n    for (int i = 1;i <= n;++ i) {\n        if(vis[i] && r1) {\n            printf(\" %d\", i);\n            vis[i] = 0; -- r1;\n        } else if(!vis[i] && r2) {\n            printf(\" %d\", i);\n            vis[i] = 1; -- r2;\n        }\n    } printf(\"\\n\"); fflush(stdout); int r;\n    scanf(\"%d\", &r); ans ^= r; output(y);\n}\n\nint main() { init();\n    Dijkstra();\n    if(dis[n] == INF) {\n        printf(\"-1\\n\"); fflush(stdout);\n        return 0;\n    } memset(vis, 1, sizeof(vis));\n    output(n); printf(\"! %d\\n\", ans); fflush(stdout);\n}\n```",
        "postTime": 1628818877,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010CF1534E Lost Array\u3011"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n- \u4e00\u70b9 [\u56fe\u8bba](https://oi-wiki.org/graph/) \u57fa\u7840\uff08\u5982 [BFS](https://oi-wiki.org/graph/bfs/) \n\n- \u4e00\u70b9 [\u72b6\u538bdp](https://oi-wiki.org/dp/state/) \u57fa\u7840\uff08\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u4ea4\u4e92\u9898\uff0c\u6709 $n$ \u4e2a\u6570\uff0c\u6bcf\u6b21\u53ef\u4ee5\u67e5\u8be2\u5176\u4e2d $k$ \u4e2a\u6570\u7684\u5f02\u6216\u548c\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u6700\u5c11\u7684\u67e5\u8be2\u6b21\u6570\u6765\u5f97\u5230\u8fd9 $n$ \u4e2a\u6570\u7684\u5f02\u6216\u548c\uff0c\u82e5\u65e0\u89e3\u5219\u5728\u8f93\u5165 $n$ \u548c $k$ \u540e\u7acb\u5373\u8f93\u51fa `-1 ` \u3002\n\n### \u601d\u8def\uff1a\n\n\u5982\u679c\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u662f $n\\leq 20$\uff0c\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u4f7f\u7528 $O(n\\times2^n)$ \u7684 \u72b6\u538bdp \u627e\u5230\u67e5\u8be2\u6b21\u6570\u6700\u5c11\u7684\u65b9\u6848\u3002\n\n\u4f46\u6211\u4eec\u6709\u5fc5\u8981\u4e00\u4e00\u77e5\u9053\u8fd9 $n$ \u4e2a\u6570\u5f53\u524d\u7684\u72b6\u6001\u5417\uff1f\n\n\u4ee4\u72b6\u6001 $x$ \u8868\u793a\u5f53\u524d\u9009\u4e86 $x$ \u4e2a\u6570\uff0c\u82e5\u6211\u4eec\u5728\u65b0\u7684\u4e00\u6b21\u67e5\u8be2\u4e2d\u9009\u62e9\u4e86 $i$ \u4e2a\u5df2\u9009\u7684\u6570\uff0c\u5219\u4f1a\u8f6c\u79fb\u5230\u72b6\u6001 $x-i+(k-i)$\uff0c\u4e0d\u96be\u53d1\u73b0 $i$ \u7684\u9650\u5236\u6761\u4ef6\u4e3a $0\\leq i\\leq \\min(k,x)$ \u4e14 $(k-i)\\leq(n-x)$\u3002\n\n\u4f7f\u7528 BFS\uff0c\u5728\u8f6c\u79fb\u65f6\u8bb0\u5f55\u524d\u9a71\uff0c\u6700\u540e\u8f93\u51fa\u65b9\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(nk)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ri register int\ntypedef long long ll;\nconst int inf=0x3f3f3f3f,maxn=510;\nint a[maxn],ans,dis[maxn],k,n,pre[maxn],val[maxn],x;\nqueue<int>q;\nvoid dfs(int p){\n\tif(~pre[p])dfs(pre[p]);\n\telse return;\n\tprintf(\"? \");\n\tfor(ri cnt1=val[p],cnt2=k-val[p],i=1;cnt1||cnt2;++i){\n\t\tif(a[i]){\n\t\t\tif(cnt1)a[i]^=1,--cnt1,printf(\"%d \",i);\n\t\t}\n\t\telse{\n\t\t\tif(cnt2)a[i]^=1,--cnt2,printf(\"%d \",i);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\tfflush(stdout);\n\tscanf(\"%d\",&x);\n\tans^=x;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tmemset(dis,0x3f,sizeof dis);\n\tdis[0]=0;\n\tmemset(pre,-1,sizeof pre);\n\tq.push(0);\n\twhile(q.size()){\n\t\tri now=q.front();q.pop();\n\t\tfor(ri i=0;i<=k;++i)\n\t\t\tif(i<=now&&(k-i)<=(n-now)){\n\t\t\t\tri nxt=now-i+(k-i);\n\t\t\t\tif(nxt>0&&nxt<=n&&dis[now]+1<dis[nxt]){\n\t\t\t\t\tdis[nxt]=dis[now]+1;\n\t\t\t\t\tpre[nxt]=now;\n\t\t\t\t\tval[nxt]=i;\n\t\t\t\t\tq.push(nxt);\n\t\t\t\t}\n\t\t\t}\n\t}\n\tif(dis[n]==inf){\n\t\tputs(\"-1\");\n\t\tfflush(stdout);\n\t\treturn 0;\n\t}\n\tdfs(n);\n\tprintf(\"! %d\",ans);\n\tfflush(stdout);\n\treturn 0;\n}\n```\n",
        "postTime": 1623662519,
        "uid": 67942,
        "name": "meyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1534E \u3010Lost Array\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u6709\u610f\u601d\u7684\u4ea4\u4e92\u6784\u9020\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u7b54\u6848\u4e00\u5b9a\u662f\u67e5\u8be2\u7684\u6240\u6709\u6570\u7684\u5f02\u6216\u548c\u3002\u56e0\u4e3a\u5982\u679c\u67e5\u8be2\u67d0\u4e2a\u6570\u800c\u4e0d\u5728\u5f02\u6216\u548c\u5185\uff0c\u90a3\u4e48\u53bb\u6389\u8fd9\u6b21\u67e5\u8be2\u4e00\u5b9a\u66f4\u4f18\u3002\u5982\u679c\u5728\u5f02\u6216\u548c\u5185\u51fa\u73b0\u591a\u6b21\uff0c\u7b49\u4ef7\u4e8e\u51fa\u73b0 $0$ \u6216 $1$ \u6b21\u3002\n\n\u90a3\u4e48\u6bcf\u6b21\u53ef\u4ee5\u5f02\u6216 $k$ \u4e2a\u6570\uff0c\u8fd9 $k$ \u4e2a\u6570\u53ef\u4ee5\u4e0e\u5f53\u524d\u5f02\u6216\u548c\u4e2d\u7684\u6570\u91cd\u5408\u3002\n\n\u4e0d\u96be\u8bbe\u8ba1\u72b6\u6001 $f_{i,j}$ \u8868\u793a\u662f\u5426\u6709\u65b9\u6848\u4f7f\u7528 $i$ \u6b21\u8be2\u95ee\uff0c\u4f7f\u5f97\u5f53\u524d\u5f02\u6216\u548c\u4e2d\u6709 $j$ \u4e2a\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u5f53\u524d\u7684\u8be2\u95ee\u4e0e\u524d\u9762 $j$ \u4e2a\u6570\u4e2d\u6709\u591a\u5c11\u4e2a\u91cd\u5408\u5373\u53ef\u5f97\u5230 $\\mathcal{O}(n^2k)$ \u7684\u8f6c\u79fb\u3002\u8fd9\u5df2\u7ecf\u8db3\u591f\u901a\u8fc7\u8fd9\u9053\u9898\u3002\n\n\u540c\u65f6\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a $j$ \u53ea\u7528\u8bb0\u5f55\u6700\u65e9\u5230\u8fbe\u7684 $i$ \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u81f3 $\\mathcal{O}(nk)$ \u3002\n\n\u6784\u9020\u7b54\u6848\u7684\u65f6\u5019\u7528\u4e24\u4e2a\u6808\u7ef4\u62a4\u5728\u5f02\u6216\u548c\u5185\u7684\u6570\u548c\u4e0d\u5728\u5f02\u6216\u548c\u5185\u7684\u6570\uff0c\u4e0b\u9762\u662f $\\mathcal{O}(n^2k)$ \u7684\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 505\nusing namespace std;\nint n,k,f[N][N],g[N][N],ans;\nint s[N],T,sta[N],top,rub[N],tt;\nvoid calc(){\n\tint cur=n;\n\tpre(i,ans,1){\n\t\ts[++T]=g[i][cur];\n\t\tcur-=k-s[T]*2;\n\t}\n\tint sum=0;\n\trep(i,1,n)sta[++top]=i;\n\tpre(i,T,1){\n\t\tprintf(\"? \");\n\t\tvector<int>w;\n\t\trep(j,1,s[i])printf(\"%d \",rub[tt]),w.push_back(rub[tt--]);\n\t\trep(j,1,k-s[i])printf(\"%d \",rub[++tt]=sta[top--]);\n\t\trep(j,1,s[i])sta[++top]=w[j-1];\n\t\tcout<<endl;\n\t\tint x;cin>>x;\n\t\tsum^=x;\n\t}\n\tcout<<\"! \"<<sum<<endl;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tf[0][0]=1;\n\trep(i,1,n){\n\t\trep(j,0,n-1)if(f[i-1][j]){\n\t\t\tfor(int w=0;w<=min(k,j);w++)if((n-j)>=(k-w)&&j+k-w*2<=n)\n\t\t\t\tf[i][j+k-w*2]=1,g[i][j+k-w*2]=w;\n\t\t}\n\t\tif(f[i][n]){\n\t\t\tans=i;calc();return 0;\n\t\t}\n\t}\n\tputs(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1623767357,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1534E Lost Array"
    }
]