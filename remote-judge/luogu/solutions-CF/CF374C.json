[
    {
        "content": "\u8fd9\u7b97\u662fCF\u4e0a\u9762\u6bd4\u8f83\u6c34\u7684\u4e00\u9053C\u9898\u4e86\u5427\u3002\n\n\u601d\u8def\u633a\u591a\u7684\uff0c\u53ef\u4ee5\u5efa\u8fb9\u8dd1\u6700\u957f\u8def\uff08Spfa\uff09\uff0c\u6216\u662f\u8dd1Dag\u4e0a\u7684DP\uff0c\u8fd9\u91cc\u63d0\u4f9bDFS\u7684\u7b97\u6cd5\u3002\n\n~~\u867d\u8bf4\u662fDFS\uff0c\u4f46\u5176\u5b9e\u7528\u4e86\u8bb0\u5fc6\u5316\u6765\u526a\u679d\u3002~~\n\n\n\n------------\n### \u9996\u5148\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u8d70\u8fc7\u7684DIMA\uff1a \n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5728dfs\u7684\u65f6\u5019\u4f20\u5165\u4e00\u4e2astep\u53d8\u91cf\uff0c\u5373\u5f53\u524d\u8d70\u4e86\u591a\u5c11\u6b65\u3002\u987a\u4fbf\u5c31\u53ef\u4ee5\u7edf\u8ba1\u7b54\u6848\u4e86\uff0c\u8bb0ans\u4e3a\u9664\u4ee54\u4e4b\u524d\u7684\u7b54\u6848\uff0c\u6bcf\u6b21\u66f4\u65b0ans = max(ans, dis[now])\u3002\n\n### \u5176\u6b21\u8003\u8651\u5982\u4f55\u5224\u65ad\u662f\u5426\u8d70\u8fc7\u73af\uff1a\n\n\u6700\u7b80\u5355\u800c\u901a\u7528\u7684\u65b9\u6cd5\u5c31\u662f\u8bb0vis\u6570\u7ec4\u4e86\uff0c\u5982\u679c\u5728DFS\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u5df2\u7ecf\u8d70\u8fc7\u7684\u70b9\u5e76\u4e14\u53ef\u4ee5\u5f80\u90a3\u4e2a\u70b9\u8d70\uff0c\u5f88\u660e\u663e\u5c31\u4f1a\u8d70\u5230\u73af\u91cc\uff0c\u8fd9\u65f6\u5019\u5c06\u5168\u5c40\u53d8\u91cfflag\u6539\u53d8\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u4e86\u3002\n\n### \u63a5\u4e0b\u6765\u662f\u4e00\u4e9b\u7ec6\u8282\u548c\u4f18\u5316\uff1a\n\n\u5728\u8dd1DFS\u4e4b\u524d\uff0c\u9884\u5904\u7406\u5730\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u7f16\u53f7\u5e76\u9884\u5904\u7406\u5efa\u8fb9\uff0c\u8fd9\u6837\u5728DFS\u7684\u65f6\u5019\u5c31\u4e0d\u7528\u518d\u5faa\u73af\u589e\u91cf\u6570\u7ec4\u4e86\u3002\u53e6\u5916\u5982\u679c\u5f53\u524d\u7684\u70b9\u66fe\u7ecf\u8bbf\u95ee\u8fc7\u5e76\u4e14\u8bb0\u5f55\u7684dis\u503c\u6bd4\u5f53\u524d\u7684step\u5927\uff0c\u5c31\u8bc1\u660e\u4ece\u8fd9\u4e2a\u70b9\u5f80\u4e0a\u8d70\u4f1a\u6709\u66f4\u4f18\u89e3\uff0c\u76f4\u63a5return\u5373\u53ef\uff0c\u80fd\u6709\u6548\u8282\u7701\u65f6\u95f4\u3002\n\n\u6700\u540e\u7b54\u6848\u4e0d\u8981\u5fd8\u4e86\u9664\u4ee54\u54e6~\n\n**\u4ee3\u7801\u5982\u4e0b\uff1a**\n```cpp\n#pragma optimize GCC (\"O2\")\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N = 1000000 + 233;\nconst int M = 1000 + 23;\nint n, m;\nint xx[4] = {1, -1, 0, 0};\nint yy[4] = {0, 0, 1, -1};\nchar s[M][M];\nint id[M][M];\nint dis[N];\nint head[N], point[N << 2], nxt[N << 2], size;\nint vis[N];\nbool flag = false;\n\nvoid init() {\n    size = 0;\n    memset(head, -1, sizeof(head));\n    memset(dis, 0, sizeof(dis));\n    memset(vis, 0, sizeof(vis));\n    flag = false;\n}\n\nvoid add(int a, int b) {\n    point[size] = b;\n    nxt[size] = head[a];\n    head[a] = size++;\n}\n\nvoid dfs(int s) {\n    if(dis[s]) return;\n    vis[s] = 1;\n    dis[s] = 1;\n    for(int i = head[s]; ~ i; i = nxt[i]) {\n        int j = point[i];\n        if(vis[j]) {\n\t\t\tflag = true;\n\t\t\tvis[s] = 0;\n\t\t\treturn;\n\t\t}\n        dfs(j);\n        if(flag) {\n\t\t\tvis[s] = 0;\n\t\t\treturn;\n\t\t}\n        dis[s] = max(dis[s], dis[j] + 1);\n    }\n    vis[s] = 0;\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i++) scanf(\"%s\", s[i] + 1);\n    int cnt = 0;\n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++)\n            id[i][j] = ++cnt;\n    init();\n    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= m; j++) {\n            for(int k = 0; k < 4; k++) {\n                int dx = i + xx[k];\n                int dy = j + yy[k];\n                if(dx < 1 || dx > n || dy < 1 || dy > m) continue;\n                if(s[i][j] == 'D' && s[dx][dy] == 'I') add(id[i][j], id[dx][dy]);\n                if(s[i][j] == 'I' && s[dx][dy] == 'M') add(id[i][j], id[dx][dy]);\n                if(s[i][j] == 'M' && s[dx][dy] == 'A') add(id[i][j], id[dx][dy]);\n                if(s[i][j] == 'A' && s[dx][dy] == 'D') add(id[i][j], id[dx][dy]);\n            }\n        }\n    }\n    int ans = 0;\n    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= m; j++) {\n            if(s[i][j] != 'D') continue;\n            dfs(id[i][j]);\n            if(flag == true){\n                printf(\"Poor Inna!\\n\");\n                return 0;\n            }\n            if(dis[id[i][j]] > ans) ans = dis[id[i][j]];\n        }\n    }\n    ans /= 4;\n    if(ans) printf(\"%d\\n\", ans);\n    else printf(\"Poor Dima!\\n\");\n    return 0;\n}\n```\n\n\u6700\u540e\u5b89\u5229\u4e00\u4e0b[Battereamer\u7684\u535a\u5ba2](http://www.cepheusmg.pro/)\uff0c\u867d\u7136\u8fd9\u9053\u9898\u5e94\u8be5\u6ca1\u4ec0\u4e48\u4eba\u770b\u3002\u3002\u3002\n\n\u4f46\u6211\u76f8\u4fe1\u5b83\u4f1a\u706b\u7684\u3002",
        "postTime": 1541511551,
        "uid": 68112,
        "name": "Battereamer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF374C \u3010Inna and Dima\u3011"
    },
    {
        "content": "# \u9898\u610f\u7b80\u8ff0\uff1a\n\u4ee5\u5730\u56fe\u4e0a\u6bcf\u4e2a\u4e3aD\u7684\u683c\u5b50\u4e3a\u8d77\u70b9\uff0c\u6309\u7167DIMA\u7684\u987a\u5e8f\u4f9d\u6b21\u4e0a\u4e0b\u5de6\u53f3\u8d70\uff0c\u6c42\u51fa\u6700\u591a\u80fd\u8d70\u5b8c\u591a\u5c11\u4e2a\u5b8c\u6574\u7684DIMA\u540d\u5b57\u3002\n\n# Solution:\n\n\u4e0d\u662f\u6211\u8bf4\uff0c\u8fd9\u771f\u662f\u4e00\u9053\u597d\u9898\u3002\n\n\u770b\u89c1\u9898\u9762\u6700\u957f\u8def\u5f84\uff0c\u8fd8\u8ba9\u6211\u4eec\u5224\u65ad\u6709\u6ca1\u6709\u65e0\u9650\u8d70\u4e0b\u53bb\u7684\u60c5\u51b5\uff0c\u8fd9\u663e\u7136\u7ed9\u4e86\u6211\u4eec\u6697\u793a\uff0c\u53ef\u4ee5 $SPFA$ \u8dd1\u6700\u957f\u8def\u3002\n\n\u5982\u4f55\u5efa\u56fe\u5462\uff1f\u7531\u4e8e\u6bcf\u6b21\u53ea\u80fd\u6309\u7167DIMA\u7684\u987a\u5e8f\u884c\u8d70\uff0c\u6709\u975e\u5e38\u660e\u663e\u7684\u884c\u8d70\u8fc7\u7a0b\uff0c\u4e8e\u662f\u6211\u4eec\u904d\u5386\u4e00\u904d\u6574\u4e2a\u5730\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u683c\u5b50\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8d70\u5230\u65c1\u8fb9\u7684\u683c\u5b50\uff0c\u5982\u679c\u80fd\u8d70\u5230\uff0c\u5c31\u4ece\u5f53\u524d\u683c\u5b50\u5411\u65c1\u8fb9\u683c\u5b50\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u4f46\u5982\u4f55\u77e5\u9053\u5f53\u524d\u683c\u5b50\u4ee3\u8868\u70b9\u7684\u7f16\u53f7\u5462\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u7528\u884c\u5217\u8fdb\u884c\u7f16\u53f7\uff0c\u6309\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5f80\u53f3\u7684\u987a\u5e8f\u6570\uff0c\u6570\u5230\u7b2c\u51e0\u4e2a\uff0c\u7f16\u53f7\u5c31\u662f\u5bf9\u5e94\u7684\u6570\u7684\u4e2a\u6570\u3002\u4e00\u822c\u5730\uff0c\u5728 $N$ \u884c $M$ \u5217\u7684\u5730\u56fe\u4e2d\uff0c\u6709\u4e00\u4e2a\u5750\u6807\u4e3a $(i,j)$ \u7684\u70b9\uff0c\u90a3\u4e48\u7f16\u53f7\u5c31\u662f $(i-1)m+j$ \u3002\n\n\u89e3\u51b3\u4e86\u5efa\u56fe\u7684\u95ee\u9898\uff0c\u81ea\u7136\u5c31\u53ef\u4ee5\u8dd1\u6700\u957f\u8def\u4e86\uff0c\u5982\u679c\u51fa\u73b0\u73af\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u51fa\u73b0\u4e86\u6c38\u8fdc\u8d70\u4e0b\u53bb\u7684\u60c5\u51b5\uff0c\u5224\u65ad\u5373\u53ef\uff0c\u4f46\u8fd9\u6837\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u8dd1\u6700\u957f\u8def\u65f6\u6bcf\u6b21\u90fd\u9700\u8981memset\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(N^3)$ \u7684\uff0c\u5bf9\u4e8e\u672c\u9898\u6570\u636e $N,M=10^3$ \uff0c\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\n\n\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u89e3\u51b3\u672c\u9898\uff0c\u5c31\u662f $DFS$ \uff0c\u8dd1\u6700\u957f\u8def\u6539\u4e3a $DFS$ \u540e\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u70b9\u662f\u5426\u8bbf\u95ee\u8fc7\uff0c\u5982\u679c\u8bbf\u95ee\u5230\u4e00\u4e2a\u5df2\u7ecf\u8bbf\u95ee\u7684\u70b9\uff0c\u90a3\u4e48\u8bf4\u660e\u5b58\u5728\u73af\u3002\n\n\u6700\u540e\u627e\u51fa\u6bcf\u4e2a\u8d77\u70b9\uff0c\u7528 $DFS$ \u641c\u7d22\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(N^2)$ \u3002\n\n\u597d\u4e86\uff0c\u8fd9\u9053\u76f4\u5954\u4e3b\u9898\u7684 $DFS$ \u9898\u76ee\u5c31\u8fd9\u6837\u7ed3\u675f\u4e86\uff0c\u4e0b\u9762\u4e0a\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000005\nusing namespace std;\nint bj,ans,path[N],c,st[N],cnt[N],vis[N],que[N],num,n,m,first[N],nex[4*N],f[1005][1005],v[4*N];\nint dt[4][4]={{1,0},{0,1},{-1,0},{0,-1}};\nchar a[1005][1005];\nint S(char ch) //\u8fd9\u662f\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u8f6c\u5316\u6210\u6570\u5b57\u65b9\u4fbf\u5904\u7406 \n{\n\tif(ch=='D') return 1;\n\tif(ch=='I') return 2;\n\tif(ch=='M') return 3;\n\tif(ch=='A') return 4;\n}\nint F(int x,int y)\n{\n\treturn (x-1)*m+y;\n}\nvoid Add(int s,int e)\n{\n\tnex[++num]=first[s];\n\tfirst[s]=num;\n\tv[num]=e;\n}\nint pd(int x)\n{\n\tif(x==4) return 1;\n\telse return x+1;\n}\nvoid dfs(int s) \n{\n    if(path[s]) return;\n    vis[s]=1;\n    path[s]=1;\n    for(int i=first[s];i!=-1;i=nex[i]) \n\t{\n        int j=v[i];\n        if(vis[j]) \n\t\t{\n\t\t\tbj=1;\n\t\t\tvis[s]=0;\n\t\t\treturn;\n\t\t}\n        dfs(j);\n        if(bj==1)\n\t\t{\n\t\t\tvis[s]=0;\n\t\t\treturn;\n\t\t}\n        path[s]=max(path[s],path[j]+1);\n    }\n    vis[s]=0;\n}\nint main()\n{\n\tmemset(first,-1,sizeof(first));\n\tcin>>n>>m;\n\tgetchar();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t\tfor(int j=0;j<=strlen(a[i])-1;j++)\n\t\t{\n\t\t\tf[i][j+1]=S(a[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tfor(int k=0;k<=3;k++) \n\t\t\t{\n                int dx=i+dt[k][0];\n                int dy=j+dt[k][1];\n                if(dx<1||dx>n||dy<1||dy>m) continue;              \n                if(pd(f[i][j])==f[dx][dy]) Add(F(i,j),F(dx,dy));\n            }\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(f[i][j]!=1) continue;\n\t\t\tdfs(F(i,j));\n\t\t    if(bj==1)\n\t\t    {\n\t\t\t   cout<<\"Poor Inna!\";\n\t\t\t   return 0;\n\t\t    }\n\t\t    if(path[F(i,j)]>ans) ans=path[F(i,j)];\n\t\t}\t\n\t}\n\tans=ans/4;//\u4e0d\u8981\u5fd8\u8bb0\u9664\u4ee54\uff01 \n    if(ans!=0) printf(\"%d\",ans);\n    else printf(\"Poor Dima!\");\n\treturn 0;\n}\n```\n",
        "postTime": 1597481572,
        "uid": 213256,
        "name": "Constant",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF374C \u3010Inna and Dima\u3011"
    },
    {
        "content": "## [\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF374C)\n\n### \u89e3\u51b3\u601d\u8def\n\n\u672c\u9898\u662f\u627e\u6700\u957f\u8def\u7684\u56fe\u4e0a\u95ee\u9898\uff0c\u6240\u4ee5\u5148\u8003\u8651\u5982\u4f55\u5efa\u56fe\u3002\n\n\u9996\u5148\u628a\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u679a\u4e3e\u56db\u4e2a\u65b9\u5411\uff0c\u5982\u679c\u6709\u4e0b\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c31\u5411\u90a3\u4e2a\u70b9\u5efa\u4e00\u6761\u8fb9\uff0c\u53ef\u4ee5\u7528 $vector$ \u5b58\u56fe\u6bd4\u8f83\u65b9\u4fbf\u3002\u7528\u6570\u5b57\u6807\u53f7\uff0c\u53ea\u9700\u8981\u5224\u65ad $t_{x2,y2}=(t_{x1,y1}+1)\\mod 4$ \u662f\u5426\u6210\u7acb\u5373\u53ef\uff0c\u4f46\u76f4\u63a5\u7528\u5b57\u6bcd\u5224\u65ad\u4e5f\u662f\u6bd4\u8f83\u65b9\u4fbf\u7684\u3002\n\n\u7136\u540e\u8003\u8651 $\\text{dfs}$ \u641c\u7d22\u53ef\u4ee5\u8d70\u7684\u6700\u957f\u8def\u3002\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\n\n- \u5f00\u59cb\u641c\u7d22\u7684\u70b9\u4e00\u5b9a\u662f `D`\u3002\n\n- \u5df2\u7ecf\u66f4\u65b0\u8fc7\u7b54\u6848\u7684\u70b9\u5c31\u4e0d\u7528\u641c\u4e86\uff0c\u76f4\u63a5 $\\text{return}$\uff0c\u4e5f\u7b97\u4e00\u4e2a\u526a\u679d\u8fc7\u7a0b\u3002\n\n- \u53ef\u4ee5\u9009\u65e0\u6570\u4e2a\u70b9\u7684\u60c5\u51b5\u5c31\u662f\u51fa\u73b0\u73af\u4e86\u3002\u6240\u4ee5\u9700\u8981 $vis$ \u6570\u7ec4\u6807\u8bb0\u672c\u6b21\u641c\u7d22\u7ecf\u8fc7\u7684\u70b9\uff0c\u5982\u679c\u8d70\u5230\u5df2\u7ecf\u8d70\u8fc7\u7684\u70b9\uff0c\u76f4\u63a5\u8f93\u51fa `Poor Inna!` \u7ed3\u675f\u7a0b\u5e8f\u3002\u540c\u65f6\u56de\u6eaf\u65f6\u8bb0\u5f97\u8981\u628a $vis$ \u6e05\u7a7a\u3002\n\n- \u641c\u7d22\u65f6\u7b54\u6848\u8bb0\u5f55\u4e3a\u8d70\u8fc7\u7684\u70b9\u6570\u6bd4\u8f83\u65b9\u4fbf\u3002\u56e0\u4e3a\u4ece `D` \u5f00\u59cb\uff0c\u6240\u4ee5\u8bb0 $ans=\\max\\{dis_{i,j}\\}$\u3002\u6700\u540e\u82e5 $ans<4$ \u5373\u8f93\u51fa `Poor Dima!`\uff0c\u5426\u5219 $ans \\div 4$ \u5c31\u662f `DIMA` \u7684\u6570\u91cf\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u901a\u8fc7\u672c\u9898\u4e86\u3002\n\n### AC Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,t[1005][1005],dis[1005][1005],ans;\nbool vis[1005][1005];\nchar c;\nint X[4]={0,0,1,-1},Y[4]={1,-1,0,0};\nstruct node{\n\tint x,y;\n};\nvector<node> a[1005][1005];\nvoid read(){\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tcin>>c;\n\t\t\tif(c=='D') t[i][j]=0;\n\t\t\tif(c=='I') t[i][j]=1;\n\t\t\tif(c=='M') t[i][j]=2;\n\t\t\tif(c=='A') t[i][j]=3;\n\t\t}\n\t}\n} \nbool cango(int x1,int y1,int x2,int y2){   //\u80fd\u4e0d\u80fd\u8d70\n\tif(t[x2][y2]==(t[x1][y1]+1)%4) return 1;\n\treturn 0;\n}\nvoid build(){   //\u5efa\u56fe\u90e8\u5206\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tfor(int z=0;z<4;z++){\n\t\t\t\tint xx=i+X[z],yy=j+Y[z];\n\t\t\t\tif(xx>n||xx<1||yy>m||yy<1) continue;\n\t\t\t\tif(cango(i,j,xx,yy)) a[i][j].push_back({xx,yy});\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dfs(int sx,int sy){    //dfs\n\tif(dis[sx][sy]) return;\n    vis[sx][sy]=1;\n    dis[sx][sy]=1;\n    for(int i=0;i<a[sx][sy].size();i++){\n        int jx=a[sx][sy][i].x,jy=a[sx][sy][i].y;\n        if(vis[jx][jy]){    //\u51fa\u73b0\u73af\n\t\t\tprintf(\"Poor Inna!\");\n\t\t\texit(0);\n\t\t}\n        dfs(jx,jy);\n        dis[sx][sy]=max(dis[sx][sy],dis[jx][jy]+1);\n        ans=max(ans,dis[sx][sy]);\n    }\n    vis[sx][sy]=0;  //vis\u6e05\u96f6\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tread();\n\tbuild();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++) if(!t[i][j]) dfs(i,j); //\u5bf9\u6bcf\u4e00\u4e2aD\u641c\u7d22\n\t}\n\tif(ans<4) printf(\"Poor Dima!\");\n\telse printf(\"%d\",ans/4);\n\treturn 0;\n}\n```",
        "postTime": 1663328998,
        "uid": 241485,
        "name": "Binary_1110011_",
        "ccfLevel": 6,
        "title": "CF374C \u9898\u89e3"
    },
    {
        "content": "\u7b80\u5355\u641c\u7d22\u9898\u3002\n\n\u5b9a\u4e49 $f_{i,j}$ \u8868\u793a\u4ece $(i,j)$ \u5f00\u59cb\u8d70\uff0c\u6700\u591a\u80fd\u8d70\u51e0\u4e2a\u70b9\u3002\n\n\u6bcf\u6b21\u904d\u5386\u56db\u4e2a\u65b9\u5411\uff0c\u770b\u90a3\u4e2a\u80fd\u8d70\uff0c\u53d6\u6700\u5927\u503c\u518d\u52a0\u4e00\u5373\u53ef\u3002\n\n\u5982\u679c\u8d70\u5230\u4e86\u4e4b\u524d\u8d70\u8fc7\u7684\u70b9\uff0c\u8bf4\u660e\u53ef\u4ee5\u65e0\u9650\u8d70\u4e0b\u53bb\u3002\n\n\u6700\u540e\u628a\u6b65\u6570\u9664\u4ee5 $4$ \u8f93\u51fa\u3002\n\n\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1000+5;\nint n,m,f[N][N],dx[]={0,0,-1,1},dy[]={-1,1,0,0};\nbool vis[N][N];\nchar c[N][N];\nmap<char,char>mp;\nint dfs(int i,int j){\n  if(vis[i][j]){\n    cout<<\"Poor Inna!\"<<endl;\n    exit(0);\n  }\n  if(f[i][j])return f[i][j];\n  vis[i][j]=1;\n  int maxn=0;\n  for(int k=0;k<4;++k){\n    int x=i+dx[k],y=j+dy[k];\n    if(x<1||y<1||x>n||y>m||c[x][y]!=mp[c[i][j]])continue;\n    maxn=max(maxn,dfs(x,y));\n  }\n  vis[i][j]=0;\n  return f[i][j]=1+maxn;\n}\nint main(){\n  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n  cin>>n>>m;\n  mp['D']='I';mp['I']='M';mp['M']='A';mp['A']='D';\n  for(int i=1;i<=n;++i)for(int j=1;j<=m;++j)cin>>c[i][j];\n  int ans=0;\n  for(int i=1;i<=n;++i){\n    for(int j=1;j<=m;++j){\n      if(c[i][j]=='D'){\n        ans=max(ans,dfs(i,j));\n      }\n    }\n  }\n  if(ans<4)cout<<\"Poor Dima!\"<<endl;\n  else cout<<ans/4<<endl;\n  return 0;\n}\n\n```\n",
        "postTime": 1684217835,
        "uid": 173864,
        "name": "EstasTonne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF374C"
    },
    {
        "content": "> \u7ed9\u51fa $n$ \u884c $m$ \u5217\u7684\u5730\u56fe\uff0c\u6bcf\u4e2a\u683c\u5b50\u90fd\u6709\u56db\u4e2a\u5b57\u6bcd `D` `I` `M` `A`\uff0c\u6bcf\u6b21\u90fd\u4ece `D` \u5f00\u59cb\u8d70\uff0c\u80fd\u8d70\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\uff0c\u95ee\uff1a\u80fd\u5426\u8d70\u5b8c\u56db\u4e2a\u5b57\u6bcd\uff0c\u82e5\u53ef\u4ee5\uff0c\u6700\u591a\u80fd\u8d70\u591a\u5c11\u6b21\u6216\u8005\u80fd\u5426\u8d70\u65e0\u9650\u6b21\u3002\n\n\u5176\u5b9e\u601d\u8def\u8fd8\u633a\u597d\u60f3\u7684\u3002\n\n\u679a\u4e3e\u6574\u4e2a\u5730\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5982\u679c\u5b83\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u6709\u5b83\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\uff08`A` \u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u662f `D`\uff09\uff0c\u5c31\u8ba9\u5b83\u548c\u5b83\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u89e3\u51b3\u5b8c\u5efa\u56fe\u4e4b\u540e\uff0c\u5c31\u5728\u56fe\u4e0a\u8dd1 DFS\uff0c\u5206\u522b\u8bbe $vis_i$ \u548c $step_i$ \u4e3a\u70b9 $i$ \u662f\u5426\u8bbf\u95ee\u8fc7\u548c\u4ece $i$ \u70b9\u5f00\u59cb\u6700\u591a\u80fd\u8d70\u591a\u5c11\u6b65\u3002\n\n\u4ece\u6bcf\u4e2a `D` \u5f00\u59cb\u904d\u5386\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u70b9\u88ab\u904d\u5386\u8fc7\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u6709\u73af\uff0c\u76f4\u63a5\u9000\u51fa\uff0c\u5426\u5219\u66f4\u65b0 $step$ \u6570\u7ec4\u3002\n\n\u6700\u540e\u66f4\u65b0\u7b54\u6848\uff0c\u6709 $ans=\\max\\limits_{i\\ for\\ every\\ D}\\{step_i\\}$\u3002\n\n$\\texttt{Code:}$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define rint register int\nusing namespace std;\nnamespace IO{\n\t#define File(x,y) freopen(#x,\"r\",stdin),freopen(#y,\"w\",stdout);\n\tinline int read(){\n\t\tint w=0,f=1; char ch=getchar();\n\t\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\t\twhile(ch>='0'&&ch<='9'){w=(w<<3)+(w<<1)+(ch^48); ch=getchar();}\n\t\treturn w*f;\n\t}\n\tinline void write(int x){\n  \t\tstatic int sta[35]; int top=0;\n  \t\tdo{sta[++top]=x%10,x/=10;}while(x);\n  \t\twhile(top) putchar(sta[top--]+48); puts(\"\");\n\t}\n}\nusing namespace IO;\nnamespace CL{\n\t#define fill(x,y) memset(x,y,sizeof(x))\n\t#define copy(x,y) memcpy(y,x,sizeof(x))\n\t\n\tconst int maxn=1e3+5;\n\t\n\tint n,m,tot,ans;\n\tint mp[maxn][maxn],uid[maxn][maxn],step[maxn*maxn],d[5][2]={{1,0},{0,1},{-1,0},{0,-1}};\n\tbool vis[maxn*maxn];\n\tnamespace Graph{// \u5efa\u56fe\n\t\tint head[maxn*maxn],id;\n\t\tstruct e{int v,next;}edge[maxn*maxn<<1];\n\t\tinline void add(int u,int v){\n\t\t\tedge[++id].v=v;\n\t\t\tedge[id].next=head[u];\n\t\t\thead[u]=id;\n\t\t}\n\t}using namespace Graph;\n\tinline int get(char ch){// \u5c06\u5b57\u6bcd\u8f6c\u4e3a\u6570\u5b57\u4fbf\u4e8e\u64cd\u4f5c\n\t\tif(ch=='D') return 1;\n\t\tif(ch=='I') return 2;\n\t\tif(ch=='M') return 3;\n\t\tif(ch=='A') return 4;\n\t}\n\tvoid dfs(int u){\n\t\tif(step[u]) return;// \u8bb0\u5fc6\u5316\n\t\tvis[u]=1; step[u]=1;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v;\n\t\t\tif(vis[v]){puts(\"Poor Inna!\"); exit(0);}// \u6709\u73af\uff0c\u76f4\u63a5\u8f93\u51fa\n\t\t\tdfs(v);\n\t\t\tstep[u]=max(step[u],step[v]+1);// \u6700\u957f\u8def\n\t\t}\n\t\tvis[u]=0;\n\t}\n\t\n\tinline int main(){\n\t\tn=read(); m=read();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tchar ch; cin>>ch;\n\t\t\t\tmp[i][j]=get(ch);\n\t\t\t\tuid[i][j]=++tot;// \u6bcf\u4e2a\u683c\u5b50\u7684\u7f16\u53f7\n\t\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tfor(int k=0;k<4;k++){\n\t\t\t\t\tint tx=i+d[k][0],ty=j+d[k][1];\n\t\t\t\t\tif(tx<1 || tx>n || ty<1 || ty>m) continue;\n\t\t\t\t\tif(mp[tx][ty]==mp[i][j]+1 || (mp[tx][ty]==1 && mp[i][j]==4))\n\t\t\t\t\t\tadd(uid[i][j],uid[tx][ty]);// \u5982\u679c\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u6709\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u5c31\u8fde\u8fb9\n\t\t\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tif(mp[i][j]!=1) continue;\n\t\t\t\tdfs(uid[i][j]);\n\t\t\t\tans=max(ans,step[uid[i][j]]);\n\t\t\t}\n\t\tans/=4;\n\t\tif(ans) printf(\"%d\\n\",ans);\n\t\telse puts(\"Poor Dima!\");\n\t\treturn 0;\n\t}\n}\nsigned main(){return CL::main();}\n```",
        "postTime": 1625956265,
        "uid": 226113,
        "name": "\u706b\u7fbd\u767d\u65e5\u751f",
        "ccfLevel": 0,
        "title": "\u300c\u9898\u89e3\u300dCF374C Inna and Dima"
    }
]