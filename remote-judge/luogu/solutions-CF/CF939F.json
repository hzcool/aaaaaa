[
    {
        "content": "### \u9898\u610f:\n\n\u6709$2\\times n$\u7684\u65f6\u95f4\u53bb\u714e\u4e00\u5757\u4e24\u9762\u7684\u8089\n\n\u7ed9\u4f60$k$\u4e2a\u4e0d\u76f8\u4ea4\u65f6\u95f4\u533a\u95f4$[l_i,r_i]$ \n\n\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e9b\u533a\u95f4\u7684\u65f6\u95f4\u5185\u4efb\u610f\u6b21\u7ffb\u8f6c\u8fd9\u5757\u8089\n\n\u95ee\u662f\u5426\u5b58\u5728\u5408\u6cd5\u7684\u65b9\u6848\u4f7f\u5f97\u4e24\u9762\u6070\u597d\u90fd\u53ea\u714e\u4e86$n$\u5206\u949f\n\n\u6c42\u6700\u5c11\u7ffb\u8f6c\u6b21\u6570\n\n$n\\le10^5,k\\le100$ \n\n---\n\u8003\u8651\u66b4\u529b$DP,f_{i,j}$\u8868\u793a\u524d$i$\u79d2,\u6ca1\u6709\u88ab\u70e4\u7684\u90a3\u4e00\u9762(\u7b80\u79f0\u4e3a\u5bf9\u9762,\u53e6\u4e00\u9762\u79f0\u6b63\u9762)\u88ab\u70e4\u4e86$j$\u79d2\u7684\u6700\u5c11\u7ffb\u8f6c\u6b21\u6570\n\n$f_{i,j}=f_{i-1,j}$\u4e0d\u7ffb\u8f6c,\u4e0a\u4e00\u4e2a\u72b6\u6001\u5bf9\u9762\u8fd8\u662f\u53ea\u70e4\u4e86$j$\u79d2\n\n$f_{i,j}=f_{i-1,i-j}+1$\u7ffb\u8f6c,\u5f53\u524d\u72b6\u6001\u7684\u6b63\u9762\u662f\u4e0a\u4e00\u4e2a\u72b6\u6001\u7684\u6b63\u9762,\u603b\u65f6\u95f4\u662f$i,$\u5f53\u524d\u5bf9\u9762\u70e4\u4e86$j$\u79d2,\u90a3\u4e48\u6b63\u9762\u5c31\u70e4\u4e86$i-j$\u79d2\n\n\u8fd9\u4e2a\u66b4\u529b\u663e\u7136\u662f$O(n^2)$\u7684,\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\u53ea\u80fd\u5728$[l,r]$\u5185\u53d1\u751f\n\n---\n\u53ef\u4ee5\u53d1\u73b0$O(nk)$\u662f\u53ef\u4ee5\u8fc7\u7684,\u5e76\u4e14\u4e0a\u4e00\u4e2a$DP$\u4e2d\u7b2c\u4e00\u4e2a\u8f6c\u79fb\u51e0\u4e4e\u662f\u6ca1\u6709\u7528\u7684,\u4e2d\u95f4\u533a\u95f4\u5916\u7684\u7a7a\u6321\u662f\u4e00\u8def\u590d\u5236\u8fc7\u53bb\u7684\n\n\u7136\u540e\u6240\u6709\u7684\u533a\u95f4\u53c8\u6ca1\u6709\u4ea4\u96c6,\u8bbe\u7b2c$i$\u533a\u95f4\u53f3\u7aef\u70b9\u662f$r$,\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u4e00\u79cd$DP,f_{i,j}$\u8868\u793a\u524d$r$\u79d2,\u5bf9\u9762\u70e4\u4e86$j$\u79d2\u7684\u6700\u5c11\u7ffb\u8f6c\u6b21\u6570\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u60f3\u5230,\u5728\u4e00\u4e2a\u533a\u95f4\u91cc\u6211\u4eec\u6700\u591a\u7ffb\u8f6c\u4e24\u6b21,\u591a\u7684\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7ffb\u4e00\u6b21\u6216\u8005\u4e24\u6b21\n\n#### \u53ea\u7ffb\u4e00\u6b21\n\n\u679a\u4e3e\u4e00\u4e2a\u65f6\u95f4$k$,\u8868\u793a\u7ffb\u8f6c\u8fc7\u540e\u7684\u6b63\u9762\u591a\u70e4\u4e86$k$\u79d2,$k\\le r-l$\n\n\u8003\u8651$f_{i,j}$\u7531\u4ec0\u4e48\u8f6c\u79fb\u8fc7\u6765\n\n\u5f53\u524d\u65f6\u95f4\u662f$r$,\u90a3\u4e48\u5f53\u524d\u6b63\u9762\u5c31\u70e4\u4e86$r-j$\u79d2,\u56e0\u4e3a\u591a\u70e4\u4e86$k$\u79d2\n\n\u6240\u4ee5\u7ffb\u8f6c\u70b9\u6b63\u9762\u5c31\u70e4\u4e86$r-j-k$\u79d2,\u53c8\u7ffb\u8f6c\u4e4b\u524d\u5f53\u524d\u6b63\u9762\u662f\u5bf9\u9762\n\n$f_{i,j}=min\\{f_{i-1,r-j-k}\\}+1$\n\n\u8003\u8651\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u6700\u4f18\u51b3\u7b56\u70b9$p=r-j-k$\n\n\u5f53$k\\gt r-l\\Rightarrow p\\lt r-j-(r-l)=l-j$\u65f6\u5c31\u4e0d\u5408\u6cd5\u4e86,\u5e76\u4e14\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u662f\u8981\u5012\u63a8\u7684\n\n#### \u7ffb\u8f6c\u4e24\u6b21\n\n\u540c\u6837\u679a\u4e3e\u4e00\u4e2a\u65f6\u95f4$k$\u8868\u793a\u7ffb\u8f6c\u4e4b\u540e\u7684\u6b63\u9762\u70e4\u4e86$k$\u79d2,$k\\le r-l$\n\n\u8003\u8651\u5230\u7ffb\u8f6c\u4e24\u6b21\u76f8\u5f53\u4e8e\u5f53\u524d\u7684\u5bf9\u9762\u7ffb\u8fc7\u53bb\u591a\u70e4\u4e86$k$\u79d2,\u7136\u540e\u53c8\u7ffb\u56de\u6765\u4e86\n\n$\\Rightarrow f_{i,j}=min\\{f_{i-1,j-k}\\}+2$\n\n\u540c\u6837\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u6700\u4f18\u51b3\u7b56\u70b9$p=j-k$\n\n\u5f53$k\\gt r-l\\Rightarrow p\\lt j-(r-l)$\u65f6\u5c31\u4e0d\u5408\u6cd5\u4e86,\u5e76\u4e14\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u662f\u8981\u987a\u63a8\u7684\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a$DP$\u662f\u53ef\u4ee5\u6eda\u52a8\u7684,**\u6ce8\u610f\u6570\u7ec4\u5927\u5c0f**\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nconst int N=2e5+5,inf=1e9;\ntypedef int arr[N];\nint n,k,p;arr q,f[2];\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    sd(n),sd(k);int l,r,h,t;\n    f[0][0]=0;fp(i,1,n)f[0][i]=inf;\n    while(k--){\n    \tsd(l),sd(r);p^=1;h=1,t=0;\n    \tmemcpy(f[p],f[p^1],sizeof f[p]);\n    \tfp(j,0,min(n,r)){\n    \t\twhile(h<=t&&f[p^1][j]<=f[p^1][q[t]])--t;\n    \t\twhile(h<=t&&q[h]<j-(r-l))++h;q[++t]=j;\n    \t\tcmin(f[p][j],f[p^1][q[h]]+2);\n    \t}h=1,t=0;\n    \tfd(j,r,0){\n    \t\twhile(h<=t&&f[p^1][r-j]<=f[p^1][q[t]])--t;\n    \t\twhile(h<=t&&q[h]<l-j)++h;q[++t]=r-j;\n    \t\tcmin(f[p][j],f[p^1][q[h]]+1);\n    \t}\n    }\n    if(f[p][n]^inf)printf(\"Full\\n%d\",f[p][n]);\n    else puts(\"Hungry\");\nreturn 0;\n}\n```",
        "postTime": 1520993278,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF939F \u3010Cutlet\u3011"
    },
    {
        "content": "# \\[ \u52a8\u6001\u89c4\u5212\u00b7\u5355\u8c03\u961f\u5217\u4f18\u5316 \\]\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff1a$1 \\leq n \\leq 10^5,1 \\leq K \\leq 100$ , \u4e0d\u96be\u53d1\u73b0\uff0c$O(nK)$ \u7684\u7b97\u6cd5\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n\u8003\u8651\u6734\u7d20DP\uff1a\n\n\u8bbe $f[i][j]$ \u8868\u793a\u524d $i$ \u5206\u949f\uff0c\u5f53\u524d\u714e\u7684\u662f\u6b63\u9762\uff0c**\u80cc\u9762** \u714e\u4e86 $j$ \u5206\u949f\u7684\u6700\u5c0f\u7ffb\u9762\u6b21\u6570\u3002\n\n\u5219\u6709\uff1a\n$$\nf[i][j]=\\min(f[i-1][j],f[i-1][j-1]+1) (i \u5c5e\u4e8e\u67d0\u4e2a [l,r])\n$$\n\n$$\nf[i][j]=f[i-1][j] (i \u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a [l,r])\n$$\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u533a\u95f4\u4e4b\u95f4\u7684 $i$ \uff0c\u662f\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u7684\u3002\uff08\u80cc\u9762\u714e\u7684\u65f6\u95f4\u4e0d\u53d8\uff09\n\n\u56e0\u6b64\uff0c\u4ee4 $f[i][j]$ \u8868\u793a\u524d $i$ \u4e2a\u533a\u95f4\uff0c\u5230 $r_i$ \u65f6\u95f4\uff0c\u80cc\u9762\u714e\u4e86 $j$ \u5206\u949f\u7684\u6700\u5c0f\u7ffb\u9762\u6b21\u6570\u3002\n\n\u8003\u8651\u5728\u4efb\u610f\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u53ef\u4ee5\u53d1\u73b0\u6700\u591a\u4f1a\u7ffb\u4e24\u6b21\u9762\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u53ea\u7ffb\u4e00\u6b21\u9762\uff1a\n\n* \u679a\u4e3e\u5728\u7ffb\u9762\u524d\u714e\u4e86 $k(k \\leq r-l)$ \u79d2\uff0c\u5219 $f[i][j]=\\min(f[i-1][r-j-k]+1)$\n* \u5373 $j+k$ \u662f\u4e0a\u4e00\u8f6e\u80cc\u9762\uff08\u8fd9\u7ffb\u9762\u540e\u6b63\u9762\uff09\u88ab\u714e\u7684\u79d2\u6570\u3002\u7531\u4e8e $k \\leq r-l$ \u56e0\u6b64 $r-j-k \\geq l-j$ \uff0c\u53ef\u4ee5\u7ef4\u62a4\u5355\u8c03\u961f\u5217\u3002\n\n\u7ffb\u4e24\u6b21\u9762\uff1a\n* \u679a\u4e3e\u714e\u4e86 $k(k\\leq r-l)$ \u79d2\u540e\u53c8\u7ffb\u56de\u53bb\uff0c\u5219 $f[i][j] = \\min(f[i-1][j-k]+2)$ \n* \u5373 \u4e0a\u4e00\u8f6e\u7684\u80cc\u9762\u5230\u8fd9\u4e00\u8f6e\u8fd8\u662f\u80cc\u9762\u3002\u7531\u4e8e $k \\leq r-l$ \u56e0\u6b64 $j-k \\geq j+l-r$ \uff0c\u4e5f\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\n\n\u89c2\u5bdf\u5230\u968f\u7740 $j$ \u9012\u589e\uff0c\u7ffb\u4e00\u6b21\u9762\u7684\u51b3\u7b56\u70b9 $r-j-k$ \u662f\u9012\u51cf\u7684\uff0c\u7ffb\u4e24\u6b21\u9762\u7684\u51b3\u7b56\u70b9 $j-k$ \u662f\u9012\u589e\u7684\uff0c\u56e0\u6b64\uff0c\u8981\u5206\u4e24\u6b21\u7ef4\u62a4\u3002\n\nAC \u4ee3\u7801\n```cpp\n#include<cstring>\n#include<cstdio>\n#define N 100010\n#define INF 0x3f3f3f3f\n#define Min(a,b) (a<b?a:b)\n\nint h,t,q[N<<1];\nint n,K,l,r,f[2][N<<1];\n\nint main(){\n\tmemset(f[0],0x3f,sizeof(f[0])); f[0][0]=0;\n\t\n\tscanf(\"%d%d\",&n,&K);\n\tfor(int i=1;i<=K;++i){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tfor(int j=0;j<=n;++j)\n\t\t\tf[i&1][j]=f[!(i&1)][j];\n\t\th=1; t=0; //\u4e0b\u9762\u679a\u4e3e\u7684\u5bf9\u5e94\u9898\u89e3\u4e2d r-(j+k) \u4e2d j+k \u7684\u503c \n\t\tfor(int j=r;j>=0;--j){ \n\t\t\twhile(h<=t&&q[h]<l-j) ++h;\n\t\t\twhile(h<=t&&f[!(i&1)][q[t]]>f[!(i&1)][r-j]) --t;\n\t\t\tq[++t]=r-j; f[i&1][j]=Min(f[i&1][j],f[!(i&1)][q[h]]+1); \n\t\t}\n\t\th=1; t=0; //\u4e0b\u9762\u679a\u4e3e\u7684\u5bf9\u5e94\u9898\u89e3\u4e2d j-k \u7684\u503c\n\t\tfor(int j=0,mj=Min(n,r);j<=mj;++j){ \n\t\t\twhile(h<=t&&q[h]<j-r+l) ++h;\n\t\t\twhile(h<=t&&f[!(i&1)][q[t]]>f[!(i&1)][j]) --t;\n\t\t\tq[++t]=j; f[i&1][j]=Min(f[i&1][j],f[!(i&1)][q[h]]+2);\n\t\t}\n\t}\n\tif(f[K&1][n]==INF)printf(\"Hungry\\n\");\n\telse printf(\"Full\\n%d\\n\",f[K&1][n]);\n}\n```",
        "postTime": 1606905762,
        "uid": 144648,
        "name": "yc20170111",
        "ccfLevel": 6,
        "title": "CF939F Cutlet"
    },
    {
        "content": "\u597d\u795e\u5947\u7684dp...\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u601d\u60f3\uff1a\u8bbedp[i][j]\u8868\u793a\u76ee\u524d\u5230\u4e86\u7b2ci\u5206\u949f\uff0c\u671d\u4e0a\u7684\u9762\u88ab\u70e4\u4e86j\u5206\u949f\u7684\u60c5\u51b5\u4e0b\u6240\u9700\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\n\n\u90a3\u4e48\u6709\u8f6c\u79fb\uff1adp[i][j]=min(dp[i-1][j],dp[i-1][i-j]+1)\n\n\u8fd9\u4e00\u70b9\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u8ba8\u8bba\u73b0\u5728\u5411\u4e0a\u8fd9\u9762\u4e0a\u4e00\u5206\u949f\u7684\u72b6\u6001\uff1a\u5982\u679c\u4e0a\u4e00\u5206\u949f\u8fd9\u4e00\u9762\u4e5f\u671d\u4e0a\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u7ee7\u627f\uff0c\u5982\u679c\u4e0a\u4e00\u5206\u949f\u8fd9\u4e00\u9762\u671d\u4e0b\uff0c\u90a3\u4e48\u5c31\u8981\u7ffb\u4e00\u6b21\uff0c\u540c\u65f6\u4e4b\u524d\u671d\u4e0a\u7684\u9762\u7684\u88ab\u70e4\u7684\u65f6\u95f4\u5c31\u662fi-j\n\n\u4f46\u8fd9\u4e2a\u8f6c\u79fb\u663e\u7136\u662fO\uff08n^2\uff09\u7684\uff0c\u8fd9\u6837\u505a\u8fc7\u4e0d\u53bb\u8fd9\u9053\u9898\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f18\u5316\n\n\u53ef\u662f\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u5df2\u7ecf\u8fbe\u5230\u4e86\u6700\u4f18\uff0c\u6240\u4ee5\u4e0d\u592a\u597d\u4f18\u5316\u4e86...\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u91cd\u6784\u72b6\u6001\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u80fd\u5bf9\u8089\u8fdb\u884c\u7ffb\u9762\u7684\u65f6\u95f4\u53ea\u6709\u8fd9k\u4e2a\u7ed9\u5b9a\u7684\u65f6\u95f4\u6bb5\uff0c\u4e14k<=100\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\uff1a\u80fd\u5426\u628a\u4e00\u4e2a\u65f6\u95f4\u6bb5\u6574\u4f53\u66f4\u65b0\uff0c\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u6210O\uff08nk\uff09\u5462\uff1f\n\n\u8fd9\u6837\u6211\u4eec\u5fc5\u987b\u91cd\u65b0\u8bbe\u8ba1\u72b6\u6001\uff1a\u8bb0\u72b6\u6001dp[i][j]\u8868\u793a\u76ee\u524d\u5230\u4e86\u7b2ci\u4e2a\u65f6\u95f4\u6bb5\u7684\u7ed3\u5c3e\uff0c\u671d\u4e0a\u8fd9\u4e00\u9762\u7684\u8089\u88ab\u70e4\u7684\u65f6\u95f4\u4e3aj\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u91cd\u65b0\u8003\u8651\u8f6c\u79fb\uff1a\n\n\u9996\u5148\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u89c4\u5f8b\uff1a\n\n\u53ef\u4ee5\u53d1\u73b0\uff1a\u5728\u4e00\u6bb5\u53ef\u4ee5\u7ffb\u8f6c\u7684\u533a\u95f4\u5185\uff0c\u771f\u6b63\u7ffb\u8f6c\u7684\u6b21\u6570\u53ea\u53ef\u80fd\u67090,1\u62162\u4e09\u79cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u6309\u8fd9\u4e09\u79cd\u60c5\u51b5\u5206\u522b\u8ba8\u8bba\u8f6c\u79fb\u5373\u53ef\n\n\uff08\u5173\u4e8e\u4e0a\u9762\u8fd9\u53e5\u8bdd\u7684\u89e3\u91ca\uff1a\u5982\u679c\u4f60\u7ffb\u8f6c\u4e86\u4e09\u6b21\u6216\u66f4\u591a\uff0c\u90a3\u4e48\u4f60\u4e00\u5b9a\u53ef\u4ee5\u5c06\u67d0\u51e0\u6b21\u7ffb\u8f6c\u5408\u5e76\u540e\u53d8\u6210\u4e0a\u8ff0\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0a\u8ff0\u60c5\u51b5\u5c31\u8db3\u591f\u8986\u76d6\u6240\u6709\u72b6\u6001\uff09\n\n\u7ffb\u8f6c\u6b21\u6570\u4e3a0\u7684\u60c5\u51b5\u5f88\u597d\u5224\u65ad\uff0c\u76f4\u63a5\u7ee7\u627f\u4e0a\u4e00\u6b21\u7684\u72b6\u6001\u5373\u53ef\n\n\u5982\u679c\u7ffb\u8f6c\u6b21\u6570\u4e3a2\uff0c\u90a3\u4e48\u8fd9\u76f8\u5f53\u4e8e\u539f\u6765\u671d\u4e0a\u7684\u9762\u73b0\u5728\u8fd8\u671d\u4e0a\uff0c\u539f\u6765\u671d\u4e0b\u7684\u9762\u73b0\u5728\u8fd8\u671d\u4e0b\uff0c\u53ea\u662f\u4e2d\u9014\u628a\u671d\u4e0a\u7684\u9762\u7ffb\u8fc7\u53bb\u70e4\u4e86\u4e00\u4e0b\u800c\u5df2\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5728\u4e4b\u524d\u671d\u4e0a\u7684\u9762\u5728\u8fd9\u4e00\u6bb5\u65f6\u95f4\u5185\u88ab\u70e4\u7684\u65f6\u95f4k\uff0c\u90a3\u4e48\u5728\u8fd9\u6bb5\u533a\u95f4\u4e4b\u524d\u8fd9\u4e00\u9762\u88ab\u70e4\u7684\u4e4b\u95f4\u5c31\u662fj-k\n\n\u4e8e\u662f\u53ef\u4ee5\u8fdb\u884c\u8f6c\u79fb\uff1adp[i][j]=min(dp[i-1][j-k]+2)\n\n\u4f46\u662f\u8fd9\u6837\u505a\u663e\u7136\u65f6\u95f4\u4e0d\u591f\u4f18\u8d8a\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u91c7\u53d6\u7b56\u7565\u6765\u4f18\u5316\uff01\n\n\u6211\u4eec\u63a8\u4e00\u53d1\u5f0f\u5b50\uff0c\u53d1\u73b0\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u3002\n\n\u4ece\u5c0f\u5411\u5927\u679a\u4e3ej\uff0c\u7136\u540e\u63a8\u8fdb\u5355\u8c03\u961f\u5217\u4e2d\u7ef4\u62a4\u5373\u53ef\n\n\u81f3\u4e8e\u7ffb\u8f6c\u6b21\u6570\u4e3a1\u7684\u60c5\u51b5\uff0c\u76f8\u5f53\u4e8e\u73b0\u5728\u671d\u4e0a\u7684\u9762\u539f\u5148\u671d\u4e0b\uff0c\u90a3\u4e48\u5982\u679c\u73b0\u5728\u671d\u4e0a\u7684\u9762\u88ab\u70e4\u7684\u65f6\u95f4\u4e3aj\uff0c\u679a\u4e3e\u73b0\u5728\u671d\u4e0b\u7684\u9762\u5728\u8fd9\u4e00\u533a\u95f4\u5185\u88ab\u70e4\u7684\u65f6\u95f4\u4e3ak\uff0c\u90a3\u4e48r-j\u5c31\u662f\u73b0\u5728\u671d\u4e0b\u7684\u9762\u88ab\u70e4\u7684\u65f6\u95f4\uff0c\u800c\u6211\u4eec\u679a\u4e3e\u4e86\u671d\u4e0b\u7684\u9762\u5728\u8fd9\u4e00\u533a\u95f4\u5185\u88ab\u70e4\u7684\u65f6\u95f4\u4e3ak\uff0c\u90a3\u4e48\u5728\u8fdb\u5165\u8fd9\u4e00\u533a\u95f4\u4e4b\u524d\u73b0\u5728\u671d\u4e0b\u7684\u9762\u539f\u6765\u671d\u4e0a\uff0c\u5df2\u7ecf\u88ab\u70e4\u8fc7\u7684\u65f6\u95f4\u5c31\u662fr-j-k\uff01\n\n\u8fd9\u6837\u6709\u8f6c\u79fb\uff1adp[i][j]=min(dp[i-1][r-j-k])+1!\n\n\u7528\u7c7b\u4f3c\u4e0a\u8ff0\u7684\u65b9\u6cd5\uff0c\u540c\u6837\u6784\u9020\u5355\u8c03\u961f\u5217\u8f6c\u79fb\uff0c\u6ce8\u610f\u6b64\u65f6\u8981\u5012\u5e8f\u679a\u4e3e\uff0c\u56e0\u4e3a\u6211\u4eec\u679a\u4e3e\u7684\u4e1c\u897f\u4e8b\u5b9e\u4e0a\u8d77\u5230\u7684\u662fj+k\u7684\u4f5c\u7528\uff0c\u6240\u4ee5r-\u679a\u4e3e\u7684\u4e1c\u897f\u5c31\u8981\u5012\u5e8f\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\nusing namespace std;\nint dp[2][1000005];\nint que[1000005];\nint n,k;\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tint now=1,past=0;\n\tmemset(dp[past],0x3f,sizeof(dp[past]));\n\tdp[0][0]=0;\n\twhile(k--)\n\t{\n\t\tmemcpy(dp[now],dp[past],sizeof(dp[now]));\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tint head=1,tail=0;\n\t\tfor(int i=0;i<=min(n,r);i++)\n\t\t{\n\t\t\twhile(head<=tail&&dp[past][que[tail]]>=dp[past][i])\n\t\t\t{\n\t\t\t\ttail--;\n\t\t\t}\n\t\t\tque[++tail]=i;\n\t\t\twhile(head<=tail&&que[head]<i-(r-l))\n\t\t\t{\n\t\t\t\thead++;\n\t\t\t}\n\t\t\tdp[now][i]=min(dp[now][i],dp[past][que[head]]+2);\n\t\t}\n\t\thead=1,tail=0;\n\t\tfor(int i=r;i>=0;i--)\n\t\t{\n\t\t\twhile(head<=tail&&dp[past][que[tail]]>=dp[past][r-i])\n\t\t\t{\n\t\t\t\ttail--;\n\t\t\t}\n\t\t\twhile(head<=tail&&que[head]<l-i)\n\t\t\t{\n\t\t\t\thead++;\n\t\t\t}\n\t\t\tque[++tail]=r-i;\n\t\t\tdp[now][i]=min(dp[now][i],dp[past][que[head]]+1);\n\t\t}\n\t\tswap(now,past);\n\t}\n\tif(dp[past][n]>=0x3f3f3f3f)\n\t{\n\t\tprintf(\"Hungry\\n\");\n\t}else\n\t{\n\t\tprintf(\"Full\\n%d\\n\",dp[past][n]);\n\t}\n\treturn 0;\n} \n\n```",
        "postTime": 1540972539,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF939F \u3010Cutlet\u3011"
    },
    {
        "content": "\u6211\u7684[\u535a\u5ba2](http://redbag.pw/)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://redbag.pw/2018/02/25/939F-Cutlet-dp/)\n\n\u8003\u8651\u66b4\u529b\uff0c\n$dp_{i,j} $\n \u8868\u793a\u524d$ i $\u79d2\uff0c\u5f53\u524d\u6ca1\u5728\u70e4\u7684\u9762\u88ab\u70e4\u8fc7$j$\n\u79d2\uff0c\u6240\u9700\u8981\u7684\u6700\u5c11\u7684\u7ffb\u9762\u6b21\u6570\u3002\n\n\u5f88\u663e\u7136 \n\n$$\ndp_{i,j}=\\min(dp_{i\u22121,j},dp_{i\u22121,j\u22121}+1)\n$$\n \n\u7136\u800c\u8fd9\u4e2a\u80af\u5b9a\u4f1aT\u6389\u3002\n\u4e0d\u8fc7\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u53ea\u6709\nk\u6bb5\n$dp_{i,j}$ \u80fd\u4ece\n$ dp_{i\u22121,j\u22121}$  \u8f6c\u79fb\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u3002\n\n$ f_{i,j} $\n\u8868\u793a\u5728\u7b2c $ R_i $\n\u79d2\uff0c\u76ee\u524d\u6ca1\u5728\u70e4\u7684\u9762\u70e4\u4e86\n$ j $\u79d2\uff0c\u9700\u8981\u7ffb\u9762\u7684\u6700\u5c0f\u6b21\u6570\n$f_{i,j}=min(f_{i\u22121,j\u2212k})+2 (0\u2264k\u2264ri\u2212li)$\n\n\u7ffb\u8fc7\u53bb\u70e4k\u79d2\u518d\u7ffb\u56de\u6765\n\n$f_{i,j}=min(f_{i\u22121,ri\u2212j\u2212k})+1    (0\u2264k\u2264ri\u2212li) $\n\n\u5f53\u524d\u9762\u70e4\u4e86\n$r_{i}\u2212j$\n \u79d2\uff0c\u76f8\u5f53\u4e8e\u67d0\u4e2a\u65f6\u523b\u7ffb\u8fc7\u6765\u7ee7\u7eed\u70e4\u4e86\nk\n\u79d2\u3002\n\u7136\u540e\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\uff08\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u6700\u503c\uff0c\u89c1[\u53e6\u4e00\u7bc7\u6587\u7ae0](http://redbag.pw/2017/12/03/USACO12MAR-\u82b1\u76c6Flowerpot-\u5355\u8c03\u961f\u5217-\u4e8c\u5206/)\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nvoid qmax(int &x,int y) {if (x<y) x=y;}\nvoid qmin(int &x,int y) {if (x>y) x=y;}\ninline int read()\n{\n    char s;\n    int k=0,base=1;\n    while((s=getchar())!='-'&&s!=EOF&&!(isdigit(s)));\n    if(s==EOF)exit(0);\n    if(s=='-')base=-1,s=getchar();\n    while(isdigit(s)){k=k*10+(s^'0');s=getchar();}\n    return k*base;\n}\ninline void write(int x)\n{\n    static char cnt,num[15];cnt=0;\n    if (!x)\n    {\n        putchar('0');\n        return;\n    }\n    for (;x;x/=10) num[++cnt]=x%10;\n    for (;cnt;putchar(num[cnt--]+48));\n}\nconst int maxn=2e5+10;\nconst int maxk=110;\nint n,k;\nint L[maxk],R[maxk];\nint dp[maxk][maxn];\nstruct node\n{\n    int l,r;\n    int q[maxn];\n    void clean()\n    {\n        l=1;r=0;\n        memset(q,0,sizeof(q));\n    }\n    void insert(int x,int y)\n    {\n        while (l<=r&&dp[x][q[r]]>=dp[x][y]) r--;\n        r++;q[r]=y;\n    }\n} a,b;\nint main()\n{\n    n=read();k=read();\n    for (int i=1;i<=k;i++) L[i]=read(),R[i]=read();\n    memset(dp,0x3f3f3f3f,sizeof(dp));\n    dp[0][0]=0;\n    for (int i=1;i<=k;i++)\n    {\n        a.clean();\n        for (int j=0;j<=n;j++) dp[i][j]=dp[i-1][j];\n        for (int j=0;j<=n;j++)\n        {\n            a.insert(i-1,j);\n            while (a.l<=a.r&&a.q[a.l]<j-R[i]+L[i]) a.l++;\n            qmin(dp[i][j],dp[i-1][a.q[a.l]]+2);\n        }\n        b.clean();\n        int Min=max(R[i]-n,0);\n        int l1=L[i]+1,r1=R[i]+1;\n        for (int j=R[i];j>L[i];j--) b.insert(i-1,j);\n        for (int j=0;j<=n;j++)\n        {\n            l1--;\n            r1--;\n            while (b.l<=b.r&&b.q[b.l]>r1) b.l++;\n            if (l1>=0) b.insert(i-1,l1);\n            if (b.l<=b.r) qmin(dp[i][j],dp[i-1][b.q[b.l]]+1);\n        }\n    }\n    if (dp[k][n]<=2333) printf(\"Full\\n%d\\n\",dp[k][n]);\n    else printf(\"Hungry\");\n    return 0;\n}\n```",
        "postTime": 1519709282,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF939F \u3010Cutlet\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u53ea\u6709\u90a3 $k$ \u4e2a\u533a\u95f4\u662f\u6709\u7528\u7684\uff0c\u800c\u4e14 $O(nk)$ \u80fd\u8fc7\uff0c\u6240\u4ee5\u8bbe $f[i][j]$ \u8868\u793a\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u524d $i$ \u4e2a\u53ef\u4ee5\u7ffb\u8f6c\u7684\u533a\u95f4\uff0c\u80cc\u9762\u5df2\u7ecf\u714e\u4e86 $j$ \u79d2\uff08\u5f53\u524d\u5728\u714e\u7684\u533a\u95f4\u662f\u6b63\u9762\uff0c\u53e6\u4e00\u9762\u662f\u80cc\u9762\uff09\u3002\u8bbe\u80cc\u9762\u7684\u65f6\u95f4\u662f\u56e0\u4e3a\u65b9\u4fbf\u8f6c\u79fb\uff0c\u800c\u4e14\u8fd9\u6837\u7684\u8bdd\u7b54\u6848\u5c31\u662f $f[k][n]$\u3002\n\n\u540c\u4e00\u4e2a\u533a\u95f4\u5185\u6700\u591a\u7ffb\u8f6c\u4e24\u6b21\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u4e24\u4e2a\u4e8b\u60c5\uff1a\u4e24\u9762\u5404\u714e\u4e86\u591a\u4e45\u548c\u8fdb\u8fd9\u4e2a\u533a\u95f4\u65f6\u4e0e\u51fa\u8fd9\u4e2a\u533a\u95f4\u65f6\u76f8\u6bd4\u6709\u6ca1\u6709\u7ffb\u9762\uff0c\u6240\u4ee5\u7ffb\u4e00\u6b21\u548c\u7ffb\u4e24\u6b21\u5c31\u80fd\u5305\u542b\u6240\u6709\u60c5\u51b5\u3002\n\n\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n\u4e0d\u7ffb\u8f6c\uff1a$f[i][j]=f[i-1][j]$\u3002\u56e0\u4e3a\u4e00\u76f4\u5728\u714e\u6b63\u9762\uff0c\u6240\u4ee5\u80cc\u9762\u7684\u65f6\u95f4\u4e0d\u53d8\u3002\n\n\u7ffb\u4e00\u6b21\uff1a$f[i][j]=\\min_{0\\le k\\le r[i]-l[i]}\\{f[i-1][r[i]-j-k]\\}+1$\u3002\u679a\u4e3e\u7684 $k$ \u662f\u7ffb\u8f6c\u540e\u714e\u7684\u65f6\u95f4\u3002\u56e0\u4e3a\u7ffb\u8f6c\u4e86\u4e00\u6b21\uff0c\u4e0a\u4e2a\u533a\u95f4\u7684\u80cc\u9762\u5c31\u662f\u5f53\u524d\u533a\u95f4\u7684\u6b63\u9762\u3002\u5f53\u524d\u7684\u603b\u65f6\u95f4\u51cf\u53bb\u5f53\u524d\u80cc\u9762\u518d\u51cf\u53bb\u5f53\u524d\u533a\u95f4\u65b0\u714e\u7684\u6b63\u9762\u7684\u65f6\u95f4\u5c31\u662f\u4e0a\u4e2a\u533a\u95f4\u7684\u80cc\u9762\u7684\u65f6\u95f4\u3002\n\n\u7ffb\u4e24\u6b21\uff1a$f[i][j]=\\min_{0\\le k \\le r[i]-l[i]}\\{f[i-1][j-k]\\}+2$\u3002\u679a\u4e3e\u7684 $k$ \u662f\u4e24\u6b21\u7ffb\u8f6c\u4e4b\u95f4\u714e\u7684\u65f6\u95f4\u3002\n\n\u53d1\u73b0 $f[i][j]$ \u53ea\u4f1a\u4ece $f[i-1][k]$ \u8f6c\u79fb\u8fc7\u6765\uff08\u6b64\u65f6 $k$ \u6ca1\u6709\u610f\u4e49\uff0c\u53ea\u662f\u5355\u7eaf\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4\u3002\n\n\u8003\u8651\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u7ffb\u4e00\u6b21\u548c\u7ffb\u4e24\u6b21\u7684\u8f6c\u79fb\uff0c\u5bf9\u4e8e\u4e24\u79cd\u72b6\u6001\u5206\u522b\u7ef4\u62a4\u4e0d\u540c\u7684\u5355\u8c03\u961f\u5217\u3002\n\n\u7ffb\u4e00\u6b21\uff1a\u56e0\u4e3a $0\\le k\\le r[i]-l[i]$\uff0c\u6240\u4ee5 $l[i]-j \\le r[i]-j-k\\le r[i]-j$\u3002$l[i]-j$ \u548c $r[i]-j$ \u90fd\u968f $j$ \u7684\u589e\u5927\u800c\u5355\u8c03\u9012\u51cf\u3002\u6240\u4ee5\u5728\u5355\u8c03\u961f\u5217\u4e2d\u7ef4\u62a4 $j$ \u4e0b\u6807\u9012\u51cf\uff0c$f[i-1][j]$ \u5355\u8c03\u9012\u589e\u3002\n\n\u7ffb\u4e24\u6b21\uff1a\u56e0\u4e3a $0\\le k\\le r[i]-l[i]$\uff0c\u6240\u4ee5 $j+l[i]-r[i] \\le j-k\\le j$\u3002$j+l[i]-r[i]$ \u548c $j$ \u90fd\u968f $j$ \u7684\u589e\u5927\u800c\u5355\u8c03\u9012\u589e\u3002\u6240\u4ee5\u5728\u5355\u8c03\u961f\u5217\u4e2d\u7ef4\u62a4 $j$ \u4e0b\u6807\u9012\u589e\uff0c$f[i-1][j]$ \u5355\u8c03\u9012\u589e\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read() {\n\tint x(0),f(0);\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\n\twhile(isdigit(ch)) x=x*10+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\nconst int N=100005,K=105;\nint n,k,l[K],r[K],l1,r1,l2,r2,q1[N*2],q2[N*2],f[2][N*2],inf;\nsigned main() {\n\tn=read(),k=read();\n\tfor(int i=1;i<=k;++i) l[i]=read(),r[i]=read();\n\tmemset(f,0x3f,sizeof f),inf=f[0][0];\n\tf[0][0]=0;\n\tint now=0,lst=1;\n\tfor(int i=1;i<=k;++i) {\n\t\tnow^=1,lst^=1;\n\t\tl1=l2=r2=1,r1=0;\n\t\tfor(int j=r[i];j>=l[i];--j) {\n\t\t\twhile(l1<=r1&&f[lst][j]<f[lst][q1[r1]]) --r1;\n\t\t\tq1[++r1]=j;\n\t\t}\n\t\tfor(int j=0;j<=r[i];++j) {\n\t\t\tf[now][j]=f[lst][j];\n\t\t\twhile(l1<r1&&q1[l1]>r[i]-j) ++l1;\n\t\t\tf[now][j]=min(f[now][j],f[lst][q1[l1]]+1);\n\t\t\tif(j!=r[i]&&l[i]-j-1>=0) {\n\t\t\t\twhile(l1<=r1&&f[lst][l[i]-j-1]<f[lst][q1[r1]]) --r1;\n\t\t\t\tq1[++r1]=l[i]-j-1;\n\t\t\t}\n\t\t\twhile(l2<r2&&q2[l2]<j-r[i]+l[i]) ++l2;\n\t\t\tf[now][j]=min(f[now][j],f[lst][q2[l2]]+2);\n\t\t\tif(j!=r[i]) {\n\t\t\t\twhile(l2<=r2&&f[lst][j+1]<f[lst][q2[r2]]) --r2;\n\t\t\t\tq2[++r2]=j+1;\n\t\t\t}\n\t\t}\n\t}\n\tif(f[now][n]>=inf) puts(\"Hungry\");\n\telse printf(\"Full\\n%d\",f[now][n]);\n\treturn 0;\n}\n```",
        "postTime": 1653540588,
        "uid": 321568,
        "name": "lmgoat",
        "ccfLevel": 0,
        "title": "CF939F Cutlet \u9898\u89e3"
    },
    {
        "content": "# CF939F Cutlet\u9898\u89e3\n\n\u8fd9\u4e2a\u72b6\u6001\u8bbe\u8ba1\u5f97\u6709\u70b9\u535a\u5f08\u8bbadp\u5f97\u6ecb\u5473\u3002\n\n\u8bbe $dp_{i,j}$ \u8868\u793a\u7ecf\u8fc7\u4e86 $i$ \u79d2\uff0c\u5f53\u524d\u671d\u4e0a\u7684\u90a3\u4e00\u9762\u714e\u4e86 $j$ \u79d2\u6240\u9700\u8981\u7684\u6700\u5c11\u7ffb\u7684\u6b21\u6570\u3002 \n\n\u9996\u5148\u6709\u4e00\u4e2a\u5f88\u597d\u63a8\u7684dp\u5f0f\u5b50\u3002\n\n$dp_{i,j}=min(dp_{i-1,j},dp_{i-1,i-j})$\uff0c$i$ \u522b\u4efb\u610f\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u3002\n\n$dp_{i,j}=dp_{i-1,j}$ \uff0c$i$ \u4e0d\u88ab\u4efb\u610f\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u3002\n\n\u8fd9\u662f $O(n^2)$ \u663e\u7136\u4e0d\u884c\u3002\n\n\u6ce8\u610f\u5230 $k$ \u5f88\u5c0f\uff0c\u800c\u4e14\u5f53\u4e00\u4e2a\u4f4d\u7f6e\u6ca1\u6709\u88ab\u4efb\u610f\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u65f6 $dp$ \u7ed3\u679c\u662f\u76f4\u63a5\u7ee7\u627f\u7684\u3002\n\n\u5148\u8bf4\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u533a\u95f4\uff0c\u6700\u591a\u7ffb2\u6b21\uff08\u5927\u4e8e\u4e24\u6b21\u53ef\u4ee5\u75282\u6b21\u66ff\u6362\uff09\u3002\n\n\u6211\u4eec\u91cd\u65b0\u8bbe\u8ba1\u72b6\u6001 $dp_{i,j}$ \u8868\u793a\u5728\u7b2c $r_i$ \u79d2\uff0c\u5f53\u524d\u6b63\u9762\u671d\u4e0a\u7684\u90a3\u4e00\u9762\u714e\u4e86 $j$ \u79d2\u9700\u8981\u7684\u6700\u5c11\u7ffb\u7684\u6b21\u6570\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\uff0c\n\n+ \u7b2c $i$ \u4e2a\u533a\u95f4\u7ffb\u4e860\u6b21\uff0c$dp_{i,j}=dp_{i-1,j}$\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n+ \u7b2c $i$ \u4e2a\u533a\u95f4\u7ffb\u4e862\u6b21\uff0c\u6211\u4eec\u679a\u4e3e\u7ffb\u4e86\u4e24\u6b21\u540e\u671d\u4e0a\u90a3\u9762\u591a\u714e\u4e86 $k$ \u79d2\uff0c\u56e0\u4e3a\u7ffb\u4e86\u4e24\u6b21\u540e\uff0c\u671d\u4e0a\u7684\u90a3\u4e00\u9762\u8fd8\u662f\u671d\u4e0a\u7684\u90a3\u4e00\u9762\uff0c\u6240\u4ee5\n\n$dp_{i,j}=min(dp_{i,j},dp_{i-1,j-k}+2)$\uff0c\u56e0\u4e3a $0\\le k\\le r_i-l_i$\uff0c\u6211\u4eec\u679a\u4e3e $j$ \u95ee\u9898\u8f6c\u5316\u4e3a $dp_{i-1,j}$ ~ $dp_{i-1,j-r_i+l_i}$ \u7684\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u3002\n\n+ \u7b2c $i$ \u4e2a\u533a\u95f4\u7ffb\u4e861\u6b21\uff0c\u679a\u4e3e\u7ffb\u4e86\u4e00\u6b21\u540e\u671d\u4e0b\u7684\u90a3\u9762\u591a\u714e\u4e86 $k$ \u79d2\uff0c\u7ffb\u4e86\u4e00\u6b21\u540e\uff0c\u671d\u4e0b\u7684\u90a3\u9762\u5c31\u662f\u7ffb\u4e4b\u524d\u671d\u4e0a\u7684\u90a3\u4e00\u9762\uff0c\u6240\u4ee5\n\n$dp_{i,j}=min(dp_{i,j},dp_{i-1,r_i-j-k}+1)$\uff0c$0\\leq k\\le r_i-l_i$\uff0c\u540c\u6837\u662f\u679a\u4e3e $j$ \u95ee\u9898\u8f6c\u5316\u4e3a $dp_{i-1,r_i-j}$ ~ $dp_{i-1,r_i-j-(r_i-l_i)}$\u7684\u6700\u5c0f\u503c \uff0c\u8fd8\u662f\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u3002\n\n\u5176\u5b9e\u4e0a\u8ff02\uff0c3\u60c5\u51b5\u4e2d\u7684 $k$ \u5e94\u8be5\u662f\u6ee1\u8db3 $k\\ge1$ \u7684\uff0c\u4f46\u7531\u4e8e\u5f53 $k=0$ \u65f6\u80af\u5b9a\u4e0d\u4f1a\u66f4\u65b0\u7b54\u6848\uff08\u7b2c\u4e00\u60c5\u51b5\u5c31\u7b97\u4e86\u66f4\u597d\u7684\uff09\uff0c\u6240\u4ee5\u4e3a\u4e86\u65b9\u4fbf\u5c31\u5f53 $k\\ge0$\u3002\n\n```cpp\n#include<stdio.h>\n#include<cstring> \nusing namespace std;\nconst int N=2e5+5;\nint read() {\n\tint x=0,f=1;char c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nint n,l[N],r[N],dp[2][N],K,q[N],t,w;//dp[i]\u8868\u793a\u5f53\u524d\u671d\u4e0a\u7684\u90a3\u9762\u714e\u4e86iS\u6700\u5c0f\u82b1\u8d39\nint min(int x,int y){return x<y?x:y;}\nint main() {\n\tn=read();K=read();\n\tfor(int i=1;i<=K;++i) {\n\t\tl[i]=read();\n\t\tr[i]=read();\n\t}\n\tmemset(dp,0x3f,sizeof(dp));\n\tint p=0;\n\tdp[p][0]=0;\n\tfor(int i=1;i<=K;++i) {\n\t\tp^=1;\n\t\tmemset(dp[p],0x3f,sizeof(dp[p]));\n\t\tfor(int j=0;j<=min(r[i],n);++j)dp[p][j]=dp[p^1][j]; \n\t\t//\u6ca1\u7ffb \n\t\tt=1;w=0;\n\t\t//\u7ffb\u4e24\u6b21 \n\t\tfor(int j=0;j<=min(r[i],n);++j) {\n\t\t\twhile(t<=w&&dp[p^1][j]<=dp[p^1][q[w]])--w;\n\t\t\twhile(t<=w&&q[t]<j-r[i]+l[i])++t;\n\t\t\tq[++w]=j;\n\t\t\tdp[p][j]=min(dp[p][j],dp[p^1][q[t]]+2);\n\t\t}\n\t\tt=1;w=0;\n        //\u7ffb\u4e00\u6b21\n\t\tfor(int j=r[i];j>=0;--j) {//\u6ce8\u610f\u8fd9\u91cc\u80fd\u5199j=min(r[i],n)\uff0c\u56e0\u4e3a\u8981\u5c06\u4e4b\u524d\u7684\u4e1c\u897f\u52a0\u5165\u5355\u8c03\u961f\u5217\n\t\t\twhile(t<=w&&dp[p^1][r[i]-j]<=dp[p^1][q[w]])--w;\n\t\t\twhile(t<=w&&q[t]<l[i]-j)++t;\n\t\t\tq[++w]=r[i]-j;\n\t\t\tdp[p][j]=min(dp[p][j],dp[p^1][q[t]]+1);\n\t\t}\n\t}\n\tif(dp[p][n]<1e9)printf(\"Full\\n%d\",dp[p][n]);\n\telse printf(\"Hungry\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1612251018,
        "uid": 79065,
        "name": "A1443356159",
        "ccfLevel": 0,
        "title": "CF939F Cutlet\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e2a\u9898 \u6709\u70b9\u96be\u7684 \u5f7b\u5e95\u7406\u89e3\u662f\u771f\u7684\u7528\u4e86\u5f88\u957f\u65f6\u95f4\n\n\u6587\u5b57\u662f\u7a7a\u865a\u7684\u6211\u4eec\u76f4\u63a5\u4e0a\u56fe\n\n![](https://cdn.luogu.com.cn/upload/pic/62958.png)\n\n\u62bd\u8c61\u4e00\u4e0b\u9898\u76ee\uff0c\u6211\u4eec\u540e\u9762\u5c31\u7528\u767d\u8272\u9ed1\u8272\u4ee3\u66ff\u8868\u8ff0\u4e86\uff0c\u603b\u4e4b\u90fd\u662f\u76f8\u5bf9\u65b9\u5411\u4e0d\u5f71\u54cd\u505a\u9898\u3002\u7ea2\u8272\u9053\u9053\u8868\u793a\u706b\u70ed\u7684\u7099\u70e4\u2014\u2014\n\n\u8bbe\u5b9afij\u8868\u793a\u7b2ci\u4e2a\u533a\u95f4\uff0c\u7ed3\u675f\u8fd9\u4e2a\u533a\u95f4\u7684\u65f6\u523b\u6ca1\u6709\u88ab\u70e4\u7684\u90a3\u4e00\u9762\uff08\u5373\u767d\u8272\u9762\uff09\u7d2f\u8ba1\u88ab\u70e4j\u5355\u4f4d\u65f6\u95f4\u7684\u6700\u4f18\u51b3\u7b56\n\n\u6211\u4eec\u8089\u773c\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u540c\u4e2a\u533a\u95f4\u91cc\u7ffb\u6765\u7ffb\u53bb\u6beb\u65e0\u7591\u95ee\u662f\u6728\u5927\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u533a\u95f4\u81f3\u591a\u53ea\u4f1a\u88ab\u7ffb\u4e24\u6b21\n\n**\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u53ea\u7ffb\u4e00\u6b21\u3002\uff08\u5982\u4e0a\u534a\u5f20\u56fe\uff09**\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n1\u3001\u9ed1\u8272\u4e00\u5171\u88ab\u70e4\u4e86j\u7684\u65f6\u95f4\n\n2\u3001\u65f6\u95f4\u4e00\u5171\u662fr\n\n1+2->3\u3001\u767d\u8272\u4e00\u5171\u88ab\u70e4\u4e86r-j\n\n4\u3001\u672c\u5e8f\u5217\uff0c\u767d\u8272\u88ab\u70e4\u4e86k\u65f6\u95f4\n\n3+4->5\u3001\u4e0a\u4e00\u5e8f\u5217\uff0c\u767d\u8272\u88ab\u70e4\u4e86r-j-k\n\n\u6240\u4ee5fij=max f[i-1][r-j-k]+1\n\n**\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u7ffb\u4e24\u6b21\u3002\uff08\u4e0b\u534a\u5f20\u56fe\uff09**\n\n1\u3001\u9ed1\u8272\u4e00\u5171\u88ab\u70e4\u4e86j\u7684\u65f6\u95f4\n\n2\u3001\u672c\u6b21\uff0c\u9ed1\u8272\u88ab\u70e4\u4e86k\n\n3\u3001\u4e0a\u4e00\u5e8f\u5217\u7ed3\u5c3e\uff0c\u9ed1\u8272\u88ab\u70e4\u4e86j-k\n\n\u6240\u4ee5fij=max f[i-1][j-k]\n\n\u7136\u540e\u5355\u8c03\u961f\u5217\u6eda\u4e00\u6eda\u5c31\u597d\u5566\n\n\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\u5199\u5566\n\n\n\n\n",
        "postTime": 1562755363,
        "uid": 87316,
        "name": "Asuka\u4e8c\u53f7\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF939F \u3010Cutlet\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u6709\u4e00\u4e2a\u6b63\u53cd\u9762\u90fd\u4e3a $0$ \u7684\u5361\u7247\uff0c\u6bcf\u8fc7 $1$ \u5206\u671d\u4e0b\u90a3\u4e00\u9762\u7684\u6570\u503c\u5c31\u4f1a\u589e\u52a0 $1$\uff0c\u4f60\u53ef\u4ee5\u5728\u51e0\u4e2a\u533a\u95f4\u7684\u65f6\u95f4\u5185\u7ffb\u8f6c\u5361\u7247\uff0c\u6c42\u7ecf\u8fc7 $2n$ \u79d2\u540e\u80fd\u5426\u8ba9\u8fd9\u4e2a\u5361\u7247\u7684\u6b63\u53cd\u9762\u7684\u6570\u90fd\u4e3a $n$\uff0c\u6c42\u6700\u5c0f\u7ffb\u8f6c\u6570\u3002\n\n## \u66b4\u529b\n\n\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u9762\u4e3a\u6b63\u9762\uff0c\u4e00\u9762\u4e3a\u53cd\u9762\uff0c$1$ \u8868\u793a\u6b63\u9762\uff0c$0$ \u8868\u793a\u53cd\u9762\u3002\n\n\u4e00\u773c\u770b\u51fa\u6765 dp\uff0c$dp_{i,j,1/0}$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u533a\u95f4\u7ed3\u675f\u540e\uff0c\u6b63\u9762\u6570\u5b57\u4e3a $j$\uff0c$1/0$ \u9762\u671d\u4e0a\u7684\u6700\u5c0f\u7ffb\u8f6c\u6570\u3002\n\n\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$dp_{i,j,1}=\\min(dp_{i-1,j-p,1}+2,dp_{i-1,j-q,0}+1,dp_{i-1,j-g,1})$\n\n\n$dp_{i,j,0}=\\min(dp_{i-1,j-p,1}+1,dp_{i-1,j-q,0}+2,dp_{i-1,j,0})$\n\n\u5176\u4e2d\u6ee1\u8db3\uff1a\n\n\u533a\u95f4\u95f4\u9694 $\\le p \\le$ \u4e24\u4e2a\u533a\u95f4\u53f3\u7aef\u70b9\u95f4\u9694\u3002\n\n\u533a\u95f4\u957f\u5ea6 $\\le q \\le$ \u4e24\u4e2a\u533a\u95f4\u53f3\u7aef\u70b9\u95f4\u9694\u3002\n\n$g$ \u8868\u793a\u4e24\u4e2a\u533a\u95f4\u53f3\u7aef\u70b9\u95f4\u9694\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u8f6c\u79fb\u662f $O(n)$ \u7684\uff0c\u518d\u52a0\u4e0a\u6211\u4eec\u9700\u8981\u8ba1\u7b97 $nk$ \u4e2a dp \u503c\uff0c\u8fd9\u6837\u505a\u663e\u7136\u8d85\u65f6\u3002\u9700\u8981\u8003\u8651\u4f18\u5316\u3002\n\n## \u4f18\u5316\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u8ba1\u7b97\u4e00\u4e2a\u533a\u95f4\u5b8c\u6210\u540e\u7684\u503c\u65f6\uff0c\u5982\u679c\u6211\u4eec\u4ece $n$ \u5230 $0$ \u6765\u8ba1\u7b97\uff0c\u6bcf\u6b21\u8ba1\u7b97\u503c\u6240\u9700\u8981\u904d\u5386\u533a\u95f4\u7684\u4e0a\u9650\u548c\u4e0b\u9650\u90fd\u65f6\u9010\u6e10\u51cf\u5c11\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u91c7\u53d6\u5355\u8c03\u961f\u5217\u4f18\u5316\u4e86\u3002\n\n\u8fd9\u91cc\u7528\u5230\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\n\n\u5982\u679c\u4e00\u5f00\u59cb\u904d\u5386\u533a\u95f4\u7684\u4e0b\u9650\u4e0d\u4e3a\u6700\u4f4e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ee4\u4e00\u4e2a\u53d8\u91cf $idx$ \u4e00\u5f00\u59cb\u6307\u5411\u7b2c\u4e00\u4e2a\u533a\u95f4\u7684\u4e0b\u9650\uff0c\u7136\u540e\u9010\u6e10\u964d\u4f4e\uff0c\u5206\u6279\u5165\u961f\u3002\n\n\u8fd9\u4e2a\u5355\u8c03\u961f\u5217\u53ef\u4ee5\u6eda\u52a8\u6389\u4e00\u7ef4\uff0c\u53ea\u9700\u8981\u4fdd\u7559\u5b83\u8bb0\u5f55 dp \u503c\u7684 $0/1$ \u5c31\u884c\u4e86\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1e5 + 10, K = 110, INF = 0x3f3f3f3f;\n\nint dp[K][N * 2][2];\nint g[K], n, k, idx[2];\n\ndeque <int> q[2];\n\nstruct line {\n\tint l, r;\n\tbool operator < (const line& rhs) const {\n\t\treturn l < rhs.l;\n\t}\n}lines[K];\n\ninline void q_push (int i, int j, int op) {\n\twhile (q[op].size() && dp[i][q[op].back()][op] >= dp[i][j][op]) q[op].pop_back();\n\tq[op].push_back(j);\n} \n\ninline void q_pop (int i, int j, int op) {\n\twhile (q[op].size() && j - q[op].front() < 0) q[op].pop_front();\n}\n\ninline void init () {\n\tq[1].clear(); q[0].clear();\n\tidx[0] = idx[1] = 2 * n;\n}\n\nint main () {\n\tmemset(dp, INF, sizeof(dp));\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 1;i <= k;i++) scanf(\"%d%d\", &lines[i].l, &lines[i].r);\n\tsort(lines + 1, lines + 1 + k);\n\tg[1] = lines[1].l; g[k + 1] = 2 * n - lines[k].r;\n\tfor (int i = 2;i <= k;i++) g[i] = lines[i].l - lines[i - 1].r;\n\tfor (int j = lines[1].l;j <= lines[1].r;j++) {\n\t\tdp[1][j][1] = 2;\n\t\tdp[1][j][0] = 1;\n\t}\n\tdp[1][lines[1].r][1] = 0;\n\tfor (int i = 2;i <= k;i++) {\n\t\tint l = lines[i].r - lines[i - 1].r, lg = lines[i].r - lines[i].l;\n\t\tinit();\n\t\tfor (int j = lines[i].r;j >= 0;j--) {\n\t\t\twhile (j - l <= idx[1] && idx[1] > 0) q_push(i - 1, idx[1]--, 1);\n\t\t\twhile (j - lg <= idx[0] && idx[0] > 0) q_push(i - 1, idx[0]--, 0);\n\t\t\tq_pop(i - 1, j - g[i], 1); q_pop(i - 1, j, 0);\n\t\t\tdp[i][j][1] = min(dp[i][j][1], (q[1].size() ? dp[i - 1][q[1].front()][1] + 2 : INF));\n\t\t\tdp[i][j][1] = min(dp[i][j][1], (q[0].size() ? dp[i - 1][q[0].front()][0] + 1 : INF));\n\t\t\tdp[i][j][1] = min(dp[i][j][1], (j - l >= 0 ? dp[i - 1][j - l][1] : INF));\n//\t\t\tcout << i << \" \" << j << \" 1: \" << dp[i][j][1] << endl;\n\t\t}\n\t\tinit();\n\t\tfor (int j = lines[i].r;j >= 0;j--) {\n\t\t\twhile (j - l <= idx[1] && idx[1] > 0) q_push(i - 1, idx[1]--, 1);\n\t\t\twhile (j - lg <= idx[0] && idx[0] > 0) q_push(i - 1, idx[0]--, 0);\n\t\t\tq_pop(i - 1, j - g[i], 1); q_pop(i - 1, j, 0);\n\t\t\tdp[i][j][0] = min(dp[i][j][0], (q[1].size() ? dp[i - 1][q[1].front()][1] + 1 : INF));\n\t\t\tdp[i][j][0] = min(dp[i][j][0], (q[0].size() ? dp[i - 1][q[0].front()][0] + 2 : INF));\n\t\t\tdp[i][j][0] = min(dp[i][j][0], dp[i - 1][j][0]);\n//\t\t\tcout << i << \" \" << j << \" 0: \" << dp[i][j][0] << endl; \n\t\t}\n\t}\n\tif (min(n - g[k + 1] >= 0 ? dp[k][n - g[k + 1]][1] : INF, dp[k][n][0]) < INF) printf(\"Full\\n%d\\n\", min(n - g[k + 1] >= 0 ? dp[k][n - g[k + 1]][1] : INF, dp[k][n][0]));\n\telse printf(\"Hungry\\n\");\n\treturn 0;\n} \n```\n\n",
        "postTime": 1667555051,
        "uid": 757990,
        "name": "zxh_mc",
        "ccfLevel": 0,
        "title": "CF939F Cutlet \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/CF939F)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u770b\u51fa\u662f$dp$\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e00\u4e2a\u975e\u5e38\u7c97\u66b4\u7684$dp$\u662f\u5f88\u597d\u60f3\u51fa\u6765\u7684\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$f(i,j,0/1)$\uff1a\u7b2c$i$\u79d2\u540e\uff0c\u7b2c$i+1$\u524d\uff0c\u6b63\u9762\uff08\u89c4\u5b9a\u6709\u4e00\u9762\u662f\u6b63\u9762\uff0c\u6709\u4e00\u9762\u662f\u80cc\u9762\uff0c\u5e76\u4e14\u603b\u662f\u4ece\u6b63\u9762\u5f00\u59cb\u714e\uff09\u5df2\u7ecf\u714e\u4e86$j$\u79d2\uff0c\u7b2c$i+1$\u79d2\u5c06\u8981\u714e\u6b63\u9762/\u53cd\u9762\u7684\u6700\u5c0f\u7ffb\u52a8\u6b21\u6570\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8f6c\u79fb\uff1a  \n$$f(i,j,0)=\\begin{cases}\\min\\{f(i-1,j-1,0),f(i-1,j,1)+1\\}&\\exists k,s.t.l_k\\le i\\le r_k\\\\\nf(i-1,j-1,0)&otherwise\\end{cases}$$  \n$$f(i,j,1)=\\begin{cases}\\min\\{f(i-1,j,1),f(i-1,j-1,0)+1\\}&\\exists k,s.t.l_k\\le i\\le r_k\\\\f(i-1,j,1)&otherwise\\end{cases}$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u662f$O(n^2)$\u7684\uff0c\u65e0\u6cd5\u518d\u4f18\u5316\uff08\u72b6\u6001\u4fbf\u662f$O(n^2)$\uff0c\u5e76\u4e14\u4e0d\u5b58\u5728\u7279\u6b8a\u7684\u533a\u95f4\u66f4\u65b0\u65b9\u5f0f\uff09\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0b\u9762\u8003\u8651\u4fee\u6539\u72b6\u6001\u3002\u6839\u636e\u9898\u610f\uff0c\u5b9e\u9645\u4e0a\u5728\u6bcf\u4e2a\u533a\u95f4\u91cc\u9762\u4eba\u6700\u591a\u4f1a\u7ffb\u52a8\u4e24\u6b21\uff08\u4e24\u6b21\u4ee5\u4e0a\u7684\u8bdd\u5c31\u53ef\u4ee5\u7528\u4e24\u6b21\u4ee5\u4e0b\u7684\u7ffb\u52a8\u7b49\u6548\u66ff\u4ee3\uff09\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u533a\u95f4\u7ed3\u675f\u540e\u8ba1\u7b97\u7b54\u6848\uff0c\u4e8e\u662f\u6709\u4e86\u65b0\u7684\u72b6\u6001\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$g(i,j,0/1)$\uff1a\u533a\u95f4$i$\u7ed3\u675f\u540e\uff0c$r_i+1$\u79d2\u524d\uff0c\u6b63\u9762\u714e\u4e86$j$\u79d2\uff0c$r_i+1$\u79d2\u8981\u714e\u6b63\u9762/\u53cd\u9762\u7684\u6700\u5c0f\u7ffb\u52a8\u6b21\u6570\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8f6c\u79fb\u6bd4\u8f83\u590d\u6742\uff0c\u5206\u4e0d\u7ffb\uff0c\u7ffb\u4e00\u6b21\uff0c\u7ffb\u4e24\u6b21\u7684\u60c5\u51b5\u8ba8\u8bba\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u7406\u89e3\u4e86\u4e0a\u9762\u8f6c\u79fb\u5176\u5b9e\u5e76\u4e0d\u96be\u63a8\uff0c\u6240\u4ee5\u59d1\u4e14~~\u5077\u61d2~~\u7565\u8fc7\u3002\u5982\u679c\u5b9e\u5728\u63a8\u4e0d\u51fa\u6765\u8f6c\u79fb\u5c31\u8bf7\u770b\u6b63\u89e3\u4ee3\u7801\u524d\u9762\u7684\u6734\u7d20\u8f6c\u79fb\u7684\u4ee3\u7801\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6734\u7d20\u7684\u8f6c\u79fb\u662f$O(kn^2)$\u3002~~\u867d\u7136\u6bd4\u66b4\u529b\u8fd8\u6162\uff0c~~ \u5176\u72b6\u6001\u53ea\u6709$O(kn)$\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\u8f6c\u79fb\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u8f6c\u79fb\uff0c\u5b83\u51b3\u7b56\u70b9\u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u5e76\u4e14\u533a\u95f4\u5728\u4ece\u5c0f\u5230\u5927\u679a\u4e3e$j$\u7684\u65f6\u5019\u5de6\u7aef\u70b9\u4e0d\u4f1a\u5de6\u79fb\u3002\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u8f6c\u79fb\u3002\u65f6\u95f4\u5c31\u964d\u5230\u4e86$O(kn)$\u3002  \n# \u4ee3\u7801\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6734\u7d20\u7684$O(kn^2)$\u8f6c\u79fb\uff1a  \n```cpp\n\t//pre\u8bb0\u5f55g(i-1)\uff0cnxt\u8bb0\u5f55g(i)\n\tfor( int i = 1 ; i <= K ; i ++ )\n\t{\n\t\tfor( int j = 0 ; j <= N ; j ++ ) nxt[j][0] = INF, nxt[j][1] = pre[j][1];\n\t\tfor( int j = r[i] - r[i - 1] ; j <= N ; j ++ ) nxt[j][0] = pre[j - ( r[i] - r[i - 1] )][0];\n\t\t//\u4e0d\u7ffb \n\t\tfor( int j = 0 ; j <= N ; j ++ )\n\t\t\tfor( int k = MAX( l[i], r[i] - j ) ; k <= r[i] ; k ++ )\n\t\t\t\tnxt[j][0] = MIN( nxt[j][0], pre[j - r[i] + k][1] + 1 );\n\t\tfor( int j = 0 ; j <= N ; j ++ )\n\t\t\tfor( int k = l[i] ; k <= MIN( r[i], j + r[i - 1] ) ; k ++ )\n\t\t\t\tnxt[j][1] = MIN( nxt[j][1], pre[j - k + r[i - 1]][0] + 1 );\n\t\t//\u7ffb\u4e00\u6b21\n\t\tfor( int j = 0 ; j <= N ; j ++ )\n\t\t\tfor( int k = MAX( l[i] + 1, l[i] - r[i - 1] + r[i] - j ) ; k <= r[i] ; k ++ )\n\t\t\t\tnxt[j][0] = MIN( nxt[j][0], pre[j - r[i] + k - l[i] + r[i - 1]][0] + 2 );\n\t\tfor( int j = 0 ; j <= N ; j ++ )\n\t\t\tfor( int k = l[i] + 1 ; k <= MIN( r[i], j + l[i] ) ; k ++ )\n\t\t\t\tnxt[j][1] = MIN( nxt[j][1], pre[j - k + l[i]][1] + 2 );\n\t\t//\u7ffb\u4e24\u6b21 \n\t\tstd :: swap( pre, nxt );\n\t}\n```\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6b63\u89e3\uff0c\u4f18\u5316\u7684$O(kn)$\u8f6c\u79fb\uff1a  \n```cpp\n#include <cstdio>\n#include <iostream>\n\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 1e5 + 5, MAXK = 105;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0; char s = getchar();int f = 1;\n\twhile( s < '0' || '9' < s ) { f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ) { putchar( '-' ), x = -x; }\n\tif( 9 < x ) { write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nint deq[MAXN], h, t;\nint pre[MAXN][2], nxt[MAXN][2];\nint l[MAXK], r[MAXK];\nint N, K;\n\nint main()\n{\n\tread( N ), read( K );\n\tfor( int i = 1 ; i <= K ; i ++ ) read( l[i] ), read( r[i] );\n\tfor( int i = 0 ; i <= N ; i ++ ) pre[i][0] = pre[i][1] = INF;\n\tpre[0][0] = 0;\n\tint rig;\n\tfor( int i = 1 ; i <= K ; i ++ )\n\t{\n\t\tfor( int j = 0 ; j <= N ; j ++ ) nxt[j][0] = INF, nxt[j][1] = pre[j][1];\n\t\tfor( int j = r[i] - r[i - 1] ; j <= N ; j ++ ) nxt[j][0] = pre[j - ( r[i] - r[i - 1] )][0];\n\t\t//\u4e0d\u7ffb \n\t\th = 1, t = 0, rig = 0;\n\t\tfor( int j = 0 ; j <= N ; j ++ )\n\t\t{\n\t\t\twhile( rig <= j ) \n\t\t\t{ while( h <= t && pre[deq[t]][1] >= pre[rig][1] ) t --; deq[++ t] = rig ++; }\n\t\t\twhile( h <= t && deq[h] < MAX( 0, j - r[i] + l[i] ) ) h ++;\n\t\t\tif( h <= t ) nxt[j][0] = MIN( nxt[j][0], pre[deq[h]][1] + 1 );\n\t\t}\n\t\th = 1, t = 0, rig = 0;\n\t\tfor( int j = 0 ; j <= N ; j ++ )\n\t\t{\n\t\t\twhile( rig <= j - l[i] + r[i - 1] )\n\t\t\t{ while( h <= t && pre[deq[t]][0] >= pre[rig][0] ) t --; deq[++ t] = rig ++; }\n\t\t\twhile( h <= t && deq[h] < MAX( 0, j - r[i] + r[i - 1] ) ) h ++;\n\t\t\tif( h <= t ) nxt[j][1] = MIN( nxt[j][1], pre[deq[h]][0] + 1 );\n\t\t}\n\t\t//\u7ffb\u4e00\u6b21\n\t\th = 1, t = 0, rig = 0;\n\t\tfor( int j = 0 ; j <= N ; j ++ )\n\t\t{\n\t\t\twhile( rig <= j - l[i] + r[i - 1] )\n\t\t\t{ while( h <= t && pre[deq[t]][0] >= pre[rig][0] ) t --; deq[++ t] = rig ++; }\n\t\t\twhile( h <= t && deq[h] < MAX( 0, j - r[i] + r[i - 1] + 1 ) ) h ++;\n\t\t\tif( h <= t ) nxt[j][0] = MIN( nxt[j][0], pre[deq[h]][0] + 2 );\n\t\t}\n\t\th = 1, t = 0, rig = 0;\n\t\tfor( int j = 0 ; j <= N ; j ++ )\n\t\t{\n\t\t\twhile( rig <= j - 1 )\n\t\t\t{ while( h <= t && pre[deq[t]][1] >= pre[rig][1] ) t --; deq[++ t] = rig ++; }\n\t\t\twhile( h <= t && deq[h] < MAX( 0, j - r[i] + l[i] ) ) h ++;\n\t\t\tif( h <= t ) nxt[j][1] = MIN( nxt[j][1], pre[deq[h]][1] + 2 );\n\t\t}\n\t\t//\u7ffb\u4e24\u6b21 \n\t\tstd :: swap( pre, nxt );\n\t}\n\tint res = pre[N][1];\n\tif( 2 * N - r[K] <= N ) res = MIN( res, pre[N - ( 2 * N - r[K] )][0] );\n\tif( res == INF ) { puts( \"Hungry\" ); return 0; }\n\tputs( \"Full\" ), write( res ), putchar( '\\n' );\n\treturn 0;\n}\n```\n",
        "postTime": 1575093213,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF939F]Cutlet"
    },
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF939F) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/939/problem/F)\n\n>\u9898\u610f\u89c1\u6d1b\u8c37\u91cc\u7684\u7ffb\u8bd1\u3002\n\n~~\u8fd9\u662f\u4e00\u9053\u6bd2\u7624\u7684div. 2 F\uff0c\u6211\u662f\u4e0d\u53ef\u80fd\u6bd4\u8d5b\u7684\u65f6\u5019\u505a\u51fa\u6765\u7684\u3002\u3002\u3002~~\n\n\uff08\u4ee5\u4e0b\u8bbe\u4e24\u9762\u90fd\u8981\u714e$n$\u5206\u949f\uff0c\u6709$m$\u4e2a\u53ef\u7ffb\u8f6c\u65f6\u95f4\u533a\u95f4\uff0c\u7b2c$i$\u4e2a\u4e3a$[l_i,r_i]$\uff09\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8fd9\u9898\u53ef\u4ee5\u8003\u8651DP\u3002\u6570\u636e\u8303\u56f4\u544a\u8bc9\u6211\u4eec\u6807\u7b97\u5927\u6982\u662f$\\mathrm{O}(nm)$\u7684\uff0c\u4e0d\u96be\u60f3\u5230\u53ef\u4ee5\u628a\u4e00\u4e2a\u53ef\u7ffb\u8f6c\u533a\u95f4\u548c\u4e0e\u4e4b\u76f8\u90bb\u7684\u4e0d\u53ef\u7ffb\u8f6c\u533a\u95f4\u5f53\u4f5c\u4e00\u4e2a\u6574\u4f53\u4f5c\u4e3a\u9636\u6bb5\u3002\u8bbe$dp_{i,j}$\u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u65f6\u523b$l_{i+1}$\uff08\u90a3\u4e48\u8fd9\u4e2a\u9636\u6bb5\u9700\u8981\u8003\u8651\u7684\u65f6\u95f4\u6bb5\u5c31\u662f$[l_i,l_{i+1}]$\uff0c\u5373\u53ef\u7ffb\u8f6c\u533a\u95f4$[l_i,r_i]$\u52a0\u4e0a\u4e0d\u53ef\u7ffb\u8f6c\u533a\u95f4$[r_i,l_{i+1}]$\uff0c\u7279\u6b8a\u5730\uff0c$l_0=0,r_0=-1,l_{m+1}=2n$\uff09\uff0c\u6700\u540e\u4e00\u523b\u714e\u7684\u90a3\u4e00\u9762\u4e00\u5171\u714e\u4e86$j$\u79d2\uff0c\u6240\u9700\u8981\u7ffb\u7684\u6700\u5c11\u6b21\u6570\u3002\u90a3\u4e48\u76ee\u6807\u5c31\u662f$dp_{m,n}$\u3002\u5f88\u663e\u7136\uff0c\u8fb9\u754c\u662f$dp_{0,j}=\\begin{cases}\\infty&j\\ne l_1\\\\0&j=l_1\\end{cases}$\uff0c\u56e0\u4e3a\u524d$l_1$\u79d2\u662f\u7ffb\u4e0d\u4e86\u7684\u3002\u800c\u8f6c\u79fb\u7684\u65f6\u5019\u53ea\u9700\u8981\u8003\u8651\u5728$[l_i,l_{i+1}]$\u91cc\u7ffb$0,1,2$\u6b21\u7684\u60c5\u51b5\u5373\u53ef\uff0c\u56e0\u4e3a\u7ffb\u66f4\u591a\u6b21\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7ffb$1$\u6216$2$\u6b21\uff08\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff09\u3002\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u51fa\u6765\u4e86\uff1a\n\n$$dp_{i,j}=\\min\\left(dp_{i-1,j-(l_{i+1}-l_i)},\\min\\limits_{k=l_i}^{r_i}\\{dp_{i-1,l_i-(j-(l_{i+1}-k))}+1\\},\\min\\limits_{k=l_i}^{r_i}\\{dp_{i-1,j-(l_{i+1}-k)}+2\\}\\right)$$\n\n\u5c06\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u53bb\u53bb\u62ec\u53f7\u53d8\u53d8\u5f62\uff0c\u5f97\n\n$$dp_{i,j}=\\min\\left(dp_{i-1,j-l_{i+1}+l_i},\\min\\limits_{k=l_i-j+l_{i+1}-r_i}^{l_i-j+l_{i+1}-l_i}\\{dp_{i-1,k}\\}+1,\\min\\limits_{k=j-l_{i+1}+l_i}^{j-l_{i+1}+r_i}\\{dp_{i-1,k}\\}+2\\right)$$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6700\u5916\u9762\u7684$\\min$\u91cc\u6709$3$\u90e8\u5206\uff0c\u5206\u522b\u662f\u7ffb$0,1,2$\u6b21\u7684\u60c5\u51b5\u3002\u7ffb$0$\u6b21\u7684\u8f6c\u79fb\u662f$\\mathrm{O}(1)$\u7684\uff0c\u800c\u53e6\u5916$2$\u4e2a\u662f$\\mathrm{O}(n)$\u7684\u3002\u6734\u7d20\u5730\u8f6c\u79fb\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\mathrm{O}\\left(n^2m\\right)$~~\uff0c\u7206\u70b8\u4e0d\u591a\u8bf4~~\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u540c\u4e00\u4e2a\u9636\u6bb5\u91cc\uff0c\u968f\u7740$j$\u7684\u589e\u52a0\uff0c\u7ffb$1$\u6b21\u7684$\\min$\u7684\u4e0a\u4e0b\u754c\u540c\u65f6\u51cf\u5c11\uff0c\u7ffb$2$\u6b21\u7684\u5219\u540c\u65f6\u589e\u52a0\u3002\u8fd9$2$\u4e2a\u90fd\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6765\u4f18\u5316\u5230\u6bcf\u4e2a\u9636\u6bb5\u5747\u644a$\\mathrm{O}(n)$\uff08\u4e00\u4e2a\u5012\u7740\u5355\u8c03\u961f\u5217\uff0c\u4e00\u4e2a\u6b63\u7740\uff09\uff0c\u4e8e\u662f\u603b\u5171$\\mathrm{O}(nm)$\u3002~~\uff08\u5982\u679c\u4f60\u60f3\u4e0d\u5230\u5355\u8c03\u961f\u5217\uff0c\u4e5f\u53ef\u4ee5\u5728\u5230\u8fbe\u4e00\u4e2a\u9636\u6bb5\u7684\u65f6\u5019\uff0c\u628a\u4e0a\u4e00\u4e2a\u9636\u6bb5\u7684DP\u503c\u6253\u4e2aST\u8868\uff0c\u6216\u8005\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4f46\u90a3\u90fd\u662f\u5e26$\\log$\u7684\uff0c\u8fc7\u4e0d\u6389hhhh\uff0c\u6240\u4ee5\u53ea\u80fd\u5355\u8c03\u961f\u5217\uff09~~\n\n\u5bf9\u4e86\uff0c\u6211\u7684\u4ee3\u7801\u91cc\u8fd8\u7528\u4e86\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u4e86\u4e00\u4e0b\u7a7a\u95f4\u3002\uff08\u5176\u5b9e\u6839\u672c\u4e0d\u7528\uff0c$\\mathrm{O}(nm)$\u7684\u7a7a\u95f4\u5728CodeForces\u4e0a\u5e94\u8be5\u662f\u53ef\u4ee5\u8fc7\u7684\uff0c\u4f46\u4fdd\u9669\u8d77\u89c1\uff09\n\n\u4e0b\u9762\u8d34AC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int N=100000,M=100;\nint n/*\u6bcf\u9762\u8981\u714e\u7684\u79d2\u6570*/,m/*\u53ef\u7ffb\u8f6c\u533a\u95f4\u6570*/;\nint l[M+1],r[M+1];//\u6bcf\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9 \nint dp[2][2*N+1];//dp[i][j]\u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u65f6\u523bl[i+1]\uff0c\u6700\u540e\u4e00\u523b\u714e\u7684\u90a3\u4e00\u9762\u4e00\u5171\u714e\u4e86j\u79d2\uff0c\u6240\u9700\u8981\u7ffb\u7684\u6700\u5c11\u6b21\u6570\nint q[2*N],head,tail;//\u5355\u8c03\u961f\u5217 \nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)scanf(\"%d%d\",l+i,r+i);\n\tl[m+1]=2*n;//dp[m][j]\u5e94\u5f53\u8003\u8651\u5b8c\u6574\u4e2a2n\u79d2\u7684\u65f6\u95f4\u4e86 \n\tmemset(dp[0],0x3f,sizeof(dp[0]));//\u8fb9\u754c \n\tdp[0][l[1]]=0;//\u8fb9\u754c \n\tfor(int i=1;i<=m;i++){\n\t\tint now=i&1,prv=!now;//\u6eda\u52a8\u6570\u7ec4 \n\t\tmemset(dp[now],0x3f,sizeof(dp[now]));//\u521d\u59cb\u5316\u4e3ainf \n\t\tfor(int j=0;j<=2*n;j++)dp[now][j]=min(dp[now][j],j-l[i+1]+l[i]<0?inf:dp[prv][j-l[i+1]+l[i]]);//\u7ffb0\u6b21 \n\t\thead=tail=0;//\u6e05\u7a7a\u5355\u8c03\u961f\u5217 \n\t\tfor(int j=max(0,l[i]-2*n+l[i+1]-r[i]);j<-2*n+l[i+1];j++){//\u7ffb1\u6b21\uff0c\u56e0\u4e3a\u662f\u5012\u7740\u7684\uff0c\u6240\u4ee5\u4ece2n\u5f00\u59cb \n\t\t\twhile(head<tail&&dp[prv][q[tail-1]]>=dp[prv][j])tail--;\n\t\t\tq[tail++]=j;\n\t\t}\n\t\tfor(int j=2*n;~j;j--){//\u7ffb1\u6b21\uff0c\u5012\u7740\u5355\u8c03\u961f\u5217 \n//\t\t\tcout<<j<<\":\\t+1=\\t\"<<l[i]-j+l[i+1]-r[i]<<\"~\"<<-j+l[i+1]<<\"\\n\";\n\t\t\twhile(head<tail&&q[head]<l[i]-j+l[i+1]-r[i])head++;\n\t\t\tif(-j+l[i+1]>=0){\n\t\t\t\twhile(head<tail&&dp[prv][q[tail-1]]>=dp[prv][-j+l[i+1]])tail--;\n\t\t\t\tq[tail++]=-j+l[i+1];\n\t\t\t}\n\t\t\tdp[now][j]=min(dp[now][j],head==tail?inf:dp[prv][q[head]]+1);\n\t\t}\n\t\thead=tail=0;//\u6e05\u7a7a\u5355\u8c03\u961f\u5217 \n\t\tfor(int j=max(0,-l[i+1]+l[i]);j<-l[i+1]+r[i];j++){//\u7ffb2\u6b21\uff0c\u56e0\u4e3a\u662f\u6b63\u7740\u7684\uff0c\u6240\u4ee5\u4ece0\u5f00\u59cb \n\t\t\twhile(head<tail&&dp[prv][q[tail-1]]>=dp[prv][j])tail--;\n\t\t\tq[tail++]=j;\n\t\t}\n\t\tfor(int j=0;j<=2*n;j++){//\u7ffb2\u6b21\uff0c\u6b63\u7740\u5355\u8c03\u961f\u5217 \n//\t\t\tcout<<j<<\":\\t+2=\\t\"<<j-l[i+1]+l[i]<<\"~\"<<j-l[i+1]+r[i]<<\"\\n\";\n\t\t\twhile(head<tail&&q[head]<j-l[i+1]+l[i])head++;\n\t\t\tif(j-l[i+1]+r[i]>=0){\n\t\t\t\twhile(head<tail&&dp[prv][q[tail-1]]>=dp[prv][j-l[i+1]+r[i]])tail--;\n\t\t\t\tq[tail++]=j-l[i+1]+r[i];\n\t\t\t}\n\t\t\tdp[now][j]=min(dp[now][j],head==tail?inf:dp[prv][q[head]]+2);\n\t\t}\n//\t\tfor(int j=0;j<=2*n;j++)printf(\"dp[%d][%d]=%d\\n\",i,j,dp[now][j]);\n\t}\n\tprintf(dp[m&1][n]<inf?\"Full\\n%d\\n\":\"Hungry\",dp[m&1][n]);//\u76ee\u6807\u662fdp[m][n] \n\treturn 0;\n}\n```",
        "postTime": 1565760403,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 939F - Cutlet"
    },
    {
        "content": "\u53c8\u6ca1\u8c03\u51fa\u6765\u3002wa\u572813\u4e2a\u70b9\n\n\u5957\u8def\u9898\u3002\u53ef\u4ee5\u53d1\u73b0\u6700\u591a\u6bcf\u6bb5\u7ffb2\u6b21\uff0c\u8003\u8651\u5bf9\u6bcf\u6bb5\u5355\u72ecdp\uff0cf[i][j]\u8868\u793a\u5df2\u7ecf\u5b8c\u6210\u7b2ci\u6bb5\u64cd\u4f5c\uff0c\u53e6\u5916\u4e00\u9762\u70e4\u4e86j\u5206\u949f\u7684\u6700\u5c11\u53cd\u8f6c\u6b21\u6570\nf[i][j]=min(f[i\u22121][j\u2212k])+2,f[i][j]=min(f[i\u22121][ri\u2212j\u2212k])+1\n\n\u90a3\u4e48\u5c31\u662f\u7b2c\u4e00\u4e2a\u8f6c\u79fb\u6b63\u7740\u679a\u4e3e\uff0c\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\u5012\u7740\u679a\u4e3e\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=1e5+5,K=105,INF=1e9;\nint n,k,l[K],r[K];\ninline void init(){\n\tn=read(); k=read();\n\tfor (int i=1;i<=k;i++) l[i]=read(),r[i]=read();\n}\ninline void upd(int &x,int w){\n\tx=min(x,w);\n}\nint q[N],dp[2][N],cur;\ninline void solve(){\n\tfor (int i=1;i<=n;i++) dp[0][i]=INF;\n\tfor (int i=1;i<=k;i++){\n\t\tint h=1,t=0;\n\t\tfor (int j=0;j<=n;j++) dp[cur^1][j]=dp[cur][j];\n\t\tfor (int j=0;j<=min(n,r[i]);j++){\n\t\t\twhile (h<=t&&j-l[i]+r[i]>q[h]) h++;\n\t\t\twhile (h<=t&&dp[cur][j]<=dp[cur][q[t]]) t--;\n\t\t\tq[++t]=j; upd(dp[cur^1][j],dp[cur][q[h]]+2);  \n\t\t}\n\t\th=1,t=0;\n\t\tfor (int j=r[i];j>=0;j--){\n\t\t\twhile (h<=t&&l[i]-j>q[h]) h++;\n\t\t\twhile (h<=t&&dp[cur][r[i]-j]<=dp[cur][q[t]]) t--;\n\t\t\tq[++t]=r[i]-j; upd(dp[cur^1][j],dp[cur][q[h]]+1);\n\t\t}\n\t\tcur^=1;\n\t}\n\tif (dp[cur][n]>=INF) puts(\"Hungry\");\n\t\telse puts(\"Full\"),writeln(dp[cur][n]);\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1535549738,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF939F \u3010Cutlet\u3011"
    }
]