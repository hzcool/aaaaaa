[
    {
        "content": "## \u9898\u89e3-CF1082D Maximum Diameter Graph\n\n* **\u9898\u76ee\u5927\u610f**\n\n\u5c31\u662f\u8ba9\u4f60\u6784\u9020\u4e00\u8fde\u901a\u7684\u65e0\u5411\u56fe,\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570$\\leq a{i}$\u5e76\u4e14\u8981\u4f7f\u5f97\u76f4\u5f84\u8db3\u591f\u957f\u3002\n\n* $Solution$\n\n**\u8d2a\u5fc3\uff1a** \u8981\u8ba9\u76f4\u5f84\u6700\u957f\u6211\u4eec\u5c31\u8981\u6784\u9020\u94fe\uff0c\u5bf9\u4e8e$2\\leq ai$\u7684\u70b9\u628a\u4ed6\u4eec\u52a0\u5230\u94fe\u4e0a\u53bb\u3002\u7136\u540e\u628a\u90a3\u4e9b\u5ea6\u4e3a$1$\u7684\u70b9\u7c98\u5230\u94fe\u4e0a\u53bb\u3002\u6700\u540e\u4e00\u70b9\u4e5f\u662f\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a\u6211\u4eec\u8fd8\u53ef\u4ee5\u8ba9\u94fe\u53d8\u5f97\u66f4\u52a0\u957f\uff0c\u5c31\u662f\u628a\u90a3$2$\u4e2a\u5ea6\u4e3a\u4e00\u70b9\uff08\u5982\u679c\u5b58\u5728\uff09\u7c98\u5230\u94fe\u7684\u4e24\u7aef\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6811\u7684\u76f4\u5f84\u6700\u957f\u3002\u6b63\u786e\u6027\u5f88\u663e\u7136\u3002\n\n\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u5408\u6cd5\u60c5\u51b5\u4e5f\u5c31\u4e24\u79cd\uff1a\n\n$1.$ \u6240\u6709\u70b9\u7684$ai$\u90fd\u4e3a$1$\n\n$2.$\u5b58\u5728\u8fd8\u6ca1\u6709\u88ab\u5339\u914d\u5230\u7684\u70b9\n\n\n\u5269\u4e0b\u7684\u5c31\u662f\u7ec6\u8282\u95ee\u9898\u4e86\u3002\n\n* $Code$\n\n```cpp\n#pragma GCC optimize(3)\n#include <bits/stdc++.h>\n#define For(i,a,b) for ( int i=(a);i<=(b);i++ )\n#define Dow(i,a,b) for ( int i=(a);i>=(b);i-- )\n#define FOR(i,t) for ( int i=head[t];i;i=E[i].nex )\n//#define int long long\n#define db double\n#define mem(x,s) memset(x,s,sizeof(x))\n#define cpy(x,s) memcpy(x,s,sizeof(x))\n#define lowbit(x) x&(-x)\nusing namespace std;\n\nnamespace IO {\n\t#define gc getchar\n\t#define pt putchar\n\tinline int read() {\n\t\tint sum=0,ff=1; char ch=gc();\n\t\twhile(!isdigit(ch)) {\n\t\t\tif(ch=='-') ff=-1;\n\t\t\tch=gc();\n\t\t}\n\t\twhile(isdigit(ch))\n\t\t\tsum=sum*10+(ch^48),ch=gc();\n\t\treturn sum*ff;\n\t}\n\n\tinline void write(int x) {\n\t\tif(x<0) pt('-'),x=-x;\n\t\tif(x>9) write(x/10);\n\t\tpt(x%10|48);\n\t}\n\n\tinline void wln(int x) {\n\t\twrite(x); pt('\\n');\n\t}\n\n\tinline void wrn(int x) {\n\t\twrite(x); pt(' ');\n\t}\n}\n\nusing namespace IO;\n\nconst int N=505;\nconst int M=N*N;\n\nint n,m,du[N],tmp[N],G[N][N];\nint tot,ans,md,Du[N],e[M][3];\nint head[N],cnt,rt,one[N],s;\nstruct nood {\n\tint nex,to,w;\n};\nnood E[M];\n\ninline void jia(int u,int v) {\n\tE[++cnt]=(nood){head[u],v};\n\thead[u]=cnt;\n}\n\ninline void dfs(int u,int fa,int dep) {\n\tif(dep>md) {\n\t\tmd=dep;\n\t\trt=u;\n\t}\n\tFOR(i,u) {\n\t\tint v=E[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u,dep+1);\n\t}\n}\n\nint main() {\n\tn=read();\n\tFor(i,1,n) {\n\t\tint s=read();\n\t\tdu[i]=s;\n\t\tif(s==1) one[++s]=i;\n\t}\n\tif(one[1]) tmp[1]=one[1];\n\tFor(i,1,n) if(du[i]!=1) tmp[++tot]=i;\n\tif(one[2]) tmp[++tot]=one[2];\n\tif(!tot) return printf(\"NO\\n\"),0;\n\tFor(i,1,tot-1) {\n\t\te[++m][0]=tmp[i];\n\t\te[m][1]=tmp[i+1];\n\t\tDu[tmp[i]]+=1;\n\t\tDu[tmp[i+1]]+=1;\n\t\tG[tmp[i]][tmp[i+1]]=G[tmp[i+1]][tmp[i]]=1;\n\t}\n\tFor(i,1,tot) if(du[tmp[i]]>=2) {\n\t\tif(Du[tmp[i]]>=du[tmp[i]]) continue;\n\t\tFor(j,1,n) \n\t\t\tif(du[j]==1&&j!=tmp[i]&&!G[j][tmp[i]]) {\n\t\t\t\tif(Du[j]>=du[j]) continue;\n\t\t\t\tif(Du[tmp[i]]>=du[tmp[i]]) continue;\n\t\t\t\te[++m][0]=tmp[i];\n\t\t\t\te[m][1]=j;\n\t\t\t\tDu[tmp[i]]+=1;\n\t\t\t\tDu[j]+=1;\n\t\t\t}\n\t}\n\tFor(i,1,n) if(!Du[i]) return printf(\"NO\\n\"),0;\n\tprintf(\"YES \");\n\tFor(i,1,m) jia(e[i][0],e[i][1]),jia(e[i][1],e[i][0]);\n\tdfs(1,0,0);\n\tmd=0;\n\tdfs(rt,0,0);\n\twln(md);\n\twln(m);\n\tFor(i,1,m) wrn(e[i][0]),wln(e[i][1]);\n\treturn 0;\n}\n\t\t\t\t\t\t\n\t\n```\n",
        "postTime": 1573610296,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1082D \u3010Maximum Diameter Graph\u3011"
    },
    {
        "content": "## \u56fe\u8bba\u6784\u9020\n\n_\u5176\u5b9e\u6211\u4e00\u76f4\u641e\u4e0d\u61c2\u4e3a\u4ec0\u4e48$n$\u53ea\u6709$500$\u2026\u2026\u660e\u660e\u53ef\u4ee5$O(n)$\u505a\u7684\u5440\u2026\u2026_\n\n\u6211\u4eec\u77aa\u4e00\u773c\u9898\u76ee\uff0c\u53d1\u73b0\u5bf9\u4e8e\u4e00\u5f20\u56fe\uff0c\u53ea\u6709\u6700\u77ed\u8def\u6811\u4e0a\u7684\u8fb9\u624d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u53bb\u6389\u6240\u6709\u591a\u4f59\u7684\u8fb9\uff0c\u5373\u4ec5\u4ec5\u5efa\u7acb\u4e00\u68f5\u6811\uff0c\u7b54\u6848\u5c31\u662f\u8fd9\u68f5\u6811\u7684\u76f4\u5f84\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e0d\u8003\u8651\u5ea6\u6570\u9650\u5236\uff0c\u7b54\u6848\u6700\u4f18\u7684\u60c5\u51b5\u662f\u4e00\u6761\u94fe\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u4ece\u4e00\u6761\u94fe\u7684\u60c5\u51b5\u5f00\u59cb\u6269\u5c55\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u5ea6\u6570\u9650\u5236$\\geq 2$\u7684\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u65e0\u8111\u5c06 \u5b83\u4eec\u8fde\u6210\u4e00\u6761\u94fe\uff0c\u50cf\u8fd9\u6837\n\n```\nO-----O-----O-----O-----O-----O\nO     O     O\n```\n\u5bf9\u4e8e\u5176\u4ed6\u7684\u8282\u70b9\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u5c06\u5b83\u4eec\u63a5\u5230\u8fd9\u6761\u94fe\u4e0a\n\n\u5982\u679c\u76f4\u63a5\u8fde\u7684\u8bdd\uff0c\u53ef\u80fd\u957f\u8fd9\u6837\u2193\n\n```\nO-----O-----O-----O-----O-----O\n|     |\n|  +--+--+\nO  O     O\n```\n\n\u4f46\u662f\u8fd9\u6837\u8fde\u663e\u7136\u4e0d\u4f18\uff0c\u6211\u4eec\u5e94\u8be5\u8fd9\u4e48\u8fde\u2193\n```\nO-----O-----O-----O-----O-----O-----O\n|     |\n|     |\nO     O\n```\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u628a\u4e00\u4e2a\u70b9\u52a0\u5230\u94fe\u7684\u6700\u540e\uff0c\u518d\u4ece\u524d\u9762\u5f00\u59cb\u52a0\n\n\u4e0a\u4ee3\u7801\uff5e\uff5e\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n#define INF 2147483647\n\nint inp(){\n    char c = getchar();\n    int neg = 1;\n    while(c < '0' || c > '9'){\n        if(c == '-')\n            neg = -1;\n        c = getchar();\n    }\n    int sum = 0;\n    while(c >= '0' && c <= '9'){\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return sum * neg;\n}\n\nstruct Node{\n    int x;\n    int res;\n}s[1000];\n\nint head[1000];\nint nxt[2010];\nint end[2010];\nint cou = 0;\nint dis[1000];\nint d[1000];\n\nvoid link(int a, int b){\n    nxt[++cou] = head[a];\n    head[a] = cou;\n    end[cou] = b;\n}\n\nvoid dfs(int cur, int last){\n    for(int x = head[cur]; x != -1; x = nxt[x]){\n        if(end[x] == last)\n            continue;\n        dis[end[x]] = dis[cur] + 1;\n        dfs(end[x], cur);\n    }\n}\n\nint main(){\n    memset(head, -1, sizeof(head));\n    int n = inp();\n    for(int i = 1; i <= n; i++){\n        d[i] = inp();\n        if(d[i] == 0){\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    int c = 0;\n    for(int i = 1; i <= n; i++){\n        if(d[i] >= 2)\n            s[++c] = (Node){i, d[i] - 2};\n    }\n    if(c == 0){\n        printf(\"NO\");\n        return 0;\n    }\n    int cur = 1;\n    s[1].res++;\n    s[c].res++;\n    // printf(\"%d\\n\", s[1].res);\n    bool flg = false;\n    for(int i = 1; i <= n; i++){\n        if(d[i] < 2){\n            if(!flg){\n                link(i, s[c].x);\n                link(s[c].x, i);\n                s[c].res--;\n                flg = true;\n                continue;\n            }\n            while(s[cur].res <= 0 && cur <= c)\n                cur++;\n            if(cur > c){\n                printf(\"NO\");\n                return 0;\n            }\n            s[cur].res--;\n            link(i, s[cur].x);\n            link(s[cur].x, i);\n        }\n    }\n    for(int i = 1; i < c; i++){\n        link(s[i].x, s[i + 1].x);\n        link(s[i + 1].x, s[i].x);\n    }\n    dfs(1, -1);\n    int max = 0;\n    int maxk;\n    for(int i = 1; i <= n; i++)\n        if(dis[i] > max){\n            max = dis[i];\n            maxk = i;\n        }\n    dis[maxk] = 0;\n    dfs(maxk, -1);\n    int ans = 0;\n    for(int i = 1; i <= n; i++){\n        if(dis[i] > ans)\n            ans = dis[i];\n    }\n    printf(\"YES %d\\n\", ans);\n    printf(\"%d\\n\", n - 1);\n    for(int i = 1; i <= n; i++)\n        for(int x = head[i]; x != -1; x = nxt[x])\n            if(end[x] > i)\n                printf(\"%d %d\\n\", i, end[x]);\n}\n```",
        "postTime": 1543557002,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1082D \u3010Maximum Diameter Graph\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u8d2a\u5fc3,\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u7684\u662f\u94fe,\u4e5f\u5c31\u662f\u8bf4\u9664\u4e86\u4e24\u7aef\u5141\u8bb8\u4e3a\u5165\u5ea6\u4e3a\u4e00\u7684\u70b9,\u5176\u4f59\u90fd\u8981>=2,\u8fd9\u6837\u5c31\u53ef\u4ee5\u533a\u5206\u51fa\u4e24\u79cd\u70b9\uff1b\u7136\u540e\u5c061\u7684\u70b9\u4e00\u4e2a\u4e00\u4e2a\u5c1d\u8bd5\u52a0\u5165\u5230>=2\u7684\u70b9,\u81f3\u4e8e>=2\u7684\u70b9\u56e0\u4e3a\u8981\u6784\u6210\u94fe,\u9884\u5904\u7406\u7684\u65f6\u5019\u8981\u6ce8\u610f\u3002\n```cpp\n#include<bits/stdc++.h>\n#define N 1<<23\nusing namespace std;\nint n,cnt,l,e[N],v[N],r,p,c,tat,t;\nstruct q{int n,l;}a[N];\ninline bool cmp(q s,q f){return s.l<f.l;}\nint main(){\n\tcin>>n;for(int i=1;i<=n;i++)scanf(\"%d\",&a[i].l),a[i].n=i;sort(a+1,a+1+n,cmp);\n\tfor(int i=n;i;i--){if(a[i].l==1){l=i,tat=i+1;break;}else cnt+=(a[i].l-=2);}\n\t\n\tif(a[n].l!=1)a[l+1].l++,a[n].l++,cnt+=2;else cnt=1;\n\tif(cnt<l)cout<<\"NO\",exit(0);else cout<<\"YES \";cout<<n-l+min(l,2)-1<<'\\n';\n\t\n\tc=l+1,t=l;if(l!=0){\n\t\tif(t>=1)r=c,e[++p]=a[1].n,v[p]=a[n].n,l=2;\n\t\tif(t>=2)e[++p]=a[2].n,v[p]=a[tat].n,l=3,a[tat].l--;\n\t\twhile(l<c){while(r<=n&&!a[r].l)r++;e[++p]=a[l++].n,v[p]=a[r].n,a[r].l--;}\n\t}\n\tfor(int i=c;i<n;i++)e[++p]=a[i].n,v[p]=a[i+1].n;\n\tcout<<p<<'\\n';for(int i=1;i<=p;i++)printf(\"%d %d\\n\",v[i],e[i]);\n} \n```",
        "postTime": 1545182230,
        "uid": 59907,
        "name": "Sakura_\u68a6\u7476",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1082D \u3010Maximum Diameter Graph\u3011"
    }
]