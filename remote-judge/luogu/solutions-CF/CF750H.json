[
    {
        "content": "\u611f\u89c9 sys \u7684\u590d\u6742\u5ea6\u662f\u9519\u7684~~\u53c8\u61d2\u5f97\u5361\u4e86~~\uff0c\u6240\u4ee5\u6765\u5199\u4e00\u7bc7\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\u9898\u76ee\u4e2d\u7684**\u8fde\u901a**\u6307\u7684\u662f\u56db\u8fde\u901a\uff0c\u4ee5\u4e0b**\u8fde\u901a**\u90fd\u8868\u793a\u516b\u8fde\u901a\u3002\u5b9a\u4e49 $(u,v)$ **\u51e0\u4e4e**\u8fde\u901a\u4e3a\u6709\u4e00\u4e2a\u65b9\u683c\u4e0e $u,v$ \u5206\u522b\u8fde\u901a\u4e14 $u,v$ \u4e0d\u8fde\u901a\u3002\u540c\u7406\u5b9a\u4e49\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u51e0\u4e4e\u8fde\u901a\u5173\u7cfb\u3002\n\n\u8003\u8651\u5982\u4f55\u4ec0\u4e48\u60c5\u51b5\u4e0b\u7b54\u6848\u4e3a `NO`\u3002\n\n![](https://codeforces.com/predownloaded/6b/42/6b42f35a09415bdfc1227185226517ad1ea8c884.png)\n\nfrom sys\n\n\u5982\u679c\u5982\u56fe\u5728\u68cb\u76d8\u5916\u9762\u6302\u4e00\u5708\u84dd\u8272\u7684\u65b0\u969c\u788d\uff0c\u90a3\u4e48\u5de6\u4e0a\u5230\u53f3\u4e0b\u6709\u8def\u5f84\u5f53\u4e14\u4ec5\u5f53\u5de6\u4e0b\u5230\u53f3\u4e0a\u8fde\u901a\u3002\u540c\u7406\uff0c\u6709\u4e24\u6761\u4e0d\u76f8\u4ea4\u8def\u5f84\u7b49\u4ef7\u4e8e\u4ec5\u6dfb\u52a0\u4e00\u5757\u65b9\u5757\u540e\u5de6\u4e0b\u5230\u53f3\u4e0a\u8fde\u901a\u3002\n\n\u5f53\u7136\u8fd9\u91cc\u6709\u4e2a\u5947\u602a\u7684 case \u662f\u6dfb\u52a0\u5728\u5de6\u4e0a\u89d2\uff0c\u7136\u800c\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u8fd9\u79cd\u6dfb\u52a0\u60c5\u51b5\uff08\u56e0\u4e3a\u5de6\u4e0a\u89d2\u5141\u8bb8\u8d70\u4e24\u6b21\uff09\uff0c\u6240\u4ee5\u56fe\u5e94\u8be5\u6539\u4e00\u4e0b\uff0c\u84dd\u8272\u5e94\u8be5\u5c11\u8986\u76d6\u4e00\u683c\u3002\n\n\u8fde\u901a\u5173\u7cfb\u663e\u7136\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8bbe\u5728\u6bcf\u4e2a\u8be2\u95ee\u5df2\u6709\u969c\u788d\u57fa\u7840\u4e0a\u6dfb\u52a0\u969c\u788d $x$ \u540e\u5de6\u4e0b\u548c\u53f3\u4e0a\u8fde\u901a\u7684\u6240\u6709\u5408\u6cd5 $x$ \u7684\u96c6\u5408\u4e3a $S$\uff0c\u5b9a\u4e49 $T$ \u4e3a\u4e0e $x$ \u8fde\u901a\u7684\u683c\u5b50\u96c6\u5408\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u8bbe $A$ \u8868\u793a\u65b0\u7684\u969c\u788d\uff0c\u5982\u679c\u7b54\u6848\u4e3a `NO` \u4e14\u5de6\u4e0b\u4e0e\u53f3\u4e0a\u4e0d\u8fde\u901a\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u82e5 $A\\cap T=B\\neq \\varnothing$\uff0c\u90a3\u4e48\u663e\u7136 $\\forall y\\in B$ \u5fc5\u5b9a\u4e0e\u5de6\u4e0b\uff08\u6216\u53f3\u4e0a\uff09\u8fde\u901a\uff0c\u4e14\u5b58\u5728\u65b9\u683c $x$ \u4f7f\u5f97 $x$ \u4e0e $y$ \u51e0\u4e4e\u8fde\u901a\u4e14 $x$ \u4e0e\u53f3\u4e0a\uff08\u6216\u5de6\u4e0b\uff09\u8fde\u901a\u3002 \u679a\u4e3e $S'$ \u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a $y$ \u5373\u53ef\u3002\u7531\u4e8e $x$ \u4e0e $y$ \u51e0\u4e4e\u8fde\u901a\uff0c\u5bf9\u6bcf\u4e2a $x$ \u53ea\u6709 $16$ \u4e2a\u53ef\u80fd\uff0c\u53ef\u4ee5\u66b4\u529b\u5224\u65ad\u662f\u5426\u4e0e\u53e6\u4e00\u4fa7\u8fde\u901a\u3002\n\n- \u82e5 $A\\cap T=\\varnothing$\uff0c\u7531\u4e8e\u4e00\u5f00\u59cb\u7b54\u6848\u4e3a `YES`\uff0c\u90a3\u4e48\u5fc5\u5b9a\u662f\u521d\u59cb\u56fe\u4e2d\u5b58\u5728\u51e0\u4e4e\u8fde\u901a \u8fde\u901a\u5757\u5bf9 $(u,v)$\uff0c\u5b83\u4eec\u5206\u522b\u5728\u8fd9\u6b21\u8be2\u95ee\u4e2d\u4e0e\u5de6\u4e0b\u548c\u53f3\u4e0a\u8fde\u901a\u4e86\u3002\u521d\u59cb\u56fe\u4e2d\u7684\u51e0\u4e4e\u8fde\u901a\u969c\u788d\u5bf9\u6570\u76ee\u81f3\u591a\u4e3a $16hw$\uff08\u8fd9\u4e00\u70b9\u4e0e\u4e0a\u4e00\u79cd\u60c5\u51b5\u8bc1\u660e\u4e00\u6837\uff09\uff0c\u53ef\u4ee5\u54c8\u5e0c\u4fdd\u5b58\u3002\u800c\u8fd9\u6b21\u8be2\u95ee\u4e2d\u4e0e\u5de6\u4e0b\u548c\u53f3\u4e0a\u8fde\u901a\u7684\u8fde\u901a\u5757\u5fc5\u5b9a\u548c\u65b0\u969c\u788d\u8fde\u901a\uff0c\u90a3\u4e48\u66b4\u529b\u679a\u4e3e\u65b0\u969c\u788d\u63a5\u89e6\u5230\u7684\u8fde\u901a\u5757\u5c31\u53ef\u4ee5\u4e86\u3002\u6ce8\u610f\u8fd9\u91cc\u679a\u4e3e\u7684\u662f\u8fde\u901a\u5757\u800c\u4e0d\u662f\u969c\u788d\uff0c\u56e0\u800c\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e3+10,M=N*N;\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\nstd::mt19937 rnd(time(0));\ninline int sj(int n)\n{\n\tunsigned int x=rnd();\n\treturn x%n+1;\n}\n#define rand fst\ntemplate<typename typC> void read(register typC &x)\n{\n\tregister int c=getchar(),fh=1;\n\twhile ((c<48)||(c>57))\n\t{\n\t\tif (c=='-') {c=getchar();fh=-1;break;}\n\t\tc=getchar();\n\t}\n\tx=c^48;c=getchar();\n\twhile ((c>=48)&&(c<=57))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n\tx*=fh;\n}\ntemplate<typename typC, typename... Args> void read(typC &first, Args& ... args) {\n\tread(first);\n\tread(args...);\n}\ntemplate<typename typC> void read(register typC *a,int num)\n{\n\tfor (register int i=1;i<=num;i++) read(a[i]);\n}\ntemplate<typename typC> void write(register typC x)\n{\n\tif (x<0) putchar('-'),x=-x;\n\tstatic int st[100];\n\tregister int tp=1;\n\tregister typC y;st[1]=x%10;x/=10;\n\twhile (x) y=x/10,st[++tp]=x-y*10,x=y;++tp;\n\twhile (--tp) putchar(st[tp]|48);\n}\ntemplate<typename typC> void write(register typC *a,register int num)\n{\n\tfor (register int i=1;i<=num;i++) write(a[i]),putchar(i==num?10:32);\n}\ntemplate<typename typC> typC ab(register typC x)\n{\n\tif (x<0) return -x;\n\treturn x;\n}\nset<ll> p;\nset<int> s;\nint f[M],rk[M],st[M][2];\nint nn,tp,ntp,L;\nvoid init(int nnn)\n{\n\tnn=nnn;\n\tfor (int i=1;i<=nn;i++) f[i]=i,rk[i]=1;\n\ttp=0;\n}\nint getf(register int x)\n{\n\twhile (f[x]!=x) x=f[x];\n\treturn x;\n}\nint getfa(int x)\n{\n\tif (f[x]==x) return x;\n\treturn f[x]=getfa(f[x]);\n}\nvoid uni(int x,int y)\n{\n\tx=getf(x);y=getf(y);\n\ts.insert(x);\n\tif (x==y) return;\n\ts.insert(y);\n\tif (rk[x]>rk[y]) swap(x,y);\n\tst[++tp][0]=x;st[tp][1]=rk[y];\n\tif (rk[x]==rk[y]) ++rk[y];\n\tf[x]=y;\n}\nvoid fix()\n{\n\tntp=tp;\n}\nvoid roll()\n{\n\twhile (tp>ntp) rk[f[st[tp][0]]]=st[tp][1],f[st[tp][0]]=st[tp][0],--tp;\n}\nint dir[9][2]={{0,0},{1,0},{0,1},{1,1},{-1,1},{-1,0},{-1,-1},{0,-1},{1,-1}};\nint id[N][N],a[N][N],b[N][2];\nint n,m,q,i,j,k,cnt,c,l,x,y,z;\ninline bool av(int x,int y)\n{\n\treturn x>=0&&x<=n&&y>=0&&y<=m; \n}\nint main()\n{\n\tread(n,m,q);\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tc=getchar();\n\t\twhile (c!='.'&&c!='#') c=getchar();\n\t\ta[i][1]=c=='#';\n\t\tfor (j=2;j<=m;j++) a[i][j]=getchar()=='#';\n\t}\n\t++n;++m;\n\tfor (i=3;i<=n;i++) a[i][0]=1;\n\tfor (i=1;i+2<m;i++) a[n][i]=1;\n\tfor (i=3;i<=m;i++) a[0][i]=1;\n\tfor (i=0;i+2<n;i++) a[i][m]=1;\n\tfor (i=0;i<=n;i++) for (j=0;j<=m;j++) id[i][j]=++cnt;\n\tinit(cnt);\n\tfor (i=0;i<=n;i++) for (j=0;j<=m;j++) if (a[i][j])\n\t{\n\t\tfor (k=1;k<=8;k++) if (av(x=i+dir[k][0],y=j+dir[k][1])&&a[x][y]) f[getfa(id[i][j])]=getfa(id[x][y]);\n\t}\n\tfor (i=1;i<=cnt;i++) getfa(i);\n\tfor (i=0;i<=n;i++) for (j=0;j<=m;j++) if (a[i][j]) for (k=-2;k<=2;k++) for (l=-2;l<=2;l++) if (av(x=i+k,y=j+l)&&a[x][y])\n\t{\n\t\tz=getfa(id[i][j]);c=getfa(id[x][y]);\n\t\tif (z==c) continue;\n\t\tp.insert((ll)z*cnt+c);\n\t}\n\tfor (i=1;i<=cnt;i++) if (f[i]!=i) rk[f[i]]=2;\n\tfix();\n\tfor (int ii=1;ii<=q;ii++)\n\t{\n\t\troll();\n\t\tread(L);\n\t\ts.erase(s.begin(),s.end());\n\t\ts.insert(getf(id[n][0]));s.insert(getf(id[0][m]));\n\t\tfor (i=1;i<=L;i++)\n\t\t{\n\t\t\tread(b[i]-1,2);a[b[i][0]][b[i][1]]=1;\n\t\t}\n\t\tif (a[1][1]||a[n-1][m-1])\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tgoto aaa;\n\t\t}\n\t\tfor (i=1;i<=L;i++)\n\t\t{\n\t\t\tfor (k=1;k<=8;k++) if (av(x=b[i][0]+dir[k][0],y=b[i][1]+dir[k][1])&&a[x][y]) uni(id[b[i][0]][b[i][1]],id[x][y]);\n\t\t}\n\t\tif (getf(id[n][0])==getf(id[0][m]))\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tgoto aaa;\n\t\t}\n\t\tfor (auto u:s) if (getf(u)==getf(id[n][0])) for (auto v:s) if (getf(v)==getf(id[0][m])&&p.find((ll)u*cnt+v)!=p.end())\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tgoto aaa;\n\t\t}\n\t\tfor (i=1;i<=L;i++) if (getf(id[x=b[i][0]][y=b[i][1]])==getf(id[n][0])) for (k=-2;k<=2;k++) for (l=-2;l<=2;l++) if (av(z=x+k,c=y+l)&&a[z][c]&&getf(id[z][c])==getf(id[0][m]))\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tgoto aaa;\n\t\t}\n\t\tfor (i=1;i<=L;i++) if (getf(id[x=b[i][0]][y=b[i][1]])==getf(id[0][m])) for (k=-2;k<=2;k++) for (l=-2;l<=2;l++) if (av(z=x+k,c=y+l)&&a[z][c]&&getf(id[z][c])==getf(id[n][0]))\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tgoto aaa;\n\t\t}\n\t\tputs(\"YES\");\n\t\taaa:;\n\t\tfor (i=1;i<=L;i++) a[b[i][0]][b[i][1]]=0;\n\t\tfflush(stdout);\n\t}\n}\n```",
        "postTime": 1622222766,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF750H\u3010New Year and Snowy Grid\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\uff0c\u82e5\u8be2\u95ee\u7684\u662f $(1, 1)$ \u4e0e $(h, w)$ \u662f\u5426\u8fde\u901a\uff0c\u8be5\u5982\u4f55\u89e3\u51b3\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u82e5\u5728\u7f51\u683c\u5916\u52a0\u4e00\u5c42 `#`\uff0c\u5219 $(1, 1)$ \u4e0e $(h, w)$ \u901a\u8fc7 `.` \u56db\u8fde\u901a\u5f53\u4e14\u4ec5\u5f53 $(h + 1, 0)$ \u4e0e $(0, w + 1)$ \u901a\u8fc7 `#` \u65e0\u6cd5\u516b\u8fde\u901a\u3002\n\n![](https://codeforces.com/predownloaded/6b/42/6b42f35a09415bdfc1227185226517ad1ea8c884.png)\n\n\u5982\u56fe\uff0c\u84dd\u8272\u4e3a\u7f51\u683c\u5916\u52a0\u7684\u4e00\u5c42 `#`\uff0c\u6b64\u65f6 `#` \u516b\u8fde\u901a\uff0c\u6240\u4ee5 `.` \u65e0\u6cd5\u56db\u8fde\u901a\u3002\n\n\u540c\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff0c`.` \u53cc\u56db\u8fde\u901a\uff08\u5b58\u5728\u4e24\u6761\u4e0d\u4ea4\u7684\u56db\u8fde\u901a\u8def\u5f84\uff09\u5f53\u4e14\u4ec5\u5f53 `#` \u65e0\u6cd5\u201c\u51e0\u4e4e\u201d\u516b\u8fde\u901a\u3002\u201c\u51e0\u4e4e\u201d\u516b\u8fde\u901a\u6307\u7684\u662f\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u4ec5\u6dfb\u52a0\u4e00\u4e2a `#` \u5373\u53ef\u516b\u8fde\u901a\u3002\n\n![](https://codeforces.com/predownloaded/5f/ab/5fab4477f02b83c2f120fa632bd370f86af0e2a2.png)\n\n\u5982\u56fe\uff0c$S$ \u5230 $E$ \u4ec5\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u6240\u4ee5\u9ed1\u8272\u662f\u201c\u51e0\u4e4e\u201d\u516b\u8fde\u901a\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u53d8\u4e3a\uff0c\u6dfb\u52a0 $k$ \u4e2a `#` \u540e\uff0c\u5982\u4f55\u5224\u5b9a `#` \u662f\u5426\u201c\u51e0\u4e4e\u201d\u516b\u8fde\u901a\u3002\n\n\u6211\u4eec\u8003\u8651\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u6c42\u51fa\u5df2\u7ecf\u201c\u51e0\u4e4e\u201d\u516b\u8fde\u901a\u7684\u8fde\u901a\u5757\u90bb\u5c45\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u53ef\u80fd\u8fd8\u6ca1\u6709\u548c\u5de6\u4e0b\u53f3\u4e0a\u8fde\u901a\u3002\u5728\u7f51\u683c\u4e0a\u8d70\u81f3\u591a\u4e24\u6b65\u8d70\u5230\u7684\u8fde\u901a\u5757\u90fd\u662f\u3002\n\n\u6211\u4eec\u628a\u53ef\u80fd `No` \u7684\u60c5\u51b5\u5206\u4e3a\u4e24\u79cd\uff1a\n\n1. \u4e24\u4e2a\u65b0\u7684 `#` \u5207\u6bd4\u96ea\u592b\u8ddd\u79bb $\\leq 2$\uff0c\u5e76\u4e14\u5b83\u4eec\u4e00\u4e2a\u548c\u5de6\u4e0b\u8fde\u901a\uff0c\u4e00\u4e2a\u548c\u53f3\u4e0a\u8fde\u901a\u3002\n2. \u4e00\u4e9b\u65b0\u7684 `#` \u4f7f\u5f97\u4e00\u4e9b\u539f\u6765\u5b64\u7acb\u7684\u8fde\u901a\u5757\u548c\u5de6\u4e0b\u8fde\u901a\u4e86\uff0c\u800c\u8fd9\u4e2a\u8fde\u901a\u5757\u53c8\u6709\u201c\u51e0\u4e4e\u201d\u516b\u8fde\u901a\u7684\u90bb\u5c45\u73b0\u5728\u548c\u53f3\u4e0a\u8fde\u901a\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5 $k^2$ \u679a\u4e3e\u5373\u53ef\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u7684\u8fde\u901a\u5757\u81f3\u591a\u53ea\u6709 $O(dk)$ \u79cd\uff0c\u5176\u4e2d $d=8$ \u8868\u793a\u4e00\u4e2a\u683c\u5b50\u7684\u76f8\u90bb\u683c\u5b50\u6570\uff0c\u679a\u4e3e\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u201c\u51e0\u4e4e\u201d\u516b\u8fde\u901a\u90bb\u5c45\uff0c\u770b\u770b\u662f\u5426\u548c\u53f3\u4e0a\u8fde\u901a\u3002\u6700\u591a $O(d^2)$ \u79cd\uff0c\u603b\u590d\u6742\u5ea6 $O(d^3k)$\u3002\n\n\u5b9e\u73b0\u4e0a\u6211\u7528\u4e86\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u3002\n\n\u6ce8\u610f\u7a7a\u95f4\u9650\u5236\u53ea\u6709 256MB\uff0c\u4e0d\u8981\u653e\u98de\u81ea\u6211\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(hwd^2+qd^3k)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int Maxn = 1005, Maxc = 2000005;\nconst int dx[] = {0, -1, -1, -1, 0, 1, 1, 1, 0}, dy[] = {0, -1, 0, 1, 1, 1, 0, -1, -1};\nint h, w, q, ct, dsu_ct, u[15], v[15], id[Maxn][Maxn], fa[Maxc], siz[Maxc], tmp_fa[Maxc], tmp_siz[Maxc];\nchar G[Maxn][Maxn];\nset <int> Se[Maxc];\npair <int, int> D[Maxc];\nint get_fa(int x)\n{\n\treturn x == fa[x] ? x : fa[x] = get_fa(fa[x]);\n}\nvoid merge(int x, int y)\n{\n\tint a = get_fa(x), b = get_fa(y);\n\tfa[a] = b;\n\tif (a != b) siz[b] += siz[a];\n}\nint tmp_get_fa(int x)\n{\n\treturn x == tmp_fa[x] ? x : tmp_get_fa(tmp_fa[x]);\n}\nvoid tmp_merge(int x, int y)\n{\n\tint a = tmp_get_fa(x), b = tmp_get_fa(y);\n\tif (a == b) return ;\n\tif (tmp_siz[a] > tmp_siz[b]) swap(a, b);\n\tD[++dsu_ct] = make_pair(a, b);\n\ttmp_fa[a] = b;\n\ttmp_siz[b] += tmp_siz[a];\n}\nvoid dfs(int x, int y, int c, set <int> &S)\n{\n\tif (x == 2 && y == 2) return ;\n\tif (x == h - 1 && y == w - 1) return ;\n\tif (G[x][y] == '#') S.insert(get_fa(id[x][y]));\n\tif (!c) return ;\n\tfor (int d = 1; d <= 8; d++)\n\t\tif (id[x + dx[d]][y + dy[d]]) dfs(x + dx[d], y + dy[d], c - 1, S);\n}\nint main()\n{\n\tscanf(\"%d%d%d\", &h, &w, &q);\n\th += 2, w += 2;\n\tfor (int i = 1; i <= h; i++)\n\t\tfor (int j = 1; j <= w; j++)\n\t\t\tid[i][j] = ++ct, fa[ct] = ct, siz[ct] = 1;\n\tfor (int i = 3; i <= h; i++)\n\t\tG[i][1] = '#';\n\tfor (int i = 1; i <= h - 3; i++)\n\t\tG[i][w] = '#';\n\tfor (int i = 3; i <= w; i++)\n\t\tG[1][i] = '#';\n\tfor (int i = 1; i <= w - 3; i++)\n\t\tG[h][i] = '#';\n\tfor (int i = 2; i <= h - 1; i++)\n\t\tfor (int j = 2; j <= w - 1; j++)\n\t\t{\n\t\t\tG[i][j] = getchar();\n\t\t\twhile (G[i][j] != '.' && G[i][j] != '#') G[i][j] = getchar();\n\t\t}\n\tfor (int i = 1; i <= h; i++)\n\t\tfor (int j = 1; j <= w; j++)\n\t\t\tfor (int d = 1; d <= 8; d++)\n\t\t\t\tif (id[i + dx[d]][j + dy[d]] && G[i][j] == '#' && G[i + dx[d]][j + dy[d]] == '#')\n\t\t\t\t\tmerge(id[i][j], id[i + dx[d]][j + dy[d]]);\n\tfor (int i = 1; i <= h; i++)\n\t\tfor (int j = 1; j <= w; j++)\n\t\t\tdfs(i, j, 2, Se[get_fa(id[i][j])]);\n\tmemcpy(tmp_fa, fa, sizeof(int[ct + 1]));\n\tmemcpy(tmp_siz, siz, sizeof(int[ct + 1]));\n\twhile (q--)\n\t{\n\t\tdsu_ct = 0;\n\t\tint k;\n\t\tscanf(\"%d\", &k);\n\t\tfor (int i = 1; i <= k; i++)\n\t\t{\n\t\t\tscanf(\"%d%d\", &u[i], &v[i]);\n\t\t\tu[i]++, v[i]++;\n\t\t\tG[u[i]][v[i]] = '#';\n\t\t}\n\t\tfor (int i = 1; i <= k; i++)\n\t\t\tfor (int d = 1; d <= 8; d++)\n\t\t\t\tif (id[u[i] + dx[d]][v[i] + dy[d]] && G[u[i] + dx[d]][v[i] + dy[d]] == '#')\n\t\t\t\t\ttmp_merge(id[u[i]][v[i]], id[u[i] + dx[d]][v[i] + dy[d]]); \n\t\tfor (int i = 1; i <= k; i++)\n\t\t\tfor (int d = 0; d <= 8; d++)\n\t\t\t\tif (id[u[i] + dx[d]][v[i] + dy[d]])\n\t\t\t\t{\n\t\t\t\t\tif (tmp_get_fa(id[u[i] + dx[d]][v[i] + dy[d]]) == tmp_get_fa(id[h][1]))\n\t\t\t\t\t{\n\t\t\t\t\t\tint pos = get_fa(id[u[i] + dx[d]][v[i] + dy[d]]);\n\t\t\t\t\t\tfor (set <int> :: iterator it = Se[pos].begin(); it != Se[pos].end(); it++)\n\t\t\t\t\t\t\tif (tmp_get_fa(*it) == tmp_get_fa(id[1][w]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\t\t\t\tgoto END;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (tmp_get_fa(id[u[i] + dx[d]][v[i] + dy[d]]) == tmp_get_fa(id[1][w]))\n\t\t\t\t\t{\n\t\t\t\t\t\tint pos = get_fa(id[u[i] + dx[d]][v[i] + dy[d]]);\n\t\t\t\t\t\tfor (set <int> :: iterator it = Se[pos].begin(); it != Se[pos].end(); it++)\n\t\t\t\t\t\t\tif (tmp_get_fa(*it) == tmp_get_fa(id[h][1]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\t\t\t\tgoto END;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\tfor (int i = 1; i <= k; i++)\n\t\t\tfor (int j = i + 1; j <= k; j++)\n\t\t\t\tif (max(abs(u[i] - u[j]), abs(v[i] - v[j])) <= 2)\n\t\t\t\t{\n\t\t\t\t\tif (tmp_get_fa(id[u[i]][v[i]]) == tmp_get_fa(id[1][w]) && tmp_get_fa(id[u[j]][v[j]]) == tmp_get_fa(id[h][1]))\n\t\t\t\t\t{\n\t\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\t\tgoto END;\n\t\t\t\t\t}\n\t\t\t\t\tif (tmp_get_fa(id[u[i]][v[i]]) == tmp_get_fa(id[h][1]) && tmp_get_fa(id[u[j]][v[j]]) == tmp_get_fa(id[1][w]))\n\t\t\t\t\t{\n\t\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\t\tgoto END;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\tputs(\"YES\");\n\t\tEND:fflush(stdout);\n\t\tfor (int i = dsu_ct; i >= 1; i--)\n\t\t{\n\t\t\ttmp_fa[D[i].first] = D[i].first;\n\t\t\ttmp_siz[D[i].second] -= tmp_siz[D[i].first];\n\t\t}\n\t\tfor (int i = 1; i <= k; i++)\n\t\t\tG[u[i]][v[i]] = '.';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603072268,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF750H \u3010New Year and Snowy Grid\u3011"
    },
    {
        "content": "\u5728\u539f\u56fe\u5916\u8fb9\u52a0\u4e00\u5708\u969c\u788d\uff08\u548c\u8d77\u70b9\u6216\u7ec8\u70b9\u516b\u8fde\u901a\u7684\u4f4d\u7f6e\u4e0d\u52a0\uff09\uff0c\u5bb9\u6613\u53d1\u73b0\u4e0d\u5b58\u5728\u4e24\u6761\u5408\u6cd5\u8def\u5f84\uff0c\u5f53\u4e14\u4ec5\u5f53\u5728\u81f3\u591a\u4e00\u4e2a\u4f4d\u7f6e\u65b0\u589e\u969c\u788d\u540e\uff0c\u5de6\u4e0b\u89d2\u7684\u534a\u5708\u969c\u788d\u548c\u53f3\u4e0a\u89d2\u7684\u534a\u5708\u969c\u788d\u516b\u8fde\u901a\u3002\u6839\u636e\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u6027\u8d28\u5f88\u5bb9\u6613\u8bc1\u660e\u3002\n\n\u4ee5\u4e0b\u6240\u6709\u201c\u8fde\u901a\u201d\u9ed8\u8ba4\u6307\u516b\u8fde\u901a\u3002\n\n\u5b9a\u4e49\u4e24\u4e2a\u70b9\u51e0\u4e4e\u8fde\u901a\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u4e2a\u70b9\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $2$\u3002\u5b9a\u4e49\u4e24\u4e2a\u969c\u788d\u5f62\u6210\u7684\u8fde\u901a\u5757 $A,B$ \u51e0\u4e4e\u8fde\u901a\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728 $A$ \u4e0a\u7684\u70b9 $i$ \u548c $B$ \u4e0a\u7684\u70b9 $j$ \u51e0\u4e4e\u8fde\u901a\u3002\n\n\u82e5\u539f\u56fe\u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c\u65b0\u589e $k$ \u4e2a\u70b9\u540e\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1.\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u8fde\u901a\u3002\n\n2.\u4e00\u4e2a\u65b0\u589e\u7684\u70b9\u548c\u5de6\u4e0b\u89d2/\u53f3\u4e0a\u89d2\u8fde\u901a\uff0c\u4e14\u548c\u53f3\u4e0a\u89d2/\u5de6\u4e0b\u89d2\u51e0\u4e4e\u8fde\u901a\u3002\n\n3.\u65b0\u589e\u7684\u969c\u788d\u70b9\u5bfc\u81f4\u4e24\u4e2a\u539f\u56fe\u4e0a\u51e0\u4e4e\u8fde\u901a\u7684\u8fde\u901a\u5757 $A,B$\uff0c$A$ \u548c\u5de6\u4e0b\u89d2\u8fde\u901a\uff0c$B$ \u548c\u53f3\u4e0a\u89d2\u8fde\u901a\u3002\n\n\u60c5\u51b5 1 \u5f88\u7b80\u5355\u3002\n\n\u60c5\u51b5 2 \u679a\u4e3e\u548c\u65b0\u589e\u70b9\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $2$ \u7684\u6240\u6709\u70b9\u5224\u65ad\u5373\u53ef\u3002\n\n\u60c5\u51b5 3 \u6bd4\u8f83\u9ebb\u70e6\u3002\n\n\u5728\u539f\u56fe\u4e0a\u627e\u5230\u6240\u6709\u51e0\u4e4e\u8fde\u901a\u7684\u8fde\u901a\u5757 $(i,j)$\uff0c\u8fd9\u6837\u7684 $(i,j)$ \u53ea\u6709 $O(hw)$ \u4e2a\uff0c\u7528\u54c8\u5e0c\u8868\u5b58\u5373\u53ef\u3002\n\n\u7528\u4e24\u4e2a\u6570\u7ec4 $a,b$ \u5206\u522b\u5b58\u50a8\u6240\u6709\u7684 $A$ \u548c $B$\u3002\u5982\u4f55\u627e\u5230\u8fd9\u4e9b\u8fde\u901a\u5757\uff1f\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e9b\u8fde\u901a\u5757\u4e00\u5b9a\u548c\u67d0\u4e2a\u65b0\u589e\u7684\u70b9\u76f8\u90bb\uff0c\u5bf9\u6bcf\u4e2a\u65b0\u589e\u70b9\u679a\u4e3e\u8ddd\u79bb\u4e3a $1$ \u7684\u70b9\u5373\u53ef\u3002\n\n\u5bb9\u6613\u53d1\u73b0 $a,b$ \u7684\u5927\u5c0f\u53ea\u6709 $O(k)$ \u7ea7\u522b\u3002\u66b4\u529b\u679a\u4e3e $a$ \u4e2d\u7684\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u518d\u679a\u4e3e $b$ \u4e2d\u7684\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5224\u65ad\u662f\u5426\u51e0\u4e4e\u8fde\u901a\u5373\u53ef\u3002\n\n\u5224\u65ad\u8fde\u901a\u6027\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u5b9e\u73b0\u3002\n\n\u603b\u7684\u590d\u6742\u5ea6\u5927\u6982\u662f $O(hw\\log+qk(k+\\log))$\u3002\n\n[\u53ef\u8bfb\u6027\u4e3a\u96f6\u7684\u4ee3\u7801](https://codeforces.com/contest/750/submission/134481694)",
        "postTime": 1636195634,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "CF750H New Year and Snowy Grid\uff08\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\uff09"
    }
]