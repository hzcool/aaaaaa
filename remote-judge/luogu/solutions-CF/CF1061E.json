[
    {
        "content": "[\u6b22\u8fce\u6765\u6211\u7684\u535a\u5ba2\u901b\u901b](https://blog.csdn.net/Dream_Lolita/article/details/86185723)\n\n\u8fd9\u9898\u7684\u5b9e\u8d28\u4e0a\u5c31\u662f\u5c06\u70b9\u5206\u6210\u82e5\u5e72\u4e2a\u96c6\u5408\uff0c\u6bcf\u4e2a\u96c6\u5408\u5fc5\u987b\u6fc0\u6d3b\u4e00\u5b9a\u6570\u91cf\u7684\u70b9\uff0c\u4f7f\u5f97\u6743\u6700\u5927\uff0c\u4e00\u770b\u5c31\u662f\u8d39\u7528\u6d41\u554a\u3002\n\n\n\u4ee4$x_i$\u4e3a\u7b2c$i$\u4e2a\u8282\u70b9\u7684\u9700\u6c42\uff08\u5b50\u6811\u4e2d\u81f3\u5c11\u9700\u8981\u591a\u5c11\u4e2a\uff09\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u6837\u8fde\u8fb9\n\n\n- \u5bf9\u4e8e\u6811$1$\u4e2d\u6bcf\u4e2a\u6709\u9700\u6c42\u8282\u70b9$i$\uff0c\u6211\u4eec\u4ece$S$\u5411$i$\u8fde\u8d39\u7528\u4e3a$0$\uff0c\u5bb9\u91cf\u4e3a$x_i-\\sum x_j$\uff0c\u5176\u4e2d$j\\neq i,j$\u5728$i$\u5b50\u6811\u5185\u3002\n\n- \u5bf9\u4e8e\u6811$2$\u4e2d\u6bcf\u4e2a\u6709\u9700\u6c42\u8282\u70b9$i$\uff0c\u6211\u4eec\u4ece$i$\u5411$T$\u8fde\u8d39\u7528\u4e3a$0$\uff0c\u5bb9\u91cf\u4e3a$x_i-\\sum x_j$\uff0c\u5176\u4e2d$j\\neq i,j$\u5728$i$\u5b50\u6811\u5185\u3002\n\n\n- \u5bf9\u4e8e$i$\u5728\u4e24\u68f5\u6811\u4e2d\u7684\u5411\u4e0a\u8d70\u5230\u6700\u8fd1\u6709\u9650\u5236\u7684\u70b9\uff08\u5305\u62ec\u81ea\u5df1\uff09$fa_1,fa_2$\uff0c\u4ece$fa_1$\u5411$fa_2$\u8fde\u8d39\u7528\u4e3a$a_i$\uff0c\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\u3002\n\n\u8dd1\u6700\u5927\u8d39\u7528\u6d41\u5373\u53ef\u3002\n\n\u82e5$S$\u8fde\u51fa\u53bb\u7684\u6d41\u91cf\u4e0d\u7b49\u4e8e\u8fde\u5411$T$\u7684\u6d41\u91cf\u6216\u4e0d\u6ee1\u6d41\u5219\u4e00\u5b9a\u4e0d\u80fd\u6ee1\u8db3\u6240\u6709\u8981\u6c42\u3002\n\n\u8003\u8651\u8fd9\u6837\u8fde\u8fb9\u7684\u610f\u4e49\uff1f\u6211\u4eec\u5728\u5b50\u6811\u5185\u7684\u9009\u62e9\u4e0d\u4f1a\u5f80\u6839\u7684\u7236\u4eb2\u8d21\u732e\uff0c\u540c\u65f6\u9650\u5236\u4e86\u5b50\u6811\u7684\u9700\u6c42\u3002\n\n\n\u3010\u53c2\u8003\u4ee3\u7801\u3011\n```cpp\n#include<bits/stdc++.h>\n#define pb push_back\nusing namespace std;\n\nconst int N=1010,M=2e6+10;\nconst int INF=0x3f3f3f3f;\nint n,ans,in,out,Q,a[N];\n\nint read()\n{\n\tint ret=0;char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) ret=ret*10+(c^48),c=getchar();\n\treturn ret;\n}\nvoid failed(){puts(\"-1\");exit(0);}\n\nnamespace Flow\n{\n\tint S=0,T=N-5,tot=1,mxflow;\n\tint head[N],fr[N],dis[N],inq[N],ins[N];\n\tqueue<int>q;\n\tstruct Tway\n\t{\n\t\tint u,v,nex,w,c;\n\t\tTway(int _u=0,int _v=0,int _nex=0,int _w=0,int _c=0):u(_u),v(_v),nex(_nex),w(_w),c(_c){}\n\t}e[M];\n\tvoid addedege(int u,int v,int w,int c)\n\t{\n\t\te[++tot]=Tway(u,v,head[u],w,c);head[u]=tot;\n\t\te[++tot]=Tway(v,u,head[v],0,-c);head[v]=tot;\n\t\t//printf(\"%d %d %d %d\\n\",u,v,w,c);\n\t}\n\tbool spfa()\n\t{\n\t\tmemset(dis,-0x3f,(T+2)<<2);memset(inq,0,(T+2)<<2);\n\t\tdis[S]=0;q.push(S);inq[S]=1;fr[T]=-1;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint u=q.front();q.pop();inq[u]=0;\n\t\t\tfor(int i=head[u];i;i=e[i].nex)\n\t\t\t{\n\t\t\t\tint v=e[i].v;\n\t\t\t\tif(e[i].w && dis[u]+e[i].c>dis[v])\n\t\t\t\t{\n\t\t\t\t\tdis[v]=dis[u]+e[i].c;fr[v]=i;\n\t\t\t\t\tif(!inq[v]) q.push(v),inq[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ~fr[T];\n\t}\n\tvoid mcfx()\n\t{\n\t\twhile(spfa()) \n\t\t{\n\t\t\tint mi=INF;\n\t\t\tfor(int i=fr[T];i;i=fr[e[i].u]) mi=min(mi,e[i].w); \n\t\t\tfor(int i=fr[T];i;i=fr[e[i].u]) ans+=e[i].c*mi,e[i].w-=mi,e[i^1].w+=mi;\n\t\t\tmxflow+=mi;\n\t\t}\n\t}\n}\n\nnamespace Tree\n{\n\tstruct Tway{int v,nex;};\n\tstruct Tree\n\t{\n\t\tint rt,tot,b[N],bl[N],head[N];\n\t\tTway e[N<<1];\n\t\tvector<int>vec[N];\n\t\tvoid add(int u,int v)\n\t\t{\n\t\t\te[++tot]=(Tway){v,head[u]};head[u]=tot;\n\t\t\te[++tot]=(Tway){u,head[v]};head[v]=tot;\n\t\t}\n\t\tint dfs(int x,int fa,bool f)\n\t\t{\n\t\t\tint sum=0;vec[x].pb(x);\n\t\t\tfor(int i=head[x];i;i=e[i].nex)\n\t\t\t{\n\t\t\t\tint v=e[i].v;\n\t\t\t\tif(v==fa) continue;\n\t\t\t\tsum+=dfs(v,x,f);\n\t\t\t\tfor(int i=0;i<(int)vec[v].size();++i)vec[x].pb(vec[v][i]);\n\t\t\t}\n\t\t\tif(b[x])\n\t\t\t{\n\t\t\t\tif(b[x]<sum) failed();\n\t\t\t\tif(!f) Flow::addedege(Flow::S,x,b[x]-sum,0),in+=b[x]-sum;\n\t\t\t\telse Flow::addedege(x+n,Flow::T,b[x]-sum,0),out+=b[x]-sum;\n\t\t\t\tfor(int i=0;i<(int)vec[x].size();++i) bl[vec[x][i]]=x;\n\t\t\t\tvec[x].clear();return b[x];\n\t\t\t}\n\t\t\treturn sum;\n\t\t}\n\t}T[2];\n}\nusing namespace Tree;\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"CF1061E.in\",\"r\",stdin);\n\tfreopen(\"CF1061E.out\",\"w\",stdout);\n#endif\n\tn=read();T[0].rt=read();T[1].rt=read();\n\tfor(int i=1;i<=n;++i) a[i]=read();\n\tfor(int i=1;i<n;++i) T[0].add(read(),read());\n\tfor(int i=1;i<n;++i) T[1].add(read(),read());\n\tQ=read();for(int i=1,x;i<=Q;++i)x=read(),T[0].b[x]=read();\n\tQ=read();for(int i=1,x;i<=Q;++i)x=read(),T[1].b[x]=read();\n\tT[0].dfs(T[0].rt,0,0);T[1].dfs(T[1].rt,0,1);\n\tfor(int i=1;i<=n;++i) Flow::addedege(T[0].bl[i],T[1].bl[i]+n,1,a[i]);\n\tif(in^out) failed();\n\tFlow::mcfx(); if(Flow::mxflow^in) failed();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1547559641,
        "uid": 15438,
        "name": "Durant_Lee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1061E \u3010Politics\u3011"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e9b\u6761\u4ef6\u5c31\u662f\u8981\u5728\u4e00\u4e9b\u96c6\u5408\u91cc\u9762\u9009\u4e00\u4e9b\u6570\u4f7f\u9009\u51fa\u6765\u7684\u6743\u503c\u548c\u6700\u5927\u3002\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u6700\u5927\u8d39\u7528\u6d41\u3002\n\n\u5efa\u6a21\u65f6\uff0c\u628a\u70b9\u62c6\u5f00\uff0c\u8868\u793a\u4e24\u68f5\u6811\uff0c\u6bcf\u5bf9\u70b9\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a\u5176\u6743\u503c\u7684\u8fb9\u3002\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u68f5\u6811\uff0c\u6bcf\u4e00\u4e2a\u6761\u4ef6\u5efa\u4e00\u4e2a\u70b9\uff0c\u5411\u96c6\u5408\u4e2d\u7684\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\u7136\u540e\u628a\u5efa\u51fa\u6765\u7684\u70b9\u8fde\u5230\u6e90\u70b9/\u6c47\u70b9\u5c31\u597d\u4e86\u3002\n\n\u662f\u5426\u5408\u6cd5\u53ea\u8981\u5728\u8dd1\u5b8c\u8d39\u7528\u6d41\u540e\u5224\u4e00\u4e0b\u6ee1\u6d41\u5373\u53ef\u3002\n\n(\u6ce8\u610f\u4e00\u5f00\u59cb\u8981\u628a\u5b58\u9650\u5236\u7684\u6570\u7ec4\u521d\u59cb\u5316\u4e3a-1\uff0c\u56e0\u4e3a\u4ed6\u53ef\u4ee5\u9650\u5236\u4e3a0)\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<deque>\n#define mxn 510\nusing namespace std;\nconst int inf=1e9;\nint n,m,N,S,T,sl,fh,rtx,rty;\nint rd()\n{\n    sl=0;fh=1;\n    char ch=getchar();\n    while(ch<'0'||'9'<ch) {if(ch=='-') fh=-1; ch=getchar();}\n    while('0'<=ch&&ch<='9') sl=sl*10+ch-'0',ch=getchar();\n    return sl*fh;\n}\nnamespace WLL\n{\n    #define inf 0x7fffffff\n    #define pb push_back\n    #define pf push_front\n    #define ppf pop_front\n    int ans,vis[mxn*10],dis[mxn*10];\n    int t,h[mxn*10],cur[mxn*10];\n    struct edge\n    {\n        int to,val,cap,nxt;\n    }e[mxn*mxn];\n    void init() {S=++N; T=++N; t=1;}\n    void add(int u,int v,int c,int w)\n    {\n        if(c<0) return ;\n        e[++t]=(edge){v,w,c,h[u]};h[u]=t;\n        e[++t]=(edge){u,-w,0,h[v]};h[v]=t;\n    }\n    bool spfa()\n    {\n        fill(dis+1,dis+N+1,-inf);\n        fill(vis+1,vis+N+1,0);\n        deque<int> q;int u,v;\n        q.pb(S);dis[S]=0;\n        while(!q.empty())\n        {\n            u=q.front();q.ppf();\n            for(int i=h[u];i;i=e[i].nxt)\n                if(e[i].cap&&dis[v=e[i].to]<dis[u]+e[i].val)\n                {\n                    dis[v]=dis[u]+e[i].val;\n                    if(vis[v]) continue;vis[v]=1;\n                    if(!q.empty()&&dis[v]>=dis[q.front()]) q.pf(v);\n                    else q.pb(v);\n                }\n            vis[u]=0;\n        }\n        return dis[T]>-inf;\n    }\n    int dfs(int u,int f)\n    {\n        vis[u]=1;if(u==T) return f;\n        int v,q=0,tmp;\n        for(int &i=cur[u];i;i=e[i].nxt)\n            if(!vis[v=e[i].to]&&e[i].cap&&dis[v]==dis[u]+e[i].val)\n            {\n                tmp=dfs(v,min(f,e[i].cap));\n                f-=tmp;q+=tmp;\n                ans+=tmp*e[i].val;\n                e[i].cap-=tmp;e[i^1].cap+=tmp;\n                if(!f) return q;\n            }\n        return q;\n    }\n    void main()\n    {\n        while(spfa())\n        {\n            for(int i=1;i<=N;++i) cur[i]=h[i];vis[T]=1;\n            while(vis[T]) fill(vis+1,vis+N+1,0),dfs(S,inf);\n        }\n        for(int i=h[S];i;i=e[i].nxt)\n            if(e[i].cap)\n            {\n                puts(\"-1\");\n                return ;\n            }\n        for(int i=h[T];i;i=e[i].nxt)\n            if(e[i^1].cap)\n            {\n                puts(\"-1\");\n                return ;\n            }\n        printf(\"%d\\n\",ans);\n    }\n}\nstruct Tre\n{\n    int id,flg,flow,a[mxn];\n    int t,h[mxn];\n    struct edge\n    {\n        int to,nxt;\n    }e[mxn<<1];\n    void init() {fill(a+1,a+n+1,-1);}\n    void add(int u,int v)\n    {\n        e[++t]=(edge){v,h[u]};h[u]=t;\n        e[++t]=(edge){u,h[v]};h[v]=t;\n    }\n    void dfs2(int u,int f)\n    {\n        if(a[u]>=0) {flow-=a[u]; return ;}\n        if(flg) WLL::add(2*u,id,1,0);\n        else WLL::add(id,2*u-1,1,0);\n        for(int v,i=h[u];i;i=e[i].nxt)\n            if((v=e[i].to)!=f)\n                dfs2(v,u);\n    }\n    void dfs1(int u,int f)\n    {\n        for(int v,i=h[u];i;i=e[i].nxt)\n            if((v=e[i].to)!=f)\n                dfs1(v,u);\n        if(a[u]>=0)\n        {\n            flow=a[u];id=++N;\n            for(int v,i=h[u];i;i=e[i].nxt)\n                if((v=e[i].to)!=f)\n                    dfs2(v,u);\n            if(flg) WLL::add(id,T,flow,0),WLL::add(u*2,id,1,0);\n            else WLL::add(S,id,flow,0),WLL::add(id,u*2-1,1,0);\n        }\n    }\n}Tx,Ty;\nint main()\n{\n    n=rd();rtx=rd();rty=rd();int x,y;\n    Ty.flg=1;N=n<<1;WLL::init();\n    Tx.init();Ty.init();\n    for(int i=1;i<=n;++i) x=rd(),WLL::add(i*2-1,i*2,1,x);\n    for(int i=1;i<n;++i) x=rd(),y=rd(),Tx.add(x,y);\n    for(int i=1;i<n;++i) x=rd(),y=rd(),Ty.add(x,y);\n    m=rd();for(int i=1;i<=m;++i) x=rd(),Tx.a[x]=rd();\n    m=rd();for(int i=1;i<=m;++i) x=rd(),Ty.a[x]=rd();\n    Tx.dfs1(rtx,0);Ty.dfs1(rty,0);\n    WLL::main();\n    return 0;\n}\n```",
        "postTime": 1547726483,
        "uid": 27677,
        "name": "day_dream",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1061E \u3010Politics\u3011"
    }
]