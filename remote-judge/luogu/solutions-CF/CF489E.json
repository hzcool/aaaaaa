[
    {
        "content": "### $2020\\cdot FDUXCPC\\cdot Spring-2-Problem H$\n### \u9898\u610f\uff1a\n \n\u4e00\u4e2a\u65c5\u884c\u8005\u4ece\u4e00\u6761\u6570\u8f74\u7684$0$\u70b9\u51fa\u53d1\u65c5\u884c\u3002\u6570\u8f74\u4e0a\u4e00\u5171\u6709$n$\u4e2a\u666f\u70b9\uff0c\u6bcf\u4e2a\u666f\u70b9\u5750\u6807$x_i$\u4e0d\u540c\uff0c\u4e14\u6309\u8f93\u5165\u987a\u5e8f\u9012\u3002\u540c\u65f6\u6bcf\u4e2a\u666f\u70b9\u6709\u4e00\u4e2a\u7f8e\u4e3d\u5ea6$b_i$\u3002\u8f93\u5165\u6570\u636e\u4e2d\u8fd8\u6709\u4e00\u4e2a\u7528\u4e8e\u8ba1\u7b97\u75b2\u52b3\u5ea6\u7684\u503c$l$.\n\n\u65c5\u884c\u8005\u4f1a\u5728\u6bcf\u5929\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u6cbf\u6b63\u65b9\u5411\u524d\u8fdb\u5230\u8fbe\u4e00\u4e2a\u666f\u70b9\uff0c\u7136\u540e\u4f11\u606f\u3002\u89c4\u5b9a\uff0c\u5982\u679c\u4ed6\u4ece\u666f\u70b9$u$\u5230\u8fbe$v$\uff0c\u90a3\u4e48\u4ed6\u8fd9\u5929\u7684\u75b2\u52b3\u5ea6$f=\\sqrt{\\big|(x_v-x_u)-l\\big|}$.\u540c\u65f6\u8fd9\u5929\u4ed6\u83b7\u5f97\u7684\u6ee1\u610f\u5ea6\u7b49\u4e8e\u505c\u7559\u666f\u70b9\u7684\u7f8e\u4e3d\u5ea6\u3002\n\n\u73b0\u5728\u9700\u8981\u4f60\u89c4\u5212\u4ed6\u7684\u65c5\u6e38\u65e5\u7a0b\uff0c\u6309\u987a\u5e8f\u8f93\u51fa\u6bcf\u5929\u4ed6\u505c\u7559\u7684\u666f\u70b9\u7f16\u53f7\uff0c\u8fd9\u4e2a\u65c5\u6e38\u8ba1\u5212\u9700\u8981\u6ee1\u8db3\u4e0b\u9762\u7684\u6761\u4ef6\uff1a\n\n* \u6700\u540e\u5fc5\u987b\u4ee5\u666f\u70b9n\u7ed3\u675f\n\n* \u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u4f18\u5316\u75b2\u52b3\u5ea6\u4e4b\u548c\u4e0e\u6ee1\u610f\u5ea6\u4e4b\u548c\u7684\u6bd4\u7387\uff0c\u5373\u8981\u6c42$\\frac{\\sum f_i}{\\sum b_i}$\u5c3d\u53ef\u80fd\u5c0f\n\n### \u7b97\u6cd5\uff1a\n\n#### 01\u5206\u6570\u89c4\u5212+\u9012\u63a8\u6c42\u6700\u77ed\u8def\n\n\u4ee4$\\frac{\\sum f_i}{\\sum b_i}=\\eta$\n\n\u6709$\\sum f_i-\\eta \\sum b_i=0$\n\n\u5373$\\sum(f_i-\\eta b_i)=0$\n\n\u63a5\u4e0b\u6765\u662f01\u5206\u6570\u89c4\u5212\u5e38\u7528\u5957\u8def\uff0c\u4e8c\u5206$\\eta$\u7684\u503c\uff0c\u5bf9\u4e8e\u4e00\u5929\u7684\u884c\u7a0b$u -> v$\u53ef\u4ee5\u89c6\u4e3a$(u,v)$\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u6743\u4e3a$f_{(u,v)}-\\eta b_v$ \u7684\u5355\u5411\u8fb9\u3002\u7531\u4e8e\u9898\u76ee\u7279\u70b9\uff0c\u8f6c\u79fb\u8fb9\u4e0e\u666f\u70b9\u5171\u540c\u6784\u6210\u4e00\u4e2aDAG\uff0c\u76f4\u63a5\u9012\u63a8\u6c42\u6700\u77ed\u8def\uff0c\u5982\u679c\u6700\u6bb5\u8def\u7684\u503c\u5927\u4e8e0\uff0c\u5219\u8bf4\u660e\u9700\u8981\u589e\u5927$\\eta$\uff0c\u53cd\u4e4b\u51cf\u5c11\u3002\n\n\u5728\u6bcf\u6b21\u6c42\u6700\u77ed\u8def\u7684\u65f6\u5019\u4fdd\u7559\u6bcf\u4e2a\u70b9\u7684\u524d\u7f6e\u8f6c\u79fb\u70b9\uff0c\u5f53$\\eta$\u8fbe\u5230\u4e00\u5b9a\u7cbe\u5ea6\u65f6\uff0c\u5229\u7528\u6700\u540e\u4e00\u6b21\u8bb0\u5f55\u7684\u524d\u7f6e\u8f6c\u79fb\u70b9\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6$O\\big(n^2log(\\sum f_i)\\big)$\n\n\u4ee3\u7801\uff1a\uff08\u548c\u63cf\u8ff0\u7684\u5f0f\u5b50\u6709\u4e9b\u51fa\u5165\uff0c\u4f46\u65b9\u6cd5\u662f\u4e00\u6837\u7684\uff09\n\n```cpp\n#define George_Plover\n#include <map>\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <algorithm>\n#define LL long long\n#define MAXN 1001\n\nusing namespace std;\nint b[MAXN],loc[MAXN],n,m;\ndouble dp[MAXN];\nint pre[MAXN];\nvoid out(int x);\nbool check(double x)\n{\n    for(int i=1;i<=n;i++)\n        dp[i]=1e19;\n    dp[0]=0.00;\n    \n    for(int i=0;i<=n;i++)\n    {\n        for(int j=i+1;j<=n;j++)\n        {\n            double tmp=dp[i]+sqrt(abs(loc[j]-loc[i]-m))*x-b[j];\n            if(dp[j]>tmp)\n            {\n                dp[j]=tmp;\n                pre[j]=i;\n            }\n        }\n    }\n    //out(n);\n    //printf(\"\\n\");\n    if(dp[n]<0)\n        return 0;\n    return 1;\n}\nvoid out(int x)\n{\n    if(!x)\n        return;\n    \n    out(pre[x]);\n    \n    printf(\"%d \",x);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    \n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&loc[i],&b[i]);\n    }\n    double L=0,R=1e6;\n    while(abs(L-R)>1e-9)\n    {\n        //cout<<L<<\" \"<<R<<endl;\n        double mid=(L+R)/2.0;\n        if(check(mid))\n        {\n            R=mid;\n        }\n        else\n        {\n            L=mid;\n        }\n    }\n    //cout<<L<<endl;\n    out(n);\n    return 0;\n}\n\n```\n",
        "postTime": 1584183284,
        "uid": 34329,
        "name": "George_Plover",
        "ccfLevel": 7,
        "title": "CodeForces 489E Hiking \uff0801\u5206\u6570\u89c4\u5212\uff09"
    },
    {
        "content": "\u8fd9\u4e2a\u5f0f\u5b50\u7684\u5f62\u5f0f\u4e00\u770b\u5c31\u662f\u5206\u6570\u89c4\u5212\u634f\u3002\n\n\u4e8c\u5206\u503c $mid$\uff0c\u8bb0\u9009\u51fa\u6765\u7684\u70b9\u4e0b\u6807\u4e3a $p_1,\\cdots,p_m$ \u5982\u679c\u53ef\u4ee5\u53d6\u5230\u5219\u6709 $\\frac{\\sum_{i=1}^m\\sqrt{|l-x_{p_i}+x_{p_{i-1}}|}}{\\sum_{i=1}^mc_{p_i}}\\leq mid$\uff0c\u53d8\u5f62\u5f97\u5230 $\\sum_{i=1}^m(\\sqrt{|l-x_{p_i}+x_{p_{i-1}}|}-c_{p_i}\\times mid)\\leq 0$\u3002\n\n\u8fd9\u4e2a\u5f0f\u5b50\u662f\u5bb9\u6613 dp \u51fa\u6765\u7684\uff0c\u8bb0 $dp_i$ \u8868\u793a\u6700\u540e\u4e00\u6b21\u5728 $i$ \u8fc7\u591c\u7684\u6700\u5c0f\u503c\uff0c\u8f6c\u79fb\u76f4\u63a5\u679a\u4e3e\u4e0a\u4e00\u6b21\u8fc7\u591c\u5728\u54ea\u91cc\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2\\log V)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint n,m,x[1001],val[1001],pre[1001];\ndouble dp[1001];\ninline bool check(double mid)\n{\n    for(int i=0;i<=n;++i)\n    {\n        dp[i]=1e9;\n        pre[i]=0;\n    }\n    dp[0]=0.0000;\n    for(int i=1;i<=n;++i)\n        for(int j=0;j<i;++j)\n        {\n            double w=dp[j]+sqrt(abs(m-x[i]+x[j]))-val[i]*mid;\n            if(w<dp[i])\n            {\n                dp[i]=w;\n                pre[i]=j;\n            }\n        }\n    return dp[n]<=0.000;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;++i)\n        cin>>x[i]>>val[i];\n    double l=1e-6,r=1e6,mid;\n    for(int i=1;i<=50;++i)\n    {\n        mid=(l+r)/2;\n        if(check(mid))\n            r=mid;\n        else\n            l=mid;\n    }\n    check(l);\n    vector<int> v;\n    for(int i=n;i;i=pre[i])\n        v.emplace_back(i);\n    reverse(v.begin(),v.end());\n    for(auto i:v)\n        cout<<i<<\" \";\n    cout<<'\\n';\n    return 0;\n}\n```",
        "postTime": 1645498466,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "CF489E Hiking \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF489E)\n\n## \u9898\u76ee\u5927\u610f\n\n\u4e00\u4e2a\u6570\u8f74\u4e0a\u6709n\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u5747\u4e3a\u6b63\u6574\u6570\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u7f8e\u4e3d\u503c\u3002\n\n\u7ed9\u5b9a\u5e38\u6570p\uff0c\u4ece\u539f\u70b9\u51fa\u53d1\uff0c\u53ea\u80fd\u5411\u6b63\u65b9\u5411\u79fb\u52a8\uff0c\u6bcf\u6b21\u5fc5\u987b\u505c\u5728\u4e00\u4e2a\u70b9\u4e0a\uff0c\u5047\u8bbe\u7ecf\u8fc7\u7684\u8ddd\u79bb\u4e3ad\uff0c\u90a3\u4e48\u8fd9\u6b21hike\u7684\u75b2\u52b3\u503c\u4e3a$\\sqrt{abs(d-p)}$\u3002\u73b0\u5728\u8981\u4ece\u539f\u70b9\u524d\u5f80\u6700\u5de6\u7aef\u7684\u70b9\uff0c\u6c42\u603b\u75b2\u52b3\u503c/\u603b\u7f8e\u4e3d\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n\u603b\u7f8e\u4e3d\u503c\u4e3a\u505c\u7559\u7684\u70b9\u7684\u7f8e\u4e3d\u503c\u4e4b\u548c\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n## \u5206\u6570\u89c4\u5212\n\n\u6ce8\u610f\u5230\u6c42\u4e24\u4e2a\u548c\u5f0f\u7684\u6bd4\u503c\uff0c\u5e76\u4e14\u4ee5\u4e00\u4e2a\u70b9\u4e3a\u7ec8\u70b9\u5c31\u8981\u5bf9\u75b2\u52b3\u503c\u3001\u7f8e\u4e3d\u503c\u90fd\u4ea7\u751f\u8d21\u732e\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8003\u865101\u5206\u6570\u89c4\u5212\n\n1.\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848\uff0c\u7136\u540e\u4ee4\u65b0\u70b9\u6743\u4e3a \u4e0a\u4e2a\u70b9\u5230\u8fd9\u91cc\u7684\u8ddd\u79bb-\u4e8c\u5206\u7b54\u6848*\u8be5\u70b9\u7f8e\u4e3d\u503c\n\n2.dp\u6c42\u89e3\u5224\u65ad\u662f\u5426\u5408\u6cd5\n\n\u5173\u4e8e[01\u5206\u6570\u89c4\u5212](https://blog.csdn.net/luyan0408/article/details/106750403)\n\n## \u52a8\u6001\u89c4\u5212\n\n\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5728\u8df3\u8dc3\u7684\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u6700\u5c0f\u70b9\u6743\u3002\n\n\u8003\u8651\u6700\u7b80\u5355\u7684\u52a8\u6001\u89c4\u5212\uff1a$dp[i]$\u8868\u793a\u5230i\u53f7\u70b9\u7684\u65f6\u5019\u7684\u6700\u5c0f\u70b9\u6743\u3002\n\n\u90a3\u4e48$dp[i]=min(dp[k]+c[i])$\n\n\u5176\u4e2dc\u8868\u793a\u70b9\u6743\uff0c$k\u2208(1,i-1)$\n\n# \u4ee3\u7801\n\n\u4e0b\u9644AC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read(){\n\tchar s;\n\tint x=0,f=1;\n\ts=getchar();\n\twhile(s<'0'||s>'9'){\n\t\tif(s=='-')f=-1;\n\t\ts=getchar();\n\t}\n\twhile(s>='0'&&s<='9'){\n\t\tx*=10;\n\t\tx+=s-'0';\n\t\ts=getchar();\n\t}\n\treturn x*f;\n}\nconst int N=1010;\nint n,len;\nint x[N],c[N];\ndouble dp[N];\nint pre[N];//\u8bb0\u5f55\u7b54\u6848\u8def\u5f84 \nbool check(double limit){\n\tfor(int i=1;i<=n;i++){\n\t\tdp[i]=1e9;\n\t\tfor(int j=0;j<i;j++){\n\t\t\tdouble tmp=dp[j]+sqrt(abs(len-(x[i]-x[j])))-limit*c[i];\n\t\t\tif(tmp<dp[i]){\n\t\t\t\tpre[i]=j;\n\t\t\t\tdp[i]=tmp;\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[n]>0;\n}\nint ans[N];\nint main(){\n\tn=read(),len=read();\n\tfor(int i=1;i<=n;i++){\n\t\tx[i]=read(),c[i]=read();\n\t}\n\tdouble l=0,r=1e10;\n\twhile(r-l>1e-8){\n\t\tdouble mid=(l+r)/2;\n\t\tif(check(mid))l=mid;\n\t\telse r=mid;\n\t}\n\tcheck(l);\n\tint cnt=1;\n\tint id=n;\n\twhile(id>0){\n\t\tans[cnt++]=id;\n\t\tid=pre[id];\n\t}\n\tfor(int i=cnt-1;i>0;i--){\n\t\tprintf(\"%d \",ans[i]);\n\t}\n}\n```\n\n",
        "postTime": 1592219122,
        "uid": 120244,
        "name": "luyan",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF489E \u3010Hiking\u3011"
    },
    {
        "content": "# \u4f5c\u8005\uff1ac_cl\n\u539f\u6587\uff1a<https://blog.csdn.net/c_czl/article/details/77893469>\n\u9898\u610f\uff1a\n\n\u6570\u8f74\u4e0a\u6709n\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e2a\u8ddd\u79bb\u6e90\u70b9\u7684\u8ddd\u79bbxi\u548c\u7f8e\u89c2\u503cbi  \u4e3b\u4eba\u516c\u7ad9\u5728\u6e90\u70b9\uff0c\u4ed6\u5e0c\u671b\u6bcf\u6b65\u6b65\u957flen\uff0c\u4f46\u6bcf\u4e00\u6b65\u5fc5\u987b\u843d\u5728n\u4e2a\u70b9\u5176\u4e2d\u4e00\u4e2a\u4e0a\uff0c\u4e14\u884c\u8fdb\u65b9\u5411\u552f\u4e00\uff0c\u8d70\u5230\u70b9n\u540e\u53ef\u4ee5\u8ba1\u7b97\u65c5\u884c\u7684\u4ef7\u503c\n\n\u5bf9\u4e8e\u6240\u6709\u8d70\u8fc7\u7684\u70b9i  val = sum( sqrt( abs(x[i]-x[i-1]-len) ) / b[i] )  \u76ee\u6807val\u5c3d\u91cf\u5c0f  \u6253\u5370\u8def\u5f84\u65b9\u6848\n\n\u601d\u8def\uff1a\n\n\u7b2c\u4e00\u6b21\u505a\u5206\u6570\u89c4\u5212\u9898  \u8fd9\u9898\u662f\u6bd4\u8f83\u5178\u578b\u768401\u89c4\u5212\n\n\u7b80\u5355\u63cf\u8ff0\u4e00\u4e0b01\u89c4\u5212  \u5c31\u662f ans = sum(ci* xi)/sum(di* xi) \u5176\u4e2dxi\u4e3a{0,1}\n\n\u5e38\u89c4\u7684\u89e3\u6cd5\u662f\u53d8\u5f62\u4e0a\u8ff0\u5f0f\u5b50 F(ans) = sum(ci* xi) - sum(di* xi) * ans \u8fd9\u65f6\u6211\u4eec\u5c06ans\u5f53\u6210\u81ea\u53d8\u91cf  \u6784\u9020\u4e00\u4e2a\u51fd\u6570  \u5bb9\u6613\u53d1\u73b0F\u662f\u5355\u8c03\u7684  \u90a3\u4e48\u5c31\u53ef\u4ee5\u4e8c\u5206ans  \u5c06\u6c42\u89e3\u6700\u503c\u95ee\u9898\u8f6c\u6362\u6210\u5224\u5b9a\u53ef\u884c\u6027\u95ee\u9898\n\n\u5bf9\u4e8e\u672c\u9898  \u6211\u4eec\u53ef\u4ee5\u5c06val\u53d8\u5f62**val = sum(sqrt( abs(x[i]-x[i-1]-len))/sum(b[i])** \u90a3\u4e48\u4e5f\u53ef\u4ee5\u6784\u5efaF\u51fd\u6570**F(val) = sum(sqrt( abs(x[i]-x[i-1]-len) ) - sum(b[i]) * val**\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7531\u4e8e\u8ba1\u7b97\u4e2d\u5b58\u5728i\u548ci-1\u4f4d\u7f6e\u7684\u8054\u7cfb\u6240\u4ee5\u4e0d\u662f\u90a3\u4e48\u7b80\u5355  \n\n\u4f46\u662f\u4e5f\u53ef\u4ee5\u53d1\u73b0  \u6211\u4eec\u5c06\u539f\u672c\u7684\u9664\u6cd5\u5f0f\u5b50\u53d8\u6210\u4e86\u51cf\u6cd5\u5f0f\u5b50   _\u8fd9\u5c31\u4f1a\u51fa\u73b0\u627f\u88ad\u6027\uff01\uff01_   \u6211\u4eec\u53ef\u4ee5\u5229\u7528dp\u8ba1\u7b97\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb **dp[i] = dp[j] + sqrt( abs(x[i]-x[j]-len ) - b[i] * val**(\n~~\u771f\u8c1b\u5c31\u662f\u7528dp[j]\u5305\u542b\u4e86F\u4e2d\u7684sum~~)\n\n\u8fd9\u65f6\u4e8c\u5206val\u662flogn\u7684  \u5bf9\u4e8e\u6bcf\u6b21\u7684val\u6211\u4eec\u53ef\u4ee5\u7528n^2\u7684dp\u8fdb\u884c\u5224\u5b9a\n\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 1010\n \nint n, len;\nint x[N], b[N];\nint pre[N], out[N];\ndouble dp[N];\n \nbool yes(double ans) {\n\tfor (int i = 1; i <= n; i++) {\n\t\tdp[i] = 1e30;\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tdouble tmp = dp[j] + sqrt(1e-8 + abs(x[i] - x[j] - len))\n\t\t\t\t\t- ans * b[i];\n\t\t\tif (dp[i] > tmp) {\n\t\t\t\tdp[i] = tmp;\n\t\t\t\tpre[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[n] < 0;\n}\n \nint main() {\n\tscanf(\"%d%d\", &n, &len);\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%d%d\", &x[i], &b[i]);\n\tdouble l = 0, r = 1e10, mid;\n\twhile (r - l > 1e-8) {\n\t\tmid = (l + r) / 2;\n\t\tif (yes(mid)) {\n\t\t\tr = mid;\n\t\t} else\n\t\t\tl = mid;\n\t}\n\tyes(l);\n\tlen = 0;\n\tout[0] = n;\n\twhile (pre[out[len]]) {\n\t\tout[len + 1] = pre[out[len]];\n\t\tlen++;\n\t}\n\tfor (int i = len; i >= 0; i--)\n\t\tprintf(\"%d%s\", out[i], (i == 0) ? \"\\n\" : \" \");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1564577998,
        "uid": 178953,
        "name": "zyy121212",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF489E \u3010Hiking\u3011"
    },
    {
        "content": "# CF489E Hiking \u9898\u89e3\n\n\u5f62\u5982\n\u4ece$n$\u4e2a\u7269\u4f53\u4e2d\u9009\u51fa$k$\u4e2a\uff0c\u6c42\u51fa\uff1a\n$$\n\\frac{\\Sigma_{i=1}^{k} a_i}{\\Sigma_{i=1}^{k} b_i}(Min | Max)\n$$\n\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u4e00\u822c\u91c7\u7528 01\u5206\u6570\u89c4\u5212 \u89e3\u51b3\u3002\n\n\u5982\u679c\u4f60\u73b0\u5728\u5bf9\u4e8e 01\u5206\u6570\u89c4\u5212 \u4e00\u65e0\u6240\u77e5\u7684\u8bdd\uff0c\u8bf7\u53bb\u505a\u51e0\u9053\u677f\u5b50\u9898\u7ec3\u7ec3\u624b\u3002\n\n\u56de\u5230\u8fd9\u4e2a\u9898\uff1a\n\n## \u9898\u610f\n\n\u6709$n$\u4e2a\u70b9\uff0c\u6bcf\u4e00\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c$b_i$\u548c\u4e00\u4e2a\u503c$x_i$\n\n\u6c42\u51fa$\\frac{\\Sigma_{j=1}^{k} \\sqrt{a_j-a_{j-1}-l}}{\\Sigma_{j=1}^{k} b_j}(Min)$\n\n\u770b\u4e00\u770b\u6570\u636e\u8303\u56f4\uff1a\n\n01\u5206\u6570\u89c4\u5212 \u4e2d\u7684 \u4e8c\u5206\u7b54\u6848 \u5355\u72ec\u7684\u590d\u6742\u5ea6\u4e3a($log$ $V$)\n\n\u7b97\u4e0b\u6765\u7684\u8bdd\u7b54\u6848\u5224\u5b9a\u7684\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u652f\u6301$O(n^2)$\u7684\n\n\u6240\u4ee5\u6211\u8003\u8651\u4e86\u9012\u63a8\u6216\u8005\u8bf4$DP$?\n\n## \u89e3\u9898\u8fc7\u7a0b\uff1a\n\n\u8bbe\u6b64\u65f6\u6211\u4eec\u8981\u5224\u5b9a\u7684\u4e3a$mid$\n\n\u6211\u4eec\u8bbe\u4ee3\u4ef7\u4e3a$\\Sigma_{i=1}^{k}{\\sqrt{a_j-a_{j-1}-l}}-mid*\\Sigma_{i=1}^{k}b[i]$\uff09\n\n\u518d\u8bbe$f[i][j]$\u4e3a\u7b2c$i$\u4e2a\u8425\u5730\u5230\u7b2c$j$\u4e2a\u8425\u5730\u7684\u4ee3\u4ef7\n\n\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4$dp[i]$\u8868\u793a\u5230\u8fbe\u7b2c$i$\u4e2a\u8425\u5730\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u63a8\u51fa\u662f\u8fd9\u6837\u7684\uff1a\n\n``` cpp\nf[i][j]=sqrt(fabs(a[i].x-a[j].x-l))-x*a[i].b;\n//dp[i]=min(dp[i],f[i][j]+dp[j]);\nif(dp[i]>f[i][j]+dp[j]){mypath[i]=j;dp[i]=f[i][j]+dp[j];}\n\n```\n\n\u56e0\u4e3a\u8981\u6c42\u9650\u5236\u4e86\u5fc5\u987b\u5728$n$\u7ed3\u675f\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5224\u5b9a$dp[n]$\u662f\u5426$\\leq0$\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e8c\u5206\u7b54\u6848\u7684\u7b54\u6848\u5224\u5b9a\u5c31\u662f\u8fd9\u6837\u3002\n\n\u8def\u5f84\u7684\u8bb0\u5f55\u4e5f\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\n\n\u6574\u4e2a\u590d\u6742\u5ea6$O(n^2logn)$\n\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\ndouble l;\ndouble eps=1e-10;\n\ndouble f[1005][1005];\n\nconst int INF=0x3f3f3f3f;\ndouble ud[1005];\nstruct node{\n\tdouble x,b;\n}a[1005];\nint mypath[1005];\ninline bool check(double x){\n\tfor(int i=1;i<=n;++i){ud[i]=INF;}\n\tud[0]=0;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=0;j<i;++j){\n\t\t\tf[i][j]=sqrt(fabs(a[i].x-a[j].x-l))-x*a[i].b;\n\t\t\t//ud[i]=min(ud[i],f[i][j]+ud[j]);\n\t\t\tif(ud[i]>f[i][j]+ud[j]){mypath[i]=j;ud[i]=f[i][j]+ud[j];}\n\t\t}\n\t}\n\treturn ud[n]<=0;\n}\nint pre[1005];\ninline void print(int x){\n\tif(!x){return;}\n\tprint(mypath[x]);\n\tprintf(\"%d \",x);\n}\nint main(){\n\t// freopen(\"hiking.in\",\"r\",stdin);\n\t// freopen(\"hiking.out\",\"w\",stdout);\n\tscanf(\"%d%lf\",&n,&l);\n\tdouble L=0,R=0;\n\tdouble suma=0,sumb=0;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%lf%lf\",&a[i].x,&a[i].b);\n\t\tsuma+=a[i].x;\n\t}\n\tR=1e7;\n\tdouble mid,res;\n\twhile(L+eps<R){\n\t\tmid=(L+R)/2.0;\n\t\tif(check(mid)){\n\t\t\tR=mid;\n\t\t\tres=mid;\n\t\t}\n\t\telse{L=mid;}\n\t}\n\tprint(n);\n\treturn 0;\n}\n\n```",
        "postTime": 1598008461,
        "uid": 67621,
        "name": "NuoCarter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF489E \u3010Hiking\u3011"
    },
    {
        "content": "- # CF489E Hiking\n\n  ## 1.[\u9898\u76ee\u63cf\u8ff0](https://www.luogu.com.cn/problem/CF489E)\n\n  ## 2.\u89e3\u6cd5\n\n  \u200b\t\u8fd9\u662f\u4e00\u905301\u5206\u6570\u89c4\u5212\u9898\u3002\u8fd9\u91cc\u4e5f\u6709\u4e00\u4e2a\u6280\u5de7\u3002\u5982\u679c\u4e00\u4e2a\u9898\u6c42\u7684\u662f\u4e00\u4e2a\u5206\u5f0f\u7684\u6700\u503c\uff0c\u90a3\u4e48\u5c31\u5f88\u6709\u53ef\u80fd\u662f\u752801\u5206\u6570\u89c4\u5212\u4e86\u3002\n\n  \u200b\t\u8bbe\u7b2c$i$\u5929\u83b7\u5f97\u7684\u8212\u9002\u5ea6\u4e3a$f_i$\uff0c\u75b2\u52b3\u503c\u4e3a$t_i$\uff0c\u4e8c\u5206\u679a\u4e3e\u4e00\u4e2a\u6700\u5c0f\u7684$mid$\u4f7f\u5f97\uff1a\n  $$\n  \\frac{\\sum t_i}{\\sum f_i} \\le mid\n  $$\n  \u4ee3\u6570\u53d8\u6362\u4e00\u4e0b\u53ef\u5f97\n  $$\n  \\sum (t_i - mid \\cdot f_i) \\leq 0\n  $$\n  \n\n$$\n\\sum(mid \\cdot f_i - t_i) \\ge 0\n$$\n\n\u200b\t\t\u5982\u679c\u628a\u6bcf\u4e2a\u5730\u70b9\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u4ece\u70b9$a$\u5230\u70b9$b$\u8fde\u4e00\u6761\u6709\u5411\u8fb9\u8868\u793a\u53ef\u4ee5\u4ece\u70b9$a$\u8d70\u5411\u70b9$b$\uff0c\u56e0\u4e3a\u65c5\u884c\u8005\u53ea\u80fd\u987a\u6d41\u800c\u4e0b\uff0c\u6240\u4ee5\u53ef\u4ee5\u6784\u5efa\u51fa\u4e00\u4e2a$DAG$\u3002\u95ee\u9898\u8f6c\u5316\u6210\u4ece0\u53f7\u70b9\u8d70\u5230$n$\u53f7\u70b9\u80fd\u5426\u627e\u5230\u4e00\u6761\u8def\u5f84\u4f7f\u5f97\u4e0a\u9762\u4e00\u4e2a\u4ee3\u6570\u5f0f\u6210\u7acb\u3002\u56e0\u4e3a\u662f\u5728\u4e00\u4e2a$DAG$\u4e0a\u9762\u627e\u8def\u5f84\uff0c\u81ea\u7136\u60f3\u5230$dp$\u3002\n\n\u200b\t\u8bbe$f[k]$\u8868\u793a\u8d70\u5230$k$\u53f7\u70b9\u65f6$\\sum(mid \\cdot f_i - t_i)$\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u663e\u7136\u6709\uff1a\n$$\nf[k] = max(f[j] + mid \\cdot f[k] - d(j,k)) (0\\le j<k)\n$$\n\u200b\t\u5176\u4e2d$d(j,k)$\u8868\u793a$j$\u4e0e$k$\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u200b\t\u6700\u540e\u770b\u4e00\u4e0b$f[n]$\u662f\u5426\u5927\u4e8e0\u5373\u53ef\u3002\n\n\u200b\t\u81f3\u4e8e\u8981\u8f93\u51fa\u4f11\u606f\u5730\u70b9\u7684\u95ee\u9898\uff0c\u5f00\u4e2a\u524d\u8d8b\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u200b\t\u6700\u540e\u4e0d\u8981\u5fd8\u4e86\u7cbe\u5ea6\u5f00\u5f97\u9ad8\u4e00\u70b9\uff0c$1e-8$\u5dee\u4e0d\u591a\u3002\n\n\n\n## 3.Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\nconst int maxn = 1e6 + 5;\nconst double esp = 1e-10;\nint n,d,x[maxn],b[maxn],qq[maxn]; //qq\u662f\u524d\u8d8b\u6570\u7ec4\nbool used[maxn],vis[maxn];\ndouble f[maxn];\n\ndouble fabs(double x) {\n\tif (x < 0)\n\t\treturn -x; else\n\t\treturn x;\n}\n\nbool check(double m) {\n\tmemset(vis,0,sizeof(vis));\n\tf[0] = 0;\n\tqq[1] = 0;\n\tfor (int i=1; i<=n; i++) {\n\t\tf[i] = -1e9;\n\t\tfor (int j=0; j<i; j++)\n\t\t\tif (f[j] + m * (double)b[i] - sqrt(fabs(x[i] - x[j] - d)) > f[i]) {\n\t\t\t\tf[i] = f[j] + m * (double)b[i] - sqrt(fabs(x[i] - x[j] - d));//dp\n\t\t\t\tqq[i] = j;\n\t\t\t}\n\t}\n\t\n\t\n\tif (f[n] >= 0) {\n\t\tint x = n;\n\t\tmemset(used,0,sizeof(used));\n\t\twhile (x) {\n\t\t\tused[x] = 1;\n\t\t\tx = qq[x];\n\t\t}\n\t\treturn 1;\n\t} else\n\t\treturn 0;\n\t\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&d);\n\tfor (int i=1; i<=n; i++)\n\t\tscanf(\"%d%d\",&x[i],&b[i]);\n\tdouble l = 0,r = 1e9,mid;\n\t\n\twhile (r - l > esp) {\n\t\tmid = (r + l) / 2;\n\t\tif (check(mid)) {\n\t\t\tr = mid;\n\t\t} else\n\t\t\tl = mid;\n\t}\n\n\tfor (int i=1; i<=n; i++)\n\t\tif (used[i])\n\t\t\tprintf(\"%d \",i);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1594558586,
        "uid": 25736,
        "name": "040902fyn",
        "ccfLevel": 7,
        "title": "CF489E"
    },
    {
        "content": "\n### \u9898\u89e3\n\u8981\u8ba9\u4e0a\u4e0b\u548c\u6bd4\u503c\u6700\u5c0f\uff0c\u663e\u71360/1\u5206\u6570\u89c4\u5212\u3002\n\u8bbeL\u4e3a\u6bcf\u6b21\u8d70\u7684\u75b2\u52b3\u5ea6\uff0c\u6709\n$$p={{\\sum^{}_{}{L}} \\over {\\sum^{}_{}{b_i}}}$$\n\n\u5219\n$${{\\sum^{}_{}{(L-{p \\times b_i)}}}}=0$$\n\u7136\u540e\u4e8c\u5206p\uff0c\u6c421\u5230n\u7684\u6700\u77ed\u8def\uff0c\u5176\u4e2d(u,v)\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u6743\u4e3a$\\sqrt {| (x_v-x_u)-l |}\u2212{p \\times b_v}$\u200b \u7684\u5355\u5411\u8fb9\uff0c\u6784\u6210\u4e00\u4e2aDAG\u6c42\u6700\u77ed\u8def\u3002\u8bbe$dp_i$\u4e3a\u5230i\u7684\u6700\u77ed\u8ddd\u79bb\u9012\u63a8\u53ef\u5f97\uff0c\u82e5\u503c\u975e\u8d1f\u5219\u589e\u5927p\u3002\n\u81f3\u4e8e\u8def\u5f84\u5c31\u5728\u9012\u63a8\u65f6\u8bb0\u5f55\u4e00\u4e0b\u524d\u9a71\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=1e6+5;\nint n,L;\nint pre[M];\ndouble dp[M];\nstruct node{\n\tint x,y;\n};\nnode a[M];\nbool check(double mid){\n\tfor(int i=1;i<=n;i++) dp[i]=1e19;\n\tdp[0]=0;\n\tfor(int i=0;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tdouble tot=sqrt(abs(a[j].x-a[i].x-L))+dp[i]-a[j].y*mid;\n\t\t\tif(dp[j]>=tot){\n\t\t\t\tdp[j]=tot;\n\t\t\t\tpre[j]=i;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tif(dp[n]>=0) return 1;\n\telse return 0;\n}\nvoid find(int z){\n\tif(!z) return;\n\tfind(pre[z]);\n\tprintf(\"%d \",z);\n\treturn;\n}\nint main(){\n\tscanf(\"%d %d\",&n,&L);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&a[i].x,&a[i].y);\n\t}\n\tdouble l=0,r=1e8,mid;\n\twhile(abs(r-l)>1e-9){\n\t\tmid=(l+r)/2.0;\n\t\tif(!check(mid)) r=mid;\n\t\telse l=mid;\n\t}\n\tfind(n); \n\treturn 0;\n}\n```\n",
        "postTime": 1601823428,
        "uid": 271743,
        "name": "zhikong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF489E \u3010Hiking\u3011"
    }
]