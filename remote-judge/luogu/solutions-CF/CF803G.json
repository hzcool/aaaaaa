[
    {
        "content": "Update On 2020.04.16\uff1a\u4fee\u6b63\u4e86 LaTeX \u548c\u90e8\u5206\u8bed\u53e5\u95ee\u9898\n\n## \u524d\u8a00\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811\u53ca\u5176\u52a8\u6001\u5f00\u70b9\uff0cST \u8868\n\n## \u601d\u8def\n\n### \u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u4f18\u5316\n\n\u533a\u95f4\u8d4b\u503c\uff1f\u533a\u95f4\u6700\u5c0f\u503c\uff1f\u7acb\u523b\u60f3\u5230\u4e86\u6734\u7d20\u7ebf\u6bb5\u6811\u3002\u4f46\u662f $a$ \u7684\u957f\u5ea6\u53ef\u80fd\u8fbe\u5230 $10^9$\uff0c\u663e\u7136\u4e0d\u53ef\u884c\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u4f7f\u7528\u7ebf\u6bb5\u6811\u52a8\u6001\u5f00\u70b9\u4e86\u3002\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u8981\u7528\u5f53\u524d\u8282\u70b9\u7684\u4fe1\u606f\u65f6\u518d\u5efa\u7acb\u8fd9\u4e2a\u8282\u70b9\u3002\n\n\u81f3\u4e8e\u7ebf\u6bb5\u6811\u6570\u7ec4\u8981\u5f00\u591a\u5927\uff1f\u6211\u7b97\u8fc7\uff0c\u4f46\u662f\u7b97\u6302\u4e86\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6b63\u786e\uff0c\u5efa\u8bae\u5728\u7a7a\u95f4\u9650\u5236\u5141\u8bb8\u7684\u8303\u56f4\u5185\u5c3d\u53ef\u80fd\u5730\u5f00\u5927\uff08\u4f8b\u5982 $2\\times10^7$\uff09\u3002\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4f18\u5316\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u6ee1\u8db3\u4e86\uff0c\u518d\u6765\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5982\u679c\u76f4\u63a5\u7528  $O(nk\\times \\log_2(nk))$ \u7684\u590d\u6742\u5ea6\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u76f4\u63a5 TLE\u3002\n\n\u8003\u8651\u4e0d\u5efa\u6811\uff0c\u800c\u4f7f\u7528 ST \u8868\u5bf9\u4ed8\u67e5\u8be2\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u5df2\u7ecf\u88ab\u8986\u76d6\uff0c\u5219\u8fd4\u56de\u8986\u76d6\u7684\u503c\u3002\u5426\u5219\u6709 $3$ \u79cd\u60c5\u51b5\uff08\u6ce8\uff1a$l,r$ \u4e0b\u6807\u4ece $0$ \u5f00\u59cb\uff0c\u4e0d\u540c\u4e8e\u4e00\u822c ST \u8868\uff09\uff1a\n\n1. \u533a\u95f4\u7684\u5de6\u7aef\u70b9 $l$ \u4e0e\u533a\u95f4\u7684\u53f3\u7aef\u70b9 $r$ \u4e4b\u5dee $\u2265n$\uff0c\u5373 $r-l+1\u2265n$\uff0c\u8fd9\u4e2a\u65f6\u5019 $[l,r]$ \u5305\u542b\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684$b$ \u5e8f\u5217\uff0c\u6240\u4ee5 $[l,r]$ \u4e2d\u7684\u6570\u4e00\u5b9a\u53ea\u5305\u542b $b$ \u4e2d\u7684\u6570\uff0c\u8fd9\u79cd\u60c5\u51b5\u4f7f\u7528 ST \u8868\u67e5\u8be2 $b$ \u4e2d $[0,n-1]$ \u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n2. $r-l+1\u2264n$ \u4e14 $\\left\\lfloor l/n \\right\\rfloor = \\left \\lfloor r/n \\right\\rfloor$\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c $[l,r]$ \u5305\u542b $b$ \u4e2d\u7684\u4e00\u6bb5\u3002\u4f7f\u7528 ST \u8868\u67e5\u8be2 $b$ \u4e2d $[l \\mod n,r \\mod n]$ \u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n3. $r-l+1\u2264n$ \u4e14 $\\left\\lfloor l/n \\right\\rfloor \u2260 \\left \\lfloor r/n \\right\\rfloor$\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u533a\u95f4 $[l,r]$ \u5305\u542b $b$ \u4e2d $[l \\mod n,n-1]$ \u548c $[0,r\\mod n]$ \u4e24\u6bb5\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7b54\u6848\u4e3a\u4e24\u6bb5\u6700\u5c0f\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u964d\u4f4e\u5230$O(q\\times \\log_2(nk))$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n\u8fd9\u91cc\u7ed9\u51fa\u535a\u4e3b\u7684\u4ee3\u7801\u3002\u5e0c\u671b\u80fd\u5bf9\u60a8\u6709\u6240\u5e2e\u52a9\u3002\n\n```\n# include <bits/stdc++.h>\n# define rr register\nconst int N=100010,MAXN=20000010;\nstruct Node{\n\tint l,r,add,Min;\n}tree[MAXN];\nint ST[N][30];\nint n,k,q;\nint root,id;//root\u662f\u6839\u8282\u70b9\u7f16\u53f7 id\u662f\u7ed9\u7ebf\u6bb5\u6811\u8282\u70b9\u6807\u53f7\u7528\u7684\ninline int read(void){//\u5feb\u8bfb\n\tint res,f=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9')\n\t\tif(c=='-')f=-1;\n\tres=c-48;\n\twhile((c=getchar())>='0'&&c<='9')\n\t\tres=res*10+c-48;\n\treturn res*f;\t\t\n}\ninline int RMQ_ask(int l,int r){//\u5c0f\u533a\u95f4ST\u8868\u67e5\u8be2\n\tint len=log2(r-l+1);\n\treturn std::min(ST[l][len],ST[r-(1<<len)+1][len]);\n}\ninline int Ask(int l,int r){//\u5927\u533a\u95f4ST\u8868\u67e5\u8be2\n\tif(r-l+1>=n){\n\t\treturn RMQ_ask(0,n-1);\n\t}\n\tif(l/n==r/n){\n\t\treturn RMQ_ask(l%n,r%n);\n\t}\n\treturn std::min(RMQ_ask(l%n,n-1),RMQ_ask(0,r%n));\n}\ninline bool make(int &x,int l,int r){//\u5f00\u70b9\n\tif(x)\n\t\treturn false;\n\tx=++id;\n\ttree[x].Min=Ask(l,r);//\u6bcf\u4e00\u4e2a\u65b0\u8282\u70b9\u90fd\u662f\u6ca1\u6709\u6807\u8bb0\u7684\uff08\u9664\u975e\u7236\u8282\u70b9\u4f1a\u4f20\u4e0b\u6765\uff09 \u4e8e\u662f\u521d\u59cb\u503c\u90fd\u662f[l,r]\u7684\u6700\u5c0f\u503c\n\treturn true;\n}\ninline void Add(int k,int v){//\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\n\ttree[k].add=tree[k].Min=v;\n\treturn;\n}\ninline void pushdown(int k,int l,int r){//\u6807\u8bb0\u4e0b\u4f20\u64cd\u4f5c\n\tint mid=(l+r)>>1;\n\tmake(tree[k].l,l,mid);\n\tmake(tree[k].r,mid+1,r);\n\tif(!tree[k].add)\n\t\treturn;\n\ttree[tree[k].l].add=tree[tree[k].l].Min=tree[tree[k].r].add=tree[tree[k].r].Min=tree[k].add;\n\ttree[k].add=0;\n\treturn;\t\n}\nvoid change(int &k,int l,int r,int L,int R,int v){\n\tmake(k,l,r);//\u8fdb\u6765\u4e00\u6b21make\u4e00\u6b21 \u9632\u6b62\u51fa\u5947\u602a\u7684bug\n\tif(L<=l&&r<=R){\n\t\tAdd(k,v);\n\t\treturn;\n\t}\n\tpushdown(k,l,r);\n\tint mid=(l+r)>>1;\n\tif(L<=mid)\n\t\tchange(tree[k].l,l,mid,L,R,v);\n\tif(mid<R)\n\t\tchange(tree[k].r,mid+1,r,L,R,v);\n\ttree[k].Min=std::min(tree[tree[k].l].Min,tree[tree[k].r].Min);\n\treturn;\t\t\n}\nint ask(int &k,int l,int r,int L,int R){//\u8be2\u95ee \u548c\u666e\u901a\u7ebf\u6bb5\u6811\u5dee\u4e0d\u591a\n\tmake(k,l,r);\n\tif(L<=l&&r<=R){\n\t\treturn tree[k].Min;\n\t}\n\tpushdown(k,l,r);\n\tint res=1e9,mid=(l+r)>>1;\n\tif(L<=mid)\n\t\tres=std::min(res,ask(tree[k].l,l,mid,L,R));\n\tif(mid<R)\n\t\tres=std::min(res,ask(tree[k].r,mid+1,r,L,R));\n\treturn res;\t\n}\nint main(void){\n\tn=read(),k=read();\n\tfor(rr int i=0;i<n;++i)//\u4ece\u96f6\u5f00\u59cb\u7684\u6570\u7ec4\u4e0b\u6807\n\t\tST[i][0]=read();\n\tfor(rr int j=1;(1<<j)<=n;++j)\n\t\tfor(rr int i=0;i+(1<<j)-1<n;++i){\n\t\t\tST[i][j]=std::min(ST[i][j-1],ST[i+(1<<(j-1))][j-1]);\n\t\t}\n\tq=read();\n\tmake(root,0,n*k-1);//\u63d0\u524d\u5efa\u597droot\u8282\u70b9\n\tint sign,l,r,x;\n\twhile(q--){\n\t\tsign=read(),l=read(),r=read();\n\t\tif(sign==1){//\u4fee\u6539\n\t\t\tx=read();\n\t\t\tchange(root,0,n*k-1,l-1,r-1,x);\n\t\t}\n\t\telse printf(\"%d\\n\",ask(root,0,n*k-1,l-1,r-1));//\u67e5\u8be2\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1561968913,
        "uid": 108949,
        "name": "Meatherm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF803G \u3010Periodic RMQ Problem\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $b$,\u5e8f\u5217 $a$ \u53c8\u5e8f\u5217 $b$ \u590d\u5236 $k$ \u6b21\u540e\u5f97\u5230,\u9700\u8981\u652f\u6301\u533a\u95f4\u8986\u76d6,\u533a\u95f4\u53d6 $min$.\n\n# \u5206\u6790\n\n\u5f00\u59cb\u6ca1\u6709\u60f3\u5230\u53ef\u4ee5\u7528st\u8868,\u5f88\u81ea\u95ed.\n\n\u4f46\u662f\u6bd5\u7adf\u5199\u51fa\u6765\u4e86,\u5c31\u6765\u5206\u4eab\u4e00\u4e2a\u4e0d\u7528st\u8868\u7684\u505a\u6cd5,\u8fd9\u4e2a\u505a\u6cd5\u53ef\u80fd\u6bd4\u8f83\u590d\u6742,\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u66f4\u65b9\u4fbf\u7684\u505a\u6cd5\u53ef\u4ee5\u770b\u770b[$\\color{red}\\sf{M}\\color{black}\\sf{eatherm}$](https://www.luogu.com.cn/user/108949)\u795e\u4ed9\u7684[\u9898\u89e3](https://www.luogu.com.cn/blog/Meatherm/solution-cf803g).\n\n\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u66b4\u529b\u5efa\u6811\u7684\u590d\u6742\u5ea6\u662f $\\mathcal{O}(nk\\log_2nk)$ \u663e\u7136\u4f1a $T$,\u5f00\u59cb\u7684\u65f6\u5019\u6bcf\u8fde\u7eed $n$ \u4e2a\u90fd\u662f\u76f8\u540c\u7684,\u6240\u4ee5\u8003\u8651\u5efa $k$ \u9897\u6811,\u6bcf\u9897\u6811\u5c31\u662f\u4e00\u4e2a\u5757,\u5f00\u59cb\u65f6\u90fd\u548c\u521d\u59cb\u6811(\u7528 $b$ \u5efa\u6210\u7684\u6811)\u76f8\u540c.\n\n\u5f53\u7136\u8fd9\u91cc\u9700\u8981\u52a8\u6001\u5f00\u70b9.\n\n\u7136\u540e\u662f\u4fee\u6539\u64cd\u4f5c,\u8003\u8651\u5c06\u4fee\u6539\u90e8\u5206\u53d8\u6210\u4e09\u6bb5,\u5206\u522b\u4e3a\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757,\u53f3\u7aef\u70b9\u6240\u5728\u7684\u5757,\u4e2d\u95f4\u7684\u5757,\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u8fdb\u884c\u4fee\u6539.\n\n1.  \u5bf9\u4e8e\u5de6\u53f3\u7684\u5757,\u76f4\u63a5\u5728\u5de6\u53f3\u5757\u5bf9\u4e8e\u7684\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\n2.  \u5bf9\u4e8e\u4e2d\u95f4\u7684\u5757,\u663e\u7136\u4e0d\u53ef\u4ee5\u66b4\u529b\u4fee\u6539,\u90a3\u4e48\u8003\u8651\u518d\u7528\u4e00\u9897\u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n\u7136\u540e\u662f\u67e5\u8be2\u64cd\u4f5c,\u4ecd\u7136\u5c06\u5b83\u5206\u6210\u4e09\u6bb5\u6765\u67e5\u8be2,\u548c\u4fee\u6539\u7684\u65b9\u5f0f\u5dee\u4e0d\u591a.\n\n\u4f46\u662f\u5728\u67e5\u8be2\u5de6\u53f3\u5757\u65f6\u9700\u8981\u67e5\u8be2\u5de6\u53f3\u5feb\u662f\u5426\u88ab\u8986\u76d6,\u5982\u679c\u88ab\u8986\u76d6\u90a3\u4e48\u5728\u7ef4\u62a4\u6240\u6709\u5757\u7684\u7ebf\u6bb5\u6811\u4e2d\u5c06\u8fd9\u4e2a\u6807\u8bb0\u53bb\u6389,\u518d\u8fdb\u884c\u5168\u5c40\u8986\u76d6.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(m(log_2n+log_2k))$.\n\n\u8fd9\u5c31\u662f\u7ebf\u6bb5\u6811\u4f18\u5316\u5206\u5757\u5417,i\u4e86i\u4e86.\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define REP(i,first,last) for(int i=first;i<=last;++i)\n#define DOW(i,first,last) for(int i=first;i>=last;--i)\nusing namespace std;\nconst int MAXN=1e5+7;\nconst int INF=1e9;\nint n,m,k;\nint arr[MAXN];\nint root[MAXN];\nint min_num=INF;\nnamespace All//\u7ef4\u62a4\u5757\u7684\u7ebf\u6bb5\u6811\n{\n\tstruct LazyTag//\u6709\u8986\u76d6\u6807\u8bb0\n\t{\n\t\tint if_cover;\n\t\tint cover;\n\t\tvoid Clean()\n\t\t{\n\t\t\tif_cover=0;\n\t\t}\n\t}for_make;\n\tLazyTag MakeTag(int cover)\n\t{\n\t\tfor_make.if_cover=1;\n\t\tfor_make.cover=cover;\n\t\treturn for_make;\n\t}\n\tstruct SegmentTree\n\t{\n\t\tint min;//\u9700\u8981\u7ef4\u62a4\u533a\u95f4min\n\t\tint cover;//\u9700\u8981\u7ef4\u62a4\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5757\u662f\u5426\u88ab\u8986\u76d6\n\t\tLazyTag tag;\n\t}sgt[MAXN*4];\n\t#define LSON (now<<1)\n\t#define RSON (now<<1|1)\n\t#define MIDDLE ((left+right)>>1)\n\t#define LEFT LSON,left,MIDDLE\n\t#define RIGHT RSON,MIDDLE+1,right\n\t#define NOW now_left,now_right\n\tvoid PushUp(int now)//\u5408\u5e76\u533a\u95f4min\n\t{\n\t\tsgt[now].min=min(sgt[LSON].min,sgt[RSON].min);\n\t}\n\tvoid Build(int now=1,int left=1,int right=k)//\u5efa\u6811\n\t{\n\t\tif(left==right)\n\t\t{\n\t\t\tsgt[now].min=min_num;//\u5f00\u59cb\u90fd\u662f\u533a\u95f4\u4e2d\u7684\u6700\u5c0f\u6570\n\t\t\tsgt[now].cover=0;\n\t\t\treturn;\n\t\t}\n\t\tBuild(LEFT);\n\t\tBuild(RIGHT);\n\t\tPushUp(now);\n\t}\n\tvoid Down(LazyTag tag,int now)//\u4fee\u6539\n\t{\n\t\tif(!tag.if_cover)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tsgt[now].tag.if_cover=1;//\u6709\u8986\u76d6\u8868\u7d27\n\t\tsgt[now].tag.cover=tag.cover;\n\t\tsgt[now].min=sgt[now].cover=tag.cover;//\u533a\u95f4min\u548c\u8986\u76d6\u90fd\u8d4b\u503c\u4e3acover\n\t}\n\tvoid PushDown(int now)//\u4e0b\u4f20\u6807\u8bb0\n\t{\n\t\tDown(sgt[now].tag,LSON);\n\t\tDown(sgt[now].tag,RSON);\n\t\tsgt[now].tag.Clean();\n\t}\n\tvoid Cover(int now_left,int now_right,int cover,int now=1,int left=1,int right=k)//\u533a\u95f4\u8986\u76d6\n\t{\n\t\tif(now_right<left||right<now_left)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif(now_left<=left&&right<=now_right)\n\t\t{\n\t\t\tDown(MakeTag(cover),now);\n\t\t\treturn;\n\t\t}\n\t\tPushDown(now);\n\t\tCover(NOW,cover,LEFT);\n\t\tCover(NOW,cover,RIGHT);\n\t\tPushUp(now);\n\t}\n\tvoid UpdataMin(int place,int min,int now=1,int left=1,int right=k)//\u5355\u70b9\u4fee\u6539\u6700\u5c0f\u503c,\u5728\u5de6\u53f3\u5757\u88ab\u4fee\u6539\u540e\u6700\u5c0f\u503c\u4e5f\u53ef\u80fd\u4f1a\u53d1\u751f\u6539\u53d8\n\t{\n\t\tif(place<left||right<place)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif(left==right)\n\t\t{\n\t\t\tsgt[now].min=min;\n\t\t\treturn;\n\t\t}\n\t\tPushDown(now);\n\t\tUpdataMin(place,min,LEFT);\n\t\tUpdataMin(place,min,RIGHT);\n\t\tPushUp(now);\n\t}\n\tint QueryMin(int now_left,int now_right,int now=1,int left=1,int right=k)//\u67e5\u8be2\u533a\u95f4min\n\t{\n\t\tif(now_right<left||right<now_left)\n\t\t{\n\t\t\treturn INF;\n\t\t}\n\t\tif(now_left<=left&&right<=now_right)\n\t\t{\n\t\t\treturn sgt[now].min;\n\t\t}\n\t\tPushDown(now);\n\t\tint result=min(QueryMin(NOW,LEFT),QueryMin(NOW,RIGHT));\n\t\treturn result;\n\t}\n\tint Query(int place,int now=1,int left=1,int right=k)//\u5355\u70b9\u67e5\u8be2\u8fd9\u4e2a\u5757\u662f\u5426\u88ab\u8986\u76d6\n\t{\n\t\tif(place<left||right<place)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif(left==right)\n\t\t{\n\t\t\tint result=sgt[now].cover;\n\t\t\tsgt[now].cover=0;//\u76f8\u5f53\u4e8e\u4e0b\u4f20,\u6240\u4ee5\u9700\u8981\u6e05\u7a7a\n\t\t\treturn result;\n\t\t}\n\t\tPushDown(now);\n\t\treturn Query(place,LEFT)+Query(place,RIGHT);\n\t}\n\t#undef LSON\n\t#undef RSON\n\t#undef MIDDLE\n\t#undef LEFT\n\t#undef RIGHT\n\t#undef NOW\n}\nnamespace Range//\u7ef4\u62a4\u533a\u95f4\u7684\u7ebf\u6bb5\u6811\n{\n\tint first_tree=0;//\u8868\u793a\u7f16\u53f7\u5c0f\u4e8efirst_tree\u7684\u8282\u70b9\u4e3a\u521d\u59cb\u7ebf\u6bb5\u6811\u4e0a\u7684\n\tstruct LazyTag\n\t{\n\t\tint if_cover;\n\t\tint cover;\n\t\tvoid Clean()\n\t\t{\n\t\t\tif_cover=0;\n\t\t}\n\t}for_make;\n\tLazyTag MakeTag(int cover)\n\t{\n\t\tfor_make.if_cover=1;\n\t\tfor_make.cover=cover;\n\t\treturn for_make;\n\t}\n\tstruct SegmentTree\n\t{\n\t\tint min;\n\t\tint lson,rson;\n\t\tLazyTag tag;\n\t}sgt[MAXN*64];\n\tint sgt_cnt=0;\n\t#define LSON sgt[now].lson\n\t#define RSON sgt[now].rson\n\t#define MIDDLE ((left+right)>>1)\n\t#define LEFT LSON,left,MIDDLE\n\t#define RIGHT RSON,MIDDLE+1,right\n\t#define NOW now_left,now_right\n\tvoid PushUp(int now)\n\t{\n\t\tsgt[now].min=min(sgt[LSON].min,sgt[RSON].min);\n\t}\n\tvoid Build(int &now,int left=1,int right=n)//\u5efa\u6811\n\t{\n\t\tnow=++sgt_cnt;\n\t\tif(left==right)\n\t\t{\n\t\t\tsgt[now].min=arr[left];\n\t\t\treturn;\n\t\t}\n\t\tBuild(LEFT);\n\t\tBuild(RIGHT);\n\t\tPushUp(now);\n\t\tif(left==1&&right==n)\n\t\t{\n\t\t\tfirst_tree=sgt_cnt;\n\t\t}\n\t}\n\tvoid Down(LazyTag tag,int &now)\n\t{\n\t\tif(!tag.if_cover)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif(now<first_tree)//\u5982\u679c\u5f53\u524d\u8282\u70b9\u5728\u521d\u59cb\u7ebf\u6bb5\u6811\u4e0a\u90a3\u4e48\u5c31\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9,\u9700\u8981\u5c06\u5de6\u53f3\u5b50\u8282\u70b9\u4e5f\u8d4b\u503c\u8fc7\u6765\n\t\t{\n\t\t\tsgt[++sgt_cnt].lson=sgt[now].lson;\n\t\t\tsgt[sgt_cnt].rson=sgt[now].rson;\n\t\t\tnow=sgt_cnt;\n\t\t}\n\t\tsgt[now].min=tag.cover;\n\t\tsgt[now].tag.if_cover=1;\n\t\tsgt[now].tag.cover=tag.cover;\n\t}\n\tvoid PushDown(int now)\n\t{\n\t\tDown(sgt[now].tag,LSON);\n\t\tDown(sgt[now].tag,RSON);\n\t\tsgt[now].tag.Clean();\n\t}\n\tvoid Cover(int now_left,int now_right,int cover,int &now,int left=1,int right=n)\n\t{\n\t\tif(now_right<left||right<now_left)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif(now<first_tree)//\u540c\u7406\u5efa\u65b0\u8282\u70b9\n\t\t{\n\t\t\tsgt[++sgt_cnt].lson=sgt[now].lson;\n\t\t\tsgt[sgt_cnt].rson=sgt[now].rson;\n\t\t\tnow=sgt_cnt;\n\t\t}\n\t\tif(now_left<=left&&right<=now_right)\n\t\t{\n\t\t\tDown(MakeTag(cover),now);\n\t\t\treturn;\n\t\t}\n\t\tPushDown(now);\n\t\tCover(NOW,cover,LEFT);\n\t\tCover(NOW,cover,RIGHT);\n\t\tPushUp(now);\n\t}\n\tint QueryMin(int now_left,int now_right,int now,int left=1,int right=n)//\u533a\u95f4\u53d6min\n\t{\n\t\tif(now_right<left||right<now_left)\n\t\t{\n\t\t\treturn INF;\n\t\t}\n\t\tif(now_left<=left&&right<=now_right)\n\t\t{\n\t\t\treturn sgt[now].min;\n\t\t}\n\t\tPushDown(now);\n\t\treturn min(QueryMin(NOW,LEFT),QueryMin(NOW,RIGHT));\n\t}\n\t#undef LSON\n\t#undef RSON\n\t#undef MIDDLE\n\t#undef LEFT\n\t#undef RIGHT\n\t#undef NOW\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tREP(i,1,n)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tmin_num=min(min_num,arr[i]);\n\t}\n\tRange::Build(root[0]);\n\tAll::Build();\n\tREP(i,1,k)\n\t{\n\t\troot[i]=root[0];\n\t}\n\tscanf(\"%d\",&m);\n\tint opt,l,r,x;\n\tint l_,r_;\n\tint l_c,r_c;\n\tint answer=0;\n\tREP(i,1,m)\n\t{\n\t\tscanf(\"%d%d%d\",&opt,&l,&r);\n\t\tl_=l/n+(bool)(l%n);//l\u548cr\u6240\u5728\u5757\u7684\u7f16\u53f7\n\t\tr_=r/n+(bool)(r%n);\n\t\tif(opt==1)//\u4fee\u6539\u64cd\u4f5c\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(l_+1<=r_-1)//\u5982\u679c\u4e2d\u95f4\u5b58\u5728\u5757,\u90a3\u4e48\u4e2d\u95f4\u7684\u5757\u8d4b\u503c\u4e3ax\n\t\t\t{\n\t\t\t\tAll::Cover(l_+1,r_-1,x);\n\t\t\t}\n\t\t\tl_c=All::Query(l_);//\u67e5\u8be2\u5de6\u53f3\u7684\u5757\u662f\u5426\u88ab\u8986\u76d6,\u5982\u679c\u8986\u76d6\u90a3\u4e48\u5c31\u76f4\u63a5\u4fee\u6539\n\t\t\tif(l_c)\n\t\t\t{\n\t\t\t\tRange::Cover(1,n,l_c,root[l_]);\n\t\t\t}\n\t\t\tr_c=All::Query(r_);\n\t\t\tif(r_c)\n\t\t\t{\n\t\t\t\tRange::Cover(1,n,r_c,root[r_]);\n\t\t\t}\n\t\t\tif(l_^r_)//\u5982\u679c\u5de6\u53f3\u6240\u5728\u4e0d\u540c\n\t\t\t{\n                //\u53ef\u4ee5\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\n\t\t\t\tRange::Cover(l-(l_-1)*n,n,x,root[l_]);\n\t\t\t\tRange::Cover(1,r-(r_-1)*n,x,root[r_]);\n\t\t\t}\n\t\t\telse//\u5982\u679c\u5728\u540c\u4e00\u4e2a\u5feb\n\t\t\t{\n\t\t\t\tRange::Cover(l-(l_-1)*n,r-(r_-1)*n,x,root[l_]);\n\t\t\t}\n            //\u5728\u5de6\u53f3\u7684\u5757\u4e2d\u4fee\u6539\n\t\t\tAll::UpdataMin(l_,Range::QueryMin(1,n,root[l_]));\n\t\t\tAll::UpdataMin(r_,Range::QueryMin(1,n,root[r_]));\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tanswer=INF;\n\t\t\tif(l_+1<=r_-1)//\u5982\u679c\u4e2d\u95f4\u6709\u5feb\u90a3\u4e48\u67e5\u8be2\u4e2d\u95f4\u5feb\u7684min\n\t\t\t{\n\t\t\t\tanswer=All::QueryMin(l_+1,r_-1);\n\t\t\t}\n\t\t\tl_c=All::Query(l_);\n\t\t\tif(l_c)//\u548c\u4fee\u6539\u90e8\u5206\u540c\u7406\n\t\t\t{\n\t\t\t\tRange::Cover(1,n,l_c,root[l_]);\n\t\t\t}\n\t\t\tr_c=All::Query(r_);\n\t\t\tif(r_c)\n\t\t\t{\n\t\t\t\tRange::Cover(1,n,r_c,root[r_]);\n\t\t\t}\n\t\t\tif(l_^r_)//\u67e5\u8be2\u4e5f\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\n\t\t\t{\n\t\t\t\tanswer=min(answer,min(Range::QueryMin(l-(l_-1)*n,n,root[l_]),Range::QueryMin(1,r-(r_-1)*n,root[r_])));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanswer=min(answer,Range::QueryMin(l-(l_-1)*n,r-(r_-1)*n,root[l_]));\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",answer);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1587037667,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF803G \u3010Periodic RMQ Problem\u3011"
    },
    {
        "content": "[CF803G Periodic RMQ Problem](https://codeforces.com/problemset/problem/803/G)\n\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u5e8f\u5217 $b$ \u662f $a$ \u91cd\u590d\u62fc\u63a5 $k$ \u6b21\u540e\u7684\u7ed3\u679c\u3002\u73b0\u8981\u4f60\u5b9e\u73b0\u533a\u95f4\u8d4b\u503c\u533a\u95f4\u6700\u503c\u3002\n\n## Solution\n\u4e00\u9053\u6c35\u9ed1\u5427\uff0cCF \u53ea\u6709 *2300\u3002\n\n\u9996\u5148\u8003\u8651\u7ef4\u62a4\uff0c\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\uff0c\u57fa\u64cd\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u552f\u4e00\u7684\u56f0\u96be\u4e4b\u5904\u5c31\u662f\u65e0\u6cd5\u5728\u62fc\u63a5\u540e\u7684\u957f\u5ea6\u4e3a $10^9$ \u7684\u5e8f\u5217\u4e2d\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8be2\u95ee\u53ea\u6709 $10^5$ \u4e2a\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u653e\u5f03\u6389\u4e00\u4e9b\u65e0\u7528\u7684\u6570\u636e\u3002\n\n\u7b2c\u4e00\u4e2a\u60f3\u5230\u7684\u5e94\u8be5\u662f\u53ea\u4fdd\u7559\u6bcf\u6b21\u8be2\u95ee\u548c\u4fee\u6539\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\u60f3\u505a\u5230\u8fd9\u6837\u5e76\u4e0d\u96be\uff0c\u5148\u79bb\u7ebf\u8be2\u95ee\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u6bcf\u4e00\u5bf9 $l,r$ \u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u90a3\u5c31\u53ea\u6709 $2\\times Q$ \u4e2a\u70b9\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u8fd9 $2\\times Q$ \u4e2a\u70b9\u6765\u505a\u7ebf\u6bb5\u6811\uff0c\u4eff\u4f5b\u975e\u5e38\u53ef\u884c\u7684\u9e2d\u5b50\u3002\n\n\u4f46\u662f\u6211\u4eec\u6765\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u60c5\u51b5\uff1a\n```\n5 3\n5 6 2 3 6\n3\n2 1 5\n1 2 3 4\n2 1 5\n```\n\u597d\u6211\u4eec\u6309\u7167\u521a\u624d\u7684\u60f3\u6cd5\uff0c\u4fdd\u7559\u4e0b\u6765\u7684\u70b9\u662f $5\\;6\\;2\\;6$\u3002\u7136\u540e\u6267\u884c\u7b2c\u4e00\u4e2a\u8be2\u95ee\u7ed3\u679c\u662f $2$ \u6ca1\u9519\uff0c\u6267\u884c\u8d4b\u503c\u540e\u533a\u95f4\u53d8\u6210\u4e86 $5\\;4\\;4\\;6$ \u4e8e\u662f\u6211\u4eec\u56de\u7b54\u4e0b\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u662f $4$ \u800c\u6211\u4eec\u5e0c\u671b\u7684\u7b54\u6848\u662f $3$\u3002\n\n\u539f\u56e0\u5c31\u662f\uff0c\u6211\u4eec\u5728\u4fdd\u7559\u7684\u65f6\u5019\u5374\u4e22\u5931\u4e86 $3$ \u7684\u4fe1\u606f\uff0c\u4e8e\u662f\u6211\u4eec\u8054\u60f3\u5230\uff0c\u5728\u6211\u4eec\u4e0a\u9762\u4fdd\u7559\u7684\u70b9\u7684\u57fa\u7840\u4e0a\uff0c\u76f8\u90bb\u4e24\u4e2a\u5df2\u7ecf\u4fdd\u7559\u7684\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\u4e5f\u662f\u9700\u8981\u7684\uff08\u4f46\u4e0d\u9700\u8981\u6574\u6bb5\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u6709\u8be2\u95ee\u53ea\u8be2\u95ee\u8fd9\u4e00\u6bb5\u7684\u4e00\u534a\uff0c\u6216\u8005\u662f\u4fee\u6539\u4e00\u534a\uff0c\u4e0d\u7136\u8fd9\u4e00\u6bb5\u5c31\u4f1a\u88ab\u5206\u6210\u4e24\u6bb5\u751a\u81f3\u66f4\u591a\uff09\uff0c\u6240\u4ee5\u5728\u4e0a\u9762\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u6211\u4eec\u628a\u76f8\u90bb\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\u4e5f\u63d2\u5165\u8fdb\u53bb\u505a\u7ebf\u6bb5\u6811\u5c31\u6ca1\u95ee\u9898\u4e86\u3002\n\n\u6240\u4ee5\u7a7a\u95f4\u8981\u5f00 $4$ \u500d\u4ee5\u4e0a![](\\https://\u5567.tk/kk)\u522b\u95ee\u95ee\u5c31\u662f RE \u4eba\u3002\n\n## Code\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define inf (1<<30)\n#define INF (1ll<<60)\nusing namespace std;\nconst int MAXN=5e5+10;\nstruct Tree{\n\tint l,r;\n\tll mn,inc;\n}tr[MAXN<<2];\n#define ls i<<1\n#define rs i<<1|1\nll b[MAXN];\nvoid pushup(int i){\n\ttr[i].mn=min(tr[ls].mn,tr[rs].mn);\n}\nvoid build(int i,int l,int r){\n\ttr[i].l=l;tr[i].r=r;tr[i].inc=-1;\n\tif(l==r){tr[i].mn=b[l];return;}\n\tint mid=l+r>>1;build(ls,l,mid);build(rs,mid+1,r);\n\tpushup(i);\n}\nvoid cov(int i,ll v){\n\ttr[i].mn=v;tr[i].inc=v;\n}\nvoid pushdown(int i){\n\tif(tr[i].inc==-1) return;\n\tcov(ls,tr[i].inc);\n\tcov(rs,tr[i].inc);\n\ttr[i].inc=-1;\n}\nvoid upd(int i,int l,int r,ll v){\n\tif(tr[i].l>=l&&tr[i].r<=r){\n\t\tcov(i,v);return;\n\t}pushdown(i);\n\tint mid=tr[i].l+tr[i].r>>1;\n\tif(r<=mid) upd(ls,l,r,v);\n\telse if(l>mid) upd(rs,l,r,v);\n\telse upd(ls,l,mid,v),upd(rs,mid+1,r,v);\n\tpushup(i);\n}\nll qmin(int i,int l,int r){\n\tif(tr[i].l>=l&&tr[i].r<=r)\n\t\treturn tr[i].mn;\n\tpushdown(i);int mid=tr[i].l+tr[i].r>>1;\n\tif(r<=mid) return qmin(ls,l,r);\n\telse if(l>mid) return qmin(rs,l,r);\n\telse return min(qmin(ls,l,mid),qmin(rs,mid+1,r));\n}//\u533a\u95f4\u8d4b\u503c\u533a\u95f4\u6700\u5c0f\u7ebf\u6bb5\u6811\nll lsh[MAXN];int cnt;\nstruct Query{\n\tint op;ll l,r,x;\n\tvoid input(){\n\t\tscanf(\"%d%lld%lld\",&op,&l,&r);\n\t\tif(op==1) scanf(\"%lld\",&x);\n\t\tlsh[++cnt]=l;lsh[++cnt]=r;\n\t}\n}q[MAXN];//\u79bb\u6563\u8be2\u95ee\nll tmp[MAXN];//\u6682\u5b58\u4e0d\u542b\u76f8\u90bb\u70b9\u533a\u95f4\u6700\u5c0f\u503c\u7684\u6570\u7ec4\nint n,k,mp[MAXN];//mp[] \u5b58 lsh \u4e2d\u7684\u7b2c i \u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u5230\u6700\u7ec8\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u662f mp[i]\nint MODp(int p){\n\tp=p%n;if(p==0) p=n;\n\treturn p;\n}//\u6c42\u4f4d\u7f6e p \u5728\u4e00\u6bb5\u5faa\u73af\u8282\u4e2d\u662f\u7b2c\u51e0\u4e2a\nll getmin(ll l,ll r){\n\tll ret;\n\tif(r-l+1>=n) ret=tr[1].mn;\n\telse{\n\t\tl=MODp(l);r=MODp(r);\n\t\tif(l<=r) ret=qmin(1,l,r);\n\t\telse{\n\t\t\tret=qmin(1,1,r);\n\t\t\tret=min(ret,qmin(1,l,n));\n\t\t}\n\t}return ret;\n}//\u6c42\u51fa\u539f\u4f4d\u7f6e [l,r] \u7684\u6700\u5c0f\u503c\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&b[i]);\n\tbuild(1,1,n);//\u5148\u5bf9\u539f\u5e8f\u5217\u5efa\u4e00\u4e0b\u7ebf\u6bb5\u6811\n\tint Q;\n\tscanf(\"%d\",&Q);\n\tfor(int i=1;i<=Q;i++){\n\t\tq[i].input();\n\t}sort(lsh+1,lsh+1+cnt);\n\tcnt=unique(lsh+1,lsh+1+cnt)-lsh-1;\n\tmemset(tmp,0x3f,sizeof(tmp));\n\tfor(int i=1;i<=Q;i++){\n\t\tint pl=lower_bound(lsh+1,lsh+1+cnt,q[i].l)-lsh;\n\t\tint pr=lower_bound(lsh+1,lsh+1+cnt,q[i].r)-lsh;\n\t\ttmp[pl]=b[MODp(q[i].l)];\n\t\ttmp[pr]=b[MODp(q[i].r)];\n\t}\n\tb[1]=tmp[1];mp[1]=1;\n\tint len=1;\n\tfor(int i=1;i<cnt;i++){\n\t\tif(lsh[i]+1<=lsh[i+1]-1)\n\t\tb[++len]=getmin(lsh[i]+1,lsh[i+1]-1);//\u76f8\u90bb\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\n\t\tb[++len]=tmp[i+1];mp[i+1]=len;//\u5728\u8be2\u95ee\u4e2d\u51fa\u73b0\u8fc7\u7684\u503c\n\t}\n\tbuild(1,1,len);//\u5bf9\u6700\u7ec8\u7684\u5e8f\u5217\u5efa\u7ebf\u6bb5\u6811\n\tfor(int i=1;i<=Q;i++){\n\t\tint pl=lower_bound(lsh+1,lsh+1+cnt,q[i].l)-lsh;pl=mp[pl];\n\t\tint pr=lower_bound(lsh+1,lsh+1+cnt,q[i].r)-lsh;pr=mp[pr];\n\t\t//\u6c42\u51fa\u8be2\u95ee\u7684\u4e24\u4e2a\u7aef\u70b9\u5728\u6700\u7ec8\u538b\u7f29\u540e\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\n\t\tif(q[i].op==1) upd(1,pl,pr,q[i].x);\n\t\telse printf(\"%lld\\n\",qmin(1,pl,pr));\n\t}\n}\n```\n## End",
        "postTime": 1631788722,
        "uid": 292315,
        "name": "ZCETHAN",
        "ccfLevel": 7,
        "title": "CF803G Periodic RMQ Problem"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9898\u8981\u6c42\u652f\u6301\u4e24\u4e2a\u64cd\u4f5c\uff1a\u533a\u95f4\u63a8\u5e73\uff0c\u533a\u95f4\u67e5\u6700\u5c0f\u503c\u3002\u4e0d\u96be\u60f3\u5230\u73c2\u6735\u8389\u6811\u3002\n\n~~\u4f46\u4f3c\u4e4e\u9898\u89e3\u533a\u6ca1\u4eba\u7528\uff1f~~\n\n\u9996\u5148\u770b\u5982\u679c\u6ca1\u6709\u63a8\u5e73\u64cd\u4f5c\u8be5\u600e\u4e48\u505a\uff0c\u5c31\u662f\u5728\u7ed9\u51fa\u7684\u6570\u7ec4\u91cc\u5efa\u4e2a ST \u8868\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u7b80\u5355\u5206\u7c7b\u4e00\u4e0b\u5c31\u597d\u4e86\u3002~~\u50cf\u6211\u8fd9\u6837\u7684\u5f3a\u8feb\u75c7\u8fd8\u540c\u65f6\u53bb\u7ef4\u62a4\u4e86\u4e00\u4e0b\u5168\u5c40\u6700\u5c0f\u503c\u548c\u524d\u7f00/\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u5927\u6982\u53ef\u4ee5\u51cf\u5c0f\u4e00\u70b9\u70b9\u70b9\u5e38\u6570\uff08\u96fe\u3002~~\n\n\u65e2\u7136\u672a\u63a8\u5e73\u533a\u95f4\u90fd\u53ef\u4ee5\u5feb\u901f\u6c42\u503c\uff0c**\u90a3\u5c31\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u8fde\u7eed\u6bb5**\u3002\u81f3\u591a\u662f\u52a0\u4e2a\u6807\u8bb0\u533a\u5206\u4e00\u4e0b\u5f53\u524d\u6bb5\u662f\u63a8\u5e73\u540e\u533a\u95f4\u8fd8\u662f\u63a8\u5e73\u524d\u533a\u95f4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u4e2a ODT \u677f\u677f\uff0c\u5948\u4f55\u5e38\u6570\u592a\u5927\u8fc7\u4e0d\u53bb\u3002\n\n~~\u6211\u4e00\u5f00\u59cb\u7684\u601d\u8def\u662f\u76f4\u63a5\u628a set \u6362\u6210\u5e73\u8861\u6811\u7136\u540e\u7ef4\u62a4\u8fde\u7eed\u6bb5\uff0c\u8fd9\u6837\u7684\u8bdd\u7406\u8bba\u590d\u6742\u5ea6\u662f\u4e00\u4e2a $\\sout{\\log}$ \u7684\u5948\u4f55\u4f9d\u65e7\u5e38\u6570\u592a\u5927\u8fc7\u4e0d\u53bb\uff0c\u5e73\u8861\u6811\u5e38\u6570\u6bd4\u7ebf\u6bb5\u6811\u5e38\u6570\u90a3\u53ef\u4e0d\u6b62\u5927\u4e86\u4e00\u70b9\u3002~~\n\n\u6211\u4eec\u9700\u8981\u4e00\u70b9\u5408\u7406\u4f18\u5316\u3002\n\n\u65e2\u7136\u6211\u4eec\u6562\u7528\u73c2\u6735\u8389\u6811\uff0c\u90a3\u5c31\u662f\u76f8\u4fe1\u4e86\u6570\u636e\u968f\u673a\u3002\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u731c\u6d4b\u524d\u671f\u7684\u8bf8\u591a\u67e5\u8be2\uff0c\u7b54\u6848\u5f88\u6709\u53ef\u80fd\u76f4\u63a5\u5c31\u662f\u5168\u5e8f\u5217\uff08\u4fee\u6539\u540e\u7684\uff09\u6700\u5c0f\u503c\uff0c\u90a3\u4e5f\u5c31\u662f\u53ea\u8981\u67e5\u8be2\u91cc\u6709\u4e00\u6bb5\u51fa\u4e86\u8fd9\u4e2a\u503c\u90a3\u5c31\u76f4\u63a5\u9000\u51fa\u5faa\u73af\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\nODT \u671f\u671b\u590d\u6742\u5ea6\u5927\u6982\u662f\u4e24\u53ea $\\log$\uff0c\u5168\u7b97\u6cd5\u590d\u6742\u5ea6\u74f6\u9888\u5728\u666e\u901a rmq \u9884\u5904\u7406\u3002\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7528\u5404\u79cd\u5957\u8def\uff08\u6bd4\u5982 sqrt-tree\uff0c\u6bd4\u5982 [\u8fd9\u4e2a](https://return20071007.blog.uoj.ac/blog/6554)\uff09\u628a\u666e\u901a rmq \u590d\u6742\u5ea6\u4e5f\u964d\u5230\u8fd9\u4e2a\u7ea7\u522b\uff0c\u4f46\u7531\u4e8e\u5e38\u6570\u539f\u56e0\u74f6\u9888\u53cd\u800c\u5728\u73c2\u6735\u8389\u6811\u4e0a\uff0c\u90a3\u5c31\u65e0\u6240\u8c13\u4e86\u3002\n\n\u4e22\u4e2a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,st[20][100009],lg2[100009],suf[100009],pre[100009],mn;\nint minret;\nint query(int l,int r){\n\tif(r-l+1>=n)return mn;\n\tif((l=(l-1)%n+1)>(r=(r-1)%n+1))return min(pre[r],suf[l]);\n\tint h=lg2[r-l+1];\n\treturn min(st[h][l],st[h][r-(1<<h)+1]);\n}\nstruct node{\n\tmutable int l,r,v;\n\tbool tag;\n\tbool operator<(const node&to)const{return l<to.l;};\n};\nset<node>odt;\nauto split(int x){\n\tif(x>n*k)return odt.end();\n\tauto it=--odt.upper_bound({x,0,0,false});\n\tif(it->l==x)return it;\n\tint l=it->l,r=it->r,v=it->v;\n\tbool tag=it->tag;\n\todt.erase(it);\n\todt.insert({l,x-1,v,tag});\n\treturn odt.insert({x,r,v,tag}).first;\n}\nvoid assign(int l,int r,int v){\n\tauto itr=split(r+1),itl=split(l);\n\todt.erase(itl,itr);\n\todt.insert({l,r,v,true});\n}\nint qmin(int l,int r){\n\tint ret=INT_MAX;\n\tauto itr=split(r+1),itl=split(l);\n\twhile(itl!=itr){\n\t\tret=min(ret,itl->tag?itl->v:query(itl->l,itl->r));\n\t\tif(ret==minret)break;\n\t\t++itl;\n\t}return ret;\n}\nint main(){\n\tcin>>n>>k,lg2[0]=-1;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>st[0][i],lg2[i]=lg2[i>>1]+1;\n\tminret=mn=*min_element(st[0]+1,st[0]+n+1);\n\tpre[0]=suf[n+1]=INT_MAX;\n\tfor(int i=1;i<=n;++i)pre[i]=min(pre[i-1],st[0][i]);\n\tfor(int i=n;i>=1;--i)suf[i]=min(suf[i+1],st[0][i]);\n\tfor(int h=1;h<20;++h)\n\t\tfor(int i=1;i+(1<<h)<=n+1;++i)\n\t\t\tst[h][i]=min(st[h-1][i],st[h-1][i+(1<<(h-1))]);\n\todt.insert({1,n*k,mn,false});\n\tcin>>m;\n\tfor(int op,l,r;m;--m){\n\t\tcin>>op>>l>>r;\n\t\tif(op==1){\n\t\t\tint x;cin>>x;\n\t\t\tminret=min(minret,x);\n\t\t\tassign(l,r,x);\n\t\t}else cout<<qmin(l,r)<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1627139744,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u73c2\u6735\u8389\u6811YYDS"
    },
    {
        "content": "### P.S.\n\u9ad8\u8d28\u91cf\u597d\u9898\uff01\uff01\uff01\uff01\uff01\uff01  \n![](https://cdn.luogu.com.cn/upload/image_hosting/48jikhx5.png)  \n\u8fd9\u9898\u6211\u5199\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u5199\u6302\u4e86\uff0c\u7b2c\u4e8c\u79cd\u4e5f\u5199\u6302\u4e86\uff08\uff08\uff08  \n\u4e8e\u662f\u8fd9\u7bc7\u9898\u89e3\u4f1a\u4ecb\u7ecd\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\u662f\u5047\u7684\u3002\u3002\u3002  \n\u901a\u8fc7\u8fd9\u9898\u8ba9\u6211\u660e\u767d\u4e86\u4e00\u4e2a\u8840\u7684\u6559\u8bad\uff1a\u80fd\u7528\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u4e0d\u7ba1\u5e38\u6570\u6709\u591a\u5927\uff0c\u5c31\u7528\u3002  \nAC \u4ee3\u7801 99808KB\uff0850 \u884c\uff0cWA \u7684\u4ee3\u7801 148736 KB \uff08100 \u884c\n### Description.\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u9700\u8981\u652f\u6301\u533a\u95f4\u8986\u76d6\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c\u3002  \n\u4f46\u662f\u8fd9\u4e2a\u5e8f\u5217\u5f88\u957f\uff0c\u662f $10^9$ \u7ea7\u522b\u7684\uff0c\u4f46\u662f\u5b83\u6709\u4e0d\u8d85\u8fc7 $10^5$ \u7684\u5faa\u73af\u8282\u3002  \n\u8bfb\u5165\u65b9\u5f0f\u662f\u8bfb\u5165\u5faa\u73af\u8282\u957f\u5ea6\u548c\u5faa\u73af\u8282\u6570\u91cf\u3002  \n\n### Solution1.\n\u601d\u8def\u5f88\u66b4\u529b\uff0c\u7c7b\u4f3c\u5206\u5757\u4e00\u6837\u3002  \n\u5bf9\u4e8e\u6240\u6709\u533a\u95f4\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u518d\u5bf9\u6240\u6709\u5faa\u73af\u8282\u7ef4\u62a4\u53e6\u4e00\u9897\u7ebf\u6bb5\u6811\u3002  \n\u7136\u540e\u6bcf\u6b21\u67e5\u8be2\u3001\u4fee\u6539\u76f4\u63a5\u5bf9\u8fb9\u5757\u66b4\u529b\u4fee\u6539\uff08\u6307\u5728\u90a3\u9897\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u3002  \n\u7136\u540e\u6574\u5757\u76f4\u63a5\u5728\u5faa\u73af\u8282\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u4ee5\u53ca\u8fd9\u4e2a\u5faa\u73af\u8282\u5e94\u8be5\u6253\u7684\u6807\u8bb0  \n\u7136\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n+n\\log k)$ \u7684\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u5bf9\u6bcf\u6b21\u8be2\u95ee\u53ea\u4f1a\u589e\u52a0 $\\log n$ \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u662f $O(n+Q\\log n)$ \u7684\uff0c\u7ed3\u679c\u7b14\u8005\u5199\u6302\u4e86\u3002  \n\u9644**\u5199\u6302**\u7684\u4ee3\u7801\u3002  \n```cpp\n//\u613f\u4f60\u548c\u4f60\u91cd\u8981\u7684\u4eba\u80fd\u591f\u91cd\u9022\uff01\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(!(c^45)) f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tf?x=-x,1:1;\n}\nconst int INF=1e9+5;\nint n,Q,k,a[1000005],rt[1000005],tt=0;\nstruct seg{int mn,lz,tg;}t[4000005];\nstruct segm{int mn,tg,ls,rs;}T[6000005];\ninline void tallc(int x,int c) {if(c) t[x].mn=t[x].lz=t[x].tg=c;}\ninline void tdown(int x) {tallc(x<<1,t[x].tg),tallc(x<<1|1,t[x].tg),t[x].tg=0;}\ninline void tup(int x) {t[x].mn=min(t[x<<1].mn,t[x<<1|1].mn);}\ninline void tbuild(int x,int l,int r,int c)\n{\n\tif(l==r) return(void)(t[x].mn=c,t[x].lz=t[x].tg=0);else t[x].tg=0;\n\ttbuild(x<<1,l,(l+r)>>1,c),tbuild(x<<1|1,((l+r)>>1)+1,r,c),tup(x);\n}\ninline void tmotif(int x,int l,int r,int dl,int dr,int dc)\n{\n\tif(dl>r||l>dr||dl>dr) return;else if(dl<=l&&r<=dr) return tallc(x,dc);else tdown(x);\n\ttmotif(x<<1,l,(l+r)>>1,dl,dr,dc),tmotif(x<<1|1,((l+r)>>1)+1,r,dl,dr,dc),tup(x);\n}\ninline int tquery(int x,int l,int r,int dl,int dr)\n{\n\tif(dl>r||l>dr||dl>dr) return INF;else if(dl<=l&&r<=dr) return t[x].mn;else tdown(x);\n\treturn min(tquery(x<<1,l,(l+r)>>1,dl,dr),tquery(x<<1|1,((l+r)>>1)+1,r,dl,dr));\n}\ninline int task(int x,int l,int r,int dw)\n{\n\tif(l==r) return t[x].lz;else tdown(x);\n\treturn dw<=((l+r)>>1)?task(x<<1,l,(l+r)>>1,dw):task(x<<1|1,((l+r)>>1)+1,r,dw);\n}\ninline void tqklz(int x,int l,int r,int dw,int dc)\n{\n\tif(l==r) return(void)(t[x].lz=0,t[x].mn=dc);else tdown(x);\n\tif(dw<=((l+r)>>1)) tqklz(x<<1,l,(l+r)>>1,dw,dc),tup(x);\n\telse tqklz(x<<1|1,((l+r)>>1)+1,r,dw,dc),tup(x);\n}\ninline void Tallc(int &x,int c) {T[++tt]=T[x],x=tt;if(c) T[x].tg=c,T[x].mn=c;}\ninline void Tdown(int x) {Tallc(T[x].ls,T[x].tg),Tallc(T[x].rs,T[x].tg),T[x].tg=0;}\ninline void Tup(int x) {T[x].mn=min(T[T[x].ls].mn,T[T[x].rs].mn);}\ninline void Tbuild(int &x,int l,int r)\n{\n\tx=++tt;if(l==r) return(void)(T[x]=(segm){a[l],0,0,0});else T[x].tg=0;\n\tTbuild(T[x].ls,l,(l+r)>>1),Tbuild(T[x].rs,((l+r)>>1)+1,r),Tup(x);\n}\ninline void Tmotif(int &x,int l,int r,int dl,int dr,int dc)\n{\n\tif(l>dr||dl>r||!x) return;\n\tT[++tt]=T[x],x=tt;if(dl<=l&&r<=dr) return Tallc(x,dc);else Tdown(x);\n\tTmotif(T[x].ls,l,(l+r)>>1,dl,dr,dc),Tmotif(T[x].rs,((l+r)>>1)+1,r,dl,dr,dc),Tup(x);\n}\ninline int Tquery(int x,int l,int r,int dl,int dr)\n{\n\tif(!x||dl>r||l>dr) return INF;else if(dl<=l&&r<=dr) return T[x].mn;else Tdown(x);\n\treturn min(Tquery(T[x].ls,l,(l+r)>>1,dl,dr),Tquery(T[x].rs,((l+r)>>1)+1,r,dl,dr));\n}\ninline void Push_Down(int w) {int val=task(1,1,n,w);if(val) Tmotif(rt[w],1,n,1,n,val),tqklz(1,1,n,w,val);}\ninline void Chang(long long l,long long r,int c)\n{\n\tint le=(l-1)/n+1,ri=(r-1)/n+1;Push_Down(le);if(le^ri) Push_Down(ri);\n\tif(le==ri) return Tmotif(rt[le],1,n,(l-1)%n+1,(r-1)%n+1,c),tqklz(1,1,n,le,T[rt[le]].mn);\n\tTmotif(rt[le],1,n,(l-1)%n+1,n,c),tqklz(1,1,n,le,T[rt[le]].mn);\n\tTmotif(rt[ri],1,n,1,(r-1)%n+1,c),tqklz(1,1,n,ri,T[rt[ri]].mn);\n\ttmotif(1,1,n,le+1,ri-1,c);\n}\ninline void P(int id) {for(int i=1;i<=n;i++) printf(\"%d%c\",Tquery(rt[id],1,n,i,i),i==n?'\\n':' ');}\ninline int Query(long long l,long long r)\n{\n\tint le=(l-1)/n+1,ri=(r-1)/n+1;Push_Down(le);if(le^ri) Push_Down(ri);\n\tint res=INF;if(le==ri) return Tquery(rt[le],1,n,(l-1)%n+1,(r-1)%n+1);\n\tres=min(res,Tquery(rt[le],1,n,(l-1)%n+1,n));\n\tres=min(res,Tquery(rt[ri],1,n,1,(r-1)%n+1));\n\tres=min(res,tquery(1,1,n,le+1,ri-1));return res;\n}\ninline void debug(int x,int l,int r)\n{\n\tif(x) printf(\"%d : [ %d ~ %d ] : %d ( %d -> %d %d\\n\",x,l,r,T[x].mn,T[x].tg,T[x].ls,T[x].rs);\n\tif(l^r) Tdown(x),debug(T[x].ls,l,(l+r)>>1),debug(T[x].rs,((l+r)>>1)+1,r);\n}\nint main()\n{\n\tread(n),read(k);for(int i=1;i<=n;i++) read(a[i]);\n\tTbuild(rt[1],1,n),tbuild(1,1,n,T[rt[1]].mn);for(int i=2;i<=k;i++) rt[i]=rt[1];\n\tfor(read(Q);Q--;)\n\t{\n\t\t//debug(rt[1],1,n),debug(rt[2],1,n);\n\t\tint fg,x;long long l,r;read(fg),read(l),read(r);\n\t\tif(fg^1) printf(\"%d\\n\",Query(l,r));else read(x),Chang(l,r,x);\n\t}\n\treturn 0;\n}\n```\n### Solution 2.\n\u76f4\u63a5\u79bb\u7ebf\uff0c\u7136\u540e\u76f4\u63a5\u66b4\u529b\u3002  \n\u628a\u4e00\u6bb5\u6ca1\u6709\u4fee\u6539\u7684\u533a\u95f4\u76f4\u63a5\u538b\u6210\u4e00\u4e2a\u70b9\uff0c\u7528 st\u8868 \u7ef4\u62a4\u533a\u95f4\u6700\u503c\u3002  \n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4e00\u4ea4\u76f4\u63a5 WA on 7\uff0c\u4ee3\u7801\u5c31\u4e0d[\u653e](http://codeforces.com/contest/803/submission/99108034)\u4e86\u3002  \n### Solution 3.\n\u8fd8\u662f\u7528 st\u8868\uff0c\u4f46\u662f\u4e0d\u79bb\u6563\u5316\uff0c\u76f4\u63a5\u66f4\u52a0\u66b4\u529b\u5730\u52a8\u6001\u5f00\u70b9\u3002  \n\u548c\u4e0a\u9762 Solution2 \u7684\u601d\u8def\u5dee\u4e0d\u5bf9\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u538b\u70b9\u3002  \n\u7ed3\u679c\u76f4\u63a5 A \u4e86\u3002\u3002\u3002~~\u5c0f\u7f16\u4e5f\u5f88\u60ca\u8bb6\u4f46\u662f\u4e8b\u5b9e\u5c31\u662f\u8fd9\u6837\u5b50~~  \n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u6ce8\u91caqwq\n### Coding.\n```cpp\n//\u613f\u4f60\u548c\u4f60\u91cd\u8981\u7684\u4eba\u80fd\u591f\u91cd\u9022\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<48||c>57;c=getchar()) if(!(c^45)) f=1;\n\tfor(;c>=48&&c<=57;c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}\nstruct node{int vl,tg,ls,rs;}t[5000005];\nint n,k,Q,a[300005],lg[200005],st[200005][25],tt=0,rt=0;\ninline int qry(int l,int r) {int g=lg[r-l+1];return min(st[l][g],st[r-(1<<g)+1][g]);}\ninline int rqry(int l,int r)\n{//\u50cf\u5206\u5757\u4e00\u6837\uff0c\u5982\u679c\u540c\u4e00\u5757\uff0c\u76f4\u63a5\u67e5\n//\u5982\u679c\u76f8\u90bb\u5757\u5c31\u662f\u540e\u9762\u4e00\u6bb5\u548c\u524d\u9762\u4e00\u6bb5\n//\u5426\u5219\u5c31\u80af\u5b9a\u81f3\u5c11\u5305\u62ec\u4e86\u4e00\u4e2a\u6574\u5757\uff0c\u76f4\u63a5\u5168\u5c40\u6700\u5c0f\u503c\n\tint le=(l-1)/n+1,ri=(r-1)/n+1,L=(l-1)%n+1,R=(r-1)%n+1;if(le==ri) return qry(L,R);\n\tif(le+1==ri) return min(qry(L,n),qry(1,R));else return qry(1,n);\n}\n//\u2193\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u52a8\u6001\u5f00\u70b9\u51fd\u6570\u2193\ninline void New(int &x,int l,int r) {if(!x) t[x=++tt]=(node){rqry(l,r),0,0,0};}\n//\u2193\u7ebf\u6bb5\u6811\u6a21\u677f\u2193\ninline void allc(int x,int c) {if(c) t[x].vl=t[x].tg=c;}\ninline void down(int x,int l,int r) {New(t[x].ls,l,(l+r)>>1),New(t[x].rs,((l+r)>>1)+1,r),allc(t[x].ls,t[x].tg),allc(t[x].rs,t[x].tg),t[x].tg=0;}\ninline void motif(int &x,int l,int r,int dl,int dr,int dc)\n{\n\tNew(x,l,r);if(l>dr||dl>r) return;else if(dl<=l&&r<=dr) return allc(x,dc);else down(x,l,r);\n\tmotif(t[x].ls,l,(l+r)>>1,dl,dr,dc),motif(t[x].rs,((l+r)>>1)+1,r,dl,dr,dc),t[x].vl=min(t[t[x].ls].vl,t[t[x].rs].vl);\n}\ninline int query(int &x,int l,int r,int dl,int dr)\n{\n\tNew(x,l,r);if(l>dr||dl>r) return 1e9;else if(dl<=l&&r<=dr) return t[x].vl;else down(x,l,r);\n\treturn min(query(t[x].ls,l,(l+r)>>1,dl,dr),query(t[x].rs,((l+r)>>1)+1,r,dl,dr));\n}\n//debug\u51fd\u6570\uff0c\u4e0d\u5220\u4e86\ninline void debug(int x,int l,int r)\n{\n\tif(x) printf(\"%d : [ %d , %d ] & %d\\n\",x,l,r,t[x].vl);\n\tif(l^r) down(x,l,r),debug(t[x].ls,l,(l+r)>>1),debug(t[x].rs,((l+r)>>1)+1,r);\n}\nint main()\n{\n\tlg[0]=-1,read(n),read(k);\n\tfor(int i=1;i<=n;i++) lg[i]=lg[i>>1]+1;\n\tfor(int i=1;i<=n;i++) read(st[i][0]);\n\tfor(int i=1;i<=20;i++) for(int j=1;j+(1<<(i-1))<=n;j++) st[j][i]=min(st[j][i-1],st[j+(1<<(i-1))][i-1]);\n//\tprintf(\"%d , %d , %d , %d , %d , %d\\n\",rqry(1,1),rqry(1,2),rqry(1,3),rqry(2,2),rqry(2,3),rqry(3,3));\n\tread(Q),New(rt,1,n*k);for(int fg,l,r,c;Q--;)\n\t{\n\t\tread(fg),read(l),read(r);//debug(rt,1,n);\n\t\tif(fg&1) read(c),motif(rt,1,n*k,l,r,c);else printf(\"%d\\n\",query(rt,1,n*k,l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605966667,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF803G Periodic RMQ Problem\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u597d\u9898\n\n\u5982\u679c\u521d\u503c\u90fd\u662f$0$\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5c31\u80fd\u6c34\u8fc7\u8fd9\u9053\u9898.\n\n\u6709\u521d\u503c\u600e\u4e48\u529e\u5462?\n\n\u6bcf\u6b21\u9700\u8981\u65b0\u5efa\u8282\u70b9\u7684\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u628a\u5b83\u7684\u521d\u503c\u7b97\u51fa\u6765\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u533a\u95f4$[l,r]$\u7684\u6700\u5c0f\u503c.\n\n\u7c7b\u4f3c\u5206\u5757\uff0c\u8fd9\u4e2a\u6700\u5c0f\u503c\u6709\u4e09\u79cd\u60c5\u51b5.\n\n1. $r-l+1>=n$\uff0c\u90a3\u4e48\u5b83\u5305\u542b\u4e00\u4e2a\u5b8c\u6574\u7684\u539f\u5e8f\u5217\uff0c\u53c8\u56e0\u4e3a\u65b0\u5e8f\u5217\u662f\u539f\u5e8f\u5217\u590d\u5236\u5f97\u5230\u7684\uff0c\u6240\u4ee5\u6700\u5c0f\u503c\u5c31\u662f\u539f\u5e8f\u5217\u4e2d\u7684\u6700\u5c0f\u503c\n\n2. $l,r$\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u76f4\u63a5\u67e5\u8be2\u5bf9\u5e94\u539f\u5e8f\u5217\u4e2d\u7684\u6700\u5c0f\u503c.\u4f7f\u7528$ST$\u8868\u5373\u53ef.\n\n3. $l,r$\u4e0d\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u7684\u7ec4\u6210\u76f8\u5f53\u4e8e\u539f\u5e8f\u5217\u7684\u4e00\u4e2a\u524d\u7f00\u548c\u4e00\u4e2a\u540e\u7f00\uff0c\u5206\u522b\u9884\u5904\u7406\u7136\u540e\u53d6\u4e2a$min$\u5c31\u597d\u4e86.\n\n\u5176\u4ed6\u7684\u90fd\u548c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6ca1\u4ec0\u4e48\u533a\u522b\u4e86.\u6ce8\u610f\u4fee\u6539\u7684\u65f6\u5019\u4e24\u8fb9\u90fd\u8981\u65b0\u5efa\u8282\u70b9\uff0c\u5373\u4f7f\u5e76\u4e0d\u9700\u8981\u4fee\u6539\u5176\u4e2d\u4e00\u8fb9\uff0c\u56e0\u4e3a\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1$pushup$\u7684\u6b63\u786e\u6027.\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=2e5;\nstruct Node{int w,ch[2];}a[N<<6];\nint f[20][N],pre[N],suc[N],minn,n,nn,q,lg[N],node_cnt,tag[N<<6],rt;\nint st_query(int l,int r)\n{\n\tint len=lg[r-l+1];\n\treturn min(f[len][l],f[len][r-(1<<len)+1]);\n}\nvoid make()\n{\n\tlg[1]=0;for(int i=2;i<=n;i++)lg[i]=lg[i>>1]+1;\n\tfor(int i=1;(1<<i)<=n;i++)\n\t\tfor(int j=1;j+(1<<i)-1<=n;j++)\n\t\t\tf[i][j]=min(f[i-1][j],f[i-1][j+(1<<(i-1))]);\n\tpre[1]=f[0][1];for(int i=2;i<=n;i++)pre[i]=min(pre[i-1],f[0][i]);\n\tsuc[n]=f[0][n];for(int i=n-1;i>=1;i--)suc[i]=min(suc[i+1],f[0][i]);\n\tminn=pre[n];\n}\nint query(int l,int r)\n{\n\tif(r-l+1>=n)return minn;\n\tint bl=(l-1)/n+1,br=(r-1)/n+1;\n\tif(bl==br){int L=(bl-1)*n;return st_query(l-L,r-L);}\n\telse{int L=(bl-1)*n,R=(br-1)*n;return min(suc[l-L],pre[r-R]);}\n}\nvoid newnode(int &rot,int lt,int rt)\n{\n\trot=++node_cnt;\n\ta[rot].w=query(lt,rt);\n}\nvoid upd(int rot,int w){a[rot].w=tag[rot]=w;}\nvoid pushdown(int rot)\n{\n\tif(tag[rot])\n\t{\n\t\tint t=tag[rot];tag[rot]=0;\n\t\tif(!a[rot].ch[0])a[rot].ch[0]=++node_cnt;\n\t\tif(!a[rot].ch[1])a[rot].ch[1]=++node_cnt;\n\t\tupd(a[rot].ch[0],t),upd(a[rot].ch[1],t);\n\t}\n}\nvoid update(int &rot,int lt,int rt,int lq,int rq,int w)\n{\n\tif(!rot)newnode(rot,lt,rt);\n\tif(lt>rq||rt<lq)return;\n//\tcout<<lt<<\" \"<<rt<<\" \"<<a[rot].w<<endl;\n\tif(lt>=lq&&rt<=rq){upd(rot,w);return;}\n\tpushdown(rot);int mid=(lt+rt)>>1;\n\tupdate(a[rot].ch[0],lt,mid,lq,rq,w),update(a[rot].ch[1],mid+1,rt,lq,rq,w);\n\ta[rot].w=min(a[a[rot].ch[0]].w,a[a[rot].ch[1]].w);\n}\nint query(int &rot,int lt,int rt,int lq,int rq)\n{\n\tif(!rot)newnode(rot,lt,rt);\n//\tcout<<lt<<\" \"<<rt<<\" \"<<a[rot].w<<endl;\n\tif(lt>=lq&&rt<=rq)return a[rot].w;\n\tint mid=(lt+rt)>>1;pushdown(rot);\n\tif(rq<=mid)return query(a[rot].ch[0],lt,mid,lq,rq);\n\telse if(lq>mid)return query(a[rot].ch[1],mid+1,rt,lq,rq);\n\telse return min(query(a[rot].ch[0],lt,mid,lq,mid),query(a[rot].ch[1],mid+1,rt,mid+1,rq));\n}\nint getin()\n{\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n\treturn x;\n}\nint main()\n{\n\tn=getin(),nn=getin()*n;\n\tfor(int i=1;i<=n;i++)f[0][i]=getin();\n\tmake();\n\tq=getin();a[0].w=2e9;\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint opt=getin(),l=getin(),r=getin(),x;\n\t\tif(opt==1)x=getin(),update(rt,1,nn,l,r,x);\n\t\telse printf(\"%d\\n\",query(rt,1,nn,l,r));\n\t}\n}\n```",
        "postTime": 1563439923,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF803G \u3010Periodic RMQ Problem\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4e00\u4e2a\u5e8f\u5217\uff0c\u7531\u4e00\u4e2a\u957f\u4e3aN\u7684\u5e8f\u5217\u62fc\u63a5M\u6b21\u800c\u6210\u3002\u73b0\u5728\u8981\u5728\u8fd9\u4e2a\u4e1c\u897f\u4e0a\u9762\u7ef4\u62a4\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\u548c\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n$N<=1e5,M<=1e4$\n\n[\u539f\u9898](https://www.luogu.com.cn/problem/CF803G)\n\n\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u533a\u95f4\u8d4b\u503c\u548c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u8fd9\u9898\u5c31\u662f\u7ebf\u6bb5\u6811\u88f8\u9898\u3002\u95ee\u9898\u5728\u4e8e\u8fd9\u4e2a\u6570\u5217\u957f\u5ea6\u6709 $1e9$ \uff0c\u7ebf\u6bb5\u6811\u4f1a\u5f53\u573a\u7a7a\u95f4\u7206\u70b8\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u8981\u60f3\u60f3\u600e\u4e48\u51cf\u5c11\u7a7a\u95f4\u6d88\u8017\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e2a\u5e8f\u5217\u662f\u7531\u4e00\u6bb5\u957f\u5ea6\u53ef\u4ee5\u63a5\u53d7\u7684\u5e8f\u5217\uff0c\u62fc\u63a5\u53ef\u4ee5\u63a5\u53d7\u7684\u6b21\u6570\u800c\u5f62\u6210\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e4b\u95f4**\u5b58\u5728\u5927\u91cf\u76f8\u540c\u7684\u90e8\u5206\u3002** \u6211\u4eec\u8981\u5145\u5206\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u8282\u7701\u7a7a\u95f4\u3002\n\n\u4e8e\u662f\u60f3\u5230\u4e00\u4e2a\u7c7b\u4f3c\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u4e1c\u897f\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4efd\u5e8f\u5217\uff0c\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\u3002**\u540c\u65f6\uff0c\u5b83\u4eec\u5c3d\u91cf\u4f7f\u7528\u540c\u4e00\u4efd\u7a7a\u95f4\u3002**\n\n\u4e3a\u4ec0\u4e48\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e00\u4efd\u5e8f\u5217\u5efa\u6811\uff1f\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\uff0c\u521d\u59cb\u65f6**\u5b83\u4eec\u5b8c\u5168\u76f8\u540c\uff0c\u751a\u81f3\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u6839\u7ed3\u70b9\u3002**\n\n\u800c\u4e4b\u540e\u9762\u5bf9\u4fee\u6539\u64cd\u4f5c\uff0c\u53ef\u4ee5\u52a8\u6001\u5f00\u70b9\u3002\n\n\u4f46\u662f\u95ee\u9898\u53c8\u6765\u4e86\uff1a\u5982\u679c\u64cd\u4f5c\u533a\u95f4\u6a2a\u8de8\u591a\u4efd\u5e8f\u5217\uff0c\u8981\u600e\u4e48\u529e\uff1f\n\n\u597d\u529e\u7684\u5f88\uff0c\u5728\u5e8f\u5217\u4e4b\u95f4\u518d\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u8981\u652f\u6301\u533a\u95f4\u8d4b\u503c\uff0c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5176\u5185\u90e8\u7684\u503c\u7531\u5e8f\u5217\u5185\u90e8\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u51fa\u6765\u3002\n\n\u54a6\uff1f\u8fd9\u4e0d\u8fd8\u662f\u7ebf\u6bb5\u6811\u5417\uff1f\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u5b58\u5728\u6f0f\u6d1e\u7684\uff08\u4f2a\uff09\u7a0b\u5e8f\uff1a\n\n\u5bf9\u4e8e\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff1a\n\n\u5982\u679c\u5728\u540c\u4e00\u4efd\u5e8f\u5217\u91cc\uff0c\u66f4\u65b0\u8be5\u5e8f\u5217\u5185\u90e8\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5355\u70b9\u66f4\u65b0\u5e8f\u5217\u4e4b\u95f4\u7ebf\u6bb5\u6811\u3002\n\n\u5426\u5219\uff0c\u66f4\u65b0\u6563\u5757\u5185\u90e8\u7ebf\u6bb5\u6811\uff0c\u6574\u5757\u95f4\u4ee5\u5e8f\u5217\u4e4b\u95f4\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u5bf9\u4e8e\u6563\u5757\uff0c\u8bb0\u5f97\u5355\u70b9\u66f4\u65b0\u5e8f\u5217\u4e4b\u95f4\u7ebf\u6bb5\u6811\u3002\n\n\u8be2\u95ee\u540c\u7406\u3002\n\n\u4f46\u662f\u4ed4\u7ec6\u4e00\u60f3\uff0c\u6709\u6f0f\u6d1e\uff1a\u6211\u4eec\u7528\u5e8f\u5217\u4e4b\u95f4\u7684\u7ebf\u6bb5\u6811\u533a\u95f4\u8d4b\u503c\u4e86\u4e00\u4e9b\u5e8f\u5217\uff0c\u53ef\u662f\u5728\u5904\u7406\u5e8f\u5217\u5185\u90e8\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u600e\u4e48\u77e5\u9053\u5b83\u6709\u6ca1\u6709\u88ab\u533a\u95f4\u8d4b\u503c\u8fc7\u554a\uff1f\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u8981\u600e\u4e48\u77e5\u9053\u4e00\u4efd\u5e8f\u5217\uff0c\u662f\u5426\u88ab\u533a\u95f4\u8d4b\u503c\u8fc7\uff0c\u4ee5\u53ca**\u8be5\u201c\u8d4b\u503c\u201d\u662f\u5426\u5df2\u7ecf\u751f\u6548\u5462\uff1f**\n\n\u6211\u4eec\u53ef\u4ee5\u6253\u6807\u8bb0\u554a\uff01\u600e\u4e48\u6253\u6807\u8bb0\u5462\uff1f\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u533a\u95f4\u6253\u6807\u8bb0\uff0c\u67e5\u8be2\u4e00\u4e2a\u70b9\uff08\u5373\u4e00\u4efd\u5e8f\u5217\uff09\u6709\u6ca1\u6709\u88ab\u6574\u4e2a\u8d4b\u503c\u8fc7\u3002\n\n\u7b49\u7b49\uff0c\u533a\u95f4\u6253\u6807\u8bb0\u2026\u2026\u4e5f\u7b97\u662f\u533a\u95f4\u8d4b\u503c\u5427\uff1f\n\n\u5514\uff01\u8fd9\u4e0d\u8fd8\u662f\u7ebf\u6bb5\u6811\u5417\uff1f\n\n\uff08\u5176\u5b9e\u56e0\u4e3a\u53ea\u9700\u8981\u5355\u70b9\u67e5\u8be2\uff0c\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5957\u7528\u4e4b\u524d\u7684\u5e8f\u5217\u95f4\u7ebf\u6bb5\u6811\uff0c\u4f1a\u66f4\u7b80\u5355\uff09\n\n\u4e8e\u662f\u5bf9\u4e8e\u4e4b\u524d\u7684\u4f2a\u4ee3\u7801\uff0c\u5728\u6bcf\u6b21\u8bbf\u95ee\u4e00\u68f5\u5e8f\u5217\u5185\u90e8\u7ebf\u6bb5\u6811\u7684\u65f6\u5019\uff0c\u5148\u5224\u65ad\u5b83\u662f\u5426\u9700\u8981\u88ab\u533a\u95f4\u8d4b\u503c\uff0c\u90a3\u4e48\u5c31\u5b8c\u6574\u4e86\u3002\n\n\u4e09\u68f5\u7ebf\u6bb5\u6811\u5b8c\u5168\u72ec\u7acb\uff0c\u590d\u6742\u5ea6\u5e94\u8be5\u8fd8\u662f $O(n \\log{n})$\u3002\n\n\u4e0d\u8fc7\u663e\u800c\u6613\u89c1\u7684\u60ca\u4eba\u5e38\u6570\uff0c\u9669\u4e9b\u559c\u63d0\u6700\u52a3\u89e3\u3002\n\n```\n#include <cstdio>\n#include <cstdlib>\n\nconst int maxn=1e5+5,inf=1e9+7;\n#define null 0\n\nint n,m,a[maxn],minn=inf;\n\ntemplate<typename T> inline T min(T a,T b){\n\treturn a<b?a:b;\n}\n\nstruct sgt_1{//\u6bcf\u4e2a\u5e8f\u5217\u5185\u90e8\u7ebf\u6bb5\u6811\uff0c\u52a8\u6001\u5f00\u70b9\n\tstruct node{\n\t\tnode *l,*r;int tag,minn;\n\t\tnode(){l=r=null;tag=0,minn=inf;}\n\t\tvoid push_up(){\n\t\t\tif(!l&&!r) return;\n\t\t\tminn=min(l?l->minn:inf,r?r->minn:inf);\n\t\t}\n\t\tvoid push_down(){\n\t\t\tif(!tag||(!l&&!r)) return;\n\t\t\tnode *pl=new node;*pl=*l;pl->minn=pl->tag=tag;l=pl;\n\t\t\tnode *pr=new node;*pr=*r;pr->minn=pr->tag=tag;r=pr;//\u522b\u5fd8\u4e86\u65b0\u5f00\u7ed3\u70b9\n\t\t\ttag=0;\n\t\t}\n\t\tvoid init(){*this=node();}\n\t}*rt[maxn];\n\tnode *&operator[](const int &id){\n\t\treturn rt[id];\n\t}\n\tnode *build(int l,int r){\n\t\tnode *now=new node;if(l==r){now->minn=a[l];return now;}\n\t\tint mid=(l+r)>>1;\n\t\tnow->l=build(l,mid),now->r=build(mid+1,r);\n\t\treturn now->push_up(),now;//\u6309\u539f\u59cb\u5e8f\u5217\u5efa\u6811\n\t}\n\tnode* modify(int _l,int _r,node* las,int l,int r,int val){\n\t\tif(l>_r||r<_l) return las;node *now=new node;*now=*las;//\u52a8\u6001\u5f00\u70b9\n\t\tif(_l<=l&&r<=_r){\n\t\t\tnow->tag=now->minn=val;\n\t\t\treturn now;\n\t\t}\n\t\tnow->push_down();int mid=(l+r)>>1;\n\t\tnow->l=modify(_l,_r,now->l,l,mid,val),now->r=modify(_l,_r,now->r,mid+1,r,val);\n\t\treturn now->push_up(),now;//\u533a\u95f4\u8d4b\u503c\n\t}\n\tint wonder(int _l,int _r,node *now,int l,int r){\n\t\tif(l>_r||r<_l) return inf;if(_l<=l&&r<=_r) return now->minn;\n\t\tnow->push_down();int mid=(l+r)>>1;\n\t\treturn min(wonder(_l,_r,now->l,l,mid),wonder(_l,_r,now->r,mid+1,r));\n\t}//\u533a\u95f4\u6700\u503c\n}s_1;\n\nstruct sgt_2{//\u5e8f\u5217\u4e0a\u7ebf\u6bb5\u6811\uff0c\u8fd9\u4e2a\u4e0d\u7528\u52a8\u6001\u5f00\u70b9\n\tstruct node{\n\t\tnode *l,*r;int tag,minn;\n\t\tnode(){l=r=null;tag=0,minn=inf;}\n\t\tvoid push_up(){\n\t\t\tif(!l&&!r) return;\n\t\t\tminn=min(l?l->minn:inf,r?r->minn:inf);\n\t\t}\n\t\tvoid push_down(){\n\t\t\tif(!tag) return;\n\t\t\tl->tag=l->minn=tag,r->tag=r->minn=tag;\n\t\t\ttag=0;\n\t\t}\n\t\tvoid init(){*this=node();}\n\t}*rt;\n\tnode *build(int l,int r){\n\t\tnode *now=new node;if(l==r){now->minn=minn;return now;}\n\t\tint mid=(l+r)>>1;\n\t\tnow->l=build(l,mid),now->r=build(mid+1,r);\n\t\treturn now->push_up(),now;\n\t}\n\tvoid modify(int _l,int _r,node *now,int l,int r,int val){\n\t\tif(l>_r||r<_l) return;\n\t\tif(_l<=l&&r<=_r){\n\t\t\tnow->tag=now->minn=val;\n\t\t\treturn;\n\t\t}\n\t\tnow->push_down();\n\t\tint mid=(l+r)>>1;\n\t\tmodify(_l,_r,now->l,l,mid,val),modify(_l,_r,now->r,mid+1,r,val);\n\t\treturn now->push_up();\n\t}\n\tint wonder(int _l,int _r,node *now,int l,int r){\n\t\tif(l>_r||r<_l) return inf;if(_l<=l&&r<=_r) return now->minn;\n\t\tnow->push_down();int mid=(l+r)>>1;\n\t\treturn min(wonder(_l,_r,now->l,l,mid),wonder(_l,_r,now->r,mid+1,r));\n\t}\n}s_2,s_3;//s_2\u7528\u6765\u7ba1\u533a\u95f4\u6700\u503c\uff0cs_3\u7528\u6765\u7ba1\u6807\u8bb0\n\ninline int where(int key){return (key-1)/n+1;}//\u5224\u65ad\u4e00\u4e2a\u70b9\u6240\u5728\u5e8f\u5217\n\nvoid solve(int id){//\u7c7b\u4f3cpush_down\u64cd\u4f5c\n\tint watch=s_3.wonder(id,id,s_3.rt,1,m);\n\tif(watch){\n\t\ts_1[id]=s_1.modify(1,n,s_1[id],1,n,watch);\n\t\ts_3.modify(id,id,s_3.rt,1,m,0);\n\t}//\u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u88ab\u6807\u8bb0\u8fc7\u8981\u8d4b\u503c\uff0c\u5e76\u5904\u7406\u8d4b\u503c\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),minn=min(minn,a[i]);\n\ts_1.rt[1]=s_1.build(1,n);s_2.rt=s_2.build(1,m);minn=0;s_3.rt=s_3.build(1,m);\n\tfor(int i=2;i<=m;i++) s_1.rt[i]=s_1.rt[i-1];\n\tint q;scanf(\"%d\",&q);\n\tfor(int ___=1;___<=q;___++){\n\t\tint opt;scanf(\"%d\",&opt);\n\t\tif(opt==1){\n\t\t\tint l,r,x;scanf(\"%d%d%d\",&l,&r,&x);\n\t\t\tint idl=where(l),idr=where(r);\n\t\t\tl-=(idl-1)*n,r-=(idr-1)*n;\n\t\t\tif(idl==idr){\n\t\t\t\tsolve(idl);s_1[idl]=s_1.modify(l,r,s_1.rt[idl],1,n,x);\n\t\t\t\ts_2.modify(idl,idl,s_2.rt,1,m,s_1.wonder(1,n,s_1[idl],1,n));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsolve(idl);s_1[idl]=s_1.modify(l,n,s_1[idl],1,n,x);s_2.modify(idl,idl,s_2.rt,1,m,s_1.wonder(1,n,s_1[idl],1,n));\n\t\t\tsolve(idr);s_1[idr]=s_1.modify(1,r,s_1[idr],1,n,x);s_2.modify(idr,idr,s_2.rt,1,m,s_1.wonder(1,n,s_1[idr],1,n));\n\t\t\tif(idl!=idr) s_2.modify(idl+1,idr-1,s_2.rt,1,m,x),s_3.modify(idl+1,idr-1,s_3.rt,1,m,x);\n\t\t}\n\t\telse{\n\t\t\tint l,r;scanf(\"%d%d\",&l,&r);int idl=where(l),idr=where(r);\n\t\t\tl-=(idl-1)*n,r-=(idr-1)*n;\n\t\t\tsolve(idl);if(idl!=idr) solve(idr);\n\t\t\tif(idl==idr) printf(\"%d\\n\",s_1.wonder(l,r,s_1[idl],1,n));\n\t\t\telse{\n\t\t\t\tint temp=inf;if(idl!=idr) temp=s_2.wonder(idl+1,idr-1,s_2.rt,1,m);\n\t\t\t\ttemp=min(temp,min(s_1.wonder(l,n,s_1[idl],1,n),s_1.wonder(1,r,s_1[idr],1,n)));\n\t\t\t\tprintf(\"%d\\n\",temp);\n\t\t\t}\n\t\t}//\u89c1\u4f2a\u4ee3\u7801\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603456431,
        "uid": 101984,
        "name": "Rui_R",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF803G \u3010Periodic RMQ Problem\u3011"
    },
    {
        "content": "**\u9898\u76ee\u89e3\u91ca\uff1a**\n\n\u6709\u4e00\u4e2a\u7531\u7ed9\u5b9a\u5e8f\u5217\u4e0d\u65ad\u9996\u5c3e\u62fc\u63a5\u800c\u6210\u7684\u5e8f\u5217\uff08\u5f88\u957f\uff0c\u5b58\u4e0d\u4e0b\uff09\u3002\n\n\u8981\u6c42\u5b9e\u73b0\u4e24\u4e2a\u64cd\u4f5c\uff1a\u533a\u95f4\u8d4b\u503c\u548c\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n----\n\n\u8fd9\u4e2a\u5e8f\u5217\u5f88\u957f\u4e0d\u597d\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u7f29\u5c0f\u4e00\u4e0b\u64cd\u4f5c\u7684\u8303\u56f4\u3002\n\n\u628a\u6bcf\u4e2a\u64cd\u4f5c\u7684\u5de6\u7aef\u70b9\u51cf\u4e00\u548c\u53f3\u7aef\u70b9\u52a0\u5165\u79bb\u6563\u5316\u6570\u7ec4$pri$\uff08\u8fd9\u91cc\u4e0b\u6807\u4ece1\u5f00\u59cb\uff09\u3002\n\n\u79bb\u6563\u5316\u540e\u7b2ci\u4e2a\u5757\u7684\u5de6\u7aef\u70b9\u662f$pri[i-1]+1$,\u53f3\u7aef\u70b9\u662f$pri[i]$\u3002\uff08\u79bb\u6563\u5316\u8fd8\u8981\u63d2\u5165$0$\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u6807\uff0c\u4e0d\u7136\u6709\u4e9b\u4f4d\u7f6e\u6ca1\u6709\u88ab\u8986\u76d6\u5230\uff09\n\n\u4f46\u662f\u79bb\u6563\u5316\u4e4b\u540e\u6211\u4eec\u4e0d\u77e5\u9053\u6bcf\u4e2a\u79bb\u6563\u5316\u51fa\u6765\u7684\u5757\u5185\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u5c31\u65e0\u6cd5\u521d\u59cb\u5316\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e4b\u524d\u7ed9\u51fa\u7528\u6765\u9996\u5c3e\u62fc\u63a5\u7684\u5e8f\u5217\u6c42\u51fa\u6765\u3002\n\n\u5bf9\u6bcf\u4e2a\u5757\u5206\u7c7b\u8ba8\u8bba\uff1a\uff08\u8bbe\u7ed9\u5b9a\u7528\u6765\u62fc\u63a5\u7684\u5e8f\u5217\u957f\u4e3a$n$\uff09\n\n1).\u5757\u957f\u5927\u4e8e\u7b49\u4e8e$n$\uff1a\n\n\u6b64\u65f6\u8fd9\u4e2a\u5757\u5df2\u7ecf\u8986\u76d6\u4e86\u6574\u4e2a\u7ed9\u5b9a\u5e8f\u5217\uff0c\u90a3\u5b83\u7684\u6700\u5c0f\u503c\u76f4\u63a5\u5c31\u662f\u7ed9\u5b9a\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u3002\n\n2).\u5757\u957f\u5c0f\u4e8e$n$\uff1a\n\n\u53c8\u8981\u5206\u4e24\u79cd\u60c5\u51b5:\n\n$\\ \\ \\ \\ $A).\u5de6\u7aef\u70b9\u6295\u5c04\u5230\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u5728\u53f3\u7aef\u70b9\u7684\u540e\u9762\uff08\u7531\u4e8e\u662f\u7531\u540c\u4e00\u5e8f\u5217\u9996\u5c3e\u62fc\u63a5\u800c\u6210\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u6295\u5c04\u5230\u4e00\u4e2a\u5e8f\u5217\u4e0a\uff09\u3002\n\n$\\ \\ \\ \\ $\u5c31\u662f\u8bf4\uff1a\u8fd9\u4e2a\u5757\u8986\u76d6\u7684\u7ed9\u5b9a\u5e8f\u5217\u7684\u524d\u9762\u7684\u4e00\u90e8\u5206\u548c\u540e\u9762\u7684\u4e00\u90e8\u5206\u3002\n\n$\\ \\ \\ \\ $\u5c31\u50cf\u8fd9\u6837\uff1a\n\n![](https://s1.ax1x.com/2020/07/28/aAX7GQ.png)\n\n$\\ \\ \\ \\ $\u6295\u5c04\u5230\u7ed9\u5b9a\u5e8f\u5217\u4e0a\u5c31\u50cf\u8fd9\u6837\uff1a\n\n![](https://s1.ax1x.com/2020/07/28/aAXTPg.png)\n\n$\\ \\ \\ \\ $\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u67e5\u8be2\uff08\u6d82\u8272\u7684\uff09\u8fd9\u4e24\u6bb5\u7684\u6700\u5c0f\u503c\u518d\u53d6\u4e2a$min$\u5c31\u597d\u4e86\u3002\n\n$\\ \\ \\ \\ $\u5176\u5b9e\u5c31\u662f\u4ece\u4ed6\u4eec\u4e2d\u95f4\u7684\u5e8f\u5217\u5c3e\uff08\u5c31\u662f\u66f4\u4e0a\u9762\u7684\u90a3\u5f20\u56feL,R\u4e2d\u95f4\u90a3\u6761\u9ed1\u7ebf\uff09\u5206\u5f00\u6765\u6c42\u4e24\u8fb9\u7684\u6700\u5c0f\u503c\u518d\u53d6$min$\uff0c\u5c31\u5f97\u5230\u4e86\u4ed6\u4eec\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\u3002\n\n$\\ \\ \\ \\ $B).\u5de6\u7aef\u70b9\u6295\u5c04\u5230\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u5728\u53f3\u7aef\u70b9\u7684\u524d\u9762\u3002\n\n$\\ \\ \\ \\ $\u4eff\u7167\u4e0a\u4e2a\u60c5\u51b5\uff0c\u6295\u5c04\u5230\u5e8f\u5217\u4e0a\u67e5\u8be2\u4ed6\u4eec\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u7531\u4e8e\u662f\u4ee5\u64cd\u4f5c\u7684\u5de6\u53f3\u7aef\u70b9\u505a\u7684\u79bb\u6563\u5316\uff0c\u6240\u4ee5\u4e00\u4e2a\u5757\u5185\u8981\u4e48\u4e00\u8d77\u88ab\u8be2\u95ee\uff0c\u8981\u4e48\u4e00\u8d77\u88ab\u4fee\u6539\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u5904\u7406\u51fa\u8fd9\u4e2a\u79bb\u6563\u5316\u540e\u7684\u5e8f\u5217\u6bcf\u4e2a\u5757\u7684\u521d\u59cb\u503c\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u628a\u5b83\u5f53\u677f\u9898\u505a\u4e86\uff01\n\n\u4ee3\u7801\uff1a\n\n```\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nvector<int> pri;\nconst int INF=1e9+1;\nint n,q,k,a[100010],ori[400010],op[100010],opl[100010],opr[100010],opx[100010],nodes[1000010],tag[2000010],s;\nvoid buildori(int l,int r,int x)//\u5bf9\u4e8e\u7ed9\u5b9a\u5e8f\u5217\u7684\u7ebf\u6bb5\u6811\u5efa\u6811\u3002 \n{\n\tif(l^r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tbuildori(l,mid,x<<1);\n\t\tbuildori(mid+1,r,x<<1|1);\n\t\tori[x]=min(ori[x<<1],ori[x<<1|1]);\n\t}\n\telse\tori[x]=a[l];\n}\nint findori(int l,int r,int x,int fr,int ba)//\u67e5\u8be2\u7ed9\u5b9a\u5e8f\u5217\u91cc\u7684\u533a\u95f4\u6700\u5c0f\u503c\u3002 \n{\n\tif(l>ba||r<fr)\treturn INF;\n\tif(l>=fr&&r<=ba)\treturn ori[x];\n\telse\n\t{\n\t\tint mid=(l+r)>>1;\n\t\treturn min(findori(l,mid,x<<1,fr,ba),findori(mid+1,r,x<<1|1,fr,ba));\n\t}\n}\nvoid build(int l,int r,int x)//\u5bf9\u79bb\u6563\u5316\u540e\u7684\u5e8f\u5217\u5efa\u6811\u3002 \n{\n\tif(l^r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tbuild(l,mid,x<<1);\n\t\tbuild(mid+1,r,x<<1|1);\n\t\tnodes[x]=min(nodes[x<<1],nodes[x<<1|1]);\n\t}\n\telse\n\t{\n\t\tif(pri[l]-pri[l-1]>=n)\tnodes[x]=ori[1];//\u60c5\u51b51). \n\t\telse\n\t\t{\n\t\t\tint one=(pri[l-1]+1)%n;\n\t\t\tif(one==0)\tone=n;\n\t\t\tint two=pri[l]%n;\n\t\t\tif(two==0)\ttwo=n;\n\t\t\tif(one>two)\tnodes[x]=min(findori(1,n,1,one,n),findori(1,n,1,1,two));//\u60c5\u51b52).A). \n\t\t\telse\tnodes[x]=findori(1,n,1,one,two);//\u60c5\u51b52).B). \n\t\t}\n\t}\n}\n//\u540e\u9762\u7684\u5c31\u662f\u6a21\u677f\u64cd\u4f5c\u3002 \nvoid pushdown(int x)\n{\n\tif(tag[x])\n\t{\n\t\tnodes[x]=tag[x];\n\t\ttag[x<<1]=tag[x<<1|1]=tag[x];\n\t\ttag[x]=0;\n\t}\n}\nvoid update(int l,int r,int x,int fr,int ba,int val)\n{\n\tif(l>ba||r<fr)\treturn;\n\tif(l>=fr&&r<=ba)\ttag[x]=val;\n\telse\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(x);\n\t\tupdate(l,mid,x<<1,fr,ba,val);\n\t\tupdate(mid+1,r,x<<1|1,fr,ba,val);\n\t\tpushdown(x<<1);\n\t\tpushdown(x<<1|1);\n\t\tnodes[x]=min(nodes[x<<1],nodes[x<<1|1]);\n\t}\n}\nint find(int l,int r,int x,int fr,int ba)\n{\n\tif(l>ba||r<fr)\treturn INF;\n\tpushdown(x);\n\tif(l>=fr&&r<=ba)\treturn nodes[x];\n\telse\n\t{\n\t\tint mid=(l+r)>>1;\n\t\treturn min(find(l,mid,x<<1,fr,ba),find(mid+1,r,x<<1|1,fr,ba));\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=1;i<=n;++i)\tscanf(\"%d\",&a[i]);\n\tbuildori(1,n,1);\n\tscanf(\"%d\",&q);\n\tpri.push_back(0);\n\tpri.push_back(n*k);//\u63d2\u51650\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u6807\u3002 \n\tfor(int i=1;i<=q;++i)\n\t{\n\t\tscanf(\"%d %d %d\",&op[i],&opl[i],&opr[i]);\n\t\tif(op[i]==1)\tscanf(\"%d\",&opx[i]);\n\t\tpri.push_back(opl[i]-1);\n\t\tpri.push_back(opr[i]);//\u628a\u6bcf\u4e2a\u64cd\u4f5c\u7684\u5de6\u7aef\u70b9\u51cf\u4e00\u548c\u53f3\u7aef\u70b9\u52a0\u5165\u79bb\u6563\u5316\u6570\u7ec4pri\u3002 \n\t}\n\tsort(pri.begin(),pri.end());\n\tpri.erase(unique(pri.begin(),pri.end()),pri.end());\n\ts=pri.size();\n\tbuild(1,s,1);//0\u4e0b\u6807\u7684\u4f4d\u7f6e\u6ca1\u6709\u524d\u4e00\u4e2a\uff0c\u6240\u4ee5\u4ece1\u5f00\u59cb\u5efa\u6811\u3002 \n\tfor(int i=1;i<=q;++i)\n\t{\n\t\t//lower_bound\u8fd4\u56de\u5927\u4e8e\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u4e0b\u6807\uff0c\u63d2\u5165\u64cd\u4f5c\u65f6\u662f\u63d2\u5165\u7684opl[i]-1\u548copr[i]\uff0c\u6240\u4ee5\u67e5\u8be2\u5927\u4e8e\u7b49\u4e8eopl[i]\u7684\u4e0b\u6807\u53ef\u4ee5\u67e5\u8be2\u5230opl[i]\u6240\u5728\u7684\u5757\u3002 \n\t\tif(op[i]==1)\tupdate(1,s,1,lower_bound(pri.begin(),pri.end(),opl[i])-pri.begin(),lower_bound(pri.begin(),pri.end(),opr[i])-pri.begin(),opx[i]);\n\t\telse\tprintf(\"%d\\n\",find(1,s,1,lower_bound(pri.begin(),pri.end(),opl[i])-pri.begin(),lower_bound(pri.begin(),pri.end(),opr[i])-pri.begin()));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595926118,
        "uid": 174555,
        "name": "CyanSineSin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF803G \u3010Periodic RMQ Problem\u3011"
    },
    {
        "content": "## [My Blog](https://yzxoi.top/archives/1765)\n\n## Description\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[CF803G](http://codeforces.com/problemset/problem/803/G)\n\n\u4e00\u4e2a\u5e8f\u5217 $\\{a_i\\}$ \u7531 $k$ \u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $\\{b_i\\}$ \u62fc\u63a5\u800c\u6210\uff0c\u652f\u6301 $q$ \u4e2a\u64cd\u4f5c\uff1a\n\n1. `1 l r x`\uff0c\u533a\u95f4\u8d4b\u503c\n2. `2 l r`\u6c42\u533a\u95f4\u6700\u5c0f\u503c\n\n$1\\leq n\\leq 10^5,1\\leq k \\leq 10^4,1\\leq q \\leq 10^5,1\\leq b_i\\leq 10^9$\n\n## Solution\n\n~~\u4e4d\u4e00\u770b\u5c31\u662f\u7ebf\u6bb5\u6811\u6a21\u677f\u9898~~\uff0c\u7136\u540e\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4\uff0c\u5e8f\u5217 $\\{a_i\\}$ \u7684\u957f\u5ea6\u53ef\u4ee5\u9ad8\u8fbe $10^9$\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u5f00\u7ebf\u6bb5\u6811\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u5e8f\u5217\u7684\u7279\u6b8a\u6027\u8d28\uff1a\u7531 $k$ \u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $\\{b_i\\}$ \u62fc\u63a5\u800c\u6210\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u64cd\u4f5c\u6620\u5c04\u5230 $\\{b_i\\}$ \u4e0a\u505a\u3002\n\n\u7136\u540e\u628a\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\uff0c\u79bb\u6563\u5316\uff0c\u62c6\u6210\u6bcf\u4e2a\u70b9\u4ee5\u53ca\u4e24\u4e2a\u70b9\u95f4\u7684\u533a\u95f4\uff0c\u5148\u7528 RMQ \u9884\u5904\u7406\u51fa\u79bb\u6563\u5316\u540e\u6bcf\u4e2a\u70b9\u7684\u521d\u503c\uff0c\u7136\u540e\u518d\u5957\u4e2a\u7ebf\u6bb5\u6811\u52a8\u6001\u7ef4\u62a4\u4e00\u4e0b\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define W while\n#define I inline\n#define RI register int\n#define LL long long\n#define Cn const\n#define CI Cn int&\n#define gc getchar\n#define D isdigit(c=gc())\n#define pc(c) putchar((c))\nusing namespace std;\nnamespace Debug{\n\tTp I void _debug(Cn char* f,Ty t){cerr<<f<<'='<<t<<endl;}\n\tTs I void _debug(Cn char* f,Ty x,Ar... y){W(*f!=',') cerr<<*f++;cerr<<'='<<x<<\",\";_debug(f+1,y...);}\n\tTp ostream& operator<<(ostream& os,Cn vector<Ty>& V){os<<\"[\";for(Cn auto& vv:V) os<<vv<<\",\";os<<\"]\";return os;}\n\t#define gdb(...) _debug(#__VA_ARGS__,__VA_ARGS__)\n}using namespace Debug;\nnamespace FastIO{\n\tTp I void read(Ty& x){char c;int f=1;x=0;W(!D) f=c^'-'?1:-1;W(x=(x<<3)+(x<<1)+(c&15),D);x*=f;}\n\tTs I void read(Ty& x,Ar&... y){read(x),read(y...);}\n\tTp I void write(Ty x){x<0&&(pc('-'),x=-x,0),x<10?(pc(x+'0'),0):(write(x/10),pc(x%10+'0'),0);}\n\tTp I void writeln(Cn Ty& x){write(x),pc('\\n');}\n}using namespace FastIO;\nCn int N=1e5+10;\nint n,k,b[N],q,o[N<<1],cnt,tot,w[N<<2],id[N<<2];\nstruct Que{int op,l,r,x;}c[N];\nclass RMQ{\n\tprivate:\n\t\tint F[N][20],lg[N];\n\tpublic:\n\t\tI void B(){\n\t\t\tRI i,j;for(lg[0]=-1,i=1;i<=n;i++) F[i][0]=b[i],lg[i]=lg[i/2]+1;\n\t\t\tfor(j=1;(1<<j)<=n;j++) for(i=1;i+(1<<j)-1<=n;i++) F[i][j]=min(F[i][j-1],F[i+(1<<j-1)][j-1]);\n\t\t}\n\t\tI int Q(CI l,CI r){return min(F[l][lg[r-l+1]],F[r-(1<<lg[r-l+1])+1][lg[r-l+1]]);}\n}R;\nclass SegmentTree{\n\tprivate:\n\t\tstruct node{int S,T;}T[N<<3];\n\t\t#define mid (l+r>>1)\n\t\t#define PT CI x=1,CI l=1,CI r=tot\n\t\t#define LT x<<1,l,mid\n\t\t#define RT x<<1|1,mid+1,r\n\t\t#define PU(x) (T[x].S=min(T[x<<1].S,T[x<<1|1].S))\n\t\t#define PD(x) (T[x].T&&(T[x<<1].T=T[x<<1|1].T=T[x<<1].S=T[x<<1|1].S=T[x].T,T[x].T=0))\n\tpublic:\n\t\tI void B(PT){\n\t\t\tif(l==r) return void(T[x].S=w[l]);\n\t\t\tB(LT),B(RT),PU(x);\n\t\t}\n\t\tI void U(CI L,CI R,CI v,PT){\n\t\t\tif(L<=l&&r<=R) return void(T[x].T=T[x].S=v);\n\t\t\tPD(x),L<=mid&&(U(L,R,v,LT),0),R>mid&&(U(L,R,v,RT),0),PU(x);\n\t\t}\n\t\tI int Q(CI L,CI R,PT){\n\t\t\tif(L<=l&&r<=R) return T[x].S;\n\t\t\tRI S=2e9;return PD(x),L<=mid&&(S=min(S,Q(L,R,LT))),R>mid&&(S=min(S,Q(L,R,RT))),S;\n\t\t}\n}S;\nint main(){\n\tRI i,l,r;for(read(n,k),i=1;i<=n;i++) read(b[i]);\n\tfor(R.B(),read(q),i=1;i<=q;i++) read(c[i].op,c[i].l,c[i].r),c[i].op&1&&(read(c[i].x),0),o[++cnt]=c[i].l,o[++cnt]=c[i].r;\n\t#define idx(x) ((x)%n?(x)%n:n)\n\tsort(o+1,o+cnt+1),cnt=unique(o+1,o+cnt+1)-o-1;for(i=1;i<cnt;i++) if(w[++tot]=b[idx(o[i])],id[i]=tot,o[i+1]>o[i]+1){//\u79bb\u6563\u5316\u540e\u5206\u60c5\u51b5\u8ba8\u8bba\n\t\tif(o[i+1]-1-(o[i]+1)>=n) w[++tot]=R.Q(1,n);//\u5982\u679c\u957f\u5ea6\u8d85\u8fc7 n \uff0c\u5176\u5b9e\u5c31\u662f\u6574\u4e2a bi \u7684\u6700\u5c0f\u503c\n\t\telse if((l=idx(o[i]+1))<=(r=idx(o[i+1]-1))) w[++tot]=R.Q(l,r);//\u5982\u679c\u5728\u4e00\u6bb5\u533a\u95f4\u5185\n\t\telse w[++tot]=min(R.Q(l,n),R.Q(1,r));//\u5982\u679c\u8de8\u8d8a\u4e86\u4e24\u4e2a\u533a\u95f4\n\t}w[++tot]=b[idx(o[cnt])],id[cnt]=tot;\n\t#define LW(x) (lower_bound(o+1,o+cnt+1,x)-o)\n\tfor(S.B(),i=1;i<=q;i++) c[i].l=LW(c[i].l),c[i].r=LW(c[i].r),c[i].op&1?S.U(id[c[i].l],id[c[i].r],c[i].x):\n\twriteln(S.Q(id[c[i].l],id[c[i].r]));return 0;\n}\n```\n\n",
        "postTime": 1619572046,
        "uid": 37103,
        "name": "yzxoi",
        "ccfLevel": 7,
        "title": "CF803G Periodic RMQ Problem"
    },
    {
        "content": "\n\n## Description\n\n\u9898\u9762\uff1a[CF803G Periodic RMQ Problem](https://www.luogu.com.cn/problem/CF803G)\n\n> \u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 $a$ \u8ba9\u4f60\u652f\u6301: \u533a\u95f4\u8d4b\u503c;\u8be2\u95ee\u533a\u95f4\u6700\u5c0f\u503c\n\u6211\u4eec\u89c9\u5f97\u8fd9\u4e2a\u95ee\u9898\u592a\u6c34\u4e86,\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u7ed9\u4f60\u5e8f\u5217 $a$\n\u800c\u662f\u7ed9\u4f60\u5e8f\u5217\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $b$ ,\u628a $b$ \u590d\u5236\u7c98\u8d34 $k$ \u6b21\u5c31\u53ef\u4ee5\u5f97\u5230 $a$\n$n \\le 10^5,k \\le 10^4,q \\le 10^5,b_i \\le 10^9$\n$1 \\le l \\le r \\le n \\times k$\n\n## Solution\n\n\u7ef4\u62a4\u7684\u7ebf\u6bb5\u6811\u64cd\u4f5c\u4e0d\u96be\uff0c\u9ebb\u70e6\u7684\u5730\u65b9\u5728\u4e8e\u5bf9\u539f\u5e8f\u5217\u7684\u5904\u7406\uff0c\u7406\u89e3\u601d\u60f3\u540e\u81ea\u5df1\u5b8c\u5168\u53ef\u4ee5yy\u51fa\u6765\u3002\n\n\u770b\u5230 \u201c\u533a\u95f4\u8986\u76d6\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u201d \uff0c\u8fd9\u4e0d\u677f\u5b50\uff1f\n\u4f46\u662f\uff0c\u5e8f\u5217\u957f\u5ea6\u53ef\u662f $n \\times k = 10^9$ \u554a\u3002\n\n\u53d1\u73b0\u8be2\u95ee\u6d89\u53ca\u5230\u7684\u70b9\u53ea\u6709 $10^5$ \u7ea7\u522b\uff0c\u8003\u8651\u8fdb\u884c\u79bb\u6563\u5316\u5904\u7406\uff0c\u53ea\u4fdd\u7559\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u4fe1\u606f\u3002\n\n\u6ce8\u610f\uff1a\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u4fe1\u606f\u4e0d\u4ec5\u4ec5\u662f\u8be2\u95ee\u6d89\u53ca\u5230\u7684\u70b9\uff0c\u8fd8\u6709\u76f8\u90bb\u7684\u4e24\u4e2a\u6d89\u53ca\u5230\u7684\u70b9\u7684\u533a\u95f4\u4e5f\u5bf9\u7b54\u6848\u6709\u8d21\u732e\n\uff08\u56e0\u4e3a\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u53ef\u80fd\u6bd4\u4e24\u4e2a\u7aef\u70b9\u66f4\u5c0f\uff09\u3002\n\n\u84dd\u8272\u7bad\u5934\u662f\u8be2\u95ee\u6d89\u53ca\u8fc7\u7684\u70b9\uff0c\u76f8\u90bb\u7684\u4e24\u4e2a\u6d89\u53ca\u8fc7\u7684\u70b9\u7684\u533a\u95f4\u88ab\u538b\u7f29\u6210\u4e00\u4e2a\u70b9\u6765\u5904\u7406\uff08\u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u6d89\u53ca\u8fc7\u7684\u70b9\u4e4b\u95f4\u6ca1\u6709\u533a\u95f4\u5c31\u4e0d\u538b\u7f29\uff09\u3002\n\n\u628a\u8fd9\u4e24\u79cd\u70b9\u90fd\u653e\u8fdb\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\uff08\u7ea2\u8272\u5e8f\u5217\uff09\uff0c\u7136\u540e\u5728\u65b0\u7684\u5e8f\u5217\u4e0a\u8fdb\u884c\u4fee\u6539\u67e5\u8be2\u64cd\u4f5c\u5373\u53ef\u3002\n\u6ce8\u610f\u6620\u5c04\u597d\u8be2\u95ee\u6d89\u53ca\u5230\u7684\u70b9\u5728\u7ea2\u8272\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n![](https://ae02.alicdn.com/kf/U4277bc0b68ba45a5a94e523ea4b9d420j.jpg)\n\n\u6ce8\u610f\u5c06\u533a\u95f4\u538b\u7f29\u6210\u4e00\u4e2a\u70b9\u65f6\u7684\u5904\u7406\uff1a\n\n- \u5982\u679c\u533a\u95f4\u957f\u5ea6\u8d85\u8fc7 $n$\uff0c\u76f4\u63a5\u52a0\u5165\u539f\u6765\u6574\u6bb5\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff08~~\u4f46\u662f\u6570\u636e\u6ca1\u5361\u8fd9\u4e2a\u5730\u65b9~~\uff09\n- \u5982\u679c\u5728\u540c\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u52a0\u5165\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\n- \u5982\u679c\u8de8\u8d8a\u4e86\u4e24\u4e2a\u533a\u95f4\uff0c\u52a0\u5165\u533a\u95f4 $[1, r]$ \u548c $[l, n]$ \u7684\u6700\u5c0f\u503c\n\n\u8fd9\u79cd\u505a\u6cd5\u5728\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u6d88\u8017\u4e0a\u90fd\u6bd4\u8f83\u4f18\u79c0\u3002\n\n\u5269\u4e0b\u7684\u770b\u4ee3\u7801\u5427\uff0c\u91cd\u8981\u6b65\u9aa4\u90fd\u6709\u6ce8\u91ca\uff0c\u5982\u679c\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u63d0\u51fa\u3002\n\n## Code\n\n```cpp\n/*\nWork by: Suzt_ilymics\nKnowledge: ??\nTime: O(??)\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define LL long long\n#define orz cout<<\"lkp AK IOI!\"<<endl\n\nusing namespace std;\nconst int MAXN = 2e5+5; // \u6ce8\u610f\u5f00\u7684\u6570\u7ec4\u5927\u5c0f\uff08\u81ea\u5df1\u7b97\u7b97\u5e94\u8be5\u7528\u591a\u5c11 \nconst int INF = 1e9+7;\nconst int mod = 1e9+7;\n\nstruct Ques{\n    int opt, l, r, val;\n}q[MAXN];\n\nint n, K, m;\nint a[MAXN], b[MAXN << 1], Cnt = 0, pre[MAXN << 1];\nint date[MAXN], cnt = 0, date_num = 0;\n\nint read(){\n    int s = 0, f = 0;\n    char ch = getchar();\n    while(!isdigit(ch))  f |= (ch == '-'), ch = getchar();\n    while(isdigit(ch)) s = (s << 1) + (s << 3) + ch - '0' , ch = getchar();\n    return f ? -s : s;\n}\n\nstruct Big_Seg{ // \u91c7\u7528\u7ed3\u6784\u4f53\uff0c\u7801\u91cf\u4f1a\u66f4\u5c11\u54e6 \n    #define lson i << 1\n    #define rson i << 1 | 1\n    struct Tree{\n        int min, lazy;\n    }tree[MAXN << 3];\n    void Push_up(int i) { tree[i].min = min(tree[lson].min, tree[rson].min); }\n    void Push_down(int i) {\n        if(tree[i].lazy) {\n            tree[lson].lazy = tree[rson].lazy = tree[i].lazy;\n            tree[lson].min = tree[rson].min = tree[i].lazy;\n            tree[i].lazy = 0;\n        }\n    }\n    void Build(int i, int l, int r) { //\u4e24\u4e2a\u5efa\u6811\u5206\u522b\u7ed9\u4e24\u4e2a\u7ebf\u6bb5\u6811\u7528 \n        if(l == r) { tree[i].min = b[l]; return ; }\n        int mid = (l + r) >> 1;\n        Build(lson, l, mid), Build(rson, mid + 1, r);\n        Push_up(i);\n    }\n    void Build0(int i, int l, int r) {\n        if(l == r) { tree[i].min = a[l]; return ; }\n        int mid = (l + r) >> 1;\n        Build0(lson, l, mid), Build0(rson, mid + 1, r);\n        Push_up(i);\n    }\n    void Change(int i, int l, int r, int L, int R, int k) {\n        if(L <= l && r <= R) {\n            tree[i].min = tree[i].lazy = k;\n            return ;\n        }\n        Push_down(i);\n        int mid = (l + r) >> 1;\n        if(mid >= L) Change(lson, l, mid, L, R, k);\n        if(mid < R) Change(rson, mid + 1, r, L, R, k);\n        Push_up(i);\n    }\n    int Get_min(int i, int l, int r, int L, int R) {\n        if(L <= l && r <= R) return tree[i].min;\n        Push_down(i);\n        int mid = (l + r) >> 1, ans = INF;\n        if(mid >= L) ans = min(ans, Get_min(lson, l, mid, L, R));\n        if(mid < R) ans = min(ans, Get_min(rson, mid + 1, r, L, R));\n        return ans;\n    }\n}Seg[2];\n\nint main()\n{\n    n = read(), K = read();\n    for(int i = 1; i <= n; ++i) a[i] = read();\n    Seg[0].Build0(1, 1, n); // \u5148\u5bf9\u7ed9\u5b9a\u7684\u5c0f\u5e8f\u5217\u5efa\u6811 \n    m = read();\n    for(int i = 1; i <= m; ++i) {\n        q[i].opt = read(), q[i].l = read(), q[i].r = read();\n        date[++ cnt] = q[i].l, date[++ cnt] = q[i].r;\n        if(q[i].opt == 1) q[i].val = read();\n    }\n    sort(date + 1, date + cnt + 1); date[0] = -INF;\n    for(int i = 1; i <= cnt; ++i) if(date[i] != date[i - 1]) date[++ date_num] = date[i]; // \u79bb\u6563\u5316 \n    \n    //\u4e00\u4e0b\u662f\u6784\u9020\u65b0\u5e8f\u5217b\u8fc7\u7a0b\uff08\u5373\u56fe\u4e2d\u7684\u7ea2\u8272\u5e8f\u5217 \n    for(int i = 1; i < date_num; ++i) {\n        if(date[i] % n == 0) b[++Cnt] = a[n];\n        else b[++Cnt] = a[date[i] % n];\n        pre[i] = Cnt; // \u8fdb\u884c\u7b2c\u4e8c\u6b21\u6620\u5c04\u7684\u5904\u7406 \n        if(date[i + 1] > date[i] + 1){\n            if((date[i + 1] - 1) - (date[i] + 1) >= n) { // \u538b\u7f29\u533a\u95f4\u957f\u5ea6\u8d85\u8fc7 n \u65f6 \n                b[++Cnt] = Seg[0].tree[1].min;\n                continue;\n            }\n            int l = (date[i] + 1) % n, r = (date[i + 1] - 1) % n; //\u6620\u5c04\u5230\u590d\u5236\u524d\u7684\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e \n            if(l == 0) l = n;\n            if(r == 0) r = n;\n            if(l <= r) b[++Cnt] = Seg[0].Get_min(1, 1, n, l, r); // \u5728\u4e00\u4e2a\u533a\u95f4\u5185 \n            else b[++Cnt] = min(Seg[0].Get_min(1, 1, n, 1, r), Seg[0].Get_min(1, 1, n, l, n)); // \u4e0d\u5728\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u7528\u4e24\u6bb5\u533a\u95f4\u5408\u5e76 \n        }\n    }\n    if(date[date_num] % n == 0) b[++Cnt] = a[n];\n    else b[++Cnt] = a[date[date_num] % n];\n    pre[date_num] = Cnt;\n    \n    for(int i = 1; i <= m; ++i) { \n        q[i].l = lower_bound(date + 1, date + date_num + 1, q[i].l) - date; // \u8be2\u95ee\u7684\u70b9\u5411\u79bb\u6563\u5316\u540e\u6620\u5c04 \n        q[i].r = lower_bound(date + 1, date + date_num + 1, q[i].r) - date;\n        q[i].l = pre[q[i].l], q[i].r = pre[q[i].r]; // \u5411b\u5e8f\u5217\u4e2d\u7684\u6620\u5c04 \n    }\n    Seg[1].Build(1, 1, Cnt); //\u5bf9 b\u5e8f\u5217\u5efa\u6811 \n    for(int i = 1; i <= m; ++i) { //\u76f4\u63a5\u4fee\u6539+\u67e5\u8be2\u5373\u53ef \n        if(q[i].opt == 1) Seg[1].Change(1, 1, Cnt, q[i].l, q[i].r, q[i].val);\n        else printf(\"%d\\n\", Seg[1].Get_min(1, 1, Cnt, q[i].l, q[i].r));\n    }\n    return 0;\n}\n\n```\n\n## \u603b\u7ed3\n\n\u5bf9\u4e8e\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u8fc7\u5927\u65f6\uff0c\u8003\u8651\u79bb\u6563\u5316\u53ea\u7559\u4e0b\u6709\u7528\u7684\u4fe1\u606f\u6765\u8fbe\u5230\u8282\u7ea6\u7a7a\u95f4\u7684\u76ee\u7684\u3002",
        "postTime": 1616315524,
        "uid": 230580,
        "name": "Suzt_ilymtics",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF803G Periodic RMQ Problem"
    },
    {
        "content": "[$\\Large\\texttt{CF803G}$](https://www.luogu.com.cn/problem/CF803G)\n\n\u6807\u7b7e\uff1a\u7ebf\u6bb5\u6811\u3001\u79bb\u6563\u5316\n\n~~\u53ef\u80fd\u5c31\u662f\u7801\u91cf\u5927\u4e86\u4e00\u70b9~~\n\n## \u9898\u610f\n\n~~\u8fd9\u4e48\u6e05\u695a\u4e86\u5c31\u4e0d\u4f5c\u8d58\u8ff0\u4e86QwQ~~\n\n\u5c31\u662f\u8981\u6ce8\u610f\u5b83\u7684 $\\texttt{q}$ \u5927\u5c0f\u53ea\u6709 $1e5$ \u3002\n\n## \u601d\u8def\n\n\u9762\u5bf9\u8fd9\u79cd\u9898\u76ee\uff0c\u4e32\u7684\u957f\u5ea6\u5f88\u957f\u4f46\u662f\u6709\u89c4\u5f8b\uff0c\u533a\u95f4\u4fee\u6539\u4e3a\u8d4b\u503c\u64cd\u4f5c\uff0c\u57fa\u672c\u4e0a\u90fd\u6709\u4e00\u4e2a\u5341\u5206\u5957\u8def\u7684\u901a\u89e3\uff0c\u56e0\u4e3a\u5bf9\u4e8e $1e5$ \u7684\u64cd\u4f5c\u6570\u636e\u8bbf\u95ee\u5f88\u5c11\uff0c\u64cd\u4f5c\u53ea\u8981\u8bb0\u5f55\u4e24\u4e2a\u7aef\u70b9\uff0c\u6240\u4ee5\u6709\u4e9b\u5143\u7d20\u6839\u672c\u4e0d\u4f1a\u7528\u5230\u5b83\uff0c\u628a\u5b83\u4eec\u5ffd\u89c6\u6389\u5c31\u597d\u4e86\uff0c\u53ef\u4ee5\u7528\u79bb\u6563\u5316\u4f18\u5316\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u7684\u4e32\u521d\u59cb\u5316\u65f6\u4e00\u6bb5\u4e32\u91cd\u590d\u591a\u6b21\u5f62\u6210\u7684\uff0c\u53ef\u80fd\u6709\u70b9\u96be\u79bb\u6563\u5316\uff0c\u6211\u7684\u65b9\u6cd5\u662f\u628a\u6240\u6709\u64cd\u4f5c\u4e24\u4e2a\u7aef\u70b9\u79bb\u6563\u5316\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u7aef\u70b9\u95f4\u7684\u533a\u95f4\uff08\u4e0d\u5305\u62ec\u8fd9\u4e24\u4e2a\u7aef\u70b9\uff09\u4e5f\u79bb\u6563\u5316\u6210\u4e00\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u5c31\u662f\u533a\u95f4\u4e2d\u6700\u5c0f\u7684\u6570\u3002\n\n\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\u53ef\u4ee5\u5206\u7c7b\u5f97\u5230\uff1a\n\n1. \u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\u8ddd\u79bb\u8d85\u8fc7\u4e00\u4e2a\u5e8f\u5217 $a$ \u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u76f4\u63a5\u5c06\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\u53d6\u4e3a\u5e8f\u5217a\u7684\u6700\u5c0f\u503c\u3002\n\n2. \u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\u5728\u5b8c\u6574\u7684\u4e00\u4e2a $a$ \u5e8f\u5217\u5185\uff0c\u8fd9\u91cc\u53ef\u4ee5\u628a\u5b83\u4eec\u76f8\u5bf9\u4e8ea\u5e8f\u5217\u7684\u4f4d\u7f6e\u6c42\u51fa\u6765\uff0c\u7528 $\\texttt{ST}$ \u8868\u6c42\u51fa\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n3. \u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\u8de8\u8d8a\u4e86\u4e00\u4e2a\u5e8f\u5217 $a$ \uff0c\u8fd9\u53ef\u4ee5\u628a\u4e24\u7aef\u533a\u95f4\uff08\u7aef\u70b9 $r$ \u5230\u5e8f\u5217\u5934\uff0c\u7aef\u70b9 $l$ \u5e8f\u5217\u5c3e\uff09\u7684\u6700\u5c0f\u503c\uff0c\u540c\u6837\u7528 $\\texttt{ST}$ \u8868\u505a\u5230 $O(1)$ \u67e5\u8be2\u3002\n\n\u7136\u540e\u7ef4\u62a4\u597d\u6240\u6709\u7684\u7aef\u70b9\u540e\uff0c\u5269\u4e0b\u7684\u64cd\u4f5c\u7528\u6734\u7d20\u7684\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u8fc7\u53bb\u3002\n\n\u590d\u6742\u5ea6 $\\texttt{O(\u7384\u5b66+\u53ef\u8fc7)}$\n\n\u76ee\u524d\u7684\u6700\u4f18\u89e3 $3.37ms$\n\n## \u4ee3\u7801\n\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ls n << 1\n#define rs n << 1 | 1\nconst int N = 1e5;\ninline int read()\n{\n    register int s = 0;\n    register bool neg = 0;\n    register char c = getchar();\n    for (; c < '0' || c > '9'; c = getchar())\n        neg |= (c == '-');\n    for (; c >= '0' && c <= '9'; s = s * 10 + (c ^ 48), c = getchar())\n        ;\n    return (neg ? -s : s);\n}\n\nint a, b, c, s[N + 10], p[(N << 1) + 10], top, q[(N << 2) + 10], id, f[N + 10][30];\nstruct ask\n{\n    int opt, l, r, x;\n} ask[N + 10];\nstruct Stree\n{\n    int l, r, mn;\n    bool lazy;\n} t[(N << 4) + 10];\nstruct reel_id\n{\n    int id, val;\n} o[(N << 1) + 10];\n\ninline int find(int n)\n{\n    int l = 1, r = top;\n    while (l <= r)\n    {\n        int mid = (l + r) >> 1;\n        if (o[mid].val == n)\n            return o[mid].id;\n        if (o[mid].val < n)\n            l = mid + 1;\n        else\n            r = mid - 1;\n    }\n}\n\ninline int query(int l, int r)//ST\u8868O(1)\u8be2\u95ee\n{\n    int k = log2(r - l + 1);\n    return min(f[l][k], f[r - (1 << k) + 1][k]);\n}\n\ninline void up(int n)\n{\n    t[n].mn = min(t[ls].mn, t[rs].mn);\n}\n\ninline void down(int n)\n{\n    if (!t[n].lazy)\n        return;\n    t[ls].mn = t[rs].mn = t[n].mn;\n    t[ls].lazy = t[rs].lazy = 1;\n    t[n].lazy = 0;\n}\n\ninline void build(int n, int l, int r)\n{\n    t[n].l = l;\n    t[n].r = r;\n    t[n].mn = 1e9;\n    if (l == r)\n    {\n        t[n].mn = q[l];\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(ls, l, mid);\n    build(rs, mid + 1, r);\n    up(n);\n}\n\ninline void change(int n, int l, int r, int k)\n{\n    if (l <= t[n].l && t[n].r <= r)\n    {\n        t[n].mn = k;\n        t[n].lazy = 1;\n        return;\n    }\n    down(n);\n    int mid = (t[n].l + t[n].r) >> 1;\n    if (l <= mid)\n        change(ls, l, r, k);\n    if (mid < r)\n        change(rs, l, r, k);\n    up(n);\n}\n\ninline int Query(int n, int l, int r)\n{\n    if (l <= t[n].l && t[n].r <= r)\n        return t[n].mn;\n    int mid = (t[n].l + t[n].r) >> 1, sum = 1e9;\n    down(n);\n    if (l <= mid)\n        sum = min(sum, Query(ls, l, r));\n    if (mid < r)\n        sum = min(sum, Query(rs, l, r));\n    return sum;\n}\n\nsigned main()\n{\n    a = read();\n    b = read();\n    int mn = 1e9;\n    for (int i = 1; i <= a; i++)\n        s[i] = f[i][0] = read(), mn = min(mn, s[i]);\n    for (int i = 1; i <= 25; i++)\n        for (int j = 1; j + (1 << i) - 1 <= a; j++)\n            f[j][i] = min(f[j][i - 1], f[j + (1 << (i - 1))][i - 1]);\n    c = read();\n    for (int i = 1; i <= c; i++)\n    {\n        ask[i].opt = read();\n        ask[i].l = read();\n        ask[i].r = read();\n        if (ask[i].opt == 1)\n            ask[i].x = read();\n        p[++top] = ask[i].l;\n        p[++top] = ask[i].r;\n    }\n    sort(p + 1, p + top + 1);//\u79bb\u6563\u4e0b\u8be2\u95ee\u7684\u6240\u6709\u7aef\u70b9 \n    top = unique(p + 1, p + top + 1) - p - 1;\n    for (int i = 1; i <= top; i++)\n    {\n        if (i > 1 && p[i] - p[i - 1] > 1)//\u79bb\u6563\u4e0b\u533a\u95f4 \n        {\n            int l = p[i - 1] + 1, r = p[i] - 1;\n            if (r - l + 1 >= a)\n                q[++id] = mn;\n            else\n            {\n                l = (l - 1) % a + 1;\n                r = (r - 1) % a + 1;\n                if (l <= r)\n                    q[++id] = query(l, r);\n                else\n                    q[++id] = min(query(1, r), query(l, a));\n            }\n        }\n        q[++id] = s[(p[i] - 1) % a + 1];\n        o[i].val = p[i];\n        o[i].id = id;\n    }\n    for (int i = 1; i <= c; i++)\n        ask[i].l = find(ask[i].l), ask[i].r = find(ask[i].r);//\u4fee\u6539\u4e0b\u64cd\u4f5c\u7684\u4e24\u4e2a\u7aef\u70b9 \n    build(1, 1, id);\n    for (int i = 1; i <= c; i++)\n    {\n        if (ask[i].opt == 1)\n            change(1, ask[i].l, ask[i].r, ask[i].x);\n        if (ask[i].opt == 2)\n            printf(\"%d\\n\", Query(1, ask[i].l, ask[i].r));\n    }\n    return 0;\n}\n```",
        "postTime": 1602663406,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF803G \u3010Periodic RMQ Problem\u3011"
    },
    {
        "content": "[$\\texttt{link}$](https://www.luogu.com.cn/problem/CF803G)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $b_{1\\dots n}$\uff0c\u5c06\u5176\u9996\u5c3e\u76f8\u63a5 $k$ \u6b21\u5f97\u5230\u5e8f\u5217 $a_{1\\dots nk}$\uff0c\u5728 $a$ \u4e0a\u8fdb\u884c $q$ \u6b21\u64cd\u4f5c\uff1a\n\n+ \u533a\u95f4\u63a8\u5e73\n+ \u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\n\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n,q\\le 10^5$\uff0c$1\\le k\\le10^4$\uff0c$1\\le b_i\\le10^9$\n\n## \u9898\u89e3\n\n\u53c8\u662f\u4e00\u9053 DS \u5999\u9898\u3002\n\n$a$ \u7684\u957f\u5ea6\u80fd\u5230 $10^9$\uff0c\u7528\u6734\u7d20\u7ebf\u6bb5\u6811\u505a\u65f6\u95f4\u590d\u6742\u5ea6 $O(nk\\log nk)$\uff0c\u7a7a\u95f4\u4e5f\u5230\u4e86 $O(nk)$\uff0c\u663e\u7136\u4e0d\u80fd\u63a5\u53d7\u3002\n\n\u7a7a\u95f4\u53ef\u4ee5\u52a8\u6001\u5f00\u70b9\u4f18\u5316\u81f3 $O(q\\log nk)$\uff0c\u8fd9\u4e2a\u7ed3\u6784\u770b\u4e0a\u53bb\u5c31\u5f88\u53ef\u4ee5\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u505a\u3002\n\n\u53d1\u73b0\u6bcf\u6b21\u65b0\u5efa\u8282\u70b9\u90fd\u8981\u6c42\u51fa\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u8003\u8651\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u5efa\u7684\u8282\u70b9\uff0c\u8be5\u533a\u95f4\u662f\u7531 $b$ \u6784\u6210\u7684\uff0c\u8003\u8651\u5c06\u8be5\u533a\u95f4\u7684\u6700\u5c0f\u503c\u8f6c\u5316\u5230\u5e8f\u5217 $b$ \u4e0a\u3002\n\n\u8bbe\u533a\u95f4\u4e3a $\\left[l,r\\right]$\uff0c\u4fbf\u4e8e\u5904\u7406\uff0c\u8fd9\u91cc\u4e0b\u6807\u4ece $0$ \u5f00\u59cb\uff0c\u5206\u4e09\u7c7b\u8ba8\u8bba\uff1a\n\n1. \u5f53 $r-l+1\\ge n$ \u65f6\uff0c\u6b64\u65f6\u4e00\u5b9a\u5305\u542b\u4e86\u6574\u4e2a $b$ \u5e8f\u5217\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u4e3a $\\min\\limits_{i=0}^{n-1}b_i$\u3002  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pt0sb17w.png?x-oss-process=image/resize,m_lfit,h_2000,w_2000)\n\n2. \u5f53 $r-l+1<n$ \u4e14 $\\lfloor\\frac{l}{n}\\rfloor=\\lfloor\\frac{r}{n}\\rfloor$ \u65f6\uff0c$l,r$ \u5728\u540c\u4e00 $b$ \u5e8f\u5217\u4e2d\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u4e3a $\\min\\limits_{i=l\\bmod n}^{r\\bmod n}b_i$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cysxf2zb.png?x-oss-process=image/resize,m_lfit,h_2000,w_2000)\n\n3. \u5f53 $r-l+1<n$ \u4e14 $\\lfloor\\frac{l}{n}\\rfloor\\ne\\lfloor\\frac{r}{n}\\rfloor$ \u65f6\uff0c$l,r$ \u6070\u5206\u5e03\u5728\u4e24\u4e2a $b$ \u5e8f\u5217\u4e2d\u7684\u8fde\u7eed\u6bb5\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u4e3a $\\min(\\min\\limits_{i=l\\bmod n}^{n-1}b_i,\\min\\limits_{i=0}^{r\\bmod n}b_i)$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lmj1n5l2.png?x-oss-process=image/resize,m_lfit,h_2000,w_2000)\n\n\u4e8e\u662f\u53ef\u4ee5\u5bf9 $b$ \u5f00\u4e00\u4e2a ST \u8868\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u505a\u5230 $O(1)$ \u5f00\u70b9\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q\\log nk)$\u3002  \n\n\u611f\u89c9\u5199\u4e0b\u6765\u6709\u79cd\u5206\u5757\u7684\u5473\u9053\uff0c\u6574\u4f53\u8fd8\u7b97\u5c0f\u6e05\u65b0\u3002\n\n\u987a\u4fbf\u63d0\u4e00\u5634\u6570\u7ec4\u5f00\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u4e0b\u4f20\u6807\u8bb0\u65f6\u4f1a\u5f00\u5de6\u53f3\u513f\u5b50\u7684\u70b9\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u8fd8\u6709\u4e00\u4e2a\u5e38\u6570 $2$\uff0c\u6570\u7ec4\u5927\u5c0f\u4e3a $2\\times10^5\\times\\log(10^9)\\approx6\\times10^6$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO {\n\t//read and write\n} using namespace IO;\nconst int N = 1e5 + 10, M = 6e6 + 10, L = 20;\nint n, k, q;\nnamespace RMQ {\n\tint st[L][N];\n\tvoid init() {\n\t\tfor(int i = 1; (1 << i) <= n; i++)\n\t\t\tfor(int j = 0; j + (1 << i) - 1 < n; j++)\n\t\t\t\tst[i][j] = min(st[i - 1][j], st[i - 1][j + (1 << i - 1)]);\n\t}\n\tint Min(int l, int r) {\n\t\tint len = log2(r - l + 1);\n\t\treturn min(st[len][l], st[len][r - (1 << len) + 1]);\n\t}\n} using namespace RMQ;\nnamespace SegmentTree {\n\tint rt, ls[M], rs[M], mn[M], tag[M], cnt;\n\tint newnode(int l, int r) {\n\t\t++cnt;\n\t\tif(r - l + 1 >= n) return mn[cnt] = Min(0, n - 1), cnt;\n\t\tif(l / n == r / n) return mn[cnt] = Min(l % n, r % n), cnt;\n\t\treturn mn[cnt] = min(Min(l % n, n - 1), Min(0, r % n)), cnt;\n\t}\n\tvoid pushup(int x) { mn[x] = min(mn[ls[x]], mn[rs[x]]); }\n\tvoid pushdown(int x, int l, int r) {\n\t\tint mid = l + r >> 1;\n\t\tif(!ls[x]) ls[x] = newnode(l, mid);\n\t\tif(!rs[x]) rs[x] = newnode(mid + 1, r);\n\t\tif(!tag[x]) return;\n\t\tmn[ls[x]] = mn[rs[x]] = tag[ls[x]] = tag[rs[x]] = tag[x];\n\t\ttag[x] = 0;\n\t\treturn;\n\t}\n\tvoid modify(int &x, int l, int r, int L, int R, int v) {\n\t\tif(!x) x = newnode(l, r);\n\t\tif(L <= l && r <= R) { mn[x] = tag[x] = v; return; };\n\t\tpushdown(x, l, r);\n\t\tint mid = l + r >> 1;\n\t\tif(mid >= L) modify(ls[x], l, mid, L, R, v);\n\t\tif(mid < R) modify(rs[x], mid + 1, r, L, R, v);\n\t\tpushup(x); \n\t}\n\tint query(int &x, int l, int r, int L, int R) {\n\t\tif(!x) x = newnode(l, r);\n\t\tif(L <= l && r <= R) return mn[x];\n\t\tpushdown(x, l, r);\n\t\tint mid = l + r >> 1, res = 2e9;\n\t\tif(mid >= L) res = min(res, query(ls[x], l, mid, L, R));\n\t\tif(mid < R) res = min(res, query(rs[x], mid + 1, r, L, R));\n\t\treturn res;\n\t}\n} using namespace SegmentTree;\nint main() {\n\tn = read(), k = read();\n\tfor(int i = 0; i < n; i++) st[0][i] = read();\n\tinit();\n\tq = read();\n\tint opt, l, r, x;\n\twhile(q--) {\n\t\topt = read(), l = read() - 1, r = read() - 1;\n\t\tif(opt == 1) x = read(), modify(rt, 0, n * k - 1, l, r, x);\n\t\telse write(query(rt, 0, n * k - 1, l, r)), putc('\\n');\n\t}\n\tflush();\n\treturn 0;\n}\n```",
        "postTime": 1631331134,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF803G Periodic RMQ Problem"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://codeforces.com/contest/803/problem/G)\n\n##### \u524d\u8a00\uff1a\n\nCF 2300*\uff0c\u6d1b\u8c37\u9ed1\uff0c\u6211\u6000\u7591\u6709\u4e00\u4e2a\u5728\u9a97\u6211\u3002~~\u6211\u89c9\u5f97\u662fCF.~~\n\n\u8fdc\u53e4\u65f6\u4ee3\u7684 edu \u771f\u6bd2\u7624~~\uff08\u7b49\u7b49\u73b0\u5728\u597d\u50cf\u66f4\u6bd2\u7624\uff09~~\n\n##### \u9898\u610f\uff1a\n\n\u7ed9\u5b9a $n,k$ \u548c $b=[b_1,b_2,...,b_n]$. $a$ \u662f\u6b63\u6574\u6570\u5e8f\u5217 $b$ \u4f9d\u6b21\u590d\u5236 $k$ \u904d\u5e76\u62fc\u63a5\u5728\u4e00\u8d77\u5f97\u5230\u7684\u3002\n\n\u8bf7\u652f\u6301\u5bf9 $a$ \u7684\u533a\u95f4\u8d4b\u503c\uff08\u63a8\u5e73\uff09\uff0c\u533a\u95f4 $\\min$ \u67e5\u8be2\u3002\u5171 $q$ \u6b21\u64cd\u4f5c\u3002\n\n$n,q\\le10^5,k\\le 10^4,b_i \\le 10^9$\n\n##### \u5206\u6790\uff1a\n\n\u5982\u679c\u6ca1\u6709\u590d\u5236 $k$ \u6b21\u90a3\u4e48\u8fd9\u5c06\u662f\u4e2a\u5927\u6c34\u9898\uff0c\u53ef\u60dc\u6ca1\u4e0d\u5f97\u3002\n\n\u5bb9\u6613\u60f3\u5230\u4e2d\u95f4\u6709\u5f88\u591a\u8fde\u7eed\u7684\u76f8\u540c\u7684\u5757\uff0c\u81ea\u7136\u5730\u60f3\u5230\u7c7b\u4f3c\u5206\u5757\u7684\u601d\u60f3\uff1a\u628a\u6bcf $n$ \u4e2a\u770b\u6210\u4e00\u5757\u3002\u5bf9\u4e8e\u4e00\u6b21\u9488\u5bf9\u4e8e $[l,r]$ \u7684\u4fee\u6539/\u67e5\u8be2\uff0c\u4e2d\u95f4\u90a3\u4e9b\u8fde\u7eed\u5757\u5feb\u901f\u5904\u7406\uff0c$l$ \u6240\u5728\u5757\u548c $r$ \u6240\u5728\u5757\u5355\u72ec\u5904\u7406\u3002\n\n\u770b\u4e0a\u53bb\uff0c\u5bf9\u4e8e\u4e2d\u95f4\u5757\uff0c\u5f00\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u4ee3\u8868\u6bcf\u4e00**\u5757**\u6574\u4f53\u7684\u6700\u5c0f\u503c\uff0c\u7ef4\u62a4\u82e5\u5e72\u8fde\u7eed\u5757\u7684\u6700\u5c0f\u503c\u3002\u5bf9\u4e8e\u6563\u5757\uff0c\u5f00 $k$ \u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u7ebf\u6bb5\u6811\uff0c\u7b2c $i$ \u4e2a\u7ebf\u6bb5\u6811\u91cc\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u7b2c $i$ \u5757\u91cc\u7684\u4e00**\u4e2a**\u503c\uff0c\u7ef4\u62a4\u5757\u5185\u8fde\u7eed\u6bb5\u7684\u6700\u5c0f\u503c\u3002\u7136\u540e\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u4f46\u662f\u5f88\u5feb\u95ee\u9898\u63a5\u8e35\u800c\u81f3\uff1a\n\n- \u5f00 $k$ \u4e2a\u5927\u5c0f\u4e3a $n$ \u7684\u7ebf\u6bb5\u6811\u663e\u7136 MLE\n\n\u9488\u5bf9\u8fd9\u70b9\uff0c\u5bb9\u6613\u60f3\u5230\u52a8\u6001\u5f00\u70b9\u3002\u4f46\u662f\u8fd9\u9898\u521d\u59cb\u4e0d\u662f\u5168\u4e3a $0$. \u65e0\u6cd5\u4ece\u96f6\u5f00\u59cb\u52a8\u6001\u5f00\u70b9\u3002\u5b9e\u9645\u4e0a\u4f60\u53d1\u73b0\u8fd9\u53c8\u6709\u70b9\u50cf\u4e3b\u5e2d\u6811\u91cc\u7684\u52a8\u6001\u5f00\u70b9\uff0c\u5148\u5199\u4e00\u9897\u521d\u59cb\u7ebf\u6bb5\u6811\u6839\u4e3a $root_0$\u7ef4\u62a4 $b_1,...,b_n$\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u771f\u6b63\u8981\u7528\u5230\u7684\u7ebf\u6bb5\u6811\uff0c$root_i$ \u590d\u5236 $root_0$ \u7684\u4fe1\u606f\uff08\u5373\u53ea\u6709\u6700\u4e0a\u9762\u7684\u6839\u4e0d\u540c\uff09\u3002\u7136\u540e\u8fd9\u91cc\u663e\u7136\u4e0d\u80fd\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u6211\u4eec\u4e0d\u5f97\u5df2\u5728\u6bcf\u6b21 pushdown \u7684\u65f6\u5019\u65b0\u5efa\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\uff08\u5f53\u7136\u8fd8\u662f\u590d\u5236\u539f\u6765\u513f\u5b50\u8282\u70b9\u7684\u4fe1\u606f\uff09\u3002\u6765\u5199\u8fd9\u9898\u7684~~\u9664\u4e86\u6211~~\u5e94\u8be5\u90fd\u5df2\u7ecf\u4f1a\u4e3b\u5e2d\u6811\u4e86\uff0c\u6240\u4ee5\u7406\u89e3\u8d77\u6765\u5e76\u4e0d\u96be\uff08\u4e5f\u4e0d\u592a\u597d\u89e3\u91ca\uff09\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u6bcf\u6b21\u8fd8\u662f\u4f1a\u591a $O(\\log_2 n)$ \u7ea7\u522b\u7684\u8282\u70b9\u53ea\u4e0d\u8fc7\u5e38\u6570\u6709\u70b9\u8fc7\u5927\u3002\u6240\u4ee5\u6700\u540e\u8fd9\u91cc\u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u90e8\u5206\u8282\u70b9\u8981\u8bbe\u5230 $10^7$ \u7ea7\u522b\u3002\n\n- \u6563\u5757\u53ef\u80fd\u5728\u540e\u9762\u7684\u64cd\u4f5c\u91cc\u4f1a\u88ab\u5f53\u6210\u4e2d\u95f4\u5757\u8986\u76d6\uff0c\u9700\u8981\u66f4\u65b0\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u91cc\u7684\u4fe1\u606f\u3002\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0d\u96be\u60f3\u5230\u518d\u5f00\u4e00\u9897\u957f\u5ea6\u4e3a $k$ \u7684\u7ebf\u6bb5\u6811\uff08\u666e\u901a\u7684\u5c31\u884c\uff09\u3002\u7ef4\u62a4\u6bcf\u4e00**\u5757**\u7684\u6807\u8bb0\u3002\u6807\u8bb0\u4e3a $k$ \u5219\u4ee3\u8868\u4e00\u6574\u5757\u88ab\u8986\u76d6\u4e0a\u4e86 $k$\uff0c\u6807\u8bb0\u4e3a $\\infty$ \u4ee3\u8868\u8fd9\u4e00\u5757\u4e0a\u9762\u6709\u82e5\u5e72\u6b21\u6563\u5757\u4fee\u6539\u3002\u6bcf\u6b21\u9700\u8981\u4fee\u6539/\u67e5\u8be2\u6563\u5757\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5148\u770b\u5176\u6807\u8bb0\u662f\u5426\u4e0d\u4e3a $\\infty$\uff0c\u5982\u679c\u4e0d\u4e3a\uff0c\u5219\u5728\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5185\u5c06\u8fd9\u4e00\u5757\u5168\u90e8\u4fee\u6539\u4e3a $k$\uff08\u64cd\u4f5c\u4f17\u591a\u4e5f\u662f\u5bfc\u81f4\u7a7a\u95f4\u5e38\u6570\u5927\u7684\u4e00\u65b9\u9762\u539f\u56e0\uff09\uff0c\u540c\u65f6\u91cd\u65b0\u5c06\u5176\u6807\u5fd7\u7f6e\u4e3a $\\infty$.\n\n\u8fd9\u6837\u5c31\u5728 $O(m \\log n)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u95ee\u9898\u3002\n\n~~\u6211\u600e\u4e48\u77e5\u9053\u5e38\u6570\u5230\u5e95\u6709\u591a\u5927~~\n\n~~4.32kb\u4ee3\u7801\u503e\u60c5\u732e\u4e0a~~\n\n ```C++\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(ll i=(a);i<=(b);i++)\n#define per(i,a,b) for(ll i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define Max(a,b) (a>b?a:b)\n#define Min(a,b) (a<b?a:b)\n#define next Cry_For_theMoon\n#define il inline\n#define pb(x) push_back(x)\n#define is(x) insert(x)\n#define sit set<int>::iterator\n#define mapit map<int,int>::iterator\n#define pi pair<int,int>\n#define ppi pair<int,pi>\n#define pp pair<pi,pi>\n#define fr first\n#define se second\n#define vit vector<int>::iterator\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef double db;\nusing namespace std;\nconst int MAXN=1e5+10,MAXK=1e4+10,MAXM=1e7+10,INF=2e9,SIGN=2e9;\n\nstruct DynamicSegmentTree{\n\tint lc[MAXM],rc[MAXM],val[MAXM],tag[MAXM],tot;\n\til int node(){return ++tot;}\n\til void copy(int from,int to){lc[to]=lc[from],rc[to]=rc[from],val[to]=val[from],tag[to]=tag[from];}\n\tvoid pushup(int x){val[x]=min(val[lc[x]],val[rc[x]]);}\n\tvoid pushdown(int x){\n\t\t//\u65b0\u5efa\u8282\u70b9 \n\t\tint tmp;\n\t\ttmp=lc[x];lc[x]=node();copy(tmp,lc[x]);\n\t\ttmp=rc[x];rc[x]=node();copy(tmp,rc[x]);\n\t\t//\u4f20\u9012\u6807\u8bb0\n\t\tif(!tag[x])return;\n\t\tval[lc[x]]=val[rc[x]]=tag[x];tag[lc[x]]=tag[rc[x]]=tag[x];tag[x]=0; \n\t}\n\tvoid update(int x,int l,int r,int ql,int qr,int v){\n\t\tif(ql<=l && qr>=r){val[x]=tag[x]=v;return;}\n\t\tpushdown(x);\n\t\tint mid=(l+r)>>1;\n\t\tif(ql<=mid)update(lc[x],l,mid,ql,qr,v);\n\t\tif(qr>mid)update(rc[x],mid+1,r,ql,qr,v);\n\t\tpushup(x);\n\t}\n\tint query(int x,int l,int r,int ql,int qr){\n\t\tif(ql<=l && qr>=r){return val[x];}\n\t\tpushdown(x);\n\t\tint mid=(l+r)>>1,ret=INF;\n\t\tif(ql<=mid)ret=min(ret,query(lc[x],l,mid,ql,qr));\n\t\tif(qr>mid)ret=min(ret,query(rc[x],mid+1,r,ql,qr));\n\t\treturn ret;\n\t}\n}small; //\u5bf9\u5757\u5185\u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4 \nstruct SegmentTree{\n\tint lc[MAXK<<2],rc[MAXK<<2],tag[MAXK<<2],val[MAXK<<2];\n\tvoid pushup(int x){val[x]=min(val[lc[x]],val[rc[x]]);}\n\tvoid pushdown(int x){if(!tag[x])return;\n\t\tval[lc[x]]=val[rc[x]]=tag[lc[x]]=tag[rc[x]]=tag[x];\n\t\ttag[x]=0;\n\t}\n\tvoid build(int x,int l,int r){\n\t\tif(l==r)return;\n\t\tint mid=(l+r)>>1;\n\t\tlc[x]=x<<1;rc[x]=lc[x]|1;\n\t\tbuild(lc[x],l,mid);build(rc[x],mid+1,r);\n\t}\n\tvoid update(int x,int l,int r,int ql,int qr,int v){\n\t\tif(ql<=l && qr>=r){val[x]=tag[x]=v;return;}\n\t\tpushdown(x);\n\t\tint mid=(l+r)>>1;\n\t\tif(ql<=mid)update(lc[x],l,mid,ql,qr,v);\n\t\tif(qr>mid)update(rc[x],mid+1,r,ql,qr,v);\n\t\tpushup(x);\n\t}\n\tint query(int x,int l,int r,int ql,int qr){\n\t\tif(ql<=l && qr>=r){return val[x];}\n\t\tpushdown(x);\n\t\tint mid=(l+r)>>1,ret=INF;\n\t\tif(ql<=mid)ret=min(ret,query(lc[x],l,mid,ql,qr));\n\t\tif(qr>mid)ret=min(ret,query(rc[x],mid+1,r,ql,qr));\n\t\treturn ret;\n\t}\n}big,tag; //\u5bf9\u5757\u6574\u4f53\u7684\u7ef4\u62a4\u548c\u5757\u7684\u6807\u8bb0\u7528\u666e\u901a\u7ebf\u6bb5\u6811 \nint n,k,b[MAXN],q,op,l,r,x;\nint root[MAXK],initval=INF;\nvoid update(int x,int l,int r,int val=-1){\n\t//check\n\tint v=tag.query(1,1,k,x,x);\n\tif(v!=SIGN){\n\t\ttag.update(1,1,k,x,x,SIGN);\n\t\tbig.update(1,1,k,x,x,v);\n\t\tsmall.update(root[x],1,n,1,n,v);\n\t}\n\tif(val==-1)return;\n\t//cover\n\tsmall.update(root[x],1,n,l,r,val);\n\tv=small.query(root[x],1,n,1,n);\n\tbig.update(1,1,k,x,x,v);\n}\nint main(){\n\tsmall.val[0]=INF;\n\tscanf(\"%d%d\",&n,&k);\n\trep(i,1,n){\n\t\tscanf(\"%d\",&b[i]);initval=min(initval,b[i]);\n\t}\n\tbig.build(1,1,k);tag.build(1,1,k);\n\ttag.update(1,1,k,1,k,SIGN); //\u5f00\u59cb\u65f6\u90fd\u672a\u88ab\u8986\u76d6\u4e0a\u6807\u8bb0\n\tbig.update(1,1,k,1,k,initval); //\u6bcf\u4e00\u5757\u7684\u521d\u59cb\u6700\u5c0f\u503c \n\troot[0]=small.node();\n\trep(i,1,n){small.update(root[0],1,n,i,i,b[i]);}\n\trep(i,1,k){\n\t\troot[i]=small.node();\n\t\tsmall.copy(root[0],root[i]);\n\t}\n\tscanf(\"%d\",&q);\n\t//\u7ebf\u6bb5\u6811\u4f18\u5316\u5206\u5757(???) \n\trep(i,1,q){\n\t\tscanf(\"%d%d%d\",&op,&l,&r);\n\t\tint L=(l+n-1)/n,R=(r+n-1)/n,ans=INF; //l,r\u6240\u5728\u5927\u5757\n\t\t//\u4e24\u8fb9\u5757\u66b4\u529b\u4fee\u6539 \n\t\tif(op==1){scanf(\"%d\",&x);\n\t\t\tif(L+1<=R-1){\n\t\t\t\tbig.update(1,1,k,L+1,R-1,x);\n\t\t\t\ttag.update(1,1,k,L+1,R-1,x);\n\t\t\t}\n\t\t\tif(L==R){ \n\t\t\t\tupdate(L,(l-1)%n+1,(r-1)%n+1,x);\n\t\t\t}else{\n\t\t\t\tupdate(L,(l-1)%n+1,n,x); \n\t\t\t\tupdate(R,1,(r-1)%n+1,x);\n\t\t\t}\n\t\t}else{\n\t\t\tif(L+1<=R-1){ans=min(ans,big.query(1,1,k,L+1,R-1));}\n\t\t\tif(L==R){\n\t\t\t\tupdate(L,(l-1)%n+1,(r-1)%n+1);\n\t\t\t\tans=min(ans,small.query(root[L],1,n,(l-1)%n+1,(r-1)%n+1));\n\t\t\t}else{\n\t\t\t\tupdate(L,(l-1)%n+1,n);\n\t\t\t\tans=min(ans,small.query(root[L],1,n,(l-1)%n+1,n));\n\t\t\t\tupdate(R,1,(r-1)%n+1);\t\n\t\t\t\tans=min(ans,small.query(root[R],1,n,1,(r-1)%n+1));\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n ```\n\n",
        "postTime": 1624800230,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u3010CF809G\u3011Periodic RMQ Problem"
    }
]