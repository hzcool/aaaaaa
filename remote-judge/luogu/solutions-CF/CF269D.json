[
    {
        "content": "**\u9898\u610f** : \u7ed9\u51fa\u82e5\u5e72\u6761\u6c34\u5e73\u7ebf\u6bb5\uff0c\u5f62\u5982 $(l_i,h_i)\\leftrightarrow(r_i,h_i)$\u3002\n\n\u6b64\u5916\uff0c\u8fd8\u6709\u4e24\u6761\u65e0\u9650\u5ef6\u4f38\u7684\u7ebf\u6bb5\uff0c\u4e00\u6761\u5728 $y=0$ \uff0c\u53e6\u4e00\u6761\u5728 $y=\\infty$\u3002\n\n\u82e5\u4e24\u6761\u7ebf\u6bb5 $i,j$ \u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff0c\u5219\u5728\u56fe\u4e2d\u8fde\u63a5\u6709\u5411\u8fb9 $i\\rightarrow j$ \u3002\n\n- $[l_i,r_i)\u2229[l_j,r_j)\\neq \\varnothing$ \uff0c\u5373\u4e24\u8005\u7684\u6295\u5f71\u6709\u4ea4\u3002\n\n- $h_i>h_j$\n\n- \u4e0d\u5b58\u5728 $k$ \u4f7f\u5f97\u6709\u5e8f\u4e8c\u5143\u7ec4 $(i,k)$ \u4e0e $(k,j)$ \u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u3002\n\n\u8fb9\u6743\u4e3a ${\\rm len}\\big([l_i,r_i)\u2229[l_j,r_j)\\big)=\\min(r_i,r_j)-\\max(l_i,l_j)$\u3002\n\n\u95ee\u4ece $y=\\infty$ \u5230 $y=0$ \u7684\u6700\u5c0f\u74f6\u9888\u8def\uff0c\u5373\u6700\u5c0f\u8fb9\u6743\u6700\u5927\u7684\u8def\u5f84\u3002\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u8fb9\u6743\u3002\n\n\u4fdd\u8bc1\u5404\u4e2a\u7ebf\u6bb5\u6ca1\u6709\u4ea4\u70b9\u3002\n\n$n\\leq 10^5$ \uff0c\u65f6\u9650$\\texttt{2s}$\u3002\n\n------------\n\n5min \u80e1\u51fa\u6765\uff0c\u592a\u611f\u52a8\u4e86\u2026\u2026\n\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u8be5\u56fe\u662f\u4e2a DAG \uff0c\u4e8e\u662f\u5728 DAG \u4e0a\u8fdb\u884c DP \u6c42\u6700\u5c0f\u74f6\u9888\u8def\uff0c\u590d\u6742\u5ea6\u5373\u4e3a $O(n^2)$\u3002\n\n\u8003\u8651\u6570\u636e\u7ed3\u6784\u4f18\u5316\u3002\n\n\u5c06\u6240\u6709\u7ebf\u6bb5\u6309\u7167 $h$ \u4ece\u4f4e\u5230\u9ad8\u6392\u5e8f\uff0c\u9010\u4e2a\u8fdb\u884c\u8f6c\u79fb\u3002\uff08\u8fd9\u6355\u6349\u4e86\u8be5 DAG \u7684\u4e00\u79cd\u62d3\u6251\u5e8f\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\uff0c\u5176**\u53ef\u80fd\u7684**\u8f6c\u79fb\u524d\u9a71\u4e3a \uff1a \u4e0b\u65b9\u6240\u6709\u7ebf\u6bb5\u7684\u4e0a\u5305\u7edc\u7ebf\u4e2d\uff0c\u5728\u81ea\u5df1\u6295\u5f71\u4e2d\u7684\u90e8\u5206\u3002\n\n\u5982\u56fe \uff0c\u84dd\u8272\u63cf\u8fb9\u4e3a\u53ef\u80fd\u8f6c\u79fb\u7684\u7ebf\u6bb5 \uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pqz3l7k1.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6b64\u540e\u8fd9\u4e9b\u84dd\u8272\u90e8\u5206\u5c31\u88ab\u65b0\u52a0\u5165\u7684\u7ebf\u6bb5\u8986\u76d6\u4e86\u3002\u7ef4\u62a4\u4e0a\u5305\u7edc\u7ebf\u7b49\u4ef7\u4e8e ODT \uff0c\u6240\u4ee5\u6709\u7ed3\u8bba \uff1a \u6bcf\u6b21\u8f6c\u79fb\u6d89\u53ca\u5230\u7684\u5019\u9009\u7ebf\u6bb5\u7684\u6761\u6570\u548c\u662f $O(n)$ \u7684\u3002\n\n\u5728\u6309\u987a\u5e8f\u53d6\u51fa\u5404\u4e2a\u5019\u9009\u7ebf\u6bb5\u540e\uff0c\u518d\u7528\u6761\u4ef6 \u2462 \u9664\u53bb\u4e0d\u5408\u6cd5\u7684\u7ebf\u6bb5\u3002\n\n\u5229\u7528\u4e0a\u5305\u7edc\u7ebf\u7684\u6027\u8d28\u4e0d\u96be\u8bc1\u660e\uff0c\u6bcf\u4e2a\u5019\u9009\u7ebf\u6bb5\u53ea\u9700\u8981\u68c0\u67e5\u5de6\u53f3\u4e24\u4e2a\u7ebf\u6bb5\u662f\u5426\u4f1a\u5bfc\u81f4\u81ea\u5df1\u4e0d\u5408\u6cd5\u3002\n\n\u8f6c\u79fb\u65f6\u66b4\u529b\u5373\u53ef\u3002\n\nODT \u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216\u5e73\u8861\u6811\u5b9e\u73b0\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<set>\n#define MaxN 105000\nusing namespace std;\nconst int INF=1000000001;\nstruct Data{int l,r,h;}b[MaxN];\nbool cmp(const Data &A,const Data &B)\n{return A.h<B.h;}\nstruct Seg{\n  int l,p;\n  bool operator < (const Seg &B) const\n  {return l<B.l;}\n}st[MaxN<<1];\nset<Seg> s;\nint dp[MaxN];\nbool chk(int u,int v)\n{return b[u].h>b[v].h&&min(b[u].r,b[v].r)>max(b[u].l,b[v].l);}\nvoid solve(int l,int r,int p)\n{\n  set<Seg>::iterator it=s.upper_bound((Seg){l,0});\n  it--;\n  int tn=0;\n  for (;it!=s.end()&&it->l<r;it++)st[++tn]=*it;\n  if (it!=s.end()&&it->l>r)s.insert((Seg){r,st[tn].p});\n  for (int i=st[1].l<l ? 2: 1;i<=tn;i++)s.erase(st[i]);\n  int top=0;\n  for (int i=1;i<=tn;i++){\n    int u=st[i].p;\n    if (i>1&&chk(st[i-1].p,st[i].p))continue;\n    if (i<tn&&chk(st[i+1].p,st[i].p))continue;\n    dp[p]=max(dp[p],min(min(r,b[st[i].p].r)-max(l,b[st[i].p].l),dp[st[i].p]));\n  }s.insert((Seg){l,p});\n}\nint n;\nint main()\n{\n  scanf(\"%d%*d\",&n);\n  for (int i=1;i<=n;i++)\n    scanf(\"%d%d%d\",&b[i].h,&b[i].l,&b[i].r);\n  b[++n]=(Data){-INF,INF,INF};\n  sort(b+1,b+n+1,cmp);\n  b[0]=(Data){-INF,INF,0};\n  s.insert((Seg){-INF,0});\n  s.insert((Seg){INF,-1});\n  dp[0]=INF<<1;\n  for (int i=1;i<=n;i++)\n    solve(b[i].l,b[i].r,i);\n  printf(\"%d\",dp[n]);\n  return 0;\n}\n```",
        "postTime": 1615640358,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF269D \u3010Maximum Waterfall\u3011"
    }
]