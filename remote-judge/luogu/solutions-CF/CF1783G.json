[
    {
        "content": "#### \u9898\u9762\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\uff0c\u7b2c $i$ \u4e2a\u70b9\u6709\u70b9\u6743 $a_i$ \u7684\u6811\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$ \u5b9a\u4e49\u504f\u5fc3\u8ddd $e(u) = \\max\\{ dis(u, v) + a_v\\}$\uff0c\u5176\u4e2d $dis(u, v)$ \u8868\u793a\u4e24\u70b9\u5728\u6811\u4e0a\u7684\u8ddd\u79bb\u3002\u5b9a\u4e49\u534a\u5f84 $r = \\min\\{e(u)\\}$\u3002\n\n$m$ \u6b21\u5355\u70b9\u4fee\u6539\uff0c\u6bcf\u6b21\u4fee\u6539\u540e\u8be2\u95ee $r$\u3002\n\n$1 \\leqslant n \\leqslant 2 \\times 10^5, 1 \\leqslant m \\leqslant 10^5$\u3002\n\n#### \u9898\u89e3\n\n\u9996\u5148\u53d1\u73b0\u534a\u5f84\u4e0d\u662f\u5f88\u597d\u505a\uff0c\u4f46\u662f\u76f4\u5f84\u770b\u4e0a\u53bb\u5c31\u5f88\u6709\u5bf9\u79f0\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u8003\u8651\u6c42\u76f4\u5f84\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f $nd(u, v) = dis(u, v) + a_u + a_v, d = \\max\\{nd(x, y)\\}$\u3002\n\n\u8fd9\u4e2a $d$ \u5c31\u76f8\u5f53\u4e8e\uff0c\u5728\u539f\u6811\u7684\u57fa\u7840\u4e0a\uff0c\u6bcf\u4e2a\u70b9\u9644\u5e26\u4e86\u4e24\u4e2a\u957f\u5ea6\u4e3a $a_i$ \u7684\u94fe\uff08\u8fd9\u91cc\u6302\u4e24\u6761\u7684\u610f\u4e49\u662f\u8981\u6ee1\u8db3 $nd(u, u) = 2a_u$\uff09\uff0c\u5f97\u5230\u7684\u65b0\u6811\u7684\u76f4\u5f84\uff0c\u8fd9\u79cd\u5728\u4e00\u4e2a\u6b63\u5e38\u7684\u6811\u4e0a\u7684\u76f4\u5f84\u5f80\u5f80\u80fd\u5e26\u6765\u5f88\u591a\u4f18\u79c0\u7684\u6027\u8d28\u3002\n\n\u5206\u6790 $d$ \u548c $r$ \u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8003\u8651\u65b0\u6811\u7684\u76f4\u5f84\u4e2d\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u4e2d\u70b9 $mid$ \u5728\u539f\u6811\u4e0a\uff0c\u6839\u636e\u76f4\u5f84\u4e2d\u70b9\u7684\u6027\u8d28\u6709 $r = e(mid) = \\lceil \\frac{d}{2} \\rceil$\u3002\u5426\u5219\u6211\u4eec\u5c31\u53d6\u4e0d\u5230\u8fd9\u4e2a $mid$\uff0c\u90a3\u6b64\u65f6\u8003\u8651\u8fd9\u4e00\u6761\u76f4\u5f84\u5bf9\u5e94\u7684\u539f\u6811\u4e0a\u7684\u8def\u5f84 $(u, v)$\uff0c\u4e5f\u5c31\u662f $d = nd(u, v)$\uff0c\u4e0d\u59a8\u8bbe $mid$ \u5728 $u$ \u6240\u5bf9\u5e94\u7684\u94fe\u4e0a\uff0c\u5219\u6709 $e(u) = a_u$\uff0c\u800c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5176\u4ed6\u7684\u70b9 $x$, \u6709 $e(x) \\geqslant dis(x, u) + a_u > a_u = e(u)$\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u51b5\u4e0b $r = e(u)$\u3002\u53e6\u5916\u6211\u5199\u5b8c\u4ee3\u7801\u624d\u53d1\u73b0\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0d\u53ef\u80fd\u53d1\u751f\uff0c\u56e0\u4e3a\u5982\u679c\u662f\u8fd9\u6837\u4f1a\u6709 $d = nd(u, u)$\u3002\n\n\u901a\u8fc7\u521a\u624d\u7684\u5206\u6790\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u80fd\u7ef4\u62a4\u65b0\u6811\u7684\u76f4\u5f84\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u76f4\u5f84\u5bf9\u5e94\u7684\u539f\u6811\u4e0a\u7684\u7aef\u70b9\uff0c\u6211\u4eec\u5c31\u80fd\u8f7b\u677e\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u7ed3\u8bba\u662f\uff0c\u5982\u679c\u7528\u4e00\u6761\u8fb9\u5c06\u4e24\u68f5\u6811\u8fde\u63a5\uff0c\u5219\u65b0\u76f4\u5f84\u7aef\u70b9\u4e00\u5b9a\u90fd\u6765\u6e90\u4e8e\u65e7\u7684\u56db\u4e2a\u76f4\u5f84\u7aef\u70b9\u3002\u5b9e\u9645\u4e0a\u6709\u4e00\u4e2a\u66f4\u5f3a\u7684\u7ed3\u8bba\uff1a\u5728\u540c\u4e00\u68f5\u6811\u4e0a\u7684\u4e24\u4e2a\u865a\u6811\u53d6\u5e76\uff0c\u65b0\u7684\u76f4\u5f84\u7aef\u70b9\u540c\u6837\u6765\u6e90\u4e8e\u65e7\u7684\u56db\u4e2a\u76f4\u5f84\u7aef\u70b9\u3002\n\n\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff0c\u5982\u679c\u65b0\u76f4\u5f84\u7aef\u70b9\u90fd\u6765\u6e90\u4e8e\u65e7\u7684\u540c\u4e00\u68f5\u865a\u6811\uff0c\u5219\u7ed3\u8bba\u663e\u7136\u6210\u7acb\u3002\n\n\u5982\u679c\u6765\u6e90\u4e8e\u4e0d\u540c\u7684\u865a\u6811\uff0c\u90a3\u4e48\u5047\u8bbe\u65b0\u76f4\u5f84 $(u, v)$ \u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u5b83\u4eec\u5206\u522b\u6765\u81ea\u539f\u865a\u6811 $A$ \u548c $B$\u3002\u5219\u8def\u5f84 $(u, v)$ \u4e00\u5b9a\u662f\u7531\u4e00\u6bb5\u6765\u81ea\u4e8e $A$ \u7684\u8def\u5f84\u4e0e\u4e00\u6bb5\u6765\u81ea\u4e8e $B$ \u7684\u8def\u5f84\u5e76\u8d77\u6765\u7684\uff0c\u4e0d\u7136\u56fe\u5c31\u4e0d\u662f\u6811\u4e86\u3002\n\n\u6b64\u65f6\u8003\u8651\u8ddd\u79bb $v$ \u6700\u8fdc\u7684\u5728\u8def\u5f84 $(u, v)$ \u4e0a\u4e14\u5728\u865a\u6811 $B$ \u91cc\u9762\u7684\u70b9 $x$\uff0c\u90a3\u4e48\u539f\u672c\u865a\u6811 $B$ \u7684\u4e24\u4e2a\u76f4\u5f84\u7aef\u70b9 $a, b$ \u4e00\u5b9a\u6709\u4e00\u4e2a\u8ddd\u79bb $x$ \u4e0d\u5c11\u4e8e $v$ \u5230 $x$ \u7684\u8ddd\u79bb\uff0c\u800c\u4e14\u8def\u5f84\u4e0d\u4f1a\u7ecf\u8fc7 $(u, x)$\uff08\u8fd9\u6761\u8def\u5f84\u5b8c\u5168\u4e0d\u5728 $B$ \u91cc\u9762\uff09\u3002$u$ \u4e5f\u53ef\u4ee5\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u8c03\u6574\u3002\u56e0\u6b64\u53d1\u73b0 $(u, v)$ \u6839\u672c\u4e0d\u662f\u76f4\u5f84\uff0c\u51fa\u73b0\u77db\u76fe\uff0c\u5047\u8bbe\u4e0d\u6210\u7acb\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5\u4efb\u610f\u987a\u5e8f\u5408\u5e76\u6bcf\u4e2a\u70b9\uff0c\u5e76\u4e14\u9700\u8981\u5b58\u4e0b\u6765\u7684\u4fe1\u606f\u91cf\u662f\u975e\u5e38\u5c11\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4e00\u4e2a\u8282\u70b9\u5b58\u50a8\u7f16\u53f7\u5728 $[l, r]$ \u5185\u7684\u70b9\uff08\u4ee5\u53ca\u5b83\u4eec\u5e26\u7740\u7684\u94fe\uff09\u7ec4\u6210\u7684\u865a\u6811\u7684\u76f4\u5f84\u957f\u5ea6\u53ca\u5176\u7aef\u70b9\u3002\n\n\u6bcf\u4e00\u6b21\u5408\u5e76\u9700\u8981 $O(1)$ \u6b21\u6c42\u6811\u4e0a\u4e24\u70b9\u8ddd\u79bb\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 $O(1)$ \u6216 $O(\\log n)$ \u7684\u6c42 lca \u6765\u5b9e\u73b0\u3002\n\n\u6839\u636e\u6c42 lca \u65b9\u5f0f\u7684\u4e0d\u540c\uff0c\u6700\u7ec8\u590d\u6742\u5ea6\u662f $O(n \\log n)$ \u6216\u8005 $O(n \\log^2 n)$\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f $O(n \\log n) - O(1)$ \u6c42 lca\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define FILEIO(filename) (freopen(filename \".in\", \"r\", stdin), freopen(filename \".out\", \"w\", stdout))\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int N = 200005;\nint n, m, val[N];\nstruct Edge\n{\n    int to, nxt;\n} E[N << 1];\nint head[N], tot;\ninline void add(int f, int t)\n{\n    E[++tot] = {t, head[f]}, head[f] = tot;\n    return;\n}\nint dep[N], dfn[N], tt, lg[N << 1], euler[N << 1], st[N << 1][20];\nvoid dfs(int x, int from)\n{\n    dep[x] = dep[from] + 1, euler[dfn[x] = ++tt] = x;\n    for (int i = head[x]; i;i = E[i].nxt)\n    {\n        int y = E[i].to;\n        if(y == from)\n            continue;\n        dfs(y, x), euler[++tt] = x;\n    }\n    return;\n}\ninline int depmin(int x, int y)\n{\n    return dep[x] <= dep[y] ? x : y;\n}\ninline void st_init(void)\n{\n    for (int i = 1; i <= tt;++i)\n        lg[i] = lg[i >> 1] + 1;\n    for (int i = 1; i <= tt;++i)\n        st[i][0] = euler[i];\n    for (int k = 1; k < lg[tt];++k)\n        for (int i = 1; i + (1 << k) - 1 <= tt;++i)\n            st[i][k] = depmin(st[i][k - 1], st[i + (1 << (k - 1))][k - 1]);\n    return;\n}\ninline int query(int l, int r)\n{\n    int k = lg[r - l + 1] - 1;\n    return depmin(st[l][k], st[r - (1 << k) + 1][k]);\n}\ninline int lca(int x, int y)\n{\n    x = dfn[x], y = dfn[y];\n    if(x > y)\n        std::swap(x, y);\n    return query(x, y);\n}\ninline ll dis(int x, int y)\n{\n    int f = lca(x, y);\n    return dep[x] + dep[y] - 2 * dep[f];\n}\nstruct Info\n{\n    int x, y;\n    ll len;\n    Info(void)\n    {\n        x = y = len = 0;\n        return;\n    }\n    Info(int _x, int _y)\n    {\n        x = _x, y = _y, len = dis(x, y) + val[x] + val[y];\n        return;\n    }\n    inline bool operator<(Info b) const\n    {\n        return len < b.len;\n    }\n};\ninline Info merge(Info a, Info b)\n{\n    Info p[6] = {a, b, Info(a.x, b.x), Info(a.x, b.y), Info(a.y, b.x), Info(a.y, b.y)};\n    return *std::max_element(p, p + 6);\n}\nstruct SgT\n{\n    Info t[N << 2];\n    inline int ls(int x)\n    {\n        return x << 1;\n    }\n    inline int rs(int x)\n    {\n        return x << 1 | 1;\n    }\n    inline void pushup(int x)\n    {\n        t[x] = merge(t[ls(x)], t[rs(x)]);\n        return;\n    }\n    void build(int x, int l, int r)\n    {\n        if(l == r)\n            return t[x] = Info(l, l), void(0);\n        int mid = (l + r) >> 1;\n        build(ls(x), l, mid), build(rs(x), mid + 1, r);\n        pushup(x);\n        return;\n    }\n    void update(int x, int l, int r, int p)\n    {\n        if(l == r)\n            return t[x] = Info(p, p), void(0);\n        int mid = (l + r) >> 1;\n        if(p <= mid)\n            update(ls(x), l, mid, p);\n        else\n            update(rs(x), mid + 1, r, p);\n        pushup(x);\n        return;\n    }\n    inline ll query(void)\n    {\n        return std::max<ll>((t[1].len + 1) / 2, std::max(val[t[1].x], val[t[1].y]));\n    }\n} T;\nint main(void)\n{\n    scanf(\"%d\", &n);\n    for (int i = 1;i <= n;++i)\n        scanf(\"%d\", val + i);\n    for (int i = 1, u, v; i < n;++i)\n        scanf(\"%d%d\", &u, &v), add(u, v), add(v, u);\n    dfs(1, 0), st_init(), T.build(1, 1, n);\n    scanf(\"%d\", &m);\n    for (int i = 1, x, y; i <= m;++i)\n    {\n        scanf(\"%d%d\", &x, &y);\n        val[x] = y;\n        T.update(1, 1, n, x);\n        printf(\"%lld\\n\", T.query());\n    }\n    return 0;\n}\n```",
        "postTime": 1674107695,
        "uid": 244204,
        "name": "namelessgugugu",
        "ccfLevel": 9,
        "title": "CF1783G \u9898\u89e3"
    },
    {
        "content": "CF1783G Weighed Tree Radius \u9898\u89e3\u3002\n\n\u53d1\u73b0 $w$ \u7684\u5b9a\u4e49\u5177\u6709\u65b9\u5411\u6027\uff0c\u8fd9\u6837\u5176\u5b9e\u4e0d\u5229\u4e8e\u5206\u6790\u3002\n\n\u8003\u8651\u91cd\u5b9a\u4e49\u4e00\u79cd $w$ \u4e3a $w'(x,y)=a_x+a_y+d(x,y)$\u3002\n\n\u636e\u6b64\u53ef\u4ee5\u5b9a\u4e49\u4e00\u9897\u6811\u7684\u76f4\u5f84\u4e3a\u6700\u5927\u7684 $w'(x,y)$\u3002\uff08\u6b64\u65f6\u76f4\u5f84\u53ef\u80fd\u4e3a $w'(x,x)=2a_x$ \u7684\u5f62\u5f0f\uff09\n\n\u8fd9\u6837\u5b9a\u4e49\u7684\u76f4\u5f84\u4fdd\u7559\u4e86\u4f20\u7edf\u76f4\u5f84\u7684\u8bb8\u591a\u6709\u5229\u6027\u8d28\u3002\n\n\u9996\u5148\uff0c\u76f4\u5f84\u8def\u5f84\u4e0a\u4e00\u5b9a\u5b58\u5728\u4e00\u70b9 $z$ \u4f7f\u5f97 $w_z(x)=\\lceil{w'(x,y)\\over 2}\\rceil$\u3002\n\n\u8bc1\u660e\u663e\u7136\uff0c\u56e0\u4e3a $d$ \u603b\u662f\u8fde\u7eed\u7684\uff0c\u4e14 $a_x\\le a_y+d(x,y)$\u3001$a_y\\le a_x+d(x,y)$\u3002\u540e\u8005\u5b58\u5728\u7684\u539f\u56e0\u662f $w'(x,y)\\ge w(x,x)$\u3001$w'(x,y)\\ge w(y,y)$\u3002\n\n\u5176\u6b21\uff0c$e(z)=\\max(w_z(x),w_z(y))$\u3002\n\n\u8bc1\u660e\u53ef\u4ee5\u628a $a_x$ \u6216\u8005 $a_y$ \u770b\u6210\u8fde\u5728 $x$ \u6216 $y$ \u4e0a\u7684\u4e00\u6bb5\u8ddd\u79bb\uff0c\u5c31\u548c\u6811\u7684\u76f4\u5f84\u7684\u8bc1\u660e\u65b9\u6cd5\u76f8\u540c\u3002\n\n\u7ed3\u5408\u4e24\u4e2a\u6027\u8d28\u53ef\u4ee5\u5f97\u5230 $e(z)\\ge\\lceil{w'(x,y)\\over 2}\\rceil$\uff0c\u4e14\u4e00\u5b9a\u80fd\u53d6\u7b49\u3002\u6240\u4ee5\u6240\u6c42\u5373\u540e\u5f0f\u3002\n\n\u90a3\u4e48\u53ea\u9700\u7ef4\u62a4\u76f4\u5f84 $(x,y)$ \u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4fee\u6539\u5bf9\u8be2\u95ee\u7684\u5f71\u54cd\u3002\u82e5 $a_z$ \u7684\u4fee\u6539\u91cf $\\Delta\\ge 0$\uff0c\u5219\u65b0\u7684\u76f4\u5f84\u53ea\u53ef\u80fd\u662f $d(x,z)$\u3001$d(y,z)$\u3001$d(z,z)$ \u4e2d\u7684\u4e00\u4e2a\uff0c\u76f4\u63a5\u5206\u8ba8\u5373\u53ef\u3002\u5426\u5219\u4e0d\u592a\u597d\u505a\u3002\n\n\u8fd9\u4e2a\u64cd\u4f5c\u7c7b\u4f3c\u56de\u9000\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u4fee\u6539\u6620\u5c04\u5230\u65f6\u95f4\u4e0a\uff0c\u4f7f $a$ \u4e0d\u964d\u3002\u90a3\u4e48\u5bf9\u4fee\u6539\u505a\u7ebf\u6bb5\u6811\u5206\u6cbb\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$ \u6216 $O(n\\log n)$\uff08$n$\u3001$m$ \u540c\u9636\uff09\uff0c\u89c6 LCA \u7684\u5b9e\u73b0\u800c\u5b9a\u3002",
        "postTime": 1673624001,
        "uid": 114356,
        "name": "arundo",
        "ccfLevel": 0,
        "title": "\u63e1\u7d27\u624b\u4e2d\u7684\u843d\u53f6\u8bd5\u56fe\u60f3\u8d77\u90a3\u4e2a\u79cb\u5929 \u53ef\u8111\u6d77\u4f60\u7684\u8eab\u5f71\u6e10\u6e10\u878d\u5316\u5728\u90a3\u6797\u6d77\u5929\u8fb9"
    }
]