[
    {
        "content": "\u4e3a\u5565$n,d\\le 5000$\u554a\uff0c\u6211\u641e\u4e86\u4e2a\u7ebf\u6027\u505a\u6cd5\n\n\u9996\u5148\u6700\u5c0f\u503c\u662f\u5f88\u597d\u6c42\u7684\uff1a\u6784\u5efa\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\u3002\u4ee4$fa(i)=\\lfloor\\frac{i}{2}\\rfloor$\u5373\u53ef\u3002  \n\u540c\u65f6\uff0c\u6700\u5927\u503c\u663e\u7136\u662f\u94fe\u7684\u60c5\u51b5\u3002  \n\u5bf9\u4e8e\u4e00\u822c\u60c5\u51b5\uff0c\u8003\u8651\u4ece\u6ee1\u4e8c\u53c9\u6811\u5411\u94fe\u8c03\u6574\u3002\u6bcf\u6b21\u628a\u7f16\u53f7\u6700\u5927\u7684\uff0c\u4e0d\u5728\u94fe\u4e0a\u7684\u70b9\u6302\u5230\u94fe\u4e0a\u3002\u5047\u8bbe\u73b0\u5728\u8003\u8651$i$\uff0c\u94fe\u7684\u6700\u4e0b\u7aef\u662f$pos$\u3002\n\n\u82e5\u9700\u8981\u589e\u52a0\u7684\u6df1\u5ea6$rest\\le dep(pos)+1-dep(i)$\uff0c\u90a3\u4e48$i$\u9700\u8981\u6210\u4e3a$pos$\u7684\u7b2c $dep(pos)+1-dep(i)-rest$\u4e2a\u7236\u4eb2\uff0c\u8fd9\u91cc\u76f4\u63a5\u66b4\u529b\u8df3\uff0c\u56e0\u4e3a\u53ea\u4f1a\u8df3\u8fd9\u4e00\u6b21\uff1b\u5426\u5219\u76f4\u63a5\u8ba9$i$\u6210\u4e3a$pos$\u7684\u513f\u5b50\uff0c\u4ee4$rest$\u51cf\u53bb$dep(pos)+1-dep(i)$,\u7ee7\u7eed\u8003\u8651\u4e0b\u4e00\u4e2a\u70b9\u3002\uff08\u6ce8\u610f\u5982\u679c\u70b9\u5728\u94fe\u4e0a\u5c31\u4e0d\u79fb\u52a8\u4e86\uff09\n\n\u6211\u8fd9\u91cc\u53d6$1,2,4,8,16...(2^x)$\u4f5c\u4e3a\u521d\u59cb\u7684\u94fe\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136$\\mathcal O(n)$\n```cpp\n/**********/\n#define MAXN 200011\nll fa[MAXN],dep[MAXN];\nvoid work()\n{\n    ll n=read(),sum_dep=read(),cur=0,pos;\n    dep[0]=-1;\n    for(ll i=1;i<=n;++i)\n    {\n        fa[i]=i>>1;dep[i]=dep[i>>1]+1;cur+=dep[i];\n        if((i&(i-1))==0)pos=i;\n    }\n    sum_dep-=cur;\n    if(sum_dep<0){puts(\"NO\");return;}\n    if(sum_dep==0)\n    {\n    \tputs(\"YES\");\n        for(ll i=2;i<=n;++i)printf(\"%lld \",fa[i]);\n        puts(\"\");\n        return;\n    }\n    for(ll i=n;i;--i)\n    {\n        if((i&(i-1))==0)continue;\n        sum_dep-=dep[pos]+1-dep[i];\n        if(sum_dep<=0)\n        {\n            while(sum_dep)pos=fa[pos],++sum_dep;\n            sum_dep=0;\n            fa[i]=pos;break;\n        }\n        fa[i]=pos,dep[i]=dep[pos]+1,pos=i;\n    }\n    if(sum_dep)puts(\"NO\");\n    else\n    {\n    \tputs(\"YES\");\n        for(ll i=2;i<=n;++i)printf(\"%lld \",fa[i]);\n        puts(\"\");\n    }\n    \n}\nint main()\n{\n    ll t=read();\n    while(t--)work();\n}\n```",
        "postTime": 1586257490,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1311E \u3010Construct the Binary Tree\u3011"
    },
    {
        "content": "# $CF1311E\\ Construct\\ the\\ Binary\\ Tree's\\ Solution$\n\t\t\t\t\t\t\n$\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad \\qquad \\qquad \\qquad \\qquad By$ [$CCA$](https://www.luogu.com.cn/user/78645)\n\n## $Problem$\n\n$\\qquad$\u6784\u9020\u4e00\u9897$n$\u4e2a\u70b9\uff0c\u4e2a\u70b9\u6df1\u5ea6\u4e4b\u548c\u4e3a$d$\u7684\u4e8c\u53c9\u6811\u3002\n\n## $Solution$\n\n$\\qquad$\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u65e0\u89e3\uff0c\u663e\u7136\uff0c\u5f53\u4e14\u4ec5\u5f53$\\quad sum > d\\quad or\\quad d > n * (n - 1)\\ /\\  2$,\u5176\u4e2d$sum=\\sum_{i=1}^n deep(i)_{min}$\u3002\n\n$\\qquad$\u7136\u540e\uff0c\u6211\u4eec\u4ece\u5224\u65ad\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u4e2d\u7684\u5f97\u5230\u4e86\u542f\u53d1\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6784\u9020\u4e00\u9897$sum$\u6700\u5c0f\u7684\u6570\uff0c\u518d\u4e00\u6b65\u4e00\u6b65\u79fb\u52a8\u5176\u4e2d\u7684\u67d0\u4e00\u7ed3\u70b9\uff0c\u6700\u7ec8\u4f7f$sum=d$\u3002\n\n$\\qquad$\u6700\u540e\u5c31\u662f\u672c\u9898\u7684\u96be\u70b9\u2014\u2014\u4ee3\u7801\u3002\u6211\u4eec\u8bb0\u4e00\u4e2a$tree$\u6570\u7ec4\u8868\u793a\u6bcf\u4e00\u5c42\u6709\u54ea\u4e9b\u7ed3\u70b9\uff0c\u7136\u540e\u8bb0$Max=max\\{deep(i)\\}'s\\ id$\uff0c\u8bf4\u4eba\u8bdd\u5c31\u662f\u6ee1\u8db3\u53ef\u79fb\u52a8\u6761\u4ef6\u7684\u6df1\u5ea6\u6b21\u5927\u7684\u7ed3\u70b9\uff0c\u5c06\u5b83\u79fb\u52a8\u5230\u4e0b\u4e00\u5c42\u3002\n\n$\\qquad$\u8f93\u51fa\u7684\u8bdd\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u4e2d\u7684\u5957\u8def\uff0c\u4ee4$LS=now<<1\\quad and\\quad RS=now<<1|1$\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 5e3 + 10;\n\nint T , n , d , p[N] , dep[N] , tree[N][N] , cnt[N] , sum , Max;\n\nint main(){\n\tscanf(\"%d\" , &T); while(T--){\n\t\tmemset(p , 0 , sizeof(p));\n\t\tmemset(cnt , 0 , sizeof(cnt));\n\t\tdep[1] = sum = Max = 0;\n\t\tscanf(\"%d %d\" , &n , &d);\n\t\ttree[0][++cnt[0]] = 1;\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tint LS = i << 1 , RS = i << 1 | 1;\n\t\t\tif(LS <= n) dep[LS] = dep[i] + 1 , tree[dep[LS]][++cnt[dep[LS]]] = LS , sum += dep[LS] , Max = max(Max , dep[LS]);\n\t\t\tif(RS <= n) dep[RS] = dep[i] + 1 , tree[dep[RS]][++cnt[dep[RS]]] = RS , sum += dep[RS] , Max = max(Max , dep[RS]);\n\t\t}\n\t\tif(sum > d || d > n * (n - 1) / 2){ puts(\"NO\"); continue; }\n\t\twhile(sum < d){\n\t\t\tfor(int i = Max; i >= 0; i--){\n\t\t\t\tif(cnt[i] >= 2 && cnt[i + 1] < (cnt[i] - 1) * 2){\n\t\t\t\t\ttree[i + 1][++cnt[i + 1]] = tree[i][cnt[i]] , cnt[i]-- , sum++;\n\t\t\t\t\tMax = max(Max , i + 1); break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int k = 0; k < Max; k++)\n\t\t\tfor(int i = 1; i <= cnt[k]; i++){\n\t\t\t\tint LS = 2 * (i - 1) + 1 , RS = 2 * (i - 1) + 2;\n\t\t\t\tif(LS <= cnt[k + 1]) p[tree[k + 1][LS]] = tree[k][i];\n\t\t\t\tif(RS <= cnt[k + 1]) p[tree[k + 1][RS]] = tree[k][i];\n\t\t\t}\n\t\tputs(\"YES\");\n\t\tfor(int i = 2; i <= n; i++) printf(\"%d \" , p[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n\u81ea\u8ba4\u4e3a\u7801\u98ce\u8fd8\u662f\u6bd4\u8f83\u6e05\u5947\u53ef\u770b\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u5bf9\u7740$Solution$\u4ed4\u7ec6\u770b\u4e00\u4e0b\u3002\n\n\u6700\u540e\uff0c[$This\\ is\\ my\\ blog$](https://www.luogu.com.cn/blog/A66-888/) , \u6709\u5174\u8da3\u7684\u53ef\u4ee5\u901b\u4e00\u4e0b\uff0c\u5e94\u8be5\u80fd\u6709\u6240\u6536\u83b7\u3002",
        "postTime": 1582867764,
        "uid": 78645,
        "name": "C\u3000C\u3000A",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1311E \u3010Construct the Binary Tree\u3011"
    },
    {
        "content": "\u5ba3\u4f20\u4e00\u6ce2 [blog](https://www.cnblogs.com/maoyiting/)~\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $n$ \u548c $d$\uff0c\u4f60\u9700\u8981\u6784\u9020\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u6ee1\u8db3\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u6070\u597d\u4e3a $d$\u3002$2\u2264n,d\u22645000$\u3002 \n\n### Solution\n\n\u6284\u4e00\u6ce2\u8bfe\u4ef6 QAQ\n\n\u9996\u5148\u8003\u8651\u6df1\u5ea6\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u5982\u679c $d$ \u5c0f\u4e8e\u8fd9\u4e2a\u6570\u76f4\u63a5\u4e0d\u53ef\u80fd\u3002\n\n\u5426\u5219\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u4fee\u6539\uff0c\u6bcf\u6b21\u8ba9\u603b\u6df1\u5ea6 $+1$\u3002\n\n\u9996\u5148\uff0c\u968f\u4fbf\u62ce\u51fa\u6765\u4e00\u6761\u6700\u6df1\u7684\u94fe\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u76f4\u63a5\u628a $1$ \u5230 $n$ \u62ce\u51fa\u6765\u3002\n\n\u7136\u540e\u6211\u4eec\u5f00\u59cb\u5012\u5e8f\u8003\u8651\u4e0d\u5728\u8fd9\u6761\u94fe\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u6bcf\u6b21\u5c1d\u8bd5\u628a\u8fd9\u4e2a\u70b9\u7684\u6df1\u5ea6 $+1$\u3002\n\n\u53ea\u9700\u8981\u8ba9\u8fd9\u4e2a\u70b9\u7684\u7236\u8282\u70b9\u53d8\u4e3a\u94fe\u4e0a\u6df1\u5ea6\u7b49\u4e8e\u5b83\u7684\u8282\u70b9\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u6211\u4eec\u521a\u597d\u628a\u603b\u6df1\u5ea6 $+1$\uff0c\u6240\u4ee5\u4e00\u5b9a\u80fd\u591f\u5f97\u5230\u6240\u6709\u53ef\u884c\u7684\u7ed3\u679c\u3002\u5982\u679c\u6700\u540e\u8fd8\u6ca1\u8fbe\u5230 $d$ \u90a3\u5c31\u4e0d\u53ef\u80fd\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=5e3+5;\nint t,n,d,fa[N],dep[N],a[N],mx,ans;\nbool vis[N];\nsigned main(){\n    scanf(\"%lld\",&t);\n    while(t--){\n        scanf(\"%lld%lld\",&n,&d);\n        memset(vis,0,sizeof(vis)),mx=0,a[0]=1;\n        for(int i=2;i<=n;i++)\n            fa[i]=i/2,dep[i]=dep[fa[i]]+1,d-=dep[i],mx=max(mx,dep[i]);    //\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\u548c\u6df1\u5ea6\u3002mx:\u6700\u5927\u6df1\u5ea6\u3002 \n        if(d<0){puts(\"NO\");continue;} \t//\u8003\u8651\u6df1\u5ea6\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u5982\u679c d \u5c0f\u4e8e\u8fd9\u4e2a\u6570\u76f4\u63a5\u4e0d\u53ef\u80fd\u3002 \n        int x=n; \n        while(x) a[dep[x]]=x,vis[x]=1,x=fa[x];    //\u627e\u51fa\u4e00\u6761\u6700\u6df1\u7684\u94fe\uff0c\u6807\u8bb0\u5728\u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\u3002 \n        for(int i=n;i>=1;i--){    //\u5012\u5e8f\u8003\u8651\u4e0d\u5728\u8fd9\u6761\u94fe\u4e0a\u7684\u6240\u6709\u70b9\u3002 \n            if(vis[i]) continue;\n            int pre=mx;\n            while(dep[fa[i]]<pre&&d){\n                fa[i]=a[dep[fa[i]]+1],dep[i]=dep[fa[i]]+1;\t//\u6bcf\u6b21\u5c1d\u8bd5\u628a\u8fd9\u4e2a\u70b9\u7684\u6df1\u5ea6 +1\u3002\n                if(dep[i]>mx) mx++,a[mx]=i,vis[i]=1; \t//dep[i]>mx \u76f8\u5f53\u4e8e\u8282\u70b9 i \u63a5\u5230\u4e86\u6700\u6df1\u7684\u94fe\u7684\u540e\u9762\u3002\u4fee\u6539\u76f8\u5173\u4fe1\u606f\u3002 \n                d--;\n            }\n        }\n        if(d){puts(\"NO\");continue;} \n        puts(\"YES\");\n        for(int i=2;i<=n;i++)\n            printf(\"%lld%c\",fa[i],i==n?'\\n':' ');\n    }\n    return 0;\n}\n```",
        "postTime": 1599806733,
        "uid": 171807,
        "name": "maoyiting",
        "ccfLevel": 7,
        "title": "CF1311E Construct the Binary Tree"
    },
    {
        "content": "\u819c\u8fd9\u573a\u6bd4\u8d5b\u7684 $rk1$ \n[$\\color{black}A\\color{red}{lex\\_Wei}$](https://www.luogu.com.cn/user/123294)\n\n\n\u8fd9\u9898\u5e94\u8be5\u662f\u8fd9\u573a\u6bd4\u8d5b\u6700\u96be\u7684\u9898\u4e86\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4e8c\u53c9\u6811\u7684\u4e0b\u4e00\u5c42\u4e0d\u4f1a\u8d85\u8fc7\u8fd9\u4e00\u5c42\u7684 $2$ \u500d\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u6784\u9020\u51fa\u6765\u4e00\u9897\u5c3d\u91cf\u6ee1\u7684\u4e8c\u53c9\u6811\uff0c\u7136\u540e\u6162\u6162\u5411\u4e0b\u8c03\u6574\uff0c\u8c03\u6574\u7684\u65b9\u6cd5\u662f\u4ece\u6700\u4e0a\u9762\u4e00\u4e2a\u4e00\u4e2a\u5f04\u4e0b\u6765\u3002\n\n\u7136\u540e\u4f60\u6162\u6162\u8c03\u6574\u7684\u590d\u6742\u5ea6\u6700\u591a\u662f $d$ \uff0c\u590d\u6742\u5ea6 $O(d)$ \n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\nconst int maxn = 5e3 + 5;\nint n , d , p[maxn] , fa[maxn] ;\nvector < int > dep[maxn] ;\n\nsigned main() {\n\tint t;\n\tcin >> t ;\n\twhile(t --) {\n\t\tmemset(p , 0 , sizeof(p)) , memset(fa , 0 , sizeof(fa)) ;\n\t\tcin >> n >> d ;\n\t\tint sum = 0 , bs = 0 ;\n\t\tfor(int i = 1 ; i <= n ;) {\n\t\t\tint rem = min(n - i + 1 , 1 << bs) ;\n\t\t\tp[bs] = rem , sum += rem * bs; \n\t\t\ti += rem , bs ++ ;\n\t\t}\n\t\tif(sum > d) {\n\t\t\tputs(\"no\") ;\n\t\t\tcontinue ;\n\t\t}\n\t\tint pos = bs; \n\t\twhile(sum < d) {\n\t\t\tint k = 0 ;\n\t\t\tfor(int i = 1 ; i <= n ; i ++) \n\t\t\t\tif((p[i] - 1) * 2 >= p[i + 1] + 1) {\n\t\t\t\t\tk = i ;\n\t\t\t\t\tbreak ;\n\t\t\t\t}\n\t\t\tif(! k) \n\t\t\t\tbreak ;\n\t\t\tsum ++ , p[k] -- , p[k + 1] ++ ;\n\t\t}\n\t\tif(sum < d) {\n\t\t\tputs(\"no\") ;\n\t\t\tcontinue ;\n\t\t}\n\t\tputs(\"yes\") ;\n\t\tint cnt = 1 ;\n\t\tfor(int i = 0 ; i <= n ; i ++)\n\t\t\tdep[i].clear() ;\n\t\tdep[0].push_back(1);\n\t\tdep[0].push_back(1);\n\t\tfor(int i = 1 ; i <= n ; i ++) {\n\t\t\twhile(p[i] --) {\n\t\t\t\tfa[++ cnt] = dep[i - 1].back() ;\n\t\t\t\tdep[i].push_back(cnt) ;\n\t\t\t\tdep[i].push_back(cnt) ;\n\t\t\t\tdep[i - 1].pop_back() ;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 2 ; i <= n ; i ++) \n\t\t\tcout << fa[i] << ' ' ;\n\t\tcout << '\\n' ;\n\t}\t\n\treturn 0 ;\n}\n```",
        "postTime": 1582692562,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1311E \u3010Construct the Binary Tree\u3011"
    },
    {
        "content": "\u5f88\u6c34\u7684\u4e00\u4e2a\u5165\u95e8\u6784\u9020\u4e86\u3002\n\n\u9996\u5148\u5224\u65ad\u6709\u65e0\u89e3\uff0c\u53d1\u73b0\u6df1\u5ea6\u548c\u6700\u5927\u7684\u60c5\u51b5\u4e3a\u94fe\uff0c\u6700\u5c0f\u7684\u60c5\u51b5\u4e3a\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5224\u65ad $d$ \u662f\u5426\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u5c06\u67d0\u4e2a\u70b9\u7684\u7236\u4eb2\u4ece $u$ \u6539\u63a5\u5230 $v$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u624b\u73a9\u4e00\u4e0b\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u8d21\u732e\u4e3a $depth_v-depth_u$\u3002\n\n\u518d\u8003\u8651\u6811\u7684\u521d\u59cb\u72b6\u6001\u3002~~\u7531\u4e8e\u4ece\u5b8c\u5168\u4e8c\u53c9\u6811\u5f00\u59cb\u7ef4\u62a4\u592a\u590d\u6742\u4e86~~\u7531\u4e8e $n \\leq 5000$\uff0c\u53ef\u4ee5\u66b4\u529b\u8fc7\u53bb\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u4e00\u6761\u94fe\u5f00\u59cb\u7ef4\u62a4\u3002\n\n\u63a5\u4e0b\u6765\u5f00\u59cb\u6784\u9020\u3002\u8fdb\u884c\u591a\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u9009\u62e9\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9 $u$\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e00\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u904d\u5386\u6574\u68f5\u6811\uff0c\u627e\u5230\u4e00\u4e2a\u8282\u70b9 $v$\uff0c\u4f7f\u5f97\u5c06 $u$ \u63a5\u5230 $v$ \u4e0a\u540e\u6ee1\u8db3\uff1a\n\n1. \u65b0\u6811\u4f9d\u7136\u6ee1\u8db3\u9898\u610f\uff08\u4f9d\u7136\u662f\u4e00\u9897\u4e8c\u53c9\u6811\uff09\u3002\n2. \u65b0\u6811\u8282\u70b9\u7684\u6df1\u5ea6\u548c\u4f9d\u7136\u5927\u4e8e\u6216\u7b49\u4e8e $d$\u3002\n3. \u5728\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u4e2a\u6761\u4ef6\u4e0b\u4f7f\u5f97\u65b0\u6811\u8282\u70b9\u7684\u6df1\u5ea6\u548c\u4e8e $d$ \u7684\u5dee\u6700\u5c0f\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u663e\u7136\u662f\u53ef\u4ee5\u5728 $\\text{O}(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u3002\u7531\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u6700\u5927\u8d21\u732e\u5e73\u5747\u4e3a $ \\frac{1}{2}n$\uff0c\u800c\u94fe\u7684\u6df1\u5ea6\u548c\u4e3a $\\frac{1}{2}n(n-1)$\uff0c\u56e0\u6b64\u6811\u7684\u6df1\u5ea6\u548c\u8fbe\u5230 $d$\uff0c\u6700\u591a\u53ea\u4f1a\u8fdb\u884c\u7ea6 $n$ \u6b21\u64cd\u4f5c\u3002\u6240\u4ee5\u6574\u4e2a\u4ee3\u7801\u6700\u574f\u590d\u6742\u5ea6\u4e3a $\\text{O}(n^2)$\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint s=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\tc=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\ts=s*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s;\n}\nint T;\nint n,D;\nint fa[1000007];\npriority_queue <pair<int,int>> q;\nint sonum[100007];\nint depth[100007];\nint main()\n{\n\tT=read();\n\twhile(T--)\n\t{\n\t\tn=read(),D=read();\n\t\tint minn=0,k=0,d=1,sum=0;\n\t\twhile(sum+d<=n)\n\t\t{\n\t\t\tminn+=k*d;\n\t\t\tsum+=d;\n\t\t\td*=2;\n\t\t\t++k;\n\t\t}\n\t\tminn+=(n-sum)*k;\n\t\tint maxn=n*(n-1)/2;\n\t\tif(D<minn||D>maxn)\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tputs(\"YES\");\n\t\tdepth[1]=0;\n\t\tfor(int i=2;i<=n;++i)\n\t\tfa[i]=i-1,sonum[i-1]=1,depth[i]=depth[fa[i]]+1;\n\t\tsonum[n]=0;\n\t\tint num=maxn-D;\n\t\tq.push(make_pair(depth[n],n));\n\t\twhile(num)\n\t\t{\n\t\t\tint u=q.top().second;\n\t\t\tq.pop();\n\t\t\tint maxnn=-5007,maxd;\n\t\t\tfor(int i=1;i<=n;++i)\n\t\t\t{\n\t\t\t\tif(sonum[i]>1)\n\t\t\t\tcontinue;\n\t\t\t\tint c=depth[u]-depth[i]-1;\n\t\t\t\tif(c>maxnn&&c<=num)\n\t\t\t\t{\n\t\t\t\t\tmaxnn=c;\n\t\t\t\t\tmaxd=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnum-=maxnn;\n\t\t\t--sonum[fa[u]];\n\t\t\tif(!sonum[fa[u]])\n\t\t\tq.push(make_pair(depth[fa[u]],fa[u]));\n\t\t\tfa[u]=maxd;\n\t\t\tdepth[u]=depth[fa[u]]+1;\n\t\t\t++sonum[fa[u]];\n\t\t\tq.push(make_pair(depth[u],u));\n\t\t}\n\t\tfor(int i=2;i<=n;++i)\n\t\tprintf(\"%d \",fa[i]);\n\t\tputchar('\\n');\n\t\twhile(!q.empty())\n\t\tq.pop();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1634631150,
        "uid": 414210,
        "name": "Iam1789",
        "ccfLevel": 0,
        "title": "CF1311E Construct the Binary Tree \u9898\u89e3"
    },
    {
        "content": "\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u6211\u4e00\u76f4\u5fcd\u4f4f\u6ca1\u6709\u770b\u9898\u89e3\uff0c\u6700\u540e\u6210\u529f\u5730\u72ec\u7acb\u6784\u9020\u51fa\u6765\u4e86\uff0c\u7136\u540e\u4e00\u7ffb\u9898\u89e3\uff0c\u5927\u4f53\u601d\u8def\u76f8\u540c\uff0c\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u533a\u522b\u3002\n### \u9898\u610f\n\u6784\u9020\u4e00\u68f5\u4ee5 $1$ \u4e3a\u6839\uff0c$n$ \u4e2a\u70b9\uff0c\u8282\u70b9\u6df1\u5ea6\u4e4b\u548c\u4e3a $d$ \u7684\u4e8c\u53c9\u6811\u3002\u9ed8\u8ba4\u6839\u7684\u6df1\u5ea6\u4e3a $0$\u3002\n### \u5206\u6790\n\u6211\u4eec\u9996\u5148\u8003\u8651\u662f\u5426\u6709\u89e3\u3002\u5bf9\u4e8e\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6c42\u5b83\u7684\u6700\u5927\u6df1\u5ea6\u548c\uff0c\u663e\u7136\u6211\u4eec\u5c31\u8ba9\u6df1\u5ea6\u6700\u5927\u7684\u5c3d\u91cf\u5927\uff0c\u6700\u540e\u5f97\u5230\u4e00\u6761\u94fe\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6784\u9020\u51fa\u6765\u7684\u6700\u5927\u65b9\u6848\u3002\n\n\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff1a\u5047\u8bbe\u4e0a\u8ff0\u65b9\u6848\u6df1\u5ea6\u548c\u4e0d\u662f\u6700\u5927\u7684\uff0c\u90a3\u4e48\u6700\u5927\u7684\u65b9\u6848\u4e00\u5b9a\u662f\u65c1\u751f\u4fa7\u679d\u7684\uff0c\u5982\u56fe\u6240\u793a\uff1a\n![](http://r.photo.store.qq.com/psc?/V53Jnu1D3vSo501VoEus464qox1MU2UT/45NBuzDIW489QBoVep5mcZfFwUeDZ4mLy9QUfZwa1yeUZesMcj2Z49E5bAfsdFCd12XkIh0d3ntVXIxxA8YKX1RncozvKVl7kI7O8HxfH0g!/r)\n\n\u5f88\u663e\u7136\uff0c\u5982\u679c $5$ \u53f7\u8282\u70b9\u63a5\u5230 $4$ \u7684\u4e0b\u9762\u4f1a\u66f4\u4f18\uff0c\u4e0e\u524d\u9762\u7684\u77db\u76fe\uff0c\u6240\u4ee5\u4e00\u6761\u94fe\u7684\u60c5\u51b5\u4e00\u5b9a\u662f\u6df1\u5ea6\u548c\u6700\u5927\u7684\u3002\n\n\u540c\u7406\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c\u6df1\u5ea6\u548c\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u4e00\u5b9a\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u51fa\u8bc1\u660e\u4e86\u3002\n\n\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\uff0c\u7ed9 $n$ \u4e2a\u8282\u70b9\u6240\u80fd\u6784\u9020\u51fa\u7684\u4e8c\u53c9\u6811\uff0c\u6240\u6709\u8282\u70b9\u6df1\u5ea6\u548c\u7684\u4e0a\u4e0b\u754c\uff0c\u5982\u4f55\u5224\u65ad\u662f\u5426\u6709\u89e3\u5c31\u5f88\u663e\u7136\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u6784\u9020\u4e00\u79cd\u65b9\u6848\u3002\u5176\u4ed6\u9898\u89e3\u4f3c\u4e4e\u90fd\u662f\u5148\u5efa\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\u518d\u5f80\u94fe\u9760\uff0c\u6211\u5c31\u8bf4\u4e00\u4e0b\u53e6\u4e00\u79cd\u601d\u8def\uff1a\u5148\u628a\u6811\u5efa\u6210\u4e00\u6761\u94fe\uff0c\u7136\u540e\u628a\u8282\u70b9\u4e00\u4e2a\u4e00\u4e2a\u5f80\u6839\u8282\u70b9\u65b9\u5411\u632a\u3002\n\n\u6211\u4eec\u9996\u5148\u9020\u4e00\u6761\u94fe\u51fa\u6765\uff0c\u8bb0\u5f55\u4e0b\u5f53\u524d\u72b6\u6001\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u91cc\uff0c\u6211\u8bb0\u4e86**\u6bcf\u4e00\u5c42\u7684\u6709\u7a7a\u4f4d\u7684\u8282\u70b9**\u3001\u4ed6\u4eec\u7684\u7a7a\u513f\u5b50\u4e2a\u6570\u548c\u6df1\u5ea6\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u8981\u53d6\u4e00\u4e2a\u6df1\u5ea6\u6700\u5927\u7684\u7ed3\u70b9\uff0c\u5e76\u628a\u5b83\u5f80\u6839\u8282\u70b9\u65b9\u5411\u632a\u3002\u4e00\u4e2a\u65b9\u6848\u662f\uff0c\u4ece\u6d45\u5230\u6df1\u904d\u5386\u6bcf\u4e00\u5c42\uff0c\u5982\u679c\u5f53\u524d\u5c42\u6709\u7a7a\u4f4d\u4e14\u632a\u8fc7\u53bb\u4e4b\u540e\u7b54\u6848\u5c0f\u4e8e\u7b49\u4e8e $d$ ,\u5c31\u628a\u5b83\u632a\u8fc7\u53bb\u5e76\u66f4\u65b0\u76f8\u5173\u4fe1\u606f\u3002\u90a3\u4e48\u5982\u4f55\u4fdd\u8bc1\u6bcf\u6b21\u53d6\u5230\u7684\u4e00\u5b9a\u662f\u6df1\u5ea6\u6700\u5927\u7684\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u8282\u70b9\u6254\u5230\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u91cc\uff0c\u6309\u7167\u6df1\u5ea6\u6392\u5e8f\uff0c\u6bcf\u6b21\u53d6\u5806\u9876\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u6211\u4eec\u632a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651\u5f53\u524d\u8fd9\u4e2a\u7236\u4eb2\u8282\u70b9\u7684\u7a7a\u513f\u5b50\u6570\u91cf\uff0c\u5982\u679c\u4e3a $2$ \u6211\u4eec\u5c31\u51cf $1$\uff0c\u5426\u5219\u76f4\u63a5\u628a\u5b83\u79fb\u51fa\u6709\u7a7a\u4f4d\u7684\u8282\u70b9\u540d\u5355\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u8981\u628a\u5f53\u524d\u8282\u70b9\u52a0\u5165\u8fd9\u4e00\u5c42\u7684\u5019\u9009\u5217\u8868\u91cc\u3002\n\n\u5176\u5b9e\u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u5f53\u524d\u8282\u70b9\u548c\u539f\u6765\u7684\u7236\u8282\u70b9\u8131\u79bb\u5173\u7cfb\u7684\u65f6\u5019\u4e5f\u9700\u8981\u505a\u7c7b\u4f3c\u64cd\u4f5c\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0d\u4f1a\u518d\u6709\u8282\u70b9\u79fb\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u4e86\uff0c\u6240\u4ee5\u4e0d\u7ba1\u4e5f\u65e0\u6240\u8c13\u3002\n\n#### \u6ce8\u610f\u591a\u7ec4\u6570\u636e\u3002\n\n### Code\n```cpp\n#include<bits/stdc++.h>\nnamespace CCCP\n{\n\tconst int N = 10005;\n\tint fa[N], n, d, now;\n\tstruct node\n\t{\n\t\tint id, vacancy;\n\t}g[N];\n\tstd::basic_string<node>q[N];\n\tstruct _node\n\t{\n\t\tint id, dep;\n\t\tbool operator<(const _node x)const { return dep < x.dep; }\n\t};\n\tstd::priority_queue<_node>f;\n\tvoid work()\n\t{\n\t\tmemset(g, 0, sizeof(g));\n\t\tmemset(fa, 0, sizeof(fa));\n\t\tfor (int i = 0;i < N;i++)q[i].clear();\n\t\twhile (!f.empty())f.pop();\n\t\tstd::cin >> n >> d;\n\t\tint _max_ = n * (n - 1) / 2, _min_ = 0, tmp = n - 1;\n\t\tfor (int i = 1, j = 2;;i++, j <<= 1)\n\t\t{\n\t\t\tif (j >= tmp)\n\t\t\t{\n\t\t\t\t_min_ += tmp * i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t_min_ += i * j;\n\t\t\ttmp -= j;\n\t\t}\n\t\tif (_min_ > d || d > _max_)\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tputs(\"YES\");\n\t\tq[0].push_back({ 1,1 });\n\t\tfor (int i = 2;i <= n;i++)\n\t\t{\n\t\t\tnode g;\n\t\t\tfa[i] = i - 1;\n\t\t\tg.id = i;\n\t\t\tif (i != n)g.vacancy = 1;\n\t\t\telse g.vacancy = 2;\n\t\t\tq[i - 1].push_back(g);\n\t\t\tf.push({ i,i - 1 });\n\t\t}\n\t\tnow = _max_;\n\t\twhile (now != d)\n\t\t{\n\t\t\t_node t = f.top();\n\t\t\tf.pop();\n\t\t\tint i;\n\t\t\tfor (i = 0;q[i].empty() || now - (t.dep - i - 1) < d;i++);\n\t\t\tnow -= t.dep - i - 1;\n\t\t\tnode u = q[i].back();\n\t\t\tq[i].pop_back();\n\t\t\tfa[t.id] = u.id, t.dep = i + 1;\n\t\t\tf.push(t);\n\t\t\tif (u.vacancy == 2)\n\t\t\t{\n\t\t\t\tq[i].push_back({ u.id,u.vacancy - 1 });\n\t\t\t}\n\t\t\tq[i + 1].push_back({ t.id,2 });\n\t\t}\n\t\tfor (int i = 2;i <= n;i++)\n\t\t{\n\t\t\tstd::cout << fa[i] << ' ';\n\t\t}\n\t\tputs(\"\");\n\t}\n}\nint main()\n{\n\tint t;\n\tstd::cin >> t;\n\twhile (t--)CCCP::work();\n\treturn 0;\n}\n```",
        "postTime": 1624435506,
        "uid": 400781,
        "name": "Troubadour",
        "ccfLevel": 0,
        "title": "CF1311E Construct the Binary Tree \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u6784\u9020\u4e0d\u51fa\u6765\uff1a\n- \u6700\u5c0f\u503c\u663e\u7136\u662f\u6ee1\u4e8c\u53c9\u6811\uff0c\u5148\u628a\u8ddd\u79bb\u548c\u8bb0\u4e3a $sum$\u3002\n- \u6700\u5927\u503c\u5148\u7136\u662f\u94fe\uff0c\u8ddd\u79bb\u548c\u4e3a $n*(n-1)/2$\u3002\n\n\u6240\u4ee5\u6784\u9020\u4e0d\u51fa\u6765\u7684\u6761\u4ef6\u5c31\u662f$d<sum$ \u6216\u8005 $d>n*(n-1)/2$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6784\u9020\u7b26\u5408\u6761\u4ef6\u7684\u3002\n\n\u6211\u4eec\u5148\u6784\u9020\u51fa\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\uff0c\u518d\u770b\u591a\u7684\u90e8\u5206\u600e\u4e48\u8c03\u6574\u3002\uff08\u5148\u628a $d$ \u51cf\u6389 $sum$\uff0c\u53d8\u4e3a\u591a\u7684\u8ddd\u79bb\u548c\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/disx6cx9.png)\n\n\u4e0b\u9762\uff0c\u6211\u4eec\u8981\u5c3d\u53ef\u80fd\u628a\u70b9\u5f80\u7ea2\u8272\u7684\u94fe\u4e0a\u79fb\uff0c\u4f7f\u5f97\u603b\u8ddd\u79bb\u548c\u53d8\u5927\u3002\n\n\u5148\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e0d\u5728\u94fe\u4e0a\u7684\u70b9 $i$ \uff08\u4ece\u5927\u5230\u5c0f\uff09\uff0c\u8bb0\u94fe\u6700\u4e0b\u7aef\u7684\u70b9\u4e3a $Max$\u3002\u5982\u679c\u628a $i$ \u79fb\u5230\u94fe\u7684\u6700\u4e0b\u7aef\uff0c\u603b\u8ddd\u79bb\u5c31\u4f1a\u589e\u52a0 $dep[Max]-dep[i]+1$\uff0c\uff08$dep$ \u4e3a\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u4ee4$dep[1]=0$\uff09\u3002\n- \u5982\u679c $(dep[Max]-dep[i]+1)<d$\uff0c\u8bf4\u660e\u628a $i$ \u79fb\u5230\u94fe\u7684\u6700\u4e0b\u9762\u4e5f\u4e0d\u591f\uff0c\u6240\u4ee5\u76f4\u63a5\u79fb\u5230\u6700\u4e0b\u9762\uff0c\u66f4\u65b0\u7236\u4eb2\uff0c\u6df1\u5ea6\u548c $d$ \u5373\u53ef\u3002\n\n- \u5982\u679c $(dep[Max]-dep[i]+1)=d$\uff0c\u8bf4\u660e\u79fb\u5230\u94fe\u7684\u6700\u4e0b\u7aef\u521a\u597d\uff0c\u76f4\u63a5\u66f4\u65b0\uff0c\u8f93\u51fa\u7b54\u6848\u3002\n\n- \u5426\u5219\uff0c\u8bf4\u660e\u79fb\u5230\u94fe\u7684\u6700\u4e0b\u7aef\u6df1\u5ea6\u548c\u504f\u5927\u4e86\u3002\u76f4\u63a5\u8003\u8651\u4e00\u5c42\u4e00\u5c42\u5728\u94fe\u4e0a\u5f80\u4e0a\u8d70\uff0c\u76f4\u5230\u6df1\u5ea6\u548c\u521a\u597d\uff0c\u76f4\u63a5\u66f4\u65b0\uff0c\u8f93\u51fa\u3002\u5982\u679c\u6ca1\u6709\u4f7f\u6df1\u5ea6\u548c\u521a\u597d\u6ee1\u8db3\u8981\u6c42\u7684\u4f4d\u7f6e\uff0c\u5c31\u8f93\u51fa NO\u3002\n\n\u4e0b\u9762\u5c31\u662f\u4ee3\u7801\u5566\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=5005;\nint T,n,d,dep[N],fa[N],lg[N];\nbool vis[N];\nint main(){\n\tlg[0]=lg[1]=0;\n\tfor(int i=2;i<N;i++)lg[i]=lg[i/2]+1;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d%d\",&n,&d);\n\t\tint sum=0,Max=0,flag=1;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(fa,0,sizeof(fa));\n\t\tdep[1]=0;\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tfa[i]=i/2;\n\t\t\tdep[i]=lg[i];\n\t\t\tsum+=dep[i];\n\t\t}\n\t\tfor(int i=1;i<=n;i*=2)vis[i]=1,Max=i;\n\t\tif(d<sum||d>n*(n-1)/2){\n\t\t\tputs(\"NO\");\n\t\t\tflag=0;\n\t\t\tcontinue;\n\t\t}\n\t\td-=sum;\n\t\tif(d==0){\n\t\t\tputs(\"YES\");\n\t\t\tfor(int i=2;i<=n;i++)printf(\"%d \",fa[i]);\n\t\t\tputs(\"\");\n\t\t\tflag=0;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i=n;i>=1;i--){\n\t\t\tif(!vis[i]){\n\t\t\t\tif(d>dep[Max]-dep[i]+1){\n\t\t\t\t\tfa[i]=Max;\n\t\t\t\t\td-=(dep[Max]-dep[i]+1);\n\t\t\t\t\tdep[i]=dep[Max]+1;\n\t\t\t\t\tMax=i;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tint p=Max;\n\t\t\t\t\td=dep[Max]-dep[i]+1-d;\n\t\t\t\t\twhile(d>0&&p!=1)p=fa[p],d--;\n\t\t\t\t\tif(d!=0){\n\t\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tfa[i]=p;dep[i]=dep[p]+1;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag==1){\n\t\t\tputs(\"YES\");\n\t\t\tfor(int i=2;i<=n;i++)printf(\"%d \",fa[i]);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1615094139,
        "uid": 188389,
        "name": "QQH08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1311E Construct the Binary Tree"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u786e\u5b9a\u53ef\u884c\u7684 $d$ \u7684\u8303\u56f4\u3002\n\n\u663e\u7136\uff0c\u5f53\u4e8c\u53c9\u6811\u662f\u4e00\u6761\u94fe\u7684\u65f6\u5019\uff0c$d$ \u662f\u6700\u5927\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c$0+1+2+\\cdots (n-1) = d_{\\max}$\uff0c\u7a0d\u5fae\u8f6c\u5316\u4e00\u4e0b\uff0c\u5c31\u662f $d \\le \\frac{n(n-1)}{2}$\u3002\n\n\u800c\u628a\u8fd9\u9897\u4e8c\u53c9\u6811\u7ed9\u5c3d\u91cf\u6ee1\u7684\u6784\u9020 $d$ \u663e\u7136\u662f\u6700\u5c0f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u786e\u4fdd\u8fd9\u68f5\u4e8c\u53c9\u6811\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $d_{\\min}$\uff0c\u8fd9\u4e2a\u4e0d\u59a8\u9012\u63a8\u4e00\u4e0b\uff0c\u5982\u679c\u7528 $dep_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u7ed3\u70b9\u7684\u6df1\u5ea6\uff0c\u90a3\u4e48\u663e\u7136\u6709 $dep_{2i} = dep_i + 1, dep_{2i+1} = dep_i + 1$\uff08\u7c7b\u6bd4\u7ebf\u6bb5\u6811\u5f88\u5bb9\u6613\u7406\u89e3\uff09\uff0c\u5f53\u7136\uff0c\u8fd9\u4e2a\u548c $dep_i = dep_{\\lfloor\\frac i 2 \\rfloor}+1$ \u662f\u7b49\u4ef7\u7684\u3002\n\n\u90a3\u4e48\u5728 $[d_{\\min}, d_{\\max}]$ \u4e4b\u95f4\u7684 $d$ \u90fd\u662f\u53ef\u884c\u7684\u4e86\uff0c\u89c2\u5bdf\u5230 $n, d$ \u90fd\u5f88\u5c0f\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u6b65\u6b65\u7684\u8f6c\u79fb\u3002\u5148\u6784\u9020\u51fa\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u6b21 **\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u7684\u6df1\u5ea6\u6700\u5927\u7684\u70b9\uff0c\u628a\u5b83\u5411\u4e0b\u79fb\u52a8\u4e00\u5c42**\u3002\n\n\u4e3a\u4e86\u5b9e\u73b0\u65b9\u4fbf\uff0c\u4e0d\u59a8\u628a $dep = i$ \u7684\u70b9\u5b58\u5230\u4e00\u4e2a `vector` \u4e2d\uff0c\u540d\u5b57\u53eb\u505a $\\text{node}_i$\uff0c\u73b0\u5728\u8bd5\u56fe\u628a\u67d0\u4e00\u4e2a $dep = i$ \u7684\u70b9\u4e0b\u79fb\uff0c\u8981\u6c42\u663e\u7136\u5c31\u662f **\u53bb\u6389\u8fd9\u4e2a\u70b9\u540e\uff0c\u4e0b\u9762\u4e00\u5c42\u8fd8\u6709\u4f4d\u7f6e**\uff0c\u53ef\u4ee5\u8868\u73b0\u4e3a $\\operatorname{size}(\\text{node}_{i+1})<(\\operatorname{size}(\\text{node}_i) - 1) \\times 2$\uff0c\u66b4\u529b\u4e0b\u79fb\u5373\u53ef\u3002\n\n\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u662f\u82e5\u5e72\u4e2a `vector` \u6570\u7ec4\uff0c\u4ee4 $\\text{node}_{i,j}$ \u7684\u513f\u5b50\u662f $\\text{node}_{i+1,2i}$ \u548c $\\text{node}_{i+1,2i+1}$ \u5c31\u884c\u4e86\uff08\u5f53\u7136\uff0c\u524d\u63d0\u662f\u5b58\u5728\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5005;\nint n, dep[N], d, mxdep, sumdep, fa[N];\nvector<int> node[N];\nint main()\n{\n\tint t;\n\tcin >> t;\n\twhile(t--)\n\t{\n\t\tcin >> n >> d;\n\t\tfor(int i = 1; i <= n; i++) node[i].clear();\n\t\tdep[1] = mxdep = sumdep = 0;\n\t\tnode[0].push_back(1);\n\t\tfor(int i = 2; i <= n; i++)\n\t\t{\n\t\t\tdep[i] = dep[i >> 1] + 1;\n\t\t\tsumdep += dep[i];\n\t\t\tmxdep = max(mxdep, dep[i]);\n\t\t\tnode[dep[i]].push_back(i); \n\t\t}\n\t\tif(d < sumdep || d > n * (n - 1) / 2)\n\t\t{\n\t\t\tcout << \"NO\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\twhile(sumdep < d)\n\t\t{\n\t\t\tfor(int i = mxdep; ~i; i--)\n\t\t\t{\n\t\t\t\tif(node[i].size() >= 2 && node[i + 1].size() < node[i].size() * 2 - 2)\n\t\t\t\t{\n\t\t\t\t\tsumdep++;\n\t\t\t\t\tmxdep = max(mxdep, i + 1);\n\t\t\t\t\tnode[i + 1].push_back(node[i].back());\n\t\t\t\t\tnode[i].pop_back();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i <= mxdep; i++)\n\t\t{\n\t\t\tfor(int j = 0; j < node[i].size(); j++)\n\t\t\t{\n\t\t\t\tint ls = j * 2, rs = j * 2 + 1;\n\t\t\t\tif(ls < node[i + 1].size()) fa[node[i + 1][ls]] = node[i][j];\n\t\t\t\tif(rs < node[i + 1].size()) fa[node[i + 1][rs]] = node[i][j];\n\t\t\t}\n\t\t}\n\t\tcout << \"YES\" << endl;\n\t\tfor(int i = 2; i <= n; i++) cout << fa[i] << ' ';\n\t\tcout << endl;\n\t}\n\t\n}\n```",
        "postTime": 1588168172,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1311E \u3010Construct the Binary Tree\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6784\u9020\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u4f7f\u5f97\u6240\u6709\u70b9\u6df1\u5ea6\u4e4b\u548c\u4e3a $d$\u3002\n\n\u9996\u5148\uff0c\u5148\u6c42\u51fa $n$ \u4e2a\u70b9\u7684\u6700\u5c0f\u7b54\u6848\uff08\u5b8c\u5168\u4e8c\u53c9\u6811\uff09\u548c\u6700\u5927\u7b54\u6848\uff08\u94fe\uff09\uff0c\u6392\u9664\u65e0\u89e3\u60c5\u51b5\u3002\n\n\u8003\u8651\u5269\u4e0b\u7684\u600e\u4e48\u505a\u3002\n\n\u5148\u6784\u9020\u4e00\u6761\u94fe\uff0c\u518d\u8fdb\u884c\u8c03\u6574\u3002\n\n\u9ed8\u8ba4 $dep_i \\leq dep_{i+1}$\uff0c\u5e76\u4ee4\u5f53\u524d\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u548c\u4e3a $ans$\u3002\n\n\u4ece $2$ \u679a\u4e3e\u5230 $n$\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u5f53\u679a\u4e3e\u5230\u4e00\u4e2a\u70b9\u65f6\uff0c\u5b83\u4e0b\u9762\u4e00\u5b9a\u662f\u4e00\u6761\u94fe\u3002\n\n\u5047\u8bbe\u5f53\u524d\u679a\u4e3e\u5230 $i$\uff0c\u5982\u679c\u5c06 $i$ \u7684\u6df1\u5ea6\u51cf\u5c11 $1$\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u51cf\u5c11 $n-i$\u3002\u5206\u6210\u4e24\u79cd\u60c5\u51b5\u8003\u8651\u3002\n\n\u5982\u679c $ans-(n-i) \\ge d$\uff0c\u5219\u5c06 $i$ \u7684\u6df1\u5ea6\u51cf\u5c11 $1$\u3002\n\n\u5426\u5219\u9000\u51fa\uff0c\u56e0\u4e3a\u5728\u4e4b\u540e\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6ee1\u8db3\u7684\u70b9\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5c06 $n-(ans-d)+1$ \u8fd9\u4e2a\u70b9\u7684\u6df1\u5ea6$-1$ \u5373\u53ef\u3002\n\n\u6240\u4ee5\uff0c\u4efb\u4f55\u65f6\u5019\uff0c\u6784\u9020\u51fa\u7684\u6811\u90fd\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811 $+$ \u4e00\u6761\u94fe\u7684\u5f62\u5f0f\uff0c\u7279\u522b\u7684\uff0c\u5f53 $i=2^k(k\\in N)$ \u65f6\uff0c\u65e0\u6cd5\u5c06 $i$ \u7684\u6df1\u5ea6\u51cf\u5c11 $1$\u3002\uff08\u4e0a\u9762\u5df2\u7ecf\u6ee1\u4e86\uff09\n\n\u8f93\u51fa\u7684\u65f6\u5019\u5206\u6210\u4e24\u90e8\u5206\u8f93\u51fa\u3002\n\n\u5148\u8f93\u51fa\u4e0a\u9762\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u7b2c $i$ \u4e2a\u70b9\u7684\u7236\u4eb2\u5373\u4e3a $i/2$ \u3002\n\n\u7136\u540e\u8f93\u51fa\u94fe\uff0c\u7b2c $i$ \u4e2a\u70b9\u7684\u7236\u4eb2\u5373\u4e3a $i-1$ \uff0c\u7279\u6b8a\u5730\uff0c\u4e3a\u4e86\u5c06\u7b2c $n-(ans-d)+1$ \u4e2a\u7684\u6df1\u5ea6\u5c11 $1$ \uff0c\u53ea\u7528\u5c06\u4ed6\u7684\u7236\u4eb2\u8bbe\u4e3a $i-2$ \u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6\u597d\u50cf\u53ea\u6709 $O(d/n+\\log n)$\uff0c\u5341\u5206\u4f18\u79c0\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#include<windows.h>\nusing namespace std;\n#define re register\n#define int long long\ninline int read() {\n\tre int t=0;\n\tre char v=getchar();\n\twhile(v<'0')v=getchar();\n\twhile(v>='0') {\n\t\tt=(t<<3)+(t<<1)+v-48;\n\t\tv=getchar();\n\t}\n\treturn t;\n}\nint t,n,k,num,cnt,ia,l,lst,mn,p;\nsigned main() {\n\tt=read();\n\twhile(t--) {\n\t\tn=read();\n\t\tk=read();\n\t\tp=n-1;\n\t\tmn=0;\n\t\tfor(re int i=1; i<=n; ++i) {\n\t\t\tif((1ll<<i)<=p) {\n\t\t\t\tp-=(1ll<<i);\n\t\t\t\tmn+=i*(1ll<<i);\n\t\t\t} else {\n\t\t\t\tmn+=p*i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(mn>k) {\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tk=n*(n-1)/2-k;\n\t\tif(k<0) {\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tia=0;\n\t\tcnt=1;\n\t\tlst=0;\n\t\tputs(\"YES\");\n\t\tfor(re int i=1; i<=n; ++i) {\n\t\t\t++cnt;\n\t\t\tfor(re int j=1; j<(1ll<<i); ++j) {\n\t\t\t\tif(cnt>=n) {\n\t\t\t\t\tia=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif((n-cnt)<=k) {\n\n\t\t\t\t\tk=k-(n-cnt);\n\t\t\t\t\t++cnt;\n\t\t\t\t} else {\n\t\t\t\t\tia=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ia)break;\n\t\t}\n\t\tif(cnt>n)cnt=n;\n\t\tfor(re int i=2; i<=cnt; ++i) {\n\t\t\tprintf(\"%lld \",i/2);\n\t\t}\n\t\tlst=cnt;\n\t\tfor(re int i=lst+1; i<=n; ++i) {\n\t\t\tif(i==n-k+1)printf(\"%lld \",i-2);\n\t\t\telse printf(\"%lld \",i-1);\n\t\t}\n\t\tputchar('\\n');\n\n\t}\n}\n```\n\n\n\n\n\n\n\n\n",
        "postTime": 1582702633,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1311E \u3010Construct the Binary Tree\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7531\u4e8e $n,d$ \u90fd\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u66b4\u529b\u5373\u53ef\u3002\n\n\u8003\u8651\u5c06 $solve(n,d)$ \u5b9a\u4e49\u4e3a\u6c42\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u6df1\u5ea6\u4e4b\u548c\u4e3a $d$\u3002\n\n\u90a3\u4e48\u679a\u4e3e\u5de6\u53f3\u5b50\u6811\u7684\u5927\u5c0f\u548c\u6df1\u5ea6\u548c\uff0c\u8bbe\u5de6\u5b50\u6811\u5927\u5c0f\u4e3a $s$\uff0c\u6df1\u5ea6\u548c\u4e3a $t$\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5206\u6cbb $solve(s,t)$ \u548c $solve(n-1-s,d-(n-1)-t)$\uff0c\u8fd9\u91cc\u6bd4\u8f83\u663e\u7136\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n\u95ee\u9898\u662f\uff0c\u6211\u4eec\u600e\u4e48\u77e5\u9053\u8fd9\u79cd\u9012\u5f52\u662f\u5426\u53ef\u884c\u5462\uff1f\u5982\u679c\u9012\u5f52\u5230\u5e95\u7684\u8bdd\u5c31\u76f8\u5f53\u4e8e DFS\uff0c\u590d\u6742\u5ea6\u663e\u7136\u662f\u6307\u6570\u7ea7\u522b\u7684\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u8003\u8651 $solve(n,d)$ \u662f\u5426\u53ef\u80fd\uff0c\u5373\u6c42\u51fa $n$ \u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u548c\u6700\u5927\u6df1\u5ea6\u548c\uff0c\u770b\u770b $d$ \u662f\u5426\u5728\u8fd9\u8303\u56f4\u4e2d\u3002\n\n\u6700\u5c0f\u6df1\u5ea6\u548c\uff1a\u5373\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u53ef\u4ee5 $O(\\log n)$ \u8ba1\u7b97\uff08\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5 $O(1)$ \u8ba1\u7b97\uff09\u3002\n\n\u6700\u5927\u6df1\u5ea6\u548c\uff1a\u5373\u94fe\uff0c\u53ef\u4ee5 $O(1)$ \u8ba1\u7b97\u3002\n\n\u4e8e\u662f\u6211\u4eec\u679a\u4e3e $s$\uff0c\u5224\u65ad\u4e00\u4e0b $s$ \u548c $n-1-s$ \u4e2a\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u5206\u522b\u53d6\u6700\u5927\u6216\u6700\u5c0f\uff0c\u80fd\u5426\u4f7f\u5f97 $d$ \u5361\u5728\u8fd9\u4e2a\u8303\u56f4\u4e2d\u95f4\uff0c\u5373\u53ef\u5224\u5b9a\u662f\u5426\u53ef\u884c\u3002\n\n\u6b64\u65f6\u4e0d\u80fd\u518d\u679a\u4e3e $t$\uff0c\u5426\u5219\u53c8\u53d8\u6210\u4e86\u6307\u6570\u7ea7\u3002\n\n\u8bbe $min(n)$ \u8868\u793a $n$ \u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6\u548c\uff0c$max(n)$ \u8868\u793a\u6700\u5927\u6df1\u5ea6\u548c\uff0c\u90a3\u4e48\uff1a\n\n1. $min(s)+max(n-1-s)\\ge d$\uff0c\u90a3\u4e48\u6211\u4eec\u4ee4 $t=min(s)$ \u5373\u53ef\uff0c\u53ef\u81ea\u884c\u9a8c\u8bc1\u6b63\u786e\u6027\uff1b\n\n2. $min(s)+max(n-1-s)<d$\uff0c\u90a3\u4e48\u6211\u4eec\u4ee4 $t=d-(n-1)-max(n-1-s)$ \u5373\u53ef\uff0c\u4ea6\u53ef\u81ea\u884c\u9a8c\u8bc1\u3002\n\n\u4e8e\u662f\u4e24\u8fb9\u9012\u5f52\uff0c\u6700\u5dee\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=5010;\nint t,n,d,f[MAXN];\nint getmin (int x) {\n\tint res=0,i;\n\tx--;\n\tfor (i=1;(1<<i)<=x;i++) {res+=i*(1<<i),x-=(1<<i);}\n\tres+=i*x;\n\treturn res;\n}\nint getmax (int x) {return x*(x-1)/2;}\nbool solve (int n,int l,int r,int d) {\n\tif (getmin(n)>d||getmax(n)<d) {return 0;}\n\tif (l>=r) {return 1;}\n\tn--;\n\td-=n;\n\tfor (int i=1;i<=n;i++) {\n\t\tint n1=getmax(i),n2=getmax(n-i),m1=getmin(i),m2=getmin(n-i);\n\t\tif (n1+n2>=d&&m1+m2<=d) {\n\t\t\tf[l+1]=l;\n\t\t\tif (i<n) {f[l+i+1]=l;}\n\t\t\tif (m1+n2>=d) {solve(i,l+1,l+i,m1),solve(n-i,l+i+1,l+n,d-m1);}\n\t\t\telse {solve(i,l+1,l+i,d-n2),solve(n-i,l+i+1,l+n,n2);}\n\t\t\treturn 1;\n\t\t}\n\t}\n}\nint main () {\n\tscanf(\"%d\",&t);\n\tfor (int ii=1;ii<=t;ii++) {\n\t\tmemset(f,0,sizeof(f));\n\t\tscanf(\"%d%d\",&n,&d);\n\t\tif (!solve(n,1,n,d)) {printf(\"NO\\n\");}\n\t\telse {\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor (int i=2;i<=n-1;i++) {printf(\"%d \",f[i]);}\n\t\t\tprintf(\"%d\\n\",f[n]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1582690723,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1311E \u3010Construct the Binary Tree\u3011"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n\u4e0e\u5176\u8bf4\u662f\u6811\u9898\uff0c\u8fd8\u4e0d\u5982\u8bf4\u662f\u6a21\u62df\u9898\u3002\n\n\u5f88\u5bb9\u6613\u5224\u65ad\u4e0a\u4e0b\u754c\uff1a\u4e0a\u754c\u5c31\u662f\u94fe\uff0c\u4e0b\u754c\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\n\n\u6784\u9020\u7684\u8bdd\uff0c\u5148\u6784\u9020\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u7136\u540e\u62ce\u51fa\u6765\u4e00\u6761\u94fe\uff08\u6700\u957f\u94fe\uff09\uff0c\u4ece\u540e\u5f80\u524d\uff08\u56e0\u4e3a\u662f\u6309\u7f16\u53f7\u6784\u9020\u7684\u521d\u59cb\u6811\uff09\u4f9d\u6b21\u5c1d\u8bd5\u628a\u5f53\u524d\u8282\u70b9\u94fe\u5230\u4e0b\u4e00\u5c42\u3002\u8fd9\u6837\uff0c\u6df1\u5ea6\u5c31\u4f1a\u9010\u4e00\u9012\u589e\u3002\u6240\u4ee5\u4e00\u5b9a\u4f1a\u6709\u5408\u6cd5\u89e3\u3002\n\n\u53ea\u9700\u8981\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u884c\u3002\n\n\u8bf4\u7740\u5bb9\u6613\uff0c\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=5005;\nint t,n,d,tot;\nint fa[maxn],deep[maxn],chain[maxn];\nbool v[maxn];\nvoid clear()\n{\n\ttot=0;\n\tmemset(v,0,sizeof(v));\n\tchain[0]=1;\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tclear();\n\t\tscanf(\"%d%d\",&n,&d);\n\t\tfor(int i=2;i<=n;i++)\n\t\t{\n\t\t\tfa[i]=i/2;\n\t\t\tdeep[i]=deep[fa[i]]+1;\n\t\t\td-=deep[i];\n\t\t\ttot=max(tot,deep[i]);\n\t\t}\n\t\tif(d<0)\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tint p=n;\n\t\twhile(p)\n\t\t{\n\t\t\tchain[deep[p]]=p;\n\t\t\tv[p]=1;\n\t\t\tp=fa[p];\n\t\t}\n\t\tfor(int i=n;i>=1;i--)\n\t\t{\n\t\t\tif(v[i])\n\t\t\t\tcontinue;\n\t\t\tint mx=tot;\n\t\t\twhile(deep[fa[i]]<mx && d)\n\t\t\t{\n\t\t\t\tfa[i]=chain[deep[fa[i]]+1],deep[i]=deep[fa[i]]+1;\n\t\t\t\tif(deep[i]>tot)\n\t\t\t\t\tchain[++tot]=i,v[i]=1;\n\t\t\t\td--;\n\t\t\t}\n\t\t}\n\t\tif(d)\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tputs(\"YES\");\n\t\tfor(int i=2;i<=n;i++)\n\t\t\tprintf(\"%d \",fa[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1605247972,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1311E \u3010Construct the Binary Tree\u3011"
    },
    {
        "content": "[door](https://codeforces.ml/contest/1311/problem/E)\n\n\u9898\u610f\uff1a\u8981\u6c42\u6784\u9020\u4e00\u9897$n$\u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u4f7f\u5f97\u6b64\u4e8c\u53c9\u6811\u6240\u6709\u6df1\u5ea6\u548c\u4e3a$d$\uff0c$n,d\\leq5000$\u3002(\u6839\u7684\u6df1\u5ea6\u4e3a0)\n\n### my idea\n\u5bf9\u4e8e1\u9897n\u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\u800c\u8a00\uff0c\u6df1\u5ea6\u548c\u6700\u591a\u7684\u60c5\u51b5\u662f\u4e00\u6761\u94fe\uff0c\u5148\u94a6\u5b9a\u5b83\u662f\u4e00\u6761\u94fe\uff0c\u7136\u540e\u6bcf\u6b21\u8003\u8651\u4ece\u6df1\u5ea6\u9ad8\u7684\u5411\u4e0a\u4e00\u5c42\u632a\u4e00\u4e2a\u70b9\uff0c\u8fd9\u6837\u6df1\u5ea6\u548c\u51cf\u4e00\uff0c\u603b\u80fd\u632a\u5230\u76ee\u6807\u6001\u3002\n\n\u4e8b\u5b9e\u8bc1\u660e\u6709\u4e9b\u60c5\u51b5\u65e0\u6cd5\u4ece\u6df1\u5ea6\u9ad8\u7684\u70b9\u5411\u4e0a\u4e00\u5c42\u632a\u4e00\u4e2a(\u6251\u8857\n\n### soultion\n\u53cd\u8fc7\u6765\u60f3\u3002\n\n\u6211\u4eec\u5148\u8bb0\u5f55\u6bcf\u4e00\u5c42\u70b9\u7684\u4e2a\u6570\uff0c\u4e4b\u540e\u6784\u9020\uff0c\u53ea\u8981\u6bcf\u5c42\u70b9\u7684\u4e2a\u6570\u5408\u6cd5\uff0c\u603b\u80fd\u627e\u5230\u6784\u9020\u65b9\u6848\u3002\n\n\u6211\u4eec\u5148\u94a6\u5b9a\u6240\u6709\u7684\u70b9\u90fd\u96c6\u4e2d\u5728\u6df1\u5ea6\u5c3d\u53ef\u80fd\u4f4e\u7684\u5730\u65b9\uff0c\u5373\u5148\u653e\u7b2c\u4e00\u5c42\uff0c\u518d\u7b2c\u4e8c\u5c42\uff0cetc\u3002\u5982\u679c\u8fd9\u6837\u7684\u548c\u5c31$>d$\u90a3\u4e48\u65e0\u89e3\u3002\u4e0d\u7136\u6bcf\u6b21\u64cd\u4f5c\uff0c\u6211\u4eec\u4ece\u6df1\u5ea6\u9ad8\u7684\u5730\u65b9\u5411\u524d\u626b\u63cf\u6bcf\u4e00\u5c42\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u70b9\u6570$>1$\u7684\uff0c\u8fd9\u6837\u5b83\u7684\u540e\u4e00\u5c42\u8981\u4e48\u6ca1\u6709\u70b9\uff0c\u8981\u4e48\u6709\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u4ece\u8fd9\u4e00\u5c42\u5411\u540e\u632a\u4e00\u4e2a\u70b9\uff0c\u5408\u6cd5\u4e14\u6df1\u5ea6\u548c\u51cf\u4e00\u3002\n\n\u8fd9\u6837\u4e00\u76f4\u505a\u5230$s=d$\u6216\u8005\u65e0\u6cd5\u64cd\u4f5c\uff0c\u5373\u6240\u6709\u5c42\u90fd\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u6070\u5bf9\u5e94\u4e86\u6df1\u5ea6\u6700\u6df1(\u4e3a\u4e00\u6761\u94fe\u7684\u60c5\u51b5)\u3002\n\n\u4e4b\u540e\u4e00\u5c42\u5c42\u8d4b\u503c\uff0c\u6784\u9020\u5373\u53ef\u3002\n\n**code**\n```cpp\n//love yjl forever\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long \n#define pii pair<int,int>\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\nconst int INF=0x3f3f3f3f,N=5000+5;\nint n,m;\nint ce[N],lim[N],tot,s;\nint fa[N];\nbool add()\n{\n\tbool f=0;\n\tfor(int i=tot;i>0;i--)\n\t{\n\t\tif((ce[i]-1)*2>=ce[i+1]+1)\n\t\t{\n\t\t\tce[i]--;\n\t\t\tce[i+1]++;\n\t\t\tif(i+1>tot)\n\t\t\t\ttot=i+1;\n\t\t\ts++;\n\t\t\tf=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn f;\n}\nvoid init()\n{\n\ts=0;tot=0;\n\tmemset(ce,0,sizeof(ce));\n\tmemset(fa,0,sizeof(fa));\n}\nvoid print()\n{\n\tfor(int i=1;i<=tot;i++)\n\t\tcout<<ce[i]<<\" \";\n\tcout<<endl;\n}\nint main()\n{\n/*\tfreopen(\"\",\"r\",stdin);\n\tfreopen(\"\",\"w\",stdout);*/\n\tint i,T,j;\n\tcin>>T;\n\tlim[0]=1;\n\tfor(i=1;i<=5000;i++)\n\t{\n\t\tif(i>=20)\n\t\t\tlim[i]=lim[i-1];\n\t\telse \n\t\t\tlim[i]=lim[i-1]*2;\n\t}\n\twhile(T--)\n\t{\n\t\tcin>>n>>m;\n\t\tinit();\n\t\tn--;\n\t\tce[0]=1;\n\t\tint left=n;\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\ttot=i;\n\t\t\tif(left-lim[i]>0)\n\t\t\t{\n\t\t\t\tleft-=lim[i];\n\t\t\t\tce[i]=lim[i];\n\t\t\t\ts+=lim[i]*i;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tce[i]+=left;\n\t\t\t\ts+=left*i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n//\t\tcout<<s<<endl;\n//\t\tfor(i=1;i<=tot;i++)\n//\t\t\tcout<<ce[i]<<\" \";\n//\t\tcout<<endl;\n\t\tif(s>m) \n\t\t{\n\t\t\tcout<<\"NO\"<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tbool f=1;\n\t\twhile(s<m)\n\t\t{\n\t\t\tif(!add()){\n\t\t\t\tf=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t//\tprint();\n\t\t}\n\t\tif(!f) \n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"YES\\n\");\n//\t\tprint();\n//\t\tcout<<s<<endl;\n\t\tint num=0;\n\t\tvector<int> v[2];\n\t\tv[0].clear();v[1].clear();\n\t\tv[1].pb(1);\n\t\tnum=1;\n\t\tfor(i=1;i<=tot;i++)\n\t\t{\n\t\t\t//v[i&1],v[(i&1)^1];\n\t\t\tv[(i&1)^1].clear();\n\t\t\tfor(j=1;j<=ce[i];j++)\n\t\t\t{\n\t\t\t\tnum++;\n\t\t\t\tfa[num]=v[i&1][(j-1)/2];\n\t\t\t\tv[(i&1)^1].pb(num);\n\t\t\t}\n\t\t}\n\t\tfor(i=2;i<=n+1;i++)\n\t\t\tcout<<fa[i]<<\" \";\n\t\tcout<<endl;\n\t}\n}\n```",
        "postTime": 1582798025,
        "uid": 20338,
        "name": "zhmshitiancai",
        "ccfLevel": 7,
        "title": "CF 1311 E"
    },
    {
        "content": "# E-Construct Binary Tree\n\n\u5b9e\u73b0\u7e41\u7410\u7684\u9898\u76ee\u3002[\u9898\u76ee\u94fe\u63a5](https://codeforces.ml/contest/1311/problem/E)\n\n## \u9898\u76ee\u53d9\u8ff0\n\n\u8981\u6c42\u4f60\u6784\u9020\u4e00\u68f5\u6811\u4f7f\u5f97\u4ed6\u6709$n$\u4e2a\u8282\u70b9\u5e76\u4e14\u6240\u6709\u7ed3\u70b9\u7684\u6df1\u5ea6\u503c\u548c\u4f4d$d$\u3002\n\n## \u9898\u89e3\n\n\u5176\u5b9e\u90fd\u662f\u8c03\u6574\u6cd5\u3002\n\n### A\n\n\u5927\u4f17\u5199\u6cd5\u3002\n\n\u9898\u89e3\u662f\u5148\u641e\u4e00\u6761\u94fe\uff0c\u7136\u540e\u5bf9\u4e8e\u8fd9\u6761\u94fe\u518d\u8c03\u6574\u3002\u6bcf\u6b21\u9009\u62e9\u6700\u4e0b\u9762\u7684\u70b9\uff0c\u770b\u6302\u5728\u54ea\u91cc\u5408\u9002\u3002\u6bcf\u6b21\u8c03\u6574\u7684\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\uff08\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u586b\u6210\u6ee1\u4e8c\u53c9\u6811\u548c\u586b\u6210\u4e00\u6761\u94fe\u8fd9\u6bb5\u533a\u95f4\u5185\u7684\u6df1\u5ea6\u548c\u90fd\u53ef\u4ee5\uff09\u3002\n\n### B\n\n\u6211\u7684\u5199\u6cd5\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4f5c\u7ec8\u548c\u7b54\u6848\u6709\u5173\u7cfb\u7684\u5c31\u662f\u6bcf\u4e00\u5c42\u6709\u591a\u5c11\u4e2a\u8282\u70b9\uff1b\u7236\u5b50\u5173\u7cfb\u4e4b\u7c7b\u7684\u4e0d\u91cd\u8981\u3002\u6240\u4ee5\u6700\u5f00\u59cb\u586b\u6210\u6ee1\u4e8c\u53c9\u6811\u7684\u5f62\u5f0f\uff0c\u7136\u540e\u6bcf\u6b21\u628a\u6700\u9760\u4e0b\u7684\u4e00\u5c42\u8282\u70b9\u4e2a\u6570\u4e0d\u4e3a1\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u653e\u5230\u4e0b\u4e00\u5c42\u53bb\u3002\u552f\u4e00\u53ef\u80fd\u4e0d\u884c\u7684\u5c31\u662f\u5bf9\u4e8e\u76f8\u90bb\u4e24\u5c42\uff0c\u4e0b\u9762\u4e00\u5c42\u7684\u8282\u70b9\u6570\u6bd4\u4e0a\u9762\u4e00\u5c42\u7684\u4e24\u500d\u5927\uff0c\u6240\u4ee5\u4e0d\u884c\u3002\u4f46\u662f\u6bcf\u6b21\u9009\u62e9\u7684\u662f\u90a3\u4e00\u5c42\u8282\u70b9\u4e2a\u6570\u4e0d\u4e3a1\u7684\uff0c\u800c\u8fd9\u4e00\u5c42\u7684\u4e0b\u4e00\u5c42\u8282\u70b9\u4e2a\u6570\u4e00\u5b9a\u4e3a1\uff0c\u4e8e\u662f\u5411\u4e0b\u653e\u4e00\u5b9a\u53ef\u884c\u3002\n\n## \u4ee3\u7801\n\n\u6211\u7684\u5199\u6cd5\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\nconst int maxNode = 5e3 + 5;\nint T, nbNode, deepSum, dep[maxNode], fa[maxNode];\nvector<int> layer[maxNode];\nint main() {\n\tscanf(\"%d\", &T);\n\tfor (int cas = 1; cas <= T; ++cas) {\n\t\tfor (int i = 1; i <= nbNode; ++i) layer[i].clear(), fa[i] = 0;\n\t\tscanf(\"%d%d\", &nbNode, &deepSum);\n\t\tint maxd = 0;\n\t\tlayer[0].push_back(1);\n\t\tfor (int i = 2; i <= nbNode; ++i)\n\t\t\tdep[i] = dep[i>>1] + 1, layer[dep[i]].push_back(i), \n\t\t\tmaxd = max(maxd, dep[i]), deepSum -= dep[i];\n\t\tif (deepSum < 0) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue ;\n\t\t}\n\t\tbool flag = 1;\n\t\twhile (deepSum) {\n\t\t\tint change = maxd;\n\t\t\twhile (change >= 0 && layer[change].size() == 1) --change;\n\t\t\tif (change == 0) {\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\tflag = 0;\n\t\t\t\tbreak ;\n\t\t\t}\n\t\t\tint node = layer[change][layer[change].size() - 1];\n\t\t\tlayer[change].pop_back();\n\t\t\tlayer[change + 1].push_back(node);\n\t\t\tmaxd = max(maxd, change + 1);\n\t\t\t--deepSum;\n\t\t}\n\t\tif (flag) {\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor (int i = 1; i <= nbNode; ++i) {\n\t\t\t\tfor (int pos = 0; pos < layer[i].size(); ++pos) {\n\t\t\t\t\tfa[layer[i][pos]] = layer[i - 1][pos / 2];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 2; i <= nbNode; ++i)\n\t\t\t\tprintf(\"%d \", fa[i]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n\u5927\u4f17\u5199\u6cd5\uff08\u76f4\u63a5\u6284\u7684[Tutorial](https://codeforces.ml/blog/entry/74224)\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n, d;\n\t\tcin >> n >> d;\n\t\tint ld = 0, rd = n * (n - 1) / 2;\n\t\tfor (int i = 1, cd = 0; i <= n; ++i) {\n\t\t\tif (!(i & (i - 1))) ++cd;\n\t\t\tld += cd - 1;\n\t\t}\n\t\tif (!(ld <= d && d <= rd)) {\n\t\t\tcout << \"NO\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\n\t\tvector<int> par(n);\n\t\tiota(par.begin(), par.end(), -1);\n\t\t\n\t\tvector<int> cnt(n, 1);\n\t\tcnt[n - 1] = 0;\n\t\t\n\t\tvector<int> bad(n);\n\t\t\n\t\tvector<int> dep(n);\n\t\tiota(dep.begin(), dep.end(), 0);\n\t\t\n\t\tint cur = n * (n - 1) / 2;\n\t\twhile (cur > d) {\n\t\t\tint v = -1;\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tif (!bad[i] && cnt[i] == 0 && (v == -1 || dep[v] > dep[i])) {\n\t\t\t\t\tv = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tassert(v != -1);\n\t\t\tint p = -1;\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tif (cnt[i] < 2 && dep[i] < dep[v] - 1 && (p == -1 || dep[p] < dep[i])) {\n\t\t\t\t\tp = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (p == -1) {\n\t\t\t\tbad[v] = 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tassert(dep[v] - dep[p] == 2);\n\t\t\t--cnt[par[v]];\n\t\t\t--dep[v];\n\t\t\t++cnt[p];\n\t\t\tpar[v] = p;\n\t\t\t--cur;\n\t\t}\n\t\n\t\tcout << \"YES\" << endl;\n\t\tfor (int i = 1; i < n; ++i) cout << par[i] + 1 << \" \";\n\t\tcout << endl;\n\t}\n\t\t\n\treturn 0;\n}\n```\n\n\n\n## \u77e5\u8bc6\u70b9\n\n+ \u6784\u9020\u9898\uff0c\u6709\u4e00\u79cd\u601d\u8def\u5c31\u662f\u6784\u9020\u4e00\u4e2a\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u7136\u540e\u4e0d\u65ad\u8c03\u6574\u3002\n+ \u53ef\u4ee5\u8003\u8651\u7b80\u5316\u95ee\u9898\uff08\u6bd4\u5982\u8fd9\u9053\u9898\u7236\u5b50\u5173\u7cfb\u4f1a\u7ed9\u4f60\u5e26\u6765\u9ebb\u70e6\u3002\u3002\u3002\uff09\u3002\n+ \u591a\u7528\u5c01\u88c5\u597d\u7684\u4e1c\u897f\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u7684\u601d\u8def\u53d8\u5f97\u6e05\u6670...\uff08\u5148\u5199\u51fa\u6765\uff0c\u522b\u5728\u4e4e\u6548\u7387\uff0c\u7528\u4e86\u4e2a`vector`\u5176\u5b9e\u4e5f\u5c31\u5e38\u6570\u5927\u70b9\u561b\uff09",
        "postTime": 1582649597,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "E-Construct Binary Tree\uff08\u6784\u9020\uff0c\u601d\u7ef4\uff09"
    }
]