[
    {
        "content": "\u4e00\u76f4\u65e0\u9650\u8d70\u4e0b\u53bb\u5b9e\u5728\u7384\u5b66\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u8f6c\u5316\u4e00\u4e0b\u3002\n\n\u56e0\u4e3a\u683c\u5b50\u6709\u9650\uff0c\u6240\u4ee5 **\u65e0\u9650 $=$ \u5faa\u73af**\u3002\n\n\u6362\u4e00\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6446\u4e0a\u673a\u5668\u4eba\uff0c\u4e00\u76f4\u8d70\u8d77\u6765\uff0c\u5220\u53bb\u4f1a\u91cd\u590d\u7684\u3002\n\n\u663e\u7136\uff0c\u6bcf\u4e2a\u673a\u5668\u4eba\u90fd\u662f\u5148\u7ecf\u8fc7\u4e00\u4e9b\u5954\u6ce2\uff0c\u7136\u540e\u5728\u4e00\u4e2a\u73af\u91cc\u9762\u4e00\u76f4\u8d70\u4e0b\u53bb\u3002\n\n\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u968f\u4fbf\u5f04\u6765\u4e24\u4e2a\u673a\u5668\u4eba\uff0c\u600e\u4e48\u77e5\u9053\u5b83\u4eec\u4f1a\u4e0d\u4f1a\u91cd\u590d\u5462\uff1f\n\n\u9996\u5148\uff0c\u5047\u8bbe\u4e24\u4e2a\u673a\u5668\u4eba\u5404\u81ea\u5954\u6ce2\u65f6\u6ca1\u76f8\u9047\uff0c\u4e5f\u5c31\u662f\u5230\u4e86\u81ea\u5df1\u7684\u76ee\u6807\u73af\u4e2d\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u76f8\u9047\u4e86\u3002\u8fd9\u5f88\u597d\u7406\u89e3\uff0c\u5982\u679c\u5b83\u4eec\u4e0d\u5728\u4e00\u4e2a\u73af\u4e2d\uff0c\u90a3\u663e\u7136\u4e0d\u53ef\u80fd\u78b0\u5230\uff1b\u5982\u679c\u5728\u4e00\u4e2a\u73af\u4e2d\uff08\u5f53\u7136\u524d\u63d0\u662f\u4e0d\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff09\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u4e86\uff0c\u4e5f\u4e0d\u4f1a\u76f8\u9047\u3002\n\n\u6240\u4ee5\uff0c\u4e24\u4e2a\u673a\u5668\u4eba\u76f8\u9047\u7684\u5145\u8981\u6761\u4ef6\u5c31\u662f\u5728\u5954\u6ce2\u7684\u8def\u9014\u4e0a\u76f8\u9047\uff0c\u800c\u4e14\u4e4b\u540e\uff0c\u8be5\u76f8\u9047\u7684\u5c31\u4e00\u76f4\u5728\u4e00\u8d77\u8d70\u4e86\uff0c\u4e0d\u8be5\u76f8\u9047\u7684\u5c31\u6c38\u8fdc\u78b0\u4e0d\u5230\u4e86\u3002\n\n\u6240\u4ee5\uff0c\u6bcf\u4e00\u6761\u9053\u8def\u7684\u957f\u5ea6\u80af\u5b9a\u4e0d\u4f1a\u8d85\u8fc7\u56fe\u7684\u603b\u5927\u5c0f\uff08\u5373 $nm$\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8ba9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u673a\u5668\u4eba\u90fd\u8d70 $nm$ \u6b65\uff0c\u7136\u540e\u7edf\u8ba1\u4f4d\u7f6e\u5c31\u884c\u4e86\u3002\n\n\u81f3\u4e8e\u5177\u4f53\u600e\u4e48\u7edf\u8ba1\uff0c\u53ef\u4ee5\u5f04\u4e00\u4e2a $have_{0/1, \\text{pos}}$ \u8868\u793a\u6700\u7ec8 $\\text{pos}$ \u8fd9\u4e2a\u4f4d\u7f6e\u6709\u6ca1\u6709\u9ed1 / \u767d\u8272\u7684\u673a\u5668\u4eba\uff0c\u7136\u540e\u4ee4 $tot$ \u8868\u793a\u603b\u6570\uff0c$black$ \u8868\u793a\u603b\u9ed1\u8272\u673a\u5668\u4eba\u6570\uff0c\u90a3\u4e48\u5c31\u662f\uff1a\n\n$$\\begin{array}{l|l}1 & \\textbf{for } i \\gets 1 \\textbf{ to } nm \\textbf{ do} \\\\ 2 & \\qquad \\textbf{if } have_{0, i} = \\text{true} \\textbf{ then } tot \\gets tot + 1, black \\gets black + 1 \\\\ 3 & \\qquad \\textbf{else if } have_{1, i} = \\text{true} \\textbf{ then } tot \\gets tot + 1 \\\\ 4 & \\qquad \\textbf{end if} \\\\ 5 & \\textbf{end for}\\end{array}$$\n\n\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int NM = 1e6 + 5, LGSZ = 21;\nint n, m, nxt[LGSZ][NM];\nchar dir[NM], col[NM], buf[NM];\nbool have[2][NM];\nint main() \n{\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) \n\t{\n\t\tscanf(\"%d %d\", &n, &m);\n\t\tfor(int i = 1; i <= n * m; i++)\n\t\t\thave[0][i] = have[1][i] = false;\n\t\tfor(int i = 1; i <= n; i++) \n\t\t{\n\t\t\tscanf(\"%s\", buf + 1);\n\t\t\tfor(int j = 1; j <= m; j++)\n\t\t\t\tcol[(i - 1) * m + j] = buf[j];\n\t\t}\n\t\tfor(int i = 1; i <= n; i++) \n\t\t{\n\t\t\tscanf(\"%s\", buf + 1);\n\t\t\tfor(int j = 1; j <= m; j++)\n\t\t\t\tdir[(i - 1) * m + j] = buf[j];\n\t\t}\n\t\tfor(int i = 1; i <= n * m; i++)\n\t\t\tswitch(dir[i])\n\t\t\t{\n\t\t\t\tcase 'U': nxt[0][i] = i - m; break;\n\t\t\t\tcase 'D': nxt[0][i] = i + m; break;\n\t\t\t\tcase 'L': nxt[0][i] = i - 1; break;\n\t\t\t\tcase 'R': nxt[0][i] = i + 1; break;\n\t\t\t}\n\t\tfor(int i = 1; i < LGSZ; i++)\n\t\t\tfor(int j = 1; j <= n * m; j++)\n\t\t\t\tnxt[i][j] = nxt[i - 1][nxt[i - 1][j]];\n\t\tfor(int i = 1; i <= n * m; i++)\n\t\t{\n\t\t\tint pos = i;\n\t\t\tfor(int j = LGSZ - 1; ~j; j--)\n\t\t\t\tif(n * m >> j & 1) pos = nxt[j][pos];\n\t\t\thave[col[i] ^ 48][pos] = true;\n\t\t}\n\t\tint black = 0, tot = 0;\n\t\tfor(int i = 1; i <= n * m; i++)\n\t\t{\n\t\t\tif(have[0][i]) tot++, black++;\n\t\t\telse if(have[1][i]) tot++;\n\t\t}\n\t\tprintf(\"%d %d\\n\", tot, black);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1587227528,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1335F \u3010Robots on a Grid\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1335F) \n\n\u770b\u5230\u5f88\u591a\u9898\u89e3\u90fd\u662f\u5199\u7684 $\\operatorname{O}(nm\\cdot \\log nm)$ \u7684\u500d\u589e\uff0c\u8fd9\u91cc\u5c06\u4e00\u79cd $O(nm)$ \u7684\u505a\u6cd5\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ed9\u51fa\u7684\u7f51\u683c\u56fe\u8f6c\u5316\u4e3a\u82e5\u5e72\u68f5\u5f62\u5982\u4e0b\u56fe\u7684**\u5185\u5411\u57fa\u73af\u6811**    \n\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6211\u4eec\u5c06\u73af\u4e0a\u7684\u8282\u70b9\u4ece $0$ \u5f00\u59cb\u4f9d\u6b21\u7f16\u53f7\u3002\u6ee1\u8db3\u5bf9\u4e8e\u73af\u4e0a\u7684\u6bcf\u4e00\u6761\u8fb9 $[x \\rightarrow y]$\uff0c$x+1=y$\n\n![image.png](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDcvMDkvTEVqZmVwbnZhUG9iR2xGLnBuZw?x-oss-process=image/format,png)\n\u63a5\u7740\uff0c\u6211\u4eec\u8ba9\u73af\u4e0a\u70b9\u7684\u7f16\u53f7\u6bcf\u79d2\u949f\u6cbf\u7740**\u73af\u4e0a\u7684\u8fb9**\u79fb\u52a8\u4e00\u6b21  \n\n![image.png](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDcvMDkvR0NpY0tETVpibXY0OWZ4LnBuZw?x-oss-process=image/format,png)\n\n\u8fd9\u6837\uff0c\u5bf9\u4e8e\u6240\u6709\u70b9\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u6c42\u51fa\u6765\u4ed6\u6700\u540e\u5230\u8fbe\u7684\u73af\u4e0a\u7684\u70b9\u7684\u7f16\u53f7\uff0c\u4ece\u800c\u8ba1\u7b97\u6b64\u57fa\u73af\u6811\u4e0a\u6709\u591a\u5c11\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u653e\u5728\u9ed1\u8272\u70b9\u4e0a  \n\u4e3e\u4e2a\u6817\u5b50\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u5728\u70b9 $x$ \u4e0a\u7684\u673a\u5668\u4eba\uff0c\u8bbe\u4ed6\u5230\u73af\u4e0a\u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $cur$\uff0c\u73af\u4e0a\u70b9\u7684\u4e2a\u6570\u4e3a $val$\uff0c\u79bb\u4ed6\u6700\u8fd1\u7684\u73af\u4e0a\u7684\u70b9\u7684\u7f16\u53f7\u4e3a $pos$\u3002\u90a3\u4e48\uff0c\u5b83\u5728 $cur$ \u79d2\u540e\u9047\u5230\u7684\u73af\u4e0a\u70b9\u7684\u7f16\u53f7\u5373\u4e3a $(pos-cur) \\mod val$\u3002**\u6ce8\u610f\u8d1f\u6570\u7684\u53d6\u6a21\uff01**\n\n----\n\n\u4e0a\u9762\u58f0\u660e\u4e86\u4e00\u4e2a\u8f83\u590d\u6742\u7684\u6982\u5ff5\uff0c\u4e0b\u9762\u662f\u505a\u6cd5\n\n\u9996\u5148\u5206\u522b\u5efa\u51fa\u6b63\u5411\u548c\u53cd\u5411\u56fe\u3002  \n\u8bbe $flag[i]=0/1$ \u8868\u793a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u4ece\u9ed1\u8272\u70b9\u51fa\u53d1\u7684\u673a\u5668\u4eba\uff0c\u6ee1\u8db3\u53ef\u4ee5\u5230\u8fbe\u73af\u4e0a\u7684\u7f16\u53f7\u4e3a $i$ \u7684\u70b9\u3002$sum = \\sum flag[i]$ \u5373\u4e3a\u6700\u591a\u7684\u4ece\u9ed1\u8272\u70b9\u51fa\u53d1\u7684\u673a\u5668\u4eba\n\n\u63a5\u7740\uff0c\u4f7f\u7528 dfs \u5bfb\u627e\u51fa\u6bcf\u4e2a\u57fa\u73af\u6811\u4e2d\u7684\u73af\u3002\u627e\u5230\u540e\uff0c\u4ee5\u73af\u4e3a\u8d77\u70b9\u5f00\u59cb\u53cd\u5411\u904d\u5386\uff0c\u6c42\u51fa $flag$ \u6570\u7ec4\u5e76\u7d2f\u53ca\u7b54\u6848\uff08$flag$ \u6bcf\u6b21\u627e\u5230\u4e00\u68f5\u57fa\u73af\u6811\u540e\u90fd\u8981\u6e05\u7a7a\uff09\n\n\u6700\u540e\uff0c\u53ef\u653e\u7f6e\u7684\u6700\u591a\u7684\u673a\u5668\u4eba\u6570\u5c31\u662f\u6240\u6709\u57fa\u73af\u6811\u7684\u73af\u7684\u5927\u5c0f\u4e4b\u548c\u3002\u6700\u591a\u7684\u9ed1\u8272\u70b9\u51fa\u53d1\u7684\u673a\u5668\u4eba\u6570\u5c31\u662f $\\sum sum$\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<cstring>\nusing namespace std;\nconst int Maxn=1000000+10,Maxm=1010;\nconst int dx[]={1,-1,0,0},dy[]={0,0,-1,1};\nint head[Maxn],nxt[Maxn],to[Maxn];\nbool vis[Maxn],a[Maxn];\nbool flag[Maxn<<1];\nint id[Maxn],d[Maxn];\nint n,m,tot,val,ans;\nint pos,w,e;\nint dfn[Maxn],cnt,edgecnt=1;\ninline int get(int x,int y)\n{\n\treturn (x-1)*m+y;\n}\ninline void add(int x,int y)\n{\n\t++edgecnt;\n\tnxt[edgecnt]=head[x];\n\tto[edgecnt]=y;\n\thead[x]=edgecnt;\n}\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nvoid rev(int x,int cur) // \u53cd\u5411\u904d\u5386\n{\n\tvis[x]=1;\n\tif(a[x])flag[((pos-cur)%val+val)%val]=1; // \u6ce8\u610f\u8d1f\u6570\u7684\u53d6\u6a21\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(id[y]>=w && id[y]<=e)continue; // \u4e0d\u8981\u91cd\u590d\u904d\u5386\u73af\u4e0a\u7684\u70b9\n\t\trev(y,cur+1);\n\t}\n}\nvoid init()\n{\n\tans=tot=cnt=0,edgecnt=1;\n\tfor(int i=0;i<=n*m+5;++i)\n\t{\n\t\thead[i]=0;\n\t\tflag[i]=vis[i]=a[i]=d[i]=0;\n\t\tid[i]=-1;\n\t}\n}\nbool dfs(int x,int y)\n{\n\tid[get(x,y)]=cnt;\n\tvis[get(x,y)]=1;\n\tdfn[cnt++]=get(x,y); // \u6a21\u62df\u6808\n\tint u=x+dx[d[get(x,y)]],v=y+dy[d[get(x,y)]];\n\tif(id[get(u,v)]!=-1)\n\t{\n\t\tint l=id[get(u,v)],r=id[get(x,y)];\n\t\tval=(r-l+1); // \u73af\u4e0a\u7684\u70b9\u6570\n\t\tfor(int i=l;i<=r;++i)\n\t\t{\n\t\t\tpos=i-l,w=l,e=r;\n\t\t\trev(dfn[i],0);\n\t\t}\n\t\tid[get(x,y)]=-1,--cnt;\n\t\treturn 1;\n\t}\n\tbool tmp=dfs(u,v);\n\tid[get(x,y)]=-1,--cnt;\n\treturn tmp;\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n//\tfreopen(\"out.txt\",\"w\",stdout);\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tn=read(),m=read();\n\t\tinit();\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tchar s[Maxn];\n\t\t\tscanf(\"%s\",s+1);\n\t\t\tfor(int j=1;j<=m;++j)\n\t\t\tif(s[j]=='0')a[get(i,j)]=1;\n\t\t}\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tchar s[Maxn];\n\t\t\tscanf(\"%s\",s+1);\n\t\t\tfor(int j=1;j<=m;++j)\n\t\t\t{\n\t\t\t\tif(s[j]=='U')d[get(i,j)]=1;\n\t\t\t\tif(s[j]=='D')d[get(i,j)]=0;\n\t\t\t\tif(s[j]=='L')d[get(i,j)]=2;\n\t\t\t\tif(s[j]=='R')d[get(i,j)]=3;\n\t\t\t\tint k=d[get(i,j)];\n\t\t\t\tint u=i+dx[k],v=j+dy[k];\n\t\t\t\tint x=get(i,j),y=get(u,v);\n\t\t\t\tadd(y,x);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tif(vis[get(i,j)])continue;\n\t\t\tif(!dfs(i,j))continue;\n\t\t\tans+=val;\n\t\t\tfor(int i=0;i<val;++i)\n\t\t\t{\n\t\t\t\tif(flag[i])++tot;\n\t\t\t\tflag[i]=0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",ans,tot);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1594282717,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1335F \u3010Robots on a Grid\u3011"
    },
    {
        "content": "**\u6bd4\u8f83\u7b80\u5355\u7684\u500d\u589e**  \n~~\u4f46\u8fd8\u662f\u770b\u4e86\u9898\u89e3\u624d\u4f1a~~  \n\n## \u9898\u610f  \n\n\u7ed9\u51fa\u4e00\u4e2a $n\\times m$ \u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u683c\u5b50\u6709\u989c\u8272\uff0c$0$ \u9ed1 $1$ \u767d\uff0c\u6bcf\u4e2a\u683c\u5b50\u8fd8\u6709\u4e00\u4e2a\u65b9\u5411\uff0c\u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u4e0a\u7684\u673a\u5668\u4eba\u4f1a\u5411\u90a3\u4e2a\u65b9\u5411\u8d70\uff0c\u5e76\u4fdd\u8bc1\u4e0d\u4f1a\u8d70\u51fa\u683c\u5b50  \n\u6446\u653e\u673a\u5668\u4eba\uff0c\u5b83\u4eec\u540c\u65f6\u5f00\u59cb\u8fd0\u52a8\uff0c\u5728\u4efb\u610f\u65f6\u523b\u4e0d\u80fd\u6709\u4e24\u4e2a\u673a\u5668\u4eba\u5728\u540c\u4e00\u4e2a\u683c\u5b50\u91cc  \n\u5148\u6700\u5927\u5316\u673a\u5668\u4eba\u4e2a\u6570\uff0c\u5982\u679c\u591a\u79cd\u65b9\u6848\u673a\u5668\u4eba\u4e2a\u6570\u76f8\u7b49\uff0c\u518d\u6700\u5927\u5316\u6446\u5728\u9ed1\u683c\u5b50\u91cc\u7684\u673a\u5668\u4eba\u6570\u91cf  \n\n---------  \n\n\u9996\u5148\uff0c\u8fd9\u4e2a\u8def\u7ebf\u80af\u5b9a\u662f\u5faa\u73af\u7684\uff0c\u5982\u679c\u4e0d\u5faa\u73af\uff0c\u5c31\u4f1a\u8d70\u5230\u65e0\u9650\u591a\u4e2a\u683c\u5b50\uff0c\u4e0d\u5408\u7406  \n\u7136\u540e\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u683c\u5b50\uff0c\u4ece\u90a3\u91cc\u5f00\u59cb\u8d70\u5230\u5b8c\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u5faa\u73af\uff0c\u6b65\u6570\u80af\u5b9a\u5c0f\u4e8e\u7b49\u4e8e $nm$\uff0c\u663e\u7136\u5b83\u4e0d\u80fd\u8d70\u4e86\u6bd4 $nm$ \u8fd8\u591a\u7684\u683c\u5b50\u4ecd\u7136\u4e0d\u5f00\u59cb\u5faa\u73af  \n\u800c\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u5faa\u73af\uff0c\u5b83\u4eec\u4e00\u5b9a**\u6ca1\u6709\u4ea4\u70b9\uff08\u5c31\u662f\u4e00\u4e2a\u76f8\u540c\u7684\u683c\u5b50\uff09**\uff0c\u5982\u679c\u6709\uff0c\u80af\u5b9a\u5c31\u4e0d\u4f1a\u884c\u6210\u4e24\u4e2a\u5faa\u73af\u4e86  \n\n\u5982\u679c\u6709\u4e24\u4e2a\u673a\u5668\u4eba\u5206\u522b\u8d70\u4e86\u81f3\u5c11 $nm$ \u6b65\uff0c\u90a3\u4e48\u5b83\u4eec\u80af\u5b9a\u5df2\u7ecf\u5404\u5b50\u5faa\u73af\u4e86\u4e00\u6b21\u6216\u4ee5\u4e0a\u4e86  \n\u6240\u4ee5\uff0c\u5982\u679c\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u4e2a\u5faa\u73af\uff0c\u663e\u7136\u4e0d\u4f1a\u76f8\u9047  \n\u5982\u679c\u5728\u4e00\u4e2a\u5faa\u73af\uff0c\u4e14\u6ca1\u6709\u5728 $nm$ \u6b65\u5185\u76f8\u9047\uff0c\u8bf4\u660e\u8fd9\u65f6\u5b83\u4eec\u5df2\u7ecf\u201c\u540c\u6b65\u201d\u4e86\uff0c\u5c31\u662f\u4f1a\u4e00\u76f4\u4fdd\u6301\u8fd9\u4e00\u4e2a\u8ddd\u79bb\u4e0d\u65ad\u7684\u8d70\uff0c\u6c38\u4e0d\u76f8\u9047  \n\u5f53\u7136\uff0c\u5982\u679c\u5728 $nm$ \u6b65\u4e4b\u524d\u5c31\u5df2\u7ecf\u76f8\u9047\uff0c\u90a3\u4e48\u5b83\u4eec\u4f1a\u4e00\u76f4\u4e00\u8d77\u8d70\uff0c\u4e0d\u4f1a\u6709\u5f71\u54cd  \n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5224\u65ad\u4e24\u4e2a\u683c\u5b50\u4e0a\u7684\u673a\u5668\u4eba\u662f\u5426\u4f1a\u76f8\u9047\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u770b\u5b83\u4eec\u8d70\u4e86 $nm$ \u6b65\u4ee5\u540e\uff0c\u662f\u4e0d\u662f\u5728\u540c\u4e00\u4e2a\u683c\u5b50  \n\n\u6240\u4ee5\uff0c\u5047\u8bbe\u6211\u4eec\u5728\u6240\u6709\u683c\u5b50\u90fd\u6446\u4e0a\u673a\u5668\u4eba\uff0c\u8ba9\u4ed6\u4eec\u8d70\uff0c\u4e00\u65e6\u6709\u51e0\u4e2a\u76f8\u9047\u4e86\uff0c\u5c31\u8bf4\u660e\u6211\u4eec\u8981\u53bb\u6389\u8fd9\u4e9b\u673a\u5668\u4eba\u53ea\u5269\u4e0b\u5176\u4e2d\u7684\u4e00\u4e2a  \n\u8fd9\u65f6\uff0c\u7ed9\u8fd9 $nm$ \u4e2a\u70b9\u7f16\u53f7 $1\\ldots nm$\uff0c\u5e76\u7528$white_i,black_i$\u8868\u793a\u7684\u5206\u522b\u662f\u6709\u6ca1\u6709\u4ece\u767d/\u9ed1\u683c\u51fa\u53d1\u7684\u673a\u5668\u4eba\uff0c$nm$ \u683c\u540e\u4f1a\u8d70\u5230\u8fd9\u91cc  \n\n\u7136\u540e\u4ece $1$ \u5230 $nm$ \u7edf\u8ba1\u7b54\u6848\uff0c\u5982\u679c\u67d0\u4e2a\u683c\u5b50\u53ef\u4ee5\u7531\u9ed1\u8272\u683c\u5b50\u4e2d\u7684\u673a\u5668\u4eba\u8d70\u6765\uff0c\u5c31\u4fdd\u7559\u9ed1\u8272\u683c\u5b50\u7684\u90a3\u4e2a\uff0c\u5426\u5219\u4efb\u610f\u4fdd\u7559  \n\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7b54\u6848\u4e86  \n\n\u5bf9\u4e8e\u8d70 $nm$ \u6b65\u90a3\u4e2a\u64cd\u4f5c\uff0c\u5c31\u8981\u7528\u500d\u589e\u5b9e\u73b0  \n\n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<map>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN std::puts(\"\")\n#define LL long long\ninline int read(){\n\tregister int x=0;register int y=1;\n\tregister char c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\nint black[1000006],white[1000005];\nint nex[24][1000006];\nint color[1000006];\nchar s[1000006];\nint main(){int T=read();while(T--){\n\tint n=read(),m=read();\n\tfor(reg int i=1;i<=n;i++){\n\t\tstd::scanf(\"%s\",s+1);\n\t\tfor(reg int j=1;j<=m;j++) color[(i-1)*m+j]=s[j]=='0'?0:1;\n\t}\n\tfor(reg int i=1;i<=n;i++){\n\t\tstd::scanf(\"%s\",s+1);\n\t\tfor(reg int j=1;j<=m;j++){\n\t\t\tint now=(i-1)*m+j;\n\t\t\tif(s[j]=='U') nex[0][now]=now-m;\n\t\t\telse if(s[j]=='D') nex[0][now]=now+m;\n\t\t\telse if(s[j]=='L') nex[0][now]=now-1;\n\t\t\telse nex[0][now]=now+1;\n\t\t}\n\t}\n\tn*=m;\n\tfor(reg int i=1;i<=20;i++)\n\t\tfor(reg int j=1;j<=n;j++) nex[i][j]=nex[i-1][nex[i-1][j]];\n\tfor(reg int j=1;j<=n;j++){\n\t\tint to=j;\n\t\tfor(reg int i=20;~i;i--){//\u5012\u7740\u5faa\u73af\uff0c\u500d\u589e\u4f20\u7edf\u5957\u8def\uff0c\u4e0d\u8fc7\u60f3\u60f3\u4e5f\u80fd\u77e5\u9053\uff0c\u8981\u5148\u8d70\u5927\u7684\u6b65\u6570 \n\t\t\tif((1<<i)&n) to=nex[i][to];\n\t\t}\n\t\tcolor[j]?white[to]=1:black[to]=1;\n\t}\n\tint ans=0,black_num=0;\n\tfor(reg int i=1;i<=n;i++)\n\t\tif(black[i]) black_num++,ans++,black[i]=white[i]=0;\n\t\telse if(white[i]) ans++,black[i]=white[i]=0;\n\tstd::printf(\"%d %d\\n\",ans,black_num);\n}\n\treturn 0;\n}\n```",
        "postTime": 1586858063,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "CF1335F Robots on a Grid"
    },
    {
        "content": "### \u601d\u8def\uff1aTarjan \u7f29\u70b9\uff0cdfs\n\n\u672c\u9898\u5927\u81f4\u610f\u601d\u5c31\u662f\u8bf4\u7ed9\u5b9a\u6bcf\u4e2a\u70b9\u4e0a\u8d70\u7684\u8def\u7ebf\uff0c\u6c42\u4efb\u610f\u70b9\u6c38\u8fdc\u4e0d\u4f1a\u76f8\u649e\u65f6\u6700\u591a\u653e\u7684\u70b9\u6570\u4ee5\u53ca\u8be5\u70b9\u6570\u4e0b\u6700\u591a\u653e\u5728 0 \u5904\u7684\u70b9\u6570\u3002\n\n\u5148\u628a\u5e73\u9762\u56fe\u4ee5\u65b9\u5411\u4e3a\u6709\u5411\u8fb9\u6784\u9020\u51fa\u4e00\u5f20\u56fe\u3002\n\n\u7b2c\u4e00\u95ee\u6bd4\u8f83\u7b80\u5355\uff0c\u5373\u73af\u4e0a\u70b9\u7684\u548c\uff0c\u91cd\u5934\u620f\u5728\u7b2c\u4e8c\u95ee\u4e0a\u3002\n\n\u6c38\u8fdc\u4e0d\u76f8\u649e\u5373\u67d0\u4e00\u4e2a\u70b9\u5230\u73af\u7684\u8ddd\u79bb\u52a0\u4e0a\u8fd9\u4e2a\u73af\u4e0a\u7684\u70b9\u5230\u73af\u7684\u57fa\u51c6\u70b9\uff08\u968f\u4fbf\u8bbe\u4e00\u4e2a\u5373\u53ef\uff09\u8981\u8d70\u7684\u6b65\u6570\uff08\u4e0d\u662f\u8ddd\u79bb\uff09\u5bf9\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u53d6\u6a21\u540e\u7684\u503c\u4e0d\u76f8\u7b49\u3002\u82e5\u4efb\u610f\u4e24\u4e2a\u7ed3\u675f\u5728\u540c\u4e00\u4e2a\u73af\u91cc\u7684\u70b9\u8981\u90fd\u653e\u7f6e\uff0c\u5fc5\u987b\u6ee1\u8db3\u8be5\u6761\u4ef6\u3002\n\n\u7136\u540e\u5b9e\u73b0\u8d77\u6765\u4e5f\u975e\u5e38\u9634\u95f4\uff0c\u6211\u8c03\u4e86\u524d\u540e\u5feb\u4e24\u4e2a\u5c0f\u65f6\u3002\n\n\u9996\u5148\u4e3a\u4e86\u627e\u5230\u73af\uff0c\u53ef\u4ee5\u4f7f\u7528\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u4f18\u7684 Tarjan \u6765\u5199\u3002\n\n\u968f\u540e\u76f4\u63a5\u628a Tarjan \u51fa\u53e3\u7684\u5730\u65b9\u8bbe\u4e3a\u57fa\u51c6\u70b9\uff0c\u7136\u540e\u5728Tarjan\u51fa\u6808\u64cd\u4f5c\u65f6\u540c\u6b65\u6807\u597d\u8be5\u70b9\u5230\u6240\u5728\u73af\u7684\u57fa\u51c6\u70b9\u7684\u8ddd\u79bb\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u4fdd\u8bc1\u6c42\u51fa\u8ddd\u79bb\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5728\u73af\u4e0a\u7684\u70b9\u8fdb\u884c DFS\uff0c\u5904\u7406\u6574\u5f20\u56fe\u6bcf\u4e00\u4e2a\u70b9\u5230\u73af\u7684\u8ddd\u79bb\u3002\n\n\u6700\u540e\u7528 STLmap \u6765\u8bb0\u5f55\u67d0\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\u662f\u5426\u53ef\u4ee5\u88ab 0 \u51fa\u53d1\u7684\u70b9\u5360\u9886\uff0c\u7edf\u8ba1\u7b54\u6848\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u4ee3\u7801\u4e2d\u542b\u6ce8\u91ca\uff0c\u53ef\u8f85\u52a9\u7406\u89e3\u3002\n\n### \u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\n#define m(a,b) make_pair(a,b)\nusing namespace std;\nconst int N=1e6+5;\ninline int read()\n{\n\tint x=0,y=1;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0')\n\t{\n\t\tif(c=='-')\n\t\ty=-1;\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0')\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x*y;\n}\nint n,m;\nbool a[N];\nint g[N],dfn[N],low[N],dfstime,co[N];\nint dk[N];\nint ds[N];\nbitset<N> vis;\nvector<int> h[N];\nvector<int> fa[N];\nmap<pair<int,int>,bool> mp;\nint hn;\nint stk[N],top;\ninline int dt(int x,int y)//\u628a\u5750\u6807\u8f6c\u5316\u6210\u70b9\u65b9\u4fbf\u8ba1\u7b97\n{\n\treturn (x-1)*m+y;\n}\nvoid tarjan(int u)//Tarjan\u7f29\u70b9\u677f\u5b50\n{\n\tdfn[u]=low[u]=++dfstime;\n\tstk[++top]=u;\n\tint v=g[u];\n\tif(!dfn[v])\n\t{\n\t\ttarjan(v);\n\t\tlow[u]=min(low[u],low[v]);\n\t}\n\telse\n\t\tif(co[v]==0)\n\t\t\tlow[u]=min(low[u],low[v]);\n\tif(low[u]==dfn[u])\n\t{\n\t\tif(stk[top]==u)\n\t\t{\n\t\t\ttop--;\n\t\t\tco[u]=-2e9;\n\t\t\treturn;\n\t\t}\n\t\thn++;\n\t\tint dkn=-1;\n\t\th[hn].clear();\n\t\twhile(stk[top]!=u)\n\t\t{\n\t\t\th[hn].emplace_back(stk[top]);\n\t\t\tco[stk[top]]=hn;\n\t\t\tds[stk[top]]=0;\n\t\t\tdk[stk[top]]=++dkn;\n\t\t\ttop--;\n\t\t}\n\t\th[hn].emplace_back(stk[top]);\n\t\tco[stk[top]]=hn;\n\t\tdk[u]=++dkn;\n\t\tds[u]=0;\n\t\ttop--;\n\t\treturn;\n\t}\n}\nint root,rooth,cnt;\nvoid dfs(int u)\n{\n\tvis[u]=1;\n\tfor(auto v:fa[u])\n\t{\n\t\tif(vis[v]||co[v]>0)continue;\n\t\tds[v]=ds[u]+1;\n\t\tif(a[v]==0)//\u8bb0\u5f55\u8be5\u4f4d\u7f6e\u53ef\u88ab\u73af\u5916\u7684\u70b9\u5360\u9886\n\t\t\tmp[m(rooth,(dk[root]+ds[v])%h[rooth].size())]=true;\n\t\tdfs(v);\n\t}\n}\nsigned main()\n{\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tcnt++;\n\t\t\n\t\tmp.clear();\n\t\tn=read(),m=read();\n\t\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tchar c=getchar();\n\t\t\twhile(c!='0'&&c!='1')\n\t\t\t\tc=getchar();\n\t\t\ta[dt(i,j)]=(c-'0')==1;\n\t\t}\n\t\ttop=0;\n\t\thn=0;\n\t\tfor(int i=1;i<=n*m;i++)\n\t\tfa[i].clear(),vis[i]=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tchar c=getchar();\n\t\t\twhile(c!='L'&&c!='R'&&c!='D'&&c!='U')\n\t\t\t\tc=getchar();\n\t\t\tif(c=='L')g[dt(i,j)]=dt(i,j-1),fa[(dt(i,j-1))].emplace_back(dt(i,j));\n\t\t\tif(c=='R')g[dt(i,j)]=dt(i,j+1),fa[(dt(i,j+1))].emplace_back(dt(i,j));\n\t\t\tif(c=='D')g[dt(i,j)]=dt(i+1,j),fa[(dt(i+1,j))].emplace_back(dt(i,j));\n\t\t\tif(c=='U')g[dt(i,j)]=dt(i-1,j),fa[(dt(i-1,j))].emplace_back(dt(i,j));\n\t\t}\n\t\tint w=n*m;//\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\n\t\tfor(int i=1;i<=w;i++)\n\t\tco[i]=dfn[i]=low[i]=0;\n\t\t\n\t\tfor(int i=1;i<=w;i++)//tarjan\u627e\u73af\n\t\tif(!dfn[i])\n\t\ttarjan(i);\n\t\t\n\t\tint ans=0;\n\t\tfor(int i=1;i<=hn;i++)\n\t\tans+=h[i].size();\n\t\tprintf(\"%d \",ans);\n\t\tfor(int i=1;i<=w;i++)//dfs\u5904\u7406\u6bcf\u4e00\u4e2a\u70b9\u5230\u73af\u7684\u8ddd\u79bb\n\t\t\tif(co[i]>0)\n\t\t\t{\n\t\t\t\tif(a[i]==0)\n\t\t\t\tmp[m(co[i],dk[i])]=true;//\u8bb0\u5f55\u8be5\u4f4d\u7f6e\u53ef\u88ab\u81ea\u5df1\u5360\u9886\n\t\t\t\troot=i;\n\t\t\t\trooth=co[i];\n\t\t\t\tdfs(i);\n\t\t\t}\n\t\tans=0;\n\t\tfor(int i=1;i<=hn;i++)\n\t\tfor(int j=0;j<h[i].size();j++)\n\t\tif(mp[m(i,j)])\n\t\tans++;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n/*\n1\n3 2\n00\n11\n11\nRD\nUL\nRL\n*/\n```\n",
        "postTime": 1672136371,
        "uid": 329698,
        "name": "_youdu666_",
        "ccfLevel": 0,
        "title": "CF1335F"
    },
    {
        "content": "**update on 2022/10/02\uff1a\u597d\u50cf\u539f\u6765\u8d34\u9519\u4ee3\u7801\u4e86\uff08**\n\n## 1. \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a $n\\times m$ \u7684\u9ed1\u767d\u7f51\u683c\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u4f1a\u6709\u4e00\u4e2a\u65b9\u5411\uff0c\u5982\u679c\u653e\u7f6e\u7684\u673a\u5668\u4eba\u8d70\u5230\u8fd9\u91cc\u7684\u8bdd\uff0c\u5c06\u4f1a\u6309\u7167\u8be5\u65b9\u5411\u8d70\u4e0b\u53bb\u3002\u73b0\u5728\u8981\u653e\u7f6e\u6700\u591a\u7684\u673a\u5668\u4eba\uff0c\u4f7f\u5f97\u673a\u5668\u4eba\u6c38\u8fdc\u4e0d\u4f1a\u8d70\u5230\u540c\u4e00\u4e2a\u70b9\u4e0a\uff08\u6bcf\u4e00\u6b65\u4e2d\u95f4\u76f8\u9047\u7684\u4e0d\u7b97\uff09\u3002\u5728\u653e\u7f6e\u6700\u591a\u7684\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u6700\u5f00\u59cb\u653e\u5728\u9ed1\u8272\u4e0a\u7684\u673a\u5668\u4eba\u6700\u591a\u3002\n- \u6709 $t$ \u7ec4\u6570\u636e\uff0c$n\\times m\\leq10^6,\\sum n\\times m\\leq10^6,t\\leq5\\times10^4$\u3002\n\n## 2. \u601d\u8def\n\n\u5176\u5b9e\u5982\u679c\u60f3\u5230\u56fe\u8bba\u7684\u8bdd\uff0c\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u600e\u6837\u624d\u80fd **\u6c38\u8fdc\u4e0d\u76f8\u649e**\u3002\n\n\u6240\u6709\u7684\u673a\u5668\u4eba\u6700\u540e\u4e00\u5b9a\u662f\u5728\u73af\u4e0a\u4e00\u76f4\u7ed5\u5708\uff0c\u53c8\u7531\u4e8e\u901f\u5ea6\u76f8\u540c\uff0c\u6240\u4ee5\u6c38\u8fdc\u4e0d\u4f1a\u76f8\u649e\u3002\n\n\u6613\u5f97\u7b2c\u4e00\u95ee\u7b54\u6848\u4e0d\u53ef\u80fd\u5927\u4e8e\u73af\u4e0a\u70b9\u7684\u6570\u91cf\uff08\u56e0\u4e3a\u5982\u679c\u6709\u591a\u7684\u8bdd\uff0c\u8d70\u5230\u6700\u540e\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e24\u4e2a\u673a\u5668\u4eba\u5728\u540c\u4e00\u4e2a\u70b9\uff0c\u660e\u663e\u4e0d\u7b26\u5408\u6761\u4ef6\uff09\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u4e00\u4e2a\u70b9\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u51fa\u8fb9\uff0c\u6240\u4ee5\u539f\u56fe\u4e00\u5171\u6709 $n\\times m$ \u4e2a\u70b9\uff0c\u540c\u6837\u4e5f\u6709 $n\\times m$ \u6761\u8fb9\u3002\n\n\uff1f\u8fd9\u4e0d\u5c31\u662f\u57fa\u73af\u6811\u5417\uff1f\n\n\u901a\u8fc7\u57fa\u73af\u6811\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u627e\u51fa\u6240\u6709\u7684\u73af\u3002\u4e0d\u8003\u8651\u7b2c\u4e8c\u95ee\u7684\u8bdd\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u6240\u6709\u7684\u673a\u5668\u4eba\u653e\u5728\u73af\u4e0a\uff0c\u8fd9\u4e2a\u5c31\u662f\u4e00\u4e2a\u6700\u4f18\u89e3\u3002\n\n\u90a3\u4e48\u7b2c\u4e00\u95ee\u5c31\u89e3\u51b3\u4e86\uff0c\u7b54\u6848\u5c31\u662f\u73af\u7684\u6570\u91cf\u3002\n\n\u4e0b\u9762\u6211\u4eec\u6765\u770b\u7b2c\u4e8c\u95ee\uff1a\u600e\u6837\u8ba9\u6700\u591a\u7684\u673a\u5668\u4eba\u5728\u9ed1\u8272\u70b9\u4e0a\uff1f\n\n\u5df2\u7ecf\u662f\u9ed1\u8272\u70b9\u7684\u6211\u4eec\u53ef\u4ee5\u4e0d\u7ba1\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e9b\u767d\u8272\u7684\u70b9\u66ff\u6362\u4e3a\u975e\u73af\u7684\u9ed1\u70b9\u3002\n\n\u6211\u4eec\u753b\u4e00\u4e2a\u56fe\uff0c\u6765\u770b\u4e00\u4e0b\u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u6837\u7684\u6761\u4ef6\u624d\u53ef\u4ee5\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/l9i17lnm.png)\n\n\u5f53\u524d\uff0c\u5982\u679c\u6211\u4eec\u5c06\u4e00\u4e2a\u673a\u5668\u4eba\u653e\u5728 b \u70b9\uff0c\u7ecf\u8fc7\u4e24\u6b65\u4e4b\u540e\uff0c\u5c31\u4f1a\u8d70\u5230 c \u70b9\uff0c\u5982\u679c\u6700\u5f00\u59cb\u653e\u5728 a \u70b9\uff0c\u4e5f\u4f1a\u8d70\u5230 c \u70b9\u3002\n\n\u6240\u4ee5\u5176\u5b9e a \u70b9\u548c b \u70b9\u662f\u7b49\u4ef7\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ed6\u4eec\u6700\u540e\u5728\u73af\u4e0a\u7684\u4f4d\u7f6e\u662f\u7b49\u4ef7\u7684\u3002\n\n\u63a8\u5e7f\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u5047\u8bbe\u4ed6\u5411\u4e0a\u8d70\u8d70\u5230\u73af\u91cc\u9700\u8981\u7684\u6b65\u6570\u4e3a $x$\uff0c\u90a3\u4e48\u4ed6\u5c31\u7b49\u4ef7\u4e8e\u73af\u91cc\u8ddd\u4ed6\u6700\u8fd1\u7684\u70b9\u5f80\u56de\u8d70 $x$ \u6b65\u5f97\u5230\u7684\u70b9\u3002\n\n\u8f6c\u5316\u4e3a\u4ee3\u7801\uff0c\u5c31\u662f\uff1a`cir[((dep - from) % sz + sz) % sz + 1]`\uff0c\u5176\u4e2d $cir$ \u5b58\u7684\u662f\u73af\u7684\u7f16\u53f7\uff0c\u4ece 1 \u5f00\u59cb\uff0c$sz$ \u662f\u6307\u73af\u7684\u5927\u5c0f\uff0c$from$ \u662f\u6307\u79bb\u4ed6\u6700\u8fd1\u7684\u70b9**\u662f\u73af\u4e2d\u7684\u7b2c\u51e0\u4e2a\u3002**\n\n\u8fd9\u51e0\u4e2a\u90fd\u662f\u53ef\u4ee5\u5728\u7b2c\u4e8c\u6b21\u904d\u5386\u57fa\u73af\u6811\u7684\u65f6\u5019\u5f88\u7b80\u5355\u7684\u5f97\u5230\u3002\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n## 3. \u4ee3\u7801\n\n\u6ce8\u610f\u7531\u4e8e\u6709\u591a\u7ec4\u6570\u636e\uff0c\u4e0d\u80fd\u4f7f\u7528 `memset` \u4e4b\u7c7b\u7684\uff0c\u800c\u4e14\u8bfb\u5165\u7684\u65f6\u5019\u8981\u76f4\u63a5\u8f6c\u5316\u4e3a\u57fa\u73af\u6811\u4e0a\u7684\u7f16\u53f7\u3002\n\n\u7801\u98ce\u7565\u4e11\uff0c\u8bf7\u89c1\u8c05\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\nconst int N = 1e6 + 10, M = N << 1;\nint h[N], e[M], ne[M], idx;\nint cir[N], tot, ed[N], cnt, fu[N];\nint n, m, blk[N];\nchar str[N];\nbool ins[N], vis[N], onc[N], abl[N];\n\nvoid dfs_c(int x, int from)//\u627e\u73af\n{\n\tins[x] = vis[x] = true;\n\tfor (int i = h[x]; ~i; i = ne[i])\n\t{\n\t\tint j = e[i];\n\t\tif (i == (from ^ 1)) continue;\n\t\tfu[j] = x;\n\t\tif (!vis[j]) dfs_c(j, i);\n\t\telse if (ins[j]){\n\t\t\tfor (int k = x; k != j; k = fu[k]) cir[++ cnt] = k, onc[k] = true;\n\t\t\tcir[++ cnt] = j, onc[j] = true;\n\t\t\ted[++ tot] = cnt;\n\t\t\tif ((i & 1)) reverse(cir + ed[tot - 1] + 1, cir + ed[tot] + 1);\n\t\t}//\u6ce8\u610f\u6b64\u65f6\u5982\u679c i & 1 \u7684\u8bdd\uff0c\u627e\u5230\u7684\u73af\u548c\u6211\u4eec\u7684\u73af\u662f\u76f8\u53cd\u7684\uff0c\u6211\u4eec\u8981\u8c03\u6362\u8fc7\u6765\n\t}\n\tins[x] = false;\n}\n\nvoid dfs_d(int x, int cirst, int dep, int sz)//cirst \u8868\u793a\u73af\u5728 cir \u6570\u7ec4\u91cc\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0cdep \u662f\u6307\u5f53\u524d\u7684\u6df1\u5ea6\uff08\u6211\u4e3a\u4e86\u65b9\u4fbf\uff0c\u52a0\u4e0a\u4e86\u51fa\u53d1\u70b9\u7684\u7f16\u53f7\uff0c\u65b9\u4fbf\u76f4\u63a5\u8ba1\u7b97\uff0c\u65e0\u9700\u591a\u4f59\u4f20\u53c2\uff09\n{\n\tabl[cirst + (-1 * dep % sz + sz) % sz] |= blk[x];\n\tvis[x] = 1;\n\tfor (int i = h[x]; ~i; i = ne[i])\n\t{\n\t\tif (vis[e[i]] || onc[e[i]]) continue;\n\t\tdfs_d(e[i], cirst, dep - 1, sz);\n\t}\n}\n\nvoid add(int a, int b)\n{\n\te[idx] = b, ne[idx] = h[a], h[a] = idx ++;\n}\n\nvoid link(int a, int b){add(a, b), add(b, a);}\nint get(int i, int j){return (i - 1) * m + j;}//\u8f6c\u6362\u7f16\u53f7\n\nint main()\n{\n\tint t;cin >> t;\n\twhile (t --)\n\t{\n\t\tscanf(\"%d %d\", &n, &m);\n\t\tidx = cnt = tot = 0;\n\t\tfor (int i = 1; i <= n * m; ++ i) h[i] = -1, blk[i] = onc[i] = abl[i] = 0;\n\t\tfor (int i = 1; i <= n; ++ i)\n\t\t{\n\t\t\tscanf(\"%s\", str + 1);\n\t\t\tfor (int j = 1; j <= m; ++ j) blk[get(i, j)] = str[j] == '0';\n\t\t}\n\t\tfor (int i = 1; i <= n; ++ i)\n\t\t{\n\t\t\tscanf(\"%s\", str + 1);\n\t\t\tfor (int j = 1; j <= m; ++ j)\n\t\t\t\tswitch (str[j])\n\t\t\t\t{\n\t\t\t\t\tcase 'L' : link(get(i, j), get(i, j - 1));break;\n\t\t\t\t\tcase 'R' : link(get(i, j), get(i, j + 1));break;\n\t\t\t\t\tcase 'U' : link(get(i, j), get(i - 1, j));break;\n\t\t\t\t\tcase 'D' : link(get(i, j), get(i + 1, j));break;\n\t\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= n * m; ++ i) vis[i] = 0;\n\t\tfor (int i = 1; i <= n * m; ++ i)\n\t\t\tif (!vis[i]) dfs_c(i, -1);\n\t\tfor (int i = 1; i <= n * m; ++ i) vis[i] = 0;\n\t\tfor (int i = 1; i <= tot; ++ i)\n\t\t\tfor (int j = ed[i - 1] + 1; j <= ed[i]; ++ j) dfs_d(cir[j], ed[i - 1] + 1, j - ed[i - 1] - 1, ed[i] - ed[i - 1]);\n\t\tint tblk = 0;\n\t\tfor (int i = 1; i <= cnt; ++ i) tblk += abl[i];\n\t\tprintf(\"%d %d\\n\", cnt, tblk);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1636460202,
        "uid": 342891,
        "name": "mydcwfy",
        "ccfLevel": 9,
        "title": "CF1335F \u9898\u89e3"
    }
]