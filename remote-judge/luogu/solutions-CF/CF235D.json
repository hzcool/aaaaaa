[
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/CF235D)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5148\u8003\u8651\u7b80\u5355\u7684\u6811\u7684\u60c5\u51b5\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u7684\u8d21\u732e\u4e3a$|G|$\uff0c\u5229\u7528\u671f\u671b\u7684\u7ebf\u6027\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8d21\u732e\u5206\u644a\u5230\u56fe\u7684$|G|$\u4e2a\u70b9\u4e0a\u9762\u53bb\uff0c\u8fd9\u6837$|G|$\u4e2a\u70b9\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u5c31\u662f$1$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8e\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u6982\u7387\u5c31\u53ef\u4ee5\u4e86\u3002\u5047\u8bbe\u5f53\u524d\u7684\u5206\u6cbb\u4e2d\u5fc3\u4e3a$u$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9$v$\uff0c\u6211\u4eec\u8ba1\u7b97$p(u,v)=p(u\\text{\u4e3a\u5206\u6cbb\u4e2d\u5fc3\u4e0e}v\\text{\u8fde\u901a})$\u3002\u7531\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u4e3a$1$\uff0c$\\sum_{v\\in V}p(u,v)$\u5c31\u662f\u5f53$u$\u4e3a\u5206\u6cbb\u4e2d\u5fc3\u7684\u671f\u671b\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u94a6\u5b9a\u4e00\u4e2a\u70b9$v$\uff0c\u8ba1\u7b97$p(u,v)$\uff0c\u5c31\u76f8\u5f53\u4e8e\u6c42$u$\u662f$(u,v)$\u8def\u5f84\u4e0a\u7b2c\u4e00\u4e2a\u88ab\u5220\u7684\u70b9\u7684\u6982\u7387\u3002\u8bbe\u8def\u5f84\u957f\u5ea6\u4e3a$l$\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u8bc1\u660e\uff1a$p(u,v)=\\frac 1 l$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e00\u6b65\uff0c$(u,v)\\in E$\u7684\u65f6\u5019\uff0c\u663e\u7136\u6210\u7acb\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e8c\u6b65\uff0c\u5047\u8bbe\u5f53\u524d$u$\u548c$v$\u8fde\u901a\uff0c\u8fd9\u6574\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u4e3a$n$\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u6240\u6709\u5b50\u56fe\u90fd\u6ee1\u8db3\u7ed3\u8bba\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6b64\u65f6\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$1.u$\u76f4\u63a5\u88ab\u5220\u9664\u4e86\uff0c\u6982\u7387\u662f$\\frac 1 n$\uff1b  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$2.u$\u6ca1\u6709\u88ab\u5220\u9664\uff0c\u4f46\u662f\u63a5\u4e0b\u6765$u$\u548c$v$\u5206\u5230\u4e86\u4e00\u4e2a\u5b50\u56fe\u91cc\u3002\u5220\u9664\u4e00\u4e2a\u70b9\u7684\u6982\u7387\u4e3a$\\frac{n-l}n$\uff1b\u6839\u636e\u5f52\u7eb3\u5047\u8bbe\uff0c\u5b50\u56fe\u5185\u7684\u6982\u7387\u4e3a$\\frac 1 l$\uff0c\u6240\u4ee5\u6982\u7387\u4e3a$\\frac{n-l}{nl}$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e24\u4e2a\u52a0\u8d77\u6765\u5f97\u5230\u6b64\u65f6\u6982\u7387\u4e3a$\\frac 1 l$\uff0c\u8bc1\u660e\u4e86\u6b64\u65f6\u4e5f\u6ee1\u8db3\u547d\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8e\u662f\u6211\u4eec\u5c31\u8bc1\u660e\u4e86\u8fd9\u4e2a\u547d\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6240\u4ee5\uff0c\u6811\u4e0a\u7684\u95ee\u9898\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u6269\u5c55\u5230\u57fa\u73af\u6811\u4e0a\u3002\u9996\u5148\uff0c\u5982\u679c$(u,v)$\u8def\u5f84\u4e0d\u7ecf\u8fc7\u73af\u4e0a**\u4e24\u70b9**\uff0c\u90a3\u4e48\u8ba1\u7b97\u65b9\u6cd5\u4e0d\u53d8\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5426\u5219\uff0c\u8003\u8651$u$\u7684\u5220\u9664\u6b21\u5e8f\u3002\u8bbe\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u6709$x$\u4e2a\uff08\u5305\u542b\u4e24\u7aef\uff09\uff0c\u62c6\u4e0b\u6765\u4e4b\u540e\u73af\u5269\u4e0b\u7684\u4e24\u4e2a\u90e8\u5206\u4e3a$y$\u4e2a\u548c$z$\u4e2a\u3002\u90a3\u4e48$u$\u8981\u4e48\u662f$x+y$\u8def\u5f84\u4e0a\u7b2c\u4e00\u4e2a\u5220\u7684\uff0c\u8981\u4e48\u662f$x+z$\u4e0a\u7b2c\u4e00\u4e2a\u5220\u7684\uff1b\u4f46\u662f\u4f1a\u8ba1\u91cd\uff0c\u6240\u4ee5\u8981\u51cf\u53bb$x+y+z$\u7684\u7b2c\u4e00\u4e2a\u5220\u7684\uff0c\u6240\u4ee5\u6982\u7387\u4e3a$p(u,v)=\\frac 1{x+y}+\\frac1{x+z}-\\frac1{x+y+z}$\u3002\u5982\u56fe\uff1a  \n![show.JPG](https://i.loli.net/2020/02/09/m82qE9ru1gjFT5P.jpg)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6309\u7167\u8fd9\u6837\u7684\u65b9\u6cd5\u7d2f\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u662f$O(n^2)$\u6216\u8005$O(n^2\\log_2n)$\uff08\u500d\u589e$LCA$\uff09\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n\nconst int MAXN = 3005, MAXLOG = 15;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T ABS( const _T a )\n{\n\treturn a < 0 ? -a : a;\n}\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXN << 1];\n\nint f[MAXN][MAXLOG];\nint sta[MAXN], top;\nint cir[MAXN];\nint head[MAXN], dep[MAXN], col[MAXN];\nint N, lg2, cnt, siz;\nbool inSta[MAXN], onCir[MAXN];\n\nvoid balance( int &u, const int steps ) \n{ \n\tfor( int i = 0 ; ( 1 << i ) <= steps ; i ++ ) \n\t\tif( steps & ( 1 << i ) ) \n\t\t\tu = f[u][i]; \n}\n\nvoid addEdge( const int from, const int to )\n{\n\tGraph[++ cnt].to = to, Graph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nbool findCircle( const int u, const int fr )\n{\n\tif( inSta[u] )\n\t{\n\t\tint v;\n\t\tdo onCir[cir[++ siz] = v = sta[top --]] = true; while( v ^ u );\n\t\treturn true;\n\t}\n\tinSta[sta[++ top] = u] = true;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t{\n\t\tv = Graph[i].to;\n\t\tif( v ^ fr && findCircle( v, u ) ) return true;\n\t}\n\tinSta[sta[top --]] = false;\n\treturn false;\n}\n\nvoid DFS( const int u, const int fa, const int c )\n{\n\tcol[u] = c, f[u][0] = fa, dep[u] = dep[fa] + 1;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fa && ! onCir[v] ) \n\t\t\tDFS( v, u, c );\n}\n\nvoid init()\n{\n\tlg2 = log2( N );\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n}\n\nint LCA( int u, int v )\n{\n\tif( dep[u] > dep[v] ) balance( u, dep[u] - dep[v] );\n\tif( dep[v] > dep[u] ) balance( v, dep[v] - dep[u] );\n\tif( u == v ) return u;\n\tfor( int i = lg2 ; ~ i ; i -- ) if( f[u][i] ^ f[v][i] ) u = f[u][i], v = f[v][i];\n\treturn f[u][0];\n}\n\nint dist( const int u, const int v ) { return dep[u] + dep[v] - 2 * dep[LCA( u, v )] + 1; }\n\nint main()\n{\n\tread( N );\n\tfor( int i = 1, fr, to ; i <= N ; i ++ ) \t\n\t\tread( fr ), read( to ), fr ++, to ++, addEdge( fr, to ), addEdge( to, fr );\n\tfindCircle( 1, 0 );\n\tfor( int i = 1 ; i <= siz ; i ++ ) DFS( cir[i], 0, i );\n\tinit();\n\tdouble ans = 0;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= N ; j ++ )\n\t\t{\n\t\t\tif( col[i] == col[j] ) ans += 1.0 / dist( i, j );\n\t\t\telse\n\t\t\t{\n\t\t\t\tint lin = dep[i] + dep[j], lef = ABS( col[i] - col[j] ) - 1, rig = siz - 2 - lef;\n\t\t\t\tans += 1.0 / ( lin + lef ) + 1.0 / ( lin + rig ) - 1.0 / ( lin + lef + rig );\n\t\t\t}\n\t\t}\n\tprintf( \"%.15lf\\n\", ans );\n\treturn 0;\n}\n```",
        "postTime": 1581242661,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF235D]Graph Game"
    },
    {
        "content": "[\u5fc3\u52a8\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/LittleTwoawa/p/17343641.html)\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF235D)\n\n\u6839\u636e\u671f\u671b\u7684\u7ebf\u6027\u6027\uff0c\u4e00\u6b21\u64cd\u4f5c\u4f7f\u5f97\u63a5\u4e0b\u6765\u8981\u9012\u5f52\u5904\u7406 $|G|$ \u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e9b\u8d21\u732e\u5206\u644a\u5230 $|G|$ \u4e2a\u70b9\u4e0a\uff0c\u8fd9\u6837\u6211\u4eec\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u8ba1\u7b97\u6982\u7387\u3002 \n\n\u9996\u5148\u8003\u8651\u5982\u679c\u662f\u6811\u600e\u4e48\u505a\u3002\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u968f\u673a\u4e00\u4e2a\u6392\u5217\uff0c\u987a\u6b21\u5220\u6389\u6392\u5217\u4e2d\u7684\u70b9\uff0c\u5e76\u6c42\u51fa\u5220\u6389\u5f53\u524d\u70b9\u4e4b\u524d\u5176\u6240\u5904\u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\u8bb0\u5f53\u524d $x$ \u4e3a\u70b9\u5206\u6cbb\u4e2d\u5fc3\uff0c\u70b9\u5bf9 $(x,y)$ \u7684\u8d21\u732e\u4e3a $y$ \u5728 $x$ \u7684\u70b9\u5206\u6811\u5185\u90e8\uff0c\u5728 $x \\to y$ \u7684\u8def\u5f84\u4e0a $x$ \u7b2c\u4e00\u4e2a\u88ab\u5220\u9664\uff0c\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u6982\u7387\u4e3a $\\dfrac{1}{dis_{i,j} + 1}$\uff0c\u5176\u4e2d $dis$ \u8868\u793a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u628a\u8fd9\u4e2a\u4e1c\u897f\u653e\u5728\u57fa\u73af\u6811\u4e0a\u3002\u5982\u679c\u70b9\u5bf9 $(x,y)$ \u5728\u540c\u4e00\u68f5\u6811\u4e2d\u548c\u4e0a\u9762\u60c5\u51b5\u76f8\u540c\uff0c\u662f\u5e73\u51e1\u7684\u3002\u5982\u679c\u5728\u4e0d\u540c\u5b50\u6811\u4e2d\uff0c\u610f\u5473\u7740\u8981\u8de8\u8fc7\u73af\u3002\u4ece\u73af\u4e0a\u8d70\u6709\u4e24\u6761\u8def\u5f84\uff0c\u5206\u522b\u8ba1\u7b97\u4e0a\u4e24\u79cd\u8d70\u6cd5\u7684 $\\dfrac{1}{dis_{i,j} + 1}$ \u5e76\u52a0\u8d77\u6765\u3002\u4e0d\u8fc7\u8fd9\u6837\u8fd8\u4f1a\u7b97\u91cd\uff0c\u5bb9\u65a5\u4e00\u4e0b\uff0c\u518d\u51cf\u53bb $x$ \u548c $y$ \u5230\u73af\u4e0a\u7684\u8ddd\u79bb\u52a0\u73af\u4e0a\u7684\u603b\u70b9\u6570 \u5206\u4e4b\u4e00\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u7684\u4e1c\u897f\u6709\u54ea\u4e9b\u70b9\u5728\u73af\u4e0a\u9762\uff0c\u54ea\u4e9b\u70b9\u5728\u540c\u4e00\u68f5\u6811\u4e2d\uff0c\u540c\u4e00\u68f5\u6811\u4e2d\u7684\u8282\u70b9\u4e24\u4e24\u70b9\u5bf9\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u3002\u7136\u540e\u679a\u4e3e\u70b9\u5bf9\uff0c\u5982\u679c\u5728\u540c\u4e00\u68f5\u6811\u4e2d\u6211\u4eec\u8981\u6c42\u70b9\u5bf9\u7684 LCA\uff0c\u4f7f\u7528\u500d\u589e\u6c42 LCA\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n^2 \\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ld long double \n#define ull unsigned long long\n#define int long long\n#define eb emplace_back\n#define mp make_pair\nusing namespace std;\n \ninline int read()\n{\n\tint s=0,w=1; char c=getchar();\n\twhile(!isdigit(c)) {if(c=='-') w=-1; c=getchar();}\n\twhile(isdigit(c)) s=(s<<1)+(s<<3)+(c^48),c=getchar();\n\treturn s*w;\n}\ninline void write(int x,char ch)\n{\n\tif(x<0) x=-x,putchar('-');\n\tstatic char stk[25]; int top=0;\n\tdo {stk[top++]=x%10+'0',x/=10;} while(x);\n\twhile(top) putchar(stk[--top]);\n\tputchar(ch);\n\treturn;\n}\n \nnamespace MyTool\n{\n\tstatic const int Mod=1e9+7;\n\ttemplate<typename T> inline void Swp(T &a,T &b) {T t=a;a=b;b=t;}\n\tinline int  Max(int a,int b)   {return (b&((a-b)>>63))|(a&(~(a-b)>>63));}\n\tinline int  Min(int a,int b)   {return (a&((a-b)>>63))|(a&(~(a-b)>>63));}\n\ttemplate<typename T> inline void cmax(T &a,T b) {a=a>b?a:b;}\n\ttemplate<typename T> inline void cmin(T &a,T b) {a=a<b?a:b;}\n\tinline int  Abs(int a) {return (a^(a>>63))-(a>>63);}\n\tinline void Madd(int &a,int b) {a=a+b>Mod?a+b-Mod:a+b;}\n\tinline void Mdel(int &a,int b) {a=a-b<0?a-b+Mod:a-b;}\n\tinline void Mmul(int &a,int b) {a=1ll*a*b%Mod;}\n\tinline void Mmod(int &a) {a=(a%Mod+Mod)%Mod;}\n\tinline int  Cadd(int a,int b)  {return a+b>=Mod?a+b-Mod:a+b;}\n\tinline int  Cdel(int a,int b)  {return a-b<0?a-b+Mod:a-b;}\n\tinline int  Cmul(int a,int b)  {return a*b%Mod;}\n\tinline int  Cmod(int a)  {return (a%Mod+Mod)%Mod;}\n\tinline int  gcd(int a,int b)   {return b?gcd(b,a%b):a;}\n\tinline int  qpow(int a,int b)  {int res=1; while(b) {if(b&1) Mmul(res,a); Mmul(a,a); b>>=1;} return res;}\n\tinline int  qmul(int a,int b)  {int res=0; while(b) {if(b&1) Madd(res,a); Madd(a,a); b>>=1;} return res;}\n\ttemplate<typename T> inline T pow(T x)    {return x*x;}\n}\nusing namespace MyTool;\n \ninline void file()\n{\n\tfreopen(\".in\",\"r\",stdin);\n\tfreopen(\".out\",\"w\",stdout);\n\treturn;\n}\n \nbool Mbe;\n \nnamespace LgxTpre\n{\n\tstatic const int MAX=3010;\n\tstatic const int inf=2147483647;\n\tstatic const int INF=4557430888798830399;\n\tstatic const int mod=998244353;\n\tstatic const int bas=131;\n\t\n\tint n,x,y;\n\tdouble ans;\n\t\n\tstruct edge\n\t{\n\t\tint nex,to;\n\t}e[MAX<<1];\n\tint head[MAX],cnt;\n\tinline void add(int x,int y)\n\t{\n\t\te[++cnt].nex=head[x],head[x]=cnt,e[cnt].to=y;\n\t\treturn;\n\t}\n\t\n\tint loop[MAX],deg[MAX],len,st;\n\tqueue<int> q;\n\tinline void find_loop()\n\t{\n\t\tfor(int i=1;i<=n;++i) if(deg[i]==1) q.push(i),loop[i]=1;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint now=q.front(); q.pop();\n\t\t\tfor(int i=head[now];i;i=e[i].nex)\n\t\t\t{\n\t\t\t\tint to=e[i].to;\n\t\t\t\tif(--deg[to]==1) q.push(to),loop[to]=1;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;++i) loop[i]^=1,len+=loop[i],loop[i]==1?st=i:st=st;\n\t\treturn;\n\t}\n\t\n\tint dep[MAX],col[MAX],fa[MAX][30],vis[MAX],num;\n\tvoid dfs(int now,int father,int id)\n\t{\n\t\tcol[now]=id,fa[now][0]=father,dep[now]=dep[father]+1; \n\t\tfor(int i=1;i<=__lg(dep[now]);++i) fa[now][i]=fa[fa[now][i-1]][i-1];\n\t\tfor(int i=head[now];i;i=e[i].nex)\n\t\t{\n\t\t\tint to=e[i].to;\n\t\t\tif(loop[to]||to==father) continue;\n\t\t\tdfs(to,now,id);\n\t\t}\n\t\treturn;\n\t}\n\tinline int LCA(int x,int y)\n\t{\n\t\tif(dep[x]<dep[y]) Swp(x,y);\n\t\twhile(dep[x]>dep[y]) x=fa[x][__lg(dep[x]-dep[y])];\n\t\tif(x==y) return x;\n\t\tfor(int k=__lg(dep[x]);~k;--k) if(fa[x][k]!=fa[y][k]) x=fa[x][k],y=fa[y][k];\n\t\treturn fa[x][0];\n\t}\n\tvoid find_tree(int now)\n\t{\n\t\tdfs(now,0,++num),vis[now]=1;\n\t\tfor(int i=head[now];i;i=e[i].nex)\n\t\t{\n\t\t\tint to=e[i].to;\n\t\t\tif(!loop[to]||vis[to]) continue;\n\t\t\tfind_tree(to);\n\t\t}\n\t\treturn;\n\t}\n\t\n\tinline void mian()\n\t{\n\t\tn=read();\n\t\tfor(int i=1;i<=n;++i) x=read()+1,y=read()+1,add(x,y),add(y,x),++deg[x],++deg[y];\n\t\tfind_loop(),find_tree(st);\n\t\tfor(int i=1;i<=n;++i) for(int j=1;j<=n;++j) \n\t\t\tif(col[i]==col[j])\n\t\t\t\tans+=1.0/((double)(dep[i]+dep[j]-dep[LCA(i,j)]*2+1));\n\t\t\telse\n\t\t\t{\n\t\t\t\tdouble T=(double)(dep[i]+dep[j]);\n\t\t\t\tdouble L=(double)(fabs(col[i]-col[j])-1);\n\t\t\t\tdouble fL=(double)(len-L-2);\n\t\t\t\tans+=1.0/(L+T)+1.0/(fL+T)-1.0/(L+fL+T);\n\t\t\t}\n\t\tprintf(\"%.15lf\\n\",ans);\n\t\treturn;\n\t}\n}\n \nbool Med;\n \nsigned main()\n{\n//\tfile();\n\tfprintf(stderr,\"%.3lf MB\\n\",(&Med-&Mbe)/1048576.0);\n\tLgxTpre::mian();  \n\tcerr<<1e3*clock()/CLOCKS_PER_SEC<<\" ms\\n\";\n\treturn (0-0);\n}\n```",
        "postTime": 1682158488,
        "uid": 739297,
        "name": "forqprever",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\uff1a\u3010CF235D\u3011Graph Game"
    }
]