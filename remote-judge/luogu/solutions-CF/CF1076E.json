[
    {
        "content": "\u597d\u591a\u7528 BIT \u7684\u554a\u2026\u2026\u5176\u5b9e\u76f4\u63a5\u5dee\u5206\u5c31\u884c\u4e86\u5427\u2026\u2026  \n\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u4ece 1 \u5f00\u59cb\u904d\u5386\uff0c\u904d\u5386\u65f6\u8bb0\u5f55\u524d\u7f00\u548c $\\text{sum}$\uff0c\u5bf9\u4e8e $u$ \u4e0a\u7684\u64cd\u4f5c $(d,v)$\uff0c\u5148\u4f7f $\\text{sum}+v$\uff0c\u7136\u540e\u5728\u6df1\u5ea6\u4e3a $\\text{dep} _u+d+1$ \u8fd9\u4e00\u5c42\u6253\u4e0a\u6807\u8bb0\uff0c\u904d\u5386\u5230\u8fd9\u5c42\u65f6\u5bf9\u5e94\u5904\u7406\uff0c\u6700\u540e\u56de\u6eaf\u65f6\u628a\u6807\u8bb0\u53bb\u6389\u5373\u53ef\u3002  \n\u611f\u89c9\u96be\u5ea6\u865a\u9ad8\uff1f\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 300005\n#define reg register\n#define inl inline\n#define int long long\nusing namespace std;\nstruct Node\n{\n\tint dep,val;\n};\nint cnt,fst[MAXN],to[MAXN<<1],nxt[MAXN<<1];\nint n,q,dep[MAXN],val[MAXN],ans[MAXN];\nvector <Node> vec[MAXN];\ninl void AddEdge(reg int u,reg int v)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n}\nvoid Dfs(reg int u,reg int pre,reg int sum)\n{\n\tsum+=val[dep[u]];\n\tfor(reg int i=0;i<(int)vec[u].size();i++)\n\t{\n\t\tsum+=vec[u][i].val;\n\t\tif(dep[u]+vec[u][i].dep+1<=n) val[dep[u]+vec[u][i].dep+1]-=vec[u][i].val;\n\t}\n\tans[u]=sum;\n\tfor(reg int i=fst[u];i;i=nxt[i])\n\t{\n\t\treg int v=to[i];\n\t\tif(v==pre) continue;\n\t\tdep[v]=dep[u]+1;\n\t\tDfs(v,u,sum);\n\t}\n\tfor(reg int i=0;i<(int)vec[u].size();i++)\n\t{\n\t\tif(dep[u]+vec[u][i].dep+1<=n) val[dep[u]+vec[u][i].dep+1]+=vec[u][i].val;\n\t}\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(reg int i=1;i<n;i++)\n\t{\n\t\treg int x,y;\n\t\tscanf(\"%lld %lld\",&x,&y);\n\t\tAddEdge(x,y);\n\t\tAddEdge(y,x);\n\t}\n\tscanf(\"%lld\",&q);\n\tfor(reg int i=1;i<=q;i++)\n\t{\n\t\treg int x,y,z;\n\t\tscanf(\"%lld %lld %lld\",&x,&y,&z);\n\t\tvec[x].push_back((Node){y,z});\n\t}\n\tdep[1]=1;\n\tDfs(1,0,0);\n\tfor(reg int i=1;i<=n;i++) printf(\"%lld \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1600350121,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1076E \u3010Vasya and a Tree\u3011"
    },
    {
        "content": "CF1076E Vasya and a Tree\n\n\u53ef\u4ee5\u628a\u64cd\u4f5c\u79bb\u7ebf\uff0c\u6bcf\u6b21\u5f00\u59cb\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u628a\u4ee5\u5b83\u4e3a\u6839\u7684\u64cd\u4f5c\u52a0\u4e0a\uff0c\u7ed3\u675f\u65f6\u628a\u8fd9\u4e2a\u70b9\u7684\u64cd\u4f5c\u5220\u53bb\u3002\n\n\u56e0\u4e3a\u662f$dfs$\uff0c\u6240\u4ee5\u4e00\u4e2a\u70b9\u5bf9\u540c\u4e00\u6df1\u5ea6\u7684\u8d21\u732e\u662f\u4e00\u5b9a\u7684\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u52a0\u51cf\uff0c\u6c42\u524d\u7f00\u548c\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u662f$dfs$\uff0c\u5b8c\u5168\u53ef\u4ee5\u628a\u524d\u7f00\u548c\u4f20\u5165\uff0c\u5c31\u4e0d\u9700\u8981\u6811\u72b6\u6570\u7ec4\u4e86\u3002\n\n```cpp\n#define B cout << \"BreakPoint\" << endl;\n#define O(x) cout << #x << \" \" << x << endl;\n#define O_(x) cout << #x << \" \" << x << \" \";\n#define Msz(x) cout << \"Sizeof \" << #x << \" \" << sizeof(x)/1024/1024 << \" MB\" << endl;\n#include<cstdio>\n#include<cmath>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<set>\n#define LL long long\nconst int inf = 1e9 + 9;\nconst int N = 6e5 + 5;\nusing namespace std;\ninline int read() {\n\tint s = 0,w = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\tif(ch == '-')\n\t\t\tw = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') {\n\t\ts = s * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn s * w;\n}\nint head[N],to[N],nxt[N],cnt;\nvoid add(int x,int y) {\n\tto[++cnt] = y;\n\tnxt[cnt] = head[x];\n\thead[x] = cnt;\n}\nint n,m;\nstruct node {\n\tint d,x;\n\tinline node() {}\n\tinline node(int __d, int __x) :d(__d), x(__x){}\n};\nvector<node> s[N];\nLL c[N],ans[N];\nvoid dfs(int u,int fa,int dep,LL sum) {\n\tfor(auto it = s[u].begin();it != s[u].end();it++) {\n\t\tc[dep] += it->x;\n\t\tif(dep + it->d + 1 <= n) c[dep + it->d + 1] -= it->x;\n\t}\n\tsum += c[dep],ans[u] = sum;\n\tfor(int i = head[u];i;i = nxt[i]) {\n\t\tint v = to[i];\n\t\tif(v != fa) dfs(v,u,dep + 1,sum);\n\t}\n\tfor(auto it = s[u].begin();it != s[u].end();it++) {\n\t\tc[dep] -= it -> x;\n\t\tif(dep + it -> d + 1 <= n) c[dep + it -> d + 1] += it -> x;\n\t}\n}\nint main() {\n\tn = read();\n\tfor(int i = 1;i < n;i++) {\n\t\tint x = read(),y = read();\n\t\tadd(x,y),add(y,x);\n\t}\n\tm = read();\n\tfor(int i = 1;i <= m;i++) {\n\t\tint v = read(),d = read(),x = read();\n\t\ts[v].push_back(node(d,x));\n\t}\n\tdfs(1,0,0,0);\n\tfor(int i = 1;i <= n;i++) printf(\"%lld \", ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1583314977,
        "uid": 160811,
        "name": "\u4f18\u79c0\u7684\u6e23\u6e23\u79b9",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1076E \u3010Vasya and a Tree\u3011"
    },
    {
        "content": "\u8003\u8651\u5c06\u4fee\u6539\u79bb\u7ebf\u5230\u6811\u7684\u6bcf\u4e00\u4e2a\u70b9\u4e0a\uff0c\u7531\u4e8e\u4fee\u6539\u5177\u6709\u53ea\u4e0e\u6df1\u5ea6\u6709\u5173\u7684\u6027\u8d28\uff0c\u6211\u4eec\u8003\u8651$dfs$\u6574\u68f5\u6811\uff0c\u7ef4\u62a4\u4e00\u4e2a\u4ee5\u6df1\u5ea6\u4e3a\u4e0b\u6807\u7684\u652f\u6301\u5355\u70b9\u52a0\u533a\u95f4\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u5373\u53ef\uff0c\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u5206\u6cbb\u6765\u52a0\u5165\u548c\u64a4\u9500\u3002\n\n\u590d\u6742\u5ea6$nlogn$\n\n```cpp\nconst int N=3e5+5;\n\nint n,m,cnt;\nint head[N];\nll t[N],ans[N];\nstruct edge\n{\n    int to,nxt;\n};\nedge e[N<<1];\nstruct node\n{\n    int d,v;\n};\nvc<node>s[N];\n\nint lowbit(int x)\n{\n    return x&-x;\n}\nvoid add(int x,int y)\n{\n    e[++cnt].to=y;\n    e[cnt].nxt=head[x];\n    head[x]=cnt;\n}\nvoid link(int x,int y)\n{\n    add(x,y),add(y,x);\n}\nvoid modify(int x,int z)\n{\n    while(x<=n) t[x]+=z,x+=lowbit(x);\n}\nll query(int x)\n{\n    ll res=0;\n    while(x) res+=t[x],x-=lowbit(x);\n    return res;\n}\nvoid dfs(int x,int fa,int dep)\n{\n    for(auto i:s[x]) modify(min(n,i.d+dep),i.v);\n    ans[x]=query(n)-query(dep-1);\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        dfs(v,x,dep+1);\n    }\n    for(auto i:s[x]) modify(min(n,i.d+dep),-i.v);\n}\nint main()\n{\n    fio();\n    gi(n);\n    for(int i=1,x,y;i<=n-1;++i) gi(x,y),link(x,y);\n    gi(m);\n    for(int i=1,v,d,x;i<=m;++i)\n    {\n        gi(v,d,x);\n        s[v].pub({d,x});\n    }\n    dfs(1,0,1);\n    for(int i=1;i<=n;++i) print(ans[i]),pc(' ');\n    end();\n}\n```",
        "postTime": 1583248217,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1076E \u3010Vasya and a Tree\u3011"
    },
    {
        "content": "\n\u7b80\u8981\u9898\u610f\u5c31\u662f\u7ed9\u5b9a\u591a\u4e2a\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5c06**\u4e0e $u$ \u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e $k$ \u4e14\u5728 $u$ \u5b50\u6811\u5185\u7684\u70b9**\u70b9\u6743\u503c\u52a0 $x$ \uff0c\u8f93\u51fa\u6700\u7ec8\u5404\u4e2a\u70b9\u7684\u6743\u503c\u3002\n\n\u770b\u8fd9\u9898\u7684\u65f6\u5019\u6211\u5148\u60f3\u7684\u662f\u6811\u5256\uff0c\u53d1\u73b0\u6811\u5256\u5e76\u4e0d\u597d\u5904\u7406\u4e24\u70b9\u7684\u8ddd\u79bb\u9650\u5236\n\n\u7b2c\u4e8c\u79cd\u60f3\u6cd5\u662f $bfs$ \u5e8f\uff0c\u60f3\u60f3\u53ef\u80fd\u4e0d\u597d\u5904\u7406\n\n\u4e8e\u662f\u5f53\u65f6\u8fd9\u9898\u6210\u529f\u5730\u6ca1\u6709\u505a\u51fa\u6765\uff0c\u6211\u8fc7\u4e8e\u83dc\n\n\u8003\u5b8c\u770b\u4e86\u770b\u522b\u4eba\u7684\u4ee3\u7801...\u53d1\u73b0\u81ea\u5df1\u667a\u969c\u4e86...\n\n\u8003\u8651\u5355\u72ec\u7684\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u5b83\u7684\u64cd\u4f5c\u5f71\u54cd\u7684\u90fd\u662f**\u5728\u5b83\u5b50\u6811\u5185\u7684\u4e0e $u$ \u6df1\u5ea6\u5dee\u5c0f\u4e8e\u7b49\u4e8e $k$** \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u7ef4\u62a4**\u5f53\u524d\u6df1\u5ea6\u64cd\u4f5c\u603b\u548c**\u5c31\u884c\u4e86\uff08\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\uff09\uff0c\u4f46\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u7531\u4e8e $u$ \u70b9\u7684\u64cd\u4f5c\u53ea\u5f71\u54cd $u$ \u7684\u5b50\u6811\uff0c\u5176\u4ed6\u8282\u70b9\u600e\u4e48\u529e ? \u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\uff0c\u518d\u603b\u4f53\u6309 $dfs$ \u5b9e\u73b0\uff1a\n1. \u8fdb\u5165\u8be5\u70b9\n2. \u5b9e\u73b0\u8be5\u70b9\u7684\u6240\u6709\u64cd\u4f5c\n3. \u9012\u5f52\u5b83\u7684\u5b50\u6811\n4. \u64a4\u9500\u64cd\u4f5c\n\n\u8fd9\u6837 $u$ \u7684\u64cd\u4f5c\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u5b50\u6811\u4e0a\u7684\u70b9\u4e86\uff0c\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u4fee\u6539\u6df1\u5ea6 $dep(u)$~$dep(u)+k$ \u800c\u53ea\u9700\u4fee\u6539 $dep(k)$ \u6700\u540e\u67e5\u8be2\u7684\u65f6\u5019\u67e5 $sum(dep(u)$~$sum(max))$\u5c31\u597d\uff0c\u56e0\u4e3a\u5f53\u67e5\u8be2\u5230\u8fd9\u4e2a\u70b9\u65f6\uff0c\u53ea\u6709 $u$ \u7684\u7956\u5148\u8282\u70b9\u7684\u64cd\u4f5c\u5b9e\u73b0\u4e86\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684 $u$ \u7684\u513f\u5b50\u8282\u70b9\uff0c\u5982\u679c\u5b83\u7684\u503c\u6709\u4fee\u6539\uff0c\u8bf4\u660e\u8fd9\u4e2a\u4fee\u6539\u64cd\u4f5c\u662f\u6765\u81ea $u$ \u7684\u7956\u5148\u8282\u70b9\u7684\uff0c\u6240\u4ee5 $u$ \u80af\u5b9a\u4e5f\u4f1a\u88ab\u4fee\u6539  \n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll read(){\n    ll x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x * f;\n}\nconst ll N = 300030;\nstruct node{\n    ll nxt, to;\n}edge[N << 1];\nll head[N], num;\nvoid build(ll from, ll to){\n    edge[++num].nxt = head[from];\n    edge[num].to = to;\n    head[from] = num;\n}\nll c[N], n, m;\nll lowbit(ll x){ return x & -x; }\nvoid add(ll pos, ll v){\n    for(ll i=pos; i<=n; i+=lowbit(i)) c[i] += v;\n}\nll query(ll pos){\n    ll ans = 0;\n    for(ll i=pos; i; i-=lowbit(i)) ans += c[i];\n    return ans;\n}\nvector<ll> val[N], D[N];\nll ans[N];\nvoid dfs(ll u, ll f, ll d){\n    for(ll i=0; i<D[u].size(); i++){\n        add(min(n, D[u][i] + d), val[u][i]);\n    }\n    ans[u] = query(n) - query(d - 1);\n    for(ll i=head[u]; i; i=edge[i].nxt){\n        ll v = edge[i].to;\n        if(v == f) continue;\n        dfs(v, u, d + 1);\n    }\n    for(ll i=0; i<D[u].size(); i++){\n        add(min(n, D[u][i] + d), -val[u][i]);\n    }\n}\nint main(){\n    n = read();\n    for(ll i=1; i<=n-1; i++){\n        ll u = read(), v = read();\n        build(u, v); build(v, u);\n    }\n    m = read();\n    for(ll i=1; i<=m; i++){\n        ll u = read(), d = read(), v = read();\n        D[u].push_back(d);\n        val[u].push_back(v);\n    }\n    dfs(1, 0, 1);\n    for(ll i=1; i<=n; i++){\n        cout << ans[i] << \" \";\n    }\n    return 0;\n}\n\n```\n\n\n\n",
        "postTime": 1542374658,
        "uid": 60108,
        "name": "alecli",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1076E \u3010Vasya and a Tree\u3011"
    },
    {
        "content": "\u79bb\u7ebf+\u6811\u4e0a\u5dee\u5206\u3002\n\n## Solution\n\u66b4\u529b\u4fee\u6539\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\u662f\u7edf\u4e00\u8be2\u95ee\uff0c\u6240\u4ee5\u53ef\u4ee5\u79bb\u7ebf\u5904\u7406\u4e00\u4e0b\uff0c\u628a\u4fee\u6539\u90fd\u6302\u5230\u6811\u4e0a\u3002\n\n\u4ece $1$ \u5f00\u59cb dfs\uff0c\u7528\u4e00\u4e2a $\\operatorname{sum}$ \u8bb0\u5f55\u524d\u7f00\u548c\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u70b9\u7684\u7b54\u6848\u3002\u5bf9\u4e8e $v$ \u7684\u6bcf\u4e2a\u64cd\u4f5c $(d,x)$\uff0c\u53ef\u4ee5\u5dee\u5206\uff0c\u628a $\\operatorname{sum}$ \u52a0\u4e0a $x$\uff0c\u7136\u540e\u5728 $\\operatorname{dep}_{u}+d+1$ \u8fd9\u4e00\u5c42\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u904d\u5386\u5230\u7684\u65f6\u5019\u51cf\u53bb $x$\uff0c\u56de\u6eaf\u65f6\u628a\u6807\u8bb0\u53bb\u6389\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u89e3\u51b3\u672c\u9898\u4e86\uff0c\u8bb0\u5f97\u5f00 $\\texttt{long long}$\u3002\n## Code\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=3e5+5;\nstruct rec{int dep,val;};\nvector<rec>r[maxn];\nstruct node{int to,nxt;}e[maxn<<1];\nint n,q,head[maxn],cnt,dep[maxn];\nll val[maxn],ans[maxn];\nvoid add_edge(int u,int v)\n{\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nvoid dfs(int u,int fa,ll sum)\n{\n\tsum+=val[dep[u]];\n\tfor(int i=0;i<r[u].size();i++)\n\t{\n\t\tsum+=r[u][i].val;\n\t\tif(dep[u]+r[u][i].dep<n)\n\t\t\tval[dep[u]+r[u][i].dep+1]-=r[u][i].val;\n\t}\n\tans[u]=sum;\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v==fa)continue;\n\t\tdep[v]=dep[u]+1;\n\t\tdfs(v,u,sum);\n\t}\n\tfor(int i=0;i<r[u].size();i++)\n\t\tif(dep[u]+r[u][i].dep<n)\n\t\t\tval[dep[u]+r[u][i].dep+1]+=r[u][i].val;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tadd_edge(x,y);add_edge(y,x);\n\t}\n\tcin>>q;\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint v,d,x;scanf(\"%d%d%d\",&v,&d,&x);\n\t\tr[v].push_back((rec){d,x});\n\t}\n\tdep[1]=1;dfs(1,0,0);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%lld \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1653740900,
        "uid": 451328,
        "name": "lnwhl",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011CF1076E Vasya and a Tree"
    },
    {
        "content": "\u5982\u679c\u53ea\u662f\u628a $u$ \u7684 k-son \u5168\u90e8\u52a0\u4e0a $x$ \u5c31\u5f88\u597d\u505a\u3002\n\n\u5927\u6982\u601d\u8def\u662f\u7ef4\u62a4\u4e00\u4e9b`vector`\uff0c\u7b2c $i$ \u4e2a`vector`\u6309\u7167`dfs`\u5e8f\u7684 $\\text{In}$ \u503c\u88c5\u4e0b\u6240\u6709\u6df1\u5ea6\u4e3a $i$ \u7684\u8282\u70b9\u3002\u7136\u540e\u8bbe $dep_i$ \u4e3a $i$ \u7684\u6df1\u5ea6\uff0c\u6240\u6709 $u$ \u7684 k-son \u90fd\u5728\u7b2c $dep_u+k$ \u4e2a`vector`\u4e2d\uff0c\u4e14 $\\text{In}$ \u503c\u90fd\u5728 $[\\text{In}_u,\\text{Out}_u]$ \u4e2d\u3002\u6240\u4ee5\u4e8c\u5206\u67e5\u627e\u4e00\u4e0b\u786e\u5b9a $u$ \u7684 k-son \u5728`vector`\u4e2d\u5bf9\u5e94\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u628a k-son \u52a0 $x$ \u5c31\u53d8\u6210\u4e86\u533a\u95f4\u52a0 $x$\uff0c\u7531\u4e8e\u6ca1\u6709\u4fee\u6539\u53ea\u6709\u6700\u540e\u8f93\u51fa\u5355\u70b9\u67e5\u8be2\uff0c\u6240\u4ee5\u6211\u662f\u76f4\u63a5\u7528\u7684\u5dee\u5206\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u8fd9\u91cc\u662f\u6211nt\u4e86\uff0c\u76f4\u63a5\u5dee\u5206\u5b8c\u5168\u53ef\u4ee5\u3002\n\n\u90a3\u5982\u679c\u628a 0-son,1-son...k-son \u5168\u90e8\u52a0\u5462\uff1f\u53ea\u9700\u8981\u518d\u5dee\u5206\u4e00\u904d\uff08\u6811\u4e0a\u5dee\u5206\uff09\u5c31\u884c\u4e86\u3002\u6700\u540e\u95ee\u9898\u53d8\u4e3a\u628a $u$ \u70b9\u6743\u52a0\u4e0a $x$\uff0c$u$ \u7684 k+1-son \u51cf\u53bb $x$\u3002\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7edf\u8ba1\u6811\u4e0a\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u4e86\uff08$u$ \u7684\u6240\u6709\u7956\u5148\uff08\u5305\u62ec\u81ea\u5df1\uff09\u7684\u70b9\u6743\u603b\u548c\uff09\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#define int long long\n\nint c[300005], In[300005], Out[300005], idx[300005], n, cnt;\nint s[300005], dep[300005], p[300005];\nstd::vector<int> G[300005], vec[300005], vec2[300005];\nvoid update(int l, int r, int d) {\n\tfor (int i = l; i <= n; i += (i & ~i + 1)) c[i] += d;\n\tfor (int i = r + 1; i <= n; i += (i & ~i + 1)) c[i] -= d;\n}\nint query(int x) {\n\tint sum = 0;\n\tfor (int i = x; i; i -= (i & ~i + 1)) sum += c[i];\n\treturn sum;\n}\nvoid dfs(int u, int fa) {\n\tvec[dep[u] = dep[fa] + 1].push_back(In[u] = ++ cnt);\n\tvec2[dep[u]].push_back(u);\n\tfor (int v : G[u]) if (v != fa) dfs(v, u);\n\tOut[u] = cnt;\n}\nvoid DFS(int u, int fa) {\n\ts[u] += query(p[u]);\n\tfor (int v : G[u])\n\t\tif (v != fa) s[v] += s[u], DFS(v, u);\n}\n\nsigned main() {\n\tscanf(\"%lld\", &n);\n\tfor (int i = 1; i < n; ++ i) {\n\t\tint u, v;\n\t\tscanf(\"%lld%lld\", &u, &v);\n\t\tG[u].push_back(v), G[v].push_back(u);\n\t}\n\tdfs(1, -1);\n\tidx[0] = 1;\n\tfor (int i = 1; vec[i].size(); ++ i) {\n\t\tidx[i] = idx[i - 1] + vec[i - 1].size();\n\t\tfor (int j = 0; j < vec[i].size(); ++ j)\n\t\t\tp[vec2[i][j]] = idx[i] + j;\n\t}\n\tint m;\n\tscanf(\"%lld\", &m);\n\tfor (int i = 1; i <= m; ++ i) {\n\t\tint x, d, u, k;\n\t\tscanf(\"%lld%lld%lld\", &u, &d, &x);\n\t\ts[u] += x, k = dep[u] + d + 1;\n\t\tif (n < k || !vec[k].size()) continue;\n\t\tint st = std::lower_bound(vec[k].begin(), vec[k].end(), In[u]) - vec[k].begin();\n\t\tint ed = std::upper_bound(vec[k].begin(), vec[k].end(), Out[u]) - vec[k].begin() - 1;\n\t\tupdate(idx[k] + st, idx[k] + ed, -x);\n\t}\n\tDFS(1, -1);\n\tfor (int i = 1; i <= n; ++ i) printf(\"%lld \", s[i]);\n\treturn 0;\n}\n```",
        "postTime": 1626695354,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "CF1076E Vasya and a Tree"
    },
    {
        "content": "#### CF1076E Vasya and a Tree\n\n~~\u8001\u5e74\u4eba\u9009\u624b\u6ca1\u770b\u5230\u7edf\u4e00\u8be2\u95ee\u778e\u60f3\u4e8620\u5206\u949f\u600e\u4e48\u529e\uff1f\uff1f\uff1f~~\n\n\u7531\u4e8e\u7edf\u4e00\u8be2\u95ee\uff0c\u56e0\u6b64\u5176\u5b9e\u64cd\u4f5c\u5904\u7406\u7684\u987a\u5e8f\u65e0\u5173\u7d27\u8981\uff0c\u8003\u8651\u901a\u8fc7$dfs$\u5c06\u5176\u8f6c\u5316\u5230\u94fe\u4e0a\u3002\n\n\u5bf9\u4e8e\u6211\u4eec\u5f53\u524d\u641c\u7d22\u7684\u8fd9\u4e00\u6761\u94fe\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8282\u70b9\u7684\u64cd\u4f5c\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u533a\u95f4\u4e0a\u7684\u4fee\u6539\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u8fd9\u4e00\u4e2a\u70b9\u6c42\u548c\u5373\u53ef\uff0c\u7136\u540e\u518d\u5904\u7406\u5f53\u524d\u70b9\u7684\u64cd\u4f5c\uff0c\u4e4b\u540e\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7b80\u5355\u7ef4\u62a4\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u7684\u64cd\u4f5c\u53ea\u5728\u5f53\u524d\u5b50\u6811\u751f\u6548\uff0c\u56e0\u6b64\u9012\u5f52\u56de\u6765\u7684\u65f6\u5019\u8981\u9000\u6389\u8fd9\u90e8\u5206\u8d21\u732e\uff0c\u518d\u6765\u4e00\u904d\u4fee\u6539\u628a\u8d21\u732e\u6539\u6210\u8d1f\u6570\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\n#define lowbit(x) x&-x \n#define pb push_back\n#define N 300005\n#define int long long\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nstruct node\n{\n\tint v,d,x;\n}a[N];\nint cmp(node a,node b)\n{\n\treturn a.v<b.v;\n}\nint n,q,ans[N],ll[N],rr[N];\nstruct Segment_Tree\n{\n\tint ll[N<<2],rr[N<<2],v[N<<2],tag[N<<2];\n\tvoid build(int l,int r,int k)\n\t{\n\t\tll[k]=l;rr[k]=r;\n\t\tif(l==r)return;\n\t\tint mid=(l+r)>>1;\n\t\tbuild(l,mid,k*2);build(mid+1,r,k*2+1);\n\t}\n\tvoid pushdown(int k)\n\t{\n\t\ttag[k*2]+=tag[k];\n\t\tv[k*2]+=(rr[k*2]-ll[k*2]+1)*tag[k];\n\t\ttag[k*2+1]+=tag[k];\n\t\tv[k*2+1]+=(rr[k*2+1]-ll[k*2+1]+1)*tag[k];\n\t\ttag[k]=0;\n\t}\n\tint query(int l,int r,int k,int x)\n\t{\n\t\tif(l==r)return v[k];\n\t\tint mid=(l+r)>>1;pushdown(k);\n\t\tif(x<=mid)return query(l,mid,k*2,x);\n\t\telse return query(mid+1,r,k*2+1,x);\n\t}\n\tvoid modify(int l,int r,int k,int x,int y,int val)\n\t{\n\t\tif(l>=x&&r<=y){v[k]+=val*(r-l+1);tag[k]+=val;return;}\n\t\tint mid=(l+r)>>1;pushdown(k);\n\t\tif(x<=mid)modify(l,mid,k*2,x,y,val);\n\t\tif(y>mid)modify(mid+1,r,k*2+1,x,y,val);\n\t\tv[k]=v[k*2]+v[k*2+1];\n\t}\n}T;\nvector<int>G[N];\nvoid dfs(int x,int fa,int dep)\n{\n\tfor(int i=ll[x];i<=rr[x];i++)T.modify(1,n,1,dep,dep+a[i].d,a[i].x);\n\tans[x]=T.query(1,n,1,dep);int siz=G[x].size();\n\tfor(int i=0;i<siz;i++)if(G[x][i]!=fa)dfs(G[x][i],x,dep+1);\n\tfor(int i=ll[x];i<=rr[x];i++)T.modify(1,n,1,dep,dep+a[i].d,-a[i].x);\n}\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tG[x].pb(y);G[y].pb(x); \n\t}\n\tq=read();\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\ta[i].v=read();\n\t\ta[i].d=read();\n\t\ta[i].x=read();\n\t}\n\tsort(a+1,a+1+q,cmp);\n\tfor(int i=1;i<=q;i++)if(a[i].v!=a[i-1].v)ll[a[i].v]=i,rr[a[i-1].v]=i-1;\n\trr[a[q].v]=q;\n//\tfor(int i=1;i<=q;i++)\n//\t{\n//\t\tcout<<a[i].v<<\" \"<<a[i].d<<\" \"<<a[i].x<<endl;\n//\t}\n//\tputs(\"!!!!!!!!!!\");\n//\tfor(int i=1;i<=n;i++)printf(\"%d %d\\n\",ll[i],rr[i]);\n\tdfs(1,0,1);for(int i=1;i<=n;i++)printf(\"%lld \",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1612188028,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1076E \u3010Vasya and a Tree\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a$K\\ D\\  Tree$\n\n\u8bbep\u7684dfs\u5e8f\u4e3a$dfn[p]$\uff0c\u5176\u5b50\u6811\u5185\u6700\u5927\u7684dfs\u5e8f\u53eb$end[p]$\n\n\u4e00\u6b21\u4fee\u6539\u5c31\u662f\u628a\u6ee1\u8db3\n\n$$dfn[p] \\leq dfn[q] \\leq end[p] \\wedge dep[p] \\leq dep[q] \\leq dep[q]+k$$\n\n\u7684q\u7684\u70b9\u6743\u52a0\n\n\u7531\u4e8e\u662f\u77e9\u5f62\u52a0 \u6240\u4ee5\u9700\u8981\u6253\u6807\u8bb0\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4$n \\leq 300000$\n\n\u7136\u540e\u4e00\u6ce2\u8ba1\u7b97$n\\sqrt n \\leq 164316767$\n\n\u7136\u540e\u89c2\u5bdf\u5230\u65f6\u9650$2s$\n\n\u7406\u8bba\u4e0a\u662f\u80fd\u8fc7\u7684\uff0c\u4f46\u662f\u8003\u8651\u5230kd\u6811\u7684\u5e38\u6570\u2026\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u8fdb\u884c\u6807\u8bb0\u6c38\u4e45\u5316\n\n\u6700\u540e\u904d\u5386\u6574\u68f5\u6811\uff0c\u628a\u8ddf\u5230\u8282\u70b9\u8def\u5f84\u7684\u6807\u8bb0\u548c\u7d2f\u4e0b\u6765\uff0c\u5c31\u5b9e\u73b0\u4e86\u6807\u8bb0\u6c38\u4e45\u5316\n\n\u4e0d\u4f1akdtree\u7684\u6765[\u8fd9\u91cc](https://www.luogu.org/blog/van/qian-tan-pian-xu-wen-ti-yu-k-d-tree)\u5b66\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::nth_element;\ntemplate<class type>inline const type min(const type &a,const type &b)\n{\n\treturn a<b?a:b;\n}\ntemplate<class type>inline const type max(const type &a,const type &b)\n{\n\treturn a>b?a:b;\n}\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool f=0;\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\ntypedef long long ll;\nconst int N=3e5+10,K=2,inf=2147483647;\nll ans[N];\nint n,m,head[N],edc,next[N<<1],to[N<<1],dfn[N],end[N],dep[N],dot[N];\ninline const void link(int u,int v)\n{\n\tnext[++edc]=head[u];to[head[u]=edc]=v;\n\tnext[++edc]=head[v];to[head[v]=edc]=u;\n}\ninline const void dfs(int p,int fa)\n{\n\tdot[dfn[p]=++*dfn]=p;\n\tfor (int son,i=head[p];i;i=next[i])\n\t\tif ((son=to[i])^fa)\n\t\t\tdep[son]=dep[p]+1,\n\t\t\tdfs(son,p);\n\tend[p]=*dfn;\n}\nint f;\nstruct point\n{\n\tint d[K];ll w;\n\tinline point(){}\n\tinline point(const int &x,const int &y,const int &w=0):w(w){d[0]=x;d[1]=y;}\n\tinline const bool operator<(const point &p)const\n\t{\n\t\treturn d[f]<p.d[f];\n\t}\n}a[N];\ntemplate<const int k,const int maxn>class KD_Tree\n{\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\tll add;\n\t\t\ttree *son[2];\n\t\t\tpoint range,mn,mx;\n\t\t\tinline const void pushup()\n\t\t\t{\n\t\t\t\tfor (int i=0;i<k;i++)\n\t\t\t\t\tmn.d[i]=min(range.d[i],min(son[0]->mn.d[i],son[1]->mn.d[i])),\n\t\t\t\t\tmx.d[i]=max(range.d[i],max(son[0]->mx.d[i],son[1]->mx.d[i]));\n\t\t\t}\n\t\t\tinline const bool out(const point &lower,const point &upper)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<k;i++)\n\t\t\t\t\tif (mn.d[i]>upper.d[i]||mx.d[i]<lower.d[i])\n\t\t\t\t\t\treturn 1;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tinline const bool in(const point &lower,const point &upper)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<k;i++)\n\t\t\t\t\tif (!(mn.d[i]>=lower.d[i]&&mx.d[i]<=upper.d[i]))\n\t\t\t\t\t\treturn 0;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tinline const bool at(const point &lower,const point &upper)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<k;i++)\n\t\t\t\t\tif (!(range.d[i]>=lower.d[i]&&range.d[i]<=upper.d[i]))\n\t\t\t\t\t\treturn 0;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}*root,memory_pool[maxn],*null,*tail;\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\tnull->son[0]=null->son[1]=null;\n\t\t\tfor (int i=0;i<k;i++)null->mn.d[i]=inf,null->mx.d[i]=-inf;\n\t\t}\n\t\tinline tree *spawn(const point &x)\n\t\t{\n\t\t\ttree *p=tail++;\n\t\t\tp->range=p->mn=p->mx=x;\n\t\t\tp->son[0]=p->son[1]=null;\n\t\t\treturn p;\n\t\t}\n\t\tinline tree *build(int l,int r,int d)\n\t\t{\n\t\t\tif (l>r)return null;\n\t\t\tconst int mid=l+r>>1;f=d;\n\t\t\tnth_element(a+l,a+mid,a+r+1);\n\t\t\ttree *p=spawn(a[mid]);\n\t\t\tif (l==r)return p;\n\t\t\tp->son[0]=build(l,mid-1,(d+1)%k);\n\t\t\tp->son[1]=build(mid+1,r,(d+1)%k);\n\t\t\tp->pushup();\n\t\t\treturn p;\n\t\t}\n\t\tinline const void add(tree *p,const point &x,const point &y,const int &w)\n\t\t{\n\t\t\tif (p==null)return;\n\t\t\tif (p->out(x,y))return;\n\t\t\tif (p->in(x,y))return p->add+=w,void();\n\t\t\tif (p->at(x,y))p->range.w+=w;\n\t\t\tadd(p->son[0],x,y,w);add(p->son[1],x,y,w);\n\t\t}\n\t\tinline const void check(tree *p,ll add)\n\t\t{\n\t\t\tif (p==null)return;\n\t\t\tans[dot[p->range.d[0]]]=p->range.w+(add+=p->add);\n\t\t\tcheck(p->son[0],add);check(p->son[1],add);\n\t\t}\n\tpublic:\n\t\tinline const void build()\n\t\t{\n\t\t\tinit();root=build(1,n,0);\n\t\t}\n\t\tinline const void add(int x1,int y1,int x2,int y2,int w)\n\t\t{\n\t\t\tadd(root,point(x1,y1),point(x2,y2),w);\n\t\t}\n\t\tinline const void check()\n\t\t{\n\t\t\tcheck(root,0);\n\t\t}\n};\nKD_Tree<K,N>kdt;\nint main()\n{\n\tread(n);\n\tfor (int u,v,i=1;i<n;i++)read(u),read(v),link(u,v);\n\tdfs(1,0);\n\tfor (int i=1;i<=n;i++)a[i]=point(dfn[i],dep[i]);\n\tkdt.build();\n\tread(m);\n\tfor (int u,k,w;m--;)\n\t\tread(u),read(k),read(w),\n\t\tkdt.add(dfn[u],-inf,end[u],k+dep[u],w);\n\tkdt.check();\n\tfor (int i=1;i<=n;i++)printf(\"%lld \",ans[i]);\n\tputchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1572575742,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1076E \u3010Vasya and a Tree\u3011"
    },
    {
        "content": "\u597d\u9898\uff01\n\n\u597d\u5427\uff0c\u6211\u628a\u6211\u6700\u521d\u7684\u601d\u8def\u5230\u6b63\u89e3\u90fd\u8bf4\u4e00\u4e0b\u597d\u4e86\u3002\n\n\u9996\u5148\uff0c\u6211\u60f3\u5230\u4e86\u5e26\u4fee\u4e3b\u5e2d\u6811 + $BIT$\uff0c\u4f46\u662f\u6211\u628a\u8fd9\u4e2a\u60f3\u6cd5\u5426\u51b3\u6389\u4e86\u3002\u8fd9\u662f $O(n\\log^2 n)$ \u7684\u89e3\u6cd5\uff0c\u800c\u4e14\u597d\u50cf\u662f\u9519\u8bef\u7684\u3002\n\n\u4e0a\u4e2a\u661f\u671f\u505a\u4e86\u4e00\u4e9b $K-D\\ Tree$ \u7684\u9898\u76ee\uff0c\u6211\u60f3\u5c06\u8fd9\u9053\u9898\u76ee\u7684\u52a0\u6cd5\u8f6c\u5316\u6210\u4e00\u4e2a\u77e9\u5f62\u7684\u6574\u4f53\u52a0\u51cf\u3002\u6211\u4eec\u4ee5 $x$ \u8f74\u4e3a $dfs$ \u5e8f\uff0c$y$ \u8f74\u4e3a\u6df1\u5ea6\uff0c\u6211\u4eec\u5c06\u77e9\u5f62 $x$ \u8f74 $[st_x,ed_x]$\uff0c$y$ \u8f74 $[dep_x,min(dep_x+d,maxdep)]$ \u540c\u65f6\u52a0\u4e00\u4e2a $k$\u3002\u7136\u540e\u6700\u540e\u67e5\u8be2 $n$ \u4e2a\u70b9 $(st_x,dep_x)$ \u7684\u503c\uff0c\u7528 $K-D\\ Tree$ \u7ef4\u62a4\uff0c\u6700\u574f\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\n\n\u6ce8\u610f\u5230\u8fd9\u4e0d\u662f $Ynoi$\uff0c\u5e76\u4e0d\u5361\u5e38\uff0c\u800c\u4e14\u662f\u6700\u540e\u67e5\u8be2\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u53e6\u8f9f\u8e4a\u5f84\u3002\n\n\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u5728 $x$ \u8f74\u548c $y$ \u8f74\u90fd\u6781\u5927\u7684\u65f6\u5019\u600e\u4e48\u529e\u5462\uff1f\u4e0d\u80fd\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u8dd1\u4e00\u904d\u626b\u63cf\u7ebf\uff01\n\n\u5c06\u77e9\u5f62\u5dee\u5206\u4e00\u4e0b\uff0c\u5728 $st_x$ \u7684\u65f6\u5019\uff0c\u533a\u95f4 $[dep_x,min(dep_x+d,maxdep)]$ \u52a0\u4e0a $k$\uff0c\u5728 $ed_x+1$ \u7684\u65f6\u5019\u51cf\u6389\u5c31\u597d\u4e86\uff0c\u4e00\u904d\u626b\u63cf\u4e00\u904d\u8bb0\u5f55 $ans$\n\n\u90a3\u4e48\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u4fee\u6539+\u5355\u70b9\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u6811\u72b6\u6570\u7ec4+\u5dee\u5206\u6216\u8005\u7ebf\u6bb5\u6811\u3002\n\n\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define lowbit(x) ((x)&(-(x)))\nusing namespace std;\nconst int maxn=300000+10;\nint n,m,c[maxn],ans[maxn],maxdep,dep[maxn],st[maxn],ed[maxn],mp[maxn],tim;\nint head[maxn],to[maxn<<1],nxt[maxn<<1],tot;\n\nstruct Query{\n    int l,r,k;\n};\nvector<Query> in[maxn],out[maxn];\n\ninline void add(int x,int y){\n    to[++tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}\nvoid update(int x,int y){\n    for(;x<=maxdep;x+=lowbit(x)) c[x]+=y;\n}\nint sum(int x){\n    int ans=0;\n    for(;x;x-=lowbit(x)) ans+=c[x];\n    return ans;\n}\n\nvoid dfs(int x,int f){\n    st[x]=++tim;\n    mp[tim]=x;\n    dep[x]=dep[f]+1;\n    maxdep=max(maxdep,dep[x]);\n    for(int i=head[x],y;i;i=nxt[i]){\n        y=to[i];\n        if(y==f) continue;\n        dfs(y,x);\n    }\n    ed[x]=tim;\n}\n\nsigned main()\n{\n    scanf(\"%I64d\",&n);\n    int x,y;\n    for(int i=1;i<n;i++){\n        scanf(\"%I64d%I64d\",&x,&y);\n        add(x,y);add(y,x);\n    }\n    dfs(1,0);\n    scanf(\"%I64d\",&m);\n    int l,r,k;\n    for(int i=1;i<=m;i++){\n        scanf(\"%I64d%I64d%I64d\",&l,&r,&k);\n        in[st[l]].push_back((Query){dep[l],min(dep[l]+r,maxdep),k});\n        out[ed[l]+1].push_back((Query){dep[l],min(dep[l]+r,maxdep),k});\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=0;j<in[i].size();j++)\n            update(in[i][j].l,in[i][j].k),update(in[i][j].r+1,-in[i][j].k);\n        for(int j=0;j<out[i].size();j++)\n            update(out[i][j].l,-out[i][j].k),update(out[i][j].r+1,out[i][j].k);\n        ans[mp[i]]=sum(dep[mp[i]]);\n    }\n    for(int i=1;i<=n;i++)\n        printf(\"%I64d \",ans[i]);\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1544581683,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1076E \u3010Vasya and a Tree\u3011"
    }
]