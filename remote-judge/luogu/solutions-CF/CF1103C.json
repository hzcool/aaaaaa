[
    {
        "content": "[\u5b89\u5229\u4e00\u6ce2\u535a\u5ba2](https://foreverlasting1202.github.io/)\n\nC Johnny Solving\n\n\u9898\u9762\uff1a\u7ed9\u51fa\u4e00\u5f20\u65e0\u91cd\u8fb9\u7684\u65e0\u5411\u56fe\uff08\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e3\uff09\u548c\u4e00\u4e2a\u9650\u5236$k$\uff0c\u9700\u8981\u4f60\u6784\u9020\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e2d\u7684\u4e00\u79cd\uff1a\n\n1\u3001\u627e\u51fa\u4e00\u6761\u8def\u5f84\u957f\u5ea6\u4e3a$n/k$\u3002\n\n2\u3001\u627e\u51fa$k$\u4e2a\u73af\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u73af\u7684\u957f\u5ea6\u5927\u4e8e3\u800c\u4e14\u4e0d\u662f3\u7684\u500d\u6570\uff0c\u5e76\u4e14\u8981\u6c42\u4fdd\u8bc1\u6bcf\u4e2a\u73af\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u5728\u8fd9$k$\u4e2a\u73af\u91cc\u53ea\u51fa\u73b0\u4e00\u6b21\u3002\n\n\u505a\u6cd5\uff1a\u6784\u9020\u9898\u3002\u6211\u6574\u6574\u60f3\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u60e8\u7684\u4e00\u6279\u3002\u7b2c\u4e00\u4e2a\u60c5\u51b5\u5f88\u597d\u627e\uff0c\u5148\u5efa\u51fa\u4e00\u68f5\u6811\uff0c\u7136\u540e\u5728\u4e0a\u9762\u6c42\u76f4\u5f84\u5c31\u597d\u4e86\u3002\u7b2c\u4e8c\u4e2a\u60c5\u51b5\u5c31\u4e0d\u597d\u641e\u4e86\uff0c\u9996\u5148\uff0c\u6211\u4eec\u8981\u77e5\u9053\u5982\u679c\u4e0d\u5b58\u5728\u7b2c\u4e00\u4e2a\u60c5\u51b5\u7684\u65f6\u5019\uff0c\u4e00\u68f5\u751f\u6210\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u6570\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e$k$\u3002\n\n\u8fd9\u5176\u5b9e\u5f88\u597d\u8bc1\u660e\u7684\u3002\u6211\u4eec\u7528\u53cd\u8bc1\u6cd5\u3002\u5047\u8bbe\u5c11\u4e8e$k$\u4e2a\u53f6\u5b50\u7ed3\u70b9\u4e14\u6ca1\u6709\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5219\u8bf4\u660e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u6df1\u5ea6\u8981\u5c0f\u4e8e$n/k$\uff0c\u90a3\u4e48\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u4e4b\u548c\u5c31\u4f1a\u5c0f\u4e8e$n-1$\u4e86\u3002\u8fd9\u663e\u7136\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u56e0\u4e3a\u53f6\u5b50\u7ed3\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u81f3\u5c11\u5305\u542b\u4e86\u6bcf\u6761\u8fb9\u4e00\u6b21\uff0c\u6240\u4ee5\u5c31\u8bc1\u597d\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u7684\u662f\u5b83\u4e00\u5b9a\u80fd\u6784\u9020\u51fa\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u73af\u3002\n\n\u56e0\u4e3a\u4e00\u4e2a\u70b9\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e3\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u800c\u8a00\uff0c\u9664\u4e86\u5b83\u7236\u4eb2\u4ee5\u5916\uff0c\u81f3\u5c11\u8fd8\u6709\u4e24\u4e2a\u5b83\u7684\u7956\u5148\u4e0e\u5b83\u6709\u8fde\u8fb9\u3002\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u4e0e\u7956\u5148\u8fde\u8fb9\u6784\u6210\u7684\u73af\u957f\u5ea6\u6ee1\u8db3\u4e0d\u662f3\u7684\u500d\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u53f6\u5b50\u7ed3\u70b9\u4e00\u5b9a\u53ea\u88ab\u9009\u4e00\u904d\u3002\u5426\u5219\u6211\u4eec\u628a\u5b83\u7684\u4e24\u4e2a\u7956\u5148\u548c\u5b83\u76f8\u8fde\u7684\u73af\u5f04\u51fa\u6765\uff0c\u90a3\u4e2a\u73af\u4e00\u5b9a\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u7a0d\u5fae\u8bc1\u660e\u4e00\u4e0b\u3002\u5047\u8bbe\u53f6\u5b50\u7ed3\u70b9\u4e3a$p$\uff0c\u4e24\u4e2a\u7956\u5148\u5206\u522b\u4e3a$a$,$b$\uff0c\u5176\u4e2d$dep[a]<dep[b]$\u3002\n\n\u6211\u4eec\u6709$dep[p]-dep[a]+1$\u662f3\u7684\u500d\u6570\uff0c$dep[p]-dep[b]+1$\u662f3\u7684\u500d\u6570\uff0c\u90a3\u4e48$dep[b]-dep[a]+2$\u4e00\u5b9a\u4e0d\u662f3\u7684\u500d\u6570\uff08\u4e24\u4e2a\u505a\u5dee\uff09\uff0c\u4e8e\u662f\u5c31\u8bc1\u597d\u4e86\u3002\n\n\u56e0\u6b64\u5c31\u6784\u9020\u51fa\u6765\u4e86\u3002\n\ncode:\n```cpp\n//2019.1.25 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-10\ninline int read() {\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {\n        if(ch=='-')w=1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y) {\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x) {\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y) {\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y) {\n    return x<y?x:y;\n}\ntypedef vector<int> vec;\n#define pb push_back\nconst int N=2.5e5+10,M=5e5+10;\nnamespace MAIN {\n    vec leaf;\n    struct E{\n        int next,to;\n        E() {}\n        E(res next,res to):next(next),to(to) {}\n    }edge[M<<1];\n    int head[N],cnt;\n    inline void addedge(const res &u,const res &v){\n        edge[++cnt]=E(head[u],v),head[u]=cnt;\n        edge[++cnt]=E(head[v],u),head[v]=cnt;\n    }\n    bool vis[N],lea[N];\n    int fa[N],dep[N];\n    int n,m,k;\n    void dfs(const res &x,const res &fax,const res &depx){\n        fa[x]=fax,dep[x]=depx,vis[x]=1;\n        if(depx>=(n+k-1)/k){\n            puts(\"PATH\");\n            printf(\"%d\\n\",depx);\n            for(res i=x;i;i=fa[i])printf(\"%d \",i);\n            puts(\"\");\n            exit(0);\n        }\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(vis[tox])continue;\n            dfs(tox,x,depx+1),lea[x]=1;\n        }\n        if(!lea[x])leaf.pb(x);\n    }\n    inline bool cmp(const res &x,const res &y){\n        return dep[x]<dep[y];\n    }\n    inline void MAIN(){\n        memset(head,-1,sizeof(head));\n        n=read(),m=read(),k=read();\n        for(res i=1;i<=m;i++){\n            res u=read(),v=read();\n            addedge(u,v);\n        }\n        dfs(1,0,1);\n        puts(\"CYCLES\");\n        for(res t=0;t<k;t++){\n            res x=leaf[t];\n            bool flag=0;\n            vec pos;\n            pos.clear();\n            for(res i=head[x];~i;i=edge[i].next){\n                res tox=edge[i].to;\n                if(pos.size()!=2)pos.pb(tox);\n                if(tox==fa[x]||(dep[x]-dep[tox]+1)%3==0)continue;\n                printf(\"%d\\n\",dep[x]-dep[tox]+1);\n                for(res p=x;p!=fa[tox];p=fa[p])printf(\"%d \",p);\n                puts(\"\");\n                flag=1;\n                break;\n            }\n            if(flag)continue;\n            sort(pos.begin(),pos.end(),cmp);\n            printf(\"%d\\n\",dep[pos[1]]-dep[pos[0]]+2);\n            res a=pos[0],b=pos[1];\n            while(fa[a]!=fa[b])printf(\"%d \",b),b=fa[b];\n            printf(\"%d %d\\n\",b,x);\n        }\n    }\n}\nint main() {\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1548545684,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF1103C\u3011Johnny Solving"
    },
    {
        "content": "## Q1\n\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u4e24\u4e2a\u95ee\u9898\u5c31\u4f1a\u53d1\u73b0\u7b2c\u4e00\u95ee\u662f\u6bd4\u8f83\u597d\u5224\u65ad\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u7528 DFS \u6c42\u4e00\u68f5\u751f\u6210\u6811\uff0c\u770b\u4e00\u4e0b\u76f4\u5f84\u662f\u5426 $\\ge \\lfloor\\frac{n}{k}\\rfloor$ \u5c31\u597d\u4e86\u3002\n\n## Q2\n\n\u7b2c\u4e00\u95ee\uff0c\u5982\u679c\u4e0d\u6210\u7acb\uff0c\u90a3\u5c31\u8bf4\u660e\u76f4\u5f84\u662f\u5c0f\u4e8e $\\lfloor\\frac{n}{k}\\rfloor$ \u7684\uff0c\u540c\u7406\u53ef\u4ee5\u63a8\u51fa\u6811\u7684\u6700\u5927\u6df1\u5ea6\u4e5f\u662f\u5c0f\u4e8e $\\lfloor\\frac{n}{k}\\rfloor$ \u7684\uff0c\u800c\u9898\u76ee\u8bf4\u4e86\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e $3$\uff0c\u8fd9\u6837\u4f60\u662f\u6784\u9020\u4e0d\u51fa\u53f6\u5b50\u8282\u70b9\u5c0f\u4e8e $k$ \u7684\u6811\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u8981\u6ca1\u6709 $\\ge \\lfloor\\frac{n}{k}\\rfloor$ \u7684\u94fe\u7684\u8bdd\uff0c\u94fe\u6700\u957f\u4e3a $\\lfloor\\frac{n}{k}\\rfloor-1=\\lfloor\\frac{n-k}{k}\\rfloor$\uff0c\u90a3\u4e48\u6700\u4f18\u7684\u6784\u9020\u5c31\u662f\u83ca\u82b1\u56fe\u3002\n\n**\u8fd9\u91cc\u5176\u5b9e\u662f\u628a\u6784\u9020\u51fa\u6765\u7684\u83ca\u82b1\u56fe\u7684\u4e2d\u5fc3\u70b9\u7b97\u4e86 $n$ \u6b21\uff0c\u4f46\u5b9e\u9645\u4e0a\u7684\u503c\u6bd4 $\\lfloor\\frac{n-k}{k}\\rfloor$ \u8981\u5c0f\uff0c\u6240\u4ee5\u540e\u9762\u53f6\u5b50\u8282\u70b9\u6570\u7684\u7ed3\u8bba\u8fd8\u662f\u6210\u7acb\u7684\u3002**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/d9dnjjs9.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lmgb8q5r.png)\n\n\u663e\u7136\u7b2c\u4e8c\u79cd\u66f4\u4f18\uff0c\u56e0\u4e3a\u540c\u6837\u7684\u53f6\u5b50\u8282\u70b9\u6570\u5305\u542b\u4e86\u66f4\u591a\u7684\u70b9\u3002\n\n\u6240\u4ee5\u94fe\u6570 $=$ \u53f6\u5b50\u8282\u70b9\u6570 $=n\\times \\lfloor\\frac{k}{n-k}\\rfloor= \\lfloor \\frac{n\\times k}{n-k}\\rfloor$\uff0c\u56e0\u4e3a $n\\ge k$ \u6240\u4ee5 $n\\times k\\ge k^{2}$\uff0c$n$ \u4e00\u5b9a\u662f\u5927\u4e8e $n-k$ \u7684\uff0c\u5c06 $\\lfloor\\frac{n}{n-k}\\rfloor$ \u770b\u4f5c\u4e00\u4e2a\u5df2\u77e5\u6570\u7684\u8bdd\u4e00\u5b9a\u662f\u6052\u5927\u4e8e $1$ \u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5f0f\u5b50\u7684\u503c\u4e00\u5b9a\u662f\u6052\u5927\u4e8e\u7b49\u4e8e $k$ \u7684\uff0c\u4f46\u7531\u4e8e\u662f\u5411\u4e0b\u53d6\u6574\u6240\u4ee5\u662f\u6709\u53ef\u80fd\u7b49\u4e8e $k$ \u7684\uff0c\u6240\u4ee5\u53f6\u5b50\u8282\u70b9\u6570\u80af\u5b9a\u662f $\\ge k$ \u7684\u3002\n\n\u9898\u76ee\u4e2d\u8bf4\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e $3$\uff0c\u90a3\u4e48\u53f6\u5b50\u8282\u70b9\u80af\u5b9a\u5c31\u53ea\u80fd\u662f\u548c\u81ea\u5df1\u4e0a\u9762\u7684\u70b9\u8fde\uff0c\u4e5f\u5c31\u662f\u8fd4\u7956\u8fb9\uff0c\u56e0\u4e3a\u6ca1\u6709\u91cd\u8fb9\u6240\u4ee5\u4e00\u5b9a\u6709\u4e24\u6761\u8fde\u5728\u7236\u4eb2\u8282\u70b9\u5f80\u4e0a\u7684\u70b9\u7684\u8fb9\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u4e2a\u73af\u662f\u5927\u4e8e $3$ \u7684\u3002\u4e5f\u8bb8\u4f60\u4f1a\u95ee\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u662f\u8fd4\u7956\u8fb9\u800c\u4e0d\u662f\u6a2a\u53c9\u8fb9\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u6309 DFS \u5e8f\u627e\u7684\u751f\u6210\u6811\uff0c\u5047\u5982\u6211\u4eec\u6700\u540e\u5f97\u5230\u7684\u751f\u6210\u6811\u662f\u4e0b\u9762\u7684\u6a21\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wuzg8wuc.png)\n\n\u5982\u679c\u8981\u662f $F\\to E$ \u6709\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u5728 DFS \u7684\u65f6\u5019 $E$ \u4f1a\u6210\u4e3a $F$ \u7684\u5b50\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u8fd9\u4e2a DFS \u751f\u6210\u6811\u4e0a\u662f\u4e0d\u5b58\u5728\u6a2a\u53c9\u8fb9\u7684\uff0c\u662f DFS \u5e8f\u4fdd\u8bc1\u4e86\u5269\u4f59\u7684\u4e24\u6761\u8fb9\u90fd\u662f\u8fd4\u7956\u8fb9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd9\u6837\u5c31\u4e00\u5b9a\u81f3\u5c11\u80fd\u627e\u51fa $k$ \u4e2a\u73af\u4e86\uff0c\u4f46\u662f\u5982\u4f55\u5904\u7406\u5bf9\u4e8e\u73af\u7684\u9650\u5236\uff1f\n\n\u5bf9\u4e8e\u81f3\u5c11\u4e00\u4e2a\u70b9\u5728 $k$ \u4e2a\u73af\u91cc\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u53ea\u8ba1\u7b97\u4e00\u4e2a\u73af\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u662f\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u3002\n\n\u5bf9\u4e8e\u73af\u7684\u957f\u5ea6 $len>3$ \u4e14 $len\\bmod 3 \\ne 0$\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u4e0b\uff0c\u8bbe $dep_{i}$ \u8868\u793a $i$ \u53f7\u70b9\u5728\u751f\u6210\u6811\u4e0a\u7684\u6df1\u5ea6\u3002\n\n\u6211\u4eec\u753b\u4e2a\u56fe\u5c31\u53ef\u4ee5\u77e5\u9053\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/funjo9d4.png)\n\n\u4e0a\u56fe\u4e2d\u4ee5 $J$ \u4e3a\u53f6\u5b50\u8282\u70b9\u8ba8\u8bba\u6709\u4e09\u4e2a\u73af\uff1a\n\n1. $J,H,F$ \u6784\u6210\u7684\u73af\uff0c\u957f\u5ea6\u4e3a $dep_{J}-dep_{F}+1$\u3002\n\n2. $J,H,F,D,B$ \u6784\u6210\u7684\u73af\uff0c\u957f\u5ea6\u4e3a $dep_{J}-dep_{B}+1$\u3002\n\n3. $J,F,D,B$ \u6784\u6210\u7684\u73af\uff0c\u957f\u5ea6\u4e3a $dep_{F}-dep_{B}+2$\u3002\n\n\u90a3\u4e48\u4e07\u4e00\u91cc\u9762\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u73af\u5462\uff1f\n\n\u8bbe\u5f53\u524d\u70b9\u4e3a $u$\uff0c\u8fd4\u7956\u8fb9\u8fde\u5411\u7684\u7956\u5148\u4e3a $x,y$\u3002\n\n\u5982\u679c $dep_{u}-dep_{x}+1$ \u548c $dep_{u}-dep_{y}+1$ \u90fd\u4e3a $3$ \u7684\u500d\u6570\uff0c\u90a3\u4e48\u4e24\u4e2a\u5f0f\u5b50\u505a\u5dee\u53ef\u4ee5\u5f97\u5230 $dep_{x}-dep_{y}$ \u4e3a $3$ \u7684\u500d\u6570\uff0c\u90a3\u4e48\u52a0\u4e0a $2$ \u80af\u5b9a\u5c31\u4e0d\u662f $3$ \u7684\u500d\u6570\u4e86\uff0c\u5176\u4ed6\u4e24\u79cd\u60c5\u51b5\u4e5f\u662f\u8fd9\u6837\uff0c\u53ef\u4ee5\u5f97\u51fa\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5fc5\u5b9a\u6709\u4e00\u4e2a\u73af\u7b26\u5408\u8981\u6c42\u3002\n\n\u4e0a\u9762\u7684\u63a8\u7406\u90fd\u662f\u57fa\u4e8e\u751f\u6210\u6811\u4e0a\u7684\u70b9\u7684\u6700\u5927\u6df1\u5ea6 $<\\lfloor\\frac{n}{k}\\rfloor$ \u7684\uff0c\u6240\u4ee5\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u751f\u6210\u6811\u4e0a\u7684\u70b9\u7684\u6700\u5927\u6df1\u5ea6\u5c0f\u4e8e $\\lfloor\\frac{n}{k}\\rfloor$ \u7b2c\u4e8c\u95ee\u5c31\u6709\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u76f4\u63a5\u5728 DFS \u7684\u65f6\u5019\u987a\u4fbf\u5904\u7406\u6bcf\u4e00\u4e2a\u70b9\u7684\u6df1\u5ea6\u5c31\u597d\uff0c\u6700\u540e\u7528\u8fd9\u4e2a\u503c\u6765\u5224\u65ad\u505a\u7b2c\u4e00\u95ee\u8fd8\u662f\u7b2c\u4e8c\u95ee\u3002\n\ncode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000100\n#define M 250010\n#define endl '\\n'\nusing namespace std;\nint n,m,k,cnt,head[N],cl,ye[M],dep[M],fa[M],zx[M][2],mxdep,ed;\nstruct sb{int u,v,next;}e[N];\ninline void add(int u,int v){e[++cnt].v=v;e[cnt].next=head[u];head[u]=cnt;}\ninline int read(){int x=0,f=1;char ch=getchar();while(!isdigit(ch)){f=ch!='-';ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}return f?x:-x;}\ninline void print(int u,int v){cout<<v<<\" \";if(u==v)return ;print(u,fa[v]);}\ninline void dfs(int u,int f,int dp)\n{\n\tdep[u]=dp;\n\tif(dep[u]>mxdep)mxdep=dep[u],ed=u;\n\tfa[u]=f;\n\tye[++cl]=u;\n\tfor(int i=head[u];~i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==f)continue;\n\t\tif(dep[v]){if(!zx[u][0])zx[u][0]=v;else zx[u][1]=v;continue;}\n\t\tif(ye[cl]==u)cl--;\n\t\tdfs(v,u,dp+1);\n\t}\n}\nsigned main()\n{\n\tmemset(head,-1,sizeof head);\n\tn=read(),m=read(),k=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v),add(v,u);\n\t}\n\tdfs(1,-1,1);\n\tif(mxdep>=n/k)\n\t{\n\t\tcout<<\"PATH\"<<endl<<mxdep<<endl;\n\t\twhile(ed!=-1)cout<<ed<<\" \",ed=fa[ed];\n\t\treturn 0;\n\t}\n\tcout<<\"CYCLES\"<<endl;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint u=ye[i],x=zx[u][0],y=zx[u][1];\n\t\tif(dep[x]>dep[y])swap(x,y);\n\t\tif((dep[u]-dep[x]+1)%3!=0)//u\u548cx\u6784\u6210\u73af \n\t\t{\n\t\t\tcout<<(dep[u]-dep[x]+1)<<endl;\n\t\t\tprint(x,u);cout<<endl;\n\t\t}\n\t\telse if((dep[u]-dep[y]+1)%3!=0)//u\u548cy\u6784\u6210\u73af \n\t\t{\n\t\t\tcout<<(dep[u]-dep[y]+1)<<endl;\n\t\t\tprint(y,u);cout<<endl;\n\t\t}\n\t\telse//x\u548cy\u6784\u6210\u73af \n\t\t{\n\t\t\tcout<<(dep[y]-dep[x]+2)<<endl<<u<<\" \";\n\t\t\tprint(x,y);cout<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683278512,
        "uid": 526519,
        "name": "Aisaka_Taiga",
        "ccfLevel": 0,
        "title": "CF1103C\u9898\u89e3"
    },
    {
        "content": "## $\\text{Description}$\n\u7ed9\u51fa\u4e00\u5f20\u65e0\u91cd\u8fb9\u7684\u65e0\u5411\u56fe\uff08\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e $3$\uff09\u548c\u4e00\u4e2a\u9650\u5236 $k$\uff0c\u9700\u8981\u4f60\u6784\u9020\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e2d\u7684\u4e00\u79cd\uff1a\n\n1\u3001\u627e\u51fa\u4e00\u6761\u8def\u5f84\u957f\u5ea6\u4e3a $n/k$\u3002\n\n2\u3001\u627e\u51fa $k$ \u4e2a\u73af\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u73af\u7684\u957f\u5ea6\u5927\u4e8e $3$ \u800c\u4e14\u4e0d\u662f $3$ \u7684\u500d\u6570\uff0c\u5e76\u4e14\u8981\u6c42\u4fdd\u8bc1\u6bcf\u4e2a\u73af\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u5728\u8fd9 $k$ \u4e2a\u73af\u91cc\u53ea\u51fa\u73b0\u4e00\u6b21\u3002\n## $\\text{Solution}$\n\u4e0d\u9519\u7684\u4e00\u9053\u9898\u3002  \n\u4e0d\u96be\u60f3\u5230\u5148\u5efa\u51fa dfs \u751f\u6210\u6811\u7684\u5957\u8def\u3002  \n\u7136\u540e\uff0c\u82e5\u76f4\u5f84\u5927\u4e8e $n/k$\uff0c\u5c31\u5df2\u7ecf\u6ee1\u8db3\u6761\u4ef6\u4e00\u4e86\u3002  \n\u5426\u5219\uff0c\u5fc5\u7136\u6709\u6bcf\u4e2a\u7ed3\u70b9\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7 $n/k$\uff0c\u90a3\u4e48\u53f6\u5b50\u7684\u6570\u91cf\u5fc5\u7136\u4e0d\u5c11\u4e8e $k$ \u4e2a\u3002  \n\u540c\u65f6\uff0c\u6bcf\u4e2a\u53f6\u5b50 $u$ \u5fc5\u7136\u81f3\u5c11\u6709\u4e24\u6761\u975e\u6811\u8fd4\u7956\u8fb9\u3002\uff0c\u5047\u8bbe\u5206\u522b\u8fde\u5411 $x,y$\u3002  \n\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u4e00\u5b9a\u6709\u4e00\u4e2a\u4e0d\u662f $3$ \u7684\u500d\u6570\u7684\u73af\u3002  \n\u628a\u53f6\u5b50\u4f5c\u4e3a\u4ee3\u8868\u7ed3\u70b9\u5373\u53ef\u3002  \n## $\\text{Code}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\nconst int N=5e5+100;\ninline ll read(){\n  ll x(0),f(1);char c=getchar();\n  while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n  while(isdigit(c)) {x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n  return x*f;\n}\nint n,m,k;\nstruct node{\n  int to,nxt;\n}p[N<<1];\nint fi[N],cnt;\ninline void addline(int x,int y){\n  p[++cnt]=(node){y,fi[x]};fi[x]=cnt;\n  return;\n}\nbool vis[N],jd[N];\nvector<int>v[N];\nint fa[N],dep[N];\nvoid dfs(int x,int f){\n  fa[x]=f;dep[x]=dep[f]+1;vis[x]=1;\n  for(int i=fi[x];~i;i=p[i].nxt){\n    int to=p[i].to;\n    if(to==f) continue;\n    if(vis[to]){\n      if(dep[to]<dep[x]) v[x].push_back(to);      \n    }\n    else{\n      jd[x]=1;dfs(to,x);\n    }\n  }\n  return;\n}\nvoid print(int x,int tp){\n  //printf(\"%d\\n\",dep[x]-dep[tp]+1);\n  while(x!=fa[tp]) printf(\"%d \",x),x=fa[x];\n  putchar('\\n');\n  return;\n}\ninline bool ok(int o){return o>2&&o%3;}\nbool bac[4];\nbool pd[N];\nsigned main(){\n#ifndef ONLINE_JUDGE\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n#endif\n  memset(fi,-1,sizeof(fi));cnt=-1;\n  n=read();m=read();k=read();\n  for(int i=1;i<=m;i++){\n    int x=read(),y=read();\n    addline(x,y);addline(y,x);\n  }\n  dfs(1,0);\n  for(int i=1;i<=n;i++){\n    if(1ll*dep[i]*k>=n){\n      printf(\"PATH\\n\");\n      printf(\"%d\\n\",dep[i]);\n      print(i,1);return 0;\n    }\n  }\n  printf(\"CYCLES\\n\");\n  for(int i=1;i<=n&&k;i++){\n    int x(0),y(0),z(0);bac[0]=bac[1]=bac[2]=0;\n    if(jd[i]) continue;\n    for(auto now:v[i]){\n      if(pd[now]) continue;\n      if(ok(dep[i]-dep[now]+1)){\n\tprintf(\"%d\\n\",dep[i]-dep[now]+1);\n\tpd[i]=1;\n\tprint(i,now);k--;break;\n      }\n      else if(x&&ok(abs(dep[x]-dep[now])+1+1)){\n\tif(dep[x]>dep[now]) swap(x,now);\n\tprintf(\"%d\\n%d \",dep[now]-dep[x]+1+1,i);\n\tprint(now,x);\n\tpd[i]=1;k--;\n\tbreak;\n      }\n      else if(y&&ok(abs(dep[y]-dep[now])+1+1)){\n\tif(dep[y]>dep[now]) swap(y,now);\n\tprintf(\"%d\\n%d \",dep[now]-dep[y]+1+1,i);\n\tprint(now,y);\n\tpd[i]=1;k--;\n\tbreak;\n      }\n      else if(z&&ok(abs(dep[z]-dep[now])+1+1)){\n\tif(dep[z]>dep[now]) swap(z,now);\n\tprintf(\"%d\\n%d \",dep[now]-dep[z]+1+1,i);\n\tprint(now,z);\n\tpd[i]=1;k--;\n\tbreak;\n      }\n      if(!bac[dep[now]%3]){\n\tbac[dep[now]%3]=1;\n\tif(!x) x=now;\n\telse if(!y) y=now;\n\telse if(!z) z=now;\n      }\n    }\n  }\n  return 0;\n}\n/*\n\n*/\n\n```\n",
        "postTime": 1640248998,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "CF1103C Johnny Solving"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\u5728\u56fe\u4e0a\u5f88\u96be\u505a\u8fd9\u79cd\u6784\u9020\u9898\uff0c\u6240\u4ee5\u4e00\u79cd\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u6c42\u51fa\u5176**\u751f\u6210\u6811**\u3002\n\n\u5728**\u751f\u6210\u6811**\u4e0a\u505a\u5c31\u5bb9\u6613\u5f88\u591a\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u9898\u5c31\u6309\u7167 dfs \u5e8f\u5efa\u7acb\u4e00\u9897\u751f\u6210\u6811\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u8fd4\u7956\u8fb9\u3002\n\n\u4e8e\u662f\u7b2c\u4e00\u95ee\u53ef\u4ee5**\u6839\u636e\u6811\u7684\u6df1\u5ea6\u5224\u65ad**\u662f\u5426\u7b26\u5408\u8981\u6c42\uff0c\u7b26\u5408\u7684\u8bdd\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u82e5\u6ca1\u6709\uff0c\u5219\u6613\u8bc1\u7b2c\u4e8c\u95ee\u4e00\u5b9a\u6210\u7acb\uff1a\n\n\u56e0\u4e3a\u7b2c\u4e00\u95ee\u4e0d\u6210\u7acb\uff0c\u6240\u4ee5\u53f6\u5b50\u8282\u70b9\u6570\u4e00\u5b9a $\\geqslant k$\uff0c\u800c\u9898\u4e2d\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570 $\\geqslant3$\uff0c\u4e5f\u5c31\u6697\u793a\u4e86\u53f6\u5b50\u8282\u70b9\u90fd\u6709 $\\geqslant2$ \u6761\u8fd4\u7956\u8fb9\u3002\n\n**\u6240\u4ee5\u4e00\u5b9a\u80fd\u4ece\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u627e\u5230\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u73af\u3002**\n\n\u5047\u8bbe\u53f6\u5b50\u8282\u70b9 k \u7684\u4e24\u4e2a\u8fd4\u7956\u7956\u5148\u4e3a x \u548c y\uff0c\u5219\u901a\u8fc7\u4f5c\u5dee\u6cd5\u6613\u8bc1\uff1a\n\n$(dep[u]-dep[x]+1)$ \u548c $(dep[u]-dep[y]+1)$ \u548c $(dep[y]-dep[x]+2)$ \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u662f $3$ \u7684\u500d\u6570\u3002\n\n\u5224\u65ad\u4e00\u4e0b\u8f93\u51fa\u5373\u53ef\u3002\n## \u6ce8\u610f\n\u6570\u7ec4\u4e00\u5b9a\u8981\u5f00\u591f\uff1a\u5927\u5c0f\u4e3a m \u7684\u4e24\u500d\uff01\u5426\u5219\u4f1a\u5728\u7b2c\u56db\u4e2a\u70b9TLE\u3002\n## AC\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<iomanip>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int maxn=5e5+5;\nint n,m,k,cnt,cnt_leaf,leaf[maxn],p[maxn],dep[maxn],fa[maxn],ancestor[maxn][105];\nint maxdep,ed;\ntemplate <typename T>\ninline void read(T &x)\n{\n    char c;\n    x=0;\n    int fu=1;\n    c=getchar();\n    while(c>57||c<48){\n        if(c==45){\n        \tfu=-1;\n        }\n        c=getchar();\n    }\n    while(c<=57&&c>=48)\n    {\n        x=(x<<3)+(x<<1)+c-48;\n        c=getchar();\n    }\n    x*=fu;\n}\nstruct node{\n\tint v,next;\n}e[maxn*2];\nvoid insert(int u,int v){\n\tcnt++;\n\te[cnt].v=v;\n\te[cnt].next=p[u];\n\tp[u]=cnt;\n}\nvoid dfs(int u,int f,int deep){\n\tdep[u]=deep;\n\tif(dep[u]>maxdep){\n\t\tmaxdep=dep[u];\n\t\ted=u;\n\t}\n\tfa[u]=f;\n\tleaf[++cnt_leaf]=u;\n\tfor(int i=p[u];i!=-1;i=e[i].next){\n\t\tint v=e[i].v;\n\t\tif(v==f) continue;\n\t\tif(dep[v]){\n\t\t\tancestor[u][++ancestor[u][0]%100]=v;\n\t\t\tcontinue;\n\t\t}\n\t\tif(leaf[cnt_leaf]==u) cnt_leaf--;\n\t\tdfs(v,u,deep+1);\n\t}\n}\nvoid print(int u,int to){\n\tprintf(\"%d \",to);\n\tif(u==to) return;\n\tprint(u,fa[to]);\n}\nint main(){\n\tmemset(p,-1,sizeof(p));\n\tread(n);\n\tread(m);\n\tread(k);\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tread(u);\n\t\tread(v);\n\t\tinsert(u,v);\n\t\tinsert(v,u);\n\t} \n\tdfs(1,-1,1);\n\tif(maxdep>=(n-1)/k+1){\n\t\tputs(\"PATH\");\n\t\tprintf(\"%d\\n\",maxdep);\n\t\twhile(ed!=-1){\n\t\t\tprintf(\"%d \",ed);\n\t\t\ted=fa[ed];\n\t\t}\n\t\treturn 0;\n\t}\n\tputs(\"CYCLES\");\n\tfor(int i=1;i<=k;i++){\n\t\tint u=leaf[i],x=ancestor[u][1],y=ancestor[u][2];\n\t\tif(dep[x]>dep[y]) swap(x,y);\n\t\tif((dep[u]-dep[x]+1)%3!=0){\n\t\t\tprintf(\"%d\\n\",dep[u]-dep[x]+1);\n\t\t\tprint(x,u);\n\t\t\tputs(\"\");\n\t\t}else{\n\t\t\tif((dep[u]-dep[y]+1)%3!=0){\n\t\t\t\tprintf(\"%d\\n\",dep[u]-dep[y]+1);\n\t\t\t\tprint(y,u);\n\t\t\t\tputs(\"\");\n\t\t\t}else{\n\t\t\t\tprintf(\"%d\\n%d \",dep[y]-dep[x]+2,u);\n\t\t\t\tprint(x,y);\n\t\t\t\tputs(\"\");\n\t\t\t}\n\t\t}\n\t}\n    return 0;\n}\n```CF1103C Johnny Solving",
        "postTime": 1632322471,
        "uid": 70081,
        "name": "\u5c39\u6631\u94a6",
        "ccfLevel": 7,
        "title": "CF1103C Johnny Solving \u9898\u89e3"
    }
]