[
    {
        "content": "## \u9898\u610f\n\u6c42\u57fa\u73af\u6811\u6bcf\u4e2a\u70b9\u5230\u73af\u4e0a\u7684\u6700\u5c11\u8fb9\u6570\u3002\n\n## \u4e24\u904d dfs\n\n\u7b2c\u4e00\u904d dfs\uff0c\u627e\u51fa\u73af\uff0c\u5e76\u5c06\u73af\u4e0a\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\u3002\n\n```cpp\ninline void dfs1(int u)\n{\n\tvis[u]=1;\n\tfor(re int i=head[u];~i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;if(v==fa[u]||e[i].t) continue;//e[i].t \u8fb9 i\u662f\u5426\u4e3a\u6811\u8fb9 \u5426\u4e3atrue\u3002 \n\t\tif(vis[v]){e[i].t=e[i^1].t=1;color(u,v);continue;}//\u5982\u679cv\u5df2\u7ecf\u904d\u5386\u8fc7\uff0c\u8bf4\u660e\u8be5\u4e24\u70b9\u95f4\u5f62\u6210\u73af\uff0c\u6253\u4e0a\u6807\u8bb0\u3002 \n\t\tfa[v]=u;dfs1(v);\n\t}\n}\n```\n\n\n```cpp\ninline void color(int u,int v) \n{\n\twhile(u!=v) ont[u]=1,u=fa[u];//ont[i] \u70b9 i\u662f\u5426\u5728\u73af\u4e0a \u662f\u4e3atrue\u3002 \n\tont[v]=1;root=v;//\u5c06\u5176\u4e2d\u4e00\u4e2a\u70b9\u6539\u4e3a\u6839\u3002 \n}\n```\n\n\u7b2c\u4e8c\u904d dfs\uff0c\u6c42\u6bcf\u4e2a\u70b9\u5230\u73af\u4e0a\u7684\u8ddd\u79bb\n\n\u7531\u4e8e\u7b2c\u4e00\u6b21\u5df2\u7ecf\u5c06\u73af\u4e0a\u4e00\u70b9\u7f6e\u4e3a\u6839\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8003\u8651\u67d0\u4e2a\u70b9\u6df1\u5ea6\u5c0f\u4e8e\u73af\u7684\u60c5\u51b5\u3002\n\n```cpp\ninline void dfs2(int u,int fa)\n{\n\tfor(re int i=head[u];~i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;if(v==fa||e[i].t) continue;//\u4e0d\u8981\u904d\u5386\u5230\u975e\u6811\u8fb9\uff0c\u5426\u5219\u6b7b\u5faa\u73af\u3002 \n\t\tdis[v]=dis[u]+(ont[v]^1);//v\u975e\u73af\u4e0a\u70b9\uff0c\u8bf4\u660e\u5df2\u7ecf\u8131\u79bb\u73af\u8fdb\u5165\u6811\uff0c\u5f00\u59cb\u7edf\u8ba1\u8def\u7a0b\u3002 \n\t\tdfs2(v,u);\n\t}\n}\n```\n\u4f9d\u6b21\u6267\u884c\u4e24\u6b21 dfs \u5373\u53ef\n\n```cpp\nsigned main()\n{\n\tsrand(time(0));\n\tmemset(head,-1,sizeof(head));\n\tread(n);root=rand()%n+1;//\u968f\u673a\u9009\u6839 \n\tfor(re int i=1,u,v;i<=n;i++)\n\t{\n\t\tread(u);read(v);\n\t\tadd_edge(u,v);\n\t}\n\tdfs1(root);\n\tdfs2(root/*\u6b64\u65f6\u6839\u5df2\u5728\u73af\u4e0a*/ ,0);\n\tfor(re int i=1;i<=n;i++) printf(\"%d \",dis[i]);printf(\"\\n\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1645867867,
        "uid": 251324,
        "name": "stntn",
        "ccfLevel": 0,
        "title": "CF131D Subway \u9898\u89e3"
    },
    {
        "content": "\u505a\u6cd5\u5e94\u8be5\u5f88\u660e\u663e\u4e86\uff0c\u628a\u73af\u627e\u51fa\u6765\u6c42\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\uff0c\u91cd\u70b9\u662f\u600e\u4e48\u627e\u73af\n\n\u8fd9\u91cc\u8bb2\u7684\u662f\u4e00\u4e2a $O(n^2)$ \u7684\u795e\u5947 dfs\uff0c\u975e\u5e38\u5bb9\u6613\u5199  \n\u601d\u8def\u4e0e dfs/spfa \u627e\u73af\u5f88\u76f8\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u9700\u8981\u5224\u65ad\u6700\u77ed\u8def\n\n```cpp\nvoid dfs(int x,int fa,int top) // fa,top \u5206\u522b\u4e3a\u4e0a\u4e00\u4e2a\u8bbf\u95ee\u7684\u8282\u70b9\u548c\u8be5\u6b21dfs\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\n{\n\tflag[x]=1; // \u6253\u4e0a\u6807\u8bb0\n\t\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i];\n\t\tif(y==fa)continue;\n\t\tif(flag[y]) //\u5982\u679c\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\n\t\t{\n\t\t\tif(y==top)opt2=1; // \u8fd9\u4e2a\u5224\u65ad\u7684\u610f\u4e49\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5df2\u7ecf\u6253\u4e0a\u6807\u8bb0\u7684\u6240\u6709\u70b9\u90fd\u5728\u73af\u4e0a\n\t\t\topt1=1; // \u6253\u4e0a\u9000\u51fa\u9012\u5f52\u7684\u6807\u8bb0\n\t\t\treturn;\n\t\t}\n\t\tdfs(y,x,top);\n\t\tif(opt1)return;\n\t}\n\t\n\tflag[x]=0;\n}\n```\n\n\u8dd1\u5b8c dfs \u540e\uff0c\u6240\u6709\u73af\u4e0a\u7684\u70b9\u90fd\u88ab\u6807\u8bb0\u4e86\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u585e\u8fdb\u961f\u5217\u8dd1 dijkstra \u5c31\u53ef\u4ee5\u4e86  \n\u5176\u5b9e bfs \u4e5f\u884c\uff0c\u56e0\u4e3a\u662f\u65e0\u6743\u56fe\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int Maxn=3020,inf=0x3f3f3f3f;\nstruct node{\n\tint pos,dis;\n\tnode(int x,int y)\n\t{\n\t\tpos=x,dis=y;\n\t}\n\tbool operator <(const node &x)const\n\t{\n\t\treturn x.dis<dis;\n\t}\n};\nint dis[Maxn];\nbool vis[Maxn],flag[Maxn],opt1,opt2;\nint n;\nvector <int> e[Maxn];\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nvoid dfs(int x,int fa,int top)\n{\n\tflag[x]=1;\n\t\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i];\n\t\tif(y==fa)continue;\n\t\tif(flag[y])\n\t\t{\n\t\t\tif(y==top)opt2=1;\n\t\t\topt1=1;\n\t\t\treturn;\n\t\t}\n\t\tdfs(y,x,top);\n\t\tif(opt1)return;\n\t}\n\t\n\tflag[x]=0;\n}\nvoid dij()\n{\n\tpriority_queue <node> q;\n\tfill(dis+1,dis+1+n,inf);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(!flag[i])continue;\n\t\tdis[i]=0,vis[i]=1;\n\t\tq.push(node(i,0));\n\t}\n\twhile(q.size())\n\t{\n\t\tint x=q.top().pos;\n\t\tq.pop();\n\t\tfor(int i=0;i<e[x].size();++i)\n\t\t{\n\t\t\tint y=e[x][i];\n\t\t\tif(dis[y]>dis[x]+1)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+1;\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(node(y,dis[y]));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tn=read();\n\t\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint x=read(),y=read();\n\t\te[x].push_back(y);\n\t\te[y].push_back(x);\n\t}\n\t\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\topt1=0;\n\t\tdfs(i,0,i);\n\t\tif(opt2)break; // opt2=1 \u8bf4\u660e\u5df2\u7ecf\u627e\u5230\u4e86\u73af\uff0c\u5e76\u4e14\u4fdd\u8bc1\u6807\u8bb0\u65e0\u8bef\n\t\tfill(flag+1,flag+1+n,0); // \u8bb0\u5f97\u5c06\u6807\u8bb0\u6e05\u96f6\n\t}\n\tdij();\n\t\n\tfor(int i=1;i<=n;++i)\n\tprintf(\"%d \",dis[i]);\n\tputchar('\\n');\n\t\n\treturn 0;\n}\n```",
        "postTime": 1581567810,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF131D \u3010Subway\u3011"
    },
    {
        "content": "\u4f60\u8c37\u81ea\u53e4\u4ee5\u6765\u9898\u89e3\u533a\u591a\u795e\u4ed9 \n\n\u8fd9\u9053\u9898\u4e5f\u4e0d\u4f8b\u5916 \n\n\u56db\u7bc7\u5168\u90e8\u7f29\u70b9 \uff1f\uff1f\uff1f\uff1f\uff1f \n\n\u8fd9\u96be\u9053\u4e0d\u662f\u57fa\u73af\u6811\u7684\u73af\u64cd\u4f5c\u5417 \uff1f \n\n\u62d3\u6251\u6392\u5e8f\u4f3c\u4e4e\u6728\u6709\u6bdb\u75c5\u5427 \uff1f \n\n\u601d\u8def \uff1a \n\ntopsort \u6761\u4ef6\u662f\u5ea6\u4e3a1\u7684\u70b9\u8fdb\u961f \n\n\u89e3\u91ca\u4e00\u4e0b \n\n\u5ea6\u4e3a\u4e00\u7684\u70b9 \u53ea\u4fdd\u7559\u7740\u4e00\u6761\u8fbe\u5230\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u7684\u8fb9 \n\n\u90a3\u4e48\u663e\u7136 \u8fd9\u4e2a\u70b9\u5e76\u4e0d\u662f\u73af\u4e0a\u7684\u70b9 \u4e8e\u662f\u5165\u961f \n\n\u6700\u540e \u5165\u5ea6 >= 2 \u7684\u8282\u70b9\u5c31\u662f\u73af\u4e0a\u7684\u8282\u70b9 \n\n\u627e\u51fa\u73af\u4e0a\u7684\u70b9\u540e \u4ee5\u90a3\u4e9b\u70b9\u4e3a\u8d77\u70b9 \u505a SPFA \n\n\u4ee3\u7801 \uff1a \n\n```cpp\n#include <bits/stdc++.h> \n#define MAX 3005 \n#define R register \nusing namespace std ; \nvector <int> v[MAX] ;  \nint dep[MAX] , ins[MAX] , n ;  \nbool In[MAX] ;  \nqueue <int> q ; \nsigned main() \n{\n\tR int x , y ; \n\tios::sync_with_stdio(false) ;\n\tcin >> n ;\n\tfor(R int i=1; i<=n; i++) \n\t{\n\t\tcin >> x >> y ;\n\t\tv[x].push_back(y) ;\n\t\tv[y].push_back(x) ; \n\t\tins[x] ++ ; ins[y]++ ; \n\t}\n    for(R int i=1; i<=n; i++)\n     if( ins[i] == 1 ) q.push(i) ; \n    while( !q.empty() ) \n    {\n    \tR int u = q.front() ; q.pop() ;\n\t\tfor(R int i=0; i<v[u].size(); i++) \n\t\t{\n\t\t   R int x = v[u][i] ; \n\t\t   if( ins[x] <= 1 ) continue ;\n\t\t   ins[x] -- ; \n\t\t   if( ins[x] == 1 ) \n\t\t     q.push(x) ;\t\n\t\t} \n\t}\n\tmemset( dep , 0x7f , sizeof(dep) ) ; \n\tfor(R int i=1; i<=n; i++)\n\t  if( ins[i] >= 2 ) dep[i] = 0 , q.push(i) ;\n\twhile( !q.empty() ) \n\t{\n\t\tR int u = q.front() ; q.pop() ; In[u] = 0 ; \n\t\tfor(R int i=0; i<v[u].size(); i++) \n\t\t{\n\t\t   R int x = v[u][i] ;\n\t\t   if( ins[x] >= 2 ) continue ; \n\t\t   if( dep[x] > dep[u]+1 ) \n\t\t   {\n\t\t   \t    dep[x] = dep[u]+1 ;\n\t\t\t    if( !In[x] ) \n\t\t\t\t{\n\t\t\t\t\tIn[x] = 1 ; \n\t\t\t\t\tq.push(x) ;\n\t\t\t\t}  \n\t\t   } \t\n\t\t} \n\t}\n\tfor(R int i=1; i<=n; i++) \n\t  cout << dep[i] << \" \" ; \n\tcout << endl; \n\treturn 0 ; \n}\n```\n\n\n\u5e94\u8be5\u53ef\u4ee5\u5feb\u7684 \u4f46\u662f\u4eba\u4e11\u5e38\u6570\u5927 \u8fd8\u61d2\n\n\u4e0d\u5361 rk1 \u4e86",
        "postTime": 1575699016,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF131D \u3010Subway\u3011"
    },
    {
        "content": "## \u9898\u89e3-CF131D Subway\n\n### \u8fd9\u9053\u9898\u76ee\u53ef\u4ee5\u8bf4\u4e0d\u662f\u5f88\u96be\u5427\uff0c\u4e3b\u8981\u662f\u4ee3\u7801\u6bd4\u8f83\u957f\u3002\n\n### $1.1$ \u9898\u76ee\u610f\u601d\n\u9898\u76ee\u610f\u601d\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8ba9\u4f60\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u552f\u4e00\u73af\u7684\u8ddd\u79bb\uff01\u9898\u9762\u662f\u4e0d\u662f\u5f88\u5c0f\u6e05\u65b0\u5440\uff01\n\n### $2.1$\u7b97\u6cd5\u601d\u60f3\n\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u90a3\u4e2a\u73af\u8fdb\u884c$tarjan$\u7f29\u70b9\uff0c\u7136\u540e\u91cd\u65b0\u6784\u56fe\u3002\n\n\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u70b9\uff0c\u663e\u7136\u7b54\u6848\u4e3a$0$\uff0c\u5176\u5b9e\u8bf4\u7b80\u5355\u7684\u5c31\u662f\u6c42\u51fa\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u8fd9\u6837\u6c42\u8ddd\u79bb\u6211\u4eec\u53ef\u4ee5\u7528$lca$\u6c42\u89e3\uff1a$dis=dep[a]+dep[b]-2*dep[lca(a,b)]$\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u505a\u51fa\u4e86\u4e00\u9898$Div2 D$~~(\u9003~~\n\n### $3.1$\u4ee3\u7801\u5b9e\u73b0\n\u4e3b\u8981\u662f\u6a21\u677f\u4ee3\u7801\uff0c\u7ec6\u8282\u4e5f\u4e0d\u662f\u5f88\u591a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn=1e4+5,maxm=5e4+5;\nstruct nood {\n    int nex,to;\n} e[maxm<<1];\nint head[maxn],low[maxn],dfn[maxn];\nint stak[maxn],siz[maxn],col[maxn];\nint pa[maxn][17],d[maxn],u[maxn],v[maxn];\nint n,m,cnt,sum,now,s,rt,top,bit[35];\nmap<int,int>ma;\n\ninline void add_edge(int u,int v) {\n    e[++cnt].nex=head[u];\n    head[u]=cnt;\n    e[cnt].to=v;\n}//\u524d\u5411\u661f\u8fde\u8fb9\n\ninline void tarjan(int u,int fa) {\n    stak[++top]=u;\n    low[u]=dfn[u]=++now;\n    for ( int i=head[u];i;i=e[i].nex ) {\n        int v=e[i].to;\n        if(v==fa) continue;\n        if(!dfn[v]) {\n            tarjan(v,u);\n            low[u]=min(low[u],low[v]);\n        }\n        else \n            if(!col[v]) \n                low[u]=min(low[u],dfn[v]);\n    }\n    if(low[u]==dfn[u]) {\n        col[u]=++sum;\n        siz[sum]++;\n        while(stak[top]!=u) {\n            col[stak[top]]=sum;\n            siz[sum]++;\n            top--;\n        }\n        top--;\n    }\n}//tarjan\u7f29\u70b9\n\ninline void dfs(int u,int fa) {\n    d[u]=d[fa]+1;\n    pa[u][0]=fa;\n    for ( int i=1;i<=15;i++ ) \n        pa[u][i]=pa[pa[u][i-1]][i-1];\n    for ( int i=head[u];i;i=e[i].nex ) {\n        int v=e[i].to;\n        if(v==fa) continue;\n        dfs(v,u);\n    }\n}//lca\u9884\u5904\u7406\n\ninline int lca(int a,int b) {\n    if(d[a]>d[b]) swap(a,b);\n    for ( int i=15;i>=0;i-- ) \n        if(d[b]-(1<<i)>=d[a]) b=pa[b][i];\n    if(a==b) return a;\n    for ( int i=15;i>=0;i-- ) \n        if(pa[a][i]!=pa[b][i]) {\n            a=pa[a][i];\n            b=pa[b][i];\n        }\n    return pa[a][0];\n}//\u6c42\u4e24\u70b9lca\n\ninline int find(int a,int b) {\n    return d[a]+d[b]-2*d[lca(a,b)]+1;\n}//\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n\ninline int read() {\n    int sum=0; char ch=getchar();\n    while(!isdigit(ch)) ch=getchar();\n    while(isdigit(ch)) \n        sum=sum*10+(ch-'0'),ch=getchar();\n    return sum;\n}\n\nint main() {\n    n=read(),m=n;\n    for ( int i=1;i<=m;i++ ) {\n        u[i]=read(),v[i]=read();\n        add_edge(u[i],v[i]);\n        add_edge(v[i],u[i]);\n    }\n    for ( int i=1;i<=n;i++ ) \n        if(!dfn[i]) tarjan(i,-1);\n    cnt=0;\n    memset(head,0,sizeof(head));\n    memset(e,0,sizeof(e));\n    for ( int i=1;i<=m;i++ ) \n        if(col[u[i]]!=col[v[i]]) {\n            add_edge(col[u[i]],col[v[i]]);\n            add_edge(col[v[i]],col[u[i]]);\n        }\n    //\u91cd\u65b0\u6784\u56fe\uff0c\u5bf9\u4e8e\u4e0d\u662f\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u91cc\u9762\u7684\u70b9\u8fde\u8fb9\n    dfs(1,0);   \n    for ( int i=1;i<=n;i++ ) {\n\t\tma[col[i]]++;\n\t\tif(ma[col[i]]>=2) rt=i;\n\t}\n    //\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\n\tfor ( int i=1;i<=n;i++ ) \n\t\tif(col[i]==col[rt]) printf(\"0 \");\n\t\t\telse printf(\"%d \",find(col[i],col[rt])-1);\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1563778206,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF131D \u3010Subway\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u6613\u61c2\u7684\u57fa\u73af\u6811\u627e\u73af\u65b9\u6cd5\u3002\n\n[![voPydI.png](https://s1.ax1x.com/2022/09/03/voPydI.png)](https://imgse.com/i/voPydI)\n\n\u89c2\u5bdf\u8be5\u56fe\u3002\u5bb9\u6613\u53d1\u73b0\u8fd9\u68f5\u57fa\u73af\u6811\u4e0a\u7684\u73af\u4e3a $loop= \\{ 3,4,5,6,7 \\} $ \u3002\u8003\u8651\u8fd9\u68f5\u57fa\u73af\u6811\u4ece\u8282\u70b9 $1$ \u5f00\u59cb\u7684 $DFS$ \u5e8f\uff1a $1 \\rightarrow 2 \\rightarrow \\color{Red} 3 \\color{Black}  \\rightarrow 4 \\rightarrow 5 \\rightarrow a \\rightarrow b \\rightarrow 6\\rightarrow 7 \\rightarrow  \\color{Red} 3 \\color{Black} \\rightarrow ...$ \uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u73af\u7684\u641c\u7d22\u5e8f\u4e2d\uff0c\u4ece\u8282\u70b9 $3$ \u5f00\u59cb\u5e76\u4ece\u8282\u70b9 $3$ \u7ed3\u675f\uff0c\u90a3\u4e48\u663e\u800c\u6613\u89c1\u7684\u662f\u6211\u4eec\u5728\u627e\u73af\u7684\u65f6\u5019\u7b2c\u4e8c\u6b21\u641c\u7d22\u5230\u8282\u70b9 $3$ \u65f6\uff0c\u5c31\u8981\u628a $3$ \u6807\u8bb0\u4e0a\uff0c\u8bf4\u660e\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u73af\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9 $3$ \uff0c\u800c\u4e14\u6309\u7167\u6211\u4eec\u7684\u641c\u7d22\u987a\u5e8f\u8282\u70b9 $3$ \u662f\u8fd9\u4e2a\u73af\u7684\u8d77\u70b9\uff0c\u4e5f\u662f\u8fd9\u4e2a\u73af\u7684\u7ec8\u70b9\u3002\n\n\u663e\u7136\uff0c\u8282\u70b9 $3$ \u662f\u8fd9\u4e2a\u73af\u4e0a\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u641c\u7d22\u987a\u5e8f\u4e2d\u8282\u70b9 $3$ \u7684\u7236\u8282\u70b9\u8282\u70b9 $7$ \u4e5f\u662f\u8fd9\u4e2a\u73af\u4e0a\u7684\u70b9\uff0c\u800c\u8282\u70b9 $7$ \u7684\u7236\u8282\u70b9 $6$ \u4e5f\u662f\u8fd9\u4e2a\u73af\u4e0a\u7684\u70b9......\u6700\u540e\u8282\u70b9 $4$ \u7684\u7236\u8282\u70b9 $3$ \u662f\u73af\u4e0a\u7684\u70b9\uff0c\u4f46\u8282\u70b9 $3$ \u7684\u7236\u8282\u70b9 $2$ \u4e0d\u662f\u8fd9\u4e2a\u73af\u4e0a\u7684\u70b9\uff08\u6ce8\u610f\u6b64\u65f6\u7684\u201c\u7236\u8282\u70b9\u201d\u662f\u5bf9\u4e8e\u641c\u7d22\u5e8f\u800c\u8a00\uff09\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u6027\u8d28\uff1a\u5728\u57fa\u73af\u6811\u4e0a\uff0c\u4ee5\u67d0\u4e2a\u8282\u70b9\u4e3a\u6839\u5f00\u59cb\u641c\u7d22\uff0c\u7b2c\u4e00\u6b21\u8d70\u5230\u7684\u91cd\u590d\u641c\u7d22\u7684\u8282\u70b9\uff08\u5bf9\u4e8e\u4e0a\u56fe\u6765\u8bf4\u5c31\u662f\u8282\u70b9 $3$ \uff09\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u5408\u70b9\u201d\u3002\u800c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5408\u70b9\u4e4b\u5916\u7684\u8282\u70b9\uff0c\u82e5\u8fd9\u4e2a\u8282\u70b9\u5728\u73af\u4e0a\uff0c\u90a3\u4e48\u5b83\u5728\u8fd9\u4e2a\u641c\u7d22\u5e8f\u4e2d\u7684\u7236\u8282\u70b9\u4e5f\u5728\u73af\u4e0a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5728\u627e\u73af\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4ece\u67d0\u4e2a\u6839\u8282\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u82e5\u641c\u7d22\u5230\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 $u$ \u662f\u91cd\u590d\u641c\u7d22\u8fc7\u7684\uff0c\u5c31\u628a\u8fd9\u4e2a\u8282\u70b9\u6807\u8bb0\u4e3a\u201c\u5408\u70b9\u201d\uff0c\u5e76\u628a\u5b83\u548c\u5b83\u5728\u641c\u7d22\u5e8f\u4e0a\u7684\u7236\u8282\u70b9\u52a0\u5165\u73af\uff08\u5426\u5219\u5b83\u7684\u8fd9\u4e2a\u7236\u8282\u70b9\u5c31\u4e0d\u4f1a\u88ab\u52a0\u5165\u5230\u73af\u91cc\u9762\uff09\u3002\u5728\u641c\u7d22\u5b8c\u67d0\u4e2a\u8282\u70b9 $u$ \u7684\u5b50\u8282\u70b9 $v$ \u540e\uff0c\u82e5\u8282\u70b9 $v$ \u5728\u73af\u4e0a\u800c\u4e14 $v$ \u4e0d\u662f\u5408\u70b9\uff0c\u90a3\u4e48\u5c31\u628a\u8282\u70b9 $u$ \u4e5f\u52a0\u5165\u73af\u3002\n\n\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u5c31\u901a\u8fc7\u4e00\u6b21\u641c\u7d22\u627e\u5230\u4e86\u73af\u3002\n\n```cpp\ninline void find_loop(const int father,const int u)\n{\n\tif(vis[u])\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5df2\u7ecf\u641c\u7d22\u8fc7\u4e86 \n\t{\n\t\tif(!flag)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u8fd9\u662f\u7b2c\u4e00\u4e2a\u88ab\u641c\u7d22\u5230\u7684\u5408\u70b9 \n\t\tloop[++cnt]=u,loop[++cnt]=father,\t\t\t\t\t\t\t\t\t\t\t//\u5c06\u5408\u70b9\u548cfather\u52a0\u5165\u73af \n\t\tmark[u]=mark[father]=true,\t\t\t\t\t\t\t\t\t\t\t\t\t//\u628a\u5408\u70b9\u548cfather\u6807\u8bb0\u4e3a\u73af\u4e0a\u7684\u70b9 \n\t\tflag=u;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u6807\u8bb0\u5408\u70b9 \n\t\treturn;\n\t}\n\tvis[u]=true;\n\tfor(register int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==father) continue;\n\t\tfind_loop(u,v);\n\t\tif(v!=flag&&mark[v])\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5982\u679cv\u4e0d\u662f\u5408\u70b9\u800c\u4e14v\u5728\u73af\u4e0a \n\t\t{\n\t\t\tif(!mark[u]) loop[++cnt]=u;\t\t\t\t\t\t\t\t\t\t\t\t//\u82e5u\u8fd8\u6ca1\u52a0\u5165\u73af\uff0c\u628au\u52a0\u5165\u73af \n\t\t\tmark[u]=true;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u628au\u6807\u8bb0\u4e3a\u73af\u4e0a\u7684\u70b9 \n\t\t}\n\t}\n}\n```\n\n---\n\n\u90a3\u4e48\u627e\u5230\u73af\u4e4b\u540e\uff0c\u8fd9\u9053\u9898\u8be5\u600e\u4e48\u505a\u5462\uff1f\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4ece\u73af\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9 $u$ \u51fa\u53d1\uff0c\u8df3\u8fc7\u73af\u4e0a\u7684\u5176\u4ed6\u70b9\uff0c\u641c\u7d22\u4ee5\u8282\u70b9 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5e76\u4f9d\u6b21\u66f4\u65b0\u6bcf\u4e2a\u8282\u70b9\u5230\u8282\u70b9 $u$ \u7684\u8ddd\u79bb\uff0c\u6700\u540e\u518d\u8f93\u51fa\u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint n,dis[3005];\nint cnt,flag,total,head[3005],loop[3005];\nbool vis[3005],mark[3005];\nstruct Edge{int to,next;} edge[6005];\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    return x*f;\n}\ninline void link(const int u,const int v) {edge[++total]=Edge{v,head[u]},head[u]=total;}\ninline void find_loop(const int father,const int u)\n{\n\tif(vis[u])\n\t{\n\t\tif(!flag) loop[++cnt]=u,loop[++cnt]=father,flag=u,mark[u]=mark[father]=true;\n\t\treturn;\n\t}\n\tvis[u]=true;\n\tfor(register int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==father) continue;\n\t\tfind_loop(u,v);\n\t\tif(v!=flag&&mark[v])\n\t\t{\n\t\t\tif(!mark[u]) loop[++cnt]=u;\n\t\t\tmark[u]=true;\n\t\t}\n\t}\n}\ninline void dfs(const int father,const int u)\n{\n\tfor(register int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==father||mark[v]) continue;\n\t\tdis[v]=dis[u]+1;\n\t\tdfs(u,v);\n\t}\n}\nint main()\n{\n\tn=read();\n\tfor(register int i=1,u,v;i<=n;++i) u=read(),v=read(),link(u,v),link(v,u);\n\tfind_loop(0,1);\n\tfor(register int i=1;i<=cnt;++i) dfs(0,loop[i]);\n\tfor(register int i=1;i<=n;++i) printf(\"%d \",dis[i]);\n\treturn 0;\n}\n```",
        "postTime": 1662174283,
        "uid": 363529,
        "name": "ForLune_",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3]CF131D Subway"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF131D \"\u6d1b\u8c37\")\n\n[Codeforces](https://codeforces.com/problemset/problem/131/D \"Codeforces\")\n## Solution\nTarjan \u677f\u9898\u3002\n\n\u5f88\u660e\u663e\u53ef\u4ee5\u7528 Tarjan \u627e\u5230\u8fd9\u4e00\u4e2a\u73af\u3002\u6ce8\u610f\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u9700\u8981\u591a\u8bb0\u5f55\u4e00\u4e2a\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\uff0c\u9632\u6b62\u5176\u53cd\u590d\u6a2a\u8df3\u3002\u7136\u540e\u7f29\u5b8c\u70b9\u4ee5\u540e\uff0c\u627e\u5230\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\u5927\u4e8e $1$\uff0c\u4e5f\u5c31\u662f\u90a3\u4e00\u4e2a\u73af\uff0c\u4ee5\u5b83\u4e3a\u6e90\u70b9\uff0c\u8dd1 dijkstra\uff0c\u4e0e\u6b64\u540c\u65f6\u628a\u90a3\u4e2a\u73af\u91cc\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\u3002\u6700\u540e\u8f93\u51fa\u65f6\u5982\u679c\u6709\u6807\u8bb0\uff0c\u5c31\u8f93\u51fa $0$\uff0c\u5426\u5219\u8f93\u51fa\u5176\u6700\u77ed\u8def\u5f84\u3002\n\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvoid read(int &x)\n{\n\tchar ch=getchar();\n\tint r=0,w=1;\n\twhile(!isdigit(ch))w=ch=='-'?-1:1,ch=getchar();\n\twhile(isdigit(ch))r=(r<<3)+(r<<1)+(ch^48),ch=getchar();\n\tx=r*w;\n}\nconst int N=1e5+7;\nint low[N],dfn[N],stk[N],sz[N],scc[N];\nint pre[N],now[N],son[N],dis[N],d[N];\nint n,top,tot,sc,dfn_cnt;\nbool in_stk[N],bb[N],cc[N];\nvector<int>edge[N];\nvector<int>in_h[N];\npriority_queue<pair<int,int> >q;\nvoid add(int x,int y,int z)\n{\n\tpre[++tot]=now[x];\n\tson[tot]=y;\n\tdis[tot]=z;\n\tnow[x]=tot;\n}\nvoid tarjan(int u,int fa)\n{\n\tlow[u]=dfn[u]=++dfn_cnt;stk[++top]=u;in_stk[u]=1;\n\tfor(int v:edge[u])\n\t{\n\t\tif(v==fa)continue;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v,u);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(in_stk[v])low[u]=min(low[u],dfn[v]);\n\t}\n\tif(low[u]==dfn[u])\n\t{\n\t\tsc++;\n\t\tdo\n\t\t{\n\t\t\tscc[stk[top]]=sc;\n\t\t\tin_h[sc].push_back(stk[top]);\n\t\t\tsz[sc]++;\n\t\t\tin_stk[stk[top]]=0;\n\t\t\ttop--;\n\t\t}while(stk[top+1]!=u);\n\t}\n}\nvoid dij(int s)\n{\n\tmemset(d,63,sizeof d);\n\td[s]=0;q.push(make_pair(0,s));\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().second;q.pop();\n\t\tif(bb[u])continue;\n\t\tbb[u]=1;\n\t\tfor(int i=now[u];i;i=pre[i])\n\t\t{\n\t\t\tint v=son[i],w=dis[i];\n\t\t\tif(d[v]>d[u]+w)\n\t\t\t{\n\t\t\t\td[v]=d[u]+w;\n\t\t\t\tq.push(make_pair(-d[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid work()\n{\n\tfor(int u=1;u<=n;u++)\n\tfor(int v:edge[u])\n\t\tif(scc[u]!=scc[v])add(scc[u],scc[v],1),add(scc[v],scc[u],1);\n}\nint main()\n{\n\tread(n);\n\tfor(int i=1,x,y;i<=n;i++)\n\t{\n\t\tread(x);read(y);\n\t\tedge[x].push_back(y);edge[y].push_back(x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])tarjan(i,0);\n\twork();\n\tfor(int i=1;i<=sc;i++)\n\t{\n\t\tif(sz[i]>1)\n\t\t{\n\t\t\tfor(int j:in_h[i])cc[j]=1;\n\t\t\tdij(i);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",cc[i]==1?0:d[scc[i]]);\n\treturn 0;\n} \n```",
        "postTime": 1661068193,
        "uid": 415256,
        "name": "Epoch_L",
        "ccfLevel": 5,
        "title": "CF131D Subway"
    },
    {
        "content": "### \u524d\u8a00\n\ndfs\u548c\u7f29\u70b9\u7684\u4e00\u822c\u65b9\u6cd5\u6211\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\uff1b\n\u5728\u6b64\u6211\u5c31\u8bb2\u4e00\u70b9\u5c0f\u6280\u5de7\u597d\u4e86\u3002\n\n### \u6b63\u6587\n\n\u672c\u9898\u9700\u8981\u6c42\u5176\u4ed6\u70b9\u5230\u4e00\u7ec4\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5f53\u7136Tarjan\u627e\u73af\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u5728\u6b64\u4e0d\u591a\u8bb2\uff1b\n\n![image.png](https://i.loli.net/2019/10/06/sSbeUjF6ynXJ9fV.png)\n\n\u5bf9\u4e8e\u7c7b\u4f3c\u7684\u4ee5\u4e00\u7ec4\u70b9\u4e3a\u6e90\u7684\u6700\u77ed\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u865a\u70b9'0',\u5230\u9898\u4e2d\u94a6\u5b9a\u7684\u5404\u70b9\u8ddd\u79bb\u4e3a0\uff0c\u8fd9\u6837\u4ee5\u4e00\u7ec4\u70b9\u4e3a\u6e90\u7684\u6700\u77ed\u8def\u5c31\u8f6c\u5316\u4e3a\u4e86'0'\u7684\u5355\u6e90\u6700\u77ed\u8def\u3002\n\u7136\u540e\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n![image.png](https://i.loli.net/2019/10/06/PMH9ydr6I3FZJTK.png)\n\n\u8fd9\u79cd\u505a\u6cd5\u5bf9\u4e8e\u4e0d\u5728\u73af\u4e0a\u7684\u4e00\u7ec4\u70b9\u4f9d\u7136\u9002\u7528\uff0c\u5bf9\u4e8e\u6709/\u65e0\u6743\uff0c\u6709/\u65e0\u5411\u56fe\u5747\u662f\u4f7f\u7528\u7684\u3002\n\n\u622a\u81f32019.10.06\uff0c\u6700\u4f18\u89e3\u6392\u540d14\uff0c\u8fd8\u662f\u86ee\u5feb\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m;\nstruct node{\n\tint to,dis,pnext;\n}edge[100001];\nint head[30001],ni=1,t;\nint ins[30001],dfn[30001],low[30001];\nstack<int>s;\n\ninline void addedge(register int f,register int t,register int d){\n\tedge[++ni].to=t;\n\tedge[ni].dis=d;\n\tedge[ni].pnext=head[f];\n\thead[f]=ni;\n}\n\ninline int read(){\n    register int x=0,f=1;\n    register char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-'){f=-1;}ch=getchar();\n    }while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+(ch^48);ch=getchar();\n    }return x*f;\n}\n\nint inq[30001],dis[30001];\ndeque<int>q;\n\ninline void SPFA(register int s){\n\tmemset(dis,127,sizeof(dis));\n\tdis[s]=0;inq[s]=1;\n\tq.push_back(s);\n\twhile(!q.empty()){\n\t\tregister int u=q.front();\n\t\tq.pop_front();inq[u]=0;\n\t\tfor(register int i=head[u];i;i=edge[i].pnext){\n\t\t\tregister int v=edge[i].to;\n\t\t\tif(dis[v]>edge[i].dis+dis[u]){\n\t\t\t\tdis[v]=edge[i].dis+dis[u];\n\t\t\t\tif(!inq[v]){\n\t\t\t\t\tinq[v]=1;\n\t\t\t\t\tif(q.size()&&dis[v]<=dis[q.front()]){q.push_front(v);}\n\t\t\t\t\telse{q.push_back(v);}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint vec[30001],vi;\n\ninline void Tarjan(register int p,register int e){\n\tdfn[p]=low[p]=++t;\n\tins[p]=1;s.push(p);\n\tfor(register int i=head[p];i;i=edge[i].pnext){\n\t\tif(i!=(e^1)){\n\t\t\tregister int v=edge[i].to;\n\t\t\tif(!dfn[v]){\n\t\t\t\tTarjan(v,i);\n\t\t\t\tlow[p]=min(low[p],low[v]);\n\t\t\t}else if(ins[v]){\n\t\t\t\tlow[p]=min(dfn[v],low[p]);\n\t\t\t}\n\t\t}\n\t\t\n\t}if(low[p]==dfn[p]){\n\t\tvi=0;\n\t\twhile(s.top()!=p){\n\t\t\tins[s.top()]=0;\n\t\t\tvec[++vi]=s.top();\n\t\t\ts.pop();\n\t\t}ins[s.top()]=0;\n\t\tvec[++vi]=s.top();\n\t\ts.pop();\n\t\tif(vi>1){\n\t\t\tfor(register int i=1;i<=vi;i++){\n\t\t\t\taddedge(0,vec[i],0);\n\t\t\t}SPFA(0);\n\t\t\tfor(register int i=1;i<=n;i++){\n\t\t\t\tprintf(\"%d \",dis[i]);\n\t\t\t}exit(0);\n\t\t}\n\t}\n}\n\nint main(){\n\tm=n=read();\n\tfor(register int i=1;i<=m;i++){\n\t\tregister int x=read(),y=read();\n\t\taddedge(x,y,1);addedge(y,x,1);\n\t}for(register int i=1;i<=n;i++){\n\t\tif(!dfn[i]){Tarjan(i,0);}\n\t}return 0;\n}\n```\n\n\n\u8c22\u8c22\u5927\u5bb6\uff01",
        "postTime": 1570375491,
        "uid": 117068,
        "name": "Zofia",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF131D \u3010Subway\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5230 $n$ \u5b9e\u5728\u662f\u5c0f\u5230\u4e0d\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u6bd4\u8f83\u66b4\u529b\u7684\u505a\u6cd5\u3002\n\n~~\uff08\u55ef\uff0c\u53ef\u80fd\u7b97\u6bd4\u8f83\u66b4\u529b\u5427~~\n\n\u5f88\u7b80\u5355\uff0c\u627e\u73af\uff0c\u7136\u540e\u628a\u73af\u91cc\u7684\u6240\u6709\u70b9\u5168\u90e8\u538b\u8fdb `dijkstra` \u7684\u4f18\u5148\u961f\u5217\u5c31\u884c\u4e86\u3002\n\n\u627e\u73af\u6700\u574f $n$ \u904d\u8dd1\u6ee1\u7684 `dfs`\uff0c\u6700\u77ed\u8def\u662f $O(n\\log n)$ \u7684\uff0c\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u7a33\u8fc7\u3002\n\n~~\u4ec0\u4e48\uff1f\u600e\u4e48\u627e\u73af\uff1f\u90fd2202\u5e74\u4e86\u4e0d\u4f1a\u8fd8\u6709\u4eba\u4e0d\u4f1a\u627e\u73af\u5427qwq~~\n\n\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u4e3a\u8d77\u59cb\u70b9\uff0c\u90fd\u8dd1\u4e00\u8fb9 `dfs`\uff0c\u4e00\u8fb9\u8dd1\u4e00\u8fb9\u6807\u8bb0\uff0c\u5982\u679c\u8dd1\u7684\u65f6\u5019\u78b0\u5230\u5df2\u7ecf\u6807\u8bb0\u597d\u7684\u70b9\uff0c\u5c31\u8bf4\u660e\u78b0\u5230\u73af\u4e86\uff08\u6ce8\u610f\u4e0d\u662f\u6807\u8bb0\u5b8c\u73af\u4e86\uff0c\u73b0\u5728\u8fd8\u4e0d\u80fd\u9000\u51fa\u6765\u56e0\u4e3a\u6211\u4eec\u6807\u8bb0\u7684\u70b9\u4e2d\u6709\u591a\u4f59\u7684\u70b9\uff0c\u5e76\u4e0d\u662f\u5355\u7eaf\u7684\u73af\uff09\u3002\u5982\u679c\u6ca1\u6709\u78b0\u5230\u5c31\u53d6\u6d88\u6807\u8bb0\u3002\n\n\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f `dfs` \u5462\uff1f\u5c31\u662f\u5982\u679c\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u70b9\u662f\u6211\u4eec\u7684\u8d77\u59cb\u70b9\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86\uff0c\u6b64\u65f6\u6613\u77e5\u6211\u4eec\u73b0\u5728\u6807\u8bb0\u7684\u6240\u6709\u70b9\u5c31\u662f\u73af\u3002\n\n\u6700\u540e\u5c31\u5feb\u4e50\u5730\u4e0a\u6700\u77ed\u8def\u5566~\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct edge\n{\n\tint v;\n\tint w;\n\tint nxt;\n}e[6010];\nint head[3010],tot;\nvoid add(int u,int v,int w)\n{\n\te[++tot].v=v;\n\te[tot].w=w;\n\te[tot].nxt=head[u];\n\thead[u]=tot;\n}\nint n;\nbool flag[3010];\nbool ry,qwq;\nvoid dfs(int u,int fa,int st)\n{\n\tflag[u]=1;//\u6807\u8bb0\n\tfor(int i=head[u];i&&!qwq;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa) continue;\n\t\tif(flag[v])//\u627e\u5230\u73af\u4e86\n\t\t{\n\t\t\tif(v==st) ry=1;//\u73b0\u5728\u6807\u8bb0\u7684\u70b9\u662f\u73af\uff0c\u53ef\u4ee5\u9000\u51fadfs\u4e86\n\t\t\tqwq=1;\n\t\t\treturn ;\n\t\t}\n\t\tdfs(v,u,st);\n\t}\n\tif(!qwq) flag[u]=0;//\u4ece\u5f53\u524d\u8282\u70b9\u51fa\u53d1\u6ca1\u6709\u78b0\u5230\u73af\u7684\u8bdd\u5c31\u53d6\u6d88\u6807\u8bb0\n}\nint dis[3010];\nbool vis[3010];\nvoid dij()//\u4eba\u5c3d\u7686\u77e5\u7684\u4e1c\u897f\n{\n\tpriority_queue<pair<int,int> > q;\n\tmemset(dis,0x7f,sizeof(dis));\n\tfor(int i=1;i<=n;i++)\n\t\tif(flag[i])\n\t\t{\n\t\t\tdis[i]=0;\n\t\t\tq.push(make_pair(0,i));\n\t\t}\n\tint u;\n\twhile(!q.empty())\n\t{\n\t\tu=q.top().second;\n\t\tq.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].v,w=e[i].w;\n\t\t\tif(dis[v]>dis[u]+w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tq.push(make_pair(-dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1,u,v;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v,1),add(v,u,1);\n\t}\n\tfor(int i=1;i<=n&&!ry;i++)//\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u8dd1\u4e00\u904ddfs\n\t{\n\t\tqwq=0;\n\t\tmemset(flag,0,sizeof(flag));//\u8bb0\u5f97\u521d\u59cb\u5316\n\t\tdfs(i,0,i);\n\t}\n\tdij();\n\tfor(int i=1;i<=n;i++) printf(\"%d \",dis[i]);\n\treturn 0;\n}\n```",
        "postTime": 1660139555,
        "uid": 339299,
        "name": "osfly",
        "ccfLevel": 5,
        "title": "CF131D\u7684\u9898\u89e3"
    },
    {
        "content": "20191104 upd\uff1a\u4fee\u6b63\u4e86\u4e00\u4e9b\u5c0fbug\n\n** \u672c\u849f\u84bb\u53d1\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u505a\u6cd5\uff1aKosaraju\u7f29\u70b9\u3002~~\u660e\u660e\u5c31\u662f\u4e0d\u4f1atarjan\u561b~~ ** \n\n \u9996\u5148\u8bf4\u8bf4 Kosaraju \u5728\u6709\u5411\u56fe\u4e0a\u5bfb\u627e\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u505a\u6cd5\uff1a  \n\n* \u4ee5\u4efb\u610f\u70b9\u4e3a\u8d77\u70b9\uff0c\u5bf9\u56fe\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u5e76\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684**\u9000\u51fa\u987a\u5e8f**\uff1b  \n\n* \u6309\u7167**\u9000\u51fa\u987a\u5e8f\u7684\u9006\u5e8f**\uff0c\u5728**\u53cd\u5411\u56fe**\u4e0a\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u3002\u6bcf\u6b21\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u6240\u7ecf\u8fc7\u7684\u7ed3\u70b9\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e0a\u3002  \n\n\u4ee5\u8fd9\u5f20\u5f88\u8457\u540d\u7684\u56fe\u4e3a\u4f8b\uff1a  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q4l3kanw.png)  \n\n\u6211\u4eec\u4ee5 1 \u53f7\u7ed3\u70b9\u4e3a\u8d77\u70b9\u5bf9\u56fe\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff1a  \n\n1 -> 3 -> 5 -> 6\uff08\u9000\u51fa\uff09 -> 5\uff08\u9000\u51fa\uff09 -> 4\uff08\u9000\u51fa\uff09 -> 3\uff08\u9000\u51fa\uff09-> 2\uff08\u9000\u51fa\uff09 -> 1\uff08\u9000\u51fa\uff09  \n\n\u5219\u9000\u51fa\u987a\u5e8f\u4e3a\uff1a6 5 4 3 2 1  \n\n\u6309\u7167\u9000\u51fa\u987a\u5e8f\u7684\u9006\u5e8f**\u5728\u53cd\u56fe\u4e0a**\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff1a  \n\n\u4ee5 1 \u4e3a\u8d77\u70b9\uff1a1 -> 4 -> 3 -> 2 -> \u9000\u51fa  \n\n\u4ee5 5 \u4e3a\u8d77\u70b9\uff1a5 -> \u9000\u51fa\n\n\u4ee5 6 \u4e3a\u8d77\u70b9\uff1a6 -> \u9000\u51fa\n\n\u5219\u539f\u56fe\u4e2d\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e3a\uff1a\uff081,4,3,2\uff09\uff0c\uff085\uff09,\uff086\uff09  \n\n## \u90a3\u4e48\u5728\u57fa\u73af\u6811\u4e0a\u5462\uff1f\n\n\u57fa\u73af\u6811\u5c31\u662f\u672c\u9898\u7684\u60c5\u51b5\u3002\u6240\u8c13\u57fa\u73af\u6811\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u68f5\u6811 + \u4e00\u6761\u8fb9\uff0c\u5373\u6709 $n$ \u4e2a\u70b9\u548c $n$ \u6761\u8fb9\u7684\u3001\u6709\u552f\u4e00\u73af\u7684\u65e0\u5411\u56fe\u3002  \n\n\u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u4e0d\u96be\u5904\u7406\uff1a\u9996\u5148\u8fdb\u884c\u4f9d\u6b21\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u6807\u8bb0\u7ecf\u8fc7\u7684\u6240\u6709\u6811\u8fb9\u548c\u8fd4\u7956\u8fb9\uff08\u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u6210\u6807\u8bb0\u7b2c\u4e00\u6b21dfs\u65f6\u7ecf\u8fc7\u7684\u6240\u6709\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff09\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u5f20\u201c\u6709\u5411\u56fe\u201d\uff0c\u518d\u8fdb\u884c Kosaraju \u7f29\u70b9\u5373\u53ef\u3002\u6700\u540e\u5f97\u5230\u7684\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u5305\u542b\u7684\u70b9\u6570\u591a\u4e8e $1$ \u7684\u5373\u4e3a\u5728\u73af\u4e0a\u7684\u70b9\u3002    \n\n\u6700\u540e\u8981\u6c42\u5404\u70b9\u5230\u73af\u7684\u8ddd\u79bb\u4e5f\u5f88\u7b80\u5355\uff0c\u518d\u8fdb\u884c\u4e00\u6b21 dfs \u5e76\u8bb0\u5f55\u6df1\u5ea6\u5373\u53ef\u3002  \n\n## \u4ee3\u7801\u5982\u4e0b\uff1a  \n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define MAXN 30005 //\u5173\u4e8e\u6570\u636e\u8303\u56f4\uff1a\u9898\u9762\u4e0a\u5199\u4e86 n<=3000\uff0c\u4f46\u662f\u7b2c\u4e00\u6b21\u505a\u7684\u65f6\u5019\u6211 WA \u4e86\u3002\u3002\u3002\u628a\u6570\u7ec4\u5f00\u5230 30000 \u5c31\u8fc7\u4e86\nusing namespace std;\nint n,cnt,head[MAXN],mark[MAXN],s[MAXN],u[MAXN],v[MAXN],r,t,c[MAXN],circle,ans[MAXN];\nbool vis[MAXN],flag[MAXN];\nstruct Edge{\n\tint next,to;\n}edge[MAXN<<1];\ninline void add(int u,int v){\n\tedge[++cnt].next=head[u];\n\tedge[cnt].to=v;\n\thead[u]=cnt;\n}\nvoid dfs1(int p){\n\tvis[p]=1;\n\tfor(int i=head[p];i;i=edge[i].next){\n\t\tint v=edge[i].to;\n\t\tif(!vis[v]){\n\t\t\tflag[i]=1; //\u6807\u8bb0\u201c\u6709\u5411\u8fb9\u201d\n\t\t\tdfs1(v);\n\t\t}\n\t}\n\ts[++r]=p; // \u8bb0\u5f55\u9000\u51fa\u987a\u5e8f\n}\nvoid dfs2(int p){\n\tvis[p]=1;\n\tmark[p]=t;\n\tc[t]++;\n\tfor(int i=head[p];i;i=edge[i].next){\n\t\tif(flag[i]) continue; //\u56e0\u4e3a\u6b64\u9898\u7ed9\u51fa\u7684\u539f\u56fe\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5dfs1\u65f6\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u8fb9\u76f8\u5f53\u4e8e\u53cd\u56fe\u4e2d\u7684\u8fb9\n\t\tint v=edge[i].to;\n\t\tif(!vis[v]) dfs2(v);\n\t}\n}\nvoid dfs3(int p,int depth){\n\tvis[p]=1;\n\tans[p]=depth;\n\tfor(int i=head[p];i;i=edge[i].next){\n\t\tint v=edge[i].to;\n\t\tif(!vis[v]) dfs3(v,depth+1);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&u[i],v[i]);\n\t\tadd(u[i],v[i]);\n\t\tadd(v[i],u[i]); //\u5efa\u4e00\u5f00\u59cb\u7684\u65e0\u5411\u56fe\n\t}\n\tdfs1(1); //\u7b2c\u4e00\u6b21dfs\uff1a\u8bb0\u5f55\u9000\u51fa\u987a\u5e8f\u7ecf\u8fc7\u7684\u8fb9\n\tmemset(vis,0,sizeof(vis)); //\u6e05\u7a7a vis \u6570\u7ec4\uff0c\u51c6\u5907\u7b2c\u4e8c\u6b21\u6df1\u641c\n\tfor(int i=n;i>=1;i--){\n\t\tt++;\n\t\tif(!mark[s[i]]) dfs2(s[i]); //\u627e\u5f3a\u8fde\u901a\u5206\u91cf\n\t}\n\tcnt=0;\n\tmemset(head,0,sizeof(head)); //\u91cd\u65b0\u5efa\u56fe\n\tfor(int i=1;i<=t;i++){\n\t\tadd(mark[u[i]],mark[v[i]]);\n\t\tadd(mark[v[i]],mark[u[i]]);\n\t\tif(c[i]>1) circle=i; //\u6807\u8bb0\u73af\n\t}\n\tmemset(vis,0,sizeof(vis));\n\tdfs3(circle,0); //\u7b2c\u4e09\u6b21dfs\uff0c\u6c42\u8ddd\u79bb\n\tfor(int i=1;i<=n;i++)\n\t\tif(mark[i]!=circle) printf(\"%d \",ans[mark[i]]);\n\t\telse printf(\"0\"); //\u539f\u6765\u5728\u73af\u4e0a\u7684\u70b9\u8ddd\u79bb\u4e3a0\n\treturn 0;\n}\n```\n",
        "postTime": 1570346927,
        "uid": 139837,
        "name": "\u82e5\u5982\u521d\u89c1",
        "ccfLevel": 6,
        "title": "Kossaraju \u7b97\u6cd5 / \u57fa\u73af\u6811 / \u9898\u89e3 CF131D \u3010Subway\u3011"
    }
]