[
    {
        "content": "### CF 555E\n#### Solution\n\u9996\u5148\u5c06\u539f\u56fe\u8fdb\u884c\u8fb9\u53cc\u7f29\u70b9\uff0c\u4e0d\u96be\u53d1\u73b0\u53ef\u4ee5\u5c06$s$\u548c$t$\u90fd\u5728\u540c\u4e00\u4e2a\u8fb9\u53cc\u91cc\u7684\u8be2\u95ee\u5ffd\u7565\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u7ed9\u8fb9\u53cc\u5185\u7684\u8fb9\u5b9a\u5411\u4f7f\u5f97\u5176\u4e2d\u4efb\u610f\u4e24\u70b9\u90fd\u80fd\u4e92\u76f8\u5230\u8fbe\u3002\n\n\u4e8e\u662f\u5728\u7f29\u70b9\u540e\u539f\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u9897\u6811\uff0c\u90a3\u4e48\u9650\u5236$(s,t)$\u76f8\u5f53\u4e8e\u5c06\u6811\u4e0a$s\\to t$\u7684\u8def\u5f84\u4e0a\u7684\u8fb9\u5168\u90e8\u5b9a\u5411\uff0c\u5177\u4f53\u53ef\u4ee5\u901a\u8fc7\u6811\u4e0a\u5dee\u5206\u8ba1\u7b97\u6bcf\u6761\u8fb9$(u,v)$\u88ab\u5b9a\u5411\u6210$u\\to v$\u7684\u6b21\u6570$a$\u548c$v\\to u$\u7684\u6b21\u6570$b$\uff0c\u6700\u540e\u53ea\u9700dfs\u4e00\u904d\u5224\u65ad\u6bcf\u6761\u8fb9\u7684$a$\u548c$b$\u662f\u5426\u6709\u4e00\u4e2a\u4e3a$0$\u5373\u53ef\u3002\n\n#### Code\n```cpp\nint n,m,Q,len = 1,tim,colNum,tot;\nint head[MAXN],vis[MAXN << 1],low[MAXN],dfn[MAXN],col[MAXN];\nint dep[MAXN],f[MAXN][LOG],up[MAXN],down[MAXN],belong[MAXN];\nvector<int> g[MAXN];\n\nstruct Edge{\n\tint to,next;\n} e[MAXN << 1];\n\nstruct Query{\n\tint u,v;\n} q[MAXN];\n\nvoid add_edge(int u,int v){\n    e[++len] = (Edge){v,head[u]};\n    head[u] = len;\n}\n\nvoid tarjan(int u,int fa){\n\tdfn[u] = low[u] = ++tim;\n\tfor(int i = head[u];i != -1;i = e[i].next){\n\t\tint v = e[i].to;\n\t\tif(v == fa) continue;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v,u);\n\t\t\tlow[u] = min(low[u],low[v]);\n\t\t\tif(low[v] > dfn[u])\n\t\t\t\tvis[i] = vis[i ^ 1] = 1;\n\t\t}else\n\t\t\tlow[u] = min(low[u],dfn[v]);\n\t}\n}\n\nvoid dfs1(int u){\n\tcol[u] = colNum;\n\tfor(int i = head[u];i != -1;i = e[i].next){\n\t\tint v = e[i].to;\n\t\tif(col[v] || vis[i]) continue;\n\t\tdfs1(v);\n\t}\n}\n\nvoid dfs2(int u,int fa){\n\tbelong[u] = tot;\n\tdep[u] = dep[fa] + 1;\n\tf[u][0] = fa;\n\tfor(int i = 1;i < LOG;i++)\n\t\tf[u][i] = f[f[u][i - 1]][i - 1];\n\tfor(auto v : g[u]){\n\t\tif(v == fa) continue;\n\t\tdfs2(v,u);\n\t}\n}\n\nint LCA(int u,int v){\n\tif(dep[u] < dep[v]) swap(u,v);\n\tfor(int i = LOG - 1;i >= 0;i--){\n\t\tif(dep[f[u][i]] >= dep[v])\n\t\t\tu = f[u][i];\n\t}\n\tif(u == v) return u;\n\tfor(int i = LOG - 1;i >= 0;i--){\n\t\tif(f[u][i] != f[v][i]){\n\t\t\tu = f[u][i];\n\t\t\tv = f[v][i];\n\t\t}\n\t}\n\treturn f[u][0];\n}\n\nbool Check(int u,int fa){\n\tfor(auto v : g[u]){\n\t\tif(v == fa) continue;\n\t\tif(!Check(v,u) || (up[v] && down[v]))\n\t\t\treturn false;\n\t\tup[u] += up[v];\n\t\tdown[u] += down[v];\n\t}\n\treturn true;\n}\n\nint main(){\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d%d%d\",&n,&m,&Q);\n\tfor(int i = 1,u,v;i <= m;i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd_edge(u,v); add_edge(v,u);\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t\tif(!dfn[i]) tarjan(i,0);\n\tfor(int i = 1;i <= n;i++)\n\t\tif(!col[i]) colNum++, dfs1(i);\n\tfor(int i = 1;i <= n;i++){\n\t\tfor(int j = head[i];j != -1;j = e[j].next){\n\t\t\tint v = e[j].to;\n\t\t\tif(col[i] < col[v]){\n\t\t\t\tg[col[i]].push_back(col[v]);\n\t\t\t\tg[col[v]].push_back(col[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1;i <= colNum;i++)\n\t\tif(!belong[i]) tot++, dfs2(i,0);\n\tfor(int i = 1,u,v;i <= Q;i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tq[i] = (Query){col[u],col[v]};\n\t}\n\tfor(int i = 1;i <= Q;i++){\n\t\tint u = q[i].u,v = q[i].v;\t\n\t\tif(u == v) continue;\n\t\tif(belong[u] != belong[v]){\n\t\t\tprintf(\"No\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tint lca = LCA(u,v);\n\t\tup[u] += 1, up[lca] -= 1;\n\t\tdown[v] += 1, down[lca] -= 1;\n\t}\n\tfor(int i = 1;i <= colNum;i++){\n\t\tif(!f[i][0] && !Check(i,0)){\n\t\t\tprintf(\"No\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"Yes\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1607584026,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u4f60\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u56fe\uff0c\u4ee5\u53ca $q$ \u5bf9\u70b9 $(s,t)$\uff0c\u8ba9\u4f60\u5206\u914d $m$ \u6761\u8fb9\u7684\u65b9\u5411\u3002\u95ee\u662f\u5426\u5b58\u5728\u4e00\u79cd\u5206\u914d\u65b9\u6848\uff0c\u4f7f\u6bcf\u5bf9\u70b9\u7684 $s$ \u80fd\u8d70\u5230 $t$\u3002\u00a0\n\u5176\u4e2d $ 1\\leq n,m,q \\leq 2*10^5$\n\n## \u9898\u89e3\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u7684\u6027\u8d28\uff1a\u540c\u4e00\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u7684\u4efb\u610f\u4e24\u70b9\u81f3\u5c11\u5b58\u5728\u4e24\u6761\u4e0d\u5b58\u5728\u540c\u4e00\u6761\u8fb9\u7684\u8def\u5f84\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5f88\u81ea\u7136\u7684\u628a\u8fd9\u4e9b\u8fb9\u53cc\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u8fd9\u6837\u8fd9\u4e2a\u65e0\u5411\u56fe\u5c31\u53d8\u6210\u4e86\u6811\u3002\n\n\u8003\u8651\u6bcf\u4e00\u5bf9\u70b9 $(s,t)$\uff0c\u5982\u679c\u5b83\u4eec\u5728\u540c\u4e00\u4e2a\u8fb9\u53cc\u91cc\u90a3\u4e48\u80af\u5b9a\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u6ee1\u8db3\u8fd9\u5bf9\u9650\u5236\uff1b\u5982\u679c\u4e0d\u5728\u540c\u4e00\u4e2a\u8fb9\u53cc\u91cc\u5c31\u53ef\u4ee5\u770b\u6210\u662f\u6811\u4e0a\u7684\u4e24\u4e2a\u70b9\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u89e3\u51b3\u8fd9\u4e2a\u9898\u76ee\u5728\u6811\u4e0a\u600e\u4e48\u505a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $i$ \uff0c\u5b9a\u4e49 $up_i$ \u548c $down_i$ \u4e24\u4e2a\u6807\u8bb0\uff0c\u8fd0\u7528\u6811\u4e0a\u5dee\u5206\u7684\u65b9\u5f0f\u6765\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6709\u77db\u76fe\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u6c42 $lca$ \u7684\u590d\u6742\u5ea6\u3002\n```c++\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <climits>\n#include <cstdio>\n#include <vector>\n#include <cstdlib>\n#include <ctime>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n\n#define Re register\n#define LL long long\n#define U unsigned\n#define FOR(i,a,b) for(Re int i = a;i <= b;++i)\n#define ROF(i,a,b) for(Re int i = a;i >= b;--i)\n#define SFOR(i,a,b,c) for(Re int i = a;i <= b;i+=c)\n#define SROF(i,a,b,c) for(Re int i = a;i >= b;i-=c)\n#define CLR(i,a) memset(i,a,sizeof(i))\n#define BR printf(\"--------------------\\n\")\n#define DEBUG(x) std::cerr << #x << '=' << x << std::endl\n\nconst int MAXN = 300000+5;\nstruct Edge{\n    int to,next;\n}e1[MAXN<<1],e2[MAXN<<1];\nint head1[MAXN],head2[MAXN],cnt1 = 1,cnt2 = 1,bel[MAXN];\nint low[MAXN],dfn[MAXN],st[MAXN],top,block;\nint N,M,Q;int f[MAXN][50],dep[MAXN],par[MAXN],up[MAXN],down[MAXN];\nbool ins[MAXN];\n\ninline int find(int x){\n    return x == par[x] ? x : par[x] = find(par[x]);\n}\n\ninline bool Union(int x,int y){\n    int fx = find(x),fy = find(y);\n    if(fx == fy) return false;\n    par[fy] = fx;return true;\n}\n\ninline void add1(int u,int v){\n    e1[++cnt1] = (Edge){v,head1[u]};head1[u] = cnt1;\n}\n\ninline void add2(int u,int v){\n    e2[++cnt2] = (Edge){v,head2[u]};head2[u] = cnt2;\n}\n//int ts = 0;\ninline void dfs1(int v,int fa){\n    static int ts = 0;\n    dfn[v] = low[v] = ++ts;st[++top] = v;ins[v] = true;\n    for(int i = head1[v];i;i = e1[i].next){\n        if(i != fa){\n            // DEBUG(e1[i].to);\n            if(!dfn[e1[i].to]){\n                dfs1(e1[i].to,i^1);\n                low[v] = std::min(low[v],low[e1[i].to]);\n            }\n            else if(ins[e1[i].to]) low[v] = std::min(low[v],dfn[e1[i].to]);\n        }\n    }\n    if(dfn[v] != low[v]) return;\n    block++;int r = -1;\n    while(r != v){\n        r = st[top--];ins[r] = false;bel[r] = block;\n    }\n}\n\ninline void rebuild(){\n    FOR(v,1,N){\n        for(int i = head1[v];i;i = e1[i].next){\n            if(bel[v] != bel[e1[i].to]){\n                if(Union(bel[v],bel[e1[i].to]))\n                    add2(bel[v],bel[e1[i].to]),\n                    add2(bel[e1[i].to],bel[v]);\n            }\n        }\n    }\n}\n\nfloat log2N;\n\nvoid dfs2(int v,int fa){\n    FOR(i,1,log2N){\n        if(dep[v] <= (1<<i)) break;\n        f[v][i] = f[f[v][i-1]][i-1];\n    }\n    for(int i = head2[v];i;i = e2[i].next){\n        if(e2[i].to == fa) continue;\n        //DEBUG(v);DEBUG(e2[i].to);\n        dep[e2[i].to] = dep[v] + 1;\n        f[e2[i].to][0] = v;\n        dfs2(e2[i].to,v);\n    }\n}\n\nint lca(int x,int y){\n    int dx = dep[x],dy = dep[y];\n    if(dx != dy){\n        if(dx < dy) std::swap(x,y),std::swap(dx,dy);\n        int d = dx-dy;\n        FOR(i,0,log2N) if((1<<i)&d) x = f[x][i];\n    }\n    if(x == y) return x;\n    ROF(i,log2N,0){\n        if(f[x][i] == f[y][i]) continue;\n        x = f[x][i],y = f[y][i];\n    }\n    return f[x][0];\n}\n\nbool ans;\n\nvoid dfs3(int v){\n    if(!ans) return;\n    for(int i = head2[v];i;i = e2[i].next){\n        if(dep[e2[i].to] > dep[v]){\n            dfs3(e2[i].to);\n            if(!ans) return;\n            up[v] += up[e2[i].to];down[v] += down[e2[i].to];\n        }\n    }\n    if(up[v] && down[v]) ans = false;\n}\n\nint main(){\n    scanf(\"%d%d%d\",&N,&M,&Q);\n    FOR(i,1,N) par[i] = i;\n    FOR(i,1,M){\n        int u,v;scanf(\"%d%d\",&u,&v);\n        add1(u,v);add1(v,u);\n    }\n    FOR(i,1,N) if(!dfn[i]) dfs1(i,0);\n    //FOR(u,1,N) printf(\"%d %d\\n\",low[u],dfn[u]);\n    rebuild();log2N = log2(1.0*block);CLR(f,-1);\n    FOR(v,1,block){\n        if(find(v) == v) dep[v] = 1,dfs2(v,0);\n    }\n    // FOR(i,1,N) printf(\"%d \",dep[i]);puts(\"\");\n    ans = true;\n    FOR(i,1,Q){\n        int u,v;scanf(\"%d%d\",&u,&v);\n        u = bel[u],v = bel[v];\n        if(u == v) continue;\n        if(find(u) != find(v)){\n            ans = false;break;\n        }\n        int l = lca(u,v);// DEBUG(l);\n        up[u]++;down[v]++;up[l]--;down[l]--;\n    }\n    if(ans) FOR(i,1,block){\n        if(i == find(i)) dfs3(i);\n        if(!ans) break;\n    }\n    //FOR(i,1,N) printf(\"%d %d\\n\",up[i],down[i]);\n    puts(ans ? \"Yes\" : \"No\");\n    return 0;\n}\n```",
        "postTime": 1548041639,
        "uid": 50075,
        "name": "RainAir",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "> IV. [CF555E Case of Computer Network](https://www.luogu.com.cn/problem/CF555E)\r\n>\r\n> [\u521d\u7ea7\u56fe\u8bba](https://www.cnblogs.com/alex-wei/p/basic_graph_theory.html)\u3002\r\n\r\n\u5bf9\u4e8e\u4e00\u4e2a E-BCC\uff0c\u6211\u4eec\u603b\u53ef\u4ee5\u7ed9\u5176\u5185\u90e8\u7684\u8fb9\u5b89\u6392\u4e00\u4e2a\u5b9a\u5411\u65b9\u5f0f\uff0c\u4f7f\u5f97\u5176\u4efb\u4f55\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u5230\u8fbe\u53e6\u5916\u6240\u6709\u70b9\u3002\u5373 E-BCC \u4e00\u5b9a\u53ef\u4ee5\u5b9a\u5411\u4e3a SCC\u3002\r\n\r\n\u8bc1\u660e\uff1a\u9996\u5148\u7ed9\u51fa\u5f15\u7406\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5f3a\u8fde\u901a\u7684\u70b9\u96c6 $S$\uff0c\u8bbe\u6709\u5411\u8def\u5f84 $P = u\\to p_1 \\to \\cdots \\to v$\uff0c\u82e5 $u, v\\in S$\uff0c\u5219\u5c06\u6240\u6709 $p_i$ \u6dfb\u52a0\u8fdb $S$ \u96c6\u5408\u540e\uff0c$S$ \u4ecd\u7136\u5f3a\u8fde\u901a\u3002\u8fd9\u4e00\u70b9\u5bb9\u6613\u8bc1\u660e\u3002\r\n\r\n\u6839\u636e\u5f15\u7406\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8fb9\u53cc $G = (V, E)$\uff0c\u6211\u4eec\u9996\u5148\u627e\u5230\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u73af $P$\uff0c\u5c06\u5176\u5b9a\u5411\u6210\u6709\u5411\u73af\u3002\u8bbe\u521d\u59cb\u7684\u5f3a\u8fde\u901a\u96c6\u4e3a $P$ \u7684\u70b9\u96c6\u3002\u63a5\u4e0b\u6765\uff0c\u4e0d\u65ad\u9009\u53d6\u4e24\u7aef\u5747\u5c5e\u4e8e $S$ \u7684\u4e00\u6761\u6240\u6709\u8fb9\u5747\u6ca1\u6709\u88ab\u5b9a\u5411\u7684\u94fe $C$\uff0c\u5c06\u5176\u5b9a\u5411\u6210\u6709\u5411\u94fe\u5e76\u5c06\u94fe\u4e0a\u6240\u6709\u70b9\u52a0\u5165 $S$\u3002\r\n\r\n$C$ \u5fc5\u7136\u5b58\u5728\u3002\u8003\u8651\u8fb9 $(u, v)$ \u6ee1\u8db3 $u\\in S$ \u4e14 $v\\notin S$\u3002\u5f53 $S \\neq V$ \u65f6\u8fd9\u6837\u7684\u8fb9\u5fc5\u7136\u5b58\u5728\uff0c\u5426\u5219 $G$ \u4e0d\u8fde\u901a\u3002\u4ece $u$ \u51fa\u53d1\u8d70\u5230 $v$\uff0c\u6700\u7ec8\u5fc5\u7136\u4f1a\u56de\u5230 $S$\u3002\u56e0\u4e3a $G$ \u8fb9\u53cc\u8fde\u901a\u6240\u4ee5\u9664\u53bb $(u, v)$ \u8fd9\u6761\u8fb9\uff0c$v$ \u5fc5\u7136\u80fd\u56de\u5230 $u$\uff0c\u81ea\u7136\u4e00\u5b9a\u80fd\u56de\u5230 $S$\u3002\u7b2c\u4e00\u6b21\u56de\u5230 $S$ \u65f6\u5df2\u7ecf\u8d70\u8fc7\u7684\u8def\u5f84\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 $C$\u3002\r\n\r\n\u7531\u4e8e $G$ \u5927\u5c0f\u6709\u9650\uff0c\u6240\u4ee5\u4e0a\u8ff0\u8fc7\u7a0b\u6700\u7ec8\u4e00\u5b9a\u7ed3\u675f\uff0c\u6b64\u65f6 $S = V$\uff0c\u5373 $V$ \u5f3a\u8fde\u901a\u3002\u5c06\u8fd8\u6ca1\u6709\u88ab\u5b9a\u5411\u7684\u8fb9\u968f\u610f\u5b9a\u5411\uff0c\u7ed3\u8bba\u5f97\u8bc1\u3002\r\n\r\n\u56e0\u6b64\uff0c\u6211\u4eec\u5148\u5bf9\u539f\u56fe\u8fb9\u53cc\u7f29\u70b9\u5f97\u5230\u4e00\u68f5\u6811\uff0c\u5982\u679c $s, t$ \u4e0d\u8fde\u901a\u81ea\u7136\u65e0\u89e3\uff0c\u5426\u5219\uff0c$s$ \u6240\u5728\u70b9\u53cc $G(s)$ \u5fc5\u987b\u53ef\u8fbe $t$ \u6240\u5728\u70b9\u53cc $G(t)$\uff0c\u56e0\u6b64 $G(s)$ \u5230 $G(t)$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u5b9a\u5411\u5df2\u7ecf\u786e\u5b9a\u3002\u5982\u679c\u5b58\u5728\u4e00\u6761\u8fb9\u7684\u5b9a\u5411\u77db\u76fe\u5219\u65e0\u89e3\uff0c\u53ef\u4ee5\u901a\u8fc7 LCA + \u6811\u4e0a\u5dee\u5206\u5b9e\u73b0\u5bf9\u4e00\u6761\u94fe\u7684\u6807\u8bb0\u3002\u5f00\u4e24\u4e2a\u5dee\u5206\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u5f53\u524d\u70b9\u5230\u5b83\u7236\u4eb2\u7684\u8fde\u8fb9\u662f\u5426\u88ab\u94a6\u5b9a\u4e3a\u5411\u4e0a\u6216\u5411\u4e0b\uff0c\u82e5\u540c\u65f6\u6709\u503c\u5219\u65e0\u89e3\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(m + (n + q)\\log n)$\uff0c\u74f6\u9888\u5728\u4e8e\u6c42 LCA\u3002\u4f7f\u7528\u56db\u6bdb\u5b50\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u3002\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int K = 18;\r\nconst int N = 2e5 + 5;\r\nint n, m, q, cur, blk[N], lg[N];\r\nvector<int> g[N], root;\r\nvector<pair<int, int>> e[N];\r\nint dn, dfn[N], low[N], top, stc[N], cn, col[N];\r\nvoid form(int id) {for(int x = (cn++, 0); x != id; ) col[x = stc[top--]] = cn;}\r\nvoid tarjan(int id, int eid) {\r\n  dfn[id] = low[id] = ++dn, stc[++top] = id, blk[id] = cur;\r\n  for(auto _ : e[id]) {\r\n    if(_.second == eid) continue;\r\n    int it = _.first;\r\n    if(!dfn[it]) {\r\n      tarjan(it, _.second), low[id] = min(low[id], low[it]);\r\n      if(low[it] > dfn[id]) form(it);\r\n    }\r\n    else low[id] = min(low[id], dfn[it]);\r\n  }\r\n  if(!eid) form(id);\r\n}\r\nint dep[N], mi[K][N];\r\nint get(int x, int y) {return dep[x] < dep[y] ? x : y;}\r\nvoid dfs(int id, int ff) {\r\n  dep[id] = dep[ff] + 1;\r\n  mi[0][dfn[id] = ++dn] = ff;\r\n  for(int it : g[id]) if(it != ff) dfs(it, id);\r\n}\r\nint lca(int u, int v) {\r\n  if(u == v) return u;\r\n  if((u = dfn[u]) > (v = dfn[v])) swap(u, v);\r\n  int d = lg[v - (u++)];\r\n  return get(mi[d][u], mi[d][v - (1 << d) + 1]);\r\n}\r\nint up[N], down[N];\r\nvoid flush(int id, int ff) {\r\n  for(int it : g[id]) if(it != ff) flush(it, id), up[id] += up[it], down[id] += down[it];\r\n  if(up[id] && down[id]) puts(\"No\"), exit(0);\r\n}\r\nint main() {\r\n#ifdef ALEX_WEI\r\n  freopen(\"1.in\", \"r\", stdin);\r\n  freopen(\"1.out\", \"w\", stdout);\r\n#endif\r\n  cin >> n >> m >> q;\r\n  for(int i = 1; i <= m; i++) {\r\n    int u, v;\r\n    scanf(\"%d%d\", &u, &v);\r\n    e[u].push_back({v, i});\r\n    e[v].push_back({u, i});\r\n  }\r\n  for(int i = 1; i <= n; i++) if(!dfn[i]) cur++, tarjan(i, 0);\r\n  for(int i = 1; i <= n; i++)\r\n    for(auto it : e[i])\r\n      if(col[i] != col[it.first])\r\n        g[col[i]].push_back(col[it.first]);\r\n  dn = 0;\r\n  for(int i = 1; i <= cn; i++) if(!dep[i]) dfs(i, 0), root.push_back(i);\r\n  for(int i = 2; i <= cn; i++) lg[i] = lg[i >> 1] + 1;\r\n  for(int i = 1; i <= lg[cn]; i++)\r\n    for(int j = 1; j + (1 << i) - 1 <= cn; j++)\r\n      mi[i][j] = get(mi[i - 1][j], mi[i - 1][j + (1 << i - 1)]);\r\n  for(int i = 1; i <= q; i++) {\r\n    int s, t;\r\n    scanf(\"%d%d\", &s, &t);\r\n    if(blk[s] != blk[t]) puts(\"No\"), exit(0);\r\n    if((s = col[s]) == (t = col[t])) continue; // add this line\r\n    int d = lca(s, t);\r\n    up[s]++, up[d]--, down[t]++, down[d]--;\r\n  }\r\n  for(int it : root) flush(it, 0);\r\n  puts(\"Yes\");\r\n  return cerr << \"Time: \" << clock() << endl, 0;\r\n}\r\n/*\r\n2022/5/26\r\nstart coding at 7:03\r\nfinish debugging at 7:20\r\n*/\r\n```",
        "postTime": 1653552139,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF555E Case of Computer Network"
    },
    {
        "content": "\u5bf9\u4e8e\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u8c03\u6574\u8fb9\u7684\u65b9\u5411\u4f7f\u5f97\u5206\u91cf\u4e2d\u4efb\u610f\u4e24\u70b9\u95f4\u4e92\u76f8\u53ef\u8fbe\n\n\u6240\u4ee5\u6211\u4eec\u9996\u5148\u8fb9\u53cc\u7f29\u70b9\uff0c\u7136\u540e\u5ffd\u7565\u6389\u5728\u540c\u4e00\u8fb9\u53cc\u5206\u91cf\u7684\u8981\u6c42\n\n\u7f29\u70b9\u540e\u5f62\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u4e0d\u5728\u540c\u4e00\u68f5\u6811\u7684\u8981\u6c42\u662f\u4e0d\u53ef\u80fd\u6ee1\u8db3\u7684\uff0c\u5bf9\u4e8e\u5269\u4e0b\u7684\u8981\u6c42\uff0c\u6211\u4eec\u5728\u6811\u4e0a\u5dee\u5206\u5373\u53ef\n\n```cpp\n//timeuse:25min\nconst int N = 200010,M = N;\nint q;int s[N],t[N];\nstruct Tree\n{\n\tint n;EE(1);\n\tint fa[N][20],dep[N];\n\tint col_id,col[N];\n\tvoid dfs(int u)\n\t{\n\t\tcol[u] = col_id;\n\t\tfor(int i = 1;i < 20;i++) fa[u][i] = fa[fa[u][i - 1]][i - 1];\n\t\tfor(int i = head[u],v;i;i = e[i].nxt) if((v = e[i].to) != fa[u][0])\n\t\t\tfa[v][0] = u,dep[v] = dep[u] + 1,dfs(v);\n\t}\n\tint lca(int x,int y)\n\t{\n\t\tif(dep[x] < dep[y]) swap(x,y);\n\t\tint h = dep[x] - dep[y];for(int i = 0;i < 20;i++) if(h & (1 << i)) x = fa[x][i];\n\t\tif(x == y) return x;\n\t\tfor(int i = 19;~i;i--) if(fa[x][i] != fa[y][i]) x = fa[x][i],y = fa[y][i];\n\t\treturn fa[x][0];\n\t}\n\tint s1[N],s2[N];\n\tbool check(int u)\n\t{\n\t\tfor(int i = head[u],v;i;i = e[i].nxt) if((v = e[i].to) != fa[u][0])\n\t\t{\n\t\t\tif(!check(v) || s1[v] && s2[v]) return 0;\n\t\t\ts1[u] += s1[v],s2[u] += s2[v];\n\t\t}return 1;\n\t}\n\tvoid solve()\n\t{\n\t\tfor(int i = 1;i <= n;i++) if(!col[i]) col_id++,dep[i] = 1,dfs(i);\n\t\tfor(int i = 1;i <= q;i++)\n\t\t{\n\t\t\tint u = s[i],v = t[i];\n\t\t\tif(col[u] != col[v]) { puts(\"No\");return; }\n\t\t\tint z = lca(u,v);\n\t\t\ts1[u]++,s1[z]--,s2[v]++,s2[z]--;\n\t\t}\n\t\tfor(int i = 1;i <= n;i++) if(dep[i] == 1 && !check(i)) { puts(\"No\");return; }\n\t\tputs(\"Yes\");\n\t}\n}T;\nstruct Graph\n{\n\tint n,m;\n\tEE(1);bool vis[M << 1];\n\tint dfn[N],low[N],idx;\n\tvoid Tarjan(int u,int fa)\n\t{\n\t\tdfn[u] = low[u] = ++idx;\n\t\tfor(int i = head[u];i;i = e[i].nxt) if(i != fa)\n\t\t{\n\t\t\tint v = e[i].to;\n\t\t\tif(!dfn[v])\n\t\t\t{\n\t\t\t\tTarjan(v,i ^ 1),low[u] = min(low[u],low[v]);\n\t\t\t\tif(low[v] > dfn[u]) vis[i] = vis[i ^ 1] = 1;\n\t\t\t}\n\t\t\telse low[u] = min(low[u],dfn[v]);\n\t\t}\n\t}\n\tint col_id,col[N];\n\tvoid dfs(int u)\n\t{\n\t\tcol[u] = col_id;\n\t\tfor(int i = head[u],v;i;i = e[i].nxt) if(!col[v = e[i].to] && !vis[i]) dfs(v);\n\t}\n\tvoid build()\n\t{\n\t\tn = read(),m = read(),q = read();\n\t\tfor(int i = 1;i <= m;i++) add_edge(read(),read());\n\t\tfor(int i = 1;i <= n;i++) if(!dfn[i]) Tarjan(i,-1);\n\t\tfor(int i = 1;i <= n;i++) if(!col[i]) col_id++,dfs(i);\n\t\tT.n = col_id;\n\t\tfor(int u = 1;u <= n;u++) for(int i = head[u],v;i;i = e[i].nxt)\n\t\t\tif(col[u] < col[v = e[i].to]) T.add_edge(col[u],col[v]);\n\t\tfor(int i = 1;i <= q;i++)\n\t\t{\n\t\t\ts[i] = col[read()],t[i] = col[read()];\n\t\t\tif(s[i] == t[i]) i--,q--;\n\t\t}\n\t}\n}G;\nint main()\n{\n\tG.build(),T.solve();\n\treturn 0;\n}\n```",
        "postTime": 1593238540,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "# T1 CF555E Case of Computer Network\n\n\u7ed9\u5b9a\u4e00\u5f20 n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u3002\n\u7ed9\u5b9a q \u7ec4\u6709\u5411\u70b9\u5bf9(s,t)\u3002\n\u8be2\u95ee\u662f\u5426\u5b58\u5728\u4f7f\u5f97\u6240\u6709 s \u90fd\u80fd\u5230\u8fbe t \u7684\u65e0\u5411\u56fe\u4e2d\u6bcf\u6761\u8fb9\u7684\u5b9a\u5411\u65b9\u6848\u3002\n$n,m,q \\le 2 \\times 10^5$\n\n\n\n**solution**\n\n\u5176\u5b9e\u5427\uff0c\u8fd9\u9898\u6ca1\u6709\u60f3\u8c61\u4e2d\u90a3\u4e48\u96be\u3002\n\n\u5148$Tarjan$ \u6c42\u5272\u8fb9\uff0c\u7f29\u70b9\uff0c\u7136\u540e\u5f97\u5230\u4e00\u68f5\u6811\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee$(u  , v)$\u3002\n\n\u82e5u\uff0cv\u5728\u540c\u4e00\u4e2a\u8fb9\u53cc\u4e2d\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u65b9\u6cd5\u4f7f\u5f97\u8fd9\u4e2a\u8fb9\u53cc\u7684\u4e2d\u7684\u70b9\u4e24\u4e24\u4e92\u8fbe\uff0c(\u8fb9\u53cc\u4e2d\u6709\u73af\u561b\u3002\u3002)\n\n\u82e5\u4e0d\u5728\u4e00\u4e2a\u8054\u901a\u5757\u91cc\uff0c(\u4e0d\u5728\u4e00\u68f5\u6811\u91cc)\uff0c\u90a3\u4e48\u80af\u5b9a\u65e0\u89e3\u3002\n\n\u82e5\u90fd\u5728\u4e00\u4e2a\u6811\u4e0a\u5c31\uff0c\u5c06\u8fd9\u6761\u8def\u52b2\u4e0a\u7684\u8fb9\u90fd\u6253\u4e0a\u4e00\u4e2a\u6807\u8bb0\uff0c\u5373\u53ef\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u7528\u6811\u4e0a\u5dee\u5206\u7684\u65b9\u6cd5\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5+10;\ninline int read()\n{\n\tregister int x = 0 , f = 0; register char c = getchar();\n\twhile(c < '0' || c > '9') f |= c == '-' , c = getchar();\n\twhile(c >= '0' && c <= '9') x = (x << 3) + (x << 1) + (c ^ 48) , c = getchar();\n\treturn f ? -x : x;\n}\nint n , m , q , cnt = 1 , dfn_id , col_id , tag_id;\nint head[N] , dfn[N] , vis[N << 1] , low[N] , col[N] , tag[N] , d[N] , s1[N] , s2[N] , f[N][20];\nvector<int> G[N];\nstruct edge { int v , nex; }e[N << 1];\ninline void add(int u , int v) { e[++cnt].v = v; e[cnt].nex = head[u]; head[u] = cnt; }\n\nvoid Tarjan(int x , int f)\n{\n\tdfn[x] = low[x] = ++dfn_id;\n\tfor(int i = head[x] , v; i ; i = e[i].nex) if(i != f)\n\t{\n\t\tv = e[i].v;\n\t\tif(!dfn[v]) \n\t\t{\n\t\t\tTarjan(v , i ^ 1) , low[x] = min(low[x] , low[v]);\n\t\t\tif(low[v] > dfn[x]) vis[i] = vis[i ^ 1] = 1;\n\t\t}\n\t\telse low[x] = min(low[x] , dfn[v]);\n\t}\n}\n\nvoid dfs1(int x)\n{\n\tcol[x] = col_id;\n\tfor(int i = head[x] ; i ; i = e[i].nex) if(!col[e[i].v] && !vis[i]) dfs1(e[i].v);\n}\n\nvoid dfs2(int x)\n{\n\ttag[x] = tag_id;\n\tfor(auto v : G[x]) if(v != f[x][0]) \n\t{\n\t\tf[v][0] = x; d[v] = d[x] + 1;\n\t\tfor(int i = 1 ; i < 20 ; ++i) f[v][i] = f[f[v][i-1]][i-1];\n\t\tdfs2(v);\n\t}\n}\n\nint LCA(int x , int y)\n{\n\tif(d[x] < d[y]) swap(x , y);\n\tfor(int i = 19 ; ~i ; --i) if(d[f[x][i]] >= d[y]) x = f[x][i];\n\tif(x == y) return x;\n\tfor(int i = 19 ; ~i ; --i) if(f[x][i] != f[y][i]) x = f[x][i] , y = f[y][i];\n\treturn f[x][0];\n}\n\nbool check(int x)\n{\n\tfor(auto v : G[x]) if(v != f[x][0])\n\t{\n\t\tif(!check(v) || (s1[v] && s2[v])) return false;\n\t\ts1[x] += s1[v]; s2[x] += s2[v];\n\t}\n\treturn true;\n}\n\nint main()\n{\n\tn = read(); m = read(); q = read();\n\tfor(int i = 1 , u , v; i <= m ; ++i) u = read() , v = read() , add(u , v) , add(v , u);\n\tfor(int i = 1 ; i <= n ; ++i) if(!dfn[i]) Tarjan(i , -1);\n\tfor(int i = 1 ; i <= n ; ++i) if(!col[i]) col_id++ , dfs1(i);\n\tfor(int i = 1 ; i <= n ; ++i) for(int j = head[i] ; j ; j = e[j].nex) if(col[i] < col[e[j].v]) G[col[i]].push_back(col[e[j].v]) , G[col[e[j].v]].push_back(col[i]);\n\tfor(int i = 1 ; i <= col_id ; ++i) if(!tag[i]) tag_id++ , d[i] = 1 , dfs2(i);\n\tfor(int i = 1 , u , v ; i <= q ; ++i)\n\t{\n\t\tu = read(); v = read(); u = col[u]; v = col[v]; if(u == v) continue;\n\t\tif(tag[u] != tag[v]) return puts(\"No\") , 0;\n\t\tint p = LCA(u , v);\n\t\ts1[u]++; s1[p]--; s2[v]++; s2[p]--;\n\t}\n\tfor(int i = 1 ; i <= col_id ; ++i) if(d[i] == 1 && !check(i)) return puts(\"No\") , 0;\n\tputs(\"Yes\");\n\treturn 0;\t\n}\n```\n\n",
        "postTime": 1592278295,
        "uid": 153897,
        "name": "RQ\u3002\u3002\u3002",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u6765\u4e00\u4e2a\u7ed3\u5c3e lct \u7684\u505a\u6cd5\n\n---\n\n\u4e00\u5f00\u59cb\u5148\u662f\u53cc\u8fde\u901a\u5206\u91cf\u7f29\u70b9\u53d8\u6210\u4e00\u68f5\u6811\uff0c\u4e4b\u540e\u5728\u6811\u4e0a\u9009\u5b9a\u8fb9\u7684\u65b9\u5411\u3002\n\n\u6b63\u89e3\u5e94\u8be5\u662f\u7528\u6811\u4e0a\u5dee\u5206\uff0c\u4f46\u7531\u4e8e\u6211\u6700\u8fd1\u521a\u597d\u505a\u4e86\u4e9b lct \u5c31\uff08\u65e0\u8111\u5730\uff09\u60f3\u5230\u7528 lct \u7ef4\u62a4\u8fd9\u68f5\u6811\u3002\n\n\u6211\u4eec\u8003\u8651\u7ed9\u8fb9\u5efa\u70b9\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u503c\u8868\u793a\u8fb9\u7684\u72b6\u6001\u3002\u5f53\u503c\u5206\u522b\u4e3a\uff1a\n\n- `[-1]` \u8868\u793a\u672a\u7ed9\u5b9a\u72b6\u6001\n- `[0]` \u8868\u793a\u8fd9\u4e2a\u70b9\u539f\u6765\u4e0d\u662f\u8fb9\uff0c\u4e0d\u9700\u8981\u7ed9\u5b9a\u72b6\u6001\n- `[1]` \u8868\u793a\u8fd9\u6761\u8fb9\u5411\u6839\u8d70\n- `[2]` \u8868\u793a\u8fd9\u6761\u8fb9\u5411\u53f6\u8d70\n\n\u4f46 lct \u7ef4\u62a4\u7684\u6811\u5f80\u5f80\u6839\u662f\u4e0d\u65ad\u53d8\u5316\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u968f\u7740\u6839\u7684\u53d8\u5316\u7ef4\u62a4\u8fb9\u7684\u72b6\u6001\u3002\u53d1\u73b0\u53ea\u6709\u5728\u6362\u6839\u64cd\u4f5c\u65f6\uff0c**\u4ece\u539f\u6765\u6839\u5230\u65b0\u6839**\u7684\u8def\u5f84\u4f1a\u88ab\u5f71\u54cd\uff0c\u56e0\u6b64\u53ea\u8981\u5728\u5904\u7406 rev\uff08\u201c\u7ffb\u8f6c\u6df1\u5ea6\u201d\uff09\u6807\u7b7e\u7684\u540c\u65f6\u7ef4\u62a4\u8fb9\u72b6\u6001\u5c31\u884c\u4e86\u3002\n\n\u81f3\u4e8e\u68c0\u6d4b\u8fdd\u6cd5\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u5728\u7ed9\u8fb9\u8d4b\u503c\u65f6\u540c\u65f6\u68c0\u67e5\u5373\u53ef\uff08\u5982\u679c\u5c06 `1` \u6539\u4e3a `2` \u6216\u53cd\u4e4b\u5c31\u5c06\u4e00\u4e2a\u5168\u5c40\u7684\u6807\u8bb0\u6539\u53d8\uff09\u3002**\u540c\u65f6\u6700\u540e\u8981\u67e5\u8be2\u6bcf\u4e2a\u70b9\u4ee5\u4fdd\u8bc1\u6807\u8bb0\u6e05\u7a7a\u3002**\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u5957 lct \u505a\u8fd9\u9053\u9898\u4e86\u3002\u4f46\u7531\u4e8e lct \u6700\u540e\u7684\u6700\u574f\u590d\u6742\u5ea6\uff08\u53d6\u51b3\u4e8e\u7f29\u70b9\u60c5\u51b5\uff09\u53ef\u80fd\u8fbe\u5230 $O(qlog(n)^2)$\uff0c\u60f3\u8981\u8fc7\u540e\u9762\u7684\u5927\u6570\u636e\u662f\u57fa\u672c\u4e0d\u53ef\u80fd\u7684\uff08[\u5361\u5728\u70b936](https://codeforces.com/contest/555/submission/80559267)\uff09\u3002\n\n\uff08\u4f46\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u79cd\u8fb9\u5904\u7406\u65b9\u5f0f\u8fd8\u662f\u633a\u5177\u6709**\u4ee3\u8868\u6027**\u7684\uff0c\u4e8e\u662f\u624d\u5199\u4e86\u8fd9\u7bc7\u9898\u89e3\uff08\n\n---\n\n### CODE\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing std::min;\n\nconst int MAXN =4e5+50;\n\n/*------------------------------Tarjan------------------------------*/\n\nint n, m, CNT, COL;\nint first[MAXN], col[MAXN], dfn[MAXN], low[MAXN];\nint stk[MAXN], tot;\n\nstruct edge{\n\tint net, from, to;\n\tbool isbge;\n}e[MAXN];\n\nvoid tarjan(int u, int edg =-1){\n\tstk[tot++] =u;\n\tlow[u] =dfn[u] =++CNT;\n\tedge *E;\n\tfor(int l =first[u]; l != -1; l =E->net){\n\t\tE =&e[l];\n\t\tif(!dfn[E->to]){\n\t\t\ttarjan(E->to, l), low[u] =min(low[u], low[E->to]);\n\t\t\tif(low[E->to] > dfn[u]) E->isbge =e[l^1].isbge =1;\n\t\t}\n\t\telse if((l^1) != edg) low[u] =min(low[u], dfn[E->to]);\n\t}\n\tif(low[u] == dfn[u]){\n\t\t++COL;\n\t\tdo col[stk[--tot]] =COL; while(stk[tot] != u);\n\t}\n}\n\ninline void addedge(int u, int v, int i){\n\tedge &E1 =e[i<<1], &E2 =e[(i<<1)|1];\n\tE1.net =first[u], E1.from =u, E1.to =v, first[u] =i<<1;\n\tE2.net =first[v], E2.from =v, E2.to =u, first[v] =(i<<1)|1;\n}\n\n/*------------------------------LCT------------------------------*/\n\nint f[MAXN], c[2][MAXN], val[MAXN], cache[MAXN];\nbool rev[MAXN], lzy[MAXN], WRONG;\n\ninline bool isroot(int x){ int y =f[x]; return (c[0][y] != x && c[1][y] != x) || y == 0; }\n\ninline bool get(int x){ return c[1][f[x]] == x; }\n\ninline void pushdown(int x){\n\tif(x == 0) return;\n\tif(rev[x]){\n\t\trev[c[0][x]] ^=1, rev[c[1][x]] ^=1;\n\t\tc[0][x] ^=c[1][x] ^=c[0][x] ^=c[1][x];\n\t\tif(val[x] == 1) val[x] =2;\n\t\telse if(val[x] == 2) val[x] =1;\n\t\tif(cache[x] == 1) cache[x] =2;\n\t\telse if(cache[x] == 2) cache[x] =1;\n\t\trev[x] =0;\n\t}\n\tif(lzy[x]){\n\t\tint lc =c[0][x], rc =c[1][x];\n\t\tpushdown(lc), pushdown(rc);\n\t\tlzy[lc] =lzy[rc] =1;\n\t\tcache[lc] =cache[rc] =cache[x];\n\t\tif(val[x] != -1 && val[x] != 0 && cache[x] != val[x]) WRONG =1;\n\t\tif(val[x] == -1) val[x] =cache[x];\n\t\tlzy[x] =0;\n\t}\n}\n\ninline void rotate(int x){\n\tbool r =get(x), r2 =get(f[x]);\n\tint y =f[x], z =f[y], a =c[!r][x];\n\tf[x] =z; if(!isroot(y)) c[r2][z] =x;\n\tf[y] =x; c[!r][x] =y;\n\tf[a] =y; c[r][y] =a;\n}\n\ninline void pushall(int x){\n\tif(!isroot(x)) pushall(f[x]);\n\tpushdown(x);\n}\n\ninline void splay(int x){\n\tpushall(x);\n\tfor(; !isroot(x); rotate(x)){\n\t\tint y =f[x];\n\t\tif(!isroot(y)) rotate((get(y) == get(x)) ? y : x);\n\t}\n}\n\ninline void access(int x){\n\tfor(int pre =0; x; pre =x, x =f[x]){\n\t\tsplay(x);\n\t\tc[1][x] =pre;\n\t}\n}\n\ninline void setroot(int x){\n\taccess(x), splay(x);\n\trev[x] =1;\n}\n\ninline void link(int x, int y){\n\tsetroot(x);\n\tf[x] =y;\n\tsplay(y);\n}\n\ninline void updata(int x, int y){/*x to y*/\n\tsetroot(x), access(y), splay(y);/*1up 2 down*/\n\tcache[y] =2, lzy[y] =1;\n}\n\ninline void query(int x){\n\taccess(x), splay(x);\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char cc =getchar();\n\twhile(cc < '0' || cc > '9') cc =getchar();\n\twhile(cc >= '0' && cc <= '9') x = (x<<3) + (x<<1) + (48^cc), cc =getchar();\n\treturn x;\n}\n\nint main(){\n\tn =read(), m =read(); int Q =read();\n\tmemset(first, -1, sizeof(first));\n\tfor(int i =0; i < m; ++i) addedge(read(), read(), i);\n\tfor(int i =1; i <= n; ++i) if(!dfn[i]) tarjan(i);\n\tint COL2 =COL;\n\tfor(int i =0; i < (m<<1); ++i)\n\t\tif(e[i].isbge){\n\t\t\te[i^1].isbge =0;\n\t\t\t++COL2;\n\t\t\tval[COL2] =-1;\n\t\t\tlink(col[e[i].from], COL2), link(col[e[i].to], COL2);\n\t\t}\n\tfor(int i =0; i < Q; ++i){\n\t\tint x =read(), y =read();\n\t\tif(col[x] == col[y]) continue;\n\t\tupdata(col[x], col[y]);\n\t\tif(WRONG) return puts(\"No\") && 0;\n\t}\n\tfor(int i =COL+1; i <= COL2; ++i){\n\t\tquery(i);\n\t\tif(WRONG) return puts(\"No\") && 0;\n\t}\n\tputs(\"Yes\");\n}\n```\n",
        "postTime": 1589890881,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "```cpp\n\u9898\u76ee\u5927\u610f\uff1a\n\t\u7ed9\u4f60\u4e00\u4e2an\u4e2a\u70b9m\u6761\u8fb9\u7684\u65e0\u5411\u56fe\u548cq\u4e2a\u6709\u5e8f\u70b9\u5bf9\uff0c\u95ee\u662f\u5426\u53ef\u4ee5\u627e\u5230\u4e00\u79cd\u8fb9\u7684\u5b9a\u5411\u65b9\u5f0f\u4f7f\u5f97\u4efb\u610f\u4e00\u5bf9(s,t),s\u53ef\u4ee5\u5230t\n\u6570\u636e\u8303\u56f4:\n\tn,m,q<=2e5\n\u89e3\u9898\u8fc7\u7a0b\uff1a\n\t\u5176\u5b9e\u5982\u679c\u8fd9\u662f\u4e00\u9897\u6811\u7684\u8bdd\u5f88\u597d\u641e\uff0c\u628as\u5230lca(s,t) \u5411\u4e0a\u8fde\uff0clca(s,t)\u5230t\u5411\u4e0b\u8fde\u5373\u53ef(\u7136\u800c\u4e8b\u60c5\u5e76\u4e0d\u662f\u8fd9\u6837\u5b50\u7684...)\n\t\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u662f\u4e00\u5b9a\u53ef\u884c\u7684\u5462\uff1f\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u4e24\u6761\u4ee5\u4e0a\u7684\u8def\u5f84\uff0c\u90a3\u5c31\u53ef\u4ee5\u4e00\u8fb9\u5411\u524d\uff0c\u4e00\u8fb9\u5411\u540e\uff0c\u7edd\u5bf9\u53ef\u4ee5\uff0c\n\t\u4e5f\u5c31\u662f\u6c42\u53cc\u8054\u901a\u5206\u91cf\u4ee5\u5185\u662f\u4e00\u5b9a\u53ef\u4ee5\u7684\uff0c\u6240\u4ee5\u8003\u8651\u7f29\u70b9\u3002\u60ca\u5947\u7684\u53d1\u73b0\u5f97\u5230\u4e86\u4e00\u7247\u68ee\u6797\uff0c\u90a3\u4e0d\u5c31\u597d\u641e\u4e86\u561b\uff01\n\t\u7279\u5224\u5728\u4e0d\u540c\u6811\u4e0a\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u5728\u7f29\u70b9\u7684\u65f6\u5019\u66b4\u529b\u641e\u5b9a\u5c31\u884c\u3002\u5728\u540c\u4e00\u68f5\u6811\u4e0a\u53ef\u4ee5\u6811\u5256/\u6811\u4e0a\u5dee\u5206\u7ef4\u62a4\u3002\u6700\u540e\u4e00\u904ddfs\u5224\u5b9a\u6807\u8bb0\u662f\u5426\u91cd\u590d\u5c31\u884c\u4e86\n\t\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u662f\u600e\u6ca1\u6c42\u53cc\u8054\u901a\u5206\u91cf\u4e86...\u6211\u5e76\u4e0d\u4f1a\u8bf6....\n\t\uff08\u4f7f\u7528\u73b0\u573a\u5b66\u4e60\u7b97\u6cd5\u5373\u53ef\uff09\n\tupd:\u4ee3\u7801\u771f\u96be\u8c03\u554aemmmm\n\n```\n\n```cpp\n#include <cstdio>\n\n#define R register\nconst int MAXN=2e5+10;\nconst int MAXM=MAXN<<1;\n\ninline int read()\n{\n\t#define C getchar()\n\tchar a=C;int x=0,f=1;\n\tfor(;a>'9'||a<'0';a=C) if(a=='-') f=-1;\n\tfor(;a>='0'&&a<='9';a=C) x=x*10+a-'0';\n\treturn x*f;\n\t#undef C\n}\n\ninline int min(int x,int y) { return x<y?x:y;}\n\nint n,m,q;\nstruct edge\n{\n\tint fr,to,next;\n}e1[MAXM];\n\nstruct Edge\n{\n\tint to,next;\n}e2[MAXM];\nint head1[MAXN],cnt1=1;\nint head2[MAXN],cnt2=1;\n\ninline void add1(int x,int y)\n{\n\tcnt1++;\n\te1[cnt1].fr=x;\n\te1[cnt1].to=y;\n\te1[cnt1].next=head1[x];\n\thead1[x]=cnt1;\n}\n\ninline void add2(int x,int y)\n{\n\tcnt2++;\n\te2[cnt2].to=y;\n\te2[cnt2].next=head2[x];\n\thead2[x]=cnt2;\n}\n\nint dfn[MAXN],low[MAXN];\nint col[MAXN],num;\nint st[MAXN],tp;\nint vis[MAXN];\nint tot;\nint be[MAXN];\n\ninline void tarjan(int x,int fr)\n{\n\tdfn[x]=low[x]=++num;\n\tcol[x]=col[0];\n\tst[++tp]=x,vis[x]=1;\n\tfor(R int i=head1[x];i;i=e1[i].next)\n\t{\n\t\tif((i^1)==fr) continue;\n\t\tint y=e1[i].to;\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y,i);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse\n\t\t\tif(vis[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tint y=0;tot++;\n\t\twhile(y!=x)\n\t\t{\n\t\t\ty=st[tp];tp--;\n\t\t\tbe[y]=tot;vis[y]=0;\n\t\t}\n\t}\n}\n\nint dep[MAXN],fa[MAXN],top[MAXN],siz[MAXN],son[MAXN];\n\ninline void dfs1(int x,int fx)\n{\n\tdep[x]=dep[fx]+1;\n\tfa[x]=fx;\n\tsiz[x]=1;\n\tfor(R int i=head2[x];i;i=e2[i].next)\n\t{\n\t\tint y=e2[i].to;\n\t\tif(y==fx) continue;\n\t\tdfs1(y,x);\n\t\tsiz[x]+=siz[y];\n\t\tif(siz[y]>siz[son[x]]) son[x]=y;\n\t}\n}\n\ninline void dfs2(int x,int topx)\n{\n\ttop[x]=topx;\n\tif(son[x]) dfs2(son[x],topx);\n\tfor(R int i=head2[x];i;i=e2[i].next)\n\t{\n\t\tint y=e2[i].to;\n\t\tif(y==fa[x]||y==son[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\n\ninline int lca(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(dep[top[x]]>dep[top[y]])\n\t\t\tx=fa[top[x]];\n\t\telse\n\t\t\ty=fa[top[y]];\n\t}\n\treturn dep[x]<dep[y]?x:y;\n}\n\nint up[MAXN],down[MAXN];\nint tag[MAXN];\n\ninline void dfs3(int x)\n{\n\ttag[x]=1;\n\tfor(R int i=head2[x];i;i=e2[i].next)\n\t{\n\t\tint y=e2[i].to;\n\t\tif(y==fa[x]) continue;\n\t\tdfs3(y);\n\t\tup[x]+=up[y];\n\t\tdown[x]+=down[y];\n\t}\n}\n\nint main()\n{\n\tn=read();m=read();q=read();\n\tfor(R int i=1;i<=m;i++)\n\t{\n\t\tint x=read();int y=read();\n\t\tadd1(x,y);add1(y,x);\n\t}\n\tfor(R int i=1;i<=n;i++)\n\t\tif(!dfn[i])\n\t\t{\n\t\t\tcol[0]++;\n\t\t\ttarjan(i,0);\n\t\t}\n\tfor(R int i=2;i<=cnt1;i+=2)\n\t{\n\t\tint x=e1[i].fr;\n\t\tint y=e1[i].to;\n\t\tif(be[x]==be[y]) continue;\n\t\tadd2(be[x],be[y]);\n\t\tadd2(be[y],be[x]);\n\t}\n\tfor(R int i=1;i<=n;i++)\n\t\tif(!dep[i])\n\t\t{\n\t\t\tdfs1(i,0);\n\t\t\tdfs2(i,i);\n\t\t}\n\tfor(R int i=1;i<=q;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tif(col[x]!=col[y])\n\t\t{\n\t\t\tprintf(\"No\\n\");return 0;\n\t\t}\n\t\tx=be[x],y=be[y];\n\t\tint LCA=lca(x,y);\n\t\tup[x]++;up[LCA]--;\n\t\tdown[y]++;down[LCA]--;\n\t}\n\tfor(R int i=1;i<=n;i++)\n\t\tif(!tag[i]) dfs3(i);\n\tfor(R int i=1;i<=n;i++)\n\t\tif(up[i]&&down[i])\n\t\t{\n\t\t\tprintf(\"No\\n\");\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"Yes\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1580775770,
        "uid": 139012,
        "name": "______OvO______",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "### \u601d\u8def\uff1a\n\n$\\quad$\u5148\u7f29\u70b9(\u627e\u8fb9\u53cc)\uff0c\u6ce8\u610f\u4e00\u6761\u8fb9\u53ea\u80fd\u8d70\u4e00\u6b21\uff0c\u7f29\u5b8c\u70b9\u540e\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u6811(\u6216\u68ee\u6797\uff0c\u53ef\u80fd\u6709\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\uff0c\u6ce8\u610f\u8981\u989d\u5916\u8bb0\u5f55\u662f\u5426\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d)\u3002\n\n$\\quad$\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee $x$ -> $y$ \uff0c\u82e5\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d(\u8fb9\u53cc)\u4e0d\u8003\u8651\uff0c\u76f4\u63a5\u8df3\u8fc7\uff0c\u82e5\u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5757(\u6811)\u4e2d\uff0c\u76f4\u63a5\u8f93\u51fa $\"No\"$ \uff0c\u5426\u5219\u5bf9 $x$ \u5230 $y$ \u7684\u8def\u5f84\u4fee\u6539\uff0c\u4ecex\u5411\u4e0a\u8df3\u662f\u4fee\u6539 $up$ \u6570\u7ec4\uff0c\u4ece $y$ \u5411\u4e0a\u8df3\u65f6\u4fee\u6539 $down$ \u6570\u7ec4\uff0c\u5728\u540c\u4e00\u6761\u94fe\u4e0a\u65f6\u5224\u65ad\u6df1\u5ea6\uff0c\u6ce8\u610f\u65b9\u5411\u662f\u4ece $x$ \u5230 $y$ \u7684\u65b9\u5411\uff0c\u4fee\u6539\u7684\u662f\u8fb9\u6743\u6700\u540e\u4e00\u6b21\u8df3\u8981 $+1$ \uff0c\u6700\u540e\u5224\u65ad\u6bcf\u4e00\u6761\u8fb9\u662f\u5426\u53ea\u6709\u5411\u4e0a\u8df3\u6216\u5411\u4e0b\u8df3(\u8fb9\u7684\u65b9\u5411)\uff0c\u82e5\u4e24\u4e2a\u90fd\u6709\u5c31\u8f93\u51fa $\"No\"$ \uff0c\u6709\u77db\u76fe\uff0c\u6700\u540e\u8f93\u51fa $\"Yes\"$ \u5373\u53ef\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a$Tarjan$ \u7f29\u70b9 $+$ \u6811\u94fe\u5256\u5206 $+$ \u7ebf\u6bb5\u6811\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<queue>\n#include<stack>\n#include<cstring>\nusing namespace std;\n#define re register int\n#define int long long\n#define LL long long\n#define il inline\n#define next nee\n#define inf 1e18\nil int read()\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nil void print(int x)\n{\n  if(x<0)putchar('-'),x=-x;\n  if(x/10)print(x/10);\n  putchar(x%10+'0');\n}\nconst int N=2e5+5;\nint n,m,q1,next[N<<1],go[N<<1],u[N],v[N],head[N],tot,dfn[N],top[N];\nint size[N],cnt,c[N],dep[N],low[N],d[N],father[N],son[N],seg[N];\nbool b[N<<1],flag,up[N<<2],down[N<<2];\nstack<int>q;\nil void Add(int x,int y)\n{\n  next[++tot]=head[x];\n  head[x]=tot;\n  go[tot]=y;\n}\nil void Tarjan(int x,int fa)//\u7f29\u70b9\n{\n  dfn[x]=low[x]=++cnt;d[x]=fa;\n  q.push(x);\n  for(re i=head[x];i;i=next[i])\n    {\n      if(b[i]||b[i^1])continue;b[i]=1;\n      int y=go[i];\n      if(!dfn[y])Tarjan(y,fa),low[x]=min(low[x],low[y]);\n      else if(!c[y])low[x]=min(low[x],dfn[y]);\n    }\n  if(dfn[x]==low[x])\n    {\n      c[x]=++c[0];\n      while(q.top()!=x)\n\t{\n\t  c[q.top()]=c[0];\n\t  q.pop();\n\t}\n      q.pop();\n    }\n}\nil void dfs1(int x,int fa)\n{\n  dep[x]=dep[fa]+1;father[x]=fa;size[x]=1;\n  for(re i=head[x];i;i=next[i])\n    {\n      int y=go[i];\n      if(y==fa)continue;\n      dfs1(y,x);\n      size[x]+=size[y];\n      if(size[y]>size[son[x]])son[x]=y;\n    }\n}\nil void dfs2(int x,int topf)\n{\n  top[x]=topf;seg[x]=++seg[0];\n  if(!son[x])return;\n  dfs2(son[x],topf);\n  for(re i=head[x];i;i=next[i])\n    {\n      int y=go[i];\n      if(top[y])continue;\n      dfs2(y,y);\n    }\n}\nil void pushdown(int k,int l,int r,int mid)\n{\n  if(down[k])down[k<<1]=down[k<<1|1]=1;\n  if(up[k])up[k<<1]=up[k<<1|1]=1;\n}\nil void change1(int k,int l,int r,int x,int y,int z)\n{\n  if(x<=l&&y>=r){if(z==1)down[k]=1;else up[k]=1;return;}\n  int mid=l+r>>1;\n  if(down[k]||up[k])pushdown(k,l,r,mid);\n  if(x<=mid)change1(k<<1,l,mid,x,y,z);\n  if(y>mid)change1(k<<1|1,mid+1,r,x,y,z);\n}\nil void change(int x,int y)\n{\n  int fx=top[x],fy=top[y];\n  while(fx!=fy)\n    {\n      if(dep[fx]>dep[fy]){\n\tchange1(1,1,c[0],seg[fx],seg[x],2);\n\tx=father[fx];fx=top[x];\n      }\n      else {\n\tchange1(1,1,c[0],seg[fy],seg[y],1);\n\ty=father[fy];fy=top[y];\n      }\n    }\n  if(seg[y]+1<=seg[x])change1(1,1,c[0],seg[y]+1,seg[x],2);\n  else if(seg[x]+1<=seg[y])change1(1,1,c[0],seg[x]+1,seg[y],1);\n}\nil bool check(int k,int l,int r)//\u6700\u540e\u68c0\u67e5\u6bcf\u4e00\u6761\u8fb9\n{\n  if(l==r){if(down[k]&&up[k])return 0;else return 1;}\n  int mid=l+r>>1;\n  if(down[k]||up[k])pushdown(k,l,r,mid);\n  return min(check(k<<1,l,mid),check(k<<1|1,mid+1,r));\n}\nsigned main()\n{\n  n=read();m=read();q1=read();tot=1;\n  for(re i=1;i<=m;i++)\n    {\n      re x=read(),y=read();\n      u[i]=x;v[i]=y;\n      Add(x,y);Add(y,x);\n    }\n  for(re i=1;i<=n;i++)\n  if(!dfn[i])Tarjan(i,i);//\u7f29\u70b9\n  memset(next,0,sizeof(next));\n  memset(head,0,sizeof(head));\n  memset(go,0,sizeof(go));\n  tot=0;\n  for(re i=1;i<=m;i++)\n    {\n      int x=c[u[i]],y=c[v[i]];\n      if(x!=y)Add(x,y),Add(y,x);\n    }\n  for(re i=1;i<=n;i++)//\u6811\u5256\u9884\u5904\u7406\n    if(!dep[i])dfs1(i,0),dfs2(i,i);//\u53ef\u80fd\u6709\u591a\u68f5\u6811\n  for(re i=1;i<=q1;i++)\n    {\n      int u1=read(),v1=read();\n      if(d[u1]!=d[v1]){puts(\"No\");return 0;}//\u662f\u5426\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\n      if(c[u1]!=c[v1])change(c[u1],c[v1]);//\u82e5\u4e0d\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5c31\u4fee\u6539\n      }\n  if(check(1,1,c[0]))puts(\"Yes\");\n  else puts(\"No\");\n  return 0;\n}\n```",
        "postTime": 1605536064,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "> [CF555E Case of Computer Network](https://codeforc.es/contest/555/problem/E)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u3002\n- \u7ed9\u5b9a $q$ \u7ec4\u6709\u5411\u70b9\u5bf9 $(s, t)$\u3002\n- \u8be2\u95ee\u662f\u5426\u5b58\u5728**\u4f7f\u5f97\u6240\u6709 $s$ \u90fd\u80fd\u5230\u8fbe $t$** \u7684\u65e0\u5411\u56fe\u4e2d\u6bcf\u6761\u8fb9\u7684\u5b9a\u5411\u65b9\u6848\u3002\n- $n,m,q \\le 2 \\times 10^5$\u3002\n\n## \u9898\u89e3\n\n\u5148\u6c42\u8fb9\u53cc\uff0c\u7f29\u70b9\u53d8\u6210\u68ee\u6797\u3002\n\n\u5224\u5b9a\u65f6\u5148\u6c42 lca\uff0c\u6811\u4e0a\u5dee\u5206\u4e00\u4e0b\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n \\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 2e5 + 7;\nint n, m, q;\nint h[N], e[N<<1], t[N<<1], p = 1;\nint dfn[N], low[N], num;\nint b[N<<1], c[N], k;\nint hc[N], ec[N<<1], tc[N<<1], pc = 1;\nint v[N], w, f[N][20], d[N], g1[N], g2[N];\n\ninline void add(int x, int y, int z = 1) {\n\te[++p] = y;\n\tt[p] = h[x];\n\th[x] = p;\n\tif (z) add(y, x, 0);\n}\n\nvoid tarjan(int x, int f) {\n\tdfn[x] = low[x] = ++num;\n\tfor (int i = h[x]; i; i = t[i]) {\n\t\tif (i == f) continue;\n\t\tint y = e[i];\n\t\tif (dfn[y]) low[x] = min(low[x], dfn[y]);\n\t\telse {\n\t\t\ttarjan(y, i ^ 1), low[x] = min(low[x], low[y]);\n\t\t\tif (low[y] > dfn[x]) b[i] = b[i^1] = 1;\n\t\t}\n\t}\n}\n\nvoid dfs(int x) {\n\tc[x] = k;\n\tfor (int i = h[x]; i; i = t[i]) {\n\t\tif (b[i]) continue;\n\t\tint y = e[i];\n\t\tif (c[y]) continue;\n\t\tdfs(y);\n\t}\n}\n\ninline void addc(int x, int y, int z = 1) {\n\tec[++pc] = y;\n\ttc[pc] = hc[x];\n\thc[x] = pc;\n\tif (z) addc(y, x, 0);\n}\n\nvoid dfsc(int x) {\n\tv[x] = w;\n\tfor (int i = hc[x]; i; i = tc[i]) {\n\t\tint y = ec[i];\n\t\tif (y == f[x][0]) continue;\n\t\tf[y][0] = x, d[y] = d[x] + 1;\n\t\tfor (int j = 0; f[y][j]; j++)\n\t\t\tf[y][j+1] = f[f[y][j]][j];\n\t\tdfsc(y);\n\t}\n}\n\ninline int lca(int x, int y) {\n\tif (d[x] > d[y]) swap(x, y);\n\tfor (int i = 19; ~i; i--)\n\t\tif (d[f[y][i]] >= d[x]) y = f[y][i];\n\tif (x == y) return x;\n\tfor (int i = 19; ~i; i--)\n\t\tif (f[x][i] ^ f[y][i]) x = f[x][i], y = f[y][i];\n\treturn f[x][0];\n}\n\nbool dfspd(int x) {\n\tfor (int i = hc[x]; i; i = tc[i]) {\n\t\tint y = ec[i];\n\t\tif (y == f[x][0]) continue;\n\t\tif (!dfspd(y) || (g1[y] && g2[y])) return 0;\n\t\tg1[x] += g1[y], g2[x] += g2[y];\n\t}\n\treturn 1;\n}\n\nint main() {\n\trd(n), rd(m), rd(q);\n\tfor (int i = 1, x, y; i <= m; i++)\n\t\trd(x), rd(y), add(x, y);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i]) tarjan(i, 0);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!c[i]) ++k, dfs(i);\n\tfor (int x = 1; x <= n; x++)\n\t\tfor (int i = h[x]; i; i = t[i]) {\n\t\t\tint y = e[i];\n\t\t\tif (c[x] >= c[y]) continue;\n\t\t\taddc(c[x], c[y]);\n\t\t}\n\tfor (int i = 1; i <= k; i++)\n\t\tif (!v[i]) ++w, d[i] = 1, dfsc(i);\n\tfor (int i = 1, x, y; i <= q; i++) {\n\t\trd(x), rd(y), x = c[x], y = c[y];\n\t\tif (x == y) continue;\n\t\tif (v[x] != v[y]) return prints(\"No\"), 0;\n\t\tint z = lca(x, y);\n\t\t++g1[x], --g1[z], ++g2[y], --g2[z];\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (d[i] == 1 && !dfspd(i)) return prints(\"No\"), 0;\n\tprints(\"Yes\");\n\treturn 0;\n}\n```",
        "postTime": 1575229009,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "### \u9898\u76ee\u7ffb\u8bd1\n\u7ed9\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u4e0d\u4fdd\u8bc1\u8054\u901a\u3002  \n\u4e4b\u540e\u7ed9\u51fa$q$\u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u5f62\u5982$u,v$\u3002  \n\n\u4f60\u9700\u8981\u5c06\u6bcf\u6761\u8fb9\u53d8\u4e3a\u6709\u5411\u8fb9\uff0c\u7136\u540e\u7ed9\u51fa\u662f\u5426\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97q\u7ec4\u8be2\u95ee\u7684u\u90fd\u80fd\u5230\u8fbev\u3002\n\n### \u9898\u89e3\n\u867d\u7136\u5199\u7684\u5f88\u957f\uff0c\u4f46\u662f\u786e\u5b9e\u662f\u4e00\u9053\u6bd4\u8f83\u677f\u5b50\u7684\u9898\u3002\n\n---\n\n#### \u524d\u7f6e\u77e5\u8bc6 - \u8fb9\u53cc\u8054\u901a\u5206\u91cf\n\u8fb9\u53cc\u8054\u901a\u56fe\u662f\u6307\u4e00\u4e2a\u6ca1\u6709\u5272\u8fb9\u7684\u56fe\u3002  \n\u4e8e\u662f\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u5c31\u662f\u539f\u56fe\u4e2d\u7684\u67d0\u4e2a\u6781\u5927\u8fb9\u53cc\u8054\u901a\u5b50\u56fe\u3002\n\n\u5982\u679c\u9700\u8981\u6c42\u51fa\u4e00\u5f20\u56fe\u7684\u8fb9\u53cc\uff0c\u53ef\u4ee5\u5148\u6c42\u51fa\u6240\u6709\u7684\u5272\u8fb9\uff0c\u7136\u540e\u5269\u4e0b\u7684\u70b9\u5404\u81ea\u5f62\u6210\u8054\u901a\u5757\u5373\u662f\u8fb9\u53cc\u3002\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528tarjan\u7b97\u6cd5\u53bb\u76f4\u63a5\u6c42\u8fb9\u53cc\uff0c\u5177\u4f53\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003\u4ee3\u7801\u3002\n\n\u8fb9\u53cc\u7684\u4e00\u4e2a\u5341\u5206\u4f18\u826f\u7684\u6027\u8d28\u662f\u5176\u4e2d\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u81f3\u5c11\u6709\u4e24\u6761\u4e0d\u540c\u7684\u8def\u5f84\u3002\n\n---\n\n\u8003\u8651\u4e0a\u8ff0\u6240\u8bf4\u7684\u8fb9\u53cc\u6027\u8d28\uff0c\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u6709\u4e24\u6761\u4e0d\u540c\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u4e0d\u59a8\u5c06\u4ed6\u4eec\u5206\u522b\u8bbe\u4e3a\u6b63\u5411\u8fb9\u4e0e\u53cd\u5411\u8fb9\uff0c\u4e8e\u662f\u8fd9\u4e2a\u8fb9\u53cc\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\u3002\n\n\u4e8e\u662f\u6211\u4eec\u77e5\u9053\u5728\u8fb9\u53cc\u4e2d\u4e00\u5b9a\u5b58\u5728\u6ee1\u8db3\u9898\u610f\u7684\u65b9\u6848\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u6240\u6709\u7684\u8fb9\u53cc\u7f29\u70b9\uff0c\u4e8e\u662f\u5f97\u5230\u4e86\u4e00\u7247\u68ee\u6797\u3002\n\n\u5728\u6811\u4e0a\u5f88\u5bb9\u6613\u6ee1\u8db3\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u8be2\u95ee\uff0c\u53ea\u9700\u8981\u5c06$u \\to lca$\u8bbe\u4e3a\u6b63\u5411\u8fb9\uff0c\u5c06$v\\to lca$\u8bbe\u4e3a\u53cd\u5411\u8fb9\u5373\u53ef\u3002\n\n\u6211\u4eec\u8003\u8651\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u65e0\u6cd5\u6ee1\u8db3\u67d0\u7ec4\u8be2\u95ee\n- \u4e0d\u8fde\u901a\u3002 \u4e24\u4e2a\u70b9\u5728\u4e0d\u540c\u7684\u6811\u4e2d\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u68f5\u6811\u5373\u53ef\u89e3\u51b3\u3002\n- \u4e0e\u5176\u4ed6\u8be2\u95ee\u51b2\u7a81\u3002 \u4e24\u4e2a\u70b9\u5230lca\u7684\u8def\u5f84\u4e0a\u7684\u67d0\u6761\u8fb9\u4e0e\u5c06\u8981\u8bbe\u7f6e\u7684\u65b9\u5411\u4e0d\u540c\u3002\n\n\u8003\u8651\u5230\u5728\u8bbe\u7f6e\u8fb9\u7684\u65b9\u5411\u7684\u65f6\u5019\u662f\u8bbe\u7f6e\u7684\u6811\u4e0a\u4e00\u6761\u94fe\u7684\u6240\u6709\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fb9\u7684\u6807\u8bb0\u8f6c\u79fb\u5230\u70b9\u4e0a\u540e\u91c7\u7528\u6811\u4e0a\u5dee\u5206\u7684\u65b9\u6cd5\u7ef4\u62a4\u6807\u8bb0\u3002 \n\n\u5177\u4f53\u800c\u8a00\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u6807\u8bb0$u\\to v$\uff0c\u6211\u4eec\u53ea\u9700\u8981`tag[u]++;tag[v]--;`\uff0c\u4e4b\u540e\u53ea\u9700\u8981dfs\u4e00\u904d\uff0c\u4ece\u53f6\u5b50\u8282\u70b9\u9012\u5f52\u5411\u524d\u7d2f\u52a0\u6807\u8bb0\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b9\u4e0a\u83b7\u5f97\u7684\u6807\u8bb0\u3002\n\n\u5982\u679c\u67d0\u4e2a\u70b9\u6709\u4e24\u79cd\u6807\u8bb0\uff08\u6b63\u5411\u8fb9\u548c\u53cd\u5411\u8fb9\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u77e5\u9053\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u8fb9\u51fa\u73b0\u4e86\u51b2\u7a81\uff0c\u4e8e\u662f\u539f\u95ee\u9898\u65e0\u89e3\u3002  \n\n\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\u5148\u5224\u662f\u5426\u8fde\u901a\uff0c\u7136\u540e\u6253\u6807\u8bb0\uff0c\u6700\u540edfs\u4e00\u904d\u5224\u65ad\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n  \n\u7136\u540e\u4f60\u53d1\u73b0\u4f60\u81f3\u5c11\u9700\u8981\u5199\u4e09\u4e2a\u677f\u5b50\uff0c\u4e5f\u5c31\u662f\u7f29\u70b9\uff0clca\u548c\u6811\u4e0a\u5dee\u5206\uff0c\u8fd9\u5c31\u5bfc\u81f4\u8fd9\u9053\u9898\u7684\u4ee3\u7801\u6bd4\u8f83\u957f\u3002\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\ntypedef int int_t;\n\nint_t read(){\n    int_t x = 0,w = 1;char ch = 0;\n    while(!isdigit(ch)) {ch = getchar(); if(ch == '-') w = -1;}\n    while(isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n    return x * w;\n}\n\nconst int_t maxn = 200010;\n\nstruct E{\n    int_t to;\n    E* nxt;\n    E* rev;\n    E(int_t to,E* nxt):to(to),nxt(nxt){}\n};\n\nE* head[maxn];\nE* nhead[maxn];\nint_t col[maxn],dfn[maxn],low[maxn],cols,son[maxn],fa[maxn],siz[maxn],dep[maxn],top[maxn],tag1[maxn],tag2[maxn],bel[maxn];\nbool instk[maxn],vis[maxn];\n\nvoid tarjan(int_t rt,E* frm,int_t from){\n    static stack<int_t> stk;\n    static int_t cnt = 0;\n    bel[rt] = from; instk[rt] = true; dfn[rt] = low[rt] = ++ cnt;\n    stk.push(rt);\n    for(E* e = head[rt];e;e=e -> nxt){\n        if(e == frm) continue;\n        if(!dfn[e -> to]) tarjan(e -> to,e -> rev,from),low[rt] = min(low[rt],low[e -> to]);\n        else if(instk[e -> to]) low[rt] = min(low[rt],dfn[e -> to]);\n    }\n    if(dfn[rt] == low[rt]){\n        ++cols;\n        while(true){\n            int_t r = stk.top();stk.pop();\n            col[r] = cols;\n            if(r == rt) break;\n        }\n    }\n}\n\nvoid dfs1(int_t rt){\n    siz[rt] = vis[rt] = 1;\n    for(E* e = nhead[rt];e;e = e -> nxt){\n        if(vis[e -> to]) continue;\n        fa[e -> to] = rt;\n        dep[e -> to] = dep[rt] + 1;\n        dfs1(e -> to);\n        siz[rt] += siz[e -> to];\n        if(siz[e -> to] > siz[son[rt]]) son[rt] = e -> to;\n    }\n}\n\nvoid dfs2(int_t rt,int_t top){\n    ::top[rt] = top; vis[rt] = true;\n    if(son[rt]) dfs2(son[rt],top);\n    for(E* e = nhead[rt];e;e = e -> nxt) if(!vis[e -> to]) dfs2(e -> to,e -> to);\n}\n\nint_t LCA(int_t u,int_t v){\n    while(top[u] != top[v])\n        if(dep[top[u]] > dep[top[v]]) u = fa[top[u]];\n        else v = fa[top[v]];\n    return dep[u] > dep[v] ? v : u;\n}\n\nbool dfs(int_t rt){\n    vis[rt] = true;\n    for(E* e = nhead[rt];e;e = e -> nxt){\n        if(vis[e -> to]) continue;\n        if(!dfs(e -> to)) return false;\n        tag1[rt] += tag1[e -> to];\n        tag2[rt] += tag2[e -> to];\n    }\n    return !tag1[rt] || !tag2[rt];\n}\n\nint main(){\n    int_t n = read(),m = read(),q = read();\n    while(m--){\n        int_t u = read(),v = read();\n        head[u] = new E(v,head[u]); \n        head[v] = new E(u,head[v]);\n        head[u] -> rev = head[v];\n        head[v] -> rev = head[u];\n    }\n    for(int_t i=1;i<=n;i++) if(!dfn[i]) tarjan(i,0,i);\n    for(int_t i=1;i<=n;i++)\n        for(E* e = head[i];e;e = e -> nxt)  \n            if(col[i] != col[e -> to])\n                nhead[col[i]] = new E(col[e -> to],nhead[col[i]]), nhead[col[e -> to]] = new E(col[i],nhead[col[e -> to]]);\n    for(int_t i=1;i<=cols;i++) if(!siz[i]) dfs1(i);\n    memset(vis,0,sizeof vis);\n    for(int_t i=1;i<=cols;i++) if(i==bel[i]) dfs2(i,i);\n    while(q--){\n        int_t s = read(),t = read();\n        if(bel[s] != bel[t]){puts(\"No\");return 0;}\n        s = col[s],t = col[t];\n        if(s == t) continue;\n        int_t lca = LCA(s,t);\n        tag1[s]++;tag2[t]++;tag1[lca]--;tag2[lca]--;\n    }\n    memset(vis,0,sizeof(vis));\n    for(int_t i=1;i<=cols;i++) if(bel[i] == i) if(!dfs(i)){puts(\"No\");return 0;}\n    puts(\"Yes\");\n}\n```",
        "postTime": 1569208097,
        "uid": 74020,
        "name": "Rainy_chen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "\u9996\u5148\u7f29\u70b9\u6210\u8fb9\u53cc\u68ee\u6797\uff0c\u5b9a\u6839\uff0c\u6bcf\u6761\u8def\u5f84\u62c6\u6210\u5411\u4e0a\u548c\u5411\u4e0b\u4e24\u90e8\u5206\uff0c\u5982\u679c\u6709\u4e00\u6761\u8fb9\u65e2\u8981\u5411\u4e0a\u53c8\u8981\u5411\u4e0b\uff0c\u90a3\u5c31\u65e0\u89e3\u4e86\u3002  \n\n\u8fd9\u4e2a\u7528\u6811\u4e0a\u5dee\u5206\u5b9e\u73b0\uff0c\u7ef4\u62a4\u70b9\u4fe1\u606f\u5bf9\u5e94\u5176\u7236\u8fb9\u4fe1\u606f\u3002\n\n\u8fd9\u91cc\u7b80\u5355\u5730\u8bb2\u4e00\u4e0b\u5982\u679c\u8981\u6c42\u5177\u4f53\u65b9\u6848\u7684\u505a\u6cd5\u3002   \n\u5bf9\u4e8e\u5272\u8fb9\uff0c\u770b\u8986\u76d6\u8fd9\u6761\u8fb9\u7684\u8def\u5f84\u662f\u5411\u4e0a\u8fd8\u662f\u5411\u4e0b\u7684\u5373\u53ef\u3002\n\n\u8fb9\u53cc\u7ecf\u8fc7\u5b9a\u5411\u53ef\u4ee5\u6210\u4e3a\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002  \n\u65e0\u5411\u56fe\u7684 dfs \u6811\u53ea\u6709\u8fd4\u7956\u8fb9\u548c\u6811\u8fb9\uff0c\u6ca1\u6709\u6a2a\u53c9\u8fb9\u3002  \n\u628a\u8fb9\u53cc\u5355\u72ec\u62ff\u51fa\u6765\u5efa\u4e2a dfs \u6811\u7684\u8bdd\uff0c\u6811\u8fb9\u5411\u513f\u5b50\uff0c\u8fd4\u7956\u8fb9\u5411\u7956\u5148\u8fde\u5373\u53ef\u3002  \n\u4e00\u8def\u5f80\u4e0b\u8d70\u5230\u53f6\u5b50\u4e4b\u540e\uff0c\u4e00\u5b9a\u4f1a\u5b58\u5728\u4e00\u6761\u8def\u80fd\u591f\u56de\u5230\u6839\uff0c\u5426\u5219\u8fd9\u4e2a\u53f6\u5b50\u5c31\u4e0d\u4f1a\u5728\u8fb9\u53cc\u91cc\u9762\u4e86\uff08\u7531\u4e8e\u6ca1\u6709\u6a2a\u53c9\u8fb9\uff0c\u5b83\u80fd\u8d70\u5230\u7684\u6240\u6709\u70b9\u662f\u4e00\u68f5\u5b8c\u6574\u7684\u5b50\u6811\uff0c\u4e14\u8be5\u5b50\u6811\u6839\u4e0d\u662f\u6811\u7684\u6839\uff09\uff0c\u5230\u6839\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f80\u4e0b\u8d70\u5230\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4e86\u3002\n\n\u597d\u5427\uff0c\u4ee3\u7801\u5e76\u6ca1\u6709\u5199\u6c42\u65b9\u6848\u3002  \n\n\u6ce8\u610f\u56fe\u4e0d\u8fde\u901a\u3002\u3002\n\n```cpp\nusing namespace std;\ntypedef long long LL;\nconst LL N = 400005;\n\nLL ec = 1,to[N << 1],nxt[N << 1],bri[N << 1],hed[N] = {0};\nvoid add_edge(LL f,LL t){\n\t++ ec; to[ec] = t; nxt[ec] = hed[f]; hed[f] = ec;\n}\n\nLL dfn[N] = {0},dfc = 0,low[N],col[N];\nLL dep[N],fa[25][N];\n\nvoid tarjan(LL u,LL fe){\n\tdfn[u] = low[u] = ++ dfc;\n\tfor(LL i = hed[u];i;i = nxt[i]){\n\t\tLL v = to[i];\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v,i);\n\t\t\tlow[u] = min(low[u],low[v]);\n\t\t\tif(low[v] > dfn[u]) bri[i] = bri[i ^ 1] = 1;\n\t\t}\n\t\telse if(i != (fe ^ 1)) low[u] = min(low[u],dfn[v]);\n\t}\n}\n\nvoid dfs_dcc(LL u,LL id){\n\tcol[u] = id;\n\tfor(LL i = hed[u];i;i = nxt[i]){\n\t\tLL v = to[i];\n\t\tif(bri[i] || col[v]) continue;\n\t\tdfs_dcc(v,id);\n\t}\n}\n\nLL u[N << 1],v[N << 1],n,m,q,cco = 0;\nLL val[2][N];\nvoid rebuild(){\n\tLL ec2 = ec;\n\tec = 0; memset(hed,0,sizeof(hed));\n\tfor(LL i = 1;i <= ec2;i ++){\n\t\tif(col[u[i]] == col[v[i]]) continue;\n\t\tadd_edge(col[u[i]],col[v[i]]);\n\t\tadd_edge(col[v[i]],col[u[i]]);\n\t}\n}\n\nLL com[N],rt[N],ccm = 0;\nvoid dfs(LL u,LL f,LL id){\n\tfa[0][u] = f;\n\tdep[u] = dep[f] + 1;\n\tcom[u] = id;\n\tfor(LL i = hed[u];i;i = nxt[i]){\n\t\tLL v = to[i];\n\t\tif(v == f) continue;\n\t\tdfs(v,u,id);\n\t}\n}\n\nvoid init_lca(){\n\tfor(LL i = 1;i <= 20;i ++){\n\t\tfor(LL u = 1;u <= cco;u ++){\n\t\t\tfa[i][u] = fa[i - 1][fa[i - 1][u]];\n\t\t}\n\t}\n}\n\nLL get_lca(LL x,LL y){\n\tif(dep[x] < dep[y]) swap(x,y);\n\tfor(LL i = 20;i >= 0;i --) if(fa[i][x] && dep[fa[i][x]] >= dep[y]) x = fa[i][x];\n\tif(x == y) return x;\n\tfor(LL i = 20;i >= 0;i --){\n\t\tif(fa[i][x] == fa[i][y]) continue;\n\t\tx = fa[i][x]; y = fa[i][y];\n\t}\n\treturn fa[0][x];\n}\n\nvoid modify(LL x,LL y,LL v){\n\tif(dep[x] < dep[y]) swap(x,y);\n\tval[v][x] ++; val[v][y] --;\n}\n\nvoid dfs_sum(LL u,LL f){\n\tfor(LL i = hed[u];i;i = nxt[i]){\n\t\tLL v = to[i];\n\t\tif(v == f) continue;\n\t\tdfs_sum(v,u);\n\t\tval[0][u] += val[0][v];\n\t\tval[1][u] += val[1][v];\n\t}\n}\n\nLL query(){\n\tfor(LL i = 1;i <= ccm;i ++) dfs_sum(rt[i],0);\n\tfor(LL i = 1;i <= cco;i ++) if(val[0][i] && val[1][i]) return 0;\n\treturn 1;\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin >> n >> m >> q;\n\tfor(LL i = 1;i <= m;i ++){\n\t\tcin >> u[i] >> v[i];\n\t\tadd_edge(u[i],v[i]);\n\t\tadd_edge(v[i],u[i]);\n\t}\n\tfor(LL i = 1;i <= n;i ++) if(!dfn[i]) tarjan(i,0);\n\tcco = 0;\n\tfor(LL i = 1;i <= n;i ++){\n\t\tif(col[i]) continue;\n\t\tcco ++; dfs_dcc(i,cco);\n\t}\n\trebuild();\n\tfor(LL i = 1;i <= cco;i ++){\n\t\tif(com[i]) continue;\n\t\tccm ++; rt[ccm] = i; dfs(i,0,ccm);\n\t}\n\tinit_lca();\n\twhile(q --){\n\t\tcin >> u[0] >> v[0];\n\t\tu[0] = col[u[0]]; v[0] = col[v[0]];\n\t\tif(com[u[0]] != com[v[0]]){\n\t\t\tcout << \"No\" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tLL lca = get_lca(u[0],v[0]);\n\t\tmodify(u[0],lca,0); modify(lca,v[0],1);\n\t}\n\tcout << (query() ? \"Yes\" : \"No\") << endl;\n\treturn 0;\n}\n```",
        "postTime": 1591779036,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u4e00\u5b9a\u5408\u6cd5\uff0c\u8fd9\u6837\u6211\u4eec\u8003\u8651\u7f29\u70b9\uff0c\u5728\u65e0\u5411\u56fe\u4e0a\u7c7b\u4f3c\u6709\u5411\u56fe\u8dd1$Tarjan$\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u68ee\u6797\uff0c\u9996\u5148\u5224\u65ad\u4e0d\u5728\u540c\u4e00\u9897\u6811\u5c31\u4e00\u5b9a\u4e0d\u5408\u6cd5\uff0c\u63a5\u7740\u8003\u8651\u5728\u540c\u4e00\u68f5\u6811\u7684\u4e24\u4e2a\u70b9\uff0c\u6211\u4eec\u6309\u7167\u9898\u610f\u5c06$u$\u5230$lca$\u8bbe\u4e3a\u6b63\u5411\u8fb9\uff0c$lca$\u5230$v$\u8bbe\u4e3a\u53cd\u5411\u8fb9\uff0c\u6811\u4e0a\u5dee\u5206\u5b9e\u73b0\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nconst int N=2e5+5;\n\nstruct EDGE\n{\n\tint fr,to,nxt;\n};\n\nint n,m,q,cnt,col_cnt,num,top,id;\nbool flag=true;\nint head[N],dfn[N],low[N],stk[N],col[N];\nint up[N],dn[N],anc[N],f[N][25],bel[N],dep[N];\nbool ins[N],vis[N];\nEDGE e[N*2];\nvc<int>t[N];\n\nvoid add(int x,int y)\n{\n\te[++cnt].to=y;\n\te[cnt].fr=x;\n\te[cnt].nxt=head[x];\n\thead[x]=cnt;\n}\nvoid link(int x,int y)\n{\n\tadd(x,y),add(y,x);\n}\nvoid Tarjan(int x,int fa)\n{\n\tcol[x]=col_cnt;\n\tdfn[x]=low[x]=++id;\n\tstk[++top]=x,ins[x]=true;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(i==fa) continue;\n\t\tif(!dfn[v]) Tarjan(v,i^1),low[x]=min(low[x],low[v]);\n\t\telse if(ins[v]) low[x]=min(low[x],dfn[v]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\t++num;\n\t\twhile(stk[top+1]!=x)\n\t\t{\n\t\t\tbel[stk[top]]=num;\n\t\t\tins[stk[top]]=false;\n\t\t\t--top;\n\t\t}\n\t}\n}\nvoid dfs(int x,int fa,int d)\n{\n\tanc[x]=fa,f[x][0]=fa,dep[x]=d;\n\tfor(int i=1;i<=20;++i) f[x][i]=f[f[x][i-1]][i-1];\n\tfor(auto v:t[x])\n\t{\n\t\tif(v==fa) continue;\n\t\tdfs(v,x,d+1);\n\t}\n}\nint lca(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=20;i>=0;--i) if(dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;--i) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nvoid check(int x)\n{\n\tvis[x]=true;\n\tfor(auto v:t[x])\n\t{\n\t\tif(v==anc[x]) continue;\n\t\tcheck(v);\n\t\tup[x]+=up[v],dn[x]+=dn[v];\n\t}\n\tif(up[x]&&dn[x]) flag=false;\n}\nint main()\n{\n\tgi(n),gi(m),gi(q),cnt=1;\n\tfor(int i=1,x,y;i<=m;++i) gi(x),gi(y),link(x,y);\n\tfor(int i=1;i<=n;++i) if(!dfn[i]) ++col_cnt,Tarjan(i,0);\n\tfor(int i=2,x,y;i<=cnt;i+=2)\n\t{\n\t\tx=e[i].fr,y=e[i].to;\n\t\tif(bel[x]==bel[y]) continue;\n\t\tt[bel[x]].pub(bel[y]),t[bel[y]].pub(bel[x]);\n\t}\n\tfor(int i=1;i<=num;++i) if(!dep[i]) dfs(i,0,1);\n\tfor(int i=1,x,y;i<=q;++i)\n\t{\n\t\tgi(x),gi(y);\n\t\tif(col[x]!=col[y]) flag=false;\n\t\tif(!flag) break;\n\t\tx=bel[x],y=bel[y];\n\t\tint l=lca(x,y);\n\t\t++up[x],--up[l];\n\t\t++dn[y],--dn[l];\n\t}\n\tfor(int i=1;i<=num;++i) if(!vis[i]) check(i);\n\tif(flag) say(\"Yes\");\n\telse say(\"No\");\n\tend();\n}\n```",
        "postTime": 1581948939,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF555E \u3010Case of Computer Network\u3011"
    },
    {
        "content": "# CF555E Case of Computer Network\n\n### \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u5b9a\u4e00\u5f20 n\u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u3002\n- \u7ed9\u5b9a q \u7ec4\u6709\u5411\u70b9\u5bf9 (s, t)\u3002\n- \u8be2\u95ee\u662f\u5426\u5b58\u5728\u4f7f\u5f97\u6240\u6709 s\u90fd\u80fd\u5230\u8fbe t \u7684\u65e0\u5411\u56fe\u4e2d\u6bcf\u6761\u8fb9\u7684\u5b9a\u5411\u65b9\u6848\u3002\n- $n,m,q \\le 2 \\times 10^5\u3002$\n\n### \u601d\u8def\n\n\u9996\u5148\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u5730\u65b9\u5c31\u662f\u5047\u5982\u8fd9\u5f20\u56fe\u662f\u4e0d\u8fde\u901a\u7684\uff0c\u800c\u4e14\u6b63\u597d\u6709\u70b9\u5bf9\u4f4d\u4e8e\u4e0d\u8fde\u901a\u7684\u90e8\u5206\u4e0a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u662f\u7edd\u5bf9\u4e0d\u80fd\u6ee1\u8db3\u7684~~\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u561b~~\n\n\u5176\u6b21\u6211\u4eec\u53ef\u4ee5\u65ad\u5b9a\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u6709\u4e00\u79cd\u5408\u6cd5\u7684\u5b9a\u8fb9\u65b9\u5f0f\u4f7f\u5f97\u5176\u4e2d\u6240\u6709\u70b9\u53ef\u4ee5\u4e92\u8fbe\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u975e\u5e38\u7684~~\u663e\u7136~~\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u5c31\u4e0d\u8bc1\u660e\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u5df1\u8bc1\u660e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u5c31\u51fa\u6765\u4e86\uff0c\u90a3\u5c31\u662f\u5148\u5bf9\u6574\u5f20\u56fe\u5bfb\u627e\u8fb9\u53cc\uff0c\u7136\u540e\u7f29\u8d77\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u90a3q\u4e2a\u8be2\u95ee\u4e2d\u7684\u4e00\u90e8\u5206\u3002\n\n\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5728\u7f29\u5b8c\u6240\u6709\u8fb9\u53cc\u4e4b\u540e\uff0c\u8fd9\u6574\u5f20\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u68ee\u6797\uff01\n\n\u90a3\u4e48\u5bf9\u4e8e\u68ee\u6797\u4e0a\u7684\u8fb9\u7684\u987a\u5e8f\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u89e3\u51b3\u4e86\uff01\n\n### \u4ee3\u7801\n\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define maxn 210000 \nusing namespace std;\ninline int read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=(x<<3)+(x<<1)+(c^48); \n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\n//\u6b64\u4e0a\u662f\u5feb\u8bfb\u90e8\u5206 \nstruct Edge{\n\tint x,to,next;\n}e[maxn<<1],ed[maxn<<1];\nint head1[maxn],head2[maxn],ecnt1=1,ecnt2=1;\nvoid adde1(int x,int y){\n\te[++ecnt1].x=x;\n\te[ecnt1].to=y;\n\te[ecnt1].next=head1[x];\n\thead1[x]=ecnt1;\n}\nvoid adde2(int x,int y){\n\ted[++ecnt2].x=x;\n\ted[ecnt2].to=y;\n\ted[ecnt2].next=head2[x];\n\thead2[x]=ecnt2;\n}\n//\u4e24\u4e2a\u8fb9\u96c6\u4ee5\u53ca\u52a0\u8fb9\u64cd\u4f5c \nint n,m,q;//\u4e09\u4e2a\u91cf \nint s[maxn],d[maxn];//\u5dee\u5206\u6570\u7ec4 \nbool brige[maxn<<1];//\u5224\u65ad\u6865 \nint low[maxn],dfn[maxn],cnt;//tarjan \nint colo;//\u67d3\u8272 \nvoid tarjan(int x,int edg){\n\tdfn[x]=low[x]=++cnt;\n\tfor(int i=head1[x];i;i=e[i].next){\n\t\tint to=e[i].to;\n\t\tif(!dfn[to]){\n\t\t\ttarjan(to,i);\n\t\t\tlow[x]=min(low[x],low[to]);\n\t\t\tif(low[to]>low[x]){\n\t\t\t\tbrige[i]=brige[i^1]=1;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(i!=(edg^1)){\n\t\t\t\tlow[x]=min(low[x],dfn[to]);\n\t\t\t}\n\t\t}\n\t}\n}\n//\u6c42\u6865 \nint col[maxn];\nvoid color(int x){\n\tcol[x]=colo;\n\tfor(int i=head1[x];i;i=e[i].next){\n\t\tint to=e[i].to;\n\t\tif(brige[i]){//\u7531\u4e8e\u7f29\u6389\u70b9\u53cc\u540e\u53ea\u5269\u6865\u8fb9 \n\t\t\tif(col[to]){//\u9632\u6b62\u91cd\u590d\u5efa\u8fb9 \n\t\t\t\tadde2(colo,col[to]);\n\t\t\t\tadde2(col[to],colo);\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif(col[to]){\n\t\t\tcontinue;\n\t\t}\n\t\tcolor(to);\n\t}\n}\nvoid block(){\n\tfor(int i=1;i<=n;i++){\n\t\tif(!col[i]){\n\t\t\tcolo++;\n\t\t\tcolor(i);\n\t\t}\n\t}\n}\n//\u7f29\u70b9\u4ee5\u53ca\u91cd\u5efa\u8fb9\uff0c\u8fd9\u4e2a\u5730\u65b9\u4e5f\u53ef\u4ee5\u76f4\u63a5\u627e\u8fb9\u53cc\uff0c\u4e0d\u8fc7\u6211\u5fd8\u4e86\u600e\u4e48\u627e\u4e86\nint fa[maxn],top[maxn],dep[maxn],tot[maxn],son[maxn],maxf[maxn];\nvoid dfs1(int now,int f,int deep,int mf){\n\tmaxf[now]=mf;\n\tfa[now]=f;\n\tdep[now]=deep;\n\ttot[now]=1;\n\tint maxson=0;\n\tfor(int i=head2[now];i;i=ed[i].next){\n\t\tint to=ed[i].to;\n\t\tif(to==f){\n\t\t\tcontinue;\n\t\t}\n\t\tdfs1(to,now,deep+1,mf);\n\t\ttot[now]+=tot[to];\n\t\tif(tot[to]>maxson){\n\t\t\tmaxson=tot[to];\n\t\t\tson[now]=to;\n\t\t}\n\t}\n}\nvoid dfs2(int now,int topf){\n\ttop[now]=topf;\n\tif(!son[now]){\n\t\treturn;\n\t}\n\tdfs2(son[now],topf);\n\tfor(int i=head2[now];i;i=ed[i].next){\n\t\tint to=ed[i].to;\n\t\tif(to==fa[now]||to==son[now]){\n\t\t\tcontinue;\n\t\t}\n\t\tdfs2(to,to);\n\t}\n}\ninline int lca(int a,int b){\n\twhile(top[a]!=top[b]){\n\t\tif(dep[top[a]]>=dep[top[b]]) a=fa[top[a]];\n\t\telse b=fa[top[b]];\n\t}\n\treturn dep[a]<dep[b]?a:b;\n}\n//\u6811\u94fe\u5256\u5206\u4ee5\u53ca\u6c42lca\nbool flag=1;\nbool vis[maxn];\nvoid last_dfs(int x,int fa){\n\tvis[x]=1;\n\tfor(int i=head2[x];i;i=ed[i].next){\n\t\tint to=ed[i].to;\n\t\tif(to==fa){\n\t\t\tcontinue;\n\t\t}\n\t\tlast_dfs(to,x);\n\t\ts[x]+=s[to];\n\t\td[x]+=d[to];\n\t\tif(s[x]&&d[x]){\n\t\t\tflag=0;\n\t\t}\n\t}\n} \n//\u6700\u540e\u7684dfs\uff0c\u7528\u6765\u7edf\u8ba1\u5dee\u5206\u6570\u7ec4 \nint main(){\n\tn=read();\n\tm=read();\n\tq=read();\n\tint x,y;\n\tfor(int i=1;i<=m;i++){\n\t\tx=read();\n\t\ty=read();\n\t\tadde1(x,y);\n\t\tadde1(y,x);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!dfn[i]){\n\t\t\ttarjan(i,0);\n\t\t} \n\t}\n\tblock();//\u628a\u70b9\u53cc\u90fd\u7f29\u6389 \n\tfor(int i=1;i<=n;i++){\n\t\tif(fa[i]){\n\t\t\tcontinue;\n\t\t}\n\t\tdfs1(i,0,1,i);\n\t\tdfs2(i,i);\n\t}//\u6811\u94fe\u5256\u5206\u9884\u5904\u7406 \n\tfor(int i=1;i<=q;i++){\n\t\tx=read();\n\t\ty=read();\n\t\tif(col[x]==col[y]){\n\t\t\tcontinue;\n\t\t} //\u5047\u5982\u4e24\u8005\u5728\u540c\u4e00\u4e2a\u70b9\u53cc\u4e2d\uff0c\u90a3\u4e48\u5fc5\u5b9a\u53ef\u8fbe \n\t\tx=col[x];\n\t\ty=col[y]; \n\t\tif(maxf[x]!=maxf[y]){\n\t\t\tprintf(\"No\");\n\t\t\treturn 0;\n\t\t}//\u5047\u5982\u4e24\u8005\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u7edd\u5bf9\u4e0d\u53ef\u80fd\u6ee1\u8db3 \n\t\tint l=lca(x,y);\n\t\ts[x]+=1;\n\t\ts[l]-=1;\n\t\td[l]-=1;\n\t\td[y]+=1;\n\t\t//\u8fdb\u884c\u5dee\u5206 \n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!vis[i]){\n\t\t\tlast_dfs(i,0);\n\t\t\tif(!flag){\n\t\t\t\tprintf(\"No\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}//\u7edf\u8ba1\u5dee\u5206 \n\tprintf(\"Yes\");\n\treturn 0;\n}\n```\n\n~~\u6211\u7684\u4ee3\u7801\u597d\u4e11~~\n\n### \u540e\u8bb0\n\n\u56fd\u96c6\u4f5c\u4e1a\u7b2c\u4e00\u9898\n\n",
        "postTime": 1580370431,
        "uid": 143418,
        "name": "\u5b51\u5f67",
        "ccfLevel": 0,
        "title": "CF555E Case of Computer Network\u89e3\u9898\u62a5\u544a"
    }
]