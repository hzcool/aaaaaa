[
    {
        "content": "## Codeforces Round 506 Div.3 C\n\n\u4e2a\u4eba\u89c9\u5f97\u6211\u7684\u9898\u89e3\u662f\u6700\u7c97\u66b4\u7684\u3002\u3002\u3002\u671b\u5404\u4f4ddalao\u65a7\u6b63\u3002\n\n____\n\n\u65f6\u96944\u4e2a\u591a\u6708\uff0c\u7ec8\u4e8e\u628a\u8fd9\u9053\u9898\u7ed9\u641e\u61c2\u4e86\u3002\u3002\u3002\u800c\u4e14\u8fd8\u662f\u5de7\u5408\u4e4b\u4e0b\u641e\u61c2\u7684\u3002\n\n\u5f53\u65f6\u6211\u505a\u7684\u65f6\u5019\uff0c\u4e00\u76f4\u5728\u60f3\u600e\u4e48\u5904\u7406\u8fd9\u4e2a\u5220\u9664\u64cd\u4f5c\u3002\n\n\u6211\u5c31\u60f3\u554a\uff0c\u600e\u4e48\u4e5f\u4f1a\u6709\u4e2a\u8d2a\u5fc3\u7684\u7b56\u7565\u5427\uff0c\u4e8e\u662f\u4fbf\u662f\u4e00\u901a\u4e71\u5f04\u3002\n\n\u7ed3\u679c\uff1f\u56db\u4e2a\u6837\u4f8b\u90fd\u6709\u6ca1\u8fc7\u7684\u3002\n\n\u7136\u540e\u53c8\u662f\u62fc\u547d\u7684\u60f3\u554a\u60f3\u3002\u3002\u3002\n\n\u7ed3\u679c\u786c\u662f\u641e\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u6ca1\u6709\u641e\u51fa\u6765\u3002\u3002\u3002\u6211\u7684\u7b2c\u4e00\u6b21CF\u5c31\u8fd9\u6837\u7ed3\u675f\u4e86\uff0c\u4ee5\u4e24\u9898\u7684\u5f31\u9e21\u6210\u7ee9\u544a\u7ec8\u3002\n\n\u73b0\u5728\u60f3\u60f3\uff0c\u5176\u5b9e\u90a3\u65f6\u81ea\u5df1\u662f\u6839\u672c\u4e0d\u4f1a\u6253CF\u3002\u8fd9\u79cd\u9898\u4ea4\u7ed9\u6211\u73b0\u5728\u6765\u6253\uff0c\u5c11\u8bf4\u4e00\u573a\u4e5f\u6709\u4e09\u56db\u9053\u3002\uff08\u4e0d\u5b58\u5728\u7684\uff09\n\n___\n\n\u4e0b\u9762\u8fdb\u5165\u6b63\u9898\u3002\n\n\u5230\u5e95\u662f\u600e\u4e48\u60f3\u51fa\u6765\u7684\u5462\uff1f\u4e3b\u8981\u662f2018\u5e7412\u6708\u521d\u7684\u4e00\u5929\uff0c\u4e00\u4e2adalao\u540c\u5b66\u7ed9\u4e86\u6211\u8fd9\u4e48\u4e00\u9053\u9898\uff1a\n\n>\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217\uff0c\u5168\u90e8\u4e3a1~1e7\u7684\u6b63\u6574\u6570\u3002\u8f93\u5165\u5e8f\u5217\u957f\u5ea6N\u4ee5\u53ca\u8fd9\u4e2a\u5e8f\u5217\uff0c\u8f93\u51faN\u884c\uff0c\u7b2cI\u884c\u8868\u793a\u9664\u7b2cI\u4e2a\u6570\u5916\u5269\u4f59\u6240\u6709\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002$N\\le 500000$\u3002\n\n\u6211\u770b\u5230\u8fd9\u9898\uff0c\u7b2c\u4e00\u60f3\u6cd5\u5c31\u662f\u7ebf\u6bb5\u6811\u3002\n\n\u7ed3\u679c\u90a3\u4e2adalao\u8bf4\uff1a\u201c\u5982\u679c\u4e0d\u8981\u6570\u636e\u7ed3\u6784\u5462\uff1f\u201d\n\n\u6211\u53c8\u770b\u4e86\u4e00\u4f1a\u513f\uff0c\u770b\u5230\u6570\u7684\u8303\u56f4\u4e0d\u662f\u5f88\u5927\uff0c\u53ea\u67091e7\uff0c\u5c31\u60f3\u4e86\u4e00\u4e2a\u7528\u7b5b\u8868+\u8d28\u56e0\u6570\u5206\u89e3\u7684\u505a\u6cd5\uff0c\u4f3c\u4e4e\u968f\u673a\u6570\u636e\u80fd\u5361\u8fc7\uff0c\u4f46\u5982\u679c\u9020\u4e00\u4e9b\u5168\u662f\u5927\u8d28\u6570\u7684\uff0c\u90a3\u5c31\u4f1a\u7206\u6389\u4e86\u3002\n\n\u8fd9\u65f6\uff0c\u53e6\u4e00\u4e2adalao\u8d70\u4e86\u8fc7\u6765\u3002\u542c\u4e86\u9898\u76ee\uff0c\u4ed6\u7565\u60f3\u4e86\u4e00\u4e24\u79d2\u949f\uff0c\u7ed9\u51fa\u4e86$O(N)$\u7684\u505a\u6cd5\uff1a\n\n>\u5b58\u50a8\u4e24\u4e2a\u6570\u7ec4l\u548cr\uff0c\u5206\u522b\u8868\u793a\u201c\u524d\u7f00GCD\u201d\u548c\u201c\u540e\u7f00GCD\u201d\u3002\n\n>\u90a3\u4e48\u5bf9\u4e8e\u7b2c$I(1<I<N)$\u4e2a\u6570\uff0c\u7b54\u6848\u5c31\u662f$gcd(l[i-1],r[i+1])$\u3002\n\n>\u5bf9\u4e8e\u5934\u5c3e\u4e24\u4e2a\u6570\uff0c\u7b54\u6848\u5206\u522b\u662f$r[i+1]$\u548c$l[i-1]$\u3002\n\n>\u540c\u7406\uff0c\u8fd9\u4e2a\u505a\u6cd5\u53ef\u4ee5\u63a8\u5e7f\u5230\u5220\u53bb$[l,r]$\u6240\u6709\u7684\u6570\u540e\u5269\u4f59\u6570\u7684GCD\u7684\u9898\u76ee\u3002\n\n\u6211\u4e00\u4e0b\u5b50\u8c41\u7136\u5f00\u6717\u3002\u5e72\u561b\u975e\u5f97\u8981\u5148\u628a\u5b83\u52a0\u5165GCD\uff0c\u7136\u540e\u518d\u5206\u79bb\u51fa\u6765\u5462\uff1f\u76f4\u63a5\u907f\u5f00\u52a0\u5165\u7684\u8fc7\u7a0b\u4e0d\u5c31\u597d\u4e86\uff1f\n\n\u8fd9\u4e2a\u601d\u60f3\u662f\u5f88\u6709\u7528\u7684\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e\u661f\u7403\u5927\u6218\u90a3\u9053\u9898\uff0c\u5b83\u8ba9\u4f60\u5220\u8fb9\uff0c\u4f46\u5b9e\u9645\u4e0a\u53ef\u4ee5\u79bb\u7ebf\u6389\uff0c\u76f4\u63a5\u52a0\u8fb9\u641e\u5b9a\u3002\n\n> \u8bb0\u4f4f\uff0c\u5f80\u5f80\u6bd4\u5fd8\u6389\u5bb9\u6613\u3002\n\n> \u2014\u2014\u2014\u2014\u67d0\u4e2a\u52a8\u6f2b\uff08\u96fe\uff09\n\n> \u63d2\u5165\uff0c\u5f80\u5f80\u6bd4\u5220\u9664\u5bb9\u6613\u3002\n\n> \u2014\u2014\u2014\u2014\u6211\uff08\u5927\u96fe\uff09\n\n\u5728\u5f88\u591a\u9898\u4e2d\uff0c\u8fd9\u4e2a\u601d\u8def\u90fd\u662f\u6781\u5176\u91cd\u8981\u7684\u3002\n\n\u672c\u9898\u4e5f\u662f\u5982\u6b64\u3002\u601d\u8def\u5982\u4e0b\uff1a\n\n>\u8bb0\u5f55\u524d\u7f00\u533a\u95f4\u4ea4\u548c\u540e\u7f00\u533a\u95f4\u4ea4\u6570\u7ec4lp\u548crp\u3002\n\n>\u626b\u63cf\u4e24\u6b21\u6570\u7ec4\uff0c\u628alp\u548crp\u6c42\u51fa\u6765\u3002\n\n>\u5219\u5bf9\u4e8e\u6bcf\u6761\u7ebf\u6bb5\uff0c\u5220\u53bb\u540e\u7684\u533a\u95f4\u4fbf\u662f$[max(lp[i-1].l,rp[i+1].l),min(lp[i-1].r,rp[i+1].r)]$\u3002\n\n\u5c31\u8fd9\u6837\uff0c\u626b\u63cf\u4e86\u4e09\u904d\u6570\u7ec4\uff0c\u5de7\u5999\u5730\u89e3\u51b3\u4e86\u672c\u9898\u3002\n\n\u53ef\u80fd\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5bfc\u81f4\u5de6\u7aef\u70b9\u5927\u4e8e\u53f3\u7aef\u70b9\uff0c\u4e0d\u7b26\u5408\u533a\u95f4\u4e66\u5199\u6807\u51c6\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u7528\u7406\u5b83\uff0c\u56e0\u4e3a\u53ef\u4ee5\u628a$l>r$\u7684\u533a\u95f4$[l,r]$\u770b\u4f5c\u4e0d\u5408\u6cd5\u533a\u95f4\uff0c\u957f\u5ea6\u4e3a-1\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int iz=3e5+5;\nint lpl[iz],lpr[iz],rpl[iz],rpr[iz];//\u524d\u7f00\u4e0e\u540e\u7f00\nint l[iz],r[iz];//\u7ebf\u6bb5\u4eec\nint n;\nint main(){\n\tscanf(\"%d\",&n);\n\tmemset(lpr,0x7f,sizeof(lpr));\n\tmemset(rpr,0x7f,sizeof(rpr));\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&l[i],&r[i]);\n\t\tlpl[i]=max(lpl[i-1],l[i]);\n\t\tlpr[i]=min(lpr[i-1],r[i]);\n\t}//\u8bfb\u5165&\u6c42\u51falp\n\tfor(int i=n;i>=1;i--){\n\t\trpl[i]=max(rpl[i+1],l[i]);\n\t\trpr[i]=min(rpr[i+1],r[i]);\n\t}//\u6c42\u51farp\n\tint maxn=0;//\u628a\u4e0d\u5408\u6cd5\u7684\u533a\u95f4\u548c\u957f\u5ea6\u4e3a0\u7684\u533a\u95f4\u6392\u9664\n\tfor(int i=1;i<=n;i++){\n\t\tmaxn=max(min(lpr[i-1],rpr[i+1])-max(lpl[i-1],rpl[i+1]),maxn);//\u53d6\u533a\u95f4\u957f\u5ea6\u6700\u5927\u503c\n\t}\n\tprintf(\"%d\",maxn);\n}\n```",
        "postTime": 1544617417,
        "uid": 52913,
        "name": "CreeperK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029C \u3010Maximal Intersection\u3011"
    },
    {
        "content": "[CF1029C](http://codeforces.com/problemset/problem/2029/C) _Maximal Intersection_ : \u66b4\u529b\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a $n$ \u4e2a\u533a\u95f4\uff0c\u4f60\u9700\u8981\u5728\u5f53\u4e2d\u53bb\u6389\u4e00\u4e2a\uff0c\u6c42\u5269\u4e0b\u533a\u95f4\u4ea4\u7684\u957f\u5ea6\u3002\u8fd9\u91cc\u957f\u5ea6\u662f\u6307\u533a\u95f4\u53f3\u7aef\u70b9\u6570\u503c\u51cf\u53bb\u5de6\u7aef\u70b9\uff0c\u4f8b\u5982\u533a\u95f4 $[1,2]$ \u957f\u5ea6\u4e3a $1$.\u533a\u95f4\u4ea4\u6307\u533a\u95f4\u76f8\u4ea4\u7684\u90e8\u5206\uff0c\u4f8b\u5982\u533a\u95f4 $[2,5]$ \u548c\u533a\u95f4 $[3,8]$ \u7684\u533a\u95f4\u4ea4\u4e3a $[3,5]$.\n\n\u5728\u8fd9\u9898\u4e2d\uff0c$n$ \u9ad8\u8fbe $3 \\times 10^5$ \uff0c\u5f88\u5bb9\u6613\u8ba9\u4eba\u60f3\u5230\u8d2a\u5fc3\uff0c\u53bb\u6389\u533a\u95f4\u957f\u5ea6\u6700\u5c0f\u7684\u3002\u4f46\u662f\u8fd9\u4e48\u505a\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6700\u5c0f\u7684\u533a\u95f4\u4f4d\u7f6e\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/30378.png)\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6b63\u89e3\u5e94\u8be5\u662f\u53bb\u6389\u6a58\u8272\u7684\u7ebf\u6bb5\uff0c\u800c\u6211\u4eec\u7684\u8d2a\u5fc3\u5374\u53bb\u6389\u4e86\u9ed1\u8272\u7684\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u975e\u5e38\u5177\u6709\u6b3a\u9a97\u6027\uff0c\u5c3d\u7ba1 $n$ \u6700\u9ad8\u6709\u53ef\u80fd\u8fbe\u5230 $3 \\times 10^5$ \uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u5728 $O(N)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u8ba1\u7b97\u51fa\u4e00\u4e2a\u6570\u7ec4 $a$, \u5176\u4e2d $a_i$ \u4ee3\u8868\u53bb\u6389\u533a\u95f4 $i$ \u540e\u6240\u6709\u533a\u95f4\u7684\u533a\u95f4\u5e76\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u4ee3\u7801\uff0c\u5b83\u5f88\u597d\u7406\u89e3\uff1a\n\n```cpp\nstruct cg {\n\tint fr, to;\n};\n\ncg Range(cg a, cg b) {\n\tcg ret;\n\tret.fr = std::max(a.fr, b.fr); ret.to = std::min(a.to, b.to);\n\treturn ret;\n}\n```\n\ncg\u662f\u4e3a\u4e86\u4fdd\u5b58\u4e00\u4e2a\u533a\u95f4\u5199\u7684\u7ed3\u6784\u4f53\u3002\u8bb0\u5408\u5e76\u533a\u95f4 $A$ \u548c $B$ \u4e3a $A \\bigotimes B$ .\n\n\u5f53\u6211\u4eec\u5408\u5e76\u4e00\u5806\u533a\u95f4\u7684\u65f6\u5019\uff0c\u65e0\u8bba\u6309\u7167\u4ec0\u4e48\u987a\u5e8f\u5408\u5e76\uff0c\u7ed3\u679c\u4e00\u5b9a\u4e00\u6837\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c$\\bigotimes$ \u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff1a\n\n$$A \\bigotimes B \\bigotimes C = A \\bigotimes C \\bigotimes B$$\n\n\u5047\u8bbe\u9898\u76ee\u7ed9\u5b9a\u7684\u533a\u95f4\u4e3a $b_i$ \uff0c\u90a3\u4e48 \n\n$$a_i = b_0 \\bigotimes \\cdots \\bigotimes b_{i-1} \\bigotimes b_{i+1} \\bigotimes \\cdots \\bigotimes b_{n-1}$$\n\n\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u4e3a\u6240\u6709 $b_j | j < i$ ,\u7b2c\u4e8c\u90e8\u5206\u4e3a\u6240\u6709 $b_j | j > i$ .\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u5355\u72ec\u4e3a\u6bcf\u4e00\u4e2a $a$ \u8ba1\u7b97\u4e00\u904d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5c06 $a_i$ \u7684\u7b2c\u4e00\u90e8\u5206\u6dfb\u52a0\u4e00\u4e2a $b_i$ \u5c31\u662f $a_{i+1}$ \u7684\u7b2c\u4e00\u90e8\u5206\u4e86\uff0c\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u8ba1\u7b97\u6240\u6709\u7684\u7b2c\u4e00\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N)$, \u7b2c\u4e8c\u90e8\u5206\u4e5f\u662f\u3002\n\n```cpp\n\tcg now = *seg;\n\tfor (int i = 1; i < totSeg; i++) {\n\t\tarr[i] = now;\n\t\tnow = Range(now, seg[i]);\n\t}\n\tnow = seg[totSeg - 1];\n\tfor (int i = totSeg - 2; i >= 0; i--) {\n\t\tarr[i] = Range(arr[i], now);\n\t\tnow = Range(now, seg[i]);\n\t}\n```\n\n\u4ee3\u7801\u4e2d $arr$ \u5c31\u662f\u4e4b\u524d\u63d0\u5230\u7684 $a$ \u6570\u7ec4\uff0c $seg$ \u5c31\u662f\u4e4b\u524d\u63d0\u5230\u7684 $b$ \u6570\u7ec4\u3002\n\n\u6267\u884c\u5b8c\u8fd9\u4e00\u8fc7\u7a0b\uff0c$a$ \u6570\u7ec4\u5373\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7ec4\u3002\u6700\u540e\u518d\u626b\u4e00\u904d\uff0c\u6c42\u51fa\u4e00\u4e2a\u6700\u5927\u503c\u5373\u53ef\u3002\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u4e3a $O(N)$.\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct cg {\n\tint fr, to;\n};\ncg seg[300500], arr[300500];\n\ncg Range(cg a, cg b) {\n\tcg ret;\n\tret.fr = std::max(a.fr, b.fr); ret.to = std::min(a.to, b.to);\n\treturn ret;\n}\n\nint main()\n{\n\tint totSeg, fr, to;\n\n\tcin >> totSeg;\n\tfor (int i = 0; i < totSeg; i++) {\n\t\tcin >> fr >> to;\n\t\tseg[i] = { fr,to };\n\t\tarr[i] = { INT_MIN,INT_MAX };\n\t}\n\n\tcg now = *seg;\n\tfor (int i = 1; i < totSeg; i++) {\n\t\tarr[i] = now;\n\t\tnow = Range(now, seg[i]);\n\t}\n\tnow = seg[totSeg - 1];\n\tfor (int i = totSeg - 2; i >= 0; i--) {\n\t\tarr[i] = Range(arr[i], now);\n\t\tnow = Range(now, seg[i]);\n\t}\n\n\tint _max = 0;\n\tfor (int i = 0; i < totSeg; i++)\n\t\t_max=std::max(_max, arr[i].to - arr[i].fr);\n\n\tcout << _max << endl;\n\n\t//system(\"pause\");\n\treturn 0;\n}\n```",
        "postTime": 1535182057,
        "uid": 78371,
        "name": "Mickey_snow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029C \u3010Maximal Intersection\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e00\u70b9stl\u4ec0\u4e48\u7684\u90fd\u4e0d\u7528\u7528\u5230\n\n\u533a\u95f4\u4ea4\u4e5f\u5c31\u662f$[\\max(l_i),\\min(r_i)]$\n\n\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u6bcf\u6b21\u5220\u6389\u67d0\u4e2a\u533a\u95f4\u540e\u5176\u4ed6\u533a\u95f4\u7684\u533a\u95f4\u4ea4\n\n\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6700\u5927$l_i$\u548c\u6b21\u5927$l_i$\u8fd8\u6709\u6700\u5c0f$r_i$\u548c\u6b21\u5c0f$r_i$\n\n\u82e5\u5f53\u524d\u8981\u5220\u6389\u7684\u533a\u95f4$[l_i,r_i],l_i$\u4e3a\u6700\u5927L,\u90a3\u6211\u4eec\u5c31\u53d6\u6b21\u5927L\n\nR\u540c\u7406\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nnamespace ZDY{\n    #pragma GCC optimize(3)\n    #define il __inline__ __attribute__ ((always_inline))\n    #define rg register\n    #define ll long long\n    #define ull unsigned long long\n    #define db double\n    #define sht short\n    #define MB template <class T>il\n    #define Fur(i,x,y) for(int i(x);i<=y;++i)\n    #define Fdr(i,x,y) for(int i(x);i>=y;--i)\n    #define fl(i,x) for(int i(head[x]),to;to=e[i].to,i;i=e[i].nxt)\n    #define clr(x,y) memset(x,y,sizeof(x))\n    #define cpy(x,y) memcpy(x,y,sizeof(x))\n    #define fin(s) freopen(s\".in\",\"r\",stdin)\n    #define fout(s) freopen(s\".out\",\"w\",stdout)\n    #define fcin ios::sync_with_stdio(false)\n    #define l2(n) ((int)(log2(n)))\n    #define inf 2122219134\n    MB T ABS(T x){return x>0?x:-x;}\n    MB T MAX(T x,T y){return x>y?x:y;}\n    MB T MIN(T x,T y){return x<y?x:y;}\n    MB T GCD(T x,T y){return y?GCD(y,x%y):x;}\n    MB void SWAP(T &x,T &y){T t=x;x=y;y=t;}\n}using namespace ZDY;using namespace std;\nnamespace IO{const int str=1<<20;static char in_buf[str],*in_s,*in_t;bool __=0;il char gc(){return (in_s==in_t)&&(in_t=(in_s=in_buf)+fread(in_buf,1,str,stdin)),in_s==in_t?EOF:*in_s++;}il void in(string &ch){ch.clear();if(__)return;rg char c;while((c=gc())!=EOF&&isspace(c));if(c==EOF){__=1;return;}ch+=c;while((c=gc())!=EOF&&!isspace(c))ch+=c;if(c==EOF)__=1;}il void in(char &ch){if(__)return;rg char c;while((c=gc())!=EOF&&isspace(c));if(c==EOF)__=1;else ch=c;}il void in(char *ch){*ch='\\0';if(__)return;rg char c;while((c=gc())!=EOF&&isspace(c));if(c==EOF){__=1;return;}*ch=c;ch++;while((c=gc())!=EOF&&!isspace(c))*ch=c,ch++;if(c==EOF)__=1;*ch='\\0';}template<typename T>il void in(T &x){if(__)return;rg char c=gc();bool f=0;while(c!=EOF&&(c<'0'||c>'9'))f^=(c=='-'),c=gc();if(c==EOF){__=1;return;}x=0;while(c!=EOF&&'0'<=c&&c<='9')x=x*10+c-48,c=gc();if(c==EOF)__=1;if(f)x=-x;}template<typename T,typename ... arr>il void in(T &x,arr & ... y){in(x),in(y...);}const char ln='\\n';static char out_buf[str],*out_s=out_buf,*out_t=out_buf+str;il void flush(){fwrite(out_buf,1,out_s-out_buf,stdout);out_s=out_buf;}il void pt(char c){(out_s==out_t)?(fwrite(out_s=out_buf,1,str,stdout),*out_s++=c):(*out_s++=c);}il void out(const char* s){while(*s)pt(*s++);}il void out(char* s){while(*s)pt(*s++);}il void out(char c){pt(c);}il void out(string s){for(int i=0;s[i];i++)pt(s[i]);}template<typename T>il void out(T x){if(!x){pt('0');return;}if(x<0)pt('-'),x=-x;char a[50],t=0;while(x)a[t++]=x%10,x/= 10;while(t--)pt(a[t]+'0');}template<typename T,typename ... arr>il void out(T x,arr & ... y){out(x),out(y...);}}using namespace IO;\n#define N 300011\nint n,ml1=0,ml2=0,mr1=inf,mr2=inf;\nstruct node{\n    int l,r;\n}a[N];\nint main(){\n    in(n);\n    int l,r;\n    Fur(i,1,n){\n        in(l,r);\n        a[i]={l,r};\n        if(l>=ml1)ml2=ml1,ml1=l;\n        else if(l>ml2)ml2=l;\n\n        if(r<=mr1)mr2=mr1,mr1=r;\n        else if(r<mr2)mr2=r;\n    }\n    int ans=0,L,R;\n    Fur(i,1,n){\n        l=a[i].l,r=a[i].r;\n        if(l==ml1)L=ml2;\n        else L=ml1;\n\n        if(r==mr1)R=mr2;\n        else R=mr1;\n        ans=MAX(ans,R-L);\n    }\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1574257058,
        "uid": 36532,
        "name": "localhost",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029C \u3010Maximal Intersection\u3011"
    },
    {
        "content": "STL\u5e93\u5927\u6cd5\u597d\uff01\uff01\uff01\u4f17\u6240\u5468\u77e5STL\u5e93\u6709\u5f88\u591a\u6bd2\u7624\u7684\u4e1c\u897f\uff0c\u7ea2\u9ed1\u6811\uff0c\u6563\u5217\u8868\uff0c\u96c6\u5408\uff0c\u6392\u5e8f\uff0c\u627e\u4e2d\u4f4d\u6570\u7b49\u7b49\u4e00\u4e9b\u8d85\u7ea7\u597d\u7528\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u5176\u5b9e\u5f88\u5c11\u4eba\u7528multiset\u4e86.......\u80fd\u7528\n\u7684\u8bdd\u4e5f\u662f\u7528\u4f18\u5148\u961f\u5217\u4e86QAQ\uff0c\u8fd8\u662f\u6551\u6551multiset\u54c7\uff01\n```\n#include<bits/stdc++.h>\n#define maxn 1000010\nusing namespace std;\nmultiset<int> l,r;\nint n,x[maxn],y[maxn];\nint main()\n{\n\tcin>>n;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tcin>>x[i]>>y[i];\n\t\tl.insert(x[i]);//\u81ea\u52a8\u6392\u5e8f\u54e6\n\t\tr.insert(y[i]);//\u4e00\u4e2a\u8bb0\u5f55\u5de6\u533a\u95f4\u4e00\u4e2a\u8bb0\u5f55\u53f3\u533a\u95f4\n       }\n\tint ans=0;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tl.erase(l.find(x[i]));//\u6709\u91cd\u590d\u533a\u95f4\u4e0d\u7528set\n\t\tr.erase(r.find(y[i]));\n\t\tans=max(ans,*r.begin()-*l.rbegin());//\u627e\u5230\u5de6\u53f3\u533a\u95f4\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u662f\u8fed\u4ee3\u5668\u6240\u4ee5\u4e00\u5b9a\u8981\u52a0*\u53f7\u8868\u793a\u503c\n\t\tl.insert(x[i]);//\u52a0\u5165\u533a\u95f4\n\t\tr.insert(y[i]);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n\n```",
        "postTime": 1538879865,
        "uid": 51164,
        "name": "l_water",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029C \u3010Maximal Intersection\u3011"
    },
    {
        "content": "\u4e0e CF754D \u7c7b\u4f3c\uff0c\u662f\u5176\u5f31\u5316\u7248\u3002\n\n\u9898\u76ee\u8bf4\u53bb\u6389\u4e00\u4e2a\uff0c\u5176\u5b9e\u5c31\u662f\u9009 $n-1$ \u4e2a\u3002\n\n\u6309\u5de6\u7aef\u70b9\u5347\u5e8f\u540e\uff0c\u7528\u5c0f\u6839\u5806\u53bb\u7ef4\u62a4\u53f3\u7aef\u70b9\u4ee5\u4fdd\u8bc1\u533a\u95f4\u5c3d\u91cf\u9760\u8fd1\u3002\n\n\u7136\u540e\u8bb0 $ans$ \u4e3a\u7b54\u6848\uff08\u6700\u5927\u7684\u533a\u95f4\u4ea4\u96c6\uff09\uff0c\u5f53\u5806\u7684\u5143\u7d20\u4e3a $n-1$ \u65f6\u66f4\u65b0\u5373\u53ef\u3002\n\nAC Code\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct node{\n\tint l,r,id;\n\tbool operator<(const node &x)const\n\t{\n\t    return l<x.l;//\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\n\t}\n}a[1000005];\npriority_queue<int,vector<int>,greater<int>>q;\n\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i].l>>a[i].r;\n\t\ta[i].id=i;\n\t}\n\tsort(a+1,a+n+1);\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tq.push(a[i].r);\n\t\tif(q.size()>n-1) q.pop();//\u4e2a\u6570\u8fc7\u591a\uff0c\u5f39\u51fa\u5373\u53ef\n\t\tif(q.size()==n-1&&ans<q.top()-a[i].l) ans=q.top()-a[i].l;//\u66f4\u65b0\u7b54\u6848\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1664859567,
        "uid": 400269,
        "name": "_JYqwq_",
        "ccfLevel": 0,
        "title": "CF1029C Maximal Intersection\u3000\u9898\u89e3"
    },
    {
        "content": "~~\u8bbaDiv3\u51fa\u8fd9\u6837\u5de8\u6c34\u7684\u9001\u5206\u9898\u7adf\u7136\u8fd8\u6ca1\u591a\u5c11\u4ebaAC\uff08\u867d\u8bf4\u5f53\u65f6\u6211\u4e5f\u6ca1A...\u5176\u5b9e\u6211A\u4e86D...\u9003\uff09~~  \n\u8fd9\u4e2a\u9898\u5176\u5b9e\u4e00\u70b9\u90fd\u4e0d\u9ebb\u70e6,\u6392\u5e8f\u90fd\u53ef\u4ee5\u514d\u6389(\u5982\u679c\u7528$priority\\_queue$\u7684\u8bdd)  \n\u5148\u8003\u8651\u4e0d\u5220\u9664\u533a\u95f4\u7684\u60c5\u51b5,\u90a3\u4e48\u7b54\u6848\u5e94\u8be5\u7531\u6240\u6709\u533a\u95f4\u4e2d\u5de6\u7aef\u70b9\u5750\u6807\u6700\u5927\u7684\u533a\u95f4\u548c\u53f3\u7aef\u70b9\u5750\u6807\u6700\u5c0f\u7684\u533a\u95f4\u51b3\u5b9a(\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u52a0\u5165\u65b0\u7684\u533a\u95f4\u9020\u6210\u7684\u66f4\u4e25\u683c\u7684\u7ea6\u675f\u5373\u5f97),\u6240\u4ee5\u60f3\u5728\u5220\u6389\u4e00\u4e2a\u533a\u95f4\u540e\u4f7f\u5f97\u5269\u4f59\u7684\u533a\u95f4\u7684\u4ea4\u5c3d\u53ef\u80fd\u5927\u53ea\u9700\u8981\u8003\u8651\u5220\u53bb\u5de6\u7aef\u70b9\u6700\u5927\u7684\u533a\u95f4\u548c\u53f3\u7aef\u70b9\u6700\u5c0f\u7684\u533a\u95f4\u5373\u53ef  \n\u4e00\u5b9a\u6709\u4eba\u4f1a\u95ee\u5982\u679c\u5de6\u7aef\u70b9\u6700\u5927\u4e14\u5750\u6807\u76f8\u540c\u7684\u533a\u95f4\u4e0d\u662f\u4e00\u4e2a\u7684\u65f6\u5019\u5220\u54ea\u4e00\u4e2a,\u5176\u5b9e\u5b8c\u5168\u4e0d\u9700\u8981\u8003\u8651(\u5982\u679c\u6709\u4e0d\u6b62\u4e00\u4e2a\u90a3\u4f60\u5220\u54ea\u4e2a\u90fd\u4e0d\u80fd\u653e\u5bbd\u5de6\u7aef\u70b9\u7ea6\u675f),\u53f3\u7aef\u70b9\u540c\u7406,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u6240\u6709\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u5206\u522b\u653e\u5165\u4f18\u5148\u961f\u5217,\u6700\u540e\u8ba8\u8bba\u5220\u9664\u533a\u95f4\u7684\u60c5\u51b5\u53d6$max$\u5373\u53ef  \n\u5982\u679c\u5de6\u7aef\u70b9\u6700\u5927\u7684\u533a\u95f4\u548c\u53f3\u7aef\u70b9\u6700\u5c0f\u7684\u533a\u95f4\u662f\u540c\u4e00\u4e2a\u533a\u95f4,\u90a3\u5c31\u94c1\u5b9a\u5220\u6389\u8fd9\u4e2a\u533a\u95f4\u5c31\u5bf9\u4e86(\u8c01\u8ba9\u5b83\u662f\u6700\u4e25\u683c\u7684\u7ea6\u675f\u5462$qwq$)  \n\u4e0b\u9762\u6309\u7167\u60ef\u4f8b\u653eAC\u4ee3\u7801$\\downarrow\\downarrow\\downarrow$\n\n```cpp\n#include<cstdio>//CF1029C\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<queue>\n\nusing namespace std;\n\nint n,ansl,ansr;\n\nstruct lborder{\n\tint x,id;\n\tbool operator<(const lborder&rhs)const{\n\t\treturn x<rhs.x;\n\t}\n};\n\nstruct rborder{\n\tint x,id;\n\tbool operator<(const rborder&rhs)const{\n\t\treturn x>rhs.x;\n\t}\n};\n\nlborder lb;rborder rb;\n\npriority_queue<lborder>ql;priority_queue<rborder>qr;\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&lb.x,&rb.x);\n\t\tlb.id=i;\n\t\trb.id=i;\n\t\tql.push(lb);\n\t\tqr.push(rb);\n\t}\n\tif(ql.top().id==qr.top().id){\n\t\tql.pop();\n\t\tqr.pop();\n\t\tprintf(\"%d\\n\",max(0,qr.top().x-ql.top().x));\n\t\treturn 0;\n\t}\n\tansl=ql.top().x;\n\tansr=qr.top().x;\n\tql.pop();\n\tqr.pop();\n\tint ans=max(ansr-ql.top().x,qr.top().x-ansl);\n\tprintf(\"%d\\n\",max(ans,0));\n\treturn 0;\n} \n```",
        "postTime": 1535426486,
        "uid": 88006,
        "name": "BLUESKY007",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1029C \u3010Maximal Intersection\u3011"
    },
    {
        "content": "### \u8fd9\u9898\u592a\u6709\u610f\u601d\u4e86!~~\uff08\u867d\u7136\u662f\u6c34\u9898\uff09~~\u5fcd\u4e0d\u4f4f\u60f3\u5199\u4e00\u7bc7\u9898\u89e3~~\uff08\u9a97\u7ecf\u9a8c\uff09~~### \n\u5206\u6790\u9898\u5e72\uff0c**\u8bb2\u8ff0\u7684\u610f\u601d\u662f\uff1a\u7ed9\u5b9an\u4e2a\u533a\u95f4\uff0c\u6c42\u53bb\u6389\u4e00\u4e2a\u533a\u95f4\u540e\uff0c\u5176\u5b83\u6240\u6709\u533a\u95f4\u7684\u91cd\u5408\u90e8\u5206\u7684\u6700\u5927\u503c\u662f\u591a\u5c11\u3002**\n\n\u770b\u5230\u9898\u5e72\uff0c\u5c31\u53d1\u73b0\u4e86\u4eae\u70b9\u2014\u2014\u53ea\u80fd\u5220\u9664**\u4e00\u4e2a**\u533a\u95f4\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u66b4\u529b\u627e\u51fa\u8981\u5220\u9664\u7684\u533a\u95f4\u4e86\u3002\n\n**~~\u4f46\u662f\u600e\u4e48\u627e\u554a\uff01\uff01\uff01\u4e00\u4e2a\u4e2a\u8bd5\u5417\uff1f\uff1f\uff1f~~**\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u7684\u65b9\u6cd5\u786e\u5b9e\u662f\u4e00\u4e2a\u4e2a\u53bb\u5224\u65ad\u3002\n\n\u9996\u5148\u6c42\u51fa\u5728\u4e0d\u5220\u9664\u4efb\u4f55\u4e00\u4e2a\u533a\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u91cd\u5408\u7684\u533a\u95f4\u3002\n\n\uff08\u4ee3\u7801\u5b9e\u73b0\uff1a\u66b4\u529b\u53d6min\u548cmax\uff09\n```cpp\n\ta[0]=read();//\u5b58\u50a8\u6bcf\u4e2a\u533a\u95f4\u5de6\u7aef\u70b9\n\tb[0]=read();//\u5b58\u50a8\u6bcf\u4e2a\u533a\u95f4\u53f3\u7aef\u70b9\n\tl=a[0];//l,r\u5b58\u50a8\u73b0\u5728\u91cd\u5408\u7684\u533a\u95f4\u7684\u5de6\u3001\u53f3\u7aef;\n\tr=b[0];\n\tfor(int i=1;i<n;++i)\n\t{\n\t\ta[i]=read();\n\t\tb[i]=read();\n\t\tl=std::max(l,a[i]);\n\t\tr=std::min(r,b[i]);\n\t}//\u56e0\u4e3a\u662f\u6240\u6709\u533a\u95f4\u7684\u91cd\u5408\u533a\u95f4,\u6240\u4ee5\u5269\u4e0b\u7684\u533a\u95f4\u4e00\u5b9a\u662f\u6700\u5927\u7684\u5de6\u7aef\u70b9\u548c\u6700\u5c0f\u7684\u53f3\u7aef\u70b9\u4e4b\u95f4\u7684\u533a\u57df,\u5982\u679c\u51fa\u73b0l>r\u7684\u60c5\u51b5\u7a0d\u5fae\u7279\u5224\u4e00\u4e0b\u628a\u5927\u5c0f\u8d4b\u503c\u4e3a0\u5c31\u884c\n```\n\u53d6\u5b8c\u4e4b\u540e\uff0c\u5c31\u77e5\u9053\u4e86\u4e0d\u53bb\u9664\u6240\u91cd\u5408\u7684\u8303\u56f4~~\uff08\u7136\u540e\u8f93\u51fa\uff1f\uff09~~\n\n\u90a3\u4e48\u63a5\u7740\u8003\u8651\u53bb\u9664\u7684\u533a\u95f4\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u80fd\u589e\u52a0\u5176\u5b83\u533a\u95f4\u7684\u91cd\u5408\u5927\u5c0f\u5462\uff1f\n\n\u53ea\u6709\u5728\u5176\u5b83\u533a\u95f4\u90fd**\u5305\u542b**\u8fd9\u4e2a\u533a\u95f4\u6240**\u4e0d\u5305\u542b**\u7684\u4e00\u4e2a**\u8303\u56f4**\u7684\u65f6\u5019\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5f97\u51fa\uff0c\u53bb\u9664\u7684\u8fd9\u4e2a\u533a\u95f4\u4e00\u5b9a\u4e0e\u8fb9\u754c**\uff08\u81f3\u5c11\u4e00\u8fb9\uff09**\u6709\u91cd\u5408\uff0c\u800c\u4e14\u548c\u8fd9\u4e2a\u8fb9\u754c\u91cd\u5408\u7684\u533a\u95f4\u53ea\u6709\u8fd9\u4e00\u4e2a\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u589e\u52a0\u8303\u56f4\u3002\n\n\u56e0\u6b64\u53ef\u4ee5\u518d\u626b\u4e00\u904d\uff0c\u627e\u4e0e\u8fb9\u754c\u91cd\u5408\u7684\u533a\u95f4\n\n```cpp\n\tget1=get2=-1;\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tif(a[i]==l)\n\t\t\tif(get1==-1)\n\t\t\t\tget1=i;\n\t\t\telse\n\t\t\t\tget1=-2;\n\t\tif(b[i]==r)\n\t\t\tif(get2==-1)\n\t\t\t\tget2=i;\n\t\t\telse\n\t\t\t\tget2=-2;\n\t}\n```\n\n\u627e\u5230\u53ef\u4ee5\u53bb\u9664\u7684\u533a\u95f4\u4e4b\u540e\uff0c\u518d\u5206\u522b\u626b\uff08\u81f3\u591a\uff09\u4e24\u904d\uff0c\u6765\u786e\u5b9a\u9664\u53bb\u8fd9\u4e2a\u533a\u95f4\uff0c\u5269\u4e0b\u533a\u95f4\u7684\u5927\u5c0f\uff0c\u5e76\u4ece\u4e24\u904d\u91cc\u9762\u53d6\u8f83\u5927\u7684\u533a\u95f4\uff0c\u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n```cpp\n\tif(get1>=0)\n\t{\n\t\tl=-1;\n\t\tr=1000000005;\n\t\tfor(int i=0;i<n;++i)\n\t\t\tif(i!=get1)\n\t\t\t{\n\t\t\t\tl=std::max(l,a[i]);\n\t\t\t\tr=std::min(r,b[i]);\n\t\t\t}\n\t}\n\tans=std::max(ans,r-l);\n\tif(get2>=0)\n\t{\n\t\tl=-1;\n\t\tr=1000000005;\n\t\tfor(int i=0;i<n;++i)\n\t\t\tif(i!=get2)\n\t\t\t{\n\t\t\t\tl=std::max(l,a[i]);\n\t\t\t\tr=std::min(r,b[i]);\n\t\t\t}\n\t}\n\tans=std::max(ans,r-l);\n\tprintf(\"%d\",ans);\n```\n\n\u53cd\u6b63\u8fd8\u6709\u5f88\u591a\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u7b2c\u4e00\u904d\u53d6\u6240\u6709\u8303\u56f4\u7684\u91cd\u5408\u8303\u56f4\u65f6\uff0c\u76f4\u63a5\u53d6\u51fa\u4e0e\u4e24\u4e2a\u8fb9\u754c\u91cd\u5408\u7684\u8fb9\u7684\u7f16\u53f7\u5c31\u884c\uff0c~~\u61d2\u5f97\u6539\u4e86~~",
        "postTime": 1535192346,
        "uid": 67013,
        "name": "Zachary_260325",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029C \u3010Maximal Intersection\u3011"
    }
]