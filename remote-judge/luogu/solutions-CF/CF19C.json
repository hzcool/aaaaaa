[
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6570\u5217\uff08\u5176\u5b9e\u662f\u5b57\u7b26\u4e32\uff09\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u8868\u793a\u4e00\u4e2a\u5b57\u6bcd\u8981\u8fdb\u884c\u82e5\u5e72\u6b21\u5220\u9664\u64cd\u4f5c\uff0c\u6bcf\u6b21\u628a\u5b57\u7b26\u4e32\u4e2d\u7684\u76f8\u90bb\u8fde\u7eed\u5b50\u4e32\u5f62\u5982 $XX$ \u5220\u9664\u524d\u4e00\u4e2a $X$ \u53ca\u5176\u524d\u9762\u7684\u6240\u6709\u5b57\u7b26\u3002\n\n## \u5206\u6790\n\u6211\u4eec\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u957f\u5ea6\u4e3a $L$ \u7684\u5b50\u4e32\uff0c\u7136\u540e\u7528\u54c8\u5e0c\u52a0\u4e8c\u5206\u6765\u5224\u65ad\u76f8\u90bb\u7684\u5b50\u4e32\u662f\u5426\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\uff0c\u5219\u5c06\u524d\u4e00\u4e2a\u5b50\u4e32\u4ee5\u53ca\u524d\u9762\u7684\u6240\u6709\u90e8\u5206\u5220\u9664\u3002\u8fd9\u4e2a\u505a\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N^2 log N)$\uff0c\u663e\u7136\u662f\u4f1a\u8d85\u65f6\u3002\u6211\u4eec\u6765\u8003\u8651\u53e6\u4e00\u79cd\u64cd\u4f5c\uff0c\u6bcf\u9694 $L$ \u8bbe\u7f6e\u4e00\u4e2a\u89c2\u5bdf\u70b9\uff0c\u5bf9\u76f8\u90bb\u7684\u4e24\u4e2a\u89c2\u5bdf\u70b9\uff0c\u5206\u522b\u4ee5\u8fd9\u4e24\u4e2a\u70b9\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\u6c42\u4e00\u904d\u6700\u957f\u516c\u5171\u524d\u7f00(LCP)\u4e0e\u6700\u957f\u516c\u5171\u540e\u7f00(LCS)\uff0c\u8bbe\u524d\u4e00\u4e2a\u89c2\u5bdf\u70b9\u7684\u4f4d\u7f6e\u4e3a $x$\uff0c\u5982\u679c\u8fd9\u6700\u957f\u516c\u5171\u524d\u7f00\u548c\u6700\u957f\u516c\u5171\u540e\u7f00\u52a0\u8d77\u6765\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u7684\u957f\u5ea6 $L$\uff0c\u5219\u8bf4\u660e $x-LCP+1$ \u5230 $x-LCP+L+1$ \u4e3a\u6211\u4eec\u6240\u8981\u6c42\u7684\u524d\u4e00\u4e2a $X$\u3002\u6211\u5c31\u914d\u4e2a\u56fe\u6765\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/otmhh9id.png)\n\n\u7ea2\u70b9\u4e3a\u89c2\u5bdf\u70b9\uff0c\u6a59\u7ebf\u8868\u793aLCP\uff0c\u7eff\u7ebf\u8868\u793aLCS\uff0c\u5219\u53ef\u4ee5\u53d1\u73b0\u524d\u4e00\u6bb5\u6a59\u7ebf\u52a0\u7eff\u7ebf\u548c\u540e\u4e00\u6bb5\u6a59\u7ebf\u52a0\u7eff\u7ebf\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u4ee5\u4e24\u6761\u6a59\u7ebf\u7684\u5de6\u7aef\u70b9\u4e3a\u8d77\u59cb\u70b9\u7684\u5b50\u4e32\u53ea\u8981\u4e0d\u8d85\u8fc7\u8fd9\u4e2a\u957f\u5ea6\u4e5f\u662f\u76f8\u540c\u7684\uff0c\u800c $lCP+LCS\u2265L$\uff0c\u6240\u4ee5\u4e5f\u5c31\u5b58\u5728\u4e24\u4e2a\u8fde\u7eed\u5b50\u4e32\u7684\u957f\u5ea6\u662f\u76f8\u540c\u7684\u3002\n\n\u6839\u636e\u4e0a\u9762\u7684\u8bc1\u660e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 $\\dfrac{|S|}{L}log L$ \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u76f8\u90bb\u7684\u76f8\u540c\u5b50\u4e32\uff0c\u800c\u5220\u9664\u64cd\u4f5c\u56e0\u4e3a\u662f\u8fd9\u4e4b\u524d\u7684\u5b57\u7b26\u90fd\u8981\u5220\u9664\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u6307\u9488\u6765\u6307\u5411\u5f53\u524d\u6ca1\u88ab\u5220\u9664\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u79fb\u52a8\u6307\u9488\u5373\u53ef\u3002\u56e0\u4e3a\u679a\u4e3e\u89c2\u5bdf\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u8c03\u548c\u7ea7\u6570\u6c42\u548c\u662f $O(NlogN)$\uff0c\u800c\u7528\u54c8\u5e0c\u6c42LCP\u548cLCS\u4e3a $O(logN)$\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(NlogN *logN)=O(N{log}^2N)$\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u6709\u8bb2\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define fre(x) freopen(#x\".in\",\"r\",stdin);freopen(#x\".out\",\"w\",stdout)\nusing namespace std;\n#define ll long long\nconst int N=1e5+5,p=1e5+7,mod=1e9+7;\nint n;\nll Hash[N],bit[N];\nint get(int l,int r)\n{\n\treturn ((Hash[r]-Hash[l-1]*bit[r-l+1])%mod+mod)%mod;\n}\nint b[N],a[N];\nvoid init()\n{\n\tbit[0]=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tHash[i]=(Hash[i-1]*p+a[i])%mod;\n\t\tbit[i]=bit[i-1]*p%mod;\n\t}\n}\n//\u4e8c\u5206\u52a0\u6700\u957f\u516c\u5171\u524d\u7f00\u548c\u6700\u957f\u516c\u5171\u540e\u7f00 \nint LCP(int x,int y)\n{\n\tint l=0,r=y-x;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r+1)>>1;\n\t\tif(get(x-mid+1,x)==get(y-mid+1,y)) l=mid;\n\t\telse r=mid-1;\n\t}\n\treturn l;\n}\nint LCS(int x,int y)\n{\n\tint l=0,r=n-y+1;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r+1)>>1;\n\t\tif(get(x,x+mid-1)==get(y,y+mid-1)) l=mid;\n\t\telse r=mid-1;\n\t}\n\treturn l;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tinit();//\u521d\u59cb\u5316\u5904\u7406\u54c8\u5e0c \n\tint first=1;//\u6307\u5411\u6ca1\u88ab\u5220\u9664\u7684\u5b57\u7b26\u4e32\u4f4d\u7f6e \n\tfor(int l=1;l<=n;l++)\n\t{\n\t\tint j=l+first-1,k=2*l+first-1;\n\t\tif(k>n) break;\n\t\twhile(k<=n)\n\t\t{\n\t\t\tint lcp=LCP(j,k),lcs=LCS(j,k);\n\t\t\tif(lcp+lcs>l)\n\t\t\t\tfirst=max(first,k-lcp+1);\n\t\t\tj+=l;k+=l;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",n-first+1);//\u6700\u540e\u8981\u51cf\u53bb\u4e4b\u524d\u88ab\u5220\u9664\u7684\u90e8\u5206 \n\tfor(int i=first;i<=n;i++) printf(\"%d \",a[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1595339565,
        "uid": 72043,
        "name": "jdsb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF19C \u3010Deletion of Repeats\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u6765\u6c34\u4e00\u53d1\u9898\u89e3\n\n\u9898\u76ee\u4e2d\u201c\u5b57\u6bcd\u201d\u7684\u8303\u56f4\u662f0-1e9\uff0c\u800cn<=1e5\uff0c\u56e0\u6b64\uff0c\u5148\u5bf9\u201c\u5b57\u7b26\u4e32\u201d\u8fdb\u884c\u79bb\u6563\u5316\n\n\u56e0\u4e3a\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u8d85\u8fc710\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u5f001e5\u4e2avector\u8bb0\u5f55\u6bcf\u4e2a\u201c\u5b57\u6bcd\u201d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u67092\u4e2a\u5b57\u7b26\u4e32\u662f\u91cd\u590d\u7684\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e00\u5b9a\u76f8\u540c\u3002\u679a\u4e3e\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u4ee5\u53ca\u91cd\u590d\u5b57\u7b26\u4e32\u7684\u4e24\u4e2a\u5f00\u59cb\u4f4d\u7f6e\uff0c\u4f7f\u7528**\u54c8\u5e0c**###### \u6765\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u679a\u4e3e\u5b57\u7b261e5\uff0c\u679a\u4e3e\u4e24\u4e2a\u4f4d\u7f6e10*10=100,\u54c8\u5e0c\u5224\u76f8\u7b491\u603b\u51711e7\n\n\u6ce8\u610f:\u957f\u5ea6\u5c0f\u7684\u4f1a\u88ab\u5148\u5220\u6389\uff0c\u7136\u540e\u5c31\u4e0d\u4f1a\u8ddf\u540e\u9762\u91cd\u590d\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nconst int P=20040911;\nint a[N],h[N],p[N],rmp[N],n,cnt,ans;\nvector<int>v[N];\nvector<pair<int,int>>del;\nmap<int,int>mp; \nbool same(int x,int y)\n{\n\tint xe=y-1,ye=2*y-x-1;\n\tif(ye>n)\n\t\treturn false;\n\tint hx=h[xe]-h[x-1]*p[y-x],hy=h[ye]-h[y-1]*p[y-x];\t\n\treturn hx==hy;\t\t\n}\nint main()\n{\n\tp[0]=1;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(mp.find(x)!=mp.end())\n\t\t\ta[i]=mp[x];\n\t\telse\n\t\t{\n\t\t\tmp[x]=++cnt;\n\t\t\ta[i]=cnt;\n\t\t\trmp[cnt]=x;\n\t\t}\n\t\tp[i]=p[i-1]*P;\n\t\tv[a[i]].push_back(i);\n\t\th[i]=h[i-1]*P+a[i];\n\t} \n\tfor(int i=1;i<=cnt;i++)\n\t\tfor(int j=0;j<v[i].size();j++)\n\t\t\tfor(int k=j+1;k<v[i].size();k++)\n\t\t\t\tif(same(v[i][j],v[i][k]))\n\t\t\t\t\tdel.push_back(make_pair(v[i][k]-v[i][j],v[i][j]));\n\tsort(del.begin(),del.end());\n\tfor(int i=0;i<del.size();i++)\n\t\tif(del[i].second>ans)\n\t\t\tans=del[i].second+del[i].first-1;\n\tprintf(\"%d\\n\",n-ans);\n\tfor(int i=ans+1;i<=n;i++)\n\t\tprintf(\"%d \",rmp[a[i]]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\n```",
        "postTime": 1545916030,
        "uid": 67896,
        "name": "AllureLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF19C \u3010Deletion of Repeats\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n\u9996\u5148\u9898\u76ee\u975e\u5e38\u7684\u590d\u6742\uff0c\u7b80\u5316\u4e00\u4e0b\u5c31\u662f\u6bcf\u6b21\u627e\u5230\u6700\u9760\u5de6\u4e14\u957f\u5ea6\u6700\u77ed\u7684\u53ef\u4ee5\u4ece\u4e2d\u95f4\u5206\u6210\u4e24\u4e2a\u76f8\u540c\u90e8\u5206\u7684\u5b50\u4e32\uff0c\u5220\u9664\u5b83\u7684\u524d\u534a\u90e8\u5206**\u53ca\u4ee5\u524d\u7684\u90e8\u5206**\u95ee\u6700\u540e\u4f1a\u5269\u4e0b\u4ec0\u4e48\u3002\n\n\n# \u5206\u6790\n\n\u9996\u5148\uff0c\u9898\u76ee\u4e00\u4e2a\u4e0d\u592a\u5bfb\u5e38\u7684\u9650\u5236\u5f88\u5feb\u5c31\u80fd\u5f15\u8d77\u6ce8\u610f\uff0c\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 $10$ \uff0c\u8fd9\u662f\u4e2a\u5e38\u6570\uff0c\u53ef\u4ee5\u5ffd\u7565\u7684\u90a3\u79cd\uff0c\u8fd9\u6837\u4e5f\u5c31\u542f\u793a\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u51fa\u73b0\u8fc7\u7684\u7684\u5b57\u7b26\uff0c\u7136\u540e\u679a\u4e3e\u4ed6\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b50\u4e32\u8981\u60f3\u4ece\u4e2d\u95f4\u5206\u5f00\uff0c\u8fd9\u6240\u5206\u5f00\u7684\u4e24\u90e8\u5206\u7684\u9996\u5b57\u6bcd\u80af\u5b9a\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u6837\u5c31\u8ba9\u6211\u4eec\u5927\u5927\u51cf\u5c0f\u4e86\u679a\u4e3e\u91cf\uff0c\u8fd9\u6837\u6700\u591a\u53ea\u4f1a\u679a\u4e3e $O(10n)$ \u5bf9\u5b50\u4e32\uff0c\u8fd9\u65f6\u6211\u4eec\u5728\u4e00\u4e2a\u53ef\u63a5\u53d7\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u5b83\u4eec\u540e\u9762\u7684\u4f4d\u7f6e\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\n\n\u8fd9\u5f88\u5bb9\u6613\u4f7f\u7528 hash \u505a\u5230 $O(1)$ \u590d\u6742\u5ea6\uff0c\u5047\u8bbe\u679a\u4e3e\u5230\u4f4d\u7f6e $i,j(i<j)$  \u5219\u6211\u4eec\u8981\u5224\u65ad\u7684\u5c31\u662f $s[i \\cdots j-1]$ \u662f\u5426\u7b49\u4e8e $s[j\\cdots j+j-i]$ \uff0c\u628a\u8fd9\u4e24\u4e2a\u5b50\u4e32\u7684hash\u503c\u63d0\u53d6\u51fa\u6765\u4f5c\u6bd4\u8f83\u5373\u53ef\u3002\u9274\u4e8eCF\u5361 hash \u7684\u4f18\u826f\u4f20\u7edf\uff0c\u8981\u4e0d\u5c31\u8001\u8001\u5b9e\u5b9e\u53cc\u6a21\u6570 hash \u8981\u4e48\u5c31\u53e6\u5bfb\u4ed6\u6cd5\u3002\u5176\u5b9e\u8fd9\u73a9\u610f\u4e5f\u7b49\u4ef7\u4e8e\u4e24\u4e2a\u540e\u7f00 $i,j$ \u7684 lcp \u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $j-i$ \uff0c\u8fd9\u73a9\u610f\u53ef\u4ee5\u7528\u540e\u7f00\u6570\u7ec4+rmq \u505a\u5230 $O(1)$ \u8be2\u95ee\uff0c\u4e8e\u662f\u5c06\u6240\u6709\u627e\u5230\u7684\u4e32\u62ce\u51fa\u6765\u6309\u9898\u76ee\u8981\u6c42\u6392\u4e2a\u5e8f\uff0c\u6a21\u62df\u4e00\u4e0b\u5220\u9664\u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n\u7528\u7684\u540e\u7f00\u6570\u7ec4\uff0c\u5177\u4f53\u5982\u4f55\u7528\u540e\u7f00\u6570\u7ec4\u6c42 lcp\u5c31\u4e0d\u8bc1\u660e\u4e86\uff0c\u7ed3\u8bba\u662f \uff1a\n$$\\operatorname{lcp}(s[i\\cdots n],s[j\\cdots n])=\\min_{k=rk[i]+1}^{rk[j]}\\{height[k]\\}$$\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>\ninline void cmax(T& a,const T& b){a<b?a=b:0;}\ntemplate<typename T>\ninline void cmin(T& a,const T& b){b<a?a=b:0;}\ntypedef long long ll;\ntypedef pair<ll,ll> pii;\ntypedef unsigned long long ull;\ntypedef unsigned int ui;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vii;\n#define X first\n#define Y second\n#define mp make_pair\nconst int mod=998244353;\nconst int MAXN=1e5+10;\nint id[MAXN];\nint cnt[MAXN],x[MAXN],y[MAXN];\nint a[MAXN];\nint sa[MAXN];\nvoid get_sa(int n,int m)\n{\n\tfor(int i=1;i<=n;i++)cnt[x[i]=a[i]]++;\n\tfor(int i=1;i<=m;i++)cnt[i]+=cnt[i-1];\n\tfor(int i=n;i;i--)sa[cnt[x[i]]--]=i;\n\tfor(int k=1;k<=n;k<<=1)\n\t{\n\t\tint p=0; \n\t\tfor(int i=n-k+1;i<=n;i++)y[++p]=i;\n\t\tfor(int i=1;i<=n;i++)if(sa[i]>k)y[++p]=sa[i]-k;\n\t\tfor(int i=1;i<=m;i++)cnt[i]=0;\n\t\tfor(int i=1;i<=n;i++)cnt[x[i]]++;\n\t\tfor(int i=1;i<=m;i++)cnt[i]+=cnt[i-1];\n\t\tfor(int i=n;i;i--)sa[cnt[x[y[i]]]--]=y[i],y[i]=0;\n\t\tswap(x,y);\n\t\tp=x[sa[1]]=1;\n\t\tfor(int i=2;i<=n;i++)x[sa[i]]=(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+k]==y[sa[i-1]+k])?p:++p;\n\t\tif(p==n)break;\n\t\tm=p;\n\t}\n}\nint rk[MAXN],hi[MAXN];\nvoid get_hi(int n)\n{\n\tfor(int i=1;i<=n;i++)rk[sa[i]]=i;\n\tfor(int i=1,k=0;i<=n;i++)\n\t{\n\t\tif(rk[i]==1)continue;\n\t\tif(k)k--;int j=sa[rk[i]-1];\n\t\twhile(i+k<=n&&j+k<=n&&a[i+k]==a[j+k])k++;\n\t\thi[rk[i]]=k;\n\t}\n}\nint F[MAXN][24];\ninline int lcp(int l,int r)\n{\n\tl=rk[l],r=rk[r];\n\tif(l>r)swap(l,r);\n\tl++;\n\tint k=log2(r-l+1);\n\treturn min(F[l][k],F[r-(1<<k)+1][k]);\n}\nint main()\n{\n\tios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);cout<<fixed<<setprecision(20);\n\tint n;cin>>n;\n\tint tt=0;\n\tunordered_map<int,int>mp(n<<1|1);\n\tauto lsh=[&](int& x)\n\t{\n\t\tif(mp.count(x))\n\t\t{\n\t\t\tx=mp[x];\n\t\t}\t\n\t\telse\n\t\t{\n\t\t\tid[++tt]=x;\n\t\t\tmp[x]=tt,x=tt;\n\t\t}\n\t};\n\tvii v(n+1);\n\tfor(int i=1;i<=n;i++)cin>>a[i],lsh(a[i]),v[a[i]].push_back(i);\n\tget_sa(n,n);\n\tget_hi(n);\n\tfor(int i=1;i<=n;i++)F[i][0]=hi[i];\n\tfor(int j=1;1<<j<n;j++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tF[i][j]=min(F[i][j-1],F[i+(1<<(j-1))][j-1]);\n\tvector<pii>res;\n\tfor(int i=1;i<=tt;i++)\n\t{\n\t\tfor(int j=0;j<v[i].size();j++)\n\t\t\tfor(int k=j+1;k<v[i].size();k++)\n\t\t\t{\n\t\t\t\tint x=v[i][j],y=v[i][k];\n\t\t\t\tif(lcp(x,y)>=y-x) res.push_back({y-x,x});\n\t\t\t}\n\t}\t\n\tsort(res.begin(),res.end());\n\tint ans=1;\n\tfor(pii p:res)if(p.Y>=ans)ans=p.X+p.Y;\n\tcout<<n-ans+1<<'\\n';\n\tfor(int i=ans;i<=n;i++)cout<<id[a[i]]<<' ';\n\treturn 0;\n}\n```\n",
        "postTime": 1660041754,
        "uid": 571229,
        "name": "__stick",
        "ccfLevel": 7,
        "title": "CF19C"
    },
    {
        "content": "\u8fd9\u9898\u76ee\u8fd8\u662f\u633a\u6709\u610f\u601d\u7684\u3002\n\n\u9996\u5148\u662f\u9898\u76ee\uff0c\u9898\u76ee\u5927\u6982\u5c31\u662f\u8ba9\u4f60\u5220\u9664\u4ece\u5de6\u5230\u53f3\u5e76\u91cd\u590d\u7684\u5b50\u4e32\u7684\u5de6\u534a\u90e8\u5206\uff0c\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u5c31\u662f\u6bd4\u5982\u5bf9\u4e8e `6 1 5 5 1 5 5`\uff0c`1 5 5 1 5 5 ` \u8fd9\u8fb9\u662f\u4e00\u4e2a\u91cd\u590d\u7684\u5b50\u4e32\uff0c\u4f46\u662f\u9898\u76ee\u4ec5\u4ec5\u8981\u6c42\u5220\u9664\u524d\u534a\u6bb5\u91cd\u590d\u7684\uff0c\u4ee5\u53ca\u5de6\u8fb9\u7684\u6240\u6709\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u8bf4 `6 1 5 5` \u90fd\u8981\u88ab\u5220\u9664\u3002\n\n\u8fd9\u79cd\u9898\u76ee\u5176\u5b9e\u5f88\u5bb9\u6613\u60f3\u5230\u65b9\u6cd5\uff0c\u8003\u8651\u5230\u6bcf\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7 $10$\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u7b2c\u4e00\u4e2a\u6570\u5b57\u6765\u786e\u5b9a\u8981\u5220\u9664\u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u627e\u5230\u4e4b\u540e\u53ef\u4ee5\u7528 hash \u8f7b\u677e\u7684\u5224\u65ad\u662f\u5426\u91cd\u590d\u3002\n\n\u60f3\u5230\u8fd9\u91cc\u9898\u76ee\u5df2\u7ecf\u89e3\u51b3\u4e86\u4e00\u534a\u4e86\uff0c\u4f46\u662f\u8fd8\u5b58\u5728\u5f88\u68d8\u624b\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8bf4\u5b83\u4e00\u5f00\u59cb\u5220\u7684\u662f\u957f\u5ea6\u5c0f\u7684\uff0c\u4ece\u5de6\u5230\u53f3\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b58\u5728\u4e00\u4e9b\u60c5\u51b5\u5b83\u91cd\u590d\u7684\u53ef\u80fd\u4f1a\u4ea4\u53c9\uff0c~~(\u867d\u7136\u8bf4\u6211\u6ca1\u627e\u5230\u5c0f\u6570\u636e\u53cd\u4f8b\uff0c\u4f46\u6211\u7684\u7684\u786e\u786e\u662f WA \u4e86)~~\u3002\n\n\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8003\u8651\u524d\u4e00\u4e2a\u533a\u95f4\u5220\u9664\uff0c\u5982\u679c\u8bf4\u5f53\u524d\u533a\u95f4\u5de6\u7aef\u70b9\u5728\u90a3\u4e2a\u533a\u95f4\u4e0b\uff0c\u76f4\u63a5\u4e0d\u8003\u8651\u3002\n\n\u6ce8\u610f\u8fd9\u8fb9\u8fd8\u8981\u6392\u4e2a\u5e8f\uff0c\u4e0d\u7136\u4e0d\u662f\u6709\u5e8f\u7684\u4e86\u3002\n\n~~\u867d\u7136\u8bf4\u6211\u81ea\u5df1\u8bd5\u4e86\u4e00\u4e0b\uff0c\u4e0d\u6392\u5e8f\u4e5f\u80fd A\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002~~\n\n\u53e6\u5916\uff0c\u8fd9\u9898\u76ee hash \u6a21\u6570\u597d\u50cf\u6ca1\u6709\u7279\u610f\u5730\u5361\u3002\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define int long long\nusing namespace std;\nconst int INF=1e5+5;\nconst int Mod=1e9+7;\nconst int base=233;\nint n,tot,a[INF],ax[INF],num[INF][15],kk[INF],ba[INF],hash1[INF],tota;\nstruct _node_data {\n        int len,id;\n} aa[INF<<4];\nbool gethash(int l,int r) {\n        // cout<<r<<\" \"<<l<<\"\\n\";\n        int len=r-l; int ll=l,rr=l+len-1;\n        int xx=hash1[rr]-hash1[ll-1]*ba[rr-ll+1]%Mod+Mod; xx%=Mod;\n        // cout<<rr<<\" \"<<ll<<\"\\n\";\n        ll=r,rr=r+len-1;\n        int yy=hash1[rr]-hash1[ll-1]*ba[rr-ll+1]%Mod+Mod; yy%=Mod;\n        // cout<<l<<\" \"<<r<<\" \"<<xx<<\" \"<<yy<<\"\\n\";\n        return xx==yy;\n}\nbool cmp(_node_data xx,_node_data yy) {\n        if (xx.len!=yy.len) return xx.len<yy.len;\n        else return xx.id<yy.id;\n}\nsigned main()\n{\n        scanf(\"%lld\",&n);\n        for (int i=1; i<=n; i++)\n                scanf(\"%lld\",&a[i]),ax[i]=a[i];\n        sort(ax+1,ax+1+n);\n        tot=unique(ax+1,ax+1+n)-ax-1;\n        for (int i=1; i<=n; i++) {\n                a[i]=lower_bound(ax+1,ax+1+tot,a[i])-ax;\n                num[a[i]][++kk[a[i]]]=i;\n        }\n        ba[0]=1; for (int i=1; i<=n; i++) ba[i]=ba[i-1]*base%Mod;\n        for (int i=1; i<=n; i++)\n                hash1[i]=(hash1[i-1]*base%Mod+a[i])%Mod;\n        for (int i=1; i<=tot; i++)\n                for (int j=1; j<=kk[i]; j++)\n                        for (int k=j+1; k<=kk[i]; k++)\n                                if (gethash(num[i][j],num[i][k]))\n                                        aa[++tota].len=num[i][k]-num[i][j]+1,aa[tota].id=num[i][j];\n        sort(aa+1,aa+1+tota,cmp);\n        int ans=0;\n        for (int i=1; i<=tota; i++)\n                if (aa[i].id>ans)\n                        ans=aa[i].id+aa[i].len-2;\n        cout<<n-ans<<\"\\n\";\n        for (int i=ans+1; i<=n; i++)\n                cout<<ax[a[i]]<<\" \";\n        return 0;\n}\n\n```\n\n\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u6765\u79c1\u804a\u6211\u54e6\uff01\uff01\uff01",
        "postTime": 1628580302,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF19C \u9898\u89e3"
    }
]