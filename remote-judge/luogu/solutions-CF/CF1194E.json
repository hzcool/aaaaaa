[
    {
        "content": "## Description\n\n\u4e8c\u7ef4\u5750\u6807\u7cfb\u4e0a\u6709 $n$ \u6761\u7ebf\u6bb5\uff0c\u6bcf\u6761\u7ebf\u6bb5\u8fde\u63a5 $(x_{i,1},y_{i,1}),(x_{i,2},y_{i,2})$ \u4e24\u4e2a\u6574\u70b9\uff0c\u4e14\u6240\u6709\u7ebf\u6bb5\u5e73\u884c\u4e8e\u5750\u6807\u8f74\uff0c\u4fdd\u8bc1\u5e73\u884c\u4e8e\u540c\u4e00\u6761\u5750\u6807\u8f74\u7684\u7ebf\u6bb5\u4e0d\u76f8\u4ea4\u3002\u6c42\u8fd9\u4e9b\u7ebf\u6bb5\u80fd\u7ec4\u6210\u591a\u5c11\u4e2a\u77e9\u5f62\u3002\n\n$(1 \\leq n \\leq 5 \\times 10^3,x,y \\in [-5 \\times 10^3,5 \\times 10^3])$\n\n## Solution 1\n\n\u66b4\u529b\u505a\u6cd5\u3002\u5148\u628a\u6a2a\u7ebf\u548c\u7ad6\u7ebf\u5206\u5f00\u5b58\u50a8\uff0c\u6211\u4eec\u53ef\u4ee5 $O(n^2)$ \u9884\u5904\u7406\u51fa\u4e0e\u7b2c $i$ \u6761\u6a2a\u7ebf\u76f8\u4ea4\u7684\u7ad6\u7ebf\u96c6\u5408\u4e3a $f_i$ \u3002\u63a5\u4e0b\u6765\u679a\u4e3e\u77e9\u5f62\u7684\u4e0a\u4e0b\u4e24\u6761\u8fb9\u4e3a\u7b2c $i$ \u6761\u6a2a\u7ebf\u548c\u7b2c $j$ \u6761\u6a2a\u7ebf\uff0c\u90a3\u4e48\u540c\u65f6\u4e0e\u8fd9\u4e24\u6761\u6a2a\u7ebf\u76f8\u4ea4\u7684\u7ad6\u7ebf\u96c6\u5408\u4e3a $f_i \\cap f_j$\uff0c\u5047\u8bbe\u8fd9\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\u4e3a $x$\uff0c\u5219\u80fd\u5f62\u6210 ${\\rm C}_x^2$ \u4e2a\u77e9\u5f62\uff0c\u7d2f\u52a0\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\u663e\u7136\u53ef\u4ee5\u7528 $\\rm bitset$ \u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{n^3}{w})$ \u3002\u4f46\u662f\u8fd9\u6837\u5199\u5f53\u6a2a\u7ebf\u6570\u91cf\u5927\u65f6\u4f1a\u88ab\u5361\u6389\uff0c\u6240\u4ee5\u53ef\u4ee5\u7279\u5224\u4e00\u4e0b\u6a2a\u7ebf\u7ad6\u7ebf\u54ea\u4e2a\u591a\uff0c\u5982\u679c\u6a2a\u7ebf\u8f83\u591a\uff0c \u5c31\u53cd\u8fc7\u6765\u9884\u5904\u7406\u6a2a\u7ebf\u96c6\u5408\uff0c\u679a\u4e3e\u7ad6\u7ebf\u3002\n\n## Code 1\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x = f ? -x : x;\n}\n\ntemplate <class T>\ninline void write(T x) {\n    if (x < 0) {\n        putchar('-');\n        x = -x;\n    }\n    T y = 1;\n    int len = 1;\n    for (; y <= x / 10; y *= 10) ++len;\n    for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\nconst int MAXN = 5e3, MAXM = 2500;\nint n, cnt1, cnt2;\nLL ans;\nstruct Node {\n    int x1, y1, x2, y2;\n} row[MAXN + 5], col[MAXN + 5];\nbitset<MAXN + 5> f[MAXM + 5];\n\nint main() {\n    read(n);\n    for (int x1, y1, x2, y2, i = 1; i <= n; ++i) {\n        read(x1), read(y1), read(x2), read(y2);\n        if (x1 > x2) swap(x1, x2);\n        if (y1 > y2) swap(y1, y2);\n        if (y1 == y2) row[++cnt1] = (Node) { x1, y1, x2, y2 };\n        else col[++cnt2] = (Node) { x1, y1, x2, y2 };//\u5206\u5f00\u5b58\u50a8 \n    }\n    if (cnt1 < cnt2) {//\u7ad6\u7ebf\u8f83\u591a \n        for (int i = 1; i <= cnt1; ++i)\n            for (int j = 1; j <= cnt2; ++j)\n                if (row[i].x1 <= col[j].x1 && row[i].x2 >= col[j].x1 && \n                col[j].y1 <= row[i].y1 && col[j].y2 >= row[i].y2)\n                    f[i][j] = 1;//\u7b2c i \u6761\u6a2a\u7ebf\u4e0e\u7b2c j \u6761\u7ad6\u7ebf\u76f8\u4ea4\n        for (int i = 1; i <= cnt1; ++i)\n            for (int j = i + 1; j <= cnt1; ++j) {\n                int t = (f[i] & f[j]).count();//\u540c\u65f6\u4e0e i,j \u76f8\u4ea4\u7684\u7ad6\u7ebf\u6570\u91cf \n                ans += 1ll * t * (t - 1) >> 1;\n            }\n    } else {//\u6a2a\u7ebf\u8f83\u591a \n        for (int i = 1; i <= cnt1; ++i)\n            for (int j = 1; j <= cnt2; ++j)\n                if (row[i].x1 <= col[j].x1 && row[i].x2 >= col[j].x1 && \n                col[j].y1 <= row[i].y1 && col[j].y2 >= row[i].y2)\n                    f[j][i] = 1;//\u7b2c j \u6761\u6a2a\u7ebf\u4e0e\u7b2c i \u6761\u7ad6\u7ebf\u76f8\u4ea4\n        for (int i = 1; i <= cnt2; ++i)\n            for (int j = i + 1; j <= cnt2; ++j) {\n                int t = (f[i] & f[j]).count();//\u540c\u65f6\u4e0e i,j \u76f8\u4ea4\u7684\u6a2a\u7ebf\u6570\u91cf \n                ans += 1ll * t * (t - 1) >> 1;\n            }\n    }\n    write(ans);\n    putchar('\\n'); \n    return 0;\n}\n```\n\n## Solution 2\n\n\u8003\u8651\u5c06\u6a2a\u7ebf\u6309 $y$ \u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7ad6\u7ebf\u6309\u4e0a\u7aef\u70b9\u7684 $y$ \u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u7136\u540e\u679a\u4e3e\u77e9\u5f62\u4e0b\u9762\u7684\u8fb9\u4e3a\u7b2c $i$ \u6761\u6a2a\u7ebf\uff0c\u628a\u6240\u6709\u4e0e\u8be5\u6a2a\u7ebf\u76f8\u4ea4\u7684\u7ad6\u7ebf\u5b58\u5230\u961f\u5217\u91cc\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u7ad6\u7ebf\u6570\u91cf\u3002\u63a5\u7740\u679a\u4e3e\u77e9\u5f62\u4e0a\u9762\u7684\u8fb9\u4e3a\u7b2c $j$ \u6761\u6a2a\u7ebf\uff08\u5728\u7b2c $i$ \u6761\u6a2a\u7ebf\u7684\u4e0a\u65b9\uff09\uff0c\u5bf9\u4e8e\u961f\u5217\u91cc\u4e0a\u7aef\u70b9\u5728\u7b2c $j$ \u6761\u6a2a\u7ebf\u4e0b\u65b9\u7684\u7ad6\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u628a\u5b83\u5220\u6389\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4e0e\u7b2c $j$ \u6761\u6a2a\u7ebf\u76f8\u4ea4\u3002\u7531\u4e8e\u961f\u5217\u91cc\u7ad6\u7ebf\u7684\u4e0a\u7aef\u70b9\u5355\u8c03\u9012\u589e\uff0c\u8fd9\u6b65\u64cd\u4f5c\u53ef\u4ee5\u7ebf\u6027\u89e3\u51b3\u3002\u5bf9\u4e8e\u6bcf\u5bf9 $i,j$\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u533a\u95f4\u7ad6\u7ebf\u6570\u91cf\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\u6ce8\u610f\u6811\u72b6\u6570\u7ec4\u7684\u4e0b\u6807\u4e0d\u80fd\u4e3a\u975e\u6b63\u6570\uff0c\u6240\u4ee5\u7ed9\u6240\u6709\u521d\u59cb\u5750\u6807\u52a0\u4e0a\u4e00\u4e2a\u8f83\u5927\u7684\u6574\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2 \\log n)$ \u3002\n\n## Code 2\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x = f ? -x : x;\n}\n\ntemplate <class T>\ninline void write(T x) {\n    if (x < 0) {\n        putchar('-');\n        x = -x;\n    }\n    T y = 1;\n    int len = 1;\n    for (; y <= x / 10; y *= 10) ++len;\n    for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\nconst int MAXN = 5e3, MAXM = 1e4 + 1;\nint n, cnt1, cnt2, q[MAXN + 5];\nLL ans;\nstruct Node {\n    int x1, y1, x2, y2;\n    \n    inline friend bool operator<(Node x, Node y) {\n        return x.y2 < y.y2;\n    }\n} row[MAXN + 5], col[MAXN + 5];\nstruct BinaryIndexTree {//\u6811\u72b6\u6570\u7ec4 \n    int ind[MAXM + 5];\n    \n    inline void clear() {\n        memset(ind, 0, sizeof (ind));\n    }\n    inline void add(int x, int p) {\n        for (; x <= MAXM; x += x & -x) ind[x] += p;\n    }\n    inline int query(int x) {\n        int res = 0;\n        for (; x; x -= x & -x) res += ind[x];\n        return res;\n    }\n    inline int query(int l, int r) {\n        return query(r) - query(l - 1);\n    }\n} bit;\n\nint main() {\n    read(n);\n    for (int x1, y1, x2, y2, i = 1; i <= n; ++i) {\n        read(x1), read(y1), read(x2), read(y2);\n        x1 += MAXN + 1, y1 += MAXN + 1, x2 += MAXN + 1, y2 += MAXN + 1;//\u9632\u6b62\u51fa\u73b0\u8d1f\u6570 \n        if (x1 > x2) swap(x1, x2);\n        if (y1 > y2) swap(y1, y2);\n        if (y1 == y2) row[++cnt1] = (Node) { x1, y1, x2, y2 };\n        else col[++cnt2] = (Node) { x1, y1, x2, y2 };\n    }\n    sort(row + 1, row + cnt1 + 1), sort(col + 1, col + cnt2 + 1);\n    for (int i = 1; i <= cnt1; ++i) {//\u679a\u4e3e\u77e9\u5f62\u4e0b\u9762\u7684\u8fb9 \n        bit.clear();//\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4 \n        int tail = 0, k = 1;\n        for (int j = 1; j <= cnt2; ++j)\n            if (row[i].x1 <= col[j].x1 && row[i].x2 >= col[j].x1 && \n            col[j].y1 <= row[i].y1 && col[j].y2 >= row[i].y2) {\n                //\u4e0e\u7b2c i \u6761\u6a2a\u7ebf\u76f8\u4ea4 \n                bit.add(col[j].x1, 1);//\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539 \n                q[++tail] = j;//\u5b58\u5165\u961f\u5217 \n            }\n        for (int j = i + 1; j <= cnt1; ++j) {//\u679a\u4e3e\u77e9\u5f62\u4e0a\u9762\u7684\u8fb9 \n            for (; col[q[k]].y2 < row[j].y1 && k <= tail; ++k)// k \u5355\u8c03\u9012\u589e \n                bit.add(col[q[k]].x1, -1);//\u5220\u53bb\u961f\u5217\u4e2d\u4e0d\u4e0e j \u76f8\u4ea4\u7684\u7ad6\u7ebf\n            int l = max(row[i].x1, row[j].x1), r = min(row[i].x2, row[j].x2);\n            if (l < r) {//\u4e24\u6761\u7ebf\u6bb5\u6709\u4ea4 \n                int res = bit.query(l, r);//[l, r] \u533a\u95f4\u5185\u7684\u7ad6\u7ebf\u80fd\u4e0e i,j \u7ec4\u6210\u77e9\u5f62 \n                ans += 1ll * res * (res - 1) / 2;//\u7edf\u8ba1\u7b54\u6848 \n            }\n        }\n    }\n    write(ans);\n    putchar('\\n');\n    return 0;\n}\n```\n\n",
        "postTime": 1563264316,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1194E \u3010Count The Rectangles\u3011"
    },
    {
        "content": "\u8003\u8651\u56fa\u5b9a\u4e24\u6761\u6a2a\u5411\u76f4\u7ebf\uff0c\u8bbe\u4e0e\u5b83\u4eec\u76f8\u4ea4\u7684\u7eb5\u5411\u76f4\u7ebf\u6570\u91cf\u4e3a $x$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\displaystyle\\sum\\frac{x(x-1)}2$\uff0c\uff08\u5f53\u7136\u53cd\u8fc7\u6765\u7528\u7eb5\u5411\u76f4\u7ebf\u4e5f\u53ef\u4ee5\u554a\uff09\u3002\n\n\u679a\u4e3e\u76f4\u7ebf\u590d\u6742\u5ea6\u5df2\u7ecf\u662f $n^2$\uff0c\u6211\u4eec\u8003\u8651\u6570\u7684\u90a3\u6b65\u600e\u4e48\u505a\u3002\u53ef\u4ee5\u8f6c\u6570\u70b9\u6a21\u578b\uff08\u5417\uff09\uff0c\u4f46\u662f\u6ca1\u5fc5\u8981\u3002\n\n\u8003\u8651\u5efa\u7acb `bitset` \u5b58\u4e00\u6761\u76f4\u7ebf\u4e0e\u5176\u4ed6\u76f4\u7ebf\u7684\u76f8\u4ea4\u60c5\u51b5 $0/1$\u3002\u7136\u540e\u4e0e\u4e24\u6761\u76f4\u7ebf\u90fd\u76f8\u4ea4\u5c31\u662f `bitset` \u7684 `and`\uff0c\u7136\u540e\u6570 $1$ \u7684\u4e2a\u6570\u5c31\u662f `count()`\u3002\n\n\u603b\u590d\u6742\u5ea6 $O\\left(\\dfrac{n^3}w\\right)$\uff0c\u53d1\u73b0\u9650\u5236\u5f88\u7d27\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5728\u6a2a\u5411\u76f4\u7ebf\u591a\u7684\u65f6\u5019\uff0c\u679a\u4e3e\u7eb5\u5411\u76f4\u7ebf\uff0c\u5426\u5219\u679a\u4e3e\u6a2a\u5411\u76f4\u7ebf\u3002\n\n\u4e8e\u662f $n$ \u7684\u5927\u5c0f\u76f8\u5f53\u4e8e\u88ab\u4f18\u5316\u6389\u4e86\u4e00\u534a\uff0c\u6548\u679c\u663e\u8457\u554a\uff08\u559c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 5e3 + 5;\n\nint n; long long res = 0;\nint l1,x[N],xi[N],yl[N],yr[N];\nint l2,y[N],yi[N],xl[N],xr[N];\nbitset<N> t[N];\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int x1,x2,y1,y2,i = 1;i <= n;++i){\n\t\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\t\tif(x1 > x2) swap(x1,x2); if(y1 > y2) swap(y1,y2);\n\t\tif(x1 == x2) x[++l1] = x1,xi[l1] = i,yl[l1] = y1,yr[l1] = y2;\n\t\tif(y1 == y2) y[++l2] = y1,yi[l2] = i,xl[l2] = x1,xr[l2] = x2;\n\t}\n\tif(l1 < l2){\n\t\tfor(int i = 1;i <= l1;++i)\n\t\t\tfor(int j = 1;j <= l2;++j)\n\t\t\t\tif(xl[j] <= x[i] && x[i] <= xr[j])\n\t\t\t\t\tif(yl[i] <= y[j] && y[j] <= yr[i]) t[i][yi[j]] = 1;\n\t\tfor(int i = 1;i <= l1;++i)\n\t\t\tfor(int j = i + 1;j <= l1;++j){\n\t\t\t\tint x = (t[i] & t[j]).count();\n\t\t\t\tres += x * (x - 1) / 2;\n\t\t\t}\n\t} else {\n\t\tfor(int i = 1;i <= l1;++i)\n\t\t\tfor(int j = 1;j <= l2;++j)\n\t\t\t\tif(xl[j] <= x[i] && x[i] <= xr[j])\n\t\t\t\t\tif(yl[i] <= y[j] && y[j] <= yr[i]) t[j][xi[i]] = 1;\n\t\tfor(int i = 1;i <= l2;++i)\n\t\t\tfor(int j = i + 1;j <= l2;++j){\n\t\t\t\tint x = (t[i] & t[j]).count();\n\t\t\t\tres += x * (x - 1) / 2;\n\t\t\t}\n\t}\n\tprintf(\"%lld\\n\",res);\n\treturn 0;\n}\n```",
        "postTime": 1683100606,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF1194E Count The Rectangles"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u5148\u679a\u4e3e\u4e24\u6761\u6a2a\u7ebf\uff0c\u4ed6\u4eec\u662f\u4e0d\u76f8\u4ea4\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u6240\u9700\u8981\u8ba1\u7b97\u7684\u5373\u4e3a\u548c\u4ed6\u4eec\u6709\u4ea4\u7684\u7ad6\u7ebf\u3002\n\n~~\u8fd9\u4e2a\u95ee\u9898\u662f\u5178\u578b\u7684\u504f\u5e8f\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u4e4b\u7c7b\u7684\u641e\uff0c\u4f46\u662f\u6211\u6bd4\u8f83\u50bb\u4e0d\u592a\u4f1a\u505a\u3002~~\n\n\u56e0\u6b64\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6876\u4e00\u6837\u7684\u8bb0\u5f55\u8fd9\u4e2a\u6a2a\u7ebf\u4e0e\u7ad6\u7ebf\u54ea\u4e2a\u76f8\u4ea4\u4e86\uff0c\u518d\u53d6\u4ed6\u4eec\u7684\u4ea4\u96c6\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u6876\u7528 bitset \u6765\u5b9e\u73b0\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e9b\u7ec6\u8282\u5c31\u662f\u5224\u65ad\u662f\u5426\u6709\u4ea4\u7684\u65f6\u5019\uff0c\u7ad6\u7ebf\u7684 $x$ \u8981\u5728\u6a2a\u7ebf\u4e4b\u95f4\uff0c\u6a2a\u7ebf $y$ \u8981\u5728\u7ad6\u7ebf\u4e4b\u95f4\u3002\n\n\u540c\u65f6\uff0c\u8fd9\u6837\u5199\u53ef\u80fd\u4f1a\u88ab\u5361\u5e38\uff0c\u6240\u4ee5\u8981\u624b\u52a8\u5f00\u4e00\u4e0b O2\uff0c\u6216\u8005\u6a2a\u7ad6\u7ebf\u8f6c\u6362\u3002\n\n\u6211\u7684\u4ee3\u7801\u91cc\u6ca1\u5199 O2\uff0c\u8981\u7528\u8fd9\u79cd\u65b9\u6cd5\u8fc7\u9898\u7684\u540c\u5b66\u8bf7\u81ea\u884c\u5f00\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\frac{n^3}{w})$ \u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <bitset>\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\nusing namespace std;\nconst int INF=5e3+5;\nstruct _node_data{\n\tint x,y,xx,yy;\n}aa[INF],bb[INF];\nint n,tot1,tot2;\nbitset<INF> f[INF];\nsigned main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++) {\n\t\tint x=0,y=0,xx=0,yy=0;\n\t\tx=read();y=read();xx=read();yy=read();\n\t\tif (y>yy) swap(y,yy);\n\t\tif (x>xx) swap(x,xx);\n\t\tif (y==yy) aa[++tot1]=(_node_data){x,y,xx,yy};\n\t\telse bb[++tot2]=(_node_data){x,y,xx,yy};\n\t}\n\tfor (int i=1;i<=tot1;i++) {\n\t\tfor (int j=1;j<=tot2;j++) {\n\t\t\tif (aa[i].x<=bb[j].x && bb[j].x<=aa[i].xx) \n\t\t\t\tif (bb[j].y<=aa[i].y && aa[i].y<=bb[j].yy) {\n\t\t\t\t\tf[i][j]=1;\n\t\t\t\t} \n\t\t}\n\t}\n\tlong long ans=0;\n\tfor (int i=1;i<=tot1;i++)\n\t\tfor (int j=i+1;j<=tot1;j++) {\n\t\t\tlong long xx=(f[i]&f[j]).count();\n\t\t\tans+=xx*(xx-1)/2;\n\t\t}\n\tcout<<ans<<\"\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1662077739,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF1194E"
    },
    {
        "content": "\u9898\u610f:\u7ed9\u82e5\u5e72**\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u7684**\u7ebf\u6bb5\uff0c\u6570\u77e9\u5f62\u4e2a\u6570\n\n\u770b\u5230\u9898\uff0c\u7136\u540e\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u4f18\u79c0\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u9996\u5148\u679a\u4e3e\u4e24\u6761\u6a2a\u7ebf\u3002\n\n\u7136\u540e\u6570\u4e00\u4e0b\u540c\u65f6\u7a7f\u8fc7\u8fd9\u4e24\u6761\u6a2a\u7ebf\u7684\u6709\u591a\u5c11\u4e2a\u7ad6\u7ebf\uff0c\u663e\u7136\u53ef\u4ee5\u7528 $\\binom{2}{cnt}$ \u6765\u8ba1\u7b97\u4e2a\u6570\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528 bitset \u4f18\u5316\u3002\n\n\u6709\u70b9\u5361\u5e38\u3002\n\n\u53ef\u4ee5\u8003\u8651\u624b\u5199 bitset \u6216\u8005\u6bcf\u6b21\u90fd\u53d8\u6362\u6a2a\u7ebf\u7ad6\u7ebf\uff08\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n[code](https://codeforces.ml/contest/1194/submission/98177803)",
        "postTime": 1605165780,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1194E \u3010Count The Rectangles\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7 **\u975e\u6b63\u89e3** \uff0c\u5efa\u8bae\u770b\u5b8c\u6807\u7b97\u518d\u98df\u7528\uff08\u96fe\n\n\u4ee4 $n1=$ \u5e73\u884c\u4e8e $y$ \u8f74\u7684\u7ebf\u6bb5\u6570\uff0c $n2=$ \u5e73\u884c\u4e8e $x$ \u8f74\u7684\u7ebf\u6bb5\u6570\n\n\u8003\u8651\u4efb\u610f\u4e24\u6761\u5e73\u884c\u4e8e $y$ \u8f74\u7684\u7ebf\u6bb5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u4ee4 $s=$ \u540c\u65f6\u4e0e\u4e24\u6761\u7ebf\u6bb5\u76f8\u4ea4\u7684\u5e73\u884c\u4e8e $x$ \u8f74\u7684\u7ebf\u6bb5\u6570\uff0c\u8d21\u732e\u5373\u4e3a $\\frac{s(s-1)}{2}$\n\n\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u6bcf\u4e24\u6761\u5e73\u884c\u4e8e $y$ \u8f74\u7684\u7ebf\u6bb5\uff0c\u7edf\u8ba1\u7b54\u6848\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u6761\u5e73\u884c\u4e8e $y$ \u8f74\u7684\u7ebf\u6bb5\uff0c\u9884\u5904\u7406\u4e0e\u4e4b\u76f8\u4ea4\u7684\u5e73\u884c\u4e8e $x$ \u8f74\u7684\u7ebf\u6bb5\u5e76\u7528 bitset \u5b58\u50a8\uff0c\u4e4b\u540e\u66b4\u529b bitset \u64cd\u4f5c\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\frac{n^3}{w})$ \uff0c\u4ecd\u7136\u8dd1\u4e0d\u8fc7\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u6bcf\u6b21 bitset \u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $\\frac{5000}{w}$ \u7684\uff0c\u800c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1 bitset \u524d $n2$ \u4f4d\uff0c\u53ef\u4ee5\u8003\u8651 **\u624b\u5199** bitset\n\n\u8003\u8651\u8fd9\u6837\u505a\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u628a $n1$ \u53d6\u5230 $3333$ \uff0c\u5927\u6982\u4f1a\u8dd1 $3333^2\\times(5000-3333)/64/2\\approx1.4\\times10^8$ \u6b21~~\uff0ccf\u673a\u5b50\u4e24\u79d2\u5b8c\u5168\u4e0d\u865a~~\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\frac{n^3}{w})$\n\n\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 5010;\nint n, n1, n2, tot;\n\nstruct node1 {\n  int x, y1, y2;\n} a[maxn];\n\nstruct node2 {\n  int x1, x2, y;\n} b[maxn];\n\ntypedef unsigned long long u64;\n\nstruct Bitset {\n  u64 s[maxn >> 6];\n\n  inline void set(int x) {\n    s[x >> 6] |= 1llu << (x & 63);\n  }\n} tmp, f[maxn];\n\ninline int add(int x, int y) {\n  int ans = 0;\n  for (register int i = 0; i <= tot; ++i) {\n    ans += __builtin_popcountll(f[x].s[i] & f[y].s[i]);\n  }\n  return ans;\n}\n\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    int x1, x2, y1, y2;\n    scanf(\"%d %d %d %d\", &x1, &y1, &x2, &y2);\n    if (x1 == x2) {\n      if (y1 > y2) swap(y1, y2);\n      a[++n1] = node1{x1, y1, y2};\n    } else {\n      if (x1 > x2) swap(x1, x2);\n      b[++n2] = node2{x1, x2, y1};\n    }\n  }\n  tot = n2 >> 6;\n  for (int i = 1; i <= n1; ++i) {\n    for (int j = 1; j <= n2; ++j) {\n      if (b[j].x1 <= a[i].x && a[i].x <= b[j].x2 && a[i].y1 <= b[j].y && b[j].y <= a[i].y2) {\n        f[i].set(j);\n      }\n    }\n  }\n  long long ans = 0;\n  for (int i = 1; i < n1; ++i) {\n    for (int j = i + 1; j <= n1; ++j) {\n      int s = add(i, j);\n      ans += s * (s - 1);\n    }\n  }\n  printf(\"%I64d\", ans >> 1);\n  return 0;\n}\n```",
        "postTime": 1563175430,
        "uid": 73934,
        "name": "Juanzhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1194E \u3010Count The Rectangles\u3011"
    }
]