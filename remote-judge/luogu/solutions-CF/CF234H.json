[
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5012\u662f\u505a\u4e86\u6211\u4e0d\u5c11\u7684\u65f6\u95f4\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u6765\u8003\u8651\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u64cd\u4f5c $2$ \u6765\u8bf4\uff0c\u82e5\u5e8f\u5217\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u90a3\u4e48\u5b83\u4ea7\u751f\u7684\u8d21\u732e\u5373\u4e3a\u76f8\u90bb\u4e14\u6570\u503c\u4e0d\u540c\u7684\u5bf9\u6570\u3002\n\n\u8fd9\u4e2a\u5e94\u8be5\u5f88\u597d\u8bc1\uff0c\u5c31\u4f60\u8003\u8651\u5f53\u524d\u4f60\u78b0\u5230\u4e00\u4e2a\u76f8\u90bb\u4e14\u6570\u503c\u4e0d\u540c\u7684\u4f60\u5fc5\u987b\u8981\u5148\u628a\u524d\u9762\u7684\u4e00\u5927\u5806\u90fd\u7ed9\u7ffb\u8fc7\u6765\u624d\u884c\u3002\n\n\u5f53\u7136\uff0c\u6700\u540e\u4e00\u4e2a\u5fc5\u987b\u662f $0$\uff0c\u5982\u679c\u4e0d\u662f\u8fd8\u8981\u518d\u7ffb\u8fc7\u6765\uff0c\u64cd\u4f5c\u6b21\u6570\u8981 $+1$\u3002\n\n\u7136\u540e\u5462\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5408\u5e76\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6392\u5e8f\uff0c\u4e8e\u662f\u6211\u5c31\u6bd4\u8f83\u8d2a\u5fc3\u7684\u60f3\u4e86\u4e00\u60f3\uff0c\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u662f\u653e\u5728\u76f8\u540c\u7684\u5de6\u53f3\u6700\u4f18\uff0c\u6240\u4ee5\u4ee5 $a$ \u6570\u5217\u4e3a\u57fa\u51c6\uff0c\u5c06 $b$ \u6570\u5217\u653e\u8fdb\u53bb\uff0c\u5982\u679c\u8fd8\u6709\u6ca1\u586b\u5b8c\u7684\u76f4\u63a5\u6254\u5230\u6700\u540e\u3002\n\n\u7136\u800c\u6211\u4eec\u53d1\u73b0\uff0c\u6837\u4f8b\u4e8c\u7adf\u7136\u795e\u5947\u7684\u9519\u6389\u4e86\u3002\n\n```\n5\n1 1 1 1 1\n5\n0 1 0 1 0\n```\n\n\u6309\u7167\u6211\u4eec\u8d2a\u5fc3\u7684\u60f3\u6cd5\uff0c\u6784\u9020\u51fa\u6765\u7684\u5e8f\u5217\u5982\u4e0b\uff1a\n\n```\n1 1 1 1 1 0 1 0 1 0\n```\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u7adf\u7136\u53d8\u52a3\u4e86\uff0c\u663e\u7136\u5c06\u7b2c\u4e00\u4e2a $0$ \u653e\u5728\u6700\u524d\u9762\u662f\u6700\u4f18\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u5927\u80c6\u7684\u731c\u6d4b\u4e00\u4e0b\uff0c\u8d2a\u5fc3\u5e94\u8be5\u662f\u5bf9\u7684\uff0c\u53ea\u4e0d\u8fc7\u8981\u52a0\u70b9\u4f18\u5316\uff0c~~\u5b9e\u9645\u4e0a\u6211\u662f\u770b\u4e86\u4e00\u773c CF \u6807\u7b7e\u6709\u4e00\u4e2a `greedy` \u624d\u89c9\u5f97\u662f\u5bf9\u7684\u3002~~\n\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u4e4b\u524d\u9519\u8bef\u7684\u539f\u56e0\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e $a$ \u6570\u5217\u6765\u8bb2\uff0c\u540e\u9762\u8ddf\u7740 `0` \u663e\u7136\u662f\u5f88\u4e0d\u5212\u7b97\u7684\uff0c\u6211\u4eec\u60f3\u529e\u6cd5\u5c06\u5b83\u63d2\u5230 `1` \u65c1\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7701\u53bb\u4e00\u4e2a\u64cd\u4f5c\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53c8\u6709\u4e86\u65b0\u7684\u60f3\u6cd5\uff0c\u4ee5 $a$ \u6570\u5217\u4e3a\u57fa\u51c6\uff0c$b$ \u6570\u5217\u63d2\u8fdb\u53bb\uff0c\u7136\u540e $a$ \u548c $b$ \u4ea4\u6362\u4e00\u4e0b\u518d\u641e\u4e00\u904d\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u597d\u50cf\u633a\u5bf9\u7684\uff1f\n\n\u4e25\u8c28\u7684\u8bc1\u660e\u672c\u849f\u84bb\u4e0d\u4f1a\uff0c\u53ea\u4f1a\u778e\u53e3\u80e1\uff0c\u8fc7\u4e86\u6837\u4f8b\u518d\u624b\u73a9\u4e00\u4e0b\u53d1\u73b0\u633a\u5bf9\u7684\uff0c\u5c31\u5199\u4e86\uff0c\u5728\u8003\u573a\u4e0a\u53ef\u4ee5\u5199\u4e00\u4e2a $O(2^n \\times n)$ \u7684\u66b4\u529b\u5bf9\u62cd\u4e00\u4e0b\uff0c\u770b\u770b\u6709\u6ca1\u6709\u53cd\u4f8b\u3002\n\n\u7136\u540e\u6ce8\u610f\u4e00\u4e0b `freopen` \u7684\u95ee\u9898\u5373\u53ef\u3002\n\n\u5982\u6709\u95ee\u9898\u8fd8\u8bf7\u6307\u51fa\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int INF=1e6+5;\nint n,m,a[INF],b[INF],la[INF][2],c[INF],tot,ans,ans1[INF][2];\nint d[INF][5],tot1,ans11;\nsigned main()\n{\n    // freopen(\"input.txt\",\"r\",stdin);\n    // freopen(\"output.txt\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    scanf(\"%d\",&m);\n    for (int i=1;i<=m;i++)\n        scanf(\"%d\",&b[i]);\n    la[n][0]=la[n][1]=n+1;\n    for (int i=n-1;i>=1;i--) {\n        la[i][0]=la[i+1][0];\n        la[i][1]=la[i+1][1];\n        la[i][a[i]]=i;\n    }\n    int j=1,i=1;int fl=0;\n    for (i=1;i<=n;) {\n        while (b[j]==a[i] && j<=m) {\n            c[++tot]=b[j];\n            d[++tot1][0]=j+n;\n            j++;\n        }\n        if (j>m) break;\n        int len=la[i][b[j]];\n        if (len>n) len=n;\n        int l=0;if (i==1) l=1;else l=i+1;\n        for (int k=l;k<=len;k++) {\n            c[++tot]=a[k];\n            d[++tot1][0]=k;\n        }\n        i=la[i][b[j]];\n        fl=1;\n    }\n    if (fl) i++;\n    while (j<=m) c[++tot]=b[j],d[++tot1][0]=j+n,j++;\n    while (i<=n) c[++tot]=a[i],d[++tot1][0]=i,i++;\n    for (int i=1;i<=tot;i++)\n        if (c[i]!=c[i+1]) ans1[++ans][0]=i;\n    // cout<<ans<<\"\\n\";\n    la[m][0]=la[m][1]=m+1;\n    for (int i=m-1;i>=1;i--) {\n        la[i][0]=la[i+1][0];\n        la[i][1]=la[i+1][1];\n        la[i][b[i]]=i;\n    }\n    tot1=tot=0;\n    j=1,i=1;fl=0;\n    for (i=1;i<=m;) {\n        while (b[i]==a[j] && j<=n) {\n            c[++tot]=a[j];\n            d[++tot1][1]=j;\n            j++;\n        }\n        if (j>n) break;\n        int len=la[i][a[j]];\n        if (len>m) len=m;\n        int l=0;if (i==1) l=1;else l=i+1;\n        for (int k=l;k<=len;k++) {\n            c[++tot]=b[k];\n            d[++tot1][1]=k+n;\n        }\n        i=la[i][a[j]];\n        fl=1;\n        // cout<<i<<\" \"<<j<<\"\\n\";\n    }\n    // for (int i=1;i<=tot;i++)\n    //     cout<<c[i]<<\" \";\n    // cout<<\"\\n\";\n    if (fl) i++;\n    while (j<=n) c[++tot]=a[j],d[++tot1][1]=j,j++;\n    while (i<=m) c[++tot]=b[i],d[++tot1][1]=i+n,i++;\n    // for (int i=1;i<=tot;i++)\n    //     cout<<c[i]<<\" \";\n    for (int i=1;i<=tot;i++)\n        if (c[i]!=c[i+1]) ans1[++ans11][1]=i;\n    if (ans>ans11) {\n        for (int i=1;i<=tot1;i++)\n            cout<<d[i][1]<<\" \";\n        cout<<\"\\n\"<<ans11<<\"\\n\";\n        for (int i=1;i<=ans11;i++)\n            cout<<ans1[i][1]<<\" \";\n        cout<<\"\\n\";\n    } \n    else {\n        for (int i=1;i<=tot1;i++)\n            cout<<d[i][0]<<\" \";\n        cout<<\"\\n\"<<ans<<\"\\n\";\n        for (int i=1;i<=ans;i++)\n            cout<<ans1[i][0]<<\" \";\n        cout<<\"\\n\";\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1643545022,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF234H"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u6709\u4e24\u53e0\u6251\u514b\u724c\uff0c\u6211\u4eec\u9996\u5148\u8981\u5c06\u4ed6\u4eec\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u6bcf\u5f20\u6251\u514b\u724c\u90fd\u67090 1\u4e24\u9762\u3002\u901a\u8fc7\u53cd\u8f6c\u53ef\u4ee5\u5c060 \u4e0e 1\u4ea4\u6362\uff0c\u95ee\u6700\u5c11\u591a\u5c11\u64cd\u4f5c\u53ef\u4ee5\u5c06\u6251\u514b\u724c\u76840\u5168\u90e8\u671d\u4e0a\uff0c\u5408\u5e76\u89c4\u5219\uff1a\u4fdd\u6301\u6bcf\u4e00\u53e0\u7684\u76f8\u5bf9\u987a\u5e8f\u4e0d\u53d8\uff0c\u53cd\u8f6c\u7684\u89c4\u5219\u662f\uff1a\u4ece\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u524d\u9762\u7684\u5168\u90e8\u90fd\u53cd\u8f6c\uff1f\n\n\u601d\u8def\uff1a\u8d2a\u5fc3\u3002\u5408\u5e76\u7684\u65f6\u5019\uff0c\u4ee5\u7b2c\u4e00\u53e0\u724c\u7684\u7b2c\u4e00\u5f20\u4e3a\u57fa\u51c6\u5f62\u6210\u60c5\u51b51 frm\uff0c\u4ee5\u7b2c\u4e8c\u53e0\u724c\u7b2c\u4e00\u5f20\u4e3a\u57fa\u51c6\u5f62\u6210\u60c5\u51b52 lat.\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u60c5\u51b5\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u53e0\u7684\u5f53\u524d\u724c\u662f\u76f8\u540c\u72b6\u6001\u5c31\u76f4\u63a5\u653e\u8fdb\uff0c\u4e0d\u7136\u653e\u53e6\u5916\u4e00\u53e0\u724c\u7684\u5f53\u524d\u724c\uff0c\u529b\u6c42\u6700\u76f8\u540c\u8fde\u7eed\u3002\u8fd9\u6837\u5c31\u5f97\u51fa\u4e24\u4e2a\u60c5\u51b5\u5bf9\u53e0\u540e\u7684\u4e00\u526f\u724c\u5566\u3002\u4e4b\u540e\u5c31\u4ece\u5934\u5f00\u59cb\u53cd\u8f6c\uff0c\u4e0d\u540c\u5c31\u7ffb\u8f6c\uff0c\u6700\u540e\u4f7f\u5f97\u6240\u6709\u7684\u724c\u90fd\u4e00\u6837\u72b6\u6001\uff0c\u6b64\u65f6\u5982\u679c\u662f1\u72b6\u6001\uff0c\u5c31\u518d\u505a\u4e00\u6b21\u53cd\u8f6c\u3002\u8fd9\u6837\u5f97\u51fa\u7684\u7ed3\u679c\u662f\u6700\u4f18\u7684\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u81ea\u5df1\u60f3\u8c61\u3002\n\ncode\uff1a\uff08\u52ff\u55b7\uff0c\u7801\u98ce\u8f83\u4e11\uff09\n```cpp\ninclude<bits/stdc++.h> \nusing namespace std;  \nclass Pair  \n{  \npublic:  \n    int ind,stat;  \n    Pair() {};  \n    Pair & operator =(Pair rhs)  \n    {  \n        this->ind=rhs.ind;  \n        this->stat=rhs.stat;  \n        return *this;  \n    }  \n};  \nint main()  \n{   freopen(\"input.txt\",\"r\",stdin);  \n    freopen(\"output.txt\",\"w\",stdout);  \n    int n,m,i,j,cntf,cntl,a_i,b_i,f_i,l_i;  \n    vector<Pair> a,b,frm,lat;\n    while(cin>>n)  \n    {  \n        a.clear();b.clear();frm.clear();lat.clear();a.resize(n);  \n        for(i=0; i<n; i++)  \n        {  \n            cin>>j;  \n            a[i].ind=i+1;  \n            a[i].stat=j;  \n        }  \n        cin>>m;  \n        b.resize(m);  \n        frm.resize(n+m);  \n        lat.resize(n+m);  \n        for(i=0; i<m; i++)  \n        {  \n            cin>>j;  \n            b[i].ind=n+i+1;  \n            b[i].stat=j;  \n        }  \n        frm[0]=a[0];f_i=0;a_i=1;b_i=0;  \n        while(f_i<n+m-1)  \n        {  \n            if((a_i<n&&frm[f_i].stat==a[a_i].stat)||b_i==m)  \n            {  \n                f_i++;  \n                frm[f_i]=a[a_i];  \n                a_i++;  \n            }  \n            else  \n            {  \n                f_i++;  \n                frm[f_i]=b[b_i];  \n                b_i++;  \n            }  \n        }  \n        lat[0]=b[0];l_i=0;a_i=0;b_i=1;  \n        while(l_i!=n+m-1)  \n        {  \n            if((b_i<m&&lat[l_i].stat==b[b_i].stat)|| (a_i==n))  \n            {  \n                l_i++;  \n                lat[l_i]=b[b_i];  \n                b_i++;  \n            }  \n            else  \n            {  \n                l_i++;  \n                lat[l_i]=a[a_i];  \n                a_i++;  \n            }  \n        }  \n        cntf=cntl=0;  \n        int stat=frm[0].stat;  \n        for(f_i=1; f_i<n+m; f_i++)  \n        {  \n            if(frm[f_i].stat!=stat)  \n            {  \n                stat=frm[f_i].stat;  \n                cntf++;  \n            }  \n        }  \n        if(stat==1)  \n            cntf++;  \n        stat=lat[0].stat;  \n        for(l_i=1; l_i<n+m; l_i++)  \n        {  \n            if(lat[l_i].stat!=stat)  \n            {  \n                stat=lat[l_i].stat;  \n                cntl++;  \n            }  \n        }  \n        if(stat==1)  \n            cntl++;  \n        if(cntl<cntf)  \n        {  \n            for(i=0;i<n+m;i++)\n                cout<<lat[i].ind<<\" \";  \n            cout<<endl<<cntl<<endl;  \n            stat=lat[0].stat;  \n            for(l_i=1; l_i<n+m; l_i++)  \n            {  \n                if(lat[l_i].stat!=stat)  \n                {  \n                    stat=lat[l_i].stat;  \n                    cout<<l_i<<\" \";  \n                }  \n            }  \n            if(stat==1)  \n                cout<<l_i;  \n            cout<<endl;  \n        }  \n        else  \n        {  \n            for(i=0;i<n+m;i++) \n                cout<<frm[i].ind<<\" \"; \n            cout<<endl<<cntf<<endl;  \n            stat=frm[0].stat;  \n            for(f_i=1; f_i<n+m; f_i++)  \n            {  \n                if(frm[f_i].stat!=stat)  \n                {  \n                    stat=frm[f_i].stat;  \n                    cout<<f_i<<\" \";  \n                }  \n            }  \n            if(stat==1)  \n                cout<<f_i<<\" \";  \n             cout<<endl;  \n        }\n    }  \n    return 0;  \n}  \n```\n",
        "postTime": 1566272891,
        "uid": 132290,
        "name": "\u5f00\u59cb\u65b0\u7684\u8bb0\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF234H \u3010Merging Two Decks\u3011"
    }
]