[
    {
        "content": "~~\u62ff\u5230\u9898\u7b2c\u4e00\u773c\u5c31\u5e94\u8be5\u89c2\u5bdf\u51fa\u662f\u4e2a\u8d2a~~\n\n\u663e\u7136\uff0c\u4e24\u4eba\u7684\u9009\u62e9\u53ea\u4f1a\u5c3d\u91cf\u5f80\u4ef7\u683c\u5c0f\u7684\u9009\uff0c\u800c\u9009\u5c0f\u7684\u4e0d\u4f1a\u5bf9\u4ef7\u683c\u5927\u7684\u8d21\u732e\u4ea7\u751f\u5f71\u54cd\u3002\n\n~~\u7b2c\u4e00\u773c\u4e5f\u5f97\u770b\u51fa\u4fe9\u4eba\u90fd\u4e0d\u559c\u6b22\u5c31\u5f97\u4e22\u4e86~~\n\n\u4e00\u5f00\u59cb\u5bb9\u6613\u60f3\u5230\u5bf9\u4e24\u4e2a\u4eba\u90fd\u559c\u6b22\u7684\u505a\u524d\u7f00\u548c\uff0c\u7136\u540e\u4e8c\u5206\u9009\u62e9\u4e24\u4eba\u90fd\u559c\u6b22\u7684\u4e4b\u540e\u8d2a\u5fc3\u53bb\u9009\u53ea\u6709\u4e00\u4e2a\u4eba\u559c\u6b22\u7684\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e8c\u5206\u5176\u5b9e\u4e0d\u5b58\u5728\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u4e8c\u5206\u601d\u8def\u662f\u9519\u7684\u3002\n\n\u7ee7\u7eed\u5206\u6790\uff0c\u8fd9\u9898\u7531\u4e8e\u4e24\u4eba\u5747\u8981\u9009 k \u4e2a\u559c\u6b22\u7684\uff0c\u6240\u4ee5\u7b54\u6848\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\uff1a\n\n```\n\u9009 a \u672c\u4e24\u4eba\u90fd\u559c\u6b22\u7684\uff0c\u7136\u540e\u4e24\u4eba\u5404\u81ea\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684 n-a \u672c\u4e66\n\u8fd9\u4e2a a \u53ef\u4ee5\u4e3a0\n```\n\n\u90a3\u4e48\u6211\u4eec\u9009\u7684\u4e66\u80af\u5b9a\u8981\u5c3d\u53ef\u80fd\u4ef7\u683c\u5c0f\u3002\n\n\u53c8\u89c2\u5bdf\u5230\uff0c\u5f53\u67d0\u4eba\u9009\u4e86\u4e00\u672c\u81ea\u5df1\u559c\u6b22\u7684\u4e66\uff0c\u53e6\u4e00\u4e2a\u4eba\u4e5f\u4e00\u5b9a\u4f1a\u9009\u4e00\u672c\u81ea\u5df1\u559c\u6b22\u7684\u4e66\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8d2a\u5fc3\u7684\u65b9\u6cd5\u5408\u5e76\u4e24\u4eba\u9009\u4e66\u8fc7\u7a0b\uff1a\u5c06\u4e24\u4e2a\u4eba\u5355\u72ec\u559c\u6b22\u7684\u4e66\u5206\u522b\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u4e24\u4e24\u5408\u5e76\uff0c\u7136\u540e\u5f53\u6210\u4ed6\u4fe9\u90fd\u559c\u6b22\u7684\u4e66\uff0c\u4ef7\u683c\u4e3a\u8fd9\u4e24\u672c\u4e66\u7684\u548c\u3002\n\n\u7136\u540e\u5bf9\u4e24\u4e2a\u4eba\u5747\u559c\u6b22\u7684\u4e66\u4ef7\u683c\u8fdb\u884c\u6392\u5e8f\uff0c\u7b54\u6848\u4e3a $\\sum\\limits_{i=1}^n val[i]$\uff0c\u5176\u4e2d $val[i]$ \u4e3a\u7b2c $i$ \u672c\u4e24\u4eba\u5747\u559c\u6b22\u7684\u4e66\u3002\n\n\u5982\u679c\u5408\u5e76\u540e\u4e24\u4eba\u5747\u559c\u6b22\u7684\u4e66\u4ecd\u7136\u4e0d\u8db3 $n$\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a `-1`\n\n\u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <fstream>\n#include <unordered_map>\n#include <queue>\nusing namespace std;\n/*\ntype1 : \u4fe9\u4eba\u90fd\u559c\u6b22\ntype2 : b\u559c\u6b22c\u4e0d\u559c\u6b22\ntype3 : c\u559c\u6b22b\u4e0d\u559c\u6b22\n*/\n#define int long long\nint n,k,a,b,c,t,type1[200005],type2[200005],type3[200005],cnt1,cnt2,cnt3,ans;\nsigned main(){\n  cin >>k >> n;\n  for (int i=1;i<=k;i++){\n    cin >> a >> b >> c;\n    if (b==0 && c==0) continue;//\u4fe9\u90fd\u4e0d\u559c\u6b22\u4e70\u5b83\u5e72\u561b(\n    if (b==0 && c==1) type3[++cnt3] = a;\n    if (b==1 && c==0) type2[++cnt2] = a;\n    if (b==1 && c==1) type1[++cnt1] = a;\n  }\n  sort(type3+1,type3+cnt3+1);\n  sort(type2+1,type2+cnt2+1);//\u5206\u522b\u6392\u5e8f\n  for (int i=1;i<=min(cnt3,cnt2);i++) type1[++cnt1] = type3[i]+type2[i];//\u5408\u5e76\n  sort(type1+1,type1+cnt1+1);//\u6392\u4e2a\u5e8f\n  if (cnt1<n) {cout << -1; return 0;}//\u4e0d\u591f\u8f93\u51fa0\n  for (int i=1;i<=n;i++) ans += type1[i];//\u7edf\u8ba1\u7b54\u6848\n  cout << ans;\n}\n```",
        "postTime": 1593531713,
        "uid": 219099,
        "name": "pocafup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1374E1 \u3010Reading Books (easy version)\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u53e6\u4e00\u79cd\u505a\u6cd5\uff0c\u601d\u8def\u4e00\u81f4\uff0c\u53ef\u80fd\u66f4\u597d\u5199\u4e00\u70b9\uff08\u56e0\u4e3aSTL\uff1f\uff09\n\n\u8bbe\u96c6\u5408 $A$ \u662f $Alice$ \u559c\u6b22\uff0c$Bob$ \u4e0d\u559c\u6b22\u7684\u4e66\uff0c\u96c6\u5408 $B$ \u662f $Alice$ \u4e0d\u559c\u6b22\uff0c$Bob$ \u559c\u6b22\u7684\u4e66\uff0c\u96c6\u5408 $C$ \u662f\u4e24\u4eba\u90fd\u559c\u6b22\u7684\u4e66\u3002\n\n\u4e24\u4eba\u90fd\u4e0d\u559c\u6b22\u7684\u4e66\u7531\u4e8e\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\uff0c\u53ef\u4ee5\u4e0d\u8003\u8651\u3002\n\n\u73b0\u5728\u8981\u505a\u4e00\u4ef6\u795e\u5947\u7684\u4e8b\u60c5\uff1a\n\n\u5c06\u96c6\u5408 $A$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u96c6\u5408 $B$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5c06\u96c6\u5408 $A$ \u548c\u96c6\u5408 $B$ \u91cc\u7684\u5143\u7d20\u4e24\u4e24\u5408\u5e76\uff08\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e00\u4e2a\u5408\u5e76\uff0c\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5408\u5e76\u2026\u2026\uff09\uff0c\u653e\u5165\u96c6\u5408 $D$ \u3002\n\n\u697c\u4e0a\u5927\u4f6c\u90fd\u662f\u679a\u4e3e\u96c6\u5408 $C$ \u91cc\u9762\u53d6 $i$ \u4e2a\uff0c\u96c6\u5408 $D$ \u91cc\u9762\u53d6$k-i$\u4e2a\uff0c\u4f46\u5176\u5b9e\u53ea\u8981\u5c06\u96c6\u5408 $D$ \u6df7\u5165\u96c6\u5408 $C$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53d6\u524d $k$ \u4e2a\u5c31\u662f\u7b54\u6848\u3002\n\n\u590d\u6742\u5ea6\u4e3a $O(nlogn)$ \uff0c\u6bd4\u5176\u4ed6\u4eba $O(n)$ \u7684\u590d\u6742\u5ea6\u7565\u9ad8\u3002~~\u4f46\u4e5f\u6ca1\u9ad8\u591a\u5c11~~\u4f46\u66f4\u597d\u60f3\u66f4\u597d\u5199\u4e00\u70b9\uff08\u5f3a\u884c\u627e\u7406\u7531\n\n\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> a,b,c;\nint n,k,ans;\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint t,A,B;\n\t\tscanf(\"%d%d%d\",&t,&A,&B);\n\t\tif(A&&B)\n\t\t\tc.push_back(t);\n\t\tif(A&&!B)\n\t\t\ta.push_back(t);\n\t\tif(!A&&B)\n\t\t\tb.push_back(t);\n\t}\n\tsort(a.begin(),a.end());\n\tsort(b.begin(),b.end());\n\tfor(int i=0;i<min(a.size(),b.size());i++)\n\t\tc.push_back(a[i]+b[i]);\n\tsort(c.begin(),c.end());\n\tif(c.size()<k)\n\t{\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<k;i++)\n\t\tans+=c[i];\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1595056703,
        "uid": 240812,
        "name": "45dino",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1374E1 \u3010Reading Books (easy version)\u3011"
    },
    {
        "content": "\u6bcf\u672c\u4e66\u90fd\u6709\u6743\u503c\uff0c\u6bcf\u672c\u4e66\u53ef\u80fd\u88ab A \u559c\u6b22\uff0c\u53ef\u80fd\u88ab B \u559c\u6b22\uff0c\u8981\u6c42\u9009\u51fa\u7684\u4e66\u4e2d\uff0cA \u4e0e B \u90fd\u81f3\u5c11\u559c\u6b22 $k$ \u672c\uff0c\u6c42\u6700\u5c0f\u6743\u503c\u548c\u3002    \n\u53ef\u4ee5\u7ed9\u4e66\u5206\u7c7b\uff1a  \n\n0. A \u4e0e B \u90fd\u4e0d\u559c\u6b22    \n1. A \u559c\u6b22   \n2. B \u559c\u6b22   \n3. A \u4e0e B \u90fd\u559c\u6b22   \n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e8c\u4eba\u90fd\u4e0d\u559c\u6b22\u7684\u4e66\u662f\u5b8c\u5168\u65e0\u6548\u7684\u3002   \n\u7ed9\u6bcf\u7c7b\u4e66\u6392\u5e8f\uff0c\u505a\u4e00\u904d\u524d\u7f00\u548c\u3002   \n\u8bbe\u9009 $i$ \u672c A \u4e0e B \u90fd\u559c\u6b22\u7684\u4e66\uff0c\u5c31\u8981\u9009 $k - i$ \u672c A \u559c\u6b22\u7684\u4e66\uff0c $k - i$ \u672c B \u559c\u6b22\u7684\u4e66\u3002    \n\u679a\u4e3e $i$ \u6c42\u6700\u5c0f\u7b54\u6848\u3002   \n```cpp\n#include <cstdio>\n#include <algorithm>\ntemplate<typename T>\nvoid read(T &r)\n{\n    static char c;r=0;\n    for(c=getchar();c>'9'||c<'0';c=getchar());\n    for(;c>='0'&&c<='9';r=(r<<1)+(r<<3)+(c^48),c=getchar());\n}\nconst int maxn = 2e6 + 100;\nint n,k;\nint A[maxn],B[maxn],C[maxn],acnt,bcnt,ccnt;\nlong long SA[maxn],SB[maxn],SC[maxn];\nint main()\n{\n    read(n),read(k);\n    for(int i = 1;i<=n;++i)\n    {\n        int t,a,b;\n        read(t),read(a),read(b);\n        if(a && b) C[++ccnt] = t;\n        else if(a) A[++acnt] = t;\n        else if(b) B[++bcnt] = t;\n    }\n    std::sort(A + 1,A + 1 + acnt);\n    std::sort(B + 1,B + 1 + bcnt);\n    std::sort(C + 1,C + 1 + ccnt);\n    for(int i = 1;i<=acnt;++i) SA[i] = SA[i-1] + A[i];\n    for(int i = 1;i<=bcnt;++i) SB[i] = SB[i-1] + B[i];\n    for(int i = 1;i<=ccnt;++i) SC[i] = SC[i-1] + C[i];\n    long long ans = 1ll << 60;\n    for (int i = std::max(0,k - std::min(acnt, bcnt)); i <= ccnt && i <= k; ++i) \n        ans = std::min(ans, SA[k - i] + SB[k - i] + SC[i]);\n    if (ans == 1ll << 60) puts(\"-1\");\n    else printf(\"%lld\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1593525974,
        "uid": 220159,
        "name": "Clouder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1374E1 \u3010Reading Books (easy version)\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u6bcf\u672c\u4e66\u90fd\u6709\u6743\u503c\uff0c\u6bcf\u672c\u4e66\u53ef\u80fd\u88ab$A$\u559c\u6b22\uff0c\u53ef\u80fd\u88ab$B$\u559c\u6b22\uff0c\u8981\u6c42\u9009\u51fa\u7684\u4e66\u4e2d\uff0c$A$\u4e0e$B$\u90fd\u81f3\u5c11\u559c\u6b22$k$\u672c\uff0c\u6c42\u6700\u5c0f\u6743\u503c\u548c\u3002\n\n### Sol.\n\n##### \u5927\u4f53\u601d\u8def\n\n\u9996\u5148\u6ce8\u610f\u5230\uff0c$A$\u4e0e$B$\u90fd\u4e0d\u559c\u6b22\u7684\u80af\u5b9a\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4f5c\u51fa\u8d21\u732e\u3002\n\n\u6240\u4ee5\u5b58\u7684\u65f6\u5019\u76f4\u63a5`continue`\u6389\u5c31\u884c\n\n\u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6a21\u62df$+$\u8d2a\u5fc3\n\n\u5224\u65ad\u51fa\u7b54\u6848\u5b58\u5728\u4e4b\u540e\u6309\u6743\u503c\u5c3d\u91cf\u5c0f\u8d2a\u5fc3\u9009\u62e9\u4e66\u5373\u53ef\n\n##### \u7b54\u6848\u4e0d\u5b58\u5728?\n\n\u8bbe$A$\u559c\u6b22\u7684\u4e66\u4e2a\u6570\u4e3a$cnt1$\uff0c$B$\u559c\u6b22\u7684\u4e66\u4e2a\u6570\u4e3a$cnt2$\uff0c\u4e8c\u4eba\u90fd\u559c\u6b22\u7684\u4e66\u7684\u4e2a\u6570\u4e3a$cnt3$\n\n\u90a3\u4e48\u4e00\u4e2a\u4eba\u6700\u591a\u80fd\u9009\u5230$min\\{cnt1,cnt2\\}+cnt3$\u4e2a\n\n\u5982\u679c$min(cnt1, cnt2)+cnt3 < k$\u90a3\u4e48\u80af\u5b9a\u4e0d\u80fd\u9009\u51fa\uff0c\u8f93\u51fa`-1`\n\n##### \u5982\u4f55\u9009\u62e9?\n\n\u5c06\u6240\u6709$A$\u559c\u6b22\u7684\u4e66\u7684\u6743\u503c\u5b58\u5165$book1[]$\uff0c\u6240\u6709$B$\u559c\u6b22\u7684\u4e66\u7684\u6743\u503c\u5b58\u5165$book2[]$\uff0c\u6240\u6709\u4e8c\u4eba\u90fd\u559c\u6b22\u7684\u4e66\u7684\u6743\u503c\u5b58\u5165$book3[]$\n\n\u5c06\u4e09\u4e2a\u6570\u7ec4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u8bbe$book1[]$\u548c$book2[]$\u5f53\u524d\u904d\u5386\u5230\u4e86$now1(1\\leqslant now1\\leqslant min(cnt1, cnt2)$\uff0c$book3[]$\u5f53\u524d\u904d\u5386\u5230\u4e86$now3(1\\leqslant now3\\leqslant cnt3)$\n\n\u5982\u679c$book1[now1]+book2[now1]<book3[now3]$\u90a3\u4e48\u5206\u5f00\u9009\u4e66\n\n\u5426\u5219\u9009\u4e8c\u4eba\u90fd\u559c\u6b22\u7684\u4e66\n\n\u5c06\u9009\u62e9\u7684\u6743\u503c\u52a0\u5230$ans$\u4e2d\uff0c\u6bcf\u4eba\u9009\u62e9\u4e66\u7684\u4e2a\u6570$tot$\u52a0\u52a0\n\n\u5f53$tot \\geqslant k$\u7684\u65f6\u5019\u5373\u53ef\u7ed3\u675f\u904d\u5386\n\n*\u90e8\u5206\u601d\u8def\u89c1\u4ee3\u7801*\n\n### Code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::min;\nusing std::sort;\n\nint n, k, cnt1, cnt2, cnt3, now1 = 1, now3 = 1, ans, tot;\nint book1[200020], book2[200020], book3[200020];\n\nint main(void) {\n    scanf(\"%d%d\", & n, & k);\n    for (register int i = 1, t, a, b; i <= n; ++i) {\n        scanf(\"%d%d%d\", & t, & a, & b);\n        if (a && b)\n            book3[++cnt3] = t;\n        else if (a && !b)\n            book1[++cnt1] = t;\n        else if (!a && b)\n            book2[++cnt2] = t;\n    }\n    sort(book1 + 1, book1 + cnt1 + 1),\n    sort(book2 + 1, book2 + cnt2 + 1),\n    sort(book3 + 1, book3 + cnt3 + 1);\n    if (min(cnt2, cnt1) + cnt3 < k) { //\u5224\u65ad\u80fd\u5426\u9009\u62e9\n        puts(\"-1\");\n        return 0;\n    }\n    while (true) {\n        if (now3 <= cnt3) //\u5982\u679c\u8fd8\u6709\u4e8c\u4eba\u540c\u65f6\u559c\u6b22\u7684\u4e66\u80fd\u9009\u62e9\n            if (book1[now1] + book2[now1] < book3[now3] && now1 <= min(cnt2, cnt1)) //\u5982\u679c\u8fd8\u80fd\u5206\u5f00\u9009\u62e9\uff0c\u5e76\u4e14\u5206\u5f00\u9009\u62e9\u66f4\u4f18\n                ans += book1[now1] + book2[now1],\n                ++now1, ++tot;\n            else //\u5426\u5219\u9009\u62e9\u4e8c\u4eba\u540c\u65f6\u559c\u6b22\u7684\u4e66\n                ans += book3[now3],\n                ++tot, ++now3;\n        else //\u5982\u679c\u6ca1\u6709\u4e8c\u4eba\u540c\u65f6\u559c\u6b22\u7684\u4e66\u80fd\u9009\u62e9\uff0c\u90a3\u4e48\u53ea\u80fd\u5206\u5f00\u9009\u62e9\n             //\u56e0\u4e3a\u5df2\u7ecf\u5224\u65ad\u6709\u89e3\u4e86\uff0c\u4e0d\u7528\u62c5\u5fc3now1\u8d8a\u754c\n            ans += book1[now1] + book2[now1],\n            ++now1, ++tot;\n        if (tot >= k)\n            break;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n\n>\u90e8\u5206\u601d\u8def\u6765\u81ea\u767e\u5ea6",
        "postTime": 1594090562,
        "uid": 344633,
        "name": "oneton429",
        "ccfLevel": 6,
        "title": "CF1374E1 Reading Books (easy version)"
    }
]