[
    {
        "content": "> [CF587F Duff is Mad](https://codeforces.com/contest/587/problem/F)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a $n$ \u4e2a\u5b57\u7b26\u4e32 $s_{1 \\dots n}$\u3002\n- $q$ \u6b21\u8be2\u95ee $s_{l \\dots r}$ \u5728 $s_k$ \u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002\n- $n,q,\\sum_{i=1}^n |s_i| \\le 10^5$\u3002\n\n## \u9898\u89e3\n\n~~\u4e00\u773c\u770b\u6210 [CF547E Mike and Friends](https://www.luogu.com.cn/problem/CF547E) \u7136\u540e\u5c31\u518d\u4e5f\u6ca1\u60f3\u5bf9\u8fc7\u3002~~\n\n\u8bbe $\\sum_{i=1}^n |s_i| = m$\u3002\n\n\u9996\u5148\u5efa\u51fa AC \u81ea\u52a8\u673a\uff0c\u90a3\u4e48\u7b54\u6848\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\n\n\u5728 fail \u6811\u4e0a\uff0c\u5c06 $s_{l \\dots r}$ \u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u70b9\u7684\u6743\u503c $+1$ \u540e\uff0c$s_k$ \u7684\u6240\u6709\u8282\u70b9\u7684\u6743\u503c\u548c\u3002\n\n\u8003\u8651\u79bb\u7ebf + \u6839\u53f7\u5206\u6cbb\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u9650\u5236 $T$\u3002\n\n\u82e5 $|s_k| > T$\uff0c\u5219\u8fd9\u6837\u7684\u4e32\u6700\u591a\u53ea\u6709 $\\mathcal O(\\frac mT)$ \u4e2a\uff0c\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a $s_k$ \u7ebf\u6027\u5904\u7406\u3002\n\n\u5148\u5c06 $s_k$ \u7684\u6240\u6709\u8282\u70b9\u7684\u8d21\u732e\u8bbe\u4e3a $1$\uff0c\u7136\u540e\u6c42\u51fa\u5b50\u6811\u8d21\u732e\u548c\uff0c\u5373\u6bcf\u4e2a\u70b9\u7684\u6743\u503c $+1$ \u540e\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u6309\u987a\u5e8f\u626b\u8fc7 $n$ \u4e2a\u4e32\uff0c\u6bcf\u626b\u5230\u4e00\u4e2a\u4e32\u5c31\u52a0\u4e0a\u5bf9\u5e94\u7684\u8d21\u732e\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5\u4f5c\u5dee\u5f97\u5230\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\frac {m^2}T + q \\log q)$\u3002\n\n\u82e5 $|s_k| \\le T$\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u8be2\u95ee $\\mathcal O(|s_k|)$ \u5904\u7406\u3002\n\n\u6309\u987a\u5e8f\u626b\u8fc7 $n$ \u4e2a\u4e32\uff0c\u6bcf\u626b\u5230\u4e00\u4e2a\u4e32\u5c31\u5c06\u5176\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u7684\u6743\u503c $+1$\uff0c\u5904\u7406\u8be2\u95ee\u7684\u65f6\u5019\u76f4\u63a5\u66b4\u529b\u6c42\u3002\n\n\u8fd9\u4e24\u79cd\u64cd\u4f5c\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u5728 dfs \u5e8f\u4e0a\u533a\u95f4\u52a0\u548c\u5355\u70b9\u67e5\uff0c\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\log m + qT \\log m)$\uff0c\u5982\u679c\u6811\u72b6\u6570\u7ec4\u6539\u6210\u5206\u5757\u7684\u8bdd\u5219\u53ef\u4ee5\u505a\u5230 $\\mathcal O(n \\sqrt m + qT)$\u3002\n\n\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\frac {m^2}T + q \\log q + n \\log m + qT \\log m)$\uff0c\u53d6 $T = \\frac {m}{\\sqrt {q \\log m}}$ \u65f6\u8fbe\u5230\u6700\u4f18\u590d\u6742\u5ea6 $\\mathcal O(n \\log m + q \\log q + m \\sqrt {q \\log m})$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 1e5 + 7;\nint n, m, q, T, len[N], S[N], c[N], dfn[N], num;\nll ans[N];\nint trie[N][27], fail[N], fa[N], ed[N], tot = 1;\nchar s[N];\nvi e[N];\nvector<pi> L[N], R[N], le[N], ri[N];\nqueue<int> Q;\n\nvoid dfs1(int x) {\n\tfor (auto y : e[x]) dfs1(y), S[x] += S[y];\n}\n\nvoid dfs2(int x) {\n\tS[x] = 1, dfn[x] = ++num;\n\tfor (auto y : e[x]) dfs2(y), S[x] += S[y];\n}\n\ninline void add(int x, int k) {\n\twhile (x <= num) c[x] += k, x += x & -x;\n}\n\ninline int ask(int x) {\n\tint k = 0;\n\twhile (x) k += c[x], x -= x & -x;\n\treturn k;\n}\n\nint main() {\n\trd(n), rd(q);\n\tfor (int i = 1; i <= n; i++) {\n\t\trds(s, len[i]), m += len[i];\n\t\tint p = 1;\n\t\tfor (int j = 1; j <= len[i]; j++) {\n\t\t\tint c = s[j] - 'a';\n\t\t\tif (!trie[p][c]) trie[p][c] = ++tot, fa[tot] = p;\n\t\t\tp = trie[p][c];\n\t\t}\n\t\ted[i] = p;\n\t}\n\tfor (int i = 0; i < 26; i++)\n\t\tif (trie[1][i]) fail[trie[1][i]] = 1, Q.push(trie[1][i]);\n\t\telse trie[1][i] = 1;\n\twhile (Q.size()) {\n\t\tint x = Q.front();\n\t\tQ.pop();\n\t\tfor (int i = 0; i < 26; i++)\n\t\t\tif (trie[x][i])\n\t\t\t\tfail[trie[x][i]] = trie[fail[x]][i], Q.push(trie[x][i]);\n\t\t\telse trie[x][i] = trie[fail[x]][i];\n\t}\n\tfor (int i = 2; i <= tot; i++) e[fail[i]].pb(i);\n\tT = m / sqrt(q * log2(m));\n\tfor (int i = 1, l, r, k; i <= q; i++) {\n\t\trd(l), rd(r), rd(k);\n\t\tif (len[k] > T) L[k].pb(mp(l, i)), R[k].pb(mp(r, i));\n\t\telse le[l].pb(mp(k, i)), ri[r].pb(mp(k, i));\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (len[i] > T) {\n\t\t\tint p = ed[i];\n\t\t\twhile (p != 1) S[p] = 1, p = fa[p];\n\t\t\tdfs1(1);\n\t\t\tsort(L[i].begin(), L[i].end());\n\t\t\treverse(L[i].begin(), L[i].end());\n\t\t\tsort(R[i].begin(), R[i].end());\n\t\t\treverse(R[i].begin(), R[i].end());\n\t\t\tll o = 0;\n\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\twhile (L[i].size() && L[i].back().fi == j)\n\t\t\t\t\tans[L[i].back().se] -= o, L[i].pop_back();\n\t\t\t\to += S[ed[j]];\n\t\t\t\twhile (R[i].size() && R[i].back().fi == j)\n\t\t\t\t\tans[R[i].back().se] += o, R[i].pop_back();\n\t\t\t}\n\t\t\tfor (int i = 2; i <= tot; i++) S[i] = 0;\n\t\t}\n\tdfs2(1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (pi o : le[i]) {\n\t\t\tint p = ed[o.fi];\n\t\t\twhile (p != 1) ans[o.se] -= ask(dfn[p]), p = fa[p];\n\t\t}\n\t\tadd(dfn[ed[i]], 1), add(dfn[ed[i]] + S[ed[i]], -1);\n\t\tfor (pi o : ri[i]) {\n\t\t\tint p = ed[o.fi];\n\t\t\twhile (p != 1) ans[o.se] += ask(dfn[p]), p = fa[p];\n\t\t}\n\t}\n\tfor (int i = 1; i <= q; i++) print(ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1579947186,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u592a\u4e00\u6837\u7684 SA \u7684\u505a\u6cd5\u3002\n\n\u5e38\u89c4\u64cd\u4f5c\uff0c\u5c06\u8fd9\u4e9b\u4e32\u62fc\u8d77\u6765\uff0c\u4e2d\u95f4\u9694\u7279\u6b8a\u5b57\u7b26\uff0c\u7136\u540e\u6c42\u51fa $SA$ \u548c $height$ \u6570\u7ec4\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $s_i$\uff0c\u5b83\u5982\u679c\u662f\u67d0\u4e2a\u4e32\u7684\u540e\u7f00\u7684\u524d\u7f00\uff08\u4e5f\u5c31\u662f\u8be5\u4e32\u7684\u5b50\u4e32\uff09\uff0c\u5219\u8fd9\u4e9b\u540e\u7f00\u7684 $rnk$ \u5fc5\u7136\u8fde\u7eed\u3002\n\n\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u51fa\u8fd9\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4 $[ql_i,qr_i]$\uff0c\u5219 $s_i$ \u5bf9\u6b64\u533a\u95f4\u5185\u7684\u6bcf\u4e2a\u540e\u7f00\u8d21\u732e\u4e3a $1$\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u3002\n\n\u56de\u5230\u9898\u76ee\uff0c\u8981\u6c42\u8be2\u95ee $s_{l...r}$ \u5728 $s_k$ \u4e2d\u51fa\u73b0\u51e0\u6b21\uff0c\u5c31\u662f\u5728\u8be2\u95ee $s_{l...r}$ \u5bf9 $s_k$ \u7684\u6bcf\u4e2a\u540e\u7f00\u4ea7\u751f\u4e86\u591a\u5c11\u8d21\u732e\u3002\u663e\u7136\u53ef\u4ee5\u79bb\u7ebf\u4e0b\u6765\uff0c\u5c06\u7b54\u6848\u62c6\u6210 $s_{1...r}$ \u5bf9 $s_k$ \u7684\u8d21\u732e\u51cf\u53bb $s_{1...l-1}$ \u5bf9 $s_k$ \u7684\u8d21\u732e\u3002\u4f46\u53d1\u73b0 $s_k$ \u540e\u7f00\u4f4d\u7f6e\u4e0d\u597d\u5904\u7406\uff0c\u82e5\u66b4\u529b\u679a\u4e3e $s_k$ \u540e\u7f00\u4f4d\u7f6e\uff0c\u7d2f\u52a0\u5176\u5728\u6811\u72b6\u6570\u7ec4\u5185\u7684\u6743\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(qn\\log n)$\u3002\n\n\u8003\u8651\u4f7f\u7528\u6839\u53f7\u5206\u6cbb\u3002\u4ee4\u5757\u957f\u4e3a $B$\uff0c\u5f53\u4e32\u957f $len_i \\leqslant B $ \u65f6\uff0c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u5176\u540e\u7f00\u4f4d\u7f6e\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6 $O(B\\log n)$\u3002\u5f53\u4e32\u957f $len_i \\gt B$\uff0c\u8fd9\u6837\u7684\u5927\u4e32\u6700\u591a\u53ea\u6709 $n \\over B$ \u4e2a\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u3002\u5c06\u6240\u6709\u5927\u4e32\u7684\u540e\u7f00\u5728 $rnk$ \u6570\u7ec4\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bb0\u5f55\u5728\u4e00\u4e2a $vector$ \u4e2d\uff0c\u5c06\u5176\u6392\u5e8f\u3002\u5bf9\u4e8e\u6bcf\u4e2a $s_i$\uff0c\u679a\u4e3e\u6bcf\u4e2a\u5927\u4e32\uff0c\u4e8c\u5206\u67e5\u627e\u51fa\u9996\u4e2a $ \\geq ql_i $ \u7684 \u4f4d\u7f6e\u4e0b\u6807 $l$\uff0c\u4ee5\u53ca\u6700\u540e\u4e00\u4e2a $ \\leq qr_i$ \u7684\u4f4d\u7f6e\u4e0b\u6807 $r$\uff0c\u5219 $s_i$ \u5bf9\u8be5\u5927\u4e32\u8d21\u732e\u4e3a $r-l+1$\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6 $O({n \\log n \\over {B} })$\u3002\u663e\u7136\uff0c\u5f53 $B = \\sqrt n$ \u65f6\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n \\log n)$\uff0c\u6700\u4f18\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q) \\sqrt n \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u7801\u98ce\u53ef\u80fd\u6709\u70b9\u5947\u7279\uff0c\u5927\u5bb6\u51d1\u5408\u7740\u770b\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<map>\n#include<set>\n#define N 200005 \n#define INF 1000000000 \nusing namespace std;\nvector<int>v[N];\ninline long long read(){\n\tlong long xx=0,ff=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')ff=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){xx=(xx<<1)+(xx<<3)+(ch^48);ch=getchar();}\n\treturn xx*ff;\n}\nint n,len,q,m=300,pos[N],sa[N],rnk[N],tax[N],tp[N],st[19][N],lg[N],sum,big[N],newid[N],siz[N],cnt,g;\nlong long ans[N],t[N],s[N];\ninline void add(int x,int y){\n\tfor(;x<=len;x+=x&-x)t[x]+=y;\n}\ninline long long ask(int x){\n\tlong long sum=0;\n\tfor(;x;x-=x&-x)sum+=t[x];\n\treturn sum;\n}\nchar a[N],b[N];\ninline void sort(){\n\tfor(int i = 0;i<=m;i++)tax[i]=0;\n\tfor(int i = 1;i<=len;i++)++tax[rnk[i]];\n\tfor(int i = 1;i<=m;i++)tax[i]+=tax[i-1];\n\tfor(int i = len;i>=1;i--)sa[tax[rnk[tp[i]]]--]=tp[i];\n}\ninline int query(int l,int r){\n\tif(l>r)return N;\n\tint k =lg[r-l+1];\n\treturn min(st[k][l],st[k][r-(1<<k)+1]);\n}\nstruct qq{\n\tint pos,op,k,id;\n\tbool operator<(const qq a)const{\n\t\treturn pos<a.pos;\n\t}\n}c[N<<1];\nint main(){\n\tn=read(),q=read();\n\tfor(int i = 1,l;i<=n;i++){\n\t\tscanf(\"%s\",b+1);l=strlen(b+1);pos[i]=len+1;sum+=l;siz[i]=l;\n\t\tfor(int i = 1;i<=l;i++)a[++len]=b[i];\n\t\ta[++len]='{';\n\t}\n\tg=sqrt(sum);\n\tfor(int i = 1;i<=len;i++)rnk[i]=a[i]-'a'+1,tp[i]=i;\n\tsort();\n\tfor(int w = 1,p=0;p<len;m=p,w<<=1){\n//\t\tcout<<w<<' '<<p<<endl;\n\t\tp=w;\n\t\tfor(int i = 1;i<=w;i++)tp[i]=len-i+1;\n\t\tfor(int i = 1;i<=len;i++)if(sa[i]>w)tp[++p]=sa[i]-w;\n\t\tsort();\n\t\tswap(tp,rnk);\n\t\tp=rnk[sa[1]]=1;\n\t\tfor(int i = 2;i<=len;i++)rnk[sa[i]]=(tp[sa[i]]==tp[sa[i-1]]&&tp[sa[i]+w]==tp[sa[i-1]+w])?p:++p;\n\t}\n//\tcout<<\"?\";\n\tfor(int i = 1;i<=n;i++){\n\t\tif(siz[i]>g){\n\t\t\tnewid[i]=++cnt,big[cnt]=i;\n\t\t\tfor(int j = pos[i];j<=pos[i]+siz[i]-1;j++)v[cnt].push_back(rnk[j]);\n\t\t\tsort(v[cnt].begin(),v[cnt].end());\n\t\t}\n\t}\n\tlg[0]=-1;\n\tfor(int i = 1,k=0,j;i<=len;i++){\n\t\tj=sa[rnk[i]-1];\n\t\tif(k)k--;\n\t\tlg[i]=lg[i>>1]+1;\n\t\twhile(a[i+k]==a[j+k])++k;\n\t\tst[0][rnk[i]]=k;\n\t}\n//\tcout<<\"?\";\n\tfor(int j = 1;j<=lg[len];j++)for(int i = 1;i+(1<<j)-1<=len;i++)st[j][i]=min(st[j-1][i],st[j-1][i+(1<<(j-1))]);\n\tfor(int i = 1,l,r,k;i<=q;i++){\n\t\tscanf(\"%d%d%d\",&l,&r,&k);\n\t\tc[2*i-1]={l-1,-1,k,i},c[2*i]={r,1,k,i};\n\t}\n\tsort(c+1,c+2*q+1);\n\tint lst=1;\n\twhile(c[lst].pos==0)lst++;\n\tfor(int i = 1,l,r,mid,L,R;i<=n;i++){\n\t\tl=1,r=rnk[pos[i]];\n\t\twhile(l<=r){\n\t\t\tmid=l+r>>1;\n\t\t\tif(query(mid+1,rnk[pos[i]])>=siz[i])r=mid-1;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tL=r+1;\n\t\tl=rnk[pos[i]],r=len;\n\t\twhile(l<=r){\n\t\t\tmid=l+r>>1;\n\t\t\tif(query(rnk[pos[i]]+1,mid)>=siz[i])l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tR=l-1;\n\t\tadd(R+1,-1);add(L,1);\n\t\tfor(int j = 1;j<=cnt;j++){\n\t\t\tl=lower_bound(v[j].begin(),v[j].end(),L)-v[j].begin(),r=upper_bound(v[j].begin(),v[j].end(),R)-v[j].begin()-1;\n\t\t\ts[j]+=r-l+1;\n\t\t} \n\t\twhile(c[lst].pos==i){\n\t\t\tif(!newid[c[lst].k]){\n\t\t\t\tfor(int j = pos[c[lst].k];j<=pos[c[lst].k]+siz[c[lst].k]-1;j++)ans[c[lst].id]+=ask(rnk[j])*c[lst].op;\n\t\t\t} \n\t\t\telse ans[c[lst].id]+=s[newid[c[lst].k]]*c[lst].op;\n\t\t\tlst++;\n\t\t}\n\t}\n\tfor(int i = 1;i<=q;i++)printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1684646968,
        "uid": 519875,
        "name": "\u5c45\u7136\u6709\u4e2a\u9ad8\u624b",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u5f88\u5e7b\u60f3\uff0c\u5f88\u66b4\u529b\u7684\u60f3\u6cd5\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u662f\u6b63\u786e\u7684 $O(n\\sqrt {|S|} \\log n)$\uff0c\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $\\Theta (n\\sqrt {|S|}+26n\\log n)$\uff0c\u52c9\u5f3a\u5361\u5f97\u8fc7\u53bb\u3002  \n\u5bf9\u4e8e\u533a\u95f4\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u5f00\u4e00\u4e2a AC \u81ea\u52a8\u673a\uff0c\u628a\u8be2\u95ee\u7684\u4e32\u4e22\u8fdb\u53bb\u8dd1\u5373\u53ef\u3002\u4f46\u662f\u5982\u679c\u8be2\u95ee\u7684\u90a3\u4e2a\u4e32\u5f88\u957f\uff0c\u8fd9\u6837\u505a\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u7206\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u6839\u53f7\u5206\u6cbb\uff0c\u53ef\u4ee5\u60f3\u5230\u628a\u957f\u5ea6 $> \\sqrt {|S|}$\u7684\u4e32\u5728\u8fd9\u5176\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u901a\u8fc7\u524d\u7f00\u548c\u9884\u5904\u7406\u51fa\u6765\uff0c\u8fd9\u6837\u7684\u4e32\u4e0d\u4f1a\u8d85\u8fc7 $\\sqrt {|S|}$ \u4e2a\uff0c\u6240\u4ee5\u662f\u5bf9\u7684\u3002\u4e3a\u4e86\u5361\u7a7a\u95f4\uff0c\u8bf7\u628a\u6839\u53f7\u5206\u6cbb\u7684\u5927\u5c0f\u5f00\u5927\u4e00\u70b9\uff0c\u51cf\u5c11\u4e00\u70b9\u9884\u5904\u7406\uff0c\u7b54\u6848\u8981\u5f00 long long\u3002  \n```cpp\n#include<bits/stdc++.h>\n#define lc id<<1\n#define rc id<<1|1\n#define ll long long\nusing namespace std;\ninline int read() {\n\tint __x=0,__f=1;\n\tchar __c=getchar();\n\twhile(__c<'0'||__c>'9') {\n\t\tif(__c=='-')__f=-1;\n\t\t__c=getchar();\n\t}\n\twhile(__c>='0'&&__c<='9') {\n\t\t__x=__x*10+__c-'0';\n\t\t__c=getchar();\n\t}\n\treturn __x*__f;\n}\nchar __F[200];\ninline void write(ll __x) {\n\tif(__x<0) {\n\t\tputchar('-');\n\t\t__x=-__x;\n\t}\n\tif(__x>=10)write(__x/10);\n\tputchar(__x%10+'0');\n}\ninline string readstr() {\n\tchar __ch=getchar();\n\tstring __st1=\"\";\n\twhile (!((__ch>='a')&&(__ch<='z')))\n\t\t__ch=getchar();\n\twhile ((__ch>='a')&&(__ch<='z'))\n\t\t__st1+=__ch,__ch=getchar();\n\treturn __st1;\n}\nconst int maxn=1e5+5,maxm=1.45e6+5;\nstruct edge {\n\tint next,to;\n} e[maxn];\nstruct tree {\n\tint l,r,mid,rt;\n} t[maxn*4];\nint tr[maxm][26],fail[maxm],v[maxm],n,m,tot=1,sn,sc,book[maxn],h[maxn],bj[maxn],cnt,c[maxn],q[maxn],l,r;\nll a[maxn][106];\nstring s[maxn],ls[106];\nvoid addedge(int x,int y) {\n\te[++cnt].next=h[x];\n\te[cnt].to=y;\n\th[x]=cnt;\n}\nvoid insertrie(string &s,int rot,int u) {\n\tint root=rot,y,len=s.length();\n\tfor(register int i=0; i<len; i++) {\n\t\ty=s[i]-'a';\n\t\tif(!tr[root][y]) {\n\t\t\ttr[root][y]=++tot;\n\t\t}\n\t\troot=tr[root][y];\n\t}\n\tv[root]++;\n\tif(rot==1)bj[u]=root;\n}\nvoid getfail(int rot) {\n\tfor(register int i=0; i<26; i++) {\n\t\ttr[0][i]=rot;\n\t}\n\tl=1,r=1;\n\tq[l]=rot;\n\twhile(l<=r) {\n\t\tint u=q[l],f=fail[u];\n\t\tl++;\n\t\tv[u]+=v[f];\n\t\tfor(register int i=0; i<26; i++) {\n\t\t\tint j=tr[u][i];\n\t\t\tif(!j) {\n\t\t\t\ttr[u][i]=tr[f][i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfail[j]=tr[f][i];\n\t\t\tq[++r]=j;\n\t\t}\n\t}\n}\nvoid build(int id,int l,int r) {\n\tt[id].l=l,t[id].r=r,t[id].mid=(l+r)/2;\n\tt[id].rt=++tot;\n\tfor(register int i=l; i<=r; i++) {\n\t\tinsertrie(s[i],t[id].rt,i);\n\t}\n\tif(l==r) {\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n}\nvoid pre(int id) {\n\tgetfail(t[id].rt);\n\tif(t[id].l==t[id].r) {\n\t\treturn;\n\t}\n\tpre(lc);\n\tpre(rc);\n}\nint query1(int id,int l,int r,int k) {\n\tif(t[id].l>=l&&t[id].r<=r) {\n\t\tint u=t[id].rt,len=s[k].length();\n\t\tint sum=0;\n\t\tfor(register int j=0; j<len; j++) {\n\t\t\tu=tr[u][s[k][j]-'a'];\n\t\t\tsum+=v[u];\n\t\t}\n\t\treturn sum;\n\t}\n\tint sum=0;\n\tif(l<=t[id].mid)sum+=query1(lc,l,r,k);\n\tif(r>t[id].mid)sum+=query1(rc,l,r,k);\n\treturn sum;\n}\nvoid dfs(int u) {\n\tfor(register int i=h[u]; i; i=e[i].next) {\n\t\tint j=e[i].to;\n\t\tdfs(j);\n\t\tc[u]+=c[j];\n\t}\n}\nint main() {\n\tint x,y,z;\n\tn=read(),m=read();\n\tsn=505;//sn\u662f\u5206\u6cbb\u7684\u5927\u5c0f\n\tfor(register int i=1; i<=n; i++) {\n\t\ts[i]=readstr();\n\t\tinsertrie(s[i],1,i);\n\t\tif(s[i].length()>=sn) {\n\t\t\tbook[i]=++sc;//\u88ab\u6807\u8bb0\u7684\u5c31\u9700\u8981\u9884\u5904\u7406\n\t\t\tls[sc]=s[i];\n\t\t}\n\t}\n\tgetfail(1);\n\tfor(register int i=2; i<=tot; i++) {\n\t\taddedge(fail[i],i);\n\t}\n\tfor(register int i=1; i<=sc; i++) {\n\t\tint u=1,len=ls[i].length();\n\t\tmemset(c,0,sizeof(c));\n\t\tfor(register int j=0; j<len; j++) {\n\t\t\tu=tr[u][ls[i][j]-'a'];\n\t\t\tc[u]++;//\u7c7b\u4f3c\u4e8eAC\u81ea\u52a8\u673a\uff08\u4e8c\u6b21\u52a0\u5f3a\u7248\uff09\n\t\t}\n\t\tdfs(1);\n\t\tfor(register int j=1; j<=n; j++) {\n\t\t\ta[j][i]=a[j-1][i]+c[bj[j]];\n\t\t}\n\t}\n\tbuild(1,1,n);\n\tpre(1);\n\twhile(m--) {\n\t\tx=read(),y=read(),z=read();\n\t\twrite(book[z]?a[y][book[z]]-a[x-1][book[z]]:query1(1,x,y,z));//\u76f4\u63a5\u524d\u7f00\u548c\u51fa\u7b54\u6848\u6216\u8005\u5230\u7ebf\u6bb5\u6811\u4e2d\u67e5\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}",
        "postTime": 1612065118,
        "uid": 104324,
        "name": "abruce",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    },
    {
        "content": "**\u9898\u610f** \uff1a \u7ed9\u5b9a $n$ \u4e2a\u5b57\u7b26\u4e32 $s_{1 \\dots n}$\u3002\n\n$q$ \u6b21\u8be2\u95ee $s_{l \\dots r}$ \u5728 $s_k$ \u4e2d\u51fa\u73b0\u6b21\u6570\u7684\u548c\u3002\n\n$n,q,\\sum_{i=1}^n |s_i| \\le 10^5$\uff0c\u65f6\u9650$\\texttt{4s}$\u3002\n\n------------\n\n\u7ed9\u51fa\u4e00\u4e2a\u975e\u6839\u53f7\u5206\u6cbb\u89e3\u6cd5\uff0c\u590d\u6742\u5ea6\u53ea\u4f9d\u8d56\u4e8e $\\rm Trie$ \u6811\u70b9\u6570\uff08\u800c\u975e\u603b\u4e32\u957f\u2014\u2014\u53f6\u8282\u70b9\u6df1\u5ea6\u548c\uff09\u3002\n\n\u56de\u5fc6\u5728 $\\rm ACAM$ \u4e0a\u662f\u5982\u4f55\u8ba1\u7b97\u5339\u914d\u6b21\u6570\u7684 \uff1a \u5bf9\u4e8e\u6587\u672c\u4e32 $S$ \uff0c\u5c06 $\\rm Trie$ \u6811\u4e0a\u5230\u6839\u7684\u8def\u5f84 $cnt$ \u52a0\u4e00\uff1b\u5bf9\u4e8e\u5339\u914d\u4e32 $T$ \uff0c\u5bf9 $\\rm Fail$ \u6811\u4e0a\u7684\u5b50\u6811\u6c42\u548c\u3002\n\n\u90a3\u4e48\uff0c\u95ee\u9898\u53ef\u4ee5\u8f6c\u6362\u6210\u8fd9\u6837 \uff1a\n\n\u6709 $T_1,T_2$ \u4e24\u68f5\u6811\uff0c\u6807\u53f7\u5bf9\u5e94\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\u5c06 $T_1$ \u4e2d $k$ \u5230\u6839\u8def\u5f84 $+1$ \u540e\uff0c$T_2$ \u4e2d\u70b9 $l...r$ \u7684\u5b50\u6811\u70b9\u6743\u7684\u548c\u3002\n\n\u53ef\u4ee5\u5dee\u5206\uff0c\u53d8\u6210 $1...r$ \u7684\u5b50\u6811\u3002\n\n\u5373 $\\sum\\limits_{u=1}^r\\ \\sum\\limits_{T_2:\\text{v\u5728u\u7684\u5b50\u6811\u4e2d}}[T_1:\\text{v\u662fk\u7684\u7956\u5148}]$\n\n\u4ea4\u6362\u548c\u5f0f\u53ef\u5f97 $\\sum\\limits_{T_1:\\text{v\u662fk\u7684\u7956\u5148}}\\sum\\limits_{u=1}^r[T_2:\\text{v\u5728u\u7684\u5b50\u6811\u4e2d}]$\n\n\u8fd9\u5c31\u8f6c\u5316\u6210\uff0c\u67e5\u8be2\u5c06 $T_2$ \u4e2d $1...r$ \u7684\u5b50\u6811 $+1$ \u540e\uff0c$T_1$ \u4e2d\u70b9 $k$ \u5230\u6839\u8def\u5f84\u7684\u548c\u3002\n\n\u8003\u8651\u79bb\u7ebf\u5904\u7406\uff0c\u5bf9\u4e8e\u8be2\u95ee $(r,k)$ ,\u6309\u7167 $r$ \u7684\u987a\u5e8f\u56de\u7b54\uff0c\u6bcf\u6b21\u4fee\u6539 $T_2$ \u7684\u4e00\u68f5\u5b50\u6811\uff0c\u67e5\u8be2 $T_1$ \u7684\u4e00\u6761\u8def\u5f84\u3002\n\n\u8fd9\u53ef\u4ee5\u4f7f\u7528 $\\rm KDT$ \uff0c\u5c06\u4e24\u9897\u6811\u7684 $\\rm dfs$ \u5e8f\u5206\u522b\u4f5c\u4e3a\u4e24\u4e2a\u7ef4\u5ea6\u7684\u5750\u6807\u3002\n\n\u4fee\u6539\u533a\u95f4\uff08\u5b50\u6811\uff09\u603b\u6570\u662f $O(n)$ \u7684\u3002\n\n\u628a $T_1$ \u91cd\u94fe\u5256\u5206\uff0c\u67e5\u8be2\u7684\u533a\u95f4\u603b\u6570\u662f $O(q\\log n)$ \u7684\u3002\n\n\u5982\u679c\u76f4\u63a5\u5728 $\\rm KDT$ \u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u5206\u522b\u505a\uff0c\u590d\u6742\u5ea6\u662f $O(n\\sqrt{n}+q\\sqrt{n}\\log n)$ \u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\n\n\u6ce8\u610f\uff0c\u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u8be2\u95ee\u4e2a\u6570\u662f\u4e0d\u540c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5e73\u8861\u590d\u6742\u5ea6\uff0c\u8ba9\u4e24\u4e2a\u7ef4\u5ea6\u7684\u4e00\u6b21\u8be2\u95ee\u590d\u6742\u5ea6\u76f8\u4e58\u4e3a $O(n)$\u3002\n\n\u5177\u4f53\u65b9\u6cd5\u89c1 [KDT\u5c0f\u8bb0](https://www.luogu.com.cn/blog/command-block/kdt-xiao-ji)\n\n\u8fd9\u6837\uff0c\u8ba9\u8be2\u95ee\u591a\u7684\u4e00\u7ef4\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{n/\\log n})$ ,\u4e0d\u5e38\u7528\u7684\u4e3a $O(\\sqrt{n\\log n})$\u3002\n\n\u5219\u603b\u590d\u6742\u5ea6\u4e3a $O((n+q)\\sqrt{n\\log n})$\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u8ba9\u76f8\u90bb\u7684\u4e94\u8f6e\u5212\u5206\u4e3a $\\rm xxyxy$ ,\u5b9e\u9645\u590d\u6742\u5ea6\u4e3a $O(qn^{3/5}+n^{7/5}\\log n)$\u3002\n\n\u7531\u4e8e $\\rm KDT$ \u7684\u5927\u5e38\u6570\uff0c\u5b9e\u9645\u6548\u7387\u4e00\u822c\uff0c\u6700\u5927\u70b9\u8017\u65f6 $\\texttt{2.3s}$\u3002\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#define ll long long\n#define pb push_back\n#define MaxN 100500\nusing namespace std;\nconst int INF=1000000000;\nstruct ACAM_Node{int t[26],f,ed,cnt;}a[MaxN];\nint tn=1,tp[MaxN];\nvoid add(char *s,int len,int pos)\n{\n  int u=1;\n  for (int i=0,c;i<len;i++){\n  \tc=s[i]-'a';\n    if (!a[u].t[c])\n      a[u].t[c]=++tn;\n    u=a[u].t[c];\n  }a[u].ed++;tp[pos]=u;\n}\nvoid buildACAM()\n{\n  static int q[MaxN],l,r;\n  l=1;r=0;\n  for (int i=0;i<26;i++)\n    if (a[1].t[i]){\n      a[a[1].t[i]].f=1;\n      q[++r]=a[1].t[i];\n    }else a[1].t[i]=1;\n  while(l<=r){\n    int u=q[l++],v;\n    for (int i=0;i<26;i++){\n      v=a[a[u].f].t[i];\n      if (a[u].t[i]){\n        a[a[u].t[i]].f=v;\n        q[++r]=a[u].t[i];\n      }else a[u].t[i]=v;\n    }\n  }\n}\nstruct Point{int x,y;}p[MaxN];\nbool cmpX(const Point &A,const Point &B){return A.x<B.x;}\nbool cmpY(const Point &A,const Point &B){return A.y<B.y;}\nstruct KDT_Node{\n  int xl,yl,xr,yr,len,tg;ll s;\n  inline void ladd(int t)\n  {s+=1ll*t*len;tg+=t;}\n}t[MaxN<<2],wf;\nconst bool opt[6]={1,1,0,1,0};\nvoid build(int l,int r,int u,int dep)\n{\n  t[u].len=r-l+1;\n  if (l==r){\n    t[u].xl=t[u].xr=p[l].x;\n    t[u].yl=t[u].yr=p[l].y;\n    return ;\n  }int mid=(l+r)>>1;\n  nth_element(p+l,p+mid,p+r+1,opt[dep%5] ? cmpX : cmpY);\n  build(l,mid,u<<1,dep+1);\n  build(mid+1,r,u<<1|1,dep+1);\n  int ls=u<<1,rs=u<<1|1;\n  t[u].xl=min(t[ls].xl,t[rs].xl);\n  t[u].yl=min(t[ls].yl,t[rs].yl);\n  t[u].xr=max(t[ls].xr,t[rs].xr);\n  t[u].yr=max(t[ls].yr,t[rs].yr);\n}\ninline void up(int u)\n{t[u].s=t[u<<1].s+t[u<<1|1].s;}\ninline void ladd(int u){\n  if (t[u].tg){\n    t[u<<1].ladd(t[u].tg);\n    t[u<<1|1].ladd(t[u].tg);\n    t[u].tg=0;\n  } \n}\nvoid add(int u=1)\n{\n  if (wf.yr<t[u].yl||t[u].yr<wf.yl)return ;\n  if (wf.yl<=t[u].yl&&t[u].yr<=wf.yr)\n    {t[u].ladd(1);return ;}\n  ladd(u);\n  add(u<<1);add(u<<1|1);\n  up(u);\n}\nll qry(int u=1)\n{\n  if (wf.xr<t[u].xl||t[u].xr<wf.xl)return 0;\n  if (wf.xl<=t[u].xl&&t[u].xr<=wf.xr)return t[u].s;\n  ladd(u);\n  return qry(u<<1)+qry(u<<1|1);\n}\nvector<int> g[MaxN];\nstruct Tree_Node{int f,tf,p;}b[MaxN];\nint id[MaxN],siz[MaxN],tim;\nvoid pfs1(int u)\n{\n  siz[u]=1; \n  for (int i=0,v;i<g[u].size();i++)\n    if (!siz[v=g[u][i]]){\n      b[v].f=u;\n      pfs1(v);\n      if (siz[v]>siz[b[u].p])\n        b[u].p=v;\n    }\n}\nvoid pfs2(int u,int tf)\n{\n  b[u].tf=tf;\n  id[u]=++tim;\n  if (b[u].p)pfs2(b[u].p,tf);\n  for (int i=0,v;i<g[u].size();i++)\n    if (!b[g[u][i]].tf)\n      pfs2(g[u][i],g[u][i]);\n}\nll pqry(int u){\n  ll ret=0;\n  while(u){\n    wf.xl=id[b[u].tf];wf.xr=id[u];\n    ret+=qry();\n    u=b[b[u].tf].f;\n  }return ret;\n}\nint dfn[MaxN],out[MaxN];\nvoid pfs3(int u)\n{\n  dfn[u]=++tim; \n  for (int i=0;i<g[u].size();i++)\n    if (!dfn[g[u][i]])\n      pfs3(g[u][i]);\n  out[u]=tim;\n}\nstruct Data{int u,op,p;};\nvector<Data> s[MaxN];\nll ans[MaxN];\nint n,q;\nchar str[MaxN];\nint main()\n{\n  scanf(\"%d%d\",&n,&q);\n  for (int i=1;i<=n;i++){\n    scanf(\"%s\",str);\n    add(str,strlen(str),i);\n  }\n  for (int i=1;i<=tn;i++)\n    for (int c=0;c<26;c++)\n      if (a[i].t[c])\n        g[i].pb(a[i].t[c]);\n  pfs1(1);pfs2(1,1);\n  for (int i=1;i<=tn;i++)g[i].clear();\n  buildACAM();\n  for (int i=2;i<=tn;i++)\n    g[a[i].f].pb(i);\n  tim=0;pfs3(1);\n  for (int i=1;i<=tn;i++)\n    p[i]=(Point){id[i],dfn[i]};\n  build(1,tn,1,0);\n  for (int i=1,l,r,k;i<=q;i++){\n    scanf(\"%d%d%d\",&l,&r,&k);\n    s[l-1].pb((Data){k,-1,i});\n    s[r].pb((Data){k,1,i});\n  }\n  for (int i=1;i<=n;i++){\n    wf.yl=dfn[tp[i]];wf.yr=out[tp[i]];add();\n    for (int j=0;j<s[i].size();j++)\n      ans[s[i][j].p]+=pqry(tp[s[i][j].u])*s[i][j].op;\n  }for (int i=1;i<=q;i++)\n    printf(\"%lld\\n\",ans[i]);\n  return 0;\n}\n```\n\n\u542c\u540c\u5b66\u8bf4\u4f3c\u4e4e\u662f\u6709 $O(n*poly(\\log))$ \u505a\u6cd5\u7684\u2026\u2026\u4e0d\u4f1a\uff0c\u544a\u8f9e\u3002\n",
        "postTime": 1604618336,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n[\u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/587/problem/F)\n\n\u7b2c\u4e00\u773c\u770b\u6210\u4e86 CF547E\u2026\u2026\n\n\u8bdd\u8bf4 CF587F \u548c CF547E \u51fa\u9898\u4eba\u4e00\u6837\u6b38\u2026\u2026\u8fd8\u6709\u53e6\u4e00\u9053 AC \u81ea\u52a8\u673a\u7684\u9898 CF696D \u4e5f\u662f\u8fd9\u4f4d\u540d\u53eb [PrinceOfPersia](https://codeforces.ml/profile/PrinceOfPersia) \u7684\u51fa\u9898\u4eba\u51fa\u7684\u2026\u2026\u4f3c\u4e4e\u8fd9\u4f4d\u795e\u4ed9\u5f88\u64c5\u957f\u5b57\u7b26\u4e32\uff1f\n\n\u8dd1\u9898\u4e86\u8dd1\u9898\u4e86\u2026\u2026\n\n\u4ee4 $m=\\sum|s_i|$\n\nu1s1 \u6211\u505a\u8fd9\u9898\u7684\u65f6\u5019\u4e00\u76f4\u5728\u8003\u8651\u6309\u7167 CF547E \u7684\u5957\u8def\u5bf9\u8be2\u95ee\u8fdb\u884c\u5dee\u5206\u5904\u7406\uff0c\u7136\u9e45\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u3002\u56e0\u4e3a\u8fd9\u9898\u76f8\u5f53\u4e8e\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u65f6\u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u4f4d\u7f6e **fail** \u6811\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\u8bbf\u95ee\u6b21\u6570 $+1$\uff0c\u5e76\u8be2\u95ee\u67d0\u4e2a\u8282\u70b9 $x$ \u5728 **trie** \u6811\u4e0a\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u603b\u5171\u88ab\u6807\u8bb0\u4e86\u591a\u5c11\u6b21\uff0c\u7136\u9e45\u8fd9\u4e2a\u4e1c\u897f\u662f\u65e0\u6cd5\u7528 DS \u76f4\u63a5\u7ef4\u62a4\u7684\uff0ctrie \u6811\u4e0e fail \u6811\u4e4b\u95f4\u4e5f\u65e0\u6cd5\u901a\u8fc7 DFS \u5e8f\u4ec0\u4e48\u7684\u5efa\u7acb\u76f4\u63a5\u7684\u8054\u7cfb\uff0c\u6545\u8be5\u7b97\u6cd5\u662f\u6ca1\u6709\u524d\u9014\u7684\u3002\n\n\u8003\u8651\u6362\u4e00\u79cd\u601d\u8def\u3002\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u6700\u6700\u66b4\u529b\u7684\u505a\u6cd5\uff0c\u5c06 trie \u6811\u4e0a $s_k$ \u7ed3\u5c3e\u4f4d\u7f6e\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u8bbf\u95ee\u6b21\u6570 $+1$\uff0c\u5e76\u679a\u4e3e\u6240\u6709\u5b57\u7b26\u4e32 $i\\in [l,r]$\uff0c\u7edf\u8ba1 $s_i$ \u5728 fail \u6811\u7684\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684\u6807\u8bb0\u6b21\u6570\u4e4b\u548c\uff08\u8fd9\u4e5f\u5c31\u662f $s_i$ \u5728 $s_k$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff09\u5e76\u7d2f\u52a0\u8fdb\u7b54\u6848\u4e2d\u3002\u5176\u6b21\u6211\u4eec\u8fd8\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u521a\u624d\u90a3\u4e2a\u7b97\u6cd5\u7684\u66b4\u529b\u7248\u672c\uff0c\u8fd8\u662f\u5c06\u8be2\u95ee\u5dee\u5206\u5904\u7406\uff0c\u62c6\u6210\u4e24\u4e2a\u5f62\u5982\u201c\u524d $x$ \u4e2a\u5b57\u7b26\u4e32\u5728 $s_y$ \u4e2d\u603b\u5171\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u201d\u5e76\u5c06\u8fd9\u6837\u7684\u8be2\u95ee\u6302\u5728 $x$ \u4e0a\u3002\u8003\u8651\u52a8\u6001\u63d2\u5165\u8fd9\u4e9b\u5b57\u7b26\u4e32\uff0c\u5f53\u6211\u4eec\u63d2\u5165\u67d0\u4e2a\u5b57\u7b26\u4e32 $s_i$ \u7684\u65f6\u5019\u5c31\u7528\u6811\u72b6\u6570\u7ec4+DFS \u5e8f\u4ee4 $s_i$ \u5728 fail \u6811\u7684\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684\u6807\u8bb0\u6b21\u6570 $+1$\uff0c\u7136\u800c\u5bf9\u4e8e\u67e5\u8be2\u5c31\u6ca1\u6709\u4ec0\u4e48\u597d\u65b9\u6cd5\u4e86\uff0c\u53ea\u80fd\u66b4\u529b\u8df3 $s_k$ \u5728 trie \u6811\u4e0a\u7684\u7956\u5148\u5e76\u5c06\u8be5\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684\u6807\u8bb0\u6b21\u6570\u7d2f\u52a0\u5165\u7b54\u6848\u3002\n\n\u8fd8\u662f\u8003\u8651\u5c06\u4e24\u4e2a\u66b4\u529b\u7ed3\u5408\u4e00\u4e0b\uff0c\u4e0d\u96be\u53d1\u73b0\u7b2c\u4e00\u4e2a\u66b4\u529b\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u90fd\u66b4\u529b\u6c42\u4e86\u4e00\u904d\uff0c\u5728 $q$ \u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u80fd\u4f53\u73b0\u51fa\u8f83\u5927\u4f18\u52bf\uff0c\u7b2c\u4e8c\u4e2a\u66b4\u529b\u63d2\u5165\u67d0\u4e2a\u5b57\u7b26\u4e32\u65f6\u64cd\u4f5c\u6548\u7387\u8f83\u9ad8\uff0c\u4f46\u67e5\u8be2\u51fa\u73b0\u6b21\u6570\u65f6\u590d\u6742\u5ea6\u4e0e $|s_k|$ \u7684\u957f\u5ea6\u6709\u5173\uff0c\u5728 $|s_i|$ \u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u80fd\u4f53\u73b0\u51fa\u8f83\u5927\u4f18\u52bf\u3002\u6309\u7167\u5957\u8def\u6839\u5206\uff0c\u8bbe\u4e00\u4e2a\u9608\u503c $T$\uff0c\u5bf9\u4e8e\u957f\u5ea6 $>T$ \u7684\u5b57\u7b26\u4e32 $s_k$ \u91c7\u7528\u66b4\u529b\u4e00\u6c42\u51fa\u6240\u6709\u5b57\u7b26\u4e32\u5728 $s_k$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u524d\u7f00\u548c\u76f8\u51cf\u5373\u53ef\uff0c\u7531\u4e8e\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u6700\u591a $\\dfrac{m}{T}$ \u4e2a\uff0c\u6545\u590d\u6742\u5ea6 $\\dfrac{m^2}{T}$\u3002\u5bf9\u4e8e\u957f\u5ea6 $\\leq T$ \u7684\u5b57\u7b26\u4e32\u5c31\u91c7\u7528\u66b4\u529b\u4e8c\uff0c\u590d\u6742\u5ea6 $qT\\log m$\uff0c\u603b\u590d\u6742\u5ea6 $\\dfrac{m^2}{T}+qT\\log m$\uff0c\u6839\u636e\u5747\u503c\u4e0d\u7b49\u5f0f\u53ef\u77e5 $T=\\dfrac{m}{\\sqrt{q\\log m}}$ \u65f6\u590d\u6742\u5ea6\u6700\u4f18\u3002\n\n\u5f53\u7136\u5982\u679c\u4f7f\u7528\u533a\u95f4\u4fee\u6539 $\\mathcal O(\\sqrt{m})$\uff0c\u5355\u70b9\u67e5\u8be2 $\\mathcal O(1)$ \u7684\u5206\u5757\u53ef\u4f7f\u66b4\u529b\u4e8c\u90e8\u5206\u7684\u590d\u6742\u5ea6\u964d\u5230 $n\\sqrt{m}+qT$\uff0c\u4f46\u7531\u4e8e\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u80fd\u8fc7\u5c31\u6ca1\u5199\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=1e5;\nconst int ALPHA=26;\nint n,qu,m=0,blk;string s[MAXN+5];\nint ch[MAXN+5][ALPHA+2],ncnt=0,fail[MAXN+5],ed[MAXN+5];\nvoid insert(string s,int id){\n\tint cur=0;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(!ch[cur][s[i]-'a']) ch[cur][s[i]-'a']=++ncnt;\n\t\tcur=ch[cur][s[i]-'a'];\n\t} ed[id]=cur;\n}\nvoid getfail(){\n\tqueue<int> q;\n\tfor(int i=0;i<ALPHA;i++) if(ch[0][i]) q.push(ch[0][i]);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=0;i<ALPHA;i++){\n\t\t\tif(ch[x][i]){fail[ch[x][i]]=ch[fail[x]][i];q.push(ch[x][i]);}\n\t\t\telse ch[x][i]=ch[fail[x]][i];\n\t\t}\n\t}\n}\nint hd[MAXN+5],to[MAXN+5],nxt[MAXN+5],ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint tim=0,bgt[MAXN+5],edt[MAXN+5];\nvoid dfs(int x){bgt[x]=++tim;for(int e=hd[x];e;e=nxt[e]) dfs(to[e]);edt[x]=tim;}\nll sum[MAXN+5],ss[MAXN+5];\nstruct query{int l,r,k;} q[MAXN+5];\nvector<int> large;\nvector<pii> qv[MAXN+5];\nll ans[MAXN+5];\nll t[MAXN+5];\nvoid add(int x,int v){for(int i=x;i<=ncnt+1;i+=(i&(-i))) t[i]+=v;}\nll query(int x){int ret=0;for(int i=x;i;i&=(i-1)) ret+=t[i];return ret;}\nint main(){\n\tscanf(\"%d%d\",&n,&qu);\n\tfor(int i=1;i<=n;i++) cin>>s[i],m+=s[i].size(),insert(s[i],i);\n\tblk=(int)m/sqrt(qu*log(m)/log(2));\n\tgetfail();for(int i=1;i<=ncnt;i++) adde(fail[i],i);dfs(0);\n\tfor(int i=1;i<=qu;i++){\n\t\tscanf(\"%d%d%d\",&q[i].l,&q[i].r,&q[i].k);\n\t\tif(s[q[i].k].size()>blk) large.pb(i);\n\t\telse qv[q[i].l-1].pb(mp(i,-1)),qv[q[i].r].pb(mp(i,1));\n\t}\n\tsort(large.begin(),large.end(),[](int x,int y){return q[x].k<q[y].k;});\n\tfor(int i=0;i<large.size();i++){\n\t\tif(i==0||q[large[i]].k!=q[large[i-1]].k){\n\t\t\tint id=q[large[i]].k,cur=0;\n\t\t\tmemset(sum,0,sizeof(sum));\n\t\t\tmemset(ss,0,sizeof(ss));\n\t\t\tfor(int j=0;j<s[id].size();j++) cur=ch[cur][s[id][j]-'a'],sum[bgt[cur]]++;\n\t\t\tfor(int j=1;j<=ncnt+1;j++) sum[j]+=sum[j-1];\n\t\t\tfor(int j=1;j<=n;j++) ss[j]=ss[j-1]+sum[edt[ed[j]]]-sum[bgt[ed[j]]-1];\n\t\t} ans[large[i]]=ss[q[large[i]].r]-ss[q[large[i]].l-1];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tadd(bgt[ed[i]],1);add(edt[ed[i]]+1,-1);\n\t\tfor(int j=0;j<qv[i].size();j++){\n\t\t\tint id=qv[i][j].fi,mul=qv[i][j].se,cur=0;\n\t\t\tll ret=0;\n\t\t\tfor(int k=0;k<s[q[id].k].size();k++){\n\t\t\t\tcur=ch[cur][s[q[id].k][k]-'a'];\n\t\t\t\tret+=query(bgt[cur]);\n\t\t\t} ans[id]+=ret*mul;\n\t\t}\n\t}\n\tfor(int i=1;i<=qu;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1613654075,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF587F\u3010Duff is Mad\u3011"
    },
    {
        "content": "\u65e2\u7136\u4e24\u7bc7\u9898\u89e3\u90fd\u662f AC \u81ea\u52a8\u673a\u7684\uff0c\u90a3\u6211\u5c31\u653e\u4e00\u4e2a SA \u7684\u9898\u89e3\u5427\u3002\n\n\u9996\u5148\u5c06 $n$ \u4e2a\u4e32\u7528\u7279\u6b8a\u7b26\u53f7\uff08\u6bd4\u5982 `#`\uff09\u62fc\u8d77\u6765\uff0c\u7136\u540e\u8dd1 SA\uff0c\u6c42 height \u6570\u7ec4\u3002\n\n\u6709\u4e86\u540e\u7f00\u6392\u540d\u548c height \u6570\u7ec4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 ST \u8868\u52a0\u4e8c\u5206 $O((n + |S|) \\log n)$ \u6c42\u51fa\u6bcf\u4e2a\u4e32\u51fa\u73b0\u7684\u540e\u7f00\u6392\u540d\u7684\u533a\u95f4\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u4e00\u4e2a\u4e32\u6709\u7528\u7684\u4fe1\u606f\u5c31\u662f\u5176\u51fa\u73b0\u7684\u540e\u7f00\u6392\u540d\u533a\u95f4\u548c\u6bcf\u4e2a\u540e\u7f00\u7684\u540e\u7f00\u6392\u540d\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5c06 $s_k$ \u7684\u6bcf\u4e2a\u540e\u7f00\u7684\u540e\u7f00\u6392\u540d\u7684\u4f4d\u7f6e\u6807\u8bb0\u4e3a $1$\uff0c\u7136\u540e\u5bf9\u4e8e $x \\in [l, r]$\uff0c\u5bf9 $s_x$ \u7684\u540e\u7f00\u6392\u540d\u533a\u95f4\u6c42\u6807\u8bb0\u548c\u518d\u6c42\u548c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u4e32\u5206\u5757\uff1a\u8003\u8651\u9884\u5904\u7406\u6bcf $B$ \u4e2a\u8fde\u7eed\u7684\u4e32\u5bf9\u6bcf\u4e00\u4e2a $i \\in [1, n]$ \u7684 $s_k$ \u7684\u8d21\u732e\u548c\u3002\u8fd9\u4e2a\u7528\u5dee\u5206\u5c31\u53ef\u4ee5\u505a\u5230 $O((n + |S|)\\frac{n}{B})$ \u9884\u5904\u7406\u3002\n\n\u7136\u540e\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u6574\u5757\u6211\u4eec\u53ef\u4ee5\u505a\u5230 $O(1)$ \u8ba1\u7b97\u3002\u4f46\u662f\u8fb9\u89d2\u4e0d\u592a\u597d\u5904\u7406\u3002\u8003\u8651\u79bb\u7ebf\uff0c\u5bf9\u4e8e $s_k$ \u7edf\u4e00\u8be2\u95ee\uff1a\u6bcf\u6b21\u679a\u4e3e $s_k$\uff0c\u7136\u540e\u7528\u6811\u72b6\u6570\u7ec4\u5728\u5176\u540e\u7f00\u6392\u540d\u4f4d\u7f6e $+1$\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fb9\u89d2\uff0c\u5355\u4e2a\u4e32\u8be2\u95ee\u5c31\u53ef\u4ee5\u505a\u5230 $O(\\log n)$\uff0c\u5bf9\u4e8e\u8fb9\u89d2\u7684\u8be2\u95ee\u7684\u603b\u590d\u6742\u5ea6\u4e3a $O(|S| \\log |S| + qB\\log|S|)$\u3002\n\n\u539f\u672c\u5e94\u8be5\u53d6 $B = \\sqrt{\\frac{n}{\\log n}}$ \u5f97\u5230\u6700\u4f18\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u8003\u8651\u5230\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{n^2}{B})$\uff0c\u53ea\u80fd\u727a\u7272\u65f6\u95f4\u6362\u7a7a\u95f4\uff0c\u53d6 $B = \\sqrt{n}$\u3002\u5219\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt{n} \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt{n})$\u3002\u8fd9\u91cc\u8ba4\u4e3a $n,q,|S|$ \u540c\u7ea7\u3002\n\n${\\rm Code}$\uff1a\n\n```cpp\ntypedef long long ll;\n\nconst int B = 510;\nconst int MAXM = 200010;\nconst int MAXN = 100010;\n\nint N;\nchar s[MAXM];\nchar in[MAXN];\nint bel[MAXM]; \nint head[MAXM];\nvector<int>pos[MAXN];\nint rgL[MAXN];\nint rgR[MAXN];\n\nint cf[MAXM];\nint Bel[MAXN];\nint val[MAXN][B];\n\n//{{{ bit\nstruct BIT {\n\tint T[MAXM];\n\n\tinline void Add(int p, int v) { while(p <= N) T[p] += v, p += p & -p; }\n\tinline int Q(int p) { int v = 0; while(p) v += T[p], p ^= p & -p; return v; }\n\tinline int Sum(int l, int r) { return Q(r) - Q(l - 1); }\n}bit;\n//}}}\n\n//{{{ Suffix Array\nint ST[20][MAXM];\nint lg[MAXM];\nint sa[MAXM];\nint rk[MAXM];\nint ht[MAXM];\nint x[MAXM];\nint y[MAXM];\nint c[MAXM];\n\ninline void SA(char s[], int n, int m) {\n\tfor(int i = 1; i <= n; i++) ++c[x[i] = s[i]];\n\tfor(int i = 2; i <= m; i++) c[i] += c[i - 1];\n\tfor(int i = n; i >= 1; i--) sa[c[x[i]]--] = i;\n\tfor(int k = 1, jsq = 0; k <= n; k <<= 1, jsq = 0) {\n\t\tfor(int i = n - k + 1; i <= n; i++) y[++jsq] = i;\n\t\tfor(int i = 1; i <= n; i++) if(sa[i] > k) y[++jsq] = sa[i] - k;\n\t\tfor(int i = 1; i <= m; i++) c[i] = 0;\n\t\tfor(int i = 1; i <= n; i++) c[x[i]]++;\n\t\tfor(int i = 2; i <= m; i++) c[i] += c[i - 1];\n\t\tfor(int i = n; i >= 1; i--) sa[c[x[y[i]]]--] = y[i];\n\t\tswap(x, y), jsq = x[sa[1]] = 1;\n\t\tfor(int i = 2; i <= n; i++)\n\t\t\tx[sa[i]] = y[sa[i]] == y[sa[i - 1]] && y[sa[i] + k] == y[sa[i - 1] + k] ? jsq : ++jsq;\n\t\tif(jsq == n) break; m = jsq;\n\t} for(int i = 1; i <= n; i++) rk[sa[i]] = i;\n\tfor(int i = 1, j, k = 0; i <= n; i++) {\n\t\tif(rk[i] == 1) continue;\n\t\tk -= k > 0, j = sa[rk[i] - 1];\n\t\twhile(i + k <= n && j + k <= n && s[i + k] == s[j + k]) ++k;\n\t\tST[0][rk[i]] = ht[rk[i]] = k;\n\t}\n\tfor(int i = 2; i <= n; i++) lg[i] = lg[i >> 1] + 1;\n\tfor(int i = 1, bs = 1; i < 20; i++, bs <<= 1)\n\t\tfor(int j = 2, lim = n - (bs << 1) + 1; j <= lim; j++)\n\t\t\tST[i][j] = min(ST[i - 1][j], ST[i - 1][j + bs]);\n}\n\ninline int lcp(int l, int r) {\n\tif(l == r) return 1919810; ++l;\n\tint L = lg[r - l + 1];\n\treturn min(ST[L][l], ST[L][r - (1 << L) + 1]);\n}\n\ninline int findl(int p, int len) {\n\tint l = 1, r = p - 1, res = p;\n\twhile(l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif(lcp(mid, p) >= len) r = mid - 1, res = mid;\n\t\telse l = mid + 1;\n\t} return res;\n}\n\ninline int findr(int p, int len) {\n\tint l = p + 1, r = N, res = p;\n\twhile(l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif(lcp(p, mid) >= len) l = mid + 1, res = mid;\n\t\telse r = mid - 1;\n\t} return res;\n}\n//}}}\n\nstruct Node {\n\tint l, r, id;\n\n\tNode() {}\n\tNode(int l, int r, int id):l(l), r(r), id(id) {}\n};\n\nvector<Node>Q[MAXN];\nint vis[MAXN];\nint col[MAXN];\nll res[MAXN];\n\nint main() {\n\tint n, q;\n\tscanf(\"%d%d\", &n, &q);\n\tfor(int i = 1; i <= n; i++) {\n\t\tscanf(\"%s\", in);\n\t\tint len = strlen(in);\n\t\thead[N + 1] = len;\n\t\tfor(int j = 0; j < len; j++)\n\t\t\ts[++N] = in[j], bel[N] = i;\n\t\ts[++N] = '$';\n\t} SA(s, N, 127);\n\tfor(int i = 1; i <= N; i++) {\n\t\tif(!bel[i]) continue;\n\t\tpos[bel[i]].push_back(rk[i]);\n\t}\n\tfor(int i = 1; i <= N; i++)\n\t\tif(head[i])\n\t\t\trgL[bel[i]] = findl(rk[i], head[i]),\n\t\t\trgR[bel[i]] = findr(rk[i], head[i]);\n\tint C = 0;\n\tfor(int i = 1; i <= n; i += 200) {\n\t\tint st = i, ed = min(n, i + 199); ++C;\n\t\tmemset(cf, 0, sizeof(cf));\n\t\tfor(int j = st; j <= ed; j++) Bel[j] = C, ++cf[rgL[j]], --cf[rgR[j] + 1];\n\t\tfor(int j = 1; j <= N; j++) cf[j] += cf[j - 1];\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tfor(auto p : pos[j])\n\t\t\t\tval[j][C] += cf[p];\n\t}\n\tfor(int i = 1; i <= q; i++) {\n\t\tint l = ri, r = ri, k = ri;\n\t\tQ[k].push_back(Node(l, r, i));\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(auto p : pos[i]) bit.Add(p, 1);\n\t\tfor(auto q : Q[i]) {\n\t\t\tll&r = res[q.id];\n\t\t\tif(Bel[q.l] == Bel[q.r]) {\n\t\t\t\tfor(int j = q.l; j <= q.r; j++) {\n\t\t\t\t\tif(col[j] == i) r += vis[j];\n\t\t\t\t\telse r += vis[j] = bit.Sum(rgL[j], rgR[j]), col[j] = i;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tint L = Bel[q.l] + 1, R = Bel[q.r] - 1;\n\t\t\t\tif(Bel[q.l - 1] != Bel[q.l]) r += val[i][L - 1];\n\t\t\t\telse\n\t\t\t\t\tfor(int j = q.l; Bel[j] == L - 1; j++)\n\t\t\t\t\t\tif(col[j] == i) r += vis[j];\n\t\t\t\t\t\telse r += vis[j] = bit.Sum(rgL[j], rgR[j]), col[j] = i;\n\t\t\t\tif(Bel[q.r + 1] != Bel[q.r]) r += val[i][R + 1];\n\t\t\t\telse\n\t\t\t\t\tfor(int j = q.r; Bel[j] == R + 1; j--)\n\t\t\t\t\t\tif(col[j] == i) r += vis[j];\n\t\t\t\t\t\telse r += vis[j] = bit.Sum(rgL[j], rgR[j]), col[j] = i;\n\t\t\t\tfor(int j = L; j <= R; j++) r += val[i][j];\n\t\t\t}\n\t\t}\n\t\tfor(auto p : pos[i]) bit.Add(p, -1);\n\t} for(int i = 1; i <= q; i++) printf(\"%lld\\n\", res[i]);\n\treturn 0;\n}\n```",
        "postTime": 1580875050,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u6211\u7684\u535a\u5ba2\uff1a<https://www.alpha1022.me/articles/cf-587f.htm>\n\n\u65e0\u5185\u9b3c\uff0c\u6765\u4e00\u53d1\u548c ACAM \u89e3\u6cd5\u5e76\u65e0\u672c\u8d28\u533a\u522b\u7684 SAM \u89e3\u6cd5\uff08\n\n\u9996\u5148\u628a\u8be2\u95ee\u5dee\u5206\u6210\u4e24\u4e2a\u53c2\u6570 $r,k$\uff0c\u5e76\u8003\u8651\u4e24\u4e2a\u5b50\u95ee\u9898\uff1a\n\n 1. \u82e5\u6bcf\u6b21\u8be2\u95ee\u7684 $|s_k|$ \u4e4b\u548c\u8f83\u5c0f\u3002\n \n    \u5c06\u8be2\u95ee\u5bf9 $r$ \u6392\u5e8f\uff0c\u5728 Parent Tree \u4e0a\u628a\u6bcf\u4e2a $s_i\\ (i \\le r)$ \u5bf9\u5e94\u7684\u72b6\u6001\u7684\u5b50\u6811\u52a0\u4e00\uff0c\u679a\u4e3e $s_k$ \u6bcf\u4e2a\u524d\u7f00\u5bf9\u5e94\u7684\u72b6\u6001\u5e76\u6c42\u548c\u3002  \n    \u76f8\u5f53\u4e8e\u53cd\u5411\u7edf\u8ba1 $|{\\rm endpos}|$ \u4e4b\u548c \u2014\u2014 \u8ba1\u7b97\u6bcf\u4e2a\u7ed3\u675f\u4f4d\u7f6e\u4e0a\u6709\u591a\u5c11\u4e32\u9020\u6210\u8d21\u732e\u3002\n \n 1. \u82e5 $q$ \u8f83\u5c0f\u3002\n \n    \u5c06\u6240\u6709 $s_k$ \u7684\u6bcf\u4e2a\u524d\u7f00\u5bf9\u5e94\u7684\u72b6\u6001\u5728 Parent Tree \u4e0a\u52a0\u4e00\uff0c\u5e76\u6c42\u5b50\u6811\u548c\uff0c\u5373\u6c42\u6bcf\u4e2a\u72b6\u6001\u5728\u6bcf\u4e2a $s_k$ \u4e2d\u7684\u7684 $|{\\rm endpos}|$\u3002  \n    \u540c\u6837\u5c06\u8be2\u95ee\u5bf9 $r$ \u6392\u5e8f\uff0c\u5bf9\u6bcf\u4e2a $s_i\\ (i \\le r)$ \u5bf9\u5e94\u7684\u72b6\u6001\u6c42\u5176\u5728 $s_k$ \u4e2d\u7684 $|{\\rm endpos}|$ \u4e4b\u548c\u3002\n\n\u8003\u8651\u8bbe\u4e00\u4e2a\u9608\u503c $T$\uff0c\u82e5\u8be2\u95ee\u7684 $|s_k| \\le T$\uff0c\u5219\u505a\u7b2c\u4e00\u4e2a\u5b50\u95ee\u9898\uff0c\u5426\u5219\u505a\u7b2c\u4e8c\u4e2a\u5b50\u95ee\u9898\u3002  \n\u82e5\u5ffd\u7565\u7b2c\u4e00\u4e2a\u5b50\u95ee\u9898\u4e2d\u6570\u636e\u7ed3\u6784\u7684\u590d\u6742\u5ea6\uff0c\u4e24\u90e8\u5206\u590d\u6742\u5ea6\u5206\u522b\u4e3a $O\\left(nT + \\frac{n^2}T\\right)$\uff08\u5047\u8bbe $n,q,\\sum|s_i|$ \u540c\u9636\uff09\u3002  \n\u663e\u7136\u5f53 $T = O(\\sqrt n)$ \u65f6\u53d6\u6700\u4f18\u590d\u6742\u5ea6 $O(n \\sqrt n)$\u3002\n\n\u518d\u6765\u8003\u8651\u7b2c\u4e00\u4e2a\u5b50\u95ee\u9898\u4e2d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6ce8\u610f\u5230\u5171\u6709 $O(n)$ \u6b21\u4fee\u6539\u548c $O(n \\sqrt n)$ \u6b21\u67e5\u8be2\uff0c\u4f7f\u7528\u5206\u5757\u505a\u5230 $O(\\sqrt n)$ \u5355\u6b21\u4fee\u6539\u548c $O(1)$ \u5355\u6b21\u67e5\u8be2\u5373\u53ef\u3002  \n\u603b\u590d\u6742\u5ea6\u4f9d\u7136\u4e3a $O(n \\sqrt n)$\uff08\u65f6\u7a7a\u5e38\u6570\u6781\u5927\uff09\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int N = 1e5;\nconst int LIM = 430;\nconst int CNT = N / LIM + 2;\nint n,m,m_lim,q,lim = LIM;\nint len[N + 5],slen[N + 5],ed[N + 5];\nint vis[N + 5],cnt;\nchar s[N + 5];\nlong long sum[CNT + 5],ans[N + 5];\nstruct s_query\n{\n\tint r,k,w,id;\n\tinline bool operator<(const s_query &o) const\n\t{\n\t\treturn r < o.r;\n\t}\n} qry[(N << 1) + 5],qry_lim[(N << 1) + 5];\nnamespace SAM\n{\n\tstruct node\n\t{\n\t\tint ch[26];\n\t\tint fa,len;\n\t} sam[(N << 1) + 5];\n\tint las = 1,tot = 1;\n\tint c[N + 5],a[(N << 1) + 5];\n\tint sz[(N << 1) + 5][CNT + 5];\n\tinline void insert(int x)\n\t{\n\t\tif(sam[las].ch[x])\n\t\t{\n\t\t\tint cur = las,q = sam[cur].ch[x];\n\t\t\tif(sam[cur].len + 1 == sam[q].len)\n\t\t\t\tlas = q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint nxt = ++tot;\n\t\t\t\tsam[nxt] = sam[q],sam[nxt].len = sam[cur].len + 1,sam[q].fa = nxt;\n\t\t\t\tfor(;cur && sam[cur].ch[x] == q;cur = sam[cur].fa)\n\t\t\t\t\tsam[cur].ch[x] = nxt;\n\t\t\t\tlas = nxt;\n\t\t\t}\n\t\t\treturn ;\n\t\t}\n\t\tint cur = las,p = ++tot;\n\t\tsam[p].len = sam[cur].len + 1;\n\t\tfor(;cur && !sam[cur].ch[x];cur = sam[cur].fa)\n\t\t\tsam[cur].ch[x] = p;\n\t\tif(!cur)\n\t\t\tsam[p].fa = 1;\n\t\telse\n\t\t{\n\t\t\tint q = sam[cur].ch[x];\n\t\t\tif(sam[cur].len + 1 == sam[q].len)\n\t\t\t\tsam[p].fa = q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint nxt = ++tot;\n\t\t\t\tsam[nxt] = sam[q],sam[nxt].len = sam[cur].len + 1,sam[p].fa = sam[q].fa = nxt;\n\t\t\t\tfor(;cur && sam[cur].ch[x] == q;cur = sam[cur].fa)\n\t\t\t\t\tsam[cur].ch[x] = nxt;\n\t\t\t}\n\t\t}\n\t\tlas = p;\n\t}\n\tinline void build()\n\t{\n\t\tfor(register int i = 1;i <= tot;++i)\n\t\t\t++c[sam[i].len];\n\t\tfor(register int i = 1;i <= N;++i)\n\t\t\tc[i] += c[i - 1];\n\t\tfor(register int i = tot;i > 1;--i)\n\t\t\ta[c[sam[i].len]--] = i;\n\t\tfor(register int i = tot;i > 1;--i)\n\t\t\tfor(register int j = 1;j <= cnt;++j)\n\t\t\t\tsz[sam[a[i]].fa][j] += sz[a[i]][j];\n\t}\n}\nnamespace BLOCK\n{\n\tconst int N = 2e5;\n\tconst int BLK = 450;\n\tconst int CNT = N / BLK + 2;\n\tint n,block = BLK,pos[N + 5];\n\tint pre[CNT + 5],sum[N + 5];\n\tinline void init()\n\t{\n\t\tn = SAM::tot;\n\t\tfor(register int i = 1;i <= n;++i)\n\t\t\tpos[i] = (i - 1) / block + 1;\n\t}\n\tinline void update(int x,int k)\n\t{\n\t\tif(x > n)\n\t\t\treturn ;\n\t\tfor(register int i = pos[x];i <= pos[n];++i)\n\t\t\tpre[i] += k;\n\t\tfor(register int i = x;i <= min(pos[x] * block,n);++i)\n\t\t\tsum[i] += k;\n\t}\n\tinline void update(int l,int r,int k)\n\t{\n\t\tupdate(l,k),update(r + 1,-k);\n\t}\n\tinline int query(int x)\n\t{\n\t\treturn pre[pos[x] - 1] + sum[x];\n\t}\n}\nnamespace TREE\n{\n\tint to[(N << 1) + 5],pre[(N << 1) + 5],first[(N << 1) + 5];\n\tinline void add(int u,int v)\n\t{\n\t\tstatic int tot = 0;\n\t\tto[++tot] = v,pre[tot] = first[u],first[u] = tot;\n\t}\n\tint sz[(N << 1) + 5],id[(N << 1) + 5];\n\tvoid dfs(int p)\n\t{\n\t\tstatic int tot = 0;\n\t\tid[p] = ++tot,sz[p] = 1;\n\t\tfor(register int i = first[p];i;i = pre[i])\n\t\t\tdfs(to[i]),sz[p] += sz[to[i]];\n\t}\n\tinline void init()\n\t{\n\t\tfor(register int i = 2;i <= SAM::tot;++i)\n\t\t\tadd(SAM::sam[i].fa,i);\n\t\tdfs(1);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(register int i = 1;i <= n;++i)\n\t\tscanf(\"%s\",s + slen[i - 1] + 1),slen[i] = slen[i - 1] + (len[i] = strlen(s + slen[i - 1] + 1));\n\tfor(register int i = 1;i <= n;++i)\n\t{\n\t\tlen[i] > lim && (vis[i] = ++cnt),SAM::las = 1;\n\t\tfor(register int j = 1;j <= len[i];++j)\n\t\t\tSAM::insert(s[slen[i - 1] + j] - 'a'),ed[slen[i - 1] + j] = SAM::las,vis[i] && ++SAM::sz[SAM::las][cnt];\n\t}\n\tSAM::build(),BLOCK::init(),TREE::init();\n\tint l,r,k;\n\tfor(register int i = 1;i <= q;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&k);\n\t\tif(vis[k])\n\t\t\tqry_lim[++m_lim] = (s_query){r,vis[k],1,i},qry_lim[++m_lim] = (s_query){l - 1,vis[k],-1,i};\n\t\telse\n\t\t\tqry[++m] = (s_query){r,k,1,i},qry[++m] = (s_query){l - 1,k,-1,i};\n\t}\n\tsort(qry + 1,qry + m + 1),sort(qry_lim + 1,qry_lim + m_lim + 1);\n\tfor(register int i = 1,r = 1;i <= m;++i)\n\t{\n\t\tfor(;r <= qry[i].r;++r)\n\t\t\tBLOCK::update(TREE::id[ed[slen[r]]],TREE::id[ed[slen[r]]] + TREE::sz[ed[slen[r]]] - 1,1);\n\t\tfor(register int j = 1;j <= len[qry[i].k];++j)\n\t\t\tans[qry[i].id] += qry[i].w * BLOCK::query(TREE::id[ed[slen[qry[i].k - 1] + j]]);\n\t}\n\tfor(register int i = 1,r = 1;i <= m_lim;++i)\n\t{\n\t\tfor(;r <= qry_lim[i].r;++r)\n\t\t\tfor(register int j = 1;j <= cnt;++j)\n\t\t\t\tsum[j] += SAM::sz[ed[slen[r]]][j];\n\t\tans[qry_lim[i].id] += qry_lim[i].w * sum[qry_lim[i].k];\n\t}\n\tfor(register int i = 1;i <= q;++i)\n\t\tprintf(\"%lld\\n\",ans[i]);\n}\n```",
        "postTime": 1597411902,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    },
    {
        "content": "\u6bd4 [CF547E](https://www.luogu.com.cn/problem/CF547E) \u7565\u96be\u7684\u5b57\u7b26\u4e32\u597d\u9898\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\u4ee4 $m = \\sum\\limits_{i=1}^n |s_i|$\u3002\n\n\u8bbe $a_i$ \u4e3a\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u5728 AC \u81ea\u52a8\u673a\u4e0a\u7684\u7ec8\u6b62\u7ed3\u70b9\u3002\u8003\u8651\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u7684\u8fc7\u7a0b\uff0c$x$ \u5728 $y$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u5c31\u76f8\u5f53\u4e8e\u5728 Trie \u6811\u4e0a $a_y$ \u5230\u6839\u7ed3\u70b9\u7684\u94fe\u4e0a\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u4e0d\u65ad\u8df3 $\\mathrm{fail}$\uff0c\u6709\u591a\u5c11\u4e2a\u7ed3\u70b9\u662f $a_x$\uff0c\u4e5f\u5c31\u662f\u5728 $\\mathrm{fail}$ \u6811\u4e0a\uff0c\u6709\u591a\u5c11\u4e2a\u7ed3\u70b9\u5728 $a_x$ \u7684\u5b50\u6811\u5185\u3002\n\n\u5982\u679c\u4f60\u5728\u505a [CF547E](https://www.luogu.com.cn/problem/CF547E)\uff0c\u60f3\u5230\u8fd9\u4e00\u6b65\u5c31\u7ed3\u675f\u4e86\u3002\u4f46\u8fd9\u9898\u6c42\u7684\u662f $s_{l...r}$ \u5728 $s_k$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5373 Trie \u6811\u4e0a $a_k$ \u5230\u6839\u7ed3\u70b9\u94fe\u4e0a\u7684\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u5728 $a_{l...r}$ \u7684 $\\mathrm{fail}$ \u5b50\u6811\u5185\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u66b4\u529b\u5904\u7406\u3002\u8003\u8651\u6839\u53f7\u5206\u6cbb\uff0c\u8bbe\u4e00\u4e2a\u9608\u503c $B$\u3002\n\n\u5f53 $|s_k| > B$ \u65f6\uff0c\u4e0d\u96be\u53d1\u73b0\u6ee1\u8db3\u6b64\u8981\u6c42\u7684 $k$ \u662f $O(\\frac{m}{B})$ \u7ea7\u522b\u7684\u3002\u56e0\u6b64\u6bcf\u4e2a $k$ \u53ef\u4ee5 $O(m)$ \u5904\u7406\u3002\u5177\u4f53\u5730\uff0c\u5904\u7406\u6bcf\u4e2a $k$ \u90fd\u5c06 $a_k$ \u5230\u6839\u7ed3\u70b9\u7684\u94fe\u4e0a\u7684\u70b9\u7684 $\\mathrm{size}$ \u8bbe\u4e3a $1$\uff0c\u518d\u4e00\u904d dfs \u6c42\u51fa\u5b50\u6811\u548c\uff0c\u90a3\u4e48\u8be2\u95ee $(l,r,k)$ \u7684\u7b54\u6848\u5373\u4e3a $\\sum\\limits_{i=l}^r \\mathrm{size}_{a_i}$\uff0c\u524d\u7f00\u548c\u9884\u5904\u7406\u540e $O(1)$ \u56de\u7b54\u6bcf\u4e2a\u8be2\u95ee\u3002\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{m^2}{B})$\u3002\n\n\u5f53 $|s_k| \\le B$ \u65f6\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5 $O(|s_k|)$ \u5904\u7406\u3002\u8bbe\u4e00\u4e2a $val$ \u503c\uff0c\u5c06\u6bcf\u4e2a\u8be2\u95ee $(l,r,k)$ \u62c6\u6210 $(1,r,k) - (1,l-1,k)$\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bbe\u5f53\u524d\u904d\u5386\u5230 $i$\uff0c\u5c31\u5c06 $a_i$ \u5728 $\\mathrm{fail}$ \u6811\u4e0a\u7684\u5b50\u6811\u7684 $val$ \u52a0\u4e00\uff0c\u5904\u7406\u53f3\u7aef\u70b9\u4e3a $i$ \u7684\u8be2\u95ee\u65f6\uff0c\u5c31\u76f4\u63a5\u66b4\u529b\u904d\u5386 Trie \u6811\u4e0a $a_k$ \u5230\u6839\u7ed3\u70b9\u7684\u94fe\uff0c\u7d2f\u52a0\u6240\u6709\u7ed3\u70b9\u7684 $val$\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u7684\u6570\u636e\u7ed3\u6784\u3002\u56e0\u4e3a\u5355\u70b9\u67e5\u7684\u6b21\u6570\u662f $O(qB)$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u4f7f\u7528\u533a\u95f4\u52a0 $O(\\sqrt{m})$\u3001\u5355\u70b9\u67e5 $O(1)$ \u7684\u5206\u5757\u5219\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u4e3a $O(n \\sqrt{m} + qB)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt{m} + \\frac{m^2}{B} + qB)$\u3002\u8981\u4f7f $\\max(\\frac{m^2}{B},qB)$ \u6700\u5c0f\u5316\uff0c\u663e\u7136\u5728\u51fd\u6570\u56fe\u50cf\u4e0a\u53d6\u4ea4\u70b9\u6700\u4f18\uff0c\u6240\u4ee5 $B = \\frac{m}{\\sqrt{q}}$\uff0c\u6b64\u65f6\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt{m} + m \\sqrt{q})$\u3002\n\n## \u4ee3\u7801\n\n[code](https://codeforces.com/contest/587/submission/162448913)",
        "postTime": 1656687302,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "CF587F \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee](http://codeforces.com/problemset/problem/587/F)\n\n\u6709\u8da3\u7684\u601d\u60f3\n\n\u9996\u5148\u66b4\u529b\u7684\u8bdd\uff0c\u81ea\u7136\u662f\u5bf9\u6bcf\u4e00\u4e2a\u8be2\u95ee\u5728$AC$\u81ea\u52a8\u673a\u4e0a\u8dd1\u4e00\u904d$k$\uff0c\u770b\u770b\u8dd1\u51fa\u6765\u7684\u8282\u70b9\u5728$fail$\u6811\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u4e2a$l$\u5230$r$\u4e4b\u95f4\u7684\u7ed3\u675f\u6807\u8bb0\u5c31\u597d\u4e86\n\n\u6211\u4eec\u53d1\u73b0\u65e0\u8bba\u600e\u4e48\u4f18\u5316\u597d\u50cf\u90fd\u4e0d\u662f\u5f88\u53ef\u884c\uff0c\u8003\u8651\u4e00\u4e0b\u5bf9\u6839\u53f7\u4f18\u5316\n\n\u5bf9\u4e8e\u957f\u5ea6\u5927\u4e8e$\\sqrt{n}$\u7684\u4e32\uff0c\u663e\u7136\u8fd9\u6837\u7684\u4e32\u4e5f\u4e0d\u4f1a\u8d85\u8fc7$\\sqrt{n}$\u4e2a\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u4e32\u5728$AC$\u673a\u4e0a\u8dd1\u4e00\u904d\uff0c\u4e4b\u540e\u7edf\u8ba1\u4e00\u4e0b\u5b50\u6811\u548c\uff0c\u7edf\u8ba1\u4e00\u4e2a\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u56de\u7b54\u8be2\u95ee\u4e86\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u662f$O(n\\sqrt{n})$\n\n\u5bf9\u4e8e\u957f\u5ea6\u5c0f\u4e8e$\\sqrt{n}$\u7684\u4e32\uff0c\u6211\u4eec\u5141\u8bb8\u628a\u6bcf\u4e00\u4e2a\u4e32\u90fd\u653e\u5230$AC$\u81ea\u52a8\u673a\u4e0a\u8dd1\u4e00\u904d\uff0c\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u4e3b\u5e2d\u6811\u6765\u67e5\u4e00\u4e0b\u8dd1\u51fa\u6765\u7684\u8282\u70b9\u5230\u6839\u6709\u591a\u5c11\u4e2a\u6807\u8bb0\u5728$l$\u5230$r$\u4e4b\u95f4\n\n\u8fd9\u8fb9\u7684\u590d\u6742\u5ea6\u662f$O(n\\sqrt{n}logn)$\n\n\u4ee3\u7801\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<cmath>\n#include<queue>\n#define maxn 100005\n#define M 4000005\n#define re register\n#define LL long long \n#define int long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\ninline int read() {\n\tint x=0;char c=getchar();while(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nstruct E{int v,nxt;}e[maxn];\nstruct Ask{int l,r,k,rk,o;}q[maxn];\nint n,m,cnt,tot,num,sz;\nint fail[maxn],son[maxn][26],len[maxn],head[maxn],a[maxn];\nLL sum[maxn],pre[maxn],Ans[maxn];\nint rt[maxn],ls[M],rs[M],d[M];\nstd::string S[maxn];\nchar T[maxn];\nstd::vector<int> v[maxn];\ninline int cmp1(Ask A,Ask B) {if(A.o==B.o)return A.k<B.k;return A.o>B.o;}\ninline void add(int x,int y) {e[++num].v=y;e[num].nxt=head[x];head[x]=num;}\ninline void work() {for(re int i=1;i<=n;i++) pre[i]=pre[i-1]+sum[a[i]];}\ninline void ins(int i) {\n\tscanf(\"%s\",T);\n\tS[i]=T;len[i]=S[i].size();tot+=len[i];\n\tint now=0;\n\tfor(re int j=0;j<S[i].size();j++) {\n\t\tif(!son[now][S[i][j]-'a']) son[now][S[i][j]-'a']=++cnt;\n\t\tnow=son[now][S[i][j]-'a'];\n\t}\n\tv[now].push_back(i);a[i]=now;\n}\ninline void Build() {\n\tstd::queue<int> q;\n\tfor(re int i=0;i<26;i++) if(son[0][i]) q.push(son[0][i]);\n\twhile(!q.empty()) {\n\t\tint k=q.front();q.pop();\n\t\tfor(re int i=0;i<26;i++) \n\t\tif(son[k][i]) fail[son[k][i]]=son[fail[k]][i],q.push(son[k][i]);\n\t\t\telse son[k][i]=son[fail[k]][i];\n\t}\n}\ninline int change(int pre,int x,int y,int pos) {\n\tint root=++sz;\n\td[root]=d[pre]+1;\n\tif(x==y) return root;\n\tls[root]=ls[pre],rs[root]=rs[pre];\n\tint mid=x+y>>1;\n\tif(pos<=mid) ls[root]=change(ls[pre],x,mid,pos);\n\t\telse rs[root]=change(rs[pre],mid+1,y,pos);\n\treturn root;\n}\ninline int query(int p,int x,int y,int pos) {\n\tif(!pos) return 0;\n\tif(x==y) return d[p];\n\tint mid=x+y>>1;\n\tif(pos<=mid) return query(ls[p],x,mid,pos);\n\t\treturn d[ls[p]]+query(rs[p],mid+1,y,pos);\n}\ninline void Query(int i) {\n\tint now=0;\n\tfor(re int j=0;j<len[i];j++) \n\t\tnow=son[now][S[i][j]-'a'],sum[now]++;\n}\ninline void dfs(int x) {\n\tfor(re int i=head[x];i;i=e[i].nxt) {\n\t\tdfs(e[i].v),sum[x]+=sum[e[i].v];\n\t}\n}\ninline void Dfs(int x) {\n\tfor(re int i=head[x];i;i=e[i].nxt) {\n\t\trt[e[i].v]=rt[x];\n\t\tfor(re int j=0;j<v[e[i].v].size();j++) rt[e[i].v]=change(rt[e[i].v],1,n,v[e[i].v][j]);\n\t\tDfs(e[i].v);\n\t}\n}\nsigned main() {\n\tn=read(),m=read();\n\tfor(re int i=1;i<=n;i++) ins(i);\n\ttot=std::sqrt(tot);Build();\n\tfor(re int i=1;i<=m;i++)  \n\t\tq[i].l=read(),q[i].r=read(),q[i].k=read(),q[i].rk=i,q[i].o=(len[q[i].k]>tot);\n\tstd::sort(q+1,q+m+1,cmp1);\n\tfor(re int i=1;i<=cnt;i++) add(fail[i],i);\n\tDfs(0);\n\tint L=1,R=1;Query(q[1].k);dfs(0),work();\n\tfor(re int i=2;i<=m+1;i++) {\n\t\tif(len[q[i].k]<=tot) {for(re int j=L;j<i;j++) Ans[q[j].rk]=pre[q[j].r]-pre[q[j].l-1];R=i;break;}\n\t\tif(q[i].k!=q[i-1].k) {\n\t\t\tfor(re int j=L;j<i;j++) Ans[q[j].rk]=pre[q[j].r]-pre[q[j].l-1];\n\t\t\tmemset(sum,0,sizeof(sum));\n\t\t\tQuery(q[i].k);dfs(0);work();L=i;\n\t\t}\n\t}\n\tfor(re int i=R;i<=m;i++) {\n\t\tint now=0;\n\t\tfor(re int j=0;j<len[q[i].k];j++) \n\t\t\tnow=son[now][S[q[i].k][j]-'a'],Ans[q[i].rk]+=query(rt[now],1,n,q[i].r)-query(rt[now],1,n,q[i].l-1);\n\t}\n\tfor(re int i=1;i<=m;i++) printf(\"%I64d\\n\",Ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1550644618,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    },
    {
        "content": "\u591a\u6a21\u5339\u914d\uff0c\u8003\u8651\u5efa\u51fa AC \u81ea\u52a8\u673a\u548c fail \u6811\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c$s$ \u5728 $t$ \u4e2d\u51fa\u73b0\u6b21\u6570\u53ef\u4ee5\u770b\u4f5c $s$ \u7ed3\u675f\u8282\u70b9\u5728 fail \u6811\u4e2d\u7684\u5b50\u6811\u5185 $t$ \u7684\u6240\u6709\u7ed3\u675f\u8282\u70b9\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\u3002\n\n\u9996\u5148\u53ef\u4ee5\u5bf9\u8be2\u95ee\u5dee\u5206\uff0c\u5c06\u8be2\u95ee\u533a\u95f4\u90fd\u8f6c\u6210\u524d\u7f00\u3002\n\n\u6ce8\u610f\u5230 $\\sum |s_i|$ \u662f\u6709\u4e0a\u754c\u7684\uff0c\u8003\u8651\u5e73\u8861\u89c4\u5212\uff0c\u4e0d\u96be\u60f3\u5230\u5bf9 $|s_k|$ \u8fdb\u884c\u5e73\u8861\u89c4\u5212\uff0c\u8bbe\u9608\u503c $L$\u3002\n\n- $|s_k|>L$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u6c42\u51fa $s_i$ \u5728 $s_k$ \u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u5177\u4f53\u7684\uff0c\u6211\u4eec\u7ed9 fail \u6811\u4e2d $s_k$ \u7684\u6240\u6709\u8282\u70b9\u90fd\u6253\u4e0a\u6807\u8bb0\uff0c\u7136\u540e\u7edf\u8ba1\u5bf9\u5176\u4ed6\u8282\u70b9\u7edf\u8ba1\u5b50\u6811\u548c\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\frac{nq}{L})$\u3002\n- $|s_k|\\leq L$\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0a\u8ff0\u7edf\u8ba1\u65b9\u5f0f\u4e0d\u518d\u594f\u6548\uff0c\u6211\u4eec\u8003\u8651\u5012\u7740\u7edf\u8ba1\uff0c\u5bf9 $s_k$ \u7edf\u8ba1 $s_{1,\\dots,i}$ \u7684\u8d21\u732e\uff0c\u5177\u4f53\u7684\uff0c\u6211\u4eec\u7ed9 $s_i$ \u7ed3\u675f\u8282\u70b9\u7684\u5b50\u6811 $+1$\uff0c\u6700\u540e\u7edf\u8ba1 $s_k$ \u6240\u6709\u8282\u70b9\u7684\u8282\u70b9\u548c\uff0c\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u6bcf\u6b21\u904d\u5386 $s_k$ \u7684\u6240\u6709\u8282\u70b9\u83b7\u5f97\u7b54\u6848\u3002\u73b0\u5728\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6ce8\u610f\u5230\u533a\u95f4\u52a0\u6b21\u6570\u5c11\uff0c\u67e5\u8be2\u6b21\u6570\u591a\uff0c\u8003\u8651\u4f7f\u7528 $\\mathcal{O}(\\sqrt n)-\\mathcal{O}(1)$ \u7684\u5206\u5757\uff0c\u590d\u6742\u5ea6 $\\mathcal{O}(q(\\sqrt n+L))$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c$L$ \u53d6 $\\sqrt n$ \u65f6\u6700\u4f18\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(q\\sqrt n+n\\sqrt q)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nc)$\u3002\n\n",
        "postTime": 1684654184,
        "uid": 340803,
        "name": "InoueTakina",
        "ccfLevel": 0,
        "title": "Duff is Mad \u9898\u89e3"
    },
    {
        "content": "\u5efa\u51fa AC \u81ea\u52a8\u673a\u3002$s_i$ \u5728 $s_k$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f $s_k$ \u7684\u6240\u6709\u524d\u7f00\u5bf9\u5e94\u7684\u8282\u70b9\u4e2d\u6709\u591a\u5c11\u5728 $fail$ \u6811\u4e0a\u7684\u7956\u5148\u662f $s_i$\u3002\n\n\u90a3\u4e48\u73b0\u5728\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u6709\u4e24\u79cd\u66b4\u529b\uff0c\u679a\u4e3e $s_k$ \u7684\u524d\u7f00\uff0c\u5728 $fail$ \u6811\u4e0a\u5f80\u4e0a\u627e\uff0c\u8ba1\u6570\u3002\u6216\u8005\u5728 $fail$ \u6811\u4e0a dfs\uff0c\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u5b50\u6811\u5185\u6709\u591a\u5c11 $s_k$ \u7684\u524d\u7f00\u3002\n\n\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\n\n\u8bbe $N=\\sum\\vert s\\vert$\u3002\n\n\u5bf9\u4e8e\u6240\u6709 $s_k\\le\\sqrt{N}$\uff0c\u901a\u8fc7\u5dee\u5206\u628a\u5355\u6b21\u8be2\u95ee\u7684 $s_{l\\dots r}$ \u8f6c\u6210 $s_{1\\dots r},s_{1\\dots l-1}$\u3002\u6bcf\u6b21\u63d2\u5165 $s_i$ \u7684\u8d21\u732e\u5c31\u662f\u5728 $fail$ \u6811\u4e0a\u7ed9 $s_i$ \u5bf9\u5e94\u8282\u70b9\u7684\u5b50\u6811\u96c6\u4f53\u52a0\u4e00\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u67e5\u8be2\u5176\u6bcf\u4e00\u4e2a\u524d\u7f00\u5bf9\u5e94\u8282\u70b9\u4e0a\u7684\u503c\u3002\u8fd9\u662f $O(n)$ \u6b21\u533a\u95f4\u4fee\u6539\uff0c$O(q\\sqrt{N})$ \u6b21\u5355\u70b9\u67e5\u8be2\uff0c\u901a\u8fc7\u5206\u5757\u505a\u5230\u603b\u590d\u6742\u5ea6 $O((n+q)\\sqrt{N})$\u3002\n\n\u5bf9\u4e8e\u5269\u4e0b\u7684 $s_k>\\sqrt{N}$\uff0c\u53d1\u73b0\u8fd9\u6837\u7684\u4e32\u7684\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7 $\\sqrt{N}$ \u4e2a\uff0c\u8003\u8651\u5bf9\u4e8e\u6240\u6709\u8fd9\u6837\u7684\u4e32\uff0c\u7b97\u51fa\u6240\u6709 $s_i$ \u5728\u5176\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u7b2c\u4e8c\u79cd\u66b4\u529b $O(N)$ \u7b97\u51fa\u6765\u3002$O(n)$ \u6c42\u524d\u7f00\u548c $O(1)$ \u67e5\u8be2\u3002\u8fd9\u6837\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+N)\\sqrt N)$\u3002\n\ncode\n```cpp\n#include<iostream>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<vector>\nusing namespace std;\nconst int N=100100,S=450,U=26;\nint trie[N][U],ver;\nint fail[N],son[N],bro[N],siz[N],dfn[N];\nint q[N],front,back;\ninline int id(char c){return c-'a';}\ninline int insert(const string&s){\n    int len=s.size(),nd=0;\n    for(int i=0;i<len;i++){\n        if(!trie[nd][id(s[i])])trie[nd][id(s[i])]=++ver;\n        nd=trie[nd][id(s[i])];\n    }\n    return nd;\n}\nvoid pre(int nd,int&dfn_){\n    siz[nd]=1;\n    dfn[nd]=dfn_++;\n    for(int i=son[nd];i;i=bro[i]){\n        pre(i,dfn_);\n        siz[nd]+=siz[i];\n    }\n}\nvoid build(){\n    front=back=0;\n    for(int i=0;i<U;i++)if(trie[0][i])q[++back]=trie[0][i];\n    while(front<back){\n        int nd=q[++front];\n        bro[nd]=son[fail[nd]];\n        son[fail[nd]]=nd;\n        for(int i=0;i<U;i++){\n            if(trie[nd][i])fail[trie[nd][i]]=trie[fail[nd]][i],q[++back]=trie[nd][i];\n            else trie[nd][i]=trie[fail[nd]][i];\n        }\n    }\n    pre(0,*(new int(0)));\n}\n#define ll long long\nstruct offline{int l,r,id;};\nstruct offline2{ll s;int k,id;};\nvector<offline>ask2[N];\nvector<offline2>ask1[N];\nint n,m,pos[N],blk;\nint bel[N],L[S],R[S];\nll laz[S],a[N];\nll f[N];\nstring s[N];\nll ans[N];\nll tag[N];\nvoid dfs(int nd){for(int i=son[nd];i;i=bro[i])dfs(i),tag[nd]+=tag[i];}\nvoid add(const string&s){\n    int nd=0,len=s.size();\n    for(int i=0;i<len;i++){\n        nd=trie[nd][id(s[i])];\n        tag[nd]++;\n    }\n}\nvoid init(){\n    cin>>n>>m;\n    int len=0;\n    for(int i=1;i<=n;i++){\n        cin>>s[i];\n        pos[i]=insert(s[i]);\n        len+=s[i].size();\n    }\n    build();\n    blk=sqrt(len);\n    for(int i=1;i<=ver;i++){\n        bel[i]=(i-1)/blk+1;\n        if(bel[i]!=bel[i-1])L[bel[i]]=i;\n        if(bel[i]!=i/blk+1||i==ver)R[bel[i]]=i;\n    }\n    for(int i=1;i<=m;i++){\n        int l,r,k;cin>>l>>r>>k;\n        if(s[k].size()<=blk){\n            ask1[l-1].emplace_back((offline2){-1,k,i});\n            ask1[r].emplace_back((offline2){1,k,i});\n        }\n        else ask2[k].emplace_back((offline){l,r,i});\n    }\n}\ninline void add(int l,int r,int k){\n    if(bel[l]==bel[r]){for(int i=l;i<=r;i++)a[i]+=k;return;}\n    for(int i=l;i<=R[bel[l]];i++)a[i]+=k;\n    for(int i=L[bel[r]];i<=r;i++)a[i]+=k;\n    for(int i=bel[l]+1;i<bel[r];i++)laz[i]+=k;\n}\ninline ll get_sum(int p){return a[p]+laz[bel[p]];}\ninline ll get_sum(const string&s){\n    int nd=0,len=s.size();\n    ll res=0;\n    for(int i=0;i<len;i++){\n        nd=trie[nd][id(s[i])];\n        res+=get_sum(dfn[nd]);\n    }\n    return res;\n}\nint main(){\n    // freopen(\"read.in\",\"r\",stdin);\n    // freopen(\"write.out\",\"w\",stdout);\n    init();\n    for(int i=1;i<=n;i++){\n        add(dfn[pos[i]],dfn[pos[i]]+siz[pos[i]]-1,1);\n        for(offline2 j:ask1[i]){\n            ans[j.id]+=j.s*get_sum(s[j.k]);\n        }\n    }\n    for(int i=1;i<=n;i++){\n        if(s[i].size()>blk){\n            memset(tag,0,sizeof(tag));\n            add(s[i]);\n            dfs(0);\n            for(int j=1;j<=n;j++)f[j]=f[j-1]+tag[pos[j]];\n            for(offline j:ask2[i])ans[j.id]=f[j.r]-f[j.l-1];\n        }\n    }\n    for(int i=1;i<=m;i++)cout<<ans[i]<<endl;\n}\n```",
        "postTime": 1679801774,
        "uid": 455558,
        "name": "yuanjiabao",
        "ccfLevel": 0,
        "title": "CF587F Duff is Mad \u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF587F)\n\n\u8fd9\u662f\u4e00\u7bc7\u590d\u6742\u5ea6\u4e0d\u5e26 $\\log$\uff0c\u4f46\u662f\u4f5c\u8005\u81ea\u5e26\u5de8\u5927\u5e38\u6570\u5bfc\u81f4\u5dee\u70b9\u8dd1\u4e0d\u8fc7\u5e26 $\\log$ \u7684\u5783\u573e\u505a\u6cd5\u3002\n\n\u56e0\u4e3a\u6587\u672c\u4e32\u7684\u603b\u957f\u6ca1\u6709\u4fdd\u8bc1\u3002\n\n\u90a3\u4e48\u8003\u8651\u5bf9\u6587\u672c\u4e32\u7684\u957f\u5ea6\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5bf9\u4e8e\u957f\u5ea6\u5c0f\u4e8e $B$ \u7684\u4e32\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u590d\u6742\u5ea6 $O(|S|)$ \u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u628a $s_k$ \u5728 $l\\sim r$ \u7684\u8d21\u732e\u62c6\u6210 $s_k$ \u5728 $1\\sim r$ \u7684\u8d21\u732e\u51cf\u53bb $s_k$ \u5728 $1\\sim l-1$ \u7684\u8d21\u732e\u3002\n\n\u4e0d\u96be\u60f3\u5230\u626b\u63cf\u7ebf\uff0c\u6bcf\u4e2a\u8be2\u95ee\u62c6\u6210\u5728 $l-1$ \u548c $r$ \u4e24\u4e2a\u4f4d\u7f6e\u5206\u522b\u505a\u4e00\u6b21\u8d21\u732e\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u5148\u5efa\u51fa\u5168\u5c40\u7684 $\\text{ACAM}$\uff0c\u4ece\u5de6\u5230\u53f3\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u90fd\u628a\u5f53\u524d\u5b57\u7b26\u4e32\u7684 $\\text{endpos}$ \u7684\u4f4d\u7f6e\u5728 $fail$ \u6811\u4e0a\u5b50\u6811 $+1$\uff0c\u8be2\u95ee\u628a\u5b57\u7b26\u4e32\u6254\u5230 $\\text{ACAM}$ \u4e0a\u5339\u914d\u3002\n\n\u9700\u8981\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u4e86\u5e73\u8861\u590d\u6742\u5ea6\uff0c\u4f7f\u7528 $O(\\sqrt n)$ \u4fee\u6539\uff0c$O(1)$ \u67e5\u8be2\u7684\u5206\u5757\u5b9e\u73b0\u3002\u8fd9\u6837\u5c0f\u4e32\u590d\u6742\u5ea6\u5c31\u662f $O(|S|)$ \u7684\u3002\n\n\u5bf9\u4e8e\u957f\u5ea6\u5927\u4e8e $B$ \u7684\u4e32\uff0c\u53ea\u6709\u4e0d\u8d85\u8fc7 $\\frac{n}{B}$ \u4e2a\u5757\u3002\n\n\u6211\u4eec\u6bcf\u4e2a\u5927\u4e32\u5355\u72ec\u5904\u7406\uff0c\u8003\u8651\u5927\u5bf9\u5927\u3002\n\n\u56e0\u4e3a\u540c\u6837\u662f\u5927\u4e32\u7684\u4e5f\u53ea\u6709 $\\frac{n}{B}$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u66b4\u529b\u8dd1\u5339\u914d\u5c31\u53ef\u4ee5\uff0c\u4e5f\u53ef\u4ee5\u5957\u7528\u4e0a\u9762\u7684\u505a\u6cd5\uff0c\u53cd\u6b63\u548b\u4e48\u505a\u90fd\u662f\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n\u8003\u8651\u5927\u4e32\u5bf9\u5c0f\u4e32\uff0c\u628a\u6240\u6709\u5c0f\u4e32\u90fd\u6254\u5230 $\\text{ACAM}$ \u4e0a\uff0c\u56e0\u4e3a\u5c0f\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 $B$ \u6240\u4ee5\u5bf9\u5e94\u7684 $fail$ \u6811\u7684\u6df1\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 $B$\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u4f9d\u6b21\u628a\u5927\u4e32\u6254\u5230 $\\text{ACAM}$ \u4e0a\u8dd1\uff0c\u8fb9\u8dd1\u8fb9\u8df3 $fail$ \u6811\u8bb0\u5f55\u662f\u54ea\u4e2a\u4e32\u51fa\u73b0\u5728\u5f53\u524d\u4e32\uff0c\u6700\u540e\u505a\u4e00\u4e2a\u524d\u7f00\u548c\u3002\u67e5\u8be2\u76f4\u63a5\u524d\u7f00\u548c\u4f5c\u5dee\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(nB)$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5757\u957f\u8c03\u6210 $\\sqrt {n}$ \u65f6\u6700\u4f18\u3002\n\n\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define per(i,a,b) for(int i=b;i>=a;i--)\n#define endl \"\\n\"\n#define For(i,u) for(int i=head[u];i;i=e[i].next)\n#define V vector<int>\n#define VV vector<V>\n#define Debug(a) cout<<\"QwQ \"<<a<<endl;\nconst int MOD=1e9+7;\nint n,m,q;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nusing namespace std;\nconst int N=2e5+5;\nchar c[N];\nint last[N],pos[N],ct=0,tr[N][26],fail[N],big[N],sq; \nint B[400],Bpre[N];\nint cnt=0;\nvector<char>s[N];\nvoid Insert(char *c,int i)\n{\n\tint len=strlen(c+1);\n\ts[i].push_back(' ');\n\trep(j,1,len)\n\t{\n\t\ts[i].push_back(c[j]);\n\t}\n\tint u=0;\n\trep(i,1,len)\n\t{\n\t\tif(!tr[u][c[i]-'a']) tr[u][c[i]-'a']=++ct;\n\t\tu=tr[u][c[i]-'a'];\n\t}\n\tlast[u]++;\n\tpos[i]=u;\n}\nV G[N];\n#define add(u,v) G[u].push_back(v)\nint dfn[N],siz[N],tt=0,id[N];\nll ans[N];\nvoid dfs(int u)\n{\n\tdfn[u]=++tt;siz[u]=1;\n\tfor(int v:G[u]){dfs(v),siz[u]+=siz[v];}\n}\nvoid build()\n{\n\tqueue<int>q;\n\trep(i,0,25)\n\t{\n\t\tif(tr[0][i])\n\t\t{\n\t\t\tq.push(tr[0][i]);\n\t\t\tadd(0,tr[0][i]);\n\t\t}\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\trep(i,0,25)\n\t\t{\n\t\t\tif(tr[u][i])\n\t\t\t{\n\t\t\t\tfail[tr[u][i]]=tr[fail[u]][i];\n\t\t\t\tq.push(tr[u][i]);\n\t\t\t\tadd(fail[tr[u][i]],tr[u][i]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttr[u][i]=tr[fail[u]][i];\n\t\t\t}\n\t\t}\n\t}\n\tdfs(0);\n\trep(i,1,n)\n\t{\n\t\tid[i]=dfn[pos[i]];\n\t}\n}\nVV qy[N];\nint a[N],tag[400],Sq;\n#define getid(i) ((i-1)/Sq+1)\n#define L(i) ((i-1)*Sq+1)\n#define R(i) (i*Sq)\nvoid update(int l,int r,int k)\n{\n\tint bl=getid(l),br=getid(r);\n\tif(bl==br)\n\t{\n\t\trep(i,l,r)\n\t\t{\n\t\t\ta[i]+=k;\n\t\t}\n\t}\n\telse\n\t{\n\t\trep(i,l,R(bl))\n\t\t{\n\t\t\ta[i]+=k;\n\t\t}\n\t\trep(i,bl+1,br-1)\n\t\t{\n\t\t\ttag[i]+=k;\n\t\t}\n\t\trep(i,L(br),r)\n\t\t{\n\t\t\ta[i]+=k;\n\t\t}\n\t}\n}\nint query(int i)\n{\n\treturn a[i]+tag[getid(i)];\n}\nint getdis(int i)\n{\n\tint len=s[i].size()-1;\n\tint u=0,ans=0;\n\trep(now,1,len)\n\t{\n\t\tu=tr[u][s[i][now]-'a'];\n\t\tans+=query(dfn[u]);\n\t}\n\treturn ans;\n}\nll sum[100005];\nVV qq[N];\nvoid clear_()\n{\n\tmemset(tr,0,sizeof(tr));\n\tmemset(last,0,sizeof(last));\n\tmemset(fail,0,sizeof(fail));\n\tct=0;\n}\nint ys[N];\nvoid super_insert(int I)\n{\n\tint len=s[I].size()-1;\n\tint u=0;\n//\tcout<<len<<endl;\n\trep(i,1,len)\n\t{\n//\t\tcout<<s[I][i];\n\t\tif(!tr[u][s[I][i]-'a']) tr[u][s[I][i]-'a']=++ct;\n\t\tu=tr[u][s[I][i]-'a'];\n\t}\n\tys[I]=u;\n}\nvoid super_build()\n{\n\tqueue<int>q;\n\trep(i,0,25)\n\t{\n\t\tif(tr[0][i])\n\t\t{\n\t\t\tq.push(tr[0][i]);\n\t\t}\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\trep(i,0,25)\n\t\t{\n\t\t\tif(tr[u][i])\n\t\t\t{\n\t\t\t\tfail[tr[u][i]]=tr[fail[u]][i];\n\t\t\t\tq.push(tr[u][i]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttr[u][i]=tr[fail[u]][i];\n\t\t\t}\n\t\t}\n\t}\n}\nvoid super_query(int J)\n{\n\tint I=B[J];\n\tint len=s[I].size()-1;\n\tint u=0;\n\trep(i,1,len)\n\t{\n\t\tu=tr[u][s[I][i]-'a'];\n\t\tint tmp=u;\n//\t\tif(I==4) cout<<\"QwQ\"<<endl;\n\t\twhile(tmp)\n\t\t{\n//\t\t\tcout<<tmp<<endl;\n\t\t\tlast[tmp]++;\n\t\t\ttmp=fail[tmp];\n\t\t}\n//\t\tif(I==4) cout<<\"QwQ\"<<endl;\n\t}\n\trep(j,1,n)\n\t{\n\t\tif(!big[j]) sum[j]+=last[ys[j]];\t\n\t}\n\tu=0;\n\trep(i,1,len)\n\t{\n\t\tu=tr[u][s[I][i]-'a'];\n\t\tint tmp=u;\n\t\twhile(tmp)\n\t\t{\n\t\t\tlast[tmp]--;\n\t\t\ttmp=fail[tmp];\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tint LL=0;\n\trep(i,1,n)\n\t{\n\t\tscanf(\"%s\",c+1);\n\t\tInsert(c,i);\n\t\tLL+=strlen(c+1);\n\t}\n\tsq=max(1,(int)sqrt(LL)-100),Sq=sqrt(ct);\n\trep(i,1,n)\n\t{\n\t\tint len=s[i].size()-1;\n\t\tif(len>sq) \n\t\t{\n\t\t\tbig[i]=1; \n\t\t\tB[++cnt]=i;\n\t\t\tBpre[i]=cnt;\n\t\t}\n\t}\n\tbuild();\n\trep(i,1,q)\n\t{\n\t\tint l=read(),r=read(),k=read();\n\t\tif(!big[k])\n\t\t{\n\t\t\tqy[l-1].push_back({k,-1,i});\n\t\t\tqy[r].push_back({k,1,i});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tqq[Bpre[k]].push_back({i,l-1,r});\n\t\t}\n\t}\n\trep(i,1,n)\n\t{\n\t\tupdate(id[i],id[i]+siz[pos[i]]-1,1);\n\t\tfor(auto pos:qy[i])\n\t\t{\n\t\t\tint op=pos[1];\n\t\t\tint num=pos[2];\n\t\t\tint Pos=pos[0];\n\t\t\tans[num]+=op*getdis(Pos);\n\t\t}\n\t}\n\trep(i,1,n)\n\t{\n\t\tupdate(id[i],id[i]+siz[pos[i]]-1,-1);\n\t}\n\trep(i,1,cnt)//\u00b4\u00f3\u00b6\u00d4\u00b4\u00f3 \n\t{\n\t\trep(j,1,cnt)\n\t\t{\n\t\t\tupdate(id[B[j]],id[B[j]]+siz[pos[B[j]]]-1,1);\n\t\t\tsum[B[j]]+=getdis(B[i]);\n\t\t\tupdate(id[B[j]],id[B[j]]+siz[pos[B[j]]]-1,-1);\n\t\t}\n\t\trep(j,1,n)\n\t\t{\n\t\t\tsum[j]+=sum[j-1];\n\t\t}\n\t\tfor(auto v:qq[i])\n\t\t{\n\t\t\tans[v[0]]+=sum[v[2]]-sum[v[1]];\n\t\t}\n\t\tmemset(sum,0,sizeof(sum));\n\t}\n\tclear_();\n\trep(i,1,n)\n\t{\n\t\tif(!big[i])\n\t\t{\n\t\t\tsuper_insert(i);\n\t\t}\n\t}\n\tsuper_build();\n\trep(i,1,cnt)\n\t{\n\t\tsuper_query(i);\n\t\trep(j,1,n)\n\t\t{\n\t\t\tsum[j]+=sum[j-1];\n\t\t}\n\t\tfor(auto v:qq[i])\n\t\t{\n\t\t\tans[v[0]]+=sum[v[2]]-sum[v[1]];\n\t\t}\n\t\tmemset(sum,0,sizeof(sum));\n\t}\n\trep(i,1,q)\n\t{\n\t\tcout<<ans[i]<<endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1679042722,
        "uid": 363980,
        "name": "yszs",
        "ccfLevel": 6,
        "title": "CF587F Duff is Mad\u9898\u89e3"
    },
    {
        "content": "### CF587F Duff is Mad\n\n\u4e0d\u77e5\u9053\u516c\u5f0f\u4f1a\u4e0d\u4f1a\u6302\uff0c\u5efa\u8bae\u5230 Luogu \u535a\u5ba2\u6216\u8005 [\u8fd9\u91cc](https://www.yijan.co/cf587f-duff-is-mad/) \u9605\u8bfb\u3002\n\n\u8fd9\u9898\u5982\u679c\u5f80\u6839\u53f7\u65b9\u9762\u60f3\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u505a\u6cd5\u7684\u3002\u53e6\u5916\u8fd9\u9898\u53ef\u4ee5\u4e0d\u5e26 $\\log$ \u7684\uff01\n\n\u9996\u5148\uff0c\u533a\u95f4\u5185\u7684\u4e32\u5728\u67d0\u4e2a\u4e32\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u53ef\u4ee5\u8003\u8651\u5e7f\u4e49 SAM \u6216\u8005 ACAM\u3002\u611f\u89c9\u4e24\u4e2a\u4e1c\u897f\u90fd\u53ef\u4ee5\u505a\u8fd9\u4e2a\u9898\uff0c\u4e3a\u4e86\u590d\u4e60 ACAM \uff08\u4e3a\u4e86\u53bb\u505a\u4e0a\u6b21 edu \u7684G\uff09\u5199\u4e0b ACAM \u5427\u3002\n\n\u6211\u4eec\u8003\u8651 $s_{l\\dots r}$ \u5728 $s_k$ \u91cc\u51fa\u73b0\u6b21\u6570\u8fd9\u4e2a\u95ee\u9898\u3002\u53ef\u4ee5\u770b\u6210 \u5bf9 $s_x,x\\in [l,r]$ \u770b\u5b83\u5728 $s_k$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u4e2a\u95ee\u9898\u663e\u7136\u662f\u53ef\u4ee5\u524d\u7f00\u548c\u7684\uff0c\u4e5f\u5c31\u662f $s_{1\\dots r}$ \u5728 $s_k$ \u7684\u51fa\u73b0\u6b21\u6570\u51cf\u53bb $s_{1\\dots l-1}$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a $s_k$ \u7ed9\u63d0\u51fa\u6765\u3002\u8bbe\u603b\u957f\u5ea6\u662f $L$ \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u6709\u4e86\u4e24\u79cd\u505a\u6cd5\uff1a\n\n- \u4e00\u4e2a\u4e00\u4e2a\u5b57\u6bcd\u52a0\u5165 $s_{1\\dots n}$ \uff0c\u6211\u4eec\u8bbe\u5f53\u524d\u52a0\u5165\u5b57\u6bcd\u540e\u5728 AC \u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9 $u$ \uff0c\u6211\u4eec\u8003\u8651\u5b83\u662f $s_k$ \u6240\u5904\u7684\u4e00\u8fde\u4e32\u8282\u70b9\u7684\u591a\u5c11\u4e2a\u8282\u70b9\u7684\u7956\u5148\u3002\u5982\u679c\u5b83\u662f\u67d0\u4e2a\u8282\u70b9\u7684\u7956\u5148\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u4f4d\u7f6e\u5728 $s_k$ \u4e2d\u51fa\u73b0\u4e86\u4e00\u6b21\u3002\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u6240\u6709 $s_k$ \u7684\u8282\u70b9\u7684\u7956\u5148\u7684\u4f4d\u7f6e\u7684\u8d21\u732e\u7cfb\u6570\uff0c\u590d\u6742\u5ea6\u662f $O(L)$ \u7684\u3002\n- \u76f4\u63a5\u7ed9 $1\\dots n$ \u7684\u5b57\u7b26\u4e32\u4e00\u4e2a\u4e00\u4e2a\u628a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u5904\u7684\u5b50\u6811 + 1\uff0c\u5f53\u5904\u7406\u5230\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981 $O(len_{s_k})$ \u8dd1\u4e00\u4e0b\u8be2\u95ee\u4e32\u770b\u770b\u8fd9\u4e2a\u4f4d\u7f6e\u88ab\u52a0\u4e86\u591a\u5c11\u6b21\u3002\u8fd9\u6837\u505a\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u4e32\u7684\u590d\u6742\u5ea6\u662f $O(len)$ \u7684\uff0c\u603b\u5171\u8fd8\u6709\u4e2a\u590d\u6742\u5ea6\u4e5f\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a + 1\u7684\u590d\u6742\u5ea6\u3002\u6211\u4eec\u53ef\u4ee5\u7528 BIT \u8f7b\u677e\u505a\u5230 $O(n\\log n)$ \uff0c\u4f46\u662f\u8fd9\u6837\u67e5\u8be2\u590d\u6742\u5ea6\u4e5f\u53d8\u6210\u4e86 $O(len \\log n)$ \u3002\u53c8\u53ef\u4ee5\u62ff\u6839\u53f7\u5e73\u8861\u6765\u4f18\u5316\uff0c\u52a0\u4e00\u7684\u65f6\u5019 $O(\\sqrt L)$ \uff0c\u67e5\u8be2\u7684\u65f6\u5019 $O(1)$ \u3002\u4e8e\u662f\u5904\u7406\u4e00\u4e2a\u4e32\u7684\u590d\u6742\u5ea6\u662f $O(len)$ \u7684\uff0c\u603b\u590d\u6742\u5ea6\u662f $O(qlen + n\\sqrt L)$ \u3002\n\n\u53ef\u4ee5\u628a\u4e24\u4e2a\u65b9\u6cd5\u5408\u5e76\u4e00\u4e0b\uff0c\u5047\u8bbe\u5927\u4e8e $M$ \u7684\u4e32\u6211\u4eec\u7528\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5426\u5219\u7528\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff0c\u4e8e\u662f\u590d\u6742\u5ea6\u662f$O(\\frac {L^2} M + qM + n\\sqrt n)$  \u53ef\u4ee5\u5047\u8bbe $q,L$ \u540c\u9636\uff0c\u628a $M$ \u8bbe\u5230 $\\sqrt L$ \u590d\u6742\u5ea6\u5c31\u6709\u4e86 $O(L\\sqrt L + n\\sqrt L)$\n\n```cpp\n#include \"iostream\"\n#include \"algorithm\"\n#include \"cstring\"\n#include \"cstdio\"\n#include \"cmath\"\n#include \"vector\"\n#include \"map\"\n#include \"set\"\n#include \"bitset\"\n#include \"queue\"\nusing namespace std;\n#define MAXN 100006\n//#define int long long\n#define rep(i, a, b) for (int i = (a), i##end = (b); i <= i##end; ++i)\n#define per(i, a, b) for (int i = (a), i##end = (b); i >= i##end; --i)\n#define chkmn( a , b ) ( (a) = ( (a) < (b) ? (a) : (b) ) )\n#define chkmx( a , b ) ( (a) = ( (a) > (b) ? (a) : (b) ) )\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n#define vi vector<int>\n#define all(x) (x).begin() , (x).end()\n#define mem( a ) memset( a , 0 , sizeof a )\n#define P 998244353\ntypedef long long ll;\nint n , q , L , blo;\n\nchar ch[MAXN]; int len[MAXN];\n\nint son[MAXN][26] , cnt , bac[MAXN];\nvi ns[MAXN];\nvoid ins( char* s , int id ) {\n    int len = strlen( s ) , cur = 0;\n    rep( i , 0 , len - 1 ) {\n        int v = s[i] - 'a';\n        if( !son[cur][v] ) son[cur][v] = ++ cnt;\n        cur = son[cur][v] , ns[id].pb( cur );\n    }\n    bac[id] = cur;\n}\nqueue<int> Q;\nint fail[MAXN];\nvoid build( ) {\n    int u;\n    rep( i , 0 , 25 ) if( son[0][i] ) Q.push( son[0][i] );\n    while( !Q.empty( ) ) {\n        u = Q.front(); Q.pop();\n        rep( i , 0 , 25 ) {\n            if( son[u][i] )\n                fail[son[u][i]] = son[fail[u]][i] , Q.push( son[u][i] );\n            else son[u][i] = son[fail[u]][i];\n        }\n    }\n}\n\nvi G[MAXN];\nvoid addall( ) {\n    rep( i , 1 , cnt ) G[fail[i]].pb( i );\n}\n\nint dfn[MAXN] , R[MAXN] , clo;\nvoid dfs( int u ) {\n    dfn[u] = ++ clo;\n    for( int& v : G[u] ) dfs( v );\n    R[u] = clo;\n}\n\nint cn[MAXN];\nvoid work( int u ) {\n    for( int& v : G[u] ) work( v ) , cn[u] += cn[v];\n}\n\nint BLO;\nnamespace kuai {\n    int T[MAXN] , lz[500];\n    void add( int x , int c ) {\n        if( !x ) return;\n        int w = ( x - 1 ) / BLO; // pervious kuai\n        per( i , x , w * BLO + 1 ) T[i] += c;\n        rep( i , 1 , w ) lz[i] += c;\n    }\n    int get( int x ) {\n        return T[x] + lz[( x - 1 ) / BLO + 1];\n    }\n}\n\nstruct orzzh {\n    int l , r , bp;\n};\nvector<orzzh> que[MAXN] , quel[MAXN];\n\nlong long S[MAXN] , ans[MAXN];\nvoid solve() {\n    cin >> n >> q;\n    rep( i , 1 , n ) {\n        scanf(\"%s\",ch);\n        ins( ch , i );\n        len[i] = strlen( ch ); L += len[i];\n    }\n    blo = sqrt( L ); BLO = sqrt( cnt );\n    build( );\n    int l , r , k;\n    rep( i , 1 , q ) {\n        scanf(\"%d%d%d\",&l,&r,&k);\n        if( len[k] > blo ) {\n            que[k].eb( (orzzh) { l , r , i } );\n        } else {\n            quel[l - 1].eb( (orzzh) { k , -1 , i } );\n            quel[r].eb( (orzzh) { k , 1 , i } );\n        }\n    }\n    addall( );\n    rep( i , 1 , n ) if( !que[i].empty() ) {\n        rep( j , 1 , cnt ) cn[j] = 0 , S[j] = 0;\n        for( int x : ns[i] ) ++ cn[x];\n        work( 0 );\n        rep( j , 1 , n )\n            S[j] = S[j - 1] + cn[bac[j]];\n        for( auto& t : que[i] ) ans[t.bp] += S[t.r] - S[t.l - 1];\n    }\n    dfs( 0 );\n    rep( i , 1 , n ) {\n        kuai::add( R[bac[i]] , 1 ) , kuai::add( dfn[bac[i]] - 1 , -1 );\n//        printf(\"%d %d\\n\",dfn[bac[i]] , R[bac[i]]);\n        for( auto& t : quel[i] ) {\n            long long s = 0;\n            for( int& x : ns[t.l] ) s += kuai::get( dfn[x] );\n            ans[t.bp] += t.r * s;\n        }\n    }\n    rep( i , 1 , q ) printf(\"%lld\\n\",ans[i]);\n}\n\nsigned main() {\n//    freopen(\"input\",\"r\",stdin);\n//    freopen(\"fuckout\",\"w\",stdout);\n//    int T;cin >> T;while( T-- ) solve();\n    solve();\n}\n```\n\n",
        "postTime": 1585299640,
        "uid": 63398,
        "name": "yijan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    },
    {
        "content": "# CF587F \u9898\u89e3\n\n\n\n## \u9898\u76ee\u5927\u610f\n\n> \u7ed9 $n$ \u4e2a\u5b57\u7b26\u4e32 $s_1,s_2,\\dots,s_n$\uff0c$q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee $s_l,s_{l+1},\\dots,s_r$ \u5728 $s_k$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\uff08\u5373 $\\sum_{i=l}^r\\mathrm{occur}(s_i,s_k)$\uff09\u3002\n>\n> \u6570\u636e\u8303\u56f4\uff1a$n,m=\\sum|s_i|,q\\le 10^5$\u3002\n\n## \u601d\u8def\u5206\u6790\n\n\u4e00\u9053\u6bd4\u8f83 trivial \u7684\u6839\u53f7\u5206\u6cbb\u6a21\u677f\u9898\u3002\n\n\u8003\u8651\u523b\u753b $\\mathrm{occur}(s_i,s_k)$\uff0c\u7ecf\u5178\u7684\u505a\u6cd5\u662f\u5efa\u51fa AC \u81ea\u52a8\u673a\uff0c\u7136\u540e\u6c42\u51fa $\\mathrm{start}\\to \\mathrm{Endpos}(s_k)$ \u7684\u8def\u5f84\u4e0e Fail-Tree \u4e0a $s_i$ \u5b50\u6811\u7684\u4ea4\u96c6\u5927\u5c0f\u3002\n\n\u5728\u8fd9\u9053\u9898\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u8be2\u95ee\u62c6\u5206\u6210 $s_1\\sim s_r$ \u548c $s_1\\sim s_{l-1}$ \u5206\u522b\u5728 $s_k$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\uff0c\u56e0\u6b64\u628a\u8be2\u95ee\u79bb\u7ebf\u5230 $l-1$ \u548c $r$ \u4e0a\u8fdb\u884c\u626b\u63cf\u7ebf\uff0c\u6bcf\u6b21\u7ed9 Fail-Tree \u4e0a $\\mathrm{Endpos}(s_i)$ \u7684\u5b50\u6811\u6253\u4e0a $+1$ \u6807\u8bb0\uff0c\u8be2\u95ee\u65f6\u904d\u5386 $\\mathrm{start}\\to\\mathrm{Endpos}(s_k)$ \u7684\u8def\u5f84\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u6c42\u51fa\u88ab\u6807\u8bb0\u7684\u6b21\u6570\u6c42\u548c\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u6b64\u65f6\u5355\u6b21\u56de\u7b54\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u662f $\\mathcal O(|s_k|\\log m)$ \u7684\uff0c\u5bf9\u4e8e\u8f83\u5927\u7684 $|s_k|$ \u4f1a\u8d85\u65f6\uff0c\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\n\n\u8bbe\u957f\u5ea6\u7684\u9608\u503c\u4e3a $B$\uff0c\u5bf9 $|s_k|<B$ \u7684\u8be2\u95ee\u66b4\u529b\u56de\u7b54\uff0c\u590d\u6742\u5ea6\u4e3a $\\mathcal O(qB\\log m)$\u3002\n\n\u5bf9\u4e8e $|s_k|\\ge B$ \u7684\u4e32\uff0c\u663e\u7136\u8fd9\u6837\u7684\u4e32\u7684\u603b\u6570 $\\le \\dfrac mB$\uff0c\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u8fd9\u6837\u7684\u4e32 $s_{j}$ \u5206\u522b\u56de\u7b54\u8be2\u95ee\uff0c\u53ef\u4ee5\u5c06 $\\mathrm{start}\\to\\mathrm{Endpos}(s_k)$ \u6253\u4e0a $+1$ \u6807\u8bb0\uff0c\u7136\u540e\u904d\u5386 Fail-Tree \u505a\u6807\u8bb0\u5b50\u6811\u6c42\u548c\uff0c\u6700\u7ec8\u5bf9\u4e8e\u6bcf\u4e2a $s_i$\uff0c$\\mathrm{occur}(s_i,s_j)$ \u5c31\u7b49\u4e8e $\\mathrm{Endpos}(s_i)$ \u7684\u5b50\u6811\u6807\u8bb0\u548c\uff0c\u7136\u540e\u518d\u524d\u7f00\u548c\u5373\u53ef\u56de\u7b54\u6240\u6709 $k=j$ \u7684\u8be2\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n+m)$\u3002\n\n\u56e0\u6b64\u603b\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(qB\\log m+\\dfrac mB\\times m)$\uff0c\u5747\u503c\u4e0d\u7b49\u5f0f\u5f97\u5230\u590d\u6742\u5ea6\u5728 $B=\\dfrac m{\\sqrt{q\\log m}}$ \u65f6\u6700\u4f18\uff0c\u6b64\u65f6\u590d\u6742\u5ea6\u4e3a $\\mathcal O(m\\sqrt{q\\log m})$\u3002\n\n## \u4ee3\u7801\u5448\u73b0\n\n[Link](https://codeforces.com/problemset/submission/587/203447845)\uff0c\u8dd1\u5f97\u98de\u5feb\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int MAXN=1e5+5;\nint n,q,tot;\nstruct Node {\n\tint fail,ch[26];\n\tinline int& operator [](int x) { return ch[x]; }\n\tinline int& operator [](char c) { return ch[c-'a']; }\n}\ttr[MAXN];\nvector <int> G[MAXN],path[MAXN];\nint dfn[MAXN],edp[MAXN],siz[MAXN],dcnt;\ninline vector<int> insert(const string &str) {\n\tint p=0;\n\tvector <int> P;\n\tfor(auto c:str) {\n\t\tif(!tr[p][c]) tr[p][c]=++tot;\n\t\tp=tr[p][c],P.push_back(p);\n\t}\n\treturn P;\n}\ninline void build() {\n\tqueue <int> Q;\n\tfor(int c=0;c<26;++c) if(tr[0][c]) Q.push(tr[0][c]);\n\twhile(!Q.empty()) {\n\t\tint p=Q.front(); Q.pop();\n\t\tfor(int c=0;c<26;++c) {\n\t\t\tif(tr[p][c]) {\n\t\t\t\ttr[tr[p][c]].fail=tr[tr[p].fail][c];\n\t\t\t\tQ.push(tr[p][c]);\n\t\t\t} else tr[p][c]=tr[tr[p].fail][c];\n\t\t}\n\t}\n}\nclass FenwickTree {\n\tprivate:\n\t\tint tree[MAXN];\n\t\tinline int lowbit(int x) { return x&-x; }\n\tpublic:\n\t\tinline void Modify(int x,int v) {\n\t\t\tfor(;x<=tot+1;x+=lowbit(x)) tree[x]+=v;\n\t\t}\n\t\tinline int Query(int x) {\n\t\t\tint ret=0;\n\t\t\tfor(;x;x-=lowbit(x)) ret+=tree[x];\n\t\t\treturn ret;\n\t\t}\n}\tTR;\nvector <int> ver;\ninline void dfs(int p) {\n\tdfn[p]=++dcnt,siz[p]=1,ver.push_back(p);\n\tfor(int v:G[p]) dfs(v),siz[p]+=siz[v];\n}\nstruct Query1 {\n\tint k,id,c;\n};\nvector <Query1> QS[MAXN];\nstruct Query2 {\n\tint l,r,id;\n};\nvector <Query2> QL[MAXN];\nint ans[MAXN],tag[MAXN],sum[MAXN];\nstring str[MAXN];\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr),cout.tie(nullptr);\n\tcin>>n>>q;\n\tint m=0;\n\tfor(int i=1;i<=n;++i) {\n\t\tcin>>str[i];\n\t\tm+=str[i].size();\n\t\tpath[i]=insert(str[i]);\n\t\tedp[i]=path[i].back();\n\t}\n\tbuild();\n\tfor(int i=1;i<=tot;++i) G[tr[i].fail].push_back(i);\n\tdfs(0);\n\tint B=1.0*m/sqrt(q*__lg(m))+1;\n\treverse(ver.begin(),ver.end());\n\tfor(int i=1;i<=q;++i) {\n\t\tint l,r,k;\n\t\tcin>>l>>r>>k;\n\t\tif((int)str[k].length()<B) {\n\t\t\tQS[l-1].push_back((Query1){k,i,-1});\n\t\t\tQS[r].push_back((Query1){k,i,1});\n\t\t} else {\n\t\t\tQL[k].push_back((Query2){l,r,i});\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i) {\n\t\tif((int)str[i].length()<B) continue;\n\t\tfor(int j=0;j<=tot;++j) tag[j]=0;\n\t\tfor(int u:path[i]) ++tag[u];\n\t\tfor(int u:ver) for(int v:G[u]) tag[u]+=tag[v];\n\t\tfor(int j=1;j<=n;++j) sum[j]=sum[j-1]+tag[edp[j]];\n\t\tfor(auto u:QL[i]) ans[u.id]=sum[u.r]-sum[u.l-1];\n\t}\n\tfor(int i=1;i<=n;++i) {\n\t\tint x=edp[i];\n\t\tTR.Modify(dfn[x],1);\n\t\tTR.Modify(dfn[x]+siz[x],-1);\n\t\tfor(auto u:QS[i]) {\n\t\t\tfor(int p:path[u.k]) {\n\t\t\t\tans[u.id]+=u.c*(TR.Query(dfn[p]));\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=q;++i) cout<<ans[i]<<\"\\n\";\n\treturn 0;\n}\n```\n\n",
        "postTime": 1682433967,
        "uid": 539618,
        "name": "DaiRuiChen007",
        "ccfLevel": 6,
        "title": "CF587F \u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF587F)\n\n\u8bbe $f(s,t)$ \u8868\u793a\u4e32 $s$ \u5728 $t$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u9996\u5148\u628a\u8be2\u95ee $\\sum\\limits_{i=l}^rf(s_i,s_k)$ \u62c6\u6210 $\\sum\\limits_{i=1}^rf(s_i,s_k)-\\sum\\limits_{i=1}^{l-1}f(s_i,s_k)$\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u7b97 $\\sum\\limits_{i=1}^lf(s_i,s_k)$\u3002\n\n\u5efa\u51fa AC \u81ea\u52a8\u673a\u548c fail \u6811\uff0c\u73b0\u5728\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\uff08trie \u6811\u548c fail \u6811\u70b9\u96c6\u76f8\u540c\uff0c\u8fb9\u96c6\u4e0d\u540c\uff09\n\n- \u5728 trie \u6811\u4e0a\u628a $s_k$ \u7ecf\u8fc7\u7684\u8282\u70b9\u90fd +1\uff0c\u7136\u540e\u679a\u4e3e $s_1$ \u5230 $s_l$ \u5728 fail \u6811\u4e0a\u7684\u5b50\u6811\uff0c\u7edf\u8ba1\u5b50\u6811\u4e0a\u6743\u503c\u548c\u3002\n- \u5148\u628a $s_1$ \u5230 $s_l$ \u5728 fail \u6811\u4e0a\u7684\u5b50\u6811\u90fd +1\uff0c\u7136\u540e\u7edf\u8ba1 $s_k$ \u5728 trie \u6811\u4e0a\u7ecf\u8fc7\u7684\u8282\u70b9\u7684\u6743\u503c\u548c\u3002\n\n\u53d1\u73b0\u65f6\u95f4\u74f6\u9888\u5728\u4e8e $s_k$ \u7684\u957f\u5ea6\uff0c\u53c8\u56e0\u4e3a $\\sum\\limits_{i=1}^n|s_i|\\le10^5$\uff0c\u8003\u8651\u79bb\u7ebf\u6839\u53f7\u5206\u6cbb\u3002\n\n\u8bbe\u9608\u503c\u4e3a $B$\uff0c\u957f\u5ea6 $\\le B$ \u7684\u4e32\u7528\u7b2c\u4e8c\u79cd\uff0c\u5426\u5219\u7528\u7b2c\u4e00\u79cd\u9884\u5904\u7406\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5bf9\u957f\u5ea6 $\\le B$ \u7684\u8be2\u95ee\uff0c\u6211\u4eec\u628a\u5b83\u62c6\u5f00\u3001\u79bb\u7ebf\u3001\u6309 $l$ \u6392\u5e8f\u3002\u52a0\u5b50\u6811\u7684\u64cd\u4f5c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5728 dfs \u5e8f\u4e0a\u7684\u533a\u95f4\u52a0\uff0c\u8be2\u95ee\u662f\u5355\u70b9\u67e5\u503c\uff0c\u6811\u72b6\u6570\u7ec4\u5373\u53ef\uff1b\u5bf9\u957f\u5ea6 $>B$ \u7684\u4e32\uff0c\u540c\u6837\u662f\u628a trie \u4e0a\u7684\u70b9\u62cd\u5230 dfs \u5e8f\u4e0a\uff0c\u52a0\u5b8c\u4e4b\u540e\u505a\u524d\u7f00\u548c\uff0c\u7136\u540e\u518d\u679a\u4e3e $l$\uff0c\u505a\u539f\u987a\u5e8f\u7684\u524d\u7f00\u548c\u3002\n\n\u5047\u8bbe $n,q,\\sum\\limits_{i=1}^n|s_i|$ \u540c\u9636\uff0c\u590d\u6742\u5ea6 $O(\\dfrac{n^2}B+Bn\\log n)$\uff0c\u5f53 $B=\\sqrt\\dfrac n{\\log n}$ \u65f6\u6700\u5c0f\uff0c\u6700\u5c0f\u4e3a $O(n\\sqrt{n\\log n})$\u3002\n\ncode:\n```cpp\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#define endl '\\n'\n#define rep(i, s, e) for(int i = s; i <= e; ++i)\n#define per(i, s, e) for(int i = s; i >= e; --i)\n#define F first\n#define S second\n//#define int ll\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef __int128_t i128;\ntypedef __uint128_t u128;\ntypedef pair<int, int> pii;\nconstexpr int N = 1e5 + 5, B = 100;\nint n, Q, tr[N][26], fail[N], m, ed[N], dfn[N], sz[N], pre[N];\nstring s[N];\nbool b[N]; \nvector<int> to[N];\nvector<ll> ss[N];\nll ans[N];\nstruct Query {\n    int l, k, id;\n    Query(int L = 0, int K = 0, int i = 0):\n    l(L), k(K), id(i) {}\n};\nvector<Query> q;\n#define lb(x) ((x) & -(x))\nstruct BIT {\n    int c[N];\n    void clear() { memset(c, 0, sizeof c); }\n    void add(int i, int v) {\n        for(; i <= m; i += lb(i)) c[i] += v;\n    }\n    int sum(int i) {\n        int res = 0;\n        for(; i; i -= lb(i)) res += c[i];\n        return res;\n    }\n} bit;\nvoid insert(string &s, int id) { // \u63d2\u5165 trie\n    int p = 0;\n    for(auto i : s) {\n        int c = i - 'a';\n        if(!tr[p][c]) tr[p][c] = ++m;\n        p = tr[p][c];\n    }\n    ed[id] = p;\n}\nvoid build() { // \u6784\u5efa fail \u6811\n    queue<int> q;\n    rep(i, 0, 25) if(tr[0][i]) q.push(tr[0][i]);\n    while(!q.empty()) {\n        int u = q.front(); q.pop();\n        rep(i, 0, 25) {\n            if(tr[u][i]) fail[tr[u][i]] = tr[fail[u]][i], q.push(tr[u][i]);\n            else tr[u][i] = tr[fail[u]][i];\n        }\n    }\n    rep(i, 1, m) to[fail[i]].push_back(i);\n}\nvoid dfs(int p) { // \u7b97\u51fa fail \u6811\u4e0a\u7684 dfs \u5e8f\u548c\u5b50\u6811\u5927\u5c0f\n    static int ind = 0;\n    dfn[p] = ind++, sz[p] = 1;\n    for(auto i : to[p]) dfs(i), sz[p] += sz[i];\n}\nsigned main() {\n#ifdef ONLINE_JUDGE\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n#endif\n    cin >> n >> Q;\n    rep(i, 1, n) {\n        cin >> s[i];\n        insert(s[i], i);\n        b[i] = s[i].size() > B;\n    }\n    build();\n    dfs(0);\n    rep(i, 1, n) if(b[i]) { // \u9884\u5904\u7406\u957f\u5ea6 >B \u7684\n        memset(pre, 0, sizeof pre);\n        int p = 0;\n        for(auto j : s[i]) p = tr[p][j - 'a'], ++pre[dfn[p]]; \n        rep(j, 1, m) pre[j] += pre[j - 1];\n        ss[i].resize(n + 1);\n        rep(j, 1, n) ss[i][j] = pre[dfn[ed[j]] + sz[ed[j]] - 1] - pre[dfn[ed[j]] - 1] + ss[i][j - 1]; // \u524d\u7f00\u548c\n    }\n    rep(i, 1, Q) {\n        int l, r, k; cin >> l >> r >> k;\n        if(b[k]) ans[i] = ss[k][r] - ss[k][l - 1];\n        else {\n            q.emplace_back(l - 1, k, -i);\n            q.emplace_back(r, k, i);\n        }\n    }\n    sort(q.begin(), q.end(), [](Query &a, Query &b){ return a.l < b.l; });\n    int j = 0;\n    for(auto i : q) { // \u79bb\u7ebf\u5904\u7406\u957f\u5ea6 <B \u7684\n        while(j < i.l) {\n            ++j;\n            bit.add(dfn[ed[j]], 1), bit.add(dfn[ed[j]] + sz[ed[j]], -1);\n        }\n        ll res = 0;\n        int p = 0;\n        for(auto j : s[i.k]) p = tr[p][j - 'a'], res += bit.sum(dfn[p]);\n        if(i.id < 0) ans[-i.id] -= res;\n        else ans[i.id] += res; \n    }\n    rep(i, 1, Q) cout << ans[i] << endl;\n    return 0;\n}\n```",
        "postTime": 1678254684,
        "uid": 393767,
        "name": "Untitled0",
        "ccfLevel": 5,
        "title": "CF587F \u9898\u89e3"
    },
    {
        "content": "**CF587F**\n\n\u83ab\u540d\u5947\u5999\u5728\u8003\u573a\u4e0a\u53d8\u6210\u4e86\u4e71\u505a\u9898\uff0c\u5177\u4f53\u6765\u8bf4\u76f4\u63a5 $\\text{kmp}$ \u6216\u8005\u6570\u636e\u7ed3\u6784\u4f18\u5316\u4e00\u4e0b\u66b4\u529b\u90fd\u80fd\u8fc7\u3002\n\n\u51ed\u611f\u89c9\u5efa\u51fa $\\text{SAM}$\uff0c\u5c1d\u8bd5\u6839\u53f7\u5206\u6cbb\uff1a\n\n- \u663e\u7136\u8d21\u732e\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f $\\text{S}_{\\text k}$ \u7684\u6bcf\u4e2a\u524d\u7f00\u6240\u5728\u7684 $\\text{endpos}$ \u96c6\u5408\u8282\u70b9\u7684\u7956\u5148\u5305\u542b\u4e86\u591a\u5c11\u4e2a\u672b\u5c3e\u4f4d\u7f6e\u5728\u6807\u53f7 $[\\text l,\\text r]$ \u7684\u8282\u70b9\u3002\n\n- \u6839\u53f7\u5206\u6cbb $\\text{S}_{\\text k}$ \u957f\u5ea6\uff0c\u5927\u4e8e\u9608\u503c $\\text {B}$ \u5c31\u5c06\u8d21\u732e\u5728 $[\\text l,\\text r]$ \u4ee3\u8868\u7684\u8282\u70b9\u4e0a\u9762\u7edf\u8ba1\uff0c\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5 $\\text{dfs}$ \u4e00\u904d\u5168\u6811\u540e\u5bf9\u4e8e\u5e8f\u5217\u6eda\u524d\u7f00\u548c\u5904\u7406\u6240\u6709\u8be2\u95ee\u3002\n\n- \u5bf9\u4e8e\u957f\u5ea6\u5c0f\u4e8e\u9608\u503c $\\text{B}$ \u7684 $\\text S_{\\text k}$\uff0c\u505a\u6210 $(\\text 1,\\text r,\\text k) - (\\text 1,\\text l-\\text 1,\\text k)$  \u7684\u5dee\u5206\u8d21\u732e\uff0c\u626b\u63cf\u7ebf $\\text 1 \\sim \\text n$ \u7136\u540e\u76f4\u63a5 $\\text {dfn}$ \u5e8f\u62cd\u6210\u5e8f\u5217\u505a\u975e\u5e73\u8861\u590d\u6742\u5ea6\u7684\u533a\u95f4\u52a0\u5355\u70b9\u67e5\u5373\u53ef\uff0c\u53ef\u4ee5\u4f7f\u7528\u5206\u5757\u3002\n\n\u4ee4 $\\text m = \\sum |\\text s_\\text i|$\uff0c\u89c6 $\\text {n,m,q}$ \u540c\u9636\uff0c\u53d6 $\\text {B} = \\sqrt \\text m$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\text O(\\text m \\sqrt \\text m)$\u3002\n\n```cpp\n/*\n\u6839\u53f7\u5206\u6cbb\u3002\n\u5927\u4e8e\u6839\u53f7\u7684\u76f4\u63a5\u505a\uff0c\u7136\u540e\u524d\u7f00\u548c\u52a0\u51cf\u4e00\u4e0b\u5c31\u5b8c\u4e86\n\u5c0f\u4e8e\u6839\u53f7\u7684\u76f4\u63a5\u79bb\u7ebf\u4e0b\u6765\u505a\u524d\u7f00\u548c\u5f0f\u7684\u5dee\u5206\u5c31\u597d\u4e86\uff01 \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\n#define ll long long\nconst int Len = 2e5 + 5;\nll sum[Len];\nint n,q,len[Len],T,edp[Len];char s[Len];\nstruct node\n{\n\tint ch[28],len,fa;\n\tnode(){memset(ch , 0 , sizeof ch);len = 0;}\n};\nstruct Q1\n{\n\tint id,l,r;\n\tQ1(){id = l = r = 0;}\n\tQ1(int ID,int L,int R){id = ID , l = L , r = R;}\n};\nstruct Q2\n{\n\tint id,o,wh;\n\tQ2(){id = o = wh = 0;}\n\tQ2(int ID,int O,int WH){id = ID , o = O , wh = WH;}\n}bb;\nstruct Mode\n{\n\tint next,to;\n};\nll Pt[Len];\nvector<int> ps[Len];\nvector<Q1> vc[Len];\nvector<Q2> bot[Len];\nstruct Suf_Auto\n{\n\tnode t[Len << 1];int tot,dfn[Len << 1],todfn[Len << 1],tim,Siz[Len << 1];ll siz[Len << 1];\n\tMode edge[Len << 2];int head[Len << 1],cnt;\n\tint b,a[Len << 1],va[Len << 1],pos[Len << 1],L[Len << 1],R[Len << 1];\n\tinline void addd(int from,int to)\n\t{\n\t\tedge[++ cnt].to = to;\n\t\tedge[cnt].next = head[from];\n\t\thead[from] = cnt;\n\t}\n\tSuf_Auto(){tot = 1;}\n\tinline int ins(int c,int lst)\n\t{\n\t\tif(t[lst].ch[c])\n\t\t{\n\t\t\tint p = lst , q = t[lst].ch[c];\n\t\t\tif(t[q].len == t[p].len + 1) return q;\n\t\t\tint nq = ++ tot;t[nq] = t[q];\n\t\t\tt[nq].len = t[p].len + 1;\n\t\t\tt[q].fa = nq;\n\t\t\tfor( ; p && t[p].ch[c] == q ; p = t[p].fa) t[p].ch[c] = nq;\n\t\t\treturn nq; \n\t\t}\n\t\tint p = lst;\n\t\tint np = lst = ++ tot;t[np].len = t[p].len + 1;\n\t\tfor( ; p && !t[p].ch[c] ; p = t[p].fa) t[p].ch[c] = np;\n\t\tif(!p) t[np].fa = 1;\n\t\telse\n\t\t{\n\t\t\tint q = t[p].ch[c];\n\t\t\tif(t[q].len == t[p].len + 1) t[np].fa = q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint nq = ++ tot;t[nq] = t[q];\n\t\t\t\tt[nq].len = t[p].len + 1;\n\t\t\t\tt[q].fa = t[np].fa = nq;\n\t\t\t\tfor( ; p && t[p].ch[c] == q ; p = t[p].fa) t[p].ch[c] = nq;\n\t\t\t}\n\t\t}\n\t\treturn np;\n\t}\n\tvoid build_tree(){for(int i = 2 ; i <= tot ; i ++){addd(t[i].fa , i);}}\n\tvoid DFS(int x,int f)\n\t{\n\t\tdfn[x] = ++ tim;\n\t\ttodfn[tim] = x;\n\t\tSiz[x] = 1;\n\t\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(to == f) continue;\n\t\t\tDFS(to , x);\n\t\t\tSiz[x] += Siz[to];\n\t\t}\n\t}\n\tvoid dfs(int x,int f)\n\t{\n\t\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(to == f) continue;\n\t\t\tdfs(to , x);\n\t\t\tsiz[x] += siz[to];\n\t\t}\n\t}\n\tinline void init()\n\t{\n\t\tb = sqrt(tim);\n\t\tfor(int i = 1 ; i <= tim ; i ++) pos[i] = (i - 1) / b + 1;\t\n\t\tfor(int i = 1 ; i <= tim ; i ++)\n\t\t{\n\t\t\tif(!L[pos[i]]) L[pos[i]] = i;\n\t\t\tR[pos[i]] = max(R[pos[i]] , i);\n\t\t}\n\t}\n\tinline void add(int l,int r)\n\t{\n\t\tif(pos[l] == pos[r])\n\t\t{\n\t\t\tfor(int i = l ; i <= r ; i ++) a[i] ++;\n\t\t\treturn;\n\t\t}\n\t\tfor(int i = l ; i <= R[pos[l]] ; i ++) a[i] ++;\n\t\tfor(int i = pos[l] + 1 ; i <= pos[r] - 1 ; i ++) va[i] ++;\n\t\tfor(int i = L[pos[r]] ; i <= r ; i ++) a[i] ++;\n\t}\n\tinline int Q(int x){return a[x] + va[pos[x]];}\n\tinline void OP(int x,int w){siz[x] += w;}\n}At;\nint main()\n{\n//\tfreopen(\"rkhs.in\",\"r\",stdin);\n//\tfreopen(\"rkhs.out\",\"w\",stdout);\n\tscanf(\"%d %d\",&n,&q);T = 420;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tscanf(\"%s\",s + 1);len[i] = strlen(s + 1);\n\t\tint lst = 1;for(int j = 1 ; j <= len[i] ; j ++){lst = At.ins(s[j] - 'a' , lst);ps[i].push_back(lst);}\t\n\t\tedp[i] = lst;\n\t\t//printf(\"!!!%d %d\\n\",i,edp[i]);\n\t}\n\tAt.build_tree();\n\tAt.DFS(1 , 0);\n\t//for(int i = 1 ; i <= n ; i ++) printf(\"!!!%d %d\\n\",i,At.dfn[edp[i]]);\n\tfor(int i = 1 ; i <= q ; i ++)\n\t{\n\t\tint l,r,k;scanf(\"%d %d %d\",&l,&r,&k);\n\t\tif(len[k] > T)//Q1\n\t\t\tvc[k].push_back(Q1(i , l , r));\n\t\telse//Q2\n\t\t{\n\t\t\t//printf(\"!!!!%d\\n\",i);\n\t\t\tbot[r].push_back(Q2(i , 1 , k)) , bot[l - 1].push_back(Q2(i , -1 , k));\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tif(len[i] > T)//Q1\n\t\t{\n\t\t\tint SZ = (int)ps[i].size();\n\t\t\tfor(int j = 0 ; j < SZ ; j ++) At.OP(ps[i][j] , 1);\n\t\t\tAt.dfs(1 , 0);\n\t\t\tfor(int j = 1 ; j <= n ; j ++) sum[j] = sum[j - 1] + At.siz[edp[j]];\n\t\t\tSZ = (int)vc[i].size();\n\t\t\tfor(int j = 0 ; j < SZ ; j ++) Pt[vc[i][j].id] = sum[vc[i][j].r] - sum[vc[i][j].l - 1];\n\t\t\tfor(int j = 1 ; j <= At.tot ; j ++) At.siz[j] = 0;\n\t\t}\t\n\t} \n\t//Q2\n\tAt.init();\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tAt.add(At.dfn[edp[i]] , At.dfn[edp[i]] + At.Siz[edp[i]] - 1);\n\t\tconst int SZ = (int)bot[i].size();\n\t\tfor(int j = 0 ; j < SZ ; j ++)\n\t\t{\n\t\t\tbb = bot[i][j];\n\t\t\tconst int lle = (int)ps[bb.wh].size();\n\t\t\tfor(int p = 0 ; p < lle ; p ++) Pt[bb.id] += bb.o * At.Q(At.dfn[ps[bb.wh][p]]);\n\t\t} \n\t}\n\tfor(int i = 1 ; i <= q ; i ++) printf(\"%lld\\n\",Pt[i]);\n\treturn 0;\n}\n```",
        "postTime": 1678169319,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u95ee\u53f7\u3002"
    },
    {
        "content": "*3000 \u3002\n\n\u6c42\u4e32\u4e0e\u4e32\u4e4b\u95f4\u7684\u5305\u542b\u5173\u7cfb\u8fd8\u662f\u5f88\u5178\u7684\uff0c\u5efa\u51fa ACAM \u7684 fail \u6811\u4ee5\u540e\u5229\u7528 dfs \u5e8f\u548c size \u8f6c\u5230\u533a\u95f4\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u6bcf\u4e2a\u4e32\u90fd\u8dd1\u4e00\u6b21\uff0c\u7136\u540e\u7edf\u8ba1\u6765\u6e90\u7684\u4e32\uff0c\u590d\u6742\u5ea6 $O(n^2)$ \u3002\n\n\u8003\u8651\u6839\u53f7\u5206\u6cbb\uff0c\u8bbe $B$ \u4e3a\u6839\u53f7\u7ea7\u522b\u7684\u5e38\u6570\uff0c\u4ece\u6bcd\u4e32\u7684\u957f\u5ea6\u53bb\u5206\u6cbb\u3002\n\n\u82e5 $len\\ge B$ \uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u4e32\u4e0d\u8d85\u8fc7 $B$ \u4e2a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e32\u66b4\u529b\u5728 fail \u6811\u4e0a\u52a0\u4e0a\uff0c\u7136\u540e\u904d\u5386\u4e00\u904d fail \u6811\u81ea\u4e0b\u800c\u4e0a\u7edf\u8ba1\u5373\u53ef\uff0c\u7531\u4e8e fail \u6811\u4e00\u5171\u53ea\u6709 $O(n)$ \u4e2a\u7ed3\u70b9\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e3a $O(nB)$ \u3002**\u8fd9\u91cc\u7684 $n$ \u6307\u6240\u6709\u5b57\u7b26\u4e32\u7684\u603b\u957f\u5ea6\uff0c\u800c\u4e0d\u662f\u9898\u76ee\u4e2d\u7684 $n$ \u4e2a\u5b57\u7b26\u4e32\u3002**\n\n\u5bf9\u4e8e $len < B$ \uff0c\u8003\u8651\u7c7b\u4f3c\u626b\u63cf\u7ebf\u7684\u505a\u6cd5\uff0c\u4e00\u4e2a\u4e2a\u4e32\u6309\u987a\u5e8f\u5728 ACAM \u4e2d\u626b\uff0c\u76f8\u5f53\u4e8e\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6240\u5728\u7684\u4f4d\u7f6e\u5728 fail \u6811\u4e0a\u7684\u5b50\u6811\u52a0\uff0c\u628a\u8be2\u95ee\u62c6\u6210 $[1,r]-[1,l-1]$ \u7684\u4e24\u4e2a\u8be2\u95ee\uff0c\u7136\u540e\u6bcf\u6b21\u8be2\u95ee\u679a\u4e3e\u6bcd\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u4e8e\u7684\u4f4d\u7f6e\u5355\u70b9\u67e5\u8be2\u6c42\u548c\u3002\u56e0\u4e3a\u6bcf\u4e2a\u6bcd\u4e32\u590d\u6742\u5ea6\u53ea\u6709 $O(B)$ \uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u53ea\u6709 $O(qB\\log n+n)$ \u3002\n\n\u603b\u7684\u590d\u6742\u5ea6\u4e3a $O(nB+qB\\log n+n)$ \uff0c\u597d\u50cf\u6709\u4e25\u683c\u6839\u53f7\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u6211\u6682\u65f6\u4e0d\u4f1a\uff0c\u591a\u4e2a $\\log$ \u4e5f\u4e0d\u6162\uff0c\u80fd\u5728 $1s$ \u5185\u8dd1\u5b8c\u3002\n\nhttps://codeforces.com/contest/587/submission/159912094",
        "postTime": 1654674966,
        "uid": 115936,
        "name": "\u6cf7\u6cfd\u4e09\u6708",
        "ccfLevel": 0,
        "title": "CF587F"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5199\u7684\u65f6\u5019\u771f\u7684\u7ed9\u6211\u5199 mad \u4e86\uff0c\u5e78\u597d\u6ca1\u8c03\u591a\u4e45\u3002\n\n\u8fd9\u91cc\u662f\u4e00\u53d1 SA \u7684 $\\Theta(n \\sqrt{n}\\log n)$ \u7684\u5927\u5e38\u6570\u505a\u6cd5\u3002(\u4f46\u7a7a\u95f4\u590d\u6742\u5ea6\u7a33\u59a5 $\\Theta(n \\log n)$)\u3002\n\n(\u8fd9\u4e2a\u505a\u6cd5\u7a0d\u52a0\u6539\u52a8\u53ef\u4ee5\u5f97\u5230\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $\\Theta(n \\sqrt n)$ \u7684\u7b97\u6cd5\uff0c\u4f46\u7b14\u8005\u6015\u7206\u7a7a\u95f4\u5c31\u6ca1\u8fd9\u4e48\u5199)\n\n\n\u9996\u5148\u6211\u4eec\u628a\u8fd9\u4e9b\u4e32\u62fc\u5728\u4e00\u8d77\u6c42 SA \u548c height \uff0c\u4e2d\u95f4\u9694\u7279\u6b8a\u5b57\u7b26\uff0c\u5e38\u89c4\u64cd\u4f5c\u4e86\u3002\u8bbe $s_i$ \u5728\u65b0\u4e32\u4e2d\u7684\u4f4d\u7f6e\u4e3a $[l_i,r_i]$.\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a $s_i$ \uff0c\u4ed6\u5982\u679c\u662f\u67d0\u4e2a\u540e\u7f00\u7684\u524d\u7f00\uff0c\u90a3\u6ee1\u8db3\u6761\u4ef6\u7684\u540e\u7f00\u7684 $rk$ \u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u3002\n\n\u4e5f\u5c31\u662f $s_i$ \u5728\u5176\u4ed6\u4e32\u4e2d\u51fa\u73b0\u4f4d\u7f6e\u7684 $rk$ \u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $s_i$ \u90fd\u4e8c\u5206\u51fa\u8fd9\u4e48\u4e00\u4e2a\u533a\u95f4 $[Ql[i],Qr[i]]$.\n\n\u628a\u8be2\u95ee$(l,r,k)$ \u62c6\u6210 $(r,1,k)$ \u548c $(l-1,-1,k)$ ($1$ \u548c $-1$ \u5206\u522b\u8868\u793a\u5bf9\u7b54\u6848\u8d21\u732e\u7684\u7cfb\u6570\uff09\uff0c\u7136\u540e\u6309\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u65b0\u5efa\u4e00\u4e2a\u5e8f\u5217 $a$.\n\n\u62ff\u4e00\u4e2a $i$ \u4ece $1$ \u5230 $n$ \u626b\uff0c\u6bcf\u6b21\u628a\u5e8f\u5217\u4e0a $[Ql[i],Qr[i]]$ \u7684\u6743\u503c\u90fd\u52a01\uff0c\u90a3\u4e48\u5bf9 $s_k$ \u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f $\\sum\\limits_{sa[p] \\in [l_k,r_k]}a[p]$ \uff0c\u4e5f\u5c31\u662f\u5bf9\u6307\u5b9a\u4f4d\u7f6e\u7684\u6743\u503c\u6c42\u548c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5206\u5757\uff0c\u8bbe\u5757\u957f\u4e3a $B$\u3002\n\n\u6bcf\u4e2a\u5757\u5b58\u50a8 \u201c\u5757\u4e2d\u51fa\u73b0\u8fc7\u7684\u6240\u6709\u96c6\u5408\u7684\u6743\u503c\u548c\u201d \u548c \u201c\u5757\u4e2d\u51fa\u73b0\u8fc7\u7684\u6240\u6709\u96c6\u5408\u7684\u5927\u5c0f\u201d\u3002\u4e00\u4e2a\u5757\u4e2d\u53ea\u6709 $O(B)$ \u4e2a\u4e0d\u540c\u7684\u96c6\u5408\u51fa\u73b0\u8fc7\uff0c\u603b\u8017\u8d39\u7a7a\u95f4\u662f $O(\\frac{\\sum|s_i|}{B} \\times B) = O(\\sum |s_i|)$ (\u6ce8\uff1a\u8fd9\u91cc\u7684\u201c\u96c6\u5408\u201d\u5c31\u662f $S_k =\\{p|sa[p] \\in [l_k,r_k]\\}$ \uff0c\u5373 $s_k$ \u7684\u6bcf\u4e2a\u540e\u7f00\u5728 $sa$ \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e)\u3002\n\n\u6bcf\u6b21\u6563\u5757\u4fee\u6539\u65f6\u66b4\u529b\u66f4\u65b0\u4fe1\u606f\uff0c\u533a\u95f4\u52a0\u5c31\u6253 tag,\u6574\u5757\u8be2\u95ee\u7684\u65f6\u5019\u53ef\u4ee5\u6839\u636e $\\text{\u5b9e\u9645\u6743\u503c\u548c} = \\text{\u8bb0\u5f55\u6743\u503c\u548c} + \\text{\u6807\u8bb0} \\times \\text{\u96c6\u5408\u5927\u5c0f}$ \u6765\u7b97\u3002\n\n\u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nint fir[N],sec[N],sa[N],ton[N];\nchar s[N],t[N];\nint n,q,len;\ninline bool cmp(int *r,int i,int j,int l) { return r[i] == r[j] && r[i+l] == r[j+l];}\n#define For(i,a,b) for(int i = (a),end_##i = (b);i <= end_##i;i++)\n#define Rof(i,a,b) for(int i = (a),end_##i = (b);i >= end_##i;i--)\ninline void get_sa(char *s,int *sa,int n,int m)\n{\n\tint *x = fir,*y = sec,*t;\n\tFor(i,1,m) ton[i] = 0;\n\tFor(i,1,n) ton[x[i] = s[i]]++;\n\tFor(i,2,m) ton[i] += ton[i-1];\n\tRof(i,n,1) sa[ton[x[i]]--] = i;\n\tfor(int j = 1,p = 1;j <= n;j *= 2,m = p)\n\t{\n\t\tp = 0;\n\t\tFor(i,n-j+1,n) y[++p] = i;\n\t\tFor(i,1,n) if(sa[i] > j) y[++p] = sa[i] - j;\n\t\tFor(i,1,m) ton[i] = 0;\n\t\tFor(i,1,n) ton[x[i]]++;\n\t\tFor(i,2,m) ton[i] += ton[i-1];\n\t\tRof(i,n,1) sa[ton[x[y[i]]]--] = y[i];\n\t\tt = x;x = y;y = t;p = 1;x[sa[1]] = 1;\n\t\tFor(i,2,n)\n\t\tx[sa[i]] = cmp(y,sa[i-1],sa[i],j) ? p : (++p);\n\t}\n}\nint rk[N],height[N];\nint ST[N][20],lg[N];\ninline void get_hi(char *s,int n)\n{\n\tFor(i,1,n) rk[sa[i]] = i;\n\tint j = 0;\n\tFor(i,1,n)\n\t{\n\t\tif(j) j--;\n\t\tif(rk[i] != 1)\n\t\t\twhile(s[i+j] == s[sa[rk[i]-1]+j]) ++j;\n\t\theight[rk[i]] = j;\n\t}\t\n\tlg[0] = -1;\n\tFor(i,1,n) lg[i] = lg[i >> 1] + 1,ST[i][0] = height[i];\n\tFor(j,1,19)\n\tFor(i,1,n - (1 << j) + 1)\n\tST[i][j] = std::min(ST[i][j-1],ST[i+(1<<j-1)][j-1]);\n}\ninline int Qmin(int l,int r)\n{\n\tint k = lg[r-l+1];\n\treturn std::min(ST[l][k],ST[r-(1<<k)+1][k]);\n}\nint belongs[N],strPos[N],strLen[N];\nconst int MaxB = 470,MaxNum = N / 450 + 10;\nint B;\nint L[N],R[N],Klen[N],Knum[MaxNum],pos[N];\nint Id[MaxNum][MaxB],Num[MaxNum][MaxB];\nint a[N];\nlong long sum[MaxNum][MaxB],tag[MaxNum];\n// sum \u4e3a\u5757\u5185\u6bcf\u4e2a\u96c6\u5408\u7684\u6743\u503c\u548c\uff0cNum \u4e3a\u5757\u5185\u6bcf\u4e2a\u96c6\u5408\u7684\u6743\u503c\u5927\u5c0f\uff0cId \u4e3a\u96c6\u5408\u7f16\u53f7\nint GuiPos[N];\n\ninline void Build(int k)\n{\n\tvector<int> tmp;\n\tfor(int i = L[k];i <= R[k];i++)\n\t\ttmp.push_back(belongs[sa[i]]);\n\tsort(tmp.begin(),tmp.end());\n\n\tfor(int i = 0;i < Klen[k];i++)\n\t\tif(i == 0 || (tmp[i] != tmp[i-1])) Id[k][++Knum[k]] = tmp[i],Num[k][Knum[k]] = 1;\n\t\telse Num[k][Knum[k]] += 1;\n\ttag[k] = 0;\n\tfor(int i = L[k];i <= R[k];i++) GuiPos[i] = lower_bound(Id[k] + 1,Id[k] + Knum[k] + 1,belongs[sa[i]]) - Id[k];\n}\ninline void k_modify(int k,int l,int r,int v)\n{\n\tfor(int i = l;i <= r;i++)\n\t\tsum[k][GuiPos[i]] += v;a[i] += v;\n}\ninline long long k_query(int k,int l,int r,int id)\n{\n\tlong long res = 0;\n\tfor(int i = l;i <= r;i++)\n\t\tif(belongs[sa[i]] == id) res += a[i] + tag[k];\n\treturn res; \n}\ninline void modify(int l,int r,int v)\n{\n\tint p = pos[l],q = pos[r];\n\tif(p == q) return k_modify(p,l,r,v);\n\tk_modify(p,l,R[p],v);k_modify(q,L[q],r,v);\n\tfor(int i = p + 1;i < q;i++)\n\t\ttag[i] += v;\n}\ninline long long Query(int l,int r,int id)\n{\n\tint p = pos[l],q = pos[r];\n\tif(p == q) return k_query(p,l,r,id);\n\tlong long res = 0;\n\tres += k_query(p,l,R[p],id);res += k_query(q,L[q],r,id);\n\tfor(int i = p + 1;i < q;i++)\n\t{\n\t\tint poi = lower_bound(Id[i] + 1,Id[i] + Knum[i] + 1,id) - Id[i];\n\t\tif(Id[i][poi] != id) continue;\n\t\tres += sum[i][poi] + 1ll*tag[i]*Num[i][poi];\n\t}\n\treturn res;\n}\nstruct Node{\n\tint set_id,op,id;\n\tNode(){}\n\tNode(const int _set_id,const int _op,const int _id):\n\tset_id(_set_id),op(_op),id(_id){}\n};\nstd::vector<Node> Que[N];\nint Ql[N],Qr[N];\nlong long ans[N];\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tlen = 0;\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tscanf(\"%s\",t+1);\n\t\tint l = std::strlen(t+1);\n\t\tstrLen[i] = l;strPos[i] = len + 1;\n\t\tfor(int j = 1;j <= l;j++)\n\t\t\ts[j + len] = t[j],belongs[j + len] = i;\n\t\ts[len + l + 1] = '#';\n\t\tlen = len + l + 1;\n\t}\n\tget_sa(s,sa,len,256);\n\tget_hi(s,len);\n\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tint now_rk = rk[strPos[i]];\n\t\tint lef = 1,righ = now_rk;\n\t\twhile(lef < righ)\n\t\t{\n\t\t\tint mid = lef + righ >> 1;\n\t\t\tif(Qmin(mid + 1,now_rk) >= strLen[i]) righ = mid;\n\t\t\telse lef = mid + 1;\n\t\t}\n\t\tQl[i] = lef;\n\t\tlef = now_rk;righ = len;\n\t\twhile(lef < righ)\n\t\t{\n\t\t\tint mid = lef + righ + 1 >> 1;\n\t\t\tif(Qmin(now_rk+1,mid) >= strLen[i]) lef = mid;\n\t\t\telse righ = mid - 1;\n\t\t}\n\t\tQr[i] = righ;\n\t}\n\tB = sqrt(len);\n\tFor(i,1,len) pos[i] = (i - 1) / B + 1;\n\tFor(i,1,len) R[pos[i]] = i;\n\tRof(i,len,1) L[pos[i]] = i;\n\tFor(i,1,pos[len]) Klen[i] = R[i] - L[i] + 1;\n\tFor(i,1,pos[len])\tBuild(i);\n    \n\tfor(int i = 1;i <= q;i++)\n\t{\n\t\tint l,r,k;\n\t\tscanf(\"%d%d%d\",&l,&r,&k);\n\t\tQue[r].push_back(Node(k,1,i));\n\t\tif(l > 1) Que[l-1].push_back(Node(k,-1,i));\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tmodify(Ql[i],Qr[i],1);\n\t\tfor(int j = 0;j < Que[i].size();j++)\n\t\t\tans[Que[i][j].id] += Que[i][j].op * Query(1,len,Que[i][j].set_id);\n\t}\n\tfor(int i = 1;i <= q;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1648626593,
        "uid": 226435,
        "name": "\u5929\u547d\u4e4b\u8def",
        "ccfLevel": 0,
        "title": "CF587F Duff is Mad \u9898\u89e3"
    },
    {
        "content": "## [CF587F Duff is Mad](https://codeforces.com/problemset/problem/587/F)\n~~\u96be\u5f97\u53e3\u80e1\u51fa\u4e86\u5b57\u7b26\u4e32~~\n\n\u6765\u4e00\u6ce2$O(n\\sqrt {n\\log \\sum{|S_i|}})$ SA \u5728\u7ebf\u505a\u6cd5\n\n\u9996\u5148\u6240\u6709\u4e32\u62fc\u4e00\u8d77\u5efa SA\u3002\u5bf9\u6bcf\u4e2a\u4e32\u5904\u7406\u51fa\u4e00\u6bb5 $height\\ge |S_i|$ \u7684 `sa[i]` \u533a\u95f4\n\n\u7136\u540e\u8003\u8651\u5206\u5757\uff0c$B$ \u4e2a\u5b57\u7b26\u4e32\u4e00\u5757\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u9884\u5904\u7406 $f_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u88ab $S_j$ \u5305\u542b\u4e86\u51e0\u6b21\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u5757\u91cc\u6240\u6709\u7684\u533a\u95f4\u5dee\u5206\u8986\u76d6\uff0c\u6700\u540e\u5bf9\u6240\u6709\u70b9\u626b\u4e00\u904d\u5373\u53ef\u6c42\u51fa\n\n\u6563\u5757\u4e00\u6837\u627e\u5230\u533a\u95f4\uff0c\u53ea\u9700\u77e5\u9053\u8fd9\u4e2a\u533a\u95f4\u91cc\u6709\u591a\u5c11\u4e2a\u662f $S_j$ \u7684\u540e\u7f00\uff0c\u4e0d\u7ba1\u4e8c\u5206\u8fd8\u662f\u4e3b\u5e2d\u6811\uff0c\u90fd\u80fd\u5728 $O(\\log n)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\n\n\u4ee4 $m=\\sum|S_i|$\uff0c\u603b\u590d\u6742\u5ea6\u662f $O(m\\log m+mB+q(\\frac n B+B\\log m))$\uff0c$B$ xjb \u53d6\u5c31\u884c\u4e86\uff0c\u4f46\u7531\u4e8e\u7a7a\u95f4\u662f $O(\\frac{n^2}{B})$ \u7684\uff0c\u592a\u5c0f\u5f00\u4e0d\u4e0b\uff0c\u6240\u4ee5\u7a0d\u5fae\u5c11\u5f00\u70b9\u4e5f\u6ca1\u5565\u95ee\u9898\n\n\u6210\u529f\u83b7\u5f97\u6700\u52a3\u89e3\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u70b9\u90fd\u8981\u8dd1 3s+\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n#define fi first\n#define se second\n\n#if __cplusplus < 201703L\n#define register\n#else\n#define rg\n#endif\n\n#define mp make_pair\n#define pb push_back\n#define pf push_front\n\n#define rep(i, s, t) for (int i = s; i <= t; i++)\n#define per(i, s, t) for (int i = t; i >= s; i--)\n#define OK cerr << \"OK!\\n\"\n\nnamespace fastio {\n\tconst int SIZE = (1 << 20) + 1;\n\tchar ibuf[SIZE], *iS, *iT, obuf[SIZE], *oS = obuf, *oT = obuf + SIZE - 1;\n\tchar _st[55];\n\tint _qr = 0;\n\n\tinline char getchar() {\n\t\treturn (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin),\n\t\t        (iS == iT ? EOF : *iS++) : *iS++);\n\t}\n\tinline void qread() {}\n\ttemplate <typename T1, typename... T2>\n\tinline void qread(T1 &x, T2 &...ls) {\n\t\tx = 0;\n\t\tchar ch = ' ';\n\t\tint ps = 1;\n\t\twhile (!isdigit(ch) && ch != '-') ch = getchar();\n\t\tif (ch == '-') ps = -1, ch = getchar();\n\t\twhile (isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n\t\tx *= ps;\n\t\tqread(ls...);\n\t}\n\n\tinline void flush() {\n\t\tfwrite(obuf, 1, oS - obuf, stdout);\n\t\toS = obuf;\n\t\treturn;\n\t}\n\tinline void putchar(char _x) {\n\t\t*oS++ = _x;\n\t\tif (oS == oT) flush();\n\t}\n\ttemplate <typename T>\n\tinline void qwrite(T x) {\n\t\tif (x < 0) putchar('-'), x = -x;\n\t\tif (x < 10) return putchar('0' + x), void();\n\t\tqwrite(x / 10), putchar('0' + (x % 10));\n\t}\n\n\ttemplate <typename T>\n\tinline void qwrite(T x, char ch) {\n\t\tqwrite(x), putchar(ch);\n\t}\n};  // namespace fastio\n\n#ifndef ONLINE_JUDGE\n\nvoid debug(const char *s) {\n\tcerr << s;\n}\ntemplate <typename T1, typename... T2>\nvoid debug(const char *s, const T1 x, T2... ls) {\n\tint p = 0;\n\twhile (*(s + p) != '\\0') {\n\t\tif (*(s + p) == '{' && *(s + p + 1) == '}') {\n\t\t\tcerr << x;\n\t\t\tdebug(s + p + 2, ls...);\n\t\t\treturn;\n\t\t}\n\t\tcerr << *(s + p++);\n\t}\n}\n\n#else\n#define debug(...) void(0)\n#endif\n\nconst ll mod = 1e9 + 7;\n// const ll mod = 1e9 + 9;\n// const ll mod = 19260817;\n// const ll mod = 998244353;\n// const int mod =2017;\n\ntemplate <typename T>\ninline void chkadd(T& x, T y) {\n\tx = x + y >= mod ? x + y - mod : x + y;\n}\ntemplate <typename T>\ninline void chkadd(T& x, T y, T z) {\n\tx = y + z >= mod ? y + z - mod : y + z;\n}\ntemplate <typename T>\ninline void chkmns(T& x, T y) {\n\tx = x - y < 0 ? x - y + mod : x - y;\n}\ntemplate <typename T>\ninline void chkmns(T& x, T y, T z) {\n\tx = y - z < 0 ? y - z + mod : y - z;\n}\ntemplate <typename T>\ninline void chkmax(T& x, T y) {\n\tx = x < y ? y : x;\n}\ntemplate <typename T>\ninline void chkmax(T& x, T y, T z) {\n\tx = y > z ? y : z;\n}\ntemplate <typename T>\ninline void chkmin(T& x, T y) {\n\tx = x < y ? x : y;\n}\ntemplate <typename T>\ninline void chkmin(T& x, T y, T z) {\n\tx = y < z ? y : z;\n}\n\nll qpow(ll x, ll p) {\n\tll base = x, res = 1;\n\twhile (p) {\n\t\tif (p & 1) res = (res * base) % mod;\n\t\tbase = (base * base) % mod;\n\t\tp >>= 1;\n\t}\n\treturn res;\n}\n\n/* template ends here */\n\nconst int N = 1e5 + 5;\nconst int NN = 2e5 + 5;\nconst int NNN = 2e6 + 5;\nconst int SIZ = 505;\n\nint sa[NN], rk[NN], h[NN], sbelong[NN], stp[NN];\nint rangeL[N], rangeR[N];\nint st[21][NN], lg2[NN];\npair<int, pair<int, int> > cur[NN];\nint n, q;\nint nn, siz, tot;\nint SS[NN];\nstring S[N];\nint cnt[SIZ][N];\nint blockid[N], blockL[N], blockR[N];\nint rt[NN], lson[NNN], rson[NNN], sum[NNN], nodecnt;\n\ninline void rsort() {\n\tstatic const int m = 2e5;\n\tstatic int cnt[NN];\n\tstatic pair<int, pair<int, int> > tmp[NN];\n\tmemset(cnt, 0, sizeof cnt);\n\trep(i, 1, nn) cnt[cur[i].se.se]++;\n\trep(i, 1, m) cnt[i] += cnt[i-1];\n\tper(i, 1, nn) tmp[cnt[cur[i].se.se]--] = cur[i];\n\t\n\tmemset(cnt, 0, sizeof cnt);\n\trep(i, 1, nn) cnt[tmp[i].se.fi]++;\n\trep(i, 1, m) cnt[i] += cnt[i-1];\n\tper(i, 1, nn) cur[cnt[tmp[i].se.fi]--] = tmp[i];\n\t\n\tint p = 1;\n\trk[cur[1].fi] = 1;\n\trep(i, 2, nn) {\n\t\tif(cur[i].se != cur[i-1].se) p++;\n\t\trk[cur[i].fi] = p;\n\t}\n}\n\ninline void SA() {\n\trep(i, 1, nn) rk[i] = SS[i];\n\tfor(int len = 1; len / 2 <= nn; len <<= 1) {\n\t\trep(i, 1, nn) cur[i] = mp(i, mp(rk[i], i+len <= nn ? rk[i+len] : 0));\n\t\trsort();\n\t}\n\trep(i, 1, nn) sa[rk[i]] = i;\n}\n\ninline void buildheight() {\n\tint siz = 0;\n\trep(i, 1, nn) {\n\t\tif(siz >= 1) siz--;\n\t\twhile(i+siz <= nn && sa[rk[i]-1]+siz <= nn && SS[i+siz] == SS[sa[rk[i]-1]+siz]) siz++;\n\t\th[rk[i]] = siz;\n\t}\n}\n\ninline void buildST() {\n\trep(i, 1, nn) st[0][i] = h[i];\n\tlg2[0] = -1;\n\trep(i, 1, nn) lg2[i] = lg2[i>>1] + 1;\n\trep(j, 1, 20) rep(i, 1, nn) if(i + (1 << j) - 1 <= nn) chkmin(st[j][i], st[j-1][i], st[j-1][i+(1<<j-1)]);\n}\n\ninline int query(int L, int R) {\n\tint res = min(st[lg2[R-L+1]][L], st[lg2[R-L+1]][R-(1<<lg2[R-L+1])+1]);\n\treturn res;\n}\n\ninline int lcp(int x, int y) {\n\tx = rk[x], y = rk[y];\n\tif(x == y) return nn + 1;\n\tif(x > y) swap(x, y);\n\treturn query(x + 1, y);\n}\n\ninline void getrange(int p) {\n\tint len = S[p].length();\n\tint pp = rk[stp[p]];\n\tint resL = pp, resR = pp;\n\t{\n\t\tint L = 1, R = pp-1;\n\t\twhile(L <= R) {\n\t\t\tint mid = L + R >> 1;\n\t\t\tif(query(mid + 1, pp) >= len) R = mid - 1, resL = mid;\n\t\t\telse L = mid + 1;\n\t\t}\n\t}\n\t{\n\t\tint L = pp+1, R = nn;\n\t\twhile(L <= R) {\n\t\t\tint mid = L + R >> 1;\n\t\t\tif(query(pp + 1, mid) >= len) L = mid + 1, resR = mid;\n\t\t\telse R = mid - 1;\n\t\t}\n\t}\n\trangeL[p] = resL, rangeR[p] = resR;\n}\n\ninline void buildblock(int id, int L, int R) {\n\tstatic int delta[NN];\n\tmemset(delta, 0, sizeof delta);\n\trep(i, L, R) delta[rangeL[i]]++, delta[rangeR[i]+1]--;\n\trep(i, 1, nn) {\n\t\tdelta[i] += delta[i-1];\n\t\tif(sbelong[sa[i]] != 0) cnt[id][sbelong[sa[i]]] += delta[i];\n\t}\n}\n\n\ninline void add(int& cur, int old, int p, int x, int l, int r) {\n\tcur = ++nodecnt;\n\tlson[cur] = lson[old];\n\trson[cur] = rson[old];\n\tsum[cur] = sum[old] + x;\n\tif(l == r) return;\n\tint mid = l + r >> 1;\n\tif(p <= mid) add(lson[cur], lson[old], p, x, l, mid);\n\telse add(rson[cur], rson[old], p, x, mid + 1, r);\n}\n\ninline int query(int cur, int p, int l, int r) {\n\tif(!cur) return 0;\n\tif(l == r) return sum[cur];\n\tint mid = l + r >> 1;\n\tif(p <= mid) return query(lson[cur], p, l, mid);\n\telse return query(rson[cur], p, mid + 1, r);\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> q;\n\tint cntn = 1000;\n\trep(i, 1, n) {\n\t\tcin >> S[i];\n\t\tstp[i] = nn+1;\n\t\trep(j, 0, (int)S[i].length()-1) {\n\t\t\tnn++;\n\t\t\tSS[nn] = S[i][j];\n\t\t\tsbelong[nn] = i;\n\t\t}\n\t\tnn++;\n\t\tSS[nn] = ++cntn;\n\t\tsbelong[nn] = 0;\n\t}\n\tSA();\n\tbuildheight();\n\tbuildST();\n\tsiz = ceil(sqrt((double)n / 2));\n\ttot = (n + siz - 1) / siz;\n\trep(i, 1, n) blockid[i] = (i + siz - 1) / siz;\n\trep(i, 1, tot) blockL[i] = (i-1) * siz + 1, blockR[i] = min(n, i * siz);\n\trep(i, 1, n) getrange(i);\n\trep(i, 1, tot) buildblock(i, blockL[i], blockR[i]);\n\trep(i, 1, nn) {\n\t\tif(sbelong[sa[i]] != 0) {\n\t\t\tadd(rt[i], rt[i-1], sbelong[sa[i]], 1, 1, n);\n\t\t} else rt[i] = rt[i-1];\n\t}\n\twhile(q--) {\n\t\tint L, R, k;\n\t\tcin >> L >> R >> k;\n\t\tint idL = blockid[L], idR = blockid[R];\n\t\tll ans = 0;\n\t\tif(idL == idR) {\n\t\t\trep(i, L, R) ans += query(rt[rangeR[i]], k, 1, n) - query(rt[rangeL[i]-1], k, 1, n);\n\t\t} else {\n\t\t\trep(i, idL+1, idR-1) ans += cnt[i][k];\n\t\t\trep(i, L, blockR[idL]) {\n\t\t\t\tans += query(rt[rangeR[i]], k, 1, n) - query(rt[rangeL[i]-1], k, 1, n);\n\t\t\t}\n\t\t\trep(i, blockL[idR], R) {\n\t\t\t\tans += query(rt[rangeR[i]], k, 1, n) - query(rt[rangeL[i]-1], k, 1, n);\n\t\t\t}\n\t\t}\n\t\tcout << ans << \"\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626683685,
        "uid": 95103,
        "name": "KellyFrog",
        "ccfLevel": 9,
        "title": "CF587F Duff is Mad \u9898\u89e3"
    },
    {
        "content": "### CF 587F\n#### Solution\n\u9996\u5148\u5bf9\u6240\u6709\u4e32\u5efa\u597d\u5e7f\u4e49 SAM\u3002\u8bbe\u9608\u503c$B=\\sqrt n$\u3002\n\n\u5bf9\u4e8e$|s_i|>B$\u7684\u4e32\uff0c\u7531\u4e8e\u8fd9\u6837\u7684\u4e32\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7$\\frac{n}{B}$\u4e2a\uff0c\u8003\u8651\u628a\u6240\u6709\u7684$s_i$\u79bb\u7ebf\u4e0b\u6765\uff0c\u5728 $\\mathrm{parent}$ \u6811\u4e0a $\\mathrm{dfs}$ \u4e00\u904d\u6c42\u51fa$1$\u5230$n$\u6bcf\u4e2a\u4e32\u5728$s_k$\u4e2d\u51fa\u73b0\u6b21\u6570\uff0c\u505a\u4e00\u4e2a\u524d\u7f00\u548c\u5c31\u53ef\u4ee5$\\mathcal O(1)$\u56de\u7b54\u8be2\u95ee\u4e86\u3002\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f$\\mathcal O(\\frac{n^2}{B})=\\mathcal O(n\\sqrt n)$\u3002\u7531\u4e8e\u8fd9\u9898\u5361\u7a7a\u95f4\uff0c\u5f53$B$\u53d6$\\sqrt n$\u65f6\u65e0\u6cd5\u5f00\u4e0b$\\mathcal O(\\frac{n^2}{B})$\u7684$long \\ long$\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u5728\u5b9e\u9645\u5199\u4ee3\u7801\u7684\u65f6\u5019\u53d6$B=1500$\uff08\u597d\u50cf\u8fd9\u6837\u8fd8\u6bd4$B$\u53d6$\\sqrt n$\u65f6\u5feb\u4e86\u4e0d\u5c11\uff09\u3002\n\n\u5bf9\u4e8e$|s_i|\\leq B$\u7684\u4e32\uff0c\u8003\u8651\u5c06\u6bcf\u6b21\u8be2\u95ee\u62c6\u6210\u4e24\u6bb5\u524d\u7f00\uff0c\u7528\u626b\u63cf\u7ebf\u7ef4\u62a4\uff0c\u5f53\u52a0\u5165\u4e00\u4e2a\u70b9$i$\u65f6\uff0c\u5728 $\\mathrm{parent}$ \u6811\u4e0a\u628a$s_i$\u5bf9\u5e94\u7684\u70b9\u7684\u5b50\u6811\u7684\u6743\u503c\u5168\u90e8$+1$\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u679a\u4e3e$s_i$\u7684\u6bcf\u4e00\u4e2a\u524d\u7f00\uff0c\u8be2\u95ee\u8fd9\u4e2a\u524d\u7f00\u6709\u591a\u5c11\u4e2a\u7956\u5148\u88ab\u626b\u5230\uff0c\u76f8\u5f53\u4e8e\u8be2\u95ee\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u6743\u503c\u3002\u7528 $\\mathrm{dfs} $ \u5e8f\u5c31\u53ef\u4ee5\u53d8\u6210\u4e00\u4e2a\u533a\u95f4\u52a0\u5355\u70b9\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4f1a\u8fdb\u884c$\\mathcal O(n)$\u6b21\u4fee\u6539\u548c$\\mathcal O(n\\sqrt n)$\u6b21\u67e5\u8be2\uff0c\u4f7f\u7528\u4fee\u6539$\\mathcal O(n\\sqrt n)$\u67e5\u8be2$\\mathcal O(1)$\u7684\u5206\u5757\u5373\u53ef\u3002(\u5176\u5b9e\u6811\u72b6\u6570\u7ec4\u5c31\u80fd\u8fc7)\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt n)$\n#### Code\n\n```cpp\nconst int INF = 0x3f3f3f3f;\nconst ll llINF = 1e18;\nconst int MAXN = 2e5 + 5;\nconst int MAXM = 2e5 + 5;\nconst int B = 1500;\nconst int MAXB = 1e5 / B + 5;\n\nint n,Q,num,totq;\nint len[MAXN],prelen[MAXN],id[MAXN],dfn[MAXN],size[MAXN],pos[MAXN],cnt[MAXN][MAXB];\nll ans[MAXN],sum[MAXB][MAXN];\nchar s[MAXN];\n\nstruct SAM{\n    int tot,last,tim;\n    int len[MAXN],fa[MAXN],son[MAXN][26];\n    vector<int> G[MAXN];\n\n    SAM() {last = tot = 1;}\n\n    void extend(int c){\n        static int p,q,np,nq;\n        p = last; \n        if(son[p][c]){\n            q = son[p][c];\n            if(len[q] == len[p] + 1) {last = q; return;}\n            nq = ++tot; last = tot; len[nq] = len[p] + 1;\n            memcpy(son[nq],son[q],sizeof(son[nq]));\n            fa[nq] = fa[q]; fa[q] = nq;\n            for(;p && son[p][c] == q;p = fa[p]) son[p][c] = nq;\n            return;\n        }\n        np = ++tot; last = tot; len[np] = len[p] + 1;\n        for(;p && !son[p][c];p = fa[p]) son[p][c] = np;\n        if(!p) {fa[np] = 1; return;}\n        q = son[p][c];\n        if(len[q] == len[p] + 1) {fa[np] = q; return;}\n        nq = ++tot; memcpy(son[nq],son[q],sizeof(son[nq]));\n        len[nq] = len[p] + 1; fa[nq] = fa[q]; fa[q] = fa[np] = nq;\n        for(;p && son[p][c] == q;p = fa[p]) son[p][c] = nq;\n    }\n\n    void dfs(int u){\n        dfn[u] = ++tim; size[u] = 1;\n        for(int v : G[u]){\n            dfs(v); size[u] += size[v];\n            for(int j = 1;j <= num;j++)\n                cnt[u][j] += cnt[v][j];\n        }\n    }\n\n    void init(){\n        for(int i = 2;i <= tot;i++) G[fa[i]].push_back(i); dfs(1);\n        for(int i = 1;i <= num;i++)\n            for(int j = 1;j <= n;j++)\n                sum[i][j] = sum[i][j - 1] + cnt[pos[prelen[j]]][i];\n    }\n} sam;\n\nstruct Block{\n    int n,tot;\n    int tag[MAXN],a[MAXN],bel[MAXN],L[MAXN],R[MAXN];\n\n    void init(){\n        n = sam.tot;\n        for(int i = 1;i <= n;i++) bel[i] = (i - 1) / B + 1;\n        for(int i = 1;i <= n;i += B) L[++tot] = i, R[tot] = min(i + B - 1,n);\n    }\n\n    void modify(int l,int r,int v){\n        if(bel[l] == bel[r]){\t\n            for(int i = l;i <= r;i++) a[i] += v;\n            return;\n        }\n        for(int i = bel[l] + 1;i < bel[r];i++) tag[i] += v;\n        for(int i = l;i <= R[bel[l]];i++) a[i] += v;\n        for(int i = L[bel[r]];i <= r;i++) a[i] += v;\n    }\n\n    int query(int x) {return a[x] + tag[bel[x]];}\n} block;\n\nstruct Query{\n    int x,k,op,id;\n    bool operator < (const Query &rhs) {return x < rhs.x;}\n} q[MAXN];\n\nint main(){\n    scanf(\"%d%d\",&n,&Q); \n    for(int i = 1;i <= n;i++){\n        scanf(\"%s\",s + prelen[i - 1] + 1);\n        len[i] = strlen(s + prelen[i - 1] + 1);\n        prelen[i] = prelen[i - 1] + len[i];\n\t}\n    for(int i = 1;i <= n;i++){\n        sam.last = 1; if(len[i] > B) id[i] = ++num;\n        for(int j = prelen[i - 1] + 1;j <= prelen[i];j++){\n            sam.extend(s[j] - 'a'); pos[j] = sam.last;\n            if(len[i] > B) cnt[sam.last][id[i]] += 1;\n        }\n    }\n\tsam.init(); block.init();\n    for(int i = 1,l,r,k;i <= Q;i++){\n        scanf(\"%d%d%d\",&l,&r,&k);\n        if(id[k]) ans[i] = sum[id[k]][r] - sum[id[k]][l - 1];\n        else q[++totq] = (Query){l - 1,k,-1,i}, q[++totq] = (Query){r,k,1,i};\n    }\n    sort(q + 1,q + 1 + totq);\n    for(int i = 1, j = 1;i <= totq;i++){\n        while(j <= q[i].x) block.modify(dfn[pos[prelen[j]]],dfn[pos[prelen[j]]] + size[pos[prelen[j]]] - 1,1), j += 1;\n        for(int j = 1;j <= len[q[i].k];j++)\n            ans[q[i].id] += q[i].op * block.query(dfn[pos[prelen[q[i].k - 1] + j]]);\n    }\n    for(int i = 1;i <= Q;i++) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1611325291,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF587F \u3010Duff is Mad\u3011"
    }
]