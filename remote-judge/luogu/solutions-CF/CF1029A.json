[
    {
        "content": "\u4eba\u751f\u7b2c\u4e00\u6b21CF&\u6109\u5feb\u5730\u7206\u70b8\u796d\u2026\u2026\u7136\u800c\u8fd8\u662f\u6765\u5199\u4e00\u7bc7\u6bd4\u8f83\u6b63\u7ecf\uff08\u4e0d\u6b63\u5e38\uff09\u7684\u9898\u89e3\u3002\n\n\u770b\u5230\u9898\u76ee\uff0c\u8981\u6c42\u6784\u9020\u4e00\u4e2a\u65b0\u4e32\uff0c\u4f7f\u5176\u6709$k$\u4e2a\u76f8\u540c\u7684\u7ed9\u5b9a\u5b57\u4e32\u3002\n\n\u6211\u770b\u5230\u8fd9\u9053\u9898\uff0c\u9a6c\u4e0a\u5c31\u60f3\u5230KMP\u4e86\uff08\u7adf\u7136\u4e0d\u662f\u6a21\u62dfQAQ\uff09\n\n\u5b83\u8981\u6c42\u65b0\u4e32\u5c3d\u53ef\u80fd\u77ed\uff0c\u5373\u7528\u65e7\u4e32\u6784\u9020\u65f6\u4e0d\u4ec5\u6ca1\u6709\u65b0\u7684\u5b57\u7b26\uff0c\u800c\u4e14\u91cd\u53e0\u90e8\u5206\u5c3d\u53ef\u80fd\u591a\uff0c\u90a3\u4e0d\u5c31\u662f\u6c42\u6700\u957f\u524d\u7f00\u548c\u540e\u7f00\u76f8\u540c\u7684\u957f\u5ea6\u5417\uff1fKMP\u76f4\u63a5\u4e0a\u554a\u3002\n\n\u6c42\u51fa\u6765\u4e86\uff0c\u8be5\u5982\u4f55\u8f93\u51fa\uff1f\n\n\u6bd4\u5982\u6837\u4f8b\uff1a\n```cpp\n3 4\naba\n```\n\u53ef\u5f97\u77e5$next[n]=1$\uff0c\u56e0\u6b64\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u7528\u8f93\u51fa\uff0c\u53ea\u8981\u8f93\u51fa\u540e\u4e24\u4e2a\u5b57\u7b26\u3002\n\n\u6211\u7684\u5b57\u7b26\u4e32\u662f\u4ece\u96f6\u5f00\u59cb\u7684\uff0c\u6240\u4ee5$f[n]$\u521a\u521a\u597d\u5c31\u662f\u6700\u957f\u524d\u7f00\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5373\u6211\u4eec\u9700\u8981\u8f93\u51fa\u7684\u5f00\u59cb\u5904\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n/*\nCodeforces Round #506\nA Many Equal Substrings\n*/\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint f[60],n,k;\nchar s[60];\nvoid Cal_Next(){\n\tf[0]=f[1]=0;\n\tfor(int i=1;i<n;i++){\n\t\tint j=f[i];\n\t\twhile(j>0 && s[i]!=s[j])j=f[j];\n\t\tif(s[i]==s[j])f[i+1]=j+1;\n\t\telse f[i+1]=0;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tscanf(\"%s\",s);\n\tCal_Next();\n\tprintf(\"%s\",s);\n\tfor(int i=1;i<k;i++){\n\t\tfor(int j=f[n];j<n;j++)printf(\"%c\",s[j]);\n\t}\n}\n```",
        "postTime": 1535161747,
        "uid": 52913,
        "name": "CreeperK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029A Many Equal Substrings"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u4e3b\u8981\u8003\u67e5KMP\u7b97\u6cd5\u4e2d\u7684next\u6570\u7ec4\u5177\u4f53\u542b\u4e49\uff0c\u5f53\u7136\u4e3a\u4e86\u9632\u6b62next\u4e0e\u5e93\u51fd\u6570\u4e2d\u7684\u91cd\u540d\uff0c\u6211\u4e00\u822c\u90fd\u662f\u7528ne,\u6765\u8868\u793anext\u7684\uff0c\u53cd\u6b63\u65e0\u4f24\u5927\u96c5\u7684\u5566\u3002\n\n\u5173\u4e8eKMP\u7b97\u6cd5\u6709\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5206\u4eab\u7ed9\u5927\u5bb6\uff1a**\u5982\u679clen%(len-next[len])==0\u5c31\u8bf4\u660e\u6709\u5faa\u73af\u8282\uff0clen-next[len]\u7684\u503c\uff0c\u5c31\u662fs\u7684\u6700\u5c0f\u5faa\u73af\u8282\u7684\u957f\u5ea6\uff0c\u800clen/\uff08len-next[len]\uff09\u5c31\u662f\u6700\u5927\u5faa\u73af\u6b21\u6570\uff01\uff08\u5176\u4e2dlen\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff09\u3002**\n\n\u6293\u4f4f\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u524d\u7f00\u4e0e\u540e\u7f00\u76f8\u540c\u7684\u503c\uff08\u5373next[n]\uff09\uff0c\u8fd9\u9053\u9898\u5c31\u5f88\u597d\u89e3\u51b3\u5566\u3002\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint n, k;\nchar a[53];\nint ne[53];\nint main()\n{\n\tcin >> n >> k;\n\tcin >> a + 1;\n\tfor (int i = 2, j = 0;i <= n;i++)\n\t{\n\t\twhile (a[j + 1] != a[i] && j)   j = ne[j];\n\t\tif (a[j + 1] == a[i])     j++;\n\t\tne[i] = j;\n\t}\n\tfor (int i = 1;i <= n;i++)\n\t\tcout << a[i];\n\tint ans = k - 1;\n\twhile (ans--)\n\t\tcout << a+ne[n]+1;\n\treturn 0;\n}\n```\n\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u6c42\u901a\u8fc7\u3002QWQ.\n\n\u5e0c\u671b\u5404\u4f4d\u5927\u4f6c\u5728\u98df\u7528\u4e4b\u4f59\u80fd\u987a\u624b\u70b9\u4e2a\u8d5e\uff0c\u7801\u5b57\u4e0d\u6613\uff0c\u8c22\u8c22\uff01\n\n\u6211\u8fd9\u4e2a\u597d\u50cf\u662f\u6700\u77ed\u7684\u4ee3\u7801\u4e86\u5427\uff01~~\u6ed1\u7a3d~~\n\n",
        "postTime": 1588775660,
        "uid": 325855,
        "name": "Acapplella",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029A \u3010Many Equal Substrings\u3011"
    },
    {
        "content": "## KMP\n\n\u6211\u4eec\u60f3\u8ba9\u6784\u9020\u51fa\u7684\u65b0\u4e32\u5c3d\u53ef\u80fd\u77ed\uff0c\u5bb9\u6613\u60f3\u5230\uff0c\u8981\u8ba9\u65e7\u4e32\u6784\u9020\u65f6\u4e0d\u51fa\u73b0\u65b0\u5b57\u7b26\uff0c\u4e14\u91cd\u53e0\u90e8\u5206\u5c3d\u53ef\u80fd\u591a\u3002**KMP**\u3002\n\n\u6bd4\u5982\uff1a$abca$\u8fd9\u4e2a\u6a21\u5f0f\u4e32\uff0c$abca'bca$\u5c31\u6bd4$abca'abca$\u4f18\u3002\n\n\n\u518d\u5982\u4e0b\u9762\u8fd9\u4e00\u4e2a\u77ed\u4e32\uff1a\uff08$A,B$ \u89c6\u4e3a\u5b50\u4e32\uff09\n\n|  A| B  | A  |\n| -----------: | -----------: | -------:|\n\n\n\u6211\u4eec\u5728\u6784\u9020\u65f6\u5c31\u8981\u5c3d\u53ef\u80fd\u5730\u5229\u7528\u91cd\u590d\u5b50\u4e32\uff0c\u5373$A$\u3002\n\n$k=3$\uff1a$ABA' BA' BA$ \u5c31\u6bd4 $ABA' ABA'ABA$\u4f18\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c**\u77ed\u4e32\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u524d\u7f00\uff0c\u540c\u65f6\u662f\u4e32\u7684\u540e\u7f00\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u8ba9\u5b83\u5728\u6784\u9020\u7684\u65b0\u4e32\u4e2d\uff0c\u5373\u4f5c\u4e3a\u4e00\u4e2a\u4e32\u7684\u540e\u7f00\uff0c\u53c8\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u4e32\u7684\u524d\u7f00\u3002**\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[51];\nint kmp[51],n,k;\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tint i=2,j=0;\n\twhile(i<=n)\n\t{\n\t\twhile(j&&a[i]!=a[j+1]) j=kmp[j];\n\t\tif(a[i]==a[j+1]) kmp[i++]=++j;\n\t\telse kmp[i++]=j;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tcout<<a[i];\n\tfor(int i=2;i<=k;i++)\n\t\tfor(int j=kmp[n]+1;j<=n;j++)\n\t\t\tcout<<a[j];\n\treturn 0;\n}\n```\n",
        "postTime": 1607915751,
        "uid": 280519,
        "name": "Yaha",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1029A \u3010Many Equal Substrings\u3011"
    },
    {
        "content": "\u521a\u770b\u4e00\u773c\u8fd9\u9898\uff1atrie\uff1f\n\n\u7136\u540e:\u4e0d\u5bf9\uff0ckmp\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\uff1a\u4e0d\u5bf9\uff0c\u66b4\u529b\n\n\u4ee3\u7801\u91cc\u8fb9\u8bb2\u5177\u4f53\u601d\u8def\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype> \n#include<cstring>\nusing namespace std;\nint main(){\n\tint n,k;\n\tcin>>n>>k;\n\tchar t[100005];\n\tcin>>t;\n\tint maxsize=-1;//\u8bb0\u5f55\u6700\u591a\u80fd\u7ed9ka\u6389\u591a\u5c11\u4f4d\n\tfor(int i=0;i<n-1;i++){\n\t\tbool flag=0;//\u63d2\u4e2a\u65d7\u5b50\n\t\tfor(int j=0;j<=i;j++){\n\t\t\tif(t[j]!=t[n-i+j-1]){//\u6211\u5339\u914d\u6211\u81ea\u5df1 \u5982\u679c\u5339\u914d\u4e0d\u4e0a...\n\t\t\t\tflag=1;//...\u5c31\u62d4\u6389\u65d7\u5b50 \u7136\u540ebreak\u6389\u7701\u65f6\u95f4\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag)maxsize=i;//\u5982\u679c\u65d7\u5b50\u6ca1\u88ab\u62d4\u6389\u5c31\u8bb0\u5f55\u4e0b\n\t}\n    maxsize++; //\u56e0\u4e3aj<=i,\u6240\u4ee5\u5f53i=0\u65f6j\u5176\u5b9e\u4f1a\u8dd1\u4e00\u6b21\uff0ci=1\u65f6\u8dd1\u4e24\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u65e2\u7136\u8fd9\u6837\u90a3\u5c31\u8981\u628a\u8dd1\u7684\u6b21\u6570\u8bb0\u5230maxsize\u91cc\u8fb9\uff0c\u4e5f\u5c31\u662f\u7ed9\u5b83++\u4e0b\n\n\tfor(int i=1;i<k;i++){\n\t\tfor(int j=0;j<n-maxsize;j++){//\u5148\u5c11\u8f93\u51fa\u4e00\u904d \n\t\t\tcout<<t[j];\n\t\t} \n\t}\n\tcout<<t;//\u6700\u540e\u628a\u5b8c\u6574\u7684\u8f93\u51fa\u4e0a\n\treturn 0;\n}\n\n```\n\n\u9876\u591a\u6a59\u9898\u6c34\u5e73\uff08\n\n\u770b\u4e0d\u61c2\u79c1\u6211",
        "postTime": 1595386067,
        "uid": 217743,
        "name": "sc84bbs",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1029A \u3010Many Equal Substrings\u3011"
    },
    {
        "content": "\u849f\u84bb\u521d\u5b66$KMP$\uff0c\u641c\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u505a\u5b8c\u611f\u89c9\u5bf9$next$\u6570\u7ec4\u7684\u610f\u4e49\u7406\u89e3\u7684\u66f4\u6df1\u523b\u4e86\uff0c\u4e00\u9053\u975e\u5e38\u597d\u7684$KMP$\u7ec3\u624b\u9898\uff0c\u503c\u5f97\u4e00\u5237\u3002\n\n\u8fd9\u9898\u66b4\u529b\u5c31\u4e0d\u8bf4\u4e86\uff0c\u4e00\u5b9a\u4f1a$TLE$\u7684\uff0c~~\u518d\u8bf4\u4e86\uff0c\u8fd9\u79cd\u9898\u66b4\u529b\u6700\u591a\u662f\u5165\u95e8~~\u3002\u5982\u679c\u6ca1\u5b66\u8fc7$KMP$\uff0c\u8bf7\u770b [\u8fd9\u4e2a](https://www.luogu.com.cn/blog/pks-LOVING/zi-fu-chuan-xue-xi-bi-ji-qian-xi-kmp-xuan-xue-di-dan-mu-shi-chuan-pi-post)\uff0c\u7136\u540e\u505a\u4e00\u4e0b[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P3375)\u3002\n\n\u8fd9\u9053\u9898\u5148\u6765\u770b\u9898\u610f\uff0c\u9898\u76ee\u8bf4\uff1a\n\n\u201c\u6784\u9020\u4e00\u4e2a\u5b57\u7b26\u4e32s\uff0c\u4f7f\u5f97\u5b83\u7684\u53ef\u80fd\u957f\u5ea6\u6700\u5c0f\uff0c\u8981\u6c42s\u4e2d\u5b58\u5728k\u4e2a\u4f4d\u7f6ei,\u53ef\u4ee5\u627e\u5230k\u4e2a\u4ee5i\u4e3a\u51fa\u53d1\u70b9\u7684\u5b50\u4e32t\u3002\u201d\n\n\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u539f\u6709\u5b57\u7b26\u4e32\u4e2d\u524d\u9762\u548c\u540e\u9762\u627e\u5230\u4e24\u4e2a\u76f8\u540c\u7684\u5b50\u4e32\uff0c\u7136\u540e......\uff08~~\u7a81\u7136\u5fd8\u4e86\u8981\u8bf4\u795e\u9a6c~~\uff09\uff0c\u5728\u539f\u6709\u5b50\u4e32\u7684\u57fa\u7840\u4e0a\u590d\u5236$k-1$\u4e2a\u5305\u542b**\u4e2d\u95f4\u90e8\u5206+\u91cd\u590d\u90e8\u5206**\u7684\u5b57\u7b26\u4e32\uff0c\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\n\n\u4e3a\u795e\u9a6c\u5462\uff1f\u8bf7\u770b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a$abccbbabc$\uff0c\u8981\u6784\u9020\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u91cc\u9762\u542b\u6709k\u4e2a$abccbbabc$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u4e32\u524d\u540e\u4e00\u6837\u7684\u90e8\u5206\u7701\u7565\u6389\u4e00\u4e2a\uff0c\u7559\u4e0b\u4e00\u4e2a\u5c31\u8db3\u591f\u4e86\u3002\n\n\u5047\u8bbe$k=3$\uff1a\n\n\u5982\u679c\u4e0d\u7701\u7565\uff1a$abccbbabcabccbbabcabccbbabc$\n\n\u957f\u5ea6\u4e3a$9k$\u3002\u4f46\u662f\uff0c\u6211\u4eec\u518d\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4ed4\u7ec6\u770b\u4e00\u770b\uff0c\u4f1a\u53d1\u73b0\uff0c\u4e2d\u95f4\u6709\u4e24\u4e2a$abcabc$\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5b50\u4e32\u7b80\u5316\u4e3a$abc$\uff0c\u4e5f\u5c31\u662f\u8bf4\u628a\u524d\u4e00\u4e2a\u7684\u6700\u540e\u548c\u540e\u4e00\u4e2a\u7684\u5f00\u5934\u8fde\u8d77\u6765\uff0c\u65e2\u7136\u91cd\u5408\u5c31\u4e00\u5b9a\u4f1a\u51cf\u5c11\uff0c\u6240\u4ee5\u8fd9\u624d\u662f\u6700\u4f18\u7684\u65b9\u6848\uff0c\u957f\u5ea6\u4e3a$9k-3*2=9k-6$\uff0c\u660e\u663e\u6bd4\u4e0a\u4e00\u79cd\u8981\u77ed\u3002\n\n\u8fd9\u6837\uff0c\u53ef\u4ee5\u5148\u628a$1$ ~ $next[n]$\u8fd9\u4e00\u6bb5\u5148\u6253\u51fa\u6765\uff0c\u7136\u540e\u8f93\u51fa$k$\u4e2a\u6b8b\u7f3a\uff08~~\u6ca1\u5934~~\uff09\u7684\u5b57\u7b26\u4e32\uff0c\u6216\u8005\u5148\u8f93\u51fa\u6574\u4e2a\u539f\u59cb\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u518d\u8f93\u51fa$k-1$\u4e2a\u6b8b\u7f3a\u5b57\u7b26\u4e32\uff0c\u5373\u53ef\u83b7\u5f97\u7b54\u6848\u3002\n\n\u8d34\u91cd\u70b9\u90e8\u5206code\uff1a\n\n```\nfor(i=1;i<=n;++i)\nprintf(\"%c\",s[i]);\nfor(i=1;i<k;++i)\n{\n\tfor(j=nxt[n]+1;j<=n;++j)\n\tprintf(\"%c\",s[j]);\n}\n```\n\n\u8981\u6ce8\u610f\uff0c$next$\u662f\u5173\u952e\u5b57\u7b26\uff0c\u4e0d\u80fd\u5f53\u6570\u7ec4\u540d\uff0c\uff08~~\u770b\u6211\u7684CE\u8bb0~~~~\u5f55~~\uff09\u3002\n\n\u6c42\u4e2a\u8d5e",
        "postTime": 1591614590,
        "uid": 239761,
        "name": "zheysq_147",
        "ccfLevel": 0,
        "title": "CodeForces 1029A TJ"
    },
    {
        "content": "\u56e0\u4e3a\u8981\u6784\u9020\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u5b83\u5305\u542b\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32p\u6b21\uff0c\u6240\u4ee5\u6700\u663e\u800c\u6613\u89c1\u7684\u7b54\u6848\u662f\u8f93\u51fap\u6b21\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u800c\u8fd9\u4e0d\u662f\u6700\u77ed\u3002\n\n\u663e\u7136\u4e00\u4e2a\u5355\u8bcd\u7684\u524d\u7f00\u53ef\u4ee5\u4e0e\u5176\u540e\u7f00\u91cd\u53e0\uff0c\u6240\u4ee5\u76f4\u63a5\u7528kmp\u7b97\u6cd5\u6c42\u51fa\u524d\u7f00\u4e0e\u540e\u7f00\u76f8\u540c\u7684\u957f\u5ea6\uff0c\u7565\u53bb\u90a3\u4e00\u90e8\u5206\u8f93\u51fa\u5373\u53ef\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\n\nint kmp[100];\n\nint main()\n{\n\tstring s;\n\tint n,p;\n\tscanf(\"%d%d\",&n,&p);\n\tcin>>s;\n\tint len=s.length();\n\tint k=0;\n\tfor(int i=1;i<len;i++){\n        while(k&&s[i]!=s[k])\n            k=kmp[k];\n        if(s[i]==s[k])kmp[i+1]=++k;\n    }\n    cout<<s;\n    for(int i=2;i<=p;i++){\n    \tfor(int j=kmp[len];j<len;j++)\n    \t\tcout<<s[j];\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1535160644,
        "uid": 45443,
        "name": "codesonic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029A \u3010Many Equal Substrings\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u610f\u601d\u5c31\u662f\uff0c\u8981\u4f60\u6c42\u4e00\u4e2a\u5236\u80e1\u7a9c\u7684\u6700\u957f\u7684\u76f8\u540c\u7684\u524d\u7f00\u548c\u540e\u7f00\n\n~~\u8fd9\u4e0d\u662f$kmp$\u5417~~\n\n\u4e8e\u662f\uff0c\u6309\u7167$kmp$\u521d\u59cb\u5316\u7684\u6b65\u9aa4\u5199\u5c31\u884c\u4e86\n\n\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\n#define fp(i, l, r) for(register int i = (l); i <= (r); i++)\n#define fd(i, l, r) for(register int i = (l); i >= (r); i--)\n#define ANTISYNC ios::sync_with_stdio(false)\n#define full(a, b) memset(a, b, sizeof(a))\n#define MAXN (int)1e3 + 5\n#define ll long long\n#define il inline\nusing namespace std;\n\ntemplate <typename T>il void read(T &dig) {\n\tchar c = getchar();\n\tbool flag = false;\n\tdig = 0;\n\twhile(!isdigit(c) && c != '-') c = getchar();\n\tif(c == '-') flag = true, c = getchar();\n\twhile(isdigit(c)) dig = dig * 10 + c - '0', c = getchar();\n\tif(flag) dig = -dig;\n}\n\nint n, m, cnt = 0, len;\nint fail[MAXN];\nchar str[MAXN];\n\nil int init() {\n\tread(n), read(m);\n\tscanf(\"%s\", str+1);\n\tlen = strlen(str+1);\n\tint j = 0;\n\tfail[0] = 0;\n\tfp(i, 2, len) {\n\t\twhile(j > 0 && str[i] != str[j+1]) j = fail[j];\n\t\tif(str[i] == str[j+1]) ++j;\n\t\tfail[i] = j;\n\t}\n\tint cnt = fail[n];\n\tprintf(\"%s\", str+1);\n\t--m;\n\tfp(i, 1, m) {\n\t\tfp(j, cnt+1, len) {\n\t\t\tprintf(\"%c\", str[j]);\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main() {\n\tinit();\n\treturn 0;\n}\n```",
        "postTime": 1535156269,
        "uid": 32107,
        "name": "Fraction",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029A \u3010Many Equal Substrings\u3011"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/CF1029A)\n\nKMP \u88f8\u9898\uff0c\u56e0\u4e3a\u662f\u5c06 $k$ \u4e2a\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u62fc\u5728\u4e00\u8d77\uff0c\u6240\u4ee5\u53ea\u9700\u627e\u5230\u9996\u5c3e\u7684\u6700\u957f\u516c\u5171\u90e8\u5206\uff0c\u5373\u505a\u81ea\u8eab KMP\uff0c\u6700\u540e\u8f93\u51fa\u7a0d\u4f5c\u5904\u7406\u5373\u53ef\u3002\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#define N 55\n\nusing namespace std;\n\nint n,k,j;\nint nxt[N];\nchar s[N];\n\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tscanf(\" %s\",s+1);\n\tfor(int i=2;i<=n;++i){\n\t\twhile(j && s[i]!=s[j+1]) j=nxt[j];\n\t\tif(s[i]==s[j+1]) ++j;\n\t\tnxt[i]=j;\n\t} // KMP \u90e8\u5206 \n\tfor(int i=1;i<k;i++)\n\t\tfor(int j=1;j<=n-nxt[n];j++)\n\t\t\tprintf(\"%c\",s[j]);\n\tprintf(\"%s\",s+1);\n\t// \u5148\u5c06\u524d k-1 \u6b21\u8f93\u51fa\uff0c\u6700\u540e\u4e00\u6b21\u662f\u5b8c\u6574\u7684 \n\treturn 0;\n}\n```\n",
        "postTime": 1637421234,
        "uid": 224926,
        "name": "\u8ba9\u98ce\u5ffd\u60a0\u4f60",
        "ccfLevel": 0,
        "title": "CF1029A Many Equal Substrings \u9898\u89e3"
    },
    {
        "content": "\u9898\u89e3\u6ca1\u6709java\u7684\u505a\u6cd5\uff0c\u8fd9\u91cc\u6211\u53d1\u8868\u4e00\u4e0bjava\u7684hash\u505a\u6cd5\u3002\n\u9996\u5148\u9700\u8981\u8ba1\u7b97\u8be5\u4e32\u7684hash\u503c\uff0c\u7136\u540e\u901a\u8fc7\u524d\u540e\u5339\u914d\uff0c\u6765\u627e\u524d\u7f00\u548c\u540e\u7f00\u6700\u5927\u7684\u91cd\u53e0\u90e8\u5206\uff0c\u627e\u5230\u5c31\u9000\u51fa\uff0c\u5982\u679c\u5230\u8fbe\u8fb9\u754c\u4e5f\u9000\u51fa\uff0c\u5373\u8bc1\u660e\u8be5\u4e32\u524d\u540e\u6ca1\u6709\u91cd\u53e0\u90e8\u5206\uff0c\u8fed\u4ee3\u7684\u4e32\u5c31\u5e94\u8be5\u662f\u5b83\u672c\u8eab\u3002\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\tString number[] = reader.readLine().split(\" \");\n\t\tint n = Integer.parseInt(number[0]);\n\t\tint m = Integer.parseInt(number[1]);\n\n\t\tString ss = reader.readLine().trim();\n\t\tchar s[] = ss.toCharArray();\n\t\tif (m == 0) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t\n\t\tfinal int base = 131;  //\u57fa\u6570\n\t\tlong hash[] = new long[n + 1];\n\t\t//\u4fdd\u5b58p[i]==base\u7684i\u6b21\u65b9\n\t\tlong p[] = new long[n + 1];\n\t\tp[0] = 1;\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\t\n\t\t\thash[i] = hash[i - 1] * base + s[i - 1];   //\u8ba1\u7b97\u524di\u4e2a\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\n\t\t\tp[i] = p[i - 1] * base;     \n\t\t}\n\t\t\n\t\t\n\t\tint end = n - 1, start = 2;     \n\n\t\t\n\t\t/*\u4ee5aba\u4e3a\u4f8b\n\t\t * \u5148\u5339\u914dab \u548c ba\u7684\u54c8\u5e0c\u503c \uff0c\u4e0d\u540c\u5219\uff0cend--\uff0cstart++\n\t\t * \u518d\u5339\u914da \u548c a\u7684\u54c8\u5e0c\u503c  \uff0c\u76f8\u540c\uff0c\u5219\u9000\u51fa\u5faa\u73af\n\t\t */\n\t\twhile (true) {\n\t\t\tif ((hash[end]) == (hash[n] - hash[start - 1] * p[n - start + 1])) {\n\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\tend--;  \n\t\t\tstart++;\n\t\t\tif (end == 0 || start == n + 1)  //\u5982\u679c\u8d85\u8fc7\u8fb9\u754c\uff0c\u5219\u8bc1\u660e\u8be5\u4e32\u5934\u5c3e\u6ca1\u6709\u516c\u5171\u90e8\u5206\n\t\t\t\tbreak;\n\t\t}\n\t\tString part = \"\";  //\u4fdd\u5b58\u9700\u8981\u8fed\u4ee3m-1\u6b21\u7684\u90e8\u5206 \n\t\tif (end == 0 || start == n + 1)  //\u8d85\u8fc7\u8fb9\u754c\u5373\u4e3a\u6574\u4e2a\u4e32\n\t\t\tpart = ss;\n\t\telse\n\t\t\tpart = ss.substring(end);   \n\n\t\tStringBuffer sb = new StringBuffer();\n\t\t\n\t\tsb.append(ss);  \n\t\tfor (int i = 0; i < m - 1; i++)   \n\t\t\tsb.append(part);\n\t\tSystem.out.println(sb);\n\n\t}\n}\n```\n",
        "postTime": 1589080596,
        "uid": 276618,
        "name": "\u82cf\u6253\u9752\u67e0\u6c34",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029A \u3010Many Equal Substrings\u3011"
    },
    {
        "content": "#### \u9996\u5148\u9898\u76ee\u8981\u6c42\u5b57\u7b26\u4e32\u5c3d\u53ef\u80fd\u5730\u77ed\u5e76\u4e14\u8981\u627e\u5230k\u4e2a\u5b57\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\n\u5982\u679c\u5b57\u7b26\u4e32\u7684\u5934\u90e8\u4e0e\u5c3e\u90e8\u6709**\u76f8\u540c\u90e8\u5206**\u90a3\u4e48\u8fd9\u4e00\u90e8\u5206\u5c31\u53ef\u4ee5\u7701\u7565\u6ee1\u8db3\u6700\u77ed.  \n\u800c\u76f8\u540c\u90e8\u5206\u5219\u88ab\u79f0\u4e3a\u6700\u957f\u76f8\u540c\u524d\u540e\u7f00\u90a3\u4e48KMP\u7b97\u6cd5\u5c31\u662f\u4ee5\u8fd9\u4e2a\u4e3a\u6838\u5fc3\u672c\u9898\n\u53ea\u8981\u6c42\u51fa\u6700\u957f\u76f8\u540c\u524d\u540e\u7f00\u5373\u53ef\u89e3\u51b3  \n\u6211\u4eec\u7528F\u6570\u7ec4\u5b58\u50a8\u5b57\u7b26\u4e32\u7b2ci\u4f4d\u7684\u6700\u957f\u76f8\u540c\u524d\u540e\u7f00\uff0c\u90a3\u4e48\u6211\u4eec\u8f93\u51fa\u65f6\u5148\u8f93\u51fa\u6574\u4e2a\u5b57\u7b26\u4e32\u5728\u5faa\u73afk-1\u6b21\u6bcf\u6b21\u4eceF[n]+1\u5904\u5f00\u59cb\u8f93\u51fa\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<string>//\u4f7f\u7528string\nusing namespace std;\nstring a;\nint n,k;\nint f[55];\nvoid get_next()//\u6c42F\u6570\u7ec4\u4e0d\u61c2\u53ef\u4ee5\u53bb\u767e\u5ea6\uff0c\u6709\u975e\u5e38\u591a\u7684\u4f18\u79c0\u535a\u5ba2\n{\n    f[0]=-1;\n    for(int i=1;i<n;i++)\n    {\n        int j=f[i-1];\n        while(a[j+1]!=a[i]&&(j>=0))\n       j=f[j];\n        \n        if(a[j+1]==a[i])\n        {f[i]=j+1;\n        continue;\n        }\n        f[i]=-1;\n        \n    }\n\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    cin>>a;\n   get_next();\n    int p=f[n-1]+1;//\u4ecef[n-1]+1\u8f93\u51fa\u56e0\u4e3astring\u4ece0\u5f00\u59cb\u50a8\u5b58\n    \n    cout<<a;\n    for(int i=1;i<k;i++)\n    {\n        for(int j=p;j<n;j++)\n        cout<<a[j];\n    }\n    return 0;\n}\n```\n",
        "postTime": 1584523042,
        "uid": 235796,
        "name": "TechZ",
        "ccfLevel": 5,
        "title": "CF1029A"
    },
    {
        "content": "**\u8fd9\u9053\u9898\u4e0d\u77e5\u9053\u662f\u6570\u636e\u6709\u95ee\u9898\u8fd8\u662f~~\u4e5f\u8bb8\u9898\u610f\u5c31\u662f\u5982\u6b64~~**\n\n\u57fa\u672c\u60f3\u6cd5\u662f\u6c42\u51fakmp\u7684\u524d\u7f00\u6570\u7ec4p\uff0c\u4f46\u662f\u4e4b\u540e\u6bcf\u4e00\u6b21\u53ea\u9700\u8981\u4ecep[t.length()]\u7684\u4f4d\u7f6e\u5f80\u540e\u8f93\u51fa\u5c31\u884c\u4e86\uff0c\u610f\u601d\u662f\u53ea\u6709\u6700\u540e\u4e00\u4f4d\u7684\u524d\u7f00\u503c\u624d\u6709\u7528\uff0c\u6bcf\u4e00\u6b21\u4ece\u90a3\u513f\u7ee7\u7eed\u8f93\u51fa\u5230\u672b\u5c3e\u5c31\u884c\u4e86\u3002\n\n\u6211\u7684\u4ee3\u7801\u4e2d\u662f\u7528string\u628a\u7b54\u6848\u5148\u5b58\u597d\u518d\u8f93\u51fa\u7684\uff0c\u5e76\u4e14\u9996\u5148\u628at\u590d\u5236\u8fdb\u53bb\u4e86\uff0c\u4e0d\u7ba1\u600e\u4e48\u6837\u81f3\u5c11\u8981\u9996\u5148\u5b8c\u6574\u7684\u8f93\u51fa\u4e00\u904dt\u624d\u884c\u561b\u3002\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff0c\u5173\u952e\u90e8\u5206\u5df2\u6709\u6ce8\u91ca\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n,k;\nint p[55];\nstring t;\n\nvoid getp()\n{\n    int j=0;\n    p[0]=p[1]=0;\n    for(int i=1;i<t.length();++i){\n        while(j&&t[j]!=t[i])\n            j=p[j];\n        if(t[j]==t[i])\n            j++;\n        p[i+1]=j;\n    }\n}\n\nvoid build()\n{\n    getp();\n    string ans=t;\n    ///at least print once\n    int cnt=1;\n    ///nums of matchings\n    while(cnt<k){\n        for(int i=p[t.length()];i<t.length();++i)\n            ans.append(1,t[i]);\n        cnt++;\n    }\n    cout<<ans;\n}\n\nint main()\n{\n    cin>>n>>k>>t;\n    build();\n    return 0;\n}\n\n```\n",
        "postTime": 1557738637,
        "uid": 170866,
        "name": "oneman233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029A \u3010Many Equal Substrings\u3011"
    },
    {
        "content": "## CF1029A Many Equal Substrings\uff08\u9898\u89e3\uff09\n\n\u9898\u76ee\u4f20\u9001\u95e8\uff1a[\u70b9\u6211](https://www.luogu.org/problemnew/show/CF1029A)\n\n\u4e3b\u8981\u601d\u8def\uff1a\u6c42\u51fa\u5b57\u7b26\u4e32\u7684[\u524d\u7f00\u6570\u7ec4](https://www.cnblogs.com/AndyJee/p/4474073.html)\uff0c\u7136\u540e\u518d\u6839\u636e\u524d\u7f00\u6570\u7ec4\u6c42\u51fa\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\nusing namespace std;\ninline void Find_Next(string s,ll next[])//\u6c42\u524d\u7f00\u6570\u7ec4\n{\n\tll k=-1;\n\tnext[0]=-1;\n\tfor(ull i=1;i<s.size();i++)\n\t{\n\t\twhile(k>-1&&s[k+1]==s[i]) k=next[k];\n\t\tif(s[k+1]==s[i]) k++;\n\t\tnext[i]=k;\n\t}\n}\nint main()\n{\n\tll k,ne[55];\n\tstring s;\n\tcin>>ne[0]>>k>>s;\n\tFind_Next(s,ne);//\u8c03\u7528\u51fd\u6570\n\tfor(ll i=1;i<=k-1;i++)\n\t\tfor(ull i=0;i<s.size()-1-ne[s.size()-1];i++)\n\t\t\tcout<<s[i];//\u6700\u540e\u91cd\u590d\u7684\u4e0d\u8f93\u3002\n\tcout<<s<<endl;\n\treturn 0;\n}\n```\n\n~~\u4ee5\u4e0a\u7a0b\u5e8f\u624b\u6a21\u4e00\u4e0b\u5c31\u7406\u89e3\u4e86\u3002~~",
        "postTime": 1549177573,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF1029A Many Equal Substrings\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,k;\nstring str;\nint i,j;\n\nint main() {\n\tcin>>n>>k; //\u7b80\u5355\u9898\u5c31\u4e0d\u7528scanf\u6216qiuck_read\u4e86QwQ\n\tcin>>str; //string\u6bd4char\u8f93\u5165\u8f93\u51fa\u66f4\u5bb9\u6613QwQ\n\tint len=str.length();\n\tfor(i=1;i<len;i++){ //\u66b4\u529b\u627e\u6700\u957f\u76f8\u540c\u5b50\u4e32\u7684\u957f\u5ea6,i\u662f\u679a\u4e3e\u957f\u5ea6,j\u662f\u679a\u4e3e\u4f4d\u7f6e\n\t\tbool flag=true; //\u8bb0\u5f55\u7528\u7684flag\n\t\tfor(j=0;j<len-i;j++)\n\t\t\tif(str[j]!=str[i+j]){\n\t\t\t\tflag=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(flag==true){//\u5982\u679c\u53ef\u4ee5,\u8f93\u51faQwQ\n\t\t\tcout<<str;\n\t\t\tfor(int d=2;d<=k;d++)\n\t\t\t\tfor(int s=len-i;s<len;s++)\n\t\t\t\t\tcout<<str[s];\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(i=1;i<=k;i++)\n\t    cout<<str;\n\treturn 0;\n}\n```\n\u597d\u5427\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff08\u66b4\u529b\u51fa\u5947\u8ff9QwQ\uff09\u2026\u2026\n\n\u5148\u66b4\u529b\u626b\u4e00\u904d\u5b57\u7b26\u4e32\uff0c\u8bb0\u5f55\u4e0b\u6700\u957f\u76f8\u540c\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u7136\u540e\u91cd\u590d$K-1$\u904d\uff0c\u6700\u540e\u628a\u539f\u6765\u7684\u5b57\u7b26\u4e32\u8f93\u51fa\u3002",
        "postTime": 1544367935,
        "uid": 72784,
        "name": "ljk_Elaina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1029A \u3010Many Equal Substrings\u3011"
    }
]