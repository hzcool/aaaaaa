[
    {
        "content": "\u5c0f\u6e05\u65b0\u5206\u6cbb\u3002\u5e94\u8be5\u662f\u76ee\u524d\u6700\u597d\u7684\u89e3\u6cd5\u3002\n\n\u8003\u8651\u5c06\u5e8f\u5217\u503c\u57df\u6309\u7167\u4e2d\u4f4d\u6570\u5212\u5206\u4e3a $[l,mid]$ \u548c $[mid+1,r]$ \u4e24\u90e8\u5206\uff0c\u8ba1\u7b97\u503c\u57df\u5728\u8fd9\u4e24\u90e8\u5206\u4e4b\u95f4\u7684\u8d21\u732e\u3002\n\n\u6309\u4e2d\u4f4d\u6570\u5212\u5206\u662f\u5e73\u51e1\u7684\u3002\n\n\u8bb0 $b_i$ \u4e3a $|a_i-mid|$\uff0c\u5de6\u8fb9\u7684 $x$ \u548c\u53f3\u8fb9\u7684 $y$ \u7684\u8ddd\u79bb\u5c31\u662f $b_x+b_y$\uff0c\u7136\u540e\u540c\u4e2a\u90e8\u5206\u7684\u4e24\u4e2a\u6570\u7684\u8d21\u732e\u663e\u7136\u662f\u65e0\u6548\u7684\uff0c\u4e0d\u7528\u7ba1\u3002\n\n\u6309\u539f\u6570\u7ec4\u4e0b\u6807\u6392\u5e8f\uff0c\u8003\u8651\u6bcf\u4e2a\u6570 $k$ \u5bf9\u5e94\u7684\u5173\u952e\u70b9 $(i,k),i<k$\u3002\n\n\u8bbe $i<j<k$\uff0c\u90a3\u4e48\u5fc5\u987b\u6ee1\u8db3\n\n* $b_i+b_k<b_i+b_j$\n* $b_i+b_k<b_j+b_k$\n\n\u5373 $b_k<b_j,b_i<b_j$\u3002\n\n\u5373 $b_i$ \u5e94\u8be5\u662f $k$ \u7684\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u4e5f\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u5355\u8c03\u6808\u4e2d\u7684\u5143\u7d20\u3002\n\n\u6ce8\u610f\u5230 $b_k<b_j$\uff0c\u4e5f\u5c31\u662f\u8bf4 $b_j$ \u7684\u53d6\u503c\u5b9e\u9645\u4e0a\u662f\u63d2\u5165 $b_k$ \u540e\u5355\u8c03\u6808\u5f39\u51fa\u7684\u5143\u7d20\u3002\u90a3\u4e48 $b_i$ \u4e5f\u5e94\u8be5\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u3002\n\n\u6240\u4ee5\u7ef4\u62a4\u5355\u8c03\u6808\u6c42\u5173\u952e\u70b9\u5373\u53ef\uff0c\u5171\u6709 $O(n)$ \u4e2a\u5173\u952e\u70b9\u3002\u5206\u6cbb\u6c42\u51fa $O(n\\log n)$ \u4e2a\u5173\u952e\u70b9\uff0c\u6309 $r$ \u6392\u5e8f\u533a\u95f4\u8dd1\u626b\u63cf\u7ebf\uff0cveb \u7ef4\u62a4\u5355\u8c03\u6808\u72b6\u7ed3\u6784\u7ef4\u62a4\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n\\log \\log n+q\\log\\log n)$\u3002\n\n\u533a\u95f4\u6811\u4e0a\u6700\u8fd1\u8ddd\u79bb\u505a\u6cd5\u76f8\u540c\u3002",
        "postTime": 1675950185,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u533a\u95f4\u4e00\u7ef4\u6700\u8fd1\u70b9\u5bf9\u7684 O(nlognloglogn) \u7b97\u6cd5"
    },
    {
        "content": "\u4e0d\u4f7f\u7528\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u7684\u505a\u6cd5\u3002\u590d\u6742\u5ea6 $O(n\\sqrt n+q)$\uff0c\u4e5f\u662f\u76ee\u524d\u552f\u4e00\u5173\u4e8e $q$ \u7ebf\u6027\u7684\u505a\u6cd5\u3002\n\n\u8be2\u95ee\u5148\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u3002\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5bf9\u4e8e $r-l\\leq\\sqrt n$ \u7684\u8be2\u95ee\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $f_i$ \u8868\u793a\u533a\u95f4 $[i,r]$ \u7684\u7b54\u6848\uff0c$r$ \u4e3a\u5f53\u524d\u904d\u5386\u5230\u7684\u53f3\u7aef\u70b9\u3002\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 $\\sqrt n$ \u4e2a\u503c\uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u5373\u53ef\u3002\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u663e\u7136\u4e3a $O(n\\sqrt n+q)$\u3002\n\n\u5bf9\u4e8e $r-l\\geq\\sqrt n$ \u7684\u8be2\u95ee\uff0c\u6709 $ans\\leq\\sqrt n$\u3002\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $g_i$ \u8868\u793a $[g_i,r]$ \u7684\u7b54\u6848 $\\leq i$ \u7684\u3001\u4e0b\u6807\u6700\u5927\u7684\u4e00\u4e2a\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u53f3\u7aef\u70b9\u66f4\u65b0\u7684\u65f6\u5019\u66b4\u529b\u626b\u904d\u4e8e\u5b83\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $\\sqrt n$ \u7684\u70b9\u5373\u53ef\u3002\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5c31\u662f\u67e5\u8be2 $g_i\\geq l$ \u7684\u6700\u5c0f\u7684 $i$\u3002\u5f53\u7136\u53ef\u4ee5\u4e8c\u5206\uff0c\u4f46\u662f\u66f4\u4f18\u7684\u505a\u6cd5\u662f\u5c06\u6bcf\u4e00\u4e2a\u53f3\u7aef\u70b9\u7684\u8be2\u95ee\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u3002\u56e0\u4e3a $g$ \u7684\u5927\u5c0f\u662f $\\sqrt{n}$\n\uff0c\u6240\u4ee5\u6bcf\u4e2a\u53f3\u7aef\u70b9\u7684\u590d\u6742\u5ea6\u662f $O(\\sqrt n+|Q_r|)$\uff0c$Q_r$ \u8868\u793a\u53f3\u7aef\u70b9\u4e3a $r$ \u8be2\u95ee\u96c6\u5408\u3002\n\n\u4e8e\u662f\u6574\u4e2a\u9898\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(n\\sqrt n+q)$\u3002\n\n\u5b9e\u73b0\u7684\u8bdd\uff0c\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u5148\u5bf9\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u518d\u6254\u6876\u91cc\uff0c\u8fd9\u6837\u6bcf\u4e2a\u6876\u8be2\u95ee\u533a\u95f4\u957f\u5ea6\u9012\u51cf\u3002\u6bcf\u4e2a\u6876\u524d\u9762\u4e00\u90e8\u5206\uff08Case 2\uff09\u53cc\u6307\u9488\uff0c\u540e\u9762\u4e00\u90e8\u5206\uff08Case 1\uff09\u76f4\u63a5\u62ff $f$ \u7684\u503c\uff0c\u975e\u5e38\u597d\u5199\u3002\n\n```cpp\n// \u77ed\u554a\uff0c\u5f88\u77ed\u554a\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N(3e5),M(1e6),K{547};\nint a[N+5],ans[M+5],f1[K+5],f2[N+5],b[N+5];\nvector<pair<int,int>> lq[N+5],q[N+5];\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int n,m;cin>>n>>m;\n    for (int i{1};i<=n;++i) cin>>a[i],b[a[i]]=i;\n    for (int i{1};i<=m;++i) {\n        int l,r;read(l,r);\n        lq[l].emplace_back(i,r);\n    }\n    // \u5077\u61d2\u4e0d\u60f3\u8ba1\u6570\u6392\u5e8f\uff0c\u518d\u5f04\u4e86\u4e00\u4e2a\u6876\n    for (int i{1};i<=n;++i)\n        for (auto [id,r]:lq[i])\n            q[r].emplace_back(i,id);\n    int S(sqrt(n)),P{n/S};\n    fill_n(f2+1,n+1,n);\n    for (int r{1};r<=n;++r) {\n        for (int i{max(1,a[r]-S)};i<=min(n,a[r]+S);++i)\n            if (b[i]<r) f1[abs(i-a[r])]=max({f1[abs(i-a[r])],b[i]});\n        for (int i{1};i<=S;++i) f1[i]=max(f1[i],f1[i-1]);\n        for (int i{r-1};i>=max(1,r-P);--i)\n            f2[i]=min({f2[i],abs(a[i]-a[r]),f2[i+1]});\n        int p{0};\n        for (int t{1};t<=S;++t)\n            while (p<q[r].size()&&q[r][p].first<=f1[t])\n                ans[q[r][p].second]=t,++p;\n        for (;p<q[r].size();++p)\n            ans[q[r][p].second]=f2[q[r][p].first];\n    }\n    copy_n(ans+1,m,ostream_iterator<int>(cout,\"\\n\"));\n    return 0;\n}\n```",
        "postTime": 1677382449,
        "uid": 374433,
        "name": "ppip",
        "ccfLevel": 7,
        "title": "CF1793F Rebrending \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9053\u9898\u548c [CF765F](https://www.luogu.com.cn/problem/CF765F) \u4ee5\u53ca [P5926](https://www.luogu.com.cn/problem/P5926) \u662f\u76f8\u540c\u7684\u9898\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u662f\u4e2a\u4e09\u500d\u7ecf\u9a8c\u3002\u7136\u540e\u8fd9\u573a\u6bd4\u8d5b\u8fd8\u6ca1\u6709\u88ab ban\u3002\n\n\u8bf4\u56de\u8fd9\u9053\u9898\u3002\n\n\u79bb\u7ebf\u6240\u6709\u8be2\u95ee\uff0c\u7136\u540e\u8003\u8651\u5f53\u524d\u53f3\u7aef\u70b9\u7684\u6bcf\u4e2a\u5de6\u7aef\u70b9\u7684\u7b54\u6848\u3002\u6700\u540e\u7b54\u6848\u70b9\u5bf9\u663e\u7136\u6709\u4e24\u79cd\uff0c\u5bf9\u524d\u5927\u540e\u5c0f\u548c\u524d\u5c0f\u540e\u5927\u5206\u7c7b\u8ba8\u8bba\uff0c\u524d\u8005\u53ef\u4ee5\u901a\u8fc7\u540e\u8005\u53cd\u8f6c\u503c\u57df\u6765\u505a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651\u524d\u8005\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u5f53\u65f6\u7684 $a_x$ \u6709\u54ea\u4e9b\u70b9\u7684\u7b54\u6848\u53ef\u80fd\u53d1\u751f\u6539\u53d8\uff0c\u5047\u8bbe\u7b2c\u4e00\u4e2a\u6bd4 $a_x$ \u5c0f\u7684\u4f4d\u7f6e\u662f $y$\uff0c\u90a3\u4e48\u663e\u7136 $a_y$ \u53ef\u80fd\u662f\u6709\u6240\u8d21\u732e\u7684\u3002\u7136\u540e\u518d\u5f80\u524d\u8d70\uff0c\u663e\u7136\u6240\u6709\u6bd4 $a_y$ \u5c0f\u7684\u6570\u662f\u6ca1\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u548c $a_y$ \u7684\u5dee\u503c\u4e00\u5b9a\u5c0f\u4e8e\u548c $a_x$ \u7684\uff0c\u6240\u4ee5\u8981\u627e\u4e00\u4e2a\u5728 $a_x,a_y$ \u4e4b\u95f4\u7684\u6570\u3002\n\n\u7136\u800c\u8fd9\u79cd\u6570\u53ef\u80fd\u5f88\u591a\u3002\u4f46\u662f\u53d1\u73b0\u7531\u4e8e $a_y$ \u7684\u5b58\u5728\uff0c\u5982\u679c $a_z<\\frac{a_x+a_y}{2}$ \u7684\u8bdd\uff0c\u90a3\u4e48\u5b83\u5e94\u8be5\u4f1a\u5728 $a_y$ \u5904\u66f4\u65b0\uff0c\u56e0\u4e3a\u663e\u7136\u5b83\u79bb $a_y$ \u66f4\u8fd1\u3002\u6240\u4ee5\u5408\u6cd5\u7684 $a_z$ \u4e00\u5b9a\u6ee1\u8db3 $a_v\\ge \\frac{a_x+a_y}{2}$\uff0c\u6240\u4ee5\u503c\u57df\u88ab\u7f29\u5c0f\u4e86\u4e00\u534a\u3002\u6240\u4ee5\u53f3\u7aef\u70b9\u6bcf\u6b21\u5411\u53f3\u632a\u52a8\u4e00\u6b21\u5c31\u4f1a\u6709 $\\log V$ \u4e2a\u4f4d\u7f6e\u88ab\u66f4\u65b0\uff0c\u6bcf\u6b21\u66f4\u65b0\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u540e\u7f00\u6700\u5927\u503c\uff0c\u67e5\u8be2\u5373\u53ef\u3002$V$ \u662f\u503c\u57df\uff0c\u590d\u6742\u5ea6 $O(N\\log V\\log N)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n//#define feyn\nusing namespace std;\nconst int N=300010;\nconst int inf=1e9;\ninline void read(int &wh){\n    wh=0;int f=1;char w=getchar();\n    while(w<'0'||w>'9'){if(w=='-')f=-1;w=getchar();}\n    while(w<='9'&&w>='0'){wh=wh*10+w-'0';w=getchar();}\n    wh*=f;return;\n}\n\nint m,n,root,a[N];\n\nnamespace aa{\n\t#define lowbit (wh&-wh)\n\tint t[N];\n\tinline void change(int wh,int val){\n\t\tfor(;wh;wh-=lowbit)t[wh]=min(t[wh],val);\n\t}\n\tinline int work(int wh){\n\t\tint an=inf;for(;wh<=m;wh+=lowbit)an=min(an,t[wh]);return an;\n\t}\n\tvoid init(){memset(t,0x3f,sizeof(t));}\n\t#undef lowbit\n}\nnamespace bb{\n\t#define lc t[wh].left\n\t#define rc t[wh].right\n\t#define mid ((l+r)>>1)\n\tstruct node{int left,right,data;}t[N<<6];int cnt;\n\tvoid init(){for(int i=1;i<=cnt;i++)t[i]=t[0];cnt=root=0;}\n\tinline void ins(int &wh,int l,int r,int pl,int val){\n\t\tif(wh==0)wh=++cnt;t[wh].data=max(t[wh].data,val);\n\t\tif(l==r)return;\n\t\tif(pl<=mid)ins(lc,l,mid,pl,val);\n\t\telse ins(rc,mid+1,r,pl,val);\n\t}\n\tinline int work(int wh,int l,int r,int wl,int wr){\n\t\tif(wh==0)return 0;if(wl<=l&&r<=wr)return t[wh].data;\n\t\tint an=0;if(wl<=mid)an=max(an,work(lc,l,mid,wl,wr));\n\t\tif(wr>mid)an=max(an,work(rc,mid+1,r,wl,wr));return an;\n\t}\n\t#undef lc\n\t#undef rc\n\t#undef mid\n}\n\nint an[N<<2];\nstruct query{int l,r,id;}q[N<<2];\ninline bool operator <(query s1,query s2){\n\treturn s1.r<s2.r;\n}\n\nvoid solve(){\n\tfor(int i=1,j=1;i<=m;i++){\n\t\tint pl=bb::work(root,0,inf,0,a[i]);\n\t\twhile(pl){\n\t\t\taa::change(pl,a[i]-a[pl]);if(a[i]==a[pl])break;\n\t\t\tpl=bb::work(root,0,inf,(a[pl]+a[i]+1)/2,a[i]);\n\t\t}\n\t\tbb::ins(root,0,inf,a[i],i);\n\t\twhile(j<=n&&q[j].r==i){\n\t\t\tan[q[j].id]=min(an[q[j].id],aa::work(q[j].l));++j;\n\t\t}\n\t}\n}\n\nsigned main(){\n\t\n\t#ifdef feyn\n\tfreopen(\"in.txt\",\"r\",stdin);\n\t#endif\n\t\n\tread(m);read(n);for(int i=1;i<=m;i++)read(a[i]);\n\tfor(int i=1;i<=n;i++)read(q[i].l),read(q[i].r),q[i].id=i;\n\tmemset(an,0x3f,sizeof(an));sort(q+1,q+n+1);\n\taa::init();solve();aa::init();bb::init();\n\tfor(int i=1;i<=m;i++)a[i]=inf-a[i];solve();\n\tfor(int i=1;i<=n;i++)printf(\"%d\\n\",an[i]);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1676256283,
        "uid": 302383,
        "name": "Feyn",
        "ccfLevel": 0,
        "title": "CF1793F"
    },
    {
        "content": "### \u9898\u76ee\u4f20\u9001\u95e8\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF1793F)\n\n[Codeforces](https://www.luogu.com.cn/problem/CF1793F)\n\n### \u5206\u6790\n\n\u4e00\u9053\u5999\u9898\uff0c\u7b26\u5408 CF \u4e00\u8d2f\u7684\u51fa\u9898\u98ce\u683c\u3002\n\n\u8fd9\u9898\u8981\u6c42\u6211\u4eec\u6c42\u4e00\u4e2a\u533a\u95f4\u4e2d\u76f8\u5dee\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\u4e4b\u5dee\uff0c\u800c\u4e14\u5e76\u6ca1\u6709\u8981\u6c42\u5f3a\u5236\u5728\u7ebf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u5730\u56de\u7b54\u8fd9\u4e9b\u8be2\u95ee\u3002\n\n\u4ece\u53f3\u5230\u5de6\u626b\u63cf\u6574\u4e2a\u533a\u95f4\uff0c\u6309\u5de6\u7aef\u70b9\u4ece\u5927\u5230\u5c0f\u5bf9\u8be2\u95ee\u8fdb\u884c\u79bb\u7ebf\uff0c\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u66f4\u65b0\u5176\u8d21\u732e\uff0c\u5e76\u56de\u7b54\u8be2\u95ee\u3002\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u6765\u8bb0\u5f55\u503c\u57df\u5728\u67d0\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5c0f\u4e0b\u6807\u3002\u6211\u4eec\u6c42\u51fa\u5927\u4e8e $a_i$ \u7684\u4e0b\u6807\u6700\u5c0f\u7684\u6570\uff0c\u8bb0\u4e3a $a_j$\uff0c\u66f4\u65b0 $j$ \u70b9\u7684\u7b54\u6848\u3002\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2 $[a_i,\\frac{a_i+a_j}{2}]$ \u7684\u6570\u5b57\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u5927\u4e8e $\\frac{a_i+a_j}{2}$\uff0c\u90a3\u4e48\u5b83\u548c $a_j$ \u7684\u5dee\u503c\u4e00\u5b9a\u66f4\u5c0f\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6bcf\u6b21\u6298\u534a\u67e5\u627e\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\uff0c\u6700\u591a\u6709 $\\log{n}$ \u6b21\u3002\n\n\u5c0f\u4e8e $a_i$ \u7684\u6570\u5b57\u540c\u7406\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u66f4\u65b0\u7b54\u6848\u7684\u4e0b\u6807\u7ebf\u6bb5\u6811\u548c\u6743\u503c\u7ebf\u6bb5\u6811\u90fd\u662f\u8fdb\u884c\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\u6c42\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5408\u5e76\u6210\u540c\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n \\log^{2}{n} + m \\log {n})$\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(register T &x)\n{\n\tregister T p = 1,num = 0;\n\tchar c = getchar();\n\twhile(c < '0'||c > '9')\n\t{\n\t\tif(c == '-') p = -p;\n\t\tc = getchar();\n\t}\n\twhile('0' <= c&&c <= '9')\n\t{\n\t\tnum = (num<<3)+(num<<1)+(c^48);\n\t\tc = getchar();\n\t}\n\tx = p * num;\n}\ntemplate<typename T>inline void write(register T x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) write(x/10);\n\tputchar(x%10+48);\n}\n#define D(i,a,b) for(register int i=a;i>=b;--i)\n#define F(i,a,b) for(register int i=a;i<=b;++i)\n#define ll long long\n#define pii pair<int,int>\n#define M 1000010\n#define N 300010\nvector<pii> g[N];\nint n,m,a[N],ans[M];\nstruct Seg\n{\n\t#define mid (l+r)/2\n\t#define ls u<<1\n\t#define rs u<<1|1\n\tint mn[N<<2];\n\tSeg()\n\t{\n\t\tmemset(mn,0x3f,sizeof(mn));\n\t}\n\tvoid update(int u,int l,int r,int x,int k)\n\t{\n\t\tif(l == r)\n\t\t{\n\t\t\tmn[u] = min(mn[u],k);\n\t\t\treturn;\n\t\t}\n\t\tif(x <= mid) update(ls,l,mid,x,k);\n\t\telse update(rs,mid+1,r,x,k);\n\t\tmn[u] = min(mn[ls],mn[rs]);\n\t}\n\tint query(int u,int l,int r,int x,int y)\n\t{\n\t\tif(x <= l&&r <= y) return mn[u];\n\t\tif(x <= mid&&y > mid) return min(query(ls,l,mid,x,y),query(rs,mid+1,r,x,y));\n\t\tif(x <= mid) return query(ls,l,mid,x,y);\n\t\treturn query(rs,mid+1,r,x,y);\n\t}\n\t#undef mid\n}tr1,tr2;\n//tr1 \u6743\u503c\u7ebf\u6bb5\u6811\n//tr2 \u4e0b\u6807\u7ebf\u6bb5\u6811 \nint main()\n{\n\tread(n),read(m);\n\tF(i,1,n) read(a[i]); \n \tF(i,1,m)\n \t{\n \t\tint l,r;\n \t\tread(l),read(r);\n \t\tg[l].push_back((pii){r,i});\n\t}\n\ttr1.update(1,1,n,a[n],n);\n\tD(i,n-1,1)\n\t{\n\t\tint x;\n\t\tx = tr1.query(1,1,n,a[i],n);\n\t\tif(x < 1e9&&x != i)\n\t\t{\n\t\t\ttr2.update(1,1,n,x,a[x]-a[i]);\n\t\t\twhile(1)\n\t\t\t{\n\t\t\t\tx = tr1.query(1,1,n,a[i],(a[i]+a[x]-1)/2);\n\t\t\t\tif(x > 1e9||x == i) break;\n\t\t\t\ttr2.update(1,1,n,x,a[x]-a[i]);\n\t\t\t}\n\t\t}  \n\t\tx = tr1.query(1,1,n,1,a[i]);\n\t\tif(x < 1e9&&x != i)\n\t\t{\n\t\t\ttr2.update(1,1,n,x,a[i]-a[x]);\n\t\t\twhile(1)\n\t\t\t{\n\t\t\t\tx = tr1.query(1,1,n,(a[i]+a[x]+1)/2,a[i]);\n\t\t\t\tif(x > 1e9||x == i) break;\n\t\t\t\ttr2.update(1,1,n,x,a[i]-a[x]);\n\t\t\t}\n\t\t}\n\t\tfor(auto p:g[i]) ans[p.second] = tr2.query(1,1,n,i+1,p.first);\n\t\ttr1.update(1,1,n,a[i],i);  \n\t}\n\tF(i,1,m) write(ans[i]),putchar('\\n');\n\treturn 0;\n}\n```\n",
        "postTime": 1677240600,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF1793F \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u62bd\u8c61\u4e3a\u73b0\u6709\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a_1,a_2,\\cdots,a_n$\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee $\\min\\limits_{l\\le i,j\\le r,i\\neq j} |a_i-a_j|$ $(1\\le l< r\\le n)$\u3002  \n\n\u6b64\u9898\u548c [CF765F](https://codeforces.com/contest/765/problem/F) \u51e0\u4e4e\u4e00\u6837\uff0c\u4f46\u662f\u8fd8\u662f\u548c\u539f\u9898\u6709\u4e00\u4e9b\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff0c\u8be2\u95ee\u6b21\u6570\u66f4\u591a\uff0c\u5e76\u4e14 $a_i\\le n$\u3002\u539f\u9898\u6709\u4e00\u79cd\u505a\u6cd5\u662f\u6309 $l$ \u6216 $r$ \u7684\u5927\u5c0f\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u5bf9\u5e94\u6743\u503c\u6700\u5c0f\u6216\u6700\u5927\uff0c$a_i$ \u7684\u6743\u503c\u4e3a $i$\uff0c\u518d\u7528\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4e24\u6570\u7edd\u5bf9\u503c\u5dee\u7684\u6700\u5c0f\u503c\uff0c\u539f\u9898 $a_i\\le 10^9$, \u90a3\u4e48\u53ef\u4ee5\u52a8\u6001\u5f00\u70b9\uff0c\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log n\\log 10^9+m\\log n)$\u3002 \n\n\u90a3\u4e48\u6211\u4eec\u8fd8\u662f\u8003\u8651\u79bb\u7ebf\uff0c\u6309 $l$ \u5927\u5c0f\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u4ece\u53f3\u5f80\u5de6\u904d\u5386\u6240\u6709\u5143\u7d20\uff0c\u904d\u5386\u5230 $a_i$ \u65f6\u56de\u7b54 $l=i$ \u7684\u8be2\u95ee\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 $i+1\\rightarrow i$ \u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002  \n\n$a_j>a_i$ ($l\\le j\\le r$) \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $a_j-a_i$\u3002  \n\n$a_k<a_i$ ($l\\le k\\le r$) \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $a_i-a_k$\u3002  \n\n\u5148\u627e\u5230\u6700\u5c0f\u7684 $j$ \u6ee1\u8db3 $a_j>a_i$\uff0c\u66f4\u65b0\u533a\u95f4\u4e24\u6570\u7edd\u5bf9\u503c\u5dee\uff0c\u6b64\u65f6\u8fd8\u53ef\u80fd\u5b58\u5728 $x$ \u6ee1\u8db3 $a_x-a_i\\le a_j-a_i$\uff0c\u5e76\u4e14 $x$ \u8981\u5bf9\u7b54\u6848\u505a\u51fa\u8d21\u732e\uff0c\u8fd8\u8981\u6ee1\u8db3 $a_x-a_i\\le a_j-a_x$\uff0c\u5426\u5219 $a_j-a_x$ \u6709\u53ef\u80fd\u66f4\u5c0f\uff0c\u6240\u4ee5 $a_x$ \u7684\u53d6\u503c\u8303\u56f4\u4e3a $[a_i,\\lfloor\\frac{a_i+a_j}{2}\\rfloor]$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2\u6700\u5c0f\u7684 $x$ \u6ee1\u8db3  $a_i\\le a_x\\le \\lfloor\\frac{a_i+a_j}{2}\\rfloor$\uff0c\u7ee7\u7eed\u66f4\u65b0\uff0c\u4e00\u76f4\u91cd\u590d\u67e5\u8be2\u76f4\u5230\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\uff0c\u6700\u591a\u67e5\u8be2 $\\log n$ \u6b21\u3002\n\n\u533a\u95f4\u4e2d\u6bd4 $a_i$ \u5c0f\u7684\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u548c\u4e0a\u8ff0\u57fa\u672c\u4e00\u6837\u3002\n\n\u8fd9\u91cc\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u4e24\u6570\u7edd\u5bf9\u503c\u5dee\u7684\u6700\u5c0f\u503c\u3002\n\n\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log^{2}n+m\\log n)$\u3002\n\n[\u63d0\u4ea4\uff1a[193537067](https://codeforces.com/contest/1793/submission/193537067)] \n\nC++ Code\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing i64 = long long;\n\ntemplate<class Info,\n    class Merge = std::plus<Info>>\nstruct SegmentTree {\n    const int n;\n    const Merge merge;\n    std::vector<Info> info;\n    SegmentTree(int n) : n(n), merge(Merge()), info(4 << std::__lg(n)) {}\n    SegmentTree(std::vector<Info> init) : SegmentTree(init.size()) {\n        std::function<void(int, int, int)> build = [&](int p, int l, int r) {\n            if (r - l == 1) {\n                info[p] = init[l];\n                return;\n            }\n            int m = (l + r) / 2;\n            build(2 * p, l, m);\n            build(2 * p + 1, m, r);\n            pull(p);\n        };\n        build(1, 0, n);\n    }\n    void pull(int p) {\n        info[p] = merge(info[2 * p], info[2 * p + 1]);\n    }\n    void modify(int p, int l, int r, int x, const Info &v) {\n        if (r - l == 1) {\n            info[p] = v;\n            return;\n        }\n        int m = (l + r) / 2;\n        if (x < m) {\n            modify(2 * p, l, m, x, v);\n        } else {\n            modify(2 * p + 1, m, r, x, v);\n        }\n        pull(p);\n    }\n    void modify(int p, const Info &v) {\n        modify(1, 0, n, p, v);\n    }\n    Info rangeQuery(int p, int l, int r, int x, int y) {\n        if (l >= y || r <= x) {\n            return Info();\n        }\n        if (l >= x && r <= y) {\n            return info[p];\n        }\n        int m = (l + r) / 2;\n        return merge(rangeQuery(2 * p, l, m, x, y), rangeQuery(2 * p + 1, m, r, x, y));\n    }\n    Info rangeQuery(int l, int r) {\n        return rangeQuery(1, 0, n, l, r);\n    }\n};\n\ntemplate <typename T>\nstruct Fenwick {\n    int n;\n    std::vector<T> a;\n    \n    Fenwick(int n = 0) {\n        init(n);\n    }\n    \n    void init(int n) {\n        this->n = n;\n        a.assign(n, T());\n    }\n    \n    void add(int x, T v) {\n        for (int i = x + 1; i <= n; i += i & -i) {\n            a[i - 1] += v;\n        }\n    }\n    \n    T sum(int x) {\n        auto ans = T();\n        for (int i = x; i > 0; i -= i & -i) {\n            ans += a[i - 1];\n        }\n        return ans;\n    }\n    \n    T rangeSum(int l, int r) {\n        return sum(r) - sum(l);\n    }\n    \n    int kth(T k) {\n        int x = 0;\n        for (int i = 1 << std::__lg(n); i; i /= 2) {\n            if (x + i <= n && k >= a[x + i - 1]) {\n                x += i;\n                k -= a[x - 1];\n            }\n        }\n        return x;\n    }\n};\n\nconstexpr int inf = 1E9;\nstruct Min {\n    int x;\n    Min(int x = inf) : x(x) {}\n \n    Min &operator+=(Min a) {\n        x = std::min(a.x, x);\n        return *this;\n    }\n};\n\nMin operator+(const Min &a, const Min &b) {\n    return std::min(a.x, b.x);\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n\n    int n, m;\n    std::cin >> n >> m;\n\n    std::vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> a[i];\n        a[i]--;\n    }\n\n    std::vector<std::vector<std::pair<int, int>>> qry(n);\n    for (int i = 0; i < m; i++) {\n        int l, r;\n        std::cin >> l >> r;\n\n        l--, r--;\n        qry[l].emplace_back(r, i);\n    }\n\n    SegmentTree<Min> seg(n);\n    Fenwick<Min> fen(n);\n    std::vector<int> ans(m);\n\n    seg.modify(a[n - 1], n - 1);\n    for (int i = n - 2; i >= 0; i--) {\n        int j = seg.rangeQuery(a[i], n).x;\n        while (j != inf) {\n            fen.add(j, a[j] - a[i]);\n            j = seg.rangeQuery(a[i], (a[i] + a[j]) / 2 + 1).x;\n        }\n\n        int k = seg.rangeQuery(0, a[i] + 1).x;\n        while (k != inf) {\n            fen.add(k, a[i] - a[k]);\n            k = seg.rangeQuery((a[i] + a[k] + 1) / 2, a[i] + 1).x;\n        }\n\n        seg.modify(a[i], i);\n        \n        for (auto &[r, j] : qry[i]) {\n            ans[j] = fen.sum(r + 1).x;\n        }\n    }\n\n    for (int i = 0; i < m; i++) {\n        std::cout << ans[i] << '\\n';\n    }\n\n    return 0;\n}\n```\n\n\n",
        "postTime": 1676290660,
        "uid": 584838,
        "name": "Kidding_Ma",
        "ccfLevel": 0,
        "title": "CF1793F Rebrending"
    },
    {
        "content": "\u8fd9\u7c7b\u9898\u7684\u7ecf\u5178\u5957\u8def\u662f\u6c42\u51fa\u652f\u914d\u70b9\u5bf9\u540e\u626b\u63cf\u7ebf\u3002\n\n\u6c42\u51fa\u652f\u914d\u70b9\u5bf9\u540e\u7684\u626b\u63cf\u7ebf\u662f\u5e73\u51e1\u7684\uff0c\u76f8\u5f53\u4e8e\u5355\u8c03\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\u3002\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u6c42\u51fa\u652f\u914d\u70b9\u5bf9\u3002\n\n\u7531\u4e8e $a_r>a_l$ \u7684\u60c5\u51b5\u548c $a_r<a_l$ \u7684\u60c5\u51b5\u662f\u7b49\u4ef7\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u53ea\u5173\u6ce8 $a_r>a_l$ \u7684\u60c5\u51b5\u3002\n\n\u8003\u5bdf $a_i$ \u4f5c\u4e3a\u53f3\u7aef\u70b9\u65f6\u652f\u914d\u70b9\u5bf9\u7684\u60c5\u51b5\u3002\n\n\u4e00\u4e2a\u6734\u7d20\u7684\u601d\u8def\u662f\u627e\u51fa\u6240\u6709\u6ee1\u8db3 $a_j<a_i,j<i$ \u7684 $j$\uff0c\u4f46\u65e0\u7591\u8fd9\u6837\u662f $\\mathcal{O}(n^2)$ \u7684\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u628a\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684 $j$ \u6240\u7ec4\u6210\u7684\u5e8f\u5217\u987a\u5e8f\u63d0\u51fa\uff0c\u8bb0\u4f5c $b_{1\\dots, m}$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6682\u4e14\u628a $(a_i,a_{b_1})$ \u4f5c\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7684\u652f\u914d\u70b9\u3002\n\n\u800c\u540e\u6211\u4eec\u8003\u5bdf $b_{2,\\dots,m}$\uff0c\u6211\u4eec\u53d1\u73b0\u82e5 $a_{b_j}-a_{b_1}<a_i-a_{b_j}$\uff0c\u5219 $b_j$ \u5728\u4e4b\u524d\u7684\u8fc7\u7a0b\u4e2d\u5c31\u5df2\u7ecf\u88ab\u8003\u8651\u8fc7\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5728 $b_{2,\\dots,m}$ \u4e2d\u63d0\u51fa\u6ee1\u8db3 $\\frac{a_i+a_{b_1}}{2}\\leq a_{b_j}$ \u7684 $b_j$\uff0c\u5e76\u4e0d\u65ad\u91cd\u590d\u5982\u4e0b\u8fc7\u7a0b\uff0c\u8fd9\u662f\u5bb9\u6613\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u3002\u663e\u7136\u7684\uff0c\u5bf9\u4e8e $a_i$\uff0c\u4ea7\u751f\u7684\u652f\u914d\u70b9\u5bf9\u4e2a\u6570\u662f $\\mathcal{O}(\\log V)$ \u4e2a\uff0c\u5176\u4e2d $V$ \u4e3a\u503c\u57df\u3002\n\n\u6545\u6700\u540e\u603b\u652f\u914d\u70b9\u5bf9\u6570\u4e3a $\\mathcal{O}(n\\log V)$ \u4e2a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n\\log V+q\\log n)$\u3002\n\n\n\n",
        "postTime": 1678187159,
        "uid": 340803,
        "name": "InoueTakina",
        "ccfLevel": 0,
        "title": "CF1793F Rebrending \u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "## \u601d\u8def\n\n### 1. \u56de\u6eda\u83ab\u961f\u3001\u94fe\u8868\u3001\u503c\u57df\u5206\u5757\n\n\u9996\u5148\uff0c\u7b54\u6848\u4e00\u5b9a\u662f\u533a\u95f4\u4e2d\u7684\u4e00\u4e2a\u6570\u4e0e\u5b83\u7684\u5728\u533a\u95f4\u4e2d\u7684\u524d\u9a71\u7684\u5dee\u7684\u6700\u5c0f\u503c\u3002\u90a3\u4e48\u53ef\u4ee5\u7528 [\u79c3\u5b50\u914b\u957f](https://www.luogu.com.cn/problem/P8078) \u7684\u5957\u8def\uff0c\u4f7f\u7528\u4e0d\u6dfb\u52a0\u83ab\u961f\uff0c\u5e76\u914d\u5408\u94fe\u8868\u7ef4\u62a4\u5dee\u503c\u7684\u4fee\u6539\u60c5\u51b5\u3002\u5177\u4f53\u7684\uff0c\u5f53\u5220\u9664\u4e00\u4e2a\u6570\u65f6\uff0c\u901a\u8fc7\u94fe\u8868\u627e\u5230\u8fd9\u4e2a\u6570\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff0c\u5220\u9664\u8fd9\u4e2a\u6570\u4e0e\u524d\u9a71\u548c\u8fd9\u4e2a\u6570\u4e0e\u540e\u7ee7\u7684\u5dee\uff0c\u5e76\u6dfb\u52a0\u524d\u9a71\u548c\u540e\u7ee7\u7684\u5dee\u3002\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u6dfb\u52a0\u3001\u5220\u9664\u6570\uff0c\u6c42\u6700\u5c0f\u503c\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f7b\u6613\u5730\u7528\u503c\u57df\u5206\u5757\u505a\uff08\u6dfb\u52a0\u3001\u5220\u9664 $\\mathcal O(1)$\uff0c\u67e5\u8be2 $\\mathcal O(\\sqrt{n})$\uff09\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 $\\mathcal O(n\\sqrt{n}+n\\sqrt{m} + m \\sqrt{n})$ \u7684\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e86\u3002\n\n### 2. \u6839\u53f7\u5206\u6cbb\n\n\u4e0d\u96be\u53d1\u73b0\u4e0a\u9762\u7684\u89e3\u51b3\u65b9\u6cd5\u5e38\u6570\u975e\u5e38\u5927\uff0c\u60f3\u5c3d\u5361\u5e38\u65b9\u6cd5\u4e5f\u5361\u4e0d\u8fc7\u53bb\u3002[\u8fd9\u662f\u6781\u9650\u5361\u5e38\u540e\u7684\u7ed3\u679c](https://codeforces.com/contest/1793/submission/194660944)\u3002\u56e0\u6b64\u8003\u8651\u4f18\u5316\u7b97\u6cd5\u3002\n\n\u7ed3\u8bba\uff1a\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u7684\u7b54\u6848\u4e00\u5b9a $\\le \\lfloor \\dfrac{n-1}{r-l+1}\\rfloor$\u3002\n\n\u8bc1\u660e\uff1a\u5148\u5c06\u533a\u95f4\u6392\u5e8f\u3002\u8bbe\u7b54\u6848\u4e3a $x$\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u6570\u6700\u4f18\u80af\u5b9a\u4e3a $1$\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u6bd4\u524d\u4e00\u4e2a\u6570\u5927\u81f3\u5c11 $x$\uff0c\u56e0\u6b64\u6700\u4f18\u60c5\u51b5\u7b2c $r-l+1$ \u4e2a\u6570\u4f4d $(r-l)x+1$\u3002\u8fd9\u4e2a\u6570\u9700\u8981 $\\le n$\uff0c\u56e0\u6b64 $x \\le \\lfloor \\dfrac{n-1}{r-l+1}\\rfloor$\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5bf9 $r-l+1$ \u6839\u53f7\u5206\u6cbb\u4e86\u3002\u5f53 $r-l+1 \\le B$ \u7684\u65f6\u5019\uff0c\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\uff08\u6216\u8005\u5176\u4ed6\u6392\u5e8f\u65b9\u6cd5\uff0c\u53ea\u8981\u4fdd\u8bc1\u590d\u6742\u5ea6\u5373\u53ef\uff09\u5c06\u533a\u95f4\u6392\u597d\u5e8f\uff0c\u5e76\u76f4\u63a5\u6c42\u7b54\u6848\u5373\u53ef\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3a $\\mathcal O(B)$\uff1b\u5426\u5219\uff0c\u7b54\u6848 $\\le \\dfrac{n}{B}$\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u503c\u57df\u5206\u5757\u4e86\uff0c\u800c\u662f\u66b4\u529b\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\u5e76\u679a\u4e3e\u3002\u8fd9\u6837\u5355\u6b21\u67e5\u8be2\u7684\u65f6\u95f4\u4e3a $\\mathcal O(\\dfrac{n}{B})$\u3002\u53d6 $B=\\sqrt{n}$\uff0c\u6b64\u65f6\u590d\u6742\u5ea6\u4e0e\u4e0a\u9762\u76f8\u540c\uff0c\u4e3a $\\mathcal O(n\\sqrt{n}+n\\sqrt{m}+m\\sqrt{n})$\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u51cf\u5c0f\u5f88\u591a\u5e38\u6570\u3002\u5728\u6dfb\u52a0\u3001\u5220\u9664\u6570\u7684\u65f6\u5019\uff08\u8fd9\u4e2a\u662f\u539f\u6765\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u74f6\u9888\uff09\uff0c\u503c\u57df\u5206\u5757\u9700\u8981\u4e24\u6b21\uff08\u6570\u503c\u7684\u6b21\u6570\u3001\u6570\u503c\u6240\u5728\u5757\u7684\u6b21\u6570\uff09\uff0c\u800c\u6839\u53f7\u5206\u6cbb\u53ea\u9700\u8981\u4e00\u6b21\u3002\u7ecf\u8fc7\u5927\u529b\u5361\u5e38\u540e\u53ef\u4ee5\u901a\u8fc7\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace io // \u8fd9\u91cc\u662f\u5feb\u8bfb\u5feb\u5199\uff0c\u4e3a\u51cf\u5c0f\u7bc7\u5e45\u5df2\u5220\u53bb\nint n,m;\nint a[300010],b[1010],c[1010];\nint block1,block2;\nint cntbf[128];\nint bf(int l,int r)\n{\n\tfor(int i=1; i<=r-l+1; ++i) b[i]=a[i+l-1];\n\tmemset(cntbf,0,sizeof(cntbf));\n\tfor(int i=1; i<=r-l+1; ++i) ++cntbf[b[i]&127];\n\tfor(int i=1; i<128; ++i) cntbf[i]+=cntbf[i-1];\n\tfor(int i=r-l+1; i>=1; --i) c[cntbf[b[i]&127]--]=b[i];\n\tmemset(cntbf,0,sizeof(cntbf));\n\tfor(int i=1; i<=r-l+1; ++i) ++cntbf[(c[i]>>7)&127];\n\tfor(int i=1; i<128; ++i) cntbf[i]+=cntbf[i-1];\n\tfor(int i=r-l+1; i>=1; --i) b[cntbf[(c[i]>>7)&127]--]=c[i];\n\tmemset(cntbf,0,sizeof(cntbf));\n\tfor(int i=1; i<=r-l+1; ++i) ++cntbf[b[i]>>14];\n\tfor(int i=1; i<128; ++i) cntbf[i]+=cntbf[i-1];\n\tfor(int i=r-l+1; i>=1; --i) c[cntbf[b[i]>>14]--]=b[i];\n\tint ans=1e9;\n\tfor(int i=1; i<=r-l; ++i) ans=min(ans,c[i+1]-c[i]);\n\treturn ans;\n}\nstruct Query\n{\n\tint l,r,id;\n}; vector<Query> q[10010];\ninline bool cmp(const Query &x,const Query &y) { return x.r>y.r; }\nint ans[1000010];\nint pre[300010],nxt[300010];\nint L[300010],R[300010],pos[300010];\nint cnt[300010];\nint query()\n{\n\tfor(int i=1; ; ++i) if(cnt[i]) return i;\n}\nvoid del0(int wz)\n{\n\twz=a[wz];\n\tif(pre[wz] && nxt[wz]) --cnt[wz-pre[wz]],--cnt[nxt[wz]-wz],++cnt[nxt[wz]-pre[wz]],nxt[pre[wz]]=nxt[wz],pre[nxt[wz]]=pre[wz];\n\telse if(pre[wz]) --cnt[wz-pre[wz]],nxt[pre[wz]]=0;\n\telse if(nxt[wz]) --cnt[nxt[wz]-wz],pre[nxt[wz]]=0;\n}\nvoid del1(int wz)\n{\n\twz=a[wz];\n\tif(pre[wz] && nxt[wz])\n\t{\n\t\t--cnt[wz-pre[wz]],--cnt[nxt[wz]-wz],++cnt[nxt[wz]-pre[wz]];\n\t\tnxt[pre[wz]]=nxt[wz],pre[nxt[wz]]=pre[wz];\n\t}\n\telse if(pre[wz]) --cnt[wz-pre[wz]],nxt[pre[wz]]=0;\n\telse if(nxt[wz]) --cnt[nxt[wz]-wz],pre[nxt[wz]]=0;\n}\nint main()\n{\n\tn=read(),m=read();\n\tblock1=400,block2=500; // \u6839\u5206\u9608\u503c\n\tfor(int i=1; i<=n; ++i) a[i]=read();\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint l=read(),r=read();\n\t\tif(r-l+1<=block2) ans[i]=bf(l,r);\n\t\telse q[(l-1)/block1].push_back({l,r,i});\n\t}\n\tfor(int i=0; i<=(n-1)/block1; ++i) sort(q[i].begin(),q[i].end(),cmp);\n\tint ccnt=0;\n\tfor(int i=0; i<=n/block1; ++i)\n\t{\n\t\tint wzl=i*block1+1,wzr=n;\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tfor(int j=1; j<=n-1; ++j) pre[j+1]=j,nxt[j]=j+1;\n\t\tcnt[1]=n-1;\n\t\tfor(int j=1; j<wzl; ++j) del0(j);\n\t\tfor(Query j:q[i])\n\t\t{\n\t\t\t++ccnt;\n\t\t\twhile(wzr>j.r) del0(wzr--);\n\t\t\twhile(wzl<j.l) del1(wzl++);\n\t\t\twzl=i*block1+1;\n\t\t\tans[j.id]=query();\n\t\t\tfor(int k=j.l-1; k>=wzl; --k)\n\t\t\t{\n\t\t\t\tint a1=pre[a[k]],a2=a[k],a3=nxt[a[k]];\n\t\t\t\tif(a1 && a3) ++cnt[a2-a1],++cnt[a3-a2],--cnt[a3-a1];\n\t\t\t\telse if(a1) ++cnt[a2-a1];\n\t\t\t\telse if(a3) ++cnt[a3-a2];\n\t\t\t\tnxt[a1]=pre[a3]=a2;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1; i<=m; ++i) write(ans[i]),writec('\\n');\n\tflush();\n\treturn 0;\n}\n```",
        "postTime": 1677166126,
        "uid": 353688,
        "name": "\u738b\u7199\u6587",
        "ccfLevel": 0,
        "title": "CF1793F \u9898\u89e3"
    },
    {
        "content": "\u8003\u8bd5\u8003\u4e86\u4e2a\u5dee\u4e0d\u591a\u7684\u9898\uff0c\u7528\u8fd9\u9053\u9898\u7684\u65b9\u6cd5\u53ef\u4ee5\u526a\u679d\u66b4\u529b\u8fc7\u9898\u3002\n\n\u4f46\u662f\u8003\u573a\u4e0a\u5b8c\u5168\u5fd8\u6389\u4e86\u8fd9\u4e2a trick\u3002\n\n\u9042\u5199\u4e00\u7bc7\u9898\u89e3\u8bb0\u5f55\u3002\n\n---\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e9b\u66b4\u529b\u7684\u505a\u6cd5\u3002\n\n\u6bd4\u5982\u8bf4\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5b58\u5b83\u5bf9\u5e94\u7684\u533a\u95f4\u5185\u7684\u6240\u6709\u5143\u7d20\u3002\n\n\u628a\u6bcf\u4e00\u4e2a\u8282\u70b9\u5b58\u7684\u6240\u6709\u5143\u7d20\u6392\u5e8f\uff0c\u90a3\u4e48\u8be2\u95ee\u7684\u65f6\u5019\u67e5\u8be2\u8be5\u5143\u7d20\u7684\u524d\u9a71\u540e\u7ee7\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u663e\u7136\u5f88\u9519\u3002\n\n\u8003\u8651\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u3002\n\n\u6574\u4e2a\u8fc7\u7a0b\u662f\u52a8\u6001\u7684\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e00\u6b21\u52a0\u5165 $a_i$\uff0c\u7136\u540e\u4e0e $a_{1 \\cdots i-1}$ \u5408\u5e76\u7b54\u6848\u3002\n\n\u5408\u5e76\u7b54\u6848\u53ea\u9700\u8981\u627e\u524d\u9a71\u540e\u7ee7\u5373\u53ef\u66f4\u65b0\u6700\u5c0f\u5dee\u3002\n\n\u4f46\u662f\u8fd9\u6837\u8fd8\u662f\u5f88\u66b4\u529b\uff0c\u600e\u4e48\u529e\uff1f\u53ef\u4ee5\u526a\u679d\u554a\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u9700\u8981\u66f4\u65b0\u7684\u533a\u95f4 $[l,r]$\uff0c\u8bbe\u4e2d\u70b9 $m$\u3002\n\n\u90a3\u4e48\u5148\u904d\u5386 $(m,r]$\uff0c\u518d\u904d\u5386 $[l,m]$\u3002\n\n\u5728\u904d\u5386 $[l,m]$ \u65f6\u5982\u679c\u7b54\u6848\u76f4\u63a5\u4e0d\u4f18\uff0c\u90a3\u4e48\u5c31\u8df3\u51fa\u5faa\u73af\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u662f\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u8fdb\u884c\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u5de6\u7aef\u7684\u7b54\u6848\u53ea\u4f1a\u88ab\u53f3\u7aef\u7684\u7b54\u6848\u66ff\u4ee3\u3002\u5373\uff0c\u5982\u679c\u7b54\u6848\u540c\u6837\u4f18\u79c0\uff0c\u90a3\u4e48\u4f18\u5148\u8003\u8651\u53f3\u4fa7\uff0c\u56e0\u4e3a\u540e\u7eed\u8fd8\u4f1a\u7528\u5230\u8fd9\u90e8\u5206\u7684\u503c\u3002\n\n\u5426\u5219\uff0c\u5982\u679c\u5148\u66f4\u65b0\u5de6\u4fa7\uff0c\u53f3\u4fa7\u88ab\u526a\u679d\uff0c\u540e\u7eed\u5982\u679c\u8981\u7528\u5230\u53f3\u4fa7\u7684\u503c\u5c31\u4f1a\u76f4\u63a5\u5bfc\u81f4\u9519\u8bef\u3002\n\n\u6ca1\u4e86\uff0c\u590d\u6742\u5ea6\u76ee\u6d4b $\\mathcal{O}(m \\log^2 n)$\u3002\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#include <bits/stdc++.h>\n#define ls ((rt) << 1)\n#define rs ((rt) << 1 | 1)\nusing namespace std;\n\nconst int N = 3e5 + 10, inf = 1e18;\nint n, q, curv, a[N], val[N << 2], res[N << 2];\nvector <int> t[N << 2];\nstruct Node {\n    int id, l, r;\n    inline bool operator <(const Node &X) const {\n        return r < X.r;\n    }\n} qry[N << 2];\n\ninline void build(int rt, int l, int r) {\n    val[rt] = inf;\n    if (l == r) return t[rt].push_back(a[l]), void();\n    int mid = (l + r) >> 1; build(ls, l, mid), build(rs, mid + 1, r);\n    for (auto x: t[ls]) t[rt].push_back(x);\n    for (auto x: t[rs]) t[rt].push_back(x);\n    sort(t[rt].begin(), t[rt].end()); return ;\n}\n\ninline void upd(int rt, int l, int r, int pos, int vl) {\n    if (r <= pos) {\n        auto cur = lower_bound(t[rt].begin(), t[rt].end(), vl);\n        if (cur != t[rt].begin()) val[rt] = min(val[rt], vl - *(cur - 1));\n        if (cur != t[rt].end()) val[rt] = min(val[rt], *cur - vl);\n        if (val[rt] >= curv) return ;\n    }\n    if (l < r) {\n        int mid = (l + r) >> 1;\n        if (pos > mid) upd(rs, mid + 1, r, pos, vl);\n        upd(ls, l, mid, pos, vl), val[rt] = min(val[ls], val[rs]);\n    }\n    return curv = min(curv, val[rt]), void();\n}\n\ninline int query(int rt, int l, int r, int pos) {\n    if (l >= pos) return val[rt]; int mid = (l + r) >> 1;\n    if (pos > mid) return query(rs, mid + 1, r, pos);\n    return min(val[rs], query(ls, l, mid, pos));\n}\n\ntemplate <typename T> inline void read(T &x) {\n    x = 0; char ch = getchar();\n    while (!isdigit(ch)) ch = getchar();\n    while (isdigit(ch)) x = x * 10 + ch - 48, ch = getchar();\n}\n\nint main() {\n    read(n), read(q); for (int i = 1; i <= n; ++i) read(a[i]);\n    for (int i = 1; i <= q; ++i) read(qry[qry[i].id = i].l), read(qry[i].r);\n    build(1, 1, n); sort(qry + 1, qry + 1 + q); int d = 1;\n    for (int i = 2; i <= n; ++i) {\n        curv = inf, upd(1, 1, n, i - 1, a[i]);\n        while (qry[d].r == i) res[qry[d++].id] = query(1, 1, n, qry[d].l);\n    }\n    for (int i = 1; i <= q; ++i) printf(\"%d\\n\", res[i]);\n    return 0;\n}\n```",
        "postTime": 1678347961,
        "uid": 487752,
        "name": "MistZero",
        "ccfLevel": 0,
        "title": "CF1793F Rebrending Sol"
    }
]