[
    {
        "content": "# \u4e24\u6b65dfs\u904d\u5386\u56fe\uff08\u5176\u5b9e\u662f\u6811\uff09\u5373\u53ef\u6c42\u89e3\n\u7ffb\u8bd1\u9898\u76ee\u91cc\u9762\u5df2\u7ecf\u6709\u4e86\u5728\u8fd9\u5c31\u4e0d\u591a\u52a0\u8d58\u8ff0\u4e86\n\u603b\u5171n\u4e2a\u8282\u70b9n-1\u6761\u8fb9\uff0c\u8bf4\u660e\u8fd9\u4e2a\u65e0\u5411\u56fe\u56fe\u662f\u4e2a\u6811\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u4ee5x\u4e3a\u6839\u8282\u70b9\u904d\u5386\u56fe\uff0c\u9047\u5230y\u5373\u505c\u6b62\uff0c\n\u8ba1\u7b97x\u4e0d\u7ecf\u8fc7y\u6240\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u6570numx\uff0cn-numx\u5373\u4e3ay\u53cay\u4e00\u4fa7\u7684\u8282\u70b9\u6570\uff08\u4e0d\u5305\u62ecx\u4e0ey\u4e4b\u95f4\u7684\u8282\u70b9\uff09\n\n\u518d\u4ee5y\u4e3a\u6839\u8282\u70b9\uff0c\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\n\n\u6240\u6709\u8def\u5f84\u7684\u603b\u6570\u4e3a\u7ec4\u5408\u6570Cn2\u5373n*\uff08n-1\uff09\n\nx\u5230y\u7684\u8def\u5f84\u6570\u4e3a\u603b\u6570\u51cf\u53bbx\uff0cy\u53ca\u5404\u81ea\u4e24\u4fa7\u8282\u70b9\u7684\u79ef\n\n\u56e0\u4e3a\u6570\u636e\u8f83\u5927\uff0c\u5e94\u7528long long\u8ba1\u7b97\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nvector<int>ve[300005];\nbool vis[300005];\nbool pos[300005];\nlong long n,x,y,numx=0,numy=0;\nvoid build(int a,int b)\n{\n    ve[a].push_back(b);\n    ve[b].push_back(a);\n}\n\nvoid dfs1(int node)\n{\n    if(node==y)\n    {\n        return;\n    }\n    vis[node]=1;\n    int big=ve[node].size();\n    for(int i=0;i<big;i++)\n    {\n        if(!vis[ve[node][i]])\n        {\n            vis[ve[node][i]]=1;\n            numx++;\n            dfs1(ve[node][i]);\n        }\n    }\n}\n\nvoid dfs2(int node)\n{\n    if(node==x)\n    {\n        return;\n    }\n    vis[node]=1;\n    int big=ve[node].size();\n    for(int i=0;i<big;i++)\n    {\n        if(!vis[ve[node][i]])\n        {\n            vis[ve[node][i]]=1;\n            numy++;\n            dfs2(ve[node][i]);\n        }\n    }\n}\n\nint main()\n{\n\n    scanf(\"%lld%lld%lld\",&n,&x,&y);\n    for(int i=1;i<=n-1;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        build(a,b);\n    }\n    dfs1(x);\n    memset(vis,0,sizeof(vis));\n    dfs2(y);\n    printf(\"%lld\\n\",n*(n-1)-(n-numx)*(n-numy));\n    return 0;\n}\n\n```\n",
        "postTime": 1585240018,
        "uid": 296785,
        "name": "RainbOwO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF979C \u3010Kuro and Walking Route\u3011"
    },
    {
        "content": "\u6839\u636ex\u548cy\u7684\u76f8\u5bf9\u4f4d\u7f6e\u8ba8\u8bba\u9700\u8981\u5bb9\u65a5\uff08\u5176\u5b9e\u4e5f\u4e0d\u662f\u5bb9\u65a5\uff09\u6389\u7684\u65b9\u6848\u6570\n\n```cpp\n#include<cstdio>\nusing namespace std;\ntypedef long long ll;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(ll x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(ll x){write(x); puts(\"\");}\nconst int N=3e5+5;\nstruct edge{\n\tint link,next;\n}e[N<<1];\nint n,tot,x,y,head[N];\ninline void add_edge(int u,int v){\n\te[++tot]=(edge){v,head[u]}; head[u]=tot;\n}\ninline void insert(int u,int v){\n\tadd_edge(u,v); add_edge(v,u);\n}\ninline void init(){\n\tn=read(); x=read(); y=read();\n\tfor (int i=1;i<n;i++){\n\t\tinsert(read(),read());\n\t}\n}\nint flag,Fa[N],sz[N];\nll ans;\nvoid dfs(int u,int fa){\n\tsz[u]=1; Fa[u]=fa;\n\tfor (int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].link;\n\t\tif (v!=fa){\n\t\t\tdfs(v,u);\n\t\t\tsz[u]+=sz[v];\n\t\t}\n\t}\n}\ninline void solve(){\n\tdfs(1,0); ans=1ll*(n-1)*n; int X=x,Y=y;\n\tfor (;x;x=Fa[x]) if (Fa[x]==y) ans-=1ll*sz[X]*(n-sz[x]),flag=1;\n\tx=X; y=Y;\n\tfor (;y;y=Fa[y]) if (Fa[y]==x) ans-=1ll*sz[Y]*(n-sz[y]),flag=1;\n\tif (!flag) ans-=1ll*sz[X]*sz[Y];\n\twriteln(ans);\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n} \n```",
        "postTime": 1534595909,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF979C \u3010Kuro and Walking Route\u3011"
    },
    {
        "content": "### \u601d\u8def\uff1a\n\u8003\u8651\u5bb9\u65a5\uff0c\u603b\u65b9\u6848\u6570\u662f $n\\times(n-1)$\uff0c\u56e0\u4e3a\u6709\u65b9\u5411\u6240\u4ee5\u4e0d\u7528\u9664\u4ee5 $2$\uff0c\u5e94\u8be5\u51cf\u53bb\u7684\u662f\u987a\u5e8f\u7ecf\u8fc7 $x$\uff0c$y$ \u7684\uff0c\u8003\u8651\u4ee5 $x$ \u4e3a\u6839\u628a\u6811\u62ce\u8d77\u6765\uff0c\u8bb0 $d_u$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5219\u6709 $n\\times d_y$ \u79cd\u65b9\u6cd5\u7ecf\u8fc7 $y$\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u5148\u7ecf\u8fc7 $x$\uff0c\u8003\u8651 $v$ \u662f $x$ \u7684\u4e00\u4e2a\u76f4\u63a5\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5fc5\u7136\u5b58\u5728\u6070\u597d\u4e00\u4e2a $v$ \u4f7f $y$ \u5728\u4ee5 $v$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\uff0c\u8fd9\u68f5\u5b50\u6811\u5185\u7684\u70b9\u8d70\u5230 $y$ \u7684\u5b50\u6811\u5185\u7684\u4efb\u610f\u4e00\u70b9\u4e0d\u4f1a\u7ecf\u8fc7 $x$\uff0c\u7b54\u6848\u4e3a $n\\times (n-1)-(n-d_v)\\times d_y$\uff0c\u5176\u4e2d $v$ \u662f\u5b50\u6811\u4e2d\u6709 $y$ \u7684\u90a3\u4e2a $x$ \u7684\u76f4\u63a5\u5b50\u8282\u70b9\u3002\n### \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ull unsigned long long\n#define ld long double\nusing namespace std;\nint n,x,y,sz[(int)(3e5+10)];\nvector<int>edge[(int)(3e5+10)];\nvoid dfs(int u,int fa)\n{\n    sz[u]=1;\n    for(int i=0;i<edge[u].size();i++)\n    {\n        int v=edge[u][i];\n        if(v==fa) continue;\n        dfs(v,u);\n        sz[u]+=sz[v];\n    }\n}\nbool f[(int)(3e5+10)];\nvoid dfs1(int u,int fa)\n{\n    for(int i=0;i<edge[u].size();i++)\n    {\n        int v=edge[u][i];\n        if(v==fa) continue;\n        dfs1(v,u);\n//        cout<<u<<\" \"<<v<<\"\\n\";\n        f[u]|=f[v];\n    }\n}\nsigned main()\n{\n    cin>>n>>x>>y;\n    for(int i=1;i<n;i++)\n    {\n        int u,v;cin>>u>>v;\n        edge[u].push_back(v);\n        edge[v].push_back(u);\n    }\n    int ans=n*(n-1);f[y]=1;\n    dfs(x,0);\n    dfs1(x,0);\n//    for(int i=1;i<=n;i++) cout<<f[i]<<\" \";\n//    puts(\"\");\n    for(int i=0;i<edge[x].size();i++)\n    {\n        int v=edge[x][i];\n//        cout<<v<<\" \"<<dfs1(v,x)<<\"\\n\";\n        if(f[v])\n        {\n            ans-=(sz[x]-sz[v])*sz[y];break;\n        }\n    }\n    cout<<ans;\n}\n```",
        "postTime": 1642317717,
        "uid": 413777,
        "name": "npqenqpve",
        "ccfLevel": 0,
        "title": "CF979C"
    }
]