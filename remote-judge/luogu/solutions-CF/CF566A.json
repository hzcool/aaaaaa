[
    {
        "content": "# [CF566A]Matching Names\n## \u9898\u76ee\u5927\u610f\uff1a\nA\u7ec4\u548cB\u7ec4\u5404$n(n\\le10^5)$\u4e2a\u5b57\u7b26\u4e32$(\\sum|S|\\le8\\times10^5)$\uff0c\u5c06\u5b83\u4eec\u4e24\u4e24\u5339\u914d\uff0c\u4f7f\u5f97\u6bcf\u7ec4\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684LCP\u4e4b\u548c\u6700\u5927\uff0c\u8f93\u51fa\u6700\u5927\u503c\uff0c\u5e76\u8f93\u51fa\u65b9\u6848\u3002\n\n## \u601d\u8def\uff1a\nTrie\u4e0a\u8d2a\u5fc3\uff0c\u5728\u6df1\u7684\u7ed3\u70b9\u80fd\u5339\u914d\u5219\u5339\u914d\u3002\n\n## \u6e90\u4ee3\u7801\uff1a\n```cpp\n#include<set>\n#include<cstdio>\n#include<vector>\nconst int N=1e5+1,L=8e5+1;\nint n,ans;\nchar s[L];\nstd::vector<std::pair<int,int> > v;\nclass Trie {\n\tprivate:\n\t\tstd::set<int> set[L][2];\n\t\tint ch[L][26],par[L],sz;\n\t\tint idx(const char &c) const {\n\t\t\treturn c-'a';\n\t\t}\n\t\tvoid erase(int p,const int &x,const bool &t) {\n\t\t\twhile(p) {\n\t\t\t\tset[p][t].erase(x);\n\t\t\t\tp=par[p];\n\t\t\t}\n\t\t\tset[0][t].erase(x);\n\t\t}\n\tpublic:\n\t\tvoid insert(char s[],const int &id,const bool &t) {\n\t\t\tset[0][t].insert(id);\n\t\t\tfor(register int i=0,p=0;s[i];i++) {\n\t\t\t\tconst int c=idx(s[i]);\n\t\t\t\tif(!ch[p][c]) {\n\t\t\t\t\tch[p][c]=++sz;\n\t\t\t\t\tpar[ch[p][c]]=p;\n\t\t\t\t}\n\t\t\t\tp=ch[p][c];\n\t\t\t\tset[p][t].insert(id);\n\t\t\t}\n\t\t}\n\t\tvoid solve(const int &p,const int &dep) {\n\t\t\tfor(register int i=0;i<26;i++) {\n\t\t\t\tif(ch[p][i]) {\n\t\t\t\t\tsolve(ch[p][i],dep+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile(!set[p][0].empty()&&!set[p][1].empty()) {\n\t\t\t\tans+=dep;\n\t\t\t\tconst int x=*set[p][0].begin();\n\t\t\t\tconst int y=*set[p][1].begin();\n\t\t\t\tv.push_back(std::make_pair(x,y));\n\t\t\t\terase(p,x,0);\n\t\t\t\terase(p,y,1);\n\t\t\t}\n\t\t}\n};\nTrie t;\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;i++) {\n\t\tscanf(\"%s\",s);\n\t\tt.insert(s,i,0);\n\t}\n\tfor(register int i=1;i<=n;i++) {\n\t\tscanf(\"%s\",s);\n\t\tt.insert(s,i,1);\n\t}\n\tt.solve(0,0);\n\tprintf(\"%d\\n\",ans);\n\tfor(register unsigned i=0;i<v.size();i++) {\n\t\tprintf(\"%d %d\\n\",v[i].first,v[i].second);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1546564295,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF566A \u3010Matching Names\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\n- \u770b\u5230\u516c\u5171\u524d\u7f00\uff0c\u6211\u4eec\u5c31\u4f1a\u60f3\u5230 `trie`\u3002\u8fd9\u9898\u8981\u6c42\u6700\u5927\u7684\u516c\u5171\u524d\u7f00\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8d2a\u5fc3\u3002\n\n- \u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u524d\u7f00\uff0c\u5728 `trie` \u4e0a\u80fd\u8d70\u591a\u6df1\u5c31\u591a\u6df1\uff0c\u6bcf\u6b21\u7528\u516c\u5171\u524d\u7f00\u6700\u957f\u7684\u4e00\u4e2a\u5b66\u751f\u548c\u4e00\u4e2a\u7b14\u540d\u5339\u914d\u3002\u56e0\u4e3a\u8981\u6c42\u524d\u7f00\u957f\u5ea6\u7684\u548c\u6700\u5927\uff0c\u6240\u4ee5\u5f53\u524d\u6700\u5927\u80af\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u5982\u6709\u5f53\u524d\u4e0d\u9009\uff0c\u90a3\u4e48\u5728\u672a\u6765\u4e0d\u53ef\u80fd\u627e\u5230\u66f4\u6709\u7684\u4e0e\u8be5\u5b66\u751f\u5339\u914d\u7684\u7b14\u540d\u3002\n\n- \u5b9e\u73b0\u7684\u8bdd\u6bd4\u8f83\u7b80\u5355\uff0c\u8bb2\u5b66\u751f\u540d\u5b57\u548c\u7b14\u540d\u5b58\u5230\u540c\u4e00\u9897 `trie` \u4e2d\uff0c\u7528 $0,1$ \u533a\u522b\u3002\u6bcf\u6b21\u9012\u5f52\u987a\u7740\u524d\u7f00\u5f80\u4e0b\u8bb0\u5f55\u6700\u6df1\u7684\u53ef\u5339\u914d\u7684\u4e24\u4e2a\uff0c\u7528\u6570\u7ec4\u5b58\u4e0b\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n- \u4e0a\u9762\u8bb2\u7684\u4e5f\u6bd4\u8f83\u6e05\u695a\uff0c\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\u3002",
        "postTime": 1659353331,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF566A\u3010Matching Names\u3011"
    }
]