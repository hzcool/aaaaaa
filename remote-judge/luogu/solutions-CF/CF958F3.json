[
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u53ef\u91cd\u96c6\u5408\uff0c\u5176\u4e2d\u6709 $n$ \u4e2a\u5143\u7d20\uff0c\u5143\u7d20\u8303\u56f4\u4e3a $[1, m]$\uff0c\n\u6c42\u5b83\u5927\u5c0f\u4e3a $k$ \u7684\u5b50\u96c6\u6709\u591a\u5c11\u79cd\u60c5\u51b5\u3002\n\n\u9898\u89e3\uff1a\u6bcf\u79cd\u5143\u7d20\u7684\u9009\u6cd5\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2a\u751f\u6210\u51fd\u6570\u8868\u793a $G_i(x)=\\sum\\limits_{j=0}^{cnt_i}x^j$ \u5206\u522b\u8868\u793a\u9009 $0$ \u4e2a\u5230 $cnt_i$ \u4e2a\uff0c$cnt_i$ \u8868\u793a\u6709\u591a\u5c11\u79cd $i$ \u5143\u7d20\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u628a\u8fd9 $m$ \u4e2a\u751f\u6210\u51fd\u6570\u5377\u8d77\u6765\u540e $x^k$ \u9879\u7684\u7cfb\u6570\uff0c\u7531\u4e8e\u5982\u679c\u4e00\u9879\u4e00\u9879\u5377\u8d77\u6765\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u4e3a $\\mathcal{O}(n^2\\log n)$\u3002\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6cbb\uff0c\u5b9a\u4e49 $solve(l, r)$ \u4e3a $[l, r]$ \u5377\u8d77\u6765\u5f97\u5230\u7684\u591a\u9879\u5f0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u505a $[l, r]$ \u65f6\u5148\u505a $[l, mid]$ \u548c $[mid+1, r]$ \u7136\u540e\u628a\u4e24\u8fb9\u5377\u8d77\u6765\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n\\log^2 n)$ \u7684\uff0c\u56e0\u4e3a\u603b\u5171\u53ea\u4f1a\u9012\u5f52 $\\log n$ \u5c42\uff0c\u6bcf\u4e2a\u591a\u9879\u5f0f\u53ea\u4f1a\u88ab DFT $\\log n$ \u6b21\uff0c\u800c\u591a\u9879\u5f0f\u603b\u6b21\u6570\u53c8\u662f $\\mathcal{O}(n)$ \u7684\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log^2 n)$\u3002\n\n\u6ce8\u610f\uff1a\u7531\u4e8e\u6a21\u6570\u4e0d\u662f NTT \u6a21\u6570\uff0c\u6240\u4ee5\u8981\u7528 FFT\uff0c\u6ce8\u610f\u9700\u8981\u5f00 long long\uff0c\u56e0\u4e3a\u5377\u8d77\u6765\u7cfb\u6570\u53ef\u80fd\u4f1a\u5f88\u5927\u3002\n\n```cpp\n//\u7701\u53bb\u4e86\u53c8\u81ed\u53c8\u957f\u7684\u5934\nusing Poly_ftt :: mul;\nusing Poly_ftt :: mul_ll;\npoly operator * (poly a, poly b) {return mul(a, b);}\npoly_ll operator * (poly_ll a, poly_ll b) {return mul_ll(a, b);}\nconst int N = 2e5 + 5;\nint n, m, K, cnt[N];\nauto solve(int l, int r) {\n\tif (l == r) {\n\t\tpoly_ll ret(cnt[l] + 1);\n\t\tfor (int i = 0; i <= cnt[l]; i++)\n\t\t\tret[i] = 1;\n\t\treturn ret;\n\t}\n\tint mid = l + r >> 1;\n\tpoly_ll ret = solve(l, mid) * solve(mid + 1, r);\n\tfor (int i = 0; i < (int)ret.size(); i++) ret[i] %= mod;\n\treturn ret;\n}\n\nint main() {\n\tscanf(\"%d%d%d\", &n, &m, &K);\n\tfor (int i = 1, x; i <= n; i++)\n\t\tscanf(\"%d\", &x), cnt[x]++;\n\tpoly_ll res = solve(1, m);\n\tprintf(\"%lld\\n\", res[K]);\n\treturn 0;\n}\n```",
        "postTime": 1638752092,
        "uid": 108610,
        "name": "Dzhao",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF958F3 Lightsabers (hard)"
    },
    {
        "content": "### P.S.\n\u6709\u610f\u601d\u7684\u751f\u6210\u51fd\u6570\u9898\u3002  \n\u9700\u8981`FFT`\u6765\u4f18\u5316\u3002  \n\u7ffb\u8bd1\u5df2\u63d0\u4ea4\uff0c\u5e03\u5409\u5c9b\u80fd\u4e0d\u80fd\u8fc7\u3002  \n\n\n### Problem.\n\u7ed9\u4f60\u4e00\u4e2a\u53ef\u91cd\u96c6\uff0c\u6c42\u5b83\u5927\u5c0f\u4e3a$k$\u7684\u5b50\u96c6\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\u3002  \n\n### Solution.\n\u9996\u5148\uff0c\u8fd9\u5f88**\u663e\u7136**\u662f\u751f\u6210\u51fd\u6570\u3002  \n\u5982\u679c\u4e0d\u4f1a\u751f\u6210\u51fd\u6570\u7684\u5efa\u8bae\u89c1\u81ea\u884c\u767e\u5ea6`\u751f\u6210\u51fd\u6570`\u6216`\u6bcd\u51fd\u6570`\uff0c\u4e5f\u53ef\u53c2\u7167`\u6570\u5b66\u4e00\u672c\u901a`\u81ea\u884c\u4e86\u89e3\u5b66\u4e60\u3002  \n\u5982\u679c\u4e0d\u4f1aFFT\u7684\u5efa\u8bae\u81ea\u884c\u53c2\u7167\u9c30\u7684\u535a\u5ba2\uff0c\u6216\u81ea\u884c\u767e\u5ea6`FFT`\u5b66\u4e60\uff0c\u7b14\u8005\u5728\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002  \n\u8fd9\u9053\u9898\u5b83\u662f\u53ef\u91cd\u96c6\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u666e\u901a\u578b\u751f\u6210\u51fd\u6570\u3002  \n\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u91cd\u96c6\u7684\u6570\uff0c\u6211\u4eec\u8bb0\u5b83\u7684\u4e2a\u6570\u4e3a$k$\u3002  \n\u5bf9\u4e8e\u8fd9\u4e2a\u6570\uff0c\u5b83\u7684\u666e\u901a\u578b\u751f\u6210\u51fd\u6570\u4e3a$(1+x+...+x^k)$  \n\u4e8e\u662f\u8fd9\u9898\u7684\u7b54\u6848\u4e3a$(1+x+...+x^{k_1})(1+x+...+x^{k_2})...$\u7684\u7b54\u6848\u7684$x^k$\u7684\u7cfb\u6570\u3002  \n\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u6a21\u62df\u4e00\u4e0b\u4e0a\u9762\u8fd9\u4e2a\u591a\u9879\u5f0f\u7684\u4e58\u6cd5\u5c31\u597d\u4e86\uff08\uff08\uff08  \n\u53ef\u662f\uff0c\u6b63\u5e38\u7684\u591a\u9879\u5f0f\u4e58\u6cd5\u590d\u6742\u5ea6\u662f$O(n^2)$\u7684\uff0c\u6211\u4eec\u7528FFT\u6765\u4f18\u5316\u5b83\u3002  \n\u53ef\u662f\uff0c\u6b63\u5e38\u7684FFT\u590d\u6742\u5ea6\u662f$O(n\\log n)$\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u8fdb\u884c\u6700\u591a$n$\u6b21\u591a\u9879\u5f0f\u4e58\u6cd5\uff0c\u590d\u6742\u5ea6\u4f1a\u88ab\u5361\u6210$O(n^2\\log n)$\u3002  \n\u4e8e\u662f\uff0c\u6211\u4eec\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u8fd9$n$\u6b21FFT\uff0c\u590d\u6742\u5ea6\u53d8\u6210\u4e86$O(\\text{\u7384\u5b66})$\u3002  \n\n### Some Reasons of UnAccept.\n1. \u6ca1\u5f00long long\uff0c\u4eb2\u6d4bWA on 51\u3002\n2. FFT\u5199\u70b8\uff0c\u65e0\u4eb2\u6d4b\u3002\n3. \u6ca1\u52a0\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u6216\u542f\u53d1\u5f0f\u5408\u5e76\u5199\u624e\uff0c\u4eb2\u6d4bTLEon46\n\n### Coding.\n```cpp\n//\u58f0\u8d77\u7acb\u534e\u4e50\u72ec\u594f \u66f2\u672b\u97f3\u65e0\u5fc3\u7ed3\u5f26\n//\u53ea\u8981\u8bb0\u4f4f\u4f60\u7684\u540d\u5b57 \u4e0d\u7ba1\u4f60\u5728\u4e16\u754c\u7684\u54ea\u4e2a\u5730\u65b9 \u6211\u4e00\u5b9a\u4f1a\u53bb\u89c1\u4f60\n//\u4f60\u6307\u5c16\u8df3\u52a8\u7684\u7535\u5149 \u662f\u6211\u6c38\u6052\u4e0d\u53d8\u7684\u4fe1\u4ef0\n//\u62dc\u6258 \u8bf7\u628a\u529b\u91cf\u501f\u7ed9\u8f6f\u5f31\u7684\u6211 \u7ed9\u6211\u4ece\u8fd9\u91cc\u518d\u5ea6\u8d77\u8eab\u8fc8\u6b65\u7684\u529b\u91cf\n//\u867d\u7136\u706f\u5854\u5df2\u7ecf\u5931\u53bb\u4e86\u5149\u660e\u2026\u2026 \u4f46\u662f \u53ea\u8981\u6709\u4f60\u7684\u90a3\u9996\u6b4c\u5728 \u5c31\u4e00\u5b9a\u80fd\u5c06\u90a3\u4e9b\u4eba\u518d\u6b21\u5bfc\u5411\n//\u3010\u4e0a\uff1a\u4ee3\u7801\u7f3a\u7701\u6e90\u3011\n//\u4e0b\uff1a\u706b\u8f66\u5934\uff0c\u5176\u5b9e\u5e94\u8be5\u4e0d\u9700\u8981\u3002\n//\u6e29\u99a8\u63d0\u9192\uff1a\u706b\u8f66\u5934\u5fc5\u987b\u8981C++14\u624d\u80fd\u6b63\u5e38\u98df\u7528\n#pragma GCC optimize(2)\n#pragma GCC target(\"avx\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n//\u4e0a\uff1a\u706b\u8f66\u5934\uff0c\u5176\u5b9e\u5e94\u8be5\u4e0d\u9700\u8981\u3002\n#include<bits/stdc++.h>\nusing namespace std;\nconst double pi=acos(-1);\nstruct comp\n{\n\tdouble x,y;\n\tinline comp operator+(comp b) const {return(comp){x+b.x,y+b.y};}\n\tinline comp operator-(comp b) const {return(comp){x-b.x,y-b.y};}\n\tinline comp operator*(double b) const {return(comp){x*b,y*b};}\n\tinline comp operator/(double b) const {return(comp){x/b,y/b};}\n\tinline comp operator*(comp b) const {return(comp){x*b.x-y*b.y,x*b.y+y*b.x};}\n}a[800005],b[800005];\n//\u6309\u7167\u5e8f\u5217\u957f\u5ea6\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u6240\u4ee5node\u9700\u8981\u91cd\u5b9a\u4e49\u5c0f\u4e8e\u53f7\u3002\nstruct node{vector<int>v;bool operator<(node b) const {return v.size()>b.v.size();}};//\u8fd9\u4e2a\u662fvector\u7684\u7ed3\u6784\u4f53\uff0c\u7b14\u8005\u6bd4\u8f83\u61d2\uff0c\u76f4\u63a5\u65b0\u5b9a\u4e49\u7ed3\u6784\u4f53\nint n,m,k,c[800005],r[800005];priority_queue<node>q;//q\u662f\u90a3\u4e2a\u7528\u4e8e\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u6709\u9650\u961f\u5217\n//\u4e0b\uff1aFFT\u6a21\u677f\ninline void FFT(int n,comp *a,int fla)\n{\n\tfor(int i=0;i<n;i++) if(i<r[i]) swap(a[i],a[r[i]]);\n\tfor(int d=1;d<n;d<<=1)\n\t{\n\t\tcomp wn=(comp){cos(pi/d),fla*sin(pi/d)},w;\n\t\tfor(int i=0,k;i<n;i+=(d<<1))\n\t\t\tfor(k=0,w=(comp){1,0};k<d;k++,w=w*wn)\n\t\t\t\t{comp x=a[i+k],y=w*a[i+k+d];a[i+k]=x+y,a[i+k+d]=x-y;}\n\t}\n\tif(fla==-1) for(int i=0;i<n;i++) a[i]=a[i]/n;\n}\n//\u4e0a\uff1aFFT\u6a21\u677f\n//\u4e0b\uff1a\u591a\u9879\u5f0f\u4e58\u6cd5\u6a21\u677f\ninline node times(node A,node B)\n{\n\tint n=A.v.size(),m=B.v.size(),T;\n\tfor(T=1,r[0]=0;T<=n+m;) T<<=1;\n\tfor(int i=0;i<T;i++) r[i]=((r[i>>1]>>1)|((i&1)?(T>>1):0));\n\tfor(int i=0;i<T;i++) a[i]=b[i]=(comp){0,0};\n\tfor(int i=0;i<n;i++) a[i].x=A.v[i];\n\tfor(int i=0;i<m;i++) b[i].x=B.v[i];\n\tFFT(T,a,1),FFT(T,b,1);\n\tfor(int i=0;i<T;i++) a[i]=a[i]*b[i];\n\tFFT(T,a,-1);node t;t.v.clear(),t.v.resize(n+m-1);//\u8fd9\u91cc\u5fc5\u987b\u5f00longlong\uff0c\u56e0\u4e3a\u867d\u7136\u6bcf\u4e00\u4f4d\u90fd<1009\uff0c\u4f46\u662f\u4e58\u8d77\u6765\u53ef\u80fd\u5f88\u5927\n\tfor(int i=0;i<=n+m-2;i++) t.v[i]=(long long)(a[i].x+0.5)%1009;\n\treturn t;//\u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u52a0\u70b9\u4f18\u5316\uff0c\u53ef\u4ee5\u628a\u6307\u6570\u5927\u4e8ek-1\u7684\u5168\u90fd\u4e0d\u8981\n}\n//\u4e0a\uff1a\u591a\u9879\u5f0f\u4e58\u6cd5\u6a21\u677f\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);node t;t.v.clear(),t.v.push_back(1);\n\tfor(int i=1,x;i<=n;i++) scanf(\"%d\",&x),c[x]++,c[x]=min(c[x],k+1);//\u8bb0\u5f55\u53ef\u91cd\u5373\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u6570\u91cf\n\tsort(c+1,c+n+1);//\u6309\u7167\u6570\u91cf\u5927\u5c0f\u6392\u5e8f\uff0c\u4fbf\u4e8e\u542f\u53d1\u5f0f\u5408\u5e76\n\tfor(int i=1;i<=n;i++) {while((int)t.v.size()-1<c[i]) t.v.push_back(1);q.push(t);}//\u6784\u9020\u51fa\u6bcf\u4e2a\u751f\u6210\u51fd\u6570\n\twhile((int)q.size()>1) {node a=q.top();q.pop();node b=q.top();q.pop();q.push(times(a,b));}//\u542f\u53d1\u5f0f\u5408\u5e76\n\treturn printf(\"%d\\n\",q.top().v[k]),0;//\u8f93\u51fa\u7b54\u6848\u7684k\u6b21\u65b9\u7684\u9879\n}\n```\n\n\u5b8c\u7ed3\u6563\u82b1",
        "postTime": 1596443056,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF958F3Lightsabers (hard)\u3010\u9898\u89e3\u3011"
    }
]