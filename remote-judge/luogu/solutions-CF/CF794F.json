[
    {
        "content": "[$\\tt Link$](/problem/CF794F)\u3002\n\n~~\u53e3\u80e1\u5341\u79d2\u949f\uff0c\u8c03\u9898\u4e24\u5c0f\u65f6\u3002~~\n\n\u597d\u7684\u5176\u5b9e\u662f\u4e2a\u4e0d\u96be\u7684 $\\tt {}^{\\ast}2800$\uff08\u81ea\u6211\u5b89\u6170\u3002\n\n---\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u3002\u8282\u70b9\u7ef4\u62a4\u5341\u79cd\u4fe1\u606f\u4ee3\u8868 $0,\\cdots,9$ \u7684\u6743\u548c\u3002\n\n> \u6743\u662f\u5565\uff1f\u4e2a\u4f4d\u6743\u662f $1$\uff0c\u5341\u4f4d\u6743\u662f $10$\uff0c\u767e\u4f4d\u6743\u662f $100$\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002  \n> \u6bd4\u5982 $2627$\uff0c$2$ \u7684\u6743\u662f $1010$\uff0c$6$ \u7684\u6743\u662f $100$\uff0c$7$ \u7684\u6743\u662f $1$\u3002\n\n\u4e8e\u662f\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u7684\u548c\uff0c\u5c31\u662f $\\sum$ \u6570\u5b57\u4e58\u4e0a\u5176\u5bf9\u5e94\u6743\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6709\u4e86\u8fd9\u4e2a\u6743\u548c\uff0c\u4fee\u6539\u53ef\u4ee5\u8f7b\u677e\u8f6c\u79fb\u3002\n\n> \u8003\u8651\u539f\u6765\u662f $1243$\u3002  \n> $1$ \u53d8 $2$\uff0c\u8fd9\u65f6\u628a $1$ \u7684\u6743\u52a0\u5230 $2$ \u5934\u4e0a  \n> $2$ \u518d\u53d8 $4$\uff0c\u8fd9\u65f6\u518d\u628a $2$ \u7684\u6743\u52a0\u5230 $4$ \u5934\u4e0a\u3002  \n> \u5b8c\u5168\u6ca1\u6709\u95ee\u9898\uff0c\u6743\u548c\u6b63\u786e\n\n\u8003\u8651\u4e00\u4e2a\u5730\u65b9\u7684\u4fee\u6539\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u7ef4\u62a4 $tag_i$ \u4ee3\u8868\u6570\u5b57 $i$ \u53d8\u6210\u4e86\u4ec0\u4e48\u3002\n\n\u6253\u6807\u8bb0\uff1a$\\forall tag_i=x,tag_i\\gets y$\u3002\n\n\u5f53\u7136\u540c\u65f6\u8981\u628a $x$ \u7684\u6743\u548c\u7d2f\u52a0\u5230 $y$ \u5934\u4e0a\u3002\n\n\u8003\u8651\u61d2\u6807\u8bb0\u4e0b\u4f20\u3002\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e2a $x\\to y$ \u7684\u53d8\u6362\uff0c\u7136\u540e\u4fee\u6539\uff1f\u6709\u95ee\u9898\u3002\n\n> \u6bd4\u5982 $1008$\uff0c\u5148\u6709\u4e00\u6b21 $1\\to2$\uff0c\u518d\u6709\u4e00\u6b21 $0\\to1$\u3002  \n> \u6700\u7ec8\u6709 $tag_0=1,tag_1=2$\u3002  \n> \u76f4\u63a5\u66b4\u529b\u6539\u6240\u6709 $i\\to tag_i$\uff0c\u8fd9\u65f6 $0$ \u4f1a\u53d8\u6210 $2$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5728\u61d2\u6807\u8bb0\u4e0b\u4f20\u524d\uff0c\u5148\u5907\u4efd\u5f53\u524d\u7684 $tag$ \u4ee5\u53ca\u6743\u548c\u3002\n\n\u7136\u540e\u61d2\u6807\u8bb0\u4e0b\u4f20\u7684\u90e8\u5206\u76f8\u6bd4\u66b4\u529b\u6539 $i\\to tag_i$ \u7565\u6709\u53d8\u5316\u3002\n\n```cpp\nusing ll = long long;\n\n#define rep(i,a,b) for(rg int i = (a);i <= (b);++i)\n#define rg register\n#define il inline\n\nconst int N = 1e5 + 5,S = N << 2;\n\nint n,m;\n\nll T[10][S],tmp[2][10];\nchar tg[10][S],old[2][10];\n\n#define lc (i << 1)\n#define rc (lc | 1)\n#define mid ((L + R) >> 1)\n\n#define ls lc,L,mid\n#define rs rc,mid + 1,R\n#define id rg int i = 1,rg int L = 1,rg int R = n\n\nil void psu(int i){\n\trep(d,0,9) T[d][i] = T[d][lc] + T[d][rc];\n}\n\nil void psd(rg int i){\n\trep(d,0,9){\n\t\ttmp[0][d] = T[d][lc];\n\t\ttmp[1][d] = T[d][rc];\n\t\told[0][d] = tg[d][lc];\n\t\told[1][d] = tg[d][rc];\n\t}\n\trep(d,0,9) if(tg[d][i] != d){\n\t\tint x = d,y = tg[d][i];\n\t\tT[y][lc] += tmp[0][x]; T[x][lc] -= tmp[0][x];\n\t\trep(d,0,9) if(old[0][d] == x) tg[d][lc] = y;\n\t\tT[y][rc] += tmp[1][x]; T[x][rc] -= tmp[1][x];\n\t\trep(d,0,9) if(old[1][d] == x) tg[d][rc] = y;\n\t\ttg[d][i] = d;\n\t}\n}\n\nil void build(id){\n\trep(d,0,9) tg[d][i] = d;\n\tif(L == R){\n\t\tint x = read(),cur = 1;\n\t\twhile(x){\n\t\t\tT[x % 10][i] += cur;\n\t\t\tx /= 10; cur *= 10;\n\t\t}\n\t\treturn;\n\t}\n\tbuild(ls); build(rs); psu(i);\n}\n\nil void upd(rg int l,rg int r,rg int x,rg int y,id){\n\tif(l <= L && R <= r){\n\t\tT[y][i] += T[x][i]; T[x][i] = 0;\n\t\trep(d,0,9) if(tg[d][i] == x) tg[d][i] = y;\n\t\treturn;\n\t}\n\tpsd(i);\n\tif(l <= mid) upd(l,r,x,y,ls);\n\tif(r > mid) upd(l,r,x,y,rs);\n\tpsu(i);\n}\n\nil ll qry(rg int l,rg int r,id){\n\tif(l <= L && R <= r){\n\t\tll res = 0;\n\t\trep(d,0,9) res += T[d][i] * d;\n\t\treturn res;\n\t}\n\tpsd(i);\n\treturn (l <= mid ? qry(l,r,ls) : 0LL) + (r > mid ? qry(l,r,rs) : 0LL);\n}\n\nint main(){\n\tn = read(),m = read();\n\tbuild();\n\twhile(m--){\n\t\tint op = read(),l = read(),r = read();\n\t\tif(op == 2) printf(\"%lld\\n\",qry(l,r));\n\t\telse { int x = read(),y = read(); if(x != y) upd(l,r,x,y); }\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1660740995,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF794F \u62c6\u4f4d+\u7ebf\u6bb5\u6811"
    },
    {
        "content": "\u5b9a\u4e49\u4e00\u4e2a\u6570x\u5bf9\u4e8e\u6570\u5b57y\u7684\u6743\u662fx\u6240\u6709\u4e3ay\u7684\u6570\u4f4d\u6743\u91cd\u76f8\u52a0\u3002\u4f8b\u59829199\u5bf9\u4e8e9\u7684\u6743\u662f1011.\n\n\u6211\u4eec\u53ef\u4ee5\u5bf90~9\u5206\u522b\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4[l,r]\u533a\u95f4\u4e0a\u6240\u6709\u6570\u5bf9\u8fd9\u4e2a\u6570\u5b57\u6743\u7684\u548c\u3002\u67e5\u8be2\u65f6\u53ea\u8981\u628a[l,r]\u4e0a\u6240\u6709\u6570\u5bf9\u67d0\u6570\u5b57\u7684\u6743\u4e4b\u548c\u4e58\u4ee5\u8fd9\u4e2a\u6570\u5b57\u7684\u5927\u5c0f\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0b\u4f20\u6807\u8bb0\u65f6\uff0c\u8981\u5148\u5bf9\u5b50\u8282\u70b9\u4f5c\u7528\uff0c\u518d\u5bf9\u7236\u8282\u70b9\u4f5c\u7528\u3002\n\n\u6700\u7ec8\u590d\u6742\u5ea6\u4e3aO(nlogn*maxm^2)\uff0c\u5373O(100nlogn)\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\n\nconst int N=1e5+5;\nconst int T=5e5+5;\nint n,q,a[N],tchg[10];\nlong long tsum[10];\n\nstruct Segment_Tree\n{\n\tint chg[T][10];\n\tlong long sum[T][10];\n\t\n\tvoid calc(int pos,int rt)\n\t{\n\t\tint tmp=a[pos],now=1;\n\t\twhile(tmp)\n\t\t{\n\t\t\tsum[rt][tmp%10]+=now;\n\t\t\tnow*=10,tmp/=10;\n\t\t}\n\t}\n\tvoid prework(int rt)\n\t{\n\t\tint i;\n\t\tfor(i=0;i<10;++i) chg[rt][i]=i;\n\t}\n\t\n\tvoid cc(int sn,int rt)\n\t{\n\t\tint i,j;\n\t\tfor(i=0;i<10;++i)\n\t\t\ttchg[i]=chg[sn][i],tsum[i]=sum[sn][i];\n\t\tfor(i=0;i<10;++i)\n\t\t\tif(chg[rt][i]!=i)\n\t\t\t{\n\t\t\t\tfor(j=0;j<10;++j)\n\t\t\t\t\tif(chg[sn][j]==i)\n\t\t\t\t\t\ttchg[j]=chg[rt][i];\n\t\t\t\ttsum[chg[rt][i]]+=sum[sn][i];\n\t\t\t\ttsum[i]-=sum[sn][i];\n\t\t\t}\n\t\tfor(i=0;i<10;++i)\n\t\t\tchg[sn][i]=tchg[i],sum[sn][i]=tsum[i];\n\t}\n\tvoid CC(int rt,int x,int y)\n\t{\n\t\tint i;\n\t\tfor(i=0;i<10;++i)\n\t\t\tif(chg[rt][i]==x)\n\t\t\t{\n\t\t\t\tsum[rt][y]+=sum[rt][x];\n\t\t\t\tsum[rt][x]=0;\n\t\t\t\tchg[rt][i]=y;\n\t\t\t}\n\t}\n\t\t\t\t\n\tvoid merge(int lsn,int rsn,int rt)\n\t{\n\t\tint i;\n\t\tfor(i=0;i<10;++i)\n\t\t\tsum[rt][i]=sum[lsn][i]+sum[rsn][i];\n\t}\n\t\n\tvoid push_down(int rt)\n\t{\n\t\tint i,lsn=rt<<1,rsn=rt<<1|1;\n\t\tcc(lsn,rt),cc(rsn,rt);\n\t\t\n\t\tfor(i=0;i<10;++i) chg[rt][i]=i;\n\t}\n\t\n\tvoid build(int l,int r,int rt)\n\t{\n\t\tprework(rt);\n\t\tif(l==r)\n\t\t{\n\t\t\tcalc(l,rt);\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(l,mid,rt<<1),build(mid+1,r,rt<<1|1);\n\t\tmerge(rt<<1,rt<<1|1,rt);\n\t}\n\t\n\tvoid update(int l,int r,int rt,int L,int R,int x,int y)\n\t{\n\t\tif(L<=l&&r<=R)\n\t\t{\n\t\t\tCC(rt,x,y);\n\t\t\treturn;\n\t\t}\n\t\tpush_down(rt);\n\t\tint mid=(l+r)>>1;\n\t\tif(L<=mid) update(l,mid,rt<<1,L,R,x,y);\n\t\tif(R>mid) update(mid+1,r,rt<<1|1,L,R,x,y);\n\t\tmerge(rt<<1,rt<<1|1,rt);\n\t}\n\t\n\tlong long qq(int rt)\n\t{\n\t\tint i;\n\t\tlong long ret=0;\n\t\tfor(i=1;i<10;++i) ret+=sum[rt][i]*i;\n\t\treturn ret;\n\t}\n\t\n\tlong long query(int l,int r,int rt,int L,int R)\n\t{\n\t\tif(L<=l&&r<=R) return qq(rt);\n\t\tlong long ret=0;\n\t\tint mid=(l+r)>>1;\n\t\tpush_down(rt);\n\t\tif(L<=mid) ret+=query(l,mid,rt<<1,L,R);\n\t\tif(R>mid) ret+=query(mid+1,r,rt<<1|1,L,R);\n\t\tmerge(rt<<1,rt<<1|1,rt);\n\t\treturn ret;\n\t}\n};\nSegment_Tree SS;\n\nvoid init()\n{\n\tint i,op,l,r,x,y;\n\tscanf(\"%d%d\",&n,&q);\n\tfor(i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n\tSS.build(1,n,1);\n\twhile(q--)\n\t{\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1)\n\t\t{\n\t\t\tscanf(\"%d%d%d%d\",&l,&r,&x,&y);\n\t\t\tif(x==y) continue;\n\t\t\tSS.update(1,n,1,l,r,x,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tprintf(\"%lld\\n\",SS.query(1,n,1,l,r));\n\t\t}\n\t}\n}\n\nint main()\n{\n\tinit();\n\treturn 0;\n}\n\n```",
        "postTime": 1543932668,
        "uid": 31435,
        "name": "hwk0518",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF794F \u3010Leha and security system\u3011"
    },
    {
        "content": "\n\u4e00\u9053\u795e\u5947\u7684\u7ebf\u6bb5\u6811...\n\n\u9898\u76ee\u8981\u6c42\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u600e\u4e48\u7ef4\u62a4\u6bcf\u4e00\u4f4d\u6570\u5b57\u5462\uff1f\n\n\u663e\u7136\uff0c\u6211\u4eec\u5c06\u6bcf\u4f4d\u62c6\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57\u7ef4\u62a4\u4ed6\u7684\u8d21\u732e\uff0c\u5982 $1221123$ \u4e2d $1$ \u7684\u8d21\u732e\u4e3a $1001100$ , $2$ \u7684\u8d21\u732e\u4e3a $110010$\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u9700\u8981$10$\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4$0-9$\u7684\u8d21\u732e\u3002\n\n\u4fee\u6539\u5f88\u7b80\u5355\uff0c\u5982\u679c\u5c06$x$\u6539\u4e3a$y$\uff0c\u6ce8\u610f\u533a\u95f4\u6709\u61d2\u6807\u8bb0\u65f6\u8981\u6bd4\u8f83\u61d2\u6807\u8bb0\uff08\u56e0\u4e3a\u8be5\u533a\u95f4\u7684\u6570\u5b57\u5728\u4e0b\u4f20\u65f6\u4f1a\u53d8\uff09\uff0c\u5c06\u533a\u95f4\u61d2\u6807\u8bb0\u4e3a$x$\u7684\u6539\u4e3a$y$\uff0c\u7edf\u8ba1\u8d21\u732e\uff0c\u540c\u65f6\u66f4\u6539\u61d2\u6807\u8bb0\u3002\n\n\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u5c06\u533a\u95f4\u6570\u5b57\u7684\u8d21\u732e\u4e58\u4e0a\u8be5\u4f4d\u7684\u6570\u5b57\uff0c\u6c42\u548c\u5373\u53ef\u3002\n\n\u6700\u5173\u952e\u7684\u662f\u61d2\u6807\u8bb0\u4e0b\u4f20\uff0c\u5c06\u5b50\u6811\u61d2\u6807\u8bb0\u4e0d\u540c\u7684\u52a0\u5165\u5230\u8d21\u732e\u91cc\uff0c\u518d\u5c06\u5b50\u6811\u61d2\u6807\u8bb0\u4fee\u6539\uff0c\u6ce8\u610f\u6539\u53d8\u540e\u53ef\u80fd\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u5efa\u8bae\u5148\u7528\u53d8\u91cf\u5b58\u50a8\u518d\u8d4b\u503c\u3002\n\n```cpp\n#include <cstdio>\n#define ls x << 1\n#define rs x << 1 | 1\n\nconst int MAXN = 100000;\nint n , k , a[ MAXN + 5 ];\nstruct Point{\n\tint l , r , Lazy;\n    long long sum;\n};\nstruct Segment_Tree{\n\tPoint Tree[ 10 ][ 4 * MAXN + 5 ];\n\t\n\tvoid Pushup( int x ) {\n\t\tfor( int i = 0 ; i <= 9 ; i ++ )\n\t\t\tTree[ i ][ x ].sum = Tree[ i ][ ls ].sum + Tree[ i ][ rs ].sum;\n\t}\n\tvoid Pushdown( int x ) {\n\t\tint lazy[ 15 ];\n        long long sum[ 15 ];\n\t\t\n\t\tfor( int i = 0 ; i <= 9 ; i ++ )\n\t\t\tlazy[ i ] = Tree[ i ][ ls ].Lazy , sum[ i ] = Tree[ i ][ ls ].sum;\n\t\tfor( int i = 0 ; i <= 9 ; i ++ ) {\n\t\t\tif( Tree[ i ][ x ].Lazy == i ) continue;\n\t\t\tfor( int j = 0 ; j <= 9 ; j ++ )\n\t\t\t\tif( Tree[ j ][ ls ].Lazy == i ) lazy[ j ] = Tree[ i ][ x ].Lazy;\n\t\t\tsum[ Tree[ i ][ x ].Lazy ] += Tree[ i ][ ls ].sum;\n\t\t\tsum[ i ] -= Tree[ i ][ ls ].sum;\n\t\t}\n\t\tfor( int i = 0 ; i <= 9 ; i ++ )\n\t\t\tTree[ i ][ ls ].Lazy = lazy[ i ] , Tree[ i ][ ls ].sum = sum[ i ];\n\t\t\n\t\tfor( int i = 0 ; i <= 9 ; i ++ )\n\t\t\tlazy[ i ] = Tree[ i ][ rs ].Lazy , sum[ i ] = Tree[ i ][ rs ].sum;\n\t\tfor( int i = 0 ; i <= 9 ; i ++ ) {\n\t\t\tif( Tree[ i ][ x ].Lazy == i ) continue;\n\t\t\tfor( int j = 0 ; j <= 9 ; j ++ )\n\t\t\t\tif( Tree[ j ][ rs ].Lazy == i ) lazy[ j ] = Tree[ i ][ x ].Lazy;\n\t\t\tsum[ Tree[ i ][ x ].Lazy ] += Tree[ i ][ rs ].sum;\n\t\t\tsum[ i ] -= Tree[ i ][ rs ].sum;\n\t\t}\n\t\tfor( int i = 0 ; i <= 9 ; i ++ )\n\t\t\tTree[ i ][ rs ].Lazy = lazy[ i ] , Tree[ i ][ rs ].sum = sum[ i ];\n\t\t\n\t\tfor( int i = 0 ; i <= 9 ; i ++ )\n\t\t\tTree[ i ][ x ].Lazy = i;\n\t}\n\t\n\tvoid Build( int x , int l , int r ) {\n\t\tfor( int i = 0 ; i <= 9 ; i ++ ) {\n\t\t\tTree[ i ][ x ].l = l , Tree[ i ][ x ].r = r;\n\t\t\tTree[ i ][ x ].sum = 0 , Tree[ i ][ x ].Lazy = i;\n\t\t}\n\t\tif( l == r ) {\n\t\t\tint t = 1;\n\t\t\twhile( a[ l ] ) {\n\t\t\t\tTree[ a[ l ] % 10 ][ x ].sum += t;\n\t\t\t\ta[ l ] /= 10 , t *= 10;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tint Mid = ( l + r ) / 2;\n\t\tBuild( ls , l , Mid );\n\t\tBuild( rs , Mid + 1 , r );\n\t\tPushup( x );\n\t}\n\tvoid Insert( int x , int l , int r , int dex1 , int dex2 ) {\n\t\tif( r < Tree[ 0 ][ x ].l || Tree[ 0 ][ x ].r < l )\n\t\t\treturn;\n\t\tif( l <= Tree[ 0 ][ x ].l && Tree[ 0 ][ x ].r <= r ) {\n\t\t\tfor( int i = 0 ; i <= 9 ; i ++ )\t\n\t\t\t\tif( Tree[ i ][ x ].Lazy == dex1 ) {\n\t\t\t\t\tTree[ dex2 ][ x ].sum += Tree[ dex1 ][ x ].sum;\n\t\t\t\t\tTree[ dex1 ][ x ].sum = 0;\n\t\t\t\t\tTree[ i ][ x ].Lazy = dex2;\n\t\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tPushdown( x );\n\t\tInsert( ls , l , r , dex1 , dex2 );\n\t\tInsert( rs , l , r , dex1 , dex2 );\n\t\tPushup( x ); \n\t}\n\tlong long Find( int x , int l , int r ) {\n\t\tif( r < Tree[ 0 ][ x ].l || Tree[ 0 ][ x ].r < l )\n\t\t\treturn 0;\n\t\tif( l <= Tree[ 0 ][ x ].l && Tree[ 0 ][ x ].r <= r ) {\n\t\t\tlong long Ans = 0;\n\t\t\tfor( int i = 0 ; i <= 9 ; i ++ )\n\t\t\t\tAns += Tree[ i ][ x ].sum * i;\n\t\t\treturn Ans;\n\t\t}\n\t\tPushdown( x );\n\t\treturn Find( ls , l ,r ) + Find( rs , l , r );\n\t}\n}Tree;\n\nint op , x , y , l , r;\nint main( ) {\n\tscanf(\"%d %d\",&n,&k);\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t\tscanf(\"%d\",&a[ i ]);\n\tTree.Build( 1 , 1 , n );\n\t\n\tfor( int i = 1 ; i <= k ; i ++ ) {\n\t\tscanf(\"%d\",&op);\n\t\tif( op == 1 ) {\n\t\t\tscanf(\"%d %d %d %d\",&l,&r,&x,&y);\n\t\t\tif( x == y ) continue;\n\t\t\tTree.Insert( 1 , l , r , x , y );\n\t\t}\n\t\tif( op == 2 ) {\n\t\t\tscanf(\"%d %d\",&l,&r);\n\t\t\tprintf(\"%lld\\n\",Tree.Find( 1 , l , r ));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1570597460,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF794F \u3010Leha and security system\u3011"
    },
    {
        "content": "\u7b80\u5355\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u8003\u5bdf\u5bf9 lazytag \u7684\u7406\u89e3\u3002\n\n\u770b\u5230\u4fee\u6539\u662f\u5728 $0\\sim 9$ \u4e4b\u95f4\u8f6c\u6362\uff0c\u5bb9\u6613\u60f3\u5230\u628a $0\\sim 9$ \u5206\u5f00\u7ef4\u62a4\u3002\n\n\u7136\u540e\u53c8\u53d1\u73b0\u540c\u4e00\u4e2a\u6570\u4e0a \u4e0d\u540c\u4f4d\u7f6e\u4e14\u6570\u503c\u76f8\u540c \u7684\u6570 \u7684\u672c\u8d28\u6ca1\u6709\u5dee\u522b\uff08\u5982 $114514$ \u7684\u4e24\u4e2a $4$ \u548c\u4e24\u4e2a $1$\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5176\u653e\u5230\u4e00\u68f5\u7ebf\u6bb5\u6811\u91cc\u7ef4\u62a4\uff0c\u53ea\u9700\u8981\u5728\u6570\u503c\u4e0a\u8fdb\u884c\u533a\u5206\u5373\u53ef\u3002\n\n\u6240\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6bcf\u4e2a\u6570\u503c\u7684\u548c\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8f6c\u79fb\uff0c\u6570\u503c\u4e3a $0$ \u65f6\uff0c\u8981\u6309\u7167\u6570\u503c\u4e3a $1$ \u7684\u548c\u8fdb\u884c\u8ba1\u7b97\uff0c\u7edf\u8ba1\u7b54\u6848\u65f6\u4e0d\u8003\u8651\u6570\u503c\u4e3a $0$ \u7684\u5373\u53ef\u3002\n\n\u4ee5\u4e0a\u5185\u5bb9\u90fd\u662f\u5e73\u51e1\u7684\u7ebf\u6bb5\u6811\u90e8\u5206\u3002\u63a5\u4e0b\u6765\u8003\u8651\u6807\u8bb0\u4e0b\u4f20\u3002\n\n\u663e\u7136\u61d2\u6807\u8bb0\u7684\u542b\u4e49\u4e3a\uff1a\n\n$lz_{i,j}$\uff1a\u7b2c $i$ \u4e2a\u8282\u70b9\uff0c\u6570\u503c\u4e3a $j$ \u7684\u6570\u5168\u90e8\u53d8\u4e3a $lz_{i,j}$\u3002\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u61d2\u6807\u8bb0\u65f6\u4e0d\u5b58\u5728\u5d4c\u5957\u5173\u7cfb\u7684\u3002\n\n\u4e8e\u662f\u5bb9\u6613\u5f97\u5230\u6253\u6807\u8bb0\u7684\u90e8\u5206\u4ee3\u7801\uff1a\n\n```cpp\nif(l>=L&&r<=R){\n\tdata[i][y]+=data[i][x]/max(x,1)*max(y,1),data[i][x]=0;\n\t//\u8fd9\u91cc\u53d6max\u662f\u5bf9\u6570\u503c\u4e3a0\u7684\u7279\u6b8a\u5904\u7406\t\t\n\tfor(int j=0;j<10;j++)\n\t\tif(f[i][j]==x)f[i][j]=y;\n   //\u5c06\u6240\u6709\u6307\u5411x\u7684\u6307\u5411y\n\treturn ;\n}\n```\n\n\u663e\u7136\uff0c\u8fd9\u6837\u5f97\u5230\u7684 $lz$ \u6570\u7ec4\u663e\u7136\u4e0d\u5b58\u5728\u5d4c\u5957\u5173\u7cfb\u3002\n\n\u4f46\u4e5f\u4ec5\u9650\u4e8e\u8fd9\u4e00\u5c42\u3002\n\n\u8003\u8651\u61d2\u6807\u8bb0\u7684\u4e00\u4e2a\u6027\u8d28\uff1a**\u6807\u8bb0\u65f6\u5b58\u5728\u987a\u5e8f\uff0c\u4e0b\u4f20\u65f6\u6ca1\u6709\u987a\u5e8f**\u3002\n\n\uff08\u6bd4\u5982\u666e\u901a\u7684\u52a0\u6cd5\u7ebf\u6bb5\u6811\uff0c\u6253\u6807\u8bb0\u7684\u65f6\u5019\u53ef\u4ee5\u5206\u6e05\u5148\u540e\uff0c\u4f46\u5728\u4e0b\u4f20\u65f6\u53ea\u6709\u4e00\u4e2a\u503c $lztag$\uff0c\u65e0\u6cd5\u8fdb\u884c\u5148\u540e\u533a\u5206\uff09\n\n```\n3 3\n1 1 1\n1 1 3 5 9\n1 1 3 1 5\n2 1 1\n```\n\n\u5728\u4e0a\u8ff0\u6837\u4f8b\u4e2d\uff0c\u6253\u6807\u8bb0\u65f6\u663e\u7136\u77e5\u9053\u64cd\u4f5c\u4e00\u5728\u64cd\u4f5c\u4e8c\u4e4b\u524d\uff0c\u4f46\u4e0b\u4f20\u65f6\u5219\u4f1a\u5148\u4e0b\u4f20\u64cd\u4f5c\u4e8c\u3002\n\n\u90a3\u4e48\u8bb0\u5f55\u4e0b\u6807\u8bb0\u7684\u987a\u5e8f\uff0c\u5f3a\u5236\u6309\u987a\u5e8f\u5148\u4f20\u53ef\u4ee5\u5417\uff1f\u7b54\u6848\u4e5f\u662f\u5426\u5b9a\u7684\u3002\n\n\u56e0\u4e3a\u8fd9\u4e00\u9898\u6709\u4e00\u4e2a\u66f4\u7279\u6b8a\u7684\u6027\u8d28\uff1a**\u513f\u5b50\u5c42\u7684\u72b6\u6001\u4f1a\u5f71\u54cd\u7236\u4eb2\u5c42\u7684\u4e0b\u4f20\u3002**\n\n\u56e0\u4e3a\u5728\u4e0b\u4f20 $lz$ \u7684\u65f6\u5019\uff0c\u4e5f\u8981\u50cf\u6253\u6807\u8bb0\u4e00\u6837\uff0c\u5c06\u6240\u6709\u6307\u5411 $x$ \u7684\u6307\u5411 $y$\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u591a\u6b21\u6539\u53d8\u6307\u5411\uff0c\u800c\u8fd9\u663e\u7136\u4e0e\u4e0b\u4f20\u987a\u5e8f\u6709\u5173\u3002\n\n\u8003\u8651\u5c06\u4e0b\u4e00\u5c42\u7684\u503c\u63d0\u524d\u5b58\u50a8\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u8fd9\u6837\u4e0b\u4f20\u7684\u987a\u5e8f\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5230\u6700\u7ec8\u503c\u4e86\u3002\n\n`pushdown` \u51fd\u6570\u5982\u4e0b\uff1a\n\n```cpp\n//\u6ce8:\u4ee3\u7801\u4e2d\u7684f\u5373lz\nll da1[10],da2[10];\nint lz1[10],lz2[10];\nil void pushdown(int i){\n\tfor(int j=0;j<10;j++){\n\t\tda1[j]=data[i<<1][j],da2[j]=data[i<<1|1][j];\n\t\tlz1[j]=f[i<<1][j],lz2[j]=f[i<<1|1][j];\n\t}\n\tfor(int x=0,y;x<10;x++)\n\tif(f[i][x]^x){\n\t\ty=f[i][x],f[i][x]=x;\n\t\tdata[i<<1][y]+=da1[x]/max(x,1)*max(y,1),data[i<<1][x]-=da1[x];\n\t\tdata[i<<1|1][y]+=da2[x]/max(x,1)*max(y,1),data[i<<1|1][x]-=da2[x];\n\t\tfor(int j=0;j<10;j++){\n\t\t\tif(lz1[j]==x)f[i<<1][j]=y;\n\t\t\tif(lz2[j]==x)f[i<<1|1][j]=y;\n\t\t}\n\t}\n}\n```\n\n**\u5bc4\u5b58\u6570\u7ec4\u8bb0\u5f97\u5f00 longlong\u3002**\n\n\u987a\u4fbf\u4e00\u63d0\uff0c\u5982\u679c\u786c\u8981\u6309\u7167\u987a\u5e8f\u4e0b\u4f20\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f20 data \u6570\u7ec4\u65f6\u6309\u7167\u7236\u4eb2\u5c42 $f$ \u7684\u62d3\u6251\u5e8f\u4e0b\u4f20\uff0c\u4f20 $f$ \u6570\u7ec4\u65f6\u6309\u7167\u5bf9\u5e94\u513f\u5b50\u5c42 $f$ \u7684\u62d3\u6251\u5e8f\u4e0b\u4f20\u3002\n\n\u4e0d\u8fc7\u8c01\u60f3\u5728\u7ebf\u6bb5\u6811\u91cc\u518d\u5957\u4e00\u4e2a\u62d3\u6251\u5462\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n//#pragma GCC optimize(3)\n//#pragma GCC optimize(2)\n#define il inline\n#define ll long long\nusing namespace std;\nconst int maxn=100010;\nconst int N=maxn<<2;\nil int read(){\n\tint x=0;\n\tchar c=getchar();\n\tfor(;!(c>='0'&&c<='9');c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\treturn x;\n}\nint f[N][10]; \nint a[maxn],n,m;\nll data[N][10];\nvoid build(int i,int l,int r){\n\tif(l==r||l>r){\n\t\tif(l==r){\n\t\t\tfor(int x=a[l],cnt=1;x;x/=10)\n\t\t\t\tdata[i][x%10]+=cnt*max(x%10,1),cnt=(cnt<<1)+(cnt<<3);\n\t\t\tif(!a[l])data[i][0]=1;\n\t\t}\n\t\tfor(int j=0;j<10;j++) f[i][j]=j;\n\t\treturn ;\n\t}\n\tif(l>r) return ;\n\tint mid=l+r>>1;\n\tbuild(i<<1,l,mid),build(i<<1|1,mid+1,r);\n\tfor(int j=0;j<10;j++) data[i][j]=data[i<<1][j]+data[i<<1|1][j],f[i][j]=j; \n}\nll da1[10],da2[10];\nint lz1[10],lz2[10];\nil void pushdown(int i){\n\tfor(int j=0;j<10;j++){\n\t\tda1[j]=data[i<<1][j],da2[j]=data[i<<1|1][j];\n\t\tlz1[j]=f[i<<1][j],lz2[j]=f[i<<1|1][j];\n\t}\n\tfor(int x=0,y;x<10;x++)\n\tif(f[i][x]^x){\n\t\ty=f[i][x],f[i][x]=x;\n\t\tdata[i<<1][y]+=da1[x]/max(x,1)*max(y,1),data[i<<1][x]-=da1[x];\n\t\tdata[i<<1|1][y]+=da2[x]/max(x,1)*max(y,1),data[i<<1|1][x]-=da2[x];\n\t\tfor(int j=0;j<10;j++){\n\t\t\tif(lz1[j]==x)f[i<<1][j]=y;\n\t\t\tif(lz2[j]==x)f[i<<1|1][j]=y;\n\t\t}\n\t}\n}\nvoid Modify(int i,int l,int r,int L,int R,int x,int y){\n\tif(x==y) return ;\n\tif(l>=L&&r<=R){\n\t\tdata[i][y]+=data[i][x]/max(x,1)*max(y,1),data[i][x]=0;\n\t\tfor(int j=0;j<10;j++)\n\t\t\tif(f[i][j]==x)f[i][j]=y;\n\t\treturn ;\n\t}\n\tpushdown(i);\n\tint mid=l+r>>1;\n\tif(L<=mid) Modify(i<<1,l,mid,L,R,x,y);\n\tif(R>mid) Modify(i<<1|1,mid+1,r,L,R,x,y);\n\tfor(int j=0;j<10;j++) data[i][j]=data[i<<1][j]+data[i<<1|1][j];\n}\nll Query(int i,int l,int r,int L,int R){\n\tif(l>=L&&r<=R){\n\t\tll sum=0;\n\t\tfor(int j=1;j<10;j++) sum+=data[i][j];\n\t\treturn sum;\n\t}\n\tif(l>R||r<L) return 0;\n\tpushdown(i);\n\tint mid=l+r>>1;\n\treturn Query(i<<1,l,mid,L,R)+Query(i<<1|1,mid+1,r,L,R);\n}\nint main(){\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tint opt,l,r,x,y;\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tbuild(1,1,n);\n\twhile(m--){\n\t\topt=read(),l=read(),r=read();\n\t\tif(opt==1)\n\t\t\tx=read(),y=read(),Modify(1,1,n,l,r,x,y);\n\t\telse printf(\"%lld\\n\",Query(1,1,n,l,r));\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1654870991,
        "uid": 288716,
        "name": "lzqy_",
        "ccfLevel": 7,
        "title": "CF794F Leha and security system \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/CF794F)\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u8fd9\u9053\u9898\uff0c\u8003\u8651\u76f4\u63a5 \u5c06\u6bcf\u4e00\u4f4d\u5206\u5f00\u6765\u8003\u8651\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4f4d\u4e4b\u95f4\u4e92\u4e0d\u5e72\u6270\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~8848\u949b\u91d1\u624b\u673a\uff0c\u4e24\u4e2a\u7a7a\u95f4\uff0c\u5206\u522b\u5b58\u50a8\uff0c\u4e92\u76f8\u5e72\u6270~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u4e0d\u96be\u60f3\u5230\u7528\u4e00\u4e2a$cnt$\u5b58\u50a8$0-9$\u7684\u6570\u5728\u67d0\u4e00\u4f4d\u4e0a\u7684\u4e2a\u6570\u3002\u8fd9\u6837\u67e5\u8be2\u5c31\u89e3\u51b3\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u73b0\u5728\u8003\u8651\u4fee\u6539\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0b\u9762\u8003\u8651$lazy$\u7684\u6253\u6cd5\u3002\u8003\u8651\u7528\u4e00\u4e2a\u6570\u7ec4$l$\u8bb0\u5f55\u3002$l[i]$\u8868\u793a\u5f53\u524d\u533a\u95f4\u4e2d\u6240\u6709$i$\u90fd\u4f1a\u53d8\u6210$l[i]$\u3002\u8fd9\u6837$lazy$\u4e0b\u4f20\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u6539$l[i]$\u4e86\uff08\u7c7b\u4f3c\u4e8e\u63a5\u94fe\u8868\uff09\uff08\u5f53\u7136$cnt$\u4e5f\u8981\u6539\uff09\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u4ea4\u4e00\u4e0b\u8fd9\u4e2a$10$\u68f5\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0......$T$\u98de\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5176\u5b9e\u672c\u6765\u53ef\u4ee5\u628a$10$\u68f5\u7ebf\u6bb5\u6811\u5408\u5728\u4e00\u8d77\u53d8\u6210\u4e00\u68f5\u7684\uff0c\u53ea\u4e0d\u8fc7\u4e0a\u9762\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u8fd9\u6837\u8bf4\u3002\u8fd9\u6837$cnt$\u548c$l$\u7684\u6539\u6cd5\u548c\u610f\u4e49\u662f\u4e00\u6837\u7684\u3002\u6240\u4ee5\u4ea4\u4e0a\u53bb\u4e00\u68f5\u6811\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5$A$\u4e86\u3002\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n\n#define isLeaf( b ) ( segTree[b].l == segTree[b].r )\n\ntypedef long long LL;\n#define int LL\n\nconst int MAXN = 1e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nstruct segmentTreeNode\n{\n\tint l, r;\n\tLL cnt[10];\n\tint lazy[10];\n}segTree[MAXN << 2];\n\nint a[MAXN];\nint p[10];\nint N, Q;\n\nvoid normalize( const int now )\n{\n\tLL cnt1[10], cnt2[10];\n\tint ns1[10], ns2[10];\n\tfor( int i = 0 ; i < 10 ; i ++ ) ns1[i] = segTree[now << 1].lazy[i], ns2[i] = segTree[now << 1 | 1].lazy[i];\n\tfor( int i = 0 ; i < 10 ; i ++ ) cnt1[i] = segTree[now << 1].cnt[i], cnt2[i] = segTree[now << 1 | 1].cnt[i];\n\tfor( int i = 0 ; i < 10 ; i ++ )\n\t{\n\t\tif( segTree[now].lazy[i] ^ i )\n\t\t{\n\t\t\tfor( int j = 0 ; j < 10 ; j ++ )\n\t\t\t{\n\t\t\t\tif( segTree[now << 1].lazy[j] == i ) ns1[j] = segTree[now].lazy[i];\n\t\t\t\tif( segTree[now << 1 | 1].lazy[j] == i ) ns2[j] = segTree[now].lazy[i];\n\t\t\t}\n\t\t\tcnt1[segTree[now].lazy[i]] += segTree[now << 1].cnt[i];\n\t\t\tcnt2[segTree[now].lazy[i]] += segTree[now << 1 | 1].cnt[i];\n\t\t\tcnt1[i] -= segTree[now << 1].cnt[i];\n\t\t\tcnt2[i] -= segTree[now << 1 | 1].cnt[i];\n\t\t}\n\t\tsegTree[now].lazy[i] = i;\n\t}\n\tfor( int i = 0 ; i < 10 ; i ++ )\n\t\tsegTree[now << 1].lazy[i] = ns1[i], segTree[now << 1 | 1].lazy[i] = ns2[i],\n\t\tsegTree[now << 1].cnt[i] = cnt1[i], segTree[now << 1 | 1].cnt[i] = cnt2[i];\n}\n\nvoid upt( const int now )\n{\n\t#ifdef _DEBUG\n\tsegmentTreeNode &node2 = segTree[now];\n\t#endif\n\tfor( int i = 0 ; i < 10 ; i ++ ) \n\t\tsegTree[now].cnt[i] = segTree[now << 1].cnt[i] + segTree[now << 1 | 1].cnt[i];\n}\n\nvoid build( const int now, const int left, const int right )\n{\n\tsegTree[now].l = left, segTree[now].r = right;\n\tfor( int i = 0 ; i < 10 ; i ++ ) segTree[now].lazy[i] = i;\n\tif( isLeaf( now ) )\n\t{\n\t\tfor( int i = 0 ; i < 10 && p[i] <= a[left] ; i ++ )\n\t\t\tsegTree[now].cnt[( a[left] / p[i] ) % 10] += p[i];\n\t\treturn ;\n\t}\n\tbuild( now << 1, left, ( left + right ) >> 1 );\n\tbuild( now << 1 | 1, ( ( left + right ) >> 1 ) + 1, right );\n\tupt( now );\n}\n\nvoid update( const int now, const int segL, const int segR, const int sta, const int ed )\n{\n\t#ifdef _DEBUG\n\tsegmentTreeNode &node1 = segTree[now];\n\t#endif\n\tif( segR < segTree[now].l || segTree[now].r < segL ) return ;\n\tif( segL <= segTree[now].l && segTree[now].r <= segR )\n\t{\n\t\tif( sta == ed ) return ;\n\t\tsegTree[now].cnt[ed] += segTree[now].cnt[sta], segTree[now].cnt[sta] = 0;\n\t\tint tmp[10];\n\t\tfor( int i = 0 ; i < 10 ; i ++ ) tmp[i] = segTree[now].lazy[i];\n\t\tfor( int i = 0 ; i < 10 ; i ++ )\n\t\t\tif( segTree[now].lazy[i] == sta )\n\t\t\t\ttmp[i] = ed;\n\t\tfor( int i = 0 ; i < 10 ; i ++ )\n\t\t\tsegTree[now].lazy[i] = tmp[i];\n\t\treturn ;\n\t}\n\tif( isLeaf( now ) ) return ;\n\tnormalize( now );\n\tupdate( now << 1, segL, segR, sta, ed );\n\tupdate( now << 1 | 1, segL, segR, sta, ed );\n\tupt( now );\n}\n\nLL query( const int now, const int segL, const int segR )\n{\n\t#ifdef _DEBUG\n\tsegmentTreeNode &node3 = segTree[now];\n\t#endif\n\tif( segR < segTree[now].l || segTree[now].r < segL ) return 0;\n\tif( segL <= segTree[now].l && segTree[now].r <= segR )\n\t{\n\t\tLL tmp = 0;\n\t\tfor( int i = 0 ; i < 10 ; i ++ )\n\t\t\ttmp += 1ll * segTree[now].cnt[i] * i;\n\t\treturn tmp;\n\t}\n\tif( isLeaf( now ) ) return 0;\n\tnormalize( now );\n\tupt( now );\n\tLL tmp = query( now << 1, segL, segR );\n\treturn tmp + query( now << 1 | 1, segL, segR );\n}\n\nsigned main()\n{\n\tp[0] = 1;\n\tfor( int i = 1 ; i < 10 ; i ++ ) p[i] = p[i - 1] * 10;\n\tread( N ), read( Q );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tread( a[i] );\n\t}\n\tbuild( 1, 1, N );\n\tint opt, l, r, x, y;\n\tfor ( int i = 1 ; i <= Q ; i ++ )\n\t{\n\t\tread( opt ), read( l ), read( r );\n\t\tif( opt & 1 )\n\t\t{\n\t\t\tread( x ), read( y );\n\t\t\tupdate( 1, l, r, x, y );\n\t\t}\n\t\telse\n\t\t\twrite( query( 1, l, r ) ), putchar( '\\n' );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1570684054,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF794F] Leha and security system"
    }
]