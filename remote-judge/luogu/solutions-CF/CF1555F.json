[
    {
        "content": "\u573a\u4e0a\u83ab\u540d\u5176\u5999 $\\text{A}$ \u5199\u4e86\u4e00\u5e74\uff0c\u7136\u540e $\\text{D}$ \u770b\u9519\u4e86\uff0c\u5c31\u6ca1\u65f6\u95f4\u5199 $\\text{F}$ \u4e86\u3002\n\n\u6211\u4eec\u9996\u5148\u628a\u80fd\u6539\u53d8\u8fde\u901a\u6027\uff08\u5c31\u662f\u80fd\u8fde\u63a5\u4e24\u4e2a\u4e4b\u524d\u672a\u8fde\u63a5\u7684\u8fde\u901a\u5757\uff09\u7684\u8fb9\u79f0\u4f5c\u6811\u8fb9\uff0c\u6811\u8fb9\u663e\u7136\u4e00\u5b9a\u80fd\u591f\u52a0\u5165\n\n\u53ef\u4ee5\u53d1\u73b0\u4e00\u6761\u975e\u6811\u8fb9\u80fd\u52a0\u5165\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n1\u3001\u5b83\u8ddf\u6811\u8fb9\u7ec4\u6210\u7684\u73af\u6ee1\u8db3\u5f02\u6216\u548c\u4e3a $1$ \n\n2\u3001\u5b83\u4e0e\u6811\u8fb9\u7ec4\u6210\u7684\u73af\u4e0d\u8ddf\u4efb\u4f55\u4e00\u4e2a\u4e4b\u524d\u7684\u73af\u8fb9\u76f8\u4ea4\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e24\u4e2a\u5f02\u6216\u4e00\u4e0b\u5927\u73af\u5c31\u4e3a $0$ \u4e86\n\n\u4e5f\u5c31\u662f\u8981\u4fdd\u8bc1\u56fe\u662f\u4ed9\u4eba\u638c\uff0c\u4f46\u5f53\u7136\u8c8c\u4f3c\u505a\u8d77\u6765\u5e76\u4e0d\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u52a0\u5165\u975e\u6811\u8fb9\u5176\u5b9e\u5c31\u662f\u67e5\u8be2 $u->lca$ \u548c $v->lca$ \u7684\u8fb9\u96c6\u4e2d\u662f\u5426\u6709\u8fb9\u88ab\u8986\u76d6\u4e86\uff0c\u6ca1\u6709\u5c31\u80fd\u52a0\u5165\uff0c\u52a0\u5165\u540e\u5c31\u5c06\u8fd9\u4e9b\u8fb9\u5168\u90e8\u8986\u76d6\uff0c\u4e5f\u5c31\u662f\u8981\u505a\u52a8\u6001\u94fe\u8986\u76d6\u548c\u94fe\u67e5\u8be2\n\n$\\text{LCT}$ \u663e\u7136\u53ef\u4ee5\u505a\uff0c\u4f46\u662f\u5df2\u7ecf\u88ab\u8e22\u51fa\u8003\u7eb2\u7684\u4e1c\u897f\u4e5f\u5c3d\u91cf\u522b\u7528\uff08\n\n\u663e\u7136\u975e\u6811\u8fb9\u52a0\u5165\u80af\u5b9a\u8ddf\u5b83\u6709\u5173\u7684\u6811\u8fb9\u5df2\u7ecf\u5168\u88ab\u52a0\u5165\u4e86\uff0c\u5176\u4ed6\u7684\u4e5f\u5e76\u4e0d\u5f71\u54cd\uff0c\u6211\u4eec\u8003\u8651\u79bb\u7ebf\u5904\u7406\uff0c\u5148\u628a\u6811\u8fb9\u5168\u90e8\u52a0\u5165\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u968f\u4fbf\u505a\u4e86\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u6761\u8fb9\u53ea\u4f1a\u88ab\u8986\u76d6\u4e00\u6b21\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u66b4\u529b\u4fee\u6539\uff0c\u67e5\u8be2\u4e00\u4e0b\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u9700\u8981\u5199\u6811\u5256\n\ncode \uff1a\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<vector>\n\n#define maxn 505505\n\ntemplate<class T>\n\ninline T read(){\n\tT r=0,f=0;\n\tchar c;\n\twhile(!isdigit(c=getchar()))f|=(c=='-');\n\twhile(isdigit(c))r=(r<<1)+(r<<3)+(c^48),c=getchar();\n\treturn f?-r:r;\n}\n\ntemplate<class T>\n\ninline void swap(T &a,T &b){\n\tT c=a;\n\ta=b;\n\tb=c;\n}\n\nstruct E{\n\tint v,w,nxt;\n\tE() {}\n\tE(int v,int w,int nxt):v(v),w(w),nxt(nxt) {}\n}e[maxn<<1];\n\nint n,m,s_e,head[maxn],f[maxn],size[maxn];\n\nint s_dfn,fa[maxn],val[maxn],dfn[maxn],LCA[maxn];\n\nbool used[maxn];\n\nstd::vector<int> to[maxn];\n\ninline void a_e(int u,int v,int w){\n\te[++s_e]=E(v,w,head[u]);\n\thead[u]=s_e;\n}\n\nint find(int x){\n\treturn x^f[x]?f[x]=find(f[x]):x;\n}\n\nint U[maxn],V[maxn],W[maxn];\n\nvoid dfs(int u){\n\tsize[u]=1;\n\tdfn[u]=++s_dfn;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].v,w=e[i].w;\n\t\tif(dfn[v])continue;\n\t\tval[v]=val[u]^w;\n\t\tfa[v]=u,dfs(v);\n\t\tsize[u]+=size[v];\n\t\tf[v]=u;\n\t}\n\tfor(int i=0;i<(int)to[u].size();i++){\n\t\tint num=to[u][i];\n\t\tint v=U[num]^V[num]^u;\n\t\tif(dfn[v])LCA[num]=find(v);\n\t}\n}\n\nnamespace BIT{\n\n#define lowbit(k) (k&(-k))\n\n\tint c[maxn];\n\n\tinline void add(int k,int x){\n\t\tfor(;k<=n;k+=lowbit(k))c[k]+=x;\n\t}\n\n\tinline int sum(int k){\n\t\tint Sum=0;\n\t\tfor(;k;k-=lowbit(k))Sum+=c[k];\n\t\treturn Sum;\n\t}\n\n#undef lowbit\n\n}\n\nint main(){\n\tn=read<int>();\n\tm=read<int>();\n\tfor(int i=1;i<=n;i++)f[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read<int>();\n\t\tint v=read<int>();\n\t\tint w=read<int>();\n\t\tint fu=find(u),fv=find(v);\n\t\tif(fu^fv){\n\t\t\ta_e(u,v,w);\n\t\t\ta_e(v,u,w);\n\t\t\tf[fu]=fv;\n\t\t\tused[i]=1;\n\t\t}\n\t\telse {\n\t\t\tto[u].push_back(i);\n\t\t\tto[v].push_back(i);\n\t\t}\n\t\tU[i]=u,V[i]=v,W[i]=w;\n\t}\n\tfor(int i=1;i<=n;i++)f[i]=i;\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])dfs(i);//\u79bb\u7ebf\u5efa\u6811\n\tfor(int i=1;i<=m;i++){\n\t\tif(used[i]){\n\t\t\tputs(\"YES\");\n\t\t\tcontinue;\n\t\t}\n\t\tint u=U[i],v=V[i],w=W[i],lca=LCA[i];\n\t\tif((val[u]^val[v]^w)&&BIT::sum(dfn[u])==BIT::sum(dfn[lca])&&BIT::sum(dfn[v])==BIT::sum(dfn[lca])){\n\t\t\tputs(\"YES\");//\u66b4\u529b\u4fee\u6539\n\t\t\twhile(u^lca){\n\t\t\t\tBIT::add(dfn[u],1);\n\t\t\t\tBIT::add(dfn[u]+size[u],-1);\n\t\t\t\tu=fa[u];\n\t\t\t}\n\t\t\twhile(v^lca){\n\t\t\t\tBIT::add(dfn[v],1);\n\t\t\t\tBIT::add(dfn[v]+size[v],-1);\n\t\t\t\tv=fa[v];\n\t\t\t}\n\t\t}\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1627716473,
        "uid": 71403,
        "name": "\u4e00\u53f6\u77e5\u79cb\u3002",
        "ccfLevel": 9,
        "title": "CF1555F \u9898\u89e3"
    },
    {
        "content": "\u665a\u4e0a\u6709\u70b9\u7d2f\u5c31\u6ca1\u6253Edu\uff0c\u611f\u89c9\u4e8f\u5927\u672c\u4e86![](http://\u5567.tk/tuu)\n\n---\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6027\u8d28\uff1a\n\n\u5408\u6cd5\u7684\u56fe\u4e2d\u4e0d\u5b58\u5728\u4e24\u4e2a\u6709\u7740\u516c\u5171\u8fb9\u7684\u73af\n\n\u8bc1\u660e\uff1a\n\n\u8bbe\u73af $a$ \u4e2d\u4e0d\u4e0e\u73af $b$ \u516c\u7528\u7684\u90e8\u5206\u7684\u5f02\u6216\u503c\u4e3a $x$\uff0c\u73af $b$ \u4e2d\u4e0d\u4e0e\u73af $a$ \u516c\u7528\u7684\u90e8\u5206\u7684\u5f02\u6216\u503c\u4e3a $y$\uff0c\u73af $a$ \u4e0e $b$ \u516c\u5171\u90e8\u5206\u7684\u5f02\u6216\u503c\u4e3a $z$\n\n\u90a3\u4e48\uff0c\u6709:\n\n+ $x \\oplus z = 1$\n\n+ $y \\oplus z = 1$\n\n+ $x \\oplus y = 1$\n\n(\u5bf9\u5e94\u4e86\u73af $a$\uff0c\u73af $b$ \u548c\u65b0\u6784\u6210\u7684\u73af $c$\uff0c\u5176\u4e2d $\\oplus$ \u8868\u793a\u5f02\u6216)\n\n\u5c06\u8fd9\u4e09\u4e2a\u5f0f\u5b50\u4e00\u8d77\u5f02\u6216\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $0 = 1$\uff0c\u663e\u7136\u4e0d\u6210\u7acb\uff0c\u6545\u4e0d\u4f1a\u6709\u4e24\u4e2a\u6709\u7740\u516c\u5171\u8fb9\u7684\u73af\u3002\n\n\u6240\u4ee5\u8bf4\uff0c\u6bcf\u6b21\u8be2\u95ee\uff0c\u5c31\u76f8\u5f53\u4e8e\u8be2\u95ee\uff0c\u52a0\u4e0a\u8fd9\u6761\u8fb9\u540e\uff0c\u4f1a\u4e0d\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u73af\uff0c\u4e14\u8fd9\u4e2a\u73af\u4e0e\u5df2\u7ecf\u5b58\u5728\u7684\u73af\u6709\u7740\u516c\u5171\u8fb9\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\n\n\u5982\u679c\u6211\u4eec\u628a\u6240\u6709\u8fb9\u79bb\u7ebf\u4e0b\u6765\uff0c\u6309\u7167\u987a\u5e8f\u52a0\u8fb9\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u6761\u8fb9\u4e0d\u4f1a\u751f\u6210\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u662f\u53ef\u4ee5\u52a0\u5165\u7684\u3002\n\n\u8bc1\u660e\uff1a\n\n\u56e0\u4e3a\u53ea\u6709\u52a0\u4e0a\u8fd9\u6761\u8fb9\u540e\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u73af\uff0c\u4e14\u8fd9\u4e2a\u73af\u4e0e\u5df2\u7ecf\u5b58\u5728\u7684\u73af\u6709\u7740\u516c\u5171\u8fb9\uff0c\u624d\u4f1a\u4e0d\u80fd\u52a0\uff0c\u6545\u5728\u4e0d\u751f\u6210\u73af\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u53ef\u4ee5\u968f\u4fbf\u52a0\u8fb9\u7684\u3002\uff08\u4e5f\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e0b\uff09\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u6309\u7167\u7b2c\u4e8c\u4e2a\u6027\u8d28\u5efa\u51fa\u4e00\u68f5\u6811\u6765\uff0c\u7136\u540e\u5bf9\u4e8e\u975e\u6811\u8fb9\u4e00\u4e2a\u4e00\u4e2a\u5224\u65ad\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u6761\u53ef\u4ee5\u52a0\u5165\u7684\u975e\u6811\u8fb9\uff0c\u5c31\u5bf9 $u_i$ \u5230 $v_i$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u6743\u52a0\u4e00\u3002\u5728\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u770b $u_i$ \u5230 $v_i$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u8fb9\u6743\u548c\u662f\u5426\u4e3a 0 \u5373\u53ef\u3002\n\n\u770b\u5230\u662f\u5bf9\u6811\u4e0a\u7684\u8def\u5f84\u64cd\u4f5c\u5c31\u5f88\u5bb9\u6613\u7684\u60f3\u5230\u4e86\u6811\u5256\u3002\n\n\u81f3\u4e8e\u9898\u76ee\u8981\u6c42\u662f\u5bf9\u8fb9\u6743\u8fdb\u884c\u52a0\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fb9\u6743\u8f6c\u6362\u5230\u70b9\u4e0a\uff1a\u70b9 $i$ \u7684\u6743\u503c\u4e3a\u8fde\u63a5 $i$ \u4e0e $i$ \u7236\u4eb2\u7684\u8fb9\u7684\u6743\u503c\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u7801\u7801\u7801\u4e86![](http://\u5567.tk/cy)\n\n\u6211\u60f3\u7ec3\u7ec3\u624b\uff0c\u6240\u4ee5\u4ee3\u7801\u91cc\u5224\u65ad\u5f02\u6216\u548c\u5c31\u5355\u72ec\u5199\u4e86\u4e2a\u500d\u589e\uff0c\u6ca1\u6709\u518d\u5728\u6811\u5256\u91cc\u641e\uff0c\u5bfc\u81f4\u5de8\u5927\u591a\u5e38\u6570\uff0c1497ms\n\nCode: 5130 Byte\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define mp make_pair\nusing namespace std;\nconst int mxn=5e5+5;\nint n,q,root;\nint val[mxn];\nint bg[mxn],ed[mxn],top[mxn],sz[mxn],dep[mxn],dfsc;\nint pa[mxn],ord[mxn],P[mxn][22],xo[mxn][22];\nvector<int>g[mxn];\nint par_val[mxn];\ninline int dfs1(int x,int par=0,int deep=1){   //\u6811\u5256\u57fa\u64cd\n\tdep[x]=deep;\n\tsz[x]=1;pa[x]=par;\n\tP[x][0]=par;\n\tfor(int i=0;i<g[x].size();++i){\n\t\tint y=g[x][i];\n\t\tif(y==par)continue;\n\t\tsz[x]+=dfs1(y,x,deep+1);\n\t}\n\treturn sz[x];\n}\ninline void dfs(int x,int tpf=root,int par=0){\n\tbg[x]=++dfsc;\n\ttop[x]=tpf;\n\tord[dfsc]=x;\n\tint mx=-1,pos;\n\tfor(int i=0;i<g[x].size();++i){\n\t\tint y=g[x][i];\n\t\tif(y==par)continue;\n\t\tif(sz[y]>mx){\n\t\t\tmx=sz[y];\n\t\t\tpos=y;\n\t\t}\n\t}\n\tif(mx==-1){\n\t\ted[x]=dfsc;\n\t\treturn;\n\t}\n\tdfs(pos,tpf,x);\n\tfor(int i=0;i<g[x].size();++i){\n\t\tint y=g[x][i];\n\t\tif(y==par or y==pos)continue;\n\t\tdfs(y,y,x);\n\t}\n\ted[x]=dfsc;\n}\nstruct segt{                         //\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6811\u70b9\u6743\n\tint sum[mxn<<3];\n\tint laz[mxn<<3];\n\tint siz[mxn<<3];\n\tinline void init(){\n\t\tmemset(siz,0,sizeof(siz));\n\t\tmemset(laz,0,sizeof(laz));\n\t\tmemset(sum,0,sizeof(sum));\n\t}\n\tinline void pushup(int x){sum[x]=sum[x<<1]+sum[x<<1|1];}\n\tinline void pushdown(int x){\n\t\tif(laz[x]){\n\t\t\tsum[x]+=1ll*laz[x]*siz[x];\n\t\t\tlaz[x<<1]+=laz[x];\n\t\t\tlaz[x<<1|1]+=laz[x];\n\t\t\tlaz[x]=0;\n\t\t}\n\t}\n\tinline void build(int x,int l,int r){\n\t\tsiz[x]=r-l+1;\n\t\tif(l==r){\n\t\t\tsum[x]=val[ord[l]];\n\t\t\treturn;\n\t\t}\n\t\tint md=l+r>>1;\n\t\tbuild(x<<1,l,md);\n\t\tbuild(x<<1|1,md+1,r);\n\t\tpushup(x);\n\t}\n\tinline void add(int x,int l,int r,int a,int b,int d){\n\t\tpushdown(x);\n\t\tif(a<=l and r<=b){\n\t\t\tlaz[x]+=d;\n\t\t\tpushdown(x);\n\t\t\treturn;\n\t\t}\n\t\tif(r<a or b<l)return;\n\t\tint md=l+r>>1;\n\t\tadd(x<<1,l,md,a,b,d);\n\t\tadd(x<<1|1,md+1,r,a,b,d);\n\t\tpushup(x);\n\t}\n\tinline int ask(int x,int l,int r,int a,int b){\n\t\tpushdown(x);\n\t\tif(a<=l and r<=b)return sum[x];\n\t\tif(r<a or b<l)return 0;\n\t\tint md=l+r>>1;\n\t\treturn ask(x<<1,l,md,a,b)+ask(x<<1|1,md+1,r,a,b);\n\t}\n}seg;\ninline void updRange(int x,int y,int d){   //\u8def\u5f84\u4fee\u6539\n\tfor(;top[x]!=top[y];){\n\t\tif(dep[top[x]]>dep[top[y]])swap(x,y);\n\t\tseg.add(1,1,n,bg[top[y]],bg[y],d);\n\t\ty=top[y];\n\t\ty=pa[y];\n\t}\n\tif(dep[x]>dep[y])swap(x,y);\n\tseg.add(1,1,n,bg[x],bg[y],d);\n}\ninline int qryRange(int x,int y){       //\u8def\u5f84\u67e5\u8be2\n\tint ans=0;\n\tfor(;top[x]!=top[y];){\n\t\tif(dep[top[x]]>dep[top[y]])swap(x,y);\n\t\tans+=seg.ask(1,1,n,bg[top[y]],bg[y]);\n\t\ty=top[y];\n\t\ty=pa[y];\n\t}\n\tif(dep[x]>dep[y])swap(x,y);\n\tans+=seg.ask(1,1,n,bg[x],bg[y]);\n\treturn ans;\n}\ninline void addSub(int x,int d){     //\u95f2\u7740\u65e0\u804a\u628a\u5b50\u6811\u548c\u4e5f\u5199\u4e86\u4e0b\uff0c\u4f46\u6ca1\u7528\n\tseg.add(1,1,n,bg[x],ed[x],d);\n}\ninline int qrySub(int x){return seg.ask(1,1,n,bg[x],ed[x]);}\nstruct dsu{                   //\u5e76\u67e5\u96c6\uff0c\u7528\u6765\u79bb\u7ebf\u540e\u628a\u6240\u6709\u6811\u8fb9\u63d0\u524d\u52a0\u4e0a\n\tint fa[mxn];\n\tinline void init(){for(int i=1;i<mxn;++i)fa[i]=i;}\n\tinline int find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n\tinline int merge(int x,int y){\n\t\tx=find(x),y=find(y);\n\t\tif(x==y)return 0;\n\t\tfa[x]=y;\n\t\treturn 1;\n\t}\n}d;\nint u[mxn],v[mxn],w[mxn];\nint ans[mxn];\nint roots[mxn];\ninline void dfs_xor(int x,int P=0){          //\u5199\u7684\u500d\u589e\u5904\u7406\u5f02\u6216\n\txo[x][0]=par_val[x];\n\tfor(int i=0;i<g[x].size();++i){\n\t\tint y=g[x][i];\n\t\tif(y==P)continue;\n\t\tdfs_xor(y,x);\n\t}\n}\ninline void init_xor(){\n\tfor(int j=1;j<=20;++j){\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tP[i][j]=P[P[i][j-1]][j-1];\n\t\t\txo[i][j]=xo[i][j-1]^xo[P[i][j-1]][j-1];\n\t\t}\n\t}\n}\ninline int qryXor(int x,int y){\n\tint rt=0;\n\tif(dep[x]>dep[y])swap(x,y);\n\tfor(int i=20;~i;--i)if(dep[P[y][i]]>=dep[x])rt^=xo[y][i],y=P[y][i];\n\tfor(int i=20;~i;--i)if(P[x][i]!=P[y][i])rt^=xo[x][i],rt^=xo[y][i],x=P[x][i],y=P[y][i];\n\tif(x!=y){\n\t\trt^=xo[x][0],rt^=xo[y][0];\n\t\tx=P[x][0],y=P[y][0];\n\t}\n\treturn rt;\n}\ninline int lca(int x,int y){              //\u53c8\u7528\u500d\u589e\u5199\u4e86\u4e2aLCA\n\tif(dep[x]>dep[y])swap(x,y);\n\tfor(int i=20;~i;--i)if(dep[P[y][i]]>=dep[x])y=P[y][i];\n\tfor(int i=20;~i;--i)if(P[x][i]!=P[y][i])x=P[x][i],y=P[y][i];\n\tif(x!=y)x=P[x][0],y=P[y][0];\n\treturn x;\n}\ninline void solve(){\n\tcin>>n>>q;\n\td.init();\n\tfor(int i=1;i<=q;++i){               //\u5904\u7406\u6811\u8fb9\n\t\tcin>>u[i]>>v[i]>>w[i];\n\t\tans[i]=d.merge(u[i],v[i]);\n\t\tif(ans[i])g[u[i]].push_back(v[i]),g[v[i]].push_back(u[i]);\n\t}\n\tfor(int i=1;i<=n;++i)if(!top[i]){       //\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u8fb9\n\t\troots[i]=1;\n\t\tdfs1(i);\n\t\tdfs(i,i);\n\t}\n\tfor(int i=1;i<=q;++i){ \n\t\tif(!ans[i])continue;\n\t\tif(u[i]==pa[v[i]])par_val[v[i]]=w[i];\n\t\telse par_val[u[i]]=w[i];\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(roots[i])\n\t\t\tdfs_xor(i);\n\tinit_xor();\n\tseg.build(1,1,n);\n\tfor(int i=1;i<=q;++i){                //\u8fb9\u6743\u8f6c\u70b9\u6743\n\t\tif(ans[i]){ \n\t\t\tif(u[i]==pa[v[i]])val[v[i]]=w[i];\n\t\t\telse val[u[i]]=w[i];\n\t\t}\n\t}\n\tfor(int i=1;i<=q;++i){\n\t\tif(ans[i])continue;\n\t\tint X=qryXor(u[i],v[i])^w[i];\n\t\tif(X==0)continue;\n\t\tint LCA=lca(u[i],v[i]);\n//\t\tcerr<<u[i]<<' '<<v[i]<<' '<<w[i]<<'\\n';\n//\t\tfor(int i=1;i<=n;++i)cerr<<qryRange(i,i)<<' ';cerr<<'\\n';\n\t\tint t=qryRange(u[i],v[i])-qryRange(LCA,LCA);   //\u4e00\u5b9a\u8981\u51cf\u6389LCA\u5904\u7684\u70b9\u6743 \u56e0\u4e3a\u5b83\u5bf9\u5e94\u7684\u662fLCA\u5230LCA\u7684\u7236\u4eb2\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u4e0d\u5728\u8def\u5f84\u4e0a\n//\t\tcerr<<\"??? \"<<qryRange(u[i],v[i])<<' '<<qryRange(u[i],u[i])<<' '<<qryRange(v[i],v[i])<<' '<<qryRange(LCA,LCA)<<'\\n';\n\t\tif(t!=0);\n\t\telse{\n\t\t\tans[i]=1;\n\t\t\tupdRange(u[i],v[i],1);    //\u540c\u7406\n\t\t\tupdRange(LCA,LCA,-1); \n\t\t}\n\t}\n\tfor(int i=1;i<=q;++i){\n\t\tif(ans[i])cout<<\"YES\\n\";\n\t\telse cout<<\"NO\\n\";\n\t}\n}\nint main(){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tint T;T=1;\n//\tcin>>T;\n\tfor(;T--;)solve();\n\treturn 0;\n}\n```",
        "postTime": 1627739151,
        "uid": 226760,
        "name": "RedLycoris",
        "ccfLevel": 7,
        "title": "CF1555F Good Graph\t\u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a\u56fe\u4e2d\u6bcf\u4e2a\u73af\u7684\u6743\u503c\u5f02\u6216\u548c\u4e3a $1$\uff0c\u6240\u4ee5\u7531\u4e24\u4e2a\u73af\u62fc\u6210\u7684\u73af\u7684\u5f02\u6216\u548c\u5c31\u662f $0$\uff0c\u4e0d\u5408\u6cd5\u3002\u56e0\u6b64\uff0c\u5408\u6cd5\u7684\u56fe\u4e2d\u6bcf\u6761\u8fb9\u4e00\u5b9a\u81f3\u591a\u5c5e\u4e8e\u4e00\u4e2a\u73af\u3002\n\n\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u5462\uff1f\u6211\u4eec\u53ea\u7ef4\u62a4\u4e00\u9897\u6811\u5c31\u597d\u4e86\uff0c\u52a0\u5165\u7684\u4e00\u6761\u8fb9\u5982\u679c\u548c\u6811\u4e0a\u7684\u4e00\u6761\u8def\u5f84\u5f62\u6210\u73af\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u6761\u8def\u7ecf\u4e0a\u7684\u8fb9\u90fd\u6253\u4e0a\u6807\u8bb0\uff0c\u5728\u8fd9\u4e4b\u524d\u8981\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u8fb9\u4e24\u7aef\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u5df2\u7ecf\u5b58\u5728\u6807\u8bb0\u6216\u5f62\u6210\u7684\u73af\u7684\u5f02\u6216\u548c\u4e0d\u4e3a $1$\uff0c\u5219\u4e0d\u5408\u6cd5\u3002\u5982\u679c\u65b0\u52a0\u5165\u7684\u8fb9\u4e24\u7aef\u70b9\u672c\u6765\u4e0d\u8fde\u901a\uff0c\u76f4\u63a5\u52a0\u5165\u5373\u53ef\u3002\n\n\u4e8e\u662f\u65e0\u8111\u7684 LCT \u7ef4\u62a4\u5c31\u884c\u4e86\uff0c\u53ea\u9700\u8981\u5bf9\u94fe\u4e0a\u7684\u8fb9\u6253\u6807\u8bb0\uff0c\u67e5\u8be2\u94fe\u4e0a\u662f\u5426\u6709\u6807\u8bb0\uff0c\u67e5\u8be2\u94fe\u5f02\u6216\u548c\uff0c\u4ee5\u53ca link \u64cd\u4f5c\u3002\n\n\u590d\u6742\u5ea6 $O(m\\log n)$\u3002\u6211\u6bd4\u8d5b\u65f6\u5019\u65f6\u95f4\u4e0d\u591f\u6ca1\u7801\u5b8c\uff0c\u5dee\u8fd9\u4e00\u9053\u9898\u6ca1 AK\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cctype>\nusing namespace std; \ninline int read(){\n\tint x=0; char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) x=x*10+(c^'0'),c=getchar();\n\treturn x;\n}\ntypedef long long ll;\nconst int maxn=3e5+10;\nconst int maxq=5e5+10;\nstruct Node{\n\tint s[2],p,siz,v1,sum,v2,_s,tag1,tag2;\n}tr[maxn*2];\nint n,q,tot,stk[maxn*2];\ninline void pushup(int x){\n\ttr[x].siz=tr[tr[x].s[0]].siz+tr[tr[x].s[1]].siz+(x>n);\n\ttr[x].sum=tr[tr[x].s[0]].sum^tr[tr[x].s[1]].sum^tr[x].v1;\n\ttr[x]._s=tr[tr[x].s[0]]._s|tr[tr[x].s[1]]._s|(x>n&&tr[x].v2>0);\n}\ninline void pushrev(int x){\n\tswap(tr[x].s[0],tr[x].s[1]);\n\ttr[x].tag1^=1;\n} \ninline void pushadd(int x){\n\ttr[x]._s=tr[x].siz;\n\tif(x>n) tr[x].v2=1;\n\ttr[x].tag2=1;\n}\ninline void pushdown(int x){\n\tif(tr[x].tag1){\n\t\tpushrev(tr[x].s[0]),pushrev(tr[x].s[1]);\n\t\ttr[x].tag1=0;\n\t}\n\tif(tr[x].tag2){\n\t\tpushadd(tr[x].s[0]),pushadd(tr[x].s[1]);\n\t\ttr[x].tag2=0;\n\t}\n}\ninline bool isroot(int x){\n\treturn tr[tr[x].p].s[0]!=x&&tr[tr[x].p].s[1]!=x;\n}\ninline void rotate(int x){\n\tint y=tr[x].p,z=tr[y].p,k=tr[y].s[1]==x;\n\tif(!isroot(y)) tr[z].s[tr[z].s[1]==y]=x;\n\ttr[x].p=z;\n\ttr[y].s[k]=tr[x].s[k^1],tr[tr[x].s[k^1]].p=y;\n\ttr[x].s[k^1]=y,tr[y].p=x;\n\tpushup(y),pushup(x);\n}\nvoid splay(int x){\n\tint top=0,r=x;\n\tstk[++top]=r;\n\twhile(!isroot(r)) stk[++top]=r=tr[r].p;\n\twhile(top) pushdown(stk[top--]);\n\twhile(!isroot(x)){\n\t\tint y=tr[x].p,z=tr[y].p;\n\t\tif(!isroot(y)) rotate(tr[y].s[1]==x^tr[z].s[1]==y?x:y);\n\t\trotate(x);\n\t}\n}\nvoid access(int x){\n\tint z=x;\n\tfor(int y=0;x;y=x,x=tr[x].p){\n\t\tsplay(x);\n\t\ttr[x].s[1]=y,pushup(x);\n\t}\n\tsplay(z);\n}\nvoid makeroot(int x){\n\taccess(x),pushrev(x);\n}\nint findroot(int x){\n\taccess(x);\n\twhile(tr[x].s[0]) pushdown(x),x=tr[x].s[0];\n\tsplay(x);\n\treturn x;\n}\nvoid split(int x,int y){\n\tmakeroot(x),access(y);\n}\nvoid link(int x,int y){\n\tmakeroot(x);\n\tif(findroot(y)!=x) tr[x].p=y;\n}\nint main(){\n\tn=read(),q=read(); tot=n;\n\tfor(int i=1;i<=n;i++) tr[i].siz=1;\n\tfor(int i=1;i<=q;i++){\n\t\tint u=read(),v=read(),w=read();\n\t\tmakeroot(u);\n\t\tif(findroot(v)!=u){\n\t\t\ttot++,tr[tot].v1=tr[tot].sum=w,tr[tot].siz=1;\n\t\t\tlink(u,tot),link(tot,v);\n\t\t\tputs(\"YES\");\n\t\t}else{\n\t\t\tsplit(u,v);\n\t\t\tif(tr[v]._s>0||(tr[v].sum^w)!=1) puts(\"NO\");\n\t\t\telse{\n\t\t\t\tpushadd(v);\n\t\t\t\tputs(\"YES\");\n\t\t\t} \n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1627740752,
        "uid": 176569,
        "name": "iMya_nlgau",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1555F Good Graph"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u4e0d\u7528 HLD / LCT \u7684\u505a\u6cd5\u3002~~\u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u672c\u8d28\u4e0a\u7684\u5dee\u522b~~\n\n\u9996\u5148\u5bb9\u6613\u60f3\u5230\u79bb\u7ebf\uff0c\u5e76\u4e14\u6ee1\u8db3\u6761\u4ef6\u7684\u56fe\u4e00\u5b9a\u662f\u8fb9\u4ed9\u4eba\u638c\uff0c\u6211\u4eec\u628a\u79bb\u7ebf\u540e\u5f97\u5230\u7684\u56fe\u7f29\u70b9\uff0c\u5f62\u6210\u4e00\u7247\u68ee\u6797\uff0c\u5e76\u4e14\u6807\u8bb0\u6811\u8fb9\u3002\u6811\u8fb9\u663e\u7136\u5fc5\u9009\uff0c\u4e3b\u8981\u6765\u770b\u975e\u6811\u8fb9\u3002\n\n\u7ef4\u62a4 $pre(x)$ \u8868\u793a\u4ece\u6839\u5230 $x$ \u7684\u8fb9\u6743\u5f02\u6216\u548c\uff0c\u8bbe\u5f53\u524d\u6211\u4eec\u8003\u8651\u7684\u975e\u6811\u8fb9\u662f $(x,y)$\uff0c\u90a3\u4e48\u5982\u679c $x,y$ \u5df2\u7ecf\u5904\u4e8e\u540c\u4e00\u4e2a\u73af\u91cc\u6216\u8005 $pre(x)\\oplus pre(y)\\oplus w(x,y)\\neq1$ \u662f\u4e0d\u884c\u7684\uff0c\u5426\u5219\u5c31\u53ef\u4ee5\u52a0\u8fdb\u53bb\u3002\n\n\u7136\u540e\u600e\u4e48\u5b9e\u73b0\u67e5\u627e\u662f\u5426\u5728\u540c\u4e00\u4e2a\u73af\u91cc\u4e4b\u7c7b\u7684\u5c31\u7528 time-stamp & BIT \u89e3\u51b3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=300100,M=500100;\nint n,m,ix[M],iy[M],iw[M],sjc,fa[20][N],indfn[N],outdfn[N],tag[M],dep[N],pre[N];\nvector<pair<int,int>> G[N];\nvoid dfs(int x,int las)\n{\n\tfa[0][x]=las;\n\tindfn[x]=++sjc;\n\tdep[x]=dep[las]+1;\n\tfor(int i=1; i<20; ++i) fa[i][x]=fa[i-1][fa[i-1][x]];\n\tfor(auto [y,w]:G[x])\tif(y!=las)\tpre[y]=pre[x]^w,dfs(y,x);\n\toutdfn[x]=sjc;\n}\nint fwk[N];\nvoid ins(int x,int y) { for(; x<=n; x+=x&-x)\tfwk[x]+=y; }\nint find(int x)\n{\n\tint res=0;\n\tfor(; x; x-=x&-x)  res+=fwk[x];\n\treturn res;\n}\nint lh[N];\nint dsuFind(int x)\n{\n\twhile(x!=lh[x])\tx=lh[x]=lh[lh[x]];\n\treturn x;\n}\nint LCA(int x,int y)\n{\n\tif(dep[x]<dep[y])\tswap(x,y);\n\tfor(int i=19; ~i; --i)\tif(dep[fa[i][x]]>=dep[y])\tx=fa[i][x];\n\tif(x==y)\treturn x;\n\tfor(int i=19; ~i; --i)\tif(fa[i][x]!=fa[i][y])\tx=fa[i][x],y=fa[i][y];\n\treturn fa[0][x];\n}\nsigned main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr),cout.tie(nullptr);\n\tcin>>n>>m;\n\tiota(lh+1,lh+n+1,1);\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tcin>>ix[i]>>iy[i]>>iw[i];\n\t\tint x=dsuFind(ix[i]),y=dsuFind(iy[i]);\n\t\tif(x!=y)\n\t\t{\n\t\t\tG[ix[i]].emplace_back(iy[i],iw[i]);\n\t\t\tG[iy[i]].emplace_back(ix[i],iw[i]);\n\t\t\ttag[i]=1,lh[x]=y;\n\t\t}\n\t}\n\tfor(int i=1; i<=n; ++i)\tif(!dep[i])\tdfs(i,0);\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tif(tag[i])\tcout<<\"YES\\n\";\n\t\telse\n\t\t{\n\t\t\tint x=ix[i],y=iy[i];\n\t\t\tif(find(indfn[x])+find(indfn[y])-find(indfn[LCA(x,y)])*2>0||(pre[x]^pre[y]^iw[i])!=1)\tcout<<\"NO\\n\";\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout<<\"YES\\n\";\n\t\t\t\twhile(x!=y)\t(dep[x]<dep[y])&&(x^=y^=x^=y),ins(indfn[x],1),ins(outdfn[x]+1,-1),x=fa[0][x];\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1627725557,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "SOL - CF1555F"
    },
    {
        "content": "## \u524d\u8a00\n\u9876 \u98ce \u4f5c \u6848\n\n\u7532 \u7ea7 \u6218 \u72af\n## \u601d\u8def\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u5f53\u524d\u7684\u56fe\u5408\u6cd5\uff0c\u56fe\u4e00\u5b9a\u662f\u4e00\u68f5**\u8fb9\u4ed9\u4eba\u638c**\u3002\n\n\u8bc1\u660e\uff1a\u5982\u679c\u6709\u4e24\u4e2a\u6743\u503c\u4e3a $1$ \u7684\u7b80\u5355\u73af\u7ecf\u8fc7\u540c\u4e00\u6761\u8fb9\uff0c\u5b83\u4eec\u7684\u5e76\u4e00\u5b9a\u662f\u4e00\u4e2a\u6743\u503c\u4e3a $0$ \u7684\u7b80\u5355\u73af\u3002\n\n~~\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u7528\u52a8\u6001\u4ed9\u4eba\u638c\u89e3\u51b3\u95ee\u9898\u3002~~\n\n\u4e8e\u662f\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u68f5\u6811\uff0c\u5224\u65ad\u80fd\u4e0d\u80fd\u52a0\u5165\u4e00\u6761\u8fde\u63a5\u6811\u4e0a\u8282\u70b9\u7684\u8fb9\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n* \u6c42\u4e24\u4e2a\u70b9\u8def\u5f84\u5f02\u6216\u548c\u3002\n* \u5224\u65ad\u94fe\u662f\u5426\u5168\u4e3a $0$\uff0c\u5373\u5224\u65ad\u8fd9\u4e9b\u8fb9\u662f\u5426\u5728\u73af\u4e0a\u3002\n* \u5c06\u4e00\u6761\u94fe\u5168\u90e8\u4fee\u6539\u4e3a $1$\uff0c\u5373\u6807\u8bb0\u8fd9\u4e9b\u8fb9\u5728\u73af\u4e0a\u3002\n\n\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\u6811\u94fe\u5256\u5206\u5728 $O(m\\log^2n)$ \u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002\n\n\u4f46\u662f\u52a0\u8fb9\u7684\u8fc7\u7a0b\u662f\u52a8\u6001\u7684 nya\uff0c\u600e\u4e48\u6811\u5256\u5440\uff1f\n\n* \u6211\u4f1a LCT\uff01\n\n\u55ef\uff0c\u4f46\u662f\u7b14\u8005\u4e0d\u4f1a LCT\uff0c\u6240\u4ee5\u8bf7\u53f3\u8f6c\u5176\u4ed6\u9898\u89e3\u3002\n\n* \u6211\u4f1a\u79bb\u7ebf\uff01\n\n\u6ce8\u610f\u5230\u8fde\u63a5\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u8fb9\u663e\u7136\u662f\u5408\u6cd5\u7684\uff0c\u800c\u5269\u4e0b\u7684\u8fb9\u5373\u4f7f\u5408\u6cd5\uff0c\u4e24\u4e2a\u70b9\u7684\u8def\u5f84\u5f02\u6216\u548c\u4e5f\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u6b64\u6b63\u786e\u6027\u4ecd\u7136\u80fd\u4fdd\u8bc1\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5c06\u6240\u6709\u8fde\u63a5\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u8fb9\u5148\u4fdd\u7559\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ef4\u62a4\u68ee\u6797\u4e86\uff0c\u7136\u540e\u76f4\u63a5\u5bf9\u4e8e\u68ee\u6797\u7684\u6bcf\u68f5\u6811\u6811\u5256\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log^2n)$\uff0c\u53ea\u80fd\u8bf4\u6811\u5256\u5e38\u6570\u5b9e\u5728\u662f\u592a\u5c0f\u5566\uff01\n## \u4ee3\u7801\n\u6211\u53e3\u80e1\u4e86\uff0c\u4ee3\u7801\u8d3a\u7684 Epsilon_Cube \u7684\u3002\n\n```cpp\n//Efite gaaa c,lve iin ndt tdinlidhnhr.\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint u[500003],v[500003],w[500003],Fa[300003];\nint find(int x)\n{\n\tif(x==Fa[x]) return Fa[x];\n\treturn Fa[x]=find(Fa[x]);\n}\nint ans[500003];\n#define mp make_pair\nvector<pair<int,int> > e[300003];\nint sz[300003],fa[300003],dep[300003],son[300003],top[300003];\nint dfn[300003],inv[300003],lst[300003],tot;\nint V[300003];\ninline void dfs1(int x)\n{\n    sz[x]=1;\n    for(auto xx:e[x]) {int y=xx.first;if(y!=fa[x])\n    {\n        if(y==fa[x])continue;\n        fa[y]=x,dep[y]=dep[x]+1,V[y]=V[x]^xx.second,dfs1(y),sz[x]+=sz[y];\n        (sz[y]>sz[son[x]])&&(son[x]=y);\n    }}\n}\ninline void dfs2(int x,int tp)\n{\n    top[x]=tp,dfn[x]=++tot,inv[tot]=x;\n    if(son[x]) dfs2(son[x],tp);\n    for(auto xx:e[x]) {int y=xx.first;\n        if(y!=son[x]&&y!=fa[x])dfs2(y,y);}\n    lst[x]=tot;\n}\nint sum[4000003];\ninline void upd1(int nl,int nr,int l,int r,int i)\n{\n\tif(r<nl||nr<l||sum[i]==2) return ;\n\tif(l<=nl&&nr<=r) return (void)(sum[i]=2);\n\tint mid=(nl+nr)>>1;\n\tupd1(nl,mid,l,r,i<<1),upd1(mid+1,nr,l,r,(i<<1)+1),\n\tsum[i]=1+(sum[i<<1]==2&&sum[(i<<1)+1]==2);\n\treturn ;\n}\ninline int query(int nl,int nr,int l,int r,int i)\n{\n\tif(r<nl||nr<l) return 0;\n\tif(!sum[i]) return 0;\n\tif(sum[i]==2) return 1;\n\tif(l<=nl&&nr<=r) return sum[i];\n\tint mid=(nl+nr)>>1;\n\treturn query(nl,mid,l,r,i<<1)+query(mid+1,nr,l,r,(i<<1)+1);\n}\nsigned main()\n{\n\tint n=read(),m=read();\n\tfor(int i=1; i<=n; ++i) Fa[i]=i;\n\tfor(int i=1; i<=m; ++i)\n\t\tu[i]=read(),v[i]=read(),w[i]=read();\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint A=find(u[i]),B=find(v[i]);\n\t\tif(A!=B) \n\t\t{e[u[i]].push_back(mp(v[i],w[i])),\n\t\te[v[i]].push_back(mp(u[i],w[i]));\n\t\tFa[A]=B;\n\t\tans[i]=2;}\n\t}\n\tfor(int i=1; i<=n; ++i) if(!dfn[i]) dfs1(i),dfs2(i,i);\n\tfor(int i=1; i<=m; ++i) if(!ans[i])\n\t{\n\t\tint x=u[i],y=v[i];\n\t\tbool flg=1;\n\t\tif(!(V[x]^V[y]^w[i])) continue;\n\t\tans[i]=-1;\n\t\twhile(top[x]!=top[y])\n\t\t{\n\t\t\tif(dep[top[y]]>dep[top[x]]) swap(x,y);\n\t\t\tif(query(1,n,dfn[top[x]],dfn[x],1)){flg=0;break;}\n\t\t\tx=fa[top[x]];\n\t\t}\n\t\tif(flg) \n\t\tif(x==y||query(1,n,min(dfn[x],dfn[y])+1,max(dfn[x],dfn[y]),1)==0)\n\t\t{\n\t\t\tint x=u[i],y=v[i];\n\t\t\twhile(top[x]!=top[y])\n\t\t\t{\n\t\t\t\tif(dep[top[y]]>dep[top[x]]) swap(x,y);\n\t\t\t\tupd1(1,n,dfn[top[x]],dfn[x],1);\n\t\t\t\tassert(query(1,n,dfn[top[x]],dfn[x],1)>0);\n\t\t\t\tx=fa[top[x]];\n\t\t\t}\n\t\t\tif(x!=y)\n\t\t\tupd1(1,n,min(dfn[x],dfn[y])+1,max(dfn[x],dfn[y]),1);\n\t\t\tans[i]=1;\n\t\t}\n\t}\n\tfor(int i=1; i<=m; ++i) if(ans[i]>0) puts(\"YES\");\n\telse puts(\"NO\");\n\treturn 0;\n}\n```",
        "postTime": 1627702048,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1555F"
    },
    {
        "content": "\u6211\u4eec\u5148\u8003\u8651\u4ec0\u4e48\u6837\u5b50\u7684\u8fb9\u662f\u53ef\u4ee5\u52a0\u8fdb\u6765\u7684\u3002\u7b2c\u4e00\u7c7b\u662f\u8fde\u63a5\u4e24\u4e2a\u8fde\u901a\u5757\u7684\uff0c\u79f0\u4e3a \u201c\u6811\u8fb9\u201d\u3002\u7b2c\u4e8c\u7c7b\u5c31\u662f\u8fde\u63a5\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u7684\u4e24\u4e2a\u70b9\uff0c\u6ee1\u8db3\u8def\u5f84\u4e0a\u6bcf\u6761\u8fb9\u5728\u8fd9\u4e4b\u524d\u4e0d\u5728\u73af\u4e0a\uff08\u9650\u5236 $1$\uff09\uff0c\u5e76\u4e14\u8def\u5f84\u5f02\u6216\u548c\u4e3a $1$\uff08\u9650\u5236 $2$\uff09\uff0c\u8fd9\u4e00\u7c7b\u79f0\u4e3a \u201c\u975e\u6811\u8fb9\u201d\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u5904\u7406\uff0c\u5148\u6458\u51fa\u6240\u6709\u6811\u8fb9\u5e76\u8fde\u8fb9\uff0c\u8fd9\u4e2a\u56fe\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u68ee\u6797\u3002\u8fd9\u4e00\u6b65\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\u3002\n\n\u7136\u540e\u518d\u8003\u8651\u975e\u6811\u8fb9\u3002\u5148\u5904\u7406\u9650\u5236 $1$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5728\u73af\u4e0a\u7684\u8fb9\u8d4b\u503c\u4e3a $1$\uff0c\u4e0d\u5728\u73af\u4e0a\u7684\u8fb9\u8d4b\u503c\u4e3a $0$\uff0c\u7136\u540e\u5408\u6cd5\u6761\u4ef6\u5c31\u662f\u6811\u7684\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u503c\u90fd\u662f $0$\uff08\u548c\u662f $0$ / \u6700\u5927\u503c\u662f $0$\uff09\uff0c\u8fd9\u6811\u5256\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\u7136\u540e\u5904\u7406\u9650\u5236 $2$\uff0c\u4e00\u4e2a\u6811\u4e0a\u524d\u7f00\u5f02\u6216\u548c\u5373\u53ef\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define lson o<<1\n#define rson o<<1|1\n#define mid (l+r>>1)\n\nint n,m,xx[500005],yy[500005],zz[500005];\nint dsu[500005],tr[500005],sum[500005];\nint ee,h[300005],nex[300005<<1],to[300005<<1],val[300005<<1];\nint dep[300005],dfn[300005],fa[300005],siz[300005],top[300005],son[300005];\nstruct segtree{\n\tint v,laz;\n}t[300005<<2];\n\nint find_(int x)\n{\n\treturn dsu[x]==x ? x : dsu[x] = find_(dsu[x]);\n}\n\nvoid addedge(int x,int y,int z)\n{\n\tnex[++ee] = h[x], to[ee] = y, val[ee] = z, h[x] = ee;\n}\n\nvoid dfs1(int x,int pre)\n{\n\tdep[x] = dep[pre]+1, fa[x] = pre, siz[x] = 1;\n\tfor(int i=h[x];i;i=nex[i])\n\t\tif(to[i]!=pre)\n\t\t{\n\t\t\tsum[to[i]] = sum[x]^val[i];\n\t\t\tdfs1(to[i],x);\n\t\t\tsiz[x] += siz[to[i]];\n\t\t\tif(siz[to[i]]>siz[son[x]])\n\t\t\t\tson[x] = to[i];\n\t\t}\n}\n\nvoid dfs2(int x,int tp)\n{\n\ttop[x] = tp, dfn[x] = ++dfn[0];\n\tif(!son[x]) return;\n\tdfs2(son[x],tp);\n\tfor(int i=h[x];i;i=nex[i])\n\t\tif(to[i]!=fa[x] && to[i]!=son[x])\n\t\t\tdfs2(to[i],to[i]);\n}\n\nvoid pushdown(int o)\n{\n\tif(t[o].laz)\n\t{\n\t\tt[lson].v = t[lson].laz = t[o].laz;\n\t\tt[rson].v = t[rson].laz = t[o].laz;\n\t}\n\tt[o].laz = 0;\n}\n\nvoid modify(int o,int l,int r,int ql,int qr,int v)\n{\n\tif(ql>qr)\n\t\treturn;\n\tif(l>=ql && r<=qr)\n\t{\n\t\tt[o].v = t[o].laz = v;\n\t\treturn;\n\t}\n\tpushdown(o);\n\tif(ql<=mid)\n\t\tmodify(lson,l,mid,ql,qr,v);\n\tif(qr>mid)\n\t\tmodify(rson,mid+1,r,ql,qr,v);\n\tt[o].v = max(t[lson].v,t[rson].v);\n}\n\nvoid modify_(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(dep[top[x]]<dep[top[y]])\n\t\t\tswap(x,y);\n\t\tmodify(1,1,n,dfn[top[x]],dfn[x],1);\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x]<dep[y])\n\t\tswap(x,y);\n\tmodify(1,1,n,dfn[y]+1,dfn[x],1);\n}\n\nint query(int o,int l,int r,int ql,int qr)\n{\n\tif(ql>qr)\n\t\treturn 0;\n\tif(l>=ql && r<=qr)\n\t\treturn t[o].v;\n\tpushdown(o);\n\tint res=0;\n\tif(ql<=mid)\n\t\tres = max(res,query(lson,l,mid,ql,qr));\n\tif(qr>mid)\n\t\tres = max(res,query(rson,mid+1,r,ql,qr));\n\treturn res;\n}\n\nint query_(int x,int y)\n{\n\tint res=0;\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(dep[top[x]]<dep[top[y]])\n\t\t\tswap(x,y);\n\t\tres = max(res,query(1,1,n,dfn[top[x]],dfn[x]));\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x]<dep[y])\n\t\tswap(x,y);\n\tres = max(res,query(1,1,n,dfn[y]+1,dfn[x]));\n\treturn res;\n}\n\nsigned main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tdsu[i] = i;\n\tfor(int i=1;i<=m&&scanf(\"%lld%lld%lld\",xx+i,yy+i,zz+i);i++)\n\t{\n\t\tint fx=find_(xx[i]),fy=find_(yy[i]);\n\t\tif(fx!=fy)\n\t\t{\n\t\t\tdsu[fy] = fx;\n\t\t\taddedge(xx[i],yy[i],zz[i]), addedge(yy[i],xx[i],zz[i]);\n\t\t\ttr[i] = 1;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])\n\t\t\tdfs1(i,0), dfs2(i,i);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(tr[i])\n\t\t{\n\t\t\tputs(\"YES\");\n\t\t\tcontinue;\n\t\t}\n\t\tif((sum[xx[i]]^sum[yy[i]]^zz[i])==1 && query_(xx[i],yy[i])==0)\n\t\t{\n\t\t\tputs(\"YES\");\n\t\t\tmodify_(xx[i],yy[i]);\n\t\t}\n\t\telse\n\t\t\tputs(\"NO\");\n\t}\n\t\n\treturn 0;\n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1630243485,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010CF1555F Good Graph\u3011"
    },
    {
        "content": "\u5927\u81f4\u9898\u610f\uff1a\u521d\u59cb\u6709\u4e00\u5f20 $n$ \u4e2a\u70b9\uff0c\u6ca1\u6709\u8fb9\u7684\u65e0\u5411\u56fe\u3002$m$ \u6b21\u8be2\u95ee\u52a0\u5165\u4e00\u6761 $u_i,v_i$ \u4e4b\u95f4\u6743\u503c\u4e3a $w_i\\in\\{0,1\\}$ \u7684\u8fb9\uff0c\u82e5\u52a0\u5165\u4e4b\u540e\u56fe\u4e0a\u4e0d\u5b58\u5728\u8def\u5f84\u6743\u503c\u5f02\u6216\u548c\u662f $0$ \u7684\u7b80\u5355\u73af\uff0c\u5219\u6210\u529f\u52a0\u5165\uff0c\u5426\u5219\u4e0d\u52a0\u5165\u3002\u6c42\u6bcf\u6b21\u662f\u5426\u6210\u529f\u52a0\u5165\u4e86\u7ed9\u5b9a\u7684\u8fb9\u3002\n\n$3\\leq n\\leq 3\\times 10^5$\uff0c$1\\leq m\\leq 5\\times 10^5$\u3002\n\n\u63d0\u4f9b\u4e00\u79cd\u4e24\u53ea $\\log$ \u7684\u6811\u5256\u505a\u6cd5\u3002\n\n\u5148 **\u79bb\u7ebf**\uff0c\u987a\u6b21\u904d\u5386\u6bcf\u6761\u8fb9\uff0c\u82e5\u5b83\u8fde\u63a5\u4e86\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u5219\u8fd9\u6761\u8fb9 **\u5fc5\u5b9a** \u4f1a\u52a0\u5165\uff0c\u4e8e\u662f\u628a\u8fd9\u4e9b\u8fb9\u62c9\u51fa\u6765\u52a0\u5165\uff0c\u5f97\u5230\u4e00\u4e2a\u68ee\u6797\u3002\n\n\u8003\u8651\u5269\u4f59\u7684\u8fb9\u80fd\u591f\u6210\u529f\u52a0\u5165\u7684\u6761\u4ef6\u3002\n\n- \u52a0\u5165\u540e\u76f4\u63a5\u6784\u6210\u7684\u7b80\u5355\u73af\u5f02\u6216\u548c\u4e3a $1$\uff1b\n- \u52a0\u5165\u540e\u76f4\u63a5\u6784\u6210\u7684\u7b80\u5355\u73af\u4e0d\u4e0e\u5df2\u7ecf\u5b58\u5728\u7684\u7b80\u5355\u73af\u6709\u5171\u8fb9\uff0c\u5373\u4e0d\u80fd\u5f62\u6210\"\u73af\u5957\u73af\"\u3002\n\n\u7b2c\u4e00\u6761\u5f88\u663e\u7136\uff0c\u53ef\u4ee5\u753b\u56fe\u7406\u89e3\u7b2c\u4e8c\u6761\u3002\n\n![](https://cdn.jsdelivr.net/gh/moyujiang/piccdn@a3c16d4c31b16ec09657461c754a7600831eb7cc/2021/07/31/e1afd7a74f49af52a4ebff646e33ed03.png)\n\n\u53ef\u4ee5\u628a\u8fd9\u91cc\u7684\u8fb9\u770b\u4f5c\u4e00\u6761\u8def\u5f84\u3002\n\n\u5047\u8bbe\u6784\u6210\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684\u73af\u5957\u73af\uff0c\u5e76\u4e14 $1-2-3,2-3-4$ \u4e24\u4e2a\u73af\u90fd\u6ee1\u8db3\u8def\u5f84\u6743\u503c\u5f02\u6216\u548c\u4e3a $1$\uff0c\u90a3\u4e48\u8003\u67e5\u5927\u73af $1-2-4-3$ \u7684\u6743\u503c\uff1a\n\n- $2-3$ \u8def\u5f84\u6743\u503c\u5f02\u6216\u548c\u4e3a $1$\uff0c\u5219 $1-2,1-3$ \u4e0e $2-4,3-4$ \u7684\u5f02\u6216\u548c\u90fd\u662f $0$\uff0c\u5927\u73af\u7684\u5f02\u6216\u548c\u4e3a $0$\uff1b\n- $2-3$ \u8def\u5f84\u6743\u503c\u5f02\u6216\u548c\u4e3a $0$\uff0c\u5219 $1-2,1-3$ \u4e0e $2-4,3-4$ \u7684\u5f02\u6216\u548c\u90fd\u662f $1$\uff0c\u5927\u73af\u7684\u5f02\u6216\u548c\u4e3a $0$\u3002\n\n\u4e8e\u662f\u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u4f1a\u4f7f\u5f97\u5927\u73af\u7684\u5f02\u6216\u548c\u4e3a $0$\uff0c\u4e0d\u6ee1\u8db3\u9898\u610f\u3002\n\n\u6240\u4ee5\u73b0\u5728\u9700\u8981\u5224\u65ad\u7684\u4e1c\u897f\u53d8\u4e3a\u4e86\uff0c\u6c42\u6811\u4e0a\u4e00\u6761\u8def\u5f84\u662f\u5426\u5b8c\u5168\u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u4ee5\u53ca\u8986\u76d6\u4e00\u6761\u6811\u4e0a\u8def\u5f84\u3002\n\n\u8fd9\u4e2a\u6811\u5256\u4e00\u4e0b\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6c42\u548c\u5c31\u597d\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log ^2n)$\u3002\n\n\u4ee3\u7801\u4e3a\u4e86\u597d\u5199\uff0c\u76f4\u63a5\u5199\u6210\u6bd4\u8f83\u4e60\u60ef\u7684\u533a\u95f4\u8d4b\u503c\u4e86\uff0c\u5176\u5b83\u5b9e\u73b0\u4e5f\u6bd4\u8f83\u4e0d\u7cbe\u7ec6\uff0c\u53cd\u6b63 cf \u4e0d\u5361\u5e38\uff0c\u5c06\u5c31\u7740\u770b\u4e00\u4e0b\u5c31\u597d\uff08\n\n[code](https://www.luogu.com.cn/paste/f6y4h9fr)",
        "postTime": 1627731356,
        "uid": 173685,
        "name": "\u6478\u9c7c\u9171",
        "ccfLevel": 8,
        "title": "CF1555F"
    },
    {
        "content": "> \u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c\u4e00\u5f00\u59cb\u6ca1\u6709\u8fde\u8fb9\uff0c\u7136\u540e\u7ed9\u5b9a $m$ \u4e2a\u8be2\u95ee\u5c1d\u8bd5\u4e0d\u65ad\u52a0\u8fb9\uff0c\u8fb9\u6743\u53ea\u80fd\u662f $0/1$\u3002\n>\n> \u82e5\u52a0\u8fb9\u4e4b\u540e\uff0c\u56fe\u4e2d\u6240\u6709\u7b80\u5355\u73af\uff08\u6ca1\u6709\u91cd\u590d\u9876\u70b9\u7684\u73af\uff09\u7684\u5f02\u6216\u548c\u4e3a $1$\u200b \u5373\u53ef\u52a0\u5165\uff0c\u5426\u5219\u4e0d\u80fd\u52a0\u5165\u3002\n>\n> \u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u8f93\u51fa `YES/NO` \u8868\u793a\u80fd\u5426\u52a0\u8fb9\u3002\n\n\u6bd4\u8f83\u6709\u601d\u7ef4\u96be\u5ea6\u3002\n\n\u9488\u5bf9\u73af\u76f8\u5173\u7684\u95ee\u9898\uff0c\u6709\u4e00\u79cd\u5957\u8def\uff1a\u79bb\u7ebf\u4e0b\u6765\uff0c\u9996\u5148\u5f97\u5230\u4e00\u9897\u751f\u6210\u6811\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8003\u8651\u73af\u7684\u95ee\u9898\u3002\n\n\u6c42\u51fa\u751f\u6210\u6811\uff0c\u90a3\u4e48\u9996\u5148\u6811\u4e0a\u7684\u8fb9\u662f\u4e00\u5b9a\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u8fd9\u6761\u8fb9\u52a0\u5165\u65f6\u4e0d\u4e0e\u4efb\u4f55\u8fb9\u6210\u7b80\u5355\u73af\u3002\n\n\u7136\u540e\u8003\u8651\u975e\u6811\u8fb9\uff0c\u663e\u7136\u53ea\u8981\u8fd9\u6761\u975e\u6811\u8fb9\u6784\u6210\u7684\u73af\u4e0d\u4e0e\u4efb\u4f55\u5176\u5b83\u73af\u76f8\u4ea4\u5373\u53ef\u3002\n\n\u82e5\u76f8\u4ea4\u5219\u4e00\u5b9a\u51fa\u73b0 $0$ \u73af\uff0c\u8fd9\u4e2a\u73af\u662f\u4e24\u4e2a\u76f8\u4ea4\u7684\u73af\u5206\u522b\u53bb\u6389\u76f8\u4ea4\u90e8\u5206\uff0c\u7136\u540e\u91cd\u65b0\u6784\u6210\u7684\u73af\u3002\n\n\u5224\u65ad\u65b9\u6cd5\u5f88\u591a\uff0c\u53ef\u4ee5\u8003\u8651\u8f6c\u5316\u6210 \u6811\u4e0a\u533a\u95f4\u52a0 & \u533a\u95f4\u6700\u5927\u503c\uff0c\u76f4\u63a5\u6811\u5256\u7ef4\u62a4\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(m\\log^2 n)$\u3002 \n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int N = 3e5 + 10, M = 5e5 + 10;\nint n, m, cnt, st[N], val[N], head[N];\nbool vis[M];\nstruct edge{int u, v, w;} G[M];\nstruct Edge{int nxt, to, val;} ed[N << 1];\n\nint read(){\n\tint x = 0, f = 1; char c = getchar();\n\twhile(c < '0' || c > '9') f = (c == '-') ? -1 : 1, c = getchar();\n\twhile(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n\treturn x * f;\n}\n\nint Get(int x){\n\tif(x == st[x]) return x;\n\treturn st[x] = Get(st[x]);\n}\n\nvoid add(int u, int v, int w){\n\ted[++ cnt] = (Edge){head[u], v, w}; head[u] = cnt;\n\ted[++ cnt] = (Edge){head[v], u, w}; head[v] = cnt; \n}\n\nint tot, fa[N], id[N], son[N], sz[N], top[N], dep[N];\n\nvoid dfs1(int u, int Fa){\n\tfa[u] = Fa, dep[u] = dep[Fa] + 1, sz[u] = 1;\n\tfor(int i = head[u], v; i; i = ed[i].nxt)\n\t\tif((v = ed[i].to) != Fa){\n\t\t\tval[v] = val[u] ^ ed[i].val;\n\t\t\tdfs1(v, u);\n\t\t\tsz[u] += sz[v];\n\t\t\tif(!son[u] || sz[v] > sz[son[u]]) son[u] = v;\n\t\t}\n}\n\nvoid dfs2(int u, int Top){\n\ttop[u] = Top, id[u] = ++ tot;\n\tif(!son[u]) return;\n\tdfs2(son[u], Top);\n\tfor(int i = head[u], v; i; i = ed[i].nxt)\n\t\tif((v = ed[i].to) != fa[u] && v != son[u]) dfs2(v, v);\n}\n\nint dat[N << 2], cov[N << 2];\n\nvoid Push_Down(int p){\n\tif(!cov[p]) return;\n\tint l = p << 1, r = p << 1 | 1;\n\tdat[l] = cov[l] = cov[p];\n\tdat[r] = cov[r] = cov[p];\n\tcov[p] = 0;\n}\n\nint Query(int p, int l, int r, int L, int R){\n\tif(L <= l && r <= R) return dat[p];\n\tPush_Down(p);\n\tint mid = (l + r) >> 1;\n\tif(L <= mid && Query(p << 1, l, mid, L, R)) return 1;\n\tif(R  > mid && Query(p << 1 | 1, mid + 1, r, L, R)) return 1;\n\treturn 0; \n}\n\nvoid Update(int p, int l, int r, int L, int R, int v){\n\tif(L <= l && r <= R) {dat[p] = cov[p] = v; return;}\n\tPush_Down(p);\n\tint mid = (l + r) >> 1;\n\tif(L <= mid) Update(p << 1, l, mid, L, R, v);\n\tif(R >  mid) Update(p << 1 | 1, mid + 1, r, L, R, v);\n\tdat[p] = max(dat[p << 1], dat[p << 1 | 1]);\n}\n\nbool Ask(int x, int y){\n\twhile(top[x] != top[y]){\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x, y);\n\t\tif(Query(1, 1, n + 1, id[top[x]], id[x])) return true;\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x] > dep[y]) swap(x, y);\n\tif(id[x] + 1 <= id[y] && Query(1, 1, n + 1, id[x] + 1, id[y])) return true;\n\treturn false;\n}\n\nvoid Modify(int x, int y){\n\twhile(top[x] != top[y]){\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x, y);\n\t\tUpdate(1, 1, n + 1, id[top[x]], id[x], 1);\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x] > dep[y]) swap(x, y);\n\tif(id[x] + 1 <= id[y]) Update(1, 1, n + 1, id[x] + 1, id[y], 1);\n}\n\nint main(){\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; i ++) st[i] = i;\n\tfor(int i = 1; i <= m; i ++){\n\t\tint u = read(), v = read(), w = read();\n\t\tG[i] = (edge){u, v, w};\n\t\tint fu = Get(u), fv = Get(v);\n\t\tif(fu != fv)\n\t\t\tvis[i] = true, add(u, v, w), st[fu] = fv;\n\t}\n\tfor(int i = 1; i <= n; i ++)\n\t\tif(!dep[i]) dfs1(i, 0), dfs2(i, i);\n\t\n\tfor(int i = 1; i <= m; i ++){\n\t\tif(vis[i]) {puts(\"YES\"); continue;}\n\t\tint u = G[i].u, v = G[i].v;\n\t\tint w = val[u] ^ val[v] ^ G[i].w;\n\t\tif(!w) {puts(\"NO\"); continue;}\n\n\t\tif(Ask(u, v))\n\t\t\tputs(\"NO\");\n\t\telse\n\t\t\tModify(u, v), puts(\"YES\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1627727203,
        "uid": 117941,
        "name": "_LPF_",
        "ccfLevel": 9,
        "title": "CF1555F Good Graph"
    },
    {
        "content": "\u79f0\u6743\u503c\u5f02\u6216\u548c\u4e3a $1$ \u7684\u7b80\u5355\u73af\u4e3a\u5408\u6cd5\u7684\u73af\u3002\n\n\u5047\u8bbe\u4e24\u4e2a\u5408\u6cd5\u7684\u73af\u6709\u81f3\u5c11\u4e00\u6761\u516c\u5171\u8fb9\uff0c\u90a3\u4e48\u8003\u8651\u5b83\u4eec\u7ec4\u6210\u7684\u5927\u73af\u7684\u6743\u503c\uff1a\u6bcf\u6761\u516c\u5171\u8fb9\u4e0a\u7684\u6743\u503c\u76f8\u540c\u53ef\u4ee5\u62b5\u6d88\uff0c\u5176\u4ed6\u8fb9\u4e0a\u7684\u6743\u503c\u5f02\u6216\u548c\u76f8\u540c\uff0c\u4e5f\u62b5\u6d88\uff0c\u5219\u5927\u73af\u7684\u6743\u503c\u4e3a $0$\u2014\u2014\u663e\u7136\u8fd9\u4e24\u4e2a\u73af\u7ec4\u6210\u7684\u5927\u73af\u4e0d\u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u539f\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a\u4ed9\u4eba\u638c\u72b6\u7269\u3002\n\n\u7136\u540e\u8003\u8651\u4ed9\u4eba\u638c\u662f\u4e2a\u4ec0\u4e48\u6837\u7684\u4e1c\u897f\uff1a\u5bf9\u5b83\u5efa\u51fa DFS \u6811\uff0c\u6bcf\u6761\u975e\u6811\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9 \u5728\u6811\u4e0a\u6240\u5f62\u6210\u7684\u94fe \u4e92\u4e0d\u76f8\u4ea4\u3002\u90a3\u4e48\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5148\u5efa\u51fa\u8fd9\u68f5 DFS \u6811\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u6761\u975e\u6811\u8fb9\u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5224\u65ad\uff1a\n\n1. \u94fe\u4e0a\u662f\u5426\u6709\u8fb9\u5df2\u7ecf\u88ab\u53e6\u4e00\u6761\u975e\u6811\u8fb9\u8986\u76d6\n2. \u8fd9\u6761\u975e\u6811\u8fb9\u6240\u5f62\u6210\u7684\u73af\u662f\u5426\u5408\u6cd5\n\n\u53ef\u4ee5\u7528\u6811\u5256 + \u6811\u72b6\u6570\u7ec4 / \u7ebf\u6bb5\u6811\uff0c\u9700\u8981\u5b9e\u73b0\u94fe\u4fee\u6539\u94fe\u67e5\u8be2\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $\\mathcal O(n \\log ^2 n)$ \u7684\u505a\u6cd5\u3002\n\n$\\mathcal O(n \\log ^2 n)$ \u5b9e\u73b0\u5f97\u4e0d\u592a\u597d\u7684\u8bdd\u4f1a\u88ab\u5361\u5e38\uff0c\u6240\u4ee5\u8bb2\u4e2a\u597d\u5199\u7684 $\\mathcal O(n \\log n)$ \u505a\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u6761\u8fb9\u6700\u591a\u4f1a\u88ab\u8986\u76d6\u4e00\u6b21\uff0c\u6240\u4ee5\u4fee\u6539\u94fe\u7684\u65f6\u5019\u53ef\u4ee5\u66b4\u529b\u5355\u70b9\u4fee\u6539\uff0c\u4e8e\u662f\u95ee\u9898\u53d8\u6210\u4e86\u5355\u70b9\u4fee\u6539\u94fe\u67e5\u8be2\u3002\u94fe\u67e5\u8be2\u8fd8\u662f\u5f97\u5199\u6811\u5256\uff0c\u6240\u4ee5\u6811\u4e0a\u5dee\u5206\u4e00\u4e0b\u53d8\u6210\u5b50\u6811\u4fee\u6539\u5355\u70b9\u67e5\u8be2\uff0c\u8dd1\u4e00\u904d DFS \u5e8f\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u56fe\u4e0d\u4e00\u5b9a\u8fde\u901a\uff0c\u539f\u56fe\u53ef\u80fd\u662f\u4e00\u5806\u4ed9\u4eba\u638c\u3002\u8fd9\u4e2a\u4e1c\u897f\u5b9e\u9645\u5e76\u4e0d\u96be\u5904\u7406\uff0c\u9884\u5904\u7406 LCA \u548c DFS \u5e8f\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\u90fd\u8dd1\u4e00\u904d DFS \u5c31\u884c\u4e86\u3002\n\n```c++\n// 2021.07.31 - 09:09\n// Code by LTb\n#include <bits/stdc++.h>\nusing namespace std;\n// #define int long long\n#define ll long long\n#define debug printf(\"Passing Line %d in function [%s].\\n\",__LINE__,__FUNCTION__)\n#define fi first\n#define se second\ninline int read(){\n    int x=0,f=1;\n    char ch='.';\n    while(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n    return f*x;\n}\ninline void chmax(int &x,int y){x=max(x,y);}\ninline void chmin(int &x,int y){x=min(x,y);}\n\nconst int MOD = 998244353;\ninline int add(int x,int y){return(x+y>=MOD)?(x+y-MOD):((x+y<0)?(x+y+MOD):(x+y));}\n\nconst int MAXN = 300005, MAXM = 500005;\n\n// data\nint n, q;\nint fr[MAXM], to[MAXM], val[MAXM];\nvector<int> G[MAXN], H[MAXN];\nbool ans[MAXM];\nbool vis[MAXN];\n\n// lca\nint dep[MAXN];\nint fa[23][MAXN];\n\nvoid dfs1(int p, int par) {\n\tfa[0][p] = par;\n\tfor (int i = 1; i <= 20; i++)\n\t\tfa[i][p] = fa[i - 1][fa[i - 1][p]];\n\n\tfor (int i : G[p]) {\n\t\tif (i != par) {\n\t\t\tdep[i] = dep[p] + 1;\n\t\t\tdfs1(i, p);\n\t\t}\n\t}\n}\n\nint lca(int x, int y) {\n\tif (dep[x] < dep[y])\n\t\tswap(x, y);\n\n\tfor (int i = 20; i >= 0; i--)\n\t\tif (dep[fa[i][x]] >= dep[y]) x = fa[i][x];\n\tif (x == y) return x;\n\n\tfor (int i = 20; i >= 0; i--)\n\t\tif (fa[i][x] != fa[i][y])\n\t\t\tx = fa[i][x], y = fa[i][y];\n\n\treturn fa[0][x];\n}\n\n// dsu\nint dsu_fa[MAXN];\ninline int find(int x) {\n\tif (dsu_fa[x] == x) return x;\n\treturn dsu_fa[x] = find(dsu_fa[x]);\n}\n\n// dfs_rank\nint dfn[MAXN], id[MAXN], siz[MAXN];\nint s[MAXN], a[MAXN];\nint ind;\nvoid dfs2(int p, int f) {\n\tsiz[p] = 1;\n\tdfn[p] = ++ind;\n\tid[ind] = p;\n\n\tfor (int j = 0; j < G[p].size(); j++) {\n\t\tint i = G[p][j], w = H[p][j];\n\t\tif (i == f) continue;\n\n\t\ts[i] = s[p] + w;\n\t\tdfs2(i, p);\n\t\tsiz[p] += siz[i];\n\t}\n}\n\n// bit\nstruct BIT {\n\tint tree[MAXN];\n\tint max_value;\n\n\tinline int lowbit(int x) {\n\t\treturn x & (-x);\n\t}\n\n\tinline void add(int x, int c) {\n\t\twhile (x <= max_value + 1) {\n\t\t\ttree[x] += c;\n\t\t\tx += lowbit(x);\n\t\t}\n\t}\n\n\tinline int qry(int x) {\n\t\tint ans = 0;\n\t\twhile (x > 0) {\n\t\t\tans += tree[x];\n\t\t\tx -= lowbit(x);\n\t\t}\n\t\treturn ans;\n\t}\n\n\tinline int qry2(int l, int r) {\n\t\treturn qry(r) - qry(l - 1);\n\t}\n\n\tinline void add2(int l, int r, int c) {\n\t\tadd(l, c);\n\t\tadd(r + 1, -c);\n\t}\n}t1;\n\ninline void upd(int x, int y, int l) {\n\twhile (x != l) {\n\t\tt1.add2(dfn[x], dfn[x] + siz[x] - 1, 1);\n\t\tx = fa[0][x];\n\t}\n\n\twhile (y != l) {\n\t\tt1.add2(dfn[y], dfn[y] + siz[y] - 1, 1);\n\t\ty = fa[0][y];\n\t}\n}\n\nsigned main()\n\n{\n\tn = read(), q = read();\n\tfor (int i = 1; i <= n; i++)\n\t\tdsu_fa[i] = i;\n\n\tfor (int i = 1; i <= q; i++) {\n\t\tfr[i] = read(), to[i] = read(), val[i] = read();\n\t\tint x = find(fr[i]), y = find(to[i]);\n\t\tif (x != y) {\n\t\t\tans[i] = true;\n\t\t\tdsu_fa[x] = y;\n\t\t\tG[fr[i]].push_back(to[i]), H[fr[i]].push_back(val[i]);\n\t\t\tG[to[i]].push_back(fr[i]), H[to[i]].push_back(val[i]);\n\t\t}\n\t}\n\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!vis[find(i)]) {\n\t\t\tvis[find(i)] = true;\n\t\t\tdfs1(i, i);\n\t\t\tdfs2(i, i);\n\t\t}\n\t}\n\n\tt1.max_value = n;\n\tfor (int i = 1; i <= q; i++) {\n\t\tif (ans[i]) continue;\n\t\tint x = fr[i], y = to[i];\n\n\t\tint l = lca(x, y);\n\t\tint v1 = s[x] + s[y] - 2 * s[l] + val[i];\n\t\tint v2 = t1.qry(dfn[x]) + t1.qry(dfn[y]) - 2 * t1.qry(dfn[l]);\n\t\tif (v2 == 0 && v1 % 2 == 1) {\n\t\t\tans[i] = true;\n\t\t\tupd(x, y, l);\n\t\t}\n\t}\n\n\tfor (int i = 1; i <= q; i++) {\n\t\tif (ans[i]) puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1627700680,
        "uid": 48981,
        "name": "LTb_",
        "ccfLevel": 0,
        "title": "CF1555F"
    }
]