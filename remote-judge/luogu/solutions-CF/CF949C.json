[
    {
        "content": "\u8fd9\u9898\u5982\u679c\u6ca1\u6709\u641e\u6e05\u695a\u9898\u610f\uff0c\u5176\u5b9e\u7ed3\u8bba\u662f\u5e76\u4e0d\u201c\u663e\u7136\u201d\u7684\n\n---\n\n\u9898\u76ee\u5176\u5b9e\u662f\u8ba9\u4f60\u4e3b\u52a8\u63a8\u8fdf\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u70b9\uff0c\u5e76\u5c06\u6240\u6709\u4f1a\u56e0\u6b64\u53d7\u5f71\u54cd\u7684\u70b9\u4e5f\u90fd\u8fde\u9501\u7740\u63a8\u8fdf\u4e0b\u53bb\uff0c\u95ee\u6700\u5c11\u4f1a\u6709\u51e0\u4e2a\u70b9\u63a8\u8fdf\n\n\u6ce8\u610f\u8fd9\u4e2a\u201d\u4e3b\u52a8\u63a8\u8fdf\u201c\uff0c\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u5df2\u7ecf\u6ee1\u8db3\u6761\u4ef6\u4e86\u4f60\u8fd8\u662f\u5f97\u8981\u63a8\u8fdf\u4e00\u4e2a\u70b9\n\n\u641e\u61c2\u4e86\u9898\u610f\uff0c\u63a5\u4e0b\u6765\u7684\u601d\u8def\u5c31\u597d\u7406\u89e3\u4e86\n\n---\n\n\u6211\u4eec\u53d1\u73b0\u201c\u63a8\u8fdf\u201d\u662f\u4e00\u79cd\u5355\u5411\u5173\u7cfb\uff0c\u5373\uff0c\u5982\u679c\u6211\u4f7f\u4f60\u4e0d\u5f97\u4e0d\u63a8\u8fdf\uff0c\u800c\u4f60\u5374\u4e0d\u4f1a\u4f7f\u6211\u4e0d\u5f97\u4e0d\u63a8\u8fdf\n\n\u5c06\u8fd9\u79cd\u5355\u5411\u5173\u7cfb\u8f6c\u6210\u56fe\u8bba\u7684\u5355\u5411\u8fb9\n\n<x,y>\u8fb9\u7684\u662f\u5426\u6dfb\u52a0\uff0c\u5373\u8be2\u95ee\u4e24\u8005\u7684\u662f\u5426\u6ee1\u8db3\n\n$$ u_x +1 \\equiv x_y  \\  \\  ( mod {h} ) $$\n\n\u53d1\u73b0\u4e00\u4e2a\u70b9\u53ea\u8981\u6709\u51fa\u5ea6\u90a3\u5b83\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\n\n\u5982A->B\uff0c\u9009A\u5fc5\u5e26B\uff0c\u9009B\u53ef\u65e0A\n\n\u6240\u4ee5\u9996\u5148\u53ef\u4ee5\u786e\u5b9a\u7b54\u6848\u8282\u70b9\u6ca1\u6709\u51fa\u5ea6\u7684\n\n\u5176\u6b21\uff0c\u7531\u4e8e\u5f3a\u8054\u901a\u5206\u91cf\u91cc\u7684\u70b9\u90fd\u662f\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u5176\u4e00\u63a8\u8fdf\uff0c\u53e6\u5916\u7684\u90fd\u5f97\u63a8\u8fdf\n\n\u4e8e\u662f\u7f29\u70b9\uff0c\u7ecf\u4fdd\u7559size\n\n\u95ee\u9898\u53d8\u6210\u5728DAG\u4e0a\u627e\u4e00\u4e2a\u6ca1\u6709\u51fa\u5ea6\u7684\u6700\u5c0f\u7684\u70b9\n\n$O(n)$\u626b\u4e00\u904d\u5373\u53ef\n\n---\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n\tx=0;char c=getchar();bool f=0;\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n\tif(x<0){putchar('-'),write(-x);}\n\telse{if(x>9)write(x/10);putchar('0'+x%10);}\n}\n\nconst int N=1e5+5;\nint h[N],en,H,n,m,scc[N],dfn[N],low[N],st[N],lim,cnt,du[N],sn,ans,sz[N],a[N];\nbool v[N];\n\nstruct edge{\n\tint n,u,v;\n}e[N];\n\nvoid add(int x,int y){\n\te[++en]=(edge){h[x],x,y};\n\th[x]=en;\n}\n\nvoid tarjan(int x){ //\u627e\u5f3a\u8054\u901a\u5206\u91cf\n\tlow[x]=dfn[x]=++cnt;\n\tv[x]=1;\n\tst[++lim]=x;\n\tfor(int i=h[x];i;i=e[i].n){\n\t\tint y=e[i].v;\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse{\n\t\t\tif(v[y]) low[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n\tif(low[x]==dfn[x]){\n\t\tint top;\n\t\tsn++;\n\t\tfor(;;){\n\t\t\ttop=st[lim--];\n\t\t\tscc[top]=sn;\n\t\t\tv[top]=0;\n\t\t\tsz[sn]++;\n\t\t\tif(top==x) return ;\n\t\t}\n\t}\n}\n\nsigned main(){\n\tread(n);read(m);read(H);\n\tfor(int i=1;i<=n;i++) read(a[i]);\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tread(x);read(y);\n\t\tif((a[x]+1)%H==a[y]) add(x,y); //\u8fb9\u7684\u6dfb\u52a0\uff08\u5173\u7cfb\u7684\u5224\u65ad\uff09\n\t\tif((a[y]+1)%H==a[x]) add(y,x);\n\t}\n\tfor(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i);\n\tfor(int i=1;i<=en;i++){\n\t\tint x=scc[e[i].u],y=scc[e[i].v]; //\u6839\u636e\u539f\u5148\u52a0\u7684\u8fb9\u5224\u5b9a\u51fa\u5ea6\n\t\tif(x^y) du[x]++;\n\t}\n\tsz[0]=0x3f3f3f3f;\n\tfor(int i=1;i<=sn;i++) if(!du[i]){\n\t\tif(sz[i]<sz[ans]) ans=i; //\u53d6\u65e0\u51fa\u5ea6\u8282\u70b9\u7684\u6700\u5c0fsize\n\t}\n\twrite(sz[ans]);puts(\"\");\n\tfor(int i=1;i<=n;i++) if(scc[i]==ans) //\u662f\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u5c31\u8f93\u51fa\n\t\twrite(i),putchar(' ');\n}\n```",
        "postTime": 1574318160,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF949C \u3010Data Center Maintenance\u3011"
    },
    {
        "content": "\u518d\u6446\uff0c\u5c31\u5e9f\u4e86\uff01\n\n### \u601d\u8def\n\n\u770b\u5230\u8fd9\u79cd\u9898\uff0c\u53ef\u4ee5\u60f3\u5230\u56fe\u8bba\u3002\u800c\u4f5c\u4e3a\u4e00\u9053\u56fe\u8bba\u9898\uff0c\u5efa\u6a21\u662f\u5f88\u91cd\u8981\u7684\u3002\n\n$m$ \u4efd\u8d44\u6599\uff0c\u6bcf\u4e00\u4efd\u90fd\u8981\u6709\u4e24\u4e2a\u53ef\u4ee5\u5728\u4e0d\u540c\u65f6\u95f4\u5907\u4efd\u7684\u6570\u636e\u4e2d\u5fc3\u3002\u800c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u81f3\u5c11\u63a8\u8fdf\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c\u90a3\u6211\u4eec\u81ea\u7136\u5730\u60f3\u5230\uff1a\u90a3\u5c31\u5c3d\u91cf\u63a8\u8fdf\u4e00\u4e2a\u4e0d\u4f1a\u5f71\u54cd\u5230\u522b\u7684\u6570\u636e\u4e2d\u5fc3\u7684\u3002\u8fd9\u5176\u5b9e\u5bf9\u6211\u4eec\u5efa\u8fb9\u6709\u5f88\u5927\u542f\u53d1\u3002\n\n\u5728\u56fe\u8bba\u91cc\u9762\uff0c\u5efa\u8fb9\u6709\u5f88\u591a\u601d\u8def\uff1a\n\n1.\u8868\u793a\u8fde\u63a5\uff0c\u53ef\u5230\u8fbe\u5173\u7cfb\uff08\u7c7b\u4f3c\u4e8e\u8def\u5f84\uff09\uff0c\u6bd4\u5982\u6211\u4eec\u8dd1\u6700\u77ed\u8def\u65f6\u7684\u5efa\u8fb9\uff0c\u6240\u4ee5\u5c31\u4f1a\u6709\u8fb9\u6743\u8868\u793a\u5230\u8fbe\u7684\u4ee3\u4ef7\uff0c\u5e76\u67e5\u96c6\u5efa\u7684\u8fb9\u4e5f\u662f\u8868\u793a\u53ef\u4ee5\u5230\u8fbe\u3002\n\n2.\u8868\u793a\u5dee\u8ddd\uff0c\u6bd4\u5982\u5728\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u91cc\u9762\u4e3a\u4e0d\u7b49\u5f0f\u5efa\u7684\u8fb9\u3002\n\n3.\u8868\u793a\u987a\u5e8f\uff0c\u6bd4\u5982\u4e00\u68f5\u6811\u7684\u7236\u4eb2\u5230\u513f\u5b50\u7ed3\u70b9\u5c31\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\u4e3a\u904d\u5386\u65f6\u8981\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u7236\u4eb2\u5230\u513f\u5b50\u3002\n\n**4.\u8868\u793a\u5f71\u54cd\uff0c\u5236\u7ea6\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u672c\u9898\u7684\u5efa\u6a21\u3002**\n\n\u4ec0\u4e48\u65f6\u5019\u63a8\u8fdf\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c\u4f1a\u5f71\u54cd\u5230\u522b\u7684\u6570\u636e\u4e2d\u5fc3\uff0c\u4ece\u800c\u8981\u63a8\u8fdf\u591a\u4e2a\uff1f\u90a3\u5c31\u662f\u5f53\u4e24\u4e2a\u6570\u636e\u4e2d\u5fc3\u88ab\u540c\u4e00\u4efd\u8d44\u6599\u7528\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u7ef4\u62a4\u65f6\u95f4\u76f8\u5dee $1$ \u7684\u65f6\u5019\uff0c\u63a8\u8fdf\u8f83\u65e9\u90a3\u4e2a\u4f1a\u5f71\u54cd\u8f83\u665a\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5bf9\u4e8e\u540c\u4e00\u4efd\u8d44\u6599\u5bf9\u5e94\u7684\u4e24\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c\u82e5\u7ef4\u62a4\u65f6\u95f4\u76f8\u5dee $1$ \u5c31\u4ece\u8f83\u65e9\u7684\u6570\u636e\u4e2d\u5fc3\u5411\u8f83\u665a\u7684\u8fde\u8fb9\uff0c\u8868\u793a\u63a8\u8fdf\u4e86\u8f83\u65e9\u7684\uff0c\u8f83\u665a\u7684\u5c31\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u4ece\u800c\u4e5f\u4f1a\u63a8\u8fdf\u3002\n\n\u90a3\u4e48\u73b0\u5728\u7684\u56fe\u91cc\u9762\uff0c\u5982\u679c\u6709\u73af\uff0c\u73af\u91cc\u9762\u6709\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u9700\u8981\u63a8\u8fdf\uff0c\u6574\u4e2a\u73af\u91cc\u9762\u7684\u90fd\u9700\u8981\u63a8\u8fdf\u3002\u4e8e\u662f\u6211\u4eec\u505a\u4e00\u4e2a Tarjan \u7f29\u70b9\uff0c\u8d2a\u5fc3\u5730\u9009\u51fa\u70b9\u6570\u6700\u5c11\u7684\u51fa\u5ea6\u4e3a $0$ \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u81f3\u6b64\uff0c\u5c31\u5f88\u6e05\u695a\u4e86\u3002\n\n### Code\n\n\u53ef\u80fd\u6709\u6ce8\u91ca\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define gc getchar()\n#define vc vector\n#define pii pair<int, int>\n#define St string\n#define em emplace\n#define eb emplace_back\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, m, h, t[N], a, b, scc[N], dfn[N], low[N], sz[N], cnt, tot, ans = N, pos, out[N];\nbool ons[N];\nvc <int> og[N];\nstack <int> stk;\n\ninline int read() {\n    int x = 0, f = 0; char c = gc;\n    while(c < '0' || c > '9') f |= c == '-', c = gc;\n    while(c >= '0' && c <= '9') x = (x << 1) + (x << 3) + (c ^ 48), c = gc;\n    return f ? -x : x;\n}\n\nvoid tarjan(int u) {//\u7f29\u70b9\u3002\n    stk.em(u), ons[u] = 1;\n    dfn[u] = low[u] = ++tot;\n    for (auto v : og[u]) {\n        if(!dfn[v]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        }\n        else if(ons[v]) low[u] = min(low[u], dfn[v]);\n    }\n    if(dfn[u] == low[u]) {\n        ++cnt;\n        while(!stk.empty()) {\n            int cr = stk.top(); stk.pop();\n            scc[cr] = cnt, ons[cr] = 0;\n            sz[cnt]++;//\u8bb0\u5f97\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\uff08\u70b9\u6570\uff09\u3002\n            if(cr == u) break;\n        }\n    }\n    return ;\n}\n\nint main() {\n    n = read(), m = read(), h = read();\n    for (int i = 1; i <= n; ++i) t[i] = read();\n    while(m--) {\n        a = read(), b = read();\n        if((t[a] + 1) % h == t[b]) og[a].eb(b);\n        if((t[b] + 1) % h == t[a]) og[b].eb(a);//\u5efa\u8fb9\uff0c\u8bb0\u5f97\u52a0\u7684\u65f6\u5019\u53d6\u6a21\u3002\n    }\n    for (int i = 1; i <= n; ++i) {\n        if(!dfn[i]) tarjan(i);\n    }\n    for (int i = 1; i <= n; ++i)  {\n        int fx = scc[i];\n        for (auto j : og[i]){\n            int fy = scc[j];\n            if(fx != fy) out[fx]++;//\u8bb0\u5f55\u51fa\u5ea6\u3002\n        }\n    }\n    for (int i = 1; i <= cnt; ++i){\n        if(!out[i] && sz[i] < ans) {\n            ans = sz[i];\n            pos = i;//\u9009\u62e9\u51fa\u5ea6\u4e3a0\u4e14\u70b9\u6570\u6700\u5c0f\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n        }\n    }\n    cout << ans << \"\\n\";\n    for (int i = 1; i <= n; ++i){\n        if(scc[i] == pos) cout << i << ' ';//\u8f93\u51fa\u7b54\u6848\u3002\n    }\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1668139393,
        "uid": 483928,
        "name": "Ziqqurat",
        "ccfLevel": 5,
        "title": "CF949C \u9898\u89e3"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/xixike/p/15496428.html)\n\n# Description\n\n> [\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF949C)\n\n## \u9898\u76ee\u63cf\u8ff0\n\n>\u7ed9\u51fa $n$ \u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c$m$ \u4efd\u8d44\u6599\u3002\u8981\u628a $m$ \u4efd\u8d44\u6599\u653e\u5230\u5176\u4e2d\u7684\u4e24\u4e2a\u6570\u636e\u4e2d\u5fc3\u5907\u4efd\uff0c\u9700\u8981\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u90fd\u53ef\u4ee5\u81f3\u5c11\u5728\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u5907\u4efd\u3002\u5b9a\u4e49\u4e00\u5929\u6709 $h$ \u4e2a\u5c0f\u65f6\uff0c\u6bcf\u4e2a\u6570\u636e\u4e2d\u5fc3\u5728\u4e00\u5929\u5185\u6709\u4e00\u5c0f\u65f6\u7ef4\u62a4\u65f6\u95f4 $u_i$\uff08$0 \\leq u_i < h$\uff09\uff0c\u5728\u8fd9\u4e00\u5c0f\u65f6\u5185\u8be5\u6570\u636e\u4e2d\u5fc3\u65e0\u6cd5\u8fdb\u884c\u5907\u4efd\u3002\n>\n>\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u9700\u8981\u628a\u4e00\u4e9b\u6570\u636e\u4e2d\u5fc3\u7684\u7ef4\u62a4\u65f6\u95f4\u5411\u540e\u63a8\u8fdf 1 \u5c0f\u65f6\uff08\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u7684\u7ef4\u62a4\u65f6\u95f4\u7684\u5411\u540e\u63a8\u8fdf\u53ef\u80fd\u5bfc\u81f4\u6709\u7684\u8d44\u6599\u65e0\u6cd5\u5728\u4efb\u610f\u65f6\u523b\u8fdb\u884c\u5907\u4efd\u4e14\u82e5 $u_i = h - 1$ \u90a3\u4e48\u63a8\u8fdf\u540e $u_i = 0$\uff09\uff0c\u8bf7\u4f60\u6c42\u51fa\u6700\u5c11\u9700\u8981\u5411\u540e\u63a8\u8fdf\u591a\u5c11\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c\u5e76\u628a\u8fd9\u4e9b\u6570\u636e\u4e2d\u5fc3\u7684\u7f16\u53f7\u8f93\u51fa\u51fa\u6765\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n>\u7b2c\u4e00\u884c 3 \u4e2a\u6574\u6570 $n$\uff0c$m$\uff0c$h$\uff0c\u542b\u4e49\u5982\u4e0a\u3002\n>\n>\u7b2c\u4e8c\u884c $n$ \u4e2a\u6574\u6570\uff0c\u4e3a $u_i$ \u5230 $u_n$\u3002\n>\n>\u63a5\u4e0b\u6765 $m$ \u884c\uff0c\u6bcf\u884c 2 \u4e2a\u6574\u6570$c_1$\uff0c$c_2$\uff08$u_{c_1} \\neq u_{c_2}$\uff09\uff0c\u5206\u522b\u8868\u793a\u7b2c $i$ \u4efd\u8d44\u6599\u53ef\u4ee5\u5728\u54ea\u4e24\u4e2a\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u5907\u4efd\u3002\n\n**\u6ce8\u610f\uff1a\u8f93\u5165\u7684 $u_{c_1} \\ne u_{c_2}$\uff0c\u610f\u5473\u7740\u521a\u5f00\u59cb\u65f6\u4efb\u610f\u8d44\u6599\u90fd\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u95f4\u8fdb\u884c\u5907\u4efd\u3002**\n\n## \u8f93\u51fa\u683c\u5f0f\n\n>\u7b2c\u4e00\u884c 1 \u4e2a\u6574\u6570 $k$\uff0c\u8868\u793a\u6700\u5c11\u9700\u8981\u63a8\u8fdf $k$ \u4e2a\u6570\u636e\u4e2d\u5fc3\u3002\n>\n>\u7b2c\u4e8c\u884c $k$ \u4e2a\u6574\u6570\uff0c\u5206\u522b\u4e3a $x_1$ \u5230 $x_k$\uff0c\u8868\u793a\u9700\u8981\u63a8\u8fdf\u7684\u6570\u636e\u4e2d\u5fc3\u7684\u7f16\u53f7\u3002\n\n# Solution\n\n\u901a\u8fc7\u89c2\u5bdf\u6837\u4f8b\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0d\u7ba1\u4f60\u521d\u59cb\u65f6\u662f\u5426\u5408\u6cd5\u90fd\u5fc5\u987b\u6709\u5411\u540e\u63a8\u8fdf\u7684\u6570\u636e\u4e2d\u5fc3\uff0c\u5373\u81f3\u5c11\u4e00\u4e2a\u3002\n\n\u6240\u4ee5\u9898\u76ee\u5c31\u662f\u8981\u6c42\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u70b9 +1\uff0c\u5e76\u5c06\u56e0\u6b64\u800c\u88ab\u8feb\u63a8\u8fdf\u7684\u70b9\u90fd\u63a8\u8fdf 1\uff0c\u7136\u540e\u8ba1\u7b97\u6700\u5c11\u63a8\u8fdf\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u627e\u5230\u54ea\u4e9b\u70b9\u662f\u88ab\u8feb\u63a8\u8fdf\u7684\u5462\uff1f\n\n\u5bf9\u4e8e\u4e00\u7ec4\u6761\u4ef6 $x$ \u548c $y$\uff1a\n\n- \u82e5 ${a_x + 1}\\equiv{a_y} \\pmod {h}$\uff0c\u6211\u4eec\u5c31\u4ece $x$ \u5411 $y$ \u5efa\u4e00\u6761\u8fb9\u3002\n\n- \u82e5 ${a_y + 1}\\equiv{a_x} \\pmod {h}$\uff0c\u6211\u4eec\u5c31\u4ece $y$ \u5411 $x$ \u5efa\u4e00\u6761\u8fb9\u3002\n\n\u7136\u540e\u5c31\u5f62\u6210\u4e86\u4e00\u5f20 $DAG$\uff0c\u8003\u8651\u5230\u5728\u4e00\u4e2a\u73af\u91cc\u7684\u70b9\uff0c\u4e0d\u7ba1\u9009\u54ea\u4e00\u4e2a\u6574\u4e2a\u73af\u90fd\u4f1a\u88ab\u9009\uff0c\u6240\u4ee5\u53ef\u4ee5 $Tarjan$ \u7f29\u70b9\u3002\n\n\u7136\u540e\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5\u9009\u62e9\u51fa\u5ea6\u4e0d\u4e3a 0 \u7684\u70b9\uff0c\u90a3\u4e48\u5b83\u6307\u5411\u7684\u90a3\u4e2a\u70b9\u4e5f\u4f1a\u88ab\u8feb\u9009\u4e0a\uff0c\u8fd9\u660e\u663e\u4e0d\u5982\u53ea\u9009\u88ab\u6307\u5411\u7684\u70b9\u4f18\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u627e\u51fa\u5ea6\u4e3a 0 \u7684\u70b9\u4e2d\u7684 $siz$ \u6700\u5c0f\u7684\u70b9\u5373\u53ef\u3002\n\n\u5982\u679c\u8fd8\u662f\u65e0\u6cd5\u7406\u89e3\u7684\u8bdd\uff0c\u53ef\u4ee5\u770b\u7740\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u3002\n\n# Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint n, m, h;\nint a[N];\nstruct node{\n    int u, v, nxt;\n}edge[N << 1];\nint head[N], tot;\nint low[N], dfn[N], tim;\nint stk[N], top, t[N];\nint siz[N], scc[N], cnt;\nint out[N];\n\ninline void add(int x, int y){\n    edge[++tot] = (node){x, y, head[x]};\n    head[x] = tot;\n}\n\nvoid tarjan(int x){\n    low[x] = dfn[x] = ++tim;\n    stk[++top] = x;\n    t[x] = 1;\n    for(int i = head[x]; i; i = edge[i].nxt){\n        int y = edge[i].v;\n        if(!dfn[y])tarjan(y), low[x] = min(low[x], low[y]);\n        else if(t[y]) low[x] = min(low[x], dfn[y]);\n    }\n    if(low[x] == dfn[x]){\n        cnt++;\n        do{\n            siz[cnt]++;\n            scc[stk[top]] = cnt;\n            t[stk[top--]] = 0;\n        }while(stk[top + 1] != x);\n    }\n}\n\nint main(){\n    scanf(\"%d%d%d\", &n, &m, &h);\n    for(int i = 1; i <= n; ++i)\n        scanf(\"%d\", &a[i]);\n    for(int i = 1, x, y; i <= m; ++i){\n        scanf(\"%d%d\", &x, &y);\n        if((a[x] + 1) % h == a[y]) add(x, y);\n        if((a[y] + 1) % h == a[x]) add(y, x);\n    }\n    for(int i = 1; i <= n; ++i)\n        if(!dfn[i]) tarjan(i);\n    for(int i = 1; i <= tot; ++i){\n        int u = scc[edge[i].u], v = scc[edge[i].v];\n        if(u != v) out[u]++;\n    }\n    int ans = 0;\n    siz[0] = 1e9;\n    for(int i = 1; i <= cnt; ++i) \n        if(!out[i]) ans = siz[ans] > siz[i] ? i : ans;\n    printf(\"%d\\n\", siz[ans]);\n    for(int i = 1; i <= n; ++i)\n        if(scc[i] == ans) printf(\"%d \", i);\n    puts(\"\");\n    return 0;\n}\n```\n\n# End\n",
        "postTime": 1635775808,
        "uid": 158846,
        "name": "xixike",
        "ccfLevel": 0,
        "title": "CF949C Data Center Maintenance \u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3\uff1aCF949C Data Center Maintenance\n\n\u8fd9\u9053\u9898\u4e3b\u8981\u8fd8\u5728\u4e8e\u9605\u8bfb\u7406\u89e3\uff0c\u660e\u767d\u5b83\u60f3\u8ba9\u5e72\u4ec0\u4e48\uff0c\u53ef\u4ee5\u5728\u9898\u610f\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u5c06\u9898\u76ee\u6539\u53d8\u4e00\u4e0b\uff0c\u4f7f\u5f97\u66f4\u597d\u7406\u89e3\u3002\n\n\u5176\u4e2d\u4e00\u79cd\u601d\u60f3\u53ef\u4ee5\u770b\u4e3a\uff1an\u4e2a\u8282\u70b9\uff0cm\u6761\u8fb9\u7684\u6709\u8272\u56fe\uff0c\u6bcf\u6b21\u66f4\u65b0\u65f6\u95f4\u5f53\u4f5c\u5b83\u7684\u989c\u8272\uff0c\u82e5\u7b2ci\u4e2a\u7528\u6237\u4f7f\u7528\u76842\u4e2a\u8282\u70b9\uff0c\u5219\u5728\u4e24\u70b9\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761\u8fb9\u3002\n\n\u8be2\u95ee\u7684\u662f\uff1a\u6709\u591a\u5c11\u6761\u8fb9\u5b83\u8fde\u63a5\u7684\u662f\u4e24\u4e2a\u989c\u8272\u4e0d\u540c\u7684\u8282\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6700\u5c11\u7684\u8282\u70b9\uff0c\u4f7f\u8fd9\u4e9b\u8282\u70b9\u7684\u989c\u8272\u53d8\u4e3a$w_i+1 \\ mod \\ h$\uff0c\u4ecd\u8981\u6709\u4efb\u610f\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u8282\u70b9\u989c\u8272\u4e0d\u540c\u3002\n\n\u603b\u7ed3\u6765\u8bf4\u5c31\u662f\u6c42\u65b0\u7684\u6709\u5411\u56fe\u7684\u6700\u5c0f\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4fdd\u8bc1\u65e0\u51fa\u8fb9\u3002\uff08\u5426\u5219\u5c31\u4f1a\u548c\u522b\u7684\u8282\u70b9\u989c\u8272\u76f8\u540c\uff09\n\n---\n\n\u4ee3\u7801\uff1a\n\n```c\n//#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include <bits/stdc++.h>\n\nconst int MAXN = 1e5 + 5;\nconst int INF = 0x3f3f3f3f;\nstruct Edge {\n    int x, y, nxt;\n} e[MAXN << 1];\nbool instack[MAXN];\nint a[MAXN], head[MAXN], node[MAXN];\nint n, m, h, cnt, tot, top, ans, TimeClock;\nint belong[MAXN], dfn[MAXN], low[MAXN], stack[MAXN], size[MAXN];\n\ninline int read() {\n    int X = 0, flag = 0;\n    char ch = 0;\n    while (!isdigit(ch))\n        flag |= ch == '-', ch = getchar();\n    while (isdigit(ch))\n        X = (X << 3) + (X << 1) + (ch ^ 48), ch = getchar();\n    return flag ? -X : X;\n}\n\ninline void write(int x) {\n    if (x < 0)\n        x = -x, putchar('-');\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\n\ninline void add_edge(int x, int y) {\n    e[++cnt].x = x, e[cnt].y = y;\n    e[cnt].nxt = head[x], head[x] = cnt;\n}\n\ninline void Tarjan(int x) {\n\tlow[x] = dfn[x] = ++TimeClock;\n    stack[++top] = x, instack[x] = true;\n\tfor (register int i = head[x]; i; i = e[i].nxt) {\n\t\tif (!dfn[e[i].y]) {\n\t\t\tTarjan(e[i].y);\n\t\t\tlow[x] = std::min(low[x], low[e[i].y]);\n\t\t} else {\n\t\t\tif (instack[e[i].y])\n\t\t\t\tlow[x] = std::min(low[x], dfn[e[i].y]);\n\t\t}\n\t}\n\tif (dfn[x] == low[x]) {\n\t\ttot++;\n\t\twhile (stack[top + 1] != x) {\n            size[tot]++;\n\t\t\tbelong[stack[top]] = tot;\n\t\t\tinstack[stack[top--]] = false;\n\t\t}\n\t}\n}\n\nsigned main() {\n#ifndef ONLINE_JUDGE\n#ifdef LOCAL\n    freopen(\"testdata.in\", \"r\", stdin);\n    freopen(\"testdata.out\", \"w\", stdout);\n#endif\n#ifndef LOCAL\n    freopen(\"CF949C.in\", \"r\", stdin);\n    freopen(\"CF949C.out\", \"w\", stdout);\n#endif\n#endif\n    n = read(), m = read(), h = read();\n\tfor (int i = 1; i <= n; i++)\n\t\ta[i] = read();\n\tfor (int i = 1, x, y; i <= m; i++) {\n\t\tx = read(), y = read();\n\t\tif ((a[x] + 1) % h == a[y])\n\t\t\tadd_edge(x, y);\n\t\tif ((a[y] + 1) % h == a[x])\n\t\t\tadd_edge(y, x);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\tTarjan(i);\n\tfor (int i = 1, x, y; i <= cnt; i++) {\n\t\tx = belong[e[i].x], y = belong[e[i].y];\n\t\tif (x ^ y)\n\t\t\tnode[x]++;\n\t}\n\tsize[0] = INF;\n\tfor (int i = 1; i <= tot; i++)\n\t\tif (!node[i])\n\t\t\tif (size[i] < size[ans])\n\t\t\t\tans = i;\n\twrite(size[ans]), putchar('\\n');\n\tfor (int i = 1; i <= n; i++)\n\t\tif (belong[i] == ans)\n\t\t\twrite(i), putchar(' ');\n    return 0;\n}\n```\n\n",
        "postTime": 1599224683,
        "uid": 84897,
        "name": "Hercules",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF949C \u3010Data Center Maintenance\u3011"
    },
    {
        "content": "## \u7b97\u6cd5\n- Tarjan\n\n\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u89e3\u91ca Tarjan \u7f29\u70b9\u539f\u7406\u4e86\uff0c\u5982\u679c\u60f3\u4e86\u89e3\u89c1 [P3387 \u3010\u6a21\u677f\u3011\u7f29\u70b9](https://www.luogu.com.cn/problem/P3387) \u7684 [\u9898\u89e3\u533a](https://www.luogu.com.cn/problem/solution/P3387)\u3002\n## \u524d\u8a00\n\u8fd9\u9898\u7684\u4e3b\u8981\u96be\u5ea6\u5c31\u5728\u5efa\u56fe\u4e0a\u3002\n\n\u5173\u952e\u662f\u4e00\u773c\u770b\u4e0a\u53bb\u548c\u56fe\u8bba\u597d\u50cf\u6ca1\u4ec0\u4e48\u5927\u5173\u7cfb\u3002\n\n\u522b\u4eba\u8bf4\u8fd9\u662f\u56fe\u8bba\u7684\u65f6\u5019\u6211\u8fd8\u4ee5\u4e3a\u662f\u4e8c\u5206\u56fe\uff08\n\n\u597d\u4e86\uff0c\u8fdb\u5165\u6b63\u9898\uff1a\n## \u601d\u8def\n\u6211\u4eec\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u63a8\u8fdf\u4e00\u4e2a\u5c0f\u65f6\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u548c\u5b83\u5171\u540c\u5b58\u50a8\u67d0\u4e2a\u6587\u4ef6\u7684\u53e6\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u3002\n\n\u5982\u679c\u6570\u636e\u4e2d\u5fc3 $A$ \u7684\u63a8\u8fdf\u4f1a\u5f71\u54cd\u6570\u636e\u4e2d\u5fc3 $B$\uff0c\u90a3\u4e48 $A$ \u5411 $B$ \u8fde\u8fb9\u3002\n\n\u90a3\u4e48\uff0c\u4ec0\u4e48\u60c5\u51b5\u4f1a\u5176\u5b83\u7684\u6570\u636e\u4e2d\u5fc3\u5462\uff1f\n\n\u5047\u5b9a\u5b58\u50a8\u6570\u636e\u4e2d\u5fc3 $A,B$ \u5b58\u50a8\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c $A+1\\equiv B(\\mod h)$\uff0c\u90a3\u4e48\u5efa\u4e00\u6761 $A$ \u5411 $B$ \u7684\u8fb9\u3002\n\n\u5982\u679c\u6709\u73af\uff0c\u90a3\u4e48\u73af\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u5ef6\u8fdf\uff0c\u6574\u4e2a\u73af\u90fd\u5fc5\u987b\u5ef6\u8fdf\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u73af\u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\u5373\u53ef\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u56fe\u7528 Tarjan \u8fdb\u884c\u7f29\u70b9\u3002\n\n\u7f29\u5b8c\u70b9\uff0c\u627e\u5230\u6bcf\u6761\u94fe\u7684\u672b\u7aef\uff0c\u5373\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u3002\n\n\u53ef\u662f\uff0c\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u4e2d\u70b9\u6570\u6700\u5c11\u7684\u600e\u4e48\u627e\uff1f\n\n\u7528\u4e00\u4e2a $res$ \u6570\u7ec4\u5b58\u50a8 SCC \u7684\u70b9\u6570\u3002\n\n\u6700\u540e\u626b\u63cf\u4e00\u904d\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u7684 $res$ \u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int maxn=1e5+5;//\u5927\u5c0f\u6211\u778e\u5f00\u7684\uff0c\u8fd9\u4e48\u5927\u5751\u5b9a\u591f/doge\nstack<int> s;//\u6808\nint n,m,h;//\u5982\u9898\u76ee\nint SCC[maxn];//\u7b2ci\u4e2a\u70b9\u6240\u5728\u7684SCC\u7f16\u53f7\nbool vis[maxn];//\u662f\u5426\u5728\u6808\u4e2d\nint dfn[maxn],low[maxn];\nvector<int> nbr[maxn];//vector\u5b58\u8fb9\nint cnt;//\u65f6\u95f4\u6233\nint sum;//SCC\u7f16\u53f7\nstruct node{//\u8bb0\u5f55\u8fb9\u4fe1\u606f\n\tint u,v;\n}edge[maxn];\nint res[maxn];//SCC\u6743\u503c \nint w[maxn];//\u5355\u70b9\u6743\u503c \nint out[maxn];//\u7edf\u8ba1\u51fa\u5ea6\nvoid Tarjan(int u){//SCC\u677f\u5b50\n\ts.push(u);\n\tvis[u]=1;\n\tdfn[u]=low[u]=++cnt;\n\tfor(int i=0;i<nbr[u].size();i++){\n\t\tint nxt=nbr[u][i];\n\t\tif(dfn[nxt]==0){\n\t\t\tTarjan(nxt);\n\t\t\tlow[u]=min(low[u],low[nxt]);\n\t\t}\n\t\telse if(vis[nxt]){\n\t\t\tlow[u]=min(low[u],dfn[nxt]);\n\t\t}\n\t}\n\tif(dfn[u]==low[u]){\n\t\tsum++;\n\t\twhile(s.top()!=u){\n\t\t\tint cur=s.top();\n\t\t\ts.pop();\n\t\t\tvis[cur]=0;\n\t\t\tSCC[cur]=sum;\n\t\t\tres[sum]+=w[cur];//\u7edf\u8ba1SCC\u6743\u503c \n\t\t}\n\t\ts.pop();\n\t\tvis[u]=0;\n\t\tSCC[u]=sum;\n\t\tres[sum]+=w[u];//\u7edf\u8ba1SCC\u6743\u503c \n\t}\n\treturn;\n}\nint t[maxn];\nint main(){\n\tcin>>n>>m>>h;\n\tfor(int i=1;i<=n;i++){\n\t\tw[i]=1;\n\t\tcin>>t[i];\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tif((t[x]+1)%h==t[y]%h){\n\t\t\tnbr[x].push_back(y);\n\t\t\tedge[i]={x,y};\n\t\t}\n\t\tif((t[y]+1)%h==t[x]%h){\n\t\t\tnbr[y].push_back(x);\n\t\t\tedge[i]={x,y};\n\t\t}\n\t}\n\tcnt=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(dfn[i]==0){\n\t\t\tTarjan(i);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tif(edge[i].u==0){\n\t\t\tcontinue;\n\t\t}\n\t\tint fx=SCC[edge[i].u];\n\t\tint fy=SCC[edge[i].v];\n\t\tint x=edge[i].u;\n\t\tint y=edge[i].v;\n\t\tif(fx!=fy){\n\t\t\tif((t[x]+1)%h==t[y]%h){\n\t\t\t\tout[fx]++;\n\t\t\t}\n\t\t\tif((t[y]+1)%h==t[x]%h){\n\t\t\t\tout[fy]++;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=1e9;\n\tint pos=0;\n\tfor(int i=1;i<=sum;i++){\n\t\tif(out[i]==0){\n\t\t\tif(res[i]<ans){\n\t\t\t\tans=res[i];\n\t\t\t\tpos=i;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tif(SCC[i]==pos){\n\t\t\tcout<<i<<' ';\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1644586698,
        "uid": 357311,
        "name": "little_cindy",
        "ccfLevel": 6,
        "title": "CF949C Data Center Maintenance \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\n\nn\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u503ca[i]\u3002m\u4e2a\u6761\u4ef6\uff0c\u6bcf\u4e2a\u6761\u4ef6\u67092\u4e2a\u70b9x\uff0cy\u4e14a[x]!=a[y]\u3002\u9009\u62e9\u6700\u5c11\u7684k\u4e2a\u70b9\uff0c\u4f7f\u5176\u503c\u52a01\u540e\uff0cm\u4e2a\u6761\u4ef6\u4ecd\u6210\u7acb\u3002\n\n\u601d\u8def\uff1a\n\n\u5bf9\u4e8em\u4e2a\u6761\u4ef6\uff0c\u82e5(a[x]+1)%h=a[y]\uff0c\u5219\u52a0\u4e0ax->y\u8fd9\u6761\u8fb9\uff1b\u82e5(a[y]+1)%h=a[x]\uff0c\u5219\u52a0\u4e0ay->x\u8fd9\u6761\u8fb9\u3002\u5219\u6211\u4eec\u53ea\u9700\u627e\u5230\u6700\u5c0f\u7684\u4e14\u51fa\u5ea6\u4e3a0\u7684SCC\u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\n#include <stack>\n#define moder 1e9 + 7 \nusing namespace std ;\nconst int N = 1e5 +10 ;\nvector <int> G[N] ;\nstack <int> S ;\nbool vis[N] ;\nint belong[N],low[N],dfn[N],num[N],b[N],a[N] ;\nint dfn_max=0,scc=0,n,m,k ; \nvoid Tarjan(int now){\n\tdfn[now]=low[now]=++dfn_max;\n\tS.push(now),vis[now]=true ; \n\tfor (int i=0;i<G[now].size();i++){\n\t\tint to=G[now][i] ;\n\t\tif (!dfn[to]){\n\t\t\tTarjan(to) ;\n\t\t\tlow[now]=min(low[now],low[to]) ;\n\t\t}\n\t\telse if (vis[to]) low[now]=min(low[now],dfn[to]);\n\t}\n\tif (dfn[now]==low[now]){\n\t\tscc++ ;\n\t\twhile (1){\n\t\t\tint x=S.top();S.pop() ;\n\t\t\tbelong[x]=scc ;\n\t\t\tnum[scc]++ ;\n\t\t\tif (x==now) break ;\n\t\t}\n\t}\n\treturn ;\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k) ;\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&a[i]) ;\n\tfor (int i=1;i<=m;i++) {\n\t\tint u,v ;\n\t\tscanf(\"%d%d\",&u,&v) ;\n\t\tif ((a[u]+1)%k==a[v]) G[u].push_back(v) ;\n\t\tif ((a[v]+1)%k==a[u]) G[v].push_back(u) ;\n\t}\n\tfor (int i=1;i<=n;i++)\n\tif (!dfn[i]) Tarjan(i) ;\n\tfor (int i=1;i<=n;i++){\n\t\tfor (int j=0;j<G[i].size();j++){\n\t\t\tint x=G[i][j] ;\n\t\t\tif (belong[x]!=belong[i]) b[belong[i]]++ ;\n\t\t}\n\t}\n\tint ans,MINI=moder;\n\tfor (int i=1;i<=n;i++){\n\t\tif (!b[belong[i]] && num[belong[i]]<MINI){\n\t\t\tMINI=num[belong[i]] ;\n\t\t\tans=belong[i] ; \n\t\t}\n\t}\n\tprintf(\"%d\\n\",MINI) ;\n\tfor (int i=1;i<=n;i++)\n\tif (ans==belong[i]) printf(\"%d \",i) ;\n\treturn 0 ; \n}\n```",
        "postTime": 1522407464,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF949C \u3010Data Center Maintenance\u3011"
    }
]