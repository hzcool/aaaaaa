[
    {
        "content": "**\u9898\u610f**\uff1a\n\n\u6709$n$\u4e2a\u602a\u7269\uff0c\u6bcf\u4e2a\u602a\u7269\u6709\u653b\u51fb\u529b$a_i$\u70b9\uff1b\u6709$m$\u4e2a\u82f1\u96c4\uff0c\u6bcf\u4e2a\u82f1\u96c4\u6709\u653b\u51fb\u529b$p_i$\u70b9\uff0c\u8010\u529b$s_{i}$\u70b9\u3002\n\n\u602a\u7269\u9700\u8981\u88ab\u4f9d\u6b21\u6740\u6b7b(\u6309\u8f93\u5165\u987a\u5e8f)\u3002\n\n\u6bcf\u4e00\u5929\u53ef\u4ee5\u6311\u9009\u4e00\u4e2a\u82f1\u96c4\u53bb\u6740\u602a\u7269\uff0c\u4ed6\u53ef\u4ee5\u6740\u6b7b\u7684\u602a\u7269\u653b\u51fb\u529b\u5c0f\u4e8e\u7b49\u4e8e\u4ed6\u672c\u8eab(\u5373$a\\leq p$)\uff0c\u6bcf\u5929\u6700\u591a\u53ef\u4ee5\u6740\u6b7b$s$\u4e2a\u602a\u7269\u3002(\u6bcf\u4e2a\u82f1\u96c4\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6b21)\n\n\u95ee\u6700\u5c11\u9700\u8981\u591a\u5c11\u5929\u53ef\u4ee5\u6740\u6b7b\u6240\u6709\u602a\u7269(\u4e0d\u80fd\u5219\u8f93\u51fa$-1$)\u3002\n\n**\u5206\u6790**\uff1a\n\n$(1)$\u6211\u4eec\u627e\u5230\u602a\u7269\u7684\u6700\u5927\u653b\u51fb\u529b\u548c\u82f1\u96c4\u7684\u6700\u5927\u653b\u51fb\u529b\uff0c\u5224\u65ad\u662f\u5426\u8981\u8f93\u51fa$-1$\u3002\n\n$(2)$\u5c06\u82f1\u96c4\u6309\u653b\u51fb\u529b$p$\u503c\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u82f1\u96c4$b[i]$\u800c\u8a00\uff0c\u5982\u679c\u5bf9\u4e8e$i<j\\leq m$\uff0c\u4e14\u6709$b[i].s<b[j].s$\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u82f1\u96c4$j$\uff0c\u800c\u4e0d\u662f\u82f1\u96c4$i$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a$b[i].s$\u66ff\u6362\u4e3a$b[j].s$\uff08\u610f\u601d\u4e3a\u9009\u62e9\u82f1\u96c4$i$\u65f6\u9009\u62e9\u82f1\u96c4$j$\uff09\u3002\n\n$(3)$\u56e0\u6b64\u6211\u4eec\u8fdb\u884c\u540e\u7f00\u64cd\u4f5c\u5c06$b[i].s$\u6539\u4e3a\u82f1\u96c4$i$~$n$\u4e2d\u6700\u5927\u7684\u8010\u529b\u503c\uff0c\u4ee5\u4fbf\u8fdb\u884c\u4e0b\u4e00\u6b65\u3002\n\n$(4)$\u5bf9\u4e8e\u67d0\u4e2a\u602a\u7269\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u82f1\u96c4\uff0c\u4ed6\u7684\u653b\u51fb\u529b\u521a\u597d\u5927\u4e8e\u7b49\u4e8e\u8be5\u602a\u7269\uff08\u4e8c\u5206\uff09\u3002\u6211\u4eec\u4e0a\u4e00\u6b65\u5c06\u8be5\u82f1\u96c4\u7684\u8010\u529b\u6539\u4e3a\u4e86\u540e\u7f00\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u4fbf\u9009\u62e9\u8fd9\u4e2a\u82f1\u96c4\u3002\n\n$(5)$\u6211\u4eec\u4ece\u7b2c\u4e00\u5929\u5f00\u59cb\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u602a\u7269\uff0c\u627e\u5230\u5f53\u524d\u5929\u6211\u4eec\u53ef\u4ee5\u6740\u6b7b\u6700\u591a\u602a\u7269\u7684\u82f1\u96c4\uff0c\u5982\u679c\u5bf9\u4e8e\u67d0\u4e2a\u602a\u7269\u800c\u8a00\uff0c\u6740\u6b7b\u4ed6\u7684\u4eba\u7684\u8010\u529b\uff08\u6211\u4eec\u8fdb\u884c\u4e86\u540e\u7f00\u64cd\u4f5c\uff09\u4e0d\u8db3\u4ee5\u652f\u6491\u8be5\u5929\uff0c\u6211\u4eec\u5c06\u8be5\u602a\u7269\u653e\u5230\u4e0b\u4e00\u5929\uff0c\u5e76\u91cd\u590d\u64cd\u4f5c\uff0c\u76f4\u81f3\u6740\u6b7b\u6240\u6709\u602a\u7269\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u7684\u91cf\u6709\uff1a\u5f53\u524d\u7684\u5929\u6570$k$\uff0c\u6628\u5929\u6740\u6b7b\u7684\u6700\u540e\u4e00\u53ea\u602a\u7269\u7684\u7f16\u53f7$last$\uff0c\u4eca\u5929\u6240\u80fd\u6740\u6b7b\u7684\u6700\u591a\u602a\u7269\u6570\uff08\u8868\u73b0\u4e3a\u6240\u9700\u8981\u7684\u6700\u5c0f\u8010\u529b\uff09$minn$\u3002\n\n```cpp\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n\n#include <bits/stdc++.h>\n\n#define start ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define ll long long\n#define LL long long\nusing namespace std;\nconst int maxn = (ll) 2e5 + 5;\nconst int mod = 1000000007;\nconst int inf = 0x3f3f3f3f;\n\nstruct node {\n    int p, s;\n\n    bool operator<(const node &b) {//\u7528\u505a\u6392\u5e8f\n        return p < b.p;\n    }\n} b[maxn];\n\nbool cmp(const node &x, int y) {//\u7528\u505a\u4e8c\u5206\n    return x.p < y;\n}\n\nint a[maxn];\n\nint main() {\n    start;\n    int T;\n    cin >> T;\n    while (T--) {\n        int n;\n        cin >> n;\n        int maxa = 0, maxs = 0;//\u7528\u505a\u5224-1\n        for (int i = 1; i <= n; ++i) {\n            cin >> a[i];\n            maxa = max(maxa, a[i]);\n        }\n        int m;\n        cin >> m;\n        for (int i = 1; i <= m; ++i) {\n            cin >> b[i].p >> b[i].s;\n            maxs = max(maxs, b[i].p);\n        }\n        if (maxa > maxs) {\n            cout << -1 << '\\n';\n            continue;\n        }\n        sort(b + 1, b + m + 1);\n        for (int i = m - 1; i >= 1; --i)//\u540e\u7f00\u64cd\u4f5c\n            b[i].s = max(b[i].s, b[i + 1].s);\n        int k = 1;\n        int last = 0;\n        int minn = inf;\n        for (int i = 1; i <= n; ++i) {\n            int t = lower_bound(b + 1, b + m + 1, a[i], cmp) - b;//\u521a\u597d\u80fd\u6740\u6b7b\u8be5\u602a\u7269\u7684\u82f1\u96c4\u7f16\u53f7\n            minn = min(b[t].s, minn);//\u4eca\u5929\u6240\u9700\u8981\u7684\u6700\u5c0f\u8010\u529b\n            if (minn + last < i) {//\u5c06\u8fd9\u53ea\u602a\u7269\u653e\u5230\u660e\u5929\u6740\n                minn = b[t].s;\n                ++k;\n                last = i - 1;\n            }\n        }\n        cout << k << '\\n';\n    }\n    return 0;\n}\n```\n\n \u672c\u573a\u6bd4\u8d5b$D$\u548c$E$\u60e8\u75db\u6559\u8bad\uff1a\u73a9\u540e\u7f00\u4e00\u5b9a\u8981\u6ce8\u610f\u8fb9\u754c\uff01\uff01\uff01 ",
        "postTime": 1573810825,
        "uid": 147428,
        "name": "F_Mu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1257D \u3010Yet Another Monster Killing Problem\u3011"
    },
    {
        "content": "\u5224\u65ad\u80fd\u5426\u6740\u6b7b\u6240\u6709\u602a\u517d\u5f88\u7b80\u5355\uff0c\u6bd4\u8f83\u602a\u517d\u7684\u6700\u5927\u529b\u91cf\u503c $\\max a_i$ \u548c\u82f1\u96c4\u7684\u6700\u5927\u529b\u91cf\u503c $\\max p_i$ \u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c\u82f1\u96c4\u7684\u9009\u62e9\u51b3\u7b56\u6743\u5728\u4f60\u624b\u4e2d\uff0c\u800c\u602a\u517d\u9700\u6309\u8f93\u5165\u987a\u5e8f\u4f9d\u6b21\u88ab\u6740\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u51b3\u7b56\uff0c\u6211\u4eec\u5c06\u6240\u6709\u82f1\u96c4\u6309\u529b\u91cf\u503c $p$ \u4ece\u5c0f\u5230\u8fbe\u6392\u5e8f\u3002\u5bf9\u4e8e\u4e24\u4e2a\u82f1\u96c4 $i, j (i \\lt j)$\uff0c\u82e5 $p_i \\lt p_j$ \u4e14 $s_i \\lt s_j$\uff0c\u5219\u6240\u6709\u4e0e $i$ \u6709\u5173\u7684\u51b3\u7b56\u90fd\u53ef\u4ee5\u88ab $j$ \u66ff\u6362\u3002\u8fd9\u662f\u5229\u7528\u4e86\u5355\u8c03\u961f\u5217\u7684\u601d\u60f3\u3002\n\n> \u5f53\u4e00\u4e2a\u4eba\u6bd4\u4f60\u5c0f ~~\uff08\u6301\u4e45\uff09~~ \u8fd8\u6bd4\u4f60\u5f3a\u65f6\uff0c\u90a3\u4f60\u5c31\u6253\u4e0d\u8fc7\u4ed6\u4e86\u3002\n\n\u56e0\u6b64\u5728\u6392\u5e8f\u8fc7\u540e\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u82f1\u96c4\u7684\u8010\u529b $s_i$ \u66f4\u65b0\u4e3a\u5176\u540e\u7f00\u7684\u6700\u5927\u503c\uff0c\u5373 $\\max_{i \\le j \\le m} s_j$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u602a\u7269 $i$\uff0c\u6211\u4eec\u627e\u5230\u80fd\u591f\u6740\u6b7b\u8be5\u602a\u7269\u7684\u7b2c\u4e00\u4e2a\u82f1\u96c4\uff0c\u5373 $\\min_{a_i \\le p_j} j$\u3002\u6839\u636e\u5355\u8c03\u6027\uff0c$j \\sim m$ \u4efb\u610f\u4e00\u540d\u82f1\u96c4\u90fd\u80fd\u591f\u6740\u6b7b\u8be5\u602a\u7269\u3002\u5728\u4e0a\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06 $s_j$ \u66f4\u65b0\u4e3a $j \\sim m$ \u82f1\u96c4\u4e2d $s$ \u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8010\u529b\u4e3a $s_j$ \u7684\u82f1\u96c4\u5c31\u662f\u5bf9\u4e8e\u5f53\u524d\u602a\u7269\u7684\u6700\u4f18\u51b3\u7b56\u3002\n\n\u7531\u4e8e\u95ee\u9898\u7684\u91cd\u70b9\u5728\u4e8e\u6740\u6b7b\u6240\u6709\u602a\u7269\u7684\u5929\u6570\uff0c\u6240\u4ee5\u6bcf\u4e2a\u602a\u7269\u5177\u4f53\u662f\u54ea\u4e2a\u82f1\u96c4\u6740\u7684\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6839\u636e\u4e0a\u4e00\u6b65\u7684 $s_j$ \u8fd8\u539f\u82f1\u96c4\u3002\n\n\u679a\u4e3e\u6bcf\u4e2a\u602a\u7269\uff0c\u91cd\u590d\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u5e76\u7ef4\u62a4\u5f53\u524d\u5929\u80fd\u591f\u6740\u6b7b\u602a\u517d\u7684\u6700\u5927\u6570\u91cf\uff0c\u5373\u5f53\u524d\u5929\u6bcf\u6b21\u627e\u5230\u82f1\u96c4\u7684\u8010\u4e45\u5ea6\u6700\u5c0f\u503c\u3002\u76f4\u81f3\u5f53\u524d\u5929\u80fd\u591f\u6740\u6b7b\u7684\u6570\u91cf\u4e0e\u5f53\u524d\u5929\u4e4b\u524d\u5df2\u7ecf\u6740\u6b7b\u7684\u6570\u91cf\u4e4b\u548c\u5c06\u5f53\u524d\u602a\u517d\u6392\u9664\u5728\u5916\u65f6\uff0c\u8df3\u8f6c\u5230\u4e0b\u4e00\u5929\u3002\n\n```\n#include <cstdio>\n#include <algorithm>\n\nconst int inf = 0x3f3f3f3f;\nconst int mod = 1000000007;\nconst int maxN = 2e5 + 10;\n\nint t;\nint n;\nint a[maxN];\nint m;\n\nstruct Hero {\n    int p, s;\n\n    bool operator<(Hero other) const {\n        return p < other.p;\n    }\n\n\tbool operator<(int other) const {\n\t\treturn p < other;\n\t}\n} hero[maxN];\n\n\nint main() {\n    scanf(\"%d\", &t);\n    while (t--) {\n        int maxA = 0, maxP = 0;\n        scanf(\"%d\", &n);\n        for (int i = 1; i <= n; i++) {\n            scanf(\"%d\", &a[i]);\n            maxA = std::max(maxA, a[i]);\n        }\n        scanf(\"%d\", &m);\n        for (int i = 1; i <= m; i++) {\n            scanf(\"%d%d\", &hero[i].p, &hero[i].s);\n            maxP = std::max(maxP, hero[i].p);\n        }\n        if (maxA > maxP) {\n            printf(\"-1\\n\");\n            continue;\n        }\n        std::sort(hero + 1, hero + m + 1);\n\t\tfor (int i = m - 1; i >= 1; i--) hero[i].s = std::max(hero[i].s, hero[i + 1].s);\n        int date = 1;\n        int killed = 0;\n        int minS = inf;\n        for (int i = 1; i <= n; ++i) {\n            int fight = std::lower_bound(hero + 1, hero + m + 1, a[i]) - hero;\n            minS = std::min(minS, hero[fight].s);\n            if (minS + killed < i) {\n                minS = hero[fight].s;\n                date++;\n                killed = i - 1;\n            }\n        }\n       printf(\"%d\\n\", date);\n    }\n    return 0;\n}\n```",
        "postTime": 1668735048,
        "uid": 278046,
        "name": "Lyccrius",
        "ccfLevel": 5,
        "title": "CF1257D"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0b\u90fd\u7528\u4e8c\u5206\u7684\u505a\u6cd5\uff0c\u90a3\u6211\u5c31\u6765\u5206\u4eab\u4e00\u4e2a\u79bb\u6563\u5316~~\u5de8\u5927\u7801\u91cf~~\u7684\u505a\u6cd5\u5427~\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3b\u8981\u662f\u5361\u5728\u4e86\u5feb\u6392\u4e0a\u3002\n\n\u6211\u4eec\u5728\u5bf9\u6240\u6709\u602a\u7269\u4ee5\u53ca\u82f1\u96c4\u7684\u80fd\u529b\u503c\u8fdb\u884c\u79bb\u6563\u5316\u540e\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $maxs_i$ \u8868\u793a\u80fd\u6253\u80fd\u529b\u503c\u4e3a $i$ \u602a\u7269\u7684\u82f1\u96c4\u4e2d\uff0c\u8010\u529b\u6700\u5927\u7684\u90a3\u4e2a\u8010\u529b\u503c\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u8d2a\u5fc3\u7684\u601d\u8def\u4ece\u5934\u5230\u5c3e\u626b\u63cf\u602a\u7269\uff0c\u5e76\u8bb0\u5f55\u8fd9\u4e00\u5929\u7d2f\u8ba1\u6253\u5230\u7684\u602a\u7269\u4e2d\u80fd\u529b\u503c\u6700\u5927\u7684\u90a3\u4e2a\u80fd\u529b\u503c\uff0c\u4ee5\u53ca\u7d2f\u8ba1\u6253\u4e86\u591a\u5c11\u602a\u7269\uff0c\u5982\u679c\u6253\u7684\u602a\u7269\u6570\u8981\u5927\u4e8e\u521a\u624d\u9884\u5904\u7406\u7684\u8010\u529b\u503c\uff0c\u5219\u8bf4\u660e\u6ca1\u4eba\u80fd\u6253\u8fd9\u4e48\u591a\uff0c\u8fdb\u5165\u4e0b\u4e00\u5929\u3002\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int NR=2e5+5;\nint n,m;\nint maxs[NR];\nstruct Monster{\n\tint p,id,lsh;\n}a[NR];\nstruct Hero{\n\tint p,s,id,lsh;\n}h[NR];\n\ninline bool cmpm1(Monster x,Monster y){//\u7b2c\u4e00\u904d\u6392\u5e8f\u602a\u7269\u6309\u80fd\u529b\u503c\n\tif(x.p!=y.p) return x.p<y.p;\n\treturn x.id<y.id;\n}\n\ninline bool cmpm2(Monster x,Monster y){//\u79bb\u6563\u5316\u540e\u8fd8\u8981\u6309\u8f93\u5165\u987a\u5e8f\u8fd8\u539f\u602a\u7269\n\treturn x.id<y.id;\n}\n\ninline bool cmph(Hero x,Hero y){\n\tif(x.p!=y.p) return x.p<y.p;\n\tif(x.s!=y.s) return x.s>y.s;\n\treturn x.id<y.id;\n}\n\nint sz;\ninline void lisanhua(){\n\tsz=0;//\u591a\u7ec4\u6570\u636e\u8981\u6e05\u96f6\n\tsort(a+1,a+n+1,cmpm1);\n\tsort(h+1,h+m+1,cmph);\n\tint posm=1,posh=1,last=-2e9;\n\twhile(posm<=n||posh<=m){//\u540c\u65f6\u53bb\u6bd4\u8f83\u4e24\u65b9\u5269\u4e0b\u7684\u4e2d\u80fd\u529b\u7684\u6700\u5c0f\u503c\n\t\tif(posm>n){\n\t\t\tif(h[posh].p!=last){\n\t\t\t\tlast=h[posh].p;\n\t\t\t\th[posh].lsh=++sz;\n\t\t\t}else{\n\t\t\t\th[posh].lsh=sz;\n\t\t\t}\n\t\t\tposh++;\n\t\t}else if(posh>m){\n\t\t\tif(a[posm].p!=last){\n\t\t\t\tlast=a[posm].p;\n\t\t\t\ta[posm].lsh=++sz;\n\t\t\t}else{\n\t\t\t\ta[posm].lsh=sz;\n\t\t\t}\n\t\t\tposm++;\n\t\t}else{\n\t\t\tif(a[posm].p<h[posh].p){\n\t\t\t\tif(a[posm].p!=last){\n\t\t\t\t\tlast=a[posm].p;\n\t\t\t\t\ta[posm].lsh=++sz;\n\t\t\t\t}else{\n\t\t\t\t\ta[posm].lsh=sz;\n\t\t\t\t}\n\t\t\t\tposm++;\n\t\t\t}else{\n\t\t\t\tif(h[posh].p!=last){\n\t\t\t\t\tlast=h[posh].p;\n\t\t\t\t\th[posh].lsh=++sz;\n\t\t\t\t}else{\n\t\t\t\t\th[posh].lsh=sz;\n\t\t\t\t}\n\t\t\t\tposh++;\n\t\t\t}\n\t\t}\n\t}\n\tsort(a+1,a+n+1,cmpm2);\n}\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i].p);\n\t\t\ta[i].id=i;\n\t\t}\n\t\tscanf(\"%d\",&m);\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tscanf(\"%d%d\",&h[i].p,&h[i].s);\n\t\t\th[i].id=i;\n\t\t}\n\t\tlisanhua();\n\t\tint pos=1;\n\t\tbool flag=false;\n\t\tfor(int i=1;i<=sz;i++){//\u9884\u5904\u7406maxs\n\t\t\twhile(h[pos].lsh<i) pos++;\n\t\t\tif(pos>m){//\u6709\u65e0\u6cd5\u6253\u8d25\u7684\u602a\u7269\u5219\u76f4\u63a5\u9000\u51fa\uff0c\u8f93\u51fa-1\n\t\t\t\tprintf(\"-1\\n\");//\u53ef\u4ee5\u601d\u8003\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u7528\u53e6\u5916\u5168\u626b\u4e00\u904d\u6765\u7279\u5224\n\t\t\t\tflag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmaxs[i]=h[pos].s;\n\t\t}\n\t\tfor(int i=sz-1;i>=1;i--) maxs[i]=max(maxs[i],maxs[i+1]);//\u8fd9\u91cc\u662f\u5173\u952e\uff0c\u6709\u80fd\u529b\u503c\u548c\u8010\u529b\u90fd\u66f4\u5927\u7684\u82f1\u96c4\u5f53\u7136\u9996\u9009\n\t\tif(flag) continue;\n\t\tint now=-2e9,len=0,ans=1;//now\u8868\u793a\u8bb0\u5f55\u7684\u80fd\u529b\u6700\u5927\u503c\uff0clen\u8868\u793a\u6253\u7684\u602a\u7269\u6570\n\t\tfor(int i=1;i<=n;i++){//\u5f00\u59cb\u8d2a\u5fc3\u5904\u7406\u602a\u7269\n\t\t\tnow=max(now,a[i].lsh);\n\t\t\tlen++;\n\t\t\tif(maxs[now]>=len) continue;\n\t\t\tans++;\n\t\t\tnow=a[i].lsh,len=1;//\u65b0\u4e00\u5929\u7684\u521d\u59cb\u5316\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1628348342,
        "uid": 164580,
        "name": "YGB_XU",
        "ccfLevel": 6,
        "title": "\u3010CF1257D Yet Another Monster Killing Problem\u3011\u9898\u89e3"
    },
    {
        "content": "\u601d\u8def\u4e3a\u8d2a\u5fc3+\u4e8c\u5206\uff0c\u6bcf\u5929\u9009\u62e9\u80fd\u6253\u6b7b\u6700\u591a\u602a\u7684\u82f1\u96c4\u8fdb\u5165\u5730\u7262\uff0c\u800c\u4e3a\u4e86\u51fb\u8d25\u6700\u591a\u602a\uff0c\u679a\u4e3e\u6240\u6709\u602a\u7269\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u602a\u7269\u4e8c\u5206\u67e5\u627e\u8010\u529b\u9ad8\u4e8e\u6216\u7b49\u4e8e\u5f53\u5929\u8ba1\u5212\u51fb\u8d25\u6570\u91cf\u7684\u6218\u6597\u529b\u6700\u5f3a\u7684\u82f1\u96c4\uff0c\u5982\u679c\u65e0\u6cd5\u627e\u5230\uff0c\u8bf4\u660e\u4eca\u5929\u5df2\u7ecf\u65e0\u6cd5\u51fb\u8d25\u8fd9\u4e2a\u602a\u7269\uff0c\u91cd\u7f6e\u5929\u6570\u5f00\u59cb\u67e5\u627e\n\n\u5982\u679c\u9047\u5230\u91cd\u7f6e\u5929\u6570\u540e\u4e5f\u627e\u4e0d\u5230\u80fd\u51fb\u8d25\u5b83\u7684\u82f1\u96c4\u7684\u602a\u7269\uff0c\u8bf4\u660e\u6ca1\u6709\u82f1\u96c4\u53ef\u4ee5\u6218\u80dc\u5b83\uff0c\u8f93\u51fa-$1$\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5f00\u59cb\u5148\u626b\u4e00\u904d\u6765\u786e\u8ba4\u4e00\u4e0b\u6709\u6ca1\u6709\u602a\u7684\u6218\u6597\u529b\u9ad8\u5230\u6ca1\u6709\u82f1\u96c4\u6253\u5f97\u8fc7\n\n\u5176\u5b83\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u53ca\u6ce8\u91ca\n\n\u7528\u65f692ms\uff0c\u76f8\u5bf9\u8f83\u5feb\uff0c\u624b\u5199\u4e8c\u5206\uff0c\u4e0d\u7528vector\u548cpair\uff0c\u624b\u5199\u6700\u5927\u503c\u67e5\u8be2\u5e94\u8be5\u80fd\u66f4\u5feb\n\n\u90fd9102\u5e74\u4e86\uff0ccin/cout sync+tie\u4e86\u8fd8420ms\u5462\uff0c\u65e9\u5c31\u6b7b\u4e86\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\n \nconst int INF = 0x3f3f3f3f;\nconst int maxn = 200010;\nint a[maxn];\nint mon[maxn];\nint ed[maxn];\nint maxh[maxn];\nint n, m;\nvector<pair<int, int> >temp;\n \nint main()\n{\n    int T;\n    scanf(\"%d\",&T);\n    while (T--)\n    {\n        temp.clear();\n        scanf(\"%d\",&n);\n        for (int i = 1; i <= n; i++)\n        {\n           scanf(\"%d\",&mon[i]);\n        }\n        scanf(\"%d\",&m);\n        for (int i = 1; i <= m; i++)\n        {\n            int a, b;\n            scanf(\"%d%d\",&a,&b);\n            temp.push_back(pair<int, int>(b, a));\n            //\u56e0\u4e3a\u8981\u6309\u8010\u529b\u503c\u6392\u5e8f\uff0c\u6240\u4ee5\u53cd\u8fc7\u6765\u505apair\n        }\n        sort(temp.begin(), temp.end());\n        for (int i = 0; i < m; i++)\n        {\n            a[i + 1] = temp[i].second;\n            ed[i + 1] = temp[i].first;\n        }\n        {\n        int maxh = *max_element(a + 1, a + 1 + m);\n        int maxm = *max_element(mon + 1, mon + n + 1);\n        if (maxh < maxm)\n        {\n            //\u6709\u602a\u8c01\u4e5f\u6253\u4e0d\u8fc7\uff0cAK\u65e0\u671b\n            printf(\"-1\\n\");\n            continue;\n        }\n        }\n        maxh[m]=a[m];\n        for(int i=m-1;i>0;i--)\n        {\n            maxh[i]=max(maxh[i+1],a[i]);\n            //\u9884\u5904\u7406\u7684\u524d\u7f00\u548c\uff0cmaxh[i]\u8868\u793ai\u5230m\u4e2d\u6218\u6597\u529b\u6700\u5f3a\u7684\u82f1\u96c4\u7684\u6218\u6597\u529b\n        }\n        int d = 0;    //\u5f53\u5929\u51fb\u8d25\u6570\u91cf\n        int ans = 1;\n        int maxp = -INF;\t//\u6bcf\u5929\u8ba1\u5212\u4e2d\u6700\u5f3a\u7684\u602a\n        for (int i = 1; i <= n; i++)\n        {\n            d++;\n            maxp = max(maxp, mon[i]);    //\u76ee\u524d\u4e3a\u6b62\u4eca\u5929\u8ba1\u5212\u4e2d\u6700\u5f3a\u7684\u602a\n            int val = lower_bound(ed + 1, ed + 1 + m, d) - ed;    //\u5f53\u524d\u8010\u529b\u8fd8\u80fd\u7ee7\u7eed\u6253\u4e0b\u53bb\u7684\u82f1\u96c4\n            //lower_bound\u81ea\u5e26\u4e8c\u5206\n            int maxq = -INF;\n            if (val < m + 1) maxq = maxh[val];    //\u8010\u529b\u503c\u8db3\u591f\uff0c\u5728\u5f53\u524d\u8010\u529b\u503c\u8db3\u591f\u7684\u82f1\u96c4\u91cc\u627e\u6700\u80fd\u6253\u7684\n            if (val == m + 1 || maxq < maxp)\n            {    //\u6ca1\u6709\u8010\u529b\u8db3\u591f\u7684\u82f1\u96c4\u6253\u7684\u8fc7\u8ba1\u5212\u4eca\u5929\u8981\u6253\u7684\u602a\u91cc\u6700\u5f3a\u7684\n                ans++;\n                d = 1;    //\u7528\u6218\u529b\u6bd4\u8fd9\u4e2a\u602a\u5f3a\u7684\u82f1\u96c4K\u6389\u8fd9\u4e2a\u602a\n                maxp = mon[i];    //\u8fd9\u4e2a\u602a\u5b89\u6392\u5230\u4e0b\u4e00\u5929\n                //\u8fdb\u5165\u4e0b\u4e00\u5929\n            }\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1573787428,
        "uid": 205228,
        "name": "thjkhdf12",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1257D \u3010Yet Another Monster Killing Problem\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u679a\u4e3e$/$\u4e8c\u5206\u6bcf\u5929\u6700\u591a\u80fd\u6740\u591a\u5c11\u602a\n\n\u7528$hur$\u6570\u7ec4\u8bb0\u5f55\u8fde\u7eed\u6740$X$\u53ea\u602a\u65f6\u6bcf\u53ea\u602a\u517d\u7684\u6700\u5927\u8840\u91cf\u3002\u6ce8\u610f\u5012\u5e8f\u66f4\u65b0$hur[i]=max(hur[i],hur[i+1])$\u3002\n\n\u679a\u4e3e\u505a\u6cd5\uff1a\uff08\u8f83\u5bb9\u6613\uff0c\u5b9e\u6d4b\u8f83\u6162\uff09\n```\n#include<cctype>\n#include<cstdio>\n#include<algorithm>\n#define R register\nusing namespace std;\nint T,N,A[200005],M,P,S,k,hur[200005],ans,now,mx;\ntemplate<class T>inline void read(R T &m)\n{\n\tm=0;\n\tR char c=getchar();\n\twhile(!isdigit(c))c=getchar();\n\twhile(isdigit(c))m=(m<<3)+(m<<1)+(c&15),c=getchar();\n}\nint main()\n{\n\tread(T);\n\twhile(T--)\n\t{\n\t\tread(N);\n\t\tk=1,ans=0;\n\t\tfor(R int i=1; i<=N; ++i)\n\t\t{\n\t\t\thur[i]=0,\n\t\t\tread(A[i]);\n\t\t}\n\t\tread(M);\n\t\tfor(R int i=1,tmp; i<=M; ++i)\n\t\t{\n\t\t\tread(P),read(S),\n\t\t\thur[S]=max(hur[S],P);\n\t\t}\n\t\tfor(R int i=N-1; i; --i)\n\t\t{\n\t\t\thur[i]=max(hur[i],hur[i+1]);//\u66f4\u65b0hur\n\t\t}\n\t\twhile(k<=N)\n\t\t{\n\t\t\tnow=k,mx=0;\n\t\t\twhile(now<=N&&hur[now-k+1]>=max(A[now],mx))\n\t\t\t{\n\t\t\t\tmx=max(A[now],mx),\n\t\t\t\t++now;\n\t\t\t}\n\t\t\tif(k^now)k=now,++ans;//\u8fd9\u4e00\u5929\u6709\u6740\u602a\n\t\t\telse//\u6740\u4e0d\u52a8\uff0c\u4e0d\u884c\n\t\t\t{\n\t\t\t\tputs(\"-1\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(k>N)//\u6740\u5b8c\u4e86\n\t\t{\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n}\n```\n\u4e8c\u5206\u505a\u6cd5\uff1a\uff08\u8f83\u590d\u6742\uff0c\u4f46\u5b9e\u6d4b\u8f83\u5feb\n```\n#include<cctype>\n#include<cstdio>\n#define R register\nint T,N,A[200005],M,P,S,k,hur[200005],ans,am,pm,l,r,mid;\ntemplate<class T>inline void read(R T &m)\n{\n\tm=0;\n\tR char c=getchar();\n\twhile(!isdigit(c))c=getchar();\n\twhile(isdigit(c))m=(m<<3)+(m<<1)+(c&15),c=getchar();\n}\ninline bool check(R int kill)\n{\n\tfor(R int i=k; i<=k+kill-1; ++i)\n\t{\n\t\tif(A[i]>hur[kill])//\u6709\u4e00\u4e2a\u602a\u7684\u8840\u91cf\u8d85\u8fc7\u4e86\u8fde\u7eed\u6740kill\u4e2a\u602a\u80fd\u627f\u53d7\u7684\u6700\u5927\u8840\u91cf\n\t\t{\n\t\t\treturn 0;//\u4e0d\u884c\n\t\t}\n\t}\n\treturn 1;\n}\nint main()\n{\n\tread(T);\n\twhile(T--)\n\t{\n\t\tread(N);\n\t\tk=1,ans=am=pm=0;\n\t\tfor(R int i=1; i<=N; ++i)\n\t\t{\n\t\t\thur[i]=0,\n\t\t\tread(A[i]),\n\t\t\tam=A[i]>am?A[i]:am;\n\t\t}\n\t\tread(M);\n\t\tfor(R int i=1,tmp; i<=M; ++i)\n\t\t{\n\t\t\tread(P),read(S),\n\t\t\tpm=P>pm?P:pm,\n\t\t\thur[S]=P>hur[S]?P:hur[S];\n\t\t}\n\t\tif(am>pm)//\u602a\u6700\u5927\u8840\u91cf>\u6700\u5927\u627f\u53d7\u91cf\n\t\t{\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(R int i=N,mx=0; i; --i)\n\t\t{\n\t\t\tif(mx<hur[i])mx=hur[i];\n\t\t\thur[i]=mx;\n\t\t}\n\t\twhile(k<=N)\n\t\t{\n\t\t\tl=1,r=N-k+1;\n\t\t\twhile(l<r)\n\t\t\t{\n\t\t\t\tmid=(l+r>>1)+1;\n\t\t\t\tif(check(mid))\n\t\t\t\t{\n\t\t\t\t\tl=mid;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tr=mid-1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tk+=l;//\u52a0\u4e0a\u8fd9\u4e00\u5929\u7684\u6740\u602a\u6570\n\t\t\t++ans;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```",
        "postTime": 1573722533,
        "uid": 5880,
        "name": "B_Qu1e7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1257D \u3010Yet Another Monster Killing Problem\u3011"
    }
]