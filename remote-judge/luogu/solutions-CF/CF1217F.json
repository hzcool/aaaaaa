[
    {
        "content": "## \u597d\u4e00\u4e2aForced Online Queries Problem\u2026\u2026\n\n\u7b2c\u4e00\u773c\u770b\u8fc7\u53bb$LCT$\u6a21\u677f\u9898\uff0c\u4f46\u662f\u672c\u9898\u7ef4\u62a4\u7684\u662f\u52a8\u6001\u56fe\u800c\u4e0d\u662f\u52a8\u6001\u6811\u3002\n\n\u52a8\u6001\u56fe\u600e\u4e48\u7ef4\u62a4\u8fde\u901a\u6027\u5462\uff1f\u6211\u80fd\u60f3\u5230\u7684\u53ea\u6709\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e86\u2026\u2026\uff08\u4e8b\u5b9e\u4e0a\u662f\u56e0\u4e3a\u6700\u8fd1\u521a\u5b66\u7ebf\u6bb5\u6811\u5206\u6cbb\uff09\n\n\u8fd9\u91cc\u5177\u4f53\u8bb2\u4e00\u4e0b\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u8fc7\u7a0b\u3002\n\n\u6211\u4eec\u6682\u65f6\u4e0d\u8003\u8651\u5f3a\u5236\u5728\u7ebf\uff08\u56e0\u4e3a\u7ebf\u6bb5\u6811\u5206\u6cbb\u662f\u79bb\u7ebf\u7684\uff09\u3002\n\n\u9996\u5148\u8003\u8651\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u76f4\u63a5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\uff0c\u5e76\u67e5\u96c6\u53ea\u80fd\u591f\u52a0\u5165\u8fb9\uff0c\u4e0d\u80fd\u5220\u9664\u8fb9\uff0c\u800c\u672c\u9898\u6709\u5220\u9664\u64cd\u4f5c\u2026\u2026\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u8003\u8651$[1,m]$\u6bcf\u4e2a\u65f6\u95f4\uff0c\u8003\u8651\u5f53\u524d\u6bcf\u4e00\u6761\u8fb9\u5b58\u5728\u7684\u65f6\u95f4\u6bb5\uff08\u663e\u7136\u8fd9\u4e9b\u65f6\u95f4\u6bb5\u6784\u6210\u4e86\u4e00\u4e2a\u4e2a\u533a\u95f4\uff0c\u533a\u95f4\u4e2a\u6570\u4e0d\u8d85\u8fc7$m$\uff09\uff0c\u53ea\u5728\u8fd9\u4e9b\u65f6\u95f4\u6bb5\u628a\u8fb9\u52a0\u5165\u5373\u53ef\u3002\n\n\u8bf4\u5f97\u597d\u542c\uff0c\u5b9e\u73b0\u590d\u6742\u5ea6\u548c\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u5f88\u9ad8\u2026\u2026\n\n\u8003\u8651\u5982\u4f55\u4f18\u5316\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u5feb\u901f\u52a0\u5165\u8fb9\u5462\uff1f\n\n\u65e2\u7136\u662f\u4e0d\u8d85\u8fc7$m$\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u52a0\u5165\u533a\u95f4\uff01\n\n\u5177\u4f53\u5b9e\u73b0\u5c31\u548c\u533a\u95f4\u4fee\u6539\u5dee\u4e0d\u591a\uff0c\u5f00\u4e00\u4e2a\u90bb\u63a5\u8868\u8bb0\u5f55\u7ebf\u6bb5\u6811\u8282\u70b9\u4e0a\u7684\u52a0\u8fb9\u60c5\u51b5\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8be2\u95ee\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u67e5\u8be2\u7684\u65b9\u5f0f\u9012\u5f52\u5230\u5355\u4f4d\u533a\u95f4\u8282\u70b9\uff0c\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\u5c31\u597d\u4e86\u3002\n\n\u73b0\u5728\u95ee\u9898\u5173\u952e\uff1a\u600e\u4e48\u786e\u4fdd\u9012\u5f52\u5230\u5355\u4f4d\u533a\u95f4\u8282\u70b9\u65f6\uff0c\u6240\u6709\u5b58\u5728\u4e8e\u5f53\u524d\u65f6\u95f4\u70b9\u7684\u8fb9\u90fd\u88ab\u52a0\u5165\u5230\u5e76\u67e5\u96c6\u4e2d\u4e86\u5462\uff1f\n\n\u8003\u8651\u5f53\u524d\u9012\u5f52\u5230$(q,l,r)$\uff0c\u6211\u4eec\u5148\u628a$q$\u90bb\u63a5\u8868\u5185\u7684\u8fb9\u52a0\u5165\uff0c\u56e0\u4e3a\u5230$(q*2,l,mid)$\u548c$(q*2+1,mid+1,r)$\u65f6\u8fd9\u4e9b\u8fb9\u4e5f\u80af\u5b9a\u5b58\u5728\u3002\u5f53\u7136\u9898\u76ee\u4e2d\u662f\u628a\u8fb9\u5b58\u5728\u7684\u72b6\u6001\u53d6\u53cd\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u5f00\u4e00\u4e2a$vis$\u6570\u7ec4\uff0c\u8bb0\u5f55\u5f53\u524d\u6bcf\u4e00\u6761\u8fb9\u662f\u5426\u5df2\u7ecf\u5b58\u5728\uff0c\u6bcf\u6b21\u52a0\u8fb9\u65f6\u770b$vis$\u6570\u7ec4\u7684\u503c\uff0c\u540c\u65f6\u53d6\u53cd\uff0c\u8868\u660e\u72b6\u6001\u3002\n\n\u5148\u9012\u5f52$(q*2,l,mid)$\uff0c\u7136\u540e\u9012\u5f52$(q*2+1,mid+1,r)$\uff0c\u4f46\u662f$(q*2,l,mid)$\u4e2d\u5b58\u5728\u7684\u8fb9\u4e0d\u4e00\u5b9a\u5b58\u5728\u4e8e$(q*2+1,mid+1,r)$\uff0c\u6211\u4eec\u9700\u8981**\u5220\u9664**\u8fd9\u4e9b\u8fb9\uff0c\u4f46\u8fd9\u91cc\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u6027\u8d28\uff1a\u6211\u4eec\u8981\u5220\u7684\u8fb9\u90fd\u662f\u65b0\u52a0\u5165\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u5e26\u64a4\u9500\u5e76\u67e5\u96c6\u5373\u53ef\uff0c\u8fd9\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\n\n\u90a3\u4e48\uff0c\u95ee\u9898\u5c31\u8fd9\u6837\u7ed3\u675f\u4e86\u2026\u2026\u5417\uff1f\n\n\u522b\u5fd8\u4e86\u5f3a\u5236\u5728\u7ebf\uff01\n\n\u96be\u9053\u524d\u9762\u7684\u601d\u8def\u90fd\u6ca1\u7528\u4e86\u5417\uff1f\n\n\u9898\u76ee\u4e2d\u6709\u4e2a\u5f88\u5751\u7684\u70b9\uff1a$last$\u53ea\u53ef\u80fd\u4e3a$0$\u6216$1$\uff01\n\n\u4e8e\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a$(x,y)$\u548c$((x-1) \\mod n+1,(y-1) \\mod n+1)$\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u7ef4\u62a4\u4e00\u904d\uff0c\u81f3\u4e8e\u6700\u540e\u7b54\u6848\u662f\u54ea\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e\u6211\u4eec\u7ebf\u6bb5\u6811\u67e5\u8be2\u65f6\u83b7\u53d6\u7b54\u6848\u662f\u4ece$1$\u5230$m$\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$l$\uff0c\u53ea\u8981\u8003\u8651$l-1$\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(m(logn+logm))$\uff0c\u5176\u4e2d$logn$\u8868\u793a\u6309\u79e9\u5408\u5e76\u7684\u590d\u6742\u5ea6\uff08\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\uff0c\u4e0d\u7136\u64a4\u9500\u7684\u4fe1\u606f\u5c31\u4f1a\u88ab\u7834\u574f\uff0c\u5bfc\u81f4\u7b54\u6848\u9519\u8bef\uff09\u3002\n\n### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<utility>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n#define res register int\n#define ll long long\n//#define cccgift\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\nnamespace wode{\n    template<typename T>\n    inline void read(T &x)\n    {\n        static char ch;bool f=1;\n        for(x=0,ch=getchar();!isdigit(ch);ch=getchar()) if(ch=='-') f=0;\n        for(;isdigit(ch);x=(x<<1)+(x<<3)+(ch^48),ch=getchar());x=f?x:-x;\n    }\n    template<typename T>\n    void print(T x)\n    {\n        if (x<0) putchar('-'),x=-x;\n        if (x>=10) print(x/10);\n        putchar(x%10+'0');\n    }\n    template<typename T>\n    inline void print(T x,char ap) {print(x);if (ap) putchar(ap);}\n    template<typename T>\n    inline T max(const T &x,const T &y) {return x<y?y:x;}\n    template<typename T>\n    inline T min(const T &x,const T &y) {return x<y?x:y;}\n    template<typename T>\n    inline void chkmax(T &x,const T &y) {x=x<y?y:x;}\n    template<typename T>\n    inline void chkmin(T &x,const T &y) {x=x<y?x:y;}\n}\nusing wode::read;using wode::chkmin;using wode::chkmax;using wode::print;\n#define stack qscweadzx\nstruct edge{\n\tint x,y;\n\tedge() {}\n\tedge(int x,int y):x(x),y(y) {}\n} ed[800001];\nstruct que{\n\tint x,y;\n\tque() {}\n\tque(int x,int y):x(x),y(y) {}\n} Q[200001];\nstruct node{\n\tint x,y,q,id;\n\tnode() {}\n\tnode(int x,int y,int q,int id):x(x),y(y),q(q),id(id) {}\n\tbool operator <(const node &b)const {\n\t\tif(x!=b.x) return x<b.x;\n\t\tif(y!=b.y) return y<b.y;\n\t\treturn id<b.id;\n\t}\n\tbool operator !=(const node &b)const {return x!=b.x||y!=b.y;}\n} a[400001];\nint n,m,x,y,id,len1,mp[200001][2],ver[5000001],nxt[5000001],head[800001],ans,fa[200001],len[200001],stack[400001],stack1[400001],stack2[400001],top,tot[200001];\nbool vis[400001];\ninline void add(int x,int y) {ver[++ans]=y,nxt[ans]=head[x],head[x]=ans;}\nint find(int x) {return fa[x]==x?x:find(fa[x]);} //\u6ce8\u610f\u4e0d\u80fd\u5199\u6210fa[x]=find(fa[x])\ninline void hebing(int x,int y) {\n\tx=find(x),y=find(y);if(len[x]<len[y]) x^=y^=x^=y;\n\tif(x!=y) {\n\t\tstack[++top]=x,stack1[top]=fa[x],stack2[top]=len[x];\n\t\tstack[++top]=y,stack1[top]=fa[y],stack2[top]=len[y];\n\t\tfa[y]=x,len[x]+=len[y];\n\t} //\u7528\u6808\u7ef4\u62a4\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u7684\u4fe1\u606f\uff0c\u8981\u64a4\u9500\u65f6\u53ea\u8981\u628a\u6808\u9876\u4fe1\u606f\u91cd\u7f6e\u5373\u53ef\u3002\n}\n#define chexiao fa[stack[top]]=stack1[top],len[stack[top]]=stack2[top],--top\nvoid change(int q,int l1,int r1,int l,int r,int k) { //\u533a\u95f4\u52a0\u8fb9\n\tif(l<=l1&&r1<=r) return (void)(add(q,k));\n\tint mid=l1+r1>>1;\n\tif(l<=mid) change(q<<1,l1,mid,l,r,k);\n\tif(r>mid) change(q<<1|1,mid+1,r1,l,r,k);\n}\nvoid ask(int q,int l,int r) {\n\tint old=top;\n\tfor(res i=head[q];i;i=nxt[i]) if(vis[ver[i]]) hebing(ed[ver[i]].x,ed[ver[i]].y); //\u52a0\u8fb9\n\tif(l==r) {\n\t\tif(!Q[l].x) tot[l]=tot[l-1],vis[mp[l][tot[l]]]^=1; //vis\u6570\u7ec4\u53d6\u53cd\uff0cmp[i][j]\u8868\u793a\u7b2ci\u4e2a\u8be2\u95ee\uff0clast=j\u65f6\u8fb9\u7684\u7f16\u53f7\n\t\telse tot[l]=(find((Q[l].x+tot[l-1]-1)%n+1)==find((Q[l].y+tot[l-1]-1)%n+1));\n\t\twhile(old<top) chexiao;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\task(q<<1,l,mid),ask(q<<1|1,mid+1,r);\n\twhile(old<top) chexiao; //\u64a4\u9500\u56de\u53bb\n}\nint main()\n{\n\tread(n),read(m);\n\tfor(res i=1;i<=n;++i) fa[i]=i,len[i]=1;\n\tfor(res i=1;i<=m;++i) {\n\t\tread(id),read(x),read(y);\n\t\tif(id==1) {\n\t\t\tif(x>y) x^=y^=x^=y;a[++len1]=node(x,y,0,i);\n\t\t\tx%=n,y%=n,++x,++y;if(x>y) x^=y^=x^=y;a[++len1]=node(x,y,1,i);\n\t\t}\n\t\telse Q[i]=que(x,y);\n\t}\n\tsort(a+1,a+1+len1);\n\tint len2=1;ed[1]=edge(a[1].x,a[1].y),mp[a[1].id][a[1].q]=1;\n\tfor(res i=2;i<=len1;++i) { //\u628a\u76f8\u540c\u7684\u8fb9\u653e\u5728\u4e00\u8d77\u8fdb\u884c\u533a\u95f4\u52a0\u8fb9\uff0c\u540c\u65f6\u53bb\u91cd\u5e76\u7f16\u53f7\uff0c\u4e00\u4e3e\u4e24\u5f97\u3002\n\t\tint now=(a[i]!=a[i-1])?m:a[i].id;\n\t\tif(a[i-1].id<now) change(1,1,m,a[i-1].id+1,now,len2);\n\t\tif(a[i]!=a[i-1]) ed[++len2]=edge(a[i].x,a[i].y);\n\t\tmp[a[i].id][a[i].q]=len2;\n\t}\n\tif(a[len1].id<m) change(1,1,m,a[len1].id+1,m,len2);\n\task(1,1,m);\n\tfor(res i=1;i<=m;++i) if(Q[i].x) putchar(48+tot[i]);puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1569397622,
        "uid": 43697,
        "name": "chenyewei_1234",
        "ccfLevel": 7,
        "title": "CF1217F Forced Online Queries Problem"
    },
    {
        "content": "# [Codeforces] Forced Online Queries Problem\n\n\u9898\u610f\u7ed9\u4f60$m$\u64cd\u4f5c\uff0c\u652f\u6301\u5220\u8fb9\u52a0\u8fb9\uff0c\u67e5\u8be2\u8fde\u901a\u6027\uff0c\u5f3a\u5236\u5728\u7ebf(\u53ef\u80fd\u4e5f\u4e0d\u90a3\u4e48\u5f3a\u5236\u5728\u7ebf)\u3002\n\n\u5982\u679c\u4e0d\u5f3a\u5236\u5728\u7ebf\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\u4e00\u79cd\u505a\u6cd5\u662f\u5927\u529b$LCT$\uff0c\u611f\u89c9\u6bd4\u8f83\u9ebb\u70e6\u3002\u8fd8\u6709\u4e00\u79cd\u505a\u6cd5\u662f\u5206\u5757\u3002\n\n\u663e\u7136\u7684\u6309\u65f6\u95f4\u5206\u5757\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5757$x$\uff0c\u6211\u4eec\u5047\u8bbe\u5b83\u524d\u9762\u6240\u6709\u5757\u7684\u7b54\u6848\u90fd\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86\uff0c\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u5f53\u524d\u5757\u3002\u6211\u4eec\u5148\u628a$x$\u4e4b\u524d\u6240\u6709\u8fd8\u5b58\u5728\u7684\u8fb9\u66b4\u529b\u52a0\u5165\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u8fd9\u90e8\u590d\u6742\u5ea6\u662f$O(\\frac{n}{T}m\\log m)$($T$\u4e3a\u5757\u7684\u5927\u5c0f)\u3002\n\n\u5bf9\u4e8e\u5757\u5185\u7684\u4e00\u7ec4\u8be2\u95ee$i$\uff0c\u6211\u4eec\u66b4\u529b\u628a\u5757\u5185\u5728$i$\u4e4b\u524d\u52a0\u5165\u4e14\u5728$i$\u65f6\u523b\u8fd8\u5b58\u5728\u7684\u8fb9\u52a0\u5165\u5e76\u67e5\u96c6\uff0c\u7136\u540e\u76f4\u63a5\u8be2\u95ee\u8fde\u901a\u6027\u5373\u53ef\u3002\u6ce8\u610f\u6bcf\u6b21\u8be2\u95ee\u8981\u628a\u5148\u628a\u5757\u5185\u7684\u8fb9\u5168\u90e8\u6e05\u7a7a\uff0c\u56e0\u6b64\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u662f$O(T^2\\log m)$\u3002\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <set>\n#include <vector>\n#define ll long long\n#define db double\n#define rint register int\n#define re register\n#define pint pair<int,int>\n#define eps 1e-10\n#define Son 26\n#define inf 1000000007\n#define mk make_pair\n#define IT set<pint>::iterator\n#define fs first\n#define sd second\n#define N 400005\n#define block 3000\nusing namespace std;\ninline char get(){\n\tconst int TOP=1<<20;\n\tstatic char T[TOP],*x=T,*y=T;\n\treturn x==y&&(y=(x=T)+fread(T,1,TOP,stdin),x==y)?EOF:*x++;\n}\ninline int read (){\n\tregister int num,sign=1;register char c;\n\twhile (((c=get())<'0'||c>'9')&&c!='-');c=='-'?num=sign=0:num=c-48;\n\twhile ((c=get())>='0'&&c<='9')num=(num<<3)+(num<<1)+(c-48);\n\treturn sign?num:-num;\n}\nint n,m,top,last;\nint opt[N];\nset<pint>a,b,c;\npint q[N][2],st[N];\nint ans[N],size[N],father[N];\ninline void add(set<pint>&s,pint x){if(s.count(x)<1)s.insert(x);else s.erase(x);}\ninline int find(rint x){if(father[x]==x)return x;return find(father[x]);}\ninline void merge(rint x,rint y){\n\tx=find(x);y=find(y);if(x==y)return;\n\tif(size[x]<size[y])swap(x,y);st[++top]=mk(x,y);\n\tsize[x]+=size[y];father[y]=x;\n}\ninline void cal(rint time){\n\twhile(top!=time){\n\t\trint x=st[top].fs,y=st[top].sd;\n\t\tfather[y]=y;size[x]-=size[y];--top;\n\t}\n}\ninline void solve(){\n\tfor(rint i=1;i<=n;++i)father[i]=i,size[i]=1;top=0;\n\tfor(IT it=c.begin();it!=c.end();++it)merge((*it).fs,(*it).sd);last=top;\n}\nint main(){\n\tn=read();m=read();\n\tfor(rint pos=1,x,y;pos<=m;pos+=block){\n\t\trint l,r;l=pos,r=min(m,l+block-1);\n\t\ta.clear();b.clear();c.clear();\n\t\tfor(rint i=l;i<=r;++i){\n\t\t\topt[i]=read();x=read();y=read();\n\t\t\tif(x>y)swap(x,y);q[i][0]=mk(x,y);\n\t\t\tx=x%n+1;y=y%n+1;\n\t\t\tif(x>y)swap(x,y);q[i][1]=mk(x,y);\n\t\t\tif(opt[i]==1)a.insert(q[i][0]),a.insert(q[i][1]);\n\t\t}\n\t\tfor(rint i=1;i<l;++i)if(opt[i]==1){if(a.count(q[i][ans[i]])<1)add(c,q[i][ans[i]]);else add(b,q[i][ans[i]]);}\n\t\tsolve();\n\t\tfor(rint i=l;i<=r;++i){\n\t\t\tif(opt[i]==1){ans[i]=ans[i-1];add(b,q[i][ans[i]]);continue;}\n\t\t\tcal(last);\n\t\t\tfor(IT it=b.begin();it!=b.end();++it)merge((*it).fs,(*it).sd);\n\t\t\tans[i]=(find(q[i][ans[i-1]].fs)==find(q[i][ans[i-1]].sd));\n\t\t}\n\t}\n\tfor(rint i=1;i<=m;++i)if(opt[i]==2)putchar(ans[i]+'0');\n}\n\n```\n",
        "postTime": 1568730523,
        "uid": 242648,
        "name": "zjftxdy",
        "ccfLevel": 0,
        "title": "[Codeforces] Forced Online Queries Problem"
    },
    {
        "content": "\u7ed9\u51fa $n$ \u4e2a\u70b9\uff0c\u521d\u59cb\u65e0\u8fb9\uff0c\u63a5\u4e0b\u6765\u7ed9\u5b9a $m$ \u6b21\u64cd\u4f5c\uff1a\n\n$1\\,\\,x\\,\\,y$\uff0c\u8868\u793a\u5982\u679c $(x,y)$ \u4e4b\u95f4\u65e0\u8fb9\u5219\u8fde\uff0c\u6709\u8fb9\u5219\u5220\u3002\u8fb9\u65e0\u5411\u3002\n\n$2\\,\\,x\\,\\,y$\uff0c\u67e5\u8be2 $(x,y)$ \u662f\u5426\u8fde\u901a\u3002\u8fde\u901a\u5219\u7b54\u6848\u4e3a $1$\uff0c\u5426\u5219\u7b54\u6848\u4e3a $0$\u3002\n\n\u6b64\u5916\uff0c\u672c\u9898\u5bf9\u8f93\u5165\u52a0\u5bc6\u3002\u8bbe $lastans$ \u662f\u4e0a\u4e00\u6b21 $2$ \u64cd\u4f5c\u7684\u7b54\u6848\uff0c\u521d\u59cb $lastans=0$\u3002\u5219\u6bcf\u6b21\u771f\u5b9e\u7684 $x'$ \u662f $(x+lastans-1)\\bmod n+1$\uff0c$y$ \u540c\u7406\u3002\n\n$n,m\\le 2\\times 10^5$\u3002\n\n------------\n\n\u8fd9\u4e2a\u9898\u5b9e\u9645\u4e0a\u8fd8\u662f\u633a\u96be\u7528\u6587\u5b57\u89e3\u91ca\u7684......\n\n\u9996\u5148\uff0c\u5982\u679c\u6ca1\u6709\u5bf9\u8f93\u5165\u52a0\u5bc6\uff0c\u5219\u53d8\u6210\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u6a21\u677f\u3002\u53ef\u4ee5 $O(m\\log^2 n)$ \u5730\u89e3\u51b3\u3002\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u7531\u4e8e\u5bf9\u8f93\u5165\u8fdb\u884c\u4e86\u52a0\u5bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e07\u80fd\u7684\u5206\u5757\uff0c\u662f\u53ef\u4ee5\u5728 $O(m \\sqrt m \\log n)$ \u65f6\u95f4\u5185\u89e3\u51b3\u7684\u3002\n\n\u6211\u4eec\u73b0\u5728\u5bfb\u6c42\u4e00\u4e2a\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u3002\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u663e\u7136\u5f3a\u4e8e\u7eaf\u79bb\u7ebf\uff0c\u6240\u4ee5\u4e0d\u592a\u53ef\u80fd\u6709\u4ec0\u4e48\u5168\u65b0\u7684\u505a\u6cd5\uff0c\u4e0d\u7136\u79bb\u7ebf\u7684\u95ee\u9898\u5c31\u88ab\u6a44\u6984\u4e86\u3002\u8003\u8651\u80fd\u4e0d\u80fd\u628a\u7ebf\u6bb5\u6811\u5206\u6cbb\u5957\u8fdb\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u601d\u8003\uff0c\u4e3a\u4ec0\u4e48\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e0d\u80fd\u5728\u7ebf\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u56e0\u4e3a\u6211\u4eec\u52a0\u5165\u8fb9\u7684\u65f6\u5019\uff0c\u53ea\u77e5\u9053\u5b83\u7684\u51fa\u73b0\u65f6\u523b\u662f\u4e0d\u591f\u7684\uff0c\u8fd8\u8981\u6c42\u77e5\u9053\u5176\u7ed3\u675f\u65f6\u523b\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u786e\u5207\u5730\u77e5\u9053\u5728\u54ea\u4e9b\u533a\u95f4\u52a0\u5165\u8fd9\u6761\u8fb9\u3002\n\n\u9700\u8981\u6ce8\u610f\u5230\u7684\u4e00\u4e2a\u7279\u6027\u662f $lastans$ \u8981\u4e48\u4e3a $0$\uff0c\u8981\u4e48\u4e3a $1$\u3002\u6240\u4ee5\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u65f6\u523b\u6765\u8bf4\uff0c\u5b83\u6700\u540e\u7684\u771f\u5b9e\u7684 $(x',y')$ \u53ea\u6709\u4e24\u79cd\u53ef\u80fd\u3002\n\n\u6211\u4eec\u6765\u7814\u7a76\u4e00\u6761\u5355\u4e00\u7684\u8fb9 $(u,v)$\u3002\u8fd9\u6761\u8fb9\u51fa\u73b0\uff0c\u5728\u7b2c\u4e00\u6b21 $(u,v)$ \u51fa\u73b0\u540e\u51fa\u73b0\uff1b\u5728\u7b2c\u4e8c\u6b21 $(u,v)$ \u51fa\u73b0\u540e\u6d88\u5931\uff0c\u7b2c\u4e09\u6b21\u53c8\u51fa\u73b0\uff0c\u7b2c\u56db\u6b21\u53c8\u6d88\u5931...\n\n\u6ce8\u610f\u5230\uff0c\u5f71\u54cd\u4e00\u6761\u8fb9\u7684\u5b58\u5728\u72b6\u6001\u7684\u65f6\u523b\uff0c\u90fd\u662f\u5728 $1\\,\\,u\\,\\,v$ \uff08\u6b64\u5904\u662f\u771f\u5b9e\u503c\uff09\u8fd9\u4e2a\u4e1c\u897f\u51fa\u73b0\u7684\u65f6\u523b\u3002\u5047\u8bbe\u65f6\u523b $i_1,i_2,...,i_k$ \u7684\u65f6\u5019\u90fd\u662f $1$ \u64cd\u4f5c\uff0c\u4e14\u4e24\u79cd\u53ef\u80fd\u7684 $(x',y')$ \u91cc\u6709\u4e00\u79cd\u662f $(u,v)$\u3002\u90a3\u4e48 $(u,v)$ \u5b58\u5728\u72b6\u6001\u7684\u6539\u53d8\uff0c\u5c31\u53ea**\u53ef\u80fd**\u4f1a\u5728\u8fd9\u4e9b\u65f6\u523b\u3002\u4e4b\u6240\u4ee5\u662f\u201c\u53ef\u80fd\u201d\uff0c\u56e0\u4e3a\u4e5f\u8bb8\u67d0\u4e2a\u65f6\u523b\u7684\u771f\u5b9e\u503c\u5e76\u4e0d\u662f $(u,v)$\uff0c\u800c\u662f\u53e6\u4e00\u5bf9\u5019\u9009\u7684\u771f\u5b9e\u503c\uff0c\u90a3\u5c31\u4e0d\u4f1a\u4f7f\u5f97 $(u,v)$ \u7684\u5b58\u5728\u6027\u53d6\u53cd\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u5bf9\u4e8e\u8fd9\u6761\u8fb9 $(u,v)$\uff0c\u628a\u5b83\u5b58\u5728\u7684\u65f6\u95f4\u5206\u4e3a $k-1$ \u6761\u7ebf\u6bb5\uff1a$[i_1,i_2],[i_2,i_3],...,[i_{k-1},i_k]$\u3002\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u4e0d\u96be\u770b\u51fa\uff0c\u6700\u540e $(u,v)$ \u771f\u5b9e\u5b58\u5728\u7684\u65f6\u95f4\uff0c\u662f\u4ece\u8fd9 $k-1$ \u6761\u7ebf\u6bb5\u91cc\u9009\u51fa\u82e5\u5e72\u6761\u5f62\u6210\u7684\u5e76\u96c6\u3002\n\n\u66f4\u8fdb\u4e00\u6b65\u7684\uff0c\u5f53\u6211\u4eec\u77e5\u9053\u65f6\u523b $i_j$ \u7684\u771f\u5b9e\u503c\u540e\uff0c\u5176\u5b9e\u9a6c\u4e0a\u53ef\u4ee5\u786e\u5b9a\u5728\u65f6\u95f4\u6bb5 $[i_j,i_{j+1}]$ \u8fd9\u6761\u8fb9\u662f\u5426\u5b58\u5728\uff1a\u5982\u679c $i_j$ \u65f6\u523b\u7684\u771f\u5b9e\u503c\u5c31\u662f $(u,v)$\uff0c\u663e\u7136\u5176\u5b58\u5728\u6027\u662f $[i_{j-1},i_j]$ \u65f6\u95f4\u6bb5\u5b58\u5728\u6027\u7684\u53d6\u53cd\uff1b\u5426\u5219\u5176\u5b58\u5728\u6027\u5c31\u662f $[i_{j-1},i_j]$ \u65f6\u95f4\u6bb5\u5185\u8fb9 $(u,v)$ \u7684\u5b58\u5728\u6027\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u4f60\u8981\u60f3\u77e5\u9053\u65f6\u523b $i_j$ \u7684\u7b54\u6848\uff0c\u8bf4\u660e\u7ebf\u6bb5\u6811\u4e0a\u5df2\u7ecf\u904d\u5386\u5230\u4e86\u8282\u70b9 $[i_j,i_j]$ \u4e86\u3002\u4f46\u662f\u8fd9\u6837\uff0c\u4f60\u904d\u5386\u5230\u8fd9\u4e2a\u8282\u70b9\u4e4b\u524d\uff0c$[i_j,i_{j+1}]$ \u8fd9\u6761\u8fb9\u4f1a\u88ab\u6302\u5230\u67d0\u4e2a\u7236\u4eb2\uff08\u6216\u8282\u70b9\u672c\u8eab\uff09\u4e0a\u9762\u53bb\u7684\u3002\u6240\u4ee5\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5faa\u73af\uff1a\u6211\u8981\u77e5\u9053\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u4e00\u6761\u8fb9\u80fd\u4e0d\u80fd\u52a0\uff0c\u5f97\u5148\u77e5\u9053\u67d0\u4e2a\u5b50\u6811\u5185\u53f6\u5b50\u7684\u7b54\u6848\uff1b\u4f46\u662f\u60f3\u77e5\u9053\u8fd9\u4e2a\u53f6\u5b50\u7684\u7b54\u6848\uff0c\u6211\u8981\u628a\u5f53\u524d\u8282\u70b9\u5185\u8981\u52a0\u7684\u8fb9\u7ed9\u52a0\u4e86...\n\n\u6b64\u65f6\uff0c\u5341\u5206\u5de7\u5999\u7684\u60f3\u6cd5\u662f\u628a\u7ebf\u6bb5\u4fee\u6539\u4e3a $[i_{j}+1,i_{j+1}]$ \u7684\u5f62\u5f0f\uff0c\u5bb9\u6613\u53d1\u73b0\u5de6\u7aef\u70b9\u7684\u8c03\u6574\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u53cd\u6b63\u65f6\u523b $i_j$ \u5e76\u4e0d\u662f\u8be2\u95ee\u3002\u800c\u8fd9\u6837\uff0c\u53c8\u5229\u7528\u5230\u4e00\u4e2a\u5341\u5206\u6d45\u663e\u7684\u6027\u8d28\uff1a\u5728\u6b63\u5e38\u7ebf\u6bb5\u6811\u904d\u5386\u5230\u8282\u70b9 $[l,l]$ \u7684\u65f6\u5019\uff0c\u662f\u4e0d\u4f1a\u904d\u5386\u8fc7\u4e00\u4e2a\u5de6\u8fb9\u754c $\\gt l$ \u7684\u8282\u70b9\u7684\u3002\uff08\u6709\u4eba\u8bf4\u8fd9\u4e2a\u505a\u6cd5\u662f\u201c\u534a\u5728\u7ebf\u201d\u7684\uff0c\u8fd9\u4e2a\u201c\u5728\u7ebf\u201d\u5c31\u4f53\u73b0\u5728\u8fd9\u91cc\u3002\uff09\n\n\u6240\u4ee5\u7531\u4e0a\u5c31\u53ef\u4ee5\u60f3\u5230\u5e76\u8bf4\u660e\u4ee5\u4e0b\u6d41\u7a0b\u7684\u6b63\u786e\u6027\uff1a\n\n- \u4e00\u5f00\u59cb\u628a $k-1$ \u4e2a\u65f6\u523b\u90fd\u6253\u8fdb\u7ebf\u6bb5\u6811\u8282\u70b9\u5b58\u50a8\u3002\n\n- \u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4 $f$\uff0c\u521d\u59cb\u90fd\u662f $0$\u3002\u5728\u52a0\u5165\u8282\u70b9\u5b58\u50a8\u7684\u8fb9\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c $f(x,y)$ \u4e3a $1$\uff0c\u5c31\u52a0\u5165\u8fd9\u6761\u8fb9 $(x,y)$\uff0c\u5426\u5219\u4e0d\u52a0\u3002\n\n- \u904d\u5386\u5230\u53f6\u5b50\u7684\u65f6\u5019\uff0c\u5982\u679c\u662f\u8be2\u95ee\uff0c\u5e76\u67e5\u96c6\u76f4\u63a5\u67e5\u8be2\u5e76\u4e14\u66f4\u65b0\u7b54\u6848\u5373\u53ef\uff1b\u5982\u679c\u662f\u7b2c\u4e00\u7c7b\u64cd\u4f5c\uff0c\u8bbe\u7b97\u51fa\u6765\u7684\u771f\u5b9e\u503c\u662f $(x,y)$\uff0c\u5219 $f[x,y]=f[x,y]\\oplus 1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nusing namespace std;\nconst int MAXN=2e5+10;\nint n,m,op[MAXN],x[MAXN],y[MAXN],ans[MAXN],lastans;\nmap<array<int,2>,int>pre;\nstruct DSU{\n    int fa[MAXN],sz[MAXN];\n    vector<array<int,2> >op;\n    int find(int x){while(fa[x]!=x)x=fa[x];return x;}\n    void merge(int x,int y){\n        x=find(x),y=find(y);if(x==y){op.push_back({0,0});return;}\n        if(sz[x]<sz[y])swap(x,y);\n        op.push_back({x,y});\n        fa[y]=x;sz[x]+=sz[y];\n    }\n    void back(){\n        int x=op.back()[0],y=op.back()[1];op.pop_back();if(!x)return;\n        fa[y]=y;sz[x]-=sz[y];\n    }\n}dsu;\nvector<array<int,2> >edge[MAXN<<2];\nvoid upd(int x,int l,int r,int ql,int qr,int u,int v){\n    if(ql<=l && qr>=r){edge[x].push_back({u,v});return;}\n    int mid=(l+r)>>1;\n    if(ql<=mid)upd(lc(x),l,mid,ql,qr,u,v);\n    if(qr>mid)upd(rc(x),mid+1,r,ql,qr,u,v);\n}\nvoid solve(int X,int l,int r){\n    int cnt=0;\n    for(auto e:edge[X]){\n        int x=e[0],y=e[1];\n        if(pre[{x,y}]){\n            cnt++;\n            dsu.merge(x,y);\n        }\n    }\n    if(l==r){\n        int u=(x[l]+lastans-1)%n+1,v=(y[l]+lastans-1)%n+1;\n        if(u>v)swap(u,v);\n        if(op[l]==2)ans[l]=lastans=(dsu.find(u)==dsu.find(v));\n        else pre[{u,v}]=pre[{u,v}]^1;\n        while(cnt--)dsu.back();\n        return;\n    }\n    int mid=(l+r)>>1;\n    solve(lc(X),l,mid);solve(rc(X),mid+1,r);\n    while(cnt--)dsu.back();\n}\nint main(){\n    cin>>n>>m;\n    rep(i,1,n)dsu.fa[i]=i,dsu.sz[i]=1;\n    rep(i,1,m){cin>>op[i]>>x[i]>>y[i];}\n    rep(i,1,m){\n        if(op[i]==1){\n            int x1=x[i]%n+1,y1=y[i]%n+1;if(x1>y1)swap(x1,y1);\n            int x2=(x[i]-1)%n+1,y2=(y[i]-1)%n+1;if(x2>y2)swap(x2,y2);\n            if(pre.find({x1,y1})!=pre.end())upd(1,1,m,pre[{x1,y1}]+1,i,x1,y1);\n            if(pre.find({x2,y2})!=pre.end())upd(1,1,m,pre[{x2,y2}]+1,i,x2,y2);\n            pre[{x1,y1}]=i;pre[{x2,y2}]=i;\n        }\n    }\n    for(auto p:pre){\n        if(p.second==m)continue;\n        upd(1,1,m,p.second+1,m,p.first[0],p.first[1]);\n    }\n    pre.clear();\n    solve(1,1,m);\n    rep(i,1,m)if(op[i]==2)cout<<ans[i];\n    return 0;\n}\n```",
        "postTime": 1651665088,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u3010CF1217F\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u4e0d\u9700\u8981\u5173\u5fc3 $lastans$\u5427\uff0c\u76f4\u63a5\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e00\u8fb9\u505a\uff0c\u4e00\u8fb9\u52a0\u8be2\u95ee\uff0c\u56e0\u4e3a\u5f71\u54cd\u4e0d\u5230\u524d\u9762\u7684 \u3002\n\n\u6216\u8005\u53ef\u4ee5\u6309\u65f6\u95f4\u5206\u5757\uff0c\u4e5f\u5c31\u505a\u5b8c\u4e86\u3002",
        "postTime": 1601375389,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1217F \u3010Forced Online Queries Problem\u3011"
    }
]