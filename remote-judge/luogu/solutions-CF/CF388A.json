[
    {
        "content": "\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b+\u8d2a\u5fc3\u3002\n\n\u8003\u8651\u5230\u7b54\u6848\u53ea\u80fd\u5728\u533a\u95f4$[1,n]$\u4e4b\u95f4\uff0c\u6240\u4ee5\u76f4\u63a5for\u5faa\u73af\u6bcf\u4e2a\u76d2\u5b50\u5373\u53ef\u3002\n\n\u5728\u6b64\u4e4b\u524d\u53ea\u9700\u8981sort\uff0c\u4fdd\u8bc1\u5148\u628a\u5c3d\u91cf\u5927\u7684\u653e\u5728\u5806\u7684\u4e0b\u9762\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n^2)$\n\n\u8d2a\u5fc3\u4f9d\u636e\uff1a\u5f53\u4e0d\u628a\u5806\u4e2d\u6700\u5927\u7684\u6570\u653e\u5728\u5e95\u90e8\u65f6\uff0c\u5806\u7684\u5927\u5c0f\u5c31\u53d8\u6210\u8f83\u5c0f\u7684\u6570\uff0c\u5bf9\u8d2a\u5fc3\u4e0d\u5229\u3002\n\n\u4ee3\u7801\u4e2dvis\u6570\u7ec4\u8bb0\u5f55\u76d2\u5b50\u6709\u6ca1\u6709\u88ab\u7528\u8fc7\uff0ctal\u8868\u793a\u5f53\u524d\u5806\u7684\u9ad8\u5ea6\uff0cans\u8868\u793a\u5806\u6570\u3002\n\n$\\color{blue}\\texttt{Code:}$\n```\n#include<bits/stdc++.h>\nint n,a[233],vis[233],ans;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)scanf(\"%d\",&a[i]);\n    std::sort(a,a+n);\n    for(int i=0;i<n;i++)\n        if(!vis[i]){\n            int tal=vis[i]=1;\n            for(int j=i+1;j<n;j++)\n                if(!vis[j]&&tal<=a[j])vis[j]=1,tal++;\n            ans++;\n        }\n    printf(\"%d\",ans);\n}\n```\n\u8c22\u8c22\u5927\u5bb6!",
        "postTime": 1563705816,
        "uid": 159686,
        "name": "Loser_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF388A \u3010Fox and Box Accumulation\u3011"
    },
    {
        "content": "## Description\n\n\u6709 $n$ \u4e2a\u7bb1\u5b50\uff0c\u6bcf\u4e2a\u7bb1\u5b50\u4e0a\u9762\u53ef\u4ee5\u653e $a_i$ \u4e2a\u7bb1\u5b50\uff0c\u6c42\u6700\u5c11\u9700\u8981\u591a\u5c11\u5806\u7bb1\u5b50\u3002\n\n$1 \\le n ,a_i\\le 100$\u3002\n\n## Solution\n\n\u628a\u7bb1\u5b50\u6309 $a_i$ \u6392\u5e8f\uff0c\u7136\u540e\u6211\u4eec\u4ece $a_i$ \u6700\u5c0f\u7684\u5f00\u59cb\u53d6\uff0c\u53d6\u5b8c\u4e00\u5806\u540e\u91cd\u590d\u76f4\u5230\u6ca1\u6709\u53ef\u4ee5\u88ab\u53d6\u7684\u5373\u53ef\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff1a\n\n1. \u8bb0 $p$ \u4e3a\u5806\u6570\uff0c$l$ \u4e3a\u5269\u4e0b\u6ca1\u53d6\u7684\u7bb1\u5b50\uff0c$k$ \u4e3a\u8fd9\u4e00\u5806\u5df2\u53d6\u7684\u7bb1\u5b50\u3002\n\n2. \u628a $i$ \u4ece $1 \\sim n$ \u626b\u4e00\u904d\uff0c\u628a $a_i > k$ \u4e14\u672a\u88ab\u6807\u8bb0\u7684 $a_i$ \u6807\u8bb0\uff0c\u5e76 $k \\gets k+1$\uff0c$l \\gets l-1$\u3002\n\n3. \u91cd\u590d\u7b2c\u4e8c\u6b65\u76f4\u81f3 $l=0$\u3002\n\n### \u8d2a\u5fc3\u8bc1\u660e\n\n\u9006\u5411\u601d\u7ef4\uff0c\u8003\u8651\u5df2\u7ecf\u653e\u597d\u7684\u7bb1\u5b50 $a_l \\sim a_r$\uff0c\u5982\u679c\u6b64\u65f6\u8fd8\u6709 $a_k$ \u53ef\u4ee5\u653e\u5728 $a_l$ \u524d\u9762\uff0c\u663e\u7136\u66f4\u4f18\uff0c\u4e8e\u662f\u505a\u6cd5\u5f97\u8bc1\u3002\n\n## Code\n\n```cpp\nvoid Solve(){\n\tread(n);\n\tF(i,1,n) read(a[i]);\n\tsort(a+1,a+n+1);\n//\tfor(int i=1;i<=n;i++) write(a[i],' '); ENDL;\n\tint used=0,lft=n,box=0;\n\twhile(true){\n\t\tused++;\n\t\tbox=-1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(a[i]>box){\n\t\t\t\tlft--;\n\t\t\t\ta[i]=-iinf;\n\t\t\t\tbox++;\n\t\t\t}\n\t\t}\n//\t\tfor(int i=1;i<=n;i++) write(a[i],' '); ENDL;\n\t\tif(lft==0) break;\n\t}\n\twrite(used,'\\n');\n}\n```",
        "postTime": 1671202026,
        "uid": 501865,
        "name": "TheSky233",
        "ccfLevel": 4,
        "title": "CF388A Fox and Box Accumulation \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u6211\u4eec\u76f4\u63a5\u8d2a\u5fc3\uff0c\u5148\u5c06\u6570\u7ec4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f7f\u5f97\u627f\u91cd\u80fd\u529b\u6700\u5927\u7684\u7bb1\u5b50\u5728\u6700\u4e0b\u9762\u3002\u7136\u540e\u53ea\u9700\u8981\u4ece\u524d\u5411\u540e\u679a\u4e3e\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u7bb1\u5b50\u88ab\u7528\u8fc7\u4e86\uff0c\u90a3\u5c31\u679a\u4e3e\u4e0b\u4e00\u4e2a\uff0c\u5426\u5219\u5c31\u679a\u4e3e\u8fd9\u4e2a\u7bb1\u5b50\u4e0b\u9762\u6700\u591a\u653e\u591a\u5c11\u4e2a\u7bb1\u5b50\u3002\n\n\u8bc1\u660e\u4e00\u4e0b\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\uff1a\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u4ee4\u627f\u91cd\u80fd\u529b\u6700\u5927\u7684\u7bb1\u5b50\u5728\u6700\u4e0b\u9762\uff0c\u90a3\u4e48\u653e\u5728\u6700\u4e0b\u9762\u7684\u7bb1\u5b50\u80fd\u653e\u7684\u7684\u7bb1\u5b50\u6570\u91cf\u5c31\u8d8a\u5c11\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5806\u6570\u53d8\u591a\uff0c\u4e0e\u9898\u610f\u4e0d\u7b26\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=5e5+5;\nint n,a[N],used[N],ans;\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%lld\",&a[i]);\n\tsort(a+1,a+n+1);\n\tfor(int i=1;i<=n;++i){\n\t\tif(used[i]) continue;\n\t\tused[i]=1;\n\t\tans++;\n\t\tint tmp=1;\n\t\tfor(int j=i+1;j<=n;++j)\n\t\t\tif(!used[j] && tmp<=a[j]){\n\t\t\t\tused[j]=1;\n\t\t\t\ttmp++;\n\t\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1665379415,
        "uid": 491321,
        "name": "Erotate",
        "ccfLevel": 0,
        "title": "CF388A Fox and Box Accumulation \u9898\u89e3"
    },
    {
        "content": "\u5b66\u6821\u6b63\u597d\u8bb2\u5230\u8fd9\u9898\u5c31\u5199\u7bc7\u9898\u89e3\u628a\uff0c\u8d81\u8fd8\u6ca1\u6709 $O(n \\log n)$ \u7684\u9898\u89e3\u8d76\u7d27\u6765\u4e00\u53d1O_o\n\n## \u9898\u610f\n\n\u6709 $n$ \u4e2a\u7bb1\u5b50\uff0c \u4ed6\u4eec\u4e0a\u8fb9\u5206\u522b\u80fd\u653e $a_1,a_2, \\dots a_n$ \u4e2a\u7bb1\u5b50\uff0c\u95ee\u6700\u5c11\u8981\u653e\u6210\u51e0\u5806\u3002\n\n## \u8d2a\u5fc3\u601d\u8def\n\n\u5bf9\u4e8e\u4e00\u5806\u7bb1\u5b50\u6765\u8bf4\uff0c\u4ece\u6297\u538b\u80fd\u529b\u6700\u5dee\u7684\u7bb1\u5b50\u5f00\u59cb\u653e\uff0c\u80fd\u7ee7\u7eed\u653e\u8fd9\u4e2a\u6297\u538b\u80fd\u529b\u7684\u7bb1\u5b50\u5c31\u7ee7\u7eed\u653e\uff0c\u5426\u5219\u5c31\u6362\u6297\u538b\u80fd\u529b\u66f4\u597d\u7684\u7bb1\u5b50\u3002\n\n## \u8d2a\u5fc3\u4f9d\u636e\n\n1. \u5bf9\u4e8e\u4e00\u4e2a\u6297\u538b\u80fd\u529b\u4e3a $Q$ \u7684\u653e\u5728\u8fd9\u5806\u6700\u5e95\u4e0b\u7bb1\u5b50 $a$ \u6765\u8bf4\uff0c\u5982\u6709\u53e6\u4e00\u4e2a\u7bb1\u5b50 $b$ \u7684\u6297\u538b\u80fd\u529b\u6bd4\u5b83\u5f3a\uff08\u81f3\u5c11\u4e3a $Q+1$\uff09,\u90a3\u4e48 $b$ \u4e00\u5b9a\u80fd\u653e\u5728 $a$ \u7684\u4e0b\u9762\uff08\u5e9f\u8bdd\uff09\u3002\n\n2. \u5f53\u5c3d\u53ef\u80fd\u5927\u7684\u6570\u4e0d\u5728\u5806\u5e95\u65f6\uff0c\u90a3\u4e48\u5806\u7684\u603b\u6570\u91cf\u4f1a\u589e\u52a0\uff0c\u5e73\u5747\u9ad8\u5ea6\u51cf\u5c0f\uff0c\u663e\u7136\u4e0d\u80fd\u8fd9\u4e48\u5e72\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[500005];    //\u8f93\u5165\u6570\u7ec4\nqueue<pair<int,int> > q;           //\u90a3\u4e2a\u961f\u5217\uff0cpair<x,y> \u8868\u793aa[] \u79cd\u6709x\u4e2ay\nint main()\n{\n    int n;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    sort(a+1,a+n+1);                    //\u5fc5\u987b\u6392\u5e8f\n    a[n+1]=1000000007;\n    int cnt=1;\n    for(int i=2;i<=n+1;i++)             //\u7edf\u8ba1a[] \u79cd\u6240\u6709\u7684\u201cx\u4e2ay\u201d\uff0c\u65b9\u6cd5\u6709\u5f88\u591a\n    {\n        if(a[i]!=a[i-1])\n        {\n            q.push(make_pair(cnt,a[i-1]));\n            cnt=1;\n        }\n        else\n            cnt++;\n    }\n    int nowbox=0,tot=n;                 //nowbox:\u8fd9\u5806\u7bb1\u5b50\u7684\u603b\u5806\u53e0\u6570\uff0ctot:while()\u7684\u6761\u4ef6\u3001\u8868\u793a\u5269\u4f59\u7684\u7bb1\u5b50\u6570\n    int ans=0;                          //\u7b54\u6848\uff0c\u4e00\u5171\u6709\u591a\u5c11\u5806\n    while(tot>0)\n    {\n        //cout<<nowbox<<endl;\n        if(nowbox<=q.front().second)    //\u5982\u679c\u80fd\u653e\n        {\n            int loss=min(q.front().first,q.front().second-nowbox+1);        //\u4e00\u5171\u80fd\u653eloss\uff08\u8fd9\u79cd\u8d28\u91cf\u80fd\u653e\u8fdb\u53bb\u7684\u6700\u5927\u7bb1\u5b50\u6570\uff09\n            nowbox+=loss;\n            tot-=loss;\n            q.front().first-=loss;\n            if(q.front().first<=0)                                      //\u4e0d\u80fd\u653e\u4e86\u5c31\u5230\u961f\u5c3e\uff0c\u4e0d\u5e72\u6270\u5176\u4ed6\u7bb1\u5b50\u7684\u653e\u7f6e\n                q.pop();\n            else\n            {\n                q.push(make_pair(q.front().first,q.front().second));\n                q.pop();\n            }\n        }\n        else                                        //\u8fd9\u5806\u4e0d\u80fd\u518d\u653e\u4e86qwq\n        {\n            ans++;\n            nowbox=0;\n        }\n    }\n    cout<<ans+1;                    //\u6700\u540e\u4e00\u5bf9\u6ca1\u6709\u88ab\u7edf\u8ba1\n    return 0;\n}\n\n```\n",
        "postTime": 1653047233,
        "uid": 326944,
        "name": "sync_with_stdio",
        "ccfLevel": 5,
        "title": "CF388A Fox and Box Accumulation\u9898\u89e3"
    },
    {
        "content": "\u7531\u4e8e\u672c\u9898\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\uff0c\u53ef\u4ee5\u7528\u8d2a\u5fc3\u6c42\u89e3\u3002\n\n\u800c\u8d2a\u5fc3\u7b56\u7565\u7684\u5b9e\u73b0\u5f80\u5f80\u9700\u8981\u4e0e\u6392\u5e8f\u7ed3\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6574\u4e2a\u6570\u7ec4**\u4ece\u5c0f\u5230\u5927\u6392\u5e8f**\uff1a\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u7b56\u7565\u6b63\u786e\uff08\u628a\u5c3d\u91cf\u5927\u7684\u653e\u5728\u5806\u5e95\uff09\u3002\n\n**\u8d2a\u5fc3\u4f9d\u636e**\uff1a\u5f53\u6700\u5927\u7684\u6570\u4e0d\u5728\u5806\u5e95\u65f6\uff0c\u5806\u7684\u6570\u91cf\u4f1a\u589e\u52a0\uff0c\u800c\u6bcf\u4e2a\u5806\u7684\u9ad8\u5ea6\u5219\u4f1a\u76f8\u5e94\u51cf\u5c11\uff08\u4e0d\u7b26\u5408\u9898\u610f\uff09\n\n**Code\uff1a**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[101],b[101],n,s,ans; //ans\u4e3a\u8ba1\u6570\u5668\uff0cb\u6570\u7ec4\u5224\u65ad\u662f\u5426\u4f7f\u7528\u8fc7\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tsort(a+1,a+1+n);//\u6392\u5e8f\uff0c\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(b[i])//\u82e5\u5df2\u7ecf\u7528\u8fc7\n\t\t{\n\t\t\tcontinue;//\u76f4\u63a5\u5224\u65ad\u4e0b\u4e00\u4e2a\n\t\t}\n\t\ts=1;\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif(!b[j]&&a[j]>=s)//\u82e5\u53ef\u4ee5\u653e\u5728\u5f53\u524d\u5806\u4e0a\u65b9\u4e14\u8be5\u7bb1\u5b50\u672a\u4f7f\u7528\u8fc7\n\t\t\t{\n\t\t\t\ts++;\n\t\t\t\tb[j]=1;//\u6807\u8bb0\u4e3a\u5df2\u4f7f\u7528\n\t\t\t}\n\t\t}\n\t\tans++;//\u8ba1\u6570\u5668\u52a0\u4e00\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1641305125,
        "uid": 387031,
        "name": "ckk11288",
        "ccfLevel": 0,
        "title": "CF388A\u9898\u89e3"
    }
]