[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF650D)\n\n\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u4ee5\u7b2c $i$ \u4e2a\u6570\u7ed3\u5c3e\u7684 LIS \u957f\u5ea6 $d[i]$\u3002\n\n\u540c\u7406\u53cd\u7740\u6c42\u4e00\u904d\u4e5f\u53ef\u4ee5\u6c42\u51fa\u4ee5\u7b2c $i$ \u4e2a\u6570\u5f00\u5934\u7684 LIS \u957f\u5ea6\u3002\n\n\u56de\u5230\u672c\u9898\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539 $a[i]=x$\u3002\n\n\u5f88\u663e\u7136\u67092\u79cd\u60c5\u51b5\uff1a\n\n1. \u65b0\u7684 LIS \u5305\u542b a[i]\u3002\n\n2. \u65b0\u7684 LIS \u4e0d\u5305\u542b a[i]\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5148\u6c42\u4e00\u5b9a\u5305\u542b $a[i]$ \u7684 LIS\uff0c\u9884\u5904\u7406\u51fa\u4ee5\u7b2c $i$ \u4e2a\u6570\u7ed3\u5c3e\u7684 LIS\uff1a$left[i]$ \u548c\u4ee5\u7b2c $i$ \u4e2a\u6570\u5f00\u5934\u7684 LIS\uff1a$right[i]$\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u5de6\u8fb9 $\\max(left[j])$ \u548c\u53f3\u8fb9 $\\max(right[j])$\uff0c\u4e24\u8005\u957f\u5ea6\u76f8\u52a0\u518d\u52a0 $1$ \u5c31\u662f\u5305\u542b $a[i]$ \u7684\u65b0 LIS \u4e86\uff01\n\n\u5982\u679c\u8fd9\u4e2a\u503c\u5927\u4e8e\u539f\u5e8f\u5217\u7684 LIS\uff0c\u90a3\u5b83\u5c31\u662f\u7b54\u6848\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u6790 LIS \u4e0d\u5305\u542b $x$ \u7684\u60c5\u51b5\uff1a\n\n1. \u5982\u679c\u4fee\u6539\u7684\u6570\u5728\u539f\u5e8f\u5217\u7684 LIS \u4e2d\uff0c\u5219\u4e0d\u5305\u542b\u4fee\u6539\u7684\u6570\u7684 LIS \u4e00\u5b9a\u4f1a\u51cf\u5c11 $1$\u3002\n\n2. \u5982\u679c\u4fee\u6539\u7684\u6570\u4e0d\u5728\u539f\u5e8f\u5217\u7684 LIS \u4e2d\uff0c\u5219\u4e0d\u5305\u542b\u4fee\u6539\u7684\u6570\u7684 LIS \u5219\u4e0d\u4f1a\u53d8\u5316\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\uff0c\u5224\u65ad\u5176\u662f\u5426\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u5148\u7528\u4e4b\u524d\u7684\u601d\u8def\u7b97\u51fa\u5305\u542b $a[i]$ \u7684 lis\uff1a$len[i]=max(left)+1+\\max(right)$\u3002\n\n\u5982\u679c $len[i]$ \u7b49\u4e8e\u539f\u5e8f\u5217\u7684 LIS\uff0c\u90a3\u4e48 $i$ \u53ef\u80fd\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u90a3\u5982\u679c i \u53ef\u80fd\u51fa\u73b0\uff0c\u5c31\u53c8\u5982\u679c\u5b58\u5728 $j<i$ \u4e14 $a[j]\\geqslant a[i]$ \u4e14 $j$ \u53ef\u80fd\u51fa\u73b0\u5728LIS\u4e2d\uff0c\u5f53\u7136 $i$ \u4e5f\u53ef\u80fd\u4e0d\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u540c\u7406\u5982\u679c\u5b58\u5728 $j>i$ \u4e14 $a[j]\\leq a[i]$ \u4e14 j \u53ef\u80fd\u51fa\u73b0\u5728 LIS \u4e2d\uff0c\n\u90a3\u4e48 $i$ \u53ef\u4ee5\u4e0d\u51fa\u73b0\u5728LIS\u4e2d\u3002\n\n\u6240\u4ee5\u5982\u679c $i$ \u4e0d\u6ee1\u8db3\u53ef\u4ee5\u4e0d\u51fa\u73b0\u5728 LIS \u4e2d\u7684\u6761\u4ef6\uff0c\u5219 $i$ \u4e00\u5b9a\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u5219\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539 $a[i]=x$\uff0c\u5148\u8ba1\u7b97\u5305\u542b $x$ \u7684LIS\u957f\u5ea6\u3002\u5982\u679c\u6bd4\u539f\u5e8f\u5217 LIS \u5927\uff0c\u5219\u4e00\u5b9a\u662f\u7b54\u6848\u3002\n\n\u5426\u5219\uff0c\u5982\u679c $i$ \u53ef\u4ee5\u4e0d\u51fa\u73b0\uff0c\u5219 LIS \u4e0d\u53d8\uff0c\u5426\u5219\u5982\u679c $i$ \u4e00\u5b9a\u51fa\u73b0\uff0c\u5219 LIS \u4f1a\u51cf\u5c11 $1$\u3002\n\n\u56de\u8fc7\u5934\u6765\uff0c\u5b83\u5c31\u662f\u8ba1\u7b97 $\\max(left[j])$\uff0c\u4e5f\u5c31\u662f\u7ecf\u5178\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\n\n\u5bf9 $a[j],x$ \u6392\u5e8f\u3002\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $x$\uff0c\u628a $a[j]<x$ \u7684 $left[j]$ \u63d2\u5165\u6811\u72b6\u6570\u7ec4\u7684\u7b2c $j$ \u4e2a\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u628a\u7ef4\u62a4\u66f4\u65b0\u548c\u8be2\u95ee\u6811\u72b6\u6570\u7ec4\u7684\u52a0\u6cd5\u53d8\u6210\u6c42 $max$\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6c42\u524d\u7f00\u6700\u5927\u503c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9053\u9898\u4e86\uff01",
        "postTime": 1650859483,
        "uid": 675646,
        "name": "Dyousks",
        "ccfLevel": 0,
        "title": "CF650D \u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3- CF650D Zip-line\n\n* **\u9898\u76ee\u610f\u601d**\n\n \u5c31\u662f\u7ed9\u4f60\u4e2a\u5e8f\u5217\u4ee5\u53ca\u591a\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u628a$ai$\u6362\u505a$bi$\u6c42\u4e00\u904d$lis$\uff08\u64cd\u4f5c\u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\uff09\n \n * $Sol$\n \n \u663e\u7136\u6bcf\u6b21\u4fee\u6539\u66b4\u529b\u505a$lis$\u662f\u4e0d\u53ef\u884c\u7684\u590d\u6742\u5ea6\u81f3\u5c11\u4e3a$O(n^2 \\log n )$\u3002\u4e8e\u662f\u6211\u4eec\u8981\u601d\u8003\u6bcf\u6b21\u4fee\u6539\u4f1a\u5bf9\u7b54\u6848\u5f62\u6210\u600e\u6837\u7684\u5f71\u54cd\u3002\n \n \u5148\u5bf9\u539f\u5e8f\u5217\u6bcf\u4e2a\u70b9\u505a\u4e00\u904d\u4ee5\u4ed6\u4e3a\u7ed3\u675f\u7684$lis$\u8bb0\u4e3a$fi$\uff0c\u4ee5\u4ed6\u4f5c\u4e3a\u8d77\u59cb\u7684$lis$\u8bb0\u4e3a$gi$\u3002\u6613\u5f97\u539f\u5e8f\u5217\u7684$lis$\u5c31\u4e3a$max\\{fi+gi-1\\}$\u3002\n \n \u6bcf\u6b21\u5bf9\u4e8e\u4fee\u6539\u4e00\u4e2a\u503c\u5206\u51e0\u79cd\u60c5\u51b5\u6765\u8003\u8651 \uff08\u601d\u8def\u501f\u9274 \u971c\u96ea\u8c26\u5e74 \u7684\u9898\u89e3\uff09\uff0c\u6211\u4eec\u8bb0\u4fee\u6539\u8fc7\u540e\u7684$fi$\u4e3a$fi'$\uff0c$gi'$\u540c\u7406\u3002\n \n \u5bf9\u4e8e$+1$\u7684\u60c5\u51b5\u5982\u679c$fi'+gi'+1>ans$\u90a3\u5c31\u66f4\u65b0\u7b54\u6848\n \n \u5bf9\u4e8e$-1$\u7684\u60c5\u51b5\u76f8\u5bf9\u590d\u6742\u4e00\u70b9\u3002\u6211\u4eec\u8981\u5148\u5224\u65ad\u6b64\u6b21\u4fee\u6539\u7684\u70b9\u662f\u5426\u4e3a\u539f\u5e8f\u5217$lis$\u7684\u5fc5\u7ecf\u4e4b\u70b9\uff0c\u5224\u65ad\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\u5982\u679c$fi+gi-1=ans$\uff0c\u5e76\u4e14\u8fd9\u6837\u7684\u60c5\u51b5\u6709\u4e14\u53ea\u6709\u4e00\u79cd\u3002\n \n \u5269\u4f59\u7684\u5c31\u662f\u4e0d\u53d8\u7684\u60c5\u51b5\u4e86\u3002\u4e8e\u662f\u6211\u4eec\u8fd9\u9053\u9898\u76ee\u5c31\u505a\u5b8c\u4e86\u3002\u6c42$lis$\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u5b9e\u73b0$fi$\u6b63\u7740$gi$\u5012\u7740\u5373\u53ef\u5e76\u4e14\u8981\u79bb\u6563\u5316\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\u7528\u79bb\u7ebf\u6765\u5b9e\u73b0\u3002\n \n * $Code$\n \n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) x&(-x)\nusing namespace std;\n\nconst int N=800005;\n\nint n,m,ans,f[N],g[N],tr[N];\nint a[N],b[N],res[N],cs[N],cnt;\n\nstruct number {\n\tint id,x,val;\n\tint f,g;\n\tinline bool friend operator < (const number &a,const number &b) {\n\t\tif(a.x==b.x) return a.val<b.val;\n\t\treturn a.x<b.x;\n\t}\n};\nnumber q[N];\n\ninline int read() {\n\tint sum=0; char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) \n\t\tsum=sum*10+(ch^48),ch=getchar();\n\treturn sum;\n}\n\ninline void jia(int x,int v) {\n\twhile(x<=cnt) {\n\t\ttr[x]=max(tr[x],v);\n\t\tx+=lowbit(x);\n\t}\n}\n\ninline int query(int x) {\n\tint ret=0;\n\twhile(x) {\n\t\tret=max(ret,tr[x]);\n\t\tx-=lowbit(x);\n\t}\n\treturn ret;\n}\n\nint main() {\n\tn=read(),m=read();\n\tcnt=n;\n\tfor ( int i=1;i<=n;i++ ) {\n\t\ta[i]=read();\n\t\tb[i]=a[i];\n\t}\n\tfor ( int i=1;i<=m;i++ ) {\n\t\tq[i].id=i;\n\t\tq[i].x=read();\n\t\tq[i].val=read();\n\t\tb[++cnt]=q[i].val;\n\t}\n\tsort(b+1,b+cnt+1);\n\tcnt=unique(b+1,b+cnt+1)-b-1;\n\tfor ( int i=1;i<=n;i++ ) a[i]=lower_bound(b+1,b+cnt+1,a[i])-b;\n\tfor ( int i=1;i<=m;i++ ) q[i].val=lower_bound(b+1,b+cnt+1,q[i].val)-b;\n\tfor ( int i=1;i<=n;i++ ) {\n\t\tf[i]=query(a[i]-1)+1;\n\t\tjia(a[i],f[i]);\n\t}\n\tmemset(tr,0,sizeof(tr));\n\tfor ( int i=n;i>=1;i-- ) {\n\t\tg[i]=query(cnt-a[i])+1;\n\t\tjia(cnt-a[i]+1,g[i]);\n\t}\n\tfor ( int i=1;i<=n;i++ ) ans=max(ans,f[i]+g[i]-1);\n\tfor ( int i=1;i<=n;i++ ) if(f[i]+g[i]-1==ans) cs[f[i]]++;\n\tsort(q+1,q+m+1);\n\tmemset(tr,0,sizeof(tr));\n\tint now=1;\n\tfor ( int i=1;i<=m;i++ ) {\n\t\twhile(now<q[i].x) {\n\t\t\tjia(a[now],f[now]);\n\t\t\tnow++;\n\t\t}\n\t\tq[i].f=query(q[i].val-1);\n\t}\n\tmemset(tr,0,sizeof(tr));\n\tnow=n;\n\tfor ( int i=m;i>=1;i-- ) {\n\t\twhile(now>q[i].x) {\n\t\t\tjia(cnt-a[now]+1,g[now]);\n\t\t\tnow--;\n\t\t}\n\t\tq[i].g=query(cnt-q[i].val);\n\t\tif(q[i].f+q[i].g+1>ans) res[q[i].id]=q[i].f+q[i].g+1;\n\t}\n\tfor ( int i=1;i<=m;i++ ) if(!res[q[i].id]) {\n\t\tif(f[q[i].x]+g[q[i].x]==ans+1&&cs[f[q[i].x]]==1&&q[i].f+q[i].g+1<ans) res[q[i].id]=ans-1;\n\t\telse res[q[i].id]=ans;\n\t}\n\tfor ( int i=1;i<=m;i++ ) printf(\"%d\\n\",res[i]);\n}\n```\n\n",
        "postTime": 1579487436,
        "uid": 308464,
        "name": "\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF650D \u3010Zip-line\u3011"
    },
    {
        "content": "\u8bb0 $f_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c$g_i$ \u8868\u793a\u4ee5 $i$ \u5f00\u5934\u7684\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u6c42 $f$ \u548c $g$ \u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684 LIS \u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u7b49\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee $u,v$\uff0c\u5b83\u4f1a\u4fee\u6539\u6389\u4e00\u4e2a\u6570\u3002\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1aLIS \u4e2d\u5305\u542b\u8fd9\u4e2a\u6570\uff0c\u6216\u8005 LIS \u4e2d\u4e0d\u5305\u542b\u8fd9\u4e2a\u6570\u3002\n\n- \u5305\u542b\u7684\u60c5\u51b5\u3002\n\n  \u8fd9\u79cd\u60c5\u51b5\u8f83\u597d\u5904\u7406\u3002\u6211\u4eec\u53ea\u8981\u80fd\u6c42\u51fa\u5728 $u$ \u4e4b\u524d\u7ed3\u5c3e\u4e14\u7ed3\u5c3e\u7684\u6570\u5c0f\u4e8e $v$ \u7684 LIS \u957f\u5ea6 $a$\uff0c\u4ee5\u53ca\u5728 $u$ \u4e4b\u540e\u5f00\u5934\u4e14\u5f00\u5934\u7684\u6570\u5927\u4e8e $v$ \u7684 LIS \u957f\u5ea6 $b$\uff0c\u90a3\u4e48 $a+b+1$ \u5c31\u662f\u5176\u8d21\u732e\u3002\n\n  \u5c06\u8be2\u95ee\u79bb\u7ebf\u4ee5\u540e\uff0c\u5728\u6c42 $f$ \u548c $g$ \u7684\u540c\u65f6\u6309\u7167\u4e00\u6837\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5f97\u5230 $a$ \u548c $b$\u3002\n\n  \u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log n)$\u3002\n\n- \u4e0d\u5305\u542b\u7684\u60c5\u51b5\u3002\n\n  \u4ee4 $h_i$ \u8868\u793a\u4e0d\u5305\u542b $i$ \u65f6\u539f\u5e8f\u5217\u7684 LIS\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8be2\u95ee $u,v$\uff0c\u7b54\u6848\u53ea\u9700\u8981\u5bf9 $h_u$ \u53d6 $\\max$ \u5c31\u597d\u4e86\u3002\n\n  \u90a3\u4e48\u5982\u4f55\u6c42\u51fa $h_i$ \u5462\uff1f\n\n  \u5bf9\u4e8e $h_i$\uff0c\u6211\u4eec\u8981\u627e\u5230 $u,v$ \u6ee1\u8db3 $u\\lt i\\lt v$\uff0c$a_u\\lt a_v$\uff0c\u5e76\u4e14 $f_u+g_v$ \u6700\u5927\u3002\n\n  \u8003\u8651\u5206\u6cbb\u3002\u4ee4\u5f53\u524d\u4e2d\u70b9\u4e3a $x$\u3002\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e2a\u5728 $[l,x]$ \u4e2d\u7684 $f$\uff0c\u627e\u5230\u4e00\u4e2a\u5728 $[x+1,r]$ \u4e2d\u7684 $g$ \u5e76\u4f7f\u7ed3\u679c\u6700\u5927\u3002\u8fd9\u6837\u53ef\u4ee5\u66f4\u65b0 $h_{l..x}$\u3002\u53f3\u534a\u8fb9\u540c\u7406\u53ef\u5f97\u3002\n\n  \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $i\\in[l,x]$\uff0c\u5728 $[x+1,r]$ \u4e2d\u4e8c\u5206\u51fa\u7b2c\u4e00\u4e2a\u6ee1\u8db3 $a_i\\lt a_k$ \u7684 $k$\uff0c\u7136\u540e\u5bf9 $g_{k..r}$ \u6c42\u6700\u5927\u503c $g_0$\u3002\u7136\u540e $f_i+g_0$ \u7684\u7ed3\u679c\u53ef\u4ee5\u66f4\u65b0\u5230 $h_{i+1..x}$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u66f4\u65b0\u5230 $h_{i+1}$ \u4e0a\u7136\u540e\u6c42\u540e\u7f00\u6700\u5927\u503c\u5f97\u5230\u3002\n\n  \u9700\u8981\u6392\u5e8f\u548c\u4e8c\u5206\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log^2 n)$\u3002\n\n  \u8003\u8651\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n\n  \u9996\u5148\u8fd9\u4e2a\u6392\u5e8f\u53ef\u4ee5\u5206\u6cbb\u7684\u540c\u65f6\u8fdb\u884c\u5f52\u5e76\u3002\n\n  \u7136\u540e\u8fd9\u4e2a\u4e8c\u5206\u4e5f\u53ef\u4ee5\u7701\u3002\u6211\u4eec\u6309 $a_i$ \u4ece\u5927\u5230\u5c0f\u679a\u4e3e $i$\uff0c\u90a3\u4e48 $a_k$ \u4e5f\u662f\u4e0d\u65ad\u53d8\u5c0f\u7684\uff0c\u53cc\u6307\u9488\u7ef4\u62a4\u5373\u53ef\u3002$g$ \u7684\u6700\u503c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u3002\n\n  \u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n\u7b97\u6cd5\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n+m)$\u3002\n\n## Code\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<functional>\nusing namespace std;\nconst int N=4e5+10;\nint pre[N],suf[N],n,m,a[N],ans[N],res[N];\nvector<pair<int,int> >vc[N];\nint sta[N],top,cov[N];\npair<int,int>d[N],tmp[N];\nvoid solve(int l,int r){\n\tif(l==r){\n\t\treturn;\n\t}\n\tconst int mid=(l+r)/2;\n\tsolve(l,mid),solve(mid+1,r);\n\tfor(int i=mid,nw=0,it=r;i>=l;--i){\n\t\twhile(it>mid&&d[i].first<d[it].first)nw=max(nw,suf[d[it--].second]);\n\t\tcov[d[i].second+1]=pre[d[i].second]+nw;\n\t}\n\tfor(int i=l+1;i<=mid;++i)cov[i]=max(cov[i],cov[i-1]);\n\tfor(int i=l;i<=mid;++i)res[i]=max(res[i],cov[i]);\n\tfor(int i=l;i<=mid+1;++i)cov[i]=0;\n\tfor(int i=mid+1,nw=0,it=l;i<=r;++i){\n\t\twhile(it<=mid&&d[i].first>d[it].first)nw=max(nw,pre[d[it++].second]);\n\t\tcov[d[i].second-1]=suf[d[i].second]+nw;\n\t}\n\tfor(int i=r-1;i>mid;--i)cov[i]=max(cov[i],cov[i+1]);\n\tfor(int i=mid+1;i<=r;++i)res[i]=max(res[i],cov[i]);\n\tfor(int i=mid;i<=r;++i)cov[i]=0;\n\tint itL=l,itR=mid+1,it=l;\n\twhile(itL<=mid&&itR<=r)\n\tif(d[itL]<d[itR])tmp[it++]=d[itL++];else tmp[it++]=d[itR++];\n\twhile(itL<=mid)tmp[it++]=d[itL++];\n\twhile(itR<=r)tmp[it++]=d[itR++];\n\tfor(int i=l;i<=r;++i)d[i]=tmp[i];\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",a+i);\n\tfor(int i=1;i<=m;++i){\n\t\tint p,x;\n\t\tscanf(\"%d%d\",&p,&x);\n\t\tvc[p].emplace_back(x,i);\n\t\tans[i]=1;\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tres[i]=top;\n\t\tfor(auto it:vc[i]){\n\t\t\tint v=it.first,id=it.second;\n\t\t\tint len=lower_bound(sta,sta+top+1,v)-sta-1;\n\t\t\tans[id]+=len;\n\t\t}\n\t\tint t=lower_bound(sta,sta+top+1,a[i])-sta;\n\t\tif(t>top)sta[++top]=a[i];\n\t\telse sta[t]=min(sta[t],a[i]);\n\t\tpre[i]=t;\n\t}\n\tsta[top=0]=1e9+7;\n\tfor(int i=n;i;--i){\n\t\tres[i]=max(res[i],top);\n\t\tfor(auto it:vc[i]){\n\t\t\tint v=it.first,id=it.second;\n\t\t\tint len=lower_bound(sta,sta+top+1,v,greater<int>())-sta-1;\n\t\t\tans[id]+=len;\n\t\t}\n\t\tint t=lower_bound(sta,sta+top+1,a[i],greater<int>())-sta;\n\t\tif(t>top)sta[++top]=a[i];\n\t\telse sta[t]=max(sta[t],a[i]);\n\t\tsuf[i]=t;\n\t}\n\tfor(int i=1;i<=n;++i)d[i]=make_pair(a[i],i);\n\tsolve(1,n);\n\tfor(int i=1;i<=n;++i)\n\tfor(auto it:vc[i])ans[it.second]=max(ans[it.second],res[i]);\n\tfor(int i=1;i<=m;++i)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1600669417,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF650D \u3010Zip-line\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/650/problem/D) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF650D)\n\n\u6211\u6015\u4e0d\u662f\u4e2a nt\u2026\u2026\u4e00\u5f00\u59cb\u5ffd\u7565\u4e86\u201d\u8be2\u95ee\u72ec\u7acb\u201c\u8fd9\u4e2a\u6761\u4ef6\u2026\u2026\u7136\u540e\u5c31\u4e00\u76f4\u5728\u60f3\u6709\u4ec0\u4e48\u529e\u6cd5\u7ef4\u62a4\u5168\u5c40 LIS\u2026\u2026\u5fc3\u6001\u7206\u70b8\n\n\u9996\u5148\u79bb\u6563\u5316\u3002\u9884\u5904\u7406\u51fa\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u7ed3\u5c3e\u7684 LIS \u957f\u5ea6 $f_i$\uff0c\u4ee5\u53ca\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u5f00\u5934\u7684 LIS \u957f\u5ea6 $g_i$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6bcf\u6b21\u53ea\u4fee\u6539\u4e00\u4e2a\u5143\u7d20\uff0c\u6545\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u53ea\u53ef\u80fd\u662f\u539f\u5e8f\u5217 LIS \u7684\u957f\u5ea6 $mx\\pm 1$\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u6765\u63a2\u7a76\u4ec0\u4e48\u60c5\u51b5\u4e0b\u8be2\u95ee\u7684\u7b54\u6848\u4e3a $mx+1$\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u8be2\u95ee\u7684\u7b54\u6848\u4e3a $mx-1$\u3002\n\n$+1$ \u7684\u60c5\u51b5\u6bd4\u8f83\u5bb9\u6613\uff0c\u53ea\u53ef\u80fd\u662f\u5b58\u5728\u4e00\u4e2a\u901a\u8fc7 $a_i$ \u7684\u957f\u5ea6\u4e3a $mx+1$ \u7684\u4e0a\u5347\u5e8f\u5217\uff0c\u5982\u679c\u6211\u4eec\u8bb0 $f'_i$ \u4e3a\u5c06 $a_i$ \u4f4d\u7f6e\u4e0a\u7684\u503c\u6362\u6210 $b_i$ \u540e\uff0c\u4ee5 $a_i$ \u7ed3\u5c3e\u7684 LIS \u7684\u957f\u5ea6\uff0c$g'_i$ \u4e3a\u5c06 $a_i$ \u4f4d\u7f6e\u4e0a\u7684\u503c\u6362\u6210 $b_i$ \u540e\uff0c\u4ee5 $a_i$ \u5f00\u5934\u7684 LIS \u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u65b0\u5e8f\u5217\u4e2d\u7ecf\u8fc7 $a_i$ \u7684\u4e0a\u5347\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u5373\u4e3a $f'_i+g'_i-1$\uff0c\u6545\u82e5 $f'_i+g'_i-1=mx+1$\uff0c\u5219\u65b0\u7684 LIS \u957f\u5ea6\u4e3a $mx+1$\u3002\n\n$-1$ \u7684\u60c5\u51b5\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u56f0\u96be\uff0c\u65b0\u5e8f\u5217 LIS \u7684\u957f\u5ea6\u4e3a $mx-1$ \u9700\u8981\u4e24\u4e2a\u6761\u4ef6\uff0c\u4e00\u662f\u7ecf\u8fc7 $a_i$ \u7684 LIS \u957f\u5ea6 $<mx$\uff0c\u4e8c\u662f\u6240\u6709\u957f\u5ea6\u4e3a $mx$ \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u90fd\u7ecf\u8fc7 $a_i$\u3002\u6761\u4ef6\u4e00\u6bd4\u8f83\u5bb9\u6613\u68c0\u9a8c\uff0c\u8fd8\u662f\u8bb0 $f'_i$ \u4e3a\u5c06 $a_i$ \u4f4d\u7f6e\u4e0a\u7684\u503c\u6362\u6210 $b_i$ \u540e\uff0c\u4ee5 $a_i$ \u7ed3\u5c3e\u7684 LIS \u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u7ecf\u8fc7 $a_i$ \u7684 LIS \u957f\u5ea6\u5c31\u662f $f'_i+g'_i-1$\u3002\u6bd4\u8f83\u9ebb\u70e6\u7684\u662f\u6761\u4ef6\u4e8c\uff0c\u4e00\u79cd\u53ef\u80fd\u7684\u5904\u7406\u65b9\u5f0f\u662f\u5728\u6c42 $f_i$ \u7684\u540c\u65f6\u6c42\u51fa $ed_i$ \u8868\u793a\u6709\u591a\u5c11\u4e2a\u957f\u5ea6\u4e3a $f_i$ \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4ee5 $i$ \u7ed3\u5c3e\uff0c$st_i$ \u8868\u793a\u6709\u591a\u5c11\u4e2a\u957f\u5ea6\u4e3a $g_i$ \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4ee5 $i$ \u5f00\u5934\uff0c\u90a3\u4e48\u603b\u5171\u6709 $\\dfrac{1}{mx}\\sum\\limits_{i}st_ied_i[f_i+g_i-1=mx]$ \u4e2a\u957f\u5ea6\u4e3a $mx$ \u7684 LIS\u3002\u68c0\u9a8c\u662f\u5426\u6240\u6709\u957f\u5ea6\u4e3a $mx$ \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u90fd\u7ecf\u8fc7 $a_i$ \u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff0c\u4e00\u662f $f_{a_i}+g_{a_i}-1=mx$\uff0c\u4e8c\u662f\u7ecf\u8fc7 $a_i$ \u7684 LIS \u7684\u4e2a\u6570\u7b49\u4e8e\u957f\u5ea6\u4e3a $mx$ \u7684 LIS \u7684\u603b\u4e2a\u6570\uff0c\u5373 $st_ied_i=\\dfrac{1}{mx}\\sum\\limits_{i}st_ied_i[f_i+g_i-1=mx]$\uff0c\u7531\u4e8e LIS \u7684\u4e2a\u6570\u5f88\u591a\uff0c\u6545\u8fd9\u91cc\u7684 $f_i,g_i$ \u9700\u6a21\u4e0a\u4e00\u4e2a\u5927\u8d28\u6570\uff0c\u5982 $998244353$ \u7b49\uff0c\u8fd9\u4e2a\u5b9e\u73b0\u8d77\u6765\u7565\u6709\u4e9b\u56f0\u96be\uff0c\u5c31\u4e0d\u5c55\u5f00\u8bb2\u89e3\u4e86\uff08\u4f30\u8ba1 CF \u4e0a\u6b64\u9898 `hashing` \u7684 tag \u5c31\u662f\u7559\u7ed9\u8fd9\u4e2a\u89e3\u6cd5\u7684\u7f62\uff09\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u8f83\u4e3a\u7b80\u4fbf\u7684\u505a\u6cd5\uff0c\u9996\u5148 $f_{a_i}+g_{a_i}-1=mx$ \u662f\u5fc5\u8981\u6761\u4ef6\uff0c\u5982\u679c $f_{a_i}+g_{a_i}-1\\neq mx$ \u90a3\u80af\u5b9a\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5176\u6b21\u5173\u4e8e LIS \u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u82e5 $f_i+g_i-1=mx$\uff0c\u5bf9\u4e8e\u6240\u6709\u7ecf\u8fc7 $i$ \u7684 LIS\uff0c\u8be5 LIS \u4e2d\u7b2c $f_i$ \u5927\u7684\u5143\u7d20\u4e00\u5b9a\u662f $i$\u3002\u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u8bbe $i$ \u662f\u8fd9\u6837\u7684 LIS \u4e2d\u7b2c $j$ \u4e2a\u5143\u7d20\uff0c\u82e5 $j<f_i$\uff0c\u90a3\u4e48\u5728 $i$ \u540e\u9762\u7684\u5143\u7d20\u6709 $mx-j>g_i$ \u4e2a\uff0c\u800c\u6839\u636e $g_i$ \u7684\u5b9a\u4e49\u77e5\u4ee5 $i$ \u5f00\u5934\u7684 LIS \u957f\u5ea6\u6700\u5927\u4e3a $g_i$\uff0c\u77db\u76fe\uff0c$j>f_i$ \u7684\u60c5\u51b5\u4e5f\u540c\u7406\u3002\u8003\u8651\u5bf9\u4e8e\u4e0d\u7ecf\u8fc7 $i$ \u7684 LIS\uff0c\u8fd9\u6837\u7684 LIS \u4e2d\u7b2c $f_i$ \u5927\u7684\u5143\u7d20\u662f\u4ec0\u4e48\uff0c\u6839\u636e\u4e4b\u524d\u7684\u5206\u6790\u77e5\u5047\u8bbe\u7b2c $f_i$ \u5927\u7684\u5143\u7d20\u662f $j$\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709 $f_j=f_i$\u3002\u4e5f\u5c31\u662f\u8bf4\u5982\u679c $f_j=f_{a_i},j\\neq a_i$ \u7684 $j$ \u5b58\u5728\uff0c\u90a3 $a_i$ \u5c31\u4e0d\u7b26\u5408\u9898\u610f\u3002\u6545\u53ea\u9700\u5f00\u4e00\u4e2a\u6876 $c_i$ \u8868\u793a\u6709\u591a\u5c11 $f_j=i$ \u7684 $j$ \u5e76\u68c0\u9a8c $c_{f_{a_i}}=1$ \u5373\u53ef\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u6c42 $f_i,g_i$\u2026\u2026\u5c31\u6309\u7167\u5957\u8def\u628a\u8be2\u95ee\u6302\u5728 $a_i$ \u5904\uff0c\u7136\u540e\u6309\u7167\u6811\u72b6\u6570\u7ec4\u6c42 LIS \u7684\u5957\u8def\u626b\u63cf\u4e00\u904d\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $n\\log n$\u3002\n\n~~\u90a3\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u5982\u679c\u8fd9\u9898\u8be2\u95ee\u4e0d\u72ec\u7acb\u600e\u4e48\u505a\u5462\uff1f~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef unsigned int u32;\ntypedef unsigned long long u64;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nconst int MAXN=4e5;\nint n,qu,key[MAXN*2+5],uni[MAXN*2+5],num=0,cnt=0;\nint a[MAXN+5],x[MAXN+5],y[MAXN+5];\nint v[MAXN+5],nxt[MAXN+5],hd[MAXN+5],item_n=0;\nvoid ins(int p,int q){v[++item_n]=q;nxt[item_n]=hd[p];hd[p]=item_n;}\nint getnum(int x){\n\tint l=1,r=num;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(uni[mid]==x) return mid;\n\t\tif(uni[mid]<x) l=mid+1;\n\t\telse r=mid-1;\n\t}\n}\nint f[MAXN+5],g[MAXN+5],qf[MAXN+5],qg[MAXN+5],c[MAXN+5];\nint t[MAXN*2+5];\nvoid add(int x,int v){for(int i=x;i<=num;i+=(i&(-i))) chkmax(t[i],v);}\nint query(int x){int ret=0;for(int i=x;i;i&=(i-1)) chkmax(ret,t[i]);return ret;}\nint main(){\n\tscanf(\"%d%d\",&n,&qu);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),key[++cnt]=a[i];\n\tfor(int i=1;i<=qu;i++) scanf(\"%d%d\",&x[i],&y[i]),ins(x[i],i),key[++cnt]=y[i];\n\tsort(key+1,key+cnt+1);\n\tfor(int i=1;i<=cnt;i++) if(key[i]!=key[i-1]) uni[++num]=key[i];\n\tfor(int i=1;i<=n;i++) a[i]=getnum(a[i]);\n\tfor(int i=1;i<=qu;i++) y[i]=getnum(y[i]);\n\tfor(int i=1;i<=n;i++) f[i]=query(a[i]-1)+1,add(a[i],f[i]);\n\tmemset(t,0,sizeof(t));\n\tfor(int i=n;i;i--) g[i]=query(num-a[i])+1,add(num-a[i]+1,g[i]);\n\tmemset(t,0,sizeof(t));\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int e=hd[i];e;e=nxt[e]){\n\t\t\tint id=v[e];qf[id]=query(y[id]-1)+1;\n\t\t} add(a[i],f[i]);\n\t}\n\tmemset(t,0,sizeof(t));\n\tfor(int i=n;i;i--){\n\t\tfor(int e=hd[i];e;e=nxt[e]){\n\t\t\tint id=v[e];qg[id]=query(num-y[id])+1;\n\t\t} add(num-a[i]+1,g[i]);\n\t}\n\tint mx=0;\n\tfor(int i=1;i<=n;i++) chkmax(mx,f[i]+g[i]-1);\n\tfor(int i=1;i<=n;i++) if(f[i]+g[i]-1==mx) c[f[i]]++;\n\tfor(int i=1;i<=qu;i++){\n\t\tif(qf[i]+qg[i]-1>mx) printf(\"%d\\n\",qf[i]+qg[i]-1);\n\t\telse if(qf[i]+qg[i]-1<mx&&f[x[i]]+g[x[i]]-1==mx&&c[f[x[i]]]==1) printf(\"%d\\n\",mx-1);\n\t\telse printf(\"%d\\n\",mx);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1614531488,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF650D\u3010Zip-line\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\n\u5148\u79bb\u6563\u5316\u4e00\u6ce2\u3002\n\u9996\u514810\u5206\u505a\u6cd5\u53ef\u4ee5\u76f4\u63a5\u66b4\u529bDP\n\u8bb0f[i]\u8868\u793a\u524di\u4e2a\u6570\u7684LIS\uff0c\u90a3\u4e48\u5bfb\u627e\u4e4b\u524d\u6240\u6709\u6ee1\u8db3a[i] > a[j] \u7684j\uff0c\u53e6f[i]=max(f[j]+1,1)\u3002\n\n\u5bf9\u4e8e20\u5206\uff0c\u6ce8\u610f\u5230\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u4e3a\u4e86\u4e4b\u540e\u7684\u51e0\u6863\u5206\u6570\uff0c\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u8fdb\u884c\u4f18\u5316\u3002\u5373\u6c42\u524d\u7f00\u4e2d\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u548c\u3002\n\u6bcf\u6b21\u5904\u7406\u4e00\u4e2a\u6570\uff0c\u5c31\u63d2\u5165\u4e00\u4e2a\u6570\u3002\n\u8fd9\u6837\uff0c\u6bcf\u6b21\u6211\u4eec\u66b4\u529b\u4fee\u6539\uff0c\u66b4\u529b\u6c42LIS\u80fd\u670950\u5206\u3002\n\n\n\u8003\u86512\uff0c\u4e0d\u7ecf\u8fc7\u8fd9\u70b9\u7684LIS\u3002\n\u663e\u7136\u7b54\u6848\u8981\u4e48\u662f\u539f\u6765\u7684len\uff0c\u8981\u4e48\u662flen-1\u3002\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u6bcf\u4e00\u4e2aLIS\u90fd\u5fc5\u987b\u7ecf\u8fc7\u5b83\u3002\n\u9996\u5148\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u80fd\u6210\u4e3aLIS\u7684\u4e00\u90e8\u5206\u3002\n\u8bbe\u8fd9\u4e2a\u70b9\u7684\u4f4d\u7f6e\u662fi\uff0c\u8981\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u5fc5\u987b\u6ee1\u8db3\u4ee5i\u7ed3\u675f\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u52a0\u4e0a\u4ee5i\u5f00\u59cb\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u662f\u539f\u6765\u7684LIS-1\u3002\n\n\u540c\u65f6\uff0c\u4f60\u8981\u4fdd\u8bc1\u5b83\u662f\u552f\u4e00\u7684\u3002\n\u6bd4\u5982\u5bf9\u4e8e`1 2 2 3`\uff0c\u4e2d\u95f4\u7684\u4e24\u4e2a2\u5c31\u4e0d\u662f\u552f\u4e00\u7684\u3002\n\u600e\u4e48\u5224\u65ad\u662f\u5426\u662f\u552f\u4e00\u7684\uff1f\u5c31\u662f\u53ea\u6709\u5b83\u80fd\u591f\u8f6c\u79fb\u5230\u6700\u540e\u9762\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u5b58\u5728\uff08i,j\uff09\u6ee1\u8db3\u90fd\u53ef\u80fd\u6210\u4e3aLIS\u7684\u4e00\u90e8\u5206\u7684\uff0c\u5982\u679c\u4ee5i\u7ed3\u675f\u7684LIS\u7684\u957f\u5ea6\u548c\u4ee5j\u7ed3\u675f\u7684LIS\u957f\u5ea6\u76f8\u540c\uff0c\u90a3\u4e48i\u548cj\u5c31\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 400005\n#define IL inline\n#define RG register\n#define rep(i,a,b) for(RG int i=(a);i<(int)(b);++i)\n#define Rep(i,a,b) for(RG int i=(a);i<=(int)(b);++i)\n#define Dep(i,a,b) for(RG int i=(a);i>=(int)(b);--i)\n#define pc putchar\n#define gc getchar\nusing namespace std;\ninline int read(){\n    RG int x=0;RG char f=0;RG char c=gc();\n    for(;!isdigit(c);c=gc())f|=(c=='-');\n\tfor(;isdigit(c);c=gc())x=(x<<1)+(x<<3)+(c^48);\n    return f?-x:x;\n}\nvector<int> q[maxn];\nint lm[maxn*2],rm[maxn*2],wzp[maxn*2],a[maxn];\nint n,m,N,ask[maxn],ans[maxn],f[maxn],g[maxn],cnt[maxn],qid[maxn];\nIL void Max(int &a,int b){if(a<b)a=b;}\nIL void A2l(int x,int v){for(;x<=N;x+=x&-x) Max(lm[x],v);}\nIL void A2r(int x, int v){for(;x>0;x-=x&-x) Max(rm[x],v);}\nIL int Qml(int x){int v=0;for(;x>0;x-=x&-x) Max(v,lm[x]); return v;}\nIL int Qmr(int x){int v=0;for(;x<=N;x+=x&-x) Max(v,rm[x]); return v;}\nint main() {\n    n = read(),m = read();\n    Rep(i,1,n)wzp[++N] = a[i] = read();\n    Rep(i,1,m){\n    \tqid[i] = read(),ask[i] = read();\n        q[qid[i]].push_back(i);\n        wzp[++N] = ask[i];\n        ans[i] = 1;\n    }\n    sort(wzp+1,wzp+N+1);\n    N = unique(wzp+1,wzp+N+1) - wzp-1;\n    Rep(i,1,n) a[i] = lower_bound(wzp+1,wzp+1+N,a[i])-wzp;\n    Rep(i,1,m) ask[i] = lower_bound(wzp+1,wzp+1+N,ask[i])-wzp;\n    int lgst = 0;\n    Rep(i,1,n){\n    \tfor(unsigned e=0;e<q[i].size();++e){\n    \t\tint j=q[i][e];\n        \tans[j] += Qml(ask[j]-1);\n    \t}\n        f[i] = Qml(a[i]-1)+1;\n        A2l(a[i],f[i]); lgst = max(lgst, f[i]);\n    }\n    Dep(i,n,1){\n    \trep(e,0,q[i].size())\n\t\t\tans[q[i][e]] += Qmr(ask[q[i][e]]+1);\n        g[i] = Qmr(a[i]+1)+1; A2r(a[i], g[i]);\n    }\n    long long Ans = 0;\n    Ans ^= lgst;\n    Rep(i,1,n) if(f[i]+g[i]==lgst+1) ++ cnt[f[i]];\n    Rep(i,1,m)\n        if(f[qid[i]] + g[qid[i]] == lgst + 1 && 1 == cnt[f[qid[i]]])\n\t\t\tprintf(\"%lld\\n\",(long long)max(ans[i], lgst-1)) ;\n\t\telse\n\t\t\tprintf(\"%lld\\n\",(long long)max(ans[i], lgst));\n    return 0;\n}\n}```",
        "postTime": 1579321488,
        "uid": 188823,
        "name": "APOI",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF650D \u3010Zip-line\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u8003\u8651\u66ff\u6362\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u5bf9 LIS \u7684\u5f71\u54cd\uff0e\u8bbe\u539f\u5e8f\u5217\u7684 LIS \u957f\u5ea6\u4e3a $k$\uff0c\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u53ea\u4f1a\u66ff\u6362\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u5bf9\u4e8e\u66ff\u6362\u540e\u7684\u5e8f\u5217\uff0cLIS \u957f\u5ea6\u53ea\u6709 $3$ \u79cd\u53d6\u503c\uff1a$k - 1$\uff0c$k$\uff0c$k + 1$\uff0e\n\n\u8003\u8651\u5bf9\u4e8e\u8be2\u95ee $i$\uff0c\u66ff\u6362\u540e\u5e8f\u5217\u7684 LIS \u7684\u957f\u5ea6\u4f55\u65f6\u4f1a\u53d6\u5230\u8fd9\u4e9b\u503c\uff0e\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u51fa\u4e86\u5305\u542b $b_i$ \u7684 LIS \u7684\u957f\u5ea6 $t$\uff1a\n\n1. \u82e5 $t \\ge k$\uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u4e3a $\\max\\{t, k\\}$\uff0e\n2. \u82e5 $t < k$\uff0c\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u4e3a $t$ \u7684\u5145\u8981\u6761\u4ef6\u662f\u66ff\u6362 $h_{a_i}$ \u8fd9\u4e00\u64cd\u4f5c\u7834\u574f\u4e86\u539f\u5e8f\u5217\u4e2d\u6240\u6709 LIS\uff0c\u5426\u5219\u7b54\u6848\u4ecd\u7136\u4e3a $k$\uff0e\u8fd9\u4e00\u6761\u4ef6\u7b49\u4ef7\u4e8e\u5bf9\u4e8e\u5e8f\u5217\u4e2d\u6240\u6709\u53ef\u80fd\u7684 LIS\uff0c\u51fa\u73b0\u5728 LIS \u7684\u67d0\u4e00\u4f4d\u4e0a\u7684\u5143\u7d20\u53ea\u6709 $h_{a_i}$\uff0e\n\n\u8003\u8651\u5982\u4f55\u8ba1\u7b97 $t$\uff0e\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa $f_i$\u3001$g_i$\uff0c\u5206\u522b\u8868\u793a\u4ee5 $h_i$ \u7ed3\u675f\u7684 LIS \u957f\u5ea6\u548c\u4ee5 $h_i$ \u5f00\u5934\u7684 LIS \u957f\u5ea6\uff0e\u8003\u8651\u7528 $b_i$ \u8fde\u63a5\u4e24\u4e2a\u4e0a\u5347\u5e8f\u5217\uff0c\u5f97\u5230 LIS\uff0c\u6211\u4eec\u6709 $t = \\max\\limits_{j < a_i, h_j < b_i} f_j + 1 + \\max\\limits_{a_i < j, b_i < h_j} g_j$\uff0c\u8fd9\u4e2a $\\max$ \u662f\u4e8c\u7ef4\u6570\u70b9\u7684\u5f62\u5f0f\uff0c\u626b\u63cf\u7ebf\u4e00\u4e0b\u5c31\u53ef\u4ee5\u6c42\u51fa\uff0e\n\n\u8003\u8651\u5982\u4f55\u5224\u5b9a 2 \u60c5\u51b5\u4e2d\u7b54\u6848\u662f\u5426\u4e3a $t$\uff0e\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u539f\u5e8f\u5217\u7684 LIS \u4e2d\uff0c$i$ \u4f4d\u7f6e\u4e0a\u80fd\u591f\u586b\u7684\u5143\u7d20\u6570\u91cf\uff0c\u82e5\u8fd9\u4e2a\u6570\u91cf\u4e3a $1$\uff0c\u90a3\u4e48\u66ff\u6362 $i$ \u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u5c31\u4f1a\u7834\u574f\u6240\u6709\u7684 LIS\uff0e\u5982\u4f55\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u6570\u91cf\uff1f\u679a\u4e3e\u4f4d\u7f6e $i$\uff0c\u82e5 $f_i + g_i - 1 = k$\uff0c\u8bf4\u660e $h_i$ \u81f3\u5c11\u51fa\u73b0\u5728\u4e86\u4e00\u4e2a LIS \u4e2d\uff0c\u4e14\u51fa\u73b0\u4f4d\u7f6e\u4e3a $f_i$\uff0c\u7528\u4e00\u4e2a\u6876\u8ba1\u6570\u5373\u53ef\uff0e\n\n## \u4ee3\u7801\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <utility>\n#include <vector>\n\ninline int rd() {\n\tint x = 0, f = 1, c = getchar();\n\twhile (((c - '0') | ('9' - c)) < 0)\n\t\tf = c != '-', c = getchar();\n\twhile (((c - '0') | ('9' - c)) > 0)\n\t\tx = x * 10 + c - '0', c = getchar();\n\treturn f ? x : -x;\n}\n\nusing pii = std::pair<int, int>;\nconst int N = 1e6;\n\nint n, m, a[N + 5];\nint b[N + 5], bct;\n\nstd::vector<pii> q[N + 5];\nint ans[N + 5];\n\nnamespace fwt {\n\tint t[N + 5];\n\tinline int lowbit(int x) { return x & (-x); }\n\tinline void upd(int x, int d) {\n\t\tfor (int i = x; i <= bct; i += lowbit(i)) {\n\t\t\tt[i] = std::max(t[i], d);\n\t\t}\n\t}\n\tinline int que(int x) {\n\t\tint res = 0;\n\t\tfor (int i = x; i >= 1; i -= lowbit(i)) {\n\t\t\tres = std::max(res, t[i]);\n\t\t}\n\t\treturn res;\n\t}\n\tinline void init() { memset(t, 0, sizeof(t)); }\n}; // namespace fwt\n\nint f[N + 5], g[N + 5], h[N + 5];\n\nint pfx[N + 5], sfx[N + 5];\n\nint main() {\n\tn = rd(), m = rd();\n\tfor (int i = 1; i <= n; i++) {\n\t\ta[i] = rd();\n\t\tb[++bct] = a[i];\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x = rd(), d = rd();\n\t\tq[x].emplace_back(d, i);\n\t\tb[++bct] = d;\n\t}\n\tstd::sort(b + 1, b + 1 + bct);\n\tbct = std::unique(b + 1, b + 1 + bct) - b - 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\ta[i] = std::lower_bound(b + 1, b + 1 + bct, a[i]) - b;\n\t\tfor (auto &[x, _] : q[i]) {\n\t\t\tx = std::lower_bound(b + 1, b + 1 + bct, x) - b;\n\t\t}\n\t}\n\n\tfwt::init();\n\tfor (int i = 1; i <= n; i++) {\n\t\tf[i] = fwt::que(a[i] - 1) + 1;\n\t\tfwt::upd(a[i], f[i]);\n\t}\n\tfwt::init();\n\tfor (int i = n; i >= 1; i--) {\n\t\tg[i] = fwt::que(bct - a[i]) + 1;\n\t\tfwt::upd(bct - a[i] + 1, g[i]);\n\t}\n\n\tint k = 0;\n\tfor (int i = 1; i <= n; i++) k = std::max(k, f[i] + g[i] - 1);\n\tfor (int i = 1; i <= n; i++) if (f[i] + g[i] - 1 == k) h[f[i]]++;\n\tfwt::init();\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (auto [x, id] : q[i]) {\n\t\t\tpfx[id] = fwt::que(x - 1);\n\t\t}\n\t\tfwt::upd(a[i], f[i]);\n\t}\n\tfwt::init();\n\tfor (int i = n; i >= 1; i--) {\n\t\tfor (auto [x, id] : q[i]) {\n\t\t\tsfx[id] = fwt::que(bct - x);\n\t\t}\n\t\tfwt::upd(bct - a[i] + 1, g[i]);\n\t}\n\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (auto [x, id] : q[i]) {\n\t\t\tif (pfx[id] + sfx[id] + 1 < k && f[i] + g[i] - 1 == k && h[f[i]] == 1) {\n\t\t\t\tans[id] = k - 1;\n\t\t\t} else ans[id] = std::max(pfx[id] + sfx[id] + 1, k);\n\t\t}\n\t}\n\tfor (int i = 1; i <= m; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1685371441,
        "uid": 329316,
        "name": "kernel_panic",
        "ccfLevel": 0,
        "title": "CF650D \u9898\u89e3"
    },
    {
        "content": "## \u5e26\u4fee\u6539$LIS$\u95ee\u9898\n\n\u9898\u76ee\u7279\u610f\u6807\u6ce8\u6bcf\u6b21\u8be2\u95ee\u662f\u4e92\u76f8\u72ec\u7acb\u7684\uff0c\u8fd9\u4e5f\u63d0\u793a\u4e86\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u6765\u505a\u8fd9\u9898\n\n\u628a\u6bcf\u6b21\u4fee\u6539\u7528\u52a8\u6001\u6570\u7ec4\u8bb0\u5f55\u4e0b\u6765\uff0c\u5f53\u679a\u4e3e\u5230\u65f6\u5728\u5904\u7406\uff0c\u6c42\u51fa\u4fee\u6539\u540e\u7684\u503c\u5fc5\u9009\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\n\n\u6211\u4eec\u5206\u4e24\u7c7b\u8003\u8651\uff1a\n\n- $a_i$\u53ef\u4ee5\u4e0d\u5728\u539f\u5e8f\u5217\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2d\uff0c\u7b54\u6848\u5373\u4e3a\u539f\u5e8f\u5217\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u548c\u4fee\u6539\u540e\u503c\u5fc5\u9009\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u53d6\u5927\n\n- $a_i$\u4e00\u5b9a\u5728\u539f\u5e8f\u5217\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2d\uff0c\u7b54\u6848\u5373\u4e3a\u539f\u5e8f\u5217\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6$-1$\u548c\u4fee\u6539\u540e\u503c\u5fc5\u9009\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u53d6\u5927\n\n\u73b0\u5728\u6211\u4eec\u6765\u89e3\u51b3\u5982\u4f55\u6c42\u51fa\u4fee\u6539\u540e\u7684\u503c\u5fc5\u9009\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u6b63\u7740\u6c42\u4e00\u904d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u518d\u53cd\u7740\u6c42\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\u5373\u53ef\n\n## code\n```\n#include<bits/stdc++.h>\n#define maxn 400005\nusing namespace std;\nint f[maxn],Ans,N,Q,a[maxn],q[15],x,Nn,n,m,L_[maxn],L[maxn],R[maxn],R_[maxn],Now,Mx,vis[maxn],b[maxn],data,S[maxn];\nstruct lc{\n\tint x,id;\n};\nvector<lc> s[maxn];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline void Write(int x){\n\tif (!x){puts(\"0\");return;}\n\tNn=0;while (x){q[++Nn]=x%10,x/=10;}\n\tfor (int i=Nn;i;i--) putchar('0'+q[i]);\n\tputchar('\\n');\n}\nint main(){\n\tn=read(),Q=read();\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tfor (int i=1;i<=n;i++){\n\t\tif (a[i]>f[N]) f[++N]=a[i],L[i]=N;\n\t\telse{\n\t\t\tint l=1,r=N,X=0;\n\t\t\twhile (l<=r){\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tif (f[mid]>=a[i]) X=mid,r=mid-1;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t    if (X) f[X]=a[i],L[i]=X;\n\t\t    else L[i]=1;\n\t\t}\n\t}\n\tAns=N;N=0;memset(f,0,sizeof f);\n\tfor (int i=n;i;i--){\n\t\tif (a[i]<f[N]||!N) f[++N]=a[i],R[i]=N;\n\t    else{\n\t    \tint l=1,r=N,X=0;\n\t    \twhile (l<=r){\n\t    \t\tint mid=l+r>>1;\n\t    \t\tif (f[mid]<=a[i]) X=mid,r=mid-1;\n\t    \t\telse l=mid+1;\n\t\t\t}\n\t\t\tif (X) f[X]=a[i],R[i]=X;\n\t\t\telse R[i]=1;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++) if (L[i]+R[i]-1==N) vis[L[i]]++;\n\tfor (int i=1;i<=n;i++)\n\t  if (L[i]+R[i]-1==N){\n\t  \tif (vis[L[i]]!=1) b[i]=1;\n\t  \telse b[i]=2;\n\t  }\n\tmemset(L,0,sizeof L);memset(R,0,sizeof R);\n\tfor (int i=1;i<=Q;i++){\n\t\tS[i]=read(),data=read();\n\t\ts[S[i]].push_back((lc){data,i});\n\t}\n\tN=0;memset(f,0,sizeof f);\n\tfor (int i=1;i<=n;i++){\n\t\tint Size=s[i].size();\n\t\tfor (int j=0;j<Size;j++){\n\t\t\tif (s[i][j].x>f[N]) L_[s[i][j].id]=N+1;\n\t\t\telse{\n\t\t\t\tint l=1,r=N,X=0;\n\t\t\t\twhile (l<=r){\n\t\t\t    \tint mid=l+r>>1;\n\t\t    \t\tif (f[mid]>=s[i][j].x) X=mid,r=mid-1;\n\t\t    \t\telse l=mid+1;\n\t\t    \t}\n\t\t        if (X) L_[s[i][j].id]=X;\n\t\t        else L_[s[i][j].id]=1;\n\t\t\t}\n\t\t}\n\t\tif (a[i]>f[N]) f[++N]=a[i],L[i]=N;\n\t\telse{\n\t\t\tint l=1,r=N,X=0;\n\t\t\twhile (l<=r){\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tif (f[mid]>=a[i]) X=mid,r=mid-1;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t    if (X) f[X]=a[i],L[i]=X;\n\t\t    else L[i]=1;\n\t\t}\n\t}\n\tN=0;memset(f,0,sizeof f);\n\tfor (int i=n;i;i--){\n\t\tint Size=s[i].size();\n\t\tfor (int j=0;j<Size;j++){\n\t\t\tif (s[i][j].x<f[N]||!N) R_[s[i][j].id]=N+1;\n\t\t\telse{\n\t\t\t\tint l=1,r=N,X=0;\n\t\t\t\twhile (l<=r){\n\t\t\t    \tint mid=l+r>>1;\n\t\t    \t\tif (f[mid]<=s[i][j].x) X=mid,r=mid-1;\n\t\t    \t\telse l=mid+1;\n\t\t    \t}\n\t\t        if (X) R_[s[i][j].id]=X;\n\t\t        else R_[s[i][j].id]=1;\n\t\t\t}\n\t\t}\n\t\tif (a[i]<f[N]||!N) f[++N]=a[i],R[i]=N;\n\t    else{\n\t    \tint l=1,r=N,X=0;\n\t    \twhile (l<=r){\n\t    \t\tint mid=l+r>>1;\n\t    \t\tif (f[mid]<=a[i]) X=mid,r=mid-1;\n\t    \t\telse l=mid+1;\n\t\t\t}\n\t\t\tif (X) f[X]=a[i],R[i]=X;\n\t\t\telse R[i]=1;\n\t\t}\n\t}\n\tfor (int i=1;i<=Q;i++){\n\t\tif (b[S[i]]<2) Write(max(Ans,L_[i]+R_[i]-1));else\n\t\tWrite(max(Ans,L_[i]+R_[i])-1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1595634180,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF650D \u3010Zip-line\u3011"
    },
    {
        "content": "\n[**\u9898\u76ee\u4f20\u9001\u95e8**\uff1aCF650D Zip-line](https://www.luogu.org/problem/CF650D)\n\n [**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.cnblogs.com/wmq12138/p/11740738.html)\n \n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4e00\u4e2a\u5e8f\u5217$a$\uff0c\u591a\u6b21\u8be2\u95ee(\u72ec\u7acb)\uff0c\u95ee\u628a$a_x$ \u53d8\u4e3a $y$ \u540e\u5e8f\u5217\u7684$LIS$\n\n\u9996\u5148\u53d1\u73b0\u7b54\u6848\u53ea\u53ef\u80fd+$1$\uff0c-$1$\uff0c\u4e0d\u53d8\n\u5148\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u51fa\u6765\u539f\u5e8f\u5217\u7684$LIS$\uff0c\u8bbe$f_i$\u8868\u793a\u4ee5$a_i$\u4e3a\u7ed3\u5c3e\u7684$LIS$\uff0c$g_i$\u8868\u793a\u4ee5$a_i$\u4e3a\u5f00\u5934\u7684$LIS$\n\n$1.$ +$1$\u7684\u60c5\u51b5\uff1a\u7531\u4e8e\u53ea\u6539\u53d8\u4e86$a_i$\uff0c\u6240\u4ee5\u53ea\u8981\u770b\u7ecf\u8fc7i\u7684LIS\u5373\u53ef\uff1a\n\u8bbe$f'$\u4e3a\u6ee1\u8db3$j<i,a_j<a_i'$\u7684\u6700\u5927$f_j$\uff0c$g'$\u4e3a\u6ee1\u8db3 $j>i,a_j>a_i$\u7684\u6700\u5927$g_j$\n\u82e5$f'+g'+1>$\u539f$LIS$\uff0c\u5219$Ans=f'+g'+1$\n\n$2.$ -$1$\u7684\u60c5\u51b5\uff1a\u9996\u5148$i$\u4e00\u5b9a\u662f\u5173\u952e\u70b9\uff0c\u5373\u662f$LIS$\u7684\u5fc5\u7ecf\u4e4b\u8def\uff0c\u7136\u540e\u5224\u65ad\u4e00\u4e0b$f'+g'+1$\u662f\u5426\u5c0f\u4e8e\u539f$LIS$\n\u5224\u65ad\u5173\u952e\u70b9\uff1a\n\u5bf9\u4e8e$f_i+g[i]=ans$\u7684\u70b9 \u8bb0\u5176 $f_i$ \u51fa\u73b0\u6b21\u6570+1\n\u4e00\u4e2a\u70b9\u662f\u5173\u952e\u70b9\uff1a\u5f53\u4e14\u4ec5\u5f53 $f_i+g_i-1 = Ans$ \u4e14 \u8fd9\u6837\u7684$f_i$\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\n\n\u6c42$f_i$ \u548c $g_i$ \u7684\u8fc7\u7a0b\u4e0d\u7528\u8bf4\uff0c\u88f8\u7684\u6811\u72b6\u6570\u7ec4\u6c42$LIS$\n\n\u6c42$f'$ \uff1a\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309x\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u6c42$g'$ \uff1a\u5012\u8fc7\u6765\u518d\u626b\u4e00\u6b21\u5373\u53ef\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\n#define rint register int\n#define il inline\n#define For(i,j,k) for(register int i=(j);i<=(k);++i)\n#define Rep(i,j,k) for(register int i=(j);i>=(k);--i)\n\nil int read(int x=0,int g=1,char ch='0')\n{\n    while(!isdigit(ch=getchar())) if(ch=='-') g=-1;\n    while(isdigit(ch)) x=x*10+ch-'0',ch=getchar();\n    return g*x;\n}\n\nconst int N=8e5+5;\nint a[N],b[N],g[N],f[N],c[N],cnt[N];\n//g[i]\uff1a\u4ee5\u7b2ci\u4e2a\u4e3a\u5f00\u5934\uff0cf[i]\uff1a\u4ee5\u7b2ci\u4e2a\u4e3a\u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\nint n,m,ans,tmp,Ans[N];\nstruct node {int a,b,id,g,f;}q[N];\nbool operator <(const node &n1,const node &n2) { return n1.a==n2.a?n1.b<n2.b:n1.a<n2.a; }\n\nil void add(int x,int d) { for(;x<=tmp;x+=x&-x) c[x]=max(c[x],d); }\nil int query(int x) { int ret=0; for(;x;x-=x&-x) ret=max(ret,c[x]); return ret; }\nil void cls(int *c) { For(i,0,tmp) c[i]=0; }\n\nil void work()\n{\n    sort(q+1,q+m+1);\n    int t=1; cls(c); \n    For(i,1,m)\n    {\n        while(t<q[i].a) add(a[t],f[t]),++t;\n        q[i].f=query(q[i].b-1);\n    }\n    \n    t=n; cls(c);\n    Rep(i,m,1)\n    {\n        while(t>q[i].a) add(tmp-a[t]+1,g[t]),--t;\n        q[i].g=query(tmp-q[i].b);\n        if(q[i].g+q[i].f+1>ans) Ans[q[i].id]=q[i].g+q[i].f+1;\n    }\n\n    For(i,1,m) if(!Ans[q[i].id])\n    {\n        if(f[q[i].a]+g[q[i].a]-1==ans&&cnt[f[q[i].a]]==1&&q[i].g+q[i].f+1<ans)\n            Ans[q[i].id]=ans-1;\n        else Ans[q[i].id]=ans;\n    }\n}\n\nint main()\n{   \n    tmp=n=read(); m=read();\n    For(i,1,n) b[i]=a[i]=read();\n    For(i,1,m) q[i].a=read(),q[i].b=read(),q[i].id=i,b[++tmp]=q[i].b;\n    sort(b+1,b+tmp+1); tmp=unique(b+1,b+tmp+1)-b-1;\n    For(i,1,n) a[i]=lower_bound(b+1,b+tmp+1,a[i])-b;\n    For(i,1,m) q[i].b=lower_bound(b+1,b+tmp+1,q[i].b)-b;//\u79bb\u6563\u5316\n    ++tmp;\n    For(i,1,n) f[i]=query(a[i]-1)+1,add(a[i],f[i]); cls(c);\n    Rep(i,n,1) g[i]=query(tmp-a[i])+1,add(tmp-a[i]+1,g[i]);\n    For(i,1,n) ans=max(ans,f[i]+g[i]-1);\n    For(i,1,n) if(f[i]+g[i]-1==ans) ++cnt[f[i]];\n    work();\n\n    For(i,1,m) printf(\"%d\\n\",Ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1572006910,
        "uid": 123553,
        "name": "robin12138",
        "ccfLevel": 0,
        "title": "CF650D Zip-line \u9898\u89e3"
    },
    {
        "content": "## [\u9898\u610f](http://codeforces.com/problemset/problem/650/D)\n\n- \u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a$n$\u7684\u5e8f\u5217\uff0c$q$\u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u628a\u4f4d\u7f6e$x$\u7684\u503c\u4fee\u6539\u4e3a$y$\u540e\u7684$LIS$,\u8be2\u95ee\u76f8\u4e92\u72ec\u7acb\u3002\n\n\u8fd9\u4e2a\u9898\u89c2\u5bdf\u4e00\u4e0b\u6027\u8d28\uff0c\u5982\u679c\u4fee\u6539\u7684\u4f4d\u7f6e\u539f\u6765\u5c5e\u4e8e$LIS$\uff0c\u90a3\u4e48\u8fd9\u90e8\u5206\u7b54\u6848\u8981\u4e48\u662f$LIS$\u8981\u4e48\u662f$LIS - 1$\u3002\u5982\u679c\u4e0d\u662f\u7684\u8bdd\uff0c\u90a3\u4e48\u67e5\u8be2\u4e00\u4e0b\u8fd9\u4e2a\u6570\u524d\u9762\u4ee5\u4e00\u4e2a\u5c0f\u4e8e\u5b83\u7684\u6570\u7ed3\u5c3e\u7684$LIS$\uff0c\u67e5\u8be2\u8fd9\u4e2a\u6570\u540e\u9762\u4ee5\u4e00\u4e2a\u5927\u4e8e\u5b83\u7684\u6570\u5f00\u5934\u7684$LIS$\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u628a\u8be2\u95ee\u6309$y$\u6392\u5e8f\u540e\u7528\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0\uff0c\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#include<bits/extc++.h>\n\n#define file(s) freopen(s\".in\", \"r\", stdin), freopen(s\".out\", \"w\", stdout)\n#define go(x, i) for(register int i = head[x]; i; i = nxt[i])\n#define For(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define FOR(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define debug(x) cout << #x << \" = \" << x << endl\n#define mem(a, b) memset(a, b, sizeof(a))\n#define cpy(a, b) memcpy(a, b, sizeof(a))\n#define min(a, b) (a < b ? a : b)\n#define max(a, b) (b < a ? a : b)\n#define inf (0x3f3f3f3f)\n#define INF (1e18)\n#define pb push_back\n#define mp make_pair\n#define x first\n#define y second\n#define y1 orzorz\n\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef std::pair<ll, int> PLI;\ntypedef std::pair<int, int> PII;\ntypedef long double ldb;\ntypedef double db;\n\nnamespace IO {\n#define getc() ((S_ == T_) && (T_ = (S_ = Ch_) + fread(Ch_, 1, Buffsize, stdin), S_ == T_) ? 0 : *S_ ++)\n#define putc(x) *nowps ++ = (x)\n\tconst uint Buffsize = 1 << 15, Output = 1 << 23;\n\tstatic char Ch_[Buffsize], *S_ = Ch_, *T_ = Ch_;\n\tstatic char Out[Output], *nowps = Out;\n\tinline void flush(){fwrite(Out, 1, nowps - Out, stdout); nowps = Out;}\n\ttemplate<class T>inline void read(T &_) {\n\t\t_ = 0; static char __; T ___ = 1;\n\t\tfor(__ = getc(); !isdigit(__); __ = getc()) if(__ == '-') ___ = -1;\n\t\tfor(; isdigit(__); __ = getc()) _ = (_ << 3) + (_ << 1) + (__ ^ 48);\n\t\t_ *= ___;\n\t}\n\ttemplate<class T>inline void write(T _, char __ = '\\n') {\n\t\tif(!_) putc('0');\n\t\tif(_ < 0) putc('-'), _ = -_;\n\t\tstatic uint sta[111], tp;\n\t\tfor(tp = 0; _; _ /= 10) sta[++ tp] = _ % 10;\n\t\tfor(; tp; putc(sta[tp --] ^ 48)); putc(__);\n\t}\n\ttemplate<class T>inline bool chkmax(T &_, T __) {return _ < __ ? _ = __, 1 : 0;}\n\ttemplate<class T>inline bool chkmin(T &_, T __) {return _ > __ ? _ = __, 1 : 0;}\n\tinline void procStatus() {\n\t\tstd::ifstream t(\"/proc/self/status\");\n\t\tstd::cerr << std::string(std::istreambuf_iterator<char>(t), std::istreambuf_iterator<char>());\n\t}\n}\n\nusing namespace std;\nusing namespace IO;\n\nconst int N = 5e5 + 10;\n\nint st[N], ed[N], S[N], inlis[N];\nint a[N], ans[N], Cnt[N], pos[N];\nint n, q, cnt, top, join0, join1;\n\nstruct Join {\n\tint x, y, z;\n\tbool operator < (const Join &T) const {\n\t\treturn x < T.x;\n\t}\n}join[2][N];\n\nstruct Que {\n\tint x, y, id, tmp[2];\n\tbool operator < (const Que &T) const {\n\t\treturn y < T.y;\n\t}\n}Q[N];\n\nstruct Fenwick_Tree {\n\tint S[N], res;\n\tvoid update(int x, int y) {for(; x <= n; x += x & -x) chkmax(S[x], y);}\n\tint query(int x) {for(res = 0; x; x -= x & -x) chkmax(res, S[x]); return res;}\n}T[2];\n\nint main() {\n#ifdef ylsakioi\n\tfile(\"kite\");\n#endif\n\n\tread(n), read(q);\n\tFor(i, 1, n) read(a[i]);\n\tFor(i, 1, q) read(Q[i].x), read(Q[i].y), Q[i].id = i;\n\tsort(Q + 1, Q + q + 1);\n\n\tS[top = 0] = INT_MIN;\n\tFor(i, 1, n) {\n\t\tif(a[i] > S[top]) S[ed[i] = ++ top] = a[i];\n\t\telse S[ed[i] = lower_bound(S + 1, S + top + 1, a[i], less<int>()) - S] = a[i];\n\t\tjoin[0][i] = Join{a[i], i, ed[i]};\n\t}\n\tS[top = 0] = INT_MAX;\n\tFOR(i, n, 1) {\n\t\tif(a[i] < S[top]) S[st[i] = ++ top] = a[i];\n\t\telse S[st[i] = lower_bound(S + 1, S + top + 1, a[i], greater<int>()) - S] = a[i];\n\t\tjoin[1][i] = Join{a[i], n - i + 1, st[i]};\n\t}\n\n\tsort(join[0] + 1, join[0] + n + 1), sort(join[1] + 1, join[1] + n + 1);\n\n\tFor(i, 1, n) if(ed[i] + st[i] == top + 1) ++ Cnt[ed[i]], inlis[i] = 1;\n\n\tjoin0 = 1;\n\tFor(i, 1, q) {\n\t\tans[Q[i].id] = top - (inlis[Q[i].x] & (Cnt[ed[Q[i].x]] == 1));\n\t\tfor(; join0 <= n && join[0][join0].x < Q[i].y; ++ join0)\n\t\t\tT[0].update(join[0][join0].y, join[0][join0].z);\n\t\tQ[i].tmp[0] = T[0].query(Q[i].x - 1);\n\t}\n\tjoin1 = n;\n\tFOR(i, q, 1) {\n\t\tfor(; join1 >= 1 && join[1][join1].x > Q[i].y; -- join1) \n\t\t\tT[1].update(join[1][join1].y, join[1][join1].z);\n\t\tQ[i].tmp[1] = T[1].query(n - Q[i].x);\n\t\tchkmax(ans[Q[i].id], Q[i].tmp[0] + Q[i].tmp[1] + 1);\n\t}\n\n\tFor(i, 1, q) write(ans[i]);\n\n\treturn flush(), 0;\n}\n\n\n```",
        "postTime": 1547130722,
        "uid": 6300,
        "name": "Lunch",
        "ccfLevel": 7,
        "title": "[CF650D] Zip-line\uff08\u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4\uff09"
    }
]