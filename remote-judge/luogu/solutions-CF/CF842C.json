[
    {
        "content": "\u8fd9\u9053\u9898\u76ee \u8fd8\u662f\u6bd4\u8f83\u6c34\u7684 \u4e00\u5f00\u59cb\u8bfb\u9519\u9898\u76ee (\u6211\u89c9\u5f97\u662f\u7ffb\u8bd1\u7684\u9505) \n\n$f[u][0 / 1]$\u8868\u793a\u8fd9\u9897\u5b50\u6811\u662f\u5426\u4fee\u6539 \u7136\u540e\u6700\u5927\u7684\u7f8e\u4e3d\u503c\n\n\u597d\u50cf\u53ef\u4ee5\u63a8\n\n\u7136\u540e \u53c8\u60f3\u4e86\u4e00\u60f3 \u5bf9\u4e8e\u6bcf\u9897\u70b9 \u51b3\u7b56 \u53ea\u6709\u4e24\u79cd \u8981\u4e48\u4fee\u6539 \u8981\u4e48\u4e0d\u53d8\n\n$f[u]$\u8868\u793a\u4ee5u\u4e3a\u8282\u70b9\u7684\u6700\u5927\u503c\n\n\u7136\u540e\u5c31\u662f\u8bb0\u5fc6\u5316\u641c\u7d22\u4e86\n\n$dfs(u, fa, opt, cur)$\u8868\u793a\u5f53\u524d\u4e3a$u$\u8282\u70b9 $opt$\u8868\u793a\u662f\u5426\u4fee\u6539\u8fc7\u4e86 $cur$\u8868\u793a\u5bf9\u5e94\u7684\u6700\u5927\u503c\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int INF = 2139062143;\n\n#define DEBUG(x) std::cerr << #x << ' = ' << x << std::endl\n\ninline ll read() {\n    ll f = 1, x = 0;char ch;\n    do {ch = getchar();if (ch == '-')f = -1;} while (ch > '9' || ch < '0');\n    do {x = x * 10 + ch - '0';ch = getchar();} while (ch >= '0' && ch <= '9');\n    return f * x;\n}\n\nconst int MAX_N = 2e5 + 7;\n\nint n, a[MAX_N], f[MAX_N];\n\nmap < int, bool > vis[MAX_N][2];\n\nstruct Edge {\n\tint to, next;\n}edge[MAX_N << 1];\n\nint head[MAX_N], cnt;\n\nvoid addedge (int u, int v) {\n\tedge[++cnt].to = v;\n\tedge[cnt].next = head[u];\n\thead[u] = cnt;\n}\n\ninline int gcd (int a, int b) {\n\tif (a < b) swap(a, b);\n\treturn b == 0 ? a : gcd (b, a % b);\n}\n\nvoid dfs (int u, int fa, int opt, int cur) {\n\tif (vis[u][opt][cur]) return;\n\tvis[u][opt][cur] = true;\n\tint tmp = gcd (cur, a[u]);\n\tf[u] = max(f[u], tmp);\n\tif (opt == 0) f[u] = max(f[u], cur);\n\tfor (int i = head[u]; i; i = edge[i].next ) {\n\t\tint v = edge[i].to;\n\t\tif (v == fa) continue;\n\t\tdfs (v, u, opt, tmp);\n\t\tif (opt == 0) dfs (v, u, 1, cur);\n\t}\n}\n\nint main() {\n\tn = read();\n\tfor (int i = 1; i <= n; i ++ ) a[i] = read();\n\tfor (int i = 1; i < n; i ++ ) {\n\t\tint x = read(), y = read();\n\t\taddedge (x, y);\n\t\taddedge (y, x);\n\t}\n\tdfs (1, 0, 0, 0);\n\tfor (int i = 1; i <= n; i ++ )\n\t\tprintf (\"%d \", f[i]);\n\treturn 0;\n}\n\n\n```",
        "postTime": 1569750403,
        "uid": 107377,
        "name": "Cryin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF842C \u3010Ilya And The Tree\u3011"
    },
    {
        "content": "~~\u4f17\u6240\u5468\u77e5CF\u7684\u9898\u76ee\u4e00\u822c\u90fd\u4f1a\u88ab\u6076\u610f\u8bc4\u5206~~\n\n### \u9898\u610f\n\n\u5927\u610f\u5982\u7ffb\u8bd1\uff0c\u4f46\u8981\u6ce8\u610f\u4e09\u70b9\uff1a\n\n1\u3001\u53ef\u4ee5\u5220\u9664\u81ea\u5df1\n\n2\u3001\u53ef\u4ee5\u4e0d\u5220\u9664\n\n3\u3001\u6839\u4e3a1\n\n### \u601d\u8def\n\n\u62ff\u5230\u8fd9\u7c7b\u8981\u6c42gcd\u7684\u9898\u76ee\uff0c\u6211\u4eec\u4e00\u822c\u5148\u8003\u8651\u8d28\u56e0\u6570\u5206\u89e3\u3002\n\n\u6c42\u5355\u4e2a\u7684\u590d\u6742\u5ea6\u662f$O(\\sqrt{N})$\n\n$dfs$\u7684\u590d\u6742\u5ea6\u662f$O(N)$\n\n\u603b\u7684\u590d\u6742\u5ea6\u662f$O(N\\sqrt{N})$\n\n\u90a3\u4e48\u4e00\u904d\u4e0b\u6765\u5c31\u662f\u3001\u3001\u3001\u5c31\u662f\u3001\u3001\u3001\u7b49\u7b49\u6211\u638f\u4e2a\u8ba1\u7b97\u5668\n\n$200000\\times\\sqrt{200000}\\approx90000000$\n\n\u7ed9\u4e86\u4e24\u79d2\u949f\uff0c\u5b8c\u5168$ok$\u6ef4\u8bf4\uff01\n\n\u7528\u4e00\u4e2a$cnt[i]$\u6570\u7ec4\u8bb0\u5f55$dfs$\u5230\u76ee\u524d$(now)$\u4e3a\u6b62$i$\u56e0\u5b50\u51fa\u73b0\u7684\u4e2a\u6570\n\n\u5982\u679c$cnt[i] = dep[now]$\u5c31\u53ef\u4ee5\u66f4\u65b0\u6b63\u89e3\n\n\u4f46\u5982\u679c\u662f\u53bb\u6389\u5f53\u524d\u70b9\u7684\u540e\u5f97\u5230\u7684$gcd$\u6700\u5927\u5462\uff1f\n\n\u6240\u4ee5\u6211\u4eec\u5728$dfs$\u7684\u65f6\u5019\u8fd8\u8981\u8bb0\u5f55\u4e00\u4e2a\u4e1c\u897f$(maxf)$\uff0c\u5b83\u8bb0\u5f55\u4e86\u4ece\u6839\u8282\u70b9\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9$fa$\u4e3a\u6b62\u4e0d\u53bb\u6389\u4efb\u4f55\u4e00\u4e2a\u70b9\u7684$gcd$\n\n\u597d\uff0c\u5dee\u4e0d\u591a\u90fd\u4ea4\u4ee3\u5b8c\u4e86\n\n\u90a3\u5c31\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u672c\u7bc7\u7684\u91cd\u5934\u620f!\n\n### $dfs$\n\n```cpp\n//\u5f53\u65f6\u662f\u5728\u6bd4\u8d5b\u5b8c\u4e4b\u540e\u5199\u7684\u4ee3\u7801\uff0c\u5e76\u6ca1\u6709\u6539\u8fc7\n//\u6240\u4ee5\u5982\u679c\u51fa\u73b0\u4e86\u5f88\u591a\u6ca1\u6709\u610f\u4e49\u7684\u61a8\u61a8\u5b9a\u4e49\n//\u8bf7\u4e0d\u8981\u8e29\u7a9d\u87f9\u87f9\u60a8\u0669('\u03c9')\u0648\nvoid dfs(int now,int fa,int maxf){\n\tdep[now] = dep[fa] + 1;  //\u540c\u82f1\u6587\uff0c\u6df1\u5ea6\n\tcnt[col[now]]++;  //\u5982\u4e0a\u63d0\u5230,col\u662f\u8be5\u4f4d\u7f6e\u7684\u6570\u5b57\n\tint maxnow = 1;  //\u4fee\u6539\u5b83\u513f\u5b50\u4eec\u7684maxf\n\tAns[now] = 1;\n\tif(cnt[col[now]] == dep[now] || cnt[col[now]] == dep[now] - 1)  //\u5176\u5b9e\u8fd9\u91cc\u548c\u4e0a\u6587\u7a9d\u63d0\u5230\u7684\u4e00\u6837\n\t\tAns[now] = col[now];\t\t\t\t\t\t//\u53ef\u4ee5\u53ea\u6709\u5f53\u524d\u6df1\u5ea6\u3002\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\uff1f\n\tif(cnt[col[now]] == dep[now]) maxnow = max(maxnow,col[now]); \t\t//\u4e3a\u5b83\u7684\u513f\u5b50\u4eec\u7684\u4fee\u6539\u4fdd\u8bc1\n\tAns[now] = max(Ans[now],maxf);\n\tfor(int i = 2;i * i <= col[now];i++){\t\t\t//\u5206\u89e3\u8d28\u56e0\u6570\n\t\tif(!(col[now] % i)){\t\t\n\t\t\tcnt[i]++;\t\t\n\t\t\tif(col[now]/i != i) cnt[col[now]/i]++;\t\t//\u5f53\u65f6\u8fd9\u91cc\u627e\u4e86\u597d\u4e45\uff0c\u6211\u597dcai\uff0c\u545c\u545c\u545c\n\t\t\tif(cnt[i] == dep[now] || cnt[i] == dep[now] - 1){\n\t\t\t\tAns[now] = max(Ans[now],i);\t\t\t//\u540c\u4e0a\u9762\u53ef\u4ee5\u6539\u8fdb\uff0c\u9632\u6b62\u591a\u4f59\u7684\u8ba1\u7b97\n\t\t\t}\n\t\t\tif(cnt[i] == dep[now]) maxnow = max(maxnow,i);\t\t//\u6539maxf\u7684\u503c\n\t\t\tif(cnt[col[now]/i] == dep[now] || cnt[col[now]/i] == dep[now] - 1){\n\t\t\t\tAns[now] = max(Ans[now],col[now]/i);\n\t\t\t}\n\t\t\tif(cnt[col[now]/i] == dep[now]) maxnow = max(maxnow,col[now]/i);\n\t\t}\n\t}\n\tfor(int i = fir[now];i;i = nxt[i]){\n\t\tif(to[i] == fa) continue;\t\t//\u524d\u9879\u661f\u53ef\u597d\u7528\u4e86\n\t\tdfs(to[i],now,maxnow);\t\t\t//dfs\u5b83\u7684\u513f\u5b50\u4eec\n\t}\n\tfor(int i = 1;i * i <= col[now];i++){  //\u522b\u5fd8\u4e86\u56de\u6eaf\u54e6\uff0c\u53cd\u6b63\u590d\u6742\u5ea6\u4e5f\u4e0d\u4f1a\u589e\u52a0\n\t\tif(!(col[now] % i)){\n\t\t\tcnt[i]--;\n\t\t\tif(col[now]/i != i) \n\t\t\t\tcnt[col[now]/i]--;\n\t\t}\n\t}\n}\n```\n\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u5bf9\u60a8\u6709\u5e2e\u52a9\uff0c\u5982\u679c\u8fd9\u4e9a\u5b50\u7684\u8bdd\uff0c\u5c31\u4e0d\u8981\u541d\u556c\u60a8\u514d\u8d39\u7684\u8d5e\u4e86\u5466\n\n\u6211\u7684$Blog$\u4f20\u9001\u95e8[Lu_Ming\u306e\u5b85](https://www.luogu.org/blog/Lu-Ming/)\n\n### AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAX = 200020;\nint n,a[MAX],fir[MAX],nxt[MAX << 1],to[MAX << 1],num;\nint cnt[MAX],Ans[MAX],col[MAX],dep[MAX];\n\n\nvoid dfs(int now,int fa,int maxf);\nvoid init();\nvoid add(int u,int v);\nvoid outit(); \n\nint main(void){\n\tinit();\n\tdfs(1,0,1);\n\toutit();\n\treturn 0;\n}\n\nvoid init(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i <= n;i++)\n\t\tscanf(\"%d\",&col[i]);\n\tint x,y;\n\tfor(int i = 1;i < n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n}\n\nvoid outit(){\n\tfor(int i = 1;i < n;i++)\n\t\tprintf(\"%d \",Ans[i]);\n\tprintf(\"%d\\n\",Ans[n]);\n}\n\nvoid add(int u,int v){\n\tto[++num] = v;\n\tnxt[num] = fir[u];\n\tfir[u] = num;\n}\n\nvoid dfs(int now,int fa,int maxf){\n\tdep[now] = dep[fa] + 1;  //\u540c\u82f1\u6587\uff0c\u6df1\u5ea6\n\tcnt[col[now]]++;  //\u5982\u4e0a\u63d0\u5230,col\u662f\u8be5\u4f4d\u7f6e\u7684\u6570\u5b57\n\tint maxnow = 1;  //\u4fee\u6539\u5b83\u513f\u5b50\u4eec\u7684maxf\n\tAns[now] = 1;\n\tif(cnt[col[now]] == dep[now] || cnt[col[now]] == dep[now] - 1)  //\u5176\u5b9e\u8fd9\u91cc\u548c\u4e0a\u6587\u7a9d\u63d0\u5230\u7684\u4e00\u6837\n\t\tAns[now] = col[now];\t\t\t\t\t\t//\u53ef\u4ee5\u53ea\u6709\u5f53\u524d\u6df1\u5ea6\u3002\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\uff1f\n\tif(cnt[col[now]] == dep[now]) maxnow = max(maxnow,col[now]); \t\t//\u4e3a\u5b83\u7684\u513f\u5b50\u4eec\u7684\u4fee\u6539\u4fdd\u8bc1\n\tAns[now] = max(Ans[now],maxf);\n\tfor(int i = 2;i * i <= col[now];i++){\t\t\t//\u5206\u89e3\u8d28\u56e0\u6570\n\t\tif(!(col[now] % i)){\t\t\n\t\t\tcnt[i]++;\t\t\n\t\t\tif(col[now]/i != i) cnt[col[now]/i]++;\t\t//\u5f53\u65f6\u8fd9\u4e2a\u9519\u627e\u4e86\u597d\u4e45\uff0c\u6211\u597dcai\uff0c\u545c\u545c\u545c\n\t\t\tif(cnt[i] == dep[now] || cnt[i] == dep[now] - 1){\n\t\t\t\tAns[now] = max(Ans[now],i);\t\t\t//\u540c\u4e0a\u9762\u53ef\u4ee5\u6539\u8fdb\uff0c\u9632\u6b62\u591a\u4f59\u7684\u8ba1\u7b97\n\t\t\t}\n\t\t\tif(cnt[i] == dep[now]) maxnow = max(maxnow,i);\t\t//\u6539maxf\u7684\u503c\n\t\t\tif(cnt[col[now]/i] == dep[now] || cnt[col[now]/i] == dep[now] - 1){\n\t\t\t\tAns[now] = max(Ans[now],col[now]/i);\n\t\t\t}\n\t\t\tif(cnt[col[now]/i] == dep[now]) maxnow = max(maxnow,col[now]/i);\n\t\t}\n\t}\n\tfor(int i = fir[now];i;i = nxt[i]){\n\t\tif(to[i] == fa) continue;\t\t//\u524d\u9879\u661f\u53ef\u597d\u7528\u4e86\n\t\tdfs(to[i],now,maxnow);\t\t\t//dfs\u5b83\u7684\u513f\u5b50\u4eec\n\t}\n\tfor(int i = 1;i * i <= col[now];i++){  //\u522b\u5fd8\u4e86\u56de\u6eaf\u54e6\uff0c\u53cd\u6b63\u590d\u6742\u5ea6\u4e5f\u4e0d\u4f1a\u589e\u52a0\n\t\tif(!(col[now] % i)){\n\t\t\tcnt[i]--;\n\t\t\tif(col[now]/i != i) \n\t\t\t\tcnt[col[now]/i]--;\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1572843088,
        "uid": 153665,
        "name": "\u9646\u5df7\u5317NorthAlley",
        "ccfLevel": 4,
        "title": "CF842C Ilya And The Tree \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u6211\u76f4\u63a5\u66b4\u529b+\u4e0d\u6b63\u786e\u526a\u679d\u6c34\u8fc7\u4e86  \n\u8003\u8651\u52a8\u6001\u89c4\u5212\uff0cf[i]\u8868\u793a\u52200/1\u6761\u8fb9\u7684\u65f6\u5019GCD\u6700\u5927\u503c\uff0c\u5982\u679c\u76f4\u63a5\u5411\u4e0a\u9012\u63a8\u4f1a\u8d85\u65f6\uff0c\u53ea\u5411\u4e0a\u63a8\u4e00\u5c42\uff0c\u4f1aWA\uff0c\u7136\u540e\u5c31\u53d1\u73b0\u53ef\u4ee5\u4e2d\u548c\u4e00\u4e0b\uff0c\u5411\u4e0a\u63a810\u5c42\uff0c\u9519\u8bef\u6982\u7387\u5c31\u6781\u4f4e\u4e86(\u7136\u540e\u5c31\u6c34\u8fc7\u53bb\u4e86)\n\n\u6700\u540e\u653e\u4e2a\u4ee3\u7801\uff1a  \n\u6ce8:g[i]\u662fGCD\u524d\u7f00\u548c\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nint read(){\n    int x = 0; int zf = 1; char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\n\nint gcd(int a, int b){\n    if (b > a) swap(a, b);\n    while (b > 0){\n        int tmp = a % b;\n        a = b, b = tmp;\n    }\n    return a;\n}\n\nint a[200005];\nint f[200005], g[200005];\nint fat[200005];\nvector<int> edges[200005];\n\nvoid getf(int u, int fa){\n    if (fa == 0)\n        g[u] = a[u];\n    else\n        g[u] = gcd(g[fa], a[u]);\n    if (fa != 0){\n        f[u] = g[u];\n        f[u] = max(g[fa], gcd(f[fa], a[u]));\n        int v = fa, gg = a[u], i = 10;\n        while (v && i > 0){ \n            f[u] = max(f[u], gcd(gg, f[v]));\n            if (fat[v] != 0){\n                f[u] = max(f[u], gcd(gg, g[fat[v]]));\n            }else{\n                f[u] = max(f[u], gg);\n            }\n            gg = gcd(gg, a[v]);\n            v = fat[v];\n            --i;\n        }\n    }\n    else\n        f[u] = g[u];\n    int v, i, u_s = edges[u].size();\n    for (i = 0; i < u_s; ++i){\n        v = edges[u][i];\n        if (v != fa && v != 0){\n            fat[v] = u;\n            getf(v, u);\n        }\n    }\n}\n\nint main(){\n    int n = read();\n    for (int i = 1; i <= n; ++i)\n        a[i] = read();\n    int u, v;\n    for (int i = 1; i < n; ++i){\n        u = read(), v = read();\n        edges[u].push_back(v);\n        edges[v].push_back(u);\n    }\n    getf(1, 0);\n    for (int i = 1; i <= n; ++i){\n        printf(\"%d\", max(f[i], g[i]));\n        if (i < n)\n            printf(\" \");\n        else\n            printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1556607609,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF842C \u3010Ilya And The Tree\u3011"
    },
    {
        "content": "$\\tt{upd \\ on\\ 2022/2/9}$\uff1a\u5220\u9664\u6ee5\u7528\u7684 $\\LaTeX$\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF842C)\n\n\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u592a\u4e00\u6837\u7684\u601d\u8def\u3002\n\n## Part 1\uff1a\u8bfb\u9898\n\n\u6709\u4e00\u68f5\u6811\uff0c\u6bcf\u4e00\u4e2a\u70b9\u6709\u4e00\u4e2a\u70b9\u6743\uff0c\u6c42\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5b83\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6700\u591a\u53ef\u4ee5\u5220\u6389 $1$ \u4e2a\u70b9\u7684\u60c5\u51b5\u4e0b\u6240\u6709\u70b9\u6743\u7684\u6700\u5927\u516c\u7ea6\u6570\u7684\u6700\u5927\u503c\u3002\n\n## Part 2\uff1a\u601d\u8def\n\n\u9996\u5148\u53ef\u4ee5\u80af\u5b9a\uff0c\u66b4\u529b\u67e5\u8be2\u662f\u7edd\u5bf9\u8fc7\u4e0d\u4e86\u7684\u3002\n\n\u7531\u4e8e\u8def\u5f84\u90fd\u662f\u5230\u6839\u7684\uff0c\u5373\u513f\u5b50\u7684\u8def\u5f84\u6bd4\u7236\u4eb2\u7684\u4ec5\u591a\u4e00\u4e2a\u70b9\uff0c\u5c1d\u8bd5\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u9012\u63a8\u7684\u65b9\u6cd5\u3002\n\n\u5148\u770b\u4e00\u5f20\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9qrs43yb.png)\n\n\u5982\u56fe\uff0c\u5047\u8bbe A1 \u662f\u6839\u8282\u70b9\uff0c\u5f53\u524d\u8981\u6c42 B \u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8e B\uff0c\u65e0\u975e\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u5220\uff0c\u6216\u8005\u4e0d\u5220\u3002\n\n1. \u5220\u6389 B\u3002\n\n\u5220\u6389 B \u7684\u8bdd\uff0cA1 \u5230 A4 \u5c31\u90fd\u9700\u8981\u4fdd\u7559\u3002\u6b64\u65f6\u7b54\u6848\u4e3a $\\gcd (A_1,A_2,A_3,A_4)$\u3002\u53ef\u4ee5\u5728\u5148\u5e8f\u904d\u5386\u9014\u4e2d\u9012\u63a8\u5f97\u5230\u3002\n\n2. \u4e0d\u5220 B\u3002\n\n\u6b64\u65f6\uff0cB \u7684\u7956\u5148\u4eec\u6709\u53ef\u80fd\u5220\u6389\u4e00\u4e2a\uff0c\u4e5f\u6709\u53ef\u80fd\u5168\u90e8\u4fdd\u7559\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 B \u7684\u7956\u5148\u4eec\u7684\u6240\u6709\u56e0\u5b50\u6c42\u51fa\u6765\uff0c\u653e\u5728\u4e00\u4e2a\u6876\u91cc\u9762\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a B \u7684\u56e0\u5b50\uff0c\u6211\u4eec\u5148\u5c06 B \u7684\u56e0\u5b50\u5bf9\u5e94\u7684\u6876\u7684\u503c\u52a0 $1$\uff0c\u518d\u5224\u65ad\u6876\u7684\u503c\u662f\u5426\u4e0d\u5c0f\u4e8e $\\text{dep}_B-1$\uff0c\u5176\u4e2d $\\text{dep}_B$ \u8868\u793a B \u7684\u6df1\u5ea6\u3002\n\n\u56e0\u4e3a\u4ece B \u5230\u6839\u7684\u70b9\u603b\u5171\u6709 $\\text{dep}_B$ \u4e2a\uff0c\u51cf\u4e00\u540e\u8868\u793a\u8fd9\u4e00\u6761\u8def\u5f84\u4e0a\u4f1a\u5220\u6389 $1$ \u4e2a\u70b9\u3002\u53c8\u56e0\u4e3a\u6211\u4eec\u67e5\u770b\u7684\u90fd\u662f B \u7684\u56e0\u5b50\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5220\u6389\u7684\u70b9\u4e00\u5b9a\u662f B \u7684\u7956\u5148\u8282\u70b9\u3002\u800c\u4e0d\u5c0f\u4e8e\u5219\u5bf9\u5e94\u4e86\u8fd9\u6761\u8def\u5f84\u4e0a\u4e00\u4e2a\u4e5f\u4e0d\u5220\u7684\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u672c\u9898\u5c31\u53ef\u4ee5\u6109\u5feb\u7684 AC \u4e86~\n\n## Part 3\uff1a\u4ee3\u7801\n\n```cpp\n/**\n * Owner Mr_L\n * Prob  CF842C\n * Lang  C++\n * Date  2022.2.5\n**/\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, a[200010], t[200010], g[200010], gs[200010];\nint hd[200010], ed[400010], nt[400010], cnt;\n\nvoid add_edge (int u, int v)\n{\n    ed[++cnt] = v;\n    nt[cnt] = hd[u];\n    hd[u] = cnt;\n}\n\nvoid dfs (int u, int fa, int dep)\n{\n    //\u5904\u7406\u4e0d\u5220\u7684\u60c5\u51b5\n    for (int i = 1; i * i <= a[u]; i++)\n    {\n        if (a[u] % i)\n            continue;\n        t[i]++;\n        if (i * i != a[u])\n            t[a[u] / i]++;\n        if (t[i] >= dep - 1)\n            g[u] = max (g[u], i);\n        if (t[a[u] / i] >= dep - 1)\n            g[u] = max (g[u], a[u] / i);\n    }\n    //\u5904\u7406\u5220\u7684\u60c5\u51b5\n    g[u] = max (g[u], gs[fa]);\n    //\u9012\u63a8\u6574\u6761\u8def\u5f84\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u7528\u7684\u662f C++ \u5185\u90e8\u7684 gcd \u51fd\u6570\n    gs[u] = __gcd (a[u], gs[fa]);\n    for (int i = hd[u]; i; i = nt[i])\n    {\n        int v = ed[i];\n        if (v == fa)\n            continue;\n        dfs (v, u, dep + 1);\n    }\n    //\u8bb0\u5f97\u56de\u6eaf\n    for (int i = 1; i * i <= a[u]; i++)\n    {\n        if (a[u] % i)\n            continue;\n        t[i]--;\n        if (i * i != a[u])\n            t[a[u] / i]--;\n    }\n}\n\nint main()\n{\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    for (int i = 1; i < n; i++)\n    {\n        int a, b;\n        cin >> a >> b;\n        add_edge (a, b);\n        add_edge (b, a);\n    }\n    dfs (1, 0, 1);\n    for (int i = 1; i <= n; i++)\n        cout << g[i] << ' ';\n    cout << endl;\n    return 0;\n}\n```",
        "postTime": 1644049228,
        "uid": 365751,
        "name": "Mr_\u7f57",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF842C Ilya And The Tree"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\n\u6709\u4e00\u4e2an\u4e2a\u8282\u70b9\u7684\u6570,\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u70b9\u6743,\u6839\u5230\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u70b9\u6743(\u5305\u62ec\u8fd9\u4e2a\u70b9\u548c\u6839)\u7684gcd\u503c\u4e3a\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848. \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u7b54\u6848,\u4f60\u53ef\u4ee5\u5220\u9664\u5176\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u81f3\u591a\u4e00\u4e2a\u70b9\u6765\u4f7f\u7b54\u6848\u6700\u5927. \u6c42\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848(\u6700\u5927\u503c). PS:\u6839\u4e3a1\u53f7\u70b9.\n\n\u8fd9\u9053\u9898\u6211\u521a\u62ff\u5230\u624b\u7684\u65f6\u5019\u8fd8\u4ee5\u4e3a\u8fd9\u662f\u4e00\u9053\u6570\u8bba\u7684\u9898\u76ee\uff0c\u4f46\u5176\u5b9e\u4e0d\u7136\uff0c\u53ea\u8981\u66b4\u529b\u641c\u7d22\u5373\u53ef\u3002\n\ndp\u8bb0\u5f55\u7b54\u6848\n\n\u7531\u4e8e\u4e00\u4e32\u6570\u7684gcd\u7684\u8ba1\u7b97\u5e76\u6ca1\u6709\u987a\u5e8f\uff08gcd(gcd(a,b),c)==gcd(a,gcd(b,c)),\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u6811\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u65f6\u5019\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u5c06\u4ece\u6839\u8282\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u8fd9\u6761\u94fe\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\u53d8\u62100\u540e\u7684gcd\u7684\u53ef\u80fd\u503c\u8bb0\u5f55\u5728\u4e00\u4e2avector\u4e2d\uff0c\u8fd9\u6837\u7684\u8bdd\u4e00\u4e2a\u8282\u70b9\u7684vector\u91cc\u9762\u5e94\u8be5\u6709\u4ece\u4e0a\u4e00\u4e2a\u7684\u6700\u4f18\u89e3\u4f20\u4e0b\u6765\u7684dp\u4ee5\u53ca\u7236\u8282\u70b9\u7684vector\u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u503c\u4e0e\u8fd9\u4e2a\u70b9\u7684\u70b9\u6743\u7684gcd\uff08\u5177\u4f53\u770b\u4ee3\u7801\uff09\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u6211\u90fd\u7528\u5b83\u7684vector\u91cc\u9762\u7684\u6700\u5927\u503c\u6765\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4e0b\u9644AC\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct edge{\n\tint to,next;\n}e[400040];\nint eid=0,head[200010];\nvoid insert(int u,int v){\n\teid++;\n\te[eid].to=v;\n\te[eid].next=head[u];\n\thead[u]=eid;\n}\nint a[200010];\nint n;\nint fa[200010];\nint dp[200010];//\u67d0\u4e00\u4e2a\u70b9\u7684\u7f8e\u4e3d\u503c \nvector<int>v[200010];//\u5b58\u50a8\u6bcf\u4e00\u4e2a\u70b9\u7684\u7f8e\u4e3d\u503c\u7684\u53ef\u80fd\u503c \nint gcd(int a,int b){\n\tif(b==0)return a;\n\treturn gcd(b,a%b);\n}\nvoid dfs(int x,int pre){\n\tfor(int i=head[x];i+1;i=e[i].next){\n\t\tint k=e[i].to;\n\t\tif(k==pre)continue;\n\t\tdp[k]=gcd(dp[x],a[k]);\n\t\tv[k].push_back(dp[x]);\n\t\tfor(int j=0;j<v[x].size();j++){\n\t\t\tv[k].push_back(gcd(v[x][j],a[k]));\n\t\t}\n\t\tsort(v[k].begin(),v[k].end());//\u6392\u5e8f+\u53bb\u91cd\uff0c\u4fdd\u8bc1\u6700\u540e\u9762\u7684\u5143\u7d20\u6700\u4f18 \n\t\tv[k].erase(unique(v[k].begin(),v[k].end()),v[k].end());\n\t\tdfs(k,x);\n\t}\n}\nint main(){\n\tmemset(head,-1,sizeof(head));\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tinsert(x,y);\n\t\tinsert(y,x);\n\t\tfa[y]=x;\n\t}\n\tfa[1]=0;\n\tdp[1]=a[1];\n\tv[1].push_back(0);\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++){\n\t\tdp[i]=max(dp[i],v[i].back());//\u7528vector\u91cc\u9762\u7684\u6700\u4f18\u7b54\u6848\u66f4\u65b0\u7ed3\u679c \n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tcout<<dp[i];\n\t\tif(i!=n)cout<<\" \";\n\t\telse cout<<endl;\n\t}\n}\n```\n",
        "postTime": 1567250165,
        "uid": 120244,
        "name": "luyan",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF842C \u3010Ilya And The Tree\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\u4e0d\u600e\u4e48\u96be\u3002  \n$f[i][j]$\u8868\u793a$i$\u4e3a\u6839\uff0c\u7136\u540e\u679a\u4e3e\u662f\u5426\u5220\u9664\u6539\u70b9\uff0c\u5982\u5220\u9664\u8fc7$j=1$\u5426\u5219$j=0$\u3002  \n\u4e3a\u4e86\u9632\u6b62\u6709\u5168\u8d28\u6570\u7684\u60c5\u51b5\u3002\u5f00\u4e00\u4e2a$map$\u8bb0\u5fc6\u5316\u641c\u7d22\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IOstream {\n    #define gc getchar\n    template <typename T> inline void read(T &x) {\n        x = 0; T fl = 1; char c = 0;\n        for (; c < '0' || c > '9'; c = gc()) if (c == '-') fl = -1;\n        for (; c >= '0' && c <= '9'; c = gc()) x = (x << 1) + (x << 3) + (c ^ 48);\n        x *= fl;  \n    }\n    template <typename T> inline T sqr(T x) { return x * x; }\n    template <typename T> inline void write(T x) {\n        if (x < 0) putchar('-'), x *= -1;\n        if (x > 9) write(x / 10);\n        putchar(x % 10 + '0');\n    }\n    template <typename T> inline T gcd(T a, T b) { return b == 0 ? a : gcd(b, a % b); }\n    template <typename T> inline void writeln(T x) { write(x); puts(\"\"); }\n    template <typename T> inline void writesp(T x) { write(x); putchar(' '); }\n    #undef gc\n} using namespace IOstream;\ntypedef long long ll;\nconst int N = 2e5 + 5;\nvector<int> gr[N];\nint a[N], ans[N];\nint n;\nunordered_map<int, bool> f[N][2];\nvoid DP(int u, int fa, int opt, int cum) {\n    if (f[u][opt][cum]) return;\n    f[u][opt][cum] = true;\n    int tmp = gcd(cum, a[u]);\n    ans[u] = max(ans[u], tmp);\n    if (opt == 0) ans[u] = max(ans[u], cum);\n    for (auto v : gr[u]) {\n        if (v == fa) continue; \n        DP(v, u, opt, tmp);\n        if (opt == 0) DP(v, u, 1, cum);\n    }\n}\nint main() {\n    read(n);\n    for (int i = 1; i <= n; i ++) read(a[i]);\n    for (int i = 1, u, v; i < n; i ++) {\n        read(u); read(v); \n        gr[u].push_back(v);\n        gr[v].push_back(u);\n    }\n    DP(1, 0, 0, 0);\n    for (int i = 1; i <= n; i ++) writesp(ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1556602208,
        "uid": 35567,
        "name": "Ayers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF842C \u3010Ilya And The Tree\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u7684\u601d\u8def\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5c06\u5b83\u7684\u6240\u6709\u5206\u5b50\u90fd\u7528\u4e00\u4e2a\u6876\u6570\u7ec4\u8fdb\u884c\u7ef4\u62a4\uff0c\u7531\u4e8e\u53ef\u4ee5\u53bb\u6389\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u5c31\u662f\u5927\u4e8e\u8fd9\u4e00\u4e2a\u70b9\u7684\u6df1\u5ea6\u51cf\u53bb\u4e00\u7684\u6700\u5927\u5206\u5b50\uff0c\u5728\u56de\u6eaf\u65f6\u518d\u628a\u6240\u6709\u7684\u5206\u5b50\u5728\u6876\u91cc\u53bb\u6389\uff0c\u5982\u6b64\u9012\u5f52\u5904\u7406\u3002\n \n\u4ee3\u7801\u5982\u4e0b\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint head[400005],nxt[400005],edge[400005],num=0,ans[200005],a[200005],n,tong[200005],g[200005];\nvoid add(int x,int y)//\u5efa\u8fb9\n{\n    num++;\n    edge[num]=y;\n    nxt[num]=head[x];\n    head[x]=num;\n    num++;\n    edge[num]=x;\n    nxt[num]=head[y];\n    head[y]=num;\n}\nint gcd(int x,int y)//\u6700\u5927\u516c\u56e0\u6570\u51fd\u6570\n{\n\tif(!y)\n   {\n\t\treturn x;\n\t}\n\treturn gcd(y,x%y);\n}\nvoid dfs(int u,int fa,int dep)\n{\n    for(int i=1;i<=sqrt(a[u]);i++)//\u5c06\u6240\u6709\u5206\u5b50\u52a0\u5165\u5230\u6876\u91cc\n    {\n        if(a[u]%i==0)\n        {\n            tong[i]++;\n            if(i*i!=a[u])\n            {\n                tong[a[u]/i]++;\n            }\n            if(tong[i]>=dep-1)//\u5982\u679c\u5408\u6cd5\n            {\n                ans[u]=max(ans[u],i);\n            }\n            if(tong[a[u]/i]>=dep-1)//\u540c\u7406\n            {\n                ans[u]=max(ans[u],a[u]/i);\n            }\n        }\n    }\n    ans[u]=max(ans[u],g[fa]);//\u8bb0\u5f55\u7b54\u6848\n    g[u]=gcd(a[u],g[fa]);//\u8bb0\u5f55\u6700\u5927\u516c\u56e0\u5b50\uff0c\u4ee5\u4fbf\u4e0b\u4e00\u6b21\u5904\u7406\n    for(int i=head[u];i>0;i=nxt[i])//\u9012\u5f52\n    {\n        int to=edge[i];\n        if(to==fa)continue;\n        dfs(to,u,dep+1);\n    }\n    for(int i=1;i<=sqrt(a[u]);i++)//\u56de\u6eaf\uff0c\u5c06\u6240\u6709\u5206\u5b50\u4ece\u6876\u91cc\u53bb\u9664\n    {\n        if(a[u]%i==0)\n        {\n            tong[i]--;\n            if(i*i!=a[u])\n            {\n                tong[a[u]/i]--;\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        add(x,y);\n    }\n    dfs(1,0,1);\n    for(int i=1;i<=n;i++)\n    {\n        cout<<ans[i]<<\" \";\n    }\n    return 0;\n}\n\n```\n\n",
        "postTime": 1644065690,
        "uid": 237437,
        "name": "xxasmcd",
        "ccfLevel": 6,
        "title": "CF842C\u9898\u89e3"
    },
    {
        "content": "# Ilya And The Tree\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u8ba9\u4f60\u6c42\u4ece1\u53f7\u70b9\u5230\u6240\u6709\u70b9\u7ecf\u8fc7\u7684\u70b9\u7684gcd\u6700\u5927\u503c\n\n\u6709\u4e00\u79cd\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u53d8\u4e3a0\uff0c\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u9700\u8981\u5355\u72ec\u8ba1\u7b97\uff0c\u5373\u4e0d\u540c\u70b9\u7684\u6700\u5927\u503c\u65f6\u53d8\u4e3a0\u7684\u70b9\u53ef\u4ee5\u4e0d\u540c\n\n## \u5e7f\u544a\u63d2\u5165\n\n\u5728\u6211\u7684\u535a\u5ba2\u91cc\u770b\u9898\u89e3\u4f7f\u7528\u6548\u679c\u66f4\u4f73\u54e6QwQ\n\n[\u6155\u5bb9\u7433\u7684\u540e\u82b1\u56ed](https://muronglin.top/hgoi-20190430/)\n\n## \u89e3\u6cd5\n\n\u5148\u6765\u60f3\u4e00\u60f3\u4e00\u79cd\u66b4\u529b\uff0c\u5148\u8dd1\u4e00\u904d\u6ca1\u6709\u53d8\u62100\u64cd\u4f5c\u7684dfs\uff0c\u7b97\u5b8c\u521d\u59cb\u7684gcd\n\n\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u53d8\u4e3a0\u7684\u60c5\u51b5\uff0c\u66f4\u65b0\u5b83\u7684\u5b50\u6811\n\n\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\u5462\uff0c\u6211\u4eec\u53d1\u73b0\u540c\u4e00\u6df1\u5ea6\u7684\u70b9\u4e0d\u4f1a\u91cd\u590d\u505a\n\n\u6240\u4ee5\u662fO(ndist)\uff0c\u5b83\u7684\u671f\u671b\u590d\u6742\u5ea6\u5c31\u662fnlogn\uff0c\u7136\u800c\u4e00\u6761\u94fe\u5c31\u9000\u5316\u6210n\u65b9\u4e86\n\n\u90a3\u600e\u4e48\u4f18\u5316\u5462\uff1f\u4f60\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u679a\u4e3e\u4fee\u6539\u67d0\u4e00\u4e2a\u70b9\u65f6\uff0c\u4f1a\u5728\u67d0\u4e00\u4e2a\u70b9\u505a\u5f88\u591a\u6b21\u91cd\u590d\u7684\u64cd\u4f5c\n\n\u6240\u4ee5\uff0c\u5982\u679c\u5f53\u524d\u7684\u6700\u5927\u503c\u662f\u73b0\u5728\u7684gcd\u7684\u500d\u6570\uff0c\u5c31\u53ef\u4ee5\u526a\u679d\u6389\n\n\u4e3a\u4ec0\u4e48\u4e0d\u662f\u5f53\u524d\u6700\u5927\u503c\u6bd4\u73b0\u5728\u7684gcd\u5927\u5c31\u526a\u679d\u6389\u5462\uff1f\u53ef\u4ee5\u4e3e\u4e00\u7ec4\u53cd\u4f8b\n\n9->6->12\uff0c\u8fd9\u4e00\u7ec4\uff0c6\u8fd9\u91cc\u7684\u6700\u4f18\u89e3\u662f\u5c066\u53d8\u62100\uff0c\u7b54\u6848\u662f9\uff0c\u4f46\u662f12\u8fd9\u91cc\u7684\u6700\u4f18\u89e3\u662f\u5c069\u53d8\u62100\uff0c\u7b54\u6848\u662f6\n\n\u8fd9\u65f6\u5019\u5982\u679c\u76f4\u63a5\u526a\u679d\uff0c12\u7684\u7b54\u6848\u5c31\u4f1a\u53d8\u62103\u4e86\n\n## ac\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint gcd(int x,int y){return y==0?x:gcd(y,x%y);}\nstruct node{int to,next;}e[400010];\nint n,cnt,x,y,a[200010],dis[200010],ans[200010],head[200010],fa[200010];\nvoid add(){e[++cnt]={y,head[x]},head[x]=cnt,e[++cnt]={x,head[y]},head[y]=cnt;}\nvoid dfs(int u)\n{\n\tfor(int i=head[u];i;i=e[i].next)\n\t{\n\t\tint v=e[i].to;\n\t\tif(fa[u]==v)continue;\n\t\tans[v]=dis[v]=gcd(dis[u],a[v]),fa[v]=u,dfs(v);\n\t}\n}\nvoid work(int u,int d)\n{\n\tfor(int i=head[u];i;i=e[i].next)\n\t{\n\t\tint v=e[i].to;\n\t\tif(fa[u]==v)continue;\n\t\tint dd=gcd(d,a[v]);\n\t\tif(ans[v]%dd==0)continue;\n\t\tans[v]=max(ans[v],dd),work(v,dd);\n\t}\n}\nvoid dfsx(int u)\n{\n\tans[u]=max(ans[u],dis[fa[u]]),work(u,dis[fa[u]]);\n\tfor(int i=head[u];i;i=e[i].next)\n\t{\n\t\tint v=e[i].to;\n\t\tif(fa[u]==v)continue;\n\t\tdfsx(v);\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<n;i++)scanf(\"%d%d\",&x,&y),add();\n\tans[1]=dis[1]=a[1],dfs(1),dfsx(1);\n\tfor(int i=1;i<=n;i++)printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1556595117,
        "uid": 24663,
        "name": "\u6ce0\u5c0f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF842C \u3010Ilya And The Tree\u3011"
    },
    {
        "content": "~~\u6ca1\u770b\u51fa\u6765\u8bb0\u641c\u7684\u590d\u6742\u5ea6\u662f\u5565\uff0c\u90a3\u5c31\u8bb2\u4e2a\u5c51\u505a\u6cd5\u5427~~\n\n# \u4e00. \u5206\u6790\n\n\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u6570\u7684\u56e0\u5b50\uff0c\u904d\u5386\u5230\u7ed3\u70b9 $x$ \u65f6\u7d2f\u52a0\u5230\u6839\u8def\u5f84\u4e0a\u7684\u6240\u6709\u6570\u7684\u56e0\u5b50\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5982\u679c\u7ed3\u70b9 $x$ \u6df1\u5ea6\u4e3a $depth$\uff0c\u90a3\u51fa\u73b0\u4e86 $depth$ \u4e0e $depth-1$ \u6b21\u7684\u56e0\u5b50\u662f\u53ef\u4ee5\u6210\u4e3a\u7b54\u6848\u7684\u56e0\u5b50\uff0c\u6211\u4eec\u53d6\u8fd9\u4e4b\u4e2d\u6700\u5927\u7684\u3002\n\n\u83b7\u53d6\u56e0\u5b50\u7684\u8bdd\u53ef\u4ee5 $O(n\\sqrt a)$ \u66b4\u529b\u627e\uff0c\u6216\u8005\u8c03\u548c\u7ea7\u6570\u9884\u5904\u7406\u4e00\u4e0b $O(a \\log a)$\u3002\u6211\u4eec\u53c8\u77e5\u9053 $\\max_{i=1}^{2\\times 10^5} \\tau(i)=160$\uff0c\u56e0\u6b64\u53ef\u4ee5\u6210\u4e3a\u7b54\u6848\u7684\u56e0\u5b50\u6570\u4e0d\u4f1a\u5f88\u591a\uff0c\u66b4\u529b\u53d6 $\\max$ \u5c31\u53ef\u4ee5\u505a\u5230 $O(n\\tau(a))$\u3002\n\n\u8fd9\u662f\u4e3a\u4ec0\u4e48\u561e\uff0c\u5047\u8bbe\u5728 $x$ \u7684\u7236\u4eb2\u4e0a\u6709\u4e24\u7c7b\u56e0\u5b50\uff0c\u51fa\u73b0\u4e86 $depth-2$ \u4e0e $depth-1$ \u6b21\u7684\u56e0\u5b50\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u662f $x$ \u7684 $\\tau (a)$ \u4e2a\u56e0\u5b50\u5c3d\u53ef\u80fd\u4fdd\u7559\u4e86\u7236\u4eb2\u4e0a\u53ef\u6210\u4e3a\u7b54\u6848\u7684\u56e0\u5b50\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u51fa\u73b0\u4e86 $depth-2$ \u6b21\u7684\u56e0\u5b50\u4e00\u65e6\u4e0d\u5728 $x$ \u7684\u56e0\u5b50\u4e2d\u5c31\u518d\u4e5f\u4e0d\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff0c\u56e0\u6b64\u4fdd\u7559\u4e0b\u6765\u7684\u56e0\u5b50\u4e2a\u6570\u6700\u591a\u4e3a $O(\\tau(a))$\u3002\n\n\u5f00\u4e2a\u94fe\u8868\u7ef4\u62a4\u6bcf\u4e2a\u51fa\u73b0\u4e86 $i$ \u6b21\u7684\u56e0\u5b50\u96c6\u5408 $S_i$ \u5c31\u597d\u4e86\uff0c\u7528\u6808\u56de\u6536\u5e9f\u5f03\u7684\u4e0b\u6807\u53ef\u4ee5\u505a\u5230\u7a7a\u95f4 $O(n+a)$\u3002\u603b\u590d\u6742\u5ea6\u6700\u4f18\u53ef\u4ee5\u505a\u5230 $O(a \\log a + n\\tau(a))$\u3002\n\n# \u4e8c. \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=2e5,tou=160;\n\nstruct msg\n{\n\tint lst,nxt;\n\tint data;\n}Q[MAXN+5];\nstack<int> recyc;\n\nint n,A[MAXN+5];\nint loc[MAXN+5],Head[MAXN+5];\nvector<int> nxt[MAXN+5];\nint mapn[MAXN+5],ans[MAXN+5];\n\nvoid Insert(int x,int v)//\u5c06 v \u63d2\u5165 x \u4e2d \n{\n\tif(!x) return;\n\tloc[v]=recyc.top(),recyc.pop();\n\tQ[Head[x]].lst=loc[v];\n\tQ[loc[v]]=msg{-x,Head[x],v};\n\tHead[x]=loc[v];\n}\n\nvoid Delete(int v)\n{\n\tif(!loc[v]) return;\n\tif(Q[loc[v]].lst<=0) Head[-Q[loc[v]].lst]=Q[loc[v]].nxt;\n\telse Q[Q[loc[v]].lst].nxt=Q[loc[v]].nxt;\n\tQ[Q[loc[v]].nxt].lst=Q[loc[v]].lst;\n\trecyc.push(loc[v]);\n\tloc[v]=0;\n}\n\nvoid Solve(int now,int fa,int depth)\n{\n\tfor(int i=1;i*i<=A[now];i++)\n\t\tif(A[now]%i==0)\n\t\t{\n\t\t\tDelete(i);\n\t\t\tInsert(++mapn[i],i);\n\t\t\tif(i*i<A[now])\n\t\t\t{\n\t\t\t\tint j=A[now]/i;\n\t\t\t\tDelete(j);\n\t\t\t\tInsert(++mapn[j],j);\n\t\t\t}\n\t\t}\n\t/*printf(\"now at %d\\n\",now);\n\tprintf(\"factor an the val:\\n\");\n\tfor(int i=1;i<=depth;i++)\n\t{\n\t\tfor(int j=Head[i];j;j=Q[j].nxt) printf(\"%d \",Q[j].data);\n\t\tprintf(\"\\n\");\n\t}*/\n\tfor(int i=Head[depth];i;i=Q[i].nxt) ans[now]=max(ans[now],Q[i].data);\n\tif(depth>1)\n\t\tfor(int i=Head[depth-1];i;i=Q[i].nxt)\n\t\t\tans[now]=max(ans[now],Q[i].data);\n\tfor(int i=0,rear;i<nxt[now].size();i++)\n\t{\n\t\trear=nxt[now][i];\n\t\tif(rear==fa) continue;\n\t\tSolve(rear,now,depth+1);\n\t}\n\tfor(int i=1;i*i<=A[now];i++)\n\t\tif(A[now]%i==0)\n\t\t{\n\t\t\tDelete(i);\n\t\t\tInsert(--mapn[i],i);\n\t\t\tif(i*i<A[now])\n\t\t\t{\n\t\t\t\tint j=A[now]/i;\n\t\t\t\tDelete(j);\n\t\t\t\tInsert(--mapn[j],j);\n\t\t\t}\n\t\t}\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&A[i]);\n\tfor(int i=1,a,b;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tnxt[a].push_back(b);\n\t\tnxt[b].push_back(a);\n\t}\n\tfor(int i=1;i<=MAXN;i++) recyc.push(i);\n\tSolve(1,0,1);\n\tfor(int i=1;i<=n;i++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1642992898,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "CF842C Ilya And The Tree \u7684\u9898\u89e3"
    },
    {
        "content": "**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6709 $n$ \u4e2a\u70b9\uff0c\u4ee5 $1$ \u4e3a\u6839\uff0c\u6bcf\u4e00\u4e2a\u70b9\u4e0a\u6709\u4e00\u4e2a\u503c\u3002\n\n\u73b0\u5728\u5b9a\u4e49\u4e00\u4e2a\u70b9\u7684\u7f8e\u4e3d\u503c\u4e3a\u6839\u5230\u8fd9\u4e00\u4e2a\u70b9\uff0c\u6240\u5728\u8def\u5f84\u4e0a\u9762\u7684\u6240\u6709\u503c\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002\u4e0d\u8fc7\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u70b9\uff0c\u503c\u53d8\u4e3a $0$\uff0c\u4e5f\u53ef\u4ee5\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002\n\n\u6839\u8282\u70b9\u7684\u7f8e\u4e3d\u503c\u5c31\u662f\u6839\u8282\u70b9\u7684\u503c\u3002\n\n\u6bcf\u4e00\u4e2a\u70b9\u7684\u7f8e\u4e3d\u503c\u662f\u72ec\u7acb\u7684\uff0c\u4e0d\u53d7\u5f71\u54cd\u3002\n\n\u73b0\u5728\u8981\u6c42\u4f60\u8f93\u51fa $n$ \u4e2a\u6570\uff0c\u4ee3\u8868\u6bcf\u4e00\u4e2a\u70b9\u6700\u5927\u53ef\u80fd\u7684\u7f8e\u4e3d\u503c\u3002\n\n**\u601d\u8def**\n\n\u5148\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\n\n$1\\le n\\le 2\\times 10^5$\n\n$1\\le a_i\\le 2\\times 10^5$\n\n$1\\le x, y\\le n, x\\neq y$\n\n\u8bf4\u660e\u8fd9\u9053\u9898\u76ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u80fd\u8d85\u8fc7 $O(N\\log N)$ \u8fd9\u4e00\u4e2a\u7ea7\u522b\u3002\n\n\u6211\u4eec\u53ea\u7ef4\u62a4\u5f53\u524d\u70b9\u5230\u6839\u8282\u70b9\u7684\u6240\u6709\u4fe1\u606f\u3002\n\n\u5b9a\u4e49 `dep` \u662f\u6811\u7684\u6df1\u5ea6\u3002\n\n\u9664\u4e86\u8fd9\u4e00\u6761\u8def\u5f84\u7684\u4fe1\u606f\u90fd\u4e0d\u7ef4\u62a4\u3002\n\n\u8fd9\u4e00\u4e2a\u662f\u5f88\u5bb9\u6613\u505a\u5230\u7684\uff0c\u6211\u4eec\u8fdb\u5165\u8fd9\u4e00\u5b50\u6811\u7684\u65f6\u5019\uff0c\u628a\u5b83\u52a0\u4e0a\uff0c\u79bb\u5f00\u8fd9\u4e00\u5b50\u6811\u7684\u65f6\u5019\uff0c\u628a\u5b83\u51cf\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u4e3a\u4e86\u6c42\u89e3\u6700\u5927\u516c\u56e0\u6570\uff0c\u6211\u4eec\u5c06\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u8fd9\u6837\u662f\u4e0d\u4f1a\u8d85\u65f6\u7684\u3002\n\n\u5047\u8bbe\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u7684\u8d28\u56e0\u6570\u6709 $v_1, v_2, \\cdots, v_m$ \u8fd9\u4e00\u4e9b\u8d28\u56e0\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c06 `cnt[v1]++, cnt[v2]++, ..., cnt[vm]++`\u3002\n\n\u5982\u679c\u4e00\u65e6\u6709\u4e00\u4e2a\u6570 $x$\uff0c$cnt_x\\ge dep-1$\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u8fd9\u4e00\u4e2a\u56e0\u5b50\u53ef\u4ee5\u6210\u4e3a\u8fd9\u4e00\u6761\u94fe\u4e0a\u7684\u4e00\u4e2a\u56e0\u6570\u4e86\u3002\n\n\u663e\u7136\uff0c\u6700\u5927\u7684\u4e00\u4e2a\u6b21\u6570\u5c31\u662f\u7b54\u6848\u3002\n\n**\u4ee3\u7801\u5b9e\u73b0**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 500010;\nint a[N];\nint head[N], to[N], nxt[N], E;\nint ret[N], cnt[N];\n\nvoid add(int a, int b) // \u52a0\u8fb9\u51fd\u6570\uff0c\u4f7f\u7528\u90bb\u63a5\u8868\u5b58\u50a8\u7b54\u6848\n{\n    to[E] = b;\n    nxt[E] = head[a];\n    head[a] = E ++;\n}\n\nvoid dfs(int u, int f, int dep, int pre) // \u6df1\u641c\u6c42\u7b54\u6848\u51fd\u6570\n{\n    int mx = -1;\n    for (int i = 1; i * i <= a[u]; i ++) // \u5206\u89e3\u8d28\u56e0\u6570\n        if (a[u] % i == 0)\n        {\n            if (++ cnt[i] >= dep - 1)\n            {\n                ret[u] = max(ret[u], i);\n                if (cnt[i] == dep)\n                    mx = max(mx, i);\n            }\n            if (i != a[u] / i && ++ cnt[a[u] / i] >= dep - 1)\n            {\n                ret[u] = max(ret[u], a[u] / i);\n                if (cnt[a[u] / i] == dep)\n                    mx = max(mx, a[u] / i);\n            }\n        }\n    for (int v = head[u]; ~v; v = nxt[v]) // \u90bb\u63a5\u8868\u679a\u4e3e\n    {\n        int q = to[v];\n        if (q != f)\n        {\n            ret[q] = max(ret[q], mx);\n            dfs(q, u, dep + 1, ret[u]);\n        }\n    }\n    for (int i = 1; i * i <= a[u]; i ++)\n        if (a[u] % i == 0)\n        {\n            -- cnt[i];\n            if (i != a[u] / i)\n                -- cnt[a[u] / i];\n        }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    memset(head, -1, sizeof head);\n    for (int i = 1; i <= n; i ++)\n        scanf (\"%d\", &a[i]);\n    for (int i = 1; i < n; i ++)\n    {\n        int x, y;\n        scanf (\"%d%d\", &x, &y);\n        add(x, y);\n        add(y, x);\n    }\n    dfs(1, 0, 1, a[1]);\n    for (int i = 1; i <= n; i ++)\n        printf (\"%d%c\", ret[i], \" \\n\"[i == n]);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1635644268,
        "uid": 378467,
        "name": "willem248",
        "ccfLevel": 5,
        "title": "CF842C"
    },
    {
        "content": "\u8bf4\u4e00\u4e2a\u7279\u522b\u7279\u522b\u7279\u522b\u66b4\u529b\u7684\u601d\u8def\n\n1.\u5148\u5c06\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u56e0\u6570\u5206\u89e3\uff08\u4e0d\u662f\u8d28\u56e0\u6570\n\n2.\u7136\u540e\u5982\u679c\u4e00\u6761\u94fe\u4e0a\u7684\u67d0\u4e2a\u56e0\u6570\u7684\u4e2a\u6570==dep-1\u7684\u8bdd\uff0c\u5c31\u662f\u8bf4\u8fd9\u4e2a\u6570\u662f\u8fd9\u6761\u94fe\u4e0a\u6240\u6709\uff08\u8282\u70b9-1\uff09\u4e2a\u6570\u7684\u4e00\u4e2a\u56e0\u6570\uff0c\u53ef\u4ee5\u66f4\u65b0\u8fd9\u4e2a\u70b9\u7b54\u6848\uff08\u56e0\u4e3a\u672c\u9898\u53ef\u4ee5\u5220\u4e00\u4e2a\u70b9\uff09\u3002\u5982\u679c==dep\u7684\u8bdd\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u6bcf\u4e00\u4e2a\u6570\u7684\u4e00\u4e2a\u56e0\u6570\uff0c\u53ef\u4ee5\u66f4\u65b0\u6700\u5927\u503c\u3002\u8fd9\u6837\u4ece\u4e0b\u5f80\u4e0a\u8d70\uff0c\u5c31\u80fd\u5f97\u51fa\u6bcf\u4e00\u4e2a\u6570\u7684\u7b54\u6848\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+33;\ninline int read()\n{\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n\twhile(isdigit(c)){x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n\treturn x*f;\n}\nint n;\nvector<int>v[N];\nstruct  edge\n{\n\tint nxt,to;\n}e[N<<1];\nint head[N],E;\nint cnt[N],a[N],ans[N];//cnt\u7edf\u8ba1\u76ee\u524d\u8fd9\u6761\u94fe\u4e0a\u6bcf\u4e2a\u56e0\u6570\u51fa\u73b0\u6b21\u6570 ans[i]\u8868\u793ai\u8282\u70b9\u7b54\u6848\ninline void init()\n{\n\tE=0;\n\tmemset(head,-1,sizeof(head));\n}\ninline void add_edge(int u,int v)\n{\n\te[++E].to=v;\n\te[E].nxt=head[u];\n\thead[u]=E;\n}\ninline void dfs(int u,int f,int dep)\n{\n\tint mx=0;\n\tfor(int i=0;i<v[u].size();i++)\n\t{\n\t\t++cnt[v[u][i]];//\u7edf\u8ba1\u56e0\u6570\n\t\tint tmp=cnt[v[u][i]];\n\t\tif(tmp>=dep-1)//\u66f4\u65b0\u6bcf\u4e2a\u70b9\u7684\u6700\u5927\u503c\n\t\t{\n\t\t\tans[u]=max(ans[u],v[u][i]);\n\t\t\tif(tmp==dep) mx=max(mx,v[u][i]);\n\t\t}\n\t}\n\tfor(int i=head[u];i!=-1;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v!=f)\n\t\t{\n\t\t\tans[v]=max(ans[v],mx);\n\t\t\tdfs(v,u,dep+1);\n\t\t}\n\t}\n\tfor(int i=0;i<v[u].size();i++)\n\t{\n\t\t--cnt[v[u][i]];\n\t}\n}\n\nint main()\n{\n\tinit();\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tfor(int j=1;j*j<=a[i];j++)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tv[i].push_back(j);\n\t\t\t\tif(j!=a[i]/j)v[i].push_back(a[i]/j); //\u56e0\u6570\u5206\u89e3\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tadd_edge(x,y),add_edge(y,x);\n\t}\n\tdfs(1,0,1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcout<<ans[i]<<\" \";\n\t}\n}\n```\n",
        "postTime": 1590941996,
        "uid": 115779,
        "name": "\u6781\u5bd2\u795e\u51b0",
        "ccfLevel": 0,
        "title": "CF842C Ilya And The Tree"
    },
    {
        "content": "##  $CodeForces$ $CF842C$ \n#  $Ilya$ $And$ $The$ $Tree$ \n\n\n####  $2019.11.5$ \n####  $NanyaOIer$ $:$ $y2j$\n### $Time$ $Limit$ $:$ $2.00s$  \n### $Memory$ $Limit$ $:$ $256MB$\n## $Background$\n\n$CodeForces$ \u8bc4\u5206 \uff1a $2000$\n\n## $Simplified$ $Description$\n\n\u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6839\u8282\u70b9\u4e3a $1$ \u3002\u6bcf\u4e2a\u70b9\u90fd\u5b58\u5728\u4e00\u4e2a\u70b9\u6743 $w_i$ \uff0c\u6839\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u70b9\u6743\uff08\u5305\u542b\u6839\u8282\u70b9\u548c\u8be5\u8282\u70b9\uff09\u7684 $gcd$ \u503c\u4e3a\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u3002  \n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u5220\u9664\u6839\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u81f3\u591a\u4e00\u4e2a\u8282\u70b9\u6765\u4f7f\u5f97\u7b54\u6848\u6700\u5927\u3002\u6c42\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\uff08\u6700\u5927\u503c\uff09\u3002\n\n## $Input$\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n$ \uff0c\u8868\u793a\u6709 $n$ \u4e2a\u8282\u70b9\u3002  \n\u7b2c\u4e8c\u884c $n$ \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743 $w_i$ \u3002  \n\u968f\u540e $n - 1$ \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 $x,$ $y$ \uff0c\u8868\u793a $x$ \u4e0e $y$ \u4e4b\u95f4\u6709\u4e00\u6761\u8fde\u8fb9\u3002\n\n## $Output$\n\n\u4e00\u884c $n$ \u4e2a\u6574\u6570\uff0c\u4e3a\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\uff08\u8be6\u89c1\u9898\u76ee\u63cf\u8ff0\uff09\u3002\n\n## $Sample1$ $Input$\n\n```\n2\n6 2\n1 2\n```\n\n## $Sample1$ $Output$\n\n```\n6 6\n```\n\n## $Sample1$ $Explaination$\n\n\u5bf9\u4e8e\u8282\u70b9 $1$ \uff1a  \n$1$ \u53f7\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e3a $1$ \uff0c\u82e5\u5220\u53bb $1$ \u7b54\u6848\u4e3a $0$ \uff0c\u82e5\u4e0d\u5220\u53bb\u5219\u7b54\u6848\u4e3a $6$ \uff0c\u6545\u8282\u70b9 $1$ \u7684\u7b54\u6848\u4e3a $max$ $($ $0,$ $6$ $)$ $=$ $6$ \u3002\n\n\u5bf9\u4e8e\u8282\u70b9 $2$ \uff1a\n$2$ \u53f7\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e3a $1 -> 2$ \uff0c\u82e5\u5220\u53bb $1$ \u7b54\u6848\u4e3a $2$ \uff0c\u82e5\u5220\u53bb $2$ \u7b54\u6848\u4e3a $6$ \uff0c\u82e5\u4e0d\u5220\u53bb\u5219\u7b54\u6848\u4e3a $gcd$ $($ $6,$ $2$ $)$ $=$ $2$ \uff0c\u6545\u8282\u70b9 $2$ \u7684\u7b54\u6848\u4e3a $max$&nbsp;${$ &nbsp;$2,$&nbsp;$2,$&nbsp;$6$&nbsp;$}$&nbsp;$=$&nbsp;$6$ \u3002\n\n\u6545\u8f93\u51fa\u4e3a ```6 6``` \u3002\n\n## $Sample2$ $Input$\n\n```\n3\n6 2 3\n1 2\n1 3\n```\n\n## $Sample2$ $Output$\n\n```\n6 6 6\n```\n\n## $Sample2$ $Explaination$\n\n\u5bf9\u4e8e\u8282\u70b9 $1$ \uff1a  \n$1$ \u53f7\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e3a $1$ \uff0c\u82e5\u5220\u53bb $1$ \u7b54\u6848\u4e3a $0$ \uff0c\u82e5\u4e0d\u5220\u53bb\u5219\u7b54\u6848\u4e3a $6$ \uff0c\u6545\u8282\u70b9 $1$ \u7684\u7b54\u6848\u4e3a $max$ $($ $0,$ $6$ $)$ $=$ $6$ \u3002\n\n\u5bf9\u4e8e\u8282\u70b9 $2$ \uff1a\n$2$ \u53f7\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e3a $1 -> 2$ \uff0c\u82e5\u5220\u53bb $1$ \u7b54\u6848\u4e3a $2$ \uff0c\u82e5\u5220\u53bb $2$ \u7b54\u6848\u4e3a $6$ \uff0c\u82e5\u4e0d\u5220\u53bb\u5219\u7b54\u6848\u4e3a $gcd$ $($ $6,$ $2$ $)$ $=$ $2$ \uff0c\u6545\u8282\u70b9 $2$ \u7684\u7b54\u6848\u4e3a $max$ ${$ $2,$ $2,$ $6$ $}$ $=$ $6$ \u3002\n\n\u5bf9\u4e8e\u8282\u70b9 $3$ \uff1a  \n$3$ \u53f7\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e3a $1 -> 3$ \uff0c\u82e5\u5220\u53bb $1$ \u7b54\u6848\u4e3a $3$ \uff0c\u82e5\u5220\u53bb $2$ \u7b54\u6848\u4e3a $6$ \uff0c\u82e5\u4e0d\u5220\u53bb\u5219\u7b54\u6848\u4e3a $gcd$ $($ $6,$ $3$ $)$ $=$ $3$ \uff0c\u6545\u8282\u70b9 $3$ \u7684\u7b54\u6848\u4e3a $max$ ${$ $3,$ $3,$ $6$ $}$ $=$ $6$ \u3002\n\n\u6545\u8f93\u51fa\u4e3a ```6 6 6``` \u3002\n\n## $Sample3$ $Input$\n\n```\n1\n10\n```\n\n## $Sample3$ $Output$\n\n```\n10\n```\n\n## $Sample3$ $Explaination$\n\n\u5bf9\u4e8e\u8282\u70b9 $1$ \uff1a  \n$1$ \u53f7\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e3a $1$ \uff0c\u82e5\u5220\u53bb $1$ \u7b54\u6848\u4e3a $0$ \uff0c\u82e5\u4e0d\u5220\u53bb\u5219\u7b54\u6848\u4e3a $10$ \uff0c\u6545\u8282\u70b9 $1$ \u7684\u7b54\u6848\u4e3a $max$ $($ $0,$ $10$ $)$ $=$ $10$ \u3002\n\n## $Data$ $Constraint$\n\n$1\u2264n\u22642 \u00d7 10^5$ , $1\u2264w_i\u22642\u00d710^5$\u3002\n\n\u6570\u636e\u4fdd\u8bc1\u6240\u6709\u8282\u70b9\u5747\u4e0e\u6839\u8282\u70b9\u6709\u4e14\u53ea\u6709\u4e00\u6761\u8def\u5f84\u3002\n\n## $Solution$\n\n\u601d\u8def\uff1a  \n\n\u770b\u5230 $gcd$ \uff0c\u4e0d\u7ba1\u6709\u6ca1\u6709\u7528\uff0c\u6253\u4e0a\u518d\u8bf4\u3002  \n\u7136\u540e ```dfs``` \u904d\u5386\u6bcf\u4e00\u4e2a\u8282\u70b9\u3002  \n\u5728\u6c42\u6bcf\u4e2a\u70b9\u7b54\u6848\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6709\u4e24\u79cd\u51b3\u7b56\uff1a  \n> 1.\u8def\u5f84\u4e0d\u66f4\u6539\u3002  \n> 2.\u8def\u5f84\u4e0a\u5220\u9664\u67d0\u4e2a\u70b9\u3002\n\n\u7528\u4e00\u4e2a ```f[N]``` \u6570\u7ec4\u6765\u5b58\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u3002\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a ```f[N][2]``` \uff08 ```f[i][0]``` \u8868\u793a\u8def\u5f84\u4e0d\u4fee\u6539\uff0c```f[i][1]``` \u8868\u793a\u8def\u5f84\u4fee\u6539 \uff09\u7684\u6570\u7ec4\u6765\u5b58\uff0c\u53ea\u662f\u8f93\u51fa\u7684\u65f6\u5019\u9700\u8981\u8f93\u51fa ```max ( f[i][0], f[i][1] );```\u3002  \n\u7136\u540e\u7528\u4e00\u4e2a ```vis[N][0][]``` \u7684 ```bool``` \u578b\u5b58\u4e0b\u6bcf\u79cd\u60c5\u51b5\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u56e0\u4e3a\u7b2c\u4e09\u7ef4\u7684\u6570\u53ef\u80fd\u4f1a\u5f88\u5927\uff0c\u6216\u8005\u8bf4\u4e09\u7ef4\u6570\u7ec4\u5f00\u4e0d\u4e0b\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 ```STL``` \uff1a```map < int, bool > vis[N][2] ```\u3002  \n\u7136\u540e\u4ece\u6839\u8282\u70b9 ```dfs``` \u3002  \n\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684 ```vis[i][0][cur]``` \u4e3a $true$ \uff0c\u90a3\u4e48\u904d\u5386\u5230\u5b83\u7684\u513f\u5b50\u7684\u65f6\u5019\u65e2\u53ef\u4ee5\u7ecf\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7ecf\u8fc7\u76f4\u63a5\u5f80\u4e0b\u8d70\u3002\uff08\\* *```cur``` \u8868\u793a\u8fd9\u79cd\u60c5\u51b5\u7684\u6700\u5927\u503c* \uff09\u3002  \n\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684 ```vis[i][1][cur]``` \u4e3a $true$ \uff0c\u90a3\u4e48\u904d\u5386\u5230\u5b83\u7684\u513f\u5b50\u7684\u65f6\u5019\u5c31\u53ea\u80fd\u7ecf\u8fc7\u4e86\u3002  \n\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u70b9\uff0c\u4e0e\u7236\u4eb2\u8282\u70b9\u7684 ```cur``` \u503c\u53d6 $gcd$\u3002  \n\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5 $A$ \u4e86\u3002\n\n## $std$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//<----------------------\u2193\u4ee5\u4e0b\u4e3a\u5feb\u8bfb\u5feb\u5199\u7684\u5c01\u88c5\u2193---------------------->\nnamespace speed {\n\t\n\ttemplate < typename T > inline T read() {\n\t\tregister int f = 1; register T sum = 0; register char ch = getchar();\n\t\twhile ( !isdigit(ch) ) { if ( !( ch ^ '-' ) ) f = -1; ch = getchar(); }\n\t\twhile ( isdigit(ch) ) { sum = (sum<<1) + (sum<<3) + (ch^48); ch = getchar(); }\n\t\treturn f * sum;\n\t}\n\t\n\ttemplate < typename T > inline void write ( register T x ) {\n\t\tif ( x < 0 ) { x = -x; putchar ( '-' );\t}\n\t\tif ( x > 9 ) { write ( x / 10 ); }\n\t\tputchar ( x % 10 + '0' );\n\t}\n\t\n}\n\nusing namespace speed;\n//<----------------------\u2191\u4ee5\u4e0a\u4e3a\u5feb\u8bfb\u5feb\u5199\u7684\u5c01\u88c5\u2191---------------------->\nconst int N = 2e5 + 5;\n\nint n;\nint w[N], f[N];\n\nvector < int > edge[N]; //\u7528vector\u5efa\u56fe\u5efa\u6811\u53c8\u597d\u5199\u53c8\u597d\u770b\u3002\u5982\u679c\u6709\u8fb9\u6743\u7684\u8bdd\uff0c\u5e94\u8be5\u4f7f\u7528 vector < pair < int, int > > edge[N]; pair\u7684first\u5b58\u70b9\uff0cpair\u7684second\u5b58\u8fb9\u6743\nmap < int, bool > vis[N][2]; //\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u8fdb\u884c\u8bb0\u5fc6\u5316\uff0cvis[i][0] \u4ee3\u8868\u8fd8\u672a\u4fee\u6539\uff0cvis[i][1] \u4ee3\u8868\u5df2\u7ecf\u4fee\u6539\u3002\n//<----------------------\u2193gcd\u2193---------------------->\ntemplate < class T > inline T gcd ( register T x, register T y ) {\n\treturn y ? gcd ( y, x % y ) : x;\n}\n//<----------------------\u2191gcd\u2191---------------------->\n//\u4ee5\u4e0b\u4e3adfs: u \u8868\u793a\u76ee\u524d\u904d\u5386\u5230\u7684\u8282\u70b9\uff0c fa \u8868\u793a u \u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff0c opt \u8868\u793a\u4ece\u6839\u8282\u70b9\u8d70\u5230 u \u8282\u70b9\u65f6\u6709\u6ca1\u6709\u8fdb\u884c\u8fc7\u4fee\u6539\uff0c cur \u8868\u793a\u7684\u662f\u5f53\u524d\u72b6\u6001\u4e0b\u4ece\u6839\u8282\u70b9\u5230\u7236\u4eb2\u8282\u70b9\u7684 gcd \u7684\u6700\u5927\u503c\u3002\ninline void dfs ( register int u, register int fa, register int opt, register int cur ) {\n\tif ( vis[u][opt][cur] ) {\n\t\treturn ;\n\t} vis[u][opt][cur] = true;\n\tregister int tmp = gcd < int > ( cur, w[u] );\n\tf[u] = max ( f[u], tmp );\n\tif ( opt == 0 ) {\n\t\tf[u] = max ( f[u], cur );\n\t} register int size = edge[u].size();\n\tfor ( register int i = 0 ; i < size ; i ++ ) {\n\t\tregister int v = edge[u][i];\n\t\tif ( v == fa ) {\n\t\t\tcontinue ;\n\t\t} dfs ( v, u, opt, tmp );\n\t\tif ( opt == 0 ) {\n\t\t\tdfs ( v, u, 1, cur );\n\t\t}\n\t}\n}\n\nsigned main() {\n\tn = read < int > ();\n\tfor ( register int i = 1 ; i <= n ; i ++ ) {\n\t\tw[i] = read < int > ();\n\t} for ( register int i = 1 ; i < n ; i ++ ) {\n\t\tregister int u = read < int > (), v = read < int > ();\n\t\tedge[u].push_back ( v );\n\t\tedge[v].push_back ( u );\n\t} dfs ( 1, 0, 0, 0 );\n\tfor ( register int i = 1 ; i <= n ; i ++ ) {\n\t\twrite < int > ( f[i] );\n\t\tputchar ( ' ' );\n\t} putchar ( '\\n' );\n\treturn 0;\n}\n\n```\n\n# $End$\n# $NanyaOI$ \u8363\u8a89\u51fa\u54c1",
        "postTime": 1573043877,
        "uid": 143835,
        "name": "\u4ea4\u8b66",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF842C \u3010Ilya And The Tree\u3011"
    }
]