[
    {
        "content": "## \u601d\u8def\n\n\u9996\u5148\u770b\u5230\u76f8\u7b49\uff0c\u6211\u4eec\u5c31\u80fd\u60f3\u5230\u5404\u79cd $1$ \u548c $-1$ \u76f8\u4e92\u62b5\u6d88\u53d8\u6210 $0$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4ee4 $sum_x$ \u8868\u793a $x$ \u4e3a\u9876\u70b9\u7684\u5b50\u6811\u548c\u3002\u90a3\u4e48\u539f\u6765\u7684\u8981\u6c42\u5176\u5b9e\u5c31\u662f\uff1a\n\n$$\nsum_{son_1}=sum_{son_2}=\\cdots=sum_{son_k}=sum_1-sum_x\n$$\n\n$son_1,son_2,\\cdots,son_k$ \u5206\u522b\u8868\u793a $x$ \u7684 $k$ \u4e2a\u513f\u5b50\u3002\u5f53\u7136\uff0c$x\\neq 1$\u3002\n\n\u4ee4 $x$ \u7684\u6743\u503c\u4e3a $a_x$\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\uff1a\n\n$$\n\\ a_x=sum_x-\\sum\\limits_{i=1}^{k}sum_{son_i}\n$$\n\n\u63a5\u4e0b\u6765\u4ee4 $x$ \u7684\u5ea6\u6570\u4e3a $p$\uff0c\u90a3\u4e48\u5b83\u513f\u5b50\u7684\u4e2a\u6570 $k$ \u5176\u5b9e\u53ef\u4ee5\u5316\u6389\u4e86\uff0c\u5316\u6210 $k=p-1$\uff0c\u800c\u8ba1\u7b97 $a_x$ \u7684\u67ff\u5b50\u4e5f\u53ef\u4ee5\u968f\u4e4b\u53d8\u5316\u4e3a\uff1a\n$$\na_x=sum_x-(p-1)(sum_1-sum_x)=sum_1-p(sum_1-sum_x)\n$$\n\n\u5230\u8fd9\u91cc\u6211\u4eec\u7684\u57fa\u7840\u90e8\u5206\u5c31\u641e\u5b8c\u4e86\uff01\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u7528\u6211\u4eec\u6700\u5f00\u59cb\u7684\u60f3\u6cd5\u6765\u5904\u7406\u8fd9\u4e2a\u67ff\u5b50\u3002\n\n> \u9996\u5148\u770b\u5230\u76f8\u7b49\uff0c\u6211\u4eec\u5c31\u80fd\u60f3\u5230\u5404\u79cd $1$ \u548c $-1$ \u76f8\u4e92\u62b5\u6d88\u53d8\u6210 $0$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4ee4 $sum_1=0$\u3002\n\n\u56de\u4ee3\uff0c\u5206\u522b\u56de\u4ee3\u5230\u8f6c\u5316 $sum_{son}$ \u7684\u90a3\u4e2a\u5f0f\u5b50\u548c\u521a\u521a\u8f6c\u5316 $a_x$ \u7684\u90a3\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u4e24\u4e2a\u67ff\u5b50\uff1a\n\n$$\n\\begin{cases}\na_x=0-p(0-sum_x)=p\\cdot sum_x\\\\\n\\forall i\\in[1,k],sum_{son_i}=0-sum_x=-sum_x\n\\end{cases}\n$$\n\n\u6211\u4eec\u6765\u7528\u7b2c\u4e8c\u4e2a\u67ff\u5b50\uff0c\u4ee4 $x$ \u7684\u6df1\u5ea6\u4e3a $d_x$ \u5e76\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4f7f $sum_x=(-1)^{d_x}$\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u67ff\u5b50\u7684\u8981\u6c42\u4e86\u3002\u4e4b\u6240\u4ee5\u6211\u4eec\u8fd9\u6837\u8f6c\u5316 $sum_x$\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u548c\u6df1\u5ea6\u6302\u94a9\uff0c\u4ee5\u4f7f\u5f97\u5728 $x=1$ \u7684\u65f6\u5019\u4f9d\u7136\u6210\u7acb\u3002\n\n\u90a3\u4e48\u7ee7\u7eed\u56de\u4ee3\uff0c\u53ef\u4ee5\u5f97\u5230 $a_x=p\\cdot (-1)^{d_x}$\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u7ed3\u675f\u4e86\u3002\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u6784\u9020\u51fa\u6765\u7684\u70b9\u6743\u5728\u83ca\u82b1\u4e0a\u65f6\uff0c\u6839\u8282\u70b9\u7684\u70b9\u6743\u53ef\u4ee5\u5728\u6ee1\u8db3\u8981\u6c42\u7684 $-99999\\leqslant a_1\\leqslant 99999$ \u4e4b\u95f4\uff0c\u8fd9\u4e2a\u5c31\u770b $d_1$ \u7684\u53d6\u503c\u662f $1$ \u8fd8\u662f $0$ \u4e86\u3002\n\n\u800c\u7531\u4e8e\u6811\u4e0a\u4efb\u4f55\u4e00\u70b9 $p\\geqslant1$\uff0c\u5e76\u4e14 $\\forall i\\in \\mathbb{R}, {-1}^i>0$\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6784\u9020\u65b9\u6848\u662f\u5bf9\u7684\u3002\n\n## \u4ee3\u7801\n\n```\n//Author:Zealous_YH\n#include <bits/stdc++.h>\n#define ET return 0\n#define pb push_back\n#define vr vector\n#define pt puts(\"\")\n#define fr1(i,a,b) for(int i=a;i<=b;i++)\n#define fr2(i,a,b) for(int i=a;i>=b;i--)\n#define fv(i,p) for(int i=0;i<p.size();i++)\nusing namespace std;\nconst int N=1e5+10;\nint T;\nint n;\nint a[N];\nvr <int> p[N];\nvoid dfs(int x,int f,int dep){\n\ta[x]=p[x].size()*pow(-1,dep);\n\tfv(i,p[x]){\n\t\tif(p[x][i]!=f){\n\t\t\tdfs(p[x][i],x,dep+1);\n\t\t}\n\t}\n}\nvoid solve(){\n\tcin>>n;\n\tfr1(i,1,n){\n\t\tp[i].erase(p[i].begin(),p[i].end());\n\t}\n\tfr1(i,1,n-1){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tp[x].pb(y);\n\t\tp[y].pb(x);\n\t}\n\tdfs(1,1,0);\n\tfr1(i,1,n){\n\t\tcout<<a[i]<<\" \";\n\t}\n\tpt;\n}\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\tsolve();\n\t}\n\tET;\n}\n//Teens-in-Times\n//HJL 2004.06.15\n//Everything For Ji.\n//Everything For Lin.\n//Everything For You.\n```\n\n[AC \u8bb0\u5f55](https://www.luogu.com.cn/record/73557664)",
        "postTime": 1649490803,
        "uid": 399150,
        "name": "Shunpower",
        "ccfLevel": 7,
        "title": "CF1656E Equal Tree Sums \u9898\u89e3"
    },
    {
        "content": "### Preface\n\n$\\text{E<D}$ \u5b9e\u9524\uff0c$4$ \u5206\u949f\u5199\u6389 $\\text{E}$\u3002\n\n### Analysis\n\n\u65e0\u5411\u65e0\u6839\u6811\uff1f\u9996\u5148\u60f3\u5230**\u9ed1\u767d\u95f4\u9694\u67d3\u8272**\u3002\n\n\u8bbe $deg_i$ \u8868\u793a\u8282\u70b9 $i$ \u5728\u6811\u4e0a\u7684\u5ea6\u3002\n\n**\u6784\u9020\uff1a** \u5bf9\u4e8e\u8282\u70b9 $x$\uff0c\u82e5\u4e3a\u9ed1\u8282\u70b9\uff0c\u503c\u8bbe\u4e3a $deg_x$\uff0c\u5426\u5219\u8bbe\u4e3a $-deg_x$\u3002\n\n\u663e\u7136\u4efb\u610f\u4e00\u68f5\u6811\u8fd9\u6837\u6743\u503c\u548c\u4e3a $0$\u3002\n\n\u8003\u8651\u5220\u6389\u4e00\u4e2a\u8282\u70b9\u540e\u5f62\u6210\u591a\u4e2a\u8fde\u901a\u5757\u3002\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u6743\u503c\u548c\u4e00\u5b9a\u76f8\u540c\uff0c\u4e14\u4e3a $\\pm1$\u3002\uff08\u8bc1\u660e\u7559\u7ed9\u8bfb\u8005 doge\uff09\n\n### Code\n\n[Link](https://codeforces.com/contest/1656/submission/150891549)",
        "postTime": 1648216809,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "CF1656E Equal Tree Sums"
    },
    {
        "content": "\u5199\u4e8e 2022 \u5e74 8 \u6708 27 \u65e5\n\n\u4fee\u6539\u4e8e 2022 \u5e74 12 \u6708 26 \u65e5\n* \u8865\u5145\u4e86\u4e00\u4e9b\u89e3\u91ca\uff0c\u5e76\u4e14\u7b80\u5316\u4e86\u4ee3\u7801\n\n***\n\n### \u8bfb\u524d\u987b\u77e5\n* \u849f\u84bb\u6c34\u5e73\u4e0d\u8db3\uff0c**\u8bf7\u5404\u4f4d\u5927\u4f6c\u52ff\u55b7**\u3002\n\n***\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1656E)\n\n\u849f\u84bb\u6bd5\u7adf\u662f\u849f\u84bb\uff0c\u60f3\u5230\u4e00\u79cd\u65b9\u6cd5\u5c31\u4e0d\u60f3\u592a\u597d\u4e86\uff0c\u6240\u4ee5\u548c\u6807\u51c6\u7b54\u6848\u5dee\u4e86\u592a\u591a\u3002~~\u53cd\u6b63\u5bf9\u4e86\u5c31\u884c~~\n\n\u5982\u679c\u60f3\u5feb\u901f\u8bfb\u5b8c\u6574\u7bc7\u9898\u89e3\uff0c\u53ef\u76f4\u63a5\u8df3\u5230**\u6c42\u89e3\u65b9\u6cd5**\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e0b\u56fe\u5df2\u7ecf\u586b\u597d\u4e00\u90e8\u5206\u7684\u6811\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u6c42\u89e3\uff08**\u6ce8\u610f\uff1a\u5708\u91cc\u586b\u7684\u662f\u5b50\u6811\u6743\u503c\u548c**\uff09\uff1a\n\n![\u90a3\u68f5\u6811](https://cdn.luogu.com.cn/upload/image_hosting/8kqs2ks7.png)\n\n#### \u6c42\u89e3\u65b9\u6cd5\uff1a\n* \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5df2\u77e5\u5916\u9762\u90e8\u5206\u6743\u503c\u603b\u548c\uff0c\u5219\u5c06\u8be5\u8282\u70b9\u6bcf\u4e2a\u5b50\u6811\u6743\u503c\u603b\u548c\u90fd\u8bbe\u4e3a\u5916\u9762\u90e8\u5206\u6743\u503c\u603b\u548c\uff0c\u53ef\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u9519\u3002\n\n\u90a3\u4e48\uff0c\u6700\u540e\u586b\u597d\u7684\u6811\u662f\u600e\u6837\u5462\uff1f\n\n![\u5b8c\u6210](https://cdn.luogu.com.cn/upload/image_hosting/3ckpz2a2.png)\n\n**\u6ce8\u610f\uff1a\u5708\u91cc\u586b\u7684\u4ecd\u7136\u662f\u5b50\u6811\u6743\u503c\u548c**\n\n\u6700\u540e\uff0c\u5c31\u662f\u5dee\u5206\u4e00\u4e0b\uff0c\u5c06\u6bcf\u4e2a\u70b9\u6743\u503c\u90fd\u6c42\u51fa\u6765\u3002\n\n#### \u6700\u5927\u7684\u95ee\u9898\uff1a\u5982\u4f55\u8bbe\u521d\u503c\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5c06\u5168\u6811\u6743\u503c\u603b\u548c\u8bbe\u4e3a $0$ \uff0c\u5c06\u6839\u8282\u70b9\u4e0b\u6bcf\u68f5\u5b50\u6811\u6743\u503c\u603b\u548c\u8bbe\u4e3a $1$ \uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0 $0$ \u3002\uff08\u5982\u4f55\u8bc1\u660e\uff1f\u5c31\u662f\u5dee\u5206\u540e\u975e $1$ \u7ed3\u70b9\u6743\u503c\u7edd\u5bf9\u503c\u4e3a $1 + \\text{\\small \u5b50\u7ed3\u70b9\u6570\u91cf}$\uff09\n\n***\n\n### \u7b80\u5355\u65b9\u6cd5\u6574\u7406\uff1a\uff08\u56e0\u4e3a\u624b\u61d2TLE\u4e86\u597d\u591a\u53d1\uff09\n\n1. \u8bbe $sum_i$ \u4e3a\u4ee5\u8282\u70b9 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u6743\u503c\u548c\uff1b\n1. \u8d4b\u521d\u503c\uff0c $sum_1$ \u4e3a $0$ \uff0c$sum_{i \\in \\textsf{\u4e0e1\u53f7\u8282\u70b9\u76f8\u90bb\u7684\u8282\u70b9\u96c6}}$  \u4e3a $1$ \uff1b\n1. \u6df1\u641c\u4e00\u904d\uff0c\u6c42\u89e3\u51fa\u5269\u4e0b\u7684 $sum_i$ \uff1b\n1. \u8fdb\u884c\u5dee\u5206\uff1b\n1. \u8f93\u51fa\u7ed3\u679c\u3002\n\n\u6700\u540e\uff0c\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nvector<int> g[100111];\nint t, n, sum[100111], val[100111], orig;\t//orig\u8868\u793a\u5b50\u6811\u521d\u503c\nvoid DFS(int x, int f) {\n\tif(x != 1) {\t//\u533a\u5206 x \uff0c\u4ee5\u514d\u4e71\u5957\n\t\tfor(auto y : g[x])\n\t\t\tif(y != f) {\n\t\t\t\tsum[y] = sum[1] - sum[x],\n\t\t\t\tDFS(y, x);\n\t\t\t} else\n\t\t\t\t;\n\t\tval[x] = sum[x] - (int(g[x].size()) - 1) * (sum[1] - sum[x]);\t//\u5dee\u5206\u4e00\u8d77\u6c42\n\t} else {\t//\u540c\u7406\n\t\tfor(auto y : g[x])\n\t\t\tsum[y] = orig, \n\t\t\tDFS(y, x);\n\t\tval[x] = sum[x] - int(g[x].size()) * orig;\n\t}\n}\nint main() {\n\tcin >> t;\n\twhile(t--) {\n\t\tcin >> n;\n\t\tfor(int i = 1; i <= n; i++)\n\t\t\tg[i].clear(), \n\t\t\tsum[i] = 0, \n\t\t\tval[i] = 0;\t//\u6e05\u7a7a\n\t\tfor(int i = 1, u, v; i < n; i++)\n\t\t\tscanf(\"%d%d\", &u, &v), \n\t\t\tg[u].emplace_back(v),\n\t\t\tg[v].emplace_back(u);\n\t\tsum[1] = 0,\n\t\torig = 1;\n\t\tDFS(1, 0);\n\t\tfor(int i = 1; i <= n; i++)\n\t\t\tprintf(\"%d \", val[i]);\n\t\tcout << '\\n';\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1661578432,
        "uid": 490879,
        "name": "\u5f90\u5d07\u745c",
        "ccfLevel": 0,
        "title": "CF1656E \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u7ed3\u8bba\uff1a\u5c06\u6811\u9ed1\u767d\u67d3\u8272\uff08\u4e0e father \u5f02\u8272\uff09\u540e\u82e5\u4e3a\u9ed1\u8272\u5219\u70b9\u7684\u6743\u503c\u4e3a\u5ea6\u6570\u5426\u5219\u4e3a\u76f8\u53cd\u6570\uff0c\u6b64\u65f6\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u8bc1\u660e\uff1a\n\n\u9996\u5148\uff0c\u6839\u636e\u6bcf\u4e00\u6761\u8fb9\u4f1a\u540c\u65f6\u4ea7\u751f $-1$ \u548c $1$ \u7684\u8d21\u732e\uff08\u589e\u52a0\u4e86\u9ed1\u70b9\u548c\u767d\u70b9\u7684\u8bfb\u4e66\uff09\u53ef\u77e5\uff0c\u6574\u68f5\u6811\u7684\u6743\u503c\u4e3a $0$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u6ee1\u8db3\u8981\u6c42\u7684\u6761\u4ef6\u662f\u5b83\u7684\u6240\u6709\u5b50\u6811\u7684\u6743\u503c\u548c\u5747\u76f8\u7b49\uff08\u5176\u5b9e\u4e5f\u5f97\u7b97\u7236\u4eb2\u4e0a\u9762\u7684\u8fde\u901a\u5757\uff0c\u4e0d\u8fc7\u5982\u679c\u5c06\u8fd9\u4e2a\u70b9\u8bbe\u4e3a\u6839\u5219\u90a3\u4e2a\u8fde\u901a\u5757\u4e5f\u662f\u5b83\u7684\u4e00\u4e2a\u5b50\u6811\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811\uff0c\u5982\u679c $u$ \u7684\u5728\u90a3\u4e2a\u5b50\u6811\u4e2d\u7684\u513f\u5b50\u8282\u70b9\u4e0d\u4e0e $u$ \u6709\u8fb9\uff0c\u5219\u8fd9\u4e2a\u6811\u7684\u6743\u503c\u4e4b\u548c\u4e3a $0$\u3002\u56e0\u4e3a\u6bcf\u4e2a\u513f\u5b50\u8282\u70b9\u4e0e $u$ \u5f02\u8272\uff0c\u6240\u4ee5\u5b83\u4eec\u4e4b\u95f4\u540c\u8272\uff0c\u4e0e $u$ \u7684\u8fb9\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u62b5\u6d88\u4e86\u3002\u56e0\u4e3a\u5269\u4e0b\u7684\u6743\u503c\u4e4b\u548c\u4e3a $0$\uff0c\u6240\u4ee5\u6bcf\u4e00\u68f5\u5b50\u6811\u7684\u6743\u503c\u548c\u662f\u76f8\u7b49\u7684\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n;\n\nint tot=0,var[200010],nxt[200010],head[100010];\n\nvoid add(int u,int v)\n{\n\tvar[++tot]=v;\n\tnxt[tot]=head[u];\n\thead[u]=tot;\n}\n\nint in[100010];\n\nint color[100010];\n\nvoid dfs(int u,int fa)\n{\n\tcolor[u]=(!color[fa]);\n\tfor(int i=head[u]; i; i=nxt[i])\n\t{\n\t\tint v=var[i];\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t}\n}\n\nint main()\n{\n\tint t; cin>>t; while(t--)\n\t{\n\t\ttot=0;\n\t\tint u,v;\n\t\tcin>>n;\n\t\tfor(int i=1; i<=n; ++i) head[i]=in[i]=0;\n\t\tfor(int i=1; i<=n-1; ++i) cin>>u>>v,add(u,v),add(v,u),++in[u],++in[v];\n\t\tdfs(1,0);\n\t\tfor(int i=1; i<=n; ++i) cout<<(color[i]?1:-1)*in[i]<<' '; cout<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1660986102,
        "uid": 353688,
        "name": "\u738b\u7199\u6587",
        "ccfLevel": 0,
        "title": "CF1656E \u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u4e0d\u96be\n\n\u9996\u5148\u5047\u8bbe $1$ \u662f\u6839\u8282\u70b9\n\n\u6211\u770b\u5230\u8fd9\u9053\u9898\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u76f4\u63a5\u5047\u8bbe\u6574\u68f5\u6811\u6743\u503c\u4e4b\u548c\u662f\u67d0\u4e00\u4e2a\u5b9a\u503c\uff0c\u7136\u540e\u518ddfs\u9020\u6bcf\u4e00\u4e2a $a_x$ \u3002(\u5176\u5b9e\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5a\u4e86\uff0c\u4f46\u662f\u4e0d\u4f18\u96c5)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u53bb\u6389\u67d0\u4e00\u4e2a\u8282\u70b9\u4e4b\u540e\uff0c\u5b83\u6240\u6709\u7684\u513f\u5b50\u6240\u5728\u7684\u5b50\u6811\u4e4b\u548c\u90fd\u548c\u5b83\u4e0a\u9762\u90a3\u4e00\u90e8\u5206\u4e4b\u548c\u662f\u4e00\u6837\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u6709\u4e86\uff1a$sum_{x's\\ son}=sum_1-sum_x$ \u5176\u4e2d($x\\ne1$\uff0c\u4e0b\u540c)\n\n\u53c8\u56e0\u4e3a\uff1a$a_x=sum_x-\\sum sum_{x's\\ son}$\n\n\u7ed3\u5408\u4e00\u4e0b\u5c31\u6210\u4e86$a_x=sum_1-deg_x\\times(sum_1-sum_x)$\n\n\u5f53\u6211\u4eec\u4ee4 $sum_1=0$ \u65f6\uff0c\u53d1\u73b0\uff1a\n\n- $sum_{x's\\ son}=-sum_x$\n- $a_x=deg_x*sum_x$\n\n\u6211\u4eec\u518d\u4ee4 $sum_x=(-1)^{dep_x}$ \uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0 $a_x=deg_x(-1)^{dep_x}$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u5728 $x=1$ \u65f6\u4e5f\u6210\u7acb\n\n\u518d\u624b\u52a8\u6784\u9020\u51e0\u7ec4\u5c0f\u6570\u636e\u540e\u53d1\u73b0\u6784\u9020\u65b9\u6cd5\u6b63\u786e\uff0c\u5c31\u53ef\u4ee5\u4f18\u96c5\u7684\u5199\u4ee3\u7801\u4e86\uff0c\u829c\u6e56\u8d77\u98de\uff01\n\n\u6700\u540e\u732e\u4e0a\u6211\u5176\u4e11\u65e0\u6bd4\u7684\u4ee3\u7801\uff1a\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+10;\nint n,ans[N];\nvector<int>ed[N];\nvoid dfs(int x,int fa,int k){\n  ans[x]=ed[x].size()*k;\n  for(int y:ed[x])if(fa!=y)dfs(y,x,-k);\n}\nvoid solve(){\n  cin>>n;\n  for(int i=1;i<=n;i++)ed[i].clear();\n  for(int i=1,u,v;i<n;i++){\n    cin>>u>>v;\n    ed[u].emplace_back(v);\n    ed[v].emplace_back(u);\n  }\n  dfs(1,1,1);\n  for(int i=1;i<=n;i++)cout<<ans[i]<<\" \";\n  cout<<'\\n';\n}\nint main(){\n  int t;\n  cin>>t;\n  while(t--)solve();\n}\n```",
        "postTime": 1648202004,
        "uid": 34225,
        "name": "ftt2333",
        "ccfLevel": 7,
        "title": "CF1656E Equal Tree Sums"
    },
    {
        "content": "\u6ce8\u610f\u5230\u6811\u662f\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u4e0d\u59a8\u4e8c\u5206\u56fe\u67d3\u8272\u4e00\u4e0b\u3002\n\n\u65ad $x$ \u65f6\uff0c\u8003\u8651\u8ba9\u6bcf\u4e2a\u8fde\u901a\u5757\u53ea\u6709\u8fde $x$ \u8fd9\u6761\u8fb9\u7684\u8d21\u732e\u3002\n\n\u5c06\u9ed1\u767d\u70b9\u5206\u522b\u8bbe\u4e3a $deg_x, -deg_x$ \u4e0d\u96be\u53d1\u73b0\u5176\u4ed6\u8fb9\u7684\u8d21\u732e\u90fd\u6ca1\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#include <assert.h>\nusing namespace std;\ntypedef long long ll;\n#define ep emplace_back\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n#define fin freopen(\"in.in\",\"r\",stdin);\ninline int read() {\n\tint x=0, v=1,ch=getchar();\n\twhile('0'>ch||ch>'9') {\n\t\tif(ch=='-') v=0;\n\t\tch=getchar();\n\t}while('0'<=ch&&ch<='9') {\n\t\tx=(x*10)+(ch^'0');\n\t\tch=getchar();\n\t}return v?x:-x;\n}\nconst int MAX=1e5+5;\nint T,ans[MAX],n; vector<int>G[MAX];\nvoid dfs(int x,int f,int l) {\n\tif(l&1) {\n\t\tans[x]=G[x].size();\n\t}else {\n\t\tans[x]=-G[x].size();\n\t}\n\tfor(int y:G[x]) if(y!=f)dfs(y,x,l^1);\n}\nvoid clr() {\n\tfor(int i=1;i<=n;++i)vector<int>().swap(G[i]);\n}\nsigned main() {\n\tT=read();\n\twhile(T--){\n\t\tn=read();\n\t\tfor(int i=1,x,y;i<n;++i){\n\t\t\tx=read(),y=read();\n\t\t\tG[x].ep(y), G[y].ep(x);\n\t\t}\n\t\tdfs(1,0,0);\n\t\tfor(int i=1;i<=n;++i) printf(\"%d \",ans[i]); puts(\"\");\n\t\tclr();\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1667744900,
        "uid": 119062,
        "name": "Lates",
        "ccfLevel": 0,
        "title": "CF1656E"
    },
    {
        "content": "## \u601d\u8def\n\n\u4e0a\u6765\u4e00\u773c\uff0c\u5bf9\u6811\u8fdb\u884c\u9ed1\u767d\u67d3\u8272\u3002\u67d3\u8272\u4e4b\u540e\uff0c\u5bf9\u4e8e $u$\uff0c\u5982\u679c\u662f\u9ed1\u8272\uff0c\u90a3\u4e48\u6743\u503c\u5c31\u662f\u5ea6\u6570\uff1b\u5426\u5219\u5c31\u662f\u5ea6\u6570\u76f8\u53cd\u6570\u3002\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u5b83\u7684\u7236\u4eb2\u548c\u513f\u5b50\u4e00\u5b9a\u90fd\u662f\u548c\u5b83\u76f8\u53cd\u7684\u989c\u8272\u3002\u56e0\u6b64\uff0c\u5b83\u7684\u5ea6\u6570 $d$\uff0c\u5728\u6bcf\u4e2a\u7236\u4eb2\u548c\u513f\u5b50\u4e2d\u90fd\u4f1a\u6709\u4f53\u73b0\u3002\u800c $u$ \u548c\u5b83\u7684\u7236\u4eb2\u548c\u513f\u5b50\u7684\u989c\u8272\u663e\u7136\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5ea6\u6570\u5c31\u4e00\u6b63\u4e00\u8d1f\u6c42\u4e00\u4e2a\u603b\u548c\u62b5\u6d88\u4e86\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $u$\uff0c\u5b83\u7684\u5ea6\u6570\u90fd\u80fd\u62b5\u6d88\uff0c\u56e0\u6b64\uff0c\u6574\u4e2a\u6811\u7684\u6743\u503c\u548c\u5c31\u662f $0$\u3002\n\n\u7136\u540e\uff0c\u8003\u8651\u53bb\u6389 $u$ \u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u5047\u8bbe $u$ \u7684\u5ea6\u6570\u662f $d$\uff0c\u90a3\u4e48\u53bb\u6389\u4e4b\u540e\uff0c\u5b83\u7684\u7236\u4eb2\u548c\u6240\u6709\u7684\u513f\u5b50\u90fd\u4f1a\u5206\u5f00\uff0c\u7236\u4eb2\u548c\u6bcf\u4e00\u4e2a\u513f\u5b50\u6240\u5728\u7684\u8fde\u901a\u5757\uff0c\u90fd\u4f1a\u5c11 $u$ \u8fd9\u4e00\u4e2a\u5ea6\uff0c\u6240\u4ee5\u76f8\u5bf9\u503c\u662f\u4e0d\u53d8\u7684\uff0c\u8981\u4e48\u662f `-1` \u8981\u4e48\u662f `1`\uff08\u8fd9\u4e2a\u53d6\u51b3\u4e8e $u$ \u662f\u9ed1\u8272\u8fd8\u662f\u767d\u8272\uff0c\u4f46\u5e76\u4e0d\u5f71\u54cd\u7ed3\u679c\uff09\u3002\n\n\u8bc1\u6bd5\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=100005;\nint col[MAXN],d[MAXN];\nvector<int> E[MAXN];\nvoid dfs(int u,int fa){\n\tcol[u]=!col[fa];\n\tfor(int i=0;i<E[u].size();i++){\n\t\tint v=E[u][i];\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t}\n}\nint main(){\n\tint T; cin>>T;\n\twhile(T--){\n\t\tint n; cin>>n;\n\t\tfor(int i=1;i<=n;i++) E[i].clear(),col[i]=d[i]=0;\n\t\tfor(int i=1;i<n;i++){\n\t\t\tint u,v; cin>>u>>v;\n\t\t\tE[u].push_back(v);\n\t\t\tE[v].push_back(u);\n\t\t\td[u]++; d[v]++;\n\t\t}dfs(1,0);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(col[i]) cout<<d[i]<<\" \";\n\t\t\telse cout<<-d[i]<<\" \"; \n\t\t}cout<<endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1660922552,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "CF1656E \u9898\u89e3"
    },
    {
        "content": "\u6784\u9020\u9898\u3002\n\n\u8003\u8651\u5c06\u6811\u9ed1\u767d\u67d3\u8272\uff0c\u9ed1\u8272\u8282\u70b9\u8d4b\u503c\u4e3a\u5b83\u7684\u5ea6\u6570\uff0c\u767d\u8272\u8282\u70b9\u8d4b\u503c\u4e3a\u5b83\u7684\u5ea6\u6570\u7684\u76f8\u53cd\u6570\u3002\n\n\u8bc1\u660e\u4e00\u4e0b\u6b63\u786e\u6027\uff1a\u9996\u5148\u5f88\u663e\u7136\uff0c\u8fd9\u68f5\u6811\u70b9\u6743\u603b\u548c\u4e3a $0$\uff0c\u56e0\u4e3a\u4e00\u6761\u8fb9\u4f1a\u5bf9\u6574\u68f5\u6811\u7684\u6743\u503c\u589e\u52a0\u4e00\u4e2a $1$ \u548c\u4e00\u4e2a $-1$\uff0c\u603b\u548c\u4e3a $0$\u3002\n\n\u8bbe\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a $s$\uff0c\u5220\u9664\u5b83\u5bf9\u628a\u8fd9\u68f5\u6811\u53d8\u6210 $s$ \u4e2a\u8054\u901a\u5757\uff0c\u5e76\u5220\u9664 $s$ \u6761\u8fb9\u3002\u56e0\u4e3a\u53ea\u628a\u8fd9\u4e9b\u8fb9\u4e24\u7aef\u7684\u4e00\u4e2a\u8282\u70b9\u5220\u53bb\u4e86\uff0c\u800c\u53e6\u4e00\u7aef\u7684\u8282\u70b9\u6743\u503c\u6ca1\u53d8\uff0c\u6240\u4ee5\u4e00\u6761\u8fb9\u4f1a\u4f7f\u6811\u7684\u6743\u503c\u603b\u548c\u53d8\u5927/\u53d8\u5c0f $1$\u3002\u5373\u56e0\u4e3a\u5220\u53bb\u8fd9\u6761\u8fb9\u7684\u8fde\u901a\u5757\u7684\u6743\u503c\u548c\u4e3a $1$ \u6216 $-1$\u3002\u8fd9 $s$ \u4e2a\u8fde\u901a\u5757\u6743\u503c\u90fd\u4e00\u6837\uff0c\u4e3a $1$ \u6216 $-1$\uff08\u5177\u4f53\u6309\u7167\u5220\u53bb\u8282\u70b9\u6743\u503c\u7684\u6b63\u8d1f\u5224\u65ad\uff09\u3002\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nint T,n;\nconst int maxn=1e5+5;\nvector<int> cnt[maxn];\nint col[maxn];\nvoid dfs(int u,int fa)\n{\n\tcol[u]=-col[fa];\n\tfor(int i=0;i<cnt[u].size();i++)\n\t{\n\t\tif(cnt[u][i]==fa) continue;\n\t\tdfs(cnt[u][i],u);\n\t}\n}\nvoid solve()\n{\n\t\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tcnt[u].push_back(v);\n\t\tcnt[v].push_back(u);\n\t}\n\tcol[0]=1;\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(col[i]==-1) cout<<(int)cnt[i].size()<<' ';\n\t\telse cout<<(int)-cnt[i].size()<<' ';\n\t}\n\tcout<<endl;\n}\nint main()\n{\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tcin>>n;\n\t\tfor(int i=1;i<=n;i++) cnt[i].clear();\n\t\tsolve();\n\t}\n\treturn 0;\n }\n\n\n```",
        "postTime": 1649753431,
        "uid": 173323,
        "name": "Yukinoshita_Yukino",
        "ccfLevel": 4,
        "title": "CF1656E Equal Tree Sums \u9898\u89e3"
    },
    {
        "content": "## \u65b9\u6cd5\u4e00.\u81ea\u5b9a\u6743\u503c\u5012\u63a8\n\u5173\u952e\u8bcd\uff1a\u5217\u65b9\u7a0b\u3002\n\n\u8bfb\u5b8c\u9898\u540e\uff0c\u60f3\u5230\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u6709\u4e00\u5b9a**\u89c4\u5f8b\u6027**\uff0c\u8003\u8651\u753b\u51fa\u4e00\u68f5\u6811\u5e76\u5c1d\u8bd5\u586b\u5165\u6743\u503c\u4ee5\u627e\u89c4\u5f8b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ejyoj1rm.png)\n\n\u8fd9\u662f\u6837\u4f8b\u4e2d\u7b2c\u4e00\u7ec4\u6570\u636e\u7684\u6811\u3002\u8bbe\u7f16\u53f71-5\u7684\u7ed3\u70b9\u6743\u503c\u5206\u522b\u4e3a $a$\u3001$b$\u3001$c$\u3001$d$\u3001$e$\u3002\u5f88\u5bb9\u6613\u60f3\u5230\u5728\u79fb\u9664\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u4e00\u5b9a\u6ee1\u8db3\u8fde\u901a\u5757\u6743\u503c\u76f8\u7b49\uff0c\u56e0\u4e3a\u79fb\u9664\u53f6\u5b50\u8282\u70b9\u4e0d\u4f1a\u4ea7\u751f\u65b0\u7684\u8fde\u901a\u5757\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u79fb\u9664\u975e\u53f6\u5b50\u8282\u70b9\u7684\u60c5\u51b5\u3002\n\n\u5206\u522b\u79fb\u9664\u7ed3\u70b91\u548c\u7ed3\u70b93\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u7684\u65b9\u7a0b\uff1a\n\n$\\begin{cases}b=c+d+e\\\\d=e\\\\a+b=d\\end{cases}$ \n\n\u5982\u679c\u6ee1\u8db3\u6743\u503c\u4e0a\u8ff0\u65b9\u7a0b\uff0c\u5219\u4e00\u5b9a\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u3002\n\n**\u89c2\u5bdf\u53ef\u5f97\u51fa\u7ed3\u8bba\uff1a\u5220\u9664\u5ea6\u4e3a $x$ \u7684\u7ed3\u70b9\u53ef\u4ee5\u5f97\u5230 $x-1$ \u4e2a\u53ef\u7528\u65b9\u7a0b\u3002\u7531\u4e8e\u6709 $y$ \u4e2a\u7ed3\u70b9\u7684\u6811\u4e0a\u7ed3\u70b9\u5ea6\u7684\u548c\u4e3a $2y-2$\uff0c\u6240\u4ee5\u6bcf\u68f5\u6811\u6211\u4eec\u90fd\u80fd\u5f97\u5230 $y-2$ \u4e2a\u65b9\u7a0b\u3002\u6545\u786e\u5b9a\u6811\u4e0a\u4efb\u4e24\u4e2a\u70b9\u7684\u6743\u503c\u540e\uff0c\u4ecd\u53ef\u4ee5\u627e\u5230\u89e3\u3002**\n\n\u6545\u53ef\u4ee5\u627e\u5230\u65b9\u6cd5\u4e00\uff1a**\u9009\u62e9\u7236\u8282\u70b9\u4e0d\u76f8\u540c\u7684\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u8d4b\u4efb\u610f\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\uff0c\u540e\u4ece\u53f6\u5b50\u8282\u70b9\u5f80\u6839\u8282\u70b9\u9010\u6b65\u63a8\u5bfc\u6bcf\u4e2a\u70b9\u7684\u503c\u3002**\n\n## \u65b9\u6cd5\u4e8c.\u89c4\u5f8b\u5f52\u7eb3\n\n\u987a\u65b9\u6cd5\u4e00\u7684\u601d\u8def\u7ee7\u7eed\u5f80\u4e0b\uff0c\u591a\u6b21\u8bd5\u9a8c\u65b9\u7a0b\u53ef\u884c\u53d6\u503c\u53ef\u4ee5\u53d1\u73b0\u2014\u2014\u76f8\u90bb\u4e24\u8282\u70b9\u6743\u503c**\u5fc5\u5b9a\u4e00\u8d1f\u4e00\u6b63**\uff0c\u53ef\u4ee5\u60f3\u5230\u7ed9\u6811**\u67d3\u8272**\u3002\u540c\u65f6\uff0c\u5728\u786e\u5b9a\u6743\u503c\u65f6\u53ef\u4ee5\u53d1\u73b0\u4e0b\u56fe\u60c5\u51b5\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/4398lp3c.png)\n\n\u6839\u636e\u7b49\u5f0f\u7684\u6027\u8d28\uff0c**\u6bcf\u4e00\u4e2a\u70b9\u6743\u6269\u5927\u6216\u7f29\u5c0f\u76f8\u540c\u7684\u500d\u6570\u540e\u7ed3\u679c\u4f9d\u7136\u6210\u7acb\u3002** \u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u4e0b\u56fe\u7684\u7ed3\u679c\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/esz1k6qc.png)\n\n\u8fdb\u4e00\u6b65\u89c2\u5bdf\u53d1\u73b0\uff0c\u7ed3\u70b9\u7684\u6743\u503c\u53ef\u88ab\u8868\u793a\u4e3a $k\u00d7x$\uff0c\u5176\u4e2d\uff0c$x$ \u662f\u7ed3\u70b9\u7684\u5ea6\uff0c\u53c2\u6570 $k$ \u6ee1\u8db3\u5c42\u6570\u5947\u5076\u6027\u4e0d\u540c\u65f6\u6b63\u8d1f\u4e0d\u540c\uff0c\u4e14\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u5bf9\u5e94\u7684 $k$ \u7684\u7edd\u5bf9\u503c\u76f8\u540c\u3002\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u9ed8\u8ba4 $k=1$ \u6216 $k=-1$\u3002\u6b64\u65f6\u53ef\u901a\u8fc7dfs\u7b97\u6cd5\u6c42\u5f97\u7ed3\u70b9\u7684\u6743\u503c\u3002\n\n### \u6b63\u786e\u6027\u8bc1\u660e\n\u6839\u636e\u6743\u503c\u7684\u8ba1\u7b97\u65b9\u5f0f\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u6761\u8fb9\u5e26\u7ed9\u4e24\u7aef\u8282\u70b9\u6743\u503c\u7684\u8d21\u732e\u4e92\u4e3a\u76f8\u53cd\u6570\u3002\u6240\u4ee5\u7b54\u6848\u7684\u6743\u503c\u548c\u5e94\u4e3a $0$\u3002\u5220\u53bb\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\u540e\uff0c\u968f\u4e4b\u6d88\u5931\u7684\u8fb9\u4f1a\u5bfc\u81f4\u7ed3\u70b9\u6743\u503c\u548c\u4e0d\u518d\u4e3a $0$\uff0c\u539f\u56e0\u5728\u4e8e\u6d88\u5931\u8fb9\u7ed9\u5220\u53bb\u7ed3\u70b9\u76f8\u90bb\u7684\u7ed3\u70b9\u7684\u6743\u503c\u5f71\u54cd\u4f9d\u7136\u5b58\u5728\u3002\u82e5\u5220\u9664\u8282\u70b9\u7684\u53c2\u6570\u4e3a $k$\uff0c\u5219\u5f71\u54cd\u503c\u5747\u4e3a $-k$\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5185\u7684\u6743\u503c\u548c\u4fbf\u4e5f\u4e3a $-k$\u3002\n\n\u9ed8\u8ba4 $k=1$ \u6216 $k=-1$ \u53ef\u4ee5\u76f4\u63a5\u7406\u89e3\u6210\u5220\u53bb\u8fb9\u7ed9\u7ed3\u70b9\u5ea6\u5e26\u53bb\u5f71\u54cd\u3002\n\n\u4e0b\u9762\u662f\u65b9\u6cd5\u4e8c\u7684\u4ee3\u7801\u3002\u65b9\u6cd5\u4e00\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ca\u64cd\u4f5c\u96be\u5ea6\u8f83\u5927\uff0c\u4e0d\u8d34\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+2;\nstruct edge{\n\tint to,next;\n}e[2*N];\nint n,ans[N],np=0,first[N],deg[N];\nbool vis[N];\n\nvoid add(int u,int v){\n\te[++np]=(edge){v,first[u]};\n\tfirst[u]=np;\n}\n\nvoid dfs(int i,int depth){\n\tvis[i]=1;\n\tif(depth%2==1)ans[i]=deg[i];\n\telse ans[i]=-1*deg[i];\n\tfor(int p=first[i];p;p=e[p].next){\n\t\tint j=e[p].to;\n\t\tif(!vis[j])dfs(j,depth+1);\n\t}\n}\n\nvoid work(){\n\tscanf(\"%d\",&n);\n\tnp=0;\n\tfor(int i=1;i<=n;i++){\n\t\tans[i]=0;\n\t\tfirst[i]=0;\n\t\tvis[i]=0;\n\t\tdeg[i]=0;\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t\tdeg[x]++;\n\t\tdeg[y]++;\n\t}\n\tdfs(1,1);\n\t\n\tfor(int i=1;i<=n;i++)\n\t    printf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n}\n\nint t;\nint main(){\n\tcin>>t;\n\twhile(t--){\n\t\twork();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1649489521,
        "uid": 359270,
        "name": "\u662f\u9752\u767d\u5440",
        "ccfLevel": 5,
        "title": "CF1656E\u9898\u89e3"
    },
    {
        "content": "## Preface\n\n\u819c\u62dc @[Daniel777](https://www.luogu.com.cn/user/310317)\u3002\n\n## Analysis\n\n\u8003\u8651\u5b50\u6811\u503c\u7684\u548c\uff0c\u5206\u4e09\u7c7b\u8ba8\u8bba\uff1a\u9ad8\u5ea6\u4e3a**\u5947\u6570**\uff0c\u9ad8\u5ea6\u4e3a**\u5076\u6570** \u4e0e **\u6839**\u3002\u9ad8\u5ea6\u4e3a**\u5076\u6570**\u7684\u5b50\u6811\u548c\u4e3a $1$\uff0c\u9ad8\u5ea6\u4e3a**\u5947\u6570**\u7684\u5b50\u6811\u548c\u4e3a $-1$\uff0c**\u6839**\u7684\u5b50\u6811\u548c\u4e3a $0$ \u5373\u53ef\u3002Dfs \u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u6df1\u5ea6\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\uff0c\u518d\u8bb0\u5f55\u4e00\u4e0b\u5b50\u6811\u503c\u7684\u548c\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(n)$\u3002\n\n## Code\n\n**Talk is cheap, show me the code.**\n\n[Codeforces Status](https://codeforces.com/contest/1656/submission/150796320)\n\n```cpp\n// And in that light, I find deliverance.\n#define int long long\nint n,a[100010],sum[100010];\nvi e[100010];\nint col[100010];\nvoid dfs(int u,int fa){\n\tcol[u]=col[fa]^1;\n\tfor(auto v:e[u]) if(v!=fa) dfs(v,u);\n}\nvoid solve(int u,int fa){\n\tfor(auto v:e[u]) if(v!=fa) solve(v,u),sum[u]+=sum[v];\n\tif(u==1) a[u]=0-sum[u];\n\telse if(col[u]==0) a[u]=1-sum[u];\n\telse a[u]=-1-sum[u];\n\tsum[u]+=a[u];\n}\nvoid work(){\n\tread(n);\n\tFor(i,1,n) a[i]=0,e[i].clear(),sum[i]=0;\n\tFor(i,1,n-1){\n\t\tint u,v;read(u,v);\n\t\te[u].pb(v),e[v].pb(u);\n\t}\n\tcol[0]=1;\n\tdfs(1,0);\n\tsolve(1,0);\n\tFor(i,1,n) cout<<a[i]<<\" \";puts(\"\");\n}\nsigned main(){\n\tint T;read(T);\n\twhile(T--) work();\n}\n```",
        "postTime": 1648187297,
        "uid": 169574,
        "name": "Enucai",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1656E \u3010Equal Tree Sums\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7528\u5f52\u7eb3\u6cd5\u89e3\u9898\u3002\n\n\u9996\u5148\u53d1\u73b0\uff0c\u5220\u6389\u4e00\u4e2a\u70b9\uff0c\u5269\u4e0b\u7684\u5757\u6570\u5c31\u662f\u5b83\u7684\u5ea6\u6570\u3002\n\n\u4e0d\u59a8\u4f7f\u5f97 $\\sum a_i=0$\uff0c\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u7b49\u4e8e\u5176\u4ed6\u6240\u6709\u70b9\u6743\u7684\u548c\u7684\u76f8\u53cd\u6570\u3002\n\n\u53d1\u73b0\u5ea6\u6570\u662f\u76f8\u4e92\u63d0\u4f9b\u7684\uff0c\u5219\u76f8\u90bb\u7684\u70b9\u7684\u6b63\u8d1f\u6027\u4e00\u5b9a\u76f8\u53cd\u3002\n\n\u8003\u8651\u5982\u4f55\u8fdb\u884c\u5177\u4f53\u6784\u9020\u3002\n\n\u8bbe\u5f53\u524d\u70b9 $\\text{cur}$\uff0c\u5176\u7236\u4eb2\u4e3a $\\text{f}$\uff0c$\\text{cur}$ \u7684 $p$ \u68f5\u5b50\u6811\u7684\u548c\u5747\u4e3a $x$\uff0c\u5269\u4f59\u8fde\u901a\u5757\u7684\u548c\u4e5f\u4e3a $x$\u3002\n\n\u90a3\u4e48 $a_{\\text{cur}}=-(p+1)x$\u3002\n\n\u8003\u8651\u8f6c\u79fb\u5230 $\\text{f}$\uff0c\u5176\u4ee5 $\\text{cur}$ \u4e3a\u6839\u7684\u5b50\u6811\u548c\u4e3a $-(p+1)x+px=-x$\u3002\n\n\u540c\u7406\u6709\u5176\u4f59\u5b50\u6811\uff08\u52a0\u4e0a $\\text{cur}$ \u7684\u5171 $q$ \u4e2a\uff09\u548c\u8fde\u901a\u5757\u7684\u548c\u4e3a $-x$\u3002\n\n\u90a3\u4e48 $a_{\\text f}=(q+1)x$\u3002\n\n\u4ee5 $\\text{f}$ \u4e3a\u6839\u7684\u5b50\u6811\u548c\u4e3a $(q+1)x-qx=x$\u3002\n\n\u90a3\u4e48\u4f60\u4f1a\u53d1\u73b0\uff0c\u5b50\u6811\u548c\u5448\u4ea4\u66ff\u7684 $x,-x$ \u7684\u72b6\u6001\u3002\u8fd9\u662f\u4ec0\u4e48\u539f\u56e0\u5462\uff1f\n\n\u5176\u5b9e\u5bf9\u4e8e\u6bcf\u4e00\u68f5\u5b50\u6811\u6765\u8bf4\uff0c\u5b83\u81ea\u5df1\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u72b6\u6001\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u5b83\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\uff0c\u4f1a\u8d21\u732e $1$ \u7684\u5ea6\u6570\uff0c\u4e14\u7531\u4e8e\u76f8\u90bb\u70b9\u6743\u6b63\u8d1f\u6027\u76f8\u53cd\uff0c\u4e8e\u662f\u5b58\u5728 $x,-x$\u3002\n\n\u8fd9\u6837\u6784\u9020\uff0c\u5b50\u6811\u548c\u5c31\u4e0e\u70b9\u6743\u6ca1\u5173\u7cfb\u4e86\uff0c\u53ea\u548c\u6df1\u5ea6\u6709\u5173\uff0c\u4e3a $x$ \u6216 $-x$\u3002\n\n\u5c06\u53f6\u5b50\u8282\u70b9\u5747\u8d4b\u4e3a $1$ \u6216 $-1$\uff0c\u5f80\u4e0a\u9012\u5f52\u5373\u53ef\uff08\u4e3a\u4e86\u4fdd\u8bc1\u70b9\u6743\u4e0d\u8d85\u8fc7\u9650\u5236\uff09\u3002\n\n\u7a0d\u5fae\u60f3\u4e00\u4e0b\u53d1\u73b0\u4e0d\u9700\u8981\u53cd\u8fc7\u6765\u6c42\u548c\uff0c\u70b9\u6743\u7684\u7edd\u5bf9\u503c\u5176\u5b9e\u5c31\u662f\u5b83\u7684\u5ea6\u6570\uff0c\u6b63\u8d1f\u6027\u7531\u6df1\u5ea6\u51b3\u5b9a\u3002\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5 + 10, M = N << 4;\nint t, n, cnt, qu[N], dep[N], lst[N], res[N], head[N];\nstruct Edge { int to, nxt; } e[N << 1];\n\nnamespace fast_io {\n    int it, ed, ot, t; char stk[20], bf[N + 50], ob[N + 50];\n    #define gc (it == ed && (ed = (it = 0) + fread(bf, 1, N, stdin), it == ed))? EOF : bf[it++]\n    template <typename T> inline void read(T &x) {\n        x = 0; char ch = gc; int f = 1;\n        for (; !isdigit(ch); ch = gc) if (ch == '-') f = -1;\n        for (; isdigit(ch); ch = gc) x = x * 10 + (ch ^ 48); x *= f; return ;\n    } template <typename T, typename ...Args>\n    inline void read(T &x, Args &...args) { read(x), read(args...); }\n    inline void fls() { fwrite(ob, 1, ot, stdout), ot = 0; }\n    template <typename T> inline void write(T x, char opt) {\n        if (x < 0) ob[ot++] = '-', x = -x;\n        while (x > 9) stk[++t] = 48 ^ (x % 10), x /= 10;\n        for (ob[ot++] = 48 ^ x; t; ob[ot++] = stk[t--]);\n        ob[ot++] = opt; if (ot > N) fls(); return ;\n    }\n} using fast_io::read; using fast_io::write;\n\ninline void addEdge(int u, int v) {\n    e[++cnt].to = v, e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\n\ninline void solve() {\n    read(n); cnt = 0; for (int i = 1; i <= n; ++i) head[i] = res[i] = 0;\n    for (int i = 1, u, v; i < n; ++i)\n        read(u, v), addEdge(u, v), addEdge(v, u), ++res[u], ++res[v];\n    int l = 1, r = 1; qu[l] = dep[l] = lst[l] = 1;\n    while (l <= r) {\n        int f = lst[l], cur = qu[l], dp = dep[l]; ++l;\n        for (int i = head[cur]; i; i = e[i].nxt) {\n            int to = e[i].to;\n            if (to ^ f) ++r, lst[r] = cur, qu[r] = to, dep[r] = -dp;\n        }\n        res[cur] *= dp;\n    }\n    for (int i = 1; i <= n; ++i) write(res[i], i == n? '\\n' : ' ');\n}\n\nint main() {\n    read(t); while (t--) solve(); fast_io::fls(); return 0;\n}\n```",
        "postTime": 1669281853,
        "uid": 487752,
        "name": "MistZero",
        "ccfLevel": 0,
        "title": "\u795e\u5947\u6784\u9020\u9898\u3002"
    }
]