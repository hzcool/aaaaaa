[
    {
        "content": "**CF 2200\u5206\u4e2d\u7684\u5927\u6c34\u9898**\n\n\u8981\u6c42\u6ee1\u8db3 $ \\forall i\\in N^*, a_i=c\\cdot b^{i-1} , c,b\\in R$, \u5176\u5b9e\u5c31\u662f\u6307 $a$ \u6570\u7ec4\u662f\u6ee1\u8db3\u7b49\u6bd4\u6570\u5217\u7684\u3002\n\n\u8981\u6c42\u5224\u65ad\u539f\u6570\u7ec4\u6700\u5c11\u5220\u9664\u51e0\u4e2a\u6570\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002\n\n\u4ed4\u7ec6\u770b\u9898\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u91cd\u8981\u7684\u6761\u4ef6\uff0c\u5c31\u662f\u6700\u591a\u5220 1 \u4e2a\u3002\n\n\u5f53\u5220\u5230 2 \u4e2a\u65f6\u5c31\u4e0d\u5408\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u53ea\u770b\u524d\u51e0\u4e2a\u6570\u3002\n\n\u5728\u524d\u4e09\u4e2a\u6570\u4e2d\u5fc5\u5b9a\u6ee1\u8db3\u6700\u591a\u4e00\u4e2a\u6570\u5b57\u4e0d\u5408\u6cd5\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u82e5\u6210\u7acb\uff0c\u524d\u4e09\u4e2a\u6570\u53ea\u53ef\u80fd\u662f $a_1,a_2$ \u5408\u6cd5\u6216 $a_1,a_3$ \u5408\u6cd5\u6216 $a_2,a_3$ \u5408\u6cd5\u6216\u90fd\u5408\u6cd5\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0e\u7b2c\u4e00\u79cd\u5408\u5e76\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u524d\u4e24\u4e2a\u5408\u6cd5\u6570\u5b57\uff0c\u53ef\u4ee5\u7b97\u51fa\u516c\u6bd4\u5e76\u5224\u65ad\u540e\u7eed\u662f\u5426\u5408\u6cd5\u3002\n\n---\n\n\u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\n\n1. \u8981\u7279\u5224\u6ee1\u8db3\u7684\u524d\u4e24\u9879\u4e3a 0 \u7684\u60c5\u51b5\u3002\n\n2. \u900932\u4f4d\u7684\u7528 double \u4f1a\u88ab\u5361\uff0c\u8981\u7528 double \u5c31\u9009 C++ 17 \u7b49\u8bed\u8a00\u6700\u4fdd\u9669\u3002\n\n---\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=a;i<=b;i++)\n#define Rep(i,a,b) for(int i=a;i>=b;i--)\nusing namespace std;\nint read()\n{\n\tchar c=getchar();int x=0;bool f=0;\n\twhile(!isdigit(c)) f^=!(c^45),c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f)x=-x;return x;\n}\nconst int maxn=100010;\nint n,cnt,ans;\nint s[maxn];\ndouble a,b,c,d;\nint f(double a,double b) \n{\n\tif(a==0) d=0;\n\telse d=b/a;\n\tc=a;\n\tcnt=0;\n\tFor(i,1,n)\n\t{\n\t\tif(cnt>=2) break;\n\t\tif(c==s[i])c*=d;\n\t\telse ++cnt;\n\t}\n\treturn cnt;\n}\nint main()\n{\n\tn=read();\n\tFor(i,1,n) s[i]=read();\n\tans=min(f(s[1],s[2]),(min(f(s[1],s[3]),f(s[2],s[3]))));\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1636169186,
        "uid": 194642,
        "name": "xiaozeyu",
        "ccfLevel": 5,
        "title": "CF51D Geometrical problem"
    },
    {
        "content": "\u8fd9\u4e2a\u9898 \u2026\u2026 \u6211\u611f\u6168\u4e07\u5206\uff0c~~\u641e\u4e86\u4e00\u4e2a\u5c0f\u65f6\u6700\u7ec8\u8fd8\u662f\u770b\u9898\u89e3 A \u6389\u7684\u3002 (~~\n\n\u6765\u8bf4\u4e00\u4e0b\u6211\u7684\u4e0d\u592a\u5bf9\u7684\u60f3\u6cd5\uff0c\u5c31\u662f\u8003\u8651\u8ba1\u7b97\u6bcf\u4e2a\u6570\u4e0e\u5b83\u524d\u9762\u7684\u6570\u7684\u516c\u6bd4\u4ee5\u53ca\u9996\u9879\uff0c\u7528\u4e2a\u6876\u6765\u7ef4\u62a4\u4e00\u4e0b\uff0c\u6700\u540e\u5982\u679c\u90fd\u76f8\u7b49\u662f\u7b2c\u4e00\u79cd\uff0c\u53bb\u6389\u4e00\u79cd\u7136\u540e\u53ef\u884c\u7684\u8bdd\u662f\u7b2c\u4e8c\u79cd\uff0c\u5426\u5219\u5c31\u7b2c\u4e09\u79cd\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u975e\u5e38\u7684\u4e25\u91cd\uff0c\u56e0\u4e3a double \u8fd9\u4e2a\u7c7b\u578b\u597d\u50cf nan \u548c inf \u6709\u70b9\u5206\u7684\u4e0d\u592a\u5bf9\uff0c~~\u5982\u679c\u6709\u54ea\u4e2a\u8fc7\u4e86\u7684\u795e\u4ed9\u53ef\u4ee5\u79c1\u4fe1\uff0c\u6765\u6559\u6559\u6211\u3002~~\n\n\u4e8b\u5b9e\u4e0a\u5b8c\u5168\u4e0d\u9700\u8981\u8fd9\u4e48\u9ebb\u70e6\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u786e\u5b9a\u516c\u6bd4\u4ee5\u53ca\u9996\u9879\u90a3\u663e\u7136\uff0c\u6211\u4eec\u6574\u4e00\u4e2a\u6570\u5217\u90fd\u53ef\u4ee5\u786e\u5b9a\u4e0b\u6765\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5982\u4f55\u786e\u5b9a\u516c\u6bd4\u548c\u9996\u9879\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u60f3\u6cd5\u5c31\u662f\u62ff\u524d\u4e09\u4e2a\u6765\u505a\uff0c\u6211\u4eec\u679a\u4e3e\u524d\u4e09\u4e2a\u6709\u54ea\u4e24\u4e2a\u662f\u5bf9\u7684\uff0c\u7136\u540e\u94a6\u5b9a\u5b83\u662f\u5bf9\u7684\u4e4b\u540e\u518d\u53bb\u5224\u65ad\u7b26\u5408\u7b49\u6bd4\u6570\u5217\u7684\u6709\u591a\u5c11\u4e2a\u6570\u3002\n\n\u8fd9\u6837\u597d\u50cf\u770b\u770b\u4e0d\u592a\u5bf9\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u4ed6\u662f\u7b2c\u4e00\u79cd\u6216\u8005\u7b2c\u4e8c\u79cd\uff0c\u524d\u4e09\u4e2a\u6570\u91cc\u9762\u80af\u5b9a\u53ea\u6709\u4e00\u4e2a\u5b58\u5728\u7684\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u8fd9\u633a\u5bf9\u7684\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u5c0f\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u4eec\u9047\u5230\u4e0d\u7b26\u5408\u7684\uff0c\u90a3\u5c31\u4e0d\u5f80\u4e0a\u4e58\u516c\u6bd4\uff0c\u8fd9\u6837\u7684\u8bdd\u53ef\u4ee5\u5047\u88c5\u5220\u6389\u4e86\u8fd9\u4e2a\u6570\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <map>\n#include <cmath>\n#pragma GCC optimize(3)\n#pragma GCC target(\"avx\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#pragma GCC optimize(2)\nusing namespace std;\nconst int INF=1e5+5;\nint n;\ndouble a[INF],b[INF],c[INF],cc[INF];\nmap <double,map<double,int> > Map[2][2],Map1[2][2];\ndouble ksm(double x,int y) {\n\tdouble ba=x,ans=1;\n\twhile (y) {\n\t\tif (y&1) ans=(ans*ba);\n\t\tba*=ba;y>>=1;\n\t}\n\treturn ans;\n}\nint check(double x,double y) {\n\tdouble d=0,c=0;\n\tif (x==0) d=0;\n\telse d=y/x;c=x;\n\tint cnt=0;\n\tfor (int i=1;i<=n;i++) {\n\t\tif (cnt>=2) break;\n\t\tif (a[i]==c) c*=d;\n\t\telse cnt++;\n\t}\n\treturn cnt;\n}\nsigned main()\n{\n//\tfreopen(\"test.in\",\"r\",stdin);\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tfor (int i=1;i<=n;i++) cin>>a[i];\n\tint ans=min(check(a[1],a[2]),min(check(a[2],a[3]),check(a[1],a[3])));\n\tcout<<ans<<\"\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1661066321,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF51D"
    }
]