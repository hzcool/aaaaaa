[
    {
        "content": "\u6a21\u62df\u8d5b\u4e0a\u51fa\u4e86\u6b64\u9898\uff0c \u5927\u6982\u662f\u672c\u849f\u84bb\u552f\u4e00ac\u7684\u9898\u4e86\n\n\u8003\u573a\u4e0a\u7b2c\u4e00\u773c\u5eb7\u5230\u8fd9\u9053\u9898\u65f6\uff0c \u56e0\u4e3a\u53ea\u6d89\u53ca\u8def\u5f84\u4e0a\u6700\u5c0f\u503c\u6700\u5927\u7684\u95ee\u9898\uff0c \u6240\u4ee5\u60f3\u5230\u4e86\u8d27\u8f66\u8fd0\u8f93\uff0c \u8dd1\u51fa\u5b83\u7684\u6700\u5927\u751f\u6210\u6811\uff0c\u7531\u6700\u5927\u751f\u6210\u6811\u7684\u6027\u8d28\u53ef\u77e5\uff0c f(p, q\uff09 \u5fc5\u5b9a\u5728\u65b0\u5efa\u7684\u6811\u4e0a\u7684\u8def\u5f84\u4e0a\n\n\u9898\u76ee\u4e2d\u8ba9\u6c42\u6240\u6709\u70b9\u5bf9\u7684f\u503c\u4e4b\u548c\uff0c \u597d\u50cf\u4e0d\u592a\u597d\u6c42\uff0c \u6240\u4ee5\u6211\u4eec\u5206\u522b\u8003\u8651\u6bcf\u6761\u8fb9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002 \u5148\u5c06\u6811\u4e0a\u7684\u8fb9\u6309\u8fb9\u6743\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8054\u901a\u5757\u7684\u5927\u5c0f\uff0c \u4e00\u4e2a\u4e00\u4e2a\u52a0\u8fb9\uff0c \u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u4e24\u7aef\u70b9\u8054\u901a\u5757\u5927\u5c0f\u7684\u4e58\u79ef\u518d\u4e58\u4e0a\u65b0\u8fb9\u8fb9\u6743.\n\n\u4f55\u54c9\uff1f \u56e0\u4e3a\u8fb9\u6743\u662f\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7684\uff0c \u6240\u4ee5\u4e24\u8054\u901a\u5757\u4e2d\u7684\u8fb9\u6743\u503c\u5747\u5927\u4e8e\u65b0\u8fb9\u3002 \u5b83\u7684\u6743\u503c\u662f\u6700\u5c0f\u7684\uff0c \u6240\u4ee5\u5de6\u7aef\u70b9\u6240\u5728\u8054\u901a\u5757\u7684\u70b9\u96c6\u5230\u53f3\u7aef\u70b9\u6240\u5728\u8054\u901a\u5757\u7684\u70b9\u96c6\u7684f\u503c\u5747\u4e3a\u65b0\u8fb9\u7684\u8fb9\u6743\u3002\n\n\u6700\u540e\uff0c \u53d1\u73b0\u6700\u5927\u751f\u6210\u6811\u7684\u8fc7\u7a0b\u548c\u7b97\u7b54\u6848\u7684\u8fc7\u7a0b\u53ef\u4ee5\u5408\u5e76\uff0c\u8be6\u60c5\u89c1\u4ee3\u7801,\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\n\n _talk is cheap, show me the code_   \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<iomanip>\n#include<algorithm>\nusing namespace std;\ntemplate <typename T> \nvoid read(T &x) {\n\tx = 0; int f = 1;\n\tchar c = getchar();\n\twhile (!isdigit(c)) {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (isdigit(c)) {\n\t\tx = (x << 3) + (x << 1) + c - '0';\n\t\tc = getchar();\n\t}\n\tx *= f;\n}\nconst int N = 100500;\nconst int M = 1005000;\n\nstruct node{\n\tint x, y;\n\tint w;\n\tbool operator < (const node &i) const {\n\t\treturn w > i.w;\n\t}\n}e[M];\n\nlong long n, m;\n\n\nint f[N], a[N];\nlong long ans = 0;\nint siz[N];\nint find(int x) {\n\tif (x == f[x]) return x;\n\treturn f[x] = find(f[x]);\n}\n\n\nint main() {\n\tread(n), read(m);\n\tfor (int i = 1;i <= n; i++) f[i] = i, siz[i] = 1;\n\tfor (int i = 1;i <= n; i++) read(a[i]);\n\tfor (int i = 1;i <= m; i++) {\n\t\tint x, y;\n\t\tread(x), read(y);\n\t\te[i] = (node){x, y, min(a[x], a[y])};\n\t}\n\tsort(e + 1,e + m + 1);\n\tfor (int i = 1;i <= m; i++) {\n\t\tint fx = find(e[i].x), fy = find(e[i].y);\n\t\tif (fx == fy) continue;\n\t\tf[fx] = fy;\n\t\tans += (long long)siz[fx] * siz[fy] * e[i].w;\n\t\tsiz[fy] += siz[fx];\n\t}\n\tcout << setprecision(6) << (long double) ans * 2  / (long double)(n * (n-1)) << endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1572252383,
        "uid": 122144,
        "name": "hs_black",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF437D \u3010The Child and Zoo\u3011"
    },
    {
        "content": "## CF437D The Child and Zoo\n\n### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6c42\u6240\u6709\u70b9\u5bf9\u95f4\u6240\u6709\u7b80\u5355\u8def\u5f84\u4e0a\u6700\u5c0f\u70b9\u6743\u7684\u6700\u5927\u503c\u7684\u5e73\u5747\u503c\u3002\n\n### \u601d\u8def\n\n1. \u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u70b9\u6743\u8f6c\u79fb\u5230\u8fb9\u6743\u4e0a\uff0c\u8fb9\u6743\u4e3a\u4e24\u7aef\u70b9\u70b9\u6743\u7684\u8f83\u5c0f\u503c\u3002\u6b63\u786e\u6027\u663e\u7136\u3002\n2. \u7136\u540e\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8d21\u732e\uff0c\u53ea\u6709\u8def\u5f84\u4e0a\u542b\u6700\u5927\u70b9\u6743\u7684\u7b80\u5355\u8def\u5f84\u6709\u8d21\u732e\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u628a\u65e0\u5411\u56fe\u8f6c\u53d8\u4e3a\u6700\u5927\u751f\u6210\u6811\u3002\u4efb\u610f\u4e24\u4e2a\u70b9\u95f4\u7684\u8d21\u732e\u663e\u7136\u662f\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u8def\u5f84\u7684\u6700\u5927\u8fb9\u6743\u3002\n3. \u8003\u8651\u5bf9\u4e8e\u4e00\u6761\u8fb9\u7684\u8d21\u732e\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u4e8e\u5f53\u524d\u4e24\u7aef\u70b9\u8fde\u901a\u5757\u7684\u5927\u5c0f\u76f8\u4e58\u518d\u4e58\u8be5\u8fb9\u8fb9\u6743\u3002\u8ba1\u7b97\u540e\u5408\u5e76\u4e24\u4e2a\u8fde\u901a\u5757\u3002\n\n\u5b8c\u4e86\uff0c\u4e00\u4e2a\u6700\u5927\u751f\u6210\u6811\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ninline int read(){\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nnamespace star\n{\n\tconst int maxn=1e5+10;\n\tint n,m,siz[maxn],fa[maxn],a[maxn];\n\tdouble ans;\n\tstruct edge{\n\t\tint u,v,d;\n\t\tinline bool operator < (const edge &zp) const{return d>zp.d;}\n\t}e[maxn];\n\tinline void onion(int x,int y,int k){\n\t\tif(siz[x]<siz[y])swap(x,y);\n\t\tans+=1.0*siz[x]*siz[y]*k;\n\t\tfa[y]=x,siz[x]+=siz[y];\n\t}\n\tint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n\tinline void work(){\n\t\tn=read(),m=read();\n\t\tfor(int i=1;i<=n;i++) a[i]=read(),fa[i]=i,siz[i]=1;\n\t\tfor(int u,v,i=1;i<=m;i++) u=read(),v=read(),e[i]=(edge){u,v,min(a[u],a[v])};\n\t\tsort(e+1,e+1+m);\n\t\tfor(int cnt=0,i=1;i<=m and cnt<=n-1;i++){\n\t\t\tint u=find(e[i].u),v=find(e[i].v);\n\t\t\tif(u!=v)\n\t\t\t\tonion(u,v,e[i].d),cnt++;\n\t\t}\n\t\tprintf(\"%.5lf\\n\",ans/n/(n-1)*2);\n\t}\n}\nsigned main(){\n\tstar::work();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1604068675,
        "uid": 280015,
        "name": "Star_Cried",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF437D \u3010The Child and Zoo\u3011"
    },
    {
        "content": " ~~\u6211\u5728\u6000\u7591\u8fd9\u9053\u9898\u7684\u989c\u8272~~  \n \u6765\u8865\u4e00\u4e0b\u6a21\u62df\u8d5b\u7684T1  \n \u6211\u5c31\u6309\u7740\u6a21\u62df\u8d5b\u7684\u6570\u636e\u8303\u56f4\u7ed9\u51fa\u4e00\u6b65\u4e00\u6b65\u7684\u505a\u6cd5\u3002  \n \u628a\u6a21\u62df\u8d5b\u6570\u636e\u8303\u56f4\u8d34\u4e0a\u6765\uff08  \n \t\n   \u5bf9\u4e8e10%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3$2 \\leq n \\leq 10 , n - 1 \\leq m \\leq 20$  \n   \u5bf9\u4e8e30%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3$2 \\leq n \\leq 200 , n - 1 \\leq m \\leq 1000$  \n   \u5bf9\u4e8e50%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3$2 \\leq n \\leq 1000 , n - 1 \\leq m \\leq 20000$  \n   \u5bf9\u4e8e100%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3$2 \\leq n \\leq 100000 , n - 1 \\leq m \\leq 1000000$   \n   $ 0 \\leq a_i \\leq 100000 ,1 \\leq x_i,y_i \\leq n,(x_i \\neq y_i)$\uff0c\u4fdd\u8bc1\u662f\u8fde\u901a\u56fe\u4e14\u6ca1\u6709\u91cd\u8fb9\u3002  \n   \n \u89e3\u6cd51\uff1a  \n \u66b4\u529b\u679a\u4e3e\u70b9\u8dd1n\u904d$Floyd$  \n \u5206\u6570\uff1a10pts\uff08\u8fd9\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u70b9\u60e8 \n \n \u89e3\u6cd52\uff1a  \n \u968f\u4fbf\u60f3\u60f3\u73c2\u4ee5\u66b4\u529b\u679a\u4e3e\u4e24\u70b9\u679a\u4e3e\u6240\u6709\u8def\u5f84  \n \u5206\u6570\uff1a30pts  \n \n \u89e3\u6cd53\uff1a  \n \u4ece\u6bcf\u4e2a\u70b9\u8dd1$BFS$  \n \u5206\u6570\uff1a50pts  \n \n \u89e3\u6cd54\uff1a  \n \u5e76\u67e5\u96c6  \n \u901a\u8fc7\u89c2\u5bdf\u53ef\u5f97\u6240\u6709\u7684\u8def\u5f84\u5fc5\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u3002  \n \u8bc1\u660e\uff1a\u82e5\u6709\u4e00\u6761\u6ee1\u8db3\u9898\u610f\u7684\u8fde\u63a5$x$\u4e0e$y$\u7684\u8def\u5f84\uff0c\u4e14\u4e0d\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\uff0c\u90a3\u4e48\u7531\u4e8e\u8fd9\u6761\u8def\u5f84\u4e0d\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\uff0c\u5fc5\u5b9a\u81f3\u5c11\u6709\u4e00\u6761\u8fb9\u7684\u8fb9\u6743$ \\leq $\u6700\u5927\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u6743\uff0c\u90a3\u4e48\u9009\u62e9\u6700\u5927\u751f\u6210\u6811\u4e0a\u7684\u8def\u5f84\u4e0d\u4f1a\u66f4\u52a3  \n $Q.E.D.$  \n \u7136\u540e$Kruskal$\u8dd1\u6700\u5927\u751f\u6210\u6811\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002  \n \u5206\u6570\uff1a100pts  \n \n \u7ec6\u8282\u89c1\u4ee3\u7801\u3002  \n ```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int maxm = 1e6 + 5;\ntypedef long long ll;\nll n, m, ans;\nint val[maxn], s[maxn], fa[maxn], siz[maxn];\nint hd[maxn], tot, vis[maxn];\nstruct edge\n{\n    int nxt, to;\n} ed[maxm << 1];\nint findfa(int x)\n{\n    return fa[x] == x ? x : fa[x] = findfa(fa[x]);\n}\nbool cmp(int a, int b)\n{\n    return val[a] > val[b];\n}\nvoid addedge(int x, int y)\n{\n    ed[++tot] = (edge){hd[x], y};\n    hd[x] = tot;\n}\nsigned main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; siz[i] = 1, i++)\n        scanf(\"%d\", &val[s[i] = fa[i] = i]);\n    sort(s + 1, s + n + 1, cmp);\n    for (int i = 1, a, b; i <= m; i++)\n    {\n        scanf(\"%d%d\", &a, &b);\n        addedge(a, b);\n        addedge(b, a);\n    }\n    for (int u = 1; u <= n; u++)\n    {\n        ll res = 0;\n        for (int i = hd[s[u]]; i; i = ed[i].nxt)\n        {\n            int v = ed[i].to;\n            if (!vis[v])\n                continue;\n            int p = findfa(s[u]), q = findfa(v);\n            if (p == q)\n                continue;\n            res += 1ll * siz[p] * siz[q];\n            fa[p] = q;\n            siz[q] += siz[p];\n        }\n        ans += 1ll * res * val[s[u]];\n        vis[s[u]] = 1;\n    }\n    printf(\"%lf\\n\", ans * 2.0 / (n * (n - 1)));\n    return 0;\n}\n```\n",
        "postTime": 1570411623,
        "uid": 127191,
        "name": "Doveqise",
        "ccfLevel": 6,
        "title": "CF437D The Child and Zoo \u9898\u89e3"
    },
    {
        "content": "[in Blog](//milk-lemon.blog.luogu.org/solution-CF438B) & [Problem](//www.luogu.com.cn/problem/CF437D)\n\n## \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u7f16\u53f7\u4e3a $i$ \u7684\u70b9\u7684\u70b9\u6743\u4e3a $a_i$\u3002\n\n- \u8bbe $f(u,\\ v)$\uff08$1\\leq u,\\ v\\leq n,\\ u\\not=v$\uff09\u8868\u793a **\u4e00\u6761 $u$ \u5230 $v$ \u8def\u5f84\u4e0a\u6700\u5c0f\u70b9\u6743** \u7684\u6700\u5927\u503c\u3002\n\n- \u6c42\u6240\u6709\u70b9\u5bf9 $u,\\ v$ \u7684 $f(u,\\ v)$ \u503c\u7684\u5e73\u5747\u6570\u3002\n\n- $2\\leq n\\leq 10^5$\uff0c$0\\leq m,\\ a_i\\leq 10^5$\n\n## \u89e3\u9898\u601d\u8def\n\n\u5047\u8bbe\u672c\u9898\u7ed9\u5b9a\u7684\u662f\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u800c\u4e0d\u662f\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u70b9 $u\\not=v$\uff0c\u5f53 $u$ \u5230 $v$ \u7684\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\u6700\u5927\u65f6\uff0c\u6613\u5f97\u8fd9\u6761\u8def\u5f84\u5728\u8be5\u56fe\u7684\u6700\u5927\u751f\u6210\u6811\u4e0a\u3002\n\n**\u5982\u4f55\u5c06\u70b9\u6743\u8f6c\u5316\u6210\u8fb9\u6743\uff1f** \u4e3a\u4e86\u8f6c\u5316\u540e\u7b49\u4ef7\u4e8e\u70b9\u6743\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u8def\u5f84\uff0c\u8def\u5f84\u4e0a\u70b9\u7684\u6700\u5c0f\u6743\u503c\u5fc5\u987b\u4e0e\u8def\u5f84\u4e0a\u8fb9\u7684\u6700\u5c0f\u6743\u503c\u3002\u8003\u8651\u7279\u6b8a\u60c5\u51b5\uff0c\u82e5\u4e00\u6761\u8def\u5f84\u4e0a\u53ea\u6709\u4e00\u6761\u8fb9\uff0c\u8bbe\u7aef\u70b9\u4e3a $u$ \u548c $v$\uff0c\u8fb9\u6743\u4e3a $val$\uff0c\u5219\u7531\u4e0a\u9762\u5f97\u5230\u7684\u7ed3\u8bba\uff0c\u6709 $w=\\min(a_u,\\ a_v)$\u3002\u6613\u8bc1\u8def\u5f84\u957f\u5ea6\u4e3a\u5176\u4ed6\u503c\u65f6\u4e5f\u7b26\u5408\u6761\u4ef6\u3002\n\n\u6700\u540e\u8003\u8651\u7b54\u6848\u3002\u5206\u6790\u6bcf\u6761\u8fb9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\u4f7f\u7528\u5e76\u67e5\u96c6\uff0c\u8fb9\u4e24\u8fb9\u7684\u8282\u70b9\u4e2d\u5404\u9009\u4e00\u4e2a\u70b9\uff0c\u6545\u8d21\u732e\u4e3a\u4e24\u8fb9\u96c6\u5408\u5927\u5c0f\u4e4b\u79ef\u518d\u4e58\u4e0a\u8fb9\u6743\u6240\u5f97\u7684\u503c\u3002\u7531\u4e8e\u6c42\u7684\u662f\u5e73\u5747\u6570\uff0c\u6240\u4ee5\u6700\u540e\u8bb0\u5f97\u9664\u4ee5 $\\dbinom n2$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n+m\\log n)$\u3002\n\n## AC \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,a[100001];\nstruct Edge{\n    int u,v,val;\n    inline bool operator<(Edge tmp)const{\n        return val>tmp.val;\n    }\n}edge[100001];\n\nint father[100001],size[100001];\nint find(int x){\n    if(father[x]!=x)father[x]=find(father[x]);\n    return father[x];\n}\n\nlong long answer;\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",a+i),father[i]=i,size[i]=1;\n    for(int i=1;i<=m;i++){\n        int x,y; scanf(\"%d%d\",&x,&y);\n        edge[i]={x,y,min(a[x],a[y])};\n    }\n    sort(edge+1,edge+1+m);\n    for(int i=1;i<=m;i++){\n        int u=find(edge[i].u),v=find(edge[i].v);\n        if(u!=v){\n            answer+=(long long)edge[i].val*size[u]*size[v];\n            father[u]=v,size[v]+=size[u];\n        }\n    }\n    printf(\"%.4lf\\n\",answer/(n*(n-1ll)/2.0));\n    return 0;\n}\n```",
        "postTime": 1655388287,
        "uid": 234641,
        "name": "Milmon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF437D/438B - The Child and Zoo"
    }
]