[
    {
        "content": "\u663e\u7136\u53ef\u4ee5\u5148\u8d2a\u5fc3\u5730\u53d6\u4e92\u4e3a\u53cd\u4e32\u7684\u6700\u957f\u524d\u540e\u7f00\u3002\n\n\u53d6\u5b8c\u6254\u6389\u4e4b\u540e\uff0c\u76f8\u5f53\u4e8e\u8981\u5728\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u6216\u540e\u7f00\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u56de\u6587\u4e32\u3002\n\nmanacher \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\u3002\n\n```cpp\nconst int N = 1e6 + 7;\nint n, m;\nchar s[N], t[N];\n\ninline int work(char *s, int n) {\n\tstring ss = \"$#\";\n\tvi p;\n\tfor (int i = 1; i <= n; i++) ss += s[i], ss += \"#\";\n\tp.pb(1);\n\tint mx = 0, id = 0, ans = 1;\n\tfor (int i = 1; i < (int)ss.length(); i++) {\n\t\tp.pb(mx > i ? min(p[2*id-i], mx - i) : 1);\n\t\twhile (i + p[i] < (int)ss.length() && ss[i+p[i]] == ss[i-p[i]]) ++p[i];\n\t\tif (i == p[i]) ans = max(ans, p[i]);\n\t\tif (i + p[i] > mx) mx = i + p[i], id = i;\n\t}\n\treturn ans - 1;\n}\n\ninline void solve() {\n\trds(s, n);\n\tint p = 1;\n\twhile (p <= n && s[p] == s[n+1-p]) ++p;\n\tif (p == n + 1) {\n\t\tfor (int i = 1; i <= n; i++) putchar(s[i]);\n\t\treturn puts(\"\"), void();\n\t}\n\tm = 0;\n\tfor (int i = p; i <= n + 1 - p; i++) t[++m] = s[i];\n\tint l = work(t, m);\n\treverse(t + 1, t + m + 1);\n\tint r = work(t, m);\n\treverse(t + 1, t + m + 1);\n\tif (l < r) reverse(t + 1, t + m + 1), swap(l, r);\n\tfor (int i = 1; i < p; i++) putchar(s[i]);\n\tfor (int i = 1; i <= l; i++) putchar(t[i]);\n\tfor (int i = p - 1; i; i--) putchar(s[i]);\n\tputs(\"\");\n}\n\nint main() {\n\tint T;\n\trd(T);\n\twhile (T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1584736871,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u79cd\u7b80\u5355\u7684kmp\u505a\u6cd5\u3002\n\n\u7b2c\u4e00\u6b65\u663e\u7136\u662f\u5c06s\u524d\u540e\u76f8\u540c\u7684\u5b57\u7b26\u53bb\u6389\uff0c\u4f5c\u4e3a\u7b54\u6848\u7684\u4e00\u90e8\u5206\uff0c\u6bd4\u5982``abcdba``\u4e2d\u7b54\u6848\u663e\u7136\u5c31\u662f``ab``+\u67d0\u4e00\u56de\u6587\u4e32+``ba``\n\n\u73b0\u5728\u6211\u4eec\u628a\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u91cd\u65b0\u628a\u5b83\u79f0\u4e3a$s$\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42$s$\u7684\u6700\u957f\u7684\u56de\u6587\u4e32\u524d\u7f00\u6216\u540e\u7f00\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u79f0$s$\u7684\u53cd\u4e32\u4e3a$s'$\u3002\n\n\u6211\u4eec\u6784\u9020\u4e24\u4e2a\u5b57\u7b26\u4e32$T_1=s+'\\$' +s',T_2=s'+'\\$' +s$\u3002\n\n\u4f8b\u5982\u5bf9\u4e8e\u5b57\u7b26\u4e32``abacc``\uff0c\n$T_1=\\mathbf{aba}\\text{cc\\$c}\\mathbf{aba},$ $T_2=\\mathbf{cc}\\text{aba\\$aba}\\mathbf{cc}$ \u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6700\u957f\u7684\u56de\u6587\u4e32\u524d\u7f00\u548c\u540e\u7f00\u5206\u522b\u662f$T_1,T_2$\u7684\u6700\u957fborder(\u4e00\u4e2aborder\u6307\u7684\u662f\u4e00\u4e2a\u4e0e\u67d0\u4e2a\u540e\u7f00\u76f8\u540c\u7684\u524d\u7f00)\u3002\n\n\u8fd9\u65f6\u81ea\u7136\u6211\u4eec\u5bf9$T_1,T_2$\u8dd1\u4e00\u904dkmp\u6c42\u51fa\u5b83\u4eec\u7684border\u5373\u80fd\u6c42\u51fa\u7b54\u6848\u3002\n\n\u590d\u6742\u5ea6\u663e\u7136\u662f$\\Theta(|s|)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n\nusing namespace std;\nconst int  maxn=4000007;\n\nint T;\nstring s,rev;\nstring t;\nstring s1,s2;\nstring ans;\nint nxt1[maxn],nxt2[maxn];\nint ans1,ans2;\nbool check(string s){\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]!=s[s.size()-i-1])return 0;\n\t}\n\treturn 1;\n}\nint main(){\n    //freopen(\".in\",\"r\",stdin);\n    //freopen(\".out\",\"w\",stdout);\n   \tscanf(\"%d\",&T);while(T--){\n    \n\t\tt=\"\";\n   \t\tcin>>s;\n   \t\tint len=s.size();\n        for(int i=0;i<=2*len;i++)nxt1[i]=nxt2[i]=0;\n       \t\n        if(check(s)){\n        \tcout<<s<<endl;\n        \tcontinue;\n        }\n   \t\tint p=0,q=len-1;\n   \t\twhile(s[p]==s[q])p++,q--;\n   \t\tt=s.substr(0,p);\n   \t\ts=s.substr(p,q-p+1);\n   \t\trev=s;\n        reverse(rev.begin(),rev.end());\n        s1=s+\"$\"+rev,s2=rev+\"$\"+s;\n        int j=0;\n        for(int i=2;i<=s1.size();i++){\n            while(j&&s1[i-1]!=s1[j])j=nxt1[j];\n            if(s1[j]==s1[i-1])j++;\n            nxt1[i]=j;\n        }\n        j=0;\n        for(int i=2;i<=s2.size();i++){\n            while(j&&s2[i-1]!=s2[j])j=nxt2[j];\n            if(s2[j]==s2[i-1])j++;\n            nxt2[i]=j;\n        }\n    \n        if(nxt1[s1.size()]<nxt2[s2.size()]){\n        \tans=s2.substr(0,nxt2[s2.size()]);\n        }else{\n        \tans=s1.substr(0,nxt1[s1.size()]);\n        }\n        \n        cout<<t<<ans;\n        reverse(t.begin(),t.end());\n        cout<<t<<endl;\n   \t}\n\treturn 0;\n}\n```\n",
        "postTime": 1584809704,
        "uid": 58532,
        "name": "pmt2018",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\u770b\u5230\u672c\u9898\u7684\u7b2c\u4e00\u60f3\u6cd5\u662f\u679a\u4e3e\u524d\u540e\u7f00\u5339\u914d\u7684\u957f\u5ea6 $l$\uff0c\u7136\u540e\u8981\u6c42\u4ece $l+1$ \u5f00\u59cb\u7684\u6700\u957f\u56de\u6587\u4e32\u6216\u8005\u4ee5 $n-l$ \u7ed3\u5c3e\u7684\u6700\u957f\u56de\u6587\u4e32\u3002\n\n\u521a\u6253\u7b97\u53bb\u9694\u58c1 [\u6700\u957f\u53cc\u56de\u6587\u4e32](https://www.luogu.com.cn/problem/P4555) \u590d\u5236\u4e00\u4e2a\u4ee3\u7801\uff0c\u610f\u8bc6\u5230\u4e86\u4e0d\u5bf9...\n\n\u5982\u679c\u6c42\u51fa\u6765\u7684\u56de\u6587\u4e32\u4e0e\u524d\u540e\u7f00\u6709\u91cd\u53e0\u600e\u4e48\u529e\uff1f\n\n\u8003\u8651\u4e0a\u9762\u8fd9\u4e2a\u60f3\u6cd5\u7528\u66b4\u529b\u600e\u4e48\u5b9e\u73b0\u3002\u5728\u6211\u4eec\u5c06\u539f\u4e32\u4e2d\u95f4\u63d2\u5165 `#` \u540e\uff0c\u7528 manacher \u7b97\u6cd5\u4ee5 $i$ \u4e3a\u56de\u6587\u4e2d\u5fc3\u7684\u56de\u6587\u534a\u5f84 $d_i$\u3002\n\n\u7136\u540e\u6211\u4eec\u679a\u4e3e\u524d\u540e\u7f00\u5339\u914d\u957f\u5ea6 $l$\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u5bf9\u4e8e\u6240\u6709 $l+1\\le i\\le \\frac{|s|+1}{2}$ \u4e14 $i-d_i+1\\le l+1$\uff0c\u6c42\u51fa $i$ \u7684\u6700\u5927\u503c\uff1b\n- \u5bf9\u4e8e\u6240\u6709 $\\frac{|s|+1}{2}\\le i\\le n-l$ \u4e14 $i+d_i-1\\ge n-l$\uff0c\u6c42\u51fa $i$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$l$ \u8d8a\u5927\uff0c\u8d8a\u5bb9\u6613\u6ee1\u8db3\u9650\u5236\uff0c\u8d8a\u5bb9\u6613\u4f7f\u5f97 $i$ \u53d6\u5230\u6781\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6c42\u51fa\u6700\u5927\u7684 $l$ \u4ee5\u540e\u7528\u4e0a\u9762\u7684\u66b4\u529b\u5b9e\u73b0\u5373\u53ef\u3002\n\n~~\u5982\u679c\u4f60\u4e0d\u6015\u88ab hack \u7684\u8bdd~~ manacher \u4e5f\u53ef\u4ee5\u7528\u54c8\u5e0c\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n```cpp\nconst int N = 2000005; // \u6ce8\u610f\u6570\u7ec4\u5f00\u5927\u4e00\u500d\nint n, d[N];\nchar s[N];\nvoid manacher(int *d, char *s, int n){\n\tfor (register int i = 1, m = 0, r = 0; i <= n; ++i){\n\t\td[i] = i > r ? 0 : std::min(r - i + 1, d[m - (i - m)]);\n\t\twhile (i - d[i] > 0 && i + d[i] <= n && s[i - d[i]] == s[i + d[i]]) ++d[i];\n\t\tif (i + d[i] - 1 > r) m = i, r = i + d[i] - 1;\n\t}\n}\nvoid solve(){\n\tn = reads(s + 1);\n\tfor (register int i = n; i; --i) s[i << 1] = s[i], s[i << 1 | 1] = '#';\n\ts[1] = '#', n = n * 2 + 1;\n\tmanacher(d, s, n);\n\t// for (register int i = 1; i <= n; ++i) debug(\"%d \", d[i]); debug(\"\\n\");\n\tint len = 0;\n\tfor (register int i = 1; i <= n / 2; ++i)\n\t\tif (s[i] != s[n - i + 1]) break;\n\t\telse ++len;\n\t// debug(\"%d\\n\", len);\n\tint d1 = 0, d2 = 0;\n\tfor (register int i = len + 1; i <= (n + 1) / 2; ++i)\n\t\tif (i - d[i] + 1 <= len + 1) d1 = std::max(d1, (i - len) * 2 - 1);\n\tfor (register int i = (n + 1) / 2; i <= n - len; ++i)\n\t\tif (i + d[i] - 1 >= n - len) d2 = std::max(d2, (n - len - i + 1) * 2 - 1);\n\tif (d1 > d2){\n\t\tfor (register int i = 1; i <= len + d1; ++i)\n\t\t\tif (s[i] != '#') putchar(s[i]);\n\t\tfor (register int i = n - len + 1; i <= n; ++i)\n\t\t\tif (s[i] != '#') putchar(s[i]);\n\t}\n\telse{\n\t\tfor (register int i = 1; i <= len; ++i)\n\t\t\tif (s[i] != '#') putchar(s[i]);\n\t\tfor (register int i = n - len - d2 + 1; i <= n; ++i)\n\t\t\tif (s[i] != '#') putchar(s[i]);\n\t}\n\tputchar('\\n');\n}\n```",
        "postTime": 1584780759,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u505a\u6cd5\u697c\u4e0b\u7684 xht \u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\u3002\u5148\u9009\u53d6\u4e92\u4e3a\u53cd\u4e32\u7684\u6700\u957f\u524d\u540e\u7f00\uff0c\u7136\u540e\u5728\u5269\u4f59\u5b57\u7b26\u4e32\u4e2d\u9009\u53d6\u6700\u957f\u56de\u6587\u524d\u7f00\u6216\u540e\u7f00\u3002\n\n\u8868\u793a\u4e0d\u4f1a manacher\uff0c\u4e8e\u662f\u7528 hash \u8fc7\u4e86\u8fd9\u9053\u9898\u3002\n\n\u8003\u8651\u8bb0\u5f55\u5b57\u7b26\u4e32 $s$ \u672c\u8eab\u7684 hash \u503c\u524d\u7f00\u548c\u4ee5\u53ca\u53cd\u4e32\u7684 hash \u503c\u524d\u7f00\u548c\u3002\u5982\u679c $s$ \u7684\u4e00\u4e2a\u5b50\u4e32 $s [l,r] $ \u56de\u6587\uff0c\u90a3\u4e48\u539f\u4e32 $[l,r]$ \u7684 hash \u503c\u5fc5\u5b9a\u548c\u53cd\u4e32\u5bf9\u5e94\u4f4d\u7f6e\u7684 hash \u503c\u76f8\u7b49\u3002\n\n\u6bd4\u8d5b\u7684\u65f6\u5019\u7edd\u5bf9\u4e0d\u8981\u50cf\u6211\u4e00\u6837\u5199\u5355 hash\uff0c\u6781\u5927\u6982\u7387\u88ab hack\u3002\u5f53\u7136\u8d5b\u540e\u5c31\u65e0\u6240\u8c13\u4e86\u3002\n\n```cpp\n# include <bits/stdc++.h>\n# define rr register\n# define int long long\nconst int N=1000010,INF=0x3f3f3f3f;\nint MOD=436522843;\nint base=449;\nint hash[N],fhash[N];\nint n;\nint p[N];\nchar s[N];\nint T;\ninline int read(void){\n\tint res,f=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9')\n\t\tif(c=='-')f=-1;\n\tres=c-48;\n\twhile((c=getchar())>='0'&&c<='9')\n\t\tres=res*10+c-48;\n\treturn res*f;\n}\ninline int getval(int l,int r){\n\treturn ((hash[r]-hash[l-1]*p[r-l+1])%MOD+MOD)%MOD;\n}\ninline int fgetval(int l,int r){\n\treturn ((fhash[l]-fhash[r+1]*p[r-l+1])%MOD+MOD)%MOD;\n}\nsigned main(void){\n\tT=read();\n\twhile(T--){\n\t\tscanf(\"%s\",s+1);\n\t\tn=strlen(s+1);\n\t\tp[0]=1;\n\t\thash[0]=fhash[n+1]=0;\n\t\tfor(rr int i=1;i<=n;++i){\n\t\t\tp[i]=p[i-1]*base%MOD;\n\t\t\thash[i]=(hash[i-1]*base+(s[i]-'a'+1))%MOD;\n\t\t}\n\t\tfor(rr int i=n;i;--i){\n\t\t\tfhash[i]=(fhash[i+1]*base+(s[i]-'a'+1))%MOD;\n\t\t}\n\t\tint len=0;\n\t\tfor(rr int i=1;i<=n&&(i<n-i+1);++i){\n\t\t\tif(s[i]==s[n-i+1]){\n\t\t\t\t++len;\n\t\t\t}else{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint lans=len,rans=n-len+1;\n\t\tfor(rr int i=len+1;i<=n-len;++i){\n\t\t\tif(getval(len+1,i)==fgetval(len+1,i)){\n\t\t\t\tlans=i;\n\t\t\t}\n\t\t}\n\t\tfor(rr int i=n-len;i>=len+1;--i){\n\t\t\tif(getval(i,n-len)==fgetval(i,n-len)){\n\t\t\t\trans=i;\n\t\t\t}\n\t\t}\n\t\tif((lans-(len+1)+1)>((n-len)-rans+1)){\n\t\t\tfor(rr int i=1;i<=lans;++i){\n\t\t\t\tputchar(s[i]);\n\t\t\t}\n\t\t\tfor(rr int i=n-len+1;i<=n;++i){\n\t\t\t\tputchar(s[i]);\n\t\t\t}\n\t\t}else{\n\t\t\tfor(rr int i=1;i<=len;++i){\n\t\t\t\tputchar(s[i]);\n\t\t\t}\n\t\t\tfor(rr int i=rans;i<=n;++i){\n\t\t\t\tputchar(s[i]);\n\t\t\t}\n\t\t}\n\t\tputs(\"\");\n\t}\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1584774417,
        "uid": 108949,
        "name": "Meatherm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u5185\u5bb9\u53ef\u80fd\u8d85\u51fa\u672c\u9898\u8303\u56f4\uff0c\u5efa\u8bae\u6d4f\u89c8\u5176\u4ed6\u9898\u89e3\u660e\u786e\u57fa\u672c\u601d\u8def\u540e\u518d\u89c2\u770b\u672c\u9898\u89e3\uff0c\u53ef\u4f5c\u4e3akmp\u7b97\u6cd5\u7684\u77e5\u8bc6\u6269\u5145\u3002\n\n\u4ee5\u4e0b\u9898\u89e3\u662f\u4ece\u672c\u4eba\u535a\u5ba2\u5173\u4e8ekmp\u591a\u89d2\u5ea6\u7406\u89e3\u7684\u535a\u5ba2\u4e2d\u622a\u53d6\u7684**\u9759\u6001\u89d2\u5ea6**\u4f8b\u9898\u5206\u6790\uff0c\u5982\u9700\u5b8c\u6574\u5206\u6790\u5efa\u8bae\u8bbf\u95ee[\u591a\u89d2\u5ea6kmp\u8be6\u89e3](https://www.luogu.com.cn/blog/SingerCoder/post-zi-fu-chuan-kmp-jing-tai-jiao-du-kmp-yang-xie#)\u3002\n\n\u867d\u7136\u5982\u6b64\uff0c\u6211\u4e5f\u4f1a\u5c3d\u91cf\u7528\u6700\u7b80\u77ed\u7684\u8bed\u8a00\uff0c\u8ba9\u5927\u5bb6\u4e0d\u5fc5\u770b\u5b8c\u539f\u535a\u5ba2\u5c31\u80fd\u7406\u89e3\u9759\u6001\u89d2\u5ea6\u7684**\u6700\u957f\u524d\u540e\u7f00\u5339\u914d**\u3002\n\n\u7531\u4e8e\u76f8\u5173\u7406\u8bba\u53ef\u80fd\u5e76\u4e0d\u65b0\u9896\uff0c\u800c\u4e14\u4ec5\u4e3a\u521d\u5b66kmp\u7684\u4f5c\u8005\u81ea\u5df1\u603b\u7ed3\uff0c\u5982\u548c\u5df2\u6709\u89c2\u70b9\u91cd\u5408\uff0c\u8fd8\u8bf7\u6d77\u6db5\uff0c\u5e76\u52a1\u5fc5\u5411\u6211\u544a\u77e5\uff0c\u5728\u6b64\u611f\u6fc0\u4e0d\u5c3d\u3002\n\n# kmp\u4e0e\u6700\u957f\u524d\u540e\u7f00\u5339\u914d\uff08\u9759\u6001\u89d2\u5ea6\u5206\u6790\uff09\n\n\u6700\u57fa\u7840\u7684kmp\uff0c\u53ca\u5176\u9759\u6001\u52a8\u6001\u4e24\u79cd\u89d2\u5ea6\u7684\u7406\u89e3\uff0c\u672c\u4eba\u535a\u5ba2\u4e2d\u5df2\u6709\u53d9\u8ff0\u3002\u8fd9\u9053\u9898\u662f\u5bf9kmp\u7684**\u6700\u957f\u524d\u540e\u7f00\u5339\u914d**\u7684\u5e94\u7528\u3002\uff08\u6ce8\u610f\u9759\u6001\u52a8\u6001\u5e76\u4e0d\u51b2\u7a81\uff0c\u800c\u662f\u4e0d\u540c\u5c42\u9762\u4e0a**\u76f8\u4e92\u8865\u5145**\u7684\u5173\u7cfb\uff09\n\n+ \u52a8\u6001\u89d2\u5ea6\u7406\u89e3\uff1a\n\n  \u5b9a\u4e49i\u4e3a\u6587\u672c\u4e32a\u7684\u5339\u914d\u6307\u9488\uff0cj\u4e3a\u6a21\u5f0f\u4e32b\u7684\u5339\u914d\u6307\u9488\u3002\n\n  j=nxt[j]\u76f8\u5f53\u4e8e\u6a21\u5f0f\u4e32\u6574\u4f53\u5411\u53f3\u79fb\u52a8j-nxt[j]\n  \n  \u5982\u6b64\uff0c\u7b80\u6d01\u660e\u4e86\u3002\n  \n+ \u9759\u6001\u89d2\u5ea6\u7406\u89e3\uff1a\n\n  \u5177\u4f53\u5b9a\u4e49i\u4e3a\u6587\u672c\u4e32**\u4e0b\u6b21\u5c06\u8981**\u5339\u914d\u7684\u4f4d\u7f6e\uff0c\u5b9a\u4e49j\u4e3a\u6a21\u5f0f\u4e32**\u5df2\u7ecf\u5339\u914d**\u4e86\u7684\u4f4d\u7f6e\uff08\u6211\u4eec\u79f0\u5176\u4e3a**\u5df2\u5339\u914d\u4e32**\uff09\u3002\uff08\u56e0\u6b64\u8fdb\u4e00\u6b65\u7684\u5339\u914d\u5e94\u8be5\u662f\u5339\u914da[i]\u4e0eb[j+1]\uff09\n\n  \u8fd9\u79cd\u7406\u89e3\u89d2\u5ea6\u4e2d\u6700\u5927\u7684\u7279\u70b9\u5728\u4e8e\u5c06**\u6a21\u5f0f\u4e32\u7684\u79fb\u52a8**\uff08\u5373\u5411\u53f3\u79fb\u52a8j-nxt[j]\uff09\uff0c\u7406\u89e3\u4e3a**\u5df2\u5339\u914d\u4e32\u7684\u7f29\u77ed**(\u5373j\u7f29\u77ed\u4e3anxt[j])\u3002\u672c\u8d28\u76f8\u540c\uff0c\u53ea\u662f\u7406\u89e3\u65b9\u5f0f\u6709\u533a\u522b\uff0c\u4f46\u9759\u6001\u89d2\u5ea6\u66f4\u65b9\u4fbf\u7406\u89e3\u5982\u4f55\u6c42\u89e3**\u6700\u957f\u524d\u540e\u7f00\u5339\u914d**\u3002\n\n+ \u5b9a\u4e49**\u6700\u957f\u524d\u540e\u7f00\u5339\u914d**\uff1a\u6307\u6c42\u51fa\u4e00\u4e2a\u4e32\u7684\u524d\u7f00\u4e0e\u53e6\u4e00\u4e2a\u4e32\u7684\u540e\u7f00\u7684\u6700\u957f\u5339\u914d\uff0c\u5728kmp\u7b97\u6cd5\u4e2d\u4f53\u73b0\u4e3a\u6587\u672c\u4e32\u67d0\u5b50\u4e32\u7684\u540e\u7f00\u4e0e\u6a21\u5f0f\u4e32\u524d\u7f00\u7684\u6700\u957f\u5339\u914d\uff0c\u8fd9\u4e5f\u662fkmp\u7b97\u6cd5\u7684\u6838\u5fc3\u3002\n\n+ \u5173\u4e8ekmp\u6c42**\u6700\u957f\u524d\u540e\u7f00\u5339\u914d**\uff0c\u5c31\u662f\u5728\u5df2\u77e5\u8f6c\u79fb\u6570\u7ec4\uff0c\u5339\u914d\u6587\u672c\u4e32\u548c\u6a21\u5f0f\u4e32\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6839\u636e\u9759\u6001\u89d2\u5ea6\u7406\u89e3\u53ef\u77e5\uff1a\u201c\u5728kmp\u7b97\u6cd5\u6bcf\u6b21\u5faa\u73af\u7ed3\u675f\u540e\uff0cj\u59cb\u7ec8\u4fdd\u5b58\u7684\u662f\u6587\u672c\u4e32\u7b2ci\u4f4d\u7684\u6700\u957f\u5339\u914d\u3002\u201d\uff08\u8fd9\u53e5\u662f\u9759\u6001\u89d2\u5ea6\u7684\u6838\u5fc3\uff0c\u5efa\u8bae\u53cd\u590d\u9605\u8bfb\u7406\u89e3\uff09\u7ec6\u7a76\u4e00\u4e0b\u5b58\u7684\u8fd9\u4e2a\u5339\u914d\u7a76\u7adf\u662f\u4ec0\u4e48\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6700\u957f\u5339\u914d\u6307\u7684\u662f **\u6587\u672c\u4e32\u4ee5i\u7ed3\u5c3e\u7684\u540e\u7f00** \u548c **\u6a21\u5f0f\u4e32\u4ee5j\u7ed3\u5c3e\u7684\u524d\u7f00** \u7684\u6700\u957f\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u63d0\u5230\u7684**\u6700\u957f\u524d\u540e\u7f00\u5339\u914d**\u3002\n\n```cpp\n//\u672c\u4eba\u7684kmp\u6a21\u677f\uff0c\u76f4\u63a5\u653e\u51fa\u9632\u6b62\u8bfb\u8005\u7406\u89e3\u6709\u504f\u5dee\nfor(int i=2,j=0;i<=m;++i)\n{\n    while(j && b[i]!=b[j+1])j=nxt[j];\n    if(b[i]==b[j+1])++j;\n    nxt[i]=j;\n}\nfor(int i=1,j=0;i<=n;++i)\n{\n    while(j && a[i]!=b[j+1])j=nxt[j];\n    if(a[i]==b[j+1])++j;\n    if(j==m)\n    {\n        printf(\"%d\\n\",i-j+1); \n        j=nxt[j];\n    }\n}\n```\n\n# \u9898\u76ee\u89e3\u6790\n\n\u56de\u5230\u8fd9\u9053\u9898\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u603b\u4e32s\uff0c\u5b9a\u4e49t=\u67d0\u4e2a\u524d\u7f00+\u67d0\u4e2a\u540e\u7f00\uff08\u4e0d\u91cd\u53e0\uff09\uff0c\u4f7f\u5f97\u5b83\u4eec\u7ec4\u6210\u7684\u4e32\u56de\u6587\u3002\u6c42\u51fa\u6700\u957f\u7684\u56de\u6587\u4e32\u3002\n\n1. \u4e0d\u96be\u60f3\u5230\u6700\u57fa\u672c\u7684\u8d2a\u5fc3\uff1a\u5148\u6c42\u51fa\u7b49\u957f\u7684\u524d\u540e\u7f00\uff0c\u4f7f\u5f97\u7ec4\u6210\u7684\u4e32\u56de\u6587\uff08\u6211\u4eec\u79f0\u5176\u4e3a\u521d\u59cb\u4e32\uff09\u3002\u5219\u7531\u8d2a\u5fc3\uff0c\u521d\u59cb\u4e32\u5e94\u8be5\u8d8a\u957f\u8d8a\u597d\u3002\n\n2. \u7136\u540e\u5f97\u5230\u53bb\u6389\u521d\u59cb\u4e32\u540e\u7684\u5269\u4f59\u4e32\uff08\u79f0\u4e3a\u5269\u4f59\u5b50\u4e32\uff09\uff0c\u5219\u6211\u4eec\u9700\u8981\u5206\u522b\u6c42\u51fa\u5269\u4f59\u5b50\u4e32\u7684\u4e00\u4e2a\u524d\u7f00\u548c\u4e00\u4e2a\u540e\u7f00\uff0c\u8981\u6c42\u8fd9\u4e2a\u524d\u7f00\u548c\u540e\u7f00\u5404\u81ea\u56de\u6587\u4e14\u6700\u957f\uff0c\u5728\u4e8c\u8005\u4e2d\u9009\u62e9\u6700\u957f\u7684\uff0c\u4e0e\u521d\u59cb\u4e32\u4e00\u540c\u7ec4\u6210\u6700\u7ec8\u7684t\u3002\n\n   \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u6c42\u51fa\u5269\u4f59\u5b50\u4e32\u7684\u6700\u5927\u56de\u6587\u5b50\u4e32\uff1fmanacher\uff08~~\u672c\u4eba\u4e0d\u4f1a~~\uff09\uff1f\u6ce8\u610f\u89c2\u5bdf\u6027\u8d28\uff0c\u8fd9\u91cc\u6211\u4eec\u8981\u6c42\u7684\u6700\u5927\u56de\u6587\u5b50\u4e32\u5fc5\u987b\u662f\u5269\u4f59\u5b50\u4e32\u7684\u524d\u7f00\u6216\u540e\u7f00\uff0c\u8fd9\u79cd\u5b9a\u4e0b\u4e00\u4e2a\u7aef\u70b9\u7684\u9650\u5236\u7ed9\u4e86\u6211\u4eec\u53ef\u64cd\u4f5c\u7684\u7a7a\u95f4\uff1a\u8bbea=\u6b63\u5411\u5269\u4f59\u5b50\u4e32\uff0cb=\u53cd\u5411\u5269\u4f59\u5b50\u4e32\uff0c\u5e76\u8bbe\u8ba1\u51fd\u6570kmp(char $ * $a,char $ * $b\uff09\uff0c\u8fd4\u56de\u503c\u4e3aa\u4e32\uff08\u6587\u672c\u4e32\uff09\u540e\u7f00\u4e0eb\u4e32\uff08\u6a21\u5f0f\u4e32\uff09\u524d\u7f00\u7684\u6700\u957f\u5339\u914d\uff08\u4e0d\u7406\u89e3\u53ef\u4ee5\u89c1\u4e0akmp\u4e0e**\u6700\u957f\u524d\u540e\u7f00\u5339\u914d**\uff0c\u6216\u770b\u4e0b\u65b9\u4ee3\u7801\uff09\u3002\u5219\uff1a\n\n   \u6b63\u5411\uff08\u5de6\u4fa7\uff09\u6700\u957f\u56de\u6587\u957f\u5ea6len1=kmp(b,a);\uff08\u53cd\u5411\u540e\u7f00\u548c\u6b63\u5411\u524d\u7f00\u7684\u6700\u5927\u5339\u914d\uff09\n  \n   \u53cd\u5411\uff08\u53f3\u4fa7\uff09\u6700\u957f\u56de\u6587\u957f\u5ea6len2=kmp(a,b);\uff08\u6b63\u5411\u540e\u7f00\u548c\u53cd\u5411\u524d\u7f00\u7684\u6700\u5927\u5339\u914d\uff09\n  \n   \u7531\u6b64\u5f97\u5230\u5269\u4f59\u5b50\u4e32\u4e24\u4fa7\u5404\u81ea\u7684\u6700\u5927\u56de\u6587\u5b50\u4e32\u3002\n  \n   Talk is cheap,show me the code\uff08\u5176\u5b9ecf\u4e0a\u7ed9\u7684\u6b63\u89e3\uff0c\u662f\u76f4\u63a5\u628a\u6211\u5728\u6b64\u7406\u89e3\u7684\u6700\u957f\u524d\u540e\u7f00\u7684\u5339\u914d\uff0c\u53d8\u6210\u4e86\u6c42\u7ec4\u5408\u51fa\u7684\u65b0\u4e32\u7684nxt\u6570\u7ec4\u3002\u7a83\u4ee5\u4e3a\u8fd9\u6837\u867d\u5de7\u5999\uff0c\u5374\u4e0d\u80fd\u4f53\u73b0kmp\u6c42\u6700\u957f\u524d\u540e\u7f00\u5339\u914d\u7684\u5b9e\u8d28\uff09\n  \n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int MAXN=1000010;\nint n,len,len1,len2;//\u521d\u59cb\u957f\u5ea6\uff0c\u5b50\u4e32\u957f\u5ea6\uff0c\u6b63\u5411\u56de\u6587\u957f\u5ea6\uff0c\u53cd\u5411\u56de\u6587\u957f\u5ea6 \nchar s[MAXN],a[MAXN],b[MAXN];//\u521d\u59cb\u5b57\u7b26\u4e32\uff0c\u6b63\u5411\u5b50\u4e32\uff0c\u53cd\u5411\u5b50\u4e32 \n\nint nxt[MAXN];\nint kmp(char *a,char *b)//\u6c42a\u7684\u540e\u7f00\u548cb\u7684\u524d\u7f00\u7684\u6700\u957f\u5339\u914d \n{\n\tfor(int i=2,j=0;i<=len;++i)\n\t{\n\t\twhile(j && b[i]!=b[j+1])j=nxt[j];\n\t\tif(b[i]==b[j+1])++j;\n\t\tnxt[i]=j;\n\t}\n\tfor(int i=1,j=0;i<=len;++i)\n\t{\n\t\twhile(j && a[i]!=b[j+1])j=nxt[j];\n\t\tif(a[i]==b[j+1])++j;\n\t\tif(i==len)return j;//\u76f4\u63a5\u8fd4\u56de\u6587\u672c\u4e32\u7b2ci\u4f4d\u7684\u6700\u957f\u524d\u540e\u7f00\u5339\u914d\u957f\u5ea6\n\t}\n}\nvoid solve()\n{\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\t//\u521d\u59cb\u5316\u56de\u6587\n\tint p1=0,p2=n+1;\n\twhile(p1+1<p2-1 && s[p1+1]==s[p2-1]){++p1;--p2;}//\u524d\u540e\u521d\u59cb\u4e32\u4e0d\u80fd\u91cd\u53e0 \n\t//\u6536\u96c6\u6b63\u53cd\u5411\u5b50\u4e32 \n\tlen=p2-p1-1;\n\tfor(int i=1;i<=len;++i){a[i]=s[p1+i];b[i]=s[p2-i];}\n\t//\u53cc\u5411\u6c42\u5b50\u4e32\u7684\u6700\u5927\u56de\u6587\n\tlen1=kmp(b,a);//\u6b63\u5411\u6700\u5927\u56de\u6587 \n\tlen2=kmp(a,b);//\u53cd\u5411\u6700\u5927\u56de\u6587 \n\t//\u8f93\u51fa\u6700\u7ec8\u5b57\u7b26\u4e32 \n\tfor(int i=1;i<=p1;++i)putchar(s[i]);//\u524d\u521d\u59cb\u4e32 \n\tif(len1>len2)for(int i=1;i<=len1;++i)putchar(s[p1+i]);//\u6b63\u53cd\u5411\u56de\u6587\u4e2d\u6700\u5927\u7684 \n\telse for(int i=len2;i>=1;--i)putchar(s[p2-i]);\n\tfor(int i=p2;i<=n;++i)putchar(s[i]);//\u540e\u521d\u59cb\u4e32 \n\tprintf(\"\\n\");\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;++i)solve();\n\treturn 0;\n}\n```\n\n\u4ec5\u4e3a\u4e2a\u4eba\u7406\u89e3\uff0c\u5e76\u975e\u65b0\u7406\u8bba\uff0c\u6b22\u8fce\u4ea4\u6d41\u3002",
        "postTime": 1584969716,
        "uid": 239241,
        "name": "Singercoder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a  \n\u7ed9\u51fa\u5b57\u7b26\u4e32 $s$ \uff0c\u627e\u51fa\u6700\u957f\u7684\u56de\u6587\u4e32 $t$ \uff0c\u6ee1\u8db3\uff1a  \n- $|t| \\leq |s|$\uff0c\u5176\u4e2d $|s|$ \u8868\u793a\u5b57\u7b26\u4e32 $s$ \u7684\u957f\u5ea6\u3002\n- \u5b58\u5728\u5b57\u7b26\u4e32 $a, b$\uff08\u53ef\u4ee5\u4e3a\u7a7a\u4e32\uff09\uff0c\u4f7f\u5f97 $t = a+b$ \uff08 `+` \u8868\u793a\u8fde\u63a5\uff09\uff0c\u4e14 $a$ \u4e3a $s$ \u7684\u524d\u7f00\uff0c$b$ \u4e3a $s$ \u7684\u540e\u7f00\u3002  \n\n$1\\leq |s|\\leq 10^6$\n\n### $\\mathcal O(n^2)$ \u89e3\u6cd5\n\n\u627e\u51fa\u6700\u5927\u7684 $p (1\\leq p\\leq \\left\\lfloor\\dfrac{|s|}{2}\\right\\rfloor)$\uff0c\u4f7f\u5f97 $\\text{pre}(s,p)=\\text{rev}(\\text{suf}(s,p))$\uff0c\u5219 $p$ \u4e00\u5b9a\u4e3a $a$ \u7684\u524d\u7f00\uff0c\u4e14 $\\text{rev}(p)$ \u4e3a $b$ \u7684\u540e\u7f00\u3002  \n\u5728\u5269\u4f59\u7684\u5b50\u4e32 $s\\,[p+1,|s|-p]$ \u4e2d\u627e\u51fa\u4e3a\u56de\u6587\u4e32\u7684\u6700\u957f\u524d\u7f00\u4e0e\u6700\u957f\u540e\u7f00\uff0c\u9009\u957f\u5ea6\u8f83\u5927\u7684\u90a3\u4e00\u4e2a\u4f5c\u4e3a\u7b54\u6848\u3002  \n\n\u4f8b\u5982\uff0c`s=abcdaaadacba`\uff0c\u6b64\u65f6 $p=3$ \uff0c\u5728\u5269\u4f59\u7684\u5b50\u4e32 `daaada` \u4e2d\u627e\u51fa\u7684\u4e3a\u56de\u6587\u4e32\u7684\u6700\u957f\u524d\u7f00\u4e3a `daaad`\uff0c\u6700\u957f\u540e\u7f00\u4e3a `ada`\uff0c\u7531\u4e8e\u627e\u51fa\u7684\u524d\u7f00\u957f\u5ea6\u8f83\u5927\uff0c\u56e0\u6b64\u9009 `daaad` \u4f5c\u4e3a\u7b54\u6848\uff0c\u53ef\u77e5 `a=abcdaaad`\uff0c`b=cba`\uff0c`t=abcdaaadcba`\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08[\u5feb\u8bfb\u6a21\u677f](https://www.luogu.com.cn/blog/andyli/read-template)\uff09\uff1a  \n```cpp\n#include <algorithm>\n#include <cstring>\n#include <string>\nconst int maxn = 5005;\n\nchar str[maxn];\nbool ispalid(const std::string& str) // \u5b57\u7b26\u4e32 str \u662f\u5426\u4e3a\u56de\u6587\u4e32\n{\n    std::string t = str;\n    std::reverse(t.begin(), t.end());\n    return t == str;\n}\nint main()\n{\n    int q;\n    io.read(q);\n    while (q--) {\n        io.read(str + 1);\n        int n = strlen(str + 1);\n        std::string s(str + 1);\n        int p = 0;\n        for (int i = 1; i <= n / 2; i++)\n            if (str[i] == str[n - i + 1])\n                p = i;\n            else\n                break;\n        int cnt1 = 0, cnt2 = 0;\n        for (int i = p + 1; i <= n - p; i++) {\n            if (ispalid(s.substr(p, i - p)))\n                cnt1 = i;\n            if (ispalid(s.substr(n - i, i - p)))\n                cnt2 = i;\n        }\n        for (int i = 1; i <= p; i++)\n            io.write(str[i]);\n        if (cnt1 > cnt2)\n            for (int i = p + 1; i <= cnt1; i++)\n                io.write(str[i]);\n        else\n            for (int i = n - cnt2 + 1; i <= n - p; i++)\n                io.write(str[i]);\n        for (int i = n - p + 1; i <= n; i++)\n            io.write(str[i]);\n        writeln();\n    }\n    return 0;\n}\n```\n\n### $\\mathcal O(n)$ \u89e3\u6cd5\n\n\u628a $\\mathcal O(n^2)$ \u89e3\u6cd5\u4e2d\u5224\u65ad\u524d\u7f00\u4e0e\u540e\u7f00\u662f\u5426\u4e3a\u56de\u6587\u4e32\u7684\u6734\u7d20\u505a\u6cd5\u6539\u4e3a\u53cc\u6a21\u6570\u54c8\u5e0c\u5339\u914d\u5373\u53ef\u3002  \n\n\u4ee3\u7801\u5982\u4e0b\uff08[\u5feb\u8bfb\u6a21\u677f](https://www.luogu.com.cn/blog/andyli/read-template)\uff09\uff1a  \n```cpp\n#include <algorithm>\n#include <cstring>\nconst int maxn = 1000005, MOD1 = 1e9 + 7, MOD2 = 1e9 + 9, b1 = 31, b2 = 79;\n\nint p1[maxn], p2[maxn], hash1[maxn], hash2[maxn], hash3[maxn], hash4[maxn], n;\nchar str[maxn];\nbool issame(int l, int r, int x, int y) // \u5b50\u4e32 l-r \u662f\u5426\u4e0e rev(x-y) \u76f8\u7b49\n{\n    x = n - x + 1, y = n - y + 1;\n    std::swap(x, y);\n    int x1 = (hash1[r] - 1LL * hash1[l - 1] * p1[r - l + 1] % MOD1 + MOD1) % MOD1;\n    int x2 = (hash2[r] - 1LL * hash2[l - 1] * p2[r - l + 1] % MOD2 + MOD2) % MOD2;\n    int x3 = (hash3[y] - 1LL * hash3[x - 1] * p1[y - x + 1] % MOD1 + MOD1) % MOD1;\n    int x4 = (hash4[y] - 1LL * hash4[x - 1] * p2[y - x + 1] % MOD2 + MOD2) % MOD2;\n    return x1 == x3 && x2 == x4;\n}\nbool ispalid(int l, int r) // \u5b50\u4e32 l-r \u662f\u5426\u4e3a\u56de\u6587\u4e32\n{\n    int len = r - l + 1;\n    return issame(l, l + (len - 1) / 2, l + len / 2, r);\n}\nint main()\n{\n    int q;\n    io.read(q);\n    p1[0] = p2[0] = 1;\n    for (int i = 1; i <= 1000000; i++)\n        p1[i] = 1LL * p1[i - 1] * b1 % MOD1, p2[i] = 1LL * p2[i - 1] * b2 % MOD2;\n    while (q--) {\n        io.read(str + 1);\n        n = strlen(str + 1);\n        for (int i = 1; i <= n; i++)\n            hash1[i] = (1LL * hash1[i - 1] * b1 + str[i]) % MOD1;\n        for (int i = 1; i <= n; i++)\n            hash2[i] = (1LL * hash2[i - 1] * b2 + str[i]) % MOD2;\n        for (int i = n; i >= 1; i--)\n            hash3[n - i + 1] = (1LL * hash3[n - i + 1 - 1] * b1 + str[i]) % MOD1;\n        for (int i = n; i >= 1; i--)\n            hash4[n - i + 1] = (1LL * hash4[n - i + 1 - 1] * b2 + str[i]) % MOD2;\n        int p = 0;\n        for (int i = 1; i <= n / 2; i++)\n            if (str[i] == str[n - i + 1])\n                p = i;\n            else\n                break;\n        int cnt1 = 0, cnt2 = 0;\n        for (int i = p + 1; i <= n - p; i++) {\n            if (ispalid(p + 1, i))\n                cnt1 = i;\n            if (ispalid(n - i + 1, n - p))\n                cnt2 = i;\n        }\n        for (int i = 1; i <= p; i++)\n            io.write(str[i]);\n        if (cnt1 > cnt2)\n            for (int i = p + 1; i <= cnt1; i++)\n                io.write(str[i]);\n        else\n            for (int i = n - cnt2 + 1; i <= n - p; i++)\n                io.write(str[i]);\n        for (int i = n - p + 1; i <= n; i++)\n            io.write(str[i]);\n        writeln();\n    }\n    return 0;\n}\n```",
        "postTime": 1584770892,
        "uid": 84282,
        "name": "andyli",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u7b54\u6848\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\n\n1. \u6ee1\u8db3 $\\forall i \\in [1,k] s_i =s_{i-k+1}$ \u7684\u6700\u5927\u7684 $k$ \u5bf9\u5e94\u7684\u957f\u5ea6\u4e3a $k$ \u7684\u524d\u7f00\u548c\u540e\u7f00\uff1b\n2. \u5220\u9664 1 \u540e\u5f62\u6210\u7684\u65b0\u4e32\u7684\u6700\u957f\u56de\u6587\u524d/\u540e\u7f00\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u626b\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u90e8\u5206\uff0c\u901a\u8fc7\u679a\u4e3e\u4e2d\u95f4\u70b9\u5411\u4e24\u8fb9\u6269\u5c55\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u53ef\u4ee5\u901a\u8fc7 D1\u3002\n\n\u5f53\u7136\u53ef\u4ee5\u901a\u8fc7 Manacher \u6765\u4f18\u5316\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u4ece\u800c\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 $O(n)$\uff0c\u53ef\u4ee5\u901a\u8fc7 D2\u3002\n\n\u4e0b\u9762\u662f $O(n)$ \u7684\u4ee3\u7801\uff1a\n\n```cpp\n// Problem : D2. Prefix-Suffix Palindrome (Hard version)\n// Contest : Codeforces Global Round 7\n// URL : https://codeforces.com/contest/1326/problem/D2\n// Author : StudyingFather\n// Site : https://studyingfather.com\n// Memory Limit : 256 MB\n// Time Limit : 2000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\n#include <cstring>\n#include <iostream>\nusing namespace std;\nchar s[1000005],t[2000005];\nint f[2000005];\nvoid init()\n{\n t[0]=t[1]='#';\n int len=strlen(s);\n for(int i=0;i<len;i++)\n {\n  t[2*i+2]=s[i];\n  t[2*i+3]='#';\n }\n t[2*len+2]=0;\n}\nint main()\n{\n int T;\n cin>>T;\n while(T--)\n {\n  cin>>s;\n  init();\n  int len=strlen(t+1),l=1,r=len;\n  while(l<=r)\n  {\n   if(t[l]==t[r])l++,r--;\n   else break;\n  }\n  int ans=0,nl=l,nr=l,maxr=l,mid=l;\n  for(int i=l;i<=r;i++)\n  {\n   if(i<maxr)\n    f[i]=min(f[mid]+(mid-i),f[mid*2-i]);\n   else\n    f[i]=1;\n   while(t[i+f[i]]==t[i-f[i]]&&i+f[i]<=r&&i-f[i]>=l)\n    f[i]++;\n   if(f[i]+i>maxr)\n   {\n    maxr=f[i]+i;\n    mid=i;\n   }\n   if((i-f[i]<l||i+f[i]>r)&&f[i]>ans)\n   {\n    nl=i-f[i]+1;\n    nr=i+f[i]-1;\n    ans=f[i];\n   }\n  }\n  if(l>r)\n  {\n   cout<<s<<endl;\n   continue;\n  }\n  for(int i=1;i<l;i++)\n   if(t[i]!='#')cout<<t[i];\n  for(int i=nl;i<=nr;i++)\n   if(t[i]!='#')cout<<t[i];\n  for(int i=r+1;i<=len;i++)\n   if(t[i]!='#')cout<<t[i];\n  cout<<endl;\n }\n return 0;\n}",
        "postTime": 1584762207,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1KMP\u7684\u9898\u89e3\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u73a9\u4e00\u4e0b\u6837\u4f8b\uff0c\u6bd4\u5982```abcdfdcecba```\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u4e24\u5934\u7684```abc```\u548c```cba```\u662f\u201c\u767d\u53d6\u767d\u4e0d\u53bb\u201d\u7684\u3002\u4e25\u683c\u6765\u8bb2\uff0c\u5982\u679c```ans```\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\u90a3\u5728\u5176\u4e24\u6bb5\u5404\u6dfb\u52a0\u540c\u6837\u7684\u5b57\u6bcd\uff0c```ans```\u5c31\u4f1a\u53d8\u5927\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u9996\u5c3e\u4e24\u7aef\u7684\u56de\u6587\u4e32\u3002\u6bd4\u5982```abcdfdcecba```\u5c31\u53d8\u6210\u4e86```dfdce```\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u5b50\u4e32\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u5b83\u6700\u957f\u56de\u6587\u524d\u7f00\uff08\u548c\u540e\u7f00\uff0c\u4f46\u53ea\u9700\u8981reverse\u4e00\u4e0b\u5c31\u53ef\u4ee5\u8f6c\u6362\uff09\u3002\n\n\u5bb9\u6613\u60f3\u51fa\u4e00\u4e2a$O(n^2)$\u7684\u7b97\u6cd5\uff0c\u4f46\u8fd9\u6837\u80af\u5b9a\u4f1aT\u6389\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u7528KMP\u5bf9\u95ee\u9898\u8fdb\u884c\u8f6c\u6362\uff1a\u5c06\u8fd9\u4e2a\u5b50\u4e32reverse\u4e00\u4e0b\uff0c\u6dfb\u52a0\u5230\u540e\u9762\uff0c\u5e76\u5728\u5176\u4e2d\u95f4\u63d2\u4e00\u4e2a\u4efb\u610f\u5b57\u7b26\u3002\u4f8b\u5982\uff0c```dfdce```\u53ef\u53d8\u6210```dfdce#ecdfd```\u3002\u5bf9\u8fd9\u4e2a\u4e32\uff0c\u6211\u4eec\u8dd1\u4e00\u904dkmp\u5373\u53ef\u3002\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define rep(i, m, n) for (int i = m; i <= n; i++)\n#define per(i, m, n) for (int i = m; i >= n; i--)\n#define pb push_back\n#define mp make_pair\n#define all(v) v.begin(), v.end()\n#define INF 0x3f3f3f3f\nusing namespace std;\n\nint kmp(string s) {\n    string kmprev = s;\n    reverse(all(kmprev));\n    string kmp = s + \"#\" + kmprev;\n    vector<int> lps(kmp.size(), 0);\n    for (int i = 1; i < (int) lps.size(); i++) {\n        int prev_idx = lps[i - 1];\n        while (prev_idx > 0 && kmp[i] != kmp[prev_idx]) {\n            prev_idx = lps[prev_idx - 1];\n        }\n        lps[i] = prev_idx + (kmp[i] == kmp[prev_idx] ? 1 : 0);\n    }\n    return lps[lps.size() - 1];\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n    // KMP O(n) to find the longest palindrome prefix\n    int testcase;\n    cin >> testcase;\n    while (testcase--) {\n        string str;\n        cin >> str;\n        int l = 0, r = str.length() - 1, ans = 0;\n        while (l < r) {\n            if (str[l] == str[r]) ans++, l++, r--;\n            else break;\n        }\n        string s = str.substr(ans, str.length() - 2 * ans);\n        string x;\n        int res = kmp(s);\n        x = s.substr(0, res);\n        reverse(all(s));\n        int res2 = kmp(s);\n        if (res2 > res) x = s.substr(0, res2);\n        string y = str.substr(0, ans);\n        string final_answer;\n        final_answer = y + x;\n        reverse(all(y));\n        final_answer += y;\n        cout << final_answer << \"\\n\";\n    }\n    return 0;\n}\n```",
        "postTime": 1604171077,
        "uid": 306962,
        "name": "MVP_Harry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u606d\u559c\u4f60\u53d1\u73b0\u4e00\u53ea\u6570\u636e\u7ed3\u6784\u5b66\u50bb\u4e86\u7684 sb\u2026\u2026\n\n\u5148\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u6b63\u53cd\u6c42\u4e00\u904d\uff0c\u7b54\u6848\u8f6c\u6362\u6210\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u5934/\u7ed3\u5c3e\uff0c\u6700\u957f\u56de\u6587\u4e32\uff0c\u5e76\u4e14\u957f\u5ea6 $\\le len$\u3002\n\n\u3002\u3002\u3002\n\n\u3002\u3002\u3002\n\n\u3002\u3002\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u4f60 manacher \u5fd8\u4e86\u3002\u3002\u3002\n\n\u6ca1\u4e8b\uff0c\u8fd8\u6709\u56de\u6587\u6811\uff01\n\n\u6b63\u53cd\u5efa\u51fa\u56de\u6587\u6811\uff0c\u5728\u56de\u6587\u6811\u4e0a\u500d\u589e\u5373\u53ef\u3002\n\n\u65f6\u95f4 $\\mathcal{O}(n\\log n)$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=1000005;\nconst ll base=233;\nconst ll mod1=998244353;\nconst ll mod2=1e9+7;\nint n,k,ch[maxn][26],fa[maxn],len[maxn],pos[maxn],f[maxn][21],last,cnt;\nchar s[maxn];\nstruct HASH\n{\n\tll a,b;\n\tHASH(ll a_=0,ll b_=0):a(a_),b(b_) { }\n\tinline HASH rev() { return HASH((mod1-a)%mod1,(mod2-b)%mod2); }\n\tinline HASH operator * (const ll &x) { return HASH(a*x%mod1,b*x%mod2); }\n\tinline HASH operator * (const HASH &x) { return HASH(a*x.a%mod1,b*x.b%mod2); }\n\tinline HASH operator + (const HASH &x) { return HASH((a+x.a)%mod1,(b+x.b)%mod2); }\n\tinline bool operator == (const HASH &x) { return a==x.a && b==x.b; }\n};\nHASH sum[2][maxn],b[maxn];\ninline HASH get1(int l,int r) { return sum[0][r]+(sum[0][l-1]*b[r-l+1].rev()); }\ninline HASH get2(int l,int r) { return sum[1][l]+(sum[1][r+1]*b[r-l+1].rev()); }\ninline void chkmax(int &a,int b) { a=(a>b)?a:b; }\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%s\",s+1); n=strlen(s+1);\n\t\tb[0]=HASH(1,1);\n\t\tfor(int i=1;i<=n;i++) b[i]=b[i-1]*base,sum[0][i]=(sum[0][i-1]*base)+HASH(s[i],s[i]);\n\t\tsum[1][n+1]=HASH(0,0);\n\t\tfor(int i=n;i;i--) sum[1][i]=(sum[1][i+1]*base)+HASH(s[i],s[i]);\n\t\tint res=0,l_=0,r_=n+1;\n\t\ts[0]='#',len[0]=0,len[1]=-1,fa[0]=1,cnt=1,last=0;\n\t\tint p,c,r,q;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tp=last,c=s[i]-'a';\n\t\t\twhile(s[i-len[p]-1]!=s[i]) p=fa[p];\n\t\t\tif(!ch[p][c])\n\t\t\t{\n\t\t\t\tr=++cnt,len[r]=len[p]+2,q=fa[p];\n\t\t\t\twhile(s[i-len[q]-1]!=s[i]) q=fa[q];\n\t\t\t\tfa[r]=ch[q][c],ch[p][c]=r;\n\t\t\t}\n\t\t\tlast=ch[p][c],pos[i]=last;\n\t\t}\n\t\tfor(int i=0;i<=cnt;i++) f[i][0]=fa[i];\n\t\tfor(int j=1;j<=20;j++)\n\t\t\tfor(int i=0;i<=cnt;i++) f[i][j]=f[f[i][j-1]][j-1];\n\t\tfor(int i=0;i<=n/2;i++)\n\t\t\tif(sum[0][i]==sum[1][n-i+1])\n\t\t\t{\n\t\t\t\tint x=pos[n-i];\n\t\t\t\tfor(int j=20;j>=0;j--)\n\t\t\t\t\tif(f[x][j] && len[f[x][j]]>n-2*i) x=f[x][j];\n\t\t\t\tif(len[x]>n-2*i) x=fa[x];\n\t\t\t\tif(len[x]+2*i>res)\n\t\t\t\t\tres=len[x]+2*i,l_=i,r_=n-i+1-len[x];\n\t\t\t}\n\t\tfor(int i=0;i<=cnt;i++)\n\t\t{\n\t\t\tfa[i]=len[i]=pos[i]=0;\n\t\t\tmemset(ch[i],0,sizeof(ch[i]));\n\t\t}\n\t\tlast=cnt=0;\n\t\treverse(s+1,s+n+1);\n\t\ts[0]='#',len[1]=-1,fa[0]=1,cnt=1,last=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tp=last,c=s[i]-'a';\n\t\t\twhile(s[i-len[p]-1]!=s[i]) p=fa[p];\n\t\t\tif(!ch[p][c])\n\t\t\t{\n\t\t\t\tr=++cnt,len[r]=len[p]+2,q=fa[p];\n\t\t\t\twhile(s[i-len[q]-1]!=s[i]) q=fa[q];\n\t\t\t\tfa[r]=ch[q][c],ch[p][c]=r;\n\t\t\t}\n\t\t\tlast=ch[p][c],pos[i]=last;\n\t\t}\n\t\tfor(int i=0;i<=cnt;i++) f[i][0]=fa[i];\n\t\tfor(int j=1;j<=20;j++)\n\t\t\tfor(int i=0;i<=cnt;i++) f[i][j]=f[f[i][j-1]][j-1];\n\t\tfor(int i=0;i<=n/2;i++)\n\t\t\tif(sum[0][i]==sum[1][n-i+1])\n\t\t\t{\n\t\t\t\tint x=pos[n-i];\n\t\t\t\tfor(int j=20;j>=0;j--)\n\t\t\t\t\tif(f[x][j] && len[f[x][j]]>n-2*i) x=f[x][j];\n\t\t\t\tif(len[x]>n-2*i) x=fa[x];\n\t\t\t\tif(len[x]+2*i>res)\n\t\t\t\t\tres=len[x]+2*i,l_=i+len[x],r_=n-i+1;\n\t\t\t}\n\t\treverse(s+1,s+n+1);\n\t\tfor(int i=1;i<=l_;i++) putchar(s[i]);\n\t\tfor(int i=r_;i<=n;i++) putchar(s[i]);\n\t\tputchar('\\n');\n\t\tfor(int i=0;i<=cnt;i++)\n\t\t{\n\t\t\tfa[i]=len[i]=0;\n\t\t\tmemset(ch[i],0,sizeof(ch[i]));\n\t\t}\n\t\tlast=cnt=0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1598516647,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u5b57\u7b26\u4e32hash\u5b9e\u5728\u662f\u592a\u9999\u4e86\n\n\u6211\u4eec\u8bbe $str[1:l]+str[n-r+1:n]$ \u662f\u56de\u6587\u4e32\uff0c$k=\\min(l,r)$\uff0c\u90a3\u4e48 $str[i]=str[n-i+1](1\\le i\\le k)$\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u9650\u5236\u7684 $k$ \u662f\u4e0d\u5927\u4e8e\u67d0\u4e2a\u4e0a\u754c $k'$ \u7684\u3002\n\n\u9996\u5148 $l+r\\ge 2k'$\uff0c\u5426\u5219\u5c31\u4e0e\u6700\u503c\u6027\u77db\u76fe\u3002\n\n\u82e5 $k$ \u6ca1\u6709\u53d6\u5230\u53ef\u80fd\u7684\u6700\u5927\u503c\uff0c\u4e0d\u59a8\u8bbe $k=l$\uff0c\u90a3\u4e48\u6211\u4eec\u5c06 $l$ \u52a0 1\uff0c\u628a $r$ \u51cf 1\uff0c\u7531 $l<k'$ \u5f97 $str[l+1]=str[n-l]$\uff0c\u53c8\u7531 $l,r$ \u5408\u6cd5\u5f97 $str[n-l]=str[n-r]$\uff0c\u6240\u4ee5 $l+1,r-1$ \u4e5f\u662f\u5408\u6cd5\u7684\u3002\n\n\u6240\u4ee5 $l=k'$ \u6216 $r=k'$\uff0c\u7136\u540e\u5c31\u662f\u5728 $[k'+1,n-k']$ \u4e2d\u53d6\u4e00\u4e2a\u6700\u957f\u7684\u56de\u6587\u524d\u7f00\u6216\u56de\u6587\u540e\u7f00\u4e86\u3002\n\n\u8fd9\u4e2a\u7528\u5b57\u7b26\u4e32hash\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u56e0\u4e3a\u6211\u4e0d\u662f\u5f53\u573a\u6253\u7684\uff0c\u4e0d\u4f1a\u6709\u4ebahack\u6211\uff0c\u6240\u4ee5\u6211\u5c31\u7b80\u5355\u7684\u5199\u4e86\u5355hash\uff0c\u8d5b\u573a\u4e0a\u7684\u8bdd\u4e00\u822c8\u6b21hash\u5c31\u7406\u8bba\u4e0a\u5361\u4e0d\u52a8\u4e86\uff0c\u7136\u800c\u5b9e\u9645\u4e0a\u7a0d\u5fae\u591a\u4e00\u70b9\u5c31\u884c\u4e86\uff0c\u6bd5\u7adf\u8d5b\u573a\u4e0a\u65f6\u95f4\u5b9d\u8d35\uff0c\u5199\u5355hash\u548c\u53cchash\u7684\u4eba\u5927\u628a\uff08\u9003\n\n```cpp\n#include<bits/stdc++.h>\n#define Rint register int\n#define MP make_pair\n#define fi first\n#define se second\n#define PB push_back\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> pii; // \u6ce8\u610f\u5fc5\u8981\u65f6\u6539\u7c7b\u578b\ntypedef vector<int> vi;\ntemplate<typename T>\ninline void read(T &x){\n    int ch = getchar(); x = 0;\n    bool f = false;\n    double d = 1;\n    for(;ch != '-' && (ch < '0' || ch > '9');ch = getchar());\n    if(ch == '-'){f = true; ch = getchar();}\n    for(;ch >= '0' && ch <= '9';ch = getchar()) x = x * 10 + ch - '0';\n    if(ch == '.') for(ch = getchar();ch >= '0' && ch <= '9';ch = getchar()) x += (ch - '0') * (d *= 0.1);\n    if(f) x = -x;\n}\ntemplate<typename T>\ninline bool chkmax(T &a, const T &b){if(a < b) return a = b, 1; return 0;}\ntemplate<typename T>\ninline bool chkmin(T &a, const T &b){if(a > b) return a = b, 1; return 0;}\nconst int N = 1000003, mod = 1e9 + 7, X = 233333;\nint t, n, k, ans;\nchar str[N];\nLL pre[N], suf[N], pw[N];\ninline bool check(int l, int r){\n    LL val1 = (pre[r] - (LL) pre[l - 1] * pw[r - l + 1] % mod + mod) % mod;\n    LL val2 = (suf[l] - (LL) suf[r + 1] * pw[r - l + 1] % mod + mod) % mod;\n    return val1 == val2;\n}\nint main(){\n    read(t);\n    pw[0] = 1;\n    for(Rint i = 1;i <= N - 3;++ i) pw[i] = (LL) pw[i - 1] * X % mod;\n    while(t --){\n        scanf(\"%s\", str + 1); n = strlen(str + 1); k = 0;\n        while(k < (n >> 1) && str[k + 1] == str[n - k]) ++ k;\n        pre[k] = suf[n - k + 1] = 0;\n        for(Rint i = k + 1;i <= n - k;++ i) pre[i] = ((LL) pre[i - 1] * X + str[i]) % mod;\n        for(Rint i = n - k;i > k;-- i) suf[i] = ((LL) suf[i + 1] * X + str[i]) % mod;\n        for(ans = n - 2 * k;~ans;-- ans){\n            if(check(k + 1, k + ans)){\n                for(Rint i = 1;i <= k + ans;++ i) putchar(str[i]);\n                for(Rint i = n - k + 1;i <= n;++ i) putchar(str[i]);\n                putchar('\\n'); break;\n            }\n            if(check(n - k - ans + 1, n - k)){\n                for(Rint i = 1;i <= k;++ i) putchar(str[i]);\n                for(Rint i = n - k - ans + 1;i <= n;++ i) putchar(str[i]);\n                putchar('\\n'); break;\n            }\n        }\n    }\n}\n```",
        "postTime": 1584843009,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u5148\u6c42\u51fa\u9996\u5c3e\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\uff0c\u7136\u540e\u4e2d\u95f4\u90e8\u5206\u7528manacher\u6c42\u524d\u7f00\u7684\u56de\u6587\u548c\u540e\u7f00\u7684\u56de\u6587\u7684\u6700\u5927\u503c\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint nxt[3000001];\nint mlc(string s)\n{\n\tstring t = \"-*\";\n\tfor (int i = 0; i < s.length(); i++)\n\t{\n\t\tt +=s[i];\n\t\tt += \"*\";\n\t}\n\tint ans = 0,mx=1,mid=1;\n\tfor (int i = 1; i < t.length(); i++)\n\t{\n\t\tif (i < mx)\n\t\t\tnxt[i] = min(mx - i, nxt[2 * mid - i]);\n\t\telse\n\t\t\tnxt[i] = 1;\n\t\twhile (t[i + nxt[i]] == t[i - nxt[i]])\n\t\t\tnxt[i]++;\n\t\tif (i + nxt[i] > mx)\n\t\t{\n\t\t\tmx = i + nxt[i];\n\t\t\tmid = i;\n\t\t}\n\t\tif (i - nxt[i] == 0)\n\t\t{\n\t\t\tans = i;\n\t\t\t\n\t\t}\n\t\t\t\n\t}\n\treturn ans-1;\n}\nint main()\n{\n\tint n;\n\tcin >> n;\n\twhile (n--)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tint l = 0;\n\t\tint r = s.length() - 1;\n\t\twhile (l <= r && s[l] == s[r])\n\t\t\tr--, l++;\n\t\tif (l > r)\n\t\t{\n\t\t\tcout << s << \"\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring h1 = s.substr(l, r - l + 1);\n\t\t\tstring h2 = h1;\n\t\t\treverse(h2.begin(), h2.end());\n\t\t\tint len1 = mlc(h1);\n\t\t\tint len2 = mlc(h2);\n\t\t\tif (len1 >= len2)\n\t\t\t\tcout << s.substr(0, l ) + s.substr(l, len1) + s.substr(r + 1) << \"\\n\";\n\t\t\telse\n\t\t\t\tcout << s.substr(0, l ) + s.substr(r - len2 + 1, len2) + s.substr(r + 1) << \"\\n\";\n\t\t}\n\t}\n}\n\n```\n",
        "postTime": 1584774894,
        "uid": 210451,
        "name": "liqiqi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \uff0c\u6c42\u4e00\u4e2a\u4e0d\u8d85\u8fc7 $s$ \u957f\u5ea6\u7684\u56de\u6587\u4e32 $t$ \u6ee1\u8db3 $t=a+b$\uff0c\u5176\u4e2d $a$ \u4e3a $s$ \u7684\u524d\u7f00\uff0c$b$ \u4e3a $s$ \u540e\u7f00\uff0c\u8981\u6c42 $t$ \u7684\u957f\u5ea6\u5c3d\u53ef\u80fd\u7684\u957f\u3002\n\n\u9996\u5148\u6839\u636e\u6837\u4f8b\u6211\u4eec\u5c31\u77e5\u9053\u4e00\u5f00\u59cb\u80af\u5b9a\u662f\u8d2a\u5fc3\u5730\u4e00\u524d\u4e00\u540e\u628a\u80fd\u914d\u5bf9\u7684\u5b57\u7b26\u90fd\u914d\u5bf9\u5149\uff0c\u8fd9\u6837 $s$ \u5c31\u53ea\u5269\u4e0b\u7684\u4e86 $s\u2019$\u3002\u6bd4\u5982`abcdfdcecba`\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5c31\u76f4\u63a5\u628a\u524d\u540e\u7684`abc`\u548c`cba`\u53d6\u51fa\u6765\uff0c\u5269\u4e0b\u7684 $s\u2019$ \u4e3a`dfdce`\u3002\u7136\u540e\u5728 $s\u2019$ \u91cc\u8981\u53d6\u6700\u5927\u56de\u6587\u524d\u7f00\uff0c\u8981\u4e48\u53d6\u6700\u5927\u56de\u6587\u540e\u7f00\u3002\u53ea\u8981\u4f1a\u6c42\u524d\u8005\uff0c\u90a3\u540e\u8005\u7528\u540c\u6837\u65b9\u6cd5\u628a $s\u2019$ \u8f6c\u7f6e\u4e00\u4e0b\u5c31\u80fd\u7b97\u51fa\u6765\u3002\n\n\u6c42\u67d0\u4e2a\u5b57\u7b26\u4e32 $S$ \u7684\u6700\u5927\u56de\u6587\u524d\u7f00\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u8bb2\u4e00\u79cd\u663e\u7136\u7684\uff1a\n\n\u8f6c\u7f6e\u5b57\u7b26\u4e32 $S$ \u5f97\u5230\u5b57\u7b26\u4e32 $T$\uff0c\u90a3 $S$ \u7684\u56de\u6587\u524d\u7f00\u5c31\u662f $T$ \u7684\u56de\u6587\u540e\u7f00\u3002\u5047\u8bbe\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a $n$\uff0c$G_i$ \u4e3a $T$ \u4ece\u7b2c $i$ \u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u540e\u7f00\u4e32\uff0c\u5373 $G_i=T_iT_{i+1}T_{i+2}\\ldots T_n$\u3002\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff1a\u5982\u679c $LCP(G_i,S)=G_i $ \uff0c\u90a3 $G_i$ \u5c31\u662f\u4e2a\u56de\u6587\u4e32\u3002\uff08\u753b\u4e2a\u56fe\u5c31\u660e\u767d\u4e86\uff09\n\n\u8981\u6c42 $T$ \u7684\u6240\u6709\u540e\u7f00\u548c $S$ \u7684 LCP\uff0c\u7528 Z \u7b97\u6cd5\uff08~~\u6269\u5c55KMP~~\uff09\u89e3\u51b3\u5373\u53ef \u3002\u6211\u4eec\u5728\u679a\u4e3e\u7684\u65f6\u5019\uff0c$i$ \u4ece\u5c0f\u5230\u5927\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u56de\u6587\u4e32\u5c31\u662f\u6700\u957f\u7684\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u76f4\u63a5\u7528 KMP \u4e5f\u4e00\u6837\uff0c\u53ea\u8981\u8003\u8651 $T$ \u6700\u5927\u7684\u540e\u7f00\u548c $S$ \u524d\u7f00\u7684\u5339\u914d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(|s|)$\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\nconst LL mod = 1e9 + 7;\nconst int N = 1000005;\n\nchar s[N], g1[N], g2[N], ans[N];\n\nint z[N], ex[N];\n// \u6c42\u6587\u672c\u4e32t\u7684z\u51fd\u6570\nvoid get_z(char s[], int n) {\n    z[0] = n;\n    for (int i = 1, l = 0, r = 0; i < n; i++) {\n        int &k = z[i];\n        k = i <= r ? min(z[i - l], r - i + 1) : 0;\n        while (i + k < n && s[i + k] == s[k]) k++;\n        if (i + k - 1 > r) r = i + k - 1, l = i;\n    }\n}\n// \u6c42extend\uff0c\u5373s\u7684\u6bcf\u4e00\u4e2a\u540e\u7f00\u4e32\u4e0et\u7684 LCP\nvoid get_ex(char s[], char t[], int n, int m) {\n    for (int i = 0, l = 0, r = 0; i < n; i++) {\n        int &k = ex[i];\n        k = i <= r ? min(z[i - l], r - i + 1) : 0;\n        while (i + k < n && k < m && s[i + k] == t[k]) k++;\n        if (i > 0 && i + k - 1 > r) r = i + k - 1, l = i;\n    }\n}\nint gao(char s1[], char s2[], int n) {\n    get_z(s1, n);\n    get_ex(s2, s1, n, n);\n    for (int i = 0; i < n; i++) {\n        if (ex[i] == n - i) return n - i;\n    }\n    return 0;\n}\nint main() {\n    int _;\n    scanf(\"%d\", &_);\n    while (_--) {\n        scanf(\"%s\", s);\n        int n = strlen(s);\n        int t = 0;\n        while (t < n / 2 && s[t] == s[n - t - 1]) {\n            t++;\n        }\n        int m = n - t * 2;\n        for (int i = 0; i < m; i++) {\n            g1[i] = s[t + i];\n        }\n        for (int i = 0; i < m; i++) g2[i] = g1[m - i - 1];\n        int k1 = gao(g1, g2, m);\n        int k2 = gao(g2, g1, m);\n        int h = 0;\n        for (int i = 0; i < t; i++) ans[h++] = s[i];\n        if (k1 >= k2) {\n            for (int i = 0; i < k1; i++) {\n                ans[h++] = g1[i];\n            }\n        } else {\n            for (int i = 0; i < k2; i++) {\n                ans[h++] = g2[i];\n            }\n        }\n        for (int i = 0; i < t; i++) ans[h++] = s[t - i - 1];\n        ans[h] = 0;\n        puts(ans);\n    }\n    return 0;\n}\n\n```\n\n\u7528 KMP \u5176\u5b9e\u66f4\u7b80\u5355\uff0c\u628a `gao` \u51fd\u6570\u4fee\u6539\u6210\u4e0b\u9762\u4ee3\u7801\uff1a\n\n```cpp\nint f[N];\nint gao(char s1[], char s2[], int n) {\n    f[0] = 0;\n    for (int i = 1, j = 0; i < n; i++) {\n        while (j > 0 && s1[i] != s1[j]) j = f[j - 1];\n        if (s1[i] == s1[j]) j++;\n        f[i] = j;\n    }\n    int j = 0;\n    for (int i = 0; i < n; i++) {\n        while (j > 0 && s2[i] != s1[j]) j = f[j - 1];\n        if (s2[i] == s1[j]) j++;\n    }\n    return j;\n}\n```\n\n",
        "postTime": 1584764345,
        "uid": 54357,
        "name": "OMG_wc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1326D2 \u3010Prefix-Suffix Palindrome (Hard version)\u3011"
    }
]