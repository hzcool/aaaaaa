[
    {
        "content": "# CF798E Mike and code of a permutation \u9898\u89e3\n\n\u9996\u5148\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5bf9\u6240\u6709\u6ee1\u8db3 $a_{i}=-1$ \u7684 $a_i$ \u8d4b\u503c\u4e3a $n+1$\u3002\n\n\u8003\u8651\u672c\u9898\u9664\u4e86\u679a\u4e3e\u6392\u5217\u4e4b\u5916\u7684\u66b4\u529b\u89e3\u6cd5\uff1a\n\n- \u6211\u4eec\u6a21\u62df\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u8fc7\u7a0b\uff0c\u5047\u8bbe\u5f53\u524d\u5728\u586b $a_{i}$\uff0c\u4e14 $vis_j=1$ \u4ee3\u8868\u67d0\u4e00\u4e2a\u70b9\u5df2\u7ecf\u88ab\u6807\u8bb0\u8fc7\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u5bf9\u4efb\u610f $j\\in[1,a_j)\\cap \\mathbb{Z}$\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\u4f46\u662f $a_{i}\\neq j$\uff0c\u90a3\u4e48\u8bf4\u660e $p_{j}<p_{i}$\u3002\n\n- \u636e\u6b64\u5efa\u51fa\u56fe\u4e4b\u540e\uff0c\u6bcf\u4e2a\u70b9\u7684\u62d3\u6251\u5e8f\u5373\u4e3a\u7b54\u6848\u3002\u4f46\u662f\u8fd9\u6837\u505a\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $\\mathcal O(n^2)$\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u8fd9\u91cc\u4e0d\u52a0\u8bc1\u660e\u7684\u7ed9\u51fa\u4e00\u4e2a**\u6027\u8d28**\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u67e5\u4e00\u4e0b\uff1a\u4e00\u5f20**\u6709\u5411\u56fe**\u7ecf\u8fc7 $\\operatorname{tarjan}$ \u7f29\u70b9\u540e\uff0c\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684**\u65b0\u7f16\u53f7**\uff08\u5148\u5f62\u6210\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\u8f83\u5c0f\uff09\u5373\u4e3a\u7f29\u70b9\u540e\u7684 $\\operatorname{DAG}$ \u7684**\u9006\u5e8f**\u3002\n\n\u800c\uff0c\u8fd9\u5f20\u56fe\u672c\u8eab\u5c31\u662f\u4e00\u4e2a $\\operatorname{DAG}$ \u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u7f29\u70b9\uff0c**\u5b83\u7684 $\\operatorname{dfs}$ \u5e8f\u7684\u9006\u5e8f\u5373\u4e3a\u6211\u4eec\u9700\u8981\u7684\u62d3\u6251\u5e8f**\u3002\n\n\u6211\u4eec\u8003\u8651\u66f4\u6539 $vis$ \u6570\u7ec4\u7684\u610f\u4e49\uff0c\u6539\u4e3a\u7b2c $i$ \u4e2a\u70b9\u4f55\u65f6\u88ab\u6807\u8bb0\uff0c\u5373\uff1a$\\forall 1\\le a_{i}\\le n,vis_{a_i}=i$\u3002\u7279\u522b\u5730\uff0c\u5982\u679c $i$ \u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\uff0c\u90a3\u4e48 $vis_i=n+1$\u3002\n\n\u90a3\u4e48\u4e5f\u5c31\u6709\u8fde\u5411\u7b2c $i$ \u4e2a\u70b9\u7684\u70b9\u662f $vis_i$ \u548c\u6240\u6709 $j$ \u6ee1\u8db3 $j\\in[1,a_i)\\cap\\mathbb{Z},vis_{j}>i$\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u5feb\u901f\u627e\u51fa\u4e00\u4e2a\u70b9\u88ab\u54ea\u4e9b\u70b9\u8fde\u5411\uff08\u7ebf\u6bb5\u6811\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u5e76\u68c0\u67e5\uff09\uff0c\u4e5f\u5373\u662f\u53cd\u5411\u56fe\u4e0a\u8fde\u5411\u4e86\u54ea\u4e9b\u70b9\uff0c\u76f4\u63a5\u505a $\\operatorname{dfs}$ \u540e\u5206\u914d\u7f16\u53f7\u5373\u53ef\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename F> inline void read(F &n) {\n\tF w = 1; n = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch) && ch != EOF) { if(ch == '-') w = -1; ch = getchar(); } \n\twhile (isdigit(ch) && ch != EOF) { n = (n << 1) + (n << 3) + (ch & 15); ch = getchar(); }\n\tn *= w;\n}\ntemplate <typename T, typename ...L> inline void read(T &n,L &...l) { read(n); read(l...); }\ntemplate <typename T> inline void write(T n) {\n\tif (n < 0) { putchar('-'); n = -n; }\n\tif (n > 9) write(n / 10);  putchar('0' + n % 10);\n}\ntemplate <typename T> inline void ckmax(T &x, T y) { x = x > y ? x : y; }\ntemplate <typename T> inline void ckmin(T &x, T y) { x = x < y ? x : y; }\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nconst int N = 5e5 + 5;\nint n, a[N], vis[N], p[N], cur = 0;\n\n#define lc (k << 1)\n#define rc ((k << 1) | 1)\npair<int, int> t[N << 2];\nvoid pushup(int k) { t[k] = max(t[lc], t[rc]); }\nvoid doBuild(int k, int l, int r) {\n    if (l == r) {\n        t[k] = make_pair(vis[l], l);\n        return;\n    }\n    int mid = (l + r) >> 1;\n    doBuild(lc, l, mid);\n    doBuild(rc, mid + 1, r);\n    pushup(k);\n}\npair<int, int> doQuery(int k, int l, int r, int L, int R) {\n    if (l > R || r < L) return make_pair(0, -1);\n    if (l >= L && r <= R) return t[k];\n    int mid = (l + r) >> 1;\n    return max(doQuery(lc, l, mid, L, R), doQuery(rc, mid + 1, r, L, R));\n}\nvoid doUpdate(int k, int l, int r, int pos) {\n    if (l == r) {\n        t[k] = make_pair(0, -1);\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if (pos <= mid) doUpdate(lc, l, mid, pos);\n    else doUpdate(rc, mid + 1, r, pos);\n    pushup(k);\n}\n\nvoid dfs(int u) {\n    doUpdate(1, 1, n, u);\n    int t = vis[u];\n    if (t <= n && !p[t]) dfs(t);\n    for (; ; ) {\n        auto x = doQuery(1, 1, n, 1, a[u] - 1);\n        if (x.first <= u) break;\n        dfs(x.second);\n    }\n    p[u] = ++cur;\n}\n\nint main() {\n    read(n);\n    for (int i = 1; i <= n; ++i) vis[i] = n + 1; \n    for (int i = 1; i <= n; ++i) {\n        read(a[i]);\n        if (a[i] != -1) vis[a[i]] = i;\n        else a[i] = n + 1;\n    }\n    doBuild(1, 1, n);\n    for (int i = 1; i <= n; ++i) {\n        if (!p[i]) dfs(i);\n    }\n    for (int i = 1; i <= n; ++i) {\n        printf(\"%d \", p[i]);\n    }\n    puts(\"\");\n    return 0;\n}\n```\n\n",
        "postTime": 1664791001,
        "uid": 137176,
        "name": "lazytag",
        "ccfLevel": 7,
        "title": "CF798E Mike and code of a permutation \u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u628a\u9898\u76ee\u7684\u8fc7\u7a0b\u6a21\u62df\u4e00\u904d\uff0c\u6309\u7167\u5927\u5c0f\u5173\u7cfb\u5efa\u56fe\uff0c\u5c0f\u7684\u5411\u5927\u7684\u8fde\u8fb9\uff0c\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f\u5c31\u80fd\u6784\u9020\u51fa\u4e00\u7ec4\u5408\u6cd5\u89e3\uff0c\u4f46\u8fd9\u6837\u8fb9\u6570\u662f $\\mathrm O(n^2)$ \u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u62d3\u6251\u6392\u5e8f\u7684\u5b9e\u73b0\uff0c`g[i]` \u5185\u5b58\u50a8\u53cd\u56fe\u7684\u8fb9\uff0c`ans` \u5185\u5373\u4e3a\u62d3\u6251\u5e8f\u3002\n\n```cpp\nvoid dfs(int x){\n    book[x]=1;\n    for(auto u:g[x])if(!book[u])dfs(u);\n    ans.push_back(x);\n}\nvoid toposort(){\n    for(int i=1;i<=n;i++)book[i]=0;\n    ans.clear();\n    for(int i=1;i<=n;i++)if(!book[i])dfs(i);\n}\n```\n\n\u8fd9\u79cd\u5199\u6cd5\u53ea\u9700\u8981\u77e5\u9053\u54ea\u4e9b\u70b9\u53ef\u4ee5\u5230 $x$ \u5373\u53ef\u3002\n\n\u6211\u4eec\u4ee4 $a$ \u4e2d\u4e3a $-1$ \u7684\u4f4d\u7f6e\u4e3a $n+1$\uff0c\u82e5 $a_i\\ne -1$\uff0c$b_{a_i}=i$\uff0c\u5bf9\u4e8e\u5176\u4ed6\u672a\u8d4b\u503c\u7684 $b_i=n+1$\u3002\n\n\u5219\u4e00\u4e2a\u70b9 $x$ \u7684\u53cd\u8fb9\u8fde\u5411 $b_x$ \u548c\u6240\u6709\u6ee1\u8db3 $1\\le i<a_x,b_i>x$ \u7684 $i$\u3002\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff0c\u52a8\u6001\u5220\u70b9\uff0c\n\n\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm O(n\\log n)$\u3002\n\n```cpp\n#include<cstdio>\n#include<utility>\n#include<algorithm>\nstd::pair<int,int> tr[2000010];\nint n,a[500010],b[500010],v[500010];\nvoid build(int const &x=1,int const &l=1,int const &r=n){\n\tif(l==r) return tr[x]=std::make_pair(b[l],l),void();\n\tint ls=x<<1,rs=x<<1|1,mid=(l+r)>>1;\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\ttr[x]=std::max(tr[ls],tr[rs]);\n}\nvoid del(int const &p,int const &x=1,int const &l=1,int const &r=n){\n\tif(l==r) return b[l]=0,tr[x]=std::make_pair(0,l),void();\n\tint ls=x<<1,rs=x<<1|1,mid=(l+r)>>1;\n\tif(p<=mid)del(p,ls,l,mid);\n\telse del(p,rs,mid+1,r); \n\ttr[x]=std::max(tr[ls],tr[rs]);\n}\nstd::pair<int,int> query(int const &p,int const &x=1,int const &l=1,int const &r=n){\n\tif(l==r) return tr[x];\n\tint ls=x<<1,rs=x<<1|1,mid=(l+r)>>1;\n\tif(p<=mid) return query(p,ls,l,mid);\n\telse return std::max(query(p,rs,mid+1,r),tr[ls]);\n}\nint cnt;\nvoid dfs(int const &x){\n\tint k=b[x]; \n\tdel(x);\n\tif(k!=n+1&&b[k])dfs(k);\n\tif(a[x]!=1)\n\twhile(1){\n\t\tstd::pair<int,int> q=query(a[x]-1);\n\t\tif(q.first<=x)break;\n\t\tdfs(q.second);\n\t}\n\tv[x]=++cnt;\n} \nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",a+i);\n\t\tif(~a[i])b[a[i]]=i;\n\t\telse a[i]=n+1;\n\t}\n\tfor(int i=1;i<=n;i++)if(!b[i])b[i]=n+1;\n\tbuild();\n\tfor(int i=1;i<=n;i++)if(!v[i])dfs(i);\n\tfor(int i=1;i<=n;i++)printf(\"%d \",v[i]);\n\treturn 0;\n} \n```\n\n",
        "postTime": 1614008392,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF798E Mike and code of a permutation"
    },
    {
        "content": "\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u7f16\u7801 $A$ \u7684\u751f\u6210\u5f97\u51fa\u4e00\u4e9b\u4f4d\u7f6e\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5982\u679c\u5bf9\u6240\u6709\u77e5\u9053 $p_i<p_j$ \u7684\u5173\u7cfb\uff0c\u4ece $i$ \u5411 $j$ \u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u7136\u540e\u5bf9\u751f\u6210\u7684\u56fe\u8dd1\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u5f97\u51fa\u4e00\u4e2a\u5408\u6cd5\u7684\u6784\u9020\u3002\n\n\u66b4\u529b\u8fde\u8fb9\u7a7a\u95f4\u548c\u65f6\u95f4\u90fd\u662f $\\mathcal{O(n^2)}$ \u7684\uff0c\u89c2\u5bdf\u7f16\u7801 $A$ \u7684\u751f\u6210\u65b9\u5f0f\u53d1\u73b0\u662f\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u4f4d\u7f6e\uff0c$[1,a_i)$ \u4e2d\u5c1a\u672a\u88ab\u6253\u4e0a\u6807\u8bb0\u4e14\u4e0d\u7b49\u4e8e $i$ \u7684\u4f4d\u7f6e\u4f1a\u6bd4\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u5c0f\uff0c\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u4f1a\u6bd4\u7b2c $a_i$ \u4e2a\u4f4d\u7f6e\u5c0f\uff0c\u6253\u4e0a\u6807\u8bb0\u8fd9\u4e2a\u52a8\u6001\u7684\u64cd\u4f5c\u4f7f\u5f97\u4f18\u5316\u5efa\u56fe\u4e0d\u53ef\u53d6\u3002\n\n\u7136\u800c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u628a\u56fe\u5efa\u51fa\u6765\uff0c\u5982\u679c\u91c7\u7528 dfs \u6765\u5b9e\u73b0\u62d3\u6251\u6392\u5e8f\u5c31\u53ea\u9700\u8981\u5173\u5fc3\u5f53\u524d\u8bbf\u95ee\u5230\u7684\u70b9\u5728\u53cd\u56fe\u4e2d\u80fd\u8fde\u5230\u54ea\u4e9b\u70b9\u3002\n\n\u5efa\u7acb\u4e00\u4e2a $b$ \u6570\u7ec4\uff0c $b_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u70b9\u4f1a\u5728\u54ea\u4e00\u4e2a\u4f4d\u7f6e\u751f\u6210\u7f16\u7801 $A$ \u65f6\u88ab\u6253\u4e0a\u6807\u8bb0\uff0c\u4e5f\u5c31\u662f $b_{a_i}=i$ \uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u70b9\uff0c\u53cd\u56fe\u8fde\u5411\u7684\u70b9 $j$ \u6ee1\u8db3 $1\\le j< a_i , b_j > i ,j\\not= i$ \u3002\n\n\u867d\u7136\u8fde\u5411\u7684\u70b9\u662f\u53ef\u4ee5\u786e\u5b9a\u7684\uff0c\u4f46\u662f\u8fb9\u6570\u5b9e\u9645\u4e0a\u662f $\\mathcal{O(n^2)}$ \u7684\uff0c\u6240\u4ee5\u9700\u8981\u7528\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u53ef\u4ee5\u8fde\u5411\u7684\u8fb9\uff0c\u8fb9\u505a\u8fb9\u5220\u70b9\uff0c\u8fd9\u6837\u6bcf\u6b21\u5411\u53e6\u5916\u4e00\u4e2a\u70b9\u9012\u5f52\u4fdd\u8bc1\u54ea\u4e2a\u70b9\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $\\mathcal{O(n\\log n)}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int M=5e5+5;\n\nint min(int x,int y){ return x<y?x:y; }\nint max(int x,int y){ return x>y?x:y; }\n\nint n,num=0,a[M],b[M],val[M];\nint read(){\n\tint x=0,y=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') y=(ch=='-')?-1:1,ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*y;\n}\n\nnamespace SegTree{\n\tint sum[M<<2],maxn[M<<2];\n\tvoid pushup(int u){ maxn[u]=max(maxn[u<<1],maxn[u<<1|1]); }\n\tvoid Build(int u,int l,int r){\n\t\tsum[u]=r-l+1;\n\t\tif(l==r) return (void)(maxn[u]=b[l]);\n\t\tint mid=(l+r)>>1;\n\t\tBuild(u<<1,l,mid),Build(u<<1|1,mid+1,r);\n\t\tpushup(u);\n\t}\n\tvoid Del(int u,int l,int r,int x){\n\t\tsum[u]--;\n\t\tif(l==r) return (void)(maxn[u]=0);\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid) Del(u<<1,l,mid,x);\n\t\telse Del(u<<1|1,mid+1,r,x);\n\t\tpushup(u);\n\t}\n\tint Find(int u,int l,int r,int L,int R,int x){\n\t\tif(l>R||r<L||!sum[u]||maxn[u]<=x||L>R) return -1;\n\t\tif(l==r) return l;\n\t\tint mid=(l+r)>>1;\n\t\tint res=Find(u<<1,l,mid,L,R,x);\n\t\tif(res==-1) res=Find(u<<1|1,mid+1,r,L,R,x);\n\t\treturn res;\n\t}\n}using namespace SegTree;\n\nvoid dfs_topo(int u){\n\tif(!val[b[u]]&&b[u]<=n) dfs_topo(b[u]);\n\tint las=0;\n\twhile(1){\n\t\tint v=Find(1,1,n,las+1,a[u]-1,u);\n\t\tif(v==-1) return (void)(Del(1,1,n,u),val[u]=++num);\n\t\tlas=v;if(v==u) continue ;\n\t\tdfs_topo(v);\n\t}\n\tval[u]=++num;Del(1,1,n,u);\n}\n\nvoid solve(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tif(a[i]==-1) a[i]=n+1;\n\t\tb[a[i]]=i;\n\t}\n\tfor(int i=1;i<=n;i++) if(!b[i]) b[i]=n+1;Build(1,1,n);\n\tfor(int i=1;i<=n;i++) if(!val[i]) dfs_topo(i);\n\tfor(int i=1;i<=n;i++) printf(\"%d \",val[i]);printf(\"\\n\");\n}\n\nsigned main(){\n\tsolve();\n}\n```",
        "postTime": 1613463836,
        "uid": 116015,
        "name": "bellmanford",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF798E \u3010Mike and code of a permutation\u3011"
    },
    {
        "content": "\u8003\u8651\u4e00\u4e2a $a_i$ \u7ed9\u5230\u7684\u4fe1\u606f\uff0c\u5176\u5b9e\u5c31\u662f\u8fd8\u6ca1\u6807\u8bb0\u7684\u4e00\u4e2a\u524d\u7f00\u6bd4 $i$ \u5c0f\uff0c\u5e76\u4e14 $a_i$ \u6bd4 $i$ \u5927\u3002\u4f9d\u636e\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u8fde $O(n^2)$ \u6761\u8fb9\u7136\u540e\u8dd1\u62d3\u6251\u6392\u5e8f\u7684\u505a\u6cd5\u3002\u8003\u8651\u5230\u201c\u524d\u7f00\u201d\u7684\u7279\u6b8a\u6027\uff0c\u5bb9\u6613\u60f3\u5230\u8981\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\uff0c\u4f46\u96be\u70b9\u5728\u4e8e\u6bcf\u6b21\u8981\u5220\u9664 $a_i$\u3002\u4e0d\u59a8\u8003\u8651\u7c7b\u4f3c\u4e3b\u5e2d\u6811\u7684\u601d\u60f3\uff0c\u53ea\u91cd\u6784 $a_i$ \u5230\u6839\u7684\u94fe\u3002\u4e8e\u662f\u6211\u4eec\u7684\u70b9\u6570\u548c\u8fb9\u6570\u90fd\u964d\u4e3a\u4e86 $O(n\\log n)$\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u4e0d\u96be\u7684\u9898\uff0c\u4f46\u4e2a\u4eba\u8ba4\u4e3a\u4e3b\u5e2d\u6811\u4f18\u5316\u5efa\u56fe\u7684\u65b9\u6cd5\u662f\u8f83\u4e3a\u65b0\u9896\u7684\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=5e5+10;\nconst int mod=1e9+7;\n#define inf 1e9\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=2e7;\n#define pb emplace_back\nvector<int>G[maxn];int ls[N],rs[N],rd[N];\nint n,m,a[maxn],rt[maxn],cnt;\ninline int build(int l,int r){\n\tif(l==r)return l;\n\tint mid=(l+r)>>1,now=++cnt;\n\tls[now]=build(l,mid);++rd[ls[now]];\n\trs[now]=build(mid+1,r);++rd[rs[now]];\n\treturn now;\n}\ninline void link(int fr,int h,int l,int r,int x,int y){\n\tif(!h||x>y||l>y||r<x)return;\n\tif(l>=x&&r<=y){++rd[h];G[fr].pb(h);return;}\n\tint mid=(l+r)>>1;\n\tlink(fr,ls[h],l,mid,x,y);\n\tlink(fr,rs[h],mid+1,r,x,y);\n}\ninline int modify(int h,int l,int r,int x){\n\tif(l==r)return 0;int mid=(l+r)>>1,now=++cnt;\n\tif(mid>=x)ls[now]=modify(ls[h],l,mid,x),rs[now]=rs[h];\n\telse ls[now]=ls[h],rs[now]=modify(rs[h],mid+1,r,x);\n\t++rd[ls[now]],++rd[rs[now]];return now;\n}\nqueue<int>Q;int cur,Ans[maxn];\nint main(){\n\tn=read();cnt=cur=n;\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\trt[0]=build(1,n);\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]==-1){\n\t\t\trt[i]=rt[i-1];\n\t\t\tlink(i,rt[i],1,n,1,i-1);\n\t\t\tlink(i,rt[i],1,n,i+1,n);\n\t\t}else{\n\t\t\trt[i]=modify(rt[i-1],1,n,a[i]);\n\t\t\tif(a[i]<i)link(i,rt[i],1,n,1,a[i]-1);\n\t\t\telse{\n\t\t\t\tlink(i,rt[i],1,n,1,i-1);\n\t\t\t\tlink(i,rt[i],1,n,i+1,a[i]-1);\n\t\t\t}G[a[i]].pb(i);++rd[i];\n\t\t}\n\tfor(int i=1;i<=cnt;i++)\n\t\tif(!rd[i])Q.push(i);\n\twhile(!Q.empty()){\n\t\tint x=Q.front();Q.pop();\n\t\tif(!x)continue;\n\t\tif(x>n){\n\t\t\t--rd[ls[x]];if(!rd[ls[x]])Q.push(ls[x]);\n\t\t\t--rd[rs[x]];if(!rd[rs[x]])Q.push(rs[x]);\n\t\t}else{\n\t\t\tAns[x]=cur;--cur;\n\t\t\tfor(auto t:G[x])if(!(--rd[t]))Q.push(t);\n\t\t}\n\t}for(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",Ans[i]);puts(\"\");\n\treturn 0;\n}\n```\n\n\u6df1\u6df1\u5730\u611f\u5230\u81ea\u5df1\u7684\u5f31\u5c0f\u3002",
        "postTime": 1672991248,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "CF798E Mike and code of a permutation"
    },
    {
        "content": "CF798E Mike and code of a permutation \u9898\u89e3\u3002\n\n\u6ca1\u6709\u8111\u5b50\u6240\u4ee5\u60f3\u51fa\u6765\u4e2a\u65e0\u8111\u505a\u6cd5\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e2a $a_i$\uff08$a_i=-1$ \u7279\u6b8a\u8003\u8651\uff09\uff0c\u6709 $p_{a_i}>p_i$\uff0c\u540c\u65f6 $1\\sim a_i-1$ \u4e2d\u6ca1\u88ab\u6807\u8bb0\u4e14 $\\neq i$ \u7684 $<p_i$\u3002\n\n\u636e\u6b64 $O(n^2)$ \u5efa\u56fe\u8dd1\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5408\u6cd5\u7ed3\u679c\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u53d1\u73b0\u6ca1\u88ab\u6807\u8bb0\u5f88\u96be\u5904\u7406\u3002\u53d1\u73b0\u6240\u6709\u6807\u8bb0\u90fd\u662f\u9010\u6e10\u589e\u52a0\u7684\uff0c\u90a3\u4e48\u9006\u5e8f\u4e3b\u5e2d\u6811\u4f18\u5316\u5efa\u56fe\u5373\u53ef\u3002\n\n\u4f46 $\\neq i$ \u7684\u6761\u4ef6\u8fd8\u662f\u8981\u7279\u6b8a\u8003\u8651\u3002\u4e0d\u8fc7\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u6ca1\u5f71\u54cd\u3002\n\n$O(n\\log n)$\u3002\u7565\u5fae\u5361\u7a7a\u95f4\u3002",
        "postTime": 1673934772,
        "uid": 114356,
        "name": "arundo",
        "ccfLevel": 0,
        "title": "\u662f\u5426\u60c5\u5b57\u5199\u6765\u90fd\u7a7a\u6d1e \u4e00\u7b14\u4e00\u753b\u659f\u914c\u7740\u5949\u9001"
    },
    {
        "content": "\u6765\u4e2a\u7eaf\u7eaf\u7684\u66b4\u529b\u505a\u6cd5\u3002\n\n\u9996\u5148\u8fd9\u9898\u4e00\u770b\u5c31\u662f\u4e2a\u62d3\u6251\u5e8f\uff0c\u56e0\u4e3a\u7ed9\u4f60\u7684\u6570\u7ec4\u7b2c $i$ \u4f4d\u4e3a $j$\uff08\u628a $-1$ \u89c6\u4e3a $n+1$\uff09\uff0c\u5c31\u610f\u5473\u7740\uff1a\n\n- \u539f\u6392\u5217\u7b2c $j$ \u4f4d\u6bd4\u7b2c $i$ \u4f4d\u5927\u3002\n\n- \u539f\u6392\u5217\u7b2c $j$ \u4f4d\u4e4b\u524d\u7684\u6240\u6709\u672a\u88ab\u6807\u8bb0\u8fc7\u7684\u6570\u90fd\u6bd4\u7b2c $i$ \u4f4d\u5c0f\u3002\n\n\u76f4\u63a5\u5efa\u56fe\u62d3\u6251\u5e8f\u662f $ \\mathcal O(n^2)$ \u7684\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u6709\u5f88\u591a\u8fb9\u90fd\u662f\u4e00\u4e2a\u70b9\u5411\u5b83\u524d\u9762\u7684\u4e00\u4e2a\u533a\u95f4\u8fde\u8fb9\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\uff0c\u6bcf\u4e00\u4f4d\u5411\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e00\u4e2a\u70b9\u8fde\u8fb9\uff0c\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u70b9\u5411\u5b83\u513f\u5b50\u8fde\u8fb9\uff0c\u53ef\u4ee5\u770b\u51fa\u8fd9\u6837\u7684\u56fe\u7684\u62d3\u6251\u5e8f\u53bb\u6389\u6811\u70b9\u540e\u548c\u539f\u56fe\u4e00\u6837\u3002\n\n\u5f53\u7136\u6211\u4eec\u4e0d\u80fd\u6123\u6572\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u53bb\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u533a\u95f4\u90fd\u8981\u53bb\u6389\u5df2\u88ab\u6807\u8bb0\u8fc7\u7684\u70b9\u3002\u8fd9\u4e2a\u201c\u53bb\u6389\u6807\u8bb0\u70b9\u201d\u5176\u5b9e\u5c31\u662f\u5220\u70b9\uff0c\u5220\u5b8c\u8fd9\u4e2a\u70b9\u5c31\u6ca1\u4e8b\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8003\u8651\u5982\u4f55\u6b63\u786e\u5730\u5220\u70b9\u3002\n\n\u628a\u6807\u8bb0\u70b9\u7684\u8fde\u7236\u4eb2\u7684\u8fb9\u76f4\u63a5\u5220\u6389\u663e\u7136\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u70b9\u88ab\u5220\u6389\u4e4b\u524d\u4f1a\u6709\u80fd\u5f71\u54cd\u5b83\u7684\u8fde\u8fb9\u3002\u65e2\u7136\u8981\u4fdd\u7559\u4e4b\u524d\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u201c\u53ef\u6301\u4e45\u5316\u201d\uff0c\u5220\u70b9\u65f6\u4e0d\u53bb\u5220\u8fb9\uff0c\u800c\u662f\u4ece\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u6839\u65b0\u5efa\u4e00\u4e2a\u94fe\u66ff\u6362\u539f\u672c\u7684\u6811\u70b9\uff0c\u53ea\u662f\u8fd9\u4e2a\u94fe\u4e0d\u518d\u80fd\u5411\u88ab\u5220\u70b9\u8fde\u8fb9\u3002\u8fd9\u6837\u4e4b\u524d\u7684\u8fde\u8fb9\u4e0d\u4f1a\u53d7\u5f71\u54cd\uff0c\u4e4b\u540e\u7684\u8fde\u8fb9\u4e5f\u4e0d\u4f1a\u80fd\u7ba1\u5f97\u5230\u88ab\u5220\u70b9\u4e86\u3002\n\n~~\u8fd9\u91cc\u7684\u7ebf\u6bb5\u6811\u53ea\u6709\u4fee\u6539\uff0c\u751a\u81f3\u6ca1\u6709\u4e0b\u4f20\uff0c\u54ea\u6015\u8fd9\u6837\u6211\u8fd8\u662f\u628a\u5b83\u7684\u6bcf\u4e2a\u5730\u65b9\u90fd\u5199\u9519\u4e86\u4e00\u904d\uff0c\u8fd9\u8bf4\u660e\u6211\u6839\u672c\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u2026\u2026~~\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u7f3a\u70b9\u662f\u5230\u5934\u6765\u5b83\u8fd8\u662f\u771f\u7684\u5efa\u4e86\u56fe\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $ \\mathcal O(n \\log n)$ \u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u201c\u8fd8\u6ca1\u5b8c\u5462\uff0c\u5c0f\u5b50\u201d\u8fd9\u9053\u9898\u2026\u2026\n\n```\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#define a1(x) l[spy[in1]][x]=spy[in1*2+x],inn[spy[in1*2+x]]++;\nusing namespace std;\nint n,un=1,ans[526272],p[526272],del[565656],spy[1348576],l[15540416][2],inn[15540416],cnt,q[15540416],h,t;//\u51c6\u5907\u542c\u53d6MLE\u58f0\u4e00\u7247\u7684\u6570\u7ec4\u5b9a\u4e49\nvector<int> to[567890];\nvoid seto(int fr,int lb,int rb,int nl,int nr,int now){\n\tif(lb>rb)return;if(nl==nr&&del[nl])return;if(nl>nr)return;if(nr<lb||nl>rb)return;\n\tif(nl>=lb&&nr<=rb){\n\t\tto[fr].push_back(spy[now]);inn[spy[now]]++;\n\t\treturn;\n\t}\n\tif(nl==nr)return;\n\tseto(fr,lb,rb,nl,(nl+nr)>>1,now<<1);\n\tseto(fr,lb,rb,((nl+nr)>>1)+1,nr,(now<<1)+1);\n}\nint main(){\n\tmemset(l,-1,sizeof(l));\n\tscanf(\"%d\",&n);\n\twhile(un<n)un<<=1;cnt=un+un-1;\n\tfor(int i=1;i<un;i++)spy[i]=un+i-1;\n\tfor(int i=un;i<2*un;i++)spy[i]=i-un;\n\tfor(int i=2;i<2*un;i++)inn[spy[i]]=1;\n\tfor(int i=1;i<un;i++){\n\t\tl[spy[i]][0]=spy[i*2];\n\t\tl[spy[i]][1]=spy[i*2+1];\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tint in1;scanf(\"%d\",&in1);\n\t\tin1=(in1==-1?n:in1-1);\n\t\tif(in1>i)seto(i,0,i-1,0,un-1,1),seto(i,i+1,in1-1,0,un-1,1);//\u8fde\u8fb9\u522b\u8fde\u81ea\u5df1\u5934\u4e0a\n\t\telse seto(i,0,in1-1,0,un-1,1);\n\t\tif(in1==n)continue;//\u6570\u7ec4\u5bf9\u5e94\u4f4d\u7f6e\u662f-1\u5c31\u4e0d\u5220\u70b9\u4e86\n\t\tto[in1].push_back(i);inn[i]++;\n\t\tdel[in1]=1;in1+=un;in1>>=1;spy[in1]=cnt++;if(!del[in1*2-un])a1(0);if(!del[in1*2+1-un])a1(1);in1>>=1;//\u6362\u70b9\u662f\u4e3a\u4e86\u4e0d\u8fde\u8fb9\uff0c\u4e0d\u7279\u5224\u5c31\u662f\u6362\u4e86\u4e2a\u5bc2\u5bde\n\t\twhile(in1){\n\t\t\tspy[in1]=cnt++;\n\t\t\ta1(0);a1(1);\n\t\t\tin1>>=1;\n\t\t}\n\t}\n\tfor(int i=0;i<cnt;i++){\n\t\tif(inn[i]==0)q[h++]=i;\t\n\t}//\u66b4\u529b\u8dd1\u62d3\u6251\uff01\n\tint ccf=n;\n\twhile(h>t){\n\t\tif(q[t]>=un){\n\t\t\tif(~l[q[t]][0]&&--inn[l[q[t]][0]]==0)q[h++]=l[q[t]][0];\n\t\t\tif(~l[q[t]][1]&&--inn[l[q[t]][1]]==0)q[h++]=l[q[t]][1];\n\t\t}\n\t\telse{\n\t\t\tfor(int i=0;i<to[q[t]].size();i++){\n\t\t\t\tif(--inn[to[q[t]][i]]==0)q[h++]=to[q[t]][i];\n\t\t\t}\n\t\t\tif(q[t]<n)ans[q[t]]=ccf--;//\u53ea\u7ed9\u975e\u6811\u70b9\u5206\u914d\u987a\u5e8f\n\t\t}\n\t\tt++;\n\t}\n\tfor(int i=0;i<n;i++)printf(\"%d \",ans[i]);\n} \n```\n",
        "postTime": 1673018390,
        "uid": 222901,
        "name": "\u9694\u58c1\u6cde2\u7684\u5982\u5fc3",
        "ccfLevel": 7,
        "title": "CF798E Mike and code of a permutation \u9898\u89e3"
    }
]