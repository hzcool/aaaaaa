[
    {
        "content": "## $\\text{Solution}$\n\u5bf9\u5927\u7c7b $i$ \u5355\u72ec\u8003\u8651\uff0c\u8bbe\u5206\u914d\u7ed9\u5176\u7684\u8d44\u91d1\u4e3a $x_i$\uff0c$b_i=\\sum c'_{i,j}+x_i,a_i=\\sum [c'_{i,j}>p_{i,j}b_i]c'_{i,j}$\uff0c\u90a3\u4e48\u5176\u4ee3\u4ef7\u5c31\u662f $2(\\dfrac {a_i} {b_i}-\\sum[c'_{i,j}>p_{i,j}b_i]p_{i,j})$\u3002  \n\u90a3\u4e48\u5f53\u6240\u6709\u7684 $c'_{i,j}$ \u4e0e $p_{i,j}b_i$ \u7684\u5927\u5c0f\u5173\u7cfb\u90fd\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4ee3\u4ef7\u5173\u4e8e\u6295\u5165\u8d44\u91d1\u7684\u51fd\u6570 $f(x)$ \u7684\u5bfc\u6570\u5c31\u662f $-\\frac{a_i}{b_i^2}$\uff0c\u663e\u7136\u59cb\u7ec8\u5e94\u8be5\u9009\u62e9\u5f53\u524d\u4ee3\u4ef7\u53d8\u5316\u7387\u6700\u5927\u7684\u9879\u76ee\u6295\u5165\u8d44\u91d1\u3002\u7c7b\u4f3c\u4e8e\u8fb9\u9645\u6548\u5e94\uff0c\u968f\u7740\u8d44\u91d1\u6295\u5165\uff0c\u53d8\u5316\u7387\u4f1a\u8d8a\u6765\u8d8a\u5c0f\uff0c\u56e0\u800c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u65b0\u7684\u9879\u76ee\u53d8\u5f97\u201c\u503c\u5f97\u6295\u5165\u201d\uff1b\u540c\u65f6\uff0c\u7531\u4e8e $c'_{i,j}$ \u4e0e $p_{i,j}b_i$ \u7684\u5927\u5c0f\u5173\u7cfb\u53ef\u80fd\u4f1a\u968f\u7740\u8d44\u91d1\u6295\u5165\u53d1\u751f\u53d8\u5316\uff0c\u67d0\u4e2a\u9879\u76ee\u53ef\u80fd\u4f1a\u968f\u7740\u8d44\u91d1\u6295\u5165\u800c\u53d8\u5316\u7387\u7a81\u964d\uff0c\u53d8\u5f97\u201c\u4e0d\u503c\u5f97\u6295\u5165\u201d\u3002  \n\u628a\u8fd9\u4e9b\u65f6\u95f4\u70b9\u548c\u8be2\u95ee\u4e00\u8d77\u6295\u5230\u65f6\u95f4\u8f74\u4e0a\uff0c\u7ef4\u62a4\u5f53\u524d\u201c\u503c\u5f97\u6295\u5165\u201d\u7684\u9879\u76ee\u96c6\u5408\u5e76\u4e0d\u65ad\u66f4\u65b0\u5f53\u524d\u7b54\u6848\u5373\u53ef\u3002\n\n## $\\text{Code}$\n```cpp\n//luogu\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\n#define ok debug(\"OK\\n\")\nusing namespace std;\n\nconst int N=6e5+100;\nconst double eps=1e-12;\n#define double long double\n//const int mod=1e9+7;\ninline ll read(){\n  ll x(0),f(1);char c=getchar();\n  while(!isdigit(c)) {if(c=='-')f=-1;c=getchar();}\n  while(isdigit(c)) {x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n  return x*f;\n}\n\ninline ll ksm(ll x,ll k,int mod){\n  ll res(1);\n  while(k){\n    if(k&1) res=res*x%mod;\n    x=x*x%mod;\n    k>>=1;\n  }\n  return res;\n}\n\nint n,m;\nint num[N];\ndouble p[N][6],c[N][6],a[N],b[N],k[N];\ndouble s[N];\nstruct node{\n  double w;\n  int Id;\n  bool operator < (const node &oth)const{\n    if(w!=oth.w)return w<oth.w;\n    else return Id<oth.Id;\n  }  \n};\nset<node>del,oth;\nset<node>::iterator it;\nset<node>::iterator ed(set<node> &s){\n  multiset<node>::iterator it=s.end();\n  it--;\n  return it;\n}\ninline void rebuild(int i,double cur){  \n  if(cur<0){\n    for(int j=1;j<=num[i];j++){\n      if(c[i][j]/p[i][j]>b[i]+eps){\n\ta[i]+=c[i][j];\n      }     \n    }\n    s[i]=0;\n    for(int j=1;j<=num[i];j++){\n      if(c[i][j]/p[i][j]>b[i]+eps){\n\tdouble x=c[i][j]/p[i][j];\t\n\ts[i]=max(s[i],a[i]/x/x);\n      }\n    }\n    k[i]=a[i]/(b[i]*b[i]);\n  }\n  else{\n    b[i]=sqrt(a[i]/cur);\n    s[i]=0;\n    a[i]=0;\n    for(int j=1;j<=num[i];j++){\n      if(c[i][j]/p[i][j]>b[i]+eps){\n\ta[i]+=c[i][j];\t\n      }\n    }\n    for(int j=1;j<=num[i];j++){\n      if(c[i][j]/p[i][j]>b[i]+eps){\n\tdouble x=c[i][j]/p[i][j];\t\n\ts[i]=max(s[i],a[i]/x/x);\n      }\n    }\n    k[i]=a[i]/(b[i]*b[i]);\n  }  \n  return;\n}\n\ndouble ans[N];\nstruct query{\n  double x;\n  int id;\n  bool operator < (const query &oth){return x<oth.x;}\n}q[N];\n\nvoid print(){\n  for(int i=1;i<=m;i++) printf(\"%.8Lf\\n\",ans[i]);\n  exit(0);\n}\nint tim[N];\nsigned main(){\n  #ifndef ONLINE_JUDGE\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n  #endif\n    \n  n=read();m=read();\n\n  double ori=0;\n  for(int i=1;i<=n;i++){\n    num[i]=read();\n    double s=0;\n    for(int j=1;j<=num[i];j++) c[i][j]=read(),b[i]+=c[i][j];\n    for(int j=1;j<=num[i];j++){\n      p[i][j]=read();\n      s+=p[i][j];\n    }\n    for(int j=1;j<=num[i];j++){\n      p[i][j]/=s;\n      ori+=abs(c[i][j]/b[i]-p[i][j]);\n    }\n  }\n  for(int i=1;i<=m;i++){\n    q[i].x=read();q[i].id=i;\n  }\n  sort(q+1,q+1+m);\n  int pl=1;\n\n  if(abs(ori)<eps){\n    print();\n    return 0;\n  }\n\n  double cur=0,S=0,res=0,add=0;\n  \n  for(int i=1;i<=n;i++){\n    rebuild(i,-1);\n    cur=max(cur,k[i]);\n  }\n  \n  for(int i=1;i<=n;i++){    \n    if(abs(cur-k[i])<eps){\n      S+=sqrt(a[i]);\n      del.insert((node){s[i],i});\n    }\n    else{\n      oth.insert((node){k[i],i});\n    }\n  }\n  int clo=0;\n  while(pl<=m&&abs(cur)>eps){\n    ++clo;  \n    double nxt=0;\n    double B=sqrt(1.0/cur);\n    int flag=0;\n\n    double o=q[pl].x-add,w=o/S;\n    nxt=max(nxt,1/((B+w)*(B+w)));\n    flag=1;\n\n    if(!del.empty()){      \n      if(nxt<(*del.rbegin()).w){\n\tflag=2;\n\tnxt=(*del.rbegin()).w;\n      }      \n    }\n\n    if(!oth.empty()){\n      if(nxt<(*oth.rbegin()).w){\n\tflag=3;\n\tnxt=(*oth.rbegin()).w;\n      }     \n    }\n    \n    w=(sqrt(1.0/nxt)-B);\n    res+=2*(1.0/(B)-1.0/(B+w))*S;\n    add+=w*S;\n    cur=nxt;        \n\n    if(cur<eps) break;\n    if(flag==1){      \n      ans[q[pl].id]=ori-res;\n      ++pl;      \n    }    \n    \n    else if(flag==2){\n      int x=(*del.rbegin()).Id;\n      tim[x]++;\n      S-=sqrt(a[x]);\n      rebuild(x,cur);\n      it=del.end();\n      it--;\n      del.erase(it);\n      if(tim[x]<=5&&k[x]>eps)oth.insert((node){k[x],x});\n    }\n    \n    else if(flag==3){            \n      int x=(*oth.rbegin()).Id;\n      it=oth.end();\n      it--;\n      oth.erase(it);\n      if(s[x]>eps) del.insert((node){s[x],x});\n      S+=sqrt(a[x]);\n    }\n  }\n\n  print();\n  \n  return 0;\n}\n```\n",
        "postTime": 1655221585,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "CF1666B Budget Distribution"
    }
]