[
    {
        "content": "### 1 \u89c6\u9891\u9898\u89e3\n\n\uff08\u5443\uff0c\u6211\u8fd9\u8fb9\u89c6\u9891\u6ca1\u6302\uff09\n\n![](bilibili:BV1S94y1Q7zs)\n\n### 2 \u601d\u8def\n\n\u8bf4\u6765\u4f60\u53ef\u80fd\u4e0d\u4fe1\uff0c\u770b\u5230\u8fd9\u9898\u65f6\u6211\u8fd8\u4e0d\u4f1a $\\operatorname{Kruskal}$ \u91cd\u6784\u6811\uff0c\u4e8e\u662f\u82b1\u4e86 $30$ \u5206\u949f\u81ea\u5b66\u4e86\u5b83\uff0c\u7136\u540e\u8d5b\u573a\u4e0a $\\operatorname{AC}$ \u4e86\u8fd9\u9053\u9898\u2026\u2026\n\n\u6211\u4eec\u5c06\u8fd9\u6761\u8fb9\u7684\u7f16\u53f7\u5b9a\u4e49\u4e3a\u5b83\u7684\u8fb9\u6743\u3002\u6309\u7167\u5347\u5e8f\u6392\u5e8f~~\uff08\u597d\u50cf\u6ca1\u5fc5\u8981\u6392\u5e8f\u54e6\uff09~~\u540e\uff0c\u901a\u8fc7 $\\operatorname{Kruskal}$ \u751f\u6210\u6811\u7b97\u6cd5\uff0c\u8fde\u8fb9\u65f6\u65ad\u5f00\u8fd9\u6761\u8fb9\uff0c\u800c\u662f\u65b0\u5efa\u4e00\u4e2a\u70b9\uff0c\u8ba9\u8fd9\u4e2a\u65b0\u70b9\u6765\u8fde\u63a5\u4e24\u70b9\uff0c\u65b0\u70b9\u7684\u70b9\u6743\u4e3a\u539f\u6765\u8fde\u8fb9\u7684\u6743\u503c\u3002\u8fd9\u5c31\u662f $\\operatorname{Kruskal}$ \u91cd\u6784\u6811\u3002\n\n\u5f97\u5230 $\\operatorname{Kruskal}$ \u91cd\u6784\u6811\u540e\uff0c\u4e3a\u4e86 $u$ \u548c $v$ \u8fde\u901a\uff0c\u8fde\u63a5\u7684\u8fb9\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\uff0c\u5373\u4e3a $u$ \u548c $v$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u70b9\u6743\u3002\u901a\u8fc7\u500d\u589e\u6cd5\u6c42\u51fa\u6700\u8fd1\u516c\u5171\u7956\u5148\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6240\u6709\u7684 $i(1\\le i<n)$\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u4f7f $i$ \u548c $i+1$ \u8fde\u901a\u7684\u4ee3\u4ef7\uff08\u8bbe\u4e3a $ans_i$\uff09\u3002\u7136\u540e\uff0c\u5efa\u9020\u7ebf\u6bb5\u6811\uff0c\u9884\u5904\u7406\u51fa\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u6700\u540e\uff0c\u8be2\u95ee $l,r$ \u672c\u8d28\u4e0a\u5c31\u662f\u4f7f $[l,1+1],[l+1,l+2],\u2026[r-1,r]$ \u90fd\u8fde\u901a\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\max_{i=l}^{r-1}ans_i$\u3002\u5229\u7528\u7ebf\u6bb5\u6811\u6c42\u51fa\u5373\u53ef\u3002\n\n### 3 \u4ee3\u7801\u4e0e\u8bb0\u5f55\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define max_n 200000\nint t;\nint n;\nint m;\nint q;\nstruct L{\n\tint u,v,w;\n}l[max_n+2];\nint fa[max_n<<2];\nint fi;\nint w[max_n<<2];\nstruct E{\n\tint v,nx;\n}e[max_n<<2];\nint ei;\nint fir[max_n<<2];\nbool vis[max_n<<2];\nint de[max_n<<2];\nint fat[max_n<<2][22];\nint ans[max_n<<2];\nint tr[max_n<<4];\nint find(int a){\n\tif(a==fa[a])return a;\n\treturn fa[a]=find(fa[a]);\n}\nvoid addedge(int u,int v){\n\te[++ei]=(E){v,fir[u]}; fir[u]=ei;\n}\nvoid dfs(int u){\n\tvis[u]=true;\n\tfor(int i=1;i<=20;++i)fat[u][i]=fat[fat[u][i-1]][i-1];\n\tfor(int i=fir[u],v;i;i=e[i].nx){\n\t\tv=e[i].v;\n\t\tde[v]=de[u]+1;\n\t\tfat[v][0]=u;\n\t\tdfs(v);\n\t}\n}\nint asklca(int u,int v){\n\tif(de[u]<de[v])swap(u,v);\n\tfor(int i=20;i>=0;--i){\n\t\tif(de[fat[u][i]]>=de[v])u=fat[u][i];\n\t}\n\tif(u==v)return u;\n\tfor(int i=20;i>=0;--i){\n\t\tif(fat[u][i]^fat[v][i]){\n\t\t\tu=fat[u][i];\n\t\t\tv=fat[v][i];\n\t\t}\n\t}\n\treturn fat[u][0];\n}\nvoid build(int o,int l,int r){\n\tif(l>=r){\n\t\ttr[o]=ans[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(o<<1,l,mid);\n\tbuild(o<<1|1,mid+1,r);\n\ttr[o]=max(tr[o<<1],tr[o<<1|1]);\n}\nint query(int o,int l,int r,int ql,int qr){\n\tif(ql<=l&&r<=qr)return tr[o];\n\tint res=0;\n\tint mid=(l+r)>>1;\n\tif(ql<=mid)res=max(res,query(o<<1,l,mid,ql,qr));\n\tif(qr>mid)res=max(res,query(o<<1|1,mid+1,r,ql,qr));\n\treturn res;\n}\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"CF1706E_1.in\",\"r\",stdin);\n\tfreopen(\"CF1706E_1.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d%d\",&n,&m,&q);\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tscanf(\"%d%d\",&l[i].u,&l[i].v);\n\t\t\tl[i].w=i;\n\t\t}\n\t\tfor(int i=1;i<=(n<<1);++i){\n\t\t\tfa[i]=i;\n\t\t\tfir[i]=0;\n\t\t\tvis[i]=false;\n\t\t}\n\t\tfi=n;\n\t\tei=0;\n\t\tfor(int i=1,u,v,uf,vf;i<=m;++i){\n\t\t\tu=l[i].u;\n\t\t\tv=l[i].v;\n\t\t\tuf=find(u);\n\t\t\tvf=find(v);\n\t\t\tif(uf!=vf){\n\t\t\t\tfa[uf]=fa[vf]=++fi;\n\t\t\t\tw[fi]=l[i].w;\n\t\t\t\taddedge(fi,uf);\n\t\t\t\taddedge(fi,vf);\n\t\t\t}\n\t\t}\n\t\tfor(int i=fi;i>n;--i){\n\t\t\tif(!vis[i]){\n\t\t\t\tde[i]=1;\n\t\t\t\tfat[i][0]=i;\n\t\t\t\tdfs(i);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1,l;i<n;++i){\n\t\t\tl=asklca(i,i+1);\n\t\t\tans[i]=w[l];\n\t\t}\n\t\tbuild(1,1,n-1);\n\t\tfor(int i=1,l,r;i<=q;++i){\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tif(l==r)printf(\"0 \");\n\t\t\telse printf(\"%d \",query(1,1,n-1,l,r-1));\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n[\u8bb0\u5f55\u4f20\u9001\u95e8](https://www.luogu.com.cn/record/80265906)\n\nBy **dengziyue**",
        "postTime": 1658224974,
        "uid": 387840,
        "name": "happy_dengziyue",
        "ccfLevel": 6,
        "title": "CF1706E\u9898\u89e3"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\nqwq\u9898\u89e3\u91cc\u8c8c\u4f3c\u6ca1\u6709\u548c\u6211\u505a\u6cd5\u76f8\u540c\u7684\u3002\n\n\u6765\u4e00\u6ce2\u4e3b\u5e2d\u6811+\u4e8c\u5206+\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n## \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u4ee5\u53ca $q$ \u4e2a\u8be2\u95ee\uff0c\u67e5\u8be2\u81f3\u5c11\u52a0\u5230\u7f16\u53f7\u524d\u591a\u5c11\u6761\u8fb9\u65f6\u80fd\u4f7f\u7f16\u53f7\u5728\u533a\u95f4 $[l,r]$ \u7684\u6240\u6709\u8282\u70b9\u8fde\u901a\u3002\n\n## \u89e3\u9898\u601d\u8def\uff1a\n\n\u89c2\u5bdf\u5230\u201c\u7f16\u53f7\u5728\u533a\u95f4 $[l,r]$ \u7684\u6240\u6709\u8282\u70b9\u662f\u5426\u8fde\u901a\u201d\u5728\u52a0\u8fb9\u65f6\u5177\u6709\u5355\u8c03\u6027\uff0c\u56e0\u4e3a\u52a0\u5230\u67d0\u4e00\u6761\u8fb9\u4e4b\u540e $[l,r]$ \u8fde\u901a\u4e86\uff0c\u6b64\u540e\u6240\u6709\u7684\u72b6\u6001\u4e00\u5b9a\u4e5f\u662f\u8fde\u901a\u7684\u3002\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u4e8c\u5206\u4e00\u4e2a\u8fb9\u7684\u7f16\u53f7 $i$\uff0c\u5224\u65ad\u52a0\u8fb9\u52a0\u5230 $i$ \u65f6\u5176\u662f\u5426\u8fde\u901a\u3002\n\n\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u533a\u95f4\u662f\u8fde\u901a\u7684\u3002\n\n\u53d1\u73b0\u5982\u679c\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u56fe\u7684\u8fde\u901a\u6027\uff0c\u4e00\u4e2a\u533a\u95f4\u662f\u8fde\u901a\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e9b\u8282\u70b9\u8def\u5f84\u538b\u7f29\u540e\u7684\u7956\u5148\u76f8\u540c\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002 \n\n\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u7684\u65f6\u5019\u9700\u8981\u5c06\u67d0\u4e00\u96c6\u5408\u5185\u8282\u70b9\u7684\u7956\u5148\u5168\u90e8\u4fee\u6539\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528 ```vector``` \u5b58\u4e00\u4e0b\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u8fdb\u884c\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u5408\u5e76\u7684\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$\uff08\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u7956\u5148\uff09\u3002\n\n\u7531\u4e8e\u6211\u4eec\u8fd8\u9700\u8981\u4fdd\u5b58\u6240\u6709\u52a0\u8fb9\u52a0\u5230\u67d0\u4e00\u6761\u8fb9\u65f6\u56fe\u7684\u8fde\u901a\u72b6\u6001\uff0c\u67e5\u8be2\u65f6\u5e94\u8be5\u5728\u4ee3\u8868\u67d0\u4e2a\u72b6\u6001\u7684\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6253\u4e3b\u5e2d\u6811\u3002\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$\u3002\n\n\u597d\uff0c\u7136\u540e\u53d1\u73b0\u7a7a\u95f4\u70b8\u4e86\u3002\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u4f1a\u88ab\u5408\u5e76 $\\log n$ \u6b21\uff0c\u6bcf\u6b21\u4fee\u6539 $\\log n$ \u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\uff0c\u56e0\u6b64\u7a7a\u95f4\u4e5f\u662f $O(n\\log^2n)$ \u7684\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u4e0a\u754c\u597d\u50cf\u8fbe\u4e0d\u5230\uff0c\u7a7a\u95f4\u5f00\u5230 ```100000*150``` \u5c31\u8fc7\u4e86qwq\u3002\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\uff1a\n\n```\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\n#define Reg register\n#define lson(rt) tr[rt].ls\n#define rson(rt) tr[rt].rs\nusing namespace std;\nconst int maxn=100100;\nint T,tot,n,m,q,f[maxn],RT[maxn<<1];\nvector<int> S[maxn];\nstruct EE{\n    int ls,rs,v;\n    bool fl;\n    EE(){ls=rs=v=0,fl=0;}\n    EE operator +(const EE &A)const{\n        EE res;\n        if(fl&&A.fl){\n            if(v==A.v){\n                res.fl=1,res.v=v;\n            }\n        }\n        return res;\n    }\n}tr[maxn*150];\ninline int read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-') w=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        s=(s<<1)+(s<<3)+(ch^48);\n        ch=getchar();\n    }\n    return s*w;\n}\ninline void pushup(int rt){\n    tr[rt].fl=tr[rt].v=0;\n    if(tr[lson(rt)].fl&&tr[rson(rt)].fl){\n        if(tr[lson(rt)].v==tr[rson(rt)].v){\n            tr[rt].fl=1;\n            tr[rt].v=tr[lson(rt)].v;\n        }\n    }\n}\ninline int build(int l,int r){\n    int dir=++tot;\n    if(l==r){\n        tr[dir].v=l;\n        tr[dir].fl=1;\n        return dir;\n    }\n    int mid=(l+r)>>1;\n    lson(dir)=build(l,mid);\n    rson(dir)=build(mid+1,r);\n    pushup(dir);\n    return dir;\n}\ninline int finds(int x){\n    if(x!=f[x]) f[x]=finds(f[x]);\n    return f[x];\n}\ninline int update(int rt,int l,int r,int p,int v){\n    int dir=++tot;\n    tr[dir]=tr[rt];\n    if(l==r){\n        tr[dir].v=v;\n        return dir;\n    }\n    int mid=(l+r)>>1;\n    if(p<=mid) lson(dir)=update(lson(rt),l,mid,p,v);\n    else rson(dir)=update(rson(rt),mid+1,r,p,v);\n    pushup(dir);\n    return dir;\n}\ninline EE query(int rt,int L,int R,int l,int r){\n    if(l<=L&&R<=r) return tr[rt];\n    int mid=(L+R)>>1;\n    if(r<=mid) return query(lson(rt),L,mid,l,r);\n    else if(l>mid) return query(rson(rt),mid+1,R,l,r);\n    else{\n        EE K=query(lson(rt),L,mid,l,mid);\n        if(!K.fl) return K;\n        //\u6ce8\u610f\u8fd9\u91cc\uff0c\u5de6\u533a\u95f4\u4e0d\u5b58\u5728\u76f8\u540c\u7684\u7956\u5148\u65f6\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\n        else return K+query(rson(rt),mid+1,R,mid+1,r);\n    } \n}\ninline void solve(){\n    n=read(),m=read(),q=read();\n    for(Reg int i=1;i<=n;++i) f[i]=i,S[i].clear(),S[i].push_back(i);\n    tot=0;\n    RT[0]=build(1,n);\n    for(Reg int i=1;i<=m;++i){\n        RT[i]=RT[i-1];\n        int x=read(),y=read();\n        x=finds(x),y=finds(y);\n        if(x==y) continue;\n            if(S[x].size()<S[y].size()){\n                f[x]=y;\n                while(S[x].size()){\n                    RT[i]=update(RT[i],1,n,S[x].back(),y);\n                    S[y].push_back(S[x].back());\n                    S[x].pop_back();\n                }\n            }else{\n                f[y]=x;\n                while(S[y].size()){\n                    RT[i]=update(RT[i],1,n,S[y].back(),x);\n                    S[x].push_back(S[y].back());\n                    S[y].pop_back();\n                }\n            } \n    }\n    while(q--){\n        int l=read(),r=read();\n        int L=0,R=m,ans=0;\n        while(L<=R){\n            int mid=(L+R)>>1;\n            if(query(RT[mid],1,n,l,r).fl) ans=mid,R=mid-1;\n            else L=mid+1;\n        }\n        printf(\"%d \",ans);\n    }\n    printf(\"\\n\");\n}\nint main(){\n    T=read();\n    while(T--) solve();\n    return 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1qwq\u3002\n\n\n\n\n\n\n",
        "postTime": 1667442907,
        "uid": 663976,
        "name": "Broken_Eclipse",
        "ccfLevel": 7,
        "title": "CF1706E Qpwoeirut and Vertices"
    },
    {
        "content": "\u4e00\u9053\u65b9\u6cd5\u5f88\u591a\u7684\u56fe\u8bba $+$ \u6570\u636e\u7ed3\u6784\u9898\u3002\u653e\u5728 div.2 \u7684\u6700\u540e\u4e00\u9898\u592a\u7b80\u5355\u4e86\uff0c\u53ef\u80fd\u6254\u5230 edu \u573a\u4f1a\u66f4\u597d\u3002\n\n#### \u9898\u610f\uff1a\u7ed9\u51fa $n$ \u4e2a\u70b9\uff0c $m$ \u6761\u8fb9\u7684\u4e0d\u5e26\u6743\u8fde\u901a\u65e0\u5411\u56fe\uff0c $q$ \u6b21\u8be2\u95ee\u81f3\u5c11\u8981\u52a0\u5b8c\u7f16\u53f7\u524d\u591a\u5c11\u7684\u8fb9\uff0c\u624d\u80fd\u4f7f\u5f97 $[l,r]$ \u4e2d\u7684\u6240\u6709\u70b9\u4e24\u4e24\u8fde\u901a\u3002\n\n## \u65b9\u6cd5\u4e00\u3001Kruskal \u91cd\u6784\u6811\n\n\u601d\u8003 Kruskal \u91cd\u6784\u6811\u7684\u6700\u57fa\u672c\u7684\u529f\u80fd\u662f\u4ec0\u4e48\uff1a\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6c42\u51fa\u5e26\u6743\u56fe\u4e0a\u7684\u8fde\u901a\u4e24\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u8def\u5f84\u4e2d\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c\uff08\u6216\u8005\u6700\u5c0f\u8fb9\u6743\u7684\u6700\u5927\u503c\uff09\u3002\n\n\u90a3\u4e48\u5728\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u770b\u505a\u5b83\u7684\u7f16\u53f7\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u82e5 $l=r$ \uff0c\u663e\u7136\u7b54\u6848\u662f $0$ \uff1b\u5426\u5219\uff0c\u7b54\u6848\u5c31\u662f $l,l+1,...,r$ \u8fd9 $r-l+1$ \u4e2a\u70b9\u5728 Kruskal \u91cd\u6784\u6811\u4e0a\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n\u4e8e\u662f\uff0c\u6574\u9053\u9898\u76ee\u5c31\u88ab\u6211\u4eec\u5316\u7b80\u6210\u4e86\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c$q$ \u6b21\u6c42 $[l,r]$ \u7684 LCA \u3002\n\n\u6700 naive \u7684\u529e\u6cd5\u662f\uff1a\u6ce8\u610f\u5230 LCA \u8fd0\u7b97\u5177\u6709\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+q\\log^2 n)$ \u3002\u5e38\u6570\u4e0d\u5c0f\uff0c\u5b9e\u73b0\u4f18\u79c0\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u3002\uff08\u6211\u5c31\u8fd9\u4e48\u5199\u7684\uff09\n\n\u5176\u5b9e\u7a0d\u5fae\u8f6c\u5316\u4e00\u4e0b\u5c31\u80fd\u5927\u5927\u964d\u4f4e\u590d\u6742\u5ea6\u3002\u9996\u5148\u5728 Kruskal \u91cd\u6784\u6811\u4e0a\u6211\u4eec\u53ef\u4ee5\u7528 $O(\\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6c42\u51fa\u4efb\u610f\u4e24\u70b9 $x,y$ \u6700\u65e9\u8fde\u901a\u7684\u65f6\u95f4\uff08\u5373\u90a3\u4e2a $k$\uff09\uff0c\u53c8\u56e0\u4e3a\u5f53 $l<r$ \u65f6\uff0c $[l,r]$ \u533a\u95f4\u4e2d\u7684\u70b9\u5168\u90e8\u4e24\u4e24\u8fde\u901a\u5b8c\u5168\u7b49\u4ef7\u4e8e $l$ \u4e0e $l+1$ \u8fde\u901a\uff0c $l+1$ \u4e0e $l+2$ \u8fde\u901a...... $r-1$ \u4e0e $r$ \u8fde\u901a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa $f_i$ \u8868\u793a\u70b9 $i$ \u4e0e\u70b9 $i+1$ \u6700\u65e9\u8fde\u901a\u7684\u65f6\u95f4\uff08$1\\leq i \\leq n - 1$\uff09\uff0c\u95ee\u9898\u5c31\u8fdb\u4e00\u6b65\u7b80\u5316\u6210\u4e86\u6c42 $f_i$ \u5728\u533a\u95f4 $[l,r-1]$ \u4e0a\u7684\u9759\u6001\u6700\u5927\u503c\uff0c\u7528\u7ebf\u6bb5\u6811\u6216\u8005 ST \u8868\u90fd\u53ef\u4ee5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\log n)$ \u6216 $O(n\\log n+q)$\u3002\n\n## \u65b9\u6cd5\u4e8c\u3001\u6574\u4f53\u4e8c\u5206\n\n\u5728\u65b9\u6cd5\u4e00\u4e2d\uff0c\u6211\u4eec\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\u5df2\u7ecf\u628a\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u201c\u9884\u5904\u7406\u51fa $f_i$ \u8868\u793a\u70b9 $i$ \u4e0e\u70b9 $i+1$ \u6700\u65e9\u8fde\u901a\u7684\u65f6\u95f4\uff08$1\\leq i \\leq n - 1$\uff09\u201d\uff0c\u6c42\u51fa\u6240\u6709 $f_i$ \u540e\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n\u5982\u679c\u4e0d\u4f1a Kruskal \u91cd\u6784\u6811\u548c\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\uff0c\u600e\u4e48\u529e\u5462\uff1f\u6574\u4f53\u4e8c\u5206\u8fd9\u4e2a\u8fdc\u53e4\u7b97\u6cd5\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\n\n\u6700\u7b80\u5355\u7684\u4e8c\u5206\u60f3\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u4e2a $i$ \uff0c\u66b4\u529b\u4e8c\u5206\u52a0\u5230\u4e86\u524d $x$ \u6761\u8fb9\uff0c\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u8fde\u901a\u6027\uff0c\u590d\u6742\u5ea6\u7206\u70b8\u3002\n\n\u628a\u6bcf\u4e2a $f_i$ \u770b\u4f5c\u4e00\u4e2a\u8be2\u95ee\uff0c\u7528\u6574\u4f53\u4e8c\u5206\u5904\u7406\u5b83\u4eec\u3002\u8003\u8651\u5f53\u524d\u5728\u8ba1\u7b97\u4e00\u4e9b\u7b54\u6848\u503c\u57df\u5728 $[l,r]$ \u4e2d\u7684\u8be2\u95ee\u3002\u82e5 $l=r$ \uff0c\u66f4\u65b0\u5bf9\u5e94\u7684 $f_i$ \uff0c**\u5e76\u5c06\u7f16\u53f7\u4e3a** $l=r$ **\u7684\u8fd9\u6761\u8fb9\u6c38\u4e45\u52a0\u4e0a\uff0c\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6211\u4eec\u6bcf\u6b21\u5728\u5904\u7406\u7b54\u6848\u503c\u57df\u5728** $[l,r]$ **\u4e2d\u7684\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u7f16\u53f7\u5728** $[1,l-1]$ **\u4e2d\u7684\u8fb9\u5fc5\u987b\u5df2\u7ecf\u52a0\u4e0a\u4e86** \u3002\u82e5 $l<r$ \uff0c\u5219\u4e34\u65f6\u52a0\u4e0a $[l,mid]$ \u7684\u8fb9\uff0c\u628a\u8be2\u95ee\u5212\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5e76\u5c06 $[l,mid]$ \u7684\u8fb9\u64a4\u56de\u3002\u7136\u540e\u5148\u9012\u5f52\u5de6\u534a\u8fb9\u518d\u9012\u5f52\u53f3\u534a\u8fb9\u3002\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\uff0c\u5fc5\u987b\u6309\u79e9\u5408\u5e76\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log m\\log n+q)$ \u6216 $O(m\\log m\\log n + q\\log n)$\u3002\n\n\u53ea\u653e\u4e00\u4e0b\u65b9\u6cd5\u4e00\u590d\u6742\u5ea6 $O(n\\log n+q\\log^2 n)$ \u7684\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nvoid solve();\nsigned main(){\n\tint T = 1;\n\tscanf(\"%d\", &T);\n\twhile(T--) solve();\n\treturn 0;\n}\nint n, m, q, fa[300005], tot, anc[20][300005], dep[300005];\nint val[400005];\nint fd(int x){\n\treturn x == fa[x] ? x : fa[x] = fd(fa[x]);\n}\nstd::vector<int>v[300005];\nvoid dfs(int x){\n\tfor(int i = 1; i <= 19; ++i) anc[i][x] = anc[i - 1][anc[i - 1][x]];\n\tfor(int i = 0; i < v[x].size(); ++i){\n\t\tint ver = v[x][i];\n\t\tdep[ver] = dep[x] + 1;\n\t\tanc[0][ver] = x;\n\t\tdfs(ver);\n\t}\n\treturn ;\n}\nint lca(int x, int y){\n\tif(dep[x] < dep[y]) std::swap(x, y);\n\tfor(int i = 0; i <= 19; ++i) if((dep[x] - dep[y]) & (1 << i))\n\t\tx = anc[i][x];\n\tif(x == y) return x;\n\tfor(int i = 19; i >= 0; --i) if(anc[i][x] ^ anc[i][y])\n\t\tx = anc[i][x], y = anc[i][y];\n\treturn x == y ? x : anc[0][x];\n}\nvoid build(int x, int l, int r){\n\tif(l == r){\n\t\tval[x] = l;\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(x * 2, l, mid);\n\tbuild(x * 2 + 1, mid + 1, r);\n\tval[x] = lca(val[x * 2], val[x * 2 + 1]);\n\treturn ;\n}\nint Query(int x, int l, int r, int L, int R){\n\tif(l == L && r == R) return val[x];\n\tint mid = l + r >> 1;\n\tif(R <= mid) return Query(x * 2, l, mid, L, R);\n\tif(L >= mid + 1) return Query(x * 2 + 1, mid + 1, r, L, R);\n\tint y = Query(x * 2, l, mid, L, mid);\n\tint z = Query(x * 2 + 1, mid + 1, r, mid + 1, R);\n\treturn lca(y, z);\n}\nvoid solve(){\n\tscanf(\"%d%d%d\", &n, &m, &q);\n\ttot = 0;\n\tfor(int i = 1; i <= n + m; ++i) fa[i] = i;\n\tfor(int i = 1; i <= n + m; ++i) v[i].clear();\n\tfor(int i = 1; i <= m; ++i){\n\t\tint u, vv;\n\t\tscanf(\"%d%d\", &u, &vv);\n\t\tint fu = fd(u), fv = fd(vv);\n\t\tif(fu == fv) continue;\n\t\tv[i + n].push_back(fu), v[i + n].push_back(fv);\n\t\tfa[fu] = fa[fv] = i + n;\n\t\ttot = i + n;\n\t}\n\tdep[tot] = 1;\n\tdfs(tot);\n\tbuild(1, 1, n);\n\tfor(int i = 1; i <= q; ++i){\n\t\tint l, r;\n\t\tscanf(\"%d%d\", &l, &r);\n\t\tif(l ^ r) printf(\"%d \", Query(1, 1, n, l, r) - n);\n\t\telse printf(\"0 \");\n\t}\n\tprintf(\"\\n\");\n\treturn ;\n}\n```\n",
        "postTime": 1658197133,
        "uid": 131591,
        "name": "\u849f\u84bb\u541bHJT",
        "ccfLevel": 7,
        "title": "CF1706E Qpwoeirut and Vertices \u9898\u89e3"
    },
    {
        "content": "## 1706E [graph] [dsu]\n\n\u8003\u8651\u628a $[l,r]$ \u533a\u95f4\u5185\u7684\u8054\u901a\u6761\u4ef6\u62c6\u6210 $(l,l+1)$\uff0c$(l+1,l+2)$\uff0c\u2026\u2026\uff0c$(l+1,r)$ \u5206\u522b\u8054\u901a\u81f3\u5c11\u8981\u6709\u51e0\u6761\u8fb9\uff0c\u7b54\u6848\u53d6 $\\max$ \u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002\u6211\u7528\u7684\u662f\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u628a\u8be2\u95ee\u6302\u5728\u96c6\u5408\u91cc\uff08\u6b64\u65f6\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u5df2\u7ecf\u4e0d\u91cd\u8981\uff09\u3002\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u7684\u65f6\u5019\uff0c\u9009\u62e9\u5904\u7406\u8be2\u95ee\u5c11\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u8be2\u95ee\u7684\u7b54\u6848\u5bf9\u5f53\u524d\u5408\u5e76\u7684\u8fb9\u7684\u7f16\u53f7\u6c42 $\\min$\u3002\u518d\u628a\u5143\u7d20\u8f83\u5c11\u7684\u5408\u5e76\u5230\u5143\u7d20\u8f83\u591a\u7684\u3002\n\n\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u8fd9\u6837\u771f\u7684\u5904\u7406\u5b8c\u6240\u6709\u8be2\u95ee\u4e86\u5417\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u56e0\u4e3a\u4e24\u4e2a\u70b9\u5408\u5e76\u5230\u4e00\u8d77\u7684\u65f6\u5019\uff0c\u5fc5\u7136\u6709\u4e00\u4e2a\u70b9\u5728\u5c0f\u7684\u96c6\u5408\u91cc\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8be2\u95ee\u5c31\u4f1a\u88ab\u5904\u7406\u3002\n\n\u81ea\u5df1\u60f3\u7684\u4e00\u4e2a\u5f88\u5999\u7684\u505a\u6cd5\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll t,n,m,q,f[200005],u[200005],v[200005],ans[200005],sz[200005],w[25][200005];\nvector<pair<ll,ll> >Q[200005];\nmap<ll,bool>M[200005];\nll query(ll l,ll r){\n\tll p2=log2(r-l+1);\n\treturn max(w[p2][l],w[p2][r-(1ll<<p2)+1]);\n} \nint main(){\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tcin>>t;\n\twhile(t--){\n\t\tcin>>n>>m>>q;\n\t\tfor(ll i=1;i<=n;i++) f[i]=i, sz[i]=1, Q[i].clear(), M[i].clear(), M[i][i]=1, ans[i]=1e18;\n\t\tfor(ll i=1;i<=m;i++)\n\t\t\tcin>>u[i]>>v[i];\n\t\tfor(ll i=1;i<n;i++) Q[i].push_back(make_pair(i+1,i)), Q[i+1].push_back(make_pair(i,i)); // \u6ce8\u610f\uff0c\u8be2\u95ee\u4e24\u4e2a\u70b9\u4e0a\u90fd\u5f97\u6302\n\t\tfor(ll i=1;i<=m;i++){\n\t\t\tif(f[u[i]]==f[v[i]]) continue;\n\t\t\tll x=f[u[i]], y=f[v[i]];\n\t\t\tif(Q[x].size()>Q[y].size()) swap(x,y);\n\t\t\tfor(auto p: Q[x]){\n\t\t\t\tll to=p.first, id=p.second;\n\t\t\t\tif(M[y].count(to)) ans[id]=min(ans[id],i);\n\t\t\t\tQ[y].push_back(p);\n\t\t\t}\n\t\t\tQ[x].clear(); // \u5904\u7406\u8be2\u95ee\n\t\t\tif(sz[x]>sz[y]) swap(Q[x],Q[y]),swap(x,y);\n\t\t\tfor(auto p: M[x]){\n\t\t\t\tll now=p.first;\n\t\t\t\tf[now]=y; M[y][now]=1;\n\t\t\t} sz[y]+=sz[x];\n\t\t\tM[x].clear(); sz[x]=0; // \u5904\u7406\u70b9\u96c6\n\t\t}\n\t\tfor(ll i=1;i<n;i++) w[0][i]=ans[i];\n\t\tll p=log2(n-1);\n\t\tfor(ll i=1;i<=p;i++)\n\t\t\tfor(ll j=1;j<=(n-(1ll<<i));j++)\n\t\t\t\tw[i][j]=max(w[i-1][j],w[i-1][j+(1ll<<(i-1))]);\n\t\twhile(q--) {\n\t\t\tll l,r; cin>>l>>r;\n\t\t\tif(l==r) cout<<0<<\" \";\n\t\t\telse cout<<query(l,r-1)<<\" \"; \n\t\t}\n        cout<<endl; \n\t}\n\treturn 0; \n} \n```",
        "postTime": 1658326554,
        "uid": 342487,
        "name": "Frevotops",
        "ccfLevel": 0,
        "title": "Solution CF1706E"
    },
    {
        "content": "\u524d\u51e0\u5929\u521a\u5b66 $\\text{Kruskal}$ \u91cd\u6784\u6811\uff0c\u7528\u5230 CF \u91cc\u5c31\u4e0d\u4f1a\u4e86\u2026\u2026\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee $(l,r)$\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- $l=r$\uff0c\u6b64\u65f6\u663e\u7136\u7b54\u6848\u4e3a 0\u3002\n\n- $l<r$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u51fd\u6570 $f(i)$ \u4e3a\u5c06\u70b9 $i$ \u548c $i-1$ \u4e24\u70b9\u8fde\u901a\u7684\u6700\u5c0f\u8fb9\u6570\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u4e00\u7ec4 $(i-1,i)$ \u7684\u8be2\u95ee\u3002\n\n\u4e8e\u662f\u73b0\u5728\uff0c\u6211\u4eec\u7684 $ans_{(l,r)}=\\max_{i=l+1}^r f(i)$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651 $f(i)$ \u600e\u4e48\u6c42\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5bf9\u7b2c $i$ \u6761\u8fb9\u8d4b\u4e00\u4e2a\u8fb9\u6743 $w=i$\uff0c\u90a3\u4e48\u7528 $\\text{Kruskal}$ \u751f\u6210\u7684\u6700\u5c0f\u751f\u6210\u6811\u552f\u4e00\u4e14\u4e0e\u539f\u751f\u6210\u6811\u76f8\u540c\u3002\n\n\u4e8e\u662f\u8fb9\u7684\u7f16\u53f7\u8f6c\u5316\u4e3a\u8fb9\u7684\u8fb9\u6743\uff0c\u73b0\u5728 $f(i)$ \u53d8\u4e3a\u6c42\u6811\u4e0a $i$ \u548c $i-1$ \u8def\u5f84\u4e0a\u7684\u6700\u5927\u8fb9\u3002\n\n\u4e8e\u662f\u60f3\u5230 $\\text{Kruskal}$ \u91cd\u6784\u6811\u3002\n\n\u5bf9\u539f\u56fe\u52a0\u5165\u8fb9\u6743\u540e\uff0c\u8dd1\u51fa\u4e00\u9897 $\\text{Kruskal}$ \u91cd\u6784\u6811\uff0c\u7136\u540e\u6c42 $i$ \u4e0e $i-1$ \n\u7684 $\\text{lca}$ \u7684\u70b9\u6743\uff0c\u5c31\u662f $f(i)$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u533a\u95f4 $\\max$\uff0c\u4e0a\u4e00\u4e2a ST \u8868\u5c31\u80fd\u89e3\u51b3\u95ee\u9898\u3002\n\n```\n// Problem: E. Qpwoeirut and Vertices\n// Contest: Codeforces Round #809 (Div. 2)\n// URL: https://codeforces.com/contest/1706/problem/E\n// Memory Limit: 256 MB\n// Time Limit: 2000 ms\n// \n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define f(i,a,b) for(ll i=a;i<=b;i++)\n#define wt int tt=d;while(tt--)\n#define py puts(\"Yes\")\n#define pn puts(\"No\")\n#define fe(i,e) for(int i=0;i<e.size();i++)\n#define vi vector<ll>\ninline ll rd() {\n\tll x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n\twhile(isdigit(c))x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\nll dx[4]={0,1,0,-1};\nll dy[4]={1,0,-1,0};\n#define d rd()\n#define pb push_back\nll qp(ll a,ll b,ll p){\n\tll ans=1;while(b){\n\t\tif(b&1)ans=ans*a%p;\n\t\ta=a*a%p;b>>=1;\n\t}return ans;\n}ll n,m,cnt,q;\nvi e[200010];\nll val[200010];\nstruct node{ll u,v,w;}a[200010];\nbool cmp(node a,node b){return a.w<b.w;}\nll fa[200010];\nll find(ll x){\n\tif(fa[x]==x)return x;\n\treturn fa[x]=find(fa[x]);\n}\nll f[200010][20];\nll de[200010];\nll st[200010][20];\nll lg[200010];\nvoid dfs(ll u,ll fat){\n\tf[u][0]=fat;\n\tde[u]=de[fat]+1;\n\tfe(i,e[u]){\n\t\tll v=e[u][i];\n\t\tif(v==fat)continue;\n\t\tdfs(v,u);\n\t}\n}ll lca(ll u,ll v){\n\tif(de[u]<de[v])swap(u,v);\n\tfor(int i=19;i>=0;i--)\n\t\tif(de[u]-(1<<i)>=de[v]){\n\t\t\tu=f[u][i];\n\t\t\tif(u==v)return u;\n\t}\n\tfor(int i=19;i>=0;i--)\n\t\tif(f[u][i]!=f[v][i])\n\t\t\tu=f[u][i],v=f[v][i];\n\treturn f[u][0];\n}\nint main(){\n\twt{\n\t\tn=d,m=d,q=d;cnt=n;\n\t\tf(i,1,n*2)e[i].clear(),fa[i]=i,de[i]=0;\n\t\tf(i,1,m)a[i]={d,d,i};\n\t\tsort(a+1,a+m+1,cmp);\n\t\tf(i,1,m){\n\t\t\tll u=a[i].u,v=a[i].v,w=a[i].w;\n\t\t\tif(find(u)==find(v))continue;\n\t\t\tval[++cnt]=w;\n\t\t\tu=find(u),v=find(v);\n\t\t\tfa[u]=cnt,fa[v]=cnt;\n\t\t\te[cnt].pb(u),e[cnt].pb(v);\n\t\t}\n\t\tdfs(cnt,0);\n\t\tf(j,1,19)f(i,1,cnt)f[i][j]=f[f[i][j-1]][j-1];\n\t\tf(i,2,n)st[i][0]=val[lca(i,i-1)];\n\t\tlg[0]=-1;f(i,1,n)lg[i]=lg[i/2]+1;\n\t\tf(j,1,19)f(i,1,n)if(i+(1<<(j-1))<=n)\n\t\t\tst[i][j]=max(st[i][j-1],st[i+(1<<(j-1))][j-1]);\n\t\twhile(q--){\n\t\t\tll l=d,r=d;\n\t\t\tif(l==r){printf(\"0 \");continue;}\n\t\t\tl++;\n\t\t\tprintf(\"%lld \",max(st[l][lg[r-l+1]],st[r-(1<<lg[r-l+1])+1][lg[r-l+1]]));\n\t\t}puts(\"\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1658195215,
        "uid": 90706,
        "name": "_jimmywang_",
        "ccfLevel": 0,
        "title": "CF1706E"
    },
    {
        "content": "# E. Qpwoeirut and Vertices\n\n> \u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6709 $q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e24\u4e2a\u6570 $l,r$\uff0c\u8bf7\u4f60\u7ed9\u51fa\u6700\u5c0f\u7684 $k$ \u4f7f\u5f97\uff1a\n>\n> \u4ec5\u4f7f\u7528\u524d $k$ \u6761\u8fb9\u5c31\u80fd\u4f7f\u6240\u6709\u70b9\u5bf9 $(a,b)$ \u8054\u901a\uff0c\u5176\u4e2d $a,b$ \u6ee1\u8db3 $l \\leq a \\leq b \\leq r$\u3002\n>\n> $n \\leq 10^5,m,q \\leq 2\\times 10^5$\n\n## \u5206\u6790\n\n\u8fd9\u4e2a\u9898\u5176\u5b9e\u548c [AGC002D](https://atcoder.jp/contests/agc002/tasks/agc002_d) \u6709\u7740\u4e00\u5b9a\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u8fd9\u7c7b\u5728\u56fe\u4e0a\u6c42\u4e00\u4e9b\u6700\u503c\u7684\u9898\u6bd4\u8f83\u5e38\u89c1\u7684\u5957\u8def\u8981\u4e48\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u8981\u4e48\u662f Kruskal \u91cd\u6784\u6811\u3002\n\n\u8fd9\u9898\u7ebf\u6bb5\u6811\u5206\u6cbb\u663e\u7136\u662f\u6ca1\u6709\u4ec0\u4e48\u524d\u9014\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651 Kruskal \u91cd\u6784\u6811\u3002\u7531\u4e8e\u8fd9\u9898\u6c42\u7684\u662f\u6309\u7167\u8fb9\u7684\u987a\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8fb9\u7684\u6743\u503c\u8d4b\u4e3a\u8fb9\u7684\u5e8f\u53f7\uff0c\u6392\u5e8f\u540e\u5efa\u51fa Kruskal \u91cd\u6784\u6811\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff0c\u5bf9\u4e8e\u5728 $[l,r]$ \u5185\u7684\u70b9\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4ed6\u4eec\u7684 LCA \u6765\u4fdd\u8bc1\u662f\u80fd\u8054\u901a\u7684\uff08\u8fd9\u4e2a\u5c31\u662f Kruskal \u91cd\u6784\u6811\u7684\u57fa\u672c\u6027\u8d28\u4e86\uff0c\u4e0d\u518d\u8d58\u8ff0\uff09\u3002\u5bf9\u4e8e\u6c42\u591a\u4e2a\u70b9 LCA \u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u7ed3\u8bba\uff1a**\u6811\u4e0a\u591a\u4e2a\u70b9\u7684 LCA\uff0c\u5c31\u662f DFS \u5e8f\u6700\u5c0f\u7684\u548c DFS \u5e8f\u6700\u5927\u7684\u8fd9\u4e24\u4e2a\u70b9\u7684 LCA\u3002**\u8be6\u7ec6\u7684\u8bc1\u660e\u53ef\u4ee5\u6233 [\u5982\u4f55\u5728 DAG \u4e2d\u627e\u591a\u4e2a\u70b9\u7684 LCA ? - \u962e\u884c\u6b62\u7684\u56de\u7b54 - \u77e5\u4e4e](https://www.zhihu.com/question/46440863/answer/165741734)\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u5728 $\\mathcal{O}((m+q)\\log n)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n\u8003\u573a\u4ee3\u7801 \u6700\u540e 2 min \u8fc7\u7684\uff0c\u6240\u4ee5\u7565\u7c97\u7cd9\u3002\n\n```cpp\n#pragma GCC optimize(2)\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#include <cmath>\nusing namespace std;\n#define pii pair<int,int>\n#define mp make_pair\n#define ll long long\n\nchar buf[1 << 20], *p1, *p2;\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 20, stdin), p1 == p2)?EOF: *p1++)\ntemplate <typename T> inline void read(T &t) {\n\tint v = getchar();T f = 1;t = 0;\n\twhile (!isdigit(v)) {if (v == '-')f = -1;v = getchar();}\n\twhile (isdigit(v)) {t = t * 10 + v - 48;v = getchar();}\n\tt *= f;\n}\ntemplate <typename T,typename... Args> inline void read(T &t,Args&... args) {\n\tread(t);read(args...);\n}\nconst int N = 4e5 + 10;\nconst int K = 26;\n\nint n,m,q,k,s,dis[N],F[N],poi[N],val[N],tot,fat[N][K],dep[N],dfn[N],rk[N],cnt,siz[N];\nbool vis[N];\nvector <int> G[N];\nvector <pii> G2[N];\n\nstruct edg {\n    int u,v,w;\n    friend inline bool operator < (const edg &A,const edg &B) {\n        return A.w < B.w;\n    }\n}edge[N];\n\nint find(int x) {return x == F[x] ? x : F[x] = find(F[x]);}\n\nvoid clear() {\n    tot = n;cnt = 0;\n    for (int i = 1;i <= (n << 1);++i) G[i].clear(),F[i] = i,dfn[i] = rk[i] = 0;\n    //memset(fat,0,sizeof fat);\n}\n\nvoid Kruskal() {\n    //poi[0] = 0x3f3f3f3f;\n    for (int i = 1;i <= m;++i) {\n        int u = edge[i].u,v = edge[i].v,w = edge[i].w;\n        //printf(\"%d %d %d %d\\n\",u,v,find(u),find(v));\n        u = find(u),v = find(v);\n        if (u != v) {\n            ++tot;\n            poi[tot] = w;\n            //poi[u] = poi[v] = w;\n            F[u] = F[v] = tot;\n            G[tot].push_back(u);\n            G[u].push_back(tot);\n            G[tot].push_back(v);\n            G[v].push_back(tot);\n        }\n    }\n}\n\nvoid dfs(int x,int fa) {\n    fat[x][0] = fa;\n    dep[x] = dep[fa] + 1;\n    dfn[x] = ++cnt;rk[cnt] = x;\n    //printf(\"%d %d\\n\",fa,x);\n    for (int j = 1;j <= 20;++j) {\n        fat[x][j] = fat[fat[x][j-1]][j-1];\n    }\n    for (auto y : G[x]) {\n        if (y != fa) {\n            dfs(y,x);\n        }\n    }\n}\n\nint LCA(int x,int y) {\n    if (dep[x] > dep[y]) swap(x,y);\n    for (int i = 20;i >= 0;--i) {\n        if (dep[fat[y][i]] >= dep[x]) {\n            y = fat[y][i];\n        }\n    }\n    if (x == y) return x;\n    for (int i = 20;i >= 0;--i) {\n        if (fat[x][i] != fat[y][i]) {\n            x = fat[x][i];\n            y = fat[y][i];\n        }\n    }\n    return fat[x][0];\n}\n\nint st1[K][N],st2[K][N];\n\nvoid init() {\n    for (int j = 0;j <= 20;++j) {\n        for (int i = 1;i + (1 << j) - 1 <= n;++i) {\n            if (!j) st1[j][i] = st2[j][i] = dfn[i];\n            else {\n                st1[j][i] = min(st1[j-1][i],st1[j-1][i + (1 <<j-1)]);\n                st2[j][i] = max(st2[j-1][i],st2[j-1][i + (1 <<j-1)]);\n            }\n        }\n    }\n}\n\nint query1(int l,int r) {\n    int now = log(r - l + 1) / log(2);\n    return min(st1[now][l],st1[now][r - (1 << now) + 1]);\n}\n\nint query2(int l,int r) {\n    int now = log(r - l + 1) / log(2);\n    return max(st2[now][l],st2[now][r - (1 << now) + 1]);\n}\n\n\nvoid solve() {\n    int q;\n    read(n,m,q);\n    clear();\n    for (int i = 1;i <= m;++i) {\n        read(edge[i].u,edge[i].v);\n        edge[i].w = i;\n    }\n    sort(edge + 1,edge + 1 + m);\n    Kruskal();\n    dfs(tot,0);init();\n    //for (int i = 1;i <= n;++i) printf(\"i:%d \",dfn[i]);\n    //puts(\"\");\n    for (int i = 1;i <= q;++i) {\n        int l,r;read(l,r);\n        if (l == r) printf(\"%d \",0);\n        else {\n            int u = rk[query1(l,r)],v = rk[query2(l,r)];\n            //printf(\"u,v:%d %d l:%d\\n\",u,v,query1(l,r));\n            printf(\"%d \",poi[LCA(u,v)]);\n        }\n    }\n    puts(\"\");\n}\n\nsigned main() {\n    int T;read(T);\n    while (T--) solve();\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1658180246,
        "uid": 105230,
        "name": "Retired_Doubeecat",
        "ccfLevel": 6,
        "title": "CF1706E"
    },
    {
        "content": "### \u9898\u610f\u6982\u8ff0\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u70b9 $m$ \u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\u3002\n\n\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6c42\u7b2c\u4e00\u6b21\u8fde\u901a\u7ed9\u5b9a\u4e24\u70b9\u7684\u8fb9\u7684\u5e8f\u53f7\u3002\n\n$( 2 \\leq n \\leq 10^5 , 1 \\leq m,q \\leq 2 \\cdot 10^5 )$\n\n---\n\n### \u601d\u8def\n\n\u7528\u5e76\u67e5\u96c6 ( \u8def\u5f84\u538b\u7f29 + \u542f\u53d1\u5f0f\u5408\u5e76 ) \u7ef4\u62a4\u70b9\u7684\u8fde\u901a\u6027\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u9996\u6b21\u8fde\u901a\u533a\u95f4\u7684\u8fb9\u7684\u5e8f\u53f7\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u5982\u4f55\u7ef4\u62a4\u8be5\u4fe1\u606f\uff1a\n\n $n$ \u4e2a\u8282\u70b9\u6309\u5e8f\u53f7\u6392\u5217\uff0c\u76f8\u90bb\u4e24\u4e2a\u533a\u95f4\u8fde\u901a\uff0c\u5219\u4e24\u4e2a\u533a\u95f4\u7684\u548c\u533a\u95f4\u8fde\u901a\u3002\n\n\u65e2\u7136\u8981\u6c42\u7684\u662f\u4e00\u4e2a\u533a\u95f4\u7684\u8fde\u901a\uff0c\u90a3\u53f6\u5b50\u8282\u70b9\u7ef4\u62a4\u8fde\u63a5\u76f8\u90bb\u8282\u70b9\u7684\u8fb9\u7684\u5e8f\u53f7\uff0c\u5411\u4e0a\u5408\u5e76\u65f6\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u8003\u8651\u5982\u4f55\u66f4\u65b0\u7ebf\u6bb5\u6811\u4e2d\u7ef4\u62a4\u7684\u4fe1\u606f\uff1a\n\n\u6bcf\u6b21\u52a0\u8fb9\u65f6\uff0c\u5f71\u54cd\u7684\u70b9\u4e0d\u4e00\u5b9a\u8fde\u7eed\uff0c\u6240\u4ee5\u66f4\u65b0\u64cd\u4f5c\u662f\u5355\u70b9\u4fee\u6539\u3002\n\n\u4e3a\u4e86\u904d\u5386\u6bcf\u4e2a\u53d7\u52a0\u8fb9\u5f71\u54cd\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u518d\u5229\u7528\u4e00\u4e0b\u521a\u624d\u7684\u5e76\u67e5\u96c6\u3002\n\n\u6bcf\u6b21\u52a0\u8fb9\uff0c\u90fd\u662f\u4e24\u4e2a\u5e76\u67e5\u96c6\u4e4b\u95f4\u7684\u5408\u5e76\u3002\n\n\u56e0\u4e3a\u52a0\u8fb9\u5f71\u54cd\u7684\u662f\u76f8\u90bb\u8282\u70b9\u6070\u597d\u5206\u522b\u5728\u4e24\u5e76\u67e5\u96c6\u4e2d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e24\u8005\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u90fd\u5305\u542b\u4e86\u6240\u6709\u53d7\u5f71\u54cd\u7684\u5143\u7d20\u3002\n\n\u6211\u4eec\u5e0c\u671b\u904d\u5386\u5c3d\u91cf\u5c11\u7684\u70b9\uff0c\u5f53\u7136\u9009\u62e9\u904d\u5386\u8f83\u5c0f\u7684\u90a3\u4e2a\u5e76\u67e5\u96c6\u3002\n\n\u904d\u5386\u53ea\u9700\u8981\u6211\u4eec\u6a21\u62df\u4e00\u4e0b\u52a0\u8fb9\u8fc7\u7a0b\uff0c\u7136\u540e\u5728\u542f\u53d1\u5f0f\u5408\u5e76\u65f6\u8dd1\u4e2a `dfs` \u5373\u53ef\u3002\n\n\u56e0\u4e3a\u91c7\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u6211\u4eec\u904d\u5386\u7684\u8282\u70b9\u6700\u591a\u4e3a $\\frac{n}{2}\\log n$ \u4e2a\uff0c\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u590d\u6742\u5ea6\u5747\u4e3a $\\mathcal{O}(\\log n)$ \uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n \\log^2 n + q \\log n)$ \u3002\n\n---\n\n### Code\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring> \n#include <cstdio>\n#include <cmath>\n#include <set>\n#include <map>\nusing namespace std;\n#define int long long\n#define MAXN (int)(3e5+233)\n\nnamespace crq\n{\n\n\tinline long long read()\n\t{\n\t\tlong long x=0,f=1;char ch=getchar();\n\t\twhile (ch<'0'||ch>'9') {if (ch=='-') f=-1;ch=getchar();}\n\t\twhile (ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\t\treturn f*x;\n\t}\n\n\ttemplate <typename T> inline T max(T x,T y) { return x>y?x:y; }\n\t\n\tinline int zero() { return 0; }\n\n\ttemplate <typename A,typename... B>\n\tA max(A first,B... others)\n\t{ return max(first,max(others...)); }\n\t\n\ttemplate <typename crq,crq(*op)(crq,crq),crq e()>\n\tstruct Seg\n\t{\n\t\t\n\t\t//Tips: The id of this Segment Tree is begin at 1 but not 0.\n\t\t\n\t\tpublic:\n\t\t\n\t\t\tSeg(int n)\n\t\t\t{\n\t\t\t\tinit_pow2();\n\t\t\t\th=ceil_log2(n);\n\t\t\t\tSIZE=1<<h;\n\t\t\t\tval=std::vector<crq>(SIZE<<1,e());\n\t\t\t}\n\t\t\n\t\t\tSeg(int n,crq *poi)\n\t\t\t{\n\t\t\t\tinit_pow2();\n\t\t\t\th=ceil_log2(n);\n\t\t\t\tSIZE=1<<h;\n\t\t\t\tval=std::vector<crq>(SIZE<<1,e());\n\t\t\t\tfor (int i=0;i<n;i++) val[SIZE+i]=*(poi+i);\n\t\t\t\tfor (int i=SIZE-1;i>=1;i--) pushup(i);\n\t\t\t}//If you want to build the Segment Tree by a vector,\n\t\t\t //you can try to use \"Seg(vector.size(),vector.data())\".\n\t\t\t //However,you can't use \"Seg(vector.size(),vector.begin())\"\n\t\t\t //because a iterator isn't equal to a pointer.\n\t\t\t //plz pay attention to it.\n\t\t\t //\u2014\u2014crq 2022.7.22\n\t\t\t \n\t\t\tvoid init(int n)\n\t\t\t{\n\t\t\t\tinit_pow2();\n\t\t\t\th=ceil_log2(n);\n\t\t\t\tSIZE=1<<h;\n\t\t\t\tval=std::vector<crq>(SIZE<<1,e());\n\t\t\t}\n\t\t\t\n\t\t\tvoid modify(int k,crq x)\n\t\t\t{\n\t\t\t\tk+=SIZE-1;\n\t\t\t\tval[k]=x;\n\t\t\t\tfor (int i=1;i<=h;i++) pushup(k>>=1);\n\t\t\t}\n\t\t\t\n\t\t\tcrq get(int k) { return val[SIZE+k-1]; }\n\t\t\t\n\t\t\tcrq query(int l,int r)\n\t\t\t{\n\t\t\t\tl--;\n\t\t\t\tcrq sl=e(),sr=e();\n\t\t\t\tl+=SIZE,r+=SIZE;\n\t\t\t\twhile (l<r)\n\t\t\t\t{\n\t\t\t\t\tif (l&1) sl=op(sl,val[l++]);\n\t\t\t\t\tif (r&1) sr=op(sr,val[--r]);\n\t\t\t\t\tl>>=1,r>>=1;\n\t\t\t\t}\n\t\t\t\treturn op(sl,sr);\n\t\t\t}//query the answer of [l,r]\n\t\t\n\t\tprivate:\n\t\t\t\n\t\t\tint h=0,SIZE=0,pow2[27];\n\t\t\tstd::vector<crq> val;\n\t\t\t\n\t\t\tvoid init_pow2()\n\t\t\t{\n\t\t\t\tpow2[0]=1;\n\t\t\t\tfor (int i=1;i<=25;i++) pow2[i]=pow2[i-1]<<1;\n\t\t\t} \n\t\t\t\n\t\t\tint ceil_log2(int x)\n\t\t\t{\n\t\t\t\tfor (int i=25;i>=1;i--)\n\t\t\t\t\tif (pow2[i]>=x&&pow2[i-1]<x)\n\t\t\t\t\t\treturn i;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t\tinline void pushup(int now) { val[now]=op(val[now<<1],val[now<<1|1]); }\n\t\t\n\t};\n\t\n}\n\nusing crq::read;\nusing crq::Seg;\n\nstruct Edge\n{\n\tint to,nex;\n} E[MAXN<<1];\n \nint T,n,m,q,cnt,fa[MAXN],siz[MAXN],head[MAXN];\nSeg<int,crq::max,crq::zero> s(MAXN);\n\ninline void add(int u,int v)\n{\n\tE[++cnt].to=v;\n\tE[cnt].nex=head[u];\n\thead[u]=cnt;\n}\n\nvoid init()\n{\n\tcnt=0,s.init(n);\n\tfor (int i=1;i<=n;i++) fa[i]=i,head[i]=0,siz[i]=1;\n}\n\nint find(int x)\n{\n\tif (x==fa[x]) return x;\n\treturn fa[x]=find(fa[x]);\n}\n\nvoid dfs(int x,int f,int t)\n{\n\tif (!s.get(x)&&find(x)==find(x-1))\n\t\ts.modify(x,t);\n\tif (!s.get(x+1)&&find(x)==find(x+1))\n        s.modify(x+1,t);\n\tfor (int i=head[x];i;i=E[i].nex)\n\t\tif (E[i].to!=f)\n\t\t\tdfs(E[i].to,x,t);\n}\n\nvoid merge(int x,int y,int t)\n{\n\tx=find(x);\n\ty=find(y);\n\tif (x==y) return;\n\tif (siz[x]<siz[y]) swap(x,y);\n\tfa[y]=x;\n\tsiz[x]+=siz[y];\n\tdfs(y,0,t);\n\tadd(x,y),add(y,x);\n}\n\nsigned main()\n{\n\tcin>>T;\n\twhile (T--)\n\t{\n\t\tcin>>n>>m>>q;\n\t\tinit();\n\t\tfor (int i=1;i<=m;i++)\n\t\t{\n\t\t\tint a=read(),b=read();\n\t\t\tmerge(a,b,i);\n\t\t}\n\t\tfor (int i=1;i<=q;i++)\n\t\t{\n\t\t\tint a=read(),b=read();\n            if (a==b) printf(\"0 \");\n\t\t\telse printf(\"%lld \",s.query(a+1,b));\n\t\t}\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1658654024,
        "uid": 253712,
        "name": "jzcrq",
        "ccfLevel": 6,
        "title": "CF1706E Qpwoeirut and Vertices \u9898\u89e3"
    },
    {
        "content": "\u7ed3\u8bba\uff1a$n-1$ \u7ec4\u4e92\u4e0d\u76f8\u540c\u7684\u6761\u4ef6\uff0c\u6bcf\u7ec4\u6761\u4ef6\u5f62\u5982\u70b9\u96c6 $S$ \u4e2d\u4e24\u70b9\u8fde\u901a\uff0c\u53ef\u786e\u5b9a\u5927\u5c0f\u4e3a $n$ \u7684\u70b9\u96c6 $S$ \u4e2d\u7684\u4efb\u610f\u4e24\u70b9\u5747\u8fde\u901a\u3002\n\n\u8bc1\u660e\uff1a \u5c06\u5404\u7ec4\u6761\u4ef6\u4e24\u70b9\u8fde\u8fb9\uff0c\u5f62\u6210\u4e00\u68f5\u6811\uff0c\u663e\u7136\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u8fde\u901a\u3002\n\n\u63a8\u8bba $1$\uff1a\u82e5 $S_1$ \u4e2d\u4efb\u610f\u4e24\u70b9\u8fde\u901a\uff0c$S_2$ \u4e2d\u4efb\u610f\u4e24\u70b9\u8fde\u901a\uff0c$S_1 \\cap S_2 \\ne \\varnothing$\uff0c\u5219 $S_1\\cup S_2$ \u4e2d\u4efb\u610f\u4e24\u70b9\u8fde\u901a\u3002\u53cd\u4e4b\u4ecd\u7136\u6210\u7acb\u3002\n\n\u63a8\u8bba $2$\uff1a\u82e5 $S_1,S_2,\\cdots,S_n$ \u8fd9 $n$ \u4e2a\u70b9\u96c6\u4e2d\uff0c\u5728\u540c\u4e00\u4e2a\u70b9\u96c6\u4e2d\u7684\u4efb\u610f\u4e24\u70b9\u5747\u8fde\u901a\u3002\u4e14 $S_{i} \\cap S_{i+1} \\ne \\varnothing(1 \\le i<n)$\u3002\u8bbe $S_1 \\cup S_2\\cup \\cdots\\cup S_n=S$\uff0c\u5219 $S$ \u4e2d\u4efb\u610f\u4e24\u70b9\u8fde\u901a\u3002\u53cd\u4e4b\u4ecd\u7136\u6210\u7acb\u3002\n\n## \u505a\u6cd5 1\n\n\u8003\u8651\u5206\u5757\uff0c\u6839\u636e\u63a8\u8bba\uff0c\u533a\u95f4\u8fde\u901a\u76f8\u5f53\u4e8e\uff1a\u6bcf\u4e2a\u5757\u5185\u8fde\u901a\uff0c\u4e14\u76f8\u4e24\u4e2a\u5757\u8fde\u901a\u3002\n\n\u6bcf\u4e2a\u5757\u5185\u6700\u5148\u8fde\u901a\u7684\u65f6\u95f4\u53ef\u4ee5\u9884\u5904\u7406\u3002\n\n\u76f8\u90bb\u4fe9\u5757\u4e4b\u95f4\u8fde\u901a\u53ef\u4ee5\u8be2\u95ee\u79bb\u7ebf\uff0c\u6700\u540e\u4e00\u8d77\u7b97\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\sqrt n \\alpha(n))$\u3002\n\n## \u505a\u6cd5 2\n\n\u7531\u4e8e\u96c6\u5408\u5e76\u8fd0\u7b97\u6ee1\u8db3 $U \\cup U=U$\uff0c\u4e14\u6839\u636e\u63a8\u8bba\uff0c\u539f\u533a\u95f4\u8be2\u95ee\u662f\u4e00\u4e2a[**\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898**](https://oi-wiki.org/ds/sparse-table/#_1)\uff0c\u8003\u8651\u7528 ST \u8868\u7ef4\u62a4\u3002\n\nST \u8868\u5408\u5e76\u533a\u95f4\u65f6\uff0c\u989d\u5916\u4e0e\u4e24\u4e2a\u533a\u95f4\u4e2d\u7684\u5de6\u7aef\u70b9\u8fde\u901a\u7684\u65f6\u95f4\u53d6 $\\max$ \u5373\u53ef\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u9884\u5904\u7406\u65f6\u4f1a\u4ea7\u751f $O(n\\log n)$ \u6b21\u5bf9\u4e24\u70b9\u8fde\u901a\u65f6\u95f4\u7684\u67e5\u8be2\uff0c\u56de\u7b54\u8be2\u95ee\u65f6\u4f1a\u4ea7\u751f $O(q)$ \u6b21\u5bf9\u4e24\u70b9\u8fde\u901a\u65f6\u95f4\u7684\u67e5\u8be2\u3002\u53ef\u4ee5\u9884\u5148\u5c06\u8fd9\u4e0b\u67e5\u8be2\u79bb\u7ebf\uff0c\u7136\u540e\u6574\u4f53\u4e8c\u5206\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n \\alpha(n)+q\\log n \\alpha(n))$\u3002",
        "postTime": 1658163034,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "CF1706E \u9898\u89e3"
    },
    {
        "content": "\u6784\u5efa\u201c\u5e76\u67e5\u96c6\u751f\u6210\u6811\u201d\uff0c\u5373\u4f7f\u4e24\u4e2a\u8fde\u901a\u5757\u7b2c\u4e00\u6b21\u8fde\u901a\u7684\u8fb9\u7ec4\u6210\u7684\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u8fb9\u6743\u4e3a\u539f\u56fe\u8fb9\u7684\u7f16\u53f7\u3002\u663e\u7136\uff0c\u4f7f\u4efb\u610f\u4e24\u70b9\u8054\u901a\u7684\u7b54\u6848\u5c31\u662f\u6811\u4e0a\u4e24\u70b9\u95f4\u8def\u5f84\u7684\u8fb9\u6743\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u7528\u6811\u4e0a\u500d\u589e\u7ef4\u62a4\u4e24\u70b9\u95f4\u8fb9\u6743\u6700\u5927\u503c\u3002\n\n\u533a\u95f4 $[l,r]$ \u5728\u6811\u4e0a\u8fde\u901a\u5c31\u610f\u5473\u7740 $(l,l+1),(l+1,l+2),...,(r-1,r)$ \u8fde\u901a\uff0c\u8bc1\u660e\u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u82e5\u533a\u95f4 $[l,r]$ \u8fde\u901a\u7b54\u6848\u6bd4\u67d0\u4e24\u4e2a\u7f16\u53f7\u76f8\u90bb\u70b9\u4ee3\u4ef7\u5c0f\uff0c\u5219\u4e0d\u6ee1\u8db3\u533a\u95f4\u8fde\u901a\u7684\u6761\u4ef6\u3002\u53d6\u8fd9\u4e9b\u7b54\u6848\u7684\u6700\u5927\u503c\u5373\u53ef\uff0c\u53ef\u4ee5\u7528 ST \u8868\u7ef4\u62a4\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0'){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\n\nvoid print(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)print(x/10);\n\tputchar(x%10^48);\n}\n\nconst int N=1e5+5,M=2e5+5;\nint n,m,q,head[N],cnt,f[N],lg[N];\nstruct node{\n\tint next,to,w;\n}e[N<<1];\n\nvoid add(int from,int to,int w){\n\te[++cnt]=(node){head[from],to,w};\n\thead[from]=cnt;\n}\n\nint find(int x){\n\tif(x==f[x])return x;\n\treturn f[x]=find(f[x]);\n}\n\nint maxn[N][22],fa[N][22],dep[N];\n\nvoid dfs(int x,int fath,int w){\n\tfa[x][0]=fath;\n\tdep[x]=dep[fath]+1;\n\tmaxn[x][0]=w;\n\tfor(int i=1;i<=lg[dep[x]];++i)fa[x][i]=fa[fa[x][i-1]][i-1];\n\tfor(int i=1;i<=lg[dep[x]];++i)maxn[x][i]=max(maxn[x][i-1],maxn[fa[x][i-1]][i-1]);\n\tfor(int i=head[x];i;i=e[i].next){\n\t\tint y=e[i].to;\n\t\tif(y!=fath)dfs(y,x,e[i].w);\n\t}\n}\n\nint calc(int x,int y){\n\tint ans=0;\n\tif(dep[x]<dep[y])swap(x,y);\n\twhile(dep[x]>dep[y]){\n\t\tans=max(ans,maxn[x][lg[dep[x]-dep[y]]]);\n\t\tx=fa[x][lg[dep[x]-dep[y]]];\n\t}\n\tif(x==y)return ans;\n\tfor(int i=lg[dep[x]];i>=0;--i){\n\t\tif(fa[x][i]!=fa[y][i]){\n\t\t\tans=max(ans,max(maxn[x][i],maxn[y][i]));\n\t\t\tx=fa[x][i],y=fa[y][i];\n\t\t}\n\t}\n\tans=max(ans,max(maxn[x][0],maxn[y][0]));\n\treturn ans;\n}\n\nint Max[N][22];\n\nvoid init(){\n\tfor(int i=1;i<=n-1;++i)Max[i][0]=calc(i,i+1);\n\tfor(int j=1;j<=lg[n-1];++j){\n\t\tfor(int i=1;i+(1<<j)-1<=n-1;++i){\n\t\t\tMax[i][j]=max(Max[i][j-1],Max[i+(1<<(j-1))][j-1]);\n\t\t}\n\t}\n}\n\nint qry(int l,int r){\n\tif(l>r)return 0;\n\tint tmp=lg[r-l+1];\n\treturn max(Max[l][tmp],Max[r-(1<<tmp)+1][tmp]);\n}\n\nvoid solve(){\n\tn=read(),m=read(),q=read();\n\tfor(int i=1;i<=n;++i)f[i]=i;\n\tfor(int i=1;i<=m;++i){\n\t\tint u=read(),v=read();\n\t\tint fu=find(u),fv=find(v);\n\t\tif(fu!=fv)add(u,v,i),add(v,u,i),f[fu]=fv;\t\n\t}\n\tdfs(1,0,0);\n\tinit();\n\twhile(q--){\n\t\tint u=read(),v=read();\n\t\tprint(qry(u,v-1)),putchar(' ');\n\t}puts(\"\");\n}\n\nvoid clear(){\n\tcnt=0;\n\tmemset(head,0,sizeof(head));\n\tfor(int i=1;i<=n;++i)for(int j=0;j<=lg[n];++j)fa[i][j]=0;\n}\n\nint main(){\n\tlg[0]=-1;\n\tfor(int i=1;i<=1e5;++i)lg[i]=lg[i>>1]+1;\n\tint tt=read();\n\twhile(tt--)solve(),clear();\n\treturn 0;\n}\n```\n\uff08\u6ce8\u610f\u4f4e\u7ea7\u9519\u8bef\uff0c\u5982 $x,y$ \u5199\u53cd\uff0cST \u8868\u5f00\u5230 $n-1$ \u800c\u4e0d\u662f $n$\uff0c\u6bcf\u6b21\u7684 $2^j$ \u7ea7\u7956\u5148\u6570\u7ec4\u672a\u6e05\u7a7a\u7b49\uff09",
        "postTime": 1671025919,
        "uid": 271736,
        "name": "Daidly",
        "ccfLevel": 6,
        "title": "CF1706E Qpwoeirut and Vertices \u9898\u89e3"
    },
    {
        "content": "# Qpwoeirut and Vertices-\u9898\u89e3\n\n### \u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u6784\u6210\u7684\u65e0\u5411\u56fe\uff0c\u70b9\u4ece $1$ \u5230 $n$ \u7f16\u53f7\uff0c\u8fb9\u4ece $1$ \u5230 $m$ \u7f16\u53f7\u3002\n\n\u4f60\u7684\u4efb\u52a1\u662f\u56de\u7b54 $q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u5305\u542b $2$ \u4e2a\u6574\u6570 $l$ \u548c $r$\uff0c\u8be2\u95ee\u7684\u7b54\u6848\u662f\u4e3a\u4e86\u627e\u5230\u6ee1\u8db3\u4e0b\u5217\u8981\u6c42\u7684\u6700\u5c0f\u975e\u8d1f\u6574\u6570 $k$\uff1a\n- \u5bf9\u4e8e\u6bcf\u4e00\u5bf9 $l\u2264a\u2264b\u2264r$ \u7684\u6574\u6570 $(a,b)$\uff0c\u70b9 $a$ \u548c\u70b9 $b$ \u53ef\u4ee5\u53ea\u901a\u8fc7\u524d $k$ \u6761\u8fb9\u76f8\u4e92\u8bbf\u95ee\u3002\n\n### \u5b9e\u73b0\n\n\u5982\u679c\u628a\u8fb9\u7684\u7f16\u53f7\u770b\u4f5c\u8fb9\u6743\uff0c\u90a3\u4e48\u9898\u76ee\u5c31\u8f6c\u5316\u4e3a\u4e86\u51e0\u4e2a\u70b9\u8981\u4e92\u76f8\u5230\u8fbe\uff0c\u6700\u5c0f\u5316\u7ecf\u8fc7\u7684\u6240\u6709\u8fb9\u6743\u503c\u6700\u5927\u503c\u3002\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684 Kruskal \u91cd\u6784\u6811\u7684\u9898\u76ee\u3002\n\n\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\u7684\u662f\u9898\u76ee\u9700\u8981\u6211\u4eec\u6c42\u51fa $l\\sim r$ \u4e4b\u95f4\u6240\u6709\u70b9\u5728\u91cd\u6784\u6811\u4e0a\u7684 $\\mathrm{LCA}$\uff0c\u7531\u4e8e $\\mathrm{LCA}$ \u662f\u53ef\u4ee5\u7ed3\u5408\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528 ST \u8868\u6216\u8005\u7ebf\u6bb5\u6811\u9884\u5904\u7406\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n\n#define  Int  long long int\n#define  Tem  template\n#define  Pub  public\n\nusing std::min;using std::max;\n\nint T;\nint n,m,q;\nint l,r;\n\nclass Edge{\nPub:int x,y;\n}e[200005];\nclass Node{\nPub:int fa[20],ls,rs;\n    int c;\n    int dp;\n    int boss;\n}d[200005];\n\nint Boss(int x){\n    if(d[x].boss!=x)d[x].boss=Boss(d[x].boss);\n    return d[x].boss;\n}\nvoid Merge(int x,int y,int c){\n    x=Boss(x),y=Boss(y);\n    if(x==y)return;\n    else ++n;\n    d[x].boss=d[y].boss=d[n].boss=n;\n    d[x].fa[0]=d[y].fa[0]=n;\n    d[n].ls=x,d[n].rs=y;\n    d[n].c=c;\n}\nvoid Kruskal(){\n    for(int i=1;i<=n;++i)\n        d[i].boss=i;\n    for(int i=1;i<=m;++i)\n        Merge(e[i].x,e[i].y,i);\n}\n\nvoid dfs(int x){\n    if(x==0)return;\n    d[x].dp=d[d[x].fa[0]].dp+1;\n    for(int i=1;i<=18;++i)\n        d[x].fa[i]=d[d[x].fa[i-1]].fa[i-1];\n    dfs(d[x].ls);dfs(d[x].rs);\n}\nint solve(int x,int y){\n    if(d[x].dp<d[y].dp)std::swap(x,y);\n    for(int i=18;i>=0;--i)\n        if(d[d[x].fa[i]].dp>=d[y].dp)\n            x=d[x].fa[i];\n    if(x==y)return y;\n    for(int i=18;i>=0;--i)\n        if(d[x].fa[i]!=d[y].fa[i])\n            x=d[x].fa[i],y=d[y].fa[i];\n    return d[y].fa[0];\n}\n\nint t[400005];\nint build(int x,int l,int r){\n    int m=l+r>>1;\n    if(l==r)t[x]=m;\n    else t[x]=solve(build(x<<1,l,m),build(x<<1|1,m+1,r));\n    return t[x];\n}\nint query(int x,int l,int r,int a,int b){\n    int m=l+r>>1;\n    if(a==l&&b==r)return t[x];\n    else{\n        if(b<=m)return query(x<<1,l,m,a,b);\n        if(a>m)return query(x<<1|1,m+1,r,a,b);\n        return solve(query(x<<1,l,m,a,m),query(x<<1|1,m+1,r,m+1,b));\n    }\n}\n\nint main(){\n    scanf(\"%d\",&T);\n    while(~--T){\n        scanf(\"%d%d%d\",&n,&m,&q);\n        int N=n;\n        for(int i=1;i<=m;++i)\n            scanf(\"%d%d\",&e[i].x,&e[i].y);\n        Kruskal();\n        dfs(n);\n        build(1,1,N);\n        for(int i=1;i<=q;++i){\n            scanf(\"%d%d\",&l,&r);\n            printf(\"%d \",d[query(1,1,N,l,r)].c);\n        }\n        printf(\"\\n\");\n        for(int i=1;i<=n;++i){\n            memset(d[i].fa,0,sizeof(d[i].fa));\n            d[i].boss=d[i].ls=d[i].rs=d[i].c=0;\n        }\n    }\n    \n    return 0;\n}\n```",
        "postTime": 1659432436,
        "uid": 492662,
        "name": "Endt_or_endt",
        "ccfLevel": 5,
        "title": "Qpwoeirut and Vertices-\u9898\u89e3"
    },
    {
        "content": "\u8822\u8822\u7684 $O((n+q)\\log^2n)$ \u505a\u6cd5~~\u592a\u7b80\u5355\u4e86~~\u3002\n\n\u5148\u5efa\u51fa Kruskal \u91cd\u6784\u6811\uff0c\u5e76\u500d\u589e\u9884\u5904\u7406\uff0c\u63a5\u4e0b\u6765\u95ee\u9898\u8f6c\u5316\u4e3a\u6811\u4e0a\u591a\u70b9 $\\text{lca}$\u3002\n\n\u5bf9\u4e8e $\\text{lca}$\uff0c\u6211\u4eec\u6709\u7ed3\u5408\u5f8b $\\text{lca}(\\text{lca}(a,b),c)=\\text{lca}(a,\\text{lca}(b,c))$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u70b9\uff08\u6309\u6807\u53f7\u6392\uff09\u5efa\u7ebf\u6bb5\u6811\uff0c\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u5b58\u8fd9\u6bb5\u533a\u95f4\u6240\u6709\u70b9\u7684 $\\text{lca}$\u3002\n\n\u7136\u540e\u5c31\u662f\u7ebf\u6bb5\u6811\u6700\u6700\u6700\u666e\u901a\u7684\u533a\u95f4\u67e5\u8be2\u4e86\u3002\n\n\u5408\u5e76\u65f6 $t_{rt}=\\text{lca}(t_{lson},t_{rson})$ \u5e26 $\\log$\uff0c\u6240\u4ee5\u603b\u4f53\u662f\u53cc $\\log$\u3002\n\n```cpp\n//We'll be counting stars.\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,j,k) for(int i=(j),i##_=(k);i<=i##_;i++)\n#define Rof(i,j,k) for(int i=(j),i##_=(k);i>=i##_;i--)\n#define N 200010\n#define C 20\nint n,m,q,f[N],tot,g[N][C+1],son[N][C+1],a[N],dep[N],t[N<<2];\ninline int gf(int x){ return x==f[x]?x:f[x]=gf(f[x]); }\ninline int lca(int x,int y){\n\tint xx,yy;\n\tif(dep[x]<dep[y]) swap(x,y);\n\tRof(i,C,0){\n\t\txx=g[x][i];\n\t\tif(dep[xx]>=dep[y]) x=xx;\n\t}\n\tif(x==y) return x;\n\tRof(i,C,0){\n\t\txx=g[x][i];\n\t\tyy=g[y][i];\n\t\tif(xx!=yy) x=xx,y=yy;\n\t}\n\treturn g[x][0];\n}\ninline void dfs(int x){\n\tFor(i,1,C) g[x][i]=g[g[x][i-1]][i-1];\n\tdep[x]=dep[g[x][0]]+1;\n\tif(x>n) dfs(son[x][0]),dfs(son[x][1]);\n}\n#define ls (rt<<1)\n#define rs (rt<<1|1)\n#define mid ((l+r)>>1)\nvoid build(int rt,int l,int r){\n\tif(l==r){\n\t\tt[rt]=l;\n\t\treturn ;\n\t}\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tt[rt]=lca(t[ls],t[rs]);\n}\nint que(int rt,int l,int r,int x,int y){\n\tif(x<=l && r<=y) return t[rt];\n\tif(y<=mid) return que(ls,l,mid,x,y);\n\telse if(x>mid) return que(rs,mid+1,r,x,y);\n\telse return lca(que(ls,l,mid,x,y),que(rs,mid+1,r,x,y));\n}\nvoid work(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tiota(f+1,f+1+2*n,1);\n\tfill(a+1,a+1+n,0);\n\ttot=n;\n\tint x,y;\n\tFor(i,1,m){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx=gf(x),y=gf(y);\n\t\tif(x!=y){\n\t\t\tg[x][0]=g[y][0]=f[x]=f[y]=++tot;\n\t\t\tson[tot][0]=x;\n\t\t\tson[tot][1]=y;\n\t\t\ta[tot]=i;\n\t\t}\n\t}\n\tg[tot][0]=0;\n\tdfs(tot);\n\tbuild(1,1,n);\n\twhile(q--) scanf(\"%d%d\",&x,&y),printf(\"%d \",a[que(1,1,n,x,y)]); puts(\"\");\n}\nint main(){\n\tint T;scanf(\"%d\",&T);\n\twhile(T--)work();\nreturn 0;}\n```",
        "postTime": 1658297228,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "CF1706E Qpwoeirut and Vertices\uff08Kruskal \u91cd\u6784\u6811 + \u7ebf\u6bb5\u6811\uff09"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a $n$ \u70b9 $m$ \u8fb9\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u6c42\u533a\u95f4\u5185\u6240\u6709\u70b9\u4e4b\u95f4\u7b80\u5355\u8def\u5f84\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u3002\n\n\u5206\u6790\uff1a\u8f6c\u5316\u4e3a Kruskal \u91cd\u6784\u6811\uff0c\u90a3\u4e48\u6bcf\u6b21\u5c31\u662f\u6c42\u533a\u95f4\u91cc\u6bcf\u4e2a\u70b9\u7684 LCA\u3002\n\u4f46\u662f\u533a\u95f4 LCA \u66b4\u529b\u505a\u8fd8\u662f\u590d\u6742\u5ea6\u4e0d\u591f\u3002\u6211\u4eec\u8003\u8651\u533a\u95f4 LCA \u5c31\u662f\u533a\u95f4\u4e0a $dfn$ \u6700\u5927\u548c\u6700\u5c0f\u7684\u4e24\u4e2a\u70b9\u7684 LCA\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u7528\u4fe9 ST \u8868\u6216\u8005\u4e00\u68f5\u7ebf\u6bb5\u6811\u8bb0\u5f55\u533a\u95f4 $dfn$ \u7684\u6700\u5927\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define f(i, a, b) for(int i = (a); i <= (b); i++)\n#define cl(i, n) i.clear(),i.resize(n);\n#define endl '\\n'\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\nconst int inf = 1e9;\nint N = 200000;\nint n,m,q;\nvector<int> g[200010];\nint lg2[200010];\nvector<int> dep, dfn;\nvector<int> stmx[200010], stmn[200010], anc[200010];\nint cha[200010];\nstruct rec{\n\tint x,y,z;\n}edge[500010];\nbool operator<(rec a,rec b){\n\treturn a.z<b.z;\n}\nint qz[200010];\nint fa[200010]; \nint get(int x){\n\tif(fa[x]==x)return x;\n\telse return fa[x] = get(fa[x]);\n}\nint kruskal() {\n    int cnt = n;\n    f(i,1,2*n)fa[i]=i;\n    f(i, 1, m) {\n        int x = get(edge[i].x);\n\t\tint y = get(edge[i].y);\n\t\tif(x == y)continue;\n        else {\n            int z = ++cnt;\n            g[x].push_back(z); g[y].push_back(z);\n            g[z].push_back(x); g[z].push_back(y);\n            fa[x]=z;fa[y]=z;\n            qz[z] = edge[i].z;\n        }\n    }\n    return cnt;\n}\nint ccnt;\nvoid dfs(int now, int fa) {\n    dfn[now] = ++ccnt;\n    dep[now] = dep[fa] + 1; anc[now][0] = fa;\n    f(i, 1, lg2[dep[now]] - 1) {\n        anc[now][i] = anc[anc[now][i - 1]][i - 1];\n    }\n    f(i, 0, (int)g[now].size() -1 ) {\n        if(g[now][i] != fa) dfs(g[now][i], now);\n    }\n}\nint lca(int qx, int qy) {\n    if(dep[qx] < dep[qy]) swap(qx, qy);\n    while(dep[qx] > dep[qy]) {\n        qx = anc[qx][lg2[dep[qx]-dep[qy]] - 1];\n    }\n    if(qx == qy) return qx;\n    for(int k = lg2[dep[qx]] - 1; k >= 0; k--) {\n        if(anc[qx][k] != anc[qy][k]) {\n            qx = anc[qx][k]; qy = anc[qy][k];\n        }\n    }\n    return anc[qx][0];\n}\n \nvoid STmx_prework() {\n    f(i, 1, n) stmx[i][0] = dfn[i];\n    int mx = log(n) / log(2);\n    f(j, 1, mx) {\n    \tint mxi = n - (1 << j) + 1;\n    \tf(i, 1, mxi) {\n    \t\tstmx[i][j] = max(stmx[i][j - 1], stmx[i + (1 << (j - 1))][j - 1]);\n\t\t}\n\t}\n}\nvoid STmn_prework() {\n    f(i, 1, n) stmn[i][0] = dfn[i];\n    int mx = log(n) / log(2);\n    f(j, 1, mx) {\n    \tint mxi = n - (1 << j) + 1;\n    \tf(i, 1, mxi) {\n    \t\tstmn[i][j] = min(stmn[i][j - 1], stmn[i + (1 << (j - 1))][j - 1]);\n\t\t}\n\t}\n}\nint querymx(int l, int r) {\n    int mx = log(r - l + 1) / log(2);\n    int ans;\n    ans = max(stmx[l][mx], stmx[r - (1 << mx) + 1][mx]);\n    return ans;  \n}\nint querymn(int l, int r) {\n    int mx = log(r - l + 1) / log(2);\n    int ans;\n    ans = min(stmn[l][mx], stmn[r - (1 << mx) + 1][mx]);\n    return ans;  \n}\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    f(i, 1, N) lg2[i] = lg2[i - 1] + (1 << lg2[i - 1] == i);\n    int t; cin >> t;\n    while(t--) {\n        \n        cin>>n>>m>>q;\n        f(i, 1, m) {\n            int u, v; cin >> u >> v; \n            edge[i].x = u, edge[i].y = v, edge[i].z = i;\n        }\n        sort(edge+1,edge+m+1);\n        f(i,1,2*n)g[i].clear();\n        int root = kruskal();\n        n=2*n;\n        cl(dep, n+10);cl(dfn,n+10);\n        f(i,0,n+9){\n            cl(anc[i],30);cl(stmx[i],30);cl(stmn[i],30);\n        }\n        \n        dfs(root, 0);\n        STmx_prework(); STmn_prework();\n        f(i,1,n) cha[dfn[i]] = i;\n        f(i, 1, q) {\n            int l, r; cin >> l >> r; if(l == r) {cout << 0 << \" \"; continue;}\n            int mx = querymx(l, r), mn = querymn(l, r); \n            int lcaa = lca(cha[mx], cha[mn]);\n            cout << qz[lcaa] <<\" \";\n        }\n        cout << endl;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1658219847,
        "uid": 657765,
        "name": "Zeardoe",
        "ccfLevel": 0,
        "title": "CF1706\u9898\u89e3"
    },
    {
        "content": "**[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1706E)**\n\n## \u9898\u76ee\u5206\u6790\n\n\u95f2\u8bdd\uff1a\u8fd9\u573a\u6bd4\u8d5b D2 \u901a\u8fc7\u4eba\u6570\u663e\u8457\u4f4e\u4e8e E\uff0c\u5927\u6982\u56e0\u4e3a\u8fd9\u9898\u786e\u5b9e\u5f88\u5957\u8def\u3002\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u8fb9\u6743\u4e3a\u8fb9\u7684\u6807\u53f7\uff0c\u591a\u6b21\u8be2\u95ee $l,r$\uff0c\u6c42\u6700\u5c0f\u7684 $k$ \u4f7f\u5f97 $[l,r]$ \u4e2d\u4efb\u610f\u4e00\u5bf9\u70b9\u80fd\u591f\u901a\u8fc7\u8fb9\u6743\u5c0f\u4e8e\u7b49\u4e8e $k$ \u7684\u8fb9\u5230\u8fbe\u3002\n\n\u770b\u5230\u8fb9\u6743\u9650\u5236\uff0c\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f Kruskal \u91cd\u6784\u6811\u3002\u5efa\u51fa Kruskal \u91cd\u6784\u6811\u540e\uff0c\u4e00\u4e2a\u70b9 $u$ \u5b50\u6811\u5185\u6240\u6709\u70b9\u53ef\u4ee5\u901a\u8fc7\u5c0f\u4e8e\u7b49\u4e8e $val_u$ \u7684\u8fb9\u5230\u8fbe\u3002\n\n\u7531\u6b64\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff1a\u4f7f\u5f97 $u,v$ \u8054\u901a\u7684\u6700\u5c0f\u7684\u8fb9\u6743\u4e3a\u91cd\u6784\u6811\u4e0a $val_{\\operatorname{lca}(u,v)}$\u3002\n\n\u6240\u4ee5\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u591a\u6b21\u8be2\u95ee\u6c42 $[l,r]$ \u7684 LCA\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u5904\u7406\u65b9\u5f0f\u5c31\u662f\uff0c\u53d6\u51fa\u5176\u4e2d dfs \u5e8f\u6700\u5c0f\u548c\u6700\u5927\u7684\u70b9\u6c42 LCA \u5373\u53ef\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n/* \u7701\u7565\u5feb\u8bfb\u5feb\u5199\uff0c\u5373\u4e0b\u9762\u7684 qin\u3001qout */\n\nint T,n,m,q,nn,lc[200005],rc[200005],val[200005];\nint fa[200005];\ninline int findFa(int x)\n\t{ return x==fa[x]?x:fa[x]=findFa(fa[x]); }\ninline void merge(int x,int y)\n\t{ fa[findFa(y)]=findFa(x); }\nint tot,dep[200005],dfn[200005],rev[200005],f[200005][20];\nvoid dfs(int u,int ffa=0)\n{\n\tdfn[u]=++tot,rev[tot]=u;\n\tf[u][0]=ffa,dep[u]=dep[ffa]+1;\n\tfor(int i=1;(1<<i)<=dep[u];i++)\n\t\tf[u][i]=f[f[u][i-1]][i-1];\n\tif(lc[u]) dfs(lc[u],u),dfs(rc[u],u);\n}\nint lca(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=18;i>=0;i--)\n\t\tif(dep[f[x][i]]>=dep[y])\n\t\t\tx=f[x][i];\n\tif(x==y) return x;\n\tfor(int i=18;i>=0;i--)\n\t\tif(f[x][i]!=f[y][i])\n\t\t\tx=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nint lg2[200005],mn[200005][20],mx[200005][20];\nvoid ST()\n{\n\tlg2[0]=-1;\n\tfor(int i=1;i<=n;i++)\n\t\tmn[i][0]=mx[i][0]=dfn[i],lg2[i]=lg2[i>>1]+1;\n\tfor(int i=1;(1<<i)<=n;i++)\n\t\tfor(int j=1;j+(1<<i)-1<=n;j++)\n\t\t{\n\t\t\tmn[j][i]=min(mn[j][i-1],mn[j+(1<<i-1)][i-1]);\n\t\t\tmx[j][i]=max(mx[j][i-1],mx[j+(1<<i-1)][i-1]);\n\t\t}\n}\ninline int query(int l,int r,bool opt)\n{\n\tint s=lg2[r-l+1];\n\tif(opt) return min(mn[l][s],mn[r-(1<<s)+1][s]);\n\telse return max(mx[l][s],mx[r-(1<<s)+1][s]);\n}\nint main()\n{\n\tqin>>T;\n\twhile(T--)\n\t{\n\t\tint u,v,x,y;\n\t\tqin>>n>>m>>q,nn=n;\n\t\tvector<pair<int,int>> vec;\n\t\tfor(int i=1;i<=m;i++) qin>>u>>v,vec.emplace_back(u,v);\n\t\tiota(fa+1,fa+2*n,1);\n\t\tfor(int i=0;i<vec.size();i++)\n\t\t{\n\t\t\tint u=findFa(vec[i].first),v=findFa(vec[i].second);\n\t\t\tif(u==v) continue;\n\t\t\tval[++nn]=i+1,lc[nn]=u,rc[nn]=v,merge(nn,u),merge(nn,v);\n\t\t}\n\t\tdfs(nn),ST();\n\t\twhile(q--)\n\t\t{\n\t\t\tqin>>x>>y;\n\t\t\tu=rev[query(x,y,0)];\n\t\t\tv=rev[query(x,y,1)];\n\t\t\tqout.writesp(val[lca(u,v)]);\n\t\t}\n\t\tqout<<'\\n';\n\t\tfor(int i=1;i<=nn;i++)\n\t\t{\n\t\t\tlc[i]=rc[i]=val[i]=0;\n\t\t\tfor(int j=0;j<=18;j++) f[i][j]=0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1658219552,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011CF1706E Qpwoeirut and Vertices"
    },
    {
        "content": "[\u4f60\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1706E)\n\n[CF \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/1706/problem/E)\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8be2\u95ee $q$ \u6b21\uff0c\u6bcf\u6b21\u8be2\u95ee\u4f1a\u6307\u5b9a\u4e24\u4e2a\u6b63\u6574\u6570 $l,r$\uff0c\u95ee\u8981\u4f7f\u5bf9\u4e8e $l \\leq a \\leq b \\leq r$ \u7684\u6240\u6709 $a,b$ \u5747\u6709\u8def\u5f84\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u6700\u5c11\u9700\u8981\u52a0\u5165\u524d\u591a\u5c11\u6761\u8fb9\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u5230\u6bcf\u4e00\u6b21\u8be2\u95ee\u5b9e\u8d28\u4e0a\u5c31\u662f\u95ee\u4f60\u5728\u6309\u987a\u5e8f\u52a0\u4e86\u591a\u5c11\u6761\u8fb9\u4e4b\u540e\uff0c\u7f16\u53f7 $[l,r]$ \u4e4b\u95f4\u7684\u70b9\u90fd\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\u3002\n\n\u8bb0 $mintim(i)$ \u8868\u793a $i$ \u548c $i+1$ \u5728\u52a0\u4e86 $mintim(i)$ \u6761\u8fb9\u4e4b\u540e\u5904\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f $\\max_{i=l}^{r-1} mintim(i)$\u3002\n\n\u5728\u6c42\u89e3\u51fa\u6240\u6709\u7684 $mintim(i)$ \u4e4b\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528 ST \u8868\u6216\u8005\u7ebf\u6bb5\u6811\u89e3\u51b3\u533a\u95f4\u67e5\u8be2\u3002\n\n\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5728\u4e8e\u600e\u4e48\u6c42\u89e3 $mintim(i)$\u3002\n\n\u8003\u8651\u987a\u5e8f\u52a0\u8fb9\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u601d\u60f3\u5904\u7406 $mintim(i)$\uff0c\u5177\u4f53\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n- \u5f53\u524d\u8981\u5408\u5e76 $x,y$ \u6240\u5728\u7684\u96c6\u5408 $S(x),S(y)$\u3002\n- \u5982\u679c $|S(x)|<|S(y)|$\uff0c\u90a3\u4e48\u904d\u5386 $S(x)$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20 $p \\in S(x)$\uff0c\u5904\u7406 $mintim(p-1)$ \u548c $mintim(p)$\u3002\n- \u5426\u5219\u4ea4\u6362 $x,y$ \u518d\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u4e0d\u96be\u770b\u51fa\u6bcf\u4e00\u4e2a\u70b9\u5728\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\u6700\u591a\u88ab\u5408\u5e76 $\\log_2 n$ \u6b21\uff0c\u800c\u5e76\u67e5\u96c6\u590d\u6742\u5ea6\u4e3a $O(\u03b1(n))$\uff0c\u6240\u4ee5\u5904\u7406 $mintim$ \u7684\u8fd9\u4e00\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(n \\log_2 n \u03b1(n))$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log_2 n \u03b1(n)+q \\log_2 n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define RI register int\n#define ll long long\n#define ull unsigned long long\n#define YES puts(\"YES\")\n#define NO puts(\"NO\")\n\nusing namespace std;\n\nnamespace IO{\n\tinline int read(){\n\t\tRI X=0, W=0;register char ch=getchar();\n\t\twhile(!isdigit(ch)) W|=ch=='-', ch=getchar();\n\t\twhile(isdigit(ch)) X=(X<<1)+(X<<3)+(ch^48), ch=getchar();\n\t\treturn W?-X:X;\n\t}\n\tinline void write(int x){\n\t\tif(x<0) x=-x, putchar('-');\n\t\tif(x>9) write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}using namespace IO;\n\nconst int MAXN = 2e5+5;\n\nint n, m, q;\nint fa[MAXN];\nint tree[MAXN << 2], minn[MAXN];\nint siz[MAXN];\n\nvector<int> G[MAXN];\n\ninline int find(int x){\n\tif(fa[x]==x) return x;\n\treturn fa[x]=find(fa[x]);\n}\n\ninline void build(int p, int l, int r){\n\tif(l==r){\n\t\ttree[p]=minn[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(p<<1,l,mid), build(p<<1|1,mid+1,r);\n\ttree[p]=max(tree[p<<1],tree[p<<1|1]);\n}\n\ninline int ask(int p, int l, int r, int L, int R){\n\tif(L>R) return 0;\n\tif(L<=l && r<=R) return tree[p];\n\tint mid=(l+r)>>1, res=0;\n\tif(L<=mid) res=ask(p<<1,l,mid,L,R);\n\tif(R>mid) res=max(res,ask(p<<1|1,mid+1,r,L,R));\n\treturn res;\n}\n\ninline void solve(){\n\t//4 [space]\n\tn=read(),m=read(),q=read();int p;fa[n+1]=n+1;\n\tfor(int i=1;i<=n;++i) G[i].clear(), G[i].push_back(i), fa[i]=i, siz[i]=1, minn[i]=1e9;\n\tfor(int i=1;i<=m;++i) {\n\t\tint x, y;\n\t\tx=read(), y=read();\n\t\tx=find(x), y=find(y);\n\t\tif(x==y) continue;\n\t\tif(siz[x]>siz[y]) swap(x,y);\n\t\tsiz[y]+=siz[x];fa[x]=y;\n\t\tfor(int A=0;A<G[x].size();++A){\n\t\t\tp=G[x][A];\n\t\t\tif(find(p)==find(p+1)) minn[p]=min(i,minn[p]);\n\t\t\tif(find(p)==find(p-1)) minn[p-1]=min(minn[p-1],i);\n\t\t\tG[y].push_back(p);\n\t\t}\n\t\tG[x].clear();siz[x]=0;\n\t}\n\tbuild(1,1,n-1);\n\twhile(q--){\n\t\tint l, r;\n\t\tl=read(), r=read();\n\t\twrite(ask(1,1,n-1,l,r-1)), putchar(32);\n\t}\n\tputchar(10);\n}\n\nint main(){\n\tint t=read();\n\twhile(t--) solve();\n\treturn 0;\n}\n```\n\n\u6700\u540e\u9644\u4e0a [\u8bc4\u6d4b\u8bb0\u5f55](https://codeforces.com/contest/1706/submission/164778835)\u3002",
        "postTime": 1658213621,
        "uid": 753090,
        "name": "OccDreamer",
        "ccfLevel": 8,
        "title": "CF1706E \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053 Kruskal \u91cd\u6784\u6811\u7684\u677f\u5b50\u9898\uff0c\u53ef\u60dc\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u6211\u8fd8\u6ca1\u5b66\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u8981\u4e0d\u7136\u80fd\u4e0a\u5927\u5206 /ll\n\n\u6309\u7167\u8fb9\u8f93\u5165\u7684\u987a\u5e8f\u5efa\u51fa\u4e00\u9897 Kruskal \u91cd\u6784\u6811\uff0c\u65b0\u5efa\u7684\u8282\u70b9\u90fd\u4fdd\u5b58\u5b83\u4eec\u65b0\u5efa\u7684\u65f6\u95f4 $tme_i$\u3002\n\n\u5177\u4f53\u7684\uff0c\u6309\u7167\u8fb9\u8f93\u5165\u7684\u987a\u5e8f\u4e0d\u65ad\u5408\u5e76\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u7528\u5e76\u67e5\u96c6\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u6839\u8282\u70b9\uff0c\u521d\u59cb\u6839\u8282\u70b9\u5c31\u662f\u672c\u8eab\u3002\u7b2c $i$ \u6b21\u5408\u5e76\u65f6\uff0c\u8bbe\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u6839\u8282\u70b9\u5206\u522b\u662f $rx$ \u548c $ry$\uff0c\u90a3\u4e48\u5c31\u65b0\u5efa\u4e00\u4e2a\u8fde\u5411\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u65b0\u70b9 $r'$\uff0c\u8fde\u63a5 $r'\\to rx$ \u548c $r'\\to ry$\uff0c\u5e76\u4ee4 $tme_{r'}=i$\uff0c\u5408\u5e76\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u8ba9\u65b0\u8fde\u901a\u5757\u7684\u6839\u8282\u70b9\u53d8\u4e3a $r'$\u3002\n\n\u5408\u5e76\u8fc7\u7a0b\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ktqodndq.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u4f1a\u65b0\u5efa $n-1$ \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u4ee3\u8868\u4e00\u6761\u8fb9\u3002\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u4ee3\u8868\u539f\u56fe\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u4e00\u4e9b\u53f6\u5b50\u8282\u70b9\u7684 $\\operatorname{lca}$ \u5c31\u662f\u539f\u56fe\u4e2d\u8fd9\u4e9b\u70b9\u8054\u901a\u6240\u9700\u8981\u6309\u65f6\u95f4\u6dfb\u52a0\u7684\u6700\u540e\u4e00\u6761\u8fb9\u3002\n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u6c42 $tme_{\\operatorname{lca}(l,l+1,l+2,\\dots, r)}$\uff0c\u90a3\u4e48\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+q\\log n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nconst int S=200005;\n\nint n,m,q;\nint fa[S];\nint ls[S],rs[S],tme[S]; // kruskal \u91cd\u6784\u6811\nint dep[S],up[S][25]; // \u91cd\u6784\u6811\u4e0a\u6c42 lca\nint dlca[S<<2]; // \u7ebf\u6bb5\u6811\u7ef4\u62a4 lca\n\ninline int fnd(int x)\n{\n\treturn fa[x]==x?x:fa[x]=fnd(fa[x]);\n}\n\nvoid dfs(int u,int fa)\n{\n\tdep[u]=dep[fa]+1;\n\tup[u][0]=fa;\n\tfor(int i=1;i<=20;i++) up[u][i]=up[up[u][i-1]][i-1];\n\tif(ls[u]!=0) dfs(ls[u],u);\n\tif(rs[u]!=0) dfs(rs[u],u);\n}\n\ninline int getlca(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=20;i>=0;i--) if(dep[up[x][i]]>=dep[y]) x=up[x][i];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--) if(up[x][i]!=up[y][i]) x=up[x][i],y=up[y][i];\n\treturn up[x][0];\n}\n\nvoid built(int u,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tdlca[u]=l;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuilt(u<<1,l,mid),built(u<<1|1,mid+1,r);\n\tdlca[u]=getlca(dlca[u<<1],dlca[u<<1|1]);\n}\n\nint que(int u,int l,int r,int L,int R)\n{\n\tif(l>R||r<L) return 0;\n\tif(l>=L&&r<=R) return dlca[u];\n\tint mid=l+r>>1;\n\tint res=0;\n\tif(L<=mid) res=que(u<<1,l,mid,L,R);\n\tif(R>=mid+1) res=res==0?que(u<<1|1,mid+1,r,L,R):getlca(res,que(u<<1|1,mid+1,r,L,R));\n\treturn res; \n}\n\ninline void slove()\n{\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=n*2-1;i++) fa[i]=i;\n\tfor(int i=1;i<=n*2-1;i++) ls[i]=rs[i]=tme[i]=0;\n\tint cnt=n;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tint rx=fnd(x),ry=fnd(y);\n\t\tif(rx!=ry)\n\t\t{\n\t\t\tint u=++cnt;\n\t\t\ttme[u]=i;\n\t\t\tls[u]=rx;\n\t\t\trs[u]=ry;\n\t\t\tfa[rx]=fa[ry]=u;\n\t\t}\n\t}\n\tdfs(cnt,0);\n\tbuilt(1,1,n);\n\twhile(q--)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tprintf(\"%d \",tme[que(1,1,n,l,r)]);\n\t}\n\tprintf(\"\\n\");\n}\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T-->0) slove();\n\treturn 0;\n}\n```",
        "postTime": 1658198477,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "CF1706E Qpwoeirut and Vertices \u9898\u89e3"
    }
]