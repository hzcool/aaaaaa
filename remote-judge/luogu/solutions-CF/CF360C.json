[
    {
        "content": "# Levko and Strings\n## \u601d\u8def\n$\\ \\ \\ \\ \\ \\ $ \u8fd9\u9053\u9898\u4e0d\u5e94\u8be5\u662f\u84dd\u7684\uff0c\u81f3\u5c11\u90fd\u5e94\u8be5\u662f\u7d2b\u8272\u7684\u5427\u3002\u3002\u3002\n\n$\\ \\ \\ \\ \\ \\ $ \u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u3002\u6211\u4eec\u8bbe$dp[i][j]$\u8868\u793a\u5df2\u7ecf\u8003\u8651\u524d\u9762$i$\u4f4d\uff0c\u540e\u9762\u7684\u5b57\u7b26\u90fd\u4e00\u6837\uff0c\u4ea7\u751f\u7684\u8d21\u732e\u4e3a$j$\u7684\u65b9\u6848\u6570\u3002\n\n$\\ \\ \\ \\ \\ \\ $ \u8003\u8651\u5982\u4f55\u8f6c\u79fb\u3002\u6211\u4eec\u8bbe$l$\u662f$i$\u4e4b\u524d\u4ece\u53f3\u5f80\u5de6\u6570\u7b2c\u4e00\u4f4d$\\text {s,t}$\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u8003\u8651\u5206\u7c7b\u8ba8\u8bba\u3002\n\n>\n\u5982\u679c$t[i]>s[i]$\n\n$\\ \\ \\ \\ \\ \\ $ \u5f88\u663e\u7136\uff0c\u6211\u4eec$\\text {left point}\\in [l+1,i],\\text {right point}\\in [i,n]$\u7684\u65f6\u5019\uff0c\u662f\u6ee1\u8db3\u7684\uff0c\u5176\u4ed6\u60c5\u51b5\u90fd\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$(\\text {'z'}-s[i])\\times \\sum_{l=0}^{i-1} dp[l][j-(i-l)\\times (n-i+1)]$\n\n>\n\u5982\u679c$t[i]<s[i]$\n\n$\\ \\ \\ \\ \\ \\ $ \u53ef\u4ee5\u770b\u51fa\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u4ea7\u751f\u65b0\u7684\u76f8\u5173\u5ea6\uff0c\u6240\u4ee5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$(s[i]-\\text {'a'})\\times \\sum_{l=0}^{i-1} dp[l][j]$\n\n$\\ \\ \\ \\ \\ \\ $ \u7efc\u4e0a\uff0c\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b:\n\n$$dp[i][j]=(\\text {'z'}-s[i])\\times \\sum_{l=0}^{i-1}dp[l][j-(i-l)\\times (n-i+1)]+(s[i]-\\text {'a'})\\times \\sum_{l=0}^{i-1} dp[l][j]$$\n\n$\\ \\ \\ \\ \\ \\ $ \u6700\u540e\u7684\u7b54\u6848\u5f88\u663e\u7136\u5c31\u662f:\n\n$$\\sum_{i=0}^{n} dp[i][k]$$\n## $\\text {Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define mod 1000000007\n#define ll long long\n#define MAXN 2005\n\nint n,k;\n\nchar s[MAXN];\n\nint dp[MAXN][MAXN],sum[MAXN];\n\nvoid Add (int &x,int y){x = (x + y >= mod ? x + y - mod : x + y);}\n\nint Solve ()\n{\n\tsum[0] = dp[0][0] = 1;\n\tfor (Int i = 1;i <= n;++ i)\n\t\tfor (Int j = 0;j <= k;++ j)\n\t\t{\n\t\t\tfor (Int l = i - 1;l >= 0 && (i - l) * (n - i + 1) <= j;-- l)\n\t\t\t\tAdd (dp[i][j],dp[l][j - (i - l) * (n - i + 1)]);\n\t\t\tdp[i][j] = (ll)('z' - s[i]) * dp[i][j] % mod;\n\t\t\tAdd (dp[i][j],(ll)sum[j] * (s[i] - 'a') % mod);\n\t\t\tAdd (sum[j],dp[i][j]);\n\t\t}\n\tint Ans = 0;\n\tfor (Int i = 0;i <= n;++ i) Add (Ans,dp[i][k]);\n\treturn Ans;\n}\n\nint read ()\n{\n\tint x = 0;char c = getchar();int f = 1;\n\twhile (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}\n\twhile (c >= '0' && c <= '9'){x = (x << 3) + (x << 1) + c - '0';c = getchar();}\n\treturn x * f;\n}\n\nvoid write (int x)\n{\n\tif (x < 0){x = -x;putchar ('-');}\n\tif (x > 9) write (x / 10);\n\tputchar (x % 10 + '0');\n}\n\nsigned main()\n{\n\tn = read (),k = read ();\n\tscanf (\"%s\",s + 1);\n\twrite (Solve ()),putchar ('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1584175220,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF360C \u3010Levko and Strings\u3011"
    },
    {
        "content": "## $\\text{Description}$\n\u7ed9\u4e00\u4e2a\u4e3a $n$ \u7684\u53ea\u6709\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u4e32 $s$\uff0c\u5b9a\u4e49\u5b83\u4e0e\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u4e32 $t$ \u7684\u7f8e\u4e3d\u5ea6\u4e3a\uff1a\u5b58\u5728\u591a\u5c11\u4e2a\u4e8c\u5143\u7ec4 $(i,j) \\ 1\\leq i \\leq j \\leq n$ \u6ee1\u8db3 $s_{i...j}<t_{i...j}$\uff0c\u8fd9\u91cc\u7684'<'\u662f\u5b57\u5178\u5e8f\u6bd4\u8f83\u3002\u6c42\u6709\u591a\u5c11\u4e2a $t$\uff0c\u4f7f\u5f97 $s$ \u4e0e $t$ \u7684\u7f8e\u4e3d\u5ea6\u4e3a $k$.   \n$n,k \\leq 2000$\n## $\\text{Solution}$\n\u5f88\u597d\u7684 DP \u9898.  \n\u4e00\u79cd\u4e0d\u592a\u4e00\u6837\u7684\u505a\u6cd5.  \n\u5bb9\u6613\u60f3\u5230\u8bbe\u8ba1 $dp_{i,j}$ \u8868\u793a $[1...i]$ \u5df2\u7ecf\u786e\u5b9a\u7684\u4e8c\u5143\u7ec4\u6709 $j$ \u4e2a\u7684\u65b9\u6848\u6570.  \n\u8bbe $up_i$ \u4e3a\u5927\u4e8e $s_i$ \u7684\u5b57\u7b26\u6570\uff0c\u8bbe $bot_i$ \u4e3a\u5c0f\u4e8e $s_i$ \u7684\u5b57\u7b26\u6570.  \n\n\u5bf9\u4e8e\u7b2c $i$ \u4f4d\u586b\u4e0d\u540c\u4e8e $s_i$ \u7684\u5b57\u7b26\u65f6\uff0c\u6bd4\u8f83\u5bb9\u6613\u5199\u51fa\u8f6c\u79fb\uff1a  \n1. $t_i<s_i$ \u65f6\uff0c\u5408\u6cd5\u4e8c\u5143\u7ec4\u6570\u91cf\u4e0d\u53d8\uff0c\u6240\u4ee5\u6709\uff1a\n$$bot_i\\times dp_{i-1,j}\\to dp_{i,j}$$\n2. $t_i>s_i$ \u65f6\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 $i\\le j\\le n$\uff0c$(i,j)$ \u90fd\u662f\u5408\u6cd5\u7684\u4e8c\u5143\u7ec4\uff0c\u4e00\u5171\u589e\u52a0\u4e86 $n-i+1$ \u4e2a\uff0c\u6240\u4ee5\u6709\uff1a\n$$up_i\\times dp_{i-1,j}\\to dp_{i,j+(n-i+1)}$$\n\n\u63a5\u4e0b\u6765\u5c31\u662f $s_i=t_i$ \u7684\u60c5\u51b5\uff0c\u76f8\u5bf9\u6bd4\u8f83\u9ebb\u70e6.  \n\n\u8fd8\u662f\u5206\u60c5\u51b5\u6765\u8ba8\u8bba.  \n1. \u8fde\u7eed\u591a\u4f4d\u76f8\u7b49\uff0c\u5230\u67d0\u4e00\u4f4d $t_k<s_k$\u3002\u5408\u6cd5\u4e8c\u5143\u7ec4\u4e0d\u53d8\uff0c\u5219\u6709\uff1a\n$$bot_k\\times dp_{i-1,j}\\to dp_{k,j}(i<k\\le n)$$\n>\u66b4\u529b\u7edf\u8ba1\u663e\u7136\u4f1a T\uff0c\u4f46\u662f\u53ef\u4ee5\u5f00\u4e00\u4e2a $sum$ \u6570\u7ec4\u7136\u540e\u628a $dp_{i,j}$ \u52a0\u5230 $sum_j$ \u91cc\u9762\uff0c\u7edf\u8ba1\u5230\u540e\u9762\u7684\u65f6\u5019\u628a $sum_j$ \u91cc\u6240\u6709\u7684\u503c\u7edf\u8ba1\u8d77\u6765\u5373\u53ef.\n2. \u8fde\u7eed\u591a\u4f4d\u76f8\u7b49\uff0c\u5230\u67d0\u4e00\u4f4d $t_k>s_k$\u3002\u5bf9\u4e8e $i\\le a\\le k,k\\le b\\le n$\uff0c$(a,b)$ \u90fd\u662f\u5408\u6cd5\u7684\u4e8c\u5143\u7ec4\uff0c\u589e\u52a0\u7684\u4e8c\u5143\u7ec4\u6570\u91cf\u662f $(k-i+1)\\times (n-k+1)$\uff0c\u6240\u4ee5\u6709\uff1a\n$$up_k\\times dp_{i-1,j}\\to dp_{k,j+(k-i+1)\\times (n-k+1)}(i<k\\le n)$$\n> \u8fd9\u4e2a\u60f3\u7528\u7c7b\u4f3c\u60c5\u51b5 $1$ \u7684\u65b9\u6cd5\u7edf\u8ba1\u6bd4\u8f83\u56f0\u96be\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u5728 $n-i$ \u8f83\u5927\u65f6\uff0c\u589e\u52a0\u4e8c\u5143\u7ec4\u7684\u6570\u91cf\u662f\u4e00\u4e2a\u5173\u4e8e $k$ \u7684\u4e8c\u6b21\u5355\u5cf0\u51fd\u6570\uff0c\u7531\u4e8e $m$ \u53ea\u6709 $O(n)$ \u7ea7\u522b\uff0c\u6240\u4ee5\u6709\u6548\u7684\u8f6c\u79fb\u975e\u5e38\u5c11\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u4e24\u8fb9\u66b4\u529b\u8f6c\u79fb\uff0c\u589e\u91cf\u8d85\u8fc7 $m$ \u5c31 break \u5373\u53ef.\n3. \u4e0d\u8981\u5fd8\u8bb0\u8fd8\u6709\u53ef\u80fd\u59cb\u7ec8\u5230\u6700\u540e\u90fd\u76f8\u7b49\uff0c\u53ef\u4ee5\u76f4\u63a5\uff1a\n$$dp_{i,j}\\to dp_{n,j}$$\n\n## $\\text{Code}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\nconst int N=2005;\nconst int mod=1e9+7;\ninline ll read(){\n  ll x(0),f(1);char c=getchar();\n  while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n  while(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n  return x*f;\n}\nint n,m;\nchar s[N];\nll dp[N][N],botsum[N];\nll c[N];\nint main(){\n  #ifndef ONLINE_JUDGE\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n#endif\n  //debug(\"%d\\n\",(int)sizeof(dp)/1024/1024);\n  n=read();m=read();\n  scanf(\" %s\",s+1);\n  dp[0][0]=1;\n  for(int i=1;i<=n;i++){\n    for(int j=0;j<=m;j++){\n      int bot=s[i]-'a',up='z'-s[i];      \n      (dp[i][j]+=bot*botsum[j])%=mod;\n      (dp[i][j]+=bot*dp[i-1][j])%=mod;\n      if(j-(n-i+1)>=0){\n\t(dp[i][j]+=up*dp[i-1][j-(n-i+1)])%=mod;\t\n      }\n      //printf(\"i=%d j=%d bot=%d up=%d dp=%lld\\n\",i,j,bot,up,dp[i][j]);\n    }\n    for(int j=0;j<=m;j++){\n       (botsum[j]+=dp[i-1][j])%=mod;      \n       (dp[n][j]+=dp[i-1][j])%=mod;\n       int l=i+1,r=n;\n       for(;l<=n;l++){\n\t int add=(l-i+1)*(n-l+1);\n\t if(j+add>m) break;\n\t (dp[l][j+add]+=('z'-s[l])*dp[i-1][j])%=mod;\n       }\n       for(;r>l;r--){\n\t int add=(r-i+1)*(n-r+1);\n\t if(j+add>m) break;\n\t (dp[r][j+add]+=('z'-s[r])*dp[i-1][j])%=mod;\n       }\n    }\n  }\n  printf(\"%lld\\n\",dp[n][m]);\n  return 0;\n}\n/*\n3 3\ntsy\n*/\n\n```\n",
        "postTime": 1639641013,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "CF360C Levko and Strings"
    }
]