[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u6709 $n$ \u79cd\u7269\u54c1\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u4e00\u4e2a\u4ef7\u683c $c_i$ \u548c\u54c1\u8d28 $q_i$ \u3002\u6709 $k$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u624b\u91cc\u6709 $q_i$ \u7684\u94b1\uff0c\u6bcf\u4e2a\u4eba\u4f1a\u4f18\u5148\u4e70\u80fd\u591f\u652f\u4ed8\u7684\uff0c\u54c1\u8d28\u6700\u9ad8\u7684\u7269\u54c1\u3002\u6bcf\u4eba\u53ea\u80fd\u4e70\u4e00\u4ef6\u7269\u54c1 **\u4e00\u6b21** \uff0c\u4f46\u662f\u4e00\u4ef6\u7269\u54c1\u53ef\u4ee5\u88ab\u4e70\u7684\u6b21\u6570\u4e0d\u9650\uff0c\u5373\u6bcf\u4e2a\u4eba\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\u3002\u6c42\u6bcf\u4e2a\u4eba\u4e70\u7684\u7269\u54c1\u4ef6\u6570\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u5982\u679c\u5206\u522b\u5904\u7406\u6bcf\u4e2a\u4eba\uff0c\u8d2a\u5fc3\u5c06\u7269\u54c1\u6309\u7167 $q_i$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u82e5\u76f8\u540c\u5219 $c_i$ \u5c0f\u7684\u5728\u524d\uff0c\u6bcf\u6b21\u67e5\u8be2\u626b\u4e00\u904d\u6574\u4e2a\u533a\u95f4\uff0c\u80fd\u4e70\u5219\u4e70\uff0c\u6700\u540e\u5f97\u51fa\u4ef6\u6570\u3002\u8fd9\u6837\u7684\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(max\\{k,\\log_2 n\\}\\times n)$ \u7684\uff0c\u65e0\u6cd5\u4f18\u5316\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u6362\u4e00\u4e2a\u89d2\u5ea6\u5904\u7406\u95ee\u9898\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u4eba\u624b\u91cc\u7684\u94b1\u7684\u6570\u91cf\uff0c **\u6309\u7167\u4e0a\u9762\u63cf\u8ff0\u7684\u6392\u5e8f\u65b9\u5f0f** \uff0c\u4f9d\u6b21\u5904\u7406\u6bcf\u4e2a\u7269\u54c1\uff0c\u5373\uff1a\n\n\u8bbe\u5f53\u524d\u5904\u7406\u7684\u662f\u7269\u54c1 $i$ \uff0c\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4eba\uff0c\u82e5\u5176\u624b\u4e2d\u7684\u94b1\u6570\u5927\u4e8e\u7b49\u4e8e $c_i$ \uff0c\u5219\u9700\u8d2d\u4e70\u8fd9\u4ef6\u7269\u54c1\uff0c\u5c06\u624b\u4e2d\u7684\u94b1\u6570\u51cf\u53bb $c_i$ \uff0c\u5c06\u7b54\u6848\u8ba1\u6570\u5668\u589e\u52a0 $1$ \u5373\u53ef\u3002\n\n\u82e5\u5176\u624b\u4e2d\u7684\u94b1\u6570\u5c0f\u4e8e $c_i$ \uff0c\u5219\u4e0d\u8d2d\u4e70\u8fd9\u4ef6\u7269\u54c1\uff0c\u4e0d\u505a\u4efb\u4f55\u4fee\u6539\u3002\n\n\u4e00\u4e2a $O(max\\{k,\\log_2 n\\}\\times n)$ \u7684\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\nfor(int i=1;i<=k;i++)scanf(\"%d\",q+i),id[i]=i;\nsort(id+1,id+k+1);\nfor(int i=1;i<=n;i++)for(int j=1;j<=k;j++)\nif(q[id[j]]>=s[i].c)q[id[j]]-=s[i].c,ans[id[j]]++;\nfor(int i=1;i<=k;i++)printf(\"%d \",ans[i]);\nprintf(\"\\n\");\n```\n\n\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u6bcf\u4e2a\u4eba\u624b\u4e2d\u7684\u94b1\u6570\uff0c\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u82e5\u6bcf\u4e2a\u4eba\u624b\u4e2d\u7684\u94b1\u6570\u662f\u6709\u5e8f\u7684\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ea\u9700\u8981\u5c06\u5927\u4e8e\u7b49\u4e8e $c_i$ \u7684\u503c\uff08\u8fde\u7eed\u7684\uff0c\u9760\u53f3\u7684\u4e00\u6bb5\uff09\u51cf\u53bb $c_i$ \u5e76\u4f7f\u7b54\u6848\u8ba1\u6570\u5668\u589e\u52a0 $1$ \u5373\u53ef\u3002\n\n\u53ef\u4ee5\u7528 **\u5e73\u8861\u6811** \u6765\u7ef4\u62a4\u8fd9\u4e9b\u503c\u5e76 **\u6253\u6807\u8bb0** \u505a\u533a\u95f4\u4fee\u6539\u3002\n\n\u4f46\u662f\uff0c\u4eba\u624b\u4e2d\u7684\u94b1\u6570\u51cf\u53bb $c_i$ \u540e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u590d\uff0c\u5373\u4e0d\u80fd\u4fdd\u8bc1\u5e73\u8861\u6811\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\uff0c\u4e5f\u65e0\u6cd5\u5b8c\u6210 FHQ \u7684\u5408\u5e76\u64cd\u4f5c\uff08\u5408\u5e76\u4e24\u4e2a FHQ Treap \u9700\u8981\u4fdd\u8bc1\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u53e6\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u503c\uff09\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u65b9\u6cd5\u662f\uff0c\u5bf9\u4e8e\u6709\u91cd\u590d\u7684\u90e8\u5206\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5730\u66b4\u529b\u63d2\u5165\uff1b\u4e0d\u91cd\u590d\u7684\u90e8\u5206\uff0c\u6253\u6807\u8bb0\u5373\u53ef\u3002\n\n\u76f4\u89c9\u5730\u8ba4\u4e3a\u8fd9\u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u4eba\u624b\u4e2d\u7684\u94b1\u6570\uff08\u4e0d\u59a8\u8bbe\u4e3a $x$ \uff09\u9700\u8981\u88ab\u66b4\u529b\u63d2\u5165\uff0c\u5176\u9700\u8981\u6ee1\u8db3\uff1a\n\n$\\because c_i\\le x< 2c_i$\n\n$\\therefore c_i>\\frac x 2$\n\n\u89c2\u5bdf\u5230\u6bcf\u6b21\u66b4\u529b\u63d2\u5165\u7684\u8bdd\u4eba\u624b\u4e2d\u7684\u94b1\u6570\u662f\u4f1a\u51cf\u53bb $c_i$ \u7684\uff0c\u56e0\u4e3a $c_i$ \u5927\u4e8e $x$ \u7684\u4e00\u534a\uff0c\u6240\u4ee5\u6bcf\u6b21\u66b4\u529b\u63d2\u5165\u65f6\u90fd\u4f7f $x$ \u81f3\u5c11\u51cf\u5c11\u4e86\u4e00\u534a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u6709 $q_i$ \u5757\u94b1\u7684\u4eba\u6765\u8bf4\u5176\u6700\u591a\u4f1a\u88ab\u66b4\u529b\u63d2\u5165 $O(\\log_2 q_i)$ \u6b21\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fdd\u8bc1\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+\\sum \\log_2 q_i)\\log_2 n) $ \uff0c\u5728\u56db\u79d2\u7684\u65f6\u9650\u5185\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue> \nusing namespace std;\nconst int maxn=200010;\nint n,k,q;\nstruct FHQ\n{\n    int rt,cnt,lc[maxn],rc[maxn],siz[maxn],pri[maxn],val[maxn];\n\tint sum[maxn],tag[maxn],minu[maxn];\n    void print(int o)\n    {\n        if(!o)return;\n        pushdown(o);\n        print(lc[o]);\n        //printf(\"%d \",val[o]);\n        print(rc[o]);\n    }\n    void maintain(int o){siz[o]=siz[lc[o]]+siz[rc[o]]+1;}\n    void pushdown(int o)\n    {\n    \tif(tag[o])\n    \t{\n    \t\tif(lc[o])tag[lc[o]]+=tag[o],sum[lc[o]]+=tag[o];\n\t\t\tif(rc[o])tag[rc[o]]+=tag[o],sum[rc[o]]+=tag[o];\n\t\t\ttag[o]=0; \n\t\t}\n\t\tif(minu[o])\n\t\t{\n\t\t\tif(lc[o])minu[lc[o]]+=minu[o],val[lc[o]]-=minu[o];\n\t\t\tif(rc[o])minu[rc[o]]+=minu[o],val[rc[o]]-=minu[o];\n\t\t\tminu[o]=0;\n\t\t}\n\t}\n    int merge(int x,int y)\n    {\n        if(x==0||y==0)return x+y;\n        pushdown(x);pushdown(y);\n        maintain(x);maintain(y);\n        if(pri[x]<pri[y])\n        {\n            rc[x]=merge(rc[x],y);\n            maintain(x);return x;\n        }\n        else\n        {\n            lc[y]=merge(x,lc[y]);\n            maintain(y);return y;\n        }\n    }\n    void split_val(int o,int k,int&x,int&y)\n    {\n        if(!o){x=y=0;return;}\n        pushdown(o); \n        if(val[o]<=k)x=o,split_val(rc[o],k,rc[o],y);\n        else y=o,split_val(lc[o],k,x,lc[o]);\n        maintain(o);\n    }\n    void split_siz(int o,int k,int&x,int&y)\n    {\n        if(!o){x=y=0;return;}\n        pushdown(o);\n        if(siz[lc[o]]>=k)y=o,split_siz(lc[o],k,x,lc[o]);\n        else x=o,split_siz(rc[o],k-siz[lc[o]]-1,rc[o],y);\n        maintain(o);\n    }\n    int newnode(int v)\n    {\n        cnt++;\n        lc[cnt]=rc[cnt]=0;\n        val[cnt]=v;\n        siz[cnt]=1;\n        pri[cnt]=rand();\n        tag[cnt]=sum[cnt]=0;\n        minu[cnt]=0;\n        return cnt;\n    }\n}st;\nstruct node\n{\n\tint c,q;\n\tbool operator<(node x)const{if(q==x.q)return c<x.c;return q>x.q;}\n}s[maxn];\n//int q[maxn],id[maxn],ans[maxn];\nqueue<int>Q;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&s[i].c,&s[i].q);\n\tsort(s+1,s+n+1);\n\tscanf(\"%d\",&k);\n\t/*\n\tfor(int i=1;i<=k;i++)scanf(\"%d\",q+i),id[i]=i;\n\tsort(id+1,id+k+1);\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=k;j++)\n\tif(q[id[j]]>=s[i].c)q[id[j]]-=s[i].c,ans[id[j]]++;\n\tfor(int i=1;i<=k;i++)printf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n\t*/\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d\",&q);\n\t\tint x,y;\n\t\tst.split_val(st.rt,q,x,y);\n\t\tst.rt=st.merge(st.merge(x,st.newnode(q)),y); \n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y,z;\n\t\tst.split_val(st.rt,s[i].c-1,x,y);\n\t\tst.split_val(y,s[i].c+s[i].c-1,y,z);\n\t\tst.minu[z]+=s[i].c;st.val[z]-=s[i].c;\n\t\tst.tag[z]++;st.sum[z]++;\n\t\twhile(!Q.empty())Q.pop();\n\t\tQ.push(y);\n\t\twhile(!Q.empty())\n\t\t{\n\t\t\tint t=Q.front();Q.pop();\n\t\t\tst.pushdown(t);\n\t\t\tif(st.lc[t])Q.push(st.lc[t]);\n\t\t\tif(st.rc[t])Q.push(st.rc[t]);\n\t\t\tint a,b;\n\t\t\tst.split_val(x,st.val[t]-s[i].c,a,b);\n\t\t\tst.lc[t]=st.rc[t]=0;\n\t\t\tst.val[t]-=s[i].c;\n\t\t\tst.siz[t]=1;\n\t\t\tst.tag[t]=0;\n\t\t\tst.sum[t]++;\n\t\t\tst.minu[t]=0;\n\t\t\tx=st.merge(st.merge(a,t),b); \n\t\t}\n\t\tst.rt=st.merge(x,z);\n\t}\n\tst.print(st.rt);\n\tfor(int i=1;i<=k;i++)printf(\"%d\\n\",st.sum[i]);\n\treturn 0;\n}\n```\n\n## \u51e0\u70b9\u6ce8\u610f\n\n1.\u672c\u9898\u8981\u7ef4\u62a4\u4e24\u4e2a\u6807\u8bb0\uff0c\u94b1\u6570\u7684\u51cf\u5c11\u91cf $minu$ \u548c\u7b54\u6848\u8ba1\u6570\u5668\u7684\u589e\u52a0\u91cf $tag$ \u3002\n\n2.\u65e0\u8bba\u4f55\u65f6\u90fd\u8981\u8bb0\u5f97\u4e0b\u4f20\u6807\u8bb0\uff01\uff08\u5305\u62ec\u66b4\u529b\u63d2\u5165\u65f6\uff09\n\n3.\u6211\u7684\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u7ed3\u70b9 $x$ \u4ee3\u8868\u7b2c $x$ \u4e2a\u4eba\uff0c\u8fd9\u79cd\u5199\u6cd5\u5728\u66b4\u529b\u5408\u5e76\u524d\u9700\u8981\u91cd\u7f6e\u7ed3\u70b9\u4fe1\u606f\uff1b\u5982\u679c\u60a8\u7684\u5199\u6cd5\u662f\u6bcf\u6b21\u65b0\u5efa\u4e00\u4e2a\u7ed3\u70b9\uff0c\u8bb0\u5f97\u4fdd\u5b58\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5f52\u5c5e\uff0c\u5373\u5176\u8868\u793a\u54ea\u4e00\u4e2a\u4eba\u3002\n\n4.\u5728\u8f93\u51fa\u7ed3\u679c\u524d\uff0c\u9700\u8981\u5168\u90e8\u4e0b\u4f20\u4e00\u6b21\u6807\u8bb0\uff08\u6211\u88ab\u5751\u4e86\u4e00\u6b21\uff09\u3002\n\n5.\u7f51\u4e0a\u4e00\u4e9b\u9898\u89e3\u8bf4\u672c\u9898\u7528\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\u6c42\u89e3\uff0c\u5176\u5b9e\u5c31\u53ea\u662f FHQ  Treap \u800c\u5df2\uff0c\u53ea\u662f\u5f53\u65f6\u5e76\u6ca1\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u53eb\u6cd5\uff0c\u800c\u8fd9\u79cd\u5e73\u8861\u6811\u88ab\u7528\u6765\u5b9e\u73b0\u53ef\u6301\u4e45\u5316\u7f62\u4e86\u3002",
        "postTime": 1547641493,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF702F \u3010T-Shirts\u3011"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/702/problem/F)\n\n\u9996\u5148\u80af\u5b9a\u5c06\u6240\u6709\u7269\u54c1\u6392\u4e2a\u5e8f\u3002\n\n\u8003\u8651\u66b4\u529b\u505a\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u679a\u4e3e\u6240\u6709\u7269\u54c1\uff0c\u80fd\u4e70\u5c31\u4e70\u3002\u4e0d\u8fc7\u626b\u4e00\u773c\u5c31\u77e5\u9053\u65e0\u6cd5\u76f4\u63a5\u4f18\u5316\u3002\n\n\u4e0d\u59a8\u6362\u4e2a\u89d2\u5ea6\uff0c\u66b4\u529b\u505a\u6cd5\u662f\u679a\u4e3e\u8be2\u95ee\uff0c\u8fd9\u6b21\u6211\u4eec\u679a\u4e3e\u7269\u54c1\u3002\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u679a\u4e3e\u6240\u6709\u7269\u54c1\uff0c\u5c06\u6240\u6709\u4e70\u5f97\u8d77\u5f53\u524d\u7269\u54c1\u7684\u8be2\u95ee\u7b54\u6848 $+1$\uff0c\u94b1\u6570\u51cf\u53bb\u5f53\u524d\u7269\u54c1\u7684\u4ef7\u683c\u3002\u8fd9\u6837\u5c31\u8c8c\u4f3c\u4e0e DS \u80fd\u591f\u642d\u5f97\u4e0a\u8fb9\u4e86\u3002\n\n\u4e8e\u662f\u9898\u76ee\u53d8\u4e3a\uff1a$n$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5c06\u5e8f\u5217\u6240\u6709\u503c $\\geq c$ \u7684\u6570\u51cf\u53bb $c$\uff0c\u95ee\u6bcf\u4e2a\u6570\u88ab\u64cd\u4f5c\u4e86\u51e0\u6b21\u3002\n\n\u53ef\u8fd8\u662f\u4e0d\u597d\u7ef4\u62a4\u554a\uff0c\u5e73\u8861\u6811 split \u51fa $\\geq c$ \u7684\u6570\u540e\u4f60\u8fd8\u662f\u8981\u66b4\u529b\u4fee\u6539\u554a\u3002\n\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u4e00\u79cd\u5947\u6deb\u6280\u5de7\uff0c\u5b66\u540d\u201c\u52bf\u80fd\u5206\u6790\u201d\uff08\u548b\u611f\u89c9\u50cf\u7269\u7406\u5185\u5bb9\u554aqwq\uff09\n\n\u6211\u4eec\u5c06\u539f\u5e8f\u5217 split \u6210\u4e09\u4e2a\u90e8\u5206\uff0c$[1,c),[c,2c),[2c,\\infty)$\uff0c\u663e\u7136\uff0c\u7b2c\u4e00\u90e8\u5206\u4e0d\u4f1a\u88ab\u64cd\u4f5c\uff0c\u7b2c\u4e09\u90e8\u5206\u88ab\u64cd\u4f5c\u540e\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u66b4\u529b\u4fee\u6539\u7b2c\u4e8c\u90e8\u5206\u3002\n\n\u4f60\u53ef\u80fd\u4f1a\u76f4\u89c9\u5730\u8ba4\u4e3a\u8fd9\u6837\u5b50\u4f18\u5316\u6ca1\u5565\u5375\u7528\uff0c\u5176\u5b9e\u8fd9\u6837\u505a\u590d\u6742\u5ea6\u53cd\u5012\u662f\u5bf9\u7684\u3002\n\n\u8fd9\u6837\u770b\u4f3c\u4e0d\u8d77\u773c\u7684\u4f18\u5316\u4e3a\u4ec0\u4e48\u5c31\u628a\u4e0d\u53ef\u80fd\u53d8\u6210\u53ef\u80fd\u4e86\u5462\uff1f\n\n\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u66b4\u529b\u4fee\u6539\u7684\u6570\u90fd\u5728 $[c,2c)$ \u4e2d\uff0c\u4e5f\u5c31\u662f\u4fee\u6539\u5b8c\u4e4b\u540e\uff0c\u539f\u6570\u81f3\u591a\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a\u3002\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u6570\u6700\u591a\u88ab\u4fee\u6539 $\\log c_i$ \u6b21\uff0c\u603b\u590d\u6742\u5ea6\u7ebf\u6027\u5bf9\u6570\u65b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u65f6\u9650\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tchar c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=2e5+5;\nint Rand(){return rand()<<15|rand();}\nint n,m,ans[MAXN+5];\nstruct event{int c,q;} a[MAXN+5];\nbool cmp(event x,event y){if(x.q!=y.q) return x.q>y.q;return x.c<y.c;}\nstruct node{\n\tint ch[2],id,val,key,cntlz,minlz,cnt;\n} s[MAXN+5];\nint ncnt=0,rt=0;\nvoid pushdown(int k){\n\tif(s[k].minlz){\n\t\tif(s[k].ch[0]) s[s[k].ch[0]].minlz+=s[k].minlz,s[s[k].ch[0]].val-=s[k].minlz;\n\t\tif(s[k].ch[1]) s[s[k].ch[1]].minlz+=s[k].minlz,s[s[k].ch[1]].val-=s[k].minlz;\n\t\ts[k].minlz=0;\n\t} if(s[k].cntlz){\n\t\tif(s[k].ch[0]) s[s[k].ch[0]].cntlz+=s[k].cntlz,s[s[k].ch[0]].cnt+=s[k].cntlz;\n\t\tif(s[k].ch[1]) s[s[k].ch[1]].cntlz+=s[k].cntlz,s[s[k].ch[1]].cnt+=s[k].cntlz;\n\t\ts[k].cntlz=0;\n\t}\n}\nvoid split(int k,int val,int &a,int &b){\n\tif(!k){a=b=0;return;} pushdown(k);\n\tif(s[k].val<=val) a=k,split(s[k].ch[1],val,s[k].ch[1],b);\n\telse b=k,split(s[k].ch[0],val,a,s[k].ch[0]);\n}\nint merge(int x,int y){\n\tif(!x||!y) return x|y;pushdown(x);pushdown(y);\n\tif(s[x].key<s[y].key) return s[x].ch[1]=merge(s[x].ch[1],y),x;\n\telse return s[y].ch[0]=merge(x,s[y].ch[0]),y;\n}\nvoid dfsins(int x,int &y,int z){//insert all nodes in subtree x into subtree y, val-=z\n\tif(!x) return;pushdown(x);\n\tdfsins(s[x].ch[0],y,z);dfsins(s[x].ch[1],y,z);\n\ts[x].ch[0]=s[x].ch[1]=0;s[x].val-=z;s[x].cnt++;\n\tint k1,k2;split(y,s[x].val,k1,k2);y=merge(merge(k1,x),k2);\n}\nvoid insert(int x,int id){\n\tint k1,k2;split(rt,x,k1,k2);\n\tncnt++;s[ncnt].id=id;s[ncnt].key=Rand();s[ncnt].val=x;\n\trt=merge(merge(k1,ncnt),k2);\n}\nvoid dfscalc(int x){\n\tif(!x) return;pushdown(x);\n\tans[s[x].id]=s[x].cnt;dfscalc(s[x].ch[0]);dfscalc(s[x].ch[1]);\n}\nint main(){\n\tsrand(19260817);scanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d\",&a[i].c,&a[i].q);\n\tsort(a+1,a+n+1,cmp);scanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){int x;scanf(\"%d\",&x);insert(x,i);}\n\tfor(int i=1;i<=n;i++){\n\t\tint k1,k2,k3;split(rt,a[i].c-1,k1,k2);split(k2,a[i].c<<1,k2,k3);\n\t\tif(k3){s[k3].val-=a[i].c;s[k3].cnt++;s[k3].minlz+=a[i].c;s[k3].cntlz++;}\n\t\tdfsins(k2,k1,a[i].c);rt=merge(k1,k3);\n\t}\n\tfor(int i=1;i<=m;i++) ans[s[i].id]=s[i].cnt;\n\tdfscalc(rt);for(int i=1;i<=m;i++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1608437405,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF702F \u3010T-Shirts\u3011"
    },
    {
        "content": "\u4e0d\u4f1afhq\u7684\u5c0f\u849f\u84bb\u8bd5\u56fe\u7528splay\u89e3\u51b3\u8fd9\u9053\u9898\uff0c\u6765\u8bb2\u4e00\u4e0bsplay\u7684\u7ef4\u62a4\u65b9\u6cd5\u3002\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u6bd4\u8f83\u6e05\u6670\uff1a\u6309\u4eba\u624b\u4e2d\u7684\u94b1\u6570\u7ef4\u62a4\u5e73\u8861\u6811\uff0c\u5c06\u7269\u54c1\u6309\u54c1\u8d28\u6392\u5e8f\u540e\u4f9d\u6b21\u8ba9\u4eba\u4e70\uff0c\u8bbe\u5f53\u524d\u7269\u54c1\u4ef7\u683c\u4e3a $x$ \uff0c\u5373\u5c06\u94b1\u6570\u5206\u4e3a $[0,x) [x,2x) [2x,inf) $ \u4e09\u90e8\u5206\uff0c\u5bf9\u4e2d\u95f4\u90e8\u5206\u66b4\u529b\u5220\u9664\u518d\u63d2\u5165\uff0c\u53f3\u534a\u90e8\u5206\u6253\u6807\u8bb0\u7ef4\u62a4\u3002\n\n\u8003\u8651\u7528splay\u6765\u5206\u79bb\u533a\u95f4\u7684\u8bdd\u9700\u8981\u627e\u5230 $x$ \u7684\u524d\u9a71\u70b9 $u$\uff0c $2x-1$ \u7684\u540e\u7ee7\u70b9 $v$ \uff0c\u4e3a\u4e86\u907f\u514d\u8fc7\u591a\u8ba8\u8bba\uff0c\u63d2\u5165-inf \u503c\u4fdd\u8bc1 $u$ \u5b58\u5728\uff0c\u800c\u5bf9\u4e8e $v$ \u8ba8\u8bba\uff1a\n\n1. $v$ \u5b58\u5728\uff0c\u5c06 $u$ \u65cb\u81f3\u6839, $v$ \u65cb\u81f3 $u$ \u7684\u53f3\u513f\u5b50\uff0c\u5219 $v$ \u7684\u5de6\u5b50\u6811\u5c31\u662f\u9700\u8981\u66b4\u529b\u5220\u9664\u518d\u63d2\u5165\u7684\u90e8\u5206\uff0c$v$ \u548c $v$ \u7684\u53f3\u5b50\u6811\u662f\u8981\u6253\u6807\u8bb0\u7684\u90e8\u5206\n1. $v$ \u4e0d\u5b58\u5728\uff0c\u8bf4\u660e\u6ca1\u6709\u4eba\u7684\u94b1\u6570\u5927\u4e8e\u7b49\u4e8e $2x$ \uff0c\u5c06 $u$ \u65cb\u81f3\u6839\u540e\uff0c\u94b1\u6570\u5c0f\u4e8e $x$ \u7684\u70b9\u4f4d\u4e8e $u$ \u548c $u$ \u7684\u5de6\u5b50\u6811\uff0c\u5bf9 $u$ \u7684\u53f3\u5b50\u6811\u91cd\u65b0\u63d2\u5165\u3002\n\n\u4ece\u7a0b\u5e8f\u6548\u7387\u89d2\u5ea6\u53ef\u4ee5\u505a\u4ee5\u4e0b\u4f18\u5316\uff1a\n\n1. \u91cd\u590d\u5229\u7528\u88ab\u5220\u9664\u7684\u70b9\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u81f3\u7ebf\u6027\uff0c\u7531\u4e8e\u5185\u5b58\u547d\u4e2d\u7387\u7684\u63d0\u9ad8\u8fd0\u884c\u901f\u5ea6\u4e5f\u5f97\u5230\u63d0\u5347\u3002\n1. \u5bf9\u6392\u5e8f\u540e\u7684\u7269\u54c1\u7684\u4ef7\u683c\u505a\u6574\u4f53\u6700\u5c0f\u503c\u6216\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u5f53\u94b1\u6570\u5c0f\u4e8e\u4ef7\u683c\u6700\u5c0f\u503c\u65f6\u65e0\u9700\u518d\u63d2\u5165\u6811\u4e2d\u3002\n\n\u5173\u4e8e\u4e0b\u4f20\u6807\u8bb0\uff1a\u4ece\u4e0a\u81f3\u4e0b\u8bbf\u95ee\u6811\u7684\u7ed3\u6784\u65f6\u5fc5\u987b\u4e0b\u4f20\uff0c\u4ee5\u9632\u4e07\u4e00\u7684\u8bdd\u53ef\u4ee5\u5728\u70b9\u5411\u4e0a\u65cb\u8f6c\u4e4b\u524d\u4e0b\u4f20\u6807\u8bb0\u3002\u6700\u540e\u8f93\u51fa\u7b54\u6848\u524d\u8981\u4e0b\u4f20\u6240\u6709\u7684\u6807\u8bb0\u3002\n\n\u4ee3\u7801\u5982\u4e0b(fhq&splay) , splay\u7684\u89e3\u6cd5\u76ee\u524d\u662f\u4f60\u8c37\u6700\u4f18\u89e3\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\n#include<ctime>\n#define LL long long\nusing namespace std;\nconst int N=200005,inf=0x7fffffff;\nint n,m,top,minc;\nint num[N];\nstruct shirt\n{\n\tint ci,qi;\n}a[N];\nbool operator < (const shirt x,const shirt y)\n{\n\tif(x.qi!=y.qi)return x.qi>y.qi;\n\treturn x.ci<y.ci;\n}\nint input()\n{\n\tint x=0,F=1;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')F=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*F;\n}\nvoid print(int x)\n{\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)print(x/10);\n\tputchar(x%10+'0');\n}\nstruct fhq\n{\n\tint rt,tot;\n\tint val[N],rnd[N],tag[N],ans[N],ch[N][2],pool[N],id[N];\n\tinline int random(){return rand()<<15|rand();}\n\tinline void cover(int u,int x,int y){if(u)tag[u]+=x,val[u]+=x,ans[u]+=y,num[id[u]]+=y;}\n\tinline void pushdown(int u){if(tag[u]!=0)cover(ch[u][0],tag[u],ans[u]),cover(ch[u][1],tag[u],ans[u]),tag[u]=ans[u]=0;}\n\tvoid split(int u,int k,int &x,int &y)// x <= k  y > k\n\t{\n\t\tif(!u){x=y=0;return;}\n\t\tpushdown(u);\n\t\tif(val[u]<=k)x=u,split(ch[u][1],k,ch[u][1],y);\n\t\telse y=u,split(ch[u][0],k,x,ch[u][0]);\n\t}\n\tint Merge(int u,int v)\n\t{\n\t\tif(!u||!v)return u|v;\n\t\tpushdown(u);pushdown(v);\n\t\tif(rnd[u]>rnd[v]){ch[u][1]=Merge(ch[u][1],v);return u;}\n\t\telse {ch[v][0]=Merge(u,ch[v][0]);return v;}\n\t}\n\tvoid ins(int x,int ID)\n\t{\n\t\tint l,r,u=pool[tot--];\n\t\tval[u]=x;rnd[u]=random();id[u]=ID;\n\t\ttag[u]=ans[u]=ch[u][0]=ch[u][1]=0;\n\t\tsplit(rt,x,l,r);\n\t\trt=Merge(Merge(l,u),r);\n\t}\n\tvoid trans(int u,int x)\n\t{\n\t\tif(!u)return;\n\t\tpushdown(u);\n\t\ttrans(ch[u][0],x);\n\t\ttrans(ch[u][1],x);\n\t\tpool[++tot]=u;\n\t\tnum[id[u]]++;\n\t\tif(val[u]-x>=minc)ins(val[u]-x,id[u]);\n\t}\n\tvoid dfs(int u)\n\t{\n\t\tif(!u)return;\n\t\tpushdown(u);dfs(ch[u][0]);dfs(ch[u][1]);\n\t}\n\tvoid solve()\n\t{\n\t\tint l,r,mid;\n\t\ttot=0;\n\t\tfor(int i=1;i<=m;i++)pool[++tot]=i;\n\t\tfor(register int i=1;i<=m;i++)ins(input(),i);\n\t\tfor(register int i=1;i<=n;i++)\n\t\t{\n\t\t\tsplit(rt,(a[i].ci<<1)-1,l,r);\n\t\t\tsplit(l,a[i].ci-1,l,mid);\n\t\t\tif(r)cover(r,-a[i].ci,1);\n\t\t\trt=Merge(l,r);\n\t\t\ttrans(mid,a[i].ci);\n\t\t}\n\t\tdfs(rt);\n\t\tfor(register int i=1;i<=m;i++)\n\t\t{\n\t\t\tprint(num[i]);\n\t\t\tif(i<m)putchar(' ');\n\t\t}\n\t}\n}tf;\nstruct Splay\n{\n\tint rt,tot;\n\tint val[N],id[N],fa[N],ch[N][2],tag[N],ans[N],pool[N];\n\tinline void con(int u,int v,int w){fa[u]=v;ch[v][w]=u;}\n\tinline void cover(int u,int x,int y){if(u)tag[u]+=x,val[u]+=x,ans[u]+=y,num[id[u]]+=y;}\n\tinline void pushdown(int u){if(tag[u]!=0)cover(ch[u][0],tag[u],ans[u]),cover(ch[u][1],tag[u],ans[u]),tag[u]=ans[u]=0;}\n\tvoid rot(int u)\n\t{\n\t\tint v=fa[u],d=(u==ch[v][1]);\n\t\tcon(u,fa[v],v==ch[fa[v]][1]);\n\t\tcon(ch[u][d^1],v,d);\n\t\tcon(v,u,d^1);\n\t}\t\n\tvoid splay(int u,int v)\n\t{\n\t\tpushdown(u);\n\t\twhile(fa[u]!=v)\n\t\t{\n\t\t\tint f1=fa[u],f2=fa[f1];\n\t\t\tif(f2!=v)rot(((u==ch[f1][1])^(f1==ch[f2][1]))?u:f1);\n\t\t\trot(u);\n\t\t}\n\t\tif(!v)rt=u;\n\t}\n\tvoid ins(int x,int ID)\n\t{\n\t\tint u=rt,f=0;\n\t\twhile(u)pushdown(u),f=u,u=ch[u][x>val[u]];\n\t\tu=pool[tot--];\n\t\tval[u]=x;id[u]=ID;\n\t\tch[u][0]=ch[u][1]=fa[u]=tag[u]=ans[u]=0;\n\t\tif(f)con(u,f,x>val[f]);\n\t\tsplay(u,0);\n\t}\n\tint pre(int x)\n\t{\n\t\tint u=rt,res=0;\n\t\twhile(u)\n\t\t{\n\t\t\tpushdown(u);\n\t\t\tif(val[u]<x)res=u,u=ch[u][1];\n\t\t\telse u=ch[u][0];\n\t\t}\n\t\treturn res;\n\t}\n\tint nxt(int x)\n\t{\n\t\tint u=rt,res=0;\n\t\twhile(u)\n\t\t{\n\t\t\tpushdown(u);\n\t\t\tif(val[u]>x)res=u,u=ch[u][0];\n\t\t\telse u=ch[u][1];\n\t\t}\n\t\treturn res;\n\t}\n\tvoid trans(int u,int x)\n\t{\n\t\tif(!u)return;\n\t\tpushdown(u);\n\t\ttrans(ch[u][0],x);\n\t\ttrans(ch[u][1],x);\n\t\tpool[++tot]=u;\n\t\tnum[id[u]]++;\n\t\tif(val[u]-x>=minc)ins(val[u]-x,id[u]);\n\t}\n\tvoid dfs(int u)\n\t{\n\t\tif(!u)return;\n\t\tpushdown(u);dfs(ch[u][0]);dfs(ch[u][1]);\n\t}\n\tvoid solve()\n\t{\n\t\tfor(register int i=1;i<=m+1;i++)pool[++tot]=i;\n\t\tfor(register int i=1;i<=m;i++)ins(input(),i);\n\t\tins(-inf,0);\n\t\tfor(register int i=1;i<=n;i++)\n\t\t{\n\t\t\tint u,v,k;\n\t\t\tu=pre(a[i].ci);\n\t\t\tsplay(u,0);\n\t\t\tv=nxt((a[i].ci<<1)-1);\n\t\t\tif(v)\n\t\t\t{\n\t\t\t\tsplay(v,u);\n\t\t\t\tk=ch[v][0];ch[v][0]=0;\n\t\t\t\tcover(v,-a[i].ci,1);\n\t\t\t\ttrans(k,a[i].ci);\n\t\t\t}\n\t\t\telse k=ch[u][1],ch[u][1]=0,trans(k,a[i].ci);\n\t\t}\n\t\tdfs(rt);\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tprint(num[i]);\n\t\t\tif(i<m)putchar(' ');\n\t\t}\n\t}\n}ts;\nvoid File()\n{\n\tfreopen(\"data.in\",\"r\",stdin);\n\tfreopen(\"ans.out\",\"w\",stdout);\n}\nint main()\n{\n\tsrand(time(0));\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)a[i].ci=input(),a[i].qi=input(),minc=min(minc,a[i].ci);\n\tsort(a+1,a+n+1);\n\tscanf(\"%d\",&m);\n\tts.solve();\n\treturn 0;\n}\n```",
        "postTime": 1596532843,
        "uid": 68865,
        "name": "slgdsxw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF702F T-Shirts"
    },
    {
        "content": "## \u9898\u610f:\n\u9898\u9762\u4e0a\u9762\u5f88\u6e05\u695a\u4e86\uff08\n\n## solution:\n\n\n~~\u5e38\u7528\u5957\u8def\uff1f~~\n\n\u505a\u8fc7\u4e00\u9053[\u7c7b\u4f3c\u7684](https://www.cnblogs.com/Isaunoya/p/12595575.html)\uff0c\u4e0d\u8fc7\u90a3\u4e2a\u592a\u677f\u5b50\u4e86\u3002\n\n\u8fd9\u4e24\u9898\u672c\u8d28\u76f8\u540c\uff0c\u90fd\u662f\u52bf\u80fd\u5206\u6790\u7684\u66b4\u529b\u5408\u5e76\u3002\n\n\u5e73\u8861\u6811\uff0c\u5927\u5bb6\u90fd\u4f1a\uff0c\u51cf\u6389 $k$ \u540e\uff0c\u76f8\u5bf9\u4f4d\u7f6e\u53d1\u751f\u6539\u53d8\u7684\uff0c\u53ea\u6709 $[1,k]$ \u548c $[k+1,2k]$\u3002\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u51cf\u6cd5\uff0c\u5982\u679c\u51cf\u6210\u529f\u4e86\uff0c\u4e0d\u4f1a\u8d85\u8fc7 $\\log$ \u6b21\u7684\u3002\uff08\u8fd9\u4e2a\u662f\u53ef\u4ee5\u8bc1\u660e\u7684\u6bcf\u6b21\u51cf\u5c0f\u7684\u81f3\u5c11\u662f\u4e00\u534a\uff0c\u51cf\u5230\u5f88\u5c0f\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u518d\u51cf\u5c0f\u4e86\uff0c\u6240\u4ee5\u662f $\\log$ \u6b21\u7684\uff09\n\n\u5177\u4f53\u70b9\u7684\u505a\u6cd5\u5927\u6982\u5c31\u662f\uff0c\u4f60\u6839\u636e\u503c\u57df\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff0c[1,k] && [k+1,2k] && [2k+1,inf]\u3002\n\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u5c06 $[1,k]$ \u548c $[k+1,2k]$ \u6709\u5e8f\u7684\u5408\u5e76\u5c31\u597d\u4e86\u3002\n\u600e\u4e48\u5408\u5e76\u5462\uff1f\u4f60\u53d1\u73b0$[k+1,2k]$\u7684\u6743\u503c\u7684\u76f8\u5bf9\u5927\u5c0f\u8fd8\u662f\u4e0d\u53d8\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u9012\u5f52\u628a\u4e00\u4e2a\u4e2a\u70b9\u63d0\u53d6\u51fa\u6765\u7136\u540e\u5408\u5e76qwq\u3002",
        "postTime": 1597202955,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF702F \u3010T-Shirts\u3011"
    },
    {
        "content": "- \u6b64\u9898\u4e3a\u5f00\u6446\u8ba1\u5212 T9\u3002\n- \u611f\u8c22[\u5946\u4f6c](https://www.luogu.com.cn/user/52881)\uff0c[\u5946\u4f6c](https://www.luogu.com.cn/user/52170)\u7684\u6307\u5bfc\u3002\n- \u5199\u6cd5\u60f3\u5fc5\u7801\u91cf\u4f1a\u5c0f\u4e00\u4e9b\u3002\n\n**[\u9898\u610f](https://www.luogu.com.cn/problem/CF702F)**\n- \u6709\u4e00\u4e9b T \u6064\uff0c\u5404\u81ea\u6709\u5176\u4ef7\u683c\u4e0e\u54c1\u8d28\u3002\n- \u9759\u6001\u591a\u6b21\u67e5\u8be2\uff0c\u5982\u679c\u6709\u4eba\u5e26\u4e86\u4e00\u4e9b\u94b1\uff0c\u5e76\u4e14\u8d2a\u5fc3\u5730\u4e70\u80fd\u4e70\u5230\u7684\u54c1\u8d28\u6700\u597d\u7684\uff0c\u95ee\u4ed6\u80fd\u4e70\u591a\u5c11\u4ef6\u3002\n\n**\u5206\u6790**\n- \u5982\u679c\u94b1\u4e0d\u591a\uff0c\u53ef\u4ee5\u5efa\u51fa\u8f6c\u79fb\u7684\u5185\u5411\u6811\u7136\u540e\u500d\u589e\u3002\n- \u73b0\u5728\u94b1\u5f88\u591a\uff0c\u6211\u4eec\u8003\u8651\u8f6c\u6362\u7ef4\u5ea6\u601d\u8003\uff0c\u628a\u6240\u6709\u4eba\u79bb\u7ebf\u4e0b\u6765\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u76f8\u5f53\u4e8e\u628a\u4e0d\u5c0f\u4e8e $x$ \u7684\u6570\u51cf $x$\u3002\n- \u800c\u8fd9\u5e94\u8be5\u5982\u4f55\u505a\u5462\uff1f\u8003\u8651\u500d\u589e\u5206\u5757\u7684\u65b9\u6cd5\uff0c\u7ef4\u62a4 $\\log w$ \u68f5\u7ebf\u6bb5\u6811\uff0c\u7b2c $i$ \u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4 $[2^{i-1},2^i-1]$ \u5185\u7684\u6570\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\uff0c\u5982\u679c\u51cf\u6570\u5927\u4e8e\u533a\u95f4\u6700\u5927\u503c\u5219\u65e0\u5f71\u54cd\uff0c\u4e0d\u80fd\u4f7f\u533a\u95f4\u6700\u5c0f\u503c\u964d\u5c42\u5c31\u5148\u6253\u4e2a\u6807\u8bb0\uff0c\u5426\u5219\u9012\u5f52\u4e0b\u53bb\u641e\uff0c\u628a\u964d\u5c42\u7684\u9886\u51fa\u6765\u964d\u5373\u53ef\u505a\u5230 $O(n\\log n\\log w )$ \u7684\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u6bcf\u6b21\u9012\u5f52\u4e0b\u53bb\u5fc5\u7136\u5bfc\u81f4\u533a\u95f4\u5185\u81f3\u5c11\u4e00\u4e2a\u6570\u964d\u5c42\uff08\u5982\u679c\u51cf\u6570\u5927\u4e8e\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u6709\u964d\u5c42\uff0c\u4f53\u73b0\u4e86\u4e8c\u8fdb\u5236\u5206\u89e3\u7684\u4f5c\u7528\uff09\uff0c[\u4ee3\u7801](https://www.luogu.com.cn/paste/syfzgq7h)\u3002\n- \u4f5c\u8005\u51e0\u4e4e\u662f\u5076\u7136\u53d1\u73b0~~\u5176\u5b9e\u662f\u76f4\u63a5\u4e8c\u8fdb\u5236\u5206\u7ec4\u88ab\u5361\u5e38~~\uff0c\u6309\u7167\u66f4\u5927\u7684\u8fdb\u5236\u5206\u7ec4\u4f1a\u66f4\u4f18\u4e00\u70b9\uff0c\u6211\u76f4\u63a5\u9009\u4e86 $32$ \u8fdb\u5236\uff0c\u7136\u540e\u8dd1\u5f97\u8fd8\u884c\u3002",
        "postTime": 1663335277,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u5f00\u6446\u8ba1\u5212#1\u3011T-shirts"
    },
    {
        "content": "## \u9898\u610f\n\u6709 $n$ \u4e2a\u7269\u54c1\uff0c\u7269\u54c1\u6709\u4ef7\u503c $c_i$ \u548c\u54c1\u8d28 $q_i$\u3002  \n\n\u6709 $m$ \u4e2a\u4eba\uff0c\u4eba\u6709 $v_i$ \u7684\u94b1\uff0c\u5047\u8bbe\u7269\u54c1\u65e0\u9650\uff0c\u4f46\u6bcf\u4e2a\u4eba\u53ea\u80fd\u4e70\u67d0\u79cd\u7269\u54c1\u4e00\u6b21\u3002\n\n\u4eba\u4f1a\u5c3d\u53ef\u80fd\u4e70\u54c1\u8d28\u9ad8\u7684\u5e76\u4e14\u4e70\u5f97\u8d77\u7684\u7269\u54c1\uff0c\u5982\u679c\u6709\u591a\u4e2a\uff0c\u5219\u9009\u62e9\u4ef7\u683c\u8f83\u4f4e\u7684\u90a3\u4e2a\u3002  \n\n\u6c42\u6bcf\u4e2a\u4eba\u4f1a\u4e70\u591a\u5c11\u4ef6\u7269\u54c1\u3002\n\n## \u9898\u89e3\n\n\u5f88\u660e\u663e\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3 $q_i$ \u7684\u5177\u4f53\u6570\u503c\uff0c\u4e8e\u662f\u6309\u7167 $q_i$ \u4ece\u5927\u5230\u5c0f\u6392\u5b8c\u5e8f\u540e\u5f97\u5230\u4e00\u4e2a\u65b0\u7684 $c_i$ \u5e8f\u5217\uff0c\u9898\u76ee\u6240\u6c42\u5373\u4e3a\u5728\u65b0\u5e8f\u5217\u4e0a\u5c3d\u53ef\u80fd\u5411\u540e\u52a0\u6570\uff0c\u8981\u52a0\u51e0\u4e2a\u6570\u3002  \n\n\u6211\u4eec\u5f53\u7136\u662f\u5e0c\u671b\u80fd\u5bf9\u6bcf\u4e2a\u4eba\u5355\u72ec\u5904\u7406\uff0c\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\u8fd9\u6837\u505a\u5f88\u96be\u628a\u5355\u6b21\u5904\u7406\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u5230\u4f4e\u4e8e $O(n)$ \u7684\u7ea7\u522b\u3002  \n\n\u5982\u679c\u4e0d\u80fd\u5bf9\u6bcf\u4e2a\u4eba\u5355\u72ec\u5904\u7406\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u5f53\u8003\u8651\u5bf9\u6bcf\u4e2a\u7269\u54c1\u5355\u72ec\u5904\u7406\uff0c\u5bf9\u4e8e\u5f53\u524d\u5904\u7406\u7684\u7269\u54c1 $c_i$\uff0c\u5b83\u4f1a\u4f7f\u6240\u6709 $v_i \\ge c_i$ \u7684\u4eba\u7684 $v_i -= c_i$\uff0c\u5e76\u4e14\u7b54\u6848\u52a0\u4e00\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u5e73\u8861\u6811\u6a21\u578b\uff0c\u5bf9\u6240\u6709\u4eba\u7684 $v_i$ \u5efa\u4e00\u9897\u5e73\u8861\u6811\uff0c\u4e4b\u540e\u904d\u5386\u7269\u54c1\uff0c\u904d\u5386\u5230 $c_i$ \u65f6\u628a\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\u6253\u4e00\u4e2a\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\u3002  \n\n\u4f46\u662f\u51e1\u4e8b\u90fd\u8981\u6709\u4e2a\u4f46\u662f\uff0c\u5982\u679c\u4ec5\u4ec5\u5982\u6b64\u7684\u8bdd\uff0c\u8fd9\u9898\u4e5f\u4e0d\u8fc7\u5c31\u662f\u4e2a\u5e73\u8861\u6811\u677f\u5b50\u3002  \n\n\u4f60\u4f1a\u53d1\u73b0\u5f53\u67d0\u4e00\u90e8\u5206\u4eba\u7684 $v_i$ \u53d1\u751f\u4e86\u53d8\u5316\u540e\uff0c\u8fd9\u4e00\u90e8\u5206\u4eba\u7684 $v_i$ \u53d6\u503c\u533a\u95f4\u4f1a\u4ece $[l_i,r_i]$ \u5e73\u79fb\u5230 $[l_i-c_i,r_i-c_i]$\uff0c\u800c\u6211\u4eec\u7ef4\u62a4\u7684\u5e73\u8861\u6811\u4e0a\u60f3\u8981\u6b63\u786e\u7684\u5408\u5e76\u533a\u95f4\u7684\u8bdd\uff0c\u81f3\u5c11\u8981\u4fdd\u8bc1\u53d6\u503c\u8303\u56f4\u4e0d\u80fd\u4ea4\u53c9\u3002  \n\n\u6362\u53e5\u8bdd\u8bf4\u5982\u679c\u4f60\u53ea\u662f\u5355\u7eaf\u7684\u5206\u5f00\u6307\u5b9a\u533a\u95f4\uff0c\u6253\u6807\u8bb0\uff0c\u5408\u5e76\uff0c\u90a3\u4e48\u4f60\u7684\u5e73\u8861\u6811\u5927\u6982\u7387\u4f1a\u53d8\u7684\u4e0d\u662f\u5e73\u8861\u6811\u3002  \n\n\u8fd9\u4e2a\u95ee\u9898\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u5bb9\u6613\u5904\u7406\u7684\uff0c\u5bb9\u6613\u53d1\u73b0\u4f1a\u4ea4\u53c9\u7684\u533a\u95f4\u53ea\u6709 $v_i$ \u53d6\u503c\u5728 $[0,c_i)$ \u548c $[c_i,2\\times c_i)$ \u8fd9\u4e24\u90e8\u5206\u7684\u4eba\uff0c\u51ed\u76f4\u89c9\u4f60\u89c9\u5f97\u540e\u9762\u8fd9\u90e8\u5206\u7684\u4eba\u5e94\u8be5\u4e0d\u4f1a\u5f88\u591a\uff0c\u6240\u4ee5\u4f60\u76f4\u63a5\u628a\u540e\u9762\u8fd9\u90e8\u5206\u7684\u6240\u6709\u4eba\u9010\u4e2a\u63d2\u5165\u524d\u9762\u8fd9\u90e8\u5206\u7684\u5e73\u8861\u6811\u3002\u7136\u540e\u4f60\u5c31\u8fc7\u4e86\u3002  \n\n\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u505a\u6cd5\u80fd\u8fc7\u7684\u539f\u56e0\u5e76\u975e\u662f\u53d6\u503c\u5728 $[c_i,2\\times c_i)$ \u7684\u4eba\u4e0d\u591a\uff0c\u800c\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eba\uff0c\u4ed6\u4e00\u65e6\u88ab\u66b4\u529b\u63d2\u5165\uff0c\u5c31\u610f\u5473\u7740\u4ed6\u7684 $v_i$ \u81f3\u5c11\u8981\u51cf\u53bb\u4e00\u4e2a\u4e0d\u5c0f\u4e8e $\\frac {v_i}2$ \u7684\u503c\uff0c\u5f88\u660e\u663e\uff0c\u4efb\u4f55\u4e00\u4e2a\u6570\u6700\u591a\u4f1a\u88ab\u51cf $log_2 v_i$ \u6b21\uff0c\u6240\u4ee5\u6bcf\u4e2a\u4eba\u6700\u591a\u4f1a\u88ab\u66b4\u529b\u63d2\u5165 $log_2 v_i$ \u6b21\uff0c\u6700\u540e\u5206\u6790\u51fa\u6765\u7684\u590d\u6742\u5ea6\u8fd8\u662f\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u7684\u3002  \n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\ntypedef long long int_t;\n\nint_t read() {\n    int_t x = 0, w = 1; char ch = 0;\n    while(!isdigit(ch)) {ch = getchar(); if(ch == '-') w = -1;}\n    while(isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n    return x * w;\n}\n\nstruct TShirt {\n    int_t c, p;\n    TShirt(int_t c = 0, int_t p = 0):c(c),p(p){}\n} tss[200020];\n\nint_t v[200020], ans[200020];\n\nstruct Node;\ntypedef Node* ptr_t;\n\nstruct Node {\n    int_t w, rnd, tag1, val, tag2, id;\n    ptr_t lson, rson;    \n\n    Node(int_t w, int_t id):w(w), val(0), id(id){\n        rnd = rand(); \n        lson = rson = 0;\n        tag1 = tag2 = 0;\n    }\n\n    void pushdown() {\n        if(tag1) {\n            lson ? lson -> tag1 += tag1, lson -> w -= tag1 : 0;\n            rson ? rson -> tag1 += tag1, rson -> w -= tag1 : 0;\n            tag1 = 0;\n        }\n        if(tag2) {\n            lson ? lson -> tag2 += tag2, lson -> val += tag2 : 0;\n            rson ? rson -> tag2 += tag2, rson -> val += tag2 : 0;\n            tag2 = 0;\n        }\n    }\n};\n\nvoid split(ptr_t rt, int_t w, ptr_t &l, ptr_t &r) {\n    if(rt == 0) return (void) (l = 0, r = 0);\n    rt -> pushdown();\n    if(rt -> w <= w) {\n        split(rt -> rson, w, l, r);\n        rt -> rson = l; l = rt;\n    } else {\n        split(rt -> lson, w, l, r);\n        rt -> lson = r; r = rt;\n    }\n}\n\nptr_t merge(ptr_t a, ptr_t b) {\n    if(!a || !b) return a ? a : b;\n    a -> pushdown(); b -> pushdown();\n    if(a -> rnd < b -> rnd) {\n        a -> rson = merge(a -> rson, b);\n        return a;\n    }\n    b -> lson = merge(a, b -> lson);\n    return b;\n}\n\nvoid insert(ptr_t& rt, ptr_t node) {\n    ptr_t a, b;\n    split(rt, node -> w, a, b);\n    rt = merge(merge(a, node), b);\n}\n\nptr_t root;\n\nvoid mid(ptr_t rt, ptr_t& insert, int_t c) {\n    if(!rt) return;\n    rt -> pushdown();\n    mid(rt -> lson, insert, c);\n    mid(rt -> rson, insert, c);\n    rt -> lson = rt -> rson = 0; \n    ::insert(insert, rt);\n}\n\nvoid mid2(ptr_t rt) {\n    if(!rt) return;\n    rt -> pushdown();\n    ans[rt -> id] = rt -> val;\n    mid2(rt -> lson); mid2(rt -> rson);\n}\n\nvoid addTag(ptr_t rt, int_t w, bool tag2) {\n    if(rt) {\n        if(tag2) rt -> tag2 += w, rt -> val += w;\n        else rt -> tag1 += w, rt -> w -= w;\n    }\n}\n\nint main() {\n    int_t n = read();\n    for(int_t i=1;i<=n;i++) tss[i].c = read(), tss[i].p = read();\n    sort(tss + 1, tss + n + 1, [](TShirt a, TShirt b) {return a.p == b.p ? a.c < b.c : a.p > b.p;});\n    int_t m = read();\n    for(int_t i=1;i<=m;i++) {\n        int_t v = read();\n        ptr_t node = new Node(v, i);\n        insert(root, node);\n    }\n    for(int_t i=1;i<=n;i++) {\n        int_t c = tss[i].c;\n        ptr_t a, b, d, e;\n        split(root, c - 1, a, b);\n        split(b, c * 2 - 1, d, e);\n        b = d; d = e; e = 0;\n        addTag(b, c, 0); addTag(b, 1, 1);\n        addTag(d, c, 0); addTag(d, 1, 1);\n        mid(b, a, c);\n        root = merge(a, d);\n    }\n    mid2(root);\n    for(int_t i=1;i<=m;i++) cout << ans[i] << ' ';\n}\n```\n\n\u4e0d\u8981\u5728\u610f\u6211\u51fd\u6570\u7684\u547d\u540d\u3002\u3002  \n\u597d\u4e45\u6ca1\u5199\u5e73\u8861\u6811\u4e86\u5199\u7684\u5fc3\u6001\u6709\u70b9\u70b8\uff0c\u51fd\u6570\u540d\u5c31\u778e\u53d6\u4e86\u51e0\u4e2a\u3002",
        "postTime": 1589595980,
        "uid": 74020,
        "name": "Rainy_chen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF702F \u3010T-Shirts\u3011"
    },
    {
        "content": "\u9996\u5148\u80af\u5b9a\u662f\u8981\u5bf9\u54c1\u8d28 $q_i$ \u8fdb\u884c\u6392\u5e8f\u3002\n\n\u6734\u7d20\u7684\u66b4\u529b\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4eba\uff0c\u7136\u540e\u4f9d\u6b21\u8003\u8651\u6bcf\u4ef6\u7269\u54c1\uff0c\u80fd\u4e70\u5219\u4e70\u3002\n\n\u4f46\u662f\u6ce8\u610f\u5230\u6bcf\u4e2a\u4eba\u7684\u94b1\u6570\u4f1a\u5b9e\u65f6\u53d8\u5316\uff0c\u800c\u53c8\u8981\u6bd4\u8f83\u5927\u5c0f\u5173\u7cfb\uff0c\u6240\u4ee5\u5f88\u96be\u7ef4\u62a4\u3002\n\n\u6362\u4e2a\u89d2\u5ea6\uff0c\u5148\u679a\u4e3e\u7269\u54c1 $i$\uff0c\u7136\u540e\u8003\u8651\u8fd9\u4e2a\u7269\u54c1\u5bf9\u6bcf\u4e2a\u4eba $j$ \u7684\u8d21\u732e\uff0c\u82e5 $v_j\\ge c_i$\uff0c\u90a3\u4e48\u5c31\u5c06 $v_j$ \u51cf\u53bb $c_i$\uff0c\u7136\u540e $j$ \u7684\u7b54\u6848\u52a0 $1$\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u5c31\u597d\u505a\u591a\u4e86\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5168\u5c40\u7684\u51cf\u3002\u5177\u4f53\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u62bd\u8c61\u6210\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\n\n> \u7ed9\u5b9a $m$ \u4e2a\u6570 $v_1,v_2,\\cdots,v_m$\uff0c$n$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u5c06 $\\ge c_i$ \u7684\u6570\u51cf\u53bb $c_i$\uff0c\u95ee\u6bcf\u4e2a\u6570\u4f60\u80fd\u88ab\u64cd\u4f5c\u51e0\u6b21\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u5e73\u8861\u6811\u7ef4\u62a4 $v$ \u6570\u7ec4\uff0c\u6bcf\u6b21\u5c06 $\\ge c_i$ \u7684\u90e8\u5206\u8fdb\u884c $\\text{split}$\uff0c\u7136\u540e\u6253\u6807\u8bb0\u5e76\u8fdb\u884c\u5408\u5e76\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u4f1a\u6709\u95ee\u9898\u3002\n\n\u8003\u8651 $[0,c_i)$ \u90e8\u5206\u7684\u503c\u4e0d\u4f1a\u53d8\uff0c$[c_i,2c_i)$ \u90e8\u5206\u7684\u503c\u4f1a\u53d8\u6210 $[0,c_i)$ \u90e8\u5206\u7684\u503c\u3002\u800c\u5982\u679c\u5c06\u8fd9\u4e24\u4e2a\u5e73\u8861\u6811\u8fdb\u884c\u5408\u5e76\uff0c\u5927\u5c0f\u5173\u7cfb\u4e0d\u786e\u5b9a\uff0c\u5408\u5e76\u51fa\u6765\u7684\u4e1c\u897f\u53ef\u80fd\u5c31\u4e0d\u662f\u5e73\u8861\u6811\u3002\u800c $[2c_i,\\infty)$ \u90e8\u5206\u7684\u503c\u4e0d\u9700\u8981\u8003\u8651\u503c\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u56e0\u4e3a\u5b83\u4eec\u51cf\u53bb $c_i$ \u4e4b\u540e\u662f\u5fc5\u5b9a\u4e0d\u5c0f\u4e8e $c_i$ \u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9 $[c_i,2c_i)$ \u8fd9\u4e2a\u90e8\u5206\u51cf\u53bb $c_i$ \u540e\u66b4\u529b\u63d2\u5165\u8fdb $[0,c_i)$ \u7684\u90e8\u5206\u3002\n\n\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\uff0c\u8fd9\u4e2a\u5f88\u6709\u610f\u601d\uff0c\u6211\u4eec\u8003\u8651\u6bcf\u4eba\u94b1\u6570 $v_j$ \u7684\u53d8\u5316\u3002\n\n\u5982\u679c $v_i$ \u9700\u8981\u88ab\u66b4\u529b\u63d2\u5165\uff0c\u8bf4\u660e $c_i\\le v_j<2c_i$\uff0c\u5f97\u51fa\uff0c$c_i>\\frac{v_j}{2}$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6b21 $v_j$ \u51cf\u53bb\u7684\u6570\u81f3\u5c11\u662f\u5b83\u7684\u4e00\u534a\uff0c\u6700\u591a\u4f1a\u88ab\u66b4\u529b\u63d2\u5165 $\\log$ \u6b21\uff0c\u7b97\u4e0a\u5e73\u8861\u6811\u4e00\u4e2a $\\log$\uff0c\u6700\u540e\u590d\u6742\u5ea6\u4fe9\u8001\u54e5\u3002",
        "postTime": 1675128421,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010CF702F T-Shirts\u3011"
    },
    {
        "content": "# Description\n\n\u6709 $n$ \u4e2a T \u6064\u3002\u6bcf\u4e2a T \u6064\u90fd\u6709\u4e00\u4e2a\u4ef7\u683c $c_i$ \u548c\u54c1\u8d28 $p_i$\u3002\n\n\u6709 $m$ \u4e2a\u4eba\u8981\u8d2d\u4e70 T \u6064\uff0c\u7b2c $i$ \u4e2a\u4eba\u6709 $v_i$ \u5143\u3002  \n\u6bcf\u4e2a\u4eba\u6bcf\u6b21\u8d2d\u4e70 T \u6064\u90fd\u4f1a\u5728\u53ef\u4ee5\u4e70\u5f97\u8d77\u7684 T \u6064\u4e2d\u9009\u4e00\u4ef6\u54c1\u8d28\u6700\u9ad8\u7684 T \u6064\uff0c\u82e5\u6709\u591a\u4e2a\u54c1\u8d28\u6700\u9ad8\u7684 T \u6064\uff0c\u5219\u9009\u62e9\u5176\u4e2d\u6700\u4fbf\u5b9c\u7684\u90a3\u4e00\u4ef6 T \u6064\u3002\n\n\u8bf7\u4f60\u6c42\u51fa\u8fd9 $m$ \u4e2a\u4eba\u5404\u4e70\u4e86\u591a\u5c11\u4ef6 T \u6064\uff0c\u6ce8\u610f\u6bcf\u6b21\u8be2\u95ee\u90fd\u662f\u72ec\u7acb\u7684\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1 \\leq n, m \\leq 2 \\times 10^5$\uff0c$1 \\leq c_i, p_i \\leq 10^9$\u3002  \n\u65f6\u7a7a\u9650\u5236\uff1a$4000 \\ \\mathrm{ms} / 1000 \\ \\mathrm{MiB}$\u3002\n\n# Solution\n\n\u9996\u5148\uff0c\u5c06\u6240\u6709\u7684 T \u6064\u6309\u7167\u54c1\u8d28\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u54c1\u8d28\u76f8\u540c\u7684\u60c5\u51b5\u6309\u4ef7\u683c\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u8003\u8651\u4f7f\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u4eba\u7684\u91d1\u94b1\u6570\uff0c\u672c\u9898\u89e3\u4f7f\u7528\u7684\u662f fhq treap\u3002\n\n\u4f9d\u6b21\u5904\u7406\u6bcf\u4e00\u4e2a T \u6064\uff0c\u8003\u8651\u8be5 T \u6064\u53ef\u4ee5\u8d21\u732e\u7ed9\u54ea\u4e9b\u4eba\u3002  \n\u8bbe\u5f53\u524d\u5904\u7406\u5230\u7684 T \u6064\u7684\u4ef7\u683c\u4e3a $c$\u3002  \n\u663e\u7136\uff0c\u91d1\u94b1\u6570\u5728\u533a\u95f4 $[0, c)$ \u5185\u7684\u4eba\u4e0d\u9700\u8981\u8d2d\u4e70\u8be5 T \u6064\uff0c\u91d1\u94b1\u6570\u5728\u533a\u95f4 $[c, +\\infty)$ \u5185\u7684\u4eba\u5fc5\u987b\u8d2d\u4e70\u8be5 T \u6064\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u5e94\u5230\u5e73\u8861\u6811\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5e73\u8861\u6811\u4e2d\u6743\u503c $\\geq c$ \u7684\u6240\u6709\u70b9\u7684\u6743\u503c\u51cf\u53bb $c$\uff0cT \u6064\u4ef6\u6570\u52a0\u4e0a $1$\u3002  \n\u4f7f\u7528 fhq treap \u6253\u6253\u6807\u8bb0\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u505a\u5230\u8fd9\u4e9b\u4e8b\u60c5\u3002\n\n\u5173\u952e\u5728\u4e8e\u5408\u5e76\u4e0a\uff0c\u6211\u4eec\u7684\u64cd\u4f5c\u662f\u8981\u5c06\u5e73\u8861\u6811 split \u6210 $[0, c), [c, 2c), [2c, +\\infty)$ \u4e09\u90e8\u5206\u3002   \n\u5176\u4e2d\u7b2c\u4e00\u90e8\u5206\u4e0d\u9700\u8981\u88ab\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u3001\u4e09\u90e8\u5206\u5fc5\u987b\u88ab\u64cd\u4f5c\u3002  \n\u5e76\u4e14\u6ce8\u610f\u5230\uff0c\u7b2c\u4e8c\u90e8\u5206\u88ab\u64cd\u4f5c\u540e\uff0c\u5176\u503c\u57df\u4ece $[c, 2c)$ \u88ab\u4fee\u6539\u4e3a\u4e86 $[0, c)$\uff0c\u4e0e\u7b2c\u4e00\u90e8\u5206\u53d1\u751f\u4e86\u91cd\u5408\u3002  \n\u800c\u6b63\u5e38\u7684 fhq treap \u662f\u4e0d\u652f\u6301\u4efb\u610f\u6743\u503c\u5408\u5e76\u7684\u3002\n\n\u8003\u8651\u7b2c\u4e8c\u90e8\u5206\u91cc\u4efb\u610f\u4e00\u4e2a\u70b9\u7684 \" \u64cd\u4f5c\u524d\u6743\u503c \" \u4e0e \" \u64cd\u4f5c\u540e\u6743\u503c \" \u7684\u6bd4\u503c\uff1a\n$$\n\\frac{x - c}{x} = 1 - \\frac{c}{x}\n$$\n\u6ce8\u610f\u5230\u8be5\u6bd4\u503c\u968f\u7740 $x$ \u7684\u589e\u5927\u800c\u589e\u5927\uff0c\u5f53 $x = 2c - 1$ \u65f6\u8be5\u6bd4\u503c\u53d6\u5230\u6700\u5927\uff0c\u4e0d\u96be\u5f97\u51fa\u8be5\u6bd4\u503c\u7684\u53d6\u503c\u8303\u56f4\uff1a\n$$\n0 \\leq \\frac{x - c}{x} < \\frac{1}{2} \\implies x - c < \\frac{x}{2}\n$$\n\u89c2\u5bdf\u4e0a\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff1a\u7b2c\u4e8c\u90e8\u5206\u7684\u70b9\u88ab\u64cd\u4f5c\u4e4b\u540e\uff0c\u6743\u503c\u81f3\u5c11\u7f29\u5c0f\u4e00\u534a\u3002  \n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u70b9\u88ab\u5206\u5230\u7b2c\u4e8c\u90e8\u5206\u7684\u6b21\u6570\u81f3\u591a\u662f $\\log_2 \\text{SIZE}$\uff0c\u5176\u4e2d $\\text{SIZE}$ \u8868\u793a\u503c\u57df\u7684\u5927\u5c0f\u3002\n\n\u90a3\u4e48\u5728\u5408\u5e76\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u7b2c\u4e8c\u90e8\u5206\u4e2d\u7684\u6240\u6709\u70b9\uff0c\u5c06\u5176\u76f4\u63a5\u63d2\u5165\u7b2c\u4e00\u90e8\u5206\uff0c\u6700\u540e\u518d\u5c06\u7b2c\u4e00\u90e8\u5206\u548c\u7b2c\u4e09\u90e8\u5206\u5408\u5e76\u5373\u53ef\u3002\n\n\u4f9d\u6b21\u8003\u8651\u5b8c\u4e86\u6bcf\u4e2a T \u6064\u4e4b\u540e\uff0c\u518d\u904d\u5386\u4e00\u904d\u6574\u68f5\u6811\uff0c\u5c06\u7b54\u6848\u5b58\u4e0b\u6765\u540e\u8f93\u51fa\u5373\u53ef\uff0c\u6ce8\u610f\u8981\u6807\u8bb0\u4e0b\u653e\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log n \\log \\text{SIZE})$\u3002\n\n# Code\n\n```c++\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\ninline int read() {\n\tint x = 0, f = 1; char s = getchar();\n\twhile (s < '0' || s > '9') { if (s == '-') f = -f; s = getchar(); }\n\twhile (s >= '0' && s <= '9') { x = x * 10 + s - '0'; s = getchar(); }\n\treturn x * f;\n}\n\nconst int N = 200100;\n\nint m, n;\n\nstruct article {\n\tint p, c;\n} seq[N];\n\nbool cmp(article a, article b) {\n\tif (a.p != b.p) return a.p > b.p;\n\telse return a.c < b.c;\n}\n\nint cT, root;\nstruct Treap {\n\tint lc, rc;\n\tint val, dat, id;\n\tint money;\n\tint tagV, tagM;\n} t[N];\n\nint New(int val, int id) {\n\tcT ++;\n\tt[cT].lc = t[cT].rc = 0;\n\tt[cT].val = val, t[cT].dat = rand(), t[cT].id = id;\n\tt[cT].money = 0;\n\tt[cT].tagV = t[cT].tagM = 0;\n\treturn cT;\n}\n\nvoid spread(int p) {\n\tint lc = t[p].lc, rc = t[p].rc;\n\tif (t[p].tagV) {\n\t\tif (lc) t[lc].val += t[p].tagV, t[lc].tagV += t[p].tagV;\n\t\tif (rc) t[rc].val += t[p].tagV, t[rc].tagV += t[p].tagV;\n\t\tt[p].tagV = 0;\n\t}\n\tif (t[p].tagM) {\n\t\tif (lc) t[lc].money += t[p].tagM, t[lc].tagM += t[p].tagM;\n\t\tif (rc) t[rc].money += t[p].tagM, t[rc].tagM += t[p].tagM;\n\t\tt[p].tagM = 0;\n\t}\n}\n\nvoid split_v(int p, int val, int &x, int &y) {\n\tif (!p)\n\t\tx = y = 0;\n\telse {\n\t\tspread(p);\n\t\tif (t[p].val <= val)\n\t\t\tx = p, split_v(t[p].rc, val, t[x].rc, y);\n\t\telse\n\t\t\ty = p, split_v(t[p].lc, val, x, t[y].lc); \n\t}\n}\n\nint merge(int p, int q) {\n\tif (!p || !q) return p ^ q;\n\tspread(p), spread(q);\n\tif (t[p].dat > t[q].dat) {\n\t\tt[p].rc = merge(t[p].rc, q);\n\t\treturn p;\n\t} else {\n\t\tt[q].lc = merge(p, t[q].lc);\n\t\treturn q;\n\t}\n}\n\nvoid insert(int &rt, int p) {\n\tint X, Z;\n\tsplit_v(rt, t[p].val, X, Z);\n\trt = merge(X, p), rt = merge(rt, Z); \n}\n\nvoid search(int p, int &rt) {\n\tif (!p) return;\n\tspread(p);\n\tsearch(t[p].lc, rt), search(t[p].rc, rt);\n\tt[p].lc = t[p].rc = 0;\n\tinsert(rt, p);\n}\n\nint ans[N];\n\nvoid solve(int p) {\n\tif (!p) return;\n\tspread(p);\n\tsolve(t[p].lc), solve(t[p].rc);\n\tans[t[p].id] = t[p].money; \n}\n\nint main() {\n\tm = read();\n\n\tfor (int i = 1; i <= m; i ++)\n\t\tseq[i].c = read(), seq[i].p = read();\n\n\tsort(seq + 1, seq + 1 + m, cmp);\n\n\tn = read();\n\n\tfor (int i = 1; i <= n; i ++) {\n\t\tint x = read();\n\t\tint p = New(x, i);\n\t\tinsert(root, p);\n\t}\n\n\tfor (int i = 1; i <= m; i ++) {\n\t\tint c = seq[i].c, p = seq[i].p;\n\n\t\tint X, Y, Z;\n\t\tsplit_v(root, c - 1, X, Y);\n\t\tsplit_v(Y, 2 * c - 1, Y, Z);\n\n\t\tif (Z) {\n\t\t\tt[Z].val -= c, t[Z].tagV -= c;\n\t\t\tt[Z].money ++, t[Z].tagM ++; \n\t\t}\n\n\t\tif (Y) {\n\t\t\tt[Y].val -= c, t[Y].tagV -= c;\n\t\t\tt[Y].money ++, t[Y].tagM ++;\n\t\t\tsearch(Y, X);\n\t\t}\n\n\t\troot = merge(X, Z);\n\t}\n\n\tsolve(root);\n\n\tfor (int i = 1; i <= n; i ++)\n\t\tprintf(\"%d \", ans[i]);\n\tputs(\"\");\n\n\treturn 0;\n}\n```",
        "postTime": 1613922484,
        "uid": 129578,
        "name": "Calculatelove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF702F\u3010T-Shirts\u3011"
    },
    {
        "content": "\u8003\u8651\u53d8\u6362\u4e00\u4e0b\u95ee\u9898\u7684\u89d2\u5ea6\uff1a\u7ed9\u5b9a $m$ \u4e2a\u6570\uff0c\u6709 $n$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5c06 $\\geq x_i$ \u7684\u6570\u5168\u90e8\u51cf\u53bb $x_i$\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e9b\u6570\u7ef4\u62a4\u7684\u53e6\u4e00\u4e2a\u7ef4\u7684\u503c $+1$ \u6700\u540e\u8f93\u51fa $m$ \u4e2a\u6570\u53e6\u4e00\u7ef4\u7684\u503c\u3002\n\n\u8003\u8651\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u7684\u6392\u5e8f\u8fc7\u7a0b\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u4e00\u4e2a\u7ecf\u5178\u7684\u5957\u8def\uff1a\u5bf9\u4e8e $x_i \\leq c < 2 \\times x_i$ \u7684\u6240\u6709 $c$ \u6211\u4eec\u7279\u6b8a\u5904\u7406\u5176\u4ed6\u503c\u57df\u6bb5\u6574\u4f53\u5904\u7406\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u9488\u5bf9\u6b64\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 $[2 \\times x_i , +\\infty)$ \u503c\u57df\u6bb5\u5185\u7684\u6570\u66b4\u529b\u51cf\u53bb $x_i$\uff0c\u5bf9\u4e8e $[x_i , 2 \\times x_i)$ \u7684\u503c\u57df\u6bb5\u62ff\u51fa\u6765\u91cd\u6784\u63d2\u5165\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6bcf\u4e2a\u6570\u6bcf\u6b21\u66b4\u529b\u91cd\u6784\u81f3\u591a $O(\\log c)$ \u6b21\uff0c\u7b97\u4e0a\u63d2\u5165\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n \\log n \\log c)$ \u7684\u3002\n\n\u5b9e\u73b0\u4f7f\u7528\u7684\u662f WBLT\u3002\n\n```cpp\n/*\n\u8003\u8651\u500d\u589e\u5206\u5757\u3002\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst double alpha = 0.25 , aalpha = 0.33;\nconst int Len = 2e5 + 5;\nstruct Node\n{\n\tint ch[2],sz,tag,mx,id,v;\n\tNode(){ch[0] = ch[1] = sz = tag = mx = id = v = 0;}\n\tNode(int CH0,int CH1,int SZ,int TAG,int MX,int ID,int V){ch[0] = CH0 , ch[1] = CH1 , sz = SZ , tag = TAG , mx = MX , id = ID , v = V;}\n}t[Len << 2];\n#define ls(p) t[p].ch[0]\n#define rs(p) t[p].ch[1]\nint pool[Len << 2],psz,n,m,tot,rt;\ninline void push_up(int p){t[p].sz = t[ls(p)].sz + t[rs(p)].sz;t[p].mx = max(t[ls(p)].mx , t[rs(p)].mx);}\ninline void cg(int p,int w){t[p].mx += w , t[p].tag += w;}\ninline void push_down(int p)\n{\n\tif(t[p].tag){cg(ls(p) , t[p].tag) , cg(rs(p) , t[p].tag);t[p].tag = 0;}\n\tif(t[p].v){t[ls(p)].v += t[p].v , t[rs(p)].v += t[p].v;t[p].v = 0;}\n}\ninline int Id(){return psz ? pool[psz --] : ++ tot;}\ninline void rec(int x){pool[++ psz] = x;}\ninline int clone(int w,int id,int v){int nm = Id();t[nm] = Node(0 , 0 , 1 , 0 , w , id , v);return nm;} \ninline int mg(int x,int y){int nm = Id();t[nm] = Node(x , y , t[x].sz + t[y].sz , 0 , max(t[x].mx , t[y].mx) , 0 , 0);return nm;}\nint merge(int u,int v)\n{\n\tif(!u || !v) return u + v;\n\tif(t[u].sz >= t[v].sz * aalpha && t[v].sz >= t[u].sz * aalpha) return mg(u , v);\n\tif(t[u].sz <= t[v].sz)\n\t{\n\t\tpush_down(v);\n\t\tint l = ls(v) , r = rs(v);rec(v);\n\t\tif(t[r].sz >= (t[u].sz + t[v].sz) * alpha) return merge(merge(u , l) , r);\n\t\tpush_down(l);\n\t\tint Ls = ls(l) , Rs = rs(l);rec(l);\n\t\treturn merge(merge(u , Ls) , merge(Rs , r));\n\t}\n\telse\n\t{\n\t\tpush_down(u);\n\t\tint l = ls(u) , r = rs(u);rec(u);\n\t\tif(t[l].sz >= (t[u].sz + t[v].sz) * alpha) return merge(l , merge(r , v));\n\t\tpush_down(r);\n\t\tint Ls = ls(r) , Rs = rs(r);rec(r);\n\t\treturn merge(merge(l , Ls) , merge(Rs , v)); \n\t}\n}\nvoid split(int now,int Sz,int &x,int &y)\n{\n\tif(!Sz){x = 0 , y = now;return;}\n\tif(Sz == t[now].sz){x = now , y = 0;return;}\n\tpush_down(now);\n\tint u = ls(now) , v = rs(now);\n\trec(now);\n\tif(t[u].sz == Sz){x = u , y = v;return;}\n\telse if(t[u].sz > Sz){split(u , Sz , x , y);y = merge(y , v);return;}\n\telse{split(v , Sz - t[u].sz , x , y);x = merge(u , x);return;} \n}\nint qrk(int p,int w)\n{\n\tif(!p) return 0;\n\tif(t[p].sz == 1) return w > t[p].mx;\n\tpush_down(p);\n\tif(w > t[ls(p)].mx) return t[ls(p)].sz + qrk(rs(p) , w);\n\treturn qrk(ls(p) , w);\n}\nint qnm(int p,int rk)\n{\n\tif(!p) return 0;\n\tif(t[p].sz == 1) return t[p].mx;\n\tpush_down(p);\n\tif(rk > t[ls(p)].sz) return qnm(rs(p) , rk - t[ls(p)].sz);\n\treturn qnm(ls(p) , rk);\n}\nstruct mode\n{\n\tint w,id,v;\n\tmode(){w = id = v = 0;}\n\tmode(int W,int ID,int V){w = W , id = ID , v = V;}\n};\nvector<mode> vs;\ninline void Ins(mode s)\n{\n\tint x = 0 , y = 0;\n\tint qp = qrk(rt , s.w);\n\tsplit(rt , qp , x , y);\n\trt = merge(merge(x , clone(s.w , s.id , s.v)) , y);\n}\nvoid del(int p,int w)\n{\n\tif(!p) return;\n\tif(t[p].sz == 1)\n\t{\n\t\tvs.push_back(mode(t[p].mx + w , t[p].id , t[p].v));\n\t\trec(p);\n\t\treturn;\n\t}\n\tpush_down(p);\n\tdel(ls(p) , w);\n\tdel(rs(p) , w);\n\trec(p);\n}\nvoid Work(int w)\n{\n\t//split:[c_i,2c_i - 1]\n\tint x = 0 , y = 0 , z = 0 , h = 0;\n\tconst int l = w , r = 2 * w - 1;\n\tint qp = qrk(rt , l);\n\tsplit(rt , qp , x , y);\n\tt[y].v ++;\n\tqp = qrk(y , r + 1);\n\tsplit(y , qp , z , h);\n\tvs.clear();\n\t//x,z:[c_i,2c_i - 1],h\n\tdel(z , -w);\n\tcg(h , -w);\n\trt = merge(x , h);\n\tfor(int i = 0 ; i < vs.size() ; i ++) Ins(vs[i]);\n}\nvoid output(int p)\n{\n\tif(!p) return;\n\tif(t[p].sz == 1) \n\t{\n\t\tprintf(\"%d %d %d\\n\",t[p].mx,t[p].id,t[p].v);\n\t\treturn;\n\t}\n\tpush_down(p);\n\toutput(ls(p));\n\toutput(rs(p));\n}\nint Print[Len];\nvoid Answer(int p)\n{\n\tif(!p) return;\n\tif(t[p].sz == 1)\n\t{\n\t\tPrint[t[p].id] = t[p].v;\n\t\treturn;\n\t}\n\tpush_down(p);\n\tAnswer(ls(p));\n\tAnswer(rs(p));\n}\nstruct Qs\n{\n\tint c,q;\n\tQs(){c = q = 0;}\n\tQs(int C,int Q){c = C , q = Q;}\n}mm[Len];\nbool cmp(Qs x,Qs y){return x.q > y.q || (x.q == y.q && x.c < y.c);}\ninline int read() {\n    char ch = getchar();\n    int x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\ninline void write(int x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nint main()\n{\n\t//freopen(\"WA.in\",\"r\",stdin);\n\t//freopen(\"WA.out\",\"w\",stdout);\n\tn = read();\n\tfor(int i = 1 ; i <= n ; i ++) mm[i].c = read() , mm[i].q = read();\n\tsort(mm + 1 , mm + 1 + n , cmp);\n\tm = read();\n\tfor(int i = 1 ; i <= m ; i ++) \n\t{\n\t\tint x;x = read();\n\t\tIns(mode(x , i , 0));\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) Work(mm[i].c);\n\tAnswer(rt);\n\tfor(int i = 1 ; i <= m ; i ++) printf(\"%d \",Print[i]);\n\treturn 0;\n}\n```",
        "postTime": 1662297726,
        "uid": 782894,
        "name": "Kuon",
        "ccfLevel": 0,
        "title": "\u4e4c\u4e91\u95f4\u6d12\u843d\u7f15\u7f15\u5149\u8292"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF1290E)\n\n[\u82f1\u6587\u9898\u9762](http://codeforces.com/problemset/problem/702/F)\n\n\u9898\u610f\uff1a\n\n![](https://img2020.cnblogs.com/blog/1564093/202007/1564093-20200715211126901-1439364998.png)\n\n\u9898\u89e3\uff1a\u8003\u8651\u679a\u4e3e\u6bcf\u4e2a\u7269\u54c1\uff0c\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u4eba\u3002\u5148\u5c06\u7269\u54c1\u6309$v_i$\u9012\u51cf\u6392\u5e8f\uff0c\u7528\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u4eba\u3002\u8bbe\u5f53\u524d\u679a\u4e3e\u5230\u4e86\u7269\u54c1$i$\uff0c\u90a3\u4e48\u6240\u6709\u5e73\u8861\u6811\u5185\u6743\u503c\u5927\u4e8e\u7b49\u4e8e$v_i$\u7684\u8282\u70b9\u7684\u6743\u503c\u90fd\u8981\u51cf\u53bb$v_i$\uff0c\u7136\u540e\u7b54\u6848$+1$\uff0c\u4f46\u8fd9\u6837\u4f1a\u7834\u574f\u5e73\u8861\u6811\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\u3002\n\n\u8003\u8651\u6743\u503c\u5728$[v_i+1,2v_i]$\u7684\u8282\u70b9\u4f1a\u7834\u574f\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u5c06\u8fd9\u4e9b\u70b9\u5220\u9664\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u66b4\u529b\u63d2\u56de\u5e73\u8861\u6811\u91cc\u3002\u7531\u4e8e\u8fd9\u4e9b\u70b9\u7684\u6743\u503c\u90fd\u81f3\u5c11\u51cf\u534a\uff0c\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u8fd9\u6837\u64cd\u4f5c$log_B$\u6b21\u3002\u6240\u4ee5\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\n\n\u5efa\u8bae\u4f7f\u7528fhq-treap\u3002\u6ce8\u610f\u6700\u540e\u6c42\u7b54\u6848\u65f6\u8981\u5c06\u6253\u7684\u6807\u8bb0\u5168\u90e8\u4e0b\u4f20\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogm+mlogmlogB)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register int\n#define F(x,y,z) for(re x=y;x<=z;x++)\n#define FOR(x,y,z) for(re x=y;x>=z;x--)\ntypedef long long ll;\n#define I inline void\n#define IN inline int\n#define C(x,y) memset(x,y,sizeof(x))\n#define STS system(\"pause\")\ntemplate<class D>I read(D &res){\n\tres=0;register D g=1;register char ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')g=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tres=(res<<3)+(res<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\tres*=g;\n}\nmt19937 _rnd(time(0));\nstruct P{\n\tint c,w;\n\tfriend bool operator < (P x,P y){\n\t\treturn x.w==y.w?x.c<y.c:x.w>y.w;\n\t}\n}p[202000];\nint n,m,a[202000],sa[202000],rk[202000],ans[202000];\nint root,ch[202000][2],siz[202000],rnd[202000],laz[202000],tag[202000];\ninline bool bbb(int x,int y){return a[x]<a[y];}\nI push_up(int x){\n\tsiz[x]=siz[ch[x][0]]+siz[ch[x][1]]+1;\n}\nI build(int &k,int l,int r){\n\tif(l>r)return;\n\tk=(l+r)>>1;siz[k]=1;rnd[k]=_rnd();\n\tbuild(ch[k][0],l,k-1);build(ch[k][1],k+1,r);\n\tpush_up(k);\n}\nI add(int k,int val,int num){\n\tlaz[k]+=val;a[k]-=val;ans[k]+=num;tag[k]+=num;\n}\nI push_down(int x){\n\tif(ch[x][0])add(ch[x][0],laz[x],tag[x]);\n\tif(ch[x][1])add(ch[x][1],laz[x],tag[x]);\n\tlaz[x]=tag[x]=0;\n}\nI split(int now,int k,int &x,int &y){\n\tif(!now)return x=y=0,void();\n\tif(laz[now])push_down(now);\n\tif(a[now]<=k){\n\t\tx=now;split(ch[x][1],k,ch[x][1],y);push_up(x);\n\t}\n\telse{\n\t\ty=now;split(ch[y][0],k,x,ch[y][0]);push_up(y);\n\t}\n}\nIN merge(int x,int y){\n\tif(!x||!y)return x+y;\n\tif(laz[x])push_down(x);if(laz[y])push_down(y);\n\tif(rnd[x]<rnd[y]){\n\t\tch[x][1]=merge(ch[x][1],y);push_up(x);return x;\n\t}\n\telse{\n\t\tch[y][0]=merge(x,ch[y][0]);push_up(y);return y;\n\t}\n}\nI damage(int x){\n\tif(laz[x])push_down(x);\n\tif(ch[x][0])damage(ch[x][0]);\n\tif(ch[x][1])damage(ch[x][1]);\n\tch[x][0]=ch[x][1]=0;siz[x]=1;rnd[x]=_rnd();\n\tre X,Y;split(root,a[x]-1,X,Y);\n\troot=merge(merge(X,x),Y);\n}\nI getans(int x){\n\tif(laz[x])push_down(x);\n\tif(ch[x][0])getans(ch[x][0]);\n\tif(ch[x][1])getans(ch[x][1]);\n}\nint main(){\n\tread(m);\n\tF(i,1,m)read(p[i].c),read(p[i].w);sort(p+1,p+1+m);\n\tread(n);F(i,1,n)read(a[i]),sa[i]=i;\n\tsort(sa+1,sa+1+n,bbb);F(i,1,n)rk[sa[i]]=i;\n\tsort(a+1,a+1+n);build(root,1,n);\n\tre X,Y,Z;\n\tF(i,1,m){\n\t\tsplit(root,p[i].c-1,X,Y);add(Y,p[i].c,1);split(Y,p[i].c,Y,Z);root=merge(X,Z);\n\t\tdamage(Y);\n\t}\n\tgetans(root);\n\tF(i,1,n)printf(\"%d \",ans[rk[i]]);\n\treturn 0;\n}\n/*\n3\n7 5\n3 5\n4 3\n2\n13 14\n2\n100 500\n50 499\n4\n50 200 150 100\n*/\n```",
        "postTime": 1594822758,
        "uid": 93453,
        "name": "Purple_wzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF702F \u3010T-Shirts\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5206\u6790\uff1a\n\n\u6211\u4eec\u5148\u5c06\u8863\u670d\u4ee5\u54c1\u8d28\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u964d\u5e8f\u6392\u5e8f\uff0c\u4ee5\u4ef7\u683c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u5347\u5e8f\u6392\u5e8f\u3002\u6211\u4eec\u76f4\u63a5\u6a21\u62df\u9898\u610f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230 $O(nm)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u5c06\u4eba\u62e5\u6709\u7684\u94b1\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6bcf\u4e00\u4e2a\u7269\u54c1\u5bf9\u6574\u4f53\u7684\u8d21\u732e\uff0c\u8bb0\u5f53\u524d\u8863\u670d\u7684\u4ef7\u683c\u4e3a $c_i$\uff0c\u5f53\u524d\u4eba\u4eec\u6709 $v_j$ \u7684\u94b1\u3002\u6211\u4eec\u627e\u51fa\u6240\u6709 $v_j\\ge c_i$ \u7684\u4eba\uff0c\u5c06\u5176\u94b1\u51cf\u53bb $c_i$\uff0c\u5e76\u5c06\u5176\u80fd\u591f\u8d2d\u4e70\u7684\u8863\u670d $+1$\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u79cd\u6743\u503c\u533a\u95f4\u4fee\u6539\uff0c\u67e5\u8be2\u96c6\u5408\u6743\u503c\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u3002\n\n\u4f46\u6211\u4eec\u8fd8\u80fd\u53d1\u73b0\uff0c\u82e5\u5f53\u524d\u4e00\u4e2a\u4eba\u62e5\u6709 $c_i+1$ \u7684\u94b1\uff0c\u53e6\u4e00\u4e2a\u4eba\u62e5\u6709 $c_i-1$ \u7684\u94b1\u3002\u524d\u8005\u4f1a\u4e70\uff0c\u540e\u8005\u4e0d\u4f1a\u4e70\uff0c\u4ed6\u4eec\u62e5\u6709\u94b1\u7684\u591a\u5c11\u76f8\u5bf9\u5927\u5c0f\u53d1\u751f\u4e86\u6539\u53d8\u3002\u4e5f\u5c31\u662f\u5e73\u8861\u6811\u5b83\u6240\u62e5\u6709\u7684\u6027\u8d28\u4f1a\u88ab\u7834\u574f\u6389\u3002\n\n\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u529e\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 $v_i\\in[1,c_i)$ \u7684\u4eba\u4e0d\u505a\u64cd\u4f5c\uff0c$v_i\\in[c_i,2c_i)$ \u7684\u4eba\u66b4\u529b\u4fee\u6539\uff0c$v_i\\in[2c_i,+\\infty)$ \u7684\u4eba\u6253\u6807\u8bb0\u4fee\u6539\u3002\u7531\u4e8e\u4e00\u4e2a\u6570\u88ab\u66b4\u529b\u4fee\u6539\u7684\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7 $\\log v$ \u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log n\\log v)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002",
        "postTime": 1682052755,
        "uid": 511271,
        "name": "\u30c0\u6708",
        "ccfLevel": 5,
        "title": "T-Shirts"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/xixike/p/15726473.html)\n\n## Description\n\n[Luogu\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF702F)\n\n## Solution\n\n\u5148\u5bf9\u7269\u54c1\u6309\u7167\u54c1\u8d28\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u76f8\u540c\u54c1\u8d28\u7684\u6309\u4ef7\u683c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7269\u54c1\uff0c\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u7269\u54c1\uff0c\u5176\u4ef7\u683c\u4e3a $c$\uff0c\u54c1\u8d28\u4e3a $q$\uff1a\n\n- \u62e5\u6709\u94b1\u6570\u5c0f\u4e8e $c$ \u7684\u4eba\u4e70\u4e0d\u8d77\uff0c\u4e0d\u7528\u7ba1\u3002\n- \u62e5\u6709\u94b1\u6570\u5927\u4e8e\u7b49\u4e8e $c$ \u7684\u4eba\u4e70\u5f97\u8d77\uff0c\u4e5f\u5fc5\u987b\u4e70\uff08\u7269\u54c1\u662f\u6309\u54c1\u8d28\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7684\uff09\uff0c\u6240\u4ee5\u8fd9\u4e9b\u4eba\u94b1\u6570\u51cf\u53bb $c$\uff0c\u7b54\u6848\uff08\u8d2d\u4e70\u7684\u8863\u670d\u6570\uff09\u52a0 1\u3002\n\n\u4e0a\u8ff0\u8fd9\u4e24\u79cd\u60c5\u51b5\u7528 $fhq-treap$ \u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u5feb\u901f\u89e3\u51b3\u3002\n\n\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5408\u5e76\uff0c\u56e0\u4e3a\u94b1\u6570\u51cf\u53bb $c$ \u4e4b\u540e\u548c\u94b1\u6570\u539f\u672c\u5c31\u5c0f\u4e8e $c$ \u7684\u6811\u7684\u5927\u5c0f\u5173\u7cfb\u5c31\u4e0d\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u5408\u5e76\u3002\n\n\u90a3\u8be5\u5982\u4f55\u5408\u5e76\u5462\uff1f\n\n\u5176\u5b9e\u6ca1\u6709\u7279\u522b\u590d\u6742\uff0c\u76f4\u63a5\u66b4\u529b\u91cd\u6784\u8fd9\u68f5\u6811\u5373\u53ef\u3002\n\n\u5177\u4f53\u5730\u8bf4\uff0c\u679a\u4e3e\u94b1\u6570\u539f\u672c\u5728 $c \\sim 2 \\times c - 1$ \u7684\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5728\u539f\u672c\u94b1\u6570\u4e3a $0 \\sim c - 1$ \u7684\u6811\u4e2d\u67e5\u627e\u4e00\u4e0b\uff0c\u7136\u540e\u66b4\u529b\u63d2\u8fdb\u53bb\u5373\u53ef\u3002\n\n> \u539f\u672c\u94b1\u6570 $\\geq 2 \\times c$ \u7684\u70b9\u51cf\u53bb $c$ \u4e4b\u540e\u7167\u6837\u6ee1\u8db3\u5927\u5c0f\u5173\u7cfb\uff0c\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u3002\n\n## Code\n\n\uff08\u6709\u6ce8\u91ca\uff09\n\n```cpp\n#include <bits/stdc++.h>\n#define ls(x) t[x].l\n#define rs(x) t[x].r\n\nusing namespace std;\n\nnamespace IO{\n    inline int read(){\n        int x = 0;\n        char ch = getchar();\n        while(!isdigit(ch)) ch = getchar();\n        while(isdigit(ch)) x = (x << 3) + (x << 1) + ch - '0', ch = getchar();\n        return x;\n    }\n\n    template <typename T> inline void write(T x){\n        if(x > 9) write(x / 10);\n        putchar(x % 10 + '0');\n    }\n}\nusing namespace IO;\n\nconst int N = 2e5 + 10;\n\nstruct fhq_treap{\n    int siz, val, sum, wei, l, r;\n    int lazy, sub;// lazy: \u7b54\u6848\u589e\u52a0\u6570   sub: \u94b1\u51cf\u5c11\u6570\n}t[N];\nint root, tot, a, b, c;\n\ninline void pushup(int x){\n    t[x].siz = t[ls(x)].siz + t[rs(x)].siz + 1;\n}\n\ninline void pushdown(int x){\n    if(t[x].lazy){\n        if(ls(x)) t[ls(x)].lazy += t[x].lazy, t[ls(x)].sum += t[x].lazy;\n        if(rs(x)) t[rs(x)].lazy += t[x].lazy, t[rs(x)].sum += t[x].lazy;\n        t[x].lazy = 0;\n    }\n    if(t[x].sub){\n        if(ls(x)) t[ls(x)].sub += t[x].sub, t[ls(x)].val -= t[x].sub;\n        if(rs(x)) t[rs(x)].sub += t[x].sub, t[rs(x)].val -= t[x].sub;\n        t[x].sub = 0;\n    }\n}\n\ninline void split_val(int x, int k, int &a, int &b){\n    if(!x) return a = b = 0, void();\n    pushdown(x);\n    if(k >= t[x].val) a = x, split_val(rs(x), k, rs(x), b);\n    else b = x, split_val(ls(x), k, a, ls(x));\n    pushup(x);\n}\n\ninline void split_siz(int x, int k, int &a, int &b){\n    if(!x) return a = b = 0, void();\n    pushdown(x);\n    if(k >= t[ls(x)].siz + 1) a = x, split_siz(rs(x), k - t[ls(x)].siz - 1, rs(x), b);\n    else b = x, split_siz(ls(x), k, a, ls(x));\n    pushup(x);\n}\n\ninline int merge(int x, int y){\n    if(!x || !y) return x | y;\n    pushdown(x), pushup(x);\n    pushdown(y), pushup(y);\n    if(t[x].wei < t[y].wei){\n        rs(x) = merge(rs(x), y);\n        return pushup(x), x;\n    }else{\n        ls(y) = merge(x, ls(y));\n        return pushup(y), y;\n    }\n}\n\ninline int newnode(int k){\n    t[++tot].val = k, t[tot].wei = rand(), t[tot].siz = 1;\n    t[tot].l = t[tot].r = t[tot].sum = t[tot].lazy = t[tot].sub = 0;\n    return tot;\n}\n\ninline void insert(int k){\n    int a, b;\n    split_val(root, k, a, b);\n    root = merge(merge(a, newnode(k)), b);\n}\n//-------------------------------------------\u4e0a\u9762\u90fd\u662f fhq-treap \u57fa\u672c\u64cd\u4f5c\u4e0d\u89e3\u91ca\u3002\n\n//\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u524d\u5168\u90fd pushdown \u4e00\u4e0b\u3002\ninline void update(int x){\n    if(!x) return;\n    pushdown(x);\n    update(ls(x)), update(rs(x));\n}\n\nint n, m;\nstruct node{\n    int c, q;\n    bool operator < (const node &b) const{\n        return q != b.q ? q > b.q : c < b.c;\n    }\n}p[N];\nint v[N];\nqueue <int> q;\n\n//\u66b4\u529b\u91cd\u6784\u6811\ninline void build(int &r1, int r2, int i){// r1 \u4e3a\u539f\u672c\u5728 0 ~ c-1 \u7684\u6811\u5730\u6839\uff0c r2 \u4e3a c ~ 2c-1 \u7684\u6839\n    int a, b;\n    while(!q.empty()) q.pop();\n    q.push(r2);\n    while(!q.empty()){//\u66b4\u529b\u679a\u4e3e r2\n        int x = q.front(); q.pop();\n        pushdown(x);\n        if(ls(x)) q.push(ls(x));\n        if(rs(x)) q.push(rs(x));\n        split_val(r1, t[x].val - p[i].c, a, b);//\u5728 r1 \u4e2d\u67e5\u627e\n        ls(x) = rs(x) = t[x].lazy = t[x].sub = 0;//\u8d4b\u4e0a\u521d\u503c\n        t[x].val -= p[i].c;\n        t[x].siz = 1, t[x].sum++;\n        r1 = merge(merge(a, x), b);//\u5408\u5e76\u8fdb\u53bb\n    }\n}\n\ninline void solve(int i){\n    int a, b, c;\n    split_val(root, p[i].c - 1, a, b);//\u628a 0 ~ c-1 \u5206\u88c2\u51fa\u6765\n    split_val(b, (p[i].c << 1) - 1, b, c);//\u628a c ~ 2c-1 \u5206\u88c2\u51fa\u6765\uff0c>= 2c \u7684\u51cf\u53bb c \u4e4b\u540e\u7167\u6837\u6ee1\u8db3\u5927\u5c0f\u5173\u7cfb\u76f4\u63a5\u5408\u5e76\u5373\u53ef\u3002\n    t[c].sub += p[i].c, t[c].val -= p[i].c;\n    t[c].sum++, t[c].lazy++;\n    build(a, b, i);//\u91cd\u5efa\u6811\n    root = merge(a, c);//\u628a >= 2c \u7684\u6811\u5408\u5e76\u4e0a\u53bb\n}\n\nint main(){\n    n = read();\n    for(int i = 1; i <= n; ++i) p[i].c = read(), p[i].q = read();\n    sort(p + 1, p + 1 + n);\n    m = read();\n    for(int i = 1; i <= m; ++i) insert(read());\n    for(int i = 1; i <= n; ++i) solve(i);\n    update(root);//\u7edf\u8ba1\u7b54\u6848\u524d pushdown\n    for(int i = 1; i <= m; ++i) write(t[i].sum), putchar(' ');\n    return puts(\"\"), 0;\n}\n```\n\n$$\n\\_EOF\\_\n$$",
        "postTime": 1640314565,
        "uid": 158846,
        "name": "xixike",
        "ccfLevel": 0,
        "title": "CF702F T-Shirts \u9898\u89e3"
    }
]