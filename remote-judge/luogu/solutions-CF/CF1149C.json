[
    {
        "content": "\u7801\u957f\u6587\u4e0d\u6613\uff0c\u70b9\u4e2a\u8d5e\u5427\u3002QwQ  \nUPD\uff1a\u4fee\u590d\u90e8\u5206\u9519\u8bef\n\n## \u9898\u76ee\u6982\u8ff0\n\n\u4e2d\u6587\u7ffb\u8bd1\u5f88\u6e05\u695a\u4e86\u3002\u4e0d\u8fc7\u6709\u4e00\u70b9\u662f\u6ca1\u6709\u8bb2\u6e05\u695a\u7684\uff1a\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u6811\u6784\u5efa\u62ec\u53f7\u5e8f\u5217\u3002\n\nDfs\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u6761\u8fb9\uff0c\u5f80\u4e0b\u8d70\u5c31\u52a0\u5165\u201c(\u201d\uff0c\u5f80\u4e0a\u8d70\u5c31\u52a0\u5165\u201c)\u201d\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n~~\u2122\u597d\u8bc4~~\n\n\u9996\u5148\u6211\u4eec\u6765\u8bc1\u660e\u4e00\u4e2a\u5f15\u7406\u3002\n\n> **\u5f15\u74061.1 \u82e5\u4ece\u5e8f\u5217\u4e2d\u4efb\u53d6\u4e00\u6bb5\u8fde\u7eed\u5b50\u5e8f\u5217\uff0c\u4ece\u4e2d\u53bb\u6389\u6240\u6709\u5339\u914d\u62ec\u53f7\u540e\uff0c\u5269\u4e0b\u7684\u62ec\u53f7\u7ec4\u6210\u7684\u8def\u5f84\u4e00\u5b9a\u4e3a\u4e00\u6761\u94fe\uff0c\u94fe\u957f\u4e3a\u5269\u4e0b\u7684\u5b50\u5e8f\u5217\u957f\u3002**\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002  \n\u5bf9\u4e8e\u62ec\u53f7\u5e8f\u5217\uff08\uff08\uff09\uff08\uff08\uff09\uff09\uff09\uff0c\u5176\u6784\u6210\u7684\u6811\u5982\u4e0b\uff1a  \n\u5176\u4e2d\uff0c\u82e5\u6211\u4eec\u53d6\uff1a\u540e\u516d\u4e2a\u62ec\u53f7\uff08\u4e2d\u6587\u62ec\u53f7\u6ca1\u6cd5\u6807\u7ea2\u597d\u70e6\u554a\uff09  \n\u5176\u5bf9\u5e94\u7684\u5373\u4e3a\u4ece\u8282\u70b93\u5230\u8282\u70b91\u7684\u94fe\u3002  \n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c2-4-5-4-2\u7684\u94fe\u5728\u62ec\u53f7\u5e8f\u5217\u4e0a\u56e0\u4e3a\u5339\u914d\u800c\u88ab\u6d88\u6389\u4e86\u3002  \n\u56e0\u6b64\uff0c\u62ec\u53f7\u5339\u914d\u5373\u8868\u793a\u8fd9\u6761\u94fe\u4e0b\u53bb\u8fc7\uff0c\u4f46\u53c8\u4e0a\u6765\u4e86\uff0c\u56e0\u6b64\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u3002  \n\u8fd9\u662f\u4e00\u4e2a\u4f3c\u66fe\u76f8\u8bc6\u7684\u601d\u60f3\uff0c\u53ef\u662f\u6211\u8bb0\u4e0d\u8d77\u662f\u4ec0\u4e48\u4e86\\\u7b11  \n\n\u8fd9\u6837\uff0c\u7b2c\u4e8c\u4e2a\u5f15\u7406\u5c31\u51fa\u73b0\u4e86\u3002\n\n> **\u5f15\u74061.2 \u6811\u4e0a\u76f4\u5f84\u957f\u5ea6\u5373\u4e3a\u4efb\u610f\u533a\u95f4\u53bb\u6389\u5339\u914d\u62ec\u53f7\u540e\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002**\n\n\u8003\u8651\u76f4\u5f84\u7684\u6784\u6210\u60c5\u51b5\u3002\u5b83\u53ea\u4f1a\u6709\u4e24\u79cd\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lahn3jex.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/x9xzliy2.png)\n\n\u56fe\u6709\u70b9\u9f8a\uff0c\u5c06\u5c31\u770b\u5427\u3002\n\n\u7b2c\u4e8c\u79cd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u7b2c\u4e00\u79cd\u3002\u6ce8\u610f\u5230\u5b83\u4e5f\u662f\u53ef\u4ee5\u88ab\u62ec\u53f7\u5e8f\u5217\u8868\u793a\u51fa\u6765\u7684\u3002\u6bd4\u5982\uff08\uff09\uff08\uff08\uff09\uff08\uff09\uff09\u9009\u7b2c5\u30016\u4e2a\u62ec\u53f7\u3002\u5176\u5b9e\u8fd9\u70b9\u5728\u521a\u521a\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u4f53\u73b0\u51fa\u6765\u4e86\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u7ed9\u51fa\u7b2c\u4e09\u4e2a\u5f15\u7406\u3002\n\n\u82e5\u6211\u4eec\u7ed9\u201d(\u201d\u8d4b\u503c +1\uff0c\u7ed9\u201d)\u201d\u8d4b\u503c -1\uff0c\u5219\uff1a\n\n> **\u5f15\u74061.3 \u6700\u957f\u53bb\u5339\u914d\u533a\u95f4 = \u6700\u5927\u7684\uff08\u5c06\u533a\u95f4\u5206\u6210\u4e24\u6bb5\uff09\u540e\u9762\u7684\u6743\u503c\u548c - \u524d\u9762\u7684\u6743\u503c\u548c**\n\n\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u60f3\u4f60\u53ef\u80fd\u4f1a\u6709\u4ee5\u4e0b\u7591\u95ee\uff1a\n\nQ\uff1a\u5982\u679c\u6211\u628a\u4e00\u4e2a\u62ec\u53f7\u5728\u5206\u914d\u65f6\u5206\u6210\u4e24\u534a\u4e86\u600e\u4e48\u529e\u554a\uff1f  \nA\uff1a\u4f9d\u8d56\u4e8e\u8d1f\u6570\u6743\u503c\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\u3002\u56e0\u4e3a\u6b64\u65f6\u7684\u503c\u4e3a -1-(+1)=-2\uff0c\u5bf9\u6bd4\u4e4b\u524d\u7684 -1+1=0\uff0c\u4f60\u53ea\u4f1a\u9009\u62e9\u4e4b\u524d\u7684\u529e\u6cd5\uff0c\u6839\u672c\u4e0d\u4f1a\u8003\u8651\u8fd9\u79cd\u6beb\u65e0\u7528\u5904\u7684\u529e\u6cd5\u3002\n\nQ\uff1a\u5bf9\u4e8e\uff09\uff08\uff09\uff08\uff09\uff09\u8fd9\u79cd\u5e8f\u5217\u5c82\u4e0d\u662f\u65e0\u6cd5\u5212\u5206\uff1f  \nA\uff1a\u53ef\u4ee5\u7684\uff0c\u53ea\u9700\u8981\u5168\u90e8\u5212\u5206\u5230\u524d\u534a\u90e8\u5206\u5373\u53ef\u3002\n\nQ\uff1a\uff08\u7565\u52a0\u601d\u8003\u540e\uff09\u90a3\u4f60\u8bc1\u660e\u4e00\u4e0b\u5427\u3002  \nA\uff1a\u56e0\u4e3a\u5339\u914d\u7684\u62ec\u53f7\u5728\u7075\u9b42\u62f7\u95ee\u4e09\u8fde\u7b2c\u4e00\u95ee\u4e2d\u5df2\u7ecf\u8bc1\u660e\u4e86\u662f\u65e0\u7528\u7684\uff08\u5373\u8d21\u732e\u4e3a0\uff09\uff0c\u6240\u4ee5\u6574\u4e2a\u5e8f\u5217\u53ef\u4ee5\u88ab\u7b80\u5316\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a\n\n1> \u2026\u2026\uff08\uff08\uff08\uff08\uff08\uff08\u2026\u2026  \n2> \u2026\u2026\uff09\uff09\uff09\uff09\uff09\uff09\u2026\u2026  \n3> \u2026\u2026\uff09\uff09\uff09\uff08\uff08\uff08\u2026\u2026  \n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u548c\u7b2c\u4e8c\u79cd\u6211\u4eec\u53ea\u9700\u5c06\u4e2d\u95f4\u4f4d\u7f6e\u79fb\u5230\u5de6\u8fb9\u548c\u53f3\u8fb9\u5373\u53ef\u3002\u800c\u5bf9\u4e8e\u7b2c\u4e09\u79cd\uff0c\u653e\u5230\u4e2d\u95f4\uff0c\u6240\u4ee5\u540e\u51cf\u524d\u7684\u597d\u5904\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\u2014\u2014\u4e24\u8fb9\u76f8\u51cf\u6070\u4e3a\u7b54\u6848\u3002\n\n\u90a3\u4e48\uff0c\u601d\u8003\uff1a\u5982\u4f55\u7ef4\u62a4\u76f8\u90bb\u533a\u95f4\u5dee\u6700\u5927\u503c\u5462\uff1f\n\n\u7528\u7ebf\u6bb5\u6811\uff08\u5e9f\u8bdd\uff09\u3002\n\n\u4e0d\u59a8\u8bbe\u8fd9\u4e2a\u6700\u957f\u53bb\u5339\u914d\u533a\u95f4\u4e3a\u0394\u3002\n\n\u6211\u4eec\u9009\u62e9\u7ef4\u62a4\u4e5d\u4e2a\u53d8\u91cf\uff1a\u533a\u95f4\u548c\uff0c\u5de6/\u53f3\u8fde\u7eed\u9009\u503c\u6700\u5927/\u5c0f\u503c\uff0c\u4ece\u5de6/\u53f3\u8fde\u7eed\u9009\u503c\u0394\u6700\u5927\u503c\uff0c\u9009\u62e9\u6574\u4e2a\u533a\u95f4\u0394\u6700\u5927\u503c\uff0c\u65e0\u9650\u5236\u8fde\u7eed\u9009\u503c\u0394\u6700\u5927\u503c\uff08\u6700\u7ec8\u7b54\u6848\uff09\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5411\u4e0a\u66f4\u65b0\u3002\n\n\u533a\u95f4\u548c\uff1a\u76f4\u63a5\u52a0\u3002  \n\u5de6/\u53f3\u8fde\u7eed\u9009\u503c\u6700\u5927\u503c\uff0c\u65e0\u9650\u5236\u8fde\u7eed\u9009\u503c\u6700\u5927\u503c\uff1aCan you answer these queries III  \n\u4ece\u5de6/\u53f3\u8fde\u7eed\u9009\u503c\u0394\u6700\u5927\u503c\uff1a\u4ee5\u5de6\u4e3a\u4f8b\uff0c\u5148\u7ed9\u8f6c\u79fb\u5f0f\uff1a\n\n$$lv[k]=max(max(lv[k<<1],lv[k<<1|1]-s[k<<1]),mv[k<<1]+lmx[k<<1|1])$$\n\n\u8fd9\u4e2a\u771f\u7684\u753b\u4e2a\u56fe\u770b\u4e00\u4e0b\u5c31\u660e\u767d\u4e86\u3002\u7528\u5230\u7684\u601d\u60f3\u5c31\u662f\uff0c\u679a\u4e3e\u4e2d\u95f4\u70b9\u5206\u522b\u5728\u5de6\u533a\u95f4\u548c\u53f3\u533a\u95f4\u7684\u60c5\u51b5\uff0c\u53d6max\u3002\n\n\u9009\u62e9\u6574\u4e2a\u533a\u95f4\u0394\u6700\u5927\u503c\uff1a\u540c\u4e0a\u4e00\u4e2a\u7684\u601d\u60f3\uff1a\n\n$$mv[k]=max(mv[k<<1]+s[k<<1|1],mv[k<<1|1]-s[k<<1])$$\n\n\u65e0\u9650\u5236\u8fde\u7eed\u9009\u503c\u0394\u6700\u5927\u503c\uff1a\u540c\u4e0a\u4e00\u4e2a\u7684\u601d\u60f3\uff1a\n\n$$mm[k]=max(max(max(mm[k<<1],mm[k<<1|1]),lv[k<<1|1]-rmn[k<<1]),rv[k<<1]+lmx[k<<1|1])$$\n\n\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u6390\u5934\u53bb\u5c3e\u540e40\u884c\u90fd\u6ca1\u6709\u3002\n\n```cpp\nvoid Pushup(int k)\n{\n\ts[k]=s[k<<1]+s[k<<1|1];\n\tlmx[k]=max(lmx[k<<1],s[k<<1]+lmx[k<<1|1]);\n\trmx[k]=max(rmx[k<<1|1],s[k<<1|1]+rmx[k<<1]);\n\tlmn[k]=min(lmn[k<<1],s[k<<1]+lmn[k<<1|1]);\n\trmn[k]=min(rmn[k<<1|1],s[k<<1|1]+rmn[k<<1]);\n\tlv[k]=max(max(lv[k<<1],lv[k<<1|1]-s[k<<1]),mv[k<<1]+lmx[k<<1|1]);\n\trv[k]=max(max(rv[k<<1|1],s[k<<1|1]+rv[k<<1]),mv[k<<1|1]-rmn[k<<1]);\n\tmv[k]=max(mv[k<<1]+s[k<<1|1],mv[k<<1|1]-s[k<<1]);\n\tmm[k]=max(max(max(mm[k<<1],mm[k<<1|1]),lv[k<<1|1]-rmn[k<<1]),rv[k<<1]+lmx[k<<1|1]);\n}\nchar S[maxn];\nvoid Build(int k,int l,int r)\n{\n\tif(l==r) return s[k]=(S[l]=='('?1:-1),lmx[k]=rmx[k]=max(s[k],0),lmn[k]=rmn[k]=min(s[k],0),lv[k]=rv[k]=mv[k]=mm[k]=1,void(0);\n\tint mid=l+r>>1;\n\tBuild(k<<1,l,mid),Build(k<<1|1,mid+1,r);\n\tPushup(k);\n}\nvoid Update(int k,int l,int r,int p,char d)\n{\n\tif(l==r) return s[k]=(d=='('?1:-1),lmx[k]=rmx[k]=max(s[k],0),lmn[k]=rmn[k]=min(s[k],0),lv[k]=rv[k]=mv[k]=mm[k]=1,void(0);\n\tint mid=l+r>>1;\n\tif(p>mid) Update(k<<1|1,mid+1,r,p,d);\n\telse Update(k<<1,l,mid,p,d);\n\tPushup(k);\n}\nchar SWAP(char&x,char&y) {char z=y;y=x,x=z;}\nsigned main()\n{\n\tint x,y;\n\tn=read()-1<<1,m=read(),rein(S+1);\n\tBuild(1,1,n),printf(\"%d\\n\",mm[1]);\n\twhile(m--) x=read(),y=read(),S[x]^S[y]?(SWAP(S[x],S[y]),Update(1,1,n,x,S[x]),Update(1,1,n,y,S[y])):void(0),printf(\"%d\\n\",mm[1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1597306849,
        "uid": 106182,
        "name": "KaisuoShutong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1149C \u3010Tree Generator\u2122\u3011"
    },
    {
        "content": "UPD on 2021.3.24\uff1a\u4fee\u4e86\u4e00\u4e2a typo\n\n\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/1149/problem/C) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1149C)\n\n\u9996\u5148\u8003\u8651\u8fd9\u4e2a\u6240\u8c13\u7684\u201c\u62ec\u53f7\u6811\u201d\u4e0e\u76f4\u5f84\u7684\u672c\u8d28\u662f\u4ec0\u4e48\u3002\u8003\u8651\u62ec\u53f7\u6811\u4e0a\u4e24\u70b9 $x,y$\uff0c\u6211\u4eec\u4e0d\u59a8\u7528\u4e00\u4e2a\u201cDFS\u201d\u7684\u8fc7\u7a0b\u6765\u7406\u89e3\uff0c\u5728 DFS \u8fc7\u7a0b\u4e2d\u5047\u8bbe\u6211\u4eec\u5728\u7b2c $l$ \u4e2a\u5b57\u7b26\u540e\u8bbf\u95ee $x$\uff0c\u663e\u7136\u63a5\u4e0b\u6765\u4f1a\u8bbf\u95ee $x$ \u7684\u5b50\u6811\u5e76\u56de\u5230 $x$\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u5e94\u7684\u62ec\u53f7\u5e8f\u5217\u662f\u4e00\u4e2a\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684**\u5de6\u53f3\u62ec\u53f7\u76f8\u62b5\u6d88\u4e86**\uff0c\u7d27\u63a5\u7740\u6211\u4eec\u4f1a\u5411\u4e0a\u56de\u6eaf\u5230 $\\text{LCA}(x,y)$\uff0c\u5bf9\u4e8e\u5728\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u7684\u70b9 $z$\uff0c\u6211\u4eec\u53ef\u80fd\u8fd8\u4f1a\u8bbf\u95ee\u5b83\u7684\u5176\u5b83\u5b50\u6811\uff0c\u4e0d\u8fc7\u7531\u4e8e\u6700\u7ec8\u56de\u5230\u4e86 $z$\uff0c\u6240\u7ecf\u8fc7\u7684\u62ec\u53f7\u4e32\u4e00\u5b9a\u662f\u4e00\u4e2a\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\uff0c\u6700\u7ec8\u4e0d\u80fd\u76f8\u62b5\u6d88\u7684\u90e8\u5206\u4e00\u5b9a\u662f $dep_x-dep_{\\text{LCA}(x,y)}$ \u4e2a\u53f3\u62ec\u53f7\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ece $x$ \u5230 $\\text{LCA}(x,y)$\uff0c\u5176\u7ecf\u8fc7\u7684\u8def\u5f84\u8fdb\u884c\u5de6\u53f3\u62ec\u53f7\u62b5\u6d88\u540e\u4e00\u5b9a\u662f**\u82e5\u5e72\u4e2a\u53f3\u62ec\u53f7**\u62fc\u8d77\u6765\u7684\u5b57\u7b26\u4e32\u3002\u540c\u7406\uff0c\u4ece $\\text{LCA}(x,y)\\to y$ \u4e00\u5b9a\u662f**\u82e5\u5e72\u4e2a\u5de6\u62ec\u53f7**\u62fc\u8d77\u6765\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u5c31\u662f\u8bf4 $x,y$ \u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u5c31\u662f $[l,r]$ \u8fdb\u884c\u5de6\u62ec\u53f7\u76f8\u62b5\u6d88\u540e\u5269\u4f59\u90e8\u5206\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u8bb0\u8be5\u503c\u4e3a $f(l,r)$\u3002\u800c\u663e\u7136 $\\forall 1\\leq l\\leq r\\leq 2(n-1)$\uff0c\u533a\u95f4 $[l,r]$ \u90fd\u5bf9\u5e94\u4e00\u5bf9 $(x,y)$\u3002\u6545\u7b54\u6848\u5373\u4e3a $\\max\\limits_{1\\leq l\\leq r\\leq 2(n-1)}f(l,r)$\u3002\n\n~~\u7136\u540e\u6211\u5c31\u5728\u90a3\u513f\u4e00\u76f4\u60f3\u600e\u6837\u76f4\u63a5\u7ef4\u62a4 $f(l,r)$\uff0c\u5fc3\u6001\u7206\u70b8\u2026\u2026\u4f3c\u4e4e ycx \u4e5f\u5361\u5728\u4e86\u8fd9\u4e2a\u5730\u65b9\uff1f~~\n\n\u6839\u636e $f(l,r)$ \u7684\u5b9a\u4e49\u4e0d\u96be\u53d1\u73b0\u8fd9\u73a9\u610f\u513f\u76f4\u63a5\u7ef4\u62a4\u662f\u4e0d\u592a\u5bb9\u6613\u7684\uff0c\u56e0\u4e3a\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u65f6\u8fd8\u9700\u8003\u8651\u5de6\u53f3\u62ec\u53f7\u76f8\u6d88\u7684\u95ee\u9898\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u5c06\u5176\u53d8\u6210\u7c7b\u4f3c\u4e8e\u6c42\u548c\u3001\u53d6 $\\max$ \u7684\u4e1c\u897f\u662f\u4e0d\u662f\u5c31\u6bd4\u8f83\u597d\u7ef4\u62a4\u4e86\u5462\uff1f\n\n\u6211\u4eec\u5047\u8bbe $[l,r]$ \u6d88\u5b8c\u4e4b\u540e\u5269\u4f59 $x$ \u4e2a\u53f3\u62ec\u53f7\uff0c$y$ \u4e2a\u5de6\u62ec\u53f7\u3002\u8003\u8651\u5957\u8def\u5730\u5c06 `(` \u770b\u4f5c $1$\uff0c`)` \u770b\u4f5c $-1$\u3002\u5bf9 $[l,r]$ \u8fdb\u884c\u4e00\u904d\u524d\u7f00\u548c\u5f97\u5230\u6570\u7ec4 $s_i$\uff08\u6216\u8005\u8bf4 $s_i$ \u8868\u793a\u533a\u95f4 $[l,i]$ \u4e2d\u5de6\u62ec\u53f7\u4e2a\u6570 $-$ \u53f3\u62ec\u53f7\u4e2a\u6570\uff09\uff0c\u90a3\u4e48\u663e\u7136 $\\min_{i=l}^rs_i=-x$\u3002\n\n\u770b\u5230\u8fd9\u4e2a $\\min$ \u80fd\u60f3\u5230\u4ec0\u4e48\u5462\uff1f\n\n\u8003\u8651\u8bbe $s_k=-x$\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u533a\u95f4 $[l,r]$ \u4ece $k$ \u5904\u5288\u5f00\uff0c\u5288\u6210\u4e24\u4e2a\u5b50\u533a\u95f4 $[l,k],[k+1,r]$\uff0c\u663e\u7136 $[l,k]$ \u4e2d\u5de6\u53f3\u76f8\u6d88\u540e\u4e00\u5b9a\u662f $x$ \u4e2a\u53f3\u62ec\u53f7\uff0c$[k+1,r]$ \u4e2d\u5de6\u53f3\u76f8\u6d88\u540e\u4e00\u5b9a\u662f $y$ \u4e2a\u5de6\u62ec\u53f7\u3002\u5982\u679c\u6211\u4eec\u8bb0 $sum(l,r)$ \u4e3a $[l,r]$ \u4e2d\u6240\u6709\u6570\u5b57\u548c\u3002\u90a3\u4e48\u6709 $sum(l,k)=-x,sum(k+1,r)=y$\uff0c\u6545 $sum(k+1,r)-sum(l,k)=x+y$\u3002\u800c\u5bf9\u4e8e\u67d0\u4e2a $k'\\in[l,r),k'\\neq k$\uff0c\u7531 $\\min_{i=l}^rs_i=-x$ \u77e5 $s_k\\le s'_k$ \u77e5 $sum(k+1,r)-sum(l,k')=sum(l,r)-2sum(l,k)=sum(l,r)-2s_{k'}\\le sum(l,r)-2s_k=x+y$\uff0c\u6545 $f(l,r)=x+y=\\max\\limits_{k=l}^{r-1}\\{sum(k+1,r)-sum(l,k)\\}$\n\n\u4e8e\u662f\u6700\u7ec8\u7b54\u6848\u5373\u4e3a $\\max\\limits_{1\\leq l\\leq r\\leq 2(n-1)}\\max\\limits_{k=l}^{r-1}\\{sum(k+1,r)-sum(l,k)\\}$\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u7bc7\u9898\u89e3\u4e2d\u6240\u8bf4\u7684\u201c\u9009\u62e9\u76f8\u90bb\u4e24\u6bb5\u5e76\u505a\u5dee\u7684\u6700\u5927\u503c\u201d\u3002\n\n\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\uff0c\u6bcf\u4e2a\u8282\u70b9 $[l,r]$ \u7ef4\u62a4\u4ee5\u4e0b\u516b\u4e2a\u503c\uff1a\n\n- $sum$ \u8868\u793a $sum(l,r)$\n- $lmx$ \u8868\u793a $\\max sum(l,k)$\n- $rmx$ \u8868\u793a $\\max sum(k,r)$\n- $lmn$ \u8868\u793a $\\min sum(l,k)$\n- $rmn$ \u8868\u793a $\\min sum(k,r)$\n- $mx1$ \u8868\u793a $\\max sum(x,y)-sum(l,x),l\\leq x\\le y\\le r$\n- $mx2$ \u8868\u793a $\\max sum(y,x)-sum(x,y),l\\leq x\\leq y\\le r$\n- $mx$ \u8868\u793a $\\max sum(y,z)-sum(x,y),l\\leq x\\leq y\\leq z\\leq r$\n\n\u4ee5\u4e0a\u516b\u4e2a\u6807\u8bb0\u90fd\u53ef $\\mathcal O(1)$ `pushup`\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u81f3\u4e8e\u4fee\u6539\u2026\u2026\u8fd9\u4e2a\u5c31\u76f8\u5f53\u5bb9\u6613\u4e86\u7f62\uff0c\u76f4\u63a5\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u5bf9\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef unsigned int u32;\ntypedef unsigned long long u64;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nconst int MAXN=2e5;\nint n,qu;char str[MAXN+5];\nstruct node{int l,r,sum,lmx,rmx,lmn,rmn,mx1,mx2,mx;} s[MAXN*4+5];\nvoid pushup(int k){\n\ts[k].sum=s[k<<1].sum+s[k<<1|1].sum;\n\ts[k].lmx=max(s[k<<1].lmx,s[k<<1].sum+s[k<<1|1].lmx);\n\ts[k].lmn=min(s[k<<1].lmn,s[k<<1].sum+s[k<<1|1].lmn);\n\ts[k].rmx=max(s[k<<1|1].rmx,s[k<<1|1].sum+s[k<<1].rmx);\n\ts[k].rmn=min(s[k<<1|1].rmn,s[k<<1|1].sum+s[k<<1].rmn);\n\ts[k].mx1=max(s[k<<1].mx1,max(-s[k<<1].sum+s[k<<1|1].mx1,s[k<<1|1].lmx+s[k<<1].rmx*2-s[k<<1].sum));\n\ts[k].mx2=max(s[k<<1|1].mx2,max(s[k<<1|1].sum+s[k<<1].mx2,-s[k<<1].rmn+s[k<<1|1].sum-2*s[k<<1|1].lmn));\n\ts[k].mx=max(max(s[k<<1].mx,s[k<<1|1].mx),max(s[k<<1].mx2+s[k<<1|1].lmx,-s[k<<1].rmn+s[k<<1|1].mx1));\n}\nvoid build(int k=1,int l=1,int r=n){\n\ts[k].l=l;s[k].r=r;\n\tif(l==r){\n\t\tif(str[l]=='(') s[k].sum=1,s[k].lmx=1,s[k].rmx=1,s[k].lmn=0,s[k].rmn=0;\n\t\telse s[k].sum=-1,s[k].lmx=0,s[k].rmx=0,s[k].lmn=-1,s[k].rmn=-1;\n\t\ts[k].mx1=1;s[k].mx2=1;s[k].mx=1;return;\n\t} int mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);\n\tpushup(k);\n}\nvoid modify(int k,int p,int v){\n\tif(s[k].l==s[k].r){\n\t\ts[k].lmx=s[k].rmx=max(v,0);\n\t\ts[k].lmn=s[k].rmn=min(v,0);\n\t\ts[k].sum=v;\n\t\ts[k].mx1=1;s[k].mx2=1;s[k].mx=1;return;\n\t} int mid=s[k].l+s[k].r>>1;\n\tif(p<=mid) modify(k<<1,p,v);\n\telse modify(k<<1|1,p,v);\n\tpushup(k);\n}\nint main(){\n\tscanf(\"%d%d%s\",&n,&qu,str+1);n=(n-1)<<1;\n\tbuild(1,1,n);printf(\"%d\\n\",s[1].mx);\n\twhile(qu--){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tif(str[x]!=str[y]){\n\t\t\tswap(str[x],str[y]);\n\t\t\tmodify(1,x,(str[x]=='(')?1:-1);\n\t\t\tmodify(1,y,(str[y]=='(')?1:-1);\n\t\t} printf(\"%d\\n\",s[1].mx);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1615023870,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1149C\u3010Tree Generator\u2122\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8f83\u81ea\u7136\u7684\u505a\u6cd5\n### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u4e00\u4e2a\u6811\u7684\u62ec\u53f7\u5e8f \u6bcf\u6b21\u64cd\u4f5c\u5bf9\u6362\u4e24\u4e2a\u62ec\u53f7 \u6c42\u51fa\u6bcf\u6b21\u64cd\u4f5c\u540e\u6811\u7684\u76f4\u5f84\u957f\u5ea6  \n$m,n\\le 10^5$\n\n### \u9898\u89e3\n\u9898\u76ee\u8981\u6c42\u7ef4\u62a4\u4e00\u4e2a\u62ec\u53f7\u5e8f\u6240\u5bf9\u5e94\u7684\u6811\u7684\u76f4\u5f84\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u8003\u8651\u5982\u4f55\u628a\u8fd9\u4e24\u4e2a\u4e1c\u897f\u8054\u7cfb\u5728\u4e00\u8d77\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u8bbe $\\text{dep}_i$ \u8868\u793a\u8868\u793a\u6df1\u5ea6\uff0c\u5219\u6811\u4e0a\u4e00\u6761\u4ee5 $a,b$ \u4e3a\u7aef\u70b9\u8def\u5f84\u7684\u957f\u5ea6\u662f $\\text{dep}_a+\\text{dep}_b-2\\times \\text{dep}_{\\text{lca}(a,b)}$   ,\u800c  $\\text{dep}_{\\text{lca}(a,b)}$ \u5728\u62ec\u53f7\u5e8f\u4e0a\u6b63\u597d\u5c31\u662f $\\min_{i=a}^b \\text{dep}_i$  ,\u4e8e\u662f\u76f4\u5f84\u5c31\u662f\u6700\u5927\u7684 $\\text{dep}_a+\\text{dep}_b-2\\times \\min_{i=a}^b \\text{dep}_i$  \u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u62ec\u53f7\u5e8f\u4e0a\u7684\u5de6\u62ec\u53f7\u770b\u4f5c\u8fdb\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u53f3\u62ec\u53f7\u4ee3\u8868\u9000\u56de\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u5de6\u62ec\u53f7\u8bbe\u6210 $1$ ,\u53f3\u62ec\u53f7\u8bbe\u6210 $-1$ ,\u8fd9\u6837\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\u5c31\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6df1\u5ea6\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1\u6bcf\u6b21\u64cd\u4f5c\u540e\u90fd\u662f\u4e00\u9897\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u524d\u7f00\u548c\u3002\u64cd\u4f5c\u5c31\u662f\u628a\u539f\u5e8f\u5217\u7684 $1$ \u6362\u6210 $-1$ \uff0c$-1$ \u6362\u6210 $1$ \uff0c\u4f53\u73b0\u5728\u524d\u7f00\u548c\u4e0a\u5c31\u662f\u540e\u7f00 $\\pm2$ \u3002\n\n\u4e3a\u4e86\u7ef4\u62a4\u7b54\u6848\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e94\u4e2a\u503c\uff1a  \n$\\text{mx}\\triangleq \\max_{i=l}^r \\text{dep}_i$  \u5373\u533a\u95f4\u6700\u5927\u503c    \n$\\text{mn}\\triangleq \\min_{i=1}^r \\text{dep}_i$  \u5373\u533a\u95f4\u6700\u5c0f\u503c   \n$\\text{lmx}\\triangleq \\max_{i=l}^r\\{\\text{dep}_i-2\\times \\min_{j=l}^i \\text{dep}_j\\}$  \u5373\u6700\u5927\u7684  $\\text{dep}_b-2\\times \\min_{i=a}^b \\text{dep}_i$    \n$\\text{rmx}\\triangleq \\max_{i=l}^r\\{\\text{dep}_i-2\\times \\min_{j=i}^r \\text{dep}_j\\}$  \u5373\u6700\u5927\u7684  $\\text{dep}_a-2\\times \\min_{i=a}^b \\text{dep}_i$    \n$\\text{ans}$  \u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848  \n\u8003\u8651 $\\text{lca}(a,b)$ \u5206\u522b\u5728\u5de6\u53f3\u4e24\u533a\u95f4\u7684\u60c5\u51b5  \n1. $\\text{lca}(a,b)$ \u5728\u5de6\u533a\u95f4: $\\text{ans}=\\text{rmx}_l+\\text{mx}_r$  \n2. $\\text{lca}(a,b)$ \u5728\u53f3\u533a\u95f4: $\\text{ans}=\\text{mx}_l+\\text{lmx}_r$\n\n\u6211\u4eec\u5bf9\u8fd9\u4e24\u4e2a\u60c5\u51b5\u53d6 $\\max$ \u5373\u53ef\uff0c\u56e0\u4e3a\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u663e\u7136\u662f\u4e0d\u4f18\u7684\u3002\n\n\u5bf9\u4e8e\u533a\u95f4\u64cd\u4f5c\uff0c\u6253\u6807\u8bb0\u5373\u53ef\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f $\\text{lmx},\\text{rmx}$ \u5728\u533a\u95f4 $\\pm x$ \u540e\u53cd\u800c\u4f1a $\\mp x$ ,\u800c $\\text{ans}$ \u5219\u4e0d\u4f1a\u6709\u53d8\u5316\u3002\n\n\u590d\u6742\u5ea6\u81ea\u7136\u662f $\\mathcal{O}(m\\log n)$\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ninline int read(){\n\tint x=0;char c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')x=10*x+c-'0',c=getchar();\n\treturn x;\n}\nconst int maxn=1e6+10;\nint a[maxn],sum[maxn],n,m;\nnamespace SGT{const int maxsiz=4*maxn;\n\tint lmx[maxsiz],rmx[maxsiz],mx[maxsiz],mn[maxsiz],ans[maxsiz],tag[maxsiz];\n\tinline int lt(int x){return x<<1;}\n\tinline int rt(int x){return (x<<1)|1;}\n\tvoid down(int x,int v)//\u4fee\u6539\u4e00\u4e2a\u8282\u70b9\n\t{tag[x]+=v,mx[x]+=v,mn[x]+=v,lmx[x]-=v,rmx[x]-=v;}\n\tvoid pushup(int x){\n\t\tlmx[x]=max(mx[rt(x)]-2*mn[lt(x)],max(lmx[lt(x)],lmx[rt(x)]));\n\t\trmx[x]=max(mx[lt(x)]-2*mn[rt(x)],max(rmx[lt(x)],rmx[rt(x)]));\n\t\tmx[x]=max(mx[lt(x)],mx[rt(x)]),mn[x]=min(mn[lt(x)],mn[rt(x)]);\n\t\tans[x]=max(max(ans[lt(x)],ans[rt(x)]),max(mx[lt(x)]+lmx[rt(x)],rmx[lt(x)]+mx[rt(x)]));\n\t}\n\tvoid pushdown(int x)\n\t{if(tag[x]){down(lt(x),tag[x]);down(rt(x),tag[x]);tag[x]=0;}}\n\tvoid upd(int x,int l,int r,int k,int d){\n\t\tif(l==r){down(x,d);return;}\n\t\tint mid=(l+r)>>1;pushdown(x);\n\t\tif(k<=mid){upd(lt(x),l,mid,k,d);down(rt(x),d);}\n\t\telse upd(rt(x),mid+1,r,k,d);\n\t\tpushup(x);\n\t}\n\tvoid build(int x,int l,int r){\n\t\tif(l!=r){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tbuild(lt(x),l,mid);\n\t\t\tbuild(rt(x),mid+1,r);\n\t\t\tpushup(x);\n\t\t}else mx[x]=mn[x]=sum[l],lmx[x]=rmx[x]=-sum[l],ans[x]=0;\n\t}\n}\ninline int getc(){\n\tchar c=getchar();\n\twhile(c!='('&&c!=')')c=getchar();\n\treturn c=='('?1:-1;\n}\nsigned main(){\n\tn=2*read()-1,m=read();\n    for(int i=2;i<=n;i++)a[i]=getc();a[1]=1;\\\\\u624b\u52a8\u8865\u4e0a\u6839\u8282\u70b9\n    for(int i=1;i<=n;i++)sum[i]=sum[i-1]+a[i];\n\tSGT::build(1,1,n);printf(\"%d\\n\",SGT::ans[1]);\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read()+1,y=read()+1;\\\\\u56e0\u4e3a\u524d\u9762\u591a\u4e86\u4e00\u4e2a\u70b9\n\t\tif(a[x]==1)SGT::upd(1,1,n,x,-2),a[x]=-1;\n\t\telse SGT::upd(1,1,n,x,2),a[x]=1;\n\t\tif(a[y]==1)SGT::upd(1,1,n,y,-2),a[y]=-1;\n\t\telse SGT::upd(1,1,n,y,2),a[y]=1;\n\t\tprintf(\"%d\\n\",SGT::ans[1]);\n\t}return 0;\n}\n```\n\n\n \n",
        "postTime": 1654672502,
        "uid": 520914,
        "name": "\u9716ux",
        "ccfLevel": 7,
        "title": "\u9898\u89e3CF1149C"
    },
    {
        "content": "\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u7ebf\u6bb5\u6811\u5c0f\u6e05\u65b0\u9898\n\n---\n\n### \u9898\u89e3\uff1a\n\n\u9996\u5148\u662f\u4e00\u4e2a\u524d\u7f6e\u77e5\u8bc6\uff08\u8fd9\u91cc\u5c31\u96be\u4f4f\u4e86\u6211QAQ\uff09\uff1a\u62ec\u53f7\u5e8f\u5217\u7684\u4efb\u610f\u533a\u95f4\u53bb\u6389\u5339\u914d\u7684\u62ec\u53f7\u5bf9\u540e\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u6761\u6811\u94fe\uff0c\u94fe\u957f\u4e3a\u5269\u4f59\u7684\u62ec\u53f7\u5e8f\u5217\u7684\u957f\u5ea6\uff08\u5176\u5b9e\u81ea\u5df1\u53e3\u80e1\u4e00\u4e0b\u8fd8\u662f\u80fd\u660e\u767d\u7684\uff08\u5927\u96fe\uff09\uff09\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u8ba9\u4f60\u9009\u51fa\u4e00\u4e2a\u8fde\u7eed\u62ec\u53f7\u5e8f\u5217\uff0c\u4f7f\u5f97\u975e\u5339\u914d\u62ec\u53f7\u7684\u6570\u91cf\u6700\u591a\n\n\u7136\u540e\u5c31\u662f\u7ecf\u5178\u5957\u8def\u4e86\uff0c\u5c06\u5de6\u62ec\u53f7\u770b\u505a1\uff0c\u53f3\u62ec\u53f7\u770b\u505a-1\uff0c\u95ee\u9898\u53d8\u4e3a\u627e\u5230\u76f8\u90bb\u7684\u4e24\u6bb5\uff0c\u4f7f\u540e\u4e00\u6bb5\u7684\u6570\u5b57\u548c\u51cf\u524d\u4e00\u6bb5\u7684\u6570\u5b57\u548c\u6700\u5927\uff0c\u8fd9\u4e2a\u5dee\u5c31\u662f\u7b54\u6848\uff0c\u7279\u6b8a\u7684\uff0c\u6211\u4eec\u7528$\\Delta$\u8868\u793a\u8fd9\u4e2a\u5dee\n\n\u95ee\u9898\u7ec8\u4e8e\u8f6c\u5316\u5b8c\u5566\uff0c\u4e0b\u9762\u5c31\u662f\u8003\u8651\u5982\u4f55\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u7684$\\Delta$\u4e86\n\n\u533a\u95f4\u6700\u5927$\\Delta$\u4e0d\u5bb9\u6613\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u524d\u540e\u7f00\u7684\u6700\u5927$\\Delta$\n\npushup\u601d\u8def\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u5b50\u5e8f\u5217\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u533a\u95f4\u524d\u540e\u7f00\u6700\u5927\u6700\u5c0f\u6765\u8f85\u52a9pushup\n\n\u5177\u4f53\u5b9e\u73b0\u4e0a\u53ef\u4ee5\u770b\u4e0b\u4ee3\u7801\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n    char c=getchar();bool f=0;x=0;\n    while(!isdigit(c)) f|=c=='-',c=getchar();\n    while(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    if(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n    if(x<0) putchar('-'),write(-x);\n    else{if(x>9) write(x/10);putchar('0'+x%10);}\n}\n\nconst int N=2e5+5;\nint n,m;\nchar s[N];\nint sum[N<<2],lma[N<<2],lmi[N<<2],rma[N<<2],rmi[N<<2],ld[N<<2],rd[N<<2],mad[N<<2],tr[N<<2];\n//sum\u533a\u95f4\u548c\uff0clma\u524d\u7f00\u5927\uff0clmi\u524d\u7f00\u5c0f\uff0crma\u540e\u7f00\u5927\uff0crmi\u540e\u7f00\u5c0f\uff0cld\u524d\u7f00\u53f3\u51cf\u5de6\uff0crd\u540e\u7f00\u53f3\u51cf\u5de6\uff0cmad\u533a\u95f4\u53f3\u51cf\u5de6\uff0ctr\u533a\u95f4\u7b54\u6848 \n\nint max(int x,int y){\n\treturn x>y?x:y;\n}\n\nint min(int x,int y){\n\treturn x<y?x:y;\n}\n\nvoid pushup(int x){\n\tsum[x]=sum[x<<1]+sum[x<<1|1]; //\u76f4\u63a5\u52a0\n\tlma[x]=max(lma[x<<1],sum[x<<1]+lma[x<<1|1]); //\u7ecf\u5178\u5206\u4e24\u7c7b\u53d6\u6700\u503c\n\trma[x]=max(rma[x<<1|1],sum[x<<1|1]+rma[x<<1]);\n\tlmi[x]=min(lmi[x<<1],sum[x<<1]+lmi[x<<1|1]);\n\trmi[x]=min(rmi[x<<1|1],sum[x<<1|1]+rmi[x<<1]);\n\tld[x]=max(ld[x<<1],max(ld[x<<1|1]-sum[x<<1],mad[x<<1]+lma[x<<1|1])); //\u7c7b\u4f3c\u4e0a\u9762\u7684\u6700\u5927\u6700\u5c0f\u5b50\u6bb5\u548c\n\trd[x]=max(rd[x<<1|1],max(sum[x<<1|1]+rd[x<<1],mad[x<<1|1]-rmi[x<<1]));\n\tmad[x]=max(mad[x<<1]+sum[x<<1|1],mad[x<<1|1]-sum[x<<1]);\n\ttr[x]=max(max(tr[x<<1],tr[x<<1|1]),max(ld[x<<1|1]-rmi[x<<1],rd[x<<1]+lma[x<<1|1])); //\u8be5\u533a\u95f4\u7b54\u6848\u7684\u7b54\u6848\u6709\u56db\u79cd\u60c5\u51b5\uff0c\u540c\u6837\u53d6\u4e2amax\n}\n\nvoid build(int x,int l,int r){\n\tif(l==r){\n\t\tint v=s[l]=='('?1:-1;\n\t\tsum[x]=v; //\u8d4b\u521d\u503c\n\t\tlma[x]=rma[x]=max(v,0);\n\t\tlmi[x]=rmi[x]=min(v,0);\n\t\tld[x]=rd[x]=mad[x]=tr[x]=1; //\u521d\u59cb\u80af\u5b9a\u662f\u4e00\u4e2a\u591a\u4f59\u7684\u62ec\u53f7\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tbuild(x<<1,l,mid);\n\tbuild(x<<1|1,mid+1,r);\n\tpushup(x);\n}\n\nvoid up(int x,int l,int r,int p,int v){\n\tif(l==r){\n\t\tsum[x]=v;\n\t\tlma[x]=rma[x]=max(v,0);\n\t\tlmi[x]=rmi[x]=min(v,0);\n\t\tld[x]=rd[x]=mad[x]=tr[x]=1;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tif(p<=mid) up(x<<1,l,mid,p,v);\n\telse up(x<<1|1,mid+1,r,p,v);\n\tpushup(x);\n}\n\nsigned main(){\n\tread(n);read(m);scanf(\"%s\",s+1);\n\tn=n-1<<1; //\u62ec\u53f7\u5e8f\u5217\u7684\u957f\u5ea6\n\tbuild(1,1,n);\n\twrite(tr[1]);puts(\"\");\n\twhile(m--){\n\t\tint x,y;\n\t\tread(x);read(y);\n\t\tif(s[x]!=s[y]){ //\u5c0f\u4f18\u5316\uff0c\u76f8\u540c\u5c31\u4e0d\u7528\u505a\u4e86\uff08\u4f46\u5176\u5b9e\u671f\u671b1/2\u7684\u64cd\u4f5c\u90fd\u80fd\u88ab\u8df3\u8fc7\uff09\n\t\t\tswap(s[x],s[y]);\n\t\t\tup(1,1,n,x,s[x]=='('?1:-1); //\u5355\u70b9\u4fee\u6539\n\t\t\tup(1,1,n,y,s[y]=='('?1:-1);\n\t\t}\n\t\twrite(tr[1]);puts(\"\");\n\t}\n}\n```",
        "postTime": 1591586950,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1149C \u3010Tree Generator\u2122\u3011"
    },
    {
        "content": "\u524d\u8a00\uff1a\u5199\u4e00\u53d1\u9898\u89e3\u7eaa\u5ff5\u8fd9\u9053\u8ba9\u6211\u60f3\u4e86\u4e24\u5929\u7684\u9898\u76ee\u3002\n\n#### \u6b63\u9898\n\n\u9996\u5148\u6211\u4eec\u628a\u539f\u4e32\u4e2d\u7684\u5de6\u62ec\u53f7\u770b\u4f5c $1$\uff0c\u53f3\u62ec\u53f7\u770b\u4f5c $-1$\uff0c\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e2a\u5e8f\u5217\u505a\u524d\u7f00\u548c\uff0c\u8bb0\u4f5c $h$\u3002\u753b\u51fa $h_i$ \u5173\u4e8e $i$ \u7684\u56fe\u50cf\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e0b\u56fe\uff08\u5176\u4e2d\u7ea2\u8272\u7684\u7ebf\u4ee3\u8868 $h$ \u7684\u56fe\u50cf\uff09\uff0c\u6240\u6709\u9ec4\u8272\u7684\u7ebf\u4ee5\u4e0a\u7684\u6bcf\u4e00\u5ea7\u201c\u5c71\u5cf0\u201d\u5c31\u4ee3\u8868\u4e86\u4e00\u68f5\u5b50\u6811\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k3qizusa.png)\n\n\u90a3\u4e48\u7d27\u63a5\u7740\u6211\u4eec\u8003\u8651\uff0c\u7b54\u6848\u5e94\u8be5\u5982\u4f55\u8ba1\u7b97\u3002\u9996\u5148\u6211\u4eec\u8003\u8651\u6811\u4e0a\u7684\u7684\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f\uff1a$dis_{x,y}=dep_x+dep_y-2\\times dep_{lca}$\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u516c\u5f0f\u8f6c\u5316\u5230 $h$ \u7684\u56fe\u50cf\u4e0a\uff0c\u53ef\u4ee5\u53d1\u73b0 $\\forall x\\le y$\uff0c\u6709\uff1a\n\n$$dis_{x,y}=h_x+h_y-2\\times\\min_{i=x}^y h_i$$\n\n\u90a3\u4e48\u7b54\u6848\u5373\u4e3a $\\max_{x\\le y}dis_{x,y}$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u662f\u5f88\u597d\u7ef4\u62a4\uff0c\u4f46\u662f\u6211\u4eec\u8003\u8651\u5230\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u5982\u679c\u5728 $[x,y]$ \u4e2d\u6709\u4e00\u4e2a\u6574\u6570 $k$\uff0c\u4e14 $h_k$ \u4e0d\u7b49\u4e8e $\\min_{i=x}^y h_i$\uff0c\u90a3\u4e48\u7b54\u6848\u53ea\u4f1a\u66f4\u52a3\u3002\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u5c42 $\\min$ \u7684\u9650\u5236\u53bb\u6389\uff0c\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u53d8\u7b80\u5355\u4e86\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\n\n$$\\max_{x\\le y\\le z}h_x+h_z-2\\times h_y$$\n\n\u770b\u5230\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u5177\u4f53\u5730\uff0c\u5206\u522b\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff08\u8bb0\u4f5c $mx$\uff09\uff0c\u533a\u95f4\u6700\u5c0f\u503c\uff08\u8bb0\u4f5c $mn$\uff09\uff0c\u533a\u95f4 $\\max_{l\\le x\\le y\\le r}h_x-2\\times h_y$\uff08\u8bb0\u4f5c $pl$\uff09\uff0c\u533a\u95f4 $\\max_{l\\le x\\le y\\le r}h_y-2\\times h_x$\uff08\u8bb0\u4f5c $pr$\uff09\uff0c\u4ee5\u53ca\u533a\u95f4 $\\max_{l\\le x\\le y\\le z\\le r}h_x+h_z-2\\times h_y$\uff08\u8bb0\u4f5c $ans$\uff09\u3002\n\n\u8bb0 $o$ \u4e3a\u7ebf\u6bb5\u6811\u7684\u5f53\u524d\u8282\u70b9\uff0c$lc$\uff0c$rc$ \u4e3a $o$ \u7684\u5de6\u53f3\u513f\u5b50\uff0c\u5177\u4f53\u8f6c\u79fb\u5982\u4e0b\uff1a\n\n$$mx_o=\\max{(mx_{lc},mx_{rc})}$$\n\n$$mn_o=\\min{(mn_{lc},mn_{rc})}$$\n\n$$pl_o=\\max{(pl_{lc},pl_{rc},mx_{lc}-2\\times mn_{rc})}$$\n\n$$pr_o=\\max{(pr_{lc},pr_{rc},mx_{rc}-2\\times mn_{lc})}$$\n\n$$ans_o=\\max{(ans_{lc},ans_{rc},mx_{lc}+pr_{rc},pl_{lc}+mx_{rc})}$$\n\n\u7d27\u63a5\u7740\u6211\u4eec\u8003\u8651\u4ea4\u6362\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u4ea4\u6362\u7684 $(x,y)$ \u4e0d\u59a8\u4ee4 $x\\le y$\uff0c\u5982\u679c $x>y$ \u5219\u4ea4\u6362\u3002\u518d\u6765\u770b\u4e0a\u9762\u7684\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k3qizusa.png)\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c $x$ \u4f4d\u7f6e\u662f\u5de6\u62ec\u53f7\u800c $y$ \u4f4d\u7f6e\u662f\u53f3\u62ec\u53f7\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u628a $[x,y-1]$ \u4e2d\u7684\u6240\u6709 $h_i$ \u51cf $2$\uff08\u89c1\u7eff\u8272\u90e8\u5206\uff09\uff1b\u5982\u679c $x$ \u4f4d\u7f6e\u662f\u53f3\u62ec\u53f7\u800c $y$ \u4f4d\u7f6e\u662f\u5de6\u62ec\u53f7\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u628a $[x,y-1]$ \u4e2d\u7684\u6240\u6709 $h_i$ \u52a0 $2$\uff08\u89c1\u84dd\u8272\u90e8\u5206\uff09\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u591a\u4e00\u4e2a\u533a\u95f4\u52a0\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\Theta(n\\log n)$\u3002\n\nCode:\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std ;\nconst int MAXN = 2e5 + 10 ;\nint n , q , a[MAXN] , lz[MAXN << 2] ;\nchar ch[MAXN] ;\n#define lc (o << 1)\n#define rc (o << 1 | 1)\n#define mid ((l + r) >> 1)\nstruct sgt {\n\tint mx , mn , pl , pr , ans ;\n\tsgt (int mx = 0 , int mn = 0 , int pl = 0 , int pr = 0 , int ans = 0) : mx(mx) , mn(mn) , pl(pl) , pr(pr) , ans(ans) {}\n\tsgt operator + (sgt x) const {\n\t\tsgt ret ;\n\t\tret.mx = max (mx , x.mx) , ret.mn = min (mn , x.mn) ;\n\t\tret.pl = max (max (pl , x.pl) , mx - 2 * x.mn) ;\n\t\tret.pr = max (max (pr , x.pr) , x.mx - 2 * mn) ;\n\t\tret.ans = max (max (ans , x.ans) , max (pl + x.mx , mx + x.pr)) ;\n\t\treturn ret ;\n\t}\n} t[MAXN << 2] ;\nvoid build (int o , int l , int r) {\n\tif (l == r) {t[o] = sgt (a[l] , a[l] , -a[l] , -a[l] , 0) ; return ;}\n\tbuild (lc , l , mid) , build (rc , mid + 1 , r) , t[o] = t[lc] + t[rc] ;\n}\nvoid pushdown (int o) {\n\tif (!o || !lz[o]) return ;\n\tt[lc].mx += lz[o] , t[lc].mn += lz[o] , t[lc].pl -= lz[o] , t[lc].pr -= lz[o] , lz[lc] += lz[o] ;\n\tt[rc].mx += lz[o] , t[rc].mn += lz[o] , t[rc].pl -= lz[o] , t[rc].pr -= lz[o] , lz[rc] += lz[o] ;\n\tlz[o] = 0 ;\n}\nvoid upd (int o , int l , int r , int x , int y , int k) {\n\tif (x <= l && r <= y) {\n\t\tt[o].mx += k , t[o].mn += k , t[o].pl -= k , t[o].pr -= k , lz[o] += k ;\n\t\treturn ;\n\t}\n\tpushdown (o) ;\n\tif (x <= mid) upd (lc , l , mid , x , y , k) ;\n\tif (mid < y) upd (rc , mid + 1 , r , x , y , k) ;\n\tt[o] = t[lc] + t[rc] ;\n//\tprintf (\"%d:[%d %d]\\n\" , o , l , r) ;\n//\tprintf (\"mx-%d,mn-%d,pl-%d,pr-%d,ans-%d\\n\" , t[o].mx , t[o].mn , t[o].pl , t[o].pr , t[o].ans) ;\n}\nint main () {\n\tscanf (\"%d%d\" , &n , &q) , scanf (\"%s\" , ch + 1) ; n = 2 * n - 2 ;\n\tfor (int i = 1 ; i <= n ; i++) a[i] = (a[i - 1] + (ch[i] == '(' ? 1 : -1)) ;\n\tbuild (1 , 1 , n) ;\n\tprintf (\"%d\\n\" , max (t[1].ans , t[1].mx)) ;\n\twhile (q--) {\n\t\tint x , y ; scanf (\"%d%d\" , &x , &y) ;\n\t\tif (x > y) swap (x , y) ;\n\t\tif (ch[x] == '(' && ch[y] == ')') upd (1 , 1 , n , x , y - 1 , -2) ;\n\t\telse if (ch[x] == ')' && ch[y] == '(') upd (1 , 1 , n , x , y - 1 , 2) ;\n\t\tswap (ch[x] , ch[y]) , printf (\"%d\\n\" , max (t[1].ans , t[1].mx)) ;\n\t\t//puts (ch + 1) ;\n\t}\n\treturn 0 ;\n}\n```",
        "postTime": 1654781524,
        "uid": 122641,
        "name": "GIFBMP",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1149C\u3010Tree Generator\u2122\u3011"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1149C)\n\n# \u9898\u89e3\n\n\u9996\u5148\u641e\u660e\u767d\u5efa\u6811\u7684\u65b9\u5f0f\uff1a\u9047\u5230\u5de6\u62ec\u53f7\u5f80\u4e0b\u8d70\uff0c\u9047\u5230\u53f3\u62ec\u53f7\u5f80\u56de\u8d70.\u73b0\u5728\u6211\u4eec\u8981\u6c42\u8fd9\u4e2a\u6784\u9020\u51fa\u6765\u7684\u6811\u7684\u76f4\u5f84.\n\n\u7531\u4e8e\u6bcf\u4e00\u6b21\u90fd\u4f1a\u4e92\u6362\u4e24\u4e2a\u62ec\u53f7\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u663e\u7136\u6811\u7684\u5f62\u6001\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u8fdb\u800c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u5c06\u6811\u6784\u9020\u51fa\u6765\u8dd1\u6811 $\\tt DP$ \u663e\u7136\u4e0d\u53ef\u53d6\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u4e3a $\\mathcal O(qn)$\uff0c\u5bf9\u4e8e $n\\le 100000$ \u4ee5\u53ca $n,q$ \u540c\u9636\u6765\u8bf4\u76f4\u63a5 $\\tt TLE$.\n\n\u90a3\u4e48\u6211\u4eec\u8981\u60f3\u4e00\u79cd\u80fd\u5c06\u5feb\u901f\u6c42\u76f4\u5f84\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u5728\u6811\u5f62\u6001\u53d1\u751f\u6539\u53d8\u4e4b\u540e\u4ea6\u53ef\u4ee5\u5feb\u901f\u7ef4\u62a4\uff0c\u90a3\u4e48\u6b64\u65f6\u9700\u8981\u5bf9\u8fd9\u9053\u9898\u7684\u6027\u8d28\u8fdb\u884c\u6316\u6398.\n\n\u6211\u4eec\u8003\u8651\uff0c\u5728\u7528\u62ec\u53f7\u8868\u8fbe\u8fd9\u4e2a\u6811\u4e4b\u540e\uff0c\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u4ec0\u4e48\uff1a\n\n\u7531\u4e8e\u4e00\u4e2a\u5de6\u62ec\u53f7\u5f80\u4e0b\uff0c\u4e00\u4e2a\u53f3\u62ec\u53f7\u5f80\u4e0a\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u62ec\u53f7\u5e8f\u5217\u7684\u4e24\u70b9\uff0c\u4ed6\u4eec**\u6240\u8868\u793a\u7684\u70b9\u7684\u8ddd\u79bb**\u4e3a\uff1a\n\n> \u5c06\u5f62\u5982 $\\tt ()$ \u7684\u53ef\u5339\u914d\u62ec\u53f7\u53bb\u6389\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u62ec\u53f7\u7684\u6570\u91cf.\n\n**\u5bf9\u4e8e\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\u4ee5\u53ca\u4fee\u6539\uff0c\u4e0d\u96be\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b54\u6848.**\n\n\u540c\u65f6\uff0c\u6811\u7684\u76f4\u5f84\uff0c\u5373\u53ef\u8868\u793a\u4e3a\n\n> \u4efb\u53d6\u62ec\u53f7\u5e8f\u5217\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u5728\u53bb\u6389\u53ef\u5339\u914d\u62ec\u53f7\u4e4b\u540e\uff0c\u5269\u4e0b\u6765\u7684\u62ec\u53f7\u7684\u6700\u957f\u957f\u5ea6.\n\n\u5e76\u4e14\uff0c\u663e\u7136\u6709\u5c06\u4e00\u4e2a\u5e8f\u5217\u7684\u53ef\u5339\u914d\u62ec\u53f7\u5220\u53bb\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u53ea\u53ef\u80fd\u957f\u5f97\u50cf $\\tt )))))(($\uff0c\u53ef\u4ee5\u4e0d\u5b58\u5728\u5de6\u62ec\u53f7\u6216\u8005\u53f3\u62ec\u53f7.\n\n\u6211\u4eec\u8003\u8651\u5408\u5e76\u7b54\u6848\uff0c\u5047\u8bbe\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u5b50\u533a\u95f4\u6709\u53f3\u62ec\u53f7 $a$ \u4e2a\uff0c\u5de6\u62ec\u53f7 $b$ \u4e2a\uff0c\u53f3\u5b50\u533a\u95f4\u6709\u53f3\u62ec\u53f7 $c$ \u4e2a\uff0c\u5de6\u62ec\u53f7 $b$ \u4e2a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u4ece\u4e2d\u95f4\u5408\u5e76\u7684\u7b54\u6848\u5c31\u662f \n\n$$\na+|b-c|+d\n$$\n\u8fd9\u4e2a\u7edd\u5bf9\u503c\u5f88\u70e6\uff0c\u6211\u4eec\u8003\u8651\u5c06\u5176\u53bb\u6389\uff0c\u90a3\u4e48\uff0c\u539f\u5f0f\u53d8\u6210\u4e86\n$$\n\\max\\{a+b-c+d,a-b+c+d\\}\n$$\n\u6211\u4eec\u8003\u8651\u4e0a\u5f0f\u9700\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\uff1a\n\n1. $a+b$\uff0c\u5373\u4e00\u4e2a\u533a\u95f4\u5728\u53bb\u6389\u53ef\u5339\u914d\u62ec\u53f7\u4e4b\u540e\u7684\u540e\u7f00\u53f3\u62ec\u53f7\u52a0\u4e0a\u540e\u7f00\u5de6\u62ec\u53f7\u7684\u6700\u5927\u503c\uff1b\n2. $a-b$\uff0c\u5373\u4e00\u4e2a\u533a\u95f4\u5728\u53bb\u6389\u53ef\u5339\u914d\u62ec\u53f7\u4e4b\u540e\u7684\u540e\u7f00\u53f3\u62ec\u53f7\u51cf\u53bb\u540e\u7f00\u5de6\u62ec\u53f7\u7684\u6700\u5927\u503c\uff1b\n3. $d-c$\uff0c\u5373\u4e00\u4e2a\u533a\u95f4\u5728\u53bb\u6389\u53ef\u5339\u914d\u62ec\u53f7\u4e4b\u540e\u7684\u524d\u7f00\u5de6\u62ec\u53f7\u51cf\u53bb\u524d\u7f00\u53f3\u62ec\u53f7\u7684\u6700\u5927\u503c\uff1b\n4. $c+d$\uff0c\u5373\u4e00\u4e2a\u533a\u95f4\u5728\u53bb\u6389\u53ef\u5339\u914d\u62ec\u53f7\u4e4b\u540e\u7684\u524d\u7f00\u5de6\u62ec\u53f7\u52a0\u4e0a\u524d\u7f00\u53f3\u62ec\u53f7\u7684\u6700\u5927\u503c\uff1b\n\n\u6211\u4eec\u5206\u522b\u8bb0\u8fd9\u56db\u4e2a\u503c\u4e3a $x,y,z,k$.\n\n\u73b0\u5728\u8003\u8651\u6211\u4eec\u600e\u4e48\u7ef4\u62a4\u8fd9\u56db\u4e2a\u503c\uff0c\u6211\u4eec\u62ff $x$ \u4e3e\u4f8b\u5b50\uff08\u5176\u4ed6\u90fd\u5dee\u4e0d\u591a\u4e86\uff09\uff1a\n\n\u5bf9\u4e8e\u533a\u95f4 $i$\uff0c\u8bb0\u5176\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3a $ls,rs$\uff0c\u5982\u679c\u8fd9\u4e2a\u6700\u4f18\u70b9\u5212\u5206\u5728\u53f3\u8fb9\uff0c\u90a3\u4e48\u76f4\u63a5\u5c31\u53ef\u4ee5\u4f7f\u7528 $rs$ \u7684 $x$ \u5bf9\u7b54\u6848\u8fdb\u884c\u53d6\u6700\u4f18\uff0c\u4f46\u662f\uff0c\u5982\u679c\u6700\u4f18\u70b9\u5212\u5206\u5728\u5de6\u8fb9\uff0c\u5373\u8bf4\u660e\u53f3\u8fb9\u5df2\u7ecf\u5168\u90e8\u5165\u9009\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06\u53f3\u8fb9\u5339\u914d\u5b8c\u4e4b\u540e\u5269\u4e0b\u7684\u5de6\u62ec\u53f7\u3001\u53f3\u62ec\u53f7\u5206\u522b\u8bb0\u4f5c $l,r$\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u73b0\u5728\u6240\u77e5\u7684\u5c31\u662f\uff0c\u53f3\u8fb9\u5df2\u7ecf\u5f62\u5982 $\\tt )))(($ \u7684\u7ed3\u6784\uff0c\u6211\u4eec\u8981\u5728\u5de6\u8fb9\u7684\u54ea\u91cc\u9009\u62e9\u5212\u5206\u624d\u80fd\u8fbe\u5230\u8ba9 $x$ \u6700\u5927\uff0c\u8003\u8651\u5728\u5de6\u8fb9\u9009\u62e9\u7684\u5212\u5206\u70b9\u4ee5\u540e\u6709 $a$ \u7684\u53f3\u62ec\u53f7\uff0c$b$ \u4e2a\u5de6\u62ec\u53f7\uff0c\u90a3\u4e48 $x$ \u5c31\u53ef\u4ee5\u8868\u793a\u4e3a\n$$\nx=a+|b-r|+l\n$$\n\u7528\u540c\u6837\u7684\u65b9\u6cd5\u53bb\u6389\u7edd\u5bf9\u503c\uff0c\u6709\n$$\nx=\\max\\{a+b-r+l,a-b+r+l\\}\n$$\n\u540c\u65f6\uff0c\u6211\u4eec\u6709 $x_{ls}=a+b,y_{ls}=a-b$\uff0c\u7531\u4e8e\u6211\u4eec\u662f\u4e0a\u4f20\uff0c\u90a3\u4e48 $ls$ \u4ee5\u53ca $rs$ \u7684\u4fe1\u606f\u90fd\u662f\u5df2\u77e5\u7684\uff0c\u90a3\u4e48\u5168\u90e8\u6574\u5408\u5728\u4e00\u8d77\uff0c\u5c31\u6709\n$$\nx_i=\\max\\{x_{rs},\\;x_{ls}-r_{rs}+l{rs},\\;y_{ls}+l_{rs}+r_{rs}\\}\n$$\n\u7531\u7ef4\u62a4\u8fc7\u7a0b\u53ef\u77e5\uff0c\u6211\u4eec\u8fd8\u5f97\u518d\u591a\u7ef4\u62a4\u4fe9\u503c\uff1a\u4e00\u4e2a\u533a\u95f4\u7684 $l,r$\uff0c\u5373\u5c06\u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u8fdb\u884c\u5339\u914d\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u5de6\u62ec\u53f7\u3001\u53f3\u62ec\u53f7\u4e2a\u6570\uff0c\u8fd9\u4e2a\u5f88\u597d\u8fdb\u884c\u7ef4\u62a4.\n\n\u5bf9\u4e8e $y,z,k$ \u7684\u7ef4\u62a4\u540c\u7406.\n\n\u6700\u7ec8\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log n+q\\log n)$.\n\n# \u4ee3\u7801\n\n```cpp\n# include <cstdio>\n# include <cstring>\n# include <algorithm>\nusing namespace std;\nnamespace Elaina{\n    # define rep(i,l,r) for(int i=l, i##_end_ = r; i <= i##_end_; ++ i)\n    # define fep(i,l,r) for(int i=l, i##_end_ = r; i >= i##_end_; -- i)\n    # define fi first\n    # define se second\n    # define Endl putchar('\\n')\n    # define writc(x, c) fwrit(x), putchar(c)\n    // # define int long long\n    typedef long long ll;\n    typedef pair<int, int> pii;\n    typedef unsigned long long ull;\n    typedef unsigned int uint;\n    template<class T>inline T Max(const T x, const T y){return x < y ? y : x;}\n    template<class T>inline T Min(const T x, const T y){return x < y ? x : y;}\n    template<class T>inline T fab(const T x){return x < 0 ? -x : x;}\n    template<class T>inline void getMax(T& x, const T y){x = Max(x, y);}\n    template<class T>inline void getMin(T& x, const T y){x = Min(x, y);}\n    template<class T>T gcd(const T x, const T y){return y ? gcd(y, x % y) : x;}\n    template<class T>inline T readin(T x){\n        x=0; int f = 0; char c;\n        while((c = getchar()) < '0' || '9' < c) if(c == '-') f = 1;\n        for(x = (c ^ 48); '0' <= (c = getchar()) && c <= '9'; x = (x << 1) + (x << 3) + (c ^ 48));\n        return f ? -x : x;\n    }\n    template<class T>void fwrit(const T x){\n        if(x < 0)return putchar('-'), fwrit(-x);\n        if(x > 9)fwrit(x / 10); putchar(x % 10 ^ 48);\n    }\n}\nusing namespace Elaina;\n\nconst int maxn = 1e6;\n\nchar s[maxn + 5];\n\nint n, q;\n\nstruct node{\n    // \u4e0b\u9762\u7ef4\u62a4\u7684\u90fd\u662f\u6700\u5927\u503c\n    /** @brief \u540e\u7f00\u53f3\u62ec\u53f7\u52a0\u4e0a\u540e\u7f00\u5de6\u62ec\u53f7*/\n    int x;\n    /** @brief \u540e\u7f00\u53f3\u62ec\u53f7\u51cf\u53bb\u540e\u7f00\u5de6\u62ec\u53f7*/\n    int y;\n    /** @brief \u524d\u7f00\u5de6\u62ec\u53f7\u51cf\u53bb\u524d\u7f00\u53f3\u62ec\u53f7*/\n    int z;\n    /** @brief \u524d\u7f00\u5de6\u62ec\u53f7\u52a0\u4e0a\u524d\u7f00\u53f3\u62ec\u53f7*/\n    int k;\n    /** @brief \u5408\u5e76\u6574\u4e2a\u533a\u95f4\u4e4b\u540e, \u5269\u4e0b\u7684\u5de6\u62ec\u53f7*/\n    int l;\n    /** @brief \u5408\u5e76\u6574\u4e2a\u533a\u95f4\u4e4b\u540e, \u5269\u4e0b\u7684\u53f3\u62ec\u53f7*/\n    int r;\n    /** @brief \u533a\u95f4\u7b54\u6848*/\n    int ans;\n}tre[maxn * 4 + 5];\n# define ls (i << 1)\n# define rs (i << 1 | 1)\n# define mid ((l + r) >> 1)\n# define _lq ls, l, mid\n# define _rq rs, mid + 1, r\ninline void pushup(const int i){\n    if(tre[ls].l > tre[rs].r){\n        tre[i].l = tre[ls].l - tre[rs].r + tre[rs].l;\n        tre[i].r = tre[ls].r;\n    } else {\n        tre[i].l = tre[rs].l;\n        tre[i].r = tre[rs].r - tre[ls].l + tre[ls].r;\n    }\n    tre[i].x = Max(tre[rs].x, Max(tre[ls].x + tre[rs].l - tre[rs].r, tre[ls].y + tre[rs].r + tre[rs].l));\n    tre[i].y = Max(tre[rs].y, tre[ls].y + tre[rs].r - tre[rs].l);\n    tre[i].z = Max(tre[ls].z, tre[ls].l - tre[ls].r + tre[rs].z);\n    tre[i].k = Max(tre[ls].k, Max(tre[ls].l + tre[ls].r + tre[rs].z, tre[ls].r - tre[ls].l + tre[rs].k));\n    tre[i].ans = Max(Max(tre[ls].x + tre[rs].z, tre[ls].y + tre[rs].k), Max(tre[ls].ans, tre[rs].ans));\n}\n/** @param x \u5982\u679c\u662f -1 \u5c31\u662f\u53f3\u62ec\u53f7, \u5982\u679c\u662f 1 \u5c31\u662f\u5de6\u62ec\u53f7*/\ninline void modify(const int p, const int x, const int i = 1, const int l = 1, const int r = n){\n    if(l == r){\n        tre[i].x = tre[i].k = 1;\n        tre[i].y = Max(-x, 0);\n        tre[i].z = Max(x, 0);\n        tre[i].l = (x == 1), tre[i].r = (x == -1);\n        tre[i].ans = 1;\n        return;\n    }\n    if(p <= mid) modify(p, x, _lq);\n    else modify(p, x, _rq);\n    pushup(i);\n}\nvoid build(const int i = 1, const int l = 1, const int r = n){\n    if(l == r){\n        int x = (s[l] == '(') ? 1 : -1;\n        tre[i].x = tre[i].k = 1;\n        tre[i].y = Max(-x, 0);\n        tre[i].z = Max(x, 0);\n        tre[i].l = (x == 1), tre[i].r = (x == -1);\n        tre[i].ans = 1;\n        return;\n    }\n    build(_lq), build(_rq);\n    pushup(i);\n}\n\nvoid print(const int i = 1,const int l = 1, const int r = n){\n    if(l != r) print(_lq), print(_rq);\n    printf(\"node %d :> l == %d, r == %d\\n\", i, l, r);\n    printf(\"x == %d, y == %d, z == %d, k == %d, ans == %d\\n\", tre[i].x, tre[i].y, tre[i].z, tre[i].k, tre[i].ans);\n    printf(\"l == %d, r == %d\\n\", tre[i].l, tre[i].r);\n    puts(\"-----------------------------------------\");\n    \n}\n\ninline void init(){\n    n = readin(1), q = readin(1);\n    scanf(\"%s\", s + 1);\n    n = strlen(s + 1);\n    build();\n    // print();\n}\n\nsigned main(){\n    init();\n    printf(\"%d\\n\", tre[1].ans);\n    int x, y;\n    while(q --){\n        x = readin(1), y = readin(1);\n        modify(x, s[y] == '(' ? 1 : -1);\n        modify(y, s[x] == '(' ? 1 : -1);\n        swap(s[x], s[y]);\n        printf(\"%d\\n\", tre[1].ans);\n        // print();\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1609633762,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1149C \u3010Tree Generator\u2122\u3011"
    },
    {
        "content": "**\u9898\u610f** : \u7ed9\u51fa\u4e00\u68f5\u4ee5\u62ec\u53f7\u5e8f\u5217\u63cf\u8ff0\u7684\u6811\u3002\n\n\u8d44\u74f7\u4ea4\u6362\u4e24\u4e2a\u62ec\u53f7(\u4e0d\u4e00\u5b9a\u76f8\u90bb,\u4fdd\u8bc1\u4ecd\u4e3a\u4e00\u68f5\u6811),\u6c42\u76f4\u5f84\u3002\n\n$n,q\\leq 10^5$ ,\u65f6\u9650$\\texttt{2s}$\u3002\n\n------------\n\n\u540c\u5b66 : \u6b38\u8fd9\u4e2a\u62ec\u53f7\u5e8f\u5217\u633a\u6709\u8da3\u7684,\u4f60\u5b66\u4e0d\u5b66\u554a\u3002\n\n\u6211 : \u8fd9\u4e2a\u9898\u641e\u4e2a\u6b27\u62c9\u5e8f\u4e5f\u884c\u5427,\u518d\u4e0d\u6d4e\u76f4\u63a5\u52a8\u6001\u94fe\u5206\u6cbb\u3002\u6539\u5929\u518d\u5b66\u5427 (\u5495\n\n\u76f4\u5230\u6211\u9047\u89c1\u4e86\u8fd9\u9898\u2026\u2026\u9898\u76ee\u4e2d\u76f4\u63a5\u8574\u542b\u8be5\u77e5\u8bc6\u70b9\u3002\n\n\u62ec\u53f7\u5e8f\u53ef\u4ee5\u89c6\u4f5c\u6709\u8fdb\u6709\u51fa\u7684`dfs`\u5e8f,\u6709\u5982\u4e0b\u7ed3\u8bba:\n\n- \u9009\u53d6 $u,v$ \u4e4b\u95f4\u7684\u62ec\u53f7,\u5168\u90e8**\u5339\u914d**\u5bf9\u6d88\u5b8c\u6bd5\u4e4b\u540e,\u5269\u4f59\u5f62\u5982 `))))(((`\u3002\n\n  \u5269\u4f59\u62ec\u53f7\u4e2a\u6570\u5373\u4e3a $dis(u,v)$ ,\u53ef\u4ee5\u7ed9\u62ec\u53f7\u52a0\u6743\u3002\n  \n\u8bc1\u660e : \u8003\u8651\u5230\u8fbe $a$ \u70b9\u65f6 $b$ \u7684\u4e24\u4e2a\u62ec\u53f7\u53ef\u80fd\u7684\u72b6\u6001\u3002\n\n- \u2460 \u5747\u586b\u5b8c\n \n  $b$ \u4e0d\u662f $a$ \u7684\u7956\u5148\u6216\u5b50\u5b59\u3002\n  \n- \u2461 \u5747\u672a\u586b\n\n  $b$ \u4e0d\u662f $a$ \u7684\u7956\u5148\u3002\n\n- \u2462 \u53ea\u586b\u5199\u4e86\u5de6\u8fb9\n\n  $b$ \u662f $a$ \u7684\u7956\u5148\u3002\n \n$u,v$ \u4e4b\u95f4,\u80fd\u591f\u5339\u914d\u7684\u62ec\u53f7\u4eec,\u5bf9\u4e8e $u$ \u662f\u60c5\u51b5\u2461,\u5bf9\u4e8e $v$ \u662f\u60c5\u51b5\u2460,\u5747\u4e0d\u5728\u8def\u5f84\u4e0a\u3002\n\n\u5bf9\u4e8e\u4f59\u4e0b\u7684\u53f3\u62ec\u53f7,\u5bf9\u4e8e $u$ \u662f\u60c5\u51b5\u2462,\u5bf9\u4e8e $v$ \u662f\u60c5\u51b5 \u2460,\u5bf9\u5e94 \u201c\u65e2\u662f $u$ \u7684\u7956\u5148,\u53c8\u4e0d\u662f $v$ \u7684\u7956\u5148\u201d\u7684\u8def\u5f84,\u5373\u4e3a\u84dd\u8272\u90e8\u5206\u3002\n\n\u5bf9\u4e8e\u4f59\u4e0b\u7684\u5de6\u62ec\u53f7,\u5bf9\u4e8e $u$ \u662f\u60c5\u51b5\u2461,\u5bf9\u4e8e $v$ \u662f\u60c5\u51b5 \u2462,\u5bf9\u5e94 \u201c\u65e2\u662f $v$ \u7684\u7956\u5148,\u53c8\u4e0d\u662f $u$ \u7684\u7956\u5148\u201d\u7684\u8def\u5f84,\u5373\u4e3a\u7ea2\u8272\u90e8\u5206\u3002\n\n\u7ea2\u84dd\u4e24\u79cd\u989c\u8272\u6070\u597d\u62fc\u6210 $u,v$ \u4e24\u70b9\u95f4\u7684\u8def\u5f84\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gsj3e2t0.png?x-oss-process=image/resize,m_lfit,h_300)\n\n\u90a3\u4e48,\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4efb\u610f\u533a\u95f4\u5185\u672a\u5339\u914d\u62ec\u53f7\u7684\u6700\u5927\u6570\u91cf\u5373\u53ef\u3002\n\n\u7ed9 $\"(\"$ \u8d4b\u6743 $+1$ , \u7ed9 $\")\"$ \u8d4b\u6743 $-1$ \u3002\n\n\u4e00\u6bb5\u62ec\u53f7\u5e8f\u5217\u5bf9\u6d88\u5b8c\u6bd5\u4e4b\u540e,\u5047\u8bbe\u5206\u754c\u7ebf\u524d\u9762\u7684\u548c\u4e3a $s1$ (\u8d1f\u6570),\u5206\u754c\u7ebf\u540e\u9762\u7684\u548c\u4e3a $s2$ ,\u5219\u5269\u4f59\u62ec\u53f7\u4e2a\u6570\u4e3a $s2-s1$\u3002\n\n\u82e5\u6211\u4eec\u9009\u62e9\u7684\u4e0d\u662f\u5b9e\u9645\u7684\u5206\u754c\u7ebf,\u7b54\u6848\u4e00\u5b9a\u66f4\u52a3(\u4f9d\u8d56\u4e8e\u6743\u503c\u975e\u8d1f),\u6240\u4ee5\u4e0d\u5fc5\u7279\u6b8a\u8003\u8651\u3002\n\n\u73b0\u5728\u5c31\u662f\u8981\u7ef4\u62a4 : \u76f8\u90bb\u7684\u4e24\u6bb5\u533a\u95f4\u548c\u7684\u5dee\u7684\u6700\u5927\u503c\u3002\u8d44\u74f7\u5355\u70b9\u4fee\u6539\u3002\n\n\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u6bcf\u4e2a\u533a\u95f4\u8981\u8bb0\u5f55\u533a\u95f4\u548c $s$ ,\u6700\u5c0f\u540e\u7f00 $r0$ ,\u6700\u5927\u540e\u7f00 $r1$ ,\u6700\u5c0f\u524d\u7f00 $l0$ ,\u6700\u5927\u524d\u7f00 $l1$,\n\n\u5de6\u4fa7\u5b8c\u6574(\u8d21\u732e\u4e3a\u8d1f),\u7ecf\u8fc7\u5206\u754c\u7ebf,\u53f3\u4fa7\u8d34\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c $rm$\u3002\n\n\u53f3\u4fa7\u5b8c\u6574,\u7ecf\u8fc7\u5206\u754c\u7ebf,\u5de6\u4fa7(\u8d21\u732e\u4e3a\u8d1f)\u8d34\u5de6\u7aef\u70b9\u7684\u6700\u5927\u503c $lm$\u3002\n\n\u5de6\u53f3\u4fa7\u5747\u8d34\u7aef\u70b9\u7684\u6700\u5927\u503c $lrm$\u3002\n\n\u533a\u95f4\u5185\u90e8\u7684\u7b54\u6848 $m$\u3002\n\n> \u89c9\u5f97\u8d39\u8111\u5b50\u53ef\u4ee5\u76f4\u63a5`DDP`,\u7136\u540e\u5316\u7b80\u77e9\u9635,\u4e0d\u8fc7\u4f30\u8ba1\u4e5f\u633a\u9ebb\u70e6\u3002\n\n\u8f6c\u79fb\u5177\u4f53\u7ec6\u8282\u8bf7\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<vector>\n#define MaxN 200500\nusing namespace std;\nstruct Node\n{int s,r0,l1,rm,lm,lrm,m;}\na[MaxN<<2];\ninline void up(int u)\n{\n  int l=u<<1,r=u<<1|1;\n  a[u].s=a[l].s+a[r].s;\n  a[u].l1=max(a[l].l1,a[l].s+a[r].l1);\n  a[u].r0=min(a[l].r0+a[r].s,a[r].r0);\n  a[u].lm=max(a[l].lm,max(a[l].lrm+a[r].l1,a[r].lm-a[l].s));\n  a[u].rm=max(a[r].rm,max(a[r].lrm-a[l].r0,a[l].rm+a[r].s));\n  a[u].lrm=max(a[l].lrm+a[r].s,a[r].lrm-a[l].s);\n  a[u].m=max(max(a[l].m,a[r].m),max(a[l].rm+a[r].l1,a[r].lm-a[l].r0));\n}\nchar str[MaxN];\nint n,m;\nvoid build(int l=1,int r=n,int u=1)\n{\n  if (l==r){\n    int x=(str[l]=='(' ? 1 : -1);\n    a[u].l1=max(x,0);a[u].r0=min(a[u].s=x,0);\n    a[u].rm=a[u].lm=a[u].lrm=a[u].m=(x<0 ? -x : x);\n    return ;\n  }int mid=(l+r)>>1;\n  build(l,mid,u<<1);\n  build(mid+1,r,u<<1|1);\n  up(u);\n}\nint to;\nvoid chg(int l=1,int r=n,int u=1)\n{\n  if (l==r){\n    int x=(str[l]=='(' ? 1 : -1);\n    a[u].l1=max(x,0);a[u].r0=min(a[u].s=x,0);\n    a[u].rm=a[u].lm=a[u].lrm=a[u].m=(x<0 ? -x : x);\n    return ;\n  }int mid=(l+r)>>1;\n  if (to<=mid)chg(l,mid,u<<1);\n  else chg(mid+1,r,u<<1|1);\n  up(u);\n}\nint main()\n{\n  scanf(\"%d%d%s\",&n,&m,str+1);\n  n=n*2-2;\n  build();printf(\"%d\\n\",a[1].m);\n  for (int i=1,x,y;i<=m;i++){\n    scanf(\"%d%d\",&x,&y);\n    swap(str[x],str[y]);\n    to=x;chg();\n    to=y;chg();\n    printf(\"%d\\n\",a[1].m);\n  }return 0;\n}\n```\n\n\n\n\n",
        "postTime": 1591802115,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1149C \u3010Tree Generator\u2122\u3011"
    },
    {
        "content": "> [**CF1149C Tree Generator\u2122**](https://www.luogu.com.cn/problem/CF1149C)\n\n> [**\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.cnblogs.com/UperFicial/p/16755771.html)\u3002\n\n\u725b\u903c\u9898 & ZROI Day3 \u6570\u636e\u7ed3\u6784\u9009\u8bb2\u3002\n\n\u6765\u4e00\u6ce2\u8be6\u7ec6\u7684\u9898\u89e3\u3002\n\n\u5f53\u65f6\u548c $\\texttt{ys}$\uff0c$\\texttt{hy}$ \u8fd8\u6709[\u5c0f\u7334\u5b50](https://www.luogu.com.cn/user/331947)\u8ba8\u8bba\u4e86\u534a\u5929\uff0c\u4e00\u76f4\u8ba4\u4e3a\u662f\u6700\u5927\u5b50\u6bb5\u548c\u5f88\u6fc0\u52a8\u76f4\u63a5\u5c31\u5728\u7fa4\u91cc\u8bf4\u4e86\uff0c\u7ed3\u679c\u88ab\u55b7\u4e86\uff0c\u7136\u540e\u4e00\u6ce2\u5468\u6298\u7fa4\u53cb\u89c9\u5f97\u8fd9\u662f\u5341\u5206\u6b63\u786e\u7684\uff0c\u7136\u540e\u4e00\u6ce2\u5468\u6298\u53c8\u88ab\u55b7\u4e86\uff08\n\n\u8003\u8651\u628a `(` \u770b\u6210\u6df1\u5ea6 $+1$\uff0c`)` \u770b\u6210\u6df1\u5ea6 $-1$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u62ec\u53f7\u5e8f\u5217\u770b\u6210\u4e00\u4e2a $+1$ \u548c $-1$ \u7684\u5e8f\u5217\u3002\n\n\u8003\u8651\u4e00\u6761\u8def\u5f84\u7684\u957f\u5ea6\u5982\u4f55\u7b97\uff0c\u5bf9\u4e8e\u4e00\u6bb5 $u\\to \\operatorname{lca}(u,v)\\to v$ \u7684\u8def\u5f84\uff0c\u5728\u62ec\u53f7\u5e8f\u5217\u4e0a\u80af\u5b9a\u4f1a\u88ab\u8868\u793a\u6210\u5f62\u5982 `)...)(...(` \u7684\u4e00\u6bb5\uff0c\u8def\u5f84\u957f\u5ea6\u4e3a `(` \u62ec\u53f7\u6570\u91cf $+$ `)` \u62ec\u53f7\u6570\u91cf\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u8def\u5f84\u4e0a\u8fd8\u4f1a\u6709\u4e00\u4e2a\u5b50\u6811\uff0c\u6bd4\u5982\u5f62\u5982 `)..()..)(..(`\uff0c`()` \u662f\u9700\u8981\u5ffd\u7565\u4e0d\u8ba1\u7684\u3002\n\n\u7531\u6b64\u6211\u4eec\u5f97\u5230\u7ed3\u8bba\uff1a**\u62ec\u53f7\u5e8f\u5217\u4e0a\u4efb\u4f55\u4e00\u4e2a\u5b50\u533a\u95f4\uff0c\u53bb\u6389\u6240\u6709\u5339\u914d\u7684\u62ec\u53f7\u540e\uff0c\u5f97\u5230\u7684\u62ec\u53f7\u5e8f\u5217\u4e00\u5b9a\u662f\u6811\u4e0a\u4e00\u6761\u94fe**\u3002\u5982\u679c\u7528\u6743\u503c\u8868\u793a\u6cd5\u6765\u8868\u793a\uff0c\u4f60\u4f1a\u53d1\u73b0\u5176\u5b9e\u5339\u914d\u7684\u62ec\u53f7\u6839\u672c\u4e0d\u7528\u7ba1\uff0c\u56e0\u4e3a\u4e00\u4e2a $(+1)$ \u548c\u4e00\u4e2a $(-1)$ \u90fd\u6d88\u6389\u4e86\uff0c\u5982\u679c\u6211\u4eec\u79f0 `)(` \u4e3a\u5206\u754c\u70b9\uff0c`(` \u53f3\u8fb9\u7684\u90e8\u5206\u4e3a\u53f3\u533a\u95f4\uff0c`)` \u5de6\u8fb9\u7684\u90e8\u5206\u4e3a\u5de6\u533a\u95f4\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\u4e3a\uff0c\u53f3\u533a\u95f4\u7684\u6743\u503c\u548c $+$ \u5de6\u533a\u95f4\u6743\u503c\u548c\u7684**\u76f8\u53cd\u6570**\uff0c\u56e0\u4e3a\u5de6\u533a\u95f4\u7684 `)` \u6211\u4eec\u8868\u793a\u6210\u4e86 $-1$\uff0c\u73b0\u5728\u9700\u8981\u7b97\u6210 $1$ \u7684\u957f\u5ea6\u3002\n\n\u5bf9\u6b64\uff0c\u6211\u4eec\u53c8\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u5bf9\u4e8e\u6240\u6709\u5b50\u533a\u95f4\uff0c\u627e\u5230\u4e00\u4e2a\u5206\u754c\u70b9\uff0c\u53f3\u533a\u95f4\u6743\u503c\u548c $-$ \u5de6\u533a\u95f4\u6743\u503c\u548c\u7684\u6700\u5927\u503c\uff0c\u4e3a\u8fd9\u4e2a\u5b50\u533a\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u6700\u5927\u503c\u3002**\n\n\u90a3\u4e48\u663e\u7136\uff0c\u6811\u7684\u76f4\u5f84\u662f\u5bf9\u4e8e**\u6240\u6709\u5b50\u533a\u95f4**\uff0c\u627e\u5230\u4e00\u4e2a\u5206\u754c\u70b9\u540e\u7684\u6743\u503c\u6700\u5927\u503c\u3002\n\n\u4ea4\u6362\u5b57\u7b26\u53ef\u4ee5\u770b\u6210 $\\Theta(1)$ \u7684\u4fee\u6539\uff0c\u90a3\u4e48\u5f88\u81ea\u7136\u5730\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff0c\u4e14\u7c7b\u4f3c\u4e8e\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n\u7ef4\u62a4\u533a\u95f4\u7b54\u6848 $\\text{ans}$\uff0c\u540e\u7f00\u6700\u5927\u503c $\\text{sm}$\uff0c\u540e\u7f00\u6700\u5c0f\u503c $\\text{sn}$\uff0c\u524d\u7f00\u6700\u5927\u503c $\\text{pm}$\uff0c\u524d\u7f00\u6700\u5c0f\u503c $\\text{pn}$\u3002\n\n\u4f46\u8fd9\u6837\u662f\u4e0d\u8db3\u4ee5\u8f6c\u79fb\u7684\uff0c\u6bd4\u5982\u5de6\u533a\u95f4\u662f `)))` \u53f3\u533a\u95f4\u662f `))(`\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u4e00\u8d77\u62fc\u4e00\u5757\u513f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u7ef4\u62a4\u4e00\u4e0b\uff0c\u7d27\u9760\u5de6\u7aef\u70b9\u7684\u7b54\u6848\u6700\u5927\u503c $\\text{lm}$\uff0c\u7d27\u9760\u53f3\u7aef\u70b9\u7b54\u6848\u6700\u5927\u503c $\\text{rm}$\uff0c\u7d27\u9760\u5de6\u53f3\u7aef\u70b9\u7684\u7b54\u6848\u6700\u5927\u503c $\\text{lrm}$\uff0c\u4ee5\u53ca\u533a\u95f4\u548c $\\text{sum}$\u3002\n\n\u8003\u8651 $\\texttt{pushup}$ \u7684\u8fc7\u7a0b\uff0c\u8bbe $u$ \u7684\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3a $u_0$ \u548c $u_1$\u3002\n\n- \u9996\u5148\u5f88\u663e\u7136\u7684 $\\text{ans}_u\\leftarrow \\max(\\text{ans}_{u_0},\\text{ans}_{u_1})$\u3002\n\n- \u8fd8\u53ef\u4ee5\u662f\u5de6\u533a\u95f4\u5df2\u7ecf\u662f\u5305\u542b\u53f3\u7aef\u70b9\u7684\u5b8c\u6574\u7b54\u6848\u4e86\uff0c\u53f3\u533a\u95f4\u5728\u62fc\u4e0a\u4e00\u4e2a `(..(` \u7684\u6700\u957f\u524d\u7f00\uff0c$\\text{ans}_u\\leftarrow \\text{rm}_{u_0}+\\text{pm}_{u_1}$\u3002\n\n- \u5f53\u7136\u5b8c\u6574\u7b54\u6848\u5728\u53f3\u533a\u95f4\u7684\u60c5\u51b5\u4e5f\u540c\u7406\uff0c$\\text{ans}_u\\leftarrow \\text{lm}_{u_1}-\\text{sn}_{u_0}$\u3002\n\n\u524d\u7f00\u6700\u5c0f\u503c / \u6700\u5927\u503c\u90fd\u53ef\u4ee5\u901a\u8fc7\u533a\u95f4\u548c\u6765\u8f6c\u79fb\uff0c\u8003\u8651 $\\text{lm}$ \u7684\u8f6c\u79fb\uff0c\u9996\u5148\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f $\\text{lm}_{u_0}$\uff0c\u8fd8\u8ba9\u5de6\u533a\u95f4\u7d27\u9760\u5de6\u53f3\u7aef\u70b9\u7684\u7b54\u6848\u518d\u62fc\u4e0a\u53f3\u7aef\u70b9\u7684 `(..(`\uff0c\u5373 $\\text{lrm}_{u_0}+\\text{pm}_{u_1}$\uff0c\u8fd8\u53ef\u4ee5\u662f\u53f3\u533a\u95f4\u9009\u62e9\u4e00\u4e2a\u7d27\u9760\u5de6\u7aef\u70b9\u7684\u7b54\u6848\u6bb5 `)..)(..(`\uff0c\u7136\u540e\u5de6\u533a\u95f4\u5168\u90e8\u9009\u62e9\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u53d6\u53cd\uff0c$\\text{lm}_{u_1}-\\text{sum}_{u_0}$\u3002$\\text{rm}$ \u662f\u540c\u7406\u7684\u3002\n\n$\\text{sum}$ \u76f4\u63a5\u5c06\u5de6\u53f3\u533a\u95f4\u7684 $\\text{sum}$ \u52a0\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n\u6700\u540e\u8fd8\u5269\u4e00\u4e2a $\\text{lrm}$\uff0c\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u533a\u95f4\u9009\u62e9 $\\text{lrm}$ \u53e6\u4e00\u4e2a\u533a\u95f4\u9009\u62e9 $\\text{sum}$\uff0c\u540c\u6837\u6ce8\u610f\u53d8\u53f7\u7684\u95ee\u9898\uff1a$\\text{lrm}_u\\leftarrow\\max(\\text{lrm}_{u_0}+\\text{sum}_{u_1},\\text{lrm}_{u_1}-\\text{sum}_{u_0})$\u3002\n\n\u8fd9\u6837\u5c31\u90fd\u5904\u7406\u5b8c\u6bd5\u5566\u3002\n\n[**code**](https://codeforces.com/contest/1149/submission/174713590)\u3002",
        "postTime": 1664958090,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010CF1149C Tree Generator\u2122\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u4e00\u68f5\u6811\u6709 $n$ \u4e2a\uff0c\u7ed9\u4f60\u62ec\u53f7\u5e8f\u5217\uff0c\u8f93\u51fa\u5b83\u7684\u76f4\u5f84\u3002\n\n\u63a5\u4e0b\u6765\u6709 $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u8868\u793a\u4ea4\u6362\u4e24\u4e2a\u62ec\u53f7\uff0c\u8f93\u51fa\u4ea4\u6362\u4e24\u4e2a\u62ec\u53f7\u540e\u7684\u76f4\u5f84\uff08\u4fdd\u8bc1\u6bcf\u6b21\u64cd\u4f5c\u540e\u90fd\u4e3a\u4e00\u68f5\u6811\uff09\n\n$3 \\le n \\le 100\\,000,1 \\le q \\le 100$\n\n## \u5206\u6790\n\n\u8fd9\u9898\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u7ed3\u8bba\uff1a\n\n> \u4efb\u610f\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\u7684\u5b50\u4e32\u90fd\u8868\u8fbe\u4e00\u6761\u94fe\uff0c\u8fd9\u6761\u94fe\u7684\u957f\u5ea6\u5c31\u662f\u62ec\u53f7\u5e8f\u5217\u6d88\u53bb\u5339\u914d\u62ec\u53f7\u540e\u7684\u5269\u4f59\u62ec\u53f7\u4e2a\u6570\u3002\n\n\u8bc1\u660e\uff1a\n\n> \u53d6\u4e00\u6bb5\u62ec\u53f7\u5e8f\u5217\uff0c\u5219\u91cc\u9762\u7684\u5339\u914d\u62ec\u53f7\u4e00\u5b9a\u8868\u8fbe\u82e5\u5e72\u68f5\u5b8c\u6574\u7684\u5b50\u6811\uff08\u5c31\u662f\u5f80\u4e0a/\u5f80\u4e0b\u8d70\u65f6\u8df3\u8fc7\u7684\u5b50\u6811\uff09\u3002\u800c\u5269\u4f59\u7684\u62ec\u53f7\uff0c\u5c31\u662f\u6ca1\u6709\u5b8c\u6574\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u7684\u5de6/\u53f3\u62ec\u53f7\u3002\u56e0\u4e3a\u5269\u4f59\u7684\u62ec\u53f7\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u62ec\u53f7\uff0c\u6240\u4ee5\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u6ca1\u6709\u5b8c\u6574\u5b50\u6811\u7684\u7ed3\u70b9\u5360\u6709 $2$ \u4e2a\u62ec\u53f7\u3002\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u5269\u4f59\u62ec\u53f7\u4e2a\u6570\u5c31\u662f\u6ca1\u6709\u5b8c\u6574\u5b50\u6811\u7684\u7ed3\u70b9\u4e2a\u6570\u4e86\u3002\u800c\u6ca1\u6709\u5b8c\u6574\u5b50\u6811\u7684\u7ed3\u70b9\u4e2a\u6570\u5c31\u662f\u94fe\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7ed3\u8bba\u6210\u7acb\u3002\n\n\u90a3\u4e48\uff0c\u76f4\u5f84\u5c31\u663e\u7136\u4e3a\u6240\u6709\u5b50\u4e32\u4e2d\u6d88\u53bb\u5339\u914d\u7684\u62ec\u53f7\u540e\u672a\u5339\u914d\u7684\u62ec\u53f7\u4e2a\u6570\u6700\u5927\u503c\u3002\n\n\n\u8fd9\u65f6\uff0c\u5c06 `(` \u8d4b\u503c\u4e3a $1$\uff0c`)` \u8d4b\u503c\u4e3a $-1$\uff0c\u5c31\u4f1a\u6709\uff1a\n\n\u6240\u6709\u5b50\u4e32\u4e2d\u6d88\u53bb\u5339\u914d\u7684\u62ec\u53f7\u540e\u672a\u5339\u914d\u7684\u62ec\u53f7\u4e2a\u6570\u6700\u5927\u503c\u5c31\u662f\u5c06\u533a\u95f4\u5206\u6210\u4e24\u6bb5\u540e\u540e\u534a\u90e8\u5206\u7684\u6743\u503c\u548c\u51cf\u53bb\u524d\u534a\u90e8\u5206\u6743\u503c\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u81f3\u4e8e\u539f\u56e0\uff0c\u662f\u56e0\u4e3a\u540e\u534a\u90e8\u5206\u51cf\u53bb\u524d\u534a\u90e8\u5206\u53ef\u4ee5\u7528\u6743\u503c\u6d88\u53bb\u5339\u914d\u7684\u62ec\u53f7\uff08\u5c1d\u8bd5\u7edf\u8ba1\u4e00\u4e0b\u76f8\u6d88\u7684\u62ec\u53f7\u5c31\u4f1a\u53d1\u73b0\u80fd\u591f\u6d88\u53bb\u7684\u62ec\u53f7\u5bf9\u7b54\u6848\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff09\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4fe1\u606f\u4e86\u3002\u6211\u4eec\u8981\u5728\u7ebf\u6bb5\u6811\u8282\u70b9\u4e0a\u7ef4\u62a4\u4e00\u4e9b\u503c\uff1a\u533a\u95f4\u548c\uff0c\u524d\u7f00\u8fde\u7eed\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u540e\u7f00\u8fde\u7eed\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff08\u5230\u8fd9\u91cc\u90fd\u548c\u7ef4\u62a4\u6700\u5927\u5b50\u6bb5\u548c\u7c7b\u4f3c\uff09\u3002\u8fd8\u8981\u7ef4\u62a4\u524d\u7f00\u3001\u540e\u7f00\u8fde\u7eed\u9009\u7684\u540e\u534a\u90e8\u5206\u51cf\u524d\u534a\u90e8\u5206\u6700\u5927\u503c\uff0c\u624d\u80fd\u7ef4\u62a4\u6574\u4e2a\u533a\u95f4\u7684\u540e\u534a\u90e8\u5206\u51cf\u524d\u534a\u90e8\u5206\u6700\u5927\u503c\u3002\n\n\u770b\u4e0a\u53bb\u5f88\u591a\uff0c\u4f46\u662f\u5176\u5b9e\u6574\u4e2a\u5b9e\u73b0\u4e0d\u957f\uff0c\u548c\u6700\u5927\u5b50\u6bb5\u548c\u6709\u53ef\u6bd4\u6027\u3002\n\n## \u4ee3\u7801\n\n```cpp\nstatic const int BUFSIZE = 1 << 23;\nstatic const int prec = 10;\nextern \"C++\" {\n#define reg register\ntemplate<class Tp>inline const Tp&min(reg const Tp &x,reg const Tp&y){return x<y?x:y;}\ntemplate<class Tp>inline const Tp&max(reg const Tp &x,reg const Tp&y){return x<y?y:x;}\ntypedef long long lld;const int inf=0x3f3f3f3f;const lld inflld=0x3f3f3f3f3f3f3f3fll;\n#include <algorithm>\n#include <string.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <string>\n#include <queue>\n#include <map>\n#include <set>\nusing std::pair,std::make_pair,std::swap,std::sort,std::next_permutation,std::prev_permutation;\nusing std::string,std::vector,std::map,std::set,std::queue,std::enable_if,std::is_integral,std::is_same;\nusing std::is_floating_point,std::is_pointer,std::is_lvalue_reference,std::remove_reference, std::is_const;\nchar iBuf[BUFSIZE],oBuf[BUFSIZE],*iEnd,*iP,*oEnd,*oP;\n#ifdef ONLINE_JUDGE\n#define getchar() (iP==iEnd?iEnd=(iP=iBuf)+fread(iBuf,1,sizeof(iBuf),stdin),(iP==iEnd?EOF:*iP++):*iP++)\n#define putchar(ch) (oP==oEnd?fwrite(oBuf,1,BUFSIZE,stdout),*(oP++)=ch:*(oP++)=ch)\n#endif\ninline lld qpow(lld x,lld y,lld p){reg lld t=1;for(;y;y>>=1,x=x*x%p)if(y&1)t=t*x%p;return t;}\ntemplate<class Tp>inline void read(char&x){for(;isspace(x=getchar()););}\ninline void read(char*x){\n\treg int t=1;for(;isspace(*x=getchar()););\n\tfor(;!isspace(x[t ++]=getchar()););x[t]=0;\n}\ntemplate<class Tp>typename enable_if<is_integral<Tp>::value^is_same<Tp,char>::value,void>::type\ninline read(Tp&x){\n\tx=0;reg char ch,f=1;for(;!isdigit(ch=getchar());)f=ch=='-'?-1:f;x=ch&15;\n\tfor(;isdigit(ch=getchar());)x=(x<<3)+(x<<1)+(ch&15);x*=f;\n}\ntemplate<class Tp,class=typename enable_if<is_floating_point<Tp>::value&&!is_integral<Tp>::value,void>::type>\ninline void read(Tp&x){\n\treg char f=1,ch;x=0;reg Tp val=0.1;for(;!isdigit(ch=getchar());)f=ch=='-'?-1:f;\n\tfor(x=ch&15;isdigit(ch=getchar());)x=x*10+(ch&15);\n\tif(ch=='.')for(;isdigit(ch=getchar());val/=10)x+=(ch&15)*val;x*=f;\n}\ntemplate <typename T>\nusing is_pointer_or_ref=std::integral_constant<bool,is_pointer<T>::value||\n(is_lvalue_reference<T>::value&&!is_const<typename remove_reference<T>::type>::value)>;\ntemplate<typename...Conds>struct and_:std::true_type{};template<typename Cond,typename... Conds>\nstruct and_<Cond,Conds...>:std::conditional<Cond::value,and_<Conds...>,std::false_type>::type{};\ntemplate <typename...Ts>using are_pointer_or_ref=and_<is_pointer_or_ref<Ts>...>;inline void scan(){}\ntemplate<typename Tp,typename...Tps,typename enable_if<are_pointer_or_ref<Tps...>::value>::type* =nullptr>\ninline void scan(reg Tp&x,reg Tps&&...t){read(x);scan(t...);}\ntemplate<typename Tp,typename...Tps,typename enable_if<are_pointer_or_ref<Tps...>::value>::type* =nullptr>\ninline void scan(reg Tp*x,reg Tps&&...t){read(x);scan(t...);}\n\ninline void write(const char&x){putchar(x);}\ninline void write(const char*x){for(int t=0;x[t];++t)putchar(x[t]);}\ntemplate<class Tp>typename enable_if<is_integral<Tp>::value^is_same<Tp,char>::value,void>::type\ninline write(const Tp&x){\n\tif(!x){putchar('0');return;}static char buf[256];reg int cnt=0;reg Tp cpy=x;\n\tif(x<0)putchar('-'),cpy=-x;for(;cpy;cpy/=10)buf[cnt++]=(cpy%10)+48;for(--cnt;~cnt;--cnt)putchar(buf[cnt]);\n}\ntemplate<class Tp,class=typename enable_if<is_floating_point<Tp>::value&&!is_integral<Tp>::value,void>::type>\ninline void write(const Tp&pr) {\n\treg Tp cpy=pr,res=0.5;for(int i=1;i<=prec;++i)res/=10;cpy+=res,write((__int128)cpy);putchar('.');\n\tcpy-=(__int128)cpy;for(int i=1;i<=prec;++i)cpy=(cpy-(int)cpy)*10,putchar((int)cpy+'0');\n}\ninline void print(){}\ntemplate<typename Tp,typename...Tps>\ninline void print(reg const Tp&x,reg Tps&&...t){write(x);print(t...);}\ntemplate<typename Tp,typename...Tps>\ninline void print(reg const Tp*x,reg Tps&&...t){write(x);print(t...);}\nstruct tmp_s{tmp_s(){iP=iEnd=iBuf,oP=oBuf,oEnd=oBuf+BUFSIZE;}~tmp_s(){fwrite(oBuf,1,oP-oBuf,stdout);}}tmp_v;\n}\nconst int N = 200010;\nchar s[N];\nstruct node {\n\tint sum;\n\tint prex, prem;\n\tint sucx, sucm;\n\tint pred, sucd;\n\tint d, ans;\n} tr[N << 2];\nconst node L = (node){1, 1, 0, 1, 0, 1, 1, 1, 1};\nconst node R = (node){-1, 0, -1, 0, -1, 1, 1, 1, 1};\nchar str[N];\nnode operator + (const node &x, const node &y) {\n\tnode z;\n\tz.prex = max(x.prex, x.sum + y.prex);\n\tz.sucx = max(y.sucx, x.sucx + y.sum);\n\tz.prem = min(x.prem, x.sum + y.prem);\n\tz.sucm = min(y.sucm, x.sucm + y.sum);\n\tz.d = max(y.d - x.sum, x.d + y.sum);\n\tz.pred = max(x.pred, max(y.pred - x.sum, x.d + y.prex));\n\tz.sucd = max(y.sucd, max(y.sum + x.sucd, y.d - x.sucm));\n\tz.sum = x.sum + y.sum;\n\tz.ans = max(max(x.ans, y.ans), max(y.pred - x.sucm, x.sucd + y.prex));\n\treturn z;\n}\nvoid build(int k, int l, int r) {\n\tif (l == r) {\n\t\tif (str[l] == '(') tr[k] = L;\n\t\telse tr[k] = R;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(k << 1, l, mid);\n\tbuild(k << 1 | 1, mid + 1, r);\n\ttr[k] = tr[k << 1] + tr[k << 1 | 1];\n}\nvoid modify(int k, int l, int r, int pos) {\n\tif (l == r) {\n\t\tif (str[l] == '(') tr[k] = L;\n\t\telse tr[k] = R;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (pos <= mid) modify(k << 1, l, mid, pos);\n\telse modify(k << 1 | 1, mid + 1, r, pos);\n\ttr[k] = tr[k << 1] + tr[k << 1 | 1];\n}\nint n, m;\nint main() {\n\tscan(n, m, str + 1);\n\tn = 2 * n - 2;\n\tbuild(1, 1, n);\n\tprint(tr[1].ans, '\\n');\n\tfor (int i = 1; i <= m; ++ i) {\n\t\tint a, b;\n\t\tscan(a, b);\n\t\tswap(str[a], str[b]);\n\t\tmodify(1, 1, n, a);\n\t\tmodify(1, 1, n, b);\n\t\tprint(tr[1].ans, '\\n');\n\t}\n}\n```",
        "postTime": 1659400845,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "CF1149C Tree Generator\u2122 \u9898\u89e3"
    },
    {
        "content": "[$\\tt Link$](/problem/CF1149C)\u3002\n\n\u6811\u5728\u53d8\u5316\u4e14\u53d8\u5316\u6ca1\u6709\u89c4\u5f8b\uff0c\u6211\u4eec\u4e0d\u597d\u7ef4\u62a4\u6811\uff0c\u8003\u8651\u4ece\u62ec\u53f7\u5e8f\u5165\u624b\u3002\n\n\u9996\u5148\u8ba8\u8bba\u4e00\u6761\u94fe\u5728\u62ec\u53f7\u5e8f\u4e0a\u662f\u600e\u6837\u7684\u3002\n\n+ $\\color{red})\\cdots)\\color{green}(\\cdots($\n+ $\\color{red}(\\cdots(\\color{green}(\\cdots($\n+ $\\color{red})\\cdots)\\color{green})\\cdots)$\n\n\u7ea2\u8272\u548c\u7eff\u8272\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u5de6\u62ec\u53f7\u6216\u53f3\u62ec\u53f7\uff08\u8def\u5f84\u90e8\u5206\uff09\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u62ec\u53f7\u7a7f\u63d2\u5176\u4e2d\uff0c\u5b83\u4eec\u4e92\u76f8\u5339\u914d\u4f46\u662f\u4e0d\u4f1a\u5728\u8fd9\u6761\u94fe\u4e0a\u3002\n\n\u5982\u679c\u5e26\u4e0a\u5176\u5b83\u7684\u90e8\u5206\u662f\u4e0d\u597d\u8ba8\u8bba\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u7528\u5408\u7406\u7684\u65b9\u6cd5\u89c4\u907f\u6389\u90a3\u4e9b\u90e8\u5206\u3002\n\n\u8003\u8651\u628a\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u7684\u6743\u503c\u8bb0\u4e3a $1,-1$\uff0c\u7136\u540e\u8fd9\u65f6 $1\\cdots n$ \u7684\u76f4\u5f84\u957f\u5ea6\u5c31\u662f **\u627e\u5230 $p\\in[1,n]$\uff0c\u6700\u5927\u7684 $\\Sigma(p,n]-\\Sigma[1,p]$**\uff0c\u5176\u4e2d $\\Sigma$ \u4e3a\u4e00\u4e2a\u533a\u95f4\u7684\u6743\u503c\u548c\u3002\n\n\u8fd9\u6837\u4f3c\u4e4e\u8003\u8651\u6709\u65f6\u628a\u4e00\u5bf9\u62ec\u53f7\u62c6\u5f00\uff1f\u5e76\u4e0d\uff0c\u62c6\u5f00\u4e00\u5bf9\u62ec\u53f7\u4f1a\u8ba9\u7b54\u6848\u51cf\u5c0f $2$\uff0c\u6240\u4ee5\u4e3a\u4e86\u7b54\u6848\u7684 $\\max$ \u4e00\u5b9a\u4e0d\u4f1a\u62c6\u5f00\u62ec\u53f7\u3002\n\n\u5355\u70b9\u4fee\u6539\uff0c\u5168\u5c40\u67e5\u8be2\u8fd9\u73a9\u610f\uff08\u4f46\u662f\u8fd9\u73a9\u610f\u5e76\u4e0d\u597d\u641e\uff09\uff0c\u8003\u8651\u4e0a\u7ebf\u6bb5\u6811\u3002\n\n\u8fd9\u4e2a\u6709\u70b9\u7c7b\u4f3c\u6700\u5927\u5b50\u6bb5\u548c\u3002\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e9b\u4e1c\u897f\uff1a\n\n1. \u533a\u95f4\u548c\uff08\u8f85\u52a9\u8f6c\u79fb\uff09\n1. \u4ece\u5de6\u6216\u53f3\u5f00\u59cb\u7684\u6700\u5927\u8fde\u7eed\u548c\n1. \u4ece\u5de6\u6216\u53f3\u5f00\u59cb\u7684\u6700\u5927\u7684\u5dee\n1. \u6574\u4e2a\u533a\u95f4\u7684\u6700\u5927\u7684\u5dee\n1. \u533a\u95f4\u5185\uff08\u4e0d\u53d7\u9650\u5236\uff09\u7684\u6700\u5927\u7684\u5dee\n\n\u8f6c\u79fb\u770b\u4ee3\u7801\u3002\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u770b\u9009\u62e9\u7684 $p$ \u662f\u5728\u8fd9\u4e2a\u70b9\u7684\u5de6\u5b50\u6811\u8fd8\u662f\u53f3\u5b50\u6811\u3002\n\n<https://codeforces.com/contest/1149/submission/166449731>",
        "postTime": 1659353712,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF1149C \u7ebf\u6bb5\u6811\u7ef4\u62a4\u6811\u7684\u62ec\u53f7\u5e8f"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5361\u4e86\u6211\u8f83\u957f\u65f6\u95f4\u3002\n\n\u56e0\u4e3a\u9700\u8981\u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u65e0\u6cd5\u7528\u79bb\u7ebf\u7b97\u6cd5\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u5728\u7ebf\u7ef4\u62a4\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u96be\u70b9\u5728\u4e8e\u5408\u5e76\u4fe1\u606f\u3002\n\n\u9996\u5148\u6211\u4eec\u8fd9\u6837\u7528\u62ec\u53f7\u5e8f\u5217\u6784\u9020\u8fd9\u68f5\u6811\uff1a\u9047\u5230\u5de6\u62ec\u53f7\u5f80\u513f\u5b50\u8d70\uff0c\u53f3\u62ec\u53f7\u5f80\u7236\u4eb2\u8d70\uff0c\u6240\u4ee5\uff0c\u6811\u7684\u76f4\u5f84\u5728\u7ebf\u6bb5\u6811\u4e0a\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\n\n$$\n\\texttt{))))))((((((((}\n$$\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u533a\u95f4\u4e2d\u7684\u6700\u5927\u76f4\u5f84\uff0c\u9996\u5148\u4e0e\u5de6\u53f3\u4e24\u8fb9\u6700\u5927\u533a\u95f4\u6c42\u6700\u503c\uff0c\u8fd9\u4e2a\u4e0d\u7528\u8bf4\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u5408\u5e76\u4e24\u6bb5\u3002\n\n\u6211\u4eec\u8bbe\u53c2\u4e0e\u5408\u5e76\u7684\u5de6\u533a\u95f4\u7684\u5de6\u62ec\u53f7\u6570\u91cf\u4e3a $a$\uff0c\u53f3\u62ec\u53f7\u6570\u91cf\u4e3a $b$\uff0c\u53c2\u4e0e\u5408\u5e76\u7684\u53f3\u533a\u95f4\u7684\u5de6\u62ec\u53f7\u6570\u91cf\u4e3a $c$ \u53f3\u62ec\u53f7\u6570\u91cf\u4e3a $d$\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u7b54\u6848\u4e3a\uff1a\n$$\nb+|a-d|+c\n$$\n\u4e4b\u6240\u4ee5\u662f\u8fd9\u4e2a\u7b54\u6848\uff0c\u662f\u56e0\u4e3a\u5de6\u8fb9\u53f3\u8fb9\u7ec4\u6210\u7684\u533a\u95f4\u540c\u6837\u4e5f\u662f\u5f62\u5982\u4e0a\u9762\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u8fd9\u662f\u56e0\u4e3a\u4efb\u610f\u4e00\u4e2a\u533a\u95f4\uff0c\u628a\u80fd\u6d88\u9664\u7684\u90fd\u6d88\u9664\uff0c\u5c31\u4f1a\u53d8\u6210\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u3002\n\n\u6211\u4eec\u628a\u7edd\u5bf9\u503c\u62c6\u5f00\uff1a\n$$\n\\max(b+a-d+c,b-a+d+c)\n$$\n\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u6211\u4eec\u5355\u72ec\u7ef4\u62a4 $a,b,c,d$ \u662f\u6bd4\u8f83\u96be\u7ef4\u62a4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ef4\u62a4 $a+b,b-a,c-d,d+c$\u3002\n\n\u600e\u4e48\u7ef4\u62a4\uff1f\u6211\u4eec\u5148\u8003\u8651\u8fd9\u4e9b\u503c\u7684\u610f\u4e49\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e9b\u610f\u4e49\u5206\u522b\u662f\uff1a\n\n+ $a+b$ \u540e\u7f00\u5de6\u62ec\u53f7\u52a0\u53f3\u62ec\u53f7\u6700\u5927\u503c\u3002\n+ $b-a$ \u540e\u7f00\u53f3\u62ec\u53f7\u51cf\u5de6\u62ec\u53f7\u6700\u5927\u503c\u3002\n+ $c-d$ \u524d\u7f00\u5de6\u62ec\u53f7\u51cf\u53f3\u62ec\u53f7\u6700\u5927\u503c\u3002\n+ $d+c$ \u524d\u7f00\u5de6\u62ec\u53f7\u52a0\u53f3\u62ec\u53f7\u6700\u5927\u503c\u3002\n\n\u6ce8\u610f\uff0c\u4e0a\u9762\u7684\u6240\u6709\u610f\u4e49\u90fd\u662f\u5728\u5408\u5e76\u4e86\u4e00\u4e9b\u4e4b\u540e\uff0c\u5f62\u5982 $\\texttt{)))))((((((}$\u200b\u200b \u7684\u5de6\u53f3\u62ec\u53f7\u6700\u503c\u3002\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u4e0a\u9762\u7684\u503c\uff0c\u4ee5\u7ef4\u62a4\u7b2c\u4e00\u4e2a\u4e3e\u4f8b\uff0c\u8bbe\u5176\u4e3a $x$\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u540e\u7f00\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002\u5982\u679c\u5f00\u59cb\u4f4d\u7f6e\u5728\u53f3\u533a\u95f4\uff0c\u663e\u7136\u503c\u5e94\u8be5\u662f\u53f3\u533a\u95f4\u7684 $x$\u3002\n\n\u5982\u679c\u5f00\u59cb\u4f4d\u7f6e\u5728\u5de6\u533a\u95f4\uff0c\u9996\u5148\uff0c\u8fd9\u4e2a\u4e00\u5b9a\u5305\u542b\u4e86\u53f3\u533a\u95f4\uff0c\u8bbe\u53f3\u533a\u95f4\u5168\u90e8\u5408\u5e76\u5de6\u62ec\u53f7\u6570\u91cf\u4e3a $l$\u200b \uff0c\u53f3\u62ec\u53f7\u6570\u91cf\u4e3a $r$\u200b\uff0c\u5de6\u533a\u95f4\u90e8\u5206\u7684\u5de6\u62ec\u53f7\u4e3a $a$\u200b\uff0c\u53f3\u62ec\u53f7\u4e3a $b$\u200b\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a $b+|a-r|+l$\u200b\uff0c\u6211\u4eec\u518d\u6b21\u5206\u7c7b\u8ba8\u8bba\uff1a\n$$\n\\max(b+a-r+l,b-a+r-l)\n$$\n \u4e0d\u96be\u53d1\u73b0\u6700\u5927\u5316\u7684 $a+b,b-a$ \u662f\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u503c\u3002\u800c $l,r$ \u4e5f\u597d\u7ef4\u62a4\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u505a\u4e86\uff0c\u4ee3\u7801\uff1a\n\n```c++\n#include<bits/stdc++.h>\n#define dd double\n#define ld long double\n#define ll long long\n#define uint unsigned int\n#define ull unsigned long long\n#define N 300010\n#define M 700010\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\nconst int MAXN=1e7+10;\n\ntemplate<typename T> inline void read(T &x) {\n    x=0; int f=1;\n    char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c == '-') f=-f;\n    for(;isdigit(c);c=getchar()) x=x*10+c-'0';\n    x*=f;\n}\n\nint n,m,a[N];\n\nstruct node{\n    ll val;\n    int lazy,maxx,minn,len;\n    bool op;\n    node(){op=0;}\n};\n\nbool NotPrime[MAXN];\nint prime[M],tail,Phi[MAXN];\n\ninline void GetPhi(){\n    NotPrime[1]=1;Phi[1]=1;\n    for(int i=2;i<=1e7;i++){\n        if(!NotPrime[i]){prime[++tail]=i;Phi[i]=i-1;}\n        for(int j=1;j<=tail&&i*prime[j]<=1e7;j++){\n            int k=i*prime[j];\n            NotPrime[k]=1;\n            if(i%prime[j]==0){\n                Phi[k]=Phi[i]*prime[j];\n                break;\n            }\n            else Phi[k]=Phi[i]*Phi[prime[j]];\n        }\n    }\n    // for(int i=1;i<=10;i++) printf(\"i:%d Phi:%d\\n\",i,Phi[i]);\n}\n\nstruct DS{\n    node p[N<<2];\n    inline void Pushup(int k){\n        p[k].val=p[k*2].val+p[k*2+1].val;\n        p[k].len=p[k*2].len+p[k*2+1].len;\n        p[k].maxx=max(p[k*2].maxx,p[k*2+1].maxx);\n        p[k].minn=min(p[k*2].minn,p[k*2+1].minn);\n    }\n    inline void ClearNode(int k){\n        p[k].val=p[k].lazy=p[k].minn=p[k].maxx=p[k].op=p[k].len=0;\n    }\n    inline void Build(int k,int l,int r){\n        if(l==r){\n            p[k].val=a[l];p[k].minn=p[k].maxx=a[l];p[k].len=1;\n            return;\n        }\n        ClearNode(k);\n        int mid=(l+r)>>1;\n        Build(k*2,l,mid);Build(k*2+1,mid+1,r);\n        Pushup(k);\n    }\n    inline void A(int k,ll x){\n        p[k].val=x*(ll)p[k].len;p[k].lazy=x;p[k].maxx=p[k].minn=x;\n        p[k].op=1;\n    }\n    inline void Pushdown(int k){\n        A(k*2,p[k].lazy);A(k*2+1,p[k].lazy);\n        p[k].lazy=0;p[k].op=0;\n    }\n    inline void ChangeInt(int k,int l,int r,int z,int y,int x){\n        if(l==z&&r==y){\n            A(k,x);return;\n        }\n        if(p[k].op) Pushdown(k);\n        int mid=(l+r)>>1;\n        if(y<=mid) ChangeInt(k*2,l,mid,z,y,x);\n        else if(z>mid) ChangeInt(k*2+1,mid+1,r,z,y,x);\n        else ChangeInt(k*2,l,mid,z,mid,x),ChangeInt(k*2+1,mid+1,r,mid+1,y,x);\n        Pushup(k);\n    }\n    inline void ChangePhi(int k,int l,int r,int z,int y){\n        if(p[k].maxx==p[k].minn&&l==z&&r==y){\n            int phi=Phi[p[k].minn];\n            A(k,phi);return;\n        }\n        if(p[k].op) Pushdown(k);\n        int mid=(l+r)>>1;\n        if(y<=mid) ChangePhi(k*2,l,mid,z,y);\n        else if(z>mid) ChangePhi(k*2+1,mid+1,r,z,y);\n        else ChangePhi(k*2,l,mid,z,mid),ChangePhi(k*2+1,mid+1,r,mid+1,y);\n        Pushup(k);\n    }\n    inline ll AskSum(int k,int l,int r,int z,int y){\n        if(l==z&&r==y) return p[k].val;\n        if(p[k].op) Pushdown(k);\n        int mid=(l+r)>>1;\n        if(y<=mid) return AskSum(k*2,l,mid,z,y);\n        else if(z>mid) return AskSum(k*2+1,mid+1,r,z,y);\n        else return AskSum(k*2,l,mid,z,mid)+AskSum(k*2+1,mid+1,r,mid+1,y);\n    }\n};\nDS ds;\n\nint t;\n\nsigned main(){\n    // freopen(\"my.in\",\"r\",stdin);\n    // freopen(\"my.out\",\"w\",stdout);\n    read(t);\n    GetPhi();\n    while(t--){\n        read(n);read(m);\n        for(int i=1;i<=n;i++) read(a[i]);\n        ds.Build(1,1,n);\n        for(int i=1;i<=m;i++){\n            int op,l,r;\n            read(op);read(l);read(r);\n            if(op==1){\n                ds.ChangePhi(1,1,n,l,r);\n            }\n            else if(op==2){\n                int x;read(x);\n                ds.ChangeInt(1,1,n,l,r,x);\n            }\n            else{\n                ll ans=ds.AskSum(1,1,n,l,r);\n                printf(\"%lld\\n\",ans);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1627702409,
        "uid": 194093,
        "name": "\u5929\u68a6",
        "ccfLevel": 6,
        "title": "CF1149C Tree Generator\u2122"
    },
    {
        "content": "[$\\color{plum}\\mathtt{600AC}$](https://www.luogu.com.cn/problem/CF1149C) \u9898\u89e3\u3002\n\n\u9996\u5148\u663e\u7136\u5e8f\u5217\u4e0a\u4e24\u4e2a\u70b9 $u,v$ \u7684\u8ddd\u79bb\u5c31\u662f\u5c06\u8fd9\u4e2a\u62ec\u53f7\u5e8f\u5217\u5339\u914d\u7684\u62ec\u53f7\u5220\u9664\u6389\uff0c\u5269\u4e0b\u7684\u62ec\u53f7\u4e2a\u6570\u3002\n\n\u6240\u4ee5\u7b54\u6848\u5373\u6c42\u51fa\u6700\u5927\u7684\u533a\u95f4\u4f7f\u5f97\u91cc\u9762**\u4e0d\u5339\u914d\u7684\u62ec\u53f7\u6700\u591a**\u3002\n\n\u5355\u70b9\u4fee\u6539\uff0c\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u3002\n\n\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u65f6\uff0c\u5047\u8bbe\u5de6\u533a\u95f4\u53f3\u62ec\u53f7\u6570\u4e3a $a$ \uff0c\u5de6\u62ec\u53f7\u6570\u4e3a $b$ \uff0c\u53f3\u533a\u95f4\u53f3\u62ec\u53f7\u6570\u4e3a $c$ \uff0c\u5de6\u62ec\u53f7\u6570\u4e3a $d$ \u3002\u5408\u5e76\u65f6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $a\\ +\\mid b-c\\mid +\\ d$ \uff0c\u52a0\u4e0a\u7edd\u5bf9\u503c\u8fd8\u8981\u7ef4\u62a4\u6b63\u8d1f\u6027\uff0c\u76f4\u63a5\u6362\u6210 $\\max\\{a+b-c+d,a-b+c+d\\}$  \u3002\n\n\u7531\u4e8e\u7b54\u6848\u6c42\u7684\u662f $\\max$ \u503c\uff0c\u6211\u4eec\u8003\u8651\u628a\u8fd9\u73a9\u610f\u5206\u5f00\u6765\u6c42\u3002\u7531\u4e0a\u5f0f\u5f97\u51fa\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6811\u4e0a\u7684\u70b9\u53ea\u9700\u7ef4\u62a4\u5176**\u540e\u7f00\u5de6\u62ec\u53f7+\u540e\u7f00\u53f3\u62ec\u53f7\u3001\u540e\u7f00\u5de6\u62ec\u53f7-\u540e\u7f00\u53f3\u62ec\u53f7\u3001\u524d\u7f00\u53f3\u62ec\u53f7+\u524d\u7f00\u5de6\u62ec\u53f7\u3001\u524d\u7f00\u53f3\u62ec\u53f7-\u524d\u7f00\u5de6\u62ec\u53f7**\u7684\u503c\u5373\u53ef\u3002\n\n\u5982\u4f55\u7ef4\u62a4\u5c31\u8981\u770b\u4ee3\u7801\u7ec6\u8282\u4e86\uff0c\u62ec\u53f7\u52a0\u52a0\u51cf\u51cf\u4e0d\u5bb9\u6613\u8bf4\u660e\uff08\u597d\u5427\u5176\u5b9e\u662f\u61d2\uff09![](https://\u5567.tk/doge)\n\n\u4ee3\u7801\u51fa\u5947\u5730\u7b80\u6d01\uff0c\u4e0d\u8d85 $\\mathtt {100}$ \u884c\u3002\n\n$\\mathtt{3.3s}$ \uff0c~~\u7b97\u662f\u4eba\u50bb\u5e38\u6570\u5927\u5427~~\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nnamespace mystd {\n    inline int read() {\n        int w = 1, q = 0;\n        char ch = ' ';\n        while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n        if (ch == '-') w = -1, ch = getchar();\n        while (ch >= '0' && ch <= '9') q = q * 10 + ch - '0', ch = getchar();\n        return w * q;\n    }\n    inline void write(int x) {\n        if (x < 0) {\n            x = ~(x - 1);\n            putchar('-');\n        }\n        if (x > 9) write(x / 10);\n        putchar(x % 10 + '0');\n    }\n}\nusing namespace std;\nusing namespace mystd;\n\nconst int maxn = 1e6 + 100;\nint n, m;\nchar ch[maxn];\n\n#define max2 max\n#define max3(x, y, z) max2(x, max2(y, z))\n#define max4(x, y, z, w) max2(max2(x, y), max2(z, w))\nint get(char x) { return x == '(' ? 1 : -1; }\nstruct segtree {\n    #define ls(x) x << 1\n    #define rs(x) x << 1 | 1\n    int a[maxn << 2], b[maxn << 2], c[maxn << 2], d[maxn << 2], l[maxn << 2], r[maxn << 2], t[maxn << 2];\n    void pushup(int x) {\n        if (l[ls(x)] <= r[rs(x)]) {\n            l[x] = l[rs(x)];\n            r[x] = r[rs(x)] - l[ls(x)] + r[ls(x)];\n        } else {\n            l[x] = l[ls(x)] - r[rs(x)] + l[rs(x)];\n            r[x] = r[ls(x)];\n        }\n        a[x] = max3(a[rs(x)], a[ls(x)] + l[rs(x)] - r[rs(x)], b[ls(x)] + r[rs(x)] + l[rs(x)]);\n        b[x] = max2(b[rs(x)], b[ls(x)] + r[rs(x)] - l[rs(x)]);\n        c[x] = max2(c[ls(x)], l[ls(x)] - r[ls(x)] + c[rs(x)]);\n        d[x] = max3(d[ls(x)], l[ls(x)] + r[ls(x)] + c[rs(x)], r[ls(x)] - l[ls(x)] + d[rs(x)]);\n        t[x] = max4(a[ls(x)] + c[rs(x)], b[ls(x)] + d[rs(x)], t[ls(x)], t[rs(x)]);\n    }\n    void build(int ls, int rs, int x) {\n        if (ls == rs) {\n            int chk = get(ch[ls]);\n            a[x] = d[x] = 1;\n            b[x] = max2(-chk, 0);\n            c[x] = max2(chk, 0);\n            l[x] = (chk == 1);\n            r[x] = (chk == -1);\n            t[x] = 1;\n            return;\n        }\n        int mid = (ls + rs) >> 1;\n        build(ls, mid, ls(x));\n        build(mid + 1, rs, rs(x));\n        pushup(x);\n    }\n    void update(int ls, int rs, int pos, int chk, int x) {\n        if (ls == rs) {\n            a[x] = d[x] = 1;\n            b[x] = max2(-chk, 0);\n            c[x] = max2(chk, 0);\n            l[x] = (chk == 1);\n            r[x] = (chk == -1);\n            t[x] = 1;\n            return;\n        }\n        int mid = (ls + rs) >> 1;\n        if (pos <= mid) update(ls, mid, pos, chk, ls(x));\n        else update(mid + 1, rs, pos, chk, rs(x));\n        pushup(x);\n    }\n} st;\n\nint main() {\n    n = read();\n    m = read();\n    scanf(\"%s\", ch + 1);\n    n = strlen(ch + 1);\n    st.build(1, n, 1);\n    write(st.t[1]);\n    puts(\"\");\n    for (int i = 1, x, y; i <= m; i++) {\n        x = read();\n        y = read();\n        st.update(1, n, x, get(ch[y]), 1);\n        st.update(1, n, y, get(ch[x]), 1);\n        swap(ch[x], ch[y]);\n        write(st.t[1]);\n        puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1626594058,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF1149C Tree Generator\u2122 \u9898\u89e3"
    },
    {
        "content": "\u663e\u7136\u76f4\u5f84\u7684\u4e24\u7aef\u662f\u53f6\u5b50\uff0c\u62ec\u53f7\u5e8f\u5217\u4e0a\u7684\u53f6\u5b50\u662f$()$\n\n\u7ecf\u8fc7\u89c2\u5bdf\uff0c\u4e0d\u96be\u5f97\u51fa\u8ba1\u7b97\u4e24\u4e2a\u53f6\u5b50\u95f4\u8def\u5f84\u7684\u65b9\u6cd5\u3002\n\n\n$((($**()**$)))($**()**$)$ \u5bf9\u4e8e\u90a3\u4e24\u4e2a\u52a0\u7c97\u7684\u62ec\u53f7\u6765\u8bf4\uff0c\u5b83\u4eec\u5728\u5bf9\u5e94\u6811\u4e0a\u7684\u8ddd\u79bb\u5c31\u662f\u4e8c\u8005\u4e4b\u95f4\u7684\u8fd9\u4e9b\u5de6\u53f3\u62ec\u53f7\u7684\u6570\u91cf\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u822c\u7684\u60c5\u51b5\u5462\uff1f\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u8ba1\u7b97\u5b83\u5de6\u53f3\u4e24\u8fb9\u7684\u4e0d\u5339\u914d\u62ec\u53f7\u6570\u91cf\u4e4b\u548c\u5373\u53ef\n\n\u5177\u4f53\u6765\u8bf4\uff1a\u8bbe\u9700\u8981\u8ba1\u7b97\u8ddd\u79bb\u7684\u4e24\u4e2a\u8282\u70b9\u5206\u522b\u5728 $l,r$\uff0c\u90a3\u4e2a\u5408\u9002\u7684\u4f4d\u7f6e\u5728 $k$ \uff0c\u5219 $d = sum_l + sum_r - 2 \\times sum_k$\uff0c\u8fd9\u91cc $sum$ \u4ee3\u8868\u5de6\u62ec\u53f7\u4e3a1\uff0c\u53f3\u62ec\u53f7\u4e3a-1\u7684\u524d\u7f00\u548c\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u663e\u7136\u8fd9\u4e2a\u5408\u9002\u7684\u4f4d\u7f6e $k$ \u4e00\u5b9a\u4f7f\u5f97 $sum_k=\\min\\limits_{l < i < r}sum_i$\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u533a\u95f4\u4fee\u6539\uff0c\u5e76\u6c42\u51fa\uff1a\n\n$\\min\\limits_{l < k < r}sum_l + sum_r - 2 \\times sum_k$\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#define lc(x) ((x) << 1)\n#define rc(x) ((x) << 1 | 1)\n#define maxn 200005\n#define N 800005\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nint n, q, a[maxn], sum[maxn], p1, p2;\nchar s[maxn];\nint t[N][5], tag[N]; \nvoid pushdown(int x)\n{\n\ttag[lc(x)] += tag[x];\n\tt[lc(x)][0] += tag[x];\n\tt[lc(x)][1] += tag[x];\n\tt[lc(x)][2] -= tag[x];\n\tt[lc(x)][3] -= tag[x];\n\ttag[rc(x)] += tag[x];\n\tt[rc(x)][0] += tag[x];\n\tt[rc(x)][1] += tag[x];\n\tt[rc(x)][2] -= tag[x];\n\tt[rc(x)][3] -= tag[x];\n\ttag[x] = 0;\n}\nvoid pushup(int x)\n{\n\tt[x][0] = max(t[lc(x)][0], t[rc(x)][0]);\n\tt[x][1] = min(t[lc(x)][1], t[rc(x)][1]);\n\tt[x][2] = max(max(t[lc(x)][2], t[rc(x)][2]), t[lc(x)][0] - 2 * t[rc(x)][1]);\n\tt[x][3] = max(max(t[lc(x)][3], t[rc(x)][3]), t[rc(x)][0] - 2 * t[lc(x)][1]);\n\tt[x][4] = max(max(t[lc(x)][4], t[rc(x)][4]), max(t[lc(x)][0] + t[rc(x)][3], t[lc(x)][2] + t[rc(x)][0]));\n}\nvoid build(int x, int l, int r)\n{\n\tif(l == r)\n\t{\n\t\tt[x][0] = t[x][1] = sum[l];\n\t\tt[x][2] = t[x][3] = t[x][4] = -INF;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(lc(x), l, mid);\n\tbuild(rc(x), mid + 1, r);\n\tpushup(x);\n}\nvoid add(int x, int l, int r, int a, int b, int data)\n{\n\tif(a <= l && r <= b)\n\t{\n\t\ttag[x] += data;\n\t\tt[x][0] += data;\n\t\tt[x][1] += data;\n\t\tt[x][2] -= data;\n\t\tt[x][3] -= data;\n\t\treturn;\n\t}\n\tpushdown(x);\n\tint mid = (l + r) >> 1;\n\tif(a <= mid) add(lc(x), l, mid, a, b, data);\n\tif(b > mid) add(rc(x), mid + 1, r, a, b, data);\n\tpushup(x);\n}\nint main()\n{\n\tscanf(\"%d%d%s\", &n, &q, s + 1);\n\tn = 2 * (n - 1);\n\tfor (int i = 1; i <= n; i++) \n\t{\n\t\ta[i] = (s[i] == '(' ? 0 : 1); \n\t\tsum[i] = sum[i - 1] - a[i] * 2 + 1;\n\t}\n\tbuild(1, 1, n);\n\tprintf(\"%d\\n\", max(t[1][0], t[1][4]));\n\tfor (int i = 1; i <= q; i++)\n\t{\n\t\tscanf(\"%d%d\", &p1, &p2);\n\t\tif(p1 > p2) swap(p1, p2);\n\t\tif(a[p1] != a[p2]) add(1, 1, n, p1, p2 - 1, a[p1] * 4 - 2);\n\t\tswap(a[p1], a[p2]);\n\t\tprintf(\"%d\\n\", max(t[1][0], t[1][4]));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1611490529,
        "uid": 46817,
        "name": "xcyle",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1149C \u3010Tree Generator\u2122\u3011"
    },
    {
        "content": "### CF1149C Tree Generator\u2122\n\n\u4e0d\u80fd\u66b4\u529b\u5efa\u6811\uff0c\u8003\u8651\u4ece\u62ec\u53f7\u5e8f\u5165\u624b\u3002\n\n\u8054\u60f3\u6811\u4e0a\u83ab\u961f\u7684\u70b9\u62ec\u53f7\u5e8f\u5217\uff0c\u4e00\u6bb5\u533a\u95f4\u53bb\u6389\u5339\u914d\u62ec\u53f7\u5269\u4e0b\u7684\u62ec\u53f7\u5bf9\u5e94\u7684\u70b9\u5373\u4e3a\u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u6709\u7279\u6b8a\u60c5\u51b5\u3002\n\n\u5219\u8fd9\u91cc\u8fb9\u62ec\u53f7\u5e8f\u5217\uff0c\u53d1\u73b0\u7279\u6b8a\u60c5\u51b5\u90fd\u7ed9\u4f60\u7701\u6389\u4e86\uff0c\u90a3\u4e48\u4e00\u6761\u8def\u5f84\u5bf9\u5e94\u4e00\u4e2a\u533a\u95f4\u53bb\u6389\u5339\u914d\u62ec\u53f7\u3002\n\n\u90a3\u4e48\u6709\uff0c**\u6811\u4e0a\u76f4\u5f84\u957f\u5ea6\u4e3a\u4efb\u610f\u533a\u95f4\u53bb\u6389\u5339\u914d\u62ec\u53f7\u540e\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002**\n\n\u8003\u8651\u5982\u4f55\u4ee3\u6570\u53bb\u9664\u5339\u914d\u62ec\u53f7\uff0c\u6811\u4e0a\u83ab\u961f\u662f\u5224\u5947\u5076\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8bbe\u5de6\u7aef\u70b9\u4e3a $1$\uff0c\u53f3\u7aef\u70b9\u4e3a $-1$\u3002\n\n\u95ee\u9898\u53d8\u4e3a\u627e\u5230\u76f8\u90bb\u7684\u4e24\u6bb5\uff0c\u4f7f\u540e\u4e00\u6bb5\u7684\u6570\u5b57\u548c\u51cf\u524d\u4e00\u6bb5\u7684\u6570\u5b57\u548c\u7684\u5dee\u6700\u5927\uff0c\u8fd9\u4e2a\u5dee\u5c31\u662f\u7b54\u6848\u3002 \n\n\u56e0\u4e3a\u540e\u4e00\u6bb5\u7684\u6570\u5b57\u548c\uff0c\u5bf9\u5e94\u4e00\u6761\u5411\u4e0b\u7684\u94fe\uff0c\u524d\u4e00\u6bb5\u7684\u6570\u5b57\u548c\u5bf9\u5e94\u4e00\u6761\u5411\u4e0a\u7684\u94fe\uff0c\u51cf\u53bb\u662f\u56e0\u4e3a\u5411\u4e0a\u7684\u94fe\u7684\u975e\u5339\u914d\u62ec\u53f7\u6570\u8ba1\u7b97\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u5373 $1\u3001-1$ \u4ea4\u6362\u3002\n\n\u533a\u95f4\u6700\u5927\u5dee\uff0c\u8003\u8651\u7ef4\u62a4\u533a\u95f4\u524d\u540e\u7f00\u6700\u5927\u5dee\u4ee5\u53ca\u6574\u4e2a\u533a\u95f4\u7684\u6700\u5927\u5dee\u3002\n\n\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u524d\u540e\u7f00\u6700\u5927\u6700\u5c0f\u5b50\u6bb5\u548c\u8f85\u52a9\u8ba1\u7b97\u3002\n\n\u4e00\u68f5\u7ebf\u6bb5\u6811\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n//#define int long long\ntypedef long long ll;\n#define ha putchar(' ')\n#define he putchar('\\n')\n\ninline int read()\n{\n\tint o = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t\to = o * 10 + c - '0', c = getchar();\n\treturn o * f;\n}\n\ninline void write(int o)\n{\n\tif(o < 0)\n\t{\n\t\tputchar('-');\n\t\to = -o;\n\t}\n\tif(o > 9)\n\t\twrite(o / 10);\n\tputchar(o % 10 + '0');\n}\n\nconst int _ = 2e5 + 10;\n\nint n, q;\n\nint tr[_ << 2], su[_ << 2], lm[_ << 2], rm[_ << 2], ln[_ << 2], rn[_ << 2], ld[_ << 2], rd[_ << 2], zd[_ << 2];\n\n// m \u5927 n \u5c0f d \u53f3\u51cf\u5de6\n\nchar s[_];\n\nvoid pushup(int o)\n{\n\tsu[o] = su[o << 1] + su[o << 1 | 1];\n\tlm[o] = max(lm[o << 1], su[o << 1] + lm[o << 1 | 1]);\n\trm[o] = max(rm[o << 1 | 1], su[o << 1 | 1] + rm[o << 1]);\n\tln[o] = min(ln[o << 1], su[o << 1] + ln[o << 1 | 1]);\n\trn[o] = min(rn[o << 1 | 1], su[o << 1 | 1] + rn[o << 1]);\n\t\n\tld[o] = max(ld[o << 1], max(ld[o << 1 | 1] - su[o << 1], zd[o << 1] + lm[o << 1 | 1]));\n\trd[o] = max(rd[o << 1 | 1], max(su[o << 1 | 1] + rd[o << 1], zd[o << 1 | 1] - rn[o << 1]));\n\t\n\tzd[o] = max(zd[o << 1] + su[o << 1 | 1], zd[o << 1 | 1] - su[o << 1]);\n\ttr[o] = max(max(ld[o << 1 | 1] - rn[o << 1], rd[o << 1] + lm[o << 1 | 1]), max(tr[o << 1], tr[o << 1 | 1]));\n}\n\nvoid build(int o, int l, int r)\n{\n\tif(l == r)\n\t{\n\t\tint v = s[l] == '(' ? 1 : -1;\n\t\tsu[o] = v;\n\t\tlm[o] = rm[o] = max(v, 0);\n\t\tln[o] = rn[o] = min(v, 0);\n\t\tld[o] = rd[o] = zd[o] = tr[o] = 1;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(o << 1, l, mid), build(o << 1 | 1, mid + 1, r);\n\tpushup(o);\n}\n\nvoid upd(int o, int l, int r, int p, int v)\n{\n\tif(l == r)\n\t{\n\t\tsu[o] = v;\n\t\tlm[o] = rm[o] = max(v, 0);\n\t\tln[o] = rn[o] = min(v, 0);\n\t\tld[o] = rd[o] = zd[o] = tr[o] = 1;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(p <= mid) upd(o << 1, l, mid, p, v);\n\telse upd(o << 1 | 1, mid + 1, r, p, v);\n\tpushup(o);\n}\n\nsigned main()\n{\n\tn = read(), q = read();\n\tscanf(\"%s\", s + 1);\n\tn = (n - 1) << 1;\n\tbuild(1, 1, n);\n\twrite(tr[1]), he;\n\tint a, b;\n\twhile(q--)\n\t{\n\t\ta = read(), b = read();\n\t\tif(s[a] != s[b])\n\t\t{\n\t\t\tswap(s[a], s[b]);\n\t\t\tupd(1, 1, n, a, s[a] == '(' ? 1 : -1);\n\t\t\tupd(1, 1, n, b, s[b] == '(' ? 1 : -1);\n\t\t}\n\t\twrite(tr[1]), he;\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1659355953,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF1149C Tree Generator\u2122"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u62ec\u53f7\uff08\u4fdd\u8bc1\u8fd8\u662f\u5408\u6cd5\uff09\u6c42\u8fd9\u4e2a\u62ec\u53f7\u5e8f\u5217\u5bf9\u5e94\u7684\u6811\u7684\u76f4\u5f84\n\nOrz zsy\u78be\u6807\u7b97\n\n\u76f4\u5f84\u76f8\u5f53\u4e8e\u9009\u4e00\u6bb5\uff0c\u5339\u914d\u5b8c\u62ec\u53f7\u4ee5\u540e\u5269\u4e0b\u6700\u591a\u7684\u62ec\u53f7\u6570\n\n\u7136\u540e\uff08\u56e0\u4e3azsy\u592a\u5f3a\u4e86\uff09\u7b49\u4e8e\u8fd9\u4e00\u6bb5\u5206\u6210\u4e24\u6bb5\u540e\u9762\u7684\u6743\u503c\u548c-\u524d\u9762\u7684\u6743\u503c\u548c\u6700\u5927\u503c\uff0c\u5176\u4e2d\u5de6\u62ec\u53f7\u6743\u503c\u4e3a1\uff0c\u53f3\u62ec\u53f7\u4e3a-1\uff0c\u8bc1\u660e\u663e\u7136\n\n\u6240\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u4e00\u5806\u4e1c\u897f\u3002\u3002\u3002\u5c31\u884c\u4e86\n\n\u8981\u7ef4\u62a4\u7684\uff1a\u6700\u5927/\u6700\u5c0f\u524d/\u540e\u7f00\u548c\uff0c\u6700\u5927\u524d/\u540e\u7f00\u7684$d$\u503c\uff0c\u5e8f\u5217\u6574\u4f53$d$\u503c\uff0c\u6743\u503c\u548c\uff0c\u7b54\u6848\n\n\u4e00\u6bb5\u7684$d$\u503c\u5c31\u662f\u5c06\u8fd9\u4e00\u6bb5\u5206\u6210\u4e24\u6bb5\u540e-\u524d\u6743\u503c\u6700\u5927\u503c\n\nhttps://www.cnblogs.com/xzz_233/p/10798276.html",
        "postTime": 1556674767,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1149C \u3010Tree Generator\u2122\u3011"
    },
    {
        "content": "\u9996\u5148\u628a\u8fb9\u4e0a\u7684\u62ec\u53f7\u5e8f\u8f6c\u6362\u6210\u4e0d\u5b8c\u6574\u7684\u70b9\u4e0a\u62ec\u53f7\u5e8f\uff1a\u628a\u6bcf\u6761\u8fb9\u4e0a\u7684\u62ec\u53f7\u4e0b\u653e\u5230\u5b83\u6240\u6307\u5411\u7684\u513f\u5b50\u5904\uff0c\u9898\u8bbe\u5e8f\u5217\u5c31\u53d8\u6210\u4e86\u201c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\u6574\u68f5\u6811\uff0c\u9664\u6839\u7ed3\u70b9\u5916\uff0c\u6bcf\u5f00\u59cb\u8bbf\u95ee\u548c\u7ed3\u675f\u8bbf\u95ee\u67d0\u4e2a\u7ed3\u70b9\u7684\u5b50\u6811\u65f6\u5206\u522b\u5c06\u4e00\u4e2a `(` \u548c\u4e00\u4e2a `)` \u6dfb\u52a0\u81f3\u5e8f\u5217\u672b\u5c3e\u201d\u6240\u6700\u7ec8\u5f62\u6210\u7684\u62ec\u53f7\u5e8f\u3002\u501f\u9274\u6811\u4e0a\u83ab\u961f\u7684\u65b9\u5f0f\u65b9\u6cd5\u53ef\u77e5\u8fd9\u4e2a\u62ec\u53f7\u5e8f\u7684\u5b50\u4e32\u4eec \u53bb\u6389\u5339\u914d\u62ec\u53f7\u540e\u7684\u957f\u5ea6\uff08\u4ee5\u4e0b\u7b80\u79f0\u201c\u53bb\u5339\u957f\u201d\uff09\u53ef\u4ee5**\u6ee1\u5c04**\u5230\u6811\u4e0a\u4efb\u610f\u4e00\u6761\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u4e14\u5b83\u4eec\u76f8\u7b49\uff08\u5b9e\u9645\u4e0a\u662f\u5b50\u4e32\u53bb\u6389\u5339\u914d\u62ec\u53f7\u540e\u53ef\u4ee5\u76f4\u63a5\u6ee1\u5c04\u5230\u8def\u5f84\u4e0a\uff0c\u611f\u6027\u7406\u89e3\uff09\uff1a\n\n$$\\forall u\\in[1,n]\\land v\\in[1,n]\\land u\\le v,\\exists i\\in[1,2n-2]\\land j\\in [1,2n-2]\\land i\\le j,f((i,j))=(u,v)$$\n\n\u5176\u4e2d $f$ \u662f\u4e00\u79cd\u5947\u602a\u7684\u6620\u5c04\uff0c\u5177\u4f53\u53ef\u4ee5\u8bbf\u95ee[\u8fd9\u7bc7blog](https://www.cnblogs.com/vanspace/p/Mos-algo-Naive.html)\u4e2d\u7684\u3010\u6811\u4e0a\u83ab\u961f\u3011\u7bc7\u5185\u5bb9\u3002\n\n\u4e8e\u662f\u6811\u7684\u76f4\u5f84\u53d8\u6210\u4e86\u3010\u5b50\u4e32\u4eec\u53bb\u5339\u957f\u7684\u6700\u5927\u503c\u3011\u3002\u8fd9\u4e1c\u897f\u5f88\u96be\u770b\uff0c\u8003\u8651\u5177\u8c61\u5316\uff0c\u8d4b\u4e88\u6bcf\u4e2a `(` $1$ \u7684\u6743\u503c\u4ee5\u53ca\u6bcf\u4e2a `)` $-1$ \u7684\u6743\u503c\uff0c\u4e00\u4e2a\u4e32\u7684\u53bb\u5339\u957f\u8f6c\u5316\u4e3a\u628a\u8fd9\u4e2a\u4e32\u5206\u6210\u4e24\u6bb5\uff08\u5747\u53ef\u4ee5\u4e3a\u7a7a\uff09\u540e \u540e\u9762\u4e00\u6bb5\u7684\u6743\u503c\u548c\u51cf\u53bb\u524d\u9762\u4e00\u6bb5\u7684\u6743\u503c\u548c \u7684\u6700\u5927\u503c\uff1a\n\n$$\\operatorname{lenextractmatch}(t)=\\max_{i=0}^{|t|} \\left(\\sum_{j=i+1}^{|t|} val(t_j)\\right)-\\left(\\sum_{j=1}^i val(t_j)\\right)$$\n\n\u8fd9\u4e2a\u4ecd\u7136\u53ef\u4ee5\u611f\u6027\u7406\u89e3\uff0c\u5206\u51fa\u6765\u7684\u540e\u9762\u90a3\u6bb5\u8981\u653e\u5c3d\u91cf\u591a\u7684 `(` \u4e5f\u5c31\u662f\u6743\u503c\u5c3d\u91cf\u5927\uff0c\u524d\u9762\u90a3\u6bb5\u8981\u653e\u5c3d\u91cf\u591a\u7684 `)` \u4e5f\u5c31\u662f\u6743\u503c\u5c3d\u91cf\u5c0f\uff0c\u52a0\u51cf\u7684\u8fc7\u7a0b\u4e2d\u5339\u914d\u7684 `(` \u548c `)` \u4f1a\u88ab\u81ea\u52a8\u6d88\u6389\u3002\n\n\u5916\u9762\u518d\u5957\u4e0a\u4e00\u5c42 $\\max$\uff0c\u6c42\u51fa\u4e00\u4e2a\u4e32 $S$ \u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u4e32 $t$ \u53bb\u5339\u957f\u7684\u6700\u5927\u503c\uff1a\n\n$$\\operatorname{maxsubstrlenextractmatch}(S)=\\max_{t\\in substr(S)} \\max_{i=0}^{|t|} \\left(\\sum_{j=i+1}^{|t|} val(t_j)\\right)-\\left(\\sum_{j=1}^i val(t_j)\\right)$$\n\n$$=\\max_{i=0}^{|S|} \\left(\\sum_{j=i+1}^{|S|} val(S_j)\\right)-\\left(\\sum_{j=1}^i val(S_j)\\right)$$\n\n\u505a\u5230\u8fd9\u4e00\u6b65\u9898\u76ee\u4e2d `swap` \u5df2\u7ecf\u6ca1\u6709\u4efb\u4f55\u6027\u8d28\u4e86\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7136\u540e\u6a21\u62df\u4e4b\u5373\u53ef\u3002\n\n\u91cd\u5934\u620f\u6765\u4e86\u3002\u6bcf\u4e2a\u7ed3\u70b9\u9700\u8981\u7ef4\u62a4 $7$ \u4e2a\u503c\uff08\u8bbe\u5176\u7ef4\u62a4\u7684\u533a\u95f4\u4e3a $[l,r]$\uff09\uff1a\n\n- `ans`\uff0c\u8be5\u7ed3\u70b9\u7b54\u6848\uff0c\u5373 $[l,r]$ \u8fd9\u4e2a\u5b50\u4e32\u7684\u6240\u6709\u5b50\u4e32\u4eec\u53bb\u5339\u957f\u7684\u6700\u5927\u503c\uff1b\n- `whans`\uff0c\u7528\u4e0a $[l,r]$ \u8fd9\u4e2a\u5b50\u4e32\u7684\u6240\u6709\u4f4d\u7f6e\u7ec4\u6210\u4e32\u7684\u53bb\u5339\u957f\uff0c\u4e5f\u5c31\u662f $[l,r]$ \u8fd9\u4e2a\u5b50\u4e32\u7684\u53bb\u5339\u957f\uff1b\n- `lans`\uff0c\u5305\u542b $l$ \u8fd9\u4e2a\u4f4d\u7f6e\u7684 $[l,r]$ \u7684\u5b50\u4e32\u7684\u53bb\u5339\u957f\u7684\u6700\u5927\u503c\uff0c\u5373\u524d\u7f00\u6700\u5927\u53bb\u5339\u957f\uff1b\n- `rans`\uff0c\u5305\u542b $r$ \u8fd9\u4e2a\u4f4d\u7f6e\u7684 $[l,r]$ \u7684\u5b50\u4e32\u7684\u53bb\u5339\u957f\u7684\u6700\u5927\u503c\uff0c\u5373\u540e\u7f00\u6700\u5927\u53bb\u5339\u957f\uff1b\n- `sum`\uff0c$[l,r]$ \u7684\u6743\u503c\u548c\uff1b\n- `lmx`\uff0c$[l,r]$ \u4e2d\u5305\u542b $l$ \u8fd9\u4e2a\u4f4d\u7f6e\u7684 $[l,r]$ \u7684\u5b50\u4e32\u7684\u6743\u503c\u548c\u6700\u5927\u503c\uff0c\u5373\u524d\u7f00\u6700\u5927\u6743\u503c\u548c\uff1b\n- `rmx`\uff0c$[l,r]$ \u4e2d\u5305\u542b $r$ \u8fd9\u4e2a\u4f4d\u7f6e\u7684 $[l,r]$ \u7684\u5b50\u4e32\u7684\u6743\u503c\u548c\u6700\u5927\u503c\uff0c\u5373\u540e\u7f00\u6700\u5927\u6743\u503c\u548c\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u5982\u4f55 `pushup` \u4e86\uff0c\u5341\u5206\u7684\u7b80\u5355\uff0c\u7b80\u5355\u5230\u7b14\u8005\u5728\u8d5b\u65f6AC\u672c\u9898\u7684 dalao \u7684\u5e2e\u52a9\u4e0b\u8c03\u4e866h\uff1a\n\n```cpp\nvoid updata(int x){\n    ans(x)=max(max(ans(ls(x)),ans(rs(x))),\n               max(lans(rs(x))-min(rmn(ls(x)),0),rans(ls(x))+max(lmx(rs(x)),0)));\n    whans(x)=max(whans(ls(x))+sum(rs(x)),whans(rs(x))-sum(ls(x)));\n    lans(x)=max(lans(ls(x)),max(whans(ls(x))+max(lmx(rs(x)),0),lans(rs(x))-sum(ls(x))));\n    rans(x)=max(rans(rs(x)),max(whans(rs(x))-min(rmn(ls(x)),0),rans(ls(x))+sum(rs(x))));\n    sum(x)=sum(ls(x))+sum(rs(x));\n    lmx(x)=max(lmx(ls(x)),sum(ls(x))+lmx(rs(x)));\n    rmn(x)=min(rmn(rs(x)),sum(rs(x))+rmn(ls(x)));\n}\n```",
        "postTime": 1659401382,
        "uid": 326780,
        "name": "Albert_van",
        "ccfLevel": 0,
        "title": "CF1149C\u9898\u89e3"
    }
]