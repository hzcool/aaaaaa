[
    {
        "content": "\u770b\u4e86\u524d\u51e0\u7bc7\u9898\u89e3\uff0c\u4f3c\u4e4e\u90fd\u6709\u70b9\u9ebb\u70e6\uff0c\u4e0b\u9762\u662f\u672c\u849f\u84bb\u7684\u60f3\u6cd5\n\n## \u68a6\u96ea\u7684\u601d\u8def\uff1a\n\n- $V$\u6570\u7ec4\uff1a\u7528\u6765\u5b58\u6bcf\u4e00\u5217\u6700\u5feb\u6d88\u5931\u7684\u65f6\u95f4\u3002\n\n- $h$\u6570\u7ec4\uff1a\u7528\u6765\u5b58\u6bcf\u4e00\u5217\u7684\u9ad8\u5ea6\u3002\n\n- $n$\uff1a\u5217\u7684\u6570\u91cf\u3002\n\n- $s$\uff1a\u5b58\u6700\u7ec8\u7ed3\u679c\u3002\n\n#### \u7edf\u8ba1\u6bcf\u4e00\u5217\u6700\u5feb\u80fd\u5728\u7b2c\u51e0\u6b21\u7206\u70b8\u540e\u6d88\u5931\u3002\n\n1. \u4ece\u5de6\u8fb9\u5f00\u59cb\uff0c\u5de6\u8fb9\u7684\u4e00\u5217\u90fd\u6ca1\u4e86\uff0c\u4e0b\u4e00\u6b21\u5c31\u80fd\u628a\u8fd9\u4e00\u5217\u70b8\u6389\uff0c\u5373$ v_i=v_{i-1}+1 $\u3002\n\n1. \u4ece\u53f3\u8fb9\u5f00\u59cb\uff0c\u53f3\u8fb9\u7684\u4e00\u5217\u90fd\u6ca1\u4e86\uff0c\u4e0b\u4e00\u6b21\u5c31\u80fd\u628a\u8fd9\u4e00\u5217\u70b8\u6389\uff0c\u5373$ v_i=v_{i+1}+1 $\u3002\n\n1. \u4ece\u9876\u7aef\u5f00\u59cb\u4e00\u76f4\u70b8\u5230\u5e95\u90e8\uff0c\u5373$v_i=h_i$\u3002\n\n1. \u4e0a\u9762\u4e09\u4e2a\u503c\u7684\u6700\u5c0f\u503c\u5373\u6bcf\u4e00\u5217\u6700\u5feb\u6d88\u5931\u7684\u901f\u5ea6\uff0c\u5373$v_i=min(min(h_i,v_{i+1}+1),v_{i-1}+1)$\u3002\n\n1. \u6240\u6709$v$\u7684\u6700\u5927\u503c\u5373\u6700\u7ec8\u7ed3\u679c\uff0c\u5373$s$\u3002\n\n## AC\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,s,h[100002],v[100002];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&h[i]);\n\tv[1]=1;\n\tfor(int i=2;i<n;i++)\n\t\tv[i]=min(v[i-1]+1,h[i]);//\u5148\u6bd4\u8f83\u4ece\u5de6\u8fb9\u548c\u4ece\u9876\u7aef\u5f00\u59cb\n\tv[n]=1;\n\tfor(int i=n-1;i>=0;i--)\n\t\tv[i]=min(v[i],v[i+1]+1);//\u518d\u6bd4\u8f83\u4ece\u53f3\u8fb9\u5f00\u59cb\n\tfor(int i=1;i<=n;i++)\n\t\ts=max(s,v[i]);//\u6240\u6709v\u7684\u6700\u5927\u503c\u5373\u6700\u7ec8\u7ed3\u679c\n\tprintf(\"%d\\n\",s);\n\treturn 0;\n}\n```\n\n\u671b\u901a\u8fc7QWQ",
        "postTime": 1608346970,
        "uid": 179601,
        "name": "\u68a6\u6e38\u7684\u5c0f\u96ea\u7403",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "~~\u5176\u5b9e\u8fd9\u9053\u9898\u6ca1\u60f3\u8c61\u4e2d\u90a3\u4e48\u96be~~\uff0c\u6a21\u62df\u5c31\u8fc7\u4e86\u3002\n\u4e0b\u9762\u6211\u4eec\u6765\u8bb2\u600e\u4e48\u6a21\u62df\u3002\n\n------------\n\u5f53\u6211\u4eec\u5c06\u8bfb\u5165\u7684\u6570\u7ec4\u6b63\u7740\u626b\u4e00\u904d\uff0c\u518d\u53cd\u7740\u626b\u4e00\u904d\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0\n\u6211\u4eec\u70b8\u6389\u7684\u65b9\u5757\u6570\u5373\u4e3aa[i]\u4e0ea[i+1]+1\u6216a[i-1]+1\u4e4b\u4e2d\u5c0f\u7684\u90a3\u4e2a\u6570\u3002\n\n\n------------\n\u77e5\u9053\u4e86\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u6a21\u62df\u6765\u6c42\u51fa\u70b8\u51e0\u6b21\u53ef\u4ee5\u70b8\u5b8c\u3002\n\u5728\u4e0b\u849f\u84bb\uff0c\u5927\u4f6c\u8def\u8fc7\u52ff\u55b7\u3002\n~~\u4ee3\u7801\u5de8\u4e11\uff0cqwq~~\n```pascal\nvar     i,j,n,m,k,t,x:longint;\n        a:array[0..1000000]of longint;\nfunction min(x,y:longint):longint;//min\u51fd\u6570\nbegin\n        if x>y then exit(y);\n        exit(x);\nend;\nfunction max(x,y:longint):longint;//max\u51fd\u6570\nbegin\n        if x>y then exit(x);\n        exit(y);\nend;\nbegin\n        readln(n);\n        for i:=1 to n do\n                read(a[i]);//\u9996\u5148\uff0c\u6211\u4eec\u8bfb\u5165a[i];\n        for i:=1 to n do\n                a[i]:=min(a[i],a[i-1]+1);//a[i]\u4e3aa[i]\u4e0ea[i-1]+1\u4e2d\u5c0f\u503c\n        for i:=n downto 1 do\n                a[i]:=min(a[i],a[i+1]+1);//a[i]\u4e3aa[i]\u4e0ea[i+1]+1\u4e2d\u5c0f\u503c\n        for i:=1 to n do\n                x:=max(x,a[i]);//x\u4e3aa[i]\u4e2d\u6700\u5927\u503c\n        writeln(x);\nend.\n```\n",
        "postTime": 1552463406,
        "uid": 35232,
        "name": "\u5357\u6a59\u672a\u719fk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u9898\u610f\u4e0d\u597d\u5199\uff0c\u5c31\u7565\u8fc7\u4e86\u3002\n\n$\\texttt{Data Range}:1\\leq n\\leq 10^5,1\\leq h_i\\leq 10^9$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13584641.html)\n\n\u8fd9\u795e\u4ed9\u9898\u5dee\u70b9\u628a\u6211\u7ed9\u5361\u6b7b\u3002\n\n\u9996\u5148\u8003\u8651\u4e00\u6b21\u64cd\u4f5c\u4f1a\u5bf9\u7b2c $i$ \u5217\u65b9\u5757\u7684\u9ad8\u5ea6\u6709\u4ec0\u4e48\u5f71\u54cd\uff0c\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n- \u5982\u679c\u8fd9\u5217\u65b9\u5757\u6bd4\u5de6\u8fb9\u4e00\u5217\u7684\u65b9\u5757\u9ad8\uff0c\u90a3\u4e48\u9ad8\u5ea6\u53d8\u4e3a $h_{i-1}$\u3002\n\n- \u5982\u679c\u8fd9\u5217\u65b9\u5757\u6bd4\u53f3\u8fb9\u4e00\u5217\u7684\u65b9\u5757\u9ad8\uff0c\u90a3\u4e48\u9ad8\u5ea6\u53d8\u4e3a $h_{i+1}$\u3002\n\n- \u5426\u5219\u6700\u4e0a\u9762\u4e00\u4e2a\u65b9\u5757\u603b\u662f\u8981\u88ab\u6d88\u53bb\u7684\uff0c\u9ad8\u5ea6\u53d8\u4e3a $h_{i}-1$\u3002\n\n\u4e09\u79cd\u60c5\u51b5\u53d6\u4e2a\u6700\u5c0f\u503c\u5f97\u5230 $h_i=\\min(h_{i-1},h_{i+1},h_i-1)$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4e24\u6b21\u64cd\u4f5c\u5bf9 $h_i$ \u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5148\u7b97\u51fa $h_{i-1},h_i,h_{i+1}$ \u4e00\u6b21\u64cd\u4f5c\u540e\u7684\u9ad8\u5ea6\uff0c\u5206\u522b\u4e3a\uff1a\n\n$$h_{i-1}=\\min(h_{i-2},h_{i},h_{i-1}-1),h_i=\\min(h_{i-1},h_{i+1},h_i-1),h_{i+1}=\\min(h_{i},h_{i+2},h_{i+1}-1)$$\n\n\u518d\u5957\u4e00\u904d\u516c\u5f0f\u6211\u4eec\u5f97\u5230\uff1a\n\n$$h_i=\\min(h_{i-2},h_{i-1}-1,h_i-2,h_{i+1}-1,h_{i+2})$$\n\n\u5229\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u6211\u4eec\u77e5\u9053 $k$ \u6b21\u64cd\u4f5c\u540e\u6709\n\n$$h_{i}=\\min(h_{i-k},h_{i-k+1}-1,\\cdots,h_{i}-k,\\cdots,h_{i+k})$$\n\n\u4e8e\u662f\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u8981\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u4f7f\u5f97 $h_{i}=0$ \u7684\u6700\u5c0f\u7684 $k$ \u7684\u6700\u5927\u503c\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5355\u72ec\u8003\u8651\u67d0\u4e2a $h_i$\uff0c\u7136\u540e\u8bb0 $k_j$ \u8868\u793a\u7531 $h_j$ \u7b97\u51fa\u6765\u7684 $k$ \u503c\u3002\n\n\u5bf9\u4e8e $j\\in[i-k,i]$ \u6765\u8bf4 $h_i=h_j-j+i-k_j$\uff0c\u5373 $k_j=h_j-j+i$\u3002\n\n\u540c\u7406\u5f97\u5230\u5bf9\u4e8e $j\\in[i,i+k]$ \u6765\u8bf4 $k_j=h_j+j-i$\u3002\n\n\u7531\u4e8e\u73b0\u5728 $i$ \u662f\u6052\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $h_j-j$ \u7684\u524d\u7f00\u6700\u5c0f\u503c\u548c $h_j+j$ \u7684\u540e\u7f00\u6700\u5c0f\u503c\u5373\u53ef\u3002\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u641e\u51fa\u6765\uff0c\u6ce8\u610f\u51e0\u4e2a\u5c0f\u7ec6\u8282\u5c31\u597d\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51,inf=0x3f3f3f3f; \nstruct SegmentTree{\n\tll l,r,mn,mn2;\n};\nSegmentTree tree[MAXN<<2];\nll n,res=-inf;\nll h[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\n#define ls node<<1\n#define rs (node<<1)|1\ninline void update(ll node)\n{\n\ttree[node].mn=min(tree[ls].mn,tree[rs].mn);\n\ttree[node].mn2=min(tree[ls].mn2,tree[rs].mn2);\n}\ninline void create(ll l,ll r,ll node)\n{\n\ttree[node]=(SegmentTree){l,r,0,0};\n\tif(l==r)\n\t{\n\t\treturn (void)(tree[node].mn=h[l]-l,tree[node].mn2=h[l]+l);\n\t}\n\tll mid=(l+r)>>1;\n\tcreate(l,mid,ls),create(mid+1,r,rs),update(node);\n}\ninline ll query(ll l,ll r,ll node)\n{\n\tif(l>r)\n\t{\n\t\treturn inf;\n\t}\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\treturn tree[node].mn;\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\treturn min(l<=mid?query(l,r,ls):inf,r>mid?query(l,r,rs):inf);\n}\ninline ll query2(ll l,ll r,ll node)\n{\n\tif(l>r)\n\t{\n\t\treturn inf;\n\t}\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\treturn tree[node].mn2;\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\treturn min(l<=mid?query2(l,r,ls):inf,r>mid?query2(l,r,rs):inf);\n}\n#undef ls\n#undef rs\nint main()\n{\n\tn=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\th[i]=read();\n\t}\n\tcreate(0,n+1,1);\n\tfor(register int i=0;i<=n+1;i++)\n\t{\n\t\tres=max(res,min(query(0,i,1)+i,query2(i,n+1,1)-i));\n\t}\n\tprintf(\"%d\\n\",res);\n}\n```",
        "postTime": 1598755726,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "\u5ba3\u4f20\u535a\u5ba2->[link](https://blog.csdn.net/BWzhuzehao/article/details/112493387)\n\n\u8fd9\u9053\u9898\u6709\u4e00\u70b9\u601d\u8003\u96be\u5ea6\uff0c\u9700\u8981\u6839\u636e\u9898\u610f\u4e0e\u6837\u4f8b\u6765\u601d\u8003\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651 $a_i$ \u5728\u51e0\u6b21\u4e4b\u540e\u4f1a\u964d\u4e3a 0\u3002\n\n\u63a5\u4e0b\u6765\u7684\u5206\u6790\u53ea\u8003\u8651\u8fd9\u4e2a\u67f1\u5b50\u4e0a\u9762\u88ab\u6467\u6bc1\u7684\u60c5\u51b5\uff0c\u4e0d\u8003\u8651\u5de6\u53f3\u7684\u67f1\u5b50\u9ad8\u5ea6\u4e3a 0 \u7684\u5f71\u54cd\u3002\n\n1. \u5982\u679c $a_i \\leq a_{i - 1}$ \u4e14 $a_i \\leq a_{i + 1}$\uff0c\u90a3\u4e48\u53ea\u6709\u6700\u4e0a\u9762\u7684\u683c\u5b50\u4f1a\u906d\u6b83\uff0c\u6d88\u8017\u6b21\u6570 $a_i$\u3002\n2. \u5426\u5219\uff0c$a_i = \\min{(a_{i - 1}, a_{i + 1})}$\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u66b4\u529b\u8ba1\u7b97\u3002\n\n\u4f46\u662f\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u5462\uff1f\n\n\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u8fd9\u79cd\u6c42\u6700\u5c0f\u503c\u7684\u9898\u76ee\uff0c\u901a\u5e38\u90fd\u53ef\u4ee5\u4f7f\u7528 dp \u6765\u89e3\u51b3\u3002\n\n\u8bbe $f_i$ \u4e3a\u7b2c $i$ \u6839\u67f1\u5b50\u88ab\u6467\u6bc1\u7684\u6b21\u6570\uff0c\u90a3\u4e48\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$$f_i = \\max{(f_{i - 1} + 1, a_i, f_{i + 1} + 1)}$$\n\n\u8003\u8651\u5230\u5bf9\u4e8e $f_i$ \u9700\u8981\u540c\u65f6\u7528\u5230\u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u636e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u505a\u4e24\u904d dp \u6765\u89e3\u51b3\u3002\n\n\u90a3\u4e48\u73b0\u5728\u518d\u6765\u8003\u8651\u5de6\u53f3\u4e24\u8fb9\u7684\u60c5\u51b5\u3002\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u8981\u5728\u5de6\u53f3\u4e24\u8fb9\u52a0\u4e0a\u4e00\u6839\u9ad8\u5ea6\u4e3a 0 \u7684\u865a\u62df\u67f1\u5b50\u4e0d\u5c31\u597d\u4e86qwq\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define Max(a, b) ((a > b) ? a : b)\n#define Min(a, b) ((a < b) ? a : b)\nusing namespace std;\n\ntypedef long long LL;\nconst int MAXN = 1e5 + 10;\nint n, a[MAXN], f[MAXN], ans;\n\nint read()\n{\n\tint sum = 0, fh = 1; char ch = getchar();\n\twhile (ch < '0' || ch > '9') {if (ch == '-') fh = -1; ch = getchar();}\n\twhile (ch >= '0' && ch <= '9') {sum = (sum << 3) + (sum << 1) + (ch ^ 48); ch = getchar();}\n\treturn sum * fh;\n}\n\nint main()\n{\n\tn = read();\n\tfor (int i = 1; i <= n; ++i) a[i] = read();\n\tfor (int i = 1; i <= n; ++i) f[i] = Min(f[i - 1] + 1, a[i]);\n\tfor (int i = n; i >= 1; --i) f[i] = Min(f[i + 1] + 1, f[i]);\n\tfor (int i = 1; i <= n; ++i) ans = Max(ans, f[i]);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1610370168,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "$$\\text{\u62c6\u65b9\u5757}$$\n\n$\\quad$\u8868\u793a\u5b8c\u5168\u770b\u4e0d\u61c2\u5176\u4ed6 $dalao$ \u7684\u7ebf\u6bb5\u6811\uff0c $st$ \u8868\u548c\u66fc\u54c8\u987f\u6700\u5c0f\u751f\u6210\u6811\u505a\u6cd5\uff0c\u4e8e\u662f\u81ea\u5df1\u5199\u4e00\u53d1\u9898\u89e3\u5e2e\u52a9\u5176\u4ed6\u50cf\u6211\u4e00\u6837\u7684\u849f\u84bb\u3002\n\n$\\quad$\u9996\u5148\u6211\u4eec\u4e0d\u5e94\u8be5\u628a\u65b9\u5757\u770b\u505a\u4e00\u4e2a\u4e00\u4e2a\u7684\uff0c\u800c\u662f\u4e00\u5217\u4e00\u5217\u7684\uff0c$l$ , $r$ \u5206\u522b\u6765\u8868\u793a\u8fd9\u5217\u65b9\u5757\u56e0\u5de6\u8fb9\uff0c\u53f3\u8fb9\u65e0\u65b9\u5757\u800c\u6d88\u5931\u7684\u65f6\u95f4\uff0c\u8bbe\u8fd9\u5217\u65b9\u5757\u7684\u7f16\u53f7\u4e3a $i$ \uff0c\u6d88\u5931\u65f6\u95f4\u4e3a $f_i$ \uff0c\u9ad8\u5ea6\u4e3a $h_i$ \uff0c\u8bbe\u5de6\u8fb9\u90a3\u5217\u7684\u65b9\u5757\u6d88\u5931\u65f6\u95f4\u4e3a $f_{i-1}$\uff0c\u8bbe\u53f3\u8fb9\u90a3\u5217\u7684\u65b9\u5757\u6d88\u5931\u65f6\u95f4\u4e3a $f_{i+1}$ \uff0c\u663e\u7136\u53ef\u4ee5\u5f97\u5230\n\n$$f_i=\\min(f_{i-1}+1,f_{i+1}+1,h_i)$$\n\n$\\quad$\u56e0\u4e3a\u5f53\u5de6\u8fb9\u7684\u65b9\u5757\u5168\u90e8\u6d88\u5931\u65f6\uff0c\u8fd9\u5217\u65b9\u5757\u663e\u7136\u4f1a\u5728\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6d88\u5931(\u82e5\u8fd9\u5217\u65b9\u5757\u4e4b\u524d\u6ca1\u6709\u6d88\u5931)\uff0c\u5f53\u53f3\u8fb9\u7684\u65b9\u5757\u5168\u90e8\u6d88\u5931\u65f6\uff0c\u8fd9\u5217\u65b9\u5757\u663e\u7136\u4f1a\u5728\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6d88\u5931(\u82e5\u8fd9\u5217\u65b9\u5757\u4e4b\u524d\u6ca1\u6709\u6d88\u5931)\uff0c\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u65f6\u95f4\u6bcf\u4e00\u5217\u65b9\u5757\u7684\u9ad8\u5ea6\u4f1a\u51cf $1$ \uff0c\u663e\u7136\u4e00\u5217\u65b9\u5757 $i$ \u6700\u591a\u5728 $h_i$ \u65f6\u6d88\u5931\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\n\n$$l_i=\\min(l_{i-1}+1,h_i$$\n\n$$r_i=\\min(r_{i+1}+1,h_i)$$\n\n$\\quad$\u8fd9\u9700\u8981\u4e24\u904d\u5faa\u73af\u5904\u7406\uff0c\u4ece\u5c0f\u5230\u5927\u5faa\u73af\u5904\u7406 $l_i$ \uff0c\u4ece\u5927\u5230\u5c0f\u5904\u7406 $r_i$ \uff0c\u6700\u540e\u7b2c $i$ \u5217\u65b9\u5757\u6d88\u5931\u7684\u65f6\u95f4\u5c31\u662f $\\min(l_i,r_i)$ \u3002\n\n$\\quad$\u5982\u679c\u8fd8\u4e0d\u7406\u89e3\u5c31\u770b\u770b\u6837\u4f8b\u7406\u89e3\u4e00\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/y2zkmk1x.png)![](https://cdn.luogu.com.cn/upload/image_hosting/5okwkt02.png)![](https://cdn.luogu.com.cn/upload/image_hosting/nyy9a1ci.png)\n\n$\\quad$\u6ce8\u610f\u4e00\u5b9a\u8981\u5148\u66f4\u65b0\u9ad8\u5ea6\uff0c\u5c06 $l_i$ \u548c $r_i$ \u521d\u59cb\u5316\u4e3a $h_i$ \u5373\u53ef\uff0c\u5982\u4e0a\u9762\u7b2c\u4e8c\u5217\uff0c\u540e\u9762 $l_i$ \u548c $r_i$ \u90fd\u4f1a\u53d7\u5230\u9ad8\u5ea6\u7684\u5f71\u54cd\u3002\n\n$\\quad$\u6781\u7b80\u4ee3\u7801\uff0c\u5173\u952e\u53ea\u6709\u4e09\u884c\uff01\uff01\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\n#define re register int\n#define int long long\n#define il inline\nil int read()\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nil void print(int x)\n{\n  if(x<0)putchar('-'),x=-x;\n  if(x/10)print(x/10);\n  putchar(x%10+'0');\n}\nconst int N=1e5+5;\nint n,ans,l[N],r[N];\nsigned main()\n{\n  n=read();\n  for(re i=1;i<=n;i++)l[i]=r[i]=read();//\u521d\u59cb\u5316\u5927\u5c0f\u4e3a\u9ad8\u5ea6\n  for(re i=1;i<=n;i++)l[i]=min(l[i],l[i-1]+1);//\u5904\u7406l\u6570\u7ec4\n  for(re i=n;i>=1;i--)r[i]=min(r[i],r[i+1]+1);//\u5904\u7406r\u6570\u7ec4\n  for(re i=1;i<=n;i++){ans=max(ans,min(r[i],l[i]));}//\u53d6\u6700\u5927\u7684\u8f83\u5c0f\u503c\n  print(ans);\n  return 0;\n}\n```",
        "postTime": 1605603558,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "\u8ddf\u673a\u623f\u5927\u4f6c\u601d\u8def\u4e0d\u5927\u4e00\u6837\uff0c\u672c\u9898\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u3002\n\n## \u9898\u610f\u6982\u8981\n\u7ed9\u5b9a\u4e00\u4e2a\u7531\u65b9\u5757\u7ec4\u6210\u7684\u56fe\u3002\n\n\u6bcf\u6b21\u5c06\u8fb9\u7f18\u7684\u65b9\u5757\u70b8\u6389\uff0c\u6c42\u51e0\u6b21\u80fd\u70b8\u5b8c\u3002\n\n## \u9898\u610f\u8f6c\u6362\n\u627e\u5230\u6700\u540e\u88ab\u70b8\u6389\u7684\u65b9\u5757\u5728\u7b2c\u51e0\u6b21\u88ab\u70b8\u6389\u3002\n\n# \u601d\u8def\n\n\u6700\u540e\u88ab\u70b8\u6389\u7684\u65b9\u5757\u4e4b\u4e00\u7edd\u5bf9\u5728\u5e95\u5c42!\n\n\u4ee5\u4e0b\u8bc1\u660e\u6765\u81ea\uff1a\n\n[\u67d0\u5927\u4f6c](https://www.luogu.com.cn/user/151791)\u3002\n\n###### \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b9\u5757\u800c\u8a00\uff0c\u5176\u4e0b\u65b9\u4e0d\u53ef\u80fd\u662f\u60ac\u7a7a\u7684\uff0c\u4e00\u5b9a\u4f1a\u5750\u843d\u5728\u5730\u9762\u6216\u5176\u5b83\u65b9\u5757\u4e0a\u65b9\uff0c\u800c\u552f\u6709\u5728\u60ac\u7a7a\u8fd9\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u7b54\u6848\u624d\u6709\u53ef\u80fd\u5206\u5e03\u5728\u6700\u4e0b\u9762\u4e00\u884c\u4e0a\u65b9\u7684\u65b9\u5757\u4e4b\u4e2d\uff0c\u5bf9\u4e8e\u6b64\u9898\u7684\u8f93\u5165\uff0c\u7b54\u6848\u5219\u4e00\u5b9a\u5206\u5e03\u5728\u6700\u4e0b\u9762\u4e00\u884c\u3002\n\u7531\u6b64\u53ef\u8bc1\u660e\u4e00\u4e2a\u91d1\u5b57\u5854\u578b\u662f\u6700\u201c\u7a33\u5b9a\u201d\u7684\uff0c\u6700\u540e\u70b8\u6389\u7684\u65b9\u5757\u4fbf\u662f\u91d1\u5b57\u5854\u5e95\u5c42\u4e2d\u5fc3\u3002\n\n\u5373\u5728\u56fe\u4e2d\u627e\u5230\u6700\u5927\u91d1\u5b57\u5854\u662f\u7b54\u6848\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hzcl1u5e.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qhvnh5g9.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/newkvpiu.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u4e8c\u5206\u91d1\u5b57\u5854\u5927\u5c0f\uff0c\u5224\u65ad\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u8be5\u91d1\u5b57\u5854\u3002\n\n# \u5b9e\u73b0\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4e8c\u5206\u5f97\u5230\u7b54\u6848\uff0c\u4ece\u5de6\u5411\u53f3\u904d\u5386\u56fe\u3002\n\n\u4e24\u4e2a\u6307\u9488\uff0c **$i$ \u4ee3\u8868\u5728\u56fe\u4e2d\u54ea\u4e00\u5217\uff0c$j$ \u4ee3\u8868\u5728\u91d1\u5b57\u5854\u4e2d\u54ea\u4e00\u5217\uff0c$a_i$ \u4ee3\u8868\u56fe\u4e0a\u7b2ci\u5217\u65b9\u5757\u9ad8\u5ea6\uff0c$b_j$ \u4ee3\u8868\u91d1\u5b57\u5854\u7b2cj\u5217\u7684\u9ad8\u5ea6**\u3002\n\n## \u6b65\u9aa4\u4e00\n\n**\u82e5 $b_j \\leq a_i$** \u8bc1\u660e\u56fe\u7684\u7b2c $i$ \u5217\u53ef\u4ee5\u5145\u5f53\u91d1\u5b57\u5854\u7684\u7b2c $j$ \u5217\uff0c\u4e8e\u662f $i++$ , $j++$\u3002\n\n\u5224\u65ad\u7b2c $i+1$ \u5217\u80fd\u5426\u5145\u5f53\u91d1\u5b57\u5854\u7684\u7b2c $j+1$ \u5217\u3002\n\n## \u6b65\u9aa4\u4e8c\n\n**\u82e5 $a_i<b_j$**  \u5219\u4ee3\u8868\u653e\u4e0d\u4e0b\u3002\n\n\u5c06 $j$ \u51cf\u5c0f\uff0c\u56e0\u4e3a\u5728\u91d1\u5b57\u5854\u5de6\u534a\u8fb9 $j$ \u8d8a\u5c0f $b_j$ \u8d8a\u5c0f\uff0c\u76f4\u5230\u653e\u7684\u4e0b\u4e3a\u6b62\u3002\n\n\u6b64\u65f6\u7684 $j$ \u51cf\u5c0f\u5230 $p$ \u3002\n\n\u56e0\u4e3a\u91d1\u5b57\u5854\u5de6\u534a\u8fb9\u9012\u589e\uff0c\u6240\u4ee5\u91d1\u5b57\u5854 $1$\uff5e$p$ \u5217\u3002\n\n\u5fc5\u7136\u5206\u522b\u5c0f\u4e8e\u7b49\u4e8e $(i-p+1)$ ~ $ i $ \u5217\u3002\n\n\u6b64\u65f6\u5c06 $i++$ ,$j++$ \u7ee7\u7eed\u5224\u65ad $b_{j+1},a_{i+1}$ \u7684\u5927\u5c0f\u3002\n\n## \u6b65\u9aa4\u4e09\n\n\u5f53 $j$ \u662f\u91d1\u5b57\u5854\u4e2d\u95f4\u5217\u5373\u6700\u957f\u5217\u5e76 $b_j \\leq a_i$ \u65f6\uff0c\u5224\u65ad\u540e\u7eed\u80fd\u5426\u5c06\u91d1\u5b57\u5854\u7684\u540e\u534a\u90e8\u5206\u5b8c\u6574\u653e\u5165\u3002\n\n\u82e5\u4e0d\u80fd\uff0c\u5219\u91cd\u590d\u6b65\u9aa4\u4e8c\u4e2d\u7684\u5c06 $j$ \u51cf\u5c0f\u76f4\u5230\u7b26\u5408\u8981\u6c42\uff08\u5373 $b_j \\leq a_i$ \uff09\n\u5e76\u91cd\u65b0\u6b65\u9aa4\u4e00\u3002\n\n\u82e5\u80fd\u5219\u8fd4\u56de $\\text{true}$\uff0c\u4f9d\u9760\u4e8c\u5206\u7ee7\u7eed\u5c1d\u8bd5\u66f4\u5927\u7684\u91d1\u5b57\u5854\u3002\n\n## \u6b65\u9aa4\u56db\n\n\u82e5\u6700\u540e $i$ \u904d\u5386\u5b8c\u6574\u4e2a\u5e8f\u5217\u4f9d\u7136\u6ca1\u6709\u7b26\u5408\u8981\u6c42\uff0c\u5219\u8fd4\u56de $\\text{false}$ \u3002\n\n## \u6b65\u9aa4\u4e94\n\n\u4e8c\u5206\u51fa\u6700\u5927\u91d1\u5b57\u5854\u540e\uff0c\uff08\u5e95\u8fb9\u5757\u6570+1\uff09/2\uff08\u5373\u7206\u70b8\u6b21\u6570\uff09\u3002\n\n# \u603b\u7ed3\n\n\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u6b21\u4e8c\u5206\u540e\u7684 $\\operatorname{check()}$ \u51fd\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\uff08\u5373\u6700\u591a $i$ \u4ece $1$ \u904d\u5386\u5230 $n$ \uff09\uff0c\n\u800c\u4e8c\u5206\u7b54\u6848\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\u3002\n\n\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a **$O(n \\log n)$**\u3002\n\n# \u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint inline read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1; ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0'; ch=getchar();}\n\treturn x*f;\n} \nstruct note{\n\tint v,num;\n}b[200000];\nint nex=1;\nint n,ans;\nint a[200000];\nbool check(int x){\n\tint nex=1;\n\tbool f=1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i]>=nex){ //\u56e0\u4e3a\u91d1\u5b57\u5854\u4e2db[nex]==nex\u6240\u4ee5\u76f4\u63a5\u7528nex\u6bd4\u8f83\n\t\t\tnex++; //\u7ee7\u7eed\u5224\u65ad\u4e0b\u4e00\u5217\u662f\u5426\u7b26\u5408\uff08\u6b65\u9aa4\u4e00\uff09\n\t\t\tif(nex-1==x){ //\u5df2\u7ecf\u6bd4\u8f83\u5b8c\u6b63\u4e2d\u95f4\u4e00\u5217\u5e76\u7b26\u5408\u8981\u6c42\n                                      \uff08\u4ee5\u4e0b\u4e3a\u6b65\u9aa4\u4e09\uff09\n\t\t\t\tf=0;\n\t\t\t\tfor(int j=i+1;j<=i+x-1;j++){\n\t\t\t\t\tif(a[j]<x-j+i){//\u540e\u534a\u90e8\u5206\u51fa\u73b0\u4e0d\u7b26\u5408\n\t\t\t\t\t\tnex=a[j]+1;//\u5c06nex\u51cf\u5c0f\u5230a[j]+1\n\t\t\t\t\t\ti=j; //\u5c06i\u79fb\u81f3j\uff08\u4e0b\u4e00\u6b65\u6bd4\u8f83a[i+1]\u548cb[nex]\uff09\n\t\t\t\t\t\tf=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(f==0){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tnex=a[i]+1; //\u6b65\u9aa4\u4e8c\n\t\t}\n\t}\n\tif(f)\n\t\treturn false;\n\treturn true;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){ \n\t\ta[i]=read();\n\t}\n\tint l=1,r=n/2+1,mid;\n\twhile(l<r){  //\u4e8c\u5206\uff08\u91d1\u5b57\u5854\u8fb9\u6570+1\uff09/2\uff0c\u5373\u53ef\u7206\u70b8\u6b21\u6570\n\t\tmid=(l+r+1)>>1;\n\t\tif(check(mid)){\n\t\t\tl=mid;\n\t\t}\n\t\telse\n\t\t\tr=mid-1;\t\t\n\t}\n\tprintf(\"%d\",l); //\u6b64\u65f6l\u5c31\u662f\u6700\u591a\u7206\u70b8\u6b21\u6570\n\treturn 0;\n} \n```\n",
        "postTime": 1610758860,
        "uid": 202606,
        "name": "\u8f7b\u7ed8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "\u5b66\u6821\u91cc\u6a21\u62df\u8d5b\u8003\u4e86\u8fd9\u9898\uff0c\u867d\u8bf4\u6700\u540e\u6210\u7ee9\u4e0d\u600e\u4e48\u6837\uff0c\u4e0d\u8fc7\u62a2\u5230\u4e86\u8fd9\u9898\u7684\u9996A\uff08$20min$\uff09~~\u52c9\u5f3a\u6ca1\u6709\u7206\u96f6~~\n\n#### \u601d\u8def\uff1a\n\n\u4e00\u822c\u6765\u8bf4\u770b\u5230\u8fd9\u79cd\u9898\u90fd\u4f1a\u5148\u60f3\u5230\u6a21\u62df\uff08\u5c24\u5176\u662f\u5728\u8003\u573a\u4e0a\u65f6\uff09\uff0c\u53ef $h_i <= 10^9$ \u7684\u6570\u636e\u8303\u56f4\u544a\u8bc9\u6211\u4eec\u8fd9\u662f\u884c\u4e0d\u901a\u7684\uff0c\u9700\u8981\u53e6\u8f9f\u8e4a\u5f84\n\n\u7ed3\u5408\u56fe\u50cf\u601d\u8003\u548c\u5206\u6790\uff1a\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF573B/256df13c1ef1192f2e98a72ff5ba9bb98f4ceade.png)\n\n\u53ef\u4ee5\u5f88\u5feb\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u89c4\u5f8b\uff1a\u5373**\u6700\u540e\u5220\u53bb\u7684\u65b9\u5757\u4e00\u5b9a\u5728\u6700\u4e0b\u9762\u4e00\u884c**\n\n\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u5462\uff1f\u7ed3\u5408\u9898\u610f\uff0c\u9898\u76ee\u76f4\u63a5\u544a\u8bc9\u4f60\u6574\u4e00\u5217\u7684\u9ad8\u5ea6\uff0c\u5374\u5e76\u975e\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u5730\u8bfb\u8fdb\u6765\uff0c\u4e8e\u662f\uff0c\u753b\u51fa\u6765\u53ea\u53ef\u80fd\u662f\u4e00\u4e2a\u5f62\u5982\u6c99\u5806\u4e00\u6837\u4e0a\u5c0f\u4e0b\u5927\u7684\u56fe\u5f62\uff1a\n```\n  \t    *\n \t    *\n \t   **\n \t   **\n\t*  ****\n   *********\n```\n\n\u800c\u7edd\u4e0d\u53ef\u80fd\u662f\u4ee5\u4e0b\u8fd9\u6837\uff08\u4e0a\u9762\u5927\u4e0b\u9762\u5c0f\uff09\uff1a\n\n```\n      *******\n       *****\n        ***\n         *\n```\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f**\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b9\u5757\u800c\u8a00\uff0c\u5176\u4e0b\u65b9\u4e0d\u53ef\u80fd\u662f\u60ac\u7a7a\u7684\uff0c\u4e00\u5b9a\u4f1a\u5750\u843d\u5728\u5730\u9762\u6216\u5176\u5b83\u65b9\u5757\u4e0a\u65b9\uff0c\u800c\u552f\u6709\u5728\u60ac\u7a7a\u8fd9\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u7b54\u6848\u624d\u6709\u53ef\u80fd\u5206\u5e03\u5728\u6700\u4e0b\u9762\u4e00\u884c\u4e0a\u65b9\u7684\u65b9\u5757\u4e4b\u4e2d\uff0c\u5bf9\u4e8e\u6b64\u9898\u7684\u8f93\u5165\uff0c\u7b54\u6848\u5219\u4e00\u5b9a\u5206\u5e03\u5728\u6700\u4e0b\u9762\u4e00\u884c**\n\n\u4e0a\u8ff0\u7ed3\u8bba\u8bf7\u8bfb\u8005\u81ea\u884c\u5b8c\u6210\u8bc1\u660e\uff08\u5176\u5b9e\u4e5f\u7528\u4e0d\u7740\u600e\u4e48\u8bc1\u5566\u60f3\u60f3\u5c31\u660e\u767d\u4e86\n\n\u786e\u5b9a\u4e86\u7b54\u6848\u7684\u5206\u5e03\uff0c\u63a5\u4e0b\u6765\u7edf\u8ba1\u7b54\u6848\uff0c\u53d1\u73b0\u6bcf\u4e2a\u65b9\u5757\u7684\u7b54\u6848\u90fd\u53ef\u7531\u5de6\u53f3\u65b9\u5757\u7684\u7b54\u6848\u6765\u63a8\u51fa\uff0c\u8003\u8651dp\u89e3\u51b3\n\n\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5199\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$left$ $\uff1a$ $f_i = f_{i - 1} + 1$\n\n$right$ $\uff1a$ $f_i = f_{i + 1} + 1$\n\n\u8fd8\u6709\u4e00\u79cd\u5411\u4e0a\u5ef6\u4f38\u7684\u60c5\u51b5\uff0c\u624b\u52a8\u6a21\u62df\u53ef\u77e5\uff08\u8fd9\u91cc\u4e0d\u591a\u52a0\u9610\u8ff0\uff09\uff1a\n\n$f_i = min(a_i - 1, min(a_{i - 1}, a_{i + 1}))$\n\n\u6700\u540e\u4e0a\u8ff0\u4e09\u79cd\u60c5\u51b5\u53d6 $min$ \u5373\u53ef\uff0c\u65f6\u95f4 $O(n)$\n\n$Code:$\n\n```\n#include <bits/stdc++.h>\n\nint read() {\n\tint j = 0; char c = getchar();\n\twhile (c < '0' || c > '9') { c = getchar(); }\n\twhile (c >= '0' && c <= '9') { j = (j << 1) + (j << 3) + (c ^ 48); c = getchar(); }\n\treturn j;\n}\n\nvoid write(int x) {\n\tchar c[20]; int l = 0;\n\tdo { c[++l] = x % 10 + 48; x /= 10; } while (x);\n\tdo { putchar(c[l--]); } while (l);\n\tputchar('\\n');\n} \n\nint max(int x, int y) { return x > y ? x : y; }\nint min(int x, int y) { return x < y ? x : y; }\n\nconst int N = 1e5 + 10;\n\nint n, ans, a[N], f[N];\n\nsigned main() {\n\tn = read();\n\tfor (int i = 1; i <= n; i++) { a[i] = read(); }\n\t//\u6b64\u5904\u5faa\u73af\u4ece2 ~ n - 1\u662f\u56e0\u4e24\u7aef\u7684\u65b9\u5757\u5fc5\u5b9a\u53ea\u9700\u4e00\u6b21\u64cd\u4f5c\u5373\u53ef\uff08\u5373\u5fc5\u6709f[1] = f[n] = 0\uff09\uff0c\u65e0\u9700\u8ba1\u7b97 \n\tfor (int i = 2; i <= n - 1; i++) { f[i] = min(f[i - 1] + 1, min(a[i] - 1, min(a[i - 1], a[i + 1]))); } //\u5de6\u4e0a \n\tfor (int i = n - 1; i >= 2; i--) { f[i] = min(f[i], f[i + 1] + 1); } //\u53f3 \n\tfor (int i = 2; i <= n - 1; i++) { ans = max(ans, f[i]); } //\u7edf\u8ba1\u7b54\u6848 \n\twrite(ans + 1); // ans + 1\n\treturn 0;\n}\n```\n\n### The end.",
        "postTime": 1610081545,
        "uid": 151791,
        "name": "ykuouzf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e3b\u8981\u7684\u96be\u70b9\u5c31\u662f\u5982\u4f55\u62bd\u8c61\uff0c\u601d\u7ef4\u91cf\u8f83\u5927\uff0c\u7801\u91cf\u8f83\u5c0f\u3002\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF573B/256df13c1ef1192f2e98a72ff5ba9bb98f4ceade.png)\n\n\u6839\u636e\u6837\u4f8b\u89e3\u91ca\u7684\u56fe\u7247\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u4e24\u8fb9\u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u90fd\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u67f1\u5b50\u7684\u9ad8\u5ea6\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u6700\u4e0a\u9762\u7684\u4e00\u683c\u4f1a\u88ab\u6467\u6bc1\uff0c\u5176\u4ed6\u5730\u65b9\u5b89\u7136\u65e0\u6059\uff0c$h_i'=h_i-1$\u3002\n- \u4e24\u8fb9\u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u81f3\u5c11\u6709\u4e00\u4e2a\u5c0f\u4e8e\u8fd9\u4e2a\u67f1\u5b50\u7684\u9ad8\u5ea6\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ece\u8f83\u77ee\u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u5f00\u59cb\uff0c\u8fd9\u6839\u67f1\u5b50\u7684\u4e0a\u9762\u90e8\u5206\u90fd\u8981\u906d\u6b83\uff0c$h_i'=\\min(h_{i-1},h_{i+1})$\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c$h_i'=\\max(0,\\min(h_{i-1},h_i-1,h_{i+1}))$\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5728\u7b2c\u4e00\u6839\u67f1\u5b50\u4e4b\u524d\u548c\u6700\u540e\u4e00\u6839\u67f1\u5b50\u4e4b\u540e\u90fd\u8bbe\u7acb\u4e00\u6839\u9ad8\u5ea6\u4e3a $0$ \u7684\u865a\u62df\u67f1\u5b50\uff0c\u8fd9\u6837\u5c31\u5f88\u65b9\u4fbf\uff0c\u6253\u51fa\u4e86\u8fd9\u6837\u7684\u66b4\u529b\u4ee3\u7801\uff1a\n\n```cpp\n#include<ctime>\n#include<cctype>\n#include<cstdio>\nconst int N = 1e5 + 10;\nusing namespace std;\ninline int read() {\n\tint x = 0, f = 1; char c;\n\twhile (!isdigit(c = getchar())) f -= (c == '-') * 2;\n\twhile (isdigit(c)) x = x * 10 + f * (c - 48), c = getchar();\n\treturn x;\n}\nint n, cnt, a[2][N];\nint max(int x, int y) {return x > y ? x : y;}\nint min(int x, int y) {return x < y ? x : y;}\nint check(int d) {for (int i = 1; i <= n; ++i) if (a[d][i]) return 0; return 1;}//\u5224\u65ad\u662f\u5426\u6240\u6709\u7684\u67f1\u5b50\u90fd\u5b8c\u5168\u6467\u6bc1\nint main() {\n\tn = read();\n\tfor (int i = 1; i <= n; ++i) a[0][i] = read();\n\twhile (!check(cnt & 1)) {\n\t\tint x = cnt & 1, y = x ^ 1;\n\t\tfor (int i = 1; i <= n; ++i)\n\t\ta[y][i] = max(0, min(a[x][i - 1], min(a[x][i] - 1, a[x][i + 1])));\n\t\t++cnt;\n\t}\n\tprintf(\"%d\", cnt);\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u63a5\u4e0b\u6765\uff0c\u8003\u8651\u5982\u4f55\u4e0d\u6a21\u62df\u6765\u505a\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6539\u53d8\u8fd9\u4e2a\u67f1\u5b50\u7684\u9ad8\u5ea6\u7684\u65b9\u5f0f\u53ea\u6709\u4e09\u79cd\uff1a\n\n- \u53d8\u4e3a\u5de6\u8fb9\u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u3002\n- \u53d8\u4e3a\u53f3\u8fb9\u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u3002\n- \u5728\u539f\u9ad8\u5ea6\u7684\u57fa\u7840\u4e0a\u51cf\u4e00\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u52a8\u6001\u89c4\u5212\u3002\n\n\u8bb0 $f_i$ \u4e3a\u7b2c $i$ \u6839\u67f1\u5b50\u7684\u9ad8\u5ea6\u53d8\u4e3a $0$ \u7684\u6b21\u6570\uff0c\u521d\u59cb\u72b6\u6001 $f_0=f_{n+1}=0$\uff0c\u7136\u540e\uff0c\u6839\u636e\u4e0a\u9762\u6240\u8ff0\uff0c$f_i=\\min(f_{i-1}+1,h_i,f_{i+1}+1)$\u3002\n\n\u53d1\u73b0\u4e0d\u80fd\u540c\u65f6\u8fdb\u884c\uff0c\u6240\u4ee5\u9700\u8981\u4e24\u6b21\u5faa\u73af\u6765\u89e3\u51b3\u3002\n\n\u6700\u7ec8\u7b54\u6848\u4e3a $\\max_{i=1}^{n}(f_i)$\u3002\n\n```cpp\n#include<ctime>\n#include<cctype>\n#include<cstdio>\nconst int N = 1e5 + 10;\nusing namespace std;\ninline int read() {\n\tint x = 0, f = 1; char c;\n\twhile (!isdigit(c = getchar())) f -= (c == '-') * 2;\n\twhile (isdigit(c)) x = x * 10 + f * (c - 48), c = getchar();\n\treturn x;\n}\nint n, ans, a[N], f[N];\nint max(int x, int y) {return x > y ? x : y;}\nint min(int x, int y) {return x < y ? x : y;}\nint main() {\n\tn = read();\n\tfor (int i = 1; i <= n; ++i) a[i] = read();\n\tfor (int i = 1; i <= n; ++i) f[i] = min(f[i - 1] + 1, a[i]);\n\tfor (int i = n; i; --i) f[i] = min(f[i], f[i + 1] + 1);\n\tfor (int i = 1; i <= n; ++i) ans = max(ans, f[i]);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u4e3a $O(n)$\u3002",
        "postTime": 1609989808,
        "uid": 181378,
        "name": "Alarm5854",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u7ebf\u6bb5\u6811\u53ef\u4ee5\u4e0d\u7528\u652f\u6301\u4fee\u6539\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e8b\u5b9e\u4e0aST\u8868\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6839\u636e\u9898\u76ee\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u6b21\u64cd\u4f5c\u5c31\u662f\u5bf9\u5e8f\u5217\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a$h_i= \\min\\{h_i-1,h_{i-1},h_{i+1}\\}$\u3002\u610f\u4e49\u662f\uff1a\u5982\u679c\u5de6\u53f3\u4e24\u8fb9\u5b58\u5728\u4e00\u8fb9\u6bd4\u81ea\u5df1\u4f4e\uff0c\u90a3\u4e48\u9ad8\u7684\u90e8\u5206\u4e00\u5b9a\u662f\u66b4\u9732\u90e8\u5206\u9700\u8981\u5220\u6389\uff1b\u5982\u679c\u4e24\u8fb9\u90fd\u6bd4\u81ea\u5df1\u9ad8\uff0c\u90a3\u4e48\u66b4\u9732\u7684\u53ea\u6709\u6700\u4e0a\u9762\u90a3\u4e2a\u3002\n\n\u66b4\u529b\u8fd9\u6837\u505a\u662f$O(n^2)$\u7684\u3002\u6211\u4eec\u8003\u8651\u8fed\u4ee3\u4e00\u4e0b\uff0c\n\n$h_i= \\min\\{h_i-1,h_{i-1},h_{i+1}\\}$,\n\n$h_{i-1}=\\min\\{h_{i-1}-1,h_{i-2},h_{i}\\}$\uff0c\n\n$h_{i+1}=\\min\\{h_{i+1}-1,h_i,h_{i+2}\\}$\uff0c\n\n\u5408\u5e76\u8d77\u6765\uff0c**\u64cd\u4f5c\u4e24\u6b21**\u4e4b\u540e\u5c31\u6709$h_i=\\min\\{h_{i-2},h_{i-1}-1,h_i-2,h_{i+1}-1,h_{i+2}\\}$\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c**\u64cd\u4f5c$k$\u6b21**\u4e4b\u540e\u5c31\u6709$h_i=\\min\\{h_{i-k},h_{i-k+1}-1,\\cdots,h_i-k,\\cdots,h_{i+k-1}-1,h_{i+k}\\}$\n\n\u5bf9\u4e8e$j \\in [i-k,i]$\uff0c\u6709$h_i=h_j-(j-(i-k))=h_j-j+i-k$\n\n\u5bf9\u4e8e$j \\in [i,i+k]$\uff0c\u6709$h_i=h_j-(k-(j-i))=h_j+j-k-i$\u3002\n\n\u6211\u4eec\u8981\u8ba9\u64cd\u4f5c\u6b21\u6570\u5c3d\u91cf\u5c11\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a$i$\uff0c\u8ba9\u5176$k$\u5c3d\u91cf\u5c0f\u3002\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e2a$i$\u6c42\u51fa$k_{min}$\uff0c\u5bf9\u4e8e\u6240\u6709$k_{min}$\u53d6\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n\u5c06$k$\u8868\u793a\u51fa\u6765\uff0c\u90a3\u4e48\u5bf9\u4e8e$j \\in [i-k,i]$\uff0c$k=h_j-j+i$\uff1b\u5bf9\u4e8e$j \\in [i,i+k]$\uff0c$k=h_j+j-i$\u3002$i$\u662f\u5e38\u6570\uff0c\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u4e24\u8fb9$h_j-j$\u6216$h_j+j$\u7684\u6700\u5c0f\u503c\uff08\u4e0d\u7528\u8003\u8651\u8d1f\u6570\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u4fdd\u8bc1\u4e86$k \\geq 0$\uff09\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u7ef4\u62a4$h_i+i$\u7684\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u590d\u6742\u5ea6$O(n \\log n)$\u3002\n\n\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u539f\u5e8f\u5217\u7684\u9996\u4f4d\u8981\u63d2\u51650\uff0c\u4e0d\u7136\u5c31\u4e0d\u7b26\u5408\u6211\u4eec\u6700\u521d\u7684\u516c\u5f0f\u4e86\u3002\n\n```cpp\n/*DennyQi 2019*/\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int N = 100010;\ninline int read(){\n    int x(0),w(1); char c = getchar();\n    while(c^'-' && (c<'0' || c>'9')) c = getchar();\n    if(c=='-') w = -1, c = getchar();\n    while(c>='0' && c<='9') x = (x<<3)+(x<<1)+c-'0', c = getchar(); \n    return x*w;\n}\nint n,ans,a[N],v1[N<<2],v2[N<<2];\nvoid build(int* v, int u, int l, int r, int zf){\n\tif(l == r){\n\t\tv[u] = a[l] + l*zf;\n\t\treturn;\n\t}\n\tint mid = (l+r)>>1;\n\tbuild(v,u<<1,l,mid,zf);\n\tbuild(v,u<<1|1,mid+1,r,zf);\n\tv[u] = min(v[u<<1],v[u<<1|1]);\n}\nint query(int* v, int u, int l, int r, int x, int y){\n\tif(l > y || r < x) return 0x3f3f3f3f;\n\tif(x <= l && r <= y) return v[u];\n\tint mid = (l+r)>>1;\n\treturn min(query(v,u<<1,l,mid,x,y),query(v,u<<1|1,mid+1,r,x,y));\n}\nint main(){\n\t// freopen(\"file.in\",\"r\",stdin);\n\tn = read();\n\ta[1] = a[n+2] = 0;\n\tfor(int i = 2; i <= n+1; ++i){\n\t\ta[i] = read();\n\t}\n\tbuild(v1,1,1,n+2,-1);\n\tbuild(v2,1,1,n+2,1);\n\tfor(int i = 1; i <= n+2; ++i){\n\t\tans = max(ans,min(query(v1,1,1,n+2,1,i)+i,query(v2,1,1,n+2,i,n+2)-i));\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1561430140,
        "uid": 115065,
        "name": "DennyQi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u542c\u8bf4\u53ef\u4ee5\u91c7\u7528\u66fc\u54c8\u987f\u6700\u5c0f\u751f\u6210\u6811\u7684$\\Theta(n \\log_2n)$\u7b97\u6cd5\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u4e0d\u8ba8\u8bba\u3002\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n------------\n\n\u8bfb\u5b8c\u9898\u76ee\u4e4b\u540e\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u6700\u540e\u6d88\u5931\u7684\u90a3\u51e0\u4e2a\u65b9\u5757\u81f3\u5c11\u6709\u4e00\u4e2a\u4e00\u5b9a\u4f4d\u4e8e\u6700\u5e95\u5c42\uff08\u56e0\u4e3a\u5b83\u4e0a\u9762\u7684\u65b9\u5757\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u5b83\u540e\u6d88\u9664\uff09\u3002\u6240\u4ee5\u6211\u4eec\u8bbe\u6bcf\u4e2a\u201c\u5854\u201d\u7684\u9ad8\u5ea6\u4e3a$h_i$\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u53d1\u73b0\u7b2c\u4e00\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\u5b83\u7684\u9ad8\u5ea6\u5c31\u662f$\\min(h_i-1,h_{i-1},h_{i+1})$\u3002\u4e0d\u8fc7\u56e0\u4e3a \u8fd9\u4e2a\u8f6c\u79fb\u5b83\u6709\u540e\u6548\u6027\uff0c\u4e0d\u80fd\u76f4\u63a5DP/\u9012\u63a8\u5f97\u51fa\u7b54\u6848\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5982\u4e0b\u9012\u63a8\u5f0f\uff1a\u6211\u4eec\u9012\u63a8\u7b2c$k$\u6b21\u5728\u7b2c$i$\u5ea7\u201c\u5854\u201d\u4e0a\u64cd\u4f5c\u540e\u7684\u9ad8\u5ea6\uff0c\u5219$$h_i=\\max(0,\\displaystyle\\min_{j=0}^{i}\\{\\min(h_{i-j},h_{i+j})-(k-j)\\})$$\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u9700\u8981\u679a\u4e3e$i$\u548c$j$\uff0c\u590d\u6742\u5ea6\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u6211\u4eec\u8fd9\u91cc\u56e0\u4e3a$k$\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e0d\u5f71\u54cd\u6700\u4f18\u6027\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f$\\displaystyle\\min_{j=0}^{i}\\{h_{i-j}+j\\}$\u548c$\\displaystyle\\min_{j=0}^{i}\\{h_{i+j}+j\\}$\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u533a\u95f4\u6700\u503c\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n------------\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5728$O(n\\log_2n)$\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u4e86\u9012\u63a8\uff0c\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\u628a\u8fd9\u5806\u5220\u9664\u7684\u6700\u5c0f\u65f6\u95f4\u3002\u6211\u4eec\u628a\u7b54\u6848\u53d6$\\max$\u5373\u53ef\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n\nint min(int x,int y)\n{\n\treturn x<y?x:y;\n}\nint max(int x,int y)\n{\n\treturn x>y?x:y;\n}\n\nclass seg_tree\n{\n\tprivate:\n\t\tstatic const int MAXN=100010;\n\t\tstruct node\n\t\t{\n\t\t\tint l,r,val;\n\t\t\tint lazy;\n\t\t}tree[MAXN<<2];\n\t\tvoid upd(int o)\n\t\t{\n\t\t\ttree[o].val=min(tree[o<<1].val,tree[o<<1|1].val);\n\t\t}\n\t\tvoid pushdown(int o)\n\t\t{\n\t\t\tint tmp=tree[o].lazy;\n\t\t\ttree[o].lazy=0;\n\t\t\tif(tmp)\n\t\t\t{\n\t\t\t\ttree[o<<1].lazy+=tmp;\n\t\t\t\ttree[o<<1|1].lazy+=tmp;\n\t\t\t\ttree[o<<1].val+=tmp;\n\t\t\t\ttree[o<<1|1].val+=tmp;\n\t\t\t}\n\t\t}\n\t\n\tpublic:\n\t\tint ord[MAXN];\n\t\tvoid build(int o,int l,int r)\n\t\t{\n\t\t\ttree[o].l=l;\n\t\t    tree[o].r=r;\n\t\t    tree[o].lazy=0;\n\t\t    int mid=(l+r)>>1;\n\t\t    if(l==r) \n\t\t\t{\n\t\t\t    tree[o].val=ord[l];\n\t\t\t    return;\n\t\t\t}\n\t\t    build(o<<1,l,mid);\n\t\t    build(o<<1|1,mid+1,r);\n\t\t    upd(o);\n\t\t}\n\t\tvoid update(int o,int lt,int rt,int v)\n\t\t{\n\t\t\tint l=tree[o].l,r=tree[o].r;\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(lt<=l&&r<=rt)\n\t\t\t{\n\t\t\t\ttree[o].val+=v;\n\t\t\t\ttree[o].lazy+=v;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpushdown(o);\n\t\t    if(lt<=mid&&rt>=l) \n\t\t\t\tupdate(o<<1,lt,rt,v);\n\t\t    if(lt<=r&&rt>mid)\n\t\t\t\tupdate(o<<1|1,lt,rt,v);\n\t\t    upd(o);\n\t\t}\n\t\tint query(int o,int lt,int rt)\n\t\t{\n\t\t\tint l=tree[o].l,r=tree[o].r;\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(lt<=l&&r<=rt)\n\t\t\t\treturn tree[o].val;\n\t\t\tpushdown(o);\n\t\t\tint res=2147483647;\n\t\t\tif(lt<=mid&&rt>=l) \n\t\t\t\tres=min(res,query(o<<1,lt,rt));\n\t\t    if(lt<=r&&rt>mid)\n\t\t\t\tres=min(res,query(o<<1|1,lt,rt));\n\t\t\treturn res;\n\t\t}\n};\nseg_tree sol;\nint lans[100010],rans[100010];\n\nint read()\n{\n\tint res=0;char ch=getchar();\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tres=(res<<3)+(res<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tint n=read();;\n\tfor(int i=1;i<=n;i++)\n\t\tsol.ord[i]=read();\n\tsol.build(1,0,n+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tsol.update(1,0,i-1,1);\n\t\tlans[i]=sol.query(1,0,i);\n\t}\n\tsol.build(1,0,n+1);\n\tfor(int i=n;i;i--)\n    {\n        sol.update(1,i+1,n+1,1);\n        rans[i]=sol.query(1,i,n+1);\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    \tans=max(ans,min(lans[i],rans[i]));\n    printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1518772578,
        "uid": 23398,
        "name": "frankchenfu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF573B \u3010Bear and Blocks\u3011"
    }
]