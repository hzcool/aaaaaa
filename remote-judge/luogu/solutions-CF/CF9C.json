[
    {
        "content": "# \u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011\n------------\n\u9898\u610f\uff1a\u8f93\u5165n\uff0c\u8f93\u51fa1-n\u7684\u81ea\u7136\u6570\u4e2d\u5404\u6570\u4f4d\u53ea\u5305\u542b0\u548c1\u7684\u6570\u7684\u4e2a\u6570\uff08\u5373\u5f62\u5f0f\u662f\u4e8c\u8fdb\u5236\u6570\u7684\u4e2a\u6570\uff09\u3002\n\n\u5206\u6790\uff1a\u4e8c\u8fdb\u5236\u578b\u7684\u6570\u5747\u4e3a$n*10$\u6216$n*10+1$\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u627e\u51fa\u8fd9\u4e24\u79cd\u7c7b\u578b\u7684\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n$Code_1$\uff1a\n```cpp\n#include<cstdio>\nint n;\nint count=0;//\u8ba1\u6570\u5668 \nint binary(int m) {//\u627e\u51fa\u4e8c\u8fdb\u5236\u578b\u7684\u6570 \n\tif(m>n) return 0;//\u8d85\u8fc7\u8303\u56f4\u53ca\u65f6\u9000\u51fa \n\telse count++;\n\tbinary(m*10);//\u627en*10\u578b\u7684\u4e8c\u8fdb\u5236\u578b\u6570 \n\tbinary(m*10+1);//\u627en*10+1\u578b\u7684\u4e8c\u8fdb\u5236\u578b\u6570 \n}\nint main() {\n\tscanf(\"%d\", &n);//\u8f93\u5165n \n\tbinary(1);//\u4ece1\u5f00\u59cb\u627e \n\tprintf(\"%d\", count);//\u8f93\u51fa\u7ed3\u679c \n\treturn 0;\n}\n```\n\n### ~~\u798f\u5229~~\n\u5176\u5b9e\u4e5f\u53ef\u4ee5\u6253\u8868\u3002$10^9$\u5185\u5171\u6709$512$\u4e2a\u4e8c\u8fdb\u5236\u578b\u7684\u6570\u3002\n\n~~\u6253\u8868\u5c31\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86~~\n\n$Code_2$\uff1a\n```cpp\n#include<cstdio>\nconst int ans[]= {1,10,11,100,101,110,111,1000,1001,1010,1011,1100,1101,1110,1111,10000,10001,10010,10011,10100,10101,10110,10111,11000,11001,11010,11011,11100,11101,11110,11111,100000,100001,100010,100011,100100,100101,100110,100111,101000,101001,101010,101011,101100,101101,101110,101111,110000,110001,110010,110011,110100,110101,110110,110111,111000,111001,111010,111011,111100,111101,111110,111111,1000000,1000001,1000010,1000011,1000100,1000101,1000110,1000111,1001000,1001001,1001010,1001011,1001100,1001101,1001110,1001111,1010000,1010001,1010010,1010011,1010100,1010101,1010110,1010111,1011000,1011001,1011010,1011011,1011100,1011101,1011110,1011111,1100000,1100001,1100010,1100011,1100100,1100101,1100110,1100111,1101000,1101001,1101010,1101011,1101100,1101101,1101110,1101111,1110000,1110001,1110010,1110011,1110100,1110101,1110110,1110111,1111000,1111001,1111010,1111011,1111100,1111101,1111110,1111111,10000000,10000001,10000010,10000011,10000100,10000101,10000110,10000111,10001000,10001001,10001010,10001011,10001100,10001101,10001110,10001111,10010000,10010001,10010010,10010011,10010100,10010101,10010110,10010111,10011000,10011001,10011010,10011011,10011100,10011101,10011110,10011111,10100000,10100001,10100010,10100011,10100100,10100101,10100110,10100111,10101000,10101001,10101010,10101011,10101100,10101101,10101110,10101111,10110000,10110001,10110010,10110011,10110100,10110101,10110110,10110111,10111000,10111001,10111010,10111011,10111100,10111101,10111110,10111111,11000000,11000001,11000010,11000011,11000100,11000101,11000110,11000111,11001000,11001001,11001010,11001011,11001100,11001101,11001110,11001111,11010000,11010001,11010010,11010011,11010100,11010101,11010110,11010111,11011000,11011001,11011010,11011011,11011100,11011101,11011110,11011111,11100000,11100001,11100010,11100011,11100100,11100101,11100110,11100111,11101000,11101001,11101010,11101011,11101100,11101101,11101110,11101111,11110000,11110001,11110010,11110011,11110100,11110101,11110110,11110111,11111000,11111001,11111010,11111011,11111100,11111101,11111110,11111111,100000000,100000001,100000010,100000011,100000100,100000101,100000110,100000111,100001000,100001001,100001010,100001011,100001100,100001101,100001110,100001111,100010000,100010001,100010010,100010011,100010100,100010101,100010110,100010111,100011000,100011001,100011010,100011011,100011100,100011101,100011110,100011111,100100000,100100001,100100010,100100011,100100100,100100101,100100110,100100111,100101000,100101001,100101010,100101011,100101100,100101101,100101110,100101111,100110000,100110001,100110010,100110011,100110100,100110101,100110110,100110111,100111000,100111001,100111010,100111011,100111100,100111101,100111110,100111111,101000000,101000001,101000010,101000011,101000100,101000101,101000110,101000111,101001000,101001001,101001010,101001011,101001100,101001101,101001110,101001111,101010000,101010001,101010010,101010011,101010100,101010101,101010110,101010111,101011000,101011001,101011010,101011011,101011100,101011101,101011110,101011111,101100000,101100001,101100010,101100011,101100100,101100101,101100110,101100111,101101000,101101001,101101010,101101011,101101100,101101101,101101110,101101111,101110000,101110001,101110010,101110011,101110100,101110101,101110110,101110111,101111000,101111001,101111010,101111011,101111100,101111101,101111110,101111111,110000000,110000001,110000010,110000011,110000100,110000101,110000110,110000111,110001000,110001001,110001010,110001011,110001100,110001101,110001110,110001111,110010000,110010001,110010010,110010011,110010100,110010101,110010110,110010111,110011000,110011001,110011010,110011011,110011100,110011101,110011110,110011111,110100000,110100001,110100010,110100011,110100100,110100101,110100110,110100111,110101000,110101001,110101010,110101011,110101100,110101101,110101110,110101111,110110000,110110001,110110010,110110011,110110100,110110101,110110110,110110111,110111000,110111001,110111010,110111011,110111100,110111101,110111110,110111111,111000000,111000001,111000010,111000011,111000100,111000101,111000110,111000111,111001000,111001001,111001010,111001011,111001100,111001101,111001110,111001111,111010000,111010001,111010010,111010011,111010100,111010101,111010110,111010111,111011000,111011001,111011010,111011011,111011100,111011101,111011110,111011111,111100000,111100001,111100010,111100011,111100100,111100101,111100110,111100111,111101000,111101001,111101010,111101011,111101100,111101101,111101110,111101111,111110000,111110001,111110010,111110011,111110100,111110101,111110110,111110111,111111000,111111001,111111010,111111011,111111100,111111101,111111110,111111111,1000000000};\nint main() {\n\tint a;\n\tscanf(\"%d\", &a);\n\tfor(int i=0; i<512; i++)\n\t\tif(ans[i]>a) {\n\t\t\tprintf(\"%d\", i);\n\t\t\tbreak;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1517452924,
        "uid": 58502,
        "name": "char32_t",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "[$\\huge CF9C  \\ Hexadecimal's \\  Numbers$](https://www.luogu.org/problem/CF9C)   \n\u4e00\u9053$\\small\\colorbox{orange}{\\color{white}\\text{\u666e\u53ca-}}$\u7684\u9898\u76ee\uff0c\u4e0d\u662f\u5f88\u96be\uff0c\u8bb2\u5feb\u70b9$(QAQ)$     \n\u672c\u9898\u89e3\u4e3b\u8981\u601d\u8def\uff1a$dfs$($dfs$\u5927\u6cd5\u597d\uff01)\n\n------------\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u8f93\u51fa$1-n$\u7684\u81ea\u7136\u6570\u4e2d\u5404\u6570\u4f4d\u53ea\u5305\u542b$0$\u548c$1$\u7684\u6570\u7684\u4e2a\u6570,\u6211\u4eec\u77e5\u9053\uff0c\u7b26\u5408\u5404\u6570\u4f4d\u53ea\u5305\u542b$0$\u548c$1$\u7684\u6700\u5c0f\u6570\u662f\u51e0\uff1f\u5f53\u7136\u662f$1$\u5566\uff0c\u8fd9\u4e0d\u662f\u660e\u6446\u7740\u7684\u5417\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u7684```dfs```\u5c31\u5e94\u8be5\u4ece$1$\u5f00\u59cb\u641c\u7d22\u3002   \n\u6211\u4eec\u8fd8\u53ef\u4ee5\u60f3\u5230\uff0c\u7531\u4e8e\u81ea\u7136\u6570\u4e2d\u5404\u6570\u4f4d\u53ea\u5305\u542b$0$\u548c$1$\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6765\u9012\u5f52\u8c03\u7528\u4e0b\u4e00\u5c42\u3002\n```cpp\ndfs(cur*10+1);  \ndfs(cur*10);\n\n\n\ndfs(1)    //\u5728int main()\u4e2d\n```\n\u8fd9\u6837\u7684\u9012\u5f52\u8c03\u7528\u662f\u4e00\u5b9a\u6b63\u786e\u7684\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u4e00\u8d77\u6765\u770b\uff0c\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5f53$cur==1$\u65f6\uff0c\u5c06\u4f1a\u8c03\u7528```dfs(11)```\u548c```dfs(10)```,\u800c\u8fd9\u4e24\u4e2a\u6570\u90fd\u662f\u7b26\u5408\u9898\u610f\u7684\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u6bcf\u4e00\u5c42\u7684\u8c03\u7528\u81ea\u7136\u662f\u6b63\u786e\u7684\u4e86\u3002   \n\u90a3\u9012\u5f52\u8c03\u7528\u7684\u8fb9\u754c\u662f\u4ec0\u4e48\u5462\uff1f\u5f53\u70ed\u662f```if(cur>n) return;```\u5982\u679c$cur$\u90fd$>n$\u4e86\uff0c\u90a3\u9012\u5f52\u8fd8\u6709\u4ec0\u4e48\u610f\u4e49\u5462\uff0c\u6240\u4ee5\u5f53\u7136\u8981$return$.\u800c\u5176\u4ed6\u7684\u60c5\u51b5\u53ea\u8981\u8ba1\u6570\u5668$ans++$\u5c31\u53ef\u4ee5\u4e86\u3002\n\u7ed9\u51fa\u90e8\u5206\u4ee3\u7801\uff1a\n```cpp\nvoid dfs(int cur)\n{\n    if(cur>n) return;  //\u9012\u5f52\u8fb9\u754c\uff0creturn\n    else ++ans;  //\u8ba1\u6570\u5668++\n    dfs(cur*10+1);  //\u9012\u5f52\u8c03\u7528\n    dfs(cur*10);  //\u7ee7\u7eed\u9012\u5f52\u8c03\u7528\n}\n```\n\n------------\n\u672c\u6587\u7ae0\u5927\u81f4\u5185\u5bb9$OK$\u4e86\u3002\u63a5\u4e0b\u6765\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801$\u2193\u2193\u2193$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans;\ninline int read()  //\u6211\u559c\u6b22\u5feb\u8bfb\n{\n     int x=0,f=1;char ch=getchar();\n     while(ch<'0'||ch>'9') {if(ch=='-') f=-1; ch=getchar();}\n     while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n     return x*f;\n}\nvoid dfs(int cur)\n{\n    if(cur>n) return;\n    else ++ans;\n    dfs(cur*10+1);\n    dfs(cur*10);\n}\nint main()\n{\n    n=read();\n    dfs(1);\n    printf(\"%d\",ans);  //\u8f93\u51faans\u7684\u503c\n    return 0;\n}\n```",
        "postTime": 1565412191,
        "uid": 170986,
        "name": "test_check",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "## \u5341\u91cd\u5faa\u73af\uff0c\u66b4\u529b\u5224\u65ad ##\n\u601d\u8def\uff1a\u76f4\u63a5\u5341\u91cd\u5faa\u73af\uff0c\u751f\u6210\u6240\u6709\u53ef\u80fd\u7684\u6570\uff0c\u518d\u5224\u65ad\u662f\u5426\u5728\u533a\u95f4\u5185\n\n\u4e0a\u4ee3\u7801~\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint a[100],ans,n;\nint pow_(int a,int b)\n{\n    int s=1;\n    for(int i=1;i<=b;i++) s*=a;\n    return s;\n}//\u624b\u5199pow,\u907f\u514d\u9b3c\u755c\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(a[1]=0;a[1]<=1;a[1]++)\n\t\tfor(a[2]=0;a[2]<=1;a[2]++)\n\t\t\tfor(a[3]=0;a[3]<=1;a[3]++)\n\t\t\t\tfor(a[4]=0;a[4]<=1;a[4]++)\n\t\t\t\t\tfor(a[5]=0;a[5]<=1;a[5]++)\n\t\t\t\t\t\tfor(a[6]=0;a[6]<=1;a[6]++)\n\t\t\t\t\t\t\tfor(a[7]=0;a[7]<=1;a[7]++)\n\t\t\t\t\t\t\t\tfor(a[8]=0;a[8]<=1;a[8]++)\n\t\t\t\t\t\t\t\t\tfor(a[9]=0;a[9]<=1;a[9]++)\n\t\t\t\t\t\t\t\t\t\tfor(a[10]=0;a[10]<=1;a[10]++)//\u5341\u91cd\u5faa\u73af\uff0c\u66b4\u529b\u5224\u65ad\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tint s=0;\n\t\t\t\t\t\t\t\t\t\t\tfor(int i=1;i<=10;i++)\n\t\t\t\t\t\t\t\t\t\t\t\ts+=a[i]*pow_(10,10-i);\n\t\t\t\t\t\t\t\t\t\t\tif(s>=1&&s<=n) ans++;\n\t\t\t\t\t\t\t\t\t\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1~",
        "postTime": 1575850512,
        "uid": 186587,
        "name": "BBD186587",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\n### \u6ce8\uff1a\u4ee5\u4e0b$lg$\u5e95\u6570\u5747\u4e3a$10$\uff0c\u5c31\u662f\u6570\u5b66\u91cc\u7684\u5e38\u7528\u5bf9\u6570\n\n### \u65b9\u6cd5\u4e00\n\n\u76f4\u63a5\u819c\u4f60\n\n\u4ece$1$\u5230$n$\u5f00\u59cb\u679a\u4e3e\uff0c\u6bcf\u4e2a\u6570\u5b57\u5224\u65ad\u7684\u590d\u6742\u5ea6\u662f$O(lg\\ n)$\uff0c\u603b\u590d\u6742\u5ea6\u662f$O(nlg\\ n)$\n\n\u6709\u70b9\u5361\u5e38\u6570\uff0c\u6240\u4ee5\uff1a\n\n### \u65b9\u6cd5\u4e8c\n\n$dfs$\u5927\u53d1\u597d\uff01\n\n\u76f4\u63a5$dfs$\uff0c\u6700\u540e\u76f8\u5f53\u4e8e\u4e00\u4e2a$lg\\ n$\u5143$01$\u96c6\u5408$S$\uff0c\u6bcf\u4e2a\u5143\u7d20$a_{i}\\in{S}$\uff0c\u82e5$a_{i}=1$\u76f8\u5f53\u4e8e\u8fd9\u4e2a\u6570\u5b57\u6709$10^{i-1}$\uff0c\u6240\u4ee5$dfs$\u53ef\u4ee5\u6392\u9664\u6389\u8bb8\u591a\u65e0\u7528\u51b3\u7b56\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(2^{lg\\ n})$\uff0c\u5176\u5b9e\u5c31\u7b49\u4e8e$O(\\sqrt[log_{2}\\ 10]{n})$\uff0c\u7adf\u7136\u6bd4$O(\\sqrt[3]{n})$\u8fd8\u8981\u5c0f~~\uff08\u6bd4\u5206\u5757\u8fd8\u5feb\uff09~~\n\n\u6bcf\u6b21\u786e\u5b9a\u4e0b\u4e00\u4e2a\u51b3\u7b56\u53ea\u6709\u4e24\u4e2a\u5206\u652f\uff0c\u56e0\u4e3a\u6570\u5b57\u91cc\u53ea\u80fd\u6709$0$\u6216\u8005$1$\u6240\u4ee5\u5c31\u662f$10x$\u548c$10x+1$\n\n#### \u4ee3\u7801\n\n~~\u6bd4\u819c\u4f60\u4e0d\u77e5\u9053\u77ed\u4e86\u591a\u5c11\u7684\u4ee3\u7801~~\n\n```cpp\n#include<stdio.h>\nint n,res;\nvoid dfs(int x)\n{\n    if(x>n) return ; //\u5927\u4e8en\u5c31\u7ed3\u675f\n    ++res; //\u7d2f\u52a0\u7b54\u6848\n    dfs(x*10);\n    dfs(x*10+1); //\u5411\u4e0b\u6269\u5c55\n    return ;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    dfs(1); //\u4ece\u7b2c\u4e00\u4e2a\u6210\u7acb\u7684\u6570\u5b571\u5f00\u59cb\n    printf(\"%d\\n\",res);\n    return 0;\n}\n```\n\n### \u65b9\u6cd5\u4e09\n\n\u6ce8\u610f\u5230$dfs$\u6709\u53ef\u80fd\u4f1a\u7206\u6808\u554a~~\u8fd8\u6162\u7684\u8981\u547d~~\uff0c\u6240\u4ee5\u4e0b\u9762\u4ecb\u7ecd\u4e00\u79cd$O(lg\\ n)$\u7684\u7b97\u6cd5\uff08\u4e0d\u8003\u8651\u9ad8\u7cbe\u5ea6\uff09\n\n\u5176\u5b9e\u53ef\u4ee5\u7b80\u5316\u4e00\u4e0b\uff0c\u4ece[\u65b9\u6cd5\u4e8c]\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5176\u5b9e\u5f53$n$\u5728\u7b2c$i$\u4f4d\uff08\u4ece\u53f3\u5f80\u5de6\uff09\u5927\u4e8e\u7b49\u4e8e$1$\u65f6\uff0c\u76f8\u5f53\u4e8e\u7b54\u6848\u5c31\u4f1a\u589e\u52a0$2^{i-1}$\uff08\u53ef\u4ee5\u8054\u5408\u5b50\u96c6\u4e2a\u6570\u60f3\u4e00\u60f3\uff09\u3002\n\n> \u6ce8\u610f\uff1a\u5f53\u8fd9\u4e00\u4f4d\u4e3a$0$\u4f46\u662f\u8fd9\u4f4d\u5de6\u8fb9\uff08\u66f4\u9ad8\u4f4d\uff09\u6709\u5927\u4e8e$1$\u7684\u6570\u5b57\u65f6\uff0c\u5c31\u8981\u628a\u8fd9\u4e2a\u6570\u5b57\u770b\u6210$1$\uff08\u6240\u4ee5\u6211\u7528\u7684\u662f\u5b57\u7b26\u4e32\u5904\u7406\uff09\n\n\u6700\u540e\u9884\u5904\u7406\u4e00\u4e0b$2$\u7684\u5e42\uff0c\u5c31\u53ef\u4ee5$O(lg\\ n)\\approx{O(1)}$\n\n```python```\u7248\u672c\u662f\u6b63\u89e3\uff08\u56e0\u4e3a\u5927\u6570\u636e\u8981\u9ad8\u7cbe\uff09\uff0c\u867d\u7136\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u4f46\u662f$10^{10^{6}}$\u5e94\u8be5\u8fd8\u662f\u53ef\u4ee5\u8f7b\u677e\u8fc7\u7684\n\n#### \u4ee3\u7801\n\n\uff08\u6211\u7528\u7684\u662f```C++```\uff09\n\n```cpp\n#include<string>\n#include<iostream>\nusing namespace std;\nint n,two[20],res,sized,digit;\nstring s;\nbool flag;\nint main()\n{\n    ios::sync_with_stdio(false);\n    two[0]=1;\n    for(register int i=1;i<11;++i) two[i]=two[i-1]<<1; //\u9884\u5904\u74062\u7684\u5e42\n    cin>>s;\n    sized=s.size();\n    digit=sized-1; //\u5f53\u524d\u4f4d\u6570\n    for(register int i=0;i<sized;--digit,++i)\n    {\n        if(s[i]>49) flag=true; //\u5982\u679c\u6709\u5927\u4e8e1\u7684\u6570\u5b57\u540e\u9762\u76840\u7b49\u4e8e1\n        if(s[i]>48||flag) res+=two[digit]; //\u7b26\u5408\u8981\u6c42\u5c31\u7d2f\u52a0\u7b54\u6848\n    }\n    cout<<res<<endl;\n    return 0;\n}\n```",
        "postTime": 1544921912,
        "uid": 55112,
        "name": "damage",
        "ccfLevel": 0,
        "title": "CF9C\u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\u8fd9\u4e2a\u9898\u76ee\u636e\u53ef\u4ee5\u6709\u4e24\u79cd\u601d\u8def\uff0c\u4e00\u79cd\u662f\u9012\u5f52\u6784\u9020\u7b54\u6848\u7684\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u4f7f\u7528\u516c\u5f0f\u8ba1\u7b97\u7684\u7684\u65b9\u6cd5\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u697c\u4e0b\u4e2a\u4f4d\u5927\u4f6c\u7684\u505a\u6cd5\uff0c\u5c31\u662f\u5bf9\u4e8e1\uff0c\u6211\u4eec\u5982\u679c\u8981\u7684\u5230\u540e\u9762\u7684\u4e24\u7ec4\u7b54\u6848\uff0c\u4e00\u79cd\u662f\u5bf9\u8fd9\u4e2a\u6570\u4e5810\uff0c\u6216\u662f\u4e5810\u540e\u52a0\u4e00\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u65b0\u7684\u4e24\u79cd\u7b54\u6848\uff0c\u6211\u4eec\u5728\u5bf9\u65b0\u7684\u7b54\u6848\u8fd9\u6837\u9012\u5f52\u6c42\u89e3\u4e0b\u53bb\uff0c\u76f4\u5230\u5927\u4e8e\u8f93\u5165\u7684\u6570 $ n $ \u4e3a\u6b62\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u4e00\u8fb9\u9012\u5f52\u7684\u65f6\u5019\u4e00\u8fb9\u8bb0\u5f55\u7684\u5230\u7684\u65b0\u6570\u7684\u6570\u91cf\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u4f46\u662f\u5176\u5b9e\u8fd8\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7a0d\u5fae\u6162\u4e00\u70b9\uff0c\u5c31\u662f\u6211\u4eec\u5148\u6c42\u51fa\u4e0d\u5927\u4e8e $ n $ \u7684\u4e00\u4e2a\u6700\u5927\u7684\u53ea\u7531 `0,1` \u7ec4\u6210\u7684\u6570\u6211\u4eec\u8981\u600e\u4e48\u6c42\u8fd9\u4e2a\u6570\u5462\u3002\u5e9f\u8bdd\u4e0d\u8bf4\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nscanf(\"%lld\",& n);\n\t//\u5c06\u8fd9\u4e2a\u6570\u7684\u6bcf\u4e00\u4f4d\u5206\u89e3\n\twhile(n!=0){\n\t\tnum.push_back(n%10);\n\t\tn/=10;\n\t}\n\n\tfor(int i=num.size()-1;i>=0;i--){\n\t\tif(num[i]>1) //\u5982\u679c\u8fd9\u4e2a\u4f4d\u5b50\u4e0a\u7684\u6570\u5927\u4e8e1\u4e86,\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u90a3\u4e2a\u6570\u4e4b\u540e\u7684\u51e0\u4f4d\u5c31\u5168\u662f1\u4e86\n\t\t\tflag=true;\n\t\tif(flag)\n\t\t\tmaxn.push_back(1);\n\t\telse{ //\u7531\u4e8e\u4e0d\u80fd\u8ba9\u6240\u6c42\u7684\u6570\u8d85\u8fc7n\u6240\u4ee5\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u6570\u5c3d\u91cf\u5927,\u5982\u679c\u662f1\u7684\u5730\u65b9\u5c31\u662f1,\u4e0d\u662f1\u7684\u5730\u65b9\u5c31\u662f0,\u8fd9\u6837\u6240\u6c42\u7684\u6570\u5c31\u4e0d\u4f1a\u8d85\u8fc7\u539f\u6765\u7684\u6570\n\t\t\tif(num[i]==1)\n\t\t\t\tmaxn.push_back(1);\n\t\t\telse\n\t\t\t\tmaxn.push_back(0);\n\t\t}\n\t}\n```\n\n\u5047\u5982\u6211\u4eec\u6709\u4e00\u4e2a10013027\u90a3\u4e48\u6211\u4eec\u4e4b\u540e\u5f97\u5230\u7684\u6570\u5c31\u662f10011111\uff0c\u4e4b\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u8fd9\u4e2a\u6570\u8fdb\u884c\u4e00\u4e9b1\u53d8\u62100\u62160\u53d8\u62101\u4e4b\u7c7b\u6216\u8005\u4ec0\u4e48\u64cd\u4f5c\u90fd\u4e0d\u505a\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u3002\u5bf9\u4e8e\u4f8b\u5b50\u4e2d\u5f97\u5230\u7684\u657010011111\uff0c\u5047\u5982\u6211\u4eec\u8ba9\u7b2c\u4e00\u4e2a1\u53d8\u62100\uff0c\u90a3\u4e48\u540e\u9762\u7684\u6570\u4e0d\u7ba1\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\u7684\u5230\u7684\u6570\u4e00\u5b9a\u662f\u5c0f\u4e8e\u4f8b\u5b50\u4e2d\u7684\u5f97\u5230\u7684\u6570\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5047\u8bbe\u5f53\u524d\u4f4d\u7f6e\u4e3ai\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528`2^(len-i)`\u53bb\u66f4\u65b0\u7b54\u6848 `len` \u5c31\u662f\u90a3\u4e2a\u5f97\u5230\u7684\u6570\u7684\u957f\u5ea6\u3002\n\n> Ps:\u8fd9\u4e2a\u7b97\u6cd5\u8fd9\u4e48\u89e3\u91ca\u6709\u4e9b\u5730\u65b9\u5176\u5b9e\u662f\u4e0d\u5bf9\u7684\uff0c\u4f46\u662f\u8fd9\u4e9b\u5730\u65b9\u96be\u4ee5\u7528\u8a00\u8bed\u89e3\u91ca\u6e05\u695a\uff0c\u6240\u4ee5\u4f60\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u8bc1\u660e\uff0c\u4f46\u662f\u8fd9\u4e2a\u601d\u8def\u7684\u5927\u4f53\u65b9\u5411\u5c31\u662f\u8fd9\u6837\u6ca1\u9519\u7684\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u7a0b\u5e8f\u8dd1\u5f97\u66f4\u5feb\uff0c\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6765\u4f18\u5316\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nbool flag=false;\nlong long n;\nvector <int> num,maxn; //\u6ce8\u610f:maxn\u662f\u53cd\u8fc7\u6765\u5b58\u7684\n\nlong long power(long long x,long long y)\n{\n\tlong long ans=1,base=x;\n\twhile(y!=0){\n\t\tif(y&1)\n\t\t\tans=ans*base;\n\t\tbase=base*base;\n\t\ty>>=1;\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tscanf(\"%lld\",& n);\n\twhile(n!=0){\n\t\tnum.push_back(n%10);\n\t\tn/=10;\n\t}\n\n\tfor(int i=num.size()-1;i>=0;i--){\n\t\tif(num[i]>1)\n\t\t\tflag=true;\n\t\tif(flag)\n\t\t\tmaxn.push_back(1);\n\t\telse{\n\t\t\tif(num[i]==1)\n\t\t\t\tmaxn.push_back(1);\n\t\t\telse\n\t\t\t\tmaxn.push_back(0);\n\t\t}\n\t}\n\n\tlong long ans=0;\n\tfor(register int i=0;i<(int)maxn.size();i++){\n\t\tif(maxn[i]==1){\n\t\t\tans+=power(2,(int)maxn.size()-1-i);\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n}\n```",
        "postTime": 1535116090,
        "uid": 59464,
        "name": "lixiao189",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "\u8fd9\u9898\u672c\u849f\u84bb\u4e5f\u662f\u548c\u5404\u4f4d\u5927\u4f6c\u540c\u6837\u6df1\u53d7#15\u7684\u56f0\u6270\uff0c\u4e0d\u7ba1\u672c\u849f\u84bb\u600e\u4e48\u4f18\u5316\u90fdTLE\u4e86\uff0c\u7531\u6b64\u6211\u51b3\u5b9a\u91c7\u7528\u961f\u5217\uff08~~\u6291\u5236\u4f4f\u6253\u8868\u7684\u51b2\u52a8~~\uff09\u7684\u65b9\u6cd5\u3002\u6ca1\u9519\uff0c\u5c31\u662f\u961f\u5217 \u3002\n\n\n\n\u6b64\u9898\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u8d85\u7ea7\u7d20\u6570\u7684\u505a\u6cd5\uff08\u5145\u4e00\u4e0b\u5927\u4f6c\uff08~~\u6ed1\u7a3d~~\uff09\uff09\uff0c\u91c7\u7528\u4e00\u4e2a\u961f\u5217\u6765\u5b58\u50a8\u6bcf\u6b21\u6c42\u5f97\u7684\u8fd9\u4e2a\u4ec0\u4e48\u4ec0\u4e48number\uff08~~\u82f1\u8bed\u4e0d\u597d~~\uff09\u3002\u961f\u5934\u65e2\u662f\u7528\u6765\u6c42\u6570\uff0c\u4e5f\u662f\u5224\u65ad\u7684\u6761\u4ef6\uff08\u56e0\u4e3a\u961f\u5c3e\u4e0d\u597d\u5224\u65ad\uff09\uff0c\u81f3\u4e8e\u600e\u4e48\u6c42\uff0c\u56e0\u4e3a\u662f\u67090\u548c1\u7ec4\u6210\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u5927\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8f83\u5c0f\u7684\u6570*10+0\u62161\n\n\n\u4e0a\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a,sum,num[100000]={0,1},head=1,tail=1;\nint init(int x){//\u6570\u7ec4\u8d4b\u503c\uff0c\u987a\u4fbf\u6c42\u7b54\u6848\n\twhile(num[head]<=x){\n\t\tnum[++tail]=num[head]*10;\n\t\tnum[++tail]=num[head]*10+1;\n\t\thead++;\n\t}\n\treturn head-1;\n}\nint main()\n{\n\tscanf(\"%d\",&a);\n\tprintf(\"%d\",init(a));//\u4e3b\u7a0b\u5e8f\u76f4\u63a5\u8f93\u5165\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\n return 0;\n }\n\n```",
        "postTime": 1519285727,
        "uid": 59566,
        "name": "niHaorn",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u6211\u89c9\u5f97\u5df2\u7ecf\u4e0d\u662f\u5165\u95e8\u9898\u4e86\uff0c\u5e94\u8be5\u662f\u6709\u4eba\u6545\u610f\u5224\u5206\u7684\u3002~~   \n\u597d\u5566\uff0c\u5148\u4e0d\u8bf4\u8fd9\u4e9b\u5566\u3002\u8fd9\u9053\u9898\u786e\u786e\u5b9e\u5b9e\u8981\u7528\u9012\u5f52\u3002   \n\u6211\u4eec\u5148\u6309\u7167\u9898\u76ee\u4e3e\u4e00\u4e9b\u6817\u5b50\uff1a\u50cf1\uff0c10,100,1000\u7b49\u8fd9\u4e9b\u6570\u90fd\u662f\u7b26\u5408\u9898\u76ee\u8981\u6c42\u7684\u3002   \n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\uff1a\u7b26\u5408\u8981\u6c42\u7684\u6570\u5c31\u662f\u4e8c\u8fdb\u5236\u6570\uff01\uff01\uff01   \n\u7ecf\u8fc7~~\u5927\u91cf\u7684\u8ba1\u7b97~~\u6211\u4eec\u53d1\u73b0\uff0c\u4e8c\u8fdb\u5236\u6570\u90fd\u662f\u50cfx\uff08\u4e0d\u5b9a\u6570\u6216\u672a\u77e5\u6570\uff09* 10\u6216x* 10+1\u7684\u6570\u3002   \n\u8fd9\u65f6\uff0c\u516c\u5f0f\u51fa\u6765\u5566\uff01\uff01\uff01   \n\u63a5\u4e0b\u6765\u662f\u5236\u4f5c\u8fc7\u7a0b\uff1a   \n\u9996\u5148\u5148\u8f93\u5165\uff0c\u7136\u540e\u9012\u5f52\u5f00\u59cb\u3002\uff08\u7b2c\u4e00\u6b21\u8f93\u51651\uff09\u5728\u9012\u5f52\u65f6\uff0c\u53ea\u9700\u8981\u5224\u65ad\u8f93\u8fdb\u6765\u7684\u6570x\u662f\u5426\u5927\u4e8en\uff0c\u5982\u679c\u5927\u4e86\uff0c\u5c31\u7ed3\u675f\u9012\u5f52\uff0c\u5426\u5219\uff0c\u8ba1\u6570\u5668\u5c31\u52a0\u4e00\u3002\u7136\u540e\u518d\u5c06x* 10\u4e0ex* 10+1\u5206\u522b\u8f93\u8fdb\u63a5\u4e0b\u6765\u7684\u4e24\u4e2a\u9012\u5f52\u4e2d\uff08\u987a\u5e8f\u561b\u2026\u2026\u4e3a\u4e86\u9632\u6284\u88ad\uff0c\u4f60\u81ea\u5df1\u60f3\uff01\uff01\uff01\uff09\u3002\u6700\u540e\u8f93\u51fa\u8ba1\u6570\u5668\u5373\u53ef\uff01   \n\uff08\u4e3a\u4e86\u54cd\u5e94\u6d1b\u8c37\u7684\u201c\u4e0d\u8981\u6284\u88ad\u201d\u7684\u53e3\u53f7\uff0c\u7a0b\u5e8f\u561b\u2026\u2026\u5c31\u4e0d\u5199\u51fa\u6765\u4e86\uff01\uff01\uff01\uff09",
        "postTime": 1582966671,
        "uid": 266798,
        "name": "\u5317\u96ea2009",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "## BFS\\DFS \u5165\u95e8\u597d\u9898\n\n~~\u6253\u8868\u7684\u6211\u5f88\u4f69\u670d~~\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\uff0c\u5176\u4e2a\u4f4d\u53ea\u6709$0$\u548c$1$\u3002\n\n\u5373\u5bf9\u4e8e\u4efb\u4e00\u7b54\u6848$n$\uff0c\u603b\u6709\uff1a\n\n\u2488$\\;\\;\\;$$n=k*10$\uff08\u5373\u4e2a\u4f4d\u4e3a$0$\uff09\n\n\u2489$\\;\\;\\;$$n=k*10+1$\uff08\u5373\u4e2a\u4f4d\u4e3a$1$\uff09\n\n\uff08\u5176\u4e2d$k$\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\uff09\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u6253\u51faDFS$\\texttt{Code}$\uff1a\n\n```\n#include<cstdio>\nint n,res;//res\u8bb0\u5f55\u7b54\u6848\nvoid dfs(int x){\n    if(x>n)return;//\u592a\u5927\u9000\u51fa\n    ++res;\n    dfs(x*10);//\u6b64\u4f4d\u4e3a0\n    dfs(x*10+1);//\u6b64\u4f4d\u4e3a1\n}\nint main(){\n    scanf(\"%d\",&n);\n    dfs(1);//\u6700\u5c0f\u662f\u4e00\n    printf(\"%d\",res);\n}\n```\nBFS\u7684\u601d\u60f3\uff1a\n\n\u2488$\\;\\;\\;$\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u3002\n\n```priority_queue<long long,vector<long long>,greater<long long> >q;```\n\n**\u6ce8\u610f\uff1a\u8981\u7528$long\\;long$\uff0c\u56e0\u4e3a\u5728$n=_{10}9$\u65f6\u961f\u5217\u91cc\u7684\u5143\u7d20\u4f1a\u8d85\u8fc7MAX_INT**\n\n\u5176\u5b9e\u5199\u8fd9\u4e48\u957f\u4e00\u4e32\u662f\u4e3a\u4e86\u65b9\u4fbf\u7684\u53d6\u51fa\u6700\u5c0f\u5143\u7d20\u3002\n\n\u2489$\\;\\;\\;$\u521d\u59cb\u5316\u3002\n```\n\tscanf(\"%d\",&n);\n\tq.push(1);//\u628a\u6700\u5c0f\u7684\u5143\u7d20\u538b\u5165\u961f\u5217\n```\n\u248a$\\;\\;\\;$BFS\u4e3b\u8fc7\u7a0b\u3002\n```\n\twhile(1){\n\t\tlong long top=q.top();q.pop();//\u53d6\u51fa\u6700\u5c0f\u5143\u7d20\n\t\tif(top>n)break;//\u5982\u679c\u8fde\u6700\u5c0f\u5143\u7d20\u90fd\u6bd4n\u5927\uff0c\u7ed3\u675f\u5e76\u8f93\u51fa\u7b54\u6848\n\t\tans++;q.push(top*10);q.push(top*10+1);\n               //\u7b54\u6848\u52a0\u4e00\u5e76\u6269\u5c55\u8282\u70b9\n\t}\n```\n\u5b8c\u6574$\\color{blue}\\texttt{Code:}$\n```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,ans;\npriority_queue<long long,vector<long long>,greater<long long> >q;\nint main(){\n\tscanf(\"%d\",&n);\n\tq.push(1);\n\twhile(1){\n\t\tlong long top=q.top();q.pop();\n\t\tif(top>n)break;\n\t\tans++;q.push(top*10);q.push(top*10+1);\n\t}\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1562385770,
        "uid": 159686,
        "name": "Loser_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "###### \u8fd9\u9053\u9898\u7684\u610f\u601d\u662f\u8f93\u51fa1~n\u4e2d\u53ea\u75310\u62161\u7ec4\u6210\u7684\u6570\u7684\u4e2a\u6570\n## \u4e0b\u9762\u662f\u4e00\u79cdvery easy\u7684\u89e3\u6cd5\uff08\u5927\u4f6c\u8bf7\u65e0\u89c6\uff09\n# \u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint js(int n){\n    int a1,b1,c1,d1,e1,f1,h1,g1,i1,a,b,c,d,e,f,g,h,i,t=0;\n    for(a=0;a<=1;a++){//\u679a\u4e3e\u6240\u6709\u75310\u30011\u7ec4\u6210\u7684\u6570\n        a1=a;\n        for(b=0;b<=1;b++){\n            b1=a1*10+b;\n            for(c=0;c<=1;c++){\n                c1=b1*10+c;\n                for(d=0;d<=1;d++){\n                    d1=c1*10+d;\n                    for(e=0;e<=1;e++){\n                        e1=d1*10+e;\n                        for(f=0;f<=1;f++){\n                            f1=e1*10+f;\n                            for(g=0;g<=1;g++){\n                                g1=f1*10+g;\n                                for(h=0;h<=1;h++){\n                                    h1=g1*10+h;\n                                    for(i=0;i<=1;i++){\n                                        i1=h1*10+i;\n                                        if(i1<=n)t++;else return t;//\u8ba1\u7b97\u6570\u76ee\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u90fd\u662f\u5347\u5e8f\u6392\u5217\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5927\u4e8en\u65f6\u9000\u51fa\u3002\n                                    }    \n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }//\u5f3a\u8feb\u75c7\u5fcd\u4e0d\u4e86\n}\nint main(){\n    int n,s[1000],x=0,t=0;\n    cin>>n;\n    t=js(n);\n    if(n>=1000000000)cout<<t;else cout<<t-1;//\u8865\u4e0a\u6700\u540e\u4e00\u4e2a\u6570\uff08\u6709\u4e00\u4e2a\u6570\u636e\u70b9\u662f1000000000\uff09\uff0c\u8f93\u51fa\n}\n```\n## \u4e5d\u91cd\u5faa\u73af\u5b8c\u6210   ~~\uff08\u6253\u7684\u771f\u7d2f\uff09~~",
        "postTime": 1568291445,
        "uid": 145040,
        "name": "shenzuxin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "Hexadecimal's Numbers\n\n\u8fde\u7eed\u505a\u4e86\u90a3\u4e48\u591a\u9053\u641c\u7d22\u9898\u540e\u770b\u5230\u8fd9\u9898\uff0c~~\u6fc0\u52a8\u5230\u54ed~~\uff08\u7ec8\u4e8e\u6709\u4e00\u9053\u7b80\u5355\u7684\u4e86\uff09\n\n```\nPS:\n0*10=0\uff08\u4e0d\u7b97\uff0c\u56e0\u4e3a\u4ece1\u5f00\u59cb\uff09\n0*10+1=1\uff1b\n1*10=10\uff1b\n1*10+1=11\uff1b\n10*10=100\uff1b\n10*10+1=101\uff1b\n11*10=110\uff1b\n11*10+1=111\n\u3002\n\u3002\n\u3002\n\u3002\n\u3002\n\u3002\n\u4e0a\u4ee3\u7801\uff1a\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\nusing namespace std;\n\ninline int read()\n{\n\tchar chr=getchar();\n\tint f=1,ans=0;\n\twhile(!isdigit(chr)) {if(chr=='-') f=-1;chr=getchar();}\n\twhile(isdigit(chr))  {ans=ans*10;ans+=chr-'0';chr=getchar();}\n\treturn ans*f;\n\n}//\u54ea\u6015\u53ea\u6709\u4e00\u4e2a\u6570\u636e\uff0c\u4e5f\u8981\u575a\u5b9a\u7684\u4f7f\u7528\u5feb\u8bfb\uff1b\nint n;\nint ans=0;\nvoid dfs(int x)\n{\n\tif(x>n) return;//\u5982\u679c\u592a\u5927\u4e86\u5c31\u76f4\u63a5return\uff1b\n\tans++;//\u641c\u5230\u4e00\u4e2a\u6570\u540e\u7b54\u6848\u603b\u6570+1\n\tif(x!=0)\n\t\tdfs(x*10);\n\tdfs(x*10+1);\u8fd9\u6837\u53ef\u4ee5\u4f7f\u6570\u5b57\u4e2d\u53ea\u67090\u548c1\n}\n\nint main()\n{\n\tn=read(;\n\tdfs(0);\n\tans--;//\u7531\u4e8e\u67d0\u4e2a\u6570\uff08\u81ea\u5df1\u60f3\u60f3\u770b\uff08~~\u5176\u5b9e\u662f\u6211\u81ea\u5df1\u61d2\u5f97\u770b~~\uff09\uff09\u4e0d\u80fd\u8bb0\u8fdb\u53bb\n\tcout<<ans;\n\treturn 0;\n}\n\n```",
        "postTime": 1531207861,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    },
    {
        "content": "# \u9898\u89e3 CF9C\n------------\n# \u770b\u6ca1\u6709pascal\u7684\u9898\u89e3\uff0c\u8d81\u673a\u6765\u4e00\u53d1\u2014\u2014\u2014\n## \u4e00\u9053\u6c34\u9898\uff08\u4e0d\u8fc7\u7b2c15\u4e2a\u6d4b\u8bd5\u70b9\u6709\u5751\uff01\uff09\n## \u6253\u8868\u76f4\u63a5\u8fc7~~~\n## \u4e0d\u8bf4\u592a\u591a\uff0c\u4e0a\u4ee3\u7801\uff1a\n    var i,n,m:int64;\n    x:array[1..512]of longint=(1,10,11,100,101,110,111,1000,1001,\n    1010,1011,1100,1101,1110,1111,10000,10001,10010,\n    10011,10100,10101,10110,10111,11000,11001,11010,\n    11011,11100,11101,11110,11111,100000,100001,100010,100011,\n    100100,100101,100110,100111,101000,101001,101010,101011,101100,\n    101101,101110,101111,110000,110001,110010,110011,110100,110101,\n    110110,110111,111000,111001,111010,111011,111100,111101,111110,\n    111111,1000000,1000001,1000010,1000011,1000100,1000101,\n    1000110,1000111,1001000,1001001,1001010,1001011,1001100,1001101,\n    1001110,1001111,1010000,1010001,1010010,1010011,1010100,1010101,\n    1010110,1010111,1011000,1011001,1011010,\n    1011011,1011100,1011101,1011110,1011111,1100000,1100001,1100010,\n    1100011,1100100,1100101,1100110,1100111,1101000,1101001,1101010,\n    1101011,1101100,1101101,1101110,1101111,1110000,1110001,1110010,\n    1110011,\n    1110100,1110101,1110110,1110111,1111000,1111001,\n    1111010,1111011,1111100,1111101,1111110,1111111,\n    10000000,10000001,10000010,10000011,10000100,10000101,\n    10000110,10000111,10001000,10001001,10001010,10001011,\n    10001100,10001101,10001110,10001111,10010000,10010001,\n    10010010,10010011,10010100,10010101,10010110,10010111,\n    10011000,10011001,10011010,10011011,10011100,10011101,\n    10011110,10011111,10100000,10100001,\n    10100010,10100011,10100100,10100101,10100110,10100111,\n    10101000,10101001,10101010,10101011,10101100,10101101,\n    10101110,10101111,10110000,10110001,10110010,10110011,\n    10110100,10110101,10110110,10110111,\n    10111000,10111001,10111010,10111011,10111100,10111101,\n    10111110,10111111,11000000,11000001,11000010,11000011,\n    11000100,11000101,11000110,11000111,11001000,11001001,\n    11001010,11001011,11001100,11001101,11001110,\n    11001111,11010000,11010001,11010010,11010011,\n    11010100,11010101,11010110,11010111,11011000,11011001,\n    11011010,11011011,11011100,11011101,11011110,11011111,\n    11100000,11100001,11100010,11100011,11100100,11100101,\n    11100110,11100111,11101000,11101001,11101010,11101011,\n    11101100,11101101,11101110,11101111,11110000,11110001,\n    11110010,11110011,11110100,11110101,11110110,11110111,\n    11111000,11111001,11111010,11111011,11111100,11111101,\n    11111110,11111111,100000000,100000001,100000010,100000011,\n    100000100,100000101,100000110,100000111,100001000,100001001,\n    100001010,100001011,100001100,100001101,100001110,\n    100001111,100010000,100010001,100010010,100010011,\n    100010100,100010101,100010110,100010111,100011000,\n    100011001,100011010,100011011,100011100,100011101,\n    100011110,100011111,100100000,100100001,100100010,\n    100100011,100100100,100100101,100100110,100100111,\n    100101000,100101001,100101010,100101011,100101100,\n    100101101,100101110,100101111,100110000,100110001,\n    100110010,100110011,100110100,100110101,100110110,\n    100110111,100111000,100111001,100111010,100111011,\n    100111100,100111101,100111110,100111111,101000000,\n    101000001,101000010,101000011,101000100,101000101,\n    101000110,101000111,101001000,101001001,101001010,\n    101001011,101001100,101001101,101001110,101001111,\n    101010000,101010001,101010010,101010011,101010100,\n    101010101,101010110,101010111,101011000,101011001,\n    101011010,101011011,101011100,101011101,101011110,\n    101011111,101100000,101100001,101100010,101100011,\n    101100100,101100101,101100110,101100111,101101000,\n    101101001,101101010,101101011,101101100,101101101,\n    101101110,101101111,101110000,101110001,101110010,\n    101110011,101110100,101110101,101110110,101110111,\n    101111000,101111001,101111010,101111011,101111100,\n    101111101,101111110,101111111,110000000,110000001,\n    110000010,110000011,110000100,110000101,110000110,\n    110000111,110001000,110001001,110001010,110001011,\n    110001100,110001101,110001110,110001111,110010000,\n    110010001,110010010,110010011,110010100,110010101,\n    110010110,110010111,110011000,110011001,110011010,\n    110011011,110011100,110011101,110011110,110011111,\n    110100000,110100001,110100010,110100011,110100100,\n    110100101,110100110,110100111,110101000,110101001,\n    110101010,110101011,110101100,110101101,110101110,\n    110101111,110110000,110110001,110110010,110110011,\n    110110100,110110101,110110110,110110111,110111000,\n    110111001,110111010,110111011,110111100,110111101,\n    110111110,110111111,111000000,111000001,111000010,\n    111000011,111000100,111000101,111000110,111000111,\n    111001000,111001001,111001010,111001011,111001100,\n    111001101,111001110,111001111,111010000,111010001,\n    111010010,111010011,111010100,111010101,111010110,\n    111010111,111011000,111011001,111011010,111011011,\n    111011100,111011101,111011110,111011111,111100000,\n    111100001,111100010,111100011,111100100,111100101,\n    111100110,111100111,111101000,111101001,111101010,\n    111101011,111101100,111101101,111101110,111101111,\n    111110000,111110001,111110010,111110011,111110100,\n    111110101,111110110,111110111,111111000,111111001,\n    111111010,111111011,111111100,111111101,111111110,\n    111111111,1000000000);//\u6253\u8868\n    begin\n    readln(n);//\u8f93\u5165\n    if n>=1000000000 then//\u9632\u5fa1\u7b2c15\u4e2a\u70b9\u7684bug\n    begin\n     writeln(512);//\u8f93\u51fa512\n     halt;//\u8df3\u51fa\n    end;\n    repeat//repeat\u8bed\u53e5\n     i:=i+1;//i\u52a01\n    until x[i]>n;//\u5982\u679c\u5df2\u7ecf>n\uff0c\u8df3\u51fa\n    writeln(i-1);//\u8f93\u51fa\uff08\u8981\u51cf\u4e00\uff09\n    end.\n# \u4ee3\u7801\u8f83\u957f\uff0cdalao\u52ff\u55b7\n# \u4e25\u7981\u6284\u88ad\uff01\uff01\uff01\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1519274754,
        "uid": 70299,
        "name": "Andysun06",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF9C \u3010Hexadecimal's Numbers\u3011"
    }
]