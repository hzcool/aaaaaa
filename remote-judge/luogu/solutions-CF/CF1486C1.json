[
    {
        "content": "\u8003\u8651\u5230\u53ea\u6709 $20$ \u6b21\u8be2\u95ee\uff0c\u7b2c\u4e00\u53cd\u5e94\u663e\u7136\u662f\u4e8c\u5206\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a\u4fe1\u606f\u662f\u6240\u6709\u7684\u6570\u4e92\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5217\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6570\u662f\u5927\u4e8e\u6574\u4e2a\u5e8f\u5217\u7684\u6b21\u5927\u503c\u3002\u627e\u5230\u8fd9\u4e2a\u6b21\u5927\u503c\uff0c\u8bbe\u5176\u4f4d\u7f6e\u4e3a $p$\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8981\u627e\u5230\u6700\u5927\u503c\u6240\u5728\u7684\u76f8\u5bf9\u4f4d\u7f6e\u2014\u2014\u5728 $p$ \u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019\u518d\u53cd\u987e\u8fd9\u4e2a\u6027\u8d28\uff1a\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6570\u662f\u5927\u4e8e\u6574\u4e2a\u5e8f\u5217\u7684\u6b21\u5927\u503c\u3002\n\n\u90a3\u4e48\u53ea\u6709\u5728\u5305\u542b\u8fd9\u4e2a\u6700\u5927\u503c\u548c $p$ \u7684\u65f6\u5019\uff0c$p$ \u624d\u4f1a\u4f5c\u4e3a\u6b21\u5927\u503c\u3002\n\n\u77e5\u9053\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u518d\u8fdb\u884c\u4e00\u6b21\u8be2\u95ee\u3002\u8be2\u95ee $[1,p]$ \u7684\u6b21\u5927\u503c\u662f\u591a\u5c11\u3002\u5982\u679c\u8be2\u95ee\u7684\u7ed3\u679c\u8fd8\u662f $p$\uff0c\u90a3\u4e48\u8bf4\u660e $[1,p-1]$ \u5b58\u5728\u6700\u5927\u503c\uff1b\u5426\u5219 $[p+1,n]$ \u5b58\u5728\u6700\u5927\u503c\u3002\n\n\u6ce8\u610f\u6709\u4e00\u4e2a\u5c0f\u5751\u70b9\u662f\uff0c\u5982\u679c $p$ \u662f $1$\uff0c\u90a3\u4e48\u4e0d\u80fd\u591f\u67e5\u8be2 $[1,p]$\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u786e\u5b9a\u6700\u5927\u503c\u6240\u5728\u533a\u95f4\u5728 $[2,n]$\u3002\n\n\u90a3\u4e48\u8003\u8651\u4e8c\u5206\u6700\u5927\u503c\u6240\u5728\uff0c\u56e0\u4e3a\u4e0a\u9762\u63d0\u5230\u7684\u6027\u8d28\uff0c\u5982\u679c\u540c\u65f6\u5305\u542b $p$ \u548c\u6700\u5927\u503c\uff0c\u67e5\u8be2\u7684\u7ed3\u679c\u5c31\u662f $p$\u3002\n\n\u90a3\u4e48\uff0c\u5047\u8bbe\u6700\u5927\u503c\u6240\u5728\u533a\u95f4\u662f $[1,p-1]$\uff0c\u90a3\u4e48\u6bcf\u6b21\u4e8c\u5206\u67e5\u8be2 $[mid,p]$\u3002\u5982\u679c\u67e5\u8be2\u7ed3\u679c\u662f $p$\uff0c\u5c31\u5c06 $l$ \u5f80\u53f3\u79fb\uff1b\u5426\u5219\u5c06 $r$ \u5f80\u5de6\u79fb\u3002\u540c\u7406\u89e3\u51b3 $[p+1,n]$\u3002\u67e5\u8be2\u6b21\u6570\u662f $O(\\log n)$ \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u6240\u4ee5\u8c01\u544a\u8bc9\u6211 C1 C2 \u6709\u4ec0\u4e48\u533a\u522b\uff1f\uff1f\uff1f\uff1f\uff1f\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define F fflush(stdout)\nint n;\nint main(){\n\tscanf(\"%d\",&n);\n\tint p;\n\tprintf(\"? 1 %d\\n\",n);\n\tF;\n\tscanf(\"%d\",&p);\n\tint l=1,r=n;\n\tif(p==1)\n\t{\n\t\tl=2;\n\t}\n\telse\n\t{\n\t\tint dk;\n\t\tprintf(\"? %d %d\\n\",1,p);\n\t\tF;\n\t\tscanf(\"%d\",&dk);\n\t\tif(dk==p)\tr=p-1;\n\t\telse\tl=p+1;\n\t}\n\tif(l==p+1)\n\t{\n\t\twhile(l<r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tprintf(\"? %d %d\\n\",p,mid);\n\t\t\tF;\n\t\t\tint sp;\n\t\t\tscanf(\"%d\",&sp);\n\t\t\tif(sp==p)\tr=mid;\n\t\t\telse\tl=mid+1;\n\t\t}\n\t}\n\telse\n\t{\n\t\twhile(l<r)\n\t\t{\n\t\t\tint mid=(l+r+1)>>1;\n\t\t\tprintf(\"? %d %d\\n\",mid,p);\n\t\t\tF;\n\t\t\tint sp;\n\t\t\tscanf(\"%d\",&sp);\n\t\t\tif(sp==p)\tl=mid;\n\t\t\telse\tr=mid-1;\n\t\t}\n\t}\n\tprintf(\"! %d\",l);\n\tF;\n\treturn 0;\n}\n```",
        "postTime": 1613792442,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "CF1486C1 Guessing the Greatest (easy version) \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u8be2\u95ee\u6b21\u6570\u662f log \u7ea7\u522b\u7684\u80af\u5b9a\u662f\u60f3\u4e8c\u5206\uff0c$20$ \u53ef\u4ee5\u5141\u8bb8\u6bcf\u4e00\u6b21\u4e8c\u5206\u8be2\u95ee\u4e00\u6b21,$40$ \u53ef\u4ee5\u8be2\u95ee\u4e24\u6b21\u3002\n\n\u8003\u8651\u76ee\u524d\u5df2\u77e5\u9053\u5f53\u524d\u533a\u95f4\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u8981\u786e\u5b9a\u6700\u5927\u503c\u6240\u5728\u7684\u5b50\u533a\u95f4\u7684\u6b21\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u8be2\u95ee\u51fa  $[l,mid]$ \u548c $[mid+1,r]$ \u7684\u6b21\u5927\u503c\u4f4d\u7f6e\uff0c\u800c\u6211\u4eec\u76ee\u524d\u77e5\u9053\u7684\u6b21\u5927\u503c\u4e00\u5b9a\u662f\u5728\u8fd9\u4e24\u4e2a\u533a\u95f4\u4e4b\u4e2d\u7684\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u5b50\u533a\u95f4\u7684\u6b21\u5927\u503c\u5c31\u662f\u76ee\u524d\u533a\u95f4\u7684\u6b21\u5927\u503c\uff0c\u90a3\u4e48\u6700\u5927\u503c\u4e5f\u4e00\u5b9a\u5728\u8fd9\u4e2a\u533a\u95f4\u4e4b\u4e2d\uff08\u56e0\u4e3a\u6ca1\u6709\u6570\u6bd4\u8fd9\u4e2a\u8fd8\u5927\u4e86\uff09\uff0c\u5426\u5219\u5b83\u4e00\u5b9a\u662f\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u5168\u5c40\u6700\u5927\u503c\u4e00\u5b9a\u5728\u53e6\u4e00\u4e2a\u5b50\u533a\u95f4\u4e4b\u4e2d\u3002\n\n\u8be2\u95ee\u6b21\u6570\u5927\u6982\u662f $2*log_2 n$\u3002\n\ncode:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, a[100001];\nint query(int l, int r) {\n  cout << \"? \" << l << \" \" << r << endl;\n  cout.flush();\n  int idx;\n  cin >> idx;\n  return idx;\n}\nvoid answer(int x) {\n  cout << \"! \" << x << endl;\n  cout.flush();\n}\nint main() {\n  cin >> n;\n  int l = 1, r = n;\n  while (r - l > 1) {\n    int mid = (l + r) / 2;\n    int v = query(l, r);\n    if (v <= mid) {\n      if (l == mid) {\n        l = mid + 1;\n        continue;\n      }\n      if (query(l, mid) != v) {\n        l = mid + 1;\n      } else {\n        r = mid;\n      }\n    } else {\n      if (mid + 1 == r) {\n        r = mid;\n        continue;\n      }\n      if (query(mid + 1, r) != v) {\n        r = mid;\n      } else {\n        l = mid + 1;\n      }\n    }\n  }\n  if (l == r) {\n    answer(l);\n    return 0;\n  }\n  if (query(l, r) == r)\n    answer(l);\n  else\n    answer(r);\n  return 0;\n}\n```",
        "postTime": 1614064687,
        "uid": 350415,
        "name": "swiftqwq",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1486 C1"
    },
    {
        "content": "## [CF\u4f20\u9001\u95e8](https://codeforces.ml/contest/1486/problem/C1)\n## [\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1486C1)\n# \u601d\u8def\n## \u9898\u610f\u770b\u4e0a\u53bb\u662f\u53ef\u4ee5\u5728\u4efb\u610f\u533a\u95f4\u8be2\u95ee\u3002\n\n\u4f46\u4ed4\u7ec6\u5206\u6790\u9898\u76ee\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b2c\u4e00\u6b65\u53ea\u80fd\u5728\u6574\u4e2a\u533a\u95f4\u8fdb\u884c\u67e5\u8be2\u3002\n\n\u56e0\u4e3a\u5728\u5b50\u533a\u95f4\u67e5\u8be2\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u8fd8\u6d6a\u8d39\u4e86\u4e00\u6b21\u67e5\u8be2\u3002\n\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u8bbe\u67e5\u5230\u7684\u6570\u4e3a $m$\u3002\n\n\u5728\u67e5\u8be2\u5230\u4e86\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e $m$ \u8fdb\u884c\u4e8c\u5206\u67e5\u627e\u3002\n\n## \u8fd9\u65f6\u53c8\u6709\u4e24\u4e2a\u9009\u62e9\uff0c\u5728\u5de6\u533a\u95f4\u67e5\u6216\u5728\u53f3\u533a\u95f4\u67e5\n\n\u5176\u5b9e\u8fd9\u65f6\u5728 $m$ \u6240\u5728\u7684\u533a\u95f4\u67e5\u662f\u6700\u503c\u7684\u3002\n\n\u56e0\u4e3a\u5982\u679c\u67e5\u8be2\u7ed3\u679c\u548c $m$ \u4e00\u6837\uff0c\u90a3\u4e48\u6700\u5927\u6570\u5c31\u5728\u5f53\u524d\u533a\u95f4\u3002\n\n\u5426\u5219\u5c31\u5728\u53e6\u4e00\u4e2a\u533a\u95f4\uff0c\u56e0\u4e3a\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c\u6210\u4e86 $m$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u5bf9\u5206\u5230\u7684\u533a\u95f4\u8fdb\u884c\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e2a**\u540c\u7c7b\u5b50\u95ee\u9898**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd0\u7528**\u5206\u6cbb**\u7684\u601d\u60f3\uff0c**\u9012\u5f52\u8c03\u7528**\u5904\u7406\n\n## \u7ec6\u8282\n\n\u521a\u597d\u5728\u4e2d\u95f4\u7684\u70b9\u5728\u5904\u7406\u65f6\u4e24\u8fb9\u533a\u95f4\u90fd\u8981\u6709\u3002\n\n\u56e0\u4e3a\u6709\u65f6\u521a\u597d\u70b9\u4f1a\u5728\u5f53\u524d\u5e8f\u5217\u7684\u4e2d\u95f4\u70b9\u4e0a\u3002\n\n\u67e5\u8be2\u4e00\u5b9a\u8981\u67e5\u5f53\u524d\u533a\u95f4\uff0c\u4e0d\u662f\u67e5\u5de6\u6216\u67e5\u53f3\u3002\n\n\u9012\u5f52\u8fb9\u754c\u5728\u533a\u95f4\u957f\u5ea6\u4e3a $1$ \u6216 $2$\u3002\n# $code$\n~~~cpp\n#include <iostream>\nusing namespace std;\nint n;\ninline int fout(int a, int b) {  //\u4ea4\u4e92\u8be2\u95ee\n  cout << \"?\" << \" \" << a << \" \" << b << endl;\n  cout.flush();\n  int m;\n  cin >> m;\n  return m;\n}\nvoid Find(int l, int r) {\n  if (l == r) {\n    cout << \"!\" << \" \" << l;  //\u5c31\u662f\u5f53\u524d\u6570\n    cout.flush();\n    return;\n  }\n  if (l + 1 == r) {         //\u957f\u5ea6\u4e3a\u4e8c\n    if (l == fout(l, r)) {  //\u67e5\u627e\u8f83\u5c0f\u503c,\u53e6\u4e00\u4e2a\u5c31\u662f\u7b54\u6848\n      cout << \"!\" << \" \" << r;\n      cout.flush();\n    } else {\n      cout << \"!\" << \" \" << l;\n      cout.flush();\n    }\n    return;\n  }\n  int m = fout(l, r);      //\u67e5\u8be2\u5f53\u524d\u533a\u95f4\n  int k = (l + r) / 2;     //\u53d6\u4e2d\u70b9\n  if (l <= m && m <= k) {  //\u5728\u5de6\u53f3\u54ea\u4e2a\u533a\u95f4\n    if (fout(l, k) == m) {//k\u4e24\u8fb9\u90fd\u8981\u6709\n      Find(l, k);          //\u9012\u5f52\u5b50\u4efb\u52a1\n    } else {\n      Find(k, r);\n    }\n  } else {\n    if (fout(k, r) == m) {\n      Find(k, r);\n    } else {\n      Find(l, k);\n    }\n  }\n}\nint main() {\n  cin >> n;\n  Find(1, n);  //\u67e5\u627e\u6574\u4e2a\u533a\u95f4\n  return 0;\n}\n~~~",
        "postTime": 1613819300,
        "uid": 392856,
        "name": "\u4fe1\u5b88\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3CF1486C1 \u3010Guessing the Greatest (easy version)\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u4f60\u53ef\u4ee5\u67e5\u8be2\u4efb\u610f\u4e00\u4e2a\u5b50\u533a\u95f4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u6b21\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u8bd5\u5728\u4e0d\u8d85\u8fc7 $40$ \u6b21\u67e5\u8be2\u4e2d\u786e\u5b9a\u6240\u6709\u5143\u7d20\u7684\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u3002\n\n\u601d\u8def\uff1a\u5bf9\u4e8e\u533a\u95f4 $[l,r]$\uff0c\u8bbe $mid$ \u4e3a $\\lfloor\\frac{l+r}{2}\\rfloor$\uff0c\u5148\u67e5\u8be2 $[l,r]$ \u7684\u6b21\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u8bbe\u4e3a $m$\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u6211\u4eec\u5047\u8bbe $l\\leq m\\leq mid$\uff0c\u7136\u540e\u67e5\u8be2 $[l,mid]$ \u7684\u6b21\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u82e5\u5176\u4e0e $m$ \u76f8\u7b49\uff0c\u5219\u8bf4\u660e $[l,r]$ \u7684\u6700\u5927\u503c\u5728 $[l,mid]$ \u4e2d\uff0c\u5426\u5219 $[l,r]$ \u7684\u6700\u5927\u503c\u5728 $[mid,r]$ \u4e2d\u3002\u7ee7\u7eed\u9012\u5f52\u5230\u76f8\u5e94\u5b50\u533a\u95f4\uff0c\u76f4\u5230\u8be5\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u6570\u91cf\u4e0d\u591a\u4e8e\u4e24\u4e2a\uff0c\u82e5\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u663e\u7136\u8be5\u5143\u7d20\u7684\u4f4d\u7f6e\u4e3a\u7b54\u6848\uff0c\u82e5\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u5219 $m$ \u4e4b\u5916\u7684\u4f4d\u7f6e\u4e3a\u7b54\u6848\u3002\u67e5\u8be2\u6b21\u6570\u4e3a $O(2\\log n)\\leq40$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline void print(int k){\n\tcout<<\"! \"<<k<<endl;\n\tcout.flush();\n\texit(0);\n}\ninline int query(int l,int r){\n\tcout<<\"? \"<<l<<\" \"<<r<<endl;\n\tcout.flush();\n\tint tmp;\n\tcin>>tmp;\n\treturn tmp;\n}\nvoid dfs(int l,int r,int m){\n\tif(l+1>=r)print(l==m?r:l);\n\tint mid=l+r>>1,tmp;\n\tif(m<=mid){\n\t\ttmp=query(l,mid);\n\t\tif(tmp==m)dfs(l,mid,m);\n\t\telse dfs(mid,r,m==mid?m:query(mid,r));\n\t}\n\telse{\n\t\ttmp=query(mid,r);\n\t\tif(tmp==m)dfs(mid,r,m);\n\t\telse dfs(l,mid,query(l,mid));\n\t}\n}\nint n;\nint main(){\n\tcin>>n;\n\tdfs(1,n,query(1,n));\n\treturn 0;\n}\n```\n",
        "postTime": 1613791339,
        "uid": 67942,
        "name": "meyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3CF1486C1 \u3010Guessing the Greatest (easy version)\u3011"
    }
]