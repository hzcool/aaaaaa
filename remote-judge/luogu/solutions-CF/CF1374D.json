[
    {
        "content": "## CF1374D Zero Remainder Array \u9898\u89e3\n\u8fd9\u662f\u4e00\u7bc7\u7528\u4e86\u5927\u91cf STL \u7684\u9898\u89e3\u3002\n\n\u9996\u5148\u8bf7\u770b\u8fd9\u7ec4\u6837\u4f8b\uff1a\n\n**\u8f93\u5165**\n```\n1\n5 4\n4 6 6 3 6\n```\n**\u8f93\u51fa**\n```\n11\n```\n\n~~\u6211\u81ea\u5df1\u9020\u7684\u3002~~\n\n\u4e3a\u4e86\u628a\u6bcf\u4e2a $a_i$ \u90fd\u53d8\u6210 $k$ \u7684\u500d\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u628a\u6570\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u5bf9 $k$ \u53d6\u6a21\uff0c\u6839\u636e\u4f59\u6570\u6765\u770b\u8fd8\u9700\u8981\u7ed9\u8fd9\u4e2a\u6570\u52a0\u4e0a\u591a\u5c11\u3002\u4e8e\u662f\u8fd9\u4e2a\u6570\u5217\u5c31\u53ef\u4ee5\u53d8\u6210`0 2 2 3 2`\uff0c\u6392\u5e8f\u8fc7\u540e\u5c31\u662f`0 2 2 2 3`\uff0c\u8bbe\u8fd9\u4e2a\u6570\u5217\u4e3a $a$ \u6570\u7ec4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c$a_1$ \u5df2\u7ecf\u4e0d\u9700\u8981\u518d\u52a0\uff1b\u56e0\u4e3a $x$ \u7684\u503c\u4f1a\u53d8\u5927\uff0c\u6240\u4ee5 $a_2$ \u8fd8\u9700\u8981\u52a0 $2$\uff0c$a_3$ \u8981\u52a0 $6$\uff0c$a_4$ \u8981\u52a0 $10$\uff0c$a_5$ \u8981\u52a0 $1$\u3002$x$ \u7684\u503c\u5728\u6bcf\u6b21\u64cd\u4f5c\u65f6\u90fd\u4f1a\u52a0 $1$\uff0c\u53c8\u56e0\u4e3a\u9898\u76ee\u6700\u540e\u8bf4\uff1a\n>Note that you can't add $x$ to the same element more than once.\n\n\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u6570\u88ab\u52a0\u7684\u6b21\u6570\u4e0d\u80fd\u8d85\u8fc7\u4e00\u6b21\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u628a $x$ \u4e00\u8def\u52a0\u8fc7\u6765\uff0c\u5f53 $x$ \u5230\u8fbe $10$ \u7684\u65f6\u5019\u624d\u80fd\u628a $a_4$ \u53d8\u6210 $4$ \u7684\u500d\u6570\uff0c\u800c\u53e6\u5916\u7684\u6570\u5728\u8fd9\u4e4b\u524d\u90fd\u80fd\u88ab\u52a0\u597d\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u80fd\u8f6c\u5316\u4e3a\uff1a\u5bfb\u627e $a$ \u6570\u7ec4\u4e2d\u5143\u7d20\u90fd\u76f8\u7b49\u7684\u5b50\u6bb5\uff0c\u6c42\u51fa\u5b83\u4eec\u5404\u81ea\u9700\u8981\u628a $x$ \u52a0\u5230\u591a\u5c11\uff0c\u5e76\u6c42\u51fa\u8fd9\u4e9b\u503c\u7684\u6700\u5927\u503c\u3002\u89c2\u5bdf\u9898\u9762\u53ef\u4ee5\u5f97\u77e5\uff0c**\u6700\u7ec8\u8f93\u51fa\u7684\u7b54\u6848\u5c31\u4e3a $x$ \u7684\u6700\u5927\u503c\u52a0 $1$**\u3002\n\n\u8fd9\u91cc\u7528\u4e86\u96c6\u5408`set`\u7ed9 $a$ \u6570\u7ec4\u53bb\u91cd\uff0c\u4fbf\u4e8e\u540e\u671f\u627e\u5230\u4e00\u6bb5\u5b50\u6bb5\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u3002\n\n### Code\n```cpp\n#include<bits/stdc++.h>\n#define int long long //\u6b64\u9898\u8981\u5f00long long\n#define For(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Rep(i,a,b) for(register int i=(a);i>=(b);--i)\nusing namespace std;\nconst int maxn=200050;\nint T,n,k,a[maxn];\nset<int> st;\nsigned main()\n{\n    cin>>T;\n    while(T--)\n    {\n    \tcin>>n>>k;\n    \tst.clear(); //set\u521d\u59cb\u5316\n\t    For(i,1,n)\n\t        cin>>a[i],a[i]%=k,st.insert(a[i]); //\u5148\u8ba9a[i]\u5bf9k\u53d6\u6a21\uff0c\u5e76\u538b\u5165\u96c6\u5408\n\t    sort(a+1,a+n+1); //\u6392\u5e8f\n\t    int ans=0;\n\t    for(set<int>::iterator it=st.begin();it!=st.end();it++) //\u8fed\u4ee3\u5668\u904d\u5386set\n\t    {\n\t    \tif(*it==0) continue; //\u503c\u4e3a0\u5c31\u4e0d\u7528\u518d\u52a0\n\t    \tint num=(upper_bound(a+1,a+n+1,*it)-lower_bound(a+1,a+n+1,*it));\n\t    \t//\u7528upper_bound-lower_bound\u6c42\u6709\u7ec4\u6570\u5217\u4e2d\u503c\u4e3a*it\u7684\u5143\u7d20\u4e2a\u6570\n\t    \tans=max(ans,k-*it+(num-1)*k+1);\n\t    \t/*\n\t\t\t* \u7531\u4e8e\u8981\u6c42\u7684\u662f\u50cf2,6,10\u4e00\u6837\u7684\u7b49\u5dee\u6570\u5217\u7684\u672b\u9879\uff0c\n\t\t\t* \u5c31\u8981\u7528\u5230\u672b\u9879\u516c\u5f0f\uff1a\u672b\u9879=\u9996\u9879+(\u9879\u6570-1)\u00d7\u516c\u5dee\n\t\t\t* \u9996\u9879\u4e3a(k-*it)\uff0c\u9879\u6570\u4e3anum\uff0c\u516c\u5dee\u4e3ak\n\t\t\t* \u4e8e\u662fans=max(ans,k-*it+(num-1)*k+1) \u6ce8\u610f+1\u4e0d\u80fd\u5fd8\uff01\uff01 \n\t\t\t*/ \n\t\t}\n\t    cout<<ans<<endl;\n\t}\n    return 0;\n}\n```\n\u60f3\u770b\u65e0\u6ce8\u91ca\u7684\u4ee3\u7801\uff1f[\u70b9\u8fd9\u91cc](https://codeforces.ml/problemset/submission/1374/86017432)\u3002",
        "postTime": 1593913728,
        "uid": 219866,
        "name": "Blunt_Feeling",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1374D \u3010Zero Remainder Array\u3011"
    },
    {
        "content": "\u4e0d\u9700\u8981\u90a3\u4e48\u590d\u6742\u7684\u3002\n\n\u6ce8\u610f\u5230\u6709\u4e00\u53e5**\u52a0\u7c97**\u7684\u8bdd\uff1a\n>**\u6ce8\u610f\uff1a\u4f60\u53ea\u53ef\u4ee5\u7ed9\u540c\u4e00\u4e2a\u6570\u52a0\u4e00\u6b21 $x$** \u3002\n\n\u8fd9\u6837\u5c31\u5f88\u7b80\u5355\u4e86\uff01\n\n\u5bf9\u4e8e $a_i$ \u53ea\u8981 $a_i$ \u4e0d\u80fd\u88ab $k$ \u6574\u9664\uff0c\u5c31\u8981\u52a0\u4e0a $b$ \uff0c\u6ee1\u8db3 $b$ $mod(k)=k-a$ $mod(k)$ \u3002\n\n\u5982\u679c\u6709 $m$ \u4e2a\u6570\u6a21 $k$ \u4f59 j\uff0c\u90a3\u4e48 $x$\u81f3\u5c11\u52a0\u5230 $(m-1)\\times k+j$ \uff0c\u8981\u8fdb\u884c $(m-1)\\times k+j+1$ \u6b21\u64cd\u4f5c\u3002\n\n\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nmap<int,int> num;\nint t,a[200001];\nsigned main()\n{\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tint n,k,ans=0,maxx=0;\n\t\tscanf(\"%lld%lld\",&n,&k);\n\t\tnum.clear();\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]%k==0)//\u5982\u679c\u80fd\u6574\u9664\uff0c\u662f\u4e0d\u9700\u8981\u52a0\u7684\t\n\t\t\t\tcontinue; \n\t\t\tnum[k-a[i]%k]++;\n\t\t\tif(num[k-a[i]%k]==maxx)\n\t\t\t\tans=max(ans,k-a[i]%k);\n\t\t\tif(num[k-a[i]%k]>maxx)\n\t\t\t{\n\t\t\t\tmaxx=num[k-a[i]%k];\n\t\t\t\tans=k-a[i]%k;\n\t\t\t}\n\t\t}\n\t\tif(maxx==0&&ans==0)//\u7279\u5224\n\t\t\tputs(\"0\");\n\t\telse\n\t\t\tcout<<(maxx-1)*k+ans+1<<endl;\n\t} \n\treturn 0;\n}\n```\n",
        "postTime": 1595055990,
        "uid": 240812,
        "name": "45dino",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1374D \u3010Zero Remainder Array\u3011"
    },
    {
        "content": "### \u4ee3\u7801\n\n\u6211\u628a\u4ee3\u7801\u653e\u5728\u524d\u9762~~\u65b9\u4fbf\u5927\u5bb6\u6284~~\u3002\n\n```python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nfrom math import gcd, ceil\ndef pre(s):\n    n = len(s)\n    pi = [0] * n\n    for i in range(1, n):\n        j = pi[i - 1]\n        while j and s[i] != s[j]:\n            j = pi[j - 1]\n        if s[i] == s[j]:\n            j += 1\n        pi[i] = j\n    return pi\ndef prod(a):\n    ans = 1\n    for each in a:\n        ans = (ans * each)\n    return ans\ndef lcm(a, b): return a * b // gcd(a, b)\ndef binary(x, length=16):\n    y = bin(x)[2:]\n    return y if len(y) >= length else \"0\" * (length - len(y)) + y\nfor _ in range(int(input()) if True else 1):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    vals = {}\n    for i in a:\n        vals[i%k] = 1 if i%k not in vals else vals[i%k] + 1\n    ans=0\n    for i in vals:\n        if i==0:continue\n        ans = max(ans, -i+vals[i]*k+1)\n    print(ans)\n```\n~~\u597d\u957f\u554a~~\n\n### \u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\uff0c\u5728 $x$ \u4ece $0$ \u5230$k-1$ \u7684\u6bcf\u4e2a\u5b8c\u6574\u5468\u671f\u4e2d\uff0c\u6211\u4eec\u53ea\u80fd\u4fee\u590d\u6bcf\u4e2a\u4f59\u6570\u4e00\u6b21\u3002\u8bf7\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u6dfb\u52a0\u4e00\u4e9b $x$ \u65f6\uff0c\u6211\u4eec\u4f1a\u4fee\u6b63\u4f59\u6570 $k-x$\uff08\u6211\u4eec\u4e0d\u9700\u8981\u4fee\u6b63\u5df2\u7ecf\u53ef\u4ee5\u88ab $k$ \u6574\u9664\u7684\u5143\u7d20\uff09\u3002\u8bbe $cnt_i$ \u4e3a\u6761\u4ef6 $k-a_i \\mod k=i$ \u9002\u7528\u7684\u6b64\u7c7b\u5143\u7d20\u7684\u6570\u91cf\uff08\u5373\uff0c\u5982\u679c\u6211\u4eec\u5c06\u503c $i \\mod k$ \u6dfb\u52a0\u5230\u8fd9\u4e9b\u5143\u7d20\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u590d\u7684\u6b64\u7c7b\u5143\u7d20\u7684\u6570\u91cf\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5bf9\u6570\u6570\u636e\u7ed3\u6784\uff08\u6bd4\u5982 C++ \u4e2d\u7684 std::map\uff09\u6765\u8ba1\u7b97\u3002\n\n\u90a3\u4e48\uff0c\u5b8c\u6574\u5468\u671f\u7684\u6570\u91cf\u662f\u591a\u5c11\uff1f\u5b83\u7b49\u4e8e $cnt$ \u4e2d\u6700\u5e38\u89c1\u5143\u7d20\u7684\u91cf\u81ea\u51cf\u3002\u6240\u4ee5\uff0c\u7b54\u6848\u81f3\u5c11\u662f\u8fd9\u6837\u7684\uff1a$k\u00d7(\\max(cnt)-1)$\u3002\u6700\u540e\u4e00\u4e2a\u5faa\u73af\u53ef\u80fd\u662f\u4e0d\u5b8c\u6574\u7684\u3002\u90a3\u4e48\u518d\u6765\u7684\u6b21\u6570\u662f\u591a\u5c11\uff1f\u5b83\u7b49\u4e8e\u6240\u6709 $cnt_i=\\max(cnt)$ \u4e2d\u7684\u6700\u5927\u53ef\u80fd $i$\u3002\n\n\u6240\u4ee5\u5982\u679c $key$ \u662f\u6700\u5927\u503c\uff0c\u6bd4\u5982$cnt_{key}=\\max(cnt)$\uff0c\u90a3\u4e48\u7b54\u6848\u662f $k\u00d7(cnt_{key}-1)+key+1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n \\log n)$\u3002",
        "postTime": 1643790029,
        "uid": 542047,
        "name": "EC75",
        "ccfLevel": 0,
        "title": "CF1374D\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u63a8\u9500\u4e00\u4e0b\u6570\u636e\u70b9\u52a0\u5f3a\u7248\u672c\uff1a[\u8d85\u5f3a\u6570\u636e\uff01](https://www.luogu.com.cn/problem/U120689)\n\n\u840c\u65b0\u9996\u6253Div. C\uff0cE1\u5c45\u7136\u6ca1\u505a\u51fa\u6765\u2026\u2026\n\n\u5f88\u663e\u7136\uff0c\u5bf9\u6bcf\u7ec4\u6570\u636e\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u5904\u7406\uff0c\u53ef\u4ee5\u5c06\u7ed9\u51fa\u7684`a[i]`\u8fdb\u884c\u4e00\u4e9b\u53d8\u5f62\uff0c\u5b58\u4e0b`b[i]=(k-(a[i]%k))%k`\uff0c\u4ee3\u8868\u6700\u5c0f\u7684\u6570\uff0c\u4f7f\u5f97`a[i]+b[i]%k==0`\n\n\u8003\u8651\u5230\u6bcf\u6b21\u64cd\u4f5c\u53ea\u80fd\u5bf9\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u4e14\u5fc5\u6709`x+=1`\u64cd\u4f5c\uff0c\u5982\u679c\u6709\u591a\u4e8e\u4e00\u4e2a\u6570\u7684`b[i]`\u503c\u76f8\u7b49\uff0c\u663e\u7136\u9700\u8981\u591a\u8fdb\u884c`k`\u6b21\u64cd\u4f5c\u624d\u80fd\u540c\u65f6\u786e\u4fdd\u8fd9\u4e9b\u6570\u5747\u80fd\u88ab`k`\u6574\u9664\u3002\u5728\u6b64\uff0c\u53ef\u4f7f\u7528`map`\u6216\u79bb\u6563\u5316\u8bb0\u5f55\u6bcf\u4e00\u4e2a`b[i]`\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u76f8\u5e94\u8ba1\u7b97\u3002\u7279\u522b\u6ce8\u610f\uff0c`b[i]==0`\u65f6\u9700\u8981\u7279\u5224\u3002\n\n\u8d5b\u65f6\u4ee3\u7801\uff1a\n\n```cpp\n//Code as is from contest\n#include<bits/stdc++.h>\n#define maxn 200005\nusing namespace std;\n\nlong long a[maxn],b[maxn],d[maxn],n,k,t,ans,fl;\n\n//\u4e0d\u5f00ll\u89c1\u7956\u5b97----\u4f46\u662f\u5f00\u592a\u591a\u4e5f\u4f1a\u56e0\u4e3aTLE\u89c1\u7956\u5b97\n\nvoid solve(){\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tmap<long long,long long>c;\n\tans=0;fl=0;\n\tscanf(\"%lld%lld\",&n,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t\tb[i]=(k-(a[i]%k))%k;\n\t\td[i]=b[i];\n\t\tif(b[i]!=0){\n\t\t\tfl=1;\n\t\t}\n\t}\n\tif(!fl){\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(b[i]){ //\u7559\u610f\u7279\u5224\n\t\t\td[i]+=k*c[b[i]];\n\t\t\tc[b[i]]++;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tans=max(ans,d[i]);\n\t}\n\tprintf(\"%lld\\n\",ans+1);\n}\n\nint main(){\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\tsolve();\n\t}\n}\n```\n\n\u7531\u4e8e$T\\leq2\\times10^4$\uff0c\u6bcf\u7ec4\u6570\u636e\u90fd\u5bf9\u4e24\u4e2a\u4e8c\u5341\u4e07\u7684`long long`\u6570\u7ec4\u8fdb\u884c`memset`\u7684\u65f6\u95f4\u5f00\u9500\u6781\u7aef\u53ef\u6016\uff0c\u4ee5\u81f4\u6d4b\u8bd5\u70b9#3\u8dd1\u5230\u4e861.73s\uff0c\u8d5b\u65f6\u8bc4\u6d4b\u66f4\u662f\u8dd1\u5230\u4e861.98s\uff0c\u79bb\u8d85\u65f6\u4ec5\u6709\u4e00\u6b65\u4e4b\u9065\u2026\u2026\n\n\u610f\u8bc6\u5230\u8fd9\u5c34\u5c2c\u7684\u60c5\u51b5\uff0c\u6211\u51b3\u5b9a\u5bf9\u8d5b\u65f6\u4ee3\u7801\u8fdb\u884c\u4e00\u4e9b\u6539\u9020----\n\n- \u7559\u610f\u5230\u6211\u4eec\u6839\u672c\u6ca1\u6709\u7528\u5230\u8fc7`a[i]`\u548c`d[i]`\uff0c\u5220\u9664\n- \u4e3a\u4e86\u9002\u5e94\u4e0d\u540c\u7684\u6570\u636e\u8303\u56f4\uff0c\u6539\u7528`std::vector`\n- \u7559\u610f\u5230\u6570\u7ec4\u548c`map`\u5e76\u4e0d\u9700\u8981`long long`\u7684\u6570\u636e\u8303\u56f4\uff0c\u6539\u4e3a\u4ec5\u7b54\u6848\u548c`k`\u4f7f\u7528`long long`\n- \u5feb\u8bfb\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684qwq\n\n\u7136\u540e\u2026\u2026\u5c31\u662f\u6539\u8fdb\u7248\u4ee3\u7801\u5566\uff01\n\n```cpp\n//Luogu_Resubmission\n#include<bits/stdc++.h>\n#define maxn 2000005\nusing namespace std;\n\nint n,t,fl;\n\nlong long ans,k;\n\nmap<int,int>c;\n\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf; \n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++; \n}\n\ninline int read(){\n\tint x=0,f=1;char ch=nc();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=nc();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=nc();}\n\treturn x*f;\n}\n\nvoid solve(){\n\tvector<int>b;\n\tb.push_back(0);\n\tc.clear();\n\tans=0;fl=0;\n\tn=read(),k=read();\n\tfor(register int i=1;i<=n;i++){\n\t    b.push_back((k-(read()%k))%k);\n\t\tif(b[i]!=0){\n\t\t\tfl=1;\n\t\t}\n\t}\n\tif(!fl){\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tif(b[i]){\n\t\t\tlong long temp=(b[i]+k*c[b[i]]);\n\t\t\tans=max(ans,temp);\n\t\t\tc[b[i]]++;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans+1);\n}\n\nint main(){\n//\tfreopen(\"CF1374D_2.in\",\"r\",stdin);\n//\tfreopen(\"CF1374D_2.out\",\"w\",stdout);\n\tt=read();\n\twhile(t--){\n\t\tsolve();\n\t}\n}\n```\n\u611f\u8c22\u7ba1\u7406\u5927\u5927\u5ba1\u6838\uff0c\u611f\u8c22\u9605\u8bfb\uff0c\u6b22\u8fce\u53bb\u52a0\u5f3a\u6570\u636e\u7248\u6311\u6218\u5e38\u6570qwq",
        "postTime": 1593543306,
        "uid": 62562,
        "name": "B_1168",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1374D \u3010Zero Remainder Array\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u4f60\u4e24\u4e2a\u6570 $n$ , $k$ ,\u548c\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684\u6570\u7ec4 $a$\u3002\u53e6\u6709\u4e00\u4e2a\u4e00\u5f00\u59cb\u4e3a $0$ \u7684\u6570 $x$ \u3002\u6bcf\u4e00\u6b65 $x$ \u4f1a\u589e\u52a0 $1$ \uff08 $x=0$ \u65f6\u7b97\u7b2c\u4e00\u6b65\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b65\u4f60\u53ef\u4ee5\u4f7f\u6570\u7ec4 $a$ \u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u52a0\u4e0a\u5f53\u524d\u7684 $x$ \uff0c\u52a0\u8fc7\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\u52a0\uff08\u6216\u8005\u8df3\u8fc7\u5f53\u524d\u6b65\uff09\u3002\u6700\u7ec8\u4f7f\u5f97 $a$ \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u80fd\u88ab $k$ \u6574\u9664\u3002\n\n## \u505a\u6cd5\n\u5bf9\u4e8e\u672c\u8eab\u5c31\u662f $k$ \u7684\u500d\u6570\u7684\u5143\u7d20\uff0c\u81ea\u7136\u4e0d\u7528\u53bb\u7ba1\u3002\n\n\u5bf9\u4e8e\u6a21 $k$ \u4f59 $p$ \u7684\u5143\u7d20\uff0c\u6211\u4eec\u8981\u7ed9\u5b83\u52a0 $s\\cdot k-p$ \uff0c$s$ \u8981\u5f80\u5c0f\u7684\u6570\u53d6\u3002\u800c $s$ \u7684\u6700\u5c0f\u53d6\u503c\u4e0e\u4f59\u6570\u662f $p$ \u7684\u5143\u7d20\u6570\u91cf\u6709\u5173\u3002\u8003\u8651\u5230\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u76f4\u63a5\u4e0a map \u5c31\u5f73\u4e8d\u4e86\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,a[1000005],k;\nint main()\n{\n\tint T;\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tmap<long long,long long> p;\n\t\tcin>>n>>k;\n\t\tlong long ans=0;//\u5f00long long\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tlong long x;cin>>x;\n\t\t\tx%=k;\n\t\t\tif(x==0)\tcontinue;\n\t\t\tp[x]++;\n\t\t\tans=max(ans,p[x]*k-x);\n\t\t}\n\t\tif(ans)cout<<ans+1<<endl;\n\t\telse\tcout<<0<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1593515072,
        "uid": 304995,
        "name": "PanH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1374D Zero Remainder Array"
    },
    {
        "content": "\u521d\u59cb $x = 0$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u540e $+1$\uff0c\u4e24\u79cd\u64cd\u4f5c\uff1a   \n\n1. $a_i += x$   \n2. \u4ec0\u4e48\u90fd\u4e0d\u5e72   \n\n\u64cd\u4f5c1\u5bf9\u6bcf\u4e2a\u6570\u6700\u591a\u8fdb\u884c\u4e00\u6b21\u3002  \n\u6c42 $\\forall a_i \\equiv 0 \\pmod{k}$  \u7684\u6700\u5c0f\u6b65\u6570\u3002  \n\u5c06\u6240\u6709\u6570\u6a21 $k$ \u5904\u7406\uff0c\u5bf9\u4e8e $a_i$\uff0c$x = k - a_i$ \u662f\u552f\u4e00\u64cd\u4f5c\u65b9\u6cd5\u3002  \n\u8fdb\u884c\u64cd\u4f5c\u4e0e\u4ec0\u4e48\u90fd\u4e0d\u5e72\u7b49\u4ee3\u4ef7\uff0c\u5219\u80fd\u4f7f  $a_i += x$ \u65f6\u4e00\u5b9a\u4f1a\u8fdb\u884c\u64cd\u4f5c\u3002  \n\u7531\u4e8e $x$ \u5355\u8c03\u9012\u589e\uff0c\u6bcf\u6b21\u627e\u5230\u6700\u5c0f\u7684 $x \\leq a_i$\uff0c\u518d\u8fdb\u884c\u8ba1\u7b97\u8f6c\u79fb\uff0c\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002  \n\u53ef\u4ee5\u7528set\u6765\u5904\u7406\u3002    \n\n```cpp\n#include <cstdio>\n#include <set>\ntemplate<typename T>\nvoid read(T &r)\n{\n    static char c;r=0;\n    for(c=getchar();c>'9'||c<'0';c=getchar());\n    for(;c>='0'&&c<='9';r=(r<<1)+(r<<3)+(c^48),c=getchar());\n}\n#define int long long\nconst int maxn = 2e5 + 100;\nint T,n,k,a[maxn];\nstd::multiset<int> s;\nsigned main()\n{\n    read(T);\n    while(T--)\n    {\n        s.clear();\n        read(n),read(k);\n        for(int i = 1;i<=n;++i) read(a[i]),a[i] = k - (a[i] % k);\n        for(int i = 1;i<=n;++i) if(a[i] != k) s.insert(a[i]);\n        int ans = 0,x = 0;\n        while(!s.empty())\n        {\n            std::set<int>::iterator it = s.lower_bound(x);\n            if(it == s.end())  ans += k - x,x = 0;//\u627e\u4e0d\u5230\u5219\u5f52\u96f6\n            else ans += *it - x + 1,x = (*it) + 1,s.erase(it);\n            x %= k;\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1593525663,
        "uid": 220159,
        "name": "Clouder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1374D \u3010Zero Remainder Array\u3011"
    }
]