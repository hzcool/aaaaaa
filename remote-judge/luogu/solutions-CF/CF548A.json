[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u5c31\u662f\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u6070\u597d\u5b58\u5728 $k$ \u4e2a\u5b50\u5b57\u7b26\u4e32\u662f\u56de\u6587\u4e32\uff0c\u5e76\u4e14\u6240\u6709\u5b50\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8981\u4e00\u6837\u957f\u3002\n\n## \u9898\u76ee\u89e3\u6cd5\n\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u7684\u9898\u76ee\uff0c\u6839\u636e\u9898\u610f\u6a21\u62df\u5373\u53ef\u3002\n\n\u6211\u4eec\u628a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5b9a\u4e49\u4e3a $len$\u3002\n\n\u9996\u5148\uff0c\u5224\u65ad\u5b57\u7b26\u7684\u957f\u5ea6\u80fd\u5426\u88ab $k$ \u6574\u9664\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u80fd\u88ab $k$ \u6574\u9664\uff0c\u5219\u4e0d\u53ef\u80fd\u5b58\u5728 $k$ \u4e2a\u5b50\u5b57\u7b26\u4e32\u4e00\u6837\u957f\uff0c\u6b64\u65f6\u8f93\u51fa`NO`\u5373\u53ef\u3002\n\n\u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6\u53ef\u4ee5\u88ab $k$ \u6574\u9664\uff0c\u68c0\u67e5\u5b50\u5b57\u7b26\u4e32\u662f\u5426\u90fd\u662f\u56de\u6587\uff08\u8fd9\u91cc\u53ef\u4ee5\u628a\u5224\u65ad\u662f\u5426\u56de\u6587\u5199\u6210\u4e00\u4e2a\u51fd\u6570\uff09\u3002\n\n\u5982\u4f55\u627e\u5230\u6bcf\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\u5e76\u5224\u65ad\u5462\uff1f\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u4e3a $subLen$\uff0c\u5b58\u50a8 $len \\div k$\uff0c\u8fd9\u5c31\u662f\u6bcf\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u4e4b\u540e\u5faa\u73af\u626b\u6bcf\u4e2a\u5b50\u5b57\u7b26\u4e32\uff0c\u6bcf\u8f6e\u5faa\u73af\u5c06\u5faa\u73af\u53d8\u91cf\u589e\u52a0 $subLen$\u3002\n\n\u6bcf\u4e2a\u5b50\u5b57\u7b26\u4e32\u5982\u4f55\u5355\u72ec\u62ff\u51fa\u6765\uff1f\u8fd9\u91cc\u6211\u7528\u4e86\u4e00\u4e2a\u51fd\u6570`substr()`\u4e3b\u8981\u529f\u80fd\u662f\u590d\u5236\u5b50\u5b57\u7b26\u4e32\uff0c\u8981\u6c42\u4ece\u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5e76\u5177\u6709\u6307\u5b9a\u7684\u957f\u5ea6\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <string>\n#include <iostream>\nusing namespace std;\n//\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\u7684\u51fd\u6570 \nbool isPalindrome(string s1)\n{\n    int len=s1.size();\n    for(int i=0;i<len/2;i++)\n        if (s1[i]!=s1[len-1-i])\n            return false;\n    return true;\n}\nstring s;\nint main()\n{\n    int k;\n    cin>>s>>k; \n    int len=s.size();//\u6c42\u5b57\u7b26\u4e32 s \u7684\u957f\u5ea6 \n    if(len%k!=0){//\u5224\u65ad\u5b57\u7b26\u7684\u957f\u5ea6\u80fd\u5426\u88ab k \u6574\u9664\n    \tcout<<\"NO\";\n    \treturn 0;\n\t}\n    //\u68c0\u67e5\u5b50\u5b57\u7b26\u4e32\u662f\u5426\u90fd\u662f\u56de\u6587\n    int subLen=len/k;\n    bool allPalindrome=true;  //\u6807\u8bb0\u662f\u5426\u6240\u6709\u5b50\u5b57\u7b26\u4e32\u90fd\u662f\u56de\u6587\n    for(int i=0;i<len;i+=subLen)\n\t{\n        string subs=s.substr(i,subLen);//\u5c06\u5b50\u5b57\u7b26\u4e32\u63d0\u53d6\u51fa\u6765\n\t\tif(!isPalindrome(subs))//\u5224\u65ad\u5b50\u5b57\u7b26\u4e32\u662f\u5426\u56de\u6587,\u5982\u679c\u4e0d\u662f\u6807\u8bb0\u4e00\u4e0b\uff0c\u8df3\u51fa\u5faa\u73af \n\t\t{\n            allPalindrome=false;\n            break;\n        }\n    }\n    cout<<((allPalindrome)?\"YES\":\"NO\");\n    return 0;\n}\n```\n",
        "postTime": 1674207293,
        "uid": 703225,
        "name": "lichenzhen",
        "ccfLevel": 0,
        "title": "CF548A \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u6574\u6570 $k$\uff0c\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u7531\u4e00\u4e9b\u56de\u6587\u4e32\u7ec4\u6210\uff0c\u5e76\u4e14\u8fd9\u4e9b\u56de\u6587\u4e32\u7684\u957f\u5ea6\u90fd\u8981\u662f $k$\u3002\n\n\u601d\u8def\uff1a\u5047\u5982\u8fd9\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u662f $l$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5224\u65ad $l$ \u662f\u5426\u53ef\u4ee5\u6574\u9664 $k$\u3002\n\u82e5\u4e0d\u53ef\u4ee5\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa NO\u3002\u56e0\u4e3a\u5982\u679c\u4e0d\u53ef\u4ee5\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5c31\u7b97\u662f\u56de\u6587\u4e32\u7ec4\u6210\uff0c\u90a3\u5b83\u4eec\u7684\u957f\u5ea6\u4e5f\u4e0d\u76f8\u540c\u3002\u63a5\u7740\u8003\u8651\u4e0b\u4e00\u6b65\u3002\u56e0\u4e3a\u5176\u6bcf\u4e2a\u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\u90fd\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u5206\u6210 $k$ \u4e2a\u5b50\u4e32\uff0c\u5224\u65ad\u6bcf\u4e2a\u5b50\u4e32\u662f\u5426\u90fd\u662f\u56de\u6587\u4e32\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u91cc\u5224\u65ad\u56de\u6587\u4e32\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5de6\u53f3\u6307\u9488\u904d\u5386\u5b50\u4e32\u3002\n\n\u867d\u7136\u6211\u5728\u6d1b\u8c37\u4e0a\u6ca1\u8fc7\uff08\u4e00\u76f4\u663e\u793a\u7b49\u5f85\uff09\uff0c\u4f46\u662f\u5728\u539f\u7ad9\u4e0a\u662f[\u8fc7\u4e86\u7684](https://codeforces.com/problemset/submission/548/164826790)\u3002\n\n\u4ee3\u7801\uff08\u52a0\u89e3\u91ca\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[1010];\nint k,f;\nbool cmp(int l,int r)\n{\n\tint i=l,j=r; // \u5de6\u53f3\u6307\u9488\n\twhile(i<j)\n\t{\n\t\tif(s[i]!=s[j]) return false; // \u82e5\u4e0d\u4e00\u6837\uff0c\u8bf4\u660e\u4e0d\u662f\u56de\u6587\u4e32\uff0c\u8fd4\u56de\u5426\n\t\ti++,j--; // \u5de6\u6307\u9488\u52a0\u4e00\uff0c\u53f3\u6307\u9488\u51cf\u4e00\n\t}\n\treturn true;\n}\nint main()\n{\n\tcin>>s+1>>k; // \u4ece\u4e00\u5f00\u59cb\u8bfb\u5165\uff0c\u66f4\u65b9\u4fbf\n\tint l=strlen(s+1);\n\tif(l%k!=0){cout<<\"NO\";return 0;} // \u4e0a\u8ff0\u7279\u5224\n\tint len=l/k,i=1;\n\twhile(i<l) // \u5206\u6210k\u4e2a\u5b50\u4e32\uff0ci\u5c31\u4ee3\u8868\u6bcf\u4e2a\u5b50\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u4e0b\u6807\n\t{\n\t\tif(!(cmp(i,i+len-1))) f=1; // f\u82e5\u4e3a\u4e00\uff0c\u8bf4\u660e\u4e0d\u662f\uff0c\u5426\u5219\u662f\n\t\ti+=len;\n\t}\n\tif(f==0) cout<<\"YES\";\n\telse cout<<\"NO\"; // \u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1658192802,
        "uid": 514610,
        "name": "mzyc_yang2021",
        "ccfLevel": 4,
        "title": "CF548A Mike and Fax"
    }
]