[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\noql \u6709 $m$ \u4e2a\u597d\u53cb\uff0c\u53d1\u751f\u4e86 $n$ \u4e2a\u4e8b\u4ef6\uff0c\u6bcf\u6b21\u4e8b\u4ef6\u90fd\u662f\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a\n\n1. oql \u53ef\u4ee5\u6539\u53d8\u4ed6\u7684\u7528\u6237\u540d\uff0c oql \u5728\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u7528\u6237\u540d\uff0c\u5728\u5176\u4f59\u65f6\u95f4\u5185 oql \u4e0d\u80fd\u6539\u53d8\u4ed6\u7684\u7528\u6237\u540d\uff1b\n\n2. \u4e00\u4f4d\u597d\u53cb $s$ \u8bbf\u95ee\u4e86\u4ed6\u7684\u4e3b\u9875\u3002\n\n\u6211\u4eec\u79f0\u4e00\u4f4d\u597d\u53cb $s$ \u662f\u9ad8\u5174\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5728 ** \u6bcf\u4e00\u6b21 ** \u8be5\u597d\u53cb\u8bbf\u95ee oql \u7684\u4e3b\u9875\u65f6\uff0c\u770b\u5230 oql \u7684\u7528\u6237\u540d\u6b63\u597d\u662f $s$ \u3002\n\n\u73b0\u5728\u7ed9\u51fa $n,m$ \u548c\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u6c42 oql \u6700\u591a\u80fd\u5f97\u5230\u51e0\u4e2a\u5f00\u5fc3\u7684\u597d\u53cb\u3002\n\n$1\\le n\\le 10^5,1\\le m,|s|\\le 40$\n\n## \u89e3\u9898\u601d\u8def\n\n\u7528\u6237\u540d\u662f\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u7528 `map` \u5224\u65ad\u5176\u662f\u5426\u539f\u6765\u5b58\u5728\uff0c\u7ed9\u5176\u7f16\u53f7\uff0c\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57\u3002\n\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u597d\u53cb\u8bbf\u95ee oql \u4e3b\u9875\u7684\u72b6\u51b5\u5bf9\u6bcf\u4e2a\u597d\u53cb\u8868\u793a\u6210\u4e00\u4e2a\u6700\u591a\u6709 $10^5$ \uff08\u4f4d\u6570\u7b49\u4e8e\u4e8b\u4ef6\u4e2d 1 \u7684\u4e2a\u6570\uff09\u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u5176\u4e2d\u82e5\u8fd9\u4e00\u4f4d\u662f 1 \uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u597d\u53cb\u5728\u8fd9\u4e2a 1 \u4e8b\u4ef6\u540e\u8bbf\u95ee\u4e86 oql \u7684\u4e3b\u9875\uff0c\u5426\u5219\u8868\u793a\u6ca1\u6709\u8bbf\u95ee\u3002\n\n\u7531\u4e8e oql \u5728\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u7528\u6237\u540d\uff0c\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u4e24\u4f4d\u597d\u53cb\u662f\u4e0d\u76f8\u51b2\u7a81\u7684\u5f53\u4e14\u4ec5\u5f53\u4e24\u4f4d\u597d\u53cb\u7684\u4e8c\u8fdb\u5236\u6570\u6309\u4f4d\u4e0e\u7684\u503c\u4e3a $0$ \u3002\u73b0\u5728\uff0c\u6211\u4eec\u7684\u95ee\u9898\u8f6c\u5316\u6210\uff0c\u7ed9\u51fa $m$ \u4e2a $n$ \u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u96c6\u5408\uff0c\u4ece\u5176\u4e2d\u53d6\u51fa\u6700\u591a\u7684\u6570\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u6570\u4e24\u4e24\u4e92\u8d28\u3002\n\n\u6211\u4eec\u5c06\u5176\u4e2d\u4efb\u610f\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u53d6\u51fa\uff0c\u5355\u72ec\u8003\u8651\uff0c\u82e5\u8fd9\u4e24\u4e2a\u6570\u6309\u4f4d\u4e0e\u7684\u503c\u4e0d\u4e3a $0$ \uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u4eba\u4e0d\u80fd\u5171\u5b58\uff0c\u5c06\u8fd9\u4e24\u4e2a\u4eba\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86 ** \u56fe\u4e0a\u6700\u5927\u72ec\u7acb\u96c6 ** \u7684\u95ee\u9898\u3002\u8fd9\u662f NP \u5b8c\u5168\u7684\u3002\n\n\u5982\u679c\u8003\u5bdf\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u82e5\u8fd9\u4e24\u4e2a\u6570\u6309\u4f4d\u4e0e\u7684\u503c\u4e3a $0$ \uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u4eba\u80fd\u5171\u5b58\uff0c\u5c06\u8fd9\u4e24\u4e2a\u4eba\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86 ** \u6700\u5927\u56e2 ** \u95ee\u9898\uff0c\u8fd9\u4e5f\u662f NP \u5b8c\u5168\u7684\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u4e24\u4e2a\u56fe\u4e92\u4e3a\u8865\u56fe\uff0c\u8fd9\u9898\u5c31\u662f\u4e00\u9053 ** \u6700\u5927\u72ec\u7acb\u96c6\u505a\u8865\u96c6\u8f6c\u6c42\u6700\u5927\u56e2 ** \u7684\u95ee\u9898\u4e86\u3002\n\n\u5bf9\u4e8e\u6c42\u6700\u5927\u56e2\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u73b0\u6210\u89e3\u6cd5\uff0c\u5229\u7528 Bron\u2013Kerbosch \u7b97\u6cd5\uff0c\u53ef\u4ee5\u5728 $O(2^{\\frac n 2})$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\uff08 $n$ \u4e3a\u8282\u70b9\u6570\uff09\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\times m^2+2^{\\frac m 2})$ \u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm)$ \u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<map>\nusing namespace std;\nconst int maxn=50;\nbool mp[maxn][maxn];\nint some[maxn][maxn],none[maxn][maxn],all[maxn][maxn];\nint n,m,ans,op,id,cnt,cur;\nbool tf[maxn][100010];\nstring nm;\nmap<string,int>st;\nvoid dfs(int d,int an,int sn,int nn)\n{\n\tif(!sn&&!nn)ans=max(ans,an);\n\tint u=some[d][0];\n\tfor(int i=0;i<sn;i++)\n\t{\n\t\tint v=some[d][i];\n\t\tif(mp[u][v])continue;\n\t\tfor(int j=0;j<an;j++)all[d+1][j]=all[d][j];\n\t\tall[d+1][an]=v;\n\t\tint tsn=0,tnn=0;\n\t\tfor(int j=0;j<sn;j++)if(mp[v][some[d][j]])some[d+1][tsn++]=some[d][j];\n\t\tfor(int j=0;j<nn;j++)if(mp[v][none[d][j]])none[d+1][tnn++]=none[d][j];\n\t\tdfs(d+1,an+1,tsn,tnn);\n\t\tsome[d][i]=0,none[d][nn++]=v;\n\t}\n}\nint work()\n{\n\tans=0;\n\tfor(int i=0;i<n;i++)some[1][i]=i+1;\n\tdfs(1,0,n,0);\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\twhile(m--)\n\t{\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1)cur++;\n\t\telse\n\t\t{\n\t\t\tcin>>nm;\n\t\t\tif(st[nm])id=st[nm];\n\t\t\telse id=++cnt,st[nm]=id;\n\t\t\ttf[id][cur]=true;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)for(int j=1;j<i;j++)\n\t{\n\t\tbool jd=true;\n\t\tfor(int k=1;k<=cur;k++)if(tf[i][k]&&tf[j][k]){jd=false;break;}\n\t\tif(jd)mp[i][j]=mp[j][i]=true;\n\t}\n\tprintf(\"%d\\n\",work());\n\treturn 0;\n}\n```",
        "postTime": 1548076074,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1105E \u3010Helping Hiasat \u3011"
    },
    {
        "content": "\u5f53\u65f6\u6211\u662f\u5199\u5bf9\u4e86\u8fd9\u9053\u9898\u7684\u3002\u3002\u6700\u540e\u8fd8\u5269\u5927\u6982\u4e00\u5206\u949f\u7684\u65f6\u95f4$Debug$\u5bf9\u4e86\uff0c\u7136\u540e\u6b63\u8981\u4ea4\u7684\u65f6\u5019\u3002\u3002\n\n# \u7f51\u70b8\u4e86\u3002\u3002\n\n~~\u4ec0\u4e48\u65f6\u5019\u6253CF\u4e5f\u53d8\u6210\u4e86\u7f51\u901f\u5927\u8d5b\u554a\u3002\u3002~~\n\n----\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u7684\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u670b\u53cb$A$\u9ad8\u5174\u4e86\uff0c\u90a3\u4e48\u5728\u76f8\u90bb\u4e24\u6b21\u4fee\u6539ID\u7684\u8bb0\u5f55\u4e2d\uff0c\u5982\u679c\u6709$A$\u7684\u8bbf\u95ee\u8bb0\u5f55\uff0c\u90a3\u4e48\u540c\u6837\u5728\u8fd9\u4e24\u6b21\u4fee\u6539\u8bb0\u5f55\u4e2d\u8bbf\u95ee\u8fc7\u7684\u5176\u4ed6\u670b\u53cb\u662f\u4e0d\u53ef\u80fd\u9ad8\u5174\u7684\u3002\n\n\u7136\u540e\u3002\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u76f8\u90bb\u4e24\u6b21\u4fee\u6539ID\u4e2d\u8bbf\u95ee\u8fc7\u7684\u4eba\u4e92\u76f8\u8fde\u8fb9\uff0c\u7136\u540e\u7b54\u6848\u5c31\u662f\u6700\u5927\u72ec\u7acb\u96c6\u7684\u5927\u5c0f\u4e86\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u3002\u3002\n\n\u53bb\u5427\uff0c\u6a21\u62df\u9000\u706b\uff01\uff01\uff01\n\n\u601d\u8def\u975e\u5e38\u7b80\u5355\uff0c\u4ee3\u7801\u4e5f\u5f88~~\u7b80\u5355~~\u4e11\u964b\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define reg register\n#define db double\n#define bit bitset<MAXN + 1>\n#define MAXN 40\n\nconst db deltaT = 0.998;//\u7384\u5b66\u8c03\u53c2\nconst db eps = 1e-15;\n\nstruct Node {\n\tint a[MAXN + 1];\n}res;\n\nint n;\nint Ans;\nbit f[MAXN + 1];\n\ninline int Checker(reg Node);\ninline void Simulate_Anneal();\n\nmap<string,int>mp;\nint opt[200000];\nint s[200000];\nbool in[44];\n\nint main() {\n\treg int m, cnt = 0;\n\tcin >> m >> n;\n\tfor(reg int i = 1; i <= m; i++) {\n\t\tcin >> opt[i];\n\t\tif(opt[i] % 2 == 0) { //\u8fd9\u91cc\u5148\u7528map hash\u4e00\u4e0b\n\t\t\tstring S; \n\t\t\tcin >> S;\n\t\t\tif(!mp[S]) {\n\t\t\t\tmp[S] = ++cnt;\n\t\t\t}\n\t\t\ts[i] = mp[S];\n\t\t}\n\t}\n\tfor(reg int i = m; i >= 1; i--) { //\u8fde\u8fb9\n\t\tif(opt[i] & 1) {\n\t\t\tfor(reg int j = 1; j <= n; j++) {\n\t\t\t\tif(in[j])\n\t\t\t\tfor(reg int k = j + 1; k <= n; k++) {\n\t\t\t\t\tif(in[k]) f[j][k] = f[k][j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemset(in, 0, sizeof(in)); //\u522b\u5fd8\u4e86\u6e05\u7a7a\n\t\t}\n\t\telse in[s[i]] = 1; //\u5728\u4e24\u6b21\u4fee\u6539ID\u4e2d\u8bbf\u95ee\u8fc7\n\t}\n\n\tsrand(time(NULL));\n\tfor(reg int i = 1; i <= 5; i++) //\u7384\u5b66srand\n\t\tsrand(1LL * rand() * rand() % 19260817 * rand() % 998244353 * rand() % 19491001 * rand() % 998244853 * rand() % 23333333333);\n\tfor(reg int i = 1; i <= n; i++) res.a[i] = i; Ans = Checker(res); //\u5148\u9884\u5904\u7406\u4e00\u4e0b\u4e00\u4e2a\u7b54\u6848\n\twhile(clock() <= CLOCKS_PER_SEC * 1.7) Simulate_Anneal(); //\u65f6\u9650\u4e24\u79d2\uff0c\u4e0dT\u5c31\u597d\u4e86\n\tprintf(\"%d\\n\", Ans);\n}\n\ninline int Checker(reg Node a) { //\u770b\u770b\u80fd\u9009\u51fa\u591a\u5c11\u4e2a\u70b9\u6765\u3002\n\treg bit S; S.reset();\n\tfor(reg int i = 1; i <= n; i++)\n\t\tif(!(S & f[a.a[i]]).count())\n\t\t\tS[a.a[i]] = 1;\n\treturn S.count();\n}\n\ninline void Simulate_Anneal() { //\u6a21\u62df\u9000\u706b\n\treg db T = 192608;\n\treg Node Test = res;\n\twhile(T >= eps) {\n\t\treg int x = rand() % n + 1;\n\t\treg int y = rand() % n + 1;\n\t\tTest = res; swap(Test.a[x], Test.a[y]);\n\t\treg int rt = Checker(Test);\n\t\treg int delta = rt - Ans;\n\t\tif(delta > 0) Ans = rt, res = Test;\n\t\telse if(exp(delta / T) * RAND_MAX > rand()) res = Test;\n\t\tT *= deltaT;\n\t}\n}\n```",
        "postTime": 1548036688,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1105E \u3010Helping Hiasat \u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fde\u7eed\u7684\u4e00\u6bb51\u76f8\u5f53\u4e8e\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u672c\u9898\u770b\u505a\u6709\u82e5\u5e72\u6bb5\u65f6\u95f4\uff0c\u6bcf\u6bb5\u65f6\u95f4\u6709\u82e5\u5e72\u4e2a\u670b\u53cb\u6709\u8981\u6c42\uff0c\u4e00\u6bb5\u65f6\u95f4\u5185\u53ea\u80fd\u6ee1\u8db3\u4e00\u4f4d\u670b\u53cb\u7684\u8981\u6c42\uff0c\u4e00\u4e2a\u670b\u53cb\u7684\u8981\u6c42\u5168\u88ab\u6ee1\u8db3\u6743\u503c+1\uff0c\u95ee\u6700\u5927\u6743\u503c\u3002\n\n\u63a5\u7740\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u82e5\u5e72\u4e24\u4e2a\u670b\u53cb\u4e0d\u80fd\u88ab\u540c\u65f6\u6ee1\u8db3\u7684\u4fe1\u606f\uff0c\u539f\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u6700\u5927\u72ec\u7acb\u96c6\u95ee\u9898\u3002\n\n\u7531\u4e8e\u670b\u53cb\u7684\u4e2a\u6570\u662f40\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u524d20\u4e2a\u670b\u53cb\uff0c\u7b97\u51fa\u6bcf\u4e00\u4e2a\u96c6\u5408\u662f\u5426\u662f\u4e00\u4e2a\u72ec\u7acb\u96c6\uff0c\u5bf9\u4e8e\u540e20\u4e2a\uff0c\u4e5f\u7b97\u51fa\u662f\u5426\u662f\u72ec\u7acb\u96c6\u3002\n\n\u5bf9\u540e20\u4e2a\u670b\u53cb\u505a\u4e00\u6b21\u9ad8\u7ef4\u524d\u7f00\u548c\uff0c\u6c42\u51fa\u6bcf\u4e00\u4e2a\u96c6\u5408\u53ca\u5176\u5b50\u96c6\u4e2d\u6700\u5927\u7684\u6743\u503c\uff0c\u6743\u503c\u5b9a\u4e49\u4e3a\uff1a\u82e5\u8fd9\u4e2a\u96c6\u5408\u662f\u72ec\u7acb\u96c6\uff0c\u6743\u503c\u4e3a\u8fd9\u4e2a\u96c6\u5408\u5305\u542b\u7684\u70b9\u6570\uff0c\u5426\u5219\u4e3a0\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u524d20\u4e2a\u670b\u53cb\u7ec4\u6210\u7684\u72ec\u7acb\u96c6\uff0c\u6c42\u51fa\u8fd9\u4e2a\u96c6\u5408\u5728\u88ab\u4fdd\u8bc1\u9009\u51fa\u7684\u60c5\u51b5\u4e0b\uff0c\u540e20\u4e2a\u670b\u53cb\u6709\u54ea\u4e9b\u670b\u53cb\u662f\u80fd\u88ab\u9009\u7684\u3002\u90a3\u4e48\u8fd9\u4e9b\u80fd\u88ab\u9009\u7684\u670b\u53cb\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u4ee5\u53ca\u5b83\u7684\u5b50\u96c6\uff0c\u90fd\u662f\u53ef\u80fd\u88ab\u9009\u7684\uff0c\u7528\u6211\u4eec\u9884\u5904\u7406\u7684\u9ad8\u7ef4\u524d\u7f00\u548c\u5c31\u80fd\u83b7\u5f97\u7b54\u6848\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\ntypedef long long LL;\nconst int N=100005,LIM=1048580;\nint n,m,cnt,js,ans;LL k1,k2;\nint op[N],p[N],yes[LIM],orz[LIM];\nLL bin[42],a[N],no[42];\nmap<string,int> mp;\n\nint getid(string s) {\n\tif(!mp[s]) mp[s]=++cnt;\n\treturn mp[s];\n}\nvoid prework() {\n\tfor(RI i=1;i<=js;++i)\n\t\tfor(RI j=1;j<=m;++j)\n\t\t\tif(bin[j-1]&a[i]) no[j]|=a[i];\n\tfor(RI i=1;i<=m;++i) no[i]^=bin[i-1];\n\t\n\tk1=m/2,k2=m-k1;//\u9884\u5904\u7406\u524d\u4e00\u534a\u670b\u53cb\u548c\u540e\u4e00\u534a\u670b\u53cb\u7684\u72ec\u7acb\u96c6\n\tfor(LL zt=0;zt<bin[k1];++zt) {\n\t\tyes[zt]=1;\n\t\tfor(RI i=1;i<=k1;++i)\n\t\t\tif(zt&bin[i-1]) {if(no[i]&zt) {yes[zt]=0;break;}}\n\t}\n\tfor(LL zt=0;zt<bin[k2];++zt) {\n\t\torz[zt]=0;\n\t\tfor(RI i=1;i<=k2;++i)\n\t\t\tif(zt&bin[i-1]) {\n\t\t\t\tif(no[i+k1]&(zt<<k1)) {orz[zt]=0;break;}\n\t\t\t\telse ++orz[zt];\n\t\t\t}\n\t}\n}\nvoid work() {\n\tfor(RI i=0;i<k2;++i)//\u9ad8\u7ef4\u524d\u7f00\u548c\n\t\tfor(LL zt=0;zt<bin[k2];++zt)\n\t\t\tif(zt&bin[i]) orz[zt]=max(orz[zt],orz[zt^bin[i]]);\n\tfor(LL zt=0;zt<bin[k1];++zt) {//\u679a\u4e3e\u524d\u4e00\u534a\u670b\u53cb\u7684\u72ec\u7acb\u96c6\n\t\tif(!yes[zt]) continue;\n\t\tint js=0;LL nono=0;\n\t\tfor(RI i=1;i<=k1;++i)\n\t\t\tif(zt&bin[i-1]) nono|=no[i],++js;\n\t\tjs+=orz[((bin[m]-1)^nono)>>k1];\n\t\tif(js>ans) ans=js;\n\t}\n}\nint main()\n{\n\tstring s;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(RI i=1;i<=n;++i) {\n\t\tscanf(\"%d\",&op[i]);\n\t\tif(op[i]==2) cin>>s,p[i]=getid(s);\n\t}\n\tbin[0]=1;for(RI i=1;i<=m;++i) bin[i]=bin[i-1]<<1LL;\n\tfor(RI i=1;i<=n;++i)\n\t\tif(op[i]==2) {//\u6bcf\u4e00\u6bb5\u65f6\u95f4\u6709\u54ea\u4e9b\u670b\u53cb\u6709\u8981\u6c42\n\t\t\tif(op[i-1]==2) a[js]|=bin[p[i]-1];\n\t\t\telse ++js,a[js]=bin[p[i]-1];\n\t\t}\n\tprework(),work();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1548030465,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1105E \u3010Helping Hiasat \u3011"
    },
    {
        "content": "\u601d\u8def\u548c\u5176\u4ed6\u51e0\u4f4d\u5dee\u4e0d\u591a\uff0c\u8fd9\u91cc\u5c31\u8bb2\u4e00\u8bb2\u6700\u5927\u72ec\u7acb\u96c6\u7684\u6c42\u6cd5\u5427\u3002\n\n\u539f\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6=\u8865\u56fe\u7684\u6700\u5927\u56e2\n\n\u7528dfs+\u526a\u679d\u6c42\u51fa\n\n\u8be6\u89c1\u4ee3\u7801\u6ce8\u91ca\uff08\u6ce8:\u6b64\u4e3a\u56fe\u4e2d\u6700\u5927\u56e2\u6c42\u6cd5\uff0c\u6ce8\u91ca\u4e2d\u201c\u6700\u5927\u72ec\u7acb\u96c6\u201d\u4e0e\u201c\u8865\u56fe\u4e2d\u7684\u6700\u5927\u56e2\u201d\u662f\u7b49\u4ef7\u7684\u8bf4\u6cd5\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint vis[45],group[45],n,m,num[45];//vis:\u5f53\u524d\u72ec\u7acb\u96c6,group:\u4ee5\u6c42\u51fa\u7684\u72ec\u7acb\u96c6\u4e2d\u6700\u5927\u7684\u4e00\u4e2a,num[i]:\u4ecei\u53cai\u4ee5\u540e\u7684\u8282\u70b9\u4e2d\u9009\u51fa\u7684\u6700\u5927\u72ec\u7acb\u96c6\u7684\u5927\u5c0f\nbool mp[45][45];//\u90bb\u63a5\u77e9\u9635\nmap<string,int>t;//\u5c06\u540d\u5b57\u6620\u5c04\u4e3a\u70b9\u7684\u7f16\u53f7\nstring ss;\nint tmp[100005],k=0,kk=0,ans=0,cnt=0;//ans:\u6700\u5927\u72ec\u7acb\u96c6\u5927\u5c0f\nbool dfs(int u,int pos)\n{\n\tfor(int i=u+1;i<=m;++i)\n\t{\n\t\tif(num[i]+pos<=ans)return 0;//\u526a\u679d:num[i]\u8868\u793ai\u53cai\u4ee5\u540e\u8282\u70b9\u4e2d\u9009\u51fa\u6700\u5927\u72ec\u7acb\u96c6\u5927\u5c0f\u7684\u8bdd\uff0cnum\u4e3a\u4e00\u4e2a\u975e\u9012\u51cf\u7684\u6570\u7ec4,\u82e5\u5f53\u524d\u6700\u7406\u60f3\u7684\u60c5\u51b5\u90fd\u6bd4ans\u5c0f\u7684\u8bdd\uff0c\u76f4\u63a5\u526a\u679d\n\t\tif(!mp[u][i])//\u8865\u56fe\u4e2d\u4e24\u70b9\u95f4\u6709\u8fde\u8fb9\n\t\t{\n\t\t\tbool p=0;\n\t\t\tfor(int j=0;j<pos;++j)\n\t\t\t{\n\t\t\t\tif(mp[vis[j]][i])\n\t\t\t\t{\n\t\t\t\t\tp=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!p)//i\u70b9\u7b26\u5408\u6761\u4ef6\uff0c\u53ef\u52a0\u5165\u5f53\u524d\u72ec\u7acb\u96c6\n\t\t\t{\n\t\t\t\tvis[pos]=i;\n\t\t\t\tif(dfs(i,pos+1))return 1;\n\t\t\t}\n\t\t}\n\t}\n\tif(pos>ans)//\u66f4\u65b0ans\n\t{\n\t\tfor(int i=0;i<pos;++i)group[i]=vis[i];\n\t\tans=pos;\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nvoid maxclique()\n{\n\tans=-1;\n\tfor(int i=m;i>0;--i)\n\t{\n\t\tvis[0]=i;\n\t\tdfs(i,1);\n\t\tnum[i]=ans;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint opt;\n\t\tscanf(\"%d\",&opt);\n\t\tif(i==1&&opt==1)continue;\n\t\tif(opt==2)\n\t\t{\n\t\t\tcin>>ss;\n\t\t\tif(!t[ss])t[ss]=++kk;\n\t\t\ttmp[++k]=t[ss];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i=1;i<=k;++i)\n\t\t\t{\n\t\t\t\tfor(int j=1;j<=k;++j)\n\t\t\t\t{\n\t\t\t\t\tif(tmp[i]==tmp[j])continue;\n\t\t\t\t\tmp[tmp[i]][tmp[j]]=1;\n\t\t\t\t\tmp[tmp[j]][tmp[i]]=1;\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tk=0;\n\t\t}\n\t}\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tfor(int j=1;j<=k;++j)\n\t\t{\n\t\t\tif(tmp[i]==tmp[j])continue;\n\t\t\tmp[tmp[i]][tmp[j]]=1;\n\t\t\tmp[tmp[j]][tmp[i]]=1;\t\n\t\t}\n\t}\n\tmaxclique();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1564142122,
        "uid": 34217,
        "name": "Katsura_Hinagiku",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1105E \u3010Helping Hiasat \u3011"
    },
    {
        "content": "\u6700\u5927\u72ec\u7acb\u96c6\u7684 $2^{\\frac{n}{2}}$  \u505a\u6cd5\u3002\n\n\u5148\u8003\u8651\u524d\u534a\u90e8\u5206\u7684\u6700\u5927\u72ec\u7acb\u96c6 $state$ \u72b6\u6001\u662f\u5426\u51b2\u7a81\u3002\n\uff08\u5982\u679c $state$ \u6240\u4ee3\u8868\u7684\u96c6\u5408\u53ef\u9009\uff0c\u90a3\u4e48\u8fd9\u4e2a $state$ \u5408\u6cd5\u3002\uff09\n\n\u7136\u540e\u8003\u8651\u540e\u534a\u90e8\u5206\u4e0d\u51b2\u7a81\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u9009\u6700\u591a\u51e0\u4e2a\u3002\n\n\u7136\u540e\u6211\u4eec\u4ee4\u540e\u534a\u90e8\u5206\u4e3a $Count_{state}$\u3002\n\n\u8003\u8651\u5c06\u8fd9\u4e2a\u73a9\u610f\u53d8\u6210\u9ad8\u7ef4\u524d\u7f00\u548c\u3002\n\n\n\u7136\u540e $Count_S$ \u5c31\u53d8\u6210\u4e86 $S$ \u72b6\u6001\u4e0b\u7684\u5b50\u96c6\u7684 $\\max$ \u503c\u3002\n\n\u4e8e\u662f\u968f\u4fbf\u5408\u5e76\u5c31\u505a\u5b8c\u4e86\u3002",
        "postTime": 1598506613,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1105E \u3010Helping Hiasat \u3011"
    },
    {
        "content": "### \u89e3\n\n\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u66f4\u6539\u4e00\u6b21 ID \u4e4b\u524d\u5230\u4e0a\u4e00\u6b21\u66f4\u6539 ID \u4e4b\u95f4\u6765\u8fc7\u7684\u6240\u6709\u670b\u53cb\u6700\u591a\u53ea\u80fd\u6ee1\u8db3\u4e00\u4e2a\u3002\n\n\u90a3\u4e48\u4ed6\u4eec\u4e4b\u95f4\u6ee1\u610f\u8fd9\u4e2a\u4e8b\u4ef6\u662f\u4e92\u65a5\u7684\uff0c\u5982\u679c\u5bf9\u5176\u5efa\u8fb9\uff0c\u90a3\u4e48\u539f\u9898\u53d8\u6210\u4e00\u4e2a\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u968f\u673a\u5316\u7b97\u6cd5\u6a21\u62df\u9000\u706b\u6c42\u89e3\u3002\n\n\u7ec6\u8282\u4e0a\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u771f\u6b63\u5efa\u56fe\u51fa\u6765\uff0c\u53ea\u9700\u8981\u770b\u770b\u5f53\u524d\u8fd9\u4e2a\u70b9\u548c\u5df2\u7ecf\u9009\u4e2d\u7684\u70b9\u662f\u5426\u51b2\u7a81\uff0c\u89c2\u5bdf\u5230\u597d\u53cb\u6570\u91cf\u5f88\u5c11\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u72b6\u538b\u89e3\u51b3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=45;\nconst int N=1e5+101;\nstruct node\n{\n    int v,next;\n}e[maxn*maxn*2];\nint head[maxn],cnt,top,tot;\nbitset<N> b[maxn];\nbitset<maxn> f[maxn];\nint a[maxn];\nint n,m;\nint calc()\n{\n    bitset<maxn> s;s.reset();\n    int res=0;\n    for(int i=1;i<=m;i++)\n    {\n        int u=a[i];\n        if(!(s & f[u]).count()) s[u]=1,res++;\n    }\n    return res;\n}\nint ans;\nvoid SA()\n{\n    for(double T=5000;T>=1e-14;T*=0.96)\n    {\n        int x=rand()%m+1,y=rand()%m+1;\n        swap(a[x],a[y]);\n        int res=calc();\n        int delta=res-ans;\n        swap(a[x],a[y]);\n        if(delta>0)\n        {\n            ans=res;\n            swap(a[x],a[y]);\n        }\n        else if(exp(-delta/T)*RAND_MAX<=rand()) swap(a[x],a[y]);\n    }\n}\nmap<string,int > mp;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        int x;scanf(\"%d\",&x);\n        if(x==1) top++;\n        else\n        {\n            string s;cin>>s;\n            if(mp.find(s)==mp.end()) mp[s]=++tot;\n            b[mp[s]][top]=1;\n        }\n    }\n    for(int i=1;i<=top;i++)\n        for(int j=1;j<tot;j++)\n            for(int k=j+1;k<=tot;k++)\n                if(b[j][i] && b[k][i]) f[j][k]=f[k][j]=1;\n    for(int i=1;i<=m;i++) a[i]=i;\n    while((double)clock()/CLOCKS_PER_SEC<=1.95) SA();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1658041775,
        "uid": 178804,
        "name": "\u592a\u9633\u8d77\u665a\u4e86\u5462",
        "ccfLevel": 0,
        "title": "CF1105E"
    },
    {
        "content": "\u7b80\u5355\u5206\u6790\u53ef\u4ee5\u5f97\u5230\n\n\u5728\u4e24\u6b21\u64cd\u4f5c1\u4e4b\u95f4\uff0c**\u6211\u4eec\u6700\u591a\u53ea\u80fd\u6ee1\u8db3\u4e00\u4e2a\u4eba\u7684\u8981\u6c42**\n\n\u6211\u4eec\u628a\u4e24\u6b21\u64cd\u4f5c\u4e4b\u95f4\u7684\u5b57\u7b26\u4e32\u4e24\u4e24\u8fde\u8fb9\n\n\u90a3\u4e48\u8fd9\u6837\u5c31\u6784\u6210\u4e86\u4e00\u5f20\u56fe\n\n\u56e0\u4e3a\u5728\u4e24\u6b21\u64cd\u4f5c1\u4e4b\u95f4\uff0c\u6211\u4eec\u53ea\u80fd\u53d6\u4e00\u4e2a\uff0c\n\n\u6240\u4ee5\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u6c42\u5728\u56fe\u4e2d\u6700\u591a\u7684\u70b9\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u70b9\u4e92\u76f8\u4e0d\u8fde\u63a5\n\n\u8fd9\u5c31\u662f\u56fe\u7684**\u6700\u5927\u72ec\u7acb\u96c6**\n\n---\n\n\u8ba9\u6211\u4eec\u6572\u9523\u6253\u9f13\n\n\u9f13\u638c\u6b22\u8fce\u89e3\u51b3\u65b9\u6848\n\n\u3002\u3002\u3002\n\n\u65b9\u6848\u662f\uff0c\u66b4\u529bdfs\n\n\u56e0\u4e3a\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u662fNPC\u95ee\u9898\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e0d\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u8fdb\u884c\u6c42\u89e3\n\n\u6811\u7684**\u6700\u5927\u72ec\u7acb\u96c6**\u548c\u4e8c\u5206\u56fe\u7684**\u6700\u5927\u72ec\u7acb\u96c6**\u53ef\u4ee5\u6c42\u89e3\u56e0\u4e3a\u5b83\u4eec\u5177\u6709\u4e00\u4e9b\u6027\u8d28\n\ndfs\u4e5f\u8981\u6709\u6280\u5de7\u554a\n\n\u6211\u4eec\u628a\u4e92\u76f8\u4e0d\u8fde\u63a5\u8f6c\u5316\u6210\u4e92\u76f8\u8fde\u63a5\n\n**\u6c42\u89e3\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u5c31\u662f\u6c42\u89e3\u5728\u5b8c\u5168\u56fe\u4e2d\u7684\u8865\u56fe\u7684\u6700\u5927\u56e2\uff08\u6700\u5927\u5b8c\u5168\u5b50\u56fe\uff09**\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884cdfs\u4e86\n\ncode\uff1a\n\n```\n#pragma GCC optimize(2) \n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n\n#define N 55\n\nusing namespace std;\n\nint n,m;\n\nvector<int>v;\n//vector<int>e[N];\nmap<string,int>p;\nint f[N][N];\nint rmatch[N];\nint ans;\nint t[N];\n\nvoid addEdge(int u,int v){f[u][v]=1;}\n\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\ninline void write(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\n\nint dfs(int u,int depth)\n{\n//\tfor(int i=0;i<e[u].size();i++)\n//\t{\n//\t\tint v=e[u][i];\n//\t}\n\tfor(int v=u+1;v<=m;v++)\n\t{\n\t\tif(t[v]+depth<=ans)return 0;//\u5982\u679c\u4e0a\u4e00\u6b21\u7684\u7b54\u6848+\u6df1\u5ea6\u8fd8\u662f\u5c0f\u4e8eans\u526a\u679d\n\t\tif(f[u][v]==0)\n\t\t{\n\t\t\tint i;\n\t\t\tfor(i=0;i<depth;i++)if(f[v][rmatch[i]])break;//\u5982\u679c\u6709\u8fde\u8fb9\n\t\t\tif(i==depth)//\u5982\u679c\u5168\u90e8\u7b26\u5408{rmatch[depth]=v;if(dfs(v,depth+1))return 1;}\n\t\t}\n\t}\n\tif(depth>ans)return (ans=depth)|1;\n\treturn 0;\n}\n\nint main()\n{\n\trd(n),rd(m);int cnt=0;\n\twhile(n--)\n\t{\n\t\tint opt;string s;rd(opt);\n\t\tif(opt==1)v.clear();\n\t\telse \n\t\t{\n\t\t\tcin>>s;if(!p[s])p[s]=++cnt;\n\t\t\tfor(int i=0;i<v.size();i++)addEdge(p[s],v[i]),addEdge(v[i],p[s]);\n\t\t\tv.push_back(p[s]);\n\t\t}//\u8fde\u8fb9\n\t}\n\tfor(int i=m;i>0;i--)t[i+1]=ans,rmatch[0]=i,dfs(i,1);\n\tcout<<ans<<endl;\n\n    return 0;\n}\n\n\n```",
        "postTime": 1564144282,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1105E \u3010Helping Hiasat \u3011"
    }
]