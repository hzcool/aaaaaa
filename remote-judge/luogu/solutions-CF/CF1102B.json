[
    {
        "content": "\u9996\u5148\u4e0d\u8981\u88ab\u6807\u7b7e\u5413\u5230\u4e86\uff0c\u8fd9\u662f\u4e00\u9053\u6c34\u9898\uff0c\u7edd\u5bf9\u6ca1\u6709\u7eff\u9898\u96be\u5ea6\n\n~~\u81ea\u8ba4\u4e3a\u4ee3\u7801\u662f\u4e09\u7bc7c++\u9898\u89e3\u4e2d\u6700\u7b80\u6700\u5feb\u7684~~\n\n---\n\n### \u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u6709\u8fd9\u4e48\u51e0\u4e2a\u4efb\u52a1\uff1a\n\n1. \u7528\u4e0a\u6240\u6709\u989c\u8272\n\n1. \u6bcf\u79cd\u76f8\u540c\u6570\u5b57\u7684\u989c\u8272\u4e0d\u540c\n\n1. \u8f93\u51fa\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\uff0c\u7b80\u5355\u5730\uff0c\u53ea\u9700\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cfcolor\uff0c\u4e00\u76f4++\uff0c\u8d85\u8fc7\u4e86\u989c\u8272\u6570\u5c31\u518d\u6b21\u4ece1\u5f00\u59cb\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\uff0c\u4e3a\u4e86\u8ba9\u76f8\u540c\u6570\u5b57\u6392\u5728\u4e00\u8d77\u6211\u4eec\u9700\u8981\u4e00\u6b21sort\uff0c\u4e4b\u540e\u5c31\u53ea\u8981\u4fdd\u8bc1\u8be5\u79cd\u6570\u5b57\u7684\u6570\u91cf\u5c0f\u4e8e\u989c\u8272\u6570\u5c31\u597d\u4e86\n\n\u5bf9\u4e8e\u8f93\u51fa\uff0c\u6309\u7167\u8bfb\u5165\u987a\u5e8f\u518d\u6b21sort\u5373\u53ef\n\n---\n\n\u4e4b\u540e\u5c31\u662f\u6a21\u62df\u4e86\uff01\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint k,n;\nstruct node\n{\n\tint x,id,ans; //x\u4e3a\u6570\u5b57,id\u4e3a\u8f93\u5165\u987a\u5e8f,ans\u4e3a\u989c\u8272\n}a[5005];\nbool cmp1(node x,node y) //\u7b2c\u4e00\u6b21\u6309\u6570\u5b57\u6392\u5e8f\n{\n\treturn x.x<y.x;\n}\nbool cmp2(node x,node y) //\u7b2c\u4e8c\u6b21\u6309\u8f93\u5165\u987a\u5e8f\u6392\u5e8f\n{\n\treturn x.id<y.id;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tif(n<k) //\u989c\u8272\u6bd4\u683c\u5b50\u591a\uff0c\u4e0d\u53ef\u80fd\u5168\u90e8\u7528\u4e0a\n\t{\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i].x),a[i].id=i;\n\tsort(a+1,a+1+n,cmp1);\n\tint start=0,color=0; //start\u4e3a\u67d0\u79cd\u6570\u5b57\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e,color\u4e3a\u5f53\u524d\u8981\u586b\u7684\u989c\u8272\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(++color>k) color-=k; //\u6362\u4e00\u79cd\u989c\u8272,\u592a\u5927\u4e86\u5c31\u56de\u5230\u7b2c\u4e00\u79cd\u989c\u8272\n\t\ta[i].ans=color; //\u586b\u8272\n\t\tif(a[i].x==a[i-1].x)\n\t\t{\n\t\t\tif(i-start+1>k) //\u51cf\u4e00\u51cf\u5f97\u5230\u5df2\u7ecf\u586b\u4e86\u51e0\u4e2a\u8be5\u79cd\u76f8\u540c\u6570\u5b57\uff0c\u662f\u5426\u5927\u4e8e\u989c\u8272\u6570\n\t\t\t{\n\t\t\t\tputs(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\t\n\t\t}\n\t\telse start=i; //\u65b0\u6570\u5b57,\u65b0\u8d77\u70b9\n\t}\n\tputs(\"YES\");\n\tsort(a+1,a+1+n,cmp2); //\u6309\u8f93\u5165\u987a\u5e8f\u91cd\u6392\u4e00\u6b21\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",a[i].ans); //\u8f93\u51fa\n}\n```\n\n---\n\n~~\u6570\u636e\u4e0d\u5927\uff0c\u4e0dIO\u4f18\u5316\u4e5f\u884c\u3002\u3002\u3002~~",
        "postTime": 1548751278,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1102B \u3010Array K-Coloring\u3011"
    },
    {
        "content": "\u672c\u9898\u5b58\u5728\u6076\u610f\u8bc4\u5206\u5acc\u7591\n\n\u601d\u8def\uff1a\u6876\u6392\u5e8f\uff0c\u7edf\u8ba1\u5404\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u591a\u4e8e\u989c\u8272\u603b\u6570\uff0c\u5219\u8f93\u51faNO\uff0c\u5426\u5219\u8f93\u51faYES\uff1b\u540c\u65f6\u53ef\u4ee5\u5bf9\u6392\u597d\u5e8f\u7684\u5e8f\u5217\u7528\u4e00\u5b9a\u7684\u987a\u5e8f\uff08\u6211\u7684\u4ee3\u7801\u662f\u4ece1~k\uff09\u8fdb\u884c\u67d3\u8272\u3002\n```cpp\n#include <stdio.h>\nint a[5001],cnt[5001],color[5001];\nint main()\n{\n\tint n,k,t=0;\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tcnt[a[i]]++;\n\t}\n\tfor(int i=1;i<=5000;i++)\n\t{\n\t\tif(cnt[i]>k)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(a[j]==i)\n\t\t\t\t{\n\t\t\t\t\tcolor[j]=++t;\n\t\t\t\t\tt%=k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"YES\\n\");\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(i!=1) printf(\" \");\n\t\tprintf(\"%d\",color[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1547205700,
        "uid": 20854,
        "name": "floatery",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1102B \u3010Array K-Coloring\u3011"
    },
    {
        "content": "\u6211\u53c8\u6765\u5199\u9898\u89e3\u4e86\uff0c\u5475\u5475\u5475\uff0c\u6700\u8fd1\u6c89\u8ff7\u4e8e\u5237\u9898\u3001\u5199\u9898\u89e3\uff0c\u65e0\u6cd5\u81ea\u62d4\u2026\u2026\n\u597d\u4e86\uff0c\u4e0d\u8bf4\u522b\u7684\u4e86\uff0c\u73b0\u5728\u5feb\u70b9\u8fdb\u5165\u6b63\u9898\u3002\n\n## \u9898\u9762\n### \u82f1\u6587\u9898\u9762\n\u8fd9\u91cc\u4ece\u6765\u4e0d\u4f1a\u51fa\u73b0\u82f1\u6587\u9898\u9762\u7684\u597d\u5417\uff0c\u9700\u8981\u4f60\u53bb [\u8fd9\u91cc](http://codeforces.com/problemset/problem/1102/B) \u770b\u7684\u3002\n### \u4e2d\u6587\u9898\u9762\n\u5199\u5b8c\u4eca\u65e9\u7684\u9898\u89e3\u540e\uff0c\u6211\u60f3\u4e86\u60f3\uff0c\u51b3\u5b9a\u8fd8\u662f\u628a\u9898\u76ee\u7684\u610f\u601d\u653e\u51fa\u6765\uff0c\u80fd\u8282\u7ea6\u5927\u5bb6\u7684\u65f6\u95f4\u3002\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$ \u548c $k$ \u79cd\u989c\u8272,\u7528\u8fd9 $k$ \u79cd\u989c\u8272\u7ed9 $a$ \u4e2d\u7684\u5143\u7d20\u67d3\u8272\uff0c\u8981\u6c42\uff1a\n+ \u6bcf\u4e2a\u5143\u7d20\u90fd\u8981\u88ab\u67d3\u8272\n+ \u6bcf\u79cd\u989c\u8272\u90fd\u8981\u88ab\u4f7f\u7528\n+ \u6bcf\u79cd\u989c\u8272\u4e0d\u4f1a\u88ab\u7528\u4e8e\u76f8\u540c\u7684\u5143\u7d20(\u5373\u82e5\u989c\u8272\n\n\u5982\u679c\u6ca1\u6709\u53ef\u884c\u7684\u65b9\u6848\uff0c\u8f93\u51fa `NO` ,\u5426\u5219\u8f93\u51fa `YES` \u548c\u4efb\u4f55\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\u3002\u5373\u82e5\u989c\u8272 $c_i = c_j(i \\neq j)$ \uff0c\u5fc5\u987b\u4fdd\u8bc1 $a_i \\neq a_j$\n## \u601d\u8def\n\u9996\u5148\u5148\u819c\u62dc\u4e00\u4e0b\u5927\u4f6c xyf007 \uff0c\u4ed6\u5199\u7684\u8fd9\u7bc7\u6d1b\u8c37\u9898\u89e3\u5f15\u53d1\u4e86\u6211\u7684\u601d\u8def\uff08\u865a\u62df\u8d5b\u540e\u770b\u89c1\u7684\uff0c\u5927\u5bb6\u522b\u4ee5\u4e3a\u6211\u4f5c\u5f0a\uff09\uff0c\u7136\u540e\u6211\u60f3\u4e86\u60f3\uff0c\u51b3\u5b9a\u5199\u4e00\u4e0b\u8fd9\u7bc7\u9898\u89e3\u3002\n\n\u6211\u4eec\u8fd9\u9053\u9898\u7684\u786e\u5b8c\u5168\u4e0d\u7528\u5404\u79cd\u5404\u6837\u7684\u9ad8\u7ea7\u7b97\u6cd5\uff0c\u4ec0\u4e48\u6876\u6392\u5e8f\u3001\u4ec0\u4e48\u53cc\u6307\u9488\u3001\u4ec0\u4e48vis\u6570\u7ec4\uff0c\u90fd\u4e0d\u8981\uff0c\u6211\u4eec\u53ea\u8981\u7ed3\u6784\u4f53\uff0c\u4e00\u4e2a\u53d8\u91cf `num` \uff0c\u5c31\u53ef\u4ee5\u505a\u4e86\u3002\n\n\u5982\u679c $n<k$ \u7684\u8bdd\uff0c\u80af\u5b9a\u7528\u4e0d\u5b8c\u6240\u6709\u7684\u6570\u5b57\uff0c\u8f93\u51fa $-1$\u3002\n\n\u6211\u4eec\u9996\u5148\u5224\u65ad\u662f\u5426\u6709\u6570\u5b57\u51fa\u73b0\u6b21\u6570 $>k$ \uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u884c\u7684\u3002\n\n\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u4e00\u5b9a\u884c\u3002\u6211\u4eec\u50cf\u8fd9\u6837\u586b\u8272\u3002\n\n+ \u5148\u5c06\u6570\u7ec4\u6309\u7167\u5927\u5c0f\u6392\u5e8f\n\n+ \u7136\u540e\u8ba9\u4e00\u4e2a\u53d8\u91cf `num` \u6765\u4ece $1$ \u5230 $k$ \u5faa\u73af\uff0c\u5230\u4e86 $k+1$ \u5c31\u628a\u5b83\u8d4b\u503c\u4e3a $1$\u3002\n\n+ \u8f6e\u6d41\u586b\uff0c `num` \u662f\u591a\u5c11\u5c31\u586b\u591a\u5c11\u3002\n \n\u60f3\u60f3\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5b50\u53ef\u4ee5\uff1f\n\n\u7136\u540e\u5c31\u5341\u5206\u7b80\u5355\uff0c\u6211\u4eec\u6309\u7167\u539f\u59cb\u6570\u5217\u7684\u7f16\u53f7\u6392\u4e2a\u5e8f\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n## \u4ee3\u7801\n\u8bf7\u5230 [\u8fd9\u91cc](https://oi-master.github.io/post/codeforces-contest-1102-b-ti-jie/) \u67e5\u770b\u4ee3\u7801\u3002",
        "postTime": 1586297146,
        "uid": 317899,
        "name": "oimaster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1102B \u3010Array K-Coloring\u3011"
    },
    {
        "content": "**\u5148\u58f0\u660e\uff0c\u4e0b\u9762\u6587\u7ae0\u4e2d\u63d0\u53ca\u7684\u6307\u9488\uff0c\u5747\u4e0d\u662fC\u8bed\u8a00\u4e2d\u771f\u6b63\u771f\u6b63\u610f\u4e49\u7684\u6307\u9488\uff0c\u800c\u662f\u201c\u53cc\u6307\u9488\u201d\u64cd\u4f5c\u4e2d\u7684\u6307\u9488**\u3002\n\n\u672c\u9898\u601d\u7ef4\u4e0a\u7684\u96be\u5ea6\u662f\u5f88\u4f4e\u7684\uff0c\u53ea\u8981\u4f60\u7684\u4ee3\u7801\u80fd\u8fc7\u4e00\u4e9b\u6d4b\u8bd5\u70b9\u5c31\u8bf4\u660e\u4f60\u5927\u4f53\u601d\u8def\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\u3002\n\n\u601d\u8def\u518d\u7b80\u5355\u4e5f\u8fd8\u662f\u8981\u8bf4\u4e00\u4e0b\u7684\u5427\u3002\n\n**1.\u601d\u8def**\uff1a\n\n\u4ece\u9898\u76ee\u5165\u624b\uff1a\n\n(1).1~n\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u8981\u88ab\u67d3\u8272\u3002\u63d0\u53d6\u5230\u4e00\u4e2a\u8981\u70b9\u2014\u2014**\u5e94\u8be5\u8981\u904d\u5386\u6570\u7ec4**\u3002\u518d\u4e00\u770b\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6240\u4ee5\u904d\u5386\u6570\u7ec4\u5e94\u8be5\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u65b9\u6848\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u5e94\u8be5\u6ce8\u610f\u5230\uff0c\u9898\u76ee**\u6ca1\u6709\u8bf4\u4e0d\u80fd\u7528\u548ca[i]\u76f8\u540c\u7684\u989c\u8272\u6765\u67d3a[i]**\u3002\n\n(2).\u8f93\u5165k\u4ee3\u8868\u67091\u30012...k\u4e00\u5171k\u79cd\u5143\u7d20\uff0c\u90fd\u8981\u7528\u6765\u67d3\u8272\u3002\u8fd9\u5c31\u63d0\u53d6\u5230\u7b2c\u4e00\u4e2a\u8981\u70b9\u2014\u2014**k\u79cd\u5143\u7d20\u90fd\u8981\u4f7f\u7528\u5230**\u3002\n\n\u505a\u6cd5x\uff1a\u5982\u679c\u53ea\u6709(1)\u548c(2)\u4e24\u4e2a\u70b9\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u9898\u5c31\u7b80\u5355\u5229\u7528**\u53cc\u6307\u9488**\uff0c\u4e00\u4e2a\u6307\u5411\u539f\u6570\u7ec4\uff1b\u53e6\u4e00\u4e2a\u6307\u54111\uff0c\u4f9d\u6b21\u5411k\u79fb\u52a8\uff0c\u6307\u5230k\u4ee5\u540e\u8df3\u56de1\u7ee7\u7eed\u5faa\u73af\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e86\u3002\n\n(3).\u5982\u679c\u539f\u6570\u7ec4\u4e2d\u7684a[i]\u548ca[j]\u4e24\u4e2a\u5143\u7d20\u662f\u540c\u79cd\u989c\u8272\u7684\u8bdd\uff0c\u90a3\u4e48\u5728\u67d3\u8272\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u62ff\u76f8\u540c\u7684\u989c\u8272\u53bb\u67d3a[i]\u548ca[j]\u3002\u8fd9\u4e2a\u8981\u70b9\uff0c\u7ed9\u6211\u4eec\u904d\u5386\u6570\u7ec4\u7684\u65f6\u5019\u589e\u52a0\u4e86\u4e00\u70b9\u70b9\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u80fd\u539f\u5c01\u4e0d\u52a8\u7684\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684\u505a\u6cd5x\u4e86\u3002\u2014\u2014\u6211\u4eec\u5e94\u8be5\u60f3\u5230\uff0c**\u65e2\u7136\u539f\u6570\u7ec4\u4e2d\u989c\u8272\u76f8\u540c\u7684\u4e0d\u80fd\u67d3\u4e00\u6837\u7684\u989c\u8272\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u75311~k\u4f9d\u6b21\u7ed9\u989c\u8272\u76f8\u540c\u7684\u5143\u7d20\u67d3\u8272**\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u7b2c(3)\u70b9\u4e86\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u518d\u6dfb\u52a0\u4e00\u4e2a\u6307\u9488\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e00\u4e2a\u6307\u9488i\u6307\u54111~5000\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u53e6\u4e00\u4e2a\u6307\u9488j\u6307\u5411\u6570\u7ec4\u6765\u904d\u5386\u6570\u7ec4\u5bfb\u627e\u503c\u4e3ai\u7684\u6570\u7ec4\u5143\u7d20\uff0c\u53e6\u5916\u4e00\u4e2a\u6307\u9488key\u6307\u54111~k\u4e2d\u6bcf\u4e00\u79cd\u989c\u8272\u3002\u53ea\u6709\u6307\u9488i\u548cj\u9700\u8981\u5faa\u73af\uff0c\u6240\u4ee5\u8fd9\u9898\u7684\u505a\u6cd5\u53ef\u4ee5\u662fO(n^2)\u7684\u590d\u6742\u5ea6\u3002\n\n**2.\u5751\u70b9**\uff1a\n\n\u6709\u53ef\u80fd\u539f\u6570\u7ec4\u4e2d\u51e0\u4e4e\u6ca1\u6709\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4f1a\u5bfc\u81f4key\u6307\u9488\u4ece\u6765\u90fd\u4e0d\u4f1a\u79fb\u52a8\u5230k\uff0c\u5bfc\u81f4\u65e0\u6cd5\u4f7f\u7528\u5230\u6240\u6709\u5143\u7d20\u3002\n\n\u53ea\u8981\u6ce8\u610f\u5230\u8fd9\u4e2a\u7ec6\u8282\uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u505a\u6cd5\u5c31\u57fa\u672c\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u4e0b\u9762\u76f4\u63a5\u4e0aAC\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u8fd8\u4f1a\u6709\u4e00\u4e9b\u8865\u5145\u52a9\u4e8e\u7406\u89e3\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[5005];//\u63a5\u6536\u6570\u7ec4\nbool vis[5005];//\u6807\u8bb0\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u67d3\u8fc7\u8272\uff0c\u6bcf\u4e2a\u5730\u65b9\u53ea\u9700\u8981\u67d3\u4e00\u6b21\u8272\u5c31\u591f\u4e86\nint coloruse[5005];//\u8bb0\u5f55\u662f\u5426\u4f7f\u7528\u8fd9\u4e2a\u989c\u8272\u7684\u6570\u7ec4\nint main()\n{\n    int i,j,n,k;\n    cin>>n>>k;\n    for(i=1; i<=n; i++)\n        cin>>a[i];\n    bool flag=1;\n    for(i=1; i<=5000; i++)//\u6307\u54111~5000\u6bcf\u4e2a\u6570\u5b57\uff0c\u56e0\u4e3a\u539f\u6570\u7ec4\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u6570\u5b57\u4e00\u5b9a\u57281~5000\u4e2d\n    {\n        if(flag==0)\n            break;\n        int key=1;//\u6307\u54111~k\n        for(j=1; j<=n; j++)\n        {\n            if(a[j]==i&&!vis[j]&&key<=k)//\u5982\u679c\u662f\u672c\u6765\u989c\u8272\u5c31\u662fi\u7684\u8bdd\uff0c\u75311\u5230k\u4f9d\u6b21\u67d3\u8272\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u91cd\u590d\n            {\n                coloruse[key]++;//\u6807\u8bb0\u5f53\u524d\u989c\u8272\u662f\u5426\u5df2\u7ecf\u7528\u8fc7\n                a[j]=key++;//key+1\uff0c\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u9047\u5230i\u4e0d\u4f1a\u7528\u540c\u79cd\u989c\u8272\n                vis[j]=1;//\u6807\u8bb0\u8fd9\u70b9\u5df2\u7ecf\u88ab\u67d3\u8272\n            }\n            else if(a[j]==i&&!vis[j]&&key>k)//\u5982\u679c\u8fd8\u6709\u7b49\u4e8ei\u7684\u70b9\uff0c\u4f46\u662f\u989c\u8272\u6570\u91cf\u5df2\u7ecf\u4e0d\u591f\u4e86\uff0c\u90a3\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u4e86\n            {\n                flag=0;\n                break;\n            }\n        }\n    }\n    if(flag==1)\n    {\n        j=1;//\u6307\u5411\u6570\u7ec4\n        for(i=1; i<=k; i++)//\u68c0\u67e51~k\u4e2d\u662f\u5426\u6709\u989c\u8272\u6ca1\u6709\u4f7f\u7528\u8fc7\n        {\n            if(!coloruse[i]&&j<=n&&coloruse[a[j]]>1)//\u4fdd\u8bc1\u5f53\u524d\u989c\u8272\u8db3\u591f\u591a\n            {\n                coloruse[a[j]]--;\n                coloruse[i]++;\n                a[j]=i;\n                j++;\n            }\n            else if(!coloruse[i]&&j<=n&&coloruse[a[j]]==1)//\u5982\u679c\u5f53\u524d\u989c\u8272\u4e0d\u591f\u591a\u7684\u8bdd\uff0c\u5c31\u627e\u5230\u591f\u591a\u7684\u4e3a\u6b62\n            {\n                while(coloruse[a[j]]==1)\n                {\n                    j++;\n                }\n                coloruse[a[j]]--;\n                coloruse[i]++;\n                a[j]=i;\n                j++;\n            }\n            if(j>n&&!coloruse[i])//\u5982\u679c\u5df2\u7ecf\u904d\u5386\u4e86\u6570\u7ec4\uff0c\u8fd8\u662f\u6ca1\u6709\u7528\u5b8c\u989c\u8272\uff0c\u90a3\u5c31\u65e0\u6cd5\u5b8c\u6210\u9898\u76ee\u8981\u6c42\u4e86\n            {\n                flag=0;\n            }\n        }\n    }\n    if(flag==1)\n    {\n        cout<<\"YES\"<<'\\n';\n        for(i=1; i<=n; i++)\n            printf(\"%d \",a[i]);\n    }\n    else\n        printf(\"NO\");\n    return 0;\n}\n```",
        "postTime": 1583774227,
        "uid": 277023,
        "name": "YuanZhizheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1102B \u3010Array K-Coloring\u3011"
    },
    {
        "content": "\u849f\u84bb\u7ec8\u4e8e\u8fc7\u4e86\uff0c\u53d1\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\uff08~~\u8fd9\u90fd\u8981\u7eaa\u5ff5\u679c\u7136\u5f88\u5f31~~\uff09\n\n\u6211\u7684\u601d\u8def\u662f\uff1a\u6211~~\u4eec~~\u5148\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5728\u8f93\u5165\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5bf9cnt\u6570\u7ec4\u8fdb\u884c\u66f4\u65b0\uff0c\u6211~~\u4eec~~\u4f7f\u6bcf\u4e2aai\u4e3a\u5b83\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8fd9\u6837\u5c31\u521d\u6b65\u5730\u4fdd\u8bc1\u4e86\u4e0d\u91cd\u590d\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211~~\u4eec~~\u8981\u8003\u8651\u5982\u4f55\u8ba9\u6bcf\u4e2a\u989c\u8272\u90fd\u6d82\u5230\uff0c\u90a3\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u8fd9\u4e2a\u989c\u8272\u88ab\u6d82\u7684\u6b21\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u5730\u89e3\u51b3\u6709\u4e9b\u989c\u8272\u6ca1\u6d82\u3002\u6211~~\u4eec~~\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6ca1\u6709\u6ca1\u6d82\u8fc7\u7684\u989c\u8272\uff0c\u5728\u6539\u52a8\u540e\u7684\u6570\u7ec4\u91cc\u627e\u5230\u4e00\u4e2a\u88ab\u6d82\u6b21\u6570\u5927\u4e8e1\u7684\u989c\u8272\uff0c\u628a\u5b83\u7ed9\u6362\u6210\u672a\u6d82\u8fc7\u7684\u989c\u8272\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u989c\u8272\u88ab\u6d82\uff0c\u5e76\u4e14\u6bcf\u4e2a\u6570\u90fd\u88ab\u6d82\u3002\n\n\n\n------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nvoid read(int &x)\n{\n\tx=0;\n\tchar ch=getchar();\n\tint pd=1;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t{\n\t\t\tpd=-pd;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=pd;\n}\nvoid write(const int &x)\n{\n\tint tmp=x;\n\tint s=0;\n\tchar fake[10000];\n\tif(tmp<0)\n\t{\n\t\ttmp=-tmp;\n\t\tputchar('-');\n\t}\n\twhile(tmp>0)\n\t{\n\t\tfake[s++]=tmp%10+'0';\n\t}\n\twhile(s>0)\n\t{\n\t\tputchar(fake[--s]);\n\t}\n}\nint n,k,a[1000001];\nint maxn;\nint cnt[10000001];\nint s[1000001];\nbool colored[1000001];\nint gg[1000001];\nint main()\n{\n\tread(n);\n\tread(k);\n\tif(k>n)\n\t{\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}//\u4e24\u4e2a\u5c0f\u5224\u65ad\uff0ck=n\u7684\u5224\u65ad\u975e\u5e38\u91cd\u8981\u3002\n\tif(k==n)\n\t{\n\t\tputs(\"YES\");\n\t\tfor(register int i=1;i<=k;++i)\n\t\t{\n\t\t\tcout<<i<<\" \";\n\t\t}\n\t\treturn 0;\n\t}\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tcin>>a[i];\n\t\t++cnt[a[i]];//cnt\u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\t\ts[i]=cnt[a[i]];//\u663e\u7136s\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u6539\u52a8\u540e\u7684\u6570\u7ec4\uff0cgg\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u6bcf\u4e2a\u989c\u8272\u88ab\u6d82\u7684\u6b21\u6570\u3002\n\t\tgg[s[i]]++;\n\t\tif(cnt[a[i]]>k)//\u975e\u5e38\u660e\u663e\u7684\u5224\u65ad\uff0c\u5982\u679c\u51fa\u73b0\u6b21\u6570\u5927\u4e8eK\u90a3\u80af\u5b9a\u4e0d\u80fd\u4fdd\u8bc1\u4e0d\u4e00\u81f4\u3002\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\treturn 0;       \n\t\t}\n\t}\n\tfor(register int i=1,j=n;i<=k;++i)\n\t{\n\t\twhile(gg[s[j]]<=1)j--;//\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u88ab\u6d82\u6b21\u6570>1\u7684\u989c\u8272\n\t\tif(gg[i]==0)gg[s[j]]--,gg[i]++,s[j]=i;//\u628a\u5b83\u6362\u6389\n\t}\n\tputs(\"YES\");\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tcout<<s[i]<<\" \";\n\t}\n}\n\n```",
        "postTime": 1548597665,
        "uid": 87026,
        "name": "\u4e24\u5e74\u6253\u94c1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1102B \u3010Array K-Coloring\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5206\u6790\uff1a\n\n\u9996\u5148\u5224\u65ad\u662f\u5426\u53ef\u884c\uff0c\u9898\u76ee\u7ed9\u51fa\u7684\u9650\u5236\u6709\u4e09\u4e2a\uff1a\n\n1. \u201c\u6bcf\u4e2a\u5143\u7d20\u90fd\u8981\u88ab\u67d3\u8272\u201d\uff0c\u8fd9\u662f\u4e00\u53e5\u6709\u7528\u7684\u5e9f\u8bdd\u3002\n\n2. \u201c\u6bcf\u79cd\u989c\u8272\u90fd\u8981\u88ab\u4f7f\u7528\u201d\uff0c\u7ed3\u5408\u540e\u9762\u7684\u7b2c\u4e09\u70b9\uff0c\u53d1\u73b0\u6211\u4eec\u5176\u5b9e\u662f\u5e0c\u671b\u773c\u8272\u66f4\u591a\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u989c\u8272\u4e0d\u662f\u591a\u5230\u5927\u4e8e $n$ \u90fd\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n\n3. \u201c\u6bcf\u79cd\u989c\u8272\u4e0d\u4f1a\u88ab\u7528\u4e8e\u76f8\u540c\u7684\u5143\u7d20\u201d\uff0c\u8fd9\u5e94\u8be5\u662f\u6700\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u8fd9\u4e2a\u8981\u6c42\u7684\u9650\u5236\u4f7f\u5f97\u4e0d\u80fd\u6709\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u7684\u6570\u91cf\u591a\u4e8e\u989c\u8272\u7684\u6570\u91cf\uff0c\u5426\u5219\u4e00\u5b9a\u4f1a\u6709\u989c\u8272\u91cd\u590d\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u6784\u9020\u8fd9\u6837\u4e00\u7ec4\u989c\u8272\u5e8f\u5217\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7b2c\u4e8c\u6761\u6761\u4ef6\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u5148\u5c06\u76f8\u540c\u989c\u8272\u653e\u5728\u4e00\u8d77\uff0c\u7136\u540e\u7528\u9012\u589e\u7684\u989c\u8272\u4e00\u4e2a\u4e00\u4e2a\u5237\u8fc7\u53bb\uff0c\u8fd9\u6837\u5c31\u80fd\u5728\u4fdd\u8bc1\u6bcf\u4e00\u79cd\u989c\u8272\u90fd\u4f7f\u7528\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u540c\u79cd\u5143\u7d20\u7684\u989c\u8272\u4e0d\u540c\u4e86\u3002\n\n----------\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct node{\n\tint id,col,num;\n}p[5005];\nint n,k,cnt[5005],now;\nbool cmp1(node a,node b){\n\treturn a.num<b.num;\n}\nbool cmp2(node a,node b){\n\treturn a.id<b.id;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&p[i].num);\n\t\tp[i].id=i;\n\t\tcnt[p[i].num]++;\n\t}\n\tfor(int i=1;i<=5000;i++)\n\tif(cnt[i]>k){\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tif(k>n){\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"YES\\n\");\n\tsort(p+1,p+n+1,cmp1);\n\tfor(int i=1;i<=n;i++){\n\t\tnow++;\n\t\tif(now>k)now=1;\n\t\tp[i].col=now;\n\t}\n\tsort(p+1,p+n+1,cmp2);\n\tfor(int i=1;i<=n;i++)\n\tprintf(\"%d \",p[i].col);\n\treturn 0;\n}\n```\n",
        "postTime": 1629472429,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1102B Array K-Coloring"
    },
    {
        "content": "# \u6211\u7684\u60f3\u6cd5\u975e\u5e38\u5947\u7279\uff01\uff01\uff01\uff08\u4e0d\u4f7f\u7528vis[i][j]\u8868\u793a\u662f\u5426\u67d3\u8272\uff09\n## \u4e0b\u9762\u662f\u6211\u7684\u601d\u8def\uff1a\n### \u65e2\u7136\u4e0d\u80fd\u7ed9\u76f8\u540c\u7684\u6570\u67d3\u76f8\u540c\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u6309\u5927\u5c0f\u6392\u5e8f\u540e\uff0c\u6309\u5e8f\u67d3\u8272\uff0c\u518d\u6392\u5e8f\u56de\u53bb\u3002\n#### \u4ee5\u4e0b\u4ee3\u7801\n---\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,k,b[5001];\nstruct node\n{\n\tint sum,id,color;\n}a[5001];\nbool cmp1(node a,node b)\n{\n\treturn a.sum<b.sum;\n}\nbool cmp2(node a,node b)\n{\n\treturn a.id<b.id;\n}//\u4e24\u6b21\u6392\u5e8f\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i].id=i;\n\t}\n\tif(n<k)\n\t{\n\t\tprintf(\"NO\");\n\t\treturn 0;//n<k\u5fc5\u7136\u4e0d\u884c\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i].sum);\n\t\tb[a[i].sum]++;\n\t\tif(b[a[i].sum]>k)\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;//\u6709\u51fa\u73b0\u6b21\u6570\u5927\u4e8ek\u7684\u4e5f\u4e0d\u884c\n\t\t}\n\t}\n\tsort(a+1,a+n+1,cmp1);\n\tint now=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i].color=now++;//\u6309\u5e8f\u67d3\u8272\n\t\tif(now==k+1)\n\t\t{\n\t\t\tnow=1;\n\t\t}\n\t}\n\tsort(a+1,a+n+1,cmp2);\n\tprintf(\"YES\\n\");\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d \",a[i].color);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1547265533,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1102B \u3010Array K-Coloring\u3011"
    },
    {
        "content": "```\nvar n,i,k,s,j,t,p:longint;\n    a,b,c,d:array [1..5000] of longint;\nbegin\n  read(n,k);\n  for i:=1 to n do read(c[i]);\n  for i:=1 to n do\n  begin\n    s:=c[i];\n    p:=0;\n    for j:=1 to n do if (c[j]=s) and(d[j]=0) then begin\n    d[j]:=1;\n    inc(a[s]);\n    if a[s]>k then begin write('NO'); exit; end\n    else b[j]:=(a[s]+t) mod k+1;\n    p:=1;\n    end;\n    if (p=1) then t:=t+a[s];\n  end;\n  writeln('YES');\n  for i:=1 to n do write(b[i],' ');\nend.\n```",
        "postTime": 1547259606,
        "uid": 71491,
        "name": "shenmadongdong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1102B \u3010Array K-Coloring\u3011"
    },
    {
        "content": "\u9996\u5148\u5982\u679cn<k\u90a3\u4e48\u5c31\u662fNO  \n\u9898\u76ee\u8981\u6c421\u5230k\u90fd\u8f93\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8f93\u51fa1\u5230k\uff0c\u8bb0\u5f55\u6bcf\u4e00\u7ec4\u90fd\u8f93\u51fa\u4e86\u54ea\u4e9b\u6570\uff0c\u7528\u4e00\u4e2a\u6876\u8bb0\u5f55\u4e0b\u6bcf\u4e00\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u7136\u540e\u4e0d\u65ad\u9012\u51cf\u4fdd\u8bc1\u540c\u4e00\u7ec4\u7684\u6570\u5b57\u90fd\u4e0d\u540c\uff0c\u6ce8\u610f\u4e0d\u8981\u4e0e\u4e4b\u524d\u8f93\u51fa\u76841\u5230k\u91cd\u590d  \n```cpp\n#include <bits/stdc++.h>\n#define rg register\n#define inl inline\ntypedef long long ll;\nconst int N = 5e3 + 10, mod = 1e9 + 7;\nusing namespace std;\nnamespace fast_IO {\n    long long read()\n    {\n        rg long long num = 0;\n        rg char ch;\n        rg bool flag = false;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        if (ch == EOF)return ch; if (ch == '-')flag = true; else num = ch ^ 48;\n        while ((ch = getchar()) >= '0'&&ch <= '9')\n            num = (num << 1) + (num << 3) + (ch ^ 48);\n        if (flag)return -num; return num;\n    }\n    ll max(rg ll a, rg ll b) { if (a > b)return a; return b; }\n    ll min(rg ll a, rg ll b) { if (a < b)return a; return b; }\n    void write(rg ll x) { if (x < 0)putchar('-'), x = -x; if (x >= 10)write(x / 10); putchar(x % 10 ^ 48); }\n};\nint tong[N], c[N];\nbool have[N][N];\n\nint main()\n{\n    rg int n = fast_IO::read(), k = fast_IO::read(), which = 0;\n    if (n < k) { puts(\"NO\"); return 0; }\n    for (rg int i = 1; i <= n; ++i)++tong[c[i] = fast_IO::read()];\n    for (rg int i = 1; i <= n; ++i)\n        if (tong[c[i]] > k) { puts(\"NO\"); return 0; }\n        else if (tong[c[i]] > tong[which])which = c[i];\n    puts(\"YES\");\n    for (rg int i = 1; i <= k; ++i)\n    {\n        if (i != 1)putchar(' ');\n        fast_IO::write(k - i + 1);\n        have[c[i]][k - i + 1] = true;\n    }\n    for (rg int i = k + 1; i <= n; ++i)\n    {\n        putchar(' ');\n        while (have[c[i]][tong[c[i]]])--tong[c[i]];\n        fast_IO::write(tong[c[i]]--);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1547131223,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1102B \u3010Array K-Coloring\u3011"
    }
]