[
    {
        "content": "> [CF587D Duff in Mafia](https://codeforces.com/contest/587/problem/D)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u989c\u8272 $c$ \u548c\u6743\u503c $t$\u3002\n- \u4f60\u8981\u9009\u51fa\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u5f97\u5b83\u4eec\u662f\u4e00\u4e2a**\u5339\u914d**\uff0c\u540c\u65f6\u5269\u4e0b\u7684\u8fb9\u6bcf\u79cd\u989c\u8272\u4e5f\u662f\u4e00\u4e2a**\u5339\u914d**\u3002\n- \u540c\u65f6\uff0c\u4f60\u8981\u6700\u5c0f\u5316\u9009\u51fa\u7684\u8fb9\u7684\u6700\u5927\u6743\u503c\u3002\n- $n,m \\le 5 \\times 10^4$\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u4e8c\u5206\u7b54\u6848\uff0c\u82e5\u6b64\u65f6\u4e8c\u5206\u7684\u503c\u4e3a $o$\uff0c\u5219\u6240\u6709 $> o$ \u7684\u8fb9\u90fd\u4e0d\u80fd\u9009\u3002\n\n\u6bcf\u6761\u8fb9\u6709\u9009\u548c\u4e0d\u9009\u4e24\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u8003\u8651 2-SAT\u3002\u8bbe\u7b2c $i$ \u6761\u8fb9\u7684\u72b6\u6001\u4e3a $x_i$ \u8868\u793a\u9009\u62e9\u5b83\uff0c$x^{\\prime}_i$ \u8868\u793a\u4e0d\u9009\u3002\u8fde\u8fb9\u5982\u4e0b\uff1a\n\n1. \u5bf9\u4e8e\u4e00\u5b9a\u4e0d\u80fd\u9009\u7684\u8fb9\uff0c\u8fde\u8fb9 $x_i \\to x^{\\prime}_ i$\u3002\n2. \u5bf9\u4e8e\u9009\u51fa\u7684\u8fb9\u4e00\u5b9a\u8981\u662f\u4e00\u4e2a\u5339\u914d\uff0c\u8003\u8651\u4e00\u4e2a\u70b9 $p$ \u4e0a\u7684\u6240\u6709\u8fb9 $x_{1\\dots k}$\uff0c\u8fde\u8fb9 $x_i \\to x^{\\prime}_ j(i \\ne j)$\u3002\n3. \u5bf9\u4e8e\u5269\u4e0b\u7684\u8fb9\u6bcf\u79cd\u989c\u8272\u4e5f\u4e00\u5b9a\u8981\u662f\u4e00\u4e2a\u5339\u914d\uff0c\u8003\u8651\u4e00\u4e2a\u70b9 $p$ \u4e0a\u989c\u8272\u76f8\u540c\u7684\u6240\u6709\u8fb9 $x_{1\\dots k}$\uff0c\u8fde\u8fb9 $x^{\\prime}_ i \\to x_j(i \\ne j)$\u3002\n\n\u4f46\u8fd9\u6837\u505a\u7b2c $2,3$ \u7c7b\u8fb9\u7684\u8fb9\u6570\u4e3a $\\mathcal O(m^2)$\uff0c\u6ce8\u610f\u5230 2-SAT \u6709\u4e00\u4e2a\u7ecf\u5178\u7684\u5efa\u56fe\u4f18\u5316\u2014\u2014\u524d\u7f00\u4f18\u5316\u3002\n\n\u5148\u8003\u8651\u7b2c $2$ \u7c7b\u8fb9\uff0c\u8bbe $x_{1\\dots k}$ \u7684\u524d\u7f00\u70b9\u4e3a $s_{1\\dots k}$\uff0c$x^{\\prime}_ {1\\dots k}$ \u7684\u540e\u7f00\u70b9\u4e3a $s^{\\prime}_ {1\\dots k}$\u3002\u8fde\u8fb9\u5982\u4e0b\uff1a\n\n1. $x_i \\to s_i$\uff0c$s^{\\prime}_ i \\to x^{\\prime}_ i$\u3002\n2. $s_{i-1} \\to s_i$\uff0c$s^{\\prime}_ i \\to s^{\\prime}_ {i-1}$\u3002\n3. $s_{i-1} \\to x^{\\prime}_ i$\uff0c$x_i \\to s^{\\prime}_ {i-1}$\u3002\n\n![](http://www.xht37.com/wp-content/uploads/2020/01/TIM\u56fe\u724720200117230357.png)\n\n\u5bb9\u6613\u53d1\u73b0\u548c\u7b2c $2$ \u7c7b\u8fb9\u662f\u7b49\u6548\u7684\u3002\n\n\u800c\u7b2c $3$ \u7c7b\u8fb9\uff0c\u5c31\u628a\u7b2c $2$ \u7c7b\u8fb9\u7684\u7bad\u5934\u5168\u90e8\u53cd\u8fc7\u6765\u5373\u53ef\u3002\n\n\u7136\u540e tarjan \u5c31\u597d\u4e86\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((n + m) \\log w)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 5e4 + 7, M = 10 * N;\nint n, m, tot, l, r;\nint dfn[M], low[M], num, stk[M], top, ins[M], scc[M], cnt;\nvi v[N], s, e[M], ans;\nstruct P {\n\tint u, v, c, t;\n\tinline void in() { \trd(u), rd(v), rd(c), rd(t), r = max(r, t); }\n} p[N];\n\ninline void work1() {\n\tint S, T;\n\tfor (ui i = 0; i < s.size(); i++) {\n\t\tint x = ::s[i], y = ::s[i] + m, s = ++tot, t = ++tot;\n\t\te[x].pb(s), e[t].pb(y);\n\t\tif (i) e[S].pb(s), e[t].pb(T), e[S].pb(y), e[x].pb(T);\n\t\tS = s, T = t;\n\t}\n\ts.clear();\n}\n\ninline void work2() {\n\tint S, T;\n\tfor (ui i = 0; i < s.size(); i++) {\n\t\tint x = ::s[i], y = ::s[i] + m, s = ++tot, t = ++tot;\n\t\te[s].pb(x), e[y].pb(t);\n\t\tif (i) e[s].pb(S), e[T].pb(t), e[y].pb(S), e[T].pb(x);\n\t\tS = s, T = t;\n\t}\n\ts.clear();\n}\n\nvoid tarjan(int x) {\n\tdfn[x] = low[x] = ++num, stk[++top] = x, ins[x] = 1;\n\tfor (auto y : e[x])\n\t\tif (!dfn[y]) tarjan(y), low[x] = min(low[x], low[y]);\n\t\telse if (ins[y]) low[x] = min(low[x], dfn[y]);\n\tif (dfn[x] == low[x]) {\n\t\tins[x] = 0, scc[x] = ++cnt;\n\t\twhile (x != stk[top--]) {\n\t\t\tint y = stk[top+1];\n\t\t\tins[y] = 0, scc[y] = cnt;\n\t\t}\n\t}\n}\n\ninline void init(int o) {\n\tfor (int i = 1; i <= m; i++) if (p[i].t > o) e[i].pop_back();\n}\n\ninline bool pd(int o) {\n\tfor (int i = 1; i <= m; i++) if (p[i].t > o) e[i].pb(i + m);\n\tfor (int i = 1; i <= tot; i++) dfn[i] = 0;\n\tcnt = num = 0;\n\tfor (int i = 1; i <= tot; i++) if (!dfn[i]) tarjan(i);\n\tfor (int i = 1; i <= m; i++)\n\t\tif (scc[i] == scc[i+m]) return init(o), 0;\n\treturn init(o), 1;\n}\n\nint main() {\n\trd(n), rd(m), tot = m << 1;\n\tfor (int i = 1; i <= m; i++)\n\t\tp[i].in(), v[p[i].u].pb(i), v[p[i].v].pb(i);\n\tfor (int i = 1; i <= n; i++) {\n\t\tsort(v[i].begin(), v[i].end(),\n\t\t\t[&](int i, int j) { return p[i].c < p[j].c; });\n\t\ts = v[i], work1();\n\t\tfor (ui l = 0, r = 0; l < v[i].size(); l = ++r) {\n\t\t\ts.pb(v[i][l]);\n\t\t\twhile (r + 1 < v[i].size()\n\t\t\t\t&& p[v[i][r+1]].c == p[v[i][r]].c) s.pb(v[i][++r]);\n\t\t\twork2();\n\t\t}\n\t}\n\tif (!pd(r)) return prints(\"No\"), 0;\n\tprints(\"Yes\");\n\twhile (l < r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif (pd(mid)) r = mid;\n\t\telse l = mid + 1;\n\t}\n\tpd(l);\n\tfor (int i = 1; i <= m; i++) if (scc[i] < scc[i+m]) ans.pb(i);\n\tprint(l, ' '), print(ans.size());\n\tfor (auto x : ans) print(x, ' ');\n\treturn 0;\n}\n```",
        "postTime": 1579288576,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF587D \u3010Duff in Mafia\u3011"
    },
    {
        "content": "\u5b89\u5229$:$ [\u6742\u9898\u9009\u505a](https://www.luogu.com.cn/blog/s-r-f/liu-yue-qi-yue-za-ti-xuan-zuo)\n\n\u9996\u5148\u5ffd\u7565\u8fb9\u6743$,$\u8003\u8651\u6c42\u4e00\u7ec4\u53ef\u884c\u7684\u65b9\u6848$.$\u53ef\u4ee5\u4f7f\u7528$2-SAT$\u5b9e\u73b0$,$\u5efa\u56fe\u9700\u8981\u524d\u540e\u7f00\u4f18\u5316$.$\n\n\u52a0\u4e0a\u8fb9\u6743\u7684\u9650\u5236\u5c31\u662f\u52a0\u4e00\u4e2a\u4e8c\u5206$.$\n\n\u5f3a\u5236\u8ba9\u4e00\u4e2a\u4e1c\u897f\u4e0d\u80fd\u9009\u5c31\u662f\u52a0\u4e00\u6761 $(x,1)->(x,0)$ \u7684\u8fb9$.$\n\n$O(mlogm),$\u5b9e\u73b0\u7684\u65f6\u5019\u6ce8\u610f\u8282\u7701\u7a7a\u95f4$.$\n\n\u6211\u7684\u4ee3\u7801\u662f$|V|\\leq 7m,$ $|E| \\leq 17m$\n\n---\n\n\u5173\u4e8e\u524d\u540e\u7f00\u4f18\u5316$:$\n\n\u8003\u8651\u6211\u628a**\u539f\u56fe\u4e2d\u7684\u70b9**\u90fd\u62ff\u51fa\u6765\u5e76\u6392\u6210\u4e00\u6392$p_1,p_2,..,p_m.$\n\n\u7136\u540e\u6211\u9700\u8981\u5feb\u901f\u5b9e\u73b0\u82e5\u5e72\u6b21\u4e00\u4e2a\u70b9$u$\u5f80\u8fd9\u4e00\u6392\u70b9\u8fde\u8fb9\u6216\u8005**\u5f80\u8fd9\u4e00\u6392\u70b9\u4e2d\u9664\u4e86\u4e00\u4e2a\u70b9\u7684\u5176\u4ed6\u70b9\u8fde\u8fb9**$.$\n\n\u90a3\u4e48$,$\u53ef\u4ee5\u5efa\u51fa\u8f85\u52a9\u70b9$pre_i$\u548c$suf_i,$\u5206\u522b\u8868\u793a\u8fde\u5411$p_{1..i}$\u548c\u8fde\u5411$p_{i..m}$\u7684\u70b9$.$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8fde\u4e00\u4e2a\u524d\u7f00$,$\u8fde\u4e00\u4e2a\u540e\u7f00$,$\u5c31\u89e3\u51b3\u95ee\u9898\u4e86$.$\n\n\u4e00\u6392\u70b9\u5f80\u70b9$u$\u8fde\u8fb9\u7684\u8fc7\u7a0b\u7c7b\u4f3c$.$\n\n\u8fd9\u4e2a\u4f18\u5316\u5efa\u56fe\u662f\u7ebf\u6027\u7684$.$\n\n---\n\n\u4ee3\u7801$:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T> void read(T &x){\n\tx = 0; int f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -1; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - '0'; ch = getchar();}\n\tx *= f;\n}\ninline void write(int x){if (x > 9) write(x/10); putchar(x%10+'0'); }\n\nconst int N = 50005,M = 50005,V = N * 7,E = M * 17;\n\nint cntv;\nint He[V],Ne[E],To[E],_k;\ninline void init(){ for (int i = 1; i <= cntv; ++i) He[i] = 0; _k = 0; }\ninline void add(int x,int y){ ++_k; To[_k] = y,Ne[_k] = He[x],He[x] = _k; }\n\nint Time,dfn[V],low[V],vis[V],stk[V],top,scc[V],scc_cnt;\ninline void dfs(int x){\n\tdfn[x] = low[x] = ++Time; stk[++top] = x; vis[x] = 1;\n\tfor (int y,p = He[x]; p ; p = Ne[p]){\n\t\ty = To[p];\n\t\tif (!dfn[y]) dfs(y),low[x] = min(low[x],low[y]);\n\t\telse if (vis[y]) low[x] = min(low[x],dfn[y]);\n\t}\n\tif (low[x] == dfn[x]){\n\t\tscc[x] = ++scc_cnt; vis[x] = 0;\n\t\twhile (stk[top] ^ x) scc[stk[top]] = scc[x],vis[stk[top]] = 0,--top;\n\t\t--top;\n\t}\n}\ninline void tarjan(){\n\tint i;\n\tTime = 0,top = 0,scc_cnt = 0;\n\tfor (i = 1; i <= cntv; ++i) dfn[i] = low[i] = vis[i] = scc[i] = stk[i] = 0;\n\tfor (i = 1; i <= cntv; ++i) if (!dfn[i]) dfs(i);\n}\nint n,m,ex[M],ey[M],ec[M],et[M];\n\nint eex[E],eey[E],le;\n\nvector<int>G[N];\ninline void build(int w){\n\tstatic int p[N],lenp,i,q[N],x,y;\n\tlenp = G[w].size();\n\tfor (i = 1; i <= lenp; ++i) p[i] = G[w][i-1];\n\tfor (i = 2; i <= lenp; ++i){ q[i] = ++cntv; ++le; eex[le] = q[i],eey[le] = p[i]; }\n\tfor (i = 2; i < lenp; ++i){ ++le; eex[le] = q[i],eey[le] = q[i+1]; }\n\tfor (i = 1; i < lenp; ++i){ ++le; eex[le] = p[i]+m,eey[le] = q[i+1]; }\n\tfor (i = 1; i < lenp; ++i){ q[i] = ++cntv; ++le; eex[le] = q[i],eey[le] = p[i]; }\n\tfor (i = 2; i < lenp; ++i){ ++le; eex[le] = q[i],eey[le] = q[i-1]; }\n\tfor (i = 2; i <= lenp; ++i){ ++le; eex[le] = p[i]+m,eey[le] = q[i-1]; }\n}\ninline void work(){\n\tint i,x,y;\n\tmap<pair<int,int> ,int>M; M.clear();\n\tcntv = m<<1;\n\tfor (i = 1; i <= m; ++i){\n\t\tG[ex[i]].push_back(i),G[ey[i]].push_back(i);\n\t\tif (M.count(make_pair(ec[i],ex[i]))){\n\t\t\tx = M[make_pair(ec[i],ex[i])],y = i;\n\t\t\t++le; eex[le] = x,eey[le] = y+m;\n\t\t\t++le; eex[le] = x+m,eey[le] = y;\n\t\t\t++le; eex[le] = y,eey[le] = x+m;\n\t\t\t++le; eex[le] = y+m,eey[le] = x; \n\t\t}\n\t\telse M[make_pair(ec[i],ex[i])] = i;\n\t\t\n\t\tif (M.count(make_pair(ec[i],ey[i]))){\n\t\t\tx = M[make_pair(ec[i],ey[i])],y = i;\n\t\t\t++le; eex[le] = x,eey[le] = y+m;\n\t\t\t++le; eex[le] = x+m,eey[le] = y;\n\t\t\t++le; eex[le] = y,eey[le] = x+m;\n\t\t\t++le; eex[le] = y+m,eey[le] = x; \n\t\t}\n\t\telse M[make_pair(ec[i],ey[i])] = i;\n\t}\n\tfor (i = 1; i <= n; ++i) if (G[i].size() > 1) build(i);\n}\n\ninline bool check(int v,int tp){\n\tint i;\n\tinit();\n\tfor (i = 1; i <= le; ++i) add(eex[i],eey[i]);\n\tfor (i = 1; i <= m; ++i) if (et[i] > v) add(i+m,i);\n\ttarjan();\n\tfor (i = 1; i <= m; ++i) if (scc[i] == scc[i+m]) return 0;\n\tif (!tp) return 1;\n\tint cnt = 0;\n\tfor (i = 1; i <= m; ++i) cnt += scc[i+m] < scc[i];\n\twrite(v),putchar(' '),write(cnt),putchar('\\n');\n\tfor (i = 1; i <= m; ++i) if (scc[i+m] < scc[i]) write(i),putchar((--cnt)?' ':'\\n');\n\treturn 1;\n}\n\nnamespace sub0{\n\tint v[M],lv,cnt[N]; vector<int>G[N];\n\tinline bool chk(){\n\t\tint i,j,id,x,y;\n\t\tfor (i = 1; i <= m; ++i) v[i] = ec[i]; sort(v+1,v+m+1),lv = unique(v+1,v+m+1)-v-1;\n\t\tfor (i = 1; i <= m; ++i) ec[i] = lower_bound(v+1,v+lv+1,ec[i])-v,G[ec[i]].push_back(i);\n\t\tfor (i = 1; i <= m; ++i) if (G[i].size()){\n\t\t\tfor (j = 0; j < G[i].size(); ++j){\n\t\t\t\tid = G[i][j],x = ex[id],y = ey[id],++cnt[x],++cnt[y];\n\t\t\t\tif (cnt[x] > 2) return 0; if (cnt[y] > 2) return 0;\n\t\t\t}\n\t\t\tfor (j = 0; j < G[i].size(); ++j) id = G[i][j],x = ex[id],y = ey[id],--cnt[x],--cnt[y];\n\t\t}\n\t\treturn 1;\n\t}\n}\n\nint main(){\n\tint i;\n\tread(n),read(m);\n\tfor (i = 1; i <= m; ++i) read(ex[i]),read(ey[i]),read(ec[i]),read(et[i]);\n\tif (!sub0::chk()){ puts(\"No\"); return 0; }\n\twork();\n\tint L = 0,R = 1e9 + 7,Mid,Ans = R;\n\twhile (L <= R){ Mid = L+R>>1; if (check(Mid,0)) Ans = Mid,R = Mid - 1; else L = Mid + 1; }\n\tif (Ans > 1000000000) puts(\"No\"); else puts(\"Yes\"),check(Ans,1);\n\treturn 0;\n}\n```",
        "postTime": 1594120646,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF587D \u3010Duff in Mafia\u3011"
    },
    {
        "content": "\u7eaa\u5ff5\u4e00\u4e0b\u4eba\u751f\u4e2d\u7b2c\u4e00\u9053\u6ca1\u770b\u9898\u89e3\u505a\u51fa\u6765\u7684\u9ed1\u9898\uff0c\u4e5f\u662f\u6211\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u9898\u76ee\u94fe\u63a5\uff1a[CF587D Duff in Mafia](https://www.luogu.com.cn/problem/CF587D)\u3002\n\n\u9898\u610f\u5f88\u6e05\u695a\uff0c\u5c31\u4e0d\u518d\u591a\u8bf4\u4e86\u3002\n\n\u9996\u5148\u53ef\u4ee5\u7279\u5224\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u8fde\u4e86\u4e24\u6761\u4ee5\u4e0a\u989c\u8272\u76f8\u540c\u7684\u8fb9\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa `No`\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8981\u6700\u5c0f\u5316\u9009\u51fa\u7684\u8fb9\u7684\u6700\u5927\u6743\u503c\uff0c\u80af\u5b9a\u8981\u4e8c\u5206\u3002\n\n\u73b0\u5728\u8f6c\u6362\u4e3a\u5224\u5b9a\u95ee\u9898\uff0c\u89c2\u5bdf\u5230\u53ea\u7528\u8003\u8651\u9009\u4e0d\u9009\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u4f60\u505a\u8fc7 [P6378 Riddle](https://www.luogu.com.cn/problem/P6378?contestId=97864) \u5c31\u53ef\u4ee5\u5f88\u81ea\u7136\u5f97\u60f3\u5230\uff0c\u4f7f\u7528 2-sat \u7b97\u6cd5\u3002\n\n\u5047\u8bbe $f_{i,1}$ \u8868\u793a\u9009 $i$ \u8fd9\u6761\u8fb9\uff0c$f_{i,0}$ \u8868\u793a\u4e0d\u9009 $i$\uff0c\u8003\u8651\u5982\u4f55\u5efa\u8fb9\u3002\n\n1. \u6ee1\u8db3\u5b83\u662f\u4e00\u4e2a\u5339\u914d\uff0c\u90a3\u4e48\u5982\u679c\u8fb9 $i,j$ \u6709\u76f8\u540c\u7aef\u70b9\uff0c\u5c31\u8fde\u8fb9 $f_{i,1}\\to f_{j,0}$\u3002\n\n2. \u6ee1\u8db3\u5269\u4e0b\u7684\u6bcf\u79cd\u989c\u8272\u6784\u6210\u5339\u914d\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4e00\u4e2a\u70b9\u4e0a\u53ea\u80fd\u6700\u591a\u7559\u4e00\u4e2a\u76f8\u540c\u989c\u8272\u7684\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u8fb9 $i,j$ \u6709\u76f8\u540c\u7aef\u70b9\u4e14\u989c\u8272\u76f8\u540c\uff0c\u8fde\u8fb9 $f_{i,0}\\to f_{j,1}$\u3002\n\n3. \u5bf9\u4e8e\u4e8c\u5206\u7684\u9608\u503c $mid$\uff0c\u5bf9\u4e8e\u8fb9\u6743\u5927\u4e8e $mid$ \u7684\u8fb9 $i$\uff0c\u8fde\u8fb9 $f_{i,1}\\to f_{i,0}$\uff0c\u76f8\u5f53\u4e8e\u4f60\u6c38\u8fdc\u4e0d\u80fd\u9009\u5b83\u3002\n\n`1` \u7c7b\u7684\u8fb9\u663e\u7136\u662f $O(m^2)$ \u7ea7\u522b\u7684\uff1b`2` \u7c7b\u8fb9\uff0c\u7531\u4e8e\u5df2\u7ecf\u7279\u5224\u4e86\u4e00\u4e2a\u70b9\u6700\u591a\u8fde\u4e86\u4e24\u6761\u989c\u8272\u76f8\u540c\u7684\u8fb9\uff0c\u4e8e\u662f\u7ea7\u522b\u662f $O(m)$ \u7684\uff1b\u800c `3` \u7c7b\u8fb9\u663e\u7136\u4e5f\u662f $O(m)$ \u7684\u3002\n\n\u4e8e\u662f\u53ea\u7528\u8003\u8651\u5982\u4f55\u4f18\u5316 `1` \u7c7b\u8fb9\u3002\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u4f18\u5316\u3002\n\n\u8bbe\u524d\u7f00 $ru_{i}$ \u8868\u793a $i$ \u524d\u9762\u7684\u8fb9\u5168\u9009\u4e86\uff0c$chu_{i}$ \u8868\u793a $i$ \u524d\u9762\u7684\u8fb9\u6ca1\u9009\u3002\n\n\u7136\u540e\u8fde\u8fb9 $ru_{i-1}\\to ru_{i},chu_{i}\\to chu_{i-1}$ \u4fdd\u6301\u524d\u7f00\u7684\u6027\u8d28\uff0c\u7136\u540e\u8fde\u8fb9 $f_{i,1}\\to ru_{i},chu_{i}\\to f_{i,0},ru_{i}\\to f_{i+1,0},f_{i,1}\\to chu_{i-1}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+m)\\log w)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+m)$\u3002\n\n\u5f00\u5fc3\u4ea4\u4e00\u53d1\uff0c\u7136\u540e ![](https://cdn.luogu.com.cn/upload/image_hosting/9heennft.png)\u3002\n\n\u539f\u56e0\u662f\u8fd9\u6837\u7684\uff1a\n\n\u8fd9\u6837\u76f4\u63a5\u524d\u7f00\u4f18\u5316\uff0c\u5047\u5982\u539f\u56fe\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gy4fsplg.png)\n\n\u4f60\u8981\u5bf9\u8fd9\u4e24\u4e2a\u5730\u65b9\u505a\u524d\u7f00\u4f18\u5316\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vlg4itko.png)\n\n\u90a3\u4e48\u524d\u7f00\u4f18\u5316\u7684\u56fe\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/se7on4p0.png)\n\n\u672c\u6765\u4e0d\u76f8\u5173\u7684\u4e24\u90e8\u5206\u5408\u5728\u4e86\u4e00\u8d77\uff0c\u76f8\u5f53\u4e8e\u8fd9\u56db\u6761\u8fb9\u4e00\u8d77\u505a\u4e86\u524d\u7f00\u4f18\u5316\uff0c\u6df7\u5728\u4e86\u4e00\u8d77\u3002\u6240\u4ee5\u4f60\u5c31 WA \u4e86\u3002\n\n\u53d1\u73b0\u4e86\u539f\u56e0\uff0c\u90a3\u4e48\u5c31\u5f88\u597d\u89e3\u51b3\u4e86\u3002\n\n\u4e0d\u540c\u90e8\u5206\u6df7\u5728\u4e86\u4e00\u8d77\uff0c\u662f\u56e0\u4e3a\u5c5e\u4e8e\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u524d\u7f00\u4f18\u5316\u90e8\u5206\u6ca1\u6709\u533a\u5206\u3002\u90a3\u4e48\u5c31\u5f3a\u884c\u628a\u4e00\u6761\u8fb9\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u5728\u4e24\u4e2a\u7aef\u70b9\u524d\u7f00\u4f18\u5316\u5efa\u8fb9\uff08\u5728\u4ee3\u7801\u4e2d\u5c31\u662f\u4e00\u4e2a\u8282\u70b9\u7684 $ru,chu$\uff0c\u5206\u4e3a\u4e86 $ru1,ru2,chu1,chu2$\uff09\u3002\n\n\u8fd9\u6837\u5c31\u6ca1\u95ee\u9898\u4e86\uff0c\u81f3\u4e8e\u6c42\u89e3\u6cd5\uff0c\u5c31\u662f 2-sat \u6a21\u677f\u5185\u5bb9\u3002\n\n\u5b9e\u73b0\u7565\u6709\u590d\u6742\uff0c\u6240\u4ee5\u5c55\u793a\u4e00\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nstruct edge{  //tarjan\u90e8\u5206\u4e0d\u591a\u8bf4\u5565 \n\tint from,to;\n}e[3000100];int head[50001*60],size;\nvoid addedge(int x,int y){e[++size].to=y;e[size].from=head[x],head[x]=size;}\nint f(int x,int y){return (m*y+x);}\nint ru(int x,int op){return x+m*(op==1?2:3);}\nint chu(int x,int op){return x+m*(op==1?4:5);}\nint dfn[50001*60],low[50001*60],sta[50001*60],vis[50001*60];\nint top,D;\nint k,col[50001*60];\nvoid tar(int now){\n\tdfn[now]=low[now]=++D;vis[now]=1;sta[++top]=now;\n\tfor(int i=head[now];i;i=e[i].from){\n\t\tint u=e[i].to;\n\t\tif(dfn[u]){if(vis[u]) low[now]=min(low[now],low[u]);}\n\t\telse tar(u),low[now]=min(low[now],low[u]);\n\t}\n\tif(dfn[now]==low[now]){\n\t\tk++;\n\t\twhile(sta[top+1]!=now) vis[sta[top]]=0,col[sta[top]]=k,top--;\n\t}\n}\nstruct EDGE{int from,to,val,col;}e1[50001*20];  //\u8bfb\u5165\u7684\u8fb9 \nstruct Edge{int col,id,x;};vector<Edge> e2[50001*20];  //\u7aef\u70b9\u4e0a\u7684\u8fb9 \nbool cmp(Edge x,Edge y){return x.col<y.col;}  //\u6309\u989c\u8272\u6392\u5e8f\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u76f8\u540c\u989c\u8272\u70b9 \nbool check(int x){\n\tsize=0;memset(head,0,sizeof(head));\n\tmemset(dfn,0,sizeof(dfn));top=k=D=0;\n\tmemset(sta,0,sizeof(sta));\n\tfor(int i=1;i<=n;i++){ //\u7b2c\u4e00\u7c7b\u8fb9 \n\t\tif(e2[i].size()==0) continue;\n\t\tfor(int j=0;j<e2[i].size();j++){\n\t\t\taddedge(f(e2[i][j].x,1),ru(e2[i][j].x,e2[i][j].id)); //id\u662f\u533a\u5206\u4e24\u4e2a\u7aef\u70b9\u4e0a\u7684\u524d\u7f00\u4f18\u5316 \n\t\t\taddedge(chu(e2[i][j].x,e2[i][j].id),f(e2[i][j].x,0));\n\t\t}\n\t\tfor(int j=0;j<e2[i].size()-1;j++){\n\t\t\taddedge(ru(e2[i][j].x,e2[i][j].id),ru(e2[i][j+1].x,e2[i][j+1].id));\n\t\t\taddedge(ru(e2[i][j].x,e2[i][j].id),f(e2[i][j+1].x,0));\n\t\t}\n\t\tfor(int j=1;j<e2[i].size();j++){\n\t\t\taddedge(f(e2[i][j].x,1),chu(e2[i][j-1].x,e2[i][j-1].id));\n\t\t\taddedge(chu(e2[i][j].x,e2[i][j].id),chu(e2[i][j-1].x,e2[i][j-1].id));\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){  //\u7b2c\u4e8c\u7c7b\u8fb9 \n\t\tfor(int j=1;j<e2[i].size();j++){\n\t\t\tif(e2[i][j-1].col==e2[i][j].col){  //\u6309\u989c\u8272\u6392\u5e8f\u4e86\uff0c\u6240\u4ee5\u8fd9\u6837\u5904\u7406 \n\t\t\t\taddedge(f(e2[i][j-1].x,0),f(e2[i][j].x,1));\n\t\t\t\taddedge(f(e2[i][j].x,0),f(e2[i][j-1].x,1));\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++) if(e1[i].val>x) addedge(f(i,1),f(i,0));  //\u7b2c\u4e09\u7c7b\u8fb9 \n\tfor(int i=1;i<=m*2;i++) if(!dfn[i]) tar(i);  //\u8dd1tarjan \n\tfor(int i=1;i<=m;i++) if(col[f(i,0)]==col[f(i,1)]) return 0; //2-sat\u5224\u65ad\u677f\u5b50 \n\treturn 1;\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);cout.tie(0); \n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++) cin>>e1[i].from>>e1[i].to>>e1[i].col>>e1[i].val;\n\tfor(int i=1;i<=m;i++){\n\t\te2[e1[i].from].push_back((Edge){e1[i].col,1,i});\n\t\te2[e1[i].to].push_back((Edge){e1[i].col,2,i});\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tsort(e2[i].begin(),e2[i].end(),cmp);\n\t\tfor(int j=2;j<e2[i].size();j++)\tif(e2[i][j-2].col==e2[i][j].col){cout<<\"No\";return 0;} //\u7279\u5224\u65e0\u89e3 \n\t}\n\tint l=0,r=1000000010,ans=-1;\n\twhile(l<=r){ //\u4e8c\u5206\u677f\u5b50 \n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tif(!ans){\n\t\tcout<<\"Yes\\n\";\n\t\tcout<<0<<' '<<0;\n\t\treturn 0;\n\t}\n\tif(ans==-1){\n\t\tcout<<\"No\";\n\t\treturn 0;\n\t}\n\tcheck(ans);\n\tcout<<\"Yes\\n\";\n\tvector<int> ANS;\n\tfor(int i=1;i<=m;i++){ //\u8dd1\u89e3\u6cd5\u7684\u677f\u5b50 \n\t\tif(col[f(i,0)]>col[f(i,1)]){\n\t\t\tANS.push_back(i);\n\t\t}\n\t}\n\tcout<<ans<<' '<<ANS.size()<<'\\n';\n\tfor(int i=0;i<ANS.size();i++) cout<<ANS[i]<<' ';\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1673500689,
        "uid": 481476,
        "name": "LiWenX",
        "ccfLevel": 0,
        "title": "CF587D\u9898\u89e3"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u9898\u8fdc\u8fdc\u4e0d\u5230 *3100 \u554a\n\n\u8003\u8651\u4e00\u79cd\u989c\u8272\u548b\u505a\uff0c\u53d1\u73b0\u9996\u5148\u8981\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e0d\u8d85\u8fc7 $2$\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5c31\u53ea\u53ef\u80fd\u662f\u73af\u6216\u8005\u94fe\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u6bcf\u4e2a\u73af\u90fd\u5fc5\u987b\u662f\u5076\u73af\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e5f\u662f\u5145\u8981\u6761\u4ef6\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5fc5\u7136\u662f\u300c\u9009\u300d\u4e0e\u300c\u4e0d\u9009\u300d\u7684\u8fb9\u4ea4\u66ff\u51fa\u73b0\uff0c\u56e0\u6b64\u53ea\u6709\u4e24\u79cd\u65b9\u6848\u3002\n\n\u5bf9\u4e8e\u591a\u79cd\u989c\u8272\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5bf9\u6bcf\u79cd\u989c\u8272\u627e\u51fa\u6240\u6709\u8fde\u901a\u5757\uff0c\u8bbe\u6240\u6709\u989c\u8272\u4e00\u5171\u6709 $k$ \u4e2a\u8fde\u901a\u5757\uff0c\u6211\u4eec\u7684\u53d8\u91cf $x_1,x_2,\\cdots,x_k\\in\\{0,1\\}$ \u5c31\u4ee3\u8868\u7b2c $i$ \u4e2a\u8fde\u901a\u5757\u9009\u54ea\u79cd\u65b9\u6848\u3002\u5bf9\u4e8e\u4e24\u79cd\u5f02\u8272\u8fde\u901a\u5757\uff0c\u4ed6\u4eec\u4e4b\u95f4\u53ef\u80fd\u6709\u82e5\u5e72\u4ea4\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u67d0\u4e2a $x_i=a\\Rightarrow x_j=b$\u3002\u53d1\u73b0\u8f6c\u5316\u4e3a 2-SAT \u6a21\u578b\uff0c\u53ef\u4ee5\u5728 $O(n+m)$ \u65f6\u95f4\u5185\u6c42\u89e3\u3002\n\n\u5bf9\u4e8e\u539f\u9898\uff0c\u53ea\u9700\u8981\u4e8c\u5206\u7b54\u6848\u4e00\u6b21\uff0c\u53d1\u73b0\u76f8\u5f53\u4e8e\u94a6\u5b9a\u4e86\u67d0\u4e9b $x_i$ \u7684\u53d6\u503c\uff0c\u4ecd\u7136\u53ea\u9700\u8981\u505a 2-SAT\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log V)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\tfor(;(c<'0'||c>'9');c=getchar()){if(c=='-')f=-1;}\n\tfor(;(c>='0'&&c<='9');c=getchar())x=x*10+(c&15);\n\treturn x*f;\n}\n\nconst int mod=1e9+7;\nint ksm(int x,int y,int p=mod){\n\tint ans=1;\n\tfor(int i=y;i;i>>=1,x=1ll*x*x%p)if(i&1)ans=1ll*ans*x%p;\n\treturn ans%p;\n}\nint inv(int x,int p=mod){return ksm(x,p-2,p)%p;}\nint randint(int l,int r){return rand()*rand()%(r-l+1)+l;}\nvoid add(int &x,int v){x+=v;if(x>=mod)x-=mod;}\nvoid Mod(int &x){if(x>=mod)x-=mod;}\n\nconst int N=3e5+5;\n\n#define fi first\n#define se second\n#define mk make_pair\n\nint ncnt=1;\n\nnamespace sat{\n\tvector<int>G[N];\n\tint scc[N],dfn[N],low[N],dfc,stk[N],top,sc,n=0;\n\tbool ins[N];\n\tvector<pair<int,int> >E[2];\n\t\n\tvoid adde(int c,int x,int y){\n\t\tE[c].emplace_back(mk(x,y));\n\t}\n\tvoid tarjan(int u){\n\t\tdfn[u]=low[u]=++dfc,stk[++top]=u,ins[u]=1;\n\t\tfor(int v:G[u]){\n\t\t\tif(!dfn[v])tarjan(v),low[u]=min(low[u],low[v]);\n\t\t\telse if(ins[v])low[u]=min(low[u],dfn[v]);\n\t\t}\n\t\tif(low[u]!=dfn[u])return ;\n\t\tscc[u]=++sc;ins[u]=0;\n\t\twhile(stk[top]!=u)scc[stk[top]]=sc,ins[stk[top]]=0,top--;\n\t\tassert(stk[top]==u);top--;\n\t}\n\tqueue<int>q;int c[N],ind[N];\n\tbool topo(){\n\t\tint tot=0;\n\t\tfor(int i=1;i<=sc;i++)if(ind[i]==0)q.push(i);\n\t\twhile(q.size()){\n\t\t\tint x=q.front();q.pop(),c[x]=++tot;\n\t\t\tfor(int v:G[x])if(--ind[v]==0)q.push(v);\n\t\t}\n\t\treturn tot==sc;\n\t}\n\t\n\tvoid work(){\n\t\tn=ncnt;\n\t\tmemset(c,0,sizeof(c)),memset(ind,0,sizeof(ind)),memset(scc,0,sizeof(scc));\n\t\tfor(int I=0;I<=1;I++)for(auto e:E[I])G[e.fi].emplace_back(e.se);\n\t\tfor(int i=1;i<=n;i++)if(!dfn[i])tarjan(i);\n\t\tfor(int i=1;i<=n;i++)G[i].clear();\n\t\tfor(int I=0;I<=1;I++)for(auto e:E[I]){//orz EI\n\t\t\tint u=e.fi,v=e.se;\n\t\t\tif(scc[u]==scc[v])continue;\n\t\t\tG[scc[u]].emplace_back(scc[v]),ind[scc[v]]++;\n\t\t}\n\t\tif(!topo()){puts(\">_<\");exit(0);}\n\t\t\n\t\tfor(int i=1;i<=sc;i++)G[i].clear();\n\t\tE[1].clear(),sc=0,n=0,top=0,memset(dfn,0,sizeof(dfn)),memset(ins,0,sizeof(ins));\n\t\tmemset(low,0,sizeof(low)),memset(stk,0,sizeof(stk));\n\t}\n};\n\nusing sat::c;\n\nstruct Edge{\n\tint to,id;\n\tEdge(int T,int I):to(T),id(I){}\n\tEdge(){}\n};\nvector<Edge>G[N];\nvector<int>V;\nint n,m,st[N],ed[N],cost[N],col[N];\nint val[N];\n\nvector<int>cur;\nbool vis[N];\nvoid dfs(int u,int fa){\n\tif(vis[u])return ;\n\tvis[u]=1;\n\tfor(auto e:G[u]){\n\t\tint v=e.to,i=e.id;\n\t\tif(i==fa)continue;\n\t\tcur.emplace_back(i);dfs(v,i);\n\t}\n}\n\nint deg[N],ntot;\n\nvoid findcomp(){\n\tfor(int x:V){\n\t\tif(deg[x]!=1||vis[x])continue;\n\t\tdfs(x,-1);int c=0;\n\t\tfor(int i:cur)val[i]=ncnt+1+c,c^=1;\n\t\tncnt+=2,ntot++,cur.clear();\n\t}\n\tfor(int x:V){\n\t\tif(vis[x])continue;\n\t\tdfs(x,-1);int c=0;\n\t\tcur.resize(cur.size()-1);\n\t\tif(cur.size()%2!=0){puts(\"No\");exit(0);}\n\t\tfor(int i:cur)val[i]=ncnt+1+c,c^=1;\n\t\tncnt+=2,ntot++,cur.clear();\n\t}\n}\n\nvector<int>E[N];\nvoid prework(int c){\n\tfor(int i:E[c]){\n\t\tG[st[i]].emplace_back(Edge(ed[i],i)),G[ed[i]].emplace_back(Edge(st[i],i));\n\t\tdeg[st[i]]++,deg[ed[i]]++,V.emplace_back(st[i]),V.emplace_back(ed[i]);\n\t}\n\tsort(V.begin(),V.end());V.resize(unique(V.begin(),V.end())-V.begin());\n\tfor(int x:V)if(deg[x]>2){puts(\"No\");exit(0);}\n\tfindcomp();\n\tfor(int x:V)G[x].clear(),deg[x]=0,vis[x]=0;\n\tV.clear();\n}\n\nvector<int>M;\nint pre[N],suf[N];\nvoid addMutex(){\n\tif(M.size()<=1)return ;\n\tpre[0]=(M[0]^1);\n\tfor(int i=1;i<M.size();i++)pre[i]=++ncnt,sat::adde(0,pre[i],pre[i-1]),sat::adde(0,pre[i],M[i]^1);\n\tsuf[M.size()-1]=(M[M.size()-1]^1);\n\tfor(int i=M.size()-2;i>=0;i--)suf[i]=++ncnt,sat::adde(0,suf[i],suf[i+1]),sat::adde(0,suf[i],M[i]^1);\n\tfor(int i=0;i<M.size();i++){\n\t\tif(i>0)sat::adde(0,M[i],pre[i-1]);\n\t\tif(i+1<M.size())sat::adde(0,M[i],suf[i+1]);\n\t}\n}\n\nvoid buildsat(){\n\tfor(int x=1;x<=n;x++){\n\t\tfor(auto e:G[x])M.emplace_back(val[e.id]);\n\t\taddMutex();M.clear();\n\t}\n}\n\nusing sat::scc;\n\nint res[N],Ans=1;\n#define tr(x) ((x)*2)\n#define fs(x) ((x)*2+1)\nvoid calc(int v){\n\tAns=1;\n\tfor(int i=1;i<=m;i++){\n\t\tif(cost[i]<=v)continue;\n\t\tsat::adde(1,val[i],val[i]^1);\n\t}\n\tsat::work();\n\tfor(int i=1;i<=ntot;i++){\n\t\tif(scc[tr(i)]==scc[fs(i)])return Ans=-1,void();\n\t\telse if(c[scc[tr(i)]]>c[scc[fs(i)]])res[tr(i)]=1,res[fs(i)]=0;\n\t\telse res[tr(i)]=0,res[fs(i)]=1;\n\t}\n}\n\nstruct Lsh{\n\tvector<int>lsh;\n\tvoid clr(){lsh.clear();}\n\tvoid ins(int x){lsh.emplace_back(x);}\n\tint work(){\n\t\tsort(lsh.begin(),lsh.end());\n\t\tint len=unique(lsh.begin(),lsh.end())-lsh.begin();\n\t\tlsh.resize(len);return len;\n\t}\n\tint getv(int x){return lower_bound(lsh.begin(),lsh.end(),x)-lsh.begin()+1;}\n\tint actv(int x){return x==0?0:lsh[x-1];}\n}L1,L2;\n\nvector<int>vec;\n\nsigned main(void){\n\n#ifdef YUNQIAN\n\tfreopen(\"in.in\",\"r\",stdin);\n\tfreopen(\"out.out\",\"w\",stdout);\n#endif\n\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)st[i]=read(),ed[i]=read(),col[i]=read(),cost[i]=read(),L1.ins(col[i]),L2.ins(cost[i]);\n\tint C=L1.work(),V=L2.work();\n\tfor(int i=1;i<=m;i++)col[i]=L1.getv(col[i]),cost[i]=L2.getv(cost[i]);\n\t\n\tfor(int i=1;i<=m;i++)E[col[i]].emplace_back(i);\n\tfor(int i=1;i<=C;i++)prework(i);\n\t\n\tfor(int i=1;i<=m;i++)G[st[i]].emplace_back(Edge(114,i)),G[ed[i]].emplace_back(Edge(514,i));\n\tbuildsat();\n\n\tcalc(V);\n\tif(Ans==-1)return puts(\"No\"),0;\n\t\n\tint L=0,R=V,ans=0;\n\twhile(L<=R){\n\t\tint mid=(L+R)>>1;\n\t\tcalc(mid);\n\t\tif(Ans==-1)L=mid+1;\n\t\telse R=mid-1,ans=mid;\n\t}\n\t\n\tcalc(ans);\n\tputs(\"Yes\");\n\tfor(int i=1;i<=m;i++){\n\t\tif(res[val[i]])vec.emplace_back(i);\n\t}\n\tcout<<L2.actv(ans)<<\" \"<<vec.size()<<endl;\n\tfor(int x:vec)cout<<x<<\" \";puts(\"\");\n\n\treturn 0;\n}\n```",
        "postTime": 1684747829,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "Duff in Mafia"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF587D)\n\n\u6bcf\u6761\u8fb9\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u5220\u6216\u4e0d\u5220\uff0c\u5e76\u4e14\u8003\u8651\u5230\u6bcf\u6761\u8fb9\u5220\u4e0e\u4e0d\u5220\u5bf9\u5176\u4ed6\u8fb9\u662f\u5426\u5220\u8fb9\u7684\u60c5\u51b5\u6709\u4e00\u5b9a\u903b\u8f91\u5173\u7cfb\uff0c\u8003\u8651 2-SAT\u3002\n\n\u53c8\u770b\u5230\u8981\u6c42\u6700\u5927\u503c\u6700\u5c0f\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\n\u5efa\u56fe\u7684\u601d\u8def\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u9876\u70b9 $u$\uff0c\u5305\u542b\u8fd9\u4e2a\u7aef\u70b9\u7684\u8fde\u8fb9\u4e3a $u_i$\uff0c$u_{i,1}$ \u4ee3\u8868\u8fb9 $u_i$ \u5220\u53bb\uff0c$u_{i,0}$ \u4ee3\u8868\u8fb9 $u_i$ \u4e0d\u5220\u3002\n\n- \u679a\u4e3e\u6bcf\u4e2a\u7aef\u70b9\u4e0a\u7684\u82e5\u5e72\u6761\u8fb9\uff0c\u82e5\u67d0\u6761\u5220\uff0c\u5219\u5305\u542b\u8fd9\u4e2a\u7aef\u70b9\u7684\u5176\u4ed6\u8fb9\u4e00\u5b9a\u4e0d\u5220\u3002\u5bf9\u5e94\u5230\u8fde\u8fb9\uff0c\u5373\u4e3a\uff1a$u_{i,1} \\longrightarrow \\sum_{j\\ne i }^{} u_{j,0}$ \u3002\n\n- \u679a\u4e3e\u6bcf\u4e2a\u7aef\u70b9\u4e0a\u7684\u82e5\u5e72\u6761\u8fb9\uff0c\u82e5\u67d0\u6761\u4e0d\u5220\uff0c\u5219\u5305\u542b\u8fd9\u4e2a\u7aef\u70b9\u7684\u5176\u4ed6\u4e0e\u5176\u989c\u8272\u76f8\u540c\u8fb9\u4e00\u5b9a\u5220\u3002\u5bf9\u5e94\u5230\u8fde\u8fb9\uff0c\u5373\u4e3a\uff1a$u_{i,0} \\longrightarrow \\sum_{j\\ne i ,color_j=color_i }^{} u_{j,1}$ \u3002\n\n- \u82e5\u679a\u4e3e\u5230\u7684\u8fd9\u6761\u8fb9\u8fb9\u6743\u5927\u4e8e\u6211\u4eec\u4e8c\u5206\u5230\u7684\u7b54\u6848\u503c\uff0c\u5219\u4e00\u5b9a\u4e0d\u5220\u3002\u5373\u4e3a $u_{i,1} \\longrightarrow u_{i,0}$\u3002\n\n\u4f46\u8fd9\u6837\u663e\u7136\u8d85\u65f6\uff0c\u56e0\u4e3a\u8003\u8651\u5230\u60c5\u51b5\u4e00\u9664\u4e86\u679a\u4e3e\u5230\u7684\u8fb9\u4ee5\u5916\u90fd\u8981\u8fde\u8fb9\uff0c\u4e00\u6b21\u6b21\u7684\u8fde\u7684\u8bdd\u4f1a\u4ea7\u751f\u5927\u91cf\u6d6a\u8d39\uff0c\u4e8e\u662f\u8003\u8651\u524d\u540e\u7f00\u4f18\u5316\u5efa\u56fe\uff0c\u5efa\u56fe\u65b9\u6cd5\u4e0e[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P6378)\u7c7b\u4f3c\u3002\n\n\u6700\u540e\u5224\u65ad\u5927\u4e8e\u4e8c\u5206\u7b54\u6848\u503c\u7684\u8fb9\u4e0d\u5220\u7684\u60c5\u51b5\u4e0b\u6709\u65e0\u89e3\u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u662f\u65e0\u89e3\u7684\u60c5\u51b5\uff1a\u82e5\u4e00\u4e2a\u7aef\u70b9\u8fde\u63a5\u7684\u76f8\u540c\u989c\u8272\u8fb9\u5927\u4e8e\u7b49\u4e8e\u4e09\u6761\uff0c\u5373\u4e3a\u65e0\u89e3\uff0c\u539f\u56e0\u663e\u7136\u3002",
        "postTime": 1684742883,
        "uid": 774862,
        "name": "Tsinghua_pwtking",
        "ccfLevel": 0,
        "title": "Duff in Mafia \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/16323630.html)\n\n\u9664 $\\verb!riddle!$ \u5916\u7684\u53e6\u4e00\u9053\u524d\u540e\u7f00\u4f18\u5316\u5efa\u56fe\u9898qwq\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8fb9\u6709\u989c\u8272\u548c\u8fb9\u6743\u3002\u4f60\u8981\u4ece\u4e2d\u5220\u53bb\u4e00\u4e9b\u8fb9\uff0c\u6ee1\u8db3\uff1a\n\n> 1. \u4efb\u610f\u4e24\u6761\u5220\u6389\u7684\u8fb9\u6ca1\u6709\u516c\u5171\u7684\u9876\u70b9\u3002\n> \n> 2. \u4efb\u610f\u4e24\u6761\u5269\u4f59\u7684\u3001\u989c\u8272\u76f8\u540c\u7684\u8fb9\u6ca1\u6709\u516c\u5171\u7684\u9876\u70b9\u3002\n>\n> 3. \u5220\u53bb\u7684\u8fb9\u7684\u8fb9\u6743\u6700\u5927\u503c\u6700\u5c0f\u3002\n\n\u6c42\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c\uff0c\u5e76\u8f93\u51fa\u65b9\u6848\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u901a\u8fc7\u201c\u6700\u5927\u503c\u6700\u5c0f\u201d\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6c42\u89e3\uff0c\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a\u503c $mid$\uff0c\u8fd9\u4e2a $mid$ \u5c31\u662f\u5f53\u524d\u6211\u4eec\u8ba4\u4e3a\u7684\u5220\u53bb\u8fb9\u6743\u4e2d\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u53ea\u80fd\u5220\u53bb\u8fb9\u6743\u5c0f\u4e8e\u7b49\u4e8e $mid$ \u7684\u8fb9\u3002\n\n\u5982\u679c\u6211\u4eec\u5220\u4e86\u4e00\u4e9b\u8fb9\uff0c\u90a3\u4e48\u8ddf\u8fd9\u6761\u8fb9\u6709\u516c\u5171\u9876\u70b9\u7684\u8fb9\u90fd\u4e0d\u80fd\u5220\u3002\u8fd9\u542f\u53d1\u6211\u4eec\u4f7f\u7528 $\\rm 2-SAT$ \u6c42\u89e3\u3002\n\n\u4e3a\u65b9\u4fbf\u8868\u793a\uff0c\u6211\u4eec\u7528 $x_i$ \u8868\u793a\u5220\u7b2c $i$ \u6761\u8fb9\uff0c$x_i'$ \u8868\u793a\u4e0d\u5220\u7b2c $i$ \u6761\u8fb9\u3002\n\n\u4e0d\u59a8\u5148\u8003\u8651\u66b4\u529b\u7b97\u6cd5\uff1a\n\n\u5982\u679c\u7b2c $i$ \u6761\u8fb9\u7684\u6743\u503c\u5927\u4e8e $mid$ \u4e86\uff0c\u90a3\u8bf4\u660e\u8fd9\u6761\u8fb9\u80af\u5b9a\u4e0d\u80fd\u8fde\uff0c\u6211\u4eec\u8fde\u8fb9 $<x_i,x_i'>$\u3002\u5728\u8fd9\u4e9b\u8fb9\u4e2d\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $v$\uff0c\u5b83\u5728\u65e0\u5411\u56fe\u4e2d\u8fde\u51fa $x_1,x_2,\\cdots,x_k$ \uff08\u8fd9\u4e9b\u8fb9\u90fd\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c**\u5e76\u4e14\u8fd9\u4e9b\u8fb9\u7684\u989c\u8272\u90fd\u76f8\u540c**\uff09\uff0c\u8fde\u8fb9 $<x_i',x_j>,<x_j',x_i>$\u3002\n\n\u5220\u9664\u7684\u8fb9\u4e2d\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u5b83\u5728\u65e0\u5411\u56fe\u4e2d\u8fde\u51fa $x_1,x_2\\cdots,x_l$ \uff08\u8fd9\u4e9b\u8fb9\u90fd\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff09\uff0c\u8fde\u8fb9 $<x_i,x_j'>,<x_j,x_i'>$\uff0c\u8868\u793a\u8fde $x_i$ \u5c31\u4e0d\u80fd\u8fde\u5176\u4ed6\u8fb9\u4e86\u3002\n\n\u60ca\u5947\u7684\u53d1\u73b0\u8fd9\u6837\u5b50\u590d\u6742\u5ea6\u662f $\\mathcal{O(m^2)}$ \u7684\uff0c\u7136\u540e\u5c31\u8981\u7528\u5230\u524d\u540e\u7f00\u4f18\u5316\u5efa\u56fe\u4e86\u3002\n\n------\n\n\u6309\u7167\u524d\u9762\u7684\u7b97\u6cd5\u8fde\u51fa\u7684\u56fe\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/n65rzuip.png)\n\n\u6211\u4eec\u53d1\u73b0\u8fde\u7684\u8fb9\u592a\u591a\u4e86\uff0c\u6bcf\u65b0\u52a0\u4e00\u4e2a\u70b9\u5c31\u4f1a\u518d\u8fde\u51e0\u6761\u8fb9\uff0c\u6211\u4eec\u8981\u627e\u5230\u4e00\u79cd\u8fde\u8fb9\u603b\u6570\u66f4\u5c11\u7684\u5efa\u56fe\u65b9\u5f0f\u3002\n\n\u5f15\u5165\u201c\u524d\u540e\u7f00\u4f18\u5316\u5efa\u56fe\u201d\u2014\u2014\n\n\u6211\u4eec\u8fde\u8fb9\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\uff0c\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fc1gq9sk.png)\n\n\u663e\u7136 $9\\to 15$ \u7b49\u4ef7\u4e8e $9\\to 10\\to 15$\uff0c\u800c\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u53ea\u8981\u5c06\u7b2c\u4e8c\u5c42\u548c\u7b2c\u4e09\u5c42\u6bcf\u4e00\u5c42\u7684\u6bcf\u4e2a\u8282\u70b9\u4e4b\u95f4\u90fd\u4e92\u76f8\u8fde\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u518d\u7a0d\u7a0d\u4f18\u5316\u4e0b\u5f97\u5230\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ascjjxrm.png)\n\n\uff08\u4e0a\u56fe\u4e2d\u7684 $n$ \u6539\u4e3a $m$\uff09\n\n\u8fd9\u6837\uff0c\u5982\u679c\u6211\u4eec\u8981\u65b0\u52a0\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u76f4\u63a5\u8fde\u8fd9\u4e2a\u70b9\u5728\u201c\u524d\u7f00\u5c42\u201d\u4e2d\u7684\u524d\u4e00\u4e2a\u70b9\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u70b9\u5728\u201c\u540e\u7f00\u5c42\u201d\u4e2d\u7684\u540e\u4e00\u4e2a\u70b9\uff0c\u8fd9\u548c\u4e4b\u524d\u7684\u66b4\u529b\u8fde\u8fb9\u662f\u7b49\u6548\u7684\u3002\n\n# \u4ee3\u7801\n\n\u53e3\u80e1\u8d77\u6765\u4f3c\u4e4e\u5f88\u7b80\u5355\uff1f\u4f46\u6211\u8fd8\u662f\u8c03\u4e86 $2h+$/kk\n\n```cpp\n// Problem: CF587D Duff in Mafia\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF587D\n// Memory Limit: 250 MB\n// Time Limit: 6000 ms\n// Date:2022-05-29 08:03\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <cmath>\n#include <stack>\n#include <vector>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getchar();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getchar();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline double double_read() {\n\t\tlong long ret = 0,w = 1,aft = 0,dot = 0,num = 0;\n\t\tchar ch = getchar();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif (ch == '-') w = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch) || ch == '.') {\n\t\t\tif (ch == '.') {\n\t\t\t\tdot = 1;\n\t\t\t} else if (dot == 0) {\n\t\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\t} else {\n\t\t\t\taft = (aft << 3) + (aft << 1) + ch - '0';\n\t\t\t\tnum ++;\n\t\t\t}\n\t\t\tch = getchar();\n\t\t}\n\t\treturn (pow(0.1,num) * aft + ret) * w;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int N = 5e4 + 5;\nstruct Edges {\n\tint u,v,col,w,id;\n} edges[N];\nstruct Graph {\n\tint v,nxt;\n} gra[N * 25];\nint a[N],head[N * 10],dfn[N * 10],low[N * 10],col[N * 10],pre[N],suc[N],print[N];\nbool in_stack[N * 10];\nstd::stack<int>st;\nstd::vector<int>G[N];\n//G[i]:\u8bb0\u5f55\u4e0e i \u76f8\u8fde\u7684\u8fb9\u7684\u7f16\u53f7 \nint n,m,idx,num,cnt;\ninline bool cmp1(Edges x,Edges y) {\n\treturn x.w < y.w;\n}\ninline bool cmp2(int x,int y) {\n\treturn edges[x].col < edges[y].col;\n}\ninline void add(int u,int v) {\n\tgra[++ idx] = (Graph){v,head[u]},head[u] = idx;\n}\ninline void tarjan(int now) {\n\tdfn[now] = low[now] = ++ num,in_stack[now] = true;\n\tst.push(now);\n\tfor (register int i = head[now];i;i = gra[i].nxt) {\n\t\tint v = gra[i].v;\n\t\tif (!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[now] = std::min(low[now],low[v]);\n\t\t} else if (in_stack[v]) {\n\t\t\tlow[now] = std::min(low[now],dfn[v]);\n\t\t}\n\t}\n\tif (dfn[now] == low[now]) {\n\t\tcnt ++;\n\t\tint u;\n\t\tdo {\n\t\t\tu = st.top();st.pop();\n\t\t\tin_stack[u] = false,col[u] = cnt;\n\t\t} while (u != now);\n\t}\n}\ninline void init() {\n\tidx = num = cnt = 0;\n\twhile (!st.empty()) st.pop();\n\tmst(head,0),mst(gra,0),mst(dfn,0),mst(low,0),mst(col,0),mst(in_stack,false);\n}\ninline bool check(int now) {\n\tinit();\n\tfor (register int i = now + 1;i <= m; ++ i) add(i,i + m);\n\tint num_idx = 2 * m;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tint num_ver = 0;\n\t\tfor (auto &item : G[i]) a[++ num_ver] = item;\n\t\tstd::sort(a + 1,a + num_ver + 1,cmp2);\n\t\tfor (register int j = 1;j <= num_ver; ++ j) pre[j] = ++ num_idx,suc[j] = ++ num_idx;\n\t\tfor (register int j = 1;j <= num_ver; ++ j) {\n\t\t\tadd(a[j],pre[j]),add(suc[j],a[j] + m);\n\t\t}\n\t\tfor (register int j = 2;j <= num_ver; ++ j) {\n\t\t\tadd(pre[j - 1],pre[j]),add(suc[j],suc[j - 1]);\n\t\t\tadd(pre[j - 1],a[j] + m),add(a[j],suc[j - 1]);\n\t\t}\n\t\tfor (register int j = 1;j <= num_ver; ++ j) {\n\t\t\tpre[j] = ++ num_idx,suc[j] = ++ num_idx;\n\t\t}\n\t\tint r;\n\t\tfor (register int j = 1;j <= num_ver;j = r + 1) {\n\t\t\tr = j;\n\t\t\twhile (r < num_ver && edges[a[j]].col == edges[a[r + 1]].col) r ++;\n\t\t\tfor (register int k = j;k <= r; ++ k) {\n\t\t\t\tadd(pre[k],a[k]),add(a[k] + m,suc[k]);\n\t\t\t}\n\t\t\tfor (register int k = j + 1;k <= r; ++ k) {\n\t\t\t\tadd(a[k] + m,pre[k - 1]),add(suc[k - 1],a[k]);\n\t\t\t\tadd(pre[k],pre[k - 1]),add(suc[k - 1],suc[k]); \n\t\t\t}\n\t\t}\n\t}\n\tfor (register int i = 1;i <= num_idx; ++ i) {\n\t\tif (!dfn[i]) {\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tif (col[i] == col[i + m]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nint main(void) {\n\tn = read(),m = read();\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tedges[i].u = read(),edges[i].v = read(),edges[i].col = read(),edges[i].w = read();\n\t\tedges[i].id = i;\n\t}\n\tstd::sort(edges + 1,edges + m + 1,cmp1);\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tG[edges[i].u].push_back(i),G[edges[i].v].push_back(i);\n\t}\n\tint l = 0,r = m,ans = -1;\n\twhile (l <= r) {\n\t\tint mid = l + r >> 1;\n\t\tif (check(mid) == true) r = mid - 1,ans = mid;\n\t\telse l = mid + 1;\n\t}\n\tif (ans == -1) {\n\t\tputs(\"No\");\n\t} else {\n\t\tputs(\"Yes\");\n\t\tcheck(ans);\n\t\tint asks = 0;\n\t\tfor (register int i = 1;i <= m; ++ i) {\n\t\t\tif (col[i] < col[i + m]) {\n\t\t\t\tprint[++ asks] = edges[i].id;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",edges[ans].w,asks);\n\t\tfor (register int i = 1;i <= asks; ++ i) printf(\"%d \",print[i]);\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1653783592,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "CF587D Duff in Mafia"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/587/problem/D) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF587D)\n\n2-SAT hot tea\u3002\n\n\u9996\u5148\u4e00\u773c\u4e8c\u5206\u7b54\u6848\uff0c\u6211\u4eec\u4e8c\u5206\u7b54\u6848 $mid$\uff0c\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6240\u6709\u8fb9\u6743\u90fd $\\le mid$ \u7684\u96c6\u5408 $S$\uff0c\u6ee1\u8db3 $S$\u200b \u4e2d\u4efb\u610f\u4e24\u6761\u8fb9\u7684\u7aef\u70b9\u4e92\u4e0d\u76f8\u540c\uff0c\u5e76\u4e14\u6ca1\u6709\u9009\u62e9\u7684\u9009\u62e9\u7684\u8fb9\u6bcf\u79cd\u989c\u8272\u7684\u8fb9\u4e24\u4e24\u4e4b\u95f4\u7684\u7aef\u70b9\u4e5f\u4e92\u4e0d\u76f8\u540c\u3002\n\n\u4e4d\u4e00\u770b\u8fd9\u4e2a\u95ee\u9898\u770b\u4f3c\u65e0\u6cd5\u89e3\u51b3\u3002\u4f46\u4e0d\u96be\u53d1\u73b0\u6bcf\u6761\u8fb9\u53ea\u6709\u4e24\u79cd\u72b6\u6001\u2014\u2014\u9009\u6216\u4e0d\u9009\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u6761\u8fb9\u62c6\u6210\u4e24\u4e2a\u70b9 $x_i$\u200b \u548c $\\lnot x_i$\u200b\uff0c\u5206\u522b\u8868\u793a\u8fb9 $i$\u200b \u88ab\u9009\u5165\u96c6\u5408 $S$\u200b \u4e2d\u548c\u8fb9 $i$\u200b \u6ca1\u6709\u88ab\u9009\u5165\u96c6\u5408 $S$ \u7136\u540e\u8dd1 2-SAT\u200b\uff0c\u90a3\u4e48\u8003\u8651\u8fd9\u6837\u5efa\u56fe\uff1a\n\n- \u5bf9\u4e8e\u6743\u503c $>mid$\u200b \u7684\u8fb9\u6211\u4eec\u8fde\u4e00\u6761 $x_i\\to\\lnot x_i$ \u7684\u8fb9\uff0c\u8fd9\u6837\u53ea\u8981\u9009\u62e9\u4e86 $x_i$ \u5c31\u5fc5\u5b9a\u4f1a\u63a8\u51fa $\\lnot x_i$ \u4e5f\u4e3a\u771f\uff0c\u4e5f\u5c31\u5bfc\u81f4\u4e86\u77db\u76fe\uff0c\u56e0\u6b64\u8fd9\u6837\u8fde\u8fb9\u5c31\u5f3a\u5236\u8981\u6c42 $\\lnot x_i$ \u5fc5\u987b\u4e3a\u771f\u3002\n- \u5bf9\u4e8e\u4e24\u6761\u6709\u516c\u5171\u7aef\u70b9\u7684\u8fb9 $i,j$\uff0c\u5982\u679c\u5b83\u4eec\u540c\u65f6\u88ab\u7eb3\u5165\u96c6\u5408 $S$ \u4e2d\u5c31\u4f1a\u5bfc\u81f4 $S$ \u4e2d\u7684\u8fb9\u6784\u4e0d\u6210\u5339\u914d\uff0c\u56e0\u6b64\u5982\u679c $x_i$ \u4e3a\u771f\u5fc5\u7136\u53ef\u4ee5\u63a8\u51fa $\\lnot x_j$ \u4e3a\u771f\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u8fde\u8fb9 $x_i\\to\\lnot x_j$\uff0c\u540c\u7406\u9006\u5426\u547d\u9898 $x_j\\to\\lnot x_i$\u3002\n- \u7c7b\u4f3c\u5730\uff0c\u5bf9\u4e8e\u4e24\u6761\u6709\u516c\u5171\u7aef\u70b9\u4e14\u989c\u8272\u76f8\u540c\u7684\u8fb9 $i,j$\uff0c\u5982\u679c\u5b83\u4eec\u540c\u65f6\u4e0d\u9009\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6ca1\u9009\u5165 $S$ \u7684\u8fb9\u4e0d\u5408\u6cd5\uff0c\u56e0\u6b64\u6211\u4eec\u8fde\u8fb9 $\\lnot x_i\\to x_j,\\lnot x_j\\to x_i$\n\n\u8fd9\u6837\u66b4\u529b\u8fde\u8fb9\u590d\u6742\u5ea6\u662f $\\mathcal O(m^2)$ \u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\uff0c\u8003\u8651\u4f18\u5316\u3002\u4ee5\u7b2c\u4e8c\u7c7b\u8fb9\u4e3a\u4f8b\uff0c\u6211\u4eec\u8003\u8651\u679a\u4e3e\u4e24\u6761\u8fb9\u7684\u516c\u5171\u70b9 $i$\u200b\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5c06\u6240\u6709\u4e0e $i$ \u76f8\u8fde\u7684\u8fb9\u6392\u6210\u4e00\u5217\uff0c\u8bbe\u4e3a $e_1,e_2,\\cdots,e_k$\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5bf9\u4e8e\u6240\u6709 $1\\le p,q\\le k,p\\ne q$\uff0c\u8fde\u8fb9 $x_p\\to\\lnot x_q$\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u53ef\u4ee5\u7528\u524d\u540e\u7f00\u4f18\u5316\u5efa\u56fe\u4f18\u5316\uff0c\u5177\u4f53\u4f18\u5316\u65b9\u6848\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8m11crwn.png)\n\n\u5bf9\u4e8e\u7b2c\u4e09\u7c7b\u8fb9\u4e5f\u6309\u7167\u540c\u6837\u65b9\u5f0f\u4f18\u5316\u4e00\u4e0b\u5373\u53ef\u3002\u8fd9\u6837\u8fb9\u6570\u5373\u53ef\u964d\u5230 $\\mathcal O(m)$ \u7ea7\u522b\u3002\u7136\u540e\u8dd1 tarjan\uff0c\u5982\u679c\u53d1\u73b0 $\\exists i$\uff0c$x_i$ \u4e0e $\\lnot x_i$ \u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u8bf4\u660e $mid$ \u4e0d\u5408\u6cd5\uff0c\u5426\u5219\u7531\u4e8e tarjan \u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\u6309\u7167\u7f29\u70b9\u540e\u62d3\u6251\u5e8f\uff0c\u53ef\u901a\u8fc7 $x_i$ \u4e0e $\\lnot x_i$ \u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u5927\u5c0f\u5173\u7cfb\u5224\u65ad $i$ \u662f\u5426\u88ab\u9009\u5165\u96c6\u5408 $S$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((n+m)\\log n)$\uff0c\u4e3a\u4e86\u51cf\u5c11\u5e38\u6570\u53ef\u5148\u628a\u4e8c\u3001\u4e09\u7c7b\u8fb9\u5efa\u51fa\u6765\u5e76\u4fdd\u5b58\u4e00\u4e2a\u5907\u4efd\uff0c\u8fd9\u6837\u6bcf\u6b21 `check` \u65f6\u53ea\u9700\u5efa\u4e00\u7c7b\u8fb9\u5373\u53ef\uff0c\u4e0d\u5fc5\u6bcf\u6b21\u4e8c\u5206\u90fd\u628a\u6574\u5f20\u56fe\u91cd\u65b0\u5efa\u51fa\u6765\u3002\n\n```cpp\nconst int MAXN=5e4;\nconst int MAXM=5e4;\nconst int MAXV=5e5;\nconst int MAXE=2e6;\nint n,m,mx,ncnt=0;\nstruct edge{int u,v,c,t;} e[MAXM+5];\nvector<int> g[MAXN+5];\nvector<pii> col[MAXN+5];\nint hd[MAXV+5],to[MAXE+5],nxt[MAXE+5],ec=0;\nint _hd[MAXV+5],_ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint dfn[MAXV+5],low[MAXV+5],stk[MAXV+5],tp=0;\nint bel[MAXV+5],cmp=0,tim=0;bool vis[MAXV+5];\nvoid tarjan(int x){\n\tdfn[x]=low[x]=++tim;stk[++tp]=x;vis[x]=1;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];\n\t\tif(!dfn[y]) tarjan(y),chkmin(low[x],low[y]);\n\t\telse if(vis[y]) chkmin(low[x],dfn[y]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tint o;cmp++;do{\n\t\t\to=stk[tp--];bel[o]=cmp;vis[o]=0;\n\t\t} while(o^x);\n\t}\n}\nbool check(int mid){\n\tfor(int i=1;i<=ncnt;i++) hd[i]=_hd[i];ec=_ec;\n\tmemset(dfn,0,sizeof(dfn));memset(low,0,sizeof(low));tim=cmp=tp=0;\n\tfor(int i=1;i<=m;i++) if(e[i].t>mid) adde(i,i+m);\n\tfor(int i=1;i<=ncnt;i++) (!dfn[i]&&(tarjan(i),0));\n\tfor(int i=1;i<=m;i++) if(bel[i]==bel[i+m]) return 0;\n\treturn 1;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d%d\",&e[i].u,&e[i].v,&e[i].c,&e[i].t);\n\t\tchkmax(mx,e[i].t);g[e[i].u].pb(i);g[e[i].v].pb(i);\n\t\tcol[e[i].u].pb(mp(e[i].c,i));col[e[i].v].pb(mp(e[i].c,i));\n\t} ncnt=m<<1;\n\tfor(int i=1;i<=n;i++) sort(col[i].begin(),col[i].end());\n\tfor(int i=1;i<=n;i++){\n\t\tvector<int> pre(g[i].size()),suf(g[i].size());\n\t\tfor(int j=0;j<pre.size();j++) pre[j]=++ncnt;\n\t\tfor(int j=0;j<suf.size();j++) suf[j]=++ncnt;\n\t\tfor(int j=1;j<pre.size();j++) adde(pre[j-1],pre[j]);\n\t\tfor(int j=1;j<suf.size();j++) adde(suf[j],suf[j-1]);\n\t\tfor(int j=0;j<pre.size();j++) adde(g[i][j],pre[j]);\n\t\tfor(int j=0;j<suf.size();j++) adde(suf[j],g[i][j]+m);\n\t\tfor(int j=1;j<pre.size();j++) adde(pre[j-1],g[i][j]+m),adde(g[i][j],suf[j-1]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int l=0,r;l<col[i].size();l=r){\n\t\t\tr=l;while(r<col[i].size()&&col[i][r].fi==col[i][l].fi) ++r;\n\t\t\tvector<int> pre(r-l),suf(r-l);\n\t\t\tfor(int j=0;j<pre.size();j++) pre[j]=++ncnt;\n\t\t\tfor(int j=0;j<suf.size();j++) suf[j]=++ncnt;\n\t\t\tfor(int j=1;j<pre.size();j++) adde(pre[j-1],pre[j]);\n\t\t\tfor(int j=1;j<suf.size();j++) adde(suf[j],suf[j-1]);\n\t\t\tfor(int j=0;j<pre.size();j++) adde(pre[j],col[i][j+l].se);\n\t\t\tfor(int j=0;j<suf.size();j++) adde(col[i][j+l].se+m,suf[j]);\n\t\t\tfor(int j=1;j<pre.size();j++) adde(col[i][j-1+l].se+m,pre[j]),adde(suf[j],col[i][j-1+l].se);\n\t\t}\n\t}\n\tfor(int i=1;i<=ncnt;i++) _hd[i]=hd[i];_ec=ec;\n\tint l=0,r=mx,p=-1;\n\twhile(l<=r){\n\t\tint mid=l+r>>1;\n\t\tif(check(mid)) p=mid,r=mid-1;\n\t\telse l=mid+1;\n\t} if(!~p) puts(\"No\");\n\telse{\n\t\tprintf(\"Yes\\n%d \",p);check(p);vector<int> vec;\n\t\tfor(int i=1;i<=m;i++) if(bel[i]<bel[i+m]) vec.pb(i);\n\t\tprintf(\"%d\\n\",vec.size());for(int x:vec) printf(\"%d \",x);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1628489568,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF587D Duff in Mafia"
    },
    {
        "content": "\u770b\u5230\u6700\u5c0f\u5316\u6700\u5927\uff0c\u8003\u8651\u4e8c\u5206\u3002\n\n\u5047\u8bbe\u4e8c\u5206\u51fa\u6765\u7684\u503c\u4e3a$mid$\u3002\n\n\u90a3\u4e48\u6743\u503c$>mid$\u7684\u8fb9\u662f\u4e0d\u80fd\u88ab\u9009\u62e9\u7684\uff0c\u800c$\\leq mid$\u7684\u8fb9\u662f\u53ef\u4ee5\u7684\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fb9\u4e4b\u95f4\u6709\u4e00\u4e9b\u7ea6\u675f\u5173\u7cfb\uff1a\u6709\u5171\u540c\u7aef\u70b9\u7684\u4e24\u6761\u8fb9\u4e0d\u80fd\u540c\u65f6\u88ab\u9009\uff0c\u6709\u5171\u540c\u7aef\u70b9\u4e14\u989c\u8272\u76f8\u540c\u7684\u4e24\u6761\u8fb9\u4e0d\u80fd\u540c\u65f6\u4e0d\u9009\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u7684\u7ea6\u675f\u6761\u4ef6\u5c31\u53ef\u4ee5\u75282-sat\u6765\u89e3\u51b3\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u76f4\u63a5\u6309\u7167\u4e0a\u9762\u7684\u5f62\u5f0f\u8fdb\u884c\u52a0\u8fb9\u7684\u8bdd\uff0c\u90a3\u4e48\u8fb9\u6570\u662f$O(m^2)$\u7684\uff0c\u5f88\u7206\u70b8\u3002\n\n\u4f46\u662f\u53c8\u53d1\u73b0\u8fd9\u6837\u7684\u8fde\u8fb9\u5173\u7cfb\u5b9e\u9645\u4e0a\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u201c\u5b8c\u5168\u56fe\u201d\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e00\u6bb5\u533a\u95f4\u800c\u8a00\uff0c\u4e24\u4e24\u4e4b\u95f4\u90fd\u6709\u4e00\u6837\u5f62\u5f0f\u7684\u8fb9\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u8003\u8651\u4e0d\u76f4\u63a5\u8fde\u8fb9\uff0c\u800c\u662f\u5efa\u4e00\u4e2a\u865a\u70b9\u95f4\u63a5\u8fde\u8fb9\uff0c\u628a\u5b83\u4eec\u6392\u6210\u4e00\u6392\u4e4b\u540e\u5efa\u4e0a\u4e0b\u5206\u522b\u5efa\u4e00\u4e2a\u70b9\u7528\u524d\u540e\u7f00\u4f18\u5316\u5efa\u56fe\u5373\u53ef\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u628a\u8fb9\u6570\u7684\u7ea7\u522b\u51cf\u5c11\u5230$O(m)$\uff0c\u5c31\u53ef\u4ee5\u7528tarjan\u7f29\u70b9\u76f4\u63a5\u505a\u4e86\u3002\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define maxn 50010\nusing namespace std;\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch-'0'<0||ch-'0'>9){if(ch=='-') f=-1;ch=getchar();}\n    while(ch-'0'>=0&&ch-'0'<=9){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n,m;\nstruct P{\n    int u,v,c,val,id;\n}e[maxn];\nvector<int>v[maxn];\nbool cmp(P a,P b)\n{\n    return a.val<b.val;\n}\nint a[maxn],top;\nbool cmpx(int x,int y)\n{\n    return e[x].c<e[y].c;\n}\nint up[maxn],down[maxn],cnt;\nint head[maxn*10],nxt[maxn*22],to[maxn*22],tot;\nvoid add(int u,int v)\n{\n    tot++;\n    nxt[tot]=head[u];\n    head[u]=tot;\n    to[tot]=v;\n}\nstack<int>s;\nint scc[maxn*10],dfn[maxn*10],low[maxn*10],cnt_scc,cntx,in[maxn*10];\nvoid tarjan(int u)\n{\n    dfn[u]=low[u]=++cntx;\n    s.push(u);in[u]=1;\n    for(int i=head[u];i;i=nxt[i])\n    {\n        int v=to[i];\n        if(!dfn[v])\n        {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(in[v])  low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u])\n    {\n        cnt_scc++;\n        int tmp=0;\n        while(tmp!=u)\n        {\n            tmp=s.top();s.pop();\n            scc[tmp]=cnt_scc;\n            in[tmp]=0;\n        }\n    }\n}\nbool check(int mid)\n{\n    tot=0;\n    memset(head,0,sizeof(head));\n    for(int i=mid+1;i<=m;i++)  add(i,i+m);\n    cnt=2*m;\n    for(int i=1;i<=n;i++)\n    {\n        top=0;\n        for(int j=0;j<v[i].size();j++)  a[++top]=v[i][j];\n        sort(a+1,a+top+1,cmpx);\n        for(int j=1;j<=top;j++)  up[j]=++cnt,down[j]=++cnt;\n        for(int j=1;j<=top;j++)\n        {\n            add(down[j],a[j]+m);add(a[j],up[j]);\n            if(j!=top)\n            {\n                add(up[j],up[j+1]);\n                add(down[j+1],down[j]);\n                add(up[j],a[j+1]+m);\n                add(a[j+1],down[j]);\n            }\n        }\n        for(int j=1;j<=top;j++)  up[j]=++cnt,down[j]=++cnt;\n        for(int j=1;j<=top;j++)\n        {\n            int R=j;\n            while(R<top&&e[a[R+1]].c==e[a[j]].c)  R++;\n            for(int k=j;k<=R;k++)\n            {\n                add(up[k],a[k]);add(a[k]+m,down[k]);\n                if(k!=R)\n                {\n                    add(down[k],a[k+1]);\n                    add(a[k+1]+m,up[k]);\n                    add(up[k+1],up[k]);\n                    add(down[k],down[k+1]);\n                }\n            }\n            j=R;\n        }\n    }\n    for(int i=1;i<=cnt;i++)  dfn[i]=0;\n    cntx=cnt_scc=0;\n    for(int i=1;i<=cnt;i++)\n      if(!dfn[i])  tarjan(i);\n    for(int i=1;i<=m;i++)\n      if(scc[i]==scc[i+m])  return false;\n    return true;\n}\nint ansx[maxn];\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=m;i++)  e[i].u=read(),e[i].v=read(),e[i].c=read(),e[i].val=read(),e[i].id=i;\n    sort(e+1,e+m+1,cmp);\n    for(int i=1;i<=m;i++)  v[e[i].u].push_back(i),v[e[i].v].push_back(i);\n    int l=0,r=m,pos=-1;\n    while(l<=r)\n    {\n        int mid=(l+r)/2;\n        if(check(mid))\n        {\n            pos=mid;\n            r=mid-1;\n        }\n        else l=mid+1;\n    }\n    if(pos==-1)\n    {\n        puts(\"No\");\n        return 0;\n    }\n    puts(\"Yes\");\n    int ans=0;\n    check(pos);\n    for(int i=1;i<=m;i++)\n    {\n        if(scc[i]<scc[i+m])  ansx[++ans]=e[i].id;\n    }\n    printf(\"%d %d\\n\",e[pos].val,ans);\n    for(int i=1;i<=ans;i++)  printf(\"%d \",ansx[i]);\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1581590362,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF587D \u3010Duff in Mafia\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF587D)\n\n## \u9898\u610f\n\n* \u5b9a\u4e49\u4e00\u4e2a\u5339\u914d\u8868\u793a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6700\u591a\u53ea\u8fde\u6709\u4e00\u6761\u8fb9\u7684\u56fe\uff1b\n* $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u989c\u8272 $c_i$ \u548c\u6743\u503c $t_i$\uff1b\n* \u9009\u51fa\u5176\u4e2d\u4e00\u4e9b\u8fb9\u4f7f\u5f97\u8fd9\u4e9b\u8fb9\u662f\u4e00\u4e2a\u5339\u914d\uff0c\u5176\u4f59\u7684\u8fb9\u4e2d\u540c\u79cd\u989c\u8272\u7684\u8fb9\u4e3a\u4e00\u4e2a\u5339\u914d\uff1b\n* \u5220\u8fb9\u7684\u603b\u4ee3\u4ef7\u4e3a\u5220\u9664\u7684\u6240\u6709\u8fb9\u4e2d\u6743\u503c\u6700\u5927\u7684\u4e00\u6761\u8fb9\u7684\u6743\u503c\uff1b\n* \u7ed9\u51fa\u4efb\u610f\u4e00\u79cd\u5220\u9664\u65b9\u6848\uff0c\u4f7f\u4ee3\u4ef7\u6700\u5c0f\u3002\n\n## \u9898\u89e3\n\n\u5f88\u660e\u663e\uff0c\u6709\u5408\u6cd5\u5220\u9664\u65b9\u6848\u7684\u56fe\u4e00\u5b9a\u6ee1\u8db3\uff1a\n\n* \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8981\u4e48\u4e0e\u5b83\u76f8\u8fde\u7684\u6240\u6709\u8fb9\u989c\u8272\u4e92\u5f02\uff1b\u8981\u4e48\u53ea\u6709\u4e00\u79cd\u989c\u8272\u51fa\u73b0\u8fc7\u4e24\u6b21\uff0c\u5176\u4f59\u989c\u8272\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u3002\n\n\u5c06\u4e0d\u5408\u6cd5\u60c5\u51b5\u6392\u9664\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u8003\u8651\uff1a\n\n1. \u82e5\u4e0e\u5b83\u76f8\u8fde\u7684\u6240\u6709\u8fb9\u989c\u8272\u4e92\u5f02\uff0c\u5219\u6ee1\u8db3\u4ece\u8fd9\u4e9b\u8fb9\u4e2d\u6700\u591a\u53ea\u80fd\u9009\u62e9\u4e00\u6761\uff0c\u5373\u82e5\u9009\u62e9\u67d0\u4e00\u6761\u8fb9\uff0c\u5219\u4e0e\u5b83\u76f8\u8fde\u7684\u5176\u4f59\u8fb9\u90fd\u4e0d\u80fd\u9009\uff1b\n2. \u53ea\u6709\u4e00\u79cd\u989c\u8272\u51fa\u73b0\u8fc7\u4e24\u6b21\uff0c\u5176\u4f59\u989c\u8272\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\uff0c\u5219\u5fc5\u987b\u9009\u62e9\u8fd9\u4e24\u6761\u8fb9\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u5176\u4f59\u90fd\u4e0d\u80fd\u9009\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c$\\text{2-SAT}$ \u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\n\n* \u628a\u6bcf\u6761\u8fb9\u62c6\u6210\u9009\u548c\u4e0d\u9009\u4e24\u79cd\u72b6\u6001\uff1b\n* \u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u628a\u6bcf\u6761\u8fb9\u9009\u5411\u5176\u4f59\u6240\u6709\u8fb9\u4e0d\u9009\u8fde\u8fb9\uff1b\n* \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u5bf9\u4e8e\u76f8\u540c\u989c\u8272\u7684\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u8fb9\u9009\u5411\u53e6\u4e00\u6761\u8fb9\u4e0d\u9009\u8fde\u8fb9\uff0c\u5176\u4f59\u989c\u8272\u5404\u4e0d\u76f8\u540c\u7684\u8fb9\u90fd\u4e0d\u80fd\u9009\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u4ece\u9009\u81ea\u5df1\u5411\u4e0d\u9009\u81ea\u5df1\u8fde\u8fb9\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u5efa\u8fb9\u65b9\u5f0f\u53ef\u80fd\u4f1a\u88ab\u5361\u5230 $m^2$\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\u3002\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e0b\u4e24\u79cd\u8fde\u8fb9\u65b9\u5f0f\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/07dh69as.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/3jh5r4sv.png)\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff1a\u5982\u679c\u662f\u83ca\u82b1\u56fe\uff0c\u7b2c\u4e00\u79cd\u8fde\u6cd5\u7684\u8fde\u8fb9\u6570\u4e3a $m\\times (m-1)$\uff0c\u800c\u7b2c\u4e8c\u79cd\u505a\u6cd5\u8fde\u8fb9\u6570\u4e3a $6\\times m-4$\uff0c\u6bd4\u7b2c\u4e00\u79cd\u4f18\u79c0\u5f97\u591a\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u5efa\u56fe\u65b9\u5f0f\u4e3a\u524d\u7f00\u4f18\u5316\u5efa\u56fe\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\uff0c\u6211\u4eec\u4e8c\u5206\u7b54\u6848\uff0c\u628a\u6240\u6709\u6743\u503c\u5927\u4e8e\u7b54\u6848\u7684\u8fb9\u90fd\u8bbe\u4e3a\u4e0d\u9009\uff0c\u7136\u540e\u505a $\\text{2-SAT}$\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n// Problem: CF587D Duff in Mafia\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF587D\n// Memory Limit: 250 MB\n// Time Limit: 6000 ms\n//\n// Powered by CP Editor (https://cpeditor.org)\n\n#include <bits/stdc++.h>\n#define int long long\n#define db double\n#define maxy(x, y) x = max(x, y)\n#define mint(x, y) x = min(x, y)\n#define fu(i, l, r) for (int i = l; i <= r; ++i)\n#define fd(i, r, l) for (int i = r; i >= l; ++i)\n#define lowbit(x) (x & (-x))\n#define add(x, y, z) to[x][z].push_back(y)\n#define mem(x, y) memset(x, y, sizeof(x))\n#define file(x)                 \\\n  freopen(x \".in\", \"r\", stdin); \\\n  freopen(x \".out\", \"w\", stdout);\nusing namespace std;\nnamespace Std {\ntemplate <typename tp>\nvoid read(tp &x) {\n  x = 0;\n  tp nev = 1;\n  char c = getchar();\n  while (c < '0' || c > '9') {\n    if (c == '-') nev = -1;\n    c = getchar();\n  }\n  while (c >= '0' && c <= '9') {\n    x = (x << 1) + (x << 3) + (c ^ 48);\n    c = getchar();\n  }\n  x *= nev;\n}\ntemplate <typename tp>\nvoid write(tp x) {\n  if (x < 0) {\n    putchar('-');\n    write(-x);\n    return;\n  }\n  if (x / 10) write(x / 10);\n  putchar((x % 10) ^ 48);\n}\nint n, m, cl[400010], len[400010], cnt, tot, dfn[400010], low[400010],\n    stack[400010], top, belong[400010];\nmap<int, int> mp[400010];\nvector<int> vec[400010], to[4000010][2], last;\nbool vis[4000010];\nvoid tarjan(int x) {\n  dfn[x] = low[x] = ++tot;\n  stack[++top] = x;\n  vis[x] = 1;\n  for (auto i : to[x][0]) {\n    if (!dfn[i]) {\n      tarjan(i);\n      low[x] = min(low[x], low[i]);\n    } else if (vis[i]) {\n      low[x] = min(low[x], dfn[i]);\n    }\n  }\n  for (auto i : to[x][1]) {\n    if (!dfn[i]) {\n      tarjan(i);\n      low[x] = min(low[x], low[i]);\n    } else if (vis[i]) {\n      low[x] = min(low[x], dfn[i]);\n    }\n  }\n  if (dfn[x] == low[x]) {\n    cnt++;\n    int a = 0;\n    while (x != a) {\n      a = stack[top--];\n      belong[a] = cnt;\n      vis[a] = 0;\n    }\n  }\n}\nbool check(int x) {\n  mem(dfn, 0);\n  mem(vis, 0);\n  mem(belong, 0);\n  mem(low, 0);\n  tot = cnt = top = 0;\n  for (int i = 1; i <= m; ++i) to[i][1].clear();\n  fu(i, 1, m) {\n    if (len[i] > x) add(i, i + m, 1);\n  }\n  fu(i, 1, m * 4) {\n    if (!dfn[i]) tarjan(i);\n  }\n  for (int i = 1; i <= m; ++i) {\n    if (belong[i] == belong[i + m]) return 0;\n  }\n  return 1;\n}\nvoid work(int x) {\n  mem(dfn, 0);\n  mem(vis, 0);\n  mem(belong, 0);\n  mem(low, 0);\n  tot = cnt = top = 0;\n  for (int i = 1; i <= m; ++i) to[i][1].clear();\n  fu(i, 1, m) {\n    if (len[i] > x) add(i, i + m, 1);\n  }\n  fu(i, 1, m * 4) {\n    if (!dfn[i]) tarjan(i);\n  }\n  puts(\"Yes\");\n  printf(\"%lld \", x);\n  cnt = 0;\n  for (int i = 1; i <= m; ++i) {\n    if (belong[i] < belong[i + m]) {\n      ++cnt, last.push_back(i);\n    }\n  }\n  printf(\"%lld\\n\", cnt);\n  for (auto i : last) printf(\"%lld \", i);\n}\nint main() {\n  read(n);\n  read(m);\n  int u, v;\n  for (int i = 1; i <= m; ++i) {\n    read(u);\n    read(v);\n    read(cl[i]);\n    read(len[i]);\n    mp[u][cl[i]]++;\n    mp[v][cl[i]]++;\n    vec[u].push_back(i);\n    vec[v].push_back(i);\n  }\n  for (int i = 1; i <= n; ++i) {\n    int mk = 0;\n    for (auto j : mp[i]) {\n      mk += j.second;\n    }\n    if (mk > mp[i].size() + 1) {\n      puts(\"No\");\n      return 0;\n    }\n  }\n  for (int i = 1; i <= n; ++i) {\n    if (!vec[i].size()) continue;\n    int mk = 0;\n    for (auto j : mp[i]) {\n      if (j.second == 2) {\n        mk = j.first;\n        break;\n      }\n    }\n    if (!mk) {\n      fu(j, 0, vec[i].size() - 1) {\n        int k = vec[i][j];\n        add(k, k + 2 * m, 0);\n        add(k + 3 * m, k + m, 0);\n        if (j != vec[i].size() - 1) {\n          add(k + 2 * m, vec[i][j + 1] + 2 * m, 0);\n          add(vec[i][j + 1] + 3 * m, k + 3 * m, 0);\n          add(vec[i][j + 1], k + 3 * m, 0);\n          add(k + 2 * m, vec[i][j + 1] + m, 0);\n        }\n      }\n    } else {\n      int cmp1 = 0, cmp2 = 0;\n      for (auto j : vec[i]) {\n        if (cl[j] == mk) {\n          if (!cmp1)\n            cmp1 = j;\n          else\n            cmp2 = j;\n        } else {\n          add(j, j + m, 0);\n        }\n      }\n      add(cmp1, cmp2 + m, 0);\n      add(cmp2, cmp1 + m, 0);\n      add(cmp2 + m, cmp1, 0);\n      add(cmp1 + m, cmp2, 0);\n    }\n  }\n  int l = 0, r = 1000000009, ans = 1000000009;\n  while (l < r) {\n    int mid = ((l + r) >> 1);\n    if (check(mid)) {\n      ans = mid, r = mid;\n    } else\n      l = mid + 1;\n  }\n  if (ans == 1000000009) puts(\"No\");\n  work(ans);\n  return 0;\n}\n}  // namespace Std\n#undef int\nint main() { return Std::main(); }\n```\n",
        "postTime": 1654259789,
        "uid": 576737,
        "name": "Wilson_Inversion",
        "ccfLevel": 7,
        "title": "CF587D Duff in Mafia \u9898\u89e3"
    }
]