[
    {
        "content": "1\u3001\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5c06\u8fb9\u5206\u6210\u4e24\u7c7b\uff1a\n\n\u2460\u6709s\u6216\u8005t\u4f5c\u4e3a\u4e00\u70b9\u7684\u8fb9\uff1a\u8fd9\u7c7b\u8fb9\u7684\u52a0\u5165\u8981\u6709\u4e00\u5b9a\u7684\u6761\u4ef6\u3002\n\n\u2461\u6ca1\u6709s\u6216\u8005t\u4f5c\u4e3a\u4e00\u70b9\u7684\u8fb9\uff1a\u8fd9\u7c7b\u8fb9\u7684\u52a0\u5165\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\uff0c\u6ca1\u6709\u9650\u5b9a\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6743\u503c\u8bbe\u5b9a\u4e3a0.\n\n\u6240\u4ee5\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7ed9\u8fb9\u8bbe\u5b9a\u6743\u503c\u7684\u95ee\u9898\u3002\u5269\u4f59\u90e8\u5206\u53ea\u8981\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u8d2a\u5fc3\u7b97\u6cd5\u7ef4\u62a4\u7ed3\u679c\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n\n\n2\u3001\u90a3\u4e48\u6211\u4eec\u7684\u95ee\u9898\u5173\u952e\u70b9\u5c31\u5728\u4e8e\u5982\u4f55\u8bbe\u5b9a\u7c7b\u578b\u2460\u7684\u8fb9\u7684\u6743\u503c\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5f15\u5165\u8d2a\u5fc3\u601d\u7ef4\uff0c\u7136\u540e\u5c06\u95ee\u9898\u518d\u5206\u6210\u4e09\u7c7b\uff1a\n\n\u2460ds>dt.\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u4f18\u5148\u52a0\u5165\u53ea\u6709s\u70b9\u7684\u8fb9\uff0c\u7136\u540e\u6b21\u4f18\u5148\u52a0\u5165\u53ea\u6709t\u7684\u8fb9\uff0c\u6700\u540e\u518d\u52a0\u5165\u65e2\u6709s\u53c8\u6709t\u7684\u8fb9\u3002\n\n\u8fc7\u7a0b kruskal\u7b97\u6cd5\u8d2a\u5fc3\u52a0\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002\u5982\u679c\u6700\u7ec8s\u70b9\u7684\u5ea6\u548ct\u70b9\u7684\u5ea6\u90fd\u6ee1\u8db3\u8981\u6c42\u5373\u4e3a\u7ed3\u679c\u3002\n\n\u2461ds<dt.\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u4f18\u5148\u52a0\u5165\u53ea\u6709t\u70b9\u7684\u8fb9\uff0c\u7136\u540e\u6b21\u4f18\u5148\u52a0\u5165\u53ea\u6709s\u7684\u8fb9\uff0c\u6700\u540e\u518d\u52a0\u5165\u65e2\u6709s\u53c8\u6709t\u7684\u8fb9\u3002\n\n\u2462ds==dt.\u90a3\u4e48\u6211\u4eec\u8dd1\u4e24\u904d\u5373\u53ef\uff0c\u7b2c\u4e00\u904d\u4f18\u5148\u52a0\u5165\u53ea\u6709s\u70b9\u7684\u8fb9\uff0c\u7136\u540e\u6b21\u4f18\u5148\u52a0\u5165\u53ea\u6709t\u7684\u8fb9\uff0c\u6700\u540e\u518d\u52a0\u5165\u65e2\u6709s\u53c8\u6709t\u7684\u8fb9\u3002\u7b2c\u4e8c\u904d\u53cd\u8fc7\u53bb\uff0c\u4f18\u5148\u52a0\u5165\u53ea\u6709t\u70b9\u7684\u8fb9\uff0c\u7136\u540e\u6b21\u4f18\u5148\u52a0\u5165\u53ea\u6709s\u7684\u8fb9\uff0c\u6700\u540e\u518d\u52a0\u5165\u65e2\u6709s\u53c8\u6709t\u7684\u8fb9\u3002\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n    int x,y,w,use;\n}a[550000];\nint f[550000];\nint cmp(node a,node b)\n{\n    return a.w<b.w;\n}\nint find(int a)\n{\n    int r=a;\n    while(f[r]!=r)\n    r=f[r];\n    int i=a;\n    int j;\n    while(i!=r)\n    {\n        j=f[i];\n        f[i]=r;\n        i=j;\n    }\n    return r;\n}\nvoid merge(int a,int b)\n{\n    int A,B;\n    A=find(a);\n    B=find(b);\n    if(A!=B)\n    f[B]=A;\n}\nint main()\n{\n    int n,m;\n    while(~scanf(\"%d%d\",&n,&m))\n    {\n        int s,t,ds,dt;\n        for(int i=1;i<=n;i++)f[i]=i;\n        for(int i=0;i<m;i++)scanf(\"%d%d\",&a[i].x,&a[i].y);\n        scanf(\"%d%d%d%d\",&s,&t,&ds,&dt);\n        int vals,valt;\n        if(ds>dt)vals=1,valt=2;\n        else vals=2,valt=1;\n        for(int i=0;i<m;i++)\n        {\n            a[i].use=0;\n            if(a[i].x==s||a[i].y==s)a[i].w=vals;\n            if(a[i].x==t||a[i].y==t)a[i].w=valt;\n        }\n        int cnt=0;\n        sort(a,a+m,cmp);\n        int dds=0,ddt=0;\n        for(int i=0;i<m;i++)\n        {\n            if(a[i].w==0)\n            {\n                if(find(a[i].x)!=find(a[i].y))\n                {\n                    cnt++;\n                    a[i].use=1;\n                    merge(a[i].x,a[i].y);\n                }\n            }\n            else\n            {\n                if(find(a[i].x)!=find(a[i].y))\n                {\n                    if(a[i].x==s||a[i].y==s)\n                    {\n                        if(dds==ds)continue;\n                        dds++;\n                    }\n                    if(a[i].x==t||a[i].y==t)\n                    {\n                        if(ddt==dt)continue;\n                        ddt++;\n                    }\n                    cnt++;\n                    a[i].use=1;\n                    merge(a[i].x,a[i].y);\n                }\n            }\n        }\n        if(dds<=ds&&ddt<=dt&&cnt==n-1)\n        {\n            printf(\"Yes\\n\");\n            for(int i=0;i<m;i++)\n            {\n                if(a[i].use==1)\n                printf(\"%d %d\\n\",a[i].x,a[i].y);\n            }\n        }\n        else //\u5982\u679c\u4e0d\u884c\u518d\u53cd\u5411\u8dd1\u4e00\u904d\u3002\n        {\n            for(int i=1;i<=n;i++)f[i]=i;\n            int vals,valt;\n            if(ds>=dt)vals=1,valt=2;\n            else vals=2,valt=1;\n            for(int i=0;i<m;i++)\n            {\n                a[i].use=0;\n                if(a[i].x==s||a[i].y==s)a[i].w=vals;\n                if(a[i].x==t||a[i].y==t)a[i].w=valt;\n            }\n            int cnt=0;\n            sort(a,a+m,cmp);\n            int dds=0,ddt=0;\n            for(int i=0;i<m;i++)\n            {\n                if(a[i].w==0)\n                {\n                    if(find(a[i].x)!=find(a[i].y))\n                    {\n                        cnt++;\n                        a[i].use=1;\n                        merge(a[i].x,a[i].y);\n                    }\n                }\n                else\n                {\n                    if(find(a[i].x)!=find(a[i].y))\n                    {\n                        if(a[i].x==s||a[i].y==s)\n                        {\n                            if(dds==ds)continue;\n                            dds++;\n                        }\n                        if(a[i].x==t||a[i].y==t)\n                        {\n                            if(ddt==dt)continue;\n                            ddt++;\n                        }\n                        cnt++;\n                        a[i].use=1;\n                        merge(a[i].x,a[i].y);\n                    }\n                }\n            }\n            if(dds<=ds&&ddt<=dt&&cnt==n-1)\n            {\n                printf(\"Yes\\n\");\n                for(int i=0;i<m;i++)\n                {\n                    if(a[i].use==1)\n                    printf(\"%d %d\\n\",a[i].x,a[i].y);\n                }\n            }\n            else\n            {\n                printf(\"No\\n\");\n            }\n        }\n    }\n}\n\n```\n",
        "postTime": 1564143407,
        "uid": 219458,
        "name": "YCE__22",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF723F \u3010st-Spanning Tree\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u8981\u628a $s,t$ \u4e24\u4e2a\u70b9\u53bb\u6389\uff0c\u7136\u540e\u4f1a\u5f97\u5230\u591a\u4e2a\u8054\u901a\u5757\uff0c\u5c06\u6bcf\u4e2a\u8054\u901a\u5757\u7f29\u6210\u4e00\u4e2a\u70b9\uff08\u540c\u65f6\u5c06\u6bcf\u4e2a\u8054\u901a\u5757\u90fd\u6c42\u51fa\u4e00\u68f5\u751f\u6210\u6811\uff09\u3002\u7136\u540e\u518d\u6062\u590d $s,t$ \u8fd9\u4e24\u4e2a\u70b9\u53ca\u5176\u8fde\u8fb9\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u8fd9\u4e9b\u539f\u5148\u662f\u8054\u901a\u5757\u7684\u70b9\u5206\u6210\u4e09\u7c7b\uff1a\n\n$1$\u3001\u53ea\u4e0e $s$ \u76f8\u8fde\u3002\n\n$2$\u3001\u53ea\u4e0e $t$ \u76f8\u8fde\u3002\n\n$3$\u3001\u4e8c\u8005\u90fd\u8fde\u3002\n\n\u9996\u5148 $s$ \u548c $t$ \u90fd\u8981\u5206\u522b\u548c\u7b2c $1,2$ \u7c7b\u70b9\u8fde\u8fb9\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb $d_s$ \u548c $d_t$ \u90fd\u8981\u5206\u522b\u51cf\u53bb\u5bf9\u5e94\u7c7b\u7684\u70b9\u7684\u4e2a\u6570\uff08\u5982\u679c\u6709\u4e00\u4e2a\u4e0d\u8db3\uff0c\u5c31\u8bf4\u660e\u65e0\u89e3\uff09\u3002\n\n\u8bbe\u7b2c $3$ \u7c7b\u6709 $x$ \u4e2a\u3002\n\n\u82e5 $x\\not=0$\uff0c\u5219 $d_s+d_t\\ge x+1$ \u5fc5\u987b\u6210\u7acb\uff0c\u56e0\u4e3a\u8fd9\u6837\u624d\u80fd\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u4f7f\u5f97\u5b83\u8fde\u63a5 $s,t$\uff0c\u4f7f\u5f97\u6574\u4e2a\u56fe\u90fd\u8fde\u901a\uff08\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\uff0c\u4e07\u4e00 $s,t$ \u5355\u72ec\u6709\u8fde\u8fb9\u53ef\u4e0d\u53ef\u4ee5\u8fde\uff1f\u53ef\u4ee5\uff0c\u4f46\u662f\u6761\u4ef6\u5c31\u53d8\u6210\u4e86 $d_s+d_t\\ge x+2,d_s>0,d_t>0$\uff0c\u66f4\u4e0d\u4f18\u4e86\uff09\u3002\n\n\u82e5 $x=0$\uff0c$s$ \u548c $t$ \u5fc5\u987b\u6709\u8fde\u8fb9\uff0c\u4e14 $d_s,d_t>0$\u3002\n\n\u4ee3\u7801\u53ef\u80fd\u6709\u5f88\u591a\u7ec6\u8282\uff0c\u53cd\u6b63\u6211\u7684\u4ee3\u7801\u662f\u8fd9\u6837\u7684\u3002",
        "postTime": 1633269694,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF723F"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[CF723F \u3010st-Spanning Tree\u3011](https://www.luogu.com.cn/problem/CF723F)\n\n# \u5206\u6790\n\n\u8003\u8651\u5148\u628a $s$ \u548c $t$ \u70b9\u9694\u79bb\u5f00\uff0c\u627e\u4e00\u904d\u8fde\u901a\u5757\u3002\n\n\u627e\u7684\u65f6\u5019\u5206\u522b\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u8fde\u901a\u5757\u662f\u5426\u80fd\u5230\u8fbe $s$ \u548c $t$ \u3002\n\n\u7531\u4e8e\u539f\u56fe\u8054\u901a\uff0c\u4e0d\u5b58\u5728\u65e2\u4e0d\u4e0e $s$ \u8054\u901a\uff0c\u4e5f\u4e0d\u4e0e $t$ \u8054\u901a\u7684\u8fde\u901a\u5757\u3002\u90a3\u4e48\u8fde\u901a\u5757\u6709\u4e24\u79cd\uff1a\n\n- \u53ea\u4e0e $s$ \u548c $t$ \u4e2d\u4e00\u4e2a\u76f8\u8fde\u3002\u5bf9\u4e8e\u8fd9\u79cd\u8fde\u901a\u5757\uff0c\u8fd9\u6761\u8fde\u63a5\u7684\u8fb9\u662f\u5fc5\u987b\u9009\u5165\u751f\u6210\u6811\u7684\u3002\uff08\u5982\u679c\u6709\u591a\u6761\u8fb9\uff0c\u9009\u4e00\u6761\u5373\u53ef\uff0c\u4e0b\u540c\u3002\uff09\n\n- \u4e0e $s$ \u548c $t$ \u90fd\u76f8\u8fde\u3002\u5982\u679c\u5f53\u524d $s$ \u548c $t$ \u8fd8\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u628a\u8fd9\u4e24\u6761\u8fb9\u90fd\u9009\u5165\u751f\u6210\u6811\uff1b\u5426\u5219\uff0c\u53ea\u9009\u62e9\u4e00\u6761\u3002\n\n\u9700\u8981\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u5904\u7406\u7b2c\u4e00\u79cd\u8fde\u901a\u5757\uff0c\u7136\u540e\u518d\u505a\u7b2c\u4e8c\u79cd\u3002\u5426\u5219\u53ef\u80fd\u4f1a\u628a\u6709\u89e3\u8bef\u5224\u4e3a\u65e0\u89e3\u3002\n\n\u5982\u679c\u5904\u7406\u5b8c\u4e0a\u8ff0\u4e24\u79cd\u8fde\u901a\u5757\uff0c$s$ \u548c $t$ \u90fd\u4ecd\u7136\u6ca1\u6709\u8fde\u901a\uff0c\u6839\u636e**\u539f\u56fe\u662f\u8054\u901a\u7684**\uff0c\u5b83\u4eec\u4e4b\u95f4\u5fc5\u5b9a\u5b58\u5728\u81f3\u5c11\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u52a0\u5165\u8fd9\u6761\u8fb9\u5373\u53ef\u3002\n\n\u5728\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u8981\u6709\u5fc5\u987b\u52a0\u8fb9\u800c\u5ea6\u6570\u4e0d\u6ee1\u8db3\u7684\u65f6\u5019\uff0c\u5219\u5224\u5b9a\u65e0\u89e3\u3002\n\n# \u6e90\u7801\n\n\u4ee3\u7801\u6709\u4ebf\u70b9\u4e71\uff0c\u6709\u4ebf\u70b9\u957f\u3002\n\n```cpp\nconst int N = 2e5+5, M = 4e5+5;\n\nint n, m, s, t;\nint ds, dt, b = 0;\nint g[N], v[2*M], nxt[2*M], tot = 1;\nint vis[N], es1[M], et1[M], idx1, es2[M], et2[M], idx2;\nint e[M], cnt, flag = 1;\n\ninline void add(int x, int y) {\n\tv[++tot] = y, nxt[tot] = g[x], g[x] = tot;\n}\n\nvoid dfs(int u, int &e1, int &e2) {\n\tvis[u] = 1;\n\tfor (int i = g[u]; i; i = nxt[i]) {\n\t\tint y = v[i];\n\t\tif (vis[y]) continue;\n\t\tif (y == s) {\n\t\t\te1 = i;\n\t\t\tcontinue;\n\t\t}\n\t\tif (y == t) {\n\t\t\te2 = i;\n\t\t\tcontinue;\n\t\t}\n\t\te[++cnt] = i;\n\t\tdfs(y, e1, e2);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tadd(x, y), add(y, x);\n\t}\n\tscanf(\"%d%d%d%d\", &s, &t, &ds, &dt);\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (vis[i] || i == s || i == t) continue;\n\t\tint e1 = 0, e2 = 0;\n\t\tdfs(i, e1, e2);\n\t\tif (e1 && e2) {\n\t\t\tidx2++;\n\t\t\tes2[idx2] = e1, et2[idx2] = e2;\n\t\t}\n\t\telse {\n\t\t\tidx1++;\n\t\t\tes1[idx1] = e1, et1[idx1] = e2;\n\t\t}\n\t}\n\t\n\tfor (int i = 1; i <= idx1; i++) {\n\t\tif (es1[i]) {\n\t\t\tif (!ds) {\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tds--;\n\t\t\te[++cnt] = es1[i];\n\t\t}\n\t\telse {\n\t\t\tif (!dt) {\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdt--;\n\t\t\te[++cnt] = et1[i];\n\t\t}\n\t}\n\t\n\tif (!flag) {\n\t\tprintf(\"No\\n\");\n\t\treturn 0;\n\t}\n\t\n\tfor (int i = 1; i <= idx2; i++) {\n\t\tif (!b) {\n\t\t\tif (!ds || !dt) {\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tds--, dt--, b = 1;\n\t\t\te[++cnt] = es2[i];\n\t\t\te[++cnt] = et2[i];\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (ds) {\n\t\t\tds--;\n\t\t\te[++cnt] = es2[i];\n\t\t}\n\t\telse {\n\t\t\tif (!dt) {\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdt--;\n\t\t\te[++cnt] = et2[i];\n\t\t}\n\t}\n\t\n\tif (!b) {\n\t\tif (!ds || !dt) {\n\t\t\tflag = 0;\n\t\t}\n\t\telse {\n\t\t\tds--, dt--, b = 1;\n\t\t\te[++cnt] = -1;\n\t\t}\n\t}\n\t\n\tif (!flag) {\n\t\tprintf(\"No\\n\");\n\t}\n\telse {\n\t\tprintf(\"Yes\\n\");\n\t\tfor (int i = 1; i <= cnt; i++)\n\t\t\tif (e[i] == -1)\n\t\t\t\tprintf(\"%d %d\\n\", s, t);\n\t\t\telse\n\t\t\t\tprintf(\"%d %d\\n\", v[e[i]], v[e[i]^1]);\n\t}\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1595425916,
        "uid": 138041,
        "name": "cyh_toby",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF723F \u3010st-Spanning Tree\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u53ef\u4ee5\u628a\u8fb9\u5206\u6210\u4e24\u7c7b\uff1a\n\u4e00\u7c7b\u662f\u7aef\u70b9\u542bs\u6216t\u7684\uff0c\u53e6\u4e00\u7c7b\u662f\u548cs,t\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u7684\u3002\n\u7b2c\u4e8c\u7c7b\u8fb9\u53ef\u4ee5\u968f\u4fbf\u4e71\u8fde\uff0c\u800c\u7b2c\u4e00\u7c7b\u8fb9\u4e0d\u53ef\u4ee5\u3002\n\n\n\u6240\u4ee5\uff0c\u5c31\u5148\u628a\u7b2c\u4e8c\u7c7b\u8fb9\u4e71\u8fde\uff0c\u968f\u4fbf\u8fde\uff0c\u53cd\u6b63\u6ca1\u6709\u8fb9\u6743\u8fde\u5c31\u662f\u4e86\uff0c\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u76f8\u5f53\u4e8e\u641e\u4e00\u4e2a\u751f\u6210\u6811\u68ee\u6797\u51fa\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u5f88\u591a\u5f88\u591a\u5757\u96c6\u5408\uff08\u76f8\u5f53\u4e8e\u88ab\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u8981\u6ce8\u610f\u7ec6\u8282\uff09\u548cs,t\u4e24\u4e2a\u70b9\u3002\n\n\n\u96c6\u5408\u4e2d\u53ea\u4e0es,t\u7684\u5176\u4e2d\u4e00\u4e2a\u70b9\u6709\u8fb9\u7684\uff0c\u53ea\u80fd\u8fde\u90a3\u4e2a\u8fb9\uff0c\u5426\u5219\u5c31\u4e0d\u8054\u901a\u4e86\u3002\u4e00\u8fb9\u8fde\u4e00\u8fb9\u5224\u65ads,t\u7684\u5ea6\u6570\uff0c\u5982\u679c\u8d85\u8fc7\u4e86\u5c31\u5224\u5b9a\u65e0\u89e3\u3002\n\n\n\u96c6\u5408\u4e2d\u548cs,t\u90fd\u6709\u8fb9\u76f8\u8fde\u7684\uff0c\u9009\u4e00\u4e2a\u548cs,t\u90fd\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7fs,t\u8054\u901a\u7684\u540c\u65f6\u5c3d\u91cf\u6700\u5c0f\u5316\u5ea6\u6570\u3002\uff08s,t\u76f4\u63a5\u76f8\u8fde\uff0c\u5ea6\u6570\u5404\u589e\u52a01\uff0c\u67d0\u4e00\u4e2a\u96c6\u5408\u518d\u548cs,t\u4e2d\u7684\u4e00\u4e2a\u76f8\u8fde\uff0cs,t\u4e2d\u7684\u4e00\u4e2a\u5ea6\u6570\u4f1a\u589e\u52a01\uff09\n\n\n\u5269\u4e0b\u7684\u548cs,t\u90fd\u6709\u8fb9\u76f8\u8fde\u7684\u96c6\u5408\uff0c\u968f\u4fbf\u8fdes,t\u90fd\u53ef\u4ee5\u3002\uff08\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u88ab\u8fde\u5b8c\u4e86\uff0c\u5c31\u8fde\u53e6\u5916\u90a3\u4e2a\uff09\n\n\n\u6700\u540e\uff0c\u5982\u679c\u6ca1\u6709\u548cs,t\u90fd\u6709\u8fb9\u76f8\u8fde\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u6b64\u65f6s,t\u8fd8\u6ca1\u6709\u88ab\u8fde\u8d77\u6765\uff0c\u90a3\u4e48\u8fd8\u8981\u5728s,t\u4e4b\u95f4\u76f4\u63a5\u8fde\u4e00\u6761\u8fb9\u3002\n\n\n\u6ce8\u610f\u8fd8\u8981\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u4e00\u68f5\u751f\u6210\u6811\u7684\u5f62\u6001\uff08\u8fb9\u6570\u4e3an-1\uff09\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\n#define ll long long\n#define N 200005\nint n,m,s,t,ds,dt;\nvector<int>G[N];\nvector<pair<int,int> >ans;\nint f[N];//\u5e76\u67e5\u96c6\nint ls[N],lt[N];//\u7f16\u53f7\u4e3ai\u7684\u96c6\u5408\u901a\u8fc7ls[i]/lt[i]\u548cs/t\u76f8\u8fde \ninline int rd()\n{\n\tint f=1,x=0;char c=getchar();\n\twhile(c<'0'||'9'<c){if(c=='-')f=-f;c=getchar();}\n\twhile('0'<=c&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f*x;\n}\nint Find(int x)\n{\n\tif(f[x]==x) return x;\n\treturn f[x]=Find(f[x]);\n}\nbool Union(int u,int v)\n{\n\tint x=Find(u),y=Find(v);\n\tif(x==y) return false;\n\tif(x<y) f[y]=x;\n\telse f[x]=y;\n\treturn true; \n}\nvoid Init()\n{\n\tfor(int i=1;i<=n;i++)\n\t\tf[i]=i;\n} \nint main()\n{\n\tn=rd(),m=rd();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=rd(),v=rd();\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\ts=rd(),t=rd(),ds=rd(),dt=rd();\n\tInit();\n\t//\u4e71\u8fde\u4e0d\u542bs,t\u7684\u8fb9 \n\tfor(int u=1;u<=n;u++)\n\t{\n\t\tif(u==s||u==t) continue;\n\t\tfor(int i=0;i<G[u].size();i++)\n\t\t{\n\t\t\tint v=G[u][i];\n\t\t\tif(v==s||v==t) continue;\n\t\t\tif(Union(u,v)) ans.push_back(make_pair(u,v));\n\t\t}\n\t}\n\t//\u5904\u7406\u96c6\u5408\u7684\u54ea\u4e9b\u8fb9\u548cs,t\u76f8\u8fde\u7684\u60c5\u51b5 \n\tfor(int i=0;i<G[s].size();i++)\n\t\tif(G[s][i]!=t)\n\t\t{\n\t\t\tint x=Find(G[s][i]);\n\t\t\tls[x]=G[s][i];\n\t\t}\n\tfor(int i=0;i<G[t].size();i++)\n\t\tif(G[t][i]!=s)\n\t\t{\n\t\t\tint x=Find(G[t][i]);\n\t\t\tlt[x]=G[t][i];\n\t\t}\n\t//\u5904\u7406\u53ea\u548cs,t\u4e2d\u7684\u4e00\u4e2a\u76f8\u8fde\u7684\u96c6\u5408 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ls[i]&&!lt[i])\n\t\t{\n\t\t\tds--;\n\t\t\tUnion(s,i);\n\t\t\tans.push_back(make_pair(s,ls[i]));\n\t\t}\n\t\telse if(!ls[i]&&lt[i])\n\t\t{\n\t\t\tdt--;\n\t\t\tUnion(t,i);\n\t\t\tans.push_back(make_pair(t,lt[i]));\n\t\t}\n\t\tif(ds<0||dt<0)\n\t\t{\n\t\t\tputs(\"No\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\t//\u5904\u7406\u548cs,t\u90fd\u76f8\u8fde\u7684\u96c6\u5408 \u7b2c\u4e00\u4e2a\u4f1a\u548cs,t\u90fd\u8fde s,t\u8fde\u901a\u4e4b\u540e\u5c31\u53ea\u4f1a\u8fde\u4e00\u4e2a \n\tfor(int i=1;i<=n;i++)\n\t\tif(ls[i]&&lt[i])\n\t\t{\n\t\t\tif(ds&&Union(s,i))\n\t\t\t{/*\u77ed\u8def\u8fd0\u7b97\u7b26 Union\u4e0d\u80fd\u5199\u5728\u524d\u9762 \u6216\u8005\u4e5f\u53ef\u4ee5\u7528find()\u5224\u65ad Union\u5199\u5728\u91cc\u9762*/\n\t\t\t\tds--;\n\t\t\t\tans.push_back(make_pair(s,ls[i]));\n\t\t\t}\n\t\t\tif(dt&&Union(t,i))\n\t\t\t{\n\t\t\t\tdt--;\n\t\t\t\tans.push_back(make_pair(t,lt[i]));\n\t\t\t}\n\t\t\tif(Find(s)!=Find(i)||Find(t)!=Find(i)) //\u8bf4\u660e\u524d\u9762\u6ca1\u6709\u529e\u6cd5\u8fde \u5ea6\u6570\u90fd\u7528\u5b8c\u4e86 \n\t\t\t{\n\t\t\t\tputs(\"No\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\tif(Find(s)!=Find(t))//s,t\u8fd8\u6ca1\u6709\u8fde\u901a\n\t{\n\t\tbool f=0;\n\t\tfor(int i=0;i<G[s].size();i++)\n\t\t\tif(G[s][i]==t)\n\t\t\t{\n\t\t\t\tf=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(ds&&dt&&f)\n\t\t\tans.push_back(make_pair(s,t));\n\t\tif(!f)\n\t\t{\n\t\t\tputs(\"No\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif(ans.size()!=n-1)\n\t{//\u6ee1\u8db3\u662f\u4e00\u68f5\u751f\u6210\u6811 \n\t\tputs(\"No\");\n\t\treturn 0;\n\t}\n\tputs(\"Yes\");\n\tfor(int i=0;i<ans.size();i++)\n\t\tprintf(\"%d %d\\n\",ans[i].first,ans[i].second);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1572410973,
        "uid": 41165,
        "name": "Starlight_Glimmer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF723F \u3010st-Spanning Tree\u3011"
    },
    {
        "content": "\u5c06\u8fb9\u5206\u4e3a\u4e09\u7c7b\uff1a\n\n1. \u4e0d\u4e0e $s$ \u548c $t$ \u76f8\u8fde\uff1b\n2. \u53ea\u4e0e $s$ \u548c $t$ \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u76f8\u8fde\uff1b\n3. \u8fde\u63a5 $s$ \u548c $t$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\u8fb9\uff0c\u52a0\u5165\u65f6\u4e0d\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\uff0c\u53ef\u4ee5\u4efb\u610f\u52a0\u5165\uff0c\u4e14\u8d8a\u591a\u8d8a\u597d\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u548c\u7b2c\u4e09\u7c7b\u8fb9\uff0c\u52a0\u5165\u65f6\u5747\u4f1a\u5360\u7528 $d_s$ \u548c/\u6216 $d_t$ \u7684\u5269\u4f59\u5bb9\u91cf\uff0c\u4e14\u7b2c\u4e09\u7c7b\u8fb9\u4f1a\u540c\u65f6\u5360\u7528\u3002\n\n\u8003\u8651\u5bf9\u8fb9\u52a0\u6743\uff0c\u4f7f\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u7b49\u4e8e\u5176\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u4e2d\u7684 $s$ \u548c $t$ \u7684\u6570\u91cf\uff08\u5373\uff0c\u7b2c\u4e00\u7c7b\u8fb9\u8fb9\u6743\u4e3a $0$\uff0c\u7b2c\u4e8c\u7c7b\u8fb9\u4e3a $1$\uff0c\u7b2c\u4e09\u7c7b\u8fb9\u4e3a $2$\uff09\u3002\n\n\u63a5\u4e0b\u6765\u518d\u8dd1 Kruskal\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u4f18\u5148\u52a0\u5165\u7b2c\u4e00\u7c7b\u8fb9\uff0c\u7136\u540e\u7b2c\u4e8c\u7c7b\uff0c\u518d\u662f\u7b2c\u4e09\u7c7b\u3002\u52a0\u8fb9\u8fc7\u7a0b\u4e2d\u540c\u65f6\u7ef4\u62a4 $d_s$ \u548c $d_t$\uff0c\u82e5\u52a0\u5165\u540e\u65e0\u6cd5\u6ee1\u8db3\u5219\u8df3\u8fc7\u8fd9\u6761\u8fb9\u3002\u6700\u540e\u518d\u5224\u5b9a\u52a0\u5165\u8fb9\u6570\u662f\u5426\u4e3a $n-1$\u3002\n\n[\u4ee3\u7801](https://codeforces.com/problemset/submission/723/190987337)\n\n\u7136\u800c\u8fd9\u6837\u8d2a\u5fc3\u4f1a WA on 68\u3002\n\n\u4ee5\u4e0b\u662f\u7b2c 68 \u7ec4\u6570\u636e\uff1a\n\n```\n5 5\n1 3\n1 4\n1 5\n2 3\n2 4\n1 2 2 2\n```\n\n\u4e0a\u8ff0\u4ee3\u7801\u9519\u5224\u4e86\u65e0\u89e3\u3002\n\n\u89c2\u5bdf\u6570\u636e\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u90fd\u5c5e\u4e8e\u7b2c\u4e8c\u7c7b\u8fb9\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4f1a\u76f4\u63a5\u6309\u8bfb\u5165\u987a\u5e8f\u8fdb\u884c\u52a0\u8fb9\uff0c\u5bfc\u81f4\u7ed3\u70b9 3,4 \u88ab\u5360\u7528\uff0c\u7ed3\u70b9 2 \u53ea\u8fde\u51fa\u4e00\u6761\u8fb9\uff0c\u7ed3\u70b9 1 \u5374\u8fde\u51fa\u4e86 3 \u6761\u3002\n\n\u4f46\u662f\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u6362\u4e00\u4e2a\u8bfb\u5165\u987a\u5e8f\u5c31\u4e0d\u4f1a\u51fa\u9519\u3002\n\n\u4e8e\u662f\uff0c\u5728\u52a0\u4e0a ``random_shuffle`` \u4e4b\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u4e86\u6b64\u9898\u3002\n\n[\u4ee3\u7801](https://codeforces.com/problemset/submission/723/190988287)\n\n~~\uff08\u8fd9\u5c31\u662f\u8fd9\u9053\u7b80\u5355\u9898\u80fd\u8bc4 2300 \u7684\u539f\u56e0\uff1f\uff09~~\n\n\u54b3\u54b3\uff0c\u4e0a\u9762\u7684\u53ea\u662f\u4e00\u79cd\u57fa\u4e8e\u968f\u673a\u5316\u7684\u4e71\u641e\u800c\u5df2\uff0c\u8bf7\u52ff\u6a21\u4eff\u3002\u4e0b\u9762\u6765\u8bf4\u8bf4\u6b63\u89e3\u3002\n\n\u4e00\u5f00\u59cb\u7684\u9519\u8bef\u4ee3\u7801\u9519\u5728\u4e86\u52a0\u8fb9\u7684\u987a\u5e8f\u3002\u6211\u4eec\u5bf9\u52a0\u8fb9\u6743\u7684\u7b56\u7565\u8fdb\u884c\u4e00\u70b9\u8c03\u6574\uff1a\u5bf9\u4e8e\u6240\u6709\u4e0e\u70b9 $s$ \u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\uff0c\u5c06\u5176\u8fb9\u6743\u52a0\u4e0a 1\uff1b\u5bf9\u4e8e\u6240\u6709\u4e0e\u70b9 $t$ \u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\uff0c\u5c06\u5176\u8fb9\u6743\u52a0\u4e0a 2\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u53ea\u4e0e\u70b9 $s$ \u76f8\u8fde\u7684\u8fb9\u4f1a\u6bd4\u6240\u6709\u53ea\u4e0e $t$ \u76f8\u8fde\u7684\u8fb9\u66f4\u65e9\u5c1d\u8bd5\u52a0\u5165\u3002\n\n\u5c06\u52a0\u8fb9\u7b56\u7565\u53cd\u8fc7\u6765\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u53ea\u4e0e\u70b9 $t$ \u76f8\u8fde\u7684\u8fb9\u4f1a\u6bd4\u6240\u6709\u53ea\u4e0e $s$ \u76f8\u8fde\u7684\u8fb9\u66f4\u65e9\u5c1d\u8bd5\u52a0\u5165\u3002\n\n\u8dd1\u4e24\u904d Kruskal \u5373\u53ef\u3002\n\n\u4ee3\u7801\u4e0d\u96be\uff0c\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u6539\u6539\u5c31\u884c\uff0c\u6b64\u5904\u4e0d\u4f5c\u5c55\u793a\u3002~~\uff08\u56e0\u4e3a\u6211\u61d2\u5f97\u5199\u4e86\uff09~~",
        "postTime": 1674951715,
        "uid": 615290,
        "name": "lvkaiyi0811",
        "ccfLevel": 7,
        "title": "CF723F st-Spanning Tree \u9898\u89e3"
    }
]