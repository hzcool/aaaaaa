[
    {
        "content": "\u672c\u6587\u7ae0\u5c06\u540c\u6b65\u5230 [Hexo \u535a\u5ba2](https://mraymes.github.io/).\n\n\u8fd9\u9898\u662f\u4e00\u9053**\u975e\u5e38\u96be\u60f3**\u7684\u7ebf\u6bb5\u6811 / \u6811\u72b6\u6570\u7ec4\u9898.\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u53ef\u4ee5\u7b97\u662f [P2345](https://www.luogu.org/problemnew/show/P2345) \u7684\u5347\u7ea7\u7248. \u5982\u679c\u7406\u89e3\u672c\u9898\u6709\u56f0\u96be, \u90a3\u4e48\u53ef\u4ee5\u5148\u53bb\u770b\u770b P2345.\n\n## \u7b80\u5316\u5f0f\u5b50\n\n\u6211\u4eec\u5c06\u9898\u610f\u7a0d\u5fae\u7b80\u5316\u4e00\u4e0b:  \n- \u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 $a$.\n- \u8bbe $a_i$ \u5728 $a_l, a_{l + 1}, \\cdots, a_r$ \u4e2d\u4e3a\u7b2c $ord_{i, l, r}$ \u5c0f.  \n- \u5e76\u4e14\u5b9a\u4e49 $sum_i$ \u4e3a $ord_{i, l, r} (1 \\leqslant l \\leqslant r \\leqslant n)$ \u4e4b\u548c. \n- $f(l, r)$ \u7684\u51fd\u6570\u503c\u4e3a:  \n    $$ \\sum_{i = l}^{r}{a_i \\cdot ord_{i, l, r}} $$\n- \u6700\u540e\u6c42\u7684\u662f:\n    $$ \\left(\\sum_{1 \\leqslant l \\leqslant r \\leqslant n}{f(l, r)}\\right) \\bmod (10^9 + 7) $$\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5f0f\u5b50\u7ed9~~\u778e\u6363\u9f13\u4e00\u901a~~\u5206\u6790\u4e00\u4e0b, \u6700\u540e\u4f1a\u53d8\u6210\u8fd9\u6837:  \n$$ \\sum_{i = 1}^n{a_i \\cdot sum_i} $$  \n\u6362\u4e00\u79cd\u8bf4\u6cd5, \u5c31\u662f\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e58\u5b83\u6240\u5728\u533a\u95f4\u5185\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u52a0 $1$, \u6700\u540e\u518d\u76f8\u52a0\u6240\u5f97\u7684\u548c.\n\n## \u8ba1\u7b97\n\n**\u8fd9\u4e00\u6b65\u5c31\u662f\u91cd\u70b9\u4e86!**\n\n\u6bcf\u5f53\u4e00\u4e2a\u6570\u5927\u4e8e\u53e6\u4e00\u4e2a\u6570\u65f6, \u90a3\u4e48, \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u540c\u65f6\u5305\u542b\u4e24\u4e2a\u6570\u7684\u533a\u95f4\u5185, \u90fd\u4f1a\u56e0\u4e3a\u8fd9\u4e2a\u5c0f\u6570\u7684\u5b58\u5728\u800c\u4e3a\u5927\u6570\u7684 $sum$ \u503c\u589e\u52a0 $1$.  \n\u5982\u679c\u8fd9\u4e00\u90e8\u5206\u6709\u70b9\u96be\u7406\u89e3, \u90a3\u4e48\u770b\u4e0b\u9762\u7684\u4f8b\u5b50:  \n$$ a = \\{ 7, 2, 6, 8, 3, 1 \\} $$  \n\u6211\u4eec\u73b0\u5728\u5206\u6790\u7684\u662f $6$ \u7684 $sum$ \u503c.  \n\u5728\u5de6\u4fa7\u6709\u4e00\u4e2a $2$ \u6bd4 $6$ \u5c0f, \u56e0\u6b64:  \n```cpp\nfor (int i = 1; i <= 2; i++) { // 2 \u4e3a 2 \u5728 a \u4e2d\u6240\u5728\u7684\u4f4d\u7f6e\n    for (int j = 3; j <= 6; j++) { // 3 \u4e3a 6 \u7684\u4f4d\u7f6e, 6 \u4e3a\u603b\u6570\n        ord[3][i][j]++;\n        sum[3]++;\n    }\n}\n```\n\u90a3\u4e48, \u7c7b\u4f3c\u5730, \u56e0\u4e3a\u53f3\u4fa7 $3$ \u7684\u5b58\u5728, \u6240\u4ee5:  \n```cpp\nfor (int i = 1; i <= 3; i++) { // 3 \u4e3a 6 \u7684\u4f4d\u7f6e\n    for (int j = 5; j <= 6; j++) { // 5 \u4e3a 3 \u7684\u4f4d\u7f6e\n        ord[3][i][j]++;\n        sum[3]++;\n    }\n}\n```\n\u76f8\u4fe1\u5728\u8fd9\u91cc\u5e94\u8be5\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u5730\u5f97\u51fa\u4e00\u5b9a\u7684\u89c4\u5f8b\u4e86.\n\n\u8be5\u89c4\u5f8b\u5c31\u662f:  \n\u8bbe\u5f53\u524d\u5206\u6790\u7684\u6570\u4e3a $a_i$.  \n\u8bbe $L$ \u4e3a\u6bd4 $a_i$ \u5c0f\u5e76\u4e14\u5728\u5176**\u5de6\u4fa7**\u7684\u6240\u6709\u6570\u6240\u5904\u7684\u4f4d\u7f6e (\u4e0b\u6807) \u7684\u96c6\u5408.  \n$R$ \u4e3a\u6bd4 $a_i$ \u5c0f\u5e76\u4e14\u5728\u5176**\u53f3\u4fa7**\u7684\u6240\u6709\u6570\u6240\u5904\u7684\u4f4d\u7f6e (\u4e0b\u6807) \u7684\u96c6\u5408.  \n\u76f8\u4fe1\u5927\u5bb6\u4e5f\u5df2\u7ecf\u53d1\u73b0\u4e86, \u540c\u65f6\u5305\u542b $a_l$ \u548c $a_r$ \u7684\u533a\u95f4 $(1 \\leqslant l \\leqslant r \\leqslant n)$ \u7684\u6570\u91cf\u4e3a $l \\cdot (n - r + 1)$.\n\n\u5f53\u7136\u4e5f\u4e0d\u8981\u5fd8\u4e86\u8fd9\u4e2a\u6570\u672c\u8eab, \u56e0\u4e3a\u4e0a\u9762 $sum_i$ \u4ee5\u53ca $ord_{i, l, r}$ \u589e\u52a0\u90fd\u662f\u56e0\u4e3a\u6709\u6570\u6bd4 $a_i$ \u5c0f, \u7136\u800c\u6211\u4eec\u8981\u8ba1\u7b97\u7684\u662f**\u4ece $1$ \u5f00\u59cb\u7684**\u6392\u540d, \u6240\u4ee5\u5fc5\u987b\u518d\u52a0\u4e0a\u5f53\u524d\u6570\u6240\u5728\u7684\u533a\u95f4\u603b\u6570. \u8fd9\u91cc\u5e94\u8be5\u4e0d\u96be\u7406\u89e3, \u56e0\u4e3a\u5982\u679c\u533a\u95f4 $[l, r]$ \u6ca1\u6709\u540c\u65f6\u5305\u542b $a_i$ \u4e0e\u6bd4 $a_i$ \u5c0f\u7684\u6570, \u90a3\u4e48 $ord_{i, l, r} = 1$; \u5982\u679c\u5305\u542b\u4e86\u7684\u8bdd, \u90a3\u4e48\u4ecd\u7136\u9700\u8981\u52a0 $1$, \u56e0\u4e3a $ord_{i, l, r}$ \u4e2d\u5b58\u50a8\u7684\u76ee\u524d\u53ea\u662f\u5728\u533a\u95f4 $[l, r]$ \u4e2d\u6bd4 $a_i$ \u5c0f\u7684\u6570\u7684\u6570\u91cf.\n\n\u5305\u542b\u4e00\u4e2a\u6570 $a_i$ \u7684\u533a\u95f4\u6570\u91cf\u4e5f\u4e0d\u96be\u7b97, \u90a3\u5c31\u662f $i \\cdot (n - i + 1)$.\n\n\u90a3\u4e48, \u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u516c\u5f0f:  \n$$ sum_i = \\sum_{x \\in L}{\\left(x \\cdot (n - i + 1)\\right)} + \\sum_{x \\in R}{\\left(i \\cdot (n - x + 1)\\right)} + i \\cdot (n - i + 1) $$  \n$$ sum_i = \\sum_{x \\in L}{x} \\cdot (n - i + 1) + \\sum_{x \\in R}{(n - x + 1)} \\cdot i + i \\cdot (n - i + 1)$$\n\n## \u6570\u636e\u7ed3\u6784\u7ef4\u62a4\n\n\u5982\u4f55\u7ef4\u62a4 $L$ \u548c $R$ \u7684\u548c? \u90a3\u5c31\u9700\u8981\u7528\u5230~~\u67d0\u4e9b\u6bd2\u7624~~\u6570\u636e\u7ed3\u6784\u4e86, \u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u7ebf\u6bb5\u6811. ~~\u56e0\u4e3a\u6211\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4.~~\n\n\u7ebf\u6bb5\u6811\u5982\u4f55\u4f7f\u7528\u4e5f\u662f\u4e00\u4e2a\u91cd\u70b9.\n\n\u8981\u4fdd\u8bc1\u7ebf\u6bb5\u6811\u4e2d\u5b58\u50a8\u7684\u4e0b\u6807\u6240\u5bf9\u5e94\u7684\u6570\u90fd\u5c0f\u4e8e\u5f53\u524d\u8981\u5206\u6790\u7684\u6570, \u90a3\u5c31\u5e94\u8be5\u5148\u5c06\u539f\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f, \u7136\u540e\u4ece\u5c0f\u5230\u5927\u5904\u7406.\n\n\u4f46\u662f\u53c8\u56e0\u4e3a\u8981\u6839\u636e $R$ \u7684\u5927\u5c0f\u51b3\u5b9a $n + 1$ \u7684\u90e8\u5206\u5e94\u8be5\u52a0\u51e0\u904d (\u5177\u4f53\u89c1\u4e0a\u9762\u516c\u5f0f), \u6211\u4eec\u53c8\u8981\u5b58\u4e00\u4e2a $cnt$ \u503c, \u8868\u793a\u5f53\u524d\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u4e0b\u6807\u5df2\u7ecf\u88ab\u5b58\u8fdb\u53bb.\n\n\u6700\u540e\u4ee3\u7801\u5982\u4e0b:  \n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef pair<ull, ull> puu;\n\nconst ull MOD = 1000000007ULL;\n\nstruct st_node_t {\n    ull sum;\n    ull cnt; // \u6700\u597d\u5168\u5f00 ull, \u5426\u5219\u4f1a\u6302\u6389\n};\n\nint n;\npuu a[500001];\nst_node_t st[2000001];\null sum = 0;\n\ntemplate <typename T>\ninline T read() {\n    T x = 0;\n    T multiplier = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-') {\n            multiplier = -1;\n        }\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        x = (x << 3) + (x << 1) + (ch & 15);\n        ch = getchar();\n    }\n    return x * multiplier;\n}\n\nvoid modify(int u, int l, int r, int idx, ull val) {\n    if (l == r) {\n        st[u].sum = val; // \u63d2\u5165\u65b0\u6570\n        st[u].cnt = 1;   // \u5f53\u524d\u533a\u95f4\u5185\u6709 1 \u4e2a\u6570\n        return;\n    }\n\n    int mid = l + (r - l >> 1);\n    if (idx <= mid) {\n        modify(u << 1, l, mid, idx, val);\n    } else {\n        modify(u << 1 | 1, mid + 1, r, idx, val);\n    }\n\n    // \u66f4\u65b0\n    st[u].sum = (st[u << 1].sum + st[u << 1 | 1].sum) % MOD;\n    st[u].cnt = (st[u << 1].cnt + st[u << 1 | 1].cnt) % MOD;\n}\n\null query_sum(int u, int l, int r, int lq, int rq) { // \u8be2\u95ee\u4e0b\u6807\u4e4b\u548c\n    if (l == lq && r == rq) {\n        return st[u].sum % MOD;\n    }\n\n    int mid = l + (r - l >> 1);\n    if (rq <= mid) {\n        return query_sum(u << 1, l, mid, lq, rq);\n    } else if (lq > mid) {\n        return query_sum(u << 1 | 1, mid + 1, r, lq, rq);\n    } else {\n        return (query_sum(u << 1, l, mid, lq, mid)\n                + query_sum(u << 1 | 1, mid + 1, r, mid + 1, rq))\n               % MOD;\n    }\n}\n\null query_cnt(int u, int l, int r, int lq, int rq) { // \u8be2\u95ee\u6570\u91cf\n    if (l == lq && r == rq) {\n        return st[u].cnt % MOD;\n    }\n\n    int mid = l + (r - l >> 1);\n    if (rq <= mid) {\n        return query_cnt(u << 1, l, mid, lq, rq);\n    } else if (lq > mid) {\n        return query_cnt(u << 1 | 1, mid + 1, r, lq, rq);\n    } else {\n        return (query_cnt(u << 1, l, mid, lq, mid)\n                + query_cnt(u << 1 | 1, mid + 1, r, mid + 1, rq))\n               % MOD;\n    }\n}\n\nint main() {\n    n = read<int>();\n    for (int i = 1; i <= n; i++) {\n        a[i].first = read<ull>();\n        a[i].second = i; // \u8bb0\u5f55\u539f\u4e0b\u6807\n    }\n\n    sort(a + 1, a + n + 1); // \u6309\u5927\u5c0f\u6392\u5e8f\n\n    for (int i = 1; i <= n; i++) {\n        ull sum1 = query_sum(1, 1, n, 1, a[i].second); // idx_l[] \u4e2d\u6240\u6709\u6570\u4e4b\u548c\n        ull sum2 = query_sum(1, 1, n, a[i].second, n); // idx_r[] \u4e2d\u6240\u6709\u6570\u4e4b\u548c\n        ull cnt2 = query_cnt(1, 1, n, a[i].second, n); // idx_r[] \u7684\u5927\u5c0f\n\n        // \u8fd9\u91cc\u8981\u75af\u72c2\u53d6\u6a21, \u56e0\u4e3a\u4e0d\u53d6\u6a21\u5f88\u5bb9\u6613\u7206 ull\n        sum += (sum1 * (n - a[i].second + 1) % MOD\n                + ((n + 1) * cnt2 + MOD - sum2) % MOD * a[i].second % MOD)\n               * a[i].first % MOD;\n        sum %= MOD;\n        sum += a[i].second * (n - a[i].second + 1) % MOD * a[i].first % MOD;\n        sum %= MOD;\n        modify(1, 1, n, a[i].second, a[i].second);\n    }\n\n    printf(\"%llu\\n\", sum);\n\n    return 0;\n}\n```\n\n\u5982\u679c\u770b\u61c2\u4e86\u5c31\u7559\u4e2a\u8d5e, \u5199\u9898\u89e3\u4e0d\u5bb9\u6613\u554aw...  \n\u5982\u679c\u4e0d\u61c2\u5c31\u5728\u8bc4\u8bba\u533a\u7559\u8a00, \u6211\u4f1a\u6839\u636e\u9700\u6c42\u6765\u4fee\u6539.\n",
        "postTime": 1558196401,
        "uid": 22227,
        "name": "mraymes",
        "ccfLevel": 7,
        "title": "Solution for Codeforces Problem 1167F - Scalar Queries"
    },
    {
        "content": "### 1.\u89c2\u5bdf\u9898\u76ee\uff0c\u5bb9\u6613\u60f3\u51fa\u66b4\u529b\u505a\u6cd5\n\u679a\u4e3e\u5b57\u4e32\uff0c\u6bcf\u4e2a\u5b50\u4e32sort\u4e00\u8fb9\uff0c\u52a0\u4e0a\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^3\u00d7logn)\n\n### 2.\u66f4\u5feb\u7684\u505a\u6cd5\n\u770b\u6570\u636e\u8303\u56f4n <= 1e5 , \u80af\u5b9a\u4e0d\u80fd\u679a\u4e3e\u5b50\u4e32\u4e86\u3002\n\u8fd9\u65f6\u5019\u8003\u8651\u679a\u4e3e\u70b9ai\uff0c\u8fd9\u4e2a\u70b9\u5bf9\u4e8e\u6700\u540e\u7b54\u6848\u7684\u8d21\u732e\u662f \uff0c \u6240\u6709\u5305\u542bai\u7684\u5b50\u4e32\u4e2d\u6bd4ai\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u548c\u00d7ai\u3002\n\u6bd4\u5982\u6837\u4f8b\n\n4\n\n5 2 4 7\n\n\u6bd4\u59824\u8fd9\u4e2a\u6570\uff0c\u5047\u8bbe4\u5728\u6bcf\u4e2a\u5b50\u4e32\u4e2d\u662f\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u8d21\u732e\u4e3a\u6240\u6709\u5305\u542b4\u5b50\u4e32\u4e2a\u65706\u00d76 \u3002\n\n\u4f46ai\u7684\u8d21\u732e\u7b54\u6848\u663e\u7136>=\u5b83\u3002\n\n\u89c2\u5bdf2 4 \uff0c \u5305\u542b\u201c2 4\u201d\u7684\u5b50\u4e32\u4e2d\uff0c2\u8fd9\u4e2a\u6570\u56e0\u4e3a\u6bd44\u5c0f\u4f7f4\u7684rk\u53d8\u5927\u4e86\u3002\u90a3\u4e48\u52a0\u4e0a\uff0c\u5305\u542b\u201c2 4\u201d\u7684\u5b50\u4e32\u4e2a\u65704 , \u518d \u00d74 \uff0c \u6700\u540e\u5f974\u8fd9\u4e2a\u6570\u7684\u8d21\u732e\u662f4\u00d74 + 6\u00d74 = 40.\n\n\u4f9d\u6b21\u7c7b\u63a8\uff0c5\u7684\u8d21\u732e\u662f\uff084 + 5\uff09\u00d7 5 , 2\u7684\u8d21\u732e\u662f6 \u00d7 2 \uff0c 7\u7684\u8d21\u732e\u662f\uff084 + 6\uff09\u00d77, \u6700\u540e\u5f97\u7b54\u6848167\n\n\u679a\u4e3e\u6bcf\u4e2a\u70b9ai\uff0c\u518d\u679a\u4e3e\u6bcf\u4e2a\u6bd4ai\u5c0f\u7684\u70b9aj\u3002 \u65f6\u95f4\u590d\u6742\u5ea6O\uff08n^2\uff09\n\n### 3. \u4f18\u5316\n\u57282.\u4e2d\u6211\u4eec\u5df2\u7ecf\u77e5\u9053ai\u7684\u8d21\u732e\u662f\uff0c\uff08\u7ecf\u8fc7ai\u7684\u5b50\u4e32\u4e2a\u6570+\u7ecf\u8fc7ai\u548caj\uff08ai<aj\uff09\uff09\u7684\u5b57\u4e32\u4e2a\u6570\uff09 \u00d7  ai\n\n\u5373j \u00d7 (n - i + 1)\n\n\u5176\u4e2d\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\uff0cn-i+1\u662f\u56fa\u5b9a\u7684\uff0cj\u662f\u53d8\u91cf \uff0c \u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u4f18\u5316\u4e86\n\n\u9996\u5148\u79bb\u6563\u5316\uff0c\u7ebf\u6bb5\u6811\u4e2d\u5b58\u7b2ci\u5927\u7684\u6570\u7684\u4f4d\u7f6e\u3002\n\n\u679a\u4e3e\u6bcf\u4e2a\u6570\uff0c\u6c42\u548c\u7ebf\u6bb5\u6811\u4e2d1~i-1\u7684\u503c\uff0c\u518d\u5728\u7ebf\u6bb5\u6811\u4e2dai\u7684\u4f4d\u7f6e\u52a0\u4e0ai\n\n\u65f6\u95f4\u590d\u6742\u5ea6O\uff08nlogn\uff09\n\n### 4.code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define lowbit(x) x & -x\n#define R register int\nconst int N = 1e6 + 5 , P = 1e9 + 7;\n\nll n , a[N] , b[N] , c[N] , t[N] , cnt[N] , ans;\n\ninline ll read() {\n\tll s = 0 , w = 1 ; char ch = getchar();\n\twhile(ch < 48 || ch > 57) {if(ch == '-') w = -1; ch = getchar();}\n\twhile(ch >= 48 && ch <= 57) s = (s << 1) + (s << 3) + (ch ^ 48) , ch = getchar();\n\treturn s * w;\n}\n\ninline void update(int x , int y) {while(x <= n) c[x] += y , c[x] %= P , x += lowbit(x) ;}\n\ninline ll query(int x) {\n\tll res = 0 ;\n\twhile(x) res = (res + c[x]) % P , x -= lowbit(x);\n\treturn res % P;\n}\n\nbool cmp(ll A , ll B) {return A < B;}\n\nll find(ll x) {\n\tint l = 1 , r = n , mid ;\n\twhile(l <= r) {\n\t\tmid = (l + r) >> 1;\n\t\tif(b[mid] < x) l = mid + 1;\n\t\telse if(b[mid] > x) r = mid - 1;\n\t\telse return mid;\n\t}\n}\n\nint main() {\n\tR i , j;\n\tn = read();\n\tfor(i = 1 ; i <= n ; ++ i) a[i] = b[i] = t[i] = read();\n\tsort(b + 1 , b + n + 1 , cmp);\n\tfor(i = 1 ; i <= n ; ++ i) {\n\t\tll num = find(a[i]);\n\t\tupdate(num , i);\n\t\tcnt[i] = (cnt[i] + query(num - 1) * (n - i + 1) % P) % P;\n\t}\n\tmemset(c , 0 , sizeof(c));\n\tfor(i = 1 ; i <= n ; i ++) a[i] = b[i] = t[n - i + 1];\n\tsort(b + 1 , b + n + 1 , cmp);\n\tfor(i = 1 ; i <= n ; ++ i) {\n\t\tll num = find(a[i]);\n\t\tupdate(num , i); \n\t\tcnt[n - i + 1] = (cnt[n - i + 1] + query(num - 1) * (n - i + 1) % P ) % P ; \n\t}\n\tfor(i = 1 ; i <= n ; ++ i) cnt[i] = (cnt[i] + i * (n - i + 1) % P) % P;\n\tfor(i = 1 ; i <= n ; i ++) ans = (ans + cnt[i] * t[i] % P) % P;\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1558099685,
        "uid": 80852,
        "name": "\u7a0b\u5c31\u672a\u6765",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1167F \u3010Scalar Queries\u3011"
    },
    {
        "content": "*2300\u7684\u6570\u5b66\uff08\uff1f\uff09\u9898\uff0c\u503c\u5f97\u4e00\u505a\n\n\u9898\u610f\uff1a\u5b9a\u4e49 $ f(l,r) = \\sum\\limits_{i=l}^r a_i \\cdot rk_{i,l,r} $\uff0c\u5176\u4e2d $ rk_{i,l,r} $ \u4ee3\u8868 $ a_i $ \u5728 $ a_l, ..., a_r $ \u4e2d\u7684\u6392\u540d\uff0c\u6c42\u6240\u6709 $ f(l,r) $\uff08\u6240\u6709\u533a\u95f4\u5185\uff09 \u7684\u548c\uff08\u53d6\u6a21\uff09\n\n\u6570\u636e\u8303\u56f4 $ n \\leqslant 5 \\cdot 10^5 $\uff0c\u5e94\u8be5\u662f\u4e2a $ O(n\\log n) $ \u7684\u7b97\u6cd5\uff08\u5f53\u7136\u5982\u679c\u54ea\u4f4d\u5927\u4f6c\u6709 $ O(n) $ \u7b97\u6cd5\u6b22\u8fce\u8bc4\u8bba\u533a\u7206\u8e29~~\u4e0d\u8fc7\u4f3c\u4e4e\u6ca1\u6709~~\uff09\n\n\u600e\u4e48\u505a\uff1f\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u6570\u5728\u5305\u542b\u5b83\u7684\u6240\u6709\u533a\u95f4\u4e2d\u7684\u8d21\u732e\uff0c\u8fd9\u65f6 $ a_i $ \u53ef\u4ee5\u63d0\u51fa\uff0c\u6240\u4ee5\u9700\u8981\u8ba1\u7b97\u6392\u540d\u4e4b\u548c\n\n\u6392\u540d\u8fd9\u4e1c\u897f\u4e0d\u597d\u641e\uff0c\u6211\u4eec\u8003\u8651\u8f6c\u5316\u4e00\u4e0b\n\n\u5047\u8bbe $ x $ \u8fd9\u4e2a\u6570\u5728\u4e94\u4e2a\u4e0d\u540c\u7684\u533a\u95f4\u4e2d\u6392\u540d\u5206\u522b\u4e3a $ 1,1,2,2,3 $\uff0c\u90a3\u5b83\u5bf9\u6392\u540d\u548c\u7684\u8d21\u732e\u662f $ (1+1+2+2+3)x $\n\n\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u6210 $ [(1+1+1+1+1)+(0+0+1+1+1)+(0+0+0+0+1)]x = (5+3+1)x $\n\n\u53d1\u73b0\u4ec0\u4e48\u4e86\u5417\uff1f\n\n~~\u7ecf\u8fc7\u6f2b\u957f\u65f6\u95f4\u7684\u7406\u89e3\u4e0e\u601d\u8003~~\u6269\u5c55\u5230\u4e00\u822c\u60c5\u51b5\uff1a\n\n\u00b7 \u5bf9\u4e8e\u6240\u6709 $ x $ \u6570\u6392\u540d**\u81f3\u5c11**\u662f $ 1 $ \u7684\u533a\u95f4\uff0c\u8ba1\u7b97\u8d21\u732e = \u8fd9\u6837\u7684\u533a\u95f4\u6570\n\n\u00b7 \u5bf9\u4e8e\u6240\u6709 $ x $ \u6570\u6392\u540d**\u81f3\u5c11**\u662f $ 2 $ \u7684\u533a\u95f4\uff0c\u8ba1\u7b97**\u989d\u5916**\u8d21\u732e = \u8fd9\u6837\u7684\u533a\u95f4\u6570\n\n\u00b7 \u5bf9\u4e8e\u6240\u6709 $ x $ \u6570\u6392\u540d**\u81f3\u5c11**\u662f $ 3 $ \u7684\u533a\u95f4\uff0c\u2026\u2026\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5305\u542b $ x $ \u7684\u533a\u95f4\uff0c\u5148\u4ee4\u53f3\u7aef\u70b9\u4e0d\u65ad\u5411\u53f3\u79fb\u3002**\u4e00\u65e6 $ x $ \u7684\u6392\u540d\u589e\u52a0\u4e86 $ 1 $\uff0c\u5219\u63a5\u7740\u5ef6\u7533\u65f6\u6240\u6709\u7684\u533a\u95f4\u90fd\u4f1a\u989d\u5916\u4ea7\u751f $ 1 $ \u7684\u8d21\u732e\uff08\u5305\u62ec\u8fd9\u4e00\u4e2a\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u4e4b\u540e\u7684\u533a\u95f4\u6570\u91cf\u7d2f\u52a0\u5230\u6392\u540d\u548c\u4e2d\u3002**\n\n\u53cc\u5411\u5ef6\u7533\u4e5f\u662f\u4e00\u6837\uff0c**\u53ea\u8981\u4efb\u610f\u4e00\u8fb9\uff08\u5de6/\u53f3\uff09\u79fb\u52a8\u65f6\uff08\u4e0d\u59a8\u8bbe\u79fb\u52a8\u540e\u7684\u533a\u95f4\u4e3a $ [l,r] $\uff09$ x $ \u7684\u6392\u540d\u589e\u52a0 $ 1 $\uff0c\u90a3\u4e48\u6240\u6709\u5305\u542b $ [l,r] $ \u7684\u533a\u95f4\u90fd\u4f1a\u989d\u5916\u4ea7\u751f $ 1 $ \u7684\u8d21\u732e\uff0c\u5c06\u5305\u542b $ [l,r] $ \u7684\u533a\u95f4\u6570\u7d2f\u52a0\u5230\u6392\u540d\u548c\u4e2d\u3002**\n\n~~get\uff1f~~\n\n~~\u624b\u52a8\u6a21\u62df\u4f8b\u5b50\u89c1mraymes\u795e\u4ed9\u7684\u9898\u89e3\uff0c\u6216\u8005\u6837\u4f8b~~\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e2a\u4e1c\u897f\n\n$ x $ \u6392\u540d\u589e\u52a0 $ 1 \\Leftrightarrow $ \u6709\u4e00\u4e2a\u6570\u6bd4 $ x $ \u5c0f\n\n\u5305\u542b $ [l,r] $ \u7684\u533a\u95f4\uff08\u4e0d\u59a8\u8bbe\u662f $ [i,j] $\uff09$ \\Leftrightarrow 1 \\leqslant i \\leqslant l, r \\leqslant j \\leqslant n $\n\n\u6240\u4ee5\u6570\u91cf\u4e3a $ l(n-r+1) $\uff08$ i $ \u6709 $ l $ \u79cd\uff0c$ j $ \u6709 $ n-r+1 $ \u79cd\uff09\n\n\u6240\u4ee5 $ i $ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\n\n$ a_i[i(n-i+1) + \\sum\\limits_{i<j\\leqslant n, a_j<a_i}i(n-j+1) + \\sum\\limits_{1\\leqslant j<i, a_j<a_i}j(n-i+1)] $\n\n\u524d\u4e00\u4e2a $ \\sum $ \u662f $ j $\uff08\u8ba9 $ a_i $ \u6392\u540d\u589e\u52a0\u7684\u90a3\u4e2a\u6570\uff09\u5728 $ i $ \u53f3\u8fb9\u7684\u60c5\u51b5\uff0c\u540e\u4e00\u4e2a\u662f\u5728\u5de6\u8fb9\n\n\u518d\u8bf4\u5f97\u6e05\u695a\u4e00\u70b9\uff0c\u5982\u679c\u533a\u95f4\u5305\u542b $ a_j $\uff0c$ a_i $ \u7684\u6392\u540d\u5c31\u4f1a\u589e\u52a0\uff0c\u6240\u4ee5\u6240\u6709\u540c\u65f6\u5305\u542b $ i $ \u548c $ j $ \u7684\u533a\u95f4\u90fd\u8981\u7d2f\u52a0 $ 1 $ \u7684\u8d21\u732e\uff0c\u8fd9\u6837\u7684\u533a\u95f4\u4e00\u5171\u6709 $ i(n-j+1) $\uff08$ j $ \u5728\u53f3\uff0c$ [i,j] $\uff09\u4e2a\u6216 $ j(n-i+1) $\uff08$ j $ \u5728\u5de6\uff0c$ [j,i] $\uff09\u4e2a\n\n\u524d\u9762\u90a3\u4e2a $ i(n-i+1) $ \u662f\u521d\u59cb\u6392\u540d $ 1 $\uff08\u6240\u6709\u533a\u95f4\u90fd\u6709\uff09\n\n**\u522b\u5fd8\u4e86\u4e58\u4ee5 $ a_i $\uff01**\n\n\u7d2f\u52a0\u6bcf\u4e2a $ i $ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u5566~\n\n\u770b\u8d77\u6765\u8fd8\u662f $ O(n^2) $\u2026\u2026~~\uff08\u5f53\u7136\u66b4\u529b\u662f $ O(n^3\\log n) $\uff0c\u5df2\u7ecf\u8fdb\u6b65\u5566\uff09~~\n\n\u8003\u8651\u4f18\u5316\n\n\u5728 $ i $ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e2d\uff08\u5c31\u4e0a\u9762\u90a3\u4e2a\u5f88\u957f\u7684\u5f0f\u5b50\uff09\uff0c$ i(n-i+1) $ \u662f $ O(1) $ \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5173\u6ce8\u540e\u9762\u4e24\u4e2a $ \\sum $\u3002\u4e24\u4e2a\u5904\u7406\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u6211\u4eec\u770b\u7b2c\u4e8c\u4e2a\n\n$ \\sum\\limits_{1\\leqslant j<i, a_j<a_i}j(n-i+1) = (n-i+1)\\sum\\limits_{1\\leqslant j<i, a_j<a_i}j $\uff08\u63d0\u51fa\u53ea\u8ddf $ i $ \u6709\u5173\u7684\uff09\n\n\u6240\u4ee5\u53ea\u8981\u8003\u8651\u540e\u9762\u90a3\u4e2a $ \\sum $\uff0c\u4e5f\u5c31\u662f\u5982\u4f55\u505a\u51fa**\u6bd4 $ a_i $ \u5c0f\u7684\u6570\u4e2d\uff0c\u5728 $ a_i $ \u524d\u9762\u7684\uff08\u4e0b\u6807\u66f4\u5c0f\uff09\u90a3\u4e9b\u7684\u4e0b\u6807\u4e4b\u548c**\n\n~~\u663e\u7136\u9700\u8981\u67d0\u4e9b\u6570\u636e\u7ed3\u6784~~\n\n\u56e0\u4e3a\u6d89\u53ca\u6743\u503c\u6392\u5e8f\uff0c\u6211\u4eec\u8003\u8651\u6240\u6709\u7684\u6570\u4e00\u8d77\u505a\uff08\u4e0d\u6309\u4e0b\u6807\u4e00\u4e2a\u4e00\u4e2a\u6765\uff09\n\n\u6211\u4eec\u6839\u636e\u6743\u503c\u8fdb\u884c\u6392\u5e8f\uff0c**\u4ece $ a_i $ \u6700\u5c0f\u7684\u6570\u5f00\u59cb\uff0c\u5230 $ a_i $ \u6700\u5927\u7684\u6570\u8fd9\u6837\u7684\u987a\u5e8f\u8fdb\u884c\u8ba1\u7b97**\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4 $ a_1, ..., a_n $ \u7684\u4e0b\u6807\uff0c\u5f53\u7136 $ a_i $ \u7684\u4e0b\u6807\u5c31\u662f $ i $\u3002\u4f46\u56e0\u4e3a\u6211\u4eec\u53ea\u8ba1\u7b97\u6bd4\u5f53\u524d\u6570\u6743\u503c\u5c0f\u7684\u6570\u7684\u4e0b\u6807\u548c\uff0c\u6240\u4ee5\u6b64\u65f6\u6bd4\u5f53\u524d\u6570\u6743\u503c\u5927\u7684\u6570\u7684\u4e0b\u6807\u6211\u4eec\u9700\u8981\u8bbe\u6210 $ 0 $\u3002\n\n\u53d1\u73b0\u5728\u8ba1\u7b97 $ a_i $ \u7684\u8d21\u732e\u65f6\uff0c\u6240\u6709\u6743\u503c\u6bd4 $ a_i $ \u5c0f\u7684\u6570\u90fd\u505a\u8fc7\u4e86\uff0c\u8fd9\u4e9b\u6570\u7684\u4e0b\u6807\u9700\u8981\u7d2f\u52a0\uff1b\u6bd4 $ a_i $ \u5927\u7684\u6570\u90fd\u6ca1\u6709\u505a\u8fc7\uff0c\u8fd9\u4e9b\u6570\u7684\u4e0b\u6807\u9700\u8981\u8bbe\u6210 $ 0 $\u3002\n\n\u8fd9\u542f\u53d1\u6211\u4eec\u53ef\u4ee5**\u5148\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff0c\u5728\u8ba1\u7b97\u5b8c\u4e00\u4e2a\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u540e\uff0c\u5c06\u6811\u72b6\u6570\u7ec4\u4e2d\u8bbe\u6210\u5b83\u7684\u4e0b\u6807\u201c\u6062\u590d\u201d\uff08\u4e5f\u5c31\u662f\u4ece $ 0 $ \u53d8\u4e3a\u5b83\u771f\u6b63\u7684\u4e0b\u6807\uff09**\uff0c\u4e3a\u4ee5\u540e\u7684\u8ba1\u7b97\u505a\u51c6\u5907\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97**\u6bd4 $ a_i $ \u5c0f\u7684\u6570\u4e2d\uff0c\u5728 $ a_i $ \u524d\u9762\u7684\uff08\u4e0b\u6807\u66f4\u5c0f\uff09\u90a3\u4e9b\u7684\u4e0b\u6807\u4e4b\u548c**\u4e86\uff08\u6811\u72b6\u6570\u7ec4\u67e5\u8be2 $ 1 $ ~ $ i-1 $\uff09\n\n\u540e\u4e00\u4e2a $ \\sum $ \u540c\u7406\uff0c\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff08\u4f46\u662f\u8981\u7ef4\u62a4\u8fd9\u4e00\u6bb5\u6bd4 $ a_i $ \u5c0f\u7684\u6570\u7684\u6570\u91cf\uff0c\u4ee5\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a $ n-1 $\uff09\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u66b4\u529b\u518d\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e0b\u9762\u4ee3\u7801\u5c31\u662f\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\u91cd\u65b0\u7ef4\u62a4\u7684\uff08\u8fd9\u65f6\u7ef4\u62a4\u7684\u662f $ n - j + 1 $\uff0c\u4e0d\u518d\u662f\u5355\u72ec\u7684\u4e0b\u6807 $ j $\uff09\n\n~~\uff08\u5176\u5b9e\u662f\u4e3a\u4e86\u4ee3\u7801\u5bf9\u79f0 **\u5f3a\u8feb\u75c7**\uff09~~\n\n~~\u7136\u540e\u5c31\u505a\u5b8c\u4e86~~\n\n~~\u5c31\u6ca1\u6709\u7136\u540e\u4e86~~\n\n\u51e0\u70b9\u63d0\u9192\uff1a\n\n1. \u6700\u597d ```#define int long long```\uff0c\u4e0d\u7136\u6307\u4e0d\u5b9a\u54ea\u91cc\u5c31\u5fd8\u4e86\n\n2. \u7b97\u4e24\u4e2a $ \\sum $ \u65f6\u679a\u4e3e\u7684\u662f\u6392\u540d\uff0c\u4e0d\u662f\u4e0b\u6807\uff0c\u6240\u4ee5\u8981\u8f6c\u6362\u4e00\u4e0b\n\n3. \u8bb0\u5f97\u65f6\u523b\u53d6\u6a21 ~~\uff08\u53d6\u819c\uff09~~\n\n4. \u51cf\u6cd5\u8981\u5148\u52a0\u4e0a\u6a21\u6570\u518d\u53d6\u6a21\uff0c\u4e0d\u7136\u53ef\u80fd\u4f1a\u51fa\u73b0\u8d1f\u6570\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int mod=1000000007;\nint n,a[500001];\nstruct number\n{\n\tint x,ind;\n\tnumber(int x=0,int i=0):x(x),ind(i){} \n\tbool operator<(const number& ano)const\n\t{\n\t\treturn x<ano.x;\n\t}\n}num[500001];\nint c[500001];\ninline int lowbit(int x)\n{\n\treturn x&-x;\n}\nvoid add(int x,int a)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tc[i]=(c[i]+a)%mod;\n}\nint sum(int x)\n{\n\tint ans=0;\n\tfor(int i=x;i;i-=lowbit(i))\n\t\tans=(ans+c[i])%mod;\n\treturn ans%mod;\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\tnum[i]=number(a[i],i);\n\t}\n\tsort(num+1,num+n+1);\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tans=(ans+i*(n-i+1)%mod*a[i])%mod;\n\tmemset(c,0,sizeof(c));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=num[i].ind;\n\t\tans=(ans+(n-x+1)*sum(x)%mod*a[x])%mod;\n\t\tadd(x,x);\n\t}\n\tmemset(c,0,sizeof(c));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=num[i].ind;\n\t\tans=(ans+x*(sum(n)-sum(x)+mod)%mod*a[x])%mod;\n\t\tadd(x,n-x+1);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1562852327,
        "uid": 73645,
        "name": "_ztyqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1167F \u3010Scalar Queries\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u771f\u7684\u67092300\u96be\u5ea6\u5417\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053$a_i$\u5bf9$f(l,r)$\u7684\u8d21\u732e\u7684\u7cfb\u6570\u5c31\u662f\n\n$$\\sum_{j=l}^r[a_j<a_i]+1=\\sum_{j=l}^{i-1}[a_j<a_i]+\\sum_{j=i+1}^r[a_j<a_i]+1$$\n\n\u6240\u4ee5$a_i$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u7684\u7cfb\u6570\u5c31\u662f\n\n$$(n-i+1)\\sum_{j=1}^{i-1}[a_j<a_i]j+i\\sum_{j=i+1}^n[a_j<a_i](n-j+1)+i*(n+1-i)$$\n\n\u8fd9\u5c31\u662f\u4e8c\u7ef4\u504f\u5e8f\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n```cpp\n#include<bits/stdc++.h>\n#define Rint register int\nusing namespace std;\ntypedef long long LL;\nconst int N = 500003, mod = 1e9 + 7;\nint n, a[N], b[N], c[N], tree[N], ans;\ninline int lowbit(int x){return x & -x;}\ninline void change(int pos, int val){\n\twhile(pos <= n){\n\t\ttree[pos] = (tree[pos] + val) % mod;\n\t\tpos += lowbit(pos);\n\t}\n}\ninline int query(int pos){\n\tint res = 0;\n\twhile(pos){\n\t\tres = (res + tree[pos]) % mod;\n\t\tpos -= lowbit(pos);\n\t}\n\treturn res;\n}\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(Rint i = 1;i <= n;i ++){\n\t\tscanf(\"%d\", a + i);\n\t\tb[i] = a[i];\n\t}\n\tsort(b + 1, b + n + 1);\n\tfor(Rint i = 1;i <= n;i ++) c[i] = lower_bound(b + 1, b + n + 1, a[i]) - b;\n\tfor(Rint i = 1;i <= n;i ++){\n\t\tans = (ans + (LL) a[i] * (n - i + 1) % mod * query(c[i])) % mod;\n\t\tchange(c[i], i);\n\t}\n\tmemset(tree, 0, sizeof tree);\n\tfor(Rint i = n;i;i --){\n\t\tans = (ans + (LL) a[i] * i % mod * query(c[i])) % mod;\n\t\tchange(c[i], n - i + 1);\n\t}\n\tfor(Rint i = 1;i <= n;i ++) ans = (ans + (LL) a[i] * i % mod * (n + 1 - i) % mod) % mod;\n\tprintf(\"%d\", ans);\n}\n```",
        "postTime": 1558428823,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1167F \u3010Scalar Queries\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u9053\u9898\u76ee\u5de8\u5999\u3002\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u628a$b_i\\times i$\u7684$i$\u7ed9\u5c55\u5f00\u6210\u6709\u591a\u5c11\u4e2a\u6570$\\leq i$\u3002\n\n\u8fd9\u79cd\u8f6c\u5316\u975e\u5e38\u7684\u5999\uff0c\u53ef\u4ee5\u7b80\u5316\u9898\u76ee\u3002\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e00\u5bf9\u6570$(i,j)$\uff0c\u5047\u8bbe$a_j<a_i$\uff0c\u90a3\u4e48\u6309\u7167\u4e0a\u9762\u7684\u8003\u8651\uff0c\u90a3\u4e48$i$\u5bf9$j$\u7684\u8d21\u732e\u5c31\u975e\u5e38\u660e\u663e\u4e86\uff1a\n$$\nf(i,j)=j\\times(n-i+1)\\times a_i\n$$\n\u8fd9\u4e2a\u4e5f\u662f\u975e\u5e38\u6e05\u695a\uff0c\u5c31\u662f\u5305\u542b$i$\u548c$j$\u7684\u533a\u95f4\u6709$j\\times (n-i+1)$\u4e2a\uff0c\u7136\u540e\u6bcf\u4e2a\u90fd\u4f1a\u6784\u6210$a_i$\u7684\u8d21\u732e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$j$\uff0c\u90fd\u8003\u8651\u540e\u9762\u7684\u6bd4\u4ed6\u5927\u7684$i$\uff0c\u5e76\u5c06\u4ed6\u4eec\u6c42\u548c\u3002\u90a3\u4e48\u4f1a\u53d1\u73b0\uff0c$(n-i+1)\\times a_i$\u5bf9\u4e8e\u6bcf\u4e2a$i$\u90fd\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u5b58\u4e0b\u6bcf\u4e2a\u70b9\u7684$(n-i+1)*a_i$\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u662f\u4ece\u540e\u5f80\u524d\u626b\u4e00\u904d\uff0c\u7136\u540e\u6c42\u4e00\u4e0b\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u8d21\u732e\u4e4b\u548c\u5373\u53ef\u3002\u3002\u3002\n\n**\u4f46\u662f\u8981\u8bb0\u4f4f\uff0c\u8fd9\u4e2a\u53ea\u7b97\u4e86\u4e00\u8fb9\uff0c\u5bf9\u4e8e\u53e6\u4e00\u8fb9\u7684$j>i$\u800c$a_j<a_i$\u7684\u8d21\u732e\u5e76\u6ca1\u6709\u7b97\uff0c\u6240\u4ee5\u5fc5\u987b\u518d\u4ece\u524d\u5230\u540e\u5730\u53bb\u626b\u4e00\u904d\uff0c\u518d\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u7b97\u4e00\u904d\u5373\u53ef** \n\n\u4e0b\u9762\u662f\u672c\u4eba\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define maxn 500010\n#define mod 1000000007\nusing namespace std;\ntypedef long long ll;\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch-'0'<0||ch-'0'>9){if(ch=='-') f=-1;ch=getchar();}\n    while(ch-'0'>=0&&ch-'0'<=9){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n;\nint a[maxn];\nint b[maxn];\nint find(int x)\n{\n    return lower_bound(b+1,b+n+1,x)-b;\n}\nint t[maxn];\nint lowbit(int x)\n{\n    return x&(-x);\n}\nint query(int x)\n{\n    int res=0;\n    for(int i=x;i;i-=lowbit(i))  res=(res+t[i])%mod;\n    return res;\n}\nvoid modi(int x,int y)\n{\n    for(int i=x;i<=n;i+=lowbit(i))  t[i]=(t[i]+y)%mod;\n}\nint res;\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)   a[i]=read();\n    for(int i=1;i<=n;i++)   b[i]=a[i];\n    sort(b+1,b+n+1);\n    for(int i=1;i<=n;i++)   a[i]=find(a[i]);\n    for(int i=n;i>=1;i--)\n    {\n        int tmp=(query(n)-query(a[i])+mod)%mod; \n        modi(a[i],1ll*b[a[i]]*(n-i+1)%mod);\n        res=(res+1ll*i*tmp%mod)%mod;\n    }\n    memset(t,0,sizeof(t));\n    for(int i=1;i<=n;i++)\n    {\n        int tmp=(query(n)-query(a[i])+mod)%mod; \n        modi(a[i],1ll*b[a[i]]*i%mod);\n        res=(res+1ll*(n-i+1)*tmp%mod)%mod;\n    }   \n    for(int i=1;i<=n;i++)   res=(res+1ll*b[a[i]]*i%mod*(n-i+1)%mod)%mod;\n    printf(\"%d\\n\",res);\n    return 0;\n}\n```\n",
        "postTime": 1558266163,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1167F \u3010Scalar Queries\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1167F)\n\n## \u601d\u8def\n\n\u9898\u89e3\u91cc\u5927\u591a\u90fd\u5199\u7684\u590d\u6742\u4e86\uff0c\u8fd9\u9898\u5176\u5b9e\u662f\u50bb\u903c\u9898\u3002\n\n\u8003\u8651\u62c6\u8d21\u732e\uff0c\u5047\u8bbe\u6211\u4eec\u679a\u4e3e\u5230\u4e86\u4f4d\u7f6e $i$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $i$ \u5728\u6240\u6709\u5305\u542b $i$ \u7684\u533a\u95f4\u91cc\u7684\u6392\u540d\u603b\u548c\u5c31\u597d\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a $\\mathcal O(n^3)$ \u505a\u6cd5\uff08\u4f3c\u4e4e\u6bd4\u76f4\u63a5\u66b4\u529b\u8fd8\u8981\u70c2\uff09\u3002\n\n\u4ee4 $<a_i$ \u7684\u6570\u4e3a $1$\uff0c\u522b\u7684\u6570\u4e3a $0$\u3002\n\n\u4ece\u70b9 $i$ \u5f00\u59cb\u5f80\u70b9 $1$ \u505a\u4e00\u904d\u540e\u7f00\u548c\uff0c\u8bb0\u4e3a $sum1$\uff0c\u4ece\u70b9 $i$ \u5f00\u59cb\u5f80\u70b9 $n$ \u505a\u4e00\u904d\u524d\u7f00\u548c\uff0c\u8bb0\u4e3a $sum2$\uff0c\u5bb9\u6613\u53d1\u73b0 $i$ \u5728\u533a\u95f4 $l,r$ \u4e2d\u7684\u6392\u540d\u5c31\u662f $sum1_l+sum2_r+1$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6c42 $\\sum_{l=1}^i \\sum_{r=i}^n sum1_l+sum2_r+1$\uff0c\u66b4\u529b\u6c42\u5b83\u662f $\\mathcal O(n^3)$ \u7684\u3002\n\n\u628a $1$ \u63d0\u51fa\uff0c\u5bb9\u6613\u53d1\u73b0 $1$ \u7684\u8d21\u732e\u662f $i \\times (n-i+1)$\uff0c\u7136\u540e\u8003\u8651\u5206\u522b\u8ba1\u7b97 $sum1$ \u548c $sum2$ \u7684\u8d21\u732e\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a $sum1$ \u90fd\u4f1a\u4e0e $n-i+1$ \u4e2a $sum2$ \u4ea7\u751f\u8d21\u732e\uff0c\u81f3\u4e8e $sum2$ \u5177\u4f53\u662f\u5565\u6211\u4eec\u5e76\u4e0d\u5173\u7cfb\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u7684\u53ea\u662f $sum1$ \u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e $sum2$ \u7684\u8d21\u732e\u540c\u7406\u3002\n\n\u4e8e\u662f\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u628a\u4e0a\u9762\u7684\u67ff\u5b50\u8f6c\u5316\u6210\u4e86 $\\sum_{l=1}^i sum1_l \\times (n-i+1)+\\sum_{r=i+1}^n sum2_r \\times i+i \\times (n-i+1)$\uff0c\u505a\u5230\u4e86 $\\mathcal O(n^2)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4f9d\u7136\u662f\u53ef\u4ee5\u4f18\u5316\u7684\uff0c\u590d\u6742\u5ea6\u74f6\u9888\u53ea\u5728\u4e8e $\\sum_{l=1}^i sum1_l$ \u548c $\\sum_{r=i+1}^n sum2_r$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5feb\u901f\u6c42\u51fa\u8fd9\u4e24\u4e2a\u7684\u503c\u5373\u53ef\u3002\n\n\u8003\u8651\u6bcf\u4e2a $a_j<a_i$ \u7684 $j$ \u7684\u8d21\u732e\uff0c\u6211\u4eec\u94a6\u5b9a $j$ \u5728 $i$ \u7684\u5de6\u8fb9\uff0c\u5219 $j$ \u4f1a\u5bf9 $1$ \u5230 $j$ \u7684 $sum1$ \u4ea7\u751f $1$ \u7684\u8d21\u732e\uff0c\u5b83\u7684\u8d21\u732e\u5c31\u662f $j$\u3002\n\n$j$ \u5728 $i$ \u7684\u53f3\u8fb9\u540c\u7406\uff0c\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n \\log n)$\u3002\n\n## \u7801\n\n```cpp\n//A tree without skin will surely die.\n//A man without face will be alive\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define mid ((l+r)>>1)\n#define sqr(x) ((x)*(x))\n#define all(x) (x).begin(),(x).end()\n#define Tim ((double)clock()/CLOCKS_PER_SEC)\n#define lowbit(x) (x&-x)\nint const N=5e5+10;\nint const mod=1e9+7;\nint a[N],n,b[N],pre[N],suf[N];\nstruct Tree_Array{\n\tint c[N];\n\tinline void update(int x,int v){while (x<=n) c[x]+=v,x+=lowbit(x);}\n\tinline int query(int x){int res=0;while (x) res+=c[x],x-=lowbit(x);return res;}\n}T;\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n;int ans=0;\n\tfor (int i=1;i<=n;++i) cin>>a[i],b[i]=a[i];\n\tsort(b+1,b+n+1);int l=unique(b+1,b+n+1)-b-1;\n\tfor (int i=1;i<=n;++i) a[i]=lower_bound(b+1,b+l+1,a[i])-b;\n    //\u79bb\u6563\u5316\n\tfor (int i=1;i<=n;++i)\n\t\tpre[i]=T.query(a[i]-1),T.update(a[i],i);\n\tmemset(T.c,0,sizeof(T.c));\n\tfor (int i=n;i>=1;--i)\n\t\tsuf[i]=T.query(a[i]-1),T.update(a[i],n-i+1);\n\tfor (int i=1;i<=n;++i){\n\t\tint res=0;\n\t\tres=pre[i];res*=(n-i+1);res%=mod;\n\t\tint now=suf[i];now*=i;now%=mod;\n\t\tnow+=(n-i+1)*i%mod;now%=mod;\n\t\tres+=now;res%=mod;res*=b[a[i]];res%=mod;\n\t\tans+=res;ans%=mod;\n\t}\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1670572740,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF1167F Scalar Queries"
    },
    {
        "content": "\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5206\u5f00\u7b97\u7b54\u6848\u3002\u90a3\u4e48\uff0c\u5c31\u662f\u8981\u6c42\u5bf9\u4e8e $i$\uff0c\u5305\u542b $i$ \u7684\u5b50\u6bb5\u4e2d $rank_i$ \u4e4b\u548c\u3002\u6392\u540d\u548c\u8bb0\u4e3a $t_i$\uff0c\u6709 $t_i=s(rank_i\\geq1)+s(rank_i\\geq2)+\\dots$\n\n\u5f88\u663e\u7136\u53ea\u6709 $a_j\\leq a_i$ \u7684\u624d\u4f1a\u5bf9 $t_i$ \u4ea7\u751f\u5f71\u54cd\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u8fd9\u90e8\u5206\uff0c\u7b54\u6848\u5c31\u662f\u5bf9\u4e8e $i,j$\uff0c\u5305\u542b $i,j$ \u7684\u5b50\u6bb5\u6570\u4e4b\u548c\u3002\u4ee5\u4e0b\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u82e5 $i\\leq j$\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $i\\times (n-j+1)$\u3002\n\n\u82e5 $i>j$\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $j\\times (n-i+1)$\u3002\n\n\u63a8\u5230\u8fd9\u91cc\uff0c\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e2a\u6570\u548c\u4e0b\u6807\u548c\uff0c\u6b63\u53cd\u5404\u505a\u4e00\u904d\u5373\u53ef\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define lowbit(i) (i&-i)\n\nconst int M = 1e9+7ll;\n\nint n,ans,a[500005],b[500005],t[500005];\nint c1[500005],c2[500005];\n\nvoid lsh_()\n{\n\tvector<int> v;\n\tfor(int i=1;i<=n;i++)\n\t\tv.push_back(a[i]);\n\tsort(v.begin(),v.end());\n\tfor(int i=1;i<=n;i++)\n\t\tb[i] = lower_bound(v.begin(),v.end(),a[i])-v.begin()+1;\n}\n\nvoid fix(int x,int v1,int v2)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tc1[i] += v1, c2[i] += v2;\n}\n\nint ask1(int x)\n{\n\tint s=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\n\t\ts = (s+c1[i])%M;\n\treturn s;\n}\n\nint ask2(int x)\n{\n\tint s=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\n\t\ts = (s+c2[i])%M;\n\treturn s;\n}\n\nsigned main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;cin>>a[i++]);\n\tlsh_();\n\tfor(int i=1;i<=n;i++)\t\n\t\tt[i] = i*(n-i+1)%M;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint j=ask2(b[i]-1);\n\t\tt[i] = (t[i]+j*(n-i+1)%M)%M;\n\t\tfix(b[i],1,i);\n\t}\n\tmemset(c1,0,sizeof(c1)), memset(c2,0,sizeof(c2));\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tint cnt=ask1(b[i]-1),j=ask2(b[i]-1);\n\t\tt[i] = (t[i]+i*((n+1)*cnt%M-j)%M+M)%M;\n\t\tfix(b[i],1,i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tans = (ans+t[i]*a[i])%M;\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1627530400,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010CF1167F Scalar Queries\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7ebf\u6bb5\u6811\u9898\u76ee\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u8ba1\u7b97\u8d21\u732e\uff0c\u73b0\u5c06\u6240\u6709\u7684\u6570\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8003\u8651 $i$ \u5728\u6240\u6709\u6bb5\u4e2d\u7684\u6392\u540d\u8d21\u732e\u3002\n\n\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e4b\u540e\uff0c\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\uff0c\u5e76\u5c06\u5de6\u8fb9\u548c\u53f3\u8fb9\u7ef4\u62a4\u4e24\u4e2a\u7ebf\u6bb5\u6811\u5206\u522b\u52a0\u4e00\uff0c\u8fd9\u6837\u540e\u9762\u5728\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u603b\u548c\u3002\n\n\u4f46\u662f\u5f53\u4f60\u8fd9\u4e48\u505a\u5b8c\uff0c\u4f60\u4f1a\u53d1\u73b0\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u5f53 $i$ \u5728\u5411\u53f3\u52a0\u4e00\u7684\u65f6\u5019\uff0c\u540e\u9762\u7684\u4e00\u4e2a $j>i$ \u5728\u5411\u53f3\u7edf\u8ba1\u7684\u65f6\u5019\u4f1a\u8bef\u628a $i$ \u52a0\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u76ee\u524d\u88ab\u6fc0\u6d3b\u7684\u6570\u7684\u603b\u548c\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u672c\u9898\u5e38\u6570\u53ef\u80fd\u9700\u8981\u4e00\u5b9a\u4f18\u5316\uff0c\u4e0d\u7136\u4f1a $\\texttt{TLE}$\u3002\n\n## \u4ee3\u7801\n\n\u7ebf\u6bb5\u6811\u90e8\u5206\uff1a\n\n$\\texttt{f}$ \u6570\u7ec4\u8868\u793a\u8ba1\u7b97\u6240\u6709\u4f4d\u7f6e\u7684\u548c\uff0c$\\texttt{num}$ \u8868\u793a\u7edf\u8ba1\u76ee\u524d\u5df2\u7ecf\u904d\u5386\u5230\u7684\u4f4d\u7f6e\u6570\u91cf\u3002\u4e24\u4e2a $\\texttt{change}$ \u5206\u522b\u8868\u793a\u533a\u95f4\u4f4d\u7f6e\u548c\u7684\u589e\u52a0\u548c\u5355\u70b9\u904d\u5386\u4f4d\u7f6e\u6570\u91cf\u589e\u52a0\u3002\n\n```cpp\nstruct sgt{\n\tint f[2000005],siz[2000005],lzt[2000005],num[2000005];\n\tvoid pushdown(int i){\n\t\tf[ls]=(f[ls]+siz[ls]*lzt[i])%mod;\n\t\tlzt[ls]=(lzt[ls]+lzt[i]);\n\t\tf[rs]=(f[rs]+siz[rs]*lzt[i])%mod;\n\t\tlzt[rs]=(lzt[rs]+lzt[i]);\n\t\tlzt[i]=0;\n\t}\n\tvoid pushup(int i){\n\t\tf[i]=(f[ls]+f[rs])%mod;\n\t\tsiz[i]=siz[ls]+siz[rs];\n\t\tnum[i]=num[ls]+num[rs];\n\t}\n\tvoid build(int i,int l,int r){\n\t\tif(l==r){\n\t\t\tsiz[i]=1;\n\t\t\treturn ;\n\t\t}\n\t\tbuild(Ls),build(Rs);\n\t\tpushup(i);\n\t}\n\tvoid change(int i,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&r<=qr){\n\t\t\tf[i]=(f[i]+siz[i])%mod;\n\t\t\tlzt[i]=(lzt[i]+1);\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(i);\n\t\tif(ql<=mid) change(Ls,ql,qr);\n\t\tif(qr>mid) change(Rs,ql,qr);\n\t\tpushup(i);\n\t}\n\tvoid change2(int i,int l,int r,int pos){\n\t\tif(l==r){\n\t\t\tnum[i]=1;\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(i);\n\t\tif(pos<=mid) change2(Ls,pos);\n\t\telse change2(Rs,pos);\n\t\tpushup(i);\n\t}\n\tint qry(int i,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&r<=qr) return f[i];\n\t\tif(ql>r||qr<l) return 0;\n\t\tpushdown(i);\n\t\treturn (qry(Ls,ql,qr)+qry(Rs,ql,qr))%mod;\n\t}\n\tint qrynum(int i,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&r<=qr) return num[i];\n\t\tif(ql>r||qr<l) return 0;\n\t\tpushdown(i);\n\t\treturn (qrynum(Ls,ql,qr)+qrynum(Rs,ql,qr));\n\t}\n}tl,tr;\n```\n\n\u64cd\u4f5c\u90e8\u5206\uff1a\n\n\u524d\u9762\u5df2\u7ecf\u6392\u5e8f\u8fc7\u4e86\u3002$\\texttt{ans}$ \u6bcf\u6b21\u7edf\u8ba1\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u518d\u589e\u52a0\u4e00\u6b21\u3002\u5177\u4f53\u64cd\u4f5c\u89c1\u4ee3\u7801\u3002\n\n```cpp\nfor(int i=1;i<=n;i++){\n\tans=(ans+(tl.qry(1,1,n,1,a[i].pos)+mod-tl.qrynum(1,1,n,a[i].pos,n)*a[i].pos%mod)*(n-a[i].pos+1)%mod*a[i].num%mod)%mod;\n\tans=(ans+(tr.qry(1,1,n,a[i].pos,n)+mod-tl.qrynum(1,1,n,1,a[i].pos)*(n-a[i].pos+1)%mod)*a[i].pos%mod*a[i].num%mod)%mod;\n\tans=(ans+(n-a[i].pos+1)*a[i].pos%mod*a[i].num%mod)%mod;\n\ttl.change(1,1,n,1,a[i].pos);\n\ttr.change(1,1,n,a[i].pos,n);\n\ttl.change2(1,1,n,a[i].pos);\n}\n```",
        "postTime": 1654181806,
        "uid": 116664,
        "name": "Daniel_lele",
        "ccfLevel": 8,
        "title": "CF1167F\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u5047\u8bbe\u6bcf\u4e2a$a_i$\u90fd\u662f\u5bf9\u5e94\u5b50\u4e32\u4e2d\u6700\u5c0f\u7684\uff0c\u5219\u6b64\u65f6\u6bcf\u4e2a$a_i$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$\\sum_{i=1}^n (n-i+1)*a_i*i$\n\n\u4f46\u662f\u663e\u7136\u6bcf\u4e2a$a_i$\u4e0d\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e$j$\uff0c\u5f53$a_j < a_i$\u65f6\uff0c\u8fd9\u4e24\u4e2a\u6570\u5c31\u4f1a\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u56e0\u4e3a$a_i$\u7684\u6392\u540d\u88ab\u63d0\u9ad8\u4e86\n\n\u5f53$j < i$\u65f6\uff0c $i,j$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$j*(n - i + 1)*a_i$\n\n\u5f53$i < j$\u65f6\uff0c $i,j$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$i*(n - j + 1)*a_i$\n\n\u6211\u4eec\u5148\u8003\u8651$j < i$\u7684\u60c5\u51b5\uff0c\u53e6\u4e00\u79cd\u60c5\u51b5\u4e5f\u540c\u7406\u3002\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e$j$\uff0c\u8003\u8651\u6240\u6709\u5728$j$\u540e\u9762\u7684$i$\u3002\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a$i\uff0ca_i*(n - i + 1)$\u4e00\u5b9a,\u4e8e\u662f\u6211\u4eec\u5b58\u4e0b\u6bcf\u4e2a\u70b9\u7684$a_i*(n - i + 1)$\u3002\u7136\u540e\u4ece\u540e\u5f80\u524d\u679a\u4e3e$j$\uff0c\u67e5\u8be2\u6bd4\u5b83\u5927\u7684\u8d21\u732e\u4e4b\u548c\n\n\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef \u8bb0\u5f97\u79bb\u6563\u5316\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst long long mod = 1e9 + 7;\nconst int N = 1e6 + 10;\nconst int inf = INT_MAX;\n\n#define int long long\n#define FOR(i,a,b) for(int i = a;i <= b;i++)\n#define _FOR(i,a,b) for(int i = a;i >= b;i--)\n\ntemplate<typename T> void read(T &x)\n{\n    x = 0;int f = 1;\n    char c = getchar();\n    for(;!isdigit(c);c = getchar()) if(c == '-') f = -1;\n    for(;isdigit(c);c = getchar()) x = x * 10 + c - '0';\n    x *= f;\n}\n\nint ans,T,n,c[N],a[N],A[N];\n\nint query(int x)\n{\n\tint ans = 0;\n\tfor(; x; x -= x & -x)\n\t\tans += c[x],ans %= mod;\n\treturn ans;\n}\n\nvoid change(int x,int y)\n{\n\tfor(; x <= n; x += x & -x)\n\t\tc[x] = (c[x] + y) % mod;\n}\n\nsigned main()\n{\n    //freopen(\".in\",\"r\",stdin);\n    //freopen(\".out\",\"w\",stdout);\n\tread(n);\n\tFOR(i,1,n)\n\t\tread(a[i]),A[i] = a[i];\n\tFOR(i,1,n)\n\t\tans = (ans + a[i] * i % mod * (n - i + 1) % mod) % mod;\n\tsort(A + 1,A + 1 + n); \n\tFOR(i,1,n)\n\t\ta[i] = lower_bound(A + 1,A + 1 + n,a[i]) - A;\n\t_FOR(i,n,1)\n\t{\n\t\tint sum = (query(n) - query(a[i]) + mod) % mod;\n\t\tchange(a[i],A[a[i]] * (n - i + 1) % mod);\n\t\tans = (ans + sum * i % mod) % mod;\n\t}\n\tmemset(c,0,sizeof(c));\n\tFOR(i,1,n)\n\t{\n\t\tint sum = (query(n) - query(a[i]) + mod) % mod;\n\t\tchange(a[i],A[a[i]] * i % mod);\n\t\tans = (ans + sum * (n - i + 1) % mod) % mod;\n\t}\n\tprintf(\"%lld\\n\",ans);\n    return 0;\n}\n\n\n\n```\n",
        "postTime": 1595250761,
        "uid": 93382,
        "name": "_gjm2005_",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1167F \u3010Scalar Queries\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u8fd9\u9053\u9898\u633a\u5999\u7684\u3002\n\n# \u9898\u9762\n\n[CF1167F Scalar Queries](https://www.luogu.org/problem/CF1167F)\n\n# Solution\n\n\u8fd9\u9053\u9898\u76f4\u63a5\u6a21\u62df\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u8003\u8651\u6362\u4e2a\u601d\u8def\u3002\n\n\u6211\u4eec\u7edf\u8ba1\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$ \uff0c\u5b83\u88ab\u8ba1\u7b97\u4e86\u51e0\u6b21\u3002\n\n\u6392\u5e8f\u540e\uff0c\u5047\u5982 $a_i$ \u5904\u4e8e\u7b2c $k$ \u4e2a\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u591a\u7b97 $k-1$ \u6b21\u3002\u90a3\u4e48\u76f8\u5f53\u4e8e\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u6bcf\u4e00\u4e2a\u6bd4 $a_i$ \u5c0f\u7684\u6570\u90fd\u4f1a\u4f7f $a_i$ \u591a\u7b97\u4e00\u6b21\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6bd4 $a_i$ \u5c0f\u7684\u6570\u80fd\u5728\u591a\u5c11\u4e2a\u533a\u95f4\u91cc\u9762\u88ab\u5305\u542b\u5373\u53ef\u3002\n\n1. \u82e5 $a_j<a_i,j<i$ \uff0c\u5219\u540c\u65f6\u5305\u542b $a_i,a_j$ \u7684\u533a\u95f4\u6709 $j\\cdot (n-i+1)$ \u4e2a\uff0c\u90a3\u4e48 $a_i$ \u5c31\u4f1a\u88ab\u591a\u7b97 $j\\cdot (n-i+1)$ \u6b21\u3002\n2. \u82e5 $a_j<a_i,j>i$ \uff0c\u5219\u540c\u65f6\u5305\u542b $a_i,a_j$ \u7684\u533a\u95f4\u6709 $i\\cdot(n-j+1)$ \u4e2a\uff0c\u90a3\u4e48 $a_i$ \u5c31\u4f1a\u88ab\u591a\u7b97 $i\\cdot(n-j+1)$ \u6b21\u3002\n\n\u6211\u4eec\u6309\u7167\u6743\u503c\u5927\u5c0f\u5bf9 $a$ \u6570\u7ec4\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u63d2\u5165\uff0c\u7edf\u8ba1\u4e24\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6743\u503c\u76f8\u7b49\u7684\uff0c\u63d2\u5165\u987a\u5e8f\u662f\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u7684\uff0c\u7b80\u5355\u63a8\u4e00\u4e0b\u5373\u53ef\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il _print(T x){\n\tif(x/10) _print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class T>il print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\t_print(x);\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 5e5+5,mod = 1e9+7;\nint n,ans;\nit add(int x,int y){return x+y>=mod?x+y-mod:x+y;}\nit mul(int x,int y){return 1ll*x*y%mod;}\nstruct Node{\n\tint val,pos;\n\tbool operator <(const Node &t) const{\n\t\treturn val<t.val;\n\t}\n}node[MAXN];\n#define lc (cur<<1)\n#define rc (cur<<1|1)\nstruct Seg_Tree{\n\tint sum1,sum2;\n}T[MAXN<<2];\nil pushup(int cur){T[cur].sum1=add(T[lc].sum1,T[rc].sum1),T[cur].sum2=add(T[lc].sum2,T[rc].sum2);}\nil updata(int cur,int l,int r,int pos){\n\tif(l==r) return T[cur].sum1=pos,T[cur].sum2=n-pos+1,void();\n\tif(mid>=pos) updata(lc,l,mid,pos);\n\telse updata(rc,mid+1,r,pos);\n\tpushup(cur);\n}\nit query1(int cur,int l,int r,int L,int R){\n\tif(l>=L&&r<=R) return T[cur].sum1;\n\tri res=0;\n\tif(mid>=L) res=add(res,query1(lc,l,mid,L,R));\n\tif(R>mid) res=add(res,query1(rc,mid+1,r,L,R));\n\treturn res;\n}\nit query2(int cur,int l,int r,int L,int R){\n\tif(l>=L&&r<=R) return T[cur].sum2;\n\tri res=0;\n\tif(mid>=L) res=add(res,query2(lc,l,mid,L,R));\n\tif(R>mid) res=add(res,query2(rc,mid+1,r,L,R));\n\treturn res;\n}\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n);\n\tfor(ri i=1;i<=n;++i) read(node[i].val),node[i].pos=i;\n\tsort(node+1,node+1+n);\n\tfor(ri i=1;i<=n;++i){\n\t\tif(node[i].pos!=1) ans=add(ans,mul(mul(query1(1,1,n,1,node[i].pos-1),n-node[i].pos+1),node[i].val));\n\t\tif(node[i].pos!=n) ans=add(ans,mul(mul(query2(1,1,n,node[i].pos+1,n),node[i].pos),node[i].val));\n\t\tupdata(1,1,n,node[i].pos);\n\t\tans=add(ans,mul(node[i].val,mul(node[i].pos,n-node[i].pos+1)));\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u8981\u6293\u4f4f\u95ee\u9898\u7684\u672c\u8d28\uff0c\u5584\u4e8e\u5c06\u95ee\u9898\u8f6c\u6362\u6210\u5bb9\u6613\u6c42\u89e3\u7684\u5f62\u5f0f\u3002",
        "postTime": 1570581889,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "CF1167F Scalar Queries \u9898\u89e3"
    }
]