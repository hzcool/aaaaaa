[
    {
        "content": "\u4e8c\u5206\u7b54\u6848 + \u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n\u524d\u8a00\uff1a\u8fd9\u9898\u4e3a\u4ec0\u4e48\u8981\u5199\u7f51\u7edc\u6d41\u554a\u3002\n\n~~\u5176\u5b9e\u6211\u4f1a\u7f51\u7edc\u6d41~~\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\n\n- \u4ee4\u4e00\u4e2a\u6709\u89e3\u7684\u65f6\u95f4\u4e3a $t_0$\uff0c\u82e5\u4e00\u4e2a\u65f6\u95f4 $t_1>t_0$\u3002\u5219 $t_1$ \u6709\u89e3\uff0c\u56e0\u4e3a $t_1$ \u5728 $t_0$ \u8fd9\u4e48\u591a\u65f6\u95f4\u7684\u57fa\u7840\u4e0a\u518d\u52a0\u4e0a\u4e00\u4e9b\u65f6\u95f4\uff0c\u663e\u7136\u53ef\u4ee5\u5148\u7528 $t_0$ \u7684\u65f6\u95f4\u8fbe\u5230\u6709\u89e3\u72b6\u6001\uff0c\u7136\u540e\u5269\u4e0b\u7684\u65f6\u95f4\u4e0d\u7834\u574f\u6709\u89e3\u72b6\u6001\uff0c\u5c31\u662f\u4e00\u79cd\u6709\u89e3\u7684\u65b9\u6848\u3002\n\n- \u4ee4\u4e00\u4e2a\u65e0\u89e3\u7684\u65f6\u95f4\u4e3a $t_2$\uff0c\u82e5\u4e00\u4e2a\u65f6\u95f4 $t_3<t_2$\uff0c\u5219 $t_3$ \u65e0\u89e3\u3002\u8bbe $t_2$ \u65f6\u95f4\u5185\u5230\u8fbe\u70b9\u7684\u4eba\u4e3a $p_2$\uff08$p_3$ \u540c\u7406\uff09\uff0c$q$ \u4e3a $t_3+1\\sim t_2$ \u65f6\u95f4\u5185\u5230\u8fbe\u7684\u4eba\uff0c\u663e\u7136\u6709 $p_2=p_3+q$\uff0c\u90a3\u4e48 $p_3=p_2-q$\u3002\u56e0\u4e3a\u662f\u4eba\u6570\uff0c\u6240\u4ee5 $q \\ge 0$\uff0c\u56e0\u6b64 $p_3\\le p_2$\uff0c\u56e0\u4e3a $t_2$ \u65e0\u89e3\uff0c\u6240\u4ee5 $p_2<k$\uff0c\u56e0\u6b64 $p_3<k$\uff0c$t_3$ \u65e0\u89e3\u3002\n\n\u8fd9\u4e2a\u4e0d\u5c31\u662f\u5355\u8c03\u6027\u5417\uff1f\u56e0\u6b64\u8003\u8651\u4e8c\u5206\u65f6\u95f4\u3002\n\n\u7528\u4ec0\u4e48\u4f5c\u4e3a `check()` \u51fd\u6570\uff1f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u82e5\u4e0d\u662f\u5339\u914d\uff0c\u76f8\u5f53\u4e8e\u662f\u591a\u4e2a\u4eba\u5230\u8fbe\u540c\u4e00\u4e2a\u70b9\uff0c\u663e\u7136\u82e5\u591a\u51fa\u6765\u7684\u90a3\u4e9b\u4eba\u4e0d\u5230\u8fbe\u8fd9\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u70b9\u8fd8\u662f\u88ab\u4e00\u4e2a\u4eba\u8986\u76d6\uff0c\u8986\u76d6\u6570\u4e0d\u53d8\u3002\u56e0\u6b64\u53ef\u4ee5\u8ba9\u5269\u4f59\u7684\u4eba\u53bb\u5f80\u5176\u5b83\u70b9\uff0c\u6269\u5927\u8986\u76d6\u6570\uff0c\u4ece\u800c\u4f7f\u5f53\u524d\u72b6\u6001\u66f4\u8d8b\u8fd1\u4e8e\u6709\u89e3\u3002\u4e00\u4e2a\u4eba\u5bf9\u5e94\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e0d\u5c31\u662f\u5339\u914d\u5417\uff1f\n\n\u90a3\u4e48\u6b64\u65f6\u4e00\u7ec4\u5339\u914d\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4eba\u5bf9\u5e94\u4e86\u4e00\u4e2a\u70b9\uff0c\u6700\u5927\u5339\u914d\u76f8\u5f53\u4e8e\u6700\u591a\u7684\u4eba\u5bf9\u5e94\u4e86\u6700\u591a\u7684\u70b9\uff0c\u5373\u6700\u591a\u88ab\u4eba\u8986\u76d6\u7684\u70b9\u6570\u3002\n\n\u82e5\u6700\u5927\u5339\u914d $\\ge k$\uff0c\u90a3\u4e48\u6309\u7167\u6700\u5927\u5339\u914d\u7684\u65b9\u5f0f\u53bb\u8986\u76d6\u5c31\u53ef\u4ee5\u5f97\u5230\u89e3\uff0c\u8fd4\u56de\u6709\u89e3\u3002\u5426\u5219\u8986\u76d6\u70b9\u6570\u6700\u591a\u7684\u65b9\u6848\u90fd $<k$\uff0c\u663e\u7136\u6240\u6709\u7684\u65b9\u6848\u90fd $<k$\uff0c\u8fd4\u56de\u65e0\u89e3\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u4eba\u770b\u4f5c\u5de6\u90e8\u70b9\uff0c\u9876\u70b9\u770b\u4f5c\u53f3\u90e8\u70b9\uff0c\u82e5 $dis_{x_i,j}\\le t$\uff08$t$ \u662f\u4e8c\u5206\u7684\u65f6\u95f4\uff09\uff0c\u5219\u8bf4\u660e $i$ \u8fd9\u4e2a\u4eba\u53ef\u4ee5\u5728 $t$ \u65f6\u95f4\u5185\u5230\u8fbe $j$\uff0c\u5373\u53ef\u4ee5\u5339\u914d\uff0c\u8fde\u8fb9 $i\\rightarrow j$\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981 `floyd` \u9884\u5904\u7406\u51fa\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u3002\n\n`check()` \u4e2d\u7684\u4e8c\u5206\u56fe\u5339\u914d\u6211\u7528\u7684 `Hungary`\uff0c\u4e0d\u6bd4 `Dinic` \u5dee\uff0c`vector` \u5438\u6c27\u53ef\u4ee5\u6700\u4f18\u89e3 `rk2`\u3002\n\n\u6ce8\u610f\u5224\u91cd\u8fb9\uff0c\u5426\u5219\u559c\u63d0 `WA on #6`\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 605;\nint n, m, t, k, a[N], f[N][N], ma[N << 1], l, r = 1731311, ans = -1;\nvector<int> g[N << 1];\nbool vis[N << 1];\nbool dfs(int x) {\n    for (int i : g[x]) {\n        if (!vis[i]) {\n            vis[i] = 1;\n            if (!ma[i] || dfs(ma[i])) {\n                ma[i] = x;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\ninline bool check(int x) {\n    memset(g, 0, sizeof(g));\n    for (int i = 1; i <= t; ++i) {\n        for (int j = 1; j <= n; ++j) {\n            if (f[a[i]][j] <= x) {\n                g[i].emplace_back(j + t);//\u907f\u514d\u4e0e\u5de6\u90e8\u70b9\u51b2\u7a81\n            }\n        }\n    }\n    memset(ma, 0, sizeof(ma));\n    int s = 0;\n    for (int i = 1; i <= t; ++i) {\n        memset(vis, 0, sizeof(vis));\n        s += dfs(i);\n    }\n    return s >= k;\n}\nint main() {\n    memset(f, 0x3f, sizeof(f));\n    scanf(\"%d%d%d%d\", &n, &m, &t, &k);\n    for (int i = 1; i <= n; ++i) {\n        f[i][i] = 0;\n    }\n    for (int i = 1; i <= t; ++i) {\n        scanf(\"%d\", &a[i]);\n    }\n    for (int i = 1, u, v, w; i <= m; ++i) {\n        scanf(\"%d%d%d\", &u, &v, &w);\n        f[u][v] = f[v][u] = min(f[u][v], w);//\u5224\u91cd\u8fb9\n    }\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n            for (int k = 1; k <= n; ++k) {\n                f[j][k] = min(f[j][k], f[j][i] + f[i][k]);\n            }\n        }\n    }\n    while (l <= r) {\n        int m = l + r >> 1;\n        if (check(m)) {\n            r = (ans = m) - 1;\n        } else {\n            l = ++m;\n        }\n    }\n    printf(\"%d\", ans);\n}\n```\n",
        "postTime": 1664799847,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "CF852D"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u771f\u7684\u662f\uff0c\u592a\u5751\u4e86~~\n## \u9898\u610f\n\n\u6211\u89c9\u5f97\u5df2\u7ecf\u89e3\u91ca\u7684\u5f88\u6e05\u695a\u4e86--__--\n\n## \u601d\u8def\n\n\u8fd9\u9053\u9898\u65f6\u95f4\u4e0a\u7ed9\u7684\u6700\u5927\u503c\u8ba9\u5b83\u5929\u7136\u7528\u4e8c\u5206\u89e3\u51b3\n\n\u6765\u770b\u4e00\u4e0b\uff0c\u53d1\u73b0\u8fd9\u4e2a\u6570\u636e\u80fd\u7528 Floyd \u6c42\u6700\u77ed\u65f6\u95f4\u3002\n\n\u6240\u6709\u4eba\u4e71\u8d70\u53ef\u4ee5\u770b\u6210\u662f\u7f51\u7edc\u6d41\u6d41\u6765\u6d41\u53bb\uff0c\u6240\u4ee5\u52a0\u4e0a\u4e00\u6ce2 Dinic \u6c42\u6700\u5927\u503c\u5c31\u884c\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bb2\u5c31\u662f $i$ \u8282\u70b9\uff0c\u5728 $tx$ \u65f6\u95f4\u91cc\u80fd\u591f\u5230\u8fbe $j$ \u8282\u70b9\u7684\u8bdd\u5c31\u52a0\u4e00\u6761\u8fb9\u3002\n\n\u4f59\u4e0b\u7684\u8fde\u4e00\u4e0b\u8d85\u6e90\u548c\u8d85\u6c47\u3002\n\n~~\u8fd8\u6709\uff0c\u6211\u8bda\u631a\u63a8\u8350\u4e0d\u8981\u7528\u957f\u957f\uff0c\u7528\u6574\u5f62\u5c31\u884c\u4e86\uff0c\u4e0d\u77e5\u9053\u548b\u5c31\u9519\u4e86~~\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 2005\n#define maxm 1500005\nusing namespace std;\n\nnamespace q_wr {\n\tinline int read() {\n\t\tchar c = getchar();\n\t\tint x = 0, f = 1;\n\t\twhile (c < '0' || c > '9') {\n\t\t\tif (c == '-') f = -1;\n\t\t\tc = getchar();\n\t\t}\n\t\twhile (c >= '0' && c <= '9') {\n\t\t\tx = (x << 1) + (x << 3) + c - '0';\n\t\t\tc = getchar();\n\t\t}\n\t\treturn x * f;\n\t}\n\tinline void write(int x) {\n\t\tif (x < 0) {\n\t\t\tx = ~(x - 1);\n\t\t\tputchar('-');\n\t\t}\n\t\tif (x > 9)\n\t\t\twrite(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\n\nusing namespace q_wr;\n\nstruct edge {\n\tint v, nxt, w;\n} e[maxm];\n\nint n, m, s, t = 2002, head[maxn], dep[maxn], dis[maxn][maxn], k = 1;\nint vs, maxk, a[maxn];\n\ninline void add (int u, int v, int w) {\n\te[++k] = {v, head[u], w};\n\thead[u] = k;\n}\n\ninline bool bfs () {\n\tmemset(dep, 0, sizeof dep);\n\tqueue <int> q;\n\tdep[s] = 1;\n\tq.push(s);\n\twhile (!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].v;\n\t\t\tif (e[i].w && !dep[v]) {\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\n\ninline int dfs (int u, int in) {\n\tif (u == t) return in;\n\tint out = 0;\n\tfor (int i = head[u]; i && in; i = e[i].nxt) {\n\t\tint v = e[i].v;\n\t\tif (e[i].w && dep[v] == dep[u] + 1) {\n\t\t\tint res = dfs(v, min(e[i].w, in));\n\t\t\tin -= res;\n\t\t\tout += res;\n\t\t\te[i].w -= res;\n\t\t\te[i ^ 1].w += res;\n\t\t}\n\t}\n\tif (!out) dep[u] = 0;\n\treturn out;\n}//Dinic\u6a21\u677f \n\ninline void floyd () {\n\tfor (int l = 1; l <= vs; l++)\n\t\tfor (int i = 1; i <= vs; i++)\n\t\t\tfor (int j = 1; j <= vs; j++)\n\t\t\t\tif (dis[i][j] > dis[i][l] + dis[l][j])\n\t\t\t\t\tdis[i][j] = dis[i][l] + dis[l][j];\n}//Floyd\u7684\u6a21\u677f \n\ninline bool check (int tx) {\n\tmemset(head, 0, sizeof(head)), k = 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tadd(s, i, 1), add (i, s, 0);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= vs; j++)\n\t\t\tif (dis[a[i]][j] <= tx)//\u6ce8\u610f\u4f4d\u7f6e\u5728a[i] \n\t\t\t\tadd (i, j + n, 1), add (j + n, i, 0);\n\tfor (int i = 1; i <= vs; i++)\n\t\tadd (i + n, t, 1), add (t, i + n, 0);\n\tint res = 0;\n\twhile (bfs())\n\t\tres += dfs(s, 1e9);\n\treturn (res >= maxk);\n}\n\nsigned main () {\n\tvs = read(), m = read(), n = read(), maxk = read();\n\tfor (int i = 1; i <= n; i++)\n\t\ta[i] = read();\n\tfor (int i = 1; i <= vs; i++) {\n\t\tfor (int j = 1; j < i; j++)  {\n\t\t\tdis[i][j] = dis[j][i] = 1e9;\n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\tint u = read(), v = read(), w = read();\n\t\tdis[u][v] = dis[v][u] = min(w, dis[u][v]);\n\t}\n\tfloyd();\n\tregister int mid, l = 0, r = 1731311;\n\tif (!check(r)) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\twhile (l < r) {\n\t\tmid = (l + r) >> 1;\n\t\tif (check(mid))\n\t\t\tr = mid;\n\t\telse\n\t\t\tl = mid + 1;\n\t}\n\twrite(l);\n}\n```",
        "postTime": 1634347713,
        "uid": 317495,
        "name": "JWRuixi",
        "ccfLevel": 7,
        "title": "Solution CF852D"
    },
    {
        "content": "## \u3010\u7f51\u7edc\u6d41\u8bb0\u5f55\u3011CF852D Exploration plan\n\n### Description\n\n\u7ed9\u5b9a\u4e00\u4e2a $v$ \u4e2a\u70b9 $e$ \u6761\u8fb9\u7684\u5e26\u6743\u65e0\u5411\u56fe\uff0c\u5728\u56fe\u4e0a\u6709 $n$ \u4e2a\u4eba\uff0c\u7b2c $i$ \u4e2a\u4eba\u4f4d\u4e8e\u70b9 $x_i$\uff0c\u4e00\u4e2a\u4eba\u901a\u8fc7\u4e00\u6761\u8fb9\u9700\u8981\u82b1\u8d39\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u7684\u65f6\u95f4\u3002\n\n\u73b0\u5728\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u81ea\u7531\u5730\u8d70\u3002\u6c42\u6700\u77ed\u591a\u5c11\u65f6\u95f4\u540e\u6ee1\u8db3\u7ed3\u675f\u540e\u6709\u4eba\u7684\u8282\u70b9\u6570 $\\ge m$\u3002\n\n$n,v\\le 500$\n\n### solution\n\n$v\\le 500$ \u9996\u5148\u8003\u8651\u628a\u4e24\u4e24\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u9884\u5904\u7406\u51fa\u6765\uff0c\u7528 $\\text{Floyd}$ \u5373\u53ef\u505a\u5230 $O(v^3)$\u3002\n\n\u8003\u8651\u4e8c\u5206\uff0c\u53d8\u6210\u4e00\u4e2a\u5224\u5b9a\u95ee\u9898\u3002\u4e5f\u5c31\u662f\u6c42\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u6ee1\u8db3\u7ed3\u675f\u540e\u7684\u6709\u4eba\u7684\u8282\u70b9\u6570\u6700\u5927\u3002\n\n\u8003\u8651\u6700\u5927\u6d41\uff0c\u5efa\u56fe\u6bd4\u8f83\u663e\u7136\u3002\u5177\u4f53\u7684\uff0c$(s,i,1)$ \uff0c\u7136\u540e $i$ \u5411\u6bcf\u4e2a\u53ef\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u5230\u8fbe\u7684\u5730\u70b9 $j$ \uff0c$(i,j,1)$\uff0c\u6700\u540e $(j,t,1)$\u3002\n\n### Code\n\n```cpp\n#define rg register\n#define ll long long \n#define maxn 1005\n#define maxm 2000005\n#define put() putchar('\\n')\nconst int inf=1e9;\nint dis[maxn][maxn],v,e,n,m,f[maxn];\nnamespace Dinic{\n\tint head=1,h[maxn*2],now[maxn*2],deep[maxn*2],s,t;\n\tqueue<int>q;\n    struct yyy{\n    \tint to,w,z;\n    \tinline void add(int x,int y,int W){\n    \t\tto=y;z=h[x];h[x]=head;w=W;\n\t\t}\n\t}a[maxm];\n\tinline void ins(int x,int y,int z){\n\t\ta[++head].add(x,y,z);\n\t\ta[++head].add(y,x,0);\n\t}\n\tinline void clear(void){\n\t\thead=1;memset(h,0,sizeof(h));\n\t}\n\tinline int bfs(void){\n\t\twhile (!q.empty()) q.pop();\n\t\tmemset(deep,0,sizeof(deep));\n\t\trg int i,x;q.push(s);deep[s]=1;\n\t\twhile (!q.empty()){\n\t\t\tx=q.front();q.pop();now[x]=h[x];\n\t\t\tfor (i=h[x];i;i=a[i].z)\tif (!deep[a[i].to]&&a[i].w)\tdeep[a[i].to]=deep[x]+1,q.push(a[i].to);\n\t\t}\n\t    return deep[t];\n\t}\n\tinline int dfs(int x,int in){\n\t\tif (x==t||!in) return in;\n\t\trg int rest=in,sum,i;\n\t\tfor (i=now[x];i&&rest;now[x]=i,i=a[i].z)\n\t\t    if (a[i].w&&deep[a[i].to]==deep[x]+1){\n\t\t\t    sum=dfs(a[i].to,min(a[i].w,rest));\n\t\t\t    if (!sum) deep[a[i].to]=0;\n\t\t\t    a[i].w-=sum;a[i^1].w+=sum;rest-=sum;\n\t\t    }\n\t\treturn in-rest;\n\t}\n\tinline int Dinic(void){\n\t\tint ans=0;\n\t\twhile (bfs()) ans+=dfs(s,inf);\n\t\treturn ans;\n\t}\n}//Dinic\u677f\u5b50\ninline int check(int val){\n\tDinic::clear();Dinic::s=0;Dinic::t=n+v+1;\n\trg int i,j;\n\tfor (i=1;i<=n;i++)\n\t    for (j=1;j<=v;j++)\n\t        if (dis[f[i]][j]<=val) Dinic::ins(i,j+n,1);\n\tfor (i=1;i<=n;i++) Dinic::ins(Dinic::s,i,1);\n\tfor (i=n+1;i<=n+v;i++) Dinic::ins(i,Dinic::t,1);\n\tint sum=Dinic::Dinic();\n\treturn sum>=m;\n}\nsigned main(){\n\trg int x,y,z,i,j,k;\n\tmemset(dis,0x3f,sizeof(dis));\n\tread(v);read(e);read(n);read(m);\n\tfor (i=1;i<=n;i++) read(f[i]);\n\twhile (e--){\n\t\tread(x);read(y);read(z);\n\t    dis[x][y]=dis[y][x]=min(z,dis[x][y]);\n\t}\n\tfor (i=1;i<=v;i++) dis[i][i]=0;\n\tfor (k=1;k<=v;k++)\n\t    for (i=1;i<=v;i++)\n\t        for (j=1;j<=v;j++)\n\t            if (dis[i][j]>dis[i][k]+dis[k][j]) dis[i][j]=dis[i][k]+dis[k][j];\n\trg int mid,l=-1,r=1731312;\n\tif (!check(r)) return puts(\"-1\"),0;\n\twhile (l+1<r){\n\t\tmid=l+r>>1;\n\t\tif (check(mid)) r=mid;\n\t\telse l=mid;\n\t}\n\tprintf(\"%d\",r);\n\treturn 0;\n}\n```\n\n\n\n ",
        "postTime": 1626448644,
        "uid": 51569,
        "name": "\u8fdd\u89c4\u7528\u6237\u540dFkZyA0!2",
        "ccfLevel": 0,
        "title": "\u3010\u7f51\u7edc\u6d41\u8bb0\u5f55\u3011CF852D Exploration plan"
    },
    {
        "content": "[$$\\Large{\\color{CornflowerBlue}{\\mathfrak{Blog}}}$$](https://www.cnblogs.com/zsbzsb/p/11684039.html)\n\n----\n### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u5f20 $V$ \u4e2a\u70b9\uff0c$M$ \u6761\u8fb9\u7684\u8fb9\u5e26\u6743\u65e0\u5411\u56fe\uff0c\u6709 $N$ \u4e2a\u4eba\u5206\u5e03\u5728\u56fe\u4e0a\u7684\u70b9\u4e0a\uff0c\u7b2c $i$ \u4e2a\u4eba\u5728 $x_i$ \u8fd9\u4e2a\u70b9\u4e0a\uff0c\u5b9a\u4e49\u4ece\u4e00\u4e2a\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u65f6\u95f4\u4e3a\u6240\u8d70\u7684\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u4e4b\u548c\uff0c\u95ee\u81f3\u5c11\u8fc7\u591a\u4e45\u624d\u53ef\u4ee5\u6ee1\u8db3\u81f3\u5c11\u6709 $K$ \u4e2a\u70b9\u4e0a\u6709\u4eba\u3002  \n\n\u6570\u636e\u8303\u56f4\uff1a  \n$1\\le V \\le600,1\\le E \\le 20000,1\\le N \\le\\min(V,200),1\\le K \\le N$\n### \u57fa\u672c\u601d\u8def\n\u9996\u5148\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002  \n\u5bf9\u4e8e\u5f53\u524d\u4e8c\u5206\u5230\u7684 $mid$\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eba\uff0c\u90fd\u5411\u4ed6\u53ef\u4ee5\u53bb\u5230\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\uff08\u8def\u5f84\u7684\u6700\u77ed\u8ddd\u79bb\u53ef\u4ee5\u7528 $\\text{Floyd}$ \u9884\u5904\u7406\u4e00\u4e0b)\uff0c\u7136\u540e\u76f4\u63a5\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5c31\u597d\u4e86\u3002  \n### \u7ec6\u8282\u6ce8\u610f\u4e8b\u9879\n\u8bb0\u5f97\u5224\u65e0\u89e3\n### \u53c2\u8003\u4ee3\u7801\n\u6709\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u53bb\u770b\u6211\u535a\u5ba2 $\\uparrow\\uparrow\\uparrow$",
        "postTime": 1571193738,
        "uid": 87839,
        "name": "Sangber",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF852D \u3010Exploration plan\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF852D)\n\n\u540c\u6b65\u53d1\u8868\u4e8e\u6211\u7684 [$\\text{cnblog}$](https://www.cnblogs.com/UperFicial/p/16038158.html)\u3002\n\n### $\\texttt{Description}$\n\n\u7ed9\u4f60 $v$ \u4e2a\u70b9 $e$ \u6761\u8fb9\u7684\u5e26\u6743\u65e0\u5411\u56fe\uff0c$n$ \u4e2a\u4eba\u4f4d\u4e8e\u82e5\u5e72\u4e2a\u70b9\u4e0a\u4e14\u53ef\u4ee5\u5730\u8d70\uff0c\u6700\u5c11\u591a\u957f\u65f6\u95f4\u81f3\u5c11\u6709 $m$ \u4e2a\u70b9\u4e0a\u81f3\u5c11\u6709\u4e00\u4e2a\u4eba\u3002\n\n### $\\texttt{Solution}$\n\n~~\u7784\u4e86\u4e00\u773c\u9898\u89e3\u624d\u77e5\u9053\u53ef\u4ee5\u4e8c\u5206\u505a\u3002~~\n\n\u76f4\u63a5\u505a\u662f\u4e0d\u597d\u505a\u7684\uff0c\u4f46\u662f\u89c2\u5bdf\u53ef\u5f97\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002\n\n\u8003\u8651\u4e8c\u5206\u4e00\u4e2a $k$\uff0c\u8868\u793a\u6bcf\u4e2a\u4eba\u7684\u884c\u8d70\u65f6\u95f4\u90fd\u4e0d\u5927\u4e8e $k$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a $k$ \u6765\u5efa\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u4e0e\u80fd\u8d70\u5230\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u8fde\u51fa\u6765\u7684\u56fe\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u4e86\uff0c\u5de6\u8fb9\u662f\u4eba\uff0c\u53f3\u8fb9\u662f\u56fe\u4e0a\u7684\u70b9\uff0c\u9700\u8981\u6c42\u7684\u5c31\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4eba\u53ea\u80fd\u8d70\u5230\u4e00\u4e2a\u70b9\u4e0a\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5efa\u7acb\u6e90\u70b9 $s$ \u548c\u6c47\u70b9 $t$\uff0c\u5bf9\u4e8e $s$ \u8fde\u5411\u6bcf\u4e00\u4e2a\u4eba\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u6bcf\u4e2a\u70b9\u8fde $t$\uff0c\u5bb9\u91cf\u540c\u6837\u4e3a $1$\uff0c\u8dd1\u4e00\u904d $\\text{Dinic}$ \u5373\u53ef\u3002\n\n\u53e6\u5916\u9700\u8981\u9884\u5904\u7406\u4e00\u4e2a $\\Theta(n^3)$ \u7684 $\\text{Floyd}$\uff0c\u5efa\u56fe\u65f6\u9700\u8981\u5224\u65ad\u4e24\u70b9\u7684\u8ddd\u79bb\u662f\u5426\u4e0d\u5927\u4e8e $k$\u3002\n\n\u8d34\u4e00\u4e0b\u4ee3\u7801\uff1a\n\n```\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#include<climits>\n#include<queue>\n#include<vector>\nusing namespace std;\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0' or ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' and ch<='9')s=s*10+(ch-'0'),ch=getchar();\n\treturn s*w;\n}\nconst int INF=1e9+10;\ninline int Max(int x,int y){return x>y?x:y;}\ninline int Min(int x,int y){return x<y?x:y;}\ninline void Swap(int&x,int&y){x^=y;y^=x;x^=y;}\ninline int Abs(int x){return x>0?x:-x;}\nconst int MAXN(520000);\nconst int MAXM(610);\nint V,M,N,m;\nint a[MAXN];\nint G[MAXM][MAXM];\ninline void Floyd()\n{\n\tfor(register int k=1;k<=V;k++)\n\t\tfor(register int i=1;i<=V;i++)\n\t\t\tfor(register int j=1;j<=V;j++)\n\t\t\t\tG[i][j]=Min(G[i][j],G[i][k]+G[k][j]);\n\treturn;\n}\nstruct E{int to,nxt,flow;};\nE edge[MAXN];\nint head[MAXN],tot(1);\nint s,t;\ninline void add(int u,int v,int f)\n{\n\tedge[++tot].nxt=head[u];\n\thead[u]=tot;\n\tedge[tot].to=v;\n\tedge[tot].flow=f;\n\treturn;\n}\ninline void add_edge(int u,int v,int f)\n{\n\tadd(u,v,f);\n\tadd(v,u,0);\n\treturn;\n}\nint dep[MAXN];\nqueue<int>q;\ninline bool bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tdep[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(register int i=head[u];i;i=edge[i].nxt)\n\t\t{\n\t\t\tE e=edge[i];\n\t\t\tif(!dep[e.to]&&e.flow)\n\t\t\t{\n\t\t\t\tdep[e.to]=dep[u]+1;\n\t\t\t\tq.push(e.to);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n} \ninline int dfs(int u,int in)\n{\n\tif(u==t) return in;\n\tint out(0);\n\tfor(register int i=head[u];i&&in;i=edge[i].nxt)\n\t{\n\t\tE e=edge[i];\n\t\tif(e.flow&&dep[e.to]==dep[u]+1)\n\t\t{\n\t\t\tint now=dfs(e.to,Min(e.flow,in));\n\t\t\tedge[i].flow-=now;\n\t\t\tedge[i^1].flow+=now;\n\t\t\tin-=now;\n\t\t\tout+=now;\n\t\t}\n\t}\n\tif(!out) dep[u]=0;\n\treturn out;\n}\ninline void Clear()\n{\n\ttot=1;\n\tmemset(head,0,sizeof(head));\n\tmemset(edge,0,sizeof(edge));\n\treturn;\n}\ninline bool check(int lim)\n{\n\tClear();\n\tint ans(0);\n\tfor(register int i=1;i<=N;i++)\n\t\tfor(register int j=1;j<=V;j++)\n\t\t\tif(G[a[i]][j]<=lim) add_edge(i,j+N,1);\n\tfor(register int i=1;i<=N;i++) add_edge(s,i,1);\n\tfor(register int i=1;i<=V;i++) add_edge(i+N,t,1);\n\twhile(bfs()) ans+=dfs(s,INF);\n\treturn ans>=m;\t\n}\nint main()\n{\n\tV=read(),M=read(),N=read(),m=read();\n\ts=0,t=V+N+1;\n\tfor(register int i=1;i<=N;i++) a[i]=read();\n\tfor(register int i=1;i<=V;i++)\n\t\tfor(register int j=1;j<=V;j++) if(i!=j)\n\t\t\tG[i][j]=INF;\n\tfor(register int i=1;i<=M;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\tG[u][v]=G[v][u]=Min(G[u][v],w);\n\t}\n\tFloyd();\n\tint l=0,r=10000000,res(-1);\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) r=mid-1,res=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",res); \n\treturn 0;\n}\n```\n\n$$\\texttt{The End.by UF}$$",
        "postTime": 1647916530,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010CF852D Exploration plan\u3011"
    },
    {
        "content": "### 1 \u601d\u8def\n\n[\u9898\u610f\u4f20\u9001\u95e8](https://www.luogu.com.cn/discuss/353966)\n\n\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u4f7f\u7528 `Floyd` \u7b97\u6cd5\u6c42\u51fa\u5168\u6e90\u6700\u77ed\u8def\u3002\n\n\u4f7f\u7528\u4e8c\u5206\u7b97\u6cd5\u6765\u6c42\u51fa\u7b54\u6848\u3002\n\n\u8bbe\u5f53\u524d\u5224\u65ad\u7684\u65f6\u95f4\u4e3a $ti$\u3002\n\n\u62c6\u70b9\u3002\u8ba9 $i$ \u70b9\u8868\u793a\u7b2c $i$ \u53f7\u56e2\u961f\uff0c$j+n$ \u8868\u793a $j$ \u70b9\u3002\n\n\u5982\u679c $dis[x[i]][j]\\le ti$\uff0c\u5c31\u4ece $i$ \u5230 $j+n$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u5f53\u7136\u4e86\uff0c\u6e90\u70b9\u5230\u6bcf\u4e2a\u56e2\u961f\u4e0e\u6bcf\u4e2a\u70b9\u5230\u6c47\u70b9\uff0c\u90fd\u8981\u8fde\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u8dd1\u4e00\u904d\u7f51\u7edc\u6700\u5927\u6d41\uff0c\u5982\u679c\u6700\u5927\u6d41\u5927\u4e8e\u7b49\u4e8e $k$\uff0c\u90a3\u4e48\u8bf4\u660e\u82b1\u8d39 $ti$ \u7684\u65f6\u95f4\u662f\u53ef\u884c\u7684\uff0c\u5c31\u5f80\u66f4\u5c0f\u7684\u65f6\u95f4\u4e8c\u5206\u3002\n\n\u5426\u5219\u8bf4\u660e\u5b83\u4e0d\u53ef\u884c\uff0c\u5f80\u5927\u7684\u65f6\u95f4\u4e8c\u5206\u3002\n\n### 2 \u4ee3\u7801\u4e0e\u8bb0\u5f55\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#define inf 0x3f3f3f3f\nint vs;//\u70b9\u6570\nint es;//\u8fb9\u6570\nint n;//\u56e2\u961f\u6570\nint k;//\u8981\u6c42\u70b9\u6570\n#define s 0//\u6e90\u70b9\n#define t 1202//\u6c47\u70b9\nint x[1220];//\u56e2\u961f\u4f4d\u7f6e\nint dis[1220][1220];//\u8ddd\u79bb\nstruct E{\n\tint u,v,w,a,nx;\n}e[1000002];//\u8fb9\nint ei;//\u4e0b\u6807\nint fir[1220];//\u5f00\u59cb\u8def\u5f84\nint l=0,r=1731312,mid;//\u4e8c\u5206\u7cfb\u5217\nint de[1220];//\u6df1\u5ea6\ninline int mi(int a,int b){\n\treturn a<b?a:b;\n}\ninline void addedge(int u,int v,int w){\n\t++ei; e[ei].u=u; e[ei].v=v; e[ei].w=w; e[ei].a=ei+1; e[ei].nx=fir[u]; fir[u]=ei;\n\t++ei; e[ei].u=v; e[ei].v=u; e[ei].w=0; e[ei].a=ei-1; e[ei].nx=fir[v]; fir[v]=ei;\n}\nbool bfs(){\n\tmemset(de,0,sizeof(de));\n\tqueue<int>q;\n\tint u;\n\tde[s]=1;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tu=q.front();\n\t\tq.pop();\n\t\tfor(int i=fir[u],v;i;i=e[i].nx){\n\t\t\tv=e[i].v;\n\t\t\tif(e[i].w&&!de[v]){\n\t\t\t\tde[v]=de[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn de[t];\n}\nint dfs(int u,int f){\n\tif(u==t||!f)return f;\n\tint res=0;\n\tfor(int i=fir[u],v,w;i;i=e[i].nx){\n\t\tv=e[i].v;\n\t\tif(e[i].w&&de[u]+1==de[v]){\n\t\t\tw=dfs(v,mi(f,e[i].w));\n\t\t\tif(w){\n\t\t\t\te[i].w-=w;\n\t\t\t\te[e[i].a].w+=w;\n\t\t\t\tf-=w;\n\t\t\t\tres+=w;\n\t\t\t\tif(!f)break;\n\t\t\t}else de[v]=0;\n\t\t}\n\t}\n\treturn res;\n}\nbool check(int ti){\n\tei=0;\n\tmemset(fir,0,sizeof(fir));\n\tfor(int i=1;i<=n;++i)addedge(s,i,1);\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=vs;++j){\n\t\t\tif(dis[x[i]][j]<=ti)addedge(i,j+n,1);\n\t\t}\n\t}\n\tfor(int i=1;i<=vs;++i)addedge(i+n,t,1);\n\tint res=0;\n\twhile(bfs())res+=dfs(s,inf);\n\treturn res>=k;\n}\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"CF0852D_1.in\",\"r\",stdin);\n\tfreopen(\"CF0852D_1.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d%d%d%d\",&vs,&es,&n,&k);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",x+i);\n\t}\n\tmemset(dis,inf,sizeof(dis));\n\tfor(int i=1;i<=vs;++i)dis[i][i]=0;\n\tfor(int i=1,u,v,w;i<=es;++i){\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tdis[u][v]=dis[v][u]=mi(dis[u][v],w);//\u8bb0\u5f97\u662f\u53d6\u6700\u5c0f\u503c\n\t}\n\tfor(int k=1;k<=vs;++k){\n\t\tfor(int i=1;i<=vs;++i){\n\t\t\tfor(int j=1;j<i;++j){\n\t\t\t\tdis[i][j]=dis[j][i]=mi(dis[i][j],dis[i][k]+dis[k][j]);//Floyd\u7b97\u6cd5\n\t\t\t}\n\t\t}\n\t}\n\twhile(l<r){\n\t\tmid=(l+r)>>1;\n\t\tif(check(mid))r=mid;\n\t\telse l=mid+1;\n\t}\n\tif(l>1731311)printf(\"-1\\n\");\n\telse printf(\"%d\\n\",l);\n\treturn 0;\n}\n```\n\n[\u8bb0\u5f55\u4f20\u9001\u95e8](https://www.luogu.com.cn/record/58170205)\n\nBy **dengziyue**",
        "postTime": 1631885836,
        "uid": 387840,
        "name": "happy_dengziyue",
        "ccfLevel": 6,
        "title": "CF852D\u9898\u89e3"
    },
    {
        "content": "## \u3010\u9898\u610f\u7ffb\u8bd1\u3011\n\u7ed9\u5b9a\u4e00\u4e2a$V$ \u4e2a\u70b9$E$ \u6761\u8fb9\u7684\u5e26\u6743\u65e0\u5411\u56fe\uff0c\u5728\u56fe\u4e0a\u6709$N$ \u4e2a\u4eba\uff0c\u7b2c$i$ \u4e2a\u4eba\u4f4d\u4e8e\u70b9$x_ \ni$\t\uff0c\u4e00\u4e2a\u4eba\u901a\u8fc7\u4e00\u6761\u8fb9\u9700\u8981\u82b1\u8d39\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u7684\u65f6\u95f4\u3002\n\n\u73b0\u5728\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u81ea\u7531\u5730\u8d70\u3002\u6c42\u6700\u77ed\u591a\u5c11\u65f6\u95f4\u540e\u6ee1\u8db3\u7ed3\u675f\u540e\u6709\u4eba\u7684\u8282\u70b9\u6570$\\geq K$\n\n$N,V \\leq 500$\n## \u3010\u9898\u76ee\u5206\u6790\u3011\n\u9996\u5148\u53d1\u73b0V\u5f88\u5c0f\uff0c\u76f4\u63a5\u7528$Floyd$\u8dd1\u4e00\u904d\u5168\u6e90\u6700\u77ed\u8def\u5f84\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u6c42\u65f6\u95f4\uff0c\u8fd9\u4e2a\u5176\u5b9e\u662f\u56fe\u8bba\u4e2d\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u4e8c\u5206+\u56fe\u8bba\u7684\u6a21\u578b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u5206\u5bfb\u627e$mid$\uff0c\u8fde\u4e0a\u6240\u6709\u957f\u5ea6$\\leq mid$\u7684\u8fb9\uff0c\u7528\u56fe\u8bba\u6765$check$\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u8981\u9009\u62e9\u56fe\u8bba\u4f7f\u7528\u7684\u6a21\u578b\u4e86\u3002\u5728\u4e00\u4e2a\u56fe\u4e0a\uff0c\u6709\u4e00\u4e9b\u4eba\u4ece\u4e00\u4e2a\u70b9\u8d70\u5411\u53e6\u4e00\u4e2a\u70b9\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7f51\u7edc\u6d41\u4e2d\u7684\u6700\u5927\u6d41\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u8981\u6709\u4eba\u5c31\u884c\uff0c\u90a3\u4e48\u8ba9\u6bcf\u4e2a\u70b9\u5411\u8d85\u7ea7\u6c47\u70b9$t$\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u4ee3\u8868\u8fd9\u4e2a\u70b9\u5bf9\u7b54\u6848\u80fd\u4ea7\u751f$1$\u7684\u6d41\u91cf\uff0c\u4ece\u8d85\u7ea7\u6e90\u70b9$s$\u5411\u6bcf\u4e2a\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u8fd9\u4e2a\u70b9\u4eba\u6570\u7684\u8fb9\uff0c\u4ee3\u8868\u8fd9\u4e2a\u70b9\u80fd\u6d41\u51fa\u7b49\u540c\u4e8e\u8fd9\u4e2a\u70b9\u4eba\u6570\u7684\u6d41\u91cf\uff0c\u7136\u540e\u5c06$\\leq mid$\u7684\u8fb9\u4f5c\u4e3a\u7f51\u7edc\u4e2d\u7684\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a$inf$\uff0c\u8dd1\u6700\u5927\u6d41\uff0c\u5224\u65ad\u662f\u5426$\\geq K$\u3002\n\n$tips:$\n1. \u5efa\u56fe\u7684\u65f6\u5019\u8981\u62c6\u70b9\uff0c\u62c6\u6210\u5165\u53e3\u548c\u51fa\u53e3\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u6d41\u91cf\u5206\u914d\u7684\u95ee\u9898\n1. \u6bcf\u6b21check\u8bb0\u5f97memset\n1. \u91cd\u8fb9\u8981\u53d6\u6700\u5c0f\u503c\n\n\u6109\u5feb\u7684\u8d34\u4ee3\u7801\u65f6\u95f4\n```cpp\n#include<bits/stdc++.h>\n#define inf 1e15\nusing namespace std;\nint read(){\n\tint w=0,h=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')h=-h;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){w=w*10+ch-'0';ch=getchar();}\n\treturn w*h;\n}\nint n,m,s,t,K,cnt,sum;\nint cow[610],barn[610];\nint floyd[610][610];\nstruct Dinic{\n\tstruct node{\n\t\tint next,to,cap,flow;\n\t}edge[3000010];\n\tint head[10010],num;\n\tint cur[10010];\n\tint dist[10010];\n\tqueue<int>q;\n\tvoid add(int u,int v,int cap,int flow){\n\t\tedge[++num].next=head[u];\n\t\tedge[num].to=v;\n\t\tedge[num].cap=cap;\n\t\tedge[num].flow=flow;\n\t\thead[u]=num;\n\t\treturn;\n\t}\n\tvoid Add(int u,int v,int cap){\n\t\tadd(u,v,cap,0);\n\t\tadd(v,u,0,0);\n\t\treturn;\n\t}\n\tbool bfs(){\n\t\tmemset(dist,0,sizeof(dist));\n\t\tdist[s]=1;\n\t\tq.push(s);\n\t\twhile(!q.empty()){\n\t\t\tint u=q.front();\n\t\t\tq.pop();\n\t\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\t\tint v=edge[i].to;\n\t\t\t\tif(!dist[v]&&edge[i].cap>edge[i].flow){\n\t\t\t\t\tdist[v]=dist[u]+1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dist[t];\n\t}\n\tint dfs(int u,int flow){\n\t\tif(u==t)return flow;\n\t\tint fl=0;\n\t\tfor(int i=cur[u];i;i=edge[i].next){\n\t\t\tcur[u]=i;\n\t\t\tint v=edge[i].to;\n\t\t\tif(dist[u]+1==dist[v]&&edge[i].cap>edge[i].flow){\n\t\t\t\tint p=dfs(v,min(flow,edge[i].cap-edge[i].flow));\n\t\t\t\tif(p){\n\t\t\t\t\tedge[i].flow+=p;\n\t\t\t\t\tedge[i^1].flow-=p;\n\t\t\t\t\tflow-=p;\n\t\t\t\t\tfl+=p;\n\t\t\t\t\tif(!flow)break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!fl)dist[u]=0;\n\t\treturn fl;\n\t}\n\tint solve(){\n\t\tint flow=0;\n\t\twhile(bfs()){\n\t\t\tmemcpy(cur,head,sizeof(cur));\n\t\t\tint p;\n\t\t\twhile(p=dfs(s,1e9))flow+=p;\n\t\t}\n\t\treturn flow;\n\t}\n\tvoid memst(){\n\t\tmemset(head,0,sizeof(head));\n\t\tnum=1;\n\t}\n\tbool check(int x){\n\t\tmemst();\n\t\tfor(int i=1;i<=n;i++)Add(i+n,t,1);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(cow[i])Add(s,i,cow[i]);\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(floyd[i][j]<=x)\n\t\t\t\t\tAdd(i,j+n,1e9);\n\t\t}\n\t\treturn solve()>=K;\n\t}\n}ans;\nsigned main(){\n\tn=read();m=read();cnt=read();K=read();\n\ts=0;t=n+n+2;\n    memset(floyd,0x3f,sizeof(floyd));\n\tfor(int i=1;i<=cnt;i++)cow[read()]++;\n\tfor(int i=1;i<=n;i++)floyd[i][i]=0;\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read(),v=read(),w=read();\n\t\tfloyd[u][v]=floyd[v][u]=min(floyd[u][v],w);\n\t}\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tfloyd[i][j]=min(floyd[i][j],floyd[i][k]+floyd[k][j]);\n\tint l=0,r=1731311,res=-1;\n\twhile(l<=r){\n\t\tint mid=l+r>>1;\n\t\tif(ans.check(mid))r=mid-1,res=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n```\n",
        "postTime": 1612146891,
        "uid": 191538,
        "name": "pidan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF852D \u3010Exploration plan\u3011"
    }
]