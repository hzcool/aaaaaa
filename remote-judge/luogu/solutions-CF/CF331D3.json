[
    {
        "content": "\u601d\u8def\u5e94\u8be5\u5f88\u663e\u7136\uff0c\u53ea\u8981\u5230\u8fbe\u4e00\u4e2a\u7bad\u5934\u4e0a\u540e\u63a5\u4e0b\u6765\u7684\u8def\u5f84\u90fd\u786e\u5b9a\u4e86\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u500d\u589e\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u7bad\u5934\u7684\u5c3e\u5df4\u4f4d\u7f6e\u5f00\u59cb\u8d77\u98de\u7ecf\u8fc7 $2^j$ \u4e2a\u7bad\u5934\u540e\u5230\u8fbe\u7684\u54ea\u4e2a\u7bad\u5934\u4ee5\u53ca\u8ddd\u79bb\u65f6\u95f4\u548c\u3002\n\n\u5f53\u7136\uff0c\u8fb9\u754c\u5c31\u53ea\u80fd\u5230\u8fb9\u754c\uff0c\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\u3002\n\n\u96be\u70b9\u5728\u4e8e\u600e\u4e48\u5904\u7406\u51fa\u67d0\u4e2a\u7bad\u5934\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u7bad\u5934\u662f\u54ea\u4e2a\u7bad\u5934\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528 `std::set` \u7ef4\u62a4\u626b\u63cf\u7ebf\uff0c\u6240\u6709\u6a2a\u7740\u7684\u7bad\u5934\u7684\u7ec8\u70b9\u5904\u7406\u4e00\u904d\uff0c\u7ad6\u7740\u7684\u5904\u7406\u4e00\u904d\u3002\u6ce8\u610f\u8fd9\u91cc\u6a2a\u7740\u7684\u4e5f\u53ef\u80fd\u5230\u8fbe\u6a2a\u7740\u7684\uff0c\u7ad6\u7740\u7684\u540c\u7406\u3002\n\n\u7136\u540e\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u627e\u51fa\u4ed6\u7b2c\u4e00\u4e2a\u5230\u8fbe\u7684\u7bad\u5934\u662f\u54ea\u4e2a\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u5728\u4e0a\u9762\u626b\u63cf\u7ebf\u7684\u540c\u65f6\u5904\u7406\u3002\n\n\u7136\u540e\u5c31\u5148\u500d\u589e\u8df3\u7bad\u5934\uff0c\u76f4\u5230\u6ca1\u65f6\u95f4\u4e86\u6216\u8005\u5230\u8fb9\u754c\u4e86\u7136\u540e\u5c31\u8ba8\u8bba\uff1a\n\n1. \u5230\u4e86\u8fb9\u754c\n2. \u8fd8\u80fd\u8df3\u5230\u4e0b\u4e00\u4e2a\u7bad\u5934\u4e0a\n3. \u5728\u524d\u5f80\u4e0b\u4e00\u4e2a\u7bad\u5934\u7684\u4e2d\u9014\u5c31\u6ca1\u65f6\u95f4\u4e86\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((n+q)\\log t_i)$ \uff0c\u4ee3\u7801\u5b9e\u73b0\u7cbe\u7ec6\u4e00\u70b9\u7684\u8bdd\u5e94\u8be5\u4e0d\u957f\uff0c~~\u6211\u7684\u5b9e\u73b0\u5c31\u65e0\u8111\u4e00\u70b9~~\n\n```cpp\n// This code wrote by chtholly_micromaker(MicroMaker)\n#include <bits/stdc++.h>\n#define reg register\n#define int long long\n#define ALL(x) (x).begin(),(x).end()\n#define ln std::puts(\"\")\n#define lsp std::putchar(32)\n#define pb push_back\n#define MP std::make_pair\ntemplate <class t> inline void read(t &s){s=0;\nreg int f=1;reg char c=getchar();while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\nwhile(isdigit(c))s=(s<<3)+(s<<1)+(c^48),c=getchar();s*=f;return;}\ntemplate<class t,class ...A> inline void read(t &x,A &...a){read(x);read(a...);}\ntemplate <class t> inline void write(t x){if(x<0)putchar('-'),x=-x;\nint buf[21],top=0;while(x)buf[++top]=x%10,x/=10;if(!top)buf[++top]=0;\nwhile(top)putchar(buf[top--]^'0');return;}\ntemplate <class t>inline bool ckmin(t&x,t y){if(x>y){x=y;return 1;}return 0;}\ntemplate <class t>inline bool ckmax(t&x,t y){if(x<y){x=y;return 1;}return 0;}\nconst int MaxN=1e5+50;\nconst int Lim=1e16;\nstruct Node{int u,v,x,y,dir;}R[MaxN],C[MaxN],A[MaxN];\nstruct Edge{int x,l,r,opt,idx;inline bool operator < (const Edge &nt) const\n{return x<nt.x;}};\nint ansx[MaxN],ansy[MaxN];\nstruct Query{int x,y,tm,opt,idx,to,dir;}Rq[MaxN],Cq[MaxN],Bq[MaxN];\ninline bool cmpR(Node a,Node b){return a.y<b.y;}\ninline bool cmpC(Node a,Node b){return a.x<b.x;}\ninline bool cmpRq(Query a,Query b){return a.y<b.y;}\ninline bool cmpCq(Query a,Query b){return a.x<b.x;}\nint n,m,B,q,N,nq,mq,bn;\nint nxt[MaxN];\n#define fi first\n#define se second\n#define IT std::set<std::pair<int,int> >::iterator\nint up[MaxN][62],s[MaxN][62];\ninline int Add(int x,int y){return (x+y)>=Lim?Lim:(x+y);}\ninline int dis(int x,int y)\n{\n\tif(x>n+m&&y>n+m)return 0;\n\tif(x<=n+m&&y<=n+m)return std::abs(A[x].x-A[y].x)+std::abs(A[x].y-A[y].y);\n\tif(y==n+m+1)return A[x].x-1;\n\tif(y==n+m+2)return B-A[x].x;\n\tif(y==n+m+4)return A[x].y-1;\n\treturn B-A[x].y;\n}\ninline void go(int x,int sx,int sy,int z,int &ex,int &ey)\n{\n\tif(x<=n)\n\t{\n\t\tif(A[x].u<A[x].x)ex=sx+z;\n\t\telse ex=sx-z;\n\t\tey=sy;\n\t}\n\telse\n\t{\n\t\tif(A[x].v<A[x].y)ey=sy+z;\n\t\telse ey=sy-z;\n\t\tex=sx;\n\t}\n\tckmin(ex,B),ckmax(ex,1LL),ckmin(ey,B),ckmax(ey,1LL);\n}\ninline void goout(int x,int sx,int sy,int z,int &ex,int &ey)\n{\n\tif(x==n+m+1)ex=std::max(1LL,sx-z),ey=sy;\n\telse if(x==n+m+2)ex=std::min(B,sx+z),ey=sy;\n\telse if(x==n+m+4)ey=std::max(1LL,sy-z),ex=sx;\n\telse ey=std::min(B,sy+z),ex=sx;\n}\nsigned main(void)\n{\n\tread(q,B),++B;\n\tfor(int i=1;i<=q;++i)\n\t{\n\t\tNode X;read(X.u,X.v,X.x,X.y),++X.u,++X.v,++X.x,++X.y;\n\t\tif(X.v==X.y)R[++n]=X;else C[++m]=X;\n\t}\n\tstd::sort(R+1,R+n+1,cmpR),std::sort(C+1,C+m+1,cmpC);\n\tN=n+m+4; // 1 left 2 right 3 up 4 down\n\tnxt[n+m+1]=n+m+1,nxt[n+m+2]=n+m+2,nxt[n+m+3]=n+m+3,nxt[n+m+4]=n+m+4;\n\tfor(int i=1;i<=n;++i)R[i].dir=R[i].u<R[i].x?2:1;\n\tfor(int i=1;i<=m;++i)C[i].dir=C[i].v<C[i].y?3:4;\n\t{int T=0;for(int i=1;i<=n;++i)A[++T]=R[i];\n\tfor(int i=1;i<=m;++i)A[++T]=C[i];}\n\tint Q;read(Q);\n\tfor(int i=1;i<=Q;++i)\n\t{\n\t\tchar opt[5];\n\t\tQuery cu;read(cu.x,cu.y);std::scanf(\"%s\",opt);read(cu.tm),cu.idx=i;\n\t\tcu.to=-1,++cu.x,++cu.y;\n\t\tif(*opt=='L'||*opt=='R')\n\t\t{\n\t\t\tif(*opt=='L')cu.opt=-1;\n\t\t\telse cu.opt=+1;\n\t\t\tRq[++nq]=cu;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(*opt=='U')cu.opt=+1;\n\t\t\telse cu.opt=-1;\n\t\t\tCq[++mq]=cu;\n\t\t}\n\t}\n\tstd::sort(Rq+1,Rq+nq+1,cmpRq),std::sort(Cq+1,Cq+mq+1,cmpCq);\n\tfor(int i=1;i<=nq;++i)Rq[i].dir=Rq[i].opt>0?2:1;\n\tfor(int i=1;i<=mq;++i)Cq[i].dir=Cq[i].opt>0?3:4;\n\t{// Edged Row\n\t\tstd::set<std::pair<int,int> > S;\n\t\tstd::vector<Edge> dr;\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tdr.pb((Edge){R[i].y,R[i].u,R[i].x,+1,i}),\n\t\t\tdr.pb((Edge){R[i].y+1,R[i].u,R[i].x,-1,i});\n\t\tfor(int i=1;i<=m;++i)\n\t\t\tdr.pb((Edge){std::min(C[i].v,C[i].y),C[i].u,C[i].x,+1,i+n}),\n\t\t\tdr.pb((Edge){std::max(C[i].v,C[i].y)+1,C[i].u,C[i].x,-1,i+n});\n\t\tfor(auto &i:dr)if(i.l>i.r)std::swap(i.l,i.r);\n\t\tstd::sort(ALL(dr));\n\t\treg int pos=-1;\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\twhile(pos+1<(int)dr.size()&&dr[pos+1].x<=R[i].y)\n\t\t\t{\n\t\t\t\t++pos;\n\t\t\t\tif(dr[pos].opt>0)\n\t\t\t\t{\n\t\t\t\t\tS.insert(MP(dr[pos].l,dr[pos].idx));\n\t\t\t\t\tif(dr[pos].l^dr[pos].r)S.insert(MP(dr[pos].r,dr[pos].idx));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tS.erase(MP(dr[pos].l,dr[pos].idx));\n\t\t\t\t\tif(dr[pos].l^dr[pos].r)S.erase(MP(dr[pos].r,dr[pos].idx));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(R[i].u<R[i].x)\n\t\t\t{\n\t\t\t\tIT it=S.upper_bound(MP(R[i].x,1e9));\n\t\t\t\tif(it==S.end())nxt[i]=n+m+2;\n\t\t\t\telse nxt[i]=it->se;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tIT it=S.lower_bound(MP(R[i].x,0));\n\t\t\t\tif(it==S.begin())nxt[i]=n+m+1;\n\t\t\t\telse nxt[i]=(--it)->se;\n\t\t\t}\n\t\t}\n\t\tpos=-1,S.clear();\n\t\tfor(int i=1;i<=nq;++i)\n\t\t{\n\t\t\twhile(pos+1<(int)dr.size()&&dr[pos+1].x<=Rq[i].y)\n\t\t\t{\n\t\t\t\t++pos;\n\t\t\t\tif(dr[pos].opt>0)\n\t\t\t\t{\n\t\t\t\t\tS.insert(MP(dr[pos].l,dr[pos].idx));\n\t\t\t\t\tif(dr[pos].l^dr[pos].r)S.insert(MP(dr[pos].r,dr[pos].idx));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tS.erase(MP(dr[pos].l,dr[pos].idx));\n\t\t\t\t\tif(dr[pos].l^dr[pos].r)S.erase(MP(dr[pos].r,dr[pos].idx));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(Rq[i].opt>0)\n\t\t\t{\n\t\t\t\tIT it=S.lower_bound(MP(Rq[i].x,0));\n\t\t\t\tif(it==S.end())Rq[i].to=n+m+2;\n\t\t\t\telse Rq[i].to=it->se;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tIT it=S.upper_bound(MP(Rq[i].x,1e9));\n\t\t\t\tif(it==S.begin())Rq[i].to=n+m+1;\n\t\t\t\telse Rq[i].to=(--it)->se;\n\t\t\t}\n\t\t}\n\t}\n\t{// Edged Col\n\t\tstd::set<std::pair<int,int> > S;\n\t\tstd::vector<Edge> dr;\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tdr.pb((Edge){std::min(R[i].u,R[i].x),R[i].v,R[i].y,+1,i}),\n\t\t\tdr.pb((Edge){std::max(R[i].u,R[i].x)+1,R[i].v,R[i].y,-1,i});\n\t\tfor(int i=1;i<=m;++i)\n\t\t\tdr.pb((Edge){C[i].x,C[i].v,C[i].y,+1,i+n}),\n\t\t\tdr.pb((Edge){C[i].x+1,C[i].v,C[i].y,-1,i+n});\n\t\tfor(auto &i:dr)if(i.l>i.r)std::swap(i.l,i.r);\n\t\tstd::sort(ALL(dr));\n\t\treg int pos=-1;\n\t\tfor(int i=1;i<=m;++i)\n\t\t{\n\t\t\twhile(pos+1<(int)dr.size()&&dr[pos+1].x<=C[i].x)\n\t\t\t{\n\t\t\t\t++pos;\n\t\t\t\tif(dr[pos].opt>0)\n\t\t\t\t{\n\t\t\t\t\tS.insert(MP(dr[pos].l,dr[pos].idx));\n\t\t\t\t\tif(dr[pos].l^dr[pos].r)S.insert(MP(dr[pos].r,dr[pos].idx));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tS.erase(MP(dr[pos].l,dr[pos].idx));\n\t\t\t\t\tif(dr[pos].l^dr[pos].r)S.erase(MP(dr[pos].r,dr[pos].idx));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(C[i].v<C[i].y)\n\t\t\t{\n\t\t\t\tIT it=S.upper_bound(MP(C[i].y,1e9));\n\t\t\t\tif(it==S.end())nxt[i+n]=n+m+3;\n\t\t\t\telse nxt[i+n]=it->se;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tIT it=S.lower_bound(MP(C[i].y,0));\n\t\t\t\tif(it==S.begin())nxt[i+n]=n+m+4;\n\t\t\t\telse nxt[i+n]=(--it)->se;\n\t\t\t}\n\t\t}\n\t\tpos=-1,S.clear();\n\t\tfor(int i=1;i<=mq;++i)\n\t\t{\n\t\t\twhile(pos+1<(int)dr.size()&&dr[pos+1].x<=Cq[i].x)\n\t\t\t{\n\t\t\t\t++pos;\n\t\t\t\tif(dr[pos].opt>0)\n\t\t\t\t{\n\t\t\t\t\tS.insert(MP(dr[pos].l,dr[pos].idx));\n\t\t\t\t\tif(dr[pos].l^dr[pos].r)S.insert(MP(dr[pos].r,dr[pos].idx));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tS.erase(MP(dr[pos].l,dr[pos].idx));\n\t\t\t\t\tif(dr[pos].l^dr[pos].r)S.erase(MP(dr[pos].r,dr[pos].idx));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(Cq[i].opt>0)\n\t\t\t{\n\t\t\t\tIT it=S.lower_bound(MP(Cq[i].y,0));\n\t\t\t\tif(it==S.end())Cq[i].to=n+m+3;\n\t\t\t\telse Cq[i].to=it->se;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tIT it=S.upper_bound(MP(Cq[i].y,1e9));\n\t\t\t\tif(it==S.begin())Cq[i].to=n+m+4;\n\t\t\t\telse Cq[i].to=(--it)->se;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=nq;++i)Bq[++bn]=Rq[i];\n\tfor(int i=1;i<=mq;++i)Bq[++bn]=Cq[i];\n\tfor(int i=1;i<=N;++i)up[i][0]=nxt[i],s[i][0]=dis(i,nxt[i]);\n\tfor(int k=1;k<62;++k)for(int i=1;i<=N;++i)\n\t\tup[i][k]=up[up[i][k-1]][k-1],s[i][k]=Add(s[i][k-1],s[up[i][k-1]][k-1]);\n\tfor(int i=1;i<=bn;++i)\n\t{\n\t\tif(!Bq[i].tm)\n\t\t{\n\t\t\tansx[Bq[i].idx]=Bq[i].x,ansy[Bq[i].idx]=Bq[i].y;\n\t\t\tcontinue;\n\t\t}\n\t\treg int w=Bq[i].tm,to=Bq[i].to,x=Bq[i].x,y=Bq[i].y,I=Bq[i].idx;\n\t\treg int dir=Bq[i].dir;\n\t\tif(to<=n+m&&w>std::abs(x-A[to].x)+std::abs(y-A[to].y))\n\t\t{\n\t\t\tw-=std::abs(x-A[to].x)+std::abs(y-A[to].y);\n\t\t\tx=A[to].x,y=A[to].y,dir=A[to].dir;\n\t\t\tfor(int k=61;to<=n+m&&~k;--k)\n\t\t\t\tif(up[to][k]<=n+m&&w>s[to][k])\n\t\t\t\t\tw-=s[to][k],to=up[to][k],\n\t\t\t\t\tx=A[to].x,y=A[to].y,dir=A[to].dir;\n\t\t\tto=nxt[to];\n\t\t}\n\t\tif(to>n+m)\n\t\t{\n\t\t\tgoout(to,x,y,w,ansx[I],ansy[I]);\n\t\t\tcontinue;\n\t\t}\n\t\tif(dir==1)\n\t\t{\n\t\t\tint tp=std::max(A[to].u,A[to].x);ckmin(tp,x);\n\t\t\tif(w<=x-tp)ansx[I]=x-w,ansy[I]=y;\n\t\t\telse go(to,tp,y,w-(x-tp),ansx[I],ansy[I]);\n\t\t}\n\t\telse if(dir==2)\n\t\t{\n\t\t\tint tp=std::min(A[to].u,A[to].x);ckmax(tp,x);\n\t\t\tif(w<=tp-x)ansx[I]=x+w,ansy[I]=y;\n\t\t\telse go(to,tp,y,w-(tp-x),ansx[I],ansy[I]);\n\t\t}\n\t\telse if(dir==4)\n\t\t{\n\t\t\tint tp=std::max(A[to].v,A[to].y);ckmin(tp,y);\n\t\t\tif(w<=y-tp)ansy[I]=y-w,ansx[I]=x;\n\t\t\telse go(to,x,tp,w-(y-tp),ansx[I],ansy[I]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint tp=std::min(A[to].v,A[to].y);ckmax(tp,y);\n\t\t\tif(w<=tp-y)ansy[I]=y+w,ansx[I]=x;\n\t\t\telse go(to,x,tp,w-(tp-y),ansx[I],ansy[I]);\n\t\t}\n\t}\n\tfor(int i=1;i<=Q;++i)write(ansx[i]-1),lsp,write(ansy[i]-1),ln;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1624536268,
        "uid": 51376,
        "name": "MyukiyoMekya",
        "ccfLevel": 9,
        "title": "CF331D3 Escaping on Beaveractor \u9898\u89e3"
    },
    {
        "content": "*3000 \u72ec\u7acb\u505a\u51fa\u3002\n\n\u663e\u7136\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u80af\u5b9a\u662f\u4e00\u5f00\u59cb\u4e00\u76f4\u76f4\u7ebf\u8d70\uff0c\u76f4\u5230\u78b0\u5230\u4e00\u4e2a\u7bad\u5934\u540e\u9762\u7684\u8def\u5f84\u5c31\u56fa\u5b9a\u4e86\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a\u7bad\u5934\u9884\u5904\u7406\u5b83\u7684\u8def\u5f84\u3002\n\n\u9996\u5148\u662f\u6bcf\u4e2a\u7bad\u5934\u8d70\u51fa\u53bb\u78b0\u5230\u7684\u7b2c\u4e00\u4e2a\u5176\u4ed6\u7684\u7bad\u5934\u3002\n\n\u4e00\u79cd\u66b4\u529b\u7684\u60f3\u6cd5\u662f\u76f4\u63a5\u4e0a\u4e3b\u5e2d\u6811\uff0c\u7136\u540e\u6bcf\u6b21\u4e8c\u5206\u4e00\u4e0b\u53bb\u626b\uff0c\u590d\u6742\u5ea6 $O(n\\log^2n)$ \u3002\n\n\u8fd8\u6709\u4e00\u79cd\u60f3\u6cd5\u662f\uff0c\u6bd4\u5982\u5904\u7406 x \u5750\u6807\u4ece\u5c0f\u5230\u5927\u7684\u7bad\u5934\uff0c\u8dd1\u4e00\u904d\u626b\u63cf\u7ebf\uff0c\u6309\u7167 x \u5750\u6807\u4ece\u5927\u738b\u5c0f\u679a\u4e3e\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a y \u5750\u6807\u4e0a\u4e00\u4e2a\u51fa\u73b0\u7684\u7bad\u5934\u662f\u54ea\u4e2a\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n\u56e0\u4e3a\u6211\u5199\u4e86\u7b2c\u4e8c\u79cd\u90fd\u8dd1\u4e86 2.7s \uff0c\u6240\u4ee5\u7b2c\u4e00\u79cd\u7406\u8bba\u4e0a\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u6ce8\u610f\u6bcf\u4e2a\u67e5\u8be2\u4e5f\u8981\u6c42\u7b2c\u4e00\u4e2a\u7bad\u5934\u7684\u4f4d\u7f6e\uff0c\u79bb\u7ebf\u4e0b\u6765\u4e00\u8d77\u626b\u63cf\u7ebf\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u6c42\u51fa\u8fd9\u4e2a\u8def\u5f84\u4e86\uff0c\u66b4\u529b\u7684\u8bdd\u5c31\u6bcf\u6b21\u8df3\u4e0b\u4e00\u4e2a\u7bad\u5934\u3002\n\n\u6ce8\u610f\u5230 $t\\le 10^{15}$ \uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u8fd9\u79cd\u66b4\u529b\u8df3\u7684\u4e1c\u897f\u901a\u5e38\u53ef\u4ee5\u8003\u8651\u500d\u589e\u3002\n\n\u4e00\u79cd\u60f3\u6cd5\u662f\u76f4\u63a5\u500d\u589e\u6bcf\u4e2a\u7bad\u5934\u7684\u672b\u7aef\u8d70 $2^i$ \u5230\u7684\u5730\u65b9\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u597d\u8f6c\u79fb\u56e0\u4e3a\u4f1a\u6d89\u53ca\u5230\u4e0d\u5728\u7bad\u5934\u7684\u7ed3\u70b9\u3002\n\n\u8003\u8651\u9884\u5904\u7406\u6bcf\u4e2a\u7bad\u5934\u672b\u7aef\u5f80\u540e\u8d70 $2^i$ \u4e2a\u7bad\u5934\u540e\uff0c\u5230\u54ea\u4e2a\u7bad\u5934\uff0c\u4ee5\u53ca\u8def\u7a0b\u603b\u957f\uff0c\u7136\u540e\u66b4\u529b\u8df3\u5c31\u597d\u4e86\u3002\n\n\u603b\u7801\u957f 8.28k \uff0c\u53ef\u80fd\u662f\u6211\u5199\u4e11\u4e86\u3002\n\nhttps://codeforces.ml/contest/331/submission/157524171",
        "postTime": 1652848433,
        "uid": 115936,
        "name": "\u6cf7\u6cfd\u4e09\u6708",
        "ccfLevel": 0,
        "title": "CF331D3"
    }
]