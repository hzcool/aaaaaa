[
    {
        "content": "$DP$ \u9898.\n\n\u770b\u5b8c\u9898\u76ee,\u5c31\u4e0d\u96be\u53d1\u73b0,\u4e00\u4e2a\u5408\u6cd5\u7684\u73af\u4e00\u5b9a\u662f\u7531\u4e0b\u9762\u56db\u79cd\u5b57\u7b26\u4e32\u7ec4\u6210\u7684:\n$$\nRL,RRL,RLL,RRLL\n$$\n\n\n\u8fd9\u8fd8\u4e0d\u7b80\u5355?\n\n\u76f4\u63a5\u7528 $dp[i]$ \u8868\u793a\u524d $i$ \u4e2a\u5b57\u7b26\u6700\u5c11\u9700\u8981\u6539\u52a8\u7684\u5b57\u7b26\u6570\u91cf,\u66b4\u529b $O(n)$ \u8dd1\u5c31\u80fd $AC$ \u4e86.\n\n**\u8fd9\u9898\u662f\u73af,\u8981\u8003\u8651\u9996\u5c3e\u95ee\u9898,\u7531\u4e8e\u6211\u4eec\u72b6\u6001\u8f6c\u79fb\u6700\u591a\u6d89\u53ca\u5230\u4e4b\u524d\u7684 $4$ \u4e2a,\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u884c\u65cb\u8f6c\u5b57\u7b26\u4e32 $4$ \u6b21,\u505a $4$ \u6b21 $DP$ \u5373\u53ef.**\n\n```cpp\n//This Code was made by Chinese_zjc_.\n#include<iostream>\n#include<string>\n#define int long long\nusing namespace std;\nint n,t,dp[200005],ans;\nstring s;\nconst string g[]={\"RL\",\"RRL\",\"RLL\",\"RRLL\"};//\u8c8c\u4f3c\u6ca1\u7528\nint diff(string A,string B)\n{\n    int tmp=0;\n    for(int i=0;i<(int)A.length();++i)\n    {\n        if(A[i]!=B[i])\n        {\n            ++tmp;\n        }\n    }\n    return tmp;\n}\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin>>t;\n    while(t--)\n    {\n        cin>>n>>s;\n        s=' '+s;\n        ans=INF;\n        for(int l=1;l<=5;++l)\n        {\n            dp[0]=0;\n            dp[1]=INF;\n            for(int i=2;i<=n;++i)\n            {\n                dp[i]=dp[i-2]+diff(\"RL\",s.substr(i-1,2));\n                if(i>=3)\n                {\n                    dp[i]=min(dp[i],dp[i-3]+diff(\"RRL\",s.substr(i-2,3)));\n                    dp[i]=min(dp[i],dp[i-3]+diff(\"RLL\",s.substr(i-2,3)));\n                    if(i>=4)\n                    {\n                        dp[i]=min(dp[i],dp[i-4]+diff(\"RRLL\",s.substr(i-3,4)));\n                    }\n                }\n            }\n            ans=min(ans,dp[n]);\n            s=' '+s.substr(2,n-1)+s[1];\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1597718732,
        "uid": 118239,
        "name": "Chinese_zjc_",
        "ccfLevel": 0,
        "title": "CF1392D \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u6ce8\u610f\u5230\u552f\u4e00\u7981\u6b62\u7684\u60c5\u51b5\u5c31\u662f A \u6253 B \uff0c B \u6253 C \uff0c C \u6253 D\u3002\n\n\n\u90a3\u4e48\u9898\u610f\u5c31\u662f\u4e00\u4e2a ``'L'`` \u548c ``'R'`` \u7ec4\u6210\u7684\u73af\uff0c\u95ee\u6700\u5c11\u6539\u53d8\u51e0\u4e2a ``'L'`` \u6216 ``'R'`` \u624d\u80fd\u4f7f\u73af\u4e0a\u4e0d\u5b58\u5728\u8fde\u7eed\u7684\u4e09\u4e2a\u76f8\u540c\u5b57\u7b26\u3002\n## \u601d\u8def\nTags\uff1a\u8d2a\u5fc3\uff0c\u5b57\u7b26\u4e32\uff0c\u7ec6\u8282\n\n\u6211\u4eec\u5148\u7edf\u8ba1\u8fde\u7eed\u7684\u5b57\u7b26\u6570\u91cf\u3002\n\n\u6bd4\u5982 ``\"LRLLLLRRRRRLRRRR\"`` \u5c31\u662f $\\{1,1,4,5,1,4\\}$ \u3002\n\n(\u6ce8\u610f\uff0c\u8fd9\u662f\u4e00\u4e2a\u73af\uff0c\u7834\u73af\u4e3a\u94fe\u8981\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u5b57\u7b26\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e0d\u540c\uff1b\u5982\u679c\u5168\u90e8\u76f8\u540c\u5c31\u76f4\u63a5\u7279\u5224)\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u5b57\u7b26\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $len/3$ \u3002\n\n**\u7279\u522b\u6ce8\u610f\uff0c\u5bf9\u4e8e\u5168\u90e8\u4e00\u6837\u7684\u60c5\u51b5\uff0c\u7b54\u6848\u662f $(n+2)/3$** ~~\u7ec6\u8282\u9898\u5c31\u8fd9\uff1f~~\n## \u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nchar a[2000003];\nint main()\n{\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tint n=read(),ans=0;\n\t\tscanf(\"%s\",a+1);\n\t\tfor(int i=1; i<=n; i++) a[i+n]=a[i];\n\t\tbool f=1;\n\t\tchar tmp=a[1];\n\t\tfor(int i=2; i<=n; i++) if(a[i]!=tmp) f=0;\n\t\tif(f) \n\t\t{\n\t\t\tprintf(\"%d\\n\",(n-1)/3+1);\n\t\t\tcontinue;\n\t\t}\n\t\tint pos=0,now=0;\n\t\tfor(int i=1; i<n; i++) if(a[i]!=a[n]) { pos=i-1; break; }\n\t\tfor(int i=1; i<=n; i++) a[i]=a[i+pos];\n\t\tfor(int i=1; i<=n; i++) \n\t\t{\n\t\t\tif(a[i]!=a[i-1]) ans+=now/3,now=0;\n\t\t\t++now;\n\t\t}\n\t\tans+=now/3;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597724915,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1392D \u3010Omkar and Bed Wars\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u76ee\u4e2d\u7684\u63cf\u8ff0\uff0c\u6211\u4eec\u6765\u8003\u8651\u4ec0\u4e48\u662f *\u4e0d\u5408\u6cd5\u7684\u653b\u51fb\u72b6\u6001*\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5b58\u5728\u4e0d\u5408\u6cd5\u7684\u653b\u51fb\u72b6\u6001\uff0c**\u5f53\u4e14\u4ec5\u5f53 $a$ \u88ab $b$ \u653b\u51fb\uff0c$a$ \u4e0d\u653b\u51fb $b$ \u800c\u662f\u53bb\u653b\u51fb\u4e0d\u653b\u51fb $a$ \u7684 $c$\u3002** \u5177\u4f53\u800c\u8a00\uff0c\u5b58\u5728\u4e0d\u5408\u6cd5\u7684\u653b\u51fb\u72b6\u6001\uff0c\u5c31\u662f\u73af\u4e2d\u5b58\u5728\u8fde\u7eed\u7684\u4e00\u6bb5 $\\texttt{LLL}$ \u6216\u4e00\u6bb5 $\\texttt{RRR}$\u3002\n\n\u4e8e\u662f\u9898\u76ee\u53d8\u6210\u4e86**\u901a\u8fc7\u4fee\u6539\u73af\u4e0a\u4e00\u4e9b\u4f4d\u7f6e\u7684\u4eba\u7684\u653b\u51fb\u65b9\u5411\uff0c\u4f7f\u73af\u4e2d\u4e0d\u5b58\u5728\u8fde\u7eed\u7684\u4e09\u4e2a\u4eba\u653b\u51fb\u65b9\u6cd5\u76f8\u540c\u3002**\n\n\u8003\u8651\u62c6\u73af\u4e3a\u94fe\u7edf\u8ba1 $\\texttt{L}$ \u6216 $\\texttt{R}$ \u7684\u8fde\u7eed\u6bb5\uff0c\u56e0\u4e3a\u5982\u679c\u51fa\u73b0\u8fde\u7eed\u4e09\u4e2a\u653b\u51fb\u65b9\u5411\u76f8\u540c\u7684\u4eba\u5c31\u8981\u4fee\u6539\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u7edf\u8ba1\u51fa\u6765\u7684\u6bcf\u4e2a\u8fde\u7eed\u6bb5\u7684\u957f\u5ea6\u9664 $3$ \u52a0\u5230\u7b54\u6848\u4e2d\u5373\u4e3a\u8981\u4fee\u6539\u7684\u4f4d\u7f6e\u6570\u3002\n\n**\u90a3\u4e48\uff0c\u4ece\u73af\u7684\u54ea\u4e2a\u4f4d\u7f6e\u62c6\u73af\u4e3a\u94fe\u5462\uff1f**\n\n\u4e3a\u4e86\u80fd\u8ba9\u8f93\u5165\u7684\u4e32\u4e0a\u7684 $\\texttt{L}$ \u548c $\\texttt{R}$ \u5728\u6211\u4eec\u626b\u63cf\u65f6\u5168\u51d1\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8f93\u5165\u7684\u4e32\u590d\u5236\u4e00\u904d\u63a5\u5728\u539f\u4e32\u6700\u540e\uff0c\u7136\u540e **\u66b4\u529b\u627e\u5230\u7b2c\u4e00\u4e2a $\\texttt{L}$ \u4e0e $\\texttt{R}$ \u7684\u5206\u754c\u70b9**\uff0c\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u5f80\u540e\u7684 $n$ \u4e2a\u5b57\u7b26\uff0c\u5c31\u662f\u6211\u4eec\u62c6\u73af\u7684\u7ed3\u679c\u3002\n\n\u4f46\u662f\uff0c**\u5982\u679c\u90fd\u662f $\\texttt{L}$ \u6216\u8005\u90fd\u662f $\\texttt{R}$ \u7684\u60c5\u51b5\u600e\u4e48\u529e\uff1f**\n\n\u6211\u4eec\u62ff\u6837\u4f8b\u7684\u6700\u540e\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\u6765\u8003\u8651\uff1a\n\n\t5\n    RRRRRR\n\n\u628a\u8fd9\u4e2a\u5e8f\u5217\u753b\u6210\u73af\uff1a\n\n![Pic1](https://cdn.luogu.com.cn/upload/image_hosting/vjyv7nsr.png)\n\n\u6839\u636e\u6211\u4eec\u521a\u521a\u5904\u7406\u7684\u5176\u5b83\u60c5\u51b5\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6709 $5$ \u4e2a $\\texttt{R}$\uff0c\u6309\u7167\u4e0a\u6587\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u6211\u4eec\u5e94\u8be5\u4fee\u6539 $1$ \u4e2a\u653b\u51fb\u65b9\u5411\uff0c\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\n\n![Pic2](https://cdn.luogu.com.cn/upload/image_hosting/j13t49km.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6539\u4e86\u4e00\u4e2a\u540e\u60c5\u51b5\u8fd8\u662f\u4e0d\u5408\u6cd5\u7684\uff1a**\u56e0\u4e3a $\\texttt{R}$ \u7684\u6574\u4e2a\u5e8f\u5217\u9996\u5c3e\u76f8\u8fde\uff0c\u5bfc\u81f4 $\\texttt{L}$ \u5de6\u53f3\u4e24\u8fb9\u7684\u4e24\u4e2a $\\texttt{R}$ \u8fde\u5728\u4e86\u4e00\u8d77\uff0c\u53c8\u4ea7\u751f\u4e86\u8fde\u7eed\u7684\u56db\u4e2a $\\texttt{R}$\uff0c\u4f7f\u6574\u4e2a\u5e8f\u5217\u4e0d\u5408\u6cd5\u4e86\u3002**\n\n\u90a3\u4e48\u5904\u7406\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u518d\u6539\u4e00\u4e2a\u5c31\u597d\u4e86\u3002\n\n![Pic3](https://cdn.luogu.com.cn/upload/image_hosting/fl5iasu3.png)\n\n\u8fdb\u4e00\u6b65\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0\uff1a**\u5f53\u6574\u4e2a\u73af\u7684\u4eba\u7684\u653b\u51fb\u65b9\u5411\u90fd\u76f8\u540c\u65f6\uff0c\u5982\u679c\u5e8f\u5217\u957f\u5ea6\u4e0d\u80fd\u88ab $3$ \u6574\u9664\uff0c\u5c31\u9700\u8981\u5728\u4e0a\u6587\u65b9\u6cd5\u5f97\u5230\u7684\u7b54\u6848\u7684\u57fa\u7840\u4e0a\u518d $+1$\u3002**\n\n\u53ef\u4ee5\u62ff $n=4$ \u5168\u662f $\\texttt{R}$ \u7684\u60c5\u51b5\u9a8c\u8bc1\u4e00\u4e0b\uff1a\n\n![Pic4](https://cdn.luogu.com.cn/upload/image_hosting/ouxf7e9o.png)\n\n\u663e\u7136\u8fd9\u4e2a\u731c\u6d4b\u662f\u5bf9\u7684\u3002\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define ll long long\n#define rgt register int\nusing namespace std;\n\nconst int mxn = 2e5+5;\nchar rb[mxn<<1];\nint n,cnt,ans;\n\ninline void getrb(){\n\tchar c=getchar();\n\twhile(c!='L'&&c!='R')\n\t\tc=getchar();\n\tint tg=1;\n\trb[tg+n]=rb[tg]=c;\n\ttg++;\n\tc=getchar();\n\twhile(c=='L'||c=='R'){\n\t\trb[n+tg]=rb[tg]=c;\n\t\ttg++;\n\t\tc=getchar();\n\t}\n}  //\u5feb\u901f\u8bfb\u5165\u5b57\u7b26\u4e32\u5e8f\u5217\n\nint main(){\n\tint test,dt;\n\tscanf(\"%d\",&test);\n\twhile(test--){\n\t\tscanf(\"%d\",&n);\n\t\tgetrb();\n\t\t\n        dt=1;\n\t\twhile(dt<n){\n\t\t\tif(rb[dt+1]!=rb[dt])\n\t\t\t\tbreak;\n\t\t\tdt++;\n\t\t}  //\u627e\u5230 L \u4e0e R \u7684\u7b2c\u4e00\u4e2a\u5206\u754c\u70b9\n        \n\t\tcnt=1;\n\t\tans=0;\n\t\tfor(rgt i=dt+2;i<=dt+n;i++){\n\t\t\tif(rb[i]!=rb[i-1]){\n\t\t\t\tans+=cnt/3;  //\u7edf\u8ba1\u7b54\u6848\n\t\t\t\tcnt=1; \n\t\t\t}else\n\t\t\t\tcnt++;  //\u7b97\u8fde\u7eed\u6bb5\u957f\u5ea6\n\t\t}\n\t\tans+=cnt/3;\n        \n\t\tif(dt==n&&cnt%3)  //\u7279\u5224\u5168\u662f L \u6216\u5168\u662f R\u7684\u60c5\u51b5\n\t\t\tans++;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1635925147,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1392D \u3010Omkar and Bed Wars\u3011"
    },
    {
        "content": "### Description: \n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u7531LR\u4e24\u79cd\u5b57\u6bcd\u7ec4\u6210\uff0c\u4e14\u9996\u5c3e\u76f8\u8fde\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u5206\u522b\u8868\u793a\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u4eba\u653b\u51fb\u7684\u65b9\u5411\uff0c\u4e00\u6b21\u4fee\u6539\u80fd\u6539\u53d8\u4e00\u4e2a\u4f4d\u7f6e\u7684\u653b\u51fb\u65b9\u5411\uff0c\u6c42\u6700\u5c11\u4fee\u6539\u6b21\u6570\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u4eba\u90fd\u81f3\u5c11\u53d7\u5230\u4e00\u4e2a\u4eba\u7684\u653b\u51fb\u3002\n\n### Solution: \n\n\u5bb9\u6613\u53d1\u73b0\u7b54\u6848\u6210\u7acb\u7684\u5145\u8981\u6761\u4ef6\u662f\u6ca1\u6709\u8fde\u7eed\u7684\u4e09\u4e2a\u4eba\u7684\u653b\u51fb\u65b9\u5411\u76f8\u540c\uff0c\u5373\u4e0d\u5b58\u5728\u60c5\u51b5 LLL \u6216 RRR\u3002\u56e0\u6b64\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u57283\u4e2a\u8fde\u7eed\u7684\u65b9\u5411\u65f6\uff0c\u624d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u8fde\u7eed\u7684\u65b9\u5411\u5408\u5e76\u4e3a\u4e00\u6574\u6bb5\uff0c\u8003\u8651\u6bcf\u6bb5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\u5f88\u591a\u9898\u89e3\u90fd\u6709\u7ed9\u51fa\u8d21\u732e\u7684\u5f0f\u5b50\u4e3a $\\lfloor \\frac{len}{3} \\rfloor$\uff0c\u5374\u6ca1\u6709\u7ed9\u51fa\u8bc1\u660e\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u601d\u8def\u3002\n\n\u8003\u8651\u6700\u57fa\u7840\u7684\u51e0\u79cd\u60c5\u51b5\uff0c\u6700\u4f18\u4fee\u6539\u65b9\u5f0f\u663e\u7136\u4e3a\uff1a\n\nRRR ->RLR\n\nRRRR->RLRR \u6216 RRRR->RRLR\n\nRRRRR->RRLRR\n\n\u5bf9\u4e8e\u957f\u5ea6\u4e3a6\u7684\u6bb5 RRRRRR \u663e\u7136\u53ea\u4fee\u6539\u4e00\u5904\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u7c7b\u4f3c\u7684\uff0c\u7531\u4e8e\u957f\u5ea6\u4e3a5\u65f6\u6700\u4f18\u4fee\u6539\u7684\u65b9\u5f0f\uff0c\u4f1a\u5bfc\u81f4\u6bcf\u52303\u7684\u500d\u6570\u65f6\u90fd\u5fc5\u7136\u9700\u8981\u591a\u4e00\u6b21\u4fee\u6539\u3002\u56e0\u6b64\u4fbf\u53ef\u4ee5\u60f3\u5230\u4ee53\u4e3a\u5355\u4f4d\u4fee\u6539\uff0c\u5373\u53ef\u4ee5\u8f6c\u6362\u4e3a RRLRRL\uff0c\u4f46\u8fd9\u6837\u505a\u4f1a\u6539\u53d8\u53f3\u8fb9\u4e00\u6bb5\u7684\u957f\u5ea6\uff0c\u4f46\u53ea\u9700\u7a0d\u52a0\u4fee\u6539\uff0c\u4f8b\u5982\u5c06\u6700\u53f3\u8fb9\u7684RL\u4ea4\u6362\u5373\u53ef\u4fdd\u8bc1\u6bb5\u7684\u957f\u5ea6\u4e0d\u53d8\u4e14\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\n\n\u8fd8\u9700\u6ce8\u610f\u7684\u662f\u53ef\u80fd\u5b58\u5728\u6574\u4e2a\u73af\u7684\u65b9\u5411\u90fd\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u53ea\u9700\u5148\u5728\u4efb\u610f\u4e00\u5904\u4fee\u6539\u7834\u73af\u4e3a\u94fe\uff0c\u63a5\u4e0b\u6765\u628a\u5269\u4e0b\u7684\u90e8\u5206\u5f53\u6210\u6574\u6bb5\u5904\u7406\u5373\u53ef\uff0c\u7b54\u6848\u4e3a\uff1a$1+\\lfloor\\frac{len-1}{3}\\rfloor$\u3002",
        "postTime": 1635918665,
        "uid": 151402,
        "name": "\u9b54\u7b26sigil",
        "ccfLevel": 0,
        "title": "CF1392D\u9898\u89e3"
    },
    {
        "content": "**\u9898\u610f:**\n\n\n\u7ed9\u4e00\u4e2a ```01``` \u6bb5\uff0c\u95ee\u6700\u5c11\u6539\u53d8\u591a\u5c11\u4e2a ```0``` \u6216 ```1``` \u4f7f\u5f97\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a 3 \u7684 ```01``` \u5b50\u6bb5\u3002\n\n**\u601d\u8def:**\n\n\u5148\u7834\u73af\u4e3a\u94fe\u3002\n\n\u66b4\u529b\u786c\u641e\uff0c\u627e\u5230\u6bcf\u4e00\u4e2a\u8fde\u7eed\u6bb5\u7684\u957f\u5ea6\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u9700\u8981\u6539\u53d8\u7684\u6700\u5c0f\u5b57\u7b26\u6570\u91cf\u5373\u4e3a\u8fd9\u4e00\u6bb5 $\\lfloor \\frac{len}{3} \\rfloor$\n\n**\u8bc1\u660e\uff1a**\n\u5bf9\u4e8e\u4e00\u6bb5\u8fde\u7eed\u7684\u5e8f\u5217\uff0c\u6539\u53d8 $n$ \u4e2a\u4f4d\u7f6e\u8981\u4fdd\u8bc1\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a 3 \u7684\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u8d2a\u5fc3\u60f3\u6cd5\uff0c\u5373\u6bcf\u9694\u4e24\u4e2a\u8fde\u7eed\u7684 ```0``` \u6216 ```1``` \uff0c\u5c31\u6539\u53d8\u8fd9\u4e2a\u4f4d\u7f6e\u4f7f\u5176\u53d8\u6210 ```1``` \u6216 ```0```\uff0c\u5219\u5bf9\u4e8e\u4e00\u6bb5\u957f\u5ea6\u4e3a $len$ \u7684\u5e8f\u5217\uff0c\n\u82e5 $len\\equiv 0  \\pmod{3} $,\u5219\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $\\frac{len}{3}$,\u5426\u5219\u53ea\u8981\u5c06\u591a\u51fa\u6765\u7684\u8fde\u7eed\u5e8f\u5217\u79fb\u5230\u5f00\u5934\u5373\u53ef\u3002\n\n\u6bd4\u5982:\n\n$00000 \\to 10000 \\to 00100$ \n\n\u82e5\u6574\u4e2a\u94fe\u4e3a\u4e00\u4e2a\u8fde\u7eed\u5e8f\u5217\uff0c\u5148\u628a3\u7684\u500d\u6570\u5904\u7406\u6389\uff0c\u5c31\u4f1a\u591a\u51fa\u4e00\u5c0f\u6bb5\u8fde\u7eed\u5e8f\u5217\uff0c\u9700\u8981\u591a\u6539\u53d8\u4e00\u4e2a\u4f4d\u7f6e\u4f7f\u5176\u4e0d\u8fde\u7eed\uff0c\u5176\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a $\\lceil \\frac{len}{3} \\rceil$\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e00\u6bb5\u8fde\u7eed\u5e8f\u5217\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a \n $\\lfloor \\frac{len}{3} \\rfloor$.\n \n**\u4f8b\u5b50:**\n\n ```000001111111``` ,\u8f6c\u5316\u4e3a $\\{5,7\\}$.\n\n\u4e0d\u96be\u53d1\u73b0\uff0c $ans$ \u5c31\u662f $\\lfloor \\frac{5}{3} \\rfloor+\\lfloor \\frac{7}{3} \\rfloor=3$.\n\n\u7279\u522b\u7684\uff0c\u5bf9\u4e8e\u5168\u90e8\u662f ```0``` \u548c ```1``` \u7684\u60c5\u51b5\uff0c\n$ans$ \u4e3a $\\lceil \\frac{n}{3} \\rceil$. \n\n**\u4ee3\u7801:**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Maxn=4e5+10;\nconst int mod=1e9+7;\nconst int inf=0x7fffffff;\ntypedef long long ll;\nnamespace io{\n\tconst int _SIZE=(1<<21)+1;\n\tchar *iS,*iT,ibuf[_SIZE],c,stk[40];int tot;\n#define gc()getchar()\n\ttemplate<class I>\n\tinline void read(I &_x){\n\t\tI fl=1;\n\t\tfor(c=gc();c<'0'||c>'9';c=gc()) if(c=='-') fl=-1;\n\t\tfor(_x=0;c>='0'&&c<='9';c=gc()) _x=(_x<<3)+(_x<<1)+(c&15);\n\t\t_x*=fl;\n\t}\n\ttemplate<class I>\n\tinline void prt(I _x,char ch='\\0'){\n\t\ttot=0;\n\t\tif(_x<0) putchar('-'),_x*=-1;\n\t\tdo{\n\t\t\tstk[tot++]=_x%10|48,_x/=10;\n\t\t}while(_x);\n\t\tdo{\n\t\t\tputchar(stk[--tot]);\n\t\t}while(tot);\n\t\tif(ch) putchar(ch);\n\t}\n}\nusing io::read;\nusing io::prt;\nint t;\nint n,tot;\nint a[Maxn],cnt[Maxn],len[Maxn];\nbool flag=true;\nll ans;\nint main(){\n\tread(t);\n\twhile(t--){\n\t\tread(n);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tchar ch;\n\t\t\tscanf(\"%c\",&ch);\n\t\t\tif(ch=='L') a[i]=a[i+n]=0;\n\t\t\tif(ch=='R') a[i]=a[i+n]=1;\n\t\t\tif(a[i]!=a[1]) flag=false;\n\t\t}\n\t\tif(flag){ \n\t\t\tprt((n+2)/3,'\\n');\n\t\t\tcontinue;\n\t\t}\n\t\tcnt[++tot]=len[tot]=1;//cnt\u8868\u793a\u4e0b\u6807\uff0clen\u8868\u793a\u6bcf\u4e00\u6bb5\u7684\u957f\u5ea6 \uff0ctot\u8868\u793a\u6bcf\u4e00\u6bb5\u7684\u7f16\u53f7 \n\t\tfor(int i=2;i<=(n<<1);i++){\n\t\t\tif(a[i]==a[i-1]) cnt[tot]=i;\n\t\t\tif(a[i]!=a[i-1]) cnt[++tot]=i; /\n\t\t\tlen[tot]++;\n\t\t} \n\t\tint k=upper_bound(cnt+1,cnt+1+tot,n)-cnt;//\u627e\u7b2c\u4e00\u4e2a\u7ed3\u5c3e\u5927\u4e8en\u7684\u6bb5\u7684\u4e0b\u6807\n\t\tfor(int i=2;i<=k;i++) ans+=len[i]/3;//\u7edf\u8ba1\u6bcf\u4e00\u6bb5\u7684\u8d21\u732e (\u4ece\u4e8c\u5f00\u59cb\u662f\u4e3a\u4e86\u628a\u7b2c\u4e00\u6bb5\u63a5\u5230\u5c3e\u6bb5) \n\t\tprt(ans,'\\n');\n\t\tfor(int i=1;i<=tot;i++) cnt[i]=len[i]=0;\n\t\tans=tot=0,flag=true;\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1635917659,
        "uid": 395493,
        "name": "\u767d\u4f9d\u5c18_\u8f69\u5b50\u58a8",
        "ccfLevel": 0,
        "title": "CF1392D\u9898\u89e3 [Omkar and Bed Wars]"
    },
    {
        "content": "# \u601d\u8def\n\u4e00\u9053\u601d\u7ef4\u91cf\u4e0d\u5927\u7684\u8d2a\u5fc3\u9898\u3002\u6211\u4eec\u628a\u9898\u76ee\u610f\u601d\u7ffb\u8bd1\u8fc7\u6765\uff0c\u4e0d\u5408\u6cd5\u7684\u5145\u8981\u6761\u4ef6\u662f\u4e00\u4e2a\u4eba\u4ed6\u5de6\u53f3\u7684\u4eba\u548c\u4ed6\u653b\u51fb\u65b9\u5411\u90fd\u76f8\u540c\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u4e00\u4e0b\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u7684\u76f8\u540c\u653b\u51fb\u65b9\u5411\u7684\u4eba\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u8003\u8651\u600e\u4e48\u7edf\u8ba1\u7b54\u6848\uff0c\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e32\u8fde\u7eed\u7684\u76f8\u540c\u5e8f\u5217\uff0c\u6211\u4eec\u5c06\u6bcf\u4e09\u4e2a\u4eba\u4e2d\u95f4\u90a3\u4e2a\u4eba\u65b9\u5411\u53d6\u53cd\u5c31\u4e00\u5b9a\u4f7f\u5f97\u8fd9\u4e09\u4e2a\u4eba\u90fd\u53d8\u6210\u5408\u6cd5\u72b6\u6001\uff0c\u6240\u4ee5\u64cd\u4f5c\u7684\u6b21\u6570\u5c31\u662f\u5c06\u6bcf\u4e32\u8fde\u7eed\u76f8\u540c\u7684\u5e8f\u5217\u7684\u957f\u5ea6\u9664\u4ee5\u4e09\u52a0\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n$ Tip :$\n\n $ 1. $ \u56e0\u4e3a\u9898\u76ee\u662f\u94fe\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u62c6\u73af\u4e3a\u94fe\u6765\u8fdb\u884c\u7edf\u8ba1\n\n $ 2. $ \u5168\u90e8\u76f8\u540c\u9700\u8981\u7279\u5224\n\n $ 3. $ \u591a\u7ec4\u6570\u636e\u8bb0\u5f97\u6e05\u7a7a \n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=4e5+7;\nint n,a[maxn],sum[maxn],cnt,now=0,ans,p,t;\nbool pd1,pd2;\nchar c;\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\tscanf(\"%d\",&n);\n\tans=0;\n\tcnt=0;now=0;pd1=0;pd2=0;\n\tmemset(sum,0,sizeof(sum));\n\tmemset(a,-1,sizeof(a));\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>c;\n\t\tif(c=='L')a[i]=0,a[i+n]=0;\n\t\tif(c=='R')a[i]=1,a[i+n]=1;\n\t\tif(a[i]!=a[1])pd1=1;\n\t}\n\tfor(int i=2;i<=n;i++)\n\t{if(a[i]!=a[i-1]){\n\tp=i;now=i-1;break;}}\n\twhile(now<=2*n){\n\t\tif(now>=p+n){break;}\n\t\tnow++;\n\t\t++cnt;sum[cnt]=1;\n\t\twhile(a[now]==a[now+1]){\n\t\t\tsum[cnt]++;\n\t\t\tnow++;\n\t\t\tif(now>=p+n)break;\t\t\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt;i++)\n\tans+=sum[i]/3;\n\tif(!pd1)printf(\"%d\\n\",int(ceil(double (n)/3.0)));\n\telse printf(\"%d\\n\",ans);\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1635916078,
        "uid": 429499,
        "name": "woshiCB",
        "ccfLevel": 0,
        "title": "CF1392D \u3010Omkar and Bed Wars\u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u597d\u7684dp\u9898\uff0c\u5c0f\u849f\u84bb\u5b9e\u73b0\u7684\u65f6\u5019\u72af\u4e86\u5f88\u591asb\u9519\u8bef\u3002\n\n\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53d1\u73b0\u7b54\u6848\u53ea\u80fd\u7531\u82e5\u5e72\u4e2a $\\text{RL,RRL,RLL,RRL}$ \u8fd9\u6837\u7684\u4e32\u7ec4\u6210\uff0c\u5373\u8fde\u7eed\u7684 $L$ \u548c $R$ \u7684\u6570\u76ee\u4e0d\u5927\u4e8e $2$\uff0c\u5e76\u4e14\u4ee5 $R$ \u5f00\u5934\uff0c$L$ \u7ed3\u5c3e\u3002\n\n\u4e0b\u6587\u4e2d\u4ee4 $L$ \u4e3a $1$\uff0c$R$ \u4e3a $0$\u3002\n\n\u90a3\u4e48\u5148\u8003\u8651\u5f53\u662f\u4e00\u4e2a\u961f\u5217\uff08\u5373\u9996\u5c3e\u4e0d\u8fde\u63a5\uff09\u800c\u4e0d\u662f\u4e00\u4e2a\u73af\u7684\u65f6\u5019\u600e\u4e48\u505a\uff1a\u8bbe$dp_{i,0/1,1/2}$\u8868\u793a\u5230\u7b2c$i$\u4e2a\u6570\uff0c\u8fd9\u4e2a\u6570\u4e3a$0/1$\uff0c\u5df2\u7ecf\u8fde\u7eed\u4e86$1/2$\u6b21\u3002\n\n\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u5f88\u5feb\u80fd\u591f\u63a8\u51fa\u6765\uff1a\n\n$dp_{i,0,1} = \\min (dp_{i-1,1,1} , dp_{i-1,1,2}) + (a_i == 1)$\n\n$dp_{i,0,2} = dp_{i-1,0,1} + ( a_i == 1 )$\n\n$dp_{i,1,1} = \\min(dp_{i-1,0,1},dp_{i-1,0,2}) + ( a_i == 0 )$\n\n$dp_{i,1,2} = dp_{i-1,1,1} + a_i == 0$\n\n\u5176\u4e2d\uff0c $(a_{i}==0)$ \u8868\u793a\u5f53 $a_i=0$ \u662f\u8fd4\u56de $1$ \uff0c\u5426\u5219\u8fd4\u56de $0$ \u3002\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u521d\u59cb\u5316\u4e5f\u5f88\u5bb9\u6613\u5f97\u5230\uff1a\n\n$dp_{1,0,1}=(a_1==1),dp_{1,1,1} = dp_{1,0,2} = dp_{1,1,2} = \\inf$ \n\n\u90a3\u4e48\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662f $\\min(dp_{n,1,1},dp_{n,1,2})$ \u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u73af\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u73af\u4e2d\u7684\u7b54\u6848\uff0c\u5fc5\u7136\u662f\u7531\u4e00\u79cd\u961f\u5217\u7684\u7b54\u6848\u63a8\u51fa\u6765\u7684\uff0c\u56e0\u4e3a\u7ec4\u6210\u8fd9\u4e2a\u7b54\u6848\u7684\u4e32\u7684\u957f\u5ea6\u6700\u591a\u662f $4$\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u961f\u5217\u5de6\u79fb$/$\u53f3\u79fb$0 - 3$\u683c\uff0c\u4e00\u5b9a\u5c31\u6709\u4e00\u4e2a\u5c31\u662f\u7b54\u6848\u3002\n\n[code](https://www.luogu.com.cn/paste/1z7enh93)",
        "postTime": 1602856922,
        "uid": 141179,
        "name": "pigstd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1392D \u3010Omkar and Bed Wars\u3011"
    },
    {
        "content": "# \u9898\u89e3 - $\\mathrm{P1392D}$\n\n## \u9898\u76ee\u63cf\u8ff0\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1392D)\n\n## $\\mathrm{Sol}$\n\n\u597d\u50cf\u5927\u5bb6\u90fd\u662f\u627e\u89c4\u5f8b\u505a\u6cd5\uff0c\u6211\u63d0\u4f9b\u4e00\u79cd dp \u7684\u505a\u6cd5\n\n\u8bbe $f_{i,j,k}$ \u8868\u793a\u5230\u7b2c $i$ \u4e2a\u4eba\u653b\u51fb\u65b9\u5411\u4e3a $j\u2208[0,1]$ \u5f53\u524d\u53d7\u5230 $k\u2208[0,1,2]$ \u4e2a\u4eba\u653b\u51fb\u7684\u6700\u5c11\u4fee\u6539\u6b21\u6570\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4eba\u7684\u653b\u51fb\u65b9\u5411 $lj$ \u4ee5\u53ca\u53d7\u5230\u653b\u51fb\u6b21\u6570 $lk$ \u8fdb\u884c\u8f6c\u79fb\u3002\u5206 $4$ \u79cd\u60c5\u51b5\u8fdb\u884c\u8ba8\u8bba\uff1a\n\n* $i$ \u548c $i-1$ \u653b\u51fb\u65b9\u5411\u76f8\u540c\u4e14\u653b\u51fb\u5de6\u8fb9\uff0c\u90a3\u4e48\u6b64\u65f6\u8f6c\u79fb\u7684\u6761\u4ef6\u4e3a $lk=2$ \u56e0\u4e3a\u53ea\u6709\u53d7\u5230\u4e24\u4e2a\u4eba\u7684\u653b\u51fb\u624d\u80fd\u5f80\u4efb\u610f\u65b9\u5411\u8fdb\u653b\uff0c\u6b64\u65f6 $i$ \u53ef\u80fd\u53d7\u5230 $0\\sim 1$ \u4e2a\u653b\u51fb\u6765\u81ea $i+1$\u3002\u6240\u4ee5\u8f6c\u79fb\u4e3a $f_{i,0,0/1}=\\min(f_{i-1,lj,lk}+[s_i='R'])[lk==2]$\n\n* \u5bf9\u4e8e $i$ \u548c $i-1$ \u90fd\u653b\u51fb\u53f3\u8fb9\u7684\u8f6c\u79fb\u4e3a\uff1a$f_{i,1,2}=\\min(f_{i-1,lj,lk}+[s_i='L'])[lk<2]$\n\n* \u5bf9\u4e8e $i$ \u653b\u51fb\u5de6\u8fb9\uff0c$i-1$ \u653b\u51fb\u53f3\u8fb9\u90a3\u4e48\u8f6c\u79fb\u4e3a\uff1a$f_{i,0,0/1}=\\min(f_{i-1,lj,lk}+[s_i=='L'])[lk<2]$\n\n* \u5bf9\u4e8e $i$ \u653b\u51fb\u53f3\u8fb9\uff0c$i-1$ \u653b\u51fb\u5de6\u8fb9\u90a3\u4e48\u8f6c\u79fb\u4e3a\uff1a$f_{i,1,1/2}=\\min(f_{i-1,lj,lk}+[s_i=='R'])[lk>0]$\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(\\sum n)$ \u9644\u52a0\u4e00\u4e2a\u5927\u5e38\u6570 \n\n## $\\mathrm{Code}$\n\n```cpp\nconst int N=2e5+5;\n\nchar a[N];\nint Q,n,ans,f[N][2][4];\n\ninline int C(char c) { return (c=='R')?1:0; }\n\nint main()\n{\n\tio.read(Q);\n\tfor (;Q--;)\n\t{\n\t\tio.read(n);\n\t\tscanf(\"%s\",a+1);\n\t\t//0:left 1:right \n\t\tint ans=1e9;\n\t\tFor(j,0,1) For(k,0,2) \n\t\t{\n\t\t\tFor(i,0,n+1) mem(f[i],88);\n\t\t\tf[0][j][k]=0;\n\t\t\tFor(i,1,n) For(jj,0,1) For(kk,0,2) For(Newj,0,1) \n\t\t\t{\n\t\t\t\tint Newk;\n\t\t\t\tif(jj==Newj&&jj&&kk<2) f[i][Newj][2]=min(f[i][Newj][2],f[i-1][jj][kk]+(C(a[i])^Newj));\n\t\t\t\tif(jj==Newj&&!jj&&kk==2) For(Newk,0,1) f[i][Newj][Newk]=min(f[i][Newj][Newk],f[i-1][jj][kk]+(C(a[i])^Newj));\n\t\t\t\tif(jj!=Newj&&jj&&kk>0) For(Newk,1,2) f[i][Newj][Newk]=min(f[i][Newj][Newk],f[i-1][jj][kk]+(C(a[i])^Newj));\n\t\t\t\tif(jj!=Newj&&!jj&&kk<2) For(Newk,0,1) f[i][Newj][Newk]=min(f[i][Newj][Newk],f[i-1][jj][kk]+(C(a[i])^Newj));\n\t\t\t}\n\t\t\tans=min(ans,f[n][j][k]);\n\t\t}\n\t\tio.write(ans);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n/*\n1\n6\nLRRRRL\n*/\n\t\t\n```\n",
        "postTime": 1597721844,
        "uid": 308464,
        "name": "\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1392D \u3010Omkar and Bed Wars\u3011"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\u6709 $n$ \u4e2a\u4eba\u5728\u73a9\u8d77\u5e8a\u6218\u4e89\uff0c\u4ed6\u4eec\u56f4\u6210\u4e00\u4e2a\u5708\uff0c\u4f7f\u7b2c $i$ \u4e2a\u4eba\u5728\u7b2c $i+1$ \u4e2a\u7684\u5de6\u8fb9\uff08\u5176\u4e2d\u7b2c $n$ \u4e2a\u4eba\u5728\u7b2c $1$ \u4e2a\u4eba\u5de6\u8fb9\uff09\u3002\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u82e5\u7b2c $i$ \u4e2a\u5b57\u7b26\u662f `L`\uff0c\u5219\u4ee3\u8868\u7b2c $i$ \u4e2a\u4eba\u653b\u51fb\u4ed6\u5de6\u8fb9\u7684\u4eba\uff0c\u5426\u5219\u5c31\u662f\u5728\u653b\u51fb\u4ed6\u53f3\u8fb9\u7684\u4eba\u3002\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5408\u6cd5\u7684\u653b\u51fb\u4e3a\uff1a\n- \u82e5\u53ea\u6709 $a$ \u653b\u51fb $b$\uff0c\u5219 $b$ \u5fc5\u987b\u653b\u51fb $a$\u3002\n- \u82e5 $a$ \u548c $c$ \u540c\u65f6\u653b\u51fb $b$\uff0c\u6216 $a$ \u548c $c$ \u90fd\u4e0d\u653b\u51fb $b$\uff0c\u5219 $b$ \u53ef\u4ee5\u4efb\u610f\u653b\u51fb $a$ \u548c $c$ \u4e2d\u7684\u4e00\u4e2a\u3002\n\u4f60\u6bcf\u6b21\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u4f7f\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4ece `L` \u53d8\u4e3a `R`\uff0c\u6216\u4ece `R` \u53d8\u4e3a `L`\u3002\u6c42\u4f7f\u5b57\u7b26\u4e32\u6240\u4ee3\u8868\u7684\u653b\u51fb\u72b6\u6001\u5408\u6cd5\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\n\n### \u5206\u6790\uff1a\n\u663e\u7136\uff0c\u82e5\u76f8\u90bb\u4e24\u4e2a\u4eba\u7684\u653b\u51fb\u72b6\u6001\u4e3a `RL`\uff0c\u5219\u8fd9\u4e24\u4e2a\u4eba\u7684\u653b\u51fb\u5fc5\u5b9a\u5408\u6cd5\u3002\u76f8\u90bb\u4e09\u4eba\u7684\u653b\u51fb\u72b6\u6001\uff0c\u82e5\u662f `RLL` \u6216 `RRL`\uff0c\u90a3\u4e48\u8fd9\u4e09\u4eba\u5c31\u7ec4\u6210\u4e86\u4e00\u4e2a\u5408\u6cd5\u653b\u51fb\u7684\u73af\u3002\u540c\u7406\uff0c\u82e5\u76f8\u90bb\u56db\u4eba\u7684\u653b\u51fb\u72b6\u6001\u662f `RRLL`\uff0c\u5219\u8fd9\u56db\u4eba\u5c31\u7ec4\u6210\u4e86\u4e00\u4e2a\u5408\u6cd5\u653b\u51fb\u7684\u73af\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b57\u7b26\u4e32\u4e2d\u5bfb\u627e\u8fd9\u56db\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u8bb0 $dp_i$ \u4e3a\u4f7f\u524d $i$ \u4e2a\u5b57\u7b26\u5408\u6cd5\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\n\u7531\u4e8e\u8fd9\u56db\u4e2a\u5b57\u7b26\u4e32\u6700\u591a\u6709\u56db\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u5c06\u539f\u5b57\u7b26\u4e32\u4ee3\u8868\u7684\u73af\u7684\u7528\u56db\u4e2a\u987a\u5e8f\u5bfb\u627e\u7b54\u6848\u3002\n\n### Code\uff1a\n```cpp\n/*\nuser:leoair\ntime:2022.3.24\n*/\n#include <bits/stdc++.h>\n#define int long long\n#define N 200010\nusing namespace std;\n\nint dp[N];\nstring s;\n\ninline int read(){\n    int s = 0, w = 1;\n    char ch = getchar();\n    for (; ch < '0' || ch > '9'; w *= ch == '-' ? -1 : 1, ch = getchar());\n    for (; ch >= '0' && ch <= '9'; s = s * 10 + ch - '0', ch = getchar());\n    return s * w;\n}\n\nint calc(string a, string b, int res = 0){\n    for (int i = 0; i < a.size(); ++i)\n        if (a[i] != b[i]) ++res;\n    return res;\n}\n\nsigned main(){\n    for (int _ = read(), ans, n; _--; ){\n        n = read(), cin >> s, s = \" \" + s, ans = 2147482597;\n        for (int i = 1; i < 5; ++i){\n            dp[0] = 0, dp[1] = 2147482597;\n            for (int i = 2; i <= n; ++i){\n                dp[i] = dp[i - 2] + calc(\"RL\", s.substr(i - 1, 2));\n                if (i > 2){\n                    dp[i] = min(dp[i], dp[i - 3] + min(calc(\"RRL\", s.substr(i - 2, 3)), calc(\"RLL\", s.substr(i - 2, 3))));\n                    if (i > 3) dp[i] = min(dp[i], dp[i - 4] + calc(\"RRLL\", s.substr(i - 3, 4)));\n                }\n            }\n            ans = min(ans, dp[n]), s = \" \" + s.substr(2, n - 1) + s[1];\n        }\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1648169493,
        "uid": 124527,
        "name": "leoair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1392D \u3010Omkar and Bed Wars\u3011"
    },
    {
        "content": "\u4e0d\u96be\u53d1\u73b0\u5b58\u5728\u4e00\u79cd\u8d2a\u5fc3\u6784\u9020\u53ef\u4ee5\u5c06\u4e00\u6761\u65b9\u5411\u8fde\u7eed\u7684\u989c\u8272\u6bb5\u8fdb\u884c\u4e09\u4e2a\u4e09\u4e2a\u7684\u5206\u7ec4\uff0c\u53bb\u6389\u4e0d\u8ba1\u5165\u8d21\u732e\u7684\u9996\u5c3e\u540e\u7b54\u6848\u5c31\u662f $\\lceil \\frac{len-2}{3} \\rceil$\u3002\n\n\u5bf9\u4e8e\u9996\u4f4d\u7684\u989c\u8272\u6bb5\u8981\u5408\u5e76\u7b97\u3002            \n\n\u6700\u540e\u7279\u5224\u6240\u6709\u989c\u8272\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u4e0d\u7136\u4f1a\u88ab\u5361\u6389\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 2e5 + 5;\nint n,nums;\nchar s[Len];\nint Ceil(int x)\n{\n\tx -= 2;\n\tif(x <= 0) return 0;\n\tif(x % 3) return x / 3 + 1;\n\treturn x / 3;\n}\nvector<int> calc;\nint main()\n{\n\t//freopen(\"exercises.in\",\"r\",stdin);\n\t//freopen(\"exercises.out\",\"w\",stdout);\n\tint T;scanf(\"%d\",&T);\n\twhile(T --)\n\t{\n\t\tcalc.clear();\n\t\tnums = 0;\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%s\",s + 1);bool eq = 1;\n\t\tfor(int i = 2 ; i <= n ; i ++) if(s[i] != s[i - 1]) eq = 0;\n\t\tif(eq) \n\t\t{\n\t\t\tprintf(\"%d\\n\",(n + 2) / 3);\n\t\t\tcontinue;\t\n\t\t} \n\t\tint tot = 0;calc.push_back(0);\n\t\tfor(int l = 1 , r ; l <= n ; l = r + 1) \n\t\t{\n\t\t\tr = l;\n\t\t\twhile(r + 1 <= n && s[r + 1] == s[l]) r ++;\n\t\t\tif(r == n)\n\t\t\t{\n\t\t\t\tif(s[1] == s[n]) \n\t\t\t\t{\n\t\t\t\t\tcalc[1] += r - l + 1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcalc.push_back(0);tot ++;\n\t\t\tcalc[tot] = (r - l + 1);\n\t\t}\n\t\tfor(int i = 1 ; i <= tot ; i ++) nums += Ceil(calc[i]);\n\t\tprintf(\"%d\\n\",nums);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1634800787,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1392D Omkar and Bed Wars"
    }
]