[
    {
        "content": "\u5957\u8def\u6811\u94fe\u5256\u5206\uff0c\u7136\u540e\u89c2\u5bdf\u4e00\u6761\u94fe\u7684\u60c5\u51b5\uff1a\n\n\u6709\u4e00\u4e2a\u6570\u8f74\uff0c\u4e0a\u9762\u4f1a\u6709\u70b9\u7a81\u7136\u51fa\u73b0\uff0c\u7136\u540e\u79fb\u52a8\uff0c\u6700\u540e\u6d88\u5931\uff0c\u95ee\u6700\u65e9\u7684\u4e24\u70b9\u91cd\u5408\u7684\u65f6\u95f4\u3002\n\n\u628a\u6240\u6709\u94fe\u7684\u65f6\u95f4\u53d6 $\\min$ \u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\u8f74\uff0c\u6211\u4eec\u628a\u65f6\u95f4\u7ef4\u4e5f\u663e\u793a\u51fa\u6765\uff0c\u7136\u540e\u753b\u51fa\u6bcf\u4e2a\u70b9\u7684\u201c\u4e16\u754c\u7ebf\u201d\uff08\u7269\u4f53\u5728\u65f6\u7a7a\u4e2d\u7684\u8f68\u8ff9\uff09\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u7684\u8f68\u8ff9\u90fd\u662f\u4e00\u6761\u7ebf\u6bb5\uff0c\u53ea\u8981\u7b97\u51fa\u5728\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u7684\u6700\u65e9\u7684\u4ea4\u70b9\u5373\u53ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/86md2pd2.png)\n\n\u5982\u56fe\uff0c\u8fd9\u662f\u6837\u4f8b #1 \u7684\u60c5\u51b5\uff0c\u8003\u8651\u7684\u91cd\u94fe\u4e3a $1 - 4 - 6 - 5 - 2$ \u8fd9\u6761\uff0c\u7b54\u6848\u4e3a $27.3$\u3002\n\n\u6211\u4eec\u770b\u4e00\u4e0b\u4ea4\u70b9\u9644\u8fd1\u7684\u7ec6\u8282\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ueslnvnu.png)\n\n\u5230\u5e95\u8981\u600e\u4e48\u627e\u5230\u5e76\u786e\u5b9a\u8fd9\u4e2a\u4ea4\u70b9\u7684\u5750\u6807\u5462\uff1f\u5982\u679c\u4e24\u4e24\u5224\u65ad\u90a3\u5fc5\u7136\u662f\u4e0d\u884c\u7684\uff0c\u800c\u4e14\u4ea4\u70b9\u786e\u5b9e\u4e5f\u53ef\u80fd\u6709 $\\mathcal O (m^2)$ \u4e2a\u3002\n\n\u4ece\u201c\u627e\u5230**\u6700\u65e9\u7684**\u4ea4\u70b9\u201d\u51fa\u53d1\uff0c\u6211\u4eec\u8003\u8651\u6309\u7167\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u505a\u626b\u63cf\u7ebf\u3002\n\n\u8003\u8651\u8fd9\u6837\u7684\u4e00\u4e2a\u201c\u7b2c\u4e00\u4e2a\u4ea4\u70b9\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4ea4\u51fa\u5b83\u7684\u4e24\u6761\u7ebf\u6bb5\uff0c\u4e00\u5b9a\u5728\u4e4b\u524d\u7684\u67d0\u4e00\u4e2a\u65f6\u523b\uff0c\u662f\u76f8\u90bb\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u53ef\u80fd\u4e4b\u524d\u7684\u6bcf\u4e2a\u65f6\u523b\u90fd\u6709\u81f3\u5c11\u4e00\u6761\u7ebf\u6bb5\u6321\u5728\u5b83\u4eec\u4e4b\u95f4\uff0c\u8003\u8651\u53cd\u8bc1\u6cd5\u663e\u7136\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u52a8\u6001\u7ef4\u62a4\u5728\u626b\u63cf\u7ebf\u8fc7\u7a0b\u4e2d\u7684\uff0c\u76f8\u90bb\u7ebf\u6bb5\u7684\u4ea4\u5c31\u884c\u4e86\u3002\n\n\u626b\u63cf\u7ebf\u65e0\u975e\u5c31\u662f\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\uff0c\u5220\u9664\u4e00\u6761\u7ebf\u6bb5\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u7ef4\u62a4\u52a0\u5165\u548c\u5220\u9664\u7684\u65f6\u5019\u7684\u65c1\u8fb9\u4e24\u6761\u7ebf\u6bb5\u5c31\u884c\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u53ea\u6709 $\\mathcal O (m)$ \u5bf9\u76f8\u90bb\u7ebf\u6bb5\uff0c\u8fd9\u662f\u5f88\u91cd\u8981\u7684\u4e00\u6b65\u8f6c\u5316\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5408\u9002\u7684\u6570\u636e\u7ed3\u6784\u6765\u5bfb\u627e\u76f8\u90bb\u7ebf\u6bb5\u5e76\u80fd\u591f\u7ef4\u62a4\u52a0\u5165\u5220\u9664\u7ebf\u6bb5\u3002\n\n\u4ee4\u4eba\u610f\u60f3\u4e0d\u5230\u7684\u662f\uff0c\u6211\u4eec\u7684 set \u5c45\u7136\u5c31\u6ee1\u8db3\u6761\u4ef6\u3002set \u4e2d\u5b58\u5f53\u524d\u7684\u7ebf\u6bb5\uff0c\u4f46\u662f\u6392\u5e8f\u65b9\u5f0f\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf $T$ \u6765\u63a7\u5236\u7ebf\u6bb5\u5728 $t$ \u65f6\u523b\u4e0b\u7684\u6a2a\u5750\u6807\u4f4d\u7f6e\uff0c\u7136\u540e\u4f7f\u7528\u6a2a\u5750\u6807\u4f4d\u7f6e\u6392\u5e8f\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u53ea\u8981\u6ca1\u6709\u4ea4\u70b9\uff0c\u7ebf\u6bb5\u4e4b\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5c31\u4e0d\u4f1a\u6539\u53d8\uff0c\u8fd9\u662f\u4e0d\u4f1a\u89e6\u53d1 set \u7684\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c $T$ \u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u6c42\u51fa\u7684\u4ea4\u70b9\u65f6\u523b\uff0c\u5c31\u8981\u53ca\u65f6\u9000\u51fa\uff0c\u4e0d\u8981\u8c03\u7528 set\uff0c\u4ee5\u514d\u89e6\u53d1 UB \u5bfc\u81f4\u4e0d\u597d\u7684\u7ed3\u679c\u3002\n\n\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e5f\u4e0d\u8981\u4e00\u6c42\u51fa\u4ea4\u70b9\u5c31\u9000\u51fa\uff0c\u7b2c\u4e00\u4e2a\u6c42\u51fa\u7684\u4ea4\u70b9\u4e0d\u4e00\u5b9a\u662f\u6700\u65e9\u7684\u4ea4\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O (m \\log m \\log n)$\uff0c[\u8bc4\u6d4b\u94fe\u63a5](https://codeforces.com/contest/704/submission/72851525)\u3002",
        "postTime": 1583782431,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF704E \u3010Iron Man\u3011"
    },
    {
        "content": "> [CF704E Iron Man](https://codeforces.com/contest/704/problem/E)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\u3002\n- \u6709 $m$ \u4e2a\u4eba\uff0c\u7b2c $i$ \u4e2a\u4eba\u4f1a\u5728 $t_i$ \u65f6\u523b\u51fa\u73b0\u5728 $v_i$\uff0c\u5e76\u4ee5\u6bcf\u65f6\u523b $c_i$ \u6761\u8fb9\u7684\u901f\u5ea6\u5411 $u_i$ \u79fb\u52a8\uff0c\u5230\u8fbe $u_i$ \u7acb\u523b\u6d88\u5931\u3002\u51fa\u73b0\u7684\u65f6\u6bb5\u662f\u5de6\u95ed\u53f3\u95ed\u7684\uff0c\u56e0\u6b64\u5982\u679c $v_i = u_i$\uff0c\u5219\u5728 $t_i$ \u65f6\u523b $i$ \u4ecd\u4f1a\u51fa\u73b0\u3002\n- \u6c42\u7b2c\u4e00\u6b21\u6709\u4eba\u76f8\u9047\u7684\u65f6\u523b\uff0c\u6216\u5224\u65ad\u59cb\u7ec8\u65e0\u4eba\u76f8\u9047\u3002\n- $n,m \\le 10^5$\uff0c$t_i,c_i \\le 10^4$\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u8003\u8651\u4e00\u6761\u94fe\u7684\u60c5\u51b5\u3002\n\n\u66b4\u529b\u505a\u6cd5\u663e\u7136\u662f\u5bf9 $m$ \u4e2a\u4eba\u4e24\u4e24\u6c42\u7b54\u6848\u7136\u540e\u53d6 $\\min$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(m^2)$ \u65e0\u6cd5\u63a5\u53d7\u3002\n\n\u8003\u8651\u7528 `multiset` \u6309\u65f6\u95f4\u987a\u5e8f\u7ef4\u62a4\u6240\u6709\u4eba\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u5219\u53ea\u6709\u5728 `multiset` \u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u4eba\u6709\u53ef\u80fd\u662f\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(m \\log m)$\u3002\n\n\u6269\u5c55\u5230\u6811\u4e0a\uff0c\u5c06\u6811\u8fdb\u884c\u6811\u94fe\u5256\u5206\uff0c\u5219\u6bcf\u4e2a\u4eba\u88ab\u5212\u5206\u4e3a $\\mathcal O(\\log n)$ \u6761\u91cd\u94fe\u548c\u8f7b\u94fe\u3002\n\n\u5bf9\u6bcf\u6761\u94fe\u7684\u7b54\u6848\u6c42 $\\min$ \u5373\u4e3a\u6700\u7ec8\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n + m \\log m \\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nstruct frac {\n\tll x, y;\n\tinline frac() {}\n\tinline frac(ll _x, ll _y = 1ll) : x(_x), y(_y) {\n\t\tll g = __gcd(abs(x), abs(y));\n\t\tif (y < 0) g = -g;\n\t\tx /= g, y /= g;\n\t}\n\tinline friend frac operator + (frac e, frac b) { return frac(e.x * b.y + e.y * b.x, e.y * b.y); }\n\tinline friend frac operator - (frac e, frac b) { return frac(e.x * b.y - e.y * b.x, e.y * b.y); }\n\tinline friend frac operator * (frac e, frac b) { return frac(e.x * b.x, e.y * b.y); }\n\tinline friend frac operator / (frac e, frac b) { return frac(e.x * b.y, e.y * b.x); }\n\tinline friend bool operator < (frac e, frac b) { return e.x * b.y < b.x * e.y; }\n\tinline friend bool operator > (frac e, frac b) { return e.x * b.y > b.x * e.y; }\n\tinline friend bool operator <= (frac e, frac b) { return e.x * b.y <= b.x * e.y; }\n\tinline friend bool operator >= (frac e, frac b) { return e.x * b.y >= b.x * e.y; }\n\tinline friend bool operator == (frac e, frac b) { return e.x * b.y == b.x * e.y; }\n};\n\nconst int N = 1e5 + 7, inf = 1e9;\nint n, m, d[N], f[N], s[N], son[N], dfn[N], top[N], num;\nvi e[N];\ndouble Ans = inf;\nfrac tim, ans;\nstruct P {\n\tfrac k, b, l, r;\n\tinline P() {}\n\tinline P(frac k, frac b, frac l, frac r) : k(k), b(b), l(l), r(r) {}\n\tinline friend bool operator < (P a, P b) {\n\t\tif (a.k * tim + a.b == b.k * tim + b.b)\n\t\t\treturn a.l == b.l ? a.r == b.r ? a.k < b.k : a.r < b.r : a.l < b.l;\n\t\treturn a.k * tim + a.b < b.k * tim + b.b;\n\t}\n};\nmultiset<P> st;\nvector<P> heavy[N], light[N];\n\ninline int lca(int x, int y) {\n\twhile (top[x] != top[y]) {\n\t\tif (d[top[x]] < d[top[y]]) swap(x, y);\n\t\tx = f[top[x]];\n\t}\n\treturn d[x] < d[y] ? x : y;\n}\n\ninline frac dist(int x, int y) {\n\treturn frac(d[x] + d[y] - 2 * d[lca(x,y)]);\n}\n\nvoid dfs(int x) {\n\ts[x] = 1;\n\tfor (int y : e[x])\n\t\tif (y != f[x]) {\n\t\t\tf[y] = x, d[y] = d[x] + 1, dfs(y), s[x] += s[y];\n\t\t\tif (s[y] > s[son[x]]) son[x] = y;\n\t\t}\n}\n\nvoid dfs(int x, int p) {\n\tdfn[x] = ++num, top[x] = p;\n\tif (son[x]) dfs(son[x], p);\n\tfor (int y : e[x])\n\t\tif (y != son[x] && y != f[x]) dfs(y, y);\n}\n\ninline void solve(int x, int y, frac s, frac v) {\n\tfrac t = s + dist(x, y) / v;\n\twhile (top[x] != top[y])\n\t\tif (d[top[x]] > d[top[y]]) {\n\t\t\tint p = top[x];\n\t\t\theavy[p].pb(P(frac(0) - v, frac(d[x]) + v * s, s, s + frac(d[x] - d[p]) / v));\n\t\t\ts = s + frac(d[x] - d[p]) / v, x = top[x], p = f[x];\n\t\t\tlight[x].pb(P(frac(0) - v, frac(d[x]) + v * s, s, s + frac(d[x] - d[p]) / v));\n\t\t\ts = s + frac(d[x] - d[p]) / v, x = f[x];\n\t\t} else {\n\t\t\tint p = top[y];\n\t\t\theavy[p].pb(P(v, frac(d[y]) - v * t, t - frac(d[y] - d[p]) / v, t));\n\t\t\tt = t - frac(d[y] - d[p]) / v, y = top[y], p = f[y];\n\t\t\tlight[y].pb(P(v, frac(d[y]) - v * t, t - frac(d[y] - d[p]) / v, t));\n\t\t\tt = t - frac(d[y] - d[p]) / v, y = f[y];\n\t\t}\n\tint p = top[x];\n\tif (d[x] > d[y]) heavy[p].pb(P(frac(0) - v, frac(d[x]) + v * s, s, t));\n\telse heavy[p].pb(P(v, frac(d[y]) - v * t, s, t));\n}\n\ninline frac get(P a, P b) {\n\tif (a.k == b.k) return a.b == b.b ? max(a.l, b.l) : frac(inf);\n\tfrac o = (b.b - a.b) / (a.k - b.k);\n\treturn o >= max(a.l, b.l) && o <= min(a.r, b.r) ? o : frac(inf);\n}\n\ninline void work(vector<P> p) {\n\tst.clear(), ans = frac(inf);\n\tvector<pair<P, bool>> q;\n\tfor (P x : p) q.pb(mp(x, 1)), q.pb(mp(x, 0)); \n\tsort(q.begin(), q.end(), [](pair<P, bool> x, pair<P, bool> y) {\n\t\tfrac tx = x.se ? x.fi.l : x.fi.r, ty = y.se ? y.fi.l : y.fi.r;\n\t\treturn tx == ty ? x.se > y.se : tx < ty;\n\t});\n\tfor (auto x : q) {\n\t\tfrac now = x.se ? x.fi.l : x.fi.r;\n\t\tif (now >= ans) break;\n\t\ttim = now;\n\t\tif (x.se) {\n\t\t\tauto tmp = st.insert(x.fi), pre = tmp, suf = tmp;\n\t\t\tif (pre != st.begin()) ans = min(ans, get(*--pre, *tmp));\n\t\t\tif (++suf != st.end()) ans = min(ans, get(*tmp, *suf));\n\t\t} else {\n\t\t\tauto tmp = st.lower_bound(x.fi), pre = tmp, suf = tmp;\n\t\t\tif (++suf != st.end() && pre != st.begin()) ans = min(ans, get(*--pre, *suf));\n\t\t\tst.erase(tmp);\n\t\t}\n\t}\n\tAns = min(Ans, 1.0 * ans.x / ans.y);\n}\n\nint main() {\n\trd(n), rd(m);\n\tfor (int i = 1, x, y; i < n; i++) rd(x), rd(y), e[x].pb(y), e[y].pb(x);\n\td[1] = 1, dfs(1), dfs(1, 1);\n\tfor (int i = 1, t, c, x, y; i <= m; i++)\n\t\trd(t), rd(c), rd(x), rd(y), solve(x, y, frac(t), frac(c));\n\tfor (int i = 1; i <= n; i++) work(heavy[i]), work(light[i]);\n\tif (Ans == inf) return prints(\"-1\"), 0;\n\tprintf(\"%.10f\\n\", Ans);\n\treturn 0;\n}\n```",
        "postTime": 1584355589,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF704E \u3010Iron Man\u3011"
    }
]