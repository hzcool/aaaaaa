[
    {
        "content": "> [CF627F Island Puzzle](https://codeforces.com/contest/627/problem/F)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a $[0,n-1]$ \u7684\u6570\uff0c\u4efb\u610f\u4e24\u70b9\u4e0a\u7684\u6570\u90fd\u4e0d\u540c\u3002\n- \u6bcf\u6b21\u4f60\u53ef\u4ee5\u4ea4\u6362 $0$ \u6240\u5728\u7684\u70b9\u548c\u4e0e\u5176\u76f8\u8fde\u7684\u4efb\u4e00\u70b9\u4e0a\u7684\u6570\uff0c\u540c\u65f6\u4f60\u53ef\u4ee5\u6700\u591a\u52a0\u5165\u4e00\u6761\u8fb9\u3002\n- \u7ed9\u5b9a\u76ee\u6807\u72b6\u6001\uff0c\u4f60\u9700\u8981\u5728\u52a0\u5165\u7684\u8fb9\u6570\u5c3d\u91cf\u5c0f\u7684\u524d\u63d0\u4e0b\uff0c\u6c42\u51fa\u6700\u5c11\u7684\u6b65\u6570\uff0c\u6216\u8005\u5224\u65ad\u65e0\u6cd5\u8fbe\u6210\u76ee\u6807\u3002\n- $n \\leq 2 \\times 10^5$\u3002\n\n## \u9898\u89e3\n\n\u8bbe\u521d\u59cb\u65f6 $0$ \u5728 $s$\uff0c\u76ee\u6807\u65f6\u5728 $t$\u3002\n\n\u6ce8\u610f\u5230\u64cd\u4f5c\u7684\u672c\u8d28\u662f $0$ \u7684\u79fb\u52a8\uff0c\u540c\u65f6\u64cd\u4f5c\u5177\u6709\u53ef\u9006\u6027\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5148\u4e0d\u8003\u8651\u6b21\u6570\u6700\u5c11\u7684\u8981\u6c42\uff0c\u5148\u8ba9 $0$ \u4ece $s$ \u4ee5\u6700\u77ed\u8ddd\u79bb\u79fb\u52a8\u5230 $t$\u3002\n\n\u5982\u679c\u6b64\u65f6\u5df2\u7ecf\u6ee1\u8db3\u76ee\u6807\u72b6\u6001\u4e86\uff0c\u8bf4\u660e\u4e0d\u9700\u8981\u52a0\u5165\u65b0\u7684\u8fb9\uff0c\u6b64\u65f6 $0$ \u7ecf\u8fc7\u7684\u8ddd\u79bb\u5373\u4e3a\u6700\u5c11\u6b65\u6570\u3002\n\n\u5426\u5219\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u80fd\u52a0\u5165\u4e00\u6761\u65b0\u7684\u8fb9\uff0c\u7136\u540e\u8ba9 $0$ \u4ece $t$ \u51fa\u53d1\uff0c\u8d70\u5230\u5305\u542b\u8fd9\u6761\u65b0\u8fb9\u7684\u73af\u4e0a\u8ddd\u79bb $t$ \u6700\u8fd1\u7684\u70b9 $p$\uff0c\u7ed5\u82e5\u5e72\u6b21\u5b8c\u6574\u7684\u5708\u4e4b\u540e\uff0c\u56de\u5230 $t$\u3002\n\n\u89c2\u5bdf\u8fd9\u6837\u64cd\u4f5c\u5bf9\u6743\u503c\u7684\u53d8\u5316\u53ef\u4ee5\u5f97\u51fa\uff0c$t$ \u5230 $p$ \u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u7684\u6743\u503c\u90fd\u4e0d\u4f1a\u6539\u53d8\uff0c\u540c\u65f6\u6bcf\u7ed5\u5708\u4e00\u6b21\uff0c\u73af\u4e0a\u9664\u4e86 $p$ \u4e4b\u5916\u7684\u70b9\u4e0a\u7684\u6743\u503c\u53d8\u5316\u5f62\u6210\u4e00\u4e2a**\u5faa\u73af**\uff0c\u800c\u7ed5\u82e5\u5e72\u5708\u5219\u4e3a\u4e00\u4e2a**\u8f6e\u6362**\u3002\n\n\u56e0\u6b64\uff0c\u6743\u503c\u8981\u6539\u53d8\u7684\u70b9\u52a0\u4e0a $p$ \u5e94\u8be5\u5728\u6811\u4e0a\u5f62\u6210\u4e00\u6761\u8def\u5f84\u3002\n\n\u7531\u6b64\u6211\u4eec\u80fd\u591f\u786e\u5b9a\u8fde\u8fb9 $(u,v)$\uff0c\u53ef\u4ee5 $t$ \u4e3a\u6839\uff0c\u627e\u5230\u6240\u6709\u6743\u503c\u9700\u8981\u6539\u53d8\u7684\u70b9\uff0c$p$ \u5373\u4e3a\u8fd9\u4e9b\u70b9\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\u7684\u7236\u8282\u70b9\uff0c\u800c\u8def\u5f84 $(u,v)$ \u5219\u7531 $p$ \u548c\u8fd9\u4e9b\u70b9\u6784\u6210\u3002\n\n\u5982\u679c\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\u7684\u7236\u8282\u70b9\u4e0d\u552f\u4e00\uff0c\u6216\u8005 $p$ \u548c\u8fd9\u4e9b\u70b9\u65e0\u6cd5\u6784\u6210\u4e00\u6761\u8def\u5f84\uff0c\u6216\u8005\u8fd9\u4e9b\u70b9\u7684\u6743\u503c\u4e0d\u662f\u76ee\u6807\u6743\u503c\u7684\u4e00\u4e2a**\u8f6e\u6362**\uff0c\u5219\u8bf4\u660e\u65e0\u89e3\u3002\n\n\u6700\u540e\u6765\u8003\u8651\u6700\u5c0f\u5316\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u52a0\u8fb9 $(u,v)$\uff0c\u7ed5\u5708\u7684\u65b9\u5411\u6709\u4e24\u79cd $u\\to v$ \u548c $v \\to u$\uff0c\u5206\u522b\u8ba1\u7b97\u53d6 $\\min$ \u5373\u53ef\u3002\n\n\u5047\u8bbe\u4ece $u \\to v$\uff0c\u7531\u8fd9\u4e2a\u8f6e\u6362\u5bf9\u5faa\u73af\u7684\u6b21\u6570 $c$ \u53ef\u4ee5\u5f97\u5230\u6700\u5c0f\u6b21\u6570\u4e3a $2\\cdot \\operatorname{dist}(t, p) + c \\cdot (\\operatorname{dist}(u,v) + 1)$\u3002\n\n\u4f46\u6ce8\u610f\u8fd9\u4e2a\u6700\u5c0f\u6b21\u6570\u662f\u5728\u5148\u5c06 $0$ \u4ece $s$ \u79fb\u5230 $t$ \u7684\u524d\u63d0\u4e0b\uff0c\u56e0\u6b64\u5982\u679c\u6709\u91cd\u590d\u7684\u8def\u5f84\u9700\u8981\u51cf\u6389\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\uff0c\u7531\u4e8e\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\u6240\u4ee5\u5e38\u6570\u4ec0\u4e48\u7684\u5c31\u4e0d\u7ba1\u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#define Fail print(-1), exit(0);\nconst int N = 2e5 + 7;\nint n, a[N], b[N], s, t, p, v[N], d[N];\nvi e[N], g, h, A, B;\npi o = mp(N, 0);\n\nbool dfs1(int x, int f) {\n\tg.pb(x);\n\tif (x == t) return 1;\n\tfor (auto y : e[x])\n\t\tif (y != f && dfs1(y, x)) return 1;\n\tg.pop_back();\n\treturn 0;\n}\n\nvoid dfs2(int x, int f, int d) {\n\tif (a[x] != b[x]) {\n\t\th.pb(x), v[x] = 1;\n\t\tif (d - 1 == o.fi && f != o.se) Fail;\n\t\tif (d - 1 < o.fi) o = mp(d - 1, f);\n\t}\n\tfor (auto y : e[x])\n\t\tif (y != f) dfs2(y, x, d + 1);\n}\n\nvoid dfs3(int x, int f) {\n\tif (x != p) A.pb(a[x]), B.pb(b[x]);\n\tfor (auto y : e[x])\n\t\tif (y != f && v[y]) dfs3(y, x);\n}\n\nint dfs4(int x, int f, int d, int t) {\n\tif (x == t) return d;\n\tfor (auto y : e[x])\n\t\tif (y != f) {\n\t\t\tint o = dfs4(y, x, d + 1, t);\n\t\t\tif (o) return o;\n\t\t}\n\treturn 0;\n}\n\ninline int calc(vi A, vi B) {\n\tint pos = 0, siz = A.size();\n\tfor (ui i = 0; i < B.size(); i++)\n\t\tif (B[i] == A[0]) pos = i;\n\tif (!pos) return 0;\n\tfor (ui i = 0; i < A.size(); i++)\n\t\tif (A[i] != B[(i+pos)%siz]) return 0;\n\treturn pos;\n}\n\ninline int S(int x, int y) {\n\treturn dfs4(x, 0, 0, y);\n}\n\ninline ll get(int x, int y) {\n\tint c = calc(A, B);\n\treturn S(s, x) + 1ll * (c - 1) * (A.size() + 1) + 1 + S(y, t);\n}\n\nint main() {\n\trd(n);\n\tfor (int i = 1; i <= n; i++) rd(a[i]), s = a[i] ? s : i;\n\tfor (int i = 1; i <= n; i++) rd(b[i]), t = b[i] ? t : i;\n\tfor (int i = 1, x, y; i < n; i++)\n\t\trd(x), rd(y), e[x].pb(y), e[y].pb(x);\n\tdfs1(s, 0);\n\tfor (ui i = 1; i < g.size(); i++) swap(a[g[i-1]], a[g[i]]);\n\tbool ok = 1;\n\tfor (int i = 1; i <= n; i++) ok &= a[i] == b[i];\n\tif (ok) return print(0, ' '), print(g.size() - 1), 0;\n\tdfs2(t, 0, 0), h.pb(p = o.se), v[p] = 1;\n\tfor (auto x : h)\n\t\tfor (auto y : e[x])\n\t\t\tif (v[y]) ++d[x];\n\tvi u;\n\tfor (auto x : h)\n\t\tif (d[x] == 1) u.pb(x);\n\t\telse if (d[x] != 2) Fail;\n\tif (u.size() != 2u) Fail;\n\tif (u[0] > u[1]) swap(u[0], u[1]);\n\tdfs3(u[0], 0);\n\tif (!calc(A, B)) Fail;\n\tprint(u[0], ' '), print(u[1], ' ');\n\tll ans = get(u[0], u[1]);\n\treverse(A.begin(), A.end());\n\treverse(B.begin(), B.end());\n\tprint(min(ans, get(u[1], u[0])));\n\treturn 0;\n}\n```",
        "postTime": 1581863936,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF627F \u3010Island Puzzle\u3011"
    },
    {
        "content": "\u6807\u7b7e: \u6784\u9020\n\n#### Part 1\n\n\u6811\u7684\u65b9\u6848\u662f\u552f\u4e00\u7684, \u76f4\u63a5\u628a $0$ \u79fb\u52a8\u5230\u76ee\u7684\u5730\u5224\u65ad\u662f\u5426\u5408\u6cd5.\n\n#### Part 2\n\n\u73af\u5957\u6811\u7684\u60c5\u51b5, \u4ee5 $0$ \u7684\u76ee\u6807\u4e3a\u6839. \u7531\u4e8e\u64cd\u4f5c\u663e\u7136\u53ef\u9006, \u6211\u4eec\u53ef\u4ee5\u5728\u79fb\u52a8 $0$ \u5230\u76ee\u6807\u540e\u7684\u56fe\u4e0a\u8ba8\u8bba\u662f\u5426\u6709\u89e3.\n\n\u8003\u8651 $0$ \u8d70\u5230\u73af\u4e0a\u8f6c\u5708\u7684\u5f71\u54cd: \u628a\u8fdb\u5165\u70b9\u5148**\u62ff\u51fa\u6765**, \u5176\u4ed6\u70b9\u8f6c\u82e5\u5e72\u5708, \u7136\u540e\u628a\u70b9\u653e\u56de\u5706\u5904.\n\n\u6240\u4ee5\u6240\u6709\u4e0d\u5408\u6cd5\u7684\u4f4d\u7f6e\u53ea\u6709\u4e24\u79cd\u60c5\u51b5, \u5e76\u4e14\u6211\u4eec\u77e5\u9053\u589e\u52a0\u7684\u8fb9\u8fde\u63a5\u4e86\u54ea\u4e24\u4e2a\u70b9:\n\n- **\u4e00\u6761\u94fe**, \u589e\u52a0\u7684\u8fb9\u8fde\u63a5**\u6df1\u5ea6\u6700\u6df1\u7684\u70b9**\u548c**\u6df1\u5ea6\u6700\u6d45\u7684\u70b9\u7684\u7236\u4eb2\u8282\u70b9**.\n- \u4ee5\u540c\u4e00\u4e2a\u70b9\u4e3a\u7236\u4eb2\u7684**\u4e24\u6761\u94fe**, \u589e\u52a0\u7684\u8fb9\u8fde\u63a5**\u4e24\u6761\u94fe\u6df1\u5ea6\u6700\u6df1\u7684\u70b9**.\n\n\u5982\u679c\u4e0d\u662f\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\u6216\u8005\u73af\u4e0a\u9664\u4e86\u88ab**\u62ff\u51fa\u6765\u7684\u70b9**\u5176\u4f59\u70b9\u901a\u8fc7\u65cb\u8f6c\u65e0\u6cd5\u5230\u8fbe\u76ee\u6807\u72b6\u6001\u5c31\u65e0\u89e3, \u5426\u5219\u6709\u89e3.\n\n#### Part 3\n\n\u5224\u65ad\u6b65\u6570\u5f88\u7b80\u5355, \u9996\u5148\u5224\u65ad\u73af\u662f\u5426\u5728 $0$ \u5230\u6839\u7684\u8def\u5f84\u4e0a, \u5982\u679c\u4e0d\u662f\u5c31\u5148\u8d70\u5230\u73af\u4e0a, \u5426\u5219\u5c31'\u987a\u8def'\u628a\u73af\u7ed9\u8d70\u5b8c.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$.\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read();\n\nint n;\nint a[200005], b[200005], c[200005], bk[200005];\nint hd[200005], nx[400005], to[400005], cnt;\nvoid add(int f, int t) { nx[++cnt] = hd[f], hd[f] = cnt, to[cnt] = t; }\n\nint fa[200005], dep[200005];\nvoid dfs1(int u) {\n    for (int i = hd[u], v; i; i = nx[i])\n        if ((v = to[i]) != fa[u]) dep[v] = dep[fa[v] = u] + 1, dfs1(v);\n}\n\nbool check1() {\n    for (int i = 1; i <= n; ++i) c[i] = b[i];\n    int u = a[1];\n    while (fa[u]) swap(c[u], c[fa[u]]), u = fa[u];\n    for (int i = 1; i <= n; ++i)\n        if (c[i] != i) return 0;\n    return 1;\n}\nvector<int> st[2];\nint idcnt;\n\nvoid fail() { puts(\"-1\"), exit(0); }\n\nvoid get(int u, int id) {\n    if (id >= 2 || (id == 1 && fa[st[0][0]] != fa[u])) fail();\n    st[id].push_back(u);\n    while (1) {\n        int v = 0;\n        for (int i = hd[u]; i; i = nx[i])\n            if (to[i] != fa[u] && c[to[i]] != to[i])\n                v ? fail() : (v = to[i], void());\n        if (!v) break;\n        st[id].push_back(u = v);\n    }\n}\n\nvoid dfs2(int u) {\n    for (int i = hd[u], v; i; i = nx[i])\n        if ((v = to[i]) != fa[u]) (c[v] != v) ? get(v, idcnt++) : dfs2(v);\n}\n\nint p[200005], q[200005], len;\nint M(int x) { return x >= len ? x - len : x; }\nint getdis(int u, int v) {\n    int rt = 0;\n    while (u != v) (dep[u] < dep[v]) ? swap(u, v) : void(), ++rt, u = fa[u];\n    return rt;\n}\n\nvoid work() {\n    for (int i = 1; i <= n; ++i) q[i] = -1;\n    for (int i = 0; i < st[0].size(); ++i)\n        p[len] = c[st[0][i]], q[st[0][i]] = len, ++len;\n    int ru = st[0].back(), rv = fa[st[0].front()], rw = rv;\n    if (st[1].size()) {\n        rv = st[1].back();\n        for (int i = st[1].size() - 1; i >= 0; --i)\n            p[len] = c[st[1][i]], q[st[1][i]] = len, ++len;\n    }\n    if ((ru = bk[ru]) > (rv = bk[rv])) swap(ru, rv);\n    long long dis = q[p[0]];\n    for (int i = 1; i < len; ++i)\n        if (M(q[p[i]] - i + len) != dis) fail();\n    for (int i = 1; i <= n; ++i)\n        if (c[i] != i && q[i] == -1) fail();\n    int t = a[1];\n    while (q[t] == -1 && t != 1) t = fa[t];\n    if (t == 1) {\n        dis = min(dis, len - dis) * (len + 1);\n        printf(\"%d %d %lld\\n\", ru, rv, dis + getdis(a[1], rw) + dep[rw]);\n        return;\n    }\n\n    dis = q[t] >= st[0].size()\n              ? min((dis - 1) * (len + 1) + (q[t] + 1),\n                    1ll * M(len - dis) * (len + 1) + (len - q[t]))\n              : min(dis * (len + 1) + (q[t] + 1),\n                    (len - dis - 1) * (len + 1) + (len - q[t]));\n\n    printf(\"%d %d %lld\\n\", ru, rv, dis + dep[rw] + getdis(a[1], t));\n}\n\nint main() {\n    n = read();\n    for (int i = 1; i <= n; ++i) bk[a[i] = read() + 1] = i;\n    for (int i = 1; i <= n; ++i) b[a[i]] = read() + 1;\n    for (int i = 1, u, v; i < n; ++i)\n        u = a[read()], v = a[read()], add(u, v), add(v, u);\n    for (int i = 1; i <= n; ++i) a[b[i]] = i;\n    dfs1(1);\n    if (check1()) return printf(\"0 %d\\n\", dep[a[1]]), 0;\n    dfs2(1), work();\n    return 0;\n}\nconst int _SIZE = 1 << 22;\nchar ibuf[_SIZE], *iS = ibuf, *iT = ibuf;\n#define gc                                                         \\\n    (iS == iT ? iT = ((iS = ibuf) + fread(ibuf, 1, _SIZE, stdin)), \\\n     (iS == iT ? EOF : *iS++) : *iS++)\nint read() {\n    int x = 0, f = 1;\n    char c = gc;\n    while (!isdigit(c)) f = (c == '-') ? -1 : f, c = gc;\n    while (isdigit(c)) x = x * 10 + c - '0', c = gc;\n    return x * f;\n}\n```\n",
        "postTime": 1581479375,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF627F \u3010Island Puzzle\u3011"
    },
    {
        "content": "\u5bb9\u6613\u89c2\u5bdf\u5230\u4e00\u6b21\u64cd\u4f5c\u662f\u5c06 $0$ \u79fb\u52a8\u5230\u4e00\u4e2a\u76f8\u90bb\u7684\u8282\u70b9\u4e0a\uff0c\u800c\u4e14\u64cd\u4f5c\u53ef\u9006\u8f6c\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e0d\u52a0\u8fb9\u7684\u60c5\u51b5\u65b9\u6848\u662f\u552f\u4e00\u7684\uff0c\u76f4\u63a5\u6a21\u62df\u4e00\u4e0b\u770b\u770b\u662f\u4e0d\u662f\u76f8\u7b49\u7684\u5c31\u597d\u3002\n\n\u5bf9\u4e8e\u52a0\u4e00\u6761\u8fb9\u6765\u8bf4\uff0c\u6211\u4eec\u5148\u5c06 $0$ \u79fb\u52a8\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u89c2\u5bdf\u4e00\u4e0b\u8fd9\u79cd\u72b6\u6001\u4e0b\u4ed6\u7684\u7b54\u6848\u957f\u4ec0\u4e48\u6837\u5b50\u3002\n\n\u56e0\u4e3a\u64cd\u4f5c\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e $0$ \u51fa\u53bb\u518d\u56de\u6765\u7684\u8bdd\uff0c\u4ed6\u80fd\u6539\u53d8\u7684\u53ea\u6709\u5728\u52a0\u4e00\u6761\u8fb9\u5f62\u6210\u7684\u73af\u4e0a\u7684\u70b9\uff0c\u800c\u6539\u53d8\u7684\u65b9\u5f0f\u5219\u662f\u5148\u62ff\u51fa\u4e00\u4e2a\u70b9\u6765\uff0c\u5269\u4e0b\u7684\u70b9\u8f6c\u4e00\u4e0b\uff0c\u518d\u628a\u62ff\u51fa\u6765\u7684\u8fd9\u4e2a\u70b9\u585e\u56de\u53bb\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u9700\u8981\u6539\u53d8\u7684\u8fd9\u4e2a\u73af\uff0c\u5982\u679c\u9700\u8981\u6539\u53d8\u7684\u70b9\u5f62\u4e0d\u6210\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a $-1$\u3002\n\n\u5f62\u6210\u73af\u7684\u8bdd\u6211\u4eec\u627e\u5230\u8fd9\u4e2a\u73af\u4e00\u5f00\u59cb\u88ab\u62ff\u51fa\u6765\u7684\u90a3\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u8def\u5f84\u5c31\u786e\u5b9a\u4e86\uff0c\u6c42\u6700\u4f18\u89e3\u53ea\u9700\u8981\u628a\u548c\u5f00\u59cb\u65f6 $0$ \u5411\u7ec8\u70b9\u79fb\u52a8\u65f6\u7684\u8def\u5f84\u76f8\u53cd\u7684\u90e8\u5206\u51cf\u6389\u5c31\u53ef\u4ee5\u4e86\uff0c\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u4ee3\u7801\uff1a[link](https://www.luogu.com.cn/paste/r8l42oac)",
        "postTime": 1663933802,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "CF627F Island Puzzle."
    }
]