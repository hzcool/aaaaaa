[
    {
        "content": "## \u9898\u610f\n\nVlad \u548c\u4ed6\u7684\u670b\u53cb\u4eec\u73a9\u6e38\u620f\u3002\u6e38\u620f\u573a\u5730\u662f\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6709\u6839\u6811\u3002Vlad \u5f00\u59cb\u5728 1 \u53f7\u8282\u70b9\uff0c\u4ed6\u7684\u670b\u53cb\u4eec\u5728\u53e6\u5916 $k$ \u4e2a\u8282\u70b9\u3002Vlad \u6bcf\u79fb\u52a8\u4e00\u6b21\uff0c Vlad \u7684\u670b\u53cb\u4eec\u53ef\u4ee5\u4efb\u610f\u6cbf\u7740\u8fb9\u79fb\u52a8\u4e00\u6b21\u4e5f\u53ef\u4ee5\u4e0d\u79fb\u52a8\u3002Vlad \u5982\u679c\u80fd\u8d70\u5230\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u5e76\u4e14\u9014\u4e2d\u6ca1\u6709\u78b0\u5230\u4efb\u4f55\u4e00\u4e2a\u670b\u53cb\u5c31\u83b7\u80dc\u4e86\u3002\u95ee Vlad \u662f\u5426\u6709\u529e\u6cd5\u505a\u5230\u5fc5\u80dc\u3002\n\n## \u601d\u8def\n\n\u8dd1\u4e24\u904d BFS\uff0c\u4e00\u8fb9\u8ba1\u7b97 Vlad \u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4e00\u904d\u8ba1\u7b97 Vlad \u7684\u670b\u53cb\u4eec\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\u6700\u540e\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0cVlad \u5230\u5b83\u7684\u8ddd\u79bb\u6bd4 Vlad \u7684\u670b\u53cb\u4eec\u5230\u5b83\u7684\u8ddd\u79bb\u66f4\u77ed\uff0cVlad \u53ea\u9700\u8981\u79fb\u52a8\u5230\u8fd9\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5c31\u80fd\u83b7\u80dc\u3002\n\n\uff08\u4e00\u4e0b\u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u8bb0 Vlad \u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb\u4e3a $tmp_i$\uff0cVlad \u7684\u670b\u53cb\u4eec\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $dis_i$\u3002\u6ee1\u8db3\u6761\u4ef6\u7684\u53f6\u8282\u70b9 $i$ \u5373 $tmp_i < dis_i$\u3002\uff09\n\n\u8fd9\u4e2a\u65b9\u6cd5\u7684\u6b63\u786e\u6027\u5f88\u5bb9\u6613\u8bc1\u660e\uff1a\u4ece\u6839\u7ed3\u70b9\u5230\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u53ea\u6709\u4e00\u6761\u8def\u5f84\uff0c\u5982\u679c\u8fd9\u6761\u8def\u5f84\u4e0a\u6709\u4efb\u610f\u4e00\u4e2a\u8282\u70b9$j$ \u51fa\u73b0\u4e86 $tmp_j \\ge dis_j$ \u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u53f6\u5b50\u7ed3\u70b9 $i$ \u80af\u5b9a\u4e5f\u6709 $tmp_i \\ge dis_i$\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ea\u8981\u53f6\u5b50\u7ed3\u70b9\u6ee1\u8db3 $tmp_i < dis_i$\uff0c\u6574\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u4e5f\u90fd\u6ee1\u8db3 $tmp_i < dis_i$\uff0c\u5373 Vlad \u79bb\u8be5\u8282\u70b9\u7684\u8ddd\u79bb\u6bd4\u6240\u6709\u670b\u53cb\u90fd\u66f4\u8fd1\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u6ee1\u8db3 $tmp_i < dis_i$ \u7684\u53f6\u5b50\u8282\u70b9\uff0cVlad \u53ea\u8981\u4e00\u5f00\u59cb\u5c31\u9009\u62e9\u8d70\u8fd9\u6761\u8def\u5f84\uff0c\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2a\u670b\u53cb\u5230\u8fbe\u8be5\u8def\u5f84\u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u524d\u5230\u8fbe\u8be5\u8282\u70b9\uff0c\u5e76\u6700\u7ec8\u83b7\u80dc\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\n\nconst int MAXN = 200000 + 5;\n\nvector<int> G[MAXN];\nbool vis[MAXN];\nint pos[MAXN], dis[MAXN], tmp[MAXN];\nint n, k;\n\nvoid bfs1() {\n    queue<int> q;\n\n    for(int i = 1; i <= n; i++) {\n        dis[i] = 0;\n        vis[i] = false;\n    }\n    q.push(1);\n    vis[1] = true;\n    while(!q.empty()) {\n        int u = q.front(); q.pop();\n\n        for(int i = 0; i < G[u].size(); i++) {\n            int v = G[u][i];\n\n            if(vis[v]) {\n                continue;\n            }\n            dis[v] = dis[u] + 1;\n            vis[v] = true;\n            q.push(v);\n        }\n    }\n    for(int i = 1; i <= n; i++) {\n        tmp[i] = dis[i];\n    }\n}\n\nvoid bfs2() {\n    queue<int> q;\n\n    for(int i = 1; i <= n; i++) {\n        dis[i] = 0;\n        vis[i] = false;\n    }\n    for(int i = 1; i <= k; i++) {\n        q.push(pos[i]);\n        vis[pos[i]] = true;\n    }\n    while(!q.empty()) {\n        int u = q.front(); q.pop();\n\n        for(int i = 0; i < G[u].size(); i++) {\n            int v = G[u][i];\n\n            if(vis[v]) {\n                continue;\n            }\n            dis[v] = dis[u] + 1;\n            vis[v] = true;\n            q.push(v);\n        }\n    }\n}\n\nint main() {\n    int T;\n\n    scanf(\"%d\", &T);\n    while(T--) {\n        scanf(\"%d%d\", &n, &k);\n        for(int i = 1; i <= n; i++) {\n            G[i].clear();\n        }\n        for(int i = 1; i <= k; i++) {\n            scanf(\"%d\", &pos[i]);\n        }\n        for(int i = 1; i <= n - 1; i++) {\n            int u, v;\n\n            scanf(\"%d%d\", &u, &v);\n            G[u].push_back(v);\n            G[v].push_back(u);\n        }\n        bfs1();\n        bfs2();\n        bool flag = false;\n        for(int i = 2; i <= n; i++) {\n            if(G[i].size() == 1 && tmp[i] < dis[i]) {\n                flag = true;\n                break;\n            }\n        }\n        if(flag) {\n            printf(\"YES\\n\");\n        } else {\n            printf(\"NO\\n\");\n        }\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1638198903,
        "uid": 132435,
        "name": "\u667a\u5b50",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1611E1 Escape The Maze (easy version)"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\nVlad \u4e00\u5f00\u59cb\u5728 $1$ \u53f7\u623f\u95f4\uff0c\u4ed6\u7684\u7b2c $X$ \u4e2a\u670b\u53cb\u5728 $X_i$ \u53f7\u623f\u95f4\u3002\n\n\u6bcf\u4e00\u8f6e Vlad \u548c\u4ed6\u7684\u670b\u53cb\u4eec\u90fd\u53ef\u4ee5\u8d70\u5230\u4e00\u4e2a\u76f8\u90bb\u7684\u623f\u95f4\uff0c\u4e5f\u53ef\u4ee5\u7559\u5728\u539f\u5730\u3002\u82e5 Vlad \u4e0e\u670b\u53cb\u8d70\u5230\u540c\u4e00\u4e2a\u623f\u95f4\uff0c\u5219\u670b\u53cb\u83b7\u80dc\u3002\u82e5 Vlad \u8d70\u5230\u4e00\u4e2a\u53ea\u6709\u4e00\u6761\u51fa\u8fb9\u7684\u623f\u95f4\uff08\u975e\u4e00\u53f7\u623f\u95f4\uff09\u5219 Vlad \u83b7\u80dc\u3002\n\n\u8be2\u95ee Vlad \u662f\u5426\u6709\u5fc5\u80dc\u7684\u65b9\u6848\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u5148\u8bd5\u56fe\u786e\u5b9a\u670b\u53cb\u7684\u79fb\u52a8\u65b9\u6848\uff0c\u53d1\u73b0\u670b\u53cb\u4e0d\u65ad\u5f80\u4e00\u53f7\u623f\u95f4\u79fb\u52a8\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u8bc1\u660e\u5982\u4e0b\uff1a\u8003\u8651\u6bcf\u4e00\u8f6e Vlad \u65e0\u6cd5\u8d70\u5230\u7684\u70b9\u3002\u53d1\u73b0\u82e5\u5411\u4e00\u53f7\u623f\u95f4\u79fb\u52a8\uff0c\u65e0\u6cd5\u5230\u8fbe\u7684\u70b9\u96c6\u4f1a\u5305\u542b\u5176\u5b83\u8d70\u6cd5\u65e0\u6cd5\u5230\u8fbe\u7684\u70b9\u96c6\u3002\u6240\u4ee5\u670b\u53cb\u5411\u4e0a\u8d70\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n### \u89e3\u6cd5\n\n\u4e00\u904d DFS \u8bb0\u5f55\u6bcf\u4e2a\u623f\u95f4\u5728\u4ec0\u4e48\u65f6\u523b\u4f1a\u88ab\u670b\u53cb\u7b2c\u4e00\u6b21\u5230\u8fbe\uff0c\u8bb0\u5f55\u5728 `tim` \u6570\u7ec4\u4e2d\u3002\n\n\u7b2c\u4e8c\u904d DFS \u4ece\u4e00\u53f7\u623f\u95f4\u5f00\u59cb\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u88ab Vlad \u5230\u8fbe\u7684\u65f6\u95f4\u70b9\u3002\u6240\u4ee5\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u4e00\u5b9a\u662f\u4e00\u53f7\u623f\u95f4\u5230\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\uff0c\u6ee1\u8db3\u8def\u5f84\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5148\u88ab Vlad \u5230\u8fbe\uff0c\u5426\u5219\u7684\u8bdd\u670b\u53cb\u4e00\u5b9a\u4f1a\u5c01\u9501\u8fd9\u6761\u8def\u5f84\u3002\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+7,inf=1e9;\nint n,k,tg[N],tim[N],x[N],t;\nbool flag,us[N],ans[N];\nvector<int>e[N];\nvoid dfs(int x)\n{\n\tif(us[x])return;\n\tus[x]=1;if(tg[x])tim[x]=0;\n\tfor(int i=0;i<e[x].size();i++)\n\t{\n\t\tint v=e[x][i];dfs(v);\n\t\ttim[x]=min(tim[x],tim[v]+1);\n\t}\n}\nbool df2(int x,int fa,int dep)\n{\n\tif(ans[x])return ans[x];\n\tif(tim[x]<=dep)return 0;\n\tif(e[x].size()==1&&x!=1)return !tg[x];\n\tfor(int i=0;i<e[x].size();i++)\n\t{\n\t\tint v=e[x][i];if(v==fa)continue;\n\t\tif(df2(v,x,dep+1))return 1;\n\t}\n\treturn 0;\n}\nvoid work()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)tim[i]=inf;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d\",&x[i]);\n\t\ttg[x[i]]=1;\n\t}\n\tfor(int i=1;i<=n;i++)e[i].clear();\n\tfor(int i=1,u,v;i<n;i++)scanf(\"%d%d\",&u,&v),\n\te[u].push_back(v),e[v].push_back(u);\n\tdfs(1);flag=df2(1,0,0);\n\tif(flag==0)printf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n\tfor(int i=1;i<=n;i++)tg[i]=0,us[i]=0,ans[i]=0;\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)work();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1638073314,
        "uid": 371898,
        "name": "chengcheng567",
        "ccfLevel": 7,
        "title": "CF1611E1\u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u7b80\u8ff0\uff1a\u73b0\u5728\u6709\u4e00\u68f5\u6811\uff0c\u5176\u4e2d1\u53f7\u8282\u70b9\u662f\u6811\u6839\uff0c\u6811\u4e0a\u8fb9\u90fd\u662f\u53cc\u5411\u8fb9\u3002\u6811\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u60a8\u6709 $k$ \u4f4d\u670b\u53cb\u3002\u6bcf\u4e2a\u65f6\u523b\uff0c\u60a8\u548c\u60a8\u7684\u670b\u53cb\u90fd\u4f1a\u987a\u7740\u6811\u4e0a\u7684\u8fb9\u8d70\u5411\u53e6\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u60a8\u4f1a\u83b7\u80dc\u5f53\u4e14\u4ec5\u5f53\u4f60\u8d70\u5230\u4e86\u53f6\u5b50\u8282\u70b9\u3002\n\n\u60a8\u4f1a\u8f93\u5f53\u4e14\u4ec5\u5f53\u60a8\u88ab\u4e00\u4e2a\u670b\u53cb\u5728\u60a8\u83b7\u80dc\u4e4b\u524d\u5728\u4efb\u4f55\u623f\u95f4\u6216\u8d70\u5eca\u9047\u5230\u3002\n\n\u95ee\uff1a\u60a8\u662f\u5426\u4f1a\u5728\u8fd9\u573a\u6e38\u620f\u4e2d\u83b7\u80dc\uff1f\n\n\u9898\u89e3\uff1a\u7ef4\u62a4\u4e00\u4e2a\u65f6\u95f4\u6570\u7ec4\uff0c\u8868\u793a\u670b\u53cb\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u65f6\u95f4\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6df1\u5ea6\u6570\u7ec4\uff0c\u8868\u793a\u60a8\u5230\u8fbe\u70b9\u7684\u6700\u6bb5\u65f6\u95f4\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u60a8\u80fd\u5230\u8fbe\u4e00\u4e2a\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u60a8\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u65f6\u95f4\u6bd4\u4efb\u4f55\u670b\u53cb\u90fd\u8981\u65e9\u3002\n\ndfs\u5373\u53ef\u3002\n\n```\nvoid getime(ll now,ll fa){\t\n\tll len=s[now].size();\n\tfor(int i=0;i<len;i++){\n\t\tll y=s[now][i];\n\t\tif(y==fa) continue;\n\t\tdep[y]=dep[now]+1;\n\t\tgetime(y,now);\n\t\ttline[now]=min(tline[now],tline[y]+1);\n\t}\n}\n\nvoid cheak(ll now,ll fa){\n\tll res=0,len=s[now].size();\n\tfor(int i=0;i<len;i++){\n\t\tll y=s[now][i];\n\t\tif(y==fa) continue;\n\t\tres=1;\n\t\tif(tline[y]>dep[y]) cheak(y,now);\n\t}\n\tif(res==0) flag=1;\n}\n\noid clear(ll n,ll k){\n\tfor(int i=1;i<=n;i++) s[i].clear(),tline[i]=1e9;\n\tfor(int i=1,d;i<=k;i++) d=read(),tline[d]=0;\n\tfor(int i=1,u,v;i<n;i++) u=read(),v=read(),s[u].push_back(v),s[v].push_back(u);\n}\n\nint main(){\n\tt=read();\n\twhile(t-->0){\n\t\tn=read();k=read();\n\t\tclear(n,k);\n\t\tgetime(1,0);\n\t\tflag=0;\n\t\tcheak(1,0);\n\t\tif(flag) cout<<\"yes\\n\";\n\t\telse cout<<\"no\\n\";\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1638068821,
        "uid": 120438,
        "name": "Lacrymabre",
        "ccfLevel": 0,
        "title": "CF1611E1 Escape The Maze (easy version)"
    },
    {
        "content": "\u8fd9\u9898\u5e76\u4e0d\u96be\uff0cE1 \u548c E2 \u7684\u96be\u5ea6\u5dee\u4e0d\u591a\u3002\u4f46\u662f\u7ec6\u8282\u4f17\u591a\uff0c\u6211\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\u624d\u8fc7\u7684\u3002\n\n## \u601d\u8def\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5**\u9884\u5904\u7406**\u51fa\u6bcf\u4e2a\u70b9\u4ece $1$ \u5f00\u59cb\u7684 dfs \u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u54ea\u4e9b\u70b9\u662f\u53ef\u4ee5\u8df3\u5230\u7684\u3002\u56e0\u4e3a\u5f53\u4e00\u4e2a\u670b\u53cb\u987a\u7740\u6811\u7684\u8fb9\u5411\u7956\u5148\u8df3\u65f6\uff0c\u81ea\u5df1\u4e5f\u53ef\u4ee5**\u540c\u65f6\u5411\u7740\u8fd9\u4e2a\u670b\u53cb\u6b63\u5728\u8df3\u7684\u90a3\u6761\u6811\u94fe\u5411\u4e0b\u8df3**\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u51fa\u6211\u4eec\u8df3\u5230\u7684\u70b9\u7684 dfs \u5e8f\u4e00\u5b9a\u5c0f\u4e8e $1+$ \u51fa\u53d1\u70b9\u7684 dfs \u5e8f\u3002\n\n\u4f46\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u662f $O(n^2)$ \u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f18\u5316\u3002\u4e0d\u96be\u60f3\u5230\u6839\u636e\u6bcf\u4e2a $r_i$ \u7684 dfs \u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u82e5\u6211\u4eec\u5f53\u524d\u9047\u5230\u4e00\u4e2a\u70b9\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u3002\u6211\u4eec\u4e0d\u7528\u7ee7\u7eed\u8bbf\u95ee\uff0c\u56e0\u4e3a**\u6211\u4eec\u80fd\u8bbf\u95ee\u5230\u7684\u4e00\u5b9a\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u6211\u4eec\u4e0d\u80fd\u8bbf\u95ee\u5230\u7684\u4e5f\u53ef\u80fd\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86**\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u7ee7\u7eed\u8bbf\u95ee\u662f\u6ca1\u5fc5\u8981\u7684\u3002\u4ece\u6839\u8282\u70b9\u5411\u4e0b\u704c\u6c34\uff0c\u5224\u65ad\u662f\u5426\u80fd\u4e0d\u7ecf\u8fc7\u6807\u8bb0\u70b9\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u3002\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n+n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define rint register int\nint const N=2e6+10;\nint vis[N],tms[N],ts[N],b[N],vs[N],ans,r[N];\nvector<int>a[N];\ninline void make_ans(int x){\n    if (ans==-1) return;\n\tif (vis[x]){++ans;return;}\n\tif (!ts[x]) ans=-1;//\u8868\u793a\u78b0\u5230\u53f6\u5b50\u5c31\u8fd4\u56de\n\tvs[x]=1;\n\tfor (rint i=0;i<a[x].size();++i)\n\t    if (!vs[a[x][i]])\n\t\t    make_ans(a[x][i]);\n}//\u5bfb\u627e\u7b54\u6848\u7684\u8fc7\u7a0b\ninline void solve(int x,int st){\n\tif (x==0) return;\n\tif (vis[x]) return;//\u526a\u679d\n\tif (tms[x]<((tms[st]+2)/2)) return;\n    vis[x]=1;\n\tsolve(b[x],st);\n}//\u627e\u51fa\u6bcf\u4e2a\u70b9\u80fd\u8df3\u5230\u54ea\u91cc\ninline void dfs(int x,int dfn){\n\ttms[x]=dfn;vs[x]=1;\n\tint tag=0;\n\tfor (rint i=0;i<a[x].size();++i)\n\t    if (!vs[a[x][i]])\n\t\t\ttag=1,dfs(a[x][i],dfn+1),b[a[x][i]]=x;\n    ts[x]=tag;//\u6807\u8bb0\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\n}//\u6c42\u51fa\u6bcf\u4e2a\u5e97\u7684 dfs \u5e8f\nstruct node{int rs,id;}as[N];\ninline bool cmp(node a,node b){return a.rs<b.rs;}\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tint t;cin>>t;\n\twhile (t--){\n\t\tint n,k;cin>>n>>k;\n\t\tans=0;\n\t\tfor (rint i=1;i<=n;++i){\n\t\t    vs[i]=0;\n\t\t    while (a[i].size()) a[i].pop_back();\n\t\t}\n\t\tfor (rint i=1;i<=k;++i) cin>>r[i];\n\t\tfor (rint i=1;i<n;++i){\n\t\t\tint u,v;cin>>u>>v;\n\t\t\ta[v].push_back(u);\n\t\t\ta[u].push_back(v);\n\t\t}\n\t\tdfs(1,1);\n\t    for (rint i=1;i<=n;++i) vis[i]=0;\n\t\tfor (rint i=1;i<=k;++i)\n\t\t    as[i].rs=tms[r[i]],as[i].id=r[i];\n\t    sort(as+1,as+k+1,cmp);//\u6309 r[i] \u6392\u5e8f\n\t\tfor (rint i=1;i<=k;++i)\n\t\t    r[i]=as[i].id,\n\t\t    solve(r[i],r[i]);\n\t\tfor (rint i=1;i<=n;++i) vs[i]=0;\n\t\tmake_ans(1);\n\t\tif (ans==-1) cout<<\"YES\"<<'\\n';\n\t\telse cout<<\"NO\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1658219604,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF1611E1 Escape The Maze (easy version)"
    }
]