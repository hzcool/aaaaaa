[
    {
        "content": "**\u9898\u610f**  \n- \u6709 $n$ \u6761\u7eb8\u6761\uff0c\u7b2c $i$ \u4e2a\u7eb8\u6761\u88ab\u5206\u6210\u4e86 $a_i$ \u4e2a\u683c\u5b50\uff0c\u7f16\u53f7\u4ece $1$ \u5230 $a_i$\uff0c\u6700\u5f00\u59cb\u6bcf\u4e2a\u683c\u5b50\u662f $3$ \u79cd\u989c\u8272\u4e2d\u7684\u4e00\u79cd\u3002  \n- \u6e38\u620f\u5f00\u59cb\u65f6\uff0c\u6709 $n$ \u4e2a\u68cb\u5b50\u653e\u5728\u6bcf\u4e2a\u7eb8\u6761\u7684\u7b2c $a_i$ \u4e2a\u683c\u5b50\uff08\u5373\u6700\u540e\u4e00\u4e2a\u683c\u5b50\uff09\u3002\u7136\u540e\u4e24\u4e2a\u73a9\u5bb6\u8fdb\u884c\u8f6e\u6d41\u64cd\u4f5c\uff0c\u5148\u4e0d\u80fd\u64cd\u4f5c\u8005\u8f93\u3002  \n- \u6bcf\u6b21\u64cd\u4f5c\u9009\u62e9\u4e00\u679a\u68cb\u5b50\uff0c\u5411\u540e\u79fb\u52a8 $1,2$ \u6216 $3$ \u683c\u3002\u8981\u6c42\u68cb\u5b50\u4e0d\u80fd\u8d8a\u8fc7\u7eb8\u6761\u7684\u8fb9\u754c\uff0c\u4e14\u82e5\u8981\u4ece\u989c\u8272\u4e3a $i$ \u7684\u683c\u5b50\u5411\u524d\u79fb\u52a8 $j$ \u4e2a\u683c\u5b50\u5fc5\u987b\u6ee1\u8db3 $f_{i,j}=1$\u3002  \n- \u73b0\u5728\u6709\u4e9b\u683c\u5b50\u662f\u672a\u8fdb\u884c\u8fc7\u67d3\u8272\u7684\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u67d3\u8fd9\u4e9b\u683c\u5b50\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u540e\u624b\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u5bf9 $998244353$ \u53d6\u6a21\u3002  \n\n**\u9898\u89e3**  \n\u535a\u5f08\u90e8\u5206\u53ea\u8981\u4f1a $sg$ \u51fd\u6570\u5c31\u975e\u5e38\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c\u8003\u8651 $sg$ \u51fd\u6570\u7684\u8f6c\u79fb\u3002  \n\u6ce8\u610f\u5230 $a_i$ \u6bd4\u8f83\u5927\uff0c\u800c\u521d\u59cb\u4f4d\u7f6e\u6709\u989c\u8272\u7684\u70b9 $m$ \u6bd4\u8f83\u5c11\uff0c\u8003\u8651\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6765\u52a0\u901f\u8f6c\u79fb\u3002  \n\u5c06\u5f53\u524d\u4f4d\u7f6e\uff0c\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u548c\u4e0a\u4e0a\u4e2a\u4f4d\u7f6e\u7684 $sg$ \u503c\u538b\u7f29\u5b58\u4e0b\u6765\uff0c\u56e0\u4e3a\u6700\u591a\u53ea\u6709 $3$ \u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u9009\u62e9\uff0c\u6240\u4ee5 $sg$ \u51fd\u6570\u7684\u503c\u4e0d\u8d85\u8fc7 $3$\u3002\u90a3\u4e48\u538b\u7f29\u4e0b\u6765\u5927\u5c0f\u4e3a $4^3=64$\uff0c\u53e6\u5176\u7b49\u4e8e $k$ \u65b9\u4fbf\u590d\u6742\u5ea6\u5206\u6790\u3002    \n\u6211\u4eec\u53ef\u4ee5\u6784\u9020 $3$ \u4e2a\u77e9\u9635\uff0c\u5206\u522b\u8868\u793a\u989c\u8272\u4e3a $1,2,3$ \u4ee5\u53ca\u672a\u67d3\u8272\u7684\u65f6\u5019\u7684\u8f6c\u79fb\u3002\u6ce8\u610f\u5230\u672a\u67d3\u8272\u65f6\u5019\u7684\u77e9\u9635\u5176\u5b9e\u5c31\u662f\u989c\u8272\u4e3a $1,2,3$ \u7684\u77e9\u9635\u76f8\u52a0\u3002  \n\u9047\u5230\u65ad\u70b9\u7684\u65f6\u5019\u66b4\u529b\u4e58\u6cd5\uff0c\u5176\u4ed6\u6bb5\u7528\u77e9\u9635\u5feb\u901f\u5e42\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(k^3n \\log a)$\u3002\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u3002  \n\u6709\u4e00\u4e2a\u5957\u8def\uff0c\u5c31\u662f\u9884\u5904\u7406\u51fa\u77e9\u9635\u7684\u4e8c\u6b21\u5e42\uff0c\u7136\u540e\u8f6c\u79fb\u8fc7\u53bb\u7684\u65f6\u5019\u7528\u5411\u91cf\u4e58\u4e0a\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u62c6\u5206\u5bf9\u5e94\u7684\u77e9\u9635\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u964d\u4e3a $O(k^2 n \\log a+ k^3 \\log a)$\uff0c\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002  \n\n**\u4ee3\u7801**  \n```\n#include<bits/stdc++.h>\n#define int long long\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#define rd(x) x=read()\n#define wt(x) write(x)\n#define pos(x) (((x)-1)/SZ+1)\n#define endl \"\\n\"\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\nusing namespace std;\nconst int N=1e6+5;\nconst int M=64;\nconst int mod=998244353;\nint read(){int x=0,f=1;char ch=getchar();while(ch>'9'||ch<'0'){if (ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;}\nvoid write(int x){if(x<0){putchar('-');x=-x;}if(x>=10)write(x/10);putchar(x%10+'0');}\n\nvoid add(int &x,int y) {x+=y;if (x>=mod) x-=mod;}\nint n,m,a[N],f[4][4],ans[N][4];\nvector<pii> v[N];\nstruct Mat{int e[M][M];int* operator [](int p){return e[p];}}pw[M],col[4],tmp;\nMat operator + (Mat a,Mat b){Mat c;for (int i=0;i<M;i++) for (int j=0;j<M;j++) c[i][j]=(a[i][j]+b[i][j])%mod;return c;}\nMat operator * (Mat a,Mat b){Mat c;for (int i=0;i<M;i++) for (int j=0;j<M;j++) c[i][j]=0;for (int k=0;k<M;k++) for (int i=0;i<M;i++) if (a[i][k]) for (int j=0;j<M;j++) c[i][j]=(c[i][j]+a[i][k]*b[k][j])%mod;return c;}\nvoid ksm(Mat &x,int y){for (int i=0;i<=30;i++) if (y>>i&1) x=x*pw[i];}\nint F(int c,int S){for (int i=0;i<=3;i++) if((!f[c][3] || (S&3^i)) && (!f[c][2] || (S>>2&3^i)) && (!f[c][1] || (S>>4^i))) return S>>2|i<<4;}\n\nsigned main()\n{\n    rd(n);for (int i=1;i<=n;i++) rd(a[i]);\n    rd(m);for (int i=1,x,y,c;i<=m;i++) rd(x),rd(y),rd(c),v[x].push_back(mp(y,c));\n    for (int i=1;i<=3;i++) for (int j=1;j<=3;j++) rd(f[i][j]);\n    for (int i=1;i<=3;i++) for (int S=0;S<M;S++){int x=F(i,S);col[i][S][x]++;pw[0][S][x]++;}\n    for (int i=1;i<=30;i++) pw[i]=pw[i-1]*pw[i-1];\n    ans[0][0]=1;for (int i=1;i<=n;i++) sort(v[i].begin(),v[i].end());\n    for (int i=1;i<=n;i++)\n    {\n        for (int j=0;j<M;j++) for (int k=0;k<M;k++) tmp[j][k]=0;tmp[0][63]=1;\n        int la=1;for (pii p:v[i]) ksm(tmp,p.fi-la),tmp=tmp*col[p.se],la=p.fi+1;\n        ksm(tmp,a[i]+1-la);for (int j=0;j<=3;j++) for (int S=0;S<M;S++) add(ans[i][j^(S>>4)],ans[i-1][j]*tmp[0][S]%mod);\n    }\n    cout<<ans[n][0]<<endl;\n}\n```\n\n",
        "postTime": 1628827075,
        "uid": 70132,
        "name": "AsunderSquall",
        "ccfLevel": 7,
        "title": "CF1197F"
    }
]