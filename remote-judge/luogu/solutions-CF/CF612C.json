[
    {
        "content": "## $\\text{Problem}$\n\n- \u9898\u76ee\u4f20\u9001\u95e8 $\\Rightarrow$ [CF612C Replace To Make Regular Bracket Sequence](https://www.luogu.com.cn/problem/CF612C)\n\n- \u9898\u76ee\u5927\u610f\n\n  \u7ed9\u4f60\u4e00\u4e2a\u53ea\u5305\u542b `<`\uff0c`>`\uff0c`(`\uff0c`)`\uff0c`{`\uff0c`}`\uff0c`[`\uff0c`]`\u7684\u5b57\u7b26\u4e32 $s$\uff0c\u5de6\u62ec\u53f7\u4e4b\u95f4\u53ef\u4ee5\u4e92\u6362\uff0c\u53f3\u62ec\u53f7\u4e4b\u95f4\u4e5f\u53ef\u4ee5\u4e92\u6362\uff0c\u6c42\u6700\u5c11\u8fdb\u884c\u591a\u5c11\u6b21\u64cd\u4f5c\u624d\u80fd\u4f7f $s$ \u5408\u6cd5\u3002\u82e5\u65e0\u89e3\uff0c\u8f93\u51fa `Impossible`\u3002\n\n\n## $\\text{Solution}$\n\n\u904d\u5386\u6bcf\u4e2a\u62ec\u53f7\uff0c\u7528\u6808\u4fdd\u5b58\u5728\u6b64\u4e4b\u524d\u672a\u88ab\u5339\u914d\u5230\u7684\u62ec\u53f7\uff0c\u6bcf\u6b21\u904d\u5386\u5230\u4e00\u4e2a\u65b0\u7684\u62ec\u53f7\u65f6\uff1a\n\n- \u82e5\u6808\u9876\u4e3a\u5de6\u62ec\u53f7\uff0c\u5f53\u524d\u4e3a\u53f3\u62ec\u53f7\u65f6\uff1a\n\n  - \u82e5\u4e24\u8005\u5339\u914d\uff0c\u5219\u4e0d\u7528\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f39\u51fa\u6808\u9876\uff1b\n  \n  - \u82e5\u4e24\u8005\u4e0d\u5339\u914d\uff0c\u5219\u53ef\u7528\u4e00\u6b21\u4ee3\u4ef7\u4f7f\u5f53\u524d\u4e8c\u8005\u76f4\u63a5\u5339\u914d\uff0c\u5f39\u51fa\u6808\u9876\u3002\n\n- \u82e5\u6808\u9876\u4e3a\u53f3\u62ec\u53f7\uff0c\u5f53\u524d\u4e3a\u5de6\u62ec\u53f7\u65f6\uff0c\u65e0\u8bba\u600e\u6837\u64cd\u4f5c\u90fd\u65e0\u6cd5\u5339\u914d\uff0c\u76f4\u63a5\u8bf4\u660e\u65e0\u89e3\uff0c\u8f93\u51fa `Impossible`\u3002\n\n- \u5176\u4f59\u60c5\u51b5\u538b\u5165\u6808\u4e2d\u3002\n\n\u7ed3\u675f\u65f6\u82e5\u6808\u4e0d\u4e3a\u7a7a\uff0c\u8bf4\u660e\u65e0\u89e3\uff0c\u8f93\u51fa `Impossible`\u3002\n\n\u8003\u5bdf\u4e86\u5bf9\u6808\u7684\u5e94\u7528\u3002\n\n## $\\text{Code}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstring s;\nstack <char> a;\nint ans;\ninline bool is_left(char c) {\n\tif (c=='<'||c=='('||c=='['||c=='{') return 1;\n\telse return 0;\n}\ninline bool match(char a,char b){\n\tif (a=='<'&&b=='>') return 1;\n\tif (a=='{'&&b=='}') return 1;\n\tif (a=='['&&b==']') return 1;\n\tif (a=='('&&b==')') return 1;\n\treturn 0;\n}\nsigned main() {\n\tcin>>s;\n\tfor (int i=0;i<s.size();++i) {\n\t\tif (is_left(s[i])) a.push(s[i]);\n\t\telse {\n\t\t\tif (a.empty()||!is_left(a.top())) {\n\t\t\t\tcout<<\"Impossible\"<<endl;\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tif (!match(a.top(),s[i])) ans++;\n\t\t\t\ta.pop();\n\t\t\t}\n\t\t}\n\t}\n\tif (!a.empty()) cout<<\"Impossible\"<<endl;\n\telse cout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1644653694,
        "uid": 159548,
        "name": "Zachary_Cloud",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF612C Replace To Make Regular Bracket Sequence"
    },
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF612C)\u3002\n\n[\u5728\u535a\u5ba2\u5185\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.luogu.com.cn/blog/lihangyu-749988/solution-cf612c)\uff01\n\n## \u9898\u76ee\u5206\u6790\n\n\u8fd9\u9898\u5229\u7528\u4e86\u6808\u7684\u5148\u8fdb\u540e\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u50a8\u5b58\u5de6\u62ec\u53f7\uff0c\u4e00\u65e6\u6709\u53f3\u62ec\u53f7\u4e0e\u4e4b\u5339\u914d\uff0c\u5c31\u628a\u5b83\u4ece\u6808\u79fb\u51fa\u53bb\uff0c\u7136\u540e\u6700\u540e\u518d\u770b\u6ca1\u6709\u5339\u914d\u5230\u7684\uff0c\u8fd9\u4e9b\u5c31\u662f\u9700\u8981\u6362\u6210\u5176\u4ed6\u62ec\u53f7\u7684\u3002\n\n\u5982\u679c\u5339\u914d\u5b8c\u540e\u6808\u91cc\u8fd8\u5269\u6709\u62ec\u53f7\u4e0d\u80fd\u88ab\u642d\u914d\u7684\u8bdd\uff0c\u90a3\u5c31\u8981\u8f93\u51fa `Impossible` \u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<iostream>\n#include<stack>\nusing namespace std;\nint n,ans;\nstring s;\nstack<char> stk;\nbool flag1(char a){ //\u662f\u5426\u662f\u5de6\u62ec\u53f7\n\tif(a=='<'||a=='('||a=='['||a=='{')\n\t\treturn true;\n\treturn false;\n}\nbool flag2(char a,char b){ //\u662f\u5426\u662f\u53f3\u62ec\u53f7\n\tif(a=='<'&&b=='>'||a=='('&&b==')'||a=='['&&b==']'||a=='{'&&b=='}')\n\t\treturn true;\n\treturn false;\n}\nint main(){\n    cin>>s;\n    n=s.size();\n    for(int i=0;i<n;i++){\n        if(stk.empty()||flag1(s[i])){ //\u5de6\u62ec\u53f7\uff0c\u6216\u8005\u6ca1\u6cd5\u5339\u914d\uff0c\u76f4\u63a5\u8fdb\u6808\n            stk.push(s[i]);\n            continue;\n        }\n        else{ //\u5c1d\u8bd5\u5339\u914d\n            char c=stk.top();\n            if(flag1(c)){\n                if(!flag2(c,s[i]))\n                \tans++;\n                stk.pop();\n            }\n            else stk.push(s[i]);   \n        }\n    }\n    if(!stk.empty()){ //\u5806\u4e0d\u662f\u7a7a\u7684\uff0c\u5339\u914d\u4e0d\u5b8c\n        cout<<\"Impossible\";\n        return 0;\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1671760694,
        "uid": 749988,
        "name": "IOI_AK_LHY",
        "ccfLevel": 0,
        "title": "CF612C Replace To Make Regular Bracket Sequence \u9898\u89e3"
    },
    {
        "content": "## C.Replace To Make Regular Bracket Sequence ##\n[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/linyihdfj/p/16419311.html)\n### \u9898\u76ee\u63cf\u8ff0\uff1a ###\n[\u539f\u9898\u9762](https://codeforces.com/contest/612/problem/C)\n### \u9898\u76ee\u5206\u6790\uff1a ###\n\u6700\u5c0f\u7684\u64cd\u4f5c\u6b21\u6570\u5f53\u7136\u5c31\u662f\u5c06\u4e0d\u5408\u6cd5\u7684\u5339\u914d\u53d8\u4e3a\u5408\u6cd5\u7684\u5339\u914d\u6240\u9700\u8981\u82b1\u8d39\u7684\u6b21\u6570\uff0c\u4e5f\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u5339\u914d\u7684\u6570\u91cf\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u505a\u4e00\u904d\u62ec\u53f7\u5339\u914d\u7136\u540e\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u5c31\u7b54\u6848\u52a0\u4e00\u5e76\u8ba9\u8fd9\u5bf9\u5408\u6cd5\u5c31\u597d\u4e86\u3002\n### \u4ee3\u7801\u8be6\u89e3\uff1a ###\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nbool zuo(char a){\n\treturn a == '<' || a == '{' || a == '(' || a == '[';\n}\nbool you(char a){\n\treturn a == '>' || a == '}' || a == ')' || a == ']';\n}\nbool check(char a,char b){\n\treturn (a == '<' && b == '>') || (a == '{' && b == '}') || (a == '(' && b == ')') || (a == '[' && b == ']'); \n}\nint main(){\n\tint ans = 0;\n\tstring s;\n\tcin>>s; \n\tstack<char> st;\n\tfor(int i=0; i<s.size(); i++){\n\t\tif(!st.empty() && zuo(st.top()) && you(s[i])){\n\t\t\tif(!check(st.top(),s[i])){\n\t\t\t\tans++;\n\t\t\t}\n\t\t\tst.pop();\n\t\t}\n\t\telse{\n\t\t\tst.push(s[i]);\n\t\t}\n\t}\n\tif(!st.empty()){\n\t\tprintf(\"Impossible\\n\");\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1656401711,
        "uid": 544860,
        "name": "linyihdfj",
        "ccfLevel": 5,
        "title": "\u3010\u9898\u89e3\u3011CF612C Replace To Make Regular Bracket Sequence"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n- \u7ed9\u5b9a\u4e00\u4e2a\u53ea\u542b\uff0c`>`\uff0c`(`\uff0c`)`\uff0c`{`\uff0c`}`\uff0c`[`\uff0c`]`\u7684\u5b57\u7b26\u4e32\u3002\n- \u8bb0`<`\uff0c`(`\uff0c`{`\uff0c`[`\u4e3a\u5de6\u62ec\u53f7\uff0c`>`\uff0c`)`\uff0c`}`\uff0c`]`\u4e3a\u53f3\u62ec\u53f7\u3002\n- \u6bcf\u6b21\u53ef\u4ee5\u5c06\u4efb\u610f\u5de6\u62ec\u53f7\u6362\u4e3a\u4efb\u610f\u4e0d\u540c\u7684\u5de6\u62ec\u53f7\uff0c\u5c06\u4efb\u610f\u53f3\u62ec\u53f7\u6362\u4e3a\u4efb\u610f\u4e0d\u540c\u7684\u53f3\u62ec\u53f7\uff0c\u8bb0\u4e3a\u4e00\u6b21\u64cd\u4f5c\u3002\n- \u6c42\u4f7f\u62ec\u53f7\u5e8f\u5408\u6cd5\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c\u82e5\u65e0\u89e3\uff0c\u8f93\u51fa `impossible`\u3002\n\n## \u6570\u636e\u8303\u56f4\n\n$1\\le|s|\\le10^6$\u3002\n\n## \u5206\u6790\n\n\u62ec\u53f7\u5e8f\u95ee\u9898\u663e\u7136\u662f\u60f3\u5230\u7528\u6808\u6c42\u89e3\u3002\n\n\u7528\u6808\u4fdd\u5b58\u5728\u6b64\u4e4b\u524d\u672a\u88ab\u5339\u914d\u5230\u7684\u62ec\u53f7\uff0c\u6bcf\u6b21\u904d\u5386\u5230\u4e00\u4e2a\u65b0\u7684\u62ec\u53f7\u65f6\uff0c\u82e5\u6808\u9876\u4e3a\u5de6\u62ec\u53f7,\u5f53\u524d\u4e3a\u53f3\u62ec\u53f7\u65f6,\u82e5\u4e8c\u8005\u5339\u914d\uff0c\u5219\u4e0d\u7528\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f39\u51fa\u6808\u9876\uff0c\u82e5\u4e0d\u5339\u914d,\u5219\u53ef\u7528\u4e00\u6b21\u64cd\u4f5c\u7684\u4ee3\u4ef7\u4f7f\u5f53\u524d\u4e8c\u8005\u76f4\u63a5\u5339\u914d\uff0c\u5f39\u51fa\u6808\u9876\u3002\n\n\u6808\u9876\u4e3a\u53f3\u62ec\u53f7,\u5f53\u524d\u4e3a\u5de6\u62ec\u53f7\u65f6,\u65e0\u8bba\u600e\u6837\u64cd\u4f5c\u90fd\u65e0\u6cd5\u4f7f\u4e8c\u8005\u76f4\u63a5\u5339\u914d\uff0c\u56e0\u6b64\u5f53\u524d\u62ec\u53f7\u5e94\u538b\u5165\u6808\u4e2d\u770b\u4ee5\u540e\u7684\u62ec\u53f7\u80fd\u5426\u4e0e\u4e4b\u5339\u914d\u3002\n\n\u5f53\u7b97\u6cd5\u7ed3\u675f\u65f6\uff0c\u82e5\u6808\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8bf4\u660e\u62ec\u53f7\u5e8f\u65e0\u8bba\u600e\u6837\u64cd\u4f5c\u90fd\u4e0d\u80fd\u5408\u6cd5\uff0c\u6545\u65e0\u89e3\u3002\n\n\u6bcf\u4e2a\u62ec\u53f7\u6700\u591a\u5165\u6808\u51fa\u6808\u4e00\u6b21\uff0c\u6545\u6b64\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|s|)$\u3002\n\n## AC Code\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<stack> \n\nusing namespace std;\n\nconst int MAXN=1e6+5;\n\nchar s[MAXN];\n\nchar st[MAXN];\nint top,ans;\n\nbool match(char a,char b){\n\tif (a=='<'&&b=='>') return true;\n\tif (a=='{'&&b=='}') return true;\n\tif (a=='['&&b==']') return true;\n\tif (a=='('&&b==')') return true;\n\treturn false;\n}\n\nbool is_left(char c){\n\tif (c=='<'||c=='{'||c=='('||c=='[') return true;\n\treturn false;\n}\n\nbool is_right(char c){\n\treturn !is_left(c);\n}\n\nint main(){\n\tscanf(\"%s\",(s+1));\n\tint n=strlen(s+1);\n\tfor (int i=1;i<=n;i++){\n\t\tif (is_right(s[i])){\n\t\t\tif (is_left(st[top])){\n\t\t\t\tif (match(st[top],s[i])) top--;\n\t\t\t\telse top--,ans++;\n\t\t\t}\n\t\t\telse st[++top]=s[i];\n\t\t}\n\t\telse st[++top]=s[i];\n\t}\n\tif (top){\n\t\tputs(\"Impossible\");\n\t\treturn 0;\n\t}\n\tcout<<ans<<endl;\n}\n```\n",
        "postTime": 1626862817,
        "uid": 353280,
        "name": "I_CE_IOI",
        "ccfLevel": 0,
        "title": "CF612C Replace To Make Regular Bracket Sequence"
    },
    {
        "content": "## \u5927\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $ n $ \u7684\u5b57\u7b26\u4e32 $ S $ \u53ea\u5305\u542b`<`\u3001`>`\u3001`(`\u3001`)`\u3001`[`\u3001`]`\u3001`{`\u3001`}`\uff0c\u5de6\u62ec\u53f7\u4e4b\u95f4\u53ef\u4ee5\u4e92\u6362\uff0c\u53f3\u62ec\u53f7\u4e4b\u95f4\u4e5f\u53ef\u4ee5\u4e92\u6362\uff0c\u6c42\u6700\u5c11\u8fdb\u884c\u591a\u5c11\u6b21\u64cd\u4f5c\u624d\u80fd\u4f7f $ S $ \u5408\u6cd5\u3002\n\n\u5de6\u62ec\u53f7\u6307`<`\u3001`(`\u3001`[`\u3001`{`\uff1b\n\n\u53f3\u62ec\u53f7\u6307`}`\u3001`>`\u3001`)`\u3001`]`\u3002\n\n## \u601d\u8def\n\n\u7528`stack`\u3002\u6bcf\u4e00\u6b21\u9047\u5230\u5de6\u62ec\u53f7\u5c31\u76f4\u63a5\u538b\u5165\uff0c\u9047\u5230\u53f3\u62ec\u53f7\u65f6\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u5224\u65ad\uff1a\n\n+ \u6808\u4e3a\u7a7a\uff0c\u4e0d\u53ef\u80fd\u5408\u6cd5\uff0c`Impossible`\uff1b\n+ \u6808\u9876\u5143\u7d20\u4e0e\u5f53\u524d\u62ec\u53f7\u5339\u914d\uff0c\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff08\u4e0e\u5f53\u524d\u62ec\u53f7\u76f4\u63a5\u5339\u914d\uff09\uff1b\n+ \u6808\u9876\u5143\u7d20\u4e0e\u5f53\u524d\u62ec\u53f7\u4e0d\u5339\u914d\uff0c\u5c06\u5f53\u524d\u62ec\u53f7\u53d8\u6210\u4e0e\u4e4b\u524d\u62ec\u53f7\u5339\u914d\u7684\u62ec\u53f7\uff0c\u7b54\u6848`++`\u3002\n\n\u5982\u679c\u7ed3\u675f\u4e4b\u540e\u6808\u4e0d\u4e3a\u7a7a\uff0c`Impossible`\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar ch[1000006];\nint n,m,T,ans;\nstack<char>st;\nint fl(char ch){\n\tif(ch=='('||ch=='<'||ch=='['||ch=='{') return 1;\n\treturn 2;\n} \nint main(){\n\tscanf(\"%s\",ch+1);\n\tn=strlen(ch+1);\n\tfor(register int i=1;i<=n;++i){\n\t\tint nw=fl(ch[i]);\n\t\tif(nw==1||st.empty()) st.push(ch[i]);\n\t\telse{\n\t\t\tchar lc=st.top();\n\t\t\tint lst=fl(lc);\n\t\t\tif(lst==2) st.push(ch[i]);\n\t\t\telse{\n\t\t\t\tif(!((ch[i]==')'&&lc=='(')||(ch[i]=='>'&&lc=='<')||(ch[i]==']'&&lc=='[')||(ch[i]=='}'&&lc=='{'))) ans++;\n\t\t\t\tst.pop();\n\t\t\t}\n\t\t}\n\t}\n\tif(st.size()) cout<<\"Impossible\";\n\telse cout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1643028456,
        "uid": 429147,
        "name": "hxhhxh",
        "ccfLevel": 0,
        "title": "CF612C"
    },
    {
        "content": "**\u9898\u610f\uff1a**\n\n\u5f53\u4e00\u4e2a\u53ea\u5305\u542b\u5b57\u7b26 ```<>, {}, [], ()``` \u7684\u5b57\u7b26\u4e32\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6**\u4e4b\u4e00**\u65f6\uff0c\u5219\u8be5\u5b57\u7b26\u4e32\u88ab\u79f0\u4e3a RBS \u3002\n\n- \u8be5\u5b57\u7b26\u4e32\u662f\u7a7a\u4e32\u3002\n- \u5f62\u5982 ```<s1>s2```\uff0c\u4e14 ```s1,s2``` \u662fRBS\u3002\n- \u5f62\u5982 ```(s1)s2```\uff0c\u4e14 ```s1,s2``` \u662fRBS\u3002\n- \u5f62\u5982 ```{s1}s2```\uff0c\u4e14 ```s1,s2``` \u662fRBS\u3002\n- \u5f62\u5982 ```[s1]s2```\uff0c\u4e14 ```s1,s2``` \u662fRBS\u3002\n\n\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u5b57\u7b26 ```<>, {}, [], ()``` \u7684\u5b57\u7b26\u4e32 $s$ \uff0c\u5176\u4e2d ```<,(,[,{``` \u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\uff08\u5373\u5de6\u62ec\u53f7\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\uff09\uff0c```>,),],}``` \u4e5f\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\uff08\u5373\u53f3\u62ec\u53f7\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\uff09\uff0c\u95ee\u81f3\u5c11\u66ff\u6362\u591a\u5c11\u6b21\u53ef\u4ee5\u4f7f\u5f97 $s$ \u6210\u4e3a RBS \u3002\n\n\u5982\u679c\u4e0d\u53ef\u80fd\u901a\u8fc7\u66ff\u6362\u4f7f\u5f97 $s$ \u6210\u4e3a RBS \uff0c\u5219\u8f93\u51fa ```Impossible``` \u3002\n\n**\u6570\u636e\u8303\u56f4\uff1a** $1\\le|s|\\le 10^6$ \u3002\n\n**\u505a\u6cd5\uff1a**\n\n\u6211\u4eec\u5148\u5b9a\u4e49\u62ec\u53f7 ```<>,(),[],{}``` \u662f\u5339\u914d\u7684\u3002\u7ef4\u62a4\u4e00\u4e2a\u62ec\u53f7\u6808\uff0c\u6bcf\u6b21\u770b**\u5f53\u524d\u62ec\u53f7**\u662f\u5426\u4e3a**\u53f3\u62ec\u53f7**\uff0c\u82e5\u662f\uff0c\u5219\u68c0\u67e5\u4e0e**\u6808\u9876\u62ec\u53f7**\u662f\u5426\u4e3a**\u5de6\u62ec\u53f7**\uff0c\u82e5\u662f\uff0c\u5219\u68c0\u67e5\u662f\u5426\u5339\u914d\uff0c\u82e5\u5339\u914d\uff0c\u5219**\u5f39\u51fa\u6808\u9876\u62ec\u53f7**\uff0c\u82e5\u4e0d\u5339\u914d\uff0c\u5219\u8ba1\u6570\u5668\u52a0 $1$ \u3002\n\n\u5176\u4ed6\u60c5\u51b5\u76f4\u63a5\u628a\u5f53\u524d\u62ec\u53f7 $\\operatorname{push}$ \u5230\u6808\u9876\u5373\u53ef\u3002\n\n\u82e5\u6700\u540e\u6808\u975e\u7a7a\uff0c\u5219\u8f93\u51fa ```Impossible``` ,\u5426\u5219\u76f4\u63a5\u8f93\u51fa\u8ba1\u6570\u5668\u7684\u503c\u5373\u53ef\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6\uff1a** $O(|s|)$ \u3002\n\n$Code:$\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nvoid solve()\n{\n    string s;\n    cin>>s;\n    int n=s.length();\n    s=' '+s;\n\n    stack<char> st;\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(st.empty() || s[i]=='{' || s[i]=='(' || s[i]=='[' || s[i]=='<')\n        {\n            st.push(s[i]);\n            continue;\n        }\n        else\n        {\n            char ch=st.top();\n            if(ch=='{' || ch=='(' || ch=='[' || ch=='<')\n            {\n                if((ch=='{' && s[i]=='}') || (ch=='(' && s[i]==')') || (ch=='[' && s[i]==']') || (ch=='<' && s[i]=='>')) ;\n                else ans++;\n                st.pop();\n            }\n            else st.push(s[i]);   \n        }\n    }\n    if(!st.empty())\n    {\n        puts(\"Impossible\");\n        return ;\n    }\n    printf(\"%d\",ans);\n}\n\nint main()\n{\n    solve();\n    return 0;\n}",
        "postTime": 1606822979,
        "uid": 119042,
        "name": "djh233",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF612C \u3010Replace To Make Regular Bracket Sequence\u3011"
    }
]