[
    {
        "content": "\u8fd9\u9898~~\u867d\u7136\u6c34\u4f46\u662f~~\u6709\u597d\u591a\u65b9\u6cd5\uff0c\u662f\u4e2a\u4e0d\u53ef\u591a\u5f97\u7684\u597d\u9898\uff08\n\n> ### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF258E) & [CF \u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/258/problem/E)\n\n> \u9898\u610f\u89c1\u6d1b\u8c37\u91cc\u7684\u7ffb\u8bd1\u3002\n\n\u9996\u5148\uff0c\u5bb9\u6613\u60f3\u5230\u7684\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e0e\u5b83\u6709\u4ea4\u96c6\u7684\u8282\u70b9\u96c6\u5408\u3002\u663e\u7136\uff0c\u8bbe $subtree(x)$ \u8868\u793a\u5b50\u6811 $x$ \u5185\u7684\u8282\u70b9\u96c6\u5408\uff0c\u90a3\u4e48\u7b2c $i$ \u6b21\u64cd\u4f5c\u5c31\u662f\u5c06 $subtree(a_i)\\cup subtree(b_i)$ \u5185\u6240\u6709\u8282\u70b9\u7684\u7ef4\u62a4\u7684\u96c6\u5408\u5e76\u4e0a $subtree(a_i)\\cup subtree(b_i)$\u3002\u6ce8\u610f\u5230\uff0c\u770b DFS \u5e8f\u7684\u8bdd\uff0c\u662f\u4e24\u4e2a\u533a\u95f4\uff0c\u7531\u4e8e\u662f\u9759\u6001\u7684\uff0c\u53ef\u4ee5\u5dee\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u8981\u5e76\u4e0a\u7684\u533a\u95f4\u5e8f\u5217\u548c\u4e00\u4e2a\u8981\u6d88\u9664\u5f71\u54cd\u7684\u5e8f\u5217\u3002\u5b9e\u9645\u4e0a\u8fd9\u4e00\u6b65\u64cd\u4f5c\u7528\u6811\u4e0a\u5dee\u5206\u66f4\u597d\u7406\u89e3\uff1f\u5c31\u662f\u5b50\u6811\u4fee\u6539\u7684\u8bdd\u5728\u6839\u6253\u4e2a\u6807\u8bb0\uff0c\u7136\u540e\u6bcf\u4e2a\u8282\u70b9\u8981\u7b97\u4e0a\u7956\u5148\u8d21\u732e\u548c\uff0c\u4e00\u8def DFS \u4e0b\u6765\u8be5\u56de\u6eaf\u56de\u6eaf\u3002\n\n\u63a5\u4e0b\u6765\u7684\u96be\u70b9\u5728\u4e8e\uff1a\u5982\u4f55\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\uff1a\n\n1. \u7ed9\u5f53\u524d\u96c6\u5408\u5e76\u4e0a\u4e00\u4e2a\u533a\u95f4\uff1b\n1. \u6d88\u9664\u4ee5\u524d\u67d0\u6b21\u64cd\u4f5c $1$ \u7684\u5f71\u54cd\uff1b\n1. \u67e5\u8be2\u5f53\u524d\u4e0d\u5728\u96c6\u5408\u5185\u7684\u6570\u7684\u6570\u91cf\uff08\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f\u5f53\u524d\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5c31\u7ef4\u62a4\u8fd9\u4e2a\uff0c\u51cf\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff09\u3002\n\n### \u65b9\u6cd5\u4e00\n\n\u5927\u5bb6\u597d\u6211\u662f yxh\uff0c\u6211\u7528\u6211\u6700\u559c\u6b22\u7684\u66b4\u529b\u6570\u636e\u7ed3\u6784\u2014\u2014\u5206\u5757 A \u4e86\u8fd9\u9053\u9898~~\uff08\u5176\u5b9e\u5e76\u6ca1\u6709\uff0c\u5979\u5199\u6302\u4e86\uff09~~\n\n\u5f88\u7b80\u5355\uff0c\u6bcf\u4e2a\u5757\u5185\u7ef4\u62a4\u4e00\u4e2a\u57fa\u4e8e\u88ab\u63d2\u5165\u6b21\u6570\u7684\u6876\u548c\u6574\u4f53\u504f\u79fb\u91cf\u5373\u53ef\u3002\u5757\u957f\u53d6 $\\sqrt n$ \u7684\u65f6\u5019\u65f6\u7a7a\u590d\u6742\u5ea6\u7686\u4e3a $\\mathrm O(n\\sqrt n)$\u3002\u6ce8\u610f\uff0c\u7a7a\u95f4\u5361\u5f97\u5f88\u7d27\uff0c\u6876\u8981\u7528 `short` \u5f00\u3002\n\n\u4ee3\u7801\uff08\u73b0\u573a\uff0c\u4e0b\u9762 $3$ \u79cd\u4ee3\u7801\u90fd\u662f\u8fd9\u4e2a\u7248\u672c\u9b54\u6539\u7684\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define X first\n#define Y second\nconst int N=100000,M=100000,DB_SZ=333;\nint n,m; \nvector<int> nei[N+1];\nint dfn[N+1],mxdfn[N+1],mng[N+1],nowdfn;\nvoid dfs(int x=1,int fa=0){\n\tmng[dfn[x]=mxdfn[x]=++nowdfn]=x;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tmxdfn[x]=mxdfn[y];\n\t}\n}\nint d[N+2];\nstruct dvdblk{\n\tint sz,sz1;\n\tint a[N+1];\n\tstruct block{int l,r,added;short cnt[2*M+1];}blk[DB_SZ];\n\t#define l(p) blk[p].l\n\t#define r(p) blk[p].r\n\t#define cnt(p) blk[p].cnt\n\t#define added(p) blk[p].added\n\tvoid bld(int p,int l,int r){\n\t\tl(p)=l;r(p)=r;\n\t\tmemset(cnt(p),0,sizeof(cnt(p)));\n\t\tcnt(p)[m]=r-l+1;\n\t\tadded(p)=0;\n\t}\n\tvoid init(){\n\t\tsz1=sqrt(n);\n\t\tsz=(n+sz1-1)/sz1;\n\t\tfor(int i=1;i<=sz;i++)bld(i,(i-1)*sz1+1,min(i*sz1,n));\n\t}\n\tvoid add(int l,int r,int v){\n\t\tint pl=(l+sz1-1)/sz1,pr=(r+sz1-1)/sz1;\n\t\tif(pl==pr){\n\t\t\tfor(int i=l;i<=r;i++)cnt(pl)[a[i]+m]--,cnt(pl)[(a[i]+=v)+m]++;\n\t\t\treturn;\n\t\t}\n\t\tadd(l,r(pl),v),add(l(pr),r,v);\n\t\tfor(int i=pl+1;i<pr;i++)added(i)+=v;\n\t}\n\tint zero(){\n\t\tint res=0;\n\t\tfor(int i=1;i<=sz;i++)res+=cnt(i)[m-added(i)];\n\t\treturn res;\n\t}\n}db;\nvector<pair<pair<int,int>,int> > add[N+2];\nint ans[N+1];\nint main(){\n\tfreopen(\"b.in\",\"r\",stdin);freopen(\"b.out\",\"w\",stdout);\n\tcin>>n>>m;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tnei[x].pb(y);nei[y].pb(x);\n\t}\n\tdfs();\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\td[dfn[x]]++,d[mxdfn[x]+1]--,d[dfn[y]]++,d[mxdfn[y]+1]--;\n\t\tif(dfn[x]<=dfn[y]&&mxdfn[y]<=mxdfn[x]){\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t}\n\t\telse if(dfn[y]<=dfn[x]&&mxdfn[x]<=mxdfn[y]){\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t}\n\t\telse{\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)d[i]+=d[i-1];\n\tdb.init();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<add[i].size();j++){\n\t\t\tint l=add[i][j].X.X,r=add[i][j].X.Y,v=add[i][j].Y;\n\t\t\tdb.add(l,r,v);\n\t\t}\n//\t\tcout<<db.zero()<<\"!\\n\";\n\t\tans[mng[i]]=n-db.zero()-!!d[i];\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d%c\",ans[i],\" \\n\"[i==n]);\n\treturn 0;\n}\n```\n\n### \u65b9\u6cd5\u4e8c\n\n\u4e0d\u96be\u53d1\u73b0\u521a\u521a\u90a3\u4e2a\u5206\u5757\u7b97\u6cd5\u5176\u5b9e\u662f\u8fdc\u5f3a\u4e8e\u8fd9\u9898\u7684\u9700\u8981\u7684\u3002\u8ffd\u6c42\u66f4\u4f4e\u7684\u590d\u6742\u5ea6\uff0c\u5c1d\u8bd5\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\u4e00\u6837\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u63d2\u5165\u6b21\u6570\uff0c\u7136\u540e\u6bcf\u4e2a\u8282\u70b9\u5185\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u5185 $0$ \u7684\u6570\u91cf\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u9898\u76f8\u6bd4\u4e8e\u5206\u5757\u8fd9\u4e2a\u5f3a\u7b97\u6cd5\u7684\u7279\u6b8a\u6027\u8d28\uff1a\u6c38\u8fdc\u67e5\u8be2 $0$ \u7684\u6570\u91cf\uff0c\u800c $0$ \u662f\u503c\u57df\u91cc\u7684\u6700\u5c0f\u503c\u3002\n\n\u6ce8\u610f\u5230\u6709\u533a\u95f4\u4fee\u6539\uff0c\u5c1d\u8bd5\u61d2\u6807\u8bb0\u3002\u7136\u540e\u53d1\u73b0\uff0c\u8981\u52a0\u7684\u8bdd\uff0c\u663e\u7136\u6839\u636e\u6027\u8d28\uff0c\u5f53\u524d\u533a\u95f4\u5c31\u6ca1\u6709 $0$ \u4e86\uff1b\u4f46\u5982\u679c\u8981\u51cf\u7684\u8bdd\uff0c\u54e6\u543c\uff0c\u4f60\u731c\u4e0d\u5230\u7b54\u6848\u4e86\u3002\n\n\u4e8e\u662f\u5c1d\u8bd5\u6807\u8bb0\u6c38\u4e45\u5316\u3002\u54e6\u543c\uff0c\u53ef\u4ee5\u4e86\uff01\u4fee\u6539\u65f6\u5728\u6811\u4e2d\u7ecf\u8fc7\u7684\u8282\u70b9\uff0c\u7528\u4e0a\u4f20\u66f4\u65b0\u5b83\u4eec\u3002\u8003\u8651\u5982\u4f55\u4f5c\u7528\u5f53\u524d\u8282\u70b9\u7684\u6807\u8bb0\u7684\u8d21\u732e\uff1a\u82e5\u4e3a $0$\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u8d21\u732e\uff0c\u76f4\u63a5\u4e0a\u4f20\u4e24\u4e2a\u513f\u5b50\uff1b\u82e5 $>0$\uff0c\u5219 $0$ \u7684\u6570\u91cf\u4e3a $0$\uff1b\u7531\u4e8e\u6bcf\u6b21\u51cf\u6cd5\u662f\u5bf9\u4e4b\u524d\u52a0\u6cd5\u7684\u6d88\u9664\uff0c\u6240\u4ee5\u6807\u8bb0\u6052\u975e\u8d1f\u3002\n\n\u65f6\u95f4 $\\mathrm O(m\\log n)$\uff0c\u7a7a\u95f4 $\\mathrm O(n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define X first\n#define Y second\nconst int N=100000,M=100000,DB_SZ=333;\nint n,m; \nvector<int> nei[N+1];\nint dfn[N+1],mxdfn[N+1],mng[N+1],nowdfn;\nvoid dfs(int x=1,int fa=0){\n\tmng[dfn[x]=mxdfn[x]=++nowdfn]=x;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tmxdfn[x]=mxdfn[y];\n\t}\n}\nint d[N+2];\nstruct segtree{\n\tstruct node{int l,r,cnt,lz;}nd[N<<2];\n\t#define l(p) nd[p].l\n\t#define r(p) nd[p].r\n\t#define cnt(p) nd[p].cnt\n\t#define lz(p) nd[p].lz\n\tvoid bld(int l=1,int r=n,int p=1){\n\t\tl(p)=l;r(p)=r;lz(p)=0;cnt(p)=r-l+1;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tbld(l,mid,p<<1);bld(mid+1,r,p<<1|1);\n\t}\n\tvoid init(){bld();}\n\tvoid sprup(int p){\n\t\tif(l(p)==r(p))cnt(p)=!lz(p);\n\t\telse cnt(p)=lz(p)?0:cnt(p<<1)+cnt(p<<1|1);\n\t}\n\tvoid add(int l,int r,int v,int p=1){\n\t\tif(l<=l(p)&&r>=r(p))return lz(p)+=v,sprup(p);\n\t\tint mid=l(p)+r(p)>>1;\n\t\tif(l<=mid)add(l,r,v,p<<1);\n\t\tif(r>mid)add(l,r,v,p<<1|1);\n\t\tsprup(p);\n\t}\n\tint zero(){return cnt(1);}\n}segt;\nvector<pair<pair<int,int>,int> > add[N+2];\nint ans[N+1];\nint main(){\n\tfreopen(\"b.in\",\"r\",stdin);freopen(\"b.out\",\"w\",stdout);\n\tcin>>n>>m;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tnei[x].pb(y);nei[y].pb(x);\n\t}\n\tdfs();\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\td[dfn[x]]++,d[mxdfn[x]+1]--,d[dfn[y]]++,d[mxdfn[y]+1]--;\n\t\tif(dfn[x]<=dfn[y]&&mxdfn[y]<=mxdfn[x]){\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t}\n\t\telse if(dfn[y]<=dfn[x]&&mxdfn[x]<=mxdfn[y]){\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t}\n\t\telse{\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)d[i]+=d[i-1];\n\tsegt.init();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<add[i].size();j++){\n\t\t\tint l=add[i][j].X.X,r=add[i][j].X.Y,v=add[i][j].Y;\n\t\t\tsegt.add(l,r,v);\n\t\t}\n\t\tans[mng[i]]=n-segt.zero()-!!d[i];\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d%c\",ans[i],\" \\n\"[i==n]);\n\treturn 0;\n}\n```\n\n### \u65b9\u6cd5\u4e09\n\n\u8fd9\u662f rng \u7684\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u65b9\u6cd5\u3002\n\n\u7ee7\u7eed\u4f7f\u7528\u4e0a\u9762\u90a3\u4e2a\u6027\u8d28\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u77e5\u9053\uff0c\u6700\u5c0f\u503c\u662f\u591a\u5c11\uff0c\u6700\u5c0f\u503c\u6709\u51e0\u4e2a\u5373\u53ef\uff0c\u5224\u65ad\u6700\u5c0f\u503c\u662f\u5426\u4e3a $0$ \u5373\u53ef\u3002\n\n\u4e8e\u662f\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u4fe1\u606f\uff0c\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u8fd9\u662f\u53ef\u4ee5\u8f7b\u677e\u61d2\u6807\u8bb0\u548c\u4e0a\u4f20\u7684\u3002\u4e0a\u4f20\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e24\u8fb9\u6700\u5c0f\u503c\u4e0d\u540c\u5c31\u53d6\u5c0f\u7684\uff0c\u5426\u5219\u5408\u5e76\u3002\n\n\u590d\u6742\u5ea6\u8ddf\u4e0a\u9762\u4e00\u4e2a\u65b9\u6cd5\u4e00\u6837\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define X first\n#define Y second\nconst int N=100000,M=100000,DB_SZ=333;\nint n,m; \nvector<int> nei[N+1];\nint dfn[N+1],mxdfn[N+1],mng[N+1],nowdfn;\nvoid dfs(int x=1,int fa=0){\n\tmng[dfn[x]=mxdfn[x]=++nowdfn]=x;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tmxdfn[x]=mxdfn[y];\n\t}\n}\nint d[N+2];\nstruct segtree{\n\tstruct node{int l,r,mn,cnt,lz;}nd[N<<2];\n\t#define l(p) nd[p].l\n\t#define r(p) nd[p].r\n\t#define mn(p) nd[p].mn\n\t#define cnt(p) nd[p].cnt\n\t#define lz(p) nd[p].lz\n\tvoid bld(int l=1,int r=n,int p=1){\n\t\tl(p)=l;r(p)=r;mn(p)=lz(p)=0;cnt(p)=r-l+1;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tbld(l,mid,p<<1);bld(mid+1,r,p<<1|1);\n\t}\n\tvoid init(){bld();}\n\tvoid sprup(int p){\n\t\tif(mn(p<<1)==mn(p<<1|1))mn(p)=mn(p<<1),cnt(p)=cnt(p<<1)+cnt(p<<1|1);\n\t\telse{\n\t\t\tif(mn(p<<1)<mn(p<<1|1))mn(p)=mn(p<<1),cnt(p)=cnt(p<<1);\n\t\t\telse mn(p)=mn(p<<1|1),cnt(p)=cnt(p<<1|1);\n\t\t}\n\t}\n\tvoid tag(int p,int v){\n\t\tmn(p)+=v;\n\t\tlz(p)+=v;\n\t}\n\tvoid sprdwn(int p){\n\t\ttag(p<<1,lz(p));tag(p<<1|1,lz(p));\n\t\tlz(p)=0;\n\t}\n\tvoid add(int l,int r,int v,int p=1){\n\t\tif(l<=l(p)&&r>=r(p))return tag(p,v);\n\t\tsprdwn(p);\n\t\tint mid=l(p)+r(p)>>1;\n\t\tif(l<=mid)add(l,r,v,p<<1);\n\t\tif(r>mid)add(l,r,v,p<<1|1);\n\t\tsprup(p);\n\t}\n\tint zero(){return mn(1)==0?cnt(1):0;}\n}segt;\nvector<pair<pair<int,int>,int> > add[N+2];\nint ans[N+1];\nint main(){\n\tfreopen(\"b.in\",\"r\",stdin);freopen(\"b.out\",\"w\",stdout);\n\tcin>>n>>m;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tnei[x].pb(y);nei[y].pb(x);\n\t}\n\tdfs();\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\td[dfn[x]]++,d[mxdfn[x]+1]--,d[dfn[y]]++,d[mxdfn[y]+1]--;\n\t\tif(dfn[x]<=dfn[y]&&mxdfn[y]<=mxdfn[x]){\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t}\n\t\telse if(dfn[y]<=dfn[x]&&mxdfn[x]<=mxdfn[y]){\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t}\n\t\telse{\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)d[i]+=d[i-1];\n\tsegt.init();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<add[i].size();j++){\n\t\t\tint l=add[i][j].X.X,r=add[i][j].X.Y,v=add[i][j].Y;\n\t\t\tsegt.add(l,r,v);\n\t\t}\n\t\tans[mng[i]]=n-segt.zero()-!!d[i];\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d%c\",ans[i],\" \\n\"[i==n]);\n\treturn 0;\n}\n```\n\n### \u65b9\u6cd5\u56db\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u9898\u8fd8\u6709\u53e6\u4e00\u4e2a\u5173\u4e8e\u64cd\u4f5c\u65f6\u6548\u6027\u7684\u6027\u8d28\uff1a\u7531\u4e8e\u6811\u53ef\u4ee5\u8868\u793a\u6210\u62ec\u53f7\u5e8f\u5217\uff0c\u6240\u4ee5\u4efb\u610f\u4e00\u6b21\u51cf\u6cd5\uff08\u5373\u5bf9\u52a0\u6cd5\u7684\u6d88\u9664\u5f71\u54cd\uff09\u90fd\u662f\u64a4\u9500\u64cd\u4f5c\u3002\n\nymx \u50bb\u4e4e\u4e4e\u7684\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4e3b\u5e2d\u6811\uff0c\u533a\u95f4\u8d4b $1$\u3001\u56de\u5230\u5386\u53f2\u7248\u672c\u3001\u533a\u95f4\u6c42\u548c\u3002\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981~~\uff08\u53ea\u662f\u6211\u4e0d\u4f1a\u5199\u7684\u8bf4\uff09~~\uff0c\u7528\u6211\u81ea\u5df1\u53d1\u660e\u7684\u300c\u53ef\u64a4\u9500\u7ebf\u6bb5\u6811\u300d\u5373\u53ef\u3002\u8fd9\u4e2a\u4e1c\u897f\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u8ddf\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u4e00\u6837\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u5728\u6808\u4e2d\u538b\u5165\u4e00\u4e2a\u4fee\u6539\u5e8f\u5217\uff0c\u628a\u6240\u6709\u6709\u4fee\u6539\u7684\u8282\u70b9\u7684\u539f\u6837\u7ed9\u8bb0\u5f55\u4e0b\u6765\uff0c\u64a4\u9500\u7684\u65f6\u5019\u5c31\u8fd8\u539f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u7a7a\u95f4\u8ddf\u4e3b\u5e2d\u6811\u4e00\u6837\uff0c\u662f $\\mathrm O(m\\log n)$ \u7684\uff08\u6342\u8138\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define X first\n#define Y second\nconst int N=100000,M=100000,DB_SZ=333;\nint n,m; \nvector<int> nei[N+1];\nint dfn[N+1],mxdfn[N+1],mng[N+1],nowdfn;\nvoid dfs(int x=1,int fa=0){\n\tmng[dfn[x]=mxdfn[x]=++nowdfn]=x;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tmxdfn[x]=mxdfn[y];\n\t}\n}\nint d[N+2];\nstruct segtree{\n\tstruct node{int l,r,sum;bool lz;}nd[N<<2];\n\t#define l(p) nd[p].l\n\t#define r(p) nd[p].r\n\t#define sum(p) nd[p].sum\n\t#define lz(p) nd[p].lz\n\tstack<stack<pair<int,node> > > stk;\n\tvoid bld(int l=1,int r=n,int p=1){\n\t\tl(p)=l;r(p)=r;sum(p)=r-l+1;lz(p)=0;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tbld(l,mid,p<<1);bld(mid+1,r,p<<1|1);\n\t}\n\tvoid init(){bld();}\n\tvoid sprup(int p){\n\t\tstk.top().push(mp(p,nd[p]));\n\t\tsum(p)=sum(p<<1)+sum(p<<1|1);\n\t}\n\tvoid tag(int p){\n\t\tstk.top().push(mp(p,nd[p]));\n\t\tsum(p)=0;lz(p)=true;\n\t}\n\tvoid sprdwn(int p){\n\t\tstk.top().push(mp(p,nd[p]));\n\t\tif(lz(p))tag(p<<1),tag(p<<1|1),lz(p)=false;\n\t}\n\tvoid chg(int l,int r,int p=1){\n\t\tif(p==1)stk.push(stack<pair<int,node> >());\n\t\tif(l<=l(p)&&r>=r(p))return tag(p);\n\t\tsprdwn(p);\n\t\tint mid=l(p)+r(p)>>1;\n\t\tif(l<=mid)chg(l,r,p<<1);\n\t\tif(r>mid)chg(l,r,p<<1|1);\n\t\tsprup(p);\n\t}\n\tint zero(){return sum(1);}\n\tvoid cancel(){\n\t\tstack<pair<int,node> > s=stk.top();\n\t\tstk.pop();\n\t\twhile(s.size())nd[s.top().X]=s.top().Y,s.pop();\n\t}\n}segt;\nvector<pair<pair<int,int>,int> > add[N+2];\nint ans[N+1];\nint main(){\n\tfreopen(\"b.in\",\"r\",stdin);freopen(\"b.out\",\"w\",stdout);\n\tcin>>n>>m;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tnei[x].pb(y);nei[y].pb(x);\n\t}\n\tdfs();\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\td[dfn[x]]++,d[mxdfn[x]+1]--,d[dfn[y]]++,d[mxdfn[y]+1]--;\n\t\tif(dfn[x]<=dfn[y]&&mxdfn[y]<=mxdfn[x]){\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t}\n\t\telse if(dfn[y]<=dfn[x]&&mxdfn[x]<=mxdfn[y]){\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t}\n\t\telse{\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[x],mxdfn[x]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[x],mxdfn[x]),-1));\n\t\t\tadd[dfn[x]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[x]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t\tadd[dfn[y]].pb(mp(mp(dfn[y],mxdfn[y]),1));\n\t\t\tadd[mxdfn[y]+1].pb(mp(mp(dfn[y],mxdfn[y]),-1));\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)d[i]+=d[i-1];\n\tsegt.init();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<add[i].size();j++){\n\t\t\tint v=add[i][j].Y;\n\t\t\tif(v==-1)segt.cancel();\n\t\t}\n\t\tfor(int j=0;j<add[i].size();j++){\n\t\t\tint l=add[i][j].X.X,r=add[i][j].X.Y,v=add[i][j].Y;\n\t\t\tif(v==1)segt.chg(l,r);\n\t\t}\n\t\tans[mng[i]]=n-segt.zero()-!!d[i];\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d%c\",ans[i],\" \\n\"[i==n]);\n\treturn 0;\n}\n```\n\n### \u5bf9\u6bd4\n\n![](https://s1.ax1x.com/2020/08/26/dWdM6I.png)\n\n\u4e2d\u95f4\u90a3\u6b21 WA \u7684\u4e0d\u7ba1\uff0c\u4ece\u4e0b\u5230\u4e0a\u5206\u522b\u662f\u7b2c $1\\sim4$ \u79cd\u65b9\u6cd5\u3002\n\n\u53ef\u89c1\uff0c\u5206\u5757\u590d\u6742\u5ea6\u5927\uff0c\u52a3\u662f\u6b63\u5e38\u7684\uff1b\u4e2d\u95f4\u4e24\u79cd\u65b9\u6cd5\u6bd4\u8f83\u597d\u4e5f\u662f\u7406\u6240\u5f53\u7136\u7684\uff1b\u800c\u6700\u540e\u4e00\u79cd\u300c\u6211\u53d1\u660e\u300d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u867d\u7136\u590d\u6742\u5ea6\u8981\u4f18\u4e8e\u5206\u5757\uff0c\u4f46\u662f\u65f6\u7a7a\u5374\u88ab\u5176\u4ed6\u4e09\u79cd\u65b9\u6cd5\u5168\u65b9\u4f4d\u540a\u6253\uff0c\u8bf4\u660e\u6211\u662f sb\uff01\uff01\uff01",
        "postTime": 1598436934,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 258E - Little Elephant and Tree"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/CF258E)\n\n~~\u770b\u5230\u6ca1\u5565\u4eba\u5199\u6c34\u53d1\u9898\u89e3~~\n\n\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\uff1a\n\n\u5047\u5982\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5728\u6839\u8282\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u7136\u540e\u4e00\u904d$dfs$\u4e0b\u6765\u5c31\u597d\u4e86\u3002\u8fd9\u63d0\u9192\u6211\u4eec\uff0c\u628a\u4fe1\u606f\u8bb0\u5f55\u5728\u6839\u4e0a\uff0c\u7136\u540e\u4e00\u8def\u4f20\u9012\u4e0b\u6765\n\n\u5bf9\u4e8e\u8282\u70b9$a$\uff0c\u8bbe\u548c\u5b83\u5173\u8054\u7684\u8282\u70b9\u4e3a$\\{b_1,b_2,...,b_k\\}$\n\n\u5f88\u663e\u7136\u7684\uff0c$b_i$\u7684\u6df1\u5ea6\u8d8a\u5c0f\uff0c\u5b50\u6811\u7684\u5927\u5c0f\u5c31\u8d8a\u5927\n\n\u90a3\u76f4\u63a5\u53d6$b_i$\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\u5417\uff1f\u4e0d\u4e00\u5b9a\uff0c\u56e0\u4e3a$b_i,b_j$\u7684\u5b50\u6811\u53ef\u80fd\u6ca1\u6709\u4ea4\u96c6\n\n\u7136\u540e\u5c31\u60f3\uff0c\u53ea\u8981\u628a\u6709\u4ea4\u96c6\u7684$b$\u4fdd\u7559\u6df1\u5ea6\u6700\u5927\u7684\uff0c\u7136\u540e\u5269\u4e0b\u7684$b_i$\u7684\u5b50\u6811\u5927\u5c0f\u7684\u548c\u5c31\u662f$a$\u7684\u7b54\u6848\uff08\u8fd8\u8981\u52a0\u4e0a\u4ece\u4ed6\u7956\u5148\u4f20\u9012\u4e0b\u6765\u7684\uff09\n\n\u90a3\u600e\u4e48\u5224\u65ad\u6709\u6ca1\u6709\u4ea4\u96c6\u5462\uff1f\u4ea4\u96c6\u80af\u5b9a\u662f\u653e\u5728\u533a\u95f4\u4e0a\u554a\uff0c\u8fd8\u662f\u770b\u5b50\u6811\uff0c\u90a3\u76f4\u63a5\u6c42\u4e2a$dfs$\u5e8f\u4e0d\u5c31\u8f6c\u53d8\u4e3a\u533a\u95f4\u4e0a\u7684\u95ee\u9898\u4e86\u5417\n\n\u51c6\u5907\u5f00\u59cb\u7801\u7684\u65f6\u5019\uff0c\u60f3\u5230\uff1a\u5224\u65ad\u4e00\u4e2a\u70b9$b$\u662f\u5426\u548c\u524d\u9762\u7684\u6709\u4ea4\u96c6\uff0c\u5c31\u76f4\u63a5\u5728\u7ef4\u62a4$dfs$\u5e8f\u7684\u7ebf\u6bb5\u6811\u4e0a\u5355\u70b9\u67e5\u8be2\uff0c\u5982\u679c\u6709\u67e5\u5230\uff0c\u518d\u5224\u65ad\u6df1\u5ea6\u5927\u5c0f\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u6df1\u5ea6\u66f4\u6d45\u5c31\u8981\u628a\u4e0a\u4e00\u4e2a\u53bb\u6389\uff0c\u597d\u9ebb\u70e6QWQ\n\n\u5982\u679c\u6ca1\u6709\u4ea4\u96c6\uff0c\u7ebf\u6bb5\u6811\u4e0a\u5f53\u7136\u53ef\u4ee5\u76f4\u63a5\u52a0\uff1b\u5982\u679c\u6709\u4ea4\u96c6\u7684\u8bdd\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u52a0\u5462\uff1f\u65e2\u7136\u90fd\u6709\u4e00\u9897\u7ebf\u6bb5\u6811\u4e86\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u53bb\u7ef4\u62a4\u6ca1\u6709\u4ea4\u96c6\u7684$\\{b\\}$\u5462\uff1f\u6bcf\u6b21\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u8be2\u95ee\u6709\u591a\u5c11\u4e2a\u4e0d\u4e3a$0$\u7684\u6570\u4e0d\u5c31\u597d\u4e86\u5417\n\n\u56e0\u4e3a\u8ba1\u7b97\u5b8c$p$\u4ee5\u53ca\u5176\u5b50\u6811\u7b54\u6848\u540e\uff0c\u56de\u6eaf\u5230\u7236\u4eb2\u65f6\uff0c$p$\u53ca\u5176\u5b50\u6811\u7684\u4fe1\u606f\u80af\u5b9a\u662f\u8981\u53bb\u6389\u7684\n\n\u6240\u4ee5\u7ebf\u6bb5\u6811\u8981\u652f\u6301\u7684\u64cd\u4f5c\uff1a\u533a\u95f4$+1/-1$\u4ee5\u53ca\u8be2\u95ee\u6574\u4e2a\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u4e0d\u4e3a$0$\u7684\u6570\n\n\u6ce8\u610f\u5230$+1,-1$\u64cd\u4f5c\u4e00\u5b9a\u662f\u6210\u5bf9\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5199\u6210\u6807\u8bb0\u6c38\u4e45\u5316\n\n\u7ec6\u8282\uff1a\n\n1\u3001\u5982\u679c\u5f53\u524d\u8282\u70b9$p$\u6709\u5173\u8054\u7684\u8282\u70b9\uff0c\u9664\u4e86\u4fee\u6539\u5173\u8054\u8282\u70b9\u5b50\u6811\u5185\u7684\uff0c\u8fd8\u6709$p$\u5b50\u6811\u5185\u7684\n\n2\u3001\u6bcf\u4e2a\u8282\u70b9\u5728$dfs$\u5e8f\u4e0a\u662f\u6709\u4e24\u4e2a\u7684\uff0c\u6240\u4ee5\u6700\u540e\u7b54\u6848\u662f\u4e0d\u4e3a$0$\u7684\u6570\u9664\u4ee5$2$\u518d\u51cf$1$\uff08\u4e0d\u5305\u62ec\u81ea\u5df1\uff09\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\nusing namespace std;\nconst int N=1e6+10;\nint tot,cnt;\nint fir[N],dfn[N][2],ans[N];\nvector<int>opt[N];\nstruct edge\n{\n\tint to;\n\tint nxt;\n}e[2*N];\ninline void add(int x,int y)\n{\n\te[++tot].to=y; e[tot].nxt=fir[x]; fir[x]=tot;\n\te[++tot].to=x; e[tot].nxt=fir[y]; fir[y]=tot;\n}\nstruct tree\n{\n\tint left,right;\n\tint val,cnt;\n}t[8*N];\ninline void build(int p,int l,int r)\n{\n\tt[p].left=l,t[p].right=r;\n\tif(l==r) return;\n\tint mid=(t[p].left+t[p].right)/2;\n\tbuild(p*2,l,mid);\n\tbuild(p*2+1,mid+1,r);\n}\ninline void pushup(int p)\n{\n\tif(t[p].val>0) t[p].cnt=t[p].right-t[p].left+1;\n\telse t[p].cnt=t[p*2].cnt+t[p*2+1].cnt;\n}\ninline void change(int p,int l,int r,int c)\n{\n\tif(l<=t[p].left&&r>=t[p].right)\n\t{\n\t\tt[p].val+=c;\n\t\tpushup(p);\n\t\treturn;\n\t}\n\tint mid=(t[p].left+t[p].right)/2;\n\tif(l<=mid) change(p*2,l,r,c);\n\tif(r>mid) change(p*2+1,l,r,c);\n\tpushup(p);\n}\ninline void dfs1(int p,int fa)\n{\n\tdfn[p][0]=++cnt;\n\tfor(int i=fir[p];i;i=e[i].nxt)\n\t\tif(e[i].to!=fa) dfs1(e[i].to,p);\n\tdfn[p][1]=++cnt;\n}\ninline void dfs2(int p,int fa)\n{\n\tif(opt[p].size()) change(1,dfn[p][0],dfn[p][1],1);\n\tfor(int i=0;i<opt[p].size();i++)\n\t\tchange(1,dfn[opt[p][i]][0],dfn[opt[p][i]][1],1);\n\tif(t[1].cnt) ans[p]=t[1].cnt/2-1;\n\tfor(int i=fir[p];i;i=e[i].nxt)\n\t\tif(e[i].to!=fa) dfs2(e[i].to,p);\n\tif(opt[p].size()) change(1,dfn[p][0],dfn[p][1],-1);\n\tfor(int i=0;i<opt[p].size();i++)\n\t\tchange(1,dfn[opt[p][i]][0],dfn[opt[p][i]][1],-1);\n}\nint main()\n{\n\tint n,m,a,b;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b);\n\t}\n\tdfs1(1,0);\n\tbuild(1,1,2*n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\topt[a].push_back(b);\n\t\topt[b].push_back(a);\t\n\t}\n\tdfs2(1,0);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1598018303,
        "uid": 81238,
        "name": "MCAdam",
        "ccfLevel": 7,
        "title": "CF258E \u3010Little Elephant and Tree\u3011"
    },
    {
        "content": "1.\u5982\u4f55\u5c06\u6811\u5904\u7406\uff0c\u5904\u7406\u6210\u6570\uff0c\u65b9\u4fbf\u8fdb\u884c\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff1f\n\n2.\u5982\u4f55\u5feb\u901f\u4e14\u6b63\u786e\u5730\u627e\u5230\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u4ed6\u6709\u4ea4\u96c6\u7684\u5176\u4ed6\u70b9\uff1f\n\n\u5bf9\u4e8e\u7591\u95ee1\uff0c\u6211\u4eec\u53ef\u4ee5\u7528dfn\u6765\u505a\uff0c\u56e0\u4e3a\u6df1\u5ea6\u4f18\u5148\u5e8f\u53ef\u4ee5\u8ba9\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u4ed6\u7684\u5b50\u6811\u662f\u54ea\u4e9b\uff08\u5176\u5b50\u6811dfn\u4e00\u5b9a\u8fde\u7eed\u7684\uff0c\u800c\u4e14\u5927\u4e8e\u7236\u4eb2\u8282\u70b9\u7684\uff09\u3002\n\n\u5bf9\u4e8e\u7591\u95ee2\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9898\u76ee\u7ed9\u51fa\u7684\u64cd\u4f5c\uff08a\uff0cb\uff09\u5b58\u50a8\u4e0b\u6765\uff0c\u7136\u540e\u5b58\u5165vector\uff0c\u65b9\u4fbf\u4ee5\u540e\u8fdb\u884c\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u6bd4\u5982\u7ed9\u51fa\u64cd\u4f5c\uff082\uff0c3\uff09\uff0c\u5728\u540e\u9762\u7684\u8fc7\u7a0b\u91cc\uff0c\u6211\u4eec\u8bbf\u95ee\u5230\u70b92\uff0c\u5c31\u77e5\u9053\u5bf9\u70b92\u548c\u70b93\u7684\u5b50\u6811\u540c\u65f6\u66f4\u65b0\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u64cd\u4f5c\u5b58\u50a8\u540e\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u518d\u6b21dfs\uff0c\u5bf9\u4e8e\u73b0\u5728\u505a\u5230\u7684\u70b9x\uff0c\u6211\u4eec\u53ef\u4ee5\u4ecevector\u4e2d\u77e5\u9053\u4ed6\u5bf9\u5e94\u7684\u64cd\u4f5c\uff08x\uff0cy1\uff09\uff08x\uff0cy2\uff09......(x,yn)\u3002\u6b64\u65f6\u7528\u7ebf\u6bb5\u6811\uff0c\u5bf9x\u7684\u5b50\u6811\uff0cy1\uff0cy2\uff0cy3......yn\u7684\u5b50\u6811\u5206\u522b\u52a01\uff0c\u6b64\u65f6\u7ee7\u7eed\u5229\u7528\u7ebf\u6bb5\u6811\u8bbf\u95ee\u5168\u90e8\u70b9\uff0c\u627e\u5230>0\u7684\u70b9\u6709\u591a\u5c11\u4e2a\uff0c\u8fd9\u5c31\u662f\u70b9x\u7b54\u6848\u4e86\u3002\n\n\u5904\u7406\u51fax\u7684\u7b54\u6848\uff0c\u5c31\u7ee7\u7eed\u5411x\u7684\u513f\u5b50\u8282\u70b9dfs\u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u5728\u513f\u5b50\u8282\u70b9\u505a\u5b8c\u64cd\u4f5c\u540e\uff0c\u8fd4\u56dex\u7684\u7236\u4eb2\u8282\u70b9\u524d\uff0c\u5c06\u539f\u6765+1\u8fc7\u7684\u7ebf\u6bb5\u6811\u533a\u95f4\u5168\u90e8-1\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5bf9\u7236\u4eb2\u8282\u70b9\u548c\u5176\u5b83\u548c\u81ea\u5df1\u540c\u5c42\u7684\u5b50\u8282\u70b9\u9020\u6210\u5f71\u54cd\u4e86\u3002\n\n\u4e3a\u4f55\u4e00\u5b9a\u662f\u6b63\u786e\u7684\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u505a\u5230x\u70b9\u65f6\uff0cx\u7684\u513f\u5b50\u8282\u70b9\u7684\u64cd\u4f5c\u4e0e\u7b54\u6848x\u65e0\u5173\uff0c\u53ea\u6709x\u7684\u7956\u5148\u8282\u70b9\u624d\u4f1a\u5f71\u54cd\u5230x\uff08\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u66f4\u65b0\uff0c\u5176\u5b50\u6811\u4e5f\u4f1a\u66f4\u65b0\uff09\uff0c\u6240\u4ee5\u5728\u8fd4\u56de\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u53bb\u9664\u6389\u5b50\u6811\u7684\u66f4\u65b0\u3002\n\n\u5176\u6b21\u5c31\u662f\u5982\u4f55\u6c42\u51fa>0\u7684\u70b9\u7684\u4e2a\u6570\u4e86\uff0c\u8fd9\u4e2a\u4ee3\u7801\u4e2d\u7ed9\u51fa\u4e86\uff0c\u81ea\u5df1\u7406\u89e3\uff08\u5f3a\u884c\u4e3a\u81ea\u5df1\u53e3\u8ff0\u4e0d\u6e05\u627e\u501f\u53e3\uff09\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint a[6000000];\nint t[6000000];\nint lazy[6000000];\nint c[6000000];\nint k[6000000];\n\nint n,m,op;\n\nint w[600006];\nint dis[600006];\nvector<int> q[600005];\nvector<int> p[600005];\n\nvoid down(int l,int r,int id)\n{\n    int mid=(l+r)/2;\n    lazy[id*2]+=lazy[id];\n    lazy[id*2+1]+=lazy[id];\n    t[id*2]+=(mid-l+1)*lazy[id];\n    t[id*2+1]+=(r-mid)*lazy[id];\n    lazy[id]=0;\n}\n\nvoid update(int l,int r,int z,int y,int v,int id)\n{\n    if(l==z&&r==y)\n    {\n        t[id]+=(r-l+1)*v;\n        c[id]+=v;\n        lazy[id]+=v;\n        if(c[id]>0)k[id]=(r-l+1);\n        else k[id]=k[id*2]+k[id*2+1];\n        return ;\n    }\n    down(l,r,id);\n    int mid=(l+r)/2;\n    if(mid>=y)update(l,mid,z,y,v,id*2);\n    else if(mid<z)update(mid+1,r,z,y,v,id*2+1);\n    else\n    {\n        update(l,mid,z,mid,v,id*2);\n        update(mid+1,r,mid+1,y,v,id*2+1);\n    }\n    t[id]=t[id*2]+t[id*2+1];\n    if(c[id]>0)k[id]=(r-l+1);\n    else\n        k[id]=k[id*2]+k[id*2+1];\n}\n\nint cck(int l,int r,int x,int id)\n{\n    if(l==r&&l==x)\n    {\n        if(t[id]>0)\n            return 1;\n        else return 0;\n    }\n    down(l,r,id);\n    int mid=(l+r)/2;\n    if(mid>=x)return cck(l,mid,x,id*2);\n    else return cck(mid+1,r,x,id*2+1);\n}\n\nvoid dfs(int x,int last)\n{\n    op++;\n    dis[x]=op;\n    for(int i=0;i<q[x].size();i++)\n    {\n        int nx=q[x][i];\n        if(nx==last)continue;\n        dfs(nx,x);\n        w[x]+=w[nx];\n    }\n    w[x]+=1;\n}\n\nint ans[600000];\n\nvoid dd(int x,int last)\n{\n    for(int i=0;i<p[x].size();i++)\n    {\n        int nx=p[x][i];\n        update(1,op,dis[x],dis[x]+w[x]-1,1,1);\n        update(1,op,dis[nx],dis[nx]+w[nx]-1,1,1);\n    }\n    ans[x]=k[1]-cck(1,op,dis[x],1);\n    for(int i=0;i<q[x].size();i++)\n    {\n        int nx=q[x][i];\n        if(nx==last)continue;\n        dd(nx,x);\n    }\n    for(int i=0;i<p[x].size();i++)\n    {\n        int nx=p[x][i];\n        update(1,op,dis[x],dis[x]+w[x]-1,-1,1);\n        update(1,op,dis[nx],dis[nx]+w[nx]-1,-1,1);\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        q[x].push_back(y);\n        q[y].push_back(x);\n    }\n    dfs(1,1);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        p[x].push_back(y);\n        p[y].push_back(x);\n    }\n    dd(1,1);\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d \",ans[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1532570384,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF258E \u3010Little Elephant and Tree\u3011"
    },
    {
        "content": "### $\\text{Difficulty : 2400}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u4e00\u773c\u626b\u63cf\u7ebf\u3002\n\n\u64cd\u4f5c\u662f\u5bf9\u4e8e\u4e00\u6574\u4e2a\u5b50\u6811\u8fdb\u884c\u7684\uff0c\u5148\u5c06\u7f16\u53f7\u8f6c\u5316\u6210 $\\text{dfn}$ \u5e8f\uff0c\u5f97\u5230\u4e00\u4e2a\u8fde\u7eed\u7684\u7f16\u53f7\u3002\n\n\u63a5\u7740\u8003\u8651\u5177\u4f53\u64cd\u4f5c\uff0c\u7531\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u52a0\u5165\u7684\u6570\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u53d1\u73b0\u64cd\u4f5c\u548c\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u4f1a\u5e72\u6270\u3002\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u662f\u5c06\u4e24\u4e2a\u533a\u95f4\u5185\u7684\u70b9\u4e4b\u95f4\u76f8\u4e92\u5173\u8054\uff0c\u5173\u8054\u591a\u6b21\u7684\u70b9\u4e0d\u4f1a\u4ea7\u751f\u989d\u5916\u8d21\u732e\u3002\n\n\u7531\u6b64\u60f3\u5230\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u9762\u79ef\u5e76\uff0c\u4ee4 $(i,j)$ \u70b9\u8868\u793a\u7b2c $i$ \u4e2a\u70b9\u548c\u7b2c $j$ \u4e2a\u70b9\u662f\u5426\u5173\u8054\uff0c\u82e5\u5173\u8054\u533a\u95f4 $[l_1,r_1]$ \u548c $[l_2,r_2]$\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u5de6\u4e0b\u89d2\u4e3a $(l_1,l_1)$ \u53f3\u4e0a\u89d2\u4e3a $(r_1,r_1)$\uff0c\u5de6\u4e0b\u89d2\u4e3a $(l_1,l_2)$ \u53f3\u4e0a\u89d2\u4e3a $(r_1,r_2)$\uff0c\u5de6\u4e0b\u89d2\u4e3a $(l_2,l_1)$ \u53f3\u4e0a\u89d2\u4e3a $(r_2,r_1)$\uff0c\u5de6\u4e0b\u89d2\u4e3a $(l_2,l_2)$ \u53f3\u4e0a\u89d2\u4e3a $(r_2,r_2)$ \u56db\u4e2a\u77e9\u5f62\u8fdb\u884c\u8986\u76d6\u3002\n\n\u7279\u6b8a\u5730\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6700\u540e\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $(i,i)$ \u5355\u72ec\u8986\u76d6\u3002\n\n\u6700\u7ec8\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$ \u7684\u7b54\u6848\u5373\u4e3a\u6a2a\u5750\u6807\uff08\u6216\u8005\u4f7f\u7528\u5bf9\u79f0\u5730\u7eb5\u5750\u6807\uff09\u4e3a $i$ \u7684\u70b9\u88ab\u67d3\u8272\u7684\u6570\u91cf\u3002\n\n\u590d\u6742\u5ea6 $O((n+m)\\log n)$\u3002\n\n---\n### \u4ee3\u7801\uff1a",
        "postTime": 1666052878,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF258E Little Elephant and Tree \u9898\u89e3"
    },
    {
        "content": "\u53c8\u662f\u6811\u4e0a dfn \u5e8f\u626b\u63cf\u7ebf\u88f8\u9898\u3002\n\n\u5f88\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u5b83\u8ddf\u5176\u4ed6\u8282\u70b9 $v$ \u6709\u5173\u7cfb\uff0c\u5f53\u4e14\u4ec5\u5f53 $u$ \u6216 $u$ \u7684\u7956\u5148\u4e0e $v$ \u6216 $v$ \u7684\u7956\u5148\u5728\u4e00\u4e2a\u64cd\u4f5c\u91cc\u3002\n\n\u5927\u81f4\u53ef\u4ee5\u60f3\u5230\u8fd9\u662f\u4e2a\u5b50\u6811\u8986\u76d6/\u8fd8\u539f\uff0c\u7136\u540e\u5168\u5c40\u67e5\u8be2\u88ab\u8986\u76d6\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u8fd9\u5c31\u7528\u5230\u4e86\u626b\u63cf\u7ebf\u3002\n\n\u600e\u4e48\u4fee\u6539\u5462\uff1f\u904d\u5386\u4e00\u904d\u6811\uff0c\u8fdb\u5165\u8282\u70b9 $u$ \u65f6\u628a $u$ \u7684\u5b50\u6811\u548c\u5176\u5b83\u6709\u5173\u64cd\u4f5c\u7684\u8282\u70b9\u7684\u5b50\u6811\u5168\u90e8\u8986\u76d6\uff0c\u7136\u540e\u67e5\u8be2\uff0c\u6700\u540e\u79bb\u5f00\u8282\u70b9 $u$ \u65f6\u518d\u8fdb\u884c\u8fd8\u539f\u3002\n\n\u4e0d\u9700\u8981\u8bb0\u5f55\u4ec0\u4e48\u5386\u53f2\u503c\uff0c\u592a\u9ebb\u70e6\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O((m+n)\\log n)$\n# AC code\uff1a\n```cpp\nvector<int> edge[100005],vec[100005];\nint len[200005],ls[200005],rs[200005],sum[200005],ans[100005],tot,tim,n,dfn[100005],siz[100005];\nvoid build(int &x,int l,int r){\n\tx=++tot;if(l==r) return ;\n\tint mid=l+r>>1;build(ls[x],l,mid),build(rs[x],mid+1,r);\n}\nvoid change(int x,int l,int r,int l1,int r1,int v){\n\tif(l<=l1&&r1<=r){if(len[x]+=v) sum[x]=r1-l1+1;else sum[x]=sum[ls[x]]+sum[rs[x]];return ;}\n\tint mid=l1+r1>>1;\n\tif(l<=mid) change(ls[x],l,r,l1,mid,v);if(mid<r) change(rs[x],l,r,mid+1,r1,v);\n\tif(!len[x]) sum[x]=sum[ls[x]]+sum[rs[x]];\n}\nvoid dfs1(int u,int f){\n\tdfn[u]=++tim,siz[u]=1;\n\tfor(int v:edge[u]) if(v^f) dfs1(v,u),siz[u]+=siz[v];\n}\nvoid dfs2(int u,int f){\n\tfor(int to:vec[u]) change(1,dfn[u],dfn[u]+siz[u]-1,1,n,1),change(1,dfn[to],dfn[to]+siz[to]-1,1,n,1);\n\tans[u]=sum[1];for(int v:edge[u]) if(v^f) dfs2(v,u);\n\tfor(int to:vec[u]) change(1,dfn[u],dfn[u]+siz[u]-1,1,n,-1),change(1,dfn[to],dfn[to]+siz[to]-1,1,n,-1);\n}\nint main(){\n\trd(n);int i,rt,m=rd(m);\n\tfor(i=1;i<n;i++){int u=rd(u),v=rd(v);edge[u].eb(v),edge[v].eb(u);}\n\twhile(m--){int u=rd(u),v=rd(v);vec[u].eb(v),vec[v].eb(u);}\n\tdfs1(1,0),build(rt,1,n),dfs2(1,0);for(i=1;i<=n;i++) pr(max(0,ans[i]-1)),sp;\n\treturn 0;\n}\n```",
        "postTime": 1649981047,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF258E"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u4f60\u6709\u4e00\u68f5\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6709\u6839\uff08\u6839\u4e3a $1$ \uff09\u6811\uff0c\u4f60\u8981\u5bf9\u5bf9\u5176\u8fdb\u884c $m$ \u6b21\u64cd\u4f5c\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u7ed9\u51fa\u4e24\u4e2a\u6570 $a_i, b_i$\uff0c\u4f60\u8981\u5f80\u4ee5 $a_i, b_i$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u6bcf\u4e2a\u70b9\u7684\u96c6\u5408\u91cc\u52a0\u5165\u6570 $i$\u3002\n\n\u95ee\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6709\u591a\u5c11\u4e2a\u70b9\uff08\u4e0d\u5305\u62ec\u81ea\u5df1\uff09\u7684\u96c6\u5408\u4e0e\u5176\u4ea4\u96c6\u975e\u7a7a\u3002\n\n$1 \\leq n, m \\leq 10^5$\n\n### \u9898\u76ee\u5206\u6790\n\n\u5c06\u6811\u6309\u7167 $\\texttt{DFS}$ \u5e8f\u904d\u5386\uff0c\u5219\u5b50\u6811\u5bf9\u5e94\u4e8e\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002\n\n\u73b0\u5728\u7684\u64cd\u4f5c\u5c31\u76f8\u5f53\u4e8e \u7ed9\u51fa\u4e24\u4e2a\u533a\u95f4 $[a,b],[l,r]$\uff0c\u8fd9\u4e24\u4e2a\u533a\u95f4\u5e76\u96c6\u5185\u7684\u6240\u6709\u8282\u70b9\u90fd\u53d8\u5f97\u4e24\u4e24\u5173\u8054\u3002 \n\n\u5173\u8054\u5173\u7cfb\u7684\u5b9a\u4e49\u4e2d\u6d89\u53ca\u4e24\u4e2a\u8282\u70b9\uff0c\u56e0\u6b64\u8003\u8651\u4e24\u7ef4\uff0c\u7b2c\u4e00\u7ef4\u8868\u793a\u5173\u8054\u5b9a\u4e49\u4e2d\u7684 \u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u7b2c\u4e8c\u7ef4\u8868\u793a\u5173\u8054\u5b9a\u4e49\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u4e24\u7ef4\u8003\u8651\u7684\u8303\u56f4\u90fd\u662f\u6811\u4e0a \u6240\u6709\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u64cd\u4f5c\u5c31\u76f8\u5f53\u4e8e\u8bf4\uff0c\u4f7f\u5f97\u7b2c\u4e00\u7ef4\u5f53\u4e2d\u7684\u6240\u6709\u7f16\u53f7$[a,b],[l,r]$ \u4e2d \u7684\u70b9\u4e0e\u7b2c\u4e8c\u7ef4\u4e2d\u6240\u6709\u7f16\u53f7\u4e3a $[a,b],[l,r]$ \u4e2d\u7684\u70b9\u4e92\u76f8\u5173\u8054\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u64cd\u4f5c\u62c6\u6210 $4$ \u4e2a\u77e9\u5f62\uff0c\u4f7f\u7528\u77e9\u5f62\u9762\u79ef\u5e76\u7684\u65b9\u5f0f\u7528\u626b\u63cf\u7ebf$+$\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\n\n### \u4ee3\u7801\n\n``` cpp\n#include <bits/stdc++.h>\n\n#define R register\n#define ll long long\n#define sum(a, b, mod) (((a) + (b)) % mod)\n#define meow(cat...) fprintf(stderr, cat)\n\nconst int MaxN = 2e5 + 10;\n\nstruct edge\n{\n    int next, to;\n} e[MaxN << 1];\n\nstruct node\n{\n    int l, r;\n    int sum, len;\n};\n\nstruct query\n{\n    int pos, l, r, c;\n} Q[MaxN << 2];\n\nint n, m, q, cnt, now, dfscnt, ans[MaxN];\nint head[MaxN], dfn[MaxN], siz[MaxN];\n\nstruct SegmentTree\n{\n    node t[MaxN << 2];\n    void build(int id, int l, int r)\n    {\n        t[id].l = l, t[id].r = r;\n        if (l == r) return;\n        int mid = (l + r) >> 1;\n        build(id << 1, l, mid);\n        build(id << 1 | 1, mid + 1, r);\n    }\n    void pushup(int id)\n    {\n        int l = t[id].l, r = t[id].r;\n        if (t[id].sum) t[id].len = r - l + 1;\n        else\n            t[id].len = t[id << 1].len + t[id << 1 | 1].len;\n    }\n    void modify(int id, int l, int r, int val)\n    {\n        if (t[id].r < l || r < t[id].l)\n            return;\n        if (l <= t[id].l && t[id].r <= r)\n        {\n            t[id].sum += val, pushup(id);\n            return;\n        }\n        modify(id << 1, l, r, val);\n        modify(id << 1 | 1, l, r, val), pushup(id);\n    }\n} T;\n\nint cmp(query a, query b) { return a.pos < b.pos; }\n\nvoid add(int a, int b, int l, int r)\n{\n    Q[++q] = (query){a, l, r, 1};\n    Q[++q] = (query){b + 1, l, r, -1};\n    // meow(\"$ %d %d %d %d\\n\", a, b, l, r);\n}\n\nvoid add_edge(int u, int v)\n{\n    ++cnt;\n    e[cnt].to = v;\n    e[cnt].next = head[u];\n    head[u] = cnt;\n}\n\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while(ch > '9' || ch < '0')\n        ch = getchar();\n    while(ch <= '9' && ch >= '0') \n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\n\n\nvoid dfs(int u, int fa)\n{\n    dfn[u] = ++dfscnt, siz[u] = 1;\n    for(int i = head[u]; i; i = e[i].next)\n    {\n        int v = e[i].to;\n        if(v == fa) continue;\n        dfs(v, u), siz[u] += siz[v];\n    }\n}\n\nsigned main()\n{   \n    n = read(), m = read(), T.build(1, 1, n);\n    for(int i = 1; i < n; i++)\n    {\n        int u = read(), v = read();\n        add_edge(u, v), add_edge(v, u);\n    }\n    dfs(1, 0);\n    for(int i = 1; i <= m; i++)\n    {\n        int a, b, l, r;\n        a = read(), b = dfn[a] + siz[a] - 1, a = dfn[a];\n        l = read(), r = dfn[l] + siz[l] - 1, l = dfn[l];\n        add(a, b, a, b), add(a, b, l, r);\n        add(l, r, a, b), add(l, r, l, r);\n    }\n    std::sort(Q + 1, Q + q + 1, cmp), now = 1;\n    for(int i = 1; i <= n; i++)\n    {\n        while(now <= q && Q[now].pos == i)\n            T.modify(1, Q[now].l, Q[now].r, Q[now].c), ++now;\n        ans[i] = T.t[1].len, ans[i] ? --ans[i] : 0;\n    }\n    for(int i = 1; i <= n; i++)\n        printf(\"%d \", ans[dfn[i]]);\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1630939836,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "CF258E Little Elephant and Tree"
    }
]