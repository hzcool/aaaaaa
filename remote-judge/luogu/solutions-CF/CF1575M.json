[
    {
        "content": "\u9996\u5148\u8dd1\u4e00\u904d\u5224\u6389\u8ddd\u79bb\u6700\u8fd1\u7684\u9ed1\u70b9\u548c\u767d\u70b9\u5728\u540c\u4e00\u884c\u7684\u60c5\u51b5\u3002\n\n\u626b\u63cf\u7ebf\u626b\u63cf\u884c\uff0c\u7ef4\u62a4\u6bcf\u884c\u4e0a\u65b9\u7684\u6240\u6709\u9ed1\u70b9\uff0c\u4e0b\u9762\u7684\u5012\u8fc7\u6765\u8dd1\u4e00\u904d\u662f\u4e00\u6837\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u6700\u9760\u4e0b\u7684\u4e00\u4e2a\u9ed1\u70b9\uff0c\u7b2c $j$  \u5217\u6700\u540e\u4e00\u4e2a\u9ed1\u70b9\u7684\u884c\u53f7\u8bb0\u4e3a $lst_j$ \u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u5f53\u524d\u884c\u4e0a\u7684\u6bcf\u4e00\u4e2a\u767d\u70b9\uff0c\u4e0a\u65b9\u6700\u8fd1\u7684\u9ed1\u70b9\u7684\u8ddd\u79bb\u662f $\\min_{k=1}^m(k-j)^2+(lst_k-i)^2$\u3002\n\n$(lst_k-i)^2$ \u662f\u4e2a\u5b9a\u503c\uff0c\u4e8e\u662f\u5f0f\u5b50\u7b80\u5316\u4e3a $\\min_{k=1}^mk^2-2jk+j^2+c$\u3002\n\n\u4e00\u770b\u5c31\u5f88\u659c\u7387\u4f18\u5316\uff0c\u76f4\u63a5\u5efa\u51fa\u4e0b\u51f8\u58f3\u8f6c\u79fb\u5c31\u597d\u4e86\uff0c\u7136\u540e\u5012\u7740\u8dd1\u4e00\u904d\u8f6c\u79fb\u4e0b\u65b9\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nint n,m,id[3001][3001],cnt,pre[3001],q[6001],head,tail;\nvector<int> dp,v[3001],qwq[3001];\nbool mp[3001][3001];\nlong long ans;\ninline double slope(int x,int y,int now)\n{\n    int x1=x,x2=y,c1=(pre[x]-now)*(pre[x]-now),c2=(pre[y]-now)*(pre[y]-now);\n    return (x1*x1-x2*x2+c1-c2)*1.0/(x1-x2);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    ++n,++m;\n    dp.push_back(0);\n    for(register int i=1;i<=n;++i)\n        for(register int j=1;j<=m;++j)\n        {\n            char c=getchar();\n            while(c!='0'&&c!='1')\n                c=getchar();\n            mp[i][j]=c^48;\n            if(mp[i][j])\n                v[i].push_back(j);\n            else\n            {\n                qwq[i].push_back(j);\n                id[i][j]=++cnt;\n                dp.push_back(0x3f3f3f3f);\n            }\n        }\n    for(register int i=1;i<=n;++i)\n    {\n        int lst=-1;\n        for(register int j=1;j<=m;++j)\n            if(mp[i][j])\n                lst=j;\n            else\n                if(~lst)\n                    dp[id[i][j]]=min(dp[id[i][j]],(j-lst)*(j-lst));\n        lst=-1;\n        for(register int j=m;j;--j)\n            if(mp[i][j])\n                lst=j;\n            else\n                if(~lst)\n                    dp[id[i][j]]=min(dp[id[i][j]],(lst-j)*(lst-j));\n    }\n    for(register int i=1;i<=m;++i)\n        pre[i]=-1;\n    for(register int i=2;i<=n;++i)\n    {\n    \tfor(register int j=0;j<(int)(v[i-1].size());++j)\n            pre[v[i-1][j]]=i-1;\n        head=1;\n        tail=0;\n        for(register int j=1;j<=m;++j)\n        {\n            if(pre[j]==-1)\n                continue;\n            while(head<tail&&slope(q[tail-1],q[tail],i)>slope(q[tail],j,i))\n                --tail;\n            q[++tail]=j;\n        }\n        if(head>tail)\n            continue;\n        for(register int j=0;j<(int)(qwq[i].size());++j)\n        {\n            int k=qwq[i][j];\n            while(head<tail&&slope(q[head],q[head+1],i)<(k<<1))\n                ++head;\n            dp[id[i][k]]=min(dp[id[i][k]],(q[head]-k)*(q[head]-k)+(pre[q[head]]-i)*(pre[q[head]]-i));\n        }\n    }\n    for(register int i=1;i<=m;++i)\n        pre[i]=-1;\n    for(register int i=n-1;i;--i)\n    {\n    \tfor(register int j=0;j<(int)(v[i+1].size());++j)\n            pre[v[i+1][j]]=i+1;\n        head=1;\n        tail=0;\n        for(register int j=1;j<=m;++j)\n        {\n            if(pre[j]==-1)\n                continue;\n            while(head<tail&&slope(q[tail-1],q[tail],i)>slope(q[tail],j,i))\n                --tail;\n            q[++tail]=j;\n        }\n        if(head>tail)\n            continue;\n        for(register int j=0;j<(int)(qwq[i].size());++j)\n        {\n            int k=qwq[i][j];\n            while(head<tail&&slope(q[head],q[head+1],i)<(k<<1))\n                ++head;\n            dp[id[i][k]]=min(dp[id[i][k]],(q[head]-k)*(q[head]-k)+(pre[q[head]]-i)*(pre[q[head]]-i));\n        }\n    }\n    for(register int i=1;i<=cnt;++i)\n        ans+=dp[i];\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1633310398,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1575M \u3010Managing Telephone Poles\u3011"
    },
    {
        "content": "~~\u770b\u7740\u659c\u7387\u4f18\u5316\u5206\u56db\u4e2a\u65b9\u5411\u8ba8\u8bba\u7684\u4ee3\u7801\u9677\u5165\u4e86\u6c89\u601d\u3002~~\n\n\u63d0\u4f9b\u4e00\u79cd\u597d\u5199\u4e14\u9ad8\u6548\u7684\u51b3\u7b56\u5355\u8c03\u6027 dp \u89e3\u6cd5\u3002\n\n\u5148\u611f\u6027\u8bc1\u4e00\u4e0b\u51b3\u7b56\u5355\u8c03\u6027\uff1a\u5982\u679c\u6709\u4e24\u4e2a\u70b9 $(x_1,y_1),(x_1,y_2)\\ (y_1<y_2)$ \u4e14 \u79bb $(x_1,y_1)$ \u6700\u8fd1\u7684\u70b9\u4e3a $(x_3,y_3)$\uff0c\u90a3\u4e48\u79bb $(x_1,y_2)$ \u6700\u8fd1\u7684\u70b9 $(x_4,y_4)$ \u4e00\u5b9a\u6ee1\u8db3 $y_3\\le y_4$\uff0c\u5426\u5219 $(x_1,y_1)$ \u9009\u62e9 $(x_4,y_4)$ \u4f1a\u66f4\u4f18\u3002\n\n\n\u663e\u7136\u53ef\u4ee5\u628a\u7b54\u6848\u62c6\u6210\u6a2a\u7eb5\u5750\u6807\u4e24\u79cd\u8d21\u732e\u5206\u5f00\u8003\u8651\uff0c\u4ee4 $a_{i,j}$ \u8868\u793a $(i,j)$ \u8fd9\u4e2a\u70b9\u4e0e\u5b83\u5728 $j$ \u8fd9\u5217\u4e0a\u6700\u8fd1\u7684\u70b9\u7684\u6b27\u5f0f\u8ddd\u79bb\u7684\u5e73\u65b9\uff0c\u90a3\u4e48\u5219\u6709\u8f6c\u79fb $f_{i,j}=\\min\\{a_{i,k}+(j-k)^2\\}$\uff0c\u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u884c\u8bc1\u660e\u8fd9\u4e2a\u5f0f\u5b50\u7684\u51b3\u7b56\u5355\u8c03\u6027\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm\\log m)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ri register int\ntypedef long long ll;\nconst int maxn=2010;\ntemplate<class T>inline bool ckmin(T &x,const T &y){return x>y?x=y,1:0;}\ntemplate<class T>inline bool ckmax(T &x,const T &y){return x<y?x=y,1:0;}\ntemplate<class T>inline void clear(T *arr,int siz,int val=0){memset(arr,val,sizeof(T)*(siz+1));}\nll a[maxn][maxn],f[maxn],ans;\nint m,n;\nchar s[maxn][maxn];\nvoid solve(int l,int r,int L,int R,int k){\n\tif(l>r||L>R)return;\n\tri mid=l+r>>1,pos=0;\n\tll tmp=1145141919810ll;\n\tfor(ri i=L;i<=R;++i){\n\t\tll val=a[k][i]+(mid-i)*(mid-i);\n\t\tif(val<tmp)pos=i,tmp=val;\n\t}\n\tf[mid]=tmp;\n\tsolve(l,mid-1,L,pos,k);\n\tsolve(mid+1,r,pos,R,k);\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(ri i=0;i<=n;++i){\n\t\tscanf(\"%s\",s[i]);\n\t\tfor(ri j=0;j<=m;++j)s[i][j]^=48;\n\t}\n\tmemset(a,0x3f,sizeof a);\n\tfor(ri i=0;i<=m;++i){\n\t\tll lst=-114514;\n\t\tfor(ri j=0;j<=n;++j){\n\t\t\tif(s[j][i])lst=j;\n\t\t\tckmin(a[j][i],(lst-j)*(lst-j));\n\t\t}\n\t\tlst=114514;\n\t\tfor(ri j=n;~j;--j){\n\t\t\tif(s[j][i])lst=j;\n\t\t\tckmin(a[j][i],(lst-j)*(lst-j));\n\t\t}\n\t}\n\tfor(ri i=0;i<=n;++i){\n\t\tmemset(f,0x3f,sizeof f);\n\t\tsolve(0,m,0,m,i);\n\t\tfor(ri j=0;j<=m;++j)ans+=f[j];\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1637128457,
        "uid": 67942,
        "name": "meyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1575M \u3010Managing Telephone Poles\u3011"
    }
]