[
    {
        "content": "$\\text{Game}$ \u7c7b\u9898\u76ee\uff0c\u6807\u51c6\u505a\u6cd5\u5148\u624b\u73a9\u6837\u4f8b\uff0c\u518d\u8003\u8651\u6781\u9650\u60c5\u51b5\u3002\n\n\u663e\u7136\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u7684\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c $\\text{Alice}$ \u65e0\u6cd5\u6536\u7f29 $\\text{Bob}$ \u5230\u8fbe\u7684\u70b9\uff0c\u5219 $\\text{Bob}$ \u4e00\u5b9a\u8d62\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u65e0\u8bba $\\text{Alice}$ \u91c7\u53d6\u4ec0\u4e48\u7b56\u7565\uff0c$\\text{Bob}$ \u90fd\u603b\u662f\u80fd\u8df3\u51fa $\\text{Alice}$ \u8986\u76d6\u7684\u8303\u56f4\uff0c\u5219 $\\text{Bob}$ \u4e00\u5b9a\u8d62\u3002\u53cd\u8fc7\u6765\uff0c\u5c31\u662f $\\text{Bob}$ \u65e0\u6cd5\u8df3\u51fa $\\text{Alice}$ \u8986\u76d6\u7684\u8303\u56f4\u65f6\uff0c$\\text{Bob}$ \u4e00\u5b9a\u8f93\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u8003\u8651\u6781\u9650\u60c5\u51b5\u3002\u81ea\u7136\u662f $\\text{Alice}$ \u518d\u8d70\u4e00\u6b21\u5c31\u80fd\u591f\u5230\u8fbe $\\text{Bob}$ \u6240\u5728\u7684\u70b9\u3002\u6b64\u65f6 $\\text{Bob}$ \u65e0\u6cd5\u8df3\u51fa $\\text{Alice}$ \u8986\u76d6\u7684\u8303\u56f4\uff0c$\\text{Bob}$ \u5c31\u4e00\u5b9a\u8f93\u3002\u4e8e\u662f\u53ea\u9700\u6ee1\u8db3\u4e0b\u9762\u4e09\u4e2a\u6761\u4ef6\u4e4b\u4e00\uff0c$\\text{Alice}$ \u4e00\u5b9a\u8d62\u3002\n\n- $2\\times da\\geq \\min(db,len)$\uff0c\u4e0e\u76f4\u5f84 $\\text{len}$ \u53d6 $\\text{min}$ \u662f\u56e0\u4e3a\u76f4\u5f84\u662f\u6811\u4e0a\u4e24\u70b9\u95f4\u7684\u6700\u8fdc\u8ddd\u79bb\uff0c\u6240\u4ee5\u6700\u8fdc $\\text{Bob}$ \u4e00\u6b21\u6700\u8fdc\u53ea\u80fd\u8d70 $\\min(db,len)$\u3002 \n- $\\mathrm{dis(a,b)}\\leq da$\uff0c\u5373\u5f00\u59cb\u65f6 $\\text{Alice}$ \u8d70\u4e00\u6b65\u5c31\u53ef\u4ee5\u5230\u8fbe\u3002\n\n```cpp\n#include<cstdio>\nint cnt=0,pos=0;\nint dep[100005];\nint h[100005],to[200005],ver[200005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y) {to[++cnt]=y;ver[cnt]=h[x];h[x]=cnt;}\ninline void dfs(int x,int fa) {\n\tif(dep[pos]<dep[x]) pos=x;\n\tfor(register int i=h[x];i;i=ver[i]) {\n\t\tint y=to[i];\n\t\tif(y==fa) continue; \n\t\tdep[y]=dep[x]+1;\n\t\tdfs(y,x);\n\t}\n}\nint main() {\n\tint T=read();\n\twhile(T--) {\n\t\tint n=read(),a=read(),b=read(),da=read(),db=read();\n\t\tfor(register int i=1;i<=n;++i) h[i]=0; cnt=0;\n\t\tfor(register int i=1;i<n;++i) {\n\t\t\tint x=read(),y=read();\n\t\t\tadd(x,y); add(y,x);\n\t\t}\n\t\tpos=1; dep[1]=0; dfs(1,-1); dep[pos]=0; dfs(pos,-1);\n\t\tif(2*da>=db||2*da>=dep[pos]) printf(\"Alice\\n\");\n\t\telse {\n\t\t\tdep[a]=0; dfs(a,-1);\n\t\t\tif(dep[b]<=da) printf(\"Alice\\n\");\n\t\t\telse printf(\"Bob\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605613263,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1404B \u3010Tree Tag\u3011"
    },
    {
        "content": "\u53ea\u6709\u4e09\u79cd\u60c5\u51b5 Alice \u8d62\n\n1. $\\text{dis}(a,b)\\le da$\n2. $2\\times da\\ge db$ \u6b64\u65f6\u53ea\u8981\u4e00\u6b65\u6b65\u903c\u8fd1\u5373\u53ef\n3. \u6811\u7684\u76f4\u5f84 $\\le2\\times da$ \u6b64\u65f6\u53ea\u8981\u5360\u636e\u76f4\u5f84\u4e2d\u70b9\u5373\u53ef\n\n\u4ee5\u4e0b\u8bc1\u660e\u5269\u4e0b\u60c5\u51b5\u5fc5\u5b9a\u53ef\u4ee5\uff08\u8bbe $b$ \u4e3a\u6839\uff0c\u7279\u6b8a\u94fe\u6307\u7684\u662f\u957f\u5ea6\u5927\u4e8e $2\\times da$ \u7684\u94fe\uff09\n\n1. \u82e5\u7279\u6b8a\u94fe\u67d0\u4e00\u7aef\u70b9\u5230 $b$ \u8def\u5f84\u4e0a\uff08\u4e0d\u542b $b$\uff09 \u7684\u4efb\u610f\u8282\u70b9\u4e0d\u662f $a$ \u7684\u7956\u5148\n\n\u90a3\u4e48\u76f4\u63a5\u5bf9\u7740\u8fd9\u4e00\u7aef\u70b9\u8df3\u7136\u540e\u7279\u6b8a\u94fe\u4e0a\u53cd\u590d\u6a2a\u8df3\u5373\u53ef\n\n2. \u82e5\u7279\u6b8a\u94fe\u5728 $a$ \u5b50\u6811\u5185\n\n\u5219 $a$ \u5f80\u5b50\u6811\u5185\u6700\u6df1\u5904 $d$ \u8d70\u81f3\u5c11\u80fd\u8d70 $da+1$ \u6b65\uff0c\u52a0\u4e0a $a,b$ \u8ddd\u79bb\u81f3\u5c11\u4e3a $da+1$\uff0c\u6545 $b$ \u5230 $d$ \u7684\u94fe\u4e00\u5b9a\u4e3a\u7279\u6b8a\u94fe\u4e14\u4e3a 1. \u60c5\u51b5\uff0c\u6210\u7acb\n\n3. \u82e5\u7279\u6b8a\u94fe\u4e00\u7aef\u70b9\u5230 $b$ \u8def\u5f84\u4e0d\u7ecf\u8fc7 $a$ \u4e14\u9664 $b$ \u5916\u8fd8\u6709\u4e00\u4e2a\u70b9 $c$ \u4e3a $a$ \u7956\u5148\n\n\u82e5 $\\text{dis(a,c)}>da$ \uff0c\u5219\u663e\u7136\u5b58\u5728 1. \u60c5\u51b5\u94fe\uff0c\u5426\u5219\u76f4\u63a5\u5411 $c$ \u6cbf\u94fe\uff08\u975e $a$ \u65b9\u5411\uff09\u8d70\u663e\u7136 Alice \u8ffd\u4e0d\u4e0a\uff0c\u8d70\u5230\u5e95\u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u8fd9\u6761\u7279\u6b8a\u94fe\u4e0a\u53cd\u590d\u6a2a\u8df3\u4e86\n```\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+2,M=2e5+2;\nint lj[M],nxt[M],fir[N],dep[N],md[N],f[N];\nint n,c,fh,i,t,a,b,da,db,bs,x,y;\nbool ed[N];\ninline void add()\n{\n\tlj[++bs]=y;\n\tnxt[bs]=fir[x];\n\tfir[x]=bs;\n\tlj[++bs]=x;\n\tnxt[bs]=fir[y];\n\tfir[y]=bs;\n}\ninline void read(int &x)\n{\n\tc=getchar();fh=1;\n\twhile ((c<48)||(c>57))\n\t{\n\t\tif (c=='-') {c=getchar();fh=-1;break;}\n\t\tc=getchar();\n\t}\n\tx=c^48;c=getchar();\n\twhile ((c>=48)&&(c<=57))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n\tx*=fh;\n}\nvoid dfs(int x)\n{\n\ted[x]=1;md[x]=dep[x];\n\tfor (int i=fir[x];i;i=nxt[i]) if (!ed[lj[i]])\n\t{\n\t\tdep[lj[i]]=dep[x]+1;\n\t\tdfs(lj[i]);\n\t\tmd[x]=max(md[x],md[lj[i]]);\n\t}\n}\nvoid dfsf(int x)\n{\n\ted[x]=1;md[x]=dep[x];\n\tfor (int i=fir[x];i;i=nxt[i]) if (!ed[lj[i]])\n\t{\n\t\tdep[lj[i]]=dep[x]+1;\n\t\tf[lj[i]]=x;\n\t\tdfsf(lj[i]);\n\t\tmd[x]=max(md[x],md[lj[i]]);\n\t}\n}\nint main()\n{\n\tread(t);\n\twhile (t--)\n\t{\n\t\tmemset(fir+1,bs=0,n<<2);\n\t\tmemset(f+1,0,n<<2);\n\t\tmemset(dep+1,0,n<<2);\n\t\tmemset(md+1,0,n<<2);\n\t\tmemset(ed+1,0,n*sizeof(bool));\n\t\tread(n);read(a);read(b);read(da);read(db);\n\t\tfor (i=1;i<n;i++)\n\t\t{\n\t\t\tread(x);read(y);add();\n\t\t}\n\t\tif (da+da>=db) {puts(\"Alice\");continue;}\n\t\tdep[b]=1;dfs(b);if (dep[a]-1<=da) {puts(\"Alice\");continue;}\n\t\tfor (i=1;i<=n;i++) if (md[b]==dep[i]) break;\n\t\tmemset(ed+1,0,n*sizeof(bool));\n\t\tmemset(dep+1,0,n<<2);\n\t\tmemset(md+1,0,n<<2);\n\t\tdep[i]=1;\n\t\tdfs(i);if (md[i]-1<=da+da) {puts(\"Alice\");continue;}\n\t\tputs(\"Bob\");\n\t}\n}\n```",
        "postTime": 1599656270,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1404B \u3010Tree Tag\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0bAlice\u53ef\u4ee5\u83b7\u80dc.\n\n\u5982\u679c$dis_{a,b} \\leq da$\uff0c\u5219Alice\u53ef\u4ee5\u4e00\u6b65\u5c31\u8ffd\u4e0aBob.\n\n\u5982\u679cAlice\u5904\u5728\u4e00\u4e2a\u80fd\u8986\u76d6\u6574\u68f5\u6811\u7684\u70b9\uff0c\u5373$2da+1 \\geq$\u6811\u7684\u76f4\u5f84\uff0c\u90a3\u4e48Bob\u4e5f\u65e0\u5904\u53ef\u8d70\u4e86,Alice\u83b7\u80dc.\n\n\u5176\u5b83\u60c5\u51b5\u4e0b\uff0cAlice\u4f1a\u4e00\u6b65\u4e00\u6b65\u903c\u8fd1Bob\uff0c\u5e76\u4e00\u5b9a\u80fd\u628aBob\u903c\u8fd1\u67d0\u68f5\u5b50\u6811.\n\n\u5982\u679c\u5f53\u524dAlice\u5360\u636e\u4e00\u4e2a\u70b9\uff0c\u4f7fBob\u65e0\u8bba\u600e\u4e48\u8d70\u90fd\u8fd8\u5728Alice\u7684\u63a7\u5236\u8303\u56f4\u5185\uff0c\u90a3\u4e48Alice\u5fc5\u80dc.\n\n\u6b64\u65f6\u6761\u4ef6\u5373\u4e3a$2da \\geq db$.\n\n\u9664\u4ee5\u4e0a\u6761\u4ef6\u5916\uff0cBob\u83b7\u80dc\uff0c\u56e0\u4e3a\u4ed6\u53ef\u4ee5\u518dAlice\u9760\u8fd1\u4ed6\u7684\u65f6\u5019\u4e0d\u65ad\u53cd\u5411\u8df3\u8d70.\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n, a, b, da, db, dis[100011];\nvector <int> e[100011];\nvoid dfs(int w, int fa) {\n\tdis[w] = dis[fa] + 1;\n\tfor(int i = 0; i < (int)e[w].size(); i++) {\n\t\tint ver = e[w][i];\n\t\tif(ver != fa) dfs(ver, w);\n\t}\n}\nvoid solve() {\n\tscanf(\"%d%d%d%d%d\", &n, &a, &b, &da, &db);\n\tfor(int i = 1; i <= n; i++) e[i].clear();\n\tfor(int i = 1; i < n; i++) {\n\t\tint u, v; scanf(\"%d%d\", &u, &v);\n\t\te[u].push_back(v); e[v].push_back(u);\n\t}\n\tdfs(1, 0); int maxw = 0;\n\tfor(int i = 1; i <= n; i++) \n\t\tif(dis[maxw] < dis[i]) maxw = i;\n\tdfs(maxw, 0);\n\tmaxw = 0;\n\tfor(int i = 1; i <= n; i++) \n\t\tif(dis[maxw] < dis[i]) maxw = i;\n\tif(dis[maxw] <= da*2+1) {\n\t\tprintf(\"Alice\\n\");\n\t\treturn;\n\t}\n\tdfs(a, 0);\n\tif(dis[b] <= da+1) {\n\t\tprintf(\"Alice\\n\");\n\t\treturn;\n\t}\n\tif(2*da >= db) {\n\t\tprintf(\"Alice\\n\");\n\t\treturn;\n\t}\n\tprintf(\"Bob\\n\");\n}\nint main() {\n\tint t; scanf(\"%d\", &t);\n\twhile(t--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1605857091,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1404B \u3010Tree Tag\u3011"
    },
    {
        "content": "# [Tree Tag](https://www.luogu.com.cn/problem/CF1404B)\n## \u9898\u610f\nAlice \u548c Bob\uff08\u4ee5\u4e0b\u7b80\u79f0 A\uff0cB\uff09\u5206\u522b\u5728\u6811\u7684\u4e24\u4e2a\u70b9\u4e0a\uff0c\u6bcf\u4e24\u4e2a\u70b9\u95f4\u7684\u8ddd\u79bb\u4e3a 1\u3002A \u548c B \u4e00\u6b65\u5206\u522b\u80fd\u8d70 $da,db$ \u7684\u8ddd\u79bb\u3002 A \u5148\u8d70\uff0c\u6c42 A \u80fd\u5426\u8ffd\u4e0a B\u3002\n## \u601d\u8def\n\u8003\u8651 A \u5982\u4f55\u8ffd\u4e0a B \u7684\u60c5\u51b5\uff0c\u6709\u4e9b\u60c5\u51b5 B \u662f\u5fc5\u8d25\u7684\uff1a\n\n1. $db\\le2\\times da$\u3002B \u4e00\u76f4\u8dd1\uff0c\u88ab\u903c\u8fdb\u6b7b\u8def\u540e\u518d\u6298\u8fd4\uff0c\u8de8\u8fc7 A\u3002\u90a3\u4e48\u6298\u8fd4\u7684\u65f6\u5019 B \u5c31\u8981\u8de8\u8fc7\u5927\u4e8e $2\\times da$ \u7684\u8ddd\u79bb\uff0c\u5426\u5219\u4e0b\u4e00\u6b65\u5c31\u4f1a\u88ab A \u8ffd\u4e0a\u3002\u6240\u4ee5\u5f53 $db\\le2\\times da$ \u65f6\uff0cB \u4e00\u5b9a\u80fd\u88ab\u8ffd\u4e0a\u3002\n2. $2\\times da\\ge d$\uff0c\u5176\u4e2d $d$ \u4e3a\u6811\u7684\u76f4\u5f84\u3002\u56e0\u4e3a\u76f4\u5f84\u662f\u6811\u4e0a\u6700\u957f\u7684\u7b80\u5355\u8def\u5f84\uff0c\u6240\u4ee5 A \u53ea\u9700\u7ad9\u5728\u76f4\u5f84\u7684\u4e2d\u70b9\u4e0a\uff0c\u5c31\u80fd\u8986\u76d6\u5230\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u3002B \u65e0\u5904\u53ef\u9003\u3002\n3. \u5f00\u59cb\u65f6 A \u548c B \u95f4\u7684\u8ddd\u79bb\u5c0f\u4e8e $da$\uff0c\u8fd9\u6837 A \u7b2c\u4e00\u6b65\u5c31\u80fd\u8ffd\u4e0a B\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u9664\u4e86\u4ee5\u4e0a 3 \u79cd\u60c5\u51b5\uff0c\u5176\u5b83\u60c5\u51b5 A \u90fd\u8ffd\u4e0d\u4e0a B\uff0c \u6240\u4ee5\u53ea\u9700\u8981\u628a 3 \u79cd\u60c5\u51b5\u90fd\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6811\u7684\u76f4\u5f84\u7528\u4e24\u904d dfs \u6c42\u51fa\uff0cA \u548c B \u7684\u521d\u59cb\u8ddd\u79bb\u4e00\u904d dfs \u6c42\u51fa\u5373\u53ef\u3002\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint t,n,as,bs,da,db,maxx,head[100005],tot,dis[100005];\nstruct Edge\n{\n    int next,to;\n}e[200005];\nvoid add_edge(int u,int v)\n{\n    e[++tot].next=head[u];\n    e[tot].to=v;\n    head[u]=tot;\n}\nvoid dfs(int u,int fa)\n{\n    if(dis[u]>dis[maxx])\n        maxx=u;\n\tfor(int i=head[u];i;i=e[i].next)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v==fa)\n\t\t\tcontinue;\n        dis[v]=dis[u]+1;\n\t\tdfs(v,u);\n\t}\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d%d%d%d\",&n,&as,&bs,&da,&db);\n        tot=0;\n\t\tmemset(head,0,sizeof head);\n        memset(dis,0,sizeof dis);\n        for(int i=1;i<n;i++)\n        {\n            int x,y;\n            scanf(\"%d%d\",&x,&y);\n            add_edge(x,y);\n            add_edge(y,x);\n        }\n        dfs(as,0);\n        int len=dis[bs];\n        dis[maxx]=0;\n        dfs(maxx,0);\n        if(len<=da||db<=2*da||dis[maxx]<=2*da)//\u5224\u65ad\n            printf(\"Alice\\n\");\n        else\n            printf(\"Bob\\n\");\n    }\n}\n```\n\u5e0c\u671b\u672c\u7bc7\u9898\u89e3\u53ef\u4ee5\u5e2e\u5230\u5927\u5bb6\uff01\uff01\uff01",
        "postTime": 1683857328,
        "uid": 631576,
        "name": "cyz2010",
        "ccfLevel": 0,
        "title": "CF1404B\u9898\u89e3"
    },
    {
        "content": "## CF1405D \u9898\u89e3\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4f60\u4e00\u68f5\u6811\uff0c $Alice$ \u548c $Bob$ \u521d\u59cb\u5728\u8fd9\u68f5\u6811\u4e0a\u7684\u8282\u70b9 $a$, $b$\u3002\n\n\u4ed6\u4eec\u53ef\u4ee5\u5728\u6811\u4e0a\u8f6e\u6d41\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $da$ \u548c $db$ \u7684\u8def\u5f84\u3002\n\n\u8def\u5f84\u7684\u5b9a\u4e49\u662f $2$ \u70b9\u4e4b\u95f4\u7b80\u5355\u8def\u5f84\u7684\u8fb9\u6570\u3002\n\n\u5982\u679c $Alice$ \u8ffd\u5230\u4e86 $Bob$ \uff0c\u90a3\u4e48\u5219\u7b97 $Alice$ \u8d62\uff0c\u5426\u5219\u7b97 $Bob$ \u8d62\u3002\n\n### \u9898\u89e3\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u662f\u4e00\u6761\u94fe\uff0c\u90a3\u4e48 $Alice$ \u4e00\u5b9a\u4f1a\u4e0d\u505c\u7684\u628a $Bob$ \u5f80\u9996\u5c3e\u6bd4\u903c\u3002\n\n\u53ea\u6709\u5f53 $Bob$ \u53ef\u4ee5\u8de8\u8d8a $Alice$ \u4e0b\u4e00\u6b65\u6240\u80fd\u8986\u76d6\u7684\u8303\u56f4\u7684\u65f6\u5019\u4ed6\u624d\u53ef\u80fd\u9003\u51fa $Alcie$ \u7684\u9b54\u722a\n\n\u5982\u8fd9\u5f20\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/x8welagd.png)\n\n\u84dd\u8272\u7684\u662f $Alice$ \uff0c\u7ea2\u8272\u7684\u662f $Bob$ \u53ea\u6709 $da > 2 * db$ \u7684\u65f6\u5019\u4ed6\u624d\u53ef\u4ee5\u9003\u51fa\u9b54\u722a\u3002\n\n\u4f46\u662f\u6709\u53e6\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u5982\u679c $2 * db > len$ \u90a3\u4e48 $Alice$ \u53ef\u4ee5\u6bcf\u6b21\u90fd\u5230\u8fbe\u94fe\u4e0a\u4efb\u610f\u4e00\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u642c\u56de\u6811\u4e0a\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 $da$ \u4e0e $2 * db$ \u7684\u5173\u7cfb\u3002\n\n\u7136\u540e\u6700\u540e\u8003\u8651\u7684\u94fe\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u53ea\u8981\u4ee3\u5165\u6210\u6811\u7684\u76f4\u5f84\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```\n#include <iostream>\n#include <string.h>\nusing namespace std;\nconst int maxn = 100010;\nint T, n, a, RT, b, da, db, cnt, x, y, head[maxn];\nstruct node {\n    int to, nxt, dep;\n} e[maxn << 1];\nvoid add(int x, int y) {\n    e[++ cnt] = (node) {y, head[x], 0};\n    head[x] = cnt;\n}\nvoid Dfs(int x, int fa) {\n    e[x].dep = e[fa].dep + 1;\n    if(e[x].dep > e[RT].dep) {\n        RT = x;\n    }\n    for(int i = head[x]; ~i ; i = e[i].nxt) {\n        int v = e[i].to;\n        if(v != fa) {\n            Dfs(v, x);\n        }\n    }\n}\nint main() {\n    // freopen(\"a.in\", \"r\", stdin);\n    // freopen(\"a.out\", \"w\", stdout);\n    cin >> T;\n    while(T --) {\n        cin >> n >> a >> b >> da >> db;\n        memset(head, -1, sizeof(head));\n        for(int i = 1; i < n; ++ i) {\n            cin >> x >> y;\n            add(x, y), add(y, x);\n        }\n        if(db <= (da << 1)) {\n            puts(\"Alice\");\n            continue;\n        }\n        RT = a;\n        Dfs(a, 0);\n        if(e[b].dep <= da + 1) {\n            puts(\"Alice\");\n            continue;\n        }\n        Dfs(RT, 0);\n        if(e[RT].dep - 1 <= (da << 1)) {\n            puts(\"Alice\");\n            continue;\n        }\n        else {\n            puts(\"Bob\");\n            continue;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1599628291,
        "uid": 155767,
        "name": "Tarsal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1404B \u3010Tree Tag\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1404B)\n\n## \u601d\u7ef4\u5386\u7a0b\n\n~~\u4ee5\u4e0b\u662f\u849f\u84bb\u5728\u505a\u9898\u65f6\u7684\u5185\u5fc3\u60f3\u6cd5\uff0c\u53ef\u80fd\u5bf9\u4e8e\u60a8\u4e0b\u4e00\u6b21\u505a\u8fd9\u79cd\u7684\u7c7b\u4f3c\u9898\u601d\u8003\u6709\u5e2e\u52a9\u3002~~\n\n\u9996\u5148\u5206\u6790\u8ddd\u79bb\u5373 $a$ \u548c $b$ \u7684\u4e0d\u540c\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u8bbe\u8ddd\u79bb\u4e3a $dis$\uff0c\u5f53 $dis$ \u6781\u5927\u65f6\u663e\u7136\u65e0\u5f71\u54cd\uff08\u6bd5\u7adf\u6ca1\u6709\u5a01\u80c1 Bob \u518d\u8dd1\u4e5f\u4e0d\u4f1a\u6709\u5565\u7528\uff09\uff0c\u8003\u8651\u8f83\u8fd1\u60c5\u51b5\u3002\n\n- \u5f53 $dis \\le da$ \u65f6\uff0c\u8fd9\u91cc\u76f4\u63a5\u4e00\u6b65\u5c31\u80fd\u8ffd\u5230\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651 $da$ \u548c $db$ \u7684\u5f71\u54cd\u3002\n\n- \u5f53 $db \\le 2da$ \u65f6\uff0c\u8003\u8651\u903c\u8fd1\u6cd5\uff0c\u5373 Alice \u628a Bob \u4e00\u6b65\u4e00\u6b65\u903c\u5411\u5b50\u6811\uff0c\u7531\u4e8e\u6ee1\u8db3\u6761\u4ef6\u6240\u4ee5 Bob \u4e0d\u53ef\u80fd\u76f4\u63a5\u4ece $dis>da$ \u7684\u5b50\u6811\u91cc\u76f4\u63a5\u8df3\u5230\u4ecd\u65e7\u6ee1\u8db3 $dis>da$ \u7684\u7236\u4eb2\u8282\u70b9\uff0c\u5373\u4e0d\u53ef\u80fd\u4ece\u4e00\u4e2a\u5b89\u5168\u4f46\u5fc5\u5b9a\u4f1a\u88ab\u903c\u8feb\u5230 $dis \\le da$ \u7684\u4f4d\u7f6e\u8df3\u5230\u53e6\u4e00\u4e2a~~\u6709\u66f4\u5927\u53d1\u5c55\u7a7a\u95f4~~\u7684\u5b89\u5168\u4f4d\u7f6e\u3002\n\n\u6b64\u65f6 $da$ \u8f83\u5927\u7684\u60c5\u51b5\u8003\u8651\u8fc7\u4e86\uff0c\u8f83\u5c0f\u65f6\u6613\u8bc1\u66f4\u96be\u6ee1\u8db3\u60c5\u51b5\uff0c\u800c\u4e14\u5bf9\u4e8e $dis$ \u7684\u5f71\u54cd\u60c5\u51b5\u4e5f\u8003\u8651\u8fc7\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e $db$ \u6211\u4eec\u6b64\u65f6\u53ea\u8003\u8651\u4e86\u5176\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u5e76\u672a\u8003\u8651\u8f83\u5927\u65f6\u3002\n\n\u4f46\u662f $db$ \u8f83\u5927\u7684\u8bdd\u5c31\u5f88\u96be\u4fdd\u8bc1\u8ffd\u4e0a\uff08\u6bd5\u7adf\u53ef\u4ee5\u7528\u7b2c\u4e8c\u6761\u8bf4\u7684\u4e0d\u80fd\u6ee1\u8db3\u7684\u7b56\u7565\u4e00\u76f4\u8dd1\u8def\uff09\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u4e00\u76f4\u88ab\u5ffd\u7565\u7684\u4e1c\u897f\uff0c\u90a3\u5c31\u662f\u6811\u672c\u8eab\u7684\u6027\u8d28\u3002\n\n**\u90a3\u4e48\uff0c\u8fd9\u53c8\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\u5462\uff1f**\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u5176\u5b9e\u662f\u5bf9 $db$ \u89c4\u5b9a\u4e86\u4e00\u4e2a\u4e0a\u754c\uff0c\u6bd5\u7adf\u4f60\u4e0d\u53ef\u80fd\u4e00\u4e0b\u8df3\u51fa\u8fd9\u9897\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u77e5\u4e86\u8fd9\u9053\u9898\u7684\u6700\u540e\u4e00\u5757\u62fc\u56fe\uff0c\u5373\u8bbe\u6811\u7684\u76f4\u5f84\u4e3a $len$\uff0c\u6709 $truedb \\le len$\uff0c\u8fd9\u91cc\u7684 $truedb$ \u8868\u793a\u7684\u662f\u5bf9\u4e8e\u8fd9\u9897\u6811 Bob \u5b9e\u9645\u4e0a\u80fd\u8df3\u8dc3\u8ddd\u79bb\u7684\u4e0a\u754c\uff0c\u6b64\u65f6\u518d\u56de\u671b\u7b2c\u4e8c\u6761\u6027\u8d28\uff0c\u53d1\u73b0\u4e00\u5207\u90fd\u4e32\u8d77\u6765\u4e86\u3002\n\n- \u5f53 $len \\le 2da$ \u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e8c\u6761\u7684\u7b56\u7565\u6765\u8ffd\u4e0a\u3002\n\n\u6b64\u65f6\u6211\u4eec\u5bf9\u4e8e\u6240\u6709\u53ef\u4ee5\u7528\u4e0a\u7684\u6027\u8d28\u90fd\u7528\u8fc7\u4e86\uff0c\u6240\u4ee5\uff0c\u5b8c\u7ed3\u6492\u82b1\u3002\n\n~~\u672c\u4eba\u62d9\u89c1\uff0c\u5982\u6709\u5dee\u9519\uff0c\u8bf7\u8d50\u6559\u3002~~\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define void inline void\nusing namespace std;\nconst ll N=1e5+10;\nll T,n,a,b,da,db,root=1;\nll cnt,h[N],nxt[N<<1],to[N<<1],depth[N];\ninline ll read(){\n\tchar ch=getchar();ll res=0,f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') res=res*10+ch-'0',ch=getchar();\n\treturn res*f;\n}\nvoid add(ll x,ll y){\n\tnxt[++cnt]=h[x],to[cnt]=y,h[x]=cnt;\n}\nvoid dfs(ll x,ll fa,ll dep){\n\tdepth[x]=dep;\n\tif(depth[x]>depth[root]) root=x;\n\tfor(ll i=h[x];i;i=nxt[i]){\n\t\tll v=to[i];\n\t\tif(v==fa) continue;\n\t\tdfs(v,x,dep+1);\n\t}\n}\nint main(){\n\tT=read();\n\twhile(T--){\n\t\tn=read(),a=read(),b=read(),da=read(),db=read(),cnt=0,root=1;\n\t\tfor(ll i=1;i<=n;i++) h[i]=0;\n\t\tfor(ll i=1;i<n;i++){\n\t\t\tll X=read(),Y=read();\n\t\t\tadd(X,Y),add(Y,X);\n\t\t}\n\t\tdfs(1,0,1),dfs(root,0,1);//\u5bf9\u4e8e\u8fd9\u79cd\u4e0d\u8981\u6c42\u590d\u6742\u5ea6\u7684\u9898\uff0c\u76f4\u63a5\u4e24\u904d dfs \u662f\u975e\u5e38\u65b9\u4fbf\u989d\u7684\n\t\tif(2*da>=db||2*da>=depth[root]-1){printf(\"Alice\\n\");continue;}\n\t\tdfs(a,0,1);\n\t\tif(da>=depth[b]-1){printf(\"Alice\\n\");continue;}\n\t\tprintf(\"Bob\\n\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1661514132,
        "uid": 365166,
        "name": "\u795e\u5149qwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1404B Tree Tag"
    },
    {
        "content": "\u5b8c\u5168\u4e0d\u4f1a\u535a\u5f08\u8bba\uff0cvp \u7684\u65f6\u5019\u60f3\u4e86 40min /kk\n\n\u4ece Alice \u7684\u89d2\u5ea6\u8003\u8651\uff0c\u5982\u4f55\u628a Bob \u903c\u5230\u6b7b\u89d2\uff1f\n\n\u663e\u7136 Alice \u4e0d\u5e0c\u671b Bob \u76f4\u63a5\u8de8\u8fc7\u81ea\u5df1\u8dd1\u5230\u5916\u9762\uff0c\u5f88\u5bb9\u6613\u5f97\u5230\u7684\u7ed3\u8bba\u662f Alice \u4f1a\u5c1d\u8bd5\u5728\u5c3d\u91cf\u8fdc\u7684\u5730\u65b9\u5a01\u80c1\u5403\u6389 Bob\u3002\n\n\u90a3\u4e48 Alice \u7684\u7b56\u7565\u786e\u5b9a\u4e86\uff0c\u5c31\u53ef\u4ee5\u5206\u6790 Bob \u4ec0\u4e48\u65f6\u5019\u80fd\u8d62\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u81ea\u5df1\u7ffb\u4e0d\u6389 Alice\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u8f93\u3002\u5982\u679c\u80fd\u7ffb\u6389 Alice\uff1a\n\n- \u5982\u679c Alice \u7b2c\u4e00\u6b65\u5c31\u80fd\u5403\u6389\u81ea\u5df1\uff0c\u90a3\u4e48\u4e00\u5b9a\u8f93\uff1b\n- \u5982\u679c Alice \u80fd\u591f\u63a7\u5236\u7684\u534a\u5f84\u8fbe\u5230\u6811\u76f4\u5f84\u7684\u4e00\u534a\uff0c\u90a3\u4e48 Alice \u4e00\u5b9a\u6709\u4e00\u4e2a\u4f4d\u7f6e\u80fd\u591f\u63a7\u5236\u6574\u4e2a\u6811\uff0c\u4e5f\u4e00\u5b9a\u8f93\u3002\n- \u5176\u4f59\u60c5\u51b5\u4e0b\uff0cBob \u5904\u5728 Alice \u88ab\u63a7\u5236\u7684\u533a\u57df\u5185\u65f6\u4e00\u5b9a\u53ef\u4ee5\u79fb\u52a8\u5230\u4e00\u4e2a\u6ca1\u6709\u88ab\u63a7\u5236\u7684\u70b9\uff0c\u4e0d\u5728\u7684\u65f6\u5019\u4e0d\u52a8\u5c31\u53ef\u4ee5\uff0c\u4e00\u5b9a\u80fd\u8d62\u3002\n\n\u6240\u4ee5\u7b97\u6cd5\u5c31\u5f88\u660e\u663e\u4e86\uff1a\n\n- \u9996\u5148\u5224\u65ad\u4e00\u6b65\u80fd\u4e0d\u80fd\u5403\u5230\uff0c\u80fd\u5219\u8f93\u51fa Alice\uff1b\n- \u7136\u540e\u5224\u65ad Bob \u80fd\u4e0d\u80fd\u7ffb\u6389 Alice\uff0c\u4e0d\u80fd\u5219\u8f93\u51fa Alice\uff1b\n- \u7136\u540e\u6c42\u76f4\u5f84\uff0c\u5224\u65ad Alice \u80fd\u4e0d\u80fd\u63a7\u5236\u6574\u4e2a\u6811\uff0c\u80fd\u5219\u8f93\u51fa Alice\uff1b\n- \u5426\u5219\u8f93\u51fa Bob\u3002\n\n\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\nstruct Edge {\n\tint to, nxt;\n\tEdge() {\n\t\tnxt = -1;\n\t}\n};\nEdge e[200005];\nint n, hd[100005], pnt, a, b, da, db, dep[100005], du;\n\ninline void AddEdge(int u, int v) {\n\te[++pnt].to = v;\n\te[pnt].nxt = hd[u];\n\thd[u] = pnt;\n}\n\ninline void Clr() {\n\tpnt = 0;\n\tfor (int i = 1;i <= n;i++) hd[i] = -1;\n}\n\ninline void Read() {\n\tn = qread(); a = qread(); b = qread(); da = qread(); db = qread();\n\tClr();\n\tfor (int i = 1;i < n;i++) {\n\t\tint u = qread(), v = qread();\n\t\tAddEdge(u, v);\n\t\tAddEdge(v, u);\n\t}\n}\n\ninline void Dfs(int u, int fa) {\n\tif (dep[du] < dep[u]) du = u;\n\tfor (int i = hd[u];~i;i = e[i].nxt) {\n\t\tif (e[i].to != fa) {\n\t\t\tdep[e[i].to] = dep[u] + 1;\n\t\t\tDfs(e[i].to, u);\n\t\t}\n\t}\n}\n\ninline void Solve() {\n\tdep[a] = 0;\n\tDfs(a, -1);\n\tif (dep[b] <= da) {\n\t\tcout << \"Alice\\n\";\n\t\treturn;\n\t}\n\tif (db <= da * 2) {\n\t\tcout << \"Alice\\n\";\n\t\treturn;\n\t}\n\tdu = 0;\n\tdep[1] = 0;\n\tDfs(1, -1);\n\tdep[du] = 0;\n\tDfs(du, -1);\n\tint len = dep[du];\n\tif (len <= da * 2) {\n\t\tcout << \"Alice\\n\";\n\t\treturn;\n\t}\n\tcout << \"Bob\\n\";\n}\n\nint main() {\n\tstd::ios::sync_with_stdio(0);\n\tint t = qread();\n\twhile (t--) {\n\t\tRead();\n\t\tSolve();\n\t}\n\tcout.flush();\n\t#ifdef CFA_44\n\twhile (1) getchar();\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1647314341,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1404B \u3010Tree Tag\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u4e00\u4e9b\u60c5\u51b5 Bob \u5fc5\u8d25\uff0c\u5148\u662f\u4e00\u4e9b\u5f88\u660e\u663e\u7684\uff1a\n\n1.\u521d\u59cb Alice \u80fd\u4e00\u6b65\u5230\u3002\n\n2.$da\\times 2\\geq db$ \u4e5f\u5c31\u662f\u8bf4\u903c\u5230\u6b7b\u89d2\u4e4b\u540e Bob \u65e0\u5904\u53ef\u53bb\u3002\n\n\u4f46\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f Bob \u8df3\u4e0d\u5230 $db$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u56e0\u4e3a\u6811\u4e0d\u591f\u5927\u3002\u800c Bob \u6b64\u65f6\u6700\u591a\u80fd\u8df3\u7684\u957f\u5ea6\u4e3a\u76f4\u5f84\uff0c\u5c06 $db$ \u4e0e\u76f4\u5f84\u53d6 $\\min$ \u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\ninline int read(){\n\tre int t=0;re char v=getchar();\n\twhile(v<'0')v=getchar();\n\twhile(v>='0')t=(t<<3)+(t<<1)+v-48,v=getchar();\n\treturn t; \n}\nint t,n,m,a,b,da,db,head[100002],cnt,vis[200002],mxd,mxp,fa[200002];\nstruct edge{\n\tint to,next;\n}e[200002];\ninline void add(re int x,re int y){\n\te[++cnt]=(edge){y,head[x]};\n\thead[x]=cnt;\n}\ninline void dfs(re int x,re int y,re int z){\n\tif(z>mxd)mxd=z,mxp=x;\n\tfa[x]=y;\n\tfor(re int i=head[x];i;i=e[i].next)if(e[i].to^y)dfs(e[i].to,x,z+1);\n}\nint main(){\n\tt=read();\n\twhile(t--){\n\t\tn=read(),a=read(),b=read(),da=read(),db=read();\n\t\tfor(re int i=1;i<=n;++i)head[i]=0,vis[i]=-1;\n\t\tfor(re int i=1,x,y;i<n;++i)x=read(),y=read(),add(x,y),add(y,x);\n\t\tmxd=0,dfs(1,0,1);\n\t\tre int x=a,y=b,z=0,dis=0;\n\t\twhile(x)vis[x]=z++,x=fa[x];\n\t\twhile(vis[y]==-1)y=fa[y],++dis;\n\t\tdis+=vis[y];\n\t\tif(dis<=da||da*2>=db)puts(\"Alice\");\n\t\telse{\n\t\t\tdfs(mxp,mxp,1);\n\t\t\tif(da*2>=mxd-1)puts(\"Alice\");\n\t\t\telse puts(\"Bob\");\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1599661259,
        "uid": 335422,
        "name": "\u9493\u9c7c\u738b\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1404B \u3010Tree Tag\u3011"
    },
    {
        "content": "\u672c\u6765\u8fd9\u4e00\u9898\u5f88\u7b80\u5355\uff0c\u4f46\u5728\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u6ca1\u60f3\u6e05\u695a\uff0c\u7136\u540e\u5c31\u6ca1\u505a\u51fa\u6765\u3002\n\n\u663e\u7136\uff0c\u7b54\u6848\u4e3a $\\texttt{Alice}$ \u5f53\u4e14\u4ec5\u5f53\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\u4e4b\u4e00\u6ee1\u8db3\uff1a\n\n- $\\texttt{Alice}$ \u548c $\\texttt{Bob}$ \u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e$da$\u3002\n\n- $db \\leq 2\\times da$ \u3002\n\n- \u6811\u7684\u76f4\u5f84\u957f\u5ea6 $\\leq 2\\times da$ \u3002\n\n\u5176\u4f59\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8bc1\u660e $\\texttt{Bob}$ \u4e00\u5b9a\u80fd\u8d62\u3002\n\n\u590d\u6742\u5ea6 $\\Theta(\\sum n)$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<set>\n#define IN inline\n#define FOR(i,a,b) for(int i=a;i<=b;++i)\n#define REP(u) for(int i=p[u];i!=-1;i=e[i].nxt)\n#define ll long long\n#define ull unsigned long long\n#define PII pair<int,int>\nusing namespace std;\ninline int getint()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn (f==1)?x:-x;\n}\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\nconst int maxn=1e5+5;\nint T,n,p[maxn],sz,a,b,da,db; \nstruct edge\n{\n\tint v,nxt;\n\tedge(int vv=0,int nn=0){v=vv,nxt=nn;}\n}e[maxn<<1];\ninline void add(int u,int v)\n{\n\te[++sz]=edge(v,p[u]);\n\tp[u]=sz;\n}\nint dis[maxn];\ninline void dfs(int u,int fa)\n{\n\tREP(u)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;\n\t\tdis[v]=dis[u]+1;\n\t\tdfs(v,u);\n\t}\n}\nint main()\n{\n\tT=getint();\n\twhile(T--)\n\t{\n\t\tn=getint();\n\t\tsz=0;\n\t\tFOR(i,1,n)p[i]=-1;\n\t\ta=getint(),b=getint(),da=getint(),db=getint();\n\t\tFOR(i,1,n-1)\n\t\t{\n\t\t\tint u=getint(),v=getint();\n\t\t\tadd(u,v);\n\t\t\tadd(v,u);\n\t\t}\n\t\tFOR(i,1,n)dis[i]=0;\n\t\tdfs(a,0);\n\t\tint maxpos,maxdis=0;\n\t\tif(dis[b]<=da)\n\t\t{\n\t\t\tprintf(\"Alice\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tFOR(i,1,n)if(dis[i]>maxdis)maxpos=i,maxdis=dis[i];\n\t\tFOR(i,1,n)dis[i]=0;\n\t\tdfs(maxpos,0);\n\t\tFOR(i,1,n)if(dis[i]>maxdis)maxpos=i,maxdis=dis[i];\n\t\tif(min(maxdis,db)<=2*da)printf(\"Alice\\n\");\n\t\telse printf(\"Bob\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1599547851,
        "uid": 333789,
        "name": "lory1608",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1404B \u3010Tree Tag\u3011"
    },
    {
        "content": "# [Tree Tag \u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1404B)\n\n# \u9898\u76ee\u89e3\u91ca\n\u6709\u4e24\u4e2a\u4eba $\\text{Alice}$ \u548c $\\text{Bob}$ \u5728\u4e00\u68f5\u6811\u4e0a\u76f8\u4e92\u8ffd\u9010\uff0c$\\text{Alice}$ \u5148\u8d70 $da$ \u6b65\uff0c$\\text{Bob}$ \u8d70 $db$ \u6b65\u3002\u95ee $\\text{Alice}$ \u5728 $10^{100}$ \u6b65\u5185\u80fd\u5426\u8ffd\u4e0a $\\text{Bob}$\u3002~~\u5176\u5b9e\u5c31\u662f\u95ee\u6709\u6ca1\u6709\u53ef\u80fd\u8ffd\u4e0a\u3002~~\n# \u9898\u76ee\u5206\u6790\n\u5982\u679c $\\text{Alice}$ \u65e0\u6cd5\u6536\u7f29 $\\text{Bob}$ \u5230\u8fbe\u7684\u70b9\uff0c\u5219 $\\text{Bob}$ \u4e00\u5b9a\u8d62\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u65e0\u8bba $\\text{Alice}$ \u91c7\u53d6\u4ec0\u4e48\u7b56\u7565\uff0c$\\text{Bob}$ \u90fd\u603b\u662f\u80fd\u8df3\u51fa $\\text{Alice}$ \u8986\u76d6\u7684\u8303\u56f4\uff0c\u5219 $\\text{Bob}$ \u4e00\u5b9a\u8d62\u3002\u53cd\u8fc7\u6765\uff0c\u5c31\u662f $\\text{Bob}$ \u65e0\u6cd5\u8df3\u51fa $\\text{Alice}$ \u8986\u76d6\u7684\u8303\u56f4\u65f6\uff0c$\\text{Bob}$ \u4e00\u5b9a\u8f93\u3002\n### \u5148\u63a8\u4e2a\u7ed3\u8bba\n\u56e0\u4e3a\u8d70\u7684\u6b21\u6570\u662f $10^{100}$\uff0c~~\u63a5\u8fd1\u65e0\u9650\u5927\u3002~~ \u663e\u7136\u5982\u679c $\\text{Alice}$ \u80fd\u8d62\uff0c\u90a3\u4e00\u5b9a\u6709\u4e00\u4e2a\u72b6\u6001\uff1a\u4e00\u6b65\u4e4b\u5185\u5c31\u80fd\u8ffd\u4e0a $\\text{Bob}$\u3002\u53cd\u8fc7\u6765\u8bf4\uff0c\u5982\u679c $\\text{Alice}$ \u4e0b\u4e00\u6b65\u8ffd\u4e0d\u4e0a $\\text{Bob}$\uff0c\u90a3 $\\text{Alice}$ \u5c31\u4e00\u5b9a\u8f93\u3002\n### \u7136\u540e\n$\\text{Alice}$ \u518d\u8d70\u4e00\u6b21\u5c31\u80fd\u591f\u5230\u8fbe $\\text{Bob}$ \u6240\u5728\u7684\u70b9\u3002\u6b64\u65f6 $\\text{Bob}$ \u65e0\u6cd5\u8df3\u51fa $\\text{Alice}$ \u8986\u76d6\u7684\u8303\u56f4\uff0c$\\text{Bob}$ \u5c31\u4e00\u5b9a\u8f93\u3002\u4e8e\u662f\u53ea\u9700\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\uff0c$\\text{Alice}$ \u4e00\u5b9a\u8d62\u3002\n### \u4e09\u4e2a\u6761\u4ef6\n- $\\text{dis}(a,b)\\le da$\n- $2\\times da\\ge db$\n- \u6811\u7684\u76f4\u5f84 $\\le2\\times da$\n\n# \u53c2\u8003\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=1e5+5;\nint ans;\nint dep[MAXN];\nint head[MAXN];\nint tot;\nint n,a,b,da,db;\nstruct node{\n    int nxt;\n    int to;\n}e[MAXN<<1];\nvoid init(){for(int i=1;i<=n;i++)head[i]=0;tot=0;}\nvoid edgeadd(int u,int v){\n    e[++tot].to=v;\n    e[tot].nxt=head[u];\n    head[u]=tot;\n}\nvoid read(){\n\tcin>>n>>a>>b>>da>>db;\n\tfor(int i=1,u,v;i<n;i++){\n\t\tcin>>u>>v;\n\t\tedgeadd(u,v);\n\t\tedgeadd(v,u);\n\t}\n}\nvoid A(){cout<<\"Alice\\n\";}\nvoid B(){cout<<\"Bob\\n\";}\nvoid dfs(int u,int fa) {\n\tif(dep[ans]<dep[u])\n        ans=u;\n\tfor(int i=head[u];i;i=e[i].nxt) {\n\t\tint v=e[i].to;\n\t\tif(v==fa)continue;\n\t\tdep[v]=dep[u]+1;\n\t\tdfs(v,u);\n\t}\n}\nint main() {\n    cin.tie(0);\n    cout.tie(0);\n    ios::sync_with_stdio(false);\n    int T;\n    cin>>T;\n\twhile(T--){\n\t\tinit();\n\t\tread();\n\t\tans=1;\n\t\tdep[1]=0;dfs(1,-1);\n\t\tdep[ans]=0;dfs(ans,-1);\n\t\tif(2*da>=db||2*da>=dep[ans])\n\t\t\tA();\n\t\telse {\n\t\t\tdep[a]=0;\n\t\t\tdfs(a,-1);\n\t\t\tif(dep[b]<=da)\n\t\t\t\tA();\n\t\t\telse\n\t\t\t\tB();\n\t\t}\n\t}\n}\n\n```",
        "postTime": 1683800392,
        "uid": 749636,
        "name": "Zhao_daodao",
        "ccfLevel": 0,
        "title": "Tree Tag \u9898\u89e3"
    },
    {
        "content": "\u5927\u6982\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a Alice \u8ffd\u51fb Bob \u7684\u95ee\u9898\uff0c\u5e76\u4e14 Alice \u5148\u8d70\u3002\n\n\u90a3\u4e48\u5982\u679c\u4e00\u5f00\u59cb $a,b$ \u7684\u8ddd\u79bb\u5c31\u5c0f\u4e8e\u4e86 $da$\uff0cAlice \u5fc5\u7136\u80dc\u5229\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5bf9\u4e8e\u8fd9\u79cd game \u7c7b\u578b\u9898\u76ee\u7684\u901a\u5e38\u8003\u8651\u65b9\u6cd5\uff1a\u6784\u9020\u6781\u9650\u60c5\u51b5\u3002\n\n\u8fd9\u9898\u7684\u6781\u9650\u60c5\u51b5\u662f\u4ec0\u4e48\u5462\uff1f\u5e94\u5f53\u662f Alice \u79fb\u52a8\u4e4b\u540e\uff0c\u4e24\u4eba\u76f8\u8ddd\u6070\u597d\u4e3a $da$\uff0c\u4e14 Bob \u4e0b\u4e00\u6b65\u5fc5\u987b\u8de8\u8fc7 Alice\u3002\u5982\u679c\u8de8\u8fc7\u4e4b\u540e Bob \u5b89\u5168\u4e86\uff0c\u8bf4\u660e $db>2*da$ \u4e14\u6811\u7684\u76f4\u5f84 $len>2*da$\u3002\u5982\u679c\u6ee1\u8db3\uff0c\u5219 Alice \u6c38\u8fdc\u4e0d\u53ef\u80fd\u8ffd\u4e0a Bob\uff0cBob \u53ea\u9700\u8981\u5728\u76f4\u5f84\u4e0a\u53cd\u590d\u6a2a\u8df3\u5373\u53ef\u3002\n\ncode\uff1a\n```cpp\nstruct node{\n\tint nxt,to;\n}star[N<<1];\nint t,n,a,b,da,db,head[N],x,y,wl;\ninline void add(int from,int to){\n\twl++;\n\tstar[wl].to=to;\n\tstar[wl].nxt=head[from];\n\thead[from]=wl;\n}\nint mxdep,pos,depth;\ninline void dfs(int x,int fa,int dep){\n\tif(dep>mxdep){pos=x,mxdep=dep;}\n\tfor(ri i=head[x];i;i=star[i].nxt){\n\t\tint u=star[i].to;\n\t\tif(u==fa) continue;\n\t\tdfs(u,x,dep+1);\n\t}\n}\ninline void dfs2(int x,int fa,int dep){\n\tif(x==b) depth=dep;\n\tfor(ri i=head[x];i;i=star[i].nxt){\n\t\tint u=star[i].to;\n\t\tif(u==fa) continue;\n\t\tdfs2(u,x,dep+1);\n\t}\n}\ninline int rd(){\n\tint x=0,flg=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') flg=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*flg;\n}\nint main(){\n\tt=rd();\n\twhile(t--){\n\t\tdepth=0;\n\t\tn=rd(),a=rd(),b=rd(),da=rd(),db=rd();\n\t\twl=0;\n\t\tfor(ri i=1;i<n;++i){\n\t\t\tx=rd(),y=rd(),add(x,y),add(y,x);\n\t\t}\n\t\tdfs2(a,0,0);\n\t\tdfs(1,0,0);\n\t\tmxdep=0;\n\t\tdfs(pos,0,0);\n\t\tif(mxdep>2*da&&db>2*da&&depth>da) puts(\"Bob\");\n\t\telse puts(\"Alice\");\n\t\tfor(ri i=1;i<=n;++i) head[i]=0;mxdep=0;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1599630808,
        "uid": 135839,
        "name": "Fairicle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1404B \u3010Tree Tag\u3011"
    }
]