[
    {
        "content": "[\u9898\u76ee\u94fe\u63a5 CF793B Igor and his way to work](https://www.luogu.com.cn/problem/CF793B)\n\n\u6df1\u641c\u52a0\u8bb0\u5fc6\u5316\u3002\n\n\u4e00\u9053\u56fe\u8bba\u9898\uff0c\u6709\u5f88\u591a\u5176\u4ed6\u7c7b\u4f3c\u7684\u9898\uff0c\u90a3\u5c31\u7528\u5176\u4ed6\u9898\u76ee\u4e2d\u7684\u65b9\u6cd5\u505a\u505a\u770b\u3002\n\n\u5148\u7ed9\u51fa\u76f8\u4f3c\u7684\u9898\u76ee\u3002\u800c\u4e14\u662f\u53cc\u500d\u7ecf\u9a8c\u3002\n\n[\u76f8\u4f3c\u9898 P2937 [USACO09JAN]Laserphones S](https://www.luogu.com.cn/problem/P2937)\n\n[SP3861 MLASERP - Laser Phones](https://www.luogu.com.cn/problem/SP3861)\n\n\u76f8\u4f3c\u9898\u7684\u9898\u89e3 [\u9898\u89e3 SP3861 MLASERP - Laser Pho](https://www.luogu.com.cn/blog/xiaozeyu/solution-sp3861)\n\n\u90fd\u662f\u540c\u4e00\u7c7b\u7684\u8ba1\u7b97\u8f6c\u5f2f\u6b21\u6570\u7684\u9898\u76ee\uff0c\u4f46\u8303\u56f4\u6709\u6240\u4e0d\u540c\uff0c\u53ef\u4ee5\u501f\u6b64\u591a\u7ec3\u51e0\u904d\uff0c\u5e0c\u671b\u6709\u5e2e\u52a9\u3002\n\n\u56de\u5230\u8fd9\u9053\u9898\u76ee\u7684\u5177\u4f53\u8981\u6c42\u3002\n\n\u6211\u4eec\u8981\u6c42\u51fa\u80fd\u5426\u5728\u4e24\u6b21\u8f6c\u5f2f\u4ee5\u5185\u4ece\u51fa\u53d1\u70b9\u8fbe\u5230\u76ee\u7684\u5730\u3002\n\n\u8fd9\u672c\u8d28\u4e0a\u548c\u5176\u4ed6\u9898\u76ee\u91cc\u62ff\u5bf9\u89d2\u7ebf\u7684\u955c\u5b50\u5c06\u5149\u7ebf\u8f6c\u4e00\u4e2a\u76f4\u89d2\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002\n\n\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u5927\uff0c\u4f46\u7b54\u6848\u5374\u5f88\u5c0f\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u4ece\u51fa\u53d1\u70b9\u8fdb\u884c\u4e24\u6b21\u67d3\u8272\uff0c\u770b\u80fd\u4e0d\u80fd\u8fbe\u5230\u53e6\u4e00\u4e2a\u70b9\u3002\n\n\u4f46\u5982\u679c\u60f3\u8981\u62d3\u5c55\u5230\u66f4\u591a\u6b21\u8f6c\u5f2f\uff0c\u5c31\u9700\u8981\u7528\u5230\u8fd9\u91cc\u7684\u8bb0\u5fc6\u5316\u4f18\u5316\u6df1\u641c\u7684\u65b9\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u6df1\u641c\u7684\u65b9\u6cd5\u3002\n\n\u6bcf\u6b21\u8f6c\u5f2f\u7684\u65f6\u5019\u5c06\u6b21\u6570\u52a0\u4e0a\u4e00\u3002\n\n\u4f18\u5316\u4e00\u4e0b\uff0c\u4f18\u5148\u4e0d\u8f6c\u5f2f\uff0c\u5148\u76f4\u8d70\uff0c\u8fd9\u6837\u5feb\u4e00\u70b9\u3002\n\n\u52a0\u4e0a\u8bb0\u5fc6\u5316\u5c31\u53ef\u4ee5\u8fc7\u4e86\uff0c\u8bb0\u5fc6\u5316\u4e2d\u5305\u542b\u56db\u4e2a\u65b9\u5411\u3002\n\n\u5728\u6211\u4eec\u627e\u5230\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u65f6\u5c31\u53ef\u4ee5\u5f00\u59cb\u641c\u4e86\uff0c\u5728\u641c\u4e4b\u524d\u628a\u8fd9\u4e2a\u70b9\u5f53\u505a\u5899\u58c1\uff0c\u8fd9\u6837\u9632\u6b62\u56de\u6765\u6216\u662f\u5728\u539f\u5730\u8f6c\u5708\u6d6a\u8d39\u529b\u6c14\u3002\n\n\u65b9\u5411\u76f4\u63a5\u5148\u7528\u6570\u7ec4\u5b58\u3002\u540e\u9762\u4e0d\u7528\u8ba8\u8bba\u3002\n\n\u8bb0\u5f97\u518d\u641c\u7684\u65f6\u5019\u8d85\u51fa\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8d85\u65f6\uff0c\u7528\u65f6\u4e5f\u662f\u5f88\u5c11\u7684\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n---\n\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=a;i<=b;i++)\n#define Rep(i,a,b) for(int i=a;i>=b;i--)\nusing namespace std;\nint read()\n{\n    char c=getchar();int x=0;bool f=0;\n    while(!isdigit(c))f^=!(c^45),c=getchar();\n    while(isdigit(c))x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    if(f)x=-x;return x;\n}\nconst int maxn=1010;\nint dx[4]={0,0,1,-1};\nint dy[4]={1,-1,0,0};\nint f[maxn][maxn][4];\nint n,m,ans=0x3f3f3f3f;\nchar a[maxn][maxn];\nbool vis[maxn][maxn];\nvoid dfs(int i,int j,int c,int d)\n{\n\tif(c>=3) return ;\n    if(d!=-1&&f[i][j][d]<=c) return ;\n    if(d!=-1) f[i][j][d]=c;\n    if(a[i][j]=='T') \n    {\n        ans=min(ans,c);\n        return ;\n    }\n    int x,y;\n    if(d!=-1)\n    {\n        x=i+dx[d];y=j+dy[d];\n        if(x<=n&&x>=1&&y<=m&&y>=1&&!vis[x][y]&&a[x][y]!='*')\n        {\n            vis[x][y]=1;\n            dfs(x,y,c,d);\n            vis[x][y]=0;\n        }\n    }\n    For(k,0,3)\n    {\n        if(k==d) continue;\n        x=i+dx[k];y=j+dy[k];\n        if(x<=n&&x>=1&&y<=m&&y>=1)\n        {\n            if(vis[x][y]||a[x][y]=='*') continue;\n            vis[x][y]=1;\n            dfs(x,y,c+(d!=-1),k);;\n            vis[x][y]=0;\n        }\n    }\n}\nint main()\n{\n    memset(f,0x3f,sizeof f);\n    scanf(\"%d%d\",&n,&m);\n    For(i,1,n) scanf(\"%s\",a[i]+1);\n    //For(i,1,n) printf(\"%s\\n\",a[i]+1);\n    For(i,1,n)\n        For(j,1,m)\n        {\n            if(a[i][j]!='S') continue;\n            vis[i][j]=1;\n            a[i][j]='*';\n            dfs(i,j,0,-1);\n            if(ans<=2) puts(\"YES\");\n            else puts(\"NO\");\n            //printf(\"%d\\n\",ans);\n            return 0;\n        }\n}\n```\n\n\u611f\u8c22\u7ba1\u7406\u5458\u7684\u5ba1\u6838\u3002\n",
        "postTime": 1644465515,
        "uid": 194642,
        "name": "xiaozeyu",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF793B Igor and his way to work"
    },
    {
        "content": "### \u9898\u610f\n\u6709\u4e00\u4e2a $n\\times m$ \u7684\u77e9\u9635\uff0c\u6709 $4$ \u79cd\u9053\u8def\uff0c`.` \u662f\u53ef\u884c\u7684\u9053\u8def, `*` \u662f\u4e0d\u53ef\u884c\u7684\u9053\u8def\uff0c `S` \u662f\u8d77\u70b9\uff0c `T` \u662f\u7ec8\u70b9\uff0c\u4e14\u53ea\u80fd\u8f6c $2$ \u6b21\u5f2f\uff0c\u95ee\u662f\u5426\u80fd\u4ece\u8d77\u70b9\u8d70\u5230\u7ec8\u70b9\u3002\n### \u5206\u6790\n\u5728 bfs \u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u8f6c\u5f2f\u7684\u6b21\u6570\uff0c\u5982\u679c\u4e0b\u4e00\u6b65\u8d70\u7684\u65b9\u5411\u548c\u4e0a\u4e00\u6b65\u8d70\u7684\u65b9\u5411\u4e0d\u540c\uff0c\u5c31\u52a0\u4e0a\u8fd9\u6b21\u8f6c\u5f2f\u7684\u6b21\u6570\u3002\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define elif else if\nusing namespace std;\nconst int MAXN=1e3+7;\nchar a[MAXN][MAXN];\nint dx[]={1,-1,0,0};\nint dy[]={0,0,1,-1};\nint vis[1005][1005][4][2];\nint n,m;\nstruct node\n{\n    int x,y,z,turns;\n};\nbool bfs(node u)\n{\n    queue<node>q;\n    for(register int i=0;i<4;i++) //4\u4e2a\u65b9\u5411\n    {\n        node v=u;\n        v.x+=dx[i];\n        v.y+=dy[i];\n        if(v.x>=1&&v.x<=n&&v.y>=1&&v.y<=m&&a[v.x][v.y]!='*') //\u80fd\u8d70\n        {                                   \n            v.z=i;\n            v.turns=2;\n            vis[v.x][v.y][i][2]=1;\n            q.push(v);\n        }\n    }\n    while(!q.empty())\n    {\n        node u=q.front();\n        q.pop();\n        if(a[u.x][u.y]=='T') return true; //\u8d70\u5230\u7ec8\u70b9\u4e86\n        for(register int i=0;i<4;i++)\n        {\n            node v=u;\n            v.x+=dx[i];\n            v.y+=dy[i];\n            if(v.x>=1&&v.x<=n&&v.y>=1&&v.y<=m&&a[v.x][v.y]!='*') //\u4e0b\u4e00\u6b65\u80fd\u8d70\n            {\n                if(v.z==i) //\u65b9\u5411\u4e0d\u53d8\n                {\n                    if(!vis[v.x][v.y][i][v.turns]) //\u4e4b\u524d\u6ca1\u6709\u76f8\u540c\u65b9\u5411\u8d70\u8fc7\n                    {\n                        q.push(v);\n                        vis[v.x][v.y][i][v.turns]=true;\n                    }\n                }\n                elif(v.turns>0)\n                {\n                    if(!vis[v.x][v.y][i][v.turns-1])\n                    {\n                        v.turns--;\n                        v.z=i;  \n                        vis[v.x][v.y][i][v.turns]=true;\n                        q.push(v);\n                    }\n                }\n            }\n        }\n \n    }\n    return 0;\n}\nint main()\n{\n    cin>>n>>m;\n    node start;\n    for(register int i=1;i<=n;i++)\n    {\n        for(register int j=1;j<=m;j++)\n        {\n            cin>>a[i][j];\n            if(a[i][j]=='S') //\u8bb0\u5f55\u8d77\u70b9\n            {\n                start.x=i;\n                start.y=j;\n            }\n        }\n    }\n    if(bfs(start)) cout<<\"YES\"<<endl;\n    else cout<<\"NO\"<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1624269375,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF793B Igor and his way to work \u9898\u89e3"
    },
    {
        "content": "\u6734\u7d20\u65b9\u6cd5\u3002\n\n\u5f00\u6570\u7ec4\u5224\u65ad\u8f6c\u4e86\u51e0\u6b21\uff0c\u8fd8\u5269\u51e0\u6b21\u3002\n\n\u4e0e\u4e0a\u4e00\u6b21\u884c\u52a8\u4e0d\u540c\u5c31\u89c6\u4e3a\u8f6c\u5f2f\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[1005][1005];\nint dx[4]={1,-1,0,0};\nint dy[4]={0,0,1,-1};\nint used[1005][1005][4][2];\nint n,m;\nstruct node\n{\n    int x,y,d,sum;\n};\nint  bfs(node zuobiao)\n{\n    queue<node>q;\n    for(int i=0;i<4;i++)\n    {\n        node v=zuobiao;\n        v.x+=dx[i];\n        v.y+=dy[i];\n        if(v.x>=1&&v.x<=n&&v.y>=1&&v.y<=m&&s[v.x][v.y]!='*')     \n        {                                   \n            v.d=i;\n            v.sum=2;\n            used[v.x][v.y][i][2]=1;\n            q.push(v);\n        }\n    }\n    while(!q.empty())\n    {\n       node u=q.front();\n        q.pop();\n        if(s[u.x][u.y]=='T')\n            return 1;\n        for(int i=0;i<4;i++)\n        {\n            node v=u;\n            v.x+=dx[i];\n            v.y+=dy[i];\n            if(v.x>=1&&v.x<=n&&v.y>=1&&v.y<=m&&s[v.x][v.y]!='*')\n            {\n                if(v.d==i) \n                {\n                    if(used[v.x][v.y][i][v.sum]==0){\n                    q.push(v);\n                    used[v.x][v.y][i][v.sum]=1;\n                    }\n                }\n                else if(v.sum>0)\n                {\n                    if(!used[v.x][v.y][i][v.sum-1])\n                    {\n                        v.sum--;\n                        v.d=i;  \n                        used[v.x][v.y][i][v.sum]=1;\n                       q.push(v);\n                    }\n                }\n            }\n \n        }\n \n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    memset(used,0,sizeof(used));\n    node zuobiao;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",&s[i][1]);\n        for(int j=1;j<=m;j++)\n        {\n            if(s[i][j]=='S')\n            {\n                zuobiao.x=i;\n                zuobiao.y=j;\n            }\n        }\n    }\n       if(bfs(zuobiao)) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    return 0;\n}\n```",
        "postTime": 1595675687,
        "uid": 144532,
        "name": "\u69d1\u5c0f\u6768",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF793B \u3010Igor and his way to work\u3011"
    },
    {
        "content": "\u7b97\u6cd5\u7c7b\u578b\uff1a$Dfs ~\\&~ Bfs$\n\n\u601d\u8def\uff1a\n\n**\u9898\u76ee\u610f\u601d\u4e3a\u6c42\u80fd\u5426\u5728\u4e0d\u8f6c2\u4e2a\u5f2f\u4ee5\u4e0a\u7684\u60c5\u51b5\u4e0b\u4eceS\u5230T\u3002**\n\n- \u90a3\u4e48\u9996\u5148\u4ece$S$\u5f00\u59cb\u4e0a\u4e0b\u5de6\u53f3\u904d\u5386\u5f97\u51fa\u5728\u4e0d\u8f6c\u7b2c\u4e00\u4e2a\u5f2f\u4e4b\u524d\u80fd\u5230\u8fbe\u7684\u6240\u6709\u4f4d\u5b50\u3002\n\n- \u5206\u522b\u7531\u8fd9\u4e9b\u4f4d\u7f6e\u4e3a\u8d77\u70b9\u904d\u5386\u56db\u5468\uff0c\u5faa\u73af\u4e24\u6b21\uff0c\u53ef\u5f97\u51fa\u8f6c\u4e24\u6b21\u5f2f\u6240\u80fd\u5230\u8fbe\u6240\u6709\u4f4d\u7f6e\uff0c\u53ea\u9700\u5224\u65ad\u5176\u4e2d\u662f\u5426\u5305\u62ec$T$\u53ef\u4ee5\u4e86\u3002\n\nbfs\u7b97\u6cd5\uff08\u6015dfs\u8d85\u65f6\u5c31\u6ca1\u7528\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar f[1009][1009];\nint d[1009][1009];\nint m,n;\nint fuck(int x,int y,int shuju)/*\u904d\u5386\u77e9\u9635*/\n{\n\tint i=x+1;\n\tint j=y;\n\twhile(i<m&&d[i][j]==-1&&f[i][j]!='*')//\u641c\u7d22\u4e0b\u65b9\n\t{\n\t\td[i++][j]=shuju;\n\t}\n\ti=x-1;\n\tj=y;\n\twhile(i>=0&&d[i][j]==-1&&f[i][j]!='*')//\u641c\u7d22\u4e0a\u65b9\n\t{\n\t\td[i--][j]=shuju;\n\t}\n\ti=x;\n\tj=y+1;\n\twhile(j<n&&d[i][j]==-1&&f[i][j]!='*')//\u641c\u7d22\u53f3\u65b9\n\t{\n\t\td[i][j++]=shuju;\n\t}\n\ti=x;\n\tj=y-1;\n\twhile(j>=0&&d[i][j]==-1&&f[i][j]!='*')//\u641c\u7d22\u5de6\u65b9\n\t{\n\t\td[i][j--]=shuju;\n\t}\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>m>>n;\n\tmemset(d, -1,sizeof(d));//\u521d\u59cb\u5316\u6570\u7ec4\n\tfor(int i=0; i<m; i++)\n\t\tfor(int j=0; j<n; j++)\n\t\t\tcin>>f[i][j];\n\tfor(int i=0; i<m; i++)\n\t\tfor(int j=0; j<n; j++)\n\t\t\tif(f[i][j]=='S')\n\t\t\t{\n\t\t\t\td[i][j]=0;\n\t\t\t\tfuck(i,j,0);\n\t\t\t}\n\tfor(int i=0; i<m; i++)\n\t\tfor(int j=0; j<n; j++)\n\t\t\tif(d[i][j]==0)\n\t\t\t{\n\t\t\t\tfuck(i,j,1);\n\t\t\t}\n\tfor(int i=0; i<m; i++)\n\t\tfor(int j=0; j<n; j++)\n\t\t\tif(d[i][j]==1)\n\t\t\t{\n\t\t\t\tfuck(i,j,2);\n\t\t\t}\n\tfor(int i=0; i<m; i++)\n\t\tfor(int j=0; j<n; j++)\n\t\t\tif(f[i][j]=='T')\n\t\t\t{\n\t\t\t\tcout<<(d[i][j]==-1?\"NO\":\"YES\");\n                /*\n                \u4e09\u76ee\u8fd0\u7b97\u7b26,\u53ef\u62d3\u5c55\u4e3a\uff1a\n                if(d[i][j]==-1)cout<<\"NO\";\n                else cout<<\"YES\";\n\t\t\t\t */\n\t\t\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1585486323,
        "uid": 316896,
        "name": "Dimly_dust",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3 \u3011CF793B Igor and his way to work"
    },
    {
        "content": "## CF793B\u306e\u9898\u89e3\n### \u9898\u610f\n\u4e00\u773c BFS **\u6c42\u80fd\u5426\u5230\u8fbe\u7ec8\u70b9**\u9898\u3002\n\n\u5728\u6a21\u677f\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u7684\u9898\u989d\u5916\u4e3a\u6211\u4eec\u589e\u52a0\u4e86**\u53ea\u80fd\u8f6c\u4e24\u6b21\u5f2f**\u7684\u8981\u6c42\uff0c\u6240\u4ee5\u6211~~\u9996\u5148\u6253\u4e86\u4e00\u4e2a\u66b4\u529b~~\uff0c\u5728\u7b2c $9$ \u4e2a\u70b9T\u4e86\u3002\n\n\u663e\u7136\uff0c\u8fd9\u9898\u9700\u8981\u8bb0\u5fc6\u5316\uff0c\u6240\u4ee5\u6211 **~~\u53c8\u5199\u4e86~~** \u4e00\u4e2a\u4ee3\u7801\uff0c\u7ed3\u679c\u66f4\u60e8\uff0c\u76f4\u63a5 WA \u4e86\u3002\n\n### \u56e0\u4e3a\u672c\u5f31\u8005\u4e0d\u600e\u4e48\u4f1a\u5199\u8bb0\u5fc6\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u641e\u4e00\u4e2a\u6295\u673a\u53d6\u5de7\u7684\u601d\u8def\uff1a\n\n\u9996\u5148\u4ece\u8d77\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u641c\u5230\u8d77\u70b9\u4e0a\u4e0b\u5de6\u53f3\u80fd\u5230\u7684\u6240\u6709\u70b9\uff0c\u6807\u8bb0\u3002\u518d\u641c\u7d22\u6807\u8bb0\u8fc7\u7684\u70b9\uff0c\u7ee7\u7eed\u6807\u8bb0\uff0c\u56e0\u4e3a**\u8f6c\u5f2f\u4e24\u6b21**\u6240\u4ee5\u4e24\u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\u5373\u53ef\uff0c\u8bb0\u5f97\u8bb0\u5fc6\u5316\uff08~~\u8fd8\u5f97\u5199~~\u3002\n\n### \u4ee3\u7801\n```cpp\n#pragma GCC optimize(\"Ofast,no-stack-protector\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")//\u5916\u7f51\u4f18\u5316 \n#include<bits/stdc++.h>\nusing namespace std;\nchar a[1111][1111];int vis[1111][1111];\nint nx,ny,tox,toy,flag1,flag2;//\u8bb0\u5f55\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u4f18\u5316\u6807\u8bb0 \nint n,m;\nstruct node{\n\tint x,y;\n};\nqueue<node> q;\nint dx[]={0,1,-1,0,0};\nint dy[]={0,0,0,1,-1};//\u4e0a\u4e0b\u5de6\u53f3 \nint bfs(int x,int y,int p)\n{\n\tnode now,next;//\u6807\u51c6BFS \n\tnow.x=x;\n\tnow.y=y;\n\tq.push(now);\n\tfor(int i=1;i<=4;i++)\n\t{\n\t\tnext.x=now.x+dx[i];\n\t\tnext.y=now.y+dy[i];\n\t    while(next.x>=1&&next.x<=n&&next.y>=1&&next.y<=m&&vis[next.x][next.y]==-1&&a[next.x][next.y]!='*')\n\t\t{//\u5728\u4e0d\u8d8a\u754c\u4e14\u672a\u8d70\u8fc7\u7684\u60c5\u51b5\u4e0b \n\t\t\tvis[next.x][next.y]=p;//\u6807\u8bb0\u8d70\u8fc7 \n\t\t\tq.push(next);\n\t\t\tnext.x+=dx[i];\n\t\t\tnext.y+=dy[i];//\u4e0d\u65ad\u671d\u540c\u4e00\u65b9\u5411\u79fb\u52a8 \n\t\t}\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0); //\u4f18\u5316 \n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t   for(int j=1;j<=m;j++)\n\t\t   cin>>a[i][j];\n\tfor(int i=1;i<=n;i++)\n\t   for(int j=1;j<=m;j++)\n\t\t   vis[i][j]=-1;//\u521d\u59cb\u5316\u6807\u8bb0\u6570\u7ec4 \n\tfor(int i=1;i<=n;i++)\n    {\n\t\tif(flag2) break;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[i][j]=='S') nx=i,ny=j,flag1=1;//\u627e\u5230\u8d77\u70b9\u5c31\u6807\u8bb0 \n\t\t\tif(a[i][j]=='T')\n\t\t\t{\n\t\t\t\ttox=i,toy=j;\n\t\t\t\tif(flag1) {flag2=1;break;}//\u5982\u679c\u540c\u65f6\u627e\u5230\u7ec8\u70b9\u5c31\u9000\u51fa\u5faa\u73af \n\t\t\t}\n\t\t}\n\t}//\u5e26\u4f18\u5316\u7684\u627e\u8d77\u70b9\u7ec8\u70b9 \n\tbfs(nx,ny,0);//\u4e0d\u8f6c\u5f2f \n\tfor(int i=1;i<=n;i++) \n\t   for(int j=1;j<=m;j++)\n\t     if(vis[i][j]==0) bfs(i,j,1);//\u7b2c\u4e00\u6b21\u8f6c\u5f2f \n\tfor(int i=1;i<=n;i++) \n\t   for(int j=1;j<=m;j++)\n\t     if(vis[i][j]==1) bfs(i,j,2);//\u7b2c\u4e8c\u6b21\u8f6c\u5f2f \n\tint ans=vis[tox][toy];\n\tif(ans!=-1) cout<<\"YES\";//\u5982\u679c\u7ec8\u70b9\u88ab\u6807\u8bb0\u8fc7\u5c31YES \n\telse cout<<\"NO\";//\u5426\u5219NO \n\treturn 0;\n}\n```\n**~~\u6240\u4ee5\u4e3a\u4ec0\u4e48\u6211\u8bd5\u56fe\u53cc\u961f\u5217\u4f18\u5316\u65f6\u4f1aW\u554a~~**\n\n\n\n",
        "postTime": 1671098584,
        "uid": 474692,
        "name": "csy114514",
        "ccfLevel": 3,
        "title": "CF793B\u306e\u9898\u89e3"
    },
    {
        "content": "\u600e\u4e48\u5176\u4ed6\u7684\u9898\u89e3\u90fd\u662f\u7528\u641c\u7d22\uff1f\n\n\u90a3\u4e48\u6211\u6765\u5199\u4e00\u7bc7\u76f4\u63a5\u5728\u5730\u56fe\u4e0a\u8fdb\u884c\u6807\u8bb0\u7684\u89e3\u6cd5\u5427\uff01\n\n\u601d\u8def\uff1a\u65e2\u7136\u6211\u4eec\u8981\u77e5\u9053 S \u662f\u5426\u53ea\u8981\u901a\u8fc7\u4e24\u6b21\u8f6c\u5f2f\u5c31\u53ef\u4ee5\u5230\u8fbe T\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u8f6c\u5f2f\u70b9\uff0c\u5176\u4e2d\u4e00\u4e2a\u70b9\u4e0d\u7528\u8f6c\u5f2f\u5c31\u80fd\u5230 S\uff0c\u53e6\u4e00\u4e2a\u70b9\u4e0d\u7528\u8f6c\u5f2f\u5c31\u80fd\u5230 T\uff0c\u4e14\u8fd9\u4e24\u4e2a\u70b9\u4e0d\u7528\u8f6c\u5f2f\u5c31\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5206\u522b\u6807\u8bb0\u51fa S \u548c T \u4e0d\u7528\u62d0\u5f2f\u5c31\u80fd\u5230\u8fbe\u7684\u70b9\u3002\u5728\u6807\u8bb0\u8fc7\u7a0b\u4e2d\u7279\u5224\u4e0d\u7528\u62d0\u5f2f\u548c\u62d0\u5f2f\u4e00\u6b21\u5c31\u80fd\u5230\u8fbe\u7684\u60c5\u51b5\u3002\n\n\u904d\u5386\u6bcf\u4e00\u6761\u6a2a\u7ebf\u548c\u7ad6\u7ebf\u3002\u6bcf\u4e00\u6761\u7ebf\u90fd\u80fd\u88ab\u969c\u788d\u7269\uff08\u5373`*`\uff09\u5206\u6210\u51e0\u6bb5\u3002\n\n\u5982\u679c\u5728\u4e00\u6bb5\u4e2d\u540c\u65f6\u5b58\u5728 S \u4e0d\u7528\u62d0\u5f2f\u5c31\u80fd\u5230\u7684\u70b9\u548c T \u4e0d\u7528\u62d0\u5f2f\u5c31\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u90a3\u4e48\u5c31\u6709\u89e3\uff08\u56e0\u4e3a\u8fd9\u4e00\u6bb5\u4e0e\u5b83\u4eec\u663e\u7136\u6784\u6210\u4e86\u4e24\u4e2a\u62d0\u5f2f\u70b9\uff09\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$ O(nm) $\u3002\n\n\n```cpp\n#include<cctype>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\nconst ld eps=1e-8;\ninline int read(){\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    return f?-x:x;\n}\nconst int N=1050;\nint n,m,xs,ys,xt,yt;\nchar gps[N][N];//\u8bb0\u5f55\u5730\u56fe\nbool flag;\nint main(){\n\tn=read();m=read();flag=false;\n\tfor(register int i=1;i<=n;i++){\n\t\tscanf(\"%s\",gps[i]+1);\n\t}\n\tfor(register int i=1;i<=n;i++){//\u627e\u5230S\u548cT\u7684\u5750\u6807\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tif(gps[i][j]=='S')xs=i,ys=j;\n\t\t\tif(gps[i][j]=='T')xt=i,yt=j;\n\t\t}\n\t}\n\tfor(register int i=xs;i>=1;i--){//\u5c06S\u5411\u56db\u4e2a\u65b9\u5411\u6269\u5c55\n\t\tif(gps[i][ys]=='*')break;\n\t\tgps[i][ys]='S';\n\t}\n\tfor(register int i=xs;i<=n;i++){\n\t\tif(gps[i][ys]=='*')break;\n\t\tgps[i][ys]='S';\n\t}\n\tfor(register int i=ys;i>=1;i--){\n\t\tif(gps[xs][i]=='*')break;\n\t\tgps[xs][i]='S';\n\t}\n\tfor(register int i=ys;i<=m;i++){\n\t\tif(gps[xs][i]=='*')break;\n\t\tgps[xs][i]='S';\n\t}\n\tfor(register int i=xt;i>=1;i--){//\u5c06T\u5411\u56db\u4e2a\u65b9\u5411\u6269\u5c55\u987a\u4fbf\u7279\u5224\n\t\tif(gps[i][yt]=='*')break;\n\t\tif(gps[i][yt]=='S')flag=true;\n\t\tgps[i][yt]='T';\n\t}\n\tfor(register int i=xt;i<=n;i++){\n\t\tif(gps[i][yt]=='*')break;\n\t\tif(gps[i][yt]=='S')flag=true;\n\t\tgps[i][yt]='T';\n\t}\n\tfor(register int i=yt;i>=1;i--){\n\t\tif(gps[xt][i]=='*')break;\n\t\tif(gps[xt][i]=='S')flag=true;\n\t\tgps[xt][i]='T';\n\t}\n\tfor(register int i=yt;i<=m;i++){\n\t\tif(gps[xt][i]=='*')break;\n\t\tif(gps[xt][i]=='S')flag=true;\n\t\tgps[xt][i]='T';\n\t}\n\tif(flag){\n\t\tprintf(\"YES\");\n\t\treturn 0;\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tchar ever='*';//\u8bb0\u5f55\u6bcf\u4e00\u6bb5\u5185\u662f\u5426\u6709\u80fd\u5230\u8fbe\u7684\u70b9\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tif((gps[i][j]=='S'&&ever=='T')||(gps[i][j]=='T'&&ever=='S')){\n\t\t\t\tflag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(gps[i][j]!='.')ever=gps[i][j];\n\t\t}\n\t\tif(flag)break;\n\t}\n\tif(flag){\n\t\tprintf(\"YES\");\n\t\treturn 0;\n\t}\n\tfor(register int j=1;j<=m;j++){\n\t\tchar ever='.';\n\t\tfor(register int i=1;i<=n;i++){\n\t\t\tif((gps[i][j]=='S'&&ever=='T')||(gps[i][j]=='T'&&ever=='S')){\n\t\t\t\tflag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(gps[i][j]!='.')ever=gps[i][j];\n\t\t}\n\t\tif(flag)break;\n\t}\n\tprintf(flag?\"YES\":\"NO\");\n\treturn 0;\n}\n\n```",
        "postTime": 1618134323,
        "uid": 311369,
        "name": "hihihi198",
        "ccfLevel": 0,
        "title": "CF793B\u9898\u89e3"
    }
]