[
    {
        "content": "## \u9898\u610f\n\u7ed9\u4f60\u4e00\u5f20 DAG\uff0c\u5176\u4e2d\u542b $n$ \u4e2a\u70b9\u548c $m$ \u6761\u6709\u5411\u8fb9\u3002  \n\u7ed9\u5b9a\u4e24\u79cd\u5904\u7406\u5668\uff0c\u4e3b\u5904\u7406\u5668\u548c\u526f\u5904\u7406\u5668\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u7684\u5904\u7406\u5668\u3002  \n\u73b0\u8981\u4f60\u6c42\u51fa\u526f\u5904\u7406\u5668\u7684\u6700\u5c11\u8fd0\u884c\u6b21\u6570\u3002  \n\u6ce8\uff1a\u82e5\u8981\u5904\u7406\u5f53\u524d\u70b9\uff0c\u5219\u6b64\u7ed3\u70b9\u7684\u524d\u9a71\u7ed3\u70b9\u5fc5\u987b\u88ab\u5904\u7406\u8fc7\u6216\u4e0e\u6b64\u8282\u70b9\u4e00\u8d77\u5904\u7406\u3002  \n## Sol\n\u9898\u76ee\u4e2d\u8981\u6c42\u526f\u5904\u7406\u5668\u8fd0\u884c\u6b21\u6570\u6700\u5c11\uff0c\u90a3\u4e48\u4fbf\u662f\u8981\u4e3b\u5904\u7406\u5668\u8fd0\u884c\u6b21\u6570\u6700\u591a\u3002  \n\u6211\u4eec\u8003\u8651\u8ba9\u4e3b\u5904\u7406\u5668\u5168\u90e8\u5904\u7406\u5b8c\u518d\u5904\u7406\u526f\u5904\u7406\u5668\u3002  \n\u90a3\u4e48\u600e\u4e48\u6c42\u5462\uff1f  \n\u7531 DAG \u6211\u4eec\u5f88\u5bb9\u6613\u4f1a\u60f3\u5230\u62d3\u6251\u6392\u5e8f\uff0c\u8003\u8651\u62d3\u6251\u6392\u5e8f\u3002  \n\u5f00\u4e00\u4e2a\u961f\u5217\uff0c\u8ba9\u6bcf\u4e2a\u65e0\u524d\u9a71\u5373\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u8fdb\u961f\uff0c\u7136\u540e\u5c31\u884c\u62d3\u6251\u6392\u5e8f\u7684\u64cd\u4f5c\u3002  \n\u505a\u5b8c\u4e3b\u5904\u7406\u5668\u5224\u65ad\u526f\u5904\u7406\u5668\u7684\u961f\u5217\u4e2d\u6709\u65e0\u70b9\u5373\u53ef\u3002  \n## Code\uff1a  \n```cpp\n//xhxh\n#include<bits/stdc++.h>\nusing namespace std;\nstruct zmh\n{\n\tint next,to;\n}edge[400001];\nbool vis[200001];\nint n,m,head[200001],f[200001],ans,cnt;\nqueue<int> q1,q2;\nint read()\n{\n\tint pos=1,num=0;\n\tchar ch=getchar();\n\twhile (!isdigit(ch))\n\t{\n\t\tif (ch=='-') pos=-1;\n\t\tch=getchar();\n\t}\n\twhile (isdigit(ch))\n\t{\n\t\tnum=num*10+(int)(ch-'0');\n\t\tch=getchar();\n\t}\n\treturn pos*num;\n}\nvoid write(int x)\n{\n\tif (x<0)\n\t{\n\t\tputchar('-');\n\t\twrite(-x);\n\t\treturn;\n\t}\n\tif (x>=10) write(x/10);\n\tputchar(x%10+'0');\n}\nvoid writesp(int x)\n{\n\twrite(x);\n\tputchar(' ');\n}\nvoid writeln(int x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\nvoid add(int u,int v)\n{\n\tcnt++;\n\tedge[cnt].to=v;\n\tedge[cnt].next=head[u];\n\thead[u]=cnt;\n}\nint main()\n{\n\tn=read(); m=read();\n\tfor (int i=1;i<=n;i++)\n\t\tvis[i]=read();\n\twhile (m--)\n\t{\n\t\tint x=read(),y=read();\n\t\tx++; y++;\n\t\tf[y]++;\n\t\tadd(x,y);\n\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (f[i]==0)\n\t\t{\n\t\t\tif (vis[i]==0) q1.push(i);\n\t\t\telse q2.push(i);\n\t\t}\n\t}\n\twhile (!q1.empty()||!q2.empty())\n\t{\n\t\twhile (!q1.empty())\n\t\t{\n\t\t\tint u=q1.front();\n\t\t\tq1.pop();\n\t\t\tfor (int i=head[u];i;i=edge[i].next)\n\t\t\t{\n\t\t\t\tint v=edge[i].to;\n\t\t\t\tf[v]--;\n\t\t\t\tif (f[v]==0)\n\t\t\t\t{\n\t\t\t\t\tif (vis[v]==0) q1.push(v);\n\t\t\t\t\telse q2.push(v); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!q2.empty()) ans++;\n\t\twhile (!q2.empty())\n\t\t{\n\t\t\tint u=q2.front();\n\t\t\tq2.pop();\n\t\t\tfor (int i=head[u];i;i=edge[i].next)\n\t\t\t{\n\t\t\t\tint v=edge[i].to;\n\t\t\t\tf[v]--;\n\t\t\t\tif (f[v]==0)\n\t\t\t\t{\n\t\t\t\t\tif (vis[v]==0) q1.push(v);\n\t\t\t\t\telse q2.push(v); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\twriteln(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1616508526,
        "uid": 167999,
        "name": "dd_d",
        "ccfLevel": 6,
        "title": "Sol-CF909E"
    },
    {
        "content": "## \u9898\u610f\n\u5927\u4f53\u9898\u610f\u5982\u9898\u9762\u6240\u793a\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\uff0c**\u524d\u7ee7\u4efb\u52a1\u5df2\u7ecf\u88ab\u6267\u884c\u8fc7\u4e86\u7684\u4efb\u52a1**\u548c**\u524d\u7ee7\u4efb\u52a1\u88ab\u653e\u8fdb\u526f\u5904\u7406\u5668\u5904\u7406\u7684\u4efb\u52a1**\u662f\u53ef\u4ee5\u4e00\u6b21\u540c\u65f6\u5904\u7406\u7684\uff0c\u8fd9\u4e5f\u662f\u9898\u9762\u4e2d\u201c**\u6216**\u201d\u7684\u542b\u4e49\u3002\u53e6\u5916\uff0c $0$ \u8868\u793a\u53ea\u80fd\u5728\u4e3b\u5904\u7406\u5668\u4e2d\u5904\u7406\uff0c $1$ \u8868\u793a\u53ea\u80fd\u5728\u526f\u5904\u7406\u5668\u4e2d\u5904\u7406\u3002\u6700\u540e\u5343\u4e07\u8981\u6ce8\u610f\uff0c\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\u5173\u7cfb\u662f**\u524d\u4e00\u4e2a\u5904\u7406\u7684\u524d\u63d0\u662f\u540e\u4e00\u4e2a\u88ab\u5904\u7406**\u4e86\uff0c\u4e0d\u8981\u641e\u53cd\u3002\n\n## \u89e3\u6790\n\u9996\u5148\u9898\u9762\u544a\u8bc9\u6211\u4eec\u8fd9\u662f\u4e00\u5f20 DAG\uff0c\u5f88\u5bb9\u6613\u5c31\u4f1a\u60f3\u5230\u62d3\u6251\u3002\u518d\u89c2\u5bdf\u9898\u9762\uff0c\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u6211\u4eec\u5c3d\u53ef\u80fd\u5c11\u7684\u4f7f\u7528\u526f\u5904\u7406\u5668\uff0c\u6362\u8a00\u4e4b\uff0c\u5c31\u662f\u8ba9\u6211\u4eec\u6bcf\u6b21\u5c3d\u53ef\u80fd\u5148\u4e0d\u5904\u7406\u9700\u8981\u526f\u5904\u7406\u5668\u7684\u4efb\u52a1\uff0c\u5f85\u5230\u4e0d\u5f97\u4e0d\u5904\u7406\u65f6\u518d\u4e00\u6b21\u6027\u5904\u7406\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5f97\u6211\u4eec\u6bcf\u6b21\u5904\u7406\u6389\u7684\u9700\u8981\u526f\u5904\u7406\u5668\u7684\u4efb\u52a1\u5c3d\u53ef\u80fd\u591a\uff0c\u4e14\u4f7f\u7528\u526f\u5904\u7406\u5668\u7684\u6b21\u6570\u5c3d\u53ef\u80fd\u5c11\u3002\n\n\u8fd9\u5f88\u663e\u7136\u5c31\u662f**\u8d2a\u5fc3**\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u7528\u62d3\u6251\u6392\u5e8f\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e00\u6b21\u5148\u628a\u4e3b\u5904\u7406\u5668\u80fd\u591f\u5904\u7406\u7684\u4efb\u52a1\u90fd\u5904\u7406\u6389\uff0c\u5904\u7406\u5b8c\u540e\uff0c\u518d\u4e00\u6b21\u6027\u5904\u7406\u76ee\u524d\u80fd\u591f\u5904\u7406\u7684\u6240\u6709\u9700\u8981\u526f\u5904\u7406\u5668\u7684\u4efb\u52a1\u3002\u6ce8\u610f\uff0c\u9664\u4e86\u76ee\u524d\u5165\u5ea6\u4e3a $0$ \u7684\u4efb\u52a1\u53ef\u4ee5\u5904\u7406\u4ee5\u5916\uff0c\u5728\u8fd9\u4e9b\u4efb\u52a1\u90fd\u88ab\u5904\u7406\u6389\u4e4b\u540e\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u6ee1\u8db3\u201c**\u524d\u7ee7\u4efb\u52a1\u88ab\u653e\u8fdb\u526f\u5904\u7406\u5668\u5904\u7406\u7684\u4efb\u52a1**\u201d\u8fd9\u4e00\u6761\u4ef6\uff0c\u4e5f\u662f\u80fd\u591f\u5728\u540c\u4e00\u6b21\u5904\u7406\u4e2d\u88ab\u5904\u7406\u6389\u7684\u3002\n\n\u4e8e\u662f\u4ee3\u7801\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define N 100005\nusing namespace std;\nint n,m,cnt,head[N];\nint a[N],ru[N],ans;\nstruct edge{\n\tint to,next;\n}e[N];\ninline void add(int x,int y){\n\te[++cnt].to=y;\n\te[cnt].next=head[x];\n\thead[x]=cnt;\n}\n\nqueue<int> qmain,qco;\n\ninline void topo(){\n\tfor(int i=1;i<=n;i++){\n\t\tif(!ru[i]){\n\t\t\tif(!a[i]) qmain.push(i);\n\t\t\telse qco.push(i);\n\t\t}\n\t}\n\twhile((!qmain.empty())||(!qco.empty())){\n\t\twhile(!qmain.empty()){//\u4f18\u5148\u5904\u7406\u4e3b\u5904\u7406\u5668\u80fd\u5904\u7406\u7684 \n\t\t\tint u=qmain.front();\n\t\t\tqmain.pop();\n\t\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\t\tint v=e[i].to;\n\t\t\t\tru[v]--;\n\t\t\t\tif(!ru[v]){\n\t\t\t\t\tif(!a[v]) qmain.push(v);\n\t\t\t\t\telse qco.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!qco.empty())\n\t\t\tans++;//\u5982\u679c\u9700\u8981\u526f\u5904\u7406\u5668\u5904\u7406\u7684\u8bdd\u5c31\u5c06\u5904\u7406\u6b21\u6570+1 \n\t\twhile(!qco.empty()){//\u4e00\u6b21\u6027\u628a\u6240\u6709\u80fd\u4e00\u8d77\u5904\u7406\u7684\u4efb\u52a1\u90fd\u5904\u7406\u6389 \n\t\t\tint u=qco.front();\n\t\t\tqco.pop();\n\t\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\t\tint v=e[i].to;\n\t\t\t\tru[v]--;\n\t\t\t\tif(!ru[v]){\n\t\t\t\t\tif(!a[v]) qmain.push(v);\n\t\t\t\t\telse qco.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=1,y,x;i<=m;i++){\n\t\tscanf(\"%d%d\",&y,&x);//\u6ce8\u610f\u8f93\u5165\u987a\u5e8f\u4e0e\u5b9e\u9645\u64cd\u4f5c\u8981\u6c42\u987a\u5e8f\u76f8\u53cd \n\t\tadd(x+1,y+1);ru[y+1]++;\n\t}\n\ttopo();\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1596697539,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF909E \u3010Coprocessor\u3011"
    },
    {
        "content": "**\u8fd9\u7b80\u76f4\u662f\u6211vp\u4e0b\u6765\u6700\u7b80\uff08zhi\uff09\u5355\uff08zhang\uff09\u7684\u4e00\u9053e\u9898\u4e86\u2026\u2026**\n****\n**\u9898\u610f\u5927\u81f4\u662f\u7ed9\u4f60\u4e00\u5806\u4efb\u52a1\uff0c\u6709\u4e9b\u8981\u7528\u4e3b\u5904\u7406\u5668\u5904\u7406\uff0c\u6709\u4e9b\u8981\u7528\u526f\u5904\u7406\u5668\u5904\u7406\uff0c\u526f\u5904\u7406\u5668\u53ef\u4ee5\u4e00\u6b21\u5904\u7406\u5f88\u591a\u4e2a\u4efb\u52a1\uff0c\u4e00\u4e2a\u4efb\u52a1\u80fd\u88ab\u6267\u884c\u7684\u6761\u4ef6\u4e3a\u524d\u7ee7\u4efb\u52a1\u5df2\u7ecf\u88ab\u6267\u884c\u8fc7\u4e86\u6216\u8005\u524d\u7ee7\u4efb\u52a1\u548c\u81ea\u5df1\u540c\u65f6\u88ab\u653e\u8fdb\u526f\u5904\u7406\u5668\u5904\u7406\uff0c\u73b0\u5728\u7ed9\u4f60\u8fd9\u4e9b\u524d\u7ee7\u4efb\u52a1\u7684\u5173\u7cfb\u548c\u6bcf\u4e2a\u4efb\u52a1\u5904\u7406\u8981\u7528\u7684\u5904\u7406\u5668\uff0c\u6c42\u526f\u5904\u7406\u5668\u6700\u5c11\u8fd0\u884c\u4e86\u51e0\u6b21\uff0c\u4fdd\u8bc1\u5173\u7cfb\u662f\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe**\n\n****\n**\u548b\u505a\u5462\uff0c\u770b\u5230\u8fd9\u79cd\u6709\u524d\u7ee7\u4efb\u52a1\u7684\uff0c\u53c8\u662f\u6709\u5411\u65e0\u73af\u56fe\uff0c\u611f\u89c9\u80af\u5b9a\u662fDP\u554a\uff01\u7ed3\u679c\u4e8b\u5b9e\u8bc1\u660e\u8fdeDP\u90fd\u4e0d\u7528\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u6ed1\u7a3d\u7684\u62d3\u6251\u6392\u5e8f\u3002**\n\n**\u57fa\u4e8e\u4e07\u65e0\u4e00\u5931\u7684\u8d2a\u5fc3\u601d\u60f3\uff0c\u6bcf\u6b21\u628a\u6240\u6709\u5f53\u524d\u80fd\u505a\u5f97\u8981\u7528\u4e3b\u5904\u7406\u5668\u7684\u4efb\u52a1\u90fd\u505a\u5149\uff0c\u90a3\u4e48\u6b64\u65f6\u80fd\u4e00\u9505\u7aef\u7684\u526f\u5904\u7406\u5668\u4efb\u52a1\u80af\u5b9a\u4e5f\u662f\u6700\u591a\u7684\uff0c\u7136\u540e\u5c31\u6309\u7167\u8fd9\u79cd\u601d\u8def\u5199\u6a21\u62df\u5c31\u53ef\u4ee5\u5566**\n\n**\u9996\u5148\u5efa\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u653e\u62d3\u6251\u6392\u5e8f\u641c\u5230\u7684\u8981\u7528\u4e3b\u5904\u7406\u5668\u505a\u5f97\u4efb\u52a1\uff0c\u4e00\u4e2a\u653e\u526f\u5904\u7406\u5668\u505a\u7684\u4efb\u52a1\uff0c\u6bcf\u6b21\u5148\u62d3\u6251\u6392\u5e8f\u641c\u5230\u6ca1\u6709\u80fd\u7528\u4e3b\u5904\u7406\u5668\u505a\u7684\u4efb\u52a1\u4e3a\u6b62\uff0c\u7136\u540e\u5982\u679c\u526f\u5904\u7406\u5668\u7684\u961f\u5217\u91cc\u8fd8\u6709\u522b\u7684\u6570\uff0c\u90a3\u4e48ans++\uff0c\u628a\u526f\u5904\u7406\u5668\u961f\u5217\u91cc\u7684\u6570\u7ee7\u7eed\u62ff\u51fa\u6765\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u76f4\u5230\u6240\u6709\u6570\u90fd\u88ab\u641c\u8fc7\u4e3a\u6b62\uff0c\u590d\u6742\u5ea6\u5c31\u662f\u62d3\u6251\u6392\u5e8f\u7684\u590d\u6742\u5ea6\uff0c\u8fd8\u662f\u5f88\u4f18\u8d8a\u7684\u3002**\n****\n\n**\u4ee3\u7801\u5982\u4e0b**\n\n```cpp\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nstruct node\n{\n\tint val,du;\n} a[100010];\n\nint n,m,vis[100010],ans;\nvector<int> g[100010];\n\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i].val);\n\t}\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tint from,to;\n\t\tscanf(\"%d%d\",&from,&to);\n\t\tg[to+1].push_back(from+1);\n\t\ta[from+1].du++;\n\t}\n\tqueue<int> q[2];\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tif(!a[i].du)\n\t\t{\n\t\t\tq[a[i].val].push(i);\n\t\t}\n\t}\n\twhile((!q[0].empty())||(!q[1].empty()))\n\t{\n\t\twhile(!q[0].empty())\n\t\t{\n\t\t\tint u=q[0].front();\n\t\t\tvis[u]=1;\n\t\t\tq[0].pop();\n\t\t\tfor(int i=0; i<g[u].size(); i++)\n\t\t\t{\n\t\t\t\tif(!vis[g[u][i]])\n\t\t\t\t{\n\t\t\t\t\ta[g[u][i]].du--;\n\t\t\t\t\tif(!a[g[u][i]].du)\n\t\t\t\t\t{\n\t\t\t\t\t\tq[a[g[u][i]].val].push(g[u][i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!q[1].empty())\n\t\t{\n\t\t\tans++;\n\t\t\twhile(!q[1].empty())\n\t\t\t{\n\t\t\t\tint u=q[1].front();\n\t\t\t\tvis[u]=1;\n\t\t\t\tq[1].pop();\n\t\t\t\tfor(int i=0; i<g[u].size(); i++)\n\t\t\t\t{\n\t\t\t\t\tif(!vis[g[u][i]])\n\t\t\t\t\t{\n\t\t\t\t\t\ta[g[u][i]].du--;\n\t\t\t\t\t\tif(!a[g[u][i]].du)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tq[a[g[u][i]].val].push(g[u][i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n",
        "postTime": 1523672169,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF909E \u3010Coprocessor\u3011"
    },
    {
        "content": "[\u9898\u76ee\t](https://www.luogu.com.cn/problem/CF909E)\n\n> **\u9898\u76ee\u5927\u610f**\n>\n> \u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u4e24\u79cd\u5904\u7406\u5668\uff1a\u4e3b\u5904\u7406\u5668\uff0c\u526f\u5904\u7406\u5668\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u7684\u5904\u7406\u5668\u3002\n>\n> \u8981\u6c42\u526f\u5904\u7406\u5668\u6700\u5c11\u8fd0\u884c\u6b21\u6570\u3002\n\n**solution**\n\n\u56e0\u4e3a\u662f DAG \uff0c\u6240\u4ee5\u60f3\u5230\u62d3\u6251\u6392\u5e8f\u3002\n\n\u56e0\u4e3a\u8981\u6c42\u526f\u5904\u7406\u5668\u7684\u6700\u5c11\u8fd0\u884c\u6b21\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u7684\u5148\u628a\u80fd\u5904\u7406\u7684\u4e3b\u5904\u7406\u5668\u7684\u4efb\u52a1\u4e00\u6b21\u6027\u5904\u7406\u5b8c\uff0c\u7136\u540e\u518d\u5904\u7406\u526f\u5904\u7406\u5668\u7684\u3002\n\n**\u5b9e\u73b0\uff1a\u5f00\u4e24\u4e2a\u961f\u5217\u7ef4\u62a4\u4e24\u4e2a\u5904\u7406\u5668\u7684\u4efb\u52a1\u5c31\u597d**\n\n**code**\n\n```c++\n/*\nwork by:Ariel_\nKnowledge:\u62d3\u6251\u6392\u5e8f\nTime:O(n)\n*/\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n#define int long long\n#define rg register\nusing namespace std;\nconst int MAXN = 1e5 + 5; \nint read(){\n    int x = 0,f = 1; char c = getchar();\n    while(c < '0'||c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') {x = x*10 + c - '0'; c = getchar();}\n    return x*f;\n}\nint n, m, a[MAXN], ind[MAXN], tot, ans;\nqueue<int>q[2];\nvector<int> G[MAXN];\nsigned main(){\n   n = read(), m = read();\n   for (int i = 1; i <= n; i++) a[i] = read();\n   for (int i = 1, u, v; i <= m; i++) {\n   \t  u = read() + 1, v = read() + 1;\n   \t  G[v].push_back(u), ind[u]++;\n   }\n   for (int i = 1; i <= n; i++) if(!ind[i]) q[a[i]].push(i);\n   while(tot < n) {\n   \t  if (!q[0].empty()) {\n   \t     while(!q[0].empty()) {\n   \t       int u = q[0].front(); q[0].pop();\n\t\t   tot++;\n\t\t   for (int i = 0; i < G[u].size(); i++) {\n\t\t   \t   int v = G[u][i];ind[v]--;\n\t\t   \t   if(!ind[v]) q[a[v]].push(v);\n\t\t   }\t\n\t     }\t\n\t  }\n\t  else {\n\t  \tans++;\n\t  \twhile(!q[1].empty()) {\n\t  \t\tint u = q[1].front(); q[1].pop();\n\t  \t\ttot++;\n\t  \t\tfor (int i = 0; i < G[u].size(); i++) {\n\t  \t\t\t  int v = G[u][i]; ind[v]--;\n\t  \t\t\t  if(!ind[v]) q[a[v]].push(v);\n\t\t\t  }\n\t\t}\n\t  }\n   }\n   cout<<ans;\n   puts(\"\");\n   return 0;\n}\n\n```\n\n",
        "postTime": 1629514487,
        "uid": 285235,
        "name": "Dita",
        "ccfLevel": 0,
        "title": "CF909E Coprocessor"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u7ed9\u4f60\u82e5\u5e72\u4efb\u52a1\uff0c\u6709\u4e9b\u8981\u7528\u4e3b\u5904\u7406\u5668\u5904\u7406\uff0c\u6709\u4e9b\u8981\u7528\u526f\u5904\u7406\u5668\u5904\u7406\uff0c\u526f\u5904\u7406\u5668\u53ef\u4ee5\u4e00\u6b21\u5904\u7406\u5f88\u591a\u4e2a\u4efb\u52a1\u3002\u5f53\u4e00\u4e2a\u4efb\u52a1\u7684\u524d\u7ee7\u4efb\u52a1\u5b8c\u6210\u6216\u8005\u81ea\u5df1\u4e0e\u5b83\u7684\u524d\u7ee7\u4efb\u52a1\u540c\u65f6\u653e\u5165\u526f\u5904\u7406\u5668\u5904\u7406\uff0c\u8fd9\u4e2a\u4efb\u52a1\u53ef\u4ee5\u88ab\u6267\u884c\u3002\n\n\u73b0\u5728\u7ed9\u4f60\u8fd9\u4e9b\u524d\u7ee7\u4efb\u52a1\u7684\u5173\u7cfb\u548c\u6bcf\u4e2a\u4efb\u52a1\u5904\u7406\u8981\u7528\u7684\u5904\u7406\u5668\uff0c\u6c42\u526f\u5904\u7406\u5668\u6700\u5c11\u8fd0\u884c\u4e86\u51e0\u6b21\uff0c\u4fdd\u8bc1\u5173\u7cfb\u662f\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\u3002\n\n## \u601d\u8def\uff1a\n\u8d2a\u5fc3\u7684\u60f3\uff0c\u6bcf\u6b21\u5c06\u5f53\u524d\u80fd\u505a\u7684\u8981\u7528\u4e3b\u5904\u7406\u5668\u505a\u7684\u4efb\u52a1\u505a\u5b8c\uff0c\u6b64\u65f6\u80fd\u8ba9\u526f\u5904\u7406\u5668\u505a\u7684\u4efb\u52a1\u4e5f\u80af\u5b9a\u662f\u6700\u591a\u7684\u3002\u5efa\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u5b58\u5f53\u524d\u62d3\u6251\u641c\u5230\u7684\u8981\u7528\u4e3b\u5904\u7406\u5668\u5904\u7406\u7684\u4efb\u52a1\uff0c\u4e00\u4e2a\u653e\u526f\u5904\u7406\u5668\u5904\u7406\u7684\u4efb\u52a1\uff0c\u6bcf\u6b21\u641c\u5230\u6ca1\u6709\u8981\u4e3b\u5904\u7406\u5668\u5904\u7406\u7684\u4efb\u52a1\u4e3a\u6b62\u3002\u5982\u679c\u526f\u5904\u7406\u5668\u4efb\u52a1\u961f\u5217\u91cc\u8fd8\u6709\u6570\uff0c\u90a3\u4e48 ans++\uff0c\u540c\u6837\u7684\u5bf9\u526f\u5904\u7406\u5668\u961f\u5217\u91cc\u7684\u6570\u8fdb\u884c\u62d3\u6251\u3002\n\n## \u4ee3\u7801\uff1a\n```cpp\n#include <cstring>\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <string>\n#include <vector>\n#define int long long\nusing namespace std;\n\ninline int read() {\n    int f = 0, s = 0;\n    char ch = getchar();\n    while (!isdigit(ch)) f |= ch == '-', ch = getchar();\n    while (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n    return f ? -s : s;\n}\n\nvoid print (int x) {\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) print (x / 10);\n    putchar(x % 10 + '0');\n} \n\nconst int maxn = 1e5 + 10;\nint n, m, head[maxn], du[maxn], tot, ans, num, f[maxn];\n\nqueue<int> q[2];\n\nstruct node {\n    int nex, to;\n}edge[maxn];\n\nvoid add (int from, int to) {\n    edge[++num].nex = head[from];\n    edge[num].to = to;\n    head[from] = num;\n}\n\nsigned main() {\n    n = read(), m = read();\n    for (int i = 1; i <= n; i++) f[i] = read();\n    for (int i = 1; i <= m; i++) {\n        int u, v;\n        u = read() + 1, v = read() + 1;\n        add(v, u);\n        du[u]++;\n    }\n    for (int i = 1; i <= n; i++) if (!du[i]) q[f[i]].push(i);\n    while (tot < n) {\n        if (!q[0].empty()) {\n            while(!q[0].empty()) {\n                int p = q[0].front();\n                q[0].pop();\n                ++tot;\n                for (int i = head[p]; i; i = edge[i].nex) {\n                    int to = edge[i].to;\n                    du[to]--;\n                    if (!du[to]) q[f[to]].push(to);\n                }\n            }\n        }\n        else {\n            ans++;\n            while(!q[1].empty()) {\n                int p = q[1].front();\n                q[1].pop();\n                ++tot;\n                for (int i = head[p]; i; i = edge[i].nex) {\n                    int to = edge[i].to;\n                    du[to]--;\n                    if (!du[to]) q[f[to]].push(to);\n                }\n            }\n        }\n    }\n    print(ans);\n    return 0; \n}\n```",
        "postTime": 1628082898,
        "uid": 371178,
        "name": "Fan_Tuan",
        "ccfLevel": 4,
        "title": "CF909E Coprocessor \u9898\u89e3"
    }
]