[
    {
        "content": "# Tanya is 5\uff01\n\n## \u9898\u610f\n\n\u6709 $n$ \u4e2a\u5b69\u5b50\uff0c$m$ \u79cd\u673a\u5668\uff0c$b$ \u5757\u94b1\u3002\u4e00\u5f00\u59cb\uff0c\u6bcf\u79cd\u673a\u5668\u53ea\u6709\u4e00\u4e2a\uff0c\u4f46\u6bcf\u79cd\u673a\u5668\u4f60\u6709\u4e14\u4ec5\u6709\u4e00\u6b21\u673a\u4f1a\u82b1 $p_i$ \u5757\u518d\u8d2d\u4e70\u4e00\u53f0\u3002\u7b2c $i$ \u4e2a\u5b69\u5b50\u60f3\u5728\u7b2c $j$ \u79cd\u673a\u5668\u4e0a\u5de5\u4f5c $C_{i,j}$ \u65f6\u95f4\uff0c\u5de5\u4f5c\u53ef\u4ee5\u4e2d\u65ad\uff0c\u5de5\u4f5c\u65f6\u95f4\u7d2f\u52a0\u3002\u5b69\u5b50\u53ef\u4ee5\u4e0d\u82b1\u8d39\u65f6\u95f4\u4e2d\u65ad\u5de5\u4f5c\u548c\u8dd1\u53bb\u53e6\u4e00\u4e2a\u673a\u5668\u5de5\u4f5c\u3002\u6bcf\u4e2a\u65f6\u523b\u4e00\u4e2a\u5b69\u5b50\u53ea\u80fd\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u5de5\u4f5c\uff0c\u6bcf\u53f0\u673a\u5668\u4e8e\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u88ab\u4e00\u4e2a\u5b69\u5b50\u5de5\u4f5c\u3002\n\n\u6c42\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u7684\u6700\u5c11\u65f6\u95f4\uff0c\u5e76\u8f93\u51fa\u5de5\u4f5c\u7684\u65b9\u6848\u3002\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u82b1\u8d39\u94b1\uff0c\u53ea\u8981\u5728 $b$ \u5757\u4ee5\u5185\u3002\n\n$n\\leq 40,1\\leq m\\leq 10,0\\leq b\\leq 10^6,1\\leq p_i \\leq10^6,0\\leq C_{i,j} \\leq 2500$\n\n## \u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u6ca1\u6709\u8d2d\u4e70\u673a\u5668\u7684\u673a\u4f1a\u6211\u4eec\u53ef\u4ee5\u600e\u4e48\u505a\u3002\n\n\u8bbe $T_j = \\sum_i C_{i,j},S_i = \\sum_j = C_{i,j}$\uff0c\u5176\u4e2d $S_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u5b69\u5b50**\u5e0c\u671b\u5de5\u4f5c\u7684\u603b\u65f6\u95f4**\uff0c$T_j$ \u8868\u793a\u7b2c $j$ \u53f0\u673a\u5668**\u9700\u8981\u88ab\u5de5\u4f5c\u7684\u603b\u65f6\u95f4**\u3002\u663e\u7136\uff0c\u6211\u4eec\u7b54\u6848\u4e00\u4e2a\u663e\u7136\u7684**\u4e0b\u754c**\u4e3a $max(max\\{ T_j\\},max\\{ S_i\\})$\uff0c\u8bbe\u4e3a $X$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8bc1\u660e $X$ \u662f\u53ef\u4ee5\u88ab\u53d6\u5f97\u7684\u3002\n\n![](https://www.helloimg.com/images/2022/02/13/GU6ehY.png)\n\n\u8003\u8651\u5efa\u4e8c\u5206\u56fe\uff0c\u4eba\u4e3a\u5de6\u90e8\u8282\u70b9\uff0c\u673a\u5668\u4e3a\u53f3\u90e8\u8282\u70b9\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u6211\u4eec\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u5047\u673a\u5668\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u673a\u5668\uff0c\u6211\u4eec\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u5047\u4eba\u3002\n\n![](https://www.helloimg.com/images/2022/02/13/GU6xx9.png)\n\n- \u5bf9\u4e8e\u7b2c $i$ \u4e2a\u771f\u4eba\u548c\u7b2c $j$ \u4e2a\u771f\u673a\u5668\uff0c\u8fde\u8fb9\u6743\u503c\u4e3a $C_{i,j}$\u3002\n\n- \u5bf9\u4e8e\u7b2c $i$ \u4e2a\u771f\u4eba\u548c\u7b2c $j$ \u4e2a\u5047\u673a\u5668\uff0c\u8fde\u8fb9\u6743\u503c\u4e3a $X - S_i$\u3002\n\n- \u5bf9\u4e8e\u7b2c $j$ \u4e2a\u5047\u4eba\u548c\u7b2c $j$ \u4e2a\u771f\u673a\u5668\uff0c\u8fde\u8fb9\u6743\u503c\u4e3a $X - T_j$\u3002\n\n- \u5bf9\u4e8e\u7b2c $j$ \u4e2a\u5047\u4eba\u548c\u7b2c $i$ \u4e2a\u5047\u673a\u5668\uff0c\u8fde\u8fb9\u6743\u503c\u4e3a $C_{i,j}$\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u80fd\u591f\u53d1\u73b0\u4e8c\u5206\u56fe\u4e24\u8fb9\u7684\u8282\u70b9\u6570\u91cf\u76f8\u540c\uff0c\u4e14\u6bcf\u4e2a\u70b9\u5ea6\u6570\u90fd\u662f $X$\u3002\u6839\u636e $Hall$ \u5b9a\u7406\uff0c\u663e\u7136\u8be5\u56fe\u53ef\u4ee5\u5206\u89e3\u4e3a $X$ \u4e2a\u5b8c\u7f8e\u5339\u914d\uff0c\u6bcf\u4e00\u6b21\u627e\u51fa\u4e00\u4e2a\u5339\u914d\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u53d6\u5230 $X$\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5047\u4eba\u548c\u5047\u673a\u5668\u7684\u4f5c\u7528\u53ea\u5728\u4e8e**\u8865\u5145\u5ea6\u6570**\uff0c\u6bcf\u4e00\u6b21\u5339\u914d\u4e2d\uff0c\u5982\u679c\u771f\u4eba\u5339\u914d\u771f\u673a\u5668\uff0c\u8bf4\u660e\u8fd9\u4e2a\u65f6\u523b\u8be5\u4eba\u5728\u8fd9\u53f0\u673a\u5668\u4e0a\u5de5\u4f5c\uff0c\u5426\u5219\u8bf4\u660e\u4eba\u6216\u8005\u673a\u5668\u8f6e\u7a7a\u3002\n\n\u8003\u8651\u600e\u4e48\u8d2d\u4e70\u673a\u5668\u53ef\u4ee5\u8ba9\u51b3\u7b56\u66f4\u4f18\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u7684\u4e0b\u754c\u53ea\u548c $S_i$ \u548c $T_j$ \u6709\u5173\uff0c\u663e\u7136\uff0c\u8d2d\u4e70\u673a\u5668\u53ea\u80fd\u591f\u5f71\u54cd\u5230 $T_j$\uff0c\u6211\u4eec\u6bcf\u6b21\u590d\u5236\u673a\u5668\uff0c\u76f8\u5f53\u4e8e\u628a\u67d0\u4e2a $T_j$ \u5206\u6210\u4e24\u4efd $\\lceil \\frac{T_j}{2}\\rceil$\uff0c$\\lfloor \\frac{T_j}{2}\\rfloor$\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u5c3d\u91cf\u628a\u6700\u5927\u7684\u4e70\u4e86\u5373\u53ef\u3002\n\n## CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 50, M = 1e6 + 10, K = 1e5 + 10;\ninline int read()\n{\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') { if(ch == '-') w *= -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9') s = s * 10 + ch - '0', ch = getchar();\n\treturn s * w;\n}\nstruct node{ int p, id; }ch[N];\nstruct edge{\n\tint u, v;\n}e[M];\nint n, m, b, tot, ans, cnt;\nint id[2 * N], pos[N], sum[N], col[M];\nint R[N], Z[N], c[N][N], match[2 * N][K];\nbool buy[N];\nset<int> s[2 * N];\ninline bool cmp1(node x, node y) { return Z[x.id] > Z[y.id]; }\ninline bool cmp2(node x, node y) { return x.id < y.id; }\ninline void dfs(int u, int x, int y)\n{\n\tint id = match[u][x], v = (e[id].u == u ? e[id].v : e[id].u);\n\tmatch[u][x] = match[v][x] = 0;\n\tif(match[v][y]) dfs(v, y, x);\n\telse s[v].insert(x), s[v].erase(y);\n\tmatch[v][y] = match[u][y] = id, col[id] = y;\n}\nint main()\n{\n\tn = read(), m = read(), b = read();\n\tfor(register int i = 1; i <= m; i++) ch[i].p = read(), ch[i].id = i;\n\tfor(register int i = 1; i <= n; i++){\n\t\tint x = read();\n\t\tfor(register int j = 1, y; j <= x; j++) y = read(), c[i][y] = read();\n\t}\n\tfor(register int i = 1; i <= n; i++)\n\t\tfor(register int j = 1; j <= m; j++) R[i] += c[i][j], Z[j] += c[i][j];\n\tfor(register int i = 1; i <= n; i++) ans = max(ans, R[i]);\n\tsort(ch + 1, ch + m + 1, cmp1);\n\tfor(register int i = 1; i <= m; i++)\n\t\tif(ch[i].p <= b) b -= ch[i].p, buy[ch[i].id] = true;\n\tfor(register int i = 1; i <= m; i++)\n\t\tans = max(ans, buy[i] ? (Z[i] + 1) / 2 : Z[i]);\n\tfor(register int i = 1; i <= m; i++){\n\t\tpos[i] = ++tot, id[tot] = i;\n\t\tif(buy[i]) id[++tot] = i;\n\t}\n\tsort(ch + 1, ch + m + 1, cmp2);\n\tfor(register int i = 1; i <= n; i++){\n\t\tfor(register int j = 1; j <= m; j++){\n\t\t\twhile(c[i][j]--){\n\t\t\t\tsum[j]++;\n\t\t\t\tif(!buy[j]) e[++cnt] = (edge){i, pos[j] + n};\n\t\t\t\telse if(sum[j] <= Z[j] / 2) e[++cnt] = (edge){i, pos[j] + n};\n\t\t\t\telse e[++cnt] = (edge){i, pos[j] + 1 + n}; //\u7b2c\u4e8c\u4e2a\u70b9\u8fde\u8fb9 \n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i = 1; i <= n + tot; i++)\n\t\tfor(register int j = 1; j <= ans; j++) s[i].insert(j);\n\tfor(register int i = 1; i <= cnt; i++){\n\t\tint u = e[i].u, v = e[i].v, c1 = *s[u].begin(), c2 = *s[v].begin();\n\t\tif(match[v][c1]) dfs(v, c1, c2), s[v].erase(c2);\n\t\tmatch[u][c1] = match[v][c1] = i, col[i] = c1;\n\t\ts[u].erase(c1), s[v].erase(c1);\n\t}\n\tcout << ans << \"\\n\";\n\tfor(register int i = 1; i <= m; i++) printf(\"%d\", buy[i]);\n\tputs(\"\");\n\tcout << cnt << \"\\n\";\n\tfor(register int i = 1; i <= cnt; i++) printf(\"%d %d %d 1\\n\", e[i].u, id[e[i].v - n], col[i] - 1);\n\treturn 0;\n}\n```",
        "postTime": 1644719476,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "[CF737E] Tanya is 5\uff01"
    }
]