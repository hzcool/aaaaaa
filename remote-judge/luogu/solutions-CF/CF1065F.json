[
    {
        "content": "I hate dp.\n\n\u6240\u4ee5\u6211\u9009\u62e9\u7528\u7eaf\u56fe\u8bba\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n\u7814\u7a76\u4e0b\u4e24\u4e2a\u53f6\u5b50 $x,y$ \u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5bb9\u6613\u53d1\u73b0\uff1a\n\n\u8bbe\u4e24\u70b9 $lca$ \u4e3a $u$\u3002\n\n\u5982\u679c $dep_y-dep_u \\leq k$ \u90a3\u4e48\u53ef\u4ee5\u4ece\u53f6\u5b50 $y$ \u8df3\u5230 \u53f6\u5b50 $x$ \u3002\n\n\u5982\u679c $dep_x-dep_u\\leq k$ \u90a3\u4e48\u53ef\u4ee5\u4ece\u53f6\u5b50 $x$ \u8df3\u5230 \u53f6\u5b50 $y$ \u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u5f88 naive \u7684\u505a\u6cd5\uff0c\u628a\u6240\u6709\u70b9\u4e0e\u5176\u5b50\u6811\u5185\u7684\u53f6\u5b50\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u6bcf\u4e24\u4e2a\u53f6\u5b50\u4e4b\u95f4\u80fd\u8df3\u7684\u8fde\u4e0a\u8fb9\uff0c\u5bb9\u6613\u53d1\u73b0\u6709\u73af\uff0c\u90a3\u5c31\u7f29\u70b9\u4e4b\u540e\u8dd1\u6700\u957f\u8def\u3002\n\n\u4f60\u4f1a\u53d1\u73b0\u8fb9\u6570\u7206\u70b8\uff01\uff01\uff01\n\n\u6211\u4eec\u518d\u6765\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u56fe\uff0c\u5b83\u7684\u5197\u4f59\u8fb9\u662f\u54ea\u4e9b\u3002\n\n\u9996\u5148\uff0c\u70b9 $x$ \u80fd\u5230\u7684\u53f6\u5b50\u5fc5\u7136\u7b49\u4e8e\u5b83\u7684\u513f\u5b50\u80fd\u5230\u7684\u53f6\u5b50\u7684\u5e76\u96c6\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u5c06\u70b9 $x$ \u8fde\u5411\u5176\u513f\u5b50\u5373\u53ef\u3002\n\n\u5176\u6b21\u89c2\u5bdf\u53f6\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u5c06\u5176\u72ec\u7acb\u8003\u8651\uff0c\u5c06\u53f6\u5b50\u4e0e\u5176\u5c0f\u4e8e\u7b49\u4e8e $k$ \u7ea7\u7684\u7ec4\u5148\u90fd\u8fde\u4e0a\u8fb9\uff0c\u5f53\u7136\u4f60\u53ef\u80fd\u53c8\u4f1a\u53d1\u73b0\u5e76\u6ca1\u6709\u5fc5\u8981\uff0c\u6211\u4eec\u53ea\u8981\u5c06\u5176\u8fde\u5411\u5b83\u7684 $k$ \u7ea7\u7ec4\u5148\u5373\u53ef\u3002\n\n\u603b\u8fb9\u6570 $O(n)$ \u7ea7\u522b\uff0c\u968f\u4fbf\u8fc7\u3002\n\n~~qnm\u7684dp~~\n\n\u5f53\u7136\u4f60\u4ed4\u7ec6\u5206\u6790\u4e0b\u80fd\u53d1\u73b0\u5b83\u7684\u672c\u8d28\u548c dp \u662f\u4e00\u6837\u7684\uff0c\u7f29\u70b9\u76f8\u5f53\u4e8e\u628a\u6240\u6709\u7684 f(\u80fd\u56de\u6765) \u4e00\u8d77\u7b97\uff0c\u6bcf\u5728 DAG \u4e0a\u5f80\u4e0b\u8d70\u4e00\u6b65\u4e5f\u5c31\u76f8\u5f53\u4e8e\u8d70\u4e00\u4e2a\u56de\u4e0d\u6765\u7684\u3002\u867d\u7136\u672c\u8d28\u76f8\u540c\uff0c\u4f46\u6211\u8ba4\u4e3a\u4e24\u8005\u601d\u8003\u7684\u65b9\u5411\u533a\u522b\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002\n\n\nps:\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f Luogu \u4e0a\u597d\u50cf\u8fd8\u6ca1\u4eba\u5199\u8fc7\u8fd9\u4e2a\u5199\u6cd5\uff0c\u5f53\u7136\u6211\u6ca1\u627e\u5230\u7684\u8bdd\u5c31\u662f\u6211sb/ll\n\n```c++\n//QwQcOrZ yyds!!!\n#include<bits/stdc++.h>\n#define ll long long\n#define F(i,a,b) for (int i=(a);i<=(b);i++)\n#define R(i,a,b) for (int i=(a);i<(b);i++)\n#define D(i,a,b) for (int i=(a);i>=(b);i--)\n#define go(i,x) for (int i=head[x];i;i=e[i].nx)\n#define mp make_pair\n#define pb push_back\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define re register\n#define be begin()\n#define en end()\n#define sqr(x) ((x)*(x))\n#define ret return puts(\"-1\"),0;\n#define put putchar('\\n')\n#define inf 1000000005\n#define mod 998244353\n//#define int ll\n#define N 1000005\nusing namespace std;\ninline char gc(){static char buf[100000],*p1=buf,*p2=buf;return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;}\n#define gc getchar\ninline ll read(){char c=gc();ll su=0,f=1;for (;c<'0'||c>'9';c=gc()) if (c=='-') f=-1;for (;c>='0'&&c<='9';c=gc()) su=su*10+c-'0';return su*f;}\ninline void write(ll x){if (x<0){putchar('-');write(-x);return;}if (x>=10) write(x/10);putchar(x%10+'0');}\ninline void writesp(ll x){write(x),putchar(' ');}\ninline void writeln(ll x){write(x);putchar('\\n');}\nint chu[N],n,K,sta[N],tp,f[N],bel[N],sum[N],ye[N],dis[N],ans,cnt,ru[N],dfn[N],low[N],vis[N],_dfn;\nqueue<int>q;\nvector<int>G[N],E[N];\nvoid ad(int x,int y)\n{\n\tG[x].push_back(y);chu[x]++;\n}\nvoid ad1(int x,int y)\n{\n\tE[x].push_back(y);ru[y]++;\n}\nvoid dfs(int k,int fa)\n{\n\tsta[++tp]=k;\n\tf[k]=sta[max(1,tp-K)];\n\tfor (auto u:G[k])\n\t{\n\t\tdfs(u,k);\n\t}\n\ttp--;\n}\nvoid Tarjan(int k)\n{\n\tdfn[k]=++_dfn;\n\tlow[k]=dfn[k];\n\tsta[++tp]=k;\n\tvis[k]=1;\n\tfor (auto u:G[k])\n\t{\n\t\tif (!dfn[u])\n\t\t{\n\t\t\tTarjan(u);\n\t\t\tlow[k]=min(low[k],low[u]);\n\t\t} else\n\t\t\tif (vis[u]) low[k]=min(low[k],dfn[u]);\n\t}\n\tif (dfn[k]==low[k])\n\t{\n\t\t++cnt;\n\t\twhile (sta[tp]!=k)\n\t\t{\n\t\t\tbel[sta[tp]]=cnt;\n\t\t\tvis[sta[tp]]=0;\n\t\t\ttp--;\n\t\t}\n\t\t\tbel[sta[tp]]=cnt;\n\t\t\tvis[sta[tp]]=0;\n\t\t\ttp--;\n\t}\n}\n\t\t\nsigned main()\n{\n\tn=read(),K=read();\n\tfor (int i=1;i<n;i++) ad(read(),i+1);\n\tdfs(1,0);\n\tfor (int i=2;i<=n;i++)\n\t\tif (!chu[i]) \n\t\t{\n\t\t\tye[i]=1;ad(i,f[i]);\n\t\t}\n\t\t\n\tfor (int i=1;i<=n;i++) \n\t\tif (!dfn[i]) \n\t\t\tTarjan(i);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (auto u:G[i])\n\t\t{\n\t\t\tif (bel[u]!=bel[i]) ad1(bel[i],bel[u]);\n\t\t}\n\tfor (int i=1;i<=n;i++)\n\t\tsum[bel[i]]+=ye[i];\n\tfor (int i=1;i<=cnt;i++)\n\t\tif (!ru[i]) q.push(i),dis[i]=sum[i],ans=max(ans,dis[i]);\n\twhile (!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor (auto v:E[u])\n\t\t{\n\t\t\tdis[v]=max(dis[v],dis[u]+sum[v]);\n\t\t\tans=max(ans,dis[v]);\n\t\t\tru[v]--;\n\t\t\tif (!ru[v]) q.push(v);\n\t\t}\n\t}\n\twriteln(ans);\n}\n/*\n\n*/\n```",
        "postTime": 1626606759,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1065F Up and Down the Tree"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u4e2a\u4eba\u535a\u5ba2\uff1a[Link](https://www.watertomato.com/cf1065f-up-and-down-the-tree-%e9%a2%98%e8%a7%a3/)\u3002\n\n## \u9898\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1065F)\u3002\n\n\u7ed9\u51fa\u4e00\u9897\u6811\uff0c\u8d70\u5230\u53f6\u5b50\u8282\u70b9\u540e\u53ef\u4ee5\u56de\u5230\u5b83\u7684\u7b2c $k$ \u7956\u5148\uff0c\u6c42\u6700\u591a\u53ef\u4ee5\u8bbf\u95ee\u591a\u5c11\u53f6\u5b50\u8282\u70b9\u3002\n\n## \u89e3\u6790\n\n\u5b9a\u4e49 $f_{i}$ \u4e3a\u4ece $i$ \u8282\u70b9\u5f00\u59cb\u8d70\uff0c\u6700\u540e\u8d70\u56de\u5230 $i$ \u8282\u70b9\u7684\u8d21\u732e\uff0c$g_i$ \u4e3a\u4ece $i$ \u8282\u70b9\u5f00\u59cb\u8d70\uff0c\u6700\u540e\u4e0d\u7528\u56de\u5230 $i$ \u8282\u70b9\u7684\u6700\u5927\u8d21\u732e\u3002\n\n\u5148\u9884\u5904\u7406\u51fa\u4ece\u6bcf\u4e2a\u70b9\u5f00\u59cb\u8d70\u53ef\u4ee5\u56de\u5230\u7684\u6700\u9ad8\u70b9\uff0c\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9\uff0c\u521d\u59cb\u5148\u5c06\u5176\u8d21\u732e\u6253\u5230\u5176\u7b2c $k$ \u4e2a\u7956\u5148\u4e0a\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline void dfs(int u,int F){\n\tfa[u][0]=F;dep[u]=dep[F]+1;\n\tfor(int i=1;i<=20;i++){\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\t}\n\tbool fl=1;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;//\u56e0\u4e3a\u8fde\u8fb9\u7684\u65f6\u5019\u4ec5\u4ec5\u4ece\u7236\u4eb2\u5411\u513f\u5b50\u8fde\u8fb9\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u672a\u5224\u8fd4\u7956\u8fb9\u3002\n\t\tdfs(v,u);fl=0;\n\t\tif(!jp[u]||dep[jp[v]]<dep[jp[u]]) jp[u]=jp[v];//\u7ee7\u627f\u513f\u5b50\u53ef\u4ee5\u8df3\u5230\u7684\u6700\u9ad8\u70b9\n\t}\n\tif(fl){\n\t\tint x=u;\n\t\tfor(int i=0;i<=20;i++){\n\t\t\tif(k&(1<<i)) x=fa[x][i];\n\t\t}//\u5f80\u4e0a\u8df3\u80fd\u8df3\u5230\u7684\u6700\u9ad8\u70b9\n\t\tjp[u]=x;siz[x]++;//siz \u5373\u4e3a\u8d21\u732e\n\t}\n}\n```\n\n\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u5bf9\u4e8e\u5176\u4efb\u610f\u4e00\u4e2a\u513f\u5b50 $v$\uff0c\u5982\u679c\u8d70\u5230\u513f\u5b50\u80fd\u8df3\u56de\u5230 $u$ \u6216 $u$ \u7684\u7956\u5148\uff0c\u76f4\u63a5\u5c06 $f_u$ \u52a0\u4e0a $f_v$ \u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u8f6c\u79fb $g_u$\uff0c\u53d1\u73b0 $g_u$ \u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e0a $f_u$\uff0c\u7136\u540e\u5176\u76f8\u5f53\u4e8e\u8981\u5f80\u67d0\u4e00\u4e2a\u513f\u5b50\u8d70\uff0c\u6700\u7ec8\u4e0d\u8d70\u56de\u6765\u3002\u8003\u8651\u6bcf\u4e00\u4e2a\u513f\u5b50\u7684\u5269\u4f59\u4ef7\u503c\uff0c\u5bf9\u4e8e\u80fd\u8df3\u56de\u5230 $u$ \u6216 $u$ \u7684\u7956\u5148\u7684\u513f\u5b50\uff0c\u5176\u5269\u4f59\u4ef7\u503c\u4e3a $g_v-f_v$\uff0c\u5bf9\u4e8e\u5176\u4ed6\u513f\u5b50\uff0c\u5176\u5269\u4f59\u4ef7\u503c\u5c31\u4e3a $g_v$\uff0c\u4ece\u6240\u6709\u513f\u5b50\u7684\u5269\u4f59\u4ef7\u503c\u4e2d\u53d6\u4e00\u4e2a\u6700\u5927\u503c\u52a0\u4e0a\u5373\u53ef\u3002\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline void dfs2(int u){\n\tf[u]=siz[u];//\u521d\u59cb\u6253\u4e0a\u7684\u8d21\u732e\u5148\u52a0\u4e0a\u6765\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tdfs2(v);\n\t\tif(dep[jp[v]]<=dep[u]) f[u]+=f[v];//\u80fd\u8d70\u56de\u6765\u7684\n\t}\n\tg[u]=f[u];\n\tint maxx=0;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(dep[jp[v]]<=dep[u]) maxx=max(maxx,g[v]-f[v]);\n\t\telse maxx=max(maxx,g[v]);//\u627e\u51fa\u5269\u4f59\u4ef7\u503c\u6700\u9ad8\u7684\u90a3\u4e2a\n\t}\n\tg[u]+=maxx;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log k)$\uff0c\u6709\u8da3\u4e14\u4e0d\u96be\u3002\n\n\u6838\u5fc3\u4ee3\u7801\u5df2\u7ed9\u51fa\uff0c\u8fde\u8fb9\u540e\u4f9d\u6b21\u8fdb\u884c\u4e24\u4e2a dfs \u518d\u8f93\u51fa $g_1$ \u5373\u53ef\u3002",
        "postTime": 1626510523,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "CF1065F Up and Down the Tree \u9898\u89e3"
    },
    {
        "content": "\u5de8\u6c34\u7684\u4e00\u9053\u6811\u5f62DP\u9898\uff08\u4f46\u7531\u4e8e\u672a\u77e5\u539f\u56e0\u88ab\u5237\u9ed1\u4e86\uff0c~~\u6240\u4ee5\u6211\u4e5f\u8bc4\u4e86\u9ed1\u9898~~\uff09\n\n\u8bbesiz[i]\u8868\u793a\u7531\u54ea\u4e9b\u53f6\u5b50\u8282\u70b9\u51fa\u53d1\u53ef\u4ee5\u5230\u8fbei\uff0c\u663e\u7136\n$$siz[i]=\\sum_{j=child[i]}siz[j](low[j]-dep[i]<=k)$$\n\u5176\u4e2dlow[j]\u8868\u793a\u79bbj\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u6df1\u5ea6\uff0cdep[i]\u8868\u793ai\u7684\u6df1\u5ea6\n\n\u8fd9\u4e5f\u5f88\u597d\u7406\u89e3\uff0cj\u4e2d\u6240\u6709\u80fd\u5230j\u7684\u53f6\u5b50\u90fd\u53ef\u4ee5\u4ee5low[j]\u4e3a\u8df3\u677f\u8df3\u5230i\u4e0a\u5566\n\n\u4f46\u8fd9\u6837\u53ef\u80fd\u91cd\u590d\u8ba1\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6ee1\u8db3\u8981\u6c42\u7684j\u7684siz\u503c\u5168\u6e05\u96f6\u5c31\u884c\u4e86\n\n\u6700\u540e\uff0c\u6211\u4eec\u4ece\u6839\u51fa\u53d1\uff0c\u627e\u4e00\u6761siz\u548c\u6700\u5927\u7684\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u5c31\u662f\u7b54\u6848\u5566\uff01\uff01\n\n~~\u662f\u4e0d\u662f\u5f88\u6c34\uff1f~~\n```cpp\n#include <iostream>\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <queue>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int M=998244353,INF=1<<30,N=1000005;\nint n,m,i,j,u,v,head[N],Next[N],adj[N],k,vis[N],dfn[N],low[N],dep[N],siz[N];\nvoid Push(int u,int v)\n{\n\tNext[++k]=head[u];\n\thead[u]=k;\n\tadj[k]=v;\n}\nvoid dfs2(int i,int d)\n{\n\tdep[i]=d;\n\tint j;\n\tlow[i]=1<<30;\n\tif(vis[i]==0)\n\t\tlow[i]=d;\n\tfor(j=head[i];j!=0;j=Next[j])\n\t{\n\t\tdfs2(adj[j],d+1);\n\t\tlow[i]=min(low[i],low[adj[j]]);\n\t}\n}\nvoid dfs3(int i)\n{\n\tint j;\n\tif(vis[i]==0)\n\t\tsiz[i]=1;\n\tfor(j=head[i];j!=0;j=Next[j])\n\t{\n\t\tdfs3(adj[j]);\n\t\tif(low[adj[j]]-dep[i]<=m)\n\t\t{\n\t\t\tsiz[i]+=siz[adj[j]];\n\t\t\tsiz[adj[j]]=0;\n\t\t}\n\t}\n}\nint dfs(int i)\n{\n\tint j,s=0;\n\tfor(j=head[i];j!=0;j=Next[j])\n\t\ts=max(s,dfs(adj[j]));\n\treturn s+siz[i];\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&u);\n\t\tPush(u,i);\n\t\tvis[u]=1;\n\t}\n\tdfs2(1,0);\n\tdfs3(1);\n\tprintf(\"%d\",dfs(1));\n}\n\n```",
        "postTime": 1541439500,
        "uid": 26800,
        "name": "Sshenyyyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1065F \u3010Up and Down the Tree\u3011"
    },
    {
        "content": "\u7eaf\u7eaf\u7684\u8bc8\u9a97\u9898\u3002\u3002\u3002\n\n\u5982\u679c\u5f53\u524d\u5230\u4e86\u4e00\u4e2a\u53f6\u8282\u70b9\uff0c\u8981\u5411\u4e0a\u8df3\uff0c\u80af\u5b9a\u662f\u5f80\u4e0a\u8df3\u6ee1 $k$ \u7ea7\u3002\n\n\u4e00\u904d $\\text{dfs}$ \u5904\u7406\u51fa\u5f53\u524d\u8282\u70b9\u5b50\u6811\u5185\u6700\u6d45\u7684\u53f6\u8282\u70b9\u7684\u6df1\u5ea6 $low_u$\u3002\n\n\u5982\u679c\u8df3\u8fdb $u$ \u7684\u5b50\u6811\u5185\u8fd8\u80fd\u8df3\u56de $u$ \u7684\u7236\u4eb2\u7684\u5145\u8981\u6761\u4ef6\u662f $low_u \\le depth_{fa_u}+k$\u3002\n\n\u5728\u8df3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u8df3\u8fdb\u4e00\u4e2a\u5b50\u6811\u8fd8\u80fd\u8df3\u51fa\u6765\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6ca1\u6709\u5f71\u54cd\u904d\u5386\u5176\u4ed6\u7684\u53f6\u8282\u70b9\u3002\n\n\u6211\u4eec\u8bb0 $f_u$ \u8868\u793a\u8df3\u8fdb $u$ \u5b50\u6811\u5185\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u503c\u3002\n\n\u660e\u663e\u7684\uff0c\u6709 $f_u=\\sum\\limits_{v\\in son_u, depth_u+k\\ge low_v}f_v$\uff0c\u7136\u540e\u5bf9\u6240\u6709\u6ee1\u8db3 $v\\in son_u , depth_u+k\\ge low_v$ \u7684 $v$ \u628a $f_v$ \u7f6e\u4e3a $0$\u3002\n\n\u7f6e $0$ \u662f\u4e3a\u4e86\u8868\u793a\u8df3\u8fdb $v$ \u5b50\u6811\u540e\u8fd8\u53ef\u4ee5\u8df3\u56de $u$\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u9009\u4e00\u6761\u4ece\u6839\u5230\u53f6\u8282\u70b9\u7684\u4e00\u6761\u8def\u5f84\uff0c\u8def\u5f84\u4e0a\u8282\u70b9 $f$ \u503c\u7684\u548c\u3002\n\n\u590d\u6742\u5ea6\u663e\u7136\u7684 $O(n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=1e6+10;\nint n,k,f[NR],depth[NR],low[NR];\nvector<int>son[NR];\n#define pb push_back\n\nvoid dfs1(int id,int fath){\n\tdepth[id]=depth[fath]+1;\n\tlow[id]=(son[id].empty())?depth[id]:1e9;\n\tif(son[id].empty())f[id]=1;\n\tfor(int x:son[id]){\n\t\tdfs1(x,id);\n\t\tlow[id]=min(low[id],low[x]);\n\t\tif(low[x]<=k+depth[id])f[id]+=f[x],f[x]=0;\n\t}\n}\nint dfs2(int id){\n\tint maxn=0;\n\tfor(int x:son[id])\n\t\tmaxn=max(maxn,dfs2(x));\n\treturn maxn+f[id];\n}\n\nint main(){\n\tcin>>n>>k;\n\tfor(int i=2,x;i<=n;i++)\n\t\tscanf(\"%d\",&x),son[x].pb(i);\n\tdfs1(1,0);\n\tcout<<dfs2(1)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1658326832,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF1065F \u9898\u89e3"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n~~2019.10.28\u6a21\u62df\u8d5bT3\u9a97\u5206\u573a~~\n\n\u4e00\u5f00\u59cb\u53d1\u73b0\u66b4\u529b\u6253\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u6b63\u89e3\u4e0d\u4f1a\u3002\u90a3\u4e48\u60f3\u5230\u9a97\u5206\u3002\u5f88\u663e\u7136\uff0c\u5b83\u6c42\u6700\u591a\u7684\u53ef\u8fbe\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\uff0c\u90a3\u4e48\u4f1a\u6709**\u5f88\u5927\u7684\u53ef\u80fd**\u7b54\u6848\u662f\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u8fc7\u4e0d\u4e86\u6837\u4f8b\u7684\u3002\u4f46\u662f\u5b9e\u6d4b\u8bc1\u660e\u76f4\u89c9\u5f88\u6b63\u786e\uff0c\u9a97\u5230\u4e8660\u5206\uff08\u9003\uff09\n\n\u6b63\u89e3\u662f\u6811\u5f62DP\u3002\n\n\u5728\u6211\u4e2a\u4eba\u7684\u7406\u89e3\u4e2d\uff0c\u6811\u5f62DP\u5176\u5b9e\u5c31\u662f\u628a\u4e00\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u5411\u4e0a\u56de\u6eaf\u7edf\u8ba1\u5f97\u5230\u7b54\u6848\u7684\u4e00\u7c7bDP\u9898\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u601d\u8def\uff1a\u5f88\u663e\u7136\uff0c\u6839\u636e\u8d2a\u5fc3\u539f\u5219\uff0c\u6211\u4eec\u5728\u4ece1\u53f7\u70b9\u9009\u62e9\u5f80\u4e0b\u8d70\u7684\u65f6\u5019\uff0c\u5f53\u7136\u662f\u6311\u9009\u53ef\u8fbe\u53f6\u5b50\u8282\u70b9\u6700\u591a\u7684\u4e00\u68f5\u5b50\u6811\u6765\u8d70\u3002\u5c31\u662f\u8981\u770b\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u5f80\u4e0a\u8df3\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u4e2d\uff0c\u76f8\u8fde\u53f6\u5b50\u8282\u70b9\u6700\u591a\u7684\u70b9\u3002\n\n\u663e\u7136\uff0c\u7edf\u8ba1\u7684\u91cf\u5c31\u662f$size[i]$\u8868\u793a$i$\u8282\u70b9\u7684\u53ef\u8fbe\u53f6\u5b50\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u4e3a\u4e86\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6211\u4eec\u7ee7\u7eed\u7edf\u8ba1\u4e24\u4e2a\u91cf\uff1a\u7b2c\u4e00\u4e2a\u5c31\u662f\u79bb\u67d0\u70b9\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u5b9a\u4e49\u4e3a$near[i]$\uff0c\u5e76\u4e14\u7edf\u8ba1\u6240\u6709\u8282\u70b9\u7684\u6b63\u5e38\u6df1\u5ea6$deep[i]$\u3002\n\n\u90a3\u4e48\uff0c\u6839\u636e\u9898\u610f\u6709\uff1a\n$$\nsize[i]=\\sum_{to\\in children[i]}(near[j]-deep[i]\\le k)\n$$\n\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u6df1\u641c\u5904\u7406\u51fa\u8fd9\u51e0\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u4ece\u5e95\u5230\u4e0a\u8fdb\u884c\u641c\u7d22\u6c42\u89e3\u66f4\u65b0\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1e6+10;\nconst int INF=1e9;\nint n,k;\nint tot,head[maxn],nxt[maxn<<1],to[maxn<<1];\nint deep[maxn],size[maxn],low[maxn];\nbool v[maxn];\nvoid add(int x,int y)\n{\n    to[++tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}\nvoid dfs1(int x,int d)\n{\n    deep[x]=d;\n    low[x]=INF;\n    if(!v[x])\n        low[x]=d;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int y=to[i];\n        dfs1(y,d+1);\n        low[x]=min(low[x],low[y]);\n    }\n}\nvoid dfs2(int x)\n{\n    if(!v[x])\n        size[x]=1;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int y=to[i];\n        dfs2(y);\n        if(low[y]-deep[x]<=k)\n        {\n            size[x]+=size[y];\n            size[y]=0;\n        }\n    }\n}\nint getsum(int x)\n{\n    int ret=0;\n    for(int i=head[x];i;i=nxt[i])\n        ret=max(ret,getsum(to[i]));\n    return ret+=size[x];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=2;i<=n;i++)\n    {\n        int a;\n        scanf(\"%d\",&a);\n        add(a,i);\n        v[a]=1;\n    }\n    dfs1(1,0);\n    dfs2(1);\n    printf(\"%d\",getsum(1));\n    return 0;\n}\n```\n\n",
        "postTime": 1572316168,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1065F \u3010Up and Down the Tree\u3011"
    }
]