[
    {
        "content": "~~\u8fd9\u4e48\u6c34\u7684round\u6211\u600e\u4e48\u6ca1\u6253\u554a\u3002~~\n\n\u770b\u5230\u8fd9\u79cd\u4ea4\u6362\u7684\u3001\u6539\u6570\u7684\u3001\u8f93\u51fa`yes`\u548c`no`\u7684\uff0c\u731c\u4e2a\u7ed3\u8bba\u7edd\u5bf9\u4e0d\u4e8f\u3002\n\n\u770b\u8fd9\u4e2a\u6837\u4f8b\uff1a\n> \u4f8b\u5982\u5bf9\u4e8e $a=\\{1,2,3,4,5,6\\}$\uff0c\u9009\u62e9$k=2$\uff0c\u90a3\u4e48\u4ea4\u6362\u540e\u4f1a\u5f97\u5230 $\\{5,6,3,4,1,2\\}$\n\n\u6ce8\u610f\u5230${5,2}$\u548c${1,6}$\u7684\u4f4d\u7f6e\u5173\u4e8e\u4e2d\u95f4\u90a3\u4e2a\u70b9\u5bf9\u79f0\uff0c\u4e8e\u662f\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u5927\u80c6\u7684\u60f3\u6cd5\n\n1. \u524d\u540e\u6570\u5b57\u662f\u4e00\u6837\u7684\uff08\u5e9f\u8bdd\n2. $i$\u548c$n-i+1$\u7684\u4f4d\u7f6e\u6362\u8fc7\u4e4b\u540e\u5e94\u8be5\u662f$j$\u548c$n-j+1$\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u4e24\u4e24\u4ea4\u6362\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u6109\u5feb\u5730\u5199\u51fa\u4e86code\uff1a\n\n```cpp\n#include <map>\n#include <iostream>\n\nusing namespace std;\n\nconst int MAXN = 5e3 + 5;\n\nmap<pair<int, int>, int> mp;\nint a[MAXN], b[MAXN];\n\nvoid Solve() {\n\tmp.clear();\n\tint n;\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tcin >> b[i];\n\t}\n\tfor(int i = 1; i <= (n >> 1); i++) {\n\t\tmp[make_pair(a[i], a[n - i + 1])]++;\n\t\tmp[make_pair(a[n - i + 1], a[i])]++;\n\t}\n\tif((n & 1) && a[(n + 1) >> 1] != b[(n + 1) >> 1]) {\n\t\tcout << \"No\" << endl;\n\t\treturn;\n\t}\n\tfor(int i = 1; i <= (n >> 1); i++) {\n\t\tif(!mp[make_pair(b[i], b[n - i + 1])]) {\n\t\t\tcout << \"No\" << endl;\n\t\t\treturn;\n\t\t}\n\t\tmp[make_pair(b[i], b[n - i + 1])]--;\n\t\tmp[make_pair(b[n - i + 1], b[i])]--;\n\t}\n\tcout << \"Yes\" << endl;\n}\n\nint main() {\n\tint t, n;\n\tcin >> t;\n\twhile(t--) {\n\t\tSolve();\n\t}\n}\n```\n\n\u7136\u540e\u4f60\u5c31AC\u4e86\u3002\n\n\u53ef\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u8003\u8651\u5230\u6211\u4eec\u6362\u6389\u4e86\u4e00\u4e2a$i\\le k$\uff0c\u90a3\u4e48\u539f\u6765$a_i$\u5c31\u53d8\u6210\u4e86$a_{i+(n-k)}$\uff0c$a_{n-i+1}$\u5c31\u53d8\u6210\u4e86$a_{n-i+1-(n-k)=k-i+1}$\u53c8\u56e0\u4e3a\u6709$i+(n-k)+k-i+1=n+1$\uff0c\u6545\u4e0a\u9762\u4e24\u4e2a\u662f\u5173\u4e8e\u4e2d\u5fc3\u70b9\u5bf9\u79f0\u7684\uff0c\u8fd9\u8bc1\u5b9e\u4e86\u6211\u4eec\u4e0a\u9762\u7684\u731c\u60f3\u3002",
        "postTime": 1592103985,
        "uid": 95103,
        "name": "KellyFrog",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1365F \u3010Swaps Again\u3011"
    },
    {
        "content": "\u8003\u8651\u6709\u4e00\u4e2a $k$\uff0c\u4f7f\u5f97 $a_{i}$ \u548c $a_{n-i+1}$ $(i\\leq k)$ \u80fd\u6539\u53d8\u4f4d\u7f6e\uff0c\u89c2\u5bdf\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u548c $n-i+1$ \u6539\u53d8\u540e\u7684\u4f4d\u7f6e\u3002\n\n$$\\large a_{i}->a_{i+(n-k)}$$\n$$\\large a_{n-i+1}->a_{n-i+1-(n-k)}$$\n\n\u53ef\u4ee5\u53d1\u73b0 $a_{i}$ \u548c $a_{n-i+1}$ \u79fb\u52a8\u7684\u4e0b\u6807\u957f\u5ea6\u662f\u4e00\u6837\u7684\u3002\u800c $a_{i}$ \u4e0e $a_{n-i+1}$ \u662f\u5bf9\u79f0\u7684\uff0c\u6545\u53ef\u4ee5\u5f97\u51fa\uff0c\u65e0\u8bba\u600e\u4e48\u4ea4\u6362\u5e8f\u5217 $a$ \u957f\u5ea6\u4e3a $k$ \u7684\u524d\u7f00\u4e0e\u540e\u7f00\uff0c\u539f\u672c\u7684 $a_{i}$ \u548c $a_{n-i+1}$ \u4f1a\u4e00\u76f4\u5bf9\u79f0\u3002\u6240\u4ee5\u5e8f\u5217 $a$ \u5728\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u80fd\u548c\u5e8f\u5217 $b$ \u76f8\u540c\u7684\u6761\u4ef6\u662f\uff1a\u5728 $a$ \u5e8f\u5217\u4e2d\u5bf9\u79f0\uff08\u5373 $a_{i}$ \u548c $a_{n-i+1}$\uff09\u7684\u4e24\u4e2a\u6570\uff0c\u5728 $b$ \u4e2d\u4e5f\u8981\u5bf9\u79f0\uff0c\u5373\u4e24\u4e2a\u5e8f\u5217\u7684\u5bf9\u79f0\u4f4d\u7f6e\u4e8c\u5143\u7ec4\u5206\u522b\u7ec4\u6210\u7684\u96c6\u5408\u662f\u76f8\u7b49\u7684\u3002\n\n\u5f53 $n$ \u4e3a\u5947\u6570\u65f6\uff0c\u53d1\u73b0 $a_{\\lceil \\frac{n}{2}\\rceil}$ \u8fd9\u4e2a\u4f4d\u7f6e\u65e0\u6cd5\u79fb\u52a8\u7684\u3002\u4f46\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u4e5f\u662f\u8981\u4e0e $b_{\\lceil \\frac{n}{2}\\rceil}$ \u5339\u914d\u7684\u3002\u5373\u5728\u5f53 $n$ \u4e3a\u5947\u6570\u65f6\uff0c\u8fd8\u9700\u8981\u5224\u65ad $a_{\\lceil \\frac{n}{2}\\rceil}$ \u4e0e $b_{\\lceil \\frac{n}{2}\\rceil}$ \u662f\u5426\u76f8\u7b49\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <vector>\n#include <stack>\n#include <map>\n#define ri register\n#define inf 0x7fffffff\n#define E (1)\n#define mk make_pair\n#define int long long\nusing namespace std; const int N=510;\ninline int read()\n{\n\tint s=0, w=1; ri char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') w=-1; ch=getchar(); }\n\twhile(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+(ch^48), ch=getchar(); return s*w;\n}\nvoid print(int x) {if(x<0) x=-x, putchar('-'); if(x>9) print(x/10); putchar(x%10+'0'); }\nint n,a[N],b[N];\nmap< pair<int, int>, int > Q;\nsigned main()\n{\n\tfor(ri int T=read();T;T--)\n\t{\n\t\tn=read();\n\t\tfor(ri int i=1;i<=n;i++) a[i]=read();\n\t\tfor(ri int i=1;i<=n/2;i++)\n\t\t{\n\t\t\tint p=min(a[i],a[n-i+1]),\n\t\t\t\tq=max(a[i],a[n-i+1]);\n\t\t\tQ[mk(p,q)]++;\n\t\t}\n\t\tfor(ri int i=1;i<=n;i++) b[i]=read();\n\t\tint flag=1;\n\t\tfor(ri int i=1;i<=n/2;i++)\n\t\t{\n\t\t\tint p=min(b[i],b[n-i+1]),\n\t\t\t\tq=max(b[i],b[n-i+1]);\n\t\t\tif(--Q[mk(p,q)]<0) {flag=0; break; }\n\t\t}\n\t\tif(n&1ll)\n\t\t{\n\t\t\tif(b[n/2+1]^a[n/2+1]) flag=0;\n\t\t}\n\t\t(flag)?puts(\"Yes\"):puts(\"No\");\n\t\tQ.clear();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1591756467,
        "uid": 98618,
        "name": "Provicy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1365F"
    },
    {
        "content": "\u4e4d\u4e00\u770b\u6beb\u65e0\u601d\u8def\u7684\u4e00\u9053\u9898\u3002\n\n\u5047\u8bbe\u6211\u4eec\u9009\u62e9\u4ea4\u6362\u7684\u524d\u540e\u7f00\u957f\u5ea6\u4e3a$k$\uff0c\u6211\u4eec\u8003\u8651\u539f\u672c\u5bf9\u79f0\u7684\u4e24\u4e2a\u70b9$i$ \u548c $n-i+1$\uff08$i \\leq k$\uff09\u73b0\u5728\u600e\u4e48\u6837\u4e86\uff1a\n- $i \\Rightarrow n-k+i$\n- $n-i+1 \\Rightarrow k-i+1$\n\n\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\uff0c\u4ed6\u4eec\u8fdb\u884c\u4ea4\u6362\u540e\u8fd8\u662f\u5bf9\u79f0\u7684\uff01\uff08\u4ecd\u7136\u6ee1\u8db3$i+j=n+1$\uff09\n\n~~\u4e8e\u662f\u6211\u4eec\u5927\u80c6\u731c\u6d4b~~\uff1a\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u5e8f\u5217\u7684\u5bf9\u79f0\u4f4d\u7f6e\uff08\u6211\u4eec\u628a\u4ed6\u4eec\u770b\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff09\u7ec4\u6210\u7684\u96c6\u5408\u76f8\u540c\u65f6\uff0c\u8fd9\u4e24\u4e2a\u5e8f\u5217\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u5e94\u8be5\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u3002\n\n\u90a3\u4ee3\u7801\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\uff1a\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<map>\n\nusing namespace std;\n\nconst int N=509;\nint n,a[N],b[N];\nmap <pair<int,int>,int> bin;\n\nvoid init()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    for (int i=1;i<=n;i++)\n        scanf(\"%d\",&b[i]);\n    bin.clear();\n}\n\nvoid work()\n{\n    int T;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        init();\n        int flag=1;\n        if((n&1)&&a[n+1>>1]!=b[n+1>>1])\n        {\n        \tputs(\"NO\");\n        \tcontinue;\n        }\n        for (int i=1;i<=(n+1)/2;i++)\n            bin[make_pair(min(a[i],a[n-i+1]),max(a[i],a[n-i+1]))]++;\n        for (int i=1;i<=(n+1)/2;i++)\n            if((--bin[make_pair(min(b[i],b[n-i+1]),max(b[i],b[n-i+1]))])<0)\n                flag=0;\n        puts(flag?\"Yes\":\"No\");\n    }\n}\n\nint main()\n{\n    work();\n    return 0;\n}\n```",
        "postTime": 1591728572,
        "uid": 31646,
        "name": "\u67f3\u6697\u82b1\u660e",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1365F \u3010Swaps Again\u3011"
    },
    {
        "content": "\u7ed3\u8bba\u9898\uff0c\u522b\u7684\u9898\u89e3\u90fd\u6ca1\u7ed9\u8bc1\u660e\uff0c\u6211\u6765\u8bc1\u4e00\u4e0b\u5427\u3002\n\n\u89c2\u5bdf\u5230\u6bcf\u6b21\u64cd\u4f5c\u4e2d\u5bf9\u4e8e\u6240\u6709\u6ee1\u8db3 $i\\le \\lfloor\\frac{n}{2}\\rfloor$ \u7684 $i$ \u90fd\u8fdb\u884c\u4e86  $\\operatorname{swap}(a_i,a_{n-k+i})$\uff0c\u800c\u548c $a_i$ \u4ee5\u5e8f\u5217\u4e2d\u70b9\u5bf9\u79f0\u7684\u5143\u7d20\u662f $a_{n-i+1}$\uff0c\u64cd\u4f5c\u4e2d\u540c\u65f6\u8fdb\u884c\u4e86 $\\operatorname{swap}(a_{k-i+1},a_{n-i+1})$\uff0c\u6240\u4ee5 $(a_i,a_{n-i+1})$ \u548c $(a_{k-i+1},a_{n-k+i})$ \u5728\u4ea4\u6362\u4e4b\u540e\u4ecd\u7136\u4ee5\u5e8f\u5217\u4e2d\u70b9\u5bf9\u79f0\u3002\n\n\u90a3\u4e48\u628a $a$ \u201c\u5bf9\u6298\u201d\uff0c\u628a $(a_i,a_{n-i+1})$ \u8fd9\u4e00\u5bf9\u8bb0\u4f5c $b_i$\uff0c\u90a3\u4e48\u6bcf\u6b21\u64cd\u4f5c\u76f8\u5f53\u4e8e\u662f\u4ea4\u6362\u4e86\u6240\u6709\u6ee1\u8db3 $i\\le \\lfloor\\frac{k}{2}\\rfloor$  \u7684 $b_i$ \u548c $b_{k-i+1}$\uff0c\u5e76\u4e14\u6240\u6709\u6ee1\u8db3 $i\\le k$ \u7684 $b_i$ \u7ec4\u5185\u987a\u5e8f\u90fd\u88ab\u4ea4\u6362\u4e86\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7ec4\u5185\u987a\u5e8f\u662f\u53ef\u4ee5\u968f\u4fbf\u4ea4\u6362\u7684\uff0c\u53ea\u8981\u505a\u4e00\u6b21 $k=i$\uff0c\u4e00\u6b21 $k=1$\uff0c\u4e00\u6b21 $k=i$ \u5373\u53ef\u3002\n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\n\n> \u6709\u4e00\u4e2a $n$ \u7684\u6392\u5217 $p$\uff0c\u8bf7\u95ee\u80fd\u5426\u901a\u8fc7\u4efb\u610f\u6b21\u4ea4\u6362\u6ee1\u8db3 $1\\le i\\le \\lfloor\\frac{k}{2}\\rfloor$ \u7684 $p_i$ \u548c $p_{k-i+1}$\uff0c\u5f97\u5230 $n$ \u7684\u53e6\u5916\u7684\u4e00\u4e2a\u6392\u5217 $b$\uff1f\n\n\u8fd9\u4e2a\u95ee\u9898\u5bf9\u4e8e\u4efb\u610f $p,b$ \u7684\u7b54\u6848\u90fd\u662f\u53ef\u4ee5\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n****\n\n- \u5f15\u7406\uff1a\u53ef\u4ee5\u4f7f\u7528 $2$ \u6b21\u64cd\u4f5c\u5c06 $p_1,p_2,p_3,\\dots,p_i$ \u53d8\u4e3a $p_i,p_1,p_2,\\dots p_{i-1}$\uff0c\u5373\u8ba9\u67d0\u4e2a\u524d\u7f00\u5f80\u540e\u5faa\u73af\u79fb\u4f4d\u4e00\u4f4d\u3002\n\n  \u8bc1\u660e\uff1a\u4e00\u6b21 $k=i-1$\uff0c\u4e00\u6b21 $k=i$ \u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u60f3\u8981\u8bc1\u660e\u4ece\u4efb\u610f $p$ \u51fa\u53d1\u53ef\u4ee5\u5230\u8fbe\u4efb\u610f $b$\uff0c\u53ea\u8981\u8bc1\u660e\u80fd\u4ea4\u6362 $p$ \u4e2d\u4efb\u610f\u76f8\u90bb\u4e24\u9879\u5373\u53ef\u3002\n\n\u8003\u8651\u76f8\u90bb\u7684\u4e24\u9879 $i,i+1$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u505a\u4e00\u6b21 $k=i-1$ \u7684\u64cd\u4f5c\uff0c\u628a $p_{[1,i+1]}$ \u5f80\u540e\u5faa\u73af\u79fb\u4f4d\u4e24\u4f4d\uff0c\u518d\u505a\u4e00\u6b21 $k=i+1$ \u7684\u64cd\u4f5c\u5373\u53ef\u4ea4\u6362 $p_i,p_{i+1}$\uff0c\u5f97\u8bc1\u3002\n\n****\n\n\u6240\u4ee5\u76f4\u63a5\u5f00\u6876\u505a\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <map>\n\nusing namespace std;\n\nconst int S=505;\n\nint n,a[S],b[S];\nmap<int,map<int,int> > mp;\n\ninline void slove()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&b[i]);\n\tif((n&1)&&a[n/2+1]!=b[n/2+1])\n\t{\n\t\tputs(\"No\");\n\t\treturn;\n\t}\n\tif(n==1)\n\t{\n\t\tputs(\"Yes\");\n\t\treturn;\n\t}\n\tmp.clear();\n\tfor(int i=1;i<=n/2;i++) mp[a[i]][a[n-i+1]]++,mp[a[n-i+1]][a[i]]++;\n\tfor(int i=1;i<=n/2;i++)\n\t{\n\t\tif(mp[b[i]][b[n-i+1]]==0)\n\t\t{\n\t\t\tputs(\"No\");\n\t\t\treturn;\n\t\t}\n\t\tmp[b[i]][b[n-i+1]]--;\n\t\tmp[b[n-i+1]][b[i]]--;\n\t}\n\tputs(\"Yes\");\n}\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--) slove();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1660881110,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "CF1365F Swaps Again \u505a\u9898\u8bb0\u5f55 & \u9898\u89e3"
    },
    {
        "content": "## CF1365F 2100\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u51fa\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $a,b$\uff0c\u4f60\u9700\u8981\u5224\u65ad\u80fd\u5426\u5728\u6570\u6b21\u64cd\u4f5c\u540e\u4f7f\u5f97 $a$ \u4e0e $b$ \u76f8\u540c\u3002\n\n\u64cd\u4f5c\u662f\u6307\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a $k(1\\le k\\le\\lfloor\\frac n2\\rfloor)$\uff0c\u4e4b\u540e\u4ea4\u6362 $a$ \u7684\u957f\u5ea6\u4e3a $k$ \u7684\u524d\u7f00\u548c\u957f\u5ea6\u4e3a $k$ \u7684\u540e\u7f00\u3002\n\n\u4f8b\u5982\u5bf9\u4e8e $a=\\{1,2,3,4,5,6\\}$\uff0c\u9009\u62e9 $k=2$\uff0c\u90a3\u4e48\u4ea4\u6362\u540e\u4f1a\u5f97\u5230 $\\{5,6,3,4,1,2\\}$\u3002\n\n\n\n### \u601d\u8def\n\n\u6709\u5982\u4e0b\u6570\u7ec4\uff1a$a_1,a_2,a_3,a_4,a_5,a_6,a_7$\u3002\n\n\u82e5\u4ea4\u6362\u5de6\u4e09\u548c\u53f3\u4e09\uff0c\u5219\u53d8\u4e3a $a_4,a_5,a_6,a_7,a_1,a_2,a_3$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u5f00\u59cb\u5173\u4e8e\u4e2d\u5fc3\u5bf9\u79f0\u7684\u6bcf\u5bf9\u70b9\u4ea4\u6362\u540e\u4f9d\u7136\u5173\u4e8e\u4e2d\u5fc3\u5bf9\u79f0\u3002\n\n\u6240\u4ee5\uff0c\u5224\u65ad $b$ \u6570\u7ec4\u4e2d\u5173\u4e8e\u4e2d\u5fc3\u5bf9\u79f0\u7684\u6bcf\u5bf9\u70b9\u662f\u5426\u5728 $a$ \u6570\u7ec4\u4e2d\u4e5f\u5173\u4e8e\u4e2d\u5fc3\u5bf9\u79f0\uff0c\u5373\u53ef\u3002\n\n\n\n### \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int MAXN=510;\nint T,n,a[MAXN],b[MAXN];\nbool flag;\nmap<pair<int,int>,int> book;\nsigned main()\n{\n\tscanf(\"%lld\",&T);\n\twhile(T--)\n\t{\n\t\tflag=0;\n\t\tscanf(\"%lld\",&n);\n\t\tfor(int i=1;i<=n;i++)  scanf(\"%lld\",&a[i]);\n\t\tfor(int i=1;i<=n;i++)  scanf(\"%lld\",&b[i]);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(a[i]>a[n-i+1])  swap(a[i],a[n-i+1]);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(b[i]>b[n-i+1])  swap(b[i],b[n-i+1]);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)  book[make_pair(a[i],a[n-i+1])]++;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(!book[make_pair(b[i],b[n-i+1])])\n\t\t\t{\n\t\t\t\tputs(\"No\");\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse  book[make_pair(b[i],b[n-i+1])]--;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)  book[make_pair(a[i],a[n-i+1])]=0;\n\t\tif(!flag)  puts(\"Yes\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1659086545,
        "uid": 457247,
        "name": "zsyyyy",
        "ccfLevel": 6,
        "title": "CF1365F\u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u9762 $k$ \u4e2a\u5b57\u7b26\u548c\u540e\u9762\u7684 $k$ \u4e2a\u8fdb\u884c\u8c03\u6362\uff0c\u7136\u540e\u5728\u53ea\u7528\u8fd9\u79cd\u64cd\u4f5c\u7684\u524d\u63d0\u4e0b\uff08**\u4e0d\u9650\u64cd\u4f5c\u6b21\u6570**\uff09\uff0c\u5224\u65ad\u5c06\u5176\u53d8\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u53ef\u884c\u6027\n\n## \u5206\u6790\n\n\u5bf9\u4e8e\u8fd9\u4e00\u79cd\u4e0d\u9650\u6b21\u6570\u7684\u95ee\u9898\uff0c\u901a\u5e38\u5c31\u662f\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7ed3\u8bba\u3002\u6211\u4eec\u81ea\u5df1\u624b\u52a8\u6a21\u62df\u51e0\u7ec4\u6570\u636e\n```\n1 2 3 4 5 6 -> 1 5 3 4 2 6 (yes)\n* *     * *\n5 6 3 4 1 2\n*         *\n2 6 3 4 1 5\n* *     * *\n1 5 3 4 2 6 \n```\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5bf9\u79f0\u7684\u4e24\u4e2a\u5b57\u7b26\u90fd\u662f\u53ef\u4ee5\u901a\u8fc7\u9898\u76ee\u4e2d\u7ed9\u7684\u64cd\u4f5c\u6765\u8c03\u6362\u4f4d\u7f6e\u7684\u3002\n\n\u5177\u4f53\u64cd\u4f5c\uff1a\u5047\u8bbe\u8981\u6362\u7684\u4e3a $str_i,str_{n-i+1}$\uff0c\u6211\u4eec\u4ee4 $k=i$ \u628a $str_i, str_{n-i+1}$ \u653e\u5230\u5b57\u7b26\u4e32\u7684\u4e24\u8fb9\uff0c\u7136\u540e\u4ee4 $k=1$ \u8fdb\u884c\u4ea4\u6362\u3002\u7136\u540e\u518d\u4ee4 $k=i$ \u6362\u56de\u53bb\u5c31\u53ef\u4ee5\u4e86 \n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u5b57\u7b26\u5173\u8054\u8d77\u6765\uff0c\u5728 $a$ \u6570\u7ec4\u4e2d\u6dfb\u52a0\u8fd9\u79cd\u5b57\u7b26\u5bf9\uff0c\u7136\u540e $b$ \u6570\u7ec4\u4e2d\u8fdb\u884c\u5220\u9664\u3002\u5982\u679c\u51fa\u73b0\u4e86\u6ca1\u6709\u7edf\u8ba1\u8fc7\u7684\u7684\u5b57\u7b26\u5bf9\uff0c\u8bf4\u660e\u4e0d\u80fd\u8f6c\u6362\u3002\n\n\u5b9e\u73b0\u65b9\u9762\uff0c\u6211\u4eec\u7528 STL \u4e2d\u7684 `map` \u7c7b\u6765\u5b9e\u73b0\u5173\u8054\u4e24\u4e2a\u5b57\u7b26\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <map>\nusing namespace std;\nint a[510], b[510];\nmap<pair<int, int>, int> mp;\nint main()\n{\n    ios::sync_with_stdio(false);\n    int T, n;\n    cin >> T;\n    while (T--)\n    {\n        n = 0;\n        memset(a, 0, sizeof(a));\n        memset(b, 0, sizeof(b));\n        cin >> n;\n        for (int i = 1; i <= n; i++)\n            cin >> a[i];\n        for (int i = 1; i <= n; i++)\n            cin >> b[i];\n        if ((n % 2 == 1) && a[n + 1 >> 1] != b[n + 1 >> 1])\n        {\n            //\u7279\u5224\u5947\u6570\u7684\u60c5\u51b5\uff0c\u90a3\u65f6\u6700\u4e2d\u95f4\u7684\u5b57\u7b26\u52a8\u4e0d\u4e86\n            //\u5fc5\u987b\u8981\u6c42a,b\u4e2d\u7684\u4e2d\u95f4\u5b57\u7b26\u7684\u4e00\u6837\n            cout << \"No\\n\";\n            continue;\n        }\n        mp.clear();\n        for (int i = 1; i <= (n >> 1); i++)\n        {\n            mp[make_pair(a[i], a[n - i + 1])] ++;\n            mp[make_pair(a[n - i + 1], a[i])] ++;\n        }\n        int fl = 0;\n        for (int i = 1; i <= (n >> 1); i ++)\n        {\n            if(mp[make_pair(b[i], b[n - i + 1])] == 0)\n            {\n                cout << \"No\\n\";\n                fl = 1;\n                break;\n            }\n            mp[make_pair(b[i], b[n - i + 1])] --;\n            mp[make_pair(b[n - i + 1], b[i])] --;\n        }\n        if(!fl) cout << \"Yes\\n\";\n    }\n    return 0;\n}\n```\n\n## \u603b\u7ed3\n\n\u6253\u4e86\u5f88\u591a\u573aCF~~\u8fd8\u662f\u5f88\u83dc~~\uff0c\u50cf\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u7c7b\u9898\u76ee\uff0c\u7279\u522b\u662f\u4e0d\u9650\u6b21\u6570\u7684\uff0c\u5927\u90e8\u5206\u662f\u7ed3\u8bba\u9898\uff0c\u5e0c\u671b\u6211\u7684\u9898\u89e3\u80fd\u5bf9\u5927\u5bb6\u7684OI\u5b66\u4e60\u8d77\u5230\u5e2e\u52a9\u4f5c\u7528\u3002",
        "postTime": 1631109944,
        "uid": 112275,
        "name": "Gloaming",
        "ccfLevel": 0,
        "title": "CF1365F\u9898\u89e3"
    },
    {
        "content": "[\u66f4\u4f73\u7684\u9605\u8bfb\u6548\u679c](https://vipblog.github.io/fFLyfTS-c/)\n\n## description\uff1a\n\n\u628a\u4e00\u4e2a\u6570\u5b57\u4e32\u8fdb\u884c\u82e5\u5e72\u6b21\u524d\u7f00\u4e0e\u5bf9\u5e94\u957f\u5ea6\u7684\u540e\u7f00\u4ea4\u6362\u4f4d\u7f6e\u7684\u64cd\u4f5c\uff0c\u95ee\u662f\u5426\u80fd\u591f\u53d8\u6210\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n\n## solution\uff1a\n\n\u89c2\u5bdf swap \u65f6\u7684\u6027\u8d28\uff1a\u4efb\u610f\u4e00\u5bf9\u539f\u672c\u5728\u5bf9\u79f0\u4f4d\u7f6e\u7684\u6570\u5728 swap \u540e\u4ecd\u7136\u4f1a\u4fdd\u6301\u5bf9\u79f0\u3002\n\n\u56e0\u4e3a\u4ea4\u6362 $k$ \u957f\u5ea6\u7684\u524d\u7f00\u4e5f\u5c31\u4f1a\u5bf9\u5e94 $k$ \u957f\u5ea6\u7684\u540e\u7f00\uff0c\u4e00\u7ec4\u5bf9\u79f0\u4f4d\u7f6e\u7684\u6570\u6c38\u8fdc\u4f1a\u8981\u4e48\u540c\u65f6\u4e92\u6362\u4f4d\u7f6e\uff0c\u8981\u4e0d\u90fd\u4e0d\u53d8\u3002\n\n\u8fd9\u6837\u5c31\u7b80\u5316\u4e86\u9898\u76ee\uff0c\u6211\u4eec\u8003\u8651\u628a\u6bcf\u4e00\u7ec4\u5bf9\u79f0\u6570\u7684\u4f4d\u7f6e\u90fd\u5b58\u5230\u4e00\u4e2a map \u4e2d\uff0c\u76f4\u63a5 check \u5bf9\u6570\u4e0a\u662f\u5426\u5bf9\u7b49\u5373\u53ef\u3002\n\n## code\uff1a\n\n\u4e0a\u4e00\u4e2a\u7248\u672c\u8d34\u9519\u4ee3\u7801\u4e86\uff0c\u611f\u8c22\u8bc4\u8bba\u533a 1 \u697c\u7684\u795e\u4ed9\u6307\u51fa\uff0c\u5df2\u66f4\u6362\u3002\n\n```cpp\n#include<cstdio>\n#include<map>\n#include<algorithm> \nusing namespace std;\nint a[505],b[505];\nmap<pair<int,int>,int>mp;\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n        mp.clear();\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&b[i]);\n\t\t}\n\t\tif(n%2==1&&a[(n+1)/2]!=b[(n+1)/2])\n\t\t{\n\t\t\tprintf(\"No\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i=1;i<=(n+1)/2;i++)\n\t\t{\n\t\t\tmp[make_pair(min(a[i],a[n-i+1]),max(a[i],a[n-i+1]))]++;\n\t\t}\n\t\tint flag=0;\n\t\tfor(int i=1;i<=(n+1)/2;i++)\n\t\t{\n\t\t\t//mp[make_pair(min(b[i],b[n-i+1]),max(b[i],b[n-i+1]))]--;\n\t\t\tif(--mp[make_pair(min(b[i],b[n-i+1]),max(b[i],b[n-i+1]))]<0)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1591792827,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1365F \u3010Swaps Again\u3011"
    }
]