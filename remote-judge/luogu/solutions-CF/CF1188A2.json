[
    {
        "content": "## [CF1188A2](https://www.luogu.com.cn/problem/CF1188A2)  Add on a Tree: Revolution\n\n\u6ce8\u610f\u9898\u76ee\u4e2d\u6bcf\u6761\u8fb9\u76ee\u6807\u6743\u503c\u4e92\u4e0d\u76f8\u540c\uff0c\u4e8e\u662f\u53ef\u4ee5\u63a8\u51fa\u7ed3\u8bba\uff1a\u6709\u89e3\u5f53\u4e14\u4ec5\u5f53\u6811\u4e2d\u4e0d\u5b58\u5728\u5ea6\u6570\u4e3a $2$ \u7684\u70b9\u3002\n\n\u5fc5\u8981\u6027\u5f88\u597d\u8bc1\uff0c\u5ea6\u6570\u4e3a\u4e8c\u7684\u70b9\u4e0d\u4f1a\u662f\u53f6\u5b50\uff0c\u90a3\u4e48\u6bcf\u6761\u7ecf\u8fc7\u8be5\u70b9\u4fee\u6539\u7684\u8def\u5f84\u4e00\u5b9a\u540c\u65f6\u7ecf\u8fc7\u8be5\u70b9\u7684\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u8fd9\u4e24\u6761\u8fb9\u589e\u51cf\u4e00\u81f4\uff0c\u4f46\u76ee\u6807\u4e0d\u540c\uff0c\u663e\u7136\u65e0\u89e3\u3002\n\n\u5145\u5206\u6027\u901a\u8fc7\u5982\u4e0b\u6784\u9020\u8bc1\u660e\uff0c\u5373\u8bc1\u660e\u5f53\u539f\u6811\u4e2d\u4e0d\u5b58\u5728\u5ea6\u6570\u4e3a $2$\u200b \u7684\u70b9\u65f6\uff0c\u4e00\u5b9a\u6709\u89e3\uff1a\n\n\u73b0\u5728\u6811\u4e2d\u4efb\u610f\u4e00\u975e\u53f6\u5b50\u8282\u70b9\u81f3\u5c11\u5ea6\u6570\u4e3a $3$\uff0c\u6211\u4eec\u4ee4\u67d0\u4e00\u53f6\u5b50\u4f5c\u4e3a\u6839\uff0c\u90a3\u4e48\u975e\u53f6\u5b50\u8282\u70b9\u5c31\u81f3\u5c11\u6709\u4e24\u68f5\u5b50\u6811\uff0c\u6211\u4eec\u4efb\u53d6\u70b9 $i$\u200b \u4e24\u4e0d\u540c\u5b50\u6811\u4e2d\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u8bb0\u4f5c $ls_i,rs_i$\u200b\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\uff0c\u7ed9\u4efb\u610f\u70b9 $i$ \u5230 $root$ \u7684\u8def\u5f84\u4e0a\u540c\u65f6\u589e\u51cf\u4e00\u4e2a\u5076\u6570\u6743\u503c $val$\uff1a\n\n- \u5bf9\u4e8e $i$\u200b \u662f\u53f6\u5b50\uff0c\u539f\u672c\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u505a\u5230\uff0c\u76f4\u63a5\u64cd\u4f5c $\\text {Add}(root,i,val)$\u200b \u5373\u53ef\uff1b\n\n- \u5bf9\u4e8e\u5176\u5b83\u60c5\u51b5\uff0c\u8003\u8651\uff1a\n\n  1. \u64cd\u4f5c $\\text {Add}(root,ls_i,\\frac {val}2)$\uff1b\n  2. \u64cd\u4f5c $\\text {Add}(root,rs_i,\\frac{val}2)$\uff1b\n  3. \u64cd\u4f5c $\\text {Add}(ls_i,rs_i,-\\frac{val}2)$\u3002\n\n  \u56e0\u4e3a $val$ \u4e3a\u5076\u6570\uff0c\u52a0\u51cf $\\frac{val}2$ \u53ef\u4ee5\u6267\u884c\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5c31\u76f8\u5f53\u4e8e $\\text {Add}(root,i,val)$\uff0c\u6ca1\u6709\u5bf9\u5176\u4ed6\u70b9\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u7ed9\u4efb\u610f\u70b9\u5230 $root$ \u4e4b\u95f4\u8def\u5f84\u589e\u52a0\u4e00\u4e2a\u5076\u6570\u6743\u503c\uff0c\u4e8e\u662f\u6211\u4eec\u81ea\u4e0b\u800c\u4e0a\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u5411\u4e0a\u7684\u8fb9\uff0c\u5373 $dfs$ \u5e76\u5728\u56de\u6eaf\u5230 $fa_i$ \u65f6\u8ba9 $i$ \u7684\u7236\u4eb2\u8fb9\u6ee1\u8db3\uff0c\u7531\u4e8e\u76ee\u6807\u8fb9\u6743\u5168\u4e3a\u5076\u6570\uff0c\u4e2d\u95f4\u8fc7\u7a0b\u4e5f\u90fd\u662f\u52a0\u51cf\u5076\u6570\u6743\u503c\uff0c\u6240\u4ee5\u56fe\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u5947\u6570\u6743\u503c\u65e0\u6cd5\u64cd\u4f5c\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u6784\u9020\u627e\u5230\u4e00\u7ec4\u89e3\u3002\n\n---\n### Code\n\n```cpp\n#include<bits/stdc++.h>\n#define mkr make_pair\n#define pb push_back\nusing namespace std;\nconst int N=1e3+10;\n\nint n,rt,val[N][N];\nvector<int>e[N];\nint ch[N][2],fa[N];\nvector<pair<pair<int,int>,int> >ans;\n\nvoid modify(int y,int v){\n\tif(!v) return ;\n\tif((int)e[y].size()!=1){\n\t\tint w=v>>1;\n\t\tans.pb(mkr(mkr(rt,ch[y][0]),w));\n\t\tans.pb(mkr(mkr(rt,ch[y][1]),w));\n\t\tans.pb(mkr(mkr(ch[y][0],ch[y][1]),-w));\n\t}else ans.pb(mkr(mkr(rt,y),v));\n\twhile(y!=rt){\n\t\tval[fa[y]][y]-=v,val[y][fa[y]]-=v;\n\t\ty=fa[y];\n\t}\n}\n\nvoid dfs(int u,int fath){\n\tfa[u]=fath;\n\tif((int)e[u].size()==1) ch[u][0]=u;\n\tfor(auto v:e[u])\n\t\tif(v!=fath) dfs(v,u),ch[u][ch[u][0]>0]=ch[v][0];\n}\n\nvoid solve(int u){\n\tfor(auto v:e[u]) if(fa[u]!=v) solve(v);\n\tif(u==rt) return ;\n\tmodify(u,val[u][fa[u]]);\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,u,v,w;i<n;i++){\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tval[v][u]=val[u][v]=w;\n\t\te[u].push_back(v),e[v].push_back(u);\n\t}\n\tfor(int i=1;i<=n;i++) if((int)e[i].size()==2) return puts(\"NO\")&0;\n\tputs(\"YES\");\n\tfor(int i=1;i<=n;i++) if((int)e[i].size()==1) {rt=i;break;}\n\tdfs(rt,0);\n\tsolve(rt);\n\tprintf(\"%d\\n\",(int)ans.size());\n\tfor(auto it:ans) printf(\"%d %d %d\\n\",it.first.first,it.first.second,it.second);\n\treturn 0;\n}\n```\n",
        "postTime": 1659064893,
        "uid": 304532,
        "name": "DJRzjl",
        "ccfLevel": 7,
        "title": "CF1188A2"
    },
    {
        "content": "[\u6b22\u8fce\u6765\u770b\u6211\u5bf9\u8fd9\u573a div2 \u5199\u7684\u5b8c\u6574\u9898\u89e3\uff01](https://www.cnblogs.com/zkdxl/p/13424885.html)\n\n### $\\text{Problem}$\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u5e26\u8fb9\u6743\u7684\u6811\uff0c\u4e00\u5f00\u59cb\u6bcf\u6761\u8fb9\u6743\u503c\u5747\u4e3a $0$\u3002\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5e76\u4e14\u628a\u8fd9\u4e24\u4e2a\u70b9\u7684\u6240\u6709\u8fb9\u52a0\u4e0a\u6216\u51cf\u53bb\u4e00\u4e2a\u6574\u6570\u3002\u95ee\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u4f7f\u5f97\u6240\u6709\u8fb9\u6743\u90fd\u53d8\u6210\u76ee\u6807\u8fb9\u6743\uff0c\u76ee\u6807\u8fb9\u6743\u4e92\u4e0d\u76f8\u540c\u4e14\u90fd\u4e3a\u5076\u6570\u3002\u5e76\u8f93\u51fa\u4e00\u7ec4\u5408\u6cd5\u64cd\u4f5c\u3002\n\n### $\\text{Solution}$\uff1a\n\n\u8003\u8651\u5230\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\u7684\u6811\uff0c\u4e00\u5b9a\u6ee1\u8db3\u5b58\u5728\u4e00\u7ec4\u8fb9 $(x,y)$\uff0c\u4f7f\u5f97\u8fb9 $x$ \u548c\u8fb9 $y$ \u7684\u6743\u503c\u6c38\u8fdc\u76f8\u540c\uff0c\u5373\u5b83\u4eec\u540c\u65f6\u88ab\u6539\u53d8\u6216\u540c\u65f6\u4e0d\u53d8\u3002\u6613\u53d1\u73b0\u5f53\u5b58\u5728\u4e00\u4e2a\u5ea6\u4e3a $2$ \u7684\u70b9\u65f6\u8fd9\u68f5\u6811\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\u3002\u5426\u5219\uff0c\u5f53\u4e0d\u5b58\u5728\u5ea6\u4e3a $2$ \u7684\u70b9\u65f6\uff0c\u5bf9\u4e8e\u6240\u6709\u5ea6\u5927\u4e8e\u7b49\u4e8e $3$ \u7684\u70b9\uff0c\u4e00\u5b9a\u53ef\u4ee5\u4ece\u4e0e\u5b83\u76f8\u90bb\u7684\u8fb9\u4e2d\u4efb\u9009\u7ec4\u5408\u8fdb\u884c\u6539\u53d8\u8fb9\u6743\uff0c\u53ef\u4ee5\u5f97\u5230\u8fb9\u6743\u4efb\u610f\u7ec4\u5408\u7684\u6811\u3002\n\n\u8003\u8651\u94a6\u5b9a\u4e00\u4e2a\u5ea6\u6570\u4e3a $1$ \u7684\u70b9\u4e3a\u6839\u8282\u70b9\u3002\u4ece\u4e0b\u5f80\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u5f53\u9047\u5230\u4e00\u4e2a\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e $3$ \u7684\u70b9 $x$ \u65f6\uff0c\u5b83\u7684\u5b50\u6811\u5185\u6240\u6709\u8fb9\u6743\u5df2\u7ecf\u88ab\u4fee\u6539\u5b8c\u6bd5\uff0c\u73b0\u5728\u8981\u4fee\u6539\u7684\u662f $x$ \u4e0e $fa_{x}$ \u4e4b\u95f4\u8fd9\u6761\u8fb9\u6743\u7684\u503c\u3002\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9 $x$\uff0c\u6211\u4eec\u90fd\u628a\u5b83\u4e0e\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u52a0\u4e0a $x$ \u4e0e $fa_{x}$ \u4e4b\u95f4\u7684\u76ee\u6807\u8fb9\u6743 $w$\u3002\u90a3\u4e48 $fa_{x}$ \u8981\u4e48\u662f\u6839\u8282\u70b9\uff0c\u8981\u4e48\u662f\u4e00\u4e2a\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e $3$ \u7684\u8282\u70b9\u3002\u5bf9\u4e8e\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e $3$ \u7684\u8282\u70b9 $y$\uff0c\u8bb0 $y$ \u4e0e $fa_{y}$ \u4e4b\u95f4\u8fd9\u6761\u8fb9\u6743\u6743\u503c\u4e3a $w$\uff0c$y$ \u4e0e\u5b83\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u4e4b\u548c\u4e3a $tot$\u3002\u968f\u4fbf\u4ece $y$ \u7684\u5b50\u6811\u4e2d\u53d6\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9 $p,q$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u628a $p$ \u548c $q$ \u5230 $root$ \u7684\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u52a0\u4e0a $(w-tot)/2$\uff0c\u518d\u628a $p$ \u5230 $q$ \u7684\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u52a0\u4e0a $(tot-w)/2$ \u5373\u53ef\u3002\u7531\u4e8e\u6240\u6709\u8fb9\u6743\u5747\u4e3a\u5076\u6570\uff0c\u6240\u4ee5\u6b64\u505a\u6cd5\u53ef\u884c\u3002\n\n### $\\text{Code}$\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <vector>\n#include <stack>\n#include <map>\n#include <bitset>\n#define ri register\n#define inf 0x7fffffff\n#define E (1)\n#define mk make_pair\n#define int long long\n//#define double long double\nusing namespace std; const int N=400010;\ninline int read()\n{\n    int s=0, w=1; ri char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') w=-1; ch=getchar(); }\n    while(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+(ch-'0'), ch=getchar();\n    return s*w;\n}\nvoid print(int x) { if(x<0) x=-x, putchar('-'); if(x>9) print(x/10); putchar(x%10+'0'); }\nint n,deg[N],root,cnt; struct Node{ int a,b,c; }h[N];\nint head[N],maxE; struct Edge{int nxt,to,rdis; }e[N<<1];\ninline void Add(int u,int v,int w) { e[++maxE].nxt=head[u]; head[u]=maxE; e[maxE].to=v; e[maxE].rdis=w; }\nint DFS(int x,int fa,int w)\n{\n    int res;\n    int p,q; res=p=q=0;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        if(e[i].to==fa) continue;\n        res+=e[i].rdis;\n        int gt=DFS(e[i].to,x,e[i].rdis);\n        (p?q:p)=gt;\n    }\n    if(x==root) return p;\n    if(!p) p=x, h[++cnt]=(Node){p,root,w};\n    else\n    {\n        h[++cnt]=(Node){p,q,(res-w)/2};\n        h[++cnt]=(Node){p,root,(w-res)/2};\n        h[++cnt]=(Node){q,root,(w-res)/2};\n    }\n    return p;\n}\nsigned main()\n{\n    n=read();\n    for(ri int i=1;i<n;i++)\n    {\n        int u,v,w;\n        u=read(), v=read(), w=read();\n        Add(u,v,w), Add(v,u,w);\n        deg[u]++, deg[v]++;\n    }\n    for(ri int i=1;i<=n;i++)\n    {\n        if(deg[i]==2) { puts(\"NO\"); return 0; }\n        if(deg[i]==1) root=i;\n    }\n    puts(\"YES\");\n    DFS(root,0,0); printf(\"%lld\\n\",cnt);\n    for(ri int i=1;i<=cnt;i++) printf(\"%lld %lld %lld\\n\",h[i].a,h[i].b,h[i].c);\n    return 0;\n}\n```\n",
        "postTime": 1596434562,
        "uid": 98618,
        "name": "Provicy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1188A2"
    },
    {
        "content": "n=2\u65f6\u7279\u5224\u3002\n\nn\u4e0d\u7b49\u4e8e2\u65f6\uff0c\u4e00\u5b9a\u6709\u975e\u53f6\u5b50\u8282\u70b9\u3002\n\n\u5982\u679c\u6709\u5ea6\u6570\u4e3a2\u7684\u70b9\uff0c\u65e0\u89e3\uff08\u6240\u6709\u8fb9\u6743\u503c\u4e0d\u540c\uff09\uff0c\u5426\u5219\u4e00\u5b9a\u6709\u89e3\uff08\u6240\u6709\u8fb9\u6743\u4e3a\u5076\u6570\uff09\u3002\n\n\u6211\u4eec\u9009\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u4e3a\u6839\uff0c\u4e00\u904ddfs\u89e3\u51b3\u95ee\u9898\u3002\n\ndfs\u9014\u4e2d\u9047\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u8bb0\u5f55\u4e0b\u6765\u3002\u5982\u679c\u9047\u5230\u5ea6\u6570\u4e3a\u4e09\u7684\u8282\u70b9\uff0c\u8bbe\u5176\u4e3ax\uff0c\u5176\u4e2d\u4e09\u6761\u8fb9\u8fde\u5411\u53f6\u5b50\u8282\u70b9a\uff0cb\uff0cc\uff08c\u4e3a\u6839\uff09\u3002\u5c31$ans.push(a,b,(val[a,x]+val[b,x])/2),ans.push(b,c,(val[b,x]+val[c,x])/2),ans.push(c,a,(val[c,x]+val[a,x])/2)$\uff0c\u66b4\u529b\u4fee\u6539\u8fb9\u6743\uff08dalao\u53ef\u4ee5\u5199\u6811\u5256\uff09\u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n\u8fd9\u79cd\u9898\u5c45\u7136\u67092500\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint outA[10000],outB[10000],outC[10000];\n \nint n,cnt=-1;\nint deg[1001],root;\nint fir[1001],val[2001];\nint to[2001],nxt[2001];\nint fa[1001],ed[1001];\ninline void add(int a,int b,int c)\n{\n\tto[++cnt]=b;\n\tnxt[cnt]=fir[a];\n\tfir[a]=cnt;\n\tval[cnt]=c;\n\treturn;\n}\ninline void Push(int a,int b,int c)\n{\n\toutA[cnt]=a;\n\toutB[cnt]=b;\n\toutC[cnt++]=c;\n\treturn;\n}\nvoid dfs1(int i,int f)\n{\n\tfa[i]=f;\n\tfor(int j=fir[i];j!=-1;j=nxt[j])\n\t\tif(to[j]!=f){\n\t\t\tdfs1(to[j],i);\n\t\t\ted[to[j]]=j;\u8fde\u5411\u7236\u4eb2\u7684\u8fb9\n\t\t}\n\treturn;\n}\n \nint dfs2(int i)\n{\n\tint t1,t2=-1,p1,p2,x,k;\n\tfor(int j=fir[i];j!=-1;j=nxt[j]){\n\t\tif(to[j]==fa[i])\n\t\t\tcontinue;\n\t\tt1=dfs2(to[j]);\n\t\tp1=val[j];\n\t\tif(t2!=-1){\n\t\t\tx=val[ed[i]];\n\t\t\tPush(t1,t2,(p1+p2-x)>>1);\n\t\t\tPush(t1,root,(p1-p2+x)>>1);\n\t\t\tPush(t2,root,(p2-p1+x)>>1);\n            while(k!=root){\u66b4\u529b\u4fee\u6539\u8fb9\u6743\n\t\t\t\tval[ed[k]]-=x;\n\t\t\t\tval[ed[k]^1]-=x;\n\t\t\t\tk=fa[k];\n\t\t\t}\n\t\t}\n\t\tp2=p1; t2=t1;\n\t}\n\treturn t2==-1?i:t2;\n}\n \nint main(void)\n{\n\tmemset(fir,-1,sizeof(fir));\n\tint a,b,c;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd(a,b,c); add(b,a,c);\n\t\tdeg[a]++; deg[b]++;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(deg[i]==2){\u5224\u65e0\u89e3\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\telse if(g[i]==1)\n\t\t\troot=i;\u9009\u62e9\u6811\u6839\n\tcnt=0; ed[root]=n<<1;\n\tdfs1(root,-1);\n\tdfs2(root);\n\tif(n==2)\n\t\tPush(1,2,val[0]);\n\tprintf(\"YES\\n%d\\n\",cnt);\n\tfor(int i=0;i<cnt;i++)\n\t\tprintf(\"%d %d %d\\n\",outA[i],outB[i],outC[i]);\n\treturn 0;\n}\n/*\n5\n1 2 2\n1 3 4\n1 4 6\n1 5 8\n*/\n```",
        "postTime": 1568348536,
        "uid": 60202,
        "name": "csyakuoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1188A2 \u3010Add on a Tree: Revolution\u3011"
    }
]