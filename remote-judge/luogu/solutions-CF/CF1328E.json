[
    {
        "content": "\u9898\u9762\u4e0a\u8bf4\u7684\u662f\u201c\u7ed9\u5b9a\u7684\u70b9\u5728 $1$ \u5230 $u$ \u7684\u8def\u5f84\u4e0a\u6216\u8005\u4e0e\u8def\u5f84\u4e0a\u7684\u67d0\u4e2a\u70b9\u76f8\u90bb\u201d\uff0c\n\n\u90a3\u4e48\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e3a\u201c$1$ \u5230 $u$ \u7684\u8def\u5f84\u7ecf\u8fc7\u7ed9\u5b9a\u70b9\u65c1\u8fb9\u7684\u67d0\u4e2a\u70b9\u201d\u3002\n\n\u4ee4\u8fd9\u68f5\u6811\u4ee5 $1$ \u4e3a\u6839\uff0c\u90a3\u4e48\uff0c\u8fd9\u6761\u8def\u5f84\u8981\u4e48\u7ecf\u8fc7\u7ed9\u5b9a\u70b9\uff0c\u8981\u4e48\u7ecf\u8fc7\u7ed9\u5b9a\u70b9\u7684\u7236\u4eb2\uff0c\u8981\u4e48\u7ecf\u8fc7\u7ed9\u5b9a\u70b9\u7684\u81f3\u5c11\u4e00\u4e2a\u513f\u5b50\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u7ecf\u8fc7\u4ee5\u4e0a\u4e09\u79cd\u70b9\u90fd\u5fc5\u987b\u7ecf\u8fc7\u7ed9\u5b9a\u70b9\u7684\u7236\u4eb2\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u628a\u9898\u9762\u8f6c\u5316\u4e3a\u4e86\uff1a\n\n\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u70b9\uff0c\u6c42\u662f\u5426\u6709\u4e00\u6761\u4ece $1$ \u5f00\u59cb\u7684\u8def\u5f84\u7ecf\u8fc7\u8fd9\u4e9b\u70b9\u3002\n\n\u6309\u7167\u6df1\u5ea6\u6392\u5e8f\u540e\u4f9d\u6b21\u5224\u65ad\u540e\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u524d\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u5373\u53ef\u3002\n\n\u53ea\u9700\u8981 dfs \u4e00\u904d\uff0c\u6c42\u51fa \u5b50\u6811\u5927\u5c0f $siz_i$\uff0c\u7236\u4eb2 $fa_i$\uff0c\u6df1\u5ea6 $dep_i$\uff0cdfs \u5e8f $dfn_i$ \u5373\u53ef\u3002\n\n$\\texttt{code:}$\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<fstream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define Set(a) memset(a,0,sizeof(a))\n#define F(i,a,b) for(register int i=a,i##end=b;i<=i##end;++i)\n#define UF(i,a,b) for(register int i=a,i##end=b;i>=i##end;--i)\n#define openf(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\n#define re register\n#define ri re int\n#define il inline\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate<typename T> inline T rd(T& x)\n{\n\tT f=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+(T)(c-'0');\n\tx*=f;\n\treturn x;\n}\nll rd(){ll x;rd(x);return x;}\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\nconst int inf=1<<30;\n\nconst int N=200005;\nint dfn[N],siz[N],fa[N],dep[N];\nint head[N],to[N<<1],nxt[N<<1],tot=0;void add(int u,int v){to[++tot]=v;nxt[tot]=head[u];head[u]=tot;}\nint tme=0;\nvoid dfs(int u,int f)\n{\n\tdep[u]=dep[f]+1;fa[u]=f;siz[u]=1;dfn[u]=++tme;\n\tfor(ri i=head[u];i;i=nxt[i]) if(to[i]!=f) {dfs(to[i],u);siz[u]+=siz[to[i]];}\n}\nbool in(int x,int y)//is y in the subtree of x\n{return dfn[x]<=dfn[y]&&dfn[y]<dfn[x]+siz[x];}\nbool cmp(int x,int y){return dep[x]<dep[y];}\nint tmp[N];\nint main()\n{\n\tint n=rd();int m=rd();\n\tF(i,1,n-1){int u=rd();int v=rd();add(u,v);add(v,u);}\n\tdfs(1,1);\n\twhile(m--)\n\t{\n\t\tint k=rd();\n\t\tF(i,1,k) tmp[i]=fa[rd()];\n\t\tsort(tmp+1,tmp+k+1,cmp);\n\t\tbool flg=true;\n\t\tF(i,1,k-1) if(!in(tmp[i],tmp[i+1])) flg=false;\n\t\tputs(flg?\"YES\":\"NO\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1585272412,
        "uid": 130151,
        "name": "WYXkk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    },
    {
        "content": "\u770b\u9898\u65f6\u4e00\u773c\u865a\u6811\uff0c\u76f4\u63a5\u4e0d\u60f3\u60f3\u4e86\uff0c\u5e72\u8106\u590d\u5236\u7c98\u8d34\u865a\u6811\u677f\u5b50\uff0c1min\u5199\u4e2a\u6811\u5f62DP\u628a\u5b83A\u4e86\u5c31\u5b8c\u4e8b\u3002\uff08\u867d\u7136\u6b63\u5e38\u4eba\u4e5f\u80fd\u4e00\u773cLCA\uff0c\u4f46\u662f\u5f00\u5c40\u8fde\u9898\u610f\u90fd\u6ca1\u770b\u7684\u6211\u770b\u5230\u90a3\u4e2a$\\sum k<=2e5$\u5c31\u5fcd\u4e0d\u4f4f\u865a\u6811\u4e86\uff09\n\n\u5148\u76f4\u63a5\u5efa\u865a\u6811\uff0c\u7136\u540e\u5bf9\u4e8e\u5408\u6cd5\u60c5\u51b5\uff0c\u865a\u6811\u4e0a\u7684\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u6700\u6df1\u7684\u70b9\u4e0e\u5f53\u524d\u70b9\u6df1\u5ea6\u5dee\u5927\u4e8e$1$\u7684\u5b50\u6811\u4e00\u5b9a\u4e0d\u8d85\u8fc7\u4e00\u4e2a\u3002\n\n\u7136\u540e\u76f4\u63a5\u6309\u7167\u8fd9\u4e2aDFS\u4e00\u904d\u5373\u53ef\uff0c\u5982\u679c\u8d85\u8fc7\u4e00\u4e2a\u4e86\u76f4\u63a5flag\u8bbe\u4e3a0.\n\n\u4ee3\u7801\u6709\u4e9b\u65e0\u5173\u53d8\u91cf\u4e4b\u7c7b\u7684\uff0c\u53ef\u80fd\u662f\u590d\u5236\u7c98\u8d34\u7684\u677f\u5b50\u91cc\u7528\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u51fd\u6570\u90e8\u5206\u662f\u6ca1\u6709\u591a\u4f59\u5185\u5bb9\u7684\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<vector>\n#define ll long long\nusing namespace std;\nconst int maxn=250050;\ninline int read()\n{\n\tint res=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9') \n\t{\n\t\tif(c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tres=res*10+(c-'0');\n\t\tc=getchar();\n\t}\n\treturn res*f;\n}\nint n,m;\nint cnt;\nint ver[maxn<<1];\nint nxt[maxn<<1];\nint val[maxn<<1];\nint head[maxn];\nint tot,tmp;\nint dfn[maxn];\nint F[maxn][21];\nint deep[maxn];\nint a[maxn];\nint st[maxn];\nbool flag;\nvector<int> e[maxn];\nbool bj[200050];\ninline void add(int x,int y)\n{\n\tcnt++;\n\tver[cnt]=y;\n\tnxt[cnt]=head[x];\n\thead[x]=cnt;\n}\ninline void dfs(int x,int fa)\n{\t\n\tdfn[x]=++tot;\n\tF[x][0]=fa;\n\tdeep[x]=deep[fa]+1;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tif(ver[i]==fa) continue;\n\t\tdfs(ver[i],x);\n\t}\n}\ninline int lca(int x,int y)\n{\n\tif(deep[x]<deep[y]) swap(x,y);\n\tfor(int i=20;i>=0;i--)\n\t{\n\t\tif(deep[F[x][i]]>=deep[y])\n\t\t{\n\t\t\tx=F[x][i];\n\t\t}\n\t}\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--)\n\t{\n\t\tif(F[x][i]!=F[y][i])\n\t\t{\n\t\t\tx=F[x][i];y=F[y][i];\n\t\t}\n\t}\n\treturn F[x][0];\n}\ninline void insert(int x)\n{\n\tif(!tmp)\n\t{\n\t\tst[++tmp]=x;\n\t\treturn;\n\t}\n\tint f=lca(x,st[tmp]);\n\tif(f==st[tmp])\n\t{\n\t\tst[++tmp]=x;\n\t\treturn;\n\t}\n\twhile(tmp>1&&dfn[st[tmp-1]]>=dfn[f])\n\t{\n\t\te[st[tmp-1]].push_back(st[tmp]);\n\t\t--tmp;\n\t}\n\tif(st[tmp]!=f)\n\t{\n\t\te[f].push_back(st[tmp]);\n\t\ttmp--;\n\t\tst[++tmp]=f;\n\t}\n\tst[++tmp]=x;\n}\ninline long long dp(int x)\n{\n\tint ss=0;int deps=deep[x];\n\tfor(int i=0;i<e[x].size();i++)\n\t{\n\t\tif(bj[e[x][i]]==0) ss++;\n\t\telse\n\t\t{\n\t\t\tint r=dp(e[x][i]);\n\t\t\tif(r-deep[x]>1) ss++;\n\t\t\tdeps=max(deps,r);\n\t\t}\n\t}\n\tif(ss>1) flag=0;\n\tfor(int i=0;i<e[x].size();i++)\n\t{\n\t\tif(bj[e[x][i]]==0)\n\t\t{\n\t\t\tint r=dp(e[x][i]);\n\t\t\tdeps=max(deps,r);\n\t\t}\n\t}\n\te[x].clear();\n\treturn deps;\n}\ninline bool cmp(int x,int y)\n{\n\treturn dfn[x]<dfn[y];\n}\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tx=read();y=read();\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(1,0);\n\tfor(int i=1;i<=20;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tF[j][i]=F[F[j][i-1]][i-1];\n\t\t}\n\t}\n\twhile(m--)\n\t{\n\t\tint k;k=read();\n\t\tfor(int i=1;i<=k;i++) a[i]=read(),bj[a[i]]=1;\n\t\tsort(a+1,a+k+1,cmp);\n\t\tst[tmp=1]=1;\n\t\tfor(int i=1;i<=k;i++) if(a[i]!=1) insert(a[i]);\n\t\twhile(tmp)\n\t\t{\n\t\t\te[st[tmp-1]].push_back(st[tmp]);\n\t\t\ttmp--;\n\t\t}\n\t\tflag=1;\n\t\tdp(1);\n\t\tif(!flag) cout<<\"NO\"<<endl; \n\t\telse cout<<\"YES\"<<endl;\n\t\tfor(int i=1;i<=k;i++) bj[a[i]]=0;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1585300052,
        "uid": 182738,
        "name": "ZBHRuaRua",
        "ccfLevel": 6,
        "title": "CF1328E Tree Queries"
    },
    {
        "content": "## \u9898\u89e3 CF1328E Tree Queries\n\n\u53ef\u4ee5\u628a \u201c\u662f\u5426\u6709\u4e00\u6761\u4ee5\u6839\u8282\u70b9\u4e3a\u4e00\u7aef\u7684\u94fe\u4f7f\u5f97\u8be2\u95ee\u7684\u6bcf\u4e2a\u8282\u70b9\u5230\u6b64\u94fe\u7684\u8ddd\u79bb\u5747 $\\leq 1 $\u201d \u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6362\u6210\u5b83\u7684\u7236\u4eb2\uff0c\u90a3\u4e48\u9898\u610f\u5c31\u8f6c\u5316\u4e3a **\u201c\u662f\u5426\u6709\u4e00\u6761\u4ee5\u6839\u8282\u70b9\u4e3a\u4e00\u7aef\u7684\u94fe\u4f7f\u5f97\u8be2\u95ee\u7684\u6bcf\u4e2a\u8282\u70b9\u5728\u94fe\u4e0a\u201d** \u3002\n\n\u5bf9\u4e8e\u4e00\u4e9b\u5728\u540c\u4e00\u6761\u4e00\u7aef\u4e3a\u6839\u7684\u94fe\u4e0a\u7684\u70b9\uff0c\u663e\u7136**\u6df1\u5ea6\u5c0f\u7684\u70b9\u662f\u6df1\u5ea6\u5927\u7684\u70b9\u7684\u7956\u5148**\u3002\n\n\u4e8e\u662f\u53ea\u8981\u5bf9\u6bcf\u6b21\u8be2\u95ee\u7684\u51e0\u4e2a\u70b9\u53d6\u4e2a\u7236\u4eb2\uff0c\u5728\u6839\u636e\u6df1\u5ea6\u6392\u4e2a\u5e8f\uff0c\u76f8\u90bb\u7684\u4e24\u4e2a\u9a8c\u8bc1\u4e00\u4e0b\u662f\u5426\u6709\u7956\u5148\u4e0e\u5b50\u5b59\u7684\u5173\u7cfb\u5c31\u597d\u4e86\u3002\n\n\u6211\u7528\u4e86\u500d\u589e\u6765\u505a\u5224\u65ad\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+m k\\log k)$\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<class T>inline void read(T &x)\n{\n\tx=0;int f=0;char ch=getchar();\n\twhile(!isdigit(ch))\tf=ch=='-',ch=getchar();\n\twhile(isdigit(ch))\tx=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\tx=f?-x:x;\n}\nconst int N=2e5+5;\nstruct edge{\n\tint next,to;\n}e[N<<1];\nint head[N],cnt,v[N],f[N][20],dep[N],n,m;\ninline void add(int u,int v)\n{\n\te[++cnt]={head[u],v};\n\thead[u]=cnt;\n}\nvoid dfs(int x,int fa)\n{\n\tf[x][0]=fa,dep[x]=dep[fa]+1;\n\tfor(int i=1;i<=18;i++)\tf[x][i]=f[f[x][i-1]][i-1];\n\tfor(int i=head[x];i;i=e[i].next)\n\t\tif(!dep[e[i].to])\tdfs(e[i].to,x);\n}\nbool check(int x,int y)\n{\n\tif(x==y)\treturn 1;\n\tfor(int i=18;i>=0;i--)\n\t\tif(dep[f[x][i]]>=dep[y])\tx=f[x][i];\n\treturn x==y;\n}\nbool cmp(int x,int y)\t{return dep[x]>dep[y];}\nint main()\n{\n\tread(n),read(m);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tread(u),read(v);\n\t\tadd(u,v),add(v,u);\n\t}\n\tdfs(1,0);\n\twhile(m--)\n\t{\n\t\tint k;read(k);\n\t\tfor(int i=1;i<=k;i++)\tread(v[i]),v[i]=v[i]==1?1:f[v[i]][0];\n\t\tsort(v+1,v+k+1,cmp);\n\t\tbool ok=1;\n\t\tfor(int i=1;i<k;i++)\n\t\t\tif(!check(v[i],v[i+1]))\t{ok=0;break;}\n\t\tif(ok)\tputs(\"YES\");\n\t\telse\tputs(\"NO\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1590300399,
        "uid": 304995,
        "name": "PanH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1328E Tree Queries"
    },
    {
        "content": "## \u9898\u89e3 - $\\mathrm{CF1328E\\ Tree \\ Queries}$\n\n[$$\\huge\\color{blue}\\boxed{\\color{Violet}\\mathfrak{There\\ is \\ my \\ blog}}$$](https://www.luogu.com.cn/blog/wyy2020/)\n\n### \u9898\u76ee\u610f\u601d\n\n* [CF1328E](https://www.luogu.com.cn/problem/CF1328E)\n\n### $\\mathrm{Sol}$\n\n* \u4e00\u5f00\u59cb\u6211\u8fd8\u4ee5\u4e3a\u662f\u4ec0\u4e48\u865a\u6811\u52a0\u4e2a\u6811\u5f62$DP$\uff0c\u770b\u6765\u662f\u771f\u7684\u50bb\u3002\u540e\u6765\u4ed4\u7ec6\u60f3\u60f3\u53d1\u73b0\u662f\u9053\u50bb\u903c\u9898\u554a\u3002\n* \u6211\u4eec\u9996\u5148\u4e0d\u7528\u8003\u8651\u6df1\u5ea6$\\leq 1$\u7684\u70b9\u3002\u90a3\u4e48\u6700\u4f18\u7684\u7b56\u7565\u663e\u7136\u662f\u4ece\u6df1\u5ea6\u6700\u6df1\u7684\u70b9$now$\u5f80\u4e0a\u8986\u76d6\u3002\u90a3\u4e48\u5bf9\u4e8e\u6709\u4e9b\u4e0d\u662f\u8fd9\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u901a\u8fc7\u6837\u4f8b$1$\u7684\u7b2c\u4e00\u95ee\u53ef\u77e5\u53ea\u8981\u5b83\u4e0e$now$\u7684$lca$\u4e0e\u5b83\u7684\u8ddd\u79bb\u4e3a$1$\uff0c\u5373\u7236\u4eb2\u8282\u70b9\u90a3\u4e48\u4e5f\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u3002\n* \u8fd9\u6837\u5c31$O(k_i\\ log \\ n)$\u5b8c\u6210\u4e86\n\n### $\\mathrm{Code}$\n\n```cpp\n#include <bits/stdc++.h>\n#define pb push_back\nusing namespace std;\n\ninline int read()\n{\n\tint sum=0,ff=1; char ch=getchar();\n\twhile(!isdigit(ch))\n\t{\n\t\tif(ch=='-') ff=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t\tsum=sum*10+(ch^48),ch=getchar();\n\treturn sum*ff;\n}\n\nconst int N=2e5+5;\n\nint n,m,cnt,dep[N],siz[N],f[N][26],a[N],b[N];\nvector<int> M[N];\n\ninline void dfs(int u,int fa)\n{\n\tdep[u]=dep[fa]+1;\n\tf[u][0]=fa;\n\tfor ( int i=1;i<=22;i++ ) \n\t\tf[u][i]=f[f[u][i-1]][i-1];\n\tfor ( int i=0;i<M[u].size();i++ )\n\t{\n\t\tint v=M[u][i];\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t}\n}\n\ninline int LCA(int x,int y)\n{\n\tif(dep[x]>dep[y]) swap(x,y);\n\tfor ( int i=21;i>=0;i-- ) if(dep[y]-(1<<i)>=dep[x]) y=f[y][i];\n\tif(x==y) return x;\n\tfor ( int i=21;i>=0;i-- ) \n\t\tif(f[x][i]!=f[y][i])\n\t\t\tx=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\n\nint main()\n{\n\tn=read();\n\tm=read();\n\tfor ( int i=1;i<n;i++ )\n\t{\n\t\tint x,y;\n\t\tx=read(),y=read();\n\t\tM[x].pb(y);\n\t\tM[y].pb(x);\n\t}\n\tdfs(1,0);\n\tfor (;m--;)\n\t{\n\t\tint s=read(); \n\t\tint now=read();\n\t\tb[1]=now;\n\t\tfor ( int i=2;i<=s;i++ ) \n\t\t{\n\t\t\tint x=read();\n\t\t\tif(dep[now]<dep[x]) now=x;\n\t\t\tb[i]=x;\n\t\t}\n\t\tint alb=0;\n\t\tfor ( int i=1;i<=s;i++ )\n\t\t{\n\t\t\tint bla=LCA(now,b[i]);\n\t\t\tif(bla!=b[i]&&bla!=f[b[i]][0]) alb=1;\n\t\t}\n\t\t(!alb)?printf(\"YES\\n\"):printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\t\t\n\t\t\n\t\t\n\t\t\n```\n",
        "postTime": 1585270791,
        "uid": 308464,
        "name": "\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u4ee5\u8282\u70b9 $ 1 $ \u4e3a\u6839\u7684\u6811\uff0c\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u90fd\u4e3a $ 1 $ \u3002\u6bcf\u6b21\u8be2\u95ee $ k $ \u4e2a\u8282\u70b9\uff0c\u8ba9\u4f60\u5224\u65ad\u662f\u5426\u5b58\u5728\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684\u4e00\u6761\u94fe\uff0c\u4f7f\u5f97\u8fd9 $ k $ \u4e2a\u8282\u70b9\u4e0e\u8fd9\u6761\u94fe\u7684\u6700\u77ed\u8ddd\u79bb\u90fd  $ \\leq 1 $ \u3002\n## \u601d\u8def\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5982\u679c\u8282\u70b9 $ i $ \u4e0e\u8be5\u94fe\u7684\u6700\u77ed\u8ddd\u79bb $ \\leq 1 $ ,\u90a3\u4e48\u5b83\u4e00\u5b9a\u7ecf\u8fc7 $ i $ \u7684\u7236\u4eb2\u8282\u70b9\u3002\n\n\u6709\u4e86\u8fd9\u4e00\u7ed3\u8bba\uff0c\u6211\u4eec\u5c31\u80fd\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a**\u6c42\u662f\u5426\u5b58\u5728\u4e00\u6761\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684\u94fe\uff0c\u4f7f\u5b83\u7ecf\u8fc7\u8fd9$k$\u4e2a\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u3002**\n\n\u5982\u679c\u5b58\u5728\u8fd9\u4e48\u4e00\u6761\u94fe\uff0c\u90a3\u4e48\u663e\u7136\u8fd9 $ k $ \u7684\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u7684 ` LCA ` \u76f8\u540c\uff0c\u5e76\u4e14 ` LCA ` \u4e3a\u8fd9 $ k $ \u4e2a\u70b9\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c\u90fd $ O(n) $ \u679a\u4e3e ` LCA `\u5c31\u597d\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+10;\nstruct node{\n    int to,nxt;\n}a[N<<1];\nint n,T,head[N],cnt,anc[N][30],d[N],b[N],m;\ninline int read(){\n    int s=0;\n    char ch=getchar();\n    while(ch>'9'||ch<'0') ch=getchar();\n    while(ch<='9'&&ch>='0'){s=(s<<3)+(s<<1)+(ch^48);ch=getchar();}\n    return s;\n}\ninline void add(int from,int to){\n    a[++cnt]=(node){to,head[from]};\n    head[from]=cnt;\n}\nvoid dfs(int x,int fa){//\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u4ee5\u53caLCA\u5904\u7406\u51fa\u6765\uff0c\u65b9\u4fbf\u4ee5\u540e\u67e5\u8be2\n    d[x]=d[fa]+1;\n    anc[x][0]=fa;\n    for(register int i=1;i<=29;++i) anc[x][i]=anc[anc[x][i-1]][i-1];//\u500d\u589e\u6c42LCA\uff0canc[i][j]\u8868\u793a\u7b2ci\u4e2a\u8282\u70b9\u7684\u7b2c2^j\u4e2a\u7956\u5148\n    for(register int i=head[x];i;i=a[i].nxt){\n        int to=a[i].to;\n        if(to==fa) continue;\n        dfs(to,x);\n    }\n}\ninline bool cmp(int a,int b){//\u5c06\u4ed6\u4eec\u7684\u6df1\u5ea6\u4ece\u5927\u5f80\u5c0f\u6392\u5e8f\n    return d[a]>d[b];\n}\ninline int getlca(int x,int y){//\u627eLCA\u7684\u8fc7\u7a0b\n    for(register int i=29;i>=0;--i) if(d[anc[x][i]]>=d[y]) x=anc[x][i];//\u627e\u5230x\u8ddd\u79bby\u6df1\u5ea6\u76f8\u540c\u7684\u7956\u5148\n    return x==y;//\u5224\u65ad\u4ed6\u4eec\u662f\u5426\u662f\u540c\u4e00\u4e2a\u70b9\n}\nint main(){\n    n=read(),T=read();\n    for(register int i=1,x,y;i<n;++i){\n        x=read(),y=read();\n        add(x,y),add(y,x);//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\n    }\n    anc[1][0]=0;\n    d[1]=0;\n    dfs(1,0);\n    while(T--){\n        m=read();\n        for(register int i=1;i<=m;++i) b[i]=read(),b[i]=anc[b[i]][0];//\u5c06\u6bcf\u4e2a\u70b9\u8f6c\u6210\u5b83\u7684\u7236\u4eb2\u8282\u70b9\n        sort(b+1,b+m+1,cmp);\n        int ans=1;\n        for(register int i=1;ans==1&&i<m;++i) ans&=getlca(b[i],b[i+1]);//\u5982\u679c\u8282\u70b9b[i]\u548c\u8282\u70b9b[i+1]\u7684LCA\u4e0d\u4e3ab[i+1],\u90a3\u4e48\u663e\u7136\u4e0d\u7b26\u5408\u6761\u4ef6\n        if(ans) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1636687123,
        "uid": 428089,
        "name": "HMZHMZHMZ",
        "ccfLevel": 7,
        "title": "CF1328E"
    },
    {
        "content": "\u6bd4\u8f83\u6709\u601d\u7ef4\u542b\u91cf\u7684\u9898\u76ee\uff0cLCA\u7ec3\u624b\u9898\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u6839\u4e3a $1$ \u7684\u6811\uff0c$m$ \u6b21\u8be2\u95ee\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa $k$ \u4e2a\u8282\u70b9\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u6761\u4ee5\u6839\u8282\u70b9 $1$ \u4e3a\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u7684\u94fe\u4f7f\u5f97\u8fd9 $k$ \u4e2a\u8282\u70b9\u8ddd\u79bb\u94fe\u7684\u8ddd\u79bb $\\le 1$ \u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u53ef\u4ee5\u5f88\u5feb\u53d1\u73b0\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u5982\u679c\u5b58\u5728\u7b54\u6848\uff0c\u90a3\u4e48\u5f53\u8fd9\u6761\u94fe\u9664\u6839\u8282\u70b9\u5916\u53e6\u5916\u4e00\u4e2a\u7aef\u70b9\u4e3a\u8fd9 $k$ \u4e2a\u8282\u70b9\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9\u65f6\uff0c\u8fd9\u6761\u94fe\u5fc5\u5b9a\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u3002\n\n\u8003\u8651\u5230\u591a\u7ec4\u8be2\u95ee\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u66b4\u529b\u5224\u65ad\uff0c\u540c\u65f6\u53c8\u53d1\u73b0\uff1a\n\n\u8bbe $u$ \u4e3a $k$ \u4e2a\u8282\u70b9\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u6df1\u5ea6\u5c0f\u4e8e $u$ \u6df1\u5ea6\u7684\u8282\u70b9 $v$ \uff0c\u5fc5\u5b9a\u6709 $LCA(u,v)$ \u5728\u7aef\u70b9\u5206\u522b\u4e3a $1$ \u4e0e $u$ \u7684\u94fe\u4e0a\uff0c\u56e0\u4e3a\u8fd9\u6761\u94fe\u4e0a\u5305\u542b\u4e86\u8282\u70b9 $u$ \u7684\u6240\u6709\u7956\u5148\u3002\n\n\u5219\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6765\u89e3\u9898\uff1a\u904d\u5386\u6240\u6709 $k$ \u4e2a\u8282\u70b9\uff0c\u82e5\u5b58\u5728\u4e00\u4e2a\u8282\u70b9 $v$ ,\u4f7f\u5f97 $dis[LCA(u,v),v] >1$ ,\u5219\u8f93\u51fa ```NO``` \uff0c\u5426\u5219\u8f93\u51fa ```YES``` \uff08\u6ce8\u610f\u8f93\u51fa\u683c\u5f0f\u4e3a\u5927\u5199\uff09\n\n### \u4ee3\u7801\n\n```cpp\n// Code of Ymw123\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <cmath>\nusing namespace std;\n#define int long long\n#define MAX_N 200010\nint n,m,t;\nstruct Tree{\n    int dep;\n    vector<int> next;\n}node[MAX_N];\nint f[MAX_N][21];\nvoid bfs(int root){\n    t = (int)(log(n) / log(2)) + 1;\n    queue<int> q;\n    q.push(root);\n    node[root].dep = 1;\n    while(!q.empty()){\n        int u = q.front();\n        q.pop();\n        for(int i = 0;i < node[u].next.size();i++){\n            int v = node[u].next[i];\n            if(node[v].dep != 0)continue;\n            node[v].dep = node[u].dep + 1;\n            f[v][0] = u;\n            for(int j = 1;j <= t;j++)\n                f[v][j] = f[f[v][j - 1]][j - 1];\n            q.push(v);\n        }\n    }\n}\nint LCA(int x,int y){\n    int t = (int)(log(n) / log(2)) + 1;\n    if(node[x].dep > node[y].dep) \n       swap(x,y);\n    for(int i = t;i >= 0;i--)\n        if(node[f[y][i]].dep >= node[x].dep)\n           y = f[y][i];\n    if(x == y) return x;\n    for(int i = t;i >= 0;i--)\n        if(f[x][i] != f[y][i])\n           x = f[x][i],y = f[y][i];\n    return f[x][0];\n}\nint dis(int x,int y){\n    return node[x].dep + node[y].dep -  2 * node[LCA(x,y)].dep;\n}\nsigned main(){\n    cin >> n >> m;\n    for(int i = 1;i < n;i++){\n        int u,v;\n        cin >> u >> v;\n        node[u].next.push_back(v);\n        node[v].next.push_back(u);\n    }\n    bfs(1);\n    int v[MAX_N];\n    while(m--){\n        int k,max_node = -1;\n        cin >> k;\n        for(int i = 1;i <= k;i++){\n            cin >> v[i];\n            if(i == 1)max_node = v[i];\n            else max_node = node[v[i]].dep > node[max_node].dep ? v[i] : max_node;\n        }\n        bool ans = true;\n        for(int i = 1;i <= k;i++){\n            int lca = LCA(v[i],max_node);\n            if(dis(v[i],lca) > 1)ans = false,i = k + 1;\n        }\n        if(ans)cout << \"YES\" << endl;\n        else cout << \"NO\" << endl;\n    }\n    return 0;\n}\n```\n\n### \u540e\u8bb0\n\nUpdata 2021/5/29 : \u5b8c\u6210\u5e76\u63d0\u4ea4\u9898\u89e3",
        "postTime": 1622259865,
        "uid": 355559,
        "name": "FutureThx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u9898\u76ee\u8981\u6c42\u7684 $v_i$ \u548c\u6211\u4eec\u627e\u51fa\u6765\u7684\u94fe\uff0c\u6709\u4ee5\u4e0b\u5173\u7cfb\uff1a\n\n- $v_i$ \u7684\u7236\u4eb2\u5728\u94fe\u4e2d\n- $v_i$ \u5728\u94fe\u4e2d\uff0c\u5219 $v_i$ \u7684\u7236\u4eb2\u4e00\u5b9a\u4e5f\u5728\u94fe\u4e2d\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u6761\u4e00\u7aef\u4e3a\u6839\u8282\u70b9\u7684\u94fe\n- $v_i$ \u7684\u5b50\u8282\u70b9\u5728\u94fe\u4e2d\uff0c\u5219 $v_i$ \u4e00\u5b9a\u5728\u94fe\u4e2d\uff0c$v_i$ \u7684\u7236\u4eb2\u4e5f\u4e00\u5b9a\u5728\u94fe\u4e2d\uff08\u7406\u7531\u540c\u4e0a\uff09\n\n\uff08\u8fd9\u91cc\u6211\u4eec\u4e0d\u8003\u8651 $v_i=1$ \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u4e0b $v_i$ \u4e00\u5b9a\u5728\u94fe\u4e0a\uff09  \n\u6240\u4ee5\u65e0\u8bba\u5982\u4f55 $v_i$ \u7684\u7236\u4eb2\u4e00\u5b9a\u5728\u8fd9\u6761\u94fe\u4e0a\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u8fd9\u6761\u94fe\u6709\u4ec0\u4e48\u6027\u8d28\uff0c\u5f88\u663e\u7136\u7684\u4e00\u70b9\u5c31\u662f\u94fe\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u662f\u540e\u9762\u7684\u70b9\u7684\u7956\u5148\u3002  \n\u7136\u540e\u5c31\u662f\uff0c\u94fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\u6df1\u5ea6\u90fd\u4e0d\u4e00\u6837\u3002\n\n\u6240\u4ee5\uff0c\u5982\u679c\u8981\u6ee1\u8db3\u8981\u6c42\uff0c\u90a3\u4e48 $v_i$ \u7684\u7236\u4eb2\u4e00\u5b9a\u8981\u5728\u6df1\u5ea6\u6bd4 $v_i$ \u5c0f\u7684 $v_j$ \u7684\u7236\u4eb2\u7684\u5b50\u6811\u91cc\u3002  \n\u8fd9\u53c8\u53ef\u4ee5\u8f6c\u5316\u6210\uff0c$v_i$ \u4e00\u5b9a\u8981\u5728\u6df1\u5ea6\u6bd4\u81ea\u5df1\u5c0f $v_j$ \u7684\u7236\u4eb2\u7684\u5b50\u6811\u91cc\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u5982\u679c\u5728\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u90a3\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u4e5f\u5728\u8fd9\u4e2a\u5b50\u6811\u4e2d\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u6709\u4e86\u5b9e\u73b0\u65b9\u6cd5\uff1a\n\n1. \u5bf9\u6574\u68f5\u6811\u8fdb\u884c dfs \u904d\u5386\n2. \u904d\u5386\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\uff0c\u6df1\u5ea6\uff0c\u4ee5\u8be5\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u53ca dfs \u5e8f\n3. \u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u5148\u6309\u6df1\u5ea6\u4ece\u5c0f\u5230\u5927\u7ed9 $v_i$ \u6392\u5e8f\n4. \u4ece\u524d\u5f80\u540e\u904d\u5386\uff0c\u5982\u679c $dfn_y \\ge dfn_x \\& dfn_y \\le dfn_x+size_x-1$\uff0c\u5219 $v_i$ \u5728 $v_{i-1}$ \u7684\u7236\u4eb2\u7684\u5b50\u6811\u4e2d\u3002\u5176\u4e2d $x$ \u8868\u793a $v_{i-1}$ \u7684\u7236\u4eb2\uff0c$y$ \u8868\u793a $v_i$\uff0c$dfn_x$ \u8868\u793a $x$ \u7684 dfs \u5e8f\uff0c$size_x$ \u8868\u793a\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\n5. \u5982\u679c\u51fa\u73b0\u81f3\u5c11\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u8981\u6c42\u7684\u60c5\u51b5\uff0c\u5219\u8f93\u51fa $NO$\uff0c\u5426\u5219\u8f93\u51fa $YES$\n\n\u5bf9\u4e8e\u7b2c $4$ \u6b65\u7684\u89e3\u91ca\uff1a  \n\u56e0\u4e3a $x$ \u7684\u5b50\u6811\u7684 dfs \u5e8f\u4e00\u5b9a\u5728 $dfn_x$~$dfn_x+size_x-1$ \u4e4b\u5185\u3002  \n\u5982\u679c $dfn_y<dfn_x$ \u5219 $y$ \u6bd4 $x$ \u5148\u904d\u5386\u5230\uff0c\u90a3\u4e00\u5b9a\u4e0d\u4f1a\u5728 $x$ \u7684\u5b50\u6811\u4e2d\u3002   \n\u56e0\u4e3a $x$ \u7684\u5b50\u6811\u6709 $size_x$ \u4e2a\u70b9\uff0cdfs \u5e8f\u5728\u4e00\u4e2a\u5b50\u6811\u5185\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5 $x$ \u7684\u5b50\u6811\u7684\u70b9\u7684 dfs \u5e8f\u4e00\u5b9a\u4e0d\u4f1a\u8d85\u8fc7 $dfn_x+size_x-1$\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,index;\nint depth[200005],fa[200005],size[200005],dfn[200005];\nint k,v[200005];\nstruct graph\n{\n\tint tot;\n\tint hd[200005];\n\tint nxt[400005],to[400005];\n\tvoid add(int u,int v)\n\t{\n\t\ttot++;\n\t\tnxt[tot]=hd[u];\n\t\thd[u]=tot;\n\t\tto[tot]=v;\n\t\treturn ;\n\t}\n}g;\nbool cmp(int x,int y){return depth[x]<depth[y];}\nvoid dfs(int now,int f)\n{\n\tfa[now]=f;\n\tdepth[now]=depth[f]+1;\n\tdfn[now]=++index;\n\tsize[now]=1;\n\tfor(int i=g.hd[now];i;i=g.nxt[i])\n\t\tif(g.to[i]!=f)\n\t\t{\n\t\t\tdfs(g.to[i],now);\n\t\t\tsize[now]+=size[g.to[i]];\n\t\t}\n\treturn ;\n}\nbool in(int x,int y)\n{return dfn[y]>=dfn[x]&&dfn[y]<=dfn[x]+size[x]-1;}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tg.add(u,v);\n\t\tg.add(v,u);\n\t}\n\tdfs(1,0);//\u9884\u5904\u7406\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&k);\n\t\tfor(int j=1;j<=k;j++) scanf(\"%d\",&v[j]);\n\t\tsort(v+1,v+k+1,cmp);//\u6ce8\u610f\u5148\u6392\u5e8f\n\t\tbool flag=true;\n\t\tfor(int j=1;j<k;j++)\n\t\t\tif(v[j]!=1&&!in(fa[v[j]],v[j+1]))//\u8fd9\u91cc\u8981\u7279\u5224\u4e0bv[j]=1\u7684\u60c5\u51b5\u54e6\n\t\t\t{\n\t\t\t\tflag=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(flag) puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1611901317,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/CF1328E)\n\n---\n\n\u8fd9\u9053\u9898\u770b\u8d77\u6765\u8fd8\u662f\u6709\u70b9\u610f\u601d\uff0c\u4f46\u4ed4\u7ec6\u601d\u8003\u540e\u5176\u5b9e\u5e76\u4e0d\u662f\u5f88\u96be\u3002\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u4e2a\u8be2\u95ee\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u8fd9\u6761\u94fe\u5fc5\u8d70\u5b83\u7684\u7236\u4eb2\u4e00\u5b9a\u6bd4\u5fc5\u8d70\u5b83\u81ea\u5df1\u66f4\u6709\u53ef\u80fd\u627e\u5230\u53ef\u884c\u89e3\uff08~~\u8bed\u6587\u53ef\u80fd\u4e0d\u592a\u597d\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b~~\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\uff0c\u5982\u679c\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u9664\u4e86\u5b83\u6ca1\u6709\u5176\u4ed6\u7684\u70b9\u9700\u8981\u6ee1\u8db3\u8981\u6c42\uff0c\u90a3\u4e48\u80af\u5b9a\u5c31\u6ca1\u6709\u5fc5\u8981\u8ba9\u8fd9\u6761\u94fe\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\uff0c\u53ea\u7ecf\u8fc7\u5b83\u7684\u7236\u4eb2\u5c31\u597d\u4e86\uff0c\u5982\u679c\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6709\u9700\u8981\u6ee1\u8db3\u8981\u6c42\u7684\u70b9\uff0c\u90a3\u4e48\u80af\u5b9a\u4e5f\u5fc5\u987b\u5148\u7ecf\u8fc7\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u518d\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u770b\u8fd9\u4e9b\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u662f\u5426\u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u5982\u679c\u67d0\u4e2a\u70b9\u7684\u7236\u4eb2\u4e0d\u5728\u94fe\u4e0a\uff0c\u90a3\u5b83\u81ea\u5df1\u4e5f\u5c31\u4e0d\u53ef\u80fd\u5728\u94fe\u4e0a\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u5224\u65ad\u8fd9\u4e9b\u7236\u4eb2\u8282\u70b9\u662f\u5426\u5728\u94fe\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6839\u636e\u6df1\u5ea6\u5bf9\u5b83\u4eec\u5347\u5e8f\u6392\u5e8f\uff0c\u5982\u679c\u5b83\u4eec\u90fd\u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u90a3\u4e48\u524d\u4e00\u4e2a\u70b9\u4e00\u5b9a\u4f1a\u662f\u540e\u4e00\u4e2a\u70b9\u7684\u7956\u5148\uff0c\u6211\u4eec\u76f4\u63a5\u6c42\u51fa\u5b83\u4eec\u7684 LCA\uff0c\u5224\u65ad\u662f\u5426\u7b49\u4e8e\u524d\u4e00\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+10;\nint n,m,log2n,point[N],fa[N][20],dep[N];\nvector<int> edge[N];\nbool cmp(int a,int b)\n{\n\treturn dep[a]<dep[b];\n}\nvoid dfs(int u,int father)//\u500d\u589e\u9884\u5904\u7406\n{\n\tfa[u][0]=father;\n\tdep[u]=dep[fa[u][0]]+1;\n\tfor(int i=1;(1<<i)<=dep[u];i++)\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\tfor(int i=0;i<edge[u].size();i++)\n\t{\n\t\tint v=edge[u][i];\n\t\tif(v!=fa[u][0])\n\t\t\tdfs(v,u);\n\t}\n}\nint lca(int u,int v)//\u500d\u589e\u6c42 LCA\n{\n\tif(dep[u]<dep[v])\n\t\tswap(u,v);\n\tint depu=dep[u],depv=dep[v];\n\tfor(int i=0;i<=log2n;i++)\n\t\tif((depu-depv)&(1<<i))\n\t\t\tu=fa[u][i];\n\tif(u==v)\n\t\treturn u;\n\tfor(int i=log2n;i>=0;i--)\n\t\tif(fa[u][i]!=fa[v][i])\n\t\t{\n\t\t\tu=fa[u][i];\n\t\t\tv=fa[v][i];\n\t\t}\n\treturn fa[u][0];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tedge[u].push_back(v);\n\t\tedge[v].push_back(u);\n\t}\n\tdfs(1,0);\n\tfa[1][0]=1;\n\tlog2n=log(n)/log(2)+0.5;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint s,x,flag=1;\n\t\tscanf(\"%d\",&s);\n\t\tfor(int j=1;j<=s;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tpoint[j]=fa[x][0];//\u76f4\u63a5\u5b58\u5b83\u4eec\u7684\u7236\u4eb2\u8282\u70b9\u5c31\u884c\u4e86\n\t\t}\n\t\tsort(point+1,point+1+s,cmp);\n\t\tfor(int j=1;j<=s-1;j++)\n\t\t\tif(lca(point[j],point[j+1])!=point[j])//\u5224\u65ad\u5982\u4e0a\n\t\t\t{\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(flag)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1604317797,
        "uid": 183235,
        "name": "Islauso",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    },
    {
        "content": "[CF1328E Tree Queries](https://codeforces.com/contest/1328/problem/E)  \n## \u9898\u610f  \n\u7ed9\u4f60\u4e00\u4e2a\u6811\uff0c\u7136\u540e\u591a\u6b21\u8be2\u95ee  \n\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e00\u5806\u8282\u70b9\uff0c\u95ee\u4f60\u662f\u5426\u80fd\u627e\u5230\u4e00\u4e2a**\u4ece\u6839\u51fa\u53d1\u7684**\u94fe\uff0c\u662f\u7684\u5bf9\u4e8e\u7ed9\u51fa\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u90fd\u80fd\u627e\u51fa\u94fe\u4e0a\u7684\u70b9\uff0c\u662f\u7684\u4ed6\u4eec\u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e$1$  \n$n\\leq 2\\cdot 10^5,m\\leq 2\\cdot 10^5,\\sum k\\leq 2\\cdot 10^5$  \n\u5176\u4e2d$m$\u662f\u8be2\u95ee\u6b21\u6570\uff0c$k$\u662f\u6bcf\u6b21\u7ed9\u51fa\u7684\u70b9\u6570  \n\n-----------  \n\n\u9996\u5148\uff0c\u4e00\u4e2a\u70b9\u8981\u60f3\u7b26\u5408\u9898\u76ee\u7684\u6761\u4ef6\uff0c\u65e0\u975e\u6709\u4e24\u79cd\u60c5\u51b5  \n\u4e00\u79cd\u662f\u5c31\u5728\u94fe\u4e0a\uff0c\u8fd9\u4e2a\u597d\u8bf4  \n\u53e6\u4e00\u79cd\u662f\u8ddd\u79bb\u94fe\u4e0a\u7684\u70b9\u8ddd\u79bb\u4e3a$1$\uff0c\u90a3\u4e48\uff0c\u80af\u5b9a\u662f\u4ed6\u7684\u7236\u4eb2\u5728\u94fe\u4e0a  \n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u7ed9\u51fa\u7684\u70b9\u8f6c\u6362\u6210\u4ed6\u7684\u7236\u4eb2\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u770b\uff1a\u80fd\u5426\u627e\u5230\u4e00\u4e2a\u94fe\uff0c\u662f\u7684\u8fd9\u4e9b\u70b9\u90fd\u5728\u94fe\u4e0a  \n\u8fd9\u6837\u7684\u8f6c\u6362\u5bf9\u7b2c\u4e00\u79cd\u80af\u5b9a\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u4e00\u4e2a\u70b9\u5728\u94fe\u4e0a\uff0c\u4ed6\u7684\u7236\u4eb2\u80af\u5b9a\u4e5f\u5728\u94fe\u4e0a  \n\n\u6240\u4ee5\u8003\u8651\u8f6c\u6362\u540e\u7684\u95ee\u9898  \n\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\uff0c\u627e\u51fa\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9\uff0c\u5bf9\u4e8e\u5176\u5b83\u6bcf\u4e2a\u70b9\u548c\u5b83\u6c42 LCA \uff0c\u5982\u679c\u8fd9\u4e2a LCA \u4e0d\u662f\u90a3\u4e2a\u6df1\u5ea6\u8f83\u5c0f\u7684\u70b9\uff0c\u8bf4\u660e\u80af\u5b9a\u8fde\u4e0d\u6210\u4e00\u4e2a\u94fe  \n\u8fd9\u4e00\u70b9\u5224\u65ad\u57fa\u4e8e\u90a3\u4e2a\u94fe\u5fc5\u987b\u4ece\u6839\u51fa\u53d1  \n\u7136\u540e\u5199\u5b8c\u4ee3\u7801\u4ea4\u4e0a\u53bb\uff1a  \n\n![](https://pic.downk.cc/item/5e7e1c3d504f4bcb049945d6.png)  \n\\#100 WA!  \nemmm\uff0c\u4f30\u8ba1\u662f\u5199\u70b8\u4e86\uff0c~~\u7b2c\u4e00\u4e2aMLE\u662f\u90bb\u63a5\u8868\u5fd8\u5f002\u500d\u4e86~~  \n\n\u7136\u800c\u5e76\u6ca1\u770b\u51fa\u9519\uff0c\u6240\u4ee5\u8003\u8651\u4e00\u79cd\u5b9e\u73b0\u66f4\u7b80\u5355\u7684\u65b9\u6cd5  \n\u4e0a\u9762\u6c42 LCA \u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ece\u4e0b\u5411\u4e0a\u8003\u8651\uff0c\u90a3\u4e48\u8fd8\u6709\u4e00\u79cd\u4ece\u4e0a\u5f80\u4e0b\u8003\u8651\u7684\u65b9\u6cd5\uff1a  \n\u5148\u628a\u6bcf\u4e2a\u70b9\u6309\u6df1\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u5982\u679c`p[i+1]`\u4e0d\u5728`p[i]`\u7684\u5b50\u6811\u91cc\uff0c\u90a3\u4e48\u80af\u5b9a\u8fde\u4e0d\u6210\u4e00\u4e2a\u94fe  \n\u81f3\u4e8e\u600e\u4e48\u5224\u65ad\u4e5f\u5f88\u7b80\u5355\uff0c\u8bb0\u5f55\u4e00\u4e2adfs\u5e8f\u548c\u6bcf\u4e2a\u8282\u70b9\u5b50\u6811\u5927\u5c0f\u5c31\u884c\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u7684`check`\u51fd\u6570  \n\n$\\texttt{code.}$  \n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN std::puts(\"\")\n#define LL long long\ninline int read(){\n\tint x=0,y=1;\n\tchar c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\nint n,m;\nint fir[200006],nex[400006],to[400006],tot;\nint p[200006],fa[200006],size[200006];\nint dfn[200006],deep[200006],dfscnt;\ninline void add(int a,int b){\n\tto[++tot]=b;\n\tnex[tot]=fir[a];fir[a]=tot;\n}\nvoid dfs(int u,int fat){\n\tfa[u]=fat;deep[u]=deep[fat]+1;dfn[u]=++dfscnt;size[u]=1;\n\tfor(reg int i=fir[u];i;i=nex[i])if(to[i]!=fat) dfs(to[i],u),size[u]+=size[to[i]];\n}\ninline int check(int a,int b){//\u770bb\u662f\u4e0d\u662f\u5728a\u7684\u5b50\u6811 \n\tif(dfn[b]<dfn[a]) return 0;\n\tif(dfn[b]>=dfn[a]+size[a]) return 0;\n\t//\u8fd9\u91cc\u4e00\u5b9a\u662f>=\uff0c\u5982\u679cdfn[b]=dfn[a]+size[a]\uff0c\u4e5f\u8bf4\u660eb\u5e76\u4e0d\u5728a\u7684\u5b50\u6811\u91cc\uff0c\u56e0\u4e3a\u7edf\u8ba1size[a]\u7684\u65f6\u5019a\u8fd9\u4e2a\u70b9\u4e5f\u88ab\u7b97\u8fdb\u53bb\u4e86 \n\treturn 1;\n}\ninline int cmp(int x,int y){return deep[x]<deep[y];}\nint main(){\n\tn=read();m=read();\n\tfor(reg int a,b,i=1;i<n;i++){\n\t\ta=read();b=read();\n\t\tadd(a,b);add(b,a);\n\t}\n\treg int k;\n\tdfs(1,1);\n\twhile(m--){\n\t\tk=read();\n\t\tfor(reg int i=1;i<=k;i++) p[i]=fa[read()];\n\t\tstd::sort(p+1,p+1+k,cmp);\n\t\tfor(reg int i=2;i<=k;i++)\n\t\t\tif(!check(p[i-1],p[i])) goto NO;\n\t\tstd::puts(\"YES\");continue;\n\t\tNO:;std::puts(\"NO\");\n\t}\n\treturn 0;\n}\n```  \n\n\u90a3\u4e2a\u6ca1A\u7684LCA\u505a\u6cd5\u4e5f\u653e\u5728\u8fd9\uff0c\u4e5f\u8bb8\u54ea\u5929\u5f88\u95f2\u7684\u65f6\u5019\u4f1a\u518d\u8c03\u8c03  \n[\u8bb0\u5f55](https://www.luogu.com.cn/record/32199021)  \n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN std::puts(\"\")\n#define LL long long\ninline int read(){\n\tint x=0,y=1;\n\tchar c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\nint n,m;\nint fir[200006],nex[400006],to[400006],tot;\nint p[200006];\nint fa[23][200006],deep[200006];\ninline void add(int a,int b){\n\tto[++tot]=b;\n\tnex[tot]=fir[a];fir[a]=tot;\n}\nvoid dfs(int u,int fat){\n\tfa[0][u]=fat;deep[u]=deep[fat]+1;\n\tfor(reg int i=fir[u];i;i=nex[i])if(to[i]!=fat) dfs(to[i],u);\n}\ninline int check(int a,int b){\n\tfor(reg int i=20;~i;i--)\n\t\tif(deep[fa[i][b]]>=deep[a]) b=fa[i][b];\n\treturn a==b;\n}\nint main(){\n\tn=read();m=read();\n\tfor(reg int a,b,i=1;i<n;i++){\n\t\ta=read();b=read();\n\t\tadd(a,b);add(b,a);\n\t}\n\treg int k,maxdeep,maxdeepid;\n\tdfs(1,1);\n\tfor(reg int i=1;i<=n;i++)\n\t\tfor(reg int j=1;j<=20;j++) fa[j][i]=fa[j-1][fa[j-1][i]];\n\twhile(m--){\n\t\tk=read();maxdeep=0;\n\t\tfor(reg int i=1;i<=k;i++){\n\t\t\tp[i]=fa[0][read()];\n\t\t\tif(deep[p[i]]>maxdeep) maxdeep=deep[p[i]],maxdeepid=p[i];\n\t\t}\n\t\tfor(reg int i=1;i<=k;i++)if(p[i]!=maxdeepid){\n\t\t\tif(!check(p[i],maxdeepid)) goto NO;\n\t\t}\n\t\tstd::puts(\"YES\");continue;\n\t\tNO:;std::puts(\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1585324007,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "CF1328E Tree Queries"
    },
    {
        "content": "\u9898\u610f\uff1a  \n\n\u6bcf\u6b21\u8be2\u95ee\u7ed9\u4e00\u4e9b\u70b9\uff0c\u5224\u65ad\u80fd\u5426\u627e\u5230\u4e00\u6761\u4ece\u6839\u51fa\u53d1\u7684\u8def\u5f84\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5728\u8fd9\u6761\u94fe\u4e0a\u6216\u4e0e\u8fd9\u6761\u94fe\u7684\u8ddd\u79bb\u4e3a $1$ \u3002  \n\u8be2\u95ee\u7684\u70b9\u6570\u548c\u4e0d\u8d85\u8fc7 $2\\times 10^5$\u3002  \n\n\u8bf4\u53e5\u95f2\u8bdd\uff1a  \n\n\u6bd4\u8d5b\u7ed3\u675f\u524d1min\u60f3\u5230\u6b63\u89e3\uff0c\u6bd4\u8d5b\u7ed3\u675f\u540e30\u79d2\u6d4b\u5bf9\u6837\u4f8b\uff0cwzbl\u3002  \n\n\u5206\u6790\uff1a  \n\n\u8981\u60f3\u4f7f\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5728\u8fd9\u6761\u94fe\u4e0a\u6216\u4e0e\u8fd9\u6761\u94fe\u7684\u8ddd\u79bb\u4e3a $1$ \uff0c\u5219\u8fd9\u4e9b\u70b9\u7684\u7236\u4eb2\uff08\u4e0d\u59a8\u8bbe $1$ \u7684\u7236\u4eb2\u4e3a $1$\uff09\u5fc5\u987b\u5728\u4e00\u6761\u4ee5\u6839\u51fa\u53d1\u7684\u94fe\u4e0a\uff0c\u53ea\u9700\u5224\u65ad\u6240\u6709\u70b9\u7684\u7236\u4eb2\u662f\u5426\u5728\u4ee5\u6839\u51fa\u53d1\u7684\u94fe\u4e0a\u5373\u53ef\u3002\u628a\u8fd9\u4e9b\u70b9\u6309\u6df1\u5ea6\u6392\u5e8f\uff0c\u6392\u5b8c\u5e8f\u540e\u82e5\u76f8\u90bb\u4e24\u70b9\u7684 LCA \u5747\u4e3a\u6df1\u5ea6\u8f83\u5c0f\u7684\u90a3\u4e00\u4e2a\u70b9\uff0c\u5219\u8bf4\u660e\u5728\u4e00\u6761\u4ee5\u6839\u51fa\u53d1\u7684\u94fe\u4e0a\u3002  \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\sum k\\log \\sum k)$\u3002  \n\n\u4ee3\u7801\u5982\u4e0b\uff08[\u5feb\u8bfb\u6a21\u677f](https://www.luogu.com.cn/blog/andyli/read-template)\uff09\uff1a  \n```cpp\n#include <algorithm>\n#include <cstring>\nconst int maxn = 200005;\n\nint A[maxn];\n// \u6811\u5256LCA\ntemplate <int maxn>\nstruct Tree_Chain_Split {\n    struct Edge {\n        int next, to;\n        Edge(int next = 0, int to = 0) : next(next), to(to) {}\n    } edges[maxn << 1];\n    struct Node {\n        int dfc, top, dep, son, sz, fa;\n    } tree[maxn];\n\n    int id[maxn], head[maxn], cnt, dfc;\n    void AddEdge(int u, int v)\n    {\n        edges[++cnt] = Edge(head[u], v);\n        head[u] = cnt;\n    }\n    void dfs1(int u)\n    {\n        tree[u].sz = 1;\n        for (int i = head[u]; i; i = edges[i].next)\n            if (int v = edges[i].to; v != tree[u].fa) {\n                tree[v].fa = u;\n                tree[v].dep = tree[u].dep + 1;\n                dfs1(v);\n                tree[u].sz += tree[v].sz;\n                if (tree[v].sz > tree[tree[u].son].sz)\n                    tree[u].son = v;\n            }\n    }\n    void dfs2(int u, int t)\n    {\n        tree[u].top = t;\n        tree[u].dfc = ++dfc;\n        id[dfc] = u;\n        if (tree[u].son)\n            dfs2(tree[u].son, t);\n        for (int i = head[u]; i; i = edges[i].next)\n            if (int v = edges[i].to; v != tree[u].fa && v != tree[u].son)\n                dfs2(v, v);\n    }\n    int LCA(int x, int y)\n    {\n        while (tree[x].top != tree[y].top) {\n            if (tree[tree[x].top].dep < tree[tree[y].top].dep)\n                swap(x, y);\n            x = tree[tree[x].top].fa;\n        }\n        return tree[x].dep < tree[y].dep ? x : y;\n    }\n};\n\nTree_Chain_Split<maxn> t;\nint main()\n{\n    int n, m;\n    io.read(n, m);\n    for (int i = 1; i < n; i++) {\n        int u, v;\n        io.read(u, v);\n        t.AddEdge(u, v), t.AddEdge(v, u);\n    }\n    t.tree[1].fa = 1;\n    t.dfs1(1), t.dfs2(1, 1);\n    while (m--) {\n        int k;\n        io.read(k);\n        for (int i = 1; i <= k; i++) {\n            io.read(A[i]);\n            A[i] = t.tree[A[i]].fa;\n        }\n        std::sort(A + 1, A + 1 + k, [](const int& x, const int& y) { return t.tree[x].dep < t.tree[y].dep; });\n        bool flag = true;\n        for (int i = 1; i < k; i++)\n            flag &= t.LCA(A[i], A[i + 1]) == A[i];\n        writeln(flag ? \"YES\" : \"NO\");\n    }\n    return 0;\n}\n```",
        "postTime": 1585275824,
        "uid": 84282,
        "name": "andyli",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    },
    {
        "content": "\u9898\u76ee\u610f\u601d\u6570\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u8be2\u95ee\u4ee5\u6839\u8282\u70b9\u4e3a\u4e00\u7aef\u7684\u94fe\uff0c\u8be2\u95ee\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u5230\u6b64\u94fe\u7684\u8ddd\u79bb\u5747 $\\le1$\u3002\n\n\u6211\u4eec\u5148\u628a\u8fd9\u4e2a\u6761\u4ef6\u8f6c\u6362\u4e00\u4e0b\uff0c\u8be2\u95ee\u7684\u6bcf\u4e2a\u8282\u70b9\u5230\u6b64\u94fe\u7684\u8ddd\u79bb\u5747 $\\le1$\uff0c\u5c31\u662f\u5b83\u7684\u7236\u4eb2\u6216\u5b83\u81ea\u8eab\u5728\u8fd9\u6761\u94fe\u4e0a\u3002\n\n\u90a3\u4e48\u663e\u7136\uff0c\u5982\u679c\u8981\u7ecf\u8fc7\u5b83\uff0c\u5fc5\u987b\u5f97\u7ecf\u8fc7\u5b83\u7684\u7236\u4eb2\uff0c\u6240\u4ee5\u8fd9\u9898\u5c31\u53d8\u6210\u4e86\u8be2\u95ee\u4ee5\u6839\u8282\u70b9\u4e3a\u4e00\u7aef\u7684\u94fe\uff0c\u8be2\u95ee\u662f\u5426\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u5747\u5728\u94fe\u4e0a\u3002\n\n\u90a3\u8fd9\u9898\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u9996\u5148\u5bf9\u8fd9\u4e2a\u6811\u8fdb\u884c\u6811\u5256\uff0c\u7136\u540e\u628a $1$ \u53f7\u70b9\u5230\u8be2\u95ee\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u90fd\u6807\u4e3a $1$\uff0c\u7136\u540e\u76f4\u63a5\u5355\u70b9\u67e5\u8be2\uff0c\u8be2\u95ee\u5b8c\u540e\u6e05\u7a7a\u3002\n\n\u8bc1\u660e\u4e3a\u4ec0\u4e48\u5230\u8be2\u95ee\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\uff1a  \n\u82e5\u4e0d\u9009\u62e9\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\uff0c\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u4e00\u5b9a\u904d\u5386\u4e0d\u5230\u3002  \n\n### \u590d\u6742\u5ea6 $O(\\sum_{}k \\times \\log n)$\n\n## code:\n```\n#include <bits/stdc++.h>\nconst int N=2e5+5;\nusing namespace std;\nint n,m,x,y,k;\nvector<int>ji;\nbasic_string<int>e[N];\nint ans;\nint len,son[N],fa[N],deep[N],siz[N],top[N],now[N],last[N];\nvoid dfs1(int x)\n{\n\tsiz[x]=1;\n\tfor(auto y:e[x])\n\tif(y!=fa[x])\n\t{\n\t\tdeep[y]=deep[x]+1;fa[y]=x;\n\t\tdfs1(y);\n\t\tsiz[x]+=siz[y];\n\t\tif(siz[son[x]]<siz[y])son[x]=y;\n\t}\n}\nvoid dfs2(int x,int topp)\n{\n\ttop[x]=topp;now[x]=++len;last[len]=x;\n\tif(son[x])dfs2(son[x],topp);\n\tfor(auto y:e[x])\n\tif(y!=fa[x]&&y!=son[x])\n\tdfs2(y,y);\n}//\u6811\u5256\nint sum[4*N],tag[4*N];\nvoid pushup(int p){sum[p]=sum[p<<1]+sum[p<<1|1];}\nvoid pushdown(int p,int l,int r)\n{\n\tif(tag[p]==-1)return;\n\tint mid=(l+r)>>1;\n\tsum[p<<1]=(mid-l+1)*tag[p];\n\tsum[p<<1|1]=(r-mid)*tag[p];\n\ttag[p<<1]=tag[p];\n\ttag[p<<1|1]=tag[p];\n\ttag[p]=-1;\n}\nvoid update(int p,int ll,int rr,int l,int r,int k)\n{\n\tif(l<=ll&&rr<=r){sum[p]=(rr-ll+1)*k;tag[p]=k;return;}\n\tpushdown(p,ll,rr);\n\tint mid=(ll+rr)>>1;\t\n\tif(l<=mid)update(p<<1,ll,mid,l,r,k);\n\tif(r>mid)update(p<<1|1,mid+1,rr,l,r,k);\n\tpushup(p);\n}\nvoid date(int u,int v,int z)\n{\n\twhile(top[u]!=top[v])\n\t{\n\t\tif(deep[top[u]]<deep[top[v]])swap(u,v);\n\t\tupdate(1,1,n,now[top[u]],now[u],z);\n\t\tu=fa[top[u]];\n\t}\n\tif(deep[u]<deep[v])swap(u,v);\n\tupdate(1,1,n,now[v],now[u],z);\n}\nvoid query(int p,int ll,int rr,int k)\n{\n\tif(ll==rr&&ll==k){ans=sum[p];return;}\n\tpushdown(p,ll,rr);\n\tint mid=(ll+rr)>>1;\n\tif(k<=mid)query(p<<1,ll,mid,k);\n\tif(k>mid)query(p<<1|1,mid+1,rr,k);\n\tpushup(p);\n}//\u7ebf\u6bb5\u6811\u7ef4\u62a4\nint maxn,maxi;\nsigned main()\n{\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=4*n;i++)tag[i]=-1;\n\tfor(int i=1;i<n;i++){cin>>x>>y;e[x]+=y;e[y]+=x;}\n\tdeep[1]=1;fa[1]=1;dfs1(1);dfs2(1,1);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tji.clear();maxn=0;maxi=0;//\u6e05\u7a7a\n\t\tcin>>k;\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tcin>>x;\n\t\t\tif(fa[x]!=1)\n\t\t\t{\n\t\t\t\tji.emplace_back(fa[x]);\n\t\t\t\tif(deep[fa[x]]>maxn){maxn=deep[fa[x]];maxi=fa[x];}//\u5bfb\u627e\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\n\t\t\t}\n\t\t}\n\t\tif(ji.size()<=1){cout<<\"YES\\n\";continue;}\n\t\tdate(1,maxi,1);//\u6807\u8bb0\n\t\tfor(int j=0;j<ji.size();j++)\n\t\t{\n\t\t\tans=0;\n\t\t\tquery(1,1,n,now[ji[j]]);//\u67e5\u8be2\u70b9\n\t\t\tif(!ans){cout<<\"NO\\n\";goto ff;}\n\t\t}\n\t\tcout<<\"YES\\n\";\n\t\tff:;\n\t\tdate(1,maxi,0);//\u6e05\u7a7a\n\t}\n}\n```",
        "postTime": 1673433896,
        "uid": 230243,
        "name": "syf2008",
        "ccfLevel": 0,
        "title": "CF1328E Tree Queries \u9898\u89e3"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u522b\u7684\u9898\u89e3\u597d\u50cf\u90fd\u5e26\u4e86\u4e2alog\uff0c\u5176\u5b9e\u597d\u50cf\u4e0d\u7528\uff0c\u56e0\u4e3a\u662f\u4ece\u6839\u5230\u67d0\u4e2a\u70b9\u7684\u8def\u5f84\u90a3\u4e48\u4f60\u5982\u679c\u8981\u7ecf\u8fc7\u5176\u4e2d\u4e00\u4e2a\u8be2\u95ee\u70b9\u7684\u513f\u5b50\u90a3\u4e48\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u8fd9\u4e2a\u8be2\u95ee\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u70b9\u4f60\u8981\u4e48\u7ecf\u8fc7\u5b83\uff0c\u8981\u4e48\u7ecf\u8fc7\u5b83\u7684\u7236\u4eb2\uff0c\u663e\u7136\u53ef\u4ee5\u770b\u51fa\u4f1a\u9009\u62e9\u7684\u70b9\u4e00\u5b9a\u662f\u8be2\u95ee\u70b9\u4e2d\u6df1\u5ea6\u6700\u6df1\u7684\u5176\u4e2d\u4e00\u4e2a\n\n\u90a3\u4e48\u5176\u5b9e\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5\u5bf9\u5e94\u5230\u4e66\u4e0a\u7684\u4e00\u4e9b\u70b9\u4e0a\u9762\uff0c\u53ea\u9700\u8981\u5728\u904d\u5386\u6811\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u6839\u5230\u5f53\u524d\u70b9\u7684\u8def\u5f84\u6709\u54ea\u4e9b\u70b9\u8d70\u8fc7\u4e86\uff0c\u5e76\u5728\u6bcf\u4e2a\u70b9\u5224\u65ad\u4e00\u4e0b\u5bf9\u5e94\u7684\u8be2\u95ee\u5c31\u884c\u4e86\n\n\u590d\u6742\u5ea6\u5e94\u8be5\u662fO\uff08n+k\uff09\uff1f\uff08\u4e0d\u5927\u4f1a\u7b97...\uff09\n\n\u4ee3\u7801\u5e38\u6570\u5de8\u5927\uff0c\u53ef\u81ea\u884c\u4f18\u5316emmm\n```\n#pragma GCC optimize(2)\n#include <bits/stdc++.h>\n#include <ext/pb_ds/priority_queue.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst ll inff = 0x3f3f3f3f3f3f3f3f;\n#define FOR(i,a,b) for(int i(a);i<=(b);++i)\n#define FOL(i,a,b) for(int i(a);i>=(b);--i)\n#define REW(a,b) memset(a,b,sizeof(a))\n#define inf int(0x3f3f3f3f)\n#define si(a) scanf(\"%d\",&a)\n#define sl(a) scanf(\"%I64d\",&a)\n#define sd(a) scanf(\"%lf\",&a)\n#define ss(a) scanf(\"%s\",a)\n#define mod ll(998244353)\n#define pb push_back\n#define eps 1e-6\n#define lc d<<1\n#define rc d<<1|1\n#define Pll pair<ll,ll>\n#define P pair<int,int>\n#define pi acos(-1)\n#define VI vector<vector<int>>\nusing namespace std;\nconst int N=2e5+8;\nint n,m,fa[N],k[N],x,y,deep[N],vis[N],mp[N];\nvector<int>g[N],ds[N];\nvector<P> q[N];\nvoid dfs(int u,int f)\n{\n    deep[u]=deep[f]+1;fa[u]=f;\n    for(int i=0;i<g[u].size();i++)\n    {\n        int v=g[u][i];\n        if(v==f) continue;\n        dfs(v,u);\n    }\n}\n\nvoid gao(int u)\n{\n    mp[u]=1;\n    for(int i=0;i<ds[u].size();i++)\n    {\n        int v=ds[u][i],flag=1;\n        FOR(j,0,k[v]-1)\n        {\n            P qw=q[v][j];\n            if(mp[qw.first]||mp[qw.second]) continue;\n            flag=0;break;\n        }\n        vis[v]=flag;\n    }\n    for(int i=0;i<g[u].size();i++)\n    {\n        int v=g[u][i];\n        if(v==fa[u]) continue;\n        gao(v);\n    }\n    mp[u]=0;\n}\nint main()\n{\n    cin.tie(0);\n    cout.tie(0);\n    cin>>n>>m;\n    FOR(i,1,n-1)\n    {\n        si(x),si(y);\n        g[x].pb(y);\n        g[y].pb(x);\n    }\n    dfs(1,0);\n    FOR(i,1,m)\n    {\n        si(k[i]);\n        int qw=0,zz;\n        FOR(j,1,k[i])\n        {\n            si(x),q[i].pb(P(fa[x],x));\n            if(deep[x]>qw) qw=deep[x],zz=x;\n        }\n        ds[zz].pb(i);\n    }\n    gao(1);\n    FOR(i,1,m)\n    {\n        if(vis[i]) puts(\"YES\");\n        else puts(\"NO\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1585319824,
        "uid": 66243,
        "name": "lmb990607",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6bd2\u7624\u7684\u591a\u7ec4\u8be2\u95ee\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u80fd\u6bcf\u6b21\u8be2\u95ee\u90fd dfs \u4e00\u904d\uff0c\u53c8\u770b\u5230\u4e86 $\\sum\\limits\\ k$ $\\le$ $2e5$ \uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5e94\u8be5\u662f\u8981\u5e26 $k$ \u7684\u3002\n\n\u8fd9\u9898\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u505a\u6cd5\u5c31\u662f\u9009\u62e9\u4ece\u6839\u5230\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u7684\u8def\u5f84\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u53bb\u770b\u5b83\u6216\u8005\u5b83\u7684\u7236\u4eb2\u662f\u5426\u5728\u8fd9\u4e2a\u8def\u5f84\u4e0a\u3002\u5927\u6982\u6734\u7d20\u505a\u6cd5\u662f\u5e73\u65b9\u7684\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u6cbf\u7740\u8fd9\u6761\u8def\u5f84\u641c\uff0c\u5982\u679c\u8fd9\u6761\u8def\u5f84\u5f88\u957f\uff0c\u4f8b\u5982\u8fd9\u9897\u6811\u662f\u6761\u94fe\uff0c\u5c31 GG \u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u4e2a\u70b9\u3002\n\n\u6211\u4eec\u8bb0\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u4e3a $u$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $v$ \uff0c\u5b83\u548c $u$ \u7684 LCA \u5fc5\u5b9a\u662f\u5728\u9009\u5b9a\u7684\u8def\u5f84\u4e0a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u4e2a LCA \u548c $v$ \u662f\u5426\u8ddd\u79bb $\\le1$ \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(logn\\sum\\limits k$)\n\ncode\uff1a\n```\n#include\"bits/stdc++.h\"\nusing namespace std;\n#define ll long long\n#define ri register int\ninline int rd(){\n\tint x=0,flag=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') flag=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+(ch^48);ch=getchar();}\n\treturn x*flag;\n}\nint n,m,k,a[200010],x,y;\nint wl,head[200010],dep[200010],f[200010][20];\nstruct node{\n\tint nxt,to;\n}star[400010];\ninline void add(int from,int to){\n\twl++;\n\tstar[wl].to=to;\n\tstar[wl].nxt=head[from];\n\thead[from]=wl;\n}\ninline int lowbit(int x){return x & ( - x ) ;}\nvoid dfs(int now,int fa){\n\tdep[now]=dep[fa]+1;\n\tf[now][0]=fa;\n\tfor(ri i=head[now];i;i=star[i].nxt)\n\t{\n\t\tint u=star[i].to;\n\t\tif(u==fa) continue;\n\t\tdfs(u,now);\n\t}\n}\ninline int get_lca(int x,int y){\n\tif(dep[x]<dep[y]) swap(x,y);\n\tint t=dep[x]-dep[y];\n\tfor(ri i=0;i<=19;++i)\n\tif(t&(1<<i)) x=f[x][i];\n\tfor(ri i=19;i>=0;--i)\n\tif(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\tif(x==y) return x;\n\treturn f[x][0];\n}\ninline void calc(){\n\tfor(ri j=1;j<=19;++j)\n\tfor(ri i=1;i<=n;++i)\n\tf[i][j]=f[f[i][j-1]][j-1];\n}\nint main()\n{\n\tn=rd(),m=rd();\n\tfor(ri i=1;i<n;++i)\n\t{\n\t\tx=rd(),y=rd();\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs(1,0);\n\tcalc();\n\twhile(m--)\n\t{\n\t\tk=rd();\n\t\tint maxn=1,flg=1;\n\t\tfor(ri i=1;i<=k;++i) {a[i]=rd();if(dep[a[i]]>dep[maxn]) maxn=a[i];}\n\t\tfor(ri i=1;i<=k;++i)\n\t\t{\n\t\t\tint lca=get_lca(a[i],maxn);\n\t\t\tif(lca!=a[i]&&f[a[i]][0]!=lca) flg=0;\n\t\t}\n\t\tif(flg) puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1585299916,
        "uid": 135839,
        "name": "Fairicle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    },
    {
        "content": "\u770b\u5230$\\sum k_i$\u4ee5\u4e3a\u662f\u4e2a\u865a\u6811\uff0c\u540e\u6765\u53d1\u73b0\u8fd9\u9053\u9898\u76ee\u6bd4\u8f83\u61a8\n\n\u9996\u5148\u6700\u4f18\u7b56\u7565\u80af\u5b9a\u9009\u4ece\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u5230\u6839\u7684\u4e00\u6761\u94fe\n\n\u90a3\u4e48\u9009\u51fa\u6765\u540e\uff0c\u53ea\u8981\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\uff0c\u90fd\u5728\u8fd9\u6761\u94fe\u4e0a\u5c31\u53ef\u4ee5\u4e86(\u7279\u5224\u4e00\u4e0b\u6839)\n\n\u5b9e\u73b0\u65b9\u6cd5\u6811\u5256\u548c$\\text{LCA}$\u90fd\u53ef\u4ee5\n\n$\\text{LCA}$\u590d\u6742\u5ea6$O(\\log n\\sum k_i)$\n\n\u6811\u5256\u590d\u6742\u5ea6$O(\\log^2n\\sum k_i)$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<set>\n#include<queue>\n#define M 2010000\n#define inf 0x3f3f3f3f\n#define LL long long\n#define int long long\nconst int mod=998244353;\nusing namespace std;\ninline int read(){\n\tint f=1,x=0;char s=getchar();\n\twhile (!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile (isdigit(s)){x=(x<<1)+(x<<3)+(s^48),s=getchar();}\n\treturn x*f;\n}\nint n,m,head[M],cnt,a[M];\nstruct edge{int to,nxt;}e[M];\ninline void add_edge(int u,int v){e[++cnt].nxt=head[u],head[u]=cnt,e[cnt].to=v;}\nint dep[M],fa[M],top[M],son[M],siz[M],id[M],ref[M],tot;\ninline void dfs1(int rt,int f){\n\tfa[rt]=f,dep[rt]=dep[f]+1,siz[rt]=1;\n\tfor (int i=head[rt];i;i=e[i].nxt){\n\t\tif (e[i].to==f) continue;\n\t\tdfs1(e[i].to,rt),siz[rt]+=siz[e[i].to];\n\t\tif (siz[e[i].to]>siz[son[rt]]) son[rt]=e[i].to;\n\t}\n}\ninline void dfs2(int rt,int topf){\n\ttop[rt]=topf,id[rt]=++tot,ref[tot]=rt;\n\tif (!son[rt]) return;\n\tdfs2(son[rt],topf);\n\tfor (int i=head[rt];i;i=e[i].nxt){\n\t\tif (e[i].to==fa[rt]||e[i].to==son[rt]) continue;\n\t\tdfs2(e[i].to,e[i].to);\t\n\t}\n}\ninline int get_lca(int x,int y){\n\twhile (top[x]!=top[y]){\n\t\tif (dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tx=fa[top[x]];\n\t}\n\tif (dep[x]<dep[y]) swap(x,y);\n\treturn y;\n}\nsigned main(void){\n\tn=read(),m=read();\n\tfor (int i=1;i<=n-1;i++){\n\t\tint u=read(),v=read();\n\t\tadd_edge(u,v),add_edge(v,u);\n\t}\n\tdfs1(1,0),dfs2(1,1);\n\tfor (int i=1;i<=m;i++){\n\t\tint k=read(),now=0,flag=1;\n\t\tfor (int j=1;j<=k;j++) a[j]=read(),now=dep[a[j]]>dep[now]?a[j]:now;\n\t\tfor (int j=1;j<=k;j++){\n\t\t\tint lca=get_lca(now,a[j]);\n\t\t\tif (lca!=a[j]&&lca!=fa[a[j]]&&a[j]!=1) flag=0;\n\t\t}\n\t\tif (flag) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1585280734,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1328E \u3010Tree Queries\u3011"
    }
]