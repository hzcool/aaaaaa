[
    {
        "content": "## $solution:$\n\n\u601d\u8def\u5927\u5bb6\u5e94\u8be5\u90fd\u61c2\uff1a\n\n\u72b6\u538bDP\uff1a$f[i][j]$\uff0c\u5176\u4e2d $i$ \u8fd9\u4e00\u7ef4\u662f\u9700\u8981\u72b6\u538b\u7684\uff0c\u7528\u6765\u8bb0\u5f5519\u4e2a\u8282\u70b9\u6bcf\u4e00\u4e2a\u662f\u5426\u5df2\u7ecf\u8d70\u8fc7\uff08\u8d70\u8fc7\u4e3a $1$ ,\u6ca1\u8d70\u4e3a $0$ ,\u7528 $2$\u8fdb\u5236 \u538b\u7f29\u4e00\u4e0b\u5373\u53ef\uff09\u3002\u540c\u65f6\uff0c\u6211\u4eec\u8ba4\u4e3a\u72b6\u538b\u4e2d\u5df2\u7ecf\u8d70\u8fc7\u7684\u5e8f\u53f7\u6700\u5c0f\u7684\u8282\u70b9\u4e3a\u51fa\u53d1\u8282\u70b9\uff0c$j$ \u5373\u6570\u7ec4\u7b2c\u4e8c\u7ef4\u662f\u8def\u5f84\u7ec8\u70b9\u3002\uff08\u5f53\u8fd9\u4e24\u4e2a\u6570\u76f8\u540c\u65f6\uff0c\u8bf4\u660e\u627e\u5230\u4e86\u4e00\u4e2a\u73af\uff09\u3002\n\n\u6ce8\uff1a\u8fd9\u79cd\u65b9\u6cd5\u56e0\u4e3a\u65e0\u5411\u56fe\u7684\u5b58\u5728\uff0c\u4f1a\u51fa\u73b0\uff08\u540c\u4e00\u6761\u8def\u5f84\u51fa\u73b0\u4e24\u6b21\uff09\uff08\u4e00\u6761\u8fb9\u548c\u4e24\u4e2a\u7aef\u70b9\u6784\u6210\u975e\u6cd5\u73af\uff09\u7684\u60c5\u51b5\uff0c\u8fd9\u53ea\u9700\u8981\u5728\u8f93\u51fa\u7b54\u6848\u65f6 $ans=(ans-m)/2$ \u5373\u53ef\uff01\n## $code:$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<iomanip>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n\n#define ll long long\n#define db double\n#define inf 0x7fffffff\n#define rg register int\n\nusing namespace std;\n\nint n,m,t,u,v;\nbool a[19][19]; //\u5b58\u8fb9\nll ans,f[600001][19]; //\u72b6\u538b\n\ninline int qr(){ //\u5feb\u8bfb\n\tchar ch;\n\twhile((ch=getchar())<'0'||ch>'9');\n\tint res=ch^48;\n\twhile((ch=getchar())>='0'&&ch<='9')\n\t\tres=res*10+(ch^48);\n\treturn res;\n}\n\nint main(){\n\t//freopen(\"hamilton.in\",\"r\",stdin);\n\t//freopen(\"hamilton.out\",\"w\",stdout);\n\tn=qr(),m=qr();t=1<<n;\n\tfor(rg i=1;i<=m;++i){\n\t\tu=qr()-1;v=qr()-1;\n\t\ta[u][v]=a[v][u]=1;//\u52a0\u8fb9\n\t}\n\tfor(rg i=0;i<n;++i)\n\t\tf[1<<i][i]=1; //\u521d\u59cb\u5316\uff08\u521b\u5efa\u4ee5i\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\uff09\n\tfor(rg i=1;i<=t;++i){\n\t\tfor(rg j=0;j<n;++j){\n\t\t\tif(!f[i][j])continue; //\u52a0\u901f\n\t\t\tfor(rg k=0;k<n;++k){\n\t\t\t\tif(!a[j][k])continue; //\u52a0\u901f\n\t\t\t\tif((i&-i)>1<<k)continue; //\u8d77\u70b9\u4e0d\u80fd\u6539\uff01\uff01\uff01\uff08\u53bb\u91cd\uff09\n\t\t\t\tif(1<<k&i){ //\u8fd9\u4e2a\u70b9\u8d70\u8fc7\n\t\t\t\t\tif(1<<k==(i&-i)) //\u8d77\u70b9\u4e0e\u7ec8\u70b9\u76f8\u540c\n\t\t\t\t\t\tans+=f[i][j];\n\t\t\t\t}else f[i|1<<k][k]+=f[i][j]; //\u6ca1\u8d70\u8fc7\u5c31\u8d70\uff01\n\t\t\t}\n\t\t}\n\t}printf(\"%lld\",(ans-m)/2); //\u5904\u7406\u4e4b\u540e\u518d\u8f93\u51fa\uff01\n\treturn 0;\n}\n\n```",
        "postTime": 1548464819,
        "uid": 111334,
        "name": "\u706f\u82af\u7cd5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF11D \u3010A Simple Task\u3011"
    },
    {
        "content": "\u72b6\u538b$DP,f[u][s][v]$\u4e3a$u->v$\u7684\u73af\u7ecf\u8fc7\u8def\u5f84\u72b6\u6001\u4e3as\u7684\u8def\u5f84\u6570\n\n\n\u8fd9\u6837\u4f1a\u6709\u91cd\u590d,\u6240\u4ee5\u76f4\u63a5\u8bbe$f[s][u]$\u8868\u793a$s$\u4e2d\u6700\u5c0f\u7684\u70b9\u5230u\u7684\u8def\u5f84\u6570\n\n\n\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u8ba1\u7b97,\u56de\u5230\u7684\u70b9\u4e3a$s$\u4e2d\u6700\u5c0f\u7684\u70b9(\u8fd9\u662f\u4e00\u4e2a\u4f18\u5316,\u5c11\u4e86\u679a\u4e3e\u6700\u5c0f\u70b9\u8fd9\u4e2a\u5faa\u73af)\n\n\n\u5982\u679c$v$\u662f$s$\u4e2d\u6700\u5c0f\u7684\u70b9\u90a3\u4e48$ans+=f[s][u]$\n\n\n\u5982\u679c$v$\u4e0d\u5728$s$\u4e2d\u90a3\u4e48$f[s|1<<v][v]+=f[s][u]$\n\n\n\u7136\u540e\u4e00\u4e2a\u73af\u4f1a\u88ab\u8bb0\u4e24\u6b21\u8fd8\u6709\u539f\u6765\u7684$m$\u6761\u53cc\u5411\u8fb9\u4e5f\u662f\u73af,\u51cf\u6389\u5c31\u597d\u4e86\n\n\n\u7136\u540e\u8fd9\u91cc\u6709\u4e00\u4e2a\u8bb2\u5f97\u6bd4\u8f83\u597d\u7684[blog](http://blog.csdn.net/fangzhenpeng/article/details/49078233)\n",
        "postTime": 1517185778,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF11D \u3010A Simple Task\u3011"
    },
    {
        "content": "# A Simple Task\n\n## 1.\u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u200b\t\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b$n (n \\leq 19)$\u4e2a\u70b9\u7684**\u7b80\u5355\u56fe**\uff0c\u6c42\u8fd9\u4e2a\u56fe\u4e2d\u5305\u542b\u7684 **\u7b80\u5355\u73af\uff08\u91cd\u8fb9\u6784\u6210\u7684\u4e8c\u5143\u73af\u4e0d\u7b97\uff09**\u7684\u4e2a\u6570\u3002\n\n- \u9650\u5236\uff1a 2$s$ + 256$MB$.\n\n## 2.\u89e3\u6cd5\uff1a\n\n\u200b\t\u8003\u8651\u72b6\u538bDP.\n\n\u200b\t$f[k][i]$\u8868\u793a\u5f53\u524d\u70b9\u4e3a$i$\uff0c\u524d\u9762\u7ecf\u8fc7\u7684\u70b9\u7684\u72b6\u6001\u4e3a$k$\u7684\u7b80\u5355\u8def\u5f84\u7684\u6761\u6570\u3002\n\n\u200b\t\u6ce8\u610f\u5230**\u73af1\uff0c2\uff0c3**\u548c**\u73af3\uff0c1\uff0c2**\u662f\u540c\u4e00\u4e2a\u73af\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u7684\u91cd\u590d\u8ba1\u7b97\uff0c\u6211\u4eec\u91cd\u65b0\u89c4\u5b9a\uff0c$f[k][i]$\u8868\u793a\u5f53\u524d\u70b9\u4e3a$i$\uff0c\u524d\u9762\u7ecf\u8fc7\u7684\u70b9\u5f97\u72b6\u6001\u4e3a$k$\uff0c**\u4e14\u7ecf\u8fc7\u7684\u7684\u7b2c\u4e00\u4e2a\u70b9\u662f\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u4e00\u4e2a**\u7684\u7b80\u5355\u8def\u5f84\u7684\u6761\u6570\u3002\n\n\u200b\t\u6211\u4eec\u679a\u4e3e$i$\u76f4\u63a5\u76f8\u8fde\u7684\u70b9$j$\uff0c\u5982\u679c$j$\u7684\u7f16\u53f7\u6bd4\u524d\u9762\u7ecf\u8fc7\u7684\u6700\u5c0f\u7684\u7f16\u53f7\u8fd8\u8981\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a$j$\u662f\u975e\u6cd5\u7684\uff0c\u56e0\u4e3a\u5728\u6211\u4eec\u7684\u89c4\u5b9a\u4e2d\uff0c$j$\u4e0d\u662f\u7b2c\u4e00\u4e2a\u7ecf\u8fc7\u7684\u70b9\uff0c\u90a3\u4e48\u5b83\u7684\u7f16\u53f7\u5c31\u4e0d\u80fd\u662f\u6700\u5c0f\u7684\u3002\n\n\u200b\t\u5982\u679c\u70b9$j$\u662f\u4e00\u4e2a\u8fd8\u6ca1\u6709\u7ecf\u8fc7\u8fc7\u7684\u70b9\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u72b6\u6001\u8f6c\u79fb\uff0c\u5f80\u524d\u63a8\u4e00\u6b65\uff1a\n$$\nf[k | (1 << j)] = f[k|(1 << j)] + f[k][i]\n$$\n\u200b\t\u5982\u679c\u70b9$j$\u662f\u4e00\u4e2a\u5df2\u7ecf\u7ecf\u8fc7\u8fc7\u7684\u70b9\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- $j$\u662f\u72b6\u6001$k$\u4e2d\u7b2c\u4e00\u4e2a\u7ecf\u8fc7\u7684\u70b9\uff1a\n\n  \u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u76f4\u63a5\u5c06$ans$\u52a0\u4e0a$f[k][i]$.\n\n- $j$\u4e0d\u662f\u72b6\u6001$k$\u4e2d\u7b2c\u4e00\u4e2a\u7ecf\u8fc7\u7684\u70b9\uff1a\n\n  \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4ec0\u4e48\u64cd\u4f5c\u90fd\u4e0d\u505a\u3002\u56e0\u4e3a\u5f53\u524d\u73af\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4f1a\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\u5904\u7406\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u518d\u52a0\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u73af\u91cd\u590d\u4ea7\u751f\u8d21\u732e\u7684\u9519\u8bef\u3002\n\n\u200b    **\u6700\u540e\u6ce8\u610f**\uff0c\u6211\u4eec\u7684\u8fd9\u79cd\u505a\u6cd5\u4f1a\u628a\u91cd\u8fb9\u6784\u6210\u7684\u4e8c\u5143\u73af\u7b97\u8fdb\u53bb\uff0c\u540c\u65f6\u4f1a\u628a\u4e8c\u5143\u4ee5\u4e0a\u7684\u73af\u7684\u8d21\u732e\u7b97\u4e24\u6b21\uff08\u987a\u65f6\u9488\u4e00\u6b21\uff0c\u9006\u65f6\u9488\u4e00\u6b21\uff09\uff0c\u6240\u4ee5\u6700\u540e\u9700\u8981\u5bf9\u7b54\u6848\u8fdb\u884c\u5904\u7406\u3002\n\n\n\n## 3.\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n\nusing namespace std;\n\nconst int maxn = 1e2 + 5;\nint n,m,x,y;\nint first[maxn],last[maxn],dx[maxn << 1],nxt[maxn << 1],xb;\nlong long f[1 << 20][20],cnt; //\u6ce8\u610f\u7b54\u6848\u5f88\u5927\uff0c\u8fd9\u91cc\u8981\u7528long long.\n\nvoid build(int x,int y) {\n\tdx[++xb] = y;\n\tif (!first[x])\n\t\tfirst[x] = xb; else\n\t\tnxt[last[x]] = xb;\n\tlast[x] = xb;\t\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1; i<=m; i++) {\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx--;\n\t\ty--;\n\t\tbuild(x,y);\n\t\tbuild(y,x);\n\t}\n\tfor (int i=0; i<n; i++)\n\t\tf[1 << i][i] = 1;   //\u521d\u59cb\u5316\n\t\t\n\tfor (int k=1; k < (1 << n); ++k)\n\t\tfor (int i=0; i<n; ++i) {\n\t\t\tif (!f[k][i])\n\t\t\t\tcontinue;        //\u5982\u679c\u8fd9\u79cd\u72b6\u6001\u4e0d\u5b58\u5728\uff0c\u5c31\u8df3\u8fc7\u3002\n\t\t\tfor (int j=first[i]; j; j = nxt[j]) {\n\t\t\t\tint y = dx[j];   //\u679a\u4e3e\u4e0ei\u76f4\u63a5\u76f8\u8fde\u7684\u70b9y\n\t\t\t\tif ((k & (-k)) > (1 << y))\n\t\t\t\t\tcontinue;   //\u679a\u4e3e\u5230\u7684y\u4e0d\u5408\u6cd5\n\t\t\t\tif (k & (1 << y)) {    //\u5982\u679c\u70b9y\u662f\u4e00\u4e2a\u7ecf\u8fc7\u8fc7\u7684\u70b9\n\t\t\t\t\tif ((k & (-k)) == (1 << y))  \n\t\t\t\t\t\tcnt += f[k][i];  //\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0cy\u662f\u7b2c\u4e00\u4e2a\u7ecf\u8fc7\u7684\u70b9\n\t\t\t\t} else\n\t\t\t\t\tf[k | (1 << y)][y] += f[k][i]; //y\u6ca1\u6709\u7ecf\u8fc7\u8fc7\uff0c\u76f4\u63a5\u8f6c\u79fb\n\t\t\t}\n\t\t}\n\tprintf(\"%lld\\n\",(cnt - m) / 2); //\u6700\u540e\u5bf9\u7b54\u6848\u7684\u5904\u7406\n\treturn 0;\n}\n```\n\n\n\n  \n",
        "postTime": 1593606981,
        "uid": 25736,
        "name": "040902fyn",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF11D \u3010A Simple Task\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF11D)\n\n\u521d\u770b\u4e00\u773c\uff0c\u53ef\u4ee5\u7531\u6570\u636e\u8303\u56f4\u770b\u51fa\u6765\u53ef\u4ee5\u7528\u72b6\u538b```DP```\u6765\u505a\u3002\u53c8\u56e0\u4e3a\u8fd9\u4e00\u9053\u9898\u662f\u4e00\u4e2a\u5728\u56fe\u5185\u6c42\u7ed3\u679c\u7684\u4e00\u9053\u9898\uff0c\u6240\u4ee5\u8bf4\u53ef\u4ee5\u7528\u8bb0\u5fc6\u5316\u641c\u7d22+\u72b6\u538b\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4ee4$f_{s,i,j}$\u4e3a\u904d\u5386\u8fc7\u7684\u70b9\u96c6\u4e3a$s$\uff0c\u521d\u59cb\u70b9\u4e3a$i$\u5f53\u524d\u70b9\u4e3a$j$\u7684\u8def\u5f84\u6570\u3002\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u6240\u6709\u7684$f_{s,i,i}$\u3002\u4f46\u662f\uff0c\u8fd9\u6709\u4e2a\u95ee\u9898\uff1a\u7a7a\u95f4\u4f1a\u7206\u70b8\u3002$2^{19}\u00d719\u00d719$\u4e0d\u7ba1\u600e\u4e48\u8bf4\u5f88\u660e\u663e\u662f\u585e\u4e0d\u8fdb```250MB```\u7684\u3002\u5e76\u4e14\uff0c\u7531\u4e8e\u73af\u7684\u521d\u59cb\u70b9\u53ef\u4ee5\u662f\u73af\u4e0a\u7684\u4efb\u610f\u4e00\u70b9\uff0c\u6240\u4ee5\u8bf4\u7b54\u6848\u52bf\u5fc5\u504f\u5927\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$f_s$\uff0c\u7b54\u6848\u90fd\u8981\u9664\u4ee5\u70b9\u96c6s\u5185\u7684\u70b9\u4e2a\u6570\uff0c\u4e5f\u5bfc\u81f4\u4e86\u7edf\u8ba1\u7b54\u6848\u7684\u56f0\u96be\u3002\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u81f3\u5c11\u4f18\u5316\u6389\u4e00\u7ef4\u3002~~\u7136\u540e\u6211\u5c31\u5728\u8fd9\u91cc\u5361\u4e8630\u5206\u949f~~\u3002\n\n30\u5206\u949f\u8fc7\u540e\uff0c\u6211~~\u770b\u9898\u89e3~~\u60f3\u5230\u4e86\u4e00\u79cd\u4f18\u5316\uff1a\u4ee4$f_{s,i}$\u8868\u793a\u4ee5\u904d\u5386\u8fc7\u7684\u70b9\u96c6\u4e3a$s$\uff0c\u521d\u59cb\u70b9\u4e3a$s$\u6700\u4f4e\u4f4d\uff0c\u5f53\u524d\u70b9\u4e3a$i$\u7684\u8def\u5f84\u6570\u3002\u8fd9\u6837\u5b50\uff0c\u53ef\u884c\u6027\u5f88\u5bb9\u6613\u60f3\u51fa\u6765\uff1a\u8fd9\u6837\u5b50\u5c31\u56fa\u5b9a\u4e86\u4e00\u4e2a\u73af\u7684\u521d\u59cb\u70b9\uff0c\u4e0d\u4f1a\u91cd\u590d\u7edf\u8ba1\uff0c\u5185\u5b58\u4e5f\u5c0f\u4e86\u5f88\u591a\uff0c~~\u800c\u4e14\u521a\u597d\u5361\u7684\u8fdb64M\uff0c\u6240\u4ee5\u5176\u5b9en <= 20\u5e94\u8be5\u95ee\u9898\u4e0d\u5927~~\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5728\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8f6c\u79fb\uff1f\u6211\u4eec\u5728\u904d\u5386\u5f53\u524d\u70b9\u7684\u6bcf\u4e00\u4e2a\u90bb\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5982\u679c\u5b83\u5728\u5f53\u524d\u70b9\u96c6\u7684\u65f6\u5019\uff0c\u5e76\u4e14\u8fd8\u6070\u5de7\u662f\u8fd9\u4e2a\u70b9\u96c6\u7684\u6700\u5c0f\u7684\u70b9\uff08\u4e5f\u5c31\u662f\u5f00\u59cb\u70b9\uff09\uff0c\u90a3\u4e48\u5c31\u6210\u4e86\u73af\uff0c\u662f\u4e00\u79cd\u60c5\u51b5\u3002\u5982\u679c\u4e0d\u5728\u5f53\u524d\u70b9\u96c6\u7684\u8bdd\uff0c\u53ea\u8981\u4fdd\u8bc1\u4ed6\u6bd4\u6700\u4f4e\u4f4d\u7684$1$\u7684\u4f4d\u7f6e\u5927\uff08\u4e0d\u66f4\u6539\u521d\u59cb\u70b9\uff09\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u8f6c\u79fb\u4e86\u3002\n\n\u6b64\u5916\uff0c\u8fd9\u4efd\u4ee3\u7801\u91cc\u9762\u6709\u7528\u5230```__builtin```\u7cfb\u5217\u51fd\u6570\uff0c\u5177\u4f53\u76f8\u5173\u53ef\u4ee5\u770b[\u8fd9\u7bc7\u535a\u5ba2](https://www.luogu.com.cn/blog/your-alpha1022/gcc-hei-ke-ji-zhi-builtin-ji-lie-han-shuo)\uff0c\u4e0d\u60f3\u770b\u7684\u8bdd\u5728\u4ee3\u7801\u91cc\u9762\u89e3\u91ca\u4e86\u4e00\u4e0b\u3002\u5269\u4e0b\u7684\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u9762\u4f1a\u5199\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\nusing namespace std;\n#define count(x) __builtin_popcountll(x)//\u6c42\u4e00\u4e2a\u6570\u4e8c\u8fdb\u5236\u91cc\u6709\u591a\u5c11\u4e2a1\n#define smallest_one(x) __builtin_ffsll(x)//\u6c42\u6700\u5c0f\u76841\u5728\u7b2c\u51e0\u4f4d\ntemplate<typename T> inline void read(T& t) {\n    t=0;short f=1;char ch=getchar();double d = 0.1;\n    while (ch<'0'||ch>'9') {if (ch=='-') f=-f;ch=getchar();}\n    while (ch>='0'&&ch<='9') t=t*10+ch-'0',ch=getchar();\n    if(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n    t*=f;\n}\n#define int long long\nconst int maxn = 20;\nint n, m;\n\nint last[maxn], ecnt;\nstruct edge{int y, gg;} e[3005];\ninline void addedge(int x, int y){\n    e[++ecnt].y = y; e[ecnt].gg = last[x];\n    last[x] = ecnt;\n}\n\nll f[1<<maxn][maxn];\nbool vis[maxn];\nll dfs(int x, int stat){\n    vis[x] = 1;//\u9632\u91cd\n    if(f[stat][x]) return f[stat][x]; //\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u641c\u8fc7\u5c31\u4e0d\u641c\n    for(int i = last[x]; i; i = e[i].gg){\n        int y = e[i].y;\n        if((1<<(y-1)) & stat){\n            if(count(stat) > 2 && y == smallest_one(stat)){\n            //\u5173\u4e8e\u8fd9\u4e2acount(stat)\u4e3a\u4ec0\u4e48\u8981\u5927\u4e8e2\uff0c\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u4f1a\u5b58\u5728\u4e00\u6761\u8fb9\u4e24\u4e2a\u70b9\u7684\u5047\u73af\uff0c\u6bd5\u7adf\u662f\u65e0\u5411\u56fe\uff0cdfs\u53ef\u80fd\u4f1a\u51fa\u73b0\n            //\u5176\u4ed6\u9898\u89e3\u7684(ans-m)/2\u4e5f\u662f\u8fd9\u4e2a\u539f\u56e0\uff0c\u6392\u9664\u6389\u4e00\u6761\u8fb9\u4e24\u4e2a\u70b9\u7684\u5047\u73af\n                ++f[stat][x];\n            }\n        }else{\n            if(y > smallest_one(stat)){\n                f[stat][x] += dfs(y, stat | (1 << (y - 1)));\n            }\n        }\n    }\n    return f[stat][x];\n}\nsigned main(){\n    read(n); read(m);\n    int xx, yy;\n    for(int i = 1; i <= m; ++i){\n        read(xx); read(yy);\n        addedge(xx,yy); addedge(yy,xx);\n    }  \n    \n    ll ans = 0;\n    for(int i = 1; i <= n; ++i){\n        ans += dfs(i, 1<<(i-1));\n    }\n    \n    printf(\"%lld\\n\", ans/2);\n    //\u4e3a\u4ec0\u4e48\u8981\u96642\u5462\uff1f\u4e00\u4e2a\u73af\u53ef\u4ee5\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u7740\u641c\uff0c\u6240\u4ee5\u4e00\u4e2a\u73af\u641c\u4e86\u4e24\u8fb9\n    return 0;\n}\n```\n\n[\u535a\u5ba2\u63a8\u5e7f](https://www.luogu.com.cn/blog/zimindaada/)",
        "postTime": 1581507907,
        "uid": 134635,
        "name": "zimindaada",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 - CF11D A Simple Task"
    },
    {
        "content": "CF11D:\n\n\u5927\u6c34\u9898\uff0c\u76f4\u63a5\u72b6\u538b\u9009\u8fc7\u7684\u70b9\u7684\u96c6\u5408\n\n\u8bbe $f_{i,j}$ \u8868\u793a \u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u9009\u8fc7\u4e0e\u73b0\u5728\u5230\u4e86\u90a3\u4e2a\u70b9\n\n\u8f6c\u79fb $f_{i\u222ak}=\\sum\\limits_{}f_{i,j}$\uff0c$k,j$ \u4e4b\u95f4\n\u6709\u8fb9\n\n\u590d\u6742\u5ea6 $O(m2^n)$\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/idw7wd5j)",
        "postTime": 1613116386,
        "uid": 359952,
        "name": "_lbw_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF11D \u3010A Simple Task\u3011"
    },
    {
        "content": "\u72b6\u538bDP\u3002\n\n\u8bbe$dp[s][j]$\u8868\u793a\u7ecf\u8fc7\u4e86\u96c6\u5408$s$\u4e2d\u7684\u70b9\uff0c\u73b0\u5728\u5728$j$\u7684\u65b9\u6848\u6570\u3002\u6211\u4eec\u628a$lowbit(s)$\u770b\u4f5c\u8d77\u70b9\u3002\u8f6c\u79fb\u65f6\uff0c\u679a\u4e3e$i$\u70b9\uff0c\u5982\u679c$i \\in s$\u679a\u4e3e$j$\uff0c \u5982\u679c$(i,j) \\in E$\u5c31\u628a$j$\u52a0\u5165\u96c6\u5408\u8fdb\u884c\u6269\u5c55\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(2^nn^2)$\u3002\u6ce8\u610f\u5230\u8fd9\u6837\u4e00\u4e2a\u73af\u4f1a\u88ab\u7b97\u4e24\u6b21\uff0c\u9664\u4ee5$2$\u5373\u53ef\u3002\n\nCode:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n#define pb push_back\n#define mp make_pair\n#define lsh(i) (1 << (i))\n#define lshll(i) (1LL << (i))\n#define repn(i, n) for (int (i) = 1; (i) <= n; (i)++)\n#define rep(i, n) for (int (i) = 0; (i) < n; (i)++)\nconst int INF = 0x3f3f3f3f;\nconst long double EPS = 1e-6;\nconst int N = 20;\nint d[N][N]; LL dp[lsh(N - 1)][N]; int  n, m;\nint lowbit(int x) {\n\trep(i, 20) if (lsh(i) & x) return i;\n}\nint main() {\n\tcin >> n >> m;\n\trep(i, m) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\t--u; --v;\n\t\td[u][v] = d[v][u] = 1;\n\t}\n\trep(i, n) dp[lsh(i)][i] = 1;\n\trep(s, lsh(n))\n\t\trep(i, n)\n\t\t\tif (dp[s][i])\n\t\t\t\tfor (int j = lowbit(s) + 1; j < n; j++) {\n\t\t\t\t\tif (d[i][j] && !(s & lsh(j))) dp[s | lsh(j)][j] += dp[s][i];\n\t\t\t\t}\n\tLL ans = 0;\n\trep(s, lsh(n))\n\t\tif (__builtin_popcount(s) >= 3)\n\t\t\trep(i, n) \n\t\t\t\tif (d[i][lowbit(s)])\n\t\t\t\t\tans += dp[s][i];\n\tcout << ans / 2 << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1573705869,
        "uid": 87696,
        "name": "Lily_White",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF11D \u3010A Simple Task\u3011"
    },
    {
        "content": "### \u524d\u8a00\n&ensp; **\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f**  \n&ensp;&ensp;&ensp; **[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/linzhengmin/p/11211754.html)**  \n&ensp; \u6709\u5e2e\u52a9\u7684\u8bdd\u5c31\u70b9\u4e2a\u8d5e\u5427QAQ\u3002  \n### \u9898\u89e3\n\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u601d\u8def\u5f00\u59cb\u8003\u8651\uff0c\u9996\u5148\u770b\u5230\u9898\u76ee\u53d1\u73b0$n$\u975e\u5e38\u5c0f\uff0c\u4e8e\u662f\u5f88\u5bb9\u6613\u60f3\u5230\u72b6\u6001\u538b\u7f29\u3002  \n\u6211\u4eec\u8003\u8651\u6bd4\u8f83\u76f4\u89c9\u7684\u72b6\u6001\uff0cf[i][j][k]\u8868\u793a\u4ee5i\u4e3a\u8d77\u70b9\uff0c\u5f53\u524d\u5728j\uff0c\u4e4b\u524d\u53bb\u8fc7\u7684\u70b9\u72b6\u6001\u4e3ak\u7684\u7b80\u5355\u73af\u7684\u65b9\u6848\u6570\u3002  \n\u4ed4\u7ec6\u601d\u8003\u4ee5\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u72b6\u6001\u6709\u95ee\u9898\uff0c\u95ee\u9898\u5728\u4e8e\uff0c\u6bcf\u4e00\u4e2a\u73af\u518d\u73af\u5185\u7684\u6bcf\u4e2a\u70b9\u90fd\u88ab\u8ba1\u7b97\u4e86\u4e00\u6b21\u3002  \n\u90a3\u4e48\u600e\u4e48\u907f\u514d\u8fd9\u79cd\u72b6\u6001\u5462\uff1f\u6211\u4eec\u8003\u8651\u8ba9\u6bcf\u4e2a\u73af\u4ec5\u7531\u5176\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u8d21\u732e\u3002  \n\u8fd9\u6837\u64cd\u4f5c\u4e86\u4ee5\u540e\uff0c\u6bcf\u4e2a\u73af\u4ecd\u7136\u88ab**\u8ba1\u7b97\u4e86\u4e24\u904d**(\u987a\u65f6\u9488\u4e00\u6b21\uff0c\u9006\u65f6\u9488\u4e00\u6b21)\uff0c\u4f46\u662f\u5173\u7cfb\u4e0d\u5927\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u96642\u5373\u53ef\u3002  \n\u8003\u8651\u5230\u8d77\u70b9\u5df2\u7ecf\u662f\u73af\u4e2d\u6700\u5c0f\u7684\u70b9\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u65e0\u9700\u518d\u72b6\u6001\u91cc\u989d\u5916\u8bb0\u5f55\u5b83\u3002  \n\u4e8e\u662f\u5c06\u72b6\u6001\u53d8\u6362\u6210f[i][j]\u8868\u793a\u5f53\u524d\u5728i\uff0c\u4e4b\u524d\u53bb\u8fc7\u7684\u70b9\u72b6\u6001\u4e3aj\u7684\u7b80\u5355\u73af\u7684\u65b9\u6848\u6570\u3002  \n\u90a3\u4e48\u72b6\u6001\u4e4b\u95f4\u5982\u4f55\u8f6c\u79fb\u5462\uff1f\u76f4\u63a5DP\u6709\u4e9b\u56f0\u96be\uff0c\u4e8e\u662f\u6211\u4eec\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u3002  \n\u5728\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u65f6\u5019\u8981\u8bb0\u5f55\u4e00\u4e2a\u503c\u8868\u793a\u5f53\u524d\u53bb\u8fc7\u51e0\u4e2a\u70b9\uff0c\u56e0\u4e3a\u663e\u7136\u6570\u91cf\u57282\u5373\u4ee5\u4e0b\u7684\u70b9\u6784\u4e0d\u6210\u7b80\u5355\u73af\uff0c\u4f46\u4f1a\u88ab\u8bb0\u641c\u8bb0\u5f55\u7b54\u6848\uff0c\u7279\u5224\u5373\u53ef\u3002  \n### \u4ee3\u7801\n```cpp\n#include <cstdio>\n\nnamespace fast_IO{\n    const int IN_LEN = 10000000, OUT_LEN = 10000000;\n    char ibuf[IN_LEN], obuf[OUT_LEN], *ih = ibuf + IN_LEN, *oh = obuf, *lastin = ibuf + IN_LEN, *lastout = obuf + OUT_LEN - 1;\n    inline char getchar_(){return (ih == lastin) && (lastin = (ih = ibuf) + fread(ibuf, 1, IN_LEN, stdin), ih == lastin) ? EOF : *ih++;}\n    inline void putchar_(const char x){if(oh == lastout) fwrite(obuf, 1, oh - obuf, stdout), oh = obuf; *oh ++= x;}\n    inline void flush(){fwrite(obuf, 1, oh - obuf, stdout);}\n    int read(){\n        int x = 0; int zf = 1; char ch = ' ';\n        while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar_();\n        if (ch == '-') zf = -1, ch = getchar_();\n        while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar_(); return x * zf;\n    }\n    void write(long long x){\n        if (x < 0) putchar_('-'), x = -x;\n        if (x > 9) write(x / 10);\n        putchar_(x % 10 + '0');\n    }\n}\n\nusing namespace fast_IO;\n\nstruct Edge{\n\tint to, next;\n} edges[1005];\n\nint head[20], edge_num = 0;\n\ninline void addEdge(int from, int to){\n\tedges[++edge_num] = (Edge){to, head[from]};\n\thead[from] = edge_num;\n}\n\nlong long f[20][1048577];\nint vis[20];\n\nlong long DFS(int frt, int u, int sta, int cnt){\n\tvis[u] = 1;\n\tif (f[u][sta])\n\t\treturn f[u][sta];\n\tfor (int c_e = head[u]; c_e; c_e = edges[c_e].next){\n\t\tint v = edges[c_e].to;\n\t\tif ((1 << (v - 1)) & sta){\n\t\t\tif (cnt > 2 && v == frt)\n\t\t\t\t++f[u][sta];\n\t\t}\n\t\telse\n\t\t\tif (v > frt)\n\t\t\t\tf[u][sta] += DFS(frt, v, sta | (1 << (v - 1)), cnt + 1);\n\t}\n\treturn f[u][sta];\n}\n\nint main(){\n\tint n = read(), m = read();\n\tfor (int i = 0; i < m; ++i){\n\t\tint u = read(), v = read();\n\t\taddEdge(u, v), addEdge(v, u);\n\t}\n\tlong long ans = 0;\n\tfor (int i = 1; i <= n; ++i)\n\t\tans += DFS(i, i, (1 << (i - 1)), 1);\n\twrite(ans / 2); flush();\n\treturn 0;\n}\n```",
        "postTime": 1563503622,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF11D \u3010A Simple Task\u3011"
    },
    {
        "content": "# CF11D \u7b80\u5355\u65e0\u5411\u56fe \u7684 \u7b80\u5355\u73af/\u5708\u8ba1\u6570\n\n\u9898\u76ee:\u7ed9\u5b9a\u4e00\u4e2a\u6ca1\u6709\u91cd\u8fb9\u81ea\u73af\u7684\u65e0\u5411\u56fe,\u6c42\u7b80\u5355\u73af\u7684\u6570\u91cf,\u8981\u6c42\u8fb9\u548c\u70b9\u5747\u4e0d\u80fd\u81ea\u4ea4.\u4e24\u4e2a\u73af\u4e0d\u540c,\u5f53\u4e14\u4ec5\u5f53\"\u65cb\u8f6c\"\u4e0d\u80fd\u4f7f\u5f97\u5b83\u4eec\u91cd\u5408,$\\vert V\\vert \\lt 20$.\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u662f9\u5e74\u524d(2010\u5de6\u53f3,\u8fd9\u4e2a\u9898\u89e3\u5199\u4e8e2019\u5e74)\u7684\u9898\u76ee,\u73b0\u5728\u4f30\u8ba1\u7a0d\u5fae\u5927\u4e00\u70b9\u70b9\u6bd4\u5982$n=21$\u5de6\u53f3\u53ef\u80fd\u53ef\u4ee5\u8dd1\u8fc7\u53bb...  \n\n\n----\n\n\n\u8003\u8651\u7b80\u5355\u73af\u7684\u4e0a\u754c,\u4e00\u4e2a\u5b8c\u5168\u56fe,\u4efb\u4f55\u4e00\u4e2a\u6392\u5217\u90fd\u53ef\u4ee5\u6210\u73af,\u6240\u4ee5\u662f$\\sum_{i=2}^n\\binom{n}{i}\\frac{i!}{i}$\u5c31\u633a\u5927\u7684emm...\u5c31\u5706\u6392\u5217,\u4e00\u4e2a\u6392\u5217\u88ab\u7edf\u8ba1$len$\u6b21...\u5199\u9519\u4e86\u522b\u6253\u6211,\u91cd\u70b9\u662f\u8bf4\u660e\u7b54\u6848\u975e\u5e38\u5927,\u5373\u4f7f$O(1)$\u65f6\u95f4\u68c0\u9a8c\u6392\u5217\u80fd\u4e0d\u80fd\u6210\u73af\u4e5f\u4f1aTLE.\n\n---\n\n\u8003\u8651\u600e\u4e48\u7531\u9636\u4e58\u964d\u4f4e\u5230\u6307\u6570,\u6211\u4eec\u8003\u8651\u5728\u56fe\u4e0a\u6e38\u8d70,\u8d70\u5230\u9047\u5230\u8d70\u8fc7\u4e86\u70b9\u5373\u627e\u5230\u4e86\u73af,\u679a\u4e3e\u4e00\u4e2a\u8d77\u70b9,\u7136\u540e\u5f00\u59cb\u641c.  \u8fd9\u6837\u4e00\u4e2a\u73af\u88ab\u7edf\u8ba1\u7684\u6b21\u6570\u662f$len$(\u73af\u957f)\u7684.\u66f4\u8fdb\u4e00\u6b65\u5730,\u5982\u679c\u8003\u8651\u4ece\u73af\u5185\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u5904\u65ad\u5f00,\u90a3\u4e48\u53ea\u4f1a\u88ab\u7edf\u8ba1\u4e24\u6b21..\u5c31\u6b63\u5411\u53cd\u5411\u8d70\u4e24\u6b21\u5457....\n\n\n\u6211\u4eec\u8fdb\u4e00\u6b65\u89c2\u5bdf,\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u679a\u4e3e\u4e86\u548c\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u76f8\u8fde\u7684\u8fb9,\u65ad\u5f00,\u5e76\u4e14\u8fdb\u884c\u4e00\u4e2a\u8def\u5f84\u8ba1\u6570,\u4e0d\u5141\u8bb8\u7ecf\u8fc7\u7f16\u53f7\u66f4\u5c0f\u7684\u70b9,\u4e0d\u80fd\u5141\u8bb8\u8d70\u91cd\u590d\u7684\u70b9\u6216\u8005\u8fb9. \u8fd9\u4e2a\u5f88\u597d\u7528\u4e00\u4e2aDP\u6765\u505a.\n\n$dp_{s,v}$ \u8868\u793a\u7ecf\u8fc7\u4e86s\u4e2d\u7684\u70b9,\u76ee\u524d\u5728v\u5904,\u4ecestart\u8d70\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\u8def\u5f84\u8ba1\u6570.\n\u90a3\u4e48\u6700\u5c0f\u7f16\u53f7\u4e3astart\u7684\u73af\u6570\u91cf\u662f$\\sum_{(v,start)\\in E} dp[s][v]$. \u6ce8\u610f\u4e00\u6761\u8fb9\u4e5f\u4f1a\u88ab\u8ba1\u7b97\u8fdb\u6765.\u5373\u4ea7\u751f\u4e86\"\u4e8c\u5143\u73af\"\u663e\u7136\u662f\u4e0d\u9700\u8981\u7684.\n\n\u6211\u4eec\u679a\u4e3e\u6700\u5c0f\u7f16\u53f7\u70b9,\u8fdb\u884cDP,\u6c42\u51fa\u6700\u5c0f\u7f16\u53f7\u4e3a$x$\u7684\u73af\u7684\u6570\u91cf\\*2+\u4e8c\u5143\u73af(\u8fb9\u6570).\n\n\n```cpp\n#include <bits/stdc++.h>\nconst int N=20;\nint n,g[N][N],m,low[1<<N];\ntypedef long long Int;\n\ninline int lowbit(int x){ return x&(-x); }\ninline int popcnt(int x){\n\tint y=0;\n\twhile(x){\n\t\ty++;\n\t\tx^=lowbit(x);\n\t}\n\treturn y;\n}\n\nstd::string dump(int s){\n\tstd::string ret;\n\tfor(int i=0;i<n;i++) if(s&(1<<i))\n\t\tret=ret+char(i+'0');\n\treturn ret;\n}\ninline int in(int s,int i){ return (s&(1<<i))>0; }\nInt dp[1<<N][N];\nbool vis[1<<N][N];\ninline void clear(){\n\tfor(int s=0;s<(1<<n);s++) \n\t\tfor(int i=0;i<n;i++) dp[s][i]=vis[s][i]=0;\n}\nint start=0;\n// count_path:walk through(s),get x\n// \u8def\u5f84\u8ba1\u6570DP.\nInt f(int s,int x){\n\tif(vis[s][x]) return dp[s][x];\n    // \u6ce8\u610f\u9012\u5f52\u57fa\n\tif(s==lowbit(s)) return s==(1<<start)&&x==start;\n\tInt ret=0;\n    // \u4e0d\u5141\u8bb8\u7ecf\u8fc7\u7f16\u53f7\u66f4\u5c0f\u7684\u70b9,\u6545\u53ef\u4ee5\u4fee\u6539\u5faa\u73af\u4e0b\u754c.\n\tfor(int i=start;i<n;i++) if(in(s,i)&&g[x][i]){\n\t\tret+=f(s^(1<<x),i);\n\t}\n\tvis[s][x]=1;\n\treturn dp[s][x]=ret;\n}\n\nint main(){\n\tstd::cin>>n>>m;\n\tfor(int i=0;i<n;i++){\n\t\tlow[1<<i]=i;\n\t\tdp[1<<i][i]=1;\n\t} low[0]=-1;\n\tfor(int i=2;i<(1<<n);i++) low[i]=low[lowbit(i)];\n\n\n\tfor(int i=0,a,b;i<m;i++){\n\t\tstd::cin>>a>>b; a--;b--;\n\t\tg[a][b]=g[b][a]=1;\n\t}\n\n\tInt ans=0;\n\tfor(start=0;start<n;start++){\n\t\t// sum(dp[S][i]) where (i->start)\n\t\tclear();\n\t\tfor(int s=0;s<(1<<n);s++) if(low[s]==start&&s>lowbit(s)){\n\t\t\tfor(int i=0;i<n;i++) if(in(s,i)&&g[start][i]) ans+=f(s,i);\n\t\t}\n\t}\n    \n    // \u6254\u6389\u4e8c\u5143\u73af,\u6bcf\u4e2a\u771f\u73af\u6b63\u53cd\u8ba1\u6570\u4e24\u6b21.\n\tans=(ans-m)/2;\n\tstd::cout<<ans<<std::endl;\n\treturn 0;\n}\n\n```\n\n\n\n\n",
        "postTime": 1553691350,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF11D \u3010A Simple Task\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/CF11D)\n\n\u9996\u5148\u8fd9\u662f\u4e00\u9053**\u72b6\u538b**\uff0c\u56e0\u4e3a $n \\le 19$\uff0c$n$ \u5982\u6b64\u5c0f\uff0c\u5c31\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u9009\u62e9\u7684\u72b6\u6001\u3002\n\n\u9996\u5148\u5b9a\u4e49\u72b6\u6001\uff1a\n\n$dp[i][j]$\uff1a\u6700\u540e\u9009\u62e9\u4e86 $i$ \u8282\u70b9\uff0c\u9009\u62e9\u7684\u72b6\u6001\u4e3a $j$.\n\n\u5f00\u59cb\u521d\u59cb\u5316\uff1a\n\n```cpp\ndp[i][1<<(i-1)]=1;\n```\n\n\u6ce8\uff1a\u56e0\u4e3a\u672c\u5904\u8003\u8651\u4e86**\u81ea\u73af**\uff0c\u6240\u4ee5\u6700\u540e\u8f93\u51fa\u7b54\u6848\u8981\u51cf\u53bb\uff01\n\n\u4e3a\u4e86\u65b9\u4fbf\u53bb\u91cd\uff0c\u6211\u4eec\u7d22\u6027\u5c06\u72b6\u6001\u7684\u6700\u540e\u4e00\u4f4d\uff08`lowbit`\uff09\u4e3a\u73af\u7684\u8d77\u70b9\u3002\n\n\u4e8e\u662f\u8003\u8651\u4e86\u4e24\u79cd\u60c5\u51b5\uff1a\n\n![](http://61.186.173.89:2019/2022/03/22/81101b7af4dec.png)\n\n![](http://61.186.173.89:2019/2022/03/22/047cb4d9eb8bf.png)\n\n\u6240\u4ee5\u6700\u540e\u7b54\u6848\u9664\u4ee5 $2$.\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read(){\n\tint ch=0,num=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))ch|=(c=='-'),c=getchar();\n\twhile(isdigit(c))num=(num<<1)+(num<<3)+(c^48),c=getchar();\n\treturn ch?-num:num;\n}\ninline void write(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)write(x/10);\n\tputchar(x%10+'0');\n}\nint n,m,dp[20][1<<20],ans;\nbool vis[25][25];\ninline int lowbit(int x){return x&-x;}\nsigned main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;++i){\n\t\tint x=read(),y=read();\n\t\tvis[x][y]=vis[y][x]=1;\n\t}\n\tfor(int i=1;i<=n;++i)dp[i][1<<(i-1)]=1;\n\tfor(int i=0;i<(1<<n);++i){\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tfor(int k=1;k<=n;++k){\n\t\t\t\tif(!vis[k][j]||lowbit(i)>1<<(k-1))continue;\n\t\t\t\tif(1<<(k-1)&i){\n\t\t\t\t\tif(1<<(k-1)==lowbit(i))ans+=dp[j][i];\n\t\t\t\t}else dp[k][i^1<<(k-1)]+=dp[j][i];\n\t\t\t}\n\t\t}\n\t}\n\twrite((ans-m)>>1);\n\treturn 0;\n}\n```",
        "postTime": 1647955591,
        "uid": 482869,
        "name": "cqbzhyf",
        "ccfLevel": 5,
        "title": "CF11D A Simple Task\u9898\u89e3"
    }
]