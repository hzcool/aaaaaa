[
    {
        "content": "\u6a21\u62df\u8d5b\u653e\u4e86\u9053 *3500\uff0c\u7ed3\u679c\u5168\u573a\u90fd\u5207\u4e86\uff0c\u975e\u5e38\u6050\u6016\u3002\n\n\u9996\u5148\u8003\u8651\u600e\u4e48\u6837\u7684\u6811\u662f\u5408\u6cd5\u7684\uff0c\u6253\u4e2a\u8868\u53d1\u73b0 SG \u51fd\u6570\u503c\u4e3a $\\sum_{d}2^d\u00b7(\\text{\u6df1\u5ea6\u4e3a d \u7684\u70b9\u4e2a\u6570}\\bmod 2)$\uff0c\u6362\u53e5\u8bdd\u8bf4\u540e\u624b\u5fc5\u80dc\u5f53\u4e14\u4ec5\u5f53\u6bcf\u79cd\u6df1\u5ea6\u7684\u70b9\u6570\u90fd\u662f\u5076\u6570\u3002\n\n\u4e8e\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u7528\u5efa\u51fa\u865a\u6811\u4e4b\u540e\u6811\u4e0a\u5dee\u5206\u4e00\u4e0b\u6c42\u51fa\u6bcf\u4e2a\u70b9\u88ab\u8986\u76d6\u7684\u60c5\u51b5\uff0c\u8fdb\u800c\u80fd\u591f\u6c42\u51fa\u7b54\u6848\u3002\n\n\u8003\u8651\u5982\u679c\u6211\u4eec\u8981\u5efa\u51fa\u865a\u6811\u9700\u8981\u5b9e\u73b0\u54ea\u4e9b\u529f\u80fd\uff1a\n\n- \u5feb\u901f\u6c42\u4e00\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u53d1\u73b0\u5f88\u50bb\uff0c$(x,y)$ \u7684\u6df1\u5ea6\u5b9e\u9645\u4e0a\u5c31\u662f $x+y$\u3002\n\n- \u5feb\u901f\u6c42\u4e24\u4e2a\u70b9\u7684 LCA\u3002\u7531\u4e8e\u7ed9\u5b9a\u7684\u6811\u662f\u4e00\u4e2a\u5206\u5f62\uff0c\u6240\u4ee5\u8003\u8651\u67e5\u8be2\u7684\u4e24\u4e2a\u70b9\u5728\u5f53\u524d\u5206\u5f62\uff08\u5047\u8bbe\u5927\u5c0f\u4e3a $2^k$\uff09\u4e09\u4e2a\u90e8\u5206\u4e2d\u7684\u54ea\u4e00\u4e2a\uff0c\u5982\u679c\u5728\u540c\u4e00\u4e2a\u90e8\u5206\u5219\u8fdb\u5165\u90a3\u4e00\u4e2a\u90e8\u5206\u7ee7\u7eed\u9012\u5f52\uff0c\u5426\u5219 LCA \u663e\u7136\u5728\u5de6\u4e0a\u89d2\u90a3\u4e2a\u90e8\u5206\u4e2d\uff0c\u628a\u53f3\u4e0a\u89d2\u7684\u70b9\u63d0\u5230 $(0,2^{k-1}-1)$\uff0c\u628a\u5de6\u4e0b\u89d2\u7684\u70b9\u63d0\u5230 $(2^{k-1}-1,0)$\uff0c\u7136\u540e\u7ee7\u7eed\u9012\u5f52\u5373\u53ef\u3002\n- \u6bd4\u8f83\u4e24\u4e2a\u70b9\u7684 DFS \u5e8f\uff0c\u5982\u679c\u4e24\u8005\u5b58\u5728\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u90a3\u4e48\u6df1\u5ea6\u8f83\u5c0f\u7684\u90a3\u4e2a\u9760\u524d\uff0c\u5426\u5219\u540c\u7406\u5728\u5206\u5f62\u4e0a\u8dd1\u4e00\u4e0b\u3002\n\n\u7531\u4e8e\u6bd4\u8f83 DFS \u5e8f\u9700\u8981\u4e00\u4e2a $\\log$\uff0c\u518d\u52a0\u4e0a\u6392\u5e8f\u4e00\u4e2a $\\log$\uff0c\u603b\u5171\u662f 2log\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5de8\u5927\u7f1d\u5408\u602a\uff0c\u914d\u4e0d\u4e0a\u5176 *3500 \u7684\u96be\u5ea6\uff08\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\u5199\u5f97\u6bd4\u8f83\u7d2f\u8d58\uff0c\u53ef\u80fd\u548c\u4e0a\u9762\u8bf4\u5f97\u4e0d\u592a\u4e00\u6837\uff0c\u770b\u770b\u5c31\u597d\u3002\n\n```cpp\nconst int MAXN=4e5;\nint n,lc[MAXN+5];pii p[MAXN+5],pt[MAXN+5];\nmap<pii,int>id;int idcnt=0;\nint getid(int x,int y){\n\tif(id[mp(x,y)])return id[mp(x,y)];\n\telse return id[mp(x,y)]=++idcnt,pt[idcnt]=mp(x,y),idcnt;\n}\npii getlca(int xa,int ya,int xb,int yb,int d){\n\tif(!d)return mp(0,0);\n\tint lim=(1<<d-1);\n\tif(xa<lim&&ya<lim&&xb<lim&&yb<lim)return getlca(xa,ya,xb,yb,d-1);\n\telse if(xa>=lim&&xb>=lim){\n\t\tpii p=getlca(xa-lim,ya,xb-lim,yb,d-1);\n\t\treturn mp(p.fi+lim,p.se);\n\t}else if(ya>=lim&&yb>=lim){\n\t\tpii p=getlca(xa,ya-lim,xb,yb-lim,d-1);\n\t\treturn mp(p.fi,p.se+lim);\n\t}else if((xa>=lim||ya>=lim)&&(xb>=lim||yb>=lim))return mp(0,0);\n\telse{\n\t\tif(xb<lim&&yb<lim)swap(xa,xb),swap(ya,yb);\n\t\tif(xb>=lim)return getlca(xa,ya,lim-1,0,d-1);\n\t\telse return getlca(xa,ya,0,lim-1,d-1);\n\t}\n}\nbool getcmp(int xa,int ya,int xb,int yb,int d){\n\tif(!d)return 0;\n\tint lim=(1<<d-1);\n\tif(xa<lim&&ya<lim&&xb<lim&&yb<lim)return getcmp(xa,ya,xb,yb,d-1);\n\telse if(xa>=lim&&xb>=lim)return getcmp(xa-lim,ya,xb-lim,yb,d-1);\n\telse if(ya>=lim&&yb>=lim)return getcmp(xa,ya-lim,xb,yb-lim,d-1);\n\telse{\n\t\tint ida=((xa>=lim)?0:((ya>=lim)?2:1));\n\t\tint idb=((xb>=lim)?0:((yb>=lim)?2:1));\n\t\treturn ida<idb;\n\t}\n}\nvector<int>g[MAXN+5];int rt;\nint build(vector<tuple<int,int,int> >v,int cx,int cy,int d){\n\tif(v.empty())return 0;\n\tif(v.size()==1)return get<2>(v[0]);int lim=1<<d-1;\n\tvector<tuple<int,int,int> >A,L,R;\n\tfor(tuple<int,int,int>t:v){\n\t\tif(get<0>(t)>=lim)L.pb(mt(get<0>(t)-lim,get<1>(t),get<2>(t)));\n\t\telse if(get<1>(t)>=lim)R.pb(mt(get<0>(t),get<1>(t)-lim,get<2>(t)));\n\t\telse A.pb(t);\n\t}\n\tif(L.empty()&&R.empty())return build(A,cx,cy,d-1);\n\telse if(A.empty()&&R.empty())return build(L,cx+lim,cy,d-1);\n\telse if(A.empty()&&L.empty())return build(R,cx,cy+lim,d-1);\n\telse{\n\t\tint a=build(A,cx,cy,d-1),l=build(L,cx+lim,cy,d-1),r=build(R,cx,cy+lim,d-1);\n\t\tif(l){pii mx=mp(-1,0);for(auto t:A)if(get<1>(t)==0)chkmax(mx,mp(get<0>(t),get<2>(t)));g[mx.se].pb(l);}\n\t\tif(r){pii mx=mp(-1,0);for(auto t:A)if(get<0>(t)==0)chkmax(mx,mp(get<1>(t),get<2>(t)));g[mx.se].pb(r);}\n\t\treturn a;\n\t}\n}\nint mark[MAXN+5],vis[MAXN+5],fa[MAXN+5];\nvoid dfs(int x,int f){fa[x]=f;for(int y:g[x])dfs(y,x),mark[x]+=mark[y];}\nmap<int,int>dif;\nvoid add(int l,int r){dif[l]^=1;dif[r+1]^=1;}\nbool cmp(int x,int y){\n\tif(x==0)return 0;\n\tpii lca=getlca(pt[x].fi,pt[x].se,pt[y].fi,pt[y].se,30);\n\tif(lca==pt[x])return 1;if(lca==pt[y])return 0;\n\treturn getcmp(pt[x].fi,pt[x].se,pt[y].fi,pt[y].se,30);\n}\nint main(){\n\tscanf(\"%d\",&n);vector<int>v;map<int,int>in;\n\tfor(int i=1,xa,ya,xb,yb;i<=n;i++){\n\t\tscanf(\"%d%d%d%d\",&xa,&ya,&xb,&yb);\n\t\tp[i].fi=getid(xa,ya);p[i].se=getid(xb,yb);\n\t\tpii pp=getlca(xa,ya,xb,yb,30);lc[i]=getid(pp.fi,pp.se);\n\t\tif(!in[p[i].fi])v.pb(p[i].fi),in[p[i].fi]=1;\n\t\tif(!in[p[i].se])v.pb(p[i].se),in[p[i].se]=1;\n\t}\n\tsort(v.begin(),v.end(),cmp);\n\tfor(int i=1;i<v.size();i++){\n\t\tpii pp=getlca(pt[v[i-1]].fi,pt[v[i-1]].se,pt[v[i]].fi,pt[v[i]].se,30);\n\t\tgetid(pp.fi,pp.se);\n\t}\n\tvector<tuple<int,int,int> >vec;\n\tfor(int i=1;i<=idcnt;i++)vec.pb(mt(pt[i].fi,pt[i].se,i));\n\trt=build(vec,0,0,30);\n\tfor(int i=1;i<=n;i++)vis[lc[i]]=1,mark[p[i].fi]++,mark[p[i].se]++,mark[lc[i]]-=2;\n\tdfs(rt,0);\n\tfor(int i=1;i<=idcnt;i++){\n\t\tif(vis[i]||mark[i])add(pt[i].fi+pt[i].se,pt[i].fi+pt[i].se);\n\t\tif(mark[i])add(pt[fa[i]].fi+pt[fa[i]].se+1,pt[i].fi+pt[i].se-1);\n\t}\n\tint sum=0;\n\tfor(pii pp:dif)if(pp.se)sum++;\n\tif(!sum)puts(\"0\");\n\telse{\n\t\tsum--;\n\t\tif(!dif[0])++sum;\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n/*\n*#*#############\n#.*.#.#.#.#.#.#.\n#*..##..##..##..\n#...*...#...#...\n####....####....\n#.#.....#.#.....\n##......##......\n#.......#.......\n########........\n#.#.#.#.........\n##..##..........\n#...#...........\n####............\n#.#.............\n##..............\n#...............\n*/\n```\n\n",
        "postTime": 1685025595,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1439E Cheat and Win"
    },
    {
        "content": "\u9898\u76ee\u4e0a\u6765\u544a\u8bc9\u6211\u4eec\u4e00\u4e2a\u975e\u5e38\u5389\u5bb3\u7684\u6761\u4ef6\uff1a\u6811\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u4ec0\u4e48\u6837\u7684\u9ed1\u70b9\u5206\u5e03\u53ef\u4ee5\u4f7f\u5f97\u540e\u624b\u80dc\u5229\u3002\n\n\u6709\u4e00\u4e2a\u7ecf\u5178\u7ed3\u8bba\uff1a\u67d0\u4e2a\u5c40\u9762\u7684 $\\operatorname{SG}$ \u503c $=$ \u5c40\u9762\u4e2d\u6240\u6709\u9ed1\u70b9\u5355\u72ec\u51fa\u73b0\u7684 $\\operatorname{SG}$ \u503c\u7684 $\\operatorname{XOR}$ \u548c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684 $\\operatorname{SG}$ \u503c\u3002\n\n\u7ecf\u8fc7\u7b80\u5355\u63a8\u5bfc\u5373\u53ef\u53d1\u73b0\uff0c\u6df1\u5ea6\u4e3a $d$ \u7684\u70b9 $\\operatorname{SG}$ \u503c\u4e3a $2^d$\u3002\n\n\u8fdb\u4e00\u6b65\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u4e2a\u6df1\u5ea6\u4e2d\u9ed1\u70b9\u6570\u90fd\u4e3a\u5076\u6570\u7684\u5c40\u9762\u65f6\u540e\u624b\u5fc5\u80dc\u7684\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u628a\u7ed9\u5b9a\u7684 $m$ \u6761\u8def\u5f84\u4e0a\u7684\u70b9\u989c\u8272\u5168\u90e8\u53d8\u4e3a\u9ed1\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6c42\u51fa\u8fd9 $2m$ \u4e2a\u70b9\u7684\u865a\u6811\u3002\n\n\u4f46\u8fd8\u6709\u4e00\u4ef6\u4e8b\u60c5\u8ba9\u6211\u4eec\u5f88\u6478\u4e0d\u7740\u5934\u8111\uff1a\u5b83\u51ed\u4ec0\u4e48\u662f\u6811\u5462\uff1f\n\n\u901a\u8fc7\u6253\u8868\u53ef\u4ee5\u53d1\u73b0\uff0c$x\\operatorname{and} y=0$ \u7684\u70b9\u5bf9 $(x,y)$ \u5206\u5e03\u957f\u8fd9\u6837\uff1a\n\n```\n################\n# # # # # # # #\n##  ##  ##  ##\n#   #   #   #\n####    ####\n# #     # #\n##      ##\n#       #\n########\n# # # #\n##  ##\n#   #\n####\n# #\n##\n#\n```\n\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u800c\u7f8e\u5999\u7684\u5206\u5f62\u3002\n\n\u65e2\u7136\u6709\u8fd9\u4e48\u597d\u7684\u6027\u8d28\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u7528\u5206\u6cbb\u5904\u7406\u3002\n\n\u5047\u8bbe\u5f53\u524d\u5904\u7406\u7684\u90e8\u5206\u5de6\u4e0a\u89d2\u4e3a $(x,y)$\uff0c\u53f3\u4e0b\u89d2\u4e3a $(x+2^k-1,y+2^k-1)$\u3002\n\n\u5c06\u5176\u5206\u4e3a $4$ \u4e2a\u90e8\u5206\uff1a\n\n- $(x,y),(x+2^{k-1}-1,y+2^{k-1}-1)$\n- $(x+2^{k-1},y),(x+2^k-1,y+2^{k-1}-1)$\n- $(x,y+2^{k-1}),(x+2^{k-1}-1,y+2^k-1)$\n- $(x+2^{k-1},y+2^{k-1}),(x+2^k-1,y+2^k-1)$\n\n\u6211\u4eec\u4f9d\u6b21\u79f0\u8fd9 $4$ \u4e2a\u90e8\u5206\u4e3a $S_1,S_2,S_3,S_4$\u3002\n\n\u663e\u7136 $S_4$ \u4e2d\u6ca1\u6709\u70b9\uff0c\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u3002\n\n\u6211\u4eec\u5148\u9012\u5f52\u5efa\u51fa $S_2,S_3$ \u4e2d\u7684\u70b9\u7684\u865a\u6811\uff0c\u8bbe\u6839\u4e3a $rt_2,rt_3$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0 $S_2$ \u662f $(x+2^{k-1}-1,y)$ \u7684\u513f\u5b50\u7684\u5b50\u6811\uff0c$S_3$ \u662f $(x,y+2^{k-1}-1)$ \u7684\u513f\u5b50\u7684\u5b50\u6811\u3002\u5f53 $k=1$ \u65f6\uff0c$S_2,S_3$ \u5c31\u662f $(x,y)$ \u7684\u4e24\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u3002\n\n\u56e0\u6b64\u6211\u4eec\u628a $rt_2$ \u653e\u5230 $(x+2^{k-1}-1,y)$ \u5904\uff0c\u628a $rt_3$ \u653e\u5230 $(x,y+2^{k-1}-1)$ \u5904\uff0c\u7136\u540e\u9012\u5f52\u5904\u7406 $S_1$ \u5373\u53ef\u3002\n\n\u5982\u679c\u5f53\u524d\u5904\u7406\u7684\u90e8\u5206\u4e2d\u70b9\u6570 $\\le 1$\uff0c\u9700\u8981\u76f4\u63a5\u7279\u5224\u6389\u3002\n\n\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(m\\log V)$\u3002\n\n\u6c42\u5b8c\u865a\u6811\u4e4b\u540e\u5c31\u8f6c\u6362\u6210\u4e86\u666e\u53ca\u7ec4\u95ee\u9898\uff0c\u5927\u5bb6\u90fd\u4f1a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log V)$\uff0c\u5176\u4e2d $V$ \u4e3a\u503c\u57df\uff0c\u8fd9\u91cc $V=2^{30}$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 500005\n#define pb push_back\nconst int lim=(1<<30)-1;\nint n,m,ans,rt,U[N],V[N],w1[N],w2[N];vector<int> e[N];\nstruct Node\n{\n\tint x,y,id;\n\tbool operator < (Node t) const {return x==t.x?y<t.y:x<t.x;}\n}a[N];vector<Node> z;map<int,bool> w;map<Node,int> id;\nstruct Point {int fa,dep,sz,hv,tp;}pt[N];\nint build(int x1,int y1,int x2,int y2,vector<Node> z)\n{\n\tif(!z.size()) return 0;if(z.size()==1) return z[0].id;\n\tif(x1==x2 && y1==y2)\n\t{\n\t\tint t;Node t1=(Node) {x1,y1,0};\n\t\tif(!id[t1]) a[id[t1]=++n]=t1;t=id[t1];\n\t\tfor(auto i:z) if(t!=i.id) e[t].pb(i.id);return t;\n\t}int midX=(x1+x2)/2,midY=(y1+y2)/2,rt1,rt2;\n\tvector<Node> z1,z2,z3;z1.clear();z2.clear();z3.clear();\n\tfor(auto i:z) if(i.x>midX) z1.pb(i);\n\t\telse if(i.y>midY) z2.pb(i);else z3.pb(i);\n\trt1=build(midX+1,y1,x2,midY,z1);rt2=build(x1,midY+1,midX,y2,z2);\n\tif(rt1) z3.pb((Node) {midX,y1,rt1});\n\tif(rt2) z3.pb((Node) {x1,midY,rt2});\n\treturn build(x1,y1,midX,midY,z3);\n}\nvoid dfs1(int u,int f)\n{\n\tpt[u].fa=f;pt[u].dep=pt[f].dep+1;pt[u].sz=1;\n\tfor(auto v:e[u])\n\t{\n\t\tdfs1(v,u);pt[u].sz+=pt[v].sz;\n\t\tif(pt[v].sz>pt[pt[u].hv].sz) pt[u].hv=v;\n\t}\n}\nvoid dfs2(int u,int f)\n{\n\tpt[u].tp=f;if(pt[u].hv) dfs2(pt[u].hv,f);\n\tfor(auto v:e[u]) if(v!=pt[u].fa && v!=pt[u].hv) dfs2(v,v);\n}\nvoid dfs3(int u,int f)\n{\n\tfor(auto v:e[u]) dfs3(v,u),w1[u]+=w1[v];\n\tif(w1[u]) {w[a[u].x+a[u].y]^=1;if(f) w[a[f].x+a[f].y]^=1;}\n\telse if(w2[u]) {w[a[u].x+a[u].y]^=1;if(f) w[a[u].x+a[u].y-1]^=1;}\n}\nint LCA(int u,int v)\n{\n\twhile(pt[u].tp!=pt[v].tp)\n\t{\n\t\tif(pt[pt[u].tp].dep<pt[pt[v].tp].dep) swap(u,v);\n\t\tu=pt[pt[u].tp].fa;\n\t}if(pt[u].dep<pt[v].dep) swap(u,v);return v;\n}\nint main()\n{\n\tscanf(\"%d\",&m);a[++n]=(Node) {0,0};id[a[n]]=n; \n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tNode u,v;scanf(\"%d %d %d %d\",&u.x,&u.y,&v.x,&v.y);\n\t\tu.id=0;if(!id[u]) a[id[u]=++n]=u;U[i]=id[u]; \n\t\tv.id=0;if(!id[v]) a[id[v]=++n]=v;V[i]=id[v];\n\t}for(int i=1;i<=n;++i) z.pb((Node) {a[i].x,a[i].y,i});\n\trt=build(0,0,lim,lim,z);dfs1(rt,0);dfs2(rt,rt);\n\tfor(int i=1,u,v,t;i<=m;++i)\n\t\tu=U[i],v=V[i],t=LCA(u,v),++w1[u],++w1[v],w1[t]-=2,++w2[t];\n\tdfs3(rt,0);for(auto i:w) if(i.second) ++ans;\n\tprintf(\"%d\\n\",ans);return 0; \n}\n```",
        "postTime": 1648094579,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "CF1439E Cheat and Win"
    },
    {
        "content": "\u628a\u9898\u76ee\u5206\u6210\u4e24\u6b65\u6765\u8003\u8651\u3002\n\n\u7b2c\u4e00\u6b65\u662f\u4e00\u68f5\u600e\u6837\u7684\u6811\u662f\u540e\u624b\u5fc5\u80dc\u7684\uff0c\u4ee5\u53ca\u540e\u624b\u5982\u4f55\u8d70\u5230\u90a3\u68f5\u6811\u53bb\n\n\u7b2c\u4e8c\u6b65\u662f\u628a\u8fd9\u4e2a\u4e8c\u7ef4\u5e73\u9762\u56fe\u8f6c\u6362\u6210\u6811\u3002\n\n\u8003\u8651\u7b2c\u4e00\u6b65\uff0c\u624b\u5b8c\u51e0\u4e2a\u6570\u636e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u6bcf\u79cd\u6df1\u5ea6\u7684\u9ed1\u8272\u70b9\u90fd\u662f\u5076\u6570\u7684\u65f6\u5019\uff0c\u540e\u624b\u662f\u5fc5\u80dc\u7684\uff0c\u5426\u5219\u5148\u624b\u662f\u5fc5\u80dc\u7684\u3002\n\n\u8003\u8651\u8bc1\u660e\uff0c\u5f53\u4e0d\u662f\u6bcf\u79cd\u6df1\u5ea6\u7684\u70b9\u90fd\u662f\u5076\u6570\u7684\u65f6\u5019\uff0c\u5148\u624b\u53ef\u4ee5\u4e00\u6b65\u8d70\u5230\u90a3\u4e2a\u72b6\u6001\u53bb\u3002\n\n\u5426\u5219\uff0c\u65e0\u8bba\u5148\u624b\u5982\u4f55\u9009\u62e9\uff0c\u540e\u624b\u603b\u6709\u5bf9\u79f0\u7684\u9009\u62e9\u65b9\u5f0f\uff08\u590d\u8bfb\u624d\u662f\u4eba\u7c7b\u7684\u672c\u8d28\uff09\uff0c\u6b64\u65f6\u5148\u624b\u5fc5\u8d25\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u540e\u624b\u73b0\u5728\u7684\u76ee\u7684\u5c31\u662f\u628a\u6bcf\u79cd\u6df1\u5ea6\u7684\u9ed1\u8272\u70b9\u90fd\u53d8\u6210\u5076\u6570\u3002\n\n\u8003\u8651\u540e\u624b\u73b0\u5728\u7684\u64cd\u4f5c\u4e3a\uff1a\u9009\u62e9\u4e00\u4e2a\u70b9\uff0c\u5c06\u5176\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u53cd\u8272\uff0c\u6211\u4eec\u628a\u6bcf\u79cd\u6df1\u5ea6\u7684\u9ed1\u8272\u70b9\u7684\u6570\u76ee\u7684\u5947\u5076\u6027\u5199\u6210\u4e00\u4e2a $01$ \u5e8f\u5217\uff0c\u5947\u6570\u4e3a $1$\uff0c\u5076\u6570\u4e3a $0$\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u540e\u624b\u53ef\u4ee5\u7528 $2\\times 1$ \u7684\u8fde\u7eed\u6bb5\u7684\u6b21\u6570\u628a\u6240\u6709\u7684 $1$ \u7684\u8fde\u7eed\u6bb5\u5168\u90e8\u6d88\u6389\uff0c\u800c\u5047\u5982\u4e00\u5f00\u59cb\u6df1\u5ea6\u4e3a $0$ \u7684\u6570\u5c31\u662f $1$\uff0c\u90a3\u4e48\u6211\u4eec\u751a\u81f3\u8fd8\u53ef\u4ee5\u7701\u4e00\u6b21\u64cd\u4f5c\uff08\u5982\u679c\u6ca1\u6709\u7406\u89e3\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e9b $01$ \u5e8f\u5217\u624b\u73a9\u4e00\u4e0b\uff09\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5c06\u7b2c\u4e00\u6b65\u5206\u6790\u6e05\u695a\u4e86\u3002\n\n\u8003\u8651\u7b2c\u4e8c\u6b65\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u5efa\u51fa\u8fd9\u4e2a\u56fe\u7684\u865a\u6811\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u6c42\u89e3\uff0c\u8003\u8651\u5982\u4f55\u6765\u5efa\u865a\u6811\uff0c\u5efa\u865a\u6811\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u4e1c\u897f\uff0c$dfn$ \u5e8f\u548c $lca(x,y)$\uff0c\u77e5\u9053\u4e86\u8fd9\u4e24\u4e2a\u4e1c\u897f\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u865a\u6811\u677f\u5b50\u6765\u5efa\u4e86\u3002\n\n\u8003\u8651 $dfn$ \u5e8f\uff0c\u5176\u5b9e $dfn$ \u5e8f\u4e0d\u91cd\u8981\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5b83\u7684\u76f8\u5bf9\u987a\u5e8f\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u94a6\u5b9a\u5f53\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u513f\u5b50\u65f6\u5148\u8d70 $x$ \u5927\u7684\uff0c\u73b0\u5728\u6211\u4eec\u8981\u5224\u65ad\u4e24\u4e2a\u70b9 $X=(x_1,y_1),Y=(x_2,y_2)$ \u7684 $dfn$ \u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u3002\n\n\u8003\u8651\u6bcf\u6b21\u4ece\u4e0a\u4e00\u6b21\u7684\u70b9\u5411\u4e0b/\u53f3\u6269\u5c55\uff0c\u5047\u5982 $X,Y$ \u5df2\u7ecf\u5728\u4e0d\u540c\u5b50\u6811\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f88\u597d\u7684\u5224\u65ad\u51fa\u5927\u5c0f\u5173\u7cfb\uff0c\u5426\u5219\u5c31\u7ee7\u7eed\u5206\u4e0b\u53bb\uff0c\u53ef\u4ee5\u8bc1\u660e\u4ece $(0,0)$ \u8d70\u5230\u4efb\u4f55\u4e00\u4e2a\u70b9\u90fd\u53ea\u9700\u8981 $\\log n$ \u6b65\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n\n\u6c42 $lca$ \u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u601d\u8def\uff0c\u4e5f\u662f\u5411\u4e0b/\u53f3\u6269\u5c55\uff0c\u7136\u540e\u8003\u8651 $lca$ \u5e94\u8be5\u5728\u54ea\u8fb9\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u7559\u4f5c\u7ec3\u4e60\u3002\n\n\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log^2 n)$\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u4e0a\u4ee3\u7801\u4e86\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 400005\nusing namespace std;\nint n,cnt,tot,ans,pw[32],top;\nstruct node {\n\tint x,y;\n\tnode(int X=0,int Y=0) {x=X,y=Y;}\n\tbool operator<(node a) const {return x==a.x?y<a.y:x<a.x;}\n\tbool operator==(node a) const {return x==a.x&&y==a.y;}\n} a[N][2],p[N],fp[N],stk[N];\nmap<node,int>mp;\nmap<int,int>sum;\nint read() {\n\tint s=0,f=0;char ch=getchar();\n\twhile(ch<48||ch>57)f|=(ch=='-'),ch=getchar();\n\twhile(ch>47&&ch<58)s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n\treturn f?-s:s;\n}\nint Num(node x) {if(mp.find(x)==mp.end())fp[mp[x]=++tot]=x;return mp[x];}\nint Check(node a,int x,int y,int i) {if(a.x<x+pw[i]&&a.y<y+pw[i])return 0;return 1+(a.x<x+pw[i]);}\nbool cmp(node a,node b) {//return dfn[a]<dfn[b]\n\tfor(int i=30,x=0,y=0; ~i; --i) {\n\t\tint A=Check(a,x,y,i),B=Check(b,x,y,i);\n\t\tif(A==B) {if(A==1)x+=pw[i];if(A==2)y+=pw[i];}\n\t\telse {\n\t\t\tif(A==0){if(B==1)return 1;if(B==2)return a.x==x;}\n\t\t\tif(B==0){if(A==1)return 0;if(A==2)return b.x!=x;}return A>B;\n\t\t}\n\t} return 0;\n}\nnode Lca(node a,node b,int x=0,int y=0) {\n\tfor(int i=30; ~i; --i) {\n\t\tint A=Check(a,x,y,i),B=Check(b,x,y,i);\n\t\tif(A==B) {if(A==1)x+=pw[i];if(A==2)y+=pw[i];}\n\t\telse {\n\t\t\tif(A+B==3)return node(x,y);if(B==0)swap(A,B),swap(a,b);\n\t\t\tif(B==1)b=node(x+pw[i]-1,y);if(B==2)b=node(x,y+pw[i]-1);\n\t\t}\n\t} return a;\n}\nint h[N],nx[N<<1],to[N<<1],s[N],s1[N],ed;\nvoid Addedge(int x,int y) {nx[++ed]=h[x],to[h[x]=ed]=y;}\nvoid BWT() {\n#define Work() Addedge(Num(stk[top-1]),Num(stk[top])),--top\n#define Do(x) !(x==stk[top])&&(stk[++top]=x,1)\n\tNum(stk[top=1]=node(0,0));\n\tfor(int i=1; i<=cnt; ++i)if(!(p[i]==stk[top])) {\n\t\tnode lca=Lca(p[i],stk[top]);if(lca==stk[top]){stk[++top]=p[i];continue;}\n\t\twhile(cmp(lca,stk[top-1]))Work();Addedge(Num(lca),Num(stk[top--])),Do(lca),Do(p[i]);\n\t} while(top>1)Work();\n}\nvoid Dfs(int x,int p) {\n\tfor(int i=h[x]; i; i=nx[i])Dfs(to[i],x),s[x]+=s[to[i]];\n\tif(s[x])sum[fp[x].x+fp[x].y]^=1,sum[fp[x].x+fp[x].y+1]^=1;s[x]+=s1[x];\n\tif(s[x]&&p)sum[fp[p].x+fp[p].y+1]^=1,sum[fp[x].x+fp[x].y]^=1;\n}\nint main() {\n\tfor(int i=pw[0]=1; i<=30; ++i)pw[i]=1<<i;\n\tfor(int i=n=read(),xa,xb,ya,yb; i; --i) {\n\t\txa=read(),ya=read(),xb=read(),yb=read();\n\t\tp[++cnt]=a[i][0]=node(xa,ya),p[++cnt]=a[i][1]=node(xb,yb);\n\t} sort(p+1,p+cnt+1,cmp),BWT();\n\tfor(int i=1; i<=n; ++i)++s[Num(a[i][0])],++s[Num(a[i][1])],s1[Num(Lca(a[i][0],a[i][1]))]-=2;\n\tDfs(1,0);for(map<int,int>::iterator it=sum.begin(); it!=sum.end(); ++it)ans+=it->second;cout<<ans-sum[0];\n\treturn 0;\n}\n```\n",
        "postTime": 1625882281,
        "uid": 112569,
        "name": "Time_tears",
        "ccfLevel": 9,
        "title": "CF1439E Cheat and Win"
    }
]