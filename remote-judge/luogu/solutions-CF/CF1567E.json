[
    {
        "content": "### \u7528\u7c7b\u4f3c\u533a\u95f4\u6700\u5927\u5b50\u4e32\u548c\u7684\u65b9\u5f0f\u7ef4\u62a4\u7b54\u6848\n\n\n\n1. \u8003\u8651\u628a\u4e00\u4e2a\u5e8f\u5217\u5206\u6210\u4e24\u534a\uff0c\u5de6\u4fa7 \u548c \u53f3\u4fa7 \u5206\u522b\u7edf\u8ba1\u4e00\u6b21\u7b54\u6848\uff0c\u7136\u540e\u8003\u8651 \u5de6\u4fa7 \u548c \u53f3\u4fa7\u5171\u540c\u7edf\u8ba1\uff0c\u9012\u589e\u5e8f\u5217\u4e00\u5b9a\u8fde\u7eed\uff0c\u6240\u4ee5\u8d21\u732e\u7edf\u8ba1\u9700\u8981\u7528\u5230 \u5de6\u4fa7\u7684\u540e\u7f00 \u548c \u53f3\u4fa7\u7684\u524d\u7f00\n\n2. \u8bb0 $sum$ \u4e3a\u6574\u4e2a\u533a\u95f4\u5185\u7684\u7b54\u6848 \uff0c$suml$ \u548c $sumr$ \u4e3a\u4ece\u533a\u95f4\u5f00\u5934\u3001\u672b\u5c3e\u5f00\u59cb\u9012\u589e\u3001\u9012\u51cf\u7684\u6700\u957f\u5e8f\u5217\uff0c\u4f8b\u5982 $[3,1,4,1,5]$ \u4e2d $suml = 1$\uff0c$sumr = 2$\uff0c\u5f97\u5230 $sum_x = sum_{ls} + sum_{rs} + sumr_{ls} * suml_{rs}$\uff0c\u6761\u4ef6\u662f \u5de6\u4fa7\u7684\u53f3\u7aef\u70b9 \u5c0f\u4e8e\u7b49\u4e8e \u53f3\u4fa7\u7684\u5de6\u7aef\u70b9\n\n3. \u6240\u4ee5\u9700\u8981\u8bb0\u5f55\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u503c\uff0c\u4ee5\u53ca\u4e0a\u6587\u63d0\u5230\u7684 $sum,suml,sumr$\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u66f4\u65b0 $suml$ \u548c $sumr$\u3002\u4ee5 $suml$ \u4e3a\u4f8b\uff0c\u4e00\u5b9a\u6709 $suml_x \\ge suml_{ls}$\uff0c\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u6709 $suml_x > suml_{ls}$ \uff0c\u7b54\u6848\u662f \u6574\u4e2a\u5de6\u533a\u95f4 \u5355\u8c03\u7684\u60c5\u51b5\u4e0b\u624d\u53ef\u80fd\u53d1\u751f $suml_x = len_{ls} + suml_{rs}$\uff0c\u53e6\u8bb0\u4e00\u4e2a\u533a\u95f4\u957f\u5ea6\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\n#define mid ((l+r)>>1)\n#define lson (x<<1),l,mid\n#define rson (x<<1|1),mid+1,r\nusing namespace std;\ntypedef long long LL;\nconst int maxn = 2e5+20;\nint n,m;\nstruct node{\n\tint lx,rx,len;\n\tLL sum,suml,sumr;\n}Tree[maxn<<2];\n\ninline int read(){\n    int x = 0 , f = 1 ; char c = getchar() ;\n    while( c < '0' || c > '9' ) { if( c == '-' ) f = -1 ; c = getchar() ; } \n    while( c >= '0' && c <= '9' ) { x = x * 10 + c - '0' ; c = getchar() ; } \n    return x * f ;\n}\n\nnode pushup(node x,node y){\n\tnode z;\n\tz.lx = x.lx ;z.rx = y.rx ;\n\tz.sum = x.sum + y.sum ;z.len = x.len + y.len ;\n\tif(x.rx<=y.lx){\n\t\tz.sum += 1ll * x.sumr * y.suml ;\n\t\tif(x.suml==x.len) z.suml = x.len + y.suml ;\n\t\telse z.suml = x.suml ;\n\t\tif(y.sumr==y.len) z.sumr = x.sumr + y.len ;\n\t\telse z.sumr = y.sumr ;\n\t}\n\telse z.suml = x.suml ,z.sumr = y.sumr ;\n\treturn z; \n}\n\nvoid build(int x,int l,int r){\n\tif(l==r){\n\t\tTree[x].lx = Tree[x].rx = read();\n\t\tTree[x].len = Tree[x].sum = Tree[x].suml = Tree[x].sumr = 1;\n\t\treturn ; \n\t}\n\tbuild(lson);build(rson);\n\tTree[x] = pushup(Tree[x<<1],Tree[x<<1|1]);\n}\n\nvoid update(int x,int l,int r,int pos,int k){\n\tif(l==r){\n\t\tTree[x].lx = Tree[x].rx = k;\n\t\treturn ;\n\t}\n\tif(pos<=mid) update(lson,pos,k);\n\telse update(rson,pos,k);\n\tTree[x] = pushup(Tree[x<<1],Tree[x<<1|1]);\n}\n\nnode query(int x,int l,int r,int L,int R){\n\tif(L<=l&&r<=R) return Tree[x];\n\tif(R<=mid) return query(lson,L,R);\n\tif(mid<L) return query(rson,L,R);\n\treturn pushup(query(lson,L,R),query(rson,L,R));\n}\n\nint main(){\n\tn = read();m = read();\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tint op = read(),l = read(),r = read();\n\t\tif(op==1) update(1,1,n,l,r);\n\t\telse printf(\"%lld\\n\",query(1,1,n,l,r).sum);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1631023167,
        "uid": 250174,
        "name": "Akoasm_X",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011CF1567E Non-Decreasing Dilemma"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u6570\u7684\u5e8f\u5217 $a$ \u548c $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\n\n- `1 x y`\uff1a\u5c06 $a_x$ \u4fee\u6539\u4e3a $y$\u3002\n- `2 l r`\uff1a\u8be2\u95ee $a_l\\sim a_r$ \u4e4b\u95f4\u7684\u4e0d\u4e0b\u964d\u5b50\u4e32\u6570\u76ee\u3002\n\n### \u601d\u8def\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6574\u4e2a\u5e8f\u5217\u53ef\u4ee5\u88ab\u5206\u4e3a\u82e5\u5e72\u4e2a\u4e0d\u4e0b\u964d\u6bb5\u3002\u6211\u4eec\u628a\u6bcf\u4e00\u6bb5\u7684\u672b\u5c3e\u6253\u4e0a\u6807\u8bb0\uff0c\u90a3\u4e48\u5982\u679c $a_i$ \u88ab\u6253\u4e0a\u4e86\u6807\u8bb0\uff0c\u5219\u5fc5\u6709 $a_i>a_{i+1}$\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u628a $0$ \u53f7\u4f4d\u7f6e\u548c $n$ \u53f7\u4f4d\u7f6e\u4e5f\u6253\u4e0a\u6807\u8bb0\u3002\n\n\u8bbe $w_i$ \u4e3a\u4ee5 $a_i$ \u4e3a\u5f00\u5934\u7684\u4e0d\u4e0b\u964d\u5b50\u4e32\u6570\u76ee\uff0c$pos$ \u4e3a\u5728 $i$ \u540e\u9762\uff08\u5305\u62ec\u5b83\u81ea\u5df1\uff09\u79bb\u5b83\u6700\u8fd1\u7684\u6807\u8bb0\u4f4d\u7f6e\uff0c\u5c31\u6709 $w_i=pos-i+1$\u3002\n\n\u5bf9\u4e8e\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\uff0c\u9700\u8981\u652f\u6301\u589e\u52a0 / \u5220\u9664 $x-1$ \u6216 $x$ \u4f4d\u7f6e\u5904\u7684\u6807\u8bb0\u3002\n\n\u5f53\u4e00\u4e2a\u4f4d\u7f6e $x$ \u589e\u52a0\u6807\u8bb0\u65f6\uff0c\u8bbe $pre$ \u4e3a\u5de6\u8fb9\u79bb\u5b83\u6700\u8fd1\u7684\u6807\u8bb0\u4f4d\u7f6e\uff0c$pos$ \u4e3a\u53f3\u8fb9\u79bb\u5b83\u6700\u8fd1\u7684\u6807\u8bb0\u4f4d\u7f6e\u3002\u6839\u636e $w$ \u6570\u7ec4\u7684\u5b9a\u4e49\uff0c\u5c31\u9700\u8981\u5c06 $w_{pre+1}\\sim w_i$ \u5747\u51cf\u53bb $pos-x$\u3002\u5220\u9664\u540c\u7406\uff0c\u53ea\u9700\u8981\u589e\u52a0 $pos-x$ \u5373\u53ef\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4eba\u4e3a\u5728 $r$ \u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u6807\u8bb0\uff0c\u518d\u7edf\u8ba1 $\\sum_{i=l}^rw_i$\uff0c\u6700\u540e\u5220\u9664 $r$ \u4f4d\u7f6e\u7684\u6807\u8bb0\u5373\u53ef\u3002\n\n\u7ef4\u62a4\u6807\u8bb0\u6570\u7ec4\u53ef\u4ee5\u7528 set \u89e3\u51b3\uff0c$w$ \u6570\u7ec4\u7684\u533a\u4fee\u533a\u67e5\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\log n)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\n#define Fo(i,a,b) for(int i=(a);i<(b);++i)\n#define Ro(i,a,b) for(int i=(a);i>(b);--i)\n#define ll long long\nusing namespace std;\nconst int Maxn=2e5;\n\ninline int read()\n{\n    char ch=getchar();\n    int f=1,x=0;\n    while(ch>'9' || ch<'0')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nint n,q,val[Maxn+5],num[Maxn+5];\nll t[Maxn*4+5],tag[Maxn*4+5];\nset<int> st,st2; // \u7b2c\u4e00\u4e2a\u4ece\u5c0f\u5230\u5927,\u7b2c\u4e8c\u4e2a\u4ece\u5927\u5230\u5c0f\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\ninline void push_up(int p) {t[p]=t[ls(p)]+t[rs(p)];}\ninline void f(int l,int r,int p,int k)\n{t[p]+=1ll*(r-l+1)*k,tag[p]=tag[p]+k;}\ninline void push_down(int l,int r,int p)\n{\n\tint mid=(l+r)>>1;\n\tf(l,mid,ls(p),tag[p]),f(mid+1,r,rs(p),tag[p]);\n\ttag[p]=0; return;\n}\ninline void Build(int l,int r,int p)\n{\n\tif(l==r) {t[p]=num[l]; return;}\n\tint mid=(l+r)>>1;\n\tBuild(l,mid,ls(p)),Build(mid+1,r,rs(p)),push_up(p);\n}\ninline void Update(int nl,int nr,int l,int r,int p,int k)\n{\n\tif(l<=nl && nr<=r)\n\t{\n\t\tt[p]+=1ll*k*(nr-nl+1),tag[p]=tag[p]+k;\n\t\treturn;\n\t}\n\tpush_down(nl,nr,p);\n\tint mid=(nl+nr)>>1;\n\tif(l<=mid) Update(nl,mid,l,r,ls(p),k);\n\tif(r>mid) Update(mid+1,nr,l,r,rs(p),k);\n\tpush_up(p);\n}\ninline ll Count(int nl,int nr,int l,int r,int p)\n{\n\tif(l<=nl && nr<=r) return t[p];\n\tpush_down(nl,nr,p);\n\tint mid=(nl+nr)>>1; ll res=0;\n\tif(l<=mid) res+=Count(nl,mid,l,r,ls(p));\n\tif(r>mid) res+=Count(mid+1,nr,l,r,rs(p));\n\tpush_up(p); return res;\n}\ninline void Add(int x) // \u6dfb\u52a0x\u4f4d\u7f6e\u6807\u8bb0\n{\n    int pos=*st.lower_bound(x),pre=-(*st2.lower_bound(-x))+1;\n    Update(1,n,pre,x,1,x-pos);\n    st.insert(x),st2.insert(-x);\n}\ninline void Del(int x)\n{\n    st.erase(x),st2.erase(-x);\n    int pos=*st.lower_bound(x),pre=-(*st2.lower_bound(-x))+1;\n    Update(1,n,pre,x,1,pos-x);\n}\n\nint main()\n{\n    n=read(),q=read();\n    For(i,1,n) val[i]=read();\n    For(i,1,n-1) if(val[i]>val[i+1]) st.insert(i),st2.insert(-i); \n    st.insert(0),st.insert(n),st2.insert(0),st2.insert(-n); // \u6ce8\u610f\u8fd9\u91cc\u4e0d\u8981\u6f0f\u6389\n    For(i,1,n)\n    {\n        int pos=*st.lower_bound(i);\n        num[i]=pos-i+1;\n    }\n    Build(1,n,1);\n    while(q--)\n    {\n        int opt=read(),x=read(),y=read();\n        if(opt==1)\n        {\n            int pre=val[x]; val[x]=y;\n            if(val[x-1]<=pre && val[x-1]>val[x]) Add(x-1);\n            if(val[x-1]>pre && val[x-1]<=val[x]) Del(x-1);\n            if(pre<=val[x+1] && val[x]>val[x+1]) Add(x);\n            if(pre>val[x+1] && val[x]<=val[x+1]) Del(x);\n        }\n        else\n        {\n            if(val[y]<=val[y+1]) Add(y);\n            ll ans=Count(1,n,x,y,1);\n            printf(\"%lld\\n\",ans);\n            if(val[y]<=val[y+1]) Del(y);\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1630988709,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1567E\u3010Non-Decreasing Dilemma\u3011"
    },
    {
        "content": "## Description\n\u5355\u70b9\u4fee\u6539\u5e8f\u5217\uff0c\u533a\u95f4\u67e5\u8be2\u4e0d\u964d\u5b50\u6bb5\u4e2a\u6570\u3002\n\n\u6ce8\u610f\u5b50\u6bb5\u662f\u8fde\u7eed\u7684\u5b50\u6bb5\u3002\n\n## Solution\n\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u7b54\u6848\u3002\n\n\u53d1\u73b0\uff0c\u5982\u679c\u8981\u5408\u5e76\u5de6\u53f3\u4e24\u4e2a\u5b50\u533a\u95f4\uff0c\u5219\u53ef\u80fd\u5de6\u8fb9\u7684\u6781\u53f3\u5b50\u6bb5\u4f1a\u548c\u53f3\u8fb9\u7684\u6781\u5de6\u5b50\u6bb5\u53d1\u751f\u5408\u5e76\uff0c\u8fd9\u6837\u5b50\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u4e3a\u8fd9\u4e24\u6bb5\u957f\u5ea6\u4e4b\u79ef\uff08\u7ec4\u5408\u610f\u4e49\u5c31\u662f\u65b0\u4ea7\u751f\u7684\u662f\u8de8\u8d8a\u4e2d\u70b9\u7684\u5b50\u6bb5\uff0c\u5de6\u7aef\u70b9\u80fd\u53d6\u7684\u4e2a\u6570\u4e58\u4e0a\u53f3\u7aef\u70b9\u80fd\u53d6\u7684\u4e2a\u6570\uff09\n\n\u6240\u4ee5\uff0c\u7ebf\u6bb5\u6811\u5185\u9700\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u5c31\u6709\u4e0d\u964d\u5b50\u6bb5\u4e2a\u6570\uff0c\u6781\u5de6\u6700\u957f\u5b50\u6bb5\u957f\u5ea6\uff0c\u6781\u53f3\u6700\u957f\u5b50\u6bb5\u957f\u5ea6\u3002\n\n\u5f53\u7136\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u7ec6\u8282\uff1a\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u4e00\u6574\u4e2a\u5c31\u662f\u4e00\u4e2a\u4e0d\u964d\u5b50\u6bb5\uff0c\u5411\u4e0a\u5408\u5e76\u65f6\u4ea7\u751f\u7684\u6781\u5de6/\u53f3\u5b50\u6bb5\u957f\u5ea6\u5c31\u4f1a\u8de8\u8d8a\u7aef\u70b9\uff0c\u6ce8\u610f\u5408\u5e76\u5373\u53ef\u3002\n\n\u7b54\u6848\u4e0a\u754c\u4f1a\u7206 `int`\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n## Implementation\n```cpp\n#include <cstdio>\n#include <cctype>\n#define il inline\n#define FOR(i, a, b) for (int i = (a); i <= (b); ++i)\n\nnamespace fastIO {...} // namespace fastIO\n\nusing namespace fastIO;\n\ntypedef long long ll;\n\nconst int maxn = 2e5 + 5;\n\nint val[maxn];\n\nstruct node {\n    int l, r;\n    ll ans, lenl, lenr;\n    bool isone;\n    node() {l = r = ans = lenl = lenr = 0; isone = 0;}\n    il friend node operator+(const node &a, const node &b) {\n        node ret;\n        ret.ans = a.ans + b.ans;\n        if (val[a.r] <= val[b.l]) ret.ans += a.lenr * b.lenl;\n        ret.l = a.l, ret.r = b.r, ret.lenl = a.lenl, ret.lenr = b.lenr;\n        if (a.isone && val[a.r] <= val[b.l]) ret.lenl += b.lenl;\n        if (b.isone && val[a.r] <= val[b.l]) ret.lenr += a.lenr;\n        ret.isone = a.isone && b.isone && (val[a.r] <= val[b.l]);\n        return ret;\n    }\n} t[maxn << 2];\n\n#define L (k << 1)\n#define R (L | 1)\n#define M ((i + j) >> 1)\n\nvoid build(int i, int j, int k) {\n    t[k].l = i, t[k].r = j;\n    if (i == j) {\n        read(val[i]);\n        t[k].lenl = t[k].lenr = t[k].isone = t[k].ans = 1;\n        return;\n    }\n    build(i, M, L);\n    build(M + 1, j, R);\n    t[k] = t[L] + t[R];\n    return;\n}\n\nvoid modify(int i, int j, int k, int x, int v) {\n    if (i == j) {\n        val[i] = v;\n        t[k].lenl = t[k].lenr = t[k].isone = t[k].ans = 1;\n        return;\n    }\n    if (x <= M) modify(i, M, L, x, v);\n    else modify(M + 1, j, R, x, v);\n    t[k] = t[L] + t[R];\n    return;\n}\n\nnode query(int i, int j, int k, int x, int y) {\n    if (x <= i && y >= j) return t[k];\n    if (y <= M) return query(i, M, L, x, y);\n    if (x > M) return query(M + 1, j, R, x, y);\n    return query(i, M, L, x, y) + query(M + 1, j, R, x, y);\n}\n\nint main() {\n    int n, q; read(n), read(q);\n    build(1, n, 1);\n    while (q--) {\n        int op, x, y;\n        read(op), read(x), read(y);\n        if (op == 1) modify(1, n, 1, x, y);\n        else print(query(1, n, 1, x, y).ans), putchar('\\n');\n    }\n    return output(), 0;\n}\n```",
        "postTime": 1630896000,
        "uid": 212488,
        "name": "\u6e05\u70db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1567E"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u4e0d\u964d\u5b50\u533a\u95f4\u6570\u91cf\u3002\n# \u9898\u76ee\u5206\u6790\n~~\u552f\u4e00\u6307\u5b9a\u6570\u636e\u7ed3\u6784\u9898~~\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a $O(nlogn)$ \u7684\u7b97\u6cd5\u6765\u89e3\u51b3\uff0c\u800c\u8fd9\u79cd\u82b1\u91cc\u80e1\u54e8\u7684\u4e1c\u897f\u6811\u72b6\u6570\u7ec4\u4e0d\u597d\u7ef4\u62a4\uff0c\u4e8e\u662f\u9009\u62e9\u4f7f\u7528\u7c7b\u4f3c\u4e8e GSS \u7cfb\u5217\u7684\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u8bb0\u5f55\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u6570 $ans$\u3001\u5de6\u7aef\u70b9\u4e3a\u6700\u5de6\u80fd\u6269\u5c55\u591a\u5c11 $lans$\u3001\u53f3\u7aef\u70b9\u4e3a\u6700\u53f3\u80fd\u6269\u5c55\u591a\u5c11 $rans$\u3002\n\n\u8003\u8651\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff0c\u57fa\u7840\u8f6c\u79fb\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5bf9\u4e8e $lans$\uff0c\u5982\u679c\u5de6\u533a\u95f4\u80fd\u53d6\u6ee1\u518d\u5224\u65ad\u8003\u8651\u53f3\u533a\u95f4\uff0c$rans$ \u540c\u7406\u3002\u5bf9\u4e8e $ans$\uff0c\u7c7b\u4f3c\u4e8e\u5206\u6cbb\uff0c\u5de6\u533a\u95f4\u7b54\u6848\u548c\u53f3\u533a\u95f4\u7b54\u6848\u80af\u5b9a\u662f\u8981\u52a0\u7684\uff0c\u8fd8\u9700\u8ba1\u7b97\u8de8\u533a\u95f4\u7684\uff0c\u8fd9\u65f6\u5224\u65ad\u662f\u5426\u80fd\u8de8\u533a\u95f4\uff0c\u518d\u5229\u7528\u4e4b\u524d\u7ef4\u62a4\u7684 $lans$ \u548c $rans$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u603b\u4f53\u6765\u8bf4\u662f\u6bd4\u8f83\u5957\u8def\u7684\uff0c\u548c\u677f\u5b50\u7684\u552f\u4e00\u533a\u522b\u5c31\u662f\u5bf9\u7ebf\u6bb5\u6811\u5408\u5e76\u533a\u95f4\u7684\u7075\u6d3b\u5904\u7406\u3002\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define YPC rubbish \n#define R register\n#define I inline\n#define ll long long\n#define ull unsigned long long\n#define LL __int128\n#define db double\nusing namespace std;\n#define pb push_back\n#define pii pair<int,int>\n#define pli pair<ll,int>\n#define pll pair<ll,ll>\n#define mp(x,y) make_pair(x,y)\n#define piii pair<pair<int,int>,int>\n#define mp3(x,y,z) make_pair(make_pair(x,y),z)\n#define fi first\n#define se second\n#define putint(x) printf(\"%d\\n\",x)\n#define putll(x) printf(\"%lld\\n\",x)\n#define putull(x) printf(\"%llu\\n\",x)\n#define lowbit(x) ((x)&(-(x)))\n#define chkmin(x,y) (x=min(x,y))\n#define chkmax(x,y) (x=max(x,y))\n#define inv(x) ksm(x,mod-2)\n#define inf (1e9)\n#define INF (1e18)\n#define eps (1e-8)\n#define For(i,x,y) for(R int i=x;i<=y;++i)\n#define For2(i,x,y,k) for(R int i=x;i<=y;i+=k)\n#define Rof(i,x,y) for(R int i=x;i>=y;--i)\n#define Rof2(i,x,y,k) for(R int i=x;i>=y;i-=k)\n#define ForG(i,edge,x) for(auto i:edge[x])\nI int read()\n{\n\tchar ch=getchar();\n\tint res=0,flag=1;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t\tflag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tres=res*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn res*flag;\n}\nstruct tree\n{\n\tint l,r,siz;\n\tll lans,rans;\n\tll ans;\n}t[800001];\nint n,q,a[200001],op,x,y;\ntree merge(tree t1,tree t2)\n{\n\ttree res;\n\tres.l=t1.l;\n\tres.r=t2.r;\n\tres.siz=t1.siz+t2.siz;\n\tif(t1.lans==t1.siz&&a[t1.r]<=a[t2.l])\n\t\tres.lans=t1.lans+t2.lans;\n\telse\n\t\tres.lans=t1.lans;\n\tif(t2.rans==t2.siz&&a[t1.r]<=a[t2.l])\n\t\tres.rans=t1.rans+t2.rans;\n\telse\n\t\tres.rans=t2.rans;\n\tres.ans=t1.ans+t2.ans+(a[t1.r]<=a[t2.l])*t1.rans*t2.lans;\n\t//printf(\"%d %d %d %lld %lld %lld\\n\",t1.l,t1.r,t1.siz,t1.lans,t1.rans,t1.ans);\n\t//printf(\"%d %d %d %lld %lld %lld\\n\",t2.l,t2.r,t2.siz,t2.lans,t2.rans,t2.ans);\n\t//printf(\"%d %d %d %lld %lld %lld\\n\",res.l,res.r,res.siz,res.lans,res.rans,res.ans);\n\treturn res;\n}\nvoid build(int k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tt[k].l=t[k].r=l;\n\t\tt[k].siz=t[k].lans=t[k].rans=t[k].ans=1;\n\t\ta[l]=read();\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);\n\tbuild((k<<1)|1,mid+1,r);\n\tt[k]=merge(t[k<<1],t[(k<<1)|1]);\n}\nvoid update(int k,int l,int r,int x,int v)\n{\n\tif(l==r)\n\t{\n\t\ta[l]=v;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=x)\n\t\tupdate(k<<1,l,mid,x,v);\n\telse \n\t\tupdate((k<<1)|1,mid+1,r,x,v);\n\tt[k]=merge(t[k<<1],t[(k<<1)|1]);\n}\ntree query(int k,int l,int r,int x,int y)\n{\n\tif(l>=x&&r<=y)\n\t\treturn t[k];\n\tint mid=(l+r)>>1;\n\tif(mid>=y)\n\t\treturn query(k<<1,l,mid,x,y);\n\tif(mid+1<=x)\n\t\treturn query((k<<1)|1,mid+1,r,x,y);\n\treturn merge(query(k<<1,l,mid,x,y),query((k<<1)|1,mid+1,r,x,y));\n}\nint main()\n{\n\tn=read();\n\tq=read();\n\tbuild(1,1,n);\n\twhile(q--)\n\t{\n\t\top=read();\n\t\tx=read();\n\t\ty=read();\n\t\tif(op==1)\n\t\t\tupdate(1,1,n,x,y);\n\t\telse \n\t\t\tputll(query(1,1,n,x,y).ans);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1631021340,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3CF1567E"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a$\uff0c\u4f60\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- ``1 x y``\uff1a\u5c06 $a_x$ \u4fee\u6539\u4e3a $y$\u3002\n- ``2 l r``\uff1a\u6c42\u6709\u591a\u5c11\u4e2a\u6570\u5bf9 $(p,q)$ \u6ee1\u8db3 $l \\leq p \\leq q \\leq r$\uff0c\u4e14 $a_p \\leq a_{p+1} \\leq \\cdots \\leq a_{q-1} \\leq a_{q}$\u3002\n\n## \u9898\u89e3\n\n\u7531\u4e8e\u4e0d\u4f1a\u5199\u5e73\u8861\u6811\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd set \u52a0\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u3002\uff08\u6ce8\uff1aset \u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u4ee3\u66ff\uff09\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e $(l,r)$ \u533a\u95f4\u4e2d\u7684\u4e00\u6bb5\u957f\u5ea6\u4e3a $len$ \u7684\u6781\u957f\u4e0d\u964d\u5b50\u4e32\u80fd\u5bf9\u7b54\u6848\u9020\u6210 $\\frac {(len+2)\\times (len+1)} 2$ \u7684\u8d21\u732e\uff0c\u4e8e\u662f\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6ee1\u8db3 $a_{i-1}>a_i$ \u7684 $i$ \u4e3a\u65ad\u70b9\u3002\n\n\u8003\u8651\u628a\u8d21\u732e\u62c6\u5230\u5355\u70b9\uff0c\u5bf9\u4e8e $i$\uff0c\u8bbe $i$ \u4e4b\u524d\u6700\u540e\u4e00\u4e2a\u65ad\u70b9\u5728 $lst$\uff0c\u90a3\u4e48 $q=i$ \u7684\u6570\u5bf9 $(p,q)$ \u5c31\u6709 $i-lst+1$ \u4e2a\u3002\n\n\u6ce8\u610f\u5bf9\u4e8e\u67e5\u8be2\u65f6\uff0c$l$ \u4e5f\u8981\u88ab\u7b97\u4f5c\u4e00\u4e2a\u65ad\u70b9\uff0c\u56e0\u4e3a\u4e0d\u80fd\u7ee7\u7eed\u5f80\u524d\u53d6\u4e86\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u53ea\u8981\u63d2\u5165\u4e00\u4e2a\u65ad\u70b9 $l$\uff0c\u518d\u67e5\u8be2 $i-lst+1$ \u7684\u533a\u95f4\u548c\u5373\u53ef\uff0c\u6700\u540e\u5220\u53bb\u65ad\u70b9 $l$\u3002**\u82e5 $l$ \u5728\u6570\u7ec4\u4e2d\u672c\u8eab\u5c31\u662f\u65ad\u70b9\uff0c\u6ce8\u610f\u4e0d\u8981\u8bef\u5220**\n\n\u7531\u4e8e\u7b54\u6848\u53ea\u548c\u65ad\u70b9\u6709\u5173\uff0c\u6240\u4ee5\u5355\u4fee $i$ \u7684\u65f6\u5019\u53ea\u8981\u68c0\u67e5 $i$ \u548c $i+1$ \u5904\u6709\u6ca1\u6709\u65ad\u70b9\u3002 \n\n\u4e0a\u9762\u7684\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n--------\n\n\u6700\u540e\u8003\u8651\u5982\u4f55\u6dfb\u52a0\u6216\u5220\u9664\u65ad\u70b9\u3002\n\n\u9996\u5148\u628a\u73b0\u6709\u7684\u6240\u6709\u65ad\u70b9\u63d2\u5165\u5230\u4e00\u4e2a set \u4e2d\u3002\n\n\u5047\u8bbe\u6211\u8981\u63d2\u5165\u4e00\u4e2a\u65ad\u70b9 $x$\uff0c\u67e5\u627e\u51fa $x$ \u5de6\u53f3\u7684\u7b2c\u4e00\u4e2a\u65ad\u70b9\uff0c\u8bb0\u4e3a $s,t$\u3002\n\n\u90a3\u4e48\u539f\u5148\u5bf9\u4e8e $[s,t-1]$ \u7684\u533a\u95f4\uff0c\u8d21\u732e\u90fd\u662f $i-s+1$\u3002\n\n\u4fee\u6539\u540e\u5bf9\u4e8e $[s,x-1]$ \u7684\u533a\u95f4\uff0c\u8d21\u732e\u4ecd\u662f $i-s+1$\uff0c\u5bf9\u4e8e $[x,t-1]$ \u7684\u533a\u95f4\uff0c\u8d21\u732e\u53d8\u4e3a $i-x+1$\u3002\n\n\u56e0\u6b64\uff0c\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5bf9 $[x,t-1]$ \u533a\u95f4\u51cf\u53bb $x-s$\u3002\n\n\u5220\u53bb\u65ad\u70b9\u7684\u64cd\u4f5c\u540c\u7406\uff0c\u6700\u7ec8\u8f6c\u5316\u6210\u5bf9 $[x,t-1]$ \u533a\u95f4\u52a0\u4e0a $x-s$\u3002\n\n\u6ce8\u610f\u5728 $1$ \u5904\u548c $n+1$ \u5904\u9884\u8bbe\u65ad\u70b9\u3002\n\n[**Code**](https://codeforces.com/contest/1567/submission/128039120)",
        "postTime": 1630930199,
        "uid": 197493,
        "name": "unputdownable",
        "ccfLevel": 7,
        "title": "CF1567E Non-Decreasing Dilemma \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u4e25\u683c\u4e0d\u964d\u5b50\u533a\u95f4\u8ba1\u6570\u3002\n\n## \u7b80\u8981\u505a\u6cd5\n\n\u8003\u8651\u5206\u5757\uff0c\u6bcf\u4e2a\u5757\u5185\u7ef4\u62a4\u6240\u6709\u6781\u5927\u4e0d\u964d\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\u8fd9\u6837\u4e00\u4e2a\u957f\u5ea6\u4e3a $L$ \u7684\u6781\u5927\u4e0d\u964d\u533a\u95f4\u7684\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u4e3a $\\sum_{i=1}^L i$\u3002\n\n\u5bf9\u4e8e\u5355\u70b9\u4fee\u6539\uff0c\u76f4\u63a5\u66b4\u529b\u91cd\u6784\u6574\u4e2a\u5757\u3002\n\n\u6bd4\u8f83\u9ebb\u70e6\u7684\u662f\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u62fc\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u300c\u6700\u540e\u4e00\u4e2a\u904d\u5386\u5230\u7684\u533a\u95f4\u300d\u662f\u4ec0\u4e48\uff0c\u7136\u540e\u5728\u904d\u5386\u5230\u4e00\u4e2a\u65b0\u5757\u65f6\u5224\u65ad\u8fd9\u4e2a\u5757\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u5757\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u662f\u5219\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u5757\u7684\u7b2c\u4e00\u4e2a\u6781\u5927\u533a\u95f4\u548c\u300c\u6700\u540e\u4e00\u4e2a\u904d\u5386\u5230\u7684\u533a\u95f4\u300d\u8fdb\u884c\u5408\u5e76\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+q\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n```cpp\nint bl[N], lbl[N], rbl[N], a[N], sz, n, m, sum[N];\nvector<pair<int, int>> vec[N];\n\nint Sum(int x) { return x * (x + 1) / 2; }\n\nvoid Up(int x) {\n  int b = bl[x];\n  vec[b].clear();\n  vec[b].push_back({lbl[x], lbl[x]});\n  rep (i, lbl[x] + 1, rbl[x]) {\n    if (a[i - 1] <= a[i])\n      ++vec[b].back().second;\n    else\n      vec[b].push_back({i, i});\n  }\n  sum[b] = 0;\n  each (x, vec[b])\n    sum[b] += Sum(x.second - x.first + 1);\n}\n\nvoid Init() {\n  sz = max((ll)sqrt(n), 3ll);\n  rep (i, 1, n) {\n    bl[i] = (i - 1) / sz + 1;\n    lbl[i] = (bl[i] - 1) * sz + 1;\n    rbl[i] = min(bl[i] * sz, n);\n  }\n  ste(i, 1, n, sz) Up(i);\n}\n\nvoid Set(int p, int x) {\n  a[p] = x;\n  Up(p);\n}\n\nint Ask(int l, int r) {\n  int res = 0;\n  if (bl[l] == bl[r]) {\n    vector<pair<int, int>> v;\n    v.push_back({l, l});\n    rep (i, l + 1, r) {\n      if (a[i - 1] <= a[i])\n        ++v.back().second;\n      else\n        v.push_back({i, i});\n    }\n    each (x, v)\n      res += Sum(x.second - x.first + 1);\n    return res;\n  }\n  res += Ask(l, rbl[l]);\n  pair<int, int> lst = vec[bl[l]].back();\n  up(lst.first, l);\n  ste(i, lbl[l] + sz, rbl[r] - sz, sz) {\n    int b = bl[i];\n    res += sum[b];\n    // \u62fc\u63a5\n    if (a[lbl[i] - 1] <= a[lbl[i]]) {\n      res -= Sum(vec[b][0].second - vec[b][0].first + 1);\n      res -= Sum(lst.second - lst.first + 1);\n      res += Sum(vec[b][0].second - lst.first + 1);\n      up(lst.second, vec[b][0].second);\n    }\n    if (lst.second != rbl[i]) lst = vec[b].back();\n  }\n  if (a[lbl[r] - 1] <= a[lbl[r]]) {\n    res -= Sum(min(r, vec[bl[r]][0].second) - vec[bl[r]][0].first + 1);\n    res -= Sum(lst.second - lst.first + 1);\n    res += Sum(min(r, vec[bl[r]][0].second) - lst.first + 1);\n  }\n  res += Ask(lbl[r], r);\n  return res;\n}\n```\n\n\n\n",
        "postTime": 1630925545,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "CF1567E \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 $a_n$\uff0c\u8981\u6c42\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n```1 x y``` \u8868\u793a\u5c06 $a_x$ \u4fee\u6539\u4e3a $y$\n\n```2 l r``` \u8868\u793a\u67e5\u8be2\u5728 $[l,r]$ \u5185\u6709\u591a\u5c11\u4e2a\u5355\u8c03\u4e0d\u964d\u7684\u5b50\u533a\u95f4\n\n### \u5177\u4f53\u601d\u8def\n\n\u8003\u8651\u53ea\u6709\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u6211\u4eec\u6216\u8bb8\u53ef\u4ee5\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u64cd\u4f5c\u3002\n\n\u9996\u5148\u53d1\u73b0\u5bf9\u4e8e\u5e8f\u5217\u4e2d\u4efb\u610f\u4e00\u4e2a\u957f\u5ea6\u4e3a $len$ \u7684 **\u6781\u5927\u7684** \u5355\u8c03\u4e0d\u964d\u5b50\u5e8f\u5217\uff0c\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $\\dfrac{len\\times (len-1)}{2}$\n\n\u8fd9\u662f\u6211\u4eec\u505a\u8fd9\u4e2a\u95ee\u9898\u7684\u57fa\u7840\u3002\n\n\u800c\u53c8\u8003\u8651\u5230\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7ef4\u62a4\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\uff0c\u5177\u4f53\u505a\u6cd5\u662f\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u70b9\u7684\u4fe1\u606f\u6709\uff1a\n\n1. \u533a\u95f4\u5185\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\n\n2. \u533a\u95f4\u5185\u4ee5\u533a\u95f4\u53f3\u7aef\u70b9\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\n\n3. \u533a\u95f4\u5185\u4ee5\u533a\u95f4\u5de6\u7aef\u70b9\u4e3a\u5f00\u5934\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\n\n\u5728 ```pushup``` \u7684\u65f6\u5019\u8ba8\u8bba\u4e00\u4e0b\uff0c\u5177\u4f53\u5c31\u662f\uff1a\n\n1. \u533a\u95f4\u5185\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\u4e3a\u5de6\u53f3\u513f\u5b50\u8be5\u4fe1\u606f\u7684\u6700\u5927\u503c\u548c\u5408\u5e76\u5de6\u53f3\u513f\u5b50\u4ea7\u751f\u7684\u65b0\u8d21\u732e\u7684\u6700\u5927\u503c\n\n2. \u533a\u95f4\u5185\u4ee5\u533a\u95f4\u53f3\u7aef\u70b9\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\u4e3a\u53f3\u513f\u5b50\u8be5\u4fe1\u606f\u4e0e\u5408\u5e76\u5de6\u53f3\u513f\u5b50\u4ea7\u751f\u7684\u65b0\u8d21\u732e\u7684\u6700\u5927\u503c\n\n3. \u533a\u95f4\u5185\u4ee5\u533a\u95f4\u5de6\u7aef\u70b9\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\u4e3a\u5de6\u513f\u5b50\u8be5\u4fe1\u606f\u4e0e\u5408\u5e76\u5de6\u53f3\u513f\u5b50\u4ea7\u751f\u7684\u65b0\u8d21\u732e\u7684\u6700\u5927\u503c\n\n\u592a\u62bd\u8c61\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n\n```cpp\n// maxx \u533a\u95f4\u5185\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\n// len1 \u533a\u95f4\u5185\u4ee5\u533a\u95f4\u5de6\u7aef\u70b9\u4e3a\u5f00\u5934\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6 \n// len2 \u533a\u95f4\u5185\u4ee5\u533a\u95f4\u53f3\u7aef\u70b9\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\nvoid merge(node x,node y)// \u5408\u5e76\u4e24\u4e2a\u76f8\u90bb\u533a\u95f4 \n{\n\tnode c;\n\tc.l=x.l,c.r=y.r;\n\tc.maxx=max(max(x.maxx,y.maxx),(a[x.r]<=a[y.l])*(x.len2+y.len1));\n\tc.len1=x.len1,c.len2=y.len2;\n\tif(y.len2==y.r-y.l+1&&a[x.r]<=a[y.l]) c.len2=x.len2+y.len2;\n\tif(x.len1==x.r-x.l+1&&a[x.r]<=a[y.l]) c.len1=x.len1+y.len1;\n\treturn c;\n}\nvoid pushup(int u)\n{\n\ttr[u]=merge(tr[u<<1],tr[u<<1|1]);\n}\n```\n\u81f3\u6b64\u8fd9\u9053\u9898\u89e3\u51b3\u4e86\u4e00\u5927\u534a\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u5c06\u7ef4\u62a4\u7684\u7b2c\u4e00\u4e2a\u4fe1\u606f\u6539\u4e3a **\u533a\u95f4\u5185\u6240\u6709\u6781\u5927\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u5b50\u5e8f\u5217\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u53ef**\u3002\n\n\u4f7f\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T> inline void read(T &x)\n{\n\tx=0;short f=1;char c=getchar();\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=-1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tx*=f;return;\n}\nconst int N=6e5+5;\n#define ll long long\nstruct node{\n\tint l,r;\n\tll sum;\n\tint len1,len2;\n}tr[N*4];\nint a[N];\nnode merge(node x,node y)\n{\n\tnode c;\n\tc.l=x.l,c.r=y.r;\n\tc.sum=x.sum+y.sum;\n\tif(a[x.r]<=a[y.l]) \n\t\tc.sum=x.sum+y.sum-1ll*y.len1*(y.len1-1)/2-1ll*x.len2*(x.len2-1)/2+1ll*(y.len1+x.len2)*(y.len1+x.len2-1)/2;\n\tc.len1=x.len1,c.len2=y.len2;\n\tif(y.len2==y.r-y.l+1&&a[x.r]<=a[y.l]) c.len2=x.len2+y.len2;\n\tif(x.len1==x.r-x.l+1&&a[x.r]<=a[y.l]) c.len1=x.len1+y.len1;\n\treturn c;\n}\nvoid pushup(int u)\n{\n\ttr[u]=merge(tr[u<<1],tr[u<<1|1]);\n}\nvoid build(int u,int l,int r)\n{\n\ttr[u].l=l,tr[u].r=r;\n\tif(l==r)\n\t{\n\t\ttr[u].sum=tr[u].len1=tr[u].len2=1;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(u<<1,l,mid),build(u<<1|1,mid+1,r);\n\tpushup(u);\n}\nvoid modify(int u,int pos)\n{\n\tif(tr[u].l==tr[u].r) return;\n\tint mid=tr[u].l+tr[u].r>>1;\n\tif(pos<=mid) modify(u<<1,pos);\n\telse modify(u<<1|1,pos);\n\tpushup(u);\n}\nnode query(int u,int l,int r)\n{\n\tif(l<=tr[u].l&&tr[u].r<=r) return tr[u];\n\tint mid=tr[u].l+tr[u].r>>1;\n\tif(l<=mid&&r>mid) return merge(query(u<<1,l,r),query(u<<1|1,l,r));\n\tif(l<=mid) return query(u<<1,l,r);\n\tif(r>mid) return query(u<<1|1,l,r);\n}\nint n,m;\nint main()\n{\n\tread(n),read(m);\n\tfor(int i=1;i<=n;++i) read(a[i]);\n\tbuild(1,1,n);\n\twhile(m--)\n\t{\n\t\tint op,l,r;\n\t\tread(op),read(l),read(r);\n\t\tif(op==1) a[l]=r,modify(1,l);\n\t\telse printf(\"%lld\\n\",query(1,l,r).sum);\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1631027861,
        "uid": 231600,
        "name": "zhangboju",
        "ccfLevel": 9,
        "title": "\u3010CF1567E Non-Decreasing Dilemma\u3011\u9898\u89e3"
    },
    {
        "content": "CF \u306e\u61a8\u61a8\u6570\u636e\u7ed3\u6784\u9898\uff08\n\n\u9898\u610f\uff1a\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- \u5355\u70b9\u4fee\u6539\n- \u67e5\u8be2 $[l,r]$ \u5185\u6709\u591a\u5c11\u4e2a\u5355\u8c03\u4e0d\u964d\u7684\u8fde\u7eed\u5b50\u533a\u95f4\u3002\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u7531\u4e8e\u53ea\u6709\u5355\u70b9\u4fee\u6539\uff0c\u6211\u4eec\u53ea\u9700\u8981\u601d\u8003\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u4fe1\u606f\u3002\n\n\u9996\u5148\u6309\u7167\u5957\u8def\uff0c\u6211\u4eec\u628a\u533a\u95f4\u5185\u7684\u4e0d\u964d\u5b50\u6bb5\u5206\u4e3a\u4e24\u79cd\uff1a\n\n- \u5b8c\u5168\u5728\u5de6\u513f\u5b50\u5185\u7684\n- \u5b8c\u5168\u5728\u53f3\u513f\u5b50\u5185\u7684\n- \u8de8\u8d8a\u533a\u95f4\u4e2d\u70b9\u7684\n\n\u5bf9\u4e8e\u524d\u4e24\u79cd\u53ef\u4ee5\u76f4\u63a5\u5c06\u5de6\u53f3\u513f\u5b50\u7684\u7b54\u6848\u52a0\u8d77\u6765\u5f97\u5230\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e09\u79cd\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e2a\u8282\u70b9\u989d\u5916\u7ef4\u62a4\u4ece\u533a\u95f4 \u5de6/\u53f3 \u7aef\u70b9\u5f00\u59cb\u80fd\u591f\u5f80 \u53f3/\u5de6 \u5ef6\u4f38\u4e14\u4f7f\u5f97\u8fd9\u4e00\u6bb5\u4e00\u76f4\u5355\u8c03\u4e0d\u964d\u7684\u6700\u5927\u957f\u5ea6\uff0c\u7a0d\u52a0\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\u7b2c\u4e09\u79cd\u5b50\u533a\u95f4\u7684\u4e2a\u6570\u5c31\u662f\u628a\u8fd9\u4e24\u4e2a\u6570\u4e58\u8d77\u6765\u5f97\u5230\u7684\u503c\u3002\n\n\u6ce8\u610f\uff0c\u7531\u4e8e\u533a\u95f4\u4e2d\u70b9\u4e24\u7aef\u7684\u6570\u7684\u5927\u5c0f\u5173\u7cfb\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\u4e0a\u7684\u503c\u6765\u8fdb\u884c\u5224\u65ad\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u770b\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<vector>\n\n#define int long long\n#define lson(o) (o<<1)\n#define rson(o) (o<<1|1)\nconst int MN=2e5+5;\n\nusing namespace std;\n\ninline int read(){\n    int x=0,f=1;char c=getchar();\n    for(;(c<'0'||c>'9');c=getchar()){if(c=='-')f=-1;}\n    for(;(c>='0'&&c<='9');c=getchar())x=x*10+(c&15);\n    return x*f;\n}\n\nstruct Node{\n    int l,r,d,L,R;\n    bool tag;\n    Node(int ll,int rr,int dd,int LL,int RR,bool tt):l(ll),r(rr),d(dd),L(LL),R(RR),tag(tt){}\n    Node(){}\n};\n\nint a[MN];\n\nstruct SegTree{\n\n    Node d[MN<<2];\n\n    inline Node merge(Node ls,Node rs){\n        Node res;\n        res.d=ls.d+rs.d;\n        if(ls.R<=rs.L)res.d+=ls.r*rs.l;\n        res.L=ls.L,res.R=rs.R,res.l=ls.l,res.r=rs.r;\n        if(ls.tag&&ls.R<=rs.L)res.l+=rs.l;\n        if(rs.tag&&ls.R<=rs.L)res.r+=ls.r;\n        res.tag=(ls.tag&rs.tag&(ls.R<=rs.L));\n        return res;\n    }\n\n    inline void build(int l,int r,int o){\n        if(l==r){\n            d[o]=Node(1,1,1,a[l],a[l],1);\n            return ;\n        }\n        int mid=(l+r)>>1;\n        build(l,mid,lson(o));\n        build(mid+1,r,rson(o));\n        d[o]=merge(d[lson(o)],d[rson(o)]);\n    }\n\n    inline void modify(int pos,int k,int ql,int qr,int o){\n        if(ql==qr){d[o]=Node(1,1,1,k,k,1);return ;}\n        int mid=(ql+qr)>>1;\n        if(pos<=mid)modify(pos,k,ql,mid,lson(o));\n        else modify(pos,k,mid+1,qr,rson(o));\n        d[o]=merge(d[lson(o)],d[rson(o)]);\n    }\n\n    inline Node query(int l,int r,int ql,int qr,int o){\n        if(l<=ql&&qr<=r)return d[o];\n        int mid=(ql+qr)>>1;\n        if(r<=mid)return query(l,r,ql,mid,lson(o));\n        if(l>mid)return query(l,r,mid+1,qr,rson(o));\n        return merge(query(l,r,ql,mid,lson(o)),query(l,r,mid+1,qr,rson(o)));\n    }\n\n}tree;\n\nint n,q;\n\nsigned main(void){\n\n    n=read(),q=read();\n    for(int i=1;i<=n;i++)a[i]=read();\n\n    tree.build(1,n,1);\n\n    while(q--){\n        int op=read(),x=read(),y=read();\n        if(op==1)tree.modify(x,y,1,n,1);\n        else cout<<tree.query(x,y,1,n,1).d<<endl;\n    }\n\n    return 0;\n}\n```",
        "postTime": 1630973168,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "[CF \u573a\u5207\u7684\u9898]CF1567E Non-Decreasing Dilemma"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u5e8f\u5217 $\\{a\\}$\uff0c\u652f\u6301\u4e00\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u8f93\u5165 $x,y$\uff0c\u5c06 $a_x$ \u6539\u4e3a $y$\n2. \u8f93\u5165 $l,r$\uff0c\u6c42 $l,r$ \u4e2d\u6709\u591a\u5c11\u5bf9 $(p,q)$ \u6ee1\u8db3 $a_p,a_{p+1},\\cdots,a_q(l\\leq p\\leq q\\leq r)$ \u5355\u8c03\u4e0d\u964d\u3002\n\n## \u89e3\u6cd5\n\n\u8003\u8651\u7ebf\u6bb5\u6811\uff1a\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\n- $l,r$\uff1a\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\uff08\u95ed\u533a\u95f4\uff09\n- $lsum$\uff1a\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\n- $rsum$\uff1a\u4ee5\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u533a\u95f4\u957f\u5ea6\n- $dat$\uff1a\u533a\u95f4\u4e2d\u6ee1\u8db3 $a_p,a_{p+1},\\cdots,a_q$ \u5355\u8c03\u4e0d\u964d\u7684 $(p,q)$ \u4e2a\u6570 \n\n\u63a5\u4e0b\u6765\u8003\u8651\u6807\u8bb0\u66f4\u65b0\u7684\u95ee\u9898\uff08\u8bb0\u5f53\u524d\u8003\u8651\u5230\u7684\u8282\u70b9\u4e3a $p$\uff0c\u8981\u5408\u5e76\u8282\u70b9 $ls$\uff0c$rs$\uff08$ls$ \u5728\u5de6\uff0c$rs$ \u5728\u53f3\uff09 \u7684\u4fe1\u606f\uff09\uff1a\n\n- $l,r$\uff1a\u5f88\u7b80\u5355\uff0c\u6b64\u5904\u7565\n- $lsum$\uff1a\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\u82e5\u8be5\u8282\u70b9\u7ef4\u62a4\u7684\u6240\u6709\u6570\u6ee1\u8db3\u5355\u8c03\u4e0d\u964d\uff0c\u5e76\u4e14 $ls$ \u7684\u672b\u5c3e\u5c0f\u4e8e\u7b49\u4e8e $rs$ \u7684\u5f00\u59cb\uff08\u7b80\u5355\u6765\u8bb2\uff0c\u5c31\u662f\u5de6\u8282\u70b9\u80fd\u8ddf\u53f3\u8282\u70b9\u62fc\u8d77\u6765\uff0c\u4f7f\u5f97\u4ece\u5de6\u8282\u70b9\u7684\u6700\u5de6\u7aef\u4e00\u76f4\u5ef6\u4f38\u5230\u53f3\u8282\u70b9\u7684\u533a\u95f4\u90fd\u6ee1\u8db3\u5355\u8c03\u4e0d\u964d\uff09\u5219 $lsum$ \u7b49\u4e8e\u5de6\u533a\u95f4\u957f\u5ea6\u52a0\u4e0a\u53f3\u533a\u95f4 $lsum$\uff1b\u5426\u5219\u76f4\u63a5\u8d4b\u4e3a\u5de6\u533a\u95f4\u7684 $lsum$\n- $rsum$ \u53ef\u7528\u7c7b\u4f3c\u65b9\u6cd5\u7ef4\u62a4\uff0c\u5177\u4f53\u770b\u4ee3\u7801\n- $dat$ \u5148\u8003\u8651\u4e0d\u8de8\u533a\u7684\u533a\u95f4\uff0c\u5b83\u7684\u4e2a\u6570\u5c31\u7b49\u4e8e\u5de6\u53f3\u8282\u70b9\u7684 $dat$ \u4e4b\u548c\uff1b\u518d\u8003\u8651\u8de8\u533a\u7684\uff0c\u663e\u7136\u9700\u8981\u6ee1\u8db3\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u503c\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u503c\u3002\u8fd9\u65f6\uff0c\u7531\u4e58\u6cd5\u539f\u7406\uff0c\u6709 $ls.rsum \\times rs.lsum$ \u4e2a\u533a\u95f4\u3002\u4e24\u79cd\u60c5\u51b5\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n\uff08\u5b9e\u73b0\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\uff09\n\n\u8d34\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#define ls(p) p<<1\n#define rs(p) p<<1|1\n\nconst int N = 200010;\ntypedef long long ll;\n\nint a[N], n, m;\n\nstruct segment_tree{\n    struct seg_Node{\n        int l, r; ll lsum, rsum, dat;\n        #define l(p) tree[p].l\n        #define r(p) tree[p].r\n        #define lsum(p) tree[p].lsum\n        #define rsum(p) tree[p].rsum\n        #define dat(p) tree[p].dat\n        #define len(p) (r(p) - l(p) + 1)\n    }tree[N<<2];\n    void update(int p){\n        dat(p) = dat(ls(p)) + dat(rs(p)); // \u60c5\u51b51\n        ll k = a[l(rs(p))] >= a[r(ls(p))] ? lsum(rs(p)) * rsum(ls(p)) : 0; // \u60c5\u51b52\n        dat(p) += k;\n        lsum(p) = lsum(ls(p)) == len(ls(p)) && a[l(rs(p))] >= a[r(ls(p))] ? len(ls(p)) + lsum(rs(p)) : lsum(ls(p));\n        rsum(p) = rsum(rs(p)) == len(rs(p)) && a[l(rs(p))] >= a[r(ls(p))] ? len(rs(p)) + rsum(ls(p)) : rsum(rs(p));\n    }\n    void build(int p, int l, int r){\n        l(p) = l; r(p) = r;\n        if(l == r){\n            dat(p) = lsum(p) = rsum(p) = 1;\n            return;\n        }\n        int mid = (l+r) >> 1;\n        build(ls(p), l, mid);\n        build(rs(p), mid+1, r);\n        update(p);\n    }\n    seg_Node query(int p, int l, int r){ // \u67e5\u8be2\uff0c\u9700\u8981\u628a [l,r] \u5206\u6210\u7684\u6240\u6709\u8282\u70b9\u5408\u5e76\u8d77\u6765\n        if(l <= l(p) && r >= r(p)) return tree[p];\n        int x = (l(p) + r(p)) >> 1;\n        if(r <= x) return query(ls(p), l, r);\n        if(l > x) return query(rs(p), l, r);\n        seg_Node ans, ql, qr;\n        ql = query(ls(p), l, r), qr = query(rs(p), l, r);\n        ans.lsum = ql.lsum == ql.r-ql.l+1 && a[qr.l] >= a[ql.r] ? ql.r-ql.l+1 + qr.lsum : ql.lsum;\n        ans.rsum = qr.rsum == qr.r-qr.l+1 && a[qr.l] >= a[ql.r] ? qr.r-qr.l+1 + ql.rsum : qr.rsum;\n        ans.r = qr.r; ans.l = ql.l;\n        ans.dat = ql.dat + qr.dat + (a[qr.l] >= a[ql.r] ? ql.rsum * qr.lsum : 0);\n        return ans;\n    }\n    ll querys(int l, int r){\n         return query(1, l, r).dat;\n    }\n    void change(int p, int k, int y){ // \u4fee\u6539\n        if(l(p) == r(p)) {\n            a[k] = y;\n            return;\n        }\n        int mid = (l(p) + r(p)) >> 1;\n        if(k <= mid) change(ls(p), k, y);\n        else change(rs(p), k, y);\n        update(p);\n    }\n}T;\n\nint x, y, opt;\n\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    T.build(1, 1, n);\n    while(m--){\n        scanf(\"%d%d%d\", &opt, &x, &y);\n        if(opt == 1) T.change(1, x, y);\n        else printf(\"%lld\\n\", T.querys(x, y));\n    }\n    return 0;\n}\n```",
        "postTime": 1630941374,
        "uid": 366896,
        "name": "Jimmy2020",
        "ccfLevel": 0,
        "title": "CF1567E \u9898\u89e3"
    },
    {
        "content": "# CF1567E Non-Decreasing Dilemma\n\n**\u9898\u76ee\u7b80\u8ff0**\uff1a\u5728\u5355\u70b9\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\uff0c\u6c42\u51fa\u533a\u95f4\u5355\u8c03\u4e0d\u9012\u51cf\u7684\u533a\u95f4\u4e2a\u6570\u3002\n\n**\u524d\u8a00**\n\n\u770b[\u9898\u89e3\u89c6\u9891](https://www.youtube.com/watch?v=CIgm0HMJj3M)\u5b66\u5230\u4e86\u5173\u4e8e\u7ebf\u6bb5\u6811\u5206\u6bb5\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u8fd9\u5f88\u5957\u8def\u3002\n\n**\u601d\u8def**\n\n\u9996\u5148\u663e\u7136\u7684\u662f\u8fd9\u9700\u8981\u7528\u6570\u636e\u7ed3\u6784\u53bb\u7ef4\u62a4\uff0c\u5176\u6b21\u6211\u4eec\u53d1\u73b0\u7ef4\u62a4\u7684\u4e1c\u897f\u4e0d\u662f\u5355\u4e00\u7684\u67d0\u4e2a\u6700\u503c\uff0c\u6216\u8005\u533a\u95f4\u548c\uff0c\u533a\u95f4 GCD \u4e4b\u7c7b\u7684\u3002\u8981\u60f3\u77e5\u9053\u533a\u95f4\u6ee1\u8db3\u8981\u6c42\u7684\u6570\u91cf\uff0c\u6211\u4eec\u4e00\u822c\u6709\u4e24\u79cd\u60f3\u6cd5\uff1a\n\n- \u66b4\u529b\u6c42\u89e3\uff0c\u77e5\u9053\u533a\u95f4\u5404\u4e2a\u4e4b\u95f4\u7684\u60c5\u51b5\u3002\n- \u5206\u6bb5\u5904\u7406\uff0c\u9012\u5f52\u5408\u5e76\uff0c\u6ce8\u610f\u70b9\u662f\u5408\u5e76\u65f6\u4ea7\u751f\u7684\u7ec4\u5408\u8d21\u732e\u3002\n\n\u7b2c\u4e8c\u79cd\u5c31\u662f\u6b64\u9898\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff0c\u5728\u89c6\u9891\u4e3b\u4eba\u4ecb\u7ecd\u8fd9\u662f\u4e00\u79cd**\u57fa\u4e8e\u6b63\u786e\u7684\u4e24\u7aef**\uff0c\u5e76\u4e14\u57fa\u4e8e\u8be5\u8fde\u7eed\u6027\u7684\u60c5\u51b5\u4e0b\u8df5\u884c\u7d2f\u52a0\u7684\u4e00\u79cd\u5206\u6bb5\u7ebf\u6bb5\u6811\u505a\u6cd5\u3002\u611f\u89c9\u50cf\u5206\u6cbb\uff0c\u53ef\u4fee\u6539\u7684\u5206\u6cbb\u3002\n\n\u5177\u4f53\u8bdd\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u7ef4\u62a4\u4e09\u4e2a\u503c\uff1a$sum,lenl,lenr$ \u5206\u522b\u5bf9\u5e94\u533a\u95f4\u4e2a\u6570\uff0c\u4ece\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u8fde\u7eed\u4e0d\u9012\u51cf\u7684\u5e8f\u5217\uff0c\u548c\u53f3\u8fb9\u6700\u540e\u4e00\u4e2a\u8fde\u7eed\u4e0d\u9012\u51cf\u7684\u5e8f\u5217\uff0c\u76f4\u89c2\u7684\u8bb2\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/muc854fr.png)\n\n\u53ea\u8981\u4fdd\u8bc1\u4e00\u4e2a\u533a\u95f4\u7684 $lenl,lenr,sum$ \u662f\u6b63\u786e\u7684\uff0c\u8003\u8651\u5982\u4f55\u5408\u5e76\uff0c\u5408\u5e76\u65f6\u4f1a\u53d1\u751f\u5de6\u533a\u95f4 $lenr$ \u548c\u53f3\u533a\u95f4\u7684 $lenl$ \u662f\u5426\u53ef\u4ee5\u5408\u5e76\uff0c\u5224\u65ad\u6761\u4ef6\u662f\u4fe9\u533a\u95f4\u7684\u7aef\u70b9\u662f\u5426\u6ee1\u8db3\u5355\u8c03\u4e0d\u51cf\u3002\u5408\u5e76\u65f6\u8fd8\u6709\u66f4\u65b0\u5927\u533a\u95f4\u7684 $len1,lenr$ \u57fa\u672c\u90fd\u662f\u770b\u5404\u81ea\u533a\u95f4\u7684\u53e6\u4e00\u90e8\u5206\u662f\u5426\u53ef\u4ee5\u62fc\u5230\u5bf9\u65b9\u7684\u5c3e\u90e8\u6216\u8005\u5934\u90e8\u3002\u7136\u540e\u5c31\u6109\u5feb\u7684AC\u4e86\u3002\n\n```c\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define int long long\n#define root 1,n,1\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\nusing namespace std;\nconst int B=2e5+10;\nint n,v[B];\nint read() {int x;scanf(\"%lld\",&x);return x;}\nint ark; \nint ans;\nnamespace Seg\n{\n\tstruct node\n\t{\n\t\tint l,r;\n\t\tint sum,lenl,lenr;\n\t\tnode() {l=r=sum=lenl=lenr=0;}\n\t\tvoid init(int l_,int r_) {l=l_,r=r_,sum=1,lenl=lenr=1;}\n\t}z[B<<2];\n\tnode operator + (const node &l, const node &r)\n\t{\n\t\tnode p;\n\t\tp.l=l.l, p.r=r.r, p.sum=l.sum+r.sum;\n\t\tp.lenl=l.lenl, p.lenr=r.lenr;\n\t\tif (l.lenl==(l.r-l.l+1) && v[l.r]<=v[r.l]) p.lenl+=r.lenl;\n\t\tif (r.lenr==(r.r-r.l+1) && v[l.r]<=v[r.l]) p.lenr+=l.lenr;\n\t\tif (v[l.r]<=v[r.l]) p.sum+=l.lenr*r.lenl;\n \t\treturn p;\t\n\t}\n\tvoid update(int rt) {z[rt]=z[rt<<1]+z[rt<<1|1];}\n\tvoid build(int l,int r,int rt)\n\t{\n\t\tif (l==r) {z[rt].init(l,r); return;}\n\t\tint m=l+r>>1;\n\t\tbuild(lson); build(rson);\n\t\tupdate(rt); \n\t}\n\tvoid modify(int l,int r,int rt,int x,int w)\n\t{\n\t\tif (l==r) \n\t\t{\n\t\t\tv[x]=w;\n\t\t\treturn;\n\t\t}\n\t\tint m=l+r>>1;\n\t\tif (x<=m) modify(lson,x,w);\n\t\telse modify(rson,x,w);\n\t\tupdate(rt);\n\t}\n\tnode query(int l,int r,int rt,int nowl,int nowr)\n\t{\n \t\tif (nowl<=l && r<=nowr)\treturn z[rt];\n\t\tint m=l+r>>1;\n\t\tif (nowl<=m)\n\t\t{\n\t\t\tif (m<nowr) \n\t\t\t{\n\t\t\t\tnode s1=query(lson,nowl,nowr);\n\t\t\t\tnode s2=query(rson,nowl,nowr);\n\t\t\t\treturn s1+s2;\n\t\t\t}\n\t\t\treturn query(lson,nowl,nowr); \n\t\t}\n\t\treturn query(rson,nowl,nowr);\n\t}\n}\nint q;\nsigned main()\n{\n\tn=read(),q=read();\n\tfor (int i=1;i<=n;i++) v[i]=read();\n\tSeg::build(root);\n\tfor (int i=1;i<=q;i++)\n\t{\n\t\tint opt=read(),l=read(),r=read();\n\t\tif (opt==2)\n\t\t{\n\t\t\tSeg::node ans2=Seg::query(root,l,r);\n\t\t\tprintf(\"%lld\\n\",ans2.sum);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tSeg::modify(root,l,r);\n\t\t} \n\t}\t\n}\n/*\n5 6\n3 1 4 1 5\n2 2 5\n2 1 3\n1 4 4\n2 2 5\n1 2 6\n2 2 5\n*/\n```\n\n \n\n",
        "postTime": 1630898734,
        "uid": 230808,
        "name": "Zxsoul",
        "ccfLevel": 4,
        "title": "CF1567E Non-Decreasing Dilemma"
    },
    {
        "content": "\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u6c42\u5355\u8c03\u4e0d\u51cf\u5b50\u6bb5\u4e2a\u6570\u3002\n\n---\n\n\u7b80\u5355\u7ebf\u6bb5\u6811\u9898\u3002\n\n\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u8be5\u6bb5\u5355\u8c03\u4e0d\u51cf\u5b50\u6bb5\u4e2a\u6570\u7b49\u4e8e\u5de6\u8fb9 $[l,mid]$ \u4e00\u6bb5\u7684\u5355\u8c03\u4e0d\u51cf\u5b50\u6bb5\u4e2a\u6570\u52a0\u4e0a\u53f3\u8fb9 $[mid+1,r]$ \u4e00\u6bb5\u7684\u5355\u8c03\u4e0d\u51cf\u5b50\u6bb5\u4e2a\u6570\uff0c\u518d\u52a0\u4e0a\u8de8\u8fc7 $mid$ \u7684\u5355\u8c03\u4e0d\u51cf\u5b50\u6bb5\u4e2a\u6570\u3002  \n\u56e0\u6b64\u8003\u8651\u4f7f\u7528\u7c7b\u4f3c\u4e8e P6492 \u7684\u601d\u8def\uff0c\u5bf9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u4e0b\u9762\u7684\u4fe1\u606f\uff1a\n\n- \u533a\u95f4\u5de6\u53f3\u7aef\u70b9 $l,r$\u3002\n- \u533a\u95f4\u5355\u8c03\u4e0d\u51cf\u5b50\u6bb5\u4e2a\u6570 $v$\u3002\n- \u5305\u542b\u533a\u95f4\u5de6\u7aef\u70b9\u548c\u5305\u542b\u533a\u95f4\u53f3\u7aef\u70b9\u7684\u6700\u957f\u5355\u8c03\u4e0d\u51cf\u5b50\u6bb5\u957f\u5ea6 $lv,rv$\u3002\n- \u533a\u95f4\u5de6\u7aef\u70b9\u3001\u53f3\u7aef\u70b9\u7684\u503c $ld,rd$\u3002\n\n\u4fee\u6539\u5c31\u76f4\u63a5\u66b4\u529b\u4fee\u6539\uff0c\u67e5\u8be2\u9700\u8981\u628a\u67e5\u8be2\u533a\u95f4\u5185\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u90fd `pushup` \u6210\u4e00\u4e2a\u3002  \n\u5269\u4e0b\u7684\u5c31\u6bd4\u8f83\u663e\u7136\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log_2n)$\u3002  \n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//And in that light,I find deliverance.\n#define int long long\nconst int N=200020;\nstruct Tree{\n\tint l,r;\n\tint v,lv,rv,ld,rd;\t\n}t[N<<2];\nint n,m,d[N];\nTree pushup(Tree a,Tree b){\n\tTree c;\n\tc.l=a.l;c.r=b.r;\n\tc.v=a.v+b.v;\n\tif(a.rd<=b.ld) c.v+=a.rv*b.lv;\n\tif(a.lv==a.r-a.l+1 and a.rd<=b.ld) c.lv=a.lv+b.lv;\n\telse c.lv=a.lv;\n\tif(b.rv==b.r-b.l+1 and a.rd<=b.ld) c.rv=b.rv+a.rv;\n\telse c.rv=b.rv;\n\tc.ld=a.ld,c.rd=b.rd;\n\treturn c;\n}\nvoid build(int pos,int l,int r){\n\tif(l==r){\n\t\tt[pos].l=l,t[pos].r=r;\n\t\tt[pos].v=1;\n\t\tt[pos].lv=t[pos].rv=1;\n\t\tt[pos].ld=t[pos].rd=d[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,ls=pos<<1,rs=pos<<1|1;\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\tt[pos]=pushup(t[ls],t[rs]);\n}\nvoid upd(int pos,int tag,int x){\n\tif(t[pos].l==tag and t[pos].r==tag){\n\t\tt[pos].ld=t[pos].rd=x;\n\t\treturn;\n\t}\n\tint mid=(t[pos].l+t[pos].r)>>1,ls=pos<<1,rs=pos<<1|1;\n\tif(tag<=mid) upd(ls,tag,x);\n\telse upd(rs,tag,x);\n\tt[pos]=pushup(t[ls],t[rs]);\n}\nTree query(int pos,int l,int r){\n\tif(t[pos].l>=l and t[pos].r<=r) return t[pos];\n\tint mid=(t[pos].l+t[pos].r)>>1,ls=pos<<1,rs=pos<<1|1;\n\tif(l<=mid and r>mid) return pushup(query(ls,l,r),query(rs,l,r));\n\telse if(r<=mid) return query(ls,l,r);\n\telse return query(rs,l,r);\n}\nint s1,s2,op;\nsigned main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) cin>>d[i];\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>op>>s1>>s2;\t\t\n\t\tif(op==1) upd(1,s1,s2);\n\t\tif(op==2) cout<<query(1,s1,s2).v<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1631018241,
        "uid": 199139,
        "name": "devans",
        "ccfLevel": 0,
        "title": "CF1567E \u9898\u89e3"
    }
]