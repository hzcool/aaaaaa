[
    {
        "content": "\n### Description\n\n**\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898**\u3002\n\n\u6709\u4e00\u4e2a $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u4f60\u9700\u8981\u901a\u8fc7\u4e0d\u8d85\u8fc7 $11111$ \u6b21\u8be2\u95ee\u5f97\u77e5\u6811\u7684\u5f62\u6001\u3002\n\n\u8be2\u95ee\u65b9\u5f0f\u4e3a\u7ed9\u51fa\u4e24\u4e2a\u975e\u7a7a **\u65e0\u4ea4** \u70b9\u96c6 $S$ \uff0c$T$ \u548c\u4e00\u4e2a\u70b9 $u$\uff0c\u53ef\u4ee5\u5f97\u5230\u6ee1\u8db3 $s \\in S , t \\in T$ \u4e14\u8def\u5f84 $(s,t)$ \u7ecf\u8fc7 $u$ \u70b9\u7684\u4e8c\u5143\u7ec4 $(s,t)$ \u7684\u603b\u6570\u3002\n\n$n\\leq500$\u3002\n\n### Solution\n\n\u6ca1\u4ec0\u4e48\u5934\u7eea\uff0c\u770b\u770b\u6211\u4eec\u80fd\u901a\u8fc7\u8be2\u95ee\u5f97\u5230\u4ec0\u4e48\u3002\n\n\u5047\u8bbe\u6211\u4eec\u4ee5 $1$ \u4e3a\u6839\uff0c\u6bcf\u6b21\u8be2\u95ee $(\\{1\\},\\{2,3,...,n\\},i)$ \u80fd\u5f97\u5230\u4ee5 $i$ \u4e3a\u6839\u5b50\u6811\u5927\u5c0f\u3002\n\n\u90a3\u4e48\u628a\u5b50\u6811\u5927\u5c0f\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e00\u4e2a\u70b9\u513f\u5b50\u5fc5\u5b9a\u5728\u5176\u5de6\u4fa7\uff0c\u73b0\u5728\u6211\u4eec\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u627e\u513f\u5b50\u4e86\u3002\n\n\u8bbe\u73b0\u5728\u8fd8\u6ca1\u6709\u786e\u5b9a\u7236\u4eb2\u7684\u70b9\u96c6\u5408\u4e3a $S$\u3002\n\n\u95ee\u4e00\u6b21 $(\\{1\\},S,i)$ \u80fd\u5f97\u5230\u70b9 $i$ \u7684\u513f\u5b50\u4e2a\u6570 $k$\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u4e8c\u5206 $k$ \u6b21\uff0c\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684 $p$\uff0c\u4f7f\u8be2\u95ee $(\\{1\\},\\{S_1,S_2,...,S_p\\},i)$ \u7684\u7ed3\u679c\u975e\u96f6\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a $p$ \u5c31\u662f\u4e00\u4e2a\u513f\u5b50\u3002\u6211\u4eec\u628a\u5b83\u5220\u6389\u63a5\u7740\u4e8c\u5206\u5c31\u627e\u5230\u4e86\u6240\u6709\u513f\u5b50\u3002\n\n\u627e\u5230\u4e4b\u540e\u628a\u70b9 $i$ \u52a0\u8fdb\u96c6\u5408\u91cc\u5c31\u884c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2\\log n)$\uff0c\u8be2\u95ee\u6b21\u6570\u5927\u6982\u662f $2n+2n\\log_2n$\u3002\n\n### Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cctype>\n#include <vector>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::cerr;\n\nconst int maxn = 510;\n\nstruct node\n{\n    int id, siz;\n    bool operator<(const node &b) const { return siz < b.siz; }\n} a[maxn];\n\nint father[maxn], n;\n\nvoid get_siz()\n{\n    a[1].id = 1, a[1].siz = n;\n    for (int i = 2; i <= n; i++)\n    {\n        cout << 1 << endl << 1 << endl << n - 1 << endl;\n        for (int i = 2; i <= n; i++)\n            cout << i << \" \";\n        cout << endl << i << endl;\n        cin >> a[i].siz;\n        a[i].id = i;\n    }\n    std::sort(a + 1, a + 1 + n);\n}\n\nint S[maxn], top;\n\nbool check(int x, int pos)\n{\n    cout << 1 << endl << 1 << endl << x << endl;\n    for (int i = 1; i <= x; i++)\n        cout << a[S[i]].id << \" \";\n    cout << endl << pos << endl;\n    int res = 0;\n    cin >> res;\n    return res > 0;\n}\n\nvoid solve()\n{\n    //for (int i = 1; i <= n; i++)\n    //    cout << a[i].id << \" \" << a[i].siz << endl;\n    for (int i = 1; i <= n; i++)\n    {\n        if (a[i].siz == 1)\n            S[++top] = i;\n        else\n        {\n            //cout << a[i].id << \" \" << a[i].siz << \"!!!\\n\";\n            int times;\n            cout << 1 << endl << 1 << endl << top << endl;\n            for (int i = 1; i <= top; i++)\n                cout << a[S[i]].id << \" \";\n            cout << endl << a[i].id << endl;\n            cin >> times;\n            while (times--)\n            {\n                int l = 1, r = top, ans = -1;\n                while (l <= r)\n                {\n                    int mid = (l + r) / 2;\n                    if (check(mid, a[i].id))\n                        r = mid - 1, ans = mid;\n                    else\n                        l = mid + 1;\n                }\n                father[a[S[ans]].id] = a[i].id;\n                int flag = 0;\n                for (int i = 1; i < top; i++)\n                {\n                    if (i == ans)\n                        flag = 1;\n                    if (flag)\n                        S[i] = S[i + 1];\n                }\n                top--;\n            }\n            S[++top] = i;\n        }\n    }\n}\n\nint main()\n{\n    std::ios::sync_with_stdio(false);\n    cin >> n;\n    get_siz(), solve();\n    cout << \"ANSWER\" << endl;\n    for (int i = 2; i <= n; i++)\n        cout << father[i] << \" \" << i << endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1640075423,
        "uid": 373429,
        "name": "_slb",
        "ccfLevel": 0,
        "title": "CF1129E"
    },
    {
        "content": "# Description\n\n\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002\n\n\u7ed9\u5b9a\u4e00\u68f5$n$\u4e2a\u8282\u70b9\u7684\u6570\u3002\u6bcf\u6b21\u8be2\u95ee\u53ef\u4ee5\u6c42\u51fa\u70b9\u96c6$S$\u5230\u70b9\u96c6$T$\u7684\u8def\u5f84\u7ecf\u8fc7\u70b9$u$\u7684\u6b21\u6570\uff08\u70b9\u96c6$S,T$\u4e0d\u80fd\u6709\u4ea4\uff09\u3002\n\n\u6c42\u6811\u7684\u5f62\u6001\u3002\n\n# Solution\n\n\u4e0d\u59a8\u5047\u8bbe$1$\u4e3a\u6839\u3002\n\n\u9996\u5148\u53ef\u4ee5\u8be2\u95ee$2-n$\u4e0e$1$\u4e4b\u95f4\u7684\u8def\u5f84\u7ecf\u8fc7\u70b9$i$\u7684\u6b21\u6570\u6765\u786e\u5b9a\u70b9$i$\u7684$siz$\u3002\n\n\u7136\u540e\u6309$siz$\u6392\u5e8f\uff0c\u8fd9\u6837\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684\u513f\u5b50\u90fd\u5728\u5b83\u540e\u9762\u3002\n\n\u4ece\u540e\u5f80\u524d\u786e\u5b9a\u5f53\u524d\u70b9\u7684\u513f\u5b50\u3002\u7528\u4e00\u4e2a`std::set`\u7ef4\u62a4\u5f53\u524d\u8fd8\u6ca1\u6709\u627e\u5230\u7236\u4eb2\u7684\u8282\u70b9\uff0c\u9996\u5148\u8be2\u95ee\u662f\u5426\u5b58\u5728\u5f53\u524d\u70b9\u7684\u513f\u5b50\uff0c\u7136\u540e\u4e8c\u5206\u67e5\u627e\u6bcf\u4e2a\u70b9\u7684\u7b2c\u4e00\u4e2a\u513f\u5b50\u3002\u8fd9\u6837\u53cd\u590d\u505a\u4e0b\u53bb\u76f4\u5230\u4e0d\u5b58\u5728\u5f53\u524d\u70b9\u7684\u513f\u5b50\uff08$check$\u4e3a\u5f53\u524d\u4e8c\u5206\u533a\u95f4\u7684\u70b9\u4e0e$1$\u4e4b\u95f4\u7684\u8def\u5f84\u662f\u5426\u7ecf\u8fc7\u5f53\u524d\u70b9\uff09\u3002\u7136\u540e\u628a\u5f53\u524d\u70b9\u4e22\u8fdb`std:set`\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 505;\n\nint n, siz[maxn], p[maxn];\nset<int> S;\nvector<pair<int, int>> ans;\n\ninline int gi()\n{\n    char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    int sum = 0;\n    while ('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n    return sum;\n}\n\ninline bool cmp(const int &a, const int &b)\n{\n    return siz[a] > siz[b];\n}\n\ninline int check(int u, int l, int r)\n{\n    auto it = S.begin();\n    int v;\n    printf(\"%d\\n\", r - l + 1);\n    for (int i = 1; i < l; ++i) ++it;\n    for (int i = l; i <= r; ++i) printf(\"%d \", v = *it), ++it;\n    printf(\"\\n1\\n%d\\n%d\\n\", 1, u);\n    fflush(stdout);\n    return gi();\n}\n\nint main()\n{\n    //freopen(\"tree.in\", \"r\", stdin);\n    //freopen(\"tree.out\", \"w\", stdout);\n\n    n = gi();\n\n    siz[1] = n;\n    for (int i = 2; i <= n; ++i) {\n        printf(\"%d\\n\", n - 1);\n        for (int i = 2; i <= n; ++i) printf(\"%d \", i);\n        printf(\"\\n1\\n1\\n%d\\n\", i);\n        fflush(stdout);\n        siz[i] = gi();\n    }\n\n    for (int i = 1; i <= n; ++i) p[i] = i;\n    sort(p + 1, p + n + 1, cmp);\n\n    for (int i = n; i >= 1; --i) {\n        if (!S.empty()) {\n            int beg = 1, l, r, mid;\n            while (!S.empty() && check(p[i], beg, S.size())) {\n                l = beg; r = S.size();\n                while (l <= r) {\n                    mid = (l + r) >> 1;\n                    if (check(p[i], l, mid)) r = mid - 1;\n                    else l = mid + 1;\n                }\n                auto it = S.begin();\n                for (int j = 1; j < l; ++j) ++it;\n                ans.push_back(make_pair(p[i], *it));\n                S.erase(*it);\n            }\n        }\n        S.insert(p[i]);\n    }\n\n    puts(\"ANSWER\");\n    for (auto i : ans) printf(\"%d %d\\n\", i.first, i.second);\n    fflush(stdout);\n    \n    return 0;\n}\n```",
        "postTime": 1552308068,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1129E \u3010Legendary Tree\u3011"
    },
    {
        "content": "\u795e\u4ed9\u9898\u3002\n\n\u94a6\u5b9a $1$ \u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7 $n-1$ \u6b21\u8be2\u95ee\u5f97\u5230\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u7684 $size$ \u3002\n\n\u5177\u4f53\u65b9\u6cd5\u662f\uff0c\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u70b9\u8be2\u95ee $(\\{1\\},\\big\\{U-\\{1\\}-\\{i\\}\\big\\},i)$ \uff0c\u8fd4\u56de\u7684\u503c\u5c31\u662f $size[i]$ \u3002\n\n\u628a $[2,n]$ \u6309 $size$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u5b50 $i$ \u7684\u513f\u5b50\u4e00\u5b9a\u5728 $i$ \u5de6\u8fb9\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u7684\u6ca1\u6709\u786e\u5b9a\u7236\u4eb2\u7684\u70b9\u5b58\u5728\u4e00\u4e2a $\\mathrm{set}$ \u91cc\u9762\u3002\n\n\u4ece\u5de6\u5f80\u53f3\u5904\u7406\u8fd9\u4e2a\u5e8f\u5217\u3002\u9996\u5148\u5982\u679c\u5f53\u524d\u70b9\u6709\u513f\u5b50\uff0c\u5c31\u627e\uff1b\u7136\u540e\u628a\u5b83\u52a0\u5230 $\\mathrm{set}$ \u91cc\u9762\u3002\n\n\u627e\u513f\u5b50\u7684\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\u9996\u5148\u628a\u5f53\u524d\u7684 $\\mathrm{set}$ \u5206\u6210\u4e24\u534a\uff0c\u5982\u679c\u5de6\u8fb9\u6709\u5b50\u8282\u70b9\u5c31\u5f80\u5de6\u8fb9\u8d70\uff0c\u53f3\u8fb9\u4e00\u6837\u5904\u7406\u3002\n\n\u8fd9\u6837\u5b50\u53ef\u4ee5\u627e\u5230\u513f\u5b50\u3002\u628a\u513f\u5b50\u7684\u7236\u4eb2\u8bb0\u4e0b\u6765\uff0c\u7136\u540e\u4ece $\\mathrm{set}$ \u4e2d\u5220\u53bb\u5373\u53ef\u3002\n\n\u8be2\u95ee\u6b21\u6570\u6700\u591a\u7684\u70b9\u5728 $6000$ \u6b21\u5de6\u53f3\u3002\n\n\u5efa\u8bae\u753b\u56fe\u7406\u89e3\u3002\u5177\u4f53\u5b9e\u73b0\u53ca\u7ec6\u8282\u89c1[\u4ee3\u7801](http://m-sea-blog.com/archives/2608/)\u3002",
        "postTime": 1556151483,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1129E \u3010Legendary Tree\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5206\u6790\n\n\u94a6\u5b9a1\u4e3a\u6839\uff0c\u5bf9\u4e8e\u975e1\u7684\u8282\u70b9$x$\uff0c\u90fd\u6d88\u8017\u4e00\u6b21\u8be2\u95ee\uff0c\u6765\u95ee({1},{\u9664\u4e86$x$\u548c1\u4ee5\u5916\u7684\u6240\u6709\u70b9},$x$)\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u3002\u5c06\u6240\u6709\u8282\u70b9\u6309\u7167\u5b50\u6811\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u663e\u7136\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u4e00\u5b9a\u5728\u5b83\u7684\u5de6\u8fb9\u3002\n\n\u4ece\u5de6\u5230\u53f3\u8003\u8651\u6bcf\u4e2a\u8282\u70b9$x$\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u88c5\u7740\u6240\u6709\u6ca1\u6709\u627e\u5230\u7236\u4eb2\u7684\u70b9\uff0c\u5c06\u8fd9\u4e2a\u6570\u7ec4\u5206\u6210\u4e24\u534a\uff0c\u5206\u522b\u8be2\u95ee\u8fd9\u4e24\u6bb5({1},{\u8fd9\u4e00\u6bb5\u4e2d\u7684\u6240\u6709\u70b9},$x$)\uff0c\u6765\u770b\u8fd9\u4e00\u6bb5\u4e2d\u6709\u6ca1\u6709$x$\u7684\u513f\u5b50\uff0c\u82e5\u6709\u5219\u7ee7\u7eed\u9012\u5f52\u8fd9\u4e00\u6bb5\uff0c\u5426\u5219\u4e0d\u9012\u5f52\u8fd9\u4e00\u6bb5\u3002\u6700\u540e\u5c06\u6240\u6709\u627e\u5230\u4e86\u7236\u4eb2\u7684\u8282\u70b9\u4ece\u6570\u7ec4\u4e2d\u5220\u9664\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5728\u8003\u8651\u5176\u7236\u4eb2\u7684\u65f6\u5019\u90fd\u4f1a\u82b1\u8d39$\\log$\u6b21\u8be2\u95ee\u627e\u5230\u5b83\uff0c\u6700\u574f\u60c5\u51b5\u5e94\u8be5\u662f\u82b1$6000$\u6b21\u8be2\u95ee\u5de6\u53f3\u2026\u2026\u5427\uff1f\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\nconst int N=505;\nint n,top,ktop,fa[N];\nstruct node{int id,sz;}b[N],st[N],kst[N];\nbool cmp(node A,node B) {return A.sz<B.sz;}\n\nvoid work1() {\n    b[1].id=1,b[1].sz=n-1;\n    for(RI i=2;i<=n;++i) {\n        puts(\"1\"),puts(\"1\");\n        printf(\"%d\\n\",n-2);for(RI j=2;j<=n;++j) if(j!=i) printf(\"%d \",j);puts(\"\");\n        printf(\"%d\\n\",i);fflush(stdout);\n        b[i].id=i,scanf(\"%d\",&b[i].sz);\n    }\n    sort(b+1,b+1+n,cmp);\n}\nvoid QAQ(int s,int t,int o,int rt) {\n\tif(o) {\n\t\tputs(\"1\"),puts(\"1\");\n\t\tprintf(\"%d\\n\",t-s+1);\n\t\tfor(RI i=s;i<=t;++i) printf(\"%d \",st[i].id);puts(\"\");\n\t\tprintf(\"%d\\n\",rt);fflush(stdout);\n\t\tint x;scanf(\"%d\",&x);if(!x) o=0;\n\t}\n\tif(s==t) {\n\t\tif(o) fa[st[s].id]=rt;\n\t\telse kst[++ktop]=st[s];\n\t\treturn;\n\t}\n\tint mid=(s+t)>>1;QAQ(s,mid,o,rt),QAQ(mid+1,t,o,rt);\n}\nvoid work2() {\n    for(RI i=1;i<=n;++i) {\n      \tif(b[i].sz) {\n      \t\tktop=0,QAQ(1,top,1,b[i].id),kst[++ktop]=b[i];\n        \ttop=ktop;for(RI j=1;j<=ktop;++j) st[j]=kst[j];\n        }\n        else st[++top]=b[i];\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    if(n==2) {puts(\"ANSWER\"),puts(\"1 2\");return 0;}\n    work1(),work2();\n    puts(\"ANSWER\");\n    for(RI i=2;i<=n;++i) printf(\"%d %d\\n\",fa[i],i);\n    return 0;\n}\n```",
        "postTime": 1552287368,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1129E \u3010Legendary Tree\u3011"
    }
]