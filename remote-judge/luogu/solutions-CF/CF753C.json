[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n> \u672c\u9898\u4e3a\u4ea4\u4e92\u9898\uff0c\u521d\u59cb\u65f6\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a4\u65e0\u91cd\u590d\u6570\u5b57\u51fa\u73b0\u7684\u6570\u5b57\u4e32\uff0c\u4f60\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u957f\u5ea6\u4e3a4\u7684\u6570\u5b57\u4e32\uff08\u53ef\u51fa\u73b0\u91cd\u590d\u6570\u5b57\uff09\uff0c\u5c06\u8fd4\u56de\u76f8\u540c\u4f4d\u7f6e\u4e0a2\u4e32\u6570\u5b57\u76f8\u540c\u7684\u6570\u91cf\uff0c\u4ee5\u53ca2\u4e32\u5171\u540c\u51fa\u73b0\u4f46\u51fa\u73b0\u4f4d\u7f6e\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\n\n## \u5206\u6790\n> \u672c\u9898\u548c\u90a3\u4e9b\u6784\u9020\u7684\u4ea4\u4e92\u9898\u6709\u70b9\u533a\u522b\uff0c\u4f1a\u53d1\u73b0\u96be\u4ee5\u627e\u5230\u5408\u7406\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4f46\u53d1\u73b0\u60c5\u51b5\u6570\u53ea\u6709$9*8*7*6=5040$\u79cd,\u6545\u8003\u8651\u641c\u7d22/\u679a\u4e3e/\u8d2a\u5fc3\n\n## \u505a\u6cd5\n> \u611f\u6027\u5206\u6790\uff0c\u8d2a\u5fc3\u5730\u6bcf\u6b21\u9009\u62e9\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u8be2\u95ee\u540e\u53ef\u884c\u60c5\u51b5\u6700\u5c11\u7684\u8fdb\u884c\u8be2\u95ee\uff0c\u53ef\u5c06\u671f\u671b\u8be2\u95ee\u6b21\u6570\u964d\u5230\u6700\u4f4e\uff0c\u5177\u4f53\u5185\u5bb9\u89c1\u4ee3\u7801\n\n\u732e\u4e0a\u6211~~\u4e11\u964b~~\u7801\u98ce\u6781\u4f73\u7684\u4ee3\u7801\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n# define read read1<int>()\n# define Type template<typename T>\nType inline const T read1()\n{\n    T m=0;\n    char k=getchar();\n    while(('0'>k||k>'9')&&(k!='-'))k=getchar();\n    const bool f=(k=='-'?1:0);\n    if(f)k=getchar();\n    while('0'<=k&&k<='9')m=(m<<3)+(m<<1)+(k^48),k=getchar();\n    return f?-m:m;\n}\nstruct X{\n    int x,v;\n    int Get(int n){return (int)(x/pow(10,n-1))%10;} \n    bool operator <(X b){return v!=b.v?v<b.v:x<b.x;}\n    int Same(X v){//\u540c\u4f4d\u540c\u503c\u7684\n        int t=0;\n        for(int i=1;i<=4;++i)\n            t+=Get(i)==v.Get(i);\n        return t;\n    }\n    int Have(X v){//\u5f02\u4f4d\u540c\u503c\u7684\n        int have[10]={},t=0;\n        for(int i=1;i<=4;++i)\n            ++have[Get(i)];\n        for(int i=1;i<=4;++i)\n            t+=have[v.Get(i)];\n        return t-Same(v);\n    }\n}a[5045];\nint cnt=-1;bool vis[10];\nvoid dfs(int n,int v){//\u521d\u59cb\u60c5\u51b5\n    if(!n)a[++cnt].x=v;\n    else for(int i=0;i<10;++i)\n        if(!vis[i]){\n            vis[i]=1;\n            dfs(n-1,v*10+i);\n            vis[i]=0;\n        }\n}\nint fu;\nbool change(){\n    if(fu){//\u6309\u8be2\u95ee\u540e\u6700\u574f\u60c5\u51b5\u4e0b\u5269\u4f59\u53ef\u884c\u89e3\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n        for(int i=0;i<=cnt;++i)\n            a[i].v=0;\n        for(int i=0;i<=cnt;++i){//\u83b7\u53d6\u8be2\u95ee\u540e\u6700\u574f\u60c5\u51b5\u4e0b\u5269\u4f59\u53ef\u884c\u89e3\n            int tm[5][5]={};\n            for(int j=0;j<=cnt;++j)\n                ++tm[a[i].Same(a[j])][a[i].Have(a[j])];\n            for(int j=0;j<5;++j)\n                for(int k=0;j+k<5;++k)\n                    a[i].v=max(a[i].v,tm[j][k]);\n        }\n        sort(a,a+cnt+1);\n    }\n    ++fu;\n    printf(\"%04d\\n\",a[0].x);\n    fflush(stdout);\n    int n=read,f=read;\n    X tem=a[0];\n    if(n==4)return 0;\n    for(int i=0;i<=cnt;++i)//\u5220\u53bb\u4e0d\u53ef\u884c\u7684\u89e3\n        if(tem.Same(a[i])!=n||tem.Have(a[i])!=f){\n            if(i!=cnt)swap(a[i],a[cnt]);\n            --cnt;--i;\n        }\n    return 1;\n}\nint main(){\n    dfs(4,0);\n    while(change());\n\treturn 0;\n}\n```",
        "postTime": 1595215519,
        "uid": 108067,
        "name": "\u4e1b\u96e8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF753C \u3010Interactive Bulls and Cows (Hard)\u3011"
    }
]