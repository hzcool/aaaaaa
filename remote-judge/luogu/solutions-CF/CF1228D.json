[
    {
        "content": "**\u300cCF1228D Complete Tripartite\u300d\u9898\u89e3**\n\n\u6211\u89c9\u5f97\u6211\u7684\u505a\u6cd5\u7b80\u76f4\u5c31\u662f\u4e00\u80a1\u6e05\u6d41~\n\n\u9898\u610f\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5927\u6982\u5c31\u662f\u5c06\u6574\u4e2a\u70b9\u5206\u4e3a\u4e09\u4e2a\u70b9\u96c6\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u70b9\u96c6\uff0c\u4e14\u4efb\u610f\u4e24\u4e2a\u70b9\u96c6\u4e2d\u7684\u70b9\uff0c\u70b9\u96c6\u95f4\u7684\u70b9\u76f8\u4e92\u8fde\u901a\n\n\u6c42\u662f\u5426\u5b58\u5728\u8fd9\u6837\u7684\u65b9\u6848\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u80fd\u591f\u88ab\u5206\u5230\u540c\u4e00\u4e2a\u70b9\u96c6\uff0c\u90a3\u4e48\u5b83\u4eec\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u7684\u96c6\u5408\u4e00\u5b9a\u662f\u4e00\u6a21\u4e00\u6837\u7684\n\n\u6211\u4eec\u5c06\u53ef\u5230\u8fbe\u70b9\u96c6\u96c6\u5408\u76f8\u540c\u7684\u70b9\u5206\u4e3a\u540c\u4e00\u7ec4\n\n\u56e0\u4e3a\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u4e00\u5b9a\u6ca1\u6709\u76f4\u63a5\u8fde\u63a5\uff08\u5426\u5219\u96c6\u5408\u5e94\u8be5\u5305\u542b\u5bf9\u65b9\uff09,\u81ea\u7136\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\n\n\u90a3\u4e48\u8fd9\u4e2a\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5224\u65ad\u5462\uff1f\n\n\u5176\u5b9e\u5229\u7528\u4e00\u4e2a $ \\texttt{basic string}$ \u5c31\u53ef\u4ee5\u4e86\n\n\u52a0\u8fb9\u5c31\u50cf $\\texttt{vector}$ \u90a3\u6837\u52a0\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u70b9\u7684\u70b9\u96c6\u6392\u4e00\u4e2a\u5e8f\uff0c\u518d\u628a\u6574\u4f53\u6392\u4e00\u4e2a\u5e8f\uff0c\u6700\u540e\u770b\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u70b9\u96c6\u96c6\u5408\u5c31\u597d\u4e86\n\n\u4ee3\u7801\u8d85\u77ed\uff0c\u8d85\u597d\u7406\u89e3\uff01\n\n\u800c\u4e14\u8fd8\u53ef\u4ee5\u8f7b\u677e\u6269\u5c55\u81f3 $k$ \u5206\u56fe\uff01\n\nUpd\uff1a\u5728\u5927\u591a\u6570**\u4e0d\u8fde\u901a\u56fe**\u4e2d\uff0c\u8be5\u7b97\u6cd5\u90fd\u662f\u6b63\u786e\u7684\u3002\u4f46\u662f\u5728\u5b58\u5728\u5b64\u7acb\u70b9\u7684\u56fe\u4e2d\uff0c\u8be5\u7b97\u6cd5\u4f1a\u6709\u4e00\u5b9a\u95ee\u9898\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u4e86\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=3e5+5;\nint fa[maxn];\nstruct cc{\n    int id;\n    basic_string<int> d;\n    friend bool operator<(cc x,cc y){\n        return x.d<y.d;\n    }\n}s[maxn];\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0); \n    int n,m;\n    cin>>n>>m;\n    for(int i=1;i<=n;++i){\n        s[i].id=i;\n    }\n    for(int i=1;i<=m;++i){\n        int x,y;\n        cin>>x>>y;\n        s[x].d+=y;\n        s[y].d+=x;//\u52a0\u8fb9\n    }\n    for(int i=1;i<=n;++i){\n        sort(s[i].d.begin(),s[i].d.end());//\u5185\u90e8\u6392\u5e8f\n    }\n    sort(s+1,s+n+1);//\u603b\u4f53\u6392\u5e8f\n    if(!s[1].d.length()) cout<<-1<<endl,exit(0);//\u7279\u5224 \n    int cnt=1;\n    fa[s[1].id]=1;\n    for(int i=2;i<=n;++i){\n        if(s[i].d==s[i-1].d) fa[s[i].id]=fa[s[i-1].id];\n        else fa[s[i].id]=++cnt;\n    }//\u5224\u65ad\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\n    if(cnt!=3) cout<<-1<<endl;//\u4e0d\u662f\u4e09\u4e2a\u5c31\u4e0d\u5b58\u5728\n    else{\n        for(int i=1;i<=n;++i){\n            cout<<fa[i]<<' ';\n        }\n    }\n} \n```",
        "postTime": 1569943359,
        "uid": 43957,
        "name": "HenryHuang",
        "ccfLevel": 9,
        "title": "CF1228D \u300cComplete Tripartite\u300d"
    },
    {
        "content": "## \u5e7f\u544a\n\u60f3\u8981\u66f4\u4f73\u7684\u98df\u7528\u4f53\u9a8c\uff0c\u8bf7\u524d\u5f80[\u849f\u84bb\u306eBlog](https://stevenmhy.tk/archives/9b983113.html)\n\n## $Pro4$\n\n[\u4f20\u9001\u95e8](https://codeforces.com/contest/1228/problem/C)\n\n\u79f0\u4e24\u4e2a\u70b9\u96c6$v_1,v_2$\u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53$v_1,v_2$\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9\uff0c\u800c\u4e14\u4efb\u610f$x \\in v_1,y \\in v_2$\uff0c$x,y$\u90fd\u6709\u8fb9\u76f8\u8fde\u3002\n\n\u8981\u4f60\u628a$1 \\dots n$\u7684\u70b9\u5206\u6210$3$\u4e2a\u96c6\u5408$v_1,v_2,v_3$\uff0c\u6ee1\u8db3$v_1 \u222a v_2 \u222a v_3 = \\{1 \\dots n\\}$\uff0c\u800c\u4e14$v_1,v_2$\u662f\u597d\u7684\uff0c$v_2,v_3$\u662f\u597d\u7684\uff0c$v_3,v_1$\u662f\u597d\u7684\u3002\n\n\u5982\u4e0b\u56fe$\\{1\\},\\{2,3\\},\\{4,5,6\\}$\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u89e3\u3002\n\n![](https://cdn.jsdelivr.net/gh/GaisaiYuno/imghost/8f2b8fba1ab8461f6fac8f47e03c5c2483ebb678.png)\n\n## $Sol4$\n\n\u9996\u5148\uff0c\u8fd9\u4e2a\u56fe\u5982\u679c\u4e0d\u8054\u901a\uff0c\u5c31\u65e0\u89e3\u3002\n\n\u4ed4\u7ec6\u89c2\u5bdf\u4e0a\u56fe\uff0c\u53d1\u73b0\u6bcf\u4e2a\u70b9\u4f1a\u548c\u6240\u6709\u4e0d\u662f\u548c\u5b83\u5728\u4e00\u4e2a\u96c6\u5408\u7684\u70b9\u8fde\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u3002\n\n\u9996\u5148\uff0c\u4ee4\u70b9$1$\u6240\u5728\u7684\u96c6\u5408\u7f16\u53f7\u4e3a$1$\uff0c\u663e\u7136\uff0c\u5c06$1$\u8fde\u51fa\u7684\u8fb9\u904d\u5386\u4e00\u904d\uff0c\u5c31\u53ef\u4ee5\u627e\u5230\u4e0d\u5728$1$\u4e2d\u7684\u70b9\uff0c\u5269\u4e0b\u7684\u70b9\u5728\u96c6\u5408$1$\u3002\n\n```cpp\nfor (register int i=0;i<G[1].size();++i){\n\tvis[G[1][i]]=true;//\u6807\u8bb02,3\u7ec4\n}\n```\n\n\u5728\u4ece\u6807\u8bb0\u5230\u7684\u70b9\u96c6\u4e2d\u968f\u4fbf\u62bd\u51fa\u4e00\u4e2a\u70b9$u$\uff0c\u94a6\u5b9a\u5b83\u5728\u96c6\u5408$2$\u4e2d\uff0c\u90a3\u4e48\u5b83\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u80af\u5b9a\u662f\u5728\u96c6\u5408$1,3$\u4e2d\uff0c\u6b64\u65f6$1$\u96c6\u5408\u4e2d\u7684\u70b9\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\uff0c\u4e8e\u662f$3$\u96c6\u5408\u6211\u4eec\u4e5f\u53ef\u4ee5\u77e5\u9053\u662f\u90a3\u4e9b\u3002\n\n```cpp\nbool flag=true;\nfor (register int i=1;i<=n;++i){\n\tif (!vis[i]){\n\t\tans[i]=1;//\u6807\u8bb01\u96c6\u5408\n\t}\n\telse if (vis[i]&&flag){\n\t\tfor (register int j=0;j<G[i].size();++j){//\u8fd9\u6b21\u5230\u8fbe\u7684\u662f1,3\u7ec4\n\t\t\tint v=G[i][j];\n\t\t\tif (vis[v]) ans[v]=3;//\u5230\u8fbe\u7684\u662f3\n\t\t}\n\t\tflag=false;\n\t}\n}\n```\n\n\u4e0b\u9762\u662f\u9ebb\u70e6\u7684\u9a8c\u8bc1\u8fc7\u7a0b\uff1a\n\n\u9996\u5148\uff0c\u8ba1\u7b97\u51fa\u5728\u96c6\u5408$1$\uff0c$2$\uff0c$3$\u4e2d\u7684\u70b9\u6570$cnt1,cnt2,cnt3$\n\n\u6ce8\u610f\u5230$cnt1 !=0,cnt2!=0,cnt3!=0$\u4e14$cnt1*cnt2+cnt2*cnt3+cnt1*cnt3=m$\u3002\n\n\u800c\u4e14\u548c\u6bcf\u4e2a\u70b9\u76f8\u90bb\u7684\u6240\u6709\u70b9\u90fd\u5728\u53e6\u5916\u4e24\u4e2a\u96c6\u5408\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u8fdb\u4e00\u6b65\u9a8c\u8bc1\u3002\n\n```cpp\nint cnt1=0,cnt2=0,cnt3=0;\nfor (register int i=1;i<=n;++i){\n\tif (ans[i]==0) ans[i]=2;\n\tif (ans[i]==1) cnt1++;\n\tif (ans[i]==2) cnt2++;\n\tif (ans[i]==3) cnt3++;\t\n}\nif (cnt1==0||cnt2==0||cnt3==0) return puts(\"-1\"),0;\nif (cnt1*cnt2+cnt2*cnt3+cnt3*cnt1!=m) return puts(\"-1\"),0;\n\nint c[4];\nfor (register int i=1;i<=n;++i){\n\tmemset(c,0,sizeof(c));\n\tfor (register int j=0;j<G[i].size();++j){\n\t\tc[ans[G[i][j]]]++;\n\t}\n\tif (c[ans[i]]!=0) return puts(\"-1\"),0;//\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u96c6\u5408\n\tif (ans[i]==1) if (c[2]!=cnt2||c[3]!=cnt3) return puts(\"-1\"),0;//\u548c\u4e0d\u76f8\u7b49\n\tif (ans[i]==2) if (c[1]!=cnt1||c[3]!=cnt3) return puts(\"-1\"),0;\n\tif (ans[i]==3) if (c[1]!=cnt1||c[2]!=cnt2) return puts(\"-1\"),0;\n}\n```\n\n## $Code4$\n\u5168\u90e8\u7684code\n```cpp\n#include <bits/stdc++.h>\n#define MAXN 300005\nusing namespace std;\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while (ch<'0'||ch>'9'){\n        if (ch=='-') f=-1;\n        ch=getchar();\n    }\n    while (ch>='0'&&ch<='9'){\n        x=(x<<3)+(x<<1)+(ch^'0');\n        ch=getchar();\n    }\n    return x*f;\n}\nint deg[MAXN],vis[MAXN];\nint vised[MAXN];\nvector<int>G[MAXN];\ninline void dfs(int u){\n\tvised[u]=true;\n\tfor (register int i=0;i<G[u].size();++i){\n\t\tif (!vised[G[u][i]]) dfs(G[u][i]);\n\t}\n}\nint ans[MAXN];\nint main(){\n\tint n=read(),m=read();\n\tfor (register int i=1;i<=m;++i){\n\t\tint u=read(),v=read();\n\t\tG[u].push_back(v),G[v].push_back(u);\n\t\tdeg[u]++,deg[v]++;\n\t}\n\tdfs(1);\n\tfor (register int i=1;i<=n;++i){\n\t\tif (!vised[i]) return puts(\"-1\"),0;//\u5224\u65ad\u8054\u901a\n\t}\n\tfor (register int i=0;i<G[1].size();++i){\n\t\tvis[G[1][i]]=true;//\u6807\u8bb02,3\u7ec4\n\t}\n\tbool flag=true;\n\tfor (register int i=1;i<=n;++i){\n\t\tif (!vis[i]){\n\t\t\tans[i]=1;\n\t\t}\n\t\telse if (vis[i]&&flag){\n\t\t\tfor (register int j=0;j<G[i].size();++j){//\u8fd9\u6b21\u5230\u8fbe\u7684\u662f1,3\u7ec4\n\t\t\t\tint v=G[i][j];\n\t\t\t\tif (vis[v]) ans[v]=3;\n\t\t\t}\n\t\t\tflag=false;\n\t\t}\n\t}\n\tint cnt1=0,cnt2=0,cnt3=0;\n\tfor (register int i=1;i<=n;++i){\n\t\tif (ans[i]==0) ans[i]=2;\n\t\tif (ans[i]==1) cnt1++;\n\t\tif (ans[i]==2) cnt2++;\n\t\tif (ans[i]==3) cnt3++;\n\t}\n\tif (cnt1==0||cnt2==0||cnt3==0) return puts(\"-1\"),0;\n\tif (cnt1*cnt2+cnt2*cnt3+cnt3*cnt1!=m) return puts(\"-1\"),0;\n\tint c[4];\n\tfor (register int i=1;i<=n;++i){\n\t\tmemset(c,0,sizeof(c));\n\t\tfor (register int j=0;j<G[i].size();++j){\n\t\t\tc[ans[G[i][j]]]++;\n\t\t}\n\t\tif (c[ans[i]]!=0) return puts(\"-1\"),0;\n\t\tif (ans[i]==1) if (c[2]!=cnt2||c[3]!=cnt3) return puts(\"-1\"),0;\n\t\tif (ans[i]==2) if (c[1]!=cnt1||c[3]!=cnt3) return puts(\"-1\"),0;\n\t\tif (ans[i]==3) if (c[1]!=cnt1||c[2]!=cnt2) return puts(\"-1\"),0;\n\t}\n\tfor (register int i=1;i<=n;++i){\n\t\tprintf(\"%d \",ans[i]);\n\t}\n}\n```\n\n",
        "postTime": 1569848846,
        "uid": 45109,
        "name": "Steven_Meng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1228D \u3010Complete Tripartite\u3011"
    },
    {
        "content": "### \u9898\u610f\uff1a\u7528\u4e09\u79cd\u989c\u8272\u67d3\u5404\u4e2a\u9876\u70b9\uff0c\u4e14\u76f8\u540c\u989c\u8272\u7684\u70b9\u95f4\u4e0d\u80fd\u6709\u8fde\u7ebf\uff0c\u4e0d\u540c\u989c\u8272\u7684\u70b9\u4e4b\u95f4\u5fc5\u987b\u6709\u8fde\u7ebf  \n#### \u521d\u770b\u89c9\u5f97\u662f\u4e2abfs  \n### \u4f46\u7ecf\u8fc7\u6307\u70b9\u540e\u53d1\u73b0  \n# ~~\u5176\u5b9e\u662f\u4e2a\u4e71\u641e~~\n# \u6b63\u89e3\n \n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct edge\n{\n\tint from,to;\n}edg[300005];\nint cnt12,cnt23,cnt31,n,m,pnt[600005],nxt[600005],head[100005],E,a[100005],cnt1,cnt2,cnt3;\nbool vis1[100005],vis2[100005],vis3[100005];\nvoid add_edge(int u,int v)\n{\n\tpnt[E]=v;\n\tnxt[E]=head[u];\n\thead[u]=E++;\n}\nint main() {\n\tcin>>n>>m;\n\tmemset(head,-1,sizeof(head));\n\tint u=0,v=0;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd_edge(u,v);\n\t\tadd_edge(v,u);\n\t\tedg[i]=(edge){u,v};//\u5148\u94a6\u5b9a\u4e24\u4e2a\u6709\u8fde\u7ebf\u7684\u70b9\uff0c\u4e00\u4e2a\u67d3\u4e3a1\uff0c\u53e6\u4e00\u4e2a\u67d3\u4e3a2,\u5e76\u8bb0\u5f55\u4e00\u4e0b\u8fde\u7ebf\n\t}\n\tint w=0;\n\tfor (int i=head[u];i!=-1;i=nxt[i])\n\t{\n\t\tint vv=pnt[i];\n\t\tvis1[vv]=1;\n\t}\n\tfor (int i=head[v];i!=-1;i=nxt[i])\n\t{\n\t\tint vv=pnt[i];\n\t\tvis2[vv]=1;\n\t\tif (vis1[vv]&&vis2[vv])\n\t\t{\n\t\t\tw=vv;\n\t\t}//\u5c06\u6240\u6709\u4e0e\u4ed6\u4eec\u8fde\u63a5\u7684\u70b9\u6807\u8bb0\u4e3a\u4e0d\u80fd\u67d31/2/1\u548c2\n\t}\n   //\u90a3\u4e48\u4e24\u8005\u90fd\u4e0d\u80fd\u67d3\u7684\u70b9\u5c31\u53ea\u80fd\u53d8\u4e3a3\n\tif (w==0)\n\t{\n\t\tcout<<-1;\n\t\treturn 0;\n\t}//\u5982\u679c\u6ca1\u6709\u5c31\u8bf4\u660e\u53ea\u6709\u4e24\u79cd\u989c\u8272\uff0c\u4e0d\u5408\u6cd5\n\tfor (int i=head[w];i!=-1;i=nxt[i])\n\t{\n\t\tint vv=pnt[i];\n\t\tvis3[vv]=1;\n\t}//\u4e0e\u5176\u8fde\u63a5\u7684\u70b9\u6807\u8bb0\u4e3a\u4e0d\u80fd\u67d3\u4e3a3\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (vis1[i]+vis2[i]+vis3[i]!=2)\n\t\t{\n\t\t\tcout<<-1;\n\t\t\treturn 0;\n\t\t}//\u5982\u679c\u4e0d\u80fd\u67d3\u7684\u989c\u8272\u4e0d\u662f2\u79cd\uff0c\u5c31\u8bf4\u660e\u51fa\u95ee\u9898\u4e86\n\t\tif (!vis1[i])\n\t\t{\n\t\t\ta[i]=1,++cnt1;\n\t\t}\n\t\tif (!vis2[i])\n\t\t{\n\t\t\ta[i]=2,++cnt2;\n\t\t}\n\t\tif (!vis3[i])\n\t\t{\n\t\t\ta[i]=3,++cnt3;\n\t\t}//\u8bb0\u5f55\u5404\u4e2a\u70b9\u7684\u989c\u8272\u548c\u5404\u989c\u8272\u70b9\u7684\u4e2a\u6570\n\t}\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tif (a[edg[i].from]==a[edg[i].to])\n\t\t{\n\t\t\tcout<<-1;\n\t\t\treturn 0;\n\t\t}//\u8fde\u63a5\u7684\u70b9\u67d3\u4e86\u540c\u4e00\u79cd\u989c\u8272\uff0c\u4e0d\u5408\u6cd5\n\t\tif (a[edg[i].from]+a[edg[i].to]==3) cnt12++;\n\t\tif (a[edg[i].from]+a[edg[i].to]==4) cnt31++;\n\t\tif (a[edg[i].from]+a[edg[i].to]==5) cnt23++;//\u8bb0\u5f55\u4e24\u79cd\u989c\u8272\u8fde\u7ebf\u7684\u6570\u91cf\n\t}\n\tif (cnt12!=cnt1*cnt2||cnt23!=cnt2*cnt3||cnt31!=cnt3*cnt1)\n\t{\n\t\tcout<<-1;\n\t\treturn 0;\n\t}//\u5982\u679c\u8fde\u7ebf\u6570!=\u4e24\u79cd\u989c\u8272\u70b9\u6570\u4e4b\u79ef\u5219\u8bf4\u660e\u6ca1\u6709\u4e24\u4e24\u8fde\u7ebf\uff0c\u4e0d\u5408\u6cd5\n\tfor (int i=1;i<=n;i++) printf(\"%d \",a[i]);\n\treturn 0;\n}\n```",
        "postTime": 1569816055,
        "uid": 32879,
        "name": "k1saki",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1228D \u3010Complete Tripartite\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://llf0703.com/p/cf-1228.html#dcompletetripartite)\n\n\u53ef\u4ee5\u53d1\u73b0\u4e0d\u4e0e $x$ \u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u4e00\u5b9a\u548c $x$ \u5728\u540c\u4e00\u96c6\u5408\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5148\u628a $1$ \u5f52\u5230\u96c6\u5408 \u2460 \uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u4e0e $1$ \u76f8\u8fde\u7684\u70b9\uff0c\u628a\u4ed6\u4eec\u6807\u4e3a\u96c6\u5408 \u2461 \u3002\u5269\u4e0b\u7684\u6ca1\u6709\u88ab\u6807\u6210 \u2461 \u7684\u5c31\u4e00\u5b9a\u5728 \u2460 \u91cc\u3002\n\n\u518d\u968f\u4fbf\u9009\u4e00\u4e2a \u2461 \u4e2d\u7684\u8282\u70b9\uff0c\u628a\u4e0e\u5b83\u76f8\u8fde\u4e14\u4e0d\u5728 \u2460 \u4e2d\u7684\u8282\u70b9\u6807\u6210 \u2462 \u3002\n\n\u81f3\u6b64\u96c6\u5408\u5c31\u5212\u5206\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u9a8c\u8bc1\u662f\u5426\u6ee1\u8db3\u9898\u610f\u3002\n\n1. \u5982\u679c\u4e09\u79cd\u96c6\u5408\u6709\u4e00\u79cd\u7684\u8282\u70b9\u4e2a\u6570 $cnt[i]$ \u4e3a $0$ \uff0c\u90a3\u4e48\u65e0\u89e3\u3002\uff08~~\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u70b8\u6389\u4e86~~\uff09\n2. \u5bf9\u4e8e\u8282\u70b9 $x$ \uff0c\u904d\u5386\u6240\u6709\u4e0e\u5b83\u76f8\u8fde\u7684\u8282\u70b9 \uff0c\u5e76\u8bb0\u5f55\u4e09\u79cd\u96c6\u5408\u7684\u4e2a\u6570 $cur[i]$\u3002\u5982\u679c $x$ \u6240\u5c5e\u7684\u96c6\u5408\u4e2a\u6570\u4e0d\u4e3a $0$ \uff0c\u6216\u8005\u5176\u5b83\u96c6\u5408\u7684 $cnt[i]\\neq cur[i]$ \uff0c\u90a3\u4e48\u65e0\u89e3\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ha 1000000007\n\nusing namespace std;\n\ninline int read()\n{\n    char ch=getchar(); int f=1,x=0;\n    while (ch<'0' || ch>'9') { if (ch=='-') f=-1; ch=getchar(); }\n    while (ch>='0' && ch<='9') { x=x*10+ch-'0'; ch=getchar(); }\n    return f*x;\n}\n\nstruct Edge {\n    int next,to;\n} edge[600005];\nbool vis[100005];\nint cnt,head[100005],n,m,a,b,col[100005],cnt2[4],cur[4];\n\ninline void add(int u,int v)\n{\n    edge[++cnt].to=v;\n    edge[cnt].next=head[u];\n    head[u]=cnt;\n}\n\nsigned main()\n{\n    n=read(); m=read();\n    for (int i=1;i<=m;i++)\n    {\n        a=read(); b=read();\n        add(a,b);\n        add(b,a);\n    }\n    col[1]=1; cnt2[1]=1;\n    for (int i=head[1];i;i=edge[i].next) //\u4ece 1 \u5f00\u59cb\uff0c\u6807\u8bb0\u96c6\u5408 \u2461\n    {\n        int y=edge[i].to;\n        col[y]=2;\n    }\n    for (int i=1;i<=n;i++) if (!col[i]) col[i]=1,cnt2[1]++; //\u5269\u4e0b\u7684\u5728 \u2460\n    int st=2;\n    for (;st<=n && col[st]!=2;st++); //\u627e\u5230\u4e00\u4e2a \u2461 \u4e2d\u7684\u8282\u70b9\n    for (int i=head[st];i;i=edge[i].next) //\u6807\u8bb0\u96c6\u5408 \u2462\n    {\n        int y=edge[i].to;\n        if (col[y]==1) continue;\n        col[y]=3;\n        cnt2[3]++;\n    }\n    cnt2[2]=n-cnt2[1]-cnt2[3];\n    if (!cnt2[1] || !cnt2[2] || !cnt2[3]) return 0&puts(\"-1\"); //\u65e0\u89e3\u60c5\u51b5 1\n    for (int x=1;x<=n;x++)\n    {\n        memset(cur,0,sizeof(cur));\n        for (int i=head[x];i;i=edge[i].next)\n        {\n            int y=edge[i].to;\n            cur[col[y]]++;\n        }\n        for (int i=1;i<=3;i++)\n        {\n            if (col[x]==i && cur[i]) return 0&puts(\"-1\");\n            else if (col[x]!=i && cnt2[i]!=cur[i]) return 0&puts(\"-1\"); //\u65e0\u89e3\u60c5\u51b5 2\n        }\n    }\n    for (int i=1;i<=n;i++) printf(\"%d \",col[i]);\n    return 0;\n}\n```",
        "postTime": 1569810994,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1228D \u3010Complete Tripartite\u3011"
    },
    {
        "content": "\u6709\u4e9b\u9898\u89e3\u591f\u4e86\uff0c\u8fd9\u9898\u548c\u4e09\u5206\u56fe\u7684\u5224\u5b9a\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u2026\u2026\n\n\u8fd9\u91cc\u4e3b\u8981\u662f\u4e00\u4e2a\u8f6c\u5316\uff0c\u4e00\u4e2a\u70b9\u4f1a\u548c\u6240\u4ee5\u4e0d\u4e0e\u81ea\u5df1\u76f8\u8fde\u7684\u70b9\u5904\u4e8e\u76f8\u540c\u7684\u96c6\u5408\u4e2d\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\uff0c\u90a3\u4e0e\u8fd9\u4e24\u4e2a\u70b9\u76f8\u8fde\u7684\u70b9\u7684\u96c6\u5408\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\n\n\u8fd9\u91cc\u4f7f\u7528\u4e86\u54c8\u5e0c\u6765\u5224\u5b9a\uff0c\u53e6\u5916\uff0c\u5982\u679c\u6709\u5b64\u7acb\u7684\u70b9\u5b58\u5728\uff0c\u5219\u8981\u7279\u5224\u3002\n\n```\n// Problem: Complete Tripartite\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF1228D\n// Memory Limit: 250 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <bitset>\n#include <stack>\n#include <tuple>\n#include <bitset>\n#define ll long long\n#define ull unsigned long long\n#define fp(a,b,c) for(ll a=b;a<=c;a++)\n#define fd(a,b,c) for(ll a=b;a>=c;a--)\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define inf 0x3f3f3f3f\n#define base 127\n#define mod 1000000007\n#define eb emplace_back\n\n\nusing namespace std;\n\ninline int rd(){\n\tint x = 0, f = 1;char ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-')f = -1;ch = getchar();}\n\twhile(ch >= '0' && ch <= '9')x = (x<<1) + (x<<3) + (ch^48),ch = getchar();\n\treturn x * f;}\ninline ll lrd(){\n\tll x = 0, f = 1;char ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-')f = -1;ch = getchar();}\n\twhile(ch >= '0' && ch <= '9')x = (x<<1) + (x<<3) + (ch^48),ch = getchar();\n\treturn x * f;}\nconst int maxN=1e5+10;\nvector<int> g[maxN];\nint n,m;\npll hsh[maxN];\nint col[maxN];\n\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0); \n\tn=rd(),m=rd();\n\tfp(i,1,m){\n\t\tint u=rd(),v=rd();\n\t\tg[u].eb(v),g[v].eb(u);\n\t}\n\tfp(i,1,n){\n\t\tif(g[i].empty()){\n\t\t\tcout << \"-1\" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfp(i,1,n)\n\t\tsort(g[i].begin(),g[i].end());\n\tfp(i,1,n){\n\t\thsh[i].second=i;\n\t\tfor(int x:g[i])\n\t\t\thsh[i].first=(hsh[i].first*base+x)%mod;\n\t}\n\tsort(hsh+1,hsh+n+1);\n\tvector<int> v;\n\tfp(i,2,n)\n\t\tif(hsh[i].first!=hsh[i-1].first) v.eb(i);\n\tif(v.size()!=2){\n\t\tcout << \"-1\" << endl;\n\t\treturn 0;\n\t}\n\tfp(i,1,v[0]-1)\n\t\tcol[hsh[i].second]=1;\n\tfp(i,v[0],v[1]-1)\n\t\tcol[hsh[i].second]=2;\n\tfp(i,v[1],n)\n\t\tcol[hsh[i].second]=3;\n\tfp(i,1,n) cout << col[i] << ' ';\n\tcout << endl;\n\t\n\treturn 0;\n} \n\n```",
        "postTime": 1684394611,
        "uid": 258178,
        "name": "Benzenesir",
        "ccfLevel": 4,
        "title": "CF1228D"
    },
    {
        "content": "\u8003\u7684\u65f6\u5019\u6b7b\u6d3b\u6ca1\u6253\u51fa\u6765.\u7136\u540e\u770b\u4e86\u9898\u89e3\u53d1\u73b0,\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28:\u5bf9\u4e8e\u5728v1v2\u4e2d\u7684\u6bcf\u4e00\u5bf9\u9876\u70b9\uff0cx\u5728v1\u4e2d\uff0cy\u5728v2\u4e2d\uff0cxy\u4e4b\u95f4\u6709\u8fb9\n\n\u6240\u4ee5 \u7c7b\u4f3c\u4e8e 3 0 \u8fd9\u79cd\u662f\u8f93\u51fa-1\u7684,\u8003\u7684\u65f6\u5019\u5c31\u88ab\u8fd9\u4e2a\u5361\u4e86.\n\n\u8fd9\u9053\u8fd9\u4e2a\u6027\u8d28\u6211\u4eec\u53ef\u4ee5\u5e72\u561b\u5462?\n\n\u6211\u4eec\u53d1\u73b0\u4e0d\u540c\u7684\u96c6\u5408\u4e2d\u5fc5\u6709\u8fde\u8fb9.\u90a3\u4e48\u6211\u4eec\u5c31\u5728\u5904\u7406\u4e00\u4e2a\u6570\u7684\u65f6\u5019,\u628a\u4e0e\u8fd9\u4e2a\u6570\u4e0d\u8fde\u63a5\u7684\u70b9\u6254\u8fdb\u96c6\u5408\u4e0d\u5c31\u597d\u4e86.\n\n\u90a3\u4e48\u6211\u4eec\u91cd\u590d\u4e4b\u524d\u7684\u64cd\u4f5c.\u6211\u4eec\u8bb0\u4e09\u4e2avis \u6bcf\u6b21\u5c06\u6570\u6254\u8fdb\u96c6\u5408\u4e2d\u7684\u65f6\u5019.\u6211\u4eec\u5c31\u5c06\u5176\u8fde\u63a5\u7684\u6570\u5168\u90e8\u8bbe\u4e3a\u4e0d\u53ef\u6254\u8fdb\u6b64\u96c6\u5408. \u6240\u4ee5\u6211\u4eec\u5c31\u626b\u4e09\u904d,\u6bcf\u6b21\u5224\u65ad\u80fd\u4e0d\u80fd\u52a0\u8fdb\u53bb,\u5982\u679c\u80fd\u52a0\u5c31\u76f4\u63a5\u52a0\u5c31\u884c\u4e86.\n\n\u81f3\u4e8e-1\u7684\u60c5\u51b5,\u6211\u4eec\u53ef\u4ee5\u77e5\u9053$m=cnt[1]*cnt[2]+cnt[2]*cnt[3]+cnt[3]*cnt[1]$\u624d\u662f\u5408\u6cd5\u7684\u60c5\u51b5.\u6240\u4ee5\u5982\u679c$m!=cnt[1]*cnt[2]+cnt[2]*cnt[3]+cnt[3]*cnt[1]$\u5c31\u4e0d\u5408\u6cd5.\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u70b9\u662f. \u4e09\u4e2a\u96c6\u5408\u4e0d\u4e3a\u7a7a. \u6240\u4ee5\u5982\u679c\u4f60\u5f97\u51fa\u6709\u4e2a(\u4e9b)\u96c6\u5408\u4e3a\u7a7a\u7684\u8bdd,\u4f60\u5fc5\u987b\u8981\u5c06\u4e00\u4e9b\u6570\u6254\u5230\u90a3\u4e2a(\u4e9b)\u7a7a\u96c6\u5408\u4e2d.(\u4e0d\u7136\u5c31\u4f1a\u6302\u57283 0\u4e0a.)\n\n\u6211\u7684\u8f6c\u6362\u5199\u7684\u8d3c\u70c2,\u89c1\u8c05.\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=1e9+7;\nvector<int> v[300005];\nlong long col[300005];\nlong long cnt[10];\nlong long n,m;\nbool er[5][300005];\nvoid ch();\nvoid check(int now)//\u6253\u6807\u8bb0.\n{\n\tfor(int j=0;j<v[now].size();j++)\n\t{\n\t\ter[col[now]][v[now][j]]=1;\n\t}\n}\nvoid find_ans(int x)\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!col[i])//\u5982\u679c\u8fd9\u4e2a\u6570\u6ca1\u88ab\u67d3\u8fc7\u8272\n\t\t{\n\t\t\tif(!er[x][i])//\u5982\u679c\u5b83\u53ef\u4ee5\u88ab\u67d3\u6210\u8fd9\u4e2a\u989c\u8272\n\t\t\t{\n\t\t\t\tcol[i]=x;\n\t\t\t\tcheck(i);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tv[x].push_back(y);\n\t\tv[y].push_back(x);\t\n\t}\n \n\tfind_ans(1);//\u8dd1\u4e09\u904d,\u4e5f\u4e0d\u7528\u5224\u8fde\u901a.\n\tfind_ans(2);\n\tfind_ans(3);\n\tch();\n\tif(m!=cnt[1]*cnt[2]+cnt[2]*cnt[3]+cnt[3]*cnt[1])\n\t{\n\t\tcout<<-1;\n\t\treturn 0;\n\t}//\u5224\u65ad\u662f\u5426\u5408\u6cd5.\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d \",col[i]);\n\t}\n\treturn 0;\n}\nvoid ch()//\u7a00\u70c2\u7684\u8f6c\u6362...\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcnt[col[i]]++;\n\t}\n\tint need1=0,need2=0;\n\tfor(int i=1;i<=3;i++)\n\t{\n\t\tif(cnt[i]==0)\n\t\t{\n\t\t\tif(need1==0)\n\t\t\t{\n\t\t\t\tneed1=i;\n\t\t\t}\n\t\t\telse need2=i;\n\t\t}\n\t}\t\n \n\tif(need1)\n\t{\n\t\tfor(int i=1;i<=3;i++)\n\t\t{\n\t\t\tif(cnt[i]>1)\n\t\t\t{\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t{\n\t\t\t\t\tif(col[j]==i)\n\t\t\t\t\t{\n\t\t\t\t\t\tcol[j]=need1;\n\t\t\t\t\t\tcnt[i]--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcnt[need1]=1;\n\t}\n\tif(need2)\n\t{\n\t\tfor(int i=1;i<=3;i++)\n\t\t{\n\t\t\tif(cnt[i]>1)\n\t\t\t{\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t{\n\t\t\t\t\tif(col[j]==i)\n\t\t\t\t\t{\n\t\t\t\t\t\tcol[j]=need2;\n\t\t\t\t\t\tcnt[i]--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcnt[need2]=1;\n\t}\n}\n```\n\n\n",
        "postTime": 1569909664,
        "uid": 53852,
        "name": "\u5f26\u5dfb\u3053\u3053\u308d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1228D \u3010Complete Tripartite\u3011"
    },
    {
        "content": "## \u7384\u5b66\u4e71\u641e\n\n\u6ce8\u610f: \u7ec6\u8282\u5f88\u591a.\n\n\u9996\u5148\u53d1\u73b0\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5408\u6cd5\u7684\u533a\u5206, \u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20, \u5b83\u4f1a\u5411\u6bcf\u4e00\u4e2a\u548c\u5b83\u4e0d\u540c\u96c6\u5408\u7684\u5143\u7d20\u8fde\u8fb9. \u7136\u540e\u4e0d\u4f1a\u5411\u5176\u4ed6\u7684\u70b9\u8fde\u8fb9. \u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u53ea\u4f1a\u6709\u4e00\u79cd\u53ef\u80fd.\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u6c42\u51fa\u4e00\u4e2a, \u7136\u540e\u68c0\u9a8c\u5b83\u7684\u53ef\u80fd\u6027.\n\n\u68c0\u9a8c\u53ef\u80fd\u6027\u7684\u539f\u7406:\n\n1. \u5982\u679c\u6709\u4e00\u4e2a\u70b9\u548c\u4e24\u4e2a\u5c5e\u4e8e\u4e0d\u540c\u96c6\u5408\u7684\u5143\u7d20\u90fd\u6ca1\u6709\u8fde\u8fb9, \u90a3\u4e48\u4e0d\u884c.\n2. \u5982\u679c\u6709\u4e00\u6761\u8fb9\u4e24\u8fb9\u7684\u70b9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408, \u90a3\u4e48\u4e0d\u884c.\n3. \u5982\u679c\u603b\u8fb9\u6570\u4e0d\u5339\u914d\u90a3\u4e48\u4e0d\u884c.\n4. \u5982\u679c\u56fe\u4e0d\u8fde\u901a\u90a3\u4e48\u4e0d\u884c.\n5. \u5982\u679c\u6709\u4e00\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\u662f0\u90a3\u4e48\u4e0d\u884c.\n\n\u53cd\u6b63\u8fd9\u51e0\u6761\u591f\u7528\u4e86......\n\n\u7136\u540e\u653e\u4e00\u4e0b\u4ee3\u7801......\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nnamespace fio {\n\tstreambuf* in = cin.rdbuf();\n\tchar bb[1000000], * s = bb, * t = bb;\n#define gc() (s==t&&(t=(s=bb)+in->sgetn(bb,1000000),s==t)?EOF:*s++)\n\tinline int read() {\n\t\tint x = 0;\n\t\tchar ch = gc();\n\t\twhile (ch < 48)ch = gc();\n\t\twhile (ch >= 48)x = x * 10 + ch - 48, ch = gc();\n\t\treturn x;\n\t}\n}using fio::read;\nlong long n, m;\ntypedef pair<int, int>mp;\nmp arr[300005];\nvector<int>road[300005];\nint huaji[300005];\nbool ax[300005];\nlong long full;\nint diff(mp a, int x) {\n\tif (a.first == x)return a.second;\n\telse if (a.second == x) return a.first;\n\telse return -1;\n}\nlong long siz[3];\nint main() {\n\tn = read(), m = read();\n\tfor (int i = 1; i <= m; i++)arr[i] = { read(),read() }, road[arr[i].first].push_back(arr[i].second), road[arr[i].second].push_back(arr[i].first);// \u8fde\u8fb9\n\tfor (int i = 1; i <= m; i++)if (min(arr[i].first, arr[i].second) == 1)ax[max(arr[i].first, arr[i].second)] = 1;\n\tfor (int i = 1; i <= n; i++)if (!ax[i])huaji[i] = 1;// \u96c6\u54081\n\tmemset(ax, 0, sizeof(ax));\n\tif (!road[1].size())cout << -1, exit(0);// \u5047\u7684\u89c4\u52194\n\tint nex = road[1][0];\n\tfor (int i = 1; i <= m; i++)if (diff(arr[i], nex) != -1)ax[diff(arr[i], nex)] = 1;\n\tfor (int i = 1; i <= n; i++)if (!ax[i])if (!huaji[i])huaji[i] = 2; else cout << -1, exit(0);// \u96c6\u54082, \u89c4\u52191\n\tfor (int i = 1; i <= n; i++)siz[huaji[i]]++;\n\tfor (int i = 1; i <= m; i++)if (huaji[arr[i].first] == huaji[arr[i].second])cout << -1, exit(0);// \u89c4\u52192\n\tfull = n * (n - 1) / 2 - siz[0] * (siz[0] - 1) / 2 - siz[1] * (siz[1] - 1) / 2 - siz[2] * (siz[2] - 1) / 2;\n\tif (!siz[0] || !siz[1] || !siz[2])cout << -1, exit(0);// \u89c4\u52195\n\tif (full != m)cout << -1, exit(0);// \u89c4\u52193\n\tfor (int i = 1; i <= n; i++)cout << huaji[i] + 1 << ' ';\n}\n```\n\n\u7801\u98ce\u6709\u70b9\u6bd2\u7624, \u656c\u8bf7\u89c1\u8c05\n",
        "postTime": 1569846412,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1228D \u3010Complete Tripartite\u3011"
    },
    {
        "content": "\u6211\u7684\u505a\u6cd5\u53ef\u80fd\u6709\u70b9\u9ebb\u70e6\u4e86\uff0c\u4f46\u5b83\u53ef\u4ee5\u5904\u7406\u5141\u8bb8\u4efb\u610f\u5206\u96c6\u5408(\u4e0d\u6b62$3$\u4e2a)\u7684\u60c5\u51b5\n\n\u8003\u8651\u4e00\u4e2a\u5f31\u4e8e\u539f\u95ee\u9898\u7684\u95ee\u9898\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$\u4e0e\u5176\u6ca1\u6709\u8fb9\u7684\u70b9\u5fc5\u987b\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\uff08\u540c\u4e00\u96c6\u5408\u5185\u5141\u8bb8\u6709\u8fb9\uff09\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u96c6\u5408.\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5f00\u94fe\u8868\u7ef4\u62a4\u6ca1\u88ab\u4f7f\u7528\u7684\u70b9\u7136\u540e$\\rm bfs$\u5728$O(n+m)$\u505a\u6389\n\n\u4e8e\u662f\u663e\u7136\u7684\u662f\u539f\u95ee\u9898\u4e00\u6837\u662f\u5982\u679c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fb9\u5c31\u5fc5\u987b\u8981\u5728\u4e00\u4e2a\u96c6\u5408\u5185\n\n\u53ef\u4ee5\u53d1\u73b0\u6700\u540e\u7684\u96c6\u5408\u4e00\u5b9a\u662f\u56fa\u5b9a\u7684\uff0e\n\n\u8fd9\u548c\u8fd9\u4e2a\u5f31\u4e8e\u539f\u95ee\u9898\u7684\u95ee\u9898\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\u539f\u95ee\u9898\u7684\u96c6\u5408\u4e0e\u5f31\u4e8e\u539f\u95ee\u9898\u7684\u95ee\u9898\u53ea\u591a\u4e86\u4e00\u4e2a\u5224\u662f\u5426\u6709\u89e3\n\n\u6240\u4ee5\u6211\u4eec\u989d\u5916\u641e\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\u8054\u901a\u6027\uff0c\u90a3\u4e48\u6709\u89e3\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n$1.$\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u8fb9\u5176\u8fde\u63a5\u7684\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u96c6\u5408\n\n$2.$\u505a\u5b8c\u95ee\u9898$1$\u540e\u6070\u597d\u5206\u6210\u4e86$3$\u4e2a\u96c6\u5408\n\n\u590d\u6742\u5ea6$O(n+m)$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\nint gi() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int N = 1e5 + 5 ; \nconst int M = 3e5 + 5 ; \nint n, m, cnt, head[N], vis[N], Fr[M], Ed[M], Can[N], L[N], R[N], flag, idnex ; \nstruct E {\n\tint to, next ; \n} e[M * 2] ;  \nvoid add( int x, int y ) {\n\te[++ cnt] = (E){ y, head[x] }, head[x] = cnt ,\n\te[++ cnt] = (E){ x, head[y] }, head[y] = cnt ; \n}\nstruct node {\n\tint u, v ; \n};\nint fa[N] ;\nint fd( int x ) {\n\treturn ( fa[x] == x ) ? x : fa[x] = fd(fa[x]) ; \n}\nvoid del( int x ) {\n\tR[L[x]] = R[x], L[R[x]] = L[x] ; \n}\nqueue<int> q ;\nvoid merge( int x, int y ) {\n\tint u = fd(x), v = fd(y) ; \n\tif( u == v ) return ; \n\tfa[u] = v ; \n}\nvoid solve( int x ) {\n\t++ idnex, q.push(x), del(x), vis[x] = idnex ;\n\twhile( !q.empty() ) {\n\t\tint u = q.front() ; q.pop() ; \n\t\tNext( i, u ) {\n\t\t\tint v = e[i].to ; Can[v] = 1 ; \n\t\t}\n\t\tfor( re int i = 0; i != n + 1; i = R[i] ) {\n\t\t\tif( !i || Can[i] ) continue ; \n\t\t\tdel(i), q.push(i), merge( x, i ), vis[i] = idnex ;\n\t\t}\n\t\tNext( i, u ) {\n\t\t\tint v = e[i].to ; Can[v] = 0 ;\n\t\t}\n\t}\n}\nsigned main()\n{\n\tn = gi(), m = gi() ; \n\trep( i, 1, n ) fa[i] = i, L[i] = i - 1, R[i] = i + 1 ;\n\trep( i, 1, m ) Fr[i] = gi(), Ed[i] = gi(), add( Fr[i], Ed[i] ) ; R[0] = 1 ;\n\trep( i, 1, n ) {\n\t\tif( !vis[i] ) solve(i) ;\n\t}\n\tif( idnex != 3 ) puts(\"-1\") ;\n\telse {\n\t\trep( i, 1, m ) if( fd(Fr[i]) == fd(Ed[i]) ) flag = 1 ; \n\t\tif( flag ) puts(\"-1\") ; \n\t\telse {\n\t\t\trep( i, 1, n ) printf(\"%d \", vis[i] ) ;\n\t\t}\n\t}\n\treturn 0 ;\n}\n```",
        "postTime": 1569821544,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1228D \u3010Complete Tripartite\u3011"
    }
]