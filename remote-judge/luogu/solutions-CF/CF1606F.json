[
    {
        "content": "\u6839\u53f7\u7b97\u6cd5\u4e07\u5c81\uff01\n\n\u548c longer_name \u795e\u4ed9\u4e00\u8d77\u6574\u7684\u6839\u53f7\u7b97\u6cd5\uff08\uff08\n\n\u9996\u5148\u6ce8\u610f\u5230\u7b54\u6848\u4e00\u5b9a\u975e\u8d1f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a $k$ \u7684 $m$ \u6700\u5927\u662f $\\frac{n}{k}$ \u7684\uff0c\u4e8e\u662f\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u6839\u53f7\u5206\u6cbb\n\n\u8003\u8651\u5f53 $k < \\sqrt{n}$ \u65f6\uff0c\u6211\u4eec\u76f4\u63a5\u8fdb\u884c\u6811\u4e0a DP\uff0c\u8bbe $f_{i,j}$ \u8868\u793a $i$ \u7684\u5b50\u6811\u91cc\u5f53 $k = j$ \u65f6\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u8f6c\u79fb\u7684\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u8003\u8651\u5f53\u524d\u5b50\u8282\u70b9\u5220\u4e0d\u5220\uff0c\u8fd9\u6837\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal O(n \\sqrt{n})$ \u7684\n\n\u7136\u540e\u8003\u8651\u5f53 $k \\ge \\sqrt{n}$ \u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u6709 $m \\le \\sqrt{n}$\uff0c\u8fd9\u6837\u7684\u8bdd\u8003\u8651\u6811\u5f62\u80cc\u5305\uff0c\u8bb0 $g_{i, j}$ \u8868\u793a $i$ \u5b50\u6811\u91cc\u5220 $j$ \u4e2a\u70b9\u7684\u6700\u5927\u513f\u5b50\u6570\uff0c\u8fd9\u6837\u8fdb\u884c\u6811\u5f62\u80cc\u5305\uff0c\u8003\u8651\u6bcf\u4e2a\u513f\u5b50\u5220\u4e0d\u5220\uff0c\u7531\u4e8e\u6811\u5f62\u80cc\u5305\u7684\u590d\u6742\u5ea6\u662f $\\mathcal O(n k)$ \u7684\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal O(n \\sqrt{n})$\n\n\u90a3\u4e48\u8fd9\u4e2a\u9898\u65f6\u9650 6s\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fc7\u4e86\uff01\n\n\u4e0d\u8fc7\u5982\u679c\u76f4\u63a5\u8fd9\u4e48\u505a\u7a7a\u95f4\u4f1a\u840e\uff0c\u4e8e\u662f\u4f60\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u5206\u6210\u4e24\u90e8\u5206\u505a\u5c31\u5361\u8fdb ML \u4e86\n\n\u8dd1\u7684\u975e\u5e38\u7684\u5feb\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll maxn = 2e5 + 5;\nconst ll maxv = 2e5;\nconst ll B = 450;\nll n, q;\nvector<ll> adj[maxn];\nint f[maxn][B + 2];\nvector<pair<pair<ll, ll>, ll>> op[2];\nll num[maxn];\nvoid dfs1(ll now, ll fa){\n    // ll num = (int)(adj[now].size()) - (now != 1);\n    for(auto t : adj[now]){\n        if(t == fa) continue;\n        dfs1(t, now);\n        for(int j = 0;j <= B;j++){\n            f[now][j] = max(f[now][j] + 1, f[now][j] - j + f[t][j]);\n        }\n    }\n    return ;\n}\nll sz[maxn];\nint g[B + 5];\nvoid dfs2(ll now, ll fa){\n    memset(f[now], -0x3f, sizeof(f[now]));\n    memset(g, -0x3f, sizeof(g));\n    sz[now] = 1;\n    f[now][0] = 0;\n    for(auto t : adj[now]){\n        if(t == fa) continue;\n        dfs2(t, now);\n        for(int i = 0;i <= sz[now] && i <= B;i++){\n            for(int j = 0;j <= sz[t] && j + i <= B;j++){\n                g[i + j] = max(g[i + j], f[now][i] + 1);\n                g[i + j + 1] = max(g[i + j + 1], f[now][i] + f[t][j]);\n            }\n        }\n        sz[now] += sz[t];\n        for(int i = 0;i <= sz[now] && i <= B;i++){\n            f[now][i] = g[i]; g[i] = -0x3f3f3f3f;\n        }\n    }\n    return ;\n}\nll ans[maxn];\nint main(){\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    cin >> n;\n    for(int i = 1;i < n;i++){\n        ll ux, vx; cin >> ux >> vx; adj[ux].push_back(vx);\n        adj[vx].push_back(ux);\n    }\n    cin >> q;\n    for(int i = 1;i <= q;i++){\n        ll ux, kx; cin >> ux >> kx;\n        if(kx > B) op[1].emplace_back(make_pair(ux, kx), i);\n        else op[0].emplace_back(make_pair(ux, kx), i);\n    }\n    dfs1(1, 0);\n    for(auto fr : op[0]){\n        ll t = fr.first.first, vv = fr.first.second;\n        ll id = fr.second;\n        ans[id] = f[t][vv];\n    }\n    dfs2(1, 0);\n    for(auto fr : op[1]){\n        ll t = fr.first.first, vv = fr.first.second;\n        ll id = fr.second;\n        for(int j = 0;j <= B;j++){\n            // cout << f[t][j] - vv * j << \" \\n\"[j == B];\n            ans[id] = max(ans[id], (ll)f[t][j] - vv * j);\n        }\n        // cout << id << \" \" << ans[id] << endl;\n    }\n    for(int i = 1;i <= q;i++) cout << ans[i] << \"\\n\";\n    cout.flush(); return 0;\n}\n\n```",
        "postTime": 1635854669,
        "uid": 177999,
        "name": "juicyyou",
        "ccfLevel": 9,
        "title": "CF1606F Tree Queries"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://codeforces.com/contest/1606/problem/F)\n\n\u795e\u9898\u554a...\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u4e00\u6b21\u4ee5 $r$ \u4e3a\u6839\u7684\u8be2\u95ee\u6211\u4eec\u5ffd\u7565 $r$ \u5b50\u6811\u4ee5\u5916\u7684\u6240\u6709\u8282\u70b9\u53bb\u8003\u8651\u3002\n\n\u7136\u540e\uff0c\u53d1\u73b0\u5982\u679c\u6211\u4eec\u4e00\u5f00\u59cb\u628a $r$ \u5220\u9664\u4e86\uff0c\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u518d\u52a0\u56de\u53bb\uff0c\u90a3\u4e48\u5220\u9664\u7684\u70b9\u662f $r$ \u5b50\u6811\u5185\u4e00\u4e2a\u5305\u542b $r$ \u7684\u8fde\u901a\u5757\u3002\n\n\u8003\u8651\u6811\u5f62 $dp$\u3002\u5bb9\u6613\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u8bbe\u8ba1\u51fa\u8fd9\u6837\u4e00\u4e2a\u8f6c\u79fb\uff1a\n\n$$f(u)=-k+\\sum_{u\\rightarrow v}\\max\\{1,f(v)\\}$$\n\n\u5176\u4e2d $k$ \u662f\u5355\u6b21\u8be2\u95ee\u7ed9\u5b9a\u7684\u53c2\u6570 $k$\u3002\n\n\u8fd9\u6837\u5c31\u6709\u4e86\u4e00\u4e2a $O(nm)$ \u7684\u66b4\u529b\u89e3\u6cd5\u3002\n\n\u8003\u8651\u5982\u679c\u5ffd\u7565\u6389\u548c $1$ \u53bb\u53d6 $\\max$ \uff0c\u8fd9\u4e1c\u897f\u5b9e\u9645\u4e0a\u662f $f(u)=-k\\,\\times\\,sz_u$\uff0c\u5176\u4e2d $sz$ \u4ee3\u8868\u5b50\u6811\u5927\u5c0f\u3002\u6240\u4ee5\u5c31\u5c1d\u8bd5\u53bb\u6389 $\\max$\u3002\u6211\u4eec\u8bb0 $a_u$ \u4e3a $u$ \u7684\u513f\u5b50\u4e2a\u6570\uff0c\u4e0d\u96be\u5f97\u5230\uff1a\n\n$$f(u)=a_u-k+\\sum_{u\\rightarrow v}\\max\\{0,f(v)-1\\}$$\n\n\u5982\u679c\u4e00\u4e2a\u513f\u5b50 $v$ \u6ee1\u8db3 $f(v)\\lt 1$ \u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u5b83\u548c\u7236\u4eb2\u7684\u8fb9\uff0c\u56e0\u4e3a\u5176\u8d21\u732e\u4e3a $0$\u3002\u8fd9\u6837\u4f1a\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u6811\uff08\u68ee\u6797\uff09\u7ed3\u6784\u3002\u5728\u8fd9\u4e2a\u7ed3\u6784\u4e0a\uff0c$dp$ \u65b9\u7a0b\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a\n\n$$f(u)=a_u-k+\\sum_{u\\rightarrow v}(f(v)-1)$$\n\n\u8bb0 $sum_u$ \u4e3a $u$ \u5b50\u6811\u5185 $a$ \u4e4b\u548c\uff0c\u6211\u4eec\u5f97\u5230\uff1a\n\n$$f(u)=sum_u-k\\,\\times\\,sz_u-sz_u+1$$\n\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u80fd\u7ef4\u62a4\u8fd9\u4e2a\u65b0\u68ee\u6797\u6bcf\u4e2a\u70b9\u7684 $sum$ \u548c $sz$ \u5c31\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u5b83\u4eec\u8ba1\u7b97\u7b54\u6848\u3002\u53d1\u73b0\u5173\u952e\u662f $f\\ge 1$\u3002\n\n\u4e0d\u96be\u53d1\u73b0 $f$ \u6ee1\u8db3\u5355\u8c03\u9012\u51cf\u6027\u8d28\u3002\u6362\u8a00\u4e4b\u4e00\u4e2a\u70b9 $u$ \u5230 $fa_u$ \u7684\u8fde\u8fb9\u6700\u521d\u88ab\u5ffd\u7565\uff0c\u540c\u65f6\u5b58\u5728\u4e00\u4e2a $lim$\uff0c\u4f7f\u5f97 $k\\ge lim$ \u7684\u65f6\u5019\u8fd9\u6761\u8fb9\u5b58\u5728\uff08\u5373 $f(u)\\ge 1$\uff0c\u5426\u5219\u88ab\u5ffd\u7565\u3002\uff09\n\n\u89e3\u4e0d\u7b49\u5f0f $sum_u-lim\\,\\times\\,sz_u-sz_u\\ge 0$ \u53ef\u4ee5\u5f97\u5230 \n\n$$lim\\le \\lfloor \\frac{sum_u-sz_u}{sz_u} \\rfloor$$\n\n\u53f3\u4fa7\u7684\u503c\u5c31\u662f\u5b83\u7684\u4e0a\u754c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u628a $q$ \u4e2a\u8be2\u95ee\u6309\u7167 $k$ \u964d\u5e8f\u6392\u5e8f\uff0c\u6bcf\u6b21\u5904\u7406\u6240\u6709\u672a\u548c\u7236\u4eb2\u8fde\u8fb9\u7684\uff0c\u4e14 $lim\\ge k$ \u7684\u70b9\u3002\u4f46\u662f\u6ce8\u610f $lim_u$ \u53ef\u80fd\u4f1a\u56e0\u4e3a $u$ \u5b50\u6811\u5185\u53d1\u751f\u4e86\u5408\u5e76\u800c\u4ea7\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8003\u8651\u4ea7\u751f\u4fee\u6539\u7684 $lim$ \u8fd8\u6709\u5feb\u901f\u4fee\u6539 $sz$ \u548c $sum$ \u503c\u3002\n\n\u9996\u5148\u53d1\u73b0\u5df2\u7ecf\u5408\u5e76\u8fc7\u7684\u70b9\u4e0d\u9700\u8981\u8003\u8651 $lim$ \u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u5e76\u67e5\u96c6\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5f80\u4e0a\u7b2c\u4e00\u4e2a\u672a\u5411\u4e0a\u5408\u5e76\u7684\u7956\u5148 $top$\uff0c\u53ea\u6709\u8fd9\u4e2a\u70b9\u7684 $lim$ \u4f1a\u6539\u53d8\u3002\n\n\u53d1\u73b0\u4e00\u4e2a\u70b9 $u$ \u548c\u7236\u4eb2\u5408\u5e76\u540e\u53ea\u4f1a\u5f71\u54cd\u5176\u4e00\u6bb5\u7956\u5148\uff08\u4e0d\u8d85\u8fc7 $top$\uff0c\u56e0\u4e3a $top$ \u548c\u5b83\u7236\u4eb2\u8fd8\u6ca1\u6709\u8fde\u8fb9\u8fc7\uff09\u7684 $sz$ \u548c $sum$\u3002\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u8f6c\u4e3a $dfs$ \u5e8f\u4e0a\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\u7684\u95ee\u9898\u3002\u5229\u7528\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u603b\u590d\u6742\u5ea6 $O((n+q)\\log n)$\u3002 CF\u4e0a\u65f6\u9650 6s \u4f46\u662f\u672c\u65b9\u6cd5\u5927\u5e38\u6570\u4e5f\u4e0d\u4f1a\u8d85\u8fc7 1s\uff0c\u96be\u9053\u662f\u6700\u540e\u4e00\u90e8\u5206\u653e\u4e86\u6811\u5256\u8fc7\u53bb\uff08\u96fe\uff09\u3002\n\n```\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define Max(a,b) (a>b?a:b)\n#define Min(a,b) (a<b?a:b)\n#define next Cry_For_theMoon\n#define il inline\n#define pb(x) push_back(x)\n#define is(x) insert(x)\n#define sit set<int>::iterator\n#define mapit map<int,int>::iterator\n#define pi pair<int,int>\n#define ppi pair<int,pi>\n#define pp pair<pi,pi>\n#define fr first\n#define se second\n#define vit vector<int>::iterator\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef double db;\nusing namespace std;\nconst int MAXN=2e5+10;\nint n,q,f[MAXN];\nint L[MAXN],R[MAXN],tot;\nll sum[MAXN],sz[MAXN];\nint fa[MAXN],vis[MAXN];\nvector<int>e[MAXN];\nstruct Qry{\n\tint v,k,idx;ll ans;\n}qry[MAXN];\nstruct BIT{\n\tll tree[MAXN];\n\tvoid update(int x,ll val){for(;x<=n;x+=lowbit(x))tree[x]+=val;}\n\tll query(int x){ll ret=0;for(;x;x-=lowbit(x))ret+=tree[x];return ret;}\n\tll query(int L,int R){return query(R)-query(L-1);}\n}t1,t2; \nstruct Node{\n\tll val;int idx;\n\tbool operator<(const Node& n2)const{return val<n2.val;}\n};\npriority_queue<Node>pq;\nbool cmp1(const Qry& q1,const Qry& q2){return q1.k>q2.k;}\nbool cmp2(const Qry& q1,const Qry& q2){return q1.idx<q2.idx;}\nint Find(int x){\n\tif(fa[x]==x)return x;\n\treturn fa[x]=Find(fa[x]);\n}\nvoid Merge(int x,int y){if(Find(x)==Find(y))return;fa[Find(x)]=Find(y);}\nll D(ll x,ll y){if(y<0)x=-x,y=-y;return (x<0)?(-((-x+y-1)/y)):(x/y);}\nvoid dfs(int u){\n\tL[u]=++tot;\n\tfor(auto v:e[u]){if(v==f[u])continue;\n\t\tf[v]=u;dfs(v);sum[u]++;\n\t}\n\tR[u]=tot;\n}\nvoid solve(){\n\tdfs(1);\n\trep(i,1,n){fa[i]=i;sz[i]=1;}\n\trep(i,1,n){pq.push((Node){D(sum[i]-sz[i],sz[i]),i});}\n\trep(i,1,q){\n\t\tQry& now=qry[i];\n\t\twhile(pq.size()){\n\t\t\tNode cur=pq.top();if(cur.val<now.k)break;\n\t\t\tpq.pop();\n\t\t\tif(vis[cur.idx])continue;\n\t\t\tvis[cur.idx]=1;\n\t\t\tif(cur.idx==1)continue;\n\t\t\tMerge(cur.idx,f[cur.idx]);\n\t\t\tint top=Find(cur.idx);\n\t\t\tll nsz=sz[cur.idx]+t1.query(L[cur.idx],R[cur.idx]);\n\t\t\tll nsum=sum[cur.idx]+t2.query(L[cur.idx],R[cur.idx]);\n\t\t\tt1.update(L[f[cur.idx]],nsz);\n\t\t\tif(f[top])t1.update(L[f[top]],-nsz);\n\t\t\tt2.update(L[f[cur.idx]],nsum);\n\t\t\tif(f[top])t2.update(L[f[top]],-nsum);\n\t\t\tif(vis[top])continue;\n\t\t\tnsz=sz[top]+t1.query(L[top],R[top]);\n\t\t\tnsum=sum[top]+t2.query(L[top],R[top]);\n\t\t\tpq.push((Node){D(nsum-nsz,nsz),top});\n\t\t}\n\t\tint u=now.v;\n\t\tll nsz=sz[u]+t1.query(L[u],R[u]);\n\t\tll nsum=sum[u]+t2.query(L[u],R[u]);\n\t\tnow.ans=nsum-nsz*now.k+now.k-nsz+1;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\trep(i,1,n-1){\n\t\tint u,v;scanf(\"%d%d\",&u,&v);\n\t\te[u].pb(v);e[v].pb(u);\n\t}\n\tscanf(\"%d\",&q);\n\trep(i,1,q){\n\t\tscanf(\"%d%d\",&qry[i].v,&qry[i].k);\n\t\tqry[i].idx=i;\n\t}\n\tsort(qry+1,qry+1+q,cmp1);\n\tsolve();\n\tsort(qry+1,qry+1+q,cmp2);\n\trep(i,1,q){\n\t\tprintf(\"%lld\\n\",qry[i].ans);\n\t}\n\n\treturn 0;\n}\n\n```",
        "postTime": 1635859176,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u3010CF1606F\u3011Tree Queries"
    },
    {
        "content": "\u5206\u4eab\u4e00\u4e2a\u5927\u6982\u662f\u6700\u5feb\u4e5f\u662f\u6700\u597d\u5199\u7684\u505a\u6cd5\u5427\uff0c\u662f\u4e00\u4f4d\u7ea2\u540d\u5927\u54e5\u5728\u8bc4\u8bba\u533a\u63d0\u5230\u7684\uff0c\u4e0d\u8fc7\u4ed6\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u3002\n\n\u4ee4 $dp[u][k]$ \u4e3a\u8be2\u95ee $(u, k)$ \u7684\u7b54\u6848\uff0c\u90a3\u4e48\u6709 $dp[u][k] = \\sum \\limits_{v \\in son(u)} \\max(1, dp[v][k] - k)$\n\n\u663e\u7136 $dp[u][k] \\ge |son(u)|$\uff0c\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3 $k$ \u5f88\u5927\u7684\u65f6\u5019\u5927\u591a\u6570\u70b9\u597d\u50cf\u90fd\u4f1a\u53d6\u5230\u7b49\u53f7\uff0c\u6240\u4ee5\u53ef\u4ee5\u53ea\u8ba1\u7b97\u53d6\u5230\u5927\u4e8e\u53f7\u7684 $dp$, \u5269\u4e0b\u7684\u90fd\u7528 $|son(u)|$ \u4ee3\u66ff\u3002\n\n\u4e8b\u5b9e\u4e0a\u6700\u591a\u53ea\u6709 $O(n \\log n)$ \u5bf9 $(u, k)$ \u4f1a\u53d6\u5230\u5927\u4e8e\u53f7\u3002\u4e3a\u4e86\u8bc1\u660e\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u56fa\u5b9a\u7684 $k$ \u6700\u591a\u80fd\u6709\u591a\u5c11 $u$ \u53d6\u5230\u5927\u4e8e\u53f7\u3002\n\n\u5bf9\u4e8e\u67d0\u68f5\u6811\uff0c\u8003\u8651\u53d6\u5230\u5927\u4e8e\u53f7\u7684\u6700\u6df1\u7684\u70b9 $v$, \u663e\u7136\u5b83\u6709\u4e00\u4e2a\u513f\u5b50 $w$ \u6ee1\u8db3 $|son(w)| \\gt k + 1$\u3002\u5982\u679c\u5b83\u6709\u4e0d\u6b62\u4e00\u4e2a\u513f\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u4fdd\u7559\u4e00\u4e2a\uff0c\u628a\u5176\u4ed6\u6240\u6709\u7684\u70b9\u90fd\u53d8\u6210\u4fdd\u7559\u4e0b\u6765\u7684\u90a3\u4e2a\u513f\u5b50\u7684\u513f\u5b50\uff0c\u800c $dp[v][k]$ \u4e0d\u51cf\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651 $v$ \u7684\u7236\u4eb2 $p$\u3002\u8fd9\u91cc $p$ \u53ef\u80fd\u8fd8\u6709\u4e00\u4e9b\u53d6\u5230\u5927\u4e8e\u53f7\u7684\u513f\u5b50\uff0c\u6211\u4eec\u628a\u9664\u4e86 $v$ \u4e4b\u5916\u7684\u5b50\u6811\u4e2d\uff0c\u53d6\u5230\u5927\u4e8e\u53f7\u7684\u70b9\u585e\u5230 $p$ \u548c $v$ \u4e4b\u95f4\uff0c\u53d6\u5230\u7b49\u4e8e\u53f7\u7684\u70b9\u585e\u5230 $w$ \u4e0b\u9762\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53d6\u5230\u5927\u4e8e\u53f7\u7684\u70b9\u7684\u6570\u91cf\u4e0d\u51cf\uff0c$dp[p][k]$ \u4e5f\u4e0d\u51cf\u3002\n\n\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u5c31\u628a\u4efb\u610f\u4e00\u68f5\u6811\u53d8\u6210\u4e86\u4e00\u4e2a\u626b\u628a\u578b\uff0c\u4ece $1$ \u5230 $w$ \u6784\u6210\u4e00\u6761\u94fe\uff0c\u6240\u6709\u7684\u53f6\u5b50\u90fd\u63a5\u5728 $w$ \u4e0a\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u53d6\u5230\u5927\u4e8e\u53f7\u7684 $u$ \u4e0d\u51cf\uff0c\u56e0\u6b64\u6211\u4eec\u8bc1\u660e\u4e86\u8fd9\u6837\u7684\u5f62\u72b6\u80fd\u4f7f $u$ \u7684\u6570\u91cf\u6700\u5927\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u6c42\u51fa\u6709\u591a\u5c11\u70b9\u53d6\u5230\u5927\u4e8e\u53f7\u3002\u5047\u8bbe\u53f6\u5b50\u6570\u91cf\u662f $m$, \u90a3\u4e48 $dp[v][k] = m - k, dp[fa(v)][k] = m - 2k, ...$ \uff0c\u800c\u6bcf\u4e2a\u70b9\u7684 $son$ \u90fd\u4e3a $1$, \u6240\u4ee5\u6700\u591a\u6709 $\\frac m k \\lt \\frac n k$ \u4e2a\u70b9\u53d6\u5f97\u5927\u4e8e\u53f7\u3002\u5bf9\u6240\u6709\u7684 $k$ \u6c42\u548c\u5c31\u53ef\u4ee5\u5f97\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 $(u, k)$ \u53ea\u6709 $O(n \\log n)$ \u5bf9\u3002\n\n\u8bc1\u660e\u5b8c\u8fd9\u4e2a\u7ed3\u8bba\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167\u4e0a\u9762\u7684\u5f0f\u5b50\u8bb0\u5fc6\u5316\u641c\u7d22\u5373\u53ef\uff0c\u7136\u540e\u6bcf\u6b21\u53ea\u628a $\\gt k+1$ \u7684 $dp$ \u503c\u4f20\u7ed9\u7236\u4eb2\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define sz(x) int(x.size())\n#define endl '\\n'\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> VI;\n\nconst int maxn = 2e5 + 5;\n\nVI dp[maxn];\nVI ans[maxn];\nVI g[maxn];\nint son[maxn];\n\nvoid dfs(int u, int f)\n{\n    son[u] = sz(g[u]) - (u != 1);\n    int sz = son[u];\n    for(int v : g[u])\n    {\n        if(v == f) continue;\n        dfs(v, u);\n        sz = max(sz, sz(dp[v]));\n    }\n    dp[u].resize(sz);\n    VI add(sz + 1);\n    for(int v : g[u])\n    {\n        if(v == f) continue;\n        for(int i = 0; i < sz(dp[v]); i++)\n            dp[u][i] += dp[v][i] - i;\n        add[sz(dp[v])]++;\n    }\n    for(int i = 0; i < sz; i++)\n    {\n        if(i) add[i] += add[i - 1];\n        dp[u][i] += add[i];\n    }\n    ans[u] = dp[u];\n    while(sz(dp[u]) && dp[u].back() <= sz(dp[u]))\n        dp[u].pop_back(); \n}\n\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    int n;\n    cin >> n;\n    for(int i = 1; i < n; i++)\n    {\n        int u, v;\n        cin >> u >> v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    dfs(1, 0);\n    int q;\n    cin >> q;\n    while(q--)\n    {\n        int u, k;\n        cin >> u >> k;\n        if(k >= sz(ans[u]))\n            cout << son[u] << endl;\n        else\n            cout << ans[u][k] << endl;\n    }\n}\n```\n",
        "postTime": 1639065222,
        "uid": 94690,
        "name": "\u5e3d\u5b50",
        "ccfLevel": 0,
        "title": "CF1606F \u9898\u89e3"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/1606/problem/F) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1606F)\n\n\u663e\u7136\u6211\u4eec\u9009\u62e9\u5220\u9664\u7684\u70b9\u8fde\u540c $u$ \u4f1a\u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5426\u5219\u6211\u4eec\u5982\u679c\u9009\u62e9\u4e0d\u5220\u9664\u4e0d\u4e0e $u$ \u5728\u540c\u4e00\u8fde\u901a\u5757\u4e2d\u7684\u70b9\uff0c\u7b54\u6848\u4e00\u5b9a\u66f4\u4f18\u3002\n\n\u6ce8\u610f\u5230\u5982\u679c\u6211\u4eec\u9009\u62e9\u5220\u9664 $u$ \u7684\u67d0\u4e2a\u513f\u5b50 $v$\uff0c\u90a3\u4e48\u7b54\u6848\u7684\u589e\u91cf\u4e3a $chd_v-1-k$\uff0c\u5176\u4e2d $chd_v$ \u4e3a\u8282\u70b9 $v$ \u513f\u5b50\u7684\u4e2a\u6570\u3002\u800c\u521d\u59cb\u65f6\u523b\u7b54\u6848\u4e3a $chd_u$ \u662f\u4e2a\u5b9a\u503c\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u4efb\u52a1\u53ef\u4ee5\u7b49\u6548\u4e8e\uff0c\u7ed9\u6bcf\u4e2a\u70b9\u8d4b\u4e0a\u4e00\u4e2a\u70b9\u6743 $chd_u-1-k$\uff0c\u7136\u540e\u8981\u627e\u5230\u4e00\u4e2a\u4ee5 $u$ \u4e3a\u6839\u7684\u6811\u4e0a\u8fde\u901a\u5757\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u9664\u53bb\u70b9 $u$ \u4e4b\u5916\u5176\u4ed6\u70b9\u70b9\u6743\u4e4b\u548c\u5c3d\u53ef\u80fd\u5927\u3002\n\n\u56e0\u6b64\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u590d\u6742\u5ea6 $\\Theta(n^2)$ \u7684\u505a\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $k$ \u90fd\u8dd1\u4e00\u904d\u6811\u5f62 $dp$\uff0c\u5373\u8bbe $dp_u$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u8fde\u901a\u5757\u70b9\u6743\u4e4b\u548c\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u663e\u7136\u6709\u8f6c\u79fb $dp_u=chd_u-1-k+\\sum\\limits_{v\\in son_u}\\max(dp_v,0)$\u3002\u6ce8\u610f\u5230\u6211\u4eec\u9009\u51fa\u7684\u6811\u4e0a\u8fde\u901a\u5757\u8fb9\u754c\u4e0a\uff08\u4e5f\u5c31\u662f\u6240\u6709\u6ee1\u8db3 $x$ \u5728\u6811\u4e0a\u8fde\u901a\u5757\u4e2d\uff0c\u4f46 $x$ \u7684\u6240\u6709\u513f\u5b50\u90fd\u4e0d\u5728\u6811\u4e0a\u8fde\u901a\u5757\uff09\u4e2d\u7684\u70b9\u7684\u70b9\u6743\u5fc5\u5b9a\u90fd\u662f\u6b63\u7684\uff0c\u5426\u5219\u6211\u4eec\u6263\u6389\u90a3\u4e9b\u70b9\u6743\u975e\u6b63\u4e14\u5728\u8fde\u901a\u5757\u8fb9\u754c\u4e0a\u7684\u70b9\uff0c\u7b54\u6848\u80af\u5b9a\u53d8\u5f97\u66f4\u4f18\u3002\u56e0\u6b64\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a $k$ \u5c06\u6240\u6709\u70b9\u6743\u4e3a\u6b63\u7684\u70b9\u62ce\u51fa\u6765\u5efa\u4e00\u68f5\u865a\u6811\u2014\u2014\u7531\u4e8e $\\sum\\limits_{i=1}^nchd_i=n-1$\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6240\u6709 $k$\uff0c\u70b9\u6743\u4e3a\u6b63\u7684\u70b9\u7684\u603b\u4e2a\u6570\u662f $\\Theta(n)$ \u7684\uff0c\u7136\u540e\u5bf9\u5b83\u4eec\u8dd1\u6811\u5f62 $dp$\uff0c\u7136\u540e\u6bcf\u6b21\u67e5\u8be2\u4e00\u4e2a\u70b9 $u$ \u4e3a\u6839\u7684\u8fde\u901a\u5757\u70b9\u6743\u4e4b\u548c\u7684\u6700\u5927\u503c\u65f6\uff0c\u5982\u679c\u70b9 $u$ \u672c\u8eab\u5c31\u5728\u865a\u6811\u4e0a\uff0c\u76f4\u63a5\u8fd4\u56de $u$ \u7684 DP \u503c\u5373\u53ef\uff0c\u5426\u5219\u6211\u4eec\u627e\u5230 $u$ \u5728\u865a\u6811\u4e0a\u6240\u5728\u7684\u94fe\u4e0b\u65b9\u7684\u8282\u70b9 $v$\u2014\u2014\u8fd9\u4e2a\u53ef\u4ee5\u62ff\u4e2a `set` \u5b58\u50a8\u6240\u6709\u5728\u865a\u6811\u4e0a\u7684\u8282\u70b9\u7684 DFS \u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u5728 `set` \u4e2d `lower_bound`\u3002\u90a3\u4e48\u4ee5 $u$ \u4e3a\u6839\u7684\u8fde\u901a\u5757\u70b9\u6743\u548c\u7684\u6700\u5927\u503c\u5c31\u662f $dp_v$ \u52a0\u4e0a $fa_v\\to u$ \u8fd9\u6bb5\u8def\u5f84\u548c\u7684\u70b9\u6743\u548c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u200b\u200b\u3002\n\n```cpp\nconst int MAXN=2e5;\nconst int LOG_N=18;\nint n,qu,hd[MAXN+5],to[MAXN*2+5],nxt[MAXN*2+5],ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint chd[MAXN+5],dep[MAXN+5],fa[MAXN+5][LOG_N+2];\nint dfn[MAXN+5],tim=0,rid[MAXN+5],edt[MAXN+5];\nvoid dfs0(int x,int f){\n\tfa[x][0]=f;rid[dfn[x]=++tim]=x;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\tchd[x]++;dep[y]=dep[x]+1;dfs0(y,x);\n\t} edt[x]=tim;\n}\nint sum_chd[MAXN+5];\nvoid dfs_chd(int x,int f){\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\tsum_chd[y]=sum_chd[x]+chd[y];\n\t\tdfs_chd(y,x);\n\t}\n}\nvoid lca_init(){\n\tdep[1]=1;dfs0(1,0);\n\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j<=n;j++)\n\t\tfa[j][i]=fa[fa[j][i-1]][i-1];\n}\nint getlca(int x,int y){\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=LOG_N;~i;i--) if(dep[x]-(1<<i)>=dep[y]) x=fa[x][i];\n\tif(x==y) return x;\n\tfor(int i=LOG_N;~i;i--) if(fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nvector<int> pos[MAXN+5];\nint stk[MAXN+5],tp=0;set<int> st;\nvector<pii> qv[MAXN+5];\nll calc_sum(int u,int v,int k){//u is ancestor of v\n\treturn (sum_chd[v]-sum_chd[u])-1ll*(k+1)*(dep[v]-dep[u]);\n}\nint calc_val(int u,int k){return chd[u]-1-k;}\nvector<int> g[MAXN+5];\nll dp[MAXN+5],res[MAXN+5];\nvoid insert(int x){\n\tif(!tp) return stk[++tp]=x,void();\n\tint lc=getlca(x,stk[tp]);\n//\tprintf(\"LCA of %d %d is %d\\n\",x,stk[tp],lc);\n//\tprintf(\"stack: \");\n//\tfor(int i=1;i<=tp;i++) printf(\"%d%c\",stk[i],\" \\n\"[i==tp]);\n\twhile(tp>1&&dep[stk[tp-1]]>dep[lc]){\n//\t\tprintf(\"adde %d %d\\n\",stk[tp-1],lc);\n\t\tg[stk[tp-1]].pb(stk[tp]);--tp;\n\t}\n\tif(tp&&dep[stk[tp]]>dep[lc]){\n//\t\tprintf(\"adde %d %d\\n\",lc,stk[tp]);\n\t\tg[lc].pb(stk[tp--]);\n\t}\n\tif(!tp||stk[tp]!=lc) stk[++tp]=lc;\n\tstk[++tp]=x;\n}\nvoid fin(){\n\twhile(tp>=2){\n//\t\tprintf(\"adde %d %d\\n\",stk[tp-1],stk[tp]);\n\t\tg[stk[tp-1]].pb(stk[tp]);--tp;\n\t} tp=0;\n}\nvoid dfs_dp(int x,int k){\n\tdp[x]=calc_val(x,k);st.insert(dfn[x]);\n\tfor(int y:g[x]){\n\t\tdfs_dp(y,k);\n\t\tdp[x]+=max(dp[y]+calc_sum(x,y,k)-calc_val(y,k),0ll);\n//\t\tprintf(\"calc_sum %d %d %d = %lld\\n\",x,y,k,calc_sum(x,y,k));\n\t} //printf(\"DP %d %lld\\n\",x,dp[x]);\n}\nvoid clr(int x){for(int y:g[x]) clr(y);g[x].clear();}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,u,v;i<n;i++) scanf(\"%d%d\",&u,&v),adde(u,v),adde(v,u);\n\tlca_init();sum_chd[1]=chd[1];dfs_chd(1,0);scanf(\"%d\",&qu);\n//\tfor(int i=1;i<=n;i++) printf(\"chd[%d]=%d\\n\",i,chd[i]);\n\tfor(int i=1;i<=n;i++) for(int j=0;j<chd[i];j++) pos[j].pb(i);\n\tfor(int i=1,u,k;i<=qu;i++) scanf(\"%d%d\",&u,&k),qv[k].pb(mp(u,i));\n\tfor(int i=0;i<=MAXN;i++){\n\t\tst.clear();\n\t\tif(!pos[i].empty()){\n//\t\t\tprintf(\"solving %d\\n\",i);\n\t\t\tsort(pos[i].begin(),pos[i].end(),[&](int x,int y){return dfn[x]<dfn[y];});\n\t\t\tif(pos[i][0]!=1) insert(1);\n\t\t\tfor(int x:pos[i]) insert(x);\n\t\t\tfin();dfs_dp(1,i);\n\t\t}\n\t\tfor(pii p:qv[i]){\n\t\t\tint u=p.fi,id=p.se;\n\t\t\tset<int>::iterator it=st.lower_bound(dfn[u]);\n\t\t\tif(it==st.end()||(*it)>edt[u]) res[id]=chd[u];\n\t\t\telse{\n\t\t\t\tint pt=rid[*it];\n//\t\t\t\tprintf(\"%d %d\\n\",id,pt);\n//\t\t\t\tprintf(\"%lld\\n\",calc_sum(fa[u][0],fa[pt][0],i));\n\t\t\t\tres[id]=chd[u]+max(0ll,dp[pt]+calc_sum(fa[u][0],fa[pt][0],i)-calc_val(u,i));\n\t\t\t}\n\t\t}\n\t\tclr(1);\n\t}\n\tfor(int i=1;i<=qu;i++) printf(\"%lld\\n\",res[i]);\n\treturn 0;\n}\n/*\n11\n1 2\n2 3\n2 4\n1 5\n5 6\n5 7\n7 8\n7 9\n7 10\n1 11\n4\n1 0\n1 1\n5 2\n11 0\n*/\n```\n\n",
        "postTime": 1635766341,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1606F Tree Queries"
    },
    {
        "content": "\u6ce8\u610f\u5230\uff0c\u4e00\u68f5\u70b9\u6570\u4e3a $n$ \u7684\u5b50\u6811\uff0c\u6700\u591a\u4f1a\u64cd\u4f5c $\\dfrac{n}{k}$ \u6b21\u3002\u8fd9\u4e2a $\\dfrac{n}{k}$ \u975e\u5e38\u7684\u8e4a\u8df7\u3002\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\n\n- $k \\leq \\sqrt n$\uff1a\u6ce8\u610f\u5230\u56e0\u4e3a $k$ \u7684\u53d6\u503c\u53ea\u6709 $\\sqrt n +1$ \u4e2a\uff0c\u6211\u4eec\u5b9a\u4e49 $dp_{i,j}$ \u4e3a\uff0c\u7ed3\u70b9 $i$ \u4e3a\u6839\uff0c\u5f53 $k=j$ \u7684\u65f6\u5019\uff0c\u6700\u5927\u7684\u7b54\u6848\u662f\u591a\u5c11\u3002\u5728\u8ba1\u7b97 $dp_{u,i}$ \u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u4e00\u68f5\u5b50\u6811\uff0c\u53ea\u6709\u8981\uff08\u8d21\u732e\u4e3a $1$\uff0c\u82b1\u8d39\u4e3a $0$\uff09\u6216\u8005\u4e0d\u8981\uff08\u8d21\u732e\u4e3a $dp_{v,i}$\uff0c\u82b1\u8d39\u4e3a $i$\uff09\u4e24\u79cd\u9009\u62e9\u3002\u76f4\u63a5\u9009\u6700\u5927\u503c\u8f6c\u79fb\uff1b   \n- $k > \\sqrt n$\uff1a\u6ce8\u610f\u4e0a\u9762\u7684\u8fc7\u7a0b\u662f\uff0c\u77e5\u9053 $k$\uff0c\u8f6c\u79fb $c(v) - mk$\uff1b\u8fd9\u91cc\u65e0\u6cd5\u786e\u5b9a $k$\uff0c\u6211\u4eec\u5047\u8bbe\u77e5\u9053 $m$\uff0c\u5373\u5b9a\u4e49 $dp_{i,j}$ \u4e3a\uff0c\u7ed3\u70b9 $i$ \u4e3a\u6839\uff0c\u5df2\u7ecf\u7ecf\u8fc7\u4e86 $j$ \u6b21\u64cd\u4f5c\uff0c$c(v)$ \u7684\u6700\u5927\u503c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8868\u793a\u7b54\u6848\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u6811\u4e0a\u80cc\u5305\u3002\u52a0\u4e0a\u4e0a\u754c\u4f18\u5316\u4e4b\u540e\u8f6c\u79fb\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\sqrt n)$\u3002\n\n\u7136\u540e\u6bd4\u8f83\u5361\u7a7a\u95f4\uff0c\u6570\u7ec4\u91cd\u590d\u7528\u3002\u7ed3\u675f\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar buf[1<<21],*p1=buf,*p2=buf;\n#define getchar() (p1==p2 && (p2=(p1=buf)+fread(buf,1,1<<18,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\tc=getchar();\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x;\n}\nvoid write(int x)\n{\n\tif(x>9)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nstruct Query{int v,k,ans;}ret[200005];\nvector<int> G[200005];\nint n,Sqr,dp[200005][455],siz[200005],tmp[455];\nvoid dfs1(int now,int pre)\n{\n\tfor(auto st:G[now])\n\t{\n\t\tif(st==pre)\tcontinue;\n\t\tdfs1(st,now);\n\t\tfor(int j=0;j<=Sqr;++j)\tdp[now][j]+=max(1,dp[st][j]-j);\n\t}\n}\nconst int inf=1e9;\nvoid dfs2(int now,int pre)\n{\n\tsiz[now]=1;\n\tfor(int i=0;i<=Sqr;++i)\tdp[now][i]=-inf;\n\tdp[now][0]=0;\n\tfor(auto st:G[now])\n\t{\n\t\tif(st==pre)\tcontinue;\n\t\tdfs2(st,now);\n\t\tfor(int i=0;i<=Sqr;++i)\ttmp[i]=-inf;\n\t\tfor(int i=0;i<=min(siz[now],Sqr);++i)\tfor(int j=0;j<=min(siz[st],Sqr) && i+j<=Sqr;++j)\ttmp[i+j]=max(tmp[i+j],dp[now][i]+1),tmp[i+j+1]=max(tmp[i+j+1],dp[now][i]+dp[st][j]);\n\t\tmemcpy(dp[now],tmp,sizeof tmp);\n\t\tsiz[now]+=siz[st];\n\t}\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint u=read(),v=read();\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tSqr=sqrt(n);\n\tint q=read();\n\tfor(int i=1;i<=q;++i)\tret[i].v=read(),ret[i].k=read();\n\tdfs1(1,0);\n\tfor(int i=1;i<=q;++i)\tif(ret[i].k<=Sqr)\tret[i].ans=dp[ret[i].v][ret[i].k];\n\tdfs2(1,0);\n\tfor(int i=1;i<=q;++i)\tif(ret[i].k>Sqr)\tfor(int j=0;j<=Sqr;++j)\tret[i].ans=max(ret[i].ans,dp[ret[i].v][j]-j*ret[i].k);\n\tfor(int i=1;i<=q;++i)\twrite(ret[i].ans),puts(\"\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1636253052,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u5403\u6211\u4e00\u621f\uff01"
    }
]