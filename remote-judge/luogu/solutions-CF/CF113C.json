[
    {
        "content": "\u9996\u5148\u4e86\u89e3\u4e00\u4e2a\u5b9a\u7406\n#### \u8d39\u9a6c\u4e8c\u5e73\u65b9\u5b9a\u7406\n1. \u96642\u4ee5\u5916\u7684\u6240\u6709\u7684\u7d20\u6570\u90fd\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b:4k + 1,4k + 3\n2. 4k + 1\u53ef\u4ee5\u8868\u793a\u4e3a2\u4e2a\u6574\u6570\u7684\u5e73\u65b9\u548c,\u4f464k + 3\u4e0d\u884c\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5f00\u59cb\u7b5b\u7d20\u6570\u5566~\n\n\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927int\u5b58\u4e0d\u4e0b,\u6545\u91c7\u7528bitset(\u6309\u4f4d\u5b58\u50a8,\u7a7a\u95f4\u4f18\u79c0)\n\n\n------------\n\n```cpp\n#include <bitset>\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define rg register\nint tot,pri[23333333],ans;\nbitset <300005005> flag;//\u6211\u89c9\u5f97bitset\u662f\u4e2a\u597d\u4e1c\u897f \nvoid make_prime_list(int r)\n{\n    for (rg int i = 2;i <= r;++i)\n    {\n        if (!flag[i]) pri[++tot] = i;\n        for (rg int j = 1;j <= tot && pri[j] * i <= r;++j)\n        {\n            flag[i * pri[j]] = true;\n            if (i % pri[j] == 0) break;\n        }\n    }\n}\nint l,r;\nint main()\n{\n    scanf(\"%d%d\",&l,&r);\n    make_prime_list(r);\n    for (rg int i = 1;i <= tot;++i)\n    {\n    \t//\u8d39\u9a6c\u4e8c\u5e73\u65b9\u5b9a\u7406: \u96642\u4ee5\u5916\u7684\u6240\u6709\u7684\u7d20\u6570\u90fd\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b:4k + 1,4k + 3\n\t\t//4k + 1\u53ef\u4ee5\u8868\u793a\u4e3a2\u4e2a\u6574\u6570\u7684\u5e73\u65b9he,\u4f464k + 3\u4e0d\u884c \n        if (pri[i] < l) continue;\n        if (pri[i] % 4 == 1) ++ans;\n    }\n    if (l <= 2 && r >= 2) ++ans;\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1541252705,
        "uid": 118272,
        "name": "\u304f\u308d\u306d\u3053",
        "ccfLevel": 0,
        "title": "[CF113C] Double_Happiness \u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "\u7ecf\u8fc7\u624b\u7b97\u679a\u4e3e\u8fc7\u540e...\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u53d1\u73b0 \u7b26\u5408\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u7d20\u6570 \u662f\u53ef\u4ee5\u4ee54k+1\u7684\u5f62\u5f0f\u8868\u73b0\u51fa\u6765\u7684\n\u90a3\u4e48\u95ee\u9898\u53c8\u56de\u5230\u4e86\u66f4\u6839\u672c\u7684\u5730\u65b9 \u6211\u4eec\u53ea\u9700\u8981\u7b5b\u51fal~r\u91cc\u9762\u7684\u7d20\u6570\u6709\u54ea\u4e9b \u518d\u5224\u65ad\u6bcf\u4e2a\u7d20\u6570\u662f\u4e0d\u662f\u7b26\u54084k+1\u7684\u5f62\u5f0f\n\u8fd9\u4e2a\u5730\u65b9\u6211\u9009\u62e9\u4e86\u6b27\u62c9\u7ebf\u6027\u7b5b\u7d20\u6570 \n\u53e6\u5916 \u6570\u636e\u5f88\u5927 int\u5f00\u4e0d\u4e0b \u53ea\u80fd\u9009\u7528bitset\n```cpp\n#include<stdio.h>\n#include<bitset>\nusing namespace std;\nint ans=0;\nint prime[20000005],l,r,cnt;\nbitset <300000005>\tis;\ninline void Euler_shai(int l,int r)\n{\n\tis[0]=is[1]=1;//1\u4ee3\u8868\u4e0d\u662f \n\tfor(register int i=2;i<=r;i++)\n\t{\n\t\tif(is[i]==0)\tprime[++cnt]=i;\n\t\tfor(register int j=1;j<=cnt&&i*prime[j]<=r;j++)\n\t\t{\n\t\t\tis[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0)\tbreak;//\u5df2\u7ecf\u7b5b\u8fc7 \n\t\t}\n\t} \n}\nint main()\n{ \n\tscanf(\"%d%d\",&l,&r);\n\tEuler_shai(l,r);\n\t\n\tfor(register int i=5;i<=r;i+=4)\n\t{\n\t\tif(i>=l&&is[i]==0)\t++ans;\n\t}\n\tif(l<=2&&r>=2)\tans+=1;//\u7279\u52242\u7684\u60c5\u51b5\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1531790017,
        "uid": 60299,
        "name": "Patrickpwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF113C \u3010Double Happiness\u3011"
    },
    {
        "content": "\u5728\u6570\u5b66\u4e2d\uff0c\u6709\u4e00\u4e2a\u8d39\u9a6c\u4e8c\u5e73\u65b9\u5b9a\u7406\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff1a\n\u96642\u4ee5\u5916\u7684\u6240\u6709\u7684\u7d20\u6570\u90fd\u53ef\u4ee5\u5206\u4e3a $4x+1$ \u548c $4x+3$ \u4e24\u7c7b\u3002\u5176\u4e2d $4x+1$ \u53ef\u4ee5\u8868\u793a\u4e3a $2$ \u4e2a\u6574\u6570\u7684\u5e73\u65b9\u548c\u3002\n\n\u8bc1\u660e\uff1a<https://zhuanlan.zhihu.com/p/382712118>\n\n\u90a3\u4e48\u9898\u76ee\u5c31\u53d8\u6210\u4e86\u8ba9\u6211\u4eec\u6c42 $[l,r]$ \u4e4b\u95f4\u6709\u591a\u5c11\u7d20\u6570\u6ee1\u8db3 $t=4x+1$\u3002\n\n\u8fd9\u6837\u76f4\u63a5\u6b27\u62c9\u7b5b\u6cd5\u7b5b\u4e00\u4e0b\u7d20\u6570\uff0c\u7136\u540e\u6328\u4e2a\u5224\u65ad\u5373\u53ef\u3002\n\n\u7b5b\u7d20\u6570\u6a21\u677f\uff1a<https://www.luogu.com.cn/problem/P3383>\n\n\u6ce8\u610f\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u975e\u5e38\u5361\u3002`bool` \u7c7b\u578b\u5f00\u4e0d\u4e0b $3\\times 10^{8}$ \u53ef\u4ee5\u7528 `bitset`\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<bitset>\n#define max(a,b) ((a)>(b)?(a):(b))\n#define re register int\n#pragma GCC optimize(2,3,\"inline\",\"-Ofast\")\nint prime[20000005],cnt,l,r,ans,i,j;\nstd::bitset<300000001> is_prime;\ninline gnt(int l){\n    while(l%4!=1) ++l;\n    return max(5,l);\n}\nint main(){\n\tscanf(\"%d%d\",&l,&r);\n\tfor(i=2;i<=r;++i){\n\t\tif(!is_prime[i]) prime[++cnt]=i;\n\t\tfor(j=1;j<=cnt&&i*prime[j]<=r;++j){\n        \tis_prime[i*prime[j]]=1;\n        \tif(i%prime[j]==0) break;\n\t\t}\n\t}\n   //\u7b5b\u7d20\u6570\n\tfor(i=gnt(l);i<=r;i+=4) if(is_prime[i]==0) ++ans;\n\tprintf(\"%d\",ans+(l<=2&&r>=2));//\u52a0\u4e0a1^2+1^2=2\n\treturn 0;\n   //\u8fd9\u4efd\u4ee3\u7801\u8981 C++20 \u624d\u80fd\u8fc7\n}\n```",
        "postTime": 1670249182,
        "uid": 527598,
        "name": "FReQuenter",
        "ccfLevel": 0,
        "title": "CF113C Double Happiness \u9898\u89e3"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\n> \u9ad8\u65af\u7d20\u6570\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u7c7b\u503c\u4e3a\u5b9e\u6570\u4f46\u662f\u6269\u5c55\u5230\u4e86\u590d\u6570\u57df\u7684\u7d20\u6570\u3002\u5176\u4e0d\u80fd\u88ab\u5206\u89e3\u4e3a\u5982 $(a+b\\mathrm{i})(a-b\\mathrm{i})$ \u8fd9\u6837\u7684\u5171\u8f6d\u4e58\u79ef\u7684\u5f62\u5f0f\uff0c\u5728\u5b9e\u6570\u4e0a\u7684\u610f\u4e49\u5c31\u662f\u4e0d\u80fd\u88ab\u5206\u89e3\u6210 $a^2+b^2$ \u7684\u5f62\u5f0f\u3002\n\n\u663e\u7136\uff0c\u9898\u76ee\u5c31\u662f\u8ba9\u6211\u4eec\u6c42\uff0c\u5728 $[l,r]$ \u533a\u95f4\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u662f\u7d20\u6570\uff0c\u4f46\u662f\u5374\u4e0d\u662f\u9ad8\u65af\u7d20\u6570\u7684\u6570\u3002\n\n\u5bf9\u4e8e\u6b64\u95ee\u9898\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u5b9a\u7406\uff0c\u8d39\u9a6c\u4e8c\u5e73\u65b9\u548c\u5b9a\u7406\uff1a\n\n> \u5bf9\u4e8e\u4efb\u610f\u5927\u4e8e $2$ \u7684\u7d20\u6570 $p$ \uff0c\u90fd\u5c5e\u4e8e $p\\equiv1\\pmod 4$ \u548c $p\\equiv 3\\pmod 4$ \u4e2d\u7684\u4e00\u7c7b\u3002\u82e5\u8fd9\u4e2a\u7d20\u6570\u662f\u9ad8\u65af\u7d20\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u7d20\u6570 $p\\equiv3\\pmod 4$\u3002\n\n\u6b64\u5b9a\u7406\u8f83\u4e3a\u5bb9\u6613\u7406\u89e3\u7684\u8bc1\u660e\u8fc7\u7a0b\u5f88\u957f\uff0c\u8fd9\u91cc\u65e0\u6cd5\u5f88\u597d\u5730\u5199\u51fa\uff0c\u6b64\u9898\u89e3\u63d0\u4f9b\u4e00\u4e2a [link](https://www.bilibili.com/video/BV1YT4y1L7Mb?spm_id_from=333.337.search-card.all.click)\uff0c\u611f\u5174\u8da3\u53ef\u4ee5\u81ea\u5df1\u53bb\u4e86\u89e3\u3002\n\n\u6709\u4e86\u8d39\u9a6c\u4e8c\u5e73\u65b9\u548c\u5b9a\u7406\u4f5c\u4e3a\u57fa\u7840\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u7b54\u6848\u5c31\u662f $[l,r]$ \u4e2d\u6a21 $4$ \u540c\u4f59 $1$ \u7684\u7d20\u6570\u4e2a\u6570\uff0c\u76f4\u63a5\u4f7f\u7528\u6b27\u62c9\u7b5b\u7b5b\u51fa\u6240\u6709\u7d20\u6570\u8fdb\u884c\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c$2$ \u5e76\u4e0d\u662f\u9ad8\u65af\u6574\u6570\uff0c\u56e0\u4e3a\u5176\u53ef\u4ee5\u8868\u793a\u4e3a $2=(1+\\mathrm{i})(1-\\mathrm{i})$\u3002\n\n## CODE:\n\n```cpp\n#include  <bits/stdc++.h>\nusing namespace std;\nint l,r,ans=0;\nint prime[20000010],tot=0;\nbitset<int(4e8)> vis;\nvoid p()\n{\n\tvis[1]=1;\n\tfor(int i=2;i<=r;i++)\n\t{\n\t\tif(!vis[i])\n\t\t{\n\t\t\tprime[++tot]=i;\n\t\t\tif(i>=l) ans+=(i%4==1||i==2);\n\t\t}\n\t\tfor(int j=1;j<=tot&&prime[j]*i<=r;j++)\n\t\t{\n\t\t\tvis[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0) break;\n\t\t}\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin>>l>>r; \n\tp();\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1660276206,
        "uid": 488775,
        "name": "_SAI_",
        "ccfLevel": 5,
        "title": "CF113C Double Happiness"
    }
]