[
    {
        "content": "\u4e0d\u540c\u4e8e\u5176\u5b83\u7684\u9898\u89e3\uff0c\u4f7f\u7528\u6700\u5c0f\u8d39\u7528\u6d41\uff0c$\\Theta(n^2)$ \u5efa\u8fb9\uff0c\u8fd9\u79cd\u601d\u8def\u8fd8\u662f~~\u559c\u63d0\u6700\u52a3\u89e3~~\u6bd4\u8f83\u597d\u60f3\u7684\u3002\n\n# $\\texttt{Description}$\n\n\u7528 $\\operatorname{bitcnt}(x)$ \u8868\u793a\u6570 $x$ \u7684\u4e8c\u8fdb\u5236\u4e2d $1$ \u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u7528 `__builtin_popcount(x)` \u51fd\u6570\u89e3\u51b3\u3002\n\n\u9898\u610f\u662f\u7528 $m$ \u4e2a\u53d8\u91cf\u8f93\u51fa $n$ \u4e2a\u6570\uff0c\u90a3\u4e48\u62bd\u8c61\u6210\u4f7f\u7528 $m$ \u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u8986\u76d6 $n$ \u4e2a\u70b9\uff08\u56e0\u4e3a\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u76f8\u5f53\u4e8e\u5c06\u5176\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u663e\u7136\u4e00\u4e2a\u6570\u662f\u4e0d\u80fd\u8d4b\u503c\u7ed9\u4e24\u4e2a\u53d8\u91cf\u7684\uff0c\u6240\u4ee5\u4e0d\u76f8\u4ea4\uff09\uff0c\u63a5\u4e0b\u6765\u8fdb\u884c\u5efa\u6a21\u3002\n\n- \u5c06\u6bcf\u4e2a\u70b9 $v$ \u62c6\u6210 $v_1$ \u548c $v_2$\uff0c\u8868\u793a\u5230\u8fbe/\u51fa\u53d1\u3002\n\n- $S$ \u5411\u6bcf\u4e2a\u70b9 $v$ \u7684 $v_1$ \u8fde\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $\\operatorname{bitcnt}(a_v)$ \u7684\u8fb9\uff0c\u8868\u793a\u53ea\u6709\u4e00\u6761\u8def\u5f84\u53ef\u4ee5\uff08\u56e0\u4e3a\u662f\u4e0d\u76f8\u4ea4\uff0c\u4e0b\u540c\uff09\u4ece $v$ \u5f00\u59cb\uff0c\u4e14\u7ecf\u8fc7\u5b83\u9700\u8981 $\\operatorname{bitcnt}(a_v)$ \u7684\u8d39\u7528\uff08\u5373\u521d\u59cb\u8d4b\u503c\u6210 $a_v$ \u7684\u8d39\u7528\uff09\u3002\n\n- \u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9 $u,v\\,(u\\ne v)$\uff0c\u5982\u679c $a_u\\ne a_v$\uff0c\u90a3\u4e48\u4ece $u_2$ \u5411 $v_1$ \u8fde\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $\\operatorname{bitcnt}(a_v)$ \u7684\u8fb9\uff0c\u8868\u793a\u6709\u53ea\u4e00\u6761\u8def\u5f84\u53ef\u4ee5\u4ece $u$ \u51fa\u53d1\u5230\u8fbe $v$\uff0c\u5e76\u4e14\u7ecf\u8fc7\u5b83\u9700\u8981 $\\operatorname{bitcnt}(a_v)$ \u7684\u8d39\u7528\uff08\u5373\u5f53\u524d\u53d8\u91cf\u539f\u672c\u662f $a_u$\uff0c\u8d4b\u503c\u6210 $a_v$ \u9700\u8981\u8fd9\u4e48\u591a\u8d39\u7528\uff09\uff1b\u5426\u5219\u8fde\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff08\u5f53\u524d\u53d8\u91cf\u503c\u548c\u6211\u8981\u8d4b\u7684\u503c\u76f8\u540c\uff0c\u90a3\u4e48\u4e0d\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u5373\u53ef\u6210\u4e3a $a_v$\uff09\u3002\n\n- \u6bcf\u4e2a\u70b9 $v$ \u7684 $v_2$ \u5411 $T$ \u8fde\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u8868\u793a\u53ea\u6709\u4e00\u6761\u8def\u5f84\u5728 $v$ \u5904\u7ed3\u675f\u3002\n\n- \u6bcf\u4e2a\u70b9 $v$ \u7684 $v_1$ \u548c $v_2$ \u4e4b\u95f4\u8fde\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $-\\inf$ \u7684\u8fb9\u3002\u5bb9\u91cf\u4e3a $1$ \u5f88\u597d\u7406\u89e3\uff0c\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\u3002\u90a3\u8d39\u7528\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u8bbe\u7f6e\u5462\uff1f\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u662f\u6bcf\u4e2a\u6570\u90fd\u8f93\u51fa\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u5747\u9700\u7ecf\u8fc7\u4e00\u6b21\uff0c\u7136\u800c\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u5c31\u662f\u8d70\u4e86 $v_1\\rightarrow v_2$ \u8fd9\u6761\u8fb9\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u8fd9\u6761\u8fb9\u7684\u8d39\u7528\u8bbe\u7f6e\u6210\u8d4b\u65e0\u7a77\uff0c\u4fdd\u8bc1 $S$ \u5230 $T$ \u7684\u6700\u77ed\u8def\u5f84\u80af\u5b9a\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u4f7f\u5176\u88ab\u589e\u5e7f\uff0c\u7136\u800c\u5176\u53cd\u5411\u8fb9\u7684\u8d39\u7528\u5c31\u662f\u6b63\u65e0\u7a77\uff0c\u56e0\u6b64\u80af\u5b9a\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\uff0c\u4e0d\u4f1a\u88ab\u589e\u5e7f\uff0c\u5373\u4e0d\u4f1a\u88ab\u8fd4\u6094\u6389\uff0c\u8fdb\u800c\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u7ecf\u8fc7\u540e\u4e0d\u4f1a\u8fd4\u56de\u7ecf\u8fc7\u5b83\u7684\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8fdb\u800c\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u90fd\u88ab\u7ecf\u8fc7\u4e00\u6b21\u3002\n\n\u56e0\u4e3a\u6709 $m$ \u4e2a\u53d8\u91cf\uff0c\u5373 $m$ \u6761\u8def\u5f84\uff0c\u6240\u4ee5\u589e\u5e7f $m$ \u6b21\u3002\u5982\u679c\u53d1\u73b0\u67d0\u6b21\u589e\u5e7f\u6700\u77ed\u8def\u7684\u8d39\u7528\u5927\u4e8e\u7b49\u4e8e $0$ \u4e86\uff0c\u5c31\u8df3\u51fa\u3002\u56e0\u4e3a\u6700\u5c0f\u8d39\u7528\u6d41\u662f\u53ef\u4ee5\u4fdd\u8bc1 $n$ \u4e2a\u70b9\u90fd\u88ab\u7ecf\u8fc7\u7684\uff08\u4e0a\u9762\u8bf4\u4e86\uff09\uff0c\u7136\u800c\u5e0c\u671b\u5728\u6b64\u57fa\u7840\u4e0a\u8d39\u7528\u5c3d\u91cf\u5c0f\uff0c\u82e5\u8d39\u7528\u5927\u4e8e\u7b49\u4e8e $0$\uff0c\u8bf4\u660e\u8d39\u7528\u589e\u52a0\u4e86\uff0c\u4e0e\u76ee\u7684\u76f8\u53cd\uff08\u7b49\u4e8e $0$ \u76f8\u5f53\u4e8e\u6ca1\u52a0\uff0c\u90a3\u4e0d\u8003\u8651\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\u3002\u6b64\u540e\uff0c\u8d39\u7528\u53ea\u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u90a3\u4e48\u80af\u5b9a\u90fd\u662f\u4e0d\u9700\u8981\u4e86\u7684\u3002 \n\n\u6700\u7ec8\u7684\u6700\u5c0f\u4ee3\u4ef7\u5c31\u662f $\\text{mincost}+n\\times \\inf$\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e0a\u540e\u9762\u90a3\u4e00\u9879\u5462\uff1f\u56e0\u4e3a\u672c\u6765\u7ecf\u8fc7\u6bcf\u4e2a\u70b9\u5e94\u8be5\u4e0d\u4ed8\u8d39\u7528\uff0c\u7136\u800c\u6211\u5374\u4ed8\u4e86 $-\\inf$ \u7684\u8d39\u7528\uff0c\u76f8\u5f53\u4e8e\u5c11\u4ed8\u4e86 $\\inf$ \u7684\u8d39\u7528\uff0c\u5bf9\u4e8e $n$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u90fd\u5c11\u4ed8\u4e86\uff0c\u90a3\u4e48\u8981\u5c06 $n$ \u4e2a\u70b9\u5c11\u4ed8\u7684\u8d39\u7528\u90fd\u8fd8\u56de\u6765\u3002\n\n\u5982\u4f55\u8f93\u51fa\u65b9\u6848\uff1f\u6700\u540e\uff0c\u5728\u589e\u5e7f\u5b8c\u4e4b\u540e\u7684\u6b8b\u91cf\u7f51\u7edc\u4e2d\uff0c\u6bcf\u6761\u6d41\u6ee1\u7684\u6b63\u5411\u8fb9\u5c31\u662f\u6240\u6709\u8def\u5f84\u8986\u76d6\u4e0a\u7684\u8fb9\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 `dfs` \u904d\u5386\u8fd9\u4e9b\u8fb9\u627e\u5230\u8def\u5f84\uff0c\u5e76\u8bb0\u5f55\u8def\u5f84\u4e0a\u7684\u70b9\u3002\n\n\u64cd\u4f5c\u6b21\u6570\u4e5f\u5f88\u7b80\u5355\uff0c\u9996\u5148\u8f93\u51fa\u80af\u5b9a\u5360 $n$ \u6b21\uff0c\u5176\u6b21\u5982\u679c\u5f53\u524d\u8981\u8f93\u51fa\u7684\u503c\u4e0e\u8ba1\u5212\u8d4b\u503c\u7684\u53d8\u91cf\u503c\u4e0d\u540c\uff0c\u90a3\u5c31\u9700\u8981\u4e00\u6b21\u8d4b\u503c\uff0c\u64cd\u4f5c\u6570\u52a0\u4e00\uff0c\u5426\u5219\u76f4\u63a5\u8f93\u51fa\uff0c\u64cd\u4f5c\u6570\u4e0d\u53d8\u3002\n\n# $\\texttt{Solution}$\n\n~~\u6307\u4ee4\u96c6\u548c `SLF + LLL SPFA` \u53ef\u4ee5\u5feb\u4e0d\u5c11\u3002~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long//\u6700\u5c0f\u8d39\u7528\u6d41\u6d89\u53ca\u5230\u65e0\u9650\uff0c\u6240\u4ee5\u8981\u9632\u6b62\u89c1\u7956\u5b97\nconst int N = 1e6, inf = 1e9;\nint n, m, a[N], T, hd[N], q[N], h, t, d[N], la[N], ans, cnt = 1, tot, p[27][255], bel[N], num, now[N], sum[N];\nbool iq[N], vis[N];\nstruct edge {\n    int v, w, c, ne;\n    bool op;//\u6b63/\u53cd\u5411\u8fb9\n}e[N];\ninline void add(int u, int v, int w, int c) {\n    e[++cnt] = edge{v, w, c, hd[u], 1};\n    hd[u] = cnt;\n    e[++cnt] = edge{u, 0, -c, hd[v], 0};\n    hd[v] = cnt;\n}\ninline void spfa() {\n    for (int i = 0; i <= T; ++i) {\n        iq[i] = !(d[i] = inf);\n    }\n    d[q[h = t = 1] = 0] = 0;\n    while (h <= t) {\n        int x = q[h++];\n        iq[x] = 0;\n        for (int i = hd[x]; i; i = e[i].ne) {\n            if (e[i].w && d[e[i].v] > d[x] + e[i].c) {\n                d[e[la[e[i].v] = i].v] = d[x] + e[i].c;\n                if (!iq[e[i].v]) {\n                    iq[q[++t] = e[i].v] = 1;\n                }\n            }\n        }\n    }\n}\ninline void dfs(int x, int k) {\n    if (x == T) {\n        return;\n    }\n    for (int i = hd[x]; i; i = e[i].ne) {\n        if (!e[i].w && e[i].op && !vis[e[i].v]) {\n            if (e[i].v <= n) {\n                bel[p[k][++sum[k]] = e[i].v] = k;\n            } \n            vis[e[i].v] = 1;\n            dfs(e[i].v, k);\n            return;\n        }\n    }\n}\nsigned main() {\n    scanf(\"%lld%lld\", &n, &m);\n    T = (num = n) << 1 | 1;\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%lld\", &a[i]);\n        add(0, i, 1, __builtin_popcount(a[i]));\n        add(i + n, T, 1, 0);\n        add(i, i + n, 1, -inf);\n    }\n    for (int i = 1; i < n; ++i) {\n        for (int j = i + 1; j <= n; ++j) {\n            if (a[i] ^ a[j]) {\n                add(i + n, j, 1, __builtin_popcount(a[j]));\n            } else {\n                add(i + n, j, 1, 0);\n            }\n        }\n    }\n    for (int i = 1; i <= m; ++i) {\n        spfa();\n        if (d[T] >= 0) {\n            break;\n        }\n        ans += d[T];\n        ++tot;\n        for (int j = T; j; j = e[la[j] ^ 1].v) {\n            --e[la[j]].w;\n            ++e[la[j] ^ 1].w;\n        }\n    }\n    for (int i = 1; i <= tot; ++i) {\n        dfs(now[i] = 0, i);\n    }\n    for (int i = 1; i <= n; ++i) {\n        if (a[p[bel[i]][now[bel[i]]]] ^ a[i]) {\n            ++num;\n        }\n        now[bel[i]]++;\n    }\n    for (int i = 1; i <= tot; ++i) {\n        now[i] = 0;\n    }\n    printf(\"%lld %lld\\n\", num, ans + n * inf);\n    for (int i = 1; i <= n; ++i) {\n        if (a[p[bel[i]][now[bel[i]]]] ^ a[i]) {\n            printf(\"%c=%lld\\n\", char(bel[i] + 'a' - 1), a[i]);\n        }\n        printf(\"print(%c)\\n\", char(bel[i] + 'a' - 1));\n        ++now[bel[i]];\n    }\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1\uff01\n",
        "postTime": 1663338962,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "CF132E"
    },
    {
        "content": "### P.S.\n\u6512 RP\u3002  \n[\u4e0d\u8f93\u51fa\u65b9\u6848\u7248\u672c](https://www.luogu.com.cn/problem/CF802C)  \n\n### Description.\n\u7ed9\u4f60\u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u5b83\u6709 $m$ \u4e2a\u53d8\u91cf\uff0c\u4f60\u9700\u8981\u7ed9\u5b83\u5199\u4e00\u4efd\u7a0b\u5e8f\u8f93\u51fa\u4e00\u4e2a\u7ed9\u5b9a\u5e8f\u5217\u3002  \n\u7a0b\u5e8f\u4e2d\u6709\u4e24\u79cd\u8bed\u53e5\uff0c\u5206\u522b\u6709\u5b83\u7684\u6267\u884c\u65f6\u95f4\u3002  \n- \u8d4b\u503c\u8bed\u53e5\uff1a\u5f62\u5982 `\u53d8\u91cf=\u5e38\u91cf`\uff0c\u65f6\u95f4\u4ee3\u4ef7\u4e3a\u5e38\u91cf\u4e8c\u8fdb\u5236\u4e2d `1` \u7684\u51fa\u73b0\u6b21\u6570\u3002  \n- \u8f93\u51fa\u8bed\u53e5\uff1a\u5f62\u5982 `print(\u53d8\u91cf)`\uff0c\u65f6\u95f4\u4ee3\u4ef7\u4e3a 0\n\n\u4f60\u9700\u8981\u8f93\u51fa\u65f6\u95f4\u4ee3\u4ef7\u6700\u5c0f\u7684\u7a0b\u5e8f\u3002  \n\n### Solution.\n#### Part.1 \u6c42\u51fa\u6700\u5c0f\u4ee3\u4ef7\n\u770b\u6570\u636e\u8303\u56f4\uff0c\u76f4\u63a5\u89c9\u5f97\u662f\u7f51\u7edc\u6d41\u3002  \n\u8003\u8651\u76f4\u63a5\u5bf9\u65f6\u95f4\u5e8f\u5217\u5efa\u70b9\uff0c\u8003\u8651\u6d41\u91cf\u6709\u54ea\u4e9b\u6d41\u52a8\u65b9\u5f0f\u3002  \n\u7136\u540e\u5728\u6bcf\u4e2a\u65f6\u95f4\uff0c\u53ef\u4ee5\u6d41 $K-1$ \u7684\u6d41\u91cf\u5230\u4e0b\u4e00\u4e2a\u65f6\u95f4\uff0c\u6ce8\u610f\u8fd9\u8fb9\u662f $K-1$ \u56e0\u4e3a\u4e0b\u9762\u5fc5\u987b\u4e70\u3002  \n\u8fd9\u79cd\u8fb9\u7684\u8d39\u7528\u4e3a $0$\uff0c\u56e0\u4e3a\u7ee7\u627f\u4e0d\u9700\u8981\u4ee3\u4ef7\u3002  \n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$\uff0c\u8ba9 $i-1$ \u5411\u4e0a\u4e00\u6b21\u51fa\u73b0 $a_i$ \u7684\u70b9\u8fde\u8fb9\uff0c\u8868\u793a\u5982\u679c\u71ac\u5230\u4e86 $i-1$\uff0c\u90a3\u5c31\u53ef\u4ee5\u7701\u4e0b\u4e00\u6b21\u6d88\u8d39\u3002  \n\u8fd9\u79cd\u8fb9\u7684\u6d41\u91cf\u9650\u5236\u4e3a $1$\uff0c\u8868\u793a\u7701\u4e0b\u4e86\u4e00\u6b21\uff0c\u8d39\u7528\u4e3a $-\\text{bitcount}(a_i)$ \u4ee3\u8868\u7701\u4e0b\u7684\u4ee3\u4ef7\u3002  \n\u8fd8\u6709\u4e00\u7c7b\u8fb9\uff0c\u662f\u4ece\u6e90\u70b9\u8fde\u5411\u5e8f\u5217\u4e0a\u7684\u6bcf\u4e2a\u70b9\uff0c\u8868\u793a\u5728\u5f53\u524d\u8fd9\u4e2a\u65f6\u95f4\u8d4b\u503c\u4e00\u4e2a\u53d8\u91cf\u3002  \n\u6d41\u91cf\u9650\u5236\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $\\text{bitcount}(a_i)$\u3002  \n\u6700\u540e\u4e00\u7c7b\u662f\u4ece\u5e8f\u5217\u4e0a\u6bcf\u4e2a\u70b9\u8fde\u5411\u6c47\u70b9\uff0c\u8868\u793a\u8f93\u51fa\u4e86\u4e00\u4e2a\u53d8\u91cf\u3002  \n\u6ce8\u610f\u8fd9\u76f4\u63a5\u8fde\u8fb9\u663e\u7136\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u62c6\u70b9\u3002  \n\u7b2c\u4e00\u7c7b\u8fb9\u662f\u5165\u70b9\u548c\u5165\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u7b2c\u4e8c\u7c7b\u662f\u5165\u70b9\u8fde\u5411\u51fa\u70b9\uff0c\u7b2c\u4e09\u7c7b\u662f\u5165\u70b9\u7b2c\u56db\u7c7b\u662f\u51fa\u70b9\u3002  \n\u7136\u540e\u5c31\u80fd\u5f97\u5230\u7b2c\u4e00\u884c\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u3002  \n\u9644\u6837\u4f8b I \u7684\u56fe\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/cw2sa15b.png)\n\n#### Part.2 \u6c42\u51fa\u65b9\u6848\n\u9996\u5148\uff0c\u51b3\u5b9a\u54ea\u4e2a\u5b50\u6bcd\u88ab\u7ee7\u627f\u7684\u80af\u5b9a\u662f\u7b2c\u4e8c\u7c7b\u8fb9\u3002  \n\u5982\u679c\u4e00\u6761\u7b2c\u4e8c\u7c7b\u8fb9\u88ab\u6d41\u4e86\uff0c\u90a3\u5c31\u8868\u793a\u7b2c\u4e8c\u7c7b\u8fb9\u7684\u4e24\u7aef\u5fc5\u987b\u8981\u4e0d\u88ab\u6d41\u5931\u3002  \n\u7136\u540e\u76f4\u63a5\u5728\u6ca1\u88ab\u8981\u6c42\u7684\u5269\u4e0b\u5b50\u6bcd\u4e2d\u968f\u4fbf\u9009\u62e9\u5373\u53ef\u3002  \n\u590d\u6742\u5ea6 $O(n^2)$ \uff08\u53cd\u6b63\u4e0d\u662f\u74f6\u9888 ![](//xn--9zr.tk/cy)  \n\u7b14\u8005\u5b9e\u73b0\u5730\u5341\u5206\u5c4e\u5c71\uff0c\u5efa\u8bae\u4e0d\u8981\u53c2\u8003 ![](//xn--9zr.tk/ll)  \n\n### Coding.\n```cpp\n//\u662f\u554a\u2026\u2026\u4f60\u5c31\u662f\u90a3\u53ea\u9b3c\u4e86\u2026\u2026\u6240\u4ee5\u88ab\u4f60\u78b0\u5230\u4ee5\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u53d8\u6210\u9b3c\u4e86{{{\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}/*}}}*/\nstruct edge{int to,w,c,nxt;}e[5000005];int et=1,head[5005],a[5005],b[5005],zkak,tn[5005];\nint n,m,s,t,ls[5005],fl[5005],q[50005],hd,tl,mf,mc,d[5005],id[5005];char v[5005];\nstruct out{int id,vl,tg;}r[500005];int rt,hav[5005],vah[5005],hat=0;map<int,int>mp;char ic[5005][5005];\ninline void ADDE(int x,int y,int w,int c) {e[++et]=(edge){y,w,c,head[x]},head[x]=et;}\ninline void adde(int x,int y,int w,int c) {ADDE(x,y,w,c),ADDE(y,x,0,-c);printf(\"%d %d %d,%d\\n\",x,y,w,c);}\ninline char spfa(int s,int t)\n{\n\tmemset(d,0x3f,sizeof(d)),memset(v,0,sizeof(v)),q[hd=tl=1]=s,d[s]=0,fl[s]=1e9,ls[t]=0;\n\tfor(int x=s;hd<=tl;v[x=q[++hd]]=0) for(int i=head[x],y=e[i].to;i;y=e[i=e[i].nxt].to)\n\t\tif(e[i].w&&d[y]>d[x]+e[i].c) {d[y]=d[x]+e[i].c,ls[y]=i,fl[y]=min(fl[x],e[i].w);if(!v[y]) v[q[++tl]=y]=1;}\n\treturn !!ls[t];\n}\ninline void upd(int s,int t)\n{\n\tmf+=fl[t],mc+=fl[t]*d[t];int x=t;\n\tfor(;x^s;x=e[ls[x]^1].to) e[ls[x]].w-=fl[t],e[ls[x]^1].w+=fl[t];\n}\ninline void mcmf(int s,int t) {mf=mc=0;while(spfa(s,t)) upd(s,t);}\ninline int cnt(int x) {int r=0;for(;x;x-=x&(-x),r++);return r;}\ninline int fnd(int wh)\n{\n\tif(vah[mp[a[wh]]]) return vah[mp[a[wh]]];\n\tif(hat<m) return ++hat;\n\tfor(int i=1;i<=m;i++) if(!ic[wh][hav[i]]) return i;\n\treturn -1;\n}\ninline void pt(int wh,int val)\n{\n\tassert(wh>=0);\n\tif(hav[wh]!=val) r[++rt]=(out){wh,tn[val],1};\n\tvah[hav[wh]]=0,hav[wh]=val,vah[val]=wh,r[++rt]=(out){wh,0,0};\n\t//for(int i=1;i<=m;i++) printf(\"%d%c\",hav[i],i==m?'\\n':' ');\n}\nint main()\n{\n\tread(n),read(m),s=n+n+1,t=s+1;for(int i=1;i<=n;i++) read(a[i]),b[i]=cnt(a[i]);\n\tfor(int i=1;i<=n;i++) {adde(i,i+n,1,0),adde(i+n,t,1,0);if(i^n) adde(i,i+1,m-1,0);}\n\tfor(int i=1;i<=n;mp[a[i]]=i,i++) {adde(s,i,1,b[i]);if(mp[a[i]]) id[i]=et+1,adde(i-1,mp[a[i]]+n,1,-b[i]);}\n\tmp.clear(),zkak=0;for(int i=1;i<=n;i++) if(!mp[a[i]]) mp[a[i]]=++zkak,tn[zkak]=a[i];\n\tmcmf(s,t);for(int i=1;i<=n;i++) if(id[i]&&!e[id[i]].w) for(int j=e[id[i]].to-n,x=mp[a[i]];j<=i;j++) ic[j][x]=1;\n\t//hav \u8868\u793a\u5f53\u524d\u6709\u7684\u5b50\u6bcd\u5bf9\u5e94\u7684\u6570\u5b57\uff0cvah \u8868\u793a\u51fa\u73b0\u6570\u5b57\u5bf9\u5e94\u7684\u5b50\u6bcd\n\t//for(int i=1;i<=n;i++) if(id[i]) printf(\"%d -> %d ( %d\\n\",e[id[i]^1].to,e[id[i]].to,i);\n\t//for(int i=1;i<=zkak;i++) printf(\"%d%c\",tn[i],i==zkak?'\\n':' ');\n\t//for(int i=1;i<=n;i++) for(int j=1;j<=zkak;j++) printf(\"%d%c\",ic[i][j],j==zkak?'\\n':' ');\n\tfor(int i=1,tp;i<=n;pt(tp,mp[a[i]]),i++) tp=fnd(i);\n\tprintf(\"%d %d\\n\",rt,mc);for(int i=1;i<=rt;i++)\n\t\tif(r[i].tg) printf(\"%c=%d\\n\",r[i].id+'a'-1,r[i].vl);\n\t\telse printf(\"print(%c)\\n\",r[i].id+'a'-1);\n\treturn 0;\n}\n```",
        "postTime": 1620890511,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF132E Bits of merry old England\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u8fd9\u79cd\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\u600e\u4e48\u53ef\u80fd\u662f\u7f51\u7edc\u6d41\uff1f\u8fd8\u771f\u662f\u3002\n\n\u8fd9\u9898\u6298\u817e\u4e86\u6211\u4e00\u6574\u4e2a\u4e0a\u5348\u3002\n\n~~\u6253\u4e2a[\u5e7f\u544a](https://www.luogu.com.cn/blog/Troverld/wang-lao-liu-xue-xi-bi-ji)\u5148~~\n\n\u9996\u5148\uff0c\u4eff\u7167[CF1187G Gang Up](https://www.luogu.com.cn/problem/CF1187G)\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u65f6\u95f4\u5efa\u56fe\uff0c\u5728\u6bcf\u4e2a\u65f6\u95f4\u70b9\u5efa\u51fa\uff08\u5e8f\u5217\u4e2d\u4e0d\u540c\u6570\u7684\u6570\u91cf\uff09\u4e2a\u70b9\uff08\u8fd9\u4e9b\u70b9\u5728\u4e0b\u6587\u79f0\u4f5c**\u503c\u8282\u70b9**\uff09\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u6709\u6ca1\u6709\u53d8\u91cf\u4e3a\u8fd9\u4e00\u4e2a\u503c\u3002\n\n\u540c\u65f6\uff0c\u6211\u4eec\u4eff\u7167[[NOI2008]\u5fd7\u613f\u8005\u62db\u52df](https://www.luogu.com.cn/problem/P3980)\u8fdb\u884c**\u94fe\u5f0f\u5efa\u56fe**\u3002\u56e0\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u8d4b\u6210\u6bcf\u4e2a\u503c\u7684\u65f6\u95f4\u6bb5\u80af\u5b9a\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u4e3a\u4e86\u9650\u5236\u540c\u65f6\u53ea\u80fd\u6709$m$\u4e2a\u53d8\u91cf\u6709\u503c\u6211\u4eec\u81ea\u7136\u4f1a\u60f3\u5230\u94fe\u5f0f\u5efa\u56fe\u4ee5\u9650\u5236\u6d41\u91cf\uff08\u94fe\u4e0a\u7684\u70b9\u79f0\u4f5c**\u94fe\u8282\u70b9**\uff09\u3002\n\n\u5728\u76f8\u90bb\u7684\u4e24\u4e2a\u65f6\u95f4\u6bb5\u4e4b\u95f4\u8fde\u8fb9\uff0c\u8868\u793a\u8fd9\u4e2a\u53d8\u91cf\u53ef\u4ee5\u4e0d\u4fee\u6539\u76f4\u63a5\u5728\u4e0b\u4e00\u4e2a\u65f6\u95f4\u70b9\u7528\u3002\u5728\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u90fd\u53ef\u4ee5\u5c06\u67d0\u4e2a\u53d8\u91cf\u6e05\u7a7a\uff0c\u5373\u4ece\u503c\u8282\u70b9\u8fde\u5411\u5bf9\u5e94\u7684\u94fe\u8282\u70b9\uff0c\u8d39\u7528\u4e3a$0$\u3002\n\n\u5728\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u90fd\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u53d8\u91cf\u8d4b\u4e0a\u503c\uff0c\u56e0\u6b64\u4ece\u94fe\u8282\u70b9\u8fde\u5411\u503c\u8282\u70b9\uff0c\u8d39\u7528\u4e3a\uff08\u503c\u8282\u70b9\u5bf9\u5e94\u7684\u4ee3\u4ef7\uff09\u3002\n\n\u5728\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u90fd\u6709\u4e00\u4e2a\u5b57\u7b26\u8981\u88ab\u8f93\u51fa\u3002\u8fd9\u610f\u5473\u7740\u5fc5\u987b\u6709\u4e00\u4e2a\u88ab\u8d4b\u6210\u5f53\u524d\u503c\u7684\u53d8\u91cf\u3002\u6211\u4eec\u4f7f\u7528**\u6709\u4e0a\u4e0b\u754c\u7684\u7f51\u7edc\u6d41**\uff0c\u5f3a\u884c\u9650\u5236\u5f53\u524d\u503c\u7684\u5bf9\u5e94\u503c\u8282\u70b9\u5fc5\u987b\u8f6c\u79fb\u5230\u4e0b\u4e00\u65f6\u523b\u3002\n\n\u6700\u540e\u8f93\u51fa\u4e5f\u6bd4\u8f83\u7e41\u7410\uff0c\u53cd\u6b63\u5c31\u662f\u5b83\u4ec0\u4e48\u65f6\u5019\u8fb9\u88ab\u8dd1\u4e86\u5c31\u610f\u5473\u7740\u8fd9\u6761\u8fb9\u6240\u5bf9\u5e94\u7684\u64cd\u4f5c\u662f\u8981\u8fdb\u884c\u7684\u3002\n\n\u8fd9\u4e48\u4e00\u756a\u64cd\u4f5c\u731b\u5982\u864e\u540e\uff0c\u4f60\u6572\u51fa\u4e86\u5982\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,num[500],s,t,lim,deg[100100],val[500];\ninline void read(int &x){\n\tx=0;\n\tregister char c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n}\nnamespace MCMF{\n\tconst int N=100000,M=2000000;\n\tint head[N],cnt,dis[N],fr[N],id[N],S,T,cost;\n\tstruct node{\n\t\tint to,next,val,cost;\n\t}edge[M];\n\tinline void ae(int u,int v,int w,int c){\n\t\tedge[cnt].cost=c,edge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n\t\tedge[cnt].cost=-c,edge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tqueue<int>q;\n\tbool in[N];\n\tinline bool SPFA(){\n\t\tmemset(dis,0x3f,sizeof(dis)),dis[S]=0,q.push(S),in[S]=true;\n\t\twhile(!q.empty()){\n\t\t\tregister int x=q.front();q.pop(),in[x]=false;\n\t//\t\tprintf(\"%d\\n\",x);\n\t\t\tfor(register int i=head[x];i!=-1;i=edge[i].next){\n\t\t\t\tif(!edge[i].val)continue;\n\t\t\t\tif(dis[edge[i].to]>dis[x]+edge[i].cost){\n\t\t\t\t\tdis[edge[i].to]=dis[x]+edge[i].cost,fr[edge[i].to]=x,id[edge[i].to]=i;\n\t\t\t\t\tif(!in[edge[i].to])in[edge[i].to]=true,q.push(edge[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[T]==0x3f3f3f3f)return false;\n\t\tint x=T,mn=0x3f3f3f3f;\n\t\twhile(x!=S)mn=min(mn,edge[id[x]].val),x=fr[x];\n\t\tcost+=dis[T]*mn,x=T;\n\t\twhile(x!=S)edge[id[x]].val-=mn,edge[id[x]^1].val+=mn,x=fr[x];\n\t\treturn true;\n\t}\n}\nusing namespace MCMF;\nvector<int>v;\nvector<pair<int,int> >res;\nstack<int>bin;\nint main(){\n\tread(n),read(m),memset(head,-1,sizeof(head));\n\tfor(register int i=0;i<n;i++)read(num[i]),v.push_back(num[i]);\n\tsort(v.begin(),v.end()),v.resize(unique(v.begin(),v.end())-v.begin()),lim=v.size();\n\ts=n*lim+n,t=n*lim+n+1,S=n*lim+n+2,T=n*lim+n+3;\n\tfor(register int i=0;i<n;i++)num[i]=lower_bound(v.begin(),v.end(),num[i])-v.begin();\n\tfor(register int i=0;i<n-1;i++){\n\t\tae(n*lim+i,n*lim+i+1,m,0);\n\t\tfor(register int j=0;j<lim;j++){\n\t\t\tae(n*lim+i,i*lim+j,1,__builtin_popcount(v[j]));\n\t\t\tae(i*lim+j,n*lim+i,1,0);\n\t\t\tif(j==num[i])deg[i*lim+j]--,deg[(i+1)*lim+j]++;\n\t\t\telse ae(i*lim+j,(i+1)*lim+j,1,0);\n\t\t}\n\t}\n\tae(s,n*lim,m,0),ae(n*lim+n-1,t,m,0);\n\tfor(register int i=n-1,j=0;j<lim;j++){\n\t\tae(n*lim+i,i*lim+j,1,__builtin_popcount(v[j]));\n\t\tae(i*lim+j,n*lim+i,1,0);\n\t\tif(j==num[i])deg[i*lim+j]--,deg[t]++;\n\t\telse ae(i*lim+j,t,1,0);\t\t\n\t}\n\tae(t,s,0x3f3f3f3f,0);\n\tfor(register int i=0;i<=t;i++){\n\t\tif(deg[i]>0)ae(S,i,deg[i],0);\n\t\tif(deg[i]<0)ae(i,T,-deg[i],0);\n\t}\n\twhile(SPFA());\n\tfor(register int i=0;i<m;i++)bin.push(i);\n\tfor(register int i=0;i<lim;i++)val[i]=-1;\n\tfor(register int i=n*lim;i<n*lim+n;i++){\n\t\tfor(register int j=head[i];j!=-1;j=edge[j].next){\n\t\t\tif(edge[j].to/lim!=i-n*lim)continue;\n\t\t\tif(!edge[j].cost&&edge[j].val)bin.push(val[edge[j].to%lim]),val[edge[j].to%lim]=-1;\n\t\t}\n\t\tfor(register int j=head[i];j!=-1;j=edge[j].next){\n\t\t\tif(edge[j].to/lim!=i-n*lim)continue;\n\t\t\tif(edge[j].cost&&!edge[j].val)res.push_back(make_pair(bin.top(),v[edge[j].to%lim])),val[edge[j].to%lim]=bin.top(),bin.pop();\n\t\t}\n\t\tres.push_back(make_pair(-1,val[num[i-n*lim]]));\n//\t\tfor(int j=0;j<lim;j++)printf(\"%d \",val[j]);puts(\"\");\n\t}\n\tprintf(\"%d %d\\n\",res.size(),cost);\n\tfor(register int i=0;i<res.size();i++)if(res[i].first==-1)printf(\"print(%c)\\n\",'a'+res[i].second);else printf(\"%c=%d\\n\",'a'+res[i].first,res[i].second);\n\treturn 0;\n} \n```\n\u7136\u540e\u53d1\u73b0\uff0c\u5149\u8363\u5730T\u98de\u4e86\u2026\u2026\n\n\u600e\u4e48\u80a5\u56db\uff1f\u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\u8fd9\u4e48\u641e\u70b9\u6570\u6700\u5927\u662f$n^2=6.25*10^4$\u7ea7\u522b\u7684\uff0c\u8fb9\u6570\u5927\u6982\u662f\u4e2a$8n^2-16n^2$\uff0c\u8d39\u7528\u6d41\u7528\u7684\u53c8\u662f\u7384\u5b66\u7684SPFA\uff0c\u5e76\u4e14\u8fd9\u79cd\u5f88\u6709\u89c4\u5f8b\u7684\u56fe\u597d\u50cf\u521a\u597d\u7b26\u5408SPFA\u4e2d\u5173\u4e8e\u201c\u7f51\u683c\u56fe\u201d\u7684\u6027\u8d28\uff01\n\n\u5728\u7ecf\u5386\u4e00\u756a\u5361\u5e38\u5931\u8d25\u540e\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u5c1d\u8bd5\u4f18\u5316\u4ee3\u7801\u3002\n\n\u6211\u4eec\u73b0\u5728\u7684\u4ee3\u7801\u662f\uff0c\u4efb\u4f55\u65f6\u5019\u4efb\u4f55\u5b57\u7b26\u90fd\u80fd\u81ea\u7531\u5730\u6e05\u96f6\u6216\u8d4b\u503c\u3002\u4e0d\u5982\u6211\u4eec\u7edf\u4e00\u653e\u5230\u88ab\u542f\u7528\u524d\u8d4b\u503c\uff0c\u542f\u7528\u540e\u51b3\u5b9a\u662f\u5426\u4fdd\u7559\u8fd8\u662f\u76f4\u63a5\u653e\u5f03\u5427\u3002\n\n\u539f\u6765\uff0c\u6211\u4eec\u6bcf\u79cd\u6570\u503c\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6709\u70b9\u3002\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u4fdd\u7559\u5728\u5f53\u524d\u65f6\u523b\u7684\u503c\u7b49\u4e8e\u8be5\u6570\u503c\u65f6\u5019\u7684\u70b9\u3002\n\n\u6253\u4e2a\u6bd4\u65b9\uff0c\u6211\u4eec\u539f\u6765\u7684\u4ee3\u7801\u4e2d\uff0c\u94fe\u8282\u70b9\u76f8\u5f53\u4e8e\u4e00\u6761\u4e3b\u5e72\u9053\uff0c\u5176\u5b83\u6bcf\u79cd\u503c\u90fd\u76f8\u5f53\u4e8e\u4e00\u6761\u652f\u8def\u3002\u539f\u6765\uff0c\u652f\u8def\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4efb\u610f\u4e0a\u4e0b\u8f66\uff1b\u73b0\u5728\uff0c\u652f\u8def\u53ea\u6709\u5728\u51fa\u53e3\u5904\uff08\u5373\u7b49\u4e8e\u65f6\u523b\u503c\u7684\u65f6\u523b\uff09\u624d\u80fd\u4e0a\u4e0b\u8f66\u3002\u867d\u7136\u5404\u6761\u652f\u8def\u4ecd\u7136\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u4f46\u6240\u6709\u652f\u8def\u7684\u603b\u51fa\u53e3\u6570\u5df2\u7ecf\u53d8\u6210\u4e86$n$\u7ea7\u522b\u7684\u4e86\uff01\n\n\u8fd9\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\uff08\u4ee3\u7801\u4e2d\u8111\u5b50\u6ca1\u8f6c\u8fc7\u6765\u8fd8\u62c6\u4e86\u70b9\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u7528\u7684\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,num[500],s,t,deg[100100];\ninline void read(int &x){\n\tx=0;\n\tregister char c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n}\nnamespace MCMF{\n\tconst int N=100000,M=2000000;\n\tint head[N],cnt,dis[N],fr[N],id[N],S,T,cost,flow;\n\tstruct node{\n\t\tint to,next,val,cost;\n\t}edge[M];\n\tinline void ae(int u,int v,int w,int c){\n//\t\tprintf(\"%d %d %d\\n\",u,v,c);\n\t\tedge[cnt].cost=c,edge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n\t\tedge[cnt].cost=-c,edge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tqueue<int>q;\n\tbool in[N];\n\tinline bool SPFA(){\n\t\tmemset(dis,0x3f,sizeof(dis)),dis[S]=0,q.push(S),in[S]=true;\n\t\twhile(!q.empty()){\n\t\t\tregister int x=q.front();q.pop(),in[x]=false;\n\t//\t\tprintf(\"%d\\n\",x);\n\t\t\tfor(register int i=head[x];i!=-1;i=edge[i].next){\n\t\t\t\tif(!edge[i].val)continue;\n\t\t\t\tif(dis[edge[i].to]>dis[x]+edge[i].cost){\n\t\t\t\t\tdis[edge[i].to]=dis[x]+edge[i].cost,fr[edge[i].to]=x,id[edge[i].to]=i;\n\t\t\t\t\tif(!in[edge[i].to])in[edge[i].to]=true,q.push(edge[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[T]==0x3f3f3f3f)return false;\n\t\tint x=T,mn=0x3f3f3f3f;\n\t\twhile(x!=S)mn=min(mn,edge[id[x]].val),x=fr[x];\n\t\tcost+=dis[T]*mn,x=T,flow+=mn;\n\t\twhile(x!=S)edge[id[x]].val-=mn,edge[id[x]^1].val+=mn,x=fr[x];\n\t\treturn true;\n\t}\n}\nusing namespace MCMF;\nvector<pair<int,int> >res;\nstack<int>bin;\nmap<int,int>val;\nint main(){\n\tread(n),read(m),memset(head,-1,sizeof(head));\n\tfor(register int i=0;i<n;i++)read(num[i]);\n\ts=n*3,t=n*3+1,S=n*3+2,T=n*3+3;\n\tfor(register int i=0;i<n;i++){\n\t\tae(i,i+n,1,__builtin_popcount(num[i]));\n\t\tdeg[i+n]--,deg[i+2*n]++;\n\t\tae(i+2*n,i==n-1?t:i+1,1,0);\n\t\tfor(int j=i+1;j<n;j++)if(num[j]==num[i]){ae(i+2*n,j+n,1,0);break;}\n\t}\n\tae(s,0,m,0),ae(n-1,t,m,0);\n\tfor(int i=0;i<n-1;i++)ae(i,i+1,m,0);\n\tae(t,s,0x3f3f3f3f,0);\n\tfor(register int i=0;i<=t;i++){\n\t\tif(deg[i]>0)ae(S,i,deg[i],0);\n\t\tif(deg[i]<0)ae(i,T,-deg[i],0);\n\t}\n\twhile(SPFA());\n\tfor(register int i=0;i<m;i++)bin.push(i);\n\tfor(register int i=0;i<n;i++)val[num[i]]=-1;\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=head[i];j!=-1;j=edge[j].next)if(edge[j].to==i+n&&!edge[j].val)res.push_back(make_pair(bin.top(),num[i])),val[num[i]]=bin.top(),bin.pop();\n\t\tres.push_back(make_pair(-1,val[num[i]]));\n\t\tfor(int j=head[i+2*n];j!=-1;j=edge[j].next)if(edge[j].to==(i==n-1?t:i+1)&&!edge[j].val)bin.push(val[num[i]]),val[num[i]]=-1;\n\t}\n\tprintf(\"%d %d\\n\",res.size(),cost);\n\tfor(register int i=0;i<res.size();i++)if(res[i].first==-1)printf(\"print(%c)\\n\",'a'+res[i].second);else printf(\"%c=%d\\n\",'a'+res[i].first,res[i].second);\n\treturn 0;\n} \n```\n",
        "postTime": 1582007544,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF132E \u3010Bits of merry old England\u3011"
    },
    {
        "content": "\u8003\u8651\u7f51\u7edc\u6d41\u5efa\u56fe\uff0c\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u4fdd\u7559\u81f3\u4e0b\u4e00\u6b21\u88ab\u8be2\u95ee\u5f53\u4e14\u4ec5\u5f53 $l,r$ \u8fd9\u6bb5\u65f6\u95f4\u90fd\u4fdd\u7559\u4e0b\u6765\uff0c\u8fd9\u4e2a\u4e0d\u597d\u9650\u5236\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c\u6bcf\u6b21\u90fd\u8981\u52a0\u4ee3\u4ef7\uff0c\u7136\u540e $r-1$ \u5929\u53c8\u51cf\u53bb\u4ee3\u4ef7\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u770b\u4f5c\u4fdd\u7559\u4e0b\u6765\u4e86\u3002\n\n\u90a3\u4e48\u8003\u8651\u5efa\u56fe\uff0c\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9 $x_i,y_i$ \u3002\n\n$S\\to x_i$ \u6d41\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $a_i$ \u7684\u4ee3\u4ef7\uff0c\u4ee3\u8868\u6bcf\u6b21\u90fd\u8981\u8d4b\u503c\u3002\n\n$x_i\\to y_i$ \uff0c\u6d41\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $0$ \uff0c\u4ee3\u8868\u4e0d\u51cf\u53bb\u4ee3\u4ef7\u3002\n\n$y_i\\to T$ \uff0c\u6d41\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $0$ \uff0c\u4ee3\u8868\u51cf\u53bb\u4ee3\u4ef7\u6216\u4ee5\u540e\u88ab\u8986\u76d6\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ea\u80fd\u8fdb\u884c\u4e00\u6b21\u3002\n\n$x_{i-1}$ \u5411\u4e0a\u4e00\u4e2a $a_j=a_i$ \u7684 $y_j$ \u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $-a_i$\u7684\u4ee3\u4ef7\uff0c\u4ee3\u8868\u4e0a\u4e00\u6b21\u4fdd\u7559\u5230\u73b0\u5728\u8981\u51cf\u53bb\u4ee3\u4ef7\u3002\n\n$x_i\\to x_{i+1}$ \uff0c\u6d41\u91cf\u4e3a $m-1$ \uff0c\u8d39\u7528\u4e3a $0$ \uff0c\u4ee3\u8868\u8fd9\u6b21\u7684\u53d8\u91cf\u4fdd\u7559\u5230\u4e0b\u6b21\uff0c\u56e0\u4e3a\u4e0b\u6b21\u8fd8\u8981\u8d4b\u503c\uff0c\u6240\u4ee5\u662f $m-1$ \u3002\n\n\u7136\u540e\u65b9\u6848\u7684\u8bdd\u8bb0\u5f55\u4e0b\u6bcf\u4e2a $a_i$ \u88ab\u4fdd\u7559\u5230\u4e86\u4ec0\u4e48\u65f6\u5019\uff0c\u6a21\u62df\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <map>\n#define fi first\n#define se second\nconst int N = 250;\nusing namespace std;\nint n,k,a[N + 5],x[N + 5],y[N + 5],S,T,idc,ans1,ans2,sl[N + 5],ID[N * 3 + 5],t[N + 5],num[N + 5],tt[N + 5];\nstruct node\n{\n\tint x,y,opt;\n};\nvector <node> ans;\nnamespace F\n{\n\tconst int N = 3e6;\n\tconst long long inf = 2e18;\n\t#define mp make_pair\n\tstruct edges\n\t{\n\t\tint v;\n\t\tlong long w,f;\n\t}edge[N + 5];\n\tint head[N + 5],S,T,nxt[N + 5],edge_cnt = 1,cur[N + 5],vis[N + 5],p[N + 5],q[N + 5];\n\tlong long dis[N + 5],cost;\n\tvoid add_edge(int u,int v,long long w,long long f)\n\t{\n\t\tedge[++edge_cnt] = (edges){v,w,f};\n\t\tnxt[edge_cnt] = head[u];\n\t\thead[u] = edge_cnt;\n\t}\n\tvoid add(int u,int v,long long w,long long f)\n\t{\n\t\tadd_edge(u,v,w,f);\n\t\tadd_edge(v,u,0,-f);\n\t}\n\tbool spfa()\n\t{\n\t\tfor (int i = 1;i <= idc;i++)\n\t\t\tdis[i] = inf,cur[i] = head[i],vis[i] = p[i] = 0;\n\t\tint l = 1,r = 0;\n\t\tdis[S] = 0;\n\t\tq[++r] = S;\n\t\twhile (l <= r)\n\t\t{\n\t\t\tint u = q[l++];\n\t\t\tvis[u] = 0;\n\t\t\tfor (int i = head[u];i;i = nxt[i])\n\t\t\t{\n\t\t\t\tint v = edge[i].v;\n\t\t\t\tlong long w = edge[i].w,f = edge[i].f;\n\t\t\t\tif (w && dis[v] > dis[u] + f)\n\t\t\t\t{\n\t\t\t\t\tdis[v] = dis[u] + f;\n\t\t\t\t\tif (!vis[v])\n\t\t\t\t\t{\n\t\t\t\t\t\tq[++r] = v;\n\t\t\t\t\t\tvis[v] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dis[T] != inf;\n\t}\n\tlong long dfs(int u,long long flow)\n\t{\n\t\tif (u == T)\n\t\t\treturn flow;\n\t\tlong long sm = 0;\n\t\tp[u] = 1;\n\t\tfor (int &i = cur[u];i;i = nxt[i])\n\t\t{\n\t\t\tint v = edge[i].v;\n\t\t\tlong long w = edge[i].w,f = edge[i].f;\n\t\t\tif (w && dis[v] == dis[u] + f && !p[v])\n\t\t\t{\n\t\t\t\tlong long res = dfs(v,min(flow,w));\n\t\t\t\tedge[i].w -= res;\n\t\t\t\tedge[i ^ 1].w += res;\n\t\t\t\tflow -= res;\n\t\t\t\tsm += res;\n\t\t\t\tcost += res * f;\n\t\t\t\tif (!flow)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tp[u] = 0;\n\t\treturn sm;\n\t}\n\tpair <long long,long long> dinic(int s,int t)\n\t{\n\t\tS = s;T = t;\n\t\tlong long ans = 0;\n\t\tcost = 0;\n\t\twhile (spfa())\n\t\t\tans += dfs(S,inf);\n\t\treturn mp(ans,cost);\n\t}\n\tvoid solve()\n\t{\n\t\tfor (int i = 2;i <= n;i++)\n\t\t{\n\t\t\tfor (int j = head[x[i - 1]];j;j = nxt[j])\n\t\t\t{\n\t\t\t\tint v = edge[j].v;\n\t\t\t\tlong long w = edge[j].w,f = edge[j].f;\n\t\t\t\tif (!w && f < 0 && v != S)\n\t\t\t\t\tsl[ID[v]] = i;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1;i <= k;i++)\n\t\t\tt[i] = 0;\n\t\tint cnt = 0;\n\t\tfor (int i = 1;i <= n;i++)\n\t\t{\n\t\t\tint fl = 0;\n\t\t\tfor (int j = 1;j <= k;j++)\n\t\t\t\tif (t[j] == a[i])\n\t\t\t\t{\n\t\t\t\t\tans.push_back((node){j,0,2});\n\t\t\t\t\ttt[j] = i;\n\t\t\t\t\tfl = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (fl)\n\t\t\t\tcontinue;\n\t\t\tfor (int j = 1;j <= 26;j++)\n\t\t\t\tif (sl[tt[j]] <= i)\n\t\t\t\t{\n\t\t\t\t\tans.push_back((node){j,a[i],1});\n\t\t\t\t\tans.push_back((node){j,0,2});\n\t\t\t\t\ttt[j] = i;\n\t\t\t\t\tt[j] = a[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t}\n\tvoid clear()\n\t{\n\t\tfor (int i = 1;i <= idc;i++)\n\t\t\thead[i] = 0;\n\t\tedge_cnt = 1;\n\t\tidc = 0;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor (int i = 1;i <= n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tS = ++idc;T = ++idc;\n\tfor (int i = 1;i <= n;i++)\n\t\tx[i] = ++idc,y[i] = ++idc,ID[idc] = i;\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tF::add(S,x[i],1,__builtin_popcount(a[i]));\n\t\tF::add(y[i],T,1,0);\n\t\tF::add(x[i],y[i],1,0);\n\t\tif (i < n)\n\t\t\tF::add(x[i],x[i + 1],k - 1,0);\n\t\tfor (int j = i - 1;j >= 1;j--)\n\t\t\tif (a[j] == a[i])\n\t\t\t{\n\t\t\t\tF::add(x[i - 1],y[j],1,-__builtin_popcount(a[i]));\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tans2 = F::dinic(S,T).se;\n\tF::solve();\n\tcout<<ans.size()<<\" \"<<ans2<<endl;\n\tfor (int i = 0;i < ans.size();i++)\n\t\tif (ans[i].opt == 1)\n\t\t\tprintf(\"%c=%d\\n\",'a' + ans[i].x - 1,ans[i].y);\n\t\telse\n\t\t\tprintf(\"print(%c)\\n\",'a' + ans[i].x - 1);\n\treturn 0;\n}\n```",
        "postTime": 1617112550,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "CF132E Bits of merry old England"
    }
]