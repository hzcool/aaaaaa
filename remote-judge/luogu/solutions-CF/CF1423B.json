[
    {
        "content": "$$\\texttt{Description}$$\n\n[Valuable Paper](https://www.luogu.com.cn/problem/CF1423B)\n\n\u5982\u679c\u65e0\u6cd5\u4fee\u597d\u662f\u8981\u8f93\u51fa `-1` \u7684\uff0c\u4f3c\u4e4e\u7ffb\u8bd1\u4e2d\u6ca1\u6709\u63d0\u5230\u3002\n\n$$\\texttt{Solution}$$\n\n\u53d1\u73b0\u6700\u7ec8\u65f6\u95f4\u662f\u6240\u6709\u4fee\u8def\u65f6\u95f4\u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u5316\u6700\u5927\u503c\uff0c\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u7b54\u6848\u3002\n\n\u8003\u8651\u5982\u4f55\u5224\u65ad\u662f\u5426\u80fd\u4f7f\u6700\u7ec8\u4fee\u8def\u65f6\u95f4 $\\le mid$\u3002\n\n\u9996\u5148\u628a\u6240\u6709\u4fee\u8def\u65f6\u95f4 $\\le mid$ \u7684\u8def\u62ce\u51fa\u6765\uff0c\u7136\u540e\u5c31\u53ea\u9700\u8981\u5224\u65ad\u80fd\u5426\u627e\u51fa $n$ \u6761\u8def\uff0c\u4f7f\u5f97 $n$ \u4e2a\u5395\u7eb8\u5de5\u5382\u548c $n$ \u4e2a\u673a\u573a\u5339\u914d\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u5e76\u4e14\u5224\u65ad\u662f\u5426\u4e0e $n$ \u76f8\u7b49\u5373\u53ef\u3002\n\n\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6211\u8fd9\u91cc\u7528\u7684\u662f $\\text{Dinic}$ \u7b97\u6cd5\uff0c\u9700\u8981\u52a0\u4e0a**\u5f53\u524d\u5f27\u4f18\u5316**\u624d\u80fd\u8fc7\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3a $\\Theta(m \\sqrt n \\log V)$\u3002\n\n$$\\texttt{Code}$$\n\n```cpp\n#include <bits/stdc++.h>\n\n// #define debug\n\nint main() {\n    std :: ios_base :: sync_with_stdio(false);\n    std :: cin.tie(nullptr);\n\n    #ifndef debug\n        std :: istream &fin = std :: cin;\n        std :: ostream &fout = std :: cout;\n    #endif\n    #ifdef debug\n        std :: ifstream fin(\"code.in\");\n        std :: ofstream fout(\"code.out\");\n    #endif\n\n    int n, m;\n    fin >> n >> m;\n\n    std :: vector <int> u(m + 5), v(m + 5), t(m + 5);\n    \n    for (int i = 1; i <= m; ++i) {\n        fin >> u[i] >> v[i] >> t[i];\n    }\n\n    class node {\n        public:\n            int to, nxt, flow;\n    };\n    std :: vector <node> e(m * 2 + n * 4 + 5);\n    std :: vector <int> head(n * 2 + 5);\n    int tot;\n\n    auto add = [&] (int u, int v, int w) -> void {\n        e[ ++tot ] = (node){v, head[u], w};\n        head[u] = tot;\n        e[ ++tot ] = (node){u, head[v], 0};\n        head[v] = tot;\n    };\n\n    std :: vector <bool> vis(n * 2 + 5);\n    std :: vector <int> d(n * 2 + 5), cur(n * 2 + 5);\n    std :: queue <int> q;\n\n    auto bfs = [&] () {\n        std :: fill(vis.begin(), vis.end(), false);\n        std :: fill(d.begin(), d.end(), 0);\n        vis[0] = true; q.push(0); cur[0] = head[0];\n        while (!q.empty()) {\n            int x = q.front(); q.pop();\n            for (int i = head[x]; i; i = e[i].nxt) {\n                int v = e[i].to;\n                if (e[i].flow && !vis[v]) {\n                    vis[v] = true;\n                    d[v] = d[x] + 1;\n                    cur[v] = head[v];\n                    q.push(v);\n                }\n            }\n        }\n        return vis[ n * 2 + 1 ];\n    };\n\n    auto dfs = [&] (auto &self, int now, int MaxFlow) {\n        if (now == n * 2 + 1) return MaxFlow;\n        if (!MaxFlow) return 0;\n        int sum = 0;\n        for (int i = cur[now]; i; i = e[i].nxt) {\n            int v = e[i].to; cur[now] = i;\n            if (d[v] == d[now] + 1 && e[i].flow) {\n                int Flow = self(self, v, std :: min(MaxFlow, e[i].flow));\n                e[i].flow -= Flow;\n                e[ i ^ 1 ].flow += Flow;\n                sum += Flow;\n                MaxFlow -= Flow;\n                if (!MaxFlow) break;\n            }\n        }\n        return sum;\n    };\n\n    auto dinic = [&] () {\n        int ans = 0;\n        while (bfs()) {\n            ans += dfs(dfs, 0, std :: numeric_limits <int> :: max());\n        }\n        return ans;\n    };\n\n    auto check = [&] (int mid) {\n        tot = 1;\n        std :: fill(head.begin(), head.end(), 0);\n        for (int i = 1; i <= m; ++i) {\n            if (t[i] <= mid) {\n                add(u[i], v[i] + n, 1);\n            }\n        }\n        for (int i = 1; i <= n; ++i) {\n            add(0, i, 1);\n            add(i + n, n * 2 + 1, 1);\n        }\n        int ans = dinic();\n        return (ans == n);\n    };\n\n    if (!check(std :: numeric_limits <int> :: max())) {\n        return fout << \"-1\\n\", 0;\n    }\n\n    int l = 0, r = 1e9;\n    while (l < r) {\n        int mid = (l + r) / 2;\n        if (check(mid)) r = mid;\n        else l = mid + 1;\n    }\n\n    fout << r << '\\n';\n\n    return 0;\n}\n```\n\n$$\\texttt{Thanks for watching!}$$",
        "postTime": 1668134791,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "Valuable Paper"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff1a\n\n## \u9898\u610f\n\n\u6709\u4e00\u4e2a\u70b9\u6570\u4e3a $n$ \u7684\u70b9\u96c6 $V_1$\uff0c \u4e00\u4e2a\u70b9\u6570\u4e3a $n$ \u7684\u70b9\u96c6 $V_2$ ,\u4e00\u4e2a\u8fb9\u6570\u4e3a $m$ \u7684\u8fb9\u96c6 $E$ \u4f7f\u5f97 $\\forall\\left( {u,v}\\right)\\in E ,u\\in V_1 ,v\\in V_2$ \u4e14\u6bcf\u6761\u8fb9\u7684\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $a_i$ \u7684\u6743\u503c \uff0c\u73b0\u5728\u53ef\u4ee5\u4efb\u610f\u9009\u62e9 $E$ \u96c6\u91cc\u7684\u8fb9\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684\u8fb9\u96c6 $E_1$ \uff0c \u5f53 $E_1$ \u6ee1\u8db3\u8be5\u8fb9\u96c6\u7684\u8fb9\u80fd\u591f\u4f7f\u5f97 \u4e24\u4e2a\u70b9\u96c6 \u7684\u5b8c\u5907\u5339\u914d\u6570\u91cf\u4e3a n \u65f6\uff0c\u6211\u4eec\u5c31\u79f0 $E_1$ \u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $E_1$\uff0c\u6211\u4eec\u5b9a\u4e49\u5b83\u7684\u8d21\u732e\u4e3a\u5176\u4e2d\u8fb9\u6743\u6700\u5927\u7684\u90a3\u6761\u8fb9\uff0c\u73b0\u5728\u6c42\u6700\u5c11\u8d21\u732e\u3002\n\n## \u9898\u89e3\n\n\u901a\u8fc7\u8f6c\u6362\u540e\u7684\u9898\u610f\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f \u6700\u5927\u7684\u6700\u5c0f \uff0c\u4e14\u8d21\u732e\u6709\u5355\u8c03\u6027\u6240\u4ee5\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u6362\u6210\u4e86 \u5b58\u5728\u6027\u95ee\u9898 \uff0c\u8bbe\u73b0\u5728\u4e8c\u5206\u7684\u7b54\u6848\u4e3a x \uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8fb9\u6743\u5c0f\u4e8e x \u7684\u8fb9\u653e\u8fdb $E_1$ \u8dd1\u7f51\u7edc\u6d41\u5373\u53ef\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst ll INF=0x7f7f7f7f;\n\nstruct zz{\n\tint u;\n\tll w;\n\tint id;\n\tzz(int U,ll W,int ID){\n\t\tu=U,w=W,id=ID;\n\t}\n};\nvector<zz> v[20005];\n\nvoid Add(int x,int y,int z){\n\tint idx=v[x].size();\n\tint idy=v[y].size();\n\tv[x].push_back(zz(y,z,idy));\n\tv[y].push_back(zz(x,0,idx));\n}\n\nint n,m,s,t,Max=0;\nint dist[20005];\nint be[20005];\n\nstruct Dinic{\n\tbool BFS(){\n\t\tbool f=0;\n\t\tmemset(dist,-1,sizeof dist);\n\t\tqueue<int> q;q.push(s);\n\t\tdist[s]=0,be[s]=0;\n\t\twhile(q.size()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tfor(int i=0;i<v[x].size();i++){\n\t\t\t\tint y=v[x][i].u;\n\t\t\t\tll w=v[x][i].w;\n\t\t\t\tif(!w||dist[y]!=-1) continue;\n\t\t\t\tq.push(y),be[y]=0,dist[y]=dist[x]+1;\n\t\t\t\tif(y==t) f=1;\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\tll DFS(int x,ll sum){\n\t\tif(x==t||!sum) return sum;\n\t\tll ans=0;\n\t\tfor(int i=be[x];i<v[x].size()&&sum!=ans;i++){\n\t\t\tbe[x]=i;\n\t\t\tint y=v[x][i].u;\n\t\t\tll w=v[x][i].w;\n\t\t\tif(!w||dist[y]!=dist[x]+1) continue;\n\t\t\tint now=DFS(y,min(sum-ans,w));\n\t\t\tif(!now) dist[y]=0;\t\t \n\t\t\tv[x][i].w-=now,v[y][v[x][i].id].w+=now;\n\t\t\tans+=now; \n\t\t}\n\t\treturn ans;\n\t}\n\tll dinic(){\n\t\tll ans=0;\n\t\twhile(BFS()){\n\t\t\tll now=0;\n\t\t\twhile(now=DFS(s,INF)) ans+=now;\n\t\t}\n\t\treturn ans;\n\t}\n}T;\n\nstruct ss{\n\tint u;ll w;\n};\nvector<ss> V[20005]; \n\nbool Check(ll val){\n\tfor(int i=s;i<=t;i++) v[i].clear();\n\tfor(int i=1;i<=n;i++) Add(s,i,1),Add(i+n,t,1);\n\tfor(int x=1;x<=n;x++){\n\t\tfor(int i=0;i<V[x].size();i++){\n\t\t\tint y=V[x][i].u;ll w=V[x][i].w;\n\t\t\tif(val>=w) Add(x,y,1);\n\t\t}\n\t}\n\treturn T.dinic()==n;\n}\n\nint main(){\n\tcin>>n>>m;\n\ts=0,t=n+n+1;\n\tfor(int i=1,x,y,z;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&x,&y,&z),V[x].push_back((ss){y+n,z}),Max=max(Max,z);\n\t\n\tint l=1,r=Max,ans=-1;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(Check(mid)) ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n} \n\n```\n\n\n",
        "postTime": 1638435512,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "CF1423B \u9898\u89e3"
    },
    {
        "content": "# \u4e8c\u5206+\u6700\u5927\u6d41\u677f\u5b50\n\n### [\u9898\u9762](https://codeforces.com/contest/1424/problem/B)\n\n### Solution\uff1a\n\n\u5148\u628a\u6837\u4f8b\u653e\u8fd9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vvbd039c.png)\n\n\u5efa\u56fe\uff1a\n\n\u5de5\u5382\u770b\u6210\u53f3\u8fb9\u70b9\uff0c\u673a\u573a\u5de6\u8fb9\u70b9\uff0c\u6e90\u70b9\u5411\u5de5\u5382\u8fde\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0c\u56e0\u4e3a\u8981\u4ee3\u8868\u6bcf\u4e2a\u5de5\u5382\u53ea\u80fd\u5339\u914d\u4e00\u4e2a\u673a\u573a\uff0c\u6240\u4ee5\u8fd9\u6761\u8fb9\u7684\u5bb9\u91cf\u5e94\u4e3a1\uff0c\u6bcf\u4e2a\u673a\u573a\u5411\u6c47\u70b9\u8fde\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0c\u540c\u7406\u3002\u673a\u573a\u8ddf\u5de5\u5382\u4e4b\u95f4\u8fde\u8fb9\uff0c\u4ee5\u5929\u6570\u4e3a\u8fb9\u6743\n\n**\u6ce8\u610f\uff1a** \u6b63\u5e38\u7f51\u7edc\u6d41\u7684\u5efa\u56fe\u4ee5\u4e0a\u8bf4\u7684\u201c\u8fb9\u6743\u201d\u5e94\u8be5\u662f\u201c\u5bb9\u91cf\u201d\uff0c\u4f46\u8fd9\u91cc\u7684\u201c\u8fb9\u6743\u201d\u662f\u8981\u989d\u5916\u8bb0\u5f55\u7684\u201c\u8fb9\u6743\u201d\uff0c\u8fd9\u5728\u6700\u5927\u6d41+\u4e8c\u5206\u7684\u6a21\u578b\u4e2d\u5e38\u89c1\uff0c\u5728\u4e00\u822c\u6700\u5927\u6d41\u4e2d\u4e0d\u4f1a\u88ab\u7528\u5230\n\n\u672c\u9898\u5f88\u5bb9\u6613\u60f3\u6210\u8d39\u7528\u6d41\uff08\u6211\u597d\u83dc\uff09\uff0c\u4f46\u9898\u4e2d\u8981\u6c42\u7684\u662f\u6700\u5927\u503c\u4e0d\u662f\u548c\uff0c\u6240\u4ee5\u4e0d\u662f\u6c42\u6ee1\u6d41\u4e0b\u7684\u6700\u5c0f\u8d39\u7528\uff0c\u4e8e\u662f\u5c31\u60f3\u5230\u4e86\u4e8c\u5206\u6700\u5927\u503c\n\n\u6211\u4eec\u4e8c\u5206\u7b54\u6848\uff0ccheck\u7684\u65f6\u5019\u626b\u63cf\u8fde\u597d\u7684\u6240\u6709\u7684\u6b63\u5411\u8fb9\uff0c\u5982\u679c\u8fb9\u6743\u4e3a0\uff0c\u4ee3\u8868\u662f\u6e90\u6c47\u70b9\u8fde\u7684\u8fb9\uff0c\u5c06\u5bb9\u91cf\u8d4b\u4e3a1\uff0c\u6b8b\u4f59\u7f51\u7edc\u91cc\u5bb9\u91cf\u4e3a0\u3002\u5982\u679c\u8fb9\u6743\u4e3a\u6b63\u6570\uff0c\u5c06\u5982\u679c\u8fb9\u6743\u5927\u4e8emid\uff0c\u8fd9\u6761\u8fb9\u4e0d\u80fd\u9009\uff0c\u5bb9\u91cf\u8d4b\u4e3a0\uff0c\u5426\u5219\uff0c\u5bb9\u91cf\u4e3a1\uff0c\u540c\u6837\u8bb0\u5f97\u66f4\u65b0\u6b8b\u4f59\u7f51\u7edc\n\n\u7136\u540eDinic\u770b\u6700\u5927\u6d41\u662f\u5426\u6ee1\u6d41\u5373\u53ef\uff01\uff08\u5982\u679c\u6ee1\u6d41\u4ee3\u8868\u9009\u5929\u6570\u5c11\u4e8e\u7b49\u4e8emid\u7684\u8fb9\u662f\u53ef\u4ee5\u7684\uff0c\u53cd\u4e4b\u4e0d\u53ef\u4ee5\uff09\n\n### Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010,M=5000010,INF=1e18;\nint n,m,S,T,head[N],tot=1,q[N],d[N],cur[N];\nstruct E{int ver,nxt,ww,w;}e[M];\ninline void add_e(int u,int v,int w){e[++tot]=(E){v,head[u],0,w},head[u]=tot;}\ninline void add(int u,int v,int w){add_e(u,v,w);add_e(v,u,0);}\nbool bfs(){\n\tint hh=0,tt=0;\n\tmemset(d,-1,sizeof d);\n\tq[0]=S,d[S]=0,cur[S]=head[S];\n\twhile(hh<=tt){\n\t\tint x=q[hh++];\n\t\tfor(int i=head[x];i;i=e[i].nxt){\n\t\t\tint y=e[i].ver,z=e[i].w;\n\t\t\tif(d[y]==-1&&z){\n\t\t\t\td[y]=d[x]+1;\n\t\t\t\tcur[y]=head[y];\n\t\t\t\tif(y==T)return 1;\n\t\t\t\tq[++tt]=y;\n\t\t\t}\n\t\t} \n\t}\n\treturn 0;\n}\nint find(int u,int limit){\n\tif(u==T)return limit;\n\tint flow=0;\n\tfor(int i=cur[u];i&&flow<limit;i=e[i].nxt){\n\t\tint y=e[i].ver,z=e[i].w;\n\t\tcur[u]=i;\n\t\tif(d[y]==d[u]+1&&z){\n\t\t\tint t=find(y,min(z,limit-flow));\n\t\t\tif(!t)d[y]=-1;\n\t\t\te[i].w-=t,e[i^1].w+=t,flow+=t;\n\t\t}\n\t}\n\treturn flow;\n}\nint Dinic(){\n\tint r=0,flow;\n\twhile(bfs())while(flow=find(S,INF))r+=flow;\n\treturn r;\n}\nbool check(int mid){\n\tfor(int i=2;i<=tot;i+=2)\n\t\tif(e[i].ww>0&&e[i].ww<=mid){\n\t\t\te[i].w=1;\n\t\t\te[i^1].w=0;\n\t\t}\n\t\telse if(e[i].ww>0)e[i].w=0,e[i^1].w=0;\n\t\telse if(e[i].ww==0)e[i].w=1,e[i^1].w=0;\n\tint res=Dinic();\n\treturn (res>=n);\n}\nsigned main(){\n\tcin>>n>>m;S=n*2+1,T=S+1;\n\tfor(int i=1;i<=n;++i)add(S,i,1);\n\tfor(int i=1;i<=n;++i)add(i+n,T,1);\n\tfor(int i=1,u,v,w;i<=m;++i){\n\t\tcin>>u>>v>>w;\n\t\tadd(u,v+n,w);e[tot].ww=e[tot^1].ww=w;\n\t}\n\tint L=0,R=1e9;\n\twhile(L<R){\n\t\tint mid=(L+R)>>1;\n\t\tif(check(mid))R=mid;else L=mid+1;\n\t}\n\tif(L==1e9)return cout<<-1<<endl,0;\n\tcout<<L<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1601977588,
        "uid": 286239,
        "name": "ql12345",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1423B \u3010Valuable Paper\u3011"
    },
    {
        "content": "## \u9898\u5916\u8bdd\n\n\u7b2c\u4e00\u773c\uff1a*1900 \u7684 flow \u9898\uff1f\n\n\u7b2c\u4e8c\u773c\uff1a\u8fd9\u8bc4\u5206\u633a\u5408\u7406\u7684\n\n## \u601d\u8def\n\n\u6ce8\u610f\u5230\u9898\u4e2d\u8bf4\u7684\u662f **\u201c\u8fd9\u4e9b\u8def\u540c\u65f6\u5f00\u59cb\u4fee\u201d**\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\u3002\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a $x$\uff0c\u5219\u9898\u76ee\u8f6c\u5316\u4e3a\uff1a\n\n> \u6709 $N$ \u4e2a\u5de5\u5382\u548c $N$ \u4e2a\u673a\u573a\uff0c\u4ece $M$ \u6761\u7ed9\u5b9a\u7684\u8fb9\u4e2d\u9009\u62e9 $N$ \u6761\u4fee\u5efa\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5de5\u5382\u90fd\u80fd\u4e14\u4ec5\u80fd\u4e0e\u4e00\u4e2a\u673a\u573a\u8fde\u8fb9\u3002\u6bcf\u6761\u8fb9\u7684\u7528\u65f6\u4e3a $d_i$\uff0c\u6700\u5927\u8fb9\u7684\u7528\u65f6\u4e0d\u80fd\u8d85\u8fc7 $x$\u3002\n\n\u53ef\u4ee5\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u5f88\u660e\u663e\u7684**\u4e8c\u5206\u56fe**\u6a21\u578b\u3002\u5efa\u7acb\u6e90\u70b9 $S$ \u548c\u6c47\u70b9 $T$\uff0c$S$ \u5411\u6240\u6709\u5de5\u5382\u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u6240\u6709\u673a\u573a\u5411 $T$ \u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u7ed9\u5b9a\u7684 $M$ \u6761\u8fb9\u4e2d\uff0c$d_i > x$ \u7684\u8fb9\u820d\u53bb\uff0c\u5176\u4f59\u5bf9\u5e94\u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\u8dd1\u4e00\u904d Dinic\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u6d41\u5373\u53ef\u3002\n\nDinic \u8dd1\u4e8c\u5206\u56fe\u7684\u590d\u6742\u5ea6\u662f $O(N^{\\frac{1}{2}}M)$\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N^{\\frac{1}{2}}M \\log d)$\u3002\n\n## \u4ee3\u7801\n\n[code](https://pastebin.ubuntu.com/p/FHd5HGfjSW/)",
        "postTime": 1649998779,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "CF1423B \u9898\u89e3"
    }
]