[
    {
        "content": "### Problem\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a $a_i$ \u4e0e $b_j$ \u7684\u5927\u5c0f\u5173\u7cfb\u7684\u5224\u65ad\uff0c\u8ba9\u4f60\u6784\u9020\u4e00\u4e2a $a,b$ \u5e8f\u5217\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a $n,m \\leq 1000$\u3002\n\n### Solution\n\n\u8fd9\u79cd\u8003\u5e76\u67e5\u96c6\u7684\u7c7b\u4f3c\u9898\u76ee\u6709\u5f88\u591a\u5f88\u591a\uff08\u8bdd\u8bf4\u56de\u6765\u6211\u5728 CF 2000 \u5de6\u53f3 DP \u91cc\u9762\u770b\u5230\u7684\u8fd9\u4e2a\u9898\uff0c\u53ef\u662f\u8fd9\u4e2a\u9898\u8ddf DP \u6709\u4ec0\u4e48\u5173\u7cfb\uff09\uff0c\u8fd9\u4e2a\u9898\u5c31\u662f **\u5e76\u67e5\u96c6+\u62d3\u6251\u6392\u5e8f** \u5c31\u80fd\u89e3\u51b3\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u6240\u6709\u76f8\u7b49\u7684\u7f16\u53f7\u6211\u4eec\u5c06\u4ed6\u4eec\u5408\u6210\u4e00\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86\uff08\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u5176\u4e2d\u7684\u4e00\u4e2a\u7f16\u53f7\u5c31\u597d\uff0c\u4e4b\u540e\u7684\u64cd\u4f5c\u5728\u8fd9\u4e2a\u7f16\u53f7\u4e0a\u8fdb\u884c\u3002\u7136\u540e\u5bf9\u4e8e $>,<$\uff0c\u6211\u4eec\u4ece\u5c0f\u7684\u7f16\u53f7\u5411\u5927\u7684\u7f16\u53f7\u8fde\u8fb9\uff0c\u7136\u540e\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u987a\u4fbf\u8fdb\u884c\u8d4b\u503c\u5c31\u597d\u3002\n\n\u6bcf\u66f4\u65b0\u4e00\u4e2a\u8282\u70b9\u6211\u4eec\u5c31\u8ba9\u8ba1\u6570\u5668 $num+1$\uff0c\u82e5\u6700\u540e $num \\not=$ \u8fde\u901a\u5757\u6570\uff08**\u5e76\u975e\u603b\u7ed3\u70b9\u6570 $n+m$**\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u8fde\u901a\u5757\u770b\u4f5c\u4e00\u4e2a\u70b9\u6765\u8fdb\u884c\u66f4\u65b0\u4e0e\u64cd\u4f5c\uff09\uff0c\u90a3\u4e48\u663e\u7136\u5c31\u77db\u76fe\u4e86\uff0c\u4e0d\u6210\u7acb\u3002\n\n### Code\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=7232;\nint n,m,fa[N],du[N],num,sum;\nlong long dis[N];\nstring s[N];\nint getfa(int x)\n{\n    if(fa[x]==x) return x;\n    return fa[x]=getfa(fa[fa[fa[fa[x]]]]);\n}\nvoid merge(int u,int v)\n{\n    int fu=getfa(u),fv=getfa(v);\n    fa[fu]=fv;\n}\nstruct hl{\n    int v,nxt;\n}e[N*N/10];//\u5e94\u8be5\u8981\u5f00\u5230 n*m \u5927\u5c0f\uff0c\u56e0\u4e3a\u8fd9\u4e2a RE \u4e86\u597d\u591a\u6b21\nint h[N],cnt;\nvoid add(int u,int v)\n{\n    du[v]++;\n    e[++cnt].v=v;e[cnt].nxt=h[u];h[u]=cnt;\n}\nlong long mx(long long x,long long y)\n{\n    return x>y?x:y;\n}\nqueue<int> q;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n+m;i++) fa[i]=i;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s[i];s[i]='?'+s[i];\n        for(int j=1;j<=m;j++) if(s[i][j]=='=') merge(i,n+j);\n    }\n    //\u5148\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u51fa\u8fde\u901a\u5757\uff0c\u5728\u8fdb\u884c\u8fde\u8fb9\n    for(int i=1;i<=n;i++) \n    for(int j=1;j<=m;j++) \n    {\n        if(s[i][j]=='>') add(getfa(j+n),getfa(i));//\u8fde\u8fb9\n        else if(s[i][j]=='<') add(getfa(i),getfa(j+n));\n    }\n    for(int i=1;i<=n+m;i++) \n    if(fa[i]==i) \n    {\n        if(!du[i]) dis[i]=1ll,q.push(i);\n        ++sum;//\u8bb0\u5f55\u603b\u8fde\u901a\u5757\u6570\n    }\n    while(!q.empty())//\u62d3\u6251\u6392\u5e8f\n    {\n        int tmp=q.front();q.pop();++num;//\u5f39\u51fa\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u8ba1\u6570\u5668 sum++\n        for(int i=h[tmp];i;i=e[i].nxt)\n        {\n            dis[e[i].v]=mx(dis[e[i].v],dis[tmp]+1);\n            du[e[i].v]--;\n            if(!du[e[i].v]) q.push(e[i].v);\n        }\n    }\n    if(num!=sum) printf(\"No\\n\");\n    else\n    {\n        printf(\"Yes\\n\");\n        for(int i=1;i<=n;i++) printf(\"%lld \",dis[getfa(i)]);\n        puts(\"\");\n        for(int i=n+1;i<=n+m;i++) printf(\"%lld \",dis[getfa(i)]);\n    }\n}\n```\n",
        "postTime": 1668154610,
        "uid": 478885,
        "name": "lenlen",
        "ccfLevel": 6,
        "title": "CF1131D Gourmet choice \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\n\n\u6709$n+m$\u4e2a\u53d8\u91cf\uff0c\u7ed9\u51fa$n$\u4e2a\u53d8\u91cf\u4e0e$m$\u4e2a\u53d8\u91cf\u7684\u5927\u5c0f\u5173\u7cfb\u3002\u4f60\u73b0\u5728\u8981\u7ed9\u8fd9\u4e9b\u53d8\u91cf\u8d4b\u503c\uff0c\u5728\u6ee1\u8db3\u5927\u5c0f\u5173\u7cfb\u7684\u524d\u63d0\u4e0b\u4f7f\u6700\u5927\u503c\u6700\u5c0f\u3002\u82e5\u4e0d\u80fd\u6ee1\u8db3\u5927\u5c0f\u5173\u7cfb\uff0c\u8f93\u51faNo\u3002\n\u82e5\u53ef\u4ee5\u6ee1\u8db3\u5927\u5c0f\u5173\u7cfb\uff0c\u5728\u7b2c\u4e00\u884c\u8f93\u51faYes\uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa$n$\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u7b2c\u4e09\u884c\u8f93\u51fa$m$\u4e2a\u53d8\u91cf\u7684\u503c\n\n~~\u5dee\u5206\u7ea6\u675f\u6c34\u9898\u554a~~\n\n~~Time limit exceeded on pretest 10~~\n\n\u56e0\u4e3a\u8fd9\u4e9b\u53d8\u91cf\u7684\u6240\u6709\u5927\u5c0f\u5173\u7cfb\u90fd\u5df2\u7ecf\u7ed9\u5b9a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u628a\u6240\u6709\u76f8\u7b49\u7684\u53d8\u91cf\u5e76\u5230\u4e00\u8d77\uff0c\u4ee5\u5c0f\u4e8e\u5173\u7cfb\u5efa\u8fb9\uff0c\u5982\u679c\u6709\u89e3\uff0c\u5c31\u5f97\u5230\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\uff0c\u90a3\u4e48\u76f4\u63a5\u62d3\u6251\u8bb0\u5f55\u4e0b\u7b54\u6848\u5c31\u597d\uff0c\u5982\u679c\u56fe\u4e2d\u6709\u73af\uff0c\u90a3\u4e48\u65e0\u89e3\u3002\n\n```cpp \n\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <iostream>\n#include <bitset>\n#include <set>\n#include <queue>\n\ntypedef long long LL;\ntypedef double D;\n\nconst int inf = 0x3f3f3f3f, Minf = 0x7f7f7f7f;\n\nusing namespace std;\n\nint head[3005], to[3000005], nxt[3000005], val[3000005], tot, rd[300005], poi[3005], ans[3005];\nint tmp[3005], n, m, vis[3005];\nvoid add(int x, int y, int v) {to[++ tot] = y, val[tot] = v, nxt[tot] = head[x], head[x] = tot;}\nqueue <int> Q;\nstruct ice_table {\n    int fa[3005];\n    void init(int n) {for(int i = 1; i <= n; ++ i) fa[i] = i;}\n    int find_father(int x) {return fa[x] == x ? x : fa[x] = find_father(fa[x]);}\n    bool unit(int x, int y) {\n        int fx = find_father(x), fy = find_father(y);\n        if(fx == fy) return 0;\n\t\tfa[fx] = fy; return 1;\n    }\n}T;\nchar c[1050][1050];\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0); cout.tie(0);\n    cin >> n >> m;\n    T.init(n + m);\n    for(int i = 1; i <= n; ++ i) {\n    \tcin >> c[i] + 1;\n    \tfor(int j = 1; j <= m; ++ j) if(c[i][j] == '=') T.unit(i, j + n);\n\t}\n\tfor(int i = 1; i <= n; ++ i) {\n\t\tfor(int j = 1; j <= m; ++ j) {\n\t\t\tif(c[i][j] == '<') add(T.find_father(i), T.find_father(j + n), 1), rd[T.find_father(j + n)] ++;\n\t\t\telse if(c[i][j] == '>') add(T.find_father(j + n), T.find_father(i), 1), rd[T.find_father(i)] ++;\n\t\t}\n\t}\n\tmemset(ans, 0xff, sizeof ans);\n    for(int i = 1; i <= n + m; ++ i) poi[i] = T.find_father(i);\n    sort(poi + 1, poi + 1 + n + m);\n    int tot = unique(poi + 1, poi + 1 + n + m) - poi - 1;\n    for(int i = 1; i <= tot; ++ i) if(rd[poi[i]] == 0) Q.push(poi[i]), ans[poi[i]] = 1;\n    while(Q.size()) {\n    \tint now = Q.front(); Q.pop();\n    \tfor(int i = head[now]; i; i = nxt[i]) {\n    \t\trd[to[i]] --;\n    \t\tans[to[i]] = max(ans[now] + 1, ans[to[i]]);\n    \t\tif(rd[to[i]] == 0) Q.push(to[i]);\n\t\t}\n\t}\n\tfor(int i = 1; i <= tot; ++ i) if(rd[poi[i]] != 0) {puts(\"No\"); return 0;}\n    puts(\"Yes\");\n    for(int i = 1; i <= n + m; ++ i) tmp[i] = ans[T.find_father(i)];\n    for(int i = 1; i <= n; ++ i) printf(\"%d \", tmp[i]); puts(\"\");\n    for(int i = n + 1; i <= n + m; ++ i) printf(\"%d \", tmp[i]); puts(\"\");\n\treturn 0;\n} \n```",
        "postTime": 1551429883,
        "uid": 44777,
        "name": "djh123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1131D \u3010Gourmet choice\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u68d2\u7684 Tarjan \u9898\uff01\n\n\u5148\u628a\u70b9\u90fd\u5212\u5f52\u5230\u4e00\u5f20\u56fe\u4e0a\uff0c\u56fe\u4e0a\u5c06\u4f1a\u6709 $n+m$ \u4e2a\u70b9\u3002\n\n\u8003\u8651\u76f4\u63a5\u628a\u76f8\u7b49\u7684\u5143\u7d20\u5212\u5f52\u5230\u4e00\u4e2a\u96c6\u5408\uff0c\u628a\u5927\u4e8e\u6216\u8005\u5c0f\u4e8e\u8f6c\u5316\u4e3a\u4ece\u5c0f\u7684\u5143\u7d20\u5230\u5927\u7684\u5143\u7d20\u5efa\u8fb9\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u7528 Tarjan \u7f29\u70b9\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5982\u4f55\u628a\u76f8\u7b49\u7684\u5143\u7d20\u653e\u5165\u4e00\u4e2a\u96c6\u5408\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u4e24\u4e2a\u70b9\u5efa\u7acb\u65e0\u5411\u8fb9\uff0c\u800c Tarjan \u7f29\u70b9\u65f6\u5c06\u4f1a\u5bfb\u627e\u6700\u5927\u73af\uff0c\u56e0\u6b64\u4e00\u4e2a\u7b49\u53f7\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u603b\u662f\u53ef\u4ee5\u88ab\u7f29\u8fdb\u4e00\u4e2a\u70b9\u5185\u3002\n\n\u63a5\u4e0b\u6765\u5728\u65b0\u56fe\u4e0a\u8dd1\u62d3\u6251\u6392\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece DP \u8f6c\u79fb\u5927\u5c0f\uff1a\n\n$$f_v=\\max(f_v,f_u+1)$$\n\n\u8fd9\u6837\u4e5f\u80fd\u4fdd\u8bc1\u6784\u9020\u51fa\u6700\u5927\u5143\u7d20\u6700\u5c0f\u7684\u65b9\u6848\u3002\n\n\u5982\u4f55\u5224\u65ad\u65e0\u89e3\u5462\uff1f\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u65e0\u89e3\uff1a\u5f53\u4e14\u4ec5\u5f53\u51fa\u73b0\u4e86\u591a\u4e2a\u975e\u7b49\u4e8e\u5173\u7cfb\u5728\u56fe\u4e0a\u6784\u6210\u7684\u73af\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u5efa\u7b49\u4e8e\u8fb9\u65f6\u628a\u8fb9\u6743\u8bbe\u4e3a $0$\uff0c\u800c\u5efa\u5927\u4e8e\u6216\u8005\u5c0f\u4e8e\u8fb9\u65f6\u628a\u8fb9\u6743\u8bbe\u4e3a $1$\uff0c\u5728 Tarjan \u5efa\u7acb\u65b0\u56fe\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u90fd\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\u4e14\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u4e0d\u4e3a $0$\uff0c\u5c31\u4ee3\u8868\u65e0\u89e3\u3002\n\n\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u6211\u5361\u4e86\u4e00\u4f1a\uff0c\u4e00\u5f00\u59cb\u5f00\u7684 $10^3$ \u5f00\u5230 $2 \\times 10^5$ \u90fd RE\uff0c\u8981\u6ce8\u610f\u9884\u4f30\u6781\u9650\u6570\u636e\uff0c\u6700\u574f\u60c5\u51b5\u662f\u5f53 $n=m=10^3$ \u65f6\uff0c\u6709 $2 \\times 10^3$ \u4e2a\u70b9\uff0c\u6700\u574f\u53ef\u4ee5\u5b58\u5728 $4 \\times 10^6$ \u6761\u8fb9\u3002\u4f46\u662f\u672c\u9898\u8c8c\u4f3c\u6570\u636e\u6bd4\u8f83\u5bbd\u5bb9\uff0c\u8fb9\u6570\u5f00\u5230 $2 \\times 10^6$ \u4e5f\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u6570\u636e\u8303\u56f4\u9884\u4f30\u7a0b\u5e8f\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int n=2000,ans=0;\n    for(register int i=1;i<=n;++i)\n        for(register int j=i+1;j<=n;++j)\n            ++ans;\n    cout<<(ans<<1)<<endl;\n}\n```\n\n\n\u4ee3\u7801\u89c1\u4e0b:\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 4000005\nusing namespace std;\nint dfn[MAXN],low[MAXN],belong[MAXN],head[MAXN],phead[MAXN],du[MAXN],f[MAXN];\nstruct mystack{\n    int values[MAXN],top=0;\n    bitset<MAXN>instack;\n    inline void push(int x){\n        instack[x]=true;\n        values[top++]=x;\n    }\n    inline int pop(){\n        instack[values[--top]]=false;\n        return values[top];\n    }\n}s;\nint n,m,ecnt,pcnt,scccnt,nowtime;\nchar temp;\nstruct edge{\n    int from,to,next,w;\n}e[MAXN],points[MAXN];\ninline void add(int u,int v,int w){\n    e[++ecnt]={u,v,head[u],w};\n    head[u]=ecnt;\n}\ninline void padd(int u,int v){\n    ++du[v];\n    points[++pcnt]={u,v,phead[u]};\n    phead[u]=pcnt;\n}\ninline void tarjan(int x){\n    dfn[x]=low[x]=++nowtime;\n    s.push(x);\n    for(register int i=head[x];i;i=e[i].next){\n        int v(e[i].to);\n        if(s.instack[v])low[x]=min(low[x],low[v]);\n        if(!dfn[v]){\n            tarjan(v);\n            low[x]=min(low[x],low[v]);\n        }\n    }\n    if(dfn[x]==low[x]){\n        ++scccnt;\n        int k(0);\n        do{\n            k=s.pop();\n            belong[k]=scccnt;\n        }while(k!=x);\n    }\n}\nvoid toposort(){\n    queue<int>q;\n    for(register int i=1;i<=scccnt;++i)\n        if(du[i]==0){\n            q.push(i);\n            f[i]=1;\n        }\n    while(!q.empty()){\n        int u(q.front());\n        q.pop();\n        for(register int i=phead[u];i;i=points[i].next){\n            int v(points[i].to);\n            f[v]=max(f[v],f[u]+1);\n            if(--du[v]==0)q.push(v);\n        }\n    }\n}\nint main(){\n    cin>>n>>m;\n    for(register int i=1;i<=n;++i)\n        for(register int j=1;j<=m;++j){\n            cin>>temp;\n            if(temp=='=')add(i,n+j,0),add(n+j,i,0);\n            else if(temp=='>')add(n+j,i,1);\n            else add(i,n+j,1);\n        }\n    for(register int i=1;i<=n+m;++i)\n        if(!dfn[i])tarjan(i);\n    for(register int i=1;i<=ecnt;++i)\n        if(belong[e[i].from]!=belong[e[i].to])\n            padd(belong[e[i].from],belong[e[i].to]);\n        else if(e[i].w){\n            cout<<\"No\"<<endl;\n            return 0;\n        }\n    toposort();\n    cout<<\"Yes\"<<endl;\n    for(register int i=1;i<=n;++i)cout<<f[belong[i]]<<\" \";\n    cout<<endl;\n    for(register int j=1;j<=m;++j)cout<<f[belong[n+j]]<<\" \";\n}\n```\n",
        "postTime": 1660961718,
        "uid": 160363,
        "name": "\u4e1c\u706f",
        "ccfLevel": 5,
        "title": "CF1131D Gourmet choice"
    },
    {
        "content": "\n## \u5efa\u56fe\u65b9\u5f0f\n\n\u6240\u4ee5\u8fd9\u7bc7\u9898\u89e3\u601d\u8def\u662f **\u5dee\u5206\u7ea6\u675f SPFA \u5199\u6cd5**\u3002\n\n\u672c\u9898\u7b2c\u4e00\u6b21\u63d0\u4ea4[\u7528\u7684 SPFA T\u98de\u4e86](https://www.luogu.com.cn/record/81407688)\u7b2c\u4e8c\u6b21[\u8fd8\u662f SPFA \u4ed6\u8fc7\u4e86](https://www.luogu.com.cn/record/81407753)\uff0c\u4e3a\u4ec0\u4e48\u90fd\u662f SPFA \u5dee\u522b\u8fd9\u4e48\u5927\uff1f\u56e0\u4e3a\u5b58\u56fe\u65b9\u5f0f\u4e0d\u540c\u3002\n\n\u8fd9\u91cc\u5148\u7ed9\u5404\u4f4d\u4eb2\u7b80\u5355\u7684\u8bf4\u4e00\u4e0b\u94fe\u5f0f\u524d\u5411\u661f\u548c vector \u7684\u533a\u522b\u3002\n\n\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u4ed6\u7684\u8c03\u7528\u5feb\uff0c\u4f46\u662f\u4ed6\u8bbf\u95ee\u8fde\u7eed\u8def\u5f84\u4e0d\u5982 vector \u5feb\uff0c\u6240\u4ee5\u7a20\u5bc6\u56fe vector \u6bd4\u94fe\u5f0f\u524d\u5411\u661f\u5feb\uff0c\u7a00\u758f\u56fe\u94fe\u5f0f\u524d\u5411\u661f\u5feb\uff0c\u8fd9\u4e2a\u9898\u76ee\u660e\u663e\u662f\u7a20\u5bc6\u56fe\u554a\uff0c\u6240\u4ee5 vector \u65f6\u95f4\u4f1a\u6bd4\u94fe\u5f0f\u524d\u5411\u661f\u5feb\u3002\n\n## \u672c\u9898\u601d\u8def\n\n\u8fd9\u9053\u9898\u76ee\u662f\u5dee\u5206\u7ea6\u675f\u7684\u6a21\u677f\u9898\u76ee\uff0c\u8fd9\u91cc\u63a8\u9500\u4e00\u4e0b\u6211\u5199\u5dee\u5206\u7ea6\u675f\u7b14\u8bb0\u7684\u535a\u5ba2\uff08[\u9002\u5408\u521a\u6253\u5b8c\u6a21\u677f\u7684\u4eb2](https://www.luogu.com.cn/blog/zhuaigezhangzixuan/ri-zhao-zhi-xing-tu-lun)\uff0c\u91cc\u8fb9\u5199\u4e86\u5982\u4f55\u6c42\u51fa\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u5dee\u5206\u7ea6\u675f\u7684\u6700\u5927\u6216\u6700\u5c0f\u503c\uff09\u3002\n\n\u4e4b\u540e\u5c31\u662f\u8f6c\u6362\u5dee\u5206\u7ea6\u675f\u7684\u6a21\u578b\u4e86\uff1a\n\n\u4f46\u662f\u8fd9\u4e2a\u9898\u76ee\u5e76\u4e0d\u662f\u5f62\u5982 $A_i-B_j \\ge C$ \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u600e\u4e48\u529e\u5462\uff1f\u53ea\u9700\u8981\u8f6c\u6362\u5c31\u597d\u4e86\u3002\u56e0\u4e3a $A,B$ \u90fd\u662f\u6574\u6570\uff0c\u6240\u4ee5\u5982\u679c $A_i>B_j$ \u7684\u8bdd\u4e0d\u5c31\u662f $B_j$ \u81f3\u5c11\u52a0\u4e0a\u4e00\u5c31\u7b49\u4e8e $A_i$ \u5417,\u5c31\u53ef\u4ee5\u8f6c\u6362\u6210 $A_i \\ge  B_j+1$ \u4e86\uff0c\u5176\u4ed6\u7684\u540c\u7406\u3002\n\n\u4e4b\u540e\u6839\u636e\u7ea6\u675f\u5173\u7cfb\u5efa\u56fe\u5c31\u884c\u4e86\n\n$A_i > B_j$ \u53d8\u6210 $A_i \\ge  B_j+1$\u3002\n\n$A_i < B_j$ \u53d8\u6210 $B_j \\ge A_i  +1$\u3002\n\n$A_i = B_j$ \u53d8\u6210 $B_j \\ge A_i$ \u548c $A_i \\ge  B_j$\u3002\n\n\u8f6c\u6362\u6210\u529f\u4e4b\u540e\u8dd1 SPFA \u5c31\u597d\u4e86\u3002\n\n\n\n## \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n#define int long long\nconst int N=100001;\nusing namespace std;\n\nint vis[N],dis[N],n,m,bj,A,B;\nint jis[N];\nstruct node{\n\tint qz,to;\n};\nvector<node> vec[N];\nqueue<int> q;\n\nvoid add(int x,int y,int z)\n{\n\tvec[x].push_back(node{z,y});\n}\n\nint spfa()\n{\n\tfor(int i=1;i<=n+m;i++) dis[i]=1,q.push(i),vis[i]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=0;i<vec[x].size();i++)\n\t\t{\n\t\t\tint nxt=vec[x][i].to,qz=vec[x][i].qz;\n\t\t\tif(dis[nxt]<dis[x]+qz)\n\t\t\t{\n\t\t\t\tdis[nxt]=dis[x]+qz;\n\t\t\t\tif(!vis[nxt]) q.push(nxt),vis[nxt]=1,jis[nxt]++;\n\t\t\t\tif(jis[nxt]>n) return 0; \n\t\t\t}\n\t\t}\n\t}\n\treturn 1;\n}\n \nsigned main(){\n\tchar ch;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tA=i,B=j+n;\t\n\t\t\tscanf(\" %c\",&ch);\n\t\t\tif(ch=='>') add(B,A,1);\n\t\t\tif(ch=='<') add(A,B,1);\n\t\t\tif(ch=='=') add(A,B,0),add(B,A,0);\t\n\t\t}\n\tif(spfa()) {\n\t\tcout<<\"Yes\"<<endl;\n\t\tfor(int i=1;i<=n;i++) printf(\"%lld \",dis[i]);cout<<endl;\n\t\tfor(int i=1+n;i<=n+m;i++) printf(\"%lld \",dis[i]);\n\t}\n\telse cout<<\"No\";\n}\n```\n",
        "postTime": 1658916292,
        "uid": 231946,
        "name": "CuSO4_and_5H2O",
        "ccfLevel": 6,
        "title": "CF1131D \u9898\u89e3"
    },
    {
        "content": "#### \u5dee\u5206\u7ea6\u675f\n\n\u9898\u76ee\u4e2d\u7ed9\u4e86 $n \\times m$ \u4e2a\u9650\u5236\uff0c\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\u5dee\u5206\u7ea6\u675f\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u5dee\u5206\u7ea6\u675f\u7684\u96be\u70b9\u5728\u4e8e\u5c06\u9650\u5236\u8f6c\u5316\u4e3a\u7c7b\u4f3c\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\u7684\u5f0f\u5b50\uff0c\u9700\u91cd\u70b9\u8003\u8651\u3002\n\n\uff08\u5728\u4e0b\u9762\u9ed8\u8ba4 $a$ \u6570\u7ec4\u7684\u4e0b\u6807\u4e3a $1$ \u5230 $n$ \uff0c $b$ \u6570\u7ec4\u4e0b\u6807\u4e3a $n+1$ \u5230 $n+m$\uff09\n\n\u5bf9\u4e8e\u4e00\u4e2a '$\\lt$' \uff0c\u53ef\u5f97 $a_i\\lt b_j$ \uff0c\u5373\u4e3a $b_j-a_i\\ge 1$ \uff0c\u5219\u4ece $i$ \u5411 $j$ \u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a '$\\gt$' \uff0c\u53ef\u5f97 $a_i\\gt b_j$ \uff0c\u5373\u4e3a $a_i-b_j\\ge 1$ \uff0c\u5219\u4ece $j$ \u5411 $i$ \u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a '$=$' \uff0c\u53ef\u5f97 $a_i=b_j$ \uff0c\u5373\u4e3a $a_i-b_j\\ge 0$ \u4e0e  $b_j-a_i\\ge 0$ \uff0c\u8fde\u4e24\u6b21\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u8fde\u5b8c\u8fb9\u4e4b\u540e\uff0c\u8dd1\u4e00\u8fb9\u6700\u957f\u8def\uff08\u9898\u76ee\u8981\u6c42\u6c42\u6700\u5c0f\u89e3\uff09\uff0c\u5982\u679c\u6709\u6b63\u73af\uff08\u56e0\u4e3a\u662f\u6700\u957f\u8def\u6240\u4ee5\u4e0d\u662f\u8d1f\u73af\uff09\uff0c\u5219\u65e0\u89e3\uff0c\u53cd\u4e4b\u5219\u8f93\u51fa $dis$ \u6570\u7ec4\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2e6+5;\nstruct node\n{\n\tint to,len;\n};\nvector<node>v[MAXN];//\u7528\u94fe\u5f0f\u524d\u5411\u661f\u8fde\u8fb9\u5c31\u4f1aT\u98de\nint dis[MAXN],sum[MAXN];\nbitset<MAXN>vis;\nint n,m;\ninline bool spfa(int s)//SPFA\u8dd1\u6700\u957f\u8def\n{\n\tqueue<int>q;\n\tvis=0;\n\tmemset(dis,-1,sizeof(dis));\n\tmemset(sum,0,sizeof(sum));\n\tdis[s]=0;\n\tvis[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvis[x]=0;\n\t\tfor(register int i=0;i<v[x].size();i++)\n\t\t{\n\t\t\tint y=v[x][i].to,z=v[x][i].len;\n\t\t\tif(dis[y]<dis[x]+z)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+z;\n\t\t\t\tsum[y]=sum[x]+1;\n\t\t\t\tif(sum[y]>=n+m+1)return true;//\u627e\u5230\u4e86\u6b63\u73af\n\t\t\t\tif(!vis[y])\n\t\t\t\t{\n\t\t\t\t\tq.push(y);\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i=1;i<=n;i++)\n\t\tfor(register int j=n+1;j<=n+m;j++)\n\t\t{\n\t\t\tchar now;\n\t\t\tcin>>now;\n\t\t\tif(now=='<')v[i].push_back((node){j,1});\n\t\t\tif(now=='>')v[j].push_back((node){i,1});//\u4e0a\u9762\u8bf4\u7684\u8fde\u8fb9\u65b9\u5f0f\n\t\t\tif(now=='=')v[i].push_back((node){j,0}),v[j].push_back((node){i,0});\n\t\t}\n\tfor(register int i=1;i<=n+m;i++)\n\t\tv[0].push_back((node){i,1});\n\tif(spfa(0))puts(\"No\");\n\telse\n\t{\n\t\tputs(\"Yes\");\n\t\tfor(register int i=1;i<=n;i++)\n\t\t\tprintf(\"%d \",dis[i]);\n\t\tputs(\"\");\n\t\tfor(register int i=n+1;i<=n+m;i++)\n\t\t\tprintf(\"%d \",dis[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1630044707,
        "uid": 126871,
        "name": "yzh_Error404",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1131D\u3010Gourmet choice\u3011"
    },
    {
        "content": "[CF1131D Gourmet choice](https://www.luogu.com.cn/problem/CF1131D)\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a DAG \u7684\u5904\u7406\u662f\u5f88\u7b80\u5355\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4ece\u62d3\u6251\u6392\u5e8f\u5165\u624b\u3002\u5982\u679c $a > b$ \u90a3\u4e48\u6211\u4eec\u5c31\u8ba9 $b$ \u5411 $a$ \u8fde\u8fb9\u3002\u4e3a\u4ec0\u4e48\u4e0d\u53cd\u8fc7\u6765\u5462\uff1f\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u6700\u5c0f\u503c\u80af\u5b9a\u662f 1\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u786e\u5b9a\u6700\u5927\u503c\u662f\u591a\u5c11\u3002\n\n\u6211\u4eec\u8003\u8651\u5728 DAG \u4e0a dp\uff0c\u8bbe $f_i$ \u8868\u793a\u70b9 $i$ \u7684\u6700\u7ec8\u7b54\u6848\u3002\u90a3\u4e48\u5bf9\u4e8e\u66f4\u65b0\u4e5f\u5c31\u5f88\u7b80\u5355\u4e86 $f_{to} = \\max(f_u + 1, f_{to})$\uff0c\u6211\u4eec\u8981\u5728\u62d3\u6251\u6392\u5e8f\u7684\u65f6\u5019\u901a\u8fc7\u524d\u9a71\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u53d1\u73b0\u201c\u7b49\u4e8e\u201d\u8fd9\u4e2a\u9650\u5236\u5f88\u597d\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7f29\u70b9\uff0c\u8ba9\u6240\u6709\u76f8\u7b49\u7684\u6570\u7528\u4e00\u4e2a\u70b9\u6765\u4ee3\u66ff\u3002\u7b14\u8005\u4f7f\u7528\u7684\u662f\u5e76\u67e5\u96c6\u3002\n\n\u4f46\u662f\u6211\u4eec\u8fde\u63a5\u51fa\u6765\u7684\u56fe\u4e0d\u4e00\u5b9a\u662f\u5408\u6cd5\u7684\uff0c\u4e5f\u5c31\u662f\u53ef\u80fd\u4ea7\u751f\u73af\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6709\u81ea\u73af\u7684\u56fe\u80af\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u6211\u4eec\u5728\u5efa\u56fe\u7684\u65f6\u5019\u76f4\u63a5\u5224\u6389\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u5b58\u5728\u73af\u7684\u56fe\u80af\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u62d3\u6251\u5e8f\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u8fdb\u5165\u961f\u5217\u70b9\u7684\u4e2a\u6570\uff0c\u5982\u679c\u5176\u4e0d\u7b49\u4e8e\u7f29\u70b9\u4e4b\u540e\u7684\u603b\u5171\u70b9\u6570\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u5408\u6cd5\u3002\n\n\u6211\u4eec\u8fd8\u8981\u8003\u8651\u5230\u4e0d\u80fd\u5efa\u91cd\u8fb9\uff0c\u4e0d\u7136\u4f1a\u5bfc\u81f4\u5165\u5ea6\u51fa\u9519\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//#define Fread\n\n#ifdef Fread\n#define getchar() ((p1 == p2 && p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin)) ? EOF : *p1 ++)\nchar buf[1 << 21], *p1, *p2;\n#endif // Fread\n\ntemplate <typename T>\nvoid r1(T &x) {\n\tx = 0;\n\tchar c(getchar());\n\tint f(1);\n\tfor(; !isdigit(c); c = getchar()) if(c == '-') f = -1;\n\tfor(; isdigit(c);c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\tx *= f;\n}\n\nconst int maxn = 3e3 + 5;\nconst int maxm = maxn << 1;\n\ntypedef int room[maxn];\n\nint n, m;\nint fa[maxn];\nint getfa(int x) { return x == fa[x] ? x : fa[x] = getfa(fa[x]); }\nchar a[maxn][maxn];\n\nvoid merge(int x,int y) {\n    x = getfa(x), y = getfa(y);\n    if(x == y) return ;\n    fa[x] = y;\n}\nint bel[maxn];\n/*\nif a < b add Edge from a to b\n*/\nint in[maxn];\nint head[maxn], cnt;\nstruct Edge {\n    int to, next;\n}edg[maxn * maxn];\nvoid add(int u,int v) {\n    edg[++ cnt] = (Edge) {v, head[u]}, head[u] = cnt;\n}\n/*\n2 4\n>==>\n>=<>\nOut:\nNo\n*/\nint vis[maxn][maxn];\nint f[maxn], c[maxn];\nsigned main() {\n//    freopen(\"data.in\", \"r\", stdin);\n//    freopen(\"myans.out\", \"w\", stdout);\n\tint i, j;\n    r1(n), r1(m);\n    for(i = 1; i <= n + m; ++ i) fa[i] = i;\n    for(i = 1; i <= n; ++ i) scanf(\"%s\", a[i] + 1);\n    for(i = 1; i <= n; ++ i) for(j = 1; j <= m; ++ j) if(a[i][j] == '=') merge(i, j + n);\n    for(i = 1; i <= n + m; ++ i) bel[i] = getfa(i), c[i] = bel[i];\n    sort(c + 1, c + n + m + 1); int len = unique(c + 1, c + n + m + 1) - c - 1;\n    for(i = 1; i <= n + m; ++ i) bel[i] = lower_bound(c + 1, c + len + 1, bel[i]) - c;\n//    for(i = 1; i <= n + m; ++ i) printf(\"%d \", bel[i]);\n//    puts(\"\");\n    for(i = 1; i <= n; ++ i) for(j = 1; j <= m; ++ j)\n        if(bel[i] != bel[j + n]) {\n            if((a[i][j] == '<')) {\n                if(vis[bel[i]][bel[j + n]] == 1) continue;\n                vis[bel[i]][bel[j + n]] = 1;\n                in[bel[j + n]] ++, add(bel[i], bel[j + n]);\n            }\n            else if((a[i][j] == '>'))  {\n                if(vis[bel[j + n]][bel[i]] == 1) continue;\n                vis[bel[j + n]][bel[i]] = 1;\n                in[bel[i]] ++, add(bel[j + n], bel[i]);\n            }\n        }\n        else if((bel[i] == bel[j + n]) && (a[i][j] != '=')) return puts(\"No\"), 0;\n//    for(i = 1; i <= len; ++ i) printf(\"%d \", in[i]);\n    queue<int> q;\n    for(i = 1; i <= len; ++ i) if(!in[i]) q.push(i), f[i] = 1;\n    int tot(0);\n    while(!q.empty()) {\n        int u = q.front(); q.pop();\n        ++ tot;\n        if(tot > len) return puts(\"No\"), 0;\n        for(int i = head[u];i;i = edg[i].next) {\n            int to = edg[i].to;\n            f[to] = max(f[to],f[u] + 1);\n            if(!(-- in[to])) q.push(to);\n        }\n    }\n//    printf(\"len = %d, tot = %d\\n\", len, tot);\n    if(tot != len) puts(\"No\");\n    else {\n        puts(\"Yes\");\n        for(i = 1; i <= n; ++ i) printf(\"%d \", f[bel[i]]);\n        puts(\"\");\n        for(i = n + 1; i <= n + m; ++ i) printf(\"%d \", f[bel[i]]);\n        puts(\"\");\n    }\n\treturn 0;\n}\n\n\n```\n\n",
        "postTime": 1618371390,
        "uid": 151723,
        "name": "legendgod",
        "ccfLevel": 7,
        "title": "CF1131D Gourmet choice"
    },
    {
        "content": "WC \u524d\u4e86\u8fd9\u79cdsb\u9898\u90fd\u505a\u4e0d\u6765\uff0c\u53ef\u80fd\u662f\u6253\u94c1\u9884\u5b9a\uff1f\n\n\u5173\u4e8e\u7b49\u4e8e\uff0c\u6211\u4eec\u76f4\u63a5\u5e76\u67e5\u96c6\uff08DSU\uff09\u7f29\u70b9\u5373\u53ef\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u5927\u4e8e\u5c0f\u4e8e\uff0c\u6211\u4eec\u5efa\u8fb9\uff08\u5c0f$\\to$\u5927\uff09\uff0c\u7136\u540e\u62d3\u6251\u4e00\u4e0b\u3002\u6709\u73af\u80af\u5b9a\u4e0d\u884c\u3002\u7136\u540e\u9898\u76ee\u4e2d\u8981\u6700\u5927\u5143\u7d20\u6700\u5c0f\uff0c\u6211\u4eec\u8d2a\u5fc3\u8d4b\u503c\u5373\u53ef\u3002\n\n\u4e00\u5f00\u59cb\u60f3\u5230\u4e86\u5dee\u5206\u7ea6\u675f\uff0c\u4f46\u5b9e\u9645\u4e0a\u6ca1\u6709\u5fc5\u8981\uff0c\u56e0\u4e3a\u6ca1\u6709\u8fb9\u6743\uff0c\u76f4\u63a5\u62d3\u6251\u5224\u73af\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(register int i=(a);i<=(b);i++)\n#define per(i,a,b) for(register int i=(a);i>=(b);i--)\nusing namespace std;\nconst int N=2009;\n\ninline int read() {\n    register int x=0, f=1; register char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=-1; c=getchar();}\n    while(c>='0'&&c<='9') {x=(x<<3)+(x<<1)+c-48,c=getchar();}\n    return x*f;\n}\n\nint n,m,d[N],f[N],cnt;\nchar c[N][N];\nvector<int>e[N];\nvoid add(int u,int v) {e[u].push_back(v); d[v]++;}\n\nint id[N]; //dsu\nint find(int i) {return i==id[i]?i:id[i]=find(id[i]);}\n\nvoid topo() {\n\tqueue<int>q;\n\trep(i,1,n+m) if(i==find(i)&&!d[i]) q.push(i),f[i]=1;\n\twhile(!q.empty()) {\n\t\tint u=q.front(); q.pop();\n\t\tfor(auto v:e[u]) {\n\t\t\tf[v]=max(f[v],f[u]), d[v]--;\n\t\t\tif(d[v]==0) f[v]++, q.push(v);\n\t\t}\n\t}\n}\n\nint main() {\n\tn=read(), m=read();\n\trep(i,1,n) scanf(\"%s\",c[i]+1);\n\trep(i,1,n+m) id[i]=i;\n\tbool flag=0;\n\trep(i,1,n) rep(j,1,m) {\n\t\tint u=find(i), v=find(j+n);\n\t\tif(c[i][j]!='='&&u==v) {flag=1; break;}\n\t\telse if(c[i][j]=='=') id[u]=v;\n\t}\n\tif(flag==1) return puts(\"No\"), 0;\n\trep(i,1,n+m) if(find(i)==i) cnt++;\n\trep(i,1,n) rep(j,1,m) {\n\t\tint u=find(i), v=find(j+n);\n\t\tif(c[i][j]=='<') add(u,v);\n\t\telse if(c[i][j]=='>') add(v,u);\n\t}\n\ttopo();\n\trep(i,1,n+m) if(i==find(i)&&d[i]) {flag=1; break;}\n\tif(flag==1) return puts(\"No\"), 0;\n\tputs(\"Yes\");\n\trep(i,1,n) printf(\"%d \",f[find(i)]); puts(\"\");\n\trep(i,1,m) printf(\"%d \",f[find(i+n)]); puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1612359223,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1131D \u3010Gourmet choice\u3011"
    },
    {
        "content": "## \u9898\u89e3-CF1131D Gourmet choice\n\n* **\u9898\u76ee\u610f\u601d**\n\n** *\n\t  \n   \u5c31\u662f\u7ed9\u4f60\u5f88\u591a\u4e2a\u7ea6\u675f\u6761\u4ef6,\u8ba9\u4f60\u6c42\u51fa\u5408\u6cd5\u7684\u5e8f\u5217$a,b$\u6ee1\u8db3\u6761\u4ef6\u4e14\u6700\u5927\u503c\u6700\u5c0f\u7684\u65b9\u6848\u3002\n** *\n\n* $Solution$\n\n* **\n $tarjan+topu$\n \n \u5bf9\u4e8e\u4e00\u5f00\u59cb\u7684\u90a3\u4e9b$=$\u6761\u4ef6\u6211\u4eec\u5148\u8ba9$i$\u4ee5\u53ca$j+n$\u653e\u5165\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u3002\n \u7b2c\u4e8c\u6b21\u518d\u505a\u4e00\u904d\uff0c\u5982\u679c\u4e24\u4e2a\u5904\u4e8e\u540c\u4e00\u4e2a\u8054\u901a\u5757\u7684\u70b9\u53c8\u6709$> or <$\u7684\u5173\u7cfb\u663e\u7136\u5c31\u53ea\u8981\u8f93\u51fa$No$\u5373\u53ef\u3002\n \n \u7136\u540e\u7b2c\u4e8c\u6b21\u505a\u5173\u4e8e\u5927\u4e8e\u5c0f\u4e8e\u5173\u7cfb\u7684\u70b9\u7684\u65f6\u5019\uff1a\n \n* \u82e5\u4e3a$<$\u5219\uff1a\u4ece$jia(i,j+n)$\u5e76\u4e14\u7edf\u8ba1$j+n$\u7684\u5ea6\u52a0\u52a0\n* \u82e5\u4e3a$>$\u5219\uff1a\u4ece$jia(j+n,i)$\u5e76\u4e14\u7edf\u8ba1$i$\u7684\u5ea6\u52a0\u52a0\n\n\u8fd9\u6837\u505a\u5b8c\u4e00\u904d\u6211\u4eec\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a$DAG$\u3002\u4e8e\u662f\u53ea\u8981\u5728\u8fd9\u5f20\u56fe\u4e0a\u8dd1\u4e00\u4e0b\u62d3\u6251\u5c31\u53ef\u4ee5\u4e86\uff0c\u5728\u9014\u4e2d\u7528$f[]$\u8868\u793a\u7b54\u6848\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u6c42\u6700\u5927\u503c\u6700\u5c0f\uff0c\u6240\u4ee5$f[v]=\\max(f[v],f[u]+1)$\n* **\n\n* $Code$\n```cpp\n#include <bits/stdc++.h>\n  using namespace std;\n\n  const int maxn=2005;\n  const int maxm=maxn*maxn;\n\n  int n,m,cnt,ans,top,sum,tot,now;\n  int head[maxm],col[maxm],stak[maxm];\n  int low[maxm],dfn[maxm],gs;\n  int f[maxm],du[maxm],vis[maxm];\n  char c[maxn][maxn];\n\n  struct nood {\n      int nex,to;\n  };\n  nood e[maxm<<2];//n*m\u7684\u8fb9\n\n  inline void jia(int u,int v) {\n      e[++cnt].nex=head[u];\n      head[u]=cnt;\n      e[cnt].to=v;\n  }\n\n  inline void tarjan(int u) {\n      low[u]=dfn[u]=++now;\n      stak[++top]=u;\n      for ( int i=head[u];i;i=e[i].nex ) {\n          int v=e[i].to;\n          if(!dfn[v]) {\n              tarjan(v);\n              low[u]=min(low[u],low[v]);\n          }\n          else \n              if(!col[v]) \n                  low[u]=min(low[u],dfn[v]);\n      }\n      if(low[u]==dfn[u]) {\n          col[u]=++sum;\n          while(u!=stak[top]) {\n              col[stak[top]]=sum;\n              top--;\n          }\n          top--;\n      }\n  }\n\n  inline int read() {\n      int sum=0; char ch=getchar();\n      while(!isdigit(ch)) ch=getchar();\n      while(isdigit(ch)) \n          sum=sum*10+(ch^48),ch=getchar();\n      return sum;\n  }\n\n  inline void write(int x) {\n      if(x<0) {\n          putchar('-');\n          x=-x;\n      }\n      if(x>9) \n          write(x/10);\n      putchar(x%10+48);\n  }\n\n  inline void write_c(int x) {\n      write(x);\n      putchar(' ');\n  }\n\n  inline int max(int a,int b) {\n      if(a>b) return a;\n      return b;\n  }\n\n  int main() {\n  //\tfreopen(\"da.in\",\"r\",stdin);\n  //\tfreopen(\"da.out\",\"w\",stdout); \n      n=read();\n      m=read();\n      for ( int i=1;i<=n;i++ ) scanf(\"%s\",c[i]+1);\n      for ( int i=1;i<=n;i++ ) \n          for ( int j=1;j<=m;j++ ) \n              if(c[i][j]=='=') {\n                  jia(i,j+n); \n                  jia(j+n,i);\n              }\n      for ( int i=1;i<=n+m;i++ ) \n          if(!dfn[i]) tarjan(i);\n      memset(head,0,sizeof(head));\n      cnt=0;\n      for ( int i=1;i<=n;i++ ) \n          for ( int j=1;j<=m;j++ ) {\n              if(c[i][j]=='>') {\n                  if(col[i]==col[j+n]) \n                      return printf(\"No\\n\"),0;\n                  jia(col[j+n],col[i]);\n                  ++du[col[i]];\n              }\n              if(c[i][j]=='<') {\n                  if(col[i]==col[j+n]) \n                      return printf(\"No\\n\"),0;\n                  jia(col[i],col[j+n]);\n                  ++du[col[j+n]];\n              }\n          }\n      std::queue<int>q;\n      for ( int i=1;i<=sum;i++ ) \n          if(!du[i]) {\n              f[i]=1;\n              q.push(i);\n          }\n  //\tfor ( int i=1;i<=sum;i++ ) cout<<du[i]<<\" \"; cout<<endl;\n  //\tfor ( int i=1;i<=n+m;i++ ) cout<<col[i]<<\" \"; \n      while(!q.empty()) {\n          int u=q.front();\n          q.pop();\n          ++gs;\n          for ( int i=head[u];i;i=e[i].nex ) {\n              int v=e[i].to;\n              --du[v];\n              f[v]=max(f[v],f[u]+1);\n              if(!du[v]) q.push(v);\n          }\n      }\n  //\tfor ( int i=1;i<=sum;i++ ) cout<<f[i]<<\" \"; \n      if(gs!=sum) \n          return printf(\"No\\n\"),0;\n      putchar('Y');\n      putchar('e');\n      putchar('s');\n      putchar('\\n');\n      for ( int i=1;i<=n;i++ ) write_c(f[col[i]]);\n      printf(\"\\n\");\n      for ( int i=1;i<=m;i++ ) write_c(f[col[i+n]]);\n      return 0;\n  }\n```\n",
        "postTime": 1571142568,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1131D \u3010Gourmet choice\u3011"
    },
    {
        "content": "\u9996\u5148\u5c06\u6240\u6709 $ = $ \u7684\u653e\u5728\u4e00\u8d77\uff0c\u56e0\u4e3a\u76f8\u7b49\u53ef\u4ee5\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u5e76\u67e5\u96c6\u5b9e\u73b0\uff0c\u4f46\u662f\u5f53\u65f6\u6bd4\u8d5b\u7684\u65f6\u5019\u6211\u7528\u4e86 tarjan \u7f29\u70b9\u5b9e\u73b0...\r\n\r\n\u7136\u540e\u6839\u636e\u5927\u4e8e\u53f7\u548c\u5c0f\u4e8e\u53f7\u6765\u8fde\u8fb9\uff0c\u5982\u679c $ a > b $ \u4e14 $ a $ \u548c $ b $ \u5728\u4e00\u4e2a\u7b49\u53f7\u8054\u901a\u5757\u5185\u8f93\u51fa\u65e0\u89e3\r\n\r\n\u7136\u540e\u62d3\u6251\u6392\u5e8f\u5728 DAG \u4e0a dp\uff0c\u5982\u679c\u8fd9\u4e2a\u56fe\u4e0d\u662f DAG \u8bf4\u660e\u51fa\u73b0\u4e86\u4e00\u4e2a $ a_1 > a_2 > a_3 > ... > a_1 $ \u7684\u60c5\u51b5\uff0c\u663e\u7136\u65e0\u89e3\r\n\r\n\u9898\u76ee\u8981\u6c42\u6700\u5927\u7684\u6570\u6700\u5c0f\uff0c\u90a3\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f $ f[v] = max(f[v], f[u] + 1) $\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\n#define Fast_cin ios::sync_with_stdio(false), cin.tie(0);\r\n#define rep(i, a, b) for(register int i = a; i <= b; i++)\r\n#define per(i, a, b) for(register int i = a; i >= b; i--)\r\n#define DEBUG(x) cerr << \"DEBUG\" << x << \" >>> \" << endl;\r\nusing namespace std;\r\n\r\ntypedef unsigned long long ull;\r\ntypedef pair <int, int> pii;\r\ntypedef long long ll;\r\n\r\ntemplate <typename _T>\r\ninline void read(_T &f) {\r\n    f = 0; _T fu = 1; char c = getchar();\r\n    while(c < '0' || c > '9') { if(c == '-') fu = -1; c = getchar(); }\r\n    while(c >= '0' && c <= '9') { f = (f << 3) + (f << 1) + (c & 15); c = getchar(); }\r\n    f *= fu;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid print(T x) {\r\n    if(x < 0) putchar('-'), x = -x;\r\n    if(x < 10) putchar(x + 48);\r\n    else print(x / 10), putchar(x % 10 + 48);\r\n}\r\n\r\ntemplate <typename T>\r\nvoid print(T x, char t) {\r\n    print(x); putchar(t);\r\n}\r\n\r\ntemplate <typename T>\r\nstruct hash_map_t {\r\n    vector <T> v, val, nxt;\r\n    vector <int> head;\r\n    int mod, tot, lastv;\r\n    T lastans;\r\n    bool have_ans;\r\n\r\n    hash_map_t (int md = 0) {\r\n        head.clear(); v.clear(); val.clear(); nxt.clear(); tot = 0; mod = md;\r\n        nxt.resize(1); v.resize(1); val.resize(1); head.resize(mod);\r\n        have_ans = 0;\r\n    }\r\n\r\n    bool count(int x) {\r\n        int u = x % mod;\r\n        for(register int i = head[u]; i; i = nxt[i]) {\r\n            if(v[i] == x) {\r\n                have_ans = 1;\r\n                lastv = x;\r\n                lastans = val[i];\r\n                return 1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    void ins(int x, int y) {\r\n        int u = x % mod;\r\n        nxt.push_back(head[u]); head[u] = ++tot;\r\n        v.push_back(x); val.push_back(y);\r\n    }\r\n\r\n    int qry(int x) {\r\n        if(have_ans && lastv == x) return lastans;\r\n        count(x);\r\n        return lastans;\r\n    }\r\n};\r\n\r\nconst int N = 2005;\r\n\r\nvector <int> adj[N], adj2[N];\r\nchar c[N][N];\r\nint n, m;\r\n\r\nint low[N], dfn[N], col[N], st[N], top, inst[N], f[N], in[N], cnt, color, gs;\r\nvoid tarjan(int u) {\r\n    low[u] = dfn[u] = ++cnt; st[++top] = u; inst[u] = 1;\r\n    for(register unsigned i = 0; i < adj[u].size(); i++) {\r\n        int v = adj[u][i];\r\n        if(!dfn[v]) {\r\n            tarjan(v);\r\n            low[u] = min(low[u], low[v]);\r\n        } else if(inst[v]) low[u] = min(low[u], dfn[v]);\r\n    }\r\n    if(low[u] == dfn[u]) {\r\n        ++color;\r\n        while(st[top + 1] != u) {\r\n            int tmp = st[top--];\r\n            col[tmp] = color;\r\n            inst[tmp] = 0;\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    read(n); read(m);\r\n    for(register int i = 1; i <= n; i++) scanf(\"%s\", c[i] + 1);\r\n    for(register int i = 1; i <= n; i++) {\r\n        for(register int j = 1; j <= m; j++) {\r\n            if(c[i][j] == '=') {\r\n                adj[i].push_back(j + n);\r\n                adj[j + n].push_back(i);\r\n            }\r\n        }\r\n    }\r\n    for(register int i = 1; i <= n + m; i++) if(!dfn[i]) tarjan(i);\r\n    for(register int i = 1; i <= n + m; i++) adj[i].clear();\r\n    for(register int i = 1; i <= n; i++) {\r\n        for(register int j = 1; j <= m; j++) {\r\n            if(c[i][j] == '<') {\r\n                if(col[i] == col[j + n]) {\r\n                    cout << \"No\" << endl;\r\n                    return 0;\r\n                }\r\n                adj[col[i]].push_back(col[j + n]);\r\n                ++in[col[j + n]];\r\n            }\r\n            if(c[i][j] == '>') {\r\n                if(col[i] == col[j + n]) {\r\n                    cout << \"No\" << endl;\r\n                    return 0;\r\n                }\r\n                adj[col[j + n]].push_back(col[i]);\r\n                ++in[col[i]];\r\n            }\r\n        }\r\n    }\r\n    queue <int> q;\r\n    for(register int i = 1; i <= color; i++) {\r\n        if(!in[i]) {\r\n            q.push(i);\r\n            f[i] = 1;\r\n        }\r\n    }\r\n    while(!q.empty()) {\r\n        int u = q.front(); q.pop();\r\n        ++gs;\r\n        for(register unsigned i = 0; i < adj[u].size(); i++) {\r\n            int v = adj[u][i];\r\n            --in[v];\r\n            f[v] = max(f[v], f[u] + 1);\r\n            if(!in[v]) q.push(v);\r\n        }\r\n    }\r\n    if(gs != color) {\r\n        cout << \"No\" << endl;\r\n        return 0;\r\n    }\r\n    cout << \"Yes\" << endl;\r\n    for(register int i = 1; i <= n; i++) print(f[col[i]], ' ');\r\n    putchar('\\n');\r\n    for(register int i = 1; i <= m; i++) print(f[col[i + n]], ' ');\r\n    putchar('\\n');\r\n    return 0;\r\n}\r\n```",
        "postTime": 1551421352,
        "uid": 51815,
        "name": "LJC00118",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1131D \u3010Gourmet choice\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0d\u5408\u6cd5\uff1a\u4e00\u4e2a\u76f8\u7b49\u7684\u96c6\u5408\u5185\u90e8\u51fa\u73b0\u4e86\u4e0d\u7b49\u53f7\uff0c\u6216\u4e0d\u7b49\u53f7\u51fa\u73b0\u4e86\u4e00\u4e2a\u6709\u5411\u73af\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9996\u5148\u5efa\u7acb\u4e00\u4e2a $|A| + |B|$ \u5927\u5c0f\u7684\u5e76\u67e5\u96c6\uff0c\u5148\u5904\u7406\u6240\u6709\u7684 \"=\" \u60c5\u51b5\u628a\u5e76\u67e5\u96c6\u5408\u5e76\uff0c\u7136\u540e\u9010\u4e2a\u5224\u65ad\u4e0d\u7b49\u53f7\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e0d\u7b49\u53f7\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u7684\u53d6\u503c\u662f\u7531\u5c0f\u4e8e\u5b83\u7684\u5143\u7d20\u7684\u53d6\u503c\u51b3\u5b9a\u7684\uff0c\u56e0\u6b64\u7531\u5c0f\u7684\u5143\u7d20\u8fde\u5411\u5927\u7684\u5143\u7d20\uff08\u5e76\u67e5\u96c6\u7684\u7956\u5148\uff09\u3002\n\n\u5bf9\u4e8e\u540e\u4e00\u79cd\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u76f4\u63a5\u5728\u8fd9\u5f20\u56fe\u4e0a\u62d3\u6251\u6392\u5e8f\u770b\u662f\u5426\u6709\u73af\u5c31\u597d\u4e86\u3002\u5bf9\u4e8e\u6700\u5c0f\u5316\u53d6\u503c\uff0c\u62d3\u6251\u4e4b\u524d\u8fdb\u961f\u7684\u70b9\u6743\u503c\u663e\u7136\u90fd\u8bbe\u4e3a 1\uff0c\u7136\u540e\u5176\u4ed6\u70b9\u7684\u6743\u503c\u5c31\u53d6\u524d\u9a71\u8282\u70b9\u6743\u503c\u7684 max + 1 \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\u6700\u540e\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u662f\u5e76\u67e5\u96c6\u7956\u5148\u7684\u70b9\u6743\u3002\n\n```C++\n#include <bits/stdc++.h>\n#define N 2005\n#define gc getchar\nusing namespace std;\n\ninline int rd() {\n  int x = 0;\n  char c = gc();\n  while (!isdigit(c)) c = gc();\n  while (isdigit(c)) {\n    x = x * 10 + (c ^ 48);c = gc();\n  }\n  return x;\n}\n\nchar a[N][N];\n\nint n, m, f[N], tot, hd[N], deg[N];\n\nint find(int x) {return x == f[x] ? x : f[x] = find(f[x]);}\n\ninline void merge(int x, int y) {f[find(x)] = find(y);}\n\nstruct edge{int to, nxt;} e[N * N];\n\ninline void add(int u, int v) {\n  e[++tot].to = v; ++deg[v];\n  e[tot].nxt = hd[u]; hd[u] = tot;\n}\n\nint cnt, mn[N];\n\nqueue<int> q;\n\ninline void toposort() {\n  for (int i = 1; i <= n + m; ++i) if (deg[i] == 0) q.push(i);\n  while (!q.empty()) {\n    ++cnt;\n    int u = q.front(); q.pop();\n    for (int i = hd[u], v; i; i = e[i].nxt) {\n      --deg[v = e[i].to];\n      mn[v] = max(mn[v], mn[u] + 1);\n      if (!deg[v]) q.push(v);\n    }\n  }\n}\n\nint main() {\n  n = rd(); m = rd();\n  for (int i = 1; i <= n + m; ++i) f[i] = i;\n  char c;\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= m; ++j) {\n      c = gc();\n      while (c != '>' && c != '<' && c != '=') c = gc();\n      a[i][j] = c;\n      if (c == '=') merge(i, j + n);\n    }\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= m; ++j)\n      if (a[i][j] != '=') {\n        if (find(i) == find(j + n)) {puts(\"No\"); return 0;}\n        if (a[i][j] == '<') add(find(i), find(j + n));\n        else add(find(j + n), find(i));\n      }\n  toposort();\n  if (cnt != n + m) {puts(\"No\"); return 0;}\n  puts(\"Yes\");\n  for (int i = 1; i <= n; ++i) printf(\"%d \", mn[find(i)] + 1);\n  puts(\"\");\n  for (int i = 1; i <= m; ++i) printf(\"%d \", mn[find(i + n)] + 1);\n  return 0;\n}\n```",
        "postTime": 1551398994,
        "uid": 56839,
        "name": "SGColin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1131D \u3010Gourmet choice\u3011"
    },
    {
        "content": "\u6765\u4e00\u6ce2\u5e7f\u544a\uff1a[$\\texttt{BLOG}$](https://stevebraveman.github.io/)\n\n# \u5e76\u67e5\u96c6 + \u62d3\u6251\u6392\u5e8f\n\n\u90a3\u4e48\u6211\u4eec\u8be5\u600e\u6837\u7528\u5e76\u67e5\u96c6\u548c\u62d3\u6251\u6392\u5e8f\u5462\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u628a\u6807\u6709`=`\u7684i\u548cj\u653e\u5728\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\u5185\uff0c\u7136\u540e\u6839\u636e\u9898\u610f\u8fde\u8fb9\uff0c\u5982\u679c\u662f`>`\uff0c\u5c31\u8fd9\u4e48\u8fde\uff1ai\u6240\u5728\u96c6\u5408\u7684\u6807\u53f7 -> j\u6240\u5728\u96c6\u5408\u7684\u6807\u53f7\uff0c\u5982\u679c\u662f`>`\u90a3\u4e48\u5c31\u76f8\u53cd\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u548c\u6211\u7684\u610f\u601d\u76f8\u53cd\uff0c\u5c31\u662f\u5728\u8d4b\u503c\u4e0a\u6709\u4e9b\u9ebb\u70e6\u3002\n\n\u8fde\u5b8c\u8fb9\u540e\uff0c\u76f4\u63a5\u8dd1\u62d3\u6251\u5c31\u53ef\u4ee5\u4e86\uff0c\u522b\u5fd8\u4e86\u5728\u62d3\u6251\u6392\u5e8f\u7684\u65f6\u5019\u7ed9\u70b9\u8d4b\u503c\n\n\u4e5f\u522b\u5fd8\u4e86\u5224\u65ad\u4e00\u4e0b\u6709\u6ca1\u6709\u73af\uff0c\u5982\u679c\u6709\u73af\uff0c\u90a3\u4e48\u5c31\u4e0d\u5b58\u5728\u3002\n\n\u53c8\u662f~~\u6109\u5feb\u7684~~\u4ee3\u7801\u65f6\u95f4\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#define MAXN 2000100\nchar mp[1010][1010];\nint n, m, head[MAXN], ecnt, x, y, ent[MAXN], out[MAXN], rank[MAXN], p, deli[MAXN], fa[MAXN], ans, tot;\nbool vis[MAXN], ifq[MAXN];\nstd::queue <int> q;\nstruct Edge {\n\tint v, nx;\n}e[MAXN];\nvoid add(int f, int t) {\n\te[++ecnt] = (Edge) {t, head[f]};\n\thead[f] = ecnt;\n}\nint find(int x) {\n\tif (fa[x] == x) return x;\n\telse return fa[x] = find(fa[x]);\n}\nvoid un(int x, int y) {\n\tx = find(x);\n\ty = find(y);\n\tif (x == y) return;\n\tif (rank[x] <= rank[y]) {\n\t\tfa[x] = y;\n\t\tif (rank[x] == rank[y]) {\n\t\t\trank[x]++;\n\t\t}\n\t}\n\telse {\n\t\tfa[y] = x;\n\t}\n\treturn;\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%s\", mp[i] + 1);\n\t}\n\tfor (int i = 1; i <= n + m; i++) {\n\t\tfa[i] = i;\n\t\trank[i] = 1;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tif (mp[i][j] == '=') {\n\t\t\t\tun(i, j + n);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tx = find(j + n);\n\t\t\ty = find(i);\n\t\t\tif (mp[i][j] == '>') {\n\t\t\t\tadd(x, y);\n\t\t\t\tent[y]++;\n\t\t\t}\n\t\t\tif (mp[i][j] == '<') {\n\t\t\t\tadd(y, x);\n\t\t\t\tent[x]++;\n\t\t\t}\n\t\t}\n\t}\n\ttot = n + m;\n\tfor (int i = 1; i <= n + m; i++) {\n\t\tp = find(i);\n\t\tif (!ent[p] && !ifq[p]) {\n\t\t\tq.push(p);\n\t\t\tifq[p] = 1;\n\t\t\tdeli[p] = 1;\n\t\t\tdeli[i] = 1;\n\t\t}\n\t}\n\tans = 0;\n\twhile (!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tvis[u] = 1;\n\t\tfor (int i = head[u]; i; i = e[i].nx) {\n\t\t\tint to = e[i].v;\n\t\t\tif (vis[to]) continue;\n\t\t\tent[to]--;\n\t\t\tif (!ent[to]) {\n\t\t\t\tdeli[to] = deli[u] + 1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\tmemset(vis, 0, sizeof(vis));\n\tfor (int i = 1; i <= n + m; i++) {\n\t\tif (!ent[find(i)]) ans++;\n\t}\n\t// for (int i = 1; i <= n + m; i++) {\n\t// \tprintf(\"%d \", ent[find(i)]);\n\t// }\n\t// puts(\"\");\n\tif (tot != ans) {\n\t\t// printf(\"%d %d\\n\", tot, ans);\n\t\tputs(\"No\");\n\t\treturn 0;\n\t}\n\tputs(\"Yes\");\n\tfor (int i = 1; i <= n + m; i++) {\n\t\tint p = find(i);\n\t\tdeli[i] = deli[p];\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tprintf(\"%d \", deli[i]);\n\t}\n\tputs(\"\");\n\tfor (int i = n + 1; i <= n + m; i++) {\n\t\tprintf(\"%d \", deli[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1551446211,
        "uid": 96570,
        "name": "RiverFun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1131D \u3010Gourmet choice\u3011"
    }
]