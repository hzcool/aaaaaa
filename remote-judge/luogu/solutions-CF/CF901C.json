[
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://m-sea-blog.com/archives/4586/)\n\n---\n\n\u300c\u56fe\u4e2d\u6ca1\u6709\u5076\u73af\u300d\u7b49\u4ef7\u4e8e\u300c\u56fe\u662f\u4ed9\u4eba\u638c\u300d\u3002\u56e0\u6b64\u672c\u9898\u4e2d\u300c\u4e00\u4e2a\u8bf1\u5bfc\u5b50\u56fe\u662f\u4e8c\u5206\u56fe\u300d\u7b49\u4ef7\u4e8e\u300c\u4e00\u4e2a\u8bf1\u5bfc\u5b50\u56fe\u6ca1\u6709\u73af\u300d\u3002\n\n\u8003\u8651\u6c42\u51fa\u4e00\u4e2a $nxt_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u5de6\u7aef\u70b9\u7684\u6700\u5927\u53f3\u7aef\u70b9\u3002\u6211\u4eec\u627e\u5230\u6240\u6709\u7684\u73af\uff0c\u5047\u8bbe\u67d0\u4e2a\u73af\u4e0a\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u4e3a $mn$\uff0c\u6700\u5927\u503c\u4e3a $mx$\uff0c\u90a3\u4e48 $[1,mn]$ \u4e2d\u7684\u6240\u6709\u70b9\u7684 $nxt$ \u90fd\u4e0d\u4f1a $\\geq mx$\uff0c\u5373\u7528 $mx-1$ \u5bf9 $nxt_{1..mn}$ \u53d6 $\\min$\u3002\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u4ec5\u5728 $mn$ \u5904\u4fee\u6539\u6700\u540e\u518d\u626b\u4e00\u904d\u6c42\u51fa\u6240\u6709 $nxt$\u3002\n\n\u8003\u8651\u8be2\u95ee\u600e\u4e48\u505a\u3002\u6211\u4eec\u4e8c\u5206\u51fa\u4e00\u4e2a\u6700\u5927\u7684\u6ee1\u8db3 $nxt_x\\leq r$ \u7684\u4f4d\u7f6e $x$\u3002\u663e\u7136 $[x+1,r]$ \u7684\u6240\u6709\u5b50\u533a\u95f4\u90fd\u5408\u6cd5\uff0c\u800c $[l,x]$ \u7684\u5408\u6cd5\u65b9\u6848\u6570\u7b49\u4e8e\u6240\u6709 $nxt$ \u7684\u548c\u51cf\u53bb\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u548c\uff0c\u4ece\u800c\u4e0d\u96be\u7b97\u51fa\u7b54\u6848\u3002\n\n```cpp\n// ===================================\n//   author: M_sea\n//   website: http://m-sea-blog.com/\n// ===================================\n#include <algorithm>\n#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#define re register\nusing namespace std;\ntypedef long long ll;\n\ninline int read() {\n    int X=0,w=1; char c=getchar();\n    while (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n    while (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n    return X*w;\n}\n\nconst int N=300000+10,M=300000+10;\n\nint n,m,q;\nint nxt[N]; ll sum[N];\n\nstruct edge { int v,nxt; } e[M<<1];\nint head[N];\ninline void addEdge(int u,int v) {\n    static int c=0;\n    e[++c]=(edge){v,head[u]},head[u]=c;\n}\n\nint vis[N],in[N],sta[N],top=0;\ninline void dfs(int u,int fa) {\n    vis[u]=1,sta[++top]=u;\n    for (re int i=head[u];i;i=e[i].nxt) {\n        int v=e[i].v; if (v==fa) continue;\n        if (!vis[v]) dfs(v,u);\n        else if (!in[v]) {\n            int mx=0,mn=n+1;\n            while (\"longge ak ioi\") {\n                int x=sta[top--]; in[x]=1;\n                mx=max(mx,x),mn=min(mn,x);\n                if (x==v) break;\n            }\n            nxt[mn]=min(nxt[mn],mx-1);\n        }\n    }\n    if (!in[u]) --top;\n}\n\nint main() {\n    n=read(),m=read();\n    for (re int i=1;i<=m;++i) {\n        int u=read(),v=read();\n        addEdge(u,v),addEdge(v,u);\n    }\n    for (re int i=1;i<=n;++i) nxt[i]=n;\n    for (re int i=1;i<=n;++i) if (!vis[i]) dfs(i,0);\n    for (re int i=n-1;i;--i) nxt[i]=min(nxt[i+1],nxt[i]);\n    for (re int i=1;i<=n;++i) sum[i]=sum[i-1]+nxt[i];\n    q=read();\n    while (q--) {\n        int l=read(),r=read();\n        int L=l,R=r;\n        while (L<R) {\n            int mid=(L+R+1)>>1;\n            if (nxt[mid]<r) L=mid;\n            else R=mid-1;\n        }\n        if (nxt[L]>r) --L;\n        printf(\"%lld\\n\",1ll*(r-L)*(r-L+1)/2+sum[L]-sum[l-1]-1ll*(l+L-2)*(L-l+1)/2);\n    }\n    return 0;\n}\n```",
        "postTime": 1578994144,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF901C \u3010Bipartite Segments\u3011"
    },
    {
        "content": "## \u3010Analysis\u3011\n\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u7ed3\u8bba\uff1a\n#####  \u5982\u679c\u4e00\u4e2a\u65e0\u5411\u56fe\u662f\u4e8c\u5206\u56fe\uff0c\u5219\u56fe\u4e2d\u4e0d\u5b58\u5728\u5947\u73af\n\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1\u4e0d\u4f1a\u6709\u5076\u73af\uff0c\u90a3\u4e48\u53ea\u8981\u5b58\u5728\u73af\u5c31\u4e0d\u884c\uff0c\u90a3\u4e48\u9898\u76ee\u5c31\u8f6c\u5316\u6210\u4e86\u8be2\u95ee\u533a\u95f4$[L,R]$,\u6709\u591a\u5c11\u533a\u95f4\u6ee1\u8db3$[L`,R`]$\u4e0d\u5b58\u5728\u73af\uff1b\n\u4e0d\u59a8\u8bbe$f_l$\u8868\u793a$r_{max}$\u6ee1\u8db3$[l,r]$\u4e0d\u5b58\u5728\u73af\uff0c\u90a3\u4e48$Ans = \\sum_{i = l}^{r} min(f_{i}, r) - i +1$\n\u4e5f\u5c31\u662f$Ans = \\sum_{i = l}^{r}min(f_{i} + 1, r + 1) - i$\n\u4e0d\u96be\u53d1\u73b0\uff0c$f$\u662f\u5355\u8c03\u4e0d\u964d\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e0b$f + 1\\le r + 1$\u7684\u4f4d\u7f6e,\u7136\u540e\u7528\u524d\u7f00\u548c  $O(1)$\u7b97\u4e00\u4e0b\n\u90a3\u4e48\u5982\u4f55\u5feb\u901f\u8ba1\u7b97\u51fa$f$\uff1b\u5148\u7528$Tarjan$\u628a\u73af\u627e\u51fa\u6765,\u987a\u4fbf\u628a\u6bcf\u4e2a\u73af\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6c42\u51fa\u6765\uff0c\u4ee4$H$\u4e3a\u73af\uff0c\u5219$f_i + 1 = min(H_{jmax})$\u5f53\u4e14\u4ec5\u5f53$H_{jmin}\\le i$ \u53ef\u4ee5\u5012\u53d9\u679a\u4e3e\u4e00\u4e0bn\uff0c\u628a\u73af\u6392\u4e2a\u5e8f\u5c31\u53ef\u4ee5$O(N)$\u6c42\u51fa\u6765\u4e86\n\u603b\u590d\u6742\u5ea6\u4e3a$O(N + Q\\cdot log_{2} \\cdot N)$\n## \u3010Code\u3011\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <set>\n#include <iostream>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <map>\n \nnamespace IO\n{\n    inline char gc()\n    {\n        static char s[1<<20|1]={0},*p1=s,*p2=s;\n        return (p1==p2)&&(p2=(p1=s)+fread(s,1,1<<20,stdin),p1==p2)?EOF:*(p1++);\n    }\n//\tinline char gc() { return getchar(); }\n\tinline long long read()\n\t{\n\t\tlong long ret=0;bool flag=0;char c=gc();\n\t\twhile ((c<'0')|(c>'9')) flag ^= !(c^'-'),c=gc();\n\t\twhile ((c>='0')&(c<='9')) ret=(ret<<1)+(ret<<3)+(c^'0'),c=gc();\n\t\treturn flag?-ret:ret;\n \t}\n \tchar OutputAns[1<<20|1],*OutputCur = OutputAns;\n \tinline void output()\n \t{\n \t\tOutputCur -= fwrite(OutputAns,1,OutputCur - OutputAns,stdout);\n\t}\n\tinline void print(long long ans)\n\t{\n\t\tchar s[20]={0};\n\t\tif (OutputCur - OutputAns + sprintf(s,\"%I64d\",ans) >> 20) output();\n\t\tOutputCur += sprintf(OutputCur,\"%I64d\",ans);\n\t}\n\tinline void printc(char c)\n\t{\n\t\tif (OutputCur - OutputAns + 1 >> 20) output();\n\t\t*(OutputCur++) = c;\n\t}\n}\n \nusing IO::read;\nusing IO::print;\nusing IO::printc;\nusing IO::output;\n \ntemplate <class T> inline T max (T x, T y) { return x > y ? x : y; }\n \ntemplate <class T> inline T min(T x, T y) { return x < y ? x : y; }\n \nconst int M = 3e5 + 11;\n \nint Nxt[M<<1], To[M<<1], Fir[M], L[M], R[M], F[M];\n \nlong long Sum[M];\n \nint n, m, q, cur, tot, cur2;\n \nstd::pair <int, int> H[M];\n \nclass Tar\n{\n\tprivate: \n\t\tint Low[M], Sta[M];\n\t\t\n\t\tint _cl;\n\tpublic:\n\t\tint Dfn[M];\n\t\t\n\t\tvoid Tarjan(int u, int fa)\n\t\t{\n\t\t\tSta[++Sta[0]] = u, Dfn[u] = Low[u] = ++_cl;\n\t\t\tfor (int i = Fir[u];i;i = Nxt[i])\n\t\t\t{\n\t\t\t\tint v = To[i];\n\t\t\t\tif (!Dfn[v]) Tarjan(v, u), Low[u] = std::min(Low[u], Low[v]);\n\t\t\t\telse if (fa != v) Low[u] = std::min(Low[u], Dfn[v]);\n\t\t\t}\n\t\t\tif (Low[u] == Dfn[u])\n\t\t\t{\n\t\t\t\tL[++cur] = R[cur] = u;  int tmp;\n\t\t\t\tdo tmp = Sta[Sta[0]--], L[cur] = min(L[cur], tmp), R[cur] = max(R[cur], tmp); while (tmp ^ u);\n\t\t\t}\n\t\t}\n};\n \nTar _ta;\n \ninline void AddEdge(int u,int v)\n{\n\tNxt[++tot] = Fir[u], To[tot] = v, Fir[u] = tot;\n}\n \ninline void Input()\n{\n\tn = read(), m = read();\n\tfor (int i = 1;i <= m; ++i)\n\t{\n\t\tint u = read(), v = read();\n\t\tAddEdge(u, v); AddEdge(v, u);\n\t} q = read();\n\tfor (int i = 1;i <= n; ++i)\n\t\tif (!_ta.Dfn[i]) _ta.Tarjan(i, -1);\n}\n \ninline void Solve()\n{\n\tfor (int i = 1;i <= cur; ++i)\n\t\tif (L[i] < R[i]) H[++cur2] = std::make_pair(L[i], R[i]); std::sort(H + 1, H + 1 + cur2);\n\tfor (int i = n, j = cur2, tmp = n + 1; i; --i)\n\t{\n\t\twhile (j && H[j].first >= i) tmp = min(tmp, H[j--].second); \n\t\tF[i] = tmp;\n\t}\n\tfor (int i = 1;i <= n; ++i) Sum[i] = Sum[i - 1] + F[i];\n\twhile (q--)\n\t{\n\t\tint liml = read(), limr = read(); int pos = std::lower_bound(F + 1, F + 1 + n, limr + 1) - F;\n\t\tlong long ans = 0;\n\t\tif (pos < liml) ans = (long long)(limr - liml + 1) * (limr + 1);\n\t\telse if (pos > limr) ans = Sum[limr] - Sum[liml - 1];\n\t\telse ans = (long long)Sum[pos - 1] - Sum[liml - 1] + (long long)(limr - pos + 1) * (limr + 1);\n\t\tans -= (long long)(limr + liml) * (limr - liml + 1) >> 1;printf(\"%I64d\\n\", ans);\n\t}\n}\n \nint main(void)\n{\n//\tfreopen(\"count.in\", \"r\", stdin), freopen(\"count.out\", \"w\", stdout);\n\tInput();\n\tSolve();\n\toutput();\n\treturn 0;\n}\n```",
        "postTime": 1566132858,
        "uid": 75093,
        "name": "Awdrgysxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF901C \u3010Bipartite Segments\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a $O(n+q \\log n)$ \u7684\u505a\u6cd5\u3002\n\n\u611f\u8c22 [@reanap](https://www.luogu.com.cn/user/171554) \u627e\u5230\u8fd9\u9053\u9898\u5e76\u548c\u6211\u4e00\u8d77\u63a2\u8ba8\u7814\u7a76\uff08\u51c6\u786e\u6765\u8bf4\uff0c\u90fd\u662f\u5979\u7684\u601d\u8def\uff09\u3002\u5728\u6b64\u819c\u62dc\u3002\n\n\u867d\u7136\u8bf4 $2300$ \u662f\u9ed1\u9898\u786e\u5b9e\u6709\u70b9\u5047\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u786e\u5b9e\u5f88\u6709\u610f\u601d\u3002\n\n\u4ee5\u4e0b\u6839\u636e\u6211\u548c\u5979\u505a\u8fd9\u9053\u9898\u7684\u601d\u8def\u8fdb\u884c\u89e3\u9898\u3002\n\n---\n\n\u6839\u636e\u9898\u76ee\u63cf\u8ff0\u5206\u6790\u6027\u8d28\u3002\n\n\u9898\u76ee\u63cf\u8ff0\u5730\u5f88\u6e05\u695a\uff0c\u8fd9\u4e2a\u56fe**\u6ca1\u6709\u5076\u73af**\u3002\u4f17\u6240\u5468\u77e5\uff0c\u4e8c\u5206\u56fe\u4e0d\u80fd\u6709\u5947\u73af\u3002\u800c\u6211\u4eec\u9700\u8981\u6c42\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u5185\u6709\u591a\u5c11\u4e2a\u5b50\u533a\u95f4 $[x,y](l \\leq x \\leq y \\leq r)$\uff0c\u4f7f\u5f97\u8282\u70b9 $x,x+1,x+2,\\cdots,y$ \u6784\u6210\u7684\u56fe\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u5982\u679c\u533a\u95f4 $[l,r]$ \u5185\u6240\u6709\u8282\u70b9\u6784\u6210\u7684\u4e00\u4e2a\u56fe\u4e0d\u80fd\u591f\u6784\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u533a\u95f4 $[l-1,r]$ \u5185\u6240\u6709\u8282\u70b9\u6784\u6210\u7684\u4e00\u4e2a\u56fe\u4e0d\u80fd\u591f\u6784\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u8bc1\u660e\uff1a\u533a\u95f4 $[l,r]$ \u5185\u6240\u6709\u8282\u70b9\u5df2\u7ecf\u6784\u6210\u7684\u4e00\u4e2a\u56fe\u4e0d\u80fd\u591f\u6784\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u65b0\u52a0\u5165\u7684\u8282\u70b9 $l-1$ \u53ea\u4f1a\u5bf9\u56fe\u9020\u6210\u66f4\u5927\u7684\u8d1f\u62c5\uff0c\u800c\u4e0d\u4f1a\u5206\u62c5\u4e0d\u80fd\u67d3\u8272\u7684\u8282\u70b9\u6240\u9762\u4e34\u7684\u95ee\u9898\u3002\n\n\u5b9a\u4e49 $nxt_l$ \u4e3a\uff1a$[l,nxt_l]$ \u5185\u6240\u6709\u8282\u70b9\u80fd\u591f\u6784\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\u5e76\u4e14 $nxt_l$ \u6700\u5927\u3002\u6839\u636e\u6211\u4eec\u4e0a\u6587\u7684\u5206\u6790\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a $i$\uff0c\u6ee1\u8db3 $nxt_i \\geq nxt_{i-1}$\u3002\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u6211\u4eec\u8981\u5982\u4f55\u6c42\u51fa $nxt$ \u6570\u7ec4\u548c\u89e3\u51b3\u67e5\u8be2\u4e86\u3002\n\n\u5148\u8003\u8651\u5904\u7406\u8fd9\u4e2a $nxt$ \u6570\u7ec4\u3002\u6211\u4eec\u60f3\u627e\u51fa $nxt$ \u6570\u7ec4\uff0c\u5c31\u8981\u5feb\u901f\u5224\u65ad\u4e00\u4e2a\u533a\u95f4\u5185\u662f\u5426\u6709\u73af\u3002\u5b9a\u4e49 $cou_i$ \u4e3a\u5f53\u524d\u5df2\u7ecf\u52a0\u5165\u7684\u70b9\u4e2d\uff0c\u5c5e\u4e8e\u73af $i$ \u7684\u8282\u70b9\u6709\u591a\u5c11\u4e2a\u3002\u56e0\u4e3a $nxt_i \\geq nxt_{i-1}$\uff0c\u6211\u4eec\u5c31\u7528\u53cc\u6307\u9488 $l,r$ \u53bb\u7ef4\u62a4\u5f53\u524d\u786e\u5b9a\u7684\u533a\u95f4\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9 $p$ \u5c5e\u4e8e\u73af $q$\uff08\u6216\u8005\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u73af\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528\u53bb\u7ba1\u5b83\uff09\uff0c\u5c06 $cou_q$ \u52a0\u4e0a $1$\u3002\u5982\u679c $cou_q$ \u7684\u5927\u5c0f\u5df2\u7ecf\u7b49\u4e8e\u73af $q$ \u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u4e0d\u4f1a\u6784\u6210\u4e8c\u5206\u56fe\u4e86\uff0c$r \\gets r-1$\uff0c\u6b64\u65f6\u7684 $nxt_l=r$\u3002\u632a\u52a8\u6307\u9488 $l$\uff0c\u5220\u9664\u4e00\u4e2a\u70b9\u540c\u7406\u3002\u5176\u5b9e\u8fd9\u4e2a\u5730\u65b9\u4e5f\u6709\u70b9\u50cf\u83ab\u961f\uff08\n\n\u5728\u4e00\u4e2a\u56fe\u4e0a\u627e\u73af\u662f\u4e00\u4ef6\u975e\u5e38\u9ebb\u70e6\u7684\u4e8b\u60c5\uff0c\u4f3c\u4e4e\u5e76\u4e0d\u600e\u4e48\u597d\u627e\u3002\u6709\u4e00\u4e2a\u975e\u5e38\u53ef\u7591\u7684\u70b9\u4eff\u4f5b\u8fd8\u6ca1\u6709\u7528\u5b8c\u2014\u2014\u8fd9\u4e2a\u56fe**\u6ca1\u6709\u5076\u73af**\u3002\u56fe\u6ca1\u6709\u5076\u73af\uff0c\u8bf4\u660e\u4e0d\u53ef\u80fd\u6709\u4e24\u4e2a\u5947\u73af\u5408\u5e76\u5728\u4e00\u8d77\uff08\u56e0\u4e3a\u8fd9\u6837\u4f1a\u6784\u6210\u4e00\u4e2a\u5076\u73af\uff09\u3002\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bf4**\u6ca1\u6709\u4e24\u4e2a\u73af\u5171\u7528\u4e00\u6761\u8fb9**\u3002\u8bf6\u597d\u50cf\u6709\u70b9\u719f\u6089\uff0c\u8fd9\u96be\u9053\u4e0d\u5c31\u662f**\u4ed9\u4eba\u638c**\u5417\uff1f\n\n---\n\n\u6ce8\uff1a\u5176\u5b9e\u8fd9\u4e2a\u662f\u975e\u5e38\u6709\u7528\u7684\u4e24\u4e2a\u6027\u8d28\uff1a\n\n- \u5982\u679c\u56fe\u6ca1\u6709\u5076\u73af\uff0c\u56fe\u4e00\u5b9a\u4e3a\u4ed9\u4eba\u638c\uff08**\u4f46\u662f\u4ed9\u4eba\u638c\u662f\u53ef\u80fd\u6709\u5076\u73af\u7684**\uff09\uff1b   \n- \u5982\u679c\u56fe\u6ca1\u6709\u5947\u73af\uff0c\u56fe\u4e00\u5b9a\u4e3a\u4e8c\u5206\u56fe\uff08\u53cd\u4e4b\u4ea6\u7136\uff09\u3002\n\n---\n\n\u4e8e\u662f\u6211\u4eec\u786e\u5b9a\u4e86\uff1a\u8fd9\u4e2a\u56fe\u662f\u7531\u6811\uff0c\u57fa\u73af\u6811\uff08\u5305\u542b\u4e86\u73af\uff09\u4e0e\u4ed9\u4eba\u638c\u6784\u6210\u7684\u4e00\u4e2a\u56fe\uff08~~\u6216\u8005\u8bf4\uff0c\u6c99\u6f20\u7eff\u6d32~~\uff09\u3002\u7136\u800c\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u4e24\u4e2a\u73af\u4e0d\u4f1a\u5171\u7528\u4e00\u6761\u8fb9\u7684\u7ed3\u8bba\u5c31\u80fd\u6c42\u51fa\u8fd9\u4e2a\u56fe\u91cc\u9762\u7684\u73af\u4e86\uff08\n\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86 $nxt$ \u6570\u7ec4\uff0c\u627e\u5230\u6700\u5927\u7684\u90a3\u4e2a $s$\uff0c\u4f7f\u5f97 $nxt_s \\leq r$\u3002\u8fd9\u4e2a\u65f6\u5019 $[s+1,r]$\n \u5185\u6240\u6709\u7684\u533a\u95f4\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u53ef\u4ee5\u8ba1\u7b97\uff1b\u8ba1\u7b97 $[l,s]$ \u7684\u65b9\u6848\u6570\uff0c\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u4e00\u4e0b $nxt$ \u6570\u7ec4\u7684\u524d\u7f00\u548c\uff0c\u7b54\u6848\u5c31\u662f $sum_s -sum_{l-1} - \\frac{(s-l+1)\\times (s+l-2)}{2}$\u3002\n \n\u53e6\u5916\uff0c\u56fe\u4e2d\u6700\u591a\u53ea\u6709 $\\lfloor \\dfrac{n}{3} \\rfloor$ \u4e2a\u5947\u73af\uff0c\u53ef\u4ee5\u628a\u6570\u7ec4\u5f00\u5c0f\u4e00\u70b9\u3002\u7136\u540e\u4e3a\u4ec0\u4e48\u6211\u5728 CF \u4e0a\u6839\u672c\u6ca1\u770b\u5230\u8bc4\u6d4b\u7ed9\u6211\u8fd4\u56de WA \u554a\u3002\n \n\u4ee3\u7801\u7ec6\u8282\u633a\u5c11\u7684\uff0c\u9002\u5408\u6211\u8fd9\u79cd\u50bb\u903c\u9009\u624b\uff0c\u9664\u4e86\u4e8c\u5206\u9505\u4e86\u770b\u4e86\u4e0b\u9898\u89e3\uff08\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nvector<LL> G[300005],cir[300005];\nLL n,m,q,bel[300005],dep[300005],fa[300005],sz[100005],nxt[300005],cou[100005],sum[300005],cnt;\nvoid get(LL x,LL y)\n{\n\tif(dep[x]<dep[y])\treturn ;\n\t++cnt;\n\tcir[cnt].push_back(y);\n\tbel[y]=cnt;\n\twhile(x!=y)\tcir[cnt].push_back(x),bel[x]=cnt,x=fa[x];\n\tsz[cnt]=cir[cnt].size();\n}\nvoid dfs(LL now,LL pre)\n{\n\tfa[now]=pre;\n\tdep[now]=dep[pre]+1;\n\tfor(unsigned int i=0;i<G[now].size();++i)\n\t{\n\t\tLL to=G[now][i];\n\t\tif(to==pre)\tcontinue;\n\t\tif(dep[to])\tget(now,to);\n\t\telse\tdfs(to,now);\n\t}\n}\nvoid avoidWarning()\n{\n\twhile(q-->0)\n\t{\n\t\tLL ll,rr;\n\t\tscanf(\"%lld %lld\",&ll,&rr);\n\t\tLL l=ll,r=rr,ans=ll;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tLL mid=(l+r)>>1;\n\t\t\tif(nxt[mid]<rr)\tl=mid+1,ans=mid;\n\t\t\telse\tr=mid-1;\n\t\t}\n\t\tif(nxt[ans]>rr)\t--ans;\n\t\tprintf(\"%lld\\n\",(rr-ans)*(rr-ans+1)/2+sum[ans]-sum[ll-1]-(ans-ll+1)*(ans+ll-2)/2);\n\t}\n}\nint main(){\n\tscanf(\"%lld %lld\",&n,&m);\n\tfor(LL i=1;i<=m;++i)\n\t{\n\t\tLL u,v;\n\t\tscanf(\"%lld %lld\",&u,&v);\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tfor(LL i=1;i<=n;++i)\tif(!dep[i])\tdfs(i,0);\n\tLL l=1,r=0;\n\twhile(l<=n)\n\t{\n\t\twhile(r<n)\n\t\t{\n\t\t\t++r;\n\t\t\tLL pos=bel[r];\n\t\t\t++cou[pos];\n\t\t\tif(cou[pos]==sz[pos])\n\t\t\t{\n\t\t\t\t--cou[pos];\n\t\t\t\t--r;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tnxt[l]=r;\n\t\tLL pos=bel[l];\n\t\t--cou[pos];\n\t\t++l;\n\t}\n\tfor(LL i=1;i<=n;++i)\tsum[i]=sum[i-1]+nxt[i];\n\tscanf(\"%lld\",&q);\n\tavoidWarning();\n\treturn 0;\n}\n```",
        "postTime": 1597396533,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF901C \u3010Bipartite Segments\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF901C)\n\n## \u601d\u8def\n\n\u9707\u60ca\uff0c\u600e\u4e48\u80fd\u6ca1\u6709\u4e3b\u5e2d\u6811\u9898\u89e3\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u544a\u8bc9\u6211\u4eec\u8fd9\u5f20\u56fe\u6ca1\u6709\u5076\u73af\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u73af\u5957\u73af\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\uff0c\u627e\u51fa\u56fe\u4e2d\u6240\u6709\u7684\u73af\u5c31\u7b49\u4ef7\u4e8e\u627e\u51fa\u6240\u6709\u7684\u8fb9\u53cc\uff0c\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u8fb9\u53cc\u5185\u8282\u70b9\u7684 $\\min$ \u548c $\\max$\uff0c\u628a\u5b83\u4eec\u8bb0\u4e3a $l,r$\uff0c\u90a3\u4e48\u5047\u5982 $x,y$ \u5185\u5b58\u5728\u4e00\u6bb5\u5b8c\u6574\u7684\u533a\u95f4 $l,r$\uff0c\u90a3\u5c31\u4e0d\u5408\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa $nxt_i$ \u8868\u793a $i$ \u5f80\u53f3\u6700\u591a\u5ef6\u4f38\u5230\u54ea\u4e2a\u8282\u70b9\u3002\n\n\u8003\u8651\u7b54\u6848\u5982\u4f55\u8ba1\u7b97\uff0c\u5bb9\u6613\u53d1\u73b0\u7b54\u6848\u5c31\u662f\uff1a$\\sum_{i=l}^r \\min(nxt_i,r)-i+1$\u3002\u4e0d\u59a8\u62c6\u4e00\u62c6\u8d21\u732e\uff0c\u5316\u7b80\u6210\u4e3a $\\sum_{i=l}^r\\min(nxt_i,r)-\\sum_{i=l}^r i-1$\uff0c\u53f3\u8fb9\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5 $\\mathcal O(1)$ \u6c42\u51fa\uff0c\u5de6\u8fb9\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u7136\u540e\u76f4\u63a5\u7528\u4e3b\u5e2d\u6811\u6c42\u5f97\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n \\log n)$\u3002\n\n## \u7801\n\n```cpp\n//A tree without skin will surely die.\n//A man without face will be alive\n#include<bits/stdc++.h>\nusing namespace std;\n#define mid ((l+r)>>1)\n#define sqr(x) ((x)*(x))\n#define all(x) (x).begin(),(x).end()\n#define Tim ((double)clock()/CLOCKS_PER_SEC)\n#define lowbit(x) (x&-x)\nint const N=3e5+10;\nint vis[N],tot,del[N],nxt[N],root[N];\nvector< pair<int,int> >a[N];\nstruct node{int u,v;}b[N];\nint dfn[N],low[N],ind[N],minx,cnt,maxx,s[N],top;\ninline void tarjan(int x,int fa){\n\tdfn[x]=low[x]=++cnt;\n\ts[++top]=x;ind[x]=1;\n\tfor (auto [v,id]:a[x]){\n\t\tif (v==fa) continue;\n\t\tif (!dfn[v]){\n\t\t\ttarjan(v,x);\n\t\t\tif (low[v]>dfn[x]) del[id]=1;\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t}else if (ind[v]) low[x]=min(low[x],dfn[v]);\n\t}\n\tif (low[x]==dfn[x]){\n\t\twhile (1){\n\t\t\tint X=s[top--];\n\t\t\tind[X]=0;\n\t\t\tif (X==x) break;\n\t\t}\n\t}\n}\nint go;\ninline void dfs(int x){\n\tvis[x]=1;minx=min(minx,x);\n\tmaxx=max(maxx,x);++go;\n\tfor (auto [v,id]:a[x]){\n\t\tif (vis[v]) continue;\n\t\tif (del[id]) continue;\n\t\tdfs(v);\n\t}\n}\ninline bool cmp(node x,node y){return x.u>y.u;}\nstruct hjt_Tree{\n\tint lc[N*28],rc[N*28],c[N*28];\n\tlong long d[N*28];\n\tinline void update(int &x,int la,int l,int r,int p){\n\t\tx=++cnt;c[x]=c[la];d[x]=d[la];lc[x]=lc[la];rc[x]=rc[la];\n\t\tif (l==r){++c[x];d[x]+=p;return;}\n\t\tif (p<=mid) update(lc[x],lc[la],l,mid,p);\n\t\telse update(rc[x],rc[la],mid+1,r,p);\n\t\tc[x]=c[lc[x]]+c[rc[x]];\n\t\td[x]=d[lc[x]]+d[rc[x]];\n\t}\n\tinline pair<int,long long> query(int x,int l,int r,int ll,int rr){\n\t\tif (ll<=l && r<=rr) return {c[x],d[x]};\n\t\tlong long res1=0,res2=0;\n\t\tif (ll<=mid){auto down=query(lc[x],l,mid,ll,rr);res1+=down.first,res2+=down.second;}\n\t\tif (mid<rr){auto down=query(rc[x],mid+1,r,ll,rr);res1+=down.first,res2+=down.second;}\n\t\treturn {res1,res2};\n\t}\n}T;\ninline long long run(int x,int y){return 1ll*(x+y)*1ll*(y-x+1)/2;}\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tint n,m;cin>>n>>m;int u1=0;\n\tfor (int i=1;i<=m;++i){\n\t\tint u,v;cin>>u>>v;\n\t\tif (!u1) u1=u;\n\t\ta[u].push_back({v,i});\n\t\ta[v].push_back({u,i});\n\t}\n\tfor (int i=1;i<=n;++i) if (!dfn[i]) tarjan(i,0);\n\tfor (int i=1;i<=n;++i)\n\t\tif (!vis[i]){\n\t\t\tminx=1e9,maxx=-1e9;go=0;\n\t\t\tdfs(i);\n\t\t\tif (go>1) b[++tot].u=minx,b[tot].v=maxx;\n\t\t}\n\tsort(b+1,b+tot+1,cmp);\n\tint now=n+1,l=1;\n\tfor (int i=n;i;--i){\n\t\twhile (l<=n && b[l].u>=i) now=min(now,b[l].v),++l;\n\t\tnxt[i]=now-1;\n\t}\n\troot[0]=cnt=1;\n\tfor (int i=1;i<=n;++i) T.update(root[i],root[i-1],0,n,nxt[i]);\n\tint q;cin>>q;\n\tint tag=0;\n\twhile (q--){\n\t\tint l,r;cin>>l>>r;\n\t\tlong long res=T.query(root[r],0,n,0,r).second-T.query(root[l-1],0,n,0,r).second;\n\t\tres+=1ll*(T.query(root[r],0,n,r+1,n).first-T.query(root[l-1],0,n,r+1,n).first)*r;\n\t\tres-=run(l-1,r-1);\n\t\tcout<<res<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1670980785,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF901C Bipartite Segments"
    },
    {
        "content": "\u611f\u8c22\u697c\u4e0b **\u300cQQ\u7ea2\u5305\u300d** \u63d0\u4f9b\u7684\u5b9d\u8d35LCT\u601d\u8def\n\n~~\u7136\u800c\u4ed6\u5199\u4e86\u53e6\u4e00\u4e2a\u7b97\u6cd5~~\n\n\u90a3\u6211\u8fd9\u8fb9\u5c31\u628a\u8fd9\u4e2a\u4e1c\u897f\u5b9e\u73b0\u4e00\u4e0b\n\n\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4e0d\u7528\u4ec0\u4e48\u7ebf\u6bb5\u6811\n\n#### \u9898\u9762:\u7ed9\u4f60\u4e00\u4e2a\u6709n\u4e2a\u70b9\u7684\u65e0\u5411\u56fe\uff0c\u6ca1\u6709\u5076\u73af\u3002\n\n\u90a3\u5c31\u662f\u5982\u679c\u6709\u73af\u5c31\u53ea\u80fd\u662f\u5947\u73af\uff0c\u6240\u4ee5\u5224\u6709\u6ca1\u6709\u73af\u5c31\u53ef\u4ee5\u77e5\u9053\u80fd\u4e0d\u80fd\u6784\u6210\u4e8c\u5206\u56fe\n\n\u9996\u5148\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u4e1c\u897f\u6bd4\u5982\u8bb0\u4f5c$f()$\n\n $$f(l)=max \\left \\{ r \\right \\}([l,r]\\text{\u65e0\u73af})$$\n\n\u5047\u5b9a$Rm=f(l)$\uff0c\u90a3\u4e48$ \\forall r \\in[l,Rm],\\text{\u90fd\u6709}[l,r] \\text{\u65e0\u73af}, \\forall r \\in (Rm,n],\\text{\u90fd\u6709}[l,r] \\text{\u6709\u73af}$\n\n\u7c7b\u4f3c **Two-Pointers** \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece$n$\u52301\u679a\u4e3e$l$\uff0c\u6bcf\u6b21$l$\u5f80\u524d\u62d3\u5c55\u7684\u65f6\u5019\uff0c\u770b$[l,r]$\u662f\u5426\u6709\u73af\uff0c\u4e0d\u65ad\u5c1d\u8bd5\u5f80\u524d\u7f29\u5c0f$r$\u76f4\u5230\u65e0\u73af\uff0c\u5c31\u53ef\u4ee5\u5bf9\u6bcf\u4e2a$l$\u9884\u5904\u7406\u51fa$f(l)=r$\n\n\u6709\u4e86\u8fd9\u4e2a\u73a9\u610f\uff0c\u6211\u4eec\u600e\u4e48\u7edf\u8ba1\u8be2\u95ee\u5462\uff1f\n\n\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u6309r\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u6bd4\u5982\u5f53\u524d\u7684\u8be2\u95ee\u53f3\u7aef\u70b9\u4e3a$qr$\n\n\u5bf9\u4e8e\u6240\u6709\u7684$i \\ s.t. f(i)<=qr,i$\u7684\u5355\u70b9\u8d21\u732e\u4e3a$f(i)-i+1$\uff0c\u8bb0\u8fd9\u6837\u6700\u5927\u7684$i=last$\uff0c\u5e76\u628a\u6240\u6709i\u7684\u8d21\u732e\u8bb0\u4e0b\u6765\u5b58\u5230\u524d\u7f00\u548c\u6570\u7ec4\u91cc\u8bb0\u4f5c$sum[i]$\n\n\u7136\u540e\u5bf9\u4e8e\u8be2\u95ee$[ql,qr]$\n\n\u5982\u679c$ql>last$\uff0c\u7b54\u6848\u5c31\u662f$\\frac {(qr-ql+1)(qr-ql)}{2}$\n\n\u5426\u5219\u7b54\u6848\u4e3a$sum[last]-sum[ql-1]+ \\frac {(qr-last)*(qr-last+1)}{2}$\n\n\n\u6211\u4eec\u6765\u624b\u6a21\u4e00\u4e0b\u8fd9\u4e2a\u73a9\u610f\n\n\u5bf9\u4e8e\u6837\u4f8b1\uff1a\n\n$i:\\ \\ \\ \\ \\ 1 \\  \\ \\  2 \\ \\ \\  3 \\ \\ \\  4 \\ \\ \\  5 \\ \\ \\  6$\n\n$f(i):2 \\ \\ 5 \\ \\ \\ 5 \\ \\ \\ 5 \\ \\ \\ 6 \\ \\ \\ 6$\n\n\u8be2\u95ee\uff1a$[1,3],[1,6],[4,6]$\n\n\u4ece1\u5f00\u59cb\u626b\n\n1\u7684\u65f6\u5019\u4ec0\u4e48\u4e5f\u6ca1\u53d1\u751f\n\n2\u7684\u65f6\u5019\u67091\u4f7f\u5f97$f(1)=2$\uff0c\u8d21\u732e\u4e3a2-1+1=2\uff0clast=1\n\n\u88c5\u5230\u8d21\u732e\u6570\u7ec4$a$\u91cc\uff1a$2$\n\n3\u7684\u65f6\u5019\u6709\u8be2\u95ee$[1,3]$\n\n\u6b64\u65f6\u7b54\u6848\u4e3a$a[1]+\\frac {(3-2+1)(3-2+1+1)}{2}=2+3=5$\n\n\u7ee7\u7eed\u626b\uff0c4\u4ec0\u4e48\u4e5f\u6ca1\u53d1\u751f\n\n5\u6709$f(2)=f(3)=f(4)=5$\uff0c\u8d21\u732e\u5206\u522b\u4e3a$5-2+1=4,5-3+1=3,5-4+1=2,last=4$\n\n\u88c5\u5230a\u91cc:$2,4,3,2$\n\n\u7ee7\u7eed\u626b6\uff0c\u6709$f(5)=f(6)=6$\uff0c\u8d21\u732e\u5206\u522b\u4e3a$6-5+1=2,6-6+1=1$\n\n\u88c5\u5230a\u91cc:$2,4,3,2,2,1$\n\n\u6709\u8be2\u95ee$[4,6]$\uff0c\u7b54\u6848\u4e3aa\u7684$[4,6]$\u533a\u95f4\u548c\u4e3a$2+2+1=5$\n\n\u6709\u8be2\u95ee$[1,6]$\uff0c\u7b54\u6848\u4e3aa\u7684$[1,6]$\u533a\u95f4\u548c\u4e3a$2+4+3+2+2+1=14$\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\n\n\u8be2\u95ee\u601d\u8def\u7279\u522b\u9e23\u8c22@[ZYyboT](https://www.luogu.org/space/show?uid=14375)\n\n#### \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n##### lct\u9884\u5904\u7406\uff1a\n\n$r$\u6307\u9488\u6700\u591a\u79fb\u52a8n\u6b21\uff0c\u6bcf\u79fb\u52a8\u4e00\u6b21\u9700\u8981\u7528lct\u5220\u9664\u6240\u6709\u51fa\u8fb9\uff0c$O(n)+O(m log n)=O(m log n)$\n\n##### \u79bb\u7ebf\u8be2\u95ee:\n\n\u663e\u7136$O(n)+O(m)$\n\n#### \u603b\u590d\u6742\u5ea6$O(m log n)$\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing std::min;\nusing std::sort;\nusing std::swap;\nusing std::vector;\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool f=0;\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\ntemplate<class type>inline const void write(type out)\n{\n\tif (out>9)write(out/10);\n\tputchar(out%10+48);\n}\ntemplate<class type>inline const void writeln(type out)\n{\n\tif (out<0)putchar('-'),out=-out;\n\twrite(out);\n\tputchar('\\n');\n}\ntypedef long long ll;\nconst int N=3e5+10;\nclass Link_Cut_Tree\n{\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\tbool rev;\n\t\t\tint son[2],fa;\n\t\t\tinline const void reverse()\n\t\t\t{\n\t\t\t\tswap(son[0],son[1]);rev^=1;\n\t\t\t}\n\t\t}t[N];\n\t\tinline const bool identity(int p)\n\t\t{\n\t\t\treturn t[t[p].fa].son[1]==p;\n\t\t}\n\t\tinline const bool nroot(int p)\n\t\t{\n\t\t\treturn t[t[p].fa].son[0]==p||identity(p);\n\t\t}\n\t\tinline const void rotate(int p)\n\t\t{\n\t\t\tbool f=identity(p);\n\t\t\tint fa=t[p].fa,gfa=t[fa].fa,q=t[p].son[f^1];\n\t\t\tif (nroot(fa))t[gfa].son[identity(fa)]=p;\n\t\t\tt[t[p].son[f^1]=fa].son[f]=q;\n\t\t\tt[t[t[q].fa=fa].fa=p].fa=gfa;\n\t\t}\n\t\tinline const void pushdown(int p)\n\t\t{\n\t\t\tif (t[p].rev)\n\t\t\t\tt[t[p].son[0]].reverse(),\n\t\t\t\tt[t[p].son[1]].reverse(),\n\t\t\t\tt[p].rev=0;\n\t\t}\n\t\tinline const void relieve(int p)\n\t\t{\n\t\t\tif (nroot(p))relieve(t[p].fa);\n\t\t\tpushdown(p);\n\t\t}\n\t\tinline const void splay(int p)\n\t\t{\n\t\t\trelieve(p);\n\t\t\tfor (int fa;nroot(p);rotate(p))\n\t\t\t\tif (nroot(fa=t[p].fa))\n\t\t\t\t\trotate(identity(p)^identity(fa)?p:fa);\n\t\t}\n\t\tinline const void access(int x)\n\t\t{\n\t\t\tfor (int y=0;x;x=t[y=x].fa)splay(x),t[x].son[1]=y;\n\t\t}\n\t\tinline const void makeroot(int x)\n\t\t{\n\t\t\taccess(x);splay(x);t[x].reverse();\n\t\t}\n\t\tinline const void split(int x,int y)\n\t\t{\n\t\t\tmakeroot(x);access(y);splay(y);\n\t\t}\n\t\tinline const int findroot(int x)\n\t\t{\n\t\t\taccess(x);splay(x);\n\t\t\twhile (t[x].son[0])pushdown(x=t[x].son[0]);\n\t\t\tsplay(x);return x;\n\t\t}\n\tpublic:\n\t\tinline const bool connected(int x,int y)\n\t\t{\n\t\t\treturn findroot(x)==findroot(y);\n\t\t}\n\t\tinline const bool link(int x,int y)\n\t\t{\n\t\t\tif (findroot(x)==findroot(y))return 0;\n\t\t\tmakeroot(x);t[x].fa=y;\n\t\t\treturn 1;\n\t\t}\n\t\tinline const void cut(int x,int y)\n\t\t{\n\t\t\tsplit(x,y);t[x].fa=t[y].son[0]=0;\n\t\t}\n}lct;\nll ans[N];\nint n,m;\nbool inf[N];\nint head[N],edc,to[N<<1],next[N<<1];\ninline const void link(int u,int v)\n{\n\tnext[++edc]=head[u];to[head[u]=edc]=v;\n\tnext[++edc]=head[v];to[head[v]=edc]=u;\n}\nstruct query\n{\n\tint l,r,id;\n\tinline const bool operator<(const query &q)const\n\t{\n\t\treturn r<q.r;\n\t}\n}q[N];\nvector<int>from[N];\nll sum[N];\ninline const ll Sum(int l,int r)\n{\n\treturn sum[r]-sum[l-1];\n}\nint main()\n{\n\tread(n);read(m);\n\tfor (int u,v;m--;)read(u),read(v),link(u,v);\n\tread(m);\n\tfor (int i=1;i<=m;i++)read(q[i].l),read(q[i].r),q[i].id=i;\n\tsort(q+1,q+m+1);\n\tfor (int r=n,l=n;l;l--)\n\t{\n\t\tinf[l]=1;\n\t\tint j=head[l];\n\t\twhile (j)\n\t\t{\n\t\t\tif (!inf[to[j]]){j=next[j];continue;}\n\t\t\tif (lct.link(l,to[j])){j=next[j];continue;}\n\t\t\tfor (;lct.connected(l,to[j])&&r>=l;inf[r--]=0)\n\t\t\t\tfor (int k=head[r];k;k=next[k])\n\t\t\t\t\tif (inf[to[k]])\n\t\t\t\t\t\tlct.cut(r,to[k]);\n\t\t}\n\t\tfrom[r].push_back(l);\n\t}\n\tfor (int k=1,last=0,i=1;i<=n;i++)\n\t{\n\t\tfor (int j=from[i].size()-1;~j;j--)\n\t\t\tsum[from[i][j]]=i-from[i][j]+1+sum[from[i][j]-1];\n\t\tif (!from[i].empty())last=*from[i].begin();\n\t\tfor (int len;q[k].r<=i&&k<=m;k++)\n\t\t\tif (q[k].l>last)\n\t\t\t\tlen=q[k].r-q[k].l+1,\n\t\t\t\tans[q[k].id]=static_cast<ll>(len)*(len+1)/2;\n\t\t\telse \n\t\t\t\tlen=q[k].r-last,\n\t\t\t\tans[q[k].id]=static_cast<ll>(len)*(len+1)/2+Sum(q[k].l,last);\n\t}\n\tfor (int i=1;i<=m;i++)writeln(ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1570540608,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF901C \u3010Bipartite Segments\u3011"
    },
    {
        "content": "\u5728\u672c\u9898\u4e2d\uff0c\u53ea\u8981\u6ca1\u73af\u5373\u53ef\u3002\n\n\u8981\u6c42\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u6784\u6210\u4e00\u4e2a\u68ee\u6797\u3002\n\n$f(l,r)$\u8868\u793a\u533a\u95f4$(l,r)$\u662f\u5426\u6784\u6210\u4e8c\u5206\u56fe\u3002\n\n\u56fa\u5b9a\u533a\u95f4\u7684$l$\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c$f(l,i)$\u76f8\u5f53\u4e8e\u5e8f\u5217$11110000$\uff0c\u8003\u8651\u4ece\u53f3\u5230\u5de6\u679a\u4e3e$l$\uff0c\u5408\u6cd5\u7684$r$\u662f\u5355\u8c03\u9012\u51cf\u7684\u3002\u7136\u540e\u662f\u5426\u6784\u6210\u4e8c\u5206\u56fe\u6211\u4eec\u53ef\u4ee5\u7528LCT\u52a8\u6001\u7ef4\u62a4\uff0c\n\n\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u3002\u4ece\u53f3\u5230\u5de6\u968f\u4fbf\u7ef4\u62a4\u5c31\u597d\u3002\uff08\u7528\u7ebf\u6bb5\u6811\u4ec0\u4e48\u7684\u90fd\u53ef\u4ee5\uff09\n\nLCT+\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811\n\n~~\u8fd9\u79cd\u5199\u6cd5\u601d\u8def\u81ea\u7136\uff0c\u5199\u8d77\u6765\u6bd2\u7624~~\u3002\n\n1.5KB\u7684\u5199\u6cd5\u662f\u5565\u554a\u3002\n\n\u56e0\u4e3a\u8fd9\u9898\u6ca1\u6709\u5076\u73af\u53ea\u6709\u5947\u73af\uff0c\u90a3\u4e48\u6ca1\u6709\u73af\u5957\u73af\u3002\n\n\u6240\u4ee5\u7ed9\u7684\u56fe\u662f\u4e2a**\u4ed9\u4eba\u638c**\u3002\n\n\u5728\u4e00\u4e2a\u70b9\u53cc\u4e0a\uff0c\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u51fa\u73b0\u65f6\u523b$\\min$\u548c\u4e00\u4e2a\u51fa\u73b0\u65f6\u523b$\\max$\uff0c\u8de8\u8fc7\u8fd9\u4e2a\u7684\u6240\u6709\u533a\u95f4\u90fd\u4e0d\u5408\u6cd5\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4$L_i$\u8868\u793a\u4ee5$i$\u4e3a\u53f3\u7aef\u70b9\uff0c\u505a\u7aef\u70b9\u7f16\u53f7\u6700\u5927\u7684\u4e0d\u5408\u6cd5\u7684\u533a\u95f4\u3002\u7136\u540e\u53ef\u4ee5\u8bb0\u4e0b\u4e0d\u5408\u6cd5\u7684\u533a\u95f4\u7684\u4e2a\u6570\u3002\u4e8c\u5206\u627e\u51fa\u6700\u9760\u5de6\u7684\uff0c\u5305\u542b\u5728\u533a\u95f4$(l,r)$\u5185\u7684\u73af\u7684\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u6c42\u51fa\u4e0d\u5408\u6cd5\u7684\u533a\u95f4\u4e86\u3002\n\n\u7f29\u70b9+\u4e8c\u5206\u5c31\u6ca1\u4e86\u3002\n\n~~\u679c\u771f\u6211\u6570\u636e\u7ed3\u6784\u5b66\u50bb\u4e86\u3002~~\n\n```cpp\n/*\n * Author: ylx\n * Lang: c++\n * Prog: p2387\n */\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nvoid qmax(int &x, int y)\n{\n    if (x < y)\n        x = y;\n}\nvoid qmin(int &x, int y)\n{\n    if (x > y)\n        x = y;\n}\ninline int read()\n{\n    char s;\n    int k = 0, base = 1;\n    while ((s = getchar()) != '-' && s != EOF && !(isdigit(s)))\n        ;\n    if (s == EOF)\n        exit(0);\n    if (s == '-')\n        base = -1, s = getchar();\n    while (isdigit(s))\n        k = k * 10 + (s ^ '0'), s = getchar();\n    return k * base;\n}\ninline void write(ll x)\n{\n    static char cnt, num[20];\n    cnt = 0;\n    if (!x)\n    {\n        putchar('0');\n        return;\n    }\n    for (; x; x /= 10)\n        num[++cnt] = x % 10;\n    for (; cnt; putchar(num[cnt--] + 48))\n        ;\n}\nconst int maxn=3e5+10;\nint n,m,q,vis[maxn],stk[maxn],top,loop[maxn];\nint po[maxn],to[maxn<<1],ne[maxn<<1],id;\nint L[maxn];\nll sum[maxn];\nvoid add(int x,int y)\n{\n    id++;\n    to[id]=y,ne[id]=po[x],po[x]=id;\n}\nvoid dfs(int x,int fa)\n{\n    vis[x]=1;\n    stk[++top]=x;\n    for (int i=po[x];i;i=ne[i])\n    if (to[i]!=fa && !loop[to[i]])\n    {\n        if (!vis[to[i]]) dfs(to[i],x);\n        else\n        {\n            int mx=0,mn=n+1;\n            for (int j=top,y;;j--)\n            {\n                y=stk[j];\n                qmax(mx,y);\n                qmin(mn,y);\n                loop[y]=1;\n                if (stk[j]==to[i]) break;\n            }\n            if (!L[mx]) L[mx]=mn;\n            else qmax(L[mx],mn);\n        }\n    }\n    --top;\n}\nint main()\n{\n    n=read();\n    m=read();\n    for (int i=1,x,y;i<=m;i++)\n    {\n        x=read();\n        y=read();\n        add(x,y);\n        add(y,x);\n    }\n    for (int i=1;i<=n;i++) \n        if (!vis[i]) \n            dfs(i,0);\n    for (int i=1;i<=n;i++) \n    {\n        qmax(L[i],L[i-1]);\n        sum[i]=sum[i-1]+L[i];\n    }\n    q=read();\n    int x,y,mid,l,r,s;\n    ll ans;\n    while (q--)\n    {\n        x=read(),y=read();\n        l=x,r=y;\n        s=y+1;\n        while (l<=r)\n        {\n            mid=(l+r)>>1;\n            if (L[mid]>=x)\n                r=mid-1,s=mid;\n            else l=mid+1;\n        }\n        ans=(ll)(y+x)*(y-x+1)/2-(sum[y]-sum[s-1])-(ll)(x-1)*(s-x);\n        write(ans);\n        putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1554164938,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF901C \u3010Bipartite Segments\u3011"
    },
    {
        "content": "\u533a\u95f4\u8be2\u95ee\u5b50\u533a\u95f4\u70b9\u5bf9\u6784\u6210\u4e8c\u5206\u56fe\u4e2a\u6570\u3002             \n\n\u5982\u679c\u80fd\u6709\u5076\u73af\u7684\u8bdd\u4f30\u8ba1\u4f1a\u4e0d\u53ef\u9519\uff0c\u4f46\u662f\u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1\u53ea\u6709\u5947\u73af\u6240\u4ee5\u53ea\u8981\u51fa\u73b0\u73af\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u539f\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\u3002            \n\n\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u968f\u673a\u9020\u4e00\u68f5 dfs \u6811\u7136\u540e\u66b4\u529b\u628a\u6240\u6709\u7684\u73af\u62ff\u51fa\u6765\u95ee\u4e00\u904d\uff0c\u663e\u7136\u8fd9\u4e2a\u73af\u4e0a\u7684\u6700\u5927\u70b9\u548c\u6700\u5c0f\u70b9\u6784\u6210\u7684\u533a\u95f4\u90fd\u662f\u4e0d\u80fd\u9009\u62e9\u7684\uff0c\u6211\u4eec\u8003\u8651\u79bb\u7ebf\u8def\u5f84\u6216\u8005\u6811\u5256\u7ef4\u62a4\u4e0a\u8ff0\u7684\u4fe1\u606f\u3002          \n\n\u63a5\u7740\u4f60\u53d1\u73b0\u5176\u5b9e\u5982\u679c\u6211\u4eec\u80fd\u77e5\u9053\u5e8f\u5217\u4e0a\u4e00\u4e2a\u70b9\u5411\u540e\u80fd\u6781\u957f\u5ef6\u4f38\u5230\u54ea\u91cc\u90a3\u4e48\u539f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e2a\u5e73\u51e1\u7684\u5bf9\u533a\u95f4\u503c\u53d6 $\\min$ \u540e\u533a\u95f4\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u4ee4 $Far_x$ \u8868\u793a\u4e00\u4e2a\u70b9 $x$ \u6700\u8fdc\u5ef6\u4f38\u5230\u4e86\u54ea\u91cc\u3002\n\n\u73b0\u5728\u6211\u4eec\u6709\u591a\u7ec4\u9650\u5236\u4fe1\u606f\u5f62\u5982\u4e8c\u5143\u7ec4 $(x,y)$ \u8868\u793a\u4e0d\u80fd\u9009\u62e9\u533a\u95f4 $[x,y]$\uff0c\u6211\u4eec\u53ea\u8981\u8ba9\u6240\u6709\u7684 $Far_x = \\min y$ \u540e\u518d\u6eda\u4e00\u4e2a\u540e\u7f00 $\\min$ \u5c31\u53ef\u4ee5\u7ef4\u62a4\u6240\u6709 $Far_x$ \u7684\u4fe1\u606f\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O((n + m) \\log n)$\u3002           \n\n```cpp\n/*\n\u8003\u8651\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7684\u6781\u957f\u5ef6\u4f38\u7136\u540e\u76f4\u63a5\u4e3b\u5e2d\u6811\n\u6ca1\u6709\u5076\u73af\u4ee3\u8868\u7740\u53ea\u8981\u51fa\u73b0\u73af\u5c31\u6302\u4e86\n\u73b0\u5728\u53ea\u8981\u77e5\u9053\u5982\u4f55\u5224\u65ad\u4e00\u4e9b\u8fb9\u662f\u5426\u51fa\u73b0\u73af\u5373\u53ef\n\u597d\u50cf\u53ef\u4ee5\u76f4\u63a5dfs\u73af\u5427\uff0c\u4e0d\u6e05\u695a\uff0c\u53cd\u6b63\u603b\u4e4b\u6700\u540e\u53ef\u4ee5\u79bb\u7ebf\u505a\u5c31\u5bf9\u4e86 \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 3e5 + 5 , Inf = 1e9;\nint n,m,q,vis[Len],val[Len],head[Len],cnt,tim[Len],dfn;\nint Minn[Len << 2],Maxn[Len << 2];\nlong long sum[Len << 2],num[Len << 2],Print[Len];\nstruct Node\n{\n\tint opt,val,id;\n\tNode(){opt = val = id = 0;}\n\tNode(int OPT,int VAL,int ID){opt = OPT , val = VAL , id = ID;}\n};\nvector<Node> v[Len]; \nvector<int> G[Len];\n#define ls(p) p << 1\n#define rs(p) p << 1 | 1\nvoid Push_up(int x)\n{\n\tMinn[x] = min(Minn[ls(x)] , Minn[rs(x)]);\n\tMaxn[x] = max(Maxn[ls(x)] , Maxn[rs(x)]);\n}\nvoid build(int p,int l,int r)\n{\n\tMinn[p] = Inf , Maxn[p] = -Inf;\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid);build(rs(p) , mid + 1 , r);\n}\nvoid Update(int p,int l,int r,int idx,int val)\n{\n\tif(l == r) \n\t{\n\t\tif(val == -1)\n\t\t{\n\t\t\tMinn[p] = Inf;\n\t\t\tMaxn[p] = -Inf;\n\t\t}\n\t\telse Minn[p] = Maxn[p] = val;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(idx <= mid) Update(ls(p) , l , mid , idx , val);\n\telse Update(rs(p) , mid + 1 , r , idx , val);\n\tPush_up(p);\n}\nint queryMin(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r) return Minn[p];\n\tint mid = (l + r) >> 1 , res = Inf;\n\tif(nl <= mid) res = min(res , queryMin(ls(p) , l , mid , nl , nr));\n\tif(nr > mid) res = min(res , queryMin(rs(p) , mid + 1 , r , nl , nr));\n\treturn res;\n}\nint queryMax(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r) return Maxn[p];\n\tint mid = (l + r) >> 1 , res = -Inf;\n\tif(nl <= mid) res = max(res , queryMax(ls(p) , l , mid , nl , nr));\n\tif(nr > mid) res = max(res , queryMax(rs(p) , mid + 1 , r , nl , nr));\n\treturn res;\n}\nvoid Calc(int x,int to)\n{\n\tint minn = queryMin(1 , 1 , n , min(tim[x] , tim[to]) , max(tim[x] , tim[to]));\n\tint maxn = queryMax(1 , 1 , n , min(tim[x] , tim[to]) , max(tim[x] , tim[to]));\n\tval[minn] = min(val[minn] , maxn);\n\t//printf(\"%d %d %d %d\\n\",x,to,minn,maxn);\n}\nvoid dfs(int x,int f)\n{\n\tvis[x] |= 1;\n\ttim[x] = ++ dfn;\n\tUpdate(1 , 1 , n , dfn , x);\n\tfor(int i = 0 ; i < G[x].size(); i ++)\n\t{\n\t\tint to = G[x][i];\n\t\tif(to == f || tim[to] > tim[x]) continue;\n\t\tif(!vis[to]) \n\t\t{\n\t\t\tdfs(to , x);\n\t\t\tcontinue;\n\t\t}\n\t\tCalc(x , to);\n\t}\n\tUpdate(1 , 1 , n , dfn , -1);\n\tdfn --;\n}\n\nvoid push_up(int x)\n{\n\tsum[x] = sum[ls(x)] + sum[rs(x)];\n\tnum[x] = num[ls(x)] + num[rs(x)];\n}\nvoid update(int p,int l,int r,int idx)\n{\n\tif(l == r)\n\t{\n\t\tsum[p] += idx;\n\t\tnum[p] ++;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(idx <= mid) update(ls(p) , l , mid , idx);\n\telse update(rs(p) , mid + 1 , r , idx);\n\tpush_up(p); \n}\nlong long query(int p,int l,int r,int val)\n{\n\tif(l == r) return sum[p];\n\tint mid = (l + r) >> 1;\n\tif(val <= mid) return query(ls(p) , l , mid , val) + 1ll * num[rs(p)] * val;\n\telse return query(rs(p) , mid + 1 , r , val) + sum[ls(p)];\n}\n\nlong long Sum[Len];\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tG[x].push_back(y);\n\t\tG[y].push_back(x);\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tSum[i] += Sum[i - 1];\n\t\tSum[i] += i;\n\t\tsort(G[i].begin() , G[i].end()); \n\t}\n\tfor(int i = 1 ; i <= n ; i ++) val[i] = n + 1;\n\tval[n + 1] = n + 1;\n \tfor(int i = 1 ; i <= n ; i ++) if(!vis[i]) dfs(i , 0);\n\tfor(int i = n ; i >= 1 ; i --) val[i] = min(val[i] , val[i + 1]);\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tval[i] --;\n\t\t//printf(\"%d \",val[i]);\n\t}\n\tscanf(\"%d\",&q);\n\tfor(int i = 1 ; i <= q ; i ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tPrint[i] -= Sum[y - 1] - Sum[max(0 , x - 2)];\n\t\tv[x - 1].push_back(Node(-1 , y , i));\n\t\tv[y].push_back(Node(1 , y , i));\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tupdate(1 , 1 , n , val[i]);\n\t\tfor(int j = 0 ; j < v[i].size() ; j ++) Print[v[i][j].id] += 1ll * v[i][j].opt * query(1 , 1 , n , v[i][j].val);\n\t}\n\tfor(int i = 1 ; i <= q ; i ++) printf(\"%lld\\n\",Print[i]);\n\treturn 0;\n}\n```",
        "postTime": 1632817484,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF901C Bipartite Segments"
    }
]