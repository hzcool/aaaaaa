[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u6c42 $n$ \u4ee5\u5185\u6709\u591a\u5c11\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\u6216\u5b8c\u5168\u7acb\u65b9\u6570\u3002\n\n$1 \\leq n \\leq 10^9$\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u8003\u8651\u5bb9\u65a5\u3002\n\n$n$ \u4ee5\u5185\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u6216\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570 $=$ $n$ \u4ee5\u5185\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570 $+$ $n$ \u4ee5\u5185\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570 $-$ $n$ \u4ee5\u5185\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u4e14\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u663e\u7136\uff0c$n$ \u4ee5\u5185\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570 $=\\sqrt[2]{n}$\uff0c$n$ \u4ee5\u5185\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570 $=\\sqrt[3]{n}$\u3002\n\n\u518d\u770b $n$ \u4ee5\u5185\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u4e14\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570\uff0c\u8003\u8651\u627e\u6027\u8d28\u3002\n\n\u53d1\u73b0\uff0c\u5c06 $n$ \u552f\u4e00\u5206\u89e3\u4e3a $\\prod\\limits_{i=1}^{k}p_i^{a_i}$\uff0c\u5176\u4e2d $p_i$ \u4e3a\u8d28\u6570\u4e14\u4e92\u4e0d\u76f8\u7b49\u3002\n\n\u5f53 $\\forall 1 \\leq i\\leq k,a_i \\equiv 0 \\pmod 2$ \u65f6\uff0c$n$ \u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\u3002\n\n\u5f53 $\\forall 1 \\leq i\\leq k,a_i \\equiv 0 \\pmod 3$ \u65f6\uff0c$n$ \u4e3a\u5b8c\u5168\u7acb\u65b9\u6570\u3002\n\n\u90a3\u4e48\u5f53 $n$ \u662f\u5b8c\u5168\u5e73\u65b9\u6570\u4e14\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u65f6\uff0c\u80af\u5b9a\u6ee1\u8db3\uff1a$\\forall 1 \\leq i\\leq k,a_i \\equiv 0 \\pmod 6$\uff0c\u90a3\u4e48\u53d1\u73b0\u4ec0\u4e48\uff0c$n$ \u662f\u5b8c\u5168\u516d\u6b21\u65b9\u6570\u3002\n\n\u90a3\u4e48 $n$ \u4ee5\u5185\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u4e14\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5c31\u8f6c\u6362\u6210 $n$ \u4ee5\u5185\u662f\u5b8c\u5168\u516d\u6b21\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f $\\sqrt[6]{n}$\u3002\n\n\u90a3\u5c31\u7ed3\u675f\u4e86\uff0c\u7b54\u6848\u4e3a $\\sqrt[2]{n}+\\sqrt[3]{n}-\\sqrt[6]{n}$\u3002\n\n\u8f6c\u6362\u4e3a $n^{\\frac{1}{2}}+n^{\\frac{1}{3}}-n^{\\frac{1}{6}}$\uff0c\u7528 `pow` \u51fd\u6570\u7b97\u5373\u53ef\u3002\n\n\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\u3002\n\n## CODE\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nsigned main()\n{\n    int T;\n    cin >> T;\n    while (T --)\n    {\n        double n;\n        cin >> n;\n        n += (0.00001);\n        cout << int(pow(n, 1.0 / 2)) + int(pow(n, 1.0 / 3)) - int(pow(n, 1.0 / 6)) << endl;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1640687728,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF1619B Squares and Cubes"
    },
    {
        "content": "# $\\text{Problems}$\n\n\u6c42 $n$ \u4ee5\u5185\u6709\u591a\u5c11\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\u6216\u5b8c\u5168\u7acb\u65b9\u6570\u3002\n\n# $\\text{Answer}$\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u4e0d\u96be\u60f3\u5230\u5c06\u5b8c\u5168\u5e73\u65b9\u6570\u4e0e\u5b8c\u5168\u7acb\u65b9\u6570\u9884\u5904\u7406\u51fa\u6765\u518d\u7edf\u8ba1\u548c\u3002\n\n\u56e0\u4e3a$\\sqrt{10^{9}}\u224832000$\uff0c$\\sqrt[3]{10^{9}}=1000$\uff0c\u6240\u4ee5\u66b4\u529b\u679a\u4e3e\u8fd9\u4e24\u79cd\u6570\u5373\u53ef\u3002\n\n\u4f46\u56e0\u4e3a\u6709\u7684\u6570\u65e2\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u4e5f\u662f\u5b8c\u5168\u7acb\u65b9\u6570\uff0c\u5982 $64=8^2=4^3$\uff0c\u6240\u4ee5\u8981\u7528 `map` \u53bb\u91cd\u3002\n\n\u6ce8\u610f\u591a\u6d4b\u6e05\u7a7a\u5373\u53ef\u3002\n\n# $\\text{Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t;\nint n;\nint ans;\nmap<int,bool> mp;\ninline void work()\n{\n    cin>>n;\n    ans=0;\n    mp.clear();//\u591a\u6d4b\u6e05\u7a7a\n    for(int i=1;i*i<=n;++i)\n    {\n        if(mp[i*i]==0)\n        {\n            mp[i*i]=1;\n            ans++;\n        }\n    }\n    for(int i=1;i*i*i<=n;++i)\n    {\n        if(mp[i*i*i]==0)\n        {\n            mp[i*i*i]=1;\n            ans++;\n        }\n    }\n    cout<<ans<<\"\\n\";\n}\nint main()\n{\n    cin>>t;\n    while(t--) work();\n    return 0;\n}\n```\n",
        "postTime": 1640612910,
        "uid": 202802,
        "name": "BotDand",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1619B \u3010Squares and Cubes\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u6570\u636e\u6709\u70b9\u5927\uff0c\u76f4\u63a5\u66b4\u529b\u4f1a\u8d85\u65f6\u3002\n\n\u7b80\u5355\u7684\u601d\u8003\u53ef\u4ee5\u5f97\u51fa\uff1a\n\u7b54\u6848\u4e3a $n$ \u4ee5\u5185\u7684\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u4e2a\u6570 $+$ $n$ \u4ee5\u5185\u7684\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u4e2a\u6570 $-$ $n$ \u4ee5\u5185\u7684\u65e2\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u53c8\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e $n$ \u4ee5\u5185\u7684\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u65f6\u5019\uff0c\u540c\u65f6\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5982\u679c\u662f\u5c31\u628a\u5b83\u4ece\u7b54\u6848\u4e2d\u6263\u6389\u3002\n\n\u90a3\u600e\u4e48\u5224\u65ad\u4e00\u4e2a\u6b63\u6574\u6570\u662f\u4e0d\u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\u5462\uff1f\n\n\u628a\u8fd9\u4e2a\u6b63\u6574\u6570\u7684\u7b97\u672f\u5e73\u65b9\u6839\u8f6c\u4e3a\u6574\u578b\u540e\u518d\u5e73\u65b9\uff0c\u5982\u679c\u5f97\u5230\u7684\u8fd9\u4e2a\u6570\u4e0e\u539f\u6765\u7684\u6b63\u6574\u6570\u76f8\u7b49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6b63\u6574\u6570\u5c31\u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\uff1b\u53cd\u4e4b\u5c31\u4e0d\u662f\u3002\n\n\u7136\u540e\u5c31\u597d\u4e86\u3002\n## \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<string>\nusing namespace std;\nbool f(int x){ // \u5224\u65ad\u662f\u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6570\n    if(int(sqrt(x))*int(sqrt(x))==x){\n        return true;\n    }\n    return false;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    int t;\n    cin>>t; // \u8bfb\u5165\n    while(t--){\n        int n;\n        cin>>n; //\u8bfb\u5165\n        int ans=sqrt(n);// \u5b8c\u5168\u5e73\u65b9\u6570\u90a3\u4e00\u90e8\u5206\n        for(int i=1;i*i*i<=n;i++){\n            ans++;      // \u5b8c\u5168\u7acb\u65b9\u6570\u90a3\u4e00\u90e8\u5206\n            if(f(i*i*i)){\n                ans--; //\u5220\u6389\u91cd\u590d\u90e8\u5206\n            }\n        }\n        cout<<ans<<endl;// \u8f93\u51fa\n    }\n    return 0;\n}\n```\n",
        "postTime": 1640785950,
        "uid": 365584,
        "name": "hmzclimc",
        "ccfLevel": 5,
        "title": "\u9898\u89e3CF1619B\u3010Squares and Cubes\u3011"
    },
    {
        "content": "`\u9898\u76ee\u7ffb\u8bd1\uff1a\u6c42 $n$ \u4ee5\u5185\u6709\u591a\u5c11\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\u6216\u5b8c\u5168\u7acb\u65b9\u6570\u3002`\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\uff0c\u6211\u4eec\u601d\u8003\uff0c\u4ece $1\\sim n$ \u6709\u591a\u5c11\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\n\n\u663e\u7136\u7b54\u6848\u5e94\u8be5\u662f $\\lfloor n^{\\frac 1 2} \\rfloor$ \n\n\u90a3\u4e48\u6211\u4eec\u8fdb\u4e00\u6b65\u601d\u8003\uff0c$1\\sim n$ \u6709\u591a\u5c11\u4e2a\u5b8c\u5168\u7acb\u65b9\u6570\n\n\u663e\u7136\u7b54\u6848\u5e94\u8be5\u662f $\\lfloor n^{\\frac 1 3} \\rfloor$\n\n\u90a3\u4e48\u6211\u4eec\u7684\u7b54\u6848\u662f\u76f4\u63a5\u628a\u5b83\u4eec\u52a0\u8d77\u6765\u5417\n\n\u8fd9\u80af\u5b9a\u662f\u4e0d\u6b63\u786e\u7684\n\n\u56e0\u4e3a\u6bd4\u5982 $1~64$ \u8fd9\u7c7b $a^6$ \u7684\u6570\u88ab\u7b97\u4e86\u4e24\u6b21\n\n\u6211\u4eec\u8003\u8651\u5bb9\u65a5\u539f\u7406\uff0c\u7528\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u4e2a\u6570\u52a0\u4e0a\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u4e2a\u6570\uff0c\u6700\u540e\u518d\u51cf\u53bb $a^6$ \u7684\u6570\u7684\u4e2a\u6570\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(T~n^{\\frac 1 3})$\uff0c\u7531\u4e8e $n$ \u7684\u8303\u56f4\u53ea\u6709 $10^9$\uff0c\u7b97\u4e0b\u6765\u662f $2\\times 10^4$ \u8fd8\u662f\u53ef\u4ee5\u7a33\u8fc7\u7684\n\n```cpp\nint T, n, ans;\nint main(){\n\tread(T);\n\twhile(T--){\n\t\tread(n);\n\t\tans=sqrt(n);\n\t\tfor(int i = 1; i*i*i <= n; i++) ans++;\n\t\tfor(int i = 1; i*i*i*i*i*i <= n; i++) ans--;\n\t\twrite(ans, '\\n');\n\t}\n    return 0;\n}\n```",
        "postTime": 1640771920,
        "uid": 233839,
        "name": "RevolutionBP",
        "ccfLevel": 0,
        "title": "CF1619B Squares and Cubes"
    },
    {
        "content": "# \u5148\u8bf4\u51e0\u53e5\n\n\u4e00\u9053\u6784\u9020\u3001\u6253\u8868\u3002\u5efa\u8bae\u96be\u5ea6\uff1a\u666e\u53ca\u3002\n\n# \u89e3\u9898\u601d\u8def\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8f93\u5165\u7684 $x$\uff0c\u5c31\u679a\u4e3e\u6bcf\u4e2a $i$\u3002\u4f7f\u5f97\u6bcf\u4e2a $i^2$ \u548c $i^3$ \u90fd\u4e0d\u8d85\u8fc7 $x$\u3002\u4e4b\u540e\u5411\u53bb\u91cd\u96c6\u5408 $s$ \u91cc\u5206\u522b\u6dfb\u52a0 $i^2$ \u548c $i^3$\u3002\u7ed3\u679c\u5c31\u662f `s.size()`\u3002\n\n# \u5949\u4e0a\u4ee3\u7801\n\n\u5343\u4e07\u4e0d\u8981\u6284\uff0c\u5c0f\u5fc3\u68d5\u540d\uff01\n\n```cpp\n// 1619B Squares and Cubes\n#include <bits/stdc++.h>\n#define var long long\nusing namespace std;\n\nint main()\n{\t\t\n\tint T; cin>>T;\n\twhile(T--)\n\t{\n\t\tint x; cin>>x;\n\t\tset<int> s;\n\t\tfor(int i=1; i*i<=x; i++)\n\t\t\ts.insert(i*i);\n\t\tfor(int i=1; i*i*i<=x; i++)\n\t\t\ts.insert(i*i*i);\n\t\tcout<<s.size()<<endl;\n\t}\n\n    return 0;\n}\n\n```",
        "postTime": 1640487804,
        "uid": 535063,
        "name": "Jerrywzr",
        "ccfLevel": 0,
        "title": "CF1619B Squares and Cubes"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u5bb9\u6613\u60f3\u590d\u6742\uff0c\u5176\u5b9e\u60f3\u660e\u767d\u5f88\u7b80\u5355\u3002\n\n\u6211\u7684\u601d\u8def\u662f\uff0c\u4ece $1$ \u5230 $\\sqrt{n}$ \u5faa\u73af\u7b5b\u4e00\u4e0b **\u5b8c\u5168\u5e73\u65b9\u6570**\uff0c\u518d\u4ece $1$ \u5230 $ \\sqrt[3]{n}$ \u5faa\u73af\u7b5b\u4e00\u4e0b **\u5b8c\u5168\u7acb\u65b9\u6570**\uff0c\u53bb\u6389\u91cd\u590d\u7684\u6570\u5b57\uff0c\u7136\u540e\u8f93\u51fa `size`\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u53bb\u91cd\uff0c\u6211\u4eec\u7528 `set` \u6765\u5b58\u50a8\u7b5b\u51fa\u7684\u6570\u3002\n\n**Code:**\n\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <set>\n\nint t, n;\n\nint main()\n{\n    std::cin >> t;\n    while (t--)\n    {\n        std::cin >> n;\n        std::set <int> table;\n        for (int i = 1; i * i <= n; i++)\n        {\n            table.insert(i * i);\n        }\n        for (int i = 1; i * i * i <= n; i++)\n        {\n            table.insert(i * i * i);\n        }\n        std::cout << table.size() << std::endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1641022382,
        "uid": 524554,
        "name": "Skykguj",
        "ccfLevel": 0,
        "title": "CF1619B Squares and Cubes \u9898\u89e3"
    },
    {
        "content": "- \u4e2a\u4eba\u8ba4\u4e3a\u9898\u76ee\u96be\u5ea6\u6a59\u6216\u4ee5\u4e0b\u3002\n\n# \u9898\u89e3\n\n- \u7b80\u5355\u7684\u5bb9\u65a5\uff0c\u7b54\u6848\u5c31\u662f $\\sqrt{n} + \\sqrt[3]{n} - \\sqrt[6]{n}$\u3002\n\n- \u4f46\u662f\u4e09\u6b21\u65b9\u6839\u548c\u516d\u6b21\u65b9\u6839\u4e0d\u597d\u6c42\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u6362\u4e00\u4e2a\u65b9\u6cd5\u6c42\uff0c\u628a\u5f0f\u5b50\u8f6c\u5316\u4e3a $n^{\\frac{1}{2}} + n^{\\frac{1}{3}} - n^{\\frac{1}{6}}$\uff0c\u540c $pow$ \u51fd\u6570\u6765\u6c42\u5c31\u597d\u4e86\u3002\n\n- \u4f46\u8981\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u7ed9 $n$ \u52a0\u4e0a\u4e00\u4e2a\u5c0f\u6570\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n\tint T;\n\tcin >> T;\n\twhile (T --)\n\t{\n\t\tdouble n;\n\t\tcin >> n;\n\t\tn += (0.00001);\n\t\tcout << int(pow(n, 1.0 / 2)) + int(pow(n, 1.0 / 3)) - int(pow(n, 1.0 / 6)) << endl;\n\t}\n}\n```\n",
        "postTime": 1640669421,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1619B\u3010Squares and Cubes\u3011"
    },
    {
        "content": "## \u9898\u76ee\n\n[CF1619B Squares and Cubes](https://www.luogu.com.cn/problem/CF1619B)\n\n## \u601d\u8def\n\n\u7ed9\u4f60\u4e00\u4e2a\u6570 $n$\uff0c\u6c42 $x$ \u7684\u4e2a\u6570\u4f7f\u5f97 $\\sqrt{x}\\in N$ \u6216 $^3\\sqrt{x}\\in N$ \u3002\n\n\u867d\u7136 $x$ \u7684\u8303\u56f4\u5f88\u5927\uff0c\u4f46\u662f\u7531\u4e8e\u5e73\u65b9\u6570\u548c\u7acb\u65b9\u6570\u7684\u4e2a\u6570\u5f88\u5c11\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u3002\n\n\u4f46\u662f\u4e0d\u80fd\u591f\u76f4\u63a5\u628a\u5e73\u65b9\u6570\u7684\u4e2a\u6570\u548c\u7acb\u65b9\u6570\u7684\u4e2a\u6570\u52a0\u8d77\u6765\u3002\n\n\u6bd4\u5982 $64$ \u65e2\u662f\u5e73\u65b9\u6570\uff0c\u53c8\u662f\u7acb\u65b9\u6570\u3002\n\n\u56e0\u4e3a $x$ \u7684\u8303\u56f4\u6709\u4e9b\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a map \u6765\u53bb\u91cd\u3002\n\n## \u4ee3\u7801\n\n$\\sqrt{1\\times 10^9} \\approx 4\\times 10^4$\n\n\n$^3\\sqrt{1\\times 10^9} = 1\\times 10^3$\n\n\u6240\u4ee5\u5e73\u65b9\u6570\u679a\u4e3e\u5230 $4\\times 10^4$ \uff0c\u7acb\u65b9\u6570\u679a\u4e3e\u5230 $1\\times 10^3$ \u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0)\n#define UP(l,i,a,b) for(l i=a;i<=b;i++)\nint n;\nmap<int,bool>table;\nint main() {\n    IOS; cin>>n;\n    UP(int,i,1,n) {\n        int x; cin>>x; table.clear();\n        int sum=0; UP(int,j,1,40000) if (j*j<=x&&!table.count(j*j)) sum++,table.insert(make_pair(j*j,true));\n        UP(int,j,1,1000) if (j*j*j<=x&&!table.count(j*j*j)) sum++,table.insert(make_pair(j*j*j,true));\n        cout<<sum<<endl;\n    }\n    return 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1 \u306e_^",
        "postTime": 1640353237,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "CF1619B Squares and Cubes"
    },
    {
        "content": "## 1 \u9898\u610f\n\u6c42 $n$ \u4ee5\u5185\u6709\u591a\u5c11\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\u6216\u5b8c\u5168\u7acb\u65b9\u6570\u3002\n## 2 \u601d\u8def\n\u56e0\u4e3a $n\\leq 10^9$ \uff0c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u9884\u5904\u7406\u51fa $10^9$ \u4e2d\u7684\u6240\u6709\u5b8c\u5168\u5e73\u65b9\u6570\u6216\u5b8c\u5168\u7acb\u65b9\u6570\uff0c\u4e0d\u4f1a\u8d85\u8fc7 $10^6$ \u4e2a\u3002  \n\u5bf9\u8fd9\u4e2a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u53bb\u91cd\uff0c\u53ef\u4ee5\u4f7f\u7528 $sort$ \u548c $unique$\u3002  \n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u66b4\u529b\u679a\u4e3e\u5373\u53ef\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt{n}+T\\sqrt{n})$\u3002\n## 3 code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int X=0,w=0; char ch=0;\n    while(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n    while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    return w?-X:X;\n}\ninline void write(int x){\n\tif(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint a[1000001];\nint cnt;\nint main(){\n\tfor(int i=1;i*i*i<=1000000000;i++){//\u9884\u5904\u7406\u7acb\u65b9\u6570\n\t\ta[++cnt]=i*i*i;\n\t}\n\tfor(int i=1;i*i<=1000000000;i++){//\u9884\u5904\u7406\u5e73\u65b9\u6570\n\t\ta[++cnt]=i*i;\n\t}\n\tsort(a+1,a+cnt+1);//\u6392\u5e8f\n\tcnt=unique(a+1,a+cnt+1)-a;//\u53bb\u91cd\n\tint T=read();\n\twhile(T--){\n\t\tint r=read(),l=1;\n\t\tint ans=0;\n\t\tfor(int i=1;i<=cnt;i++){//\u679a\u4e3e\n\t\t\tif(a[i]>r) break;\n\t\t\tans++;\n\t\t\tif(a[i]==r) break;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1640324090,
        "uid": 343251,
        "name": "heaksicn",
        "ccfLevel": 5,
        "title": "CF1619B Squares and Cubes"
    }
]