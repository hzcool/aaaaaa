[
    {
        "content": "## \u3010\u9898\u76ee\u5927\u610f\u3011\n\u7ed9\u5b9an\u7684\u4e00\u4e2a\u6392\u5217\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\n$i<j<k,a[j]-a[i]=a[k]-a[j]$\n## \u3010\u5206\u6790\u3011\n\u5c06\u9898\u76ee\u8f6c\u5316\n\n\u5bf9\u4e8e\u6bcf\u4e2a$a[i]$\u5224\u65ad\u662f\u5426\u5b58\u5728$k$,\u4f7f\u5f97$a[i]-k$\u4e0e$a[i]+k$\u5e8f\u5217\u4e0a\u7684\u4f4d\u7f6e\u5728$i$\u7684\u5f02\u4fa7\n\n\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u6570\u7684\u72b6\u6001\uff0c\u8bb0$i$\u5de6\u8fb9\u51fa\u73b0\u8fc7\u7684\u6570\u72b6\u6001\u4e3a1\uff0c\u672a\u51fa\u73b0\u8fc7\u7684\u6570\u72b6\u6001\u4e3a0\n\n\u82e5\u6709\u89e3\uff0c\u5219\u5fc5\u5b9a\u5b58\u5728$k$,\u4f7f\u5f97$a[i]-k$\u4e0e$a[i]+k$\u72b6\u6001\u4e0d\u540c\uff0c\u5373\u8fd9\u4e24\u4e2a\u6570\u5e8f\u5217\u4e0a\u7684\u4f4d\u7f6e\u5728$i$\u7684\u5f02\u4fa7\n\n\u53cd\u4e4b\uff0c\u82e5\u65e0\u89e3\uff0c\u5bf9\u4e8e\u4efb\u610f$k$,\u90fd\u8981\u6ee1\u8db3$a[i]-k$\u4e0e$a[i]+k$\u72b6\u6001\u4e00\u81f4\uff0c\u5373\u5728\u603b\u4f53\u72b6\u6001\u4e0a\u5f62\u6210\u4e86\u4ee5$a[i]$\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u4e32\n\n\u8fd9\u6837\uff0c\u53ea\u9700\u5224\u65ad\u4ee5$i$\u4e3a\u4e2d\u5fc3\u7684\u72b6\u6001\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\u5373\u53ef\n\n\u53ef\u4ee5\u7528**\u7ebf\u6bb5\u6811**+**\u54c8\u5e0c**\u89e3\u51b3\n## \u3010\u7b97\u6cd5\u3011\n\u7ebf\u6bb5\u6811+\u54c8\u5e0c\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include<bits/stdc++.h>\n#define ls (k<<1)\n#define rs (k<<1|1)\n#define mid (l+r>>1)\n#define LL long long\nusing namespace std;\nconst int maxn=3e5+5,maxt=maxn<<2;\nconst int TT=1e9+7,bas=23;\nint n;\nint a[maxn];\nLL pw[maxn];\nint read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nstruct tree{\n\tLL val;\n\tint len;\n\ttree (const LL v=0,const int l=0){val=v,len=l;}\n}ta[maxt],tb[maxt];//ta\u6b63\u5411\uff0ctb\u53cd\u5411\ntree merge(tree l,tree r){\n\ttree ret;\n\tret.val=(l.val*pw[r.len]%TT+r.val)%TT;\n\tret.len=l.len+r.len;\n\treturn ret;\n}\nvoid pushup(int k){\n\tta[k]=merge(ta[ls],ta[rs]);\n\ttb[k]=merge(tb[rs],tb[ls]);\n}\nvoid update(int k,int l,int r,int x){\n\tif(l==r){\n\t\tta[k]=tb[k]=tree(1,1);\n\t\treturn;\n\t}\n\tif(x<=mid) update(ls,l,mid,x);\n\telse update(rs,mid+1,r,x);\n\tpushup(k);\n}\ntree query1(int k,int l,int r,int x,int y){\n\tif(x<=l&&r<=y) return ta[k];\n\tif(y<=mid) return query1(ls,l,mid,x,y);\n\tif(mid<x) return query1(rs,mid+1,r,x,y);\n\treturn merge(query1(ls,l,mid,x,mid),query1(rs,mid+1,r,mid+1,y));\n}//\u8fd9\u91cctb\u4e0eta\u8be2\u95ee\u65f6\u904d\u5386\u987a\u5e8f\u76f8\u53cd\uff0c\u5de6\u53f3\u98a0\u5012\ntree query2(int k,int l,int r,int x,int y){\n\tif(x<=l&&r<=y) return tb[k];\n\tif(y<=mid) return query2(ls,l,mid,x,y);\n\tif(mid<x) return query2(rs,mid+1,r,x,y);\n\treturn merge(query2(rs,mid+1,r,mid+1,y),query2(ls,l,mid,x,mid));\n}\nvoid build(int k,int l,int r){\n\tif(l==r){\n\t\tta[k]=tb[k]=tree(0,1);\n\t\treturn;\n\t}\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\tpushup(k);\n}\nint main(){\n\tfreopen(\"CF452F.in\",\"r\",stdin);\n\tfreopen(\"CF452F.out\",\"w\",stdout);\n\tn=read();\n\tpw[0]=1;\n\tfor(int i=1;i<=n;i++) pw[i]=pw[i-1]*bas%TT;\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tint x=read();\n\t\tupdate(1,1,n,x);\n\t\tint k=min(x-1,n-x);\n\t\tif(k<=0) continue;\n\t\tif(query1(1,1,n,x-k,x-1).val!=query2(1,1,n,x+1,x+k).val){\n\t\t\tprintf(\"YES\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n```\n\n------------\n\u611f\u8c22$ZZK$\u5927\u4f6c\u7684\u6307\u5bfc",
        "postTime": 1597728318,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF452F \u3010Permutation\u3011"
    },
    {
        "content": "## 0.\u524d\u7f6e\u829d\u58eb\n\n- \u7ebf\u6bb5\u6811\n\n- \u54c8\u5e0c\n\n## 1.\u9898\u89e3\n\n\u53ef\u80fd\u5927\u5bb6\u4e00\u5f00\u59cb\u770b\u8fd9\u9053\u9898\u6709\u70b9\u8499\uff0c\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u4e0b\u624b\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u6210\u8fd9\u4e2a\u95ee\u9898\uff1a\u8bbe $x$ \u4e3a\u516c\u5dee\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u6c42 $a_i-x$ \u548c $a_i+x$ \u662f\u5426\u5728\u5f02\u4fa7\u3002\uff08\u5373\u4e00\u6570\u5728\u5de6\uff0c\u4e00\u6570\u5728\u53f3\uff09\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217 $s$\uff0c\u6bcf\u6b21\u628a $a_i$ \u8fd9\u4e2a\u4f4d\u7f6e\u4fee\u6539\u4e3a $1$\u3002\n\n\u7136\u540e\u5224\u65ad $s[a_i-x,a_i+x]$ \u662f\u5426\u4e3a\u56de\u6587\u4e32\u5c31\u884c\u4e86\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u8bbe\u4e2d\u5fc3\u4e3a $a_i$\uff0c$a_i-x$ \u4e3a $0$\uff0c$a_i+x$ \u4e3a $1$ \u7684\u8bdd\uff0c\u8fd9\u6837\u5c31\u5f62\u6210\u4e0d\u4e86\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u800c\u4e14 $a_i+x$ \u51fa\u73b0\u8fc7\uff0c$a_i-x$ \u6ca1\u51fa\u73b0\u8fc7\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e $a_i+x$ \u5728 $a_i$ \u7684\u5de6\u8fb9\uff0c$a_i-x$ \u5728 $a_i$ \u7684\u53f3\u8fb9\uff0c\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a $3$ \u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u3002\n\n\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\n\n**\u7ebf\u6bb5\u6811**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u6bb5\u533a\u95f4\u7684\u6b63\u53cd\u54c8\u5e0c\u503c\u3002\n\u81f3\u4e8e\u7ebf\u6bb5\u6811\u5982\u4f55\u5199\uff0c\u4ee3\u7801\u91cc\u6709\u3002\n\n## Code\n\n```\n#include<bits/stdc++.h>\n#define int long long \nusing namespace std;\ninline int rd(){\n\tint num=0,sign=1; char ch=getchar();\n\twhile (ch<'0'||ch>'9') {if (ch=='-') sign=-1; ch=getchar();}\n\twhile (ch>='0'&&ch<='9') num=(num<<3)+(num<<1)+(ch^48),ch=getchar();\n\treturn num*sign;\n}\nconst int B=3;\nconst int mod=1e9+7;\nconst int N=3e5+7;\nint n,f[N],b[N];\nstruct node{\n\tint l,r,h1,h2,len;\n\tnode friend operator + (const node &a,const node &b){\n\t\tnode ans;\n\t\tans.l=a.l;ans.r=b.r;\n\t\tans.len=ans.r-ans.l+1;\n\t\tans.h1=(a.h1*f[b.len]%mod+b.h1)%mod;\n\t\tans.h2=(b.h2*f[a.len]%mod+a.h2)%mod;\n\t\treturn ans;\n\t}\n}a[N<<2];\nvoid build(int l,int r,int id){\n\ta[id].l=l;a[id].r=r;\n\ta[id].len=r-l+1;\n\ta[id].h1=a[id].h2=0;\n\tif(l==r) return ;\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,id<<1);build(mid+1,r,id<<1|1);\n}\nvoid change(int pos,int id){\n\tif(a[id].l==a[id].r) return a[id].h1=a[id].h2=1,void();\n\tint mid=(a[id].l+a[id].r)>>1;\n\tif(pos<=mid) change(pos,id<<1);\n\telse change(pos,id<<1|1);\n\ta[id]=a[id<<1]+a[id<<1|1];\n}\nnode query(int l,int r,int id){\n\tif(l<=a[id].l&&a[id].r<=r) return a[id];\n\tif(a[id<<1].r>=r) return query(l,r,id<<1);\n\tif(a[id<<1|1].l<=l) return query(l,r,id<<1|1);\n\treturn query(l,r,id<<1)+query(l,r,id<<1|1);\n}\nsigned main(){\n\tf[0]=1;\n\tfor(int i=1;i<=N-7;i++) f[i]=f[i-1]*B%mod;\n\tn=rd();\n\tbuild(1,n,1);\n\tfor(int i=1;i<=n;i++) b[i]=rd();\n\tfor(int i=1;i<=n;i++){\n\t\tchange(b[i],1);\n\t\tint x=min(b[i]-1,n-b[i]);\n\t\tif(query(b[i]-x,b[i],1).h1!=query(b[i],b[i]+x,1).h2&&i>=3){\n\t\t\tputs(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"NO\");\n\treturn 0;\n}\n\n```\n",
        "postTime": 1676004443,
        "uid": 739250,
        "name": "ikun_zhs",
        "ccfLevel": 0,
        "title": "CF452F Permutation"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u6392\u5217\uff0c\u8be2\u95ee\u91cc\u9762\u6709\u6ca1\u6709\u4e09\u5143\u8fde\u7eed\u5b50\u5e8f\u5217\u4f7f\u5f97\u8fd9\u4e2a\u5b50\u5e8f\u5217\u662f\u7b49\u5dee\u6570\u5217\u3002\n\n\u4f60\u770b\u8fd9\u4e2a\u95ee\u9898\u5f88\u6cb9\u817b\uff0c\u4e8e\u662f\u4f60\u8f6c\u5316\u95ee\u9898\u5230\u503c\u57df\u4e0a\u641e\u3002\n\n\u987a\u7740\u626b\uff0c\u626b\u5230\u4e00\u4e2a\u6570\u5c31\u8bb0\u8fd9\u4e2a\u6570\u7684\u72b6\u6001\u4e3a $1$\uff0c\u5982\u679c\u5f53\u524d\u6570\u662f\u7b49\u5dee\u6570\u5217\u7684\u4e2d\u95f4\u9879\uff0c\u7531\u4e8e\u662f\u6392\u5217\uff0c\u90a3\u4e48\u65c1\u8fb9\u4e24\u9879\u5982\u679c\u72b6\u6001\u4e0d\u540c\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u4f4d\u7f6e\u5c31\u5728\u4e24\u4fa7\uff0c\u5426\u5219\u5c31\u5728\u540c\u4fa7\u3002\n\n\u5982\u679c\u53d1\u73b0\u4e86\u5728\u4e24\u4fa7\u5c31\u76f4\u63a5\u8f93\u51fa Yes \u5e76\u8fdb\u884c\u4e00\u4e2a\u8def\u7684\u8dd1\uff0c\u5426\u5219\u5c31\u7ee7\u7eed\u4e0b\u53bb\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e0d\u7b26\u5408\u5f53\u4e14\u4ec5\u5f53\u4e24\u8fb9\u662f\u56de\u6587\u7684\uff0c\u9009\u53d6\u4e00\u4e2a\u725b\u903c\u7684\u6a21\u6570\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u54c8\u5e0c\u5373\u53ef\u3002\n\n\u73b0\u5728\u662f $14:06$\uff0c\u6211\u770b\u6211\u4ec0\u4e48\u65f6\u5019\u5199\u5b8c\u3002\n\n\u73b0\u5728\u662f $14:30$\uff0c\u6211\u5199\u5b8c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define debug(x) cerr<<#x<<' '<<x<<endl\n/* --------------- fast io --------------- */ // begin\nnamespace Fread {\nconst int SIZE = 1 << 26;\nchar buf[SIZE], *S, *T;\ninline char getchar() {\n\tif (S == T) {\n\t\tT = (S = buf) + fread(buf, 1, SIZE, stdin);\n\t\tif (S == T) return '\\n';\n\t}\n\treturn *S++;\n}\n} // namespace Fread\nnamespace Fwrite {\nconst int SIZE = 1 << 26;\nchar buf[SIZE], *S = buf, *T = buf + SIZE;\ninline void flush() {\n\tfwrite(buf, 1, S - buf, stdout);\n\tS = buf;\n}\ninline void putchar(char c) {\n\t*S++ = c;\n\tif (S == T) flush();\n}\nstruct NTR {\n\t~ NTR() { flush(); }\n} ztr;\n} // namespace Fwrite\n#ifdef ONLINE_JUDGE\n\t#define getchar Fread :: getchar\n\t#define putchar Fwrite :: putchar\n#endif\nnamespace Fastio {\nstruct Reader {\n\ttemplate<typename T>\n\tReader& operator >> (T& x) {\n\t\tchar c = getchar();\n\t\tT f = 1;\n\t\twhile (c < '0' || c > '9') {\n\t\t\tif (c == '-') f = -1;\n\t\t\tc = getchar();\n\t\t}\n\t\tx = 0;\n\t\twhile (c >= '0' && c <= '9') {\n\t\t\tx = (x * 10 + (c - '0'));\n\t\t\tc = getchar();\n\t\t}\n\t\tx *= f;\n\t\treturn *this;\n\t}\n\tReader& operator >> (char& c) {\n\t\tc = getchar();\n\t\twhile (c == '\\n' || c == ' ') c = getchar();\n\t\treturn *this;\n\t}\n\tReader& operator >> (char* str) {\n\t\tint len = 0;\n\t\tchar c = getchar();\n\t\twhile (c == '\\n' || c == ' ') c = getchar();\n\t\twhile (c != '\\n' && c != ' ') {\n\t\t\tstr[len++] = c;\n\t\t\tc = getchar();\n\t\t}\n\t\tstr[len] = '\\0';\n\t\treturn *this;\n\t}\n\tReader(){}\n} cin;\nconst char endl = '\\n';\nstruct Writer {\n\ttemplate<typename T>\n\tWriter& operator << (T x) {\n\t\tif (x == 0) { putchar('0'); return *this; }\n\t\tif (x < 0) { putchar('-'); x = -x; }\n\t\tstatic int sta[45];\n\t\tint top = 0;\n\t\twhile (x) { sta[++top] = x % 10; x /= 10; }\n\t\twhile (top) { putchar(sta[top] + '0'); --top; }\n\t\treturn *this;\n\t}\n\tWriter& operator << (char c) {\n\t\tputchar(c);\n\t\treturn *this;\n\t}\n\tWriter& operator << (char* str) {\n\t\tint cur = 0;\n\t\twhile (str[cur]) putchar(str[cur++]);\n\t\treturn *this;\n\t}\n\tWriter& operator << (const char* str) {\n\t\tint cur = 0;\n\t\twhile (str[cur]) putchar(str[cur++]);\n\t\treturn *this;\n\t}\n\tWriter(){}\n} cout;\n} // namespace Fastio\n#define cin Fastio :: cin\n#define cout Fastio :: cout\n#define endl Fastio :: endl\n/* --------------- fast io --------------- */ // end\n\n#define maxn 300010\ntypedef unsigned long long ull;\nint n;\null pw[maxn];\nstruct prpr{\n\tint len;\n\tull s;\n\tprpr(int ll=0,int ss=0):len(ll),s(ss){}\n}t1[maxn<<2],t2[maxn<<2];\nprpr operator+(prpr a,prpr b){\n\treturn prpr(a.len+b.len,pw[b.len]*a.s+b.s);\n}\nvoid build(int l,int r,int x=1){\n\tt1[x].len=t2[x].len=r-l+1;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,x<<1),build(mid+1,r,x<<1|1);\n\tt1[x]=t1[x<<1]+t1[x<<1|1];\n\tt2[x]=t2[x<<1|1]+t2[x<<1];\n}\nvoid change(int pos,int l=1,int r=n,int x=1){\n\tif(l==r){\n\t\tt1[x].s=t2[x].s=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)change(pos,l,mid,x<<1);\n\telse change(pos,mid+1,r,x<<1|1);\n\tt1[x]=t1[x<<1]+t1[x<<1|1];\n\tt2[x]=t2[x<<1|1]+t2[x<<1];\n}\nprpr ask1(int x,int y,int l=1,int r=n,int o=1){\n\tif(x<=l&&r<=y)return t1[o];\n\tint mid=(l+r)>>1;\n\tprpr ans;\n\tif(x<=mid)ans=ask1(x,y,l,mid,o<<1);\n\tif(y>mid)ans=ans+ask1(x,y,mid+1,r,o<<1|1);\n\treturn ans;\n}\nprpr ask2(int x,int y,int l=1,int r=n,int o=1){\n\tif(x<=l&&r<=y)return t2[o];\n\tint mid=(l+r)>>1;\n\tprpr ans;\n\tif(y>mid)ans=ask2(x,y,mid+1,r,o<<1|1);\n\tif(x<=mid)ans=ans+ask2(x,y,l,mid,o<<1);\n\treturn ans;\n}\nint x,len;\nsigned main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"testdata.in\",\"r\",stdin);\n#endif\n\tcin>>n;pw[0]=1;\n\tfor(int i=1;i<=n;i++)pw[i]=pw[i-1]*131;\n\tbuild(1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>x;\n\t\tchange(x);\n\t\tlen=min(x-1,n-x);\n\t\tif(len==0)continue;\n\t\tif(ask1(x-len,x-1).s!=ask2(x+1,x+len).s){\n\t\t\tcout<<\"Yes\";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"No\";\n#ifndef ONLINE_JUDGE\n\tcerr<<endl<<(double)clock()/CLOCKS_PER_SEC;\n#endif\n}\n\n```\n\u6211\u4e4b\u524d\u5199\u7684[Ynoi2011\u9065\u8fdc\u7684\u8fc7\u53bb](https://www.luogu.com.cn/problem/P5310)\u4e0a\u9762\u7684\u5e73\u8861\u6811\u7ef4\u62a4\u54c8\u5e0c\u4e0d\u77e5\u9053\u6bd4\u5b83\u9ad8\u5230\u54ea\u91cc\u53bb\u4e86\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u56f0\u96be\uff0c\u8fd8\u662f\u5c0f\u7684\u5f88\u3002\n\n[P2757 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u7b49\u5dee\u5b50\u5e8f\u5217](https://www.luogu.com.cn/problem/P2757)\uff0c\u4e00\u6837\u7684\u9898\u3002\n\n[LOJ6287](https://loj.ac/p/6287)\uff0c\u4e00\u6837\u7684\u9898\u3002\n",
        "postTime": 1631945216,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "CF452F Permutation \u8bb0\u5f55"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5b57\u7b26\u4e32\u54c8\u5e0c\u597d\u9898\u3002\n\n[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.com.cn/problem/P2757)\n\n# \u601d\u8def\n\u5982\u679c\u4e00\u4e2a\u957f\u5ea6\u4e3a $3$ \u7684\u7b49\u5dee\u5e8f\u5217\u7684\u7b2c\u4e8c\u9879\u4e3a $x$\uff0c\u516c\u5dee\u4e3a $d$\uff0c\u90a3\u4e48\u7b2c\u4e00\u9879\u4e3a $x-d$\uff0c\u7b2c\u4e8c\u9879\u4e3a $x+d$\u3002\n\n\u90a3\u4e48\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a $01$ \u5e8f\u5217\uff1a$a$\uff0c$a_i$ \u8868\u793a\u5728\u5f53\u524d $i$ \u8fd9\u4e2a\u6570\u5728\u524d\u9762\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u51fa\u73b0\u8fc7\u4e3a $1$\uff0c\u5426\u5219\u4e3a $0$\u3002\n\n\u66b4\u529b\u505a\u6cd5\u5c31\u662f\u5148\u626b\u4e00\u904d $a$ \u5e8f\u5217\uff0c\u7136\u540e\u8003\u8651\u7b49\u5dee\u5e8f\u5217\u7684\u7b2c\u4e8c\u9879 $x$ \u4e3a $a_i$\u3002\u518d\u679a\u4e3e\u516c\u5dee $d$\uff0c\u5982\u679c $x-d$ \u548c $x+d$ \u4e2d\u53ea\u6709\u4e00\u4e2a\u5728\u524d\u9762\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48 $x-d$ \u548c $x+d$ \u5c31\u5728 $x$ \u7684\u4e24\u4fa7\uff0c\u8fd4\u56de\u5b58\u5728\u7b49\u5dee\u5e8f\u5217\u3002\u679a\u4e3e\u5b8c $d$ \u540e\u8bb0\u5f97\u518d\u66f4\u65b0 $a$ \u5e8f\u5217\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u663e\u7136\u4f1a\u8d85\u65f6\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e\u679a\u4e3e $d$ \u5e76\u5224\u65ad\u7684\u8fc7\u7a0b\u5c31\u662f\u6bd4\u8f83 $a$ \u5e8f\u5217\u7684\u4e24\u4e2a\u5b50\u6bb5\u662f\u5426\u76f8\u7b49\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u54c8\u5e0c\u4f18\u5316\u3002\n\n\u518d\u7ef4\u62a4\u4e00\u4e2a \u6b63\u54c8\u5e0c\u503c\u548c\u53cd\u54c8\u5e0c\u503c\uff0c\u626b $a$ \u5e8f\u5217\u65f6\u5c31\u5224\u65ad\u524d\u4e00\u6bb5\u7684\u6b63\u54c8\u5e0c\u503c\u548c\u540e\u4e00\u6bb5\u7684\u53cd\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u5c31\u8fd4\u56de\u5b58\u5728\u7b49\u5dee\u5e8f\u5217\u3002\n\n\u7531\u4e8e\u8fd8\u8981\u518d\u8fdb\u884c\u5355\u70b9\u4fee\u6539\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u54c8\u5e0c\u503c\u3002\n\n# Code\n```cpp\n#include<bits/stdc++.h>\n#define L rt<<1\n#define R rt<<1|1\nusing namespace std;\nconst int mod=1e9+7;\nconst int base=3;\nconst int N=4e5;\nint n,power[N];\n\nstruct node //\u7ebf\u6bb5\u6811\n{\n\tint l,r,h1,h2; //h1\uff1a\u6b63\u54c8\u5e0c\u503c\uff0ch2\uff1a\u53cd\u54c8\u5e0c\u503c\n\tint mid() { return l+r>>1; }\n\tint len() { return r-l+1; }\n\t\n\tfriend node operator +(node x,node y)\n\t{\n\t\tnode z; z.l=x.l,z.r=y.r;\n\t\tz.h1=(1ll*x.h1*power[y.len()]%mod+y.h1)%mod;\n\t\tz.h2=(1ll*y.h2*power[x.len()]%mod+x.h2)%mod;\n\t\treturn z;\n\t}\n}T[N<<2];\n\nvoid build(int rt,int l,int r) {\n\tT[rt].l=l,T[rt].r=r,T[rt].h1=T[rt].h2=0;\n\tif (l!=r) build(L,l,T[rt].mid()),build(R,T[rt].mid()+1,r);\n}\nvoid update(int rt,int pos) {\n\tif (T[rt].l==T[rt].r) T[rt].h1=T[rt].h2=1;\n\telse update(pos<=T[rt].mid()?L:R,pos),T[rt]=T[L]+T[R];\n}\nnode query(int rt,int l,int r)\n{\n\tif (l<=T[rt].l&&T[rt].r<=r) return T[rt];\n\tif (r<=T[rt].mid()) return query(L,l,r);\n\tif (T[rt].mid()<l) return query(R,l,r);\n\treturn query(L,l,r)+query(R,l,r);\n}\nbool judge()\n{\n\tfor (int i=2,x,l;i<=n;i++) {\n\t\tscanf(\"%d\",&x); l=min(x-1,n-x); // l \u4e3a\u516c\u5dee\u6700\u5927\u7684\u5408\u6cd5\u503c\n\t\tif (l&&query(1,x-l,x-1).h1!=query(1,x+1,x+l).h2) return true;\n\t\tupdate(1,x); //\u66f4\u65b0 a \u5e8f\u5217\n\t}\n\treturn false;\n}\nint main()\n{\n\tscanf(\"%d\",&n); build(1,1,n); power[0]=1;\n\tfor (int i=1;i<N;i++) power[i]=1ll*power[i-1]*base%mod;\n\tputs(judge()?\"YES\":\"NO\");\n\treturn 0;\n}\n```",
        "postTime": 1675939773,
        "uid": 681036,
        "name": "OldDriverTree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\uff1a CF452F Permutation"
    },
    {
        "content": "\u6811\u72b6\u6570\u7ec4 $+$ HASH\n\n\n------------\n\n\u9996\u5148\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5f97\u5230\u4e00\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\uff0c\u679a\u4e3e\u524d 2 \u4e2a\u6570\uff0c\u7136\u540e\u5224\u65ad\u540e\u9762\u6709\u6ca1\u6709\u5b58\u5728\u7b2c 3 \u4e2a\u6570\u3002\n\n\n------------\n\n\u8003\u8651\u600e\u4e48\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\u3002\u8003\u8651\u679a\u4e3e\u4e2d\u95f4\u7684\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u524d\u540e\u5b58\u5728\u4e00\u4e2a\u4e0e\u5176\u5dee\u76f8\u540c\u7684\u6570\uff0c\u90a3\u4e48\u5219\u6709\u89e3\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u5462\uff1f\u8fd9\u4e2a\u4e0d\u662f\u5f88\u597d\u5224\u65ad\uff0c\u6211\u4eec\u8003\u8651\u5224\u65ad\u4ec0\u4e48\u65f6\u5019\u6ca1\u6709\u89e3\u3002\u5982\u679c\u6211\u4eec\u5efa\u51fa\u5173\u4e8e\u67d0\u4e2a\u6570\u4e4b\u524d\u6570\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u8bdd\uff0c\u90a3\u4e48\u5176\u5e94\u662f\u5173\u4e8e\u8fd9\u4e2a\u6570\u5bf9\u79f0\u7684\u3002\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \u6811\u72b6\u6570\u7ec4 $+$ HASH \u7684\u65b9\u6cd5\u5224\u65ad\u662f\u5426\u5bf9\u79f0\u3002\u5177\u4f53\u7684\uff0c\u5efa\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a\u8bb0\u5f55\u4ece\u524d\u5f80\u540e\u7684 Hash\uff0c \u53e6\u4e00\u4e2a\u8bb0\u5f55\u4ece\u540e\u5f80\u524d\u7684\uff0c\u6bcf\u679a\u4e3e\u4e00\u4e2a\u6570\uff0c\u5c31\u5f80\u6811\u72b6\u6570\u7ec4\u4e2d\u52a0\u503c\u3002\n\n\n------------\n\n\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n\n\n\n\n------------\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pi pair<int,int>\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define ls (rt<<1)\n#define rs (rt<<1|1)\n#define mid (l+r>>1)\n#define lowbit(x) (x&-x)\nconst int maxn=5e5+5,M=34005,mod=1e9+7,mod2=998244353;\ninline int read(){\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\ninline void print(int x){\n    static int a[55];int top=0;\n    if(x<0) putchar('-'),x=-x;\n    do{a[top++]=x%10,x/=10;}while(x);\n    while(top) putchar(a[--top]+48);\n}\nint n,m,a[maxn];\nstruct Hash{\n\tint x,y;\n\tHash(int a=0,int b=0){x=a,y=b;}\n\tHash operator + (const Hash &a)const{return Hash((x+a.x)%mod,(y+a.y)%mod2);}\n\tHash operator - (const Hash &a)const{return Hash((x-a.x+mod)%mod,(y-a.y+mod2)%mod2);}\n\tHash operator * (const Hash &a)const{return Hash(1ll*x*a.x%mod,1ll*y*a.y%mod2);}\n\tbool operator ==(const Hash &a)const{return x==a.x&&y==a.y;}\n}base,fac[maxn];\nstruct BIT{\n\tHash c[maxn];\n\tvoid add(int x,Hash num){for(int i=x;i<=n;i+=lowbit(i))c[i]=c[i]+num;}\n\tHash query(int x){Hash res;for(int i=x;i;i-=lowbit(i))res=res+c[i];return res;}\n}T1,T2;\nbool check(int l,int r,int l2){\n\tHash a=T1.query(r)-T1.query(l-1);\n\tHash b=T2.query(l2)-T2.query(r-1);\n\tb=b*fac[r];a=a*fac[n-r+1];\n\tif(a==b)return 0;return 1;\n}\nsigned main(){\n\tn=read();fac[0]=Hash(1,1);base=Hash(197,233);\n\tfor(int i=1;i<=n;i++)a[i]=read(),fac[i]=fac[i-1]*base;\n\tfor(int i=1;i<=n;i++){\n\t\tT1.add(a[i],fac[a[i]-1]);T2.add(a[i],fac[n-a[i]]);\n\t\tint z=min(a[i]-1,n-a[i]);\n\t\tif(check(a[i]-z,a[i],a[i]+z)){puts(\"YES\");exit(0);}\n\t}puts(\"NO\");\n \treturn 0;\n}\n\n\n```\n\n",
        "postTime": 1660365217,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "CF452F Permutation"
    },
    {
        "content": "\u53cc\u500d\u7ecf\u9a8c\uff1aP2757 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u7b49\u5dee\u5b50\u5e8f\u5217\n\n**\u7ebf\u6bb5\u6811+\u54c8\u5e0c**\n\n~~\u6211\u83dc\u6b7b\u4e86\u8c03\u4e86\u597d\u4e45\u7136\u540e\u641e\u4e86\u534a\u5929\u624d AC\uff0c~~ \u6240\u4ee5\u5728\u4ee3\u7801\u4e2d\u4f1a\u63d0\u5230\u4e00\u4e9b\u5751\u70b9\n\n\n## \u5206\u6790\n\n\u5bf9\u4e8e\u4e09\u5143\u7b49\u5dee\u6570\u5217\uff0c\u6709\u4e00\u4e2a\u5e38\u89c1\u6280\u5de7\u5c31\u662f\u679a\u4e3e\u4e2d\u503c $b=a_i$\uff0c\u7136\u540e\u627e $b-k,b+k$ \u662f\u5426\u5728\u540c\u4fa7\uff0c\u5982\u679c\u5728\u540c\u4fa7\u5c31\u5bc4\u4e86\uff0c\u4e0d\u5728\u5c31\u8d62\u4e86\n\n\u5982\u679c\u66b4\u529b\u679a\u4e3e $b,k$ \u90a3\u5c31\u662f\u5e73\u65b9\u7ea7\u522b\u4e86\uff0c\u59a5\u59a5 TLE\n\n\u8003\u8651\u4f18\u5316\uff0c\u5bf9\u4e8e\u679a\u4e3e $b$\uff0c\u65e0\u6cd5\u4f18\u5316\uff0c\u53ea\u80fd\u8003\u8651\u4f18\u5316 $k$ \u7684\u5bfb\u627e\n\n\u52a8\u6001\u7ef4\u62a4\u5b58\u5728\u6027 01 \u4e32\uff0c\u8868\u793a\u6bcf\u4e00\u4e2a\u6570\u662f\u5426\u5728\u5de6\u8fb9\u51fa\u73b0\uff0c\u5728\u53f3\u8fb9\u662f\u5426\u51fa\u73b0\uff0c\u5982\u679c\u662f\u56de\u6587\u4e32\uff0c\u90a3\u5c31\u5bc4\u4e86\uff0c\u56e0\u4e3a\u4e00\u5927\u4e00\u5c0f\u5168\u90e8\u96c6\u4e2d\u5728\u5de6\u4fa7\u6216\u53f3\u4fa7\uff0c\u5426\u5219\u5c31\u8d62\u4e86\n\n\u5982\u4f55\u5feb\u901f\u5224\u65ad\u56de\u6587\uff1f\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u5982\u679c\u6b63\u7740\u7684\u54c8\u5e0c\u7b49\u4e8e\u53cd\u7740\u7684\u54c8\u5e0c\uff0c\u90a3\u4e48\u5c31\u56de\u6587\n\n\u90a3\u4e48\u5c31\u662f\u641e\u4e00\u4e2a $\\log$ \u7ea7\u7684\u52a8\u6001\u7ef4\u62a4\u54c8\u5e0c\u503c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u957f\u5ea6\u548c\u6b63\u53cd\u54c8\u5e0c\u503c\n\n\u6ca1\u4e86\uff0c\u601d\u8def\u5c31\u8fd9\u4e48\u7b80\u5355\n\n## \u4ee3\u7801\n\n\u5982\u679c\u6ca1\u6709\u6df1\u5165\u7406\u89e3\u7684\u8bdd\u5751\u70b9\u4f1a\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u7ed3\u5408\u6ce8\u91ca\u98df\u7528\n\n```cpp\n#include <bits/stdc++.h>\n#define ll unsigned long long\n#define inl inline\n#define rep(i,a,b) for(int i=(a),i##end=(b);i<=i##end;++i)\n#define pre(i,a,b) for(int i=(a),i##end=(b);i>=i##end;--i)\nusing namespace std;\nconst int N=5e5+10,mod=1e9+7,B=27;\nstruct Node{\n\tll h1,h2;int l1,l2;\n\tNode(const ll v=0,const int l=0){h1=h2=v;l1=l2=1;}\n}t[N<<2];//\u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u5927\u7ed3\u6784\u4f53\uff0ch1,h2 \u662f\u6b63\u53cd\u54c8\u5e0c\u503c\uff0cl1,l2\u8868\u793a\u957f\u5ea6\nint n,a[N],T;\nll p[N];\nbool flag;\nNode comp(Node x,Node y){\n\tNode tmp;\n\ttmp.h1=(x.h1*p[y.l1]%mod+y.h1)%mod;\n\ttmp.h2=(y.h2*p[x.l2]%mod+x.h2)%mod;//\u8bf7\u6ce8\u610f h2 \u8868\u793a\u53cd\u54c8\u5e0c\uff0c\u6240\u4ee5\u8981\u76f8\u5bf9\u4e8e\u6b63\u54c8\u5e0c\u53cd\u7740\u64cd\u4f5c\uff0c\u8981\u4e0d\u7136\u5c31 WA 16 pts\n\ttmp.l1=x.l1+y.l1;tmp.l2=x.l2+y.l2;\n\treturn tmp;\n}//\u5408\u5e76\u64cd\u4f5c\uff0c\u7528\u4e8e\u4e0a\u4f20\nnamespace Tree{\n\t#define ls k<<1\n\t#define rs k<<1|1\n\t#define mid (l+r>>1)\n\t#define pushup(k) t[k]=comp(t[ls],t[rs])\n\tinl void update(int k,int l,int r,int x){\n\t\tif(x<l||x>r)return ;\n\t\tif(l==r){\n\t\t\tNode tmp;tmp.h1=tmp.h2=1;tmp.l1=tmp.l2=1;\n\t\t\tt[k]=tmp;\n\t\t\treturn ;\n\t\t}\n\t\tupdate(ls,l,mid,x);update(rs,mid+1,r,x);pushup(k);\n\t}\n\tinl void build(int k,int l,int r){\n\t\tif(l==r){\n\t\t\tNode tmp;tmp.h1=tmp.h2=0;tmp.l1=tmp.l2=1;\n\t\t\tt[k]=tmp;\n\t\t\treturn ;\n\t\t}\n\t\tbuild(ls,l,mid);build(rs,mid+1,r);pushup(k);\n\t}\n\tNode query(int k,int l,int r,int x,int y){\n\t\tif(x<=l&&y>=r)return t[k];\n\t\tif(y<=mid)return query(ls,l,mid,x,y);\n\t\tif(mid<x)return query(rs,mid+1,r,x,y);\n\t\treturn comp(query(ls,l,mid,x,mid),query(rs,mid+1,r,mid+1,y));\n\t}\n}\nusing namespace Tree;\nsigned main(void){\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tint T=1;//\u4ece P2757 \u6765\u7684\uff0c\u5176\u5b9e\u8ddf T \u6ca1\u5173\u7cfb\uff08\n\twhile(T--){\n\t\t// rep(i,1,N<<2)t[i].h1=t[i].h2=t[i].l1=t[i].l2=0;\n\t\tp[0]=1;flag=0;\n\t\tcin>>n;\n\t\trep(i,1,n)p[i]=p[i-1]*B%mod;\n\t\tbuild(1,1,n);\n\t\trep(i,1,n){\n\t\t\tint x;cin>>x;//\u4e0d\u8bba\u662f\u5426\u627e\u5230\u4e86\u4e09\u5143\u7b49\u5dee\u6570\u5217\uff0c\u90fd\u8981\u8bfb\u5b8c\uff08\u4e00\u4e0a\u6765\u56e0\u4e3a\u8fd9\u4e2a\u5bc4\u4e86\u4e00\u53d1\uff09\n\t\t\tif(flag)continue;\n\t\t\tupdate(1,1,n,x);\n\t\t\tint len=min(x-1,n-x);\n\t\t\tif(len<=0)continue;//\u4e0d\u5408\u6cd5\u7279\u5224\n\t\t\tif(query(1,1,n,x-len,x-1).h1!=query(1,1,n,x+1,x+len).h2){//\u5982\u679c\u6b63\u54c8\u5e0c\u4e0d\u7b49\u4e8e\u53cd\u54c8\u5e0c\uff0c\u627e\u5230\u4e86\n\t\t\t\tcout<<\"Y\\n\";flag=1;\n\t\t\t}\n\t\t}\n\t\tif(!flag)cout<<\"N\\n\";\n\t}\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1658210080,
        "uid": 555059,
        "name": "Stannum7507",
        "ccfLevel": 4,
        "title": "CF452F Permutation"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217 $a$\uff0c\u5224\u65ad\u5176\u4e2d\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a $3$ \u7684\u7b49\u5dee\u6570\u5217\u3002\n\n## \u505a\u6cd5\uff1a\n\n\u5bf9\u4e8e\u8fd9\u79cd $3$ \u4e2a\u6570\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8003\u8651\u679a\u4e3e\u4e2d\u95f4\u7684\u90a3\u4e2a\u6570\uff0c\u8bbe\u6211\u4eec\u679a\u4e3e\u4f4d\u7f6e\u4e3a $i$\uff0c\u8bbe\u516c\u5dee\u4e3a $v$\uff0c\u53ea\u8981\u6211\u4eec\u53ef\u4ee5\u5728 $1$ \u5230 $i-1$ \u4e2d\u627e\u5230 $a_i-v$\uff0c\u5728 $i+1$ \u5230 $n$ \u4e2d\u627e\u5230 $a_i+v$\uff08\u6216\u8005\u53cd\u8fc7\u6765\uff09\u5c31\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u76f4\u63a5\u601d\u8003\u4e0d\u662f\u5f88\u597d\u60f3\uff0c\u8003\u8651\u5c06\u8fc7\u7a0b\u8f6c\u5316\u6210 $01$ \u5e8f\u5217\uff0c\u5728\u6211\u4eec\u679a\u4e3e\u5230\u7b2c $i$ \u4e2a\u70b9\u65f6\uff0c\u5df2\u7ecf\u51fa\u73b0\u7684\u6570\u4e3a $1$\uff0c\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u4e3a $0$\uff0c\u76f8\u5f53\u4e8e\u5728\u5e8f\u5217\u7684\u7b2c $a_i$ \u4e2a\u4f4d\u7f6e\uff0c\u82e5 $a_i-v$ \u51fa\u73b0\u8fc7\u4e14 $a_i+v$ \u4e5f\u51fa\u73b0\u8fc7\uff0c\u6216\u8005\u90fd\u6ca1\u6709\u51fa\u73b0\u8fc7\u65f6\uff0c\u56e0\u4e3a $a$ \u662f\u4e00\u4e2a\u6392\u5217\uff0c\u6240\u4ee5 $a_i-v$ \u548c $a_i+v$ \u4e00\u5b9a\u5728 $i$ \u7684\u540c\u4fa7\uff0c\u5bf9\u4e8e\u9009\u7684\u8fd9\u4e00\u4e2a $v$ \u65e0\u89e3\u3002\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a $v$ \u90fd\u65e0\u89e3\u7684\u8bdd\uff0c\u8fd9\u4e2a\u5e8f\u5217\u4e00\u5b9a\u662f\u4ee5 $a_i$ \u4e3a\u4e2d\u5fc3\u5bf9\u79f0\u7684\uff0c\u4e5f\u5c31\u662f\u5de6\u8fb9\u4ece\u5de6\u5f80\u53f3\u7684\u5e8f\u5217\u548c\u53f3\u8fb9\u4ece\u53f3\u5f80\u5de6\u7684\u5e8f\u5217\u76f8\u7b49\u3002\n\n\u5224\u65ad\u5e8f\u5217\u76f8\u7b49\uff1fhash\uff01\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4ece\u5de6\u5f80\u53f3\u548c\u4ece\u53f3\u5f80\u5de6\u7684\u54c8\u5e0c\u503c\uff0c\u8fd8\u8981\u652f\u6301\u4fee\u6539\uff0c\u4e8e\u662f\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\mathcal{O}(n\\log n)$\n\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\ntypedef unsigned long long ull;\nusing namespace std;\nconst ull seed=233;\nint n;\nchar a[300005];\null ksm[300005];\nstruct node{\n\tint l,r;\n\tull vl,vr;\n}Tree[1200005];\nvoid ztree(int p,int l,int r){\n\tTree[p].l=l,Tree[p].r=r;\n\tif(l==r){\n\t\tTree[p].vl=Tree[p].vr=(unsigned long long)a[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tztree(p*2,l,mid);\n\tztree(p*2+1,mid+1,r);\n\tTree[p].vl=Tree[p*2].vl*ksm[r-mid]+Tree[p*2+1].vl;\n\tTree[p].vr=Tree[p*2+1].vr*ksm[mid-l+1]+Tree[p*2].vr;\n}\null Getl(int p,int l,int r){\n\tif(l<=Tree[p].l&&Tree[p].r<=r)return Tree[p].vl;\n\tint mid=Tree[p].l+Tree[p].r>>1;\n\tull vl=0,vr=0;\n\tif(l<=mid)vl=Getl(p*2,l,r);\n\tif(r>mid)vr=Getl(p*2+1,l,r);\n\tif(!vl)return vr;\n\tif(!vr)return vl;\n\treturn vl*ksm[min(Tree[p*2+1].r,r)-mid]+vr;\n}\null Getr(int p,int l,int r){\n\tif(l<=Tree[p].l&&Tree[p].r<=r)return Tree[p].vr;\n\tint mid=Tree[p].l+Tree[p].r>>1;\n\tull vl=0,vr=0;\n\tif(l<=mid)vl=Getr(p*2,l,r);\n\tif(r>mid)vr=Getr(p*2+1,l,r);\n\tif(!vl)return vr;\n\tif(!vr)return vl;\n\treturn vr*ksm[mid+1-max(Tree[p*2].l,l)]+vl;\n}\nvoid update(int p,int l){\n\tif(Tree[p].l==Tree[p].r){\n\t\tTree[p].vl=Tree[p].vr=(unsigned long long)a[l];\n\t\treturn;\n\t}\n\tint mid=Tree[p].l+Tree[p].r>>1;\n\tif(l<=mid)update(p*2,l);\n\telse update(p*2+1,l);\n\tTree[p].vl=Tree[p*2].vl*ksm[Tree[p].r-mid]+Tree[p*2+1].vl;\n\tTree[p].vr=Tree[p*2+1].vr*ksm[mid-Tree[p].l+1]+Tree[p*2].vr;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tksm[0]=1;\n\tfor(int i=1;i<=n;i++)a[i]='0',ksm[i]=ksm[i-1]*seed;\n\tztree(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(x==1||x==n){\n\t\t\ta[x]='1';\n\t\t\tupdate(1,x);\n\t\t\tcontinue;\n\t\t}\n\t\tint lenl=x-1,lenr=n-x;\n\t\tif(lenl<lenr)lenr=lenl;\n\t\telse lenl=lenr;\n\t\tull vl=Getl(1,x-lenl,x-1);\n\t\tull vr=Getr(1,x+1,x+lenr);\n\t\ta[x]='1';\n\t\tupdate(1,x);\n\t\tif(vl!=vr){\n\t\t\tputs(\"yes\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"no\");\n\treturn 0;\n}\n```",
        "postTime": 1668696843,
        "uid": 301817,
        "name": "QZJ666",
        "ccfLevel": 7,
        "title": "CF452F Permutation"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF452F)\n\n[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.com.cn/problem/P2757)\n\n## \u601d\u7ef4\u5386\u7a0b\n\n\u9996\u5148\u8003\u8651\u679a\u4e3e\u4e2d\u95f4\u6570 $mid$ \u548c\u5dee\u503c $d$\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u4e00\u4e0b\u5c31\u5230\u5e73\u65b9\u7ea7\u522b\uff0c\u9700\u8981\u4f18\u5316\u3002\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u662f $1$ \u5230 $n$ \u7684\u6392\u5217\uff0c\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u4e2a $mid$ \u548c $d$ \u5fc5\u7136\u5b58\u5728 $mid+d$ \u548c $mid-d$\uff0c\u8003\u8651\u4e00\u4e2a\u8f6c\u6362\uff0c\u5373\u5224\u65ad\u4e8c\u8005\u662f\u5728 $mid$ \u540c\u4fa7\u6216\u8005\u5f02\u4fa7\uff0c\u8fdb\u4e00\u6b65\u7684\u7528 $0$ \u8868\u793a\u672a\u51fa\u73b0\uff0c\u7528 $1$ \u8868\u793a\u5df2\u51fa\u73b0\uff0c\u82e5\u5b58\u5728\u4e00\u7ec4 $mid$ \u548c $d$ \u6ee1\u8db3\u7b49\u5dee\u5e8f\u5217\u8981\u6c42\uff0c\u5176\u5145\u8981\u6761\u4ef6\u4fbf\u662f\u8fd9\u4e2a $01$ \u4e32\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u4e32\u3002\n\n\u5176\u4ed6\u5927\u4f6c\u60f3\u5230 hash \u800c\u6211\u8fd9\u4e2a\u849f\u84bb\u53ea\u60f3\u5230\u4e86\u4e8c\u8fdb\u5236\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u53f6\u5b50\u5c31\u662f\u7ef4\u62a4\u51fa\u73b0\u4e0e\u5426\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u7ef4\u62a4\u5b83\u53f6\u5b50\u6240\u7ec4\u6210\u7684\u4e8c\u8fdb\u5236\u503c\uff0c\u4e0a\u4f20\u64cd\u4f5c\u65f6\uff08\u6b64\u5904\u8868\u793a\u6b63\u4e8c\u8fdb\u5236\u503c\uff09\u5de6\u5b50\u6811\u7684\u503c\u5de6\u79fb\u53f3\u5b50\u6811 $01$ \u4e32\u957f\u5ea6\u518d\u52a0\u4e0a\u53f3\u5b50\u6811\u503c\u3002\n\n\u5bf9\u4e8e\u56de\u6587\u4e32\u7684\u5224\u65ad\u76f4\u63a5\u91c7\u53d6\u6b63\u53cd\u4e8c\u8fdb\u5236\u503c\u8868\u793a\u7684\u6570\u503c\u662f\u5426\u76f8\u7b49\uff0c\u6b64\u65f6\uff08\u6b64\u5904\u8868\u793a\u6b63\u4e8c\u8fdb\u5236\u503c\uff09\u5c31\u662f\u5de6\u5b50\u6811\u7684\u503c\u5de6\u79fb\u53f3\u5b50\u6811**\u8bbf\u95ee\u7684**\u76f8\u5e94 $01$ \u4e32\u957f\u5ea6\uff08\u4e0d\u4e00\u5b9a\u8bbf\u95ee\u8be5\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\uff09\u3002\n\n**\u4e09\u4e2a\u5c0f\u5751\u70b9\u3002**\n\n- \u5de6\u79fb\u5e94\u5f53\u5148\u9884\u5904\u7406\u4e3a $base$ \u6570\u7ec4\u7136\u540e\u5728\u540e\u9762\u76f4\u63a5\u76f8\u4e58\u3002\n- \u5bf9\u4e8e $a[i]=1$ \u6216 $a[i]=n$ \u5e94\u5f53\u76f4\u63a5\u8df3\u8fc7\u3002\n- \u5f00 long long\u3002\n\n~~\u672c\u4eba\u62d9\u89c1\uff0c\u5982\u6709\u5dee\u9519\uff0c\u8bf7\u8d50\u6559\u3002~~\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define void inline void\n#define ls rt<<1\n#define rs rt<<1|1\n#define L t[rt].tl\n#define R t[rt].tr\nusing namespace std;\nconst ll N=5e5+10,mod=1e9+7;\nll n,flag,maxn,minn,a[N],base[N+10];\nstruct node{\n\tll tl,tr,sum[2],depth;\n}t[N<<2];\ninline ll read(){\n\tchar ch=getchar();ll res=0,f=1;\n\twhile(ch<'0'||'9'<ch){if(ch=='-')f=-1;ch=getchar();}\n\twhile('0'<=ch&&ch<='9') res=res*10+ch-'0',ch=getchar();\n\treturn res*f;\n}\nvoid init(){\n\tbase[0]=1;\n\tfor(ll i=1;i<=N;i++)\n\t\tbase[i]=base[i-1]*2ll%mod;\n}\nvoid pushup(ll rt){\n\tt[rt].sum[0]=((t[ls].sum[0]*base[t[rs].depth])+t[rs].sum[0])%mod;\n\tt[rt].sum[1]=((t[rs].sum[1]*base[t[ls].depth])+t[ls].sum[1])%mod;\n}\nvoid build(ll rt,ll l,ll r){\n\tt[rt].tl=l,t[rt].tr=r;\n\tif(l==r){t[rt].depth=1,t[rt].sum[0]=t[rt].sum[1]=0;return ;}\n\tll mid=(l+r)>>1;\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\tt[rt].depth=t[ls].depth+t[rs].depth;\n\tt[rt].sum[0]=t[rt].sum[1]=0;\n}\nvoid modify(ll rt,ll x){\n\tif(L==R){t[rt].sum[0]=t[rt].sum[1]=1;return ;}\n\tll mid=(L+R)>>1;\n\tif(x<=mid) modify(ls,x);\n\telse modify(rs,x);\n\tpushup(rt);\n}\ninline ll query(ll rt,ll l,ll r,ll k){\n\tif(l<=L&&R<=r) return t[rt].sum[k];\n\tll mid=(L+R)>>1,dr=max(mid-max(l,L)+1,0ll),dl=max(min(r,R)-mid,0ll),res=0;\n\tif(!k){\n\t\tif(l<=mid) res+=(query(ls,l,r,k)*base[dl])%mod;\n\t\tif(mid<r) res+=query(rs,l,r,k)%mod;\n\t}\n\telse{\n\t\tif(l<=mid) res+=query(ls,l,r,k)%mod;\n\t\tif(mid<r) res+=(query(rs,l,r,k)*base[dr])%mod;\n\t}\n\treturn res%mod;\n}\nint main(){\n\tinit();n=read(),flag=0;build(1,1,n);\n\tfor(ll i=1;i<=n;i++) a[i]=read();\n\tfor(ll i=2;i<n;i++){\n\t\tmodify(1,a[i-1]);\n\t\tif(a[i]==1||a[i]==n) continue;\n\t\tll len=min(a[i]-1+1,n-a[i]+1);//\u9632\u6b62\u975e\u6cd5\u8bbf\u95ee\n\t\tif(query(1,a[i]-len+1,a[i]-1,0)!=query(1,a[i]+1,a[i]+len-1,1)){\n\t\t\tprintf(\"YES\\n\"),flag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0) printf(\"NO\\n\");\n\treturn 0;\n}\n\n```\n",
        "postTime": 1661437716,
        "uid": 365166,
        "name": "\u795e\u5149qwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF452F Permutation"
    },
    {
        "content": "## Solution\n\n\u8fd9\u9898\u51fa\u7684\u5f88\u6709\u60f3\u6cd5\u554a .\n\n\u8003\u8651\u679a\u4e3e\u4e2d\u95f4\u9879 . \u4e00\u4e2a\u663e\u7136\u7684\u60f3\u6cd5\u662f , \u6328\u4e2a\u679a\u4e3e\u5de6\u8fb9\u7684\u6570 , \u770b\u53f3\u8fb9\u6709\u6ca1\u6709\u6570\u80fd\u548c\u4e2d\u95f4\u6570 , \u5de6\u8fb9\u6570\u6784\u6210\u7b49\u5dee\u6570\u5217 . \u53ef\u60dc\u8fd9\u662f\u5e73\u65b9\u7684 , \u8fc7\u4e0d\u4e86 .\n\n\u8003\u8651\u4f18\u5316 . \u7531\u4e8e\u8fd9\u662f\u6392\u5217 , \u53f3\u8fb9\u51fa\u73b0\u7b49\u4ef7\u4e8e\u5de6\u8fb9\u6ca1\u6709\u51fa\u73b0 .\n\n\u6240\u4ee5\u626b\u63cf\u4e00\u4e0b\u6570\u7ec4 , \u6bcf\u6b21\u5224\u65ad\u662f\u4e0d\u662f\u6709\u53ef\u80fd\u4e0e\u5f53\u524d\u6570\u6784\u6210\u7b49\u5dee\u6570\u5217\u7684\u6570\u90fd\u5728\u5de6\u8fb9\u51fa\u73b0\u4e86\u6216\u90fd\u5728\u53f3\u8fb9\u51fa\u73b0\u4e86 . \n\n\u8fd9\u53c8\u7b49\u4ef7\u4e8e , \u5982\u679c\u628a\u6876 (\u6743\u503c\u7ebf\u6bb5\u6811) \u770b\u505a $01$ \u4e32 , \u4ee5\u5f53\u524d\u8fd9\u4e2a\u6570\u4e3a\u4e2d\u5fc3\u5bf9\u79f0 . \n\n\u54c8\u5e0c\u7ecf\u5178\u8fd0\u7528 . \u6ce8\u610f\u5f00 `long long` .\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define mid (l+r>>1)\n#define ffor(i,a,b) for(int i=(a);i<=(b);i++)\n#define roff(i,a,b) for(int i=(a);i>=(b);i--)\nusing namespace std;\nconst int MAXN=3e5+10,MOD=1e9+7;\nint n,a[MAXN],p[MAXN],val1[MAXN<<2],val2[MAXN<<2];\nvoid update(int k,int l,int r,int pos) {\n\tif(l==r) return val1[k]=val2[k]=1,void();\n\tif(pos<=mid) update(k<<1,l,mid,pos); else update(k<<1|1,mid+1,r,pos);\n\tval1[k]=(val1[k<<1]*p[r-mid]%MOD+val1[k<<1|1])%MOD,val2[k]=(val2[k<<1|1]*p[mid-l+1]%MOD+val2[k<<1])%MOD;\n\treturn ;\n}\nint query(int k,int l,int r,int x,int y,int op) {\n\tif(x<=l&&r<=y) return (op==1)?val1[k]:val2[k];\n\tif(y<=mid) return query(k<<1,l,mid,x,y,op); if(x>mid) return query(k<<1|1,mid+1,r,x,y,op);\n\tif(op==1) return (query(k<<1,l,mid,x,mid,op)*p[y-mid]%MOD+query(k<<1|1,mid+1,r,mid+1,y,op))%MOD;\n\treturn (query(k<<1|1,mid+1,r,mid+1,y,op)*p[mid-x+1]%MOD+query(k<<1,l,mid,x,mid,op))%MOD;\n}\nsigned main() {\n\tios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n\tcin>>n;ffor(i,1,n) cin>>a[i];\n\tp[0]=1;ffor(i,1,n) p[i]=p[i-1]*2%MOD;\n\tffor(i,1,n) {\n\t\tupdate(1,1,n,a[i]);\n\t\tint l=max(1ll,2*a[i]-n),r=min(n,2*a[i]-1);\n\t\tif(query(1,1,n,l,r,1)!=query(1,1,n,l,r,2)) return printf(\"YES\"),0;\n\t}\n\treturn printf(\"NO\"),0;\n}\n```",
        "postTime": 1658385236,
        "uid": 120947,
        "name": "Purslane",
        "ccfLevel": 7,
        "title": "CF452F"
    },
    {
        "content": "# Link\n[CF452F Permutation](https://www.luogu.com.cn/problem/CF452F)\n\n# Solve\n\n\u5148\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff0c\u5bf9\u4e8e\u4e00\u4e2a$a[i]$\u6211\u4eec\u5224\u65ad\u5982\u679c\u5b58\u5728\u4e00\u4e2a$a[i]+k$\u548c$a[i]-k$\u5728$a[i]$\u7684\u5f02\u4fa7\uff0c\u90a3\u4e48\u5c31\u5b58\u5728\u4e00\u4e2a\u89e3\uff0c\u8f93\u51fa$yes$\uff0c\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a$a[i]$\u90fd\u4e0d\u5b58\u5728\uff0c\u5c31\u8f93\u51fa$no$\u3002\n\n\u5982\u4f55\u5224\u65ad\u662f\u5426\u5b58\u5728$a[i]+k$\u548c$a[i]-k$\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u56de\u6587\uff0c\u5904\u7406\u6bcf\u4e2a$a[i]$\u65f6\uff0c\u6211\u4eec\u628a$a[i]$\u8fd9\u4e2a\u4f4d\u7f6e\u6253\u4e0a$1$\uff0c\u5982\u679c\u6b64\u65f6\u7684\u5e8f\u5217\u4e0d\u662f\u4ee5$a[i]$\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\uff0c\u90a3\u4e48\u80af\u5b9a\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684$a[i]+k$\u6216\u8005$a[i]-k$\u5728$a[i]$\u540e\u9762\uff0c\u5c31\u5b58\u5728\u89e3\u4e86\uff0c\u5982\u679c\u662f\u56de\u6587\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a$a[i]$\u6bcf\u4e00\u4e2ak\uff0c$a[i]+k$\u548c$a[i]-k$\u90fd\u5728$a[i]$\u540c\u4fa7\u4e86\u3002\n\n\u5982\u4f55\u7ef4\u62a4\u56de\u6587\uff0c\u5f88\u5bb9\u6613\u7684\u60f3\u5230**\u7ebf\u6bb5\u6811+\u54c8\u5e0c**\uff0c\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6b63\u7740\u54c8\u5e0c\u548c\u53cd\u8fc7\u6765\u54c8\u5e0c\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u5c31\u5efa\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e00\u68f5\u8868\u793a\u6b63\u7740\u54c8\u5e0c\uff0c\u4e00\u68f5\u8868\u793a\u53cd\u7740\u54c8\u5e0c\uff0c\u53cd\u7740\u54c8\u5e0c\u7684\u6811\u7edf\u8ba1\u65f6\u5c31\u628a\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u4ea4\u6362\u5c31\u597d\u4e86\uff0c\u76f8\u5f53\u4e8e\u628a\u7ebf\u6bb5\u6811\u505a\u4e86\u4e00\u6b21\u5bf9\u79f0(\u8fd9\u4e48\u8bf4\u4e5f\u4e0d\u591f\u4e25\u8c28\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u597d\u4e86)\u3002\n\n# Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=3e5+5,TT=1e9+7,bas=27;\ntypedef long long LL;\nint N,a[maxn];\nLL pw[maxn];\nstruct node{\n\tLL val;\n\tint len;\n\tnode(const LL v=0,const int l=0){val=v;len=1;}\n}ta[maxn<<2],tb[maxn<<2];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch<='9'&&ch>='0')ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nnode merge(node l,node r){\n\tnode ret;\n\tret.val=(l.val*pw[r.len]%TT+r.val)%TT;\n\tret.len=l.len+r.len;\n\treturn ret;\n}\n\nvoid pushup(int k){\n\tta[k]=merge(ta[k<<1],ta[k<<1|1]);\n\ttb[k]=merge(tb[k<<1|1],tb[k<<1]);\n}\n\nvoid update(int k,int l,int r,int x){\n\tif(l==r){\n\t\tta[k]=tb[k]=node(1,1);\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid)update(k<<1,l,mid,x);\n\telse update(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\n\nnode query1(int k,int l,int r,int x,int y){\n\tif(x<=l&&r<=y)return ta[k];\n\tint mid=r+l>>1;\n\tif(y<=mid)return query1(k<<1,l,mid,x,y);\n\tif(mid<x)return query1(k<<1|1,mid+1,r,x,y);\n\treturn merge(query1(k<<1,l,mid,x,mid),query1(k<<1|1,mid+1,r,mid+1,y));\n}\n\nnode query2(int k,int l,int r,int x,int y){\n\tif(x<=l&&r<=y)return tb[k];\n\tint mid=r+l>>1;\n\tif(y<=mid)return query2(k<<1,l,mid,x,y);\n\tif(mid<x)return query2(k<<1|1,mid+1,r,x,y);\n\treturn merge(query2(k<<1|1,mid+1,r,mid+1,y),query2(k<<1,l,mid,x,mid));\n}\n\nvoid build(int k,int l,int r){\n\tif(l==r){\n\t\tta[k]=tb[k]=node(0,1);\n\t\treturn ;\n\t}\n\tint mid=r+l>>1;\n\tbuild(k<<1,l,mid);build(k<<1|1,mid+1,r);\n\tpushup(k);\n}\n\nint main(){\n\tfreopen(\"CF452F.in\",\"r\",stdin);\n\tfreopen(\"CF452F.out\",\"w\",stdout);\n\tN=read();\n\tpw[0]=1;\n\tfor(int i=1;i<=N;i++)pw[i]=pw[i-1]*bas%TT;\n\tbuild(1,1,N);\n\tfor(int i=1;i<=N;i++){\n\t\tint x=read();\n\t\tupdate(1,1,N,x);\n\t\tint k=min(x-1,N-x);\n\t\tif(k<=0) continue;\n\t\tif(query1(1,1,N,x-k,x-1).val!=\n\t\tquery2(1,1,N,x+1,x+k).val){\n\t\t\tprintf(\"YES\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1603846611,
        "uid": 128822,
        "name": "OI\u754c\u7684\u5c0f\u6df7\u6df7",
        "ccfLevel": 6,
        "title": "CF452F Permutation \u9898\u89e3"
    },
    {
        "content": "\u63a8\u8350\u4e00\u4e0b[\u6211\u7684\u535a\u5ba2](http://ljf-cnyali.cn/2019/09/08/CF452F-%E7%BA%BF%E6%AE%B5%E6%A0%91-Hash/)\n\n\u8fd9\u9053\u9898\u6709\u4e00\u9053\u4e00\u6837\u7684\u9898[LuoguP2757](https://www.luogu.org/problem/P2757)\uff0c\u4f46\u90a3\u9053\u9898\u53ef\u4ee5 $O(n^2)$ \u6c34\u8fc7\u53bb\n\n\u9996\u5148\u63d0\u4e00\u4e2a $Hash$ \u7684\u6280\u5de7\uff0c\u5047\u8bbe\u6709\n\n$$\\begin{aligned}&Hash_1=p\\times a_1\\\\&Hash_2=Hash_1+p^2\\times a_2\\\\&\\dots\\end{aligned}$$\n\n\u5047\u8bbe\u6211\u4eec\u8981\u6c42 $a_x\\dots a_y$ \u7684 $Hash$ \u7684\u503c\uff0c\u53ef\u4ee5\u7528\u4e0a\u9762\u7684 $Hash_i$ \u7684\u5230\n\n\u5373\u503c\u4e3a $Hash_y-Hash_x\\times p^{y-x}$\n\n\u518d\u63a5\u7740\u8003\u8651\u8fd9\u9053\u9898\uff0c\u9996\u5148\u4fdd\u8bc1\u4e86\u8fd9\u4e2a\u5e8f\u5217\u662f $1\\rightarrow n$ \u7684\u6392\u5217\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u6570\u5f53\u4e14\u4ec5\u5f53\u51fa\u73b0\u4e00\u6b21\n\n\u5047\u8bbe\u5f53\u524d\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u6570\u5b57\uff0c\u503c\u4e3a $a_i$ \uff0c\u90a3\u4e48\u5982\u679c $a_i$ \u4f5c\u4e3a\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u4e2d\u95f4\u503c\u7684\u8bdd\uff0c\u5e94\u6ee1\u8db3 $a_j<a_i$ \u4e14 $a_j$ \u5df2\u7ecf\u5728 $i$ \u4e4b\u524d\u51fa\u73b0\u8fc7\uff0c $2a_i-a_j$ \u8fd8\u672a\u51fa\u73b0\n\n\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a $bool$ \u6570\u7ec4\u8f6c\u5316\u4e00\u4e0b\u8fd9\u4e2a\u8981\u6c42\uff0c\u8bbe $b_i$ \u8868\u793a $i$ \u8fd9\u4e2a\u503c\u662f\u5426\u51fa\u73b0\u8fc7\n\n\u90a3\u4e48\u5982\u679c $a_i$ \u4e0d\u53ef\u80fd\u4f5c\u51fa\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53\u4ece\u4ee5 $i$ \u4e3a\u4e2d\u5fc3\u7684 $b$ \u4e32\u662f\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u5373\u4efb\u610f $x$ \u90fd\u6ee1\u8db3 $b_{a_i-x}=b_{a_i+x}$\n\n\u90a3\u4e48\u5c31\u4f7f\u7528\u4e4b\u524d\u63d0\u5230\u7684 $Hash$ \u6765\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u4e32\uff0c\u56e0\u4e3a\u8981\u52a8\u6001\u66f4\u65b0\uff0c\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\n\n```c++\n/***************************************************************\n\tFile name: CF452F.cpp\n\tAuthor: ljfcnyali\n\tCreate time: 2019\u5e7409\u670808\u65e5 \u661f\u671f\u65e5 15\u65f614\u520649\u79d2\n***************************************************************/\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i, a, b) for ( int i = (a), _end_ = (b); i <= _end_; ++ i ) \n#define mem(a) memset ( (a), 0, sizeof ( a ) ) \n#define str(a) strlen ( a ) \n#define lson root << 1\n#define rson root << 1 | 1\n#define int long long\ntypedef long long LL;\n\nconst int maxn = 300010;\nconst int Mod = 103;\n\nint n, a[maxn], p[maxn];\nstruct node\n{\n    int val;\n} Tree[maxn << 2][2];\n\ninline int Query(int root, int l, int r, int L, int R, int k)\n{\n    if ( L <= l && r <= R ) return Tree[root][k].val;\n    int Mid = l + r >> 1, sum = 0;\n    if ( L <= Mid ) sum += Query(lson, l, Mid, L, R, k);\n    if ( Mid < R ) sum += Query(rson, Mid + 1, r, L, R, k);\n    return sum;\n}\n\ninline void PushUp(int root, int k)\n{\n    Tree[root][k].val = Tree[lson][k].val + Tree[rson][k].val;\n}\n\ninline void Modify(int root, int l, int r, int pos, int val, int k)\n{\n    if ( l == r ) { Tree[root][k].val = val; return ; }\n    int Mid = l + r >> 1;\n    if ( pos <= Mid ) Modify(lson, l, Mid, pos, val, k);\n    else Modify(rson, Mid + 1, r, pos, val, k);\n    PushUp(root, k);\n}\n\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    scanf(\"%lld\", &n);\n    REP(i, 1, n) scanf(\"%lld\", &a[i]);\n    p[0] = 1; REP(i, 1, n) p[i] = p[i - 1] * Mod;\n    REP(i, 1, n)\n    {\n        int len = min(a[i] - 1, n - a[i]);\n        int s1 = a[i] - len, s2 = n - a[i] - len + 1;\n        int x = Query(1, 1, n, s1, a[i], 0);\n        int y = Query(1, 1, n, s2, n - a[i] + 1, 1);\n        if ( s1 > s2 ) y = y * p[s1 - s2];\n        else x = x * p[s2 - s1];\n        // printf(\"%lld %lld\\n\", x, y);\n        if ( x != y ) { puts(\"YES\"); return 0; }\n        Modify(1, 1, n, a[i], p[a[i]], 0);\n        // printf(\"%lld %lld %lld %lld\\n\", a[i], p[a[i]], n - a[i] + 2, p[n - a[i] + 1]);\n        Modify(1, 1, n, n - a[i] + 1, p[n - a[i] + 1], 1);\n    }\n    puts(\"NO\");\n    return 0;\n}\n```\n\n",
        "postTime": 1567930037,
        "uid": 8618,
        "name": "\u6c34\u5e93\u4e2d\u7684\u6c34\u5e93",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF452F \u3010Permutation\u3011"
    },
    {
        "content": "[$$\\huge\\texttt{\u5728\u672c\u4ebablog\u98df\u7528\u66f4\u4f73}$$](http://dilute.coding.me/2019/02/26/Solutions/Solution-CF452F/)\n\n## \u53c8\u53cc\u53d2\u53d5\u662f\u9898\u5916\u8bdd\n\n\u4eca\u5929\u6a21\u62df\u8003\u662f\u539f\u9898\u5927\u6218\u3002\n\n$T1$\u662f\u8fd9\u9898\u3002\n\n$T2$\u662f\u67d0\u6b21$CF\\ Div1\\ E$\u9898\u3002\n\n$T3$\u53cd\u6b63\u662f\u67d0\u9053\u795e\u4ed9\u9898\u3002\n\n~~\u50cf\u6211\u8fd9\u6837\u7684\u83dc\u9e21\u53ea\u80fd\u6765\u505a\u505a**\u76f8\u5bf9**\u53ef\u505a\u7684T1~~\n\n~~\u867d\u7136\u53ea\u662f\u76f8\u5bf9\u53ef\u505a\u4f46\u662f\u8fd8\u662f\u88ab\u5168\u573a\u5207\u7a7f\u4e86\u554a\u5582~~\n\n~~\u5185\u5fc3OS\uff1a\u8fd9\u4e2a\u4e0d\u8ba2\u6b63\u7684\u7406\u7531\u771f\u7684nice~~\n\n## \u601d\u8def\n\n\u6211\u4eec\u770b\u5230\u9898\u9762\u8981\u6c42\u6c42\u7684\u4e09\u5143\u7ec4\uff0c\u7136\u540e\u778e\u53d8\u5f62\u4e00\u4e0b\n$$a_j - a_i = a_k - a_i$$\n$$a_i + a_k = 2 a_j $$\n$$a_k = 2a_j - a_i$$\n\u8fd9\u6837\u5b50\uff0c\u6211\u4eec\u5f00\u59cb\u8bd5\u56fe\u679a\u4e3e$j$\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u6709\u4e00\u4e2a\u7f8e\u5999\u7684\u6027\u8d28\n\n> \u5728$j$\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u4e00\u4e2a$a_i$\u6709\u5bf9\u5e94\u7684$a_j$\u53ef\u4ee5\u7ec4\u6210\u4e09\u5143\u7ec4\u5f53\u4e14\u4ec5\u5f53\n>\n> - $2a_j - a_i$\u5b58\u5728\uff08\u5e9f\u8bdd\uff09\n> - $2a_j - a_i$\u4e0e$a_j$\u5728$a_i$\u7684\u4e0d\u540c\u4fa7\n\n\uff08\u5982\u679c\u7b2c\u4e8c\u70b9\u770b\u4e0d\u61c2\u53ef\u4ee5\u76f4\u63a5\u770b\u4e0b\u9762\u7684\u8fdb\u4e00\u6b65\u63a8\u5bfc\uff09\n\n\u6211\u4eec\u7528$s_i$\u8868\u793a$i$\u8fd9\u4e2a\u6570\u5728$j$\u5de6\u8fb9\u7684\u4f4d\u7f6e\u6709\u6ca1\u6709\u51fa\u73b0\u8fc7\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u4e24\u70b9\u4e1c\u897f\u7ed9\u5f04\u51fa\u6765\uff0c\u90a3\u4e48\u5c31\u662f\n\n$\\forall\\ 1 \\leq 2a_j - a_i \\leq n, s_{a_i} \\neq s_{2a_j - a_i}$ \n\n\u53d8\u6362\u4e00\u4e0b\uff0c\u53d8\u6210\u4e0d\u80fd\u7ec4\u6210\u4e09\u5143\u7ec4\u7684\u6761\u4ef6\uff0c\u90a3\u5c31\u662f\n\n$\\forall\\ 1 \\leq 2a_j - a_i \\leq n, s_{a_i} = s_{2a_j - a_i}$ \n\n\u8868\u793a\u5728\u56fe\u4e0a\uff0c\u90a3\u5c31\u53ef\u4ee5\u753b\u6210\u8fd9\u6837\u2193\n\n![](http://dilute.coding.me/images/1.png)\n\n\uff08\u5c31\u662f\u7ea2\u8272\u90e8\u5206\u548c\u7eff\u8272\u90e8\u5206\u662f\u5bf9\u79f0\u7684\uff09\n\uff08\u53cd\u6b63\u8fd9\u4e2a\u610f\u601d\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff09\n\n\u597d\uff0c\u7136\u540e\u6211\u4eec\u63a5\u4e0b\u6765\u53ef\u4ee5\u6109\u5feb\u5730\u5bf9$s$\u8fdb\u884c\u54c8\u5e0c\u4e86\u3002\n\n\u6211\u4eec\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u52a8\u6001\u5730\u7ef4\u62a4$s$\u7684\u54c8\u5e0c\u6570\u7ec4\n\n\u73b0\u5728\u7684\u76ee\u6807\u5c31\u662f\uff1a\u8d44\u74f7\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff08\u6b63\u53cd\u90fd\u8981\uff09\n\n\u5b9e\u9645\u4e0a\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\n\n\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u6b63\u53cd\u4e24\u4e2a\u54c8\u5e0c\u503c\n\n\u5c31\u53ef\u4ee5\u8f7b\u677e\u5199\u610f\u5730\u5207\u6389\u6b64\u9898\u3002\n\n\u8fd9\u662f\u6211\u5728\u6a21\u62df\u8003\u65f6\u5019\u5199\u7684\u4ee3\u7801\uff0c\u4e11\u7684\u4e00\u6279\u3002\n\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n#define INF 2147483647\n#define mod 998244353\n#define lc(a) (a << 1)\n#define rc(a) (a << 1 | 1)\n#define add(a, b) ((a) + (b) >= mod ? (a) + (b) - mod : (a) + (b))\n#define minus(a, b) ((a) < (b) ? (a) - (b) + mod : (a) - (b))\n#define mul(a, b) ((a) * (ll)(b) % mod)\n\nint inp(){\n    char c = getchar();\n    while(c < '0' || c > '9')\n        c = getchar();\n    int sum = 0;\n    while(c >= '0' && c <= '9'){\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return sum;\n}\nint a[300010];\nint s[300010];\nint powmod[300010];\nstruct SEG{\n    int l;\n    int r;\n    int sum;\n    int rev;\n\n    SEG operator + (const SEG &b) const { // \u4e3a\u4e86\u65b9\u4fbf\u67e5\u8be2\u7684\u65f6\u5019\u6211\u628apush_up\u7ed9\u76f4\u63a5\u5199\u6210\u8fd9\u79cd\u5f62\u5f0f\u4e86\n        if(l == -1)  // (SEG){-1, -1, -1, -1}  \u4ee3\u8868\u7a7a\u7684\u4e00\u6bb5\n            return b;\n        if(b.l == -1)\n            return (SEG){l, r, sum, rev};\n        return (SEG){l, b.r, add(mul(sum, powmod[b.r - b.l + 1]), b.sum), add(mul(b.rev, powmod[r - l + 1]), rev)};\n    }\n};\nstruct SEG_Tree{\n    SEG t[2400000];\n\n    void push_up(int cur){\n        t[cur] = t[lc(cur)] + t[rc(cur)];\n    }\n\n    void build(int cur, int l, int r){\n        t[cur].l = l;\n        t[cur].r = r;\n        t[cur].sum = t[cur].rev = 0;\n        if(l == r){\n            t[cur].sum = t[cur].rev = 0;\n            return ;\n        }\n        int mid = (l + r) >> 1;\n        build(lc(cur), l, mid);\n        build(rc(cur), mid + 1, r);\n        push_up(cur);\n    }\n\n    void modify(int cur, int pos, int c){\n        if(t[cur].l == t[cur].r){\n            t[cur].sum = t[cur].rev = c;\n            return ;\n        }\n        if(pos <= t[lc(cur)].r)\n            modify(lc(cur), pos, c);\n        else\n            modify(rc(cur), pos, c);\n        push_up(cur);\n    }\n\n    SEG query(int cur, int l, int r){\n        if(t[cur].l > r || t[cur].r < l)\n            return (SEG){-1, -1, -1, -1};\n        // printf(\"[%d, %d], query(%d, %d), {%d, %d}\\n\", t[cur].l, t[cur].r, l, r, t[cur].sum, t[cur].rev);\n        if(t[cur].l >= l && t[cur].r <= r)\n            return t[cur];\n        return query(lc(cur), l, r) + query(rc(cur), l, r);\n    }\n}t;\n\nint main(){\n    int n = inp();\n    for(int i = 1; i <= n; i++)\n        a[i] = inp();\n    powmod[0] = 1;\n    for(int i = 1; i <= n; i++)\n        powmod[i] = (powmod[i - 1] << 1) % mod;\n    t.build(1, 1, n);\n    bool flg = false;\n    for(int i = 1; i <= n; i++){\n        t.modify(1, a[i], 1);\n        // printf(\"--------------------\\na[i] = %d\\n\", a[i]);\n        if((a[i] << 1) - 1 <= n){\n            if(a[i] > 1 && t.query(1, 1, a[i] - 1).sum != t.query(1, a[i] + 1, (a[i] << 1) - 1).rev){\n                flg = true;\n                break;\n            }\n        } else {\n            if(a[i] < n && t.query(1, a[i] + 1, n).rev != t.query(1, (a[i] << 1) - n, a[i] - 1).sum){\n                flg = true;\n                break;\n            }\n        }\n    }\n    if(flg){\n        printf(\"YES\\n\");\n    } else {\n        printf(\"NO\\n\");\n    }\n}\n```\n\n",
        "postTime": 1551191059,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF452F \u3010Permutation\u3011"
    }
]