[
    {
        "content": "$n$ \u6b21\u4ea4\u6362\u540e\uff0c\u5927\u591a\u6570\u6570\u4f4d\u90fd\u6ca1\u6709\u53d1\u751f\u6539\u53d8\uff0c\u53ea\u6709 $2n$ \u4e2a\u53d1\u751f\u6539\u53d8\uff0c\u7528 map \u5c06\u5176\u4f9d\u6b21\u8bb0\u5f55\u3002\n\n\u8fd9\u4e9b\u53d1\u751f\u6539\u53d8\u7684\u4f4d\u88ab\u8bbe\u4e3a\u201c\u7279\u6b8a\u4f4d\u201d\u3002\n\n\u7531\u4e8e\u975e\u7279\u6b8a\u4f4d\u4e0e\u975e\u7279\u6b8a\u4f4d\u4e4b\u95f4\u4e0d\u4f1a\u6709\u9006\u5e8f\u5bf9\u5173\u7cfb\uff0c\u6240\u4ee5\u4e00\u5bf9\u9006\u5e8f\u5bf9\u8981\u4e0d\u7136\u662f\u4e24\u4e2a\u7279\u6b8a\u4f4d\u4e4b\u95f4\uff0c\u8981\u4e0d\u7136\u662f\u4e00\u4e2a\u7279\u6b8a\u4f4d\u548c\u4e00\u4e2a\u975e\u7279\u6b8a\u4f4d\u3002\n\n\u4e24\u4e2a\u7279\u6b8a\u4f4d\u4e4b\u95f4\u7684\u9006\u5e8f\u5bf9\u76f8\u5f53\u597d\u627e\uff0c\u79bb\u6563\u5316\u540e\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\uff0c\u590d\u6742\u5ea6\u4e3a $\\Theta (n \\log_2 n)$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u7279\u6b8a\u4f4d $a_i=j(i\\neq j)$\uff0c\u8981\u627e $a_k=k$ \u7684\u4e2a\u6570\uff0c\u6ee1\u8db3 $i<k<j$ \u6216 $j<k<i$\uff0c\u4e14 $k$ \u4e0d\u80fd\u662f\u7279\u6b8a\u4f4d\u3002\n\n\u56e0\u4e3a $a_i=j$ \u662f\u7279\u6b8a\u4f4d\uff0c\u6240\u4ee5\u7b2c $j$ \u4f4d\u4e5f\u662f\u7279\u6b8a\u4f4d\u3002\u95ee\u9898\u53d8\u6210\u4e86\u6c42 $(i,j)$ \u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u975e\u7279\u6b8a\u4f4d\u3002\u8bbe $i$ \u662f\u7b2c $x$ \u4e2a\u7279\u6b8a\u4f4d\uff0c$j$ \u662f\u7b2c $y$ \u4e2a\u7279\u6b8a\u4f4d\uff0c\u5c31\u5e94\u8be5\u6709 $|i-j-x+y|$ \u4e2a\u7279\u6b8a\u4f4d\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nvoid fileio(const string &s)\n{\n\tfreopen((s+\".in\").c_str(),\"r\",stdin);\n\tfreopen((s+\".out\").c_str(),\"w\",stdout);\n}\ninline int read()\n{\n\tint x=0;\n\tbool flag=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-')\n\t\t\tflag=0;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn (flag?x:~(x-1));\n}\nint n,c,ans,t[400001];\nmap<int,int> mp,cnt;\nint lowbit(int x)\n{\n\treturn x&(-x);\n}\nvoid add(int x)\n{\n\tfor(;x<=2*n;x+=lowbit(x))\n\t\tt[x]+=1;\n}\nint query(int x)\n{\n\tint ans=0;\n\tfor(;x;x-=lowbit(x))\n\t\tans+=t[x];\n\treturn ans;\n}\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tif(!mp[x])\n\t\t\tmp[x]=x;\n\t\tif(!mp[y])\n\t\t\tmp[y]=y;\n\t\tswap(mp[x],mp[y]);\n\t}\n\tfor(auto i:mp)\n\t{\n\t\tint x=i.first;\n\t\tcnt[x]=++c;\n\t}\n\tfor(auto i:mp)\n\t{\n\t\tint x=i.first,y=i.second;\n\t\tans+=abs(x-y-cnt[x]+cnt[y]);\n\t\tans+=cnt[x]-query(cnt[y])-1;\n\t\tadd(cnt[y]);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n``",
        "postTime": 1625059107,
        "uid": 240812,
        "name": "45dino",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF540E \u3010Infinite Inversions\u3011"
    }
]