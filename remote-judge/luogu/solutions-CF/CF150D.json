[
    {
        "content": "## \u524d\u8a00\n\n\u524d\u51e0\u5929\u770b\u7684 ducati \u5927\u4f6c\u7684\u9898\u89e3\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7a81\u7136\u6ca1\u6389\u4e86\u3002\u672c\u7740\u4eba\u4eba\u4e3a\u6211\uff0c\u6211\u4e3a\u4eba\u4eba\uff08\u8ba9\u5176\u4ed6\u4eba\u66f4\u597d\u7684 he \u9898\uff09\uff0c\u7279\u610f\u5199\u7bc7\u9898\u89e3\u3002\n\n## \u9898\u89e3\n\u9996\u5148\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u4e0d\u80fd\u53d6\u7684\u957f\u5ea6\u7684\u6743\u503c\u4e3a $-1$\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8003\u8651\uff0c\u6211\u4eec\u628a\u201c\u4e0d\u80fd\u53d6\u201d\u8fd9\u4e2a\u6761\u4ef6\u8f6c\u5316\u4e3a\"\u53d6\u4e86\u4e00\u5b9a\u6700\u52a3\"\uff0c\u5373\u628a\u6743\u503c\u8d4b\u4e3a $- \\inf$\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd\u5e26\u533a\u95f4\u5220\u9664\u7684\u9898\u76ee\uff0c\u4e00\u822c\u7528\u533a\u95f4 dp \u6765\u8003\u8651\u3002\u5957\u8def\u7684\uff0c\u6211\u4eec\u8bbe $f[l][r]$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u5185\u64cd\u4f5c\u7684\u6700\u5927\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u8f6c\u79fb\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u533a\u95f4\u53d6\u7684\u6700\u540e\u4e00\u4e2a\u56de\u6587\u4e32\u3002\u6ce8\u610f\u4e24\u4e2a\u5b57\u7b26\u5fc5\u987b\u6ee1\u8db3\u4ed6\u4eec\u4e4b\u95f4\u7684\u5b57\u7b26\u5168\u90e8\u88ab\u5220\u6389\u624d\u80fd\u9009\u5165\u540c\u4e00\u4e2a\u56de\u6587\u4e32\u4e2d\u3002\u5373\u6211\u4eec\u9009\u51fa\u7684\u56de\u6587\u4e32\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\uff1a\u53d6\u56de\u6587\u4e32\u4e2d\u5e8f\u53f7\u6700\u5c0f $mn$ \u548c\u6700\u5927\u7684\u4f4d\u7f6e $mx$\uff0c\u6ee1\u8db3\u5220\u6389\u8fd9\u4e2a\u56de\u6587\u4e32\u540e\uff0c\u533a\u95f4 $[mn,mx]$ \u5185\u7684\u5b57\u7b26\u5168\u90e8\u88ab\u5220\u9664\u3002\n\n\u8fd9\u542f\u793a\u6211\u4eec\u518d\u8003\u8651\u8bbe\u4e24\u4e2a\u6570\u7ec4\u8f85\u52a9\u8f6c\u79fb\uff1a $h[l][r]$ \u8868\u793a\u5220\u6389\u533a\u95f4 $[l,r]$ \u7684\u6700\u5927\u8d21\u732e\uff0c$g[i][j][k]$ \u8868\u793a\u5728\u533a\u95f4 $[l,r]$ \u4e2d\uff0c\u5df2\u7ecf\u9009\u51fa\u4e86\u957f\u5ea6\u4e3a $k$ \u7684\u56de\u6587\u4e32\uff0c\u56de\u6587\u4e32\u7684\u4e24\u7aef\u5728 $i,j$ \u7684\u6700\u5927\u8d21\u732e\u3002\n\n\u6ce8\u610f $g[i][j][k]$ \u7684\u8f6c\u79fb\u5927\u4f53\u8fc7\u7a0b\uff1a\n\n* \u5bf9\u4e8e\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u4ece\u4e24\u8fb9\u5411\u4e2d\u95f4\u8f6c\u79fb\u3002\n\n\u7531\u4e8e\u8d77\u59cb\u6761\u4ef6\u4e0e\u679a\u4e3e\u7684\u533a\u95f4 $[l,r]$ \u6709\u5173\uff0c\u6ce8\u610f\u5230\u5149\u662f\u6bcf\u6b21\u8ba1\u7b97 $f$ \u65f6\u90fd\u987b\u6e05\u7a7a $g$ \u6570\u7ec4\uff0c\u590d\u6742\u5ea6\u5c31\u81f3\u5c11\u4e3a $O(n^5)$\u3002\n\n\u65e2\u7136\u5982\u6b64\uff0c\u90a3\u4e48\u8003\u8651\u53cd\u5176\u9053\u800c\u884c\u4e4b\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6211\u4eec\u4ece\u4e2d\u95f4\u5411\u4e24\u8fb9\u8f6c\u79fb\u3002\u5fae\u8c03\u4e00\u4e0b $g$ \u6570\u7ec4\u7684\u5b9a\u4e49\uff1a$g[l][r][k]$ \u8868\u793a\u5728\u533a\u95f4 $[l,r]$ \u4e2d\uff0c\u9009\u51fa\u957f\u5ea6\u4e3a $k$ \u7684\u56de\u6587\u4e32\uff0c\u6ee1\u8db3\u56de\u6587\u4e32\u7684\u4e24\u4e2a\u7aef\u70b9\u5728 $l,r$ \u7684\u6700\u5927\u8d21\u732e\u3002\n\n\u8003\u8651\u8f6c\u79fb\uff0c\u679a\u4e3e\u4e0b\u9762\u4e24\u4e2a\u76f8\u540c\u7684\u5b57\u7b26\uff1a\n\n* $g[l][r][k]= \\max_{i<j,i,j \\in (l,r)}(g[i][j][k]+h[l][i-1]+h[j+1][r])$\n\n\u4f46\u662f\u8fd9\u4e2a\u8f6c\u79fb\u662f $n^5$ \u7684\uff0c\u539f\u56e0\u5728\u4e8e\u4e00\u6b21\u6027\u540c\u65f6\u679a\u4e3e\u4e86\u4e24\u4e2a\u5b57\u7b26\u3002\u4e00\u4e2a\u6bd4\u8f83 naive \u7684\u4f18\u5316\u60f3\u6cd5\u662f\u8bb0\u5f55\u5f53\u524d\u56de\u6587\u4e32\u7684\u672a\u5339\u914d\u5b57\u7b26\u5728 $l/r$ \u4e0a\uff0c\u7136\u540e\u679a\u4e3e\u53e6\u4e00\u4e2a\u5339\u914d\u5b57\u7b26\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff1a\u89c2\u5bdf\u5230\u6211\u4eec\u6c42\u7684\u662f\u6700\u5927\u8d21\u732e\uff0c\u56e0\u6b64\u82e5\u679a\u4e3e\u5230\u7684\u4e0d\u5408\u6cd5\u72b6\u6001\u7684\u8d21\u732e\u5c0f\u4e8e\u7b49\u4e8e\u6700\u5927\u8d21\u732e\uff0c\u8f6c\u79fb\u4f9d\u7136\u662f\u6b63\u786e\u7684\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230 $h[l][r]\\ge \\max_{i\\in (l,r]}(h[l][i]+h[i+1][r])$\u3002\u5373\u5bf9\u4e8e\u56de\u6587\u4e32\u7684\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\uff08\u4f4d\u7f6e\u8bbe\u4e3a $i,j$\uff09\uff0c\u6211\u4eec\u628a $h[i][j]$ \u62c6\u6210 $h[i][k]+h[k+1][j]$ \u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u65b0\u7684\u72b6\u6001\u4e2d\u53ef\u4ee5\u5728\u539f\u6765\u7684\u56de\u6587\u4e32\u7684\u57fa\u7840\u4e0a\u5f80\u5916\u5220\u9664\u4e00\u4e9b\u5b57\u7b26\u3002\n\n\u6211\u4eec\u8bbe $g[l][r][k]$ \u8868\u793a\u5728\u533a\u95f4 $[l,r]$ \u4e2d\uff0c\u9009\u51fa\u957f\u5ea6\u4e3a $k$ \u7684\u56de\u6587\u4e32\uff0c\u6ee1\u8db3\u5728 $[l,r]$ \u5185\uff0c\u9664\u4e86\u56de\u6587\u4e32\u4ee5\u5916\u7684\u5176\u4ed6\u5b57\u7b26\u90fd\u88ab\u5220\u9664\u7684\u6700\u5927\u8d21\u732e\u3002\n\n\u90a3\u4e48\u6709\uff1a\n\n* $g[l][r][k]=[s[l]=s[r]]\\times g[l+1][r-1][k-2]$\n* $g[l][r][k]=\\max_{i\\in [l,r)}(g[l][i][k]+g[i+1][r][0],g[l][i][0]+g[i+1][r][k])$\n\n* $g[l][r][0]=\\max_{k>0}(g[l][r][k]+a[k])$\n\n\u6ce8\u610f\u5230\u5728\u8ba1\u7b97\u56de\u6587\u4e32\u7684\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u7684\u533a\u95f4\u8d21\u732e\u65f6\uff0c\u4e0a\u9762\u7684\u8f6c\u79fb\u4f53\u73b0\u4e3a\uff1a\u5bf9\u4e8e\u8fd9\u4e2a\u533a\u95f4\uff0c\u679a\u4e3e\u5212\u5206\u65b9\u6848\u7684\u6700\u5927\u8d21\u732e\u3002\u8fd9\u4e0e $h[l][r]$($g[l][r][0]$) \u7684\u8f6c\u79fb\u7b49\u4ef7\uff0c\u56e0\u6b64\u662f\u5bf9\u7684\u3002\n\n\u6700\u540e\u6ce8\u610f\u5230\u7b54\u6848\u662f\u82e5\u5e72\u4e2a\u88ab\u5220\u9664\u7684\u533a\u95f4\u7684\u7ec4\u5408\uff0c\u56e0\u6b64 $f$ \u7684\u8ba1\u7b97\u53ef\u4ee5\u642c\u5230\u6700\u540e\u6765\u8fdb\u884c\u3002\u4e14\u53ea\u7528\u8ba1\u7b97 $f[1][n]$ \u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n* \u5b9e\u73b0\u7684\u65f6\u5019\u7528 $f$ \u8868\u793a\u4e0a\u6587\u4e2d\u7684 $g$ \u6570\u7ec4\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=155,inf=0x3f3f3f3f;\nint n,ans;\nint a[N];\nchar s[N];\nint f[N][N][N],dp[N];\nsigned main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]),a[i]=a[i]<0?-inf:a[i];\n    memset(f,0xcf,sizeof(f));\n    scanf(\"%s\",s+1);\n    for(int len=1;len<=n;len++)\n        for(int l=1,r=l+len-1;r<=n;l++,r++)\n        {\n            if(len==1)\n            {\n                f[l][r][0]=a[1];f[l][r][1]=0;\n                f[l+1][l][0]=0;\n                continue;\n            }\n            if(s[l]==s[r])\n                for(int k=2;k<=len;k++)\n                    f[l][r][k]=max(f[l][r][k],f[l+1][r-1][k-2]);\n            for(int k=0;k<=len;k++)\n                for(int i=l;i<r;i++)\n                    f[l][r][k]=max({f[l][r][k],f[l][i][k]+f[i+1][r][0],f[l][i][0]+f[i+1][r][k]});\n            for(int k=1;k<=len;k++)\n                f[l][r][0]=max(f[l][r][0],f[l][r][k]+a[k]);\n        }\n    for(int i=1;i<=n;i++)\n    {\n        dp[i]=max(dp[i],dp[i-1]);\n        for(int j=0;j<i;j++)\n            dp[i]=max(dp[i],dp[j]+f[j+1][i][0]);\n    }\n    printf(\"%d\\n\",dp[n]);\n    return 0;\n}\n```",
        "postTime": 1663812208,
        "uid": 223891,
        "name": "max67",
        "ccfLevel": 0,
        "title": "CF150D Mission Impassable \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](/problem/CF150D)\n\n\u7b80\u5355\u533a\u95f4 dp\u3002\n\n\u8bbe $f_{i,j}$ \u8868\u793a\u5220\u5149 $i\\sim j$ \u7684\u6700\u5927\u6743\u503c\uff0c$g_{i,j,k}$ \u8868\u793a\u628a $i\\sim j$ \u5220\u5230\u53ea\u5269\u4e00\u4e2a\u957f\u4e3a $k$ \u7684\u56de\u6587\u4e32\u7684\u6700\u5927\u6743\u503c\uff0c\u90a3\u4e48\uff1a\n$$f_{i,j}=\\max\\{g_{i,j,k}+a_k,f_{i,p}+f_{p+1,j}\\}$$\n$$g_{i,j,k}=\\max\\{f_{i,p}+g_{p+1,j,k},g_{i,p,k}+f_{p+1,j},[s_i=s_j]g_{i+1,j-1,k-2}\\}$$\n\u8fb9\u754c\u6761\u4ef6\u662f $f_{i,i}=g_{i,i,1}=0,g_{i,i,0}=v_1$\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5 $O(n^4)$ \u8f6c\u79fb\u4e86\u3002\n\n\u4f46\u5b57\u7b26\u4e32\u4e0d\u4e00\u5b9a\u8981\u5220\u5149\uff0c\u4e8e\u662f\u518d\u8bbe $h_{i,j}$ \u8868\u793a\u5220 $i\\sim j$ \u7684**\u4efb\u610f\u591a\u4e2a**\u7684\u6700\u5927\u6743\u503c\uff0c\u6709\uff1a\n$$h_{i,j}=\\max\\{0,f_{i,j},h_{i,p}+h_{q,j}\\}$$\n\u7b54\u6848\u5373\u4e3a $h_{1,n}$\u3002\u540c\u6837\u53ef\u4ee5 $O(n^4)$ \u8ba1\u7b97\u3002\n\n\u867d\u7136\u672c\u9898\u7684 $n$ \u6709 $150$\uff0c\u4f46\u5e38\u6570\u5c0f\u4e14\u8dd1\u4e0d\u6ee1\uff0c\u5f88\u8f7b\u677e\u5c31\u80fd\u8fc7\u3002\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nconstexpr int NINF = -1000114514;\nint n, r, a[159], f[159][159], g[159][159][159], h[159][159]; char s[159];\nint main()\n{\n\tread(n);\n\tFor(i, 1, n) read(a[i]), a[i] = a[i] == -1 ? NINF : a[i];\n\tscanf(\"%s\", s + 1);\n\tFor(i, 1, n) For(j, 1, n) f[i][j] = NINF;\n\tFor(i, 1, n) For(j, 1, n) For(k, 0, n) g[i][j][k] = NINF;\n\tFor(i, 1, n) h[i][i] = max(0, a[1]), f[i][i] = g[i][i][0] = a[1], g[i][i][1] = 0;\n\tFor(i, 0, n) f[i + 1][i] = g[i + 1][i][0] = h[i + 1][i] = 0;\n\tFor(len, 2, n) For(l, 1, n + 1 - len)\n\t{\n\t\tr = l + len - 1;\n\t\tFor(k, 0, len)\n\t\t{\n\t\t\tif ( k > 1 && s[l] == s[r] ) g[l][r][k] = g[l + 1][r - 1][k - 2];\n\t\t\tFor(p, l + 1, r) g[l][r][k] = max(g[l][r][k], f[l][p - 1] + g[p][r][k]);\n\t\t\tFor(p, l, r - 1) g[l][r][k] = max(g[l][r][k], f[p + 1][r] + g[l][p][k]);\n\t\t\tf[l][r] = max(f[l][r], g[l][r][k] + a[k]);\n\t\t}\n\t\tFor(k, l + 1, r) f[l][r] = max(f[l][r], f[l][k - 1] + f[k][r]);\n\t\th[l][r] = max(0, f[l][r]), g[l][r][0] = max(g[l][r][0], f[l][r]);\n\t\tFor(k, l, r) For(p, k + 1, r)\n\t\t\th[l][r] = max(h[l][r], h[l][k] + h[p][r]);\n\t}\n\treturn printf(\"%d\\n\", h[1][n]), 0;\n}\n```",
        "postTime": 1669083779,
        "uid": 127949,
        "name": "cmk666",
        "ccfLevel": 7,
        "title": "CF150D \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f60\u53ef\u4ee5\u5220\u6389\u957f\u5ea6\u4e3a $i$ \u7684\u56de\u6587\u5b50\u4e32\uff0c\u83b7\u5f97 $v_i$ \u7684\u79ef\u5206\uff0c$v_i=-1$ \u8868\u793a\u4e0d\u80fd\u5220\u9664\u957f\u5ea6\u4e3a $i$ \u56de\u6587\u5b50\u4e32\u3002\u5220\u6389\u4e4b\u540e\u524d\u540e\u4f1a\u62fc\u63a5\u8d77\u6765\u3002\n> \n> \u6c42\u6700\u591a\u80fd\u5f97\u5230\u591a\u5c11\u79ef\u5206\u3002$n\\le 150$\u3002\n\n### \u9898\u89e3\n\n\u5220\u9664\u56de\u6587\u5b50\u4e32\uff0c\u6211\u4eec\u60f3\u5230\u533a\u95f4 DP\u3002\u4e0d\u59a8\u8bbe $f_{i,j}$ \u8868\u793a\u5c06\u533a\u95f4 $[i,j]$ \u5168\u90e8\u5220\u5b8c\u7684\u6700\u5927\u79ef\u5206\u3002\n\n\u53d1\u73b0\u56e0\u4e3a\u5220\u6389\u4e4b\u540e\u524d\u540e\u4f1a\u62fc\u63a5\u8d77\u6765\uff0c\u96be\u4ee5\u8bbe\u8ba1\u8f6c\u79fb\u3002\u6211\u4eec\u518d\u8bbe $g_{i,j,k}$ \u8868\u793a\u5c06\u533a\u95f4 $[i,j]$ \u5220\u5230\u5269\u4e0b\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u56de\u6587\u4e32\u7684\u6700\u5927\u79ef\u5206\u3002\u90a3\u4e48\u6211\u4eec\u6709\uff1a\n\n$$f_{i,j}=\\max_k\\{g_{i,j,k}+a_k\\}$$\n$$g_{i,j,k}=\\max([s_i=s_j]g_{i+1,j-1,k-2},\\max_{i\\le p<j}\\{g_{i,p,k}+f_{p+1,j},f_{i,p}+g_{p+1,j,k}\\})$$\n$$g_{i,j,0}=f_{i,j}$$\n\n\u663e\u7136\u8fd9\u6837\u8f6c\u79fb\u5305\u62ec\u4e86\u6240\u6709\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u66b4\u529b $O(n^4)$ DP \u5373\u53ef\u3002\n\n\u6700\u540e\uff0c\u7b54\u6848\u53ef\u4ee5\u770b\u6210\u82e5\u5e72\u4e2a\u4e0d\u76f8\u4ea4\u7684 $f_{i,j}$ \u7684\u548c\u3002\u7528\u4e00\u4e2a\u7b80\u5355\u7684 DP \u53ef\u4ee5 $O(n^2)$ \u6c42\u51fa\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nint n;\nll a[155];\nchar s[155];\nll f[155][155],g[155][155][155];\nll dp[155];\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%lld\",&a[i]);\n    scanf(\"%s\",s+1);\n    memset(f,-0x3f,sizeof(f));\n    memset(g,-0x3f,sizeof(g));\n    for(int i=1;i<=n;i++){\n        g[i][i][1]=0;\n        if(a[1]>=0)f[i][i]=a[1];else f[i][i]=-0x3f3f3f3f3f3f3f3f;\n        g[i][i][0]=f[i][i];\n    }\n    for(int i=1;i<n;i++){\n        if(a[1]>=0)g[i][i+1][1]=a[1],f[i][i+1]=a[1]*2;\n        else g[i][i+1][1]=f[i][i+1]=-0x3f3f3f3f3f3f3f3f;\n        if(s[i]==s[i+1]){\n            g[i][i+1][2]=0;\n            if(a[2]>=0)f[i][i+1]=max(f[i][i+1],a[2]);\n        }\n        g[i][i+1][0]=f[i][i+1];\n    }\n    for(int len=3;len<=n;len++)\n        for(int i=1;i<=n-len+1;i++){\n            int j=i+len-1;\n            f[i][j]=-0x3f3f3f3f3f3f3f3f;\n            for(int k=1;k<=n;k++){\n                if(s[i]==s[j])g[i][j][k]=g[i+1][j-1][k-2];\n                else g[i][j][k]=-0x3f3f3f3f3f3f3f3f;\n                for(int p=i;p<j;p++)g[i][j][k]=max(g[i][j][k],max(g[i][p][k]+f[p+1][j],f[i][p]+g[p+1][j][k]));\n                if(a[k]>=0)f[i][j]=max(f[i][j],g[i][j][k]+a[k]);\n            }\n            g[i][j][0]=f[i][j];\n        }\n    dp[0]=0;\n    for(int i=1;i<=n;i++){\n        dp[i]=dp[i-1];\n        for(int j=1;j<=i;j++)dp[i]=max(dp[i],dp[j-1]+f[j][i]);\n    }\n    printf(\"%lld\\n\",dp[n]);\n    return 0;\n}\n```",
        "postTime": 1663670974,
        "uid": 233462,
        "name": "Umbrella_Leaf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3CF150D Mission Impassable"
    }
]