[
    {
        "content": "\u8fd9\u9053\u9898\u76f8\u5f53\u4e8e\u662f\u8981\u6c42\u4e00\u6761\u4ece\u7b2c $1$ \u5217\u5230\u7b2c $m$ \u5217\u7684\u659c\u8fde\u901a\u8def\uff0c\u5c06\u4ee5\u653e\u4e86\u7684\u683c\u5b50\u4e3a\u7ec8\u70b9\u7684\u8fb9\u6743\u8bbe\u4e3a $0$\uff0c\u6ca1\u653e\u7684\u8bbe\u4e3a $1$\uff0c\u7136\u540e\u6c42\u51fa\u7b2c $1$ \u5217\u5230\u7b2c $m$ \u5217\u7684\u6700\u77ed\u8def\u5373\u53ef\uff0c\u4f7f\u7528 $\\text{01bfs}$\u3002\n\n\u6709\u4e9b\u9898\u89e3\u6ca1\u6709\u8bf4\u660e\uff0c\u5c31\u662f\u81ea\u5df1\u6446\u653e\u7684 $\\text{cactus}$ \u4e2d\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u76f8\u90bb\u7684\uff0c\u56e0\u4e3a\u6700\u540e\u627e\u7684\u659c\u8fde\u901a\u8def\u4e2d\u7684\u6240\u6709\u6446\u653e\u70b9\u6a2a\u7eb5\u5750\u6807\u548c\u7684\u5947\u5076\u6027\u603b\u662f\u76f8\u540c\u7684\u3002\n\n\u5bf9\u4e8e $\\text{01bfs}$\uff0c\u6709\u4e00\u79cd\u5e38\u89c1\u7684\u9519\u8bef\u5c31\u662f\u53ea\u5728\u6bcf\u4e00\u4e2a\u70b9\u7b2c\u4e00\u6b21\u66f4\u65b0\u8ddd\u79bb\u65f6\u5165\u961f\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u6837\u5b50\u662f\u9519\u8bef\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u66f4\u65b0\u4e86\u591a\u6b21\uff0c\u6bcf\u4e00\u6b21\u90fd\u9700\u8981\u5165\u961f\uff0c\u6240\u4ee5\u961f\u5217\u603b\u5143\u7d20\u4f1a\u8fbe\u5230 $O(m)$\uff0c\u7136\u800c\u672c\u9898\u5165\u961f\u4e00\u6b21\u4f3c\u4e4e\u4e5f\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u662f\u5165\u961f\u5934\u8fd8\u662f\u5165\u961f\u5c3e\u4e0e\u524d\u4e00\u4e2a\u70b9\u65e0\u5173\u3002\n\n\u7531\u4e8e\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e2a `pre`\uff0c\u8868\u793a\u67d0\u4e00\u4e2a\u70b9\u5728\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u524d\u9a71\u3002\n\n\u4e5f\u8bb8\u81ea\u5df1\u80fd\u529b\u4e0d\u591f\uff0c\u8c03\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff1a\n```cpp\n#include<icecream>\nusing namespace std;\nconst int N=4e5+5;\nint T,n,m,d[N],f[N],ans;\nvector<vector<int> >G;\nvector<int>F;\nstruct DT{int x,y;}q[N<<3\u8fb9\u6709\u56db\u500d\uff0c\u6240\u4ee5\u5f00\u516b\u500d\u7a7a\u95f4],at,pr[N]\u8bb0\u5f55pre;\nbitset<N>vs;\nint l,r;\nvoid add(int x,int y,int ds,DT pp){\n    if(G[x][y]==-1)return;\n    int z=(x-1)*m+y;\n    if(d[z]<=ds)return;\n    d[z]=ds,pr[z]=pp;\n    q[G[x][y]?--l:++r]={x,y};\n    --l\u8868\u793a\u5165\u961f\u5934\uff0c++r\u8868\u793a\u5165\u961f\u5c3e\u3002\n}\nstring s[N];\nint main(){\n    ios::sync_with_stdio(false);\n    \u5199 CF \u9898\u76ee\u7edf\u4e00\u7528\u5173\u95ed\u540c\u6b65\u6d41+cin+printf\n    cin>>T;\n    while(T--){\n        cin>>n>>m,l=N<<2,r=(N<<2)-1;\n        int i,j,x,y;ans=1e9;\n        G.clear(),G.resize(n+2);\n        for(i=0;i<=n+1;++i)\n            G[i].resize(m+2,0);\n        for(i=1;i<=n;++i){\n            cin>>s[i];\n            for(j=1;j<=m;++j){\n                if(s[i][j-1]=='#'){\n                    G[i][j]=1;\n                    G[i][j-1]=G[i-1][j]=-1;\n                    G[i][j+1]=G[i+1][j]=-1;\n                }d[(i-1)*m+j]=1e9;\n                vs[(i-1)*m+j]=0;\n            }\n        }\n        for(i=1;i<=n;++i)\n            add(i,1,!G[i][1],(DT){-1,-1});\n        for(i=0;i<=n+1;++i)G[i][0]=G[i][m+1]=-1;\n        for(i=1;i<=m;++i)G[0][i]=G[n+1][i]=-1;\n        while(l<=r){\n            at=q[l++];\n            if(vs[(at.x-1)*m+at.y])continue;\n            vs[(at.x-1)*m+at.y]=1;\u4e5f\u53ef\u4ee5\u4e0d\u8bb0\u5f55\uff0c\u4e0d\u5f71\u54cd\u590d\u6742\u5ea6\n            for(int dx:{-1,1})\n                for(int dy:{-1,1})\n                    if(~G[x=at.x+dx][y=at.y+dy])\n                        add(x,y,d[(at.x-1)*m+at.y]+!G[x][y],at);\n        }\n        for(i=1;i<=n;++i)\n            ans=min(ans,d[(i-1)*m+m]);\n        if(ans>n*m){\u5176\u5b9e\u5c31\u662fans\u8d85\u7ea7\u5927\uff0c\u4e5f\u53ef\u4ee5\u53d61e7\n            puts(\"NO\");\n            continue;\n        }puts(\"YES\");\n        for(i=1;i<=n;++i)\n            if(d[(i-1)*m+m]==ans){\n                for(at={i,m};at.x>0&&at.y>0;at=pr[(at.x-1)*m+at.y])\n                    s[at.x][at.y-1]='#';\n                break;\n            }\n        for(i=1;i<=n;++i){\n            s[i].push_back('\\n');\n            fwrite(s[i].c_str(),1,m+1,stdout);\n        }\n    }return 0;\n}\n```",
        "postTime": 1668581144,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "[CF1749E]\u7b80\u5355\u641c\u7d22\u9898"
    },
    {
        "content": "\u770b\u6ca1\u6709\u9898\u89e3\uff0c\u5c31\u60f3\u7740\u6765\u4ea4\u4e00\u53d1\u9898\u89e3\u3002\n\n## Sloution\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4e24\u79cd\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u662f\u6a21\u62df\u51fa\u602a\u7269\u7684\u884c\u52a8\u8def\u7ebf\u7528\u4ed9\u4eba\u638c\u9694\u65ad\uff0c\u4f46\u590d\u6742\u5ea6\u4ee4\u6211\u4e0d\u6562\u5c1d\u8bd5\uff0c\u7b2c\u4e8c\u79cd\u5c31\u662fbfs\u4ed9\u4eba\u638c\u7684\u79cd\u690d\u8def\u7ebf\uff0c\u4e5f\u5c31\u662f\u6211\u63a5\u4e0b\u6765\u4f1a\u8bb2\u7684\u6b63\u89e3\u3002\n\n\u9996\u5148\uff0c\u4ed9\u4eba\u638c\u56db\u8054\u901a\u683c\u5b50\u4e0d\u80fd\u540c\u65f6\u79cd\uff0c\u6240\u4ee5bfs\u7684\u65b9\u5411\u53ea\u80fd\u662f\u659c\u7740\u7684\u56db\u4e2a\u65b9\u5411\uff0c\u7136\u540e\u9898\u76ee\u8981\u6c42\u79cd\u690d\u7684\u4ed9\u4eba\u638c\u8981\u6700\u5c11\uff0c\u6240\u4ee5\u80af\u5b9a\u60f3\u5230\u8fd9\u6761\u9694\u65ad\u4e0a\u65b9\u7684\u4ed9\u4eba\u638c\u8def\u7ebf\u8981\u5c3d\u53ef\u80fd\u7ecf\u8fc7\u539f\u672c\u7684\u4ed9\u4eba\u638c\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5c06\u5230\u4ed9\u4eba\u638c\u683c\u5b50\u7684\u8fb9\u6743\u8bbe\u4e3a $0$\uff0c\u5230\u8981\u79cd\u690d\u4ed9\u4eba\u638c\u7684\u683c\u5b50\u7684\u8fb9\u6743\u8bbe\u4e3a $1$\u3002\u6b64\u65f6\u6211\u4eec\u7684\u4e3b\u89d2\u767b\u573a\u4e86\uff0c\u53cc\u7aef\u961f\u5217BFS\uff0c\u4e13\u95e8\u5904\u7406 $01$ \u8fb9\u6743\u7684\u5229\u5668\uff0c\u7528\u6cd5\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u5c06\u8fb9\u6743\u4e3a $0$ \u7684\u653e\u5165\u961f\u5934\uff0c\u8fb9\u6743\u4e3a $1$ \u7684\u653e\u5165\u961f\u5c3e\uff0c\u601d\u8def\u7ed3\u675f\u3002\n\n\u5efa\u8bae\u7ec3\u4e60\u677f\u5b50\u9898\u3002\n[P4667 [BalticOI 2011 Day1]Switch the Lamp On ](https://www.luogu.com.cn/problem/P4667)\n\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n,m;\nconst int dx[]={0,0,1,-1,1,1,-1,-1};\nconst int dy[]={1,-1,0,0,1,-1,1,-1};\nconst int N=2e5+100;\nstruct xzh{\n    int x,y;\n};\nvector<int>pre[N],dis[N];\nstring a[N];\ndeque<xzh>q;   \nbool check(int x,int y){\n    if(x<0||x>=n||y<0||y>=m)return false;\n    for(int i=0;i<4;i++){\n        int xx=x+dx[i],yy=y+dy[i];\n        if(xx>=0&&xx<n&&yy>=0&&yy<m&&a[xx][yy]=='#')return false;\n    }\n    return true;\n}\nint main(){\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d\",&n,&m);\n        for(int i=0;i<n;i++)cin>>a[i];\n        for(int i=0;i<n;i++)dis[i].clear(),pre[i].clear();\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                dis[i].push_back(2e9);\n                pre[i].push_back(0);\n            }\n        }\n        for(int i=0;i<n;i++){\n            if(a[i][0]=='#')q.push_front({i,0}),dis[i][0]=0;\n            else if(check(i,0))q.push_back({i,0}),dis[i][0]=1;\n        }\n        while(!q.empty()){\n            int x=q.front().x,y=q.front().y;\n            q.pop_front();\n            for(int i=4;i<8;i++){\n                int xx=x+dx[i],yy=y+dy[i]; \n                if(!check(xx,yy))continue;\n                int s=(a[xx][yy]=='.');\n                if(dis[xx][yy]>dis[x][y]+s){\n                    dis[xx][yy]=dis[x][y]+s;\n                    pre[xx][yy]=i;\n                    if(s)q.push_back({xx,yy});\n                    else q.push_front({xx,yy});\n                }\n            }\n        }\n       int min_=2e9,minn;\n        for(int i=0;i<n;i++){\n            if(dis[i][m-1]<min_){\n                min_=dis[i][m-1];minn=i;\n            }\n        }\n        if(min_==2e9){\n            printf(\"NO\\n\");\n            continue;\n        }\n        printf(\"YES\\n\");\n        int x=minn,y=m-1;\n        while(1){\n            a[x][y]='#';\n            if(!pre[x][y])break;\n            int ls=pre[x][y];\n            x-=dx[ls];y-=dy[ls];\n        }\n        for(int i=0;i<n;i++){\n            cout<<a[i];\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1666857398,
        "uid": 327295,
        "name": "GalwayGirl",
        "ccfLevel": 6,
        "title": "CF1749E\u53cc\u7aef\u961f\u5217BFS"
    },
    {
        "content": "\u5f88\u4e0d\u9519\u7684\u4e00\u9053\u56fe\u8bba\u5efa\u6a21\u9898\u3002\n\n## \u601d\u8def\n\n\u672c\u9898\u6700\u91cd\u8981\u7684\u5e94\u8be5\u662f\u5c06\u539f\u9898\u4e2d\u4fee\u5efa\u4ed9\u4eba\u638c\u8f6c\u5316\u6210\u4e00\u6761\u4ece\u5de6\u8fb9\u8d70\u5230\u6700\u53f3\u8fb9\uff0c\u53ea\u5f80\u659c\u65b9\u5411\u8d70\u7684\u8def\u5f84\u3002\n\n\u8003\u8651\u6bcf\u8d70\u4e00\u6b65\u7684\u65f6\u5019\uff0c\u8981\u4e48\u90a3\u4e2a\u4f4d\u7f6e\u662f\u4e00\u4e2a\u4ed9\u4eba\u638c\uff0c\u8981\u4e48\u90a3\u4e2a\u4f4d\u7f6e\u8fd8\u6ca1\u6709\u4ed9\u4eba\u638c\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u7f6e\u4e00\u4e2a\uff0c\u4f46\u662f\u8981\u6c42\u5468\u56f4\uff08\u56db\u8fde\u901a\uff09\u6ca1\u6709\u4ed9\u4eba\u638c\u3002\n\n\u8fd9\u6837\u505a\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u5efa\u8fb9\u8dd1\u5355\u6e90\u6700\u77ed\u8def\uff0c\u4f46\u6211\u4eec\u8fd8\u6709\u66f4\u597d\u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u6211\u4eec\u6bcf\u8d70\u4e00\u6b65\u6700\u591a\u589e\u52a0 $1$\uff0c\u6700\u5c11\u5219\u4e3a $0$\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u4e8e\u8fd9\u4e2a\u56fe\u8dd1 01bfs\uff0c\u6b64\u65f6\u7684\u590d\u6742\u5ea6\u4e3a $O(nm)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\u8bb0\u5f55\u65b9\u6848\u7684\u8bdd\u4e5f\u5e38\u89c4\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long \n#define double long double\nusing namespace std;\nsigned main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tint n,m;\n\t\tcin>>n>>m;\n\t\tchar c[n+2][m+2];\n\t\tint dp[n+1][m+1];\n\t\tint frm[n+1][m+1];\n\t\tint fr2[n+1][m+1];\n\t\tfor(int i=0;i<=n+1;i++) for(int j=0;j<=m+1;j++) c[i][j]='.';\n\t\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++) cin>>c[i][j],dp[i][j]=-1;\n\t\tdeque<pair<int,int>> q;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(c[i][1]=='#'){\n\t\t\t\tdp[i][1]=0;\n\t\t\t\tq.push_front(make_pair(i,1));\n\t\t\t}\n\t\t\telse if(!((c[i-1][1]=='#')+(c[i+1][1]=='#')+(c[i][2]=='#')+(c[i][0]=='#'))){\n\t\t\t\tdp[i][1]=1;\n\t\t\t\tq.push_back(make_pair(i,1));\n\t\t\t}\n\t\t}\n\t\tint to=-1;\n\t\twhile(!q.empty()){\n\t\t\tauto f=q.front();\n\t\t\tq.pop_front();\n\t\t\tint i=f.first,j=f.second;\n\t\t\tif(j==m){\n\t\t\t\tto=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(i>1){\n\t\t\t\tif(c[i-1][j+1]=='#'){\n\t\t\t\t\tif(dp[i-1][j+1]==-1||dp[i-1][j+1]>dp[i][j]){\n\t\t\t\t\t\tdp[i-1][j+1]=dp[i][j];\n\t\t\t\t\t\tfrm[i-1][j+1]=i;\n\t\t\t\t\t\tfr2[i-1][j+1]=j;\n\t\t\t\t\t\tq.push_front(make_pair(i-1,j+1));\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\telse if(!((c[i-2][j+1]=='#')+(c[i][j+1]=='#')+(c[i-1][j+2]=='#')+(c[i-1][j]=='#'))){\n\t\t\t\t\tif(dp[i-1][j+1]==-1||dp[i-1][j+1]>dp[i][j]+1){\n\t\t\t\t\t\tdp[i-1][j+1]=dp[i][j]+1;\n\t\t\t\t\t\tfrm[i-1][j+1]=i;\n\t\t\t\t\t\tfr2[i-1][j+1]=j;\n\t\t\t\t\t\tq.push_back(make_pair(i-1,j+1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i<n){\n\t\t\t\tif(c[i+1][j+1]=='#'){\n\t\t\t\t\tif(dp[i+1][j+1]==-1||dp[i+1][j+1]>dp[i][j]){\n\t\t\t\t\t\tdp[i+1][j+1]=dp[i][j];\n\t\t\t\t\t\tfrm[i+1][j+1]=i;\n\t\t\t\t\t\tfr2[i+1][j+1]=j;\n\t\t\t\t\t\tq.push_front(make_pair(i+1,j+1));\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\telse if(!((c[i+2][j+1]=='#')+(c[i][j+1]=='#')+(c[i+1][j+2]=='#')+(c[i+1][j]=='#'))){\n\t\t\t\t\tif(dp[i+1][j+1]==-1||dp[i+1][j+1]>dp[i][j]+1){\n\t\t\t\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\t\t\t\tfrm[i+1][j+1]=i;\n\t\t\t\t\t\tfr2[i+1][j+1]=j;\n\t\t\t\t\t\tq.push_back(make_pair(i+1,j+1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j>1){\n\t\t\tif(i>1){\n\t\t\t\tif(c[i-1][j-1]=='#'){\n\t\t\t\t\tif(dp[i-1][j-1]==-1||dp[i-1][j-1]>dp[i][j]){\n\t\t\t\t\t\tdp[i-1][j-1]=dp[i][j];\n\t\t\t\t\t\tfrm[i-1][j-1]=i;\n\t\t\t\t\t\tfr2[i-1][j-1]=j;\n\t\t\t\t\t\tq.push_front(make_pair(i-1,j-1));\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\telse if(!((c[i-2][j-1]=='#')+(c[i][j-1]=='#')+(c[i-1][j-2]=='#')+(c[i-1][j]=='#'))){\n\t\t\t\t\tif(dp[i-1][j-1]==-1||dp[i-1][j-1]>dp[i][j]+1){\n\t\t\t\t\t\tdp[i-1][j-1]=dp[i][j]+1;\n\t\t\t\t\t\tfrm[i-1][j-1]=i;\n\t\t\t\t\t\tfr2[i-1][j-1]=j;\n\t\t\t\t\t\tq.push_back(make_pair(i-1,j-1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i<n){\n\t\t\t\tif(c[i+1][j-1]=='#'){\n\t\t\t\t\tif(dp[i+1][j-1]==-1||dp[i+1][j-1]>dp[i][j]){\n\t\t\t\t\t\tdp[i+1][j-1]=dp[i][j];\n\t\t\t\t\t\tfrm[i+1][j-1]=i;\n\t\t\t\t\t\tfr2[i+1][j-1]=j;\n\t\t\t\t\t\tq.push_front(make_pair(i+1,j-1));\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\telse if(!((c[i+2][j-1]=='#')+(c[i][j-1]=='#')+(c[i+1][j-2]=='#')+(c[i+1][j]=='#'))){\n\t\t\t\t\tif(dp[i+1][j-1]==-1||dp[i+1][j-1]>dp[i][j]+1){\n\t\t\t\t\t\tdp[i+1][j-1]=dp[i][j]+1;\n\t\t\t\t\t\tfrm[i+1][j-1]=i;\n\t\t\t\t\t\tfr2[i+1][j-1]=j;\n\t\t\t\t\t\tq.push_back(make_pair(i+1,j-1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(to==-1){\n\t\t\tcout<<\"NO\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tcout<<\"YES\\n\";\n\t\tint X=to,Y=m;\n\t\tc[X][Y]='#';\n\t\twhile(Y!=1){\n\t\t\tint nx=frm[X][Y],ny=fr2[X][Y];\n\t\t\tX=nx,Y=ny;\n\t\t\tc[X][Y]='#';\n\t\t}\n\t\tfor(int i=1;i<=n;i++,cout<<\"\\n\") for(int j=1;j<=m;cout<<c[i][j],j++);\n\t}\n}\n```\n\n\u4ee3\u7801\u53ef\u80fd\u5199\u7684\u6709\u4e9b\u7e41\u7410\uff0c\u4f46\u662f\u76f8\u6bd4\u6709\u4e00\u5b9a\u5b9e\u73b0\u80fd\u529b\u5bf9\u7167\u9898\u89e3\u4e5f\u53ef\u4ee5\u5199\u51fa\u6765\u3002",
        "postTime": 1667449842,
        "uid": 116664,
        "name": "Daniel_lele",
        "ccfLevel": 8,
        "title": "CF1749E \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n\u8bd5\u5728\u5e73\u9762\u4e0a\u79cd\u82e5\u5e72\u4ed9\u4eba\u638c\u4f7f\u5f97\u5e73\u9762\u88ab\u5206\u6210\u4e0a\u4e0b\u4e24\u4e2a\u4e0d\u8fde\u901a\u7684\u90e8\u5206\u3002\n\n\u4efb\u610f\u4e24\u4e2a\u4ed9\u4eba\u638c\u4e0d\u80fd\u56db\u8054\u901a\uff08\u611f\u89c9 idea \u50cf\u4ece mc \u91cc\u9762\u6765\u7684\uff09\u3002\n\n### Sol\n\n\u849f\u84bb\u4e0d\u4f1a deque bfs, \u63d0\u4f9b\u4e00\u79cd bfs+dfs \u7684\u505a\u6cd5\u3002\n\n\u663e\u7136\u6211\u4eec\u8981\u627e\u5230\u4e00\u6761\u4ece\u6700\u5de6\u8fb9\u4e00\u5217\u5230\u6700\u53f3\u8fb9\u4e00\u5217\u7684\u659c\u7740\u8d70\u7684\u8def\u5f84\u3002\n\n\u90a3\u4e48\u8003\u8651 $a_{i,j}$ \u8868\u793a\u4ece\u6700\u5de6\u884c\u5230\u5f53\u524d\u4f4d\u7f6e\u6700\u5c11\u79cd\u51e0\u4e2a\u4ed9\u4eba\u638c\u3002\n\n\u90a3\u4e48\u5982\u679c\u6ca1\u6709\u73b0\u6210\u7684\u4ed9\u4eba\u638c\u8fd9\u662f\u53ef\u4ee5 bfs \u6c42\u7684\u3002\n\n\u8003\u8651\u73b0\u6210\u7684\u4ed9\u4eba\u638c\u7684\u5f71\u54cd\u3002\n\n\u9996\u5148\u662f\u4e0d\u80fd\u8d70\u5230\u73b0\u6210\u7684\u4ed9\u4eba\u638c\u56db\u8054\u901a\u7684\u5730\u65b9\u3002\n\n\u5982\u679c\u5f53\u524d\u8d70\u5230\u4e86\u4e00\u4e2a\u73b0\u6210\u7684\u4ed9\u4eba\u638c\u659c\u8054\u901a\u7684\u5730\u65b9\uff0c\u90a3\u4e48\u548c\u8fd9\u4e2a\u73b0\u6210\u7684\u4ed9\u4eba\u638c\u8054\u901a\u5757\u659c\u76f8\u90bb\u7684\u6240\u6709\u65b9\u683c\u90fd\u53ef\u4ee5\u4e00\u6b65\u5230\u8fbe\uff0c\u800c\u8fd9\u4e00\u90e8\u5206\u53c8\u53ef\u4ee5\u7528 dfs \u89e3\u51b3\u3002\n\n\u6700\u540e\u50a8\u5b58\u65b9\u6848\u5373\u53ef\u3002\n\n### Code\n\n\n[RECORD](https://codeforc.es/contest/1749/submission/178754828)\n\n\u9a6c\u8702\u6bd4\u8f83\u8be1\u5f02\uff0c\u5728\u8fd9\u91cc\u8bf4\u660e\u4e00\u4e0b\u3002\n\n``a`` \u662f\u9898\u76ee\u4e2d\u7684\u610f\u601d\uff0c\u53ea\u4e0d\u8fc7\u8d1f\u503c\u8868\u793a\u6ca1\u8bbf\u95ee\u8fc7\uff0c ``-1`` \u8868\u793a\u4e0d\u80fd\u79cd\uff0c``-2`` \u8868\u793a\u5df2\u7ecf\u79cd\uff0c``-3`` \u8868\u793a\u7a7a\u5730\u3002\n\n``cop`` \u662f ``a`` \u7684\u526f\u672c\uff0c\u5176\u4e2d ``-4`` \u8868\u793a\u9694\u7edd\u5de6\u53f3\u7684\u8def\u5f84\u4e0a\u7684\u4ed9\u4eba\u638c\u3002\n\n``fr`` \u662f\u8bb0\u5f55\u65b9\u6848\u3002\n\n\u8fd9\u4e2a\u9898\u76ee\u4e0d\u5b9a\u957f\u5bbd\u771f\u7684\u5f88\u8ba8\u538c/kk\u3002",
        "postTime": 1667273702,
        "uid": 217300,
        "name": "Error_Eric",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 1749E  Cactus Wall"
    },
    {
        "content": "\u6ce8\u610f\u5230\uff0c\u80fd\u591f\u6210\u529f\u963b\u6b62\u602a\u7269\u7684\u5145\u8981\u6761\u4ef6\u662f\uff0c\u4ed9\u4eba\u638c\u7684\u5206\u5e03\u5408\u6cd5\u4e14\u5b58\u5728\u4e00\u6761\u6bcf\u6b21\u7eb5\u5750\u6807\u53ea\u53d8\u5316 $1$ \u7684\u4ece\u5de6\u5230\u53f3\u7684\u8def\u5f84\u3002\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5efa\u4e00\u4e2a\u6e90\u70b9 $S$ \u548c\u6c47\u70b9 $T$\uff0c$S$ \u5411\u6240\u6709\u6700\u5de6\u8fb9\u7684\u70b9\u8fde\u8fb9\uff0c\u6240\u6709\u6700\u53f3\u8fb9\u7684\u70b9\u5411 $T$ \u8fde\u8fb9\uff0c\u4e2d\u95f4\u6bcf\u4e2a\u70b9\u5411\u79bb\u4ed6\u6a2a\u7eb5\u5750\u6807\u5747\u76f8\u5dee $1$ \u7684\u70b9\u8fde\u8fb9\uff0c\u82e5\u8fb9\u7684\u51fa\u70b9\u539f\u672c\u5c31\u6709\u4ed9\u4eba\u638c\uff0c\u5219\u8fb9\u6743\u4e3a $0$\uff0c\u82e5\u6ca1\u6709\uff0c\u5219\u8fb9\u6743\u4e3a $1$\uff0c\u8fd9\u6837\u7684\u70b9\u548c\u8fde\u51fa\u7684\u8fb9\u7684\u6570\u91cf\u90fd\u662f $O(nm)$ \u7684\uff0c\u76f4\u63a5\u8dd1 dijkstra \u6216 01bfs \u5747\u53ef\u3002\u800c\u65b9\u6848\u7684\u8f93\u51fa\u5c31\u76f8\u5f53\u4e8e\u7b80\u5355\u7684\u8f93\u51fa\u8def\u5f84\u4e86\u3002\n\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch;\n\tdo{\n\t\tch=getchar();\n\t\tif(ch=='-'){\n\t\t\tf=-1;\n\t\t}\n\t}while(!(ch>='0'&&ch<='9'));\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint n,m,t,S,T,dist[400005],head[400005],edgenum,vis[400005],go[4][2]={1,0,0,1,-1,0,0,-1},no[400005],from[400005],ans[400005],g[4][2]={1,1,-1,-1,1,-1,-1,1};\nstruct Edge{\n    int from,to,next,w;\n}edge[4000005];\nvoid add_edge(int from,int to,int w){\n    edge[++edgenum].next=head[from];\n    edge[edgenum].from=from;\n    edge[edgenum].to=to;\n    edge[edgenum].w=w;\n    head[from]=edgenum;\n}\nvoid bfs(){\n    queue<int> p,q;\n    for(int i=0;i<=T;++i){\n        dist[i]=inf;\n        vis[i]=0;\n    }\n    q.push(S);\n    dist[S]=0;\n    while(q.size()||p.size()){\n        int x;\n        if(q.size()){\n            x=q.front();\n            q.pop();\n        }else{\n            x=p.front();\n            p.pop();\n        }\n        if(x==T){\n            return;\n        }\n        if(vis[x]){\n            continue;\n        }\n        vis[x]=1;\n        for(int i=head[x];i;i=edge[i].next){\n            int v=edge[i].to;\n            if(dist[v]>dist[x]+edge[i].w){\n                from[v]=x;\n                dist[v]=dist[x]+edge[i].w;\n                if(edge[i].w){\n                    p.push(v);\n                }else{\n                    q.push(v);\n                }\n            }\n        }\n    }\n}//\u6700\u77ed\u8def\nvoid init(){\n    edgenum=0;\n    for(int i=0;i<=T;++i){\n        from[i]=ans[i]=no[i]=head[i]=0;\n    }\n}//\u6e05\u7a7a\u56fe\nvoid print(int x){\n    x=from[x];\n    if(x==0){\n        return;\n    }\n    ans[x]=1;\n    print(x);\n}//\u8f93\u51fa\u8def\u5f84\nvoid add(int x,int y){\n    if(no[x]||no[y]){\n        return;\n    }\n    if(ans[y]){\n        add_edge(x,y,0);\n    }else{\n        add_edge(x,y,1);\n    }\n}\nsigned main(){\n    t=read();\n    while(t--){\n        init();\n        n=read();\n        m=read();\n        for(int i=1;i<=n;++i){\n            for(int j=1;j<=m;++j){\n                char ch;\n                cin>>ch;\n                if(ch=='#'){\n                    ans[(i-1)*m+j]=1;\n                    for(int k=0;k<4;++k){\n                        int x=i+go[k][0],y=j+go[k][1];\n                        if(x<1||x>n||y<1||y>m){\n                            continue;\n                        }\n                        no[(x-1)*m+y]=1;\n                    }\n                }\n            }\n        }\n        bool flag=0;\n        T=n*m+1;\n        for(int i=1;i<=n;++i){\n            int num=(i-1)*m+1;\n            add(S,num);\n        }\n        for(int i=1;i<=n;++i){\n            for(int j=1;j<=m;++j){\n                int num=(i-1)*m+j;\n                if(ans[num]&&no[num]){\n                    flag=1;\n                    break;\n                }\n                for(int k=0;k<4;++k){   \n                    int x=i+g[k][0],y=j+g[k][1];\n                    if(x>n||x<1||y>m||y<1){\n                        continue;\n                    }\n                    int num2=(x-1)*m+y;\n                    add(num,num2);\n                }\n            }\n        }\n        if(flag){\n            printf(\"NO\\n\");\n            continue;\n        }\n        for(int i=1;i<=n;++i){\n            add_edge(i*m,T,0);\n        }//\u7e41\u7410\u7684\u5efa\u56fe\n        bfs();\n        if(dist[T]==inf){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n            print(T);\n            for(int i=1;i<=n;++i){\n                for(int j=1;j<=m;++j){\n                    if(ans[(i-1)*m+j]){\n                        printf(\"#\");\n                    }else{\n                        printf(\".\");\n                    }\n                }\n                printf(\"\\n\");\n            }\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1668484247,
        "uid": 360977,
        "name": "541forever",
        "ccfLevel": 0,
        "title": "CF1749E"
    },
    {
        "content": "\u9898\u610f\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u6761\u4ece\u7b2c\u4e00\u5217\u5f00\u59cb\u5230\u6700\u540e\u4e00\u5217\u7ed3\u675f\u7684\u201c\u659c\u8054\u901a\u201d\u5408\u6cd5\u8def\u5f84\u3002\u56e0\u4e3a\u4fdd\u8bc1\u4e86\u662f\u201c\u659c\u8054\u901a\u201d\uff0c\u6240\u4ee5\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u4e0d\u53ef\u80fd\u81ea\u76f8\u77db\u76fe\uff0c\u8def\u5f84\u4e0a\u7684\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u76f8\u90bb\uff0c\u6240\u4ee5\u53ea\u8981\u4e0d\u4e0e\u539f\u6709\u4ed9\u4eba\u638c\u51b2\u7a81\u5c31\u662f\u5408\u6cd5\u7684\u3002\n\n\u8fd9\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4ece\u7b2c\u4e00\u5217\u5230\u6700\u540e\u4e00\u5217\u7684\u6700\u77ed\u8def\uff0c\u8d70\u5230\u539f\u6709\u4ed9\u4eba\u638c\u4e0a\u7684\u8fb9\u6743\u662f $0$ \uff0c\u8d70\u5230\u7a7a\u5730\u4e0a\u7684\u8fb9\u6743\u662f $1$\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $\\texttt{dijkstra}$ \u6c42\u89e3\uff0c\u4ee4 $nm=N$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N\\log N)$\u3002\n\n\u6709\u6ca1\u6709\u66f4\u597d\u7684\u6c42\u8fd9\u4e2a\u6700\u77ed\u8def\u7684\u529e\u6cd5\uff1f\u53d1\u73b0\u8fb9\u6743\u90fd\u662f $0/1$ \u6240\u4ee5\u53ef\u4ee5\u7528\u53cc\u7aef\u961f\u5217 $\\texttt{bfs}$\uff08\u5b9e\u9645\u4e0a\u5c31\u662f $\\texttt{dijkstra}$ \u53bb\u6389\u4e86\u4f18\u5148\u961f\u5217\u7684 $\\log$\uff08\uff1f\uff09\uff09\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N)$\uff08\u4f46\u662f\u7531\u4e8e\u672c\u4eba\u5f53\u65f6\u50bb\u4e86\u662f\u7528 `map` \u6765\u7ef4\u62a4\u70b9\u7684\u6240\u4ee5 $\\log$ \u4f9d\u7136\u5b58\u5728\uff0c\u53ef\u4ee5\u6620\u5c04\u6210\u4e00\u7ef4\u7684\u70b9\u53bb\u6389\u8fd9\u4e2a $\\log$\uff09\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/1749/submission/180257425)",
        "postTime": 1668049254,
        "uid": 115271,
        "name": "CENRUIYANG",
        "ccfLevel": 0,
        "title": "CF1749E Cactus Wall \u9898\u89e3"
    }
]