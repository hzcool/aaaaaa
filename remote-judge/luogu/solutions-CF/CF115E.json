[
    {
        "content": "\u770b\u5b8c\u9898\u540e\uff0c\u4f60\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u53ef\u80fd\u662f\u8003\u8651\u6bcf\u573a\u6bd4\u8d5b\u662f\u5426\u8fdb\u884c\uff0c\u5e76\u8ba1\u7b97\u76f8\u5e94\u7684\u8def\u8d39\u3002  \n\u4f46\u662f\uff0c\u5982\u679c\u4e24\u6b21\u6bd4\u8d5b\u7684\u8def\u7ebf\u91cd\u5408\uff0c\u8def\u8d39\u5c31\u53ea\u7528\u652f\u4ed8\u4e00\u6b21\u3002\u7531\u6b64\u5c31\u4ea7\u751f\u4e86\u540e\u6548\u6027\uff0c\u5bf9\u6211\u4eec\u7684DP\u9020\u6210\u4e86\u56f0\u96be\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u60f3\uff1a\u8003\u8651\u6bcf\u6761\u8def\u662f\u5426\u652f\u4ed8\u8def\u8d39\uff08\u4fee\u8def\uff09\uff0c\u5e76\u7b97\u51fa\u6240\u6709\u53ef\u4ee5\u8fdb\u884c\u7684\u6bd4\u8d5b\u8d5a\u5230\u7684\u94b1\u3002  \n\u8bbe $f[i]$ \u8868\u793a\u524d $i$ \u6761\u8def\u4e2d\u4fee\u590d\u82e5\u5e72\u6761\u8def\u540e\u53ef\u4ee5\u8d5a\u5230\u7684\u6700\u591a\u7684\u94b1\u3002  \n\u8f6c\u79fb\u65b9\u7a0b\uff1a  \n- $f[i]=f[i-1]$\uff0c\u5373**\u4e0d\u4fee**\u7b2c $i$ \u6761\u8def\u3002\n- $f[i]=\\max\\limits_{0\\le j <i} \\{f[j]+\\operatorname{val}(j+1,i)-\\operatorname{cost}(j+1,i)\\}$\uff0c\u5c06\u533a\u95f4 $[j+1,i]$ \u4e2d\u7684\u8def\u90fd\u4fee\u597d\u3002\u5176\u4e2d $\\operatorname{cost}(j+1,i)$ \u8868\u793a\u4fee\u597d\u533a\u95f4\u4e2d\u6240\u6709\u8def\u6240\u8981\u82b1\u7684\u94b1\uff1b$\\operatorname{val}(j+1,i)$ \u8868\u793a\u533a\u95f4\u4e2d\u7684\u8def\u90fd\u4fee\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3e\u884c\u6bd4\u8d5b\u53ef\u4ee5\u8d5a\u5230\u7684\u94b1\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u6765\u4f18\u5316\uff0c\u7b2c $j$ \u4e2a\u4f4d\u7f6e $(0 \\le j \\le n)$ \u7684 $c[j]$ \u50a8\u5b58 $f[j]+\\operatorname{val}(j+1,i)-\\operatorname{cost}(j+1,i)$  \n\u6bcf\u6b21\u679a\u4e3e\u5230\u4e00\u4e2a\u65b0\u7684 $i$ \u65f6\uff1a\n1. \u5c06 $c[0\\dots i-1]$ \u51cf\u53bb $a[i]$\uff08\u4fee\u8def\u7684\u4ef7\u94b1\uff09\uff0c\u56e0\u4e3a\u90fd\u8981\u591a\u4fee\u4e00\u6761\u8def\u3002\n2. \u5bf9\u4e8e\u6bcf\u4e2a\u53f3\u7aef\u70b9 $r=i$ \u7684\u6bd4\u8d5b $(l,r,v)$\uff0c\u5c06 $c[0\\dots l-1]$ \u90fd\u52a0\u4e0a $v$\u3002\u56e0\u4e3a\u5728\u8fd9\u4e9b\u72b6\u6001\u4e2d\uff0c$[l,r]$ \u533a\u95f4\u7684\u8def\u90fd\u4fee\u597d\u4e86\uff08\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8d5b\uff09\u3002\n3. \u66f4\u65b0\u5f53\u524d\u72b6\u6001\uff1a$f[i]=\\max(f[i-1],\\max\\limits_{0\\le j < i}\\{c[j]\\})$\u3002\n4. \u6700\u540e\uff0c\u66f4\u65b0\u7ebf\u6bb5\u6811\u4e2d\u7684 $c[i]$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$\\operatorname{O}(n\\log n)$\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst long long Maxn=200000+10,inf=(1ll<<60);\nconst long long Maxm=Maxn<<2;\nstruct node{\n\tlong long p,v;\n\tnode(long long x,long long y)\n\t{\n\t\tp=x,v=y;\n\t}\n};\nlong long maxv[Maxm],add[Maxm];\nlong long a[Maxn],f[Maxn];\nvector <node> c[Maxn];\nlong long n,m;\ninline long long read()\n{\n\tlong long s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\ninline void check(long long &x,long long y)\n{\n\tif(y>x)x=y;\n}\ninline void push_up(long long k)\n{\n\tmaxv[k]=max(maxv[k<<1],maxv[k<<1|1]);\n}\ninline void upd(long long k,long long v)\n{\n\tmaxv[k]+=v;\n\tadd[k]+=v;\n}\ninline void push_down(long long k)\n{\n\tif(!add[k])return;\n\tupd(k<<1,add[k]);\n\tupd(k<<1|1,add[k]);\n\tadd[k]=0;\n}\nvoid modify(long long k,long long l,long long r,long long x,long long y,long long v)\n{\n\tif(x<=l && r<=y)return upd(k,v);\n\tpush_down(k);\n\tlong long mid=(l+r)>>1;\n\tif(x<=mid)modify(k<<1,l,mid,x,y,v);\n\tif(mid<y)modify(k<<1|1,mid+1,r,x,y,v);\n\tpush_up(k);\n}\nlong long query(long long k,long long l,long long r,long long x,long long y)\n{\n\tif(x<=l && r<=y)return maxv[k];\n\tpush_down(k);\n\tlong long mid=(l+r)>>1,ret=-inf;\n\tif(x<=mid)ret=query(k<<1,l,mid,x,y);\n\tif(mid<y)check(ret,query(k<<1|1,mid+1,r,x,y));\n\treturn ret;\n}\nvoid modify_val(long long k,long long l,long long r,long long pos,long long v)\n{\n\tif(l==r)\n\t{\n\t\tadd[k]=0,maxv[k]=v;\n\t\treturn;\n\t}\n\tpush_down(k);\n\tlong long mid=(l+r)>>1;\n\tif(pos<=mid)modify_val(k<<1,l,mid,pos,v);\n\telse modify_val(k<<1|1,mid+1,r,pos,v);\n\tpush_up(k);\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(long long i=1;i<=n;++i)\n\ta[i]=read();\n\twhile(m--)\n\t{\n\t\tlong long x=read(),y=read(),v=read();\n\t\tc[y].push_back(node(x,v));\n\t}\n\tfor(long long i=1;i<=n;++i)\n\t{\n\t\tmodify(1,0,n,0,i-1,-a[i]);\n\t\tfor(long long j=0;j<c[i].size();++j)\n\t\t{\n\t\t\tlong long p=c[i][j].p,v=c[i][j].v;\n\t\t\tmodify(1,0,n,0,p-1,v);\n\t\t}\n\t\tf[i]=max(query(1,0,n,0,i-1),f[i-1]);\n\t\tmodify_val(1,0,n,i,f[i]);\n\t}\n\tprintf(\"%lld\\n\",f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1597028456,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF115E \u3010Linear Kingdom Races\u3011"
    },
    {
        "content": "Update 2020-07-15 \u665a:  \n\u540c\u5b66zly\u6307\u51fa\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u8f83\u4e25\u91cd\uff0c\u66f4\u6b63\u4e00\u6b21\u3002\u5728\u516c\u5f0f\u4e2d\u5ffd\u7565\u4e86\u5f53$i=j$\u65f6$l=r=i$\u7684\u8d5b\u4e8b\u7684\u6536\u76ca\u3002\n\n---\n\n\u8fd9\u662f\u4e00\u9053 \u7ebf\u6bb5\u6811\u4f18\u5316DP \u7684\u6a21\u677f\u9898\u3002\n\n\u6211\u8ddf\u7b2c\u4e00\u7bc7\u9898\u89e3\u7684\u601d\u8def\u76f8\u53cd\uff0c\u5b9a\u4e49 $ f[i][j] $ \u8868\u793a\u8003\u8651\u5230\u7b2ci\u4e2a\u9053\u8def\uff0c$[j,i]$\u5168\u90fd\u9009\u62e9\u7684\u6700\u5927\u6536\u76ca\u3002$Ans$\u8868\u793a\u8003\u8651\u5230$i$\u65f6\u7d2f\u8ba1\u7684\u6700\u5927\u6536\u76ca\u3002\n\n\u8003\u8651\u5982\u4f55\u4ece $ f[i-1][?] $ \u8f6c\u79fb\u5230 $ f[i][j] $\u3002\n\u5bf9\u4e8e $j < i$ \uff0c\u65b0\u589e\u4e86\u9053\u8def$i$\u7684\u4ee3\u4ef7 $cost_i$\uff0c\u548c\u53f3\u7aef\u70b9 $r=i$ \uff0c\u5e76\u4e14\u80fd\u88ab\u533a\u95f4$[j,i]$\u8986\u76d6\u7684\u8d5b\u4e8b\u7684\u6536\u76ca\u7684\u548c\u3002 \n$$\nf[i][j]=f[i-1][j]-cost_i +\\sum\\limits_{r=i,l\\leq j}p\n$$\n\u5bf9\u4e8e $j=i$\uff0c\n$$\nf[i][i] = \\max_{0\\leq k \\leq p\\leq i-1}\\{f[p][k]\\}-cost_i=Ans-cost_i+\\sum_{l=r=i}p\n$$\n\n\u5982\u4f55\u4f18\u5316\u5230\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u590d\u6742\u5ea6\u5462\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u65b0\u8003\u8651\u4e00\u4e2a\u9053\u8def\u65f6\uff0c\n\u533a\u95f4$[1,i]$\u90fd\u76f8\u5f53\u4e8e\u5728$f[i-1][\\cdots]$\u7684\u57fa\u7840\u4e0a\u51cf\u53bb\u540c\u4e00\u4e2a\u503c$cost_i$\uff1b\n\u5bf9\u6bcf\u4e2a\u53f3\u7aef\u70b9\u4e3a$i$ \u7684\u6bd4\u8d5b\uff0c\u5728\u8fd9\u4e2a\u65f6\u5019\u6709\u8d21\u732e\uff0c\u533a\u95f4 $[1,l_b]$ \u52a0\u4e0a $p_b$\uff08\u5728$f[i-1][\\cdots]$\u7684\u57fa\u7840\u4e0a\uff09\uff0c\u5bf9$f[i][i]$\uff0c\u53ef\u4ee5\u770b\u505a\u8d4b\u503c$Ans$\uff08\u533a\u95f4\u51cf\u65f6\u51cf\u53bb$cost_i$\uff09\u3002\n\n\u5982\u679c\u8003\u8651\u6eda\u52a8\u6570\u7ec4\uff0c\u53d1\u73b0\u5176\u5b9e\u4e0a\u8ff0\u8f6c\u79fb\u662f\u533a\u95f4\u52a0\uff0c\n\u7ef4\u62a4$Ans$\u7684\u8fc7\u7a0b\u662f\u533a\u95f4\u6c42\u6700\u503c\u3002\n\n\u4e8e\u662f\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n\u6700\u540e\u4e00\u4e2a\u5c0f\u95ee\u9898\uff0c\u5982\u4f55\u7ef4\u62a4\u53f3\u7aef\u70b9\u5728$i$\u7684\u6240\u6709\u8d5b\u4e8b\u5462\uff1f\u6211\u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u4e2a\u662f\u7528\u94fe\u8868\uff08\u5c31\u662f\u90bb\u63a5\u8868\uff09\uff0c\u4e00\u4e2a\u662f\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u540e\u626b\u63cf\uff0c\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\u5427\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include <cstdio>\ntypedef long long ll;\nconst int maxn = 200003;\nint read() {\n    int x = 0, c = getchar();\n    while (c < '0' && c > '9') c = getchar();\n    while ('0' <= c && c <= '9') { x = x * 10 + c - '0'; c = getchar(); }\n    return x;\n}\nint n = 0, m = 0;\nint head[maxn], left[maxn], nxt[maxn], cnt = 0;\nll p[maxn], w[maxn];\nvoid insert(int R, int L,int v) {\n    nxt[++cnt] = head[R];\n    head[R] = cnt;\n    left[cnt] = L;\n    p[cnt] = v;\n}\nll ma[maxn<<2], lazy[maxn<<2];\ninline ll max(ll a, ll b) { return a<b?b:a; }\ninline void pushDown(int p) {\n    ma[p << 1] += lazy[p];    \n    ma[p << 1 | 1] += lazy[p];\n    lazy[p << 1] += lazy[p];\n    lazy[p << 1 | 1] += lazy[p];\n    lazy[p] = 0;\n}\ninline void pushUp(int p) {\n    ma[p] = max(ma[p<<1], ma[p<<1|1]);\n}\nvoid plus(int p,int L,int R,int l,int r, ll v) {\n    if(l <= L && R <= r) {\n        ma[p]+=v;\n        lazy[p]+=v;\n        return;\n    }\n    pushDown(p);\n    int mid = (L+R)>>1;\n    if(l <=mid) plus(p<<1,L,mid, l,r,v);\n    if(r>mid) plus(p<<1|1,mid+1,R,l,r,v);\n    pushUp(p);\n}\nint main() {\n    n = read(); m = read();\n    for (int i = 1;i<=n;++i) w[i] = read();\n    int L = 0, R = 0, P = 0;\n    for(int i=1;i<=m;++i) {\n        L=read(); R=read(); P=read();\n        insert(R,L,P);\n    }\n    ll ans = 0;\n    for(int i = 1;i<=n;++i) {\n        plus(1,1,n,i,i,ans);\n        plus(1,1,n,1,i,-w[i]);\n        for(int j = head[i];j;j=nxt[j])\n            plus(1,1,n,1,left[j], p[j]);\n        ans = max(ans,ma[1]);\n    }\n    printf(\"%lld\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1594784416,
        "uid": 128771,
        "name": "\u738b\u9cb2\u9e4f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF115E \u3010Linear Kingdom Races\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\t\u53c8\u63d0\u4f9b\u4e86\u4e00\u7bc7\u7ffb\u8bd1\uff0c\u611f\u89c9\u795e\u6e05\u6c14\u723d\u3002\n## [\u9898\u610f](https://www.luogu.org/problemnew/show/CF115E)\n## \u9898\u76ee\u63cf\u8ff0\n\u4f60\u662f\u4e00\u4e2a\u8d5b\u8f66\u6bd4\u8d5b\u7684\u7ec4\u7ec7\u8005\uff0c\u60f3\u5728\u7ebf\u6027\u738b\u56fd\u4e2d\u5b89\u6392\u4e00\u4e9b\u6bd4\u8d5b\u3002\n\n\u7ebf\u6027\u738b\u56fd\u6709n\u6761\u8fde\u7eed\u7684\u4ece\u5de6\u5230\u53f3\u7684\u9053\u8def\u3002\u9053\u8def\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7f16\u53f7\u4e3a\u4ece1\u5230n\uff0c\u56e0\u6b64\u9053\u8def\u6309\u7167\u5347\u5e8f\u6392\u5217\u3002\u5728\u8fd9\u4e9b\u9053\u8def\u4e0a\u53ef\u80fd\u4f1a\u6709\u51e0\u573a\u6bd4\u8d5b\uff0c\u6bcf\u4e00\u573a\u6bd4\u8d5b\u90fd\u5c06\u4f7f\u7528\u8fd9\u4e9b\u9053\u8def\u7684\u67d0\u4e2a\u8fde\u7eed\u7684\u5b50\u5e8f\u5217\u3002\u800c\u4e14\uff0c\u5982\u679c\u67d0\u573a\u6bd4\u8d5b\u4e3e\u884c\u4e86\uff0c\u4f60\u5c06\u83b7\u5f97\u4e00\u5b9a\u6570\u989d\u7684\u91d1\u94b1\u3002\u6ca1\u6709\u6bd4\u8d5b\u5728\u65f6\u95f4\u4e0a\u91cd\u53e0\uff0c\u6240\u4ee5\u6bcf\u4e00\u6bb5\u9053\u8def\u53ef\u4ee5\u5728\u591a\u4e2a\u6bd4\u8d5b\u4e2d\u4f7f\u7528\u3002\n\n\u4e0d\u5e78\u7684\u662f\uff0c**\u6240\u6709\u9053\u8def**\u7684\u72b6\u51b5\u90fd\u4e0d\u4f73\uff0c\u9700\u8981\u4fee\u7406\u3002\u6bcf\u6761\u8def\u90fd\u6709\u4e0e\u4e4b\u76f8\u5173\u7684\u7ef4\u4fee\u8d39\u7528\uff0c\u4f60\u9700\u8981\u652f\u4ed8\u8fd9\u7b14\u8d39\u7528\u6765\u4fee\u7406\u9053\u8def\u3002\u53ea\u6709\u5728\u67d0\u573a\u6bd4\u8d5b\u4e2d\u9700\u8981\u4f7f\u7528\u7684\u6240\u6709\u9053\u8def**\u90fd\u8fdb\u884c\u4e86\u4fee\u590d**\uff0c\u624d\u80fd\u8fdb\u884c\u6bd4\u8d5b\u3002\u4f60\u7684\u4efb\u52a1\u662f\u4fee\u590d\u9053\u8def\u5e76\u4f7f\u4f60\u7684\u5229\u6da6\u6700\u5927\u5316\u3002\u4f60\u7684\u5229\u6da6\u88ab\u5b9a\u4e49\u4e3a\u4f60\u4ece\u6bd4\u8d5b\u4e2d\u83b7\u5f97\u7684\u603b\u91d1\u989d\u51cf\u53bb\u4f60\u82b1\u5728\u4fee\u7406\u9053\u8def\u4e0a\u7684\u94b1\u3002**\u8bf7\u6ce8\u610f\uff0c\u60a8\u53ef\u4ee5\u51b3\u5b9a\u4e0d\u4fee\u4efb\u4f55\u9053\u8def\uff0c\u5e76\u83b7\u5f97\u5229\u6da60\u3002**\n\n\u8f93\u51fa\u4f60\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u3002\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n### \u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u5305\u62ec\u4e24\u4e2a\u6574\u6570n\u548cm$(1 \\leq n,m \\leq 2\\cdot 10^5)$\uff0c\u5206\u522b\u8868\u793a\u9053\u8def\u7684\u6570\u91cf\u548c\u6bd4\u8d5b\u7684\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u8fd9\u6761\u9053\u8def\u4fee\u590d\u9700\u8981\u7684\u4ee3\u4ef7\u3002\n\n\u518d\u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c\u5305\u62ec\u4e09\u4e2a\u6574\u6570$l_b,u_b,p(1 \\leq l_b,u_b \\leq n,1 \\leq p \\leq 10^9)$\uff0c\u8868\u793a\u7b2cb\u573a\u6bd4\u8d5b\u9700\u8981\u4f7f\u7528\u9053\u8def$l_b,u_b$\uff0c\u4f60\u4f1a\u83b7\u5f97\u6536\u76cap\u3002\n### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4f60\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u3002\n\nP.S.\u8bf7\u4e0d\u8981\u4f7f\u7528%lld\u5728C++\u4e2d\u8bfb\u519964\u4f4d\u6574\u6570\u3002\u63a8\u8350\u4f7f\u7528cin\u548ccout\u6d41\uff08\u4e5f\u53ef\u4ee5\u4f7f\u7528%I64d\uff09\u3002\n## \u8bf4\u660e\n\u5728\u7b2c\u4e00\u4e2a\u6837\u4f8b\u4e2d\uff0c\u6700\u4f18\u89e3\u662f\u4fee\u590d1\u30012\u30013\u548c7\u3002\u4f60\u5c06\u4f1a\u5728\u7b2c1\u30012\u30014\u4e09\u573a\u6bd4\u8d5b\u4e2d\u83b7\u5f9715\u7684\u6536\u76ca\u3002\u9053\u8def\u4fee\u7406\u8d39\u7528\u662f11\uff0c\u56e0\u6b64\u4f60\u7684\u5229\u6da6\u662f4\u3002\n## \u9898\u89e3\n\t\u8fd9\u662f\u4e00\u9053DP\u52a8\u6001\u89c4\u5212\u9898+\u7ebf\u6bb5\u6811\u4f18\u5316\u3002\n    \u9996\u5148\uff0c\u8003\u8651\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684DP\u3002\n    \u5148\u5c06\u6240\u6709\u6bd4\u8d5b\u7684\u5e8f\u5217\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n    \u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4f\uff0cf[i][j]\u8868\u793a\u524di\u6bb5\u9053\u8def\u4e2d\uff0c\u6700\u53f3\u8fb9\u6ca1\u6709\u4fee\u590d\u7684\u4f4d\u7f6e\u662fj\uff0c\u8fd9\u6837\u7684\u6700\u5927\u6536\u76ca\u662ff[i][j]\u3002\n    \u6211\u4eec\u8003\u8651\u662f\u5426\u5bf9\u8fd9\u7b2ci\u6bb5\u9053\u8def\u8fdb\u884c\u4fee\u590d\u3002\n    \u5982\u679c\u4e0d\u4fee\u590d\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u4ed8\u51fa\u4ee3\u4ef7\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u4e2d\uff0c\u6700\u53f3\u8fb9\u6ca1\u6709\u4fee\u590d\u7684\u4f4d\u7f6e\u5c31\u662fi\u4e86\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u8f6c\u79fbf[i][i]\u3002\u679a\u4e3ej(0<=j<=i)\uff0cf[i][i]=max(f[i][i],f[i-1][j])\u3002\n    \u5982\u679c\u4fee\u590d\uff0c\u90a3\u4e48\u6240\u6709\u4ee5i\u4e3a\u53f3\u7aef\u70b9\u7684\u6bd4\u8d5b\u90fd\u53ef\u4ee5\u83b7\u5f97\u6536\u76ca\u3002\u56e0\u6b64\u679a\u4e3ej(0<=j<li)\uff0cf[i][j]=f[i-1][j]+p\uff0c\u4e0d\u8fc7i\u4e4b\u524d\u7684\u6240\u6709\u7684\u90fd\u9700\u8981\u4ed8\u51fa\u4ee3\u4ef7\uff0c\u56e0\u6b64\u679a\u4e3ej(0<=j<i)\uff0cf[i][j]=f[i-1][j]-cost[i]\uff0ccost\u8868\u793a\u4ee3\u4ef7\u3002\n    \u4f46\u662f\uff0c\u8fd9\u6837\u80af\u5b9a\u592a\u6162\u4e86\uff0c\u662fO(n^2)\u7684\uff0c\u80af\u5b9a\u4f1aTLE\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u3002\n    \u6ce8\u610f\u5230\u6211\u4eec\u53ea\u9700\u8981\u6c42\u533a\u95f4\u6700\u5927\u503c\u548c\u5e8f\u5217\u548c\uff0c\u56e0\u6b64\u7528\u7ebf\u6bb5\u6811\u5c31\u591f\u4e86\u3002\n    \u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u9700\u8981\u201c\u4e0b\u653elazy_tag\uff08\u61d2\u6807\u8bb0\uff09\u201d\u201c\u533a\u95f4\u52a0\u201d\u201c\u533a\u95f4\u6700\u5927\u503c\u201d\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u5c31\u591f\u4e86\u3002\n    \u81f3\u4e8e\u5c06\u6240\u6709\u6bd4\u8d5b\u7684\u5e8f\u5217\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u4e0d\u5b9a\u957f\u6570\u7ec4a\uff0ca[r]\u6bcf\u6b21\u589e\u52a0\u4e00\u4e2apair<ll,ll>(l,x)\uff0c\u5c31\u514d\u53bb\u4e86\u6392\u5e8f\uff08\u4e0d\u4f1a\u7684\u53ef\u4ee5\u8001\u8001\u5b9e\u5b9e\u6253\u4e00\u904d\u6392\u5e8f\uff09\u3002\n   \u7279\u522b\u611f\u8c22@[BestFy](https://www.luogu.org/space/show?uid=19722)\u63d0\u4f9b\u7684\u5b66\u672f\u6307\u5bfc\uff01\n## \u4ee3\u7801\n```cpp\n#include<algorithm>\n#include<cctype>\n#include<cstdio>\n#include<vector>\n#define ll long long\n#define pll pair<ll,ll>\n#define gc getchar\n#define MaxN 200020\nusing namespace std;\n//\u8bfb\u5165\u4f18\u5316\ninline ll read(){\n\tchar ch=gc();ll x=0,op=1;\n\tfor (;!isdigit(ch);ch=gc()) if (ch=='-') op=-1;\n\tfor (;isdigit(ch);ch=gc()) x=(x<<1)+(x<<3)+ch-'0';\n\treturn x*op;\n}\ninline void read(ll &x){x=read();}\ninline void write(ll x){\n\tif (x<0) putchar('-'),x=-x;\n\tif (x>9) write(x/10);putchar(x%10+'0');\n}\ninline void writeln(){putchar('\\n');}\ninline void writeln(ll x){write(x);writeln();}\nstruct segment_tree{\n\tll n;\n\tstruct point{ll a,tag,max;}P[MaxN<<2];\n    //a\u8868\u793a\u4fee\u8def\u7684\u82b1\u8d39\uff0ctag\u662f\u61d2\u6807\u8bb0\uff0cmax\u662f\u6700\u5927\u503c\n\tinline ll ls(ll x){return x<<1;}\n\tinline ll rs(ll x){return x<<1|1;}\n\tinline void scan(){for (int i=1;i<=n;++i) read(P[i].a);}\n\tinline void push_down(ll p){\n\t\tif (!P[p].tag) return;\n\t\tP[ls(p)].tag+=P[p].tag,P[rs(p)].tag+=P[p].tag;\n\t\tP[ls(p)].max+=P[p].tag,P[rs(p)].max+=P[p].tag;\n\t\tP[p].tag=0;\n\t}\n    //\u4e0b\u65b9\u61d2\u6807\u8bb0\n\tinline void update(ll L,ll R,ll l,ll r,ll p,ll k){\n\t\tif(L<=l&&r<=R){P[p].tag+=k,P[p].max+=k;return;}\n\t\tpush_down(p);ll mid=(l+r)>>1;\n\t    if(L<=mid) update(L,R,l,mid,ls(p),k);\n\t    if(R>mid) update(L,R,mid+1,r,rs(p),k);\n\t    P[p].max=max(P[ls(p)].max,P[rs(p)].max);\n\t}\n    //\u533a\u95f4L\u5230R\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0k\n\tinline ll query(ll L,ll R,ll l,ll r,ll p){\n\t\tif(L<=l&&r<=R)return P[p].max;\n\t\tpush_down(p);ll mid=(l+r)>>1,res=0;\n\t\tif(L<=mid) res=max(res,query(L,R,l,mid,ls(p)));\n\t\tif(R>mid) res=max(res,query(L,R,mid+1,r,rs(p)));\n\t\treturn res;\n\t}\n    //\u67e5\u8be2\u533a\u95f4L\u5230R\u7684\u6700\u5927\u503c\n} T;//\u7ebf\u6bb5\u6811\u7ef4\u62a4DP\u5e8f\u5217\nll m,cost[MaxN];ll sum,ans,t[MaxN<<2],mx[MaxN<<2];\nvector<pll> a[MaxN];\nsigned main(){\n\tread(T.n),read(m);T.scan();\n\tfor (ll i=1;i<=m;++i){ll l=read(),r=read(),x=read();a[r].push_back(pll(l,x));}\t\n    //\u5f80\u4e0d\u5b9a\u957f\u6570\u7ec4\u4e2d\u6dfb\u52a0\u4e00\u5bf9l\u548cx\uff0c\u8bb0\u5f55\u4ee5r\u4e3a\u53f3\u7aef\u70b9\u7684\u5e8f\u5217\n\tfor (ll i=1;i<=T.n;++i){\n\t\tT.update(i,i,0,T.n,1,T.query(0,i-1,0,T.n,1));\n        //\u4e0d\u4fee\u590d\uff0c\u5bf9\u4e8ej(0<=j<=i)\uff0cf[i][i]=max(f[i][i],f[i-1][j])\u3002\n\t\tfor (ll j=0;j<(ll)a[i].size();++j) T.update(0,a[i][j].first-1,0,T.n,1,a[i][j].second);\n        //\u5bf9\u4e8ej(0<=j<li)\uff0cf[i][j]=f[i-1][j]+p\u3002\n\t\tT.update(0,i-1,0,T.n,1,-T.P[i].a);\t\n        //\u5bf9\u4e8ej(0<=j<i)\uff0cf[i][j]=f[i-1][j]-T.P[i].a[i]\uff0c\u8868\u793a\u4ed8\u51fa\u4ee3\u4ef7\u3002\n\t}\n\treturn writeln(T.P[1].max),0;\n}\n```",
        "postTime": 1532693647,
        "uid": 21391,
        "name": "lzzVIL",
        "ccfLevel": 0,
        "title": "CF115E Linear Kingdom Races"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u4f18\u5316 DP \u3002\n\n\n------------\n\n\n\u4ee4 $f[i][j]$ \u8868\u793a\u524d i \u4e2a\u9009\u4e86\u7b2c $i-j$\u200b \u4e2a\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u4e8e\u662f\u5f88\u5bb9\u6613\u5f97\u51fa\n\n$f[i][j]=f[i-1][j]+val(i,j)-sum[i]$\n\n\u7531\u4e8e $f[i][j]$ \u53ea\u4e0e $f[i-1][j]$ \u6709\u5173\uff0c\u53ef\u4ee5\u53bb\u6389\u7b2c\u4e00\u7ef4\u3002\n\n\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u89e3\u51b3\u4e86\uff0c\u4f46\u65f6\u95f4\u8fd8\u662f $n^2$ \u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u4f18\u5316\uff0c\u6bcf\u6b21\u8f6c\u79fb\u76f8\u5f53\u4e8e\u533a\u95f4\u52a0\u3002\n\n\u6c42\u6700\u5927\u503c\u5c31\u6bcf\u6b21\u64cd\u4f5c\u90fd\u6c42\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u964d\u4e3a $O(n \\log n)$ \u3002\n\n\u6ce8\u610f\u8981\u5f00 long long\n\n\n------------\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//static char buf[1000000],*p1=buf,*p2=buf;\n//#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#define re register\n#define int long long\n#define ls (rt<<1)\n#define rs (rt<<1|1) \n#define mid (l+r>>1)\n#define mp make_pair\n#define fi first\n#define se second\nconst int maxn=2e5+5;\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\ninline void print(int x)\n{\n    static int a[55];int top=0;\n    if(x<0) putchar('-'),x=-x;\n    do{a[top++]=x%10,x/=10;}while(x);\n    while(top) putchar(a[--top]+48);\n}\nint n,m,q,a[maxn],tag[maxn*4],Max[maxn*4],f[maxn],l,r,x,ans;\nvoid push(int rt,int l,int r)\n{\n\tif(tag[rt])\n\t{\n\t\ttag[ls]+=tag[rt],Max[ls]+=tag[rt];\n\t\ttag[rs]+=tag[rt];Max[rs]+=tag[rt];tag[rt]=0;\n\t}\n}\nvoid add(int rt,int l,int r,int L,int R,int num)\n{\n\tif(l>R||r<L)return;\n\tif(l>=L&&r<=R){tag[rt]+=num;Max[rt]+=num;return;}\n\tpush(rt,l,r);\n\tadd(ls,l,mid,L,R,num),add(rs,mid+1,r,L,R,num);\n\tMax[rt]=max(Max[ls],Max[rs]);\n}\nint query(int rt,int l,int r,int L,int R)\n{\n\tif(l>R||r<L)return 0;\n\tif(l>=L&&r<=R){return Max[rt];}\n\tpush(rt,l,r);\n\treturn max(query(ls,l,mid,L,R),query(rs,mid+1,r,L,R));\n}\nvector<pair<int,int>>b[maxn];\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<=m;i++)l=read(),r=read(),x=read(),b[r].push_back(mp(l,x));ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd(1,1,n,i,i,ans);add(1,1,n,1,i,-a[i]);\n\t\tfor(auto j:b[i])\n\t\t\tadd(1,1,n,1,j.fi,j.se);\n\t\tans=max(query(1,1,n,1,i),ans);\n\t}cout<<ans<<endl;\n \treturn 0;\n}\n```\n",
        "postTime": 1629960203,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3CF115E Linear Kingdom Races"
    },
    {
        "content": "~~\u8fd9\u4e2a\u65b9\u6cd5\u7a0d\u5fae\u6709\u4ebf\u70b9\u70b9\u590d\u6742\u548c\u7384\u5b66\uff0c\u4f46\u662f\u6bd4\u8f83\u65e0\u8111\u3002~~\n\n\u9996\u5148\u53ef\u4ee5\u77e5\u9053\uff0c\u7531\u4e8e\u6bd4\u8d5b\u7528\u7684\u8d5b\u9053\u65f6\u8fde\u7eed\u7684\uff0c\u56e0\u6b64\u88ab\u4fee\u590d\u7684\u8d5b\u9053\u4e00\u5b9a\u662f\u5f62\u6210\u4e00\u4e2a\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u7684\u3002\n\n\u5b9a\u4e49 $f[i]$ \u8868\u793a\u7b2c $i$ \u4e2a\u8d5b\u9053\u5f3a\u5236\u4fee\u590d\uff0c\u524d $i$ \u4e2a\u8d5b\u9053\u7684\u6700\u5927\u6536\u76ca\u3002 $s_{a,b}$ \u8868\u793a\u9009\u62e9 $[a,b]$ \u7684\u82b1\u8d39\uff0c$v_{a,b}$ \u8868\u793a\u9009\u62e9 $[a,b]$ \u7684\u6536\u76ca\uff0c\u7b2c $i$ \u573a\u6bd4\u8d5b\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u6536\u76ca\u5206\u522b\u4e3a $l_i,r_i,w_i$\uff0c\u7b2c $i$ \u4e2a\u8d5b\u9053\u7684\u82b1\u8d39\u4e3a $cost_i$ \u3002\n\n$$f[i]=\\max\\limits_{j\\leq i}(f[j]-s_{j,i}+v_{j,i})$$\n\n\u8fd9\u4e2a\u65b9\u7a0b\u6240\u8868\u793a\u7684\u542b\u4e49\u5373 $[j,i]$ \u8fd9\u4e00\u6bb5\u533a\u95f4\u9700\u8981\u4fee\u590d\u3002\u5f53\u7136\uff0c\u5f53 $j=i$ \u65f6\u9700\u8981\u7279\u5224\uff0c\u5177\u4f53\u89c1\u4e0b\u3002\n\n\u7531\u4e8e\u4fee\u590d\u7684\u8d5b\u9053\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u6b64\u6bcf\u6b21\u5411\u540e\u679a\u4e3e\u65f6 $(i\\rightarrow i+1)$ \uff0c $[0,i]$ \u4e2d $f_j$ \u503c\u53d1\u751f\u6539\u53d8\u7684\u80af\u5b9a\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u3002\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811 $tree_j$ \u7ef4\u62a4\u5f53\u524d $[0,i]$ \u7684\u6240\u6709 $j$ \u7684 $f_j-s_{j,i}+v_{j,i}$ \uff0c \u5bf9\u4e8e\u6bcf\u4e00\u6b21\u7684\u679a\u4e3e $(i\\rightarrow i+1)$ \uff0c\u6240\u6709 $tree_j$ \u4e2d\u7684 $f_j$ \u90fd\u662f\u4e0d\u53d8\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8003\u8651\u5982\u4f55\u66f4\u6539 $s_{j,i}$ \u548c $v_{j,i}$ \u5373\u53ef\u3002\n\n$s_{j,i}:$ \u53ea\u9700\u7ed9 $[0,i-1]$ \u7684 $tree$ \u90fd $-w_i$ \u5373\u53ef\uff08\u5f3a\u5236\u4fee\u590d\uff09\u3002\n\n$v_{j,i}:$ \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7279\u5224\u4e4b\u524d $j=i$ \u7684\u60c5\u51b5\uff08\u56e0\u4e3a $f_i$ \u65e0\u6cd5\u4ece\u4ed6\u81ea\u8eab\u8f6c\u79fb\u8fc7\u6765\uff09\uff0c\u9996\u5148\u679a\u4e3e $j=i$ \u7684\u60c5\u51b5\uff1a\u5373 $\\max(f_j)-cost_i+val_i$ \uff08\u8fd9\u91cc\u7684 $val_i$ \u6307\u7684\u662f\u6240\u6709 $[i,i]$ \u7684\u6bd4\u8d5b\u7684\u6536\u76ca\u548c\uff09\u3002\u7136\u540e\u679a\u4e3e $j<i$ \u7684\u60c5\u51b5\uff1a\u5bf9\u4e8e $l_k!=r_k$ \u7684\u6bd4\u8d5b $[0,l_k]$ \u7684 $tree$ \u90fd $+w_k$ \uff1b\u5bf9\u4e8e $l_k=r_k=i$ \u7684\u6bd4\u8d5b\uff0c$[0,l_k-1]$ \u7684 $tree$ \u90fd $+w_k$ \uff08\u56e0\u4e3a $j=i$ \u7684\u60c5\u51b5\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u5176\u6536\u76ca\uff09 \uff1b\u53e6\u5916\u8981\u6ce8\u610f\uff0c\u5982\u679c\u4ee5\u4e0a\u7684\u6536\u76ca\u662f\u8d1f\u6570\uff0c\u5219 $f_i=0$ \uff08\u5565\u4e5f\u4e0d\u4fee\u590d\uff09\n\n$$f[i]=\\max(\\max\\limits_{j < i} tree_j ,f_j-cost_i+w_k)$$\n\n\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u89c1\u4ee3\u7801 (\u02c7\u2200\u02c7)\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#define INF 0x7f7f7f7f7f7f7f7f\n#define int long long\nusing namespace std;\nconst int N=2e5+50;\nstruct Match{int to,val,nxt;}a[N];//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u50a8\u6240\u6709\u8d5b\u9053\uff0c\u4fbf\u4e8e\u679a\u4e3er=i\u7684\u6240\u6709\u8d5b\u9053\nint maxn[N<<2],tag[N<<2],s[N],f[N],head[N],cnt;\nint n,m,ans=-INF;\ninline int Read()\n{\n   \tint x=0;\n   \tchar ch=getchar();\n   \twhile(ch>'9'||ch<'0') ch=getchar();\n   \twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+ch-48,ch=getchar();\n   \treturn x;\n}\ninline int Max(int a,int b){return a>b?a:b;}\ninline void Add_Edge(int u,int v,int w)\n{\n   \tcnt++;\n   \ta[cnt].to=v,a[cnt].val=w,a[cnt].nxt=head[u];\n   \thead[u]=cnt;\n}\n\n//\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\ninline void Add(int k,int l,int r,int v)\n{\n   \tmaxn[k]+=v;\n   \ttag[k]+=v;\n}\ninline void Pushdown(int k,int l,int r)\n{\n   \tif(!tag[k]) return ;\n   \tint mid=(l+r)>>1;\n   \tAdd(k<<1,l,mid,tag[k]),Add(k<<1|1,mid+1,r,tag[k]);\n   \ttag[k]=0;\n}\ninline int Query(int k,int l,int r,int x,int y)\n{\n   \tif(l>y||r<x) return 0;\n   \tif(x<=l&&r<=y) return maxn[k];\n   \tPushdown(k,l,r);\n   \tint mid=(l+r)>>1,res=-INF;\n   \tif(x<=mid) res=Max(res,Query(k<<1,l,mid,x,y));\n   \tif(y>mid) res=Max(res,Query(k<<1|1,mid+1,r,x,y));\n   \treturn res;\n}\ninline void Modify(int k,int l,int r,int x,int y,int v)\n{\n   \tif(l>y||r<x) return ;\n   \tif(x<=l&&r<=y){\n   \t\tAdd(k,l,r,v);\n   \t\treturn ;\n   \t}\n   \tPushdown(k,l,r);\n   \tint mid=(l+r)>>1;\n   \tif(x<=mid) Modify(k<<1,l,mid,x,y,v);\n   \tif(y>mid) Modify(k<<1|1,mid+1,r,x,y,v);\n   \tmaxn[k]=Max(maxn[k<<1],maxn[k<<1|1]);\n}\nsigned main()\n{\n   \tn=Read(),m=Read();\n   \tfor(int i=1;i<=n;i++) s[i]=Read();\n   \tfor(int i=1;i<=m;i++){\n   \t\tint l=Read(),r=Read(),p=Read();\n   \t\tAdd_Edge(r,l,p);//\u4ee5r\u4e3a\u8d77\u70b9\u5efa\u7acb\u83ca\u82b1\u56fe\n    }\n    for(int i=1;i<=n;i++){\n    \tModify(1,0,n,0,i-1,-s[i]);\n    \tint tmp=0;\n    \tfor(int j=head[i];j;j=a[j].nxt) Modify(1,0,n,0,a[j].to-(i==a[j].to),a[j].val),tmp+=a[j].val*(i==a[j].to);//\u679a\u4e3e\u6240\u6709r=i\u7684\u8d5b\u9053\uff0c\u82e5l=r=i\uff0c\u5219[0,r-1] +w \uff0c\u5426\u5219[0,r] +w\n   \t\tf[i]=Max(Query(1,0,n,0,i-1),ans-s[i]+tmp);//j<i\u548cj=i\u4e24\u79cd\u60c5\u51b5\uff08ans=max(f_j)\uff09\n    \tans=Max(0,Max(ans,f[i]));//\u8bb0\u5f970\u7684\u60c5\u51b5\n    \tModify(1,0,n,i,i,f[i]);//\u5c06f_i\u63d2\u5165\u7ebf\u6bb5\u6811\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1623231484,
        "uid": 67493,
        "name": "Higanbana_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF115E Linear Kingdom Races"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u611f\u8c22\u7ffb\u8bd1\u5b98\u7684\u7fd4\u5b9e\u5904\u7406\u3002\n\n\u4e00\u9053\u7ebf\u6bb5\u6811\u4f18\u5316DP\u7684\u95ee\u9898\uff0c\u8bbe\u7f6e\u72b6\u6001\u4e3a\uff1a$dp[i]$\u8868\u793a\u524di\u6761\u9053\u8def\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u8981\u9891\u7e41\u4fee\u6539\u533a\u95f4\uff0c\u90a3\u4e48\u4e3a\u4e86\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u91c7\u7528\u7ebf\u6bb5\u6811\u6765\u4f18\u5316\u8fd9\u4e2a\u4e1c\u897f\u3002\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4$dp[j]+w[j]$\u3002\u5176\u4e2d$w[j]$\u8868\u793a\u66f4\u65b0\u7684\u8d21\u732e\u3002\u7ef4\u62a4\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2ai\uff0c\u5148\u5bf9\u533a\u95f4$[0,i-1]$\u7edf\u4e00\u51cf\u53bb$v[i]$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u8f6c\u79fb\u7684\u6bd4\u8d5b\u533a\u95f4$[l,r]$\uff0c\u5bf9$[0,l-1]$\u7edf\u4e00\u52a0\u4e0ap\u3002\n\n\u6700\u540e\u67e5\u8be2\u7684\u5c31\u662f$[0,i-1]$\u7684\u533a\u95f4\u6700\u5927\u503c\u3002\u66f4\u65b0\u72b6\u6001\uff0c\u5e76\u628a\u65b0\u72b6\u6001\u8d4b\u7ed9\u65b0\u7ebf\u6bb5\u6811\u3002\n\n\u6240\u4ee5\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#define int long long\n#define lson pos<<1\n#define rson pos<<1|1\nusing namespace std;\nconst int maxn=2*1e5+10;\nconst int INF=1e9;\nstruct add\n{\n\tint l,k;\n\tadd(int p,int q)\n\t{\n\t\tl=p,k=q;\n\t}\n};\nint n,m;\nint v[maxn];\nvector<add> vec[maxn];\nint tree[maxn<<2],lazy[maxn<<2];\nint dp[maxn];\nvoid pushup(int pos)\n{\n\ttree[pos]=max(tree[lson],tree[rson]);\n}\nvoid mark(int pos,int l,int r,int k)\n{\n\ttree[pos]+=k;\n\tlazy[pos]+=k;\n}\nvoid pushdown(int pos,int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tmark(lson,l,mid,lazy[pos]);\n\tmark(rson,mid+1,r,lazy[pos]);\n\tlazy[pos]=0;\n}\nvoid update(int pos,int l,int r,int x,int y,int k)\n{\n\tint mid=(l+r)>>1;\n\tif(x<=l && r<=y)\n\t{\n\t\tmark(pos,l,r,k);\n\t\treturn;\n\t}\n\tpushdown(pos,l,r);\n\tif(x<=mid)\n\t\tupdate(lson,l,mid,x,y,k);\n\tif(y>mid)\n\t\tupdate(rson,mid+1,r,x,y,k);\n\tpushup(pos);\n}\nint query(int pos,int l,int r,int x,int y)\n{\n\tint mid=(l+r)>>1;\n\tif(x<=l && r<=y)\n\t\treturn tree[pos];\n\tpushdown(pos,l,r);\n\tint ret=-INF;\n\tif(x<=mid)\n\t\tret=max(ret,query(lson,l,mid,x,y));\n\tif(y>mid)\n\t\tret=max(ret,query(rson,mid+1,r,x,y));\n\treturn ret;\n}\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&v[i]);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tvec[y].push_back(add(x,z));\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tupdate(1,0,n,0,i-1,-v[i]);\n\t\tfor(int j=0;j<vec[i].size();j++)\n\t\t{\n\t\t\tint ll=vec[i][j].l,kk=vec[i][j].k;\n\t\t\tupdate(1,0,n,0,ll-1,kk);\n\t\t}\n\t\tdp[i]=max(query(1,0,n,0,i-1),dp[i-1]);\n\t\tupdate(1,0,n,i,i,dp[i]);\n\t}\n\tprintf(\"%lld\",dp[n]);\n\treturn 0;\n}\n```\n",
        "postTime": 1603449950,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "CF115E\u9898\u89e3"
    }
]