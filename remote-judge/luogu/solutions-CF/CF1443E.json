[
    {
        "content": "\u6bd4\u8d5b\u65f6\u6ca1\u505a\u51fa\u6765\uff0c\u73b0\u5728\u6765\u8865\u8bfe\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/2iwkk7r8.png)\n[\u5b98\u65b9\u9898\u89e3\u901a\u9053](https://codeforces.com/blog/entry/84298)  \n\n# \u9898\u610f\n\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6392\u5217$P$\uff0c\u548c$q$\u6b21\u64cd\u4f5c  \n- $1 \\ l \\ r$ \u67e5\u8be2$\\sum_{i=l}^r P_i$  \n- $2 \\ x$ \u5c06$P$\u66ff\u6362\u6210\u4e0b$x$\u4e2a\u6392\u5217  \n\n$n,q\\leq2\\times10^5,x \\leq 10^5$  \n\n# \u9898\u89e3  \n\u601d\u8def\uff1a\u6bcf\u6b21$2$\u64cd\u4f5c\u65f6\u53ea\u9700\u8981\u5c06$sum+=x$\uff0c\u67e5\u8be2\u64cd\u4f5c\u7684\u65f6\u5019\u8003\u8651\u7b2c$sum+1$\u4e2a\u6392\u5217\u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230$x$\u6bd4\u8f83\u5c0f\uff0c\u5c31\u7b97\u6240\u4ee5\u64cd\u4f5c\u90fd\u662f$2$\uff0c\u6700\u7ec8\u7684\u548c\u4e5f\u4e0d\u8d85\u8fc7$2\\times 10^{10}$\uff08\u5b98\u65b9\u9898\u89e3\u91cc\u8bf4\u7684\u662f$10^{10}$\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u5f71\u54cd\u4e0d\u5927\uff09  \n\u6211\u4eec\u53c8\u53d1\u73b0$15!>>2\\times 10^{10}$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u8fc7\u7a0b\u4e2d\u4f1a\u6539\u53d8\u7684\u6570\u5728\u6700\u540e$15$\u4e2a\u4e4b\u5185\uff0c\u524d\u9762\u7684\u6570\u90fd\u4e0d\u4f1a\u53d8\u3002  \n\u90a3\u4e48\u6211\u4eec\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u9700\u8981\u5c06\u540e$15$\u4e2a\u7684\u60c5\u51b5\u5904\u7406\u51fa\u6765\uff0c\u524d\u9762\u7684\u90fd\u662f\u4e00\u6837\u7684\u3002  \n\u8003\u8651\u600e\u4e48\u5904\u7406\u540e$15$\u4e2a\u7684\u4fe1\u606f\u3002  \n\u6211\u4eec\u53ef\u4ee5\u9006\u5eb7\u6258\u5c55\u5f00\u5904\u7406\u3002  \n\u5173\u4e8e\u5eb7\u6258\u5c55\u5f00\uff0c\u53ef\u4ee5\u770b\u770b[\u8fd9\u4e00\u4e2a](https://www.luogu.com.cn/problem/P5367)\n\n\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u7684\u5eb7\u6258\u5c55\u5f00\u548c\u9006\u5eb7\u6258\u5c55\u5f00\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230$O(n\\ logn)$\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u91cc\u53ea\u8981\u7b97\u51fa$15$\u4e2a\u6570\uff0c\u6240\u4ee5$O(n^2)$\u66b4\u529b\u5c55\u5f00\u5373\u53ef\n# \u4ee3\u7801\n```cpp\n\n#include<bits/stdc++.h>\n#define int long long \n#define rd(x) x=read()\nusing namespace std;\nconst int N=2e5+5;\ninline int read(){int x=0,f=1;char ch=getchar();while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;}\nint sum,n,q;\nint a[16];\nint P[16];\nint fac[16];\nbool vis[16];\nvoid get(int sum)\n{\n    //\u6c42\u51fa\u957f\u5ea6\u4e3a15\u7684\u7b2csum+1\u4e2a\u6392\u5217\n    long long res=0;\n    for(int i=1;i<n;i++)\n        res=(res+a[i])*(n-i);\n    for (int i=1;i<=15;i++)\n    {\n        a[i]=sum/fac[15-i];\n        sum%=fac[15-i];\n    }\n    memset(vis,0,sizeof(vis));\n    for (int i=1;i<=15;i++)\n    {\n        int cnt=0;\n        for (int j=1;j<=15;j++)\n        {\n            if (!vis[j]) cnt++;\n            if (cnt==a[i]+1)\n            {\n                P[i]=j;\n                vis[j]=1;\n                break;\n            }\n        }\n    }\n}\nsigned main()\n{\n    rd(n);rd(q);\n    fac[0]=1;\n    for (int i=1;i<=15;i++) fac[i]=fac[i-1]*i;\n    while (q--)\n    {\n        int opt;\n        rd(opt);\n        if (opt==1)\n        {\n            int l,r;\n            rd(l);rd(r);\n            //\u524d\u97621-(n-15)\u4e2a\u6570\u5206\u522b\u4e3a1,2,3...(n-15)\n            //\u540e\u9762(n-14)->n\u4e0d\u4e00\u6837\n            int ans=0;\n            get(sum);\n            if (r>n-15)\n            {\n                if (l>n-15)\n                {\n                    //\u5168\u5728\u540e15\u4e2a\u91cc\u9762\n                    for (int i=l-n+15;i<=r-n+15;i++) ans+=P[i];\n                    ans+=(r-l+1)*(n-15);\n                }\n                else\n                {\n                    //l->(n-15)+(n-14)->r\n                    ans+=(l+n-15)*(n-14-l)/2;\n                    for (int i=1;i<=r-n+15;i++) ans+=P[i];\n                    ans+=(r-n+15)*(n-15);\n                }\n            }\n            else ans=(l+r)*(r-l+1)/2;\n            printf(\"%lld\\n\",ans);\n        }\n        if (opt==2) {int x;rd(x);sum+=x;}\n    }\n}\n```",
        "postTime": 1604411149,
        "uid": 70132,
        "name": "AsunderSquall",
        "ccfLevel": 7,
        "title": "CF1443E \u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a $15!=1,307,674,368,000$\uff0c\u6240\u4ee5\u53ea\u6709\u540e $15$ \u4f4d\u4f1a\u6539\u53d8\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u6bcf\u6b21\u628a\u540e $15$ \u4f4d\u7684\u5eb7\u6258\u5c55\u5f00\u6b21\u5e8f\u8bb0\u5f55\u4e00\u4e0b\uff0c\u518d\u53cd\u5c55\u5f00\u5c31\u884c\u3002\n\n\u4e00\u5171 $2\\times 10^5$ \u6b21\u4fee\u6539\uff0c\u53ea\u9700\u8981\u5355\u6b21\u64cd\u4f5c $O(15^2)$ \u5c31\u884c\u3002\n\n\u6211\u7528\u7684\u8fd9\u79cd\u5b9e\u73b0\u5176\u5b9e\u53ef\u4ee5\u505a $x$ \u5f88\u5927\u5e76\u4e14\u521d\u59cb\u6392\u5217\u4e0d\u540c\u7684\u60c5\u51b5\u3002\u3002\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=2e5+10;\n#define int long long\nint n,q,a[NR],s[NR],fac[20];\n\nint c[NR];\nint lowbit(int x){\n\treturn x&(-x);\n}\nvoid add(int x,int y){\n\twhile(x<=n){\n\t\tc[x]+=y;\n\t\tx+=lowbit(x);\n\t}\n}\nint sum(int x){\n\tint res=0;\n\twhile(x){\n\t\tres+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n} \nint calc(int l,int r){return sum(r)-sum(l-1);}\n\nint query(int pos){\n\tint res=0;\n\tfor(int i=n;i>=pos;i--)\n\t\tres+=calc(1,a[i])*fac[n-i],add(a[i],1);\n\tfor(int i=pos;i<=n;i++)add(a[i],-1);\n\treturn res;\n}\nint v[NR],len,cnt[NR];\nvoid rebuild(int pos,int x){\n\tlen=0;\n\tfor(int i=pos;i<=n;i++)v[++len]=a[i];\n\tfor(int i=1;i<=len;i++)cnt[i]=i-1;\n\tsort(v+1,v+1+len);\n\tfor(int i=pos;i<=n;i++){\n\t\tint k=x/fac[n-i];x-=k*fac[n-i];\n\t\tfor(int j=1;j<=len;j++)\n\t\t\tif(v[j]&&cnt[j]==k){\n\t\t\t\ta[i]=v[j];v[j]=0;\n\t\t\t\tfor(int l=j+1;l<=len;l++)cnt[l]--;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n}\n\nsigned main(){\n\tfac[0]=1;\n\tfor(int i=1;i<=15;i++)fac[i]=fac[i-1]*i;\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;i++)s[i]=s[i-1]+(a[i]=i);\n\twhile(q--){\n\t\tint opt;scanf(\"%lld\",&opt);\n\t\tif(opt==1){\n\t\t\tint l,r;scanf(\"%lld%lld\",&l,&r);\n\t\t\tprintf(\"%lld\\n\",s[r]-s[l-1]);\n\t\t}\n\t\telse{\n\t\t\tint x,pos=n,now=n,cnt=1;scanf(\"%lld\",&x);\n\t\t\twhile(cnt<=x){\n\t\t\t\tpos=now;\n\t\t\t\tcnt+=calc(a[now],n)*fac[n-now];\n\t\t\t\tadd(a[now],1);now--;\n\t\t\t}\n\t\t\tfor(int i=pos;i<=n;i++)add(a[i],-1);\n\t\t\trebuild(pos,query(pos)+x);\n\t\t\tfor(int i=pos;i<=n;i++)s[i]=s[i-1]+a[i];\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n```",
        "postTime": 1655295918,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF1443E \u9898\u89e3"
    },
    {
        "content": "\u5f88 $\\text{Naive}$ \u7684\u4e00\u9053\u9898\u554a\u3002\n\n\u770b\u5230\u8fd9\u79cd\u548c\u5168\u6392\u5217\u7f16\u53f7\u76f8\u5173\u7684\u95ee\u9898\uff0c\u9996\u5148\u60f3\u5230 $\\text{Cantor Expansion}$\u3002$\\text{Cantor Expansion}$ \u65e0\u975e\u5c31\u662f\u4e24\u4e2a\u6027\u8d28\uff0c\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u4e00\u4e2a\u8fdb\u5236\u3002\n\n\u800c\u5c06\u6392\u5217\u6620\u5c04\u5230\u4e00\u4e2a\u7f16\u53f7\uff0c\u5b9e\u5219\u662f\u5c06\u4e00\u4e2a\u6392\u5217\u6620\u5c04\u5230\u4e00\u4e2a\u8fdb\u5236\u4e32\u3002\u8fd9\u662f\u5eb7\u6258\u5c55\u5f00\u7684\u5b9e\u8d28\uff0c\u5373\u5efa\u7acb\u81ea\u7136\u6570\u57df\u5230\u5e8f\u5217\u7684\u6620\u5c04\uff0c\u82e5\u81ea\u7136\u6570\u8fc7\u5927\uff0c\u53ef\u4ee5\u91c7\u7528\u8fdb\u5236\u4e32\u7684\u5f62\u5f0f\u8868\u793a\u3002\u660e\u767d\u4e86\u8fd9\u51e0\u70b9\uff0c\u8fd9\u9898\u771f\u7684\u5f88\u4e00\u773c\uff08\n\n\u6709\u4e00\u4e2a\u975e\u5e38\u5bb9\u6613\u60f3\u5230\u7684\u601d\u8def\uff0c\u628a\u6392\u5217\u901a\u8fc7 $\\text{Cantor Expansion}$ \u53d8\u4e3a\u8fdb\u5236\u4e32\uff0c\u4f46\u4e0d\u6c42\u51fa\u8fd9\u4e2a\u8fdb\u5236\u4e32\u5177\u4f53\u7684\u503c\u3002\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u8fd9\u4e2a\u8fdb\u5236\u4e32\u4e0a $+x$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u7ef4\u62a4\u8fd9\u4e2a\u8fdb\u5236\u4e32\uff0c\u5e76\u5728\u67e5\u8be2\u533a\u95f4\u548c\u7684\u65f6\u5019\u5c06\u8fd9\u4e2a\u8fdb\u5236\u4e32\u8f6c\u4e3a\u6392\u5217\u5373\u53ef\u3002\u4f46\u662f\u8fd9\u6837\u4f3c\u4e4e\u4f1a $\\text{TLE}$\uff1f\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u6781\u9650\u6570\u636e\u4e0b\u53ea\u4f1a\u6c42\u7f16\u53f7 $2\\times 10^{10}$ \u5bf9\u5e94\u7684\u6392\u5217\u3002\u800c\u8fd9\u4e2a\u6392\u5217\uff0c\u4e8b\u5b9e\u4e0a\u4e0e\u521d\u59cb\u7ed9\u51fa\u7684\u6392\u5217\uff0c\u6700\u591a\u53ea\u76f8\u5dee\u6700\u540e\u7684 $15$ \u4f4d\u3002$14!\\leq 2\\times 10^{10}$\uff0c\u5728\u8fdb\u5236\u4e32\u4e0a $0!\\sim 14!$ \u5c31\u662f $15$ \u4f4d\uff0c\u8fd9\u662f\u975e\u5e38\u663e\u7136\u7684\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u672b $15$ \u4f4d\u7684\u8fdb\u5236\u4e32\u7684\u53d8\u5316\uff0c\u7531\u4e8e\u521d\u59cb\u7ed9\u51fa\u7684\u662f\u4e00\u4e2a\u987a\u5e8f\u6392\u5217\uff0c\u9664\u53bb\u8fd9 $15$ \u4f4d\u7684\u90e8\u5206\u5728\u8fdb\u5236\u4e32\u4e2d\u5fc5\u7136\u90fd\u662f $0$\u3002\n\n\u81f3\u4e8e\u901a\u8fc7\u8fdb\u5236\u4e32\u5f97\u5230\u4e00\u4e2a\u6392\u5217\uff0c\u5176\u5b9e\u5c31\u662f\u6839\u636e\u9006\u5e8f\u5bf9\u8fd8\u539f\u6392\u5217\u3002\u76f4\u63a5\u7528 $\\text{BIT}$ + \u4e8c\u5206\u6216\u8005\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u597d\u3002\u524d\u8005\u662f $O(\\log ^2)$ \u7684\u800c\u540e\u8005\u662f\u4e00\u53ea $\\log$ \u7684\uff0c\u6211\u592a\u61d2\u4e86\u53ea\u5199\u4e86\u4e24\u53ea $\\log$\uff08\n\nUPDATE\uff1a\u7531\u4e8e\u53ea\u9700\u8981 $15$ \u4f4d\uff0c\u76f4\u63a5\u66b4\u529b\u7ef4\u62a4\u524d\u7f00\u548c\u5c31\u597d\u4e86\uff08$\\text{DS}$ \u5b66\u50bb\u7684\u6211\u53ea\u80fd\u5f53\u573a\u722c\u8d70 \n\n```cpp\n#include<cstdio>\ntypedef long long ll;\nint s[200005],a[200005],A[200005];\ninline int read() {\n    register int x=0,f=1;register char s=getchar();\n    while(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n    while(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n    return x*f;\n}\ninline void add(int n,int x,int val) {for(;x<=n;x+=x&(-x)) s[x]+=val;} \ninline int ask(int x) {int res=0; for(;x;x-=x&(-x)) res+=s[x]; return res;}\ninline ll getAns(int n,int R) {\n    ll res=(n-15+1)*1ll*(n-15)/2;\n    if(R>n-15) {\n        res=(n-15+1)*1ll*(n-15)/2;\n        for(register int i=n-14;i<=R;++i) res+=a[i];\n    } \n    else {\n        res=(1+R)*1ll*R/2;\n    }\n    return res;\n}\ninline int find(int n,int k) {\n    int l=1,r=n,res=1;\n    while(l<=r) {\n        int mid=l+r>>1;\n        if(ask(mid)>=k) r=mid-1,res=mid;//find the most left index\n        else l=mid+1;\n    }\n    return res;\n}\nint main() {\n    int n=read(),T=read();\n    while(T--) {\n        int op=read();\n        if(op==1) {\n            int l=read(),r=read();\n            if(n<=15) {\n                for(register int i=1;i<=n;++i) s[i]=0;\n                for(register int i=1;i<=n;++i) add(n,i,1);\n                for(register int i=1;i<=n;++i) {\n                    int x=find(n,A[i]+1);\n                    add(n,x,-1); a[i]=x;\n                }\n                ll sum=0;\n                // for(register int i=1;i<=n;++i) printf(\"%d \",a[i]); printf(\"\\n\");\n                for(register int i=l;i<=r;++i) sum+=a[i];\n                printf(\"%lld\\n\",sum);\n            }\n            else {\n                for(register int i=n-14;i<=n;++i) s[i]=0;\n                for(register int i=n-14;i<=n;++i) add(n,i,1);\n                for(register int i=n-14;i<=n;++i) {\n                    int x=find(n,A[i]+1);\n                    add(n,x,-1); a[i]=x;\n                }\n                printf(\"%lld\\n\",getAns(n,r)-getAns(n,l-1));\n            }\n        }\n        else {\n            int x=read();\n            A[n]+=x;\n            for(register int i=n;i>=2&&A[i]/(n-i+1)!=0;--i) {\n                A[i-1]+=A[i]/(n-i+1);\n                A[i]%=(n-i+1);\n            }\n        }\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1605080007,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1443E \u3010Long Permutation\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u65e0\u975e\u4e24\u4e2a\u64cd\u4f5c\uff1a\u4e00\u4e2a\u6c42\u533a\u95f4\u548c\u53e6\u4e00\u4e2a\u6539\u53d8\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u6570\u3002\u5f88\u660e\u663e\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u6216\u662f\u6811\u72b6\u6570\u7ec4\u3002\u53d8\u6210\u4e0b\u4e00\u4e2a\u6392\u5217\u5f88\u660e\u663e\u662f\u8981\u5355\u70b9\u4fee\u6539\uff0c\u90a3\u4e48\u90a3\u4e48\u5927\u7684\u6570\u636e\u8303\u56f4\u4e0d\u4f1a\u70b8\u5417\uff1f\u5f88\u660e\u663e\uff0c\u4e0d\u4f1a\u3002\n\n\u64cd\u4f5c\u8303\u56f41e5\uff0c\u64cd\u4f5c\u6b21\u65702e5\uff0c\u4e58\u8d77\u6765\u662f2e10\uff0c\u6211\u4eec\u7b97\u4e00\u4e0b\u6392\u5217\uff0c\u523013\u4f4d\u5c31\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53d614\u4f4d\u3002\u5373\uff1a\u6211\u4eec\u4fee\u6539\u6392\u5217\u7684\u540e14\u4f4d\u5c31\u53ef\u4ee5\u9898\u76ee\u7684\u9884\u8bbe\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u662f13\u4f4d\uff1f\u5047\u8bbe\u6211\u4eec\u8fd9\u4e2a\u6392\u5217\u540e13\u4f4d\u5df2\u7ecf\u5904\u4e8e\u6700\u540e\u51e0\u4e2a\u6392\u5217\u4e86\uff0c\u6240\u4ee5\u4f60\u6362\u6210\u66f4\u540e\u9762\u7684\u6392\u5217\u5c31\u70b8\u4e86\u3002\u6240\u4ee5\u53d614\u4f4d\u3002\n\n\u600e\u4e48\u5b9e\u73b0\uff1f\u5eb7\u6258\u5c55\u5f00+\u9006\u5eb7\u6258\u5c55\u5f00\uff0c\u8ba1\u7b97\u540e14\u4f4d\uff08\u4e0d\u8db3\u7684\u8bdd\u53d6\u5176\u6240\u6709\u4f4d\u6570\uff09\u7684\u5eb7\u6258\u5c55\u5f00\u503c\uff0c\u7136\u540e\u52a0\u4e0a\u8981\u6c42\u7684\u540e\u51e0\u4f4d\u8fd9\u4e2a\u503c\uff0c\u9006\u5eb7\u6258\u5c55\u5f00\u5f97\u5230\u540e14\u4f4d\u6392\u5217\uff0c\u6700\u540e\u7ebf\u6bb5\u5355\u70b9\u4fee\u6539\uff08\u6700\u591a14\u4f4d\u4fee\u6539\uff0c\u4e0d\u4f1a\u70b8\u7684\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <map>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define ll long long\n#define mem(a,b) memset(a,b,sizeof(a))\n#define fo1(a,b) for(int a=0;a<b;++a)\n#define fo2(a,b) for(int a=1;a<=b;++a)\n#define lowbit(a) (a&(-a))\n#define fir(a) a->first\n#define sec(a) a->second\nconst int inf=0x3f3f3f3f;\nconst int maxn=2e5+5;\nconst int mod=1e9+7;\nconst double eps=1e-7;\nint n,m,l,r,cnr;\nint sum[20],num[20];\nll FAC[20]={1,1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600,6227020800,87178291200};\nll lazy[maxn<<2],t[maxn<<2],a[maxn],b[maxn];\nbool vis[20];\ninline void push_up(int k){\n    t[k]=t[k<<1]+t[k<<1|1];\n}\nvoid build_tree(int k,int l,int r){\n    lazy[k]=0;\n    if(l==r){\n        t[k]=a[l];\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build_tree(k<<1,l,mid);\n    build_tree(k<<1|1,mid+1,r);\n    push_up(k);\n}\nvoid update(int L,int k,int l,int r,ll val){\n    if(r<L||l>L) return;\n    if(l==r&&l==L){\n        t[k]+=val;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    update(L,k<<1,l,mid,val);\n    update(L,k<<1|1,mid+1,r,val);\n    push_up(k);\n}\nll query(int L,int R,int k,int l,int r){\n    ll ans=0;\n    if(L<=l&&r<=R){\n        return t[k];\n    }\n    int mid=(l+r)>>1;\n    if(L<=mid)\n        ans+=query(L,R,k<<1,l,mid);\n    if(R>mid)\n        ans+=query(L,R,k<<1|1,mid+1,r);\n    return ans;\n}\nll cantor(int x){\n    ll res=0;\n    int cnr=0;\n    for(int i=l;i<=r;++i){\n        x--;\n        res+=(ll)sum[++cnr]*FAC[x];\n    }\n    return res;\n}\nvoid decantor(ll x,int y){\n    int z=r-l+1;\n    x+=(ll)y;\n    sort(num+1,num+1+cnr);\n    mem(vis,0);\n    for(int i=l;i<=r;++i){\n        z--;\n        int pp=1+x/FAC[z];\n        x=x%FAC[z];\n        for(int j=1;j<=r-l+1;++j){\n            if(!vis[j]) pp--;\n            if(!pp) {pp=j; break;}\n        }\n        vis[pp]=1;\n        b[i]=num[pp]-a[i];\n        a[i]=num[pp];\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    fo2(i,n) a[i]=(ll)i;\n    build_tree(1,1,n);\n    fo2(i,m){\n        int x,y,z;\n        scanf(\"%d\",&x);\n        if(x==1){\n            scanf(\"%d%d\",&y,&z);\n            ll ans=query(y,z,1,1,n);\n            printf(\"%lld\\n\",ans);\n        }\n        else{\n            scanf(\"%d\",&y);\n            mem(sum,0);\n            r=n,l=max(1,n-14);\n            cnr=0;\n            mem(vis,0);\n            for(int i=l;i<=r;++i){\n                num[++cnr]=a[i];\n                for(int j=l;j<=r;++j){\n                    if(!vis[j-l+1]&&a[i]>a[j])\n                    sum[cnr]++;\n                }\n                vis[cnr]=1;\n            }\n            ll Can=cantor(r-l+1);\n            decantor(Can,y);\n            for(int i=l;i<=r;++i){\n                update(i,1,1,n,b[i]);\n            }\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1605057045,
        "uid": 265539,
        "name": "Mint_Flipped",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1443E \u3010Long Permutation\u3011"
    },
    {
        "content": "\u7531\u4e8e $q \\le 2\\times 10^5$\uff0c$x \\le q\\times 10^5$\uff0c\u6700\u540e\u4ea7\u751f\u7684\u6700\u5927\u7684\u6392\u5217\u4e5f\u4e0d\u4f1a\u8d85\u8fc7 $2 \\times 10^{10}$\uff0c\u800c $15!$ \u5c31\u8d85\u8fc7\u4e86 $2 \\times 10^{10}$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u591a\u53ea\u6709 $15$ \u4f4d\u4f1a\u4ea7\u751f\u6539\u53d8\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u4fee\u6539\u7684\u65f6\u5019\u628a\u6392\u5217\u7b97\u51fa\u6765\u66b4\u529b\u4fee\u6539\u6700\u540e\u90a3\u51e0\u4f4d\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntemplate <typename T>\ninline void read(T &x)\n{\n    T data = 0, f = 1;\n    char ch = getchar();\n    while (!isdigit(ch))\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (isdigit(ch))\n    {\n        data = (data << 3) + (data << 1) + ch - '0';\n        ch = getchar();\n    }\n    x = f * data;\n}\ntemplate <typename T, typename... Args>\ninline void read(T &t, Args &... args)\n{\n    read(t);\n    read(args...);\n}\n\nconst int inf = 0x3f3f3f3f;\nconst double eps = 1e-8;\nconst int maxn = 2e5 + 9;\nconst ll mod = 998244353;\nll frac[20];\nll s[maxn];\nbool vis[maxn];\nsigned main()\n{\n    int n, q;\n    read(n, q);\n    frac[0] = 1;\n    for (ll i = 1; i <= 16; ++i)\n        frac[i] = frac[i - 1] * i;\n    int st = max(1, n - 15);\n    ll cnt = 1;\n    for (ll i = 1; i <= n; ++i)\n        s[i] = s[i - 1] + i;\n    int op, l, r, x;\n    while (q--)\n    {\n        read(op);\n        if (op == 1)\n        {\n            read(l, r);\n            printf(\"%lld\\n\", s[r] - s[l - 1]);\n        }\n        else\n        {\n            read(x);\n            cnt += x;\n            ll now = cnt;\n            for (int i = st; i <= n; ++i)\n                vis[i] = false;\n            for (int i = st; i < n; ++i)\n            {\n                ll tmp = 0;\n                for (int j = st; j <= n; ++j)\n                {\n                    if (!vis[j])\n                    {\n                        tmp += frac[n - i];\n                        if (tmp >= now)\n                        {\n                            now -= tmp - frac[n - i];\n                            s[i] = s[i - 1] + j;\n                            vis[j] = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            for (int i = st; i <= n; ++i)\n                if (!vis[i])\n                    s[n] = s[n - 1] + i;\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1604405196,
        "uid": 256465,
        "name": "Theophania",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1443E \u3010Long Permutation\u3011"
    }
]