[
    {
        "content": "###### \u5b89\u5229\u4e00\u4e0b[\u672c\u849f\u84bb\u7684\u535a\u5ba2](https://yingyinyin.blog.luogu.org/#)\n\n### \u9700\u8981\u90e8\u5206\u5206\u7684\u540c\u5b66[\u6233\u6211](https://www.luogu.org/problemnew/show/U64420)\u5440\n\n# \u65b9\u6cd5\u2460\n\n## \u6811\u72b6\u6570\u7ec4\n\n- \u5bf9\u4e8e$20\\%$\u7684\u6570\u636e\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u505a\n\n- \u5bf9\u4e8e$30\\%$\u7684\u6570\u636e\u65b9\u6cd5\u8ddf\u6b63\u89e3\u6709\u5173\uff0c\u540e\u9762\u518d\u8bb2\n\n- \u5bf9\u4e8e$50\\%$\u7684\u6570\u636e\u8bf7\u5148\u770b\u63d0\u793a\u7b2c\u4e8c\u6761\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5806\u679a\u4e3e\u6240\u6709\u7684\u70b9\uff0c\u66b4\u529b\u8ba1\u7b97\u4e0d\u5408\u6cd5\u7684\u6570\u91cf\n\n- ~~\u4e2a\u4eba\u8ba4\u4e3a\u4ee5\u4e0a\u6240\u6709\u5206\u6570\u90fd\u5e94\u8be5\u62ff\u5230~~\n\n- \u5bf9\u4e8e$30\\%$\u7684\u6570\u636e\uff0c\u6211\u4eec\u8003\u8651\u6765\u679a\u4e3e\u7236\u4eb2\uff0c\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u7236\u4eb2\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\n\n- \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7236\u4eb2\u7684\u513f\u5b50\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u5bf9\u4e8e$i$\u53c9\u5806\uff0c\u8282\u70b9$j$\u7684\u513f\u5b50\u4e3a$i*j+2-i$\u5230$i*j+1$\uff0c\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e2a\u7236\u4eb2\u7684\u8d21\u732e\u3002\n\n- \u66b4\u529b\u8ba1\u7b97\u8d21\u732e\u662f$O(n)$\u7ea7\u522b\u7684\uff0c\u5bf9\u4e8e$i$\u53c9\u5806\uff0c\u7236\u4eb2\u7684\u4e2a\u6570\u4e3a$\\dfrac{n}{i}$\uff0c\u56e0\u4e3a\u63d0\u793a\u4e09\uff0c\u6240\u4ee5\u603b\u7684\u4e2a\u6570\u4e3a$nlog_n$\u4e2a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a$O(n^2log_2n)$\n\n- ~~\u5176\u5b9e\u56e0\u4e3a\u5747\u644a\u7684\u539f\u56e0\u8fd8\u662f$O(n^2)$\u7684~~\n\n***\n\n\u6b64\u4e0a\uff0c\u90fd\u662f\u90e8\u5206\u5206\u7684\u5199\u6cd5\uff0c\n\n\u63a5\u4e0b\u6765\uff0c\u5c31\u662f$100\\%$\u7684\u5199\u6cd5\u5566\u3002\n\n- \u8ba1\u7b97\u8d21\u732e\u672c\u8d28\u4e0a\u5c31\u662f\u6c42\u4e00\u6bb5\u533a\u95f4\u5185\u5c0f\u4e8e\u4e00\u4e2a\u6570\u7684\u6570\u91cf\n\n- \u7136\u540e\u5c31\u53ef\u4ee5\u6b22\u5feb\u7684\u7528\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4f18\u5316\u4e86\u3002\n\n- \u6211\u4eec\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u5c06\u5143\u7d20\u4f4d\u7f6e\u4e3a\u4e0b\u6807\uff0c\u6309\u5143\u7d20\u5927\u5c0f\u4e00\u4e2a\u4e2a\u63d2\u5165\uff0c\u8fd9\u6837\u6bcf\u6b21\u8ba1\u7b97\u53ea\u8981$O(logn)$\u7684\u590d\u6742\u5ea6\n\n- \u7136\u540e\u603b\u7684\u590d\u6742\u5ea6\u4e3a$O(nlog^2n)$\n\n```cpp\n#include <bits/stdc++.h>\n\n#define Max 200005\n\nusing namespace std;\n\ninline char gc()\n{\n\tstatic char buf[100000],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define getchar gc\ninline int read()\n{\n\tint x=0;\n\tchar ch=gc();\n\tbool positive=1;\n\tfor(; !isdigit(ch); ch=gc())if(ch=='-')positive=0;\n\tfor(; isdigit(ch); ch=gc())x=x*10+ch-'0';\n\treturn positive?x:-x;\n}\n\ninline void write(int x)\n{\n\tif(x<0)x=-x,putchar('-');\n\tif(x>9)write(x/10);\n\tputchar(x%10+'0');\n}\n\ninline void writeln(int x)\n{\n\twrite(x);\n\tputs(\"\");\n}//\u8f93\u5165\u8f93\u51fa\u4f18\u5316\n\nstruct node\n{\n\tint a,b;\n} s[Max];\n\nint n,ans[Max],c[Max];\n\ninline bool cmp(node x,node y)\n{\n\tif(x.a!=y.a)\n\t{\n\t\treturn x.a<y.a;\n\t}\n\telse\n\t{\n\t\treturn x.b<y.b;\n\t}\n}//cmp\u51fd\u6570\uff0csort\u7528\n\ninline int lowbit(int x)\n{\n\treturn x&-x;\n}\n\ninline void add(int x)\n{\n\twhile(x<=n)\n\t{\n\t\tc[x]++;\n\t\tx+=lowbit(x);\n\t}\n}\n\ninline int sum(int x)\n{\n\tint ans=0;\n\twhile(x>0)\n\t{\n\t\tans+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tn=read();\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\ts[i].a=read();\n\t\ts[i].b=i;\n\t}\n\tsort(s+1,s+n+1,cmp);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tadd(s[i].b);\n\t\tfor(int j=1; j<n&&s[i].b*j-j+2<=n; j++)\n\t\t{\n\t\t\tans[j]+=sum(min(n,s[i].b*j+1))-sum(s[i].b*j-j+1);\n\t\t}\n\t}\n\tfor(int i=1; i<n; i++)\n\t{\n\t\twrite(ans[i]);\n\t\tputchar(' ');\n\t}\n\treturn 0;\n}\n\n```\n\n# \u65b9\u6cd5\u2461\n\n## ~~\u627e\u89c4\u5f8b~~ \u5478,  \u66b4\u529b\n\n- \u6211\u4eec\u53ef\u4ee5\u5217\u4e00\u4e2a\u8868\n\n- ![](https://cdn.luogu.com.cn/upload/pic/53247.png )\n\n- \u6211\u4eec\u5b9a\u4e49\u5728$i$\u53c9\u5806\u4e2d$j$\u7684\u7236\u4eb2\u662f$\\dfrac{i+j-2}{i}$(\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u6837\u662f\u53ef\u4ee5\u7684~~\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48~~),\n\n- \u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u89c4\u5f8b:$i$\u7684\u7236\u4eb2\u5448\u9012\u51cf\u5173\u7cfb\u76f4\u5230$f_i=1$\u3002\n\n- \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0a\u4e00\u6b21\u8f6c\u79fb\u5230\u4e0b\u4e00\u6b21\uff0c\u590d\u6742\u5ea6~~\u5e94\u8be5\u662f~~$O(n\\sqrt{n})$\u7684\n\n- \u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n// typedef long long ll;\n\nconst int FFF=200000+5;\n\nconst int L=1000000;\nchar LZH[L];\nchar *SSS,*TTT;\ninline char gc(){\n\tif (SSS==TTT) TTT=(SSS=LZH)+fread(LZH,1,L,stdin);\n\treturn *SSS++;\n}\ninline int read(){\n\tint x=0,f=1;\n\tchar c=gc();\n\tfor (;c<'0'||c>'9';c=gc()) if (c=='-') f=-1;\n\tfor (;c>='0'&&c<='9';c=gc())\n\t\tx=(x<<1)+(x<<3)+c-48;\n\treturn x*f;\n}\ninline void write(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}//\u8f93\u5165\u8f93\u51fa\u4f18\u5316\n\nint n,a[FFF];\nint f[FFF];\nint ans;\nint maxx;\nint minn;\n\nint main()\n{\n\tif(fopen(\"23333.in\", \"r\"))\n\t{\n\t\tfreopen(\"23333.in\", \"r\", stdin);\n\t\tfreopen(\"23333.out\", \"w\", stdout);\n\t}\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ta[i]=read();\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tf[i]=i-1;\n\t\tif(a[i]<a[i-1])\n\t\t{\n\t\t\tans+=1;//\u9884\u5904\u7406ans\uff0c\u987a\u4fbf\u628a\u4e00\u53c9\u5806\u7684\u60c5\u51b5\u5199\u4e86\n\t\t}\n\t}\n\twrite(ans);\n\tputchar(' ');\n\tfor(int i=2;i<=n-1;++i)//\u4ece\u4e8c\u53c9\u5806\u5f00\u59cb\u8ba8\u8bba\n\t{\n\t\tif((n-1)%i==0)\n\t\t{\n\t\t\tmaxx=(n-1)/i;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxx=(n-1)/i+1;\n\t\t}//\u8ba1\u7b97\u51fa\u76f8\u540c\u7236\u4eb2\u7684\u6700\u957f\u957f\u5ea6\n\t\tfor(int q=1;q<=maxx;++q)\n\t\t{\n\t\t\tminn=1+(q-1)*i+1;//\u7b97\u51fa\u5f53f[i]=q\u65f6\uff0c\u6700\u540e\u4e00\u4f4d\u5728\u6574\u4e32\u6570\u5217\u4e2d\u4f4d\u7f6e\n\t\t\tfor(int j=min(1+q*i,n);j>=minn;--j)//\u4ece\u540e\u9762\u5f00\u59cb\u641c\u7d22\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u641c\u7d22\u7684\u6b21\u6570\n\t\t\t{\n\t\t\t\tif(f[j]!=q)//\u5982\u679cf[j]\u4e0d\u7b49\u4e8e\u4e0a\u4e00\u6b21\u7684f[j](\u4e0d\u7406\u89e3\u7684\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e0a\u9762\u7684\u8868)\n\t\t\t\t{\n\t\t\t\t\tif(a[j]<a[f[j]])\n\t\t\t\t\t{\n\t\t\t\t\t\tans--;//\u5982\u679c\u4e0a\u4e00\u6b21\u7684f[j]\u662f\u4e0d\u5408\u7406\u7684\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\uff0cans-=1\n\t\t\t\t\t}\n\t\t\t\t\tf[j]=q;//\u8f6c\u79fb\n\t\t\t\t\tif(a[j]<a[f[j]])\n\t\t\t\t\t{\n\t\t\t\t\t\tans++;//\u5982\u679c\u8fd9\u4e00\u6b21\u7684f[j]\u662f\u4e0d\u5408\u7406\u7684\uff0cans+=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;//\u5982\u679c\u641c\u7d22\u5230\u4e0e\u4e0a\u4e00\u6b21\u4e00\u6837\u7684\u8bdd\uff0c\u76f4\u63a5break\uff0c\u51cf\u5c11\u641c\u7d22\u6b21\u6570\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8981\u4ece\u540e\u9762\u5f00\u59cb\u641c\u7d22\u7684\u539f\u56e0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twrite(ans);\n\t\tputchar(' ');\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1551790639,
        "uid": 172719,
        "name": "\u5e94\u541f\u541f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF538F \u3010A Heap of Heaps\u3011"
    },
    {
        "content": "~~\u7ffb\u96c6\u8bad\u961f\u4f5c\u4e1a\u7ffb\u5230\u4e24\u9053\u4e0d\u4f1a\u505a\u7684\u795e\u9898\uff08\u5bf9\u6211\u8bf4\u7684\u5c31\u662f 538G \u548c 538H\uff09\uff0c\u7136\u540e\u5c31\u4e00\u6c14\u4e4b\u4e0b\u628a\u8fd9\u573a\u7684 F \u6c34\u4e86\u3002~~\n\n~~\u4f60\u4ee5\u4e3a\u6211\u662f\u6570\u636e\u7ed3\u6784\uff0c\u5176\u5b9e\u6211\u662f\u6570\u8bba\u54d2\uff01~~\n\n\u597d\u5427\u6570\u8bba\u7b97\u4e0d\u4e0a\u4f46\u662f\u8fd9\u9898\u771f\u548c\u6570\u636e\u7ed3\u6784\u6ca1\u5565\u5173\u7cfb\u3002\n\n------------\n\u6839\u636e\u60ef\u4f8b\u6211\u4eec\u94a6\u5b9a\u4e2a\u5565\u518d\u53bb\u7b97\u3002\n\n\u5982\u679c\u6211\u4eec\u679a\u4e3e\u53c9\u6570\uff0c\u90a3\u606d\u559c\u4f60\u4f60\u6ca1\u4e86\u3002\n\n\u5982\u679c\u679a\u4e3e\u7236\u4eb2\uff0c\u4f3c\u4e4e\u662f\u53ef\u4ee5\u6709\u5f88\u795e\u5947\u7684 $O(n\\log^2)$ \u505a\u6cd5\u7684\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u3002\n\n\u6211\u4eec\u8003\u8651\u679a\u4e3e\u513f\u5b50\uff0c\u7136\u540e\u518d\u770b\u5728\u6bcf\u4e00\u79cd\u53c9\u6570\u4e0b\u5b83\u7684\u7236\u4eb2\u662f\u8c01\u3002\n\n$x$ \u53f7\u70b9\u5728 $k$ \u53c9\u6811\u4e0a\u7684\u7236\u4eb2\u662f $\\lfloor\\frac{x+k-2}k\\rfloor=\\lfloor\\frac{x-2}k\\rfloor+1$\u3002\n\n\u6211\u4eec\u4f18\u5316\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u53d1\u73b0\u5176\u5b9e\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u662f\u76f8\u540c\u7684\u3002\n\n\u518d\u770b\u4e00\u904d\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\uff0c\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\n\n\u5bf9\uff0c\u6574\u9664\u5206\u5757\u3002\n\n\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u6574\u9664\u5206\u5757\u4e00\u4e0b\uff0c\u5dee\u5206\u7b97\u7b54\u6848\u5373\u53ef\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(\\sum\\limits_{i=1}^n\\sqrt i)$\uff0c\u4e0a\u754c\u80af\u5b9a\u662f $O(n\\sqrt n)$\uff0c\u518d\u7d27\u4e00\u70b9\u7684\u754c\u6211\u5c31\u4e0d\u77e5\u9053\u4e86\u3002\n\n~~\u7279\u522b\u77ed\u7684~~\u4ee3\u7801\uff1a\n```cpp\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n    int x=0;\n    bool f=0;\n    char c=getchar();\n    while(!isdigit(c)&&c!='-') c=getchar();\n    if(c=='-'){\n        f=1;\n        c=getchar();\n    }\n\twhile(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return f?-x:x;\n}\nconst int maxn=2e5+5;\nint n,a[maxn];\nint ans[maxn];\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    n=readint();\n    for(int i=1;i<=n;i++) a[i]=readint();\n    for(int i=2;i<=n;i++){\n    \tint l=1;\n    \twhile(l<=i-2){\n    \t\tint r=(i-2)/((i-2)/l);\n    \t\tif(a[(i-2)/l+1]>a[i]){\n    \t\t\tans[l]++;\n    \t\t\tans[r+1]--;\n\t\t\t}\n\t\t\tl=r+1;\n\t\t}\n\t\tif(a[1]>a[i]) ans[l]++;\n\t}\n\tfor(int i=2;i<n;i++) ans[i]+=ans[i-1];\n\tfor(int i=1;i<n;i++) printf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n    return 0;\n}\n```\n",
        "postTime": 1584511659,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF538F \u3010A Heap of Heaps\u3011"
    },
    {
        "content": "### \u601d\u8def\uff1a\n\n$\\quad$\u56e0\u4e3a\u6b64\u9898\u7684\u7b54\u6848\u5c31\u50cf\u6811\u4e0a\u7684\u9006\u5e8f\u5bf9 $(x,y)$ \u4e2a\u6570\uff0c $y$ \u6bd4 $x$ \u7684\u7f16\u53f7\u5927\u4f46\u6570\u503c\u5c0f\uff0c\u8fd9\u4e0d\u5c31\u662f\u6811\u4e0a\u7684\u9006\u5e8f\u5bf9\u5417\uff1f\u4f46\u662f\u4e0d\u7528\u8003\u8651\u6240\u6709\u7f16\u53f7\u5927\u4e8e\u5b83\u7684\uff0c\u53ea\u9700\u8981\u8003\u8651\u5b83\u7684 $k$ \u4e2a\u513f\u5b50(\u4e5f\u53ef\u80fd\u6ca1\u6709 $k$ \u4e2a\u513f\u5b50)\uff0c\u513f\u5b50\u7684\u5b50\u6811\u4e0d\u7b97\u3002\n\n$\\quad$\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u7684\u7f16\u53f7\u548c\u5927\u5c0f\uff0c\u56e0\u4e3a\u53ea\u6709\u5c0f\u4e8e\u8fd9\u4e2a\u70b9\u7684\u624d\u6709\u53ef\u80fd\u5bf9\u8fd9\u4e2a\u70b9\u4ea7\u751f\u8d21\u732e\uff0c\u6309\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5148\u6bcf\u6b21\u8ba1\u7b97\u8d21\u732e\uff0c\u518d\u5c06\u5b83\u63d2\u5165\u5b83\u7684\u7f16\u53f7\u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u8ba1\u7b97\u548c\u63d2\u5165\u7684\u987a\u5e8f\u4e0d\u91cd\u8981\uff0c\u6ce8\u610f\u8981\u5224\u65ad\u8282\u70b9 $i$ \u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u5c31\u76f4\u63a5\u505c\u6b62\uff0c\u56e0\u4e3a\u4e4b\u540e\u8282\u70b9 $i$ \u90fd\u4f1a\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5bf9\u4e8e $k$ \u53c9\u5806\u6765\u8bf4\uff0c $k$ \u8d8a\u5927\uff0c\u53f6\u5b50\u8282\u70b9\u8d8a\u591a\uff0c\u8fd9\u4e2a\u526a\u679d\u5f88\u5fc5\u8981\u3002\n\n$\\quad$\u53e6\u5916\u82f1\u6587\u9898\u9762\u4e2d\u63d0\u4f9b\u4e86\u5bf9\u4e8e $k$ \u53c9\u5806\u4e2d\u7f16\u53f7\u4e3a  $x$ \u7684 $k$ \u4e2a\u513f\u5b50\u7f16\u53f7\u7531 $k\\times (x-1)+2$ \u81f3 $k\\times x+1$ (\u4e5f\u53ef\u80fd\u6ca1\u6709 $k$ \u4e2a\u513f\u5b50)\n\n$\\quad$\u60f3\u770b\u7684\u53ef\u4ee5\u770b\u770b[\u4e2d\u6587\u9898\u9762](https://www.luogu.com.cn/paste/gaojsey3)\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<queue>\n#include<stack>\n#include<cstring>\nusing namespace std;\n#define re register int\n#define int long long\n#define LL long long\n#define il inline\n#define lowbit(x) x&(-x)\n#define next nee\n#define inf 1e18\nil int read()\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nil void print(int x)\n{\n  if(x<0)putchar('-'),x=-x;\n  if(x/10)print(x/10);\n  putchar(x%10+'0');\n}\nconst int N=2e5+5;\nint n,m,b[N],c[N];\nstruct node{int num,size;}a[N];\nil bool cmp(node a1,node a2){return a1.size==a2.size?a1.num<a2.num:a1.size<a2.size;}\nil void update(int x,int y){while(x<=n){c[x]+=y;x+=lowbit(x);}}\nil int sum(int x){int res=0;while(x){res+=c[x];x-=lowbit(x);}return res;}\nsigned main()\n{\n  n=read();\n  for(re i=1;i<=n;i++){a[i].num=i;a[i].size=read();}\n  sort(a+1,a+n+1,cmp);\n  update(a[1].num,1);\n  for(re i=2;i<=n;i++)\n    {\n      for(re j=1;j<n&&j*(a[i].num-1)+2<=n;j++)//\u9650\u5236\u4e2d\u7684\u526a\u679d\n\t{\n\t  int suml=sum(j*(a[i].num-1)+1),sumr=sum(min(j*a[i].num+1,n));//\u7f16\u53f7\u6700\u5c0f\u7684\u513f\u5b50-1\u548c\u7f16\u53f7\u6700\u5927\u7684\u513f\u5b50(\u4e0d\u53ef\u8d85\u8fc7n\uff0c\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u6700\u5927\u5230n)\n\t  b[j]+=(sumr-suml);\n\t}\n      update(a[i].num,1);//\u6700\u540e\u66f4\u65b0\u8fd9\u4e2a\u70b9\n    }\n  for(re i=1;i<n;i++)\n    print(b[i]),putchar(' ');\n  return 0;\n}\n```",
        "postTime": 1605534676,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF538F \u3010A Heap of Heaps\u3011"
    },
    {
        "content": "\u7528\u5565\u6811\u72b6\u6570\u7ec4\uff0c~~\u5206\u5757\u5927\u6cd5\u597d~~\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u4e00\u4e2a\u5bf9\u4e8e\u4e00\u68f5 $j$ \u53c9\u6811\uff0c\u6c42\u4ed6\u7684\u7236\u4eb2\u7684\u516c\u5f0f\uff1a $ (i + j - 2) / i $\u3002\n\n\u8fd9\u8868\u793a\u5565\uff1f\u8fd9\u4e0d\u5c31\u662f\u8868\u793a\u5bf9\u4e8e\u8bb8\u591a\u7684\u8282\u70b9\uff0c\u4ed6\u7684\u7236\u4eb2\u76f8\u540c\u5417\u3002\n\n\u5bf9\u4e8e\u7236\u4eb2\u76f8\u540c\u7684\u8282\u70b9\uff0c\u6211\u4eec\u628a\u5b83\u5206\u6210\u4e00\u4e2a\u5757\uff0c\u7136\u540e\u76f4\u63a5\u7528\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\u5b9e\u73b0\u533a\u95f4\u52a0\uff0c\u5148\u5224\u65ad\u662f\u5426\u4e0d\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u5c31\u7528\u5dee\u5206\u6570\u7ec4\u641e\u4e00\u641e\uff0c\u6700\u540e\u505a\u4e00\u904d\u524d\u7f00\u548c\uff0c\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ls(x) (x << 1)\n#define rs(x) (x << 1 | 1)\n#define mid ( ( l + r ) >> 1 )\n#define debug(x) cout << \"#x = \" << x << endl\n#define re register\n#define For( i, j, k ) for( re int i = j; i >= k; i-- )\n#define foR( i, j, k ) for( re int i = j; i <= k; i++ )\nusing namespace std;\ntypedef long long ll;\nconst ll N = 5011;\nconst ll inf = 0x3f3f3f3f3f3f;\n\nll n, a[200011], fa[N][N];\n\nnamespace IO {\n\n\tinline ll read() {\n\t\tll x = 0; bool f = 0; char ch = getchar();\n\t\tfor ( ; !isdigit(ch); ch = getchar() ) f ^= ( ch == '-' );\n\t\tfor ( ; isdigit(ch); ch = getchar() ) x = ( x << 1 ) + ( x << 3 ) + ( ch ^ 48 );\n\t\treturn f? -x: x;\n\t}\n\t\n\tinline void write ( ll x ) {\n\t\tif ( x < 0 ) x = -x, putchar ( '-' );\n\t\tif ( x > 9 ) write ( x / 10 );\n\t\tputchar ( x % 10 | 48 );\n\t}\n\t\n\tinline void wln ( ll x ) { write (x); putchar ( ' ' ); }\n\n}\n\nusing namespace IO;\n\nll ans[200011];\n//priority_queue < ll > q;\n\nint main() {\n\tfreopen(\"23333.in\", \"r\", stdin);\n\tfreopen(\"23333.out\", \"w\", stdout);\n\tn = read(); For ( i, 0, n - 1 ) a[i] = read();\n\tfor ( re int i = 1, l, r; i < n; i++ ) {\n\t\tl = 1;\n\t\twhile ( l <= i - 1 ) {\n\t\t\tr = ( i - 1 ) / ( ( i - 1 ) / l );\n\t\t\tif ( a[i] < a[( i - 1 ) / l] ) ans[l]++, ans[r + 1]--;\n\t\t\tl = r + 1;\n\t\t} if ( a[i] < a[0] ) ans[i]++;\n\t}\n\tFor ( i, 1, n - 1 ) ans[i] += ans[i - 1];\n\tFor ( i, 1, n - 1 ) wln ( ans[i] );\n\treturn 0;\n}\n```\n\u6e29\u99a8\u63d0\u793a\uff1a\u4e0d\u8981\u6284\u4ee3\u7801\u3002\n\n~~\u8001\u7237\u673a\u4e0a$T$\u4e86\uff0c\u8279~~",
        "postTime": 1551829669,
        "uid": 104379,
        "name": "Cesare",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF538F \u3010A Heap of Heaps\u3011"
    },
    {
        "content": "### $\\text{Difficulty : 2200}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\u5bb9\u6613\u53d1\u73b0\u76f4\u63a5\u679a\u4e3e $k$ \u53c9\u6811\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u8ba1\u7b97\u8d21\u732e\u4f1a\u5bc4\u3002\n\n\u7136\u540e\u5c31\u4ece\u6bcf\u4e00\u4e2a\u8282\u70b9\u8003\u8651\u4e86\uff0c\u63a5\u4e0b\u6765\u6709\u4e24\u79cd\u601d\u8def\u3002\n\n#### \u4f5c\u4e3a\u7236\u4eb2\u8282\u70b9\u8ba1\u7b97\u8d21\u732e\n\n\u8fd9\u4e00\u4e2a\u90e8\u5206\u7684\u6734\u7d20\u60f3\u6cd5\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u4e2d\u627e\u5230\u6bd4\u5f53\u524d\u6570\u5c0f\u7684\u6570\u7684\u6570\u91cf\u3002\n\n\u660e\u663e\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\uff0c\u4f18\u5316\u7684\u65b9\u5f0f\u548c\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u7c7b\u4f3c\u3002\u5c06\u6240\u6709\u6570\u6309\u7167\u5927\u5c0f\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u6bcf\u5904\u7406\u4e00\u4e2a\u6570\uff0c\u76f4\u63a5\u679a\u4e3e\u53c9\u6811 $k$\uff0c\u5219\u513f\u5b50\u533a\u95f4\u4e3a $[(i-1)k+2,ik+1]$ \u4e2d\u7684\u6240\u6709\u5df2\u7ecf\u88ab\u63d2\u5165\u7684\u6570\u5c31\u90fd\u7b97\u4f5c\u8d21\u732e\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u6b63\u786e\u6027\u9700\u8981\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5373\u6ee1 $k$ \u53c9\u6811\u7684\u6709\u513f\u5b50\u7684\u8282\u70b9\u6570\u91cf\u662f $O(\\dfrac{n}{k})$ \u7684\uff0c\u4e00\u79cd\u53ef\u884c\u7684\u8bc1\u660e\u601d\u8def\u662f\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u8ba1\u7b97\u51fa\u975e\u53f6\u8282\u70b9\u6570\uff0c\u518d\u8865\u4e0a\u82e5\u5e72\u53f6\u5b50\u7ed3\u70b9\u7b97\u3002\n\n\u6240\u4ee5\u8fd9\u91cc\u7684\u603b\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log^2 n)$ \u7684\u4e86\u3002\n\n#### \u4f5c\u4e3a\u513f\u5b50\u8282\u70b9\u8ba1\u7b97\u8d21\u732e\n\n\u8fd9\u79cd\u601d\u8def\u5219\u4e0d\u9700\u8981\u501f\u52a9\u6570\u636e\u7ed3\u6784\uff0c\u6839\u636e\u4e0a\u9762\u56fa\u5b9a\u7236\u4eb2\u7684\u513f\u5b50\u533a\u95f4\uff0c\u53ef\u4ee5\u7b97\u51fa\u56fa\u5b9a\u513f\u5b50\u7684\u7236\u4eb2\u8282\u70b9\u7f16\u53f7\u4e3a $\\lfloor\\dfrac{i-2}{k}\\rfloor+1$\uff0c\u5728 $k$ \u53d8\u5316\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u4e00\u5171\u53ea\u6709 $\\sqrt n$ \u79cd\u53d6\u503c\uff0c\u76f4\u63a5\u6574\u9664\u5206\u5757\u5c31\u5f97\u5230\u4e00\u4e2a $\\sum_{i=1}^n \\sqrt i=O(n\\sqrt n)$ \u7684\u505a\u6cd5\u3002\n\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=200005;\nint a[MAXN],n,ans[MAXN],l,r;\nvoid work(int x){\n\tfor(int i=1;i<=n-1&&(x-2)/i>0;){\n\t\tl=((x-2)/i);r=(x-2)/l;\n\t\tif(a[l+1]>a[x])ans[i]++,ans[r+1]--;\n\t\ti=r+1;\n\t}\n\tans[x-1]+=a[1]>a[x];\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(int i=2;i<=n;i++)work(i);\n\tfor(int i=2;i<=n;i++)ans[i]+=ans[i-1];\n\tfor(int i=1;i<n;i++)printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1667377838,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF538F \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a $k$ \u53c9\u6811\uff0c\u4e00\u4e2a\u8282\u70b9 $x$ \u7684\u5b50\u8282\u70b9\u7f16\u53f7\u533a\u95f4\u4e3a $[k\\times x-k+2,k\\times x+1]$\uff0c\u5b83\u7684\u7236\u8282\u70b9\u7f16\u53f7\u4e3a $\\lfloor\\dfrac{x+k-2}{k}\\rfloor$\u3002\n\n\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a $k$ \u53c9\u6811\uff0c\u5b83\u7684\u975e\u53f6\u5b50\u8282\u70b9\u6570\u91cf\u662f $\\Theta(\\dfrac{n}{k})$ \u7ea7\u522b\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6839\u53f7\u5206\u6cbb\uff0c\u8bbe\u5206\u6cbb\u70b9\u4e3a $B$\uff0c\u90a3\u4e48\u5bf9\u4e8e $k\\le B$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u68c0\u6d4b\u4e00\u904d\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(nB)$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e $k>B$ \u7684\u60c5\u51b5\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9 $x$\uff0c\u5728 $[k\\times x-k+2,k\\times x+1]$ \u4e2d\u6709\u591a\u5c11\u5143\u7d20\u5c0f\u4e8e $a_x$\u3002\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(\\dfrac{n^2}{B^2}\\log n)$\u3002\n\n\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(nB+\\dfrac{n^2}{B^2}\\log n)$\uff0c\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\uff1a\n\n$$nB=\\dfrac{n^2}{B^2}\\log n$$\n\n\u89e3\u5f97 $B=\\sqrt[3]{n\\log n}$ \u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u4e3a $\\Theta(n\\sqrt[3]{n\\log n})$\u3002\n\nCode:\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std ;\nconst int MAXN = 2e5 + 10 ;\nint n , a[MAXN] , t[MAXN] ; \nint rt[MAXN] , s[MAXN * 25] , lc[MAXN * 25] , rc[MAXN * 25] , tot ;\n#define mid ((l + r) >> 1)\nvoid build (int &o , int l , int r) {\n\tif (!o) o = ++tot ;\n\tif (l == r) return ;\n\tbuild (lc[o] , l , mid) , build (rc[o] , mid + 1 , r) ;\n}\nvoid upd (int &o , int l , int r , int x , int k) {\n\tlc[++tot] = lc[o] , rc[tot] = rc[o] , s[tot] = s[o] + k , o = tot ;\n\tif (l == r) return ;\n\tif (x <= mid) upd (lc[o] , l , mid , x , k) ;\n\telse upd (rc[o] , mid + 1 , r , x , k) ;\n}\nint query (int o1 , int o2 , int l , int r , int x , int y) {\n\t//printf (\"%d %d:%d %d\\n\" , o1 , o2 , l , r) ; \n\tif (x <= l && r <= y) return s[o2] - s[o1] ;\n\tint ret = 0 ;\n\tif (x <= mid) ret += query (lc[o1] , lc[o2] , l , mid , x , y) ;\n\tif (mid < y) ret += query (rc[o1] , rc[o2] , mid + 1 , r , x , y) ;\n\treturn ret ;\n}\nint main () {\n\tscanf (\"%d\" , &n) ;\n\tfor (int i = 1 ; i <= n ; i++) scanf (\"%d\" , &a[i]) , t[i] = a[i] ;\n\tsort (t + 1 , t + n + 1) ;\n\tint len = unique (t + 1 , t + n + 1) - t - 1 ;\n\tfor (int i = 1 ; i <= n ; i++) a[i] = lower_bound (t + 1 , t + len + 1 , a[i]) - t ;\n\tint tmp = pow (n * log2 (n) , 1.0 / 3.0) ;\n\tfor (int i = 1 ; i <= tmp ; i++) {\n\t\tint ret = 0 ;\n\t\tfor (int j = 2 ; j <= n ; j++) if (a[j] < a[(j + i - 2) / i]) ret++ ;\n\t\tprintf (\"%d \" , ret) ;\n\t}\n\tbuild (rt[0] , 1 , n) ;\n\tfor (int i = 1 ; i <= n ; i++) rt[i] = rt[i - 1] , upd (rt[i] , 1 , n , a[i] , 1) ;\n\tfor (int i = tmp + 1 ; i < n ; i++) {\n\t\tint m = (n + i - 2) / i , ret = 0 ;\n\t\tfor (int j = 1 ; j <= m ; j++)\n\t\t\tif (a[j] > 1) ret += query (rt[i * j - i + 1] , rt[min (i * j + 1 , n)] , 1 , n , 1 , a[j] - 1) ;\n\t\tprintf (\"%d \" , ret) ;\n\t}\n\treturn 0 ;\n} \n```",
        "postTime": 1659517992,
        "uid": 122641,
        "name": "GIFBMP",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF538F\u3010A Heap of Heaps\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u4e00\u4e0b\u4e8c\u53c9\u5806\u4e2d\uff0c\u8282\u70b9$x$\u7684\u7236\u8282\u70b9\u4e3a$\\left\\lfloor\\dfrac{x}{2}\\right\\rfloor$\uff0c\u53ef\u4ee5\u5199\u4f5c$\\left\\lfloor\\dfrac{x-2}{2}\\right\\rfloor+1$\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u5199\u6210\u8fd9\u6837\u7684\u5f62\u5f0f\u5462\uff0c\u56e0\u4e3a\u6211\u4e48\u53d1\u73b0\u4e09\u53c9\u5806\u53ef\u4ee5\u5199\u6210$\\left\\lfloor\\dfrac{x-2}{3}\\right\\rfloor+1$\u3002\n\n\u4e0d\u96be\u9a8c\u8bc1k\u53c9\u5806\u53ef\u4ee5\u5199\u6210$\\left\\lfloor\\dfrac{x-2}{k}\\right\\rfloor+1$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u8282\u70b9$x$\uff0c\u6839\u636e\u6570\u8bba\u5206\u5757\uff0c\u7236\u8282\u70b9\u4e0d\u8d85\u8fc7$\\sqrt{x}$\u79cd\uff0c\u5e76\u4e14\u76f8\u540c\u7684\u7236\u8282\u70b9\u5bf9\u5e94\u7684$k$\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u5dee\u5206\u4e00\u4e0b\u7b54\u6848\u6570\u7ec4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\rm O(N\\sqrt{N})$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define N 200005\nusing namespace std;\nint ans[N],n,a[N];\nint main(){\n\tscanf(\"%d\",&n);\n\trep(i,1,n)scanf(\"%d\",&a[i]);\n\trep(x,2,n){\n\t\tfor(int i=1;i<n&&(x-2)/i>0;){\n\t\t\tint j=(x-2)/i,k=min(n-1,(x-2)/j);\n\t\t\tif(a[x]<a[j+1])ans[i]++,ans[k+1]--;\n\t\t\ti=k+1;\n\t\t}\n\t\tans[x-1]+=a[x]<a[1];\n\t}\n\trep(i,1,n-1)ans[i]+=ans[i-1],printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1616299231,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "CF538F A Heap of Heaps\u9898\u89e3"
    },
    {
        "content": "# CF538F A Heap of Heaps \n\n## \u9898\u610f\u7b80\u8ff0\n\n\u200b\t\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u6309\u987a\u5e8f\u5c06\u6b64\u5e8f\u5217\u6784\u5efa\u62101~n-1\u53c9\u5c0f\u6839\u5806\u65f6\uff0c\u4e0d\u5408\u6cd5\u5143\u7d20\u5206\u522b\u6709\u591a\u5c11\u3002\u4e00\u4e2a\u5143\u7d20\u4e0d\u5408\u6cd5\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u503c\u4e25\u683c\u5c0f\u4e8e\u7236\u4eb2\u8282\u70b9\u3002\n\n## Solution\n\n\u200b\t\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7236\u4eb2\uff0c\u4e0d\u7ba1\u51e0\u53c9\u5806\uff0c\u5b83\u7684\u513f\u5b50\u4e00\u5b9a\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002\u5e76\u4e14\u5bf9\u4e8e$i$\u53c9\u5806$fa$\u8282\u70b9\uff0c\u8fd9\u4e00\u6bb5\u533a\u95f4\u4e3a$[fa*i-i+2,fa*i+1]$\u3002\n\n\u200b\t\u90a3\u4e48\u6211\u4eec\u81ea\u7136\u60f3\u5230\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u8fd9\u4e00\u6bb5\u533a\u95f4\u4e2d\u5c0f\u4e8e\u67d0\u4e2a\u503c\u7684\u5143\u7d20\u4e2a\u6570\u3002~~\u4e8e\u662f\u6211\u5728\u8003\u573a\u4e0a\u611a\u8822\u5730\u9009\u62e9\u4e86\u5206\u5757~~\u3002\n\n\u200b\t\u5b9e\u9645\u4e0a\u8fd9\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u539f\u7406\u548c\u6c42\u9006\u5e8f\u5bf9\u7c7b\u4f3c\u3002\u9996\u5148\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u6570\u7684\u521d\u59cb\u7f16\u53f7\uff0c\u7136\u540e\u5c06\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u63d2\u5165\u6811\u72b6\u6570\u7ec4\u3002\u63d2\u5165\u65f6\uff0c\u5c06\u5143\u7d20\u7684\u521d\u59cb\u4f4d\u7f6e\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u52a01\uff1b\u67e5\u8be2\u65f6\u53ea\u8981\u7edf\u8ba1\u6811\u72b6\u6570\u7ec4\u4e2d\u7ed9\u5b9a\u533a\u95f4\u5185\u7684\u548c\u5373\u53ef\u3002\n\n\u200b\t\u4e3a\u4ec0\u4e48\u8fd9\u6837\u63d2\u5165\u5c31\u662f\u6b63\u786e\u7684\u5462\uff1f~~\u5e9f\u8bdd\uff0c\u4e0d\u6b63\u786e\u600e\u4e48\u80fd\u8fc7\u5462~~\u3002\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u7531\u4e8e\u6392\u5e8f\u540e\u4fdd\u8bc1\u4e86\u5c0f\u7684\u6570\u5b57\u4f1a\u88ab\u62a2\u5148\u63d2\u5165\uff0c\u800c\u5f53\u524d\u8282\u70b9\u8981\u63d2\u5165\u65f6\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e00\u5b9a\u6bd4\u5f53\u524d\u5143\u7d20\u5c0f\uff0c\u90a3\u4e48\u53ea\u8981\u5728\u5f53\u524d\u5143\u7d20\u7684\u513f\u5b50\u533a\u95f4\u4e2d\u67e5\u8be2\u533a\u95f4\u548c\u5c31\u662f\u6bd4\u4ed6\u5c0f\u7684\u513f\u5b50\u4e2a\u6570\u4e86\u3002\n\n\u200b\t\u6700\u540e\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\uff0c\u7531\u4e8e\u6211\u4eec\u5bf9\u4e8e$i$\u53c9\u5806\uff0c\u80af\u5b9a\u9700\u8981\u626b\u63cf$\\frac{n}{i}$\u4e2a\u533a\u95f4\uff0c\u800c\u6bcf\u4e2a\u533a\u95f4\u90fd\u7531\u6811\u72b6\u6570\u7ec4\u5728$logn$\u65f6\u95f4\u5185\u7ed9\u51fa\u7b54\u6848\u3002\u6240\u4ee5\u6211\u4eec\u7684\u590d\u6742\u5ea6\u5e94\u4e3a$nlogn \\cdot \\sum \\limits_{i=1}^{n} \\frac{n}{i}$\u3002\u7531\u4e8e$ \\sum \\limits_{i=1}^{n} \\frac{n}{i}=logn$\uff0c\u6240\u4ee5\u6700\u540e\u7684\u590d\u6742\u5ea6\u4e3a$O(nlog^2 n)$\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) (x&-x)\n#define MAX 500005\nusing namespace std;\n\nstruct node{\n    int val, ord;\n    friend bool operator <(node n1, node n2){\n        if(n1.val == n2.val)\n            return n1.ord < n2.ord;\n        return n1.val < n2.val;\n    }\n}a[MAX];\n\nint n;\nint s[MAX], ans[MAX];\n\nvoid add(int x){\n    while(x <= n){\n        s[x]++;\n        x += lowbit(x);\n    }\n}\n\nint sum(int x){\n    int res = 0;\n    while(x){\n        res += s[x];\n        x -= lowbit(x);\n    }\n    return res;\n}\n\nint main()\n{\n    cin >> n;\n    for(int i = 1; i <= n; i++){\n        scanf(\"%d\", &a[i].val);\n        a[i].ord = i;\n    }\n    sort(a+1, a+n+1);\n    for(int i = 1; i <= n; i++){\n        add(a[i].ord);\n        for(int j = 1; j<n && a[i].ord*j-j+2 <= n; j++){\n            ans[j] += sum(min(a[i].ord*j+1, n)) - sum(a[i].ord*j-j+1);\n        }\n    }\n    for(int i = 1; i < n; i++){\n        printf(\"%d \", ans[i]);\n    }\n    \n    return 0;\n}\n```\n\n## \u5f69\u86cb\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u8fd8\u6709\u4e24\u4e09\u79cd$\\sqrt{n}$\u7684\u505a\u6cd5\uff08\u5982\u9664\u6cd5\u5206\u5757\uff09~~\u4f46\u6211\u592a\u5f31\u4e86\u4e0d\u4f1a\u5199~~\u3002\u503c\u5f97\u601d\u8003\u601d\u8003\u3002\n\n\u8fd8\u6709\uff0c\u90a3\u4f4dFAQ*****\uff0c\u76f4\u63a5\u590d\u5236\u6a21\u62df\u8d5b\u9898\u89e3ppt\u6765\u6c34\u9898\u89e3\u662f\u4e0d\u662f\u6709\u70b9\u8fc7\u5206\u554a\uff01\uff01",
        "postTime": 1551841986,
        "uid": 22991,
        "name": "fighter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF538F \u3010A Heap of Heaps\u3011"
    },
    {
        "content": "### \u795e\u4ed9\u9898\n\n\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u6570\u7ec4\u5efa\u5b8c\u5168$k$\u53c9\u6811\uff0c$k$\u8303\u56f4$[1,n-1]$\uff0c\u95ee\u6bcf\u4e2a$k$\u5bf9\u5e94\u7684\u4e0d\u6ee1\u8db3\u6700\u5c0f\u5806\u6027\u8d28\u7684\u7ed3\u70b9\u4e2a\u6570\n\n\u66b4\u529b$n^2$\u80af\u5b9a\u8981$T$\u98de\uff0c\u8fd9\u91cc\u5148\u5f15\u5165\u51e0\u4e2a\u6027\u8d28\uff1a\n\n$1.\\frac{n}{1}+\\frac{n}{2}+\\frac{n}{3}+...+\\frac{n}{n-1}+\\frac{n}{n}=nlogn$(\u8c03\u548c\u7ea7\u6570)\n\n2.\u5728$i$\u53c9\u6811\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9$j$\u7684\u513f\u5b50\u7684\u8303\u56f4\u4e00\u5b9a\u662f\u4e00\u6bb5\u533a\u95f4$(j\u00d7i-i+2)$~$(j\u00d7i+1)$\n\n\u63a5\u4e0b\u6765\u662f\u6b63\u89e3\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9$x$\uff0c\u5b83\u513f\u5b50\u4e2d\u6240\u6709\u4e0d\u5408\u6cd5\u7684\u8282\u70b9\u6570\u5373\u662f\u5b83\u513f\u5b50\u4e2d\u6743\u503c\u5c0f\u4e8e$x$\u7684\u6743\u503c\u7684\u6570\u91cf\uff0c\u8fd9\u663e\u7136\u53ef\u4ee5\u8054\u60f3\u5230\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u7684\u601d\u60f3\u3002\n\n\u5148\u6392\u4e00\u904d\u5e8f\uff0c\u8bb0\u5f55\u4e0b\u7b2ci\u5c0f\u7684\u6570\u5728\u539f\u5148\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u4ece\u5c0f\u7684\u6570\u5f00\u59cb\u5904\u7406\uff0c\u5c0f\u7684\u6570\u540e\u9762\u80af\u5b9a\u662f\u5927\u7684\u6570\uff0c\u4e0d\u53ef\u80fd\u4f1a\u51fa\u73b0\u975e\u6cd5\u8282\u70b9\uff0c\u7136\u540e\u5904\u7406\u5b8c\u5c0f\u7684\u6570\u4e4b\u540e\u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\uff0c\u5bf9\u5c0f\u7684\u6570\u5bf9\u5e94\u7684\u6743\u503c\u5355\u70b9\u4fee\u6539$+1$\uff0c\u8fd9\u6837\u5728\u540e\u9762\u5904\u7406\u5927\u7684\u6570\u7684\u65f6\u5019\u8be2\u95ee\u5c31\u4f1a\u7b97\u4e0a\u8fd9\u4e9b\u66f4\u65b0\u540e\u7684\u6743\u503c\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) (x&-x) \nusing namespace std;\nstruct node{\n    int a,b;\n}a[400000];\ninline int read(){\n    int x=0,w=0;char ch=getchar();\n    while (!isdigit(ch))w|=ch=='-',ch=getchar();\n    while (isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n    return w?-x:x;\n}\nint n,c[400000],ans[400000];\ninline bool cmp(node a,node b){\n    if (a.a!=b.a)return a.a<b.a;\n    else return a.b<b.b;\n}\ninline void change(int x){\n    for (;x<=n;x+=lowbit(x))\n        ++c[x];\n}\ninline int sum(int x){\n    int res=0;\n    for (;x;x-=lowbit(x))\n        res+=c[x];\n    return res;\n}\nint main(){\n    n=read();\n    for (int i=1;i<=n;++i)\n        a[i].a=read(),a[i].b=i;\n    sort(a+1,a+1+n,cmp);\n    for (int i=1;i<=n;++i){\n        change(a[i].b);\n        for (int j=1;j<n&&a[i].b*j-j+2<=n;++j)\n            ans[j]+=sum(min(n,a[i].b*j+1))-sum(a[i].b*j-j+1);\n    }\n    for (int i=1;i<n;++i)printf(\"%d \",ans[i]);\n}\n```",
        "postTime": 1551794150,
        "uid": 54260,
        "name": "tcchyc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF538F \u3010A Heap of Heaps\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u6765\u679a\u4e3e\u7236\u4eb2\uff0c\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u7236\u4eb2\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7236\u4eb2\u7684\u513f\u5b50\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u5bf9\u4e8ei\u53c9\u5806\uff0c\u8282\u70b9j\u7684\u513f\u5b50\u4e3ai*j+2-i\u5230i*j+1\uff0c\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e2a\u7236\u4eb2\u7684\u8d21\u732e\u3002\n\n\u66b4\u529b\u8ba1\u7b97\u8d21\u732e\u662fO(n)\u7ea7\u522b\u7684\uff0c\u5bf9\u4e8ei\u53c9\u5806\uff0c\u7236\u4eb2\u7684\u4e2a\u6570\u4e3an/i\uff0c\u56e0\u4e3a\u63d0\u793a\u4e09\uff0c\u6240\u4ee5\u603b\u7684\u4e2a\u6570\u4e3anlogn\u4e2a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3aO(n^2logn)\n\n\u8ba1\u7b97\u8d21\u732e\u672c\u8d28\u4e0a\u5c31\u662f\u6c42\u4e00\u6bb5\u533a\u95f4\u5185\u5c0f\u4e8e\u4e00\u4e2a\u6570\u7684\u6570\u91cf\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6b22\u5feb\u7684\u7528\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4f18\u5316\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u5c06\u5143\u7d20\u4f4d\u7f6e\u4e3a\u4e0b\u6807\uff0c\u6309\u5143\u7d20\u5927\u5c0f\u4e00\u4e2a\u4e2a\u63d2\u5165\uff0c\u8fd9\u6837\u6bcf\u6b21\u8ba1\u7b97\u53ea\u8981O(logn)\u7684\u590d\u6742\u5ea6\u7136\u540e\u603b\u7684\u590d\u6742\u5ea6\u4e3aO(nlog^2n)\n\n\u4ee3\u7801\n```cpp\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline char gc()\n{\n\tstatic const int L = 1000;\n\tstatic char sxd[L], *sss = sxd, *ttt = sxd;\n\tif(sss == ttt)\n\t{\n\t\tttt = (sss = sxd) + fread(sxd, 1, L, stdin);\n\t\tif(sss == ttt)\n\t\t\treturn EOF;\n\t}\n\treturn *sss++;\n}\n#define dd c = getchar()\ninline int read(int& x)\n{\n\tx = 0;\n\tchar dd;\n\tbool f = false;\n\tfor(; !isdigit(c); dd)\n\t{\n\t\tif(c == EOF)\n\t\t\treturn -1;\n\t\tif(c == '-')\n\t\t\tf = true;\n\t}\n\tfor(; isdigit(c); dd)\n\t\tx = (x << 1) + (x << 3) + (c ^ 48);\n\tif(f)\n\t\tx = -x;\n\treturn 1;\n}\n#undef dd//\u5feb\u8bfb\n\nstruct node\n{\n\tint a,b;\n}s[300000];\n\nint i,j,n,z[300000],c[300000];\n\nbool cmp(node x,node y)\n{\n\tif(x.a!=y.a)\n\t{\n\t\treturn x.a<y.a;\n\t}\n\telse\n\t{\n\t\treturn x.b<y.b;\n\t}\n}\n\nint bit(int x)\n{\n\treturn x&-x;\n}\n\nvoid add(int x)\n{\n\twhile(x<=n)\n\t{\n\t\tc[x]++;\n\t\tx+=bit(x);\n\t}\n\treturn;\n}\n\nint sum(int x)\n{\n\tint z=0;\n\twhile(x>0)\n\t{\n\t\tz+=c[x];\n\t\tx-=bit(x);\n\t}\n\treturn z;\n}\n\nint main()\n{\n//\tfreopen(\"23333.in\",\"r\",stdin);\n//\tfreopen(\"23333.out\",\"w\",stdout);\n\tread(n);\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tread(s[i].a);\n\t\ts[i].b=i;\n\t}\n\t\n\tsort(s+1,s+n+1,cmp);\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tadd(s[i].b);\n\t\tfor(j=1;(j<n)&&(s[i].b*j-j+2<=n);j++)\n\t\t  z[j]+=sum(min(n,s[i].b*j+1))-sum(s[i].b*j-j+1);\n\t}\n\t\n\tfor(i=1;i<n;i++)\n\t  printf(\"%d \",z[i]);\n\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1551770919,
        "uid": 172536,
        "name": "FAQmother",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF538F \u3010A Heap of Heaps\u3011"
    }
]