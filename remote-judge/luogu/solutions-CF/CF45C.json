[
    {
        "content": "### Description\n\u7ed9\u51fa\u957f\u5ea6\u4e3a $n$ \u7684\u4e00\u4e2a\u7537\u5973\u5e8f\u5217\uff0c\u6bcf\u6b21\u6c42\u51fa\u5f53\u524d\u76f8\u90bb\u821e\u8e48\u6280\u672f\u5dee\u503c\u6700\u5c0f\u7684\u4e00\u5bf9\u76f8\u90bb\u7537\u5973\u7684\u4f4d\u7f6e\uff0c\u5e76\u628a\u4ed6\u4eec\u4ece\u5e8f\u5217\u4e2d\u5220\u9664\uff0c\u76f4\u5230\u4e0d\u5b58\u5728\u76f8\u90bb\u7537\u5973\n### Solution\n\u770b\u5230\u5e8f\u5217\u4e2d\u7684\u5220\u9664\u64cd\u4f5c\uff0c\u5c31\u80fd\u60f3\u5230\u7528\u94fe\u8868\u53bb\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\uff0c\u800c\u6c42\u821e\u8e48\u6280\u672f\u5dee\u503c\u6700\u5c0f\uff0c\u5219\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u53bb\u7ef4\u62a4\uff0c\u5c06\u5dee\u503c\u6700\u5c0f\u7684\u653e\u5728\u6700\u4e0a\u9762\uff0c\u6bcf\u6b21\u6c42\u7684\u65f6\u5019\u5728\u66f4\u65b0\u4e00\u4e0b\u94fe\u8868\u5373\u53ef\n### Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 10;\nint pre[N], nex[N], a[N], fl[N];//fl\u6570\u7ec4\u7528\u6765\u6807\u8bb0\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u4f7f\u7528\nchar s[N];\nint n, cnt, ans[N][2];\nstruct node{\n\tint l, r, d;\n\tnode(int L, int R, int D):l(L), r(R), d(D){}\n\tbool operator <(const node &o)const{\n\t\treturn d == o.d ? l > o.l : d > o.d;//\u5f53\u4e8c\u8005\u5dee\u503c\u76f8\u540c\u65f6\uff0c\u6309\u7167l\u6392\u5e8f\n\t}\n};\npriority_queue<node> q;\ntemplate <typename T>\ninline void read(T &x){\n\tchar t(getchar()), flg(0); x = 0;\n\tfor (; !isdigit(t); t = getchar() ) flg = t == '-';\n\tfor ( ; isdigit(t); t = getchar() ) x = x * 10 + ( t & 15 );\n\tflg ? x = -x : x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T &x, Args &... args){read(x);read(args...);}\nint main(){\n\tread(n);\n\tscanf(\"%s\", s + 1);\n\tfor(int i = 1; i <= n; ++i)\n\t\tread(a[i]), pre[i] = i - 1, nex[i] = i + 1;//\u521d\u59cb\u5316\n\tfor(int i = 1; i < n; ++i)\n\t\tif(s[i] != s[i + 1])\n\t\t\tq.push(node(i, i + 1, abs(a[i] - a[i + 1])));\n        //\u5f53\u4e24\u8005\u6027\u522b\u4e0d\u540c\u65f6\uff0c\u5373\u53ef\u63d2\u5165\u4f18\u5148\u961f\u5217\n\twhile(!q.empty()){\n\t\tnode tmp = q.top(); q.pop();//\u53d6\u51fa\u5dee\u503c\u6700\u5c0f\n\t\tif(fl[tmp.l] || fl[tmp.r]) continue;//\u82e5\u5f53\u524d\u8282\u70b9\u8bbf\u95ee\u8fc7\uff0c\u5c31\u53ef\u4ee5\u8df3\u8fc7\n\t\tans[++cnt][0] = tmp.l, ans[cnt][1] = tmp.r;\n\t\tfl[tmp.l] = fl[tmp.r] = 1;\n\t\tint L = pre[tmp.l], R = nex[tmp.r];\n\t\tnex[L] = R, pre[R] = L;//\u7ef4\u62a4\u94fe\u8868\n\t\tif(L < 1 || R > n) continue;\n\t\tif(s[L] != s[R])\n\t\t\tq.push(node(L, R, abs(a[L] - a[R])));\n\t}\n\tprintf(\"%d\\n\", cnt);\n\tfor(int i = 1; i <= cnt; ++i)\n\t\tprintf(\"%d %d\\n\", ans[i][0], ans[i][1]);\n}\n```\n",
        "postTime": 1593133602,
        "uid": 204884,
        "name": "Sayori",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF45C \u3010Dancing Lessons\u3011"
    },
    {
        "content": "### \u9898\u76ee\uff1a\n\u6709 $n$ \u4e2a\u4eba\u5728\u4e0a\u821e\u8e48\u8bfe\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u76f8\u5e94\u7684\u821e\u8e48\u6280\u80fd\u3002\u9009\u51fa\u76f8\u90bb\u7537\u5973\u5dee\u503c\u6700\u5c0f\u7684\u4e00\u5bf9\uff0c\u5982\u679c\u6709\u591a\u5bf9\uff0c\u5c31\u4ece\u5de6\u5f80\u53f3\u8f93\u51fa\uff0c\u9009\u51fa\u540e\u5269\u4e0b\u7684\u6210\u5458\u7d27\u5bc6\u6392\u5728\u4e00\u8d77\uff0c\u76f4\u5230\u4e0d\u80fd\u627e\u5230\u7537\u5973\u642d\u914d\u3002\n\n\u8f93\u51fa\u7ec4\u5408\u5bf9\u6570\uff0c\u5e76\u4e14\u6bcf\u961f\u6210\u5458\u6700\u521d\u65f6\u7684\u4f4d\u7f6e\u6807\u53f7\u3002\n\n### \u505a\u6cd5\uff1a\n\n\u6bcf\u6b21\u628a\u5dee\u503c\u6700\u5c0f\u7684\u62ff\u51fa\u6765\uff0c\u8fd9\u7528\u4e00\u4e2a\u5806\u7ef4\u62a4\u3002\n\n\u53ea\u80fd\u662f\u76f8\u90bb\u7684\u7537\u5973\u914d\u5bf9\uff0c\u62ff\u51fa\u6765\u540e\uff0c\u663e\u7136\u4f1a\u6709\u65b0\u7684\u7537\u5973\u4ece\u4e0d\u76f8\u90bb\u53d8\u6210\u76f8\u90bb\u3002\n\n\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b58\u6bcf\u4e00\u4e2a\u4eba\u5de6\u8fb9\u76f8\u90bb\u7684\u4eba\u548c\u53f3\u8fb9\u76f8\u90bb\u7684\u4eba\u3002\n\n\u6bcf\u6b21\u6709\u65b0\u7684\u76f8\u90bb\u7537\u5973\u7684\u65f6\u5019\u5c31\u628a\u4ed6\u4fe9\u653e\u5165\u5806\u4e2d\u3002\n\n\u8fd8\u6709\u522b\u5fd8\u4e86\u6253\u6807\u8bb0\uff01\uff01\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n### \u4ee3\u7801\uff1a\n```c\n#include <bits/stdc++.h>\n#define maxn 500500\nusing namespace std;\nint read() {int x=0;char c=getchar();while(c>'9'||c<'0')c=getchar();while(c<='9'&&c>='0')x=(x<<1)+(x<<3)+c-'0',c=getchar();return x;}\nvoid writ(int x){if(x>9)writ(x/10);putchar(x-x/10*10+48);}\nint n,ans,cnt;\nint ansl[maxn],ansr[maxn];\nbool pd[maxn];\nstruct node {\n\tint l,r;\n\tint cha;\n\tbool operator <(const node &a)const {\n\t\tif(a.cha!=cha)\n\t\t\treturn a.cha<cha;\n\t\telse\n\t\t\treturn a.l<l;\n\t}\n} now,noww;\npriority_queue<node>q;\nstruct na {\n\tint l,r;\n\tchar sex;\n\tint num;\n} b[maxn];\nvoid add(int x,int num) {\n\tif(b[x+1].sex!=b[x].sex) {\n\t\tnow.cha=abs(b[x+1].num-b[x].num);\n\t\tnow.l=x,now.r=x+1;\n\t\tq.push(now);\n\t}\n}\nvoid adds(int x,int y) {\n\tnoww.cha=abs(b[x].num-b[y].num);\n\tnoww.l=x,noww.r=y;\n\tq.push(noww);\n}\nbool check(int x) {\n\treturn x>=1&&x<=n;\n}\nsigned main() {\n\tn=read();\n\tfor(int i=1; i<=n; i++)\n\t\tb[i].sex=getchar();\n\tfor(int i=1; i<=n; i++) {\n\t\tb[i].num=read();\n\t\tb[i].l=i-1,b[i].r=i+1;\n\t}\n\tfor(int i=1; i<n; i++) add(i,b[i].num);\n\twhile(!q.empty()) {\n\t\tnow=q.top();\n\t\tq.pop();\n\t\tif(pd[now.l]||pd[now.r])\n\t\t\tcontinue;\n\t\tpd[now.l]=true,pd[now.r]=true;\n\t\tb[b[now.l].l].r=b[now.r].r;\n\t\tb[b[now.r].r].l=b[now.l].l;\n\t\tif(check(b[now.l].l)&&check(b[now.r].r))\n\t\t\tif(b[b[now.l].l].sex!=b[b[now.r].r].sex)\n\t\t\t\tadds(b[now.l].l,b[now.r].r);\n\t\tans++;\n\t\tansl[++cnt]=now.l,ansr[cnt]=now.r;\n\t}\n\twrit(ans); putchar('\\n');\n\tfor(int i=1; i<=cnt; i++) {\n\t\twrit(ansl[i]);putchar(' ');writ(ansr[i]); putchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1644223998,
        "uid": 483749,
        "name": "Amore_eterno",
        "ccfLevel": 4,
        "title": "CF45C \u9898\u89e3"
    }
]