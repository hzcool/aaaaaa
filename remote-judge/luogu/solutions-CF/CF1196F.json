[
    {
        "content": "\u6ce8\u610f\u5230k\u5f88\u5c0f\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u53ef\u4ee5\u4ea7\u751f\u6700\u5c0f\u503c\u7684\uff0c\u53ea\u53ef\u80fd\u662f\n\u957f\u5ea6\u6700\u77ed\u7684$k$\u6761\u8fb9\u76f8\u8fde\u7684\u70b9\u6240\u4ea7\u751f\u7684\uff0c\u540c\u65f6\u8fb9\u4e5f\u53ea\u53ef\u80fd\u662f\u6700\u77ed\u7684k\u6761\u8fb9\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5904\u7406\u51fa\u8fd9\u4e9b\u70b9(\u6700\u591a$2k$\u4e2a)\n\n\u7136\u540e\u8dd1Floyd\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6$k^3$\uff0c\u662f\u80fd\u8dd1\u5f97\u8fc7\u7684\n\n\u5982\u679c\u60f3\u518d\u5feb\u4e00\u70b9\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u70b9\u4e3a\u539f\u70b9\u8dd1\u4e00\u904ddijkstra\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$k^2logk$\u7684\u4e86\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 805\n#define MAXM 200005\n#define LL long long\n\nint n,m,nn,k;\nstruct bian\n{\n\tint x,y,l;\n}b[MAXM];\nint c[MAXM],a[MAXN];\nlong long dis[MAXN][MAXN];\nlong long d[MAXN*MAXN];\n\ninline int read()\n{\n    register int x = 0 , ch = getchar();\n    while( !isdigit( ch ) ) ch = getchar();\n    while( isdigit( ch ) ) x = x * 10 + ch - '0' , ch = getchar();\n    return x;\n}\n\nbool cmp(bian a,bian b) {\n\treturn a.l < b.l;\n}\nvoid rd()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i = 1; i <= m; i ++) {\n\t\tb[i].x = read();\n\t\tb[i].y = read();\n\t\tb[i].l = read();\n\t}\n\tsort(b+1,b+m+1,cmp);\n}\n\nsigned main()\n{\n\trd();\n\tmemset(dis,0x3f,sizeof(dis));\n\tfor(int i = 1; i <= k; i ++) {\n\t\tc[b[i].x] = 1;\n\t\tc[b[i].y] = 1;\n\t}\n\tfor(int i = 1; i <= n; i ++) \n\t\ta[i] = a[i-1] + c[i];\n\tnn = a[n];\n\tfor(int i = 1; i <= k; i ++) {\n\t\tdis[ a[b[i].x] ][ a[b[i].y] ] = b[i].l;\n\t\tdis[ a[b[i].y] ][ a[b[i].x] ] = b[i].l;\n\t\t\n\t}\n\tn = nn;\n\tfor(int k = 1; k <= n; k ++)\n\t\tfor(int i = 1; i <= n; i ++)\n\t\t\tfor(int j = 1; j <= n; j ++)\n\t\t\tif(dis[i][j] > dis[i][k] + dis[k][j])\n\t\t\t\tdis[i][j] = dis[i][k] + dis[k][j];\n\tint cnt = 0;\n\tfor(int i = 1; i <= n; i ++)\n\t\tfor(int j = 1; j < i; j ++)\n\t\t{\n\t\t\tcnt ++;\n\t\t\td[cnt] = dis[i][j];\n\t\t}\n\tsort(d+1,d+cnt+1);\n\tcout<<d[k];\n\treturn 0;\n}\n\n```",
        "postTime": 1564032291,
        "uid": 124721,
        "name": "Ynoi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1196F \u3010K-th Path\u3011"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u4e71\u641e\u65b9\u6cd5\uff0c\u5927\u6982\u662f\u9898\u89e3\u533a\u91cc\u552f\u4e00\u4e00\u4e2a\u590d\u6742\u5ea6\u5e26$km$\u7684?\n\n\u76f4\u63a5\u5728\u56fe\u4e0a\u8dd1$n$\u904dDij\u663e\u7136\u6b63\u786e\u4f46\u590d\u6742\u5ea6\u7206\u70b8\uff0c\u6211\u4eec\u5c1d\u8bd5\u4f18\u5316\u3002\n\n\u8003\u8651\u5355\u6e90\u6700\u77ed\u8def\u4e2d\uff0cDij\u4ece\u5806\u4e2d\u53d6\u51fa\u70b9\u6765\u7684\u987a\u5e8f\u5c31\u662f\u8ddd\u79bb\u4ece\u5c0f\u5230\u5927\u7684\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u4e1c\u897f\u5f52\u5e76\u4e00\u4e0b\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b2c$k$\u5c0f\u4e86\u3002\u81f3\u4e8e\u600e\u4e48\u5f52\u5e76\uff0c\u5f53\u7136\u662f\u4f7f\u7528\u5806\u3002\u5f00\u4e2a\u5806\u7ef4\u62a4\u5806\u770b\u8d77\u6765\u6709\u70b9\u9ebb\u70e6\uff0c\u90a3\u4e48\u6211\u4eec\u5f00\u4e00\u4e2a\u5168\u5c40\u7684\u5806\uff0c\u540c\u65f6\u5bf9\u8fd9\u4e9b\u70b9\u8dd1Dij\uff0c\u5806\u4e2d\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55 : \u8d77\u70b9\u7f16\u53f7\uff0c\u8fd9\u4e2a\u70b9\u7684\u7f16\u53f7\uff0c\u8d77\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\u56e0\u4e3a\u5f00\u4e0d\u4e0b\u8ddd\u79bb\u6570\u7ec4\uff0c\u6211\u4eec\u4f7f\u7528`map`\u3002\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u548c\u81ea\u5df1\u7684\u8def\u5f84\u4e0d\u7b97\u6570\uff0c\u800c\u4e14\u6bcf\u6761\u8def\u5f84\u4f1a\u8dd1\u4e24\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u5171\u8dd1$n+2k$\u8f6e\u3002\n\n\u63a5\u4e0b\u6765\u4f60\u53d1\u73b0\u4f60MLE on test21\uff0c\u6253\u5f00\u4e00\u770b\u53d1\u73b0\u662f\u83ca\u82b1\u56fe\uff0c\u8fd9\u662f\u56e0\u4e3a\u524d$n$\u6b21\u7684\u65f6\u5019\u6bcf\u4e2a\u70b9(\u9664\u4e86\u4e2d\u95f4\u7684\u70b9)\u628a\u4e2d\u95f4\u7684\u70b9\u6254\u8fdb\u4e86\u5806\uff0c\u63a5\u4e0b\u6765$2k$\u6b21\u4e2d\u95f4\u7684\u70b9\u4e00\u53e3\u6c14\u6254\u4e86\u5927\u7ea6$2\\times 400\\times 200000=160000000$\u4e2a\u70b9\u8fdb\u5806\u548c`map`\uff0c\u8fd9\u73a9\u610f\u663e\u7136\u7206\u70b8\u3002\n\n\u4f46\u662f\u53d1\u73b0\u65e2\u7136\u4e00\u5171\u53ea\u8dd1$n+2k$\u8f6e\uff0c\u90a3\u4e48\u8ddd\u79bb\u6392\u540d\u8d85\u8fc7$n+2k$\u7684\u70b9\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u7528\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5806\u5927\u5c0f\u9650\u5236\u5728$n+2k$\u4ee5\u5185\u3002\u5806\u6ee1\u4e86\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u66f4\u65b0\u540e\u4ecd\u7136\u6bd4\u5806\u5e95\u8981\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u8df3\u8fc7\u5bf9\u5b83\u7684\u5806\u548c`map`\u64cd\u4f5c\uff0c\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u662f$O(k+n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O((k+m)\\log n+km)$\uff0c\u8fd9\u91cc\u8ba4\u4e3a$m$\u4e0d\u6bd4$n$\u4f4e\u9636\u3002\n\n\u5b9e\u73b0\u9700\u8981\u6ce8\u610f\uff0c`set`\u6ca1\u6709\u91cd\u590d\u5143\u7d20\uff0c\u6240\u4ee5\u4f7f\u7528`set`\u4f5c\u4e3a\u53cc\u7aef\u5806\u7684\u8bdd\uff0c\u9700\u8981\u628a\u8d77\u70b9\u7f16\u53f7\uff0c\u8fd9\u4e2a\u70b9\u7f16\u53f7\uff0c\u8ddd\u79bb\u90fd\u6bd4\u4e00\u4e0b\uff0c\u5426\u5219\u53ef\u80fd\u628a\u4e24\u4e2a\u4e0d\u540c\u7684\u70b9\u89c6\u4e3a\u76f8\u540c\u7684\u3002\u53e6\u5916\u6211\u7684\u5b9e\u73b0\u6ca1\u6709\u56de\u6536`map`\u7684\u7a7a\u95f4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u662f\u9519\u7684\uff0c\u4f46\u662f\u6211\u5199\u4e86\u5199\u6302\u4e86\uff0c\u611f\u89c9\u6bd4\u8f83\u9ebb\u70e6\u5c31\u6ca1\u518d\u7ba1\uff08\n\n\u7ecf\u6d4b\u8bd5\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\u4f7f\u752864\u4f4d\u7684C++17\uff0c\u7528\u65f6\u4e3a857ms\u3002\n\n```\n#include<stdio.h>\n#include<set>\n#include<map>\nusing std::map;\nusing std::set;\n\nstruct Edge\n{\n\tint v,w,next;\n}e[400002];\n\nint ecnt,h[200002];\n\ninline void add_edge(int u,int v,int w)\n{\n\te[++ecnt]={v,w,h[u]};\n\th[u]=ecnt;\n\te[++ecnt]={u,w,h[v]};\n\th[v]=ecnt;\n}\n\nstruct Node\n{\n\tint s,u;\n\tlong long dis;\n\tinline bool operator < (Node x) const\n\t{\n\t\treturn dis==x.dis?u==x.u?s<x.s:u<x.u:dis<x.dis;\n\t}\n};\n\nset<Node> q;\nmap<int,long long> d[200002];\n\nint n,m,k;\n\ninline Node front(){ return *q.begin(); }\ninline void pop(){ q.erase(q.begin()); }\n#define push(x) q.insert(x)\ninline Node back(){ auto temp=q.end();temp--;return *temp; }\ninline void pop_back(){ auto temp=q.end();temp--;q.erase(temp); }\n\ninline long long Dij()\n{\n\tfor(int i=1;i<=n;i++)\n\t\tq.insert(Node{i,i,0}),d[i][i]=0;\n\tint t=n+(k<<1)-1;\n\twhile(t>0)\n\t{\n\t\tNode now=front();pop();\n\t\tint s=now.s,u=now.u;\n\t\tlong long du=d[s][u];\n\t\tif(du!=now.dis) continue;\n\t\tt--;\n\t\tfor(int i=h[u];i;i=e[i].next)\n\t\t{\n\t\t\tif(q.size()>=n+(k<<1)&&du+e[i].w>=back().dis) continue;\n\t\t\tauto it=d[s].find(e[i].v);\n\t\t\tif(it==d[s].end())\n\t\t\t\td[s][e[i].v]=du+e[i].w,q.insert(Node{s,e[i].v,du+e[i].w});\n\t\t\telse if(du+e[i].w<it->second)\n\t\t\t\tit->second=du+e[i].w,q.insert(Node{s,e[i].v,du+e[i].w});\n\t\t\tif(q.size()>n+(k<<1)) pop_back();\n\t\t}\n\t}\n\treturn front().dis;\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1,u,v,w;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&u,&v,&w),add_edge(u,v,w);\n\tprintf(\"%I64d\",Dij());\n\treturn 0;\n}\n```",
        "postTime": 1610542464,
        "uid": 152213,
        "name": "\u534e\u5c71\u62a1\u5251",
        "ccfLevel": 9,
        "title": "CF1196F K-th Path \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1an\u4e2a\u70b9\uff0cm\u6761\u8fb9\uff0c\u6c42\u7b2ck\u77ed\u8def\u3002\n\n\u5927\u81f4\u601d\u8def\uff1a\n\n1.\u8bf7\u51fa\u95e8\u5de6\u8f6c\u6a21\u677f\u2014\u2014K\u77ed\u8def\u3002\n\n2.\u6211\u4eec\u6ce8\u610f\u5230\uff0ck\u662f\u5f88\u5c0f\u7684\uff0c\u53ea\u6709400\u7684\u5927\u5c0f\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u5217\u4e3e\u51fa\u6700k\u6761\u7684\u6700\u5c0f\u7684\u8fb9\u7136\u540e\u8fdb\u884cFloyd\uff0c\u590d\u6742\u5ea6O\uff08k^3\uff09\uff0c\u6700\u540e\u518dsort\u4e00\u4e0b\u5373\u53ef\u3002\u5982\u679c\u6bcf\u6761\u8fb9\u90fd\u4e0d\u4e92\u76f8\u8054\u901a\uff0c\u90a3\u4e48\u7b2ck\u5c0f\u7684\u5c31\u662f\u9898\u76ee\u6240\u6c42\uff0c\u5982\u679c\u6709\u8054\u901a\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u591a\u4f59\u7684\u8fb9\u51fa\u73b0\uff0c\u90a3\u4e48\u5c31\u9009\u5176\u4e2d\u7b2ck\u77ed\u7684\u8def\u5f84\u957f\u5ea6\u5373\u53ef\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define inf 0x3f3f3f3f3f3f3f3f\nlong long dp[810][810],dis[500010];\nint n,m,k,b[500010],tot=0,cnt=0;\n\nstruct node{\n    int u,v,w;\n} a[500010];\n\nbool cmp(node x,node y)\n{\n\treturn x.w<y.w; \n}\n\nint main()\n{\tmemset(dp,0x3f,sizeof(dp));\n\tcin>>n>>m>>k;\n    for(int i=1;i<=m;++i) \n\t\tcin>>a[i].u>>a[i].v>>a[i].w;\n    sort(a+1,a+m+1,cmp);\n    for(int i=1;i<=min(k,m);i++) \n\t\tb[++cnt]=a[i].u,b[++cnt]=a[i].v;\n    sort(b+1,b+cnt+1);\n\tn=unique(b+1,b+cnt+1)-b-1;\n    for(int i=1;i<=min(k,m);++i) \n\t{\n        int from=lower_bound(b+1,b+n+1,a[i].u)-b;\n\t\tint to=lower_bound(b+1,b+n+1,a[i].v)-b;\n        dp[from][to]=a[i].w;\n\t\tdp[to][from]=a[i].w;\n    }\n    for(int kk=1;kk<=n;++kk) \n\t\tfor(int i=1;i<=n;++i) \n\t\t\tfor(int j=1;j<=n;++j)\n\t\t\t\tif(dp[i][kk]+dp[kk][j]<dp[i][j]) \n\t\t\t\t\tdp[i][j]=dp[i][kk]+dp[kk][j];\n    for(int i=1;i<=n;++i) \n\t\tfor(int j=i+1;j<=n;++j) \n\t\t\tif(dp[i][j]!=inf) \n\t\t\t\tdis[++tot]=dp[i][j];\n    sort(dis+1,dis+tot+1);\n    cout<<dis[k]<<endl;\n\treturn 0;   \n}\n```\n",
        "postTime": 1572432440,
        "uid": 132290,
        "name": "\u5f00\u59cb\u65b0\u7684\u8bb0\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1196F \u3010K-th Path\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6c42\u7b2cK\u5927\u8def\u5f84\uff08\u6ce8\u610f\u662f\u8def\u5f84\uff0c\u4e0d\u662fK\u77ed\u8def\uff09\n\n\u9996\u5148\uff0c\u5982\u679c\u53ea\u8003\u8651\u8fb9\uff0c\u90a3\u4e48\u6700\u591a\u6709k\u6761\u8fb9\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u8bf4\u7b54\u6848\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u7b2ck\u5c0f\u7684\u90a3\u6761\u8fb9\u3002\n\n\u65e2\u7136\u5982\u6b64\uff0c\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\u7684\u8def\u5f84\u80af\u5b9a\u4e5f\u662f\u7531k\u6761\u8def\u5f84\u76f8\u4e92\u7ec4\u5408\u4ea7\u751f\u7684\uff08\u5f88\u663e\u7136\uff0c\u5982\u679c\u6bd4\u7b2cK\u5c0f\u7684\u8fb9\u5927\u4e0d\u80af\u80fd\u66f4\u65b0\u7b54\u6848\uff09\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\u7684\u70b9\u6700\u591a\u53ea\u6709k\u7ea7\u522b\u7684\u3002\n\n\u90a3\u6211\u4eec\u5c31\u53ea\u52a0\u524dK\u5c0f\u7684\u8fb9\uff0c\u7136\u540e\u5bf9\u6240\u6709\u7684\u88ab\u52a0\u8fc7\u8fb9\u7684\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def\u53bb\u66f4\u65b0\u7b54\u6848\n\n\u8dd1\u6700\u77ed\u8def\u6211\u7528\u7684\u662fDj\uff0c\u590d\u6742\u5ea6$O(k^2logk)$\n\n\n```\n\n #include<bits/stdc++.h>\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\n#define int long long \nusing namespace std;\n \nconst int big=1e16;\n \ninline void read(int &x)\n{\n\tx=0;char ch=getchar();int pd=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')pd=-pd;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\tx*=pd;\n}\ninline void write(const int &x)\n{\n\tchar ggg[10001];int s=0;int tmp=x;\n\tif(tmp==0){putchar('0');return;}\n\tif(tmp<0){tmp=-tmp;putchar('-');}\n\twhile(tmp>0){ggg[s++]=tmp%10+'0';tmp/=10;}\n\twhile(s>0){putchar(ggg[--s]);}\n}\n \nconst int N=2e5+233;\n \nstruct dd\n{\n\tint end,nt,v;\n}e[N<<1];\n \nint t,h[N],cnt,b[N],dis[N],n,m,k;\n \nbool vis[N];\n \n \ninline void add(int begin,int end,int v)\n{\n\t++t;\n\te[t].end=end;\n\te[t].nt=h[begin];\n\th[begin]=t;\n\te[t].v=v;\n}\n \nstruct dian\n{\n\tint pos,val;\n\tinline bool operator < (const dian &nt) const \n\t{\n\t\treturn val>nt.val;\n\t}\n};\n \npriority_queue<dian>q;\npriority_queue<int ,vector <int > ,greater<int> > qu;\n \nvoid dj(int s)\n{\n\tfor(register int i=1;i<=cnt;++i)\n\t{\n\t\tdis[b[i]]=big;\n\t\tvis[b[i]]=0;\n\t}\n\tdis[s]=0;\n\tq.push((dian){s,0});\n\twhile(!q.empty())\n\t{\n\t\tint x=q.top().pos;\n\t\tq.pop();\n\t\tif(vis[x])continue;\n\t\tvis[x]=1;\n\t\tfor(register int i=h[x];i;i=e[i].nt)\n\t\t{\n\t\t\tint u=e[i].end;\n\t\t\tif(dis[x]+e[i].v<dis[u])\n\t\t\t{\n\t\t\t\tdis[u]=dis[x]+e[i].v;\n\t\t\t\tif(!vis[u])q.push((dian){u,dis[u]});\n\t\t\t}\n\t\t}\n\t}\n}\nstruct edge\n{\n\tint x,y,z;\n}z[N];\n \ninline bool cmp(const edge &x,const edge &y)\n{\n\treturn x.z<y.z;\n}\nint in[N];\nsigned main()\n{\n\tread(n);\n\tread(m);\n\tread(k);\n\tfor(register int i=1;i<=m;++i)\n\t{\n\t\tread(z[i].x);\n\t\tread(z[i].y);\n\t\tread(z[i].z);\n\t}\n\tsort(z+1,z+m+1,cmp);\n\tfor(register int i=1;i<=min(m,k);++i)\n\t{\n\t\tadd(z[i].x,z[i].y,z[i].z);\n\t\tadd(z[i].y,z[i].x,z[i].z);\n\t\tif(!in[z[i].x])b[++cnt]=z[i].x,in[z[i].x]=1;\n\t\tif(!in[z[i].y])b[++cnt]=z[i].y,in[z[i].y]=1;\n\t}\n\tfor(register int i=1;i<=cnt;++i)\n\t{\n\t\tdj(b[i]);\n\t\tfor(register int j=i+1;j<=cnt;++j)\n\t\t{\n\t\t\tqu.push(dis[b[j]]);\n\t\t}\n\t}\n\tfor(register int i=1;i<k;++i)qu.pop();\n\tcout<<qu.top()<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1564024288,
        "uid": 87026,
        "name": "\u4e24\u5e74\u6253\u94c1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1196F \u3010K-th Path\u3011"
    }
]