[
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/730/problem/L) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF730L)\n\n\u5927\u6a21\u62df\uff08\uff1f\uff09+\u963f\u5df4\u7ec6\u8282\u9898\uff0c\u6a21\u62df\u8d5b\u65f6\u521a\u4e86 3h \u6700\u540e\u56e0\u4e3a\u67d0\u4e2a\u7ec6\u8282\u5199\u6302 100->40/ll/ll\uff08\u4e0b\u6b21\u4e00\u5b9a\u4e0d\u80fd\u518d\u6302\u5206\u4e86\u554a awa\uff09\n\n\u9996\u5148\u5148\u8003\u8651\u600e\u4e48\u5224 $-1$\uff0c\u663e\u7136\u5982\u679c\u533a\u95f4 $[l,r]$ \u4e2d\u95f4\u7684\u62ec\u53f7\u6784\u4e0d\u6210\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u7b54\u6848\u663e\u7136\u662f $-1$\uff0c\u5176\u6b21\u5982\u679c $s_l$ \u662f\u52a0\u53f7\u6216\u4e58\u53f7\u90a3\u7b97\u5f0f\u4e5f\u4e0d\u5408\u6cd5\uff0c$s_r$ \u4e5f\u540c\u7406\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c+ST \u8868\u5728 $\\mathcal O(n\\log n)-\\mathcal O(1)$ \u65f6\u95f4\u5185\u5224\u65ad\u3002\n\n\u5176\u6b21\u8003\u8651\u600e\u6837\u8ba1\u7b97\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u9996\u5148\u6309\u7167\u5957\u8def\u5efa\u51fa\u8868\u8fbe\u5f0f\u6811\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u5efa\u8868\u8fbe\u5f0f\u6811\u4e0e\u5e73\u5e38\u7565\u5fae\u6709\u70b9\u4e0d\u540c\uff0c\u5e73\u5e38\u6211\u4eec\u5efa\u7684\u8868\u8fbe\u5f0f\u6811\u90fd\u662f\u4e8c\u53c9\u6811\uff0c\u5373\u5c06\u8fd0\u7b97\u7b26\u653e\u5728\u4e2d\u95f4\uff0c\u53c2\u4e0e\u8fd0\u7b97\u7684\u4e24\u4e2a\u90e8\u5206\u4f5c\u4e3a\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\uff0c\u8fd9\u6b21\u54b1\u4eec\u504f\u4e0d\u5efa\u4e8c\u53c9\u6811\uff0c\u54b1\u4eec\u5efa\u591a\u53c9\u6811\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u62ec\u53f7\u5185\u7684\u7edf\u8ba1\u8fd0\u7b97\u6211\u4eec\u540c\u65f6\u5c06\u5b83\u4eec\u8bbe\u4e3a\u8be5\u8fd0\u7b97\u4ee3\u8868\u7684\u8282\u70b9\u7684\u513f\u5b50\uff08\u6bd4\u65b9\u8bf4 $1+2\\times 3+4\\times 5$ \u7684\u6839\u8282\u70b9\u5c31\u6709 $3$ \u4e2a\u513f\u5b50 $1,2\\times 3,4\\times 5$\uff0c\u4e2d\u95f4\u8fd0\u7b97\u7b26\u4e3a\u52a0\u53f7\uff09\uff0c\u6211\u4eec\u540c\u65f6\u8bb0\u5f55\u8fd9\u4e9b\u513f\u5b50\u6267\u884c\u7684\u8fd0\u7b97\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u5bf9\u4e8e\u7684\u533a\u95f4\uff0c\u6bd4\u65b9\u8bf4 $2\\times 3$ \u8fd9\u4e2a\u513f\u5b50\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u533a\u95f4\u5c31\u662f $[3,5]$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u800c\u8a00\uff0c\u5982\u679c\u5b83\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6570\uff08\u6bd4\u65b9\u8bf4 $1234$ \u6216 $(((7)))$\uff09\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u6570\u5373\u53ef\uff0c\u5426\u5219\u6211\u4eec\u627e\u51fa\u8ba1\u7b97\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u65f6\u6700\u540e\u4e00\u6b21\u6267\u884c\u7684\u8fd0\u7b97\u8868\u793a\u7684\u8282\u70b9 $x$\uff0c\u663e\u7136 $x$ \u8868\u793a\u7684\u8fd0\u7b97\u6709\u52a0\u53f7\u6216\u4e58\u53f7\u4e24\u79cd\u53ef\u80fd\uff0c\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n\u9996\u5148\u8003\u8651\u4e58\u6cd5\uff0c\u6211\u4eec\u5047\u8bbe $x$ \u7684\u513f\u5b50\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u533a\u95f4\u5206\u522b\u4e3a $[a_1,b_1],[a_2,b_2],\\cdots,[a_m,b_m]$\uff0c\u90a3\u4e48\u6211\u4eec\u4e8c\u5206\u627e\u51fa $l,r$ \u6240\u5728\u7684\u533a\u95f4\uff0c\u5047\u8bbe\u4e3a $[a_L,b_L]$ \u548c $[a_R,b_R]$\uff0c\u663e\u7136\u8fd9\u4e9b\u533a\u95f4\u5728 $[l,r]$ \u4e2d\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u4e2a\u6574\u6bb5+\u8fb9\u4e0a\u4e24\u4e2a\u6563\u5757\uff0c\u4e2d\u95f4\u90e8\u5206\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u663e\u7136\u662f\u5b8c\u6574\u7684\uff0c\u76f4\u63a5\u524d\u7f00\u79ef\u5373\u53ef $\\mathcal O(1)$ \u6c42\u51fa\uff0c\u6ce8\u610f\u7279\u5224\u524d\u7f00\u79ef\u4e3a $0$ \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u9700\u8bb0\u5f55\u524d\u7f00 $0$ \u7684\u4e2a\u6570\u52a0\u4ee5\u5224\u65ad\uff0c\u5bf9\u4e8e\u8fb9\u4e0a\u4e24\u5757\u7684\u60c5\u51b5\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\u6709\u53ef\u80fd\u4e24\u8fb9\u4e5f\u662f\u6574\u5757\u8d21\u732e\uff0c\u8fd9\u65f6\u5019\u76f4\u63a5\u8ba1\u5165\u7b54\u6848\u5373\u53ef\uff0c\u4e5f\u6709\u53ef\u80fd\u4e24\u8fb9\u662f\u67d0\u4e00\u6bb5\u6570\u8ba1\u5165\u8d21\u732e\uff08\u6bd4\u65b9\u8bf4 $12\\times 34\\times 56$\uff0c\u5bf9\u4e8e\u8be2\u95ee $[2,7]$ \u800c\u8a00\uff0c\u5de6\u8fb9\u7684 $12$ \u548c\u53f3\u8fb9\u7684 $56$ \u5c31\u5206\u522b\u88ab\u4e00\u5206\u4e3a\u4e8c\uff09\uff0c\u6b64\u65f6\u5199\u4e00\u4e2a\u7c7b\u4f3c\u54c8\u5e0c\u7684\u4e1c\u897f\u5feb\u901f\u6c42\u51fa\u4e00\u6bb5\u533a\u95f4\u8868\u793a\u7684\u6570\u5373\u53ef\u5728\u5e38\u6570\u65f6\u95f4\u5185\u7d2f\u52a0\u8d21\u732e\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u52a0\u6cd5\uff0c\u548c\u4e58\u6cd5\u7c7b\u4f3c\uff0c\u6211\u4eec\u8fd8\u662f\u627e\u51fa $l,r$ \u6240\u5728\u7684\u533a\u95f4 $[a_L,b_L]$ \u548c $[a_R,b_R]$\uff0c\u8fd9\u4e9b\u533a\u95f4\u5728 $[l,r]$ \u4e2d\u7684\u90e8\u5206\u8fd8\u662f\u4e00\u4e2a\u4e2a\u6574\u6bb5+\u8fb9\u4e0a\u4e24\u4e2a\u6563\u5757\uff0c\u5bf9\u4e8e\u4e2d\u95f4\u90e8\u5206\u5bf9\u524d\u7f00\u548c\u641e\u4e00\u4e0b\u5373\u53ef\uff0c\u5bf9\u4e8e\u8fb9\u4e0a\u4e24\u5757\u7684\u60c5\u51b5\u8fd8\u662f\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\u524d\u4e24\u7c7b\uff08\u6574\u5757\u8d21\u732e&\u67d0\u4e2a\u6570\u4e00\u5206\u4e3a\u4e8c\uff09\u4e0e\u4e58\u6cd5\u4e00\u6837\u4e0d\u518d\u8d58\u8ff0\uff0c\u4f46\u662f\u52a0\u6cd5\u6bd4\u4e58\u6cd5\u591a\u7684\u4e00\u79cd\u60c5\u51b5\u662f\uff0c\u6709\u53ef\u80fd\u8fb9\u89d2\u5757\u5bf9\u5e94\u7684\u8fd0\u7b97\u662f\u4e00\u4e2a\u5e8f\u5217\u7684\u4e58\u6cd5\u8fd0\u7b97\uff08\u6bd4\u65b9\u8bf4 $12\\times 34+56\\times 78$ \u5bf9\u4e8e\u8be2\u95ee $[2,10]$ \u800c\u8a00\uff0c\u5de6\u8fb9\u533a\u95f4\u8ba1\u5165\u8d21\u732e\u7684\u90e8\u5206\u5c31\u662f $2\\times 34$\uff0c\u53f3\u8fb9\u90e8\u5206\u4e5f\u540c\u7406\uff09\uff0c\u4ee5\u5de6\u8fb9\u7684\u6563\u5757\u4e3a\u4f8b\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u627e\u5230 $[a_L,b_L]$ \u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u4e8c\u5206\u4e00\u4e0b\u4e58\u6cd5\u5bf9\u5e94\u7684\u533a\u95f4\uff08\u663e\u7136\u662f\u4e00\u6bb5\u540e\u7f00\uff09\uff0c\u7136\u540e\u8fd8\u662f\u524d\u7f00\u79ef\u7b97\u4e00\u7b97\u5373\u53ef\uff0c\u6ce8\u610f\uff0c\u5728\u8fd9\u90e8\u5206\u91cc\u7684\u4e58\u6cd5\u64cd\u4f5c\u4e2d\u8fd8\u662f\u6709\u53ef\u80fd\u51fa\u73b0\u67d0\u4e2a\u6570\u4e00\u5206\u4e3a\u4e8c\u7684\u60c5\u51b5\uff0c\u6ce8\u610f\u5224\u65ad\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n\\log n$\uff0c\u6ce8\u610f\u7279\u5224\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u60c5\u51b5\uff0c\u6bd4\u65b9\u8bf4 $((((((1145141919810))))))$ \u6216\u8005 $(998244353)\\times (19260817)$\uff0c\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u8fb9\u6709\u4e2a\u7ec6\u8282\u5199\u6302\u4e86\u800c\u4e22\u4e86 60pts/ll\n\n\u4ee3\u7801\uff08\u7801\u4e86 238 \u884c\uff0c\u73b0\u4ee5\u540a\u6253\u5207\u6811\u6e38\u620f\u3001\u540a\u6253 CF788E\uff0c\u8363\u81ba\u6211 AC \u7684\u9898\u76ee\u4e2d\u7684\u7801\u91cf\u4e4b\u6700\uff09\n\n```cpp\nconst int MAXN=5e5;\nconst int LOG_N=20;\nconst int MOD=1e9+7;\nint qpow(int x,int e){\n\tint ret=1;\n\tfor(;e;e>>=1,x=1ll*x*x%MOD) if(e&1) ret=1ll*ret*x%MOD;\n\treturn ret;\n}\nint n,qu,ncnt,sum[MAXN+5],dep[MAXN+5];char s[MAXN+5];\nint nt[MAXN+5],pr[MAXN+5];\nvector<int> son[MAXN+5];\nvector<pii> itvl[MAXN+5];\nint mch[MAXN+5],rt,bel[MAXN+5],op[MAXN+5],val[MAXN+5];\nint pre[MAXN+5],pw10[MAXN+5];\nint getnum(int l,int r){return (pre[r]-1ll*pre[l-1]*pw10[r-l+1]%MOD+MOD)%MOD;}\nint build(int l,int r){\n\tif(s[l]=='('&&mch[l]==r) return bel[l]=bel[r]=build(l+1,r-1);\n\tint opt=-1,id=++ncnt;\n\tfor(int i=l;i<=r;){\n\t\tif(s[i]=='+') opt=0;\n\t\telse if(s[i]=='*'&&!~opt) opt=1;\n\t\tif(s[i]=='(') i=mch[i]+1;\n\t\telse i++;\n\t} op[id]=opt;\n\tif(!~opt){\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tbel[i]=id;\n\t\t\tval[id]=(10ll*val[id]+s[i]-'0')%MOD;\n\t\t} return id;\n\t} int pre=l-1;\n\tfor(int i=l;i<=r;){\n\t\tif((s[i]=='+'&&!opt)||(s[i]=='*'&&opt)){\n\t\t\tson[id].pb(build(pre+1,i-1));\n\t\t\titvl[id].pb(mp(pre+1,i-1));\n\t\t\tpre=i;bel[i]=id;\n\t\t} if(s[i]=='(') i=mch[i]+1;\n\t\telse i++;\n\t} son[id].pb(build(pre+1,r));itvl[id].pb(mp(pre+1,r));\n//\tprintf(\"build [%d,%d]:\\n\",l,r);\n//\tprintf(\"op[%d]=%d\\n\",id,op[id]);\n//\tfor(int x:son[id]) printf(\"%d \",x);printf(\"\\n\");\n//\tfor(pii p:itvl[id]) printf(\"[%d,%d]\\n\",p.fi,p.se);\n//\tprintf(\"\\n\");\n\treturn id;\n}\nstruct num0{\n\tint x,y;\n\tnum0(int _x=0){(_x)?(x=_x,y=0):(x=y=1);}\n\tint val(){return (y)?0:x;}\n\tnum0 operator +(const int &rhs){\n\t\tint sum=(val()+rhs)%MOD;\n\t\treturn (sum)?num0(sum):num0(0);\n\t}\n\tnum0 operator *(const int &rhs){\n\t\tnum0 res=*this;\n\t\t(rhs)?(res.x=1ll*res.x*rhs%MOD):(res.y++);\n\t\treturn res;\n\t}\n\tnum0 operator /(const num0 &rhs){\n\t\tnum0 res;res.x=1ll*x*qpow(rhs.x,MOD-2)%MOD;\n\t\tres.y=y-rhs.y;return res;\n\t}\n};\nvector<num0> ss[MAXN+5];\nvoid calc(int x){\n\tif(~op[x]) val[x]=op[x];\n\tss[x].resize(son[x].size());\n\tfor(int i=0;i<son[x].size();i++){\n\t\tint y=son[x][i];dep[y]=dep[x]+1;calc(y);\n\t\tif(!i) ss[x][i]=val[y];\n\t\tif(op[x]==0){\n\t\t\tval[x]=(val[x]+val[y])%MOD;\n\t\t\tif(i) ss[x][i]=ss[x][i-1]+val[y];\n\t\t} else {\n\t\t\tval[x]=1ll*val[x]*val[y]%MOD;\n\t\t\tif(i) ss[x][i]=ss[x][i-1]*val[y];\n\t\t}\n//\t\tprintf(\"%d %d %d\\n\",x,i,ss[x][i].val());\n\t}\n}\nint st_sum[MAXN+5][LOG_N+2];\npii st_dep[MAXN+5][LOG_N+2];\nvoid buildst(){\n\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j+(1<<i)-1<=n;j++){\n\t\tst_sum[j][i]=min(st_sum[j][i-1],st_sum[j+(1<<i-1)][i-1]);\n\t\tst_dep[j][i]=min(st_dep[j][i-1],st_dep[j+(1<<i-1)][i-1]);\n\t}\n}\nint query_sum(int l,int r){\n\tint k=31-__builtin_clz(r-l+1);\n\treturn min(st_sum[l][k],st_sum[r-(1<<k)+1][k]);\n}\npii query_dep(int l,int r){\n\tint k=31-__builtin_clz(r-l+1);\n\treturn min(st_dep[l][k],st_dep[r-(1<<k)+1][k]);\n}\nint main(){\n//\tfreopen(\"calc.in\",\"r\",stdin);\n//\tfreopen(\"calc.out\",\"w\",stdout);\n\tscanf(\"%s%d\",s+1,&qu);n=strlen(s+1);\n\tfor(int i=1;i<=n;i++){\n\t\tif(isdigit(s[i])) pre[i]=(10ll*pre[i-1]+s[i]-'0')%MOD;\n\t\telse pre[i]=pre[i-1];\n\t}\n\tfor(int i=(pw10[0]=1);i<=n;i++) pw10[i]=10ll*pw10[i-1]%MOD;\n\tstack<int> stk;\n\tfor(int i=1;i<=n;i++){\n\t\tif(s[i]=='(') stk.push(i),sum[i]=sum[i-1]+1;\n\t\telse if(s[i]==')'){\n\t\t\tmch[i]=stk.top();mch[stk.top()]=i;\n\t\t\tstk.pop();sum[i]=sum[i-1]-1;\n\t\t} else sum[i]=sum[i-1];\n\t}\n\tint pp=n+1;\n\tfor(int i=n;i;i--){\n\t\tif(!isdigit(s[i])) pp=i;\n\t\telse nt[i]=pp-1;\n\t} pp=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(!isdigit(s[i])) pp=i;\n\t\telse pr[i]=pp+1;\n\t}\n//\tfor(int i=1;i<=n;i++) printf(\"%d%c\",mch[i],\" \\n\"[i==n]);\n\trt=build(1,n);calc(rt);\n//\tfor(int i=1;i<=n;i++) printf(\"%d%c\",bel[i],\" \\n\"[i==n]);\n\tfor(int i=1;i<=n;i++) st_sum[i][0]=sum[i],st_dep[i][0]=mp(dep[bel[i]],i);\n\tbuildst();\n\twhile(qu--){\n\t\tint l,r;scanf(\"%d%d\",&l,&r);\n\t\tif(sum[l-1]!=sum[r]){puts(\"-1\");continue;}\n\t\tif(query_sum(l,r)<sum[l-1]){puts(\"-1\");continue;}\n\t\tif(s[l]=='+'||s[l]=='*'){puts(\"-1\");continue;}\n\t\tif(s[r]=='+'||s[r]=='*'){puts(\"-1\");continue;}\n\t\tpii p=query_dep(l,r);int x=bel[p.se];\n//\t\tprintf(\"%d\\n\",x);\n\t\tif(!~op[x]){\n\t\t\tif(isdigit(s[l])&&isdigit(s[r])) printf(\"%d\\n\",getnum(l,r));\n\t\t\telse printf(\"%d\\n\",val[x]);\n\t\t\tcontinue;\n\t\t}\n\t\tint L=upper_bound(itvl[x].begin(),itvl[x].end(),mp(l,n+1))-itvl[x].begin()-1;\n\t\tint R=upper_bound(itvl[x].begin(),itvl[x].end(),mp(r,n+1))-itvl[x].begin()-1;\n\t\tif(L<0) L=0;\n\t\tint u=son[x][L],v=son[x][R];\n//\t\tprintf(\"%d %d\\n\",L,R);\n\t\tif(op[x]==1){\n\t\t\tint res=1;\n\t\t\tif(L!=R){\n\t\t\t\tnum0 qwq=ss[x][R-1]/ss[x][L];\n\t\t\t\tres=qwq.val();\n\t\t\t}\n\t\t\tif(~op[u]) res=1ll*res*val[u]%MOD;\n\t\t\telse{\n\t\t\t\tif(isdigit(s[l])) res=1ll*res*getnum(l,nt[l])%MOD;\n\t\t\t\telse res=1ll*res*val[u]%MOD;\n\t\t\t} if(~op[v]) res=1ll*res*val[v]%MOD;\n\t\t\telse{\n\t\t\t\tif(isdigit(s[r])) res=1ll*res*getnum(pr[r],r)%MOD;\n\t\t\t\telse res=1ll*res*val[v]%MOD;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",res);\n\t\t} else {\n\t\t\tint res=0;\n\t\t\tif(L!=R) res=(ss[x][R-1].val()-ss[x][L].val()+MOD)%MOD;\n\t\t\tif(~op[u]){\n\t\t\t\tif(op[u]==0) res=(res+val[u])%MOD;\n\t\t\t\telse{\n\t\t\t\t\tint LL=upper_bound(itvl[u].begin(),itvl[u].end(),mp(l,n+1))-itvl[u].begin()-1;\n\t\t\t\t\tif(LL<0) LL=0;\n\t\t\t\t\tint su=son[u][LL],mul=1;\n\t\t\t\t\tif(LL+1!=ss[u].size())\n\t\t\t\t\t\tmul=(ss[u].back()/ss[u][LL]).val();\n\t\t\t\t\tif(~op[su]) mul=1ll*mul*val[su]%MOD;\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(isdigit(s[l])) mul=1ll*mul*getnum(l,nt[l])%MOD;\n\t\t\t\t\t\telse mul=1ll*mul*val[su]%MOD;\n\t\t\t\t\t}\n\t\t\t\t\tres=(res+mul)%MOD;\n\t\t\t\t}\n\t\t\t} else{\n\t\t\t\tif(isdigit(s[l])) res=(res+getnum(l,nt[l]))%MOD;\n\t\t\t\telse res=(res+val[u])%MOD;\n\t\t\t}\n\t\t\tif(~op[v]){\n\t\t\t\tif(op[v]==0) res=(res+val[v])%MOD;\n\t\t\t\telse{\n\t\t\t\t\tint RR=upper_bound(itvl[v].begin(),itvl[v].end(),mp(r,n+1))-itvl[v].begin()-1;\n\t\t\t\t\tint sv=son[v][RR],mul=1;\n\t\t\t\t\tif(RR) mul=(ss[v][RR-1]).val();\n\t\t\t\t\tif(~op[sv]) mul=1ll*mul*val[sv]%MOD;\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(isdigit(s[r])) mul=1ll*mul*getnum(pr[r],r)%MOD;\n\t\t\t\t\t\telse mul=1ll*mul*val[sv]%MOD;\n\t\t\t\t\t}\n\t\t\t\t\tres=(res+mul)%MOD;\n\t\t\t\t}\n\t\t\t} else{\n\t\t\t\tif(isdigit(s[r])) res=(res+getnum(pr[r],r))%MOD;\n\t\t\t\telse res=(res+val[v])%MOD;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",res);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1626100927,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF730L Expression Queries"
    },
    {
        "content": "\u5728\u4e32\u7684\u4e24\u8fb9\u52a0\u4e00\u5bf9\u62ec\u53f7\uff0c\u7136\u540e\u5efa\u51fa\u8868\u8fbe\u5f0f\u6811\u3002\n\n\u8fd9\u91cc\u7684\u8868\u8fbe\u5f0f\u6811\u5e76\u975e\u5e38\u89c4\u7684\u8868\u8fbe\u5f0f\u6811\u2014\u2014\u5bf9\u4e8e\u4e00\u8fde\u4e32 `+` \u8fde\u63a5\u7740\u7684\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u5c06\u5176\u4ece\u5de6\u5230\u53f3\u4f5c\u4e3a\u7236\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c`*` \u8fde\u63a5\u7740\u7684\u540c\u7406\u3002\n\n\u4e3a\u4e86\u8ba9\u8fd9\u68f5\u6811\u957f\u5f97\u66f4\u52a0\u6807\u81f4\uff0c\u6211\u4eec\u5c06\u6240\u6709\u70b9\u5206\u62103\u7c7b\uff1a\n\n0. \u62ec\u53f7\u70b9\uff0c\u5176\u5185\u90e8\u662f\u4e00\u4e2a\u7531 `+` \u8fde\u63a5\u7684\u5f0f\u5b50\uff08\u53ef\u4ee5\u53ea\u6709\u4e00\u9879\uff09\u3002\n1. `+` \u70b9\uff0c\u5373\u4e00\u4e2a\u7531 `+` \u8fde\u63a5\u7684\u5f0f\u5b50\u4e2d\u7684\u4e00\u9879\uff0c\u5185\u90e8\u662f\u4e00\u4e2a\u7531 `*` \u8fde\u63a5\u7684\u5f0f\u5b50\uff08\u53ef\u4ee5\u53ea\u6709\u4e00\u9879\uff09\u3002\n2. `*` \u70b9\uff0c\u5176\u8981\u4e48\u4ec5\u4ec5\u662f\u4e00\u4e32\u6570\uff08\u6b64\u65f6\u6ca1\u6709\u513f\u5b50\uff09\uff0c\u8981\u4e48\u6709\u552f\u4e00\u7684\u513f\u5b50\u2014\u2014\u4e00\u4e2a0\u70b9\u3002\n\n\u8fd9\u6837\u7684\u6811\u867d\u7136\u8282\u70b9\u6570\u53ef\u80fd\u662f $1.5n$\uff0c\u6709\u5f88\u591a\u8282\u70b9\u4e5f\u662f\u5197\u4f59\u7684\uff0c\u4f46\u662f\u5374\u6709\u7740\u5f88\u597d\u7684\u7ed3\u6784\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e00\u6b21\u8be2\u95ee\u3002\u663e\u7136\uff0c\u5176\u4e0d\u4e3a $-1$\uff0c\u5f53\u4e14\u4ec5\u5f53\u5de6\u53f3\u7aef\u70b9\u5916\u5c42\u62ec\u53f7\u76f8\u540c\u3002\n\n\u7136\u540e\u8003\u8651\u56de\u7b54\u8be2\u95ee\u3002\u6211\u4eec\u627e\u5230\u5de6\u53f3\u7aef\u70b9\u5916\u5c42\u62ec\u53f7\u6240\u5bf9\u5e94\u7684\u62ec\u53f7\u70b9\u3002\u4e8c\u5206\u627e\u5230\u8be5\u62ec\u53f7\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e2d\uff0c\u533a\u95f4\u5305\u542b\u5de6\u53f3\u7aef\u70b9\u7684\u90a3\u4e24\u4e2a\u3002\u5219\uff0c\u6b64\u4e24\u4e2a\u8282\u70b9\u4e2d\u95f4\u5939\u7740\u7684\u6240\u6709\u70b9\uff0c\u663e\u7136\u8d21\u732e\u5c31\u662f\u5b83\u4eec\u7684\u503c\u4e4b\u548c\u3002\u4f7f\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u7136\u540e\u8003\u8651\u5305\u542b\u5de6\u53f3\u7aef\u70b9\u7684\u90a3\u4e24\u4e2a `+` \u70b9\u3002\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4e8c\u5206\u627e\u5230\u5176\u6240\u6709\u5b50\u8282\u70b9\u4e2d\u5305\u542b\u5de6\u53f3\u7aef\u70b9\u7684\u90a3\u4e24\u4e2a\u3002\u5219\u6b64\u4e8c\u8282\u70b9\u4e2d\u95f4\u5939\u7740\u7684\u6240\u6709\u70b9\u8d21\u732e\u662f\u5b83\u4eec\u7684\u503c\u4e4b\u79ef\u3002\u4f7f\u7528\u524d\u7f00\u79ef\u7ef4\u62a4\u4e00\u4e0b\u2014\u2014\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u6709 $0$\u3002\u989d\u5916\u7ef4\u62a4\u4e00\u4e0b\u6240\u6709 $0$ \u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5e76\u7ef4\u62a4\u975e\u96f6\u5143\u7d20\u7684\u524d\u7f00\u79ef\u5373\u53ef\u3002\u8fd9\u662f\u8001\u5957\u8def\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u5305\u542b\u5de6\u53f3\u7aef\u70b9\u7684\u90a3\u4e24\u4e2a `*` \u70b9\u3002\u5176\u8981\u4e48\u662f\u4e00\u4e2a\u62ec\u53f7\uff0c\u8981\u4e48\u662f\u4e00\u4e32\u6570\u3002\u5982\u679c\u662f\u62ec\u53f7\u5219\u663e\u7136\u5176\u5e94\u8be5\u88ab\u5b8c\u6574\u5730\u5305\u62ec\u5728\u533a\u95f4\u5185\u2014\u2014\u56e0\u4e3a\u5982\u679c\u5176\u672a\u88ab\u5b8c\u6574\u5305\u62ec\uff0c\u5219\u663e\u7136\u62ec\u53f7\u5c31\u6ca1\u6709\u88ab\u5b8c\u5168\u5339\u914d\uff0c\u8868\u8fbe\u5f0f\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u6b64\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6b64\u62ec\u53f7\u5185\u90e8\u8868\u8fbe\u5f0f\u7684\u503c\uff1b\u5426\u5219\uff0c\u5176\u662f\u4e00\u4e32\u6570\uff0c\u90a3\u5c31\u8fd8\u662f\u524d\u7f00\u548c\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd8\u9700\u8981\u7279\u5224\u3002\n\n\u9996\u5148\u8981\u7279\u5224\u4e24\u4e2a `+` \u70b9\u76f8\u540c\u7684\u60c5\u5f62\u3002\u6b64\u65f6\u5408\u6cd5\u7684 `*` \u70b9\u662f\u6b64\u70b9\u7684\u4e00\u6bb5\u5b50\u533a\u95f4\u3002\n\n\u4f46\u662f\uff0c\u5728\u4e0a\u8ff0\u7279\u5224\u7684\u524d\u63d0\u4e0b\uff0c\u8fd8\u8981\u7ee7\u7eed\u7279\u5224\u4e24\u4e2a `*` \u70b9\u76f8\u540c\u7684\u60c5\u5f62\u3002\u6b64\u65f6\u8be2\u95ee\u7684\u662f\u8be5 `*` \u70b9\u5bf9\u5e94\u7684\u6574\u4e2a\u62ec\u53f7\uff08\u5982\u679c\u5176\u5bf9\u5e94\u7684\u662f\u62ec\u53f7\u7684\u8bdd\uff09\uff0c\u6216\u8005\u5176\u5bf9\u5e94\u7684\u4e32\u7684\u4e00\u6bb5\u5b50\u4e32\uff08\u5982\u679c\u5176\u5bf9\u5e94\u7684\u662f\u4e32\u7684\u8bdd\uff09\u3002\n\n\u7ec6\u8282\u5f88\u591a\uff0c\u8981\u6ce8\u610f\u8d8a\u754c\u4ec0\u4e48\u7684\uff0c\u6bd4\u8f83\u70e6\u4eba\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//following:a whole piece of shit.\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=1e9+7;\nint ksm(int x,int y=mod-2){int z=1;for(;y;y>>=1,x=1ll*x*x%mod)if(y&1)z=1ll*z*x%mod;return z;}\nconst int inv10=ksm(10);\nint n,m,pos[400100],cnt,lp[1200100],rp[1200100],tp[1200100];//0:bracket 1:plus 2:times.\nint ten[400100],net[400100];\nchar s[400100];\nvector<int>v[1200100];\nvector<int>pre[1200100],zer[1200100];\nstack<int>stk;\nvoid dfs(int x){\n\tif(tp[x]==0)pre[x].push_back(0);\n\tif(tp[x]==1)pre[x].push_back(1);\n\tfor(auto y:v[x]){\n\t\tdfs(y);\n\t\tif(tp[x]==0)pre[x].push_back((pre[x].back()+(zer[y].empty()?pre[y].back():0))%mod);\n\t\tif(tp[x]==1){\n\t\t\tif(pre[y].back()==0)zer[x].push_back(pre[x].size()),pre[x].push_back(pre[x].back());\n\t\t\telse pre[x].push_back(1ll*pre[x].back()*pre[y].back()%mod);\n\t\t}\n\t}\n\tif(tp[x]==2){\n\t\tif(!v[x].empty())pre[x].push_back(pre[v[x].back()].back());\n\t\telse{\n\t\t\tpre[x].push_back(0);\n\t\t\tfor(int i=lp[x];i<=rp[x];i++)pre[x].push_back((10ll*pre[x].back()+s[i]-'0')%mod);\n\t\t}\n\t}\n}\n#define all(x) x.begin(),x.end()\nint calc(int x,int l,int r){\n\tif(!v[x].empty())return pre[x].back();\n\treturn (pre[x][r-lp[x]+1]+mod-1ll*pre[x][l-lp[x]]*ten[r-l+1]%mod)%mod;\n}\nint CALC(int x,int l,int r){\n//\tprintf(\"%d %d\\n\",l,r);\n//\tfor(auto i:zer[x])printf(\"%d \",i);puts(\"\");\n//\tprintf(\"%d %d\\n\",r,pre[x].size());\n\tauto it=upper_bound(all(zer[x]),l);\n\tif(it!=zer[x].end()&&*it<=r)return 0;\n\tif(!r)return 1;\n\tif(l==v[x].size()+1)return 1;\n//\tprintf(\"[%d,%d]<%d,%d>\\n\",l,r,pre[x][r],pre[x][l+1]);\n\treturn 1ll*pre[x][r]*ksm(pre[x][l+1])%mod;\n}\nint main(){\n\tscanf(\"%s\",s+1),n=strlen(s+1);\n\tten[0]=net[0]=1;for(int i=1;i<=n;i++)ten[i]=10ll*ten[i-1]%mod,net[i]=1ll*inv10*net[i-1]%mod;\n\ts[0]='(',s[n+1]=')';\n\tfor(int i=0;i<=n+1;i++){\n\t\tif(s[i]=='(')stk.push(++cnt),lp[cnt]=i,tp[cnt]=0;\n\t\tpos[i]=stk.top();\n\t\tif(s[i]==')')rp[stk.top()]=i,stk.pop();\n\t}\n\tfor(int i=0;i<=n+1;i++){\n//\t\tprintf(\"%d:%d %c\\n\",i,stk.size(),s[i]);\n\t\tif(s[i]=='('){\n\t\t\tif(!stk.empty())v[stk.top()].push_back(pos[i]);\n\t\t\tstk.push(pos[i]);\n\t\t\ttp[++cnt]=1,lp[cnt]=i+1,stk.push(cnt);\n\t\t\ttp[++cnt]=2,lp[cnt]=i+1,stk.push(cnt);\n\t\t}\n\t\tif(s[i]=='+'){\n\t\t\tint tms=stk.top();stk.pop();\n\t\t\trp[tms]=i-1;\n\t\t\tint pls=stk.top();stk.pop();\n\t\t\trp[pls]=i-1;\n\t\t\tint bra=stk.top();\n\t\t\tv[pls].push_back(tms);\n\t\t\tv[bra].push_back(pls);\n\t\t\ttp[++cnt]=1,lp[cnt]=i+1,stk.push(cnt);\n\t\t\ttp[++cnt]=2,lp[cnt]=i+1,stk.push(cnt);\n\t\t}\n\t\tif(s[i]=='*'){\n\t\t\tint tms=stk.top();stk.pop();\n\t\t\trp[tms]=i-1;\n\t\t\tint pls=stk.top();\n\t\t\tv[pls].push_back(tms);\n\t\t\ttp[++cnt]=2,lp[cnt]=i+1,stk.push(cnt);\n\t\t}\n\t\tif(s[i]==')'){\n\t\t\tint tms=stk.top();stk.pop();\n\t\t\trp[tms]=i-1;\n\t\t\tint pls=stk.top();stk.pop();\n\t\t\trp[pls]=i-1;\n\t\t\tint bra=stk.top();stk.pop();\n\t\t\tv[pls].push_back(tms);\n\t\t\tv[bra].push_back(pls);\n\t\t}\n\t}\n//\tfor(int i=1;i<=n;i++)printf(\"%d \",pos[i]);puts(\"\");\n\tdfs(1);\n/*\tfor(int i=1;i<=cnt;i++){\n\t\tprintf(\"%d(%d)[%d,%d]<%d,%d>\",i,tp[i],lp[i],rp[i],pre[i].back(),zer[i].empty());\n\t\tfor(auto j:v[i])printf(\"%d \",j);puts(\"\");\n\t}*/\n\tscanf(\"%d\",&m);\n\tfor(int i=1,l,r;i<=m;i++){\n\t\tscanf(\"%d%d\",&l,&r);\n//\t\tfor(int x=l;x<=r;x++)putchar(s[x]);puts(\"\");\n\t\tif(pos[l-1]!=pos[r+1]||s[l]=='+'||s[l]=='*'||s[r]=='+'||s[r]=='*'){puts(\"-1\");continue;}\n\t\tint x=pos[l-1];\n\t\tlp[0]=l;\n\t\tint p=upper_bound(all(v[x]),0,[](int a,int b){return lp[a]<lp[b];})-v[x].begin()-1;\n\t\tint P=v[x][p];\n\t\tint _p=upper_bound(all(v[P]),0,[](int a,int b){return lp[a]<lp[b];})-v[P].begin()-1;\n\t\tint _P=v[P][_p];\n\t\trp[0]=r;\n\t\tint q=lower_bound(all(v[x]),0,[](int a,int b){return rp[a]<rp[b];})-v[x].begin();\n\t\tint Q=v[x][q];\n\t\tint _q=lower_bound(all(v[Q]),0,[](int a,int b){return rp[a]<rp[b];})-v[Q].begin();\n\t\tint _Q=v[Q][_q];\n//\t\tprintf(\"X%dp%dP%d_p%d_P%dq%dQ%d_q%d_Q%d\\n\",x,p,P,_p,_P,q,Q,_q,_Q);\n\t\tif(p==q&&_p==_q){printf(\"%d\\n\",calc(_P,l,r));continue;}\n\t\tint pp=calc(_P,l,rp[_P]);\n\t\tint qq=calc(_Q,lp[_Q],r);\n//\t\tprintf(\"[%d %d]\\n\",pp,qq);\n\t\tif(p==q){printf(\"%d\\n\",1ll*pp*CALC(P,_p,_q)%mod*qq%mod);continue;}\n\t\tpp=1ll*pp*CALC(P,_p,v[P].size())%mod;\n\t\tqq=1ll*qq*CALC(Q,-1,_q)%mod;\n//\t\tprintf(\"[%d %d]\\n\",pp,qq);\n\t\tprintf(\"%d\\n\",(0ll+pp+(pre[x][q]+mod-pre[x][p+1])%mod+qq)%mod);\n\t}\n\treturn 0;\n} \n```\n\n",
        "postTime": 1626094979,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF730L\u3010Expression Queries\u3011"
    }
]