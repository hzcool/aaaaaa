[
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u4e0d\u96be\uff0c\u5efa\u8bae\u8bc4\u6210\u7d2b\u9898\u3002\n\n\u8003\u8651\u5e76\u67e5\u96c6\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u7aef\u70b9$l$,$r$,\u5224\u65ad\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u4e2d\uff0c\u6ca1\u6709\u5c31\u5408\u5e76\uff0c\u540c\u65f6\u628a\u5bf9\u5e94\u503c\u6539\u6210$x$^$num[l]$^$num[r]$\n\n\u6ce8\u610f\u4e0d\u662f$x$^$num[find(l)]$^$num[find(r)]$\n\n\u7136\u540e\u67e5\u8be2\u5dee\u4e0d\u591a\n\n\u4e0d\u518d\u540c\u4e00\u4e2a\u96c6\u5408\u663e\u7136-1\n\n\u5426\u5219\u7b54\u6848\u4e3a$num[l]$^$num[r]$\n\n\u5e76\u67e5\u96c6\u7684\u65f6\u5019\uff0c\u505a\u4e00\u4e2a\u7c7b\u4f3c\u4e0b\u63a8\u6807\u8bb0\u7684\u4e1c\u897f\uff0c\u5c31\u662f\u8ba9\u5f53\u524d\u7684$num[x]$\u5f02\u6216\u4e00\u4e0b$num[father[x]]$\n\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0 $l,r \\le 2e30$ \u76f4\u63a5\u5b58\u80af\u5b9a\u4e0d\u884c\u4e86\n\n\u4f46\u6211\u4eec\u6709map\u6bcf\u4e00\u4e2amap\u5bf9\u5e94\u4e00\u4e2a\u51fa\u73b0\u8fc7\u7684\u7aef\u70b9\uff0c\u7aef\u70b9\u6570\u4e0d\u8d85\u8fc7$q*2$\n\n\u7136\u540e\u6211\u4eec\u5c31\u505a\u5b8c\u4e86 QAQ\n\n\u4ee3\u7801:\n\n```cpp\n\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <map>\nusing namespace std;\nmap<int,int> father , num;\nint n,l,r,x,lst=0,q,opt;\nint find_(int x) {\n\tif(!father.count(x)) return x;\n\tint tmp=find_(father[x]);\n\tnum[x]^=num[father[x]];\n\tfather[x]=tmp;\n\treturn father[x];\n}\ninline int read() {\n\tregister int x=0,w=1;char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\tif(ch=='-') w=-1;\n\twhile(isdigit(ch)) x=((x<<3)+(x<<1))+ch-'0',ch=getchar();\n\treturn x*w;\n}\nint main() {\n\tq=read();\n\twhile(q--) {\n\t\topt=read();\n\t\tif(opt==1) {\n\t\t\tl=read();r=read();x=read();\n\t\t\tl^=lst,r^=lst,x^=lst;\n\t\t\tif(l>r) swap(l,r);\n\t\t\t--l;\n\t\t\tint xf=find_(l),yf=find_(r);\n\t\t\tif(xf!=yf) {\n\t\t\t\tfather[yf]=xf;\n\t\t\t\tnum[yf]=x^num[l]^num[r];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tl=read();r=read();\n\t\t\tl^=lst;r^=lst;\n\t\t\tif(l>r) swap(l,r);\n\t\t\t--l;\n\t\t\tint xf=find_(l),yf=find_(r);\n\t\t\tif(xf!=yf) {\n\t\t\t\tlst=1;\n\t\t\t\tputs(\"-1\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlst=num[l]^num[r];\n\t\t\t\tprintf(\"%d\\n\",lst);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1567162568,
        "uid": 78187,
        "name": "zjjcth330",
        "ccfLevel": 0,
        "title": "\u9898\u89e3-CF1044D"
    },
    {
        "content": "\u8fd9\u9898\u3002\u3002\u90fd\u662f\u5957\u8def\u554a(~~Doushitao Road~~)\n\n\u6709\u4e24\u79cd\u64cd\u4f5c\n\n1\u3001opt==1\n\n\u7ed9\u51fa\u53c2\u6570l, r, x, \u8981\u6c42\u4f7f[l, r]\u8fd9\u4e2a\u533a\u95f4\u5185\u7684xor\u4e3ax\n\n\u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\n\n```\n(notice that you need to ignore updates that\ncontradict previous updates).\n```\n\n\u6839\u636e~~\u767e\u5ea6\u7ffb\u8bd1~~\u53ef\u4ee5\u5f97\u77e5\u4f60\u9700\u8981\u5ffd\u7565\u548c\u4e0a\u6b21\u77db\u76fe\u7684\u66f4\u65b0\n\n\u90a3\u4e48\u6709\u4ec0\u4e48\u4e1c\u897f\u53ef\u4ee5\u7ef4\u62a4\u67d0\u4e2a\u77db\u76fe\u4fe1\u606f\u5462\uff1f\n\n**\u5e26\u6743\u5e76\u67e5\u96c6\uff01**(\u5957\u8def)\n\n\u9996\u5148\u5148\u660e\u786e\u4e00\u70b9\uff0c\u5c31\u662f\u540c\u4e00\u4e2a\u533a\u95f4\u5982\u679c\u66f4\u65b0\u4e0d\u6b62\u4e00\u6b21\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6b21\u53ca\u4ee5\u540e\u7684\u66f4\u65b0\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff08\u7406\u7531\u662f\u8981\u4e48\u548c\u7b2c\u4e00\u6b21\u4e00\u6837\uff0c\u8981\u4e48\u5c31\u77db\u76fe\u4e86\uff09(\u5957\u8def)\n\n\u90a3\u4e48\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u7684\u4e00\u4e2a\u5e76\u67e5\u96c6\uff1a\u5bf9\u4e8e\u8282\u70b9l, r, \u627e\u5230l\u7684\u6700\u4e0a\u5c42\u7956\u5148\u548cr\u7684\u6700\u4e0a\u5c42\u7956\u5148\uff0c\u5982\u679c\u76f8\u540c\u5c31\u76f4\u63a5\u7ed3\u675f\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u5efa\u7acb\u8054\u7cfb\uff0c\u9996\u5148\u628ar+1(\u7edf\u7edf\u52a0\u4e00\uff0c\u6709\u70b9\u50cf\u7269\u7406\u91cc\u9762\u7684\u8f6c\u5316\u53c2\u8003\u7cfb\u54c8\u54c8)\uff1a\n```\ninline int getans(int l, int r){\n    ++r;\n    l=mp[l];\n\tr=mp[r];//C++ STL\u4e2d\u7684\u6620\u5c04\uff0c\u5728\u8fd9\u91cc\u7528\u6765\u8bb0\u5f55\u66f4\u65b0\u533a\u95f4\u7aef\u70b9\u5bf9\u5e94\u7684\u7f16\u53f7(\u6709\u70b9\u96be\u7406\u89e3)\n    if(l==0||r==0||(find(l)^find(r)))return -1;//\u5982\u679c\u538b\u6839\u513f\u4e0d\u5b58\u5728\u6216\u8005\u662f\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\u8fd4\u56de-1\n    return xorsum(l)^xorsum(r);//\u627e\u7b54\u6848\n}\n```\nxorsum\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\n\n\u5b9a\u4e49xr\u6570\u7ec4\u4e3a\u5bf9\u5e94\u7f16\u53f7\u7684\u503cxor\u4ed6\u7684\u7236\u4eb2\n\n\u90a3\u4e48\u6839\u636e\u8fd9\u4e2a\u5b9a\u4e49\u5c31\u6709\u5982\u4e0b\u4ee3\u7801\uff1a\n```\ninline int xorsum(int x){\n    if(asis[x]==x)return 0;//\u627e\u5230\u6839\u8282\u70b9\u4e86\n    return xr[x]^xorsum(asis[x]);//\u8fd4\u56de\u5b83\u5f02\u6216\u4e0a\u4ed6\u7236\u4eb2\u518d\u5f02\u6216\u5230\u6839\u8282\u70b9\u4f4d\u7f6e\u3002\u6839\u636ex^x=0\u6027\u8d28\u53ef\u5f97\n}\n```\n\u89e3\u51b3\u4e862\u7684\u5927\u90e8\u5206\u64cd\u4f5c(\u4e0d\u8981\u95ee\u6211find\u51fd\u6570\u5728\u54ea\u91cc\uff0c\u5e94\u8be5\u90fd\u4f1a\u4e86\u5427)\uff0c1\u64cd\u4f5c\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4e0d\u5c31\u662f\u6700\u6700\u666e\u901a\u7684\u5e26\u6743\u5e76\u67e5\u96c6\u561b\uff1f\n\n\u7ed9\u51fa\u90e8\u5206\u4ee3\u7801\uff1a\n\n**\u5e26\u6743**\u5e76\u67e5\u96c6\u5408\u5e76\uff1a\n```\ninline void Union(int l, int r, int tmp){\n    int rootx=find(mp[l]),rooty=find(mp[r]);\n    if(!(rootx^rooty)) return;//\u5982\u679c\u76f8\u7b49\u4e0d\u5408\u5e76\n    tmp=xorsum(mp[l])^xorsum(mp[r])^tmp;//\u8bb0\u5f55tmp\uff0c\u7ef4\u62a4\u4e0a\u6587xr\uff0c\u4e5f\u5c31\u662f\u6743\u503c\n    if(multip[rootx]>multip[rooty]) swap(rootx, rooty);//\u53ef\u4ee5\u8ba4\u4e3amultip\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u79e9\uff0c\u6309\u79e9\u5408\u5e76\n    asis[rootx]=rooty;//\u7236\u4eb2\n    multip[rooty]+=multip[rootx];//multip\u66f4\u65b0\n    xr[rootx]=tmp;//\u6743\u503c\u66f4\u65b0\n}\n```\n\n\u9762\u5bf9\u4e00\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u66f4\u65b0\u4e0a\u9762\u63d0\u5230\u7684\u6620\u5c04\u4e4b\u540e\u518dUnion\u5373\u53ef\u3002\n\n\u4e0d\u8981\u5fd8\u8bb0\u66f4\u65b0last\uff0c\u8fd9\u9898\u76ee\u5c31\u987a\u5229\u505a\u5b8c\u4e86\uff01",
        "postTime": 1567150778,
        "uid": 25313,
        "name": "\u826f\u77e5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1044D \u3010Deduction Queries\u3011"
    },
    {
        "content": "\u6280\u5de7\u4e00\uff1a\u4e00\u4e2a\u5f0f\u5b50\uff1a\u8bb0 $W\\left(l,r\\right)=a_l\\oplus a_{l+1}\\oplus a_{l+2}\\oplus\\ldots\\oplus a_{r-1}$\n\n\n\u6709 $\\forall a,b,c\\ \\ W\\left(a,c\\right)=W\\left(a,b\\right)\\oplus W\\left(b,c\\right)$\n\n\n\u8bc1\u660e\u5206\u60c5\u51b5\u8ba8\u8bba\u5373\u53ef\u3002\n\n\u6280\u5de7\u4e8c\uff1a\u56fe\u8bba\u5efa\u6a21\u3002\u6761\u4ef6 $W\\left(l,r\\right)$ \u8868\u793a\u4e3a $l,r$ \u95f4\u4e00\u6761\u6743\u503c\u4e3a $W\\left(l,r\\right)$ \u7684\u8fb9\u3002\n\n\u6c42 $W\\left(l,r\\right)$ \u8f6c\u5316\u4e3a\u6c42\u56fe\u4e0a $l,r$ \u89c1\u7684\u4e00\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u7684\u6743\u503c\u7684\u5f02\u6216\u548c\u3002\n\n\n\n\u6280\u5de7\u4e09\uff1a\u5e26\u6743\u5e76\u67e5\u96c6\u3002\u663e\u7136\u7684\uff0c\u7531\u4e8e $W\\left(l,r\\right)$ \u7684\u503c\u662f\u4e00\u5b9a\u7684\u4e14\u552f\u4e00\u7684\uff0c\u53ef\u89c1 $\\forall a,b\\ a,b$ \u4e4b\u95f4\u81f3\u591a\u6709\u4e00\u6761\u8def\u5f84\uff0c\u5373\u4efb\u610f\u65f6\u523b\u7684\u56fe\u90fd\u4e3a\u4e00\u4e2a**\u68ee\u6797**\u3002\u7531\u4e00\u4e2d\u63d0\u5230\u7684\u5f0f\u5b50\uff0c\u53ef\u7528**\u5e26\u6743\u5e76\u67e5\u96c6**\u89e3\u51b3\u3002\n\n\u7ef4\u62a4\u6bcf\u4e00\u4e2aa\u5728\u68ee\u6797\u4e2d\u7684\u7956\u5148\u548ca\u5230\u5176\u7956\u5148\u7684\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u5f02\u6216\u548c\uff0c\u8bb0\u4e3a ${\\rm fa}_a\\ ,\\ val_a$ \u5f97\u5230\u4ee5\u4e0b\u6c42 $W\\left(l,r\\right)$ \u7684\u529e\u6cd5\uff1a\u82e5 $fa_l\\neq fa_r$ \u5373 $l,r$ \u7684\u7956\u5148\u4e0d\u540c\uff0c\u5219 $l,r$ \u4e0d\u8fde\u901a\uff0c\u6709 $W\\left(l,r\\right)$ \u4e0d\u786e\u5b9a\u3002\u5426\u5219 $W\\left(l,r\\right)=W\\left(l,fa\\right)\\oplus W\\left(r,fa\\right)=val_l\\oplus val_r$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long \nusing namespace std;\nmap<int,int>fa,val;\nint find(int x){\n\tif(!fa.count(x)) return x;\n\tint nfa=find(fa[x]);\n\tval[x]^=val[fa[x]],fa[x]=nfa;\n\treturn nfa;\n}\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tint q,lst=0;cin>>q;\n\twhile(q--){\n\t\tint op;cin>>op;\n\t\tswitch(op){\n\t\t\tcase 1:{\n\t\t\t\tint l,r,x;cin>>l>>r>>x;\n\t\t\t\tl^=lst,r^=lst,x^=lst;\n\t\t\t\tif(l>r) swap(l,r);\n\t\t\t\tl--;\n\t\t\t\tint fl=find(l),fr=find(r);\n\t\t\t\tif(fl!=fr){\t\t\t\t\t\n\t\t\t\t\tfa[fl]=fr;\n\t\t\t\t\tval[fl]=val[l]^val[r]^x;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:{\n\t\t\t\tint l,r;cin>>l>>r;\n\t\t\t\tl^=lst,r^=lst;\n\t\t\t\tif(l>r) swap(l,r);\n\t\t\t\tl--;\n\t\t\t\tint fl=find(l),fr=find(r);\n\t\t\t\tif(fl!=fr){\n\t\t\t\t\tcout<<-1<<\"\\n\";\n\t\t\t\t\tlst=1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlst=val[l]^val[r];\n\t\t\t\t\tcout<<lst<<\"\\n\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n} \n```\n",
        "postTime": 1677841489,
        "uid": 527303,
        "name": "tybbs",
        "ccfLevel": 5,
        "title": "CF1044D\u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u73b0\u5728\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a $2^{30}$ \u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u503c\uff0c\u6bcf\u6b21\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n* `1 x y z` \u8868\u793a\u544a\u8bc9\u4f60 $x$ \u5230 $y$ \u533a\u95f4\u7684\u6240\u6709\u503c\u5f02\u6216\u548c\u4e3a $z$\u3002\uff08\u5982\u679c\u548c\u4e0a\u6b21\u544a\u8bc9\u4f60\u7684\u77db\u76fe\uff0c\u5c31\u53ef\u4ee5\u5f53\u505a\u6ca1\u8bf4\u3002\uff09\n* `2 x y` \u95ee\u4f60\u533a\u95f4 $x$ \u5230 $y$ \u7684\u6240\u6709\u503c\u7684\u5f02\u6216\u548c\u662f\u591a\u5c11\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5c31\u8f93\u51fa `-1`\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u6709\u4ec0\u4e48\u4e1c\u897f\u53ef\u4ee5\u7ef4\u62a4\u77db\u76fe\u4fe1\u606f\u5462\uff1f\n\n**\u5e26\u6743\u5e76\u67e5\u96c6\uff01\uff01\uff01**\n\n\u5b9a\u4e49 $fa$ \u4e3a $a$ \u7684\u7236\u4eb2\uff0c$r[ a ]$ \u8868\u793a $a$ \u5f02\u6216 $fa$ \u7684\u503c\u3002\n\n\u6bcf\u6b21\u544a\u8bc9\u6211\u4e00\u4e2a\u533a\u95f4\u5f02\u6216\u503c\uff0c\u6211\u53ea\u9700\u8981\u5bf9\u4e24\u4e2a\u7aef\u70b9\u8fdb\u884c\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bd4\u5982\u9898\u76ee\u544a\u8bc9\u6211 `1 a b x`\uff0c\u6211\u5148\u901a\u8fc7\u8def\u5f84\u538b\u7f29\u627e\u5230 $fa$\uff0c$fb$\uff0c\u5982\u679c $fa=fb$\uff0c\u7ed9\u7684\u4fe1\u606f\u65e0\u7528\uff0c\u5c31\u4e0d\u9700\u8981\u64cd\u4f5c\u4e86\uff0c\u5426\u5219\uff0c\u4ee4 $fa$ \u7684\u7236\u4eb2\u7b49\u4e8e $fb$\uff0c\u90a3\u4e48\u600e\u4e48\u6c42 $r[fa]$ \u5462\uff0c$r[a]=a \\operatorname{xor} fa$\uff0c\u90a3\u4e48 $fa=r[a] \\operatorname{xor} a$\uff0c$r[fa]=fa \\operatorname{xor} fb=r[a] \\operatorname{xor}a \\operatorname{xor} r[b] \\operatorname{xor} b$\uff0c\u56e0\u4e3a $a \\operatorname{xor} b=x$\uff0c\u90a3\u4e48 $fa=r[a] \\operatorname{xor} r[b] \\operatorname{xor} x$\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e00\u6b65\uff0c\u5c31\u6ca1\u95ee\u9898\u4e86,\u6bcf\u6b21\u7b54\u6848\u5373\u4e3a $r_l \\operatorname{xor} r_b$\u3002\n\n\u5177\u4f53\u53c2\u8003\u4ee3\u7801\u3002\n\n### CODE\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline int read()\n{\n    int x = 0, w = 1;\n    char ch = getchar();\n    while (!isdigit(ch))\n        ch = getchar();\n    if (ch == '-')\n        w = -1;\n    while (isdigit(ch))\n        x = ((x << 3) + (x << 1)) + ch - '0', ch = getchar();\n    return x * w;\n}\n\nmap<int, int> fa, num;\n\nint n, l, r, x, last = 0, q, opt;\n\nint find(int x)\n{\n    if (!fa.count(x))\n        return x;\n    int tmp = find(fa[x]);\n    num[x] ^= num[fa[x]];\n    fa[x] = tmp;\n    return fa[x];\n}\n\nsigned main()\n{\n    q = read();\n    while (q--)\n    {\n        opt = read();\n        if (opt == 1)\n        {\n            l = read();\n            r = read();\n            x = read();\n            l ^= last, r ^= last, x ^= last;\n            if (l > r)\n                swap(l, r);\n            --l;\n            int xf = find(l), yf = find(r);\n            if (xf != yf)\n            {\n                fa[yf] = xf;\n                num[yf] = x ^ num[l] ^ num[r];\n            }\n        }\n        else\n        {\n            l = read();\n            r = read();\n            l ^= last;\n            r ^= last;\n            if (l > r)\n                swap(l, r);\n            --l;\n            int xf = find(l), yf = find(r);\n            if (xf != yf)\n            {\n                last = 1;\n                puts(\"-1\");\n            }\n            else\n            {\n                last = num[l] ^ num[r];\n                printf(\"%d\\n\", last);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1636794199,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF1044D Deduction Queries"
    }
]