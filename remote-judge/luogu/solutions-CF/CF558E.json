[
    {
        "content": "\u73c2\u6735\u8389\u771f\u53ef\u7231\n\n\u6240\u4ee5\u6211\u4eec\u8981\u7528\u73c2\u6735\u8389\u6811\n\n\u6bcf\u6b21\u7edf\u8ba1\u4e00\u4e0b\u533a\u95f4\u91cc\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u591a\u5c11\u6b21\uff0c\u7136\u540e\u5f80set\u91ccinsert 26\u4e2a\u8282\u70b9\u63a5\u884c\u4e86\n\n\u56e0\u4e3a\u6700\u591a\u4ea7\u751fn+26m\u4e2a\u8282\u70b9\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u88ab\u904d\u5386\u5230\u540e\u4e00\u5b9a\u4f1a\u88ab\u5220\u9664\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f n + 26m + nlogn\n\n```#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 100005 \n#define se set<aa>\n#define it iterator\n\nstruct aa {\n\tint l,r;\n\tchar v;\n};\n\nbool operator <(aa a,aa b) {\n\treturn a.r < b.r;\n}\n\nchar a[MAXN];\nint n,m;\nse s;\n\nvoid rd() {\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%s\",a+1);\n\tfor(int i = 1; i <= n; i ++) {\n\t\ts.insert((aa){i,i,a[i]});\n\t}\n}\n\nvoid split(se::it x,int i) {\n\tint l = x->l,r = x->r;\n\tchar v = x->v;\n\tif(i < l || i >= r) return;\n\ts.erase(x);\n\ts.insert((aa){l,i,v});\n\ts.insert((aa){i+1,r,v});\n}\n\nint c[30];\n\nvoid paix(int l,int r,bool p) {\n\tse::it x = s.lower_bound((aa){0,l-1,0});\n\tsplit(x,l-1);\n\tse::it y = s.lower_bound((aa){0,r,0});\n\tsplit(y,r);\n\tx = s.lower_bound((aa){0,l,0});\n\ty = s.lower_bound((aa){0,r,0});\n\ty ++;\n\tfor(se::it i = x; i != y; i ++) \n\t\tc[(i->v)-'a'] += (i->r) - (i->l) + 1;\n\ts.erase(x,y);\n\tif(p) {\n\t\tint x = l;\n\t\tfor(int i = 0; i <= 26; i ++)\n\t\tif(c[i] > 0){\n\t\t\ts.insert((aa){x,x+c[i]-1,i+'a'});\n\t\t\tx += c[i];\n\t\t}\n\t} else {\n\t\tint x = l;\n\t\tfor(int i = 26; i >= 0; i --)\n\t\tif(c[i] > 0){\n\t\t\ts.insert((aa){x,x+c[i]-1,i+'a'});\n\t\t\tx += c[i];\n\t\t}\t\t\n\t}\n\tmemset(c,0,sizeof(c)); \n}\n\nint main()\n{\n\trd();\n\tfor(int i = 1; i <= m; i ++)\n\t{\n\t\tint l,r,p;\n\t\tscanf(\"%d%d%d\",&l,&r,&p);\n\t\tpaix(l,r,p);\n\t}\n\tfor(se::it i = s.begin(); i != s.end(); i ++)\n\t\tfor(int j = i->l; j <= i->r; j ++)\n\t\t\tputchar(i->v);\n\tcout<<\"\\n\";\n\n\treturn 0;\n } \n```\n\n\u73c2\u6735\u8389\u771f\u53ef\u7231",
        "postTime": 1556504604,
        "uid": 88256,
        "name": "LJC00753",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF558E \u3010A Simple Task\u3011"
    },
    {
        "content": "\u975e\u5e38\u597d\u7684\u4e00\u9053\u9898\uff0c\u662f\u7ebf\u6bb5\u6811\u7684\u5e38\u89c1\u73a9\u6cd5\n\n\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a1~26\u4e2a\u6570\n\n\u5bf9\u533a\u95f4\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7528\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u7ef4\u62a4\u533a\u95f4\u4e2d1~26\u6bcf\u4e2a\u6570\u7684\u4e2a\u6570\u4ee5\u53ca\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u662f\u5426\u88ab\u67d0\u4e00\u4e2a\u503c\u8986\u76d6\u4e86\n\n\u5728\u6bcf\u6b21\u6392\u5e8f\u65f6\uff0c\u9996\u5148\u67e5\u51fa\u8fd9\u4e2a\u533a\u95f4\u4e2d1~26\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7136\u540e\u56e0\u4e3a\u662f\u6392\u8fc7\u5e8f\u7684\uff0c\u6240\u4ee5\u76f8\u7b49\u7684\u6570\u6392\u5b8c\u5e8f\u4e4b\u540e\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u8fd9\u6837\u5982\u679c\u5347\u5e8f\uff0c\u6211\u4eec\u5c31\u5bf9\u6574\u4e2a\u533a\u95f4\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u8986\u76d6\uff0c\u5426\u5219\u4ece\u5927\u5230\u5c0f\u8986\u76d6\n\n\u6700\u540e\u904d\u5386\u6574\u68f5\u7ebf\u6bb5\u6811\u8f93\u51fa\u5373\u53ef\n\n\u4e00\u53e5\u8bdd\u603b\u7ed3\uff1a\u6bcf\u6b21\u6392\u5e8f\u53ea\u9700\u505a\u4e00\u6b21\u533a\u95f4\u67e5\u8be2\uff0c26\u6b21\u533a\u95f4\u8986\u76d6\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6O\uff0826nlogn\uff09\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#define ls tree[rt].lson\n#define rs tree[rt].rson\n#define rt1 rt<<1\n#define rt2 (rt<<1)|1\nusing namespace std;\nstruct Tree\n{\n\tbool tag[30];\n\tint s[30];\n\tint lson;\n\tint rson;\n}tree[400005];\nstruct node\n{\n\tint v[30];\n}zero;\nint n,q;\nint a[100005];\nchar s[100005];\nvoid pushdown(int rt)\n{\n\tif(ls==rs)\n\t{\n\t\treturn;\n\t}\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\tif(tree[rt].tag[i])\n\t\t{\n\t\t\tfor(int j=1;j<=26;j++)\n\t\t\t{\n\t\t\t\ttree[rt1].tag[j]=0;\n\t\t\t\ttree[rt1].s[j]=0;\n\t\t\t\ttree[rt2].tag[j]=0;\n\t\t\t\ttree[rt2].s[j]=0;\n\t\t\t}\n\t\t\ttree[rt1].tag[i]=1;\n\t\t\ttree[rt2].tag[i]=1;\n\t\t\ttree[rt1].s[i]=tree[rt1].rson-tree[rt1].lson+1;\n\t\t\ttree[rt2].s[i]=tree[rt2].rson-tree[rt2].lson+1;\n\t\t\ttree[rt].tag[i]=0;\n\t\t\tbreak;\n\t\t}\n\t}\n}\nvoid buildtree(int rt,int l,int r)\n{\n\ttree[rt].lson=l;\n\ttree[rt].rson=r;\n\tif(l==r)\n\t{\n\t\ttree[rt].s[a[l]]=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuildtree(rt1,l,mid);\n\tbuildtree(rt2,mid+1,r);\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\ttree[rt].s[i]=tree[rt1].s[i]+tree[rt2].s[i];\n\t}\n}\nnode add(node x,node y)\n{\n\tnode ret=zero;\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\tret.v[i]=x.v[i]+y.v[i];\n\t}\n\treturn ret;\n}\nnode query(int rt,int l,int r)\n{\n\tif(ls>r||rs<l)\n\t{\n\t\treturn zero;\n\t}else if(ls>=l&&rs<=r)\n\t{\n\t\tnode ret=zero;\n\t\tfor(int i=1;i<=26;i++)\n\t\t{\n\t\t\tret.v[i]=tree[rt].s[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpushdown(rt);\n\tint mid=(ls+rs)>>1;\n\treturn add(query(rt1,l,r),query(rt2,l,r));\n}\nvoid update(int rt,int l,int r,int val)\n{\n\tif(ls>r||rs<l)\n\t{\n\t\treturn;\n\t}\n\tif(ls>=l&&rs<=r)\n\t{\n\t\tfor(int i=1;i<=26;i++)\n\t\t{\n\t\t\ttree[rt].s[i]=0;\n\t\t\ttree[rt].tag[i]=0;\n\t\t}\n\t\ttree[rt].tag[val]=1;\n\t\ttree[rt].s[val]=rs-ls+1;\n\t\treturn;\n\t}\n\tpushdown(rt);\n\tint mid=(ls+rs)>>1;\n\tif(l<=mid)\n\t{\n\t\tupdate(rt1,l,r,val);\n\t}\n\tif(r>mid)\n\t{\n\t\tupdate(rt2,l,r,val);\n\t}\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\ttree[rt].s[i]=tree[rt1].s[i]+tree[rt2].s[i];\n\t}\n}\nvoid pushit(int rt)\n{\n\tpushdown(rt);\n\tif(ls==rs)\n\t{\n\t\treturn;\n\t}\n\tpushit(rt1);\n\tpushit(rt2);\n}\nvoid print(int rt)\n{\n\tif(ls==rs)\n\t{\n\t\tfor(int i=1;i<=26;i++)\n\t\t{\n\t\t\tif(tree[rt].s[i])\n\t\t\t{\n\t\t\t\tprintf(\"%c\",i-1+'a');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tprint(rt1);\n\tprint(rt2);\n}\ninline int read()\n{\n\tint f=1,x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint main()\n{\n//\tfreopen(\"third.in\",\"r\",stdin);\n//\tfreopen(\"third.out\",\"w\",stdout);\n\tn=read(),q=read();\n\tscanf(\"%s\",s+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=s[i]-'a'+1;\n\t}\n\tbuildtree(1,1,n);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint l=read(),r=read(),typ=read();\n\t\tnode temp=query(1,l,r);\n\t\tif(typ==1)\n\t\t{\n\t\t\tfor(int j=1;j<=26;j++)\n\t\t\t{\n\t\t\t\tupdate(1,l,l+temp.v[j]-1,j);\n\t\t\t\tl+=temp.v[j];\n\t\t\t}\n\t\t}else\n\t\t{\n\t\t\tfor(int j=26;j>=1;j--)\n\t\t\t{\n\t\t\t\tupdate(1,l,l+temp.v[j]-1,j);\n\t\t\t\tl+=temp.v[j];\n\t\t\t}\n\t\t}\n\t}\n\tpushit(1);\n\tprint(1);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1539756258,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF558E \u3010A Simple Task\u3011"
    },
    {
        "content": "# \u9898\u89e3 - $\\mathrm{CF558E \\ A \\ Simple \\ Task}$\n## \u5410\u69fd\u4e00\u4e0b\uff1a\n* \u8fd9\u9053\u9898\u76ee\u8db3\u8db3\u505a\u4e86\u6211$3$\u4e2a\u5c0f\u65f6\uff0c\u6211$stm$\u771f\u7684\u8981\u5410\u8840\u4e86\u3002\n\n## \u9898\u76ee\u610f\u601d\n\u5c31\u662f\u7ed9\u4f60\u4e00\u957f\u4e3a$n(\\leq 10^5)$\u4e2a\u5c0f\u5199\u5b57\u6bcd\u5e8f\u5217\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n* $(l,r,0)$\uff1a\u5c06$[l,r]$\u5347\u5e8f\n* $(l,r,1)$\uff1a\u5c06$[l,r]$\u5012\u5e8f\n\n\u6c42\u51fa$m(\\leq 10^5)$\u6b21\u64cd\u4f5c\u540e\u7684\u5e8f\u5217\u3002\n\n## $\\mathrm{Sol}$\n* \u53ef\u4ee5\u8bf4\u662f\u4e00\u9053\u7ecf\u5178\u5957\u8def\u9898\u5427\n* \u6211\u4eec\u9996\u5148\u5efa$26$\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u5347\u5e8f\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u8fd9\u6bb5\u533a\u95f4\u91cc\u7684\u5b57\u6bcd\u6309$\\mathrm{a-z}$\u7684\u987a\u5e8f\u4f9d\u6b21\u52a0\u5165\uff0c\u4e0d\u505c\u66f4\u65b0\u52a0\u5165\u5de6\u7aef\u70b9\u5373\u53ef\uff0c\u53f3\u7aef\u70b9\u5373\u4e3a\u5de6\u7aef\u70b9\u52a0\u8fd9\u4e2a\u5b57\u6bcd\u7684\u6570\u91cf\u3002\u5012\u5e8f\u4e5f\u540c\u7406\uff0c\u53ea\u8981$\\mathrm{z-a}$\u7684\u987a\u5e8f\u5373\u53ef\u3002\n* \u7136\u540e\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\u4e86\uff08\u563b\u563b\u563b\uff0c\u6211\u8c03\u4e86\u534a\u5e74\u3002\n* \u8bf4\u53e5\u5b9e\u8bdd\uff1a\u5bf9\u4e8e\u5927\u591a\u6570\u9898\u76ee\uff0c\u5957\u8def\u5c31\u662f\u786c\u9053\u7406\u3002\u3002\u3002\n\n## $\\mathrm{Code}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n \ninline int read()\n{\n\tint sum=0,ff=1; char ch=getchar();\n\twhile(!isdigit(ch))\n\t{\n\t\tif(ch=='-') ff=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t\tsum=sum*10+(ch^48),ch=getchar();\n\treturn sum*ff;\n}\n \nconst int N=1e5+5;\n \nint n,m,ans;\nchar ch[100001],res[100001];\n \nstruct seg\n{\n\tint tr[31][400001],laz[31][400001];\n\tinline void init()\n\t{\n\t\tfor ( int i=1;i<=26;i++ )  \n\t\t\tmemset(laz[i],-1,sizeof(laz[i]));\n\t}\n\tinline void build(int rt,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\ttr[ch[l]-'a'+1][rt]=1;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)/2;\n\t\tbuild(rt<<1,l,mid);\n\t\tbuild(rt<<1|1,mid+1,r);\n\t\tfor ( int i=1;i<=26;i++ ) \n\t\t\ttr[i][rt]=(tr[i][rt<<1]+tr[i][rt<<1|1]);\n\t}\n\tinline void push_down(int rt,int l,int r,int col)\n\t{\n\t\tif(laz[col][rt]!=-1)\n\t\t{\n\t\t\ttr[col][rt]=laz[col][rt]*(r-l+1);\n\t\t\tint mid=(l+r)/2;\n\t\t\ttr[col][rt<<1]=laz[col][rt]*(mid-l+1);\n\t\t\ttr[col][rt<<1|1]=laz[col][rt]*(r-mid);\n\t\t\tlaz[col][rt<<1]=laz[col][rt];\n\t\t\tlaz[col][rt<<1|1]=laz[col][rt];\n\t\t\tlaz[col][rt]=-1;\n\t\t}\n\t}\n\tinline void update(int rt,int l,int r,int ll,int rr,int col,int v)\n\t{\n\t\tif(ll<=l&&r<=rr)\n\t\t{\n\t\t\ttr[col][rt]=v*(r-l+1);\n\t\t\tlaz[col][rt]=v;\n\t\t\treturn;\n\t\t}\n\t\tpush_down(rt,l,r,col);\n\t\tint mid=(l+r)/2;\n\t\tif(ll<=mid) update(rt<<1,l,mid,ll,rr,col,v);\n\t\tif(rr>mid) update(rt<<1|1,mid+1,r,ll,rr,col,v);\n\t\ttr[col][rt]=tr[col][rt<<1]+tr[col][rt<<1|1];\n\t}\n\tinline int query(int rt,int l,int r,int ll,int rr,int col)\n\t{\n\t\tif(ll<=l&&r<=rr) return tr[col][rt];\n\t\tpush_down(rt,l,r,col);\n\t\tint mid=(l+r)/2;\n\t\tint sum=0;\n\t\tif(ll<=mid) sum+=query(rt<<1,l,mid,ll,rr,col);\n\t\tif(rr>mid) sum+=query(rt<<1|1,mid+1,r,ll,rr,col);\n\t\treturn sum;\n\t}\n\tinline void print(int rt,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tfor ( int i=1;i<=26;i++ ) \n\t\t\t\tif(tr[i][rt]) \n\t\t\t\t{\n\t\t\t\t\tres[l]='a'+i-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tfor ( int i=1;i<=26;i++ ) push_down(rt,l,r,i);\n\t\tint mid=(l+r)/2;\n\t\tprint(rt<<1,l,mid);\n\t\tprint(rt<<1|1,mid+1,r);\n\t}\t\t\t\t\n};\nseg T;\n \nint main()\n{\n\tn=read();\n\tm=read();\n\tscanf(\"%s\",ch+1);\n\tT.init();\n\tT.build(1,1,n);\n\tfor (;m--;)\n\t{\n\t\tint op,x,y;\n\t\tx=read(),y=read(),op=read();\n\t\tif(op==1)\n\t\t{\n\t\t\tint tmp=x-1;\n            for ( int j=1;j<=26;j++ )\n\t\t\t{\n                int cas=T.query(1,1,n,x,y,j);\n                if(!cas)continue;\n                T.update(1,1,n,x,y,j,0);\n                T.update(1,1,n,tmp+1,tmp+cas,j,1);\n\t\t\t\ttmp=tmp+cas;\n            }\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint lp=x-1;\n\t\t\tfor ( int j=26;j>=1;j-- )\n\t\t\t{\n\t\t\t\tint sum=T.query(1,1,n,x,y,j);\n\t\t\t\tif(!sum) continue;\n\t\t\t\tT.update(1,1,n,x,y,j,0);\n\t\t\t\tT.update(1,1,n,lp+1,lp+sum,j,1);\n\t\t\t\tlp+=sum;\n\n\t\t\t}\n\t\t}\n\t}\n\tT.print(1,1,n);\n\tfor ( int i=1;i<=n;i++ ) putchar(res[i]);\n\treturn 0;\n}\n/*\n10 5\nabacdabcda\n7 10 0\n5 8 1\n1 4 0\n3 6 0\n7 10 1\n*/\n```\n",
        "postTime": 1584371283,
        "uid": 308464,
        "name": "\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF558E \u3010A Simple Task\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u5927\u6982\u7b80\u8ff0\u4e00\u4e0b\u6211\u7684\u5fc3\u8def\u5386\u7a0b\u3002\n\n\u7b2c\u4e00\u773c\uff1a`sort`\u725b\u903c\uff01\n\n~~TLE\u8b66\u544a~~\n\n\u7b2c\u4e8c\u773c\uff1a\u6574\u7406\u51fa\u8be2\u95ee\u533a\u95f4\u4e2d\u5404\u4e2a\u5b57\u6bcd\u7684\u6570\u91cf\uff0c\u518d\u6839\u636e\u5404\u4e2a\u5b57\u6bcd\u7684\u6570\u91cf\u6309\u8981\u6c42\u5e73\u644a\u5728\u533a\u95f4\u5185\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u533a\u95f4\u9700\u8981\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u5148\u4ece`a`\u5f00\u59cb\uff0c\u627e\u5230`a`\u7684\u6570\u91cf\uff0c\u7136\u540e\u628a\u8be5\u533a\u95f4\u5185\u7684\u539f\u6709`a`\u6e05\u7a7a\uff0c\u7136\u540e\u4ece\u533a\u95f4\u5de6\u7aef\u5f00\u59cb\u5e73\u94fa\u7b54\u6848\u6570\u4e2a`a`\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u627e\u5230`b`\u7684\u6570\u91cf\uff0c\u6e05\u7a7a\uff0c\u5e73\u94fa\u5728`a`\u7684\u53f3\u8fb9\u3002\u4ece\u5927\u5230\u5c0f\u540c\u7406\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u9700\u8981\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u80fd\u591f\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u3002\u7ebf\u6bb5\u6811\u521a\u597d\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u8981\u3002\n\n\u7a0d\u5fae\u6d89\u53ca\u4e00\u70b9\u5185\u5c42\u5b9e\u73b0\uff0c\u6211\u4eec\u9700\u8981\u5efa\u7acb26\u9897\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u5b57\u6bcd\u5728\u6bcf\u4e2a\u533a\u95f4\u5185\u7684\u6570\u91cf\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int nn = 1e5 + 5;\nstruct SegTree {//\u7ebf\u6bb5\u6811\u57fa\u672c\u7ed3\u6784\u4f53\n\tint l, r, cnt, lazy;\n\t#define l(p, i) tree[i][p].l//\u6211\u5f88\u61d2\uff0c\u61d2\u5f97\u5199\u5168\u53d8\u91cf\u540d\n\t#define r(p, i) tree[i][p].r\n\t#define lazy(p, i) tree[i][p].lazy\n\t#define cnt(p, i) tree[i][p].cnt\n}tree[26][nn * 8];//26\u9897\u7ebf\u6bb5\u6811\uff0c\u516b\u500d\u7a7a\u95f4\nchar a[nn];\nint n, q;\n#define ls (p << 1)\n#define rs (p << 1 | 1)\nvoid build(int p, int l, int r, int id) {//\u5efa\u6811\n\tl(p, id) = l;\n\tr(p, id) = r;\n\tlazy(p, id) = -1;\n\tif (l == r) {\n\t\tcnt(p, id) = (a[l] == id + 'a');//\u5982\u679c\u8be5\u4f4d\u7f6e\u662f\u6b63\u5728\u5efa\u7acb\u7684\u7ebf\u6bb5\u6811\u6240\u4ee3\u8868\u7684\u4f4d\u7f6e\uff0c\u8be5\u70b9\u6743\u503c\u4e3a1\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid, id);\n\tbuild(rs, mid + 1, r, id);\n\tcnt(p, id) = cnt(ls, id) + cnt(rs, id);\n\treturn;\n}\ninline void spread(int p, int id) {//\u5904\u7406lazy\u6807\u8bb0\u7684\u51fd\u6570\n\tif (~lazy(p, id)) {//\u7b49\u4ef7\u4e8elazy(p, id) != -1\n\t\tlazy(ls, id) = lazy(rs, id) = lazy(p, id);\n\t\tcnt(ls, id) = lazy(ls, id) * (r(ls, id) - l(ls, id) + 1);\n\t\tcnt(rs, id) = lazy(rs, id) * (r(rs, id) - l(rs, id) + 1);\n\t\tlazy(p, id) = -1;\n\t}\n}\nvoid change(int p, int l, int r, int d, int id) {\n\tif (l <= l(p, id) && r(p, id) <= r) {\n\t\tlazy(p, id) = d;\n\t\tcnt(p, id) = d * (r(p, id) - l(p, id) + 1);\n\t\treturn;\n\t}\n\tspread(p, id);//\u533a\u95f4\u8986\u76d6\u64cd\u4f5c\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u5fc5\u987b\u5148\u5904\u7406\u6389\u624d\u80fd\u5411\u4e0b\u4fee\u6539\n\tif (l <= r(ls, id))\n\t\tchange(ls, l, r, d, id);\n\tif (l(rs, id) <= r)\n\t\tchange(rs, l, r, d, id);\n\tcnt(p, id) = cnt(ls, id) + cnt(rs, id);\n\treturn;\n}\nint ask(int p, int l, int r, int id) {\n\tif (l <= l(p, id) && r(p, id) <= r)\n\t\treturn cnt(p, id);\n\tspread(p, id);//\u67e5\u8be2\u524d\u5148\u4e0b\u653elazy\u6807\u8bb0\n\tint ans = 0;\n\tif (l <= r(ls, id))\n\t\tans += ask(ls, l, r, id);\n\tif (l(rs, id) <= r)\n\t\tans += ask(rs, l, r, id);\n\treturn ans;\n}\nvoid final(int p, int id) {//\u7528\u4e8e\u904d\u5386\u7ebf\u6bb5\u6811\n\tif (l(p, id) == r(p, id)) {\n\t\tif (cnt(p, id) == 1)//\u5982\u679c\u8be5\u70b9\u6743\u503c\u4e3a1\uff0c\u5c06\u7b54\u6848\u6570\u7ec4\u7684\u8be5\u4f4d\u7f6e\u8bb0\u4e3a\u7b54\u6848\n\t\t\ta[l(p, id)] = id + 'a';\n\t\treturn;\n\t}\n\tspread(p, id);\n\tfinal(ls, id);\n\tfinal(rs, id);\n}\nint main() {\n\tscanf(\"%d %d\", &n, &q);\n\tscanf(\"%s\", a + 1);\n\tfor (int i = 0; i < 26; i++)//\u5efa\u7acb26\u68f5\u7ebf\u6bb5\u6811\n\t\tbuild(1, 1, n, i);\n\tint l, r, opt;\n\twhile (q--) {\n\t\tscanf(\"%d %d %d\", &l, &r, &opt);\n\t\tif (opt == 1) {\n\t\t\tint f = l, len;\n\t\t\tfor (int i = 0; i < 26; i++) {\n\t\t\t\tlen = ask(1, l, r, i);\n\t\t\t\tif (len == 0)//\u6ca1\u6709\u8be5\u5b57\u7b26\u76f4\u63a5\u8df3\u8fc7\n\t\t\t\t\tcontinue;\n\t\t\t\tchange(1, l, r, 0, i);//\u5148\u5168\u90e8\u7f6e\u96f6\n\t\t\t\tchange(1, f, f + len - 1, 1, i);//\u4f9d\u6b21\u5411\u53f3\u5e73\u644a\n\t\t\t\tf += len;\n\t\t\t}\n\t\t} else {\n\t\t\tint f = r, len;\n\t\t\tfor (int i = 0; i < 26; i++) {\n\t\t\t\tlen = ask(1, l, r, i);\n\t\t\t\tif (len == 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tchange(1, l, r, 0, i);\n\t\t\t\tchange(1, f - len + 1, f, 1, i);//\u4f9d\u6b21\u5411\u5de6\u5e73\u644a\n\t\t\t\tf -= len;\n\t\t\t}\n\t\t}\n\t}\n\tmemset(a, 0, sizeof(a));\n\tfor (int i = 0; i < 26; i++) {//\u904d\u5386\u6240\u6709\u7ebf\u6bb5\u6811\n\t\tfinal(1, i);\n\t}\n\tfor (int i = 1; i <= n; i++)//\u8f93\u51fa\u7b54\u6848\n\t\tputchar(a[i]);\n\treturn 0;\n}\n```",
        "postTime": 1581553417,
        "uid": 124683,
        "name": "Krystallos",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF558E \u3010A Simple Task\u3011"
    },
    {
        "content": "\u9898\u610f:\n$n$\u4e2a\u5c0f\u5199\u5b57\u6bcd,m\u6b21\u64cd\u4f5c\n$op==1$:\u5bf9$[l,r]$\u533a\u95f4\u5185\u7684\u5143\u7d20\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\n$op==0$:\u5bf9$[l,r]$\u533a\u95f4\u5185\u7684\u5143\u7d20\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\n\u6253\u5370\u6267\u884c\u5b8c\u6240\u6709\u64cd\u4f5c\u540e\u7684\u7ed3\u679c\n\n\u89e3\u6cd5:\n\u7528\u53ef\u5206\u88c2\u5408\u5e76\u7684\u7ebf\u6bb5\u6811,\u5373\u5efa$n$\u4e2a\u52a8\u6001\u5f00\u70b9\u7684\u6743\u503c\u7ebf\u6bb5\u6811,\u7528$set$\u7ef4\u62a4\u533a\u95f4,\u5206\u88c2\u7684\u65f6\u5019\u4ece$set$\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u533a\u95f4\u5206\u88c2\u5373\u53ef.\n\n\u987a\u4fbf\u8bf4\u4e0b\u8fd9\u73a9\u610f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O((n+m)logn)$,\u5728\u8fd9\u9898\u4e2d\u8dd1\u7684\u771f\u662f\u98de\u5feb,\u6700\u6162\u7684\u70b9\u4e5f\u53ea\u8981$140ms$\n\n```cpp\n#include <bits/stdc++.h>\n#define Fi first\n#define Se second\nusing namespace std;\nconst int N=3e5+10;\nint s[N*20],ls[N*20],rs[N*20],rt[N],flag[N],ncnt;\nset<int> st;\nvoid update(int l,int r,int &k,int p)\n{\n    if(!k) k=++ncnt;\n    s[k]++;\n    if(l==r) return ;\n    int m=l+r>>1;\n    if(p<=m) update(l,m,ls[k],p);\n    else update(m+1,r,rs[k],p);\n}\n//\u7ebf\u6bb5\u6811\u5206\u88c2\u6838\u5fc3\u64cd\u4f5c\nvoid tear(int &x,int y,int k,int flag)//\u5bf9y\u7ebf\u6bb5\u6811\u8fdb\u884c\u5206\u88c2,\u4f7f\u5f97y\u7ebf\u6bb5\u6811\u4fdd\u7559\u4e0bk\u4e2a\u5143\u7d20,\u5269\u4e0b\u7684\u7ed9x\u7ebf\u6bb5\u6811\n{\n    if(s[y]==k) return ;\n    x=++ncnt;//\u65b0\u5efa\u7ed3\u70b9\n    s[x]=s[y]-k;//\u51cf\u53bb\u5f53\u524d\u7ed3\u70b9\u5143\u7d20\u6570\u91cf\n    s[y]=k;//\u4fdd\u7559\u5143\u7d20\n    if(s[ls[y]]+s[rs[y]]==0) return ;//\u5982\u679c\u5143\u7d20\u6709\u91cd\u590d\u5c31\u5fc5\u987b\u52a0\u8fd9\u53e5,\u56e0\u4e3a\u4e00\u4e2a\u7ed3\u70b9\u4e0b\u9762\u5143\u7d20\u4e0d\u4e00\u5b9a\u6070\u597d\u7b49\u4e8e1,\u53cd\u6b63\u6ca1\u6709\u513f\u5b50\u5c31\u505c\u6b62\n    //\u5347\u5e8f:\n    //\u5bf9\u4e8e\u5148\u770b\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u6570\u91cf\u662f\u5426\u5927\u4e8e\u7b49\u4e8ek,\u5982\u679c\u6ee1\u8db3\u8bf4\u660e\n    //\u2460\u5de6\u8fb9\u4e2d\u6709\u90e8\u5206\u662f,\u53ef\u80fd\u540c\u65f6\u5b58\u5728x\u548cy\u7ebf\u6bb5\u6811\u7684,\u9012\u5f52\u5de6\u513f\u5b50.\n    //\u2461\u53f3\u8fb9\u90fd\u662fx\u7ebf\u6bb5\u6811\u7684,x\u7684\u53f3\u513f\u5b50\u76f4\u63a5\u628ay\u7684\u53f3\u513f\u5b50\u62ff\u6765\u7528,\u7136\u540e\u628ay\u53f3\u513f\u5b50\u5220\u4e86\n    //\u5982\u679c\u4e0d\u6ee1\u8db3>=k \u63a5\u7740\u9012\u5f52\u53f3\u513f\u5b50\n    //\u964d\u5e8f:\u628ax\u548cy\u7684\u5de6\u53f3\u513f\u5b50\u4e92\u6362\u7136\u540e\u540c\u4e0a\n    //\n    if(flag) swap(ls[y],rs[y]),swap(ls[x],rs[x]);\n    if(k<=s[ls[y]]) tear(ls[x],ls[y],k,flag),rs[x]=rs[y],rs[y]=0;\n    else  tear(rs[x],rs[y],k-s[ls[y]],flag);\n    if(flag) swap(ls[y],rs[y]),swap(ls[x],rs[x]);\n}\n//\u628a\u4f4d\u7f6ep\u6240\u5728\u7684\u7ebf\u6bb5\u6811\u5206\u88c2\u51fa\u53bb\nauto split(int p)\n{\n    auto it = st.lower_bound(p);\n    if(it!=st.end()&&*it==p) return it;\n    it--;\n    tear(rt[p],rt[*it],p-*it,flag[p]=flag[*it]);\n    return st.insert(p).Fi;\n}\nvoid merge(int &x,int y)//\u7ebf\u6bb5\u6811\u5408\u5e76 \u628ay\u7ebf\u6bb5\u6811\u5408\u5e76\u5230y\u4e0a\n{\n    if(!x||!y){x|=y;return ;}\n    s[x]+=s[y];\n    merge(ls[x],ls[y]);\n    merge(rs[x],rs[y]);\n}\nint cnt[35];\nvoid query(int l,int r,int k)//\u7edf\u8ba1\u7b54\u6848\n{\n    if(l==r||s[k]==0) {cnt[l]+=s[k];return ;}\n    int m=l+r>>1;\n    if(ls[k]) query(l,m,ls[k]);\n    if(rs[k]) query(m+1,r,rs[k]);\n}\nint main()\n{\n    int n,m;scanf(\"%d%d\",&n,&m);\n    getchar();\n    for(int i=1;i<=n;i++)\n    {\n        int x=getchar()-'a'+1;\n        update(1,30,rt[i],x);\n        st.insert(i);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int l,r,op;\n        scanf(\"%d%d%d\",&l,&r,&op);\n        auto it2=split(r+1),it1=split(l);\n        for(auto it=++it1;it!=it2;it++) merge(rt[l],rt[*it]);\n        flag[l]=(op^1);st.erase(it1,it2);\n    }\n    for(auto e:st)\n    {\n        memset(cnt,0,sizeof cnt);\n        query(1,30,rt[e]);\n        if(flag[e]==0)\n        {\n            for(int j=0;j<30;j++)\n                for(int k=1;k<=cnt[j];k++)\n                    printf(\"%c\",j+'a'-1);\n        }\n        else\n        {\n            for(int j=30;j>=0;j--)\n                for(int k=1;k<=cnt[j];k++)\n                    printf(\"%c\",j+'a'-1);\n        }\n    }\n    return 0;\n}\n/*\n\n*/\n\n```\n\n\n\n",
        "postTime": 1563937413,
        "uid": 73894,
        "name": "a17436223",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF558E \u3010A Simple Task\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u597d\u7325\u7410\u554a\u554a\u554a\u554a\u554a\u554a\n\u5199\u4e86\u4e00\u4e2a\u4e0a\u5348\u554a\u554a\u554a\u554a\n\u6ca1\u6709\u5728update\u91cc\u5199pushup\u554a\u554a\u554a\u554a\n\n##### \u9898\u76ee\u5927\u610f\uff1a\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32s\uff0c\u6709q\u4e2a\u64cd\u4f5c\nl r 1 :\u628asl..rsl..r\u6309\u5347\u5e8f\u6392\u5e8f \nl r 0 :\u628asl..rsl..r\u6309\u964d\u5e8f\u6392\u5e8f\n\n#### Solution\uff1a\n\u6211\u4eec\u8003\u8651\u5efa26\u68f5\u7ebf\u6bb5\u6811\uff0c\u7b2ci\u68f5\u7ebf\u6bb5\u6811\u7684[x,y]\u8868\u793a\u5728[x,y]\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u5b57\u6bcd'a'+i-1\n\u81f3\u4e8e\u4fee\u6539\u65f6\u6211\u4eec\u53ef\u4ee5\u4ee5\u5347\u5e8f\u4e3a\u4f8b\uff0c\u4ecea\u81f3z\u6309\u987a\u5e8f\u5f80\u524d\u4e22\uff0c\u8bb0\u5f97\u8981\u6e05\u7a7a\u533a\u95f4\n\u540c\u7406\uff0c\u964d\u5e8f\u53cd\u8fc7\u6765\u5c31\u662f\u4e86\n\n#### Code:\n~~\u6211\u4eec\u53ef\u4ee5\u7528sort\u554a\u554a\uff0c\u53ea\u4e0d\u8fc7\u4f1aTLE~~\n```\n#pragma GCC optimize(3)\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n \nusing namespace std;\n \nint n,q;\nchar s[100001];\n \nbool cmp(char a,char b){\n    return a>b;\n}\n \nint main(){\n    scanf(\"%d%d%s\",&n,&q,s);\n    for(int i=1;i<=q;i++){\n        int l,r,x;\n        scanf(\"%d%d%d\",&l,&r,&x);\n        if(x==1)sort(s+l-1,s+r);\n        else sort(s+l-1,s+r,cmp);\n        printf(\"%s\\n\",s);\n    }\n    printf(\"\\n%s\",s);\n    return 0;\n}\n```\n\u8fd9\u91cc\u624d\u662f\u6b63\u89e3\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nchar s[1000001];     \nint n,m,sum[27][400001],lazy[27][400001];\n\ninline int rd(){\n\tregister int x=0,y=1;\n\tregister char c=getchar();\n\twhile(c>'9' or c<'0'){\n\t\tif(c=='-'){\n\t\t\ty=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\twhile(c>='0' and c<='9'){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*y;\n}\n\ninline void pushup(int o,int rt){\n\tsum[rt][o]=sum[rt][o<<1]+sum[rt][o<<1|1];\n}\n\ninline void pushdown(int o,int l,int r,int rt){\n\tif(lazy[rt][o]!=-1){\n\t\tint mid=(l+r)>>1;\n\t\tsum[rt][o]=lazy[rt][o]*(r-l+1);\n\t\tsum[rt][o<<1]=lazy[rt][o]*(mid-l+1);\n\t\tsum[rt][o<<1|1]=lazy[rt][o]*(r-mid);\n\t\tlazy[rt][o<<1]=lazy[rt][o<<1|1]=lazy[rt][o];\n\t\tlazy[rt][o]=-1;\n\t}\n}\n\nvoid build(int o,int l,int r){\n\tif(l==r){\n\t\tsum[s[l]-'a'+1][o]=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(o<<1,l,mid);\n\tbuild(o<<1|1,mid+1,r);\n\tfor(int i=1;i<=26;i++)pushup(o,i);\n}\n\ninline int query(int o,int l,int r,int x,int y,int rt){\n\tif(x<=l and y>=r){\n\t\treturn sum[rt][o];\n\t}\n\tpushdown(o,l,r,rt);\n\tint mid=(l+r)>>1,ret=0;\n\tif(x<=mid)ret+=query(o<<1,l,mid,x,y,rt);\n\tif(y>mid)ret+=query(o<<1|1,mid+1,r,x,y,rt);\n\treturn ret;\n}\n\ninline void update(int o,int l,int r,int x,int y,int rt,int v){\n\tif(x<=l and y>=r){\n\t\tlazy[rt][o]=v;\n\t\tsum[rt][o]=v*(r-l+1);\n\t\treturn;\n\t}\n\tpushdown(o,l,r,rt);\n\tint mid=(l+r)>>1;\n\tif(x<=mid)update(o<<1,l,mid,x,y,rt,v);\n\tif(y>mid)update(o<<1|1,mid+1,r,x,y,rt,v);\n\tpushup(o,rt);\n}\n\nvoid output(int o,int l,int r){\n\tif(l==r){\n\t\tfor(int i=1;i<=26;i++){\n\t\t\tif(sum[i][o]){\n\t\t\t\ts[l]='a'+i-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tfor(int i=1;i<=26;i++)pushdown(o,l,r,i);\n\tint mid=(l+r)>>1;\n\toutput(o<<1,l,mid);\n\toutput(o<<1|1,mid+1,r);\n}\n\nint main(){\n\tfor(int i=1;i<=26;i++)memset(lazy[i],-1,sizeof(lazy[i]));\n\tn=rd(),m=rd();\n\tscanf(\"%s\",s+1);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tint x=rd(),y=rd();\n\t\tif(rd()){\n\t\t\tint tmp=x-1;\n\t\t\tfor(int i=1;i<=26;i++){\n\t\t\t\tint cas=query(1,1,n,x,y,i);\n\t\t\t\tif(!cas)continue;\n\t\t\t\tupdate(1,1,n,x,y,i,0);\n\t\t\t\tupdate(1,1,n,tmp+1,tmp+cas,i,1);tmp=tmp+cas;\n\t\t\t}\n\t\t}else {\n\t\t\tint tmp=x-1;\n\t\t\tfor(int i=26;i>=1;i--){\n\t\t\t\tint cas=query(1,1,n,x,y,i);\n\t\t\t\tif(!cas)continue;\n\t\t\t\tupdate(1,1,n,x,y,i,0);\n\t\t\t\tupdate(1,1,n,tmp+1,tmp+cas,i,1);tmp=tmp+cas;\n\t\t\t}\n\t\t}\n\t}\n\toutput(1,1,n);\n\tprintf(\"%s\\n\",s+1);\n\treturn 0;\n}\n```",
        "postTime": 1533214506,
        "uid": 48146,
        "name": "ezoiHY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF558E \u3010A Simple Task\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.luogu.org/blog/oldherd/solution-CF558E)  \n\u6211\u4eec\u8003\u8651\u5efa\u8d7726\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u68f5\u7ef4\u62a4\u4e00\u79cd\u5b57\u6bcd\uff0c\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u7ef4\u62a4\u6bcf\u79cd\u5b57\u6bcd\u51fa\u73b0\u5730\u4f4d\u7f6e\u4fe1\u606f\u3002  \n\u5bf9\u4e8e\u5347\u5e8f\u6392\u5e8f\uff0c\u6211\u4eec\u4eceA\u5230Z\u4f9d\u6b21\u67e5\u8be2\u6240\u6709\u7ebf\u6bb5\u6811\u3002\u7edf\u8ba1\u5230\u76ee\u524d\u7ebf\u6bb5\u6811\u4e4b\u524d\u51fa\u73b0\u7684\u5b57\u6bcd\u4e0e\u4e2a\u6570p\uff0c\u67e5\u8be2\u5f53\u524d\u5b57\u6bcd\u4e2a\u6570tt\uff0c\u82e5\u64cd\u4f5c\u7684\u533a\u95f4\u4e3a[t, g]\uff0c\u5219\u5f53\u524d\u5b57\u6bcd\u5728\u6392\u5e8f\u540e\u7684\u533a\u95f4\u5e94\u5f53\u4e3a[t+p, t+p+tt-1]\u3002\u8be6\u60c5\u53c2\u7167\u4ee3\u7801\u3002\u964d\u5e8f\u6392\u5e8f\u5219\u4eceZ\u5230A\u904d\u5386\u3002  \n\u5173\u4e8e\u8f93\u51fa\uff0c\u6211\u4eec\u904d\u5386\u6bcf\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5c06\u5176\u5b57\u6bcd\u6240\u5360\u7684\u4f4d\u7f6e\u8d4b\u503c\u5230\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u7edf\u4e00\u8f93\u51fa\u5373\u53ef\u3002  \n\u9644\u4e0aac\u4ee3\u7801\uff1a  \n```cpp\n#include <cstdio>\n\nusing namespace std;\n\nconst int sz = 7000010, maxn = 100010;\n\ninline void read(int &x) {\n\tchar ch = getchar();\n\tx = 0;\n\twhile(ch < '0' || ch > '9') ch = getchar();\n\twhile(ch >= '0' && ch <= '9') x = (x<<3)+(x<<1)+(ch&15), ch = getchar();\t\n}\n\nstruct stree{\n\tint ls, rs, val, laz;\n}t[sz];\nint root[30], tot = 1;\n\ninline int newnode() {\n\tt[tot].ls = t[tot].rs = t[tot].val = 0; t[tot].laz = -1;\n\treturn tot++;\n}\n\ninline void spread(int p, int ll, int lr) {\n\tif(!t[p].ls) t[p].ls = newnode();\n\tif(!t[p].rs) t[p].rs = newnode();\n\tif(t[p].laz == -1) return;\n\tt[t[p].ls].val = ll * t[p].laz; t[t[p].ls].laz = t[p].laz;\n\tt[t[p].rs].val = lr * t[p].laz; t[t[p].rs].laz = t[p].laz;\n\tt[p].laz = -1;\n}\n\ninline void change(int p, int lp, int rp, int l, int r, int v) {\n\tif(l <= lp && rp <= r) { t[p].val = (rp-lp+1) * v; t[p].laz = v; return; }\n\tint mid = (lp + rp) >> 1;\n\tspread(p, mid-lp+1, rp-mid);\n\tif(l <= mid) change(t[p].ls, lp, mid, l, r, v);\n\tif(r > mid) change(t[p].rs, mid+1, rp, l, r, v);\n\tt[p].val = t[t[p].ls].val + t[t[p].rs].val;\n}\n\ninline int query(int p, int lp, int rp, int l, int r) {\n\tif(l <= lp && rp <= r) return t[p].val;\n\tint mid = (lp + rp) >> 1;\n\tspread(p, mid-lp+1, rp-mid);\n\tint ans = 0;\n\tif(l <= mid) ans += query(t[p].ls, lp, mid, l, r);\n\tif(r > mid) ans += query(t[p].rs, mid+1, rp, l, r);\n\treturn ans;\n}\n\nchar s[maxn];\n\ninline void putree(int p, int lp, int rp, char ch) {\n\tif(t[p].val == rp-lp+1)\t{\n\t\tfor(int i = lp; i <= rp; i++) s[i] = ch;\n\t\treturn;\t\n\t}\n\tif(lp == rp) return;\n\tint mid = (lp + rp) >> 1;\n\tspread(p, mid-lp+1, rp-mid);\n\tif(t[p].ls && t[t[p].ls].val) putree(t[p].ls, lp, mid, ch);\n\tif(t[p].rs && t[t[p].rs].val) putree(t[p].rs, mid+1, rp, ch);\n}\n\nint main() {\n\tint n, m, t, g, c;\n\tchar ch;\n\tread(n); read(m);\n\tfor(int i = 0; i < 26; i++) root[i] = newnode();\n\tfor(int i = 1; i <= n; i++) {\n\t\tdo{\n\t\t\tch = getchar();\n\t\t}while(ch < 'a' || ch > 'z');\n\t\tchange(root[ch-'a'], 1, n, i, i, 1);\n\t}\n\twhile(m--) {\n\t\tread(t); read(g); read(c);\n\t\tint p = 0, tt;\n\t\tif(c == 1) {\n\t\t\tfor(int i = 0; i < 26; i++) {\n\t\t\t\ttt = query(root[i], 1, n, t, g);\n\t\t\t\tif(!tt) continue;\n\t\t\t\tchange(root[i], 1, n, t, g, 0);\n\t\t\t\tchange(root[i], 1, n, t+p, t+p+tt-1, 1);\n\t\t\t\tp += tt;\n\t\t\t}\n\t\t} else {\n\t\t\tfor(int i = 25; i > -1; --i) {\n\t\t\t\ttt = query(root[i], 1, n, t, g);\n\t\t\t\tif(!tt) continue;\n\t\t\t\tchange(root[i], 1, n, t, g, 0);\n\t\t\t\tchange(root[i], 1, n, t+p, t+p+tt-1, 1);\n\t\t\t\tp += tt;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0; i < 26; i++) \n\t\tputree(root[i], 1, n, 'a'+i);\n\tfor(int i = 1; i <= n; i++) putchar(s[i]);\n\treturn 0;\t\n}\n```\n\u6b22\u8fce\u4e92\u76f8\u5173\u6ce8(\u7136\u800c\u5728oi\u754c\u849f\u84bb\u7684\u5708\u5f88\u5c0f)\u3002  \n\u6700\u540e\u518d\u6b21\u5b89\u5229\u4e00\u4e0b[\u849f\u84bb\u7684\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/oldherd/)  ",
        "postTime": 1562812772,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF558E \u3010A Simple Task\u3011"
    },
    {
        "content": "### \u5e7f\u544a\uff1a[\u6211\u7684\u535a\u5ba2](http://ebola.blogwo.com/)\n\n\u8003\u8651\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u89e3\u8fd9\u9053\u9898\n\n\u8003\u8651\u5230\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5b57\u6bcd\u5206\u522b\u5148\u5efa\u4e00\u68f5\u7a7a\u6811\uff0c\u4e00\u517126\u68f5\uff0c\u8303\u56f4\u90fd\u662f1~n\n\n\u8fd9\u4e9b\u7ebf\u6bb5\u6811\u7684\u542b\u4e49\u662f\u8fd9\u6837\u7684\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5b83\u6240\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u7684\u8282\u70b9[l,r]\uff0c\u8868\u793a\u5728\u5b57\u7b26\u4e32\u7684[l,r]\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u8fd9\u4e2a\u5b57\u6bcd\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u521d\u59cb\u5316\u8fd926\u68f5\u7ebf\u6bb5\u6811\u65f6\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7684\u7b2ci\u4f4d\uff0c\u5bf9\u76f8\u5e94\u7684\u7ebf\u6bb5\u6811\u8fdb\u884cadd(i,i,1)\u64cd\u4f5c\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6392\u5e8f\u64cd\u4f5c\n\n\u9996\u5148\u6211\u4eec\u5f00\u4e00\u4e2a\u6876\u6392\u6570\u7ec4sum[26+5]\uff0c\u8868\u793a\u6bcf\u4e2a\u5b57\u6bcd\u5728\u5f85\u64cd\u4f5c\u533a\u95f4\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0csum[i]\u7684\u503c\u5c31\u662f\u5bf9\u76f8\u5e94\u7ebf\u6bb5\u6811\u8fdb\u884cquery(l,r)\u7684\u7ed3\u679c\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u6e05\u7a7a\u6240\u6709\u7ebf\u6bb5\u6811\u7684[l,r]\u533a\u95f4\uff0c\u8fd9\u91cc\u53ef\u4ee5\u641e\u4e00\u4e2amodify\u6807\u8bb0\uff0c\u8868\u793a\u5c06\u76f8\u5e94\u8282\u70b9\u7684add\u6807\u8bb0\u4ee5\u53ca\u6743\u503c\u6e05\u96f6\uff0c\u6ce8\u610fpushdown\u65f6\u4f18\u5148\u5904\u7406modify\u6807\u8bb0\n\n\u7136\u540e\u6211\u4eec\u6309\u987a\u5e8f\u628a\u8fd9\u4e9b\u5b57\u6bcd\u52a0\u56de\u53bb\uff0c\u4e3e\u4e2a\u5347\u5e8f\u6392\u5e8f\u7684\u4f8b\u5b50\uff1a\u533a\u95f4[3,10]\u4e2d\u67093\u4e2aa\uff0c4\u4e2ab\uff0c1\u4e2ac\uff0c\u90a3\u6211\u4eec\u5c31\u5bf9a\u76f8\u5e94\u7684\u7ebf\u6bb5\u6811\u8fdb\u884cadd(3,5,1)\uff0c\u5bf9b\u76f8\u5e94\u7684\u7ebf\u6bb5\u6811\u8fdb\u884cadd(6,9,1)\uff0c\u5bf9c\u76f8\u5e94\u7684\u7ebf\u6bb5\u6811\u8fdb\u884cadd(10,10,1)\uff0c\u964d\u5e8f\u6392\u5e8f\u5012\u8fc7\u6765\u641e\u5c31\u884c\u4e86\n\n\u6700\u540e\u8f93\u51fa\u5c31\u679a\u4e3ei=1~n\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709i\uff0c\u5bf9\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u90fd\u8fdb\u884cquery(i,i)\uff0c\u5982\u679cquery\u7684\u7ed3\u679c\u975e0\uff0c\u90a3\u5c31\u8f93\u51fa\u76f8\u5e94\u7684\u5b57\u6bcd\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n log n * 26)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,q;\nchar s[100010];\nstruct Node\n{\n\tNode *lson,*rson;\n\tint v,add,modify;\n};\nNode *rt[30];\nint sum[30];\n\nvoid pushdown(Node* &o,int l,int r)\n{\n\tint mid=(l+r)/2,k=o->add,tag=o->modify;\n\to->add=o->modify=0;\n\tif(l==r) return;\n\tif(tag)\n\t{\n\t\to->lson->modify=1;\n\t\to->rson->modify=1;\n\t\to->lson->add=0;\n\t\to->rson->add=0;\n\t\to->lson->v=0;\n\t\to->rson->v=0;\n\t}\n\to->lson->add+=k;\n\to->rson->add+=k;\n\to->lson->v+=k*(mid-l+1);\n\to->rson->v+=k*(r-mid);\n}\n\nvoid build(Node* &o,int l,int r)\n{\n\to=new Node;\n\to->v=o->add=o->modify=0;\n\to->lson=o->rson=NULL;\n\tif(l==r) return;\n\tint mid=(l+r)/2;\n\tbuild(o->lson,l,mid);\n\tbuild(o->rson,mid+1,r);\n}\n\nvoid add(Node* &o,int l,int r,int x,int y,int k)\n{\n\tif(l>=x&&r<=y)\n\t{\n\t\to->v+=k*(r-l+1);\n\t\to->add+=k;\n\t\treturn;\n\t}\n\tif(o->add||o->modify) pushdown(o,l,r);\n\tint mid=(l+r)/2;\n\tif(mid>=x) add(o->lson,l,mid,x,y,k);\n\tif(mid<y) add(o->rson,mid+1,r,x,y,k);\n\to->v=o->lson->v+o->rson->v;\n}\n\nvoid clear(Node* &o,int l,int r,int x,int y)\n{\n\tif(l>=x&&r<=y)\n\t{\n\t\to->v=0;\n\t\to->modify=1;\n\t\to->add=0;\n\t\treturn;\n\t}\n\tif(o->add||o->modify) pushdown(o,l,r);\n\tint mid=(l+r)/2;\n\tif(mid>=x) clear(o->lson,l,mid,x,y);\n\tif(mid<y) clear(o->rson,mid+1,r,x,y);\n\to->v=o->lson->v+o->rson->v;\n}\n\nint query(Node* &o,int l,int r,int x,int y)\n{\n\tif(l>=x&&r<=y) return o->v;\n\tif(o->add||o->modify) pushdown(o,l,r);\n\tint mid=(l+r)/2,res=0;\n\tif(mid>=x) res+=query(o->lson,l,mid,x,y);\n\tif(mid<y) res+=query(o->rson,mid+1,r,x,y);\n\treturn res;\n}\n\nint main()\n{\n\tint l,r,k;\n\tscanf(\"%d%d%s\",&n,&q,s+1);\n\tfor(int i=0;i<26;i++) build(rt[i],1,n);\n\tfor(int i=1;i<=n;i++) add(rt[s[i]-'a'],1,n,i,i,1);\n\tfor(int T=1;T<=q;T++)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&k);\n\t\tmemset(sum,0,sizeof(sum));\n\t\tfor(int i=0;i<26;i++)\n\t\t{\n\t\t\tsum[i]=query(rt[i],1,n,l,r);\n\t\t\tclear(rt[i],1,n,l,r);\n\t\t}\n\t\tif(k==1)\n\t\t{\n\t\t\tint p=l;\n\t\t\tfor(int i=0;i<26;i++)\n\t\t\t\tif(sum[i])\n\t\t\t\t{\n\t\t\t\t\tadd(rt[i],1,n,p,p+sum[i]-1,1);\n\t\t\t\t\tp+=sum[i];\n\t\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint p=r;\n\t\t\tfor(int i=0;i<26;i++)\n\t\t\t\tif(sum[i])\n\t\t\t\t{\n\t\t\t\t\tadd(rt[i],1,n,p-sum[i]+1,p,1);\n\t\t\t\t\tp-=sum[i];\n\t\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=0;j<26;j++)\n\t\t\tif(query(rt[j],1,n,i,i)!=0){putchar('a'+j);break;}\n\treturn 0;\n}\n\n```",
        "postTime": 1526799918,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF558E \u3010A Simple Task\u3011"
    }
]