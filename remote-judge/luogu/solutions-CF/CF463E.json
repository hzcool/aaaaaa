[
    {
        "content": "~~\u66b4\u529b\u51fa\u5947\u8ff9\u3002~~\n\n\u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u64cd\u4f5c\u975e\u5e38\u7684\u96be\u641e\u5440\uff0c\u60f3 $\\log n$ \u7ea7\u522b\u6765\u7ef4\u62a4\u663e\u7136\u662f\u4e0d\u592a\u53ef\u80fd\u3002\n\n\u4f46\u662f\u6211\u4eec\u53c8\u770b\u5230\uff0c`\u4fdd\u8bc1 2 \u64cd\u4f5c\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 50\u3002`\uff0c\u4ee5\u53ca 10s \u7684\u65f6\u9650\uff0c\u5c1d\u8bd5\u7528\u66b4\u529b\u6765\u51fa\u5947\u8ff9\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u66b4\u529b\u8981\u5199\u7684\u8db3\u591f\u4f18\u7f8e\uff0c\u9996\u5148\uff0c\u5148\u904d\u5386\u4e00\u4e0b\u6574\u68f5\u6811\uff0c\u904d\u5386\u5230\u4e00\u4e2a\u70b9\uff0c\u628a\u5b83\u8d28\u56e0\u6570\u5206\u89e3\u4e86\uff0c\u7edf\u8ba1\u7b54\u6848\uff0c\u56e0\u4e3a $\\gcd>1$ \u5fc5\u5b9a\u6709\u4e24\u4e2a\u6570\u662f\u6709\u516c\u5171\u7684\u8d28\u56e0\u5b50\u7684\uff0c\u7136\u540e\u6254\u5230\u4e00\u4e2a\u8d28\u6570\u7684\u6876\u91cc\u9762\u53bb\uff0c\u8bb0\u5f97\u628a\u6876\u7ed9\u6e05\u7a7a\u4e86\u3002\n\n\u5982\u679c\u6709\u64cd\u4f5c $2$\uff0c\u5c31\u53ea\u628a\u90a3\u4e2a\u70b9\u7ed9\u6e05\u7a7a\u4e86\uff0c\u5176\u4ed6\u70b9\u4e0d\u53d8\uff0c\u8fd9\u6837\u80fd\u6709\u4e00\u4e2a\u975e\u5e38\u5f3a\u7684\u526a\u679d\u6548\u679c\u3002\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u590d\u6742\u5ea6\uff0c\u5bf9\u4e8e\u5f00\u59cb\u7684\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u6211\u4eec\u53ea\u80fd $O(\\sqrt n)$ \u6765\u5206\u89e3\uff0c\u4f46\u662f\uff0c\u53ef\u4ee5\u628a\u8d28\u6570\u5148\u7b5b\u51fa\u6765\u518d\u5206\u89e3\uff0c\u8fd9\u6837\u5206\u89e3\u6548\u7387\u66f4\u9ad8\u4e00\u4e9b\u3002\n\n\u5bf9\u4e8e\u540e\u6765\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u904d\u5386\u8fd9\u68f5\u6811 $O(n)$\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u5206\u89e3\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u662f\u4e00\u6b21\u5c31\u53ea\u6709 $O(\\sqrt n)$ \u7684\u3002\n\n\u540c\u65f6\uff0c\u4e00\u4e2a\u6570\u7684\u8d28\u56e0\u5b50\u4e2a\u6570\u662f\u975e\u5e38\u975e\u5e38\u5c11\u7684\uff0c\u6bd4 $\\log$ \u8fd8\u8981\u5c11\uff0c\u6240\u4ee5 $5 \\times 10^6$ \u662f\u5b8c\u5168\u4e0d\u7528\u62c5\u5fc3\u7684\uff0c\u6bd5\u7adf\u65f6\u9650\u8fd8\u5f00\u8fd9\u4e48\u5927\u5440\u3002\n\n\u6700\u540e\u51e0\u4e2a\u5751\u70b9\u6ce8\u610f\u4e00\u4e0b\uff0c\u4e00\u5b9a\u8981\u6e05\u7a7a\uff01\uff0c\u4ee5\u53ca\u8be2\u95ee\u7684\u7b54\u6848\u662f\u6df1\u5ea6\u6700\u5927\u800c\u4e0d\u662f\u70b9\u7684\u5927\u5c0f\u3002\n\n\u76ee\u524d\u6211\u7684\u505a\u6cd5\u5728 lg \u662f\u6700\u4f18\u89e3\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#define pb push_back\nusing namespace std;\nconst int INF=1e5+5;\nconst int INFN=2e6+5;\nstruct _node_edge{\n\tint to_,next_;\n}edge[INF<<1];\nint n,m,head[INF],tot,a[INF],dep[INF];\nvoid add_edge(int x,int y) {\n\tedge[++tot]=(_node_edge){y,head[x]};\n\thead[x]=tot;return ;\n}\nbool prime[INFN];\nvector <int> Prime,D[INF],L[INF],LL[INF];\nint p[INFN],aa[INF],pp[INFN],bb[INF];\nvoid solve(int x) {\n\tint xx=a[x];\n\tfor (int i=0;Prime[i]*Prime[i]<=xx;i++) {\n\t\tif (xx%Prime[i]==0) D[x].pb(Prime[i]),L[x].pb(0),LL[x].pb(0);\n\t\twhile (xx%Prime[i]==0) xx/=Prime[i];\n\t}\n\tif (xx>1) D[x].pb(xx),L[x].pb(0),LL[x].pb(0);\n\treturn ;\n} \nvoid DFS(int x,int fa) {\n\tdep[x]=dep[fa]+1;\n\tif (D[x].size()==0) solve(x);\n\tint len=D[x].size();aa[x]=0;\n\tfor (int i=0;i<len;i++) {\n\t\tif (aa[x]<p[D[x][i]]) aa[x]=p[D[x][i]],bb[x]=pp[D[x][i]];\n\t\tL[x][i]=p[D[x][i]];LL[x][i]=pp[D[x][i]];\n\t\tif (p[D[x][i]]<dep[x]) p[D[x][i]]=dep[x],pp[D[x][i]]=x;\n\t\t\n\t}\n\tfor (int i=head[x];i;i=edge[i].next_) {\n\t\tint v=edge[i].to_;\n\t\tif (v==fa) continue;\n\t\tDFS(v,x);\n\t}\n\tfor (int i=0;i<len;i++)\n\t\tp[D[x][i]]=L[x][i],pp[D[x][i]]=LL[x][i];\n\treturn ;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++) cin>>a[i];\n\tfor (int i=2;i<=2e6;i++) {\n\t\tif (!prime[i]) Prime.pb(i);\n\t\tint len=Prime.size(); \n\t\tfor (int j=0;j<len && Prime[j]*i<=2e6;j++) {\n\t\t\tprime[Prime[j]*i]=1;\n\t\t\tif (!(i%Prime[j])) break;\n\t\t}\n\t}\n\t\n\tfor (int i=1;i<n;i++) {\n\t\tint x=0,y=0;cin>>x>>y;\n\t\tadd_edge(x,y);add_edge(y,x);\n\t}\n\tDFS(1,0);\n\t\n\tfor (int i=1;i<=m;i++) {\n\t\tint op=0,x=0;cin>>op>>x;\n\t\tif (op==1) cout<<(bb[x]?bb[x]:-1)<<\"\\n\";\n\t\telse {\n//\t\t\tmemset(p,0,sizeof p);\n//\t\t\tmemset(pp,0,sizeof pp);\n\t\t\tint y=0;cin>>y;\n\t\t\ta[x]=y;D[x].clear();L[x].clear();\n\t\t\tDFS(1,0);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1659913273,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF463E"
    },
    {
        "content": "## \u9898\u610f\u5206\u6790\n\u7a0d\u5fae\u9700\u8981\u6ce8\u610f\u7684\u662f\u4ed6\u8ba9\u4f60\u8f93\u51fa\u7684\u662f\u8282\u70b9\u7f16\u53f7 $u_i$\uff0c\u4e0d\u662f $i$ \u3002\n\n## \u505a\u6cd5\u5206\u6790\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u8be2\u95ee v \u6211\u4eec\u8981\u505a\u4ec0\u4e48\u3002\u5373\uff0c\u6211\u4eec\u8981\u627e\u5728 $1-v$ \u8def\u5f84\u4e0a\u4e0e v \u4e0d\u4e92\u8d28\u7684\u6700\u6df1\u7684\u70b9\uff0c\u4e0d\u4e92\u8d28\u8fd9\u4e2a\u6761\u4ef6\u66f4\u82db\u523b\u4e00\u4e9b\u3002\u6211\u4eec\u60f3\u4e00\u60f3\u600e\u4e48\u5904\u7406\uff0c\u65e2\u7136\u8981\u4e0d\u4e92\u8d28\uff0c\u90a3\u4e48\u663e\u7136\u53ea\u8981\u4efb\u610f\u4e00\u4e2a\u6570\u4e0e v \u6709\u4efb\u610f\u4e00\u4e2a\u516c\u56e0\u6570\u5c31\u884c\uff0c\u4e8e\u662f\u6211\u4eec\u9884\u5904\u7406\u51fa $a_i$ \u7684\u6240\u6709\u8d28\u56e0\u6570\uff0c\u5b58\u5728\u4e00\u4e2a\u53eb\u505a p \u7684 vector \u91cc\u8fb9\u3002\u5b8c\u4e86\u4e4b\u540e\u5462\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb dfs \u4e86\u3002\u5728 $dfs$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a set\uff0c\u7c7b\u578b\u662f pair, \u5b9e\u9645\u610f\u4e49\u7684\u8bdd $set_i$ \u8868\u793a\u5305\u542b\u56e0\u5b50 i \u7684\u6570\u5b57\u6700\u6df1\u51fa\u73b0\u5728\u90a3\u91cc\uff0c\u4ec0\u4e48\u6df1\u5ea6\uff0c\u662f\u54ea\u4e2a\u70b9\u3002\n\n\u5728 dfs \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5148\u6709\u4e00\u4e2a\u5faa\u73af $i\\in [0,p[u].size]$\uff0c\u5373\u679a\u4e3e\u5f53\u524d\u6570\u5b57 u \u7684\u6bcf\u4e00\u4e2a\u56e0\u6570\uff0c\u7136\u540e\u5982\u679c $set_{p_{u,i}}$ \u4e0d\u4e3a\u7a7a\uff0c\u5373\uff0c\u5728\u5f53\u524d\u9012\u5f52\u641c\u7d22\u7684\u5b50\u6811\u4e2d\uff0c\u5728 u \u7684\u524d\u9762\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u4e0e v \u5171\u540c\u62e5\u6709 $p_{u,i}$ \u8fd9\u4e2a\u56e0\u5b50\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u5c31\u53ef\u4ee5\u628a $ans_u$ \u66f4\u65b0\u4e3a\u8fd9\u4e2a\u6570\u5b57\u3002\u5728**\u66f4\u65b0\u5b8c\u4e4b\u540e**\uff0c\u6211\u4eec\u628a $p_{u,i}$ \u653e\u8fdb set \u91cc\u8fb9\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0 $ans_u=u$ \u7684\u60c5\u51b5\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u9012\u5f52\u67e5\u627e\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u628a $set$ \u91cc\u8fb9\u7684\u5143\u7d20\u5220\u9664\u6389\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u56de\u5230\u6211\u4eec\u7684\u7236\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u5b50\u6811\u8fdb\u884c\u5de5\u4f5c\u4e86\uff0c\u5982\u679c\u4e0d\u5220\u9664\u7684\u8bdd\u4f1a\u5f71\u54cd\u6b63\u786e\u6027\u3002\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nvector<int> p[N];\nset<pair<int,int> > s[N*30];\npair<int,int> ans[N];\nint n,q,dep[N],a[N];\nint tot,head[N],ver[N<<1],nxt[N<<1];\nint read()\n{\n    int x=0,f=1;\n    char c=getchar();\n    while (c<'0'||c>'9')\n    {\n        if(c=='-') f=-1;\n        c=getchar();\n    }\n    while (c>='0'&&c<='9')\n    {\n        x=(x<<1)+(x<<3)+(c^48);\n        c=getchar();\n    }\n    return x*f;\n}\nvoid Get_Prime(int val,int u)\n{\n    p[u].clear();\n    for(int i=2;i*i<=val;i++)\n    {\n        if(val%i) continue;\n        p[u].push_back(i);\n        while(val%i==0) val/=i;\n    }\n    if(val!=1) p[u].push_back(val);\n}\nvoid add(int x,int y)\n{\n    tot++;\n    ver[tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}\nvoid DFS(int u,int fa)\n{\n    ans[u]=make_pair(-1,-1);\n    dep[u]=dep[fa]+1;\n    for(int i=0;i<p[u].size();i++)\n    {\n        int prime=p[u][i];\n        if(s[prime].size()) ans[u]=max(ans[u],*s[prime].rbegin());\n        s[prime].insert(make_pair(dep[u],u));\n    }\n\n    for(int i=head[u];i;i=nxt[i])\n    {\n        int v=ver[i];\n        if(v==fa) continue;\n        DFS(v,u);\n    }\n\n    for(int i=0;i<p[u].size();i++) s[p[u][i]].erase(make_pair(dep[u],u));\n}\nint main()\n{\n    n=read(),q=read();\n    for(int i=1;i<=n;i++) a[i]=read();\n    for(int i=1;i<=n;i++) Get_Prime(a[i],i);\n    for(int i=1;i<n;i++)\n    {\n        int x=read(),y=read();\n        add(x,y);\n        add(y,x);\n    }\n    DFS(1,0);\n    while(q--)\n    {\n        int opt=read();\n        if(opt==1) \n        {\n            int x=read();\n            cout<<ans[x].second<<endl;\n        }\n        else\n        {\n            int x=read(),y=read();\n            Get_Prime(y,x);\n            DFS(1,0);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1620798446,
        "uid": 517444,
        "name": "AladV",
        "ccfLevel": 0,
        "title": "CF463E\u9898\u89e3"
    }
]