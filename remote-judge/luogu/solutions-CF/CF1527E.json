[
    {
        "content": "## \u9898\u89e3 CF1527E \u3010Partition Game\u3011\n\n### \u9898\u610f\n\n+ \u4e00\u4e2a\u6570\u7ec4\u7684\u4ee3\u4ef7\u4e3a\uff1a\u5bf9\u4e8e\u6240\u6709\u5728\u6570\u7ec4\u91cc\u7684\u6570 $x$\uff0c\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u503c\u4e3a $x$ \u7684\u7d22\u5f15\u548c\u7b2c\u4e00\u4e2a\u503c\u4e3a $x$ \u7684\u7d22\u5f15\u7684\u7edd\u5bf9\u5dee\u4e4b\u548c\uff1b\n+ \u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a$\uff0c\u5206\u6210 $k$ \u4e2a\u8fde\u7eed\u6bb5\uff0c\u6c42\u6700\u5c0f\u4ee3\u4ef7\u548c\uff1b\n+ $1\\le a_i\\le n\\le35000$\uff0c$1\\le k\\le \\min(n,100)$\u3002\n\n### \u505a\u6cd5\n\n\u8bbe $dp_{i,j}$ \u4e3a\u524d $i$ \u4e2a\u6570\u5206\u6210 $j$ \u4e2a\u8fde\u7eed\u6bb5\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u679a\u4e3e\u6700\u540e\u4e00\u6bb5\u7684\u957f\u5ea6\uff0c\u53ef\u63a8\u51fa\u5f0f\u5b50\uff1a$dp_{i,j}=\\min\\limits_{k=1}^i(dp_{k-1,j-1}+cost(k,i))$\uff0c\u5176\u4e2d $cost(i,j)$ \u8868\u793a\u628a $a_i,a_{i+1},\\dots,a_{j-1},a_j$ \u5212\u6210\u4e00\u6bb5\u7684\u4ee3\u4ef7\u3002\n\n\u8003\u8651 $cost(i,j)$ \u7684\u6c42\u6cd5\u3002\n\n\u82e5 $a_i,a_{i+1},\\dots,a_{j-1}$ \u4e2d\u6709\u4efb\u610f\u6570\u7b49\u4e8e $a_j$\uff0c\u5219 $cost(i,j)=cost(i,j-1)+j-last_{a_j}$\uff0c\u5176\u4e2d $last_{a_j}$ \u8868\u793a $a_j$ \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002\n\n\u82e5\u6ca1\u6709\uff0c\u5219\u663e\u7136 $cost(i,j)=cost(i,j-1)$\u3002\n\n\u7136\u540e\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a $O(kn^2)$ \u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u89c2\u5bdf\u9012\u63a8\u5f0f $dp_{i,j}=\\min\\limits_{k=1}^i(dp_{k-1,j-1}+cost(k,i))$\uff0c$dp_{i+1,j}=\\min\\limits_{k=1}^{i+1}(dp_{k-1,j-1}+cost(k,i+1))$\uff0c\u53d1\u73b0\u524d\u534a\u90e8\u5206 $dp_{k-1,j-1}$ \u662f\u4e0d\u53d8\u7684\uff0c\u540e\u534a\u90e8\u5206\u5f53\u4e14\u4ec5\u5f53 $k\\le last_{a_{i+1}}$ \u65f6\u624d\u4f1a\u6539\u53d8\uff0c\u4e14\u6539\u53d8\u7684\u503c\u6052\u4e3a $j-last_{a_j}$\u3002\n\n\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u4fee\u6539\u4e00\u4e2a\u6570\uff0c\u533a\u95f4\u52a0\u4e00\u4e2a\u6570\uff0c\u533a\u95f4\u6c42\u6700\u5c0f\u503c\u3002\n\n\u76f4\u63a5\u7ebf\u6bb5\u6811\uff0c\u590d\u6742\u5ea6\u5df2\u7ecf\u662f $O(kn\\log n)$\uff0c\u53ef\u8fc7\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int inf = (1 << 30) - 1;\n\nconst int N = 4e4 + 5;\n\nint a[N];\n\nconst int K = 105;\n\nstruct Tree {\n\tTree *ls, *rs;\n\tint minn, lazy;\n\t\n\tTree() {\n\t\tminn = 0, lazy = 0;\n\t}\n\t\n\tvoid update(int k) {\n\t\tminn += k;\n\t\tlazy += k;\n\t}\n\t\n\tvoid merge(Tree t1, Tree t2) {\n\t\tminn = min(t1.minn, t2.minn);\n\t}\n} seg[(N * K) << 1];\nint tot;\n\nvoid build(Tree *t, int l, int r) {\n\tif (l == r) {\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tt->ls = &seg[++tot];\n\tt->rs = &seg[++tot];\n\tbuild(t->ls, l, mid);\n\tbuild(t->rs, mid + 1, r);\n}\n\nvoid pushdown(Tree *t) {\n\tt->ls->update(t->lazy);\n\tt->rs->update(t->lazy);\n\tt->lazy = 0;\n}\n\nvoid change(Tree *t, int l, int r, int x, int y, int k) {\n//\tprintf(\"c %d %d %d %d %d\\n\", l, r, x, y, k);\n\tif (x <= l && r <= y) {\n\t\tt->update(k);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tpushdown(t);\n\tif (x <= mid) {\n\t\tchange(t->ls, l, mid, x, y, k);\n\t}\n\tif (mid < y) {\n\t\tchange(t->rs, mid + 1, r, x, y, k);\n\t}\n\tt->merge(*t->ls, *t->rs);\n}\n\nTree query(Tree *t, int l, int r, int x, int y) {\n//\tprintf(\"q %d %d %d %d\\n\", l, r, x, y);\n\tif (x <= l && r <= y) {\n\t\treturn *t;\n\t}\n\tint mid = (l + r) >> 1;\n\tpushdown(t);\n\tTree ans;\n\tans.minn = inf;\n\tif (x <= mid) {\n\t\tans.merge(ans, query(t->ls, l, mid, x, y));\n\t}\n\tif (mid < y) {\n\t\tans.merge(query(t->rs, mid + 1, r, x, y), ans);\n\t}\n//\tprintf(\"a %d %d %d %d %d\\n\", l, r, x, y, ans.minn);\n\treturn ans;\n}\n\nint dp[N][K];\n\nint last[N];\n\nint main() {\n\tint n, k;\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\ttot = k;\n\tmemset(dp, 0x3f, sizeof dp);\n\tfor (int j = 1; j <= k; ++j) {\n\t\tbuild(&seg[j], 1, n);\n//\t\tdp[0]\n\t}\n\tdp[0][0] = 0;\n//\tprintf(\"i\");\n\tfor (int i = 1; i <= n; ++i) {\n//\t\tprintf(\"%d \", last[a[i]]);\n//\t\tprintf(\"%d\\n\", i);\n\t\tfor (int j = 1; j <= min(i, k); ++j) {\n//\t\t\tprintf(\"C %d %d %d %d\\n\", j, i, i, dp[i - 1][j - 1]);\n//\t\t\tprintf(\"%d \", j);\n\t\t\tchange(&seg[j], 1, n, i, i, dp[i - 1][j - 1]);\n//\tprintf(\"p\");\n\t\t\tif (last[a[i]]) {\n//\t\t\t\tprintf(\"C %d %d %d %d\\n\", j, 1, last[a[i]], i - last[a[i]]);\n\t\t\t\tchange(&seg[j], 1, n, 1, last[a[i]], i - last[a[i]]);\n\t\t\t}\n//\t\t\tprintf(\"Q %d %d %d\\n\", j, 1, i);\n//\tprintf(\"t\");\n\t\t\tdp[i][j] = query(&seg[j], 1, n, 1, i).minn;\n//\t\t\tprintf(\"%d \", dp[i][j]);\n\t\t}\n//\t\tprintf(\"\\n\");\n\t\tlast[a[i]] = i;\n\t}\n\tint minn = inf;\n\tfor (int j = 1; j <= k; ++j) {\n\t\tminn = min(minn, dp[n][j]);\n\t}\n\tprintf(\"%d\", minn);\n//\tprintf(\"\\n%d\", dp[0][1]);\n}\n```",
        "postTime": 1621858281,
        "uid": 246014,
        "name": "Cutest_Junior",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1527E \u3010Partition Game\u3011"
    },
    {
        "content": "\u4e00\u9053\u6709\u8da3\u7684\u51b3\u7b56\u5355\u8c03\u6027dp\u3002\n\n\u5148\u63a8\u51fa\u66b4\u529bdp\u5f0f\u5b50\uff1a\u5b9a\u4e49 $f_{i,j}$ \u4e3a\u5f53\u524d\u6700\u540e\u4e00\u5757\u4e3a\u7b2c $j$ \u5757\uff0c\u4e14\u8be5\u5757\u53f3\u7aef\u70b9\u4e3a $i$ \u65f6\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5219\u6709 $f_{i,j}=\\min\\limits_{k<i}\\{f_{k,j-1}+cost(k+1,i)\\}$\u3002\n\n\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u4e5f\u5c31\u662f $cost(i,j)+cost(i+1,j+1)\\leq cost(i+1,j)+cost(i,j+1)$\uff1a\u82e5\u6709\u4e00\u4e2a\u5143\u7d20 $x$ \u540c\u65f6\u5728 $i$ \u548c $j+1$ \u5904\u51fa\u73b0\uff0c\u5219 $x$ \u5bf9 $cost(i,j+1)$ \u7684\u8d21\u732e\u6bd4\u5176\u4ed6\u7684\u5927\uff0c\u5176\u4f59\u60c5\u51b5\u4e0b\uff0c$x$ \u5bf9\u4e24\u8fb9\u7684\u8d21\u732e\u4e00\u5b9a\u76f8\u7b49\uff0c\u53ef\u4ee5\u540c\u65f6\u51cf\u53bb\uff0c\u5219\u53ea\u5269\u540c\u65f6\u5728 $i$ \u548c $j+1$ \u5904\u51fa\u73b0\u7684 $x$ \u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\uff0c\u5f97\u8bc1\u3002\n\n\u4f46\u76f4\u63a5\u5206\u6cbb\u51b3\u7b56\u5355\u8c03\u6027dp\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(kn^2\\log n)$ \u7684\uff0c\u751a\u81f3\u4e0d\u5982\u66b4\u529bdp\uff0c\u53d1\u73b0\u74f6\u9888\u5728\u4e8e\u8ba1\u7b97 $cost$\u3002\u6a21\u62df\u4e00\u4e0b\u5206\u6cbb\u8fc7\u7a0b\uff0c\u7531\u5f53\u524d\u72b6\u6001\u8f6c\u81f3\u5b50\u72b6\u6001\u65f6\u6709\u5927\u91cf\u91cd\u590d\u8ba1\u7b97\uff0c\u8003\u8651\u83ab\u961f\u601d\u60f3\uff0c\u79fb\u52a8\u5de6\u53f3\u6307\u9488\u5e76\u8ba1\u7b97\u8d21\u732e\uff0c\u53ef\u4ee5\u8bc1\u660e\u6bcf\u6b21\u8ba1\u7b97 $cost$ \u7684\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5e38\u6570\u7ea7\u522b\u3002\u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3 $O(kn\\log n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ri register int\ntypedef long long ll;\nconst int inf=0x3f3f3f3f,maxk=110,maxn=35e4+10;\nint a[maxn],cnt,f[maxn][maxk],lst[maxn],m,n,nxt[maxn],pl=1,pre[maxn],pr,vis[maxn],sum;\ninline int calc(int l,int r){\n\twhile(pl<l){\n\t\tif(nxt[pl]<=pr)sum-=nxt[pl]-pl;\n\t\t++pl;\n\t}\n\twhile(pl>l){\n\t\t--pl;\n\t\tif(nxt[pl]<=pr)sum+=nxt[pl]-pl;\n\t}\n\twhile(pr<r){\n\t\t++pr;\n\t\tif(pre[pr]>=pl)sum+=pr-pre[pr];\n\t}\n\twhile(pr>r){\n\t\tif(pre[pr]>=pl)sum-=pr-pre[pr];\n\t\t--pr;\n\t}\n\treturn sum;\n}\nvoid solve(int l,int r,int L,int R,int now){\n\tif(l>r||L>R)return;\n\tri mid=l+r>>1,val=inf,pos;\n\tfor(ri i=L;i<mid&&i<=R;++i){\n\t\tri tmp=f[i][now-1]+calc(i+1,mid);\n\t\tif(tmp<val)pos=i,val=tmp;\n\t}\n\tf[mid][now]=val;\n\tsolve(l,mid-1,L,pos,now);\n\tsolve(mid+1,r,pos,R,now);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(ri i=1;i<=n;++i)scanf(\"%d\",a+i);\n\tfor(ri i=1;i<=n;++i)f[i][0]=inf,pre[i]=lst[a[i]],lst[a[i]]=i;\n\tfor(ri i=1;i<=n;++i)lst[a[i]]=n+1;\n\tfor(ri i=n;i;--i)nxt[i]=lst[a[i]],lst[a[i]]=i;\n\tfor(ri i=1;i<=m;++i)solve(1,n,0,n,i);\n\tprintf(\"%d\",f[n][m]);\n\treturn 0;\n}\n```\n",
        "postTime": 1621563709,
        "uid": 67942,
        "name": "meyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1527E \u3010Partition Game\u3011"
    },
    {
        "content": "## \u9898\u89e3\u601d\u8def\uff1a\n\u6211\u4eec\u53ef\u4ee5\u7528 dp\uff0c\u72b6\u6001\u8f6c\u79fb\u4e3a\uff1a\n$$dp_{i , j} = \\min\\{dp_{k , j - 1} + w_{k + 1 , i}\\}$$\n\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u81f3\u5c11\u4e3a $\\mathcal{O(n^2k)}$\u3002\n\u6211\u4eec\u600e\u4e48\u7528\u6570\u636e\u7ed3\u6784\u53bb\u4f18\u5316\u5462\uff1f\n1.    \u6211\u4eec\u5c31\u6309 $j$ \u5206\u5c42\u3002\n\u6bcf\u6b21\u4ece $j - 1$ \u7684\u72b6\u6001\u63a8\u51fa $j$\u3002\n\u5219 $f_i=dp_{i , j - 1}$\u3002\n\u800c $g_i = \\min(f_k + w_{k + 1 , i})$\u3002\n2.  \u600e\u4e48\u7ef4\u62a4\uff1a\n\u8bbe $h_k = f_k + w_{k + 1 , i}$\u3002\n\u5f53 $i \\to i + 1$\u3002\n\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n> 1.\u5f53\u524d\u6570\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u5219\u8d21\u732e\u4e3a $0$\u3002\n> 2.\u82e5\u4ed6\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u4ed6\u7684\u8d21\u732e\u5c31\u662f\u52a0\u4e0a\u4e86 $i + 1 -$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u5c31\u662f\u524d\u7f00\u52a0\u4ee5\u53ca\u524d\u7f00\u6700\u5c0f\u503c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 $h$ \u6570\u7ec4\u5373\u53ef\u3002\n## AC CODE:\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ntypedef int ll;\nconst int N = 35100;\nint n , k;\nint last[N] , pre[N] , f[N];\nstruct node {\n\tll t;\n\tll val;\n}seg[N * 4];\nint a[N];\nvoid update (int id) {\n\tseg[id].val = min(seg[id * 2].val , seg[id * 2 + 1].val);\n}\nvoid settag (int id , int t) {\n\tseg[id].val = seg[id].val + t;\n\tseg[id].t = seg[id].t + t;\n}\nvoid pushdown (int id) {\n\tif (seg[id].t != 0) {//\u6807\u8bb0\u975e\u7a7a\n\t\tsettag (id * 2 , seg[id].t);\n\t\tsettag (id * 2 + 1 , seg[id].t);\n\t\tseg[id].t = 0;\n\t}\n}\nvoid build (int id , int l , int r) {\n\tseg[id].t = 0;\n\tif (l == r) {\n\t\tseg[id].val = f[l];\n\t}else {\n\t\tint mid = (l + r) >> 1;\n\t\tbuild (id * 2 , l , mid);\n\t\tbuild (id * 2 + 1 , mid + 1 , r);\n\t\tupdate (id);\n\t}\n}\nvoid modify (int id , int l , int r , int ql , int qr , int t) {\n\tif (l == ql && r == qr){ settag(id , t); return;}\n\tint mid = (l + r) / 2;\n\tpushdown (id);\n\tif (qr <= mid) modify (id * 2 , l , mid , ql , qr , t);\n\telse if (ql > mid) modify (id * 2 + 1 , mid + 1 , r , ql , qr , t);\n\telse {\n\t\tmodify (id * 2 , l , mid , ql , mid , t);\n\t\tmodify (id * 2 + 1 , mid + 1 , r, mid + 1 , qr ,t);\n\t}\n\tupdate (id);\n}\nll query (int id , int l , int r , int ql , int qr) {\n\tif (l == ql && r == qr) return seg[id].val;\n\tint mid = (l + r) / 2;\n\tpushdown (id);\n\tif (qr <= mid) return query (id * 2 , l , mid , ql , qr);\n\telse if (ql > mid) return query (id * 2 + 1 , mid + 1 , r , ql , qr);\n\telse {\n\t\treturn min(query (id * 2 , l , mid , ql , mid) , query (id * 2 + 1 , mid + 1 , r, mid + 1 , qr));\n\t}\n}\nint main() {\n\tscanf (\"%d%d\" , &n , &k);\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf (\"%d\" , &a[i]);\n\t\tlast[i] = pre[a[i]];\n\t\tpre[a[i]] = i;\n\t}\n\tf[0] = 0;\n\tfor (int i = 1; i <= n; ++ i) f[i] = 1 << 30;\n\tfor (int j = 1; j <= k; ++ j) {\n\t\tbuild (1 , 0 , n);\n\t\tfor (int i = 1; i <= n; ++ i) {\n\t\t\tif (last[i] != 0) modify (1 , 0 , n , 0 , last[i] - 1 , i - last[i]);\n\t\t\tf[i] = query (1 , 0 , n , 0 , i - 1);\n\t\t}\n\t}\t\n\tprintf (\"%d\\n\" , f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1657858227,
        "uid": 528430,
        "name": "FiraCode",
        "ccfLevel": 0,
        "title": "CF1527E\u9898\u89e3"
    },
    {
        "content": "### \u9898\u5916\u8bdd\n\n\u8fd9\u9898\u51b3\u7b56\u5355\u8c03\u6027\u6211\u6253\u51fa\u8868\u6765\u4e0d\u592a\u6ee1\u8db3\u554a\u2026\u2026\u4e0d\u592a\u61c2\n\n\u4ee5\u53ca\u6211\u5e76\u4e0d\u592a\u61c2\u8fd9\u9898\u5982\u4f55\u8bc1\u660e\u51f8\u6027\u2026\u2026\u4f46\u662f\u8fd9\u6837\u5199\u5b83\u786e\u5b9e A \u4e86\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u731c\u51f8\u6027\u2026\u2026\u5176\u5b9e\u4e00\u5f00\u59cb\u60f3\u731c\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u4f46\u662f\u8868\u5b83\u4e0d\u7b26\u5408\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\uff0c\u4e8e\u662f\u5c31\u5bc4\u4e86\u3002\u7136\u540e\u53c8\u4e0d\u80fd\u659c\u7387\u4f18\u5316\uff0c\u679a\u4e3e\u505a\u6cd5\u53ea\u5269\u4e0b\u51f8\u6027\u4e86\u3002\n\n### \u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u5408\u7406\u731c\u6d4b\u5176\u5177\u6709\u51f8\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651 wqs \u4e8c\u5206\u3002\n\n\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a\u5206\u6bb5\u4ee3\u4ef7\u3002\u7136\u540e\u6211\u4eec\u8003\u8651\u8bbe $f(i)$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u5c0f\u5206\u6bb5\u4ee3\u4ef7\uff0c$cont(i)$ \u8868\u793a\u8fd9\u6837\u5206\u6bb5\u7684\u6700\u5c0f\u6bb5\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u4f18\u5316\u8f6c\u79fb\u3002\u6734\u7d20\u8f6c\u79fb\u663e\u7136\u662f\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u8003\u8651\u7ebf\u6bb5\u6811\u4f18\u5316\u8f6c\u79fb\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e0b $cont$ \u5c5e\u6027\uff0c\u5982\u679c\u503c\u76f8\u540c\u5c31\u9009\u62e9\u5206\u6bb5\u6570\u76ee\u6700\u5c0f\u7684\u3002\u7ef4\u62a4\u6bcf\u4e2a\u989c\u8272\u4e0a\u4e00\u6b21\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u8bb0\u4e3a $pre(v).$ \u90a3\u4e48\u6bcf\u6b21\u4fee\u6539\uff0c\u76f8\u5f53\u4e8e\u7ed9 $[1, pre(v)]$ \u90fd\u52a0\u4e0a\u4e00\u4e2a $i - pre(v)$ \u7684\u8d21\u732e\u3002\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u52a0\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fbe\u5230 $O(n\\log n\\log V)$ \u7684\u590d\u6742\u5ea6\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\ntypedef long long ll;\n#define fi first\n#define se second\ninline int read()\n{\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile (!isdigit(ch))\n\t{\n\t\tif (ch == '-')\n\t\t\tw = -1;\n\t\tch = getchar();\n\t}\n\twhile (isdigit(ch))\n\t{\n\t\ts = s * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn s * w;\n}\nconst int N = 2e5 + 10;\nconst int inf = (1 << 30);\nnamespace SGT {\n\tint tag[N];\n\tstruct Node {\n\t\tmutable int val, cnt;\n\t\tNode (int val_ = 0, int cnt_ = 0) {\n\t\t\tval = val_; cnt = cnt_;\n\t\t}\n\t} maxn[N];\n\tNode operator + (Node x, int y) {\n\t\tx.val += y;\n\t\treturn x;\n\t}\n\tinline Node max(Node x, Node y) {\n\t\tif(x.val == y.val) return x.cnt > y.cnt ? x : y;\n\t\treturn x.val < y.val ? x : y;\n\t}\n\tvoid pushup(int x) {\n\t\tmaxn[x] = max(maxn[x << 1], maxn[x << 1 | 1]);\n\t}\n\tinline void pushr(int x, int v) {\n\t\tmaxn[x].val += v;\n\t\ttag[x] += v;\n\t}\n\tinline void pushdown(int x) {\n\t\tif(tag[x]) {\n\t\t\tint &p = tag[x];\n\t\t\tpushr(x << 1, p);\n\t\t\tpushr(x << 1 | 1, p);\n\t\t\tp = 0;\n\t\t}\n\t}\n\tvoid changep(int x, int L, int R, int p, int v, int c) {\n\t\tif(L == R) {\n\t\t\tmaxn[x].val += v;\n\t\t\tmaxn[x].cnt += c;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (L + R) >> 1; pushdown(x);\n\t\tif(p <= mid) changep(x << 1, L, mid, p, v, c);\n\t\telse changep(x << 1 | 1, mid + 1, R, p, v, c);\n\t\tpushup(x);\n\t}\n\tvoid change(int x, int L, int R, int l, int r, int v) {\n\t\tif(L >= l && R <= r) return pushr(x, v), void();\n\t\tint mid = (L + R) >> 1; pushdown(x);\n\t\tif(l <= mid) change(x << 1, L, mid, l, r, v);\n\t\tif(mid < r) change(x << 1 | 1, mid + 1, R, l, r, v);\n\t\tpushup(x);\n\t}\n\tNode query(int x, int L, int R, int l, int r) {\n\t\tif(l > r) return Node(0, 0);\n\t\tif(L >= l && R <= r) return maxn[x];\n\t\tint mid = (L + R) >> 1;\n\t\tNode ans = Node(0, 0); pushdown(x); \n\t\tif(l <= mid) ans = query(x << 1, L, mid, l, r);\n\t\tif(mid < r) ans = max(ans, query(x << 1 | 1, mid + 1, R, l, r));\n\t\treturn ans;\n\t}\n\tvoid build(int x, int L, int R) {\n\t\ttag[x] = 0; maxn[x] = Node(0, 0);\n\t\tif(L == R) return ;\n\t\tint mid = (L + R) >> 1; \n\t\tbuild(x << 1, L, mid);\n\t\tbuild(x << 1 | 1, mid + 1, R);\n\t}\n}\nusing namespace SGT;\nint n, K, a[N], pre[N];\nint f[N], cont[N];\nbool check(int mid, int op = 0) {\n\tSGT :: build(1, 1, n + 1);\n\tfor(int i = 0; i <= n; ++i) f[i] = cont[i] = pre[i] = 0;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tif(!pre[a[i]]) {\n\t\t\tpre[a[i]] = i;\n\t\t}\n\t\telse {\n\t\t\tchange(1, 1, n + 1, 1, pre[a[i]], i - pre[a[i]]);\n\t\t\tpre[a[i]] = i;\n\t\t}\n\t\tNode tmp = query(1, 1, n + 1, 1, i);\n\t\tcont[i] = tmp.cnt + 1;\n\t\tf[i] = tmp.val + mid;\n\t\tchangep(1, 1, n + 1, i + 1, f[i], cont[i]);\n\t}\n\tif(op == 1) {\n\t\tf[n] -= K * mid;\n\t\tcout << f[n] << '\\n';\n\t\texit(0);\n\t}\n\treturn cont[n] >= K;\n}\nsigned main() {\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tn = read(); K = read();\n\tfor(int i = 1; i <= n; ++i) a[i] = read();\n\tint l = -1000000000, r = 1000000000, ans = -1;\n\twhile(l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif(check(mid)) l = mid + 1, ans = mid;\n\t\telse r = mid - 1;\n\t}\n\tcheck(ans, 1);\n\treturn 0;\n}\n```\n",
        "postTime": 1663890412,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "CF1527E Partition Game \u9898\u89e3"
    },
    {
        "content": "\u4e3a\u8868\u793a\u65b9\u4fbf\uff0c\u6211\u4eec\u4ee4 $last_{a_x}$ \u8868\u793a $a_x$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u9996\u5148\u53ef\u4ee5\u7528\u8089\u773c\u770b\u51fa\u4e00\u4e2a $\\text{dp}$\uff0c$dp_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u4f4d\u7f6e\u5206\u5272\u4e3a $j$ \u4e2a\u5b50\u6bb5\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u6709\u663e\u7136\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$f_{i,j}=\\min_{k=1}^{i}(f_{k-1,j-1}+val(k,i))$$\n\n\u5176\u4e2d $val(k,i)$ \u8868\u793a\u4ee5\u7b2c $k$ \u4e2a\u6570\u5b57\u5230\u7b2c $i$ \u4e2a\u6570\u5b57\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u6bb5\u7684\u4ee3\u4ef7\u3002\n\n\u6765\u770b\u4e00\u4e0b $val(k,i)$ \u600e\u4e48\u6c42\uff1a\n\n\u82e5 $a_k$ \u5230 $a_{i-1}$ \u4e2d\u6ca1\u6709\u6570\u7b49\u4e8e $a_i$\uff0c\u90a3\u4e48\u52a0\u5165 $a_i$ \u7684\u4ee3\u4ef7\u4e3a $0$\u3002\u663e\u7136\uff0c $val(k,i)=val(k,i-1)$\u3002\n\n\u53cd\u4e4b\uff0c\u5219 $val(k,i)=val(k,i-1)+(i-last_{a_i})$\uff0c\u56e0\u4e3a $a_{last_{a_i}}$ \u5230\u5b83\u7684\u4e0a\u4e00\u4e2a\u7684\u4ee3\u4ef7\u5df2\u7ecf\u7b97\u8fc7\u4e86\uff0c\u518d\u5f80\u524d\u4e5f\u662f\uff0c\u6240\u4ee5\u53ea\u7528\u52a0\u4e0a\u8fd9\u6b21\u7684\u4ee3\u4ef7\u3002\n\n\u6ce8\u610f\u5230 $val(k,i)$ \u53ef\u4ee5\u9884\u5904\u7406\uff0c\u6b64\u65f6\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n^2k)$ \u7684\u505a\u6cd5\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4f18\u5316\uff0c\u518d\u56de\u5934\u770b\u4e00\u773c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c$f_{k-1,j-1}$ \u8fd9\u4e00\u90e8\u5206\u662f\u4e0d\u53d8\u7684\uff0c$val(k,i)$ \u8fd9\u4e00\u90e8\u5206\u53ea\u6709\u5728 $k\\le last_{a_i}$ \u65f6\u624d\u4f1a\u6539\u53d8\uff0c\u4e14\u503c\u6052\u4e3a $i-last_{a_i}$\u3002\n\n~~\u89c2\u5bdf\u5230 CF \u4e0a\u7684\u6807\u7b7e\u6709\u6570\u636e\u7ed3\u6784~~\uff0c\u6211\u4eec\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4 $f$ \u6570\u7ec4\uff0c\u9700\u8981\u652f\u6301\u533a\u95f4\u52a0\u3001\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\uff0c\u7136\u540e\u53d1\u73b0\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u4e86\uff0c\u679a\u4e3e $j$\uff0c\u6bcf\u6b21\u91cd\u5efa\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u8fd9\u6837\u8fd8\u53ef\u4ee5\u538b\u6389\u4e00\u7ef4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(kn\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ls o<<1\n#define rs o<<1|1 \nusing namespace std;\nconst int maxn=35005;\nint t[maxn<<2],tag[maxn<<2];\nint n,k,lst[maxn],a[maxn],f[maxn],pre[maxn];\nint ans;\nvoid add(int o,int val){\n\tt[o]+=val;\n\ttag[o]+=val;\n\treturn ;\n}\nvoid pushup(int o){\n\tt[o]=min(t[ls],t[rs]);\n\treturn ;\n}\nvoid pushdown(int o){\n\tadd(ls,tag[o]);\n\tadd(rs,tag[o]);\n\ttag[o]=0;\n\treturn ;\n}\nvoid build(int o,int l,int r){\n\ttag[o]=0;\n\tif(l==r){\n\t\tt[o]=f[r];\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tpushup(o);\n}\nvoid update(int o,int l,int r,int x,int y,int val){\n\tif(x<=l&&r<=y){\n\t\tadd(o,val);\n\t\treturn ;\n\t}\n\tpushdown(o);\n\tint mid=l+r>>1;\n\tif(x<=mid)update(ls,l,mid,x,y,val);\n\tif(y>mid)update(rs,mid+1,r,x,y,val);\n\tpushup(o);\n}\nvoid query(int o,int l,int r,int x,int y){\n\tif(x<=l&&r<=y){\n\t\tans=min(ans,t[o]);\n\t\treturn ;\n\t}\n\tpushdown(o);\n\tint mid=l+r>>1;\n\tif(x<=mid)query(ls,l,mid,x,y);\n\tif(y>mid)query(rs,mid+1,r,x,y);\n\treturn ;\n}\nint main(){\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t\tlst[i]=pre[a[i]];\n\t\tpre[a[i]]=i;\n\t}\n\tmemset(f,0x3f,sizeof f);\n\tf[0]=0;\n\tfor(int i=1;i<=k;i++){\n\t\tbuild(1,0,n);\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(lst[j]!=0)update(1,0,n,0,lst[j]-1,j-lst[j]);\n\t\t\tans=INT_MAX;\n\t\t\tquery(1,0,n,0,j-1);\n\t\t\tf[j]=ans;\n\t\t}\n\t}\n\tcout<<f[n];\n\t\t\n}\n```\n",
        "postTime": 1677292118,
        "uid": 477757,
        "name": "dennshokouni",
        "ccfLevel": 0,
        "title": "CF1527E\u505a\u9898\u8bb0\u5f55"
    },
    {
        "content": "[CF1527E](https://www.luogu.com.cn/problem/CF1527E)\n\n[Partition Game](https://codeforces.com/problemset/problem/1527/E)\n\n### \u601d\u8def\n\ndp \u9898\u3002\n\n\u8bbe $dp_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u6570\u5206\u4e3a $j$ \u6bb5\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u5f0f\u5b50\uff1a\n\n$dp_{i,j}=\\min_{k=1}^{i-1} (dp_{k,j-1}+w(k+1,i))$\n\n\u538b\u4e00\u7ef4\uff1a\n\n$dp_{i}=\\min_{k=1}^{i} (dp_{k-1}+w(k,i))$\n\n\u5176\u4e2d\uff0c$w(i,j)$ \u8868\u793a\u9898\u76ee\u4e2d\u7684 $cost(sub(i,j))$\u3002\n\n\u95ee\u9898\u5728\u4e8e\u5feb\u901f\u6c42 $w(i,j)$\u3002\n\n\u8bbe $b_k=dp_{k-1}+w(k,i)$\uff0c\u5219 $dp_i=\\min_{k=1}^{i} dp_k$\u3002\u6bcf\u6b21\u8f6c\u79fb\u9700\u8981\u6c42\u51fa\u6570\u7ec4 $b$ \u7684\u6700\u5c0f\u503c\u3002\u6bcf\u4e2a $a_i$ \u7684\u5bf9 $b$ \u8d21\u732e\u662f $b_1$ \u5230 $b_{lst_{a_j}}$ \u52a0\u4e0a $i-lst_{a_j}$\uff0c\u5176\u4e2d $lst_i$ \u662f\u6570\u503c $i$ \u4e0a\u6b21\u5728 $a$ \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\u8981\u7ef4\u62a4 $b$\uff0c\u533a\u95f4\u52a0\u548c\u6700\u5c0f\u503c\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u7528\u4e0a\u4e00\u8f6e\u7684 $dp[]$ \u503c\u5efa\u6811\uff0c\u4ece $1$ \u5230 $n$\uff0c\u6bcf\u8bfb\u8fdb\u4e00\u4e2a $a_i$\uff0c$upd$ \u66f4\u65b0\u7ebf\u6bb5\u6811\uff0c$que$ \u8be2\u95ee\u6700\u5c0f\u503c\u5373\u4e3a $dp_i$\u3002\n\n$O(kn\\log n)$\u3002\n\n### code\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int maxn=35010;\n\nint n,k,a[maxn];\nint tree[maxn<<2],tag[maxn<<2],dp[maxn];\nint lst[maxn],pre[maxn];\nvoid build(int nd,int l,int r){\n\tif(l==r){\n\t\ttree[nd]=dp[l-1];\n\t\treturn ;\n\t}\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\tbuild(ls,l,mid);build(rs,mid+1,r);\n\ttree[nd]=min(tree[ls],tree[rs]);\n}\nvoid push(int nd,int l,int r){\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\ttree[ls]+=tag[nd];\n\ttag[ls]+=tag[nd];\n\ttree[rs]+=tag[nd];\n\ttag[rs]+=tag[nd];\n\ttag[nd]=0;\n}\nvoid updata(int nd,int l,int r,int x,int y,int w){\n\tif(l>=x&&r<=y){\n\t\ttree[nd]+=w;\n\t\ttag[nd]+=w;\n\t\treturn ;\n\t}\n\tif(tag[nd])push(nd,l,r);\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\tif(x<=mid)updata(ls,l,mid,x,y,w);\n\tif(y>mid)updata(rs,mid+1,r,x,y,w);\n\ttree[nd]=min(tree[ls],tree[rs]);\n}\nint query(int nd,int l,int r,int x,int y){\n\tif(l>=x&&r<=y){\n\t\treturn tree[nd];\n\t}\n\tif(tag[nd])push(nd,l,r);\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\tif(y<=mid)return query(ls,l,mid,x,y);\n\tif(x>mid)return query(rs,mid+1,r,x,y);\n\treturn min(query(ls,l,mid,x,y),query(rs,mid+1,r,x,y));\n}\nvoid sovle(){\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tfor(int i=1;i<=n;i++){\n\t\tlst[i]=pre[a[i]];\n\t\tpre[a[i]]=i;\n\t}\n\tmemset(dp,0x3f,sizeof(dp));dp[0]=0;\n\tfor(int i=1;i<=k;i++){\n\t\tmemset(tag,0,sizeof(tag));\n\t\tbuild(1,1,n);\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(lst[j])updata(1,1,n,1,lst[j],j-lst[j]);\n\t\t\tdp[j]=query(1,1,n,1,j);\n\t\t}\n\t}\n\tcout<<dp[n]<<\"\\n\";\n}\n\nint T;\nsigned main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\n//\tcin.tie(0);cout.tie(0);\n//\tios::sync_with_stdio(false);\n\tT=1;\n\twhile(T--)sovle();\n}\n```\n\n---\n\n### \u5957\u8def\n\n[CF833B The Bakery](https://www.luogu.com.cn/problem/CF833B)\n\n\u5f0f\u5b50\u540c\u6837\u5f62\u5982\uff1a$dp_{i}=\\max_{k=1}^{i} (dp_{k-1}+w(k,i))$\u3002\n\n\u8003\u8651\u6bcf\u4e2a $a_i$ \u5bf9 $dp[]$ \u7684\u8d21\u732e\u3002\n\n```cpp\nint n,k,a[maxn];\nint tree[maxn<<2],dp[maxn],tag[maxn<<2];\nint pre[maxn],lst[maxn];\nvoid build(int nd,int l,int r){\n  //\u540c\n\ttree[nd]=max(tree[ls],tree[rs]);\n}\nvoid push(int nd,int l,int r){\n  //\u540c\n}\nvoid updata(int nd,int l,int r,int x,int y){\n\tif(l>=x&&r<=y){\n\t\ttree[nd]++;tag[nd]++; \n\t\treturn ;\n\t}\n  //\u540c\n\ttree[nd]=max(tree[ls],tree[rs]);\n}\nint query(int nd,int l,int r,int x,int y){\n  //\u540c\n\treturn max(query(ls,l,mid,x,y),query(rs,mid+1,r,x,y)); \n}\nvoid sovle(){\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tfor(int i=1;i<=n;i++){\n\t\tlst[i]=pre[a[i]]+1;\n\t\tpre[a[i]]=i;\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tmemset(tree,0,sizeof(tree));\n\t\tmemset(tag,0,sizeof(tag));\n\t\tbuild(1,1,n);\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tupdata(1,1,n,lst[j],j);\n\t\t\tdp[j]=query(1,1,n,1,j);\n\t\t}\n\t}\n\tcout<<dp[n]<<\"\\n\";\n}\n```\n",
        "postTime": 1677305542,
        "uid": 754153,
        "name": "gdf_yhm",
        "ccfLevel": 5,
        "title": "CF1527E\u9898\u89e3"
    },
    {
        "content": "* \u8bbe $dp[i][j]$ \u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u7b2c $i$ \u6bb5\uff0c\u7b2c $i$ \u6bb5\u672b\u5c3e\u662f $j$ \u7684\u6700\u5c0f\u603b\u4ee3\u4ef7\uff0c\u8003\u8651\u600e\u4e48\u4ece $dp[i - 1][]$ \u8f6c\u79fb\u5230 $dp[i][]$\u3002\n* \u8003\u8651\u5c06\u4e00\u6bb5\u7684\u4ee3\u4ef7\u62c6\u6210\uff0c\u5bf9\u4e8e\u6240\u6709\u4e2d\u95f4\u6ca1\u6709\u8be5\u6570\u7684\u76f8\u540c\u7684\u6570\u5bf9\uff0c\u5b83\u4eec\u7684\u8ddd\u79bb\u7684\u548c\u3002\n* \u8bbe\u4e00\u4e2a\u6570\u7ec4 $b$\uff0c\u4e00\u5f00\u59cb $b[] = dp[i - 1][]$\u3002\u8003\u8651\u9884\u5904\u7406\u51fa $last[i]$ \u8868\u793a $i$ \u524d\u9762\u7684\u7b2c\u4e00\u4e2a\u7b49\u4e8e $a[i]$ \u7684\u4f4d\u7f6e\uff0c\u4ece\u5c0f\u5f80\u5927\u679a\u4e3e $j$\uff0c\u8003\u8651\u5f53 $j - 1$ \u5230 $j$ \u7684\u65f6\u5019\u628a $a[j]$ \u7684\u8d21\u732e\u7b97\u8fdb\u53bb\uff0c\u8003\u8651 $a[j]$ \u663e\u7136\u5bf9 $b[1 \\cdots last[j] - 1]$ \u90fd\u6709 $j - last[j]$ \u7684\u8d21\u732e\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u52a0\u548c\u524d\u7f00\u6c42\u6700\u5c0f\u503c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(k n \\log n)$\u3002\n\n```cpp\nfor (int i = 1; i <= n; i++) appear[a[i]].push_back(i);\n    for (int i = 1; i <= n; i++) for (int j = 0; j < appear[i].size(); j++) if (j == 0) last[appear[i][j]] = 0; else last[appear[i][j]] = appear[i][j - 1];\n    for (int i = 1; i <= n; i++) dp[i] = inf; dp[0] = 0;\n    for (int i = 1; i <= k; i++) {\n        SGT.Build(1, 0, n);\n        for (int j = 1; j <= n; j++) {\n            if (last[j] != 0) SGT.Modify(1, 0, last[j] - 1, j - last[j]);\n            dp[j] = SGT.Query(1, 0, n, 0, j - 1);\n        }\n    }\n```",
        "postTime": 1674198584,
        "uid": 278046,
        "name": "Lyccrius",
        "ccfLevel": 5,
        "title": "CF1527E"
    },
    {
        "content": "### P.S.\n\u4e00\u770b\u8fd9\u4e2a\u9898\uff0c\u4e00\u770b\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u77ac\u95f4\u89c9\u5f97\u5b83\u662f[\u539f\u9898](https://www.luogu.com.cn/problem/CF833B)  \n[\u524d\u7f6e](https://www.luogu.com.cn/blog/command-block/dp-di-jue-ce-dan-diao-xing-you-hua-zong-jie)  \n\n### Solution.\n~~\u4f1a\u4e86\u524d\u7f6e\u4f60\u5c31\u505a\u5b8c\u4e86~~  \n\u8fd9\u7c7b\u5206\u5272\u533a\u95f4\u95ee\u9898\u57fa\u672c\u51b3\u7b56\u90fd\u5355\u8c03\u3002  \n\u7136\u540e\u6309\u7167\u524d\u7f6e\u91cc\u7684\u5206\u6cbb\u5957\u6307\u9488\u66b4\u8df3\u6cd5\u5c31\u505a\u5b8c\u4e86\u3002  \n\u7edf\u8ba1\u8d21\u732e\u7684\u8bdd\u6211\u4eec\u9700\u8981\u628a\u8d21\u732e\u62c6\u5f00\u7b97\u3002  \n\u6700\u8fdc\u4e24\u4e2a\u6570\u4e4b\u95f4\u8ddd\u79bb\u53ef\u4ee5\u770b\u4f5c\u662f\u6bcf\u5bf9\u6700\u8fd1\u6570\u4e4b\u95f4\u8ddd\u79bb\u548c\u3002  \n\u6240\u4ee5\u6269\u5145\u53f3\u7aef\u70b9\u65f6\u5982\u679c\u4e0a\u4e00\u4e2a\u6570\u5927\u4e8e\u5de6\u7aef\u70b9\uff0c\u5c31\u52a0\u4e0a\u8ddd\u79bb\u3002  \n\u7136\u540e\u6536\u7f29\u3001\u5de6\u7aef\u70b9\u540c\u7406\uff0c\u6700\u540e\u76f4\u63a5\u5957\u5373\u53ef\u3002  \n\u5177\u4f53\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002  \n\n### Coding.\n```cpp\n//\u662f\u554a\u2026\u2026\u4f60\u5c31\u662f\u90a3\u53ea\u9b3c\u4e86\u2026\u2026\u6240\u4ee5\u88ab\u4f60\u78b0\u5230\u4ee5\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u53d8\u6210\u9b3c\u4e86{{{\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tf?x=-x:0;\n}/*}}}*/\nint n,K,a[35005],ls[35005],nx[35005],tn[35005],dp[105][35005],L,R,sm;\ninline void move(int dl,int dr)\n{//\u8fd9\u4e2a\u5c31\u662f\u6307\u9488\u66b4\u8df3\n\twhile(L<dl) sm-=nx[L]<=R?nx[L]-L:0,L++;\n\twhile(L>dl) L--,sm+=nx[L]<=R?nx[L]-L:0;\n\twhile(R<dr) R++,sm+=ls[R]>=L?R-ls[R]:0;\n\twhile(R>dr) sm-=ls[R]>=L?R-ls[R]:0,R--;\n}\ninline void work(int l,int r,int dl,int dr,int dep)\n{//\u8fd9\u4e2a\u5c31\u662f\u4e4b\u524d\u7684\u5355\u8c03\u6027\u5206\u6cbb\n\tint md=(l+r)>>1,dmd,vl=2e9;if(l>r||dl>dr) return;\n\t//printf(\"%d %d %d %d %d\\n\",l,r,dl,dr,dep);\n\tfor(int i=dl;i<=md&&i<=dr;i++)\n\t{\n\t\tmove(i,md);int nv=dp[dep-1][i-1]+sm;\n\t\tif(nv<vl) vl=nv,dmd=i;\n\t}\n\tdp[dep][md]=vl,work(l,md-1,dl,dmd,dep),work(md+1,r,dmd,dr,dep);\n}\nint main()\n{\n\tread(n),read(K);for(int i=1;i<=n;i++) read(a[i]),tn[i]=n+1;\n\tfor(int i=n;i;i--) nx[i]=tn[a[i]],tn[a[i]]=i;\n\tmemset(tn,0,sizeof(tn));for(int i=1;i<=n;i++) ls[i]=tn[a[i]],tn[a[i]]=i;\n\t//\u4ee5\u4e0a\u9884\u5904\u7406\n\tmemset(dp[0],0x3f,sizeof(dp[0])),dp[0][0]=0;for(int i=1;i<=K;i++) work(1,n,1,n,i);\n\t//for(int i=1;i<=K;i++) for(int j=1;j<=n;j++) printf(\"%d%c\",dp[i][j],j==n?'\\n':' ');\n\treturn printf(\"%d\\n\",dp[K][n]),0;\n}\n```",
        "postTime": 1625571649,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF1527E Partition Game\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "# CF1527E Partition Game\n\n\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u9700\u8981\u8111\u5b50\u7684\u51b3\u7b56\u5355\u8c03\u6027\u505a\u6cd5\n\n\u9996\u5148\u4ece\u4e00\u4e2a naive \u7684 dp \u65b9\u7a0b\u5199\u8d77\uff1a\u8bbe $f_{k,i}$ \u8868\u793a\u5c06\u524d $i$ \u4e2a\u5143\u7d20\u5212\u5206\u4e3a $k$ \u6bb5\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5219\u6709 $f_{k,i}=\\min_{j<i}\\{f_{k-1,j}+calc(j+1,i)\\}$ ,\u5373\u679a\u4e3e\u8f6c\u79fb\u70b9\u5e76\u8ba1\u7b97\u4e2d\u95f4\u8d21\u732e\u3002\u5bf9\u4e8e\u90a3\u4e2a $calc$ \u51fd\u6570\uff0c\u597d\u50cf\u5e76\u6ca1\u6709\u80fd\u591f\u5feb\u901f\u5728\u7ebf\u8ba1\u7b97\u51fa\u5b83\u7684\u65b9\u6cd5\uff0c\u800c\u6211\u4eec\u51b3\u7b56\u5355\u8c03\u6027\u7684\u8f6c\u79fb\u53c8\u5fc5\u987b\u4f9d\u8d56\u4e8e\u8be5\u51fd\u6570\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u51b3\u7b56\u662f\u5206\u5c42\u7684\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5927\u53ef\u4e0d\u5fc5\u7528\u4ec0\u4e48\u5355\u8c03\u6808+wqs\u4e8c\u5206\u4e4b\u7c7b\u7684\u9ebb\u70e6\u4e1c\u897f\uff0c\u8f6c\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u4e2a\u66f4\u597d\u5199\u7684\u5206\u6cbb\u4f18\u5316\u51b3\u7b56\u5355\u8c03\u6027\u3002\u8bbe\u51fd\u6570 $solve(l,r,x,y)$ \u662f\u80fd\u591f\u8ba1\u7b97\u51fa\u533a\u95f4 $[l,r]$ \uff0c\u6700\u4f18\u51b3\u7b56\u70b9\u5728 $[x,y]$ \u4e4b\u95f4\u7684\u6240\u6709 $f_i$ , \u5206\u6cbb\u65f6\u53ea\u9700\u679a\u4e3e $f_{mid}$ \u7684\u6700\u4f18\u51b3\u7b56\u70b9 $b$ , \u5e76\u9012\u5f52\u5904\u7406 $solve(l,mid-1,x,b)$ \u548c $solve(mid+1,r,b,y)$ \u3002\n\n\u73b0\u5728\u5173\u952e\u5728\u4e8e $calc$ \u51fd\u6570\u7684\u8bbe\u8ba1\u3002\u89c2\u5bdf\u4ee3\u7801\u4e2d\u7684\u51fd\u6570\u8c03\u7528\uff0c\u53d1\u73b0\u6bcf\u6b21\u8c03\u7528\u65f6\u5b83\u7684\u5de6\u7aef\u70b9\u662f\u9012\u589e\u7684\u3002\u8fd9\u6837\u6211\u4eec\u6709\u4e00\u4e2a\u83ab\u961f\u7684\u601d\u8def\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136\u83ab\u961f\u662f\u79bb\u7ebf\u7684\uff0c\u4f46\u672a\u7ecf\u6392\u5e8f\u7684\u83ab\u961f\u662f\u5728\u7ebf\u7684\uff0c\u800c\u5176\u5de6\u7aef\u70b9\u5355\u8c03\u9012\u589e\u4fdd\u8bc1\u4e86\u5176\u4e00\u5c42\u7684\u79fb\u52a8\u6307\u9488\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u4ee3\u8868\u5728\u5f53\u524d\u533a\u95f4\u4e2d\u8be5\u6570\u51fa\u73b0\u4f4d\u7f6e\u7684\u4e0b\u6807\u96c6\u5408\uff0c\u5219\u5176\u4ea7\u751f\u7684\u8d21\u732e\u4e3a \u961f\u5c3e-\u961f\u9996\u3002\u6bcf\u6b21\u79fb\u52a8\u65f6\u66b4\u529b\u66f4\u65b0\u6bcf\u4e2a\u6570\u7684\u7b54\u6848\u5373\u53ef\uff0c\u66f4\u65b0\u590d\u6742\u5ea6 $O(1)$ \u3002\n\n\u5bf9\u4e8e\u7b97\u6cd5\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6bcf\u6b21\u679a\u4e3e $k$ \u5206\u6cbb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$ \uff0c\u5176\u4e2d\u5305\u62ec\u4e86\u679a\u4e3e\u8f6c\u79fb\u70b9\u7684\u590d\u6742\u5ea6\u4ee5\u53ca\u79fb\u52a8\u6307\u9488\u7684\u590d\u6742\u5ea6\u3002\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(kn \\log n)$ \u3002\n\n\u6ce8\u610f\u83ab\u961f\u7684\u8f6c\u79fb\u987a\u5e8f\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5f15\u8d77\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u9519\u8bef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long lxl;\nconst int MAXN=35005,MAXK=105;\nconst int INF=2147483647;\n\nint n,m;\nint a[MAXN];\nlxl f[MAXN][MAXK];\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') f=-f;ch=getchar();}\n    while(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\nint l=1,r;\nlxl tmp;\ndeque<int> pos[MAXN];\ninline int calcdis(int c){\n\tif(pos[c].size()<=1) return 0;\n\treturn pos[c].back()-pos[c].front();\n}\n\ninline int calc(int x,int y){\n    while(l>x) --l,tmp-=calcdis(a[l]),pos[a[l]].push_front(l),tmp+=calcdis(a[l]);\n    while(r<y) ++r,tmp-=calcdis(a[r]),pos[a[r]].push_back(r),tmp+=calcdis(a[r]);\n\twhile(l<x) tmp-=calcdis(a[l]),pos[a[l]].pop_front(),tmp+=calcdis(a[l]),++l;\n    while(r>y) tmp-=calcdis(a[r]),pos[a[r]].pop_back(),tmp+=calcdis(a[r]),--r;\n    return tmp;\n}\n\nint level;\nvoid solve(int l,int r,int x,int y){\n    if(l>r||x>y) return;\n    int mid=(l+r)>>1,b;\n    for(register int i=x;i<=min(y,mid);++i)\n        if(calc(i+1,mid)+f[i][level-1]<f[mid][level]) f[mid][level]=calc(i+1,mid)+f[i][level-1],b=i;\n    solve(l,mid-1,x,b);solve(mid+1,r,b,y);\n}\n\nint main(){\n\tregister int i,j;\n    n=read(),m=read();\n    for(i=1;i<=n;++i) a[i]=read();\n    for(i=0;i<=n;++i)\n        for(j=0;j<=m;++j) f[i][j]=INF;\n    f[0][0]=0;\n    for(level=1;level<=m;++level) solve(1,n,0,n-1);\n    printf(\"%lld\",f[n][m]);\n    return 0;\n}\n```\n\n",
        "postTime": 1621567094,
        "uid": 81566,
        "name": "final_trump",
        "ccfLevel": 0,
        "title": "CF1527E Partition Game"
    }
]