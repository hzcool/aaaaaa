[
    {
        "content": "\u6ce8\u610f\u5230\u5982\u679c\u4e00\u4e2a\u96c6\u5408\u4e0d\u5408\u6cd5\uff0c\u90a3\u4e48\u6240\u6709\u5305\u542b\u5b83\u7684\u96c6\u5408\u90fd\u4e0d\u5408\u6cd5\u3002\u90a3\u4e48\u901a\u8fc7\u53cc\u6307\u9488\u6211\u4eec\u53ea\u9700\u8981\u5224\u5b9a $O(n)$ \u4e2a\u96c6\u5408\u7684\u5408\u6cd5\u6027\u3002\n\n\u73b0\u5728\u53ea\u9700\u8003\u8651\u5224\u5b9a\u4e00\u4e2a\u96c6\u5408\u7684\u5408\u6cd5\u6027\u3002\u8003\u8651\u6784\u9020\u4e00\u5f20\uff08\u6709\u5411\uff09\u56fe\uff1a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u540c\u65f6\u589e\u52a0\u4e00\u4e2a\u865a\u62df\u8282\u70b9 $U$\u3002\u8bb0\u4e32 $i$ \u7684\u7b2c $j$ \u4e2a\u5b57\u7b26\u4ee3\u8868\u7684\u8282\u70b9\u4e3a $(i,j)$\u3002\u5bf9\u4e8e\u8282\u70b9 $(i,j)$\uff0c\u8bbe $S_i$ \u4ece $j$ \u5f00\u59cb\u7684\u540e\u7f00\u957f\u5ea6\u4e3a $L$\uff0c\u8003\u8651\u6bcf\u4e2a\u5b57\u7b26\u4e32 $k$\uff0c\u82e5\uff1a\n\n1. $L < |S_k|$\uff0c\u4e14 $S_i[j...|S_i|] = S_k[1...L]$\uff0c\u4ece $(i,j)$ \u5411 $(k,L+1)$ \u8fde\u8fb9\n\n2. $L > |S_k|$\uff0c\u4e14 $S_i[j...j+|S_k|-1] = S_k$\uff0c\u4ece $(i,j)$ \u5411 $(i,j+|S_k|)$ \n\n3. $L = |S_k|$\uff0c\u4e14 $S_i[j...|S_i|] = S_k$\uff0c\u4ece $(i,j)$ \u5411 $U$ \u8fde\u8fb9\u3002\n\n\u540c\u65f6\uff0c\u4ece $U$ \u5411\u6240\u6709 $(i,1)$ \u8fde\u8fb9\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u91cc\u4e00\u4e2a\u8282\u70b9 $(i,j)$ \u7684\u610f\u4e49\u662f\uff0c\u4f60\u62fc\u4e86\u4e24\u4e2a\u4e32\uff0c\u524d\u9762\u4f38\u51fa\u53bb\u7684\u90e8\u5206\u662f\u5b57\u7b26\u4e32 $i$ \u4ece $j$ \u5f00\u59cb\u7684\u540e\u7f00\uff08\u8282\u70b9 $U$ \u8868\u793a\u7a7a\u4e32\uff09\u3002\u6ce8\u610f\u5230\u5982\u679c\u5b58\u5728\u4e00\u79cd\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u4e00\u5b9a\u5bf9\u5e94\u5230\u539f\u56fe\u4e0a\u7684\u4e00\u4e2a\u73af\u3002\u800c\u540c\u65f6\u5982\u679c\u539f\u56fe\u5b58\u5728\u73af\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ggwrq8es.png)\n\n\u81f3\u6b64\uff0c\u6839\u636e\u5efa\u56fe\u7684\u5b9e\u73b0\u65b9\u5f0f\uff08\u54c8\u5e0c\u6216\u8005 Z-\u7b97\u6cd5\uff09\u6211\u4eec\u5f97\u5230\u4e86 $O(n^2m)$ \u6216\u8005 $O(n^2m \\log m)$ \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define lll __int128\n#define mp std::make_pair\n#define pii std::pair<int,int>\n#define pll std::pair<ll,ll>\n#define pli std::pair<ll,int>\n#define pil std::pair<int,ll>\n#define mtp std::make_tuple\n#define _clear(x) std::memset(x,0,sizeof(x))\n#define _move(x,y) std::memcpy(y,x,sizeof(x))\n#define _len(s) std::strlen(s)\n#define writeln(a,n) {for (int i = 1; i <= (n); ++ i) { write(a[i]); } puts(\"\") ;}\n#define readln(a,n) for (int i = 1; i <= (n); ++ i) read(a[i]);\n#define re(x) for (int _i = 1; _i <= (x); ++ _i)\n#define rep(i,l,r) for (int i = (l); i <= (r); ++ i)\n#define _debug puts(\"!\")\n#define _tell(x) std::cerr << #x << \" is \" << x << std::endl;\n\nvoid init_hash(int *h,char *s,int base,int mod,int lim) ;\nint get_hash(int *h,int *pw,int mod,int l,int r) ;\n\n#define maxn 100005\n \nconst int m1 = 998244353, m2 = 1e9+7, b1 = 17, b2 = 23;\n \nstd::vector<int>ch[maxn];\nint id[35][maxn],len[35],n,ans,flag,sr,ins[maxn],vis[maxn],tl,h1[35][maxn],h2[35][maxn],pw1[maxn],pw2[maxn];\nchar s[35][maxn];\n \nint match(int i,int j,int k) {\n\tint L = std::min(len[i]-j+1,len[k]);\n\tif (get_hash(h1[i],pw1,m1,j,j+L-1) == get_hash(h1[k],pw1,m1,1,L) && \n\t\tget_hash(h2[i],pw2,m2,j,j+L-1) == get_hash(h2[k],pw2,m2,1,L)) return 1;\n\treturn 0;\n}\n \nvoid link(int i,int j,int k,int l) {\n\tif (k == sr) {\n\t\tch[id[i][j]].push_back(sr);\n\t//\tprintf(\"(%d %d) -> S\\n\",i,j);\n\t\treturn ;\n\t}\n\tch[id[i][j]].push_back(id[k][l]);\n//\tprintf(\"(%d %d) -> (%d %d)\\n\",i,j,k,l);\n}\n \nvoid dfs(int x) {\n\tif (flag) return;\n\tins[x] = vis[x] = 1;\n\tfor (int y:ch[x]) {\n\t\tif (ins[y]) { flag = 1; return; }\n\t\tif (!vis[y]) dfs(y);\n\t} ins[x] = 0;\n}\n \nint check(int l,int r) {\n\tstd::memset(vis,0,sizeof(vis));\n\tstd::memset(ins,0,sizeof(ins));\n\tfor (int i = 1; i <= tl; ++ i) ch[i].clear(); ch[sr].clear();\n\tflag = 0;\n\tfor (int i = l; i <= r; ++ i) {\n\t\tfor (int j = 1; j <= len[i]; ++ j) {\n\t\t\tfor (int k = l; k <= r; ++ k) {\n\t\t\t\tif (len[i] - j + 1 < len[k]) {\n\t\t\t\t\tif (match(i,j,k)) link(i,j,k,len[i]-j+1+1);\n\t\t\t\t} if (len[i] - j + 1 == len[k]) {\n\t\t\t\t\tif (j == 1 && len[i] == len[k]) continue;\n\t\t\t\t\tif (match(i,j,k)) link(i,j,sr,0);\n\t\t\t\t} if (len[i] - j + 1 > len[k]) {\n\t\t\t\t\tif (match(i,j,k)) link(i,j,i,j+len[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} for (int i = 1; i <= n; ++ i) ch[sr].push_back(id[i][1]);\n\tfor (int i = 1; i <= tl + 1; ++ i) dfs(i);\n//\tprintf(\"check [%d %d] = %d\\n\",l,r,flag^1);\n\treturn flag ^ 1;\n}\n \nconst int lim = 1e5;\n \nsigned main() {\n\tscanf(\"%d\",&n);\n\trep(i,1,n) { scanf(\"%s\",s[i]+1); len[i] = _len(s[i]+1); rep(j,1,len[i]) id[i][j] = ++tl; } sr = tl + 1;\n\tint r = 0;\n//\tprintf(\">%d\\n\",check(1,2));\n//\treturn 0;\n\tpw1[0] = pw2[0] = 1;\n\tfor (int i = 1; i <= lim; ++ i) pw1[i] = (ll) pw1[i-1] * b1 % m1;\n\tfor (int i = 1; i <= lim; ++ i) pw2[i] = (ll) pw2[i-1] * b2 % m2;\n\trep(i,1,n) {\n\t\tinit_hash(h1[i],s[i],b1,m1,lim);\n\t\tinit_hash(h2[i],s[i],b2,m2,lim);\n\t}\n\tfor (int l = 1; l <= n; ++ l) {\n\t\tif (r < l - 1) r = l - 1;\n\t\twhile (r < n && check(l,r+1)) r++;\n\t\t//printf(\"[%d %d]\\n\",l,r);\n\t\tans += r - l + 1;\n\t} printf(\"%d\",ans);\n\treturn 0;\n}\n \n  \nvoid init_hash(int *h,char *s,int base,int mod,int lim) {\n\tfor (int i = 1; i <= lim; ++ i) h[i] = ((ll) h[i-1] * base + s[i] - 'a') % mod;\n}\n \nint get_hash(int *h,int *pw,int mod,int l,int r) {\n\treturn (h[r] - (ll) pw[r-l+1] * h[l-1] % mod + mod) % mod;\n}\n\t\n```\n",
        "postTime": 1608595729,
        "uid": 48355,
        "name": "EternalAlexander",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF744E \u3010Hongcow Masters the Cyclic Shift\u3011"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/744/problem/E) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF744E)\n\n\u9996\u5148\u5f88\u663e\u7136\u53d1\u73b0\u96c6\u5408\u7684\u5408\u6cd5\u6027\u6ee1\u8db3\u5305\u542b\u5355\u8c03\uff0c\u56e0\u6b64\u5957\u4e2a two pointers \u95ee\u9898\u5c31\u8f6c\u5316\u4e3a $\\mathcal O(n)$ \u6b21 check \u4e00\u4e2a\u96c6\u5408\u7684\u5408\u6cd5\u6027\u3002\n\n\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u4e00\u4e0b\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32 $S=x_{k_1}+x_{k_2}+x_{k_3}+\\cdots+x_{k_p}$ \u548c $T=x_{l_1}+x_{l_2}+x_{l_3}+\\cdots+x_{l_q}$ \u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u5b57\u7b26\u4e32 $S_0,T_0$\uff0c\u6bcf\u6b21\u652f\u6301\u5f80 $S_0,T_0$ \u4e4b\u4e00\u52a0\u5165\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u5339\u914d\u5230\u4e86\u4e0d\u540c\u7684\u5b57\u7b26\u5c31\u63a8\u51fa\u3002\u663e\u7136\u6211\u4eec\u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u52a0\u5b57\u7b26\u4e32\u7684\u987a\u5e8f\u4f7f\u5f97\u6bcf\u6b21\u6070\u597d\u5f80 $S_0,T_0$ \u4e2d\u957f\u5ea6\u8f83\u77ed\u7684\u4e00\u8005\u52a0\uff0c\u90a3\u4e48\u8fd9\u6837\u4ee5\u6765\u5c31\u6709\u4ee5\u4e0b\u4e09\u7c7b\u53ef\u80fd\u51fa\u73b0\u7684\u72b6\u6001\u3002\n\n- $X(s)$\uff1a\u76ee\u524d $S_0$ \u6bd4 $T_0$ \u591a $s$ \u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\n- $Y(s)$\uff1a\u76ee\u524d $T_0$ \u6bd4 $S_0$ \u591a $s$ \u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\n- $Z$\uff1a\u76ee\u524d $S_0=T_0$\u3002\n\n\u8003\u8651\u5bf9\u8fd9\u4e2a\u4e1c\u897f\u5efa\u81ea\u52a8\u673a\u3002\u7531\u4e8e\u4e8c\u8005\u4e4b\u5dee\u80af\u5b9a\u662f\u5b57\u7b26\u4e32\u7684\u67d0\u4e2a\u540e\u7f00\uff0c\u6240\u4ee5\u603b\u72b6\u6001\u6570\u662f $\\mathcal O(\\sum|s|)$ \u7684\u3002\u800c\u6bcf\u4e2a\u72b6\u6001\u6700\u591a\u53ea\u4f1a\u8f6c\u79fb\u5230 $n$ \u4e2a\u72b6\u6001\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u54c8\u5e0c\u5904\u7406\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u5f20 $\\mathcal O(\\sum|s|)$ \u4e2a\u70b9 $\\mathcal O(\\sum|s|\u00b7n)$ \u6761\u8fb9\u7684\u56fe\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53c8\u8be5\u5982\u4f55\u5224\u5b9a\u5408\u6cd5\u6027\u5462\uff1f\u4e0d\u96be\u53d1\u73b0\u4e00\u4e2a\u96c6\u5408\u4e0d\u5408\u6cd5\uff0c\u7b49\u4ef7\u4e8e\u5b58\u5728\u67d0\u4e2a\u5b57\u7b26\u4e32 $s$ \u7684\u67d0\u4e2a\u524d\u7f00 $1\\le l<|s|$ \u4f7f\u5f97 $X(s[l+1...|s|])$ \u53ef\u4ee5\u5230\u8fbe $Y(s[1...|s|])$\u3002\u8bc1\u660e\u663e\u7136\u3002\u6709\u5411\u56fe\u4efb\u610f\u4e24\u70b9\u53ef\u8fbe\u6027\uff1f\u4e00\u6c27\u5316\u6c2e\u3002\u6ce8\u610f\u5230 $Y(s[1...|s|])$ \u5fc5\u7136\u53ef\u4ee5\u5230\u8fbe $X(s[l+1...|s|])$\uff0c\u56e0\u6b64\u53ea\u9700\u5224\u5b83\u4eec\u662f\u5426\u5728\u540c\u4e00 SCC \u4e2d\uff0cTarjan \u7f29\u70b9\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n^2\u00b7\\sum|s|$\u3002\n\n```cpp\nconst int MAXN = 30;\nconst int MAXM = 1e5;\nconst int MAXV = MAXM * 2;\nconst int MAXE = 1e7;\nconst int BS1 = 191;\nconst int BS2 = 193;\nconst int MOD1 = 993244853;\nconst int MOD2 = 1004535809;\nint n, res, len[MAXN + 5]; char s[MAXN + 5][MAXM + 5];\nint hs1[MAXN + 5][MAXM + 5], pw1[MAXM + 5];\nint hs2[MAXN + 5][MAXM + 5], pw2[MAXM + 5];\nu64 gethash(int x, int l, int r) {\n\tint HS1 = (hs1[x][r] - 1ll * pw1[r - l + 1] * hs1[x][l - 1] % MOD1 + MOD1) % MOD1;\n\tint HS2 = (hs2[x][r] - 1ll * pw2[r - l + 1] * hs2[x][l - 1] % MOD2 + MOD2) % MOD2;\n\treturn (1ull * HS1) << 32 | HS2;\n}\nint hd[MAXV + 5], to[MAXE + 5], nxt[MAXE + 5], ec = 0;\nvoid adde(int u, int v) {to[++ec] = v; nxt[ec] = hd[u]; hd[u] = ec;}\nunordered_map<u64, int> id[2]; int ncnt, EQUAL;\nnamespace Tarjan {\n\tint dfn[MAXV + 5], low[MAXV + 5], tim, stk[MAXV + 5], tp, bel[MAXV + 5], vis[MAXV + 5], cmp;\n\tvoid init() {\n\t\tmemset(dfn, 0, sizeof(dfn));\n\t\tmemset(low, 0, sizeof(low));\n\t\ttim = cmp = tp = 0;\n\t}\n\tvoid tarjan(int x) {\n\t\tdfn[x] = low[x] = ++tim; stk[++tp] = x; vis[x] = 1;\n\t\tfor (int e = hd[x]; e; e = nxt[e]) {\n\t\t\tint y = to[e];\n\t\t\tif (!dfn[y]) tarjan(y), chkmin(low[x], low[y]);\n\t\t\telse if (vis[y]) chkmin(low[x], dfn[y]);\n\t\t}\n\t\tif (dfn[x] == low[x]) {\n\t\t\t++cmp; int o;\n\t\t\tdo {\n\t\t\t\to = stk[tp--];\n\t\t\t\tvis[o] = 0; bel[o] = cmp;\n\t\t\t} while (o ^ x);\n\t\t} \n\t}\n\tvoid work() {for (int i = 1; i <= ncnt; i++) if (!dfn[i]) tarjan(i);}\n}\nvoid init() {\n\tTarjan :: init();\n\tmemset(hd, 0, sizeof(hd)); ec = 0;\n\tfor (int i = 0; i < 2; i++) id[i].clear();\n\tncnt = EQUAL = 0;\n}\nbool check(int l, int r) {\n\tinit();\n\tfor (int i = l; i <= r; i++) {\n\t\tfor (int j = 1; j <= len[i]; j++) {\n\t\t\tu64 hs = gethash(i, j, len[i]);\n\t\t\tif (!id[0][hs]) id[0][hs] = ++ncnt;\n\t\t\tif (!id[1][hs]) id[1][hs] = ++ncnt;\n\t\t}\n\t}\n\tEQUAL = ++ncnt;\n\tfor (int i = l; i <= r; i++) for (int j = 1; j <= len[i]; j++)\n\t\tfor (int k = l; k <= r; k++) {\n\t\t\tfor (int x = 0; x < 2; x++) {\n\t\t\t\tint A = len[i] - j + 1, B = len[k];\n\t\t\t\tif (A > B) {\n\t\t\t\t\tif (gethash(i, j, j + B - 1) != gethash(k, 1, B)) continue;\n\t\t\t\t\tadde(id[x][gethash(i, j, len[i])], id[x][gethash(i, j + B, len[i])]);\n\t\t\t\t} else if (A == B) {\n\t\t\t\t\tif (gethash(i, j, len[i]) != gethash(k, 1, B)) continue;\n\t\t\t\t\tadde(id[x][gethash(i, j, len[i])], EQUAL);\n\t\t\t\t} else {\n\t\t\t\t\tif (gethash(i, j, len[i]) != gethash(k, 1, A)) continue;\n\t\t\t\t\tadde(id[x][gethash(i, j, len[i])], id[x ^ 1][gethash(k, A + 1, B)]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tfor (int i = l; i <= r; i++) {\n\t\tadde(EQUAL, id[0][gethash(i, 1, len[i])]);\n\t\tadde(EQUAL, id[1][gethash(i, 1, len[i])]);\n\t}\n\tTarjan :: work();\n\tfor (int i = l; i <= r; i++) {\n\t\tfor (int j = 1; j < len[i]; j++) {\n\t\t\tif (!id[0].count(gethash(i, 1, j))) continue;\n\t\t\tint X = id[0][gethash(i, 1, j)], Y = id[1][gethash(i, j + 1, len[i])];\n\t\t\tif (Tarjan :: bel[X] == Tarjan :: bel[Y]) return 0;\n\t\t}\n\t}\n\treturn 1;\n}\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = (pw1[0] = pw2[0] = 1); i <= MAXM; i++) {\n\t\tpw1[i] = 1ll * pw1[i - 1] * BS1 % MOD1;\n\t\tpw2[i] = 1ll * pw2[i - 1] * BS2 % MOD2;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%s\", s[i] + 1); len[i] = strlen(s[i] + 1);\n\t\tfor (int j = 1; j <= len[i]; j++) hs1[i][j] = (1ll * hs1[i][j - 1] * BS1 + s[i][j]) % MOD1;\n\t\tfor (int j = 1; j <= len[i]; j++) hs2[i][j] = (1ll * hs2[i][j - 1] * BS2 + s[i][j]) % MOD2;\n\t}\n\tfor (int l = 1, r = 1; l <= n; l++) {\n\t\twhile (r <= n && check(l, r)) ++r;\n\t\tres += r - l;\n\t}\n\tprintf(\"%d\\n\", res);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1657443647,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF744E Hongcow Masters the Cyclic Shift"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u96c6\u5408\uff0c\u5982\u4f55\u5224\u5b9a\u8fd9\u4e2a\u96c6\u5408\u662f\u5426\u5408\u6cd5\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32 $\\prod\\limits_{i=1}^p x_i$ \u548c\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 $\\prod\\limits_{i=1}^q y_i$ \u76f8\u5339\u914d\u7684\u8fc7\u7a0b\u3002\n\n\u5339\u914d\u8fc7\u7a0b\u4e2d\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u5b57\u7b26\u4e32 $S$ \u548c $T$\u3002\n\n\u91cd\u590d\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\u76f4\u5230\u6240\u6709 $x_i$ \u548c $y_i$ \u90fd\u88ab\u52a0\u5165\uff1a\n\n- \u5982\u679c\u5f53\u524d $|S|\\le |T|$\uff0c\u90a3\u4e48\u5f80 $S$ \u672b\u5c3e\u52a0\u5165\u5f53\u524d\u9996\u4e2a\u672a\u88ab\u52a0\u5165\u7684 $x_i$\u3002\n\n- \u5982\u679c\u5f53\u524d $|S|>|T|$\uff0c\u90a3\u4e48\u5f80 $S$ \u672b\u5c3e\u52a0\u5165\u5f53\u524d\u9996\u4e2a\u672a\u88ab\u52a0\u5165\u7684 $y_i$\u3002\n\n\u5982\u679c\u5728\u4efb\u610f\u4e00\u4e2a\u65f6\u523b\uff0c$S$ \u548c $T$ \u7684\u524d $\\min\\{|S|,|T|\\}$ \u4e2a\u4f4d\u7f6e\u4e0d\u80fd\u5b8c\u5168\u5339\u914d\uff0c\u90a3\u4e48\u8bf4\u660e\u5339\u914d\u5931\u8d25\u3002\n\n\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b $S$ \u4e0e $T$ \u76f8\u5dee\u7684\u90e8\u5206\u4e00\u5b9a\u662f\u67d0\u4e2a $x_i$ \u6216 $y_i$ \u7684\u67d0\u4e2a\u540e\u7f00\u3002\n\n\u9898\u76ee\u8981\u6c42\u662f\u4e0d\u80fd\u5b58\u5728\u5faa\u73af\u79fb\u4f4d\u540e\u7684\u5339\u914d\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9 $x_1$ \u548c $x_p$ \u5206\u522b\u4e3a\u67d0\u4e2a $s_i$ \u7684**\u771f\u540e\u7f00**\u548c**\u771f\u524d\u7f00**\u3002\n\n\u6b64\u65f6\u4e0a\u9762\u7684\u6027\u8d28\u4ecd\u7136\u6ee1\u8db3\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6240\u6709 $s_i$ \u7684\u6240\u6709\u540e\u7f00 $x$ \u5efa\u7acb**\u4e24\u4e2a\u70b9** $(x,0)$ \u548c $(x,1)$\uff0c\u5206\u522b\u8868\u793a $S$ \u6bd4 $T$ \u591a\u5f53\u524d\u540e\u7f00\u548c $T$ \u6bd4 $S$ \u591a\u5f53\u524d\u540e\u7f00\u8fd9\u4e24\u79cd\u72b6\u6001\u3002\u8fd8\u9700\u8981\u53e6\u5916\u589e\u52a0\u4e00\u4e2a\u7279\u6b8a\u8282\u70b9\u8868\u793a $S=T$ \u8fd9\u79cd\u72b6\u6001\u3002\n\n\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a $s_i$ \u6c42\u51fa\u8fd9\u4e2a\u72b6\u6001\u7684\u6240\u6709\u540e\u7ee7\u3002\u540c\u65f6\uff0c\u5bf9\u4e8e\u672c\u8d28\u76f8\u540c\u7684\u72b6\u6001\uff08\u5373 $s_i$ \u548c $s_j$ \u7684\u67d0\u4e2a\u957f\u5ea6\u7684\u540e\u7f00\u76f8\u540c\uff09\u4e4b\u95f4\u4e92\u76f8\u8fde\u8fb9\u3002\n\n\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u4f7f\u7528\u54c8\u5e0c\u5728 $O(n\\sum |s_i|)$ \u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002\n\n\u6700\u540e\u6211\u4eec\u8003\u8651\u5982\u4f55\u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $s_i$ \u548c $s_i$ \u7684\u4e00\u4e2a**\u771f\u540e\u7f00**\u4f5c\u4e3a $x_1$\uff0c\u90a3\u4e48\u6b64\u65f6 $x_p$ \u4e5f\u786e\u5b9a\u4e86\u3002$x_p$ \u662f $s_i$ \u7684\u4e00\u6bb5**\u771f\u524d\u7f00**\uff0c\u53ef\u80fd\u4e0d\u5b58\u5728\u76f8\u5bf9\u5e94\u7684\u72b6\u6001\u3002\u6b64\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u5982\u679c $(x_p,1)$ \u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u8fc7\uff0c\u5f53\u524d\u72b6\u6001\u6ca1\u6709\u4ef7\u503c\u3002\n\n- \u5982\u679c $(x_p,1)$ \u5b58\u5728\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad $(x_1,0)$ \u662f\u5426\u80fd\u5230\u8fbe $(x_p,1)$ \u5373\u53ef\uff0c\u5982\u679c\u80fd\u5230\u8fbe\u5219\u96c6\u5408\u4e0d\u5408\u6cd5\u3002\n\n\u6709\u5411\u56fe\u4efb\u610f\u4e24\u70b9\u8fde\u901a\u6027\uff1f\n\n\u6b64\u65f6\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28\uff1a$(x_p,1)$ \u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe $(x_1,0)$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c $(x_1,0)$ \u80fd\u5230\u8fbe $(x_p,1)$\uff0c\u90a3\u4e48 $(x_1,0)$ \u548c $(x_p,1)$ \u4e00\u5b9a\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u3002\n\n\u76f4\u63a5\u8dd1 Tarjan \u5373\u53ef\u3002\n\n\u6b64\u65f6\u6211\u4eec\u5c31\u5728 $O(n\\sum |s_i|)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e86\u5224\u65ad\u96c6\u5408\u5408\u6cd5\u6027\u7684\u95ee\u9898\u3002\n\n\u5269\u4e0b\u7684\u95ee\u9898\u53ef\u4ee5\u76f4\u63a5\u53cc\u6307\u9488\u89e3\u51b3\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2\\sum |s_i|)$\u3002\n\n\u4ee3\u7801\u5199\u5f97\u6bd4\u8f83\u653e\u98de\uff0c\u5e38\u6570\u86ee\u5927\u7684\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 35\n#define M 200005\n#define MOD1 1000000007\n#define MOD2 1000000009\n#define pb push_back\nconst int lim=1e5;mt19937 rand1(time(0));\nint n,ans,len[N],s[N],P1[M],P2[M],hs1[N][M],hs2[N][M];char a[N][M];\nint dfn[M],low[M],st[M],bl[M];vector<int> e[M];\nint rdm(int l,int r) {return rand1()%(r-l+1)+l;}\nint qry1(int x,int l,int r) {return ((hs1[x][r]-1ll*hs1[x][l-1]*P1[r-l+1])%MOD1+MOD1)%MOD1;}\nint qry2(int x,int l,int r) {return ((hs2[x][r]-1ll*hs2[x][l-1]*P2[r-l+1])%MOD2+MOD2)%MOD2;}\nvoid Tarjan(int u)\n{\n\tdfn[u]=low[u]=++dfn[0];st[++st[0]]=u;\n\tfor(auto v:e[u]) if(!dfn[v]) Tarjan(v),low[u]=min(low[u],low[v]);\n\t\telse if(!bl[v]) low[u]=min(low[u],dfn[v]);\n\tif(dfn[u]==low[u]) {bl[u]=++bl[0];while(st[st[0]]!=u) bl[st[st[0]--]]=bl[0];--st[0];}\n}\nbool slv(int l,int r)\n{\n\ts[l]=dfn[0]=0;for(int i=l+1;i<=r+1;++i) s[i]=s[i-1]+len[i-1];\n\tfor(int i=1;i<=s[r+1]*2+1;++i) dfn[i]=bl[i]=0,e[i].clear();\n\tfor(int i=l;i<=r;++i) for(int j=1;j<=len[i];++j) for(int k=l;k<=r;++k)\n\t{\n\t\tif(i!=k && len[k]>=len[i]-j+1)\n\t\t{\n\t\t\tif(qry1(i,j,len[i])==qry1(k,len[k]-len[i]+j,len[k]) &&\n\t\t\t   qry2(i,j,len[i])==qry2(k,len[k]-len[i]+j,len[k]))\n\t\t\t\te[s[i]+j].pb(s[k]+len[k]-len[i]+j),e[s[r+1]+s[i]+j].pb(s[r+1]+s[k]+len[k]-len[i]+j);\n\t\t}\n\t\tif(len[k]<len[i]-j+1)\n\t\t{\n\t\t\tif(qry1(i,j,j+len[k]-1)==hs1[k][len[k]] && qry2(i,j,j+len[k]-1)==hs2[k][len[k]])\n\t\t\t\te[s[i]+j].pb(s[i]+j+len[k]),e[s[r+1]+s[i]+j].pb(s[r+1]+s[i]+j+len[k]);\n\t\t}\n\t\telse if(len[k]>len[i]-j+1)\n\t\t{\n\t\t\tif(qry1(i,j,len[i])==hs1[k][len[i]-j+1] && qry2(i,j,len[i])==hs2[k][len[i]-j+1])\n\t\t\t\te[s[i]+j].pb(s[r+1]+s[k]+len[i]-j+2),e[s[r+1]+s[i]+j].pb(s[k]+len[i]-j+2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(qry1(i,j,len[i])==hs1[k][len[k]] && qry2(i,j,len[i])==hs2[k][len[k]])\n\t\t\t\te[s[i]+j].pb(s[r+1]*2+1),e[s[r+1]+s[i]+j].pb(s[r+1]*2+1);\n\t\t}\n\t}for(int i=l;i<=r;++i) e[s[r+1]*2+1].pb(s[i]+1),e[s[r+1]*2+1].pb(s[r+1]+s[i]+1);\n\tfor(int i=1;i<=s[r+1]*2+1;++i) if(!dfn[i]) Tarjan(i);\n\tfor(int i=l;i<=r;++i) for(int j=2;j<=len[i];++j) for(int k=l;k<=r;++k) if(len[k]>=j-1)\n\t\tif(hs1[i][j-1]==qry1(k,len[k]-j+2,len[k]) && hs2[i][j-1]==qry2(k,len[k]-j+2,len[k]))\n\t\t{if(bl[s[i]+j]==bl[s[r+1]+s[k]+len[k]-j+2]) return 0;break;}return 1;\n}\nint main()\n{\n\tscanf(\"%d\",&n);P1[0]=P2[0]=1;P1[1]=rdm(MOD1/3,MOD1/3*2);P2[1]=rdm(MOD2/3,MOD2/3*2);\n\tfor(int i=2;i<=lim;++i) P1[i]=1ll*P1[i-1]*P1[1]%MOD1,P2[i]=1ll*P2[i-1]*P2[1]%MOD2;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%s\",a[i]+1);len[i]=strlen(a[i]+1);\n\t\tfor(int j=1;j<=len[i];++j)\n\t\t{\n\t\t\ths1[i][j]=(1ll*hs1[i][j-1]*P1[1]+a[i][j]-'a'+1)%MOD1;\n\t\t\ths2[i][j]=(1ll*hs2[i][j-1]*P2[1]+a[i][j]-'a'+1)%MOD2;\n\t\t}\n\t}for(int i=1,t=1;i<=n;++i) {while(!slv(t,i)) ++t;ans+=i-t+1;}printf(\"%d\\n\",ans);return 0;\n}\n```",
        "postTime": 1650600282,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "CF744E Hongcow Masters the Cyclic Shift"
    }
]