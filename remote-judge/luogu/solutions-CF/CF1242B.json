[
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21\u6253 div1...\u867d\u7136\u662f vp\n\n\u849f\u84bb\u7684\u83dc\u9e21\u505a\u6cd5\u7adf\u7136\u8dd1\u4e86\u5168\u8c37\u7b2c\u4e00 (\u81f3\u5c11\u5728 $2020.8.4$ \u4e4b\u524dqwq) ?\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0bqwq\n\n## \u9898\u9762\n> \u7ed9\u5b9a\u4e00\u5f20\u5b8c\u5168\u56fe, \u5176\u4e2d\u6709 $m$ \u6761\u8fb9\u6743\u503c\u4e3a $1$, \u6c42\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\n\n> \u6570\u636e\u8303\u56f4\uff1a$n, m \\le 10^5$\n\n## \u9898\u89e3\n\n\u8f6c\u5316\u4e00\u4e0b, \u5c31\u662f\u7ed9\u5b9a\u4e00\u5f20\u56fe, \u7ed9\u5b9a $m$ \u5bf9\u70b9, \u8fd9 $m$ \u5bf9\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9, \u8981\u6c42\u51fa \u8054\u901a\u5757\u4e2a\u6570$ - 1 $\n\n\u8003\u8651\u5230\u8fde\u7684\u8fb9\u6709 $n^2$ \u6761, \u7136\u800c\u8fd9\u6837\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u7a33\u7a33\u7684 $\\rm TLE$\u3002 \u4f46\u662f\u53d1\u73b0\u65ad\u5f00\u7684\u8fb9\u5341\u5206\u7a00\u758f, \u6240\u4ee5\u5982\u679c\u9009\u51fa\u67d0\u4e2a\u7279\u5b9a\u7684\u70b9, \u80fd\u51fa\u53d1\u8fde\u5411\u53e6\u4e00\u4e2a\u70b9\u7684\u6982\u7387\u5341\u5206\u5927, \u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4ece\u4e00\u4e2a\u5ea6\u6570\u6700\u5927\u7684\u70b9 (\u5c31\u662f\u65ad\u8fb9\u6700\u5c11\u7684\u70b9), \u51fa\u53d1\u53bb\u6389\u8fde\u5411\u5176\u4ed6\u70b9\u7684\u8fb9, \u7136\u540e\u518d\u5728\u5269\u4f59\u7684\u70b9\u4e0a\u8dd1\u7c7b\u4f3c\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e1c\u897f, \u7b97\u8054\u901a\u5757\u3002\n\n\u8fd9\u91cc\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u7528\u6392\u5e8f,\u8dd1\u4e00\u6b21\u6709\u8fde\u8fb9\u7684\u70b9\u5c31\u597d\u4e86qwq\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u8c8c\u4f3c\u8fd8\u662f\u5f88\u5927???\n\n\u4f46\u662f\u4ed4\u7ec6\u4e00\u7b97...\n\n\u6700\u5927\u5ea6\u6570\u6700\u5c0f\u4e3a $\\frac{n^2 - 2m}{n}$\n\n\u8dd1\u4e86\u6700\u5c0f\u751f\u6210\u6811\u7684\u70b9\u6570\u6700\u5927\u4e3a $n - \\frac{n^2 - 2m}{n} = \\frac{2m}{n}$ \u4e14\u4e0d\u8d85\u8fc7 $n$\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Theta(n +n \\times \\frac{m}{n}) = \\Theta(n + m)$ \u7684\uff0c\u662f\u7ebf\u6027\u7684\u3002\n\n## \u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\n#define N 110000\n#define M 500\n#define re register\nusing namespace std;\nint n, m, cnt, minn = 1;\nint mp[N], deg[N], bh[M], dy[N], f[N], tot;\nstruct edge {\n    int fr, to, val;\n} e[N];\nbitset<N> g[M];\nint find(int x) {\n    return f[x] == x ? x : f[x] = find(f[x]);\n}\ninline int read() {\n\tchar c = getchar();int x = 0;\n\twhile(c < '0' || c > '9') c = getchar();\n\twhile(c >= '0' && c  <= '9') x = (x << 3) + (x << 1) + c - '0', c = getchar();\n\treturn x;\n}\nint main() {\n    n = read(), m = read();\n    for(re int i = 1; i <= n; i++) f[i] = i;\n    for(re int i = 1; i <= m; i++) e[i].fr = read(), e[i].to = read(), deg[e[i].fr]++, deg[e[i].to]++;\n    for(re int i = 2; i <= n; i++) if(deg[i] < deg[minn]) minn = i;\n    for(re int i = 1; i <= m; i++) {\n        if(e[i].fr == minn) mp[e[i].to] = 1;\n        if(e[i].to == minn) mp[e[i].fr] = 1;\n    }\n    for(re int i = 1; i <= n; i++){\n        if(mp[i] == 1) ++tot, dy[tot] = i, bh[i] = tot;\n        else f[i] = minn;\n    }   \n    for(re int i = 1; i <= m; i++) {\n        if(mp[e[i].fr] == 1) g[bh[e[i].fr]][e[i].to] = 1;\n        if(mp[e[i].to] == 1) g[bh[e[i].to]][e[i].fr] = 1;\n    }\n    for(re int i = 1; i <= tot; i++) {\n        int u = dy[i];\n        for(re int j = 1; j <= n; j++) {\n            if(g[i][j]) continue;\n            if(find(u) == find(j)) continue;\n            ++cnt, f[find(u)] = find(j);\n        }\n    }\n    printf(\"%d\\n\", tot - cnt);\n    return 0;\n}\n```",
        "postTime": 1596545084,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1242B \u30100-1 MST\u3011"
    },
    {
        "content": "~~\u4e0d\u592a\u5bf9\u52b2\u7684\u505a\u6cd5\uff1a\u7ebf\u6bb5\u6811~~\n\n\u7531\u4e8e $w=0$ \u7684\u8fb9\u592a\u591a\uff0c**\u6211\u4eec\u53ea\u8003\u8651 $w=1$ \u7684\u8fb9**\n\n\u8003\u8651\u5982\u4f55\u6784\u9020\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5148\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n\u628a $1$ \u53f7\u5f53\u4f5c\u8d77\u70b9\uff0c\u6b64\u65f6\u6211\u4eec\u663e\u7136\u4e0d\u5e0c\u671b\u8fde\u51fa\u4e00\u6761 $w=1$ \u7684\u8fb9\uff0c\u4e8e\u662f\u6211\u4eec\u7ed9\u6240\u6709\u4e0e $1$ \u53f7\u8282\u70b9\u76f8\u90bb\uff08\u5f53\u7136\u53ea\u8003\u8651 $w=1$ \u7684\u8fb9\uff09\u7684\u8282\u70b9\u90fd\u6253\u4e0a\u4e00\u4e2a tag\u3002\n\n\u7136\u540e\u9009\u62e9\u4e00\u4e2a\u6ca1\u6709 tag \u7684\u70b9\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u8d77\u70b9\uff0c\u7ee7\u7eed\u6269\u5c55\uff0c\u5047\u8bbe\u9009\u4e2d\u7684\u662f $v$ \u8282\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7ee7\u7eed\u7ed9\u6240\u6709\u4e0e $v$ \u53f7\u8282\u70b9\u76f8\u90bb\u7684\u8282\u70b9\u90fd\u6253\u4e0a\u4e00\u4e2a $tag$ \u3002\n\n\u6211\u4eec\u4e00\u6837\u6309\u7167\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u9009\u4e2d\u6ca1\u6709 tag \u7684\u8282\u70b9\uff1b\u5982\u679c\u90fd\u88ab\u6253\u4e0a\u4e86\u81f3\u5c11\u4e00\u6b21 tag\uff0c\u90a3\u5c31\u5bfb\u627e\u53ea\u88ab\u6253\u8fc7 tag \u4e00\u6b21\u7684\u70b9\u3002\u5c06\u5b83\u518d\u6b21\u4f5c\u4e3a\u8d77\u70b9\u3002\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\u76f4\u5230\u6240\u6709\u70b9\u90fd\u88ab\u8d70\u5230\u3002\n\n\u4e0d\u7136\u5c31\u53ea\u53ef\u80fd\u5269\u4e0b\u88ab\u6253\u8fc7\u4e24\u6b21 tag \u7684\u70b9\u4e86\uff0c**\u6b64\u65f6\u6211\u4eec\u5c31\u88ab\u8feb\uff0c\u5fc5\u987b\u8fde\u51fa\u4e00\u6761 $w=1$ \u7684\u8fb9**\u4e86\uff0c\u4e8e\u662f $++Ans$\n\n----\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u51fa\u4e86\u7b97\u6cd5\u5982\u4e0b\uff1a\n\n$1.$ \u968f\u4fbf\u9009\u4e2d\u4e00\u4e2a\u8282\u70b9 $st$ \u4f5c\u4e3a\u8d77\u59cb\u8282\u70b9\uff1b \n\n$2.1$ \u628a\u4e0e\u8d77\u59cb\u8282\u70b9 $st$ **\u76f4\u63a5\u76f8\u90bb\u7684\u70b9\u7684\u6743\u503c\u90fd $+1$**\uff1b  \n$2.2.$ \u628a\u8d77\u59cb\u8282\u70b9 $st$ \u7684\u6743\u503c\u8bbe\u7f6e\u4e3a $INF$ \u4ee5\u514d\u91cd\u590d\u4f7f\u7528\uff1b  \n\n$3.1$ **\u5bfb\u627e\u6743\u503c\u6700\u5c0f\u7684\u70b9** $v_{\\min}$;  \n$3.2$ \u8bbe\u5f53\u524d\u5df2\u7ecf\u7ecf\u8fc7\u4e86  $size$ \u4e2a\u70b9\uff08\u4e0d\u5305\u542b $v_{\\min}$\uff09\uff0c\u82e5 $v_{\\min}$ \u7684\u6743\u503c $= size$\uff0c\u5219 $++Ans$;  \n$3.3$ \u628a $v_{\\min}$ \u91cd\u65b0\u4f5c\u4e3a\u8d77\u59cb\u8282\u70b9 $st$\uff1b  \n\n$4.$ \u5982\u679c\u6240\u6709\u7684\u70b9\u90fd\u88ab\u7ecf\u8fc7\uff0c\u5219\u7ed3\u675f\uff0c\u53cd\u4e4b\u56de\u5230 $2.1$\u3002\n\n\u4e0a\u8ff0\u4e00\u5207\u64cd\u4f5c\u5747\u53ef\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n\n#define rg register\n#define il inline\n#define MX (100000 + 4)\n\nint min(int a ,int b){return a < b ? a : b;}\nint read(){}\n\nint head[MX] ,tot;\nstruct edge{\n\tint node ,next;\n}h[MX << 1];\nvoid addedge(int u ,int v){\n\th[++tot].next = head[u];\n\thead[u] = tot;\n\th[tot].node = v;\n}\n\nstruct node{\n\tint l ,r ,mn ,mnpos;\n\tnode *lch ,*rch;\n}*root;\n\nvoid pushup(node *x){\n\tx->mn = min(x->lch->mn ,x->rch->mn);\n\tif(x->mn == x->lch->mn)\tx->mnpos = x->lch->mnpos;\n\telse x->mnpos = x->rch->mnpos;\n}\n\nnode *build(int l ,int r){\n\tnode *x = new node;\n\tx->l = l ,x->r = r ,x->mn = 0;\n\tif(l == r){\n\t\tx->mnpos = l;\n\t\tx->lch = x->rch = NULL;\n\t}\n\telse{\n\t\tint mid = l + r >> 1;\n\t\tx->lch = build(l ,mid);\n\t\tx->rch = build(mid + 1 ,r);\n\t\tpushup(x);\n\t}\n\treturn x;\n}\n\nvoid add(node *x ,int l ,int r ,int val){\n\tif(l <= x->l && x->r <= r)\treturn (void)(x->mn += val);\n\tint mid = x->l + x->r >> 1;\n\tif(mid >= l)\tadd(x->lch ,l ,r ,val);\n\tif(mid < r)\t\tadd(x->rch ,l ,r ,val);\n\tpushup(x);\n}\n\nint main(){\n\tint n = read() ,m = read();\n\tfor(rg int i = 1 ,u ,v ; i <= m ; ++i){\n\t\tu = read() ,v = read();\n\t\taddedge(u ,v);\n\t\taddedge(v ,u);\n\t}\n\troot = build(1 ,n);\n\tint Ans = 0;\n\tfor(rg int i = 1 ; i <= n ; ++i){\n\t\tnode x = *root;\n\t\tif(x.mn >= i - 1)\t++Ans;\n\t\tadd(root ,x.mnpos ,x.mnpos ,233333);\n\t\tfor(rg int j = head[x.mnpos] ; j ; j = h[j].next){\n\t\t\tadd(root ,h[j].node ,h[j].node ,1);\n\t\t}\n\t}\n\tprintf(\"%d\\n\" ,Ans - 1);\n\treturn 0;\n} \n```",
        "postTime": 1573141042,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1242B \u30100-1 MST\u3011"
    },
    {
        "content": "\u8003\u8651\u5148\u628a\u5ea6\u6570\u6700\u5c0f\u7684\u7ed3\u70b9\u627e\u51fa\u6765\uff0c\u7136\u540e\u7528\u5e76\u67e5\u96c6\u8fdb\u884c\u4e00\u6ce2\u5408\u5e76\uff0c\u5c06\u6240\u6709\u4e0e\u4ed6\u6ca1\u6709\u8fb9\u7684\u70b9\u4e0e\u4ed6\u5408\u5e76\u3002\n\n\u53c8\u662f\u6839\u636e\u9e3d\u5de2\u539f\u7406\uff0c\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\u4e0d\u4f1a\u8d85\u8fc7 $\\frac{2m}{n}$\u3002\u56e0\u4e3a\u6240\u6709\u70b9\u5ea6\u6570\u548c\u4e3a $2m$\u3002\n\n\u6240\u4ee5\u8fd9\u4e00\u6b65\u4e4b\u540e\u7684\u8054\u901a\u5757\u4e2a\u6570\u6700\u591a\u53ea\u6709 $\\lfloor \\frac{2m}{n} \\rfloor+1$ \u4e2a\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e9b\u8054\u901a\u5757\u76f4\u63a5\u66b4\u529b\u5408\u5e76\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\min(\\frac{2m}{n},n)^2)$\n\n\u7136\u540e\u4f60\u4f1a\u53d1\u73b0 $\\min$ \u4e2d\u7684\u4e24\u4e2a\u91cf\u4e58\u79ef\u6c38\u8fdc\u662f $2m$\uff0c\u6240\u4ee5 $\\min$ \u7684\u503c\u4e0d\u8d85\u8fc7 $\\sqrt{2m}$\u3002\n\n\u56e0\u6b64\u6700\u540e\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n+m)$\n\n$Code\\ Below$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+5;\nconst int M=2e6+5;\n\nint read()\n{\n\tint s=0;\n\tchar c=getchar(),lc='+';\n\twhile (c<'0'||'9'<c) lc=c,c=getchar();\n\twhile ('0'<=c&&c<='9') s=s*10+c-'0',c=getchar();\n\treturn lc=='-'?-s:s;\n}\nvoid write(int x)\n{\n\tif (x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif (x<10) putchar(x+'0');\n\telse\n\t{\n\t\twrite(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nvoid print(int x=-1,char c='\\n')\n{\n\twrite(x);\n\tputchar(c);\n}\nstruct node\n{\n\tint to,nxt;\n}e[M*2];\nint head[N],cnte=0;\nvoid add(int u,int v)\n{\n\te[++cnte].to=v;\n\te[cnte].nxt=head[u];\n\thead[u]=cnte;\n}\nint siz[N],fa[N],no[N],cnt=0;\nbool vis[N],is[N];\nint find(int x)\n{\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}\ninline void merge(int x,int y)\n{\n\tfa[find(x)]=find(y);\n}\n\nsigned main(signed Recall,char *_902_[])\n{\n\t(void)Recall,(void)_902_;\n\n\tint n=read(),m=read();\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t\tsiz[u]++;\n\t\tsiz[v]++;\n\t}\n\tint Min=n,id=0;\n\tfor (int i=1;i<=n;i++) if (Min>siz[i]) Min=siz[i],id=i;\n\tfor (int i=1;i<=n;i++) fa[i]=i;\n\tfor (int i=head[id];i;i=e[i].nxt) vis[e[i].to]=1;\n\tfor (int i=1;i<=n;i++) if (!vis[i]) fa[i]=id,is[i]=1;\n\tfor (int i=1;i<=n;i++) if (!is[i]) no[++cnt]=i;\n\tmemset(vis,0,sizeof(vis));\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tint tot=0;\n\t\tfor (int j=head[i];j;j=e[j].nxt)\n\t\t{\n\t\t\tint to=e[j].to;\n\t\t\tvis[to]=1;\n\t\t\ttot+=is[to];\n\t\t}\n\t\tif (tot+cnt<n) merge(i,id);\n\t\tfor (int j=1;j<=cnt;j++) if (!vis[no[j]]) merge(i,no[j]);\n\t\tfor (int j=head[i];j;j=e[j].nxt) vis[e[j].to]=0;\n\t}\n\tint ans=-1;\n\tfor (int i=1;i<=n;i++) ans+=i==fa[i];\n\tprint(ans);\n\n\treturn 0;\n}\n```",
        "postTime": 1615275527,
        "uid": 61120,
        "name": "QwQcOrZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1242B \u30100-1 MST\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u66b4\u529b\n\n\u628a\u8fd9\u5f20\u56fe\u7684\u8865\u56fe\u5efa\u51fa\u6765\uff0c\u90a3\u4e48\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u8fde\u901a\u5757\u4e2a\u6570-1\n\n\u4f46\u662f\u8865\u56fe\u7684\u8fb9\u592a\u591a\uff0c\u4e0d\u80fd\u76f4\u63a5\u641e\n\n\u628a\u8fde\u901a\u5757\u770b\u6210\u96c6\u5408\uff0c\u7136\u540e\u60f3\u5230\u80fd\u7528\u5e76\u67e5\u96c6\u53bb\u7ef4\u62a4\n\n\u8003\u8651$[1,u-1]$\u7684\u70b9\u5df2\u7ecf\u5f62\u6210\u4e86$k$\u4e2a\u96c6\u5408\uff0c\u7b2c$i$\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\u4e3a$s_i$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8282\u70b9$u$\uff0c\u8ba1\u7b97\u5b83\u5411\u6bcf\u4e2a\u96c6\u5408\u8fde\u7684\u8fb9\u6570\n$mp_i$\uff0c\u5982\u679c$mp_i<s_i$\uff0c\u8bf4\u660e$u$\u5728$i$\u96c6\u5408\u4e2d\u6709$s_i-mp_i$\u6761\u6743\u503c\u4e3a$0$\u7684\u8fb9\uff0c\u6240\u4ee5 $u$**\u6240\u5728\u7684\u96c6\u5408** \u4e0e **\u96c6\u5408$i$** \u5408\u5e76\u3002\n\n\u8fd9\u65f6\uff0c\u806a\u660e\u7684\u4f60\u8981\u95ee\u4e86\uff1a\u590d\u6742\u5ea6\uff1f\u6bcf\u6b21\u679a\u4e3e\u70b9$u$\uff0c\u7136\u540e\u679a\u4e3e\u96c6\u5408$i$\uff0c\u590d\u6742\u5ea6\u4e0d\u662f$O(n^2)$\u5417\uff1f\n\n\u4e8b\u5b9e\u4e0a\uff0c\u96c6\u5408\u6570\u5e76\u6ca1\u6709\u8fd9\u4e48\u591a\uff0c~~\u53ef\u4ee5\u53e3\u80e1~~\u5bb9\u6613\u8bc1\u660e\uff0c\u8981\u628a\u4e00\u4e2a\u7ed3\u70b9\u4ece\u5b8c\u5168\u56fe\u4e2d\u6316\u51fa\u6765\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u70b9\u9700\u8981\u8fde$n$\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u70b9\u9700\u8981\u8fde$n-1$\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\u2026\u2026\n\n\u8bbe\u6709$k$\u4e2a\u96c6\u5408\n\n$$\\sum_{x=1}^k(n-x)\\le min(m,\\frac{n(n-1)}{2}),k \\le n$$\n\n\u6c42$k$\u7684\u6700\u5927\u503c\n\n\u8fd9\u4e2a\u73a9\u610f\u6211\u597d\u50cf\u4e0d\u592a\u4f1a\u8bc1\uff0c\u5982\u679c\u8c01\u80fd\u8bc1\u660e\u51fa\u6765\uff0c\u8bf7\u79c1\u4fe1XY_cpp\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nmap<int,int>ma;\nvector<int>e[N],b;\nint n,m,tot,f[N],s[N];\nint find(int x){return x==f[x]?x:f[x]=find(f[x]);}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        f[i]=i,s[i]=1;\n    for(int i=1;i<=m;i++)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        if(u<v) swap(u,v);\n        e[u].push_back(v);\n    }\n    for(int u=1;u<=n;u++)\n    {\n        ma.clear();\n        for(auto v:e[u])\n            ma[find(v)]++;\n        for(auto v:b)\n        {\n            int x=find(u),y=find(v);\n            if(x==y) continue;\n            if(ma[y]<s[y])\n                f[x]=y,s[y]+=s[x];\n        }\n        if(find(u)==u) b.push_back(u);\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n        if(f[i]==i) \n            ans++;\n    cout<<ans-1<<endl;\n    return 0;\n}\n```",
        "postTime": 1573203913,
        "uid": 53410,
        "name": "XY_cpp",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1242B \u30100-1 MST\u3011"
    },
    {
        "content": "\u6c34\u9898\uff0c\u76f4\u63a5\u66b4\u529b\u5c31\u80fd\u8fc7\n\n---\n\n\u7531\u4e8e\u56fe\u5f88\u5927\uff0c\u6240\u4ee5\u5c31\u4e0d\u80fd\u76f4\u63a5\u8fde\u8fb9\u6700\u5c0f\u751f\u6210\u6811\n\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6362\u4e00\u4e2a\u89d2\u5ea6\u8003\u8651:\n\n\u6c42\u51fa\u6240\u6709\u53ef\u4ee5\u75280\u8fb9\u8fde\u6210\u7684\u8054\u901a\u5757\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e9b\u8054\u901a\u5feb\u8fde\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u9897\u6700\u5c0f\u751f\u6210\u6811\n\n\u90a3\u4e48\u600e\u4e48\u6c42\u8054\u901a\u5feb\u5462?\n\n\u76f4\u63a5dfs\u662f\u53ef\u4ee5\u7684\uff01\n\n\u4f46\u662f\u9700\u8981\u526a\u679d\n\n---\n\n\u6700\u77ed\u4ee3\u7801\n\nset<int> s:\u8fd8\u6709\u54ea\u4e9b\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n  \u7531\u4e8e\u53ea\u6709\u4e00\u4e9b\u8fb9\u662f1\u8fb9\uff0c\u6240\u4ee5\u51e0\u6b21\u4e0b\u6765\uff0c\u5c31\u51e0\u4e4e\u5168\u8bbf\u95ee\u8fc7\u4e86\n\n  map<int,int> g[]: \u5b58\u6240\u6709\u76841\u8fb9\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,cnt;\nmap<int,int>g[200005];\nset<int>s,ns;\ninline void dfs(int x){\n\tvector<int>v;v.clear();ns.clear();\n\tfor(set<int>::iterator it=s.begin();it!=s.end();it++)if(!g[x][*it])v.push_back(*it);else ns.insert(*it);  //\u53ea\u7528\u5728\u6ca1\u6709\u7ecf\u8fc7\u7684\u70b9\u4e2d\u627e\n\ts=ns;//\u66f4\u65b0\n  for(int i:v)dfs(i);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,u,v;i<=m;++i)scanf(\"%d%d\",&u,&v),g[u][v]=1,g[v][u]=1;\n\tfor(int i=1;i<=n;++i)s.insert(i);\n\tfor(;s.size();){++cnt;int t=*s.begin();s.erase(t);dfs(t);}\n\tprintf(\"%d\\n\",cnt-1);\n}\n```",
        "postTime": 1573093166,
        "uid": 226760,
        "name": "RedLycoris",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1242B \u30100-1 MST\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[https://codeforces.com/problemset/problem/1242/B](https://codeforces.com/problemset/problem/1242/B)  \n\n\u9898\u76ee\u5927\u610f\uff1a  \n\n\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b $n(1 \\le n \\le 10^5)$ \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u56fe\uff0c\u56fe\u4e2d\u6709 $m$ \u6761\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\uff08$0 \\le m \\le \\min(\\frac{n(n-1)}{2}, 10^5)$\uff09\uff0c\u5176\u4f59\u7684\u8fb9\u957f\u5ea6\u5747\u4e3a $0$\u3002\u6c42\u6700\u5c0f\u751f\u6210\u6811\u957f\u5ea6\u3002  \n\n\u89e3\u9898\u601d\u8def\uff08\u53c2\u8003\u81ea [\u5b98\u65b9\u9898\u89e3](https://codeforces.com/problemset/problem/1242/B) \uff09\uff1a  \n\n\u9996\u5148\uff0c\u5982\u679c\u53ea\u8003\u8651\u56fe\u4e2d\u957f\u5ea6\u4e3a $0$ \u7684\u8fb9\u7684\u8bdd\uff1a\u5047\u8bbe\u6240\u6709\u8282\u70b9\u548c\u957f\u5ea6\u4e3a $0$ \u7684\u8fb9\u6784\u6210\u7684\u5b50\u56fe\u4e2d\u6709 $k$ \u4e2a\u8fde\u901a\u5757\uff0c\u5219\u6700\u5c0f\u751f\u6210\u6811\u7684\u957f\u5ea6\u4e3a $k-1$\uff08\u56e0\u4e3a\u8fd9 $k$ \u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u9700\u8981 $k-1$ \u6761\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\u5c06\u5176\u8fde\u901a\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u7684\u5c31\u662f\u53bb\u5bfb\u627e\u5b58\u5728\u591a\u5c11\u4e2a\u8fd9\u6837\u7684\u8fde\u901a\u5757\u3002  \n\n\u4e0b\u9762\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a $O(m + n \\log n)$ \u7684\u89e3\u6cd5\u3002  \n\n\u6211\u4eec\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u96f6\u6743\u503c\u8fde\u901a\u5757\uff0c\u540c\u65f6\u5b58\u50a8\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\u7136\u540e\u4ece $1$ \u5230 $n$ \u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u8282\u70b9 $v$\uff0c\u5e76\u5c06\u8282\u70b9 $v$ \u653e\u5230\u4e00\u4e2a\u5927\u5c0f\u4e3a $1$ \u7684\u8fde\u901a\u5757\u5185\u3002\u7136\u540e\u6211\u4eec\u904d\u5386\u4e0e\u8282\u70b9 $v$ \u90bb\u63a5\u7684\u6240\u6709\u6743\u503c\u4e3a $1$ \u7684\u8fb9 $\\{ u, v \\}$\uff08\u8981\u6c42 $u \\lt v$\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u96f6\u6743\u503c\u8fde\u901a\u5757\uff0c\u6211\u4eec\u8ba1\u7b97\u4ece\u8fd9\u4e2a\u8fde\u901a\u5757\uff08\u5373 $u$ \u6240\u5904\u7684\u8fde\u901a\u5757\uff09\u5230\u8282\u70b9 $v$ \u5b58\u5728\u591a\u5c11\u6761\u8fb9\u3002\u5982\u679c\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e $u$ \u6240\u5904\u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff0c\u6211\u4eec\u9700\u8981\u5408\u5e76\u8282\u70b9 $u$ \u548c $v$\uff08\u56e0\u4e3a\u5728\u8fde\u901a\u5757\u548c $v$ \u4e4b\u95f4\u81f3\u5c11\u6709\u4e00\u6761\u6743\u503c\u4e3a $0$ \u7684\u8fb9\uff09\u3002\u5426\u5219\uff0c\u6211\u4eec\u4e0d\u80fd\u5c06\u8fd9\u4e2a\u8fde\u901a\u5757\u548c\u8282\u70b9 $v$ \u5408\u5e76\u3002\u6700\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u96f6\u6743\u503c\u8fde\u901a\u5757\u7684\u4e2a\u6570\u3002  \n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u6574\u4f53\u6765\u8bf4\uff0c\u6709 $n$ \u4e2a\u8fde\u901a\u5757\u88ab\u521b\u9020\u51fa\u6765\u4e86\uff08\u56e0\u4e3a\u6bcf\u5904\u7406\u4e00\u4e2a\u8282\u70b9\u5c31\u4f1a\u65b0\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a $1$ \u7684\u8fde\u901a\u5757\uff09\u3002\u5f53\u6211\u4eec\u5c06\u67d0\u4e2a\u8001\u7684\u8fde\u901a\u5757\u540c\u8282\u70b9 $v$ \u8fdb\u884c\u5408\u5e76\u7684\u65f6\u5019\uff0c\u8fde\u901a\u5757\u7684\u6570\u91cf\u51cf\u5c11\u4e86\u4e00\u4e2a\u3002\u6240\u4ee5\u5408\u5e76\u64cd\u4f5c\u6700\u591a\u8fdb\u884c $O(n)$ \u6b21\uff0c\u800c\u6211\u4eec\u662f\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u8fdb\u884c\u5408\u5e76\u7684\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002  \n\n\u5982\u679c\u4e00\u4e2a\u65e7\u7684\u8fde\u901a\u5757\u4e0e\u8282\u70b9 $v$ \u4e0d\u8fdb\u884c\u5408\u5e76\uff0c\u5219\u6211\u4eec\u80fd\u8bc1\u660e\u8fd9\u4e2a\u65e7\u7684\u8fde\u901a\u5757\u8282\u8282\u70b9 $v$ \u4e4b\u95f4\u81f3\u5c11\u5b58\u5728\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u7b49\u4e8e\u8fb9\u7684\u6570\u91cf \u2014\u2014 $m$\u3002\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m)$\u3002  \n\n\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n + m)$\u3002  \n\n\u793a\u4f8b\u7a0b\u5e8f\uff1a  \n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nint n, m, f[maxn], sz[maxn], ans;\nvector<int> g[maxn], vec;\nmap<int, int> cnt;\n\nvoid init() {\n    for (int i = 1; i <= n; i++)\n        f[i] = i, sz[i] = 1;\n}\n\nint find(int x) {\n    return x == f[x] ? x : f[x] = find(f[x]);\n}\n\nvoid merge(int x, int y) {\n    int a = find(x), b = find(y);\n    if (a > b) swap(a, b);\n    if (a != b) f[b] = a, sz[a] += sz[b];\n}\n\nint main() {\n    cin >> n >> m;\n    init();\n    while (m--) {\n        int u, v;\n        cin >> u >> v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    for (int u = 1; u <= n; u++) {\n        cnt.clear();    // cnt[i]\u8bb0\u5f55u\u4e0e\u7b2ci\u4e2a\u96c6\u5408\u6709\u591a\u5c11\u76f8\u8fde\u7684\u8fb9\n        for (auto v : g[u])\n            if (v < u)\n                cnt[find(v)]++;\n        for (auto v : vec) {\n            int p = find(v);\n            if (sz[p] > cnt[p])\n                merge(p, u);\n        }\n        if (find(u) == u) vec.push_back(u);\n    }\n    for (int i = 1; i <= n; i++)\n        if (find(i) == i)\n            ans++;\n    cout << ans - 1 << endl;\n    return 0;\n}\n```",
        "postTime": 1651025204,
        "uid": 291976,
        "name": "quanjun",
        "ccfLevel": 6,
        "title": "CF1242B. 0-1 MST \u9898\u89e3 \u5e76\u67e5\u96c6"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u8f6c\u5316\u9898\u610f\uff1a\u9898\u610f\u7b49\u4ef7\u4e8e\u6c42\u8865\u56fe\u4e0a\u7684\u8fde\u901a\u5757\u4e2a\u6570 $-1$\u3002  \n\u8fd9\u5f88\u597d\u60f3\u5230\uff0c\u56e0\u4e3a\u81ea\u7136\u662f\u60f3\u8ba9 $0$ \u8fb9\u90fd\u7528\u4e0a\uff0c\u8fd9\u6837\u5728\u8865\u56fe\u4e0a\u5c31\u5f62\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u4e24\u4e24\u8fde\u901a\u5757\u4e4b\u95f4\u6709\u4e00\u6761 $1$ \u8fb9\u76f8\u8fde\uff0c\u90a3\u81ea\u7136\u662f\u8fde\u901a\u5757\u4e2a\u6570 $-1$\u3002\n\n\u600e\u4e48\u6c42\u5462\uff1f\n\n\u6700\u66b4\u529b\u7684\u505a\u6cd5\u5f53\u7136\u662f $\\mathcal{O(n^2)}$ \u679a\u4e3e\u4e24\u4e2a\u70b9\u7136\u540e\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\n\n\u7136\u540e\u53d1\u73b0\uff0c\u5982\u679c\u56fa\u5b9a\u4e00\u4e2a\u70b9 $u$\uff0c\u90a3\u53e6\u5916\u4e00\u4e2a\u70b9\u7684\u53ef\u80fd\u6027\u53ea\u6709 $d_u$ \u79cd\uff0c\u5269\u4e0b\u7684\u90fd\u53ef\u4ee5\u76f4\u63a5\u8fde\u3002\n\n\u518d\u5bf9\u8fd9 $d_u$ \u4e2a\u53ef\u80fd\u7684\u70b9\u66b4\u529b\u8003\u8651\uff0c\u590d\u6742\u5ea6\u662f $\\mathcal{O(dn)}$ \u7684\u3002\n\n\u7531\u62bd\u5c49\u539f\u7406\uff0c$d$ \u7684\u6700\u5c0f\u503c\u662f $\\min\\{\\lfloor\\frac {2m}n\\rfloor,n\\}$\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u5747\u503c\u53d6\u7b49\uff0c\u4e0a\u754c\u4e0d\u8d85\u8fc7 $\\sqrt{2m}$\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal{O(n\\sqrt m)}$\u3002\n\n```cpp\nconst int N=1e5+3;\nbool*MS;\nint n,m,b[N],*p_b=b,fa[N],ans;\nstruct wt{int x,y;}a[N];\nbool vis[N];\nstd::vector<int>G[N];\nbool*MT;\nil int get(re int x)\n{\n\tfor(;x^fa[x];x=fa[x]=fa[fa[x]]);\n\treturn x;\n}\nvoid Solve()\n{\n\trd(n),rd(m);\n\tfor(re int i=1;i<=m;++i) rd(a[i].x),rd(a[i].y),G[a[i].x].pb(a[i].y),G[a[i].y].pb(a[i].x);\n\tre int k=1;\n\tfor(re int i=2;i<=n;++i) G[k].size()>G[i].size()&&(k=i);\n\tfor(re int i=1;i<=n;++i) fa[i]=i;\n\tfor(re int i=1;i<=m;++i)\n\t\tif(a[i].x==k||a[i].y==k) *++p_b=a[i].x==k?a[i].y:a[i].x,vis[*p_b]|=1;\n\tfor(re int i=1;i<=n;++i) vis[i]?vis[i]&=0:fa[i]=k;\n\tans=p_b-b;\n\tfor(re int*i=b+1;i<=p_b;++i)\n\t{\n\t\tfor(re int v:G[*i]) vis[v]|=1;\n\t\tfor(re int j=1,x,y;j<=n;++j)\n\t\t{\n\t\t\tif(vis[j]||(x=get(*i))==(y=get(j))) continue;\n\t\t\tfa[x]=y,--ans;\n\t\t}\n\t\tfor(re int v:G[*i]) vis[v]&=0;\n\t}\n\twrt(ans);\n\treturn;\n}\n```\n\n[$\\color{green}{\\checkmark}$](https://codeforces.com/contest/1242/submission/206341369)\u3002",
        "postTime": 1684417910,
        "uid": 359113,
        "name": "elbissoPtImaerD",
        "ccfLevel": 0,
        "title": "CF1242B \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u770b\u5230\u5bf9\u5b8c\u5168\u56fe\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u80fd\u60f3\u5230\u4f7f\u7528 Boruvka \u7b97\u6cd5\u3002\n\n\u6bcf\u6b21\u6269\u5c55\u96c6\u5408\u65f6\uff0c\u5148\u679a\u4e3e\u96c6\u5408\u5185\u7684\u70b9\u7684\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u5e76\u6807\u8bb0\u7ec8\u70b9\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u96c6\u5408\u5185\u6240\u6709\u70b9\u6807\u8bb0\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u4f18\u5148\u9009\u8fd9\u4e2a\u70b9\u3002\n\n\u6bcf\u5c42\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u4e3a $O(n+m)$\uff0c\u603b\u5171\u6709 $\\log n$ \u5c42\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m) \\log n)$\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h> \n#define rep(i, f, t) for(int i(f); i <= t; ++i)\n#define re(i, t) for(int i(1); i <= t; ++i)\n#define per(i, t, f) for(int i(t); i >= f; --i)\n#define pe(i, t) for(int i(t); i >= 1; --i) \n#define nx(i, u) for(int i(head[u]); i; i = e[i].nxt) \ntypedef long long ll;\ntypedef long double lb;\n// #define int long long\nusing namespace std; \n\nconst int N = 1e5 + 5;\nint n, m, u, v;\nint fath[N];\n\nint find (int u) {\n    return (fath[u] == u) ? u : (fath[u] = find(fath[u]));\n}\n\nstruct node {\n    int to, nxt;\n}e[N<<1];\n\nint head[N], cnt;\n\nvoid add (int u, int v) {\n    e[++cnt] = (node){v, head[u]};\n    head[u] = cnt;\n}\n\nvector<int>vec[N];\nint vis[N];\nint f[N], g[N];\nint ans;\n\nvoid solve () {\n    re(i, n) vec[i].clear(), f[i] = i, g[i] = 0;\n    re(i, n) {\n        vec[find(i)].push_back(i);\n    }\n    re(i, n) {\n        int sz = vec[i].size(); \n        if(!sz) continue;\n        if(sz == n) return ;\n        for(int u : vec[i]) { \n            nx(j, u) {\n                int v = e[j].to;\n                ++vis[v];\n            }\n        }\n        int res = -1;\n        re(j, n) {\n            if(find(j) == i) continue;\n            if(vis[j] == sz) continue ;\n            res = find(j);\n            break;\n        }\n        f[i] = res;\n        if(res == -1) {\n            re(j, n) {\n                if(find(j) == i) continue;\n                res = find(j);\n                break;\n            }\n            f[i] = res;\n            g[i] = 1;\n        }\n        for(int u : vec[i]) { \n            nx(j, u) {\n                int v = e[j].to;\n                vis[v] = 0;\n            }\n        }\n    }\n    re(i, n) {  \n        if(find(f[i]) == find(i)) continue;\n        fath[find(i)] = find(f[i]);\n        ans += g[i];\n    } \n    solve();\n}\n\nint main () {\n    scanf(\"%d %d\", &n, &m);\n    re(i, m) {\n        scanf(\"%d %d\", &u, &v);\n        add(u, v), add(v, u);\n    }\n    re(i, n) fath[i] = i;\n    solve();\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1684394876,
        "uid": 450290,
        "name": "MurataHimeko",
        "ccfLevel": 0,
        "title": "CF1242B"
    },
    {
        "content": "\u5148 %wcr\uff0c\u53cd\u6b63\u6211\u662f\u60f3\u4e0d\u5230\u8fd9\u4e48\u597d\u7684\u505a\u6cd5\u3002\n\n\u770b\u9898\u89e3\u533a\u6ca1\u6709\u6211\u7684\u505a\u6cd5\uff0c\u5c31\u6765\u4e00\u53d1\u3002\n\n\u9898\u89e3\uff1a\n\n\u8003\u8651\u666e\u91cc\u59c6\u7b97\u6cd5\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u5c06\u8ddd\u79bb\u5df2\u9009\u70b9\u6700\u8fd1\u7684\u70b9\u52a0\u5165\u5df2\u9009\u96c6\u5408\uff0c\u5e76\u52a0\u4e0a\u8ddd\u79bb\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5728\u666e\u91cc\u59c6\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5f53\u524d\u70b9 $u$ \u66f4\u65b0\u5230\u67d0\u4e2a\u672a\u52a0\u5165\u96c6\u5408\u7684\u70b9 $v$\uff0c\u4e14 $u,v$ \u4e4b\u95f4\u7684\u8fb9\u6743\u4e3a 0\uff0c\u90a3\u4e48 $v$ \u4e00\u5b9a\u53ef\u4ee5\u4ee5 0 \u7684\u8fb9\u6743\u76f4\u63a5\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u666e\u91cc\u59c6\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u4e00\u4e2a `std::set`\uff0c\u8868\u793a\u5f53\u524d\u8fb9\u6743\u4e3a\u4e0e\u5df2\u9009\u70b9\u7684\u8ddd\u79bb\u4e3a 1 \u7684\u96c6\u5408\uff0c\u8bb0\u4e3a $S$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u961f\u9996\u7684\u70b9 $u$ \u8bb0\u5f55\u4e0e\u5b83\u8ddd\u79bb\u4e3a 1 \u4e14\u672a\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u5e76\u628a $S$ \u4e2d\u672a\u88ab\u8bb0\u5f55\uff08\u5373\u8ddd\u79bb\u4e3a 0\uff09\u7684\u70b9\u76f4\u63a5\u5165\u961f\uff0c\u5e76\u4ece $S$ \u4e2d\u5220\u9664\u3002\n\n\u5177\u4f53\u7684\uff0c\u53ef\u4ee5\u641e\u4e00\u4e2a `std::set` $T$ \u8bb0\u5f55\u4e0e\u5b83\u8ddd\u79bb\u4e3a 1 \u4e14\u672a\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u5728 $S$ \u4e2d\u5220\u9664 $T$ \u4e2d\u6240\u6709\u5143\u7d20\uff0c\u5e76\u628a\u5269\u4f59\u5143\u7d20\u4ee5 0 \u7684\u8fb9\u6743\u5165\u961f\uff0c\u6700\u540e\u628a $S$ \u8d4b\u4e3a $T$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\nstruct N{\n\tint s,id;\n\tinline bool operator<(const N&U)const{\n\t\treturn s>U.s;\n\t}\n};\npriority_queue<N>q;//\u5806\u4f18\u666e\u91cc\u59c6\uff0c\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u5806\nint n,m,cnt,hd[100005],ans;\nstruct E{\n\tint nxt,to;\n}e[200005];\ninline void add(int u,int v){\n\te[++cnt]={hd[u],v};\n\thd[u]=cnt;\n}\nint dis[100005];bool vis[100005];\nset<int>s,t;//\u5bf9\u5e94\u4e0a\u6587 S,T\nvoid prim(){\n\t//\u666e\u91cc\u59c6\u90fd\u4f1a\u5427\u3002\n\t//\u5148\u9ed8\u8ba4 1 \u53f7\u70b9\u5df2\u7ecf\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5e76\u628a\u4e0e 1 \u53f7\u70b9\u8ddd\u79bb\u4e3a 1 \u7684\u70b9\u653e\u5165\u96c6\u5408\n\tfor(int i=hd[1];i;i=e[i].nxt)dis[e[i].to]=1,s.insert(e[i].to);\n\t//\u628a\u521d\u59cb\u70b9\u5bf9\u5e94\u8fb9\u6743\u653e\u5165\u96c6\u5408\n\tfor(int i=1;i<=n;i++)q.push({dis[i],i});\n\twhile(!q.empty()){//\u57fa\u672c\u666e\u91cc\u59c6\u7b97\u6cd5\u4e0d\u8bb2\n\t\tint u=q.top().id;q.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;ans+=dis[u];\n\t\tt=set<int>();\n\t\tfor(int i=hd[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;\n\t\t\tif(vis[v])continue;\n\t\t\tt.insert(v);\n\t\t}\n\t\t//\u6309\u4e0a\u6587\u64cd\u4f5c\u628a\u8ddd\u79bb\u4e3a 0 \u7684\u653e\u5165\u96c6\u5408\n\t\tfor(auto i:t)s.erase(i);\n\t\tfor(auto i:s)q.push({0,i}),dis[i]=0;\n\t\ts=t;\n\t}\n}\n```\n\n\u590d\u6742\u5ea6\uff1a\u5728\u6bcf\u6761 1 \u8fb9\u4e0a\u90fd\u4f1a\u6709 `insert`\uff0c\u5806\u7684 `push` \u6b21\u6570\u662f $O(n)$ \u7ea7\u522b\u7684\uff0c\u603b\u590d\u6742\u5ea6\u662f $O(m\\log n)$\u3002",
        "postTime": 1646362702,
        "uid": 185864,
        "name": "TOBapNw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010CF1242B 0-1 MST\u3011"
    },
    {
        "content": "\u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u590d\u6742\u5ea6\u53ef\u4ee5\u662f $O(n+m)$\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u5b9a\u4e49\u6743\u503c\u4e3a $0$ \u7684\u8fb9\u4e3a $0-$\u8fb9\uff0c\u6743\u503c\u4e3a $1$ \u7684\u8fb9\u4e3a $1-$\u8fb9\u3002\n\n\u539f\u9898\u53ef\u8f6c\u6362\u6210\u6c42 $0-$\u8fb9\u6784\u6210\u7684\u56fe\u7684\u8fde\u901a\u5206\u91cf\u4e2a\u6570$-1$\u3002\n\n\u8003\u5bdf $1-$\u8fb9\u6700\u5c11\u7684\u70b9 $v$\uff0c\u7531\u4e8e\u300c**\u6700\u5c0f\u503c\u4e0d\u4f1a\u8d85\u8fc7\u5e73\u5747\u503c**\u300d\uff0c$v$ \u7684 $1-$\u8fb9\u6570\u91cf$\\leq \\frac{2m}{n}$\u3002\n\n\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5f53 $n=1000,\\ m=10000$ \u65f6\uff0c\u70b9 $v$ **\u81f3\u591a**\u6709 $20$ \u6761 $1-$\u8fb9\uff0c\u5373\u81f3\u5c11\u6709 $980$ \u6761 $0-$\u8fb9\u3002\u8fd9\u610f\u5473\u7740\u4ec5\u4ec5\u8003\u5bdf\u70b9 $v$\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e86\u4e00\u4e2a\u5927\u5c0f\u81f3\u5c11\u4e3a $980$ \u7684\u8fde\u901a\u5206\u91cf\u3002\n\n\u5bf9\u4e8e\u5269\u4f59\u7684 $20$ \u4e2a\u70b9\uff0c\u66b4\u529b\u904d\u5386\u6c42\u53d6\u8be5\u70b9\u6240\u5c5e\u7684\u8054\u901a\u5206\u91cf\u5373\u53ef\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\u7684\u5e76\u67e5\u96c6\uff08\u590d\u6742\u5ea6\u89c6\u4f5c\u5e38\u6570\uff09\uff0c\u603b\u7684\u590d\u6742\u5ea6\u4e3a\u6784\u9020\u70b9 $v$ \u7684\u8054\u901a\u5206\u91cf\u7684\u5f00\u9500 $O(n)$\uff0c\u52a0\u4e0a\u904d\u5386\u5269\u4f59\u70b9\u7684\u5f00\u9500 $O(\\frac{2m}{n}*n)$\uff0c\u5373 $O(n+m)$\u3002\n\n\u9644\u4e0a AC \u4ee3\u7801\uff08Golang\uff09\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t. \"fmt\"\n\t\"os\"\n)\n\nvar fa []int\n\nfunc initFa(n int) {\n\tfa = make([]int, n)\n\tfor i := range fa {\n\t\tfa[i] = i\n\t}\n}\nfunc find(x int) int { // \u7b80\u5355\u8d77\u89c1\uff0c\u5b9e\u73b0\u4ec5\u7528\u8def\u5f84\u538b\u7f29\u4f18\u5316\n\tif fa[x] != x {\n\t\tfa[x] = find(fa[x])\n\t}\n\treturn fa[x]\n}\nfunc merge(from, to int) { fa[find(from)] = find(to) }\nfunc same(x, y int) bool { return find(x) == find(y) }\n\nfunc main() {\n\tin := bufio.NewReader(os.Stdin)\n\n\tvar n, m int\n\tFscan(in, &n, &m)\n\tg := make([][]int, n) // 1-\u8fb9\n\tfor ; m > 0; m-- {\n\t\tvar v, w int\n\t\tFscan(in, &v, &w)\n\t\tv--\n\t\tw--\n\t\tg[v] = append(g[v], w)\n\t\tg[w] = append(g[w], v)\n\t}\n\n\t// \u5bfb\u627e 0-\u8fb9\u6700\u591a\u7684\u70b9 maxDeg0V\n\tmaxDeg0, maxDeg0V := 0, 0\n\tfor v, edges := range g {\n\t\tif deg0 := n - 1 - len(edges); deg0 > maxDeg0 {\n\t\t\tmaxDeg0 = deg0\n\t\t\tmaxDeg0V = v\n\t\t}\n\t}\n\n\t// \u82e5\u56fe\u4e2d\u6ca1\u6709 0-\u8fb9\uff0c\u7b54\u6848\u5c31\u662f\u70b9\u7684\u4e2a\u6570-1\n\tif maxDeg0 == 0 {\n\t\tPrint(n - 1)\n\t\treturn\n\t}\n\n\tmergeEdge0 := func(v int, edges []int) {\n\t\t// \u5c06\u4e0e\u70b9 v \u4ee5 0-\u8fb9\u76f8\u8fde\u7684\u70b9\uff0c\u5408\u5e76\u5230\u70b9 v \u6240\u5c5e\u7684\u8fde\u901a\u5206\u91cf\u4e0a\n\t\tvs := map[int]bool{v: true}\n\t\tfor _, w := range edges {\n\t\t\tvs[w] = true\n\t\t}\n\t\tfor i := 0; i < n; i++ {\n\t\t\tif !vs[i] { // i-v \u662f 0-\u8fb9\n\t\t\t\tmerge(i, v)\n\t\t\t}\n\t\t}\n\t}\n\tinitFa(n)\n\tmergeEdge0(maxDeg0V, g[maxDeg0V])\n\tfor v, edges := range g {\n\t\tif !same(v, maxDeg0V) {\n\t\t\t// \u66b4\u529b\u904d\u5386\u5269\u4f59\u7684\u70b9\n\t\t\tmergeEdge0(v, edges)\n\t\t}\n\t}\n\n\t// \u8ba1\u7b97\u8054\u901a\u5206\u91cf\u4e2a\u6570-1\n\tans := -1\n\tfor i, faI := range fa {\n\t\tif i == faI {\n\t\t\tans++\n\t\t}\n\t}\n\tPrint(ans)\n}\n```\n",
        "postTime": 1574476569,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1242B \u30100-1 MST\u3011"
    },
    {
        "content": "# CF1243D - 0-1 MST\n- https://www.luogu.com.cn/problem/CF1242B\n- \u6839\u53f7\u601d\u60f3\u66b4\u529b\n\n## \u9898\u610f\n\u7ed9\u51fa\u4e00\u5f20\u6709 $n(1\\leq n\\leq 10^5)$ \u4e2a\u70b9\u7684\u5b8c\u5168\u56fe\uff0c\u8fb9\u6743\u5747\u4e3a $0$\u3002\u518d\u7ed9\u51fa $m(0\\leq m\\leq \\min(\\frac{n\\cdot (n-1)}{2},10^5))$ \u6761\u8fb9\uff0c\u73b0\u6807\u8bb0\u8fd9 $m$ \u6761\u8fb9\u7684\u8fb9\u6743\u4e3a $1$\u3002\n\n\u95ee\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u52a0\u548c\u3002\n\n## \u601d\u8def\n\u5b8c\u5168\u56fe\u662f\u7a20\u5bc6\u56fe\u3002\u5f53 $n$ \u8f83\u5927\u65f6\uff0c\u7ed9\u51fa\u7684\u8fb9\u7684\u6570\u91cf\u662f\u76f8\u5bf9\u4e8e\u603b\u8fb9\u6570\u662f\u5f88\u5c11\u7684\u3002\n\n\u6700\u7ec8\u56fe\u7684\u5f62\u6001\u662f $x$ \u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f $x-1$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u800c\u8a00\uff0c\u5982\u679c\u5c06\u5176\u4e0e\u5176\u4ed6\u70b9\u5b8c\u5168\u9694\u79bb\uff0c\u5355\u72ec\u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u9700\u8981\u7684\u8fb9\u6570\u662f $n-1$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4e00\u79cd\u6781\u7aef\u60c5\u51b5\uff0c\u5f53 $n=\\sqrt{m}$ \u65f6\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5f62\u6210\u4e86\u5355\u72ec\u7684\u8fde\u901a\u5757\uff0c\u6b64\u65f6\u7684\u8fde\u901a\u5757\u6570\u91cf\u6700\u591a\uff0c\u6781\u7aef\u60c5\u51b5\u4e0b\u8fde\u901a\u5757\u6570\u91cf\u4e0d\u8d85\u8fc7 $320$ \u4e2a\u3002\n\n\u66b4\u529b\u641c\u7d22\u5373\u53ef\u3002\n\n## \u5b9e\u73b0\n\n\u7528 $\\tt std::set$ \u7ef4\u62a4\u7ed9\u51fa\u7684\u8fb9\u3002\n\n\u7528 $\\tt std::set$ \u7ef4\u62a4\u5269\u4f59\u6ca1\u6709\u5bfb\u627e\u8fc7\u7684\u70b9\u3002\n\n\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u679a\u4e3e\u4e0e\u5f53\u524d\u70b9 $u$ \u76f4\u63a5\u76f8\u8fde\u7684\u70b9 $v$\uff0c\u5e76\u4e14\u4fdd\u8bc1\u8fb9 $u\\leftrightarrow v$ \u4e0d\u5728\u7ed9\u51fa\u7684\u8fb9\u96c6\u4e2d\u3002\n\n\u4ece\u5269\u4f59\u6ca1\u6709\u5bfb\u627e\u8fc7\u7684\u70b9\u96c6\u4e2d\u5220\u53bb $v$\uff0c\u63a5\u7740\u641c\u7d22 $v$\u3002",
        "postTime": 1683538795,
        "uid": 36285,
        "name": "\u6c27\u5c11Kevin",
        "ccfLevel": 4,
        "title": "CF1243D-0-1 MST,\u6839\u53f7\u601d\u60f3\u66b4\u529b"
    },
    {
        "content": "## \u5b98\u65b9\u9898\u89e3\u4e2d\u7684DSU\uff08\u5e76\u67e5\u96c6\uff09\u505a\u6cd5\n\n\u770b\u5230\u5f88\u591a\u4eba\u90fd\u7528\u4e86\u4f18\u5316\u7684\u66b4\u529b\u641c\u7d22\u53bbAC\u8fd9\u9053\u9898\u800c\u9898\u89e3\u4e2d\u6ca1\u6709\u5b98\u65b9\u9898\u89e3\u7684DSU\uff08\u4e5f\u5c31\u662f\u5e76\u67e5\u96c6\uff0cDSU\u9ad8\u5927\u4e0a\uff09\uff0c\u6240\u4ee5\u6211\u5c31\u5199\u4e86\u8fd9\u6837\u4e00\u7bc7~~\u5f88\u70c2~~\u7684\u9898\u89e3\u3002\u3002\n\n\u9996\u5148\u76f4\u63a5\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u662f\u5fc5\u7136\u8d85\u65f6\u7684\uff0c\u5b8c\u5168\u56fe\u80af\u5b9a\u4e0d\u4f1a\u4f7f\u7528$kruskal$\u7b97\u6cd5\u800c\u4f1a\u4f7f\u7528$prim$\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(|E|log|V|)$\uff0c\u800c$|E|$\u662f$2^{10^5}$\u2026\u2026\u4e0d\u7528\u60f3\u4e0b\u53bb\u4e86\uff0c\u80af\u5b9a\u8d85\u65f6\uff0c\u90a3\u4e48\u5c31\u8003\u8651\u5176\u5b83\u505a\u6cd5\n\n\u9996\u5148\u8003\u8651\u65e2\u7136\u662f\u5b8c\u5168\u56fe\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u8fb9\u6743\u4e3a$1$\uff0c\u5176\u5b83\u8fb9\u6743\u4e3a$0$\uff0c\u90a3\u4e48\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\u5c31\u5fc5\u7136\u662f\u4f18\u5148\u9009$0$\u7684\u8fb9\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u8bdd\u5982\u679c\u6709\u4e24\u4e2a\u70b9\uff0c\u5982\u679c\u4e4b\u95f4\u53ea\u6709$1$\u8fb9\uff0c\u90a3\u4e48\u5c31\u81f3\u5c11\u8981\u7528$1$\u7684\u8fb9\u6743\u6765\u4f7f\u4ed6\u4eec\u76f8\u8fde\uff0c\u800c\u62d3\u5c55\u5230\u4e24\u4e2a\u4e0d\u8003\u8651$1$\u8fb9\u60c5\u51b5\u4e0b\u7684\u8054\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u8fde\u901a\u4e00\u6761$1$\u8fb9\u4fbf\u53ef\u5c06\u8fd9\u4e24\u4e2a\u8054\u901a\u5206\u91cf\u8fde\u5728\u4e00\u8d77\uff0c\u53d8\u4e3a\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u3002\n\n\u6240\u4ee5\u8fd9\u5c31\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u6c42\u8054\u901a\u5206\u91cf\u6570\u91cf\u7684\u9898\u76ee\uff0c\u65e2\u7136\u662f\u8054\u901a\u5206\u91cf\u7684\u6570\u91cf\uff0c\u90a3\u81ea\u7136\u5c31\u8981\u8003\u8651\u5230\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u5904\u7406\uff0c\u5982\u679c\u4e24\u4e2a\u8054\u901a\u5206\u91cf\u4e4b\u95f4\u6709$0$\u8fb9\uff0c\u90a3\u4e48\u5c31\u5bf9\u8fd9\u4e24\u4e2a\u8054\u901a\u5206\u91cf\u70b9\u96c6\u6267\u884c$merge$\u64cd\u4f5c\uff0c\u6240\u4ee5\u5199\u51fa\u5982\u4e0b\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<set>\n#include<map>\nusing namespace std;\n \nconst int maxn = 100010;\nint fa[maxn];\nbool vis[maxn];\nmap<int, bool>isfa;\n \nint find(int x)\n{\n\tif (fa[x] == x) return x;\n\tfa[x] = find(fa[x]);\n\treturn fa[x];\n}\n \nvoid merge(int a, int b)\n{\n\tfa[find(a)] = find(b);\n}\n \nbool check(int a, int b)\n{\n\treturn find(a) == find(b);\n}\n \nset<int>e[maxn];\n \nint main()\n{\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) fa[i] = i;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\te[a].insert(b);\n\t\te[b].insert(a);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (vis[i]) continue;\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tif (e[i].count(j) || check(i, j)) continue;\n\t\t\tmerge(i, j);\n\t\t\tvis[j] = true;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tisfa[find(i)] = true;\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (isfa[i]) ans++;\n\t}\n\tcout << ans - 1 << endl;\n}\n```\n\n\u4f46\u662f\u8fd9\u4efd\u4ee3\u7801\u5374\u662f~~\u663e\u7136~~\u4e0d\u80fd$AC$\u7684\uff0c\u4e00\u5b9a\u4f1a$WA$\u5728\u7b2c$13$\u4e2a\u6d4b\u8bd5\u70b9\u4e0a\uff0c\u8003\u8651\u4e00\u4e0b\u539f\u56e0\uff0c\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u4e00\u4e2a\u56fe\uff08\u56fe\u4e2d\u7684\u8fb9\u4e3a$0$\u8fb9)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4fi7tk81.png)\n\n\u90a3\u4e48\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u5c31\u4f1a\u51fa\u73b0\u3002\u3002$6$\u8bbf\u95ee\u8fc7\u4e86\u3002\u3002$1,2,3,6$\u6784\u6210\u7684\u96c6\u5408\u548c$4,5$\u6784\u6210\u7684\u8fde\u4e0d\u4e0a\u4e86\u3002\u3002\u3002\u7136\u540e\u5c31\u8f93\u51fa\u4e86\u4e00\u4e2a$1$\uff0c\u7136\u800c\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u662f$0$\uff0c\u800c\u4e0d\u52a0$vis$\u5224\u65ad\uff08\u51fa\u73b0\u6b63\u4e8c\u516b\u7ecf\u7684$n^2$\uff09\u53c8\u4f1a$TLE$\u3002\u3002\u3002\n\n\u6240\u4ee5\u8003\u8651\u987a\u5e8f\u626b\u63cf\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ea\u626b\u4e00\u904d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u8ba1\u7b97\u5176\u4e0e\u6bcf\u4e2a\u5df2\u5b58\u5728\u96c6\u5408\u4e2d\u7684\u70b9\u7684$1$\u8fb9\u6709\u591a\u5c11\u6761\uff0c\u5982\u679c\u8fd9\u4e2a$1$\u8fb9\u6570\u91cf\u5c0f\u4e8e\u8fd9\u4e2a\u5df2\u5b58\u5728\u96c6\u5408\u4e2d\u7684\u70b9\u6570\uff0c\u90a3\u5c31\u8bf4\u660e\u5b58\u5728\u76f8\u8fde\u7684$0$\u8fb9\uff08\u56e0\u4e3a\u6839\u636e\u9898\u610f\u6ca1\u6709\u91cd\u8fb9\u5b58\u5728\uff09\uff0c\u90a3\u5c31\u53ef\u4ee5\u52a0\u5165\u8fd9\u4e2a\u96c6\u5408\uff0c\u4ece\u800c\u5c06\u8054\u901a\u5206\u91cf\u6570\u91cf\u6b63\u786e\u7684\u5728$O(m+nlogn)$\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42\u51fa\uff08$m$\u662f\u8bfb\u53d6\u6240\u6709\u8fb9\u548c\u904d\u5386\u6240\u6709$1$\u8fb9\u7684\u65f6\u95f4\u590d\u6742\u5ea6$nlogn$\u662f\u987a\u5e8f\u904d\u5386$n$\u4e2a\u8282\u70b9\u7684\u5faa\u73af\u4e2d\u4f7f\u7528\u5e76\u67e5\u96c6\u64cd\u4f5c\uff08\u5e76\u67e5\u96c6\u81ea\u7136$logn$\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n\n$AC$\u4ee3\u7801\uff1a\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(m+nlogn)$\n\n\u641c\u7d22\u505a\u6cd5\uff08$bfs$\u548c$dfs$\u90fd\u4e00\u6837\uff09\u4e5f\u5df2\u5305\u542b\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\n\n\u987a\u5e26\u8bf4\u660e\u4e00\u4e0bfor(auto it:(vector/set/map))\u8fd9\u79cd\u5199\u6cd5\uff0c\u76f8\u5f53\u4e8e\u904d\u5386\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c**\u6ce8\u610fit\u662f\u5143\u7d20\u800c\u975e\u8fed\u4ee3\u5668**\n\n```cpp\n#include<iostream>\n#include<set>\n#include<map>\n#include<queue>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn = 100010;\nint n, m;\nset<int>e[maxn];\t//\u50a8\u5b581\u8fb9\nset<int>node;\t//\u641c\u7d22\u505a\u6cd5\u7528\u7684set\nint fa[maxn];\t//\u5e76\u67e5\u96c6fa\u6570\u7ec4\nint sz[maxn];\t//sz[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u8282\u70b9\u7684\u96c6\u5408\u4e2d\u6709\u591a\u5c11\u4e2a\u70b9\uff08\u5982\u679ci\u4e0d\u662f\u6839\u8282\u70b9\u90a3\u4e48sz[i]\u5c06\u4e0d\u518d\u6709\u610f\u4e49\uff09\n\nint find(int x)\t//\u5df2\u7ecf\u8fd0\u7528\u8def\u5f84\u538b\u7f29\n{\n\tif (fa[x] == x) return x;\n\tfa[x] = find(fa[x]);\n\treturn fa[x];\n}\n\nvoid merge(int a, int b)\n{\n\t//\u5408\u5e76\uff0c\u5e76\u8ba1\u7b97\u51fa\u5408\u5e76\u540e\u7684\u96c6\u5408\u5305\u542b\u7684\u8282\u70b9\u6570\u91cf\n\tint fx = find(a);\n\tint fy = find(b);\n\tfa[fx] = find(fy);\n\tsz[fy] += sz[fx];\n}\n\nbool check(int a, int b)\n{\n\treturn find(a) == find(b);\n}\n\nvoid dfs(int x)\n{\n\tset<int>reach;\n\tfor (auto it : node)\n\t{\n\t\tif (e[x].find(it) == e[x].end())\n\t\t{\n\t\t\treach.insert(it);\n\t\t}\n\t}\n\tfor (auto it : reach)\n\t{\n\t\tnode.erase(it);\n\t}\n\tfor (auto it : reach)\n\t{\n\t\tdfs(it);\n\t}\n}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tfa[i] = i;\n\t\tnode.insert(i);\n\t}\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\te[a].insert(b);\n\t\te[b].insert(a);\n\t}\n\t/*\n\t//dfs\u505a\u6cd5\uff0cbfs\u4e5f\u5dee\u4e0d\u591a\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (node.find(i) != node.end())\n\t\t{\n\t\t\tdfs(i);\n\t\t\tans++;\n\t\t}\n\t}\n\t*/\n\t//\u6b63\u89e3\uff1a\u5e76\u67e5\u96c6\n\tvector<int>g;\t//\u5e76\u67e5\u96c6\u6839\u8282\u70b9\u96c6\u5408\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsz[i] = 1;\t//\u521d\u59cb\u5316\u5f53\u524d\u70b9\u6240\u5728\u96c6\u5408\u7684\u70b9\u6570\u4e3a1\n\t\tmap<int, int>cnt;\t//\u5f53\u524d\u70b9\u4e0e\u5df2\u6709\u7684\u6bcf\u4e2a\u96c6\u5408\u76840\u8fb9\u6570\u91cf\n\t\tfor (auto it : e[i])\n\t\t{\n\t\t\tif (it >= i) continue;\t//\u5904\u7406\u524di\u4e2a\u8282\u70b9\uff08\u540e\u9762\u7684\u8fd8\u6ca1\u904d\u5386\u5230\uff0c\u65e0\u9700\u7edf\u8ba1\uff0c\u5c0f\u4f18\u5316\uff0c\u7edf\u8ba1\u4e86\u4e5f\u4e0d\u5f71\u54cd\u7ed3\u679c\uff09\n\t\t\tcnt[find(it)]++;\t//\u7edf\u8ba1\u4e0eit\u6240\u5728\u7684\u96c6\u5408\u6709\u51e0\u67611\u8fb9\u76f8\u8fde\n\t\t}\n\t\tfor (auto it : g)\n\t\t{\n\t\t\tint t = find(it);\t//\u53ef\u80fd\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u4e0d\u662f\u6839\u8282\u70b9\uff0c\u88ab\u5408\u5e76\u4e86\n\t\t\tif (check(i, t)) continue;\t//i\u5df2\u7ecf\u5728it\u6240\u5728\u7684\u96c6\u5408\u4e2d\n\t\t\tif (sz[t] > cnt[t])\t//\u5982\u679ci\u4e0eit\u6240\u5728\u96c6\u5408\u76f8\u8fde\u76840\u8fb9\u6570\u91cf\u5c0f\u4e8eit\u6240\u5728\u96c6\u5408\u7684\u8282\u70b9\u6570\u91cf\n\t\t\t{\n\t\t\t\tmerge(i, t);\t//\u5408\u5e76\uff0c\u5c06i\u52a0\u5165t\u7684\u96c6\u5408\n\t\t\t}\n\t\t}\n\t\tint fi = find(i);\n\t\tif (fi == i) g.push_back(fi);\t//\u5982\u679ci\u81ea\u5df1\u662f\u6839\u8282\u70b9\uff08\u5373\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5df2\u5b58\u5728\u96c6\u5408\uff09\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (fa[i] == i) ans++;\t//\u7edf\u8ba1\u6839\u8282\u70b9\u6570\u91cf\uff08\u96c6\u5408\u6570\u91cf\uff09\n\t}\n\tcout << ans - 1;\n\treturn 0;\n}\n```",
        "postTime": 1573317090,
        "uid": 205228,
        "name": "thjkhdf12",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1242B \u30100-1 MST\u3011"
    }
]