[
    {
        "content": "**\u54c7\uff0c\u8fd9\u9053\u9898\u771f\u662f\u4ee4\u4eba\u667a\u7184\uff0c\u6211\u4eec\u8981\u76f8\u4fe1\u6811\u72b6\u6570\u7ec4\u7684\u590d\u6742\u5ea6\u662f\u51e0\u4e4eO(1)\u7684QAQ**\n\n**\u5927\u6982\u7684\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u5148\u4ece\u6bcf\u4e2a\u6570\u90fd\u4e0d\u8d85\u8fc7\u4e00\u4e07\u5165\u624b\uff0c\u6bcf\u6b21\u64cd\u4f5c\u52a0\u64cd\u4f5c\u6700\u5c11\u52a0\u4e00\uff0c\u6240\u4ee5\u6700\u591a\u4e00\u4e07\u6b21\u52a0\u64cd\u4f5c\uff0c\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\uff0c\u4e3b\u8981\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u7206\u679a\u679a\u4e3e\u51fa\u6bcf\u4e00\u4e2a\u5e78\u8fd0\u6570\uff0c\u7136\u540eO(1)\u8be2\u95ee\u3002**\n\n**\u9664\u6b64\u4e4b\u5916\u5c31\u662f\u628a\u533a\u95f4\u4fee\u6539\u6362\u6210\u6811\u72b6\u6570\u7ec4\u578b\u7684\u5355\u70b9\u4fee\u6539\uff0c\u7136\u540e\u5c31\u83ab\u540d\u5176\u5999\u7684AC\u4e86\u2026\u2026**\n\n**\u6211\u4e5f\u5f88\u7edd\u671b\u554a\uff0c\u8c01\u77e5\u9053\u8fd9\u9053\u9898\u7684\u6807\u7b97\u5230\u5e95\u662f\u4ec0\u4e48\u554aQAQ**\n\n**\u4ee3\u7801\u5982\u4e0b**\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint a[100010],f[100010],sum[100010],n,m;\n\nvoid get(int now)\n{\n\tif(now*10+7<=10000)\n\t{\n\t\tf[now*10+7]=1;\n\t\tget(now*10+7);\n\t}\n\tif(now*10+4<=10000)\n\t{\n\t\tf[now*10+4]=1;\n\t\tget(now*10+4);\n\t}\n}\n\nint lowbit(int x)\n{\n\treturn (-x)&x;\n}\n\nvoid add(int i,int val)\n{\n\twhile(i<=n)\n\t{\n\t\tsum[i]+=val;\n\t\ti+=lowbit(i);\n\t}\n}\n\nint count(int i)\n{\n\tint ans=0;\n\twhile(i>0)\n\t{\n\t\tans+=sum[i];\n\t\ti-=lowbit(i);\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tget(0);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(f[a[i]])\n\t\t{\n\t\t\tadd(i,1);\n\t\t}\n\t}\n\tchar c[10];\n\tint l,r,val;\n\twhile(m--)\n\t{\n\t\tscanf(\"\\n%s\",c);\n\t\tif(c[0]=='c')\n\t\t{\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tprintf(\"%d\\n\",count(r)-count(l-1));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&l,&r,&val);\n\t\t\tfor(int i=l;i<=r;i++)\n\t\t\t{\n\t\t\t\tif(f[a[i]])\n\t\t\t\t{\n\t\t\t\t\tadd(i,-1);\n\t\t\t\t}\n\t\t\t\ta[i]+=val;\n\t\t\t\tif(f[a[i]])\n\t\t\t\t{\n\t\t\t\t\tadd(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1525177795,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF121E \u3010Lucky Array\u3011"
    },
    {
        "content": "https://blog.csdn.net/elijahqi/article/details/80993829\nhttp://www.elijahqi.win/archives/1838\n\n\u849f\u84bb\u6211\u7684\u505a\u6cd5\u5e94\u8be5\u662f\u4e00\u4e2a\u590d\u6742\u5ea6\u6709\u4fdd\u8bc1\u7684\u505a\u6cd5\n\u9898\u610f \u8981\u6c42\u6211\u4eec\u6c42\u4e00\u6bb5\u533a\u95f4\u5185 \u5e78\u8fd0\u6570\u5b57\u6709\u591a\u5c11\u4e2a \u5bf9\u4e8e\u5e78\u8fd0\u6570\u5b57\u7684\u5b9a\u4e49\u662f\uff1a\u53ea\u80fd\u5305\u542b\u5341\u8fdb\u5236\u4e0b\u76844&7\u800c\u4e14\u9898\u76ee\u4fdd\u8bc1\u8fd9\u4e2a\u4ed6\u52a0\u7684\u6570\u6700\u7ec8\u4e0d\u4f1a\u8d85\u8fc71e4\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8fd9\u9898\u662f\u5426\u548c\u6709\u4e00\u4e2a\u5f00\u6839\u53f7\u7684\u90a3\u9898\u76f8\u4f3c\u5462 \u5927\u6982leoly\u8bf4\u5f88\u50cf\u5462 \u6240\u4ee5\u505a\u6cd5\u5c31\u662f \u6211\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u70b9\u6211\u53bb\u50a8\u5b58d[i]\u8868\u793a\u6211\u7684\u503c\u5230\u8ddd\u79bb\u6211\u6700\u8fd1\u7684\u90a3\u4e2a\u5e78\u8fd0\u6570\u5b57\u7684\u5dee\u662f\u591a\u5c11 \u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u8fd9\u4e9b\u503c\u7684\u6700\u5c0f\u503c \u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u6700\u5c0f\u503c\u6700\u65e9\u51fa\u73b0\u5728\u54ea\u91cc \u518d\u7ef4\u62a4\u4e00\u4e0b\u6211\u6700\u5c0f\u503c\u4e00\u5171\u6709\u51e0\u4e2a \u7136\u540e\u4fee\u6539\u7684\u65f6\u5019\u6211\u76f8\u5f53\u4e8e\u662f\u533a\u95f4\u51cf\u6cd5 \u7136\u540e\u5982\u679c\u8fd9\u4e2a\u6574\u4e2a\u6240\u67091~n\u4e2d\u51fa\u73b0\u4e86\u8d1f\u6570 \u90a3\u4e48\u6211\u5c31\u5b9a\u4f4d\u5230\u7b2c\u4e00\u4e2a\u8d1f\u6570\u51fa\u73b0\u5728\u54ea\u91cc\u628a\u4ed6\u6539\u6210\u8ddd\u79bb\u4e0b\u4e00\u4e2a\u5e78\u8fd0\u6570\u5b57\u7684\u5927\u5c0f \u7136\u540e\u91cd\u65b0\u66f4\u65b0\u4e0a\u53bb \u6700\u540e\u76f4\u5230\u62111~n\u4e2d\u4e0d\u518d\u6709<0\u7684\u6570\u51fa\u73b0\u5373\u53ef \u8be2\u95ee\u7684\u65f6\u5019\u53ea\u9700\u8981\u8be2\u95ee\u6211\u6700\u5c0f\u503c\u4e3a0\u7684\u6570\u6709\u591a\u5c11\u4e2a\u5373\u53ef\n```\n#include<queue> \n#include<cstdio>\n#include<algorithm>\n#define N 110000\n#define inf 0x3f3f3f3f\n#define pa pair<int,int>\nusing namespace std;\ninline int read(){\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=getchar();}\n\treturn x;\n}\nstruct node{\n\tint left,right,min,mp,mn,v,lazy;\n}tree[N<<2];\nint mp[]={0,4,7,44,47,74,77,444,447,474,744,477,747,774,777,4444,4447,4474,4744,7444,4477,4747,7447,4774,7474,7744,4777,7477,7747,7774,7777,999999999};\nint n,m,a[N],num,root;char s[30];\ninline void update(int x){\n\t int l=tree[x].left,r=tree[x].right;\n\t if (tree[l].min==tree[r].min){\n\t \ttree[x].mn=tree[l].mn+tree[r].mn;\n\t \ttree[x].min=tree[l].min;tree[x].mp=min(tree[l].mp,tree[r].mp);\n\t }\n\t if (tree[l].min<tree[r].min){\n\t \ttree[x].min=tree[l].min;tree[x].mn=tree[l].mn;tree[x].mp=tree[l].mp;\n\t }\n\t if (tree[r].min<tree[l].min){\n\t \ttree[x].min=tree[r].min;tree[x].mn=tree[r].mn;tree[x].mp=tree[r].mp;\n\t }\n}\ninline void pushdown(int x){\n\tif (!tree[x].lazy) return;\n\tint l=tree[x].left,r=tree[x].right;\n\ttree[l].lazy+=tree[x].lazy;tree[r].lazy+=tree[x].lazy;\n\ttree[l].min-=tree[x].lazy;tree[r].min-=tree[x].lazy;\n\ttree[x].lazy=0;\n}\nvoid build(int &x,int l,int r){\n\tx=++num;\n\tif (l==r){\n\t\tint pos=lower_bound(mp+1,mp+32,a[l])-mp;\n\t\ttree[x].v=mp[pos];tree[x].min=mp[pos]-a[l];tree[x].mp=l;tree[x].mn=1;return;\n\t}\n\tint mid=l+r>>1;\n\tbuild(tree[x].left,l,mid);build(tree[x].right,mid+1,r);update(x);\n}\ninline void change(int x,int l,int r,int p){\n\tif(l==r){\n\t\tint now=tree[x].v-tree[x].min,pos=lower_bound(mp+1,mp+32,now)-mp;\n\t\ttree[x].v=mp[pos];tree[x].min=mp[pos]-now;return;\n\t}\n\tint mid=l+r>>1;pushdown(x);\n\tif(p<=mid) change(tree[x].left,l,mid,p);else change(tree[x].right,mid+1,r,p);update(x);\n}\ninline pa update1(pa p1,pa p2){\n\tint fi,se;\n\tif(p1.first<p2.first) fi=p1.first,se=p1.second;\n\tif(p1.first==p2.first) fi=p1.first,se=p1.second+p2.second;\n\tif(p1.first>p2.first) fi=p2.first,se=p2.second;return make_pair(fi,se);\n}\ninline pa qr(int x,int l,int r,int l1,int r1){\n\tif(l1<=l&&r1>=r){pa pp;pp=make_pair(tree[x].min,tree[x].mn);return pp;}\n\tint mid=l+r>>1;pa tmp;tmp=make_pair(inf,99);pushdown(x);\n\tif(l1<=mid) tmp=update1(tmp,qr(tree[x].left,l,mid,l1,r1));\n\tif(r1>mid) tmp=update1(tmp,qr(tree[x].right,mid+1,r,l1,r1));return tmp;\n}\ninline void insert1(int x,int l,int r,int l1,int r1,int v){\n\tif(l1<=l&&r1>=r){tree[x].lazy+=v;tree[x].min-=v;return;}\n\tint mid=l+r>>1;pushdown(x);\n\tif(l1<=mid) insert1(tree[x].left,l,mid,l1,r1,v);\n\tif(r1>mid) insert1(tree[x].right,mid+1,r,l1,r1,v);update(x);\n}\nint main(){\n\tfreopen(\"cf.in\",\"r\",stdin);\n\tn=read();m=read();sort(mp+1,mp+32);\n\t//for (int i=1;i<=31;++i) printf(\"%d\\n\",mp[i]);\n\tfor (int i=1;i<=n;++i) a[i]=read();build(root,1,n);\n\tfor (int i=1;i<=m;++i){\n\t\tscanf(\"%s\",s+1);if (s[1]=='c'){\n\t\t\tint l=read(),r=read();pa pp=qr(root,1,n,l,r);\n\t\t\tif(pp.first==0) printf(\"%d\\n\",pp.second);else printf(\"0\\n\");\n\t\t} else{\n\t\t\tint l=read(),r=read(),v=read();insert1(root,1,n,l,r,v);\n\t\t\twhile(tree[root].min<0) change(root,1,n,tree[root].mp);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531238180,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF121E \u3010Lucky Array\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6c34\u5e73\u4e0d\u591f\uff0c\u6240\u4ee5\u60f3\u5230\u66b4\u529b\u3002\n\n~~\u66b4\u529b\u6570\u636e\u7ed3\u6784\u662f\u5565\uff1f\u5206\u5757\u5457\u3002~~\n\n\u628a\u6570\u5217\u5206\u6210 $\\sqrt n$ \u4e2a\u5757\uff0c\u5bf9\u6bcf\u4e2a\u5757\u7ef4\u62a4\u91cc\u9762\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u54e6\u5bf9\u4e86\uff0c\u8fd9\u4e2a\u7f3a\u5fb7\u7684\u7ffb\u8bd1\u6ca1\u6709\u8bf4\uff0c\u6bcf\u4e2a\u6570\u5728\u64cd\u4f5c\u524d\u540e\u90fd\u4e0d\u4f1a\u5927\u4e8e $10^4$\uff0c\u6240\u4ee5\u4e0a\u9762\u90a3\u4e2a\u6570\u7ec4\u662f $O(b\\sqrt n)$ \u7684\uff0c$b$ \u4e3a\u503c\u57df\u3002\n\n\u7136\u540e\u518d\u5bf9\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2a $tag$\uff0c\u8868\u793a\u7ed9\u5757\u5185\u7684\u6570\u52a0\u4e0a\u7684\u6807\u8bb0\u3002\u7136\u540e\u4fee\u6539\u7684\u65f6\u5019\u6563\u5757\u76f4\u63a5\u66b4\u529b\uff0c\u5757\u5185\u6253\u6807\u8bb0\u5373\u53ef\uff0c\u67e5\u8be2\u904d\u5386 $30$ \u4e2a \u5e78\u8fd0\u6570\u5b57\uff0c\u6563\u5757\u66b4\u529b\u67e5\u8be2\uff0c\u5757\u5185\u76f4\u63a5\u7528\u7ef4\u62a4\u7684\u51fa\u73b0\u6b21\u6570\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(30n\\sqrt n)$\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f60\u5927\u6982\u7387\u4f1a\u5728\u7b2c $70$ \u4e2a\u70b9 $\\mathtt{TLE}$\uff0c\u4e8e\u662f\u8003\u8651\u5927\u529b\u4f18\u5316\u3002\n\n\u9996\u5148\u90a3\u4e2a $30$ \u7684\u5e38\u6570\u662f\u80fd\u4e0d\u5361\u6ee1\u7684\uff0c\u7ef4\u62a4\u4e00\u4e2a $01$ \u6570\u5217\uff08\u503c\u57df\u4e0a\uff09\uff0c\u8868\u793a $i$ \u8fd9\u4e2a\u6570\u662f\u5426\u662f\u5e78\u8fd0\u6570\u5b57\u3002\u7136\u540e\u6563\u5757\u67e5\u8be2\u7684\u65f6\u5019\u8fd9\u4e2a $30$ \u7684\u5e38\u6570\u5c31\u6ca1\u4e86\uff0c\u5f53\u6574\u5757\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6bcf\u4e2a\u5e78\u8fd0\u6570\u5b57\uff0c\u5f53\u8fd9\u4e2a\u6570\u5b57\u5c0f\u4e8e\u6807\u8bb0\u7684\u65f6\u5019\u76f4\u63a5\u7ed3\u675f\u679a\u4e3e\u5373\u53ef\u3002\u6ce8\u610f\u7684\u662f\u6574\u5757\u67e5\u8be2\u8fd8\u662f\u5e26\u6709\u5c0f\u4e8e\u7b49\u4e8e $30$ \u7684\u5e38\u6570\u3002\n\n\u52a0\u4e0a\u4e0a\u8ff0\u4f18\u5316\u5373\u53ef\u901a\u8fc7\u672c\u9898\u3002\n\n```cpp\n#include <bits/stdc++.h>\nnamespace mystd {\n\tinline int read() {\n\t\tint w = 1, q = 0;\n\t\tchar ch = ' ';\n\t\twhile (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n\t\tif (ch == '-') w = -1, ch = getchar();\n\t\twhile (ch >= '0' && ch <= '9') q = q * 10 + ch - '0', ch = getchar();\n\t\treturn w * q;\n\t}\n\tinline void write(int x) {\n\t\tif (x < 0) {\n\t\t\tx = ~(x - 1);\n\t\t\tputchar('-');\n\t\t}\n\t\tif (x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace std;\nusing namespace mystd;\n\nconst int maxn = 1e5 + 100;\nconst int maxa = 1e4 + 100;\nconst int maxb = 400;\nint n, m, b, lz[maxb], ct[maxb][maxa], lp[maxb], rp[maxb], pos[maxn], num[35], cnt, a[maxn], mp[maxa];\n\nvoid add(int l, int r, int d) {\n\tint pl = pos[l], pr = pos[r];\n\tif (pl == pr) {\n\t\tfor (int i = l; i <= r; i++) {\n\t\t\tct[pl][a[i]]--, a[i] += d, ct[pl][a[i]]++;\n\t\t}\n\t} else {\n\t\tfor (int i = pl + 1; i <= pr - 1; i++) lz[i] += d;\n\t\tfor (int i = l; i <= rp[pl]; i++) ct[pl][a[i]]--, a[i] += d, ct[pl][a[i]]++;\n\t\tfor (int i = lp[pr]; i <= r; i++) ct[pr][a[i]]--, a[i] += d, ct[pr][a[i]]++;\n\t}\n}\n\nint query(int l, int r) {\n\tint pl = pos[l], pr = pos[r], ans = 0;\n\tif (pl == pr) {\n\t\tfor (int i = l; i <= r; i++) {\n\t\t\tans += mp[a[i] + lz[pl]];\n\t\t}\n\t} else {\n\t\tfor (int i = pl + 1; i <= pr - 1; i++) {\n\t\t\tfor (int j = cnt; j && (num[j] - lz[i] >= 0); j--) {\n\t\t\t\tans += ct[i][num[j] - lz[i]];\n\t\t\t}\n\t\t}\n\t\tfor (int i = l; i <= rp[pl]; i++) ans += mp[a[i] + lz[pl]];\n\t\tfor (int i = lp[pr]; i <= r; i++) ans += mp[a[i] + lz[pr]];\n\t}\n\treturn ans;\n}\n\nint main() {\n\tn = read(), m = read(), b = sqrt(n);\n\tfor (int i = 1; i <= b; i++) lp[i] = (i - 1) * b + 1, rp[i] = b * i;\n\tif (rp[b] < n) rp[++b] = n, lp[b] = rp[b - 1] + 1;\n\tfor (int i = 1; i <= b; i++) {\n\t\tfor (int j = lp[i]; j <= rp[i]; j++) {\n\t\t\tpos[j] = i;\n\t\t}\n\t}\n\tfor (int i = 1; i <= 4; i++) {\n\t\tfor (int j = 0; j <= (1 << i) - 1; j++) {\n\t\t\tint tp = i, t = j;\n\t\t\tcnt++;\n\t\t\twhile (tp) {\n\t\t\t\tif (t & 1) num[cnt] = (num[cnt] + 4) * 10;\n\t\t\t\telse num[cnt] = (num[cnt] + 7) * 10;\n\t\t\t\tt >>= 1, tp--;\n\t\t\t}\n\t\t\tnum[cnt] /= 10, mp[num[cnt]] = 1;\n\t\t}\n\t}\n\tsort(num + 1, num + cnt + 1);\n\tfor (int i = 1; i <= n; i++) a[i] = read(), ct[pos[i]][a[i]]++;\n\twhile (m--) {\n\t\tchar op[10]; int l, r, d;\n\t\tscanf(\"%s\", op + 1), l = read(), r = read();\n\t\tif (op[1] == 'a') {\n\t\t\td = read();\n\t\t\tadd(l, r, d);\n\t\t} else write(query(l, r)), puts(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1656824786,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF121E"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u597d\u9898\u3002\n\n\u8fd9\u4e2a\u9898\u7684\u7ffb\u8bd1\u6709\u4e00\u70b9\u6ca1\u7ffb\u8bd1\u51fa\u6765\uff0c\u5c31\u662f**\u65e0\u8bba\u600e\u4e48\u52a0\u5e8f\u5217\u4e2d\u7684\u6570\u4e0d\u4f1a\u8d85\u8fc7$10^4$**\u3002\n\n\u90a3\u4e48\u5728\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u5185\u53ef\u4ee5\u53d1\u73b0\u7531$4$\u548c$7$\u7ec4\u6210\u7684\u6570**\u53ea\u6709$30$\u4e2a**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6253\u4e00\u4e2a\u5c0f\u5c0f\u7684\u8868\u3002\n\n\u4e3a\u4e86\u9632\u6284\u88ad\u6211\u7684\u8868\u6253\u7684\u662f$2,3$\u7ec4\u6210\u7684\u6570\u3002\n\n\u53ef\u4ee5\u770b\u5230\u6211\u7684\u8868\u6700\u540e\u63d2\u5165\u4e86\u4e00\u4e2a\u6781\u5927\u503c\uff0c\u8fd9\u4e2a\u539f\u56e0\u8bf7\u81ea\u884c\u601d\u8003\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u8868\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5**\u7ef4\u62a4\u6bcf\u4e2a\u6570\u4e0e\u6700\u5c0f\u7684\u6bd4\u5b83\u5927\u7684\u7531$4$\u548c$7$\u7ec4\u6210\u7684\u6570\u7684\u5dee\uff0c\u6bcf\u6b21\u533a\u95f4\u52a0\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u628a\u5dee\u503c\u51cf\u53bb$d$**\u3002\n\n\u7ebf\u6bb5\u6811**\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4ee5\u53ca\u6700\u5c0f\u503c\u51fa\u73b0\u7684\u6b21\u6570**\uff0c\u6bcf\u6b21\u8be2\u95ee\u6211\u4eec\u770b\u5982\u679c\u6700\u5c0f\u503c\u662f$0$\u7684\u8bdd\u5c31\u76f4\u63a5\u8fd4\u56de\u6700\u5c0f\u503c\u51fa\u73b0\u7684\u6b21\u6570\u5373\u53ef\uff0c\u56e0\u4e3a\u5b83\u4e00\u5b9a\u662f\u7531$4$\u548c$7$\u7ec4\u6210\u7684\u3002\n\n**\u5f53\u5dee\u503c\u51cf\u5c0f\u5230\u6bd4$0$\u8fd8\u5c0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8981\u5bf9$x$\u7ef4\u62a4\u4e0b\u4e00\u4e2a\u5c0f\u4e8e$x$\u4e14\u91cc$x$\u6700\u8fd1\u7684$4,7$ \u7ec4\u6210\u7684\u6570\u7684\u5dee\u503c**\u3002\u8fd9\u4e2a\u7ef4\u62a4\u7684\u65f6\u5019\u66b4\u529b\u7ef4\u62a4\uff0c\u91cd\u65b0\u5efa\u6811\uff0c\u6bcf\u4e2a\u6570\u6700\u591a\u88ab\u4fee\u6539$31$\u6b21\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n\u590d\u6742\u5ea6$O(31m\\log n)$\u3002\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define eps 1e-7\n#define re register\n#define N 2001001\n#define MAX 2011\n#define PI 3.1415927\n#define inf 1e18\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst ll mod=1000000007;\ninline void read(re ll &ret)\n{\n    ret=0;re ll pd=0;re char c=getchar();\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c^48);c=getchar();}\n    ret=pd?-ret:ret;\n}\nll n,m,a[N],b[N],x,y,tmp;\nstruct node\n{\n\tll l,r,mid,val,minn,sum;\n}seg[N];\nll num[32]={0,2,3,22,23,32,33,222,223,232,233,322,323,332,333,2222,2223,2232,2233,2322,2323,2332,2333,3222,3223,3232,3233,3322,3323,3332,3333,200001}; \nchar s[N];\ninline void pushup(re ll pos)\n{\n\tseg[pos].minn=min(seg[pos<<1].minn,seg[pos<<1|1].minn);\n\tif(seg[pos].minn==seg[pos<<1].minn&&seg[pos].minn==seg[pos<<1|1].minn)\n\t\tseg[pos].val=seg[pos<<1].val+seg[pos<<1|1].val;\n\telse if(seg[pos].minn==seg[pos<<1].minn)\n\t\tseg[pos].val=seg[pos<<1].val;\n\telse\n\t\tseg[pos].val=seg[pos<<1|1].val;\n\treturn;\n}\ninline void build(re ll pos,re ll l,re ll r)\n{\n\tseg[pos].l=l;\n\tseg[pos].r=r;\n\tseg[pos].mid=l+r>>1;\n\tif(l==r)\n\t{\n\t\tseg[pos].val=1;\n\t\tfor(re int i=1;i<=31;i++)\n\t\t{\n\t\t\tseg[pos].minn=num[i]-a[l];\n\t\t\tb[l]=i;\n\t\t\tif(num[i]>=a[l])\n\t\t\t\tbreak;\n\t\t}\n\t}\n\telse\n\t{\n\t\tbuild(pos<<1,l,seg[pos].mid);\n\t\tbuild(pos<<1|1,seg[pos].mid+1,r);\n\t\tpushup(pos);\n\t}\n\treturn;\n}\ninline void rebuild(re ll pos)\n{\n\tif(seg[pos].minn>=0)\n\t\treturn;\n\tif(seg[pos].l==seg[pos].r)\n\t{\n\t\ta[seg[pos].l]=num[b[seg[pos].l]]-seg[pos].minn;\n\t\tfor(re int i=1;i<=31;i++)\n\t\t{\n\t\t\tseg[pos].minn=num[i]-a[seg[pos].l];\n\t\t\tb[seg[pos].l]=i;\n\t\t\tif(num[i]>=a[seg[pos].l])\n\t\t\t\tbreak;\n\t\t}\n\t}\n\telse\n\t{\n\t\tseg[pos<<1].minn-=seg[pos].sum;\n\t\tseg[pos<<1].sum+=seg[pos].sum;\n\t\tseg[pos<<1|1].minn-=seg[pos].sum;\n\t\tseg[pos<<1|1].sum+=seg[pos].sum;\n\t\tseg[pos].sum=0;\n\t\trebuild(pos<<1);\n\t\trebuild(pos<<1|1);\n\t\tpushup(pos);\n\t}\n}\ninline void add(re ll pos,re ll num)\n{\n\tseg[pos].sum+=num;\n\tseg[pos].minn-=num;\n\tif(seg[pos].minn<0)\n\t\trebuild(pos);\n\treturn;\n}\ninline void pushdown(re ll pos)\n{\n\tadd(pos<<1,seg[pos].sum);\n\tadd(pos<<1|1,seg[pos].sum);\n\tseg[pos].sum=0;\n\treturn;\n}\ninline void upgrade(re ll pos,re ll l,re ll r,re ll num)\n{\n\tif(seg[pos].l>r||seg[pos].r<l)\n\t\treturn;\n\telse if(seg[pos].l>=l&&seg[pos].r<=r)\n\t\treturn add(pos,num);\n\tpushdown(pos);\n\tupgrade(pos<<1,l,r,num);\n\tupgrade(pos<<1|1,l,r,num);\n\tpushup(pos);\n\treturn;\n}\ninline pair<ll,ll> query(re ll pos,re ll l,re ll r)\n{\n\tif(seg[pos].l>=l&&seg[pos].r<=r)\n\t\treturn make_pair(seg[pos].val,seg[pos].minn);\n\telse if(seg[pos].l>r||seg[pos].r<l)\n\t\treturn make_pair(0,inf);\n\tpushdown(pos);\n\tre pair<ll,ll> x=query(pos<<1,l,r),y=query(pos<<1|1,l,r);\n\tre ll ans=0;\n\tif(x.second==y.second)\n\t\tans+=x.first+y.first;\n\telse if(x.second>y.second)\n\t\tans+=y.first;\n\telse if(x.second<y.second)\n\t\tans+=x.first;\n\treturn make_pair(ans,min(x.second,y.second));\n}\nint main()\n{\n\tread(n);\n\tread(m);\n\tfor(re int i=1;i<=n;i++)\n\t\tread(a[i]);\n\tbuild(1,1,n);\n\tfor(re int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tif(s[1]=='c')\n\t\t{\n\t\t\tread(x);\n\t\t\tread(y);\n\t\t\tre pair<ll,ll>temp=query(1,x,y);\n\t\t\tif(!temp.second)\n\t\t\t\tprintf(\"%lld\\n\",temp.first);\n\t\t\telse\n\t\t\t\tputs(\"0\"); \n\t\t}\n\t\telse if(s[1]=='a')\n\t\t{\n\t\t\tread(x);\n\t\t\tread(y);\n\t\t\tread(tmp);\n\t\t\tupgrade(1,x,y,tmp);\n\t\t}\n\t}\n\texit(0);\n}\n\n```\n",
        "postTime": 1595248234,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF121E \u3010Lucky Array\u3011"
    },
    {
        "content": "## \u9898\u89e3-CF121E Lucky Array\n\n* **\u9898\u76ee\u5927\u610f**\n\n\u5c31\u662f\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n***\n$add:[l,r],x$\u628a$[l,r]$\u533a\u95f4\u91cc\u9762\u7684\u6570\u52a0\u4e0a$x$\n\n$query:[l,r]$\u8be2\u95ee\u533a\u95f4$[l,r]$\u91cc\u6709\u591a\u5c11\u5e78\u8fd0\u6570\u5b57\n\n* $Solution$\n\n\u7531\u4e8e$ai$\u6700\u5927\u503c\u5f88\u5c0f\uff0c\u76f4\u63a5$O(lim)$\u9884\u5904\u7406\u5373\u53ef\n\n\u7136\u540e\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u8fd9\u79cd\u6570\u7684\u4e2a\u6570\u3002\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\u6211\u4eec\u76f4\u63a5\u8f93\u51fa$query(r)-query(l-1)$\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b$O(n)$\u626b\u4e00\u904d\u5bf9\u4e8e\u539f\u6765\u662f\u5e78\u8fd0\u6570\u7684\u6570\u5148$add(i,-1)$\u518d$add(i,1)$\u5982\u679c\u539f\u6570\u52a0\u4e0a$val$\u540e\u4e3a\u5e78\u8fd0\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(M*logN)$\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) x&(-x)\nusing namespace std;\n\nconst int maxn=200005;\n\nint n,m,c[maxn],a[maxn],is[maxn],ans,ma;\n\ninline void init(int x) {\n\tfor ( int i=1;i<=x;i++ ) {\n\t\tint tmp=i;\n\t\tint ok=1;\n\t\twhile(tmp) {\n\t\t\tint p=tmp%10;\n\t\t\tif(p!=4&&p!=7) {\n\t\t\t\tok=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp/=10;\n\t\t}\n\t\tif(ok) is[i]=1;\n\t}\n}\n\ninline void add(int x,int val) {\n\twhile(x<=n) {\n\t\tc[x]+=val;\n\t\tx+=lowbit(x);\n\t}\n}\n\ninline int query(int x) {\n\tint ret=0;\n\twhile(x) {\n\t\tret+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ret;\n}\n\ninline int read() {\n\tint sum=0; char ch=getchar();\n\twhile(!isdigit(ch)) \n\t\tch=getchar();\n\twhile(isdigit(ch)) \n\t\tsum=sum*10+(ch^48),ch=getchar();\n\treturn sum;\n}\n\nint main() {\n\tn=read();\n\tm=read();\n\tinit(200001);\n\tfor ( int i=1;i<=n;i++ ) {\n\t\ta[i]=read();\n\t\tif(is[a[i]]) add(i,1);\n\t}\n\tchar type[11];\n\tfor ( int i=1;i<=m;i++ ) {\n\t\tscanf(\"%s\",type+1);\n\t\tif(type[1]==99) {\n\t\t\tint l=read();\n\t\t\tint r=read();\n\t\t\tprintf(\"%d\\n\",query(r)-query(l-1));\n\t\t}\n\t\telse {\n\t\t\tint l=read();\n\t\t\tint r=read();\n\t\t\tint val=read();\n\t\t\tif(!val) continue;\n\t\t\tfor ( int j=l;j<=r;j++ ) {\n\t\t\t\tif(is[a[j]]) add(j,-1);\n\t\t\t\ta[j]+=val;\n\t\t\t\tif(is[a[j]]) add(j,1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\t\t\t\n\t\n```\n",
        "postTime": 1571905577,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF121E \u3010Lucky Array\u3011"
    },
    {
        "content": "\u6b64\u9898\u7ffb\u8bd1\u6f0f\u4e86\u4e00\u4e2a\u91cd\u8981\u6761\u4ef6\uff0c\u6bcf\u4e2a\u6570\u5728\u4efb\u610f\u65f6\u523b\u4e0d\u8d85\u8fc71e4  \n\u5bb9\u6613\u53d1\u73b01~1e4\u4e2d\u53ea\u670930\u4e2a\u5e78\u8fd0\u6570\u3002  \n\u4e8e\u662f\u8003\u8651\u628a1~1e4\u8fd9\u4e2a\u533a\u95f4\u6309\u6bcf\u4e2a\u5e78\u8fd0\u6570\u7684\u4f4d\u7f6e\u5206\u6bb5\uff0c  \n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4e2d\u6bcf\u4e2a\u6570\u5230\u79bb\u5b83\u6700\u8fd1\u4e14\u6bd4\u5b83\u5927\u7684\u5e78\u8fd0\u6570\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\uff0c\u53ca\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u4e2a\u6570\u3002   \n\u6bcf\u6b21\u533a\u95f4\u52a0\u5f53\u6210\u533a\u95f4\u51cf\u6765\u505a\u3002  \n\u82e5\u533a\u95f4\u51cf\u540e\u6700\u5c0f\u503c\u5c0f\u4e8e0\uff0c\u5219\u66b4\u529b\u8df3\u6bb5\u3002  \n\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u4e2d\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u4e3a0\uff0c\u5219\u8fd4\u56de\u8fd9\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\u4e2a\u6570\uff0c\u5426\u5219\u8fd9\u4e2a\u533a\u95f4\u4e2d\u5c31\u6ca1\u6709\u5e78\u8fd0\u6570\u3002\n![](https://cdn.luogu.com.cn/upload/pic/64840.png)\n\u5982\u6837\u4f8b\uff0c \u53ef\u4ee5\u5206\u6210\u8fd9\u6837\u7684\u51e0\u6bb5\u3002  \n\u6b64\u65f62\u30013\u30014\u5bf9\u5e94\u5f97\u503c\u5206\u522b\u4e3a 2\u30011\u30010\u3002  \n\u67e5\u8be2\u533a\u95f41~3\uff0c  \n\u8ddd\u79bb\u6700\u5c0f\u503c\u4e3a0\uff0c\u8fd4\u56de\u6700\u5c0f\u503c\u4e2a\u65701\uff0c\u7b54\u6848\u5c31\u662f1\u3002  \n\u590d\u6742\u5ea6O(30nlogn)  \n~~\u8dd1\u5f97\u8fd8\u6ca1\u6709\u5206\u5757\u5feb\u662f\u600e\u4e48\u56de\u4e8b\uff1f~~  \nCode\uff1a  \n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\n#define N 100007\n#define pa pair <int, int>\nusing namespace std;\n\nint a[N], f[N], cnt, num, root;\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (!isdigit(ch))\n    ch = getchar();\n    while (isdigit(ch))\n    {\n        x = (x << 3) + (x << 1) + ch - 48;\n        ch = getchar();\n    }\n    return x;\n}\n\nstruct node\n{\n    int l, r, mn, sum, v, tag, f;\n}tr[N << 2];\n\nvoid push_up(int p)\n{\n    int l = tr[p].l, r = tr[p].r;\n    if (tr[l].mn == tr[r].mn)\n    {\n        tr[p].mn = tr[l].mn;\n        tr[p].sum = tr[l].sum + tr[r].sum;\n        tr[p].f = min(tr[l].f, tr[r].f);\n    }\n    if (tr[l].mn < tr[r].mn)\n    {\n        tr[p].mn = tr[l].mn;\n        tr[p].sum = tr[l].sum;\n        tr[p].f = tr[l].f;\n    }\n    if (tr[l].mn > tr[r].mn)\n    {\n        tr[p].mn = tr[r].mn;\n        tr[p].sum = tr[r].sum;\t\n        tr[p].f = tr[r].f;\t\n    }\n}\n\ninline void build(int &p, int l, int r)\n{\n    p = ++ num;\n    if (l == r)\n    {\n        int q = lower_bound(f + 1, f + 1 + cnt, a[l]) - f;\n        tr[p].sum = 1;\n        tr[p].mn = f[q] - a[l];\n        tr[p].v = f[q];\n        tr[p].f = l;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(tr[p].l, l, mid);\n    build(tr[p].r, mid + 1, r);\n    push_up(p);\n}\n\ninline void push_down(int p)\n{\n    if (tr[p].tag)\n    {\n        int l = tr[p].l, r = tr[p].r;\n        tr[l].mn -= tr[p].tag;\n        tr[l].tag += tr[p].tag;\n        tr[r].mn -= tr[p].tag;\n        tr[r].tag += tr[p].tag;\n        tr[p].tag = 0;\n    }\n}\n\ninline pa comp(pa x, pa y)\n{\n    int st, nd;\n    if (x.first > y.first)\n    st = y.first, nd = y.second;\n    if (x.first == y.first)\n    st = x.first, nd = x.second + y.second;\n    if (x.first < y.first)\n    st = x.first, nd = x.second;\n    return make_pair(st, nd);\n}\n\ninline void update(int p, int l, int r, int l1, int r1, int v)\n{\n    if (l1 <= l && r1 >= r)\n    {\n        tr[p].tag += v;\n        tr[p].mn -= v;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    push_down(p);\n    if (l1 <= mid) update(tr[p].l, l, mid, l1, r1, v);\n    if (r1 > mid) update(tr[p].r, mid + 1, r, l1, r1, v);\n    push_up(p);\n}//\u4fee\u6539\n\ninline pa query(int p, int l, int r, int l1, int r1)\n{\n    if (l1 <= l && r1 >= r)\n    {\n        pa pp = make_pair(tr[p].mn, tr[p].sum);\n        return pp;\n    }\n    int mid = (l + r) >> 1;\n    pa tmp = make_pair(0x3f3f3f3f, 99);\n    push_down(p);\n    if (l1 <= mid)\n    tmp = comp(tmp, query(tr[p].l, l ,mid, l1, r1));\n    if (r1 > mid)\n    tmp = comp(tmp, query(tr[p].r, mid + 1, r, l1, r1));\n    return tmp;\n}//\u67e5\u8be2\n\ninline void change(int p ,int l, int r, int x)\n{\n    if(l == r)\n    {\n        int now = tr[p].v - tr[p].mn;\n        int pos = lower_bound(f + 1, f + 1 + cnt, now) - f;\n        tr[p].v = f[pos];\n        tr[p].mn = f[pos] - now;\n        return;\n    }\n    int mid=(l + r) >> 1;\n    push_down(p);\n    if(x <= mid)\n    change(tr[p].l, l, mid, x);\n    else\n    change(tr[p].r, mid + 1, r, x);\n    push_up(p);\n}\n\nint main()\n{\n    int n = read(), m = read();\n    for (int i = 1; i <= 10000; i++)\n    {\n        int x = i;\n        bool flag = 1;\n        while (x)\n        {\n            if (x % 10 != 4 && x % 10 != 7)\n            {\n                flag = 0;\n                break;\n            }\n            x = x / 10;\n        }\n        if (flag)\n        f[++cnt] = i;\n    }\n    f[++cnt] = 9999999999;\n    sort(f + 1, f + 1 + cnt);\n    for (int i = 1; i <= n; i++)\n    {\n        a[i] = read();\n    }\n    build(root, 1, n);\n    for (int i = 1; i <= m; i++)\n    {\n        char s[301];\n        scanf(\"%s\",s+1);\n        if (s[1] == 'a')\n        {\n            int x = read(), y = read(), w = read();\n            update(root, 1, n, x, y, w);\n            while (tr[root].mn < 0) change(root, 1, n, tr[root].f);//\u66b4\u529b\u8df3\u6bb5\n        }\n        else\n        {\n            int x = read(), y = read();\n            pa ans = query(root, 1, n, x, y);\n            if (ans.first == 0)\n            printf(\"%d\\n\", ans.second);\n            else printf(\"0\\n\");\n        }\n    }\n    return 0;\n } \n```\n",
        "postTime": 1563614555,
        "uid": 93286,
        "name": "Yuno",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF121E \u3010Lucky Array\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ef4\u62a4\u6570\u5217\uff0c\u652f\u6301\u8be2\u95ee\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u8be2\u95ee\u4ec5\u7531 $4,7$ \u7ec4\u6210\u6570\u7684\u4e2a\u6570\uff0c**\u4efb\u4f55\u65f6\u523b\u6bcf\u4e2a\u6570\u5927\u5c0f\u4e0d\u4f1a\u8d85\u8fc7 $10^4$**\u3002\n\n## \u601d\u8def\n\n\u7531\u4e8e\u6bcf\u4e2a\u6570\u6709\u4e0a\u9650\uff0c\u663e\u7136\u6bcf\u4e2a\u6570\u6700\u591a\u88ab\u52a0 $10^4$ \u6b21\uff0c\u603b\u6b21\u6570\u5c31\u662f $10^9$ \u7ea7\u522b\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u5904\u7406\u6bcf\u4e2a\u6570\u662f\u5426\u5408\u6cd5\uff0c\u5bf9\u4e8e\u4fee\u6539\u5c31\u66b4\u529b\u7ef4\u62a4\u5f53\u524d\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u8fd9\u91cc\u4fee\u6539\u4e0e\u8be2\u95ee\u6b21\u6570\u4e0d\u540c\u7ea7\uff0c\u4f7f\u7528\u6839\u53f7\u505a\u5230 $O(1)$ \u52a0\u6cd5\uff0c$O(\\sqrt{n})$ \u533a\u95f4\u8be2\u95ee\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662f\u6bd4\u8f83\u5408\u7406\u7684 $O(nV+n\\sqrt{n})$ \u3002\n\n## code\n```cpp\nint n;\ninline int get(int x){return (x-1)/B+1;}\ninline int L(int x){return (x-1)*B+1;}\ninline int R(int x){return min(n,x*B);}\nbool is[MAXN];\nint sum[MAXN],c[MAXN];\nint a[MAXN];\nint main()\n{\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);cout<<fixed<<setprecision(10);\n\tint m;cin>>n>>m;\n    for(int i=1;i<=n;i++)cin>>a[i];\n    const int N=1e4;\n    for(int i=1;i<=N;i++)\n    {\n        string s=to_string(i);\n        if(count(all(s),'4')+count(all(s),'7')==s.size())is[i]=1;\n    }\n    for(int i=1;i<=n;i++)if(is[a[i]])sum[get(i)]++,c[i]++;\n    while(m--)\n    {\n        string s;cin>>s;\n        int l,r;cin>>l>>r;\n        if(s==\"add\")\n        {\n            int d;cin>>d;\n            for(int i=l;i<=r;i++)\n            {\n                if(is[a[i]])sum[get(i)]--,c[i]--;\n                if(is[a[i]+=d])sum[get(i)]++,c[i]++;\n            }\n        }\n        else\n        {\n            int ans=0;\n            int p=get(l),q=get(r);\n            if(p==q)\n            {\n                for(int i=l;i<=r;i++)ans+=c[i];\n                cout<<ans<<'\\n';\n                continue;\n            }\n            for(int i=l;i<=R(p);i++)ans+=c[i];\n            for(int i=L(q);i<=r;i++)ans+=c[i];\n            for(int i=p+1;i<q;i++)ans+=sum[i];\n            cout<<ans<<'\\n';\n        }\n    }\n\treturn 0;\n}\n```\n",
        "postTime": 1683861188,
        "uid": 571229,
        "name": "__stick",
        "ccfLevel": 7,
        "title": "CF121E Lucky Array"
    },
    {
        "content": "\u6211\u6068\u5206\u5757\uff01\n\n\u9996\u5148\u8bf4\u660e\u9898\u76ee\u4e2d\u6ca1\u6709\u7ffb\u8bd1\u4e00\u70b9\uff1a\n\nnone of which exceeds $10^4$\u2014those are the array numbers.\n\n\u610f\u601d\u5927\u6982\u662f\uff0c\u65e0\u8bba\u5982\u4f55\u64cd\u4f5c\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u90fd\u4e0d\u4f1a\u8d85\u8fc7 $10^4$\u3002\n\n\uff08\u8fd9\u4e48\u91cd\u8981\u7684\u6761\u4ef6\u7adf\u7136\u6ca1\u6709\u7ffb\u8bd1\uff01\uff09\n\n\u5e76\u4e14\u5e78\u8fd0\u6570\u5b57\u53ea\u5305\u542b $4$ \u548c $7$\uff0c\u5982\u679c\u5143\u7d20\u4e0d\u8d85\u8fc7 $10^4$\uff0c\u8bf4\u660e\u51fa\u73b0\u7684\u5e78\u8fd0\u6570\u5b57\u4e5f\u4e0d\u4f1a\u8d85\u8fc7 $10^4$\uff0c\u7b80\u5355\u7b97\u4e00\u7b97\u5c31\u77e5\u9053\u53ea\u6709 $30$ \u4e2a\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u8fd9 $30$ \u4e2a\u6570\u5217\u51fa\u6765\uff0c\u5b58\u5165\u6570\u7ec4 $S$\u3002\n\n\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u679a\u4e3e $S_t$\uff0c\u7136\u540e\u5c31\u662f\u8981\u627e\u51fa $[l,r]$ \u4e2d $S_t$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u503c\u57df\u4e0d\u5927\uff0c\u53ef\u4ee5\u7528\u6876\u3002\u6211\u7528\u7684\u662f\u5206\u5757\u5957\u6876\uff0c$cnt_{i,j}$ \u8bb0\u5f55\u7b2c $i$ \u4e2a\u5757\u4e2d\u6709\u591a\u5c11\u4e2a $j$\u3002\n\n\u4fee\u6539\uff1a\u4e2d\u95f4\u5b8c\u6574\u5757\u6253\u4e0a\u6c38\u4e45\u5316\u6807\u8bb0 $tag$\uff0c\u5934\u5c3e\u4e0d\u5b8c\u6574\u5757\u66b4\u529b\u4fee\u6539\uff0c\u65f6\u95f4 $O(n\\sqrt{n})$\u3002\n\n\u8be2\u95ee\uff1a\u4e2d\u95f4\u5b8c\u6574\u5757\u76f4\u63a5\u7528\u6876\uff0c\u56e0\u4e3a\u6709\u6807\u8bb0\u7684\u539f\u56e0\uff0c\u56e0\u6b64\u7b2c $i$ \u5757\u4e2d $S_t$ \u51fa\u73b0\u7684\u6b21\u6570\u5c31\u662f $cnt_{i,S_t-tag_i}$\u3002\u5934\u5c3e\u4e0d\u5b8c\u6574\u5757\u66b4\u529b\u67e5\u8be2\u3002\n\n\u6700\u540e\u63d0\u9192\u4e00\u53e5\uff1a\u7528\u5206\u5757\u5957\u6876\u65f6\u95f4\u6709\u70b9\u52c9\u5f3a\uff0c\u5c3d\u91cf\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\nusing namespace std;\nint S[30]={4,7,44,47,74,77,444,447,474,477,744,747,774,777,4444,4447,4474,4477,4744,4747,4774,4777,7444,7447,7474,7477,7744,7747,7774,7777};\nint OK[10005];\nint n,m,block,tot,a[N],L[320],R[320],blng[N];\nint cnt[320][10005],tag[320];\ninline void Update(int l,int r,int d){\n    int x(blng[l]),y(blng[r]);\n    for(int i(l);i<=min(R[x],r);++i){\n        --cnt[x][a[i]];\n        a[i]+=d;\n        ++cnt[x][a[i]];\n    }\n    if(x^y){\n        for(int i(x+1);i<y;++i) tag[i]+=d;\n        for(int i(L[y]);i<=r;++i){\n            --cnt[y][a[i]];\n            a[i]+=d;\n            ++cnt[y][a[i]];\n        }\n    }\n}\ninline int Query(int l,int r){\n    int x(blng[l]),y(blng[r]),res(0);\n    for(int i(l);i<=min(R[x],r);++i) res+=OK[a[i]+tag[x]];\n    if(x^y){\n        for(int i(x+1);i<y;++i)\n            for(int t(29);t>=0;--t){\n                if(S[t]<=tag[i]) break;\n                res+=cnt[i][S[t]-tag[i]];\n            }\n        for(int i(L[y]);i<=r;++i) res+=OK[a[i]+tag[y]];\n    }\n    return res;\n}\nint main(){\n    for(int t(0);t<30;++t) OK[S[t]]=1;\n    scanf(\"%d%d\",&n,&m);\n    for(int i(1);i<=n;++i) scanf(\"%d\",&a[i]);\n    block=sqrt(n);tot=(n-1)/block+1;\n    for(int i(1);i<=tot;++i){\n        L[i]=R[i-1]+1;R[i]=min(R[i-1]+block,n);\n        for(int j(L[i]);j<=R[i];++j) blng[j]=i,++cnt[i][a[j]];\n    }\n    while(m--){\n        string op;cin>>op;\n        int l,r,d;\n        if(op==\"add\"){\n            scanf(\"%d%d%d\",&l,&r,&d);\n            Update(l,r,d);\n        }\n        else{\n            scanf(\"%d%d\",&l,&r);\n            printf(\"%d\\n\",Query(l,r));\n        }\n    }\n    return 0;\n}\n```\n\n\u6492\u82b1\u6492\u82b1~",
        "postTime": 1673880796,
        "uid": 554574,
        "name": "gyyyyx",
        "ccfLevel": 0,
        "title": "Lucky Array"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u5e8f\u5217 $a$\uff0c\u5b9a\u4e49\u5e78\u8fd0\u6570\u4e3a\u5404\u4f4d\u6570\u5b57\u53ea\u542b\u6709 $4, 7$ \u7684\u6570\u5b57\uff0c\u4f8b\u5982 $4474$ \u662f\u5e78\u8fd0\u6570\uff0c\u800c $4177$ \u5219\u4e0d\u662f\u3002\u73b0\u5728\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u53ef\u80fd\u662f\u5c06 $a_l, a_{l+1}, \\cdots, a_r$ \u5168\u90e8\u52a0\u4e0a $d$\uff0c\u6216\u8005\u8be2\u95ee $a_l, a_{l+1}, \\cdots, a_r$ \u4e2d\u6709\u51e0\u4e2a\u5e78\u8fd0\u6570\u3002\n\n## \u89e3\u6cd5\n\n\u8003\u8651\u53ef\u4ee5\u5206\u5757\u89e3\u51b3\u3002\n\n\u4f46\u662f\u5206\u5757\u7684\u96be\u70b9\u5728\u4e8e\u64cd\u4f5c $1$\uff0c\u4e5f\u5c31\u662f\u533a\u95f4\u52a0\u6cd5\u3002\n\n\u663e\u7136\u5982\u679c\u6211\u4eec\u66b4\u529b\u5bf9 $a_l, a_{l+1}, \\cdots, a_r$ \u5168\u90e8\u66b4\u529b\u52a0\u4e0a $d$ \u5e76\u4e14\u66f4\u65b0\u5757\u7684\u4fe1\u606f\uff0c\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\uff0c\u90a3\u4e48\u6781\u9650\u590d\u6742\u5ea6 $O(n \\cdot m)$\uff0c\u663e\u7136\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5bf9\u6240\u6709\u6574\u5757\u90fd\u8bb0\u5f55\u4e00\u4e2a $plus_i$ \u8868\u793a\u8fd9\u4e2a\u5757\u66fe\u7ecf\u88ab\u52a0\u4e0a\u4e86 $plus_i$\uff0c\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u4e0a\u7684\u61d2\u6807\u8bb0\u3002\u7136\u540e\u6bcf\u4e00\u4e2a\u5feb\u4e0d\u518d\u8bb0\u5f55\u5e78\u8fd0\u6570\u6570\u91cf\uff0c\u800c\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u5757 $f_{i,j}$ \u8bb0\u5f55\u7684\u662f\u5757 $i$ \u4e2d $j$ \u51fa\u73b0\u6b21\u6570\uff0c\u5e78\u8fd0\u6570\u9884\u5904\u7406\u6253\u8868\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// \u7701\u7565\u706b\u8f66\u5934\n#include <string>\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\nconstexpr int N = 1e5 + 5, M = 705, Q = 1e4 + 5;\nint a[N], len;\nint plusb[N];\nint f[M][Q];\n\ninline int get(register const int& x)\n{\n\treturn (x - 1) / len;\n}\n\ninline int lplace(register const int& x)\n{\n\treturn x * len + 1;\n}\n\ninline int rplace(register const int& x)\n{\n\treturn lplace(x + 1) - 1;\n}\n\nint p[] = { 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777, 4444, 4447, 4474, 4477, 4744, 4747, 4774, 4777, 7444, 7447, 7474, 7477, 7744, 7747, 7774, 7777 };\nbool flag[N];\n\nint main()\n{\n\tregister int n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tlen = sqrt(n);\n\tfor (register int i(0); i < 30; i = -~i) flag[p[i]] = true;\n\tfor (register int i(1); i <= n; i = -~i) scanf(\"%d\", &a[i]);\n\tfor (register int i(0); i <= len; i = -~i)\n\t{\n\t\tregister int lp(lplace(i)), rp(rplace(i));\n\t\tfor (register int j(lp); j <= rp; j = -~j)\n\t\t{\n\t\t\tf[i][a[j]]++;\n\t\t}\n\t}\n\twhile (m--)\n\t{\n\t\tstring ch;\n\t\tcin >> ch;\n\t\tif (ch[0] == 'a')\n\t\t{\n\t\t\tregister int l, r, d;\n\t\t\tscanf(\"%d%d%d\", &l, &r, &d);\n\t\t\tregister int ls(get(l)), rs(get(r));\n\t\t\tif (ls == rs)\n\t\t\t{\n\t\t\t\tfor (register int i(l); i <= r; i = -~i)\n\t\t\t\t{\n\t\t\t\t\tf[get(i)][a[i]]--;\n\t\t\t\t\ta[i] += d;\n\t\t\t\t\tf[get(i)][a[i]]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tregister int lp = lplace(ls + 1), rp = rplace(rs - 1);\n\t\t\t\tfor (register int i(l); i < lp; i = -~i)\n\t\t\t\t{\n\t\t\t\t\tf[get(i)][a[i]]--;\n\t\t\t\t\ta[i] += d;\n\t\t\t\t\tf[get(i)][a[i]]++;\n\t\t\t\t}\n\t\t\t\tfor (register int i(rp + 1); i <= r; i = -~i)\n\t\t\t\t{\n\t\t\t\t\tf[get(i)][a[i]]--;\n\t\t\t\t\ta[i] += d;\n\t\t\t\t\tf[get(i)][a[i]]++;\n\t\t\t\t}\n\t\t\t\tregister int nl(get(lp)), nr(get(rp));\n\t\t\t\tfor (register int i(nl); i <= nr; i++)\n\t\t\t\t{\n\t\t\t\t\tplusb[i] += d;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tregister int sum = 0, l, r;\n\t\t\tscanf(\"%d%d\", &l, &r);\n\t\t\tregister int ls(get(l)), rs(get(r));\n\t\t\tif (ls == rs)\n\t\t\t{\n\t\t\t\tfor (register int i(l); i <= r; i = -~i)\n\t\t\t\t{\n\t\t\t\t\tsum += flag[a[i] + plusb[get(i)]];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tregister int lp = lplace(ls + 1), rp = rplace(rs - 1);\n\t\t\t\tfor (register int i(l); i < lp; i = -~i) sum += flag[a[i] + plusb[get(i)]];\n\t\t\t\tfor (register int i(rp + 1); i <= r; i = -~i) sum += flag[a[i] + plusb[get(i)]];\n\t\t\t\tregister int nl(get(lp)), nr(get(rp));\n\t\t\t\tfor (register int i(nl); i <= nr; i = -~i)\n\t\t\t\t{\n\t\t\t\t\tfor (register int j(0); j < 30; j = -~j)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (plusb[i] > p[j]) continue;\n\t\t\t\t\t\tsum += f[i][p[j] - plusb[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", sum);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u9650\u65f6 $4$ \u79d2\uff0c\u6211\u7684\u8dd1\u4e86 $3962$ \u6beb\u79d2\uff0c\u5982\u679c\u628a\u706b\u8f66\u5934\u5220\u4e86\u7684\u8bdd\u90a3\u5c31\u53ef\u80fd\u8981\u8d85\u65f6\u3002\n\n[AC \u8bb0\u5f55\u3002](https://codeforces.com/problemset/submission/121/148986988)\n",
        "postTime": 1646830385,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF121E Lucky Array"
    },
    {
        "content": "\u9898\u610f\u6982\u8981\uff1a\u8981\u6c42\u7edf\u8ba1\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u201c\u5e78\u8fd0\u6570\u5b57\u201d\u4e2a\u6570\uff0c\u5e76\u4e14\u533a\u95f4\u652f\u6301\u52a0\u51cf\u3002\n\n\u7531\u4e8e\u5e78\u8fd0\u6570\u5b57\u53ea\u80fd\u7531\u4e24\u79cd\u6570\u5b57\u6784\u6210\uff0c\u4e14\u64cd\u4f5c\u4e2d\u4efb\u4f55\u6570\u5b57\u4e0d\u8d85\u8fc7 $10^4$\uff0c\u6240\u4ee5\uff0c\u51ed\u501f\u7740\u7406\u79d1\u4eba\u7684\u76f4\u89c9\u53ef\u4ee5\u77e5\u9053\uff0c\u5e78\u8fd0\u6570\u5b57\u7684\u4e2a\u6570\u662f\u975e\u5e38\u6709\u9650\u7684\u3002\u4e8e\u662f\u901a\u8fc7\u6253\u8868\uff0c\u6211\u4eec\u63d0\u524d\u5f97\u51fa\u4e86\u90a3\u4e09\u5341\u4e2a\u5e78\u8fd0\u6570\u5b57\u3002\n\n\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e9b\u6570\u5b57\u7684\u4e2a\u6570\u975e\u5e38\u5c11\uff0c\u51e0\u4e4e\u662f\u5e38\u6570\u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u67e5\u8be2\u5c31\u5206\u89e3\u6210\u4e86\uff1a\u7ed9\u5b9a\u4e00\u6bb5\u533a\u95f4\uff0c\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7b2c\u4e00\u4e2a\u5e78\u8fd0\u6570\u5b57\u3001\u7b2c\u4e8c\u4e2a\u5e78\u8fd0\u6570\u5b57\u2026\u2026\u7b2c\u4e09\u5341\u4e2a\u5e78\u8fd0\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u7684\u603b\u548c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5206\u5757\u6765\u5b9e\u73b0\u3002\u8fd9\u9053\u9898\u5c31\u662f\u5355\u7eaf\u7684\u533a\u95f4\u52a0\u548c\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\u53ef\u4ee5\u7528\u4f20\u7edf\u7684 $\\sqrt{n}$\u3002\n\n\u663e\u7136\uff0c\u4f9d\u636e\u201c\u6574\u5757\u7ef4\u62a4\uff0c\u6563\u5757\u66b4\u529b\u201d\u7684\u539f\u5219\uff0c\u6211\u4eec\u5728\u7ed9\u4e00\u4e2a\u6563\u5757\u6574\u4f53\u52a0\u67d0\u4e00\u4e2a\u6570\u65f6\u5e94\u76f4\u63a5\u7ed9\u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0a\uff0c\u800c\u7ed9\u6574\u5757\u52a0\u7684\u65f6\u5019\u5219\u5e94\u8be5\u7528\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u8fd9\u4e2a\u5757\u6574\u4f53\u8981\u52a0\u4e0a\u591a\u5c11\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u5757\u5e94\u8be5\u90fd\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u7edf\u8ba1\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u3002\n\n\u8fdb\u884c\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6563\u5757\u76f4\u63a5\u4e00\u4e2a\u4e2a\u5224\u65ad\u662f\u5426\u4e3a\u5e78\u8fd0\u6570\u5b57\uff08\u8981\u63d0\u524d\u7528\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u5b58\u4e0b\u6765\u6bcf\u4e2a\u6570\u662f\u6216\u4e0d\u662f\u5e78\u8fd0\u6570\u5b57\u800c\u4e0d\u662f\u5728\u67e5\u8be2\u65f6\u4e00\u4e2a\u4e2a\u66b4\u529b\u5224\u65ad\uff01\uff01\uff01\uff09\uff0c\u5bf9\u4e8e\u6574\u5757\uff0c\u5219\u8ba1\u7b97\u6bcf\u4e2a\u5e78\u8fd0\u6570\u5b57\u5728\u8be5\u5757\u4e2d\u51fa\u73b0\u6b21\u6570\uff0c\u6700\u540e\u628a\u8fd9\u4e9b\u6570\u5b57\u76f8\u52a0\u5373\u4e3a\u8be5\u6b21\u67e5\u8be2\u7b54\u6848\u3002\u590d\u6742\u5ea6\u662f $O(n\\sqrt{n})$\uff0c\u518d\u4e58\u4e09\u5341\u7684\u5e38\u6570\uff0c\u590d\u6742\u5ea6\u53ef\u4ee5\u63a5\u53d7\uff0c\u7b2c\u4e03\u5341\u4e2a\u70b9\u662f\u5168\u90e8\u67e5\u8be2\u4e14\u6240\u6709\u6570\u90fd\u662f\u5e78\u8fd0\u6570\u5b57\u7684\u5361\u5e38\u70b9\uff0c\u6ce8\u610f\u5904\u7406\u6563\u5757\u67e5\u8be2\u65f6\u7684\u4f18\u5316\u95ee\u9898\u3002\n\n\u597d\u4e86\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <cmath>\nusing namespace std;\nint lucky_num[35] = {0, 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777, 4444, 4447, 4474, 4477, 4744, 4747, 4774, 4777, 7444, 7447, 7474, 7477, 7744, 7747, 7774, 7777};\nbool check(int x){\n\twhile (x){\n\t\tif (x % 10 != 4 && x % 10 != 7) return false;\n\t\tx = (x - x % 10) / 10;\n\t}\n\treturn true;\n}\nvoid shengchen(){ \n\tint _count = 0;\n\tprintf(\"int lucky_num[35] = {\");\n\tfor (int i = 1; i <= 10000; i++){\n\t\tif (check(i)) printf(\"%d, \", i);\n\t\t\n\t}\n\tprintf(\"};\");\n}\nint n, m, len, sum, bl_l, bl_r;\nint belong[100001], a[100001], b[100001];\nint cnt[401][10001], L[401], R[401], add[401];\nchar opt[10];\nbool is_lucky[10001]; \nvoid _plus(int l, int r, int v){\n\tbl_l = belong[l];\n\tbl_r = belong[r];\n\tif (bl_l == bl_r){\n\t\tfor (int i = l; i <= r; i++){\n\t\t\tcnt[bl_l][b[i]]--;\n\t\t\tb[i] += v;\n\t\t\tcnt[bl_l][b[i]]++;\n\t\t}\n\t\treturn;\n\t}\n\tfor (int i = l; i <= R[bl_l]; i++){\n\t\tcnt[bl_l][b[i]]--;\n\t\tb[i] += v;\n\t\tcnt[bl_l][b[i]]++;\n\t}\n\tfor (int i = bl_l + 1; i <= bl_r - 1; i++){\n\t\tadd[i] += v;\n\t}\n\tfor (int i = L[bl_r]; i <= r; i++){\n\t\tcnt[bl_r][b[i]]--;\n\t\tb[i] += v;\n\t\tcnt[bl_r][b[i]]++;\n\t}\n}\nint count(int idx, int l, int r){\n\tbl_l = belong[l];\n\tbl_r = belong[r];\n\tint l_num = lucky_num[idx];\n\tint _count = 0;\n\tif (bl_l == bl_r){\n\t\tfor (int i = l; i <= r; i++){\n\t\t\tif (b[i] + add[bl_l] == l_num) _count++;\n\t\t}\n\t\treturn _count;\n\t}\n\tfor (int i = bl_l + 1; i <= bl_r - 1; i++){\n\t\tif (l_num >= add[i]) _count += cnt[i][l_num - add[i]];\n\t}\n\treturn _count;\n}\nvoid init(){\n\tlen = sqrt(n);\n\tsum = len;\n\tfor (int i = 1; i <= sum; i++){\n\t\tL[i] = R[i - 1] + 1;\n\t\tR[i] = L[i] + len - 1;\n\t\tfor (int j = L[i]; j <= R[i]; j++){\n\t\t\tbelong[j] = i;\n\t\t\tcnt[i][a[j]]++;\n\t\t}\n\t}\n\tif (R[sum] < n){\n\t\tsum++;\n\t\tL[sum] = R[sum - 1] + 1;\n\t\tR[sum] = n;\n\t\tfor (int i = R[sum - 1] + 1; i <= n; i++){\n\t\t\tbelong[i] = sum;\n\t\t\tcnt[sum][a[i]]++;\n\t\t}\n\t} \n}\nint cnt_luck(int l, int r){\n\tint ans = 0;\n\tfor (int i = 1; i <= 30; i++){\n\t\tans += count(i, l, r);\n\t}\n\tif (belong[l] != belong[r]){\n\t\tfor (int i = l; i <= R[belong[l]]; i++){\n\t\t\tif (is_lucky[b[i] + add[belong[l]]]) ans++;\n\t\t}\n\t\tfor (int i = L[belong[r]]; i <= r; i++){\n\t\t\tif (is_lucky[b[i] + add[belong[r]]]) ans++;\n\t\t}\t\n\t}\n\treturn ans;\n}\nint main(){\n\tfor (int i = 1; i <= 30; i++){\n\t\tis_lucky[lucky_num[i]] = true;\n\t}\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tb[i] = a[i];\n\t}\n\tinit();\n\tint l, r, d;\n\twhile (m--){\n\t\tscanf(\"%s%d%d\", opt, &l, &r);\n\t\tif (opt[0] == 'a'){\n\t\t\tscanf(\"%d\", &d);\n\t\t\t_plus(l, r, d);\n\t\t}else{\n\t\t\tprintf(\"%d\\n\", cnt_luck(l, r));\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1638977670,
        "uid": 347839,
        "name": "Daniel_001",
        "ccfLevel": 0,
        "title": "CF121E Lucky Array"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u975e\u5e38\u559c\u6b22\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u7528\u5206\u5757\u8fc7\u4e86\u8fd9\u9053\u9898\u3002\n\n\u800c\u4e14\u662f C++ \u7248\u672c\u7684\uff0c\u8bf7\u653e\u5fc3\u98df\u7528\u3002\n\n## \u3010\u601d\u8def\u3011\n\n\u9996\u5148\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a\u6ca1\u7ffb\u8bd1\u51fa\u6765\u7684\u6761\u4ef6\uff1a\u4fdd\u8bc1\u4efb\u4f55\u65f6\u5019\u6570\u5217\u4e2d\u7684\u5143\u7d20\u4e0d\u8d85\u8fc7 $10^4$\u3002\n\n\u4f1a\u505a\u4e86\u7684\u53ef\u4ee5\u81ea\u884c\u79bb\u5f00\u4e86\u3002\n\n\u4ec0\u4e48\uff1f\u4f60\u8fd8\u4e0d\u4f1a\u505a\uff1f\u90a3\u5c31\u63a5\u7740\u770b\u4e0b\u53bb\u597d\u4e86\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6b64\u65f6\u53ef\u80fd\u7684\u5e78\u8fd0\u6570\u4e2a\u6570\u5176\u5b9e\u53ea\u6709 $2^4+2^3+2^2+2^1=30$ \u4e2a\u3002\n\n\u90a3\u4e48\u6211\u4eec\u66b4\u529b\u5224\u65ad\u8fd9 $30$ \u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u7528\u5206\u5757\u7ef4\u62a4\u3002\n\n\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\u5206\u5757\u8fd9\u4e2a\u4e1c\u897f\u4e86\uff0c\u53ea\u8bb2\u600e\u4e48\u7ef4\u62a4\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6574\u5757\u8bb0\u5f55\u533a\u95f4\u5185\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u90a3\u4e48\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u6b21\u6570\u5462\uff1f\n\n\u663e\u7136\u5728\u6563\u5757\u4e0a\u52a0\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u66f4\u65b0\u3002\n\n\u7136\u540e\u6574\u5757\u52a0\u548c\u7684\u65f6\u5019\u91c7\u7528\u6253\u6807\u8bb0\u7684\u65b9\u6cd5\u5373\u53ef\u3002\n\n\u4e5f\u5c31\u662f\u8bb0\u5f55 **\u201c\u672c\u533a\u95f4\u5b9e\u9645\u4e0a\u88ab\u52a0\u4e86\u591a\u5c11\u201d** \u3002\u7136\u800c\u8fd9\u4e2a\u662f\u6ca1\u6709\u5728\u6570\u7ec4\u4e2d\u4f53\u73b0\u51fa\u6765\u7684\u3002\n\n\u6700\u540e\u67e5\u8be2\u7684\u65f6\u5019\u6563\u5757\u76f4\u63a5\u66b4\u529b\u626b\uff0c\u6574\u5757\u5229\u7528\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u548c\u6253\u597d\u7684\u6807\u8bb0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5e78\u8fd0\u6570 **\u5206\u522b\u8ba1\u7b97** \u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u662f $O(n\\sqrt n)$ \u7684\uff0c\u4e58\u4e00\u4e2a $30$ \u7684\u5e38\u6570\uff08\u5e94\u8be5\u662f\u8fd9\u4e48\u8868\u8ff0\u6ca1\u9519\u5427\uff09\u3002\n\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define getchar() printf(\"I am a cheater!I AK IOI!%c\", 10)\ntemplate <typename T>\ninline void read(T &x){\n    x = 0;int fu = 1;\n    char c = getchar();\n    while(c > 57 || c < 48){\n        if(c == 45) fu = -1;\n        c = getchar();\n    }\n    while(c <= 57 && c >= 48){\n        x = (x << 3) + (x << 1) + c - 48;\n        c = getchar();\n    }\n    x *= fu;\n}\ntemplate <typename T>\ninline void fprint(T x){\n    if(x < 0) putchar(45), x = -x;\n    if(x > 9) fprint(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T>\ninline void fprint(T x, char ch){\n    fprint(x);putchar(ch);\n}\ninline char next_char(){\n    char ch = getchar();\n    while(ch == 9 || ch == 10 || ch == 32) ch = getchar();\n    return ch;\n}\ntemplate <typename T>\ninline T mn(T x, T y) {return x < y ? x : y;}\ntemplate <typename T>\ninline T mx(T x, T y) {return x > y ? x : y;}\ntemplate <typename T>\ninline void chmin(T &x, T y) {(x > y) && (x = y);}\ntemplate <typename T>\ninline void chmax(T &x, T y) {(x < y) && (x = y);}\n#define MAXN 100005\nint n, m;\nconst int block = 405;\ninline int lst(int x){return mn(x * block, n);}\ninline int fst(int x){return lst(x - 1) + 1;}\ninline int idb(int x){return (x - 1) / block + 1;}\ninline bool LST(int x){return x == lst(idb(x));}\n\nint a[MAXN], cnt[(MAXN / block) + 5][10005], tag[(MAXN / block) + 5];\nint lucky[35], tt;\nbool b[100005];\ninline void init(){\n    for (register int i = 1;i <= 10000;i ++){\n        bool ck = 1;int tmp = i, num;\n        while(tmp){\n            num = tmp % 10;\n            if(num != 4 && num != 7){\n                ck = 0;\n                break;\n            }\n            tmp /= 10;\n        }\n        if(ck) lucky[++ tt] = i, b[i] = 1;\n    }\n}\n\nint main(){\n    init();//\u9884\u5904\u7406\u5e78\u8fd0\u6570\n    read(n);read(m);\n    for (register int i = 1;i <= n;i ++) read(a[i]);\n    const int tot = idb(n);//\u603b\u5757\u6570\n    for (register int i = 1;i <= tot;i ++){\n        for (register int j = fst(i);j <= lst(i);j ++){\n            cnt[i][a[j]] ++;\n        }\n    }\n    char opt[10];\n    int l, r, L, R;\n    while(m --){\n        scanf(\"%s\", opt);read(l);read(r);\n        L = idb(l);R = idb(r);\n        if(opt[0] == 'c'){\n            int ans = 0;\n            if(L == R){\n                for (register int i = l;i <= r;i ++) ans += b[a[i] + tag[L]];\n                fprint(ans, 10);\n            }\n            else{\n                for (register int i = l;i <= lst(L);i ++) ans += b[a[i] + tag[L]];\n                for (register int i = r;i >= fst(R);i --) ans += b[a[i] + tag[R]];\n                for (register int i = L + 1;i < R;i ++) {\n                    for (register int j = 1;j <= tt;j ++){\n                        if(lucky[j] < tag[i]) continue;//\u5176\u5b9e\u8fd9\u91cc\u5982\u679c\u9006\u7740\u6765\u53ef\u4ee5\u7a0d\u5fae\u526a\u4e00\u526a\u679d\u51cf\u5c0f\u5e38\u6570\uff0c\u4e0d\u8fc7\u6211\u61d2\u5f97\u5199\n                        ans += cnt[i][lucky[j] - tag[i]];\n                    }\n                }\n                fprint(ans, 10);\n            }\n        }\n        else{\n            int x;read(x);\n            if(L == R){\n                for (register int i = l;i <= r;i ++) {\n                    cnt[L][a[i]] --;\n                    a[i] += x;\n                    cnt[L][a[i]] ++;\n                }\n            }\n            else{\n                for (register int i = l;i <= lst(L);i ++) {\n                    cnt[L][a[i]] --;\n                    a[i] += x;\n                    cnt[L][a[i]] ++;\n                }\n                for (register int i = r;i >= fst(R);i --){\n                    cnt[R][a[i]] --;\n                    a[i] += x;\n                    cnt[R][a[i]] ++;\n                }\n                for (register int i = L + 1;i < R;i ++) tag[i] += x;\n            }\n        }\n    }\n}\n```",
        "postTime": 1603432205,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF121E \u3010Lucky Array\u3011"
    },
    {
        "content": "\u6b64\u9898\u8003\u6570\u636e\u7ed3\u6784\uff0c\u6211\u9009\u62e9\u5206\u5757\n\n\u9898\u76ee\u8981\u6c42\u7684\u6570\u5e76\u4e0d\u591a\uff0c\u8fbe\u6807\uff08\u6253\u8868\uff09\u5c31\u884c\u5566\n\n\u5176\u4e2dpp\u65e2\u662f\u5757\u6570\uff0c\u4e5f\u662f\u6bcf\u5757\u5927\u5c0f  \u5077\u61d2\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6bcf\u6b21\u7edf\u8ba1\u6bcf\u4e00\u5757\u4e2d\u7684lucky number\u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u6253\u6807\u8bb0\n\n\n\n\n\n\u4e0b\u9762\u4ee3\u7801\uff1a\n\n```pascal\nvar\n  b:array[0..10005] of boolean;\n  pp,n,m,x,y,v,i,j,s,x1,y1,k,ans:longint;\n  a,c,l,ss,xx:array[0..1000005] of longint;\n  s1:array[0..1005,-20005..10005] of longint;\n  ch:char;\nbegin\n  readln(n,m);\n  pp:=trunc(sqrt(n))+1;\n  for i:=1 to n do\n    if (i-1) mod pp=0 then l[i]:=l[i-1]+1\n                      else l[i]:=l[i-1];\n  b[4]:=true;b[7]:=true;\n  b[44]:=true;b[47]:=true;b[74]:=true;b[77]:=true;\n  b[444]:=true;b[447]:=true;b[474]:=true;b[477]:=true;\n  b[744]:=true;b[747]:=true;b[774]:=true;b[777]:=true;\n  b[4444]:=true;b[4447]:=true;b[4474]:=true;b[4477]:=true;\n  b[4744]:=true;b[4747]:=true;b[4774]:=true;b[4777]:=true;\n  b[7444]:=true;b[7447]:=true;b[7474]:=true;b[7477]:=true;\n  b[7744]:=true;b[7747]:=true;b[7774]:=true;b[7777]:=true;\n  xx[1]:=4;xx[2]:=7;xx[3]:=44;xx[4]:=47;xx[5]:=74;\n  xx[6]:=77;xx[7]:=444;xx[8]:=447;xx[9]:=474;\n  xx[10]:=477;xx[11]:=744;xx[12]:=747;xx[13]:=774;\n  xx[14]:=777;xx[15]:=4444;xx[16]:=4447;xx[17]:=4474;\n  xx[18]:=4477;xx[19]:=4744;xx[20]:=4747;\n  xx[21]:=4774;xx[22]:=4777;xx[23]:=7444;\n  xx[24]:=7447;xx[25]:=7474;xx[26]:=7477;\n  xx[27]:=7744;xx[28]:=7747;xx[29]:=7774;\n  xx[30]:=7777;\n  for i:=1 to n do\n    read(a[i]);\n  readln;\n  //for i:=1 to n do\n    //if b[a[i]+c[l[i]]] then inc(ss[l[i]]);\n  for i:=1 to pp do\n    for j:=1 to pp do\n      begin\n        if (i-1)*pp+j>n then break;\n        for k:=1 to 30 do\n          inc(s1[i][xx[k]-a[(i-1)*pp+j]]);\n      end;\n  for i:=1 to m do\n    begin\n      //for j:=1 to pp do\n        //begin\n          //for k:=1 to 10 do\n            //write(s1[j][k],' ');\n          //writeln;\n        //end;\n          //for j:=1 to n do\n            //writeln(a[j]+c[l[j]],' ');\n      //writeln;\n      //writeln(i);\n      read(ch);\n      if ch='c' then\n        begin\n          while ch<>' ' do\n            read(ch);\n          readln(x,y);\n          //writeln(x,' ',y);\n          //s:=0;\n          ans:=0;\n          if y-x<pp*2 then\n            begin\n              for j:=x to y do\n                if b[a[j]+c[l[j]]] then\n                  begin\n                    //inc(s);\n                    inc(ans);\n                  end;\n              //writeln(s);\n              writeln(ans);\n              continue;\n            end;\n          x1:=l[x];\n          y1:=l[y];\n          inc(x1);\n          dec(y1);\n          for j:=x1 to y1 do\n            begin\n              //s:=s+ss[j];\n              ans:=ans+s1[j][c[j]];\n            end;\n          for j:=x to l[x]*pp do\n            if b[a[j]+c[l[j]]] then\n              begin\n                //inc(s);\n                inc(ans);\n              end;\n          for j:=(l[y]-1)*pp+1 to y do\n            if b[a[j]+c[l[j]]] then\n              begin\n                //inc(s);\n                inc(ans);\n              end;\n          //writeln(s);\n          writeln(ans);\n        end;\n      if ch='a' then\n        begin\n          read(ch);\n          while ch<>' ' do\n            read(ch);\n          readln(x,y,v);\n          //writeln(x,' ',y,' ',v);\n          if y-x<pp*2 then\n            begin\n              for j:=x to y do\n                begin\n                  //if b[a[j]+c[l[j]]] then dec(ss[l[j]]);\n                  if j>n then break;\n                  for k:=1 to 30 do\n                    begin\n                      dec(s1[l[j]][xx[k]-a[j]]);\n                      inc(s1[l[j]][xx[k]-(a[j]+v)]);\n                    end;\n                  a[j]:=a[j]+v;\n                  //if b[a[j]+c[l[j]]] then inc(ss[l[j]]);\n                end;\n              continue;\n            end;\n          x1:=l[x];\n          y1:=l[y];\n          inc(x1);\n          dec(y1);\n          for j:=x1 to y1 do\n            begin\n              c[j]:=c[j]+v;\n              //ss[j]:=0;\n            end;\n          //for j:=(x1-1)*pp+1 to y1*pp do\n            //if b[a[j]+c[l[j]]] then inc(ss[l[j]]);\n          for j:=x to l[x]*pp do\n            begin\n              if j>n then break;\n              for k:=1 to 30 do\n                begin\n                  dec(s1[l[j]][xx[k]-a[j]]);\n                  inc(s1[l[j]][xx[k]-(a[j]+v)]);\n                end;\n              //if b[a[j]+c[l[j]]] then dec(ss[l[j]]);\n              a[j]:=a[j]+v;\n              //if b[a[j]+c[l[j]]] then inc(ss[l[j]]);\n            end;\n          for j:=(l[y]-1)*pp+1 to y do\n            begin\n              if j>n then break;\n              for k:=1 to 30 do\n                begin\n                  dec(s1[l[j]][xx[k]-a[j]]);\n                  inc(s1[l[j]][xx[k]-(a[j]+v)]);\n                end;\n              //if b[a[j]+c[l[j]]] then dec(ss[l[j]]);\n              a[j]:=a[j]+v;\n              //if b[a[j]+c[l[j]]] then inc(ss[l[j]]);\n\n            end;\n        end;\n\n      //writeln('==');\n      //for j:=1 to n do\n        //writeln(a[j]+c[l[j]]);\n      //writeln;\n      //for j:=1 to n do\n\n        //writeln(ss[i]);\n      //writeln('==');\n    end;\n  //for i:=1 to n do\n    //writeln(a[i]+c[l[i]]);\nend.\n```\n\u65f6\u95f473746ms,\u7a7a\u95f4133836KB\uff0c\u4ee3\u7801\u957f\u5ea64.77KB \u6211\u592a\u849f\u5566\n\n\u8c22\u8c22\u5927\u4f6c\u5de8\u4f6c\u795e\u7287\u795e\u725b\u4eec\u7684\u89c2\u8d4f\n",
        "postTime": 1547629903,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF121E \u3010Lucky Array\u3011"
    },
    {
        "content": "Hello!Every body,\u6211\u60f3\u4f60\u4eec\u6b64\u65f6\u90fd\u5728\u4e3a\u4e00\u9053\u96be\u9898\u800c\u582a\u5fe7\u5427\uff01\u6ca1\u5173\u7cfb\uff0c\u76f8\u4fe1\u6211\uff0c\u8ba9\u6211\u6765\u4e0a\u4ea4\u4e00\u9053\u5173\u4e8eLucky Array\u7684\u4ee3\u7801\u5427\uff01 \u5176\u5b9e\u6b64\u9898\u53ea\u662f\u4e00\u9053\u66b4\u529b\u9898\uff0c\u4f46\u8bb8\u591a\u4eba\u90fd\u4f1a\u53d1\u73b0\uff0c\u7528\u66b4\u529b\u7684\u65b9\u6cd5\u662f\u4f1aTLE\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u91c7\u7528\u4e00\u4e9b\u7b80\u5355\u7684\u601d\u7ef4\u3002 \u4e0b\u9762\u6211\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e00\u79cd\u7b97\u6cd5\u53eb\u505a\u5206\u5757\uff0c\u5206\u5757\u662f\u4ec0\u4e48\uff1f\u5176\u5b9e\u5c31\u662f\u5c06\u6570\u636e\u5206\u6210\u4e00\u6bb5\u6709\u4e00\u6bb5\u7684\u7ebf\u6bb5\u6811\uff0c\u6709\u641c\u7d22\u53bb\u641c\uff0c\u5c31\u53ef\u4ee5\u3002 \u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0b\u9762\u8bf7\u770b\u6211\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<string>\nusing namespace std;\nint b[100005];\nint n,m,l,r,d;\nint a[100001],f[100005];\nstring s;\nvoid add(int i,int j) {\n\twhile(i<=n) {\n\t\tb[i]+=j;\n\t\ti+=(-i)&i;\n\t}\n}\nint count(int i) {\n\tint ans=0;\n\twhile(i>0) {\n\t\tans+=b[i];\n\t\ti-=(-i)&i;\n\t}\n\treturn ans;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tf[4]=1;\n\tf[7]=1;\n\tf[44]=1;\n\tf[47]=1;\n\tf[74]=1;\n\tf[77]=1;\n\tf[444]=1;\n\tf[447]=1;\n\tf[474]=1;\n\tf[477]=1;\n\tf[744]=1;\n\tf[747]=1;\n\tf[774]=1;\n\tf[777]=1;\n\tf[4444]=1;\n\tf[4447]=1;\n\tf[4474]=1;\n\tf[4477]=1;\n\tf[4744]=1;\n\tf[4747]=1;\n\tf[4774]=1;\n\tf[4777]=1;\n\tf[7444]=1;\n\tf[7447]=1;\n\tf[7477]=1;\n\tf[7474]=1;\n\tf[7744]=1;\n\tf[7747]=1;\n\tf[7774]=1;\n\tf[7777]=1;\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(f[a[i]]) {\n\t\t\tadd(i,1);\n\t\t}\n\t}\n\tchar c[10];\n\tint l,r,val;\n\tfor(int j=1; j<=m; j++) {\n\t\tscanf(\"\\n%s\",c);\n\t\tif(c[0]=='c') {\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tprintf(\"%d\\n\",count(r)-count(l-1));\n\t\t} else {\n\t\t\tscanf(\"%d%d%d\",&l,&r,&val);\n\t\t\tfor(int i=l; i<=r; i++) {\n\t\t\t\tif(f[a[i]]) {\n\t\t\t\t\tadd(i,-1);\n\t\t\t\t}\n\t\t\t\ta[i]+=val;\n\t\t\t\tif(f[a[i]]) {\n\t\t\t\t\tadd(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u8fd9\u5c31\u662f\u6211\u7684\u4ee3\u7801\uff0c\u867d\u7136\u6ca1\u6709\u7528\u5206\u5757\uff0c\u4f46\u662f\u8db3\u591f\u4e86\u4e3a\u5404\u4f4d\u89e3\u7b54\uff0c\u8fd9\u662f\u4e00\u9053\u66b4\u529b\u4ee3\u7801\uff01",
        "postTime": 1550569370,
        "uid": 112334,
        "name": "HCY55",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF121E \u3010Lucky Array\u3011"
    }
]