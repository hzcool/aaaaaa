[
    {
        "content": "## 1. \u7b97\u6cd5 1\n\n\u56e0\u4e3a\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u505c\u7559\uff0c$T$ \u663e\u7136\u6ee1\u8db3\u53ef\u4e8c\u5206\u6027\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5224\u5b9a\u6027\u95ee\u9898\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u4e2d\u7684\u8ddd\u79bb\u5c0f\u4e8e $mid$ \u7684\u70b9\u8fde\u8fb9\u3002\u5177\u4f53\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\u3002\n\n\u5982\u679c\u6700\u540e\u4ec5\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u5219\u4e0d\u7528\u52a0\u5165\u70b9 $T = mid$ \u53ef\u884c\u3002\n\n\u5173\u4e8e\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u5b98\u65b9 sol \u7ed9\u51fa\u4e86\u4e00\u4e2a $O(n^2)$ \u7684\u57fa\u4e8e\u76ee\u524d\u8fde\u901a\u5757\u4e2a\u6570\u5206\u7c7b\u8ba8\u8bba\u7684\u65b9\u6cd5\u3002\u6211\u5199\u7684\u662f\u4e00\u79cd\u76f8\u5bf9\u66b4\u529b\u7684\u65b9\u6cd5\u3002\n\n\u8003\u8651\u5230\u4e00\u4e2a\u70b9\u53ef\u80fd\u4e14\u4ec5\u53ef\u80fd\u843d\u5728 $a_i - mid, a_i, a_i+mid$ \u4e09\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u5168\u90e8\u79bb\u6563\u5316\u3002\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5e76\u628a\u5f53\u524d\u70b9\u6240\u5728\u7684\u884c\u548c\u5217\u66b4\u529b\u7684 merge \u5230\u4e00\u4e2a\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u4e2d\uff0c\u6bcf\u6b21\u52a0\u5165\u540e\u68c0\u67e5\u5373\u53ef\u3002\u8fd9\u4e2a\u505a\u6cd5\u662f**\u5927\u5e38\u6570**\u7684 $O(n^2\\log n)$\uff0c\u4f46\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u3002\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://codeforces.com/contest/1419/submission/93295033)\n\n\n---\n\n## 2. \u7b97\u6cd5 2\n\n\n\u770b\u4e86 Loveti \u7684\u9898\u89e3\u89c9\u5f97\u5f88\u6709\u610f\u601d\u4e8e\u662f\u53bb\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e24\u53ea log \u7684\u505a\u6cd5\u3002~~\u5b9e\u5728\u4e0d\u4f1a\u4e00\u53ealog\uff0c\u6709\u4f1a\u7684\u5927\u4f6c\u9ebb\u70e6\u6559\u6559\u6211~~\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u6700\u540e\u7684\u95ee\u9898\u7b49\u4ef7\u4e8e\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u88ab\u56db\u4e2a\u8054\u901a\u5757\u5747\u8986\u76d6\u7684\u70b9\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7ebf\u6bb5\u589e\u52a0\u4e00\u79cd\u989c\u8272\uff0c\u5e76\u67e5\u8be2\u5168\u5c40\u6709\u6ca1\u6709\u4e00\u4e2a\u88ab\u56db\u4e2a\u989c\u8272\u8986\u76d6\u7684\u70b9\u3002\n\n\u90a3\u4e48\u7b2c\u4e00\u601d\u8def\u5c31\u662f\u626b\u63cf\u7ebf\u3002\u7136\u540e\u53d1\u73b0\u6211\u4eec\u5e76\u4e0d\u4f1a\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u6709\u6ca1\u6709\u56db\u4e2a\u6570\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u652f\u6301\u5220\u9664\uff0c\u4e8e\u662f\u4e0d\u80fd\u8fdb\u884c\u533a\u95f4\u6216\u4e00\u7c7b\u7684\u4e0d\u53ef\u9006\u64cd\u4f5c\u3002\n\n\u4e8e\u662f\u8003\u8651\u5bf9 $x$ \u8f74\u8fdb\u884c\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\u5206\u6cbb\u4ee5\u540e\u53ea\u6709\u63d2\u5165\u4e86\u53ef\u4ee5\u8fdb\u884c\u533a\u95f4\u6216\u4e86\u3002\n\n\u7136\u800c\u6211\u4eec\u8fd8\u662f\u4e0d\u80fd\u7b80\u5355\u5730\u7ef4\u62a4\u6700\u5927\u503c\u3002\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\u3002~~\u4e5f\u6709\u53ef\u80fd\u662f\u6211naive~~\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u72b6\u538b\u6bcf\u4e2a\u533a\u95f4\u5185\u6bcf\u4e2a\u989c\u8272\u7684\u51fa\u73b0\u6b21\u6570\u6216\u8005\u662f\u5426\u51fa\u73b0\uff0c\u7528 $0-15$ \u4e4b\u95f4\u7684\u6574\u6570\u8868\u793a\u72b6\u6001\u3002\u8fd9\u662f\u5bb9\u6613 pushup \u548c pushdown \u7684\u3002\n\n\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u5c31\u662f $O(2^m n\\log^2 n\\log T)$ \u518d\u5e26\u4e00\u4e2a\u79bb\u6563\u5316\u7684\u5e38\u6570\uff0c\u5176\u4e2d $m \\leqslant 4$\uff0c\u6709\u70b9\u8dd1\u4e0d\u8fc7 $n^2$ \u8001\u54e5\u3002\n\n[\u4ee3\u7801](http://codeforces.com/contest/1419/submission/93602185)\u8fd8\u662f\u5f88\u597d\u5199\u7684\uff0c\u4e0d\u7b97\u6076\u5fc3\u3002\n\n---\n\n## 3. \u7b97\u6cd5 3\n\n\nLoveti \u7ed9\u51fa\u4e86\u4e00\u4e2a log \u7684\u505a\u6cd5\u3002\u5176\u5b9e\u633a naive \u7684\u4f46\u6211\u6ca1\u6709\u6ce8\u610f\u5230\u3002\u83dc\u5f97\u771f\u5b9e\u3002\n\n\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u7ebf\u6bb5\u52a0\u5177\u6709\u7684\u7279\u6b8a\u6027\u8d28\u3002\n\n- \u5355\u70b9\u52a0\u3002\u53ef\u80fd\u4f1a\u6301\u7eed\u5f88\u4e45\u3002\n\n- \u533a\u95f4\u52a0\u3002\u53ea\u4f1a\u6301\u7eed 1\u3002\n\n\u8fd9\u5c31\u542f\u793a\u6211\u4eec\u4e0d\u8981\u5f80\u7ebf\u6bb5\u6811\u4e0a apply \u533a\u95f4\u52a0\uff0c\u53ea apply \u5355\u70b9\u52a0\u3002\u800c\u533a\u95f4\u52a0\u5219\u53ef\u4ee5\u901a\u8fc7\u5904\u7406\u4e4b\u540e\u67e5\u8be2\u6765\u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(2^m n\\log n\\log T)$\u3002\n\n[\u63d0\u4ea4\u8bb0\u5f55\u5728\u8fd9\u513f\u3002](https://codeforces.com/contest/1419/submission/93640848)\n\n\u8fd9\u73a9\u610f\u8fd8\u662f\u8dd1\u4e0d\u8fc7\u66b4\u529b\u8001\u54e5\uff0c\u4f46\u5df2\u7ecf\u8dd1\u5f97\u98de\u5feb\u4e86\u3002\u6216\u8bb8\u662f\u6211\u7684\u5b9e\u73b0\u8fc7\u4e8e\u5954\u653e\u800c\u6ca1\u6709\u4efb\u4f55\u5361\u5e38\u7684\u539f\u56e0\u5427\u3002\n\n---\n\n## 4. \u603b\u7ed3\n\u672c\u6587\u7ed9\u51fa\u7684\u4e09\u4e2a\u7b97\u6cd5\u6d89\u53ca\u4e86\u4e0d\u540c\u65b9\u9762\u7684\u6570\u636e\u7ed3\u6784\u77e5\u8bc6\uff0c\u601d\u7ef4\u96be\u5ea6\u7531\u6d45\u5165\u6df1\uff0c\u5982\u80fd\u4ed4\u7ec6\u7814\u7a76\u4e00\u904d\u5e76\u81ea\u5df1\u5b9e\u73b0\u5e94\u8be5\u80fd\u5927\u6709\u6536\u83b7\u3002\n\n\u82e5\u6709\u4efb\u4f55\u95ee\u9898\u8bf7\u79c1\u4fe1 YLWang\u3002\n\n\u672c\u6587\u7684\u7b2c\u4e09\u4e2a\u4ee3\u7801\u5b9e\u73b0\u540c\u65f6\u4f5c\u4e3a Loveti \u7684\u9898\u89e3\u7684\u4ee3\u7801\u5b9e\u73b0\u3002~~\u5de5\u5177\u4eba YLWang~~\u3002\n\n\u6700\u540e\uff0c\u672c\u9898\u89e3\u524d\u540e\u8017\u65f6\u4e24\u5929\u5199\u6210\u3002\u5e0c\u671b\u89c9\u5f97\u6709\u5e2e\u52a9\u7684\u540c\u5b66\u4eec\u7ed9\u4e00\u4e2a\u8d5e\u8ba9\u66f4\u591a\u4eba\u770b\u5230\u3002\uff08\u5176\u5b9e\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u5728\u535a\u5185\u6c42\u8d5e\uff0c\u56e0\u4e3a\u89c9\u5f97\u8fd9\u7bc7\u6587\u7ae0\u786e\u5b9e\u5f88\u6709\u4ef7\u503c\uff0c\u8fd8\u8bf7\u5e2e\u4e2a\u5fd9\u3002\uff09\n\n",
        "postTime": 1600574298,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1419F \u3010Rain of Fire\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u4e0d\u60f3\u5199\u3002\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13720976.html)\n\n\u573a\u4e0a\u60f3\u4e86 1h+ \u65e0\u679c\uff0c\u4e00\u5230\u573a\u5916\u5c31\u53e3\u80e1\u51fa\u6765\u4e86\uff0c\u6211\u771f\u662f\u4e2a sb\u3002\n\n\u9996\u5148\u6ce8\u610f\u5230\u5982\u679c $t$ \u6ee1\u8db3\u6761\u4ef6\u90a3\u4e48 $t+1$ \u4e5f\u4f1a\u6ee1\u8db3\uff0c\u6240\u4ee5\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u4e8c\u5206\uff0c\u4e8e\u662f\u73b0\u5728\u53ea\u9700\u8981\u8003\u8651\u5bf9\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684 $t$ \u80fd\u5426\u6ee1\u8db3\u3002\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u5e73\u9762\u4e0a\u7684 $u,v,w$ \u4e09\u4e2a\u70b9\u6765\u8bf4\uff0c\u5982\u679c $u$ \u80fd\u5230 $v$\uff0c$v$ \u80fd\u5230 $w$ \u90a3\u4e48 $u$ \u4e00\u5b9a\u80fd\u5230 $w$\u3002\n\n\u65e2\u7136\u8fd9\u4e2a\u53ef\u8fbe\u6027\u662f\u53ef\u4ee5\u4f20\u9012\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u6765\u5c06\u76f8\u4e92\u5230\u7684\u70b9\u7f29\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u5982\u679c\u8fde\u901a\u5757\u4e2a\u6570\u4e3a $1$ \u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\uff0c\u5927\u4e8e $4$ \u5c31\u4e00\u5b9a\u4e0d\u884c\uff0c\u5269\u4e0b\u7684\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\u3002\n\n\u5982\u679c\u8fde\u901a\u5757\u4e2a\u6570\u4e3a $2$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u627e\u51fa\u4e24\u4e2a\u5206\u5c5e\u4e0d\u540c\u8fde\u901a\u5757\u7684\u70b9\uff0c\u7136\u540e\u770b\u770b\u52a0\u4e00\u4e2a\u70b9\u80fd\u4e0d\u80fd\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u70b9\u4e92\u76f8\u53ef\u8fbe\u5373\u53ef\u3002\n\n\u5982\u679c\u8fde\u901a\u5757\u4e2a\u6570\u4e3a $3$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u627e\u51fa\u4e00\u6761\u7ebf\u6bb5\u548c\u4e00\u4e2a\u70b9\uff0c\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u548c\u9009\u51fa\u6765\u7684\u70b9\u5206\u5c5e\u4e09\u4e2a\u4e0d\u540c\u7684\u8fde\u901a\u5757\u3002\u8fd9\u4e2a\u65f6\u5019\u6ce8\u610f\u5230\u52a0\u7684\u90a3\u4e2a\u70b9\u662f\u5df2\u7ecf\u786e\u5b9a\u4e86\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u5224\u65ad\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u5982\u679c\u8fde\u901a\u5757\u4e2a\u6570\u4e3a $4$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u627e\u51fa\u4e24\u6761\u76f8\u4ea4\u7684\u7ebf\u6bb5\uff0c\u56db\u4e2a\u7aef\u70b9\u5206\u5c5e\u4e0d\u540c\u7684\u8fde\u901a\u5757\u3002\u8fd9\u4e2a\u65f6\u5019\u65b0\u52a0\u7684\u90a3\u4e2a\u70b9\u5c31\u662f\u7ebf\u6bb5\u7684\u7aef\u70b9\u3002\u7b80\u5355\u5224\u65ad\u4e00\u4e0b\u53ef\u8fbe\u6027\u5373\u53ef\u3002\n\n\u672c\u9898\u4ee3\u7801\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u5efa\u8bae\u914d\u5408\u4ee3\u7801\u7406\u89e3\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\nconst ll MAXN=1e3+51;\nstruct Tuple{\n\tll x,y;\n\tinline bool operator <(const Tuple &rhs)const\n\t{\n\t\treturn this->x==rhs.x?this->y<rhs.y:this->x<rhs.x;\n\t}\n};\nmap<ll,vector<Tuple>>row,col;\nll n,totr,totc,l,r,mid,res=-1;\nll ffa[MAXN],x[MAXN],y[MAXN],bel[MAXN],rows[MAXN],cols[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline ll find(ll x)\n{\n\treturn x==ffa[x]?x:ffa[x]=find(ffa[x]);\n}\ninline void merge(ll x,ll y)\n{\n\tll fx=find(x),fy=find(y);\n\tif(fx!=fy)\n\t{\n\t\tffa[fy]=fx;\n\t}\n}\ninline ll check(ll mid)\n{\n\tll blk=0,p,q,r,s,lx,rx;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tffa[i]=i;\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif(x[i]==x[j]&&abs(y[i]-y[j])<=mid)\n\t\t\t{\n\t\t\t\tmerge(i,j);\n\t\t\t}\n\t\t\tif(y[i]==y[j]&&abs(x[i]-x[j])<=mid)\n\t\t\t{\n\t\t\t\tmerge(i,j);\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tblk+=(find(i)==i);\n\t}\n\tif(blk==1)\n\t{\n\t\treturn 1;\n\t}\n\tif(blk>4)\n\t{\n\t\treturn 0;\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tbel[i]=ffa[i];\n\t}\n\tif(blk==2)\n\t{\n\t\tfor(register int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(register int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(bel[i]==bel[j])\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(x[i]==x[j]&&abs(y[i]-y[j])<=2*mid)\n\t\t\t\t{\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif(y[i]==y[j]&&abs(x[i]-x[j])<=2*mid)\n\t\t\t\t{\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif(abs(x[i]-x[j])<=mid&&abs(y[i]-y[j])<=mid)\n\t\t\t\t{\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tif(blk==3)\n\t{\n\t\tvector<Tuple>v;\n\t\tfor(register int i=1;i<=totr;i++)\n\t\t{\n\t\t\tfor(register int j=1;j<row[rows[i]].size();j++)\n\t\t\t{\n\t\t\t\tp=row[rows[i]][j-1].y,q=row[rows[i]][j].y;\n\t\t\t\tbel[p]!=bel[q]?v.push_back((Tuple){p,q}):(void)1;\n\t\t\t}\n\t\t}\n\t\tfor(register int i=1;i<=totc;i++)\n\t\t{\n\t\t\tfor(register int j=1;j<col[cols[i]].size();j++)\n\t\t\t{\n\t\t\t\tp=col[cols[i]][j-1].y,q=col[cols[i]][j].y;\n\t\t\t\tbel[p]!=bel[q]?v.push_back((Tuple){p,q}):(void)1;\n\t\t\t}\n\t\t}\n\t\tfor(register int i=0;i<v.size();i++)\n\t\t{\n\t\t\tp=v[i].x,q=v[i].y;\n\t\t\tfor(register int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(bel[p]==bel[j]||bel[q]==bel[j])\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(x[p]==x[q])\n\t\t\t\t{\n\t\t\t\t\tlx=min(y[p],y[q]),rx=max(y[p],y[q]);\n\t\t\t\t\tif(y[j]>lx&&y[j]<rx&&abs(x[j]-x[p])<=mid)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(abs(y[j]-y[p]<=mid)&&abs(y[j]-y[q])<=mid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlx=min(x[p],x[q]),rx=max(x[p],x[q]);\n\t\t\t\t\tif(x[j]>lx&&x[j]<rx&&abs(y[j]-y[p])<=mid)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(abs(x[j]-x[p]<=mid)&&abs(x[j]-x[q])<=mid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tif(blk==4)\n\t{\n\t\tvector<Tuple>vx,vy;\n\t\tfor(register int i=1;i<=totr;i++)\n\t\t{\n\t\t\tfor(register int j=1;j<row[rows[i]].size();j++)\n\t\t\t{\n\t\t\t\tp=row[rows[i]][j-1].y,q=row[rows[i]][j].y;\n\t\t\t\tbel[p]!=bel[q]?vx.push_back((Tuple){p,q}):(void)1;\n\t\t\t}\n\t\t}\n\t\tfor(register int i=1;i<=totc;i++)\n\t\t{\n\t\t\tfor(register int j=1;j<col[cols[i]].size();j++)\n\t\t\t{\n\t\t\t\tp=col[cols[i]][j-1].y,q=col[cols[i]][j].y;\n\t\t\t\tbel[p]!=bel[q]?vy.push_back((Tuple){p,q}):(void)1;\n\t\t\t}\n\t\t}\n\t\tfor(register int i=0;i<vx.size();i++)\n\t\t{\n\t\t\tfor(register int j=0;j<vy.size();j++)\n\t\t\t{\n\t\t\t\tp=vx[i].x,q=vx[i].y,r=vy[j].x,s=vy[j].y,lx=x[p],rx=y[r];\n\t\t\t\tif(bel[p]==bel[r]||bel[p]==bel[s])\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(bel[q]==bel[r]||bel[q]==bel[s])\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(y[r]<=min(y[p],y[q])||y[r]>=max(y[p],y[q]))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(x[p]<=min(x[r],x[s])||x[p]>=max(x[r],x[s]))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(abs(rx-y[p])<=mid&&abs(rx-y[q])<=mid)\n\t\t\t\t{\n\t\t\t\t\tif(abs(lx-x[r])<=mid&&abs(lx-x[s])<=mid)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}\nint main()\n{\n\tn=read(),r=2e9;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\trows[++totr]=x[i]=read(),cols[++totc]=y[i]=read();\n\t\trow[x[i]].push_back((Tuple){y[i],i});\n\t\tcol[y[i]].push_back((Tuple){x[i],i});\n\t} \n\tsort(rows+1,rows+totr+1),sort(cols+1,cols+totc+1);\n\ttotr=unique(rows+1,rows+totr+1)-rows-1;\n\ttotc=unique(cols+1,cols+totc+1)-cols-1;\n\tfor(register int i=1;i<=totr;i++)\n\t{\n\t\tsort(row[rows[i]].begin(),row[rows[i]].end());\n\t}\n\tfor(register int i=1;i<=totc;i++)\n\t{\n\t\tsort(col[cols[i]].begin(),col[cols[i]].end());\n\t}\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tcheck(mid)?res=mid,r=mid-1:l=mid+1;\n\t}\n\tprintf(\"%d\\n\",res);\n}\n```",
        "postTime": 1600748997,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1419F \u3010Rain of Fire\u3011"
    },
    {
        "content": "\u679c\u7136 $\\rm{CF}$ \u9053\u9053\u90fd\u662f\u7ed3\u8bba\u9898\uff08\u96fe\n\n\u8d5b\u65f6\u9898\u610f\u7406\u89e3\u9519\u4e86\uff0c\u6839\u672c\u6ca1\u5f00\u3002\n\n\u4e0d\u96be\u60f3\u5230\u4e8c\u5206\u6700\u5927\u8ddd\u79bb $mid$\uff0c\u90a3\u4e48\u4e0d\u5927\u4e8e\u6700\u5927\u8ddd\u79bb\u7684\u70b9\u80fd\u591f\u76f8\u4e92\u5230\u8fbe\uff0c\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u73b0\u5728\u8003\u8651\u5224\u65ad\u80fd\u5426\u52a0\u4e00\u4e2a\u70b9\u5c06\u8fd9\u4e9b\u8fde\u901a\u5757\u5168\u90e8\u8fde\u901a\u4e3a\u4e00\u4e2a\uff0c\u5176\u5b9e\u5c31\u662f\u4e8c\u5206\u7684 $\\text{check}$ \u51fd\u6570\u3002\u6839\u636e\u9e3d\u5de2\u539f\u7406\uff0c\u518d\u9002\u5f53\u7684\u4f7f\u7528\u53cd\u8bc1\u6cd5\uff0c\u53ef\u4ee5\u8bc1\u51fa\u5f53\u8fde\u901a\u5757\u4e2a\u6570 $> 4$ \u65f6\u4e00\u5b9a\u65e0\u89e3\u3002\u6b64\u5904\u5c31\u4e0d\u8bc1\u4e86\uff08\u9003\n\n\u90a3\u4e48\u5bf9\u4e8e\u8fde\u901a\u5757\u4e2a\u6570\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\uff0c\u6b64\u5904\u5c06\u8fde\u901a\u5757\u4e2a\u6570\u8bb0\u4f5c $cnt$\u3002\n\n- $cnt=1$ \u65f6\uff0c\u53ea\u5b58\u5728\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u663e\u7136\u6709\u89e3\n- $cnt=2$ \u65f6\uff0c\u679a\u4e3e\u4e24\u4e2a\u70b9\u5224\u65ad\n- $cnt=3$ \u65f6\uff0c\u679a\u4e3e\u4e00\u6761\u7ebf\u6bb5\u548c\u4e00\u4e2a\u70b9\uff0c\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u5c5e\u4e0d\u540c\u7684\u8fde\u901a\u5757\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u5b58\u5728\u4e09\u4e2a\u70b9\u4e2d\u4efb\u610f\u4e24\u70b9\u4e0d\u5171\u7ebf\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u4e00\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\n- $cnt=4$ \u65f6\uff0c\u679a\u4e3e\u4e24\u6761\u7ebf\u6bb5\uff0c\u4e24\u6761\u7ebf\u6bb5\u7684\u56db\u4e2a\u7aef\u70b9\u90fd\u5206\u5c5e\u4e0d\u540c\u7684\u8fde\u901a\u5757\uff0c\u5206\u6790\u540c\u4e0a\n\n\u56e0\u4e3a $2 \\leq cnt\\leq 4$ \u65f6\u7684\u679a\u4e3e\u90fd\u662f $O(n^2)$ \u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5728 $O(n^2 \\log 2\\times 10^9)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8be5\u95ee\u9898\u3002\n\n\u8fd9\u4e2a\u4ee3\u7801\u5199\u7684\u6709\u70b9\u751f\u8349\uff0c\u968f\u4fbf\u770b\u770b\u5c31\u597d\uff08\uff08\uff08\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<functional>\ntypedef long long ll;\nint n,block_cnt;\nint fa[1005],bel[1005],cx[1005],cy[1005];\nstruct position {int x,y;} a[1005];\nstd::vector<std::pair<int,int> > row[1005],col[1005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline int abs(int x) {return x<0? -x:x;}\ninline int find(int x) {return x==fa[x]? x:fa[x]=find(fa[x]);}\ninline void merge(int x,int y) {int fx=find(x),fy=find(y); if(fx!=fy) {--block_cnt;fa[fy]=fx;}}\ninline bool CheckPoint(int x1,int y1,int x2,int y2,int lim) {\n\tif(x1==x2&&abs(y1-y2)<=2ll*lim) return 1;\n\tif(y1==y2&&abs(x1-x2)<=2ll*lim) return 1;\n\tif(abs(x1-x2)<=lim&&abs(y1-y2)<=lim) return 1;\n\treturn 0;\n}\ninline bool check(ll lim) {\n\tblock_cnt=n;\n\tfor(register int i=1;i<=n;++i) fa[i]=i;\n\tfor(register int i=1;i<=n;++i) {\n\t\tfor(register int j=i+1;j<=n;++j) {\n\t\t\tif(a[i].x==a[j].x&&abs(a[i].y-a[j].y)<=lim) merge(i,j);\n\t\t\tif(a[i].y==a[j].y&&abs(a[i].x-a[j].x)<=lim) merge(i,j);\n\t\t}\n\t}\n\tif(block_cnt>4) return 0;\n\tfor(register int i=1;i<=n;++i) bel[i]=find(i);\n\tif(block_cnt==1) return 1;\n\telse if(block_cnt==2) {//point and point\n\t\tfor(register int i=1;i<=n;++i) { \n\t\t\tfor(register int j=i+1;j<=n;++j) {\n\t\t\t\tif(bel[i]==bel[j]) continue;\n\t\t\t\tif(CheckPoint(a[i].x,a[i].y,a[j].x,a[j].y,lim)) return 1;\n\t\t\t}\n\t\t}\n\t}\n\telse if(block_cnt==3) {\n\t\tfor(register int i=1;i<=cx[0];++i) {\n\t\t\tll curx=cx[i];\n\t\t\tfor(register int j=1;j<row[i].size();++j) {\n\t\t\t\tint index_L=row[i][j-1].second,index_R=row[i][j].second;\n\t\t\t\tll yL=row[i][j-1].first,yR=row[i][j].first;\n\t\t\t\tif(bel[index_L]!=bel[index_R]&&yR-yL<=2ll*lim) {\n\t\t\t\t\tfor(register int k=1;k<=n;++k) {\n\t\t\t\t\t\tif(bel[index_L]==bel[k]||bel[index_R]==bel[k]) continue;\n\t\t\t\t\t\tif(!(yR-lim<=a[k].y&&a[k].y<=yL+lim)) continue;\n\t\t\t\t\t\tif(abs(a[k].x-curx)<=lim) return 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(register int i=1;i<=cy[0];++i) {\n\t\t\tll cury=cy[i];\n\t\t\tfor(register int j=1;j<col[i].size();++j) {\n\t\t\t\tint index_L=col[i][j-1].second,index_R=col[i][j].second;\n\t\t\t\tll xL=col[i][j-1].first,xR=col[i][j].first;\n\t\t\t\tif(bel[index_L]!=bel[index_R]&&xR-xL<=2ll*lim) {\n\t\t\t\t\tfor(register int k=1;k<=n;++k) {\n\t\t\t\t\t\tif(bel[index_L]==bel[k]||bel[index_R]==bel[k]) continue;\n\t\t\t\t\t\tif(!(xR-lim<=a[k].x&&a[k].x<=xL+lim)) continue;\n\t\t\t\t\t\tif(abs(a[k].y-cury)<=lim) return 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {//Successful\n\t\tfor(register int i=1;i<=cx[0];++i) {\n\t\t\tll curx=cx[i];\n\t\t\tfor(register int j=1;j<row[i].size();++j) {\n\t\t\t\tint index_L_1=row[i][j-1].second,index_R_1=row[i][j].second;\n\t\t\t\tll yL=row[i][j-1].first,yR=row[i][j].first;\n\t\t\t\tif(bel[index_L_1]==bel[index_R_1]) continue;\n\t\t\t\tfor(register int k=1;k<=cy[0];++k) {\n\t\t\t\t\tll cury=cy[k];\n\t\t\t\t\tfor(register int l=1;l<col[k].size();++l) {\n\t\t\t\t\t\tint index_L_2=col[k][l-1].second,index_R_2=col[k][l].second;\n\t\t\t\t\t\tll xL=col[k][l-1].first,xR=col[k][l].first;\n\t\t\t\t\t\tif(bel[index_L_2]==bel[index_R_2]) continue;\n\t\t\t\t\t\tif(bel[index_L_2]==bel[index_L_1]||bel[index_L_2]==bel[index_R_1]) continue;\n\t\t\t\t\t\tif(bel[index_R_2]==bel[index_L_1]||bel[index_R_2]==bel[index_R_1]) continue;\n\t\t\t\t\t\tif(!(xR-lim<=curx&&curx<=xL+lim)) continue;\n\t\t\t\t\t\tif(!(yR-lim<=cury&&cury<=yR+lim)) continue;\n\t\t\t\t\t\tif(abs(curx-xL)>lim||abs(curx-xR)>lim) continue;\n\t\t\t\t\t\tif(abs(cury-yL)>lim||abs(cury-yR)>lim) continue;\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main() {\n\tn=read();\n\tfor(register int i=1;i<=n;++i) {\n\t\ta[i].x=read();a[i].y=read();\n\t\tcx[++cx[0]]=a[i].x;cy[++cy[0]]=a[i].y;\n\t}\n\tstd::sort(cx+1,cx+1+cx[0]); std::sort(cy+1,cy+1+cy[0]);\n\tcx[0]=std::unique(cx+1,cx+1+cx[0])-cx-1; cy[0]=std::unique(cy+1,cy+1+cy[0])-cy-1;\n\tfor(register int i=1;i<=n;++i) {\n\t\tint curx=std::lower_bound(cx+1,cx+1+cx[0],a[i].x)-cx,cury=std::lower_bound(cy+1,cy+1+cy[0],a[i].y)-cy;\n\t\trow[curx].push_back(std::make_pair(a[i].y,i));\n\t\tcol[cury].push_back(std::make_pair(a[i].x,i));\n\t}\n\tfor(register int i=1;i<=cx[0];++i) std::sort(row[i].begin(),row[i].end());\n\tfor(register int i=1;i<=cy[0];++i) std::sort(col[i].begin(),col[i].end());\t\n\tint l=0,r=2e9,res=-1;\n\twhile(l<=r) {\n\t\tint mid=1ll*l+1ll*r>>1;\n\t\tif(check(mid)) res=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n```",
        "postTime": 1600750920,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1419F \u3010Rain of Fire\u3011"
    },
    {
        "content": "Upd3 on 2020/9/25:\n\n\u606d\u559c YL\u00b7\u5de5\u5177\u4eba\u00b7\u9e3d\u5b50\u00b7Wang \u6210\u529f\u4f7f\u7528 $O(2^4nlog nlogT)$ \u7684\u590d\u6742\u5ea6\u901a\u8fc7\u4e86\u672c\u9898\uff0c\u8fd9\u4e5f\u8bc1\u660e\u4e86\u6211\u4e0b\u9762\u63cf\u8ff0\u7684\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u3002\n\n\u5927\u5bb6\u53ef\u4ee5\u53bb[\u4ed6\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/YLWang/solution-cf1419f#)\u91cc\u5e2e\u4ed6\u70b9\u4e2a\u8d5e\uff0c\u4e5f\u975e\u5e38\u611f\u8c22\u4ed6\u6240\u505a\u51fa\u7684\u8d21\u732e\uff08\n\n\u5728 $n=1000$ \u7684\u60c5\u51b5\u4e0b\u4e0a\u9762\u7684\u505a\u6cd5\u88ab\u66b4\u529b\u8001\u54e5\u6309\u5728\u5730\u4e0a\u6376\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a $n$ \u5f00\u5230 $10^5$\uff08\n\nUpd2 on 2020/9/24:\n\nYLWang \u795e\u4ed9\u8bf4\u8fd9\u4e1c\u897f\u6709\u4e00\u90e8\u5206\u5047\u6389\u4e86\uff0c\u4fee\u4e86\u4e00\u4e0b\u90e8\u5206\u5185\u5bb9\n\nUpd1 on 2020/9/24:\n\n\u770b\u5230\u4e86 YLWang \u795e\u4ed9\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u628a\u6211\u90a3\u4e2a\u8f6c\u5316\u540e\u7684\u6570\u636e\u7ed3\u6784\u9898\uff08\u96fe\uff09\u5207\u6389\u4e86\uff0c\u7279\u522b\u5f00\u5fc3\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u662f\u672c\u9898\u552f\u4e00\u7684\u4e00\u4e2a\u4f18\u5316\u590d\u6742\u5ea6\u7684\u65b9\u5411\u4e86\u3002\u4f46\u662f\u4ed6\u7684\u505a\u6cd5\u662f $2$ \u53ea $log$ \u7684\uff08\u9664\u53bb\u4e8c\u5206\u7684\u90e8\u5206\uff09\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u5e94\u8be5\u53ef\u4ee5\u505a\u5230 $1$ \u53ea $log$\uff0c\u8fd9\u91cc\u8be6\u7ec6\u8bf4\u660e\u4e00\u4e0b\u3002\n\n\u4e4b\u524d\u6ca1\u770b\u8fc7\u8fd9\u7bc7\u9898\u89e3\u7684\u53ef\u4ee5\u5148\u770b\u5b8c\u539f\u7b54\u6848\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u73b0\u5728\u4f60\u6709 $n$ \u6b21\u64cd\u4f5c $(n\\le 1000)$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u7ed9\u5b9a\u4e00\u4e2a\u70b9\u7684\u5750\u6807 $(x,y)$ \u548c\u4e24\u4e2a\u6b63\u6574\u6570 $t,id$\uff0c$(|x|,|y|\\le 10^9)$\u4e14\u5747\u4e3a\u6574\u70b9\n\n\u5bf9\u4e8e $id=1$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f60\u9700\u8981\u628a\u6240\u6709\u8ddd\u79bb $(x,y)$ \u4e3a $t$ \u7684\u6574\u70b9\u5168\u90e8\u67d3\u6210\u7ea2\u8272\u3002\n\n\u5bf9\u4e8e $id=2$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f60\u9700\u8981\u628a\u6240\u6709\u8ddd\u79bb $(x,y)$ \u4e3a $t$ \u7684\u6574\u70b9\u5168\u90e8\u67d3\u6210\u84dd\u8272\u3002\n\n\u5bf9\u4e8e $id=3$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f60\u9700\u8981\u628a\u6240\u6709\u8ddd\u79bb $(x,y)$ \u4e3a $t$ \u7684\u6574\u70b9\u5168\u90e8\u67d3\u6210\u7d2b\u8272\u3002\n\n\u5bf9\u4e8e $id=4$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f60\u9700\u8981\u628a\u6240\u6709\u8ddd\u79bb $(x,y)$ \u4e3a $t$ \u7684\u6574\u70b9\u5168\u90e8\u67d3\u6210\u7eff\u8272\u3002\n\n\u6c42\u6700\u540e\u5e73\u9762\u4e0a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\u662f\u56db\u8272\u7684\u3002\n\n\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u968f\u4fbf\u627e\u4e2a\u7ef4\u5ea6\u626b\uff0c\u6bd4\u5982\u8bf4\u4ece\u4e0a\u5f80\u4e0b\u626b\u5427\n\n\u8003\u8651\u7ef4\u62a4\u5217\u7684\u7ebf\u6bb5\u6811\uff0c\n\n\u6bcf\u6b21\u626b\u5230\u4e00\u5217\u5c31\u628a\u90a3\u5217\u7684\u90a3\u4e2a\u989c\u8272\u5355\u70b9 $+1$\uff0c\u90a3\u5217\u7ed3\u675f\u540e\u5c31\u5355\u70b9 $-1$\n\n\u6bcf\u6b21\u626b\u5230\u4e00\u884c\uff0c\u5c31\u628a\u90a3\u4e00\u884c\u5206\u6210 $k$ \u6bb5\uff0c\u6bcf\u4e00\u6bb5\u5bf9\u5e94\u7684\u989c\u8272\u8865\u96c6\u662f\u76f8\u540c\u7684\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u67e5\u8be2\u4e00\u4e0b\u662f\u5426\u5b58\u5728\u64cd\u4f5c\u989c\u8272\u7684\u8865\u96c6\u5c31\u597d\u4e86\u3002\n\n\u8fd8\u8981\u6ce8\u610f\u7684\u662f\u626b\u5230\u5217\u7684\u65f6\u5019\u4e5f\u8981\u5224\u65ad\u662f\u5426\u8fbe\u6210\u76ee\u6807\uff08\u53ef\u80fd\u4e00\u4e2a\u70b9\u88ab\u5217\u626b\u4e86 $4$ \u6b21\u4e4b\u7c7b\u7684\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f $O(nlogn*2^4)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n*2^4)$\n\n---\n\n\u539f\u7b54\u6848\uff1a\n\n\u8fd9\u91cc\u7ed9\u4e00\u79cd\u6bd4\u8f83\u8822\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u4e8c\u5206\u7b54\u6848 $t$\uff0c\u628a\u8ddd\u79bb\u6bcf\u4e2a\u70b9\u5c0f\u4e8e $t$ \u7684\u70b9 $\\text{merge}$ \u8fdb\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u90a3\u4e48\u8fd9\u6837\u5c31\u6709 $k$ \u4e2a\u96c6\u5408\n\n\u5982\u679c $k=1$ \u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u52a0\u70b9\n\n\u5982\u679c $k>4$ \u90a3\u4e48\u4e0d\u7ba1\u600e\u4e48\u52a0\u70b9\u90fd\u4e0d\u53ef\u80fd\u6210\u7acb\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff1a\u6211\u4eec\u8003\u8651\u5b58\u5728\u4e00\u4e2a\u70b9 $(x,y)$ \u6ee1\u8db3\u8fd9\u4e2a\u70b9\u5230 $k$ \u4e2a\u96c6\u5408\u7684\u6700\u8fd1\u8ddd\u79bb $\\le t$\uff0c\u90a3\u4e48\u6839\u636e\u5495\u5de2\u539f\u7406\uff0c\u81f3\u5c11\u6709 $k-3$ \u4e2a\u4e0e\u6dfb\u52a0\u70b9\u5339\u914d\u7684\u70b9\u5728\u540c\u4e00\u4e2a\u65b9\u5411\u4e0a\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5728\u540c\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u70b9\u5e94\u8be5\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u4e0e $k>4$ \u77db\u76fe\n\n\u5177\u4f53\u7684\uff0c\u4e0a\u4e2a\u56fe ![](https://cdn.luogu.com.cn/upload/image_hosting/ywm7j2os.png)\n\n\u6bd4\u5982\u8bf4\u4e0a\u5e45\u56fe\u4e2d\uff0c$(0,2)$\u5c31\u662f\u6211\u4eec\u8981\u6dfb\u52a0\u7684\u70b9\uff0c$k=5$\n\n\u4f60\u4f1a\u53d1\u73b0\u4e0b\u9762\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u65b9\u5411\u4e0a\uff0c\u5982\u679c\u66f4\u8fdc\u7684\u90a3\u4e2a\u70b9\u8ddd\u79bb $(0.2)\\le t$ \u90a3\u4e48\u8fd9\u4e9b\u5728\u540c\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5168\u90fd $\\le t$\uff0c\u8fd9\u4e9b\u70b9\u5c31\u90fd\u5e94\u8be5\u88ab $\\text{merge}$ \u5230\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u63a8\u51fa\u77db\u76fe\u3002\n\n\u7136\u540e\u5c31\u662f\u6570\u636e\u7ed3\u6784\u5b66\u50bb\u7efc\u5408\u75c7\u7684\u60a3\u8005\u7ed9\u5927\u5bb6\u5e26\u6765\u7684\u65e0\u8111\u505a\u6cd5\u4e86\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5206\u7c7b\u8ba8\u8bba $k$\uff0c\u53cd\u6b63 $k$ \u6700\u5927\u4e5f\u5c31 $4$\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\u7684\u70b9$(id,x,y)$\uff08$id$ \u8868\u793a\u96c6\u5408\u7f16\u53f7\uff09\uff0c\u628a\u6240\u6709\u8ddd\u79bb $(x,y)\\le t$ \u7684\u70b9\u5168\u90e8\u67d3\u6210 $id$ \u8272\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u5982\u679c\u5b58\u5728 $k$ \u79cd\u989c\u8272\uff0c\u8fd9\u4e2a\u65b9\u6848\u5c31\u662f\u53ef\u884c\u7684\u3002\n\n\u5177\u4f53\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u628a\u70b9\u79bb\u6563\u5316\uff0c\u5982\u679c\u66b4\u529b\u67d3\u8272\u7684\u8bdd\u67d3\u8272\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u5230 $O(nlogn)$(\u6216\u8bb8\u53ef\u80fd\u53ef\u4ee5 $O(n)$)\n",
        "postTime": 1600670047,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1419F \u3010Rain of Fire\u3011"
    },
    {
        "content": "\u82e5$t+1$\u65f6\u8fde\u901a\uff0c\u663e\u7136$t$\u4e5f\u8fde\u901a\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\u4e8c\u5206\u7b54\u6848\u540e\uff0c\u5148\u5e76\u67e5\u96c6\u627e\u4e00\u4e0b\u8fde\u901a\u5757\uff08\u5373\u628a\u540c\u884c\u6216\u540c\u5217\u4e14\u8ddd\u79bb\u5c0f\u4e8e$mid$\u7684\u5f52\u4e3a\u4e00\u4e2a\u5757\uff0c\u8bbe\u8fde\u901a\u5757\u6570$cnt$\u3002\n\n\u5148\u5904\u7406\u6389\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c$cnt=1$\u65f6\u5408\u6cd5\uff0c$cnt>4$\u4e0d\u5408\u6cd5\u3002\n\n\u5f53$cnt=2$\u65f6\uff0c\u5728\u4e24\u4e2a\u8fde\u901a\u5757\u91cc\u5404\u627e\u4e00\u4e2a\u70b9\uff0c\u5224\u65ad\u662f\u5426\u80fd\u52a0\u4e00\u4e2a\u70b9\u8fde\u901a\u8fd9\u4e24\u4e2a\u70b9\uff08\u5373\u8fde\u901a\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\uff09\uff0c\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u5f53$cnt=3$\u65f6\uff0c\u5148\u627e\u51fa\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\u7684\u76f8\u90bb\u7684\u70b9\u6784\u6210\u7684\u7ebf\u6bb5\uff0c\u7136\u540e\u518d\u679a\u4e3e\u70b9\uff0c\u5224\u65ad\u662f\u5426\u80fd\u52a0\u4e00\u4e2a\u70b9\u8fde\u901a\u8fd9\u4e09\u4e2a\u70b9\u3002\u7ebf\u6bb5\u7684\u6570\u91cf\u7ea7\u4e3a$O(n)$\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4ecd\u4e3a$O(n^2)$\u3002\n\n\u5f53$cnt=4$\uff0c\u627e\u51fa\u6a2a\u7684\u7ebf\u6bb5\u548c\u7ad6\u7684\u7ebf\u6bb5\uff0c\u679a\u4e3e\u5224\u65ad\u7ebf\u6bb5\u4ea4\u70b9\u80fd\u5426\u8fde\u901a\u56db\u4e2a\u70b9\uff0c\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u4e0a\u8ff0\u679a\u4e3e\u65f6\uff0c\u8981\u5148\u5224\u65ad\u70b9\u6216\u7ebf\u6bb5\u662f\u5426\u5df2\u7ecf\u5728\u540c\u4e00\u8fde\u901a\u5757\u5185\u3002\n\n\u6574\u4f53\u590d\u6742\u5ea6$O(n^2\\ log\\ n)$\u3002\n\n\u4e0d\u592a\u4f1a\u7528$STL$\uff0c\u4ee3\u7801\u5199\u7684\u6709\u70b9\u70b8\u88c2\u3002\n\n$Code\\ Below:$\n```cpp\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define int long long\n#define hh puts(\"\")\n#define pc putchar\n#define pii pair<int,int>\n#define mp make_pair\n#define fi first\n#define se second\n//#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n//char buf[1<<21],*p1=buf,*p2=buf;\nusing namespace std;\nconst int N=1005;\nint n,x[N],y[N],ans=-1,f[N],cnt,hang[N],lie[N],gs1,gs2,bel[N];\nstruct node{\n    int val,id;\n    friend bool operator < (node A,node B){\n        return A.val<B.val;\n    }\n};\nmap<int,vector<node>> u,v;\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-1;ch=getchar();}\n    while(isdigit(ch)){ret=ret*10+(ch^48);ch=getchar();}\n    return ret*ff;\n}\nvoid write(int x){if(x<0){x=-x,pc('-');}if(x>9) write(x/10);pc(x%10+48);}\nvoid writeln(int x){write(x),hh;}\nvoid writesp(int x){write(x),pc(' ');}\nint find(int A){\n    return f[A]==A?A:f[A]=find(f[A]);\n}\nvoid uni(int A,int B){\n    int tx=find(A),ty=find(B);\n    if(tx!=ty) f[tx]=ty,cnt--;\n}\nbool check(int len){\n    cnt=n;\n    for(int i=1;i<=n;i++) f[i]=i;\n    for(int i=1;i<=n;i++)\n        for(int j=i+1;j<=n;j++){\n            if(x[i]==x[j]||y[i]==y[j]){\n                int dis=abs(x[i]-x[j])+abs(y[i]-y[j]);\n                if(dis<=len) uni(i,j);\n            }\n        }\n    if(cnt==1) return 1;\n    if(cnt>4) return 0;\n    for(int i=1;i<=n;i++) bel[i]=find(i);\n    if(cnt==2){//O(n) point and O(n) point\n        for(int i=1;i<=n;i++){\n            for(int j=i+1;j<=n;j++){\n                if(bel[i]==bel[j]) continue;\n                if(x[i]==x[j]&&abs(y[i]-y[j])<=2*len) return 1;\n                if(y[i]==y[j]&&abs(x[i]-x[j])<=2*len) return 1;\n                if(abs(x[i]-x[j])<=len&&abs(y[i]-y[j])<=len) return 1; \n            }\n        }\n        return 0;\n    }\n    if(cnt==3){//O(n) segment and O(n) point\n        vector<pii> seg;\n        for(int i=1;i<=gs1;i++){\n            for(int j=1;j<u[hang[i]].size();j++){\n                if(bel[u[hang[i]][j-1].id]!=bel[u[hang[i]][j].id]){\n                    seg.push_back(mp(u[hang[i]][j-1].id,u[hang[i]][j].id));\n                }\n            }\n        }\n        for(int i=1;i<=gs2;i++){\n            for(int j=1;j<v[lie[i]].size();j++){\n                if(bel[v[lie[i]][j-1].id]!=bel[v[lie[i]][j].id]){\n                    seg.push_back(mp(v[lie[i]][j-1].id,v[lie[i]][j].id));\n                }\n            }\n        }\n        for(int t=0;t<seg.size();t++){\n            int i=seg[t].fi,j=seg[t].se;\n            for(int k=1;k<=n;k++){\n                if(bel[i]==bel[k]||bel[j]==bel[k]) continue;\n                if(x[i]==x[j]){\n                    int L=min(y[i],y[j]),R=max(y[i],y[j]);\n                    if(y[k]>L&&y[k]<R)\n                        if(abs(x[k]-x[i])<=len&&abs(y[k]-y[i])<=len&&abs(y[k]-y[j])<=len)\n                            return 1;\n                }\n                else{\n                    int L=min(x[i],x[j]),R=max(x[i],x[j]);\n                    if(x[k]>L&&x[k]<R)\n                        if(abs(y[k]-y[i])<=len&&abs(x[k]-x[i])<=len&&abs(x[k]-x[j])<=len)\n                            return 1;\n                }\n            }\n        }\n        return 0;\n    }\n    if(cnt==4){//O(n) segment and O(n) segment\n        vector<pii> segx,segy;\n        for(int i=1;i<=gs1;i++){\n            for(int j=1;j<u[hang[i]].size();j++){\n                if(bel[u[hang[i]][j-1].id]!=bel[u[hang[i]][j].id]){\n                    segx.push_back(mp(u[hang[i]][j-1].id,u[hang[i]][j].id));\n                }\n            }\n        }\n        for(int i=1;i<=gs2;i++){\n            for(int j=1;j<v[lie[i]].size();j++){\n                if(bel[v[lie[i]][j-1].id]!=bel[v[lie[i]][j].id]){\n                    segy.push_back(mp(v[lie[i]][j-1].id,v[lie[i]][j].id));\n                }\n            }\n        }\n        for(int t1=0;t1<segx.size();t1++){\n            for(int t2=0;t2<segy.size();t2++){\n                int i=segx[t1].fi,j=segx[t1].se;//i!=j\n                int p=segy[t2].fi,q=segy[t2].se;//p!=q\n                if(bel[i]==bel[p]||bel[i]==bel[q]||bel[j]==bel[p]||bel[j]==bel[q]) continue;\n                if(y[p]<=min(y[i],y[j])||y[p]>=max(y[i],y[j])) continue;\n                if(x[i]<=min(x[p],x[q])||x[i]>=max(x[p],x[q])) continue;\n                int X=x[i],Y=y[p];\n                if(abs(Y-y[i])<=len&&abs(Y-y[j])<=len&&abs(X-x[p])<=len&&abs(X-x[q])<=len) return 1;\n            }\n        }\n        return 0;\n    }\n}\nsigned main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        x[i]=read();\n        y[i]=read();\n        u[x[i]].push_back((node){y[i],i});\n        v[y[i]].push_back((node){x[i],i});\n        hang[++gs1]=x[i];\n        lie[++gs2]=y[i];\n    }\n    int tt;\n    sort(hang+1,hang+gs1+1);\n    tt=unique(hang+1,hang+gs1+1)-hang-1;\n    gs1=tt;\n    sort(lie+1,lie+gs2+1);\n    tt=unique(lie+1,lie+gs2+1)-lie-1;\n    gs2=tt;\n    for(int i=1;i<=gs1;i++) sort(u[hang[i]].begin(),u[hang[i]].end());\n    for(int i=1;i<=gs2;i++) sort(v[lie[i]].begin(),v[lie[i]].end());\n    int l=0,r=2e9;\n    while(l<=r){\n        int mid=(l+r)>>1;\n        if(check(mid)) ans=mid,r=mid-1;\n        else l=mid+1;\n    }\n    write(ans);\n    return 0;\n}\n```\n",
        "postTime": 1600613310,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1419F \u3010Rain of Fire\u3011"
    },
    {
        "content": "\u663e\u7136\u8fd9\u9898\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\u6027\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u7ed9\u5b9a\u4e00\u4e2a$T$\u600e\u4e48check\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u4e0d\u901a\u8fc7\u65b0\u70b9\u5c31\u53ef\u4ee5\u4e92\u8fbe\u7684\u70b9\u5408\u5e76\u6210\u4e00\u4e2a\u8054\u901a\u5757\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u5f53\u8054\u901a\u5757\u4e2a\u6570$=1$\u65f6\u6709\u89e3\uff0c$>4$\u65f6\u65e0\u89e3\uff0c\u5269\u4e0b\u60c5\u51b5\u6211\u4eec\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\n\n#### 1. \u6709\u4e24\u4e2a\u8054\u901a\u5757\n\n\t\u5982\u679c\u6211\u4eec\u80fd\u627e\u5230\u4e24\u4e2a\u70b9\u4f4d\u4e8e\u4e0d\u540c\u7684\u8054\u901a\u5757\uff0c\u5e76\u4e14\u4ed6\u4eec\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u4e14\u66fc\u54c8\u987f\u8ddd\u79bb<=2T \u6216 \u4e24\u70b9\u7684x,y\u5750\u6807\u7edd\u5bf9\u503c\u4e4b\u5dee\u5747\u5c0f\u4e8eT\u5219\u6709\u89e3\n    \n#### 2. \u6709\u4e09\u4e2a\u8054\u901a\u5757\n\n\t\u9996\u5148\u6211\u4eec\u628a\u6240\u6709\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u76f8\u90bb\u5e76\u4e14\u4e0d\u5c5e\u4e8e\u4e00\u4e2a\u8054\u901a\u5757\u7684\u70b9\u5bf9(a, b)\u5904\u7406\u51fa\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5bf9\u53ef\u4ee5\u627e\u5230\u70b9c\u4e0e\u8fd9\u4e24\u4e2a\u70b9\u6240\u5c5e\u8054\u901a\u5757\u90fd\u4e0d\u540c\uff0c\u82e5c\u5230\u76f4\u7ebf\u8ddd\u79bb\uff0ca\u3001b\u5230c\u5728\u7ebf\u6bb5\u4e0a\u7684\u6295\u5f71\u8ddd\u79bb\u5747\u5c0f\u4e8eT\uff0c\u5219\u5408\u6cd5\n    \n#### 3. \u6709\u56db\u4e2a\u8054\u901a\u5757\n\n\t\u5c06\u627e\u70b9c\u6362\u6210\u627e\u70b9\u5bf9(c,d)\u6ee1\u8db3\u7ebf\u6bb5(a,b),(c,d)\u5782\u76f4\uff0c\u4e14a,b,c,d\u5206\u5c5e\u56db\u4e2a\u4e0d\u540c\u7684\u8054\u901a\u5757\uff0c\u63a5\u4e0b\u6765\u505a\u6cd5\u4e0e3\u4e2a\u8054\u901a\u5757\u7c7b\u4f3c\n    \n\u65f6\u95f4\u590d\u6742\u5ea6O($n^2\\log_2{2\\times 10^9}$)\n\n``` cpp\n#include <bits/stdc++.h>\n \n#define R register\n#define ll long long\n#define pir std::pair<ll, ll>\n#define mp(i, j) std::make_pair(i, j)\n#define sum(a, b, mod) (((a) + (b)) % mod)\n#define It std::map<ll, std::vector<ll>>::iterator\n \nconst ll MaxN = 1e3 + 10;\n \nll n, x[MaxN], y[MaxN], f[MaxN];\nstd::unordered_map<ll, ll> trash;\nstd::map<ll, std::vector<ll>> lx, ly;\nstd::vector<std::pair<ll, ll>> X, Y, line;\n \nll Abs(ll x) { return (x < 0) ? (-x) : x; }\nll cmpx(ll a, ll b) { return x[a] < x[b]; }\nll cmpy(ll a, ll b) { return y[a] < y[b]; }\n \nll getf(ll x)\n{\n    if (x != f[x])\n        f[x] = getf(f[x]);\n    return f[x];\n}\n \nvoid merge(ll x, ll y)\n{\n    ll fx = getf(x), fy = getf(y);\n    if (fx != fy) f[fx] = fy;\n}\n \ninline ll read()\n{\n    ll x = 0, f = 1;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n    {\n        if (ch == '-')\n            f = 0;\n        ch = getchar();\n    }\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return f ? x : (-x);\n}\n \nll check(ll mid)\n{\n    trash.clear();\n    for (ll i = 1; i <= n; i++)\n        f[i] = i;\n    for (It it = lx.begin(); it != lx.end(); it++)\n    {\n        std::vector<ll> &v = it->second;\n        for (ll i = 1; i < v.size(); i++)\n            if (Abs(y[v[i]] - y[v[i - 1]]) <= mid)\n                merge(v[i], v[i - 1]);\n    }\n    for (It it = ly.begin(); it != ly.end(); it++)\n    {\n        std::vector<ll> &v = it->second;\n        for (ll i = 1; i < v.size(); i++)\n            if (Abs(x[v[i]] - x[v[i - 1]]) <= mid)\n                merge(v[i], v[i - 1]);\n    }\n    ll siz = 0;\n    for (ll i = 1; i <= n; i++)\n        // getf(i), printf(\"%lld \", f[i]),\n        siz += (trash[getf(i)] == 0), trash[getf(i)] = 1;\n    // printf(\"# %lld %lld\\n\", mid, siz);\n    if (siz == 1)\n        return 1;\n    else if (siz == 2)\n    {\n        for (ll i = 1; i <= n; i++)\n            for (ll j = i + 1; j <= n; j++)\n                if (f[i] != f[j])\n                {\n                    if (Abs(x[i] - x[j]) == 0 && Abs(y[i] - y[j]) <= 2 * mid)\n                            return 1;\n                    if (Abs(y[i] - y[j]) == 0 && Abs(x[i] - x[j]) <= 2 * mid)\n                            return 1;\n                    if (Abs(x[i] - x[j]) <= mid && Abs(y[i] - y[j]) <= mid)\n                            return 1;\n                }\n    }\n    else if (siz == 3)\n    {\n        line.clear();\n        for (It it = lx.begin(); it != lx.end(); it++)\n        {\n            std::vector<ll> &v = it->second;\n            for (ll i = 1; i < v.size(); i++)\n                if (f[v[i]] != f[v[i - 1]])\n                    line.push_back(mp(v[i], v[i - 1]));\n        }\n        for (It it = ly.begin(); it != ly.end(); it++)\n        {\n            std::vector<ll> &v = it->second;\n            for (ll i = 1; i < v.size(); i++)\n                if (f[v[i]] != f[v[i - 1]])\n                    line.push_back(mp(v[i], v[i - 1]));\n        }\n        for (auto li : line)\n        {\n            ll l = li.first, r = li.second;\n            for (ll i = 1; i <= n; i++)\n            {\n                if (f[l] != f[i] && f[i] != f[r])\n                {\n                    if (x[l] == x[r])\n                    {\n                        if (Abs(y[l] - y[i]) <= mid && Abs(y[r] - y[i]) <= mid)\n                            if (Abs(x[l] - x[i]) <= mid)\n                                return 1;\n                    }\n                    else if (Abs(x[l] - x[i]) <= mid && Abs(x[r] - x[i]) <= mid)\n                        if (Abs(y[l] - y[i]) <= mid)\n                            return 1;\n                }\n            }\n        }\n    }\n    else if (siz == 4)\n    {\n        X.clear(), Y.clear();\n        for (It it = lx.begin(); it != lx.end(); it++)\n        {\n            std::vector<ll> &v = it->second;\n            for (ll i = 1; i < v.size(); i++)\n                if (f[v[i]] != f[v[i - 1]])\n                    X.push_back(mp(v[i], v[i - 1]));\n        }\n        for (It it = ly.begin(); it != ly.end(); it++)\n        {\n            std::vector<ll> &v = it->second;\n            for (ll i = 1; i < v.size(); i++)\n                if (f[v[i]] != f[v[i - 1]])\n                    Y.push_back(mp(v[i], v[i - 1]));\n        }\n        for (auto x1 : X)\n        {\n            for (auto y1 : Y)\n            {\n                ll a = x1.first, b = x1.second;\n                ll c = y1.first, d = y1.second;\n                if (f[a] != f[c] && f[a] != f[d])\n                    if (f[b] != f[c] && f[b] != f[d])\n                        if (Abs(x[a] - x[c]) <= mid && Abs(x[a] - x[d]) <= mid)\n                            if (Abs(y[c] - y[a]) <= mid && Abs(y[c] - y[b]) <= mid)\n                                return 1;\n            }\n        }\n    }\n    return 0;\n}\n \nsigned main()\n{\n    n = read();\n    for (ll i = 1; i <= n; i++)\n    {\n        x[i] = read(), y[i] = read();\n        lx[x[i]].push_back(i);\n        ly[y[i]].push_back(i);\n    }\n    for (It it = lx.begin(); it != lx.end(); it++)\n    {\n        std::vector<ll> &v = it->second;\n        std::sort(v.begin(), v.end(), cmpy);\n    }\n    for (It it = ly.begin(); it != ly.end(); it++)\n    {\n        std::vector<ll> &v = it->second;\n        std::sort(v.begin(), v.end(), cmpx);\n    }\n    ll l = 1, r = 0x7f7f7f7f;\n    while (l < r)\n    {\n        ll mid = (l + r) >> 1;\n        if (check(mid))\n            r = mid;\n        else\n            l = mid + 1;\n    }\n    if (l == 0x7f7f7f7f)\n        l = -1;\n    printf(\"%lld\\n\", l);\n    return 0;\n}  \n```",
        "postTime": 1605710869,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1419F \u3010Rain of Fire\u3011"
    },
    {
        "content": "\u8fd9\u5206\u660e\u662f\u4e2a\u4e2d\u7b49\u9898\u561b\u2026\u2026\u4e0d\u77e5\u9053\u73b0\u573a\u4e3a\u5565\u6ca1\u5565\u4eba\u8fc7\uff0c\u5bfc\u81f4\u6211\u76f4\u63a5\u653e\u5f03\u53bb\u901b room \u4e86\uff0c\u4e5f\u4e0d\u77e5\u9053\u662f\u5982\u4f55\u8bc4\u5230 2800 \u7684\u3002\n\n> ### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8]( https://www.luogu.com.cn/problem/CF1419F ) & [CF \u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8]( https://codeforces.com/contest/1419/problem/F )\n>\n> \u7ed9\u5b9a\u5e73\u9762\u4e0a $n$ \u4e2a\u70b9 $(x_i,y_i)$\uff0c\u4f60\u53ef\u4ee5\u4efb\u9009\u51fa\u53d1\u70b9\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8d70\u5230\u672c\u884c\u6216\u672c\u5217\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $t$ \u7684\u70b9\uff0c\u8981\u6c42\u6700\u7ec8\u6bcf\u4e2a\u70b9\u81f3\u5c11\u8d70\u4e00\u904d\u3002\u4f60\u53ef\u4ee5\u968f\u610f\u5728\u7a7a\u767d\u4f4d\u7f6e\u653e\u4e00\u4e2a\u9644\u52a0\u70b9\uff08\u8fd9\u4e2a\u70b9\u4e5f\u8981\u8d70\uff09\uff0c\u6216\u8005\u4e0d\u653e\uff0c\u6c42\u6700\u5c0f $t$ \u6216\u62a5\u544a\u65e0\u89e3\u3002\n>\n> $n\\in[2,1000],|x_i|,|y_i|\\leq 10^9$\u3002\n\n\u9996\u5148\u663e\u800c\u6613\u89c1\u7684\uff0c$t$ \u5177\u6709\u53ef\u4e8c\u5206\u6027\u3002\u4e8e\u662f\u6211\u4eec\u4e8c\u5206\u7b54\u6848\uff0c\u8f6c\u5316\u4e3a\u5224\u5b9a\u5f53\u524d $t$ \u662f\u5426\u53ef\u884c\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u53ef\u4ee5\u8f6c\u5316\u4e3a\u56fe\u8bba\u6a21\u578b\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u8ba9\u5b83\u548c\u6240\u6709\u672c\u884c\u6216\u672c\u5217\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $t$ \u7684\u70b9\u8fde\u8fb9\uff0c\u7136\u540e\u53ef\u4ee5\u52a0\u70b9\u6216\u4e0d\u52a0\u70b9\u4f7f\u5f97\u56fe\u8fde\u901a\u5c31 ok\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u5e76\u4e14\u5f88\u6709\u7528\u7684\u5efa\u56fe\u4f18\u5316\uff0c\u5373\u6bcf\u4e2a\u70b9\u53ea\u9700\u8981\u5f80\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u5404\u8fde\u6700\u8fd1\u7684\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u70b9\u5373\u53ef\uff08\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u5219\u4e0d\u8fde\uff09\uff0c\u800c\u4e0d\u9700\u8981\u771f\u7684\u8fde\u300c\u6240\u6709\u300d\u7b26\u5408\u8981\u6c42\u7684\u70b9\uff0c\u8fd9\u6837\u8fde\u901a\u6027\u663e\u7136\u4e0d\u53d8\uff0c\u5e76\u4e14\u6bcf\u4e2a\u70b9\u8fde\u8fb9\u6570\u91cf\u662f\u5e38\u6570\uff0c\u603b\u8fb9\u6570\u7ebf\u6027\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u4efb\u52a1\u662f\u5982\u4f55\u9ad8\u6548\u7684\u5224\u65ad\u52a0\u70b9\u662f\u5426\u53ef\u4ee5\u3002\u8003\u8651\u5c06\u52a0\u7684\u70b9\u5206\u4e3a $2$ \u7c7b\u3002\n\n1. \u53ea\u5728\u6a2a\u5411\u6216\u7eb5\u5411\u4e0a\u505a\u6865\u6881\u3002\u8fd9\u79cd\u70b9\u7684\u6570\u91cf\u663e\u7136\u662f\u7ebf\u6027\u7684\uff0c\u679a\u4e3e\u884c / \u5217\uff0c\u518d\u679a\u4e3e\u672c\u884c / \u5217\u6240\u6709\u76f8\u90bb\u70b9\u5bf9\u5373\u53ef\uff1b\n2. \u4e24\u4e2a\u65b9\u5411\u4e0a\u90fd\u505a\u6865\u6881\u7684\u3002\u8fd9\u4e2a\u770b\u8d77\u6765\u6570\u91cf\u4e0d\u597d\u63a7\u5236\uff0c\u5176\u5b9e\u4e0d\u7136\u3002\u6ce8\u610f\u5230\u5b83\u663e\u7136\u8981\u6ee1\u8db3\u5b83\u6240\u5728\u884c\u6709\u70b9\u4e14\u6240\u5728\u5217\u6709\u70b9\uff0c\u90a3\u4e48\u6240\u5728\u884c\u548c\u6240\u5728\u5217\u7684\u6570\u91cf\u5404\u662f\u7ebf\u6027\u7684\uff08\u79bb\u6563\u5316\u9884\u5904\u7406\u5373\u53ef\uff09\u3002\u76f4\u63a5\u679a\u4e3e\uff0c\u662f\u5e73\u65b9\u7684\u3002\n\n\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u80fd\u7684\u52a0\u70b9\u7684\u4f4d\u7f6e\uff0c\u5982\u4f55\u5224\u662f\u5426\u53ef\u884c\u3002\u663e\u7136\u53ef\u4ee5\u5148 DFS \u8fde\u901a\u5206\u89e3\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5c31\u66b4\u529b merge \u5373\u53ef\u3002\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u7684\u8bdd\u662f\u5e73\u65b9\u5bf9\u6570\u7684\uff0c\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u5c31\u662f\u5e73\u65b9\u4e8c\u6b21\u5bf9\u6570\uff0c\u53d7\u4e0d\u4e86\u3002\u6ce8\u610f\u5230\u6bcf\u4e2a\u70b9\u7684 merge \u91cf\u90fd\u662f\u5e38\u6570\uff0c\u6240\u4ee5\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b set \u6216\u5176\u4ed6\u4ec0\u4e48\u4e1c\u897f\u4e71\u641e\uff0c\u770b\u662f\u5426\u80fd\u628a\u6240\u6709\u8fde\u901a\u5206\u91cf\u5408\u5e76\u5373\u53ef\uff0c\u968f\u4fbf\u600e\u4e48\u641e\u53ea\u8981\u8ddf $n$ \u65e0\u5173\u5c31\u662f\u5e38\u6570\u7684\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u601d\u8003\u7684\u95ee\u9898\uff0c\u5c31\u662f\u7b2c $2$ \u7c7b\u70b9\u5982\u4f55\u5feb\u901f\u627e\u5230\u5b83\u4e24\u4e2a\u65b9\u5411\u4e0a\u8fde\u7684\u70b9\u5bf9\u5462\uff1fsb \u90fd\u4f1a\u7684\u662f `lower_bound`\uff0c\u53ef\u662f\u90a3\u6837\u4f1a\u70b8\u3002\u53ef\u4ee5 two-pointers \u63a7\u5236\u5230\u5747\u644a\u5e38\u6570\u3002\n\n\u90a3\u4e48\u73b0\u5728\u4e00\u6b21 check \u5c31\u63a7\u5236\u5230\u5e73\u65b9\u4e86\u3002\u4e8e\u662f\u603b\u590d\u6742\u5ea6\u5e73\u65b9\u5bf9\u6570\u3002\n\n\u7136\u540e\u5404\u79cd\u7b14\u8bef WA \u4e86 2 \u53d1\uff0cwssb5448\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define X first\n#define Y second\n#define pb push_back\nconst int N=1000;\nint n; \npair<int,int> a[N+1];\nvector<int> nei[N+1];\nvector<int> nums_x,nums_y;\nvoid discrete(){\n\tsort(nums_x.begin(),nums_x.end());\n\tnums_x.resize(unique(nums_x.begin(),nums_x.end())-nums_x.begin());\n\tsort(nums_y.begin(),nums_y.end());\n\tnums_y.resize(unique(nums_y.begin(),nums_y.end())-nums_y.begin());\n}\nint cnt,cid[N+1];\nvoid dfs(int x){\n\tcid[x]=cnt;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(!cid[y])dfs(y);\n\t}\n}\nvector<pair<int,int> > row[N],col[N];\nint now_r[N],now_c[N];\nbool chk(int x){\n\tfor(int i=1;i<=n;i++)nei[i].clear();\n\tfor(int i=0;i<nums_x.size();i++){\n\t\tfor(int j=0;j+1<row[i].size();j++)\n\t\t\tif(abs(row[i][j].X-row[i][j+1].X)<=x)\n\t\t\t\tnei[row[i][j].Y].pb(row[i][j+1].Y),nei[row[i][j+1].Y].pb(row[i][j].Y);\n\t}\n\tfor(int i=0;i<nums_y.size();i++){\n\t\tfor(int j=0;j+1<col[i].size();j++)\n\t\t\tif(abs(col[i][j].X-col[i][j+1].X)<=x)\n\t\t\t\tnei[col[i][j].Y].pb(col[i][j+1].Y),nei[col[i][j+1].Y].pb(col[i][j].Y);\n\t}\n\tcnt=0,memset(cid,0,sizeof(cid));\n\tfor(int i=1;i<=n;i++)if(!cid[i])cnt++,dfs(i);\n\tif(cnt==1)return true;\n\tif(cnt<=2){\n\t\tfor(int i=0;i<nums_x.size();i++){\n\t\t\tfor(int j=0;j+1<row[i].size();j++)\n\t\t\t\tif(cid[row[i][j].Y]!=cid[row[i][j+1].Y]&&abs(row[i][j].X-row[i][j+1].X)+1>>1<=x)return true;\n\t\t}\n\t\tfor(int i=0;i<nums_y.size();i++){\n\t\t\tfor(int j=0;j+1<col[i].size();j++)\n\t\t\t\tif(cid[col[i][j].Y]!=cid[col[i][j+1].Y]&&abs(col[i][j].X-col[i][j+1].X)+1>>1<=x)return true;\n\t\t}\n\t}\n\tmemset(now_r,0,sizeof(now_r)),memset(now_c,0,sizeof(now_c));\n\tif(cnt<=4)for(int i=0;i<nums_x.size();i++)for(int j=0;j<nums_y.size();j++){\n\t\tint xx=nums_x[i],yy=nums_y[j];\n\t\twhile(now_r[i]<row[i].size()&&row[i][now_r[i]].X<yy)now_r[i]++;\n\t\twhile(now_c[j]<col[j].size()&&col[j][now_c[j]].X<xx)now_c[j]++;\n\t\tif(now_r[i]<row[i].size()&&row[i][now_r[i]].X==yy)continue;\n\t\tset<int> st;\n\t\tif(now_r[i]&&abs(row[i][now_r[i]-1].X-yy)<=x)st.insert(cid[row[i][now_r[i]-1].Y]);\n\t\tif(now_r[i]<row[i].size()&&abs(row[i][now_r[i]].X-yy)<=x)st.insert(cid[row[i][now_r[i]].Y]);\n\t\tif(now_c[j]&&abs(col[j][now_c[j]-1].X-xx)<=x)st.insert(cid[col[j][now_c[j]-1].Y]);\n\t\tif(now_c[j]<col[j].size()&&abs(col[j][now_c[j]].X-xx)<=x)st.insert(cid[col[j][now_c[j]].Y]);\n\t\tif(st.size()==cnt&&*st.begin()==1&&*--st.end()==cnt)return true;\n\t}\n\treturn false;\n}\nsigned main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i].X>>a[i].Y,nums_x.pb(a[i].X),nums_y.pb(a[i].Y);\n\tdiscrete();\n\tfor(int i=1;i<=n;i++){\n\t\trow[lower_bound(nums_x.begin(),nums_x.end(),a[i].X)-nums_x.begin()].pb(mp(a[i].Y,i));\n\t\tcol[lower_bound(nums_y.begin(),nums_y.end(),a[i].Y)-nums_y.begin()].pb(mp(a[i].X,i));\n\t}\n\tfor(int i=0;i<nums_x.size();i++)sort(row[i].begin(),row[i].end());\n\tfor(int i=0;i<nums_y.size();i++)sort(col[i].begin(),col[i].end());\n\tint ans=4e9;\n\tfor(int i=32;~i;i--)if(ans-(1ll<<i)>=0&&chk(ans-(1ll<<i)))ans-=1ll<<i;\n\tcout<<(ans==4e9?-1:ans);\n\treturn 0;\n}\n```",
        "postTime": 1600865855,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 1419F - Rain of Fire"
    },
    {
        "content": "\u672c\u9898\u53ea\u8981\u7a0d\u52a0\u601d\u8003,\u5373\u53ef\u53d1\u73b0:\u82e5 $ T $ \u662f\u53ef\u884c\u7684, $ T+1 $ \u4e5f\u662f\u53ef\u884c\u7684.\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4f7f\u7528\u4e8c\u5206\u6765\u6c42\u51fa\u6700\u5c0f\u7684 $ T $ .\n\n\u7136\u540e\u6211\u4eec\u5c31\u5f00\u59cb\u4e8c\u5206\u7b54\u6848\u4e86.\n\n\u4e8c\u5206\u7684\u6b65\u9aa4\u663e\u7136\u662f\u5224\u65ad $ T=mid $ \u65f6\u662f\u5426\u53ef\u884c,\u82e5\u53ef\u884c\u5219 $ r=mid $ ,\u5426\u5219 $ l=mid+1 $ .\n\n\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5224\u65ad $ T=mid $ \u65f6\u662f\u5426\u53ef\u884c.\n\n\u6211\u4eec\u5148\u770b\u4e0d\u52a0\u70b9\u7684\u60c5\u51b5.\n\n\u663e\u7136\u82e5 $ a $ \u70b9\u80fd\u5230 $ c $ \u70b9,\u800c $ b $ \u70b9\u80fd\u5230 $ c $ \u70b9,\u5219 $ a $ \u70b9\u4e5f\u80fd\u5230 $ b $ \u70b9.\n\n\u8fd9\u4e0d\u662f\u660e\u663e\u7684 $ dsu $ (\u5e76\u67e5\u96c6)\u6a21\u677f\u5417?\n\n\u76f4\u63a5 $ n^2 $ \u679a\u4e3e\u4e00\u4e0b\u8fb9\u7136\u540e\u8fde\u63a5\u5c31\u53ef\u4ee5\u4e86( $O(n^2)$ ).\n\n\u5728\u8fd9\u4e4b\u540e,\u5c31\u53ea\u5269\u4e0b\u4e86 $ cnt $ \u4e2a\u8054\u901a\u5757,\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba $ T $ \u53ef\u884c\u7684\u60c5\u51b5(\u4e0b\u9762\u7684 $ A,B,C,D $ \u70b9\u5747\u4e0d\u5728\u540c\u4e00\u8054\u901a\u5757\u4e2d, $ ANS $ \u8868\u793a\u53ef\u52a0\u7684\u70b9,\u4e0b\u9762\u5047\u8bbe $ T=4 $ ).\n\n\u9996\u5148\u770b $ cnt=1 $ \u7684\u60c5\u51b5,\u663e\u7136 $ n $ \u4e2a\u70b9\u5df2\u7ecf\u8054\u901a,\u8bf4\u660e $ T $ \u53ef\u884c.\n\n\u518d\u770b $ cnt=2 $ \u7684\u60c5\u51b5,\u663e\u7136\u53ea\u6709\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5:\n\n![cnt=2,1](https://cdn.luogu.com.cn/upload/image_hosting/nuh79bpx.png)\n\n $ |x_A-x_B|\\leq T $ \u4e14 $ |y_A-y_B|\\leq T $ .\n\n![cnt=2,2](https://cdn.luogu.com.cn/upload/image_hosting/tqwfq724.png)\n\n $ |x_A-x_B|\\leq T+T $ \u4e14 $ y_A=y_B $ \u6216 $ x_A=x_B $ \u4e14 $ |y_A-y_B|\\leq T+T $ .\n\n\u7136\u540e\u518d\u770b $ cnt=3 $ \u7684\u60c5\u51b5,\u65e0\u8bba\u5982\u4f55,\u65cb\u8f6c\u4e4b\u540e\u5fc5\u5b9a\u662f\u7c7b\u4f3c\u8fd9\u6837:\n\n![cnt=3](https://cdn.luogu.com.cn/upload/image_hosting/epejf2kb.png)\n\n\u5373\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6: $ |x_A-x_B|\\leq T $ \u4e14 $ |y_A-y_B|\\leq T $ \u548c $ |x_B-x_C|\\leq T $ \u4e14 $ |y_B-y_C|\\leq T $ .\n\n\u63a5\u4e0b\u6765, $ cnt=4 $ \u7684\u60c5\u51b5\u4e5f\u662f\u7c7b\u4f3c:\n\n![cnt=4](https://cdn.luogu.com.cn/upload/image_hosting/difpmyfk.png)\n\n\u5373\u540c\u65f6\u6ee1\u8db3\u56db\u4e2a\u6761\u4ef6: $ |x_A-x_B|\\leq T $ \u4e14 $ |y_A-y_B|\\leq T $ , $ |x_B-x_C|\\leq T $ \u4e14 $ |y_B-y_C|\\leq T $ , $ |x_C-x_D|\\leq T $ \u4e14 $ |y_C-y_D|\\leq T $ \u548c $ |x_D-x_A|\\leq T $ \u4e14 $ |y_D-y_A|\\leq T $ .\n\n\u7136\u540e $ cnt>4 $ \u7684\u60c5\u51b5,\u56e0\u4e3a\u52a0\u4e00\u4e2a\u70b9\u53ea\u80fd\u5411\u56db\u4e2a\u65b9\u5411\u8fd0\u52a8,\u5373\u6700\u591a\u53ea\u80fd\u8fde $ 4 $ \u6761\u8fb9,\u5408\u5e76 $ 4 $ \u4e2a\u8054\u901a\u5757,\u56e0\u6b64 $ cnt>4 $ \u65f6\u52a0\u4e00\u4e2a\u70b9\u5e76\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898,\u6545\u6ca1\u6709\u53ef\u884c\u7684\u60c5\u51b5.\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u5927\u529b\u5206\u7c7b\u8ba8\u8bba\u4e86.\n\n\u7528 $ g[i][j] $ \u8868\u793a\u8054\u901a\u5757 $ i $ \u4e0e\u8054\u901a\u5757 $ j $ \u76f8\u8fde\u7684\u53ef\u884c\u70b9\u96c6\u5408,\u68c0\u67e5\u4e00\u4e2a\u70b9\u662f\u5426\u540c\u65f6\u5728\u51e0\u4e2a\u96c6\u5408\u5185\u5373\u53ef.\n\n\u4f7f\u7528 $ STL $ $set$ \u7684\u4ee3\u7801: [Time Limit Exceeded on test 131](https://codeforces.com/contest/1419/submission/93320253).\n\n\u770b\u6765\u8fd9\u6837\u5e76\u4e0d\u592a\u884c,\u6211\u4eec\u9700\u8981\u4f7f\u7528\u522b\u7684\u65b9\u6cd5.\n\n\u4e0d\u96be\u53d1\u73b0\u6570\u636e\u8303\u56f4 $ n\\leq1000 $ \u4e5f\u5c31\u662f\u8bf4\u6700\u591a\u53ea\u4f1a\u6709 $ n $ \u79cd $ x $ \u5750\u6807, $ n $ \u79cd $ y $ \u5750\u6807.\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u79bb\u6563\u5316\u5750\u6807,\u7136\u540e\u5c31\u53ea\u5269\u4e0b $ n^2 $ \u4e2a\u5750\u6807\u4e86,\u6700\u540e\u7528\u4e8c\u7ef4\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef.\n\n\u5177\u4f53\u89c1\u4ee3\u7801.\n\n$Code$:\n\n```cpp\n//This Code was made by Chinese_zjc_.\n//\u5934\u6587\u4ef6\u5df2\u7701\u7565\n#define int long long\n#define double long double\nusing namespace std;\nconst double PI = acos(-1);\nconst double eps = 0.0000000001;\nconst int INF = 0x3fffffffffffffff;\nint n, x[1005], y[1005], cntx, cnty, LOWLIM = 0, HIGHLIM = INF, fa[1005], name[1005], cnt;\nconst int g[5][5] = {//\u9884\u5904\u7406\u51fa\u72b6\u538b\u77e9\u9635\n    {0, 0, 0, 0, 0},\n    {0, 0, 1, 2, 3},\n    {0, 1, 0, 4, 5},\n    {0, 2, 4, 0, 6},\n    {0, 3, 5, 6, 0}};\nint connect[1005][1005];\n//\u6ce8\u610f\u8fd9\u4e2a\u6570\u7ec4,\u662f\u7528\u72b6\u538b\u6765\u5b58(x[i],y[i])\u8fd9\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u8fde\u63a5\u54ea\u51e0\u4e2a\u8054\u901a\u5757\u7684.\nstruct L\n{\n    int x, y;\n} a[1005];\nset<int> tmpx, tmpy;//\u79bb\u6563\u5316\u7528\u7684\nint find(int now)//\u5e76\u67e5\u96c6\n{\n    return now == fa[now] ? now : fa[now] = find(fa[now]);\n}\nint lowbit(int now)//\u8fd9\u4e2a\u4e0d\u591a\u8bf4\u4e86\u5427\n{\n    return now & (-now);\n}\nint has(int now)//\u6c42\u4e00\u4e2a\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u6709\u591a\u5c11\u4e2a1\n{\n    return now ? has(now ^ lowbit(now)) + 1 : 0;\n}\nbool check(int now)//now\u5373mid\n{\n    for (int i = 1; i <= n; ++i) //\u521d\u59cb\u5316\n    {\n        fa[i] = i;\n        name[i] = 0;\n    }\n    memset(connect, 0, sizeof connect);\n    cnt = 0;\n    for (int i = 1; i <= n; ++i)\n    {\n        for (int j = i + 1; j <= n; ++j)\n        {\n            if (find(i) != find(j))\n            {\n                if (abs(x[a[i].x] - x[a[j].x]) <= now && a[i].y == a[j].y)\n                {\n                    fa[find(i)] = find(j);\n                }\n                if (a[i].x == a[j].x && abs(y[a[i].y] - y[a[j].y]) <= now)\n                {\n                    fa[find(i)] = find(j);\n                }\n            }\n        }\n    }\n    for (int i = 1; i <= n; ++i) //name\u662ffind(i)\u7684\u65b0\u7f16\u53f7(\u79bb\u6563\u5316)\n    {\n        if (!name[find(i)])\n        {\n            name[find(i)] = ++cnt;\n        }\n    }\n    if (cnt == 1)\n    {\n        return true;\n    }\n    if (cnt == 2)\n    {\n        for (int i = 1; i <= n; ++i)\n        {\n            for (int j = i + 1; j <= n; ++j)\n            {\n                if (find(i) != find(j))\n                {\n                    if (a[i].x == a[j].x && abs(y[a[i].y] - y[a[j].y]) <= now << 1)\n                    {\n                        return true;\n                    }\n                    if (abs(x[a[i].x] - x[a[j].x]) <= now << 1 && a[i].y == a[j].y)\n                    {\n                        return true;\n                    }\n                    if (abs(x[a[i].x] - x[a[j].x]) <= now && abs(y[a[i].y] - y[a[j].y]) <= now)\n                    {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    if (cnt == 3)\n    {\n        for (int i = 1; i <= n; ++i)\n        {\n            for (int j = i + 1; j <= n; ++j)\n            {\n                if (find(i) != find(j))\n                {\n                    if (abs(x[a[i].x] - x[a[j].x]) <= now && abs(y[a[i].y] - y[a[j].y]) <= now)\n                    {\n                        connect[a[i].x][a[j].y] |= 1 << g[name[find(i)]][name[find(j)]];\n                        connect[a[j].x][a[i].y] |= 1 << g[name[find(i)]][name[find(j)]];\n                    }\n                }\n            }\n        }\n        for (int i = 1; i <= cntx; ++i)\n        {\n            for (int j = 1; j <= cnty; ++j)\n            {\n                if (has(connect[i][j]) >= 2)\n                {\n                    return true;\n                }\n            }\n        }\n    }\n    if (cnt == 4)\n    {\n        for (int i = 1; i <= n; ++i)\n        {\n            for (int j = i + 1; j <= n; ++j)\n            {\n                if (find(i) != find(j))\n                {\n                    if (abs(x[a[i].x] - x[a[j].x]) <= now && abs(y[a[i].y] - y[a[j].y]) <= now)\n                    {\n                        connect[a[i].x][a[j].y] |= 1 << g[name[find(i)]][name[find(j)]];\n                        connect[a[j].x][a[i].y] |= 1 << g[name[find(i)]][name[find(j)]];\n                    }\n                }\n            }\n        }\n        for (int i = 1; i <= cntx; ++i)\n        {\n            for (int j = 1; j <= cnty; ++j)\n            {\n                if (has(connect[i][j]) >= 4)\n                {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin >> n;\n    for (int i = 1; i <= n; ++i)\n    {\n        cin >> a[i].x >> a[i].y;\n        tmpx.insert(a[i].x);\n        tmpy.insert(a[i].y);\n    }\n    for (auto i : tmpx)\n    {\n        x[++cntx] = i;\n    }\n    for (auto i : tmpy)\n    {\n        y[++cnty] = i;\n    }\n    //\u4f7f\u7528\u4e86auto\u6765\u79bb\u6563\u5316\n    //for(auto i:sth){...}\u610f\u4e49\u540c\n    //for(typename<sth>::iterator ii=sth.begin();ii!=sth.end();++ii)\n    //{typename i=*ii;...}\n    //\u6ce8\u610f:auto\u4ec5\u9650C++11\u4ee5\u4e0a\u7248\u672c\u53ef\u7528,\u4e4b\u524d\u7684\u7248\u672c\u662f\u65e0\u610f\u4e49\u7684\n    for (int i = 1; i <= n; ++i) //\u628aa\u6570\u7ec4\u7684x,y\u91cd\u7f16\u53f7\n    //(x[a[i].x],y[a[i].y])\u5373a[i]\u539f\u6765\u7684\u5750\u6807\n    {\n        a[i].x = find(x + 1, x + 1 + cntx, a[i].x) - x;\n        a[i].y = find(y + 1, y + 1 + cnty, a[i].y) - y;\n    }\n    while (LOWLIM < HIGHLIM) //\u4e8c\u5206\u7b54\u6848\n    {\n        int mid = (LOWLIM + HIGHLIM) >> 1;\n        if (check(mid))\n        {\n            HIGHLIM = mid;\n        }\n        else\n        {\n            LOWLIM = mid + 1;\n        }\n    }\n    cout << (LOWLIM < INF ? LOWLIM : -1) << endl;\n    return 0;\n}\n```\n",
        "postTime": 1600657564,
        "uid": 118239,
        "name": "Chinese_zjc_",
        "ccfLevel": 0,
        "title": "CF1419F \u9898\u89e3"
    }
]