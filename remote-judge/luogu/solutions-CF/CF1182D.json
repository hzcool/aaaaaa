[
    {
        "content": "\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u94a6\u5b9a\u4e86\u8fd9\u68f5\u6811\u7684\u6839\u540e\uff0c\u4efb\u4f55\u4e00\u4e2a\u70b9$x$\uff0c\u5b83\u7684\u6240\u6709\u513f\u5b50\u4eec\u7684\u5b50\u6811\u90fd\u5fc5\u987b\u957f\u5f97\u4e00\u6a21\u4e00\u6837\u3002\n\n\u6240\u4ee5\uff0c\u82e5\u6839\u8282\u70b9\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u513f\u5b50\uff0c\u5b83\u5fc5\u5b9a\u662f\u6811\u7684\u91cd\u5fc3\u3002\n\n\uff08\u7b80\u5355\u8bc1\u660e\uff1a\u82e5\u6839\u4e3a$rt$\uff0c\u5b83\u7684\u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\u4e3a$sz$\uff0c\u5219\u5220\u6389\u5b83\u5f97\u5230\u7684\u6700\u5927\u8fde\u901a\u5757\u5927\u5c0f\u4e3a$sz$\u3002\u800c\u82e5\u5728\u5b83\u7684\u4e00\u4e2a\u513f\u5b50\u5b50\u6811\u4e2d\u7684\u4efb\u610f\u4e00\u70b9\uff0c\u5220\u6389\u8be5\u70b9\u5f97\u5230\u7684\u6700\u5927\u8fde\u901a\u5757\u5927\u5c0f\u5fc5\u5927\u4e8e\u7b49\u4e8e$sz+1$\uff09\n\n\u56e0\u6b64\u7b2c\u4e00\u6b65\uff0c\u627e\u5230\u6811\u7684\u91cd\u5fc3\uff0c\u7136\u540e\u66b4\u529b$O(n)$\u5224\u65ad\u5b83\u662f\u5426\u5408\u6cd5\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u53ea\u53ef\u80fd\u662f\u5ea6\u6570\u4e3a1\u7684\u70b9\u662f\u6839\u4e86\u3002\u5047\u8bbe\u4ece\u6839\u8282\u70b9$x$\u6cbf\u7740\u552f\u4e00\u7684\u8def\u5f84\u5f80\u6811\u7684\u6df1\u5904\u8d70\uff0c\u8d70\u5230\u7684\u7b2c\u4e00\u4e2a\u5ea6\u6570\u5927\u4e8e2\u7684\u70b9\u4e3a$y$\uff08\u4ea7\u751f\u5206\u5c94\u8def\uff09\uff0c\u6839\u636e\u6811\u7684\u91cd\u5fc3\u7684\u6027\u8d28\uff0c\u7531\u4e8e\u5b50\u6811$y$\u7684\u91cd\u5fc3\u4e3a$y$\uff0c\u6240\u4ee5\u6574\u68f5\u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u5728\u4ece$x$\u5230$y$\u7684\u8fd9\u6761\u94fe\u4e0a\u3002\n\n```plain\n     x\n     |\n     *\n     |\n     *\n     |\n     y\n    / \\\n    * *\n```\n\n\u82e5$rt$\u53ea\u6709\u4e00\u68f5\u5b50\u6811\u662f\u94fe\uff0c\u90a3\u5f53\u7136\u5c31\u5224\u65ad\u8be5\u94fe\u7684\u7aef\u70b9\u662f\u5426\u662f\u6839\u5373\u53ef\u3002\u82e5\u6709\u591a\u68f5\u5b50\u6811\u662f\u94fe\uff0c\u53ea\u6709\u4ec5\u51fa\u73b0\u4e24\u79cd\u957f\u5ea6\u7684\u94fe\uff0c\u4e14\u5176\u4e2d\u4e00\u79cd\u957f\u5ea6\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u624d\u6709\u53ef\u80fd\u627e\u5230\u5408\u6cd5\u89e3\uff0c\u4e5f\u5c31\u662f\u8bf4\u68c0\u67e5\u4e00\u904d$rt$\u7684\u5b50\u6811\uff0c\u9009\u62e9\u4e24\u79cd\u4e0d\u540c\u94fe\u957f\u7684\u94fe\u5b50\u6811\uff0c\u770b\u5b83\u4eec\u7684\u7aef\u70b9\u4e3a\u6839\u5408\u4e0d\u5408\u6cd5\uff0c\u82e5\u8fd8\u662f\u4e0d\u5408\u6cd5\uff0c\u65e0\u89e3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\ninline int read() {\n\tint q=0;char ch=' ';\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') q=q*10+ch-'0',ch=getchar();\n\treturn q;\n}\nconst int N=100005,inf=0x3f3f3f3f;\nint n,tot,rt,mi,krt,rt2,len_rt2;\nint h[N],ne[N<<1],to[N<<1],du[N],sz[N],dep[N];\nvector<int> orz[N];\n\ninline void add(int x,int y) {to[++tot]=y,ne[tot]=h[x],h[x]=tot;}\ninline void getrt(int x,int las) {//\u627e\u91cd\u5fc3\n\tsz[x]=1;int bl=0;\n\tfor(RI i=h[x];i;i=ne[i])\n\t\tif(to[i]!=las) getrt(to[i],x),bl=max(bl,sz[to[i]]),sz[x]+=sz[to[i]];\n\tbl=max(bl,n-sz[x]);\n\tif(bl<mi) mi=bl,rt=x;\n}\ninline void dfs(int x,int las) {\n\tdep[x]=dep[las]+1;\n\tfor(RI i=h[x];i;i=ne[i]) if(to[i]!=las) dfs(to[i],x);\n}\ninline void check(int x) {//\u68c0\u67e5\u662f\u5426\u5408\u6cd5\n\tdfs(x,0);\n\tfor(RI i=1;i<=n;++i) orz[i].clear();\n\tfor(RI i=1;i<=n;++i) orz[dep[i]].push_back(i);\n\tfor(RI i=1;i<=n;++i) {\n\t\tfor(RI j=1;j<orz[i].size();++j)\n\t\t\tif(du[orz[i][j]]!=du[orz[i][0]]) return;\n\t}\n\tprintf(\"%d\\n\",x);exit(0);\n}\ninline int is_line(int x,int las) {//\u662f\u5426\u662f\u94fe\u4ee5\u53ca\u94fe\u957f\n\tif(du[x]>2) return 0;\n\tif(du[x]==1) {krt=x;return 1;}\n\tfor(RI i=h[x];i;i=ne[i])\n\t\tif(to[i]!=las) {\n\t\t\tint res=is_line(to[i],x);\n\t\t\tif(!res) return 0;\n\t\t\telse return res+1;\n\t\t}\n}\n\nint main()\n{\n\tint x,y;\n\tn=read();\n\tfor(RI i=1;i<n;++i) x=read(),y=read(),add(x,y),add(y,x),++du[x],++du[y];\n\tmi=inf,getrt(1,0);\n\tcheck(rt);\n\tfor(RI i=h[rt];i;i=ne[i]) {\n\t\tint len=is_line(to[i],rt);\n\t\tif(!len) continue;\n\t\tif(rt2&&len!=len_rt2) {check(krt);break;}\n\t\tif(!rt2) rt2=krt,len_rt2=len,check(krt);\n\t}\n\tputs(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1562897867,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1182D \u3010Complete Mirror\u3011"
    },
    {
        "content": "ri\uff0c\u8fd9\u9053\u6c34\u9898\u5199\u5b8c\u4e4b\u540e\u6211TM\u8c03\u4e861h\u624dA\uff0c\u6211\u592a\u8822\u4e86\uff01\u5148\u662f\u628a\u76f4\u5f84\u7684\u7aef\u70b9\u5f53\u6210\u76f4\u5f84\u7684\u4e2d\u70b9\uff1b\u7136\u540e\u5fd8\u4e86\u53bb\u7279\u5730check\u76f4\u5f84\u7684\u4e2d\u70b9\u53c8\u8c03\u4e86\u597d\u4e45...\n\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4e0e\u6811\u7684\u76f4\u5f84\u6709\u5173\uff0c\u5047\u5982\u6211\u4eec\u6c42\u51fa\u6765\u6811\u7684\u4e00\u6761\u76f4\u5f84\uff0c\u90a3\u4e48\u6700\u7ec8\u7b54\u6848\u8981\u4e48\n\n1. \u662f\u76f4\u5f84\u7684\u7aef\u70b9\u2014\u2014\u8dd1\u4e24\u904dcheck\u5373\u53ef\n\n2. \u662f\u76f4\u5f84\u7684\u4e2d\u70b9\u2014\u2014\u518dcheck\u4e00\u904d\uff08\u6ce8\u610f\u5982\u679c\u76f4\u5f84\u6709\u5076\u6570\u4e2a\u70b9\uff0c\u90a3\u4e48\u662f\u6ca1\u6709\u4e2d\u70b9\u7684\uff01\uff09\n\n3. \u662f\u76f4\u5f84\u7684\u4e2d\u70b9\u7684\u4e00\u4e2a\u513f\u5b50\n\n\u9700\u8981\u7279\u522b\u8003\u8651\u7684\u5c31\u662f3.\uff1a\n\n\u6211\u4eec\u5148\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5b50\u6811\u7684Hash\u503c\uff0c\u4ece\u76f4\u5f84\u7684\u4e2d\u70b9\u5f00\u59cb\u9012\u5f52\u3002\u5982\u679c\u9012\u5f52\u5230\u70b9x\uff0c\u5b83\u7684\u513f\u5b50\u4e2d\uff0c\u6bcf\u79cd\u90fd\u51fa\u73b0\u4e86\u5076\u6570\u6b21\uff0c\u90a3\u4e48x\u5c31\u662f\u7b54\u6848\uff1b\u5982\u679c\u53ea\u6709\u4e00\u79cd\u51fa\u73b0\u4e86\u5947\u6570\u6b21\uff0c\u90a3\u4e48\u9012\u5f52\u8fdb\u884c\uff1b\u5982\u679c\u591a\u4e8e\u4e00\u79cd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u4e0d\u53ef\u80fd\u6709\u7b54\u6848\u4e86\u3002\n\n--------------\n\n\u8fd9\u91cc\u7279\u522b\u8bf4\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u628a2.\u5f52\u4e3a3.\uff1a\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0\u76f4\u5f84\u7684\u4e2d\u70b9\u6302\u4e86\u5947\u6570\u4e2a\u76f8\u540c\u7684\u513f\u5b50\uff0c\u8fd9\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u7684\u786e\u6709\u4e00\u4e2a\u513f\u5b50\u51fa\u73b0\u4e86\u5947\u6570\u6b21\uff01\n\n```cpp\n#define N 100005\nil void gun(int ans)\n{\n\tout(ans);\n\texit(0);\n}\nint n;\nvector<int> E[N];\nint mxd,mxdk;\nint fa[N];\nvoid dfs(int x,int _fa,int d)\n{\n\tfa[x]=_fa;\n\tif(ckmax(mxd,d)) mxdk=x;\n\tfor(solid v:E[x])\n\t{\n\t\tif(v==_fa) continue;\n\t\tdfs(v,x,d+1);\n\t}\n}\nconst int bas=233,md[2]= {(int)1e9+7,(int)1e9+9};\npii h[N];\nvoid efs(int x,int _fa)\n{\n\tvector< pii > hv;\n\tfor(solid v:E[x])\n\t{\n\t\tif(v==_fa) continue;\n\t\tefs(v,x);\n\t\thv.pb(h[v]);\n\t}\n\th[x]=mp(1,1);\n\tsort(hv.begin(),hv.end());\n\tfor(solid v:hv)\n\t{\n\t\th[x].fi=((LL)h[x].fi*bas+v.fi)%md[0];\n\t\th[x].se=((LL)h[x].se*bas+v.se)%md[1];\n\t}\n}\nvoid gfs(int x,int _fa)\n{\n\tmap< pii,vector<int> > mt;\n\tfor(solid v:E[x])\n\t{\n\t\tif(v==_fa) continue;\n\t\tmt[h[v]].pb(v);\n\t}\n\tpii nx=mp(-1,-1);\n\tfor(solid it:mt)\n\t\tif(Size(it.se)&1)\n\t\t{\n\t\t\tif(nx.fi!=-1) return;\n\t\t\tnx=it.fi;\n\t\t}\n\tif(nx.fi==-1) gun(x);\n\tfor(solid v:mt[nx]) gfs(v,x);\n}\nbool ok;\nint du[N];\nvoid hfs(int x,int _fa,int d)\n{\n\tif(!ok) return;\n\tif(!du[d]) du[d]=Size(E[x]);\n\telse if(du[d]!=Size(E[x]))\n\t{\n\t\tok=0;\n\t\treturn;\n\t}\n\tfor(solid v:E[x])\n\t{\n\t\tif(v==_fa) continue;\n\t\thfs(v,x,d+1);\n\t}\n}\nil void check(int x)\n{\n\tmem(du,0);\n\tok=1,hfs(x,0,1);\n\tif(ok) gun(x);\n}\nsigned main()\n{\n#ifdef M207\n\tfreopen(\"in.in\",\"r\",stdin);\n\t// freopen(\"ot.out\",\"w\",stdout);\n#endif\n\tin(n);\n\tfor(ri i=1,a,b; i<n; ++i)\n\t{\n\t\tin(a,b);\n\t\tE[a].pb(b),E[b].pb(a);\n\t}\n\tdfs(1,0,1);\n\tcheck(mxdk); mxd=0;\n\tdfs(mxdk,0,1);\n\tcheck(mxdk);\n\tif((mxd&1)==0) gun(-1);\n\tint x=mxdk;\n\tfor(ri i=1; i<=(mxd>>1); ++i) x=fa[x];\n\tcheck(x);\n\tefs(x,0);\n\tgfs(x,0);\n\tgun(-1);\n\treturn 0;\n}\n```",
        "postTime": 1560432278,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u6811\u54c8\u5e0c-CF1182D Complete Mirror-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u4ee5\u7b54\u6848\u4e3a\u6839\u7684\u6811\u5fc5\u7136\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff0c\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u513f\u5b50\u5b50\u90fd\u662f\u540c\u6784\u7684\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u4e0d\u540c\u6784\u90a3\u5fc5\u7136\u4f1a\u5b58\u5728\u77db\u76fe\u7684\u70b9\uff0c\u5426\u5219\u662f\u4e00\u5b9a\u53ef\u884c\u7684\u3002\n\n\u7136\u540e\uff0c\u6811\u7684\u540c\u6784\uff0c\u6211\u4eec\u4e0d\u96be\u60f3**\u6811\u54c8\u5e0c**\uff0c\u7136\u540e\u505a\u6cd5\u5c31\u6bd4\u8f83\u663e\u7136\u4e86\uff0c\u7ed9\u8fd9\u68f5\u6811\u8fdb\u884c\u4e00\u4e2a\u6362\u6839dp\uff0c\u5148dfs\u4e00\u904d\u641e\u51fa\u5b50\u6811\u5185\u7684\u54c8\u5e0c\u503c\u4ee5\u53ca\u662f\u5426\u53ef\u884c\uff08\u5373\u662f\u5426\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u7684\u513f\u5b50\u7684\u54c8\u5e0c\u503c\u76f8\u7b49\uff09\uff0c\u518ddfs\u4e00\u904d\u641e\u51fa\u6bcf\u4e2a\u70b9\u7236\u4eb2\u53bb\u6389\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u518d\u4f5c\u4e3a\u6839\u7684\u54c8\u5e0c\u503c\u4ee5\u53ca\u662f\u5426\u53ef\u884c\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u67092\u4e2a\u513f\u5b50\u90fd\u4e0d\u53ef\u884c\uff0c\u6216\u8005\u513f\u5b50\u67093\u79cd\u54c8\u5e0c\u503c\uff0c\u90a3\u4e48\u76f4\u63a5\u65e0\u89e3\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u6839\u5728\u54ea\u4e2a\u65b9\u5411\u90fd\u662f\u4e0d\u884c\u7684\u3002\u7136\u540e\u6839\u5c31\u53ea\u80fd\u5728\u90a3\u4e2a\u4e0e\u4f17\u4e0d\u540c\u7684\u513f\u5b50\u7684\u5b50\u6811\u91cc\uff0c\u5927\u529b\u8ba8\u8bba\u4e00\u6ce2\u5373\u53ef\u3002\n\n\u53e6\u5916\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u9700\u8981\u6c42\u53ef\u884c\u7684\u513f\u5b50\u7684\u54c8\u5e0c\u503c\uff0c\u663e\u7136\u5b83\u7684\u6240\u6709\u513f\u5b50\u54c8\u5e0c\u503c\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u5b83\u7684\u513f\u5b50\u7684\u54c8\u5e0c\u503c\u540e\u9762\u63a5\u4e00\u4e2a\u513f\u5b50\u4e2a\u6570\u5c31\u884c\u4e86\uff0c\u7136\u540e3\u6a21\u6570Hash\u7a33\u8fc7\u2026\u2026\n\n\u662f\u4e0d\u662f\u5f88\u7b80\u5355\u7c97\u66b4\u554a\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#define ll long long\n#define p1 998244353\n#define p2 1000000007\n#define p3 1004535809\nusing namespace std;\nnamespace ywy {\n\tinline int get() {\n\t    int n = 0;\n\t    char c;\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            break;\n\t        if (c == '-')\n\t            goto s;\n\t    }\n\t    n = c - '0';\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 + c - '0';\n\t        else\n\t            return (n);\n\t    }\n\ts:\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 - c + '0';\n\t        else\n\t            return (n);\n\t    }\n\t}\n\ttypedef struct _b {\n\t    int dest;\n\t    int nxt;\n\t} bian;\n\tbian memchi[1000001];\n\tint gn = 1, heads[100001];\n\tint deg[100001];\n\tinline void add(int s, int t) {\n\t    memchi[gn].dest = t;\n\t    memchi[gn].nxt = heads[s];\n\t    heads[s] = gn;\n\t    gn++;\n\t    deg[t]++;\n\t}\n\tint tmp[100001];\n\ttypedef struct _p {\n\t    ll a1, a2, a3;\n\t    _p() { a1 = a2 = a3 = 0; }\n\t    _p(int x) { a1 = a2 = a3 = x; }\n\t    _p(ll a, ll b, ll c) {\n\t        a1 = a;\n\t        a2 = b;\n\t        a3 = c;\n\t    }\n\t    friend bool operator==(const _p &a, const _p &b) {\n\t        return (a.a1 == b.a1 && a.a2 == b.a2 && a.a3 == b.a3);\n\t    }\n\t    friend bool operator!=(const _p &a, const _p &b) { return (!(a == b)); }\n\t    friend _p operator+(const _p &a, const _p &b) {\n\t        return (_p((a.a1 + b.a1) % p1, (a.a2 + b.a2) % p2, (a.a3 + b.a3) % p3));\n\t    }\n\t    friend _p operator*(const _p &a, const int &b) {\n\t        return (_p((a.a1 * b) % p1, (a.a2 * b) % p2, (a.a3 * b) % p3));\n\t    }\n\t} pair;\n\tunsigned char candown[100001];\n\tpair dp[100001], dpup[100001];\n\tvoid dfs(int pt, int baba) {\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba)\n\t            continue;\n\t        dfs(memchi[i].dest, pt);\n\t    }\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba)\n\t            continue;\n\t        if (!candown[memchi[i].dest])\n\t            return;\n\t    }\n\t    int ptr = 1;\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba)\n\t            continue;\n\t        tmp[ptr] = memchi[i].dest;\n\t        ptr++;\n\t    }\n\t    ptr--;\n\t    for (register int i = 2; i <= ptr; i++)\n\t        if (dp[tmp[i]] != dp[tmp[1]])\n\t            return;\n\t    if (!ptr) {\n\t        candown[pt] = 1;\n\t        dp[pt] = _p(1);\n\t        return;\n\t    }\n\t    dp[pt] = dp[tmp[1]] * 233 + _p(ptr);\n\t    candown[pt] = 1;\n\t}\n\tint n;\n\tvoid efs(int pt, int baba) {\n\t    if (!baba) {\n\t        int cnt = 0;\n\t        for (register int i = heads[pt]; i; i = memchi[i].nxt) cnt += (!candown[memchi[i].dest]);\n\t        if (cnt >= 2) {\n\t            cout << -1 << endl;\n\t            exit(0);\n\t        }\n\t        int ptr = 1;\n\t        for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t            if (!candown[memchi[i].dest])\n\t                continue;\n\t            tmp[ptr] = memchi[i].dest;\n\t            ptr++;\n\t        }\n\t        ptr--;\n\t        if (cnt == 1) {\n\t            for (register int i = 2; i <= ptr; i++) {\n\t                if (dp[tmp[i]] != dp[tmp[1]]) {\n\t                    cout << -1 << endl;\n\t                    exit(0);\n\t                }\n\t            }\n\t            for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t                if (!candown[memchi[i].dest]) {\n\t                    dpup[memchi[i].dest] = dp[tmp[1]] * 233 + _p(ptr);\n\t                    efs(memchi[i].dest, pt);\n\t                    return;\n\t                }\n\t            }\n\t        }\n\t        int lst = -1;\n\t        for (register int i = 2; i <= ptr; i++) {\n\t            if (dp[tmp[i]] != dp[tmp[1]]) {\n\t                lst = i;\n\t                break;\n\t            }\n\t        }\n\t        if (lst == -1) {\n\t            pair me = dp[tmp[1]];\n\t            for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t                dpup[memchi[i].dest] = me * 233 + _p(ptr - 1);\n\t                efs(memchi[i].dest, pt);\n\t            }\n\t            return;\n\t        }\n\t        int cnt1 = 0, cnt2 = 0;\n\t        for (register int i = 1; i <= ptr; i++) {\n\t            if (dp[tmp[i]] != dp[tmp[1]] && dp[tmp[i]] != dp[tmp[lst]]) {\n\t                cout << -1 << endl;\n\t                exit(0);\n\t            }\n\t            if (dp[tmp[i]] == dp[tmp[1]])\n\t                cnt1++;\n\t            if (dp[tmp[i]] == dp[tmp[lst]])\n\t                cnt2++;\n\t        }\n\t        if (cnt1 > 1 && cnt2 > 1) {\n\t            cout << -1 << endl;\n\t            exit(0);\n\t        }\n\t        if (cnt1 == 1 && cnt2 == 1) {\n\t            dpup[tmp[1]] = dp[tmp[lst]] * 233 + _p(1);\n\t            dpup[tmp[lst]] = dp[tmp[1]] * 233 + _p(1);\n\t            int a = tmp[1], b = tmp[lst];\n\t            efs(a, pt);\n\t            efs(b, pt);\n\t            return;\n\t        }\n\t        if (cnt1 == 1) {\n\t            dpup[tmp[1]] = dp[tmp[lst]] * 233 + _p(cnt2);\n\t            efs(tmp[1], pt);\n\t            return;\n\t        }\n\t        dpup[tmp[lst]] = dp[tmp[1]] * 233 + _p(cnt1);\n\t        efs(tmp[lst], pt);\n\t        return;\n\t    }\n\t    int cnt = 0;\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba)\n\t            continue;\n\t        cnt += (!candown[memchi[i].dest]);\n\t    }\n\t    if (cnt >= 2) {\n\t        cout << -1 << endl;\n\t        exit(0);\n\t    }\n\t    int ptr = 1;\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba || !candown[memchi[i].dest])\n\t            continue;\n\t        tmp[ptr] = memchi[i].dest;\n\t        ptr++;\n\t    }\n\t    ptr--;\n\t    if (ptr == 0 && cnt == 0) {\n\t        cout << pt << endl;\n\t        exit(0);\n\t    }\n\t    if (cnt == 1) {\n\t        for (register int i = 1; i <= ptr; i++) {\n\t            if (dp[tmp[i]] != dpup[pt]) {\n\t                cout << -1 << endl;\n\t                exit(0);\n\t            }\n\t        }\n\t        for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t            if (memchi[i].dest == baba || candown[memchi[i].dest])\n\t                continue;\n\t            dpup[memchi[i].dest] = dpup[pt] * 233 + _p(ptr + 1);\n\t            efs(memchi[i].dest, pt);\n\t            return;\n\t        }\n\t    }\n\t    int lst = -1;\n\t    for (register int i = 1; i <= ptr; i++) {\n\t        if (dp[tmp[i]] != dpup[pt]) {\n\t            lst = i;\n\t            break;\n\t        }\n\t    }\n\t    if (lst == -1) {\n\t        cout << pt << endl;\n\t        exit(0);\n\t    }\n\t    int cnt2 = 0;\n\t    for (register int i = 1; i <= ptr; i++) {\n\t        if (dp[tmp[i]] != dpup[pt] && dp[tmp[i]] != dp[tmp[lst]]) {\n\t            cout << -1 << endl;\n\t            exit(0);\n\t        }\n\t        if (dp[tmp[i]] == dp[tmp[lst]])\n\t            cnt2++;\n\t    }\n\t    if (cnt2 != 1) {\n\t        cout << -1 << endl;\n\t        exit(0);\n\t    }\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba)\n\t            continue;\n\t        if (dp[memchi[i].dest] != dpup[pt]) {\n\t            dpup[memchi[i].dest] = dpup[pt] * 233 + _p(ptr);\n\t            efs(memchi[i].dest, pt);\n\t            return;\n\t        }\n\t    }\n\t}\n\tvoid ywymain() {\n\t    n = get();\n\t    for (register int i = 1; i < n; i++) {\n\t        int s = get(), t = get();\n\t        add(s, t);\n\t        add(t, s);\n\t    }\n\t    if (n <= 2) {\n\t        cout << 1 << endl;\n\t        return;\n\t    }\n\t    int rt = 0;\n\t    for (register int i = 1; i <= n; i++) {\n\t        if (deg[i] > 1) {\n\t            rt = i;\n\t            break;\n\t        }\n\t    }\n\t    dfs(rt, 0);\n\t    if (candown[rt]) {\n\t        cout << rt << endl;\n\t        return;\n\t    }\n\t    efs(rt, 0);\n\t    cout << -1 << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1560429693,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1182D \u3010Complete Mirror\u3011"
    },
    {
        "content": "[$$\\large \\color{purple}My\\; Blog$$](https://www.cnblogs.com/p-b-p-b/p/11080024.html)\n\n\u4e2d\u8003\u8003\u5b8c\u4e4b\u540e\u7b2c\u4e00\u4e2aAC\uff0c\u7eaa\u5ff5\u4e00\u4e0bqwq\n\n## \u601d\u8def\n\n\u7b80\u5355\u7406\u89e3\u4e00\u4e0b\u9898\u4e4b\u540e\u5c31\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u628a\u5b83\u63d0\u4e3a\u6839\u4e4b\u540e\u6574\u68f5\u6811\u663e\u5f97\u975e\u5e38\u5bf9\u79f0\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u6811\u54c8\u5e0c\u6765\u5224\u7ed3\u6784\u662f\u5426\u76f8\u540c\uff0c\u800c\u4e14\u7531\u4e8e\u53ea\u6709\u5b8c\u5168\u5bf9\u79f0\u7684\u65f6\u5019\u624d\u6709\u7528\uff0c\u6240\u4ee5\u6bd4\u666e\u901a\u54c8\u5e0c\u8fd8\u7b80\u5355\u4e00\u4e9b\u2026\u2026\n\n\u5417\uff1f\n\n\u4f60\u9700\u8981\u6c42\u51fa\u5b50\u6811\u54c8\u5e0c\u503c\u3001\u7956\u5148\u54c8\u5e0c\u503c\uff0c\u8fd8\u8981\u8bb0\u4e0b\u6765\u8fd9\u4e2a\u70b9\u4e0b\u9762\u662f\u5426\u90fd\u76f8\u7b49\uff0c\u8fd8\u662f\u4f1a\u6709\u4e00\u4e2a\u6363\u4e71\u7684\uff0c\u8fd8\u662f\u6574\u4e2a\u90fd\u662f\u4e71\u7684\u3002\n\n\u7136\u540e\u8fd8\u8981\u7279\u5224\u4e00\u4e2a\u513f\u5b50\u3001\u4e24\u4e2a\u513f\u5b50\u3001\u6ca1\u6709\u513f\u5b50\u2026\u2026\n\n\u4e8e\u662f\u5f00\u5f00\u5fc3\u5fc3\u5730150\u884c\u4e86\uff0c\u5220\u6389\u7f3a\u7701\u6e90\u4e4b\u540e\u5927\u6982100\u884c\u3002\n\nemmm\u8bf4\u7684\u597d\u50cf\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u90a3\u518d\u8bf4\u4e00\u904d\u5427\u3002\n\n\u63d0\u4e3a\u6839\u4e4b\u540e\u4e00\u5b9a\u662f\u5148\u4e00\u6bb5\u5ea6\u6570\u4e3a1\u7684\u70b9\uff0c\u7136\u540e\u5f00\u59cb\u5206\u53c9\uff0c\u5176\u4e2d\u6bcf\u4e00\u5c42\u7684\u5206\u53c9\u6570\u76f8\u540c\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u513f\u5b50\u7684\u5b50\u6811\u5168\u90fd\u4e00\u6837\u4e14\u5408\u6cd5\uff0c\u90a3\u5c31\u975e\u5e38\u597d\u3002\uff08~~\u975e\u5e38\u597d\u662f\u4ec0\u4e48\u9b3c\u554a~~\uff09\n\n\u5982\u679c\u6709\u4e00\u4e2a\u7279\u7acb\u72ec\u884c\u7684\u513f\u5b50\uff0c\u90a3\u4e48\u6839\u80af\u5b9a\u5728\u90a3\u91cc\u9762\uff0c\u8981\u628a\u8fd9\u4e2a\u513f\u5b50\u7ed9\u8bb0\u4e0b\u6765\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4e0d\u4e00\u6837\u7684\u6216\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\u5c31\u7b97\u662f\u5e9f\u4e86\u3002\n\n\u6ce8\u610f\u8fd8\u8981\u6362\u6839DP\u4e00\u4e0b\u641e\u51fa\u4e00\u4e2a\u70b9\u4e0a\u65b9\u7684\u54c8\u5e0c\u503c\uff0c\u56e0\u4e3a\u63d0\u4e3a\u6839\u4e4b\u540e\u4e0a\u9762\u7684\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u5b50\u6811\u4e86\u3002\n\n\u6ce8\u610f\u8fd8\u8981\u5404\u79cd\u7279\u5224\u2026\u2026\n\n## \u4ee3\u7801\n\n\u54c8\u5e0c\u503c-1\u8868\u793a\u4e0d\u5408\u6cd5\uff0c$dn,up$\u8868\u793a\u6574\u68f5\u5b50\u6811/\u4e0a\u65b9\uff0c$W$\u8868\u793a\u6bd4\u8f83\u666e\u901a\u7684\u513f\u5b50\u7684\u54c8\u5e0c\u503c\uff0c$son1$\u8868\u793a\u8bb0\u5f55\u90a3\u4e2a\u7279\u7acb\u72ec\u884c\u7684\u513f\u5b50\u3002\n\n**\u611f\u8c22@litble\u795e\u4ed9\u6307\u51fa\u9519\u8bef\uff0c\u5df2\u7ecf\u6539\u6b63\u3002**\n\n```cpp\n#include<bits/stdc++.h>\nclock_t t=clock();\nnamespace my_std{\n    using namespace std;\n    #define pli pair<ll,int>\n    #define fir first\n    #define sec second\n    #define MP make_pair\n    #define rep(i,x,y) for (int i=(x);i<=(y);i++)\n    #define drep(i,x,y) for (int i=(x);i>=(y);i--)\n    #define go(x) for (int i=head[x];i;i=edge[i].nxt)\n    #define templ template<typename T>\n    #define sz 101010\n    #define mod 998244353ll\n    typedef long long ll;\n    typedef double db;\n    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n    templ inline T rnd(T l,T r) {return uniform_int_distribution<T>(l,r)(rng);}\n    templ inline bool chkmax(T &x,T y){return x<y?x=y,1:0;}\n    templ inline bool chkmin(T &x,T y){return x>y?x=y,1:0;}\n    templ inline void read(T& t)\n    {\n        t=0;char f=0,ch=getchar();double d=0.1;\n        while(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n        while(ch<='9'&&ch>='0') t=t*10+ch-48,ch=getchar();\n        if(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n        t=(f?-t:t);\n    }\n    template<typename T,typename... Args>inline void read(T& t,Args&... args){read(t); read(args...);}\n    char __sr[1<<21],__z[20];int __C=-1,__zz=0;\n    inline void Ot(){fwrite(__sr,1,__C+1,stdout),__C=-1;}\n    inline void print(register int x)\n    {\n        if(__C>1<<20)Ot();if(x<0)__sr[++__C]='-',x=-x;\n        while(__z[++__zz]=x%10+48,x/=10);\n        while(__sr[++__C]=__z[__zz],--__zz);__sr[++__C]='\\n';\n    }\n    void file()\n    {\n        #ifdef NTFOrz\n        freopen(\"a.in\",\"r\",stdin);\n        #endif\n    }\n    inline void chktime()\n    {\n        #ifndef ONLINE_JUDGE\n        cout<<(clock()-t)/1000.0<<'\\n';\n        #endif\n    }\n    #ifdef mod\n    ll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x%mod) if (y&1) ret=ret*x%mod;return ret;}\n    ll inv(ll x){return ksm(x,mod-2);}\n    #else\n    ll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x) if (y&1) ret=ret*x;return ret;}\n    #endif\n//  inline ll mul(ll a,ll b){ll d=(ll)(a*(double)b/mod+0.5);ll ret=a*b-d*mod;if (ret<0) ret+=mod;return ret;}\n}\nusing namespace my_std;\n\nint n;\nstruct hh{int t,nxt;}edge[sz<<1];\nint head[sz],ecnt;\nvoid make_edge(int f,int t)\n{\n    edge[++ecnt]=(hh){t,head[f]};\n    head[f]=ecnt;\n    edge[++ecnt]=(hh){f,head[t]};\n    head[t]=ecnt;\n}\n\nll dn[sz],up[sz];\nint son1[sz];\nll W[sz];\nint son[sz];\n#define v edge[i].t\nvoid dfs1(int x,int fa)\n{\n    int cnt=0;\n    vector<pli>V;int cc=0,s=0;\n    go(x) if (v!=fa)\n    {\n        dfs1(v,x);++cnt;\n        if (dn[v]!=-1) V.push_back(MP(dn[v],v));\n        else ++cc,s=v;\n    }\n    if (cnt==0) return (void)(dn[x]=0,W[x]=son1[x]=-1);\n    sort(V.begin(),V.end());\n    son[x]=cnt;\n    if (cc) dn[x]=-1,son1[x]=s;\n    if (cc>1) return (void)(son1[x]=W[x]=-1);\n    if (cnt==1)\n    {\n        if (cc) W[x]=-1;\n        else dn[x]=(V[0].fir*sz%mod+1)%mod,W[x]=V[0].fir,son1[x]=-1;\n        return;\n    }\n    if (cc) \n    {\n        if (V[0].fir==V[cnt-2].fir) W[x]=V[0].fir;\n        else W[x]=-1;\n        return;\n    }\n    if (V[0].fir==V[cnt-1].fir) dn[x]=((W[x]=V[0].fir)*sz%mod+cnt)%mod,son1[x]=-1;\n    else if (V[0].fir==V[cnt-2].fir) dn[x]=-1,W[x]=V[0].fir,son1[x]=V[cnt-1].sec;\n    else if (V[1].fir==V[cnt-1].fir) dn[x]=-1,W[x]=V[1].fir,son1[x]=V[0].sec;\n    else dn[x]=W[x]=son1[x]=-1;\n}\nvoid dfs2(int x,int fa)\n{\n    go(x) if (v!=fa)\n    {\n        if (son[x]==1)\n        {\n            if (x==1) up[v]=0;\n            else if (up[x]==-1) up[v]=-1;\n            else up[v]=(up[x]*sz%mod+1)%mod;\n        }\n        else if (dn[x]!=-1||son1[x]==v)\n        {\n            if (x==1) up[v]=(W[x]*sz%mod+son[x]-1)%mod;\n            else if (up[x]==W[x]&&up[x]!=-1) up[v]=(W[x]*sz%mod+son[x])%mod;\n            else up[v]=-1;\n        }\n        else if (son[x]==2&&son1[x]!=-1)\n        {\n            ll w=dn[son1[x]];\n            if (w==-1) up[v]=-1;\n            else if (x==1) up[v]=(w*sz%mod+1)%mod;\n            else if (w==up[x]) up[v]=(w*sz%mod+2)%mod;\n            else up[v]=-1;\n        }\n        else up[v]=-1;\n        dfs2(v,x);\n    }\n}\n\nint main()\n{\n    file();\n    read(n);\n    if (n<=3) return puts(\"1\"),0; \n    int x,y;\n    rep(i,1,n-1) read(x,y),make_edge(x,y);\n    dfs1(1,0);\n    rep(i,1,n) up[i]=-1;\n    dfs2(1,0);\n    if (dn[1]!=-1) return puts(\"1\"),0;\n    rep(i,2,n) if (up[i]==W[i]&&dn[i]!=-1&&son[i]) return printf(\"%d\",i),0;\n    rep(i,2,n) if (!son[i]&&up[i]!=-1) return printf(\"%d\",i),0;\n    puts(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1561390408,
        "uid": 76481,
        "name": "p_b_p_b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1182D \u3010Complete Mirror\u3011"
    }
]