[
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u9897 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u7ed9\u5b9a\u6811\u7684\u5f62\u6001\u3002\n\n\u6709 $m$ \u6761\u9650\u5236\uff0c\u6bcf\u6761\u9650\u5236\u5f62\u5982 $(u,v,w)$\uff0c\u8868\u793a\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u5f02\u6216\u548c\u4e3a $w$\u3002\n\n\u4f60\u9700\u8981\u586b\u5165\u6811\u8fb9\u7684\u8fb9\u6743\uff0c\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u57fa\u7840\u4e0a\u8ba9\u6240\u6709\u6811\u8fb9\u7684\u5f02\u6216\u548c\u6700\u5c0f\uff0c\u5e76\u8f93\u51fa\u4f60\u6784\u9020\u7684\u8fb9\u6743\u3002\u82e5\u65e0\u89e3\u8f93\u51fa `NO`\u3002\n\n## \u9898\u89e3\n\n### \u8f6c\u5316\u9898\u610f\n\n\u4ee4 $f_x$ \u8868\u793a $x$ \u5230\u6839\u7684\u5f02\u6216\u548c\uff0c\u90a3\u4e48 $(u,v,w)$ \u7684\u9650\u5236\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210 $f_u \\oplus f_v = w$\uff0c\u8fd9\u4e00\u6b65\u6211\u4eec\u628a\u8fb9\u6743\u8f6c\u5316\u6210\u4e86\u70b9\u6743\u3002\u5c06\u70b9\u6743\u8f6c\u5316\u6210\u8fb9\u6743\u7684\u64cd\u4f5c\u662f\u5bf9\u4e8e\u6811\u8fb9 $(u,v,w)$\uff0c$w = f_u \\oplus f_v$ \uff08\u6ce8\u610f\u8fd9\u4e0d\u662f\u5bf9\u9650\u5236\u64cd\u4f5c\u7684\u9006\u5411\u8f6c\u5316\uff09\u3002\u4e4b\u540e\u53ea\u9700\u8981\u8003\u8651\u70b9\u6743\u3002\n\n\u5c06\u8fd9\u4e9b\u9650\u5236\u8f6c\u5316\u6210\u56fe\uff0c\u5bf9\u4e8e $(u,v,w)$ \u7684\u9650\u5236\uff0c\u6211\u4eec\u5c06\u5176\u8f6c\u5316\u6210\u4e00\u6761\u7531 $u$ \u5230 $v$ \u8fb9\u6743\u4e3a $w$ \u7684\u65e0\u5411\u8fb9\u3002\u6700\u7ec8\u8fd9\u4e9b\u9650\u5236\u5c06\u6210\u4e3a\u4e00\u4e9b\u8054\u901a\u5757\u3002\n\n### \u5224\u65ad\u662f\u5426\u6709\u89e3\n\n\u904d\u5386\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u5e76\u5bf9\u5b83\u7684\u8d4b\u503c\uff0c\u56e0\u4e3a\u4e4b\u540e\u8981\u8fdb\u884c\u6700\u5c0f\u5316\u8c03\u6574\uff0c\u6240\u4ee5\u73b0\u5728\u7684\u8d4b\u503c\u968f\u610f\u3002\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u662f\u65e0\u89e3\u7684\uff1a\u5f53\u4e24\u6b21\u5bf9\u4ed6\u7684\u8d4b\u503c\u77db\u76fe\u7684\u65f6\u5019\u65e0\u89e3\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5 dfs \u904d\u5386\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u5bf9\u5176\u8d4b\u503c\u548c\u8fdb\u884c\u6709\u89e3\u5224\u65ad\u3002\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5904\u7406\u76ee\u524d\u7684\u7ed3\u679c $ans$\u3002\n\n### \u6700\u5c0f\u5316\u8c03\u6574\n\n\u6bcf\u4e2a\u8054\u901a\u5757\u7684\u5185\u90e8\u7ed3\u6784\u662f\u786e\u5b9a\u7684\uff0c\u6211\u4eec\u80fd\u8c03\u6574\u7684\u53ea\u6709\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\u7b2c\u4e00\u4e2a\u70b9\u7684\u8d4b\u503c\u3002\u800c\u4e14\u53ea\u8981\u6211\u4eec\u80fd\u5728\u6240\u6709\u8054\u901a\u5757\u4e2d\u6709\u4e00\u4e2a\u7684\u4fee\u6539\u662f\u80fd\u76f4\u63a5\u5f71\u54cd\u7b54\u6848\u7684\uff0c\u7531\u4e8e\u5f02\u6216\u7684\u6027\u8d28\uff0c\u6700\u540e\u7684\u7b54\u6848\u4e3a $0$\u3002\n\n\u8003\u8651\u4e00\u4e2a\u8fde\u901a\u5757\u600e\u4e48\u80fd\u5f71\u54cd\u7b54\u6848\u3002\u5c06\u6bcf\u4e2a\u70b9\u8f6c\u5316\u6210\u8fb9\u6743\u540e\uff0c\u6bcf\u4e2a\u70b9\u6743\u7684\u8ba1\u7b97\u6b21\u6570\u662f\u4ed6\u5728\u539f\u56fe\u4e0a\u7684\u5ea6\u6570\u6b21\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u8fd9\u4e2a\u70b9\u5728\u539f\u56fe\u4e0a\u5ea6\u6570\u4e3a\u5947\u6570\u65f6\uff0c\u4fee\u6539\u8fd9\u4e2a\u70b9\u4f1a\u5f71\u54cd\u7b54\u6848\u4e00\u6b21\u3002\u5f53\u5728\u8fd9\u4e2a\u8fde\u901a\u5757\u91cc\u6709\u5947\u6570\u4e2a\u8fd9\u6837\u7684\u70b9\uff0c\u5c31\u4f1a\u5f71\u54cd\u7b54\u6848\u5947\u6570\u6b21\uff0c\u624d\u80fd\u5f71\u54cd\u7b54\u6848\u3002\n\n\u64cd\u4f5c\u662f\u5c06\u8fd9\u4e2a\u8fde\u901a\u5757\u5185\u6240\u6709\u7684\u70b9\u7684\u8d4b\u503c\u90fd\u5f02\u6216\u4e0a $ans$\uff0c\u6700\u7ec8\u7b54\u6848\u4e3a $0$\u3002\n\n\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u4e2a\u8c03\u6574\u90a3\u4e48\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $ans$\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<class T>void read(T &x){\n    x=0;int f=0;char ch=getchar();\n    while(ch<'0'||ch>'9')  {f|=(ch=='-');ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    x=f?-x:x;return;\n}\n#define int long long\nconst int N=3e5+5;\nint n,m;\nstruct node{int u,v;}inp[N];\nbool vis[N];\nint hd[N],tot;\nstruct edge{int to,nxt,val;}a[N<<1];\nvoid add(int u,int v,int w){\n    a[++tot]=(edge){v,hd[u],w};\n    hd[u]=tot;\n}\nint val[N],deg[N];\nvector<int> point,chg;\nvoid dfs(int u){\n\tvis[u]=1;\n    point.push_back(u);\n    for(int i=hd[u];i;i=a[i].nxt){\n        int to=a[i].to;\n        if(vis[to]){\n            if(val[to]^val[u]^a[i].val){\n                puts(\"NO\");\n                exit(0);\n            }\n            continue;\n        }\n        val[to]=val[u]^a[i].val;\n        dfs(to);\n    }\n}\nmain(){\n    read(n),read(m);\n    for(int i=1;i<n;i++){\n    \t read(inp[i].u),read(inp[i].v);\n    \t deg[inp[i].u]++,deg[inp[i].v]++;\n    }\n    for(int i=1;i<=m;i++){\n        int u,v,w;\n        read(u),read(v),read(w);\n        add(u,v,w),add(v,u,w);\n    }\n    int ans=0;;\n    for(int i=1;i<=n;i++){\n        if(!vis[i]){\n            point.clear();\n            dfs(i);\n            int fg=0;\n            for(int j:point) fg^=(deg[j]&1);\n            if(fg&&(!chg.size()))for(int j:point) chg.push_back(j);\n            for(int j:point) if(deg[j]&1)ans^=val[j];\n        }\n    }\n    if(chg.size())for(int i:chg)val[i]^=ans;\n    puts(\"Yes\");\n    for(int i=1;i<n;i++) printf(\"%d \",val[inp[i].u]^val[inp[i].v]);\n    return 0;\n}\n```\n",
        "postTime": 1676258600,
        "uid": 151947,
        "name": "\u6d1b\u6d54",
        "ccfLevel": 0,
        "title": "CF1788F \u9898\u89e3"
    },
    {
        "content": "\u5957\u8def\u5730\u4ee4 $s_x$ \u8868\u793a\u70b9 $x$ \u5230\u6839\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u548c\uff0c\u4e8e\u662f\u5f62\u5982\u70b9 $x$ \u5230 $y$ \u7684\u5f02\u6216\u548c\u5fc5\u987b\u662f $v$ \u7684\u6027\u8d28\u53ef\u4ee5\u8f6c\u5316\u6210 $s_x\\oplus s_y=v$ \u7684\u5f62\u5f0f\u3002\u7136\u540e\u6839\u636e\u5f02\u6216\u7684\u6027\u8d28\uff0c\u5982\u679c\u77e5\u9053\u4e86 $a\\oplus b,b\\oplus c$ \u7684\u503c\uff0c\u90a3\u4e48 $a\\oplus c$ \u7684\u503c\u662f\u786e\u5b9a\u7684\u3002\u6240\u4ee5\u524d\u9762\u7684\u9650\u5236\u4f1a\u628a $s$ \u5206\u6210\u4e00\u4e9b\u8fde\u901a\u5757\uff0c\u53ef\u4ee5\u62bd\u79bb\u8fde\u901a\u5757\u4e2d\u7684\u4e00\u68f5\u751f\u6210\u6811\u6c42\u51fa\u70b9\u503c\u4e4b\u95f4\u7684\u5f02\u6216\u503c\uff0c\u7136\u540e\u7528\u90a3\u4e9b\u975e\u6811\u8fb9\u53bb\u68c0\u67e5\uff0c\u5982\u679c\u6709\u54ea\u4e2a\u975e\u6811\u8fb9\u4e0d\u6ee1\u8db3\u90a3\u4e48\u6574\u9053\u9898\u5c31\u65e0\u89e3\u4e86\u3002\u81f3\u6b64\u5c31\u53ef\u4ee5\u6784\u9020\u65b9\u6848\u4e86\u3002\n\n\u4f46\u662f\u5982\u4f55\u8ba9\u6240\u6709\u6811\u8fb9\u7684\u5f02\u6216\u548c\u6700\u5c0f\u5462\uff0c\u8003\u8651\u5982\u4f55\u7528 $s$ \u53bb\u8868\u793a\u8fb9\u7684\u5f02\u6216\u548c\u3002\u4e00\u6761\u8fde\u63a5 $x,y$\uff08\u5e76\u4e14 $x$ \u662f $y$ \u7684\u7236\u4eb2\uff09\u7684\u8fb9\u7684\u8fb9\u6743\u662f $s_x\\oplus s_y$\uff0c\u4e8e\u662f\u53d1\u73b0\u5f02\u6216\u5230\u6700\u540e\uff0c\u90a3\u4e9b\u62e5\u6709\u5076\u6570\u4e2a\u5b69\u5b50\u7684\u70b9\u5bf9\u5e94\u7684 $s$ \u4f1a\u7559\u5728\u67ff\u5b50\u91cc\uff0c\u5269\u4e0b\u7684\u5c31\u4e0d\u89c1\u4e86\uff0c\u6211\u4eec\u79f0\u8fd9\u4e9b\u70b9\u662f\u5173\u952e\u70b9\u3002\n\n\u8003\u8651\u5982\u4f55\u9ad8\u6548\u5730\u964d\u4f4e\u5f02\u6216\u548c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\u5206\u522b\u8003\u8651\uff0c\u663e\u7136\u5982\u679c\u6539\u53d8\u4e86\u4e00\u4e2a\u70b9\u7684 $s$\uff0c\u90a3\u4e48\u8fde\u901a\u5757\u5185\u6240\u6709\u70b9\u7684 $s$ \u90fd\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u904d\u5386\u4e00\u4e0b\u7edf\u8ba1\u8fde\u901a\u5757\u5185\u5173\u952e\u70b9\u7684\u6570\u91cf\uff0c\u5982\u679c\u662f\u5076\u6570\uff0c\u90a3\u4e48\u4e0d\u4f1a\u6539\u53d8\u6700\u540e\u7684\u7b54\u6848\uff0c\u5ffd\u7565\uff1b\u5426\u5219\u8d2a\u5fc3\u5730\u5c1d\u8bd5\u7ed9\u6bcf\u4e2a $s$ \u5f02\u6216\u4e0a\u5f53\u524d\u6784\u9020\u51fa\u6765\u7684\u5f02\u6216\u548c\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u628a\u8fb9\u6743\u5f02\u6216\u548c\u6e05\u96f6\uff0c\u663e\u7136\u6700\u4f18\u3002\n\n\u8981\u7279\u6b8a\u5904\u7406\uff0c\u56e0\u4e3a $s_{root}$ \u53ea\u80fd\u662f $0$\u3002\u8f93\u51fa\u65b9\u6848\u5f88\u7b80\u5355\u3002\n\n```cpp\n#include<bits/stdc++.h>\n//#define feyn\nusing namespace std;\nconst int N=300010;\ninline void read(int &wh){\n    wh=0;int f=1;char w=getchar();\n    while(w<'0'||w>'9'){if(w=='-')f=-1;w=getchar();}\n    while(w<='9'&&w>='0'){wh=wh*10+w-'0';w=getchar();}\n    wh*=f;return;\n}\n\nint m,n,sum[N],ans[N];\nbool matter[N];\n\nnamespace pre{\n\tstruct edge{\n\t\tint t,v,nxt;\n\t}e[N<<1];\n\tint head[N],esum;\n\tinline void add(int fr,int to,int val){\n\t\te[++esum]=(edge){to,val,head[fr]};head[fr]=esum;\n\t}\n\tvoid dfs(int wh,int fa){\n\t\tint nowNum=0;\n\t\tfor(int i=head[wh],th;i;i=e[i].nxt){\n\t\t\tif((th=e[i].t)==fa)continue;\n\t\t\tdfs(th,wh);++nowNum;\n\t\t}\n\t\tif((nowNum&1)==0&&wh!=1)matter[wh]=true;\n\t}\n\tvoid find(int wh,int fa){\n\t\tfor(int i=head[wh],th;i;i=e[i].nxt){\n\t\t\tif((th=e[i].t)==fa)continue;\n\t\t\tans[e[i].v]=sum[th]^sum[wh];\n\t\t\tfind(th,wh);\n\t\t}\n\t}\n}\nnamespace suf{\n\tstruct edge{\n\t\tint t,v,nxt;\n\t}e[N<<1];\n\tint head[N],esum,du[N];\n\tinline void add(int fr,int to,int val){\n\t\t++du[fr],++du[to];\n\t\te[++esum]=(edge){to,val,head[fr]};head[fr]=esum;\n\t}\n\tbool vis[N];\n\tvoid dfs(int wh){\n\t\tvis[wh]=true;\n\t\tfor(int i=head[wh],th;i;i=e[i].nxt){\n\t\t\tif(vis[th=e[i].t]){\n\t\t\t\tif((sum[wh]^sum[th])!=e[i].v){\n\t\t\t\t\tputs(\"No\");exit(0);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsum[th]=sum[wh]^e[i].v;\n\t\t\tdfs(th);\n\t\t}\n\t}\n\tbool ched[N];int chNum;\n\tvoid change(int wh){\n\t\tched[wh]=true;chNum+=matter[wh];\n\t\tfor(int i=head[wh],th;i;i=e[i].nxt){\n\t\t\tif(ched[th=e[i].t])continue;\n\t\t\tsum[th]=e[i].v^sum[wh];change(th);\n\t\t}\n\t}\n\tvoid main(){\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(vis[i]==false)dfs(i);\n\t\t}\n\t\tint all=0;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(matter[i])all^=sum[i];\n\t\t}\n\t\tchange(1); \n\t\tfor(int i=2;i<=m;i++){\n\t\t\tif(ched[i])continue;\n\t\t\tsum[i]^=all;chNum=0;\n\t\t\tchange(i);\n\t\t\tif(chNum&1)break;\n\t\t}\n\t}\n}\n\nsigned main(){\n\t\n\t#ifdef feyn\n\tfreopen(\"in.txt\",\"r\",stdin);\n\t#endif\n\t\n\tread(m);read(n);int s1,s2,s3;\n\tfor(int i=1;i<m;i++){\n\t\tread(s1);read(s2);\n\t\tpre::add(s1,s2,i);pre::add(s2,s1,i);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tread(s1);read(s2);read(s3);\n\t\tsuf::add(s1,s2,s3);suf::add(s2,s1,s3);\n\t}\n\tpre::dfs(1,0);\n\tsuf::main();puts(\"Yes\");\n\tpre::find(1,0);\n\tfor(int i=1;i<m;i++)printf(\"%d \",ans[i]);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1676287210,
        "uid": 302383,
        "name": "Feyn",
        "ccfLevel": 0,
        "title": "CF1788F"
    },
    {
        "content": "[CF1788F](https://www.luogu.com.cn/problem/CF1788F)\n\u6709\u70b9\u610f\u601d\u7684\u9898\u76ee\u3002\n\n***\n\n### \u9898\u610f\n\n\u8bbe $f(u,v)$ \u8868\u793a\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\u6743\u503c\u5f02\u6216\u548c\u3002\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u6811\uff0c$q$ \u4e2a\u5173\u7cfb\uff0c\u6bcf\u4e2a\u5173\u7cfb\u5305\u542b\u4e09\u4e2a\u53c2\u6570 $u$\uff0c$v$ \u548c $w$\uff0c\u8981\u6c42\u6784\u9020\u6811\u7684\u8fb9\u6743\uff0c\u4f7f\u5f97 $\\forall i,f(u_i,v_i)=w$\u3002\u65e0\u89e3\u8f93\u51fa NO\uff0c\u6709\u89e3\u5219\u8f93\u51fa YES \u4ee5\u53ca\u4f7f\u5f97\u6240\u6709\u8fb9\u7684\u5f02\u6216\u548c\u6700\u5c0f\u7684\u65b9\u6848\u3002\n\n***\n\n### \u89e3\u6cd5\n\n\u8bbe $g(u)$ \u8868\u793a\u4ece $1$ \u5230 $u$ \u7684\u8def\u5f84\u6743\u503c\u5f02\u6216\u548c\u3002$f(u,v) = g(u) \\oplus g(v)$ \u5373 $g(u) \\oplus g(v) = w$\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u4e0d\u8003\u8651\u8fb9\u6743\uff0c\u53ea\u8003\u8651\u7ed9\u6bcf\u4e2a\u70b9\u7684 $g(u)$ \u8d4b\u503c\u3002\u7531\u4e8e\u5f02\u6216\u503c\u53ea\u548c\u5355\u72ec\u4e00\u4f4d\u4e0a\u7684\u503c\u6709\u5173\uff0c\u8003\u8651\u6bcf\u4e00\u4f4d\u62c6\u5f00\u5904\u7406\u3002\n\n\u9996\u5148\u4fdd\u8bc1\u65b9\u6848\u5408\u6cd5\u3002  \n\u65b0\u5efa\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u65e0\u5411\u56fe $G$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5173\u7cfb\uff0c\u5728 $u$ \u548c $v$ \u4e4b\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a $w$ \u7684\u8fb9\uff0c\u5047\u8bbe\u6b64\u65f6\u5904\u7406\u5230\u7b2c $i$ \u4f4d\uff0c\u5982\u679c $w$ \u7684\u7b2c $i$ \u4f4d\u4e3a $0$ \u8bf4\u660e $u$ \u548c $v$ \u7684\u7b2c $i$ \u4f4d\u5fc5\u987b\u76f8\u7b49\uff0c\u5426\u5219\u4e0d\u76f8\u7b49\u3002\u6bcf\u6b21\u5bf9\u6240\u6709\u8fde\u901a\u5757\u6309\u7167\u8fb9\u6743\u7684\u7b2c $i$ \u4f4d\u9ed1\u767d\u67d3\u8272\uff0c\u77db\u76fe\u76f4\u63a5\u5224\u5b9a\u4e3a\u65e0\u89e3\u3002\n\n\u7136\u540e\u8003\u8651\u4f7f\u5f97\u4ee3\u4ef7\u6700\u5c0f\u3002  \n\u6811\u4e0a\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u7b49\u4e8e $g(u) \\oplus g(v)$\uff0c\u8fb9\u6743\u8f6c\u70b9\u6743\uff0c\u6709\u5076\u6570\u5ea6\u7684\u70b9\u6ca1\u6709\u8d21\u732e\uff0c\u53ea\u8003\u8651\u5947\u6570\u5ea6\u70b9\u7684\u8d21\u732e\u3002  \n\u4f9d\u7136\u662f\u62c6\u5f00\u6bcf\u4e00\u4f4d\u5904\u7406\uff0c\u968f\u540e\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\u6c42\u8d21\u732e\uff0c\u8bbe\u8fde\u901a\u5757\u91cc\u67d3\u4e86\u9ed1\u8272\u7684\u6709\u8d21\u732e\u7684\u70b9\u6709 $c_1$ \u4e2a\uff0c\u767d\u8272\u6709 $c_0$ \u4e2a\uff0c\u5982\u679c $c_0$ \u548c $c_1$ \u5947\u5076\u6027\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u4e0a\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u8d21\u732e\u662f\u56fa\u5b9a\u7684\uff0c\u5426\u5219\u53ef\u4ee5 $01$ \u7ffb\u8f6c\u6539\u53d8\u8fde\u901a\u5757\u7684\u8d21\u732e\u3002  \n\u7531\u4e8e\u6bcf\u4e00\u4f4d\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u4ee3\u4ef7\u7684\u6bcf\u4e00\u4f4d\u80fd\u53d6 $0$ \u5c31\u53d6 $0$\uff0c\u5982\u679c\u662f $1$ \u5c31\u5c1d\u8bd5\u6539\u53d8\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u8d21\u732e\u4f7f\u5b83\u53d8\u6210 $0$\u3002\n\n\u7136\u540e\u5462\uff0c\u505a\u5b8c\u529b\uff01\u590d\u6742\u5ea6 $\\Theta(n\\log_2w)$\uff0c$2.5 \\times 10^5$ \u521a\u597d\u8dd1\u5f97\u8fc7\u3002\n\n\ncode\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2.5e5 + 10;\nstruct Edge {\n    int v, w;\n    Edge() {}\n    Edge(int v, int w) : v(v), w(w) {}\n};\nvector<Edge> G[maxn];\nvector<int> gp[maxn];\nvector<int> p[maxn];\nint wb[32][maxn];\nbool flip[32][maxn];\nint col[maxn];\nbool deg[maxn];\nint sum[maxn];\nint colcnt;\nint n, q;\nvoid div(int u) {\n    gp[colcnt].emplace_back(u);\n    col[u] = colcnt;\n    for (auto e : G[u]) {\n        int v = e.v;\n        if (col[v])\n            continue;\n        div(v);\n    }\n}\nint o;\nint z;\nvoid dfs(int u) {\n    for (auto e : G[u]) {\n        int v = e.v, w = e.w;\n        bool opt = bool(w & o);\n        if (wb[z][v] == -1) {\n            wb[z][v] = wb[z][u] ^ opt;\n            dfs(v);\n        } else if (wb[z][v] != (wb[z][u] ^ opt)) {\n            printf(\"no\");\n            exit(0);\n        }\n    }\n}\nint u[maxn], v[maxn];\nint main() {\n    memset(wb, -1, sizeof(wb));\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i < n; i++) {\n        scanf(\"%d%d\", u + i, v + i);\n        deg[u[i]] ^= 1;\n        deg[v[i]] ^= 1;\n    }\n    for (int i = 1; i <= q; i++) {\n        int u, v, w;\n        scanf(\"%d%d%d\", &u, &v, &w);\n        G[u].emplace_back(v, w);\n        G[v].emplace_back(u, w);\n    }\n    for (int i = 1; i <= n; i++) {\n        if (!col[i]) {\n            colcnt++;\n            div(i);\n        }\n    }//\u62c6\u5206\u8fde\u901a\u5757\n    for (int i = 1; i <= n; i++) {\n        if (deg[i])\n            p[col[i]].emplace_back(i);\n    }//\u627e\u6709\u8d21\u732e\u7684\u70b9\n    for (z = 0, o = 1; z <= 30; z++, o <<= 1) {\n        for (int i = 1; i <= colcnt; i++) {\n            wb[z][gp[i].front()] = 0;\n            dfs(gp[i].front());\n        }\n    }//\u9ed1\u767d\u67d3\u8272\n    printf(\"yes\\n\");\n    for (z = 0, o = 1; z <= 30; z++, o <<= 1) {\n        int tot = 0;\n        for (int i = 1; i <= colcnt; i++) {\n            if (p[i].empty())//\u5904\u7406\u8fde\u901a\u5757\u7684\u8d21\u732e\n                continue;\n            int x = 0;\n            for (int j : p[i]) {\n                if (wb[z][j])\n                    x ^= 1;\n            }\n            tot ^= x;\n        }\n        if (tot) {//\u5982\u679c\u662f1\u5c31\u5c1d\u8bd5\u6539\u56de0\n            for (int i = 1; i <= colcnt; i++) {\n                if (p[i].empty())\n                    continue;\n                int cnt0 = 0, cnt1 = 0;\n                int x = 0;\n                for (int j : p[i]) {\n                    if (wb[z][j] == 0)\n                        cnt0++;\n                    else\n                        cnt1++, x ^= 1;\n                }\n                if ((cnt0 & 1) != (cnt1 & 1)) {\n                    tot ^= 1;\n                    flip[z][i] = 1;\n                    break;\n                }\n            }\n        }\n    }\n    for (int i = 1; i <= n; i++) {//\u6839\u636e\u6bcf\u4e00\u4f4d\u7684\u4fe1\u606f\u63a8\u51fag(u)\n        for (z = 0, o = 1; z <= 30; z++, o <<= 1) {\n            if (wb[z][i] ^ flip[z][col[i]])\n                sum[i] |= o;\n        }\n    }\n    for (int i = 1; i < n; i++) {//\u8f93\u51fa\u7b54\u6848\n        printf(\"%d \", sum[u[i]] ^ sum[v[i]]);\n    }\n}\n```",
        "postTime": 1676354896,
        "uid": 401583,
        "name": "a_z_c",
        "ccfLevel": 6,
        "title": "CF1788F"
    }
]