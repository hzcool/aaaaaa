[
    {
        "content": "\u9996\u5148\u53d1\u73b0\u6240\u6c42\u5468\u957f\u7b49\u4e8e(\u4e2d\u95f4\u7ea2\u6805\u680f\u7684\u9ad8\u5ea6+\u6805\u680f\u4e2a\u6570) $\\times 2$\uff0c\u56e0\u6b64\u4e0d\u59a8\u5148\u628a\u6240\u6709\u8be2\u95ee\u90fd\u9664\u4ee5 $2$\u3002\u7136\u540e\u6ce8\u610f\u5230\u7ea2\u6805\u680f\u4e2a\u6570\u5f88\u5c0f\uff0c\u53ef\u4ee5\u679a\u4e3e\u4e2d\u95f4\u7684\u7ea2\u8272\u6805\u680f\u662f\u4ec0\u4e48\u3002  \n\n\u8003\u8651\u6240\u6709 $a_i$ \u4e92\u4e0d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u8be2\u95ee $k$ \u7684\u7b54\u6848\u662f $2^k C_n^k$\uff0c\u56e0\u4e3a\u53ef\u4ee5\u4efb\u9009 $k$ \u4e2a\uff0c\u6bcf\u4e2a\u53ef\u4ee5\u653e\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u3002  \n\n\u63a5\u4e0b\u6765\u8003\u8651\u76f8\u540c\u7684 $a_i$ \uff0c\u4e0d\u96be\u53d1\u73b0\u4e24\u4e2a\u4ee5\u4e0a\u76f8\u540c\u7684\u7b49\u4ef7\u4e8e\u4e24\u4e2a\u76f8\u540c\u7684\uff0c\u5047\u8bbe\u6709 $x$ \u5bf9\u76f8\u540c\u7684\u6805\u680f\uff0c\u7b54\u6848\u4e3a $C_{2x}^k$\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4efb\u610f\u4e00\u5bf9\u5982\u679c\u7b2c\u4e00\u4e2a\u88ab\u9009\u5219\u8868\u793a\u5de6\u8fb9\u653e\u4e00\u4e2a\uff0c\u7b2c\u4e8c\u4e2a\u88ab\u9009\u8868\u793a\u53f3\u8fb9\u653e\u4e00\u4e2a\uff0c\u4e24\u4e2a\u90fd\u88ab\u9009\u8868\u793a\u4e24\u8fb9\u90fd\u653e\u3002  \n\n\u7136\u540e\u628a\u4e24\u79cd\u60c5\u51b5\u5377\u4e00\u4e0b\u5f97\u5230\u7b54\u6848\u3002\u6ce8\u610f\u8981\u52a0\u4e0a\u5f53\u524d\u7ea2\u6805\u680f\u7684\u957f\u5ea6 $+ 1$\u3002\n\n\u5c0f\u53f7\u5728cf\u4e0a\u7684\u63d0\u4ea4\u6682\u65f6\u662f\u6700\u77ed\u89e3\uff1f  \n[\u4ee3\u7801](https://codeforces.com/contest/1251/submission/63386062)",
        "postTime": 1572012414,
        "uid": 48355,
        "name": "EternalAlexander",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1251F \u3010Red-White Fence\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u6709$n$\u5757\u767d\u677f\u548c$m$\u5757\u7ea2\u677f\uff0c\u7b2c$i$\u5757\u767d\u677f\u7684\u9ad8\u5ea6\u4e3a$a_i$\uff0c\u7b2c$i$\u5757\u7ea2\u677f\u7684\u9ad8\u5ea6\u4e3a$b_i$\u3002\n\n\u89c4\u5b9a\u4e00\u4e2a\u6805\u680f\u662f\u597d\u7684\u5f53\u4e14\u4ec5\u5f53\u7ec4\u6210\u5b83\u7684\u53ea\u6709\u4e00\u5757\u7ea2\u677f\uff0c\u5e76\u4e14\u8fd9\u5757\u7ea2\u677f\u5de6\u8fb9\u7684\u6240\u6709\u767d\u677f\u9ad8\u5ea6\u4e25\u683c\u9012\u589e\uff0c\u53f3\u8fb9\u7684\u9ad8\u5ea6\u4e25\u683c\u9012\u51cf\u3002\n\n\u73b0\u5728\u6709$q$\u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u6709\u4e00\u4e2a$Q$\uff0c\u4f60\u9700\u8981\u56de\u7b54\u6709\u591a\u5c11\u79cd\u597d\u7684\u6805\u680f\u6ee1\u8db3\u6805\u680f\u7684\u5468\u957f\u4e3a$Q$\u3002\n\n$\\texttt{Data Range:}1\\leq n,q,a_i,b_i\\leq 3\\times 10^5,1\\leq m\\leq 5,1\\leq Q_i\\leq 1.2\\times 10^6$\n\n### \u9898\u89e3\n\n\u8003\u8651\u5230$\\texttt{\\color{black}E\\color{red}ternalAlexander}$\u4e0d\u8d34\u4ee3\u7801\u8fd8\u8981\u8ba9\u6211\u4eec\u8fd9\u7b49\u849f\u84bb\u53bb$\\texttt{CF}$\u4e0a\u770b\uff0c\u6211\u51b3\u5b9a\u5199\u4e00\u7bc7\u6709\u4ee3\u7801\u7684\u9898\u89e3\u3002\n\n\u7ec4\u5408\u8ba1\u6570\u597d\u9898\u3002\n\n\u56e0\u4e3a\u6805\u680f\u9ad8\u5ea6\u662f\u5355\u5cf0\u7684\uff0c~~\u7531\u5c0f\u5b66\u5965\u6570\u53ef\u5f97~~\uff0c\u5468\u957f\u4e3a$($\u4e2d\u95f4\u7ea2\u677f\u7684\u9ad8\u5ea6$+$\u7ec4\u6210\u6805\u680f\u7684\u677f\u5b50\u7684\u4e2a\u6570$)\\times 2$\u3002\u4e8e\u662f\uff0c\u4e0d\u59a8\u628a\u6240\u6709\u7684\u8be2\u95ee\u9664\u4ee5$2$\u518d\u770b\u3002\n\n\u53d1\u73b0\u7ea2\u8272\u677f\u5b50\u6700\u591a\u53ea\u6709$5$\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7ea2\u8272\u677f\u5b50\uff0c\u5728\u679a\u4e3e\u5f97\u540c\u65f6\uff0c\u4e2d\u95f4\u7ea2\u677f\u5b50\u7684\u9ad8\u5ea6\u5c31\u786e\u5b9a\u4e0b\u6765\u4e86\u3002\n\n\u5148$\\texttt{dp}$\u3002\u8bbe$dp_{i,j}$\u4e3a\u7528\u524d$i$\u5c0f\u7684\u677f\u5b50\u9009\u51fa$j$\u4e2a\u6784\u6210\u5148\u4e0a\u5347\u540e\u4e0b\u964d\u4e2d\u95f4\u53ef\u4ee5\u76f8\u7b49\uff08\u8fd9\u91cc\u53ea\u6709\u767d\u677f\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f8\u7b49\uff09\u7684\u65b9\u6848\u6570\uff0c\u6709\n\n$$dp_{i,j}=dp_{i-1,j-1}+2\\times dp_{i,j-1}+[t_i\\geq 2]dp_{i-1,j-2}$$\n\n\u5176\u4e2d$t_i$\u662f\u957f\u5ea6\u7b2c$i$\u5c0f\u7684\u677f\u5b50\u7684\u4e2a\u6570\uff0c\u8fd9\u4e2a\u8fd8\u662f\u6bd4\u8f83\u663e\u7136\u7684\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u662f$O(n^2)$\u7684\uff0c\u5e76\u4e14\u8fd9\u6837\u4e00\u770b\u597d\u50cf\u5199\u4e0d\u51fa\u751f\u6210\u51fd\u6570\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5206\u5f00\u8003\u8651\u8fd9\u4e2a$\\texttt{dp}$\u5f0f\u5b50\u3002\n\n\u5047\u8bbe\u6240\u6709\u677f\u5b50\u4e92\u4e0d\u76f8\u540c\uff0c\u5219\u7b54\u6848\u4e3a$2^jC_i^j$\uff0c\u5bf9\u4e8e\u9009\u51fa\u7684$j$\u4e2a\u677f\u5b50\uff0c\u4efb\u9009\u653e\u5230\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u5373\u53ef\u3002\n\n\u5982\u679c\u6240\u6709\u957f\u5ea6\u76f8\u540c\u7684\u677f\u5b50\u90fd\u6709$2$\u5757\uff0c\u7b54\u6848\u662f$C_{2i}^{j}$\u3002\n\n\u73b0\u5728\u4e24\u4e2a\u4e1c\u897f\u90fd\u6709\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5377\u4e00\u8d77\u3002\n\n\u5bf9\u4e8e\u679a\u4e3e\u5230\u7684\u957f\u5ea6\u4e3a$b$\u7ea2\u8272\u6728\u6761\uff0c\u8003\u8651$f_i=2^iC_{u}^i$\u548c$g_i=C_{2v}^i$\uff0c\u5176\u4e2d$u$\u4e3a\u957f\u5ea6\u5c0f\u4e8e$b$\u4e14\u6570\u91cf\u4e3a$1$\u7684\u6728\u6761\u4e2a\u6570\uff0c$v$\u4e3a\u957f\u5ea6\u5c0f\u4e8e$b$\u4e14\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e$2$\u7684\u6728\u6761\u4e2a\u6570\uff0c\n\n\u628a$f$\u548c$g$\u5377\u8d77\u6765\u5c31\u53ef\u4ee5\u7b97\u51fa\u5bf9\u4e8e\u679a\u4e3e\u5230\u7684\u6728\u6761\u5bf9\u4e8e\u6bcf\u4e2a\u5468\u957f\u7684\u65b9\u6848\u6570\uff0c\u52a0\u4e00\u4e0b\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=1048581,MOD=998244353,G=3,INVG=332748118;\nll cnt,kk,ccnt,x,u,v;\nll f[MAXN],g[MAXN],rev[MAXN],rres[MAXN],res[MAXN],p[MAXN];\nll fact[MAXN],finv[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n} \ninline ll qpow(ll base,ll exponent)\n{\n    ll res=1;\n    while(exponent)\n    {\n        if(exponent&1)\n        {\n            res=(li)res*base%MOD;\n        }\n        base=(li)base*base%MOD,exponent>>=1;\n    }\n    return res;\n}\ninline void setup(ll cnt)\n{\n    fact[0]=finv[0]=1;\n    for(register int i=1;i<cnt;i++)\n    {\n        fact[i]=(li)fact[i-1]*i%MOD;\n    }\n    finv[cnt-1]=qpow(fact[cnt-1],MOD-2);\n    for(register int i=cnt-2;i;i--)\n    {\n        finv[i]=(li)finv[i+1]*(i+1)%MOD;\n    }\n}\ninline ll comb(ll m,ll n)\n{\n\treturn m<n?0:(li)fact[m]*finv[m-n]%MOD*finv[n]%MOD;\n}\ninline void NTT(ll *cp,ll cnt,ll inv)\n{\n    ll cur=0,res=0,omg=0;\n    for(register int i=0;i<cnt;i++)\n    {\n        if(i<rev[i])\n        {\n            swap(cp[i],cp[rev[i]]);\n        }\n    }\n    for(register int i=2;i<=cnt;i<<=1)\n    {\n        cur=i>>1,res=qpow(inv==1?G:INVG,(MOD-1)/i);\n        for(register ll *p=cp;p!=cp+cnt;p+=i)\n        {\n            omg=1;\n            for(register int j=0;j<cur;j++)\n            {\n                ll t=1ll*omg*p[j+cur]%MOD,t2=p[j];\n                p[j+cur]=(t2-t+MOD)%MOD,p[j]=(t2+t)%MOD;\n                omg=1ll*omg*res%MOD;\n            }\n        }\n    }\n    if(inv==-1)\n    {\n        ll invl=qpow(cnt,MOD-2);\n        for(register int i=0;i<=cnt;i++)\n        {\n            cp[i]=1ll*cp[i]*invl%MOD;\n        }\n    }\n}\ninline void conv(ll cnt,ll *f,ll *g,ll *res)\n{\n\tstatic ll tmpf[MAXN],tmpg[MAXN];\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\ttmpf[i]=f[i],tmpg[i]=g[i];\n\t}\n\tll limit=log2(cnt)-1;\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)<<limit);\n\t}\n\tNTT(tmpf,cnt,1),NTT(tmpg,cnt,1);\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\tres[i]=(li)tmpf[i]*tmpg[i]%MOD;\n\t\ttmpf[i]=tmpg[i]=0;\n\t}\n\tNTT(res,cnt,-1);\n}\nint main()\n{\n\tsetup((cnt=read())<<1),kk=read(),ccnt=1;\n\twhile(ccnt<=(cnt<<1))\n\t{\n\t\tccnt<<=1;\n\t}\t\n\tfor(register int i=1;i<=cnt;i++)\n\t{\n\t\tp[read()]++;\n\t}\n\tfor(register int i=1;i<=kk;i++)\n\t{\n\t\tx=read(),u=v=0;\n\t\tfor(register int j=1;j<x;j++)\n\t\t{\n\t\t\tp[j]==1?u++:p[j]>=2?v++:v;\n\t\t}\n\t\tfor(register int j=0;j<ccnt;j++)\n\t\t{\n\t\t\tf[j]=(li)comb(u,j)*qpow(2,j)%MOD;\n\t\t\tg[j]=comb(v<<1,j);\n\t\t}\n\t\tconv(ccnt,f,g,rres);\n\t\tfor(register int j=0;j<=cnt;j++)\n\t\t{\n\t\t\tres[j+x+1]=(res[j+x+1]+rres[j])%MOD;\n\t\t}\n\t}\n\tccnt=read();\n\tfor(register int i=0;i<ccnt;i++)\n\t{\n\t\tprintf(\"%d\\n\",res[read()>>1]);\n\t}\n}\n```\n\n",
        "postTime": 1573345774,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1251F \u3010Red-White Fence\u3011"
    },
    {
        "content": "\u591a\u9879\u5f0f\u5b66\u4e60 Day 3.\n\n\u7b2c\u4e00\u7bc7\u591a\u9879\u5f0f\u9898\u89e3 >_<\n## \u601d\u8def\n\u6ce8\u610f\u5230\u5468\u957f\u5176\u5b9e\u5c31\u662f\u7ea2\u677f\u957f\u5ea6\u52a0\u4e0a\u9009\u7684\u677f\u5b50\u7684\u6570\u91cf\u3002\n\n\u4e8e\u662f\u5f53\u6211\u4eec\u786e\u5b9a\u4e86\u7ea2\u677f\u957f\u5ea6 $L$ \u548c\u5468\u957f $C$ \u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u53d6\u51fa $\\frac{C}{2}-L-1$ \u5757\u767d\u677f\u3002\n\n\u7136\u540e\u5f88\u6076\u5fc3\u7684\u662f\u867d\u7136\u677f\u5b50\u4e0d\u80fd\u4e00\u6837\u957f\uff0c\u4f46\u662f\u53ef\u4ee5\u5728**\u7ea2\u677f\u4e24\u4fa7**\u5404\u6765\u4e00\u5757\u76f8\u540c\u957f\u5ea6\u7684\u767d\u677f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u4e00\u79cd\u989c\u8272\u7684\u767d\u677f\u8d85\u8fc7\u4e24\u6761\u548c\u4e24\u6761\u662f**\u7b49\u4ef7\u7684**\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\n\n* \u6240\u6709\u767d\u677f\u90fd\u53ea\u6709\u4e00\u6761\u3002\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u9009 $j$ \u6761\uff0c\u7136\u540e\u5206\u522b\u8003\u8651\u6bcf\u6761\u653e\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u3002\n\n\u5982\u679c\u4ece $i$ \u79cd\u767d\u677f\u4e2d\u9009\u51fa $j$ \u6761\uff0c\u90a3\u4e48\u6709 $2^j\\binom{i}{j}$ \u79cd\u65b9\u6848\u3002\n\n* \u6240\u6709\u767d\u677f\u90fd\u6709\u4e24\u6761\u3002\n\n\u6211\u4eec\u8ba9\u7b2c\u4e00\u6761\u4ee3\u8868\u653e\u5728\u5de6\u8fb9\uff0c\u7b2c\u4e8c\u6761\u4ee3\u8868\u653e\u5728\u53f3\u8fb9\u3002\n\n\u90a3\u4e48\u4e00\u79cd\u65b9\u6848\u548c\u9009 $j$ \u6761\u677f\u5b50\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\n\n\u90a3\u4e48\u5982\u679c\u4ece $i$ \u79cd\u767d\u677f\u79cd\u9009\u51fa $j$ \u6761\uff0c\u90a3\u4e48\u6709 $\\binom{2i}{j}$  \u79cd\u65b9\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u9009\u51fa $i$ \u6761\u767d\u677f\u7684\u8fc7\u7a0b\u53ef\u4ee5\u62c6\u89e3\u6210\u9009\u51fa $j$ \u6761**\u53ea\u6709\u4e00\u6761**\u7684\u767d\u677f\u548c $i-j$ \u6761**\u6709\u4e24\u6761**\u7684\u767d\u677f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u628a\u4e24\u90e8\u5206\u62c6\u5f00\u5373\u53ef\uff0c\u5148\u7b97\u51fa\u9009\u51fa $j$ \u6761**\u53ea\u6709\u4e00\u6761**\u7684\u767d\u677f\u548c**\u6709\u4e24\u6761**\u7684\u767d\u677f\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u5377\u79ef\u5373\u53ef\u3002\n\n**\u6ce8\u610f\u5230\u767d\u677f\u7684\u957f\u5ea6\u8981\u5c0f\u4e8e\u7ea2\u677f\uff0c\u6240\u4ee5\u8981\u5bf9\u4e8e\u6bcf\u5757\u7ea2\u7248\u5355\u72ec $\\text{NTT}$ \u4e00\u6b21\u3002**\n## \u4ee3\u7801\n```\n//zhoukangyang AK IOI!\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nconst long long p=998244353;\nlong long qp(long long x,int y)\n{\n    long long res=1;\n    for(long long now=x; y; now=now*now%p,y>>=1) if(y&1) res=res*now%p;\n    return res;\n}\nlong long A[6000003],B[6000003];\nint rev[6000003],N=1;\nvoid init()\n{\n    int d=N>>1;\n    rev[0]=0,rev[1]=N>>1;\n    for(int i=2; i<=N; i<<=1)\n    {\n        d>>=1;\n        for(int j=0; j<i; ++j) rev[i+j]=rev[j]|d;\n    }\n    return ;\n}\nvoid NTT(long long* F,int op)\n{\n    for(int i=0; i<N; ++i) if(rev[i]>i) swap(F[i],F[rev[i]]);\n    for(int len=2,M=1; len<=N; len<<=1,M<<=1)\n    {\n        long long w=qp(op?3:332748118,998244352/len);\n        //omega(m,1)\n        for(int l=0,r=len-1; l<=N; l+=len,r+=len)\n        {\n            long long w0=1;\n            for(int i=l; i<l+M; ++i)\n            {\n                long long x=(F[i]+w0*F[i+M]%p)%p,y=(F[i]+p-w0*F[i+M]%p)%p;\n                F[i]=x,F[i+M]=y,w0=w0*w%p;\n            }\n        }\n    }\n}\nint cnt[1000003],b[13],q[1000003];\nlong long ans[1000003];\nint t;\nvoid solve(int lim)\n{\n\tint P=0,Q=0;\n\tfor(int i=1; i<lim; ++i) if(cnt[i]==1) ++P; else if(cnt[i]>=2) ++Q;\n\tQ<<=1;\n\tfor(;N<=P+Q;N<<=1);\n\tfor(int i=0; i<N; ++i) A[i]=B[i]=0;\n\tlong long fz=1,fm=1;\n    for(int i=0; i<=P; ++i,fz=fz*(P+1-i)%p,fm=fm*i%p) A[i]=fz*qp(fm,p-2)%p*qp(2,i)%p;\n    fz=fm=1;\n    for(int i=0; i<=Q; ++i,fz=fz*(Q+1-i)%p,fm=fm*i%p) B[i]=fz*qp(fm,p-2)%p;\n    init();\n    NTT(A,1),NTT(B,1);\n    for(int i=0; i<N; ++i) A[i]=A[i]*B[i]%p;\n    NTT(A,0);\n    long long inv=qp(N,998244351);\n    for(int i=0; i<N; ++i) A[i]=A[i]*inv%p;\n    for(int j=1; j<=t; ++j) if(q[j]-lim>=0) ans[j]=(ans[j]+A[q[j]-lim])%p;\n    return ;\n}\nsigned main()\n{\n    int n=read(),k=read();\n    for(int i=1; i<=n; ++i) ++cnt[read()];\n    for(int i=1; i<=k; ++i) b[i]=read();\n    t=read();\n    for(int i=1; i<=t; ++i) q[i]=(read()>>1)-1;\n    for(int i=1; i<=k; ++i) solve(b[i]);\n\tfor(int i=1; i<=t; ++i) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1610525969,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1251F \u3010Red-White Fence\u3011"
    },
    {
        "content": "\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u7b54\u6848\u4e4b\u548c\u7ea2\u677f\u5b50\u7684\u9ad8\u5ea6\u4ee5\u53ca\u767d\u677f\u5b50\u7684\u6570\u91cf\u6709\u5173\u7cfb\u3002\u3002\u3002\n\n\u770b\u5230 $k\\leq 5$ \u6240\u4ee5\u76f4\u63a5\u8003\u8651\u679a\u4e3e\u7ea2\u677f\u5b50\u3002\n\n\u7136\u540e\u6ce8\u610f\u5230\uff0c\u540c\u6837\u957f\u5ea6\u7684\u677f\u5b50\u8d85\u8fc7 $2$ \u65e0\u6240\u8c13\uff0c\u6240\u4ee5\u5206\u4e3a\u4e09\u7c7b\u8ba8\u8bba\uff1a\u6ca1\u6709\uff0c\u6709\u4e00\u4e2a\uff0c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u3002\n\n\u6ca1\u6709\u7684\u60c5\u51b5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $1$\uff0c\u6709\u4e00\u4e2a\u7684\u8bdd\u53ef\u4ee5\u653e\u5230\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\uff0c\u8d21\u732e\u4e3a $2$\uff0c\u4e24\u4e2a\u4ee5\u4e0a\u53ef\u4ee5\u53ea\u62ff\u4e00\u4e2a\u51fa\u6765\uff0c\u4e5f\u53ef\u4ee5\u5de6\u8fb9\u53f3\u8fb9\u5404\u4e00\u4e2a\u3002\n\n\u8bbe\u67d0\u79cd\u957f\u5ea6\u7684\u767d\u677f\u5b50\u6709 $c_kk$ \u4e2a\uff0c\u90a3\u4e48\u5176\u8d21\u732e\u51fd\u6570 $F_c(x)=(1+2x+x^2)\\bmod{x^{k+1}}$\u3002\n\n\u90a3\u4e48\u8981\u6c42\u7684\u591a\u9879\u5f0f\u5c31\u662f $G(x)=\\prod_{c<b}F_c(x)$\uff0c\u7136\u540e\u6c42 $2(\\sum g_i\\times(b+i+1))$\u3002\n\n\u5148\u5bf9\u7ea2\u767d\u677f\u5b50\u7684\u957f\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u7edf\u8ba1\u524d\u7f00\u6709 $1$ \u4e2a\u548c\u4e0d\u5c0f\u4e8e $2$ \u4e2a\u677f\u5b50\u7684\u6570\u91cf\u3002\u5047\u8bbe\u5206\u522b\u662f $a$ \u548c $b$\uff0c\u90a3\u4e48\u8ba1\u7b97\u4e00\u4e2a $(1+2x)^a(1+x)^{2b}$ \u5373\u53ef\u3002\u663e\u7136\u53ef\u4ee5\u505a\u5230 $O(kn\\log n)$\u3002\n\n\u7136\u540e\u3002\u3002\u3002\u8fd9\u4e1c\u897f\u662f\u53ef\u4ee5\u5217 ODE \u7b97\u7684\u3002\u3002\u3002\n\n\u8bbe $F(x)=(1+x)^a(1+2x)^b$\uff0c\u76f4\u63a5\u6c42\u5bfc\uff1a\n$$F'(x)=a(1+x)^{a-1}(1+2x)^{b}+2b(1+x)^{a}(1+2x)^{b-1}$$\n$$(1+3x+2x^2)F'(x)=(a+2ax)F(x)+(2b+2bx)F(x)$$\n$$(1+3x+2x^2)F'(x)=(a+2b+(2a+2b)x)F(x)$$\n$$(n+1)\\times f_{n+1}+3n\\times f_{n}+(2n-2)\\times f_{n-1}=(a+2b)\\times f_{n}+(2a+2b)\\times f_{n-1}$$\n$$n\\times f_{n}+(3n-3)\\times f_{n-1}+(2n-4)\\times f_{n-2}=(a+2b)\\times f_{n-1}+(2a+2b)\\times f_{n-2}$$\n$$f_{n}=\\frac{1}{n}((a+2b-3n+3)\\times f_{n-1}+(4+2a+2b-2n)\\times f_{n-2})$$\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<cctype>\n#define IMP(lim,act) for(int qwq=(lim),i=0;i^qwq;++i)act\nconst int M=1<<20|5,mod=998244353;\nint n,k,ans[M<<1],x[M],y[10],a[10],b[10],inv[M];\ninline int Getlen(const int&n){\n\tint len(0);while((1<<len)<n)++len;return len;\n}\ninline int pow(int a,int b=mod-2){\n\tint ans(1);for(;b;b>>=1,a=1ll*a*a%mod)if(b&1)ans=1ll*ans*a%mod;return ans;\n}\ninline void init(const int&n){\n\tinv[0]=inv[1]=1;for(int i=2;i<n;++i)inv[i]=1ll*(mod-mod/i)*inv[mod%i]%mod;\n}\ninline void Get(int*f,const int&a,const int&b){\n\tconst int&n=a+b+1;f[0]=1;f[1]=(a+b*2)%mod;\n\tfor(int i=2;i<n;++i){\n\t\tf[i]=1ll*((a+2ll*b+(mod-3ll)*i+3)%mod*f[i-1]+(4ll+2*a+2*b+(mod-2ll)*i)%mod*f[i-2])%mod*inv[i]%mod;\n\t}\n}\ninline int read(){\n\tint n(0);char s;while(!isdigit(s=getchar()));while(n=n*10+(s&15),isdigit(s=getchar()));return n;\n}\ninline void write(int n){\n\tstatic char s[15];int top(0);while(s[++top]=n%10^48,n/=10);while(putchar(s[top]),--top);putchar(10);\n}\nsigned main(){\n\tn=read();k=read();for(int i=1;i<=n;++i)x[i]=read();for(int i=1;i<=k;++i)y[i]=read();\n\tinit(n+1<<1);std::sort(x+1,x+n+1);std::sort(y+1,y+k+1);\n\tfor(int id(1),sum(0),A(0),B(0),t=1;t<=k;++t){\n\t\twhile(x[id]<y[t]&&id<=n){\n\t\t\t++sum;\n\t\t\tif(x[id]!=x[id+1]){\n\t\t\t\tif(sum==1)++A;else if(sum)++B;\n\t\t\t\tsum=0;\n\t\t\t}\n\t\t\t++id;\n\t\t}\n\t\tstatic int F[M];Get(F,B<<1,A);IMP(A+B*2+1,ans[i+y[t]+1<<1]=(ans[i+y[t]+1<<1]+F[i])%mod);\n\t}\n\tk=read();while(k--)write(ans[read()]);\n}\n```",
        "postTime": 1656918348,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u591a\u9879\u5f0f ODE CF1251F\u9898\u89e3"
    },
    {
        "content": "\u545c\u545c\u545c\u8fd9\u9053\u9898\u60f3\u7528$f^k(x) = e^{k\\ln f(x)}$\u6765\u5077\u61d2\u7684\uff0c\u7ed3\u679c\u88ab\u5361\u5e38\u4e86QAQ\n\n\u9996\u5148\u5bf9\u4e8e\u5468\u957f\u7684\u8be2\u95ee\uff0c\u53ef\u4ee5\u53d1\u73b0\u5176\u4ec5\u7531\u6240\u9009\u7ea2\u677f\u5b50\u7684\u9ad8\u5ea6$h = b_k$\uff0c\u4ee5\u53ca\u6240\u9009\u767d\u677f\u5b50\u7684\u6570\u76ee$n$\u6240\u51b3\u5b9a\uff0c\u4e5f\u5373$Q = 2h + 2(n+1)$\uff0c\u6545\u5bf9\u4e8e\u5355\u4e2a\u7ea2\u677f\u5b50$k$\u6765\u8bf4\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u5bf9\u4e8e\u6bcf\u4e2a$Q_i$\uff0c\u5f53\u6805\u680f\u9009\u7ea2\u677f\u5b50$k$\u65f6\u6240\u9700\u8981\u767d\u677f\u5b50\u7684\u6570\u91cf$N_i = \\frac{Q_i - 2b_k}{2} - 1$\u3002\n\n\u5176\u6b21\u7531\u4e8e\u7ea2\u677f\u5b50\u5f88\u5c0f\uff0c\u53ef\u4ee5\u8f7b\u677e\u7684\u628a\u601d\u8def\u5f15\u5411\u4ece\u5355\u4e2a\u7ea2\u677f\u5b50\u8fdb\u884c\u5206\u6790\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6805\u680f\u6765\u8bf4\uff0c\u7531\u4e8e\u6805\u680f\u7684\u677f\u957f\u4e25\u683c\u9012\u589e\uff08\u9012\u51cf\uff09\uff0c\u6545\u5728\u540c\u4fa7\u65e0\u9ad8\u5ea6\u76f8\u540c\u7684\u677f\u5b50\u3002\u5bf9\u4e8e\u7ea2\u677f\u5b50$b_k$\uff0c\u9884\u5904\u7406\u51fa\u6240\u6709\u6bd4$a_i<b_k$\u7684\u767d\u677f\u5b50\u957f\u5ea6\u53ca\u5176\u6570\u76ee\u3002\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u76f8\u540c\u957f\u5ea6\u7684\u767d\u677f\u5b50\uff0c\u81f3\u591a\u53ea\u80fd\u9009\u4e24\u4e2a\uff08\u653e\u5728\u7ea2\u677f\u5b50\u4e24\u4fa7\uff09\uff1b\u5f53\u9009\u4e00\u4e2a\u767d\u677f\u5b50\u53ef\u4ee5\u653e\u5728\u7ea2\u677f\u5b50\u7684\u6216\u5de6\u6216\u53f3\u4e00\u4fa7\u3002\u90a3\u4e48\u601d\u8def\u5c31\u5f88\u6e05\u6670\u5566\uff1a\n\n> \uff081\uff09\u5bf9\u4e8e\u76f8\u540c\u957f\u5ea6\u7684\u767d\u677f\u5b50\u6765\u8bf4\uff0c\u82e5\u6570\u91cf\u53ea\u67091\u4e2a\uff0c\u5176\u53ef\u4ee5\u9009\u4e0a\u653e\u5728\u6805\u680f\u7684\u5de6\u4fa7\u6216\u53f3\u4fa7\uff0c\u6216\u8005\u4e0d\u9009\u3002\n>\n> \uff082\uff09\u82e5\u6570\u91cf\u5927\u4e8e1\u4e2a\uff0c\u53ef\u4ee5\u9009\u4e24\u4e2a\u653e\u5728\u6805\u680f\u7684\u4e24\u4fa7\uff0c\u9009\u4e00\u4e2a\u653e\u5de6\u4fa7\u6216\u53f3\u4fa7\uff0c\u6216\u8005\u4e0d\u9009\u3002\n\n\u5bf9\u4e8e\u60c5\u51b5\uff081\uff09,\u5bf9\u4e8e\u76f8\u540c\u957f\u5ea6\u7684\u767d\u677f\u5b50\u53ef\u4ee5\u7528\u751f\u6210\u51fd\u6570$f_1(x) = 1 + 2x$\u6765\u8868\u793a\u72b6\u6001\uff1b\u5bf9\u4e8e\u60c5\u51b5\uff082\uff09\uff0c\u5219\u53ef\u4ee5\u7528$f_2(x) = 1 + 2x + x^2 = (1+x)^2$\u6765\u8868\u793a\u3002\n\n\u5047\u8bbe\u5f53\u524d\u7684\u7ea2\u677f\u5b50$k$\uff0c\u5c0f\u4e8e$b_k$\u7684\u767d\u677f\u5b50\u7684\u4e0d\u540c\u957f\u5ea6\u4e2d\uff0c\u6570\u91cf\u4ec5\u4e3a1\u7684\u767d\u677f\u5b50\u6570\u91cf\u4e3a$k_1$\uff0c\u6570\u91cf\u5927\u4e8e1\u7684\u767d\u677f\u5b50\u6570\u91cf\u4e3a$k_2$\uff1b\u5219\u6700\u7ec8\u7b54\u6848\u7684\u72b6\u6001\u53ef\u4ee5\u8868\u793a\u4e3a$f(x) = f_1^{k_1}(x) * f_2^{2k_2}(x)$\u3002\u5982\u679c\u7528 **\u6307\u6570\u591a\u9879\u5f0f** \u6765\u52a0\u5feb\u591a\u9879\u5f0f\u5e42$f^k$\u7684\u8ba1\u7b97\uff0c\u518d\u5c06$f_1^{k_1}*f_2^{2k_2},$\u590d\u6742\u5ea6\u4e3a$O(knlogn)$\uff08\u4f46\u6307\u6570\u591a\u9879\u5f0f\u5e38\u6570\u5927\u7684\u79bb\u8c31- -\u603b\u4e4b\u6211\u662fTLE\u4e86\uff09\u3002\u53d1\u73b0$f_1,f_2$\u7684\u5e42\u90fd\u53ef\u7528`binomial`\u6765\u8ba1\u7b97\u591a\u9879\u5f0f\u7cfb\u6570\uff0c\u6700\u540e\u518d\u4e58\u8d77\u6765\uff0c\u590d\u6742\u5ea6\u4e3a$O(knlogn)$\uff08\u5176\u53ea\u6765\u81ea\u4e8e\u4e24\u4e2a\u591a\u9879\u5f0f\u7684\u4e58\u79ef\uff09\u3002\n\n\u4ee3\u7801~~\u4f18\u5316\u5730\u6709\u70b9\u4e11~~\uff1a\n\n```cpp\n//code sourced from kinesis\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define _REP(i,a,b) for(int i = (a) ; i >= (int)(b) ; --i )\n#define REP(i,a,b) for(register int i = (a) ; i <= (int)(b) ; ++i )\n#define UREP(i,u) for(int i = p[(u)] ; i + 1 ; i = edge[i].next)\n//iterator: for(int u:x),x is container\n#define x(p) (p).first\n#define y(p) (p).second\n#define pii pair<int,int>\n#define mp(x,y) make_pair((x), (y))\n#define sign(x) (fabs(x) < eps ? 0 : ((x) > 0 ? 1 : -1))\n#define ll long long\n#define L7 __int128//1<<7 bit\n#define ull unsigned long long\nconst int inf = 0x3f3f3f3f;\nconst ll inff = 0x3f3f3f3f3f3f3f3f;\nconst int mod = 998244353;\nconst double eps = 1e-9;\n#define ri1(x) scanf(\"%d\", &(x))\n#define ri2(x,y) scanf(\"%d%d\", &(x), &(y))\n#define ri3(x,y,z) scanf(\"%d%d%d\", &(x), &(y), &(z))\n#define ri4(a,b,c,d) scanf(\"%d%d%d%d\", &(a), &(b), &(c), &(d))\n//#define Debug\n#ifdef Debug\n#endif // Debug\n\nnamespace fastIO//\u652f\u6301int,ll,__int128.ull\u6ca1\u6709\u6d4b\u8bd5\u8fc7\n{\n    static char buf[100000],*h=buf,*d=buf;//\u7f13\u5b58\u5f00\u5927\u53ef\u51cf\u5c11\u8bfb\u5165\u65f6\u95f4\u3001\u3001\u770b\u9898\u76ee\u7ed9\u7684\u7a7a\u95f4\n    #define gc h==d&&(d=(h=buf)+fread(buf,1,100000,stdin),h==d)?EOF:*h++//\u4e0d\u80fd\u7528fread\u5219\u6362\u6210getchar\n    template<typename T>\n    inline void read(T&x)\n    {\n        int f = 1;x = 0;\n        register char c(gc);\n        while(c>'9'||c<'0'){\n            if(c == '-') f = -1;\n            c=gc;\n        }\n        while(c<='9'&&c>='0')x=(x<<1)+(x<<3)+(c^48),c=gc;\n        x *= f;\n    }\n    template<typename T>\n    void output(T x)\n    {\n        if(x<0){putchar('-');x=~(x-1);}\n        static int s[20],top=0;\n        while(x){s[++top]=x%10;x/=10;}\n        if(!top)s[++top]=0;\n        while(top)putchar(s[top--]+'0');\n        putchar('\\n');\n    }\n}\nusing fastIO::read;\nusing fastIO::output;\n\nconst int maxn = 524290;\nnamespace NTT\n{\n    const int mod = 998244353;//998244353,1004535809,469762049,985661441. g = 3\n    inline int qp(ll base,ll n)//\u5feb\u901f\u5e42\n    {\n        ll res = 1;\n        while(n){\n            if(n&1) (res *= base) %= mod;\n            (base *= base) %= mod;\n            n>>=1;\n        }\n        return (int)res;\n    }\n    int rev[maxn<<1];\n    inline void change(vector<int> &x,int len)\n    {\n        int bit = 0;\n        while ((1<<bit)<len) bit++;\n        REP(i,1,len-1){\n            rev[i] = (rev[i>>1] >> 1) | ((i & 1) << (bit - 1));\n            if (i<rev[i]) swap(x[i],x[rev[i]]);\n        }//\u524d\u9762\u548cFFT\u4e00\u6837\n    }\n    inline void ntt(vector<int> &x, int lim, int opt)\n    {\n        change(x,lim);\n        for (int m = 2; m <= lim; m <<= 1){\n            int k = m >> 1;\n            int gn = qp(3, (mod - 1) / m);\n            for (int i = 0; i < lim; i += m){\n                int g = 1;\n                for (int j = 0; j < k; j+=2, g = 1ll * g * gn % mod){\n                    int tmp = 1ll * x[i + j + k] * g % mod;\n                    x[i + j + k] = (x[i + j] - tmp + mod) % mod;\n                    x[i + j] = (x[i + j] + tmp) % mod;\n                    if(j+1<k){\n                        g = 1ll * g * gn % mod;\n                        tmp = 1ll * x[i + j + 1 + k] * g % mod;\n                        x[i + j + 1 + k] = (x[i + j + 1] - tmp + mod) % mod;\n                        x[i + j + 1] = (x[i + j + 1] + tmp) % mod;\n                    }\n                }\n            }\n        }\n        if (opt == -1){\n            reverse(x.begin() + 1, x.begin() + lim);\n            int inv = qp(lim, mod - 2);\n            REP(i,0,lim-1) x[i] = 1ll * x[i] * inv % mod;\n        }\n    }\n}\nusing NTT::ntt;\n\nll qp(ll base,ll n) {\n    ll res = 1;\n    base%=mod;\n    while(n){\n        if(n&1) (res *= base) %= mod;\n        (base *= base) %= mod;\n        n >>= 1;\n    }\n    return res;\n}\nnamespace Comb\n{\n    ll Finv[maxn+10],fac[maxn+10],inv[maxn+10];\n    void init()//n<N\n    {\n        int n = maxn;\n        inv[1]=1;\n        for(int i=2;i<=n;++i)inv[i]=((mod-mod/i)*inv[mod%i])%mod;\n        fac[0]=Finv[0]=1;\n        for(int i=1;i<=n;++i)fac[i]=fac[i-1]*i%mod,Finv[i]=Finv[i-1]*inv[i]%mod;\n        //Finv[n]=modpow(jc[n],mod-2,mod);\n        //for(int i=n-1;i>=1;--i)Finv[i]=Finv[i+1]*(i+1)%mod;\n    }\n    ll C(ll n,ll m)\n    {\n        if(m<0||m>n)return 0;\n        return fac[n]*Finv[n-m]%mod*Finv[m]%mod;\n    }\n}\nusing Comb::C;\n\nint a[maxn],b[10],Q[maxn],N[maxn],length[maxn],ans[maxn];\nvector<int> f1(maxn<<1),f2(maxn<<1);\n\nint main()\n{\n    #ifndef ONLINE_JUDGE\n    freopen(\"in.txt\",\"r\",stdin);//cf needn't delete this\n    #endif // ONLINE_JUDGE\n    Comb::init();\n    int n,m;\n    read(n),read(m);\n    REP(i,1,n) read(a[i]);\n    REP(i,1,m) read(b[i]);\n    int q;\n    read(q);\n    REP(i,1,q) read(Q[i]);\n    REP(k,1,m){\n        REP(i,1,b[k]) length[i] = 0;\n        int k1 = 0,k2 = 0,mxN = 0,mxN2 = -inf,_2 = 1;\n        REP(i,1,n) if(b[k] > a[i]) length[a[i]]++;\n        REP(i,1,b[k]-1){\n            if(length[i]==1) k1++,mxN++;\n            if(length[i]>1) k2+=2,mxN+=2;\n        }\n        REP(i,1,q) N[i] = (Q[i] - 2 * b[k]) / 2 - 1,mxN2 = max(mxN2,N[i]);\n        if(mxN2<0) continue;\n        mxN = min(mxN,mxN2);\n        mxN++;\n        REP(i,0,mxN-1) f1[i] = 1LL * C(k1,i) * _2 % mod,_2 = 1LL * _2 * 2 % mod;\n        REP(i,0,mxN-1) f2[i] = C(k2,i);\n        int lim = 1;\n        while(lim<(mxN * 2)) lim <<= 1;\n        REP(i,mxN,lim-1) f1[i] = f2[i] = 0;\n        ntt(f1,lim,1),ntt(f2,lim,1);\n        REP(i,0,lim-1) f1[i] = 1LL * f1[i] * f2[i] % mod;\n        ntt(f1,lim,-1);\n        REP(i,1,q) if(0<=N[i]&&N[i]<=mxN) (ans[i] += f1[N[i]]) %= mod;\n        REP(i,0,lim-1) f1[i] = f2[i] = 0;\n    }\n    REP(i,1,q) output(ans[i]);\n    return ~~(0-0);\n}\n```",
        "postTime": 1599974146,
        "uid": 132396,
        "name": "Kinesis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1251F \u3010Red-White Fence\u3011"
    },
    {
        "content": "\u8003\u8651\u8fd9\u4e2a\u5947\u602a\u7684\u4e1c\u897f\u7684\u5468\u957f\u662f\u4ec0\u4e48\u73a9\u610f\u513f\uff0c\u901a\u8fc7\u5c0f\u5b66\u6559\u7684\u5e73\u79fb\u6cd5\u53ef\u4ee5\u6c42\u51fa $C=(\\text{\u7ea2\u8272\u6728\u677f\u7684\u957f\u5ea6}+\\text{\u9009\u7528\u7684\u6728\u677f\u4e2a\u6570})\\times 2$\u3002\n\n\u770b\u5230 $k$ \u8fd9\u4e48\u5c0f\uff0c\u90a3\u80af\u5b9a\u8981\u679a\u4e3e\u9009\u62e9\u54ea\u4e2a\u7ea2\u8272\u6728\u677f\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u9009\u7528\u7684\u6728\u677f\u7684\u4e2a\u6570\u3002\n\n\u4e8e\u662f\u8003\u8651\u72b6\u6001 $dp_{i,j}$ \u8868\u793a\u9009\u62e9\u7684\u7ea2\u8272\u6728\u677f\u7f16\u53f7\u4e3a $i$\uff0c\u9009\u62e9 $j$ \u4e2a\u6728\u677f\u7684\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u600e\u6837\u6c42 $dp_{i,j}$ \u5462\uff1f\n\n\u9996\u5148\u80af\u5b9a\u8981\u660e\u786e\u7684\u4e00\u70b9\u662f\uff0c\u540c\u4e00\u79cd\u957f\u5ea6\u7684\u767d\u8272\u6728\u677f\u9876\u591a\u51fa\u73b0 $2$ \u6b21\u3002\n\n\u8003\u8651\u679a\u4e3e\u767d\u8272\u6728\u677f\u7684\u957f\u5ea6\uff0c\u518d\u8bbe $f_{i,j}$ \u8868\u793a\u5bf9\u4e8e\u957f\u5ea6 $\\leq i$ \u7684\u6728\u677f\uff0c\u9009\u62e9\u4e86 $j$ \u4e2a\u7684\u65b9\u6848\u6570\u3002\n\n\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u82e5\u6ca1\u6709\u957f\u5ea6\u4e3a $i$ \u7684\u767d\u8272\u6728\u677f\uff0c\u90a3\u663e\u7136 $f_{i,j}=f_{i-1,j}$\n\n2. \u82e5\u53ea\u6709 $1$ \u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u6728\u677f\uff0c\u90a3 $f_{i,j}=f_{i-1,j}+2f_{i-1,j-1}$\uff0c$f_{i-1,j}$ \u8868\u793a\u4e0d\u9009\u8fd9\u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u6728\u677f\uff0c$2f_{i-1,j-1}$ \u8868\u793a\u9009\u62e9\u957f\u5ea6\u4e3a $i$ \u7684\u6728\u677f\uff0c\u800c\u5b83\u6709\u653e\u5728\u7ea2\u8272\u6728\u677f\u5de6\u8fb9\u548c\u53f3\u8fb9\u4e24\u79cd\u9009\u62e9\uff0c\u6545\u8981\u4e58\u4e2a $2$\u3002\n\n3. \u82e5\u6709 $2$ \u4e2a\uff08\u6216\u66f4\u591a\uff09\u957f\u5ea6\u4e3a $i$ \u7684\u6728\u677f\uff0c\u90a3 $f_{i,j}=f_{i-1,j}+2f_{i-1,j-1}+f_{i-1,j-2}$\uff0c$f_{i-1,j}$ \u8868\u793a\u4e0d\u9009\u8fd9\u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u6728\u677f\uff0c$2f_{i-1,j-1}$ \u8868\u793a\u9009\u62e9\u4e00\u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u6728\u677f\uff0c\u800c\u5b83\u6709\u653e\u5728\u7ea2\u8272\u6728\u677f\u5de6\u8fb9\u548c\u53f3\u8fb9\u4e24\u79cd\u9009\u62e9\uff0c\u6545\u8981\u4e58\u4e2a $2$\uff0c$f_{i-1,j-2}$ \u8868\u793a\u9009\u62e9\u4e24\u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u6728\u677f\uff0c\u663e\u7136\u5b83\u4eec\u53ea\u80fd\u4e00\u5de6\u4e00\u53f3\u5730\u653e\uff0c\u6545\u53ea\u6709 $1$ \u79cd\u9009\u62e9\u3002\n\n\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u4e0d\u96be\u770b\u51fa\u60c5\u51b5 $1$ \u76f8\u5f53\u4e8e\u5565\u4e5f\u6ca1\u5e72\uff0c\u60c5\u51b5 $2$ \u76f8\u5f53\u4e8e\u5c06\u591a\u9879\u5f0f $f$ \u4e0e $2x+1$ \u6c42\u4e00\u4e2a\u5377\u79ef\uff0c\u60c5\u51b5 $3$ \u76f8\u5f53\u4e8e\u5c06\u591a\u9879\u5f0f $f$ \u4e0e $x^2+2x+1$ \u6c42\u4e2a\u5377\u79ef\u3002\n\n\u8bbe $c_i$ \u8868\u793a\u6709\u591a\u5c11\u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u6728\u677f\uff0c\u6545\u6211\u4eec\u53ea\u7528\u6c42\u51fa $c_i=1$ \u548c $c_i\\geq 2$ \u7684 $i$ \u7684\u4e2a\u6570\uff0c\u5c06\u5176\u5047\u8bbe\u4e3a $x_1,x_2$\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u7684 $f$ \u5c31\u662f $(2x+1)^{x_1}\\times (x^2+2x+1)^{x_2}$\uff0c\u7a0d\u5fae\u6c42\u4e2a\u5377\u79ef\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXW=3e5;\nconst int MAXR=5;\nconst int MAXL=3e5;\nconst int MAXP=1<<19;\nconst int pr=3;\nconst int MOD=998244353;\nint qpow(int x,int e){int ret=1;for(;e;e>>=1,x=1ll*x*x%MOD) if(e&1) ret=1ll*ret*x%MOD;return ret;}\nint n,k,qu,a[MAXW+5],b[MAXR+5],c[MAXL+5];\nint LEN=1,LOG=0,A[MAXP+5],B[MAXP+5],C[MAXP+5],ipr,rev[MAXP+5],inv[MAXP+5],prs[MAXP+5][2];\nint f[MAXR+5][MAXW+5];\nvoid NTT(int *a,int len,int type){\n\tint lg=log2(len);\n\tfor(int i=0;i<len;i++) rev[i]=(rev[i>>1]>>1)|((i&1)<<(lg-1));\n\tfor(int i=0;i<len;i++) if(i<rev[i]) swap(a[i],a[rev[i]]);\n\tfor(int i=2;i<=len;i<<=1){\n\t\tint W=prs[i][type<0];\n\t\tfor(int j=0;j<len;j+=i){\n\t\t\tint w=1;\n\t\t\tfor(int k=0;k<(i>>1);k++,w=1ll*w*W%MOD){\n\t\t\t\tint X=a[j+k],Y=1ll*a[(i>>1)+j+k]*w%MOD;\n\t\t\t\ta[j+k]=(X+Y)%MOD;a[(i>>1)+j+k]=(X-Y+MOD)%MOD;\n\t\t\t}\n\t\t}\n\t}\n\tif(type==-1) for(int i=0;i<len;i++) a[i]=1ll*a[i]*inv[len]%MOD;\n}\nvoid solve(int x){\n\tmemset(c,0,sizeof(c));\n\tfor(int i=1;i<=n;i++) if(a[i]<b[x]) c[a[i]]++;\n\tint c1=0,c2=0;\n\tfor(int i=1;i<b[x];i++){\n\t\tif(c[i]==1) c1++;\n\t\tif(c[i]>=2) c2++;\n\t}\n//\tprintf(\"%d %d\\n\",c1,c2);\n\tfor(int i=0;i<LEN;i++) A[i]=B[i]=C[i]=0;\n\tA[0]=B[0]=B[2]=1;A[1]=B[1]=2;\n\tNTT(A,LEN,1);NTT(B,LEN,1);\n\tfor(int i=0;i<LEN;i++) A[i]=qpow(A[i],c1);\n\tfor(int i=0;i<LEN;i++) B[i]=qpow(B[i],c2);\n\tfor(int i=0;i<LEN;i++) C[i]=1ll*A[i]*B[i]%MOD;\n\tNTT(C,LEN,-1);\n//\tfor(int i=0;i<=n;i++) printf(\"%d \",C[i]);printf(\"\\n\");\n\tfor(int i=0;i<=n;i++) f[x][i]=C[i];\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);ipr=qpow(pr,MOD-2);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=k;i++) scanf(\"%d\",&b[i]);\n\twhile(LEN<=n) LEN<<=1,LOG++;\n\tfor(int i=1;i<=LEN;i<<=1){\n\t\tinv[i]=qpow(i,MOD-2);\n\t\tprs[i][0]=qpow(pr,(MOD-1)/i);\n\t\tprs[i][1]=qpow(ipr,(MOD-1)/i);\n\t}\n\tfor(int i=1;i<=k;i++) solve(i);\n\tscanf(\"%d\",&qu);\n\twhile(qu--){\n\t\tint x;scanf(\"%d\",&x);x>>=1;x--;int ans=0;\n\t\tfor(int i=1;i<=k;i++) if(x-b[i]>=0&&x-b[i]<=n) ans=(ans+f[i][x-b[i]])%MOD;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1609856428,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1251F \u3010Red-White Fence\u3011"
    }
]