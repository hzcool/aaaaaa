[
    {
        "content": "\u628a\u9898\u76ee\u7b80\u5316\u4e00\u4e0b\uff0c\u9898\u76ee\u5927\u610f\u5c31\u662f\u7528\u5c3d\u53ef\u80fd\u5c11\u7684\u94fe\u6765\u8986\u76d6\u6574\u68f5\u6811\u3002\n\n\u800c\u8981\u60f3\u628a\u6574\u4e2a\u6811\u90fd\u8986\u76d6\uff0c\u5c31\u9700\u8981\u8986\u76d6\u6240\u6709\u7684\u53f6\u8282\u70b9\uff0c\u6240\u6709\u6700\u5c0f\u7684\u8def\u5f84\u6570\u5c31\u662f\u53f6\u8282\u70b9\u4e2a\u6570\u3002\n\n\u800c\u5728\u8f93\u51fa\u8def\u5f84\u65f6\u53ef\u4ee5\u9009\u62e9\u4ece\u53f6\u8282\u70b9\u5f00\u59cb\u7f51\u4e0a\u641c\uff0c\u540c\u4e8b\u53ef\u4ee5\u7528 $vis$ \u6570\u7ec4\u6765\u6807\u8bb0\u641c\u8fc7\u7684\uff0c\u5982\u679c\u641c\u5230\u88ab\u6807\u8bb0\u7684\uff0c\u8bf4\u660e\u5f80\u4e0a\u7684\u8282\u70b9\u90fd\u5df2\u7ecf\u88ab\u641c\u8fc7\u4e86\u3002\n\n\u5177\u4f53\u53ef\u89c1\u4ee3\u7801:\n\n```cpp\n// Problem: CF1675D Vertical Paths\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF1675D\n// Memory Limit: 250 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//By:Komorebi_03\n#include<bits/stdc++.h>\nusing namespace std;\n#define clear(a) memset(a,0,sizeof a)\n#define ll long long\nconst int N = 2e6+5;\nint T,n,ans,y[N],p[N],sum[N];\n/*y\u6570\u7ec4\u6765\u5224\u65ad\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9*/\n/*sum\u6570\u7ec4\u8bb0\u5f55\u8def\u5f84*/ \nbool vis[N];\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\nint main()\n{\n\tT=read();\n\twhile (T--)\n\t{\n\t\tans=0;\n\t\tn=read();\n\t\tfor (int i=1;i<=n;i++)\n\t\t{\n\t\t\tvis[i]=false;\n\t\t\ty[i]=1;\n\t\t} //\u521d\u59cb\u5316  \n\t\tfor (int i=1;i<=n;i++)\n\t\t{\n\t\t\tp[i]=read();\n\t\t\tif(p[i]!=i)//\u7236\u4eb2\u8282\u70b9\u4e0d\u662f\u81ea\u5df1\uff0c\u8bf4\u660e\u5f53\u524d\u7684\u7236\u4eb2\u8282\u70b9\u80af\u5b9a\u4e0d\u662f\u53f6\u5b50\u8282\u70b9 \n\t\t\t\ty[p[i]]=0;\n\t\t}\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif(y[i])\n\t\t\t\tans++;//\u7edf\u8ba1\u8def\u5f84\u6570 \n\t\tcout<<ans<<\"\\n\";\n\t\tfor (int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(y[i])//\u904d\u5386\u6bcf\u4e2a\u53f6\u8282\u70b9 \n\t\t\t{\n\t\t\t\tint now=i;//now\u4e3a\u5f53\u524d\u70b9\u7f16\u53f7 \n\t\t\t\tint cnt=0;//cnt\u4e3a\u8def\u5f84\u957f\u5ea6 \n\t\t\t\twhile (!vis[now])//\u5f53\u524d\u70b9\u6ca1\u88ab\u6807\u8bb0\u8fc7 \n\t\t\t\t{\n\t\t\t\t\tsum[++cnt]=now;//\u8bb0\u5f55\u8def\u5f84 \n\t\t\t\t\tvis[now]=true;\n\t\t\t\t\tif(p[now]==now)\n\t\t\t\t\t\tbreak;//\u5982\u679c\u5230\u9876\u4e86\u5c31\u9000\u51fa \n\t\t\t\t\tnow=p[now];//\u66f4\u65b0now \n\t\t\t\t}\n\t\t\t\tcout<<cnt<<\"\\n\";\n\t\t\t\tfor (int j=cnt;j>=1;j--)\n\t\t\t\t\tcout<<sum[j]<<\" \";//\u8f93\u51fa\u8def\u5f84 \n\t\t\t\tputchar('\\n');\n\t\t\t}\n\t\t}\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n\t//Amireux_35\n}\n```\n\n",
        "postTime": 1683121740,
        "uid": 748679,
        "name": "Komorebi_03",
        "ccfLevel": 0,
        "title": "CF 1675D\u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u4ece\u9898\u76ee\u770b\u51fa\uff0c\u4e00\u6761\u8def\u5f84\u53ea\u80fd\u5411\u4e0b\u8d70\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u60f3\u8981\u6240\u6709\u7684\u70b9\u90fd\u8d70\u4e00\u904d\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u628a\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u8986\u76d6\uff0c\u4e5f\u5c31\u662f\u8def\u5f84\u6570\u7b49\u4e8e\u53f6\u5b50\u8282\u70b9\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5f80\u4e0a\u641c\uff0c\u8fb9\u641c\u8fb9\u6253\u6807\u8bb0\uff0c\u5982\u679c\u8981\u662f\u641c\u5230\u4e86\u4e4b\u524d\u6253\u8fc7\u6807\u8bb0\u7684\u70b9\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u9000\u51fa\u8f93\u51fa\u5f53\u524d\u70b9\u7684\u8def\u5f84\u5373\u53ef\u3002\n\n\u7531\u4e8e\u9898\u76ee\u7ed9\u51fa\u4e86\u6bcf\u4e00\u4e2a\u70b9\u7684\u7236\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u70b9\u6807\u8bb0\u4e3a\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5269\u4e0b\u7684\u5c31\u90fd\u662f\u53f6\u5b50\u8282\u70b9\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define endl '\\n'\n#define N 200100\nusing namespace std;\nint t,n,ans,fa[N],stk[N],vis[N],ye[N];\ninline int read(){int x=0,f=1;char ch=getchar();while(!isdigit(ch)){f=ch!='-';ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}return f?x:-x;}\nsigned main()\n{\n\tt=read();\n\twhile(t--)\n\t{\n\t\tn=read();\n\t\tfor(int i=1;i<=n;i++)ye[i]=1,vis[i]=0;\n\t\tans=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfa[i]=read();\n\t\t\tif(fa[i]!=i)ye[fa[i]]=0;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)if(ye[i])ans++;\n\t\tcout<<ans<<endl;\n\t\tfor(int i=1;i<=n;i++)\n        {\n            if(ye[i])\n            {\n                int now=i,len=0;\n                while(!vis[now])\n                {\n                    stk[++len]=now;\n                    vis[now]=1;\n                    if(fa[now]==now)break;\n                    now=fa[now];\n                }\n                cout<<len<<endl;\n                for(int i=len;i>=1;i--)cout<<stk[i]<<\" \";\n                cout<<endl;\n            }\n        }\n        cout<<endl;\n\t}\n    return 0;\n}\n```",
        "postTime": 1683702814,
        "uid": 526519,
        "name": "Aisaka_Taiga",
        "ccfLevel": 0,
        "title": "CF1675D"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8&\u9898\u76ee\u5927\u610f](https://www.luogu.com.cn/problem/CF1675D)\n\n# \u524d\u7f6e\u829d\u58eb\n\n## \u6811\u94fe\u5256\u5206\n\n\u5f88\u660e\u663e\uff0c\u9898\u76ee\u60f3\u8ba9\u6211\u4eec\u628a\u6811\u5256\u5206\u6210\u4e00\u6839\u6839\u94fe\u3002\n\n\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u5c31\u662f\u6811\u5256\u3002\n\n## \u91cd\u94fe\u5256\u5206\n\n### \u91cd\u513f\u5b50\n\n\u513f\u5b50\u4e2d\u5b50\u6811\u5927\u5c0f\u6700\u5927\u7684\u513f\u5b50\u3002\n\n### \u91cd\u8fb9\n\n\u7236\u8282\u70b9\u4e0e\u91cd\u513f\u5b50\u7684\u8fde\u8fb9\u3002\n\n### \u91cd\u94fe\n\n\u91cd\u8fb9\u8fde\u63a5\u6210\u7684\u94fe\u3002\n\n**\u91cd\u94fe\u5256\u5206\u65e8\u5728\u628a\u6811\u5206\u6210\u5f88\u591a\u91cd\u94fe\u3002**\n\n+ \u4e00\u68f5\u6811\u7684\u91cd\u94fe\u6570\u91cf\u7b49\u4e8e\u5176\u53f6\u8282\u70b9\u6570\u91cf\u3002\n\n# \u89e3\u6cd5\n\n\u76f4\u63a5\u5bf9\u6811\u505a\u91cd\u94fe\u5256\u5206\u5373\u53ef\u3002\n\n\u5bf9\u6bcf\u6839\u94fe\uff1a\u6309\u7167\u987a\u5e8f\u8f93\u51fa\u3002\n\n**\u591a\u6d4b\u4e00\u5b9a\u8981\u6e05\u7a7a\uff01\uff01**\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(T\\times n)$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n//\u4e2a\u4eba\u8ba4\u4e3a\u7801\u98ce\u4e0d\u9519\n#include<bits/stdc++.h>\n#define N 200010\nusing namespace std;\nint _,n,nE,rt,hd[N],son[N],top[N],sz[N],p[N],bx[N],gu[N],cnt=0;\nvector<int> Chain[N];\nstruct edge{\n\tint to,nxt;\n}e[N+N];\nvoid add(int u,int v){\n\te[++nE]=(edge){v,hd[u]};\n\thd[u]=nE;\n}\nvoid dfs_son(int x,int fa){//\u6c42\u91cd\u513f\u5b50\n\tsz[x]=1;son[x]=0;\n\tfor(int i=hd[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(y==fa) continue;\n\t\tdfs_son(y,x);\n\t\tsz[x]+=sz[y];\n\t\tif(sz[y]>sz[son[x]]||sz[y]==sz[son[x]]&&y<son[x])\n\t\t\tson[x]=y;\n\t}\n}\nvoid dfs_top(int x,int fa){//\u6c42\u94fe\u9876\n\tif(son[fa]==x) top[x]=top[fa];\n\telse top[x]=x;\n\tfor(int i=hd[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(y==fa) continue;\n\t\tdfs_top(y,x);\n\t}\n}\nvoid sfs(int x,int fa){//\u6309\u7167\u987a\u5e8f\u6dfb\u52a0\u94fe\n\tif(!bx[top[x]]) gu[top[x]]=++cnt;\n\tChain[gu[top[x]]].push_back(x);\n\t++bx[top[x]];\n\tif(!son[x]) return;\n\tsfs(son[x],x);//\u91c7\u7528\u91cd\u513f\u5b50\u4f18\u5148\u641c\u7d22\n\tfor(int i=hd[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(y==son[x]||y==fa) continue;\n\t\tsfs(y,x);\n\t}\n}\nvoid init(){//\u521d\u59cb\u5316\n\tfor(int i=1;i<=cnt;++i) Chain[i].clear();\n\tfor(int i=1;i<=n;++i) hd[i]=son[i]=top[i]=e[i].nxt=e[i].to=p[i]=bx[i]=0;\n\tnE=cnt=0;\n}\nint main(){\n\tscanf(\"%d\",&_);\n\twhile(_--){\n\t\tscanf(\"%d\",&n);\n\t\tinit();\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tscanf(\"%d\",&p[i]);\n\t\t\tif(i==p[i]) rt=i;\n\t\t\telse add(i,p[i]),add(p[i],i);\n\t\t}\n\t\tif(n==1){//\u7279\u5224 n=1\n\t\t\tprintf(\"1\\n1\\n%d\\n\\n\",rt);\n\t\t\tcontinue;\n\t\t}\n\t\tdfs_son(rt,0);\n\t\tdfs_top(rt,rt);\n\t\tsfs(rt,0);\n\t\tprintf(\"%d\\n\",cnt);\n\t\tfor(int i=1;i<=cnt;++i){//\u8f93\u51fa\u7b54\u6848\n\t\t\tprintf(\"%d\\n\",Chain[i].size());\n\t\t\tfor(int j=0;j<Chain[i].size();++j){\n\t\t\t\tprintf(\"%d \",Chain[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n[AC \u8bb0\u5f55](https://www.luogu.com.cn/record/108653041)",
        "postTime": 1682132827,
        "uid": 314516,
        "name": "xuhanxi_dada117",
        "ccfLevel": 4,
        "title": "CF1675D  Vertical Paths  \u9898\u89e3"
    },
    {
        "content": "## Description\n\n\u6709\u4e00\u4e2a $n$ \u4e2a\u7ed3\u70b9\u7684\u6709\u6839\u6811\u3002\u73b0\u5728\u8981\u628a\u5b83\u6811\u94fe\u5256\u5206\uff0c\u8981\u6c42\u6bcf\u4e2a\u7ed3\u70b9\u53ea\u5c5e\u4e8e\u4e00\u6761\u6811\u94fe\uff0c\u94fe\u5fc5\u987b\u8981\u4ece\u7956\u5148\u5230\u540e\u4ee3\uff0c\u4e14\u6811\u94fe\u7684\u6570\u91cf\u6700\u5c11\u3002\u5982\u679c\u6709\u591a\u79cd\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u3002\n\n## Solution\n\n\u4ece\u975e\u53f6\u5b50\u7ed3\u70b9\u51fa\u53d1\u7684\u6bcf\u4e00\u6761\u6811\u94fe\uff0c\u6211\u4eec\u90fd\u6beb\u4e0d\u72b9\u8c6b\u5730\u4e0b\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6700\u5c0f\u5316\u6811\u94fe\u6570\u91cf\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6837\u505a\uff0c\u6811\u94fe\u7684\u6570\u91cf\u7b49\u4e8e\u53f6\u5b50\u7ed3\u70b9\u7684\u6570\u76ee\u3002\u6811\u94fe\u7684\u6570\u76ee\u4e0d\u53ef\u80fd\u6bd4\u8fd9\u66f4\u5c11\u4e86\u3002\n\n\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f80\u4e0a\u63a8\uff0c\u4e00\u76f4\u63a8\u5230\u6839\u7ed3\u70b9\u6216\u662f\u5df2\u7ecf\u52a0\u5165\u67d0\u4e2a\u6811\u94fe\u7684\u7ed3\u70b9\uff0c\u5e76\u5012\u5e8f\u8f93\u51fa\u8def\u5f84\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint fa[200005], path[200005];\nbool vis[200005],leaf[200005];\nint main() {\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tmemset(leaf, 1, sizeof(leaf));\n\t\tint n, ans = 0;\n\t\tscanf(\"%d\", &n);\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tscanf(\"%d\", &fa[i]);\n\t\t\tif (fa[i] != i)\n\t\t\t\tleaf[fa[i]] = 0;\n\t\t}\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (leaf[i])\n\t\t\t\tans++;\n\t\tprintf(\"%d\\n\", ans);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (leaf[i]) {\n\t\t\t\tint now = i, len = 0;\n\t\t\t\twhile (!vis[now]) {\n\t\t\t\t\tpath[++len] = now;\n\t\t\t\t\tvis[now] = 1;\n\t\t\t\t\tif (fa[now] == now)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tnow = fa[now];\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\", len);\n\t\t\t\tfor (int i = len; i >= 1; i--)\n\t\t\t\t\tprintf(\"%d \", path[i]);\n\t\t\t\tputs(\"\");\n\t\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1652274378,
        "uid": 182234,
        "name": "ryanright",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1675D Vertical Paths"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1a[https://oi.baoshuo.ren/solutions/codeforces-1675d/](https://oi.baoshuo.ren/solutions/codeforces-1675d/?utm_source=luogu.com.cn&utm_medium=solution-codeforces-1675d)\n\n2022-05-19 \u66f4\u65b0\uff1a\u611f\u8c22 @fast_photon \u6307\u51fa\u672c\u6587\u4e2d\u63cf\u8ff0\u4e0d\u6070\u5f53\u4e4b\u5904\uff0c\u73b0\u5df2\u4fee\u6b63\u3002\n\n## \u601d\u8def\n\n\u770b\u5230\u8fd9\u9053\u9898\u7684\u6837\u4f8b\u8bf4\u660e\u4e4b\u540e\u7b2c\u4e00\u773c\u60f3\u5230\u7684\u662f\u6811\u94fe\u5256\u5206\uff08\u56fe\u6e90 [OI Wiki](https://oi-wiki.org/graph/hld/)\uff09\uff1a\n\n![](https://arina.loli.net/2022/05/08/Bx1MKGfRwZita5c.png)\n\n\u6309\u7167\u8fd9\u6837\u5256\u51fa\u6765\u7684\u7b54\u6848\u663e\u7136\u662f\u5bf9\u7684\u3002\n\n\u518d\u770b\u770b\u6837\u4f8b\u4f1a\u53d1\u73b0\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u6700\u5c0f\u8def\u5f84\u6570\u4e00\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\u6570\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u9047\u5230\u5206\u53c9\u7684\u65f6\u5019\u5c31\u65b0\u5f00\u5176\u4ed6\u8def\u5f84\uff0c\u540c\u65f6\u6311\u9009\u4e00\u4e2a\u65b9\u5411\u7ee7\u7eed\u5f53\u524d\u8def\u5f84\uff0c\u8fd9\u6837\u51fa\u6765\u7684\u7b54\u6848\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <vector>\n\nusing std::cin;\nusing std::cout;\nconst char endl = '\\n';\n\nconst int N = 2e5 + 5;\n\nint t, n, fa[N], root, ans_cnt;\nstd::vector<int> g[N], ans[N];\n\nvoid dfs(int u, int fa, int cnt) {\n    if (g[u].size() == 1) {  // \u662f\u5426\u662f\u53f6\u5b50\u8282\u70b9\n        ans[cnt].push_back(u);\n        return;\n    }\n\n    ans[cnt].push_back(u);\n\n    bool f = false;\n\n    for (int v : g[u]) {\n        if (v == fa) continue;\n\n        if (!f) {\n            dfs(v, u, cnt);\n            f = true;\n        } else {\n            dfs(v, u, ++ans_cnt);\n        }\n    }\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n\n    cin >> t;\n\n    while (t--) {\n        root = 0;\n        ans_cnt = 1;\n\n        cin >> n;\n\n        for (int i = 1; i <= n; i++) {\n            cin >> fa[i];\n\n            if (fa[i] == i) root = i;\n\n            g[i].push_back(fa[i]);\n            g[fa[i]].push_back(i);\n        }\n\n        dfs(root, root, 1);\n\n        for (int i = 1; i <= n; i++) {\n            g[i].clear();\n        }\n\n        cout << ans_cnt << endl;\n        for (int i = 1; i <= ans_cnt; i++) {\n            cout << ans[i].size() << endl;\n            for (int x : ans[i]) {\n                cout << x << ' ';\n            }\n            cout << endl;\n\n            ans[i].clear();\n        }\n        cout << endl;\n    }\n\n    return 0;\n}\n```\n",
        "postTime": 1652267683,
        "uid": 168214,
        "name": "\u5b9d\u7855",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1675D \u3010Vertical Paths\u3011"
    },
    {
        "content": "\u5bf9\u6574\u68f5\u6811\u8fdb\u884c**\u8f7b\u91cd\u94fe\u5256\u5206**\uff0c\u901a\u8fc7\u7b2c\u4e00\u6b21 dfs \u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684**\u91cd\u513f\u5b50**\uff0c\u518d\u901a\u8fc7\u7b2c\u4e8c\u6b21 dfs \u4fdd\u5b58\u6bcf\u6761\u8def\u5f84\u3002\u6bcf\u6b21\u90fd\u4f18\u5148\u904d\u5386\u91cd\u513f\u5b50\uff0c\u6240\u4ee5\u80fd\u591f\u4fdd\u8bc1\u5256\u51fa\u7684\u94fe\u603b\u6570\u6700\u5c0f\u3002\n\n\u5751\u70b9 1\uff1a\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u65f6\uff0cdfs \u4f1a\u5931\u6548\uff08\u6ca1\u6709\u91cd\u513f\u5b50\uff09\uff0c\u8fd9\u79cd\u60c5\u51b5\u76f4\u63a5\u8f93\u51fa\u81ea\u5df1\u5373\u53ef\u3002\n\n\u5751\u70b9 2\uff1a\u505a\u591a\u4e86 cf \u9898\u7684\u5c31\u4f1a\u77e5\u9053 cf \u7ecf\u5e38\u5361\u76f4\u63a5\u5bf9**\u6574\u4e2a\u6570\u7ec4**\u65e0\u8111 `memset` \u7684\uff0c\u6240\u4ee5\u5728\u521d\u59cb\u5316\u662f\u65f6\u4ec5\u9700\u6e05\u96f6\u4f7f\u7528\u8fc7\u7684\u5373\u53ef\u3002\n\n```cpp\n// author: TMJYH09\n// create time: 2022/05/05 23:08:43\n#include <bits/stdc++.h>\n#define endl '\\n'\nusing namespace std;\n\nconst int N = 2e5 + 10;\nstruct edge{\n    int to,nxt;\n}e[N<<1];\nint head[N],idx;\nvoid add(int x,int y){\n    e[++idx]={y,head[x]};\n    head[x]=idx;\n}\nvector <int> path[N<<1];\nint root,n;\n\nint son[N],fa[N],siz[N];\nint top[N],dfn;\n\nvoid init(){\n    for(int i=1;i<=dfn;i++)path[i].clear();\n    for(int i=1;i<=n;i++)son[i]=0,fa[i]=0,siz[i]=0,top[i]=0,head[i]=0;//\u521d\u59cb\u5316\u8981\u6ce8\u610f\uff0c\u7b2c\u4e00\u6b21\u5c31\u662f memset \u5bfc\u81f4 TLE\n    idx=dfn=0;\n}\n\nvoid dfs1(int u,int f){\n    fa[u]=f;\n    siz[u]=1;\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v!=f){\n            dfs1(v,u);\n            siz[u]+=siz[v];\n            if(siz[v]>siz[son[u]]){\n                son[u]=v;\n            }\n        }\n    }\n}\nvoid dfs2(int u,int tp){\n    top[u]=tp;\n    if(u==tp)++dfn;\n    path[dfn].push_back(u);\n    if(!son[u])return;\n    dfs2(son[u],tp);\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v!=fa[u]&&v!=son[u])dfs2(v,v);\n    }\n}\n\nvoid solve(){\n    init();\n    int x;\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>x;\n        if(i==x)root=x;\n        else add(x,i),add(i,x);\n    }\n    if(n==1){\n        cout<<1<<endl<<1<<endl<<x<<endl<<endl;return;\n    }\n    dfs1(root,0);\n    dfs2(root,root);\n    cout<<dfn<<endl;\n    for(int i=1;i<=dfn;i++){\n        cout<<path[i].size()<<endl;\n        for(auto &j:path[i])cout<<j<<' ';\n        cout<<endl;\n    }\n    cout<<endl;\n}\n\nint main(){\n    ios::sync_with_stdio(false),cin.tie(nullptr);\n    int _;cin>>_;while(_--)solve();\n    return 0;\n}\n```",
        "postTime": 1652230806,
        "uid": 482728,
        "name": "Engulf",
        "ccfLevel": 0,
        "title": "CF1675D Vertical Paths \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u65e0\u6839\u7684\u3001\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u73b0\u5728\u8981\u6c42\u4f60\u628a\u5b83\u5206\u6210 $m$ \u4e2a\u8def\u5f84\uff0c\u4f7f\u5f97 $m$ \u6700\u5c0f\uff0c\u8def\u5f84 $V=\\{a_1,a_2,a_3\\cdots a_k\\}$ \u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\n\n+ $a_i$ \u4e00\u5b9a\u662f $a_{i+1}$ \u7684\u7236\u4eb2\u8282\u70b9\u3002\n\n+ $a_i$ \u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e24\u4e2a\u8def\u5f84\uff0c\u53ea\u5c5e\u4e8e\u4e00\u6761\u3002\n\n+ \u6240\u6709\u8def\u5f84\u5305\u542b\u4e86\u6240\u6709\u8282\u70b9\u3002\n\n\u8bf7\u8f93\u51fa\u6700\u5c0f\u7684 $m$ \u548c\u6bcf\u4e2a $V$ \u7684\u5927\u5c0f\u548c\u6240\u6709\u5143\u7d20\u3002\n\n### \u57fa\u672c\u601d\u8def\n\n\u6211\u4eec\u9996\u5148\u53d1\u73b0\uff0c\u6839\u636e\u9898\u610f\uff0c\u6bcf\u4e2a\u8def\u5f84\u4e00\u5b9a\u662f\u4e00\u6761\u94fe\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1j9jx7nm.png)\n\n\u8fd9\u65f6 $1$ \u4e3a\u6839\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\n\n\u65e0\u8bba\u600e\u6837\u5206\uff0c\u6839\u8282\u70b9\u90fd\u4f1a\u8ddf\u6709\u4e14\u53ea\u6709\u4e00\u68f5\u5b50\u6811\u7684\u5176\u4e2d\u4e00\u6761\u8def\u5f84\u5408\u8d77\u6765\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u5c06\u8fd9\u4e2a\u6839\u8282\u70b9\u52a0\u5165\u5b83\u7684\u4e00\u68f5\u5b50\u6811\u7684\u8def\u5f84\u5417\uff0c\u8fd9\u9053\u9898\u5c31\u80fd\u88ab\u89e3\u51b3\u4e86\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n\u6211\u4eec\u4ece\u4e0a\u8ff0\u601d\u8def\u4e2d\u53d1\u73b0\uff0c\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u8def\u5f84\u662f\u7531\u5b83\u7684\u4e00\u68f5\u5b50\u6811\u5408\u5e76\u800c\u6765\u7684\u3002\u4e8e\u662f\u6211\u4eec\u7528\u6808\u6765\u50a8\u5b58\uff1a\n\n+ \u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u5c06\u5176\u653e\u5165\u6808\u4e2d\u3002\n\n+ \u82e5\u8fd9\u4e2a\u8def\u5f84\u5df2\u7ecf\u5408\u5e76\u5230\u4e86\u5c3d\u5934\uff0c\u90a3\u4e48\u5c31\u4e00\u76f4\u5f39\u6808\uff0c\u5f39\u5230\u6839\u8282\u70b9\u4e3a\u6b62\u3002\n\n\u5751\u70b9\uff1a\u8fd9\u9053\u9898\u7684\u8f93\u51fa\u987a\u5e8f\u662f\u8981\u6c42\u4ece\u4e00\u4e2a $V$ \u7684 $a_1$ \u4e00\u76f4\u8f93\u51fa\u5230 $a_k$\uff0c\u6240\u4ee5\u6808\u7684\u8f93\u51fa\u987a\u5e8f\u662f\u6b63\u597d\u76f8\u53cd\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8f93\u51fa\u7684\u65f6\u5019\u53cd\u5411\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define rep1(i, l, r) for (register int i(l); i <= r; ++i)\n#define rep2(i, l, r) for (register int i(l); i >= r; --i)\nusing namespace std;\nconst int N = 2e5 + 5;\nint n, root, ans; vector <int> G[N];\nvector <int> k[N];\nstack <int> st;\ninline void dfs(int x, int f, bool o) {\n\tst.push(x); bool flg = 0;\n\trep1(_, 0, (int)G[x].size() - 1) {\n\t\tint v = G[x][_];\n\t\tif (v == f) continue;\n\t\tdfs(v, x, flg);\n\t\tflg = 1;\n\t}\n\tif (o) {\n\t\t++ans;\n\t\twhile (st.top() != x) {\n\t\t\tk[ans].push_back(st.top());\n\t\t\tst.pop();\n\t\t}\n\t\tk[ans].push_back(x); st.pop();\n\t}\n}\nsigned main(void) {\n\tios::sync_with_stdio(false);\n\tint t; cin >> t; while (t--) {\n\t\tcin >> n; ans = 0;\n\t\twhile (st.size()) st.pop(); rep1(i, 1, n) k[i].clear();\n\t\trep1(i, 1, n) G[i].clear();\n\t\trep1(i, 1, n) {\n\t\t\tint p; cin >> p;\n\t\t\tif (p != i) G[p].push_back(i), G[i].push_back(p);\n\t\t\telse root = i;\n\t\t}\n\t\tdfs(root, -1, 1);\n\t\tcout << ans << endl;\n\t\trep1(i, 1, ans) {\n\t\t\tcout << k[i].size() << endl;\n\t\t\treverse(k[i].begin(), k[i].end());\n\t\t\trep1(j, 0, (int)k[i].size() - 1) {\n\t\t\t\tcout << k[i][j] << ' ';\n\t\t\t} cout << endl;\n\t\t} cout << endl;\n\t}\n}\n```",
        "postTime": 1655902102,
        "uid": 377787,
        "name": "Hooch",
        "ccfLevel": 6,
        "title": "CF1675C"
    }
]