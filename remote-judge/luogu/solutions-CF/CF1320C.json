[
    {
        "content": "# [CF1320C World of Darkraft: Battle for Azathoth](http://codeforces.com/contest/1321/problem/E)\n\n**~~\u6bd2\u7624\u9898~~\uff0c\u4e5f\u53ef\u80fd\u662f\u6211\u4ee3\u7801\u80fd\u529b\u592a\u5dee\uff0c\u8fd9\u9898\u6211\u8c03\u4e86\u4e00\u5e74**\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6b66\u5668\u548c\u9632\u5177\uff0c\u53bb\u91cd\uff1b\u5bf9\u4e8e\u602a\u517d\uff0c\u6309\u9632\u5fa1\u529b\u6392\u5e8f\n\n\u5728\u679a\u4e3e\u5230\u7b2c $i$ \u4e2a\u9632\u5177\u7684\u65f6\u5019\uff0c\u6211\u4eec\u679a\u4e3e\u6240\u6709\u6070\u80fd\u88ab\u7b2c $i$ \u4e2a\u9632\u5177\u51fb\u8d25\u7684\u602a\u517d\uff08\u4e5f\u5c31\u662f\u7b2c $i - 1$ \u4e2a\u9632\u5177\u51fb\u8d25\u4e0d\u4e86\uff0c\u4f46\u662f\u7b2c $i$ \u4e2a\u9632\u5177\u53ef\u4ee5\u51fb\u8d25\u7684\uff09\n\n\u7136\u540e\u6211\u4eec\u5bf9\u6bcf\u4e2a\u6b66\u5668\u7ef4\u62a4\u4e00\u4e2a\u6743\u503c\u3002\u5f53\u6211\u4eec\u679a\u4e3e\u5230\u4e00\u4e2a\u602a\u517d\u7684\u65f6\u5019\uff0c\u5c31\u5148\u4e8c\u5206\u51fa\u6700\u5f31\u7684\u4e00\u4e2a\u80fd\u51fb\u8d25\u8fd9\u4e2a\u602a\u517d $A$ \u503c\u7684\u6b66\u5668\uff0c\u7136\u540e\u7ed9\u6240\u6709\u4e0d\u5f31\u4e8e\u8fd9\u4e2a\u6b66\u5668\u7684\u6b66\u5668\u7684\u6743\u503c\u52a0\u4e0a\u8fd9\u4e2a\u602a\u517d\u7684\u6536\u76ca\u3002\n\n\u6bcf\u6b21\u679a\u4e3e\u5b8c\u602a\u517d\uff0c\u6211\u4eec\u5c31\u627e\u4e00\u4e0b\uff08\u8d21\u732e\u503c - \u4ef7\u683c\uff09\u6700\u5927\u7684\u6b66\u5668\uff0c\u66f4\u65b0\u7b54\u6848\n\n\u8fd9\u91cc\uff0c\u7531\u4e8e\u5bf9\u6bcf\u4e2a\u6b66\u5668\u7ef4\u62a4\u7684\u6743\u503c\u9700\u8981\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6c42 $\\max$ \uff0c\u6240\u4ee5\u53ef\u4ee5\u9009\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\n\n\u8fd9\u9898\u4e0d\u592a\u597d\u8bb2\uff0c\u53ef\u80fd\u8bb2\u7684\u4e0d\u592a\u6e05\u695a\uff0c\u7ec6\u8282\u89c1\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mp make_pair\n#define pb push_back\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> pii;\ntypedef pair<ll, ll> pil;\ntypedef pair<ll, ll> pli;\ntypedef pair<ll, ll> pll;\n\nll read()\n{\n\tchar c = getchar(); ll flag = 1, ans = 0;\n\twhile (c < '0' || c > '9') {if (c == '-') flag = -flag; c = getchar();}\n\twhile (c >= '0' && c <= '9') {ans = ans * 10 + c - '0'; c = getchar();}\n\treturn ans * flag;\n}\n\nconst ll INF = 1e16;\nconst ll MAXN = 500020;\nll tree[MAXN << 2], lazy[MAXN << 2], x[MAXN];\nll n, m, p, ans = -INF;\n\nstruct Attack\n{\n\tll a, ca;\n}atk1[MAXN], atk[MAXN];\n\nstruct Defense\n{\n\tll b, cb;\n}def1[MAXN], def[MAXN]; \n\nstruct Monster\n{\n\tll a, d, c;\n}mon[MAXN];\n\nbool cmp1 (Attack x, Attack y)\n{\n\treturn x.a < y.a || (x.a == y.a && x.ca < y.ca);\n}\n\nbool cmp2 (Defense x, Defense y)\n{\n\treturn x.b < y.b || (x.b == y.b && x.cb < y.cb);\n}\n\nbool cmp3 (Monster x, Monster y)\n{\n\treturn x.d < y.d;\n}\n\nvoid push_back (ll now, ll l, ll r)\n{\n\tif (lazy[now] == 0)\n\t\treturn;\n\tll mid = (l + r) >> 1;\n\tlazy[now << 1] += lazy[now];\n\tlazy[now << 1 | 1] += lazy[now];\n\ttree[now << 1] += lazy[now];\n\ttree[now << 1 | 1] += lazy[now];\n\tlazy[now] = 0;\n}\n\nvoid build_tree (ll now, ll l, ll r)\n{ \n\tif (l == r)\n\t{\n\t\ttree[now] = -atk[l].ca;\n\t\treturn;\n\t}\n\tll mid = (l + r) >> 1;\n\tbuild_tree (now << 1, l, mid);\n\tbuild_tree (now << 1 | 1, mid + 1, r);\n\ttree[now] = max (tree[now << 1], tree[now << 1 | 1]);\n}\n\nvoid modify (ll now, ll l, ll r, ll L, ll R, ll x)\n{\n\tif (L <= l && r <= R)\n\t{\n\t\tlazy[now] += x;\n\t\ttree[now] += x;\n\t\treturn;\n\t}\n\tpush_back (now, l, r);\n\tll mid = (l + r) >> 1;\n\tif (L <= mid)\n\t\tmodify (now << 1, l, mid, L, R, x);\n\tif (R > mid)\n\t\tmodify (now << 1 | 1, mid + 1, r, L, R, x);\n\ttree[now] = max (tree[now << 1], tree[now << 1 | 1]);\n}\n\nint main()\n{\n\tscanf (\"%lld%lld%lld\", &n, &m, &p);\n\tfor (ll i = 1; i <= n; ++ i)\n\t\tscanf (\"%lld%lld\", &atk1[i].a, &atk1[i].ca);\n\tfor (ll i = 1; i <= m; ++ i)\n\t\tscanf (\"%lld%lld\", &def1[i].b, &def1[i].cb);\n\tsort (atk1 + 1, atk1 + n + 1, cmp1);\n\tsort (def1 + 1, def1 + m + 1, cmp2);\n\tll tp = 0; //\u5f00\u59cb\u53bb\u91cd \n\tfor (ll i = 1; i <= n; ++ i)\n\t\tif (atk1[i].a != atk[tp].a)\n\t\t\tatk[++ tp] = atk1[i];\n\tn = tp, tp = 0;\n\tfor (ll i = 1; i <= m; ++ i)\n\t\tif (def1[i].b != def[tp].b)\n\t\t\tdef[++ tp] = def1[i];\n\tm = tp;\n\t\n\tfor (ll i = 1; i <= p; ++ i)\n\t\tscanf (\"%lld%lld%lld\", &mon[i].a, &mon[i].d, &mon[i].c);\n\tsort (mon + 1, mon + p + 1, cmp3);\n\t\n\tmemset (tree, -0x3f, sizeof (tree));\n\tbuild_tree (1, 1, n);\n\tll pos = 1;\n\tfor (ll i = 1; i <= n; ++ i)\n\t\tx[i] = atk[i].a;\n\tfor (ll i = 1; i <= m; ++ i)\n\t{\n\t\tfor (; pos <= p && mon[pos].d < def[i].b; ++ pos)\n\t\t{\n\t\t\tll now = upper_bound (x + 1, x + n + 1, mon[pos].a) - x;\n\t\t\tif (x[now] > mon[pos].a)\n\t\t\t\tmodify (1, 1, n, now, n, mon[pos].c);\n\t\t}\n\t\t//if (ans < query (1, 1, n, 1, n) - def[i].cb)\n\t\t//\tprllf (\"%lld %lld\\n\", i, query (1, 1, n, 1, n) - def[i].cb);\n\t\tans = max (ans, tree[1] - def[i].cb);\n\t}\n\tprintf (\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1583459931,
        "uid": 59317,
        "name": "legend_life",
        "ccfLevel": 0,
        "title": "CF1320C World of Darkraft: Battle for Azathoth\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u5c06\u6b66\u5668\u6309\u7167\u653b\u51fb\u529b\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u9632\u5177\u6309\u7167\u9632\u5fa1\u529b\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u602a\u7269\u6309\u7167\u9632\u5fa1\u529b\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u6b66\u5668\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u53ef\u4ee5\u77e5\u9053\u6b66\u5668 $i$ \u80fd\u6253\u7684\u602a\u7269\u6b66\u5668 $i+1$ \u4e5f\u80fd\u6253\uff0c\u6240\u4ee5\u80fd\u6253\u7684\u602a\u7269\u4e2a\u6570\u662f\u5355\u8c03\u4e0a\u5347\u7684\u3002\u6240\u4ee5\u6bcf\u6b21\u5c31\u5c06\u6b66\u5668 $i+1$ \u6bd4\u6b66\u5668 $i$ \u591a\u6253\u7684\u602a\u7269\u52a0\u5165\u96c6\u5408\u4e2d\uff0c\u7136\u540e\u7ef4\u62a4\u9632\u5177 $x$ \u80fd\u5728\u5f53\u524d\u602a\u7269\u96c6\u5408\u4e2d\u5f97\u5230\u7684\u5229\u76ca\u3002\n\n\u663e\u7136\u5bf9\u4e8e\u80fd\u9632\u5fa1\u602a\u7269 $x$ \u7684\u9632\u5177\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\uff08\u56e0\u4e3a\u6392\u4e86\u5e8f\u5440\uff09\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u4e25\u683c\u5927\u4e8e\u602a\u7269 $x$ \u7684\u9632\u5fa1\u529b\u7684\u9632\u5177\uff0c\u7136\u540e\u533a\u95f4\u52a0\uff0c\u518d\u67e5\u627e\u5168\u5c40\u6700\u5927\u503c\u5c31\u597d\u4e86\u3002\n\n\u81f3\u4e8e\u7ef4\u62a4\u9632\u5177\u7684\u6570\u636e\u7ed3\u6784\uff0c\u80af\u5b9a\u7ebf\u6bb5\u6811\u5440\uff0c\u5f53\u7136\u5206\u5757\u4e5f\u4e0d\u662f\u4e0d\u53ef\u4ee5\u3002\n\n\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define l(x) t[x].l\n#define r(x) t[x].r\n#define LL long long\n#define dat(x) t[x].dat\n#define sum(x) t[x].sum\n#define add(x) t[x].add\nconst int MAXN = 2e5 + 5;\nstruct tree {\n    int l, r;\n    LL dat, add;\n} t[MAXN << 2];\nstruct node1 {\n    LL x, y;\n} a[MAXN], b[MAXN];\nstruct node2 {\n    LL x, y, z;\n} c[MAXN];\nbool cmp1(node1 A, node1 B) { return A.x < B.x; }\nbool cmp2(node2 A, node2 B) { return A.x < B.x; }\nvoid build(int p, int l, int r) {\n    l(p) = l, r(p) = r;\n    if (l == r) {\n        dat(p) = -b[l].y;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(p << 1, l, mid);\n    build(p << 1 | 1, mid + 1, r);\n    dat(p) = max(dat(p << 1), dat(p << 1 | 1));\n}\nvoid Updata(int p) {\n    if (add(p)) {\n        add(p << 1) += add(p);\n        add(p << 1 | 1) += add(p);\n        dat(p << 1) += add(p);\n        dat(p << 1 | 1) += add(p);\n        add(p) = 0;\n    }\n}\nvoid Change(int p, int l, int r, LL d) {\n    if (l <= l(p) && r >= r(p)) {\n        add(p) += d;\n        dat(p) += d;\n        return;\n    }\n    Updata(p);\n    int mid = (l(p) + r(p)) >> 1;\n    if (l <= mid)\n        Change(p << 1, l, r, d);\n    if (r > mid)\n        Change(p << 1 | 1, l, r, d);\n    dat(p) = max(dat(p << 1), dat(p << 1 | 1));\n}\nLL Query_max(int p, int l, int r) {\n    if (l <= l(p) && r >= r(p))\n        return dat(p);\n    Updata(p);\n    int mid = (l(p) + r(p)) >> 1;\n    LL val = -1e18;\n    if (l <= mid)\n        val = max(val, Query_max(p << 1, l, r));\n    if (r > mid)\n        val = max(val, Query_max(p << 1 | 1, l, r));\n    return val;\n}\nint n, m, p;\nLL d[MAXN];\nvoid Add(int k) {\n    int pos = upper_bound(d + 1, d + m + 1, c[k].y) - d;\n    if (pos <= m)\n        Change(1, pos, m, c[k].z);\n}\nint main() {\n    scanf(\"%d %d %d\", &n, &m, &p);\n    for (int i = 1; i <= n; i++) scanf(\"%lld %lld\", &a[i].x, &a[i].y);\n    for (int i = 1; i <= m; i++) scanf(\"%lld %lld\", &b[i].x, &b[i].y);\n    for (int i = 1; i <= p; i++) scanf(\"%lld %lld %lld\", &c[i].x, &c[i].y, &c[i].z);\n    sort(a + 1, a + n + 1, cmp1);\n    sort(b + 1, b + m + 1, cmp1);\n    sort(c + 1, c + p + 1, cmp2);\n    for (int i = 1; i <= m; i++) d[i] = b[i].x;\n    build(1, 1, m);\n    int k = 1;\n    LL ans = -1e18;\n    for (int i = 1; i <= n; i++) {\n        while (k <= p && c[k].x < a[i].x) Add(k++);\n        ans = max(ans, Query_max(1, 1, m) - a[i].y);\n    }\n    printf(\"%lld\", ans);\n    return 0;\n}\n```",
        "postTime": 1583373499,
        "uid": 154560,
        "name": "Silver187",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1320C \u3010World of Darkraft: Battle for Azathoth\u3011"
    },
    {
        "content": "### \u524d\u8a00  \n$\\ \\ \\ \\ \\ \\ \\ $\u672c\u7bc7\u9898\u89e3\u662f\u8fd8\u539f\u7b14\u8005\u505a\u9898\u601d\u8def\u4e4b\u4f5c\uff0c\u56e0\u6b64\u90e8\u5206\u5730\u65b9\u53ef\u80fd\u4f1a\u6709\u7ed5\u5f2f\uff0c\u5982\u679c\u60f3\u5f97\u5230\u76f4\u622a\u4e86\u5f53\u7684\u7ed3\u8bba\u53ef\u4ee5\u8003\u8651\u5176\u4ed6\u51e0\u7bc7\u9898\u89e3\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u6b64\u5916\uff0c\u672c\u9898\u8fd8\u6709\u5728CF\u4e0a\u8dd1\u5f97\u66f4\u5feb\u7684\u5206\u5757\u89e3\u6cd5\u3002\n\n### \u9898\u610f  \n$\\ \\ \\ \\ \\ \\ \\ $\u9009\u62e9\u4e00\u4ef6\u6b66\u5668\uff08\u62e5\u6709\u653b\u51fb\u529b $ax_i$ \u548c\u4ef7\u683c $ay_i$ \u4e24\u79cd\u5c5e\u6027\uff09\uff0c\u4e00\u4ef6\u9632\u5177\uff08\u62e5\u6709\u9632\u5fa1\u529b $bx_i$ \u548c\u4ef7\u683c $by_i$ \u4e24\u79cd\u5c5e\u6027\uff09\uff0c\u6bcf\u53ea\u602a\u7269\u4e5f\u90fd\u6709\u9632\u5fa1\u529b $mx_i$ \uff0c\u653b\u51fb\u529b $my_i$ \uff0c\u6536\u76ca $mz_i$ \u4e09\u4e2a\u5c5e\u6027\u3002\u53ea\u8981\u653b\u51fb\u529b\u4e25\u683c\u5927\u4e8e\u602a\u7684\u9632\u5fa1\u529b\uff0c\u9632\u5fa1\u529b\u4e25\u683c\u5927\u4e8e\u602a\u7684\u653b\u51fb\u529b\u5c31\u80fd\u6253\u8d25\u8fd9\u53ea\u602a\uff0c\u83b7\u5f97\u91d1\u94b1\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u6c42\u6700\u5927\u5316\u6536\u76ca\u3002\uff08\u6253\u602a\u5f97\u5230\u7684\u94b1\u51cf\u6389\u8d2d\u4e70\u7269\u54c1\u82b1\u6389\u7684\u94b1\uff09  \n\n### \u9898\u89e3  \n$\\ \\ \\ \\ \\ \\ \\ $\u9996\u5148\u628a\u6240\u6709 $ay_i,by_i$ \u53d6\u4e00\u6b21\u76f8\u53cd\u6570\uff0c\u5c31\u662f\u4ed8\u51fa\u7684\u94b1\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u8003\u8651\u4e00\u4e2a\u57fa\u672c\u7684\u4e8b\u5b9e\uff0c\u5982\u679c\u6211\u4eec\u5c06\u6b66\u5668\u6309  $ax_i$ \u5347\u5e8f\u6392\u5e8f\uff0c\u602a\u7269\u6309\u7167\u9632\u5fa1\u529b $mx_i$ \u5347\u5e8f\u6392\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7528\u7ebf\u6027\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u53ef\u4e3a\u6bcf\u4e00\u53ea\u602a\u5339\u914d\u4e00\u4ef6\u5408\u9002\u7684\u6b66\u5668\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u5177\u4f53\u6765\u8bf4\uff0c\u9996\u5148\u904d\u5386\u6bcf\u4e00\u53ea\u602a\uff0c\u540c\u65f6\u5c06\u4e00\u4e2a\u6307\u9488 $z$ \u6307\u5411\u6392\u5e8f\u540e\u7684\u6b66\u5668\u5e8f\u5217\uff0c\u5f53\u5f53\u524d\u7684\u6b66\u5668\u4e0d\u80fd\u51fb\u6740\u8fd9\u53ea\u602a\u7269\u65f6\uff08\u5373 $ax_z>mx_i$ \uff09\uff0c\u6307\u9488\u53f3\u79fb\uff0c\u6700\u7ec8\u6bcf\u628a\u6b66\u5668\u90fd\u4f1a\u6709\u4e00\u4e2a\u53ef\u51fb\u6740\u602a\u7269\u7684\u8303\u56f4\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u8003\u8651\u5b8c\u6b66\u5668\u540e\uff0c\u6211\u4eec\u518d\u6765\u8003\u8651\u9632\u5177\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u62a4\u7532\u7684\u82b1\u9500\u5148\u7ec4\u6210\u4e00\u4e2a\u5e8f\u5217\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u8fd8\u662f\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9996\u5148\u4fdd\u8bc1\u5f53\u524d\u7684\u6b66\u5668\u80fd\u591f\u51fb\u6740\u5f53\u524d\u7684\u602a\u7269\uff0c\u7136\u540e\u9009\u62e9\u80fd\u591f\u4fdd\u62a4\u81ea\u5df1\u7684\u9632\u5177\uff08\u5373 $bx_j>my_i$ \uff09\uff0c\u5c06\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u9632\u5177\u5728\u5e8f\u5217\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u52a0\u4e0a\u51fb\u6740\u8fd9\u53ea\u602a\u7684\u6240\u5f97\u6536\u76ca(\u5373 $by_j \\leftarrow by_j+mz_i$ )\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u5f53\u6307\u5411\u6b66\u5668\u7684\u6307\u9488\u518d\u6b21\u53f3\u79fb\u524d\uff0c\u5148\u7edf\u8ba1\u5e8f\u5217\u4e2d\u7684\u6700\u5927\u6536\u76ca\uff0c\u5c06\u6700\u5927\u6536\u76ca\u51cf\u6389\u5f53\u524d\u6b66\u5668\u7684\u4ef7\u683c\uff0c\u5373\u4e3a\u9009\u62e9\u8fd9\u628a\u6b66\u5668\u65f6\u80fd\u5f97\u5230\u7684\u6700\u5927\u6536\u76ca(\u5373 $ans \\leftarrow \\max\\{maxn_i+ay_i\\}$\uff0c\u6b64\u5904\u8ba4\u4e3a $ay_i$ \u4e3a\u8d1f\u6570)\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u73b0\u5728\u7684\u95ee\u9898\u51fa\u5728\u5982\u4f55\u5feb\u901f\u5730\u7edf\u8ba1**\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u5927\u503c**\u4ee5\u53ca\u5bfb\u627e**\u6240\u6709\u80fd\u6ee1\u8db3\u6761\u4ef6\u7684\u62a4\u7532**\u5e76**\u52a0\u4e0a\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c**\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u770b\u7740\u4e0a\u9762\u7684\u52a0\u7c97\u7684\u8bcd\uff0c\u4f60\u5e94\u8be5\u60f3\u5230\u4e86\u4ec0\u4e48\u5427\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u533a\u95f4\u4fee\u6539(\u52a0\u4e0a\u4e00\u4e2a\u56fa\u5b9a\u503c),\u533a\u95f4\u67e5\u8be2(\u67e5\u8be2\u6574\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c)\uff0c\u6807\u51c6\u7ebf\u6bb5\u6811\u677f\u5b50\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u4f46\u8fd9\u9053\u9898\u8fd8\u6709\u4e00\u4e2a\u4e0d\u6807\u51c6\u7684\u5730\u65b9\uff0c\u90a3\u5c31\u662f\u5728\u4fee\u6539\u65f6\uff0c\u6240\u7ed9\u533a\u95f4\u4e0d\u8fde\u7eed\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u65f6\u5f88\u5bb9\u6613\u60f3\u5230\u5c06\u62a4\u7532\u6309 $bx_i$ \u5347\u5e8f\u6392\u5217\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u67d0\u4ef6\u62a4\u7532\u80fd\u591f\u6ee1\u8db3\u6761\u4ef6\u65f6\uff0c\u5176\u540e\u7684\u6240\u6709\u62a4\u7532 $bx_{i+1},bx_{i+1},\\dots bx_{m}$ \u4ea6\u80fd\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002\u4e5f\u5c31\u662f\u4fee\u6539\u7684\u53f3\u7aef\u70b9\u4e00\u5b9a\u5728 $m$ \u5904\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u4f46\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u662f\u9700\u8981\u7ebf\u6027\u67e5\u627e\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u62a4\u7532\u3002\u4f46\u8003\u8651\u5230\u6211\u4eec\u521a\u624d\u5df2\u7ecf\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8fd9\u4e2a\u5177\u6709**\u5355\u8c03\u6027**\u7684\u5e8f\u5217\u7528\u4e8c\u5206\u53ef\u4ee5\u5728\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8303\u56f4\u5185\u5f97\u5230\u4fee\u6539\u7684\u5de6\u7aef\u70b9\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u7136\u540e\u518d\u628a\u521a\u521a\u8bf4\u7684\u8fd9\u4e9b\u5957\u4e0a\u7ebf\u6bb5\u6811\u677f\u5b50\u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u4e2a\u7ec6\u8282  \n\n$\\ \\ \\ \\ \\ \\ \\ $1.\u8f93\u5165\u602a\u7269\u7684\u65f6\u5019\u662f\u5148\u8f93\u5165\u7684\u9632\u5fa1\u529b(\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u56e0\u4e3a\u8fd9\u6837\u5361\u4e86\u534a\u5929)  \n$\\ \\ \\ \\ \\ \\ \\ $2.\u6bcf\u6b21\u53d1\u73b0\u6b66\u5668\u7684\u653b\u51fb\u529b\u4e0d\u591f\u65f6\uff0c\u9700\u8981\u5c06\u6307\u9488\u53f3\u79fb\u4e00\u4f4d\u540e\u91cd\u65b0\u8003\u8651\u8fd9\u53ea\u602a\u7269\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $3.\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u6700\u540e\u653b\u51fb\u6bd4\u6307\u9488\u6307\u5411\u7684\u6b66\u5668\u66f4\u9ad8\u8fd8\u66f4\u4fbf\u5b9c\u7684\u6b66\u5668\uff0c\u6700\u540e\u9700\u8981\u518d\u627e\u4e00\u904d\u6709\u6ca1\u6709\u8fd9\u79cd\u53ef\u80fd\u3002(#21\u6d4b\u8bd5\u70b9\uff0c\u4e25\u91cd\u6000\u7591\u662fCF\u7684hacker\u4eec\u51fa\u7684)  \n$\\ \\ \\ \\ \\ \\ \\ $~~4.\u4e0d\u8981\u624b\u6ed1\u5728\u5efa\u6811\u548c\u533a\u95f4\u4fee\u6539\u65f6\u628a $m$ \u6253\u6210 $n$~~\n\n$$\\mathcal{CODE}$$  \n```cpp\n#include <cstdio>\n#include <algorithm>\n#define ll long long\n#define ls p<<1\n#define rs p<<1|1\n#define lson ls,l,mid\n#define rson rs,mid+1,r\nusing namespace std;\nll n,m;\nll tr[800005],tag[800005];\nstruct node{\n\tll x,y;\n\tnode(){}\n    node(ll X){x=X;}\n    bool operator < (const node q) const \n\t{\n        return x<q.x;\n    }\n}a[200005],b[200005];\nstruct monster{\n\tll x,y,z;\n}mo[200005];\ninline bool cmp1(node x,node y)\n{\n    if(x.x==y.x) return x.y<y.y;\n    return x.x<y.x;\n}\ninline bool cmp2(monster x,monster y){return x.x<y.x;}\nvoid push_up(ll p){tr[p]=max(tr[ls],tr[rs]);}\nvoid build(ll p,ll l,ll r)\n{\n\tif(l==r)\n\t{\n\t\ttr[p]=-b[l].y;\n\t\treturn;\n\t}\n\tll mid=(l+r)>>1;\n\tbuild(lson);build(rson);\n\tpush_up(p);\n}\nvoid push_down(ll p)\n{\n\tif(tag[p])\n\t{\n\t\ttr[ls]+=tag[p];\n\t\ttr[rs]+=tag[p];\n\t\ttag[ls]+=tag[p];\n\t\ttag[rs]+=tag[p];\n\t\ttag[p]=0;\t\n\t}\t\n}\nvoid update(ll p,ll l,ll r,ll l_x,ll r_x,ll val)\n{\n\tif(l_x>r_x) return;\n\tif(l_x<=l&&r<=r_x)\n\t{\n\t\ttr[p]+=val;\n\t\ttag[p]+=val;\n\t\treturn;\n\t}\n\tpush_down(p);\n\tll mid=(l+r)>>1;\n\tif(l_x<=mid) update(lson,l_x,r_x,val);\n\tif(mid<r_x)  update(rson,l_x,r_x,val);\n\tpush_up(p);\n}\nvoid read(ll &x)\n{\n\tll f=1;x=0;char c=getchar();\n\twhile(!('0'<=c&&c<='9')){if(c=='-')f=-1;c=getchar();}\n\twhile('0'<=c&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\tx*=f;\n}\nint main() {\n\tll p;\n\tread(n);read(m);read(p);\n\tfor(ll i=1;i<=n;i++) \n\t{\n\t\tread(a[i].x);\n\t\tread(a[i].y);\n\t}\n\tfor(ll i=1;i<=m;i++) \n\t{\n\t\tread(b[i].x);\n\t\tread(b[i].y);\n\t}\n\tfor(ll i=1;i<=p;i++) \n\t{\n\t\tread(mo[i].x);\n\t\tread(mo[i].y);\n\t\tread(mo[i].z);\n\t}\n\tsort(a+1,a+n+1,cmp1);sort(b+1,b+m+1,cmp1);sort(mo+1,mo+1+p,cmp2);\n\tbuild(1,1,m);\n\tll z=1,ans=-2e9;\n\tfor(ll i=1;i<=p;i++)\n\t{\n\t\tif(a[z].x>mo[i].x)\n\t\t{\n\t\t\tll w=upper_bound(b+1,b+1+m,node(mo[i].y))-b;\n\t\t\tupdate(1,1,m,w,m,mo[i].z);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=max(ans,tr[1]-a[z].y);\n\t\t\tz++;\n\t\t\tif(z>n) break;\n\t\t\ti--;\n\t\t}\n\t}\n\tfor(int i=z;i<=n;i++) ans=max(ans,tr[1]-a[i].y);//\u9632\u6b62\u4e4b\u540e\u6709\u66f4\u4fbf\u5b9c\u653b\u51fb\u529b\u8fd8\u66f4\u9ad8\u7684\u5200\u3002 \n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```  ",
        "postTime": 1583333129,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1320C \u3010World of Darkraft: Battle for Azathoth\u3011"
    },
    {
        "content": "> \u7ed9\u5b9a\u4e00\u7cfb\u5217\u6709\u4ee3\u4ef7\u7684\u88c5\u5907\uff0c\u7b2c\u4e00\u79cd\u63d0\u4f9b $x$ \u503c\uff0c\u7b2c\u4e8c\u79cd\u63d0\u4f9b $y$ \u503c\u3002\u7ed9\u51fa\u4e00\u4e9b\u602a\u517d\uff0c\u5982\u679c\u602a\u517d\u7684 $x_i$ \u548c $y_i$ \u90fd\u5c0f\u4e8e\u9009\u5b9a\u7684 $x$ \u548c $y$ \uff0c\u90a3\u4e48\u4f1a\u6709 $z_i$ \u7684\u5956\u52b1\u3002\u6700\u5927\u5316\u6536\u76ca\u3002\n>\n> $1\\leq n\\leq 2\\times 10^5$ \u3002\n\n\u4e00\u4e2a\u6bd4\u8f83\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u6392\u5e8f\u4e4b\u540e\u679a\u4e3e\u4e00\u7ef4\u5750\u6807\uff0c\u7136\u540e\u53bb\u7b97\u53e6\u4e00\u7ef4\u3002\u7136\u800c\u53e6\u4e00\u7ef4\u5e76\u4e0d\u5177\u5907\u5355\u8c03\u6027\u3002\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5207\u7684 $x$ \uff0c\u5982\u4f55\u9009\u62e9\u4e00\u4e2a\u6700\u4f18\u7684 $y$ \u53d6\u5230\u6700\u5927\u503c\u3002\u8003\u8651\u5feb\u901f\u67e5\u627e\u4e00\u4e2a $y$ \u7684\u6700\u4f18\u503c\uff0c\u9700\u8981\u5feb\u901f\u8ba1\u7b97\u5f53\u524d $y$ \u53ef\u4ee5\u63d0\u4f9b\u51fb\u8d25\u54ea\u4e9b\u602a\u517d\u7684\u8d21\u732e\u3002\n\n\u8003\u8651\u5c06\u8be2\u95ee\u6309\u7167 $x$ \u6392\u5e8f\uff0c\u5c31\u8f6c\u5316\u548c\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u626b\u63cf\u7ebf\u95ee\u9898\u3002\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a $y$ \u503c\u5904\u7684\u6700\u5927\u503c\u3002\u679a\u4e3e\u7b2c\u4e00\u79cd\u88c5\u5907\uff0c\u6bcf\u6b21\u7528\u53cc\u6307\u9488\u626b\u5230\u5f53\u524d\u7684 $x_i$\uff0c\u63d0\u524d\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c $y$ \u5750\u6807\u7684\u540e\u7f00\u52a0\u8ba1\u7b97\u8d21\u732e\u3002\u6700\u540e\u7b54\u6848\u5c31\u662f\u6240\u6709 $y$ \u7684\u6700\u5927\u503c\u51cf\u53bb\u4f7f\u7528\u5f53\u524d $x$ \u7684\u4ee3\u4ef7\u3002\n\n\u611f\u89c9\u73b0\u5728\u8bed\u8a00\u8d8a\u6765\u8d8a\u82cd\u767d\u65e0\u529b\uff0c\u8fd8\u662f\u4ee3\u7801\u6bd4\u8f83\u5bb9\u6613\u8bf4\u660e\u9053\u7406\u3002\n\n```cpp\n#define LL long long\n#define lowb lower_bound\n#define uppb upper_bound\n \nconst int N = 200010 ;\nconst int S = 1000000101 ;\n \nLL ans ;\nint len ;\nint tmp[N] ;\nint n, m, k ;\nstruct arm{\n    int x ;\n    int c ;\n    bool operator < (const arm & t)\n    const { return t.x == x ? t.c > c : t.x > x ; }\n}a[N], b[N] ;\nstruct monster{\n    int x, y, v ;\n    bool operator < (const monster & t)\n    const { return t.y == y ? t.x > x : t.y > y ; }\n}base[N] ;\nLL s[N * 3] ;\nLL tag[N * 3] ;\n \nvoid _up(int x){\n    s[x] = max(s[x << 1], s[x << 1 | 1]) ;\n}\nvoid _down(int x){\n    if (tag[x]){\n        s[x << 1] += tag[x] ;\n        s[x << 1 | 1] += tag[x] ;\n        tag[x << 1] += tag[x] ;\n        tag[x << 1 | 1] += tag[x] ;\n    }\n    tag[x] = 0 ;\n}\nvoid chkmax(LL& a, int b){\n    a = b > a ? b : a ; return ;\n}\nvoid update(int rt, int l, int r, int v, int p){\n    if (l == r) \n\t\treturn chkmax(s[rt], v) ;\n\tint mid = (l + r) >> 1 ;\n    if (p <= mid) update(rt << 1, l, mid, v, p) ;\n    else update (rt << 1 | 1, mid + 1, r, v, p) ;\n}\nvoid update(int rt, int l, int r, int v, int ul, int ur){\n    if (ul <= l && r <= ur){\n        return s[rt] += v, tag[rt] += v, void() ;\n    }\n    int mid = (l + r) >> 1 ; _down(rt) ;\n    if (ul <= mid) update(rt << 1, l, mid, v, ul, ur) ;\n    if (ur > mid) update(rt << 1 | 1, mid + 1, r, v, ul, ur) ;\n    _up(rt) ;\n}\nint main(){\n    cin >> n >> m >> k ;\n    memset(s, -63, sizeof(s)) ;\n    for (int i = 1 ; i <= n ; ++ i)\n        scanf(\"%d%d\", &a[i].x, &a[i].c) ;\n    for (int i = 1 ; i <= m ; ++ i)\n        scanf(\"%d%d\", &b[i].x, &b[i].c) ;\n    sort(b + 1, b + m + 1) ;\n    for (int i = 1 ; i <= k ; ++ i)\n        scanf(\"%d%d%d\", &base[i].x, &base[i].y, &base[i].v) ;\n    sort(base + 1, base + k + 1) ;\n    for (int i = 1 ; i <= n ; ++ i) tmp[i] = a[i].x ;\n    sort(tmp + 1, tmp + n + 1) ; \n    len = unique(tmp + 1, tmp + n + 1) - (tmp + 1) ;\n    for (int i = 1 ; i <= k ; ++ i)\n        base[i].x = uppb(tmp + 1, tmp + len + 1, base[i].x) - tmp ; \n    for (int i = 1 ; i <= n ; ++ i){\n        a[i].x = lowb(tmp + 1, tmp + len + 1, a[i].x) - tmp ;\n        update(1, 1, len, - a[i].c, a[i].x) ;\n    }\n    //cout <<s[1]<<endl;//, cout << base[i].y<<endl;\n    int now = 1 ; ans = - (S + S) ;\n    for (int i = 1 ; i <= m ; ++ i){\n\t\t//cout << b[i].x << endl ;\n        while (now <= k && base[now].y < b[i].x)\n            update(1, 1, len, base[now].v, base[now].x, len), ++ now ;\n\t\t//cout << now << endl, cout << s[1] << \" ---------- \" << endl ;\n        ans = max(ans, s[1] - b[i].c) ;\n    }\n    cout << ans << endl ; return 0 ;\n}\n```",
        "postTime": 1583190079,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1320C \u3010World of Darkraft: Battle for Azathoth\u3011"
    },
    {
        "content": "\u4ee5\u653b\u51fb\u503c\u4e3a\u6a2a\u5750\u6807\uff0c\u9632\u5fa1\u503c\u4e3a\u7eb5\u5750\u6807\uff0c\u95ee\u9898\u53d8\u6210\uff1a\n\n- \u5e73\u9762\u4e0a\u6709\u4e00\u4e9b\u70b9\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6bcf\u4e2a\u6a2a\u7eb5\u5750\u6807\u90fd\u6709\u4e00\u4e2a\u4ee3\u4ef7\u3002\n- \u4f60\u8981\u9009\u62e9\u4e00\u4e2a\u6a2a\u5750\u6807\u548c\u4e00\u4e2a\u7eb5\u5750\u6807\uff0c\u4f7f**\u4e25\u683c\u5728\u5b83\u4eec\u548c\u5750\u6807\u8f74\u6784\u6210\u7684\u77e9\u5f62\u5185\u7684\u70b9\u7684\u6743\u503c\u548c**\u51cf\u53bb**\u8fd9\u4e24\u4e2a\u5750\u6807\u7684\u4ee3\u4ef7**\u6700\u5927\u3002\n\n\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u5728\u5f53\u524d\u6a2a\u5750\u6807\u9009\u62e9\u6bcf\u4e2a\u7eb5\u5750\u6807\u7684\u8d21\u732e\uff0c\u6bcf\u6b21\u53d6\u6700\u5927\u8d21\u732e\u51cf\u53bb\u5f53\u524d\u6a2a\u5750\u6807\u7684\u4ee3\u4ef7\u3002\n\n\u52a0\u5165\u4e00\u4e2a\u70b9\u76f8\u5f53\u4e8e\u4e00\u4e2a\u533a\u95f4\u52a0\u7684\u64cd\u4f5c\uff0c\u8be2\u95ee\u76f8\u5f53\u4e8e\u5168\u5c40 $\\max$ \u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u7531\u4e8e\u503c\u57df\u53ea\u6709 $10^6$\uff0c\u56e0\u6b64\u751a\u81f3\u4e0d\u7528\u79bb\u6563\u5316\u3002\n\n```cpp\nconst int N = 2e5 + 7, M = 1e6 + 1;\nconst ll inf = 1e18;\nint n, m, k;\nll a[M], b[M];\nvector<pi> p[M];\n\nstruct T {\n\tint l, r;\n\tll x, z;\n} t[M*5];\n\nvoid build(int p, int l, int r) {\n\tt[p].l = l, t[p].r = r;\n\tif (l == r) return t[p].x = -b[l], void();\n\tbuild(ls, l, md), build(rs, md + 1, r);\n\tt[p].x = max(t[ls].x, t[rs].x);\n}\n\nvoid spd(int p) {\n\tif (t[p].z) {\n\t\tt[ls].x += t[p].z;\n\t\tt[ls].z += t[p].z;\n\t\tt[rs].x += t[p].z;\n\t\tt[rs].z += t[p].z;\n\t\tt[p].z = 0;\n\t}\n}\n\nvoid add(int p, int l, int r, ll k) {\n\tif (t[p].l >= l && t[p].r <= r) return t[p].x += k, t[p].z += k, void();\n\tspd(p);\n\tif (l <= md) add(ls, l, r, k);\n\tif (r > md) add(rs, l, r, k);\n\tt[p].x = max(t[ls].x, t[rs].x);\n}\n\nint main() {\n\trd(n), rd(m), rd(k);\n\tfor (int i = 1; i < M; i++) a[i] = b[i] = inf;\n\tfor (int i = 1, x, y; i <= n; i++)\n\t\trd(x), rd(y), a[x] = min(a[x], 1ll * y);\n\tfor (int i = 1, x, y; i <= m; i++)\n\t\trd(x), rd(y), b[x] = min(b[x], 1ll * y);\n\tfor (int i = 1, x, y, z; i <= k; i++)\n\t\trd(x), rd(y), rd(z), p[x].pb(mp(y, z));\n\tbuild(1, 1, M - 1);\n\tll ans = -inf;\n\tfor (int i = 1; i < M; i++) {\n\t\tans = max(ans, t[1].x - a[i]);\n\t\tfor (pi o : p[i]) if (o.fi != M - 1) add(1, o.fi + 1, M, o.se);\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```",
        "postTime": 1583219548,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1320C \u3010World of Darkraft: Battle for Azathoth\u3011"
    },
    {
        "content": "\u6bd4\u8d5b\u5f53\u4e2d\u8c03\u4e0d\u51fa\u6765\u4ee3\u7801\uff0c\u7136\u540e\u4e0b\u4e00\u5929\u8fc7\u4e86\u51e0\u5206\u949f\u5c31\u8c03\u8fc7\u4e86\uff0c\u7279\u522b\u6124\u6012\n\n\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $A$ \u3002\u56fa\u5b9a\u4e70\u7684Defense\u503c $B_j$ \u3002\u90a3\u4e48 $A[i]$ \u8868\u793a\u53ef\u4ee5\u6536\u83b7\u7684\u91d1\u5e01\u5728\u4e70\u4e86Attack\u503c\u81f3\u5c11\u4e3a $i$ \u7684\u524d\u63d0\u4e0b\uff08\u53ea\u7b97\u4e0a\u4e70Attack\u7684\u4ef7\u683c\u548c\u6536\u83b7\u7684\u91d1\u5e01\uff09\u3002\u5982\u679c\u5f53\u524dDefense\u503c $B_j$ \u7684\u4ef7\u94b1\u662f $CB_j$\uff0c\u90a3\u5982\u679c\u56fa\u5b9a\u4e70\u8fd9\u4e2aDefense\uff0c\u603b\u5171\u6536\u83b7\u662f $max(A)-CB_j$\u3002\n\n\u5982\u679c\u56fa\u5b9a $B_j$ \u65f6\u5019\u4fdd\u8bc1 $B_j$ \u9012\u589e\uff0c\u90a3\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Lazy\u7ebf\u6bb5\u6811\u7ef4\u62a4 $A$\u3002\n\n\u9996\u5148\uff0c\u628a\u6240\u6709Attack\u6309\u7167 $A_j$ \u9012\u589e\u987a\u5e8f\u6392\u5e8f\uff0c\u5e76\u4e14\u5982\u679c\u6709\u91cd\u590d $A_j$ \u5fc5\u987b\u53ea\u4fdd\u7559 $CA_j$ \u5c0f\u7684\u3002\u7136\u540e\uff0c\u5728\u533a\u95f4 $[A_{j-1}+1, A_j]$ \u91cc\u9762\u6570\u7ec4\u4f4d\u7f6e\u5168\u90e8\u51cf\u53bb $CA_j$\u3002\n\n\u7136\u540e\uff0c\u628a\u602a\u7269\u6309\u7167 $Y_j$ \u9012\u589e\u987a\u5e8f\u6392\u5e8f\u3002\u8bbe\u4e00\u4e2a\u6307\u9488 $M$ \u8868\u793a\u6700\u5c0f $Y_j$ \u7684\u602a\u7269\u4f7f\u5f97\u8fd8\u6ca1\u6709\u653e\u5230\u7ebf\u6bb5\u6811\u91cc\u3002\n\n$B_j$ \u503c\u4ece\u5c0f\u5230\u5927\u904d\u5386\u3002\u904d\u5386\u5230\u7b2c $j$ \u4e2aDefense\u65f6\u5224\u65ad\u662f\u5426 $Y_M < B_j$\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5728\u533a\u95f4 $[X_M+1, 10^6]$ \u52a0\u4e0a $Z_M$\uff0c\u5e76\u4e14\u628a $M$ \u52a01\uff1b\u4e00\u76f4\u66f4\u65b0 $M$ \u548c\u7ebf\u6bb5\u6811\u5230\u6307\u9488\u8d85\u8fc7\u602a\u7269\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6216\u8005 $Y_M \\ge B_j$\u3002\n\n",
        "postTime": 1583126193,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1320C"
    },
    {
        "content": "### C.World of Darkraft: Battle for Azathoth\n\n\u663e\u7136\u6b66\u5668\u548c\u9632\u5177\u6700\u591a\u53ea\u4e70\u4e00\u4e2a\u3002\n\n\u6211\u4eec\u8003\u8651\uff0c\u679a\u4e3e\u4e00\u4e2a\u6761\u4ef6\uff0c\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u6761\u4ef6\u7528\u6570\u636e\u7ed3\u6784\u53bb\u7ef4\u62a4\u7b54\u6848\uff0c\u5c31\u53ef\u4ee5\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u5177\u4f53\u505a\u6cd5\uff1a\u9996\u5148\u6211\u4eec\u5bf9\u9632\u5177\u5efa\u7acb\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5176\u9632\u5fa1\u503c\u7684\u4f4d\u7f6e\uff0c\u8d4b\u4e88\u5176\u8d39\u7528\u7684\u76f8\u53cd\u6570\u7684\u6743\u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u6309\u627e\u653b\u51fb\u503c\u7684\u6743\u503c\u679a\u4e3e\u6b66\u5668\u548c\u602a\u517d\uff0c\u5047\u5982\u679a\u4e3e\u5230\u6b66\u5668\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\uff0c\u5047\u5982\u679a\u4e3e\u5230\u602a\u517d\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u7684\u9632\u5fa1\u503c\u7684\u4f4d\u7f6e\uff0c\u8d4b\u4e88\u5176\u6536\u76ca\u7684\u503c\u3002\n\n~~~c++\nI void pushup(int o){\n    mx[o]=max(mx[ls],s[ls]+mx[rs]);\n    s[o]=s[ls]+s[rs];\n}\nvoid change(int o,int l,int r,int p,int v){\n    if(l==r){mx[o]=max(mx[o],1ll*v);return;}\n    if(p<=mid)change(lson,p,v);else change(rson,p,v);\n    pushup(o);\n}\nvoid changev(int o,int l,int r,int p,int v){\n    if(l==r){s[o]+=v;return;}\n    if(p<=mid)changev(lson,p,v);else changev(rson,p,v);\n    pushup(o);\n}\nsigned main(){\n    memset(mx,233,sizeof(mx));\n    read(n,m,q);\n    FOR(i,1,n)read(x,y),vq[x].push_back(y);\n    FOR(i,1,m)read(x,y),change(1,0,maxn-1,x,-y);\n    FOR(i,1,q)read(x,y,z),vc[x].push_back(pii(y,z));\n    ll ans=-(1ll<<60);\n    FOR(i,0,maxn-1){\n        for(auto j:vq[i])ans=max(ans,mx[1]-j);\n        for(auto j:vc[i])changev(1,0,maxn-1,j.fi,j.se);\n    }\n    Write(ans);\n    return 0;\n}\n~~~\n\n",
        "postTime": 1584363029,
        "uid": 158869,
        "name": "\u76e7\u92c5",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1320C \u3010World of Darkraft: Battle for Azathoth\u3011"
    },
    {
        "content": "## Algorithm 1\n\n\u679a\u4e3e\u6b66\u5668 $i$\uff0c\u9632\u5177 $j$\uff0c\u518d\u904d\u5386\u6bcf\u4e00\u4e2a\u602a\u7269\uff0c\u7b97\u51fa\u603b\u5956\u52b1 $\\sum\\limits_{x<a_i, y<b_j} z$\uff0c\u8bb0\u4e3a $sum$\uff0c\u7528 $sum - ca_i - cb_j$ \u53bb\u66f4\u65b0\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(nmp)$\u3002\n\n## Algorithm 2\n\n\u80fd\u4e0d\u80fd\u5f04\u70b9\u5355\u8c03\u6027\u51fa\u6765\u5462\uff1f\n\n\u6211\u4eec\u5c06\u6b66\u5668\u6309\u7167 $a$ \u6392\u5e8f\uff0c\u602a\u7269\u6309\u7167 $x$ \u6392\u5e8f\u3002\n\n\u8fd9\u65f6\u5019\uff0c\u5982\u679c\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6b66\u5668\uff0c\u800c\u4e14 **\u53ea\u8003\u8651 $x$ \u90e8\u5206\u7684\u8bdd**\uff0c\u80fd\u6253\u7684\u602a\u7269\u4e5f\u662f\u4e00\u4e2a **\u524d\u7f00**\u3002\n\n\u4f46\u662f\u53ea\u6709\u6b66\u5668\u662f\u4e0d\u884c\u7684\uff0c\u8fd8\u8981\u9632\u5177\uff0c\u4f46\u8981\u662f\u518d\u679a\u4e3e\u4e0d\u53c8\u56de\u5230\u4e86 Algorithm 1 \u4e86\u5417\uff1f\u8fd9\u4e2a\u5355\u8c03\u6027\u4f3c\u4e4e\u4e00\u70b9\u90fd\u6ca1\u7528\u554a\uff1f\n\n\u6b63\u96be\u5219\u53cd\uff0c\u65e2\u7136\u6ca1\u6cd5\u5df2\u77e5 $b$ \u53bb\u679a\u4e3e\u602a\u7269\uff0c\u6211\u4eec\u7d22\u6027\u6309\u7167 $x$ \u5c5e\u6027\u4f9d\u6b21\u6dfb\u52a0\u602a\u7269\uff0c\u7528 $val_b$ \u6765\u8868\u793a\u5f53\u9632\u5177\u7684\u5a01\u529b\u4e3a $b$ \u65f6\uff0c\u6700\u9ad8\u7684\u5956\u52b1\u3002\n\n\u5982\u679c\u67d0\u4e00\u4e2a $b$ \u503c\u7684\u9632\u5177\u90fd\u6ca1\u51fa\u73b0\uff0c\u90a3\u4e48 $val_b$ \u81ea\u7136\u662f $-\\infty$\uff0c\u5426\u5219\uff0c$val_b$ \u7684 **\u521d\u59cb\u503c\u5e94\u5f53\u662f $-cb_b$**\uff0c\u8868\u793a\u4e00\u6b21\u8d2d\u4e70\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u602a\u7269\uff0c\u6839\u636e\u524d\u7f00\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u7c7b\u4f3c two-pointers \u7684\u52a0\u5165\uff0c\u602a\u7269\u7684 $x$ \u5c5e\u6027\u81ea\u7136\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u4e86\uff0c\u8fd9\u65f6\u5c06 $[y+1, \\infty]$ \u7684 $val_b$ \u52a0\u4e0a $z$\uff0c\u8868\u793a\u914d\u5408\u4e00\u4e2a\u5a01\u529b\u503c\u81f3\u5c11\u4e3a $y+1$ \u7684\u9632\u5177\uff0c\u5c31\u53ef\u4ee5\u809d\u6389\u8fd9\u4e2a\u602a\u517d\u4e86\u3002\n\n$\\max\\{val\\}$ \u5c31\u662f\u6700\u4f18\u65b9\u6848\uff0c\u5f53\u7136 $a$ \u7684\u4ee3\u4ef7\u662f\u6ca1\u6709\u8003\u8651\u8fdb\u53bb\u7684\uff0c\u6240\u4ee5\u7528 $\\max\\{val\\}-ca_i$ \u66f4\u65b0\u7b54\u6848\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u56e0\u4e3a $b \\le 10^6$\uff0c\u6240\u4ee5\u4fee\u6539/\u67e5\u8be2\u90fd\u8fdb\u884c\u5230 $10^6$ \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\text{ max}\\{b\\})$\u3002$p$ \u548c $n$ \u4e0d\u533a\u5206\u3002\n\n## Algorithm 3\n\n\u8fdb\u4e00\u6b65\u5206\u6790\u4e24\u4e2a\u64cd\u4f5c\u3002\n\n\u4f60\u5e72\u4e86\u5565\uff1f\u533a\u95f4\uff08\u540e\u7f00\uff09\u52a0\uff0c\u6574\u4f53 $\\max$\u3002\n\n\u4e00\u4e2a\u7ebf\u6bb5\u6811\u76f4\u63a5\u641e\u5b9a\uff01\n\n\u6240\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $val$ \u6570\u7ec4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O(n \\log \\text{max}\\{b\\})}$\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e6 + 5;\nstruct weapon\n{\n\tLL a, ca;\n\tbool operator < (const weapon &oth) const { return a < oth.a; }\n} wea[N];\nstruct monster\n{\n\tLL x, y, z;\n\tbool operator < (const monster &oth) const { return x < oth.x; }\n} mon[N];\nLL n, m, p, val[N], ans = LLONG_MIN; // ans \u4e00\u5b9a\u8981\u8d4b\u6781\u5c0f\u503c\uff01 \nstruct segment_tree // \u7ebf\u6bb5\u6811\u76f8\u5173 \n{\n#define ROOT 1, N - 5, 1\n#define LSON l, mid, rt << 1\n#define RSON mid + 1, r, rt << 1 | 1\n\tstruct node\n\t{\n\t\tLL maxx, col;\n\t} o[N << 2];\n\tinline void update(int rt)\n\t{\n\t\to[rt].maxx = max(o[rt << 1].maxx, o[rt << 1 | 1].maxx);\n\t}\n\tvoid build(int l, int r, int rt)\n\t{\n\t\to[rt].col = 0;\n\t\tif(l == r)\n\t\t{\n\t\t\to[rt].maxx = val[l];\n\t\t\treturn;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tbuild(LSON); build(RSON);\n\t\tupdate(rt);\n\t}\n\tinline void color(int rt, LL v)\n\t{\n\t\to[rt].col += v;\n\t\to[rt].maxx += v;\n\t}\n\tinline void pushcol(int rt)\n\t{\n\t\tif(!o[rt].col) return;\n\t\tcolor(rt << 1, o[rt].col);\n\t\tcolor(rt << 1 | 1, o[rt].col);\n\t\to[rt].col = 0;\n\t}\n\tvoid modify(int l, int r, int rt, int ml, int mr, LL v)\n\t{\n\t\tif(ml <= l && r <= mr) \n\t\t{\n\t\t\tcolor(rt, v);\n\t\t\treturn;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tpushcol(rt);\n\t\tif(ml <= mid) modify(LSON, ml, mr, v);\n\t\tif(mr > mid) modify(RSON, ml, mr, v);\n\t\tupdate(rt);\n\t}\n} sgt;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin >> n >> m >> p;\n\tfor(register int i = 1; i < N; i++) val[i] = LLONG_MIN;\n\tfor(register int i = 1; i <= n; i++) cin >> wea[i].a >> wea[i].ca;\n\tfor(register int i = 1; i <= m; i++)\n\t{\n\t\tLL b, cb;\n\t\tcin >> b >> cb;\n\t\tval[b] = max(val[b], -cb); // \u66f4\u65b0\u7ebf\u6bb5\u6811\u521d\u59cb\u53f6\u5b50\u8282\u70b9\u6743\u503c \n\t}\n\tsgt.build(ROOT);\n\tsort(wea + 1, wea + n + 1);\n\tfor(register int i = 1; i <= p; i++) cin >> mon[i].x >> mon[i].y >> mon[i].z;\n\tsort(mon + 1, mon + p + 1);\n\tint cur = 1;\n\tfor(register int i = 1; i <= n; i++)\n\t{\n\t\twhile(cur <= p && wea[i].a > mon[cur].x) // \u7c7b\u4f3c two-pointers \u8ba1\u7b97\u8d21\u732e \n\t\t{\n\t\t\tif(mon[cur].y != N - 5)\n\t\t\t\tsgt.modify(ROOT, mon[cur].y + 1, N - 5, mon[cur].z);\n\t\t\tcur++;\n\t\t}\n\t\tans = max(ans, sgt.o[1].maxx - wea[i].ca); // \u5168\u5c40 max\uff0c\u4e5f\u5c31\u662f\u6839\u8282\u70b9 \n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\n## Algorithm 4\n\n\u4ec0\u4e48\uff1f$10^6$ \u5e26 $\\log$ \u4e0d\u7a33\uff1f\n\n\u79bb\u6563\u5316\u89e3\u51b3\u4e00\u5207\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log m)$\u3002\u672c\u8d28\u4e0a\u5c31\u662f\u53bb\u6389\u4e86 $val = -\\infty$ \u7684\u60c5\u51b5\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u4f18\u5316\u662f\u5b8c\u5168\u4e0d\u5fc5\u8981\u7684\u3002",
        "postTime": 1583423006,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1320C \u3010World of Darkraft: Battle for Azathoth\u3011"
    },
    {
        "content": "\u5fc5\u987b\u4e70\u4e00\u4e2a\u6b66\u5668\uff0c\u4e70\u4e00\u4e2a\u9632\u5177\uff0c\u7136\u540e\u53bb\u6253\u602a\uff0c\u6c42\u6700\u5927\u6536\u76ca\u3002\n\n\u7531\u4e8e\u6b66\u5668\u7684\u653b\u51fb\u529b\u5fc5\u987b\u4e25\u683c\u5927\u4e8e\u602a\u7269\u7684\u9632\u5fa1\u529b\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u6ee1\u8db3\u6bcf\u4e2a\u6b66\u5668\u7684\u6761\u4ef6\uff0c\u7136\u540e\u53bb\u914d\u4e00\u4e2a\u6700\u4f18\u6536\u76ca\u7684\u9632\u5177\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6b66\u5668\u6848\u653b\u51fb\u529b\u6392\u5e8f\uff0c\u602a\u7269\u6309\u9632\u5fa1\u529b\u6392\u5e8f\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6b66\u5668\u65f6\u53ef\u4ee5\u53d1\u73b0\u4ed6\u4eec\u7684\u5927\u4e8e\u533a\u95f4\u662f\u5355\u8c03\u4e0a\u5347\u7684\u3002\n\n\u65e2\u7136\u5982\u6b64\uff0c\u90a3\u6211\u4eec\u4e0d\u5982\u679a\u4e3e\u6bcf\u4e00\u4e2a\u602a\u7269\uff0c\u7136\u540e\u52a8\u6001\u66f4\u65b0\u6bcf\u4e00\u6b3e\u9632\u5177\u7684\u6536\u76ca\uff0c\u627e\u5230\u9632\u5177\u7684\u6700\u5927\u6536\u76ca\u5373\u53ef\u3002\n\n\u4f46\u6211\u4eec\u600e\u4e48\u66f4\u65b0\u6bcf\u4e00\u6b3e\u9632\u5177\u7684\u6536\u76ca\u5462\uff1f\u6613\u77e5\uff0c\u602a\u7269\u653b\u51fb\u529b\u5fc5\u987b\u5c0f\u4e8e\u9632\u5177\u9632\u5fa1\u529b\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u90a3\u4e9b\u9632\u5fa1\u529b\u6bd4\u602a\u7269\u653b\u51fb\u529b\u5927\u7684\u53bb\u66f4\u65b0\uff0c\u5982\u679c\u6211\u4eec\u628a\u9632\u5177\u6309\u9632\u5fa1\u529b\u5927\u5c0f\u6392\u5e8f\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u4fee\u6539\u95ee\u9898\uff0c\u53f3\u7aef\u70b9\u5df2\u7ecf\u786e\u5b9a\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u786e\u5b9a\u505a\u7aef\u70b9\u5462\uff1f\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u5c31\u884c\u4e86\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 2e5 + 5;\nint n , m , p , t[MAXN << 2] , tag[MAXN << 2];\nstruct node2 {\n\tint x , y , z;\n}mon[MAXN];\nstruct node {\n\tint val , cost;\n\tnode () {}\n\tnode (int x) {\n\t\tval = x;\n\t}\n\tbool operator < (const node x) const {\n\t\treturn val < x.val;\n\t}\n}a[MAXN] , b[MAXN];\n\nbool cmp(node x , node y) {\n\tif(x.val == y.val) return x.cost < y.cost;\n\treturn x.val < y.val;\n}\n\nbool cmp1(node2 x , node2 y) {\n\treturn x.x < y.x;\n}\nvoid push_down(int now) {\n\tif(tag[now]) {\n\t\tt[now << 1] += tag[now];\n\t\tt[now << 1 | 1] += tag[now];\n\t\ttag[now << 1] += tag[now];\n\t\ttag[now << 1 | 1] += tag[now];\n\t\ttag[now] = 0;\n\t}\n}\nvoid build(int l , int r , int now) {\n\tif(l == r) {\n\t\tt[now] = -b[l].cost;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(l , mid , now << 1);\n\tbuild(mid + 1 , r , now << 1 | 1);\n\tt[now] = max(t[now << 1] , t[now << 1 | 1]);\n}\nvoid update(int l , int r , int now , int x , int y , int z) {\n\tif(x > y) return;\n\tif(l >= x && r <= y) {\n\t\tt[now] += z;\n\t\ttag[now] += z;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tpush_down(now);\n\tif(x <= mid) update(l , mid , now << 1 , x , y , z);\n\tif(y > mid) update(mid + 1 , r , now << 1 | 1 , x , y , z);\n\tt[now] = max(t[now << 1] , t[now << 1 | 1]);\n}\nint main() {\n\tscanf(\"%d %d %d\" , &n , &m , &p);\n\tfor (int i = 1; i <= n; ++i) scanf(\"%d %d\" , &a[i].val , &a[i].cost);\n\tsort(a + 1 , a + 1 + n , cmp);\n\tfor (int i = 1; i <= m; ++i) scanf(\"%d %d\" , &b[i].val , &b[i].cost);\n\tsort(b + 1 , b + 1 + m , cmp);\n\tbuild(1 , m , 1);\n\tfor (int i = 1; i <= p; ++i) scanf(\"%d %d %d\" , &mon[i].x , &mon[i].y , &mon[i].z);\n\tsort(mon + 1 , mon + 1 + p , cmp1);\n\tint l = 1 , ans = -2e9;\n\tfor (int i = 1; i <= p; ++i) {\n\t\tif(mon[i].x < a[l].val) {\n\t\t\tint x = upper_bound(b + 1 , b + 1 + m , node(mon[i].y)) - b;\n\t\t\tupdate(1 , m , 1 , x , m , mon[i].z);\n\t\t}\n\t\telse {\n\t\t\tans = max(ans , t[1] - a[l].cost);\n\t\t\tl ++;\n\t\t\tif(l > n) break;\n\t\t\ti --;\n\t\t}\n\t}\n\tfor (int i = l; i <= n; ++i) ans = max(ans , t[1] - a[i].cost);\n\tprintf(\"%d\" , ans);\n\treturn 0;\n}\n```",
        "postTime": 1583214637,
        "uid": 171554,
        "name": "Reanap",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1320C \u3010World of Darkraft: Battle for Azathoth\u3011"
    }
]