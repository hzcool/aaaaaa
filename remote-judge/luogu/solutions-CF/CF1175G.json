[
    {
        "content": "\u5355\u8c03\u6808 + \u53ef\u6301\u4e45\u5316\u674e\u8d85\u6811 + \u51f8\u5305\u542f\u53d1\u5f0f\u5408\u5e76\n\n$O(n^2k)$ \u7684\u66b4\u529b dp \u5f88\u7b80\u5355\uff0c\u4ee4 $f_{i,k}$ \u8868\u793a\u5c06\u524d $i$ \u4e2a\u6570\u5206\u6210 $k$ \u6bb5\u7684\u6700\u5c0f\u503c\uff0c\u8f6c\u79fb\u65b9\u7a0b\u662f\n\n$$f_{i,k}=\\min_{j=k-1}^{i-1}f_{j,k-1}+(i-j)\\times\\max_{l=j+1}^i a_l$$\n\n\u8003\u8651\u4f18\u5316\u3002 $\\max$ \u4e0d\u65b9\u4fbf\u5904\u7406\uff0c\u6ce8\u610f\u5230\u5e8f\u5217\u53ef\u4ee5\u5212\u5206\u4e3a\u82e5\u5e72\u6bb5\uff0c\u5176\u4e2d\u6bcf\u4e00\u6bb5\u7684 $\\max$ \u503c\u90fd\u76f8\u7b49\u3002\u8fd9\u90e8\u5206\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u3002\n\n\u5728\u6bcf\u4e00\u6bb5\u5185\u90e8\uff0c\u9700\u8981\u6c42\u51fa $f_{j,k-1}-j\\times\\max$ \u7684\u6700\u5c0f\u503c\u3002\u8fd9\u663e\u7136\u53ef\u4ee5\u7528\u659c\u7387\u4f18\u5316\u3002\u6240\u6c42\u5373\u4e3a\u7ecf\u8fc7\u70b9 $(j,f_{j,k-1})$ \u4e14\u659c\u7387\u4e3a $\\max$ \u7684\u76f4\u7ebf\u5728 $y$ \u8f74\u622a\u8ddd\u7684\u6700\u5c0f\u503c\u3002\u51f8\u5305\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u5411\u5355\u8c03\u6808\u52a0\u5165\u4e00\u4e2a\u503c\u65f6\u53ef\u80fd\u4f1a\u5c06\u82e5\u5e72\u6bb5\u5408\u5e76\u4e3a\u4e00\u6bb5\uff0c\u56e0\u6b64\u9700\u8981\u5408\u5e76\u51f8\u5305\u3002\u53ef\u4ee5\u5c06\u4e00\u4e2a\u51f8\u5305\u7684\u70b9\u76f4\u63a5\u63d2\u5165\u53e6\u4e00\u4e2a\u51f8\u5305\u3002\u51f8\u5305\u4e0a\u70b9\u7684\u6a2a\u5750\u6807\u5df2\u7ecf\u6709\u5e8f\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728 $O(n)$ \u65f6\u95f4\u5185\u5408\u5e76\u4e24\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684\u51f8\u5305\u3002\u4e3a\u4e86\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8003\u8651\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u5c06\u5c0f\u51f8\u5305\u7684\u70b9\u63d2\u5165\u5927\u51f8\u5305\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$ \u3002\n\n\u4ee4 $k=\\max$ \uff0c $b=f_{j,k-1}-j\\times\\max$ \uff0c\u5219 $f_{i,k}$ \u5373\u4e3a\u6bcf\u4e00\u6bb5\u7684\u76f4\u7ebf $y=kx+b$ \u5728 $x=i$ \u65f6\u7eb5\u5750\u6807\u7684\u6700\u5c0f\u503c\u3002\u53ef\u4ee5\u7528\u674e\u8d85\u6811\u7ef4\u62a4\u3002\u56e0\u4e3a\u63d2\u5165\u7684\u662f\u76f4\u7ebf\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a $(n\\log n)$ \u3002\u6ce8\u610f\u5230\u5408\u5e76\u6bb5\u7684\u65f6\u5019\u4f1a\u5220\u9664\u6700\u65b0\u52a0\u5165\u7684\u51e0\u6761\u76f4\u7ebf\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u8bb0\u5f55\u64cd\u4f5c\uff0c\u6216\u8005\u53ef\u6301\u4e45\u5316\u3002\u4ee3\u7801\u4e2d\u91c7\u7528\u53ef\u6301\u4e45\u5316\u3002\n\n\u5c06\u4ee5\u4e0a\u8fc7\u7a0b\u91cd\u590d $k$ \u6b21\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(nk\\log n)$ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e4+3,M=N<<5;\nint u[N],v[N],*f=u,*g=v,a[N],rt[N],id,K[N],b[N],lc[M],rc[M],s[M],st[N];\n#define F(x,t) (b[t]+a[t]*(x))//\u8ba1\u7b97\u7eb5\u5750\u6807\n#define cp(p) (lc[++id]=lc[p],rc[id]=rc[p],s[id]=s[p],id)//\u590d\u5236\u8282\u70b9\nvoid upd(int k,int l,int r,int t){\n\tif(l==r){if(F(l,t)<F(l,s[k]))s[k]=t;return;}\n\tint m=l+r>>1;\n\tif(F(m,t)<F(m,s[k]))swap(t,s[k]);\n\tF(l,t)<F(l,s[k])?upd(lc[k]=cp(lc[k]),l,m,t):upd(rc[k]=cp(rc[k]),m+1,r,t);\n}//\u674e\u8d85\u6811\u63d2\u5165\nint qry(int k,int l,int r,int d){\n\tif(l==r||!k)return F(d,s[k]);\n\tint m=l+r>>1;\n\treturn min(F(d,s[k]),d<=m?qry(lc[k],l,m,d):qry(rc[k],m+1,r,d));\n}//\u674e\u8d85\u6811\u67e5\u8be2\nstruct H{\n\tdeque<int>d;\n\tvoid mg(H&h){\n\t\tint t=h.d.size()-1;\n\t\tif(h.d.size()>d.size()){\n\t\t\tfor(int x:d){\n\t\t\t\twhile(t&&(g[x]-g[h.d[t]])*1ll*(h.d[t]-h.d[t-1])<=(g[h.d[t]]-g[h.d[t-1]])*1ll*(x-h.d[t]))--t,h.d.pop_back();\n\t\t\t\t++t,h.d.push_back(x);\n\t\t\t}\n\t\t\tswap(h.d,d);\n\t\t}else{\n\t\t\tfor(int x;~t;--t){\n\t\t\t\tx=h.d[t];\n\t\t\t\twhile(d.size()>1&&(g[d[0]]-g[x])*1ll*(d[1]-d[0])>=(g[d[1]]-g[d[0]])*1ll*(d[0]-x))d.pop_front();\n\t\t\t\td.push_front(x);\n\t\t\t}\n\t\t}\n\t}//\u51f8\u5305\u5408\u5e76\n\tint qry(int k){\n\t\tint l=1,r=d.size()-1,m;\n\t\twhile(l<=r)if(m=l+r>>1,g[d[m]]-g[d[m-1]]<k*1ll*(d[m]-d[m-1]))l=m+1;else r=m-1;\n\t\treturn g[d[l-1]]-(d[l-1]-1)*k;\n\t}//\u4e8c\u5206\n}h[N];\nint main(){\n\tint i,j,k,t,n,m;\n\tscanf(\"%d%d\",&n,&m),b[0]=2e9;\n\tfor(i=1,j=0;i<=n;++i)scanf(\"%d\",a+i),j=max(j,a[i]),f[i+1]=i*j;//\u9884\u5904\u7406k=1\u7684dp\u503c\n\tfor(i=2;i<=m;++i){\n\t\tswap(f,g),id=t=0;\n\t\tfor(j=i;j<=n;++j){\n\t\t\th[j].d.resize(1),h[j].d[0]=j;\n\t\t\twhile(t&&a[st[t]]<a[j])h[j].mg(h[st[t--]]);//\u5355\u8c03\u6808\n\t\t\trt[j]=cp(rt[st[t]]),st[++t]=j,b[j]=h[j].qry(a[j]),upd(id,1,n,j),f[j+1]=qry(rt[j],1,n,j);\n\t\t}\n\t}\n\tprintf(\"%d\",f[n+1]);\n\treturn 0;\n}\n```",
        "postTime": 1596186193,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1175G \u3010Yet Another Partiton Problem\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5728\u6211\u773c\u91cc\u5c5e\u4e8e\u8d85\u7ea7\u96be\u9898\uff0c\u6211\u89c1\u8fc7\u7684\u5e8f\u5217\u659c\u7387\u4f18\u5316\u96be\u5ea6\u6700\u9ad8\u7684\u9898\u4e86\u3002\n\npb\u5927\u4f6c\u8bb2\u5f97\u5f88\u597d\uff0c\u53ef\u60dc\u5bf9\u6211\u8fd9\u4e2a\u6c34\u5e73\u7684\u4eba\u6765\u8bf4\uff0c\u53ef\u80fd\u8fd8\u4e0d\u591f\u7ec6\uff0c\u6211\u8fd8\u9700\u8981\u5927\u91cf\u601d\u8003\u6765\u7406\u89e3\u3002\n\n\u8bfb\u61c2\u8fd9\u7bc7\u9898\u89e3[\u9700\u8981\u4f1a\u659c\u7387\u4f18\u5316](https://www.luogu.com.cn/problem/P3195), [\u9700\u8981\u4f1a\u674e\u8d85\u7ebf\u6bb5\u6811](https://www.luogu.com.cn/problem/P4097)\uff0c[\u9700\u8981\u4f1a\u542f\u53d1\u5f0f\u5408\u5e76](https://www.luogu.com.cn/problem/P3201)\u3002\n\n\u5982\u679c\u4f60\u6ca1\u6709\u60f3\u5230\u5982\u4f55O\uff08$n^2k$\uff09\u7684\u89e3\u6cd5\uff0c\u90a3\u4e48\u4f60\u7684\u6c34\u5e73\u5e76\u4e0d\u80fd\u505a\u8fd9\u4e2a\u9898,\u6240\u4ee5\u6211\u5c31\u5f53\u77e5\u9053\u90fd\u8fd9\u4e2a\u89e3\u6cd5\u8bb2\u4e86\u3002\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6ca1\u6709\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u5982\u679c\u4f60\u80fd\u8bc1\u660e\u6709\uff0c\u90a3\u5c31\u662f\u8bc1\u660e\u9519\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8fd9\u4e2ak\uff0c\u56e0\u4e3a\u53ef\u4ee5\u628ak\u4ece1\u679a\u4e3e\u5230n,\u6bcf\u4e00\u5c42\u90fd\u7531\u4e0a\u4e00\u5c42\u8f6c\u79fb,\u8fd9\u6837\u5b50\u5728\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u5c31\u4e0ek\u65e0\u5173\u4e86\uff0c\u5728\u4e0b\u6587\u4e00\u6982\u7528now\u8868\u793a\u8f6c\u79fb\u5230\u4e86\u7b2c\u51e0\u5c42\u3002\n\n\u6211\u4eec\u770b\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6709\u70b9\u50cf\u659c\u7387\u4f18\u5316\uff0c\u4e0d\u8fc7\u9ebb\u70e6\u7684\u5730\u65b9\uff0c\u5728\u4e8e\u8fd9\u4e2amax\u3002\u8fd9\u4e2amax\u4f7f\u5f97\uff0c\u6ca1\u6cd5\u7b80\u5355\u5730\u7ef4\u62a4\u4e00\u4e2a\u51f8\u5305\uff0c\u56e0\u4e3a\u8fd9\u4e2amax\u662f\u5728\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u4e0a\u659c\u7387\u4f18\u5316\uff0c\u4e5f\u5e76\u4e0d\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u5c31\u6709\u4e00\u4e2a\u975e\u5e38$naive$\u7684\u60f3\u6cd5\uff0c\u5982\u679cmax\u662f\u4e00\u4e2a\u5b9a\u503c\uff0c\u5c31\u597d\u4e86\u3002\n\n\u5176\u5b9e\u6211\u4eec\u8fd8\u771f\u7684\u53ef\u4ee5\u56fa\u5b9a\u8fd9\u4e2amax\uff0c\u6211\u4eec\u6bcf\u6b21\u53d6\u5e8f\u5217\u6700\u5927\u503c\u70b9\u8fdb\u884c\u5206\u6cbb\uff0c\u8fd9\u6837\u5b50\u5de6\u533a\u95f4\u5bf9\u53f3\u533a\u95f4\u7684\u8d21\u732e\u5c31\u53ef\u4ee5\u659c\u7387\u4f18\u5316\u7684\u53bb\u6c42\u4e86\uff0c\u8fd9\u4e2a\u5728\u6570\u636e\u968f\u673a\u7684\u60c5\u51b5\u4e0b\u6216\u8bb8\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u6700\u5927\u503c\u70b9\u5206\u5272\u4e00\u4e2a\u5e8f\u5217\u4f1a\u5f88\u4e0d\u5747\u5300\uff0c\u5bfc\u81f4\u590d\u6742\u5ea6\u98d9\u5347\u81f3O\uff08$n^2klogn$\uff09,\u76f8\u5f53\u4e8e\u4e00\u4e2a\u8d1f\u4f18\u5316\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u4e00\u4e2a\u60f3\u6cd5\u52a0\u4ee5\u6539\u53d8\uff0c\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u627e\u5230\u8fd9\u4e2a\u6700\u5927\u503c\u70b9x\uff0c\u5b9a\u4e49\n\n$F_{now}$(x) = $\\min\\limits_{1\\le j<i}{dp[j][now - 1] - j * a[pos]}$\u3002\n\n\u6c42$F_{now}$(x)\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u659c\u7387\u4f18\u5316\u6765\u505a\uff0c\u800c\u4e14\u5f88\u663e\u7136\uff0c\u8fd9\u4e2a\u659c\u7387\u4f18\u5316\u6709\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u76f4\u63a5$deque$\u7ef4\u62a4\u5373\u53ef\u3002\u56e0\u4e3a\u8fc7\u7a0b\u4e2d\u7528\u4e86\u5206\u6cbb\uff0c\u8fd9\u6d89\u53ca\u5230\u4e86\u5408\u5e76\u51f8\u5305\u7684\u95ee\u9898\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\u8981\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5229\u7528\u8fd9\u4e2aF\u51fd\u6570\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u7684dp\u503c\uff0c\n\n$dp[i][now]$ = $\\min\\limits_{1\\le j<i}{F_{now}(j) -  i * a[pos]}$,  \n\n\u4e0d\u8fc7\u6bcf\u4e2a$F(x)$\u53ea\u80fd\u5bf9\u4ecex\u5230x\u540e\u9762\u7b2c\u4e00\u4e2a\u5927\u4e8ex\u7684\u4f4d\u7f6e\u4e4b\u95f4\u7684\u533a\u95f4\u505a\u8d21\u732e, \u518d\u52a0\u4e0a\u8fd9\u4e9b\u51fd\u6570\u90fd\u662f\u5173\u4e8e$i$\u7684\u4e00\u6b21\u51fd\u6570,\u4e14\u662f\u5b9a\u4e49\u57df\u5728\u6574\u6570\u57df\u4e0a\u7684\u4e00\u6b21\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\n\u590d\u6742\u5ea6\u4e3b\u8981\u51fa\u73b0\u5728\u674e\u8d85\u7ebf\u6bb5\u6811\u4e0a\u4e86\uff0c\u4f17\u6240\u5468\u77e5\u674e\u8d85\u7ebf\u6bb5\u6811\u5e38\u6570\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u53ef\u4ee5\u8fc7\uff0c\u590d\u6742\u5ea6O($Nklog^2n$)\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ls x << 1\n#define rs x << 1 | 1\n#define int long long \n#define len (y - x + 1)\n#define mid (l + r >> 1) \n#define maxn 30005\n#define maxt 120005\n#define For(i, j, n) for(register int i = j ; i <= n ; ++i)\nint k, n, now, top;\nint a[maxn], lg[maxn], stk[maxn], vis[maxt], f[maxn][22], dp[105][maxn];\n//dp\u4e24\u7ef4\u8fd9\u4e48\u5199\uff0c\u6839\u636e\u5c40\u90e8\u6027\u539f\u7406\u53ef\u4ee5\u4f18\u5316\u5e38\u6570\nstruct Line{\n\tint k, b;\n\tLine(int x = 0, int y = 0){ k = x, b =  y; } \n}c[maxt];\nstruct Point{\n\tint x,  y;\n\tPoint(int xx = 0, int yy = 0){ x = xx, y = yy; }\n};\ndeque<Point>tmp[maxn]; \n//ST\u8868\u6c42\u533a\u95f4\u6700\u503c\uff0c\u6bd4\u8f83\u65b9\u4fbf\ninline int cmp(int x, int y){ return a[x] > a[y] ? x : y;}\ninline void buildST(){\n\tFor(i, 1, 20) For(j, 1, n - (1 << i) + 1) f[j][i] = cmp(f[j][i - 1], f[j + (1 << i - 1)][i - 1]);\n\tFor(i, 2, n) lg[i] = lg[i >> 1] + 1;\n}\ninline int qmax(int x, int y){ return cmp(f[x][lg[len]], f[y - (1 << lg[len]) + 1][lg[len]]); }\n//\u674e\u8d85\u7ebf\u6bb5\u6811\ninline void build(int x, int l, int r){\n\tvis[x] = 0, c[x] = Line(0, 0);\n\tif(l == r) return ;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n}\ninline void add(int x, int l, int r, Line y){\n\tif(!vis[x]) return vis[x] = 1, c[x] = y, void();\n\tint l1 = y.k * l + y.b, r1 = y.k * r + y.b, l2 = c[x].k * l + c[x].b, r2 = c[x].k * r + c[x].b;\n\tif(l1 >= l2 && r1 >= r2) return void();\n\tif(l1 <= l2 && r1 <= r2) return c[x] = y, void();\n\tdouble pos = (y.b - c[x].b) / (c[x].k - y.k);\n\tif(pos <= mid){\n\t\tif(l1 > l2) add(ls, l, mid, c[x]), c[x] = y;\n\t\telse add(ls, l, mid, y);\n\t}\n\telse{\n\t\tif(l1 > l2) add(rs, mid + 1, r, y);\n\t\telse add(rs, mid + 1, r, c[x]), c[x] = y;\n\t}\n}\ninline void insert(int x, int l, int r, int ql, int qr, Line y){\n\tif(ql <= l && r <= qr) return add(x, l, r, y); \n\tif(ql <= mid) insert(ls, l, mid, ql, qr, y);\n\tif(qr > mid) insert(rs, mid + 1, r, ql, qr, y);\n}\ninline int query(int x, int l, int r, int pos){\n\tint res = vis[x] ? c[x].k * pos + c[x].b : 1e18;\n\tif(l == r) return res;\n\tres = pos <= mid ? min(res, query(ls, l, mid, pos)) : min(res, query(rs, mid + 1, r, pos));\n\treturn res;\n}\n//\u6709\u51b3\u7b56\u5355\u8c03\u6027\u7684\u659c\u7387\u4f18\u5316\u7684\u67e5\u8be2\ninline double K(Point a, Point b){ return 1.0 * (b.y - a.y) / (b.x - a.x); } \ninline Line calc(int x, int y){\n\tif(!tmp[x].size()) return Line(0, 1e9);\n\twhile(tmp[x].size() > 1 && K(tmp[x][0], tmp[x][1]) <= y) tmp[x].pop_front();\n\treturn Line(y, tmp[x][0].y - tmp[x][0].x * y);\n}\n//\u5206\u522b\u4ece\u540e\u4ece\u524d\u5f80\u51f8\u5305\u91cc\u63d2\u5143\u7d20\ninline void pushback(int x, Point y){\n\twhile(tmp[x].size() > 1){\n\t\tint n = tmp[x].size();\n\t\tPoint a = tmp[x][n - 2], b = tmp[x][n - 1];\n\t\tif(K(a, y) <= K(a, b)) tmp[x].pop_back();\n\t\telse break;\n\t}\n\ttmp[x].push_back(y);\n}\ninline void pushfront(int x, Point y){\n\twhile(tmp[x].size() > 1){\n\t\tPoint a = tmp[x][0], b = tmp[x][1];\n\t\tif(K(y, b) <= K(y, a)) tmp[x].pop_front();\n\t\telse break;\n\t}\n\ttmp[x].push_front(y);\n}\n\ninline int solve(int l, int r){\n\tif(l == r){\n\t\tint id = stk[top--];//\u7ed9\u6bcf\u4e2a\u51f8\u5305\u7f16\u4e2a\u53f7\n\t\ttmp[id].push_back(Point(l, dp[now - 1][l]));\n\t\treturn id; \n\t}\n\tint pos = qmax(l + 1, r);\n\tint L = solve(l, pos - 1);\n\tLine S = calc(L, a[pos]);\n\tinsert(1, 1, n, pos, r, S), dp[now][pos] = query(1, 1, n, pos);\n\tint R = solve(pos, r);\n\tif(tmp[R].size() <= tmp[L].size()){\n\t\twhile(tmp[R].size()) pushback(L, tmp[R][0]), tmp[R].pop_front();\n\t\treturn stk[++top] = R, L;//\u56de\u6536\u51f8\u5305\u7684\u6807\u53f7\uff0c\u4fbf\u4e8e\u53cd\u590d\u5229\u7528\uff0c\u4e0b\u540c\n\t}\n\telse{\n\t\twhile(tmp[L].size()) pushfront(R, tmp[L][(int)tmp[L].size() - 1]), tmp[L].pop_back();\n\t\treturn stk[++top] = L, R;\n\t}\n}\n\nsigned main(){\n\tscanf(\"%lld %lld\", &n, &k);\n\tFor(i, 1, n) scanf(\"%lld\", &a[i]), stk[i] = f[i][0] = i;//\u5148\u505a\u51fan\u4e2a\u6807\u53f7\n\tbuildST(), now = 2, top = n;\n\tFor(i, 1, n) dp[1][i] = i * a[qmax(1, i)];\n\twhile(now <= k) build(1, 1, n), solve(now - 1, n), ++now;\n\tprintf(\"%lld\\n\", dp[k][n]);\n\treturn 0;\n}",
        "postTime": 1586249391,
        "uid": 163980,
        "name": "\u884c\u541f\u5578\u4e5d\u5dde",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1175G \u3010Yet Another Partiton Problem\u3011"
    },
    {
        "content": "[$$\\large \\color{purple}My\\; Blog$$](https://www.cnblogs.com/p-b-p-b/p/10991232.html)\n\n## \u601d\u8def\n\n\u53d1\u73b0\u4e0d\u4e86\u4ec0\u4e48\u6027\u8d28\uff0c\u90a3\u5c31\u76f4\u63a5\u4e0aDP\u5427\u3002\u6ce8\u610f\u5230DP\u53ef\u4ee5\u5206\u5c42\uff0c\u6240\u4ee5\u8bbe$dp_i$\u8868\u793a\u5f53\u524d\u5c42\uff0c\u5206\u5272\u524d$i$\u5757\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u800c$dp'$\u4e3a\u4e0a\u4e00\u5c42\uff0c\u90a3\u4e48\u6709\n$$\ndp_i=\\min\\{dp'_j+(i-j)\\times \\max(a[j+1,i])\\}\n$$\n\u663e\u7136\u662f\u4e2a\u659c\u7387\u4f18\u5316\u7684\u5f0f\u5b50\uff0c\u90a3\u4e48\u6309\u7167\u5957\u8def\u62c6\u5f00\uff0c\u6709\n$$\ndp_i=\\min\\{dp'_j-j\\times \\max\\}+i\\times \\max\n$$\n\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff1a$\\max$\u600e\u4e48\u529e\uff1f\n\n\u9898\u89e3\u7528\u4e86\u5355\u8c03\u6808\uff0c\u4f46\u6211\u4e0d\u592a\u4f1a\uff0c\u6240\u4ee5\u7528\u4e86\u53e6\u4e00\u79cd\u7c7b\u4f3c\u5206\u6cbb\u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u628a\u5f53\u524d\u5e8f\u5217\u4e2d\u6700\u5927\u503c\u7684\u4f4d\u7f6e$pos$\u6293\u51fa\u6765\uff0c\u7136\u540e\u8ba1\u7b97$[l,pos-1]$\u5bf9$[pos,r]$\u7684\u8d21\u732e\uff0c\u90a3\u4e48$\\max$\u5c31\u56fa\u5b9a\u4e86\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5148\u505a\u5de6\u8fb9\uff0c\u8fd4\u56de\u4e00\u4e2a\u51f8\u5305\uff0c\u7136\u540e\u7528$k=\\max$\u7684\u76f4\u7ebf\u53bb\u5207\u8fd9\u4e2a\u51f8\u5305\uff0c\u5f97\u5230\u6700\u4f18\u76f4\u7ebf$y=kx+b$\u3002\n\n\u7136\u800c\uff0c\u7531\u4e8e\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u4e0d\u4e00\u5b9a\u662f\u4e2d\u95f4\uff0c\u6240\u4ee5\u4e0d\u80fd\u626b\u4e00\u904d\u53f3\u8fb9\u66f4\u65b0\u7b54\u6848\uff0c\u800c\u662f\u8981\u628a\u8fd9\u6761\u76f4\u7ebf\u52a0\u5165\u5230\u53f3\u8fb9\u7684\u533a\u95f4\u91cc\u3002\n\n\u4e8e\u662f\u53c8\u8981\u653e\u4e00\u4e2a\u674e\u8d85\u7ebf\u6bb5\u6811\u4e0a\u6765\u7ef4\u62a4\n\n\u603b\u7ed3\u4e00\u4e0b\u73b0\u5728\u8981\u505a\u7684\u4e8b\uff1a\u505a$[l,r]$\u65f6\uff0c\u5148\u9012\u5f52$[l,pos-1]$\uff0c\u7136\u540e\u7528$[l,pos-1]$\u66f4\u65b0$[pos,r]$\u7684DP\u503c\uff0c\u7136\u540e\u9012\u5f52$[pos,r]$\uff0c\u6700\u540e\u8fd4\u56de$(i,dp'_i)$\u7ec4\u6210\u7684\u51f8\u5305\u3002\n\n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4ef6\u4e8b\uff1a\u5408\u5e76\u5de6\u53f3\u51f8\u5305\u65f6\u8981\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u652f\u6301\u524d\u540e\u52a0\u5165\u70b9\uff0c\u6240\u4ee5\u8981\u7528\u53cc\u7aef\u961f\u5217\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u4e0a\u8fd8\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff1a$pos$\u7684dp\u503c\u505a\u5b8c\u5de6\u8fb9\u4e4b\u540e\u5c31\u53ef\u4ee5\u7b97\u51fa\u6765\u4e86\uff0c\u4f46$dp'_{pos}$\u5bf9$[pos+1,r]$\u7684\u8d21\u732e\u8fd8\u662f\u672a\u77e5\u7684\uff0c\u6240\u4ee5$solve(l,r)$\u8868\u793a\u7528$[l,r-1]$\u66f4\u65b0$[l+1,r]$\u7684dp\u503c\uff0c\u5e76\u8fd4\u56de$[l,r]$\u7ec4\u6210\u7684\u51f8\u5305\u3002\n\n\u518d\u6ca1\u770b\u61c2\u7684\u8bdd\u5c31\u770b\u4ee3\u7801\u5427\uff0c\u4e0d\u8fc7\u4ee3\u7801\u6709\u70b9\u957f\u2026\u2026\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nclock_t t=clock();\nnamespace my_std{\n\tusing namespace std;\n\t#define pii pair<int,int>\n\t#define fir first\n\t#define sec second\n\t#define MP make_pair\n\t#define rep(i,x,y) for (int i=(x);i<=(y);i++)\n\t#define drep(i,x,y) for (int i=(x);i>=(y);i--)\n\t#define go(x) for (int i=head[x];i;i=edge[i].nxt)\n\t#define templ template<typename T>\n\t#define sz 20202\n\ttypedef long long ll;\n\ttypedef double db;\n\tmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\ttempl inline T rnd(T l,T r) {return uniform_int_distribution<T>(l,r)(rng);}\n\ttempl inline bool chkmax(T &x,T y){return x<y?x=y,1:0;}\n\ttempl inline bool chkmin(T &x,T y){return x>y?x=y,1:0;}\n\ttempl inline void read(T& t)\n\t{\n\t\tt=0;char f=0,ch=getchar();double d=0.1;\n\t\twhile(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n\t\twhile(ch<='9'&&ch>='0') t=t*10+ch-48,ch=getchar();\n\t\tif(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n\t\tt=(f?-t:t);\n\t}\n\ttemplate<typename T,typename... Args>inline void read(T& t,Args&... args){read(t); read(args...);}\n\tchar __sr[1<<21],__z[20];int __C=-1,__zz=0;\n\tinline void Ot(){fwrite(__sr,1,__C+1,stdout),__C=-1;}\n\tinline void print(register int x)\n\t{\n\t\tif(__C>1<<20)Ot();if(x<0)__sr[++__C]='-',x=-x;\n\t\twhile(__z[++__zz]=x%10+48,x/=10);\n\t\twhile(__sr[++__C]=__z[__zz],--__zz);__sr[++__C]='\\n';\n\t}\n\tvoid file()\n\t{\n\t\t#ifdef NTFOrz\n\t\tfreopen(\"a.in\",\"r\",stdin);\n\t\t#endif\n\t}\n\tinline void chktime()\n\t{\n\t\t#ifndef ONLINE_JUDGE\n\t\tcout<<(clock()-t)/1000.0<<'\\n';\n\t\t#endif\n\t}\n\t#ifdef mod\n\tll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x%mod) if (y&1) ret=ret*x%mod;return ret;}\n\tll inv(ll x){return ksm(x,mod-2);}\n\t#else\n\tll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x) if (y&1) ret=ret*x;return ret;}\n\t#endif\n//\tinline ll mul(ll a,ll b){ll d=(ll)(a*(double)b/mod+0.5);ll ret=a*b-d*mod;if (ret<0) ret+=mod;return ret;}\n}\nusing namespace my_std;\n\nint n,K;\nint a[sz];\n\nint ST[sz][25],lg2[sz];\n#define cmp(x,y) (a[x]>a[y]?x:y)\nvoid init()\n{\n\trep(i,1,n) ST[i][0]=i;\n\trep(j,1,20) rep(i,1,n-(1<<j)+1) ST[i][j]=cmp(ST[i][j-1],ST[i+(1<<(j-1))][j-1]);\n\trep(i,2,n) lg2[i]=lg2[i>>1]+1;\n}\nint qmax(int l,int r){int len=lg2[r-l+1];return cmp(ST[l][len],ST[r-(1<<len)+1][len]);}\n#undef cmp\n\nstruct Line{ll k,b;Line(ll K=0,ll B=0){k=K,b=B;}};\nnamespace SegmentTree\n{\n\tLine tr[sz<<2];\n\tint vis[sz<<2];\n\t#define ls k<<1\n\t#define rs k<<1|1\n\t#define lson ls,l,mid\n\t#define rson rs,mid+1,r\n\tvoid build(int k,int l,int r)\n\t{\n\t\tvis[k]=0;tr[k]=Line(0,0);\n\t\tif (l==r) return;\n\t\tint mid=(l+r)>>1;\n\t\tbuild(lson);build(rson);\n\t}\n\tvoid pushdown(int k,int l,int r,Line s)\n\t{\n\t\tif (!vis[k]) return (void)(vis[k]=1,tr[k]=s);\n\t\tll l1=s.k*l+s.b,r1=s.k*r+s.b;\n\t\tll l2=tr[k].k*l+tr[k].b,r2=tr[k].k*r+tr[k].b;\n\t\tif (l1<=l2&&r1<=r2) return (void)(tr[k]=s);\n\t\tif (l1>=l2&&r1>=r2) return;\n\t\tdb pos=(s.b-tr[k].b)/(tr[k].k-s.k);\n\t\tint mid=(l+r)>>1;\n\t\tif (pos<=mid) pushdown(lson,r1<r2?tr[k]:s);\n\t\telse pushdown(rson,l1<l2?tr[k]:s);\n\t\tif ((pos<=mid&&r1<r2)||(pos>mid&&l1<l2)) tr[k]=s;\n\t}\n\tvoid insert(int k,int l,int r,int x,int y,Line s)\n\t{\n\t\tif (x<=l&&r<=y) return pushdown(k,l,r,s);\n\t\tint mid=(l+r)>>1;\n\t\tif (x<=mid) insert(lson,x,y,s);\n\t\tif (y>mid) insert(rson,x,y,s);\n\t}\n\tll query(int k,int l,int r,int x)\n\t{\n\t\tll ret=tr[k].k*x+tr[k].b;\n\t\tif (!vis[k]) ret=1e18;\n\t\tif (l==r) return ret;\n\t\tint mid=(l+r)>>1;\n\t\tif (x<=mid) chkmin(ret,query(lson,x));\n\t\telse chkmin(ret,query(rson,x));\n\t\treturn ret;\n\t}\n}\nusing SegmentTree::build;using SegmentTree::insert;using SegmentTree::query;\n\nstruct Point{ll x,y;Point(ll X=0,ll Y=0){x=X,y=Y;}};\ndb calcK(Point a,Point b){return 1.0*(b.y-a.y)/(b.x-a.x);}\n#define Convex deque<Point>\nConvex empty;\nConvex tmp[sz];\nint st[sz],top;\nLine query(int id,ll k)\n{\n\tif (!tmp[id].size()) return Line(0,1e9);\n\twhile (tmp[id].size()>1&&calcK(tmp[id][0],tmp[id][1])<=k) tmp[id].pop_front();\n\treturn Line(k,tmp[id][0].y-k*tmp[id][0].x);\n}\nvoid insertfrnt(int id,Point a)\n{\n\twhile (tmp[id].size()>1)\n\t{\n\t\tPoint x=tmp[id][0],y=tmp[id][1];\n\t\tif (calcK(a,y)>=calcK(x,y)) tmp[id].pop_front();\n\t\telse break;\n\t}\n\ttmp[id].push_front(a);\n}\nvoid insertback(int id,Point a)\n{\n\twhile (tmp[id].size()>1)\n\t{\n\t\tint n=tmp[id].size();\n\t\tPoint x=tmp[id][n-2],y=tmp[id][n-1];\n\t\tif (calcK(a,x)<=calcK(x,y)) tmp[id].pop_back();\n\t\telse break;\n\t}\n\ttmp[id].push_back(a);\n}\nll dp[111][sz];\nint cur;\nint solve(int l,int r)\n{\n\tif (l>r) return 0;\n\tif (l==r) { int id=st[top--]; tmp[id].push_back(Point(l,dp[cur-1][l])); return id; }\n\tint pos=qmax(l+1,r);\n\tint L=solve(l,pos-1);\n\tLine s=query(L,a[pos]);\n\tinsert(1,1,n,pos,r,s);\n\tif (!L) L=st[top--];\n\tdp[cur][pos]=query(1,1,n,pos);\n\tint R=solve(pos,r);\n\tif (tmp[L].size()>=tmp[R].size())\n\t{\n\t\twhile (tmp[R].size()) insertback(L,tmp[R][0]),tmp[R].pop_front();\n\t\tst[++top]=R;\n\t\treturn L;\n\t}\n\telse \n\t{\n\t\twhile (tmp[L].size()) insertfrnt(R,tmp[L][(int)tmp[L].size()-1]),tmp[L].pop_back();\n\t\tst[++top]=L;\n\t\treturn R;\n\t}\n}\n\nint main()\n{\n\tfile();\n\tread(n,K);\n\trep(i,1,n) st[i]=i;top=n;\n\trep(i,1,n) read(a[i]);\n\tinit();\n\trep(i,1,n) dp[1][i]=1ll*i*a[qmax(1,i)];\n\tcur=2;\n\twhile (cur<=K) build(1,1,n),solve(cur-1,n),++cur;\n\tcout<<dp[K][n];\n\treturn 0;\n}\n```",
        "postTime": 1559987409,
        "uid": 76481,
        "name": "p_b_p_b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1175G \u3010Yet Another Partiton Problem\u3011"
    },
    {
        "content": "- Update on 2022.10.12\uff1a\u4fee\u6539\u7b14\u8bef\u3002\n- Update on 2023.4.5\uff1a\u4fee\u6539\u4ee3\u7801\u3002\n\n[CF1175G Yet Another Partiton Problem](https://www.luogu.com.cn/problem/CF1175G)\n\n2D/1D \u52a8\u6001\u89c4\u5212\u9996\u5148\u8003\u8651\u51b3\u7b56\u5355\u8c03\u6027\u5206\u6cbb\uff0c\u4f46\u662f\u6ca1\u6709\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u56e0\u4e3a\u8d21\u732e\u51fd\u6570\u4e0d\u6ee1\u8db3\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\uff1a\u5982\u5f53 $a = \\{10, 1, 10\\}$ \u65f6\uff0c$w(1, 2) + w(2, 3) = 40$\uff0c\u800c $w(1, 3) + w(2, 2) = 31$\u3002 \n\n\u8003\u8651\u8fdb\u884c $k$ \u8f6e DP\uff0c\u8bbe\u4e0a\u4e00\u8f6e DP \u503c\u4e3a $g$\uff0c\u5f53\u524d\u8f6e\u4e3a $f$\uff0c\u5219\u6bcf\u8f6e DP \u5f62\u5982\n$$\nf_i = \\min_{j = 0} ^ {i - 1} g_j + (i - j) \\times \\left(\\max_{k = j + 1} ^ i a_k\\right)\n$$\n\u56fa\u5b9a $i$\uff0c\u4ee4 $v_j = \\max_{k = j + 1} ^ i a_k$\u3002\u663e\u7136\uff0c$v_j$ \u968f\u7740 $j$ \u589e\u5927\u800c\u5355\u8c03\u9012\u51cf\u3002\u5bf9\u4e8e $v$ \u503c\u76f8\u540c\u7684\u4e00\u6bb5\u533a\u95f4 $[l, r]\\ (l\\leq r < i)$\uff0c\u8bbe\u5bf9\u5e94\u7684 $v$ \u503c\u4e3a $d$\uff0c\u5373 $d = v_l = v_{l + 1} = \\cdots = v_r$\u3002\u62c6\u5f00\u67ff\u5b50\uff0c\u6211\u4eec\u9700\u8981\u6700\u5c0f\u5316 $g_i - d\\times i$\u3002\u5bf9\u4e8e\u6bcf\u4e2a $[l, r]$ \u5757\uff0c\u7ef4\u62a4\u4e0b\u51f8\u5305 $(i, g_i)$\uff0c\u67e5\u8be2\u6700\u503c\u70b9 $p$ \u53ea\u9700\u7528\u659c\u7387 $d$ \u5207\u51f8\u5305\u5373\u53ef\u3002\u8fd9\u662f **\u659c\u7387\u4f18\u5316** \u7684\u601d\u60f3\u3002 \u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e $v$ \u503c\u76f8\u540c\u7684\u533a\u95f4 **\u4ec5\u4fdd\u7559\u552f\u4e00\u51b3\u7b56\u70b9**\u3002\n\n\u8bbe\u5bf9\u4e8e $v$ \u503c\u76f8\u540c\u7684\u6781\u957f\u533a\u95f4 $[l_j, r_j]$\uff0c\u7528\u659c\u7387 $v_{r_j}$ \u5207\u5bf9\u5e94\u51f8\u5305\u5f97\u5230\u7684\u6700\u503c\u70b9\u4e3a $p_j$\u3002\u5bf9\u4e8e\u6240\u6709\u8fd9\u6837\u7684\u5927\u533a\u95f4\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u8981\u6c42 $\\min g_{p_j} + (i - p_j)\\times v_{p_j}$\uff0c\u8bb0\u4f5c $F(l_j, r_j)$\u3002\u5176\u4e2d $g, v, p_j$ \u90fd\u662f\u5df2\u77e5\u91cf\uff0c\u53ea\u6709 $i$ \u672a\u77e5\uff0c\u6240\u4ee5 $F(l_j, r_j)$ \u662f $i$ \u7684 **\u4e00\u6b21\u51fd\u6570**\uff0c\u5373\u5173\u4e8e $i$ \u7684\u76f4\u7ebf\u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u6781\u957f\u533a\u95f4\u90fd\u63cf\u8ff0\u4e86\u4e00\u6761\u76f4\u7ebf\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u8fd9\u4e9b\u76f4\u7ebf\u5728\u67d0\u5904\u53d6\u503c\u7684\u6700\u5c0f\u503c\uff0c\u7ecf\u5178\u674e\u8d85\u6811\u3002\u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e\u5bf9\u4e8e $v$ \u503c\u4e0d\u540c\u7684\u533a\u95f4\uff0c\u7528\u674e\u8d85\u6811\u7ef4\u62a4\u6bcf\u4e2a **\u533a\u95f4\u6700\u4f18\u70b9\u5bf9\u5e94\u7684\u76f4\u7ebf**\u3002\n\n\u8fd8\u5269\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff1a$i$ \u589e\u5927\u65f6\uff0c$v_j$ \u4e5f\u4f1a\u968f\u4e4b\u6539\u53d8\u3002$v_j$ \u5bb9\u6613\u7528\u5355\u8c03\u6808\u7ef4\u62a4\uff0c\u4f46\u5408\u5e76\u4e24\u4e2a\u6781\u957f\u533a\u95f4\u7684\u4fe1\u606f\u6709\u4e9b\u68d8\u624b\uff1a\n\n- \u4e3a\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5fc5\u987b\u542f\u53d1\u5f0f\u5408\u5e76\u51f8\u5305\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u53cc\u7aef\u961f\u5217\u7ef4\u62a4\u51f8\u5305\u3002\n- $i\\to i + 1$ \u65f6\uff0c$v$ \u503c\u53d7\u5230\u5f71\u54cd\u4f4d\u7f6e\u7684\u662f $[1, i]$ \u7684\u4e00\u7aef\u540e\u7f00\uff0c\u4e14\u53d7\u5230\u5f71\u54cd\u7684\u533a\u95f4 $[l, i]$ \u5728\u8003\u8651 $i + 1$ \u4e4b\u540e\u7684 $v$ \u503c\u76f8\u540c\uff0c\u5373 $[l, i + 1]$ \u662f\u6781\u957f\u533a\u95f4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5220\u9664\u76f4\u7ebf\uff0c\u800c\u662f\u5c06\u674e\u8d85\u6811 **\u53ef\u6301\u4e45\u5316 / \u53ef\u64a4\u9500**\uff0c\u90a3\u4e48 $i + 1$ \u65f6\u523b\u7684\u674e\u8d85\u6811 $T_{i + 1}$ \u53ef\u7531\u5728 $l - 1$ \u65f6\u523b\u7684\u674e\u8d85\u6811 $T_{l - 1}$ \u7684\u57fa\u7840\u4e0a\u65b0\u589e\u4e00\u6761\u76f4\u7ebf\u5f97\u5230\u3002$l - 1$ \u5373\u5355\u8c03\u6808\u6808\u9876\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u4f7f\u7528\u659c\u7387\u4f18\u5316\uff0c\u53ef\u6301\u4e45\u5316\u674e\u8d85\u6811\uff0c\u542f\u53d1\u5f0f\u5408\u5e76\u51f8\u5305\uff0c\u5355\u8c03\u6808\u56db\u79cd\u7b97\u6cd5\uff0c\u5728 $\\mathcal{O}(nk\\log n)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u95ee\u9898\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\n\nbool Mbe;\nconstexpr int N = 2e4 + 5;\nconstexpr int K = N << 4;\nint n, k, a[N], f[N], g[N];\ndeque<int> d[N];\nll cross(int i, int j, int k) {\n  return 1ll * (j - i) * (f[k] - f[j]) - 1ll * (k - j) * (f[j] - f[i]);\n}\nvoid merge(int i, int j) {\n  if(d[i].size() < d[j].size()) {\n    while(!d[i].empty()) {\n      int o = d[i].back();\n      d[i].pop_back();\n      while(d[j].size() >= 2) {\n        int p = d[j][0], q = d[j][1];\n        if(cross(o, p, q) > 0) break;\n        d[j].pop_front();\n      }\n      d[j].push_front(o);\n    }\n  }\n  else {\n    while(!d[j].empty()) {\n      int q = d[j].front();\n      d[j].pop_front();\n      while(d[i].size() >= 2) {\n        int o = *----d[i].end(), p = d[i].back();\n        if(cross(o, p, q) > 0) break;\n        d[i].pop_back();\n      }\n      d[i].push_back(q);\n    }\n    d[j].swap(d[i]);\n  }\n}\nint cut(int i, int k) {\n  int l = 0, r = d[i].size() - 1;\n  while(l < r) {\n    int m = l + r >> 1;\n    int o = d[i][m], p = d[i][m + 1];\n    if(f[p] - k * p <= f[o] - k * o) l = m + 1;\n    else r = m;\n  }\n  return f[d[i][l]] - k * d[i][l];\n}\n\nstruct line {\n  int k, b;\n  int get(int x) {return k * x + b;}\n} c[N];\nint R[N], node, ls[K], rs[K], val[K];\nvoid modify(int pre, int &x, int l, int r, int v) {\n  ls[x = ++node] = ls[pre], rs[x] = rs[pre], val[x] = val[pre];\n  int m = l + r >> 1;\n  if(c[v].get(m) < c[val[x]].get(m)) swap(v, val[x]);\n  if(c[v].get(l) < c[val[x]].get(l)) modify(ls[pre], ls[x], l, m, v);\n  if(c[v].get(r) < c[val[x]].get(r)) modify(rs[pre], rs[x], m + 1, r, v);\n}\nint query(int l, int r, int x, int p) {\n  int ans = c[val[x]].get(p), m = l + r >> 1;\n  if(l == r) return ans;\n  if(p <= m) ans = min(ans, query(l, m, ls[x], p));\n  else ans = min(ans, query(m + 1, r, rs[x], p));\n  return ans;\n}\n\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin); \n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  c[0].b = 1e9;\n  cin >> n >> k;\n  for(int i = 1; i <= n; i++) cin >> a[i];\n  memset(f, 0x3f, sizeof(f)), f[0] = 0;\n  for(int _ = 1; _ <= k; _++) {\n    static int stc[N], top;\n    top = node = 0;\n    memset(val, 0, K << 2); // ls \u548c rs \u4e0d\u7528\u6e05\u7a7a. \u60f3\u4e00\u60f3, \u4e3a\u4ec0\u4e48?\n    for(int i = 1; i <= n; i++) {\n      d[i].clear(), d[i].push_back(i - 1);\n      while(top && a[i] >= a[stc[top]]) merge(stc[top--], i);\n      c[i] = {a[i], cut(i, a[i])};\n      modify(R[stc[top]], R[i], 1, n, i);\n      stc[++top] = i;\n      g[i] = query(1, n, R[i], i);\n    }\n    swap(f, g);\n  }\n  cout << f[n] << \"\\n\";\n  cerr << 1e3 * clock() / CLOCKS_PER_SEC << \" ms\\n\";\n  return 0;\n}\n```\n\n",
        "postTime": 1643519978,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1175G Yet Another Partiton Problem"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u5957\u5a03\u9898\uff01\uff08\u786e\u4fe1\uff09\n\n___\n\n\u62ff\u5230\u9898\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\u90a3\u4e2a $k$ \u5c31\u53ea\u662f\u4e00\u4e2a\u505a $k$ \u8f6e\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u8003\u8651\u4e00\u8f6e\u4e2d\u7684\u8f6c\u79fb\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6709\u4e00\u4e2a\u66b4\u529b\u7684\u8f6c\u79fb \uff1a $dp_{i} = \\min_{j<i}\\{pdp_{j}+(i-j)\\times\\max_{j<k\\le i}a_k\\}$\u3002\uff08pdp \u8868\u793a\u4e0a\u4e00\u8f6e\u7684 dp \u503c\uff09\n\n\u6211\u4eec\u7684\u76ee\u7684\u662f\u4f18\u5316\uff0c\u6240\u4ee5\u90a3\u4e2a max \u5c31\u663e\u5f97\u5f88\u683c\u683c\u4e0d\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u5b83\u5e72\u6389\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u4e00\u4e2a\u4f4d\u7f6e\u4e3a\u7ed3\u5c3e\u7684\u540e\u7f00 max \u662f\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5f00\u4e00\u4e2a**\u5355\u8c03\u6808**\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u540e\u7f00 max \u76f8\u7b49\u7684\u4f4d\u7f6e\u6765\u7ef4\u62a4\u4fe1\u606f\uff0c\u8fd9\u6837\u6bcf\u4e00\u6bb5\u4e2d\u90a3\u4e2a max \u5c31\u662f\u4e00\u4e2a\u5b9a\u503c\u4e86\u3002\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u6709\u4e00\u6bb5\u8fde\u7eed\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4ed6\u4eec\u5230\u5f53\u524d $i$ \u7684\u540e\u7f00 max \u90fd\u662f $M$\u3002\n\n\u62c6\u5f00 dp \u5f0f\u5b50 \uff1a$dp_i= \\min(pdp_j-jM+iM)$\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd Dp \u5f0f\u5b50\u5176\u5b83\u4f18\u5316\u65b9\u5f0f\u90fd\u884c\u4e0d\u901a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u659c\u7387\u4f18\u5316\uff08**\u674e\u8d85\u7ebf\u6bb5\u6811**\uff09\u3002\n\n\u5206\u6790\u4e00\u4e0b\uff0c\u524d\u9762 $pdp_j-jM$ \u53ea\u4e0e\u8fd9\u6bb5\u4e2d\u7684 $j$ \u4e0e $M$ \u6709\u5173\uff0c\u53d6\u8fd9\u4e00\u6bb5\u4e2d\u7684\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u770b\u505a\u76f4\u7ebf\u4e2d\u7684 $b$\uff0c\u90a3\u4e48 $i$ \u5c31\u81ea\u7136\u662f $x$\uff0c$M$ \u5c31\u662f $k$\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u6bcf\u4e00\u4e2a\u8fde\u7eed\u7684 max \u4e0d\u53d8\u7684\u6bb5\u5c31\u53ef\u4ee5\u8868\u8fbe\u4e3a\u4e00\u6761\u76f4\u7ebf\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u90fd\u76f8\u5f53\u4e8e\u8be2\u95ee $i$ \u5904\u7684\u76f4\u7ebf\u6700\u503c\uff0c\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4f46\u662f\u4e8b\u60c5\u8fd8\u6ca1\u6709\u5b8c\uff0c\u6211\u4eec\u5fd8\u4e86\u4e00\u4e2a\u9634\u95f4\u64cd\u4f5c\u2014\u2014\u5355\u8c03\u6808\u7684\u5f39\u6808\u3002\n\n\u5f39\u6808\u6240\u5e26\u6765\u7684\u5f71\u54cd\u7531\u6709\uff1a\n- \u674e\u8d85\u6811\u4e2d\u7684\u76f4\u7ebf\u53ef\u80fd\u9700\u8981\u88ab\u5220\u9664\uff1b\n\n- \u8fde\u7eed\u6bb5\u4f1a\u88ab\u5408\u5e76\uff0c\u5e76\u4e14 $pdp_j-jM$ \u7684\u6700\u5c0f\u503c\u9700\u8981\u5728 $M$ \u53d8\u5316\u540e\u91cd\u65b0\u6c42\u51fa\u3002\n\n\u9996\u5148\uff0c\u56e0\u4e3a\u662f\u5355\u8c03\u6808\u7ef4\u62a4\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5220\u9664\u672c\u8d28\u4e0a\u662f\u64a4\u9500\u3002\u6240\u4ee5\u76f4\u63a5\u53ef\u64a4\u9500\u674e\u8d85\u6811\u5373\u53ef\uff08\u5c31\u662f\u5f00\u4e00\u4e2a\u6808\u5c06\u6240\u6709\u4fee\u6539\u64cd\u4f5c\u8bb0\u4e0b\u6765\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u53ef\u6301\u4e45\u5316\u674e\u8d85\u6811\uff09\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5f88\u660e\u663e\u4e0d\u53ef\u4ee5\u6bcf\u6b21\u66b4\u529b\u626b\u4e00\u904d\u88ab\u5408\u5e76\u7684\u533a\u95f4\uff0c\u5426\u5219\u4e00\u4e2a\u5355\u589e\u5e8f\u5217\u5c31\u5361\u5f97\u6389\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5408\u5e76\uff0c\u5e76\u5728 $M$ \u6539\u53d8\u65f6\u8fc5\u901f\u6c42\u51fa $pdp_j-jM$ \u7684\u6781\u503c\u3002 \n\n\u60f3\u5230\u4ec0\u4e48\u4e86\u5417\uff1f\u674e\u8d85\u6811\u3002\n\n\u6211\u4eec\u5c06 $pdp_j$ \u770b\u505a $b$\uff0c$j$ \u770b\u505a $k$\uff0c$M$ \u770b\u505a $x$\uff0c\u8fd9\u5c31\u53c8\u53d8\u6210\u4e86\u4e00\u4e2a\u674e\u8d85\u6811\u80fd\u7ef4\u62a4\u7684\u5f62\u5f0f\u3002\n\n\u5bf9\u4e8e\u5408\u5e76\uff0c\u6211\u4eec\u91c7\u7528\u7c7b\u4f3c CF932F \u7684\u65b9\u5f0f\u5408\u5e76\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u53ef\u4ee5\u7531\u5c06\u6bcf\u6761\u76f4\u7ebf\u5728\u674e\u8d85\u6811\u4e0a\u6240\u5904\u7684\u6df1\u5ea6\u770b\u505a\u52bf\u80fd\u8bc1\u660e\u4e3a\u5747\u644a $O(n\\log n)$\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u4f7f\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u7684\u53ef\u64a4\u9500\u674e\u8d85\u6811\u548c\u674e\u8d85\u6811\u5408\u5e76\u89e3\u51b3\u4e86\u8fd9\u4e2a\u9898\uff0c\u603b\u590d\u6742\u5ea6 $O(kn\\log n)$\u3002\n\n\u6240\u4ee5\u8fd9\u662f\u5957\u5a03\u9898\uff01\uff08\u786e\u4fe1\uff09\n\n___\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <climits>\n#include <cstring>\n#include <algorithm>\nusing std::min;using std::swap;\ntypedef long long ll;\nconst int maxn = 2e4+5;\nint n,k,a[maxn];\nint st[maxn],top;\nll dp[maxn],pdp[maxn];\nint lcnt;\nstruct Line{\n\tint k;ll b;\n\tLine(int K=0,ll B=0):k(K),b(B){};\n\tll val(int x){return 1ll*k*x+b;}\n}L[maxn<<1];\nint rt[maxn],ch[maxn*20][2],Lid[maxn*20],tot;\nvoid clear(){memset(rt,0,sizeof(rt));for(int i=1;i<=tot;++i)ch[i][0] = ch[i][1] = Lid[i] = 0;tot = 0;}\nstruct Op{int t,p,x;};\nint optop,tim;\nOp opst[maxn*20];\nvoid ins(int &u,int l,int r,int id,int ty){\n\tif(!u)return Lid[u=++tot]=id,(ty?opst[++optop]=(Op){tim,u,0}:Op()),void();\n\tif(l == r)return (L[Lid[u]].val(l)>L[id].val(l)?((ty?opst[++optop]=(Op){tim,u,Lid[u]}:Op()),Lid[u]=id):0),void();\n\tint mid = l+r>>1;\n\tif(L[Lid[u]].val(mid) < L[id].val(mid))L[Lid[u]].k < L[id].k ? ins(ch[u][0],l,mid,id,ty) : ins(ch[u][1],mid+1,r,id,ty);\n\telse (L[Lid[u]].k < L[id].k ? ins(ch[u][1],mid+1,r,Lid[u],ty) : ins(ch[u][0],l,mid,Lid[u],ty)),(ty?opst[++optop]=(Op){tim,u,Lid[u]}:Op()),Lid[u] = id;\n}\nint merge(int A,int B,int l,int r){\n\tif(!A||!B)return A+B;\n\tif(l == r)return Lid[A] = (L[Lid[A]].val(l)<L[Lid[B]].val(l)?Lid[A]:Lid[B]),A;\n\tint mid = l+r>>1;\n\tif(L[Lid[A]].val(mid) > L[Lid[B]].val(mid))swap(Lid[A],Lid[B]);\n\tch[A][0] = merge(ch[A][0],ch[B][0],l,mid),ch[A][1] = merge(ch[A][1],ch[B][1],mid+1,r),ins(A,l,r,Lid[B],0);\n\treturn A;\n}\nll qrymin(int u,int l,int r,int p){\n\tif(!u)return LLONG_MAX;\n\tint mid = l+r>>1;\n\treturn min(L[Lid[u]].val(p),(p<=mid?qrymin(ch[u][0],l,mid,p):qrymin(ch[u][1],mid+1,r,p)));\n}\nint main(){\n\tscanf(\"%d %d\",&n,&k),L[0] = Line(0,LLONG_MAX);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&a[i]);\n\tmemset(pdp,0x3f,sizeof(pdp)),pdp[0] = 0;\n\tfor(int R=1;R<=k;++R){\n\t\tclear(),top = lcnt = optop = 0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tint now = i,nowval = a[i];\n\t\t\tL[++lcnt] = Line(-(i-1),pdp[i-1]),ins(rt[i],1,2e4,lcnt,0); \n\t\t\twhile(top && a[st[top]] < a[i]){\n\t\t\t\twhile(optop && opst[optop].t == st[top])Lid[opst[optop].p] = opst[optop].x,--optop;\n\t\t\t\trt[i] = merge(rt[i],rt[st[top]],1,2e4),--top;\n\t\t\t}\n\t\t\tL[++lcnt] = Line(a[i],qrymin(rt[i],1,2e4,a[i])),tim = st[++top] = i,ins(rt[0],1,n,lcnt,1);\n\t\t\tdp[i] = qrymin(rt[0],1,n,i);\n\t\t}\n\t\tmemcpy(pdp,dp,sizeof(dp));\n\t}\n\treturn printf(\"%lld\\n\",dp[n]),0;\n}\n```\n\u6c42\u52ff\u55b7\u7801\u98ce\u3002",
        "postTime": 1626224220,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1175G"
    },
    {
        "content": "\u8003\u8651\u8bbe $f_{i,j}$ \u8868\u793a\u5c06\u524d $i$ \u4e2a\u6570\u5206\u6210 $j$ \u6bb5\u7684\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u76f4\u63a5 $O(n^2k)$ \u66b4\u529b\u8f6c\u79fb\u3002\n\n\u4f46\u662f\u8f6c\u79fb\u5f53\u4e2d\u542b\u6709 $\\max$ \u4f7f\u5f97\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u7f8e\u89c2\u3002\n\n\u8003\u8651\u8bbe $f'_{i,j}$ \u8868\u793a\u5c06\u524d $i$ \u4e2a\u6570\u5212\u5206\u6210 $j$ \u6bb5\uff0c\u6700\u540e\u4e00\u6bb5\u7684\u6700\u5927\u503c\u5fc5\u987b\u662f $i$ \u7684\u6700\u5c0f\u8d21\u732e\u3002\uff08\u6ce8\u610f $i$ \u4e0d\u4e00\u5b9a\u662f\u6700\u540e\u4e00\u6bb5\u7684\u7ed3\u5c3e\uff0c\u540e\u9762\u4e5f\u6709\u53ef\u80fd\u63a5\u4e1c\u897f\u4f46\u662f\u8fd9\u91cc\u5728 $\\rm Dp$ \u4e2d\u4e0d\u8003\u8651\uff09\n\n\u90a3\u4e48\u8bbe $ls_i,nx_i$ \u5206\u522b\u8868\u793a $i$ \u5de6\u8fb9\uff0c$i$ \u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4 $i$ \u5927\u7684\u503c\uff0c\u679a\u4e3e\u4e0a\u4e00\u4e2a\u6700\u5927\u503c $k$\uff0c\u9700\u8981\u6ee1\u8db3 $\\max(a_i,a_k)\\geq\\max_{k<j<i}\\{a_j\\}$\uff0c\u8ba8\u8bba $a_i$ \u4e0e $a_k$ \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u6709\u8f6c\u79fb\uff1a\n\n1.$a_i\\leq a_k$\uff1a\n$$f_{i,j}\\leftarrow f_{k,j-1}+(a_i-ls_i)\\times a_i+(ls_i-k)\\times a_k$$\n\n2.$a_i > a_k$\uff1a\n$$f_{i,j}\\leftarrow f_{k,j-1}+(i-nx_k+1)\\times a_i+(nx_k-1-k)\\times a_k$$\n\n\u5c31\u662f\u628a $(k,i]$ \u8fd9\u4e2a\u533a\u95f4\u8003\u8651\u5206\u7ed9 $i,k$ \u7684\u6700\u4f18\u5206\u6cd5\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u662f\u53ef\u4ee5\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u7684\uff0c\u5177\u4f53\u7684\uff0c\u7ef4\u62a4\u4e24\u68f5\u674e\u8d85\u6811\uff0c\u4e00\u68f5\u662f\u4e0a\u9762\u7684\u8f6c\u79fb\uff0c\u4e00\u68f5\u662f\u4e0b\u9762\u7684\u8f6c\u79fb\u3002\n\n\u7ef4\u62a4\u4e0a\u9762\u7684\u8f6c\u79fb\u7684\u90e8\u5206\u76f8\u5f53\u4e8e\u662f\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u7528\u652f\u6301\u56de\u9000\u7684\u674e\u8d85\u6811\u6765\u505a\u3002\n\n\u7ef4\u62a4\u4e0b\u9762\u7684\u8f6c\u79fb\u7684\u90e8\u5206\u76f8\u5f53\u4e8e\u662f\u7ef4\u62a4\u4e00\u6bb5 $i$ \u7684\u540e\u7f00\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u674e\u8d85\u6811\u7684\u5408\u5e76\uff0c\u628a\u5355\u8c03\u6808\u8fd9\u4e00\u6b21\u88ab\u5f39\u6389\u7684\u90e8\u5206\u5168\u90e8\u4e0e $i$ \u7684\u674e\u8d85\u6811\u5408\u5e76\u8d77\u6765\uff0c\u5f53\u4ee5\u540e $i$ \u88ab\u5408\u5e76\u7684\u65f6\u5019\u5c31\u63a5\u7740\u5408\u5e76\u4e0b\u53bb\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(log n)$ \u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u505a\u6cd5\u7684\u603b\u590d\u6742\u5ea6\u662f $O(nk\\log n)$ \u7684\u3002\n\n\u4ee3\u7801\u6709\u70b9\u96be\u5199\u5c31\u5495\u4e86\uff0c\u4e0d\u8fc7\u505a\u6cd5\u5e94\u8be5\u662f\u6ca1\u6709\u4ec0\u4e48\u592a\u5927\u95ee\u9898\u7684\uff0c\u6b22\u8fce\u5404\u4f4d\u6307\u51fa\u95ee\u9898\u3002",
        "postTime": 1626096596,
        "uid": 112569,
        "name": "Time_tears",
        "ccfLevel": 9,
        "title": "CF1175G Yet Another Partiton Problem"
    },
    {
        "content": "\u9898\u89e3\u57fa\u672c\u90fd\u662f\u786c\u4e0a\u5355\u8c03\u6808\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u4f7f\u5f97\u6211\u4eec\u7ef4\u62a4\u7684\u4e1c\u897f\u6709\u4e24\u5c42\uff0c\u8981\u5728\u5355\u8c03\u6808\u91cc\u7ef4\u62a4\u51f8\u5305\u4ee5\u53ca\u6bcf\u4e2a\u51f8\u5305\u6784\u6210\u7684\u674e\u8d85\u6811\uff0c\u6bd4\u8f83\u96be\u60f3\u3002\n\n\u4e0d\u8fc7\u53ef\u4ee5\u76f4\u63a5\u4e0a\u7b1b\u5361\u5c14\u6811\uff0c\u8003\u8651\u5de6\u5b50\u6811\u5bf9\u53f3\u5b50\u6811\u7684\u8d21\u732e\u3002\u4e00\u4e0b\u5b50\u628a\u601d\u7ef4\u96be\u5ea6\u964d\u4f4e\u5f88\u591a\u3002\n\n\u4e0d\u96be\u5199\u51fa\u8f6c\u79fb\u4e00\u4e2a $k$ \u7684\u5f0f\u5b50\uff0c$f'_i=\\min(f_{j-1}+\\max (a[j,i])\\times (i-j+1)$\u3002\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u5728\u7b1b\u5361\u5c14\u6811\u7684 lca \u5904\u8003\u8651 $j$ \u5728\u5de6\u513f\u5b50\u548c\u81ea\u5df1\u65f6\uff0c\u5bf9 $i$ \u5728\u53f3\u513f\u5b50\u548c\u81ea\u5df1\u65f6\u7684\u8d21\u732e\u3002\n\n\u7531\u4e8e\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u628a $i$ \u548c $j$ \u62c6\u6389\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\u7b49\u4ef7\u4e8e\u5bf9\u4e00\u6761\u7ebf\u6bb5\u53d6 $\\min$\uff0c\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u3002\u5bf9\u4e8e\u5de6\u8fb9\u7684\u6570\uff0c\u4e0d\u96be\u53d1\u73b0\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u659c\u7387\u7684\u5f62\u5f0f\uff0c\u4ee4\u70b9\u4e3a $(j,f_{j-1})$\uff0c\u53ea\u9700\u8981\u53d6\u659c\u7387\u4e3a $\\max(a[j,i])$ \u5728\u4e0b\u51f8\u5305\u4e0a\u7684\u6700\u5c0f\u622a\u8ddd\u5c31\u884c\u4e86\u3002\n\n\u7ef4\u62a4\u5b50\u6811\u7684\u51f8\u5305\uff0c\u53ef\u4ee5\u4f7f\u7528 fhq-treap \u6216 deque \u542f\u53d1\u5f0f\u5408\u5e76\u5728\u4e00\u53ea $\\log$ \u5185\u5b8c\u6210\u3002\u81f3\u4e8e\u53f3\u5b50\u6811\u5bf9\u7ebf\u6bb5\u53d6 $\\min$\uff0c\u76f4\u63a5\u674e\u8d85\u6811\u662f\u4e24\u53ea $\\log$ \u7684\uff0c\u4f46\u662f\u56e0\u4e3a\u533a\u95f4\u6709\u6811\u4e0a\u5305\u542b\u5173\u7cfb\uff0c\u6211\u4eec\u8003\u8651 Dfs \u7684\u65f6\u5019\u5168\u5c40\u52a0\u5165\u4e00\u6761\u76f4\u7ebf\uff0c\u56de\u6eaf\u65f6\u628a\u88ab\u4fee\u6539\u8fc7\u7684\u5185\u5b58\u6062\u590d\uff0c\u5c31\u53ef\u4ee5\u53d8\u6210\u5168\u5c40\u52a0\u7ebf\u6bb5\u505a\u5230\u5355 $\\log$ \u4e86\u3002\n\n\u603b\u590d\u6742\u5ea6 $kn\\log n$\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<deque>\nusing namespace std;\ntypedef long long ll;\nconst int MAXN=2e4+5,INF=0x3f3f3f3f;\nint n,k,a[MAXN];\nint rt,lc[MAXN],rc[MAXN];\nint top,stk[MAXN];\nint f[MAXN],g[MAXN],mi[MAXN];\ndeque<int> que[MAXN];\nint siz[MAXN];\nvoid Dfs(int u){\n\tsiz[u]=1;\n\tif(lc[u]){\n\t\tDfs(lc[u]);\n\t\tsiz[u]+=siz[lc[u]];\n\t}\n\tif(rc[u]){\n\t\tDfs(rc[u]);\n\t\tsiz[u]+=siz[rc[u]];\n\t}\n\treturn ;\n}\ninline double getk(int a,int b){\n\treturn (double)(f[b-1]-f[a-1])/(b-a);\n}\nvoid Dfs1(int u){\n\tque[u].clear();\n\tif(lc[u]) Dfs1(lc[u]);\n\tswap(que[u],que[lc[u]]);\n\tif(f[u-1]<INF){\n\t\twhile(que[u].size()>=2&&getk(que[u][que[u].size()-2],que[u].back())>=getk(que[u].back(),u)) que[u].pop_back();\n\t\tque[u].push_back(u);\n\t}\n\tif(!que[u].empty()){\n\t\tint l=0,r=que[u].size()-1;\n\t\twhile(l<r){\n\t\t\tint mid=l+r>>1;\n\t\t\tif(getk(que[u][mid],que[u][mid+1])>a[u]) r=mid;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tmi[u]=f[que[u][l]-1]+a[u]*(1-que[u][l]);\n\t}\n\tif(rc[u]) Dfs1(rc[u]);\n\tif(que[u].size()<que[rc[u]].size()){\n\t\twhile(!que[u].empty()){\n\t\t\tint x=que[u].back();\n\t\t\tque[u].pop_back();\n\t\t\twhile(que[rc[u]].size()>=2&&getk(x,que[rc[u]].front())>=getk(que[rc[u]].front(),que[rc[u]][1])) que[rc[u]].pop_front();\n\t\t\tque[rc[u]].push_front(x);\n\t\t}\n\t\tswap(que[u],que[rc[u]]);\n\t}else{\n\t\twhile(!que[rc[u]].empty()){\n\t\t\tint x=que[rc[u]].front();\n\t\t\tque[rc[u]].pop_front();\n\t\t\twhile(que[u].size()>=2&&getk(que[u][que[u].size()-2],que[u].back())>=getk(que[u].back(),x)) que[u].pop_back();\n\t\t\tque[u].push_back(x);\n\t\t}\n\t}\n\treturn ;\n}\nint dat[MAXN<<2][2];\nstruct Mod{\n\tint *x,y;\n}mods[MAXN*100];\ninline void Mods(int &x,int y){\n\tif(x!=y){\n\t\tmods[++top]=Mod{&x,x};\n\t\tx=y;\n\t}\n}\n#define lc k<<1\n#define rc k<<1|1\n#define ls lc,l,mid\n#define rs rc,mid+1,r\nvoid Modify(int k,int l,int r,int a0,int a1){\n\tbool p(a0+a1*l<=dat[k][0]+dat[k][1]*l),q(a0+a1*r<=dat[k][0]+dat[k][1]*r);\n\tif(!dat[k][1] ||  p&&q ){\n\t\tMods(dat[k][0],a0);\n\t\tMods(dat[k][1],a1);\n\t\treturn ;\n\t}\n\tif(l==r || !p&&!q) return ;\n\tint mid=l+r>>1;\n\tif(a0+a1*mid<=dat[k][0]+dat[k][1]*mid){\n\t\tmods[++top]=Mod{dat[k],dat[k][0]};\n\t\tmods[++top]=Mod{dat[k]+1,dat[k][1]};\n\t\tswap(dat[k][0],a0);\n\t\tswap(dat[k][1],a1);\n\t\tp^=1;\n\t\tq^=1;\n\t}\n\tif(p) Modify(ls,a0,a1);\n\telse Modify(rs,a0,a1);\n\treturn ;\n}\nint Query(int k,int l,int r,int x){\n\tint res=INF;\n\tif(dat[k][1]) res=x*dat[k][1]+dat[k][0];\n\tif(l==r) return res;\n\tint mid=l+r>>1;\n\tif(x<=mid) res=min(res,Query(ls,x));\n\telse res=min(res,Query(rs,x));\n\treturn res;\n}\n#undef lc\n#undef rc\n#undef ls\n#undef rs\nvoid Dfs2(int u){\n\tif(lc[u]) Dfs2(lc[u]);\n\tint _top=top;\n\tif(mi[u]<INF) Modify(1,1,n,mi[u],a[u]);\n\tg[u]=Query(1,1,n,u);\n\tif(rc[u]) Dfs2(rc[u]);\n\twhile(top>_top){\n\t\t*mods[top].x=mods[top].y;\n\t\ttop--;\n\t}\n\treturn ;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1; i<=n; i++){\n\t\tscanf(\"%d\",a+i);\n\t\twhile(top&&a[stk[top]]<=a[i]){\n\t\t\trc[stk[top]]=lc[i];\n\t\t\tlc[i]=stk[top--];\n\t\t}\n\t\tstk[++top]=i;\n\t}\n\twhile(top){\n\t\trc[stk[top]]=rt;\n\t\trt=stk[top--];\n\t}\n\tDfs(rt);\n\tmemset(f,0x3f,sizeof(f));\n\tf[0]=0;\n\twhile(k--){\n\t\tmemset(mi,0x3f,sizeof(mi));\n\t\tDfs1(rt);\n\t\tg[0]=INF;\n\t\tDfs2(rt);\n\t\tmemcpy(f,g,sizeof(f));\n\t}\n\tprintf(\"%d\\n\",f[n]);\n\treturn 0;\n}\n```\n",
        "postTime": 1647442634,
        "uid": 116116,
        "name": "LZDQ",
        "ccfLevel": 0,
        "title": "CF1175G"
    },
    {
        "content": "pb \u5927\u4f6c\u597d\u5f3a\u554a\u2026\n\n\u9898\u610f:\n\u5206\u6210 $k$ \u6bb5\uff0c\u6bcf\u6bb5\u7684\u4ef7\u503c\u662f $len \\times \\max$\u3002\u6c42\u6700\u5c0f\u7684\u4ef7\u503c\u3002\n\n\n\u770b\u8fd9\u4e2a $k$ \u975e\u5e38\u5c0f\uff0c\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $k$\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u8f6c\u79fb\u3002\n\n$f_{i,j}$ \u8868\u793a $i$ \u6bb5\u5206\u5230\u7b2c $j$ \u4e2a\u3002\n\n\n\u679a\u4e3e $k$ \u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u53d8\u6210 $f_{i} = \\min\\{f_{j} + \\max[j+1,i] \\times (i-j)\\}$\u3002\n\n\u6839\u636e pb \u5927\u4f6c\u7684\u8bf4\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u641e\u51fa\u6765\uff0c$f_i = \\min \\{f_j - j \\times  \\max [j+1,i] \\} + i \\times \\max [j+1,i]$\u3002\n\n\u7136\u540e\u8003\u8651\u4e00\u4e2a\u7c7b\u4f3c\u5206\u6cbb\u7684\u8fc7\u7a0b\u3002\n\n\u5148\u6293\u51fa\u6765\u4e00\u4e2a\u6700\u5927\u503c $p$\u3002\n\u7136\u540e\u8fd9\u6837\u4e24\u8fb9\u90fd\u6bd4\u8fd9\u4e2a\u5c0f\u4e86\u3002\n\n\u975e\u5e38\u663e\u7136\uff0c\u53ef\u4ee5\u5148\u9012\u5f52\u5de6\u8fb9\uff0c\u8003\u8651\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\uff0c\u663e\u7136\u8fd9\u4e2a\u60c5\u51b5\u4e0b\u6700\u5927\u503c\u662f $p$\u3002\n\n\u6293\u51fa\u6765\u4e00\u4e2a\u4e0b\u51f8\u5305\u3002\n\n\u51f8\u5305\u91cc\u9762\u7684\u70b9\u662f\u4e0a\u4e00\u8f6e\u7684 $(i,f_i)$\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ea\u9700\u8981\u627e\u659c\u7387\u5c0f\u4e8e $a[p]$ \u7684\u7b2c\u4e00\u4e2a\u70b9\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u628a $f_p$ \u66f4\u65b0\u6389\uff0c\u7136\u540e\u4e22\u5230\u674e\u8d85\u6811\u91cc\u9762\u3002\n\n\u56e0\u4e3a\u662f\u5148\u9012\u5f52\u5de6\u8fb9\u7684\uff0c\u6240\u4ee5\u5de6\u8fb9\u7684 $f$ \u503c\u90fd\u662f\u5728\u674e\u8d85\u6811\u4e0a\u9762\u66f4\u65b0\u8fc7\u7684\u3002\uff08\u4f46\u662f $p$ \u53ea\u5bf9 $[p+1,r]$ \u4ea7\u751f\u5f71\u54cd\uff0c\u8981\u533a\u95f4\u7684\u674e\u8d85\u6811\u3002\uff09\n\n\n\u4e3a\u4ec0\u4e48\u8981\u4e22\u5230\u674e\u8d85\u6811\u91cc\u9762\u5462\uff1f\u56e0\u4e3a\u4f60\u53ea\u80fd\u786e\u5b9a\u8de8\u533a\u95f4\u7684\u8fd9\u4e2a\u90e8\u5206\u662f\u5bf9\u7684\uff0c\u800c\u53f3\u8fb9\u90e8\u5206\u7684\u6700\u5927\u503c\u4e0d\u4e00\u5b9a\u662f $a[p]$\u3002\n\n\u7136\u540e\u8fd8\u6709\u4e00\u90e8\u5206\u5c31\u662f\u51f8\u5305\u5408\u5e76\u3002\n\u51f8\u5305\u5408\u5e76\u7684\u8bdd\u9700\u8981\u4e00\u4e2a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u56e0\u4e3a\u4e24\u8fb9\u7684\u533a\u95f4\u5e76\u4e0d\u7b49\u957f\uff0c\u76f4\u63a5\u66b4\u529b\u5408\u5e76\u4f1a\u51fa\u4e8b\u60c5\u3002\n\u5982\u679c\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u8bdd\u8fd8\u9700\u8981\u52a0\u5230\u524d\u9762\uff0c\u52a0\u5230\u540e\u9762\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u2026\n\n```cpp\n/*\n _      _  _ _ _ _ _   _      _\n\\_\\   /_/ \\_\\_\\_\\_\\_\\ \\_\\   /_/\n \\_\\ /_/      \\_\\      \\_\\ /_/\n  \\_\\_/       \\_\\       \\_\\_/\n   \\_\\         \\_\\       \\_\\\n   \\_\\     \\_\\ \\_\\       \\_\\\n   \\_\\      \\_\\\\_\\       \\_\\\n*/\n#include <bits/stdc++.h>\n#define rep(i,x,y) for(int i=x;i<=y;i++)\n#define per(i,x,y) for(int i=x;i>=y;i--)\n#define sz(v) (int)v.size()\nusing namespace std;\ntemplate<class T>\nvoid read(T&x) {\n\tstatic int c,neg;\n\tx=neg=0;c=getchar();\n\twhile(!isdigit(c)){if(c=='-')neg=1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-48;c=getchar();}if(neg)x=-x;\n}\ntemplate<class T>\nvoid print(T x,char c='\\n'){\n\tstatic int st[233],top;\n\tif(x<0)putchar('-'),x=-x;\n\tdo{st[++top]=x%10;x/=10;}while(x);\n\twhile(top)putchar(st[top--]+48);putchar(c);\n}\ntemplate<class T>\nvoid cmax(T&x,const T&y){\n\tx=(x>y)?x:y;\n}\ntemplate<class T>\nvoid cmin(T&x,const T&y){\n\tx=(x<y)?x:y;\n}\nint n,k;\nconst int N=2e4+5;\nint a[N];\nint f[N][16];\nint cmp(int x,int y){\n\treturn a[x]>a[y]?x:y;\n}\nint lg[N];\nvoid init(){\n\trep(i,2,N-1){\n\t\tlg[i]=lg[i>>1]+1;\n\t}\n\trep(i,1,n){\n\t\tf[i][0]=i;\n\t}\n\trep(j,1,15){\n\t\trep(i,1,n-(1<<j)+1){\n\t\t\tint x=f[i][j-1];\n\t\t\tint y=f[i+(1<<j-1)][j-1];\n\t\t\tf[i][j]=cmp(x,y);\n\t\t}\n\t}\n}\nint get(int l,int r){\n\tint t=lg[r-l+1];\n\tint x=f[l][t];\n\tint y=f[r-(1<<t)+1][t];\n\treturn cmp(x,y);\n}\nstruct line{\n\tint x,y;\n\tline(){\n\t\tx=0;\n\t\ty=0;\n\t}\n\tline(int _,int __){\n\t\tx=_;\n\t\ty=__;\n\t}\n\tint val(int _){\n\t\treturn x*_+y;\n\t}\n}c[N<<2];\nstruct point{\n\tint x,y;\n\tpoint(int _,int __){\n\t\tx=_;\n\t\ty=__;\n\t}\n};\ndeque<point>tmp[N];\nbool vis[N<<2];\nvoid build(int l,int r,int p){\n\tvis[p]=false;\n\tc[p]=line(0,0);\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(l,mid,p<<1);\n\tbuild(mid+1,r,p<<1|1);\n}\nvoid ins(int l,int r,int p,line v){\n\tif(!vis[p]){\n\t\tvis[p]=true;\n\t\tc[p]=v;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tint mid1=c[p].val(mid);\n\tint mid2=v.val(mid);\n\tif(mid1>mid2)swap(c[p],v);\n\tint l1=c[p].val(l);\n\tint l2=v.val(l);\n\tint r1=c[p].val(r);\n\tint r2=v.val(r);\n\tif(l1<=l2&&r1<=r2){\n\t\treturn;\n\t}\n\tif(l1>l2){\n\t\tins(l,mid,p<<1,v);\n\t}else{\n\t\tins(mid+1,r,p<<1|1,v);\n\t}\n}\nvoid ins(int ql,int qr,int l,int r,int p,line v){\n\tif(ql<=l&&r<=qr){\n\t\tins(l,r,p,v);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(ql<=mid)ins(ql,qr,l,mid,p<<1,v);\n\tif(qr>mid)ins(ql,qr,mid+1,r,p<<1|1,v);\n}\nint query(int l,int r,int p,int x){\n\tint res=vis[p]?c[p].val(x):1e9;\n\tif(l==r)return res;\n\tint mid=l+r>>1;\n\tif(x<=mid){\n\t\tcmin(res,query(l,mid,p<<1,x));\n\t}else{\n\t\tcmin(res,query(mid+1,r,p<<1|1,x));\n\t}\n\treturn res;\n}\ndouble K(point a,point b){\n\tdouble res=1.*(b.y-a.y)/(b.x-a.x);\n\treturn res;\n}\nline calc(int x,int y){\n\tif(!tmp[x].size()){\n\t\treturn line(0,1e9);\n\t}\n\twhile(tmp[x].size()>1&&K(tmp[x][0],tmp[x][1]) <= y){\n\t\ttmp[x].pop_front();\n\t}\n\treturn line(y,tmp[x][0].y-tmp[x][0].x*y);\n}\nvoid pushback(int x,point y){\n\twhile(tmp[x].size()>1){\n\t\tint now=sz(tmp[x]);\n\t\tnow-=2;\n\t\tpoint a=tmp[x][now];\n\t\t++now;\n\t\tpoint b=tmp[x][now];\n\t\tif(K(a,y) <= K(a,b)){\n\t\t\ttmp[x].pop_back();\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\ttmp[x].push_back(y);\n}\nvoid pushfront(int x,point y){\n\twhile(tmp[x].size()>1){\n\t\tint now=0;\n\t\tpoint a=tmp[x][now];\n\t\t++now;\n\t\tpoint b=tmp[x][now];\n\t\tif(K(y,b) <= K(y,a)){\n\t\t\ttmp[x].pop_front();\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\ttmp[x].push_front(y);\n}\n\nint ff[101][N];\nint t=0;\nint st[N],top=0;\nint solve(int l,int r){\n\tif(l==r){\n\t\tint u=st[top--];\n\t\ttmp[u].push_back(point(l,ff[t-1][l]));\n\t\treturn u;\n\t}\n\tint pos,L,R;\n\tpos=get(l+1,r);\n\tL=solve(l,pos-1);\n\tline s=calc(L,a[pos]);\n\tins(pos,r,1,n,1,s);\n\tff[t][pos]=query(1,n,1,pos);\n\tR=solve(pos,r);\n\tif(tmp[L].size()<tmp[R].size()){\n\t\twhile(tmp[L].size()){\n\t\t\tpushfront(R,tmp[L].back());\n\t\t\ttmp[L].pop_back();\n\t\t}\n\t\tst[++top]=L;\n\t\treturn R;\n\t}else{\n\t\twhile(tmp[R].size()){\n\t\t\tpushback(L,tmp[R].front());\n\t\t\ttmp[R].pop_front();\n\t\t}\n\t\tst[++top]=R;\n\t\treturn L;\n\t}\n}\nint main(){\n\tread(n);\n\tread(k);\n\trep(i,1,n){\n\t\tread(a[i]);\n\t}\n\tinit();\n\trep(i,1,n){\n\t\tst[++top]=i;\n\t}\n\trep(i,1,n){\n\t\tff[1][i]=i*a[get(1,i)];\n\t}\n\t++t;\n\trep(i,2,k){\n\t\t++t;\n\t\tbuild(1,n,1);\n\t\tsolve(i-1,n);\n\t}\n\tprint(ff[k][n]);\n\treturn 0;\n}\n\n```",
        "postTime": 1605103943,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1175G \u3010Yet Another Partiton Problem\u3011"
    }
]