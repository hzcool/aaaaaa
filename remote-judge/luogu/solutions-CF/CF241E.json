[
    {
        "content": "\u5173\u4e8e\u6b64\u9898\u6709\u4e00\u79cd\u7cbe\u7b80\u7684\u5199\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u5206\u6790\u9898\u9762\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u6700\u540e\u53ef\u4ee5\u8fbe\u5230\u4f7f $1$ \u5230 $n$ \u7684\u8def\u5f84\u8ddd\u79bb\u90fd\u76f8\u7b49\uff0c\u90a3\u4e48\u4ece $1$ \u5230\u4efb\u610f\u4e00\u4e2a $1$ \u5230 $n$ \u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u8def\u5f84\u4e5f\u90fd\u76f8\u7b49\u3002\u6240\u4ee5\u6211\u4eec\u8bbe $dis[u]$ \u4e3a $1$ \u5230 \u70b9 $u$ \u7684\u8def\u5f84\u957f\u5ea6\uff0c$dis[v]$ \u4e3a $1$ \u5230 $u$ \u70b9\u8fde\u5411\u7684\u90a3\u4e2a\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u3002\u56e0\u4e3a\u8fb9\u6743\u8981\u4e48\u4e3a $1$ \u8981\u4e48\u4e3a $2$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a$1 \\leq dis[v]-dis[u] \\leq 2$\uff0c\u5373 $\\begin{cases}dis[v]\\leq dis[u]+2 \\\\ dis[u] \\leq dis[v]-1 \\end{cases}$ \u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u5efa\u4e00\u6761 $u$ \u5230 $v$ \u7684\u8fb9\u6743\u4e3a $2$ \u7684\u8fb9\uff0c\u5efa\u4e00\u6761 $v$ \u5230 $u$ \u7684\u8fb9\u6743\u4e3a $-1$ \u7684\u8fb9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8dd1\u6700\u77ed\u8def\u6c42\u89e3\u51fa\u7b54\u6848\u4e86\uff08\u6ce8\u610f\u8981\u5224\u8d1f\u73af\u65e0\u89e3\u7684\u60c5\u51b5\uff09\u3002\n\n\u8fd9\u91cc\u5176\u5b9e\u6ca1\u5fc5\u8981\u53bb\u8dd1 $spfa$\uff0c\u56e0\u4e3a $n,m$ \u90fd\u5f88\u5c0f\uff0c\u4e14 $spfa$ \u627e\u8d1f\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nm)$ \u7684\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u53ea\u6709\u4e94\u884c\u7684 $Bellman-Ford$ \u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm+m)$\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u4e0d\u5728 $1$ \u5230 $n$ \u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u6765\u5e76\u4e0d\u7ba1\u4ed6\u4eec\uff0c\u6211\u5c31\u7528\u4e86\u4e00\u904d $dfs$ \u89e3\u51b3\u4e86\uff0c\u6ca1\u5fc5\u8981\u5efa\u53cd\u56fe\u8dd1\u4e24\u904d $dfs$ \u518d\u6765\u627e\u6253\u4e86\u4e24\u6b21\u6807\u8bb0\u7684\u70b9\u3002\n\n\u4ee3\u7801\u7cbe\u7b80\uff0c\u8fd0\u884c\u4e5f\u5feb\uff0c\u56e0\u4e3a $spfa$ \u5728\u968f\u673a\u6570\u636e\u4e0b\u7684 $O(km)$ \u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u8fd8\u662f\u7565\u6162\u4e8e\u8dd1\u4e86\u4e24\u904d $dfs$ \u7684 $spfa$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n  int ans=0,f=1;char ch=getchar();\n  while(!isdigit(ch)){if(ch=='-') f=-f;ch=getchar();}\n  while(isdigit(ch)){ans=(ans<<1)+(ans<<3)+ch-48;ch=getchar();}\n  return ans*f;\n}\nconst int N=5005;\nint n,m;\nint tag[N],vis[N];\nint hd[N],nx[N],to[N],from[N],tot;\nvoid adde(int u,int v){\n  nx[++tot]=hd[u];to[tot]=v;hd[u]=tot,from[tot]=u;\n}\nint hd2[N],nx2[N<<1],to2[N<<1],tot2,val[N<<1],from2[N<<1];\nvoid adde2(int u,int v,int w){\n  nx2[++tot2]=hd2[u];to2[tot2]=v;hd2[u]=tot2,val[tot2]=w,from2[tot2]=u;\n}\nvoid dfs(int u){\n  if(u==n) return;\n  for(int i=hd[u];i;i=nx[i]){\n    int v=to[i];\n    if(!vis[v]) vis[v]=1,dfs(v);\n    if(tag[v]) tag[u]=1;\n  }\n}\nint dis[N];\nint main(){\n  n=read(),m=read();\n  for(int i=1;i<=m;i++){\n    int x=read(),y=read();\n    adde(x,y);\n  }\n  tag[n]=1;\n  dfs(1);\n  for(int i=1;i<=m;i++){\n    if(tag[from[i]]&&tag[to[i]]){\n      adde2(from[i],to[i],2);\n      adde2(to[i],from[i],-1);\n    }\n  }\n  memset(dis,0x7f,sizeof(dis));\n  dis[1]=0;\n  for(int i=1;i<=n;i++)\n    for(int j=1;j<=tot2;j++)\n      dis[to2[j]]=min(dis[to2[j]],dis[from2[j]]+val[j]);\n  for(int i=1;i<=tot2;i++)\n    if(dis[from2[i]]+val[i]<dis[to2[i]]) return printf(\"No\\n\"),0;\n  printf(\"Yes\\n\");\n  for(int i=1;i<=m;i++){\n    if(tag[from[i]]&&tag[to[i]]) printf(\"%d\\n\",dis[to[i]]-dis[from[i]]);\n    else printf(\"1\\n\");\n  }\n  return 0;\n}\n```\n\n",
        "postTime": 1617605236,
        "uid": 186045,
        "name": "itisover",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF241E Flights"
    },
    {
        "content": "### (upd:\u66f4\u65b0\u4e86\u56fe\u7247!!!)\n\n\u597d\u9898\u554a\uff01\n\n\u8fd9\u9898\u4e00\u5f00\u59cb\u96be\u4f4f\u4e86\u6211\n\n\u60f3\u4e86\u597d\u4e45\n\n\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u4e8c\u5206\u4e00\u4e0b \u5224\u65ad\n\n\u4f46\u662fcheck\u60f3\u4e86\u534a\u5929\u6ca1\u60f3\u51fa\u6765\u600e\u4e48\u5199\n\n\u770b\u4e86dalao\u7684\u535a\u5ba2\u624d\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u5dee\u5206\u7ea6\u675f\u9898\uff01\uff01\uff01\uff01\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0 \u8fd9\u4e2a\u9898\u7684m==5000\u800cn==1000\n\n\u90a3\u4e48\u4e00\u5b9a\u4f1a\u6709\u73af\u548c\u4e0d\u5fc5\u8981\u7684\u8fb9\n\n\u4e0d\u5fc5\u8981\u7684\u8fb9\u6307\u7684\u662f\u57281-n\u7684\u8def\u5f84\u4e0a\u4e00\u5b9a\u4e0d\u4f1a\u7ecf\u8fc7\u7684\u8fb9\uff08DAG\uff09\n\n\u8003\u8651\u5220\u9664\u8fd9\u4e9b\u65e0\u7528\u7684\u5efa\u4e00\u5f20\u65b0\u56fe\n\n\u6240\u4ee5\u4ece1\u53f7\u8282\u70b9\u4e00\u904ddfs\u518d\u4ecen\u53f7\u8282\u70b9dfs\n\n\u8fd9\u9898\u6709\u4e00\u4e2a\u5c0f\u6027\u8d28\n\n\u4ece1\u53f7\u8282\u70b9\u5230\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 \u7684\u8def\u5f84\u4e00\u5b9a\u76f8\u540c\uff1a\n\n\u7b80\u5355\u53e3\u80e1\u4e00\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/69864.png)\n\n\u5f88\u663e\u7136 \u5982\u679c1-2-4-6\u7684\u957f\u5ea6\u4e0e1-3-5-6\u957f\u5ea6\u4e0d\u7b49\n\n\u90a3\u4e48\u4e00\u5b9a\u4e0d\u6ee1\u8db3\n\n\n\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u4e5f\u662f\u4e00\u6837\n![](https://cdn.luogu.com.cn/upload/pic/69865.png)\n\n\u4f1a\u5b58\u5728\u4e0d\u6ee1\u8db3\u7684\u60c5\u51b5\n\n\u6240\u4ee5\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u518d\u7ed3\u5408\u6761\u4ef6\n\n\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u5dee\u5206\u7ea6\u675f\u7684\u6761\u4ef6\n\n1<=dis[u]-dis[v]<=2\n\n\u7136\u540e\u79fb\u9879\n\n\u8dd1\u5dee\u5206\u7ea6\u675f\n\n[\u60f3\u5b66\u5dee\u5206\u7ea6\u675f\uff1f](https://www.luogu.org/blog/Kenrick/ci-fen-yue-shu-ji-tong)\n\n\u7531\u4e8e\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u8def\u5f84\u957f\u5ea6\u552f\u4e00\uff0c\u6240\u4ee5\u6b63\u786e\u6027\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e86\n\n\u5173\u4e8e\u4e3a\u4ec0\u4e48\u8981\u53bb\u6389\u4e0d\u7ecf\u8fc7\u7684\u70b9\uff1f\n\n\u4e0d\u7ecf\u8fc7\u7684\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u4f1a\u548c\u4ed6\u7ec4\u6210\u4e00\u4e2a\u7ea6\u675f\u5173\u7cfb \u800c\u8fd9\u4e2a\u7ea6\u675f\u5173\u7cfb\u5bf9\u4e8e\u9898\u76ee\u662f\u4e0d\u5fc5\u8981\u7684 \u5c31\u4f1aGG\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+10;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-'){ \n\t\t   f=-1;\t\t\t \n\t   }\n\t   ch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nstruct edge{\n\tint nxt,to,w;\n}e1[N<<1],e2[N<<1],e[N<<1];\nint n,m,cnt1,head2[N],from[N],to[N],dis[N],num[N],head1[N],cnt2,cnt,head[N];\ninline void add1(int x,int y){\n\te1[++cnt1].nxt=head1[x];\n\te1[cnt1].to=y;\n\thead1[x]=cnt1;\n} \ninline void add2(int x,int y){\n\te2[++cnt2].nxt=head2[x];\n\te2[cnt2].to=y;\n\thead2[x]=cnt2;\n}\ninline void add3(int x,int y,int w){\n\te[++cnt].nxt=head[x];\n\te[cnt].w=w;\n\te[cnt].to=y;\n\thead[x]=cnt;\n} \nbool vis[N],mar[N],sign[N];\ninline void dfs1(int x){\n\tfor(int i=head1[x];i;i=e1[i].nxt){\n\t\tint y=e1[i].to;\n\t\tif(vis[y]) continue;\n\t\tvis[y]=1;\n\t\tdfs1(y); \n\t}\n}\ninline void dfs2(int x){\n\tfor(int i=head2[x];i;i=e2[i].nxt){\n\t\tint y=e2[i].to;\n\t\tif(mar[y]) continue;\n \t\tmar[y]=1;\n \t\tdfs2(y);\n\t}\n}\ninline void spfa(){\n\tqueue<int>q;\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,-0x3f3f3f3f,sizeof(dis));\n\tq.push(1);\n\tvis[1]=1;\n\tdis[1]=0;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=false;\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]<dis[u]+e[i].w){\n\t\t\t\tdis[v]=dis[u]+e[i].w; \n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tnum[v]++;\n\t\t\t\t}\t\t\t\n\t\t\t\tif(num[v]>n){\n\t\t\t\t\tputs(\"No\");\n\t\t\t\t\texit(0);\n\t\t\t\t}\t\t \n\t\t\t}\n\t\t}\n\t} \n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tu=read(),v=read();\n\t\tadd1(u,v); \n\t\tadd2(v,u);\n\t\tfrom[i]=u;\n\t\tto[i]=v;\n\t} \n\tdfs1(1);\n\tdfs2(n);\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[i]&&mar[i]){\n\t\t\tsign[i]=1;\n\t\t}\n\t}\n\tsign[1]=1,sign[n]=1; \n\tfor(int i=1;i<=m;i++){\n\t\tif(sign[from[i]]&&sign[to[i]]){\n\t\t\tadd3(from[i],to[i],1);\n\t\t\tadd3(to[i],from[i],-2);\n\t\t}\t\n\t}\n\tspfa();\n\tputs(\"Yes\");\n \tfor(int i=1;i<=m;i++){\n\t\tif(sign[from[i]]&&sign[to[i]]){\n\t\t\tprintf(\"%d\\n\",dis[to[i]]-dis[from[i]]);\n\t\t}else puts(\"1\");\n \t}\n\treturn 0;\t\n} \n```\n\n",
        "postTime": 1565146061,
        "uid": 142373,
        "name": "Kendrick_Z",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF241E \u3010Flights\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u4e00\u770b\u5230\u8fd9\u9898\uff0c\u53ea\u60f3\u5230\u4e86\u66b4\u529b\uff0c\u7136\u540e\u7ecf\u4e00\u795e\u4eba\u6307\u70b9\uff0c\u53d1\u73b0\u8fd9\u539f\u6765\u662f\u4e00\u9053\u5dee\u5206\u7ea6\u675f\u3002 [~~\u4f60\u4e0d\u4f1a\u5dee\u5206\u7ea6\u675f\uff1f~~](https://www.luogu.org/blog/Darth-Che/solution-uva1723)\n\n------------\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u9898\u76ee\u8981\u6c42\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743 w[i] \u6ee1\u8db3 w[i] \u2208 {1,2}\uff0c\u5e76\u4e14\u6240\u6709\u4ece 1 \u5230 n \u7684\u8def\u5f84\u62e5\u6709\u76f8\u540c\u7684\u957f\u5ea6\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u5728\u4ece 1 \u5230 n \u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u90fd\u6ee1\u8db3 1 \u5230\u5b83\u7684\u8def\u5f84\u7684\u957f\u5ea6\u4e00\u5b9a\u76f8\u540c\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u5982\u679c 1 \u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u7684\u957f\u5ea6\u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u90a3\u4e48\u4ece 1 \u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u5230 n \u7684\u8def\u5f84\u7684\u957f\u5ea6\u4e5f\u5c31\u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u4e0d\u6ee1\u8db3\u9898\u76ee\u3002\n\n\u6211\u4eec\u4ee4\u4ece 1 \u5230\u5176\u4ed6\u8282\u70b9\u7684\u8def\u5f84\u7684\u957f\u5ea6\u4e3a dis[i] \uff0c\u5047\u8bbe\u6709\u4e00\u6761\u4ece u \u5230 v \u7684\u6709\u5411\u8fb9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u7ea6\u675f\u6761\u4ef6\uff1a\n\n1. dis[v]-dis[u]>=1\uff0c\u5373dis[u]<=dis[v]-1\u3002\n\n2. dis[v]-dis[u]<=2\uff0c\u5373dis[v]<=dis[u]+2\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u8bfb\u5165\u6570\u636e\u5efa\u7acb\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u8dd1spfa\u4e86\uff0c~~\u7136\u800c\u5374\u72060\u4e86\u3002~~\n\n\u8fd9\u662f\u56e0\u4e3a\u67d0\u4e9b\u4ece 1 \u51fa\u53d1\uff0c\u7136\u800c\u5230\u4e0d\u4e86 n \u7684\u8def\u5f84\u65e0\u8bba\u600e\u4e48\u8bbe\u7f6e\u8fb9\u6743\uff0c\u90fd\u65e0\u6cd5\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\uff0c\u5373\u51fa\u73b0\u4e86\u8d1f\u6743\u56de\u8def\uff0c\u7136\u800c\u8fd9\u65f6\u9898\u76ee\u662f\u6709\u89e3\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u5148\u505a\u4e00\u6b21\u9884\u5904\u7406\uff0c\u627e\u51fa\u5728\u4ece 1 \u5230 n \u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\uff0c\u53ea\u5bf9\u5b83\u4eec\u5efa\u7acb\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\uff0c\u987a\u4fbf\u8fd8\u53ef\u4ee5\u5224\u65ad 1 \u5230 n \u662f\u5426\u8054\u901a\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//dfs\u4e24\u6b21\uff0c\u7b2c\u4e00\u6b21\u4ece 1 \u51fa\u53d1\uff0cvis1==1\u8868\u793a\u8bbf\u95ee\u8fc7\u3002\n//\u7b2c\u4e8c\u6b21\u4ece n \u51fa\u53d1\uff0c\u5efa\u53cd\u5411\u8fb9\uff0cvis1==2\u8868\u793a\u5728\u4ece 1 \u5230 n \u7684\u8def\u5f84\u4e0a\u3002\nvoid dfs(int x,int t) {//t\u8868\u793a\u7b2c\u51e0\u6b21dfs \n\tvis1[x]++;\n\tif(t==1&&x==n) return;//\u7b2c\u4e00\u6b21dfs\u5230 n \u5c31\u8fd4\u56de\u3002 \n\tif(t==2&&x==1) return;//\u7b2c\u4e8c\u6b21dfs\u5230 1 \u5c31\u8fd4\u56de\u3002 \n\tfor(int i=head[x];i!=-1;i=e[i].next) {\n\t\tif(!vis1[e[i].b]&&t==1||vis1[e[i].b]==1&&t==2) {\n\t\t\tdfs(e[i].b,t); \n\t\t}\n\t}\n}\n```\n\n\u800c\u5bf9\u4e8e\u90a3\u4e9b\u65e0\u5173\u7d27\u8981\u7684\u8fb9\uff0c\u7528rand\u51fd\u6570\u968f\u4fbf\u8d4b\u4e2a\u503c\u5c31\u884c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5b8c\u6574\u7684\u4ee3\u7801\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(2n+km)\uff0c\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<ctime>\n#include<stdlib.h>\nusing namespace std;\n\ninline int read() {\n\tint f=1,x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=f;ch=getchar();}\n\twhile('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn f*x;\n}\n\ninline void write(int x) {\n\tif(x<0) x=-x,putchar('-');\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n}\n\nstruct node{\n\tint v,a,b,next;\n}e[10000];\nint head[10000],n,m,cnt,dis[10000],vis[10000];\nint vis1[10000],x[10000],y[10000],sig[10000];\n\nvoid add(int a,int b,int v) {\n\tcnt++;\n\te[cnt].a=a;\n\te[cnt].b=b;\n\te[cnt].v=v;\n\te[cnt].next=head[a];\n\thead[a]=cnt;\n}\n\nint spfa(int sta) {\n\tqueue<int> q;\n\tdis[sta]=0;\n\tvis[sta]=1;\n\tq.push(sta);\n\twhile(!q.empty()) {\n\t\tint tem=q.front();\n\t\tsig[tem]++;\n\t\tif(sig[tem]>m) return 0;\n\t\tq.pop();\n\t\tvis[tem]=0;\n\t\tfor(int i=head[tem];i!=-1;i=e[i].next) {\n\t\t\tif(dis[e[i].b]>dis[tem]+e[i].v) {\n\t\t\t\tdis[e[i].b]=dis[tem]+e[i].v;\n\t\t\t\tif(!vis[e[i].b]) {\n\t\t\t\t\tvis[e[i].b]=1;\n\t\t\t\t\tq.push(e[i].b);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 1;\n}\n\nvoid dfs(int x,int t) {\n\tvis1[x]++;\n\tif(t==1&&x==n) return;\n\tif(t==2&&x==1) return;\n\tfor(int i=head[x];i!=-1;i=e[i].next) {\n\t\tif(!vis1[e[i].b]&&t==1||vis1[e[i].b]==1&&t==2) {\n\t\t\tdfs(e[i].b,t); \n\t\t}\n\t}\n}\n\nint main() {\n\tsrand(time(0));\n\tmemset(head,-1,sizeof(head));\n\tmemset(dis,1e6,sizeof(dis));\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++) {\n\t\tx[i]=read(),y[i]=read();\n\t\tadd(x[i],y[i],1);\n\t}\n\tdfs(1,1);\n\tcnt=0,memset(head,-1,sizeof(head));\n\tfor(int i=1;i<=m;i++) add(y[i],x[i],1);\n\tdfs(n,2);\n\tif(vis1[n]<2) {\n\t\tputchar('N'),putchar('o');\n\t\treturn 0;\n\t}\n\tcnt=0,memset(head,-1,sizeof(head));\n\tfor(int i=1;i<=m;i++) {\n\t\tif(vis1[x[i]]==2&&vis1[y[i]]==2)\n\t\tadd(x[i],y[i],2),add(y[i],x[i],-1);\n\t}\n\tif(spfa(1)) {\n\t\tputchar('Y'),putchar('e'),putchar('s'),putchar('\\n');\n\t\tfor(int i=1;i<=m;i++) {\n\t\t\tif(vis1[x[i]]==2&&vis1[y[i]]==2) {\n\t\t\t\twrite(dis[y[i]]-dis[x[i]]),putchar('\\n');\n\t\t\t} else {\n\t\t\t\twrite(rand()%2+1),putchar('\\n');\n\t\t\t}\n\t\t}\n\t} else putchar('N'),putchar('o');\n\treturn 0;\n} \n```\n",
        "postTime": 1572151336,
        "uid": 91736,
        "name": "RPChe_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF241E \u3010Flights\u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u8bbe\u6240\u6709\u70b9 1 \u5230 $n$ \u7684\u8def\u5f84\uff08\u4e0d\u4e00\u5b9a\u6700\u77ed\uff09\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\u7684\u96c6\u5408\u4e3a $En$\uff0c\u6539\u53d8\u8def\u5f84\u957f\u5ea6\u540e 1 \u5230\u70b9 $i$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\u662f $dis_i$\u3002\n\n\u6709\u4e00\u4e2a\u6027\u8d28\uff1a**\u5bf9\u4e8e\u70b9 $i \\in En$\uff0c\u6ee1\u8db3\u70b9 1 \u5230 $i$ \u7684\u8def\u5f84\u957f\u5ea6\u5728\u6539\u53d8\u540e\u90fd\u76f8\u7b49\u3002**\uff08\u7406\u7531\uff1a\u56e0\u4e3a\u5b58\u5728\u4e00\u6761 1 \u5230 $n$ \u7684\u8def\u5f84\u7ecf\u8fc7 $i$ \uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u6709\u4ece $i$ \u5230 $n$ \u7684\u8def\u5f84\u548c $1$ \u5230 $i$ \u7684\u8def\u5f84\uff0c\u5728 $i$ \u5230 $n$ \u7684\u8def\u5f84\u4e2d\u4efb\u610f\u4e00\u6761\uff0c\u548c\u6240\u6709 $1$ \u5230 $i$ \u7684\u8def\u5f84\u62fc\u8d77\u6765\uff0c\u4f1a\u5f97\u5230 1 \u5230 $n$ \u7684\u8def\u5f84\uff0c\u800c\u5b83\u4eec\u957f\u5ea6\u4e0d\u540c\uff0c\u4e0e\u9898\u610f\u77db\u76fe\uff09\u3002\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u8fb9 $u,v$ \u6ee1\u8db3 $u \\in En, v \\in En$\uff0c\u90fd\u6709:\n\n$\\left\\{\\begin{array}{l}dis_v-dis_u \\le 2\\\\dis_v-dis_u \\ge 1\\end{array}\\right.$\n\n\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u5bb9\u6613\u7406\u89e3\uff1a$dis_u+2$ \u662f\u4e00\u6761 1 \u5230 $v$ \u7684\u8def\u5f84\u957f\u5ea6\uff0c\u800c $dis_v$ \u662f 1 \u5230 $v$ \u7684\u8def\u5f84\u4e2d\u957f\u5ea6\u6700\u77ed\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u6240\u4ee5 $dis_v-dis_u \\le 2$\u3002\n\n\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u7a0d\u5fae\u96be\u4e00\u4e9b\uff0c\u56e0\u4e3a $v \\in En$\uff0c\u6240\u4ee5\u6240\u6709 1 \u5230 $v$ \u7684\u8def\u5f84\u957f\u5ea6\u90fd\u4e00\u6837\uff0c\u800c\u6539\u53d8\u4e00\u6761\u8fb9\u7684\u957f\u5ea6\u53ea\u80fd\u6539\u5927\uff0c\u6240\u4ee5 $dis_v$ \u8981\u5927\u4e8e\u7b49\u4e8e\u6240\u6709\u5230 $v$ \u7684\u8def\u5f84\uff0c\u6545 $dis_v-dis_u \\ge 1$\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u8fd9\u4e9b\u5f0f\u5b50\u8dd1\u4e00\u8fb9\u5dee\u5206\u7ea6\u675f\u5373\u53ef\uff0c\u90a3\u4e48\u9700\u8981\u5148\u6c42\u51fa $En$\u3002\n\n\u65b9\u6cd5\u6bd4\u8f83\u7b80\u5355\uff1a\u5148\u4ece\u70b9 1 \u5f00\u59cb bfs\uff0c\u6c42\u51fa\u70b9 $1$ \u5728\u6539\u53d8\u524d\u5230\u5176\u4ed6\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u4ece\u70b9 $n$ \u5f00\u59cb bfs\uff0c\u9047\u5230\u80fd\u4ece\u70b9 1 \u5230\u7684\u70b9\u5c31\u6253\u4e0a\u6807\u8bb0\uff0c\u6700\u540e\u6240\u6709\u6253\u4e0a\u6807\u8bb0\u7684\u70b9\u5c5e\u4e8e $En$\u3002**\u6ce8\u610f\u8981\u7ed9\u70b9 n \u6253\u6807\u8bb0\u3002**\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\n## \u89e3\u51b3\n**update:** \u66f4\u65b0\u4e86\u4ee3\u7801\uff0c\u5220\u6389\u4e86\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u5934\u6587\u4ef6\uff08\u5c3d\u7ba1\u6211\u89c9\u5f97\u6ca1\u6709\u4eba\u4f1a\u53bb\u770b\u5934\u6587\u4ef6\uff09\uff0c\u8fd9\u4efd\u4ee3\u7801\u6bd4\u8f83\u6162\uff08\u4f46\u4e5f\u80fd\u8fc7\uff09\uff0c\u56e0\u4e3a\u4e0d\u60f3\u653e rk1 \u4ee3\u7801\n\n$\\texttt{Code:}$\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nconst int N = 1005, M = 5005;\n\nint _head[N], _ver[M], _nxt[M], _tot, _dis[N];\nint __head[N], __ver[M], __nxt[M], __tot, __dis[N];\nint head[N], ver[M << 1], nxt[M << 1], edge[M << 1], tot;\nint val[N], cnt[N], dis[N], u[M], v[M], m, n;\nqueue <int> Q;\nchar vis[N], pd[N];\n\nchar SPFA() {\n    Q.push(1);\n    memset(dis, 0x3f, sizeof(dis));\n    dis[1] = 0;\n    while (!Q.empty()) {\n        int cur = Q.front();\n        Q.pop();\n        vis[cur] = 0;\n        for (register int i = head[cur]; i; i = nxt[i]) {\n            int to = ver[i], w = edge[i];\n            if (dis[to] > dis[cur] + w) {\n                dis[to] = dis[cur] + w, val[to] = val[cur] + 1;\n                if (val[to] > n)\n                    return 1;\n                if (!vis[to]) {\n                    ++cnt[to];\n                    if (cnt[to] > n)\n                        return 1;\n                    Q.push(to);\n                }\n            }\n        }\n    }\n    return 0;\n}\n\ninline void addedge(int x, int y, int z) { ver[++tot] = y, nxt[tot] = head[x], head[x] = tot, edge[tot] = z; }\ninline void _addedge(int _x, int _y) { _ver[++_tot] = _y, _nxt[_tot] = _head[_x], _head[_x] = _tot; }\ninline void __addedge(int __x, int __y) { __ver[++__tot] = __y, __nxt[__tot] = __head[__x], __head[__x] = __tot; }\n\ninline void read(int &ret) {\n    ret = 0;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') ch = getchar();\n    while (ch >= '0' && ch <= '9') ret = ret * 10 + ch - '0', ch = getchar();\n}\n\nvoid BFS() {\n    Q.push(1);\n    memset(_dis, 0x3f, sizeof(_dis));\n    _dis[1] = 0;\n    while (!Q.empty()) {\n        int cur = Q.front();\n        Q.pop();\n        for (register int i = _head[cur]; i; i = _nxt[i]) {\n            int to = _ver[i];\n            if (_dis[to] != 0x3f3f3f3f)\n                continue;\n            _dis[to] = _dis[cur] + 1;\n            Q.push(to);\n        }\n    }\n    memcpy(__dis, _dis, sizeof(__dis));\n    Q.push(n), pd[n] = 1;\n    while (!Q.empty()) {\n        int cur = Q.front();\n        Q.pop();\n        for (register int i = __head[cur]; i; i = __nxt[i]) {\n            int to = __ver[i];\n            if (__dis[to] == 0x3f3f3f3f)\n                continue;\n            __dis[to] = 0x3f3f3f3f, pd[to] = 1;\n            Q.push(to);\n        }\n    }\n}\n\nvoid build() {\n    read(n), read(m);\n    for (register int i = 1; i <= m; i++) {\n        read(u[i]), read(v[i]);\n        _addedge(u[i], v[i]), __addedge(v[i], u[i]);\n    }\n    BFS();\n    for (register int i = 1; i <= m; i++) {\n        if (!pd[u[i]] || !pd[v[i]])\n            continue;\n        addedge(u[i], v[i], 2), addedge(v[i], u[i], -1);\n    }\n}\n\nint main() {\n    build();\n    if (SPFA()) {\n        puts(\"No\");\n        return 0;\n    }\n    puts(\"Yes\");\n    for (register int i = 1; i <= m; i++) {\n        if (!pd[u[i]] || !pd[v[i]]) {\n            puts(\"1\");\n            continue;\n        }\n        if (dis[v[i]] == dis[u[i]] + 2)\n            puts(\"2\");\n        else\n            puts(\"1\");\n    }\n    return 0;\n}\n```\n\n\n\n#### THE END",
        "postTime": 1612069376,
        "uid": 253946,
        "name": "ClHg2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF241E \u3010Flights\u3011"
    },
    {
        "content": "\u5450\uff0c???? ycx \u6765\u8865\u5dee\u5206\u7ea6\u675f\u4e86\uff1f\n\n\u6211\u4eec\u8003\u8651\u5982\u679c\u5df2\u77e5\u6240\u6709\u8fb9\u7684\u8fb9\u6743\uff0c\u90a3\u4e48\u5982\u4f55\u5224\u662f\u5426\u5408\u6cd5\u3002\u8003\u8651\u641e\u4e2a DP\uff0c$dp_i$ \u8868\u793a $1\\to i$ \u7684\u6240\u6709\u8def\u5f84\u7684\u957f\u5ea6\u96c6\u5408\u5927\u5c0f\u4e3a $1$ \u7684\u60c5\u51b5\u4e0b\u7684\u6700\u77ed\u8def\u3002\u6ce8\u610f DP \u8fc7\u7a0b\u4e2d\u5982\u679c\u9047\u5230\u4e0d\u4e3a $1$ \u7684\u76f4\u63a5\u8f93\u51fa\u4e0d\u5408\u6cd5\u3002\u7136\u540e\u8fd9\u4e2a\u5730\u65b9\u6709\u4e2a\u5751\u70b9\uff1a\u9898\u76ee\u53ea\u8981\u6c42 $1\\to n$ \u7684\u8def\u5f84\u957f\u5ea6\u552f\u4e00\uff0c\u5e76\u4e0d\u8981\u6c42\u5176\u4ed6\u7684\u957f\u5ea6\u4e3a\u4e00\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u5728\u4efb\u4f55\u4e00\u6761 $1\\to n$ \u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u6211\u4eec dark \u5f53\u4ed6\u4e0d\u5b58\u5728\u3002\n\n\u90a3\u4e48\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u4e00\u4e2a\u5408\u6cd5\u7684 DP \u6570\u7ec4\u8fd8\u539f\u51fa\u6bcf\u6761\u8fb9\u7684\u6743\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa\u4e00\u7ec4\u5408\u6cd5\u7684 DP \u6570\u7ec4\u3002\u5b83\u663e\u7136\u8981\u6ee1\u8db3\uff0c\u5bf9\u4e8e\u6240\u6709\u8fb9 $(x,y)$\uff0c\u90fd\u6709 $dp_y-dp_x\\in\\{1,2\\}$\u3002\u90a3\u4e48\u53ef\u4ee5\u5217\u51fa\u4e0d\u7b49\u5f0f\uff0c\u7136\u540e\u5dee\u5206\u7ea6\u675f\u3002\uff08\u6ce8\u610f\u8fd9\u91cc\u4f3c\u4e4e\u8fd8\u8981\u6ee1\u8db3 $dp_1=0$\uff0c\u4e0d\u8fc7\u65e0\u4f24\u5927\u96c5\uff0c\u6211\u4eec\u53ea\u7814\u7a76 DP \u503c\u4e0e DP \u503c\u7684\u5dee\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm O(nm)$\u3002\n\n**_[code](https://www.luogu.com.cn/paste/hhggn836)_**",
        "postTime": 1605268548,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF241E \u3010Flights\u3011"
    },
    {
        "content": "\u5dee\u5206\u7ea6\u675f\u3002\n\n\u82e5\u5e72\u6761\u9650\u5236\u3002\n\n$1\\leq dis_v -dis_u \\leq 2$\n\n\u8003\u8651\u627e\u51fa\u5728 $1$ ~ $n$ \u6240\u6709\u8def\u5f84\u4e0a\u7684\u70b9\u3002\n\n$dis_v -2 \\leq dis_u$\u3002\n\n$dis_u +1 \\leq dis_v$\u3002\n\n\u5dee\u5206\u7ea6\u675f\u5373\u53ef\u3002",
        "postTime": 1599741307,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF241E \u3010Flights\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u5dee\u5206\u7ea6\u675f\u3002\n\n## \u601d\u8def\uff1a\n\u6211\u4eec\u628a\u57ce\u5e02\u770b\u6210\u8282\u70b9\uff0c\u65f6\u957f\u770b\u4f5c\u8fb9\u6743\u3002\u6211\u4eec\u8bbe $d_i$ \u4e3a\u7f16\u53f7 $1$ \u7684\u8282\u70b9\u5230\u7f16\u53f7 $i$ \u7684\u8282\u70b9\u9700\u8981\u7684\u6743\u3002\n\n\u5bf9\u4e8e\u8282\u70b9 $u$ \u4e0e\u5176\u53ef\u4ee5\u5230\u8fbe\u7684\u8282\u70b9 $v$ \u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u5982\u4e0b\u5173\u7cfb\uff1a\n \n$1 \\le d_u - d_v \\le 2$\n \n\u8fdb\u4e00\u6b65\u5f97\u51fa \n$\\left\\{\\begin{matrix} \nd_u - 1 \\ge d_v\\\\\nd_v + 2 \\ge d_u\n\\end{matrix}\\right. $\n \n\u8fde\u8fb9\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n### \u6b63\u786e\u6027\uff1a\n\n\u9996\u5148\uff0c\u6b64\u9898\u56e0\u4e3a\u9700\u8981\u4f7f\u5f97\u6240\u6709\u4ece\u57ce\u5e02 $1$ \u5230\u57ce\u5e02 $n$ \u7684\u8def\u7ebf\u7684\u603b\u822a\u7a0b\u90fd\u76f8\u540c\u3002\u6240\u4ee5\u5bf9\u4e8e\u6240\u6709\u4ece\u57ce\u5e02 $1$ \u5230\u57ce\u5e02 $n$ \u7684\u8def\u7ebf\u4e0a\u8282\u70b9 $i$\uff0c$d_i$ \u552f\u4e00\u3002\u6240\u4ee5\u6ee1\u8db3\u5dee\u5206\u7ea6\u675f\u6761\u4ef6\u7684\u7b54\u6848\u5373\u4e3a\u89e3\uff0c\u53cd\u4e4b\u5219\u4f1a\u51fa\u73b0\u8d1f\u73af\u800c\u65e0\u89e3\uff08\u53ef\u4ee5\u81ea\u5df1\u8bd5\u7740\u6784\u9020\u4e00\u4e0b\uff09\u3002\n\n### \u526a\u679d\uff1a\n\n\u6211\u4eec\u53d1\u73b0\u6240\u6709\u4ece\u57ce\u5e02 $1$ \u5230\u57ce\u5e02 $n$ \u7684\u8def\u7ebf\u4e0a\u7684\u8282\u70b9\u4e4b\u5916\u7684\u8282\u70b9\u662f\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u7684\uff0c\u662f $1$ \u662f $2$ \u90fd\u65e0\u6240\u8c13\u3002\u6211\u4eec\u4fbf\u53ef\u4ee5 DFS \u5bfb\u627e\u6240\u6709\u4ece\u57ce\u5e02 $1$ \u5230\u57ce\u5e02 $n$ \u7684\u8def\u7ebf\u4e0a\u7684\u8282\u70b9\u518d\u5efa\u8fb9\u3002\n\n## CODE:\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int _ = 1e5 + 7;\nint tot = 0, head[_], head2[_], thoth = 0, d[_];\nstruct S11EDG {\n  int x, y, next;\n} edge[_];\nstruct itisover {\n  int x, y, w, next;\n} node[_];\nint n, m;\nvoid add(int x, int y) {\n  ++tot;\n  edge[tot].x = x;\n  edge[tot].y = y;\n  edge[tot].next = head[x];\n  head[x] = tot;\n}\nvoid add2(int x, int y, int w) {\n  ++thoth;\n  node[thoth].x = x;\n  node[thoth].y = y;\n  node[thoth].w = w;\n  node[thoth].next = head2[x];\n  head2[x] = thoth;\n}\nint flag[_], vis[_];\nvoid dfs(int u) {\n  vis[u] = 1;\n  //cout << \"DFS DEBUG\" << u << '\\n';\n  for (int i = head[u]; i; i = edge[i].next) {\n    int v = edge[i].y;\n    if (!vis[v]) dfs(v);\n    if (flag[v]) flag[u] = 1;\n  }\n  return ;\n}\nsigned main() {\n  memset(d, 0x3f, sizeof d);\n  cin >> n >> m;\n  for (int i = 1; i <= m; i++) {\n    int x, y;\n    cin >> x >> y;\n    add(x, y);\n  }\n  flag[n] = 1;\n  \n  dfs(1);\n  //cout << flag[1] << ' ' << flag[2] << ' ' << flag[3];\n  for (int i = 1; i <= tot; i++) {\n    if (flag[edge[i].x] && flag[edge[i].y]) {\n    \t//cout << i << '\\n';\n      add2(edge[i].x, edge[i].y, 2);\n      add2(edge[i].y, edge[i].x, -1);\n    }\n  }\n  /*-ford-*/\n  for (int i = 1; i < n; i++) {\n    for (int j = 1; j <= thoth; j++) {\n      d[node[j].y] = min(d[node[j].y], d[node[j].x] + node[j].w);\n    }\n  }\n  for (int j = 1; j <= thoth; j++) {\n    if (d[node[j].y] > d[node[j].x] + node[j].w) {\n    \tcout << \"No\\n\";\n    \treturn 0;\n\t\t}\n  }\n  cout << \"Yes\\n\";\n  for (int i = 1; i <= m; i++) {\n  \tif (flag[edge[i].x] && flag[edge[i].y]) {\n  \t\tcout << d[edge[i].y] - d[edge[i].x] << '\\n';\n\t\t} else {\n\t\t\tcout << \"1\\n\";\n\t\t}\n\t}\n  return 0;\n}\n```\n",
        "postTime": 1676545747,
        "uid": 514850,
        "name": "Acerkaio",
        "ccfLevel": 4,
        "title": "Flights \u9898\u89e3"
    },
    {
        "content": "\u5c34\u5c2c\u4e86\uff0c\u63a8\u5230\u6b63\u89e3\u4e86\u90fd\u8fd8\u6ca1\u53d1\u73b0\u63a8\u5230\u6b63\u89e3\u4e86\uff08\uff08\uff08             \n\n\u8003\u8651\u5dee\u5206\u7ea6\u675f\u3002              \n\n\u6211\u4eec\u77e5\u9053\u5982\u679c\u6240\u6709 $1 \\sim n$ \u7684\u8def\u5f84\u957f\u5ea6\u76f8\u540c\uff0c\u90a3\u4e48\u5728\u4e2d\u95f4\u9009\u62e9\u4e00\u4e2a\u70b9 $u$ \u6ee1\u8db3 $1 \\sim u$ \u7684\u8def\u5f84\u957f\u5ea6\u76f8\u540c\uff0c$u \\sim n$ \u7684\u8def\u5f84\u957f\u5ea6\u76f8\u540c\uff0c\u53ef\u4ee5\u8bc1\u660e\u5982\u679c\u4e0d\u76f8\u540c\u5fc5\u7136\u5bfc\u81f4 $1 \\sim n$ \u7684\u8def\u5f84\u957f\u5ea6\u4e0d\u76f8\u540c\u3002             \n\n\u4e00\u4e2a\u5c0f trick\uff0c\u6211\u4eec\u540c\u65f6\u53d1\u73b0 $1 \\sim n$ \u7684\u8def\u5f84\u957f\u5ea6\u76f8\u540c\uff0c\u88ab\u5305\u542b\u5728\u4e86\u4efb\u610f $1 \\sim u$ \u7684\u8def\u5f84\u957f\u5ea6\u76f8\u540c\u8fd9\u4e2a\u6761\u4ef6\u4e0b\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e0a\u8ff0\u7684\u4e24\u4e2a\u6761\u4ef6\u63a8\u5f97 $u \\sim n$ \u7684\u8def\u5f84\u957f\u5ea6\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6ee1\u8db3\u4efb\u610f $1 \\sim u$ \u7684\u8def\u5f84\u957f\u5ea6\u76f8\u540c\u5373\u53ef\uff0c\u5176\u4e2d $u$ \u53ef\u4ee5\u88ab\u4e00\u6761 $1 \\sim n$ \u7684\u8def\u5f84\u7ecf\u8fc7\u3002        \n\n\u8bb0 $dis_u$ \u8868\u793a\u5f53\u524d $1 \\sim u$ \u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u8fb9 $(u,v)$\uff0c\u5176\u4e2d $u,v$ \u90fd\u5fc5\u987b\u81f3\u5c11\u5b58\u5728\u4e00\u6761 $1 \\sim n$ \u7684\u8def\u5f84\u4e0a\uff0c\u53ef\u5f97\uff1a           \n\n$1 \\leq dis_v - dis_u \\leq 2$\u3002                  \n\n\u7136\u540e\u62c6\u51fa\u53e6\u5916\u4e24\u4e2a\u4e0d\u7b49\u5f0f\u5efa\u7acb\u5dee\u5206\u7ea6\u675f\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm)$\u3002        \n\n\u7a7a\u95f4\u5f00\u5c0f\uff0c\u5904\u7406\u4e86\u65e0\u7528\u8fb9\u4e24\u4e2a\u95ee\u9898\u5747\u4f1a\u88ab\u5361\u6389\uff0c\u5b9e\u73b0\u65f6\u8bf7\u6ce8\u610f\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 5e3 + 5 , Inf = 1e9 + 1;\nint n,m,head[Len],cnt,s,in[Len],dis[Len];bool vis[Len],flag[Len],flaw[Len];\nstruct NNode\n{\n\tint x,y,w;\n}Edge[5005];\nstruct node\n{\n\tint next,to,id;\n}edge[5005 << 1];\nvoid add(int from,int to,int id)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].id = id;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nbool dfs(int x)\n{\n\tif(x == n) return flag[x] = 1;\n\tvis[x] |= 1;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(vis[to]) \n\t\t{\t\n\t\t\tflag[x] |= flag[to];\n\t\t\tcontinue;\t\n\t\t}\n\t\tflag[x] |= dfs(to);\n\t}\n\treturn flag[x];\n}\nstruct Node\n{\n\tint to,w;\n\tNode(){to = w = 0;}\n\tNode(int TO,int W){to = TO , w = W;}\n};\nvector<Node> v[Len];\nvoid SPFA()\n{\n\tqueue<int> q;\n\tfor(int i = 1 ; i <= n + 1 ; i ++) dis[i] = Inf , flaw[i] = 0;\n\tq.push(s);flaw[s] = 1;dis[s] = 0;\n\twhile(!q.empty())\n\t{\n\t\tint p = q.front();q.pop();\n\t\tflaw[p] = 0;\n\t\tfor(int i = 0 ; i < v[p].size() ; i ++)\n\t\t{\n\t\t\tint to = v[p][i].to;\n\t\t\tif(dis[to] > dis[p] + v[p][i].w)\n\t\t\t{\n\t\t\t\tdis[to] = dis[p] + v[p][i].w;\n\t\t\t\tif(!flaw[to])\n\t\t\t\t{\n\t\t\t\t\tin[to] ++;\n\t\t\t\t\tif(in[to] == n + 1) \n\t\t\t\t\t{\n\t\t\t\t\t\tputs(\"No\");\n\t\t\t\t\t\texit(0);\n\t\t\t\t\t}\n\t\t\t\t\tflaw[to] = 1;\n\t\t\t\t\tq.push(to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\t//printf(\"%d %d\\n\",i,dis[i]);\n\t\tfor(int e = head[i] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(flag[i] && flag[to]) \n\t\t\t{\n\t\t\t//\tprintf(\"%d %d %d %d\\n\",i,to,dis[to],dis[i]);\n\t\t\t\tEdge[edge[e].id].w = dis[to] - dis[i];\n\t\t\t}\n\t\t\telse Edge[edge[e].id].w = 1;\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tEdge[i].x = x , Edge[i].y = y;\n\t\tadd(x , y , i);\n\t}\n\tflag[1] = dfs(1);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tif(!flag[i]) continue; \n\t\tfor(int e = head[i] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(!flag[to]) continue;\n\t\t\tv[i].push_back(Node(to , 2));\n\t\t\tv[to].push_back(Node(i , -1));\n\t\t}\n\t}\n\ts = n + 1;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tif(!flag[i]) continue;\n\t\tv[s].push_back(Node(i , 0));\n\t}\n\tSPFA();\n\tputs(\"Yes\");\n\tfor(int i = 1 ; i <= m ; i ++) printf(\"%d\\n\",Edge[i].w);\n\treturn 0;\n}\n```",
        "postTime": 1632821255,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF241E Flights"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/lxy-2022/p/CF241E-Solution.html)\n#### \u7b80\u8981\u9898\u610f\n\n$n$ \u4e2a\u70b9\uff0c$m$ \u6761\u6709\u5411\u8fb9\uff0c\u6bcf\u6761\u8fb9\u521d\u59cb\u8fb9\u6743\u662f $1$\uff0c\u8ba9\u5c06\u4e00\u4e9b\u8fb9\u7684\u8fb9\u6743\u53d8\u4e3a $2$\uff0c\u4f7f\u6240\u6709\u4ece\u70b9 $1$ \u5230 $n$ \u7684\u8def\u5f84\u957f\u5ea6\u76f8\u7b49\u3002\n\n#### \u5206\u6790\n\n\u9996\u5148\u53d1\u73b0\u5982\u679c\u4e00\u6761\u8fb9\u4e0d\u5728 $1$ \u5230 $n$ \u7684\u4efb\u610f\u4e00\u6761\u8def\u5f84\u4e0a\uff0c\u53ef\u4ee5\u7ed9\u5b83\u4efb\u610f\u8d4b\u8fb9\u6743\uff0c\u56e0\u6b64\u53ea\u9700\u8003\u8651\u5728 $1$ \u5230 $n$ \u8def\u5f84\u4e0a\u7684\u8fb9\u3002\u8bbe $1$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u5f84\u957f\u4e3a $d_i$\uff0c\u7531\u4e8e\u6240\u6709 $1$ \u5230 $n$ \u7684\u8def\u5f84\u90fd\u7b49\u957f\uff0c\u4e8e\u662f\u6709 $\\forall (u,v),d_u=d_v+w$\uff0c\u5176\u4e2d $w$ \u4e3a $(u,v)$ \u7684\u8fb9\u6743\u3002\u4e8e\u662f\u9898\u76ee\u4e2d\u5bf9\u8fb9\u6743\u7684\u9650\u5236\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5bf9 $d$ \u7684\u9650\u5236\uff0c\u5373\uff1a\n$$\n\\begin{cases}\nd_u-d_v\\leq2 \\\\\n1\\leq d_u-d_v\n\\end{cases} \n\\Longrightarrow \n\\begin{cases}\nd_u\\leq d_v+2\\\\\nd_v\\leq d_u+1\n\\end{cases}\n$$\n\uff0c\u53d1\u73b0\u8fd9\u662f\u4e2a\u5178\u578b\u7684\u5dee\u5206\u7ea6\u675f\u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u8dd1\u4e2a SPFA \u5c31\u884c\u4e86\u3002\u6700\u540e $(u,v)$ \u7684\u8fb9\u6743\u5c31\u662f $d_v-d_u$\u3002\n\n#### \u6838\u5fc3\u4ee3\u7801\n\n```cpp\nint n,m,head[MAXN];vector<Pair>e;bitset<MAXN>v1,v2;\nstruct Edge{\n    int to,dis,nxt;\n    Edge(){;}Edge(int _to,int _dis,int _nxt):to(_to),dis(_dis),nxt(_nxt){}\n};vector<Edge>edge;\nvoid add_edge(int u,int v,int w){edge.push_back(Edge{v,w,head[u]});head[u]=edge.size()-1;}\nint dis[MAXN],cnt[MAXN];bitset<MAXN>vis;queue<int>q;\nbool spfa(int s){\n    vis.reset();mem(dis,0x3f);mem(cnt,0);vis[s]=true;cnt[s]=1;dis[s]=0;q.push(s);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int i=head[u];i!=-1;i=edge[i].nxt){\n            int v=edge[i].to,w=edge[i].dis;vis[u]=false;\n            if(dis[v]>dis[u]+w){\n                dis[v]=dis[u]+w;\n                if(!vis[v]) vis[v]=true,cnt[v]++,q.push(v);\n                if(cnt[v]>=n) return false;\n            }\n        }\n    }return true;\n}vector<int>ed[MAXN];\nvoid dfs(int u){\n    for(auto v:ed[u]) if(!v1[v]) v1[v]=true,dfs(v);\n}void dfs1(int u){\n    for(auto v:ed[u]) if(!v2[v]) v2[v]=true,dfs1(v);\n}\nsigned main(){\n    qread(n,m);int i,j;mem(head,-1);\n    for(i=1;i<=m;i++){\n        int u,v;qread(u,v);e.push_back(Pair(u,v));\n    }for(auto i:e) ed[i.first].push_back(i.second);\n    dfs(1);for(i=1;i<=n;i++) ed[i].clear();\n    for(auto i:e) ed[i.second].push_back(i.first);dfs1(n);\n    if(!v1[n]) return printf(\"No\\n\"),0;v1[1]=v1[n]=v2[1]=v2[n]=true;\n    for(auto i:e){\n        if(v1[i.first]&&v1[i.second]&&v2[i.first]&&v2[i.second])\n            add_edge(i.first,i.second,2),add_edge(i.second,i.first,-1);\n    }\n    if(!spfa(1)) return printf(\"No\\n\"),0;puts(\"Yes\");\n    for(auto i:e){\n        if(v1[i.first]&&v1[i.second]&&v2[i.first]&&v2[i.second])\n            printf(\"%lld\\n\",dis[i.second]-dis[i.first]);\n        else printf(\"1\\n\",i.first,i.second);\n    }\n    #ifndef ONLINE_JUDGE\n    system(\"pause > null\");\n    #endif\n    return 0;\n}\n```\n\n[record](https://codeforc.es/contest/241/submission/172240370)\n\n",
        "postTime": 1663328296,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF241E Flights \u9898\u89e3"
    }
]