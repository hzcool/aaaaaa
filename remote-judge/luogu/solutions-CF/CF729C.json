[
    {
        "content": "### \u4e00\u665a\u4e0a\u5c31\u809d\u4e86\u4e00\u9053\u9898\u4e0d\u5199\u9898\u89e3\u662f\u4e0d\u662f\u6709\u70b9\u4e8f\uff1f\n\u5176\u5b9e\u662f\u8001\u5e08\u641e\u7684\u4e8c\u5206\u7ec3\u4e60\u9898\uff0c\u633a\u6709\u601d\u7ef4\u6027\u7684\uff0c\u6545\u8bb0\u4e4b\u3002\n\n----\n\n\u9898\u610f\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7ed9\u4f60\u4e00\u5806\u8f66\u7684\u6cb9\u6876\u5bb9\u91cf\u4e0e\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u95ee\u4f60\u5728t\u65f6\u95f4\u5185\u5230\u8fbe\u76ee\u7684\u5730\u7684\u8f66\u4e2d \u4ef7\u503c\u6700\u5c0f\u90a3\u4e2a\u662f\u591a\u5c11\uff1f\n\n1. ### \u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u9009\u5b9a\u4e86\u4e00\u8f86\u8f66\uff0c\u600e\u4e48\u77e5\u9053\u4ed6\u6ee1\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5462\uff1f\n\n\u9898\u76ee\u4e2d\u7ed9\u4e86\u4e24\u79cd\u884c\u52a8\u65b9\u6cd5\uff0c\u4ee5\u4e0b\u7b80\u79f0\u5feb\u8d70\u4e0e\u6162\u8d70\u3002\u663e\u7136\u7531\u4e8e\u6bcf\u6b21\u5230\u8fbe\u52a0\u6cb9\u7ad9\u53ef\u4ee5\u66f4\u65b0\u5bb9\u91cf\uff0c\u6574\u6bb5\u8def\u7a0b\u53ef\u4ee5\u6839\u636e\u52a0\u6cb9\u7ad9\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u8def\u7a0b\uff0c\u5bf9\u4e8e\u6bcf\u6bb5\u5b50\u8def\u7a0b\u5206\u522b\u6c42\u51fa\u6700\u5c0f\u7684t\uff0c\u6700\u540e\u7d2f\u52a0\u5373\u4e3a\u4e00\u5171\u9700\u8981\u7684t\u4e86\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u8def\u7a0b\uff0c\u663e\u7136\u53ef\u4ee5\u5229\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\u53ea\u8981\u6211\u6709\u6cb9\u6211\u5c31\u5feb\u8d70\uff0c\u9664\u975e\u6211\u8d70\u4e86\u4e00\u6bb5\u8def\u7a0b\u540e\uff0c\u6211\u9884\u5224\u51fa\u8981\u662f\u5728\u5feb\u8d70\u6211\u5c31\u6ca1\u6cb9\u5566\uff0c\u6211\u5c31\u6539\u6210\u6162\u8d70\uff0c\u76f4\u5230\u628a\u6cb9\u5168\u8017\u5b8c\uff08\u7279\u6b8a\u60c5\u51b5\u6211\u4eec\u4ee5\u540e\u8ba8\u8bba\uff09\u3002**\u90a3\u4e48\u5e94\u8be5\u600e\u4e48\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u8def\u7a0b\u957f\u5ea6\u5462\uff1f**\n\n#### \u6211\u4eec\u8bbe$x$\u4e3a\u5feb\u8d70\u7684\u8def\u7a0b\uff0c$y$\u4e3a\u6162\u8d70\u8def\u7a0b\uff0c$V$\u4e3a\u6c7d\u6cb9\u603b\u91cf\uff0c$s$\u4e3a\u5f53\u524d\u52a0\u6cb9\u7ad9\u4e0e\u4e0a\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u8ddd\u79bb\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7684\u4e09\u4e2a\u5f0f\u5b50\uff1a\n$$\\begin{cases} 2x+y=V   \\\\ x+y=s  \\\\ x+2y=t\\end{cases}$$\n\n#### \u6211\u4eec\u89e3\u4e00\u4e0b\u524d\u4e24\u4e2a\u5f0f\u5b50\uff0c\u53ef\u4ee5\u5f97\u51fa\uff1a\n$$\\begin{cases} x=V-s   \\\\ y=2*s-V  \\end{cases}$$\n\u5c06$x,y$\u4ee3\u5165\u5373\u53ef\u6c42\u51fa\u5bf9\u4e8e\u8fd9\u4e00\u5b50\u8def\u7a0b\u7684$t$\u662f\u591a\u5c11\u4e86...\n\u7136\u540e\u5c31\u53ef\u4ee5\u6beb\u65e0\u7591\u95ee\u7684\u9519\u4e86\u3002\n\n\u4e3a\u5565\u4f1a\u9519\uff1f\u5f53\u7136\u662f$x,y$\u51fa\u73b0\u4e86**\u8d1f\u6570\u89e3**\u7684\u60c5\u51b5\u554a\uff01\n\n### \u6211\u4eec\u8fdb\u884c\u7b80\u5355\u7684\u5206\u7c7b\u8ba8\u8bba\uff1a\n- \u5982\u679c$x<0$\uff0c\u4f60\u8dd1\u7684\u6bd4XG\u8bb0\u8005\u5feb\u8fd8\u5230\u4e0d\u4e86\uff0c\u90a3\u4f60\u80af\u5b9a\u5c31\u4e0d\u53ef\u80fd\u5230\u4e0b\u4e00\u4e2a\u70b9\u4e86\uff0c\u76f4\u63a5\u9000\u4e86\u5427\u3002\u3002\n- \u5982\u679c$y<0$\uff0c\u8bf4\u660e\u4f60\u8dd1\u7684\u592a\u5feb\uff0c\u6cb9\u6876\u6ca1\u7528\u5b8c\u4f60\u5c31\u5feb\u8d70\u5230\u4e86\uff0c\u90a3\u4f60\u6b64\u65f6\u7684$t$\u52a0\u4e0a$x$\u5373\u53ef\uff08\u5bf9\u5e94\u82b1\u8d39\u7684$x~min$\uff09\n- \u9664\u6b64\u4e4b\u5916\u5747\u5957\u7528\u4ee5\u4e0a\u7684\u5f0f\u5b50\u7b97$t$\n\n\u4e8e\u662f\u597d\u50cf\u8fd9\u4e00\u90e8\u5206\u5c31\u6ca1\u4e86\uff1f\u8bf4\u7740\u5f88\u590d\u6742\u5176\u5b9e\u4e00\u60f3\u5c31\u51fa\u6765\u4e86\u3002\u3002\u3002\n\n\u590d\u6742\u5ea6\u662f$O(n)$\u7684\u6837\u5b50\u3002\n\n2. #### \u6211\u4eec\u600e\u4e48\u679a\u4e3e\u8f66\u5b50\uff0c\u770b\u4ed6\u7b26\u4e0d\u7b26\u5408\u6761\u4ef6\u5462\uff1f\n\n\u9996\u5148\u4f60$O(n)$\u4e00\u8f86\u8f86\u679a\u4e3e\u80af\u5b9a\u4e0d\u884c\uff0c\u8d85\u65f6\u3002\n\n\u5176\u6b21\u7684\u8bdd\u770b\u5230\u6700\u5c0f\u503c\u5565\u7684\u60f3\u5230\u4e8c\u5206\u5e94\u8be5\u662f\u6b63\u5e38\u64cd\u4f5c\uff1f\u7136\u540e\u4f60\u5c31\u53c8\u4f1a\u53d1\u73b0\u7ed9\u4f60\u7684\u6c7d\u8f66\u4ef7\u503c\u6839\u672c\u5c31\u4e0d\u5b58\u5728\u5355\u8c03\u6027\u5565\u7684\uff0c\u8fd9\u4e8c\u5206\u5565\u554a\u3002\u3002\n\n\u7136\u540e\u4f60\u5c31\u4f1a\u81ea\u7136\u7684\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4ef7\u503c\u662f\u8bc8\u4f60\u7684\uff0c\u771f\u6b63\u51b3\u5b9a\u80fd\u4e0d\u80fd\u5230\u8fbe\u7684\u662f\u6c7d\u8f66\u7684\u5bb9\u91cf\u3002\u6240\u4ee5\u4f60\u5c31\u76f4\u63a5\u4e8c\u5206\u5bb9\u91cf\uff0c\u770b\u6700\u5c0f\u6ee1\u8db3\u6761\u4ef6\u7684V\u662f\u591a\u5c11\uff0c\u641c\u4e00\u904d\u627e\u4e00\u4e0b\u6ee1\u8db3$v[i]>V$\u4e14$min(w[i])$\u5373\u53ef\u3002\n\n\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff0c\u5c0f\u7ec6\u8282\u90fd\u5728\u4ee3\u7801\u91cc\u6ce8\u91ca\u4e86\uff1a\n```\n#include <cstdio>\n#include <algorithm>\n#define MAXN 300000\nusing namespace std;\n\n//1. \u5224\u65ad\u5728t\u5185\u6700\u5c0fV\u7684\u6cb9\u6876\u591a\u5c11-->\u4e8c\u5206+\u8d2a\u5fc3\uff1f\n\n//2. \u770b\u6ee1\u8db3 <V\u7684\u6700\u5c0fC\u662f\u591a\u5c11\u3002\nint n,s,k,t;\nint c[MAXN],v[MAXN],d[MAXN];\n\nbool check(int v)\n{\n    long long sum=0;\n    for (int i=1;i<=k;i++)\n    {\n        int dis=d[i]-d[i-1];\n        long long x=v-dis,y=2*dis-v;\n        if (x<0) return 0;\n        if (y<0) sum+=dis;\n        else sum+=x+2*y;\n//\t\tcout<<x<<\" \"<<y<<\" \"<<sum<<endl;\n    }\n    return (sum<=t);\n}\n\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&k,&s,&t);\n    for (int i=1;i<=n;i++) scanf(\"%d%d\",&c[i],&v[i]);\n    for (int i=1;i<=k;i++) scanf(\"%d\",&d[i]); d[++k]=s; //\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0ccin\u8d85\u65f6\u89c1\u7956\u5b97\n    sort(d+1,d+k+1); //\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u6570\u7ec4\u4e71\u5e8f\u89c1\u7956\u5b97\n    long long l=0,mid=0,r=3000000000,ans=3000000000,V=3000000000;\n    while (l<r)   //STEP:1 \n    {\n        mid=(l+r)/2;\n        if (check(mid)) r=V=mid;\n        else l=mid+1;\n    }\n    for (int i=1;i<=n;i++) if (v[i]>=V) ans=min(ans,(long long)c[i]);\n    //STEP:2\n    if (ans==3000000000) printf(\"-1\"); //\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u5fd8\u8bb0\u7279\u5224\u89c1\u7956\u5b97\n    else printf(\"%lld\\n\",ans);\n}\n\n```",
        "postTime": 1547219997,
        "uid": 15984,
        "name": "\u5929\u6cfd\u9f9f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF729C \u3010Road to Cinema\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u54e6\u7ed9\u51fa\u4e00\u4e2a$\\ O(k \\log{k} + \\sqrt{s}+n)$\u7684\u7b97\u6cd5\u3002\u5982\u679c\u53ef\u4ee5\u4fdd\u8bc1$\\ g$\u7684\u6709\u5e8f\uff0c\u590d\u6742\u5ea6\u5c06\u8fbe\u5230$\\ O(k + \\sqrt{s}+n)$\u3002\u5b9e\u9645\u4e0a\u7528\u57fa\u6570\u6392\u5e8f\u53ef\u4ee5\u5c06\u590d\u6742\u5ea6\u4e5f\u4f18\u5316\u5230$\\ O(k + \\sqrt{s}+n)$\n\n\u9996\u5148\u6211\u4eec\u8bbe\u6162\u8d70\u8def\u7a0b\u4e3a$\\ x$\uff0c\u5feb\u8d70\u8def\u7a0b\u4e3a$\\ y$\uff0c\u90ae\u7bb1\u5bb9\u91cf\u4e3a$\\ V$\uff0c$\\ s$\u4e3a\u4e24\u52a0\u6cb9\u7ad9\u95f4\u8def\u7a0b,\u663e\u7136\u6709\uff1a\n\n$$\nx=V-s\n$$\n\n$$\ny=2s-V\n$$\n\n\u4e5f\u5c31\u662f\u8bf4$\\ V$\u5728\u4f7f$\\ y > 0$\u7684\u4e00\u6bb5\u533a\u95f4\u90fd\u4f1a\u4f7f\u65f6\u95f4\u51cf\u5c11\u3002\u5047\u82e5$\\ s \\in [1,1000000]$\u7684\u8bdd\u76f4\u63a5\u5728\u6570\u7ec4\u4e0a\u5dee\u5206\u6c42\u4e8c\u9636\u524d\u7f00\u548c\uff0c\u7136\u540e\u4ece\u5de6\u5f80\u53f3\u904d\u5386\u5373\u53ef\u6c42\u51fa\u6cb9\u91cf\u7684\u6700\u5c0f\u503c\u3002\n\n\u73b0\u5728$\\ s \\in [1,1000000000]$\u5219\u8003\u8651\u5206\u5757\u3002\u6cb9\u91cf\u6bcf\u589e\u52a0$\\ \\sqrt{s}$\u51cf\u5c11\u7684\u65f6\u95f4\u53ef\u4ee5\n$\\ O(n + sqrt{n}) $\u9884\u5904\u7406\u3002\u7136\u540e\u904d\u5386\u53ef\u4ee5\u9501\u5b9a\u5728\u4e00\u4e2a\u5757\u91cc\uff0c\u4e4b\u540e\u5757\u5185\u76f4\u63a5\u641e\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nconst int mm=500050;\nint n,ss,tt,kk,m;\nint c[1001001],v[1001001];\nint g[1001001];\nint xx[1001001],yy[1001001],minvv=0,initi=0;\nlong long sum[500500],ti[500500];\nvector<int> num[500500];\ninline void solve()\n{\n\tint i=0;\n\twhile(i<=m)\n\t{\n\t\tif(initi-ti[i]<=tt) break;\n\t\tiniti-=ti[i];\n\t\tminvv+=mm;\n\t\t++i;\n\t}\n\tmemset(xx,0,sizeof(xx));\n\tint j=0;\n\twhile(j<num[i].size())\n\t{\n\t\tint vv=num[i][j];//cout<<vv<<endl;\n\t\t++xx[1];\n\t\t--xx[vv+1];\n\t\t++j;\n\t}\n\tint now=i;\n\ti=1;\n\twhile(i<=mm)\n\t{\n\t\txx[i]+=xx[i-1];\n\t\t++i;\n\t}\n\ti=1;\n\twhile(i<=mm)\n\t{\n\t\t++minvv;\n\t\tif(initi-xx[i]-sum[now]<=tt) break;\n\t\tiniti-=xx[i]+sum[now];\n\t\t++i;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&kk,&ss,&tt);\n\tint i=1;\n\twhile(i<=n)\n\t{\n\t\tscanf(\"%d%d\",&c[i],&v[i]);\n\t\t++i;\n\t}\n\tg[0]=0;\n\ti=1;\n\twhile(i<=kk)\n\t{\n\t\tscanf(\"%d\",&g[i]);\n\t\t++i;\n\t}\n\tg[kk+1]=ss;\n\t++kk;\n\tsort(g+1,g+kk+1);\n\ti=1;\n\twhile(i<=kk)\n\t{\n\t\tminvv=max(minvv,g[i]-g[i-1]);\n\t\t++i;\n\t}\n\ti=1;\n\twhile(i<=kk)\n\t{\n\t\tint x=minvv-(g[i]-g[i-1]),y=2*(g[i]-g[i-1])-minvv;\n\t\tif(y<=0)\n\t\t{\n\t\t\tiniti+=g[i]-g[i-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tiniti+=x+2*y;\n\t\t\tnum[y/mm].push_back(y%mm);\n\t\t\tti[y/mm]+=y%mm;;\n\t\t}\n\t\t++i;\n\t}\n\tm=2000000000/mm;\n\tsum[m+1]=0;\n\ti=m;\n\twhile(i>=0)\n\t{\n\t\tsum[i]=sum[i+1]+num[i+1].size();\n\t\tti[i]+=1ll*sum[i]*mm;\n\t\t--i;\n\t}\n\tif(initi>tt) solve();\n\tint ans=2000000000;\n\ti=1;\n\twhile(i<=n)\n\t{\n\t\tif(v[i]>=minvv) ans=min(ans,c[i]);\n\t\t++i;\n\t}\n\tif(ans==2000000000) ans=-1; \n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1569572397,
        "uid": 138391,
        "name": "orecic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF729C \u3010Road to Cinema\u3011"
    },
    {
        "content": "\u6211\u662f\u5929\u6cfd\u9f9f\u7684\u540c\u5b66\uff0c\u8001\u5e08\u4e5f\u7ed9\u6211\u5e03\u7f6e\u4e86\u8fd9\u9053\u9898\uff0c\u6240\u4ee5\u6211\u4e5f\u6765\u6c34\u4e00\u6ce2\u3002\n\n---\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u601d\u8003\uff1a\u6211\u4eec\u8be5\u5982\u4f55\u68c0\u9a8c\u4e00\u5b9a\u7684\u6cb9\u7bb1\u662f\u5426\u80fd\u7b26\u5408\u6761\u4ef6\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u6709\u4e00\u79cd\u601d\u60f3\uff0c\u80fd\u5feb\u5219\u5feb\uff0c\u4e0d\u7136\u65f6\u95f4\u5c31\u6765\u4e0d\u53ca\u4e86\u3002\n\n\u5982\u679c\u80fd\u5b8c\u5168\u5feb\u901f\u8dd1\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u5168\u7a0b\u5feb\u901f\u8dd1\uff0c~~\u4e0d\u7136\u4f60\u975e\u8981\u6f14\u793a\u51fa\u81ea\u5df1\u5145\u88d5\u7684\u65f6\u95f4\u5e72\u561b\u5462\uff0c\u6307\u4e0d\u5b9a\u5c31\u8d85\u4e86~~\n\n\u53cd\u4e4b\uff0c\u5982\u679c\u6162\u8dd1\u90fd\u8dd1\u4e0d\u4e86\u7684\u8bdd\uff0c\u653e\u5f03\u5427\uff0c\u505c\u6b62\u5427\uff0c\u7ed3\u675f\u5427\u3002\n\n\u5bf9\u4e8e\u4e24\u7ad9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u5982\u4e0b\u8868\u683c\uff08\u8ddd\u79bb\u4e3a$d$\uff0c\u6cb9\u7bb1\u4e3a$v$\uff0c\u8bbe\u5feb\u8dd1\u8ddd\u79bb\u4e3a$x$)\n\n|\u3000|\u5feb\u901f\u8dd1|\u6162\u901f\u8dd1|\u603b\u8ba1|\n|--|--|--|--|\n|\u8def|$x$|$dis-x$|$dis$|\n|\u6cb9|$2x$|$dis-x$|$value$ \u6216 $dis+x$|\n|\u65f6|$x$|$2(dis-x)$|$2*dis-x$|\n\n\u4ece\u4e0a\u6211\u4eec\u5c31\u5df2\u7ecf\u77e5\u9053\u4e86$x = value - dis$\n\n\u663e\u7136\u6211\u4eec\u53ea\u5173\u5fc3\u65f6\u95f4\uff0c$2 * dis - x = 2 * dis - value + dis = 3 * dis - value$\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u53ef\u77e5\u4e00\u6bb5\u8def\u4e2d\n\n$$\\left \\{ \\begin{array}{c}dis \\ (value >= dis * 2) \\\\dis * 3 - value \\ (dis <= value < dis * 2) \\\\None \\ (value < dis)\\end{array} \\right.$$\n\n\u6ce8\u610f\u5f00\u5934\u548c\u7ed3\u5c3e\uff0c\u7136\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u4e3a$O(n+1)$\u3002\n\n---\n\u63a5\u4e0b\u6765\u4e8c\u5206\u679a\u4e3e\u6cb9\u7bb1\u7684\u503c\uff0c\u4e0a\u754c\u548c\u4e0b\u754c\u53ef\u4ee5\u6839\u636e\u8f66\u6765\u51b3\u5b9a\u3002\n\n\u5f97\u5230\u6700\u5c0f\u6cb9\u7bb1\u503c\u540e\uff0c\u5728\u67e5\u627e\u4e00\u8fb9\u627e\u5230\u6cb9\u7bb1\u5927\u4e8e\u5b83\u4e14\u82b1\u8d39\u6700\u5c0f\u7684\u5373\u53ef\u3002\n\n---\n\u8d34\u51fa\u6e90\u4ee3\u7801\uff08C\u8bed\u8a00\u5199\u7684\uff0c\u4e0d\u8981\u4ecb\u610f\uff09\uff1a\n\n```c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define MAX(X,Y) ((X) >= (Y) ? (X) : (Y))\n#define MIN(X,Y) ((X) <= (Y) ? (X) : (Y))\nint ind();\n#define MAXN 200010\n\nint n, k, s, t;\nstruct car {\n\tint cost;\n\tint value;\n} *cars;\nint* stop;\n\nint check(int value) {\n\tint time = 0;\n\tint i = 1;\n\tfor(; i <= k + 1; ++i) {\n\t\tif(time > t) return time > t;\n\t\tint dis = stop[i] - stop[i - 1];\n\t\tif(value >= (dis << 1))\n\t\t\ttime += dis;\n\t\telse if(value < dis)\n\t\t\treturn 1;\n\t\telse \n\t\t\ttime += dis * 3 - value;\n\t}\n\treturn time > t;\n}\n\n//\u8fd9\u4e2acomp\u5199\u7684\u6709\u70b9\u4e11\nint comp(const void* a, const void* b) {\n\treturn (*(const int*)a > *(const int*)b) - (*(const int*)a < *(const int*)b);\n}\n\nint main() {\n\tn = ind(); k = ind();\n\ts = ind(); t = ind();\n\tcars = (struct car*)calloc(n + 1, sizeof(struct car));\n\tstop = (int*)calloc(k + 3, sizeof(int));\n\tint l = 0, len = 0;\n\tint i = 1;\n\twhile(i <= n) {\n\t\tcars[i].cost = ind();\n\t\tcars[i].value = ind();\n\t\tlen = MAX(len, cars[i].value); // \u786e\u5b9a\u4e0a\u754c\n\t\t++i;\n\t}\n\tlen += 2;\n\tfor(i = 1; i <= k; ++i)\n\t\tstop[i] = ind();\n\tstop[k + 1] = s; // \u628a\u672b\u5c3e\u52a0\u8fdb\u6765\uff0c\u5934\u5df2\u7ecf\u88ab\u52a0\u4e86\n\tqsort(stop, (k + 2), sizeof(int), comp); // C\u8bed\u8a00\u7684sort\uff0c\u603b\u4e4b\u5347\u5e8f\u5373\u53ef\n\twhile(len) {\n\t\tint half = len >> 1, mid = l + half;\n\t\tif(check(mid)) l = mid + 1, len -= half + 1;\n\t\telse len = half;\n\t}\n\tint ans = 0x7fffffff;\n\tfor(i = 1; i <= n; ++i) {\n\t\tif(cars[i].value >= l)\n\t\t\tans = MIN(ans, cars[i].cost);\n\t}\n\tprintf(\"%d\", (ans == 0x7fffffff) ? -1 : ans);\n\tfree(cars);\n\tfree(stop);\n\treturn 0;\n}\n\n__inline int ind() {\n\tregister int v = 0;\n\tregister char ch;\n\tint sym = 0;\n\twhile(!isdigit(ch = getchar()) && ch != '-');\n\tch == '-' ? sym = 1 : (v = ch ^ 48);\n\twhile(isdigit(ch = getchar())) v *= 10, v += ch ^ 48;\n\treturn sym ? -v : v;\n}\n```",
        "postTime": 1547382749,
        "uid": 43136,
        "name": "\u53ea\u662f\u8def\u8fc7\u8fd9\u91cc",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF729C \u3010Road to Cinema\u3011"
    }
]