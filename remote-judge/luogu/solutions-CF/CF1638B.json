[
    {
        "content": "\u9898\u76ee\u4e0d\u7ffb\u8bd1\u4e86\u3002  \n\u8003\u8651\u5728**\u539f**\u6570\u5217\u4e2d\u7684\u4e24\u4e2a\u6570 $a_i,a_j$\uff0c\u5982\u679c $a_i$ \u548c $a_j$ \u7684\u5947\u5076\u6027\u76f8\u540c\uff0c\u90a3\u4e48 $a_i,a_j$ \u7684\u76f8\u5bf9\u65b9\u4f4d\u4e0d\u4f1a\u53d8\uff08\u4e5f\u5c31\u662f\u8bf4\u82e5 $i<j$\uff0c\u5219\u8fdb\u884c\u64cd\u4f5c\u540e\u7684\u6570\u7ec4 $a'$ \u4e2d $i$ \u7684\u4f4d\u7f6e < $j$ \u7684\u4f4d\u7f6e\uff0c\u53cd\u4e4b\u4ea6\u7136\uff09\u3002  \n\u90a3\u4e48\u5982\u679c $a_j>a_i$ \u4e14 $j>i$ \u5462\uff0c\u90a3\u4e48\u53ea\u80fd\u8f93\u51fa `no` \u4e86\u3002  \n\u5426\u5219\u8f93\u51fa `yes`\u3002  \n```cpp\n/*\n * @Date: 2022-02-14 23:13:54\n * @LastEditors: 1048576\n * @FilePath: \\code\\CF1638B.cpp\n * @MajorAlgorithm:\n */\n#include <bits/stdc++.h>\nusing namespace std;\nint t, n, a[100005], odd, even;\nbool flg;\nint main()\n{\n    cin >> t;\n    while (t--)\n    {\n        odd = even = -0x3f3f3f3f;\n        flg = 0;\n        cin >> n;\n        for (int i = 1; i <= n; i++)\n            cin >> a[i];\n        for (int i = 1; i <= n; i++)\n            if (a[i] & 1)\n            {\n                odd = max(odd, a[i]);\n                if (a[i] < odd)\n                {\n                    cout << \"NO\" << endl;\n                    flg = 1;\n                    break;\n                }\n            }\n            else\n            {\n                even = max(even, a[i]);\n                if (a[i] < even)\n                {\n                    cout << \"NO\" << endl;\n                    flg = 1;\n                    break;\n                }\n            }\n        if (!flg)\n            cout << \"YES\" << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1644886422,
        "uid": 360265,
        "name": "lhx1048576",
        "ccfLevel": 6,
        "title": "\u71ac\u591c\u4eba\u9898\u89e32\uff08"
    },
    {
        "content": "upd\uff1a\u611f\u8c22\u8bc4\u8bba\u533a\uff0cfixed a typo.\n\n\u6ce8\u610f\u5230\u5947\u5076\u6027\u76f8\u540c\u7684\u6570\u5b57\u52a0\u8d77\u6765\u4e3a\u5076\u6570\uff0c\u5373\u5176\u76f8\u5bf9\u4f4d\u7f6e\u662f\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u7684\u3002\n\n\u6240\u4ee5\u53ea\u8981\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u5176\u524d\u9762\u6709\u6bd4\u4ed6\u5927\u7684\u5947\u5076\u6027\u76f8\u540c\u7684\u6570\uff0c\u5c31\u4e0d\u53ef\u80fd\u6392\u597d\u5e8f\u3002\n\n\u5426\u5219\u6211\u4eec\u603b\u80fd\u901a\u8fc7\u5c06\u5947\u5076\u6027\u4e0d\u540c\u7684\u76f8\u90bb\u6570\u5b57\u4ea4\u6362\u4ee5\u8fbe\u5230\u6392\u5e8f\u7684\u76ee\u7684\u3002\n\n```cpp\nconst int maxn = 1e5 + 5;\nint n, a[maxn];\n\nint main() {\n    int T; read(T);\n    while (T--) {\n        read(n);\n        FOR(i, 1, n) read(a[i]);\n        set<int> odd, even;\n        bool flg = 1;\n        FOR(i, 1, n) {\n            if (a[i] & 1) {\n                if (!odd.empty() && (*odd.rbegin()) > a[i])\n                flg = 0;\n                odd.insert(a[i]);\n            } else {\n                if (!even.empty() && (*even.rbegin()) > a[i])\n                flg = 0;\n                even.insert(a[i]);\n            }\n        }\n        print(flg ? \"YES\" : \"NO\");\n    }\n    return output(), 0;\n}\n```",
        "postTime": 1644925741,
        "uid": 212488,
        "name": "\u6e05\u70db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1638B Odd Swap Sort"
    },
    {
        "content": "\u4e0d\u9519\u7684\u4e00\u9053\u7ed3\u8bba\u9898\u3002\n\n\u9898\u76ee\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 $a$\uff0c\u4f60\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u6570\u7684\u5947\u5076\u6027\u4e0d\u540c\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4ea4\u6362\u8fd9\u4e24\u4e2a\u6570\uff0c\u6c42\u80fd\u4e0d\u80fd\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u628a\u6570\u7ec4 $a$ \u53d8\u6210\u975e\u964d\u5e8f\u7684\u6570\u7ec4\u3002\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u6570\u5982\u679c\u4e0d\u5728\u5b83\u5728\u975e\u964d\u5e8f\u6570\u7ec4\u91cc\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u901a\u8fc7\u64cd\u4f5c\u628a\u5b83\u6362\u8fc7\u53bb\u3002\u6211\u4eec\u89c2\u5bdf\u6027\u8d28\u53ef\u4ee5\u5f97\u77e5\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\u548c\u76ee\u6807\u4f4d\u7f6e\u4e4b\u95f4\u5fc5\u987b\u6ca1\u6709\u5947\u5076\u6027\u4e0e\u8fd9\u4e2a\u6570\u76f8\u540c\u7684\u6570\uff0c\u5426\u5219\u6211\u4eec\u5c31\u4e0d\u80fd\u628a\u8fd9\u4e2a\u6570\u6362\u8fc7\u53bb\u3002\n\n\u4e4b\u540e\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\u5224\u65ad\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u540c\u5947\u5076\u6027\u7684\u6570\uff0c\u6240\u7ec4\u6210\u7684\u5b50\u6570\u7ec4\u662f\u4e0d\u662f\u4e00\u4e2a\u975e\u964d\u5e8f\u7684\u6570\u7ec4\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5bf9\u4e8e\u5947\u6570\u548c\u5076\u6570\u5404\u7ef4\u62a4\u4e00\u4e2a\u5f53\u524d\u6700\u5927\u503c\uff0c\u4e4b\u540e\u4ece $1$ \u5230 $n$ \u679a\u4e3e\u4e00\u904d\u6570\u7ec4\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e2a\u6570\u6bd4\u540c\u5947\u5076\u6027\u7684\u5f53\u524d\u6700\u5927\u503c\u8981\u5c0f\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u8fd9\u4e2a\u66f4\u5c0f\u7684\u6570\u8981\u6362\u5230\u6700\u5927\u503c\u7684\u524d\u9762\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u4e24\u4e2a\u6570\u662f\u540c\u5947\u5076\u6027\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5224\u5b9a\u4e0d\u5408\u6cd5\u4e86\u3002\n\n\u5982\u679c\u5947\u6570\u548c\u5076\u6570\u5404\u81ea\u6240\u7ec4\u6210\u7684\u5b50\u6570\u7ec4\uff0c\u90fd\u6ee1\u8db3\u4e0d\u964d\u5e8f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5224\u5b9a\u5408\u6cd5\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint read(){\n\tint s=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)){\n\t\ts=s*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s;\n}\nint a[200005];\nint main(){\n\tint t;\n\tt=read();\n\twhile(t--){\n\t\tint n;\n\t\tn=read();\n\t\tfor(int i=1;i<=n;i++) a[i]=read();\n\t\tint x=0,y=0;\n\t\tbool flag=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(a[i]%2==0){\n\t\t\t\tif(a[i]<x) flag=1;\n\t\t\t\telse x=a[i];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a[i]<y) flag=1;\n\t\t\t\telse y=a[i];\n\t\t\t}\n\t\t}\n\t\tif(flag) cout<<\"NO\"<<endl;\n\t\telse cout<<\"YES\"<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1644929380,
        "uid": 300024,
        "name": "miao5",
        "ccfLevel": 4,
        "title": "CF1638B"
    },
    {
        "content": "[CF Problem](https://codeforces.com/problemset/problem/1638/B)\n\n\n### Solution\n\n------------\n\n\u6761\u4ef6 $ a_i + a_{ i + 1 } $ \u662f\u5947\u6570\u610f\u5473\u7740\u6211\u4eec\u53ea\u80fd\u4ea4\u6362\u4e24\u4e2a\u4e0d\u540c\u5947\u5076\u6027\u7684\u5143\u7d20\u3002\n\n\u4ee4 $ a $ \u4e2d\u7684\u5947\u6570\u5e8f\u5217\u4e3a $ o $\u3002\u82e5 $ o $ \u4e0d\u662f\u975e\u9012\u51cf\u6570\u5217\uff0c\u5219\u5fc5\u7136\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a $ i $ \u4f7f  $ o_i > o_{ i + 1 } $\u3002\u663e\u7136\uff0c\u8fd9\u4e24\u4e2a\u6570\u65e0\u6cd5\u4ea4\u6362\uff0c\u56e0\u4e3a $ o_i + o_{ i + 1 } $ \u4e3a\u5076\u6570\u3002\u6545 $ o $ \u5fc5\u4e3a\u975e\u9012\u51cf\u6570\u5217\u3002\n\n\u5bf9\u4e8e $ a $ \u4e2d\u7684\u5076\u6570\u5e8f\u5217 $ e $\uff0c\u540c\u7406\u6709  $ e $ \u5fc5\u4e3a\u975e\u9012\u51cf\u6570\u5217\u3002\n\n\n### Code\n\n------------\n\n\u82e5\u76f4\u63a5\u66b4\u529b $ O ( n ^ 2 ) $ \u6c42\u89e3\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u672c\u9898\u3002\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf\uff0c\u5206\u522b\u8868\u793a\u79bb\u5f53\u524d\u6700\u8fd1\u7684\u5947\u6570\u548c\u5076\u6570\u3002\n\n\u5982\u679c\u5f53\u524d\u679a\u4e3e\u5230\u5947\u6570\uff0c\u4e14\u8bb0\u5f55\u7684\u5947\u6570\u6bd4\u5b83\u5927\uff0c\u5219\u8bf4\u660e\u5947\u6570\u5e8f\u5217\u4e0d\u662f\u975e\u9012\u51cf\u6570\u5217\u3002\n\n\u540c\u7406\uff0c\u5982\u679c\u5f53\u524d\u679a\u4e3e\u5230\u5076\u6570\uff0c\u4e14\u8bb0\u5f55\u7684\u5076\u6570\u6bd4\u5b83\u5927\uff0c\u5219\u8bf4\u660e\u5076\u6570\u5e8f\u5217\u4e0d\u662f\u975e\u9012\u51cf\u6570\u5217\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ O ( tn ) $ \u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100001\nusing namespace std;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);cout.tie(0);\n\tint t;cin>>t;\n\twhile(t--)\n\t{\n\t\tint n;cin>>n;\n\t\tint a[N];\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcin>>a[i];\n\t\tbool f=1;//\u8bb0\u5f55\u7b54\u6848\n\t\tint last_odd=0,last_even=0;//\u8bb0\u5f55\u79bb\u5f53\u524d\u6700\u8fd1\u7684\u5947\u6570\u548c\u5076\u6570\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(a[i]%2)\n\t\t\t{\n\t\t\t\tif(a[last_odd]>a[i]){f=0;break;}//\u8bb0\u5f55\u7684\u5947\u6570\u6bd4\u5f53\u524d\u6570\u5927\n\t\t\t\tlast_odd=i;//\u66f4\u65b0\u5947\u6570\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(a[last_even]>a[i]){f=0;break;}//\u8bb0\u5f55\u7684\u5076\u6570\u6bd4\u5f53\u524d\u6570\u5927\n\t\t\t\tlast_even=i;//\u66f4\u65b0\u5076\u6570\n\t\t\t}\n\t\t}\n\t\tif(f) cout<<\"Yes\\n\";\n\t\telse cout<<\"No\\n\";\n\t}\n\treturn 0;\n} \n```\n\n",
        "postTime": 1644917276,
        "uid": 202474,
        "name": "zhongcy",
        "ccfLevel": 5,
        "title": "CF1638B Odd Swap Sort"
    },
    {
        "content": "### 2.CF1638B Odd Swap Sort\n\n#### 2.1 \u9898\u76ee\u63cf\u8ff0\uff08[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1638B)\uff09\n\n##### 2.1.1 \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217 $a_1,a_2,...,a_n$ \u3002\n\n\u4f60\u53ef\u4ee5\u6267\u884c\u82e5\u5e72\u6b21\u5982\u4e0b\u7684\u64cd\u4f5c\uff1a\n\n- \u9009\u62e9\u4e00\u4e2a\u6574\u6570 $i\\ (\\ 1\\leq i< n\\ )$ \uff0c\u5982\u679c $a_i+a_{i+1}$ \u4e3a\u5947\u6570\uff0c\u4ea4\u6362 $a_i$ \u548c $a_{i+1}$ \u3002\n\n\u95ee\u662f\u5426\u53ef\u4ee5\u5c06\u8be5\u6570\u5217\u6392\u5e8f\u6210\u975e\u9012\u51cf\u6570\u5217\u3002\n\n##### 2.1.2 \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $t\\ (\\ 1\\leq t\\leq 10^5\\ )$ \uff0c\u8868\u793a\u6d4b\u8bd5\u7ec4\u6570\u3002\n\n\u6bcf\u7ec4\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n\\ (\\ 1\\leq n\\leq 10^5)$ \uff0c\u8868\u793a\u6570\u5217\u7684\u957f\u5ea6\u3002\n\n\u6bcf\u7ec4\u7b2c\u4e8c\u884c $n$ \u4e2a\u6574\u6570 $a_1,a_2,...,a_n\\ (\\ 1\\leq a_i\\leq 10^9\\ )$ \uff0c\u8868\u793a\u7ed9\u5b9a\u7684\u6570\u5217\u3002\n\n\u53ef\u4ee5\u4fdd\u8bc1 $t$ \u7ec4\u6d4b\u8bd5\u7684 $n$ \u7684\u548c\u4e0d\u8d85\u8fc7 $2\u00b710^5$ \u3002\n\n##### 2.1.3 \u8f93\u51fa\u683c\u5f0f\n\n\u5171 $t$ \u884c\u3002\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\uff0c\u5982\u679c\u4f60\u53ef\u4ee5\u5c06\u8be5\u6570\u5217\u6392\u5e8f\u6210\u975e\u9012\u51cf\u6570\u5217\uff0c\u8f93\u51fa ``Yes`` \uff1b\u5426\u5219\uff0c\u8f93\u51fa ``No`` \u3002\n\n##### 2.1.4 \u6837\u4f8b\n\n###### \u8f93\u5165 #1\n\n```cpp\n4\n4\n1 6 31 14\n2\n4 2\n5\n2 9 6 7 10\n3\n6 6 6\n```\n\n###### \u8f93\u51fa #1\n\n```cpp\nYes\nNo\nNo\nYes\n```\n\n##### 2.1.5 \u6837\u4f8b\u89e3\u91ca\n\n- \u7b2c\u4e00\u7ec4\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u4ea4\u6362 $31$ \u548c $14$ \uff08 $31+14=45$ \u662f\u5947\u6570\uff09\u7136\u540e\u5f97\u5230\u975e\u9012\u51cf\u6570\u5217 $[1,6,14,31]$ \u3002\n- \u7b2c\u4e8c\u7ec4\u6d4b\u8bd5\uff0c\u6211\u4eec\u60f3\u8981\u5f97\u5230\u975e\u9012\u51cf\u6570\u5217\u5c31\u4e00\u5b9a\u8981\u4ea4\u6362 $4$ \u548c $2$ \uff0c\u4f46\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a $4+2=6$ \u662f\u5076\u6570\u3002\n- \u7b2c\u4e09\u7ec4\u6d4b\u8bd5\uff0c\u6ca1\u6709\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u5176\u6392\u5e8f\u6210\u975e\u9012\u51cf\u6570\u5217\u3002\n- \u7b2c\u56db\u7ec4\u6d4b\u8bd5\uff0c\u8be5\u6570\u5217\u5df2\u7ecf\u662f\u975e\u9012\u51cf\u6570\u5217\u4e86\u3002\n\n#### 2.2 \u89e3\u9898\u601d\u8def\n\n\u5192\u6ce1\u6392\u5e8f\uff01\u6211\u4eec\u56de\u987e\u5192\u6ce1\u6392\u5e8f\uff0c\u5982\u679c\u60f3\u5c06\u4e00\u4e2a\u6570\u653e\u5230\u5b83\u8be5\u653e\u7684\u4f4d\u7f6e\u4e0a\uff0c\u5219\u5b83\u9700\u8981\u548c\u5b83\u540e\u9762\u6240\u6709\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\u4ea4\u6362\u3002\u6240\u4ee5\u672c\u9898\u6211\u4eec\u8981\u8003\u8651\u7684\u5c31\u662f\uff1a\u662f\u5426\u6709\u6570\u5b57\u5b58\u5728\u540e\u9762\u6709 **\u6bd4\u5b83\u5c0f** \u7684\u6570\u5b57\u4e14 **\u5947\u5076\u6027** \u548c\u5b83\u76f8\u540c\u3002\n\n\u6211\u4eec\u53ef\u4ee5 $O(n^2)$ \u66b4\u529b\u7684\u53bb\u5224\u65ad\u8fd9\u4e2a\u4e8b\u60c5\uff0c\u4e0d\u8fc7\u770b\u4e86\u773c\u6570\u636e\u8303\u56f4\uff0c\u8fd8\u662f\u7b97\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u4ece\u540e\u5f80\u524d\u8003\u8651\uff0c\u4e00\u4e2a\u6570\u4e00\u5b9a\u4f1a\u548c\u5b83\u524d\u9762\u6240\u6709\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u4ea4\u6362\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4ece\u540e\u5411\u524d\u679a\u4e3e\uff0c\u8bb0\u5f55\u679a\u4e3e\u8fc7\u7684\u6570\u5217\u4e2d\u6700\u5c0f\u7684\u5947\u6570\u548c\u5076\u6570\u3002\n\n\u5982\u679c\u5f53\u524d\u679a\u4e3e\u5230\u5947\u6570\u4e14\u8bb0\u5f55\u7684\u5947\u6570\u6bd4\u5b83\u5c0f\uff0c\u5219\u8bf4\u660e\u8be5\u5947\u6570\u540e\u9762\u5b58\u5728\u4e00\u4e2a **\u6bd4\u5b83\u5c0f** \u7684 **\u5947\u6570** \u3002\n\n\u540c\u7406\uff0c\u5982\u679c\u5f53\u524d\u679a\u4e3e\u5230\u5076\u6570\u4e14\u8bb0\u5f55\u7684\u5076\u6570\u6bd4\u5b83\u5c0f\uff0c\u5219\u8bf4\u660e\u8be5\u5076\u6570\u540e\u9762\u5b58\u5728\u4e00\u4e2a **\u6bd4\u5b83\u5c0f** \u7684 **\u5076\u6570** \u3002\n\n\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\u90fd\u662f\u65e0\u6cd5\u5c06\u539f\u6570\u5217\u6392\u5e8f\u6210\u975e\u9012\u51cf\u6570\u5217\u7684\u3002\u5176\u5b83\u60c5\u51b5\u5373\u53ef\u4ee5\u3002\n\n#### 2.3 \u89e3\u9898\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint T,n;\nint a[100010];\nint main()\n{\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n        int odd=2147483647,even=2147483646;//\u521d\u59cb\u7684\u5947\u5076\u6570\u4e00\u5b9a\u6bd4\u6240\u6709\u6570\u90fd\u5927\uff08\u5927\u4e8e1e9\uff09\n        bool flag=true;\n        for(int i=n;i>=1;i--)\n        {\n            if(a[i]%2)\n            {\n                if(odd<a[i]){flag=false;break;}\n                odd=a[i];\n            }\n            else\n            {\n                if(even<a[i]){flag=false;break;}\n                even=a[i];\n            }\n        }\n        if(flag)printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}\n```\n\n#### 2.4 \u89e3\u9898\u5fc3\u5f97\n\n\u5343\u4e07\u522b\u60f3\u590d\u6742\u3002\u6b64\u9898\u8003\u573a\u4e0a\u9996\u5148\u60f3\u5c06\u539f\u6570\u5217\u6392\u5e8f\u7136\u540e\u8bb0\u5f55\u4e0b\u6807\uff0c\u53d1\u73b0\u505a\u4e0d\u4e86\u3002\u53c8\u60f3\u4e8c\u5206\u7b54\u6848\uff0c\u5199\u5b8c\u53d1\u73b0\u4e0d\u6ee1\u8db3\u7b54\u6848\u5355\u8c03\u3002\u5728\u5b9e\u73b0\u7b97\u6cd5\u524d\u4e00\u5b9a\u8981\u8003\u8651\u7b97\u6cd5\u662f\u5426\u6b63\u786e\uff0c\u5426\u5219\u5b9e\u73b0\u4e5f\u662f\u767d\u5b9e\u73b0\u3002\n\n\u6b64\u9898\u8003\u573a\u63a5\u8fd1\u4e00\u5c0f\u65f6\uff0c\u4e3a D \u9898\u6ca1\u65f6\u95f4\u505a\u9020\u6210\u4e0d\u5c0f\u7684\u5f71\u54cd\u3002",
        "postTime": 1644899043,
        "uid": 74352,
        "name": "lsr1409111459",
        "ccfLevel": 4,
        "title": "CF1638B Odd Swap Sort"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u5143\u7d20\u7684\u6570\u5217 $s$\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5c06\u76f8\u90bb\u4e24\u4e2a\u76f8\u52a0\u4e3a\u5947\u6570\u7684\u5143\u7d20\u4ea4\u6362\uff0c\u95ee\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\u7ecf\u8fc7\u82e5\u5e72\u6b21\u4ea4\u6362\u4f7f $s$ \u975e\u4e25\u683c\u9012\u589e\uff08$\\forall 1\\le i\\le n - 1, s_i \\le s_{i+1}$\uff09\u3002\n\n## \u601d\u8def\u5206\u6790\n\n\u56e0\u4e3a\u6bcf\u6b21\u4ea4\u6362\u7684\u4e24\u4e2a\u6570\u76f8\u52a0\u4e3a\u5947\u6570\uff0c\u6240\u4ee5\u7edd\u5bf9\u662f\u4e00\u5947\u4e00\u5076\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5947\u6570\u4e4b\u95f4\u7684\u987a\u5e8f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5076\u6570\u4e4b\u95f4\u7684\u987a\u5e8f\u4e5f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u53ea\u4e5f\u5947\u5076\u4e4b\u95f4\u624d\u4f1a\u4ea7\u751f\u987a\u5e8f\u7684\u53d8\u5316\u3002\n\n\u90a3\u4e48\u8be5\u9898\u5c31\u8f6c\u5316\u6210\uff1a\u5947\u6570\u5b50\u5e8f\u5217\u662f\u5426\u975e\u4e25\u683c\u9012\u589e\u4e0e\u5076\u6570\u5b50\u5e8f\u5217\u662f\u5426\u975e\u4e25\u683c\u9012\u589e\u3002\n\n\u56e0\u4e3a\u5982\u679c\u5947\u6570\u5b50\u5e8f\u5217\u5448\u975e\u4e25\u683c\u9012\u589e\u4e14\u5076\u6570\u5b50\u5e8f\u5217\u5448\u975e\u4e25\u683c\u9012\u589e\u65f6\uff0c\u603b\u6709\u4e00\u79cd\u65b9\u6cd5\u4f7f\u6574\u4e2a\u6570\u5217\u975e\u4e25\u683c\u9012\u589e\u3002\n\n\u6240\u4ee5\u53ea\u8981\u5224\u65ad\u5947\u5076\uff0c\u5e76\u5224\u65ad\u975e\u4e25\u683c\u9012\u589e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 1e5 + 1;\n\nint t, n;\nint arr[maxn];\nint odd_last = 0, even_last = 0;\nbool flag = false;\n\nvoid init() {\n    flag = false;\n    odd_last = even_last = 0;\n}\n\nint main() {\n    cin >> t;\n    while (t--) {\n        init();\n        cin >> n;\n        for (int i = 1; i <= n; i++) {\n            cin >> arr[i];\n            if (arr[i] % 2 == 0) {\n                if (arr[i] < arr[even_last] && !flag) {\n                    cout << \"No\" << endl;\n                    flag = true;\n                }\n                even_last = i;\n            } else {\n                if (arr[i] < arr[odd_last] && !flag) {\n                    cout << \"No\" << endl;\n                    flag = true;\n                }\n                odd_last = i;\n            }\n        }\n        if (!flag) cout << \"Yes\" << endl;\n    }\n    return 0;\n}\n\n```\n\n[R69409852](https://www.luogu.com.cn/record/69409852)\uff0c\u5b8c\u7f8eAC\u3002",
        "postTime": 1644889826,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "CF1638B Odd Swap Sort"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u73b0\u5728\u6709\u4e00\u4e2a\u5e8f\u5217 $a_1 , a_2,\\dots,a_n$ \uff0c\u4f60\u53ef\u4ee5\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u548c\u4e3a\u5947\u6570\u7684\u6570\uff0c\u95ee\u662f\u5426\u80fd\u591f\u4f7f\u5e8f\u5217\u6709\u5e8f\u3002\u53ef\u4ee5\u8f93\u51fa `Yes` , \u4e0d\u53ef\u4ee5\u8f93\u51fa `No`\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/1638/B)\n\n## \u601d\u8def\n\n\u4e5f\u662f\u4e00\u9053\u6c34\u9898\u3002\n\n\u663e\u7136\u8fd9\u9053\u9898\u8ddf\u9006\u5e8f\u5bf9\u6709\u5173\u3002\u7531\u4e8e\u4ea4\u6362\u6392\u5e8f\uff0c\u6240\u4ee5\u6bcf\u4e00\u5bf9\u9006\u5e8f\u5bf9\u90fd\u4e00\u5b9a\u4f1a\u88ab\u4ea4\u6362\u3002\u6240\u4ee5\u53ea\u9700\u68c0\u67e5\u9006\u5e8f\u5bf9\u4e2d\u662f\u5426\u6709\u548c\u4e3a\u5076\u6570\u7684\u5c31\u884c\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e24\u4e2a `multiset` \u6765\u5206\u522b\u4fdd\u5b58\u5947\u6570\u548c\u5076\u6570\u3002\u6839\u636e\u5947\u5076\u6027\uff0c\u663e\u7136 \u5947\u6570+\u5076\u6570=\u5947\u6570\u3002\u6240\u4ee5\u5982\u679c $a_i$ \u662f\u5947\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u5728\u5947\u6570\u591a\u91cd\u96c6\u4e2d\u67e5\u627e $a_i$ \u3002\u82e5 $a_i$ \u4e0d\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8868\u793a\u6709\u53ef\u4ee5\u4e0e\u5176\u548c\u4e3a\u5076\u6570\u7684\u9006\u5e8f\u5bf9\uff0c\u7b54\u6848\u4e3a `No`\uff0c\u82e5\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u5220\u9664\u8be5\u5143\u7d20\uff08\u56e0\u4e3a\u9006\u5e8f\u5bf9\u662f\u7edf\u8ba1\u5411\u540e\u7684\u5143\u7d20\uff0c\u524d\u9762\u7684\u5143\u7d20\u4e3a\u5197\u4f59\u4fe1\u606f\uff09\u3002\u5982\u679c $a_i$ \u662f\u5076\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u5728\u5076\u6570\u591a\u91cd\u96c6\u4e2d\u67e5\u627e $a_i$ \u3002\u82e5 $a_i$ \u4e0d\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8868\u793a\u6709\u53ef\u4ee5\u4e0e\u5176\u548c\u4e3a\u5076\u6570\u7684\u9006\u5e8f\u5bf9\uff0c\u7b54\u6848\u4e3a `No`\uff0c\u82e5\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u5220\u9664\u8be5\u5143\u7d20\uff08\u56e0\u4e3a\u9006\u5e8f\u5bf9\u662f\u7edf\u8ba1\u5411\u540e\u7684\u5143\u7d20\uff0c\u524d\u9762\u7684\u5143\u7d20\u4e3a\u5197\u4f59\u4fe1\u606f\uff09\u3002\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint T;\nint N;\nint Num[200010];\nmultiset< int > odd;\nmultiset< int > even;\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin >> T;\n    while(T--) {\n        cin >> N;\n        odd.clear();\n        even.clear();\n        for(int i = 1; i <= N; i++) {\n            cin >> Num[i];\n            if(Num[i] % 2 == 0) {\n                even.insert(Num[i]);\n            }\n            else {\n                odd.insert(Num[i]);\n            }\n        }\n        for(int i = 1; i <= N; i++) {\n            if(Num[i] % 2 == 0) {\n                multiset< int >::iterator it = even.find(Num[i]);\n                if(it != even.begin()) {\n                    cout << \"No\" << endl;\n                    goto end;\n                }\n                even.erase(it);\n            }\n            if(Num[i] % 2 == 1) {\n                multiset< int >::iterator it = odd.find(Num[i]);\n                if(it != odd.begin()) {\n                    cout << \"No\" << endl;\n                    goto end;\n                }\n                odd.erase(it);\n            }\n        }\n        cout << \"Yes\" << endl;\n        end:\n            continue;\n    }   \n    return 0;\n}\n```",
        "postTime": 1644888307,
        "uid": 461426,
        "name": "CmsMartin",
        "ccfLevel": 6,
        "title": "CF1638B Odd Swap Sort"
    },
    {
        "content": "**\u7b80\u8981\u9898\u610f\uff1a**\n>\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u4e4b\u548c\u4e3a\u5947\u6570\u624d\u53ef\u4ee5\u4ea4\u6362\u8fd9\u4e24\u4e2a\u6570\u7684\u4f4d\u7f6e\uff0c\u8bf7\u95ee\u80fd\u5426\u901a\u8fc7\u4ea4\u6362\u4f7f\u5f97\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\u3002  \n\n**\u601d\u8def\u5206\u6790\uff1a**  \n\u9996\u5148\uff0c\u53ea\u6709\u76f8\u90bb\u7684\u6570\u80fd\u591f\u4ea4\u6362\uff0c\u8fd9\u4e00\u70b9\u548c\u5192\u6ce1\u6392\u5e8f\u5f88\u50cf\u3002\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u53c2\u8003\u5176\u601d\u8def\u3002\u6bcf\u4e00\u8f6e\u90fd\u5c06\u6700\u5c0f\u7684\u5f85\u6392\u5e8f\u6570\u79fb\u5230\u6700\u5de6\u8fb9\u3002\u663e\u7136\u6bcf\u4e00\u8f6e\u5192\u6ce1\u65f6\uff0c\u5bf9\u4e4b\u524d\u51e0\u8f6e\u5df2\u7ecf\u6709\u5e8f\u7684\u6700\u5de6\u8fb9\u7684\u6570\u6ca1\u6709\u5f71\u54cd\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9012\u63a8\u5730\u6765\u7406\u89e3\u3002 n \u4e2a\u6570\u8fdb\u884c\u4e00\u8f6e\u6392\u5e8f\u540e\uff0c\u6700\u5de6\u8fb9\u7684\u5df2\u7ecf\u662f\u6700\u5c0f\u7684\u4e86\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5224\u65ad\u540e $n-1$ \u4e2a\u6570\u662f\u5426\u80fd\u6392\u6210\u6709\u5e8f\u3002\n\n**\u5173\u952e\u70b9\uff1a**\n- \u6bcf\u6b21\u5c06\u6700\u5c0f\u7684\u79fb\u81f3\u6700\u5de6\u8fb9\u3002\n- \u6bcf\u4e00\u8f6e\u4e0d\u6539\u53d8\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff08\u9664\u4e86\u6700\u5c0f\u7684\u5143\u7d20\uff09\u3002\n- \u82e5\u6700\u5c0f\u7684\u65e0\u6cd5\u79fb\u5230\u6700\u5de6\u8fb9\uff0c\u5219\u65e0\u6cd5\u6392\u6210\u6709\u5e8f\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\uff0c\u5728\u67d0\u4e00\u8f6e\u6392\u5e8f\u540e\uff0c\u65e0\u5e8f\u90e8\u5206\u6700\u5c0f\u7684\u5143\u7d20\u5de6\u4fa7\u7684\u5143\u7d20\u5fc5\u987b\u5747\u4e0e\u8be5\u5143\u7d20\u5947\u5076\u6027\u4e0d\u540c\u3002  \n\u53c8\u77e5\u9053\uff0c\u65e0\u5e8f\u90e8\u5206\u7684\u6700\u5c0f\u5143\u7d20\u4e00\u5b9a\u6bd4\u5b83\u5de6\u4fa7\u7684\u65e0\u5e8f\u90e8\u5206\u5143\u7d20\u5c0f\uff0c\u6bd4\u6709\u5e8f\u90e8\u5206\u5143\u7d20\u5927\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\u6210\uff1a\u5bf9\u4efb\u610f\u5143\u7d20\uff0c\u5176\u5de6\u4fa7\u7684\u6bd4\u5b83\u5927\u7684\u5143\u7d20\u5fc5\u987b\u5747\u4e0e\u8be5\u5143\u7d20\u5947\u5076\u6027\u4e0d\u540c\u3002  \n\n~~\u6211\u7b2c\u4e00\u904d\u5c31\u662f\u7167\u7740\u8fd9\u4e2a\u601d\u8def\u6253\u4ee3\u7801\u7684\uff0c\u8fd8\u79bb\u6563\u5316\u540e\u7528\u4e86\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u4e0d\u77e5\u9053\u54ea\u91cc WA \u4e86\u3002\u5199\u9898\u89e3\u5f97\u65f6\u5019\u624d\u53d1\u73b0\u6811\u72b6\u6570\u7ec4\u5fd8\u8bb0\u521d\u59cb\u5316 0 \u4e86\uff0c\u52a0\u4e86\u521d\u59cb\u5316\u4ee5\u540e\u5149\u521d\u59cb\u5316\u5c31\u8d85\u65f6\u4e86 emmm \u3002~~    \n\n\u540e\u6765\u4ed4\u7ec6\u4e00\u60f3\uff0c\u53d1\u73b0\u9898\u76ee\u8fd8\u53ef\u4ee5\u7b80\u5316\u5f97\u66f4\u7b80\u5355\uff1a\u4efb\u610f\u5143\u7d20\u5de6\u4fa7\u6bd4\u5b83\u5927\u5f97\u5143\u7d20\u90fd\u4e0e\u5b83\u5947\u5076\u6027\u4e0d\u540c\uff0c\u9006\u5426\u547d\u9898\u5c31\u662f\u4efb\u610f\u5143\u7d20\u5de6\u4fa7\u4e0e\u5b83\u5947\u5076\u6027\u76f8\u540c\u5f97\u5143\u7d20\u90fd\u6bd4\u5b83\u5c0f\u3002\u90a3\u4e48\u5c31\u66f4\u7b80\u5355\u4e86\uff0c\u53ea\u9700\u8981\u5947\u6570\u5143\u7d20\u548c\u5076\u6570\u5143\u7d20\u5206\u522b\u5355\u8c03\u9012\u589e\u5c31\u884c\u4e86\u3002  \n\n**\u9644 AC \u4ee3\u7801\uff1a**  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,t,a;\nint main(){\n\tcin>>t;\n\twhile(t--){\n\t\tcin>>n;\n\t\tvector<int>odd,even;\n\t\twhile(n--){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a%2)odd.push_back(a);\n\t\t\telse even.push_back(a);\n\t\t}\n\t\tint flag=0;\n\t\tfor(int i=1;i<odd.size();i++)if(odd[i]<odd[i-1])flag=1;\n\t\tfor(int i=1;i<even.size();i++)if(even[i]<even[i-1])flag=1;\n\t\tif(flag)cout<<\"NO\"<<endl;\n\t\telse cout<<\"YES\"<<endl;\n\t}\n\treturn 0;\n}\n```\n  \n  \n**\u9644\u8d85\u65f6\u7684\u6811\u72b6\u6570\u7ec4\u4ee3\u7801:** \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint a[N],b[N],c[N],t,n;\nstruct bitset{\n\tint a[N];\n\tvoid clear(){\n\t\tmemset(a,0,sizeof(a));\n\t}\n\tvoid add(int x,int y){\n\t\twhile(x<=n){\n\t\t\ta[x]+=y;\n\t\t\tx+=x&-x;\n\t\t}\n\t}\n\tint ask(int x){\n\t\tint sum=0;\n\t\twhile(x){\n\t\t\tsum+=a[x];\n\t\t\tx-=x&-x;\n\t\t}\n\t\treturn sum;\n\t}\n}odd,even;\nint main(){\n\tcin>>t;\n\twhile(t--){\n\t\tcin>>n;\n\t\todd.clear();\n\t\teven.clear();\n\t\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),c[i]=b[i]=a[i];\n\t\tsort(a+1,a+n+1);\n\t\tint len=unique(a+1,a+n+1)-a-1;\n\t\tfor(int i=1;i<=n;i++)b[i]=lower_bound(a+1,a+len+1,b[i])-a;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(c[i]%2){\n\t\t\t\todd.add(b[i],1);\n\t\t\t\tif(odd.ask(len)-odd.ask(b[i])){\n\t\t\t\t\tcout<<\"NO\"<<endl;\n\t\t\t\t\tgoto end;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\teven.add(b[i],1);\n\t\t\t\tif(even.ask(len)-even.ask(b[i])){\n\t\t\t\t\tcout<<\"NO\"<<endl;\n\t\t\t\t\tgoto end;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<\"YES\"<<endl;\n\t\tend:;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1644887646,
        "uid": 27423,
        "name": "windflower",
        "ccfLevel": 5,
        "title": "CF1638B Odd Swap Sort"
    }
]