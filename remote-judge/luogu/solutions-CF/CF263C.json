[
    {
        "content": "\u9996\u5148\uff0c\u53ef\u4ee5\u660e\u786e\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u8d85\u8fc7\u4e86 $4$ \u6b21\uff0c\u90a3\u4e48\u8fd9\u4e2a\u80af\u5b9a\u6784\u9020\u4e0d\u6210\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa `-1`\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u5f88\u597d\u8bc1\uff0c\u56e0\u4e3a\u6ca1\u6709\u91cd\u590d\u7684\u6570\u5bf9\uff0c\u6240\u4ee5\u4e00\u4e2a\u6570\u53ea\u6709\u53ef\u80fd\u8fde\u51fa\u53bb\u8fde\u5230\u5de6\u8fb9\u53f3\u8fb9\uff0c\u6216\u8005\u5de6\u8fb9\u7684\u5de6\u8fb9\uff0c\u53f3\u8fb9\u7684\u53f3\u8fb9\uff0c\u5982\u679c\u5b58\u5728\u51fa\u73b0\u91cd\u590d\u7684\u6570\u5bf9\uff0c\u663e\u7136\u4e0d\u4f1a\u6210\u7acb\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5f53\u524d\u8fd9\u4e2a $1$\uff0c\u56e0\u4e3a\u8f93\u51fa\u7684\u987a\u5e8f\u662f\u4efb\u610f\u7684\uff0c\u4e0d\u59a8\u5c06 $1$ \u53d8\u4e3a\u7b2c $1$ \u4e2a\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u975e\u5e38\u96be\u505a\uff0c\u56e0\u4e3a\u4ed6\u6709\u597d\u51e0\u79cd\u53ef\u80fd\u6027\uff0c\u4f46\u662f\u60f3\u5230\u4e4b\u524d\u90a3\u4e2a\u7ed3\u8bba\uff0c\u6240\u5728\u7684\u6570\u5bf9\u4ec5\u6709 $4$ \u5bf9\uff0c\u4e0d\u59a8\u786e\u5b9a\u7b2c $1,2,3$ \u4e2a\u4f4d\u7f6e\u6240\u6709\u7684\u6570\u3002\n\n\u786e\u5b9a\u5b8c\u4e86\u8fd9\u4e2a\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u63a8\u51fa\u4e0b\u4e00\u4e2a\u6570\u4e86\uff0c\u5047\u8bbe\u5176\u4e3a $a_i$\uff0c\u6211\u4eec\u77e5\u9053 $a_{i-2}$\uff0c\u4ed6\u6240\u5728\u7684\u6570\u5bf9\u6709\u4e24\u4e2a\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u5206\u522b\u4e3a $(a_{i-2},a_{i-1})$ \u548c $(a_{i-3},a_{i-2})$\uff0c\u90a3\u4e48\u8fd8\u5269\u4e0b $2$ \u4e2a\uff0c\u5206\u522b\u662f $(a_{i-2},a_{i})$ \u548c $(a_{i-2},a_{i-4})$\uff0c\u4f46\u662f\u6211\u4eec\u53c8\u77e5\u9053 $a_{i-1}$\uff0c\u56e0\u4e3a $(a_{i-1},a_{i-4})$ \u662f\u4e0d\u53ef\u80fd\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u653e\u5fc3\u5927\u80c6\u7684\u679a\u4e3e\u4e86\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <map>\nusing namespace std;\nconst int INF=5e5+5;\nint n,in[INF],fl,vis[INF];\nmap <int,map<int,int> > Map;\nstruct _node_edge{\n    int to_,next_;\n}edge[INF<<1];\nint head[INF],tot,d[INF];\nvoid add_edge(int x,int y) {\n    edge[++tot]=(_node_edge){y,head[x]};\n    head[x]=tot;return ;\n}\nvoid DFS(int xx) {\n    if (xx>n) {\n        // for (int i=1;i<=n;i++)\n        //     cout<<d[i]<<\" \";\n        // cout<<Map[1][5]<<\" \"<<Map[d[1]][d[n-1]]<<\" \"<<Map[d[2]][d[n]]<<\"\\n\";\n        if (Map[d[n]][d[1]] && Map[d[n-1]][d[1]] && Map[d[n]][d[2]]) {\n                for (int i=1;i<=n;i++)\n                    cout<<d[i]<<\" \";\n                fl=1;\n                return ;\n            }\n        return ;\n    }\n    for (int i=head[d[xx-1]];i;i=edge[i].next_) {\n        int v=edge[i].to_;\n        if (!Map[d[xx-1]][v] && !Map[v][d[xx-1]]) continue;\n        if (!Map[d[xx-2]][v] && !Map[v][d[xx-2]]) continue;\n        if (vis[v]) continue;\n        d[xx]=v;\n        vis[v]=1;\n        DFS(xx+1);\n        vis[v]=0;\n        if (fl) return ;\n    }\n    return ;\n}\nsigned main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n*2;i++) {\n        int a=0,b=0;\n        scanf(\"%d %d\",&a,&b);\n        in[a]++;in[b]++;\n        if (in[a]>4 || in[b]>4) {\n            cout<<\"-1\\n\";\n            return 0;\n        }\n        add_edge(a,b);add_edge(b,a);\n        Map[a][b]=Map[b][a]=1;\n    }\n    d[1]=1;\n    for (int i=head[1];i;i=edge[i].next_) {\n        for (int j=head[1];j;j=edge[j].next_) {\n            int v=edge[i].to_,v1=edge[j].to_;\n            if (v==v1) continue;\n            // cout<<v<<\" \"<<v1<<\" over1\\n\";\n            if (!Map[v][v1] && !Map[v1][v]) continue;\n            // cout<<v<<\" \"<<v1<<\" over\\n\";\n            d[2]=v;d[3]=v1;Map[v][1]=0;\n            Map[v1][1]=0;Map[v][v1]=0;\n            Map[1][v]=0;\n            Map[1][v1]=0;Map[v1][v]=0;\n            vis[1]=vis[v]=vis[v1]=1;\n            DFS(4);\n            if (fl) return 0;\n            Map[v][1]=1;\n            Map[v1][1]=1;Map[v][v1]=1;\n            Map[1][v]=1;\n            Map[1][v1]=1;Map[v1][v]=1;\n            vis[1]=vis[v]=vis[v1]=0;\n        }\n    }\n    cout<<\"-1\\n\";\n    return 0;\n}\n```\n",
        "postTime": 1644327383,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF263C"
    }
]