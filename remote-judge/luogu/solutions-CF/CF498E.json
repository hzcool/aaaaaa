[
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/wangrx/solution-cf498e)\n\n## \u9898\u76ee\u5927\u610f\n\u5df2\u77e5\u4e00\u6392\u9ad8\u5ea6\u4e3a $1$ \u5230 $7$ \u7684\u6574\u6570\u7684\uff0c\u5355\u8c03\u4e0d\u964d\u7684\u9636\u68af\uff0c\u9ad8\u5ea6\u4e3a $i$ \u7684\u9636\u68af\u6709 $w_i$ \u4e2a\u3002  \n\u4f60\u8981\u7ed9**\u9636\u68af\u5757**\u7684**\u8fb9\u6cbf**\u4e0a\u8272\uff0c\u8981\u6c42**\u6574\u4e2a\u9636\u68af**\u7684\u8fb9\u7f18\u5fc5\u987b\u4e0a\u8272\u3002  \n\u6c42\u4e0a\u8272\u7684\u65b9\u6848\u6570\uff0c\u7b54\u6848\u5bf9 $10^9+7$ \u53d6\u6a21\u3002  \n$\\texttt{Data Range: }0\\le w_i\\le10^5$\n\n------------------------------\n## \u9898\u89e3\n\u975e\u5e38\u597d\u7684\u4e00\u9053\u9898\uff0c\u6709\u5229\u4e8e\u63d0\u5347\u5bf9\u72b6\u538b dp \u7684\u7406\u89e3\u3002  \n\n\u9996\u5148\u80af\u5b9a\u662f\u7528 $0$ \u8868\u793a\u4e0a\u4e86\u8272\uff0c$1$ \u8868\u793a\u6ca1\u4e0a\u8272\u3002  \n\uff08\u4e3a\u4ec0\u4e48\u4e0d\u662f\u53cd\u8fc7\u6765\uff1f \u56e0\u4e3a\u6574\u4e2a\u9636\u68af\u7684\u8fb9\u7f18\u5fc5\u987b\u4e0a\u8272\uff0c\u8fd9\u6837\u9636\u68af\u4e0a\u5347\u7684\u65f6\u5019\u8865 $0$ \u5c31\u884c\uff09  \n\n\u8bbe $dp_{i,k}$ \u8868\u793a\u7b2c $i$ \u5217\u9636\u68af**\u53f3\u4fa7\u8fb9\u6cbf**\u6d82\u8272\u72b6\u6001\u4e3a $k$ \u7684\u65b9\u6848\u603b\u6570\u3002  \n\uff08$i=0$ \u65f6\uff0c\u8868\u793a\u7684\u662f\u7b2c $1$ \u4e2a\u9636\u68af\u7684\u5de6\u4fa7\u8fb9\u6cbf\uff09  \n\n$k$ \u4e3a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\uff0c\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u4f9d\u6b21\u8868\u793a\u9636\u68af\u4ece\u4f4e\u5230\u9ad8\u7684\u6d82\u8272\u72b6\u6001\u3002  \n\uff08\u7531\u4e8e\u5de6\u53f3\u4e24\u4fa7\u8fb9\u7f18\u5fc5\u987b\u4e0a\u8272\uff0c\u53ef\u77e5\u521d\u59cb\u72b6\u6001 $dp_{0,0}=1$\uff0c\u7b54\u6848\u4e3a $dp_{\\sum w_i,0}$\uff09\n\n\u8003\u8651 $dp_{i-1,j}$ \u548c $dp_{i,k}$ \u4e4b\u95f4\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4e8c\u8005\u4e4b\u95f4\u6a2a\u7ebf\u7684\u6d82\u8272\u72b6\u6001\uff1a  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/encibtj9.png)\n\n\u7531\u6b64\u53ef\u77e5\uff0c\n- \u5f53\u9636\u68af\u5757\u7684\u5de6\u53f3\u4e24\u4fa7\u540c\u65f6\u6d82\u8272\u65f6\uff0c\u4e0a\u4e0b\u4e24\u4fa7\u4e0d\u80fd\u540c\u65f6\u6d82\u8272\u3002\n- \u5f53\u9636\u68af\u5757\u7684\u5de6\u53f3\u4e24\u4fa7\u672a\u540c\u65f6\u6d82\u8272\u65f6\uff0c\u4e0a\u4e0b\u4e24\u4fa7\u80fd\u540c\u65f6\u6d82\u8272\u3002\n\n\u56e0\u6b64\uff0c\u53ea\u8981\u68c0\u67e5 $j\\operatorname{or} k$ \u7684\u6bcf\u4e00\u4f4d\uff0c\u5c31\u53ef\u4ee5\u4ee5\u63d2\u5934 dp \u7684\u5f62\u5f0f\u8f6c\u79fb\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(\\sum (2^{i})^3w_i)$ \u3002\n- \u7b2c\u4e00\u4e2a $2^i$ \u8868\u793a\u679a\u4e3e $j$ \u7684\u72b6\u6001\u3002\n- \u7b2c\u4e8c\u4e2a $2^i$ \u8868\u793a\u679a\u4e3e $k$ \u7684\u72b6\u6001\u3002\n- \u7b2c\u4e09\u4e2a $2^i$ \u8868\u793a\u679a\u4e3e\u6a2a\u7ebf\u7684\u72b6\u6001\u3002  \n\n\u663e\u7136\uff0c$w_i$ \u8f83\u5927\u7684\u65f6\u5019\uff0c\u8be5\u505a\u6cd5\u4e0d\u80fd\u901a\u8fc7\u3002\n\n--------------------------------\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8f6c\u79fb\u53ea\u4e0e\u9ad8\u5ea6\u548c $j,k$ \u6709\u5173\uff0c\u4e0e $i$ \u662f\u65e0\u5173\u7684\u3002  \n\u6211\u4eec\u53ef\u4ee5\u5c06 \u7b2c $i-1$ \u5217\u53f3\u4fa7\u8fb9\u6cbf**\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001**   \n\u81f3 \u7b2c $i$ \u5217\u53f3\u4fa7\u8fb9\u6cbf**\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001** \u7684\u8f6c\u79fb\u5199\u6210\u4e00\u4e2a\u77e9\u9635 $A$\u3002  \n\u5177\u4f53\u7684\uff0c\u6784\u9020\u65b9\u9635 $A$\uff0c$A_{k,j}$ \u8868\u793a $dp_{i-1,j}$ \u5411 $dp_{i,k}$ \u7684\u8d21\u732e\u3002  \n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u5b8c\u6210\u540c\u4e00\u9ad8\u5ea6\u7684\u8f6c\u79fb\u4e86\u3002  \n\u81f3\u4e8e\u5982\u4f55\u6784\u9020 $A$\uff0c\u66b4\u529b\u679a\u4e3e $j,k$\uff0c\u6309\u7167\u539f\u6765\u7684\u65b9\u6cd5\u8003\u8651\u6a2a\u7ebf\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u4e86\u3002  \n$\\Theta(\\sum (2^i)^2)$ \u5c31\u53ef\u4ee5\u9012\u63a8\u5730\u5c06 $7$ \u4e2a\u77e9\u9635\u5168\u90e8\u6784\u9020\u51fa\u6765\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u88ab\u4f18\u5316\u5230 $\\Theta(\\sum (2^{i})^3\\log w_i)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n```cpp\n#include<stdio.h>\n#include<string.h>\ntypedef unsigned long long ull;\ntypedef unsigned int word;\ntypedef unsigned char byte;\nstruct READ{//\u5feb\u8bfb\n\tchar c;\n\tinline READ(){c=getchar();}\n\ttemplate<typename type>\n\tinline READ& operator>>(register type& num){\n\t\twhile('0'>c||c>'9') c=getchar();\n\t\tfor(num=0;'0'<=c&&c<='9';c=getchar())\n\t\t\tnum=num*10+(c-'0');\n\t\treturn *this;\n\t}\n}cin;\nconst word mod=1e9+7;\ntemplate<word msize,word nsize>\nstruct matrix{//\u77e9\u9635\n\tword num[msize][nsize];\n\tinline matrix(){}\n\tinline matrix(const matrix&p){\n\t\tmemcpy(num,p.num,sizeof(num));}\n\tinline word* operator[](word id){return num[id];}\n\ttemplate<word lsize>\n\tinline matrix<msize,lsize> operator*\n\t\t(const matrix<nsize,lsize>&p){//\u77e9\u9635\u4e58\u6cd5\n\t\t\tmatrix<msize,lsize> out;\n\t\t\tregister ull ans;\n\t\t\tfor(register word i=0;i<msize;++i)\n\t\t\t\tfor(register word j=0;j<lsize;++j){\n\t\t\t\t\tfor(register word k=ans=0;k<nsize;++k){\n\t\t\t\t\t\tans+=(ull)(num[i][k])*p.num[k][j]%mod;\n\t\t\t\t\t\tif(ans>=mod) ans-=mod;\n\t\t\t\t\t}\n\t\t\t\t\tout[i][j]=ans;\n\t\t\t\t}\n\t\t\treturn out;\n\t\t}\n};\ntemplate<word size>\nstruct vector: public matrix<size,1>{//\u5411\u91cf\uff08\u6d3e\u751f\u81ea\u77e9\u9635\uff09\n\tinline vector(){}\n\ttemplate<typename type>\n\tinline vector(const type &p){\n\t\tmemcpy(matrix<size,1>::num,p.num,\n\t\t\tsizeof(matrix<size,1>::num));}\n\tinline word& operator[](word id){\n\t\treturn matrix<size,1>::num[id][0];}\n};\n//0 \u6d82\u4e86\n//1 \u6ca1\u6d82\ntemplate<byte size>\nstruct getans{//\u540c\u4e00\u9ad8\u5ea6\u7684\u8f6c\u79fb\n\tmatrix<1<<(size+1),1<<(size+1)> A0,A1;\n\t// A0 \u8868\u793a\u9876\u7aef\u6a2a\u7ebf\u6d82\u4e86\u65f6\u7684\u8d21\u732e\n\t// A1 \u8868\u793a\u9876\u7aef\u6a2a\u7ebf\u6ca1\u6d82\u65f6\u7684\u8d21\u732e\n\tvector<1<<(size+1)> out;\n\tgetans<size-1> down;\n\tinline getans():down(){\n\t\t//O(n^2) \u679a\u4e3e\n\t\tfor(register word i=0;i<1u<<(size+1);++i)\n\t\t\tfor(register word j=0;j<1u<<(size+1);++j){\n\t\t\t\tregister word num0=down.A0[i&~(1<<size)][j&~(1<<size)];\n\t\t\t\tregister word num1=down.A1[i&~(1<<size)][j&~(1<<size)];\n\t\t\t\t//\u8003\u8651\u9876\u7aef\u6a2a\u7ebf\uff0c\u8fdb\u884c\u9012\u63a8\n\t\t\t\tif((i|j)>>size&1) A0[i][j]=A1[i][j]=(num0+num1)%mod;\n\t\t\t\t// \u5de6\u53f3\u4e0d\u540c\u65f6\u6d82\u8272\uff0c\u4e0a\u4e0b\u53ef\u540c\u65f6\u6d82\u8272\n\t\t\t\telse A0[i][j]=num1,A1[i][j]=(num0+num1)%mod;\n\t\t\t\t// \u5de6\u53f3\u540c\u65f6\u6d82\u8272\uff0c\u4e0a\u4e0b\u4e0d\u80fd\u540c\u65f6\u6d82\u8272\n\t\t\t}\n\t}\n\tinline word operator()(){\n\t\tdown();\n\t\tmemcpy(out.num,down.out.num,4u<<size);\n\t\tmemset(out.num+(1u<<size),0,4u<<size);\n\t\t//\u9ad8\u5ea6\u589e\u52a0\u65f6\u8865\u9f50 0\n\t\tregister word k;\n\t\tfor(cin>>k;k;k>>=1){\n\t\t\tif(k&1) out=A0*out;\n\t\t\tA0=A0*A0;\n\t\t}//\u77e9\u9635\u5feb\u901f\u5e42\n\t\treturn out[0];//\u6700\u53f3\u4fa7\u6a2a\u7ebf\u5fc5\u6d82\u8272\n\t}\n};\ntemplate<>\nstruct getans<0xff>{//\u8fb9\u754c\u60c5\u51b5\n\tmatrix<1,1> A0,A1;\n\tvector<1> out;\n\tinline getans(){A0[0][0]=1,A1[0][0]=0;}//\u5e95\u7aef\u6a2a\u7ebf\u5fc5\u6d82\u8272\n\tinline word operator()(){return out[0]=1;}//\u6700\u5de6\u4fa7\u6a2a\u7ebf\u5fc5\u6d82\u8272\n};\ngetans<6> f;\nint main(){\n\tprintf(\"%u\",f());\n\treturn 0;\n}\n\n```",
        "postTime": 1616137790,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF498E Stairs and Lines"
    },
    {
        "content": "\u9996\u5148\u770b\u5230\u9ad8\u5ea6\u5f88\u5c0f\uff0c\u8003\u8651\u72b6\u538b\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u5217\u7684\u6a2a\u7ebf\u4e0d\u4f1a\u5bf9\u4e0b\u4e00\u5217\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u679a\u4e3e\u6a2a\u7ebf\u653e\u5230\u8f6c\u79fb\u4e2d\u3002\n\n\u56e0\u6b64\u6211\u4eec\u6709 $f_{i,S}$ \u8868\u793a\u5f53\u524d\u8003\u8651\u7b2c $i$ \u5217\uff0c\u8fd9\u4e00\u5217\u7684\u7ad6\u7ebf\u6d82\u8272\u72b6\u6001\u4e3a $S$\uff0c\u4e14\u4e4b\u524d\u7684\u5168\u90e8\u5408\u6cd5\u7684\u65b9\u6848\u6570\u3002\n\n\u6211\u4eec\u5c06 $0$ \u8bbe\u4e3a\u6d82\u8272\uff0c$1$ \u8bbe\u4e3a\u4e0d\u6d82\u8272\uff0c\u8fd9\u6837\u5728\u9ad8\u5ea6\u4e0d\u540c\u7684\u5730\u65b9\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u770b\u6210\u5728\u524d\u9762\u8865 $0$\u3002\n\n\u8003\u8651\u540c\u9ad8\u5ea6\u8be5\u600e\u4e48\u505a\uff1a\n\n\u7531\u4e8e\u6bcf\u6b21\u8f6c\u79fb\u90fd\u662f\u4ece\u4e00\u4e2a\u9ad8\u5ea6 $h$ \u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u9ad8\u5ea6 $h$\uff0c\u6240\u4ee5\u6bcf\u6b21\u7684\u8f6c\u79fb\u90fd\u5e94\u5f53\u662f\u76f8\u540c\u7684\u3002\u6bcf\u4e00\u4e2a $f_{i-1,S_j}$ \u90fd\u4f1a\u4ee5\u4e00\u4e2a\u56fa\u5b9a\u7684\u7cfb\u6570\u7d2f\u52a0\u5230 $f_i,S_k$\uff0c\u8bbe\u8fd9\u4e2a\u7cfb\u6570\u4e3a $g_{S_j,S_k}$\uff0c\u53ef\u4ee5\u66b4\u529b\u6c42\u3002\n\n\u5e76\u4e14\u8fd9\u4e2a\u8f6c\u79fb\u53ea\u4e0e\u4e0a\u4e00\u5217\u7684\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u538b\u6389 $i$ \u8fd9\u4e00\u7ef4\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u505a\u4e86\u3002\u590d\u6742\u5ea6\u4e3a $O(\\sum 2^{2w}w)$\uff0c\u7206\u70b8\u4e86\u3002\n\n\u6ce8\u610f\u5230 $f$ \u7684\u5927\u5c0f\u662f $2^h$\uff0c$g$ \u7684\u5927\u5c0f\u662f $2^h \\times 2^h$\uff0c\u5e76\u4e14 $g$ \u662f\u56fa\u5b9a\u7684\u3002\u56e0\u6b64\u53ef\u4ee5\u7528\u77e9\u9635\u52a0\u901f\u9012\u63a8\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f18\u5316\u5230\u4e00\u4e2a $\\log$\uff0c\u975e\u5e38\u4f18\u79c0\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u9ad8\u660e\u7684\u6c42 $g$ \u7684\u65b9\u6cd5\uff1a\n\n\u8003\u8651\u5230\u6bcf\u4e00\u4e2a\u6b63\u65b9\u5f62\u53ea\u8981\u6709\u4e00\u6761\u8fb9\u6ca1\u88ab\u6d82\u8272\u5373\u53ef\uff0c\u56e0\u6b64\u53ea\u8981\u628a\u4e0a\u4e0b\u5de6\u53f3\u7684\u6d82\u8272\u60c5\u51b5\u6216\u8d77\u6765\u5c31\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u5408\u6cd5\u60c5\u51b5\uff0c\u5224\u65ad\u6700\u540e\u662f\u4e0d\u662f\u5168\u90e8\u5408\u6cd5\u5373\u53ef\u3002\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int MOD = 1e9 + 7, N = 128;\nint n, m = 2;\nstruct Matrix {\n    int a[N][N];\n    Matrix() { memset(a, 0, sizeof(a)); }\n    void reset() { for (int i = 0; i < N; i++) a[i][i] = 1; }\n    Matrix operator*(const Matrix &rhs) const {\n        Matrix res;\n        int r;\n        for (int i = 0; i < m; i++)\n            for (int k = 0; k < m; k++) {\n                r = a[i][k];\n                for (int j = 0; j < m; j++)\n                    res.a[i][j] = (res.a[i][j] + 1ll * rhs.a[k][j] * r % MOD) % MOD;\n            }\n        return res;\n    }\n} f, g;\nvoid init(int w) {\n    g = Matrix();\n    for (int L = 0; L < m; L++) for (int R = 0; R < m; R++) \n        for (int k = 0; (k << 1) < m; k++)\n            g.a[L][R] += (L | R | k | (k << 1)) == m - 1;\n}\nMatrix qpow(Matrix f, int b) {\n    Matrix res; res.reset();\n    for (; b; b >>= 1, f = f * f)\n        if (b & 1) res = res * f;\n    return res;\n}\nint main(void) {\n    f.reset();\n    for (int w; m <= 128; m <<= 1) {\n        scanf(\"%d\", &w);\n        if (!w) continue;\n        init(w);\n        g = qpow(g, w);\n        f = g * f;\n    }\n    printf(\"%d\\n\", f.a[0][0]);\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1637763862,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "CF498E \u9898\u89e3"
    },
    {
        "content": "## CF498E\n\n### \u9898\u610f:\n\n\u65b9\u683c\u4e2d\u7ed9\u5b9a\u4e00\u4e2a\u697c\u68af\uff0c\u9700\u8981\u5c06\u65b9\u683c\u7684\u8fb9\u7f18\u9009\u62e9\u4e00\u90e8\u5206\uff0c\u4f7f\u5f97\u9009\u62e9\u7684\u90a3\u4e9b\u90e8\u5206\u4e0d\u4f1a\u56f4\u6210\u4e00\u4e2a $1*1$ \u7684\u65b9\u683c\u3002\u697c\u68af\u7684\u8fb9\u7f18\u5fc5\u9009\uff0c\u697c\u68af\u9ad8\u5ea6\u4e0d\u8d85\u8fc7 $7$ \u3002\n\n\n\n### \u601d\u8def\uff1a\n\n\u8ba1\u6570\u95ee\u9898\uff0c\u6bcf\u4e00\u5217\u5b89\u6392\u7684\u65b9\u5f0f\u4ec5\u4ec5\u548c\u4e0a\u4e00\u5217\u6709\u5173\uff0c\u8003\u8651 $\\text{DP}$ \uff0c\u9ad8\u5ea6\u4e0d\u8d85\u8fc7 $7$ \u8fd9\u5f88\u72b6\u538b\u3002\n\n\u6211\u4eec\u8bbe $dp[i][s]$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u5217\uff0c\u8fd9\u4e00\u5217\u7ad6\u7740\u7684\u8fb9\u548c\u6a2a\u7740\u7684\u8fb9\u586b\u7684\u72b6\u6001\u65f6 $s$ \u7684\u603b\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u96be\u63a8\u51fa\u3002\n\n\u5f88\u5feb\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u5e76\u6ca1\u6709\u5fc5\u8981\u8bb0\u5f55\u6a2a\u7740\u7684\u8fb9\u7684\u72b6\u6001\uff0c\u56e0\u4e3a\u4e0b\u4e00\u6b21\u7684\u8f6c\u79fb\u4e0d\u9700\u8981\u5b83\u3002\n\n\u4e8e\u662f $dp[i][s]$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u5217\uff0c\u7ad6\u7740\u7684\u8fb9\u586b\u7684\u72b6\u6001\u4e3a $s$ \u7684\u65b9\u6848\u603b\u6570\u3002\n\n\u679a\u4e3e\u6a2a\u7740\u7684\u8fb9\u586b\u7684\u72b6\u6001\u8f6c\u79fb\u5373\u53ef\uff0c\u5224\u65ad\u6709\u4e00\u4e2a\u6bd4\u8f83\u65b9\u4fbf\u7684\u529e\u6cd5\uff1a\n\n```cpp\nif(!(j&k&(s|(1<<i))&((s<<1)|1)))\ndp[i][k]+=dp[i-1][j];\n```\n\n\u610f\u601d\u662f\u4e0a\u4e0b\u5de6\u53f3\u4e0d\u80fd\u90fd\u6709\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u9ad8\u8fbe $\\sum w_i * 2^{21}$ \u96be\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u5f53\u524d $j-k$ \u7684\u8f6c\u79fb\u7cfb\u6570\uff0c\u7136\u540e\u76f4\u63a5\u7528\u8fd9\u4e2a\u8f6c\u79fb\u7cfb\u6570\u641e\u3002\n\n\u590d\u6742\u5ea6 $\\sum w_i *2^{14} + 2^{21} *7$ \uff0c\u540c\u6837\u96be\u4ee5\u901a\u8fc7\u3002\n\n\u8003\u8651\u5230 $w_i$ \u6709\u70b9\u5927\uff0c\u7136\u800c\u8f6c\u79fb\u7cfb\u6570\u53c8\u88ab\u6211\u4eec\u641e\u51fa\u6765\u4e86\uff0c\u4e0d\u59a8\u76f4\u63a5\u77e9\u9635\u4e58\u6cd5\u4f18\u5316\u3002\n\n\u590d\u6742\u5ea6 $(7+\\sum{logw_i}) * 2^{21}$\u3002\n\n\u7a0d\u5fae\u6709\u70b9\u5927\uff0c\u77e9\u9635\u4e58\u6cd5\u7684\u65f6\u5019\u53ef\u4ee5\u6bcf $8$ \u6b21\u52a0\u6cd5\u53d6\u4e00\u6b21 $mod$ \uff0c\u5e76\u4e14\u5c0f\u77e9\u9635\u7684\u8f6c\u79fb\u5efa\u7acb\u5c0f\u77e9\u9635\u3002\n\n\u6ce8\u610f\u5904\u7406\u597d\u9ad8\u5ea6\u4e0d\u540c\u7684\u5730\u65b9\u7684\u4ea4\u63a5\u3002\n\n\u8fd9\u4e2a\u66b4\u529b\u505a\u4e00\u6b21\u8f6c\u79fb\u5c31\u884c\u4e86\u3002\n\n### \u53c2\u8003\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n#define y1 y3647\n#define next nxt\n#define LL long long\nusing namespace std;\ninline int read(int &x)\n{\n\tx=0;int f=1;\n\tchar ch=getchar();\n\twhile(ch!=45&&(ch>'9'||ch<'0'))ch=getchar();\n\tif(ch==45){f=-1,ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=x*10+ch-48;ch=getchar();}\n\tx*=f;\n}\nint i,j,k,n,s,t,m;\nconst int mod=1e9+7;\nconst int N=7e3+10;\nstruct matri{\n\tint n,m,num[128][128];\n\tfriend matri operator *(matri aa,matri bb)\n\t{\n\t\tmatri ret;\n\t\tret.n=bb.n,ret.m=aa.m;\n\t\tfor(int i=0;i<=ret.n;i++)\n\t\tfor(int j=0;j<=ret.m;j++)\n\t\t{\n\t\t\tret.num[i][j]=0;\n\t\t\tfor(int k=0;k<=aa.n;k++)\n\t\t\tret.num[i][j]=(ret.num[i][j]+1ll*aa.num[k][j]*bb.num[i][k]%mod)%mod;\n\t\t}\n\t\treturn ret;\n\t}\n}E,Z,S,Ans;\nint w[10];\ninline void quick(matri &ret,matri aa,int ss)\n{\n\twhile(ss)\n\t{\n\t\tif(ss&1)\n\t\tret=ret*aa;\n\t\taa=aa*aa;\n\t\tss>>=1;\n\t}\n}\nint dp[N][128],p[128][128];\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\t//freopen(\".ans\",\"w\",sdtout);\n\tmatri Ans;\n\tAns.n=127,S.n=S.m;\n\tfor(i=0;i<=127;i++)\n\tE.num[i][i]=1;\n\tint maxn=0;\n\tfor(i=1;i<=7;i++)\n\t{\n\t\tread(w[i]);\n\t\tif(w[i])maxn=i;\n\t}\n\tint now=0,tmp=0;\n\tif(w[1]==0)\n\tdp[now][1]=1;\n\telse\n\tdp[now][0]=1;\n\tp[0][0]=p[1][0]=p[0][1]=1;\n\tfor(i=1;i<=maxn;i++)\n\t{\n\t\ttmp|=1<<i;\n\t\tif(w[i])\n\t\t{\n\t\t\tAns.n=S.n=S.m=(1<<i)-1;\n\t\t\tfor(int j=0;j<1<<i;j++)\n\t\t\tAns.num[j][0]=dp[now][j];\n\t\t\tfor(int j=0;j<1<<i;j++)\n\t\t\tfor(int k=0;k<1<<i;k++)\n\t\t\tS.num[j][k]=p[j][k];\n\t\t\tquick(Ans,S,w[i]-1);\n\t\t\tfor(int j=0;j<1<<i;j++)\n\t\t\tdp[now][j]=Ans.num[j][0];\n\t\t}\n\t\tmemset(p,0,sizeof(p));\n\t\tif(w[i+1])\n\t\t{\t\n\t\t\tnow++;\n\t\t\tfor(k=0;k<1<<(i+1);k++)\n\t\t\tfor(s=0;s<1<<i;s++)\n\t\t\tfor(j=0;j<1<<(i+1);j++)\n\t\t\t{\n\t\t\t\tif(!(j&k&(s|(1<<i))&((s<<1)|1)))\n\t\t\t\tp[j][k]++;\n\t\t\t\tif(!((j|tmp)&k&(s|(1<<i))&((s<<1)|1)))\n\t\t\t\tdp[now][k]=(dp[now][k]+dp[now-1][j])%mod;\n\t\t\t}\n\t\t\ttmp=1<<i+1;\n\t\t}\n\t}\n\tprintf(\"%d\",dp[now][(1<<maxn)-1]);\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1621220754,
        "uid": 177535,
        "name": "CDFLS_mao_zx",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011CF498E"
    }
]