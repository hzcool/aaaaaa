[
    {
        "content": "$$\\huge\\mathcal{Solution}$$\n\u8fd9\u9053\u9898\u76ee\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u9898\u76ee\u5927\u610f**\u6a21\u62df**\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u8981\u5c0f\u5c0f\u6ef4\u5361\u4e00\u4e0b\u5e38\u3002\u3002\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u627e\u51fa\u6240\u6709\u4e0d\u5408\u6cd5\u7684\u6570\uff0c\u62ce\u4e00\u4e2a\n$\\texttt{Vector}$\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u9010\u4e2a\u679a\u4e3e\u53ef\u4ee5\u7528\u6765\u66ff\u6362\u7684\u6570\uff0c\u770b\u770b\u80fd\u5426\u6362\u6389\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u6570\uff0c\u6362\u6210\u5408\u6cd5\u7684\u3002\n\n\n\u5982\u679c\u80fd\u6362\u7684\u8bdd\uff0c\u5c31\u6362\u3002\n\n\u90a3\u4e48\u6700\u540e\u518d\u5361\u5361\u5e38\uff0c\u5408\u5e76\u51e0\u4e2a\u5faa\u73af\uff0c\u8dd1\u4e2a\u706b\u8f66\u5934\u5c31\u8fc7\u4e86\u3002\n\n\u53e6\u9644\u706b\u8f66\u5934\u4ee3\u7801\uff1a\n```cpp\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n```\n$$\\huge\\mathcal{Code}$$\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\nusing namespace std;\nint N,M;\nint Sum[2];\nint Array[200001];\nmap< int,bool >Have;\nvector< int >V;\nint main(void)\n{\n\tregister int i;\n\tcin>>N>>M;\n\tfor(i=1;i<=N;i++)\n\t{\n\t\tcin>>Array[i];\n\t\tif(Have[Array[i]]||Sum[Array[i]%2]==N/2)\n\t\t{\n\t\t\tV.push_back(i);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tHave[Array[i]]=true;\n\t\t\tSum[Array[i]%2]++;\n\t\t}\n\t}\n\tregister int Count;\n\tCount=0;\n\tfor(i=1;i<=M;i++)\n\t{\n\t\tif(Have[i]||Sum[i%2]==N/2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tArray[V[Count++]]=i;\n\t\tSum[i%2]++;\n\t\tif(Count==V.size())\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(Count<V.size())\n\t{\n\t\tcout<<-1<<endl;\n\t\treturn 0;\n\t}\n\tcout<<Count<<endl;\n\tfor(i=1;i<=N;i++)\n\t{\n\t\tcout<<Array[i]<<' ';\n\t}\n\tcout<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1599225968,
        "uid": 132168,
        "name": "_Clown_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF746E \u3010Numbers Exchange\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u597d\u9898\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6362\u5361\u7684\u64cd\u4f5c\u770b\u6210\u5c06\u67d0\u4e2a\u4f4d\u7f6e\u586b\u4e0a\u4e00\u4e2a $1$ \u5230 $m$ \u4e4b\u95f4\u7684\u6570\u3002\n\n\u9898\u76ee\u8981\u6c42\u6362\u5361\u6b21\u6570\u6700\u5c11\uff0c\u5373\u4fdd\u6301\u4e0d\u53d8\u7684\u6570\u6700\u591a\u3002\u90a3\u4e48\u6211\u4eec\u6309\u7167\u6570\u5b57\u7684\u503c\u4ece\u5927\u5230\u5c0f\u68c0\u67e5\uff0c\u5bf9\u4e8e\u7b26\u5408\u6761\u4ef6\u7684\u503c\u5c31\u76f4\u63a5\u8df3\u8fc7\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u4ece\u5927\u5230\u5c0f\u5462\uff1f\u56e0\u4e3a $m$ \u53ef\u80fd\u5c0f\u4e8e $n$\uff0c\u5982\u679c\u628a\u5927\u4e8e $m$ \u7684\u6570\u4e5f\u7ed9\u586b\u6389\u4e86\uff0c\u5269\u4e0b\u7684\u4f4d\u7f6e\u5c31\u4e0d\u591f\u586b\u4e86\u3002\uff08~~\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5566~~\uff09\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u9700\u8981\u586b\u6570\u7684\u5730\u65b9\u6309\u7167\u6570\u503c\u4ece\u5c0f\u5230\u5927\u586b\u4e0a\u5c31\u884c\u4e86\uff0c\u5982\u679c\u5f53\u524d\u9700\u8981\u586b\u7684\u6570\u503c\u5927\u4e8e $m$\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u65e0\u89e3\u7684\u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nconst int N=2e5+10;\nint n,m,vis[N],b[N],cnt1,cnt2,ans;\n//cnt1\u662f\u5947\u6570\u7684\u4e2a\u6570,cnt2\u662f\u5076\u6570\u7684\u4e2a\u6570,vis\u8bb0\u5f55\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5426\u9700\u8981\u586b\u6570\nmap<int,int> f;//f\u8bb0\u5f55\u8fd9\u4e2a\u6570\u503c\u662f\u5426\u80fd\u586b\nstruct qwq {int val,id;} a[N];\ninline bool cmp(qwq x,qwq y) {return x.val>y.val;}\nsigned main()\n{\n\tn=read();m=read();\n\tfor(ri int i=1;i<=n;++i)\n\t\ta[a[i].id=i].val=read();\n\tsort(a+1,a+n+1,cmp);//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\tfor(ri int i=1;i<=n;++i)\n\t{\n\t\tif((a[i].val&1)&&!f[a[i].val])\n\t\t\tif(cnt1<n/2) f[a[i].val]=1,++cnt1,vis[i]=1;\n\t\tif(!(a[i].val&1)&&!f[a[i].val])\n\t\t\tif(cnt2<n/2) f[a[i].val]=1,++cnt2,vis[i]=1;\n\t}\n\tri int now1=1,now2=2;//now1\u662f\u5f53\u524d\u53ef\u586b\u7684\u5947\u6570,now2\u662f\u5f53\u524d\u53ef\u586b\u7684\u5076\u6570\n\tfor(ri int i=1;i<=n;++i)\n\t\tif(!vis[i])\n\t\t{\n\t\t\t++ans;\n\t\t\tif(cnt1<n/2)\n\t\t\t{\n\t\t\t\twhile(f[now1]) now1+=2;//\u627e\u5230\u5f53\u524d\u80fd\u586b\u6570\u7684\u6700\u5c0f\u503c\n\t\t\t\tif(now1>m) return cout<<-1,0;//\u5224\u65e0\u89e3\n\t\t\t\t++cnt1,vis[i]=1,a[i].val=now1,f[now1]=1;\n\t\t\t}\n\t\t\telse if(cnt2<n/2)\n\t\t\t{\n\t\t\t\twhile(f[now2]) now2+=2;\n\t\t\t\tif(now2>m) return cout<<-1,0;\n\t\t\t\t++cnt2,vis[i]=1,a[i].val=now2,f[now2]=1;\n\t\t\t}\n\t\t}\n\tcout<<ans<<endl;\n\tfor(ri int i=1;i<=n;++i)\n\t\tb[a[i].id]=a[i].val;\n\tfor(ri int i=1;i<=n;++i)\n\t\tcout<<b[i]<<\" \";\n\treturn 0;\n}\n```",
        "postTime": 1627283568,
        "uid": 329672,
        "name": "Ninelife_Cat",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF746E \u3010Numbers Exchange\u3011"
    }
]