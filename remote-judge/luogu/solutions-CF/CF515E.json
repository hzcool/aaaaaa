[
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://tony102.xyz/index.php/2020/11/10/cf515e-drazil-and-park/)\n\n[Link](https://www.luogu.com.cn/problem/CF515E)\n\n### Description\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9 $i$ \u5230\u70b9 $i+1$ \u7684\u8ddd\u79bb $d[i]$\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c $h[i]$\u3002\u73b0\u5728\u6709 $m$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee $[l,r]$ \u5185\u4e24\u70b9 $x, y$\uff0c \u4f7f\u5f97$2\\times(h_x + h_y) + dis(x,y)$ \u6700\u5927\u3002\u5176\u4e2d $dis(x,y)$ \u8868\u793a $x$ \u5230 $y$ \u7684\u8ddd\u79bb\u3002\n\n\n\n### Sol\n\n**\u5899\u88c2\u63a8\u8350\u7684\u597d\u9898**\n\n\u9996\u5148\u5b83\u7ed9\u4f60\u7684\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u4e2a\u73af\u72b6\u7684\uff0c\u4f60\u8981\u65ad\u73af\u6210\u94fe\u3002\n\n\u63a5\u4e0b\u6765\u4f60\u8981\u8003\u8651\u5982\u4f55\u5c06 $2\\times(h_x + h_y) + dis(x,y)$ \u6700\u5927\u5316\u3002\u5148\u8003\u8651\u5c06 $2\\times(h_x + h_y) $ \u548c $dis(x,y)$ \u5206\u522b\u6700\u5927\u5316\u3002\n\n\u663e\u7136\u5c06\u4ed6\u4eec\u4e24\u4e2a\u5206\u522b\u6700\u5927\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u5316\u7684\u7ed3\u679c\u7684 $x,y$ \u5750\u6807\u5f88\u6709\u53ef\u80fd\u4e0d\u662f\u540c\u4e00\u5bf9\u3002\n\n**\u5047\u5982\u4e24\u4e2a\u6700\u5927\u503c\u4f60\u4e0d\u597d\u540c\u65f6\u67e5\uff0c\u5c31\u6362\u6210\u628a\u6700\u5927\u5316\u4e00\u4e2a\u4e1c\u897f\uff0c\u518d\u6700\u5c0f\u5316\u53e6\u5916\u4e00\u4e2a\u5e76\u628a\u52a0\u6cd5\u505a\u6210\u51cf\u6cd5**\n\n\u7edd\u6d3b\u3002\n\n\u8003\u8651 $dis(x, y)$ \u600e\u4e48\u8ba1\u7b97\uff0c\u8bbe $sum[]$ \u662f $d[]$ \u7684\u524d\u7f00\u548c\uff0c\u90a3\u4e48 $dis(x,y) = sum[y] - sum[x]$ \n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u662f\u8981\u8ba9 $sum_y - sum_x + 2 \\times h_x + 2 \\times h_y$ \u6700\u5927\n\n\u5957\u8def\uff1a\u628a\u8ddf\u540c\u4e00\u4e2a\u4e1c\u897f\u76f8\u5173\u7684\u4e1c\u897f\u4e00\u8d77\u5904\u7406\n\n\u73b0\u5728\u53d8\u6210\u4e86\uff1a$sum_y + 2 \\times h_y - sum_x + 2 \\times h_x$ \u6700\u5927\u3002\u90a3\u5c31\u8ba9 $sum_y + 2 \\times h_y$ \u6700\u5927\uff0c$sum_x - 2 \\times h_x$ \u6700\u5c0f\n\n\u56e0\u4e3a\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\uff0cRMQ\u95ee\u9898\u5c31\u53ef\u4ee5\u7528ST\u8868\uff0c\u4e5f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u4e4b\u7c7b\u7684\u3002\n\n\u4f46\u662f\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u6837\u5b50\u505a\u6709\u53ef\u80fd\u67e5\u5230\u7684\u8fd9\u4e24\u4e2a\u7684\u6700\u5927\u6700\u5c0f\u7684\u4f4d\u7f6e\u662f\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u4e0d\u7b26\u5408\u8981\u6c42\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u67e5\u5230\u4e86\u4e24\u4e2a\u76f8\u540c\u7684\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u5c31\u5728 $[l, pos - 1] $ \u548c $[pos + 1, r]$ \u4e2d\u67e5\u4e00\u4e0b\u6700\u5927\u6700\u5c0f\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\u3002\u5176\u4e2d $pos$ \u662f\u7b2c\u4e00\u67e5\u5230\u7684\u6700\u5927\u6700\u5c0f\u4f4d\u7f6e\u3002\n\n\u540c\u65f6\u6ce8\u610f\u5230\u521a\u624d\u6211\u4eec\u8981\u67e5\u7684\u662f\u4f4d\u7f6e\uff0c\u6240\u4ee5\u7ef4\u62a4RMQ\u4fe1\u606f\u7684\u65f6\u5019\u8981\u7ef4\u62a4\u7684\u662f RMQ \u7684\u4e0b\u6807\u3002\n\n\n\n### Code\n\n\u6211\u5b9e\u73b0\u7528\u7684\u7ebf\u6bb5\u6811\uff0c\u6bd4\u8f83\u597d\u61c2\u3002\u7528\u9b54\u529b`ae86`\u5feb\u8bfb\u4ee5\u540e\u540a\u6253 ST \u8868\u505a\u6cd5\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int SIZE = 2e5 + 5;\nconst int inf = 1e18;\n\nint n, m;\nint d[SIZE], h[SIZE], sumMin[SIZE], sumMax[SIZE];\n\nstruct node {\n\tint l, r, maxx, minn;\n} tree[SIZE << 2];\n\nnamespace ae86 {\n\tconst int bufl = 1 << 15;\n\tchar buf[bufl], *s = buf, *t = buf;\n\tinline int fetch() {\n\t\tif (s == t) { t = (s = buf) + fread(buf, 1, bufl, stdin); if (s == t) return EOF; }\n\t\treturn *s++;\n\t}\n\tinline int read() {\n\t\tint a = 0, b = 1, c = fetch();\n\t\twhile (!isdigit(c))b ^= c == '-', c = fetch();\n\t\twhile (isdigit(c)) a = a * 10 + c - 48, c = fetch();\n\t\treturn b ? a : -a;\n\t}\n}\nusing ae86::read;\n\ninline int getMax(int x, int y)\n{\n\treturn sumMax[x] > sumMax[y] ? x : y;\n}\n\ninline int getMin(int x, int y)\n{\n\treturn sumMin[x] < sumMin[y] ? x : y;\n}\n\n#define lson(p) p << 1\n#define rson(p) p << 1 | 1\n\ninline void pushUp(int p)\n{\n\ttree[p].maxx = getMax(tree[lson(p)].maxx, tree[rson(p)].maxx);\n\ttree[p].minn = getMin(tree[lson(p)].minn, tree[rson(p)].minn);\n}\n\ninline void build(int p, int l, int r)\n{\n\ttree[p].l = l, tree[p].r = r;\n\tif (l == r) {\n\t\ttree[p].maxx = tree[p].minn = l;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(lson(p), l, mid); build(rson(p), mid + 1, r);\n\tpushUp(p);\n}\n\ninline int queryMax(int p, int l, int r)\n{\n\tif (l <= tree[p].l && tree[p].r <= r) {\n\t\treturn tree[p].maxx;\n\t}\n\tint mid = (tree[p].l + tree[p].r) >> 1, ans = 0;\n\tif (l <= mid) ans = queryMax(lson(p), l, r);\n\tif (r > mid) ans = getMax(queryMax(rson(p), l, r), ans);\n\treturn ans;\n}\n\ninline int queryMin(int p, int l, int r)\n{\n\tif (l <= tree[p].l && tree[p].r <= r) {\n\t\treturn tree[p].minn;\n\t}\n\tint mid = (tree[p].l + tree[p].r) >> 1, ans = 0;\n\tif (l <= mid) ans = queryMin(lson(p), l, r);\n\tif (r > mid) ans = getMin(queryMin(rson(p), l, r), ans);\n\treturn ans;\n}\n\ninline int calcMin(int l, int r)\n{\n\tif (l > r) return 0;\n\treturn queryMin(1, l, r);\n}\n\ninline int calcMax(int l, int r)\n{\n\tif (l > r) return 0;\n\treturn queryMax(1, l, r);\n}\n\ninline int solve(int l, int r)\n{\n\tint minn = calcMin(l, r), maxx = calcMax(l, r);\n\tif (minn != maxx) return sumMax[maxx] - sumMin[minn];\n\tint minn2 = getMin(calcMin(l, minn - 1), calcMin(minn + 1, r));\n\tint maxx2 = getMax(calcMax(l, maxx - 1), calcMax(maxx + 1, r));\n\treturn std::max(sumMax[maxx2] - sumMin[minn], sumMax[maxx] - sumMin[minn2]);\n}\n\nsigned main()\n{\n\t// freopen(\"code.in\", \"r\", stdin);\n\t// freopen(\"code.out\", \"w\", stdout);\n\tn = read(), m = read();\n\tfor (register int i = 1; i <= n; ++ i) {\n\t\td[i % n + 1] = d[i % n + 1 + n] = read();\n\t}\n\tfor (register int i = 1; i <= n; ++ i) {\n\t\th[i] = h[i + n] = read();\n\t}\t\n\tint sum = 0; sumMax[0] = -inf, sumMin[0] = inf;\n\tfor (register int i = 1; i <= (n << 1); ++ i) {\n\t\tsum += d[i];\n\t\tsumMax[i] = sum + 2 * h[i];\n\t\tsumMin[i] = sum - 2 * h[i];\n\t}\n\tbuild(1, 1, 2 * n + 1);\n\twhile (m --) {\n\t\tint l = read(), r = read();\n\t\tif (l <= r) printf(\"%lld\\n\", solve(r + 1, n + l - 1));\n\t\telse printf(\"%lld\\n\", solve(r + 1, l - 1));\n\t}\n\treturn 0;\n}\n```\n\n\n\nl",
        "postTime": 1605017674,
        "uid": 230933,
        "name": "Tony102",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF515E \u3010Drazil and Park\u3011"
    },
    {
        "content": "\u611f\u89c9\u6ca1\u6709\u9ed1\u96be\u5ea6\uff1f\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF515E)\n\n\u9996\u5148\u8003\u8651 $dist(x,\\ y)$\uff0c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u8be2\u95ee\u90fd\u53bb\u67e5\u8be2\u8fd9\u4e2a\u503c\uff0c\u662f\u5f88\u56f0\u96be\u7684\uff0c\u6211\u4eec\u8003\u8651\u7528\u5750\u6807\u6362\u8ddd\u79bb\uff0c\u5373\u8bb0 $sum_x=\\sum_{i=1}^{x}$\uff0c\u8fd9\u6837 $dist(x,\\ y)$ \u5c31\u53d8\u6210\u4e86 $sum_{y-1}-sum_{x-1}$\uff0c\u8fd9\u65f6\u6211\u4eec\u518d\u56de\u5934\u770b\u539f\u5f0f \u3002\n\n$$2(h_x+h_y)+sum_{y-1}-sum_{x-1}=(2h_y+sum_{y-1})+(2h_x-sum_{x-1})$$\n\n\u6211\u4eec\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u8ba9\u8fd9\u4e2a\u67ff\u5b50\u53d6\u5230\u6700\u5927\u503c\uff0c\u7531\u4e8e\u4e24\u4e2a\u62ec\u53f7\u4e4b\u95f4\u4e92\u65e0\u5173\u8054\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5c06\u4e24\u4e2a\u90e8\u5206\u5206\u522b\u6700\u5927\u5316\u5373\u53ef\uff0c\u800c\u672c\u9898\u7684 $h$ \u4e0e $sum$ \u90fd\u662f\u7ed9\u51fa\u7684\uff0c\u8fd9\u5c31\u53d8\u6210\u4e86\uff1a\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\uff08\u5373 $RMQ$ \uff09\u95ee\u9898\u3002\n\n**\u7a9d\u4f1a\uff01\uff011\u8fd9\u4e8b\u7ebf\u6bb5\u6811\u88f8\u9898\u3002**\n\n\u4e00\u4e2a\u7ec6\u8282\uff1a\u53d6\u6700\u5927\u503c\u65f6\u53ef\u80fd\u4f1a\u53d6\u5230\u540c\u4e00\u4e2a\u70b9\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u7a0d\u7a0d\u4fee\u6539 $pushup$ \u51fd\u6570\u5373\u53ef\u3002\uff08\u8fd9\u91cc\u7a9d\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5b9e\u73b0\uff09\n\n```cpp\nstruct node{\n\tll mx, mn, ans;\n\t//mx=2*h[l]+sum[l-1]\n\t//mn=2*h[l]-sum[l-1]\n\tvoid clear(){mx=mn=ans=-INF;return ;}\n\t//\u521d\u59cb\u5316 \n}st;\nnode operator + (node a, node b){\n\t#define max(x, y) (x>y?x:y)\n\t#define min(x, y) (x<y?x:y)\n\tnode c;\n\tc.mx=max(a.mx, b.mx), c.mn=max(a.mn, b.mn);\n\tc.ans=max(a.mn+b.mx, max(a.ans, b.ans));\n\treturn c;\n}\n```\n\n\u65e2\u7136\u4f1a\u91cd\u53e0\uff0c\u6211\u4eec\u53ea\u9700\u591a\u5f00\u4e00\u4e2a\u8f85\u52a9\u7a7a\u95f4\uff0c\u5206\u4e09\u79cd\u60c5\u51b5\u8003\u8651\uff08\u4e24\u4e2a\u70b9\u90fd\u5728\u5de6/\u53f3\u513f\u5b50\u533a\u95f4\u6216\u4e00\u4e2a\u70b9\u5728\u5de6\u53e6\u4e00\u70b9\u5728\u53f3\uff09\n\n\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u4e8b\u60c5\u8981\u8003\u8651\uff1a\u73af\u72b6\u7684\u600e\u4e48\u529e\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u65ad\u73af\u4e3a\u94fe\u5373\u53ef\u3002\n\n\u81f3\u6b64\uff0c\u672c\u9898\u5f97\u5230\u5b8c\u7f8e\u89e3\u51b3\u3002\n\n### Code\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#define gc() getchar()\n#define N 200005\nusing namespace std;\ntypedef long long ll;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\ninline ll read(){\n\tchar ch=gc();int x=0, f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=gc();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=gc();}\n\treturn x*f;\n}\nint n, m;\nll sum[N], h[N], a[N];\nstruct node{\n\tll mx, mn, ans;\n\t//mx=2*h[l]+sum[l-1]\n\t//mn=2*h[l]-sum[l-1]\n\tvoid clear(){mx=mn=ans=-INF;return ;}\n\t//\u521d\u59cb\u5316 \n}st;\nnode operator + (node a, node b){\n\t#define max(x, y) (x>y?x:y)\n\t#define min(x, y) (x<y?x:y)\n\tnode c;\n\tc.mx=max(a.mx, b.mx), c.mn=max(a.mn, b.mn);\n\tc.ans=max(a.mn+b.mx, max(a.ans, b.ans));\n\treturn c;\n}\nstruct Segment_Tree{\n\t#define ls k<<1\n\t#define rs k<<1|1\n\t#define mid (l+r>>1)\n\tnode data[N*4];\n\tvoid build(int k, int l, int r){\n\t\tif(l==r){\n\t\t\tdata[k].clear();\n\t\t\tdata[k].mx=sum[l-1]+2*h[l], data[k].mn=-sum[l-1]+2*h[l];\n\t\t\treturn ;\n\t\t}\n\t\tbuild(ls, l, mid);build(rs, mid+1, r);\n\t\tdata[k]=data[ls]+data[rs];\n\t}\n\tnode query(int k, int l, int r, int x, int y){\n\t\tif(x<=l&&r<=y) return data[k];\n\t\tnode ret;ret.clear();\n\t\tif(x<=mid) ret=ret+query(ls, l, mid, x, y);\n\t\tif(mid<y) ret=ret+query(rs, mid+1, r, x, y);\n\t\treturn ret;\n\t}\n}chtholly;\nll solve(int a, int b){\n\tif(a<=b) return chtholly.query(1, 1, n, b+1, a+n/2-1).ans;\n\telse return chtholly.query(1, 1, n, b+1, a-1).ans;\n}\nsigned main(){\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i=1; i<=n; i++) a[i]=a[i+n]=read();\n\tfor(int i=1; i<=n; i++) h[i]=h[i+n]=read();n*=2;\n\tfor(int i=1; i<=n; i++) sum[i]=a[i]+sum[i-1];\n\tchtholly.build(1, 1, n);\n\tfor(int i=1; i<=m; i++){\n\t\tint a=read(), b=read();\n\t\tprintf(\"%lld\\n\", solve(a, b));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1620183597,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "CF515E Drazil and Park"
    },
    {
        "content": "# \u8003\u8651\u7ebf\u6bb5\u6811\n\n\u5148\u6309\u7167\u9898\u76ee\u610f\u601d\u753b\u51fa\u7b2c\u4e00\u4e2a\u6837\u4f8b\u7684\u8349\u56fe\uff1a\n\n$$\n4{\\overbrace{--}^{2}}\\underbrace{5{\\overbrace{--}^{2}}2{\\overbrace{--}^{2}}1{\\overbrace{--}^{2}}4}{\\overbrace{--}^{2}}\n$$\n\n\n### \u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u533a\u95f4\u8868\u793a\n\n\u5982\u8349\u56fe\u6240\u793a\uff0c\u4e0b\u5927\u62ec\u53f7\u8868\u793a\u7684\u4e00\u6bb5\u533a\u95f4\u5305\u542b\u56db\u68f5\u6811\uff0c\u4e09\u6bb5\u8def\uff0c\u5f62\u5f0f\u4e0a\uff0c\u4e00\u6bb5\u533a\u95f4\u8981\u6070\u597d\u5305\u542b $x$ \u68f5\u6811\uff0c$x-1$ \u6bb5\u8def\u3002\n\n---\n\n### \u7ebf\u6bb5\u6811\u8282\u70b9\u7ef4\u62a4\u7684\u503c\n\n* $mx$ \u8868\u793a $2*h(x)+dist(x,y)+2*h(y)$ \u7684\u6700\u5927\u503c\uff0c\u5176\u4e2d\u6811 $x$\uff0c$y$ \u5c5e\u4e8e\u8fd9\u4e2a\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u3002\n\n* $lmx$ \u8868\u793a $dist(x,y)+2*h(y)$ \u7684\u6700\u5927\u503c\uff0c\u5176\u4e2d\u6811 $x$ \u4e3a\u8fd9\u4e2a\u533a\u95f4\u6700\u5de6\u6bb5\u7684\u6811\uff0c\u6811 $y$ \u5c5e\u4e8e\u8fd9\u4e2a\u533a\u95f4\u3002\n\n* $rmx$ \u8868\u793a $dist(x,y)+2*h(x)$ \u7684\u6700\u5927\u503c\uff0c\u5176\u4e2d\u6811 $y$ \u4e3a\u8fd9\u4e2a\u533a\u95f4\u6700\u53f3\u7aef\u7684\u6811\uff0c\u6811 $x$ \u5c5e\u4e8e\u8fd9\u4e2a\u533a\u95f4\u3002\n\n* $sum$ \u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u91cc\u6240\u6709\u7684\u8def\u7684\u957f\u5ea6\u4e4b\u548c\u3002\n\n\n\n\u770b\u4e00\u4e0b\u8349\u56fe\u62ec\u7684\u8fd9\u4e2a\u533a\u95f4\u5bf9\u5e94\u7684\u503c\u4e3a\uff1a\n* $mx$\uff1a$x$ \u9009\u7b2c $2$ \u4e2a\u6811\uff0c$y$ \u9009\u7b2c $5$ \u4e2a\u6811\uff0c\u5373\u4e3a$2\\times5+6+2\\times4=24$\n* $lmx$\uff1a$y$ \u9009\u7b2c $5$ \u4e2a\u6811\uff0c\u5373\u4e3a $6+2\\times4=14$\n* $rmx$\uff1a$x$ \u9009\u7b2c $2$ \u4e2a\u6811\uff0c\u5373\u4e3a $2\\times5+6=16$\n* $sum$\uff1a\u5373\u4e3a $2+2+2=6$\n\n---\n\n### \u5408\u5e76\u533a\u95f4\n\n\u5bf9\u7167\u7b2c\u4e00\u4e2a\u6837\u4f8b\u518d\u753b\u4e00\u4e2a\u8349\u56fe\uff1a\n\n$$\n4{\\overbrace{--}^{2}}\\underbrace{\\underbrace{5{\\overbrace{--}^{2}}2}_{L}\\underbrace{{\\overbrace{--}^{2}}}_{gap}\\underbrace{1{\\overbrace{--}^{2}}4}_{R}}_{res}{\\overbrace{--}^{2}}\n$$\n\n\u901a\u8fc7\u5df2\u77e5\u7684 $L$ \u533a\u95f4\u548c $R$ \u533a\u95f4\uff0c\u5916\u52a0\u4e00\u6bb5\u95f4\u9694\u7684\u8def\u7684\u957f\u5ea6 $gap$\uff0c\u5408\u5e76\u6210\u4e3a\u65b0\u7684 $res$ \u533a\u95f4\u3002\n\n* $res$ \u533a\u95f4\u7684 $mx$ \u4f1a\u662f $L$ \u533a\u95f4\u7684 $mx$ \u6216\u8005 $R$ \u533a\u95f4\u7684 $mx$\uff0c\u8fd8\u6709\u4e00\u79cd\u53ef\u80fd\u5c31\u662f $L$ \u548c $R$ \u5408\u5e76\u6240\u4ea7\u751f\u7684 $mx$\uff0c\u5373\u4e3a $L$ \u533a\u95f4\u7684 $rmx+R$ \u533a\u95f4\u7684 $lmx+gap$\u3002\n* $res$ \u533a\u95f4\u7684 $lmx$ \u4f1a\u662f\u539f\u672c\u7684 $L$\u533a\u95f4\u7684 $lmx$\uff0c\u8fd8\u6709\u4e00\u79cd\u53ef\u80fd\u5c31\u662f\u5408\u5e76\u6240\u4ea7\u751f\u7684\u65b0\u503c\uff0c\u5373\u4e3a $L$ \u533a\u95f4\u7684 $sum+R$ \u533a\u95f4\u7684 $lmx$\u3002\n* $res$ \u533a\u95f4\u7684 $rmx$ \u540c\u4e0a\u3002\n* $res$ \u533a\u95f4\u7684 $sum$ \u5373\u4e3a $L$ \u533a\u95f4\u7684 $sum+R$ \u533a\u95f4\u7684 $sum+gap$\u3002\n\n---\n\n### \u5904\u7406\u73af\n\n\u5148\u753b\u4e00\u4e2a\u8349\u56fe\uff1a\uff08\u4e3a\u4e86\u65b9\u4fbf\u89c2\u5bdf\u6570\u5b57\u7684\u542b\u4e49\u6362\u6210\u4e86\u4e0b\u6807\uff09\n\n$$\n\\underbrace{1}_{R}{--}\\overbrace{2{--}3}^{play}{--}\\underbrace{4{--}5}_{L}\\underbrace{{--}}_{gap}\n$$\n\n\u5982\u56fe\uff0c\u5b69\u5b50\u4eec\u5728 $[2,3]$ \u8fd9\u4e2a\u533a\u95f4\u73a9\u800d\uff0c\u8fd9\u6837\u5408\u5e76 $L$ \u548c $R$ \u533a\u95f4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u53e6\u4e00\u79cd\u60c5\u51b5\uff1a\n\n$$\n\\overbrace{1{--}2}^{play}{--}\\underbrace{3{--}4}_{res}{--}\\overbrace{5{--}}^{play}\n$$\n\n\u5f88\u660e\u663e\u4e86\uff0c\u5b69\u5b50\u4eec\u5728 $[5,1]$ \u8fd9\u4e2a\u533a\u95f4\u73a9\u800d\uff0c\u76f4\u63a5\u8be2\u95ee $[3,4]$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n# \u53c2\u8003\u4ee3\u7801\n~~~cpp\n#include<bits/stdc++.h>\n#define int long long\nstruct Data {\n\tint mx, lmx, rmx, sum;\n\tData() {\n\t\tmx = lmx = rmx = sum = 0;\n\t}\n};\nstruct SegmentTree {\n#define ls rt << 1\n#define rs rt << 1 | 1\n\tstd::vector<int> b, h;\n\tstd::vector<Data> s;\n\tSegmentTree(int n) :\n\t\tb(n + 1), h(n + 1), s(n << 2)\n\t{}\n\tData pushup(Data L, Data R, int gap) {\n\t\tData res;\n\t\tres.mx = std::max({ L.mx, R.mx, L.rmx + R.lmx + gap });\n\t\tres.lmx = std::max({ L.lmx, L.sum + gap + R.lmx });\n\t\tres.rmx = std::max({ R.rmx, R.sum + gap + L.rmx });\n\t\tres.sum = L.sum + gap + R.sum;\n\t\treturn res;\n\t}\n\tvoid build(int rt, int L, int R) {\n\t\tif (L == R) {\n\t\t\ts[rt].lmx = s[rt].rmx = 2 * h[L];\n\t\t\ts[rt].mx = 0;\n\t\t\ts[rt].sum = 0;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (L + R) >> 1;\n\t\tbuild(ls, L, mid);\n\t\tbuild(rs, mid + 1, R);\n\t\ts[rt] = pushup(s[ls], s[rs], b[mid]);\n\t\treturn;\n\t}\n\tData query(int rt, int L, int R, int l, int r) {\n\t\tif (l <= L && R <= r) return s[rt];\n\t\tint mid = (L + R) >> 1;\n\t\tData tmp1, tmp2; bool ok1 = 0, ok2 = 0;\n\t\tif (l <= mid) tmp1 = query(ls, L, mid, l, r), ok1 = 1;\n\t\tif (r > mid) tmp2 = query(rs, mid + 1, R, l, r), ok2 = 1;\n\t\tif (ok1 && !ok2) return tmp1;\n\t\tif (!ok1 && ok2) return tmp2;\n\t\treturn pushup(tmp1, tmp2, b[mid]);\n\t}\n#undef ls\n#undef rs\n};\nsigned main() {\n\tint n, m;\n\tscanf(\"%lld%lld\", &n, &m);\n\tSegmentTree segt(n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%lld\", &segt.b[i]);\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%lld\", &segt.h[i]);\n\t}\n\tsegt.build(1, 1, n);\n\tfor (int i = 1, l, r; i <= m; i++) {\n\t\tscanf(\"%lld%lld\", &l, &r);\n\t\tif (l <= r) {\n\t\t\tif (r == n) printf(\"%lld\\n\", segt.query(1, 1, n, 1, l - 1).mx);\n\t\t\telse if (l == 1) printf(\"%lld\\n\", segt.query(1, 1, n, r + 1, n).mx);\n\t\t\telse printf(\"%lld\\n\", segt.pushup(segt.query(1, 1, n, r + 1, n), segt.query(1, 1, n, 1, l - 1), segt.b[n]).mx);\n\t\t}\n\t\telse printf(\"%lld\\n\", segt.query(1, 1, n, r + 1, l - 1).mx);\n\t}\n\treturn 0;\n}\n~~~\n",
        "postTime": 1623232607,
        "uid": 260789,
        "name": "\u8f15\u5c71\u67d2\u6d77",
        "ccfLevel": 0,
        "title": "CF515E Drazil and Park"
    },
    {
        "content": "### \u601d\u8def\uff1a\n\n$\\quad$\u5bf9\u4e8e\u6b64\u9898\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u56e0\u4e3a\u6709\u73af\uff0c\u6240\u4ee5\u65ad\u73af\u4e3a\u94fe\uff0c\u6570\u7ec4\u5f00\u4e24\u500d\uff0c\u53e6\u5916\u8ddd\u79bb\u6362\u6210\u5750\u6807(\u8ddd\u79bb\u7684\u524d\u7f00\u548c)\uff0c\u5047\u8bbe\u6700\u540e\u6c42\u7684\u4e24\u68f5\u6811\u5206\u522b\u4e3a $x$ \uff0c $y$ $(dis_x<dis_y)$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $2\\times (h_x+h_y)+dis_y-dis_x$ \uff0c\u5c31\u662f $(2\\times h_x-dis_x)+(2\\times h_y+dis_y)$ \uff0c\u90a3\u4e48\u6211\u4eec\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u503c\u53ca\u7b54\u6848\uff0c\u4e00\u4e2a\u4f5c\u7b54\u6848\u7684\u5de6\u7aef\u70b9( $x$ )\uff0c\u4e00\u4e2a\u4f5c\u7b54\u6848\u7684\u53f3\u7aef\u70b9( $y$ )\uff0c\u6ce8\u610f\u8981\u4fdd\u8bc1 $dis_x<dis_y$ \uff0c\u5efa\u6811\u548c\u8be2\u95ee\u7684\u4ee3\u7801\u5e94\u91cd\u70b9\u770b\u770b\uff0c\u53e6\u5916\u8be2\u95ee\u8fd4\u56de\u7684\u503c\u662f\u7ed3\u6784\u4f53\uff0c\u6570\u503c\u521d\u59cb\u5316\u5e94\u4e3a $-inf$ \uff0c\u56e0\u4e3a $sumr$ \u7684\u503c\u53ef\u80fd\u4e3a\u8d1f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log {2n})$\u3002\n\n```cpp\nstruct node{\n  int suml,sumr,Max;\n}t[N<<2];\nil void build(int k,int l,int r)\n{\n  if(l==r){t[k].suml=h[l]+dis[l];t[k].sumr=h[l]-dis[l];t[k].Max=-inf;return;}//suml\u8868\u793a\u4f5c\u53f3\u7aef\u70b9\uff0csumr\u8868\u793a\u4f5c\u5de6\u7aef\u70b9\n  int mid=l+r>>1;\n  build(k<<1,l,mid);build(k<<1|1,mid+1,r);\n  t[k].suml=max(t[k<<1].suml,t[k<<1|1].suml);\n  t[k].sumr=max(t[k<<1].sumr,t[k<<1|1].sumr);\n  t[k].Max=max(t[k<<1].Max,max(t[k<<1|1].Max,t[k<<1|1].suml+t[k<<1].sumr));//\u53d6 (\u5de6\u513f\u5b50\u7684\u6700\u5927\u503c\uff0c\u53f3\u513f\u5b50\u7684\u6700\u5927\u503c\uff0c\u5de6\u513f\u5b50\u4e2d\u6700\u9002\u5408\u4f5c\u5de6\u7aef\u70b9\u7684\u52a0\u4e0a\u53f3\u513f\u5b50\u4e2d\u6700\u9002\u5408\u4f5c\u53f3\u7aef\u70b9\u7684\u548c) \u8fd9\u4e09\u8005\u7684\u6700\u5927\u503c \n}\nil node query(int k,int l,int r,int x,int y)\n{\n  if(x<=l&&y>=r)return t[k];\n  int mid=l+r>>1;node t1,t2,t3;\n  t1.suml=t1.sumr=t1.Max=t2.suml=t2.sumr=t2.Max=t3.suml=t3.sumr=t3.Max=-inf;\n  if(x<=mid)t1=query(k<<1,l,mid,x,y);\n  if(y>mid)t2=query(k<<1|1,mid+1,r,x,y);\n  t3.suml=max(t1.suml,t2.suml);\n  t3.sumr=max(t1.sumr,t2.sumr);\n  t3.Max=max(t1.Max,max(t2.Max,t2.suml+t1.sumr));\n  return t3;\n}\n```\n\n$\\quad$\u5173\u4e8e\u53d8\u91cf\u540d\u7684\u89e3\u91ca\uff1a\u7528\u6570\u7ec4 $h_i$ \u8868\u793a\u7b2c $i$ \u68f5\u6811\u7684\u9ad8\u5ea6(\u6216 $i-n$ )\uff0c\u6570\u7ec4 $d_i$ \u8868\u793a\u7b2c $i$ \u68f5\u6811\u548c\u7b2c $i+1$ \u68f5\u6811\u7684\u8ddd\u79bb\uff0c\u6570\u7ec4 $dis_i$ \u8868\u793a\u7b2c $i$ \u68f5\u6811\u7684\u5750\u6807\uff0c $sumr$ \u6307\u6700\u5927\u7684\u53ef\u505a\u5de6\u7aef\u70b9\u7684\u6570\uff0c $suml$ \u6307\u6700\u5927\u7684\u53ef\u505a\u53f3\u7aef\u70b9\u7684\u6570\uff0c $Max$ \u6307\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u7b54\u6848\n\n$\\quad$\u518d\u770b\u770b\u4e3b\u51fd\u6570\u5427\uff0c\u6c42\u8865\u96c6\u7684\u64cd\u4f5c\u8981\u989d\u5916\u6ce8\u610f\n```cpp\nsigned main()\n{\n  n=read();m=read();\n  for(re i=1;i<=n;i++)d[i]=d[i+n]=read();\n  for(re i=1;i<=n;i++)h[i]=h[i+n]=read()<<1;\n  for(re i=1;i<=n<<1;i++)dis[i]=dis[i-1]+d[i-1];//\u6ce8\u610fd[i-1]\u8868\u793a\u7684\u624d\u662f\u7b2ci-1\u68f5\u6811\u4e0e\u7b2ci\u68f5\u6811\u7684\u8ddd\u79bb\n  build(1,1,n<<1);//\u5efa\u6811\n  while(m--)\n    {\n      re x=read(),y=read();\n      if(y<x){swap(x,y);x++;y--;}  //\u8fd9\u4e2a\u6c42\u8865\u96c6\u7684\u64cd\u4f5c\u4e5f\u8981\u989d\u5916\u6ce8\u610f\n      else {swap(x,y);x++;y=y+n-1;}//\u8fd9\u4e2a\u6c42\u8865\u96c6\u7684\u64cd\u4f5c\u4e5f\u8981\u989d\u5916\u6ce8\u610f\n      print(query(1,1,n<<1,x,y).Max);putchar('\\n');\n    }\n  return 0;\n}\n```",
        "postTime": 1605689330,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF515E \u3010Drazil and Park\u3011"
    },
    {
        "content": "# [CF515E]Drazil and Park\n\nAlgorithm: \u524d\u7f00\u548c, \u7ebf\u6bb5\u6811\nCreated: Jun 20, 2020 11:45 PM\nDifficulty: NOI/NOI+/CTSC\nURL: https://codeforces.com/contest/515/problem/E\n\n# \u9898\u76ee\u94fe\u63a5\uff1a\n\n[Problem - E - Codeforces](https://codeforces.com/contest/515/problem/E)\n\n[https://codeforces.ml/contest/515/problem/E](https://codeforces.com/contest/515/problem/E)  (Codeforces\u955c\u50cf\u7ad9\uff09\n\n[Drazil and Park](https://www.luogu.com.cn/problem/CF515E)\n\n# \u9898\u76ee\u5927\u610f\uff1a\n\n\u5c31\u5f53\u662f\u7ec3\u4e60\u4e00\u4e0b\u82f1\u8bed\uff0c\u5927\u5bb6\u81ea\u5df1\u53bb\u8bfb\u9898\u5427!\n\n# \u9898\u89e3\uff1a\n\n\u770b\u5230\u73af\u60f3\u5230\u4ec0\u4e48\uff1f  \u6ca1\u9519\uff0c\u65ad\u73af\u4e3a\u94fe\uff0c\u62f7\u8d1d\u4e24\u4efd\uff0c\u65b9\u4fbf\u5904\u7406\u3002\n\n\u770b\u5230\u4e24\u70b9\u95f4\u8ddd\u79bb\u60f3\u5230\u4ec0\u4e48\uff1f \u6ca1\u9519\uff0c\u8ba1\u7b97\u524d\u7f00\u548c\u3002\n\n\u770b\u5230\u8be2\u95ee\u591a\u6b21\u6700\u5927\u503c\u60f3\u5230\u4ec0\u4e48\uff1f \u6ca1\u9519\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u503c\n\n### \u90a3\u4e48\n\n\u4ece\u7b2c\u4e00\u6b65\u5f00\u59cb\u3002\n\n\u8bfb\u5165\uff0c\n\n\u7136\u540e\u65ad\u73af\u4e3a\u94fe\u5e76\u62f7\u8d1d\uff0c\u8ba1\u7b97\u524d\u7f00\u548c\n\n```cpp\nfor(int i=1;i<=n;i++)\n    {\n        cin>>d[i];\n        d[n+i]=d[i];//\u65ad\u73af\u4e3a\u94fe\n    }\n    for(int i=1;i<=n;i++)\n    {\n        cin>>h[i];\n        h[i]*=2;\n        h[n+i]=h[i];//\u65ad\u73af\u4e3a\u94fe\n    }\n    for(int i=1;i<=2*n;i++)\n        d[i]+=d[i-1];  //\u5904\u7406\u4e3a\u524d\u7f00\u548c\u7684\u5f62\u5f0f\n```\n\n\u7531\u9898\u610f\u53ef\u77e5\uff0c\u82e5Dravil\u9009\u62e9\u4e86\u4e24\u68f5\u6811$x$\u548c$y$\uff0c\u90a3\u4e48\u4ed6\u53ef\u4ee5\u6d88\u8017\u7684\u80fd\u91cf\u5373\u4e3a$d_x+d_(x+1)+\u22ef+d_(y-1)+2*(h_x+h_y)$\n\n\u8f6c\u6362\u4e00\u4e0b\uff0c\u5373$(d_1+d_2+...+d(y-1)+2*h_y)+(2*h_x-(d_1+d_2+...+d(x-1)))$\n\n\u8bbe$a_k$\u4e3a$(d_1+d_2+...+d(k-1)+2*h_k)$\uff0c\u8bbe$b_k$\u4e3a$(2*h_k-(d_1+d_2+...+d(k-1)))$\n\n```cpp\nt[x].a=h[l]+d[l-1];//\u524d\u9762\u5df2\u7ecf\u5904\u7406\u4e3a\u524d\u7f00\u548c\u4e86\uff0c\u8fd9\u91cc\u76f4\u63a5\u52a0\u51cf\nt[x].b=h[l]-d[l-1];\n```\n\n\u9898\u76ee\u4e2d\u8bf4\u5b69\u5b50\u73a9\u800d\u7684\u533a\u95f4\u4e3a$[a,b]$\uff0c\u90a3\u4e48Dravil\u5c31\u4e0d\u80fd\u7ecf\u8fc7\u8be5\u533a\u95f4\uff0c\u82e5$a\u2264b$\uff0c\u5219\u4ed6\u53ef\u4ee5\u7ecf\u8fc7\u533a\u95f4$[b+1,a+n+1]$\uff08\u56e0\u4e3a\u6b64\u5904\u5df2\u65ad\u73af\u6210\u94fe\uff09\uff0c\u5426\u5219\uff0c\u4ed6\u53ef\u4ee5\u7ecf\u8fc7\u7684\u533a\u95f4\u4e3a$[b+1,a-1]$\uff0c\u8bbe\u8be5\u533a\u95f4\u4e3a$I$\u3002  $u,v\u2208I$\uff0c\u8981\u4f7f\u6d88\u8017\u7684\u80fd\u91cf\u6700\u5927\uff0c\u5373\u4f7f$a_u+b_v$\u6700\u5927\uff0c\u5373RMQ\uff08\u533a\u95f4\u6700\u503c\uff09\u95ee\u9898\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u503c\u3002\n\n```cpp\nint mid=(l+r)/2;\nbuild(x*2,l,mid);\nbuild(x*2+1,mid+1,r);\nt[x].a=max(t[x*2].a,t[x*2+1].a);\nt[x].b=max(t[x*2].b,t[x*2+1].b);\nt[x].maxn=max(t[x*2].maxn,max(t[x*2+1].maxn,t[x*2].b+t[x*2+1].a)); //\u533a\u95f4\u6700\u503c\n```\n\n$m$\u5929\u4e2d\u6bcf\u5929\u5b69\u5b50\u73a9\u800d\u7684\u533a\u95f4\u53ef\u4ee5\u770b\u505a\u662f$m$\u4e2a\u8be2\u95ee\uff0c\u8fd9\u6837\u5c31\u8f6c\u5316\u4e3a\u7ebf\u6bb5\u6811\u4e0a\u7684\u95ee\u9898\u4e86\n\n\u6700\u540e\u9644\u4e0aAC\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5+7;\nconst long long inf = 1LL*1e17;\nlong long d[MAXN],h[MAXN];\nint n,m,a,b;\nstruct segment_tree //\u7ebf\u6bb5\u6811\n{\n    int l,r;\n    long long a,b,maxn;\n}t[4*MAXN];\nvoid build(int x,int l,int r)\n{\n    t[x].l=l;\n    t[x].r=r;\n    if(l==r)\n    {\n        t[x].a=h[l]+d[l-1];\n        t[x].b=h[l]-d[l-1];\n        t[x].maxn=-inf;\n    }\n    else\n    {\n        int mid=(l+r)/2;\n        build(x*2,l,mid);\n        build(x*2+1,mid+1,r);\n        t[x].a=max(t[x*2].a,t[x*2+1].a);\n        t[x].b=max(t[x*2].b,t[x*2+1].b);\n        t[x].maxn=max(t[x*2].maxn,max(t[x*2+1].maxn,t[x*2].b+t[x*2+1].a)); //\u533a\u95f4\u6700\u503c\n    }\n}\nsegment_tree ask(int x,int l,int r) //\u8be2\u95ee\u64cd\u4f5c\n{\n    int lv=t[x].l,rv=t[x].r;\n    if(l<=lv && rv<=r)\n        return t[x];\n    int mid=(lv+rv)/2; //\u4e8c\u5206\n    segment_tree t1,t2,t3;//\u5de6\u5b50\u6811\uff0c\u53f3\u5b50\u6811\uff0c\u5408\u5e76\u540e\u6811\n    t1.a=t1.b=t1.maxn=t2.a=t2.b=t2.maxn=t3.a=t3.b=t3.maxn= -1*inf; //\u5168\u90e8\u521d\u59cb\u5316\u4e3a\u8d1f\u65e0\u7a77\n    if(l<=mid)\n        t1=ask(x*2,l,r);\n    if(r>mid)\n        t2=ask(x*2+1,l,r);\n    t3.a=max(t1.a,t2.a);\n    t3.b=max(t1.b,t2.b);\n    t3.maxn=max(t1.maxn,max(t2.maxn,t1.b+t2.a));//\u533a\u95f4\u6700\u503c\n    return t3;\n}\nint main()\n{\n    ios::sync_with_stdio(false); //\u4f18\u5316\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>d[i];\n        d[n+i]=d[i];//\u65ad\u73af\u4e3a\u94fe\n    }\n    for(int i=1;i<=n;i++)\n    {\n        cin>>h[i];\n        h[i]*=2;\n        h[n+i]=h[i];//\u65ad\u73af\u4e3a\u94fe\n    }\n    for(int i=1;i<=2*n;i++)\n        d[i]+=d[i-1];  //\u5904\u7406\u4e3a\u524d\u7f00\u548c\u7684\u5f62\u5f0f\n    build(1,1,2*n);  //\u5efa\u6811\n    for(int i=1;i<=m;i++)\n    {\n        cin>>a>>b;\n        if(a<=b)\n            cout<<ask(1,b+1,a+n-1).maxn<<endl; //\u53d6\u8865\u96c6\u8fdb\u884c\u64cd\u4f5c\n        else\n            cout<<ask(1,b+1,a-1).maxn<<endl;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1594985399,
        "uid": 203083,
        "name": "\u708e\u708e\u9f99\u867e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF515E \u3010Drazil and Park\u3011"
    },
    {
        "content": "## Preface\n\u96be\u5ea6\u8fdc\u6ca1\u6709\u9ed1\u3002\n## Solution\n\u73af\u4e0a\u95ee\u9898\u9996\u5148\u7834\u73af\u6210\u94fe\u3002\n \n\u8be2\u95ee\u4e2d\u4e0d\u80fd\u53d6\u533a\u95f4 $[l,r]$\uff0c\u7b49\u4ef7\u4e8e\u53ea\u80fd\u53d6 $[l',r']$\uff0c\u5176\u4e2d\n$$l'=r+1,r'=l+n-1\\ \\ \\ \\ (l\\le r)$$\n$$l'=r-1,r'=l+1\\ \\ \\ \\ (l>r)$$\n\u5bf9\u4e8e\u8ddd\u79bb\uff0c\u4ee4 $dis_i=\\sum_{j=1}^{i-1}d_j$\uff0c\u5219\u4e24\u70b9 $x,y$ \u95f4\u8ddd\u79bb\u53ef\u7b80\u5355\u8f6c\u5316\u4e3a $|dis_x-dis_y|$\u3002\n \n\u4e8e\u662f\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u5728\u7ed9\u5b9a\u533a\u95f4\u4e2d\u9009\u51fa\u4e0d\u540c\u4e24\u70b9 $x,y$\uff0c\u6700\u5927\u5316\n$$2h_x+2h_y+|dis_x-dis_y|$$\n\u4e0d\u59a8\u8bbe $dis_x>dis_y$\uff0c\u5219\u539f\u5f0f\u8f6c\u5316\u4e3a\n$$2h_x+dis_x+2h_y-dis_y$$\n\u5c06\u4e0e $x$ \u548c $y$ \u6709\u5173\u7684\u90e8\u5206\u5206\u522b\u8ba1\u7b97\u5373\u53ef\u3002\n \n\u5177\u4f53\u5730\uff0c\u5206\u522b\u8ba1\u7b97\u51fa\u4e24\u90e8\u5206\u6700\u5927\u503c\u6240\u5bf9\u5e94\u7684 $x,y$\uff0c\u82e5\u4e24\u8005\u4e0d\u540c\u5219\u76f4\u63a5\u76f8\u52a0\uff0c\u76f8\u540c\u5219\u67d0\u4e00\u90e8\u5206\u53d6\u6b21\u5927\u503c\u3002\u6b21\u5927\u503c\u4f4d\u7f6e\u53ef\u4ee5\u540c\u65f6\u7ef4\u62a4\uff0c\u4e5f\u53ef\u4ee5\u4e8c\u6b21\u67e5\u8be2\u3002\u4ee3\u7801\u91c7\u7528\u524d\u8005\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u5f97\u5230\u7684 $x,y$ \u4e00\u5b9a\u6ee1\u8db3 $dis_x>dis_y$\u3002\n\n\u82e5 $dis_x<dis_y$\uff0c\u90a3\u4e48\u4ea4\u6362 $x,y$ \u540e\u5f97\u5230\u7684\u7b54\u6848\u4e00\u5b9a\u4e25\u683c\u66f4\u4f18\u3002\u800c\u4ea4\u6362\u540e\u7684\u7b54\u6848\u5728\u8ba1\u7b97\u65f6\u5df2\u7ecf\u7eb3\u5165\u8003\u8651\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define ppb pop_back\n#define pf push_front\n#define ppf pop_front\n#define lson (p << 1)\n#define rson (p << 1 | 1)\n#define mid ((l + r) >> 1)\nconst int maxn = 2e5 + 10;\nint n, q;\nll a[maxn], h[maxn], sum1[maxn], sum2[maxn];\nstruct Node{\n\tint pos1, pos2;\n\tNode(){} Node(int p1, int p2): pos1(p1), pos2(p2){}\n\tNode operator + (const Node &t) const{\n\t\treturn Node((sum1[pos1] > sum1[t.pos1] ? pos1 : t.pos1), (sum2[pos2] > sum2[t.pos2] ? pos2 : t.pos2));\n\t}\n}t[maxn << 2];\nvoid build(int l, int r, int p){\n\tif(l == r) return t[p] = Node(l, l), void();\n\tbuild(l, mid, lson), build(mid + 1, r, rson), t[p] = t[lson] + t[rson];\n}\nNode query(int l, int r, int p, int ql, int qr){\n\tif(r < ql || qr < l || ql > qr) return Node();\n\tif(ql <= l && r <= qr) return t[p];\n\treturn query(l, mid, lson, ql, qr) + query(mid + 1, r, rson, ql, qr);\n}\nint main(){\n\tscanf(\"%d%d\", &n, &q), sum1[0] = -1e18, sum2[0] = -1e18;\n\tfor(int i = 1; i <= n; i++) scanf(\"%lld\", &a[i + 1]), a[i + n + 1] = a[i + 1];\n\tfor(int i = 1; i <= n; i++) scanf(\"%lld\", &h[i]), h[i + n] = h[i]; n *= 2;\n\tfor(int i = 1; i <= n; i++) a[i] += a[i - 1], sum1[i] = h[i] * 2 + a[i], sum2[i] = h[i] * 2 - a[i];\n\t// for(int i = 1; i <= n; i++) printf(\"%lld - %lld\\n\", sum1[i], sum2[i]);\n\tbuild(1, n, 1); // print(1, n, 1);\n\twhile(q--){\n\t\tint ql, qr, l, r; scanf(\"%d%d\", &ql, &qr);\n\t\tif(ql <= qr) l = qr + 1, r = ql + n / 2 - 1;\n\t\telse l = qr + 1, r = ql - 1;\n\t\tNode res = query(1, n, 1, l, r);\n\t\tif(res.pos1 != res.pos2){printf(\"%lld\\n\", sum1[res.pos1] + sum2[res.pos2]); continue;}\n\t\tNode qwq = query(1, n, 1, l, res.pos1 - 1) + query(1, n, 1, res.pos1 + 1, r);\n\t\tprintf(\"%lld\\n\", max(sum1[res.pos1] + sum2[qwq.pos2], sum1[qwq.pos1] + sum2[res.pos2]));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1665665224,
        "uid": 170890,
        "name": "Cxny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF515E Drazil and Park"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\u6709$n$\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u6743\u503c$h[i]$\uff0c\u7b2c$i$\u4e2a\u70b9\u4e0e\u7b2c$j$\u4e2a\u70b9\u8ddd\u79bb\u4e3a$d[i]$,\u7b2c$1$\u4e2a\u70b9\u4e0e\u7b2c$n$\u4e2a\u70b9\u76f8\u90bb\uff0c$Q$\u6b21\u8be2\u95ee,\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa$1$\u6bb5\u533a\u95f4\uff0c\u6c42\u533a\u95f4\u5185\u7684\u4e24\u4e2a\u70b9$i,j$\uff0c\u4f7f$dis(i,j)+2*(h_i+h_j)$\u6700\u5927\u3002\n### \u9898\u76ee\u5206\u6790\n\u4e00 \u73af\u72b6\uff1a\u8003\u8651\u65ad\u73af\u4e3a\u94fe\uff1b\n\u4e8c \u6700\u5927\u5316 $dis(i,j)+2(h_i+h_j)$\n   \n   \u524d\u7f00\u548c\u7ef4\u62a4$dis(i,j)=sum_j-sum_i$\n   \n   \n   \u5f0f\u5b50\u62c6\u6389\n  \n   \n  = $sum_j-sum_i+2*h_i+2*h_j$\n  \n \u4e0e$i$\u76f8\u5173\u7684\u653e\u4e00\u8d77\uff0c \u4e0e$j$\u76f8\u5173\u7684\u653e\u4e00\u8d77\n \n  =$sum_j+2*h_j-(sum_i-2*h_i)$\n  \n  \u6240\u4ee5\u8981\u6700\u5927\u5316$sum_j+2*h_j$\uff0c\u6700\u5c0f\u5316$sum_i-2*h_j$\n  \n  \u53ef\u4ee5\u7528$ST$\u8868\u3001\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u503c\n  \n  \u4e09 \u6ce8\u610f\u5230$i,j$\u5e94\u4e3a\u4e0d\u540c\u7684\u4e24\u70b9\uff0c\u800c\u76f4\u63a5\u7528$ST$\u8868\u5b58\u6700\u503c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e24\u5904\u6700\u503c\u5728\u540c\u4e00\u4e2a\u70b9\u4e0a\uff0c\u6240\u4ee5\u5728\u5904\u7406$ST$\u8868\u7684\u540c\u65f6\u8981\u5b58\u4e00\u4e0b\u6700\u503c\u7684\u4e0b\u6807\u3002\u5982\u679c\u5728\u67e5\u8be2\u65f6\u9047\u5230$(l,r)$\u6700\u5927\u6700\u5c0f\u5728\u540c\u4e00\u4e2a\u70b9$pos$\u4e0a\u7684\u60c5\u51b5\uff0c\u5904\u7406\u51fa$(l,pos-1)$\u5e76$  (pos+1,r)$\u7684\u6700\u5927\u6700\u5c0f\u503c\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u518d\u4e0e$pos$\u7ec4\u5408\u5373\u53ef\u3002\n  \n  \u56db \u8bb0\u5f97\u5f00$long$ $long$\n  \n  ## code\n  ```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define N (500010)\nusing namespace std;\nll n,Q,a,b,t=22;\nll d[N],s[N],h[N];\n//d:\u8ddd\u79bb h:\u5982\u9898 s:\u8ddd\u79bb\u7684\u524d\u7f00\u548c\nll st1[N][25],st2[N][25],p1[N][25],p2[N][25];\n//st1:\u6700\u5927\u503c  st2:\u6700\u5c0f\u503c\n//p1:\u6700\u5927\u503c\u7684\u4f4d\u7f6e p2:\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\ninline void pre(){\n\tfor(int i=1;i<=n+n;i++){\n\t\tst1[i][0]=s[i]+2*h[i];\n\t\tst2[i][0]=s[i]-2*h[i];\n\t\tp1[i][0]=p2[i][0]=i;\n\t}\n\tfor(int j=1;j<t;j++){\n\t\tfor(int i=1;i<=n+n;i++){\n\t\t\tif((i+(1<<(j-1)))>n+n) break;\n\t\t\tst1[i][j]=max(st1[i][j-1],st1[i+(1<<(j-1))][j-1]);\n\t\t\tif(st1[i][j-1]>st1[i+(1<<(j-1))][j-1]) p1[i][j]=p1[i][j-1];\n\t\t\telse p1[i][j]=p1[i+(1<<(j-1))][j-1];\n\t\t\tst2[i][j]=min(st2[i][j-1],st2[i+(1<<(j-1))][j-1]);\n\t\t\tif(st2[i][j-1]<st2[i+(1<<(j-1))][j-1]) p2[i][j]=p2[i][j-1];\n\t\t\telse p2[i][j]=p2[i+(1<<(j-1))][j-1];\n\t\t}\n\t}\n\treturn;\n}\n//ST\u8868\u9884\u5904\u7406\ninline ll askmax(ll l,ll r){\n\tll tt=log2(r-l+1);\n\tif(st1[l][tt]>st1[r-(1<<tt)+1][tt]) return p1[l][tt];\n\treturn p1[r-(1<<tt)+1][tt];\n}\ninline ll askmin(ll l,ll r){\n\tll tt=log2(r-l+1);\n\tif(st2[l][tt]<st2[r-(1<<tt)+1][tt]) return p2[l][tt];\n\treturn p2[r-(1<<tt)+1][tt];\n}\n//\u67e5\u8be2\u6700\u5927\u6700\u5c0f\u503c\u6240\u5728\u7684\u4f4d\u7f6e\ninline ll calc(ll x,ll y){return s[x]+2*h[x]-s[y]+2*h[y];}\n//\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8d21\u732e\ninline ll ask(ll l,ll r){\n\tll pos1=askmax(l,r),pos2=askmin(l,r);\n\tif(pos1!=pos2) return calc(pos1,pos2);\n\telse{\n\t\tif(pos1>l&&pos1<r){\n\t\t   ll res1=max(calc(pos1,askmin(l,pos1-1)),calc(pos1,askmin(pos1+1,r)));\n\t\t   ll res2=max(calc(askmax(l,pos1-1),pos1),calc(askmax(pos1+1,r),pos1));\n\t\t   return max(res1,res2);\n\t\t}\n\t\tif(pos1==l&&pos1<r){\n\t\t\tll res1=max(calc(askmax(pos1+1,r),pos1),calc(pos1,askmin(pos1+1,r)));\n\t\t\treturn res1;\n\t\t}\n\t\tif(pos1==r&&pos1>l){\n\t\t\tll res1=max(calc(askmax(l,pos1-1),pos1),calc(pos1,askmin(l,pos1-1)));\n\t\t\treturn res1;\n\t\t}\n\t}\n\treturn 0;\n}\n//\u5982\u9898\u89e3\nint main(){\n\tscanf(\"%lld%lld\",&n,&Q);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&d[i]);\n\t\td[n+i]=d[i];\n\t\ts[i+1]=s[i]+d[i];\n\t}\n\tfor(int i=n+1;i<=n+n;i++) s[i+1]=s[i]+d[i];\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&h[i]);\n\t\th[i+n]=h[i];\n\t}\n\tpre();\n\twhile(Q--){\n\t\tscanf(\"%lld%lld\",&a,&b);\n\t\tif(a>b) printf(\"%lld\\n\",ask(b+1,a-1));\n\t\telse printf(\"%lld\\n\",ask(b+1,a-1+n));\n\t}\n\treturn 0;\n}\n\n```\n\u5b8c\u7ed3\u6492\u82b1",
        "postTime": 1605623551,
        "uid": 101475,
        "name": "xxbbkk",
        "ccfLevel": 0,
        "title": "CF515E"
    },
    {
        "content": "### \u524d\u8a00\n\u4f30\u8ba1\u5927\u5bb6\u53ef\u80fd\u88ab\u70b9\u7684\u6743\u503c\uff08h\uff09\u548c\u8fb9\u7684\u957f\u5ea6\uff08d\uff09\u4e24\u8005\u7684\u7ef4\u62a4\u5361\u4e86\u597d\u4e45\u3002\u6211\u4eec\u53ef\u4ee5\u6765\u4e00\u6b21\u7b80\u5355\u7684\u8f6c\u6362\uff0c\u4f7f\u590d\u6742\u7684\u6570\u636e\u53d8\u5f97\u7b80\u5355\u3002\n\n### Main Tips\n\n\u4e0d\u59a8\u628a\u8fb9\u957f\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u5b83\u62e5\u6709\u6743\u503c $d_i$ ,\u90a3\u4e48\u76f8\u5bf9\u5e94\u7684\u539f\u5148\u7684\u70b9\u4e5f\u83b7\u5f97\u4e00\u4e2a\u6743\u503c $d_i = 0$ \u3002**\u4e3a\u4e86\u4e0d\u8ba9\u8fb9\u5b8c\u5168\u6210\u4e3a\u4e00\u4e2a\u201c\u70b9\u201d**\uff0c**\u6211\u4eec\u5c06\u5b83\u7684 $h_i$ \u8bbe\u4e3a -inf\uff0c\u4fdd\u8bc1\u4e0d\u662f\u4ece\u8fb9\u8fdb\u5165\u6216\u51fa\u6765\u3002\u518d\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u6761 $4 \\times n - 3$ \u7684\u70b9\u8fb9\u96c6(\u518d\u4e58\u4e2a\u4e8c\u662f\u56e0\u4e3a\u6211\u4eec\u8981\u62c6\u4e00\u4e2a\u73af)**\uff0c $l\\_val$\u3001 $r\\_val$\u3001$no\\_val$\u3001$two\\_val$ \u5206\u522b\u8868\u793a\u53ea\u6709\u5de6\u7aef\u6709 $h_i$ \uff0c\u53ea\u6709\u53f3\u7aef\u6709 $h_i $\uff0c\u4e24\u7aef\u90fd\u65e0\u548c\u4e24\u7aef\u90fd\u6709\u3002\u73b0\u5728\uff0c\u5b83\u5c31\u53d8\u6210\u4e86\u4e00\u9053\u7ecf\u5178\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e24\u7aef\u70b9\u6743\u503c + \u7aef\u70b9\u95f4\u8ddd\u79bb\u7684\u9898\u76ee\u4e86\u3002\u6700\u540e query \u4e00\u4e0b\u5c31 OK \u5566\uff01\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n$h_i: $ $ 2\\qquad\\quad 4 \\qquad\\quad 3 \\quad\\qquad  2\\quad\\qquad 4$\n\n$\\quad\\,\\,\\,\\, $1 $-->$ 2 $-->$ 3 $-->$ 1 $-->$ 2\n   \n$d_i: $ $ \\quad\\quad 2\\quad\\qquad 2 \\quad\\qquad 3 \\quad\\quad\\quad  2$\n\n\u4e0a\u9762\u662f\u70b9\u6743\uff0c\u4e0b\u9762\u8fb9\u6743\uff0c\u4e2d\u95f4\u662f\u7f16\u53f7\u3002\u5b83\u73b0\u5728\u53d8\u6210\u60f9 $-->$\n\n$h_i: $ $2\\quad -inf\\qquad 4\\quad-inf\\quad\\,\\,\\,\\,3\\quad-inf\\qquad 3\\quad-inf\\qquad 4$\n\n\n$\\quad\\,\\,\\,\\, $ 1$-->$2$-->$3$-->$4$-->$5$-->$6$-->$7$-->$8$-->$9\n\n$d_i:$ $\\,\\, 0\\qquad\\,\\, 2\\qquad\\quad 0\\qquad 2\\quad\\qquad0\\qquad\\quad 3\\qquad 0\\qquad\\quad 2\\qquad 0$\n\n\u4e0a\u9762\u662f\u66f4\u6539\u540e\u7684\u70b9\u6743\uff0c\u4e0b\u9762\u662f\u66f4\u6539\u540e\u7684\u8fb9\u6743\uff0c\u4e2d\u95f4\u662f\u66f4\u6539\u540e\u7684\u7f16\u53f7\u3002\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $two\\_ans$ \uff08\u4e24\u7aef\u90fd\u6709 $h_i$\uff09\u3002\u76ee\u524d\u4e3a\u6700\u4f18\u89e3 rank2 \u3002\n\n### Code\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n#define ll long long\n#define inf 10000000000000000\n\nusing namespace std;\n\ninline ll read(){\n\tll x=0,w=0;char ch=getchar();\n\twhile (!isdigit(ch))w|=ch=='-',ch=getchar();\n\twhile (isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\treturn w?-x:x;\n}\n\nstruct node{\n\tll two_val, l_val, r_val, no_val;\n}a[8000005];\n\nll n, m, h[800005], dis[800005], two_ans, l_ans, r_ans, no_ans;\n\ninline ll ls(ll p){\n\treturn p << 1;\n}\n\ninline ll rs(ll p){\n\treturn p << 1 | 1;\n}\n\ninline void update(int p){\n\ta[p].two_val = max(a[ls(p)].l_val + a[rs(p)].r_val, max(a[ls(p)].two_val , a[rs(p)].two_val ));\n\ta[p].l_val = max(a[ls(p)].l_val + a[rs(p)].no_val, a[rs(p)].l_val ) ;\n\ta[p].r_val = max(a[ls(p)].no_val + a[rs(p)].r_val, a[ls(p)].r_val ) ;\n\ta[p].no_val = a[ls(p)].no_val + a[rs(p)].no_val ;\n}\n\ninline void build(ll p, ll l, ll r){\n\tif(l == r){\n\t\ta[p].l_val = h[l] + dis[l];\n\t\ta[p].r_val = h[l] + dis[l];\n\t\ta[p].no_val = dis[l];\n\t\treturn ;\n\t}\n\tll mid = l + r >> 1;\n\tbuild(ls(p), l, mid);\n\tbuild(rs(p), mid + 1, r);\n\tupdate(p);\n}\n\ninline ll query(ll p, ll l, ll r, ll L, ll R){\n\tif(L <= l && r <= R){\n\t\ttwo_ans = max(two_ans, max(a[p].two_val , l_ans + a[p].r_val ));\n\t\tl_ans = max(l_ans + a[p].no_val , max(a[p].l_val , l_ans));\n\t\treturn 0;\n\t}\n\tll mid = l + r >> 1;\n\tif(mid >= L) query(ls(p), l, mid, L, R);\n\tif(mid < R) query(rs(p), mid + 1, r, L, R);\n}\n\nint main(){\n\tn = read();\n\tm = read();\n\tfor(int i = 2; i <= 2 * n; i += 2)\n\tdis[i] = read(), dis[i - 1] = 0;\n\tfor(int i = 1; i <= 2 * n; i += 2)\n\th[i] = read() * 2, h[i + 1] = -inf;\n\tfor(int i = 1; i <= 2 * n; i++)\n\tdis[2 * n + i] = dis[i], h[i + 2 * n] = h[i];\n\tbuild(1, 1, 4 * n - 1);\n\tfor(int i = 1; i <= m; i++){\n\t\tll x = read(), y = read();\n\t\ttwo_ans = l_ans = -inf;\n\t\tif(x == y){\n\t\t\tquery(1, 1, 4 * n - 1, 2 * x + 1, 2 * x - 3 + 2 * n);\n\t\t}\n\t\telse if(x < y){\n\t\t\tquery(1, 1, 4 * n - 1, 2 * y + 1, 2 * x - 3 + 2 * n);\n\t\t}\n\t\telse {\n\t\t\tquery(1 , 1, 4 * n - 1, 2 * y + 1, 2 * x - 3);\n\t\t}\n\t\tprintf(\"%lld\\n\",two_ans);\n\t}\n    return 0;\n}\n\n```\n\n\u5b8c\u7ed3\u6492\u82b1\u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f",
        "postTime": 1596200431,
        "uid": 209604,
        "name": "pikabi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF515E \u3010Drazil and Park\u3011"
    }
]