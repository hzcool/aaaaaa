[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u4f60\u521d\u59cb\u65f6\u6709\u65e0\u6570\u5f20 $100$ \u5143\u7eb8\u5e01\u548c $m$ \u5f20 $1$ \u5143\u7eb8\u5e01\uff08\u5047\u8bbe\u8d27\u5e01\u7cfb\u7edf\u4e2d\u53ea\u6709\u8fd9\u4e24\u79cd\u7eb8\u5e01\uff09\u3002\u6709 $n$ \u5929\uff0c\u7b2c $i$ \u5929\u4f60\u9700\u8981\u8d2d\u4e70\u4ef7\u503c\u4e3a $c_i$ \u7684\u7269\u54c1\u3002\u4f60\u5728\u8fd9\u4e00\u5929\u6bcf\u8ba9\u552e\u8d27\u5458\u627e\u4e00\u5f20 $1$ \u5143\u7684\u7eb8\u5e01\uff0c\u5c31\u4f1a\u8ba9\u552e\u8d27\u5458\u7684\u4e0d\u6ee1\u610f\u7cfb\u6570\u589e\u52a0 $w_i$ \uff0c\u4f46\u4f60\u5728\u4e4b\u540e\u7684\u5929\u6570\u5185\u53ef\u4ee5\u4f7f\u7528\u552e\u8d27\u5458\u627e\u4f60\u7684\u8fd9\u4e9b $1$ \u5143\u7eb8\u5e01\u3002\n\n\u8f93\u51fa\u6700\u5c0f\u53ef\u80fd\u7684\u552e\u8d27\u5458\u7684\u4e0d\u6ee1\u610f\u7cfb\u6570\u548c\uff0c\u5e76\u8f93\u51fa\u6bcf\u4e00\u5929\u4ed8\u94b1\u7684\u65b9\u6848\u3002\u5982\u679c\u6709\u591a\u79cd\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u3002\n\n$1\\le n,c_i,w_i\\le 10^5,0\\le m\\le 10^9$\n\n## \u89e3\u9898\u601d\u8def\n\n\u5bf9\u4e8e\u6bcf\u5929\u90fd\u6709\u4e24\u79cd\u4ed8\u94b1\u65b9\u6848\uff1a\n\n1. \u6b63\u597d\u4ed8\u7ed9\u552e\u8d27\u5458 $c_i$ \u5143\u94b1\uff0c\u4e0d\u7528\u627e\u96f6\u3002\u9700\u8981\u6ee1\u8db3\u6b64\u65f6\u7684 $m\\ge c_i~mod~100$ \u3002 $c_i$ \u4e3a $100$ \u7684\u500d\u6570\u65f6\u9ed8\u8ba4\u4f7f\u7528\u6b64\u65b9\u6848\u3002\u9009\u62e9\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u4ee4\u4f60\u7684 $m$ \u503c\u51cf\u5c11 $c_i~mod~100$ \u3002\n\n2. \u4ed8\u7ed9\u552e\u8d27\u5458 $\\lceil \\frac {c_i} {100} \\rceil$ \u5f20 $100$ \u5143\u7eb8\u5e01\uff0c\u627e\u96f6 $100-c_i~mod~100$ \u5143\u3002\u56e0\u4e3a\u5982\u679c\u4f60\u6b64\u65f6\u591a\u7ed9\u552e\u8d27\u5458 $1$ \u5143\u7eb8\u5e01\uff0c\u552e\u8d27\u5458\u7684\u627e\u96f6\u5c31\u66f4\u591a\uff0c\u4e0d\u6ee1\u610f\u7cfb\u6570\u8d8a\u5927\u3002 **\u6ce8\u610f** \uff1a\u9009\u62e9\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u4ee4\u4f60\u6b64\u65f6\u7684 $m$ \u589e\u52a0 $100-c_i~mod~100$ \u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u5929\u6309\u7167\u65b9\u6848\u4e8c\u4ed8\u6b3e\u7684\u4ee3\u4ef7\uff08\u5373\u552e\u8d27\u5458\u7684\u4e0d\u6ee1\u610f\u7a0b\u5ea6\uff09 $v_i=w_i\\times (100-c_i~mod~100)$ \u3002\n\n\u6211\u4eec\u4f7f\u7528 **\u8d2a\u5fc3** \u7b56\u7565\u3002\u6309\u5929\u6570\u5904\u7406\uff0c\u5982\u679c\u9700\u8981\u652f\u4ed8\u7684\u94b1\u6570\u6ee1\u8db3\u65b9\u6848\u4e00\u7684\u6761\u4ef6\uff0c\u5219\u4f7f\u7528\u65b9\u6848\u4e00\u4ed8\u6b3e\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c **\u4ece\u4e4b\u524d\u7684\u67d0\u4e00\u5929\uff08\u5305\u62ec\u4eca\u5929\uff09\u4e2d\u9009\u62e9\u4e00\u5929\u628a\u65b9\u6848\u4e00\u6362\u6210\u65b9\u6848\u4e8c** \u3002\u5047\u8bbe\u9009\u62e9\u7684\u8fd9\u4e00\u5929\u662f\u7b2c $i$ \u5929\uff0c \u7531\u4e8e\u539f\u6765\u7684\u65b9\u6848\u4e00\u6d88\u8017\u4e86 $c_i~mod~100$ \u5f20\u4e00\u5143\u7eb8\u5e01\uff0c\u800c\u6362\u6210\u65b9\u6848\u4e8c\u540e\u53c8\u4f1a\u627e\u96f6 $100-c_i~mod~100$ \u5f20\u4e00\u5143\u7eb8\u5e01\uff0c\u6240\u4ee5\u628a\u65b9\u6848\u4e00\u6362\u6210\u65b9\u6848\u4e8c\u540e\u4f60\u7684\u4e00\u5143\u7eb8\u5e01\u4f1a\u591a\u51fa $100$ \u5f20\uff0c\u4e00\u5b9a\u8db3\u591f\u4f60\u652f\u4ed8\u4eca\u5929\u7684\u65b9\u6848\u4e00\u3002\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u4f7f\u552e\u8d27\u5458\u7684\u4e0d\u6ee1\u610f\u7a0b\u5ea6\u589e\u52a0 $v_i$ \u3002\n\n\u7531\u4e8e\u6211\u4eec\u8981\u6700\u5c0f\u5316\u552e\u8d27\u5458\u6bcf\u5929\u7684\u4e0d\u6ee1\u610f\u7a0b\u5ea6\u4e4b\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u8981\u9009\u62e9\u6700\u5c0f\u53ef\u80fd\u7684 $v_i$ \u3002\u6211\u4eec\u4f7f\u7528 **\u4f18\u5148\u961f\u5217** \u6765\u7ef4\u62a4\u8fd9\u4e00\u51b3\u7b56\u3002\u5728\u5904\u7406\u4e00\u5929\u7684\u65b9\u6848\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u4eca\u5929\u7684 $v_i$ \u63d2\u5165\u4f18\u5148\u961f\u5217\uff0c\u56e0\u4e3a\u5728\u51b3\u7b56\u65f6\u4e5f\u53ef\u80fd\u4f1a\u9009\u62e9\u4eca\u5929\u628a\u65b9\u6848\u4e00\u6362\u6210\u65b9\u6848\u4e8c\u3002\u9700\u8981\u6362\u6210\u65b9\u6848\u4e8c\u65f6\uff0c\u53d6\u51fa\u4f18\u5148\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u503c\uff0c\u8ba1\u7b97\u4e0d\u6ee1\u610f\u7a0b\u5ea6\u4e4b\u548c\u3002\u6ce8\u610f\u6bcf\u5929\uff0c\u90fd\u8981\u5c06 $m$ \u7684\u503c\u51cf\u5c0f $c_i~mod~100$ \uff0c\u56e0\u4e3a\u4f60\u603b\u662f\u5047\u8bbe\u4e00\u5f00\u59cb\u9009\u62e9\u65b9\u6848\u4e00\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log_2 n)$ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$ \u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int maxn=100010;\ntypedef long long ll;\nll ans;\nint n,m,c[maxn],w[maxn],v[maxn];\nbool tf[maxn];//tf=1 pay 100*x\nstruct node\n{\n\tint id;\n\tbool operator<(node x)const{return v[id]>v[x.id];}\n};\npriority_queue<node>q;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",c+i);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",w+i);\n\tfor(int i=1;i<=n;i++)if(c[i]%100)v[i]=(100-(c[i]%100))*w[i];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(c[i]%100==0){tf[i]=true;continue;}\n\t\tq.push({i});\n\t\tif(m>=c[i]%100)m-=c[i]%100;\n\t\telse\n\t\t{\n\t\t\tif(m<c[i]%100)m+=100,ans+=v[q.top().id],tf[q.top().id]=true,q.pop();\n\t\t\tm-=c[i]%100;\n\t\t}\n\t}\n\tprintf(\"%I64d\\n\",ans);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(tf[i])printf(\"%d %d\\n\",(c[i]+99)/100,0);\n\t\telse printf(\"%d %d\\n\",c[i]/100,c[i]%100);\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1558013431,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF767E \u3010Change-free\u3011"
    },
    {
        "content": "\n# \u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u8d2a\u5fc3\u9898\n\n## \u6211\u7684\u5927\u81f4\u65b9\u6cd5\uff1apair+\u5806\u4f18\n\n### \u9898\u76ee\u5206\u6790\uff1a\n\n\u4ece\u7b2c\u4e00\u5929\u5f00\u59cb\uff0c\u5230\u6700\u540e\u4e00\u5929\uff0c\u6bcf\u5929\u53ef\u4ee5\u9009\u62e9\u627e\u94b1\u6216\u8005\u4e0d\u627e\u94b1\u3002\n\n\u5982\u679c\u4e0d\u627e\u94b1\uff0c\u5219\u96f6\u94b1\u6570m\u51cf\u53bb\u591a\u51fa\u7684\u96f6\u94b1\uff1b\n\n\u5982\u679c\u627e\u94b1\uff0c\u5219\u6536\u94f6\u5458\u7684\u6012\u6c14\u503c\u4e0a\u5347\u627e\u94b1\u6570\u4e58\u6bcf\u5929\u5fc3\u60c5\u503cw\uff08\u4e0b\u6587\u79f0ann\u503c\uff09\u3002\n\n### \u8d2a\u5fc3\u7b56\u7565\uff1a\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8d2a\u5fc3\u601d\u60f3\uff1a\n\n#### \u4e24\u79cd\u60c5\u51b5\uff1a\n\n\n------------\n\n\n##### \u60c5\u51b5\u4e00\uff1a\n\n\u5982\u679c\u624b\u4e2d\u7684\u96f6\u94b1\u6570\u662f\u8db3\u591f\u7684\uff0c\u5c31\u9009\u62e9\u7528\u624b\u4e2d\u7684\u96f6\u94b1\u652f\u4ed8\u6240\u9700\u8981\u7684\u96f6\u94b1\uff1b\n\n##### \u60c5\u51b5\u4e8c\uff1a\n\n\u5982\u679c\u624b\u4e2d\u7684\u96f6\u94b1\u6570\u4e0d\u591f\uff0c\u5c31\u627e\u51fa\u4e4b\u524d\u7528\u96f6\u94b1\u652f\u4ed8\u591a\u4f59\u94b1\u6570\u7684\u4e00\u5929\uff0c\u5728\u90a3\u4e00\u5929\u9009\u62e9\u7528100\u5143\u652f\u4ed8\u591a\u51fa\u94b1\u6570\uff0c\u8ba9\u6536\u94f6\u5458\u627e\u94b1\u3002\n\n\u8fd9\u6837\u5c31\u591a\u51fa\u4e86100\u5143\u7684\u96f6\u94b1\uff0c\u8db3\u4ee5\u652f\u4ed8\u5f53\u524d\u6240\u9700\u652f\u4ed8\u7684\u96f6\u94b1\uff0c\u4f46\u6536\u94f6\u5458\u7684\u6012\u6c14\u503c\u4f1a\u4e0a\u5347\uff0c\u9700\u8981\u4e13\u95e8\u8bb0\u5f55\u4e0b\u6765\u3002\n\n\n------------\n\n\nQ: \u9009\u54ea\u4e00\u5929\u5462\uff1f\n\nA\uff1a \u4f7f\u6536\u94f6\u5458\u6012\u6c14\u503c\u4e0a\u5347\u6700\u5c0f\u7684\u90a3\u4e00\u5929\uff0c\u4e5f\u5c31\u662f\u5728\u4e4b\u524d\u7ecf\u8fc7\u7684\u5929\u6570\u4e2d\u9009\u62e9ann\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n# \u8d2a\u5fc3\u6b63\u786e\u8bc1\u660e\uff1a\n\n### \u53cd\u8bc1\u6cd5\uff1a\n\n\u5982\u679c\u5728\u9700\u8981\u96f6\u94b1\u65f6\uff08\u4e5f\u5c31\u662f\u624b\u4e2d\u96f6\u94b1\u4e0d\u8db3\u4ee5\u652f\u4ed8\u591a\u4f59\u94b1\u6570\uff09\uff0c\u9009\u62e9\u975e\u6700\u5c0f\u7684ann\u503c\uff0c\u90a3\u6211\u4eec\u5c06\u5728\u53ef\u4ee5\u652f\u4ed8\u5f53\u524d\u591a\u4f59\u94b1\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u6536\u94f6\u5458\u7684\u6012\u6c14\u503c\u4e0a\u5347\u6bd4\u6700\u5c0fann\u503c\u6240\u4e0a\u5347\u7684\u6012\u6c14\u503c\u8981\u9ad8\uff0c\u4e0d\u7b26\u5408\u6700\u4f18\u65b9\u6848\uff0c\u6545\u9519\u8bef\u3002\n\n\uff08\u540c\u6837\u7ed3\u679c\u5374\u4f7f\u6536\u94f6\u5458\u6012\u6c14\u503c\u66f4\u9ad8\uff0c\u975e\u6700\u4f18\u65b9\u6848\uff09\n\n### \u7ed3\u8bba\uff1a\n\n\u4e0d\u80fd\u9009\u7528\u975e\u6700\u5c0fann\u503c\n\n\u7ed3\u8bba\u6210\u7acb\uff0c\u8d2a\u5fc3\u65b9\u6848\u6b63\u786e\n\n------------\n\n------------\n# \u4f18\u5316\uff1a\n\n\u9898\u76ee\u65f6\u95f4\u9650\u52361s\uff0c\u82e5\u9009\u53d6\u5728\u6bcf\u4e00\u6b21\u96f6\u94b1\u4e0d\u591f\u65f6\u4ece\u7b2c\u4e00\u5929\u5f00\u59cb\u679a\u4e3e\u627eann\u6700\u5c0f\u503c\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO\uff08n2\uff09\n\n**\u5929\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f1<=n<=100000\uff0c\u5982\u679c\u9047\u5230\u6700\u574f\u60c5\u51b5\uff0c\u53ef\u80fd\u4f1aT\u6389**\n\n\u770b\u6765\u5f97\u4f18\u5316\n\n\u65e2\u7136\u662f\u6c42\u52a8\u6001\u6700\u5c0f\u503c\uff0c\u90a3\u5c31\u7528\u5806\u4f18\u627e\u6700\u5c0fann\u503c\n\n\u53ef\u4ee5\u7528**pair\u7c7b\u578b**\u628a\u4e4b\u524d\u7ecf\u8fc7\u7684\u5929\u7684ann\u503c\u548c\u7b2c\u51e0\u5929\u5b58\u4e0b\n\n\n\n------------\n\n\n\n## \u6ce8\u610f\uff1a\n\n### 1\u3001\u8bb0\u5f97\u5f00long long\n\n\uff08m\u7684\u6700\u5927\u503c\u4e3a\u4e00\u7684\u4e5d\u6b21\u65b9\uff0c\u82e5\u53e0\u52a0\u51e0\u6b21\u53ef\u80fd\u4f1a\u7206int\uff08~~\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u7206~~\uff09\uff09\n\n~~\u6211\u4e0d\u4f1a\u7b97~~\n\n### 2\u3001\u7528100\u5143\u80fd\u591f\u6b63\u597d\u652f\u4ed8\u65f6\u4e0d\u52a0\u5165\u5806\u4e2d\n\n\u9898\u76ee\u4e2d\u4e0d\u5141\u8bb8\u591a\u7ed9\u94b1\uff0c\u5982\u679c\u7528100\u5143\u6b63\u597d\u652f\u4ed8\u5b8c\u5c31\u65e0\u6cd5\u6765\u6362\u96f6\u94b1\uff0c\u6545\u4e0d\u52a0\u5165\u5806\u4e2d\n\n### 3\u3001\u82e5\u7528pair\u7c7b\u578b\u5b58\u50a8\u6570\u636e\uff0c\u8981\u5c06ann\u503c\u653e\u5728pair\u4e2d\u7684first\n\npair\u7c7b\u578b\u6392\u5e8f\u65f6\u9ed8\u8ba4\u7528first\u6765\u6392\u5e8f\n\n### PS\uff1a\n\n\u5806\u4e2d\u5b58\u7684\u662f\u53ef\u80fd\u9700\u8981\u8ba9\u6536\u94f6\u5458\u627e\u94b1\u7684\u5929\u6570\n\n\u4e00\u5f00\u59cb\u7ecf\u8fc7\u7684\u5929\u6570\uff08\u6ca1\u6709\u8ba9\u6536\u94f6\u5458\u627e\u96f6\uff09\u90fd\u53ef\u80fd\u662f\u9700\u8981\u8ba9\u6536\u94f6\u5458\u627e\u94b1\u7684\u5929\u6570\uff0c\u6545\u653e\u8fdb\u5806\u4e2d\n\n\u82e5\u51fa\u73b0\u60c5\u51b5\u4e8c\uff0c\u5c31\u5229\u7528\u5806\u627e\u5230ann\u6700\u5c0f\u503c\uff0c\u5b8c\u6210\u627e\u94b1\u64cd\u4f5c\u5e76\u4f7f\u5df2\u627e\u8fc7\u94b1\u7684\u5929\u6570\u88abpop\uff0c\u907f\u514d\u9898\u76ee\u4e2d\u591a\u7ed9\u94b1\u7684\u60c5\u51b5\n\n\n------------\n\n\n## **\u5b8c\u6574AC\u4ee3\u7801**\n\n```c\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define MAXN 100001\n#define LL long long\n#define M(i, j) make_pair(i, j)\nusing namespace std;\n\nLL c[MAXN], w[MAXN], zheng[MAXN], ling[MAXN];//zheng[i]\u662f\u7b2ci\u5929100\u5143\u82b1\u8d39\u7684\u4e2a\u6570\uff0cling[i]\u662f\u7b2ci\u5929\u96f6\u94b1\u82b1\u8d39\u7684\u5143\u6570\nLL n, m, h, k, ans=0;\npriority_queue<pair<LL, LL>, vector< pair<LL, LL> >, greater< pair<LL, LL> > > q;//\u5c0f\u5934\u5806\uff08STL\u4e07\u5c81\uff01\uff09\n\nint main(){\n\n\u3000\u3000scanf(\"%lld %lld\", &n, &m);\n\u3000\u3000for (int i = 1; i <= n; i++){\n\u3000\u3000scanf(\"%lld\", &c[i]);\n\u3000\u3000zheng[i] = c[i] / 100;//\u7b97\u51fa\u6bcf\u5929\u81f3\u5c11\u82b1\u8d39\u591a\u5c11100\u5143\n\u3000\u3000c[i] %= 100;//\u9884\u5904\u7406\uff0cc[i]\u53ea\u5b58\u9700\u82b1\u8d39\u96f6\u94b1\n\u3000\u3000}\n\u3000\u3000for (int i = 1; i <= n; i++) scanf(\"%lld\", &w[i]);\n\u3000\u3000for (int i = 1; i <= n; i++){\n\u3000\u3000\u3000\u3000ling[i] += c[i];\n\u3000\u3000\u3000\u3000if (c[i]) q.push(M(w[i]*(100 - c[i]), i));\n\u3000\u3000\u3000\u3000if (c[i] > m){\n\u3000\u3000\u3000\u3000\u3000\u3000h = q.top().first;//\u53d6\u51fa\u6700\u5c0f\u6012\u6c14\u503c\n\u3000\u3000\u3000\u3000\u3000\u3000k = q.top().second;//\u53d6\u51fa\u662f\u54ea\u4e00\u5929\n\u3000\u3000\u3000\u3000\u3000\u3000q.pop();\n\u3000\u3000\u3000\u3000\u3000\u3000ans += h;//\u79ef\u7d2f\u6012\u6c14\u503c\n\u3000\u3000\u3000\u3000\u3000\u3000ling[k] -= c[k];//\u90a3\u4e00\u5929\u4e0d\u7528\u627e\u96f6\u4e86\n\u3000\u3000\u3000\u3000\u3000\u3000zheng[k]++;//\u90a3\u4e00\u5929100\u5143\u6574\u6570+1\n\u3000\u3000\u3000\u3000\u3000\u3000m += 100;//\u591a\u51fa100\u5143\u96f6\u94b1\n\u3000\u3000\u3000\u3000}\n\u3000\u3000\u3000\u3000m -= c[i];\n\u3000\u3000}\n\u3000\u3000printf(\"%lld\\n\", ans);\n\u3000\u3000for (int i = 1; i <= n; i++){\n\u3000\u3000\u3000\u3000printf(\"%lld %lld\\n\", zheng[i], ling[i]);\n\u3000\u3000}\n\u3000\u3000return 0;\n}\n```\n\u5e0c\u671b\u80fd\u5e2e\u5230\u60a8\u2044(\u2044 \u2044\u2022\u2044\u03c9\u2044\u2022\u2044 \u2044)\u2044.",
        "postTime": 1601863648,
        "uid": 260710,
        "name": "_Scaley",
        "ccfLevel": 0,
        "title": "CF767E Change-free"
    },
    {
        "content": "\u62b1\u7740\u6253\u84dd\u9898\u7684\u5fc3\u6001\u6765\u6253\u8fd9\u9898\uff0c\u6253\u5f97\u6211\u8981\u54ed\u6b7b\u4e86$QAQ$\u6467\u6b8b\u81ea\u5c0a\u5fc3\n\n\u7528\u7684\u662f\u6570\u636e\u7ed3\u6784\u5197\u6742\u5806\u780c\u7684\u6cd5\u5b50\u7ef4\u62a4\u7684\n\n\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u7528\u8111\u5b50\uff0c\u786e\u5b9e\u597d\u554a$qwq$\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u76f4\u63a5\u6784\u9020\u65b9\u6848\u5f88\u9ebb\u70e6\uff0c\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u60c5\u51b5\u5168\u90e8\u75281\u65b9\u5f0f\uff08\u5168\u90e8\u4ed8100\u5143\uff09\u652f\u4ed8\uff0c\u518d\u8003\u8651\u5982\u4f55\u75282\u65b9\u5f0f\u66ff\u63621\u65b9\u5f0f\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u5c06\u627e\u96f6\u7684\u94b1\u770b\u4f5c\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\uff0c\u6536\u83b7\u4e3a\u6b63\uff0c\u652f\u4ed8\u4e3a\u8d1f\u5219\u5728$i$\u70b9\u4e0a\u66ff\u6362\u76f8\u5f53\u4e8e\u5728\u5dee\u5206\u6570\u7ec4\u7684\u539f\u6570\u7ec4\u4e0a\u7684i\uff5en\u9879\u51cf\u53bb100\u3002\u6211\u4eec\u8981\u65f6\u523b\u4fdd\u8bc1\u8fd9\u4e2a\u5dee\u5206\u6570\u7ec4\u7684\u6bcf\u4e00\u9879\u90fd\u5927\u4e8e0\u3002\n\n\u548b\u4eec\u505a\u5462\uff1f\n\n\u7531\u4e00\u822c\u5957\u8def\u53ef\u4ee5\u77e5\u9053\uff0c1\u4e2a2\u65b9\u5f0f\u4e00\u5b9a\u65e0\u6cd5\u66ff\u63622\u4e2a2\u65b9\u5f0f\uff0c2\u4e2a2\u65b9\u5f0f\u66ff\u63621\u4e2a2\u65b9\u5f0f\u4e5f\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\u56e0\u6b64\uff0c2\u65b9\u5f0f\u53ea\u80fd\u66ff\u6362\u81ea\u5df1\u76841\u65b9\u5f0f\uff0c\u6216\u5176\u4ed6\u76841\u4e2a2\u65b9\u5f0f\u3002\u8003\u8651\u4ece\u540e\u5f80\u524d\u626b\uff0c\u5982\u679c\u65e0\u6cd5\u76f4\u63a5\u4f7f\u75282\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4ece\u53ef\u884c\u7684\u66ff\u6362\u533a\u95f4\u4e2d\u53d6\u51fa\u5bf9\u7b54\u6848\u8d21\u732e\u6700\u5927\u7684\u53bb\u6389\uff0c\u4f7f\u5f97\u5f53\u524d2\u65b9\u5f0f\u53ef\u4ee5\u66ff\u63621\u65b9\u5f0f\u3002\n\n\u5982\u4f55\u5224\u65ad\u54ea\u4e9b2\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5f53\u524d2\u65b9\u5f0f\u66ff\u6362\u5462\uff1f\n\n~~\u6570\u636e\u7ed3\u6784\u5806\u780c\u554a~~\n\n\u5728\u8be5\u70b9\u540e\u76842\u65b9\u5f0f\u53ef\u66ff\u6362\u8be5\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ed6\u4eec\u4e4b\u95f4\u7684\uff08\u5dee\u5206\u6570\u7ec4\u5f62\u6210\u7684\u539f\u6570\u7ec4\uff09\u7684\u503c\u5927\u4e8e\u7b49\u4e8e100\u3002\u56e0\u4e3a\u66ff\u6362\u540e\uff0c\u4f1a\u9020\u6210\u8fd9\u6bb5\u533a\u95f4\u7684\u503c\u5168\u90e8\u51cf\u53bb100\u3002\n\n\u8fd9\u4e9b\u70b9\u7684\u96c6\u5408\u5728\u6570\u7ec4\u4e0a\u663e\u7136\u8fde\u7eed\uff0c\u4e0a\u961f\u5217\uff01\u5feb\u901f\u67e5\u8be2\u4e00\u4e2a\u6700\u503c\uff0c\u5e76\u5c06\u5176\u5220\u9664\uff0c\u4e0amultiset\uff08\u4e3a\u4ec0\u4e48\u4f1a\u5fd8\u8bb0\u61d2\u60f0\u5220\u9664\u7684\u4f18\u5148\u961f\u5217\uff0c\u660e\u660e\u961f\u5217\u5c31\u7528\u4e86\u61d2\u60f0\u5220\u9664\u7684\uff09\uff01\u533a\u95f4\u51cf\uff0c\u5728\u67d0\u4e2a\u65e0\u754c\u7684\uff0c\u4f46\u662f\u7a0d\u6709\u7279\u6b8a\u7684\u5e73\u9762\u5185\u5bfb\u627e\u6700\u9760\u5de6\u7684\u70b9\uff0c\u4e0d\u60f3\u4e5f\u4e0d\u6562\u6253\u6811\u5957\u6811\uff01\u4e0a\u4e8c\u5206\u5957\u7ebf\u6bb5\u6811\uff01\n\n~~\u6574\u4e2a\u8fc7\u7a0b\u8111\u5b50\u90fd\u662f\u8499\u7684\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u6ca1\u5e26\u8111\u5b50~~\n\n~~\u8003\u8bd5\u65f6\u8981\u662f\u6562\u8fd9\u4e48\u6de6\u5c31\u51c9\u4e86\u5440~~\n\n```cpp\n/*************************************************************************\n\t> File Name: CF767E.cpp\n\t> Author: The-Out-Land\n\t> Mail: 2264454706@qq.com \n\t> Created Time: 2020\u5e7401\u670812\u65e5 \u661f\u671f\u65e5 19\u65f600\u520635\u79d2\n ************************************************************************/\n \n#include <bits/stdc++.h>\n \n#define enter putchar('\\n')\n#define space putchar(' ')\n#define re register\n#define N 100010\n#define fi first\n#define se second\n#define int long long\n \n#define pii pair<int,int>\n \nusing namespace std;\n \nint a[N],b[N],val[N],g[N],T[N],n,C;\n \nint fans,ans,lim=n+1;\n \nbool bh[N],las[N];\n \nmultiset < pair <int,int> > s;\n \nqueue < pair <int,int> > q;\n \nconst int inf=100005;\n \nstruct Segment_Tree{\n\tint T[N<<2],tag[N<<2];\n\t#define ls (x<<1)\n\t#define rs (x<<1|1)\n\n\tinline void pushdown(int x){\n\t\tif(tag[x]){\n\t\t\tT[ls]+=tag[x];\n\t\t\tT[rs]+=tag[x];\n\t\t\ttag[ls]+=tag[x];\n\t\t\ttag[rs]+=tag[x];\n\t\t\ttag[x]=0;\n\t\t}\n\t\treturn;\n\t}\n\n\tinline void pushup(int x){\n\t\tT[x]=min(T[ls],T[rs]);\n\t}\n\n\tvoid add(int x,int l,int r,int lx,int rx,int val){\n\t\tif(lx<=l && r<=rx) {T[x]+=val;tag[x]+=val;return;}\n\t\tpushdown(x);\n\t\tint mid=(l+r)>>1;\n\t\tif(lx<=mid) add(ls,l,mid,lx,rx,val);\n\t\tif(rx>mid)\tadd(rs,mid+1,r,lx,rx,val);\n\t\tpushup(x);\n\t\treturn;\n\t}\n\n\tint query(int x,int l,int r,int lx,int rx){\n\t\tif(lx<=l && r<=rx) return T[x];\n\t\tpushdown(x);\n\t\tint mid=(l+r)>>1,ans=0x7f7f7f7f;\n\t\tif(lx<=mid) ans=min(ans,query(ls,l,mid,lx,rx));\n\t\tif(rx>mid)\tans=min(ans,query(rs,mid+1,r,lx,rx));\n\t\tpushup(x);\n\t\treturn ans;\n\t}\n}tree;\n \ninline int read(){\n\tint x=0;char c=getchar();bool y=1;\n\tfor(;c<'0' || c>'9';c=getchar()) if(c=='-') y=0;\n\tfor(;c>='0' && c<='9';c=getchar()) x=(x<<1)+(x<<3)+c-48;\n\tif(y) return x;\n\treturn -x;\n}\n \ninline void Input(){\n\tn=read();tree.add(1,1,n,1,n,read());\n\tfor(re int i=1;i<=n;++i)\ta[i]=read(),val[i]=a[i]/100,a[i]=a[i]%100;\n\tfor(re int i=1;i<=n;++i)\t{b[i]=read(),g[i]=b[i]*(100-a[i]);if(!a[i]) g[i]=0;ans+=g[i];}\n\tfor(re int i=1;i<=n;++i)\ttree.add(1,1,n,i,n,g[i]/b[i]);\n\treturn;\n}\n\ninline int find(int l,int r){\n\twhile(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(tree.query(1,1,n,l,mid)<100)\t\tr=mid;\n\t\telse\t\t\t\t\t\t\t\tl=mid+1;\n\t}\n\treturn l;\n}\n \ninline void solve(){\n\t\n\tint mn=0x7f7f7f7f;\n \n\tfor(re int i=n;i;--i)\n\t{\n\t\tif(!g[i]) continue;\n\t\tmn=tree.query(1,1,n,i,n);\n \n\t\t//cout<<\"now:\"<<fans<<\" \"<<i<<endl;\n \n\t\tif(mn>=100)\n\t\t{\n\t\t\tmn-=100;\n\t\t\tfans+=g[i];\n\t\t\ts.insert(make_pair(g[i],i));\n\t\t\tq.push(make_pair(g[i],i));\n\t\t\ttree.add(1,1,n,i,n,-100);\n\t\t\tlas[i]=1;\n\t\t\t//printf(\"choose:%lld\\n\",i);\n\t\t}\n \n\t\telse\n\t\t{\n\t\t\tpii x;\n\n\t\t\tlim=find(i,n);\n\n\t\t\twhile(q.size()){\n\t\t\t\tx=q.front();\n\t\t\t\t//cout<<query(x.se)-1<<\" \"<<x.se<<endl;\n\t\t\t\tif(x.se>lim || bh[x.se]) s.erase(x),q.pop();\n\t\t\t\telse break;\n\t\t\t}\n \n\t\t\t//cout<<q.size()<<\" \"<<lim<<endl;\n\t\n\t\t\tif(!q.size()) break;\n \n\t\t\tpii X=*s.begin();\n \n\t\t\t//cout<<g[i]<<\" \"<<i<<\" \"<<lim<<endl;\n\t\t\tif(g[i]<X.fi) continue;\n\t\t\ts.erase(X);\n\t\t\tbh[X.se]=1;\n\t\t\tq.push(make_pair(g[i],i));\n\t\t\ts.insert(make_pair(g[i],i));\n\t\t\tfans+=g[i]-X.fi;\n\t\t\ttree.add(1,1,n,i,X.se-1,-100);\n\t\t\tlas[i]=1;\n\t\t\tlas[X.se]=0;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans-fans);\n\tfor(re int i=1;i<=n;++i)\n\t{\n\t\tif(!a[i])\n\t\tprintf(\"%lld 0\\n\",val[i]);\n\t\telse if(las[i])\n\t\tprintf(\"%lld %lld\\n\",val[i],a[i]);\n\t\telse\n\t\tprintf(\"%lld 0\\n\",val[i]+1);\n\t}\n\treturn;\n}\n \nsigned main(){\n\tInput();\n\tsolve();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1578837369,
        "uid": 55357,
        "name": "Thaumaturge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF767E \u3010Change-free\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u53d1\u73b0\u53ea\u4f1a\u6709\u4e24\u79cd\u65b9\u6848\uff1a\n\n**\u4f7f\u7528\u6070\u597d\u7684\u94b1\u4ed8\u6b3e**\u6216**\u4ec5\u4f7f\u7528\u767e\u5143\u5927\u949e\u4ed8\u6b3e**\u3002\n\n\u4e0d\u59a8\u91c7\u7528\u53cd\u6094\u8d2a\u5fc3\u3002\n\n\u5f53\u80fd\u4f7f\u7528\u6070\u597d\u7684\u94b1\u4ed8\u6b3e\u65f6\uff0c\u5219\u4f7f\u7528\u3002\n\n\u5f53\u96f6\u94b1\u4e0d\u8db3\u4ee5\u4ed8\u6b3e\u65f6\uff0c\u5bfb\u6c42\u4e4b\u524d\u67d0\u4e2a\u7528\u6070\u597d\u94b1\u4ed8\u6b3e\u7684\u65e5\u5b50\u6539\u6210\u767e\u5143\u5927\u949e\u3002\n\n\u9009\u54ea\u4e00\u5929\u5462\uff1f\n\n**\u5173\u952e\u6027\u8d28\uff1a\u65e0\u8bba\u9009\u54ea\u4e00\u5929\uff0c\u96f6\u94b1\u6570\u90fd\u4f1a\u589e\u52a0 $100$\u3002**\n\n~~\u53ef\u4ee5\u81ea\u5df1\u627e\u4e2a\u6837\u4f8b\u63a8\u4e00\u4e0b\u5c31\u77e5\u9053\u4e86 qwq\u3002~~\n\n\u6240\u4ee5**\u9009\u62e9\u5e97\u5458\u4e0d\u6ee1\u610f\u5ea6\u589e\u52a0\u6700\u5c11\u7684\u4e00\u5929**,\u800c\u4e0d\u662f $w_{i}$ \u6700\u5c11\u7684\u90a3\u4e00\u5929\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u3002",
        "postTime": 1660380034,
        "uid": 260074,
        "name": "Tranquil_Domain",
        "ccfLevel": 3,
        "title": "CF767E"
    },
    {
        "content": "## \u601d\u8def\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u601d\u8003\uff1a\u6bcf\u4e00\u5929\u4f60\u9009\u62e9\u627e\u96f6\u4e0e\u5426\u83b7\u5f97\u7684\u4ef7\u503c\u662f\u56fa\u5b9a\u7684\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u6211\u4eec\u65e0\u8bba\u4f55\u65f6\u4fee\u6539\u51b3\u7b56\u4e5f\u4e0d\u4f1a\u6709\u5f88\u5927\u7684\u590d\u6742\u5ea6\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5f00\u59cb\u8003\u8651\u8d2a\u5fc3\u7b97\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u51b3\u7b56\uff0c\u6211\u4eec\u5148\u8d2a\u5fc3\u5730\u90fd\u9009\u62e9\u4e0d\u627e\u96f6\uff0c\u4f7f\u5e97\u5458\u6012\u6c14\u503c\u6700\u5c0f\u3002\u4e07\u4e00\u53d1\u73b0\u4e86\u96f6\u94b1\u4e0d\u591f\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u627e\u96f6\u5e26\u6765\u7684\u6012\u6c14\u662f\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u9009\u51fa\u4e4b\u524d\u6240\u9020\u6210\u7684\u6012\u6c14\u503c\u6700\u5c0f\u7684\u6539\u53d8\u51b3\u7b56\u3002\n\n>\u4e3a\u4ec0\u4e48\u4e0d\u7528\u8003\u8651\u6539\u53d8\u4e4b\u524d\u7684\u51b3\u7b56\u4e3a\u6211\u4eec\u5e26\u6765\u7684\u96f6\u94b1\u6570\u91cf\u5462\uff1f\n\n\u8bbe $C$ \u4e3a\u9700\u4ed8\u6b3e\u7684\u603b\u6570\uff0c\u6613\u77e5\u627e\u96f6\u94b1\u6570\u56fa\u5b9a\u4e3a $100-(C\\%10)$ \uff0c\u6ce8\u610f\u4e4b\u524d\u4e5f\u4e0d\u7528\u4ed8\u90a3 $C\\%10$ \u5143\u96f6\u94b1\uff0c\u53ef\u4ee5\u77e5\u9053\u6539\u53d8\u4e4b\u524d\u7684\u4e00\u6b21\u51b3\u7b56\u56fa\u5b9a\u4e3a\u6211\u4eec\u5e26\u6765 $100$ \u5143\u96f6\u94b1\uff0c\u800c\u4e14\u80af\u5b9a\u591f\u73b0\u5728\u51b3\u7b56\u9700\u4ed8\u7684\u96f6\u94b1\u3002\n\n## \u6ce8\u610f\u4e8b\u9879\n- \u8981\u7528\u5c0f\u6839\u5806\u4f18\u5316\u6765\u9009\u53d6\u5e76\u6539\u53d8\u4e4b\u524d\u7684\u51b3\u7b56\n\n- \u9700\u8981\u7279\u5224\u6574\u9664\u65f6\u6240\u9700\u96f6\u94b1\u4e3a\u96f6\u7684\u60c5\u51b5\n\n## \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nstruct day\n{\tll c,w,pap,coi,i;  //pap\u8868\u793a\u7528\u7684\u7eb8\u5e01\uff0ccoi\u8868\u793a\u5e94\u8be5\u7528\u7684\u786c\u5e01\uff0ci\u4e3a\u4e0b\u6807\n\tll val;  //\u5f53\u9009\u62e9\u627e\u96f6\u65f6\u7684\u4ee3\u4ef7\n\tbool sav; //\u51b3\u7b56\u6807\u8bc6\n\tbool operator <(const day x)const\n\t{\treturn val>x.val;   //\u9ed8\u8ba4\u5927\u6839\u5806\uff0c\u91cd\u8f7d\u4e3a\u5927\u4e8e\u53f7\u5b9e\u73b0\u5c0f\u6839\u5806\n\t}\n}a[100010];  \npriority_queue<day> h;\nll ans;  //\u6ce8\u610f\u5f00longlong\nint main()\n{\tll n,change;\n\tcin>>n>>change;\n\tfor (ll i=1; i<=n; i++) cin>>a[i].c;\n\tfor (ll i=1; i<=n; i++) cin>>a[i].w;\n\tfor (ll i=1; i<=n; i++)\n\t{\ta[i].pap=a[i].c/100,a[i].coi=a[i].c%100,a[i].i=i;\n\t\ta[i].val=(ll)(100-a[i].coi)*a[i].w,a[i].sav=0;\n\t\tif (!a[i].coi) continue;   //\u7279\u5224\u6574\u9664\u7684\u60c5\u51b5\uff0c\u4e0d\u52a0\u5165\u8003\u8651\u8303\u56f4\n\t\th.push(a[i]);  //\u8bb0\u4f4f\u53ef\u80fdval\u503c\u6700\u5c0f\u7684\u5c31\u662f\u672c\u8eab\uff0c\u8981\u63d0\u524d\u5165\u5806\n\t\tif (a[i].coi>change)\n\t\t{\tday j=h.top(); h.pop();\n\t\t\ta[j.i].sav=1,ans+=j.val,change+=100; //\u56fa\u5b9a\u52a0100\u96f6\u94b1 \n\t\t}\n\t\tchange-=a[i].coi;\n\t}\n\tcout<<ans<<endl;\n\tfor (ll i=1; i<=n; i++)\n\t\tif (a[i].sav) cout<<a[i].pap+1<<\" 0\"<<endl;\n\t\telse cout<<a[i].pap<<\" \"<<a[i].coi<<endl;\n\treturn 0;\n}\n```\n***\n[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF767E)",
        "postTime": 1597137812,
        "uid": 163729,
        "name": "yyyyxh",
        "ccfLevel": 7,
        "title": "CF767E Change_Free \u9898\u89e3"
    }
]