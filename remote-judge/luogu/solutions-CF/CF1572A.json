[
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u4f60\u6709\u4e00\u672c\u4e66\uff0c\u5b83\u5171\u6709 $n$ \u7ae0\uff0c\u67d0\u4e9b\u7ae0\u8282\u6709**\u524d\u7f6e\u7ae0\u8282**\uff0c\u5373\u82e5\u7b2c $u$ \u7ae0\u662f\u7b2c $v$ \u7ae0\u7684\u524d\u7f6e\u7ae0\u8282\uff0c\u800c\u4f60\u5f53\u524d\u53c8\u6ca1\u6709\u770b\u61c2\u7b2c $u$ \u7ae0\uff0c\u90a3\u4e48\uff0c\u4f60\u5f53\u524d\u4e00\u5b9a\u770b\u4e0d\u61c2\u7b2c $v$ \u7ae0\uff0c\u663e\u7136\uff0c\u6ca1\u6709\u524d\u7f6e\u7ae0\u8282\u7684\u7ae0\u8282\u4e00\u904d\u5c31\u80fd\u770b\u61c2\u3002\uff08\u4e00\u4e2a\u7ae0\u8282\u7684\u524d\u7f6e\u7ae0\u8282\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\uff09\n\n\u4f60\u53ef\u4ee5\u4e00\u904d\u4e00\u904d\u4ece\u524d\u5f80\u540e\u7684\u770b\u8fd9\u672c\u4e66\uff0c\u95ee\uff1a\u4f60\u6700\u5c11\u8981\u8bfb\u51e0\u904d\u8fd9\u672c\u4e66\uff0c\u624d\u80fd\u5c06\u5b83\u7684\u6240\u6709\u7ae0\u8282\u5168\u90e8\u770b\u61c2\u3002\u82e5\u4f60\u6c38\u8fdc\u4e0d\u80fd\u770b\u61c2\u6240\u6709\u7684\u7ae0\u8282\uff0c\u90a3\u4e48\u8f93\u51fa $-1$.\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n$1 \\le T \\le 2 \\cdot 10^4$, $1 \\le n \\le 2 \\cdot 10 ^ 5$, $\\sum{k_i} \\le 2\\cdot 10^5$.\n\n\n\n# \u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u7ae0\u8282\u7684\u524d\u7f6e\u7ae0\u8282\u5411\u8be5\u7ae0\u8282\u5efa\u5355\u5411\u8fb9\uff0c\u7136\u540e\u5224\u73af\uff0c\u5982\u679c\u6709\u73af\uff0c\u8f93\u51fa $-1$ \u5373\u53ef\u3002\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff1f\uff09\n\n\u663e\u7136\uff0c\u82e5\u7b2c $u$ \u7ae0\u662f\u7b2c $v$ \u7ae0\u7684\u524d\u7f6e\u7ae0\u8282\uff0c\u800c\u7b2c $v$ \u7ae0\u53c8\u662f\u7b2c $u$ \u7ae0\u7684\u524d\u7f6e\u7ae0\u8282\uff0c\u90a3\u4f60\u4e00\u5b9a\u770b\u4e0d\u61c2\u8fd9\u4e24\u7ae0\u3002\n\n\u8fdb\u4e00\u6b65\u601d\u8003\uff0c\u53d1\u73b0\u5982\u679c\u5efa\u51fa\u6765\u7684\u56fe\u4e2d\u6709\u73af\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\uff1a\u7b2c $u$ \u7ae0\u662f\u7b2c $v$ \u7ae0\u7684\u524d\u7f6e\u7ae0\u8282\u7684\u524d\u7f6e\u7ae0\u8282\u7684\u524d\u7f6e\u7ae0\u8282\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\uff0c\u800c\u7b2c $v$ \u7ae0\u53c8\u662f\u7b2c $u$ \u7ae0\u7684\u524d\u7f6e\u7ae0\u8282\uff0c\u8fd9\u6837\u7684\u5173\u7cfb\u3002\u90a3\u4f60\u4e5f\u4e00\u5b9a\u770b\u4e0d\u61c2\u8fd9\u4e9b\u7ae0\u3002\n\n\u5efa\u51fa\u56fe\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n + m)$ \u7684\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\u6765\u5224\u73af\u3002\uff08\u4e0d\u4f1a\u62d3\u6251\u6392\u5e8f\u8bf7\u51fa\u95e8\u53f3\u8f6c OI Wiki\uff09\n\n\u7136\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u601d\u8003\u5982\u4f55\u6c42\u7b54\u6848\u3002\n\n\u8fd9\u91cc\u4f7f\u7528**\u52a8\u6001\u89c4\u5212**\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5b9a\u4e49\u72b6\u6001 $f(i)$ \u8868\u793a\u770b\u61c2\u7b2c $i$ \u7ae0\u6700\u5c11\u9700\u8981\u8bfb\u591a\u5c11\u904d\u4e66\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf(v)=\\max(f(u)+(u>v))\n$$\n\uff08 $u$ \u4e3a $v$ \u7684\u524d\u7f6e\u7ae0\u8282 \uff09\n\n\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u5982\u679c $u < v$, \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u904d\u4e2d\u628a\u7b2c $u$ \u7ae0\u548c\u7b2c $v$ \u7ae0\u90fd\u770b\u61c2\uff1b\u5426\u5219\u5c31\u9700\u8981\u518d\u770b\u4e00\u904d\u4e86\u3002\n\n\u7b54\u6848\u663e\u7136\u662f $\\max\\limits^{n}_{i=1}f(i)$.\n\n\u90a3\u8fd9\u4e2a\u52a8\u6001\u89c4\u5212\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u89c2\u5bdf\u53d1\u73b0\uff0c\u8fd9\u4e2a\u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u50cf\u6781\u4e86\u6700\u77ed\u8def\uff08\u8fd9\u91cc\u662f\u6700\u957f\u8def\uff09\u7684\u677e\u5f1b\u64cd\u4f5c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8dd1\u4e2a\u6700\u957f\u8def\u5c31\u884c\u4e86\u3002\n\n\u4f46\u6709\u51e0\u4e2a\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff1a\n\n1. \u8fd9\u5e76\u4e0d\u662f\u5355\u6e90\u6700\u77ed\u8def\uff0c\u6bcf\u4e00\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u7ed3\u70b9\u90fd\u662f\u6e90\u70b9\u3002\n2. \u5927\u90e8\u5206\u6700\u77ed\u8def\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $\\Theta(n \\log n)$ \u7684\uff0c\u4f46\u662f\uff0c\u4ece\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u65f6\u95f4\u590d\u6742\u6700\u597d\u662f $\\Theta(n)$.\n\n\n\u89e3\u51b3\u65b9\u6cd5\u6709\u4e24\u4e2a\uff1a\n\n1. \u628a\u6240\u6709\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5165\u961f\uff0c\u5e76\u4e14\u5c06\u8fb9\u6743\u4e58 $-1$\uff0c\u8dd1 $0$,$-1$ **\u6700\u77ed\u8def** \u5373\u53ef\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u662f\u4f7f\u7528\u53cc\u7aef\u961f\u5217\uff1a\u5982\u679c\u8fb9\u6743\u4e3a $-1$\uff0c\u5c06\u6269\u5c55\u7684\u7ed3\u70b9\u4ece\u961f\u9996\u5165\u961f\uff1b\u5982\u679c\u8fb9\u6743\u4e3a $0$\uff0c\u5219\u5c06\u6269\u5c55\u51fa\u6765\u7684\u7ed3\u70b9\u4ece\u961f\u5c3e\u5165\u961f\u3002\u6700\u540e\u518d\u5c06\u7b54\u6848\u4e58 $-1$\u3002\u8fd9\u6837\u53ef\u4ee5\u8fbe\u5230\u4f18\u5148\u961f\u5217\u7684\u6548\u679c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n2. \u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u5728\u8dd1\u62d3\u6251\u6392\u5e8f\u7684\u540c\u65f6\u8dd1\u6700\u957f\u8def\u3002\u5728\u5220\u9664\u7ed3\u70b9\u65f6\u4e0e\u5176\u8fde\u63a5\u7684\u7ed3\u70b9\u505a\u677e\u5f1b\u64cd\u4f5c\u5373\u53ef\u3002\n\n\n\u6cd5\u4e8c\u8bc1\u660e\uff1a\n\n\u663e\u7136\uff0c\u8fde\u63a5\u4e00\u4e2a\u7ed3\u70b9\u7684\u6240\u6709\u7ed3\u70b9\uff08\u5373\u524d\u7f6e\u7ae0\u8282\uff09\u4e00\u5b9a\u6bd4\u5b83\u66f4\u65e9\u5220\u9664\u3002\u6240\u4ee5\uff0c\u5b83\u7684\u6240\u6709\u524d\u7f6e\u7ae0\u8282\u90fd\u4f1a\u6765\u66f4\u65b0\u5b83\u4e00\u6b21\uff0c\u4e0e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7b26\u5408\uff0c\u8bc1\u6bd5\u3002\n\n# \u5b9e\u73b0\n\n\u8fd9\u91cc\u7528\u7684\u662f\u6cd5\u4e8c~~\u56e0\u4e3a\u597d\u5199~~\u3002\n\n\u4e0d\u5efa\u8bae\u770b\u4ee3\u7801\uff0c\u6700\u597d\u81ea\u5df1\u5199\u3002\n\n$code:$\n\n```cpp\n#include <bits/stdc++.h>\n \n#define max(a, b) (a > b) ? a : b\n \nconst int Maxn = 2e5 + 10; \n \nint T;\nint n;\n \nstruct edge {\n\tint to, nxt; \n} e[Maxn];\nint head[Maxn], tot;\n \nint cnt[Maxn];\nint f[Maxn]; \n \nvoid init() { // \u521d\u59cb\u5316\u522b\u5fd8\n\tmemset(head, 0, sizeof(head)); tot = 0;\n\tmemset(cnt, 0, sizeof(cnt));\n\tmemset(f, 0, sizeof(f));\n}\n \nvoid add_edge(int x, int y) {\n\ttot++;\n\te[tot].to = y;\n\te[tot].nxt = head[x];\n\thead[x] = tot; \n}\n \nstd::queue<int> q; \nint top_sort() {\n\tint i;\n\tfor (i = 1; i <= n; i++) {\n\t\tif (cnt[i] == 0) {\n\t\t\tq.push(i);\n\t\t\tf[i] = 1; // \u6240\u6709\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u90fd\u53ef\u4ee5\u4e00\u904d\u770b\u61c2\n\t\t}\n\t}\n\twhile (!q.empty()) {\n\t\tint x = q.front(); q.pop(); \n\t\tfor (i = head[x]; i; i = e[i].nxt) {\n\t\t\tint y = e[i].to;\n\t\t\tf[y] = max(f[y], f[x] + (x > y)); // \u677e\u5f1b\u64cd\u4f5c\n\t\t\tcnt[y]--;\n\t\t\tif (cnt[y] == 0) {\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0; \n\tfor (i = 1; i <= n; i++) {\n\t\tif (cnt[i] != 0) return -1; // \u5982\u679c\u6ca1\u5220\u5e72\u51c0\uff0c\u5c31\u662f\u6709\u73af\n\t\tans = max(ans, f[i]); // \u7edf\u8ba1\u7b54\u6848\n\t}\n\treturn ans; \n}\n \nint main() {\n\tint i, j;\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tinit(); \n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 1; i <= n; i++) {\n\t\t\tint k;\n\t\t\tscanf(\"%d\", &k);\n\t\t\tfor (j = 1; j <= k; j++) {\n\t\t\t\tint x;\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\tadd_edge(x, i); // \u5efa\u53cd\u5411\u8fb9\n\t\t\t\tcnt[i]++; \n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", top_sort()); \n\t}\n\treturn 0; \n}\n```\n\n\u6700\u6162\u7684\u4e00\u4e2a\u70b9 $1.3s$, \u8f7b\u677e\u901a\u8fc7\u3002\n\n**update:**\n\n- 2021-10-6: \u5b8c\u5584\u4e86\u6cd5\u4e00\u5e76\u4fee\u6539\u4e86\u4e00\u4e9b\u7ec6\u8282\u3002",
        "postTime": 1633345464,
        "uid": 463210,
        "name": "zzzYheng",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1572A Book"
    },
    {
        "content": "#### \u9898\u76ee\u7b80\u8ff0\n\n------------\n\n\n\u6709\u4e00\u672c\u4e66\u5171\u6709 $n$ \u7ae0\uff0c\u5176\u4e2d\u67d0\u4e9b\u7ae0\u8282\u6709\u524d\u7f6e\u7ae0\u8282\uff0c\u82e5\u7b2c $u$ \u7ae0\u662f\u7b2c $v$ \u7ae0\u7684\u524d\u7f6e\u7ae0\u8282\uff0c\u800c\u4f60\u5f53\u524d\u53c8\u6ca1\u6709\u770b\u61c2\u7b2c $u$ \u7ae0\uff0c\u90a3\u4e48\uff0c\u4f60\u5f53\u524d\u4e00\u5b9a\u770b\u4e0d\u61c2\u7b2c $v$ \u7ae0\uff0c\u663e\u7136\uff0c\u6ca1\u6709\u524d\u7f6e\u7ae0\u8282\u7684\u7ae0\u8282\u4e00\u904d\u5c31\u80fd\u770b\u61c2\u3002\n\u4f60\u53ef\u4ee5\u4e00\u904d\u4e00\u904d\u4ece\u524d\u5f80\u540e\u7684\u770b\u8fd9\u672c\u4e66\uff0c\u95ee\uff1a\u4f60\u6700\u5c11\u8981\u8bfb\u51e0\u904d\u8fd9\u672c\u4e66\uff0c\u624d\u80fd\u5c06\u5b83\u7684\u6240\u6709\u7ae0\u8282\u5168\u90e8\u770b\u61c2\u3002\u82e5\u6c38\u8fdc\u4e0d\u80fd\u770b\u61c2\u6240\u6709\u7684\u7ae0\u8282\uff0c\u90a3\u4e48\u8f93\u51fa $-1$\u3002\n\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n$1 \\leq T \\leq 2 \\cdot 10^{4}$\uff0c$1 \\leq n \\leq 2 \\cdot 10^{5}$\uff0c$\\sum k_{i} \\leq 2 \\cdot 10^{5}$\u3002\n\n\n#### \u9898\u76ee\u5206\u6790\n\n\n------------\n\n\u6839\u636e\u9898\u76ee\u63cf\u8ff0\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u77e5\u9053\u6bcf\u4e00\u4e2a\u7ae0\u8282\u90fd\u4e0e\u5176\u524d\u7f6e\u7ae0\u8282\u6709\u5173\uff0c\u6545\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u62d3\u6251\u6392\u5e8f\u3002\u5177\u4f53\u5b9e\u73b0\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n- \u5982\u679c\u60f3\u8981\u7406\u89e3\u7b2c $x$ \u7ae0\u5c31\u5fc5\u987b\u8981\u7406\u89e3\u7b2c $y$ \u7ae0\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fde\u4e00\u6761 $y \u2192 x$ \u7684\u8fb9\n\n- \u4f7f\u7528\u4f18\u5148\u961f\u5217\u5bf9\u56fe\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u5c06\u9605\u8bfb\u6b21\u6570\u5c0f\u7684\u653e\u5728\u524d\u9762\uff0c\u82e5\u9605\u8bfb\u6b21\u6570\u76f8\u540c\u5219\u6309\u7167\u9605\u8bfb\u7ae0\u8282\u7f16\u53f7\u6392\u5e8f\u3002\u5047\u8bbe\u7b2c $x$ \u7ae0\u5728\u7b2c $y$ \u7ae0\u7406\u89e3\u4e4b\u540e\u5c31\u80fd\u7406\u89e3\uff0c\u82e5 $x$ \u5927\u4e8e $y$ \u5219\u672c\u6b21\u9605\u8bfb\u5c31\u53ef\u4ee5\u7406\u89e3 $x$ \u7ae0\uff0c\u5426\u5219\u9700\u8981\u4e0b\u4e00\u6b21\u624d\u80fd\u7406\u89e3\u7b2c $x$ \u7ae0\u3002\n\n- \u82e5\u56fe\u4e2d\u5b58\u5728\u73af\u5219\u4e0d\u6ee1\u8db3\u62d3\u6251\u6392\u5e8f\u7684\u6761\u4ef6\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c\u6545\u76f4\u63a5\u8f93\u51fa $-1$\u3002\n\n- \u76f4\u63a5\u8f93\u51fa\u9605\u8bfb\u6b21\u6570\u6700\u591a\u7684\u7ae0\u8282\u8bfb\u4e86\u591a\u5c11\u904d\n\n#### \u4ee3\u7801\u5b9e\u73b0\n\n\n------------\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<vector>\n#include<queue>\nusing namespace std;\nconst int N = 2e5 + 10;\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n    for(; isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+(ch^48);\n    return x*f;\n}\nint n,ind[N],tot,ans;\nvector<int> nodes[N];\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >q;\nvoid tuopu(){\n\tfor(int i=1;i<=n;i++){\n\t\tif(ind[i] == 0){\n\t\t\tq.push(make_pair(1,i));\n\t\t}\n\t}\n\twhile(!q.empty()){\n\t\tint u = q.top().second;\n\t\tint s = q.top().first;\n\t\tq.pop();\n\t\ttot++;\n\t\tans = max(ans,s);\n\t\tfor(int i=0,len=nodes[u].size();i<len;i++){\n\t\t\tint v = nodes[u][i];\n\t\t\tif(--ind[v] == 0){\n\t\t\t\tif(v > u){\n\t\t\t\t\tq.push(make_pair(s,v));\n\t\t\t\t}\n\t\t\t\telse q.push(make_pair(s+1,v)); \n\t\t\t}\n\t\t}\n\t} \n\treturn;\n}\nint main(){\n\tint T = read();\n\twhile(T--){\n\t\tn = read();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tnodes[i].clear();\n\t\t}\n\t\ttot = ans = 0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tind[i] = read();\n\t\t\tfor(int j=1;j<=ind[i];j++){\n\t\t\t\tint x = read();\n\t\t\t\tnodes[x].push_back(i);\n\t\t\t}\n\t\t}\n\t\ttuopu();\n\t\tif(tot < n)\n\t\t\tprintf(\"-1\\n\");\n\t\telse printf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1645528101,
        "uid": 335615,
        "name": "0xFF",
        "ccfLevel": 0,
        "title": "CF1572A"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u9898\u76ee\u4e2d\u7ae0\u8282\u4e0e\u7ae0\u8282\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\n\n\u5047\u8bbe\u8981\u770b\u61c2\u7b2c $i$ \u7ae0\uff0c\u8981\u5148\u770b\u61c2 $a_1,a_2,a_3,...,a_k$ \u7ae0\u7684\u5185\u5bb9\u3002\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u628a\u6bcf\u4e2a\u7ae0\u8282\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u5c06 $a_1,a_2,a_3,...,a_k$ \u7ae0\u6240\u4ee3\u8868\u7684\u70b9\u5411\u7b2c $i$ \u7ae0\u6240\u4ee3\u8868\u7684\u70b9\u8fde\u6709\u5411\u8fb9\u3002**\u4e8e\u662f\u6574\u672c\u4e66\u7684\u7ae0\u8282\u5173\u7cfb\u5c31\u53d8\u6210\u4e86\u4e00\u5f20\u6709\u5411\u56fe\u3002**\n\n\u518d\u8003\u8651\u770b\u4e66\u7684\u8fc7\u7a0b\u3002\n\n\u663e\u7136\uff0c\u770b\u4e66\u65f6\u8981\u5148\u4ece\u6ca1\u6709\u524d\u7f6e\u7ae0\u8282\u7684\u7ae0\u8282\u5f00\u59cb\u7406\u89e3\uff0c\u7136\u540e\u518d\u7406\u89e3\u6709\u524d\u7f6e\u7ae0\u8282\u7684\u7ae0\u8282\u3002\u8f6c\u6362\u5230\u56fe\u4e0a\uff0c\u5c31\u662f\u4ece\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u5f00\u59cb\uff0c\u9010\u4e00\u5220\u6389\u8fd9\u4e9b\u70b9\u7684\u8fde\u8fb9\uff0c\u7136\u540e\u4ea7\u751f\u65b0\u7684\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\uff0c\u518d\u5220\u8fb9......\u4e8e\u662f\uff0c\u770b\u4e66\u7684\u8fc7\u7a0b\u88ab\u8f6c\u6362\u4e3a\u4e86 **\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e0a\u62d3\u6251\u6392\u5e8f\u7684\u8fc7\u7a0b\u3002**\n\n\u63a5\u4e0b\u6765\u8fdb\u4e00\u6b65\u8003\u8651\u5982\u4f55\u62d3\u6251\u6392\u5e8f\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u9898\u76ee\u8981\u6211\u4eec\u8f93\u51fa\u7684\u662f**\u81f3\u5c11\u770b\u51e0\u904d\u4e66\u624d\u80fd\u7406\u89e3\u6574\u672c\u4e66\u7684\u5185\u5bb9**\u3002\u800c\u770b\u4e66\u7684\u65f6\u5019\uff0c**\u4e0d\u80fd\u8df3\u7740\u770b\u7ae0\u8282\uff0c\u800c\u662f\u8981\u4e00\u7ae0\u4e00\u7ae0\u7684\u5f80\u4e0b\u770b**\u3002\u56e0\u6b64\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u6734\u7d20\u7684\u62d3\u8865\u6392\u5e8f\uff0c\u5e94\u5f53\u52a0\u4ee5\u4fee\u6539\u3002\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4e00\u79cd\u5f88\u66b4\u529b\u7684\u7b97\u6cd5\uff0c\u5c31\u662f\u6a21\u62df\u6bcf\u6b21\u770b\u4e66\u7684\u8fc7\u7a0b\u5e76\u62d3\u8865\u6392\u5e8f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u5faa\u73af\u904d\u5386\u4e66\u7684 $n$ \u7ae0\uff0c\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u53ef\u4ee5\u7406\u89e3\u7684\u7ae0\u8282\u65f6\u5c31\u5220\u8fb9\u3002\u5f88\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e2a\u66b4\u529b\u7b97\u6cd5\u5728\u7b2c\u56db\u4e2a\u6d4b\u8bd5\u70b9\u8d85\u65f6\u4e86\u3002\n\n\u8003\u8651\u4f18\u5316\u8fd9\u4e00\u66b4\u529b\u7b97\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u7b97\u6cd5\u6d88\u8017\u65f6\u95f4\u6700\u591a\u7684\u90e8\u5206\u5728\u4e8e\u6a21\u62df\u770b\u4e66\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u6700\u7ec8\u7b54\u6848\u4e0e $n$ \u7684\u4e58\u79ef\u592a\u5927\uff0c\u8d85\u65f6\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\u800c\u5b9e\u9645\u4e0a\uff0c**\u5df2\u7ecf\u7406\u89e3\u7684\u7ae0\u8282\u4e0d\u9700\u8981\u518d\u88ab\u904d\u5386\u5230**\u3002\u56e0\u6b64\u6211\u4eec\u8981\u8003\u8651\u5982\u4f55\u8ba9\u6bcf\u4e2a\u7ae0\u8282\u53ea\u88ab\u904d\u5386\u4e00\u6b21\u3002\n\n\u5982\u679c\u8981\u6c42\u6bcf\u4e2a\u7ae0\u8282\u4ec5\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u6211\u4eec\u9700\u8981\u56de\u5f52\u5230\u6734\u7d20\u7684\u62d3\u6251\u6392\u5e8f\u3002\u4f46\u662f\u6734\u7d20\u7684\u62d3\u6251\u6392\u5e8f\u5b58\u5728\u4e00\u4e2a\u663e\u7136\u7684\u95ee\u9898\uff1a**\u5982\u4f55\u5728\u6392\u5e8f\u4e2d\u786e\u5b9a\u770b\u4e66\u7684\u5148\u540e\u987a\u5e8f\u3002**\n\n\u6211\u4eec\u518d\u91cd\u65b0\u8003\u8651\u770b\u4e66\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c**\u770b\u4e66\u65f6\u603b\u662f\u4ece\u7f16\u53f7\u5c0f\u7684\u7ae0\u8282\u770b\u5230\u7f16\u53f7\u5927\u7684\u7ae0\u8282**\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5c0f\u6839\u5806\uff0c\u6bcf\u6b21\u53d6\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\u7ae0\u8282\u89c2\u770b\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u770b\u4e66\u7684\u7ae0\u8282\u987a\u5e8f\u3002\n\n\u4f46\u8fd9\u91cc\u53c8\u5b58\u5728\u4e00\u4e2a\u65b0\u7684\u95ee\u9898\uff1a\u5047\u8bbe\u770b\u4e66\u770b\u5230\u7b2c $4$ \u7ae0\u65f6\uff0c\u7b2c $3$ \u7ae0\u548c\u7b2c $5$ \u7ae0\u7684\u524d\u7f6e\u7ae0\u8282\u90fd\u770b\u5b8c\u4e86\u3002\u8fd9\u65f6\u7a0b\u5e8f\u628a $3$ \u548c $5$ \u4e00\u8d77\u653e\u8fdb\u5c0f\u6839\u5806\u3002\u90a3\u4e48\u770b\u4e0b\u4e00\u7ae0\u65f6\uff0c\u7a0b\u5e8f\u4ece\u5806\u4e2d\u53d6\u51fa\u7684\u7ae0\u8282\u662f $3$\uff0c\u4f46\u662f\u6211\u4eec\u770b\u4e66\u5df2\u7ecf\u770b\u5230\u7b2c $4$ \u7ae0\u4e86\uff0c\u4e0d\u80fd\u8df3\u56de\u53bb\u770b\u7b2c $3$ \u7ae0\uff0c\u4e8e\u662f\u6211\u4eec\u7684\u7b54\u6848\u5c31\u51fa\u9519\u4e86\u3002\n\n\u4ece\u53e6\u4e00\u65b9\u9762\u60f3\uff0c\u65e2\u7136\u770b\u5230\u7b2c $4$ \u7ae0\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u7406\u89e3\u7b2c $3$ \u7ae0\u4e86\uff0c**\u4e3a\u4ec0\u4e48\u4e0d\u628a\u7b2c $3$ \u7ae0\u653e\u8fdb\u4e0b\u4e00\u8f6e\u770b\u4e66\u7684\u5b89\u6392\u4e2d\u5462**\uff1f\u4e8e\u662f\u6211\u4eec\u5f00\u4e24\u4e2a\u5c0f\u6839\u5806\uff0c\u4e00\u4e2a\u5b58\u50a8\u5f53\u524d\u5728\u770b\u7684\u7ae0\u8282\uff0c\u4e00\u4e2a\u5b58\u50a8\u4e0b\u4e00\u6b21\u80fd\u770b\u7684\u7ae0\u8282\u3002\u5f53\u5220\u5b8c\u8fb9\u51fa\u73b0\u65b0\u7684\u80fd\u7406\u89e3\u7684\u7ae0\u8282\u65f6\uff0c\u53ef\u4ee5\u628a\u6bd4\u5f53\u524d\u7ae0\u8282\u5e8f\u53f7\u5927\u7684\u7ae0\u8282\u52a0\u5230\u6b63\u5728\u7528\u4e8e\u6392\u5e8f\u7684\u5806\u4e2d\uff0c\u628a\u6bd4\u5f53\u524d\u7ae0\u8282\u5e8f\u53f7\u5c0f\u7684\u7ae0\u8282\u52a0\u5230\u53e6\u4e00\u4e2a\u5806\u4e2d\u3002\u7136\u540e\u5728\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u8f6e\u6d41\u4f7f\u7528\u8fd9\u4e24\u4e2a\u5806\uff0c\u5c31\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n\u6700\u540e\u8003\u8651\u5982\u4f55\u5224\u5b9a\u65e0\u89e3\u3002\u53ef\u4ee5\u5728\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u7edf\u8ba1\u770b\u7684\u7ae0\u8282\u6570\u91cf\u3002\u5982\u679c\u7edf\u8ba1\u7ed3\u679c\u6700\u540e\u6ca1\u6709 $n$ \u7ae0\uff0c\u5373\u53ef\u5224\u5b9a\u4e3a\u65e0\u89e3\u3002\n\n\u81f3\u6b64\uff0c\u6b64\u9898\u5f97\u89e3\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define ll long long\n#define rgt register int\nusing namespace std;\n\nconst int mxn = 2e5+5;\nint tot,n,cnt,ans;\nint nxt[mxn],lst[mxn],to[mxn],kn[mxn];\npriority_queue < int , vector<int> , greater<int> > que[2];\n\ninline void add(int a,int b){\n\ttot++;\n\tto[tot]=b;\n\tnxt[tot]=lst[a];\n\tlst[a]=tot;\n}   //\u8fde\u8fb9\n\nint main(){\n\tint test,chp,q=0;\n\tscanf(\"%d\",&test);\n\twhile(test--){\n\t\t\n\t\tscanf(\"%d\",&n);\n\t\tmemset(kn,0,sizeof(kn));\n\t\tmemset(lst,0,sizeof(lst));\n\t\tfor(rgt di,i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&di);\n\t\t\tfor(rgt d,j=1;j<=di;j++){\n\t\t\t\tscanf(\"%d\",&d);\n\t\t\t\tkn[i]++;\n\t\t\t\tadd(d,i);\n\t\t\t}\n\t\t}  //\u6570\u636e\u8bfb\u5165\u4e0e\u8fde\u8fb9\u5efa\u56fe\n\t\t\n\t\tfor(rgt i=1;i<=n;i++){\n\t\t\tif(!kn[i]){\n\t\t\t\tque[q].push(i);\n\t\t\t}\n\t\t}  //\u628a\u4e0d\u9700\u8981\u524d\u7f6e\u7ae0\u8282\u7684\u7ae0\u8282\u5148\u653e\u8fdb\u5806\u91cc\u9762\n\t\t\n\t\tans=cnt=0;\u3000\u3000//cnt\u7edf\u8ba1\u7406\u89e3\u7684\u7ae0\u8282\u6570\u91cf\uff0cans\u7edf\u8ba1\u770b\u4e66\u6b21\u6570\n\t\twhile(!que[0].empty()||!que[1].empty()){\n\t\t\tans++;\n\t\t\twhile(!que[q].empty()){\n\t\t\t\tchp=que[q].top();\n\t\t\t\tque[q].pop();\n\t\t\t\tcnt++;\n\t\t\t\tfor(rgt i=lst[chp];i;i=nxt[i]){\n\t\t\t\t\tkn[to[i]]--;\n\t\t\t\t\tif(!kn[to[i]]){\n\t\t\t\t\t\tif(to[i]>chp)  \n\t\t\t\t\t\t\tque[q].push(to[i]);  //\u628a\u7f16\u53f7\u5927\u7684\u7ae0\u8282\u52a0\u5165\u5f53\u524d\u5806\u4e2d\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tque[q^1].push(to[i]);  //\u628a\u7f16\u53f7\u5c0f\u7684\u7ae0\u8282\u52a0\u5165\u53e6\u4e00\u4e2a\u5806\u4e2d\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tq^=1;  //\u8f6c\u6362\uff0c\u4f7f\u7528\u53e6\u4e00\u4e2a\u5806\n\t\t}\n\t\t\n\t\tif(cnt!=n)  //\u5224\u5b9a\u662f\u5426\u65e0\u89e3\u5e76\u8f93\u51fa\u7b54\u6848\n\t\t\tprintf(\"-1\\n\");\n\t\telse\n\t\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1632973144,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1572A \u3010Book\u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u81ea\u7136\u7684\u60f3\u6cd5\u3002\n\n\u9996\u5148\u770b\u5230\u9898\u9762\uff0c\u4ece\u8fd9\u4e9b\u7ea6\u675f\u5173\u7cfb\u5f88\u5bb9\u6613\u60f3\u5230**\u62d3\u6251\u6392\u5e8f**\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5b66\u4f1a\u7f16\u53f7\u4e3a $u$ \u7684\u7ae0\u8282\u9700\u8981\u7684\u65f6\u95f4 $f_u$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\max f_u$\u3002\n\n\u8bb0\u5b66\u4f1a $u$ \u7684\u524d\u9a71\u7ae0\u8282\u4e3a $pre$\uff0c\u90a3\u4e48\u6211\u4eec\u6709 $f_u = \\max (f_{pre} + [pre>u])$\u3002\n\n> $[pre>u]$ \u4ee3\u8868\u5982\u679c $pre>u$ \u53d6 $1$\uff0c\u53cd\u4e4b\u53d6 $0$\u3002\n\n\n\n```cpp\n// Problem: A. Book\n// Contest: Codeforces - Codeforces Round #743 (Div. 1)\n// URL: https://codeforces.com/problemset/problem/1572/A\n// Memory Limit: 256 MB\n// Time Limit: 1500 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define debug(x) cerr << #x << \": \" << (x) << endl\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define dwn(i,a,b) for(int i=(a);i>=(b);i--)\n\nusing pii = pair<int, int>;\nusing ll = long long;\n\ninline void read(int &x){\n    int s=0; x=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9') {if(ch=='-')x=-1;ch=getchar();}\n    while(ch>='0' && ch<='9') s=(s<<3)+(s<<1)+ch-'0',ch=getchar();\n    x*=s;\n}\n\nconst int N=2e5+5, M=N<<1;\n\nstruct Edge{\n\tint to, w, next;\n}e[M];\n\nint h[N], tot;\n\nvoid add(int u, int v, int w){\n\te[tot].to=v, e[tot].w=w, e[tot].next=h[u], h[u]=tot++;\n}\n\nint n;\nint deg[N], f[N];\n\nint bfs(){\n\tqueue<int> q;\n\trep(i,1,n) if(!deg[i]) q.push(i);\n\trep(i,1,n) f[i]=0;\n\t\n\tint cnt=0;\n\twhile(q.size()){\n\t\tint u=q.front(); q.pop();\n\t\tcnt++;\n\t\t\n\t\tfor(int i=h[u]; ~i; i=e[i].next){\n\t\t\tint go=e[i].to;\n\t\t\tf[go]=max(f[go], f[u]+e[i].w);\n\t\t\tif(--deg[go]==0){\n\t\t\t\tq.push(go);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(cnt!=n) return -1;\n\treturn *max_element(f+1, f+1+n)+1;\n}\n\nint main(){\n\tint T; cin>>T;\n\twhile(T--){\n\t\tcin>>n;\n\t\trep(i,1,n) h[i]=-1, deg[i]=0;\n\t\ttot=0;\n\t\t\n\t\trep(i,1,n){\n\t\t\tint k; read(k);\n\t\t\twhile(k--){\n\t\t\t\tint u; read(u);\n\t\t\t\tadd(u, i, u>i);\n\t\t\t\tdeg[i]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout<<bfs()<<endl;\n\t}\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1637755409,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "\u3010\u56fe\u8bba\u3011CF1572A Book"
    },
    {
        "content": "# \u62d3\u6251\u6392\u5e8f\u9898\n\n- [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1572A)\n\n---\n\n- \u770b\u5230\u9898\u9762\uff0c\u9a6c\u4e0a\u60f3\u5230\u62d3\u6251\u6392\u5e8f\u3002\n\n\u505a\u6cd5\uff1a\n\n1. \u82e5\u8981\u7406\u89e3\u7b2c $x$ \u7ae0\uff0c\u5c31\u5fc5\u987b\u8981\u7406\u89e3\u7b2c $y$ \u7ae0\uff0c\u5c31\u8fde\u4e00\u6761\u4ece $y$ \u5230 $x$ \u7684\u8fb9\uff1b\n\n2. \u7528\u4f18\u5148\u961f\u5217\u5bf9\u56fe\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u9605\u8bfb\u6b21\u6570\u5c0f\u7684\u6392\u5728\u524d\u3002\u82e5\u9605\u8bfb\u6b21\u6570\u76f8\u540c\uff0c\u5219\u6309\u7ae0\u8282\u7f16\u53f7\u6392\u5e8f\u3002\u8bbe\u7b2c $x$ \u7ae0\u5728\u7b2c $y$ \u7ae0\u7406\u89e3\u540e\u5c31\u53ef\u4ee5\u7406\u89e3\uff1a\u82e5 $x$ \u5927\u4e8e $y$\uff0c\u5219\u672c\u6b21\u9605\u8bfb\u5c31\u53ef\u7406\u89e3 $x$\uff0c\u53cd\u4e4b\u5219\u4e0b\u6b21\u9605\u8bfb\u624d\u80fd\u7406\u89e3 $x$\uff1b\n\n3. \u82e5\u53d1\u73b0\u5b58\u5728\u73af\uff0c\u5219\u8f93\u51fa $-1$\uff1b\n\n4. \u5426\u5219\u8f93\u51fa\u9605\u8bfb\u6b21\u6570\u6700\u591a\u7684\u7ae0\u8282\u770b\u4e86\u51e0\u904d\u3002\n\n---\n\n**AC \u4ee3\u7801**\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> PII;\nint n,ind[200005],tot,ans;\nvector<int> nodes[200005];\npriority_queue<PII,vector<PII>,greater<PII> > pq;\nvoid topo()\n{\n\tfor(int i=1;i<=n;i++)if(ind[i]==0)pq.push(make_pair(1,i));\n\twhile(!pq.empty())\n\t{\n\t\tint u=pq.top().second,s=pq.top().first;\n\t\tpq.pop();\n\t\ttot++;\n\t\tans=max(ans,s);\n\t\tfor(int i=0,len=nodes[u].size();i<len;i++)\n\t\t{\n\t\t\tint v=nodes[u][i];\n\t\t\tif(--ind[v]==0)\n\t\t\t{\n\t\t\t\tif(v>u)pq.push(make_pair(s,v));\n\t\t\t\telse pq.push(make_pair(s+1,v));\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main()\n{\n\tint T;\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tcin>>n;\n\t\tfor(int i=1;i<=n;i++)nodes[i].clear();\n\t\ttot=ans=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tcin>>ind[i];\n\t\t\tfor(int j=1;j<=ind[i];j++)\n\t\t\t{\n\t\t\t\tint x;\n\t\t\t\tcin>>x;\n\t\t\t\tnodes[x].push_back(i);\n\t\t\t}\n\t\t}\n\t\ttopo();\n\t\tif(tot<n)cout<<\"-1\\n\";\n\t\telse cout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1634349802,
        "uid": 380019,
        "name": "xieyikai2333",
        "ccfLevel": 6,
        "title": "Book"
    },
    {
        "content": "\u770b\u5230\u5148\u51b3\u6761\u4ef6\uff0c\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u62d3\u6251\u6392\u5e8f\u3002\n\n\u7528\u62d3\u6251\u6392\u5e8f\u83b7\u5f97\u53ef\u4ee5\u9605\u8bfb\u7684\u7ae0\u6570\u3002\n\n\u5bf9\u4e8e\u7b2c $i$ \u7ae0 \uff0c $f[i]=max(f[j]+i<j)$ ( $j$ \u662f $i$ \u7684\u5148\u51b3\u6761\u4ef6\u3002) \n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u7ae0\u7684\u6b21\u6570\u5c31\u662f\u6240\u6709\u5148\u51b3\u6761\u4ef6\u8fbe\u6210\u540e\u7684\u60c5\u51b5\uff0c\u5982\u679c $i>j$ \u7684\u8bdd\uff0c\u987a\u7740\u5c31\u770b\u8fc7\u53bb\u4e86\uff0c\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\u5982\u679c $i<j$ \u5c31\u8981\u518d\u770b1\u6b21\uff0c\u52a01\u3002\n\n\u770b\u5230\u8fd9\u91cc\uff0c\u4e0d\u59a8\u56de\u53bb\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u8fd9\u4e48\u505a\u80af\u5b9a\u8981\u8d85\u65f6\u7684\u3002\n\n\u6211\u4eec\u60f3\u5230\u4e86 $\\max(f[j]+i<j)$ \uff0c\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6765\u7ef4\u62a4\uff0c\u6bcf\u6b21\u4f18\u5148\u5904\u7406 $f[i]$ \u5c0f\u7684\u3002\u8fd9\u6837\u505a\u5c31\u597d\u6bd4\u5bf9\u6bcf\u4e00\u6b21\u7ffb\u4e66\u8fdb\u884c\u5904\u7406\uff0c\u770b\u8fd9\u6b21\u7ffb\u4e66\u6700\u591a\u5904\u7406\u5230\u54ea\u91cc\u3002\n\n\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u7684\u4f18\u5148\u961f\u5217\u5728\u5168\u804c\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u6ee1\u8db3 $id$ \u4ece\u5c0f\u5230\u5927\uff0c\u8fd9\u6837\u6700\u540e\u7684\u7a3b\u8349\u5c31\u662f\u6700\u5927\u7684 $id$ \u4e86\uff0c\u5982\u679c\u5b83\u90fd\u6ca1\u6709\u8d85\u8fc7 $i$ \uff0c\u624d\u80fd\u8bf4\u660e\u4e0d\u7528 $+1$ \u3002\n\n\u5176\u4ed6\u7ec6\u8282\u770b\u4ee3\u7801\uff0c\u8fd9\u9053\u9898\u4f3c\u4e4e\u5361\u65f6\u95f4\uff0c\u63a8\u8350\u4f7f\u7528\u5feb\u901f\u8bfb\u5199\uff0c\u6709\u65f6\u5019\u57281300ms\u5f98\u5f8a\uff0c\u6709\u65f6\u5019\u53c8\u53ea\u6709600ms\u3002\n\ncodes\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int MX=3*100000+1000;\n#define LL long long\n#define inf 0x3f3f3f3f\n\nstruct ios {\n    inline char read(){\n        static const int IN_LEN=1<<18|1;\n        static char buf[IN_LEN],*s,*t;\n        return (s==t)&&(t=(s=buf)+fread(buf,1,IN_LEN,stdin)),s==t?-1:*s++;\n    }\n\n    template <typename _Tp> inline ios & operator >> (_Tp&x){\n        static char c11,boo;\n        for(c11=read(),boo=0;!isdigit(c11);c11=read()){\n            if(c11==-1)return *this;\n            boo|=c11=='-';\n        }\n        for(x=0;isdigit(c11);c11=read())x=x*10+(c11^'0');\n        boo&&(x=-x);\n        return *this;\n    }\n}io;\ntemplate<class T>inline void _print(T x){\n\tif(x/10) _print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class T>inline void print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\t_print(x);\n}\n\nint n;\n\nstruct tEdge\n{\n\tint to;\n\tint next;\n}edge[MX<<1];\nint head[MX],cnt=0;\n\ninline void add(int from,int to)\n{\n\tedge[++cnt].to=to,edge[cnt].next=head[from];\n\thead[from]=cnt;\n}\n\nint in[MX];\n\nstruct tDL\n{\n\tint val;\n\tint id;\n\tfriend bool operator <(tDL a,tDL b)\n\t{\n\t\tif(a.val==b.val) return a.id>b.id;\n\t\treturn a.val>b.val;\n\t}//if a.val<b.val     a<b\n};\n\npriority_queue<tDL> qaq;\n\ninline int topsort()\n{\n\twhile(!qaq.empty()) qaq.pop();\n\tfor(int i=1;i<=n;i++) \n\t{\n\t\tif(in[i]==0) qaq.push(tDL{1,i});//\u6ca1\u6709\u5148\u51b3\u6761\u4ef6\u7684\u4e3a1\n\t}\n\tint idx=0;//\u7528\u6765\u5224\u65ad\u6709\u6ca1\u6709\u770b\u4e0d\u5230\u7684\u4e66\n\tidx=qaq.size();\n\tint maxn=1;\n\twhile(!qaq.empty())\n\t{\n\t\ttDL q=qaq.top();\n\t\tqaq.pop();\n\t\tint x=q.id;\n\t\tint s=q.val;\n\t\tmaxn=s;\n\t\tfor(int i=head[x];i;i=edge[i].next)\n\t\t{\n\t\t\tint yt=edge[i].to;\n\t\t\tin[yt]--;\n\t\t\tif(in[yt]==0)\n\t\t\t{\n\t\t\t\tqaq.push(tDL{s+(yt<x),yt});\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t}\n\tif(idx!=n) return -1;\n\telse return maxn;\n}\n\ninline void csh()\n{\n\t//memset(in,0,sizeof(in));\n\tmemset(head,0,sizeof(head));\n\t//memset(edge,0,sizeof(edge));\n\tcnt=0;\n}\n\n/*\n4\n0\n1 1\n2 4 2\n1 1\n-1\n*/\n\nint main(int argc, char const *argv[])\n{\n\tint T;\n\tio>>T;\n\twhile(T--)\n\t{\n\t\tcsh();\n\t\tio>>n;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint num;\n\t\t\tio>>num;\n\t\t\tin[i]=num;\n\t\t\tfor(int j=1;j<=num;j++)\n\t\t\t{\n\t\t\t\tint inx;\n\t\t\t\tio>>inx;\n\t\t\t\tadd(inx,i);\n\t\t\t}\n\t\t}\n\t\tprint(topsort());\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1632572798,
        "uid": 64976,
        "name": "hewo",
        "ccfLevel": 5,
        "title": "\u9898\u89e3\uff1aCF1572A"
    }
]