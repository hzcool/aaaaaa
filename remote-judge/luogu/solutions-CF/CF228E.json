[
    {
        "content": "\u9996\u5148\u660e\u786e\u4e00\u70b9\uff0c\u6bcf\u4e00\u4e2a\u70b9\u6539\u53d8 $k,k\\ge1$ \u6b21\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8 $0$ \u6216\u8005 $1$ \u6b21\u64cd\u4f5c\u5b8c\u6210\u4efb\u610f\u6b21\u64cd\u4f5c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u70b9\u7684\u53d8\u5316\u6b21\u6570\u770b\u6210\u4e00\u4e2a $0/1$ \u53d8\u91cf\u3002\n\n\u5bf9\u4e8e\u6bcf\u6761\u8fb9 $(x,y,v)$:\n\n+ $v=0$ \u65f6 $(x,y)=(1,0)$ \u6216 $(0,1)$\n\n+ $v=1$ \u65f6 $(x,y)=(0,0)$ \u6216 $(1,1)$\n\n\u7136\u540e\u53ef\u4ee5\u5957\u7528 2-sat \u89e3\u51b3\u95ee\u9898\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#define o(x) (x+2*(x<=n)*n-n)\nstd::queue<int> q;\nstd::vector<int> a[200005];\nint n,m,f[200005];\nvoid add(int x,int y){a[x].push_back(y);a[y].push_back(x);}\nint dfs(int v)\n{\n\tfor (int i=0;i<a[v].size();i++)\n\t{\n\t\tint u=a[v][i];\n\t\tif (f[u]==-1)\n\t\t{\n\t\t\tf[u]=1;f[o(u)]=0;\n\t\t\tq.push(u),q.push(o(u));\n\t\t\tif (!dfs(u)) return 0;\n\t\t}\n\t\telse if (f[u]==0) return 0;\n\t}\n\treturn 1;\n}\nint twosat()\n{\n\tfor (int i=1;i<=2*n;i++) f[i]=-1;\n\tfor (int i=1;i<=n;i++)\n\t\tif (f[i]==-1)\n\t    {\n\t\t    while (!q.empty()) q.pop();\n    \t\tf[i]=1,f[i+n]=0;q.push(i),q.push(i+n);\n\t    \tif (dfs(i)) continue;\n\t\t    while (!q.empty()) f[q.front()]=-1,q.pop();\n    \t\tf[i]=0,f[i+n]=1;q.push(i),q.push(i+n);\n\t    \tif (dfs(i+n)) continue;\n\t\t    while (!q.empty()) f[q.front()]=-1,q.pop();\n\t    \treturn 0;\n    \t}\n\treturn 1;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint x,y,v;\n\t\tscanf(\"%d%d%d\",&x,&y,&v);\n\t\tv?(add(x,y),add(x+n,y+n)):(add(x+n,y),add(x,y+n));\n\t}\n\tif (!twosat()) puts(\"Impossible\");\n\telse\n\t{\n\t\tint cnt=0;\n\t\tfor (int i=1;i<=n;i++) if (f[i]) ++cnt;\n\t\tprintf(\"%d\\n\",cnt);\n\t\tfor (int i=1;i<=n;i++) if (f[i]) printf(\"%d \",i);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1599390278,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF228E \u3010The Road to Berland is Paved With Good Intentions\u3011"
    },
    {
        "content": "\u6709\u6ca1\u6709\u4e00\u79cd\u53ef\u80fd\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u4e0d\u7528 2-Sat\uff0c\u7528\u79cd\u7c7b\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\u4e3b\u8981\u662f\u4e2a\u4eba\u611f\u89c9\u5e76\u67e5\u96c6\u5199\u8d77\u6765\u4f1a\u7b80\u5355\u5f97\u591a\u3002\n\n\u7a0d\u5fae\u5206\u6790\u4e00\u4e0b\u4e8c\u8005\u9002\u7528\u8303\u56f4\u7684\u533a\u522b\uff1a\u79cd\u7c7b\u5e76\u67e5\u96c6\u53ea\u80fd\u7ef4\u62a4\u6bd4\u8f83\u7b80\u5355\u7684\u4fe1\u606f\uff0c\u5982\u201c$A$ \u548c $B$ \u5728\u6216\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u201d\uff1b\u800c 2-Sat \u53ef\u4ee5\u7ef4\u62a4\u66f4\u52a0\u590d\u6742\u7684\u4fe1\u606f\uff0c\u5982\u201c\u5982\u679c $A$ \u6210\u7acb\uff0c\u90a3\u4e48 $B$ \u5c31\u4e0d\u6210\u7acb\u201d\u3002\u53ef\u4ee5\u770b\u51fa\u6765 2-Sat \u4e00\u822c\u662f\u4ee5\u6709\u5411\u8fb9\u6765\u8bb0\u5f55\u9650\u5236\u7684\uff08\u6bd4\u5982\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\u5c31\u4e0d\u80fd\u63a8\u51fa\u5982\u679c $B$ \u4e0d\u6210\u7acb\u90a3\u4e48 $A$ \u5c31\u6210\u7acb\uff09\uff0c\u800c\u79cd\u7c7b\u5e76\u67e5\u96c6\u53ea\u80fd\u7ef4\u62a4\u65e0\u5411\u8fb9\u7684\u9650\u5236\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u4e24\u4e2a\u7269\u4f53\u662f\u53cc\u5411\u76f8\u5173\u7684\u65f6\u5019\u624d\u80fd\u4f7f\u7528\u79cd\u7c7b\u5e76\u67e5\u96c6\u3002\n\n\u8bf4\u56de\u8fd9\u9053\u9898\uff0c\u4e00\u4e2a\u70b9\u53ea\u53ef\u80fd\u88ab\u64cd\u4f5c\u96f6\u6b21\u6216\u8005\u4e00\u6b21\uff0c\u8fd9\u5c31\u5bf9\u5e94\u4e86\u4e24\u4e2a\u96c6\u5408\u3002\u800c\u6bcf\u6761\u8fb9\u80fd\u83b7\u5f97\u7684\u4fe1\u606f\u8981\u4e48\u662f\u4e24\u4e2a\u70b9\u88ab\u64cd\u4f5c\u6b21\u6570\u76f8\u540c\uff0c\u8981\u4e48\u662f\u64cd\u4f5c\u6b21\u6570\u4e0d\u540c\u3002\u524d\u8005\u53ef\u4ee5\u7ffb\u8bd1\u6210\u5f3a\u5236\u4e24\u4e2a\u8282\u70b9\u5728\u540c\u4e00\u96c6\u5408\u5185\uff0c\u540e\u8005\u53ef\u4ee5\u7ffb\u8bd1\u6210\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u79cd\u7c7b\u5e76\u67e5\u96c6\u505a\u4e86\u3002\n\n\u5b9e\u73b0\u4e0a\u5c31\u662f\u79cd\u7c7b\u5e76\u67e5\u96c6\u7684\u5957\u8def\u4e86\uff0c\u5982\u679c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u5de6\u8f6c\u6a21\u677f\u533a\u3002\u6211\u7684\u4ee3\u7801\u663e\u7136\u590d\u6742\u5ea6\u4e0d\u591f\u4f18\u79c0\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u79cd\u65b9\u6cd5\u662f\u53ef\u4ee5\u505a\u5230\u8fd1\u4f3c\u7ebf\u6027\u7684\uff0c\u4f46\u6570\u636e\u8303\u56f4\u4f7f\u5f97\u6211\u61d2\u5f97\u641e\u90a3\u4e9b\u4e86\u3002\u6240\u4ee5\u770b\u770b\u5c31\u597d\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n```cpp\nint f[N],m,n;\ninline int find(int x){return f[x]==x?x:f[x]=find(f[x]);}\ninline void merge(int x,int y){f[find(x)]=find(y);}\n\nbool vis[N];\nvector<int>ans;\n\nsigned main(){\n\t\n\tread(m);read(n);int x,y,v;\n\tfor(int i=1;i<=m*2;i++)f[i]=i;\n\twhile(n--){\n\t\tread(x);read(y);read(v);\n\t\tif(v)merge(x,y),merge(x+m,y+m);\n\t\telse merge(x,y+m),merge(x+m,y);\n\t}\n\tfor(int i=1;i<=m;i++)if(find(i)==find(i+m))return printf(\"Impossible\\n\"),0;\n\tfor(int i=1;i<=m;i++){\n\t\tif(vis[i]||vis[i+m])continue;int nowf=find(i);\n\t\tfor(int j=1;j<=2*m;j++)if(find(j)==nowf)vis[j]=true,j<=m&&(ans.push_back(j),true);\n\t}\n\tprintf(\"%d\\n\",ans.size());for(int i:ans)printf(\"%d \",i);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1666923612,
        "uid": 302383,
        "name": "Feyn",
        "ccfLevel": 0,
        "title": "CF228E"
    },
    {
        "content": "## \u9898\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF228E)\n\n\u6709\u82e5\u5e72\u4e2a\u70b9\u548c\u82e5\u5e72\u6761\u8fb9\uff0c\u6bcf\u6761\u8fb9\u90fd\u4e3a $0$ \u6216 $1$ \uff0c\u6bcf\u6b21\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u70b9\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u6240\u6709\u8fb9\u7684\u503c\u90fd\u4f1a\u6539\u53d8\uff08 $0$ \u53d8\u4e3a $1$\uff0c$1$ \u53d8\u4e3a $0$\uff09\uff0c\u73b0\u5728\u5bfb\u6c42\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u6240\u6709\u8fb9\u6700\u7ec8\u90fd\u53d8\u4e3a $1$ \uff0c\u82e5\u627e\u4e0d\u5230\u8fd9\u79cd\u65b9\u6848\uff0c\u8f93\u51fa `Impossible` \u3002\n\n## \u89e3\u6790\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u4e00\u5b9a\u662f\u53ea\u64cd\u4f5c $1$ \u6b21\u6216 $0$ \u6b21\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u5bf9\u4e00\u4e2a\u70b9\u64cd\u4f5c $2$ \u6b21\uff0c\u5219\u8fd9\u4e24\u6b21\u64cd\u4f5c\u4f1a\u76f8\u4e92\u62b5\u6d88\uff0c\u662f\u65e0\u610f\u4e49\u7684\u3002\n\n\u63a5\u7740\u6211\u4eec\u53d1\u73b0\uff0c\u521d\u503c\u4e3a $0$ \u7684\u8fb9\uff0c\u4e0e\u4e4b\u76f8\u8fde\u7684\u70b9\u4e00\u5b9a\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u88ab\u64cd\u4f5c\u8fc7\uff1b\u521d\u503c\u4e3a $1$ \u7684\u8fb9\uff0c\u4e0e\u4e4b\u76f8\u8fde\u7684\u8fb9\u4e00\u5b9a\u5747\u672a\u88ab\u64cd\u4f5c\u8fc7\u6216\u5747\u88ab\u64cd\u4f5c\u8fc7\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0e $0$ \u76f8\u8fde\u7684\u70b9\u7684\u64cd\u4f5c\u72b6\u6001\u662f**\u4e0d\u540c**\u7684\uff0c\u4e0e $1$ \u76f8\u8fde\u7684\u70b9\u7684\u64cd\u4f5c\u72b6\u6001\u662f**\u76f8\u540c**\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u67d3\u8272\u3002\n\n\u5bf9\u4e8e\u4e00\u6761 $0$ \u7684\u8fb9\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u76f8\u90bb\u70b9\u67d3\u6210\u4e0d\u540c\u989c\u8272\uff0c\u5bf9\u4e8e\u4e00\u6761 $1$ \u7684\u8fb9\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u76f8\u90bb\u70b9\u67d3\u6210\u76f8\u540c\u989c\u8272\uff0c\u82e5\u53d1\u73b0\u67d3\u8272\u77db\u76fe\uff0c\u5219\u8f93\u51fa`Impossible`\u3002\u8fd9\u663e\u7136\u53ef\u4ee5\u4f7f\u7528 dfs \u89e3\u51b3\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint n,m,cnt,head[N];\nint vis[N];//\u67d3\u8272\u4e3a 0 or 1\nbool impossible;\nstruct edge{\n\tint to,next,color;\n}e[N<<1];\ninline void add(int x,int y,int co){\n\te[++cnt].to=y;\n\te[cnt].color=co;\n\te[cnt].next=head[x];\n\thead[x]=cnt;\n}\ninline void dfs(int u,int color){\n\tif(impossible) return;\n\tvis[u]=color;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to,flag=e[i].color;\n\t\tif(flag==0){\n\t\t\tif(vis[v]==3){\n\t\t\t\tdfs(v,color^1);\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(vis[v]==vis[u]) impossible=true;\t\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(vis[v]==3){\n\t\t\t\tdfs(v,color);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(vis[v]!=vis[u]) impossible=true;\n\t\t\t}\n\t\t}\n\t\tif(impossible) return;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,x,y,co;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&co);\n\t\tadd(x,y,co);add(y,x,co);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tvis[i]=3;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[i]==3) dfs(i,0);\n\t}\n\tif(impossible){\n\t\tprintf(\"Impossible\");\n\t\treturn 0;\n\t} \n\tint ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[i]==0) ans++;\n\t}\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[i]==0) printf(\"%d \",i);\n\t}\n\treturn 0;\t\n}\n```\n\n",
        "postTime": 1597723420,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF228E \u3010The Road to Berland is Paved With Good Intentions\u3011"
    },
    {
        "content": "### $\\text{Difficulty : 1900}$\n---\n### $\\text{2-sat \u95ee\u9898}$\n\n$\\text{2-sat}$ \u95ee\u9898\u5c31\u662f\u7ed9\u5b9a\u82e5\u5e72\u5e03\u5c14\u7c7b\u578b\u7684\u53d8\u91cf\u548c\u82e5\u5e72\u7ea6\u675f\u65b9\u7a0b\uff0c\u8981\u6c42\u7ed9\u6240\u6709\u7684\u53d8\u91cf\u8d4b\u503c\u4f7f\u5f97\u6240\u6709\u7684\u65b9\u7a0b\u88ab\u6ee1\u8db3\u3002\n\n\u89e3\u51b3 $\\text{2-sat}$ \u53ef\u4ee5\u91c7\u7528\u7684\u65b9\u6cd5\u662f\u5f3a\u8054\u901a\u5206\u91cf\u3002\u4e3a\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5efa\u7acb\u4e24\u4e2a\u70b9\uff0c\u4e00\u4e2a\u8868\u793a\u771f\uff0c\u53e6\u4e00\u4e2a\u8868\u793a\u5047\u3002\u518d\u5c06\u6240\u6709\u7684\u65b9\u7a0b\u5199\u6210\u201c\u5982\u679c\u53d8\u91cf $a$ \u4e3a\u67d0\u503c\uff0c\u5219\u53d8\u91cf $b$ \u5fc5\u5b9a\u4e3a\u67d0\u503c\u201d\u7684\u5f62\u5f0f\u3002\u4f8b\u5982 $a$ \u6216 $b$ \u4e3a\u771f\u5c31\u53ef\u4ee5\u5199\u6210\u5982\u679c $a$ \u4e3a\u5047\uff0c\u5219 $b$ \u4e00\u5b9a\u4e3a\u6b63\uff0c\u5982\u679c $b$ \u4e3a\u5047\u5219 $a$ \u4e00\u5b9a\u4e3a\u771f\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6709\u8fd9\u6837\u5173\u7cfb\u7684\u4e24\u4e2a\u70b9\u8fde\u4e0a\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8fd9\u6837\u4e00\u4e2a\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u88ab\u82e5\u5e72\u6761\u4ef6\u675f\u7f1a\u4ee5\u540e\u4e00\u65e6\u5176\u4e2d\u7684\u67d0\u4e00\u4e2a\u53d6\u8be5\u503c\uff0c\u5219\u540e\u7ee7\u7684\u6240\u6709\u70b9\u4e00\u5b9a\u53d6\u5bf9\u5e94\u7684\u503c\u3002\n\n\u90a3\u4e48\u5982\u679c\u53d1\u73b0 $a$ \u53d6\u771f\u503c\u7684\u70b9\u548c $a$ \u53d6\u5047\u503c\u7684\u70b9\u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\uff0c\u5c31\u610f\u5473\u7740\u65e0\u8bba $a$ \u5982\u4f55\u53d6\u503c\u90fd\u4e00\u5b9a\u4f1a\u548c\u6761\u4ef6\u51b2\u7a81\u3002\n\n\u800c\u53cd\u4e4b\u5c31\u53ef\u4ee5\u8bc1\u660e\u4e00\u5b9a\u5b58\u5728\u81f3\u5c11\u4e00\u7ec4\u89e3\u3002\u4e00\u7ec4\u53ef\u884c\u7684\u89e3\u662f\u6240\u6709\u7684\u53d8\u91cf\u53d6\u62d3\u6251\u5e8f\u5c0f\u7684\u90a3\u4e00\u4e2a\u70b9\u4ee3\u8868\u7684\u503c\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n+m)$\uff0c\u8fd8\u662f\u5f88\u4f18\u79c0\u7684\u3002\n\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u5c31\u662f\u4e00\u4e2a $\\text{2-sat}$ \u677f\u5b50\u9898\u4e86\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\u800c\u8a00\uff0c\u64cd\u4f5c\u4e24\u6b21\u548c\u6ca1\u6709\u64cd\u4f5c\u7684\u72b6\u6001\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u662f\u5426\u64cd\u4f5c\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf\u3002\n\n\u8fb9\u7684\u9650\u5236\u4e5f\u975e\u5e38\u660e\u663e\uff0c\u5982\u679c\u4e00\u6761\u8fb9\u7684\u6743\u503c\u662f $0$\uff0c\u5219\u9700\u8981\u4e14\u4ec5\u9700\u8981\u8fde\u63a5\u4e24\u70b9\u4e2d\u7684\u4e00\u4e2a\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u70b9\u4e0d\u64cd\u4f5c\u610f\u5473\u7740\u53e6\u4e00\u4e2a\u70b9\u4e00\u5b9a\u8981\u64cd\u4f5c\uff0c\u4e00\u4e2a\u70b9\u64cd\u4f5c\u610f\u5473\u7740\u53e6\u4e00\u4e2a\u4e00\u5b9a\u4e0d\u64cd\u4f5c\u3002\u53cd\u4e4b\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u662f $1$\uff0c\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u70b9\u8981\u4e0d\u7136\u90fd\u64cd\u4f5c\uff0c\u8981\u4e0d\u7136\u90fd\u4e0d\u64cd\u4f5c\u3002\u76f4\u63a5\u8fde\u8fb9\u5c31\u597d\u4e86\u3002\n\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=4000005;\nint n,m,x,y,z,head[MAXN],nxt[MAXN],num[MAXN],CNT;\nint tot,dfn[MAXN],low[MAXN],st[MAXN],top,col[MAXN],col_num,dfs_num;\nbool v[MAXN];\nvoid add(int x,int y){\n\tnxt[++tot]=head[x];\n\thead[x]=tot;\n\tnum[tot]=y;\n}\nvoid tarjan(int now){\n\tlow[now]=dfn[now]=++dfs_num;\n\tst[++top]=now;\n\tv[now]=1;\n\tfor(int i=head[now];i;i=nxt[i]){\n\t\tif(dfn[num[i]]==0){\n\t\t\ttarjan(num[i]);\n\t\t\tlow[now]=min(low[now],low[num[i]]);\n\t\t}\n\t\telse if(v[num[i]]){\n\t\t\tlow[now]=min(low[now],dfn[num[i]]);\n\t\t}\n\t}\n\tif(low[now]==dfn[now]){\n\t\tcol_num++;\n\t\twhile(st[top]!=now){\n\t\t\tcol[st[top]]=col_num;\n\t\t\tv[st[top]]=0;\n\t\t\ttop--;\n\t\t}\n\t\tcol[st[top]]=col_num;\n\t\tv[st[top]]=0;\n\t\ttop--;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif(z==0){\n\t\t\tadd(x+n,y);add(y+n,x);\n\t\t\tadd(x,y+n);add(y,x+n);\n\t\t}\n\t\telse{\n\t\t\tadd(x+n,y+n);add(x,y);\n\t\t\tadd(y+n,x+n);add(y,x);\n\t\t}\n\t}\n\tfor(int i=1;i<=2*n;i++)\n\tif(dfn[i]==0)tarjan(i);\n\tfor(int i=1;i<=n;i++)\n\tif(col[i]==col[i+n]){\n\t\tprintf(\"Impossible\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(col[i]>col[i+n])CNT++;\n\tprintf(\"%d\\n\",CNT);\n\tfor(int i=1;i<=n;i++)\n\tif(col[i]>col[i+n])\n\tprintf(\"%d \",i);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1666790773,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF228E \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6709\u4e00\u4e2a\u7ed3\u8bba\u662f\u5f88\u663e\u7136\u7684\uff1a**\u6bcf\u6761\u6743\u503c\u4e3a $0$ \u7684\u8fb9\u6700\u591a\u88ab\u4fee\u6539\u4e00\u6b21\uff0c\u6743\u503c\u4e3a $1$ \u7684\u6700\u591a\u88ab\u4fee\u6539\u6700\u591a\u4e24\u6b21** \u56e0\u4e3a\u4f60\u5982\u679c\u4fee\u6539\u591a\u6b21\uff0c\u90a3\u4e48\u64cd\u4f5c\u5c31\u4f1a\u4e92\u76f8\u62b5\u6d88\u3002\u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u53ef\u4ee5\u63a8\u5bfc\u51fa\u8fd9\u4e9b\u7ed3\u8bba\uff1b\n\n\u8bbe\u7ed9\u5b9a\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u662f $x$ \u548c $y$\u3002\n1. \u5f53\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u4e3a $0$ \u65f6\uff0c\u8981\u4e48 $x$ \u88ab\u4fee\u6539\uff0c\u8981\u4e48 $y$ \u88ab\u4fee\u6539\u3002\n1. \u5f53\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u4e3a $1$ \u65f6\uff0c\u8981\u4e48 $x,y$ \u90fd\u4e0d\u505a\u4fee\u6539\uff0c\u8981\u4e48\u90fd\u505a\u4fee\u6539\u3002\n\n\u5982\u679c\u6211\u4eec\u628a\u4fee\u6539\u770b\u4f5c $1$\uff0c\u4e0d\u53d8\u770b\u4f5c $0$\uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u7ed3\u8bba\u5c31\u53ef\u4ee5\u8868\u8fbe\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a\n1. \u5f53\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u4e3a $0$ \u65f6\uff0c$(x,1),(y,0)$ \u6216 $(x,0),(y,1)$.\n1. \u5f53\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u4e3a $1$ \u65f6\uff0c$(x,1),(y,1)$ \u6216 $(x,0),(y,0)$.\n\n\u770b\u5230\u8fd9\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u72b6\u6001\u53ea\u6709\u4e24\u79cd\uff0c\u90a3\u4e48\u5f88\u81ea\u7136\u53ef\u4ee5\u60f3\u5230 2-SAT\uff0c\u63a5\u4e0b\u6765\u6309\u7167\u9898\u610f\u5b9e\u73b0\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nint n,m,tot;\nvector<int>g;\nint ver[N],nxt[N],head[N];\nint top,res,cnt;\nint ins[N],stk[N],dfn[N],low[N],vis[N];\ninline void add(int x,int y)\n{\n    ver[++tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}\nvoid tarjan(int x)\n{\n    vis[x]=1;\n    stk[++top]=x;\n    dfn[x]=low[x]=++res;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int y=ver[i];\n        if(!dfn[y])\n        {\n            tarjan(y);\n            low[x]=min(low[x],low[y]);\n        }\n        else if(vis[y])low[x]=min(low[x],dfn[y]);\n    }\n    if(low[x]==dfn[x])\n    {\n        cnt++;\n        while(stk[top+1]!=x)\n        {\n            ins[stk[top]]=cnt;\n            vis[stk[top--]]=0;\n        }\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);cout.tie(0);\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n        if(z==1)\n        {\n            add(x,y);\n            add(y,x);\n            add(x+n,y+n);\n            add(y+n,x+n);\n        }\n        else\n        {\n            add(x,y+n);\n            add(y,x+n);\n            add(x+n,y);\n            add(y+n,x);\n        }\n    }\n    for(int i=1;i<=2*n;i++)\n        if(!dfn[i])\n           tarjan(i);\n    for(int i=1;i<=n;i++)\n        if(ins[i]==ins[i+n])\n        {\n            cout<<\"Impossible\\n\";\n            return 0;\n        }\n    for(int i=1;i<=n;i++)\n    {\n        if(ins[i]<ins[i+n])\n            g.push_back(i);\n    }\n    cout<<g.size()<<'\\n';\n    for(int i=0;i<g.size();i++)\n        cout<<g[i]<<' ';\n    return 0;\n}\n```",
        "postTime": 1655013477,
        "uid": 374318,
        "name": "hswfwkj",
        "ccfLevel": 7,
        "title": "CF228E \u9053\u8def"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF82D)\n\n**solution**\n\n\u8fd9\u662f\u4e00\u9053 2-sat \u7684\u6a21\u677f\u9898 = =\n\n- \u5982\u679c\u4e00\u6761\u8fb9\u4e3a $0$\uff0c\u90a3\u4e48\u4e24\u4e2a\u7aef\u70b9\u53ea\u80fd\u9009\u4e00\u4e2a\u3002\n- \u5982\u679c\u4e00\u6761\u8fb9\u4e3a $1$\uff0c\u90a3\u4e48\u4e24\u4e2a\u7aef\u70b9\u8981\u4e48\u90fd\u9009\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u4e0a 2-sat \u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u8f93\u51fa\u65b9\u6848\u4e86\u3002\n\n**\u6ce8\u610f\u662f\u8fb9\u662f\u53cc\u5411\u8fb9\u3002**\n\n**code**\n\n```c++\n/*\nwork by:Ariel_\nKnowledge:\nTime:\n*/\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <stack>\n#include <vector>\n#define ll long long\n#define rg register\nusing namespace std;\nconst int MAXN = 1e5 + 5;\nint read(){\n    int x = 0,f = 1; char c = getchar();\n    while(c < '0'||c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') {x = x*10 + c - '0'; c = getchar();}\n    return x*f;\n}\nint n, m;\nvector<int> G[MAXN];\nint low[MAXN], dfn[MAXN], tot, scc[MAXN], cnt;\nbool vis[MAXN];\nstack<int> s;\nvoid Tarjan(int x) {\n   low[x] = dfn[x] = ++tot;\n   s.push(x), vis[x] = 1;\n   for (int i = 0; i < G[x].size(); i++) {\n   \t   int v = G[x][i];\n   \t   if (!dfn[v]) {\n   \t      Tarjan(v);\n\t\t  low[x] = min(low[x], low[v]);\t\n\t   }\n\t   else low[x] = min(dfn[v], low[x]);\n   } \n   int k;\n   if(low[x] == dfn[x]) {\n   \t  cnt++;\n   \t  do{\n   \t    k = s.top(); s.pop();\n   \t    scc[k] = cnt;\n\t  }while(k != x);\n   }\n}\nint main(){\n   n = read(), m = read();\n   for (int i = 1; i <= m; i++) {\n   \t  int u = read(), v = read(), w = read();\n   \t  if (w) {\n   \t  \tG[u].push_back(v), G[v].push_back(u);\n   \t  \tG[u + n].push_back(v + n), G[v + n].push_back(u + n); \n\t  }  else {\n\t    G[u + n].push_back(v), G[v].push_back(u + n);\n   \t  \tG[v + n].push_back(u), G[u].push_back(v + n); \n\t  }\n   }\n   for (int i = 1; i <= (n << 1); i++) if(!dfn[i]) Tarjan(i);\n   for (int i = 1; i <= n; i++) \n   \t if (scc[i] == scc[i + n]) { printf(\"Impossible\"); return 0;}\n   int step = 0;\n   for (int i = 1; i <= n; i++) if(scc[i] < scc[i + n]) step++;\n   printf(\"%d\\n\", step);\n   for (int i = 1; i <= n; i++) if(scc[i] < scc[i + n]) printf(\"%d \", i);\n   puts(\"\");\n   return 0;\n}\n\n```\n\n",
        "postTime": 1629512799,
        "uid": 285235,
        "name": "Dita",
        "ccfLevel": 0,
        "title": "CF82D Two out of Three"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF228E)\n\n\u8003\u8651\u6bcf\u6b21\u67d3\u8272\u64cd\u4f5c\uff0c\u5176\u5b9e\u76f8\u5f53\u4e8e\u5f02\u6216\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e24\u6b21\u5bf9\u540c\u4e00\u6761\u8fb9\u7684\u67d3\u8272\u64cd\u4f5c\u662f\u53ef\u4ee5\u62b5\u6d88\u7684\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u539f\u8fb9\u6743\u4e3a $1$ \u65f6\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u66f4\u6539\u5b83\uff0c\u6240\u4ee5\u4e24\u8fb9\u64cd\u4f5c\u6b21\u6570\u7684\u5947\u5076\u6027\u5e94\u76f8\u540c\uff0c\u53cd\u4e4b\uff0c\u5219\u5e94\u76f8\u53cd\u3002\n\n\u90a3\u4e48\u636e\u6b64\u5efa\u56fe\uff0c\u5957\u7528 **2-sat** \u6a21\u578b\uff1a\n\n\u5f53 $w(i,j)=1$ \u65f6\uff0c\n\n`add(i,j),add(j,i),add(i+n,j+n),add(j+n,i+n)`\n\n\u5f53 $w(i,j)=0$ \u65f6\uff0c\n\n`add(i,j+n),add(j+n,i),add(i+n,j),add(j,i+n)`\n\n\u5173\u4e8e\u7edf\u8ba1\u7b54\u6848\uff1a\n\n\u5982\u679c\u540c\u4e00\u4e2a\u70b9\u77db\u76fe\u4e86\uff0c\u5373 `scc[i]==scc[i+n]`\uff0c\u90a3\u4e48\u663e\u7136 `Impossible`\u3002\n\n\u5982\u679c\u6ca1\u6709\uff0c\u5728 **2-sat** \u95ee\u9898\u4e2d\uff0c\u62d3\u6251\u5e8f\u5927\u7684\u5373\u4e3a\u7b54\u6848\uff0c\u800c\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86 SCC \u7f16\u53f7(\u4e0e\u62d3\u6251\u5e8f\u4e3a\u9006\u5e8f)\uff0c\u6240\u4ee5 SCC \u7f16\u53f7\u5c0f\u7684\u5373\u4e3a\u5408\u6cd5\u7b54\u6848\u3002\n\n**Code\uff1a**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace HMFS{\n    const int maxn=1e5;\n    basic_string<int> g[maxn];\n    int n,m,dfn[maxn],sum,low[maxn],timcnt,stack[maxn],top,instack[maxn],scc[maxn];\n    void tarjan(int u) {\n        dfn[u]=low[u]=++timcnt;\n        stack[++top]=u,instack[u]=1;\n        for(int i=0;i<g[u].size();i++) {\n            int v=g[u][i];\n            if(!dfn[v]) tarjan(v),low[u]=min(low[u],low[v]);\n            else if(instack[v]) low[u]=min(dfn[v],low[u]);\n        }\n        if(low[u]==dfn[u]) {\n            int t;sum++;\n            do{\n                t=stack[top--];\n                scc[t]=sum;\n                instack[t]=0;\n            }while(u!=t);\n        }\n    }\n    void work() {\n        cin>>n>>m;\n        for(int x,y,z,i=1;i<=m;i++) {\n            cin>>x>>y>>z;\n            if(z==0) g[x]+=(y+n),g[y+n]+=x,g[y]+=(x+n),g[x+n]+=y;\n            if(z==1) g[x]+=y,g[x+n]+=(y+n),g[y]+=x,g[y+n]+=(x+n);\n        }\n        for(int i=1;i<=2*n;i++) if(!dfn[i]) tarjan(i);\n        for(int i=1;i<=n;i++) {\n            if(scc[i]==scc[i+n]) cout<<\"Impossible\",exit(0);\n        }\n        int cnt=0;\n        for(int i=1;i<=n;i++) if(scc[i]<scc[i+n]) cnt++;\n        cout<<cnt<<'\\n';\n        for(int i=1;i<=n;i++) if(scc[i]<scc[i+n]) cout<<i<<' ';\n    }\n}\nint main() {\n    return HMFS::work(),0;\n}\n```",
        "postTime": 1625575528,
        "uid": 366980,
        "name": "\u5230\u5e95\u51e0\u53ea\u9c7c\u5462",
        "ccfLevel": 0,
        "title": "CF228E\u9898\u89e3"
    }
]