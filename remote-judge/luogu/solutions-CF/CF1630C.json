[
    {
        "content": "## Description\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u4e00\u5f00\u59cb $c_i = 0$\u3002\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n- \u9009\u62e9 $1\\le i < j < k\\le n$\uff0c\u6ee1\u8db3 $c_i = c_j = c_k = 0\\land a_i = a_k$\uff0c\u7136\u540e $c_j:=1$\u3002\n\n\u95ee\u82e5\u5e72\u6b21\u64cd\u4f5c\u4e4b\u540e\u6700\u5927\u7684 $\\sum_{i = 1}^nc_i$\u3002$3\\le n\\le 2\\times 10^5$\u3002\n\n## Solution\n\u63d0\u4f9b\u4e00\u79cd\u76f8\u5f53\u7b80\u6d01\u7684\u505a\u6cd5\uff0c\u8be5\u505a\u6cd5\u6765\u81ea[\u8bc4\u8bba\u533a](https://codeforces.com/blog/entry/99384?#comment-881614)\u3002\n\n\u8003\u8651\u4e00\u4e2a DP\uff0c\u8bbe $f_i$ \u4e3a\u533a\u95f4 $[1, i]$ \u7684\u7b54\u6848\uff0c\u663e\u7136 $f_1 = 0$\u3002\u6709\u5982\u4e0b $3$ \u79cd\u8f6c\u79fb\u5230 $f_i$ \u7684\u529e\u6cd5\uff1a\n\n- $a_i$ \u5728 $a_j$ \u51fa\u73b0\u8fc7\uff08$j < i$\uff09\uff0c\u8003\u8651\u5c06 $(j, i)$ \u5168\u90e8\u6d82\u8272\uff0c\u5219 $f_i = f_j + (i - j - 1)$\u3002\n- $a_i$ \u5728 $a_k$ \u51fa\u73b0\u8fc7\uff08$k < j < i$\uff09\uff0c\u8003\u8651\u53d6 $f_j$ \u7684\u6700\u4f18\u89e3\u4f46\u662f\u7559\u4e0b $c_k$ \u4e0d\u6d82\uff0c\u7136\u540e\u518d\u6d82\u4e0a $[j, i)$\uff0c\u540c\u6837\u6709 $f_i = f_j + i - j - 1$\u3002\n- \u76f4\u63a5\u7ee7\u627f $f_{i - 1}$\uff0c\u5199\u89c4\u8303\u4e00\u70b9\u5c31\u662f $f_i = f_{i - 1} + (i - (i - 1) - 1)$\u3002\n\n\u4e8e\u662f\u82e5\u6211\u4eec\u4ee4 $\\mathrm {first}(a_i)$ \u8868\u793a $a_i$ \u7b2c\u4e00\u6b21\u51fa\u73b0\u65f6\u7684\u4e0b\u6807\uff0c\u5219\u8f6c\u79fb\u65b9\u7a0b\u5c31\u6709\u4e86\uff1a\n$$\nf_i = \\max_{\\mathrm{first}(a_i)\\le j < i}\\{f_{j} - j \\} + i - 1\n$$\n\u6b64\u65f6\u8fd9\u4e2a\u505a\u6cd5\u662f $O(n^2)$ \u7684\uff0c\u9700\u8981\u4f18\u5316\u3002\u6539\u5199\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf_i - i = \\max_{\\mathrm{first}(a_i)\\le j < i\\lor j = i - 1}\\{f_{j} - j \\} - 1\n$$\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u53ef\u4ee5\u62ff\u4e00\u4e2a\u7ef4\u62a4 $f_i - i$ \u7684\u6700\u5927\u503c\u7684\u7ebf\u6bb5\u6811\u6765\u4f18\u5316\uff0c\u4e8e\u662f $O(n\\log n)$\u3002\n\n## Implementation\n```cpp\nconst int maxn = 2e5 + 5;\nint t[maxn << 2], n, a[maxn], first[maxn];\n\n#define L (k << 1)\n#define R (L | 1)\n#define M ((i + j) >> 1)\n\nvoid modify(int i, int j, int k, int x, int v) {\n    if (i == j) {\n        chkmax(t[k], v);\n        return;\n    }\n    if (x <= M) modify(i, M, L, x, v);\n    else modify(M + 1, j, R, x, v);\n    t[k] = max(t[L], t[R]);\n    return;\n}\n\nint query(int i, int j, int k, int x, int y) {\n    if (x <= i && y >= j) return t[k];\n    int ret = -1e9;\n    if (x <= M) chkmax(ret, query(i, M, L, x, y));\n    if (y > M) chkmax(ret, query(M + 1, j, R, x, y));\n    return ret;\n}\n\nint main() {\n    read(n);\n    FOR(i, 1, n) read(a[i]);\n    DEC(i, n, 1) first[a[i]] = i;\n    memset(t, 0x80, sizeof t);\n    modify(1, n, 1, 1, -1);\n    FOR(i, 2, n) {\n        int now = query(1, n, 1, min(first[a[i]], i - 1), i - 1) - 1;\n        modify(1, n, 1, i, now);\n        if (i == n) print(now + n);\n    }\n    return output(), 0;\n}\n```",
        "postTime": 1644042561,
        "uid": 212488,
        "name": "\u6e05\u70db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1630C Paint the Middle"
    },
    {
        "content": "\u628a\u6bcf\u4e2a\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\u5355\u62ce\u51fa\u6765\uff0c\u663e\u7136\u4e2d\u95f4\u7684\u90a3\u4e9b\u90fd\u4e0d\u7528\u7ba1\uff0c\u4e0d\u5e73\u51e1\u7684\u5728\u4e8e\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u628a\u8fd9\u4e9b\u4e8c\u5143\u7ec4\u770b\u505a\u7ebf\u6bb5\uff0c\u90a3\u4e48\u6240\u6709\u7ebf\u6bb5\u7684\u5e76\u96c6\u51cf\u53bb\u6240\u6709\u7ebf\u6bb5\u7684\u7aef\u70b9\u4e00\u5b9a\u90fd\u80fd\u67d3\u8272\uff0c\u95ee\u9898\u5728\u4e8e\u6700\u591a\u80fd\u67d3\u51e0\u4e2a\u7aef\u70b9\u3002\n\n\u9996\u5148\u5982\u679c\u67d0\u6761\u7ebf\u6bb5\u88ab\u5176\u4ed6\u7ebf\u6bb5\u6240\u5305\u542b\uff0c\u90a3\u8fd9\u6761\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u5148\u5168\u90fd\u67d3\u8272\u80af\u5b9a\u662f\u4e0d\u52a3\u7684\u3002\u6392\u9664\u6389\u8fd9\u4e9b\u7ebf\u6bb5\uff0c\u5269\u4e0b\u7684\u7ebf\u6bb5\u4f1a\u5f62\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u663e\u7136\u72ec\u7acb\uff0c\u6240\u4ee5\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\u5355\u72ec\u8003\u8651\u3002\n\n\u6211\u4eec\u7684\u7b56\u7565\u80af\u5b9a\u662f\u5148\u9009\u51fa\u82e5\u5e72\u6761\u7ebf\u6bb5\uff0c\u7528\u8fd9\u4e9b\u7ebf\u6bb5\u628a\u5176\u4ed6\u6ca1\u9009\u7684\u7ebf\u6bb5\u7684\u7aef\u70b9\u5168\u90fd\u5e72\u6389\uff0c\u5269\u4e0b\u7684\u4e92\u76f8\u4e86\u65ad\uff0c\u5047\u8bbe\u6240\u9009\u51fa\u7684\u7ebf\u6bb5\u5171\u6709 $x$ \u6761\uff0c\u6709\u4e2a\u5e73\u51e1\u7684\u89e3\u662f\u5e72\u6389 $x-1$ \u4e2a\u7aef\u70b9\uff0c\u6362\u53e5\u8bdd\u8bf4\u53ea\u6709\u6700\u5f00\u59cb\u7684\u7ebf\u6bb5\u662f\u4e24\u4e2a\u7aef\u70b9\u90fd\u65e0\u6cd5\u67d3\u8272\uff0c\u5176\u4f59\u7684\u7ebf\u6bb5\u90fd\u53ef\u4ee5\u88ab\u5e72\u6389\u4e00\u4e2a\u7aef\u70b9\u3002\n\n\u4f60\u518d\u4ed4\u7ec6\u60f3\u60f3\u975e\u5e73\u51e1\u7684\u60c5\u51b5\u90fd\u80fd\u5f52\u5230\u5e73\u51e1\u7684\u60c5\u51b5\u91cc\u53bb\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6697\u542b\u7740\u4e00\u4e2a\u9650\u5236\u662f**\u6240\u9009\u51fa\u7684\u7ebf\u6bb5\u5fc5\u987b\u8986\u76d6\u6574\u4e2a\u8fde\u901a\u5757\u5bf9\u5e94\u7684\u533a\u95f4**\u3002\u4e3a\u4ec0\u4e48\uff1f\u5982\u679c\u8bf4\u628a\u8fd9\u4e2a\u8fde\u901a\u5757\u5206\u88c2\u6210\u4e24\u4e2a\u5757\u5206\u522b\u505a\uff0c\u5047\u8bbe\u5206\u522b\u9009\u51fa\u4e86\u96c6\u5408 $A,B$\uff0c\u90a3\u6211\u52a0\u4e00\u6761\u6a2a\u8de8\u4e24\u4e2a\u96c6\u5408\u7684\u7ebf\u6bb5\u8fdb\u53bb\u4e00\u5b9a\u4e0d\u52a3\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u5757\u4e4b\u95f4\u4e00\u5b9a\u6709\u95f4\u9699\uff0c\u6211\u52a0\u5165\u8fd9\u6761\u7ebf\u6bb5\u540e\u4f1a\u81f3\u5c11\u6536\u83b7 $1$ \u7684\u6536\u76ca\uff0c\u800c\u6709\u4e00\u4e2a\u5e73\u51e1\u7684\u89e3\u662f $x-1$ \u4fdd\u8bc1\u4e86\u6211\u589e\u52a0\u7684\u4ee3\u4ef7\u4e0d\u4f1a\u8d85\u8fc7 $1$\u3002\u800c\u5e73\u51e1\u7684\u60c5\u51b5\u4e2d\u4f1a\u6709\u4e00\u4e2a\u4e24\u7aef\u70b9\u90fd\u4e0d\u67d3\u8272\u7684\u7ebf\u6bb5\uff0c\u8fd9\u4e2a\u662f\u6ca1\u6cd5\u907f\u514d\u7684\uff0c\u56e0\u4e3a\u4f60\u6700\u540e\u603b\u8981\u62ff\u4e00\u6761\u7ebf\u6bb5\u53bb\u628a\u522b\u7684\u7ebf\u6bb5\u7aef\u70b9\u5e72\u6389\u3002\u6240\u4ee5\u975e\u5e73\u51e1\u7684\u60c5\u51b5\u53ea\u80fd\u662f\u628a\u4e00\u4e9b\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u90fd\u5e72\u6389\u4e86\uff0c\u4e5f\u5c31\u662f\u5728\u4fdd\u8bc1\u5176\u4f59\u7ebf\u6bb5\u80fd\u8986\u76d6\u6574\u4e2a\u533a\u95f4\u7684\u524d\u63d0\u4e0b\u53bb\u6389\u67d0\u4e9b\u7ebf\u6bb5\u3002\u90a3\u8fd9\u95ee\u9898\u662f\u5565\uff1f\u9009\u6700\u5c11\u7684\u7ebf\u6bb5\u8986\u76d6\u6574\u4e2a\u533a\u95f4\uff01\u76f4\u63a5\u8d2a\u5fc3\uff0c\u505a\u5b8c\u4e86/cy\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//author:\u671b\u8fdc\u661f\n#include<bits/stdc++.h>\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define pb push_back\n#define mk make_pair\n#define sml(x,y) (x=min(x,y))\n#define big(x,y) (x=max(x,y))\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){int x=0,fh=1;char ch=getchar();while(!isdigit(ch)){if(ch=='-')fh=-1;ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}return x*fh;}\ninline void out(int *a,int l,int r){fo(i,l,r) cout<<*(a+i)<<' ';puts(\"\");}\n\nconst int N=1e6+5;\nint mp1[N],mp2[N],a[N],n,m,top;\npii b[N],c[N];\n\nint solve(){\n\tif(top<=0) return 0;\n\tint r=c[1].se,cnt=1,mx=0;\n\tfo(i,2,top){\n\t\tif(c[i].fi>r){\n\t\t\tcnt++;\n\t\t\tr=mx;\n\t\t\tmx=0;\n\t\t}\n\t\tbig(mx,c[i].se);\n\t}\n\tif(r<c[top].se) cnt++;\n\treturn c[top].se-c[1].fi-cnt;\n}\n\nsigned main(){\n\tcin>>n;\n\tfo(i,1,n) a[i]=read();\n\tfo(i,1,n) mp1[i]=0,mp2[i]=n+1;\n\tgo(i,n,1) mp1[a[i]]=i;\n\tfo(i,1,n) mp2[a[i]]=i;\n\tfo(i,1,n) if(mp2[i]-mp1[i]!=n+1&&mp2[i]!=mp1[i]) b[++m]=mk(mp1[i],mp2[i]);\n\tsort(b+1,b+1+m);\n\tint ans=0;\n\tfo(i,1,m){\n\t\tif(!top) c[++top]=b[i];\n\t\telse if(b[i].se>c[top].se){\n\t\t\tif(b[i].fi>c[top].se){\n\t\t\t\tans+=solve();\n\t\t\t\ttop=0;\n\t\t\t}\n\t\t\tc[++top]=b[i];\n\t\t}\n\t}\n\tans+=solve();//c[top].se-c[1].fi+1-(top+1);\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n/*\n6\n3 4 5 3 4 5\n-------------------------------------------------\n3\n*/\n\n```\n",
        "postTime": 1643767509,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1630C Paint the Middle"
    },
    {
        "content": "\u867d\u7136\u6709 dp \u89e3\u6cd5\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8fd9\u9898\u8d2a\u5fc3\u5f88\u81ea\u7136\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6700\u5de6\u548c\u6700\u53f3\u6bb5\u7684\u4e0b\u6807\uff0c\u5c06\u5b83\u4eec\u770b\u6210\u7ebf\u6bb5\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u4e4b\u95f4\u7684\u5305\u542b\u60c5\u51b5\uff0c\u53ef\u4ee5\u76f4\u63a5\u820d\u53bb\u88ab\u5305\u542b\u7684\u533a\u95f4\uff0c\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u4e5f\u6ca1\u6709\u591a\u4f59\u8d21\u732e\u3002\n\n\u8fd9\u4e9b\u5728 $[1,n]$ \u4e4b\u95f4\u88ab\u7b5b\u8fc7\u7684\u7ebf\u6bb5\u6ee1\u8db3\uff1a\u7aef\u70b9\u4e0d\u4ea4\uff0c\u4e92\u4e0d\u5305\u542b\u3002\n\n\u8003\u8651\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u5bf9\u4e8e\u4e0e\u5176\u4ed6\u7ebf\u6bb5\u65e0\u4ea4\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u8d21\u732e $r_i-l_i-1$\u3002\n\n\u800c\u5bf9\u4e8e\u82e5\u5e72\u6761\u7ebf\u6bb5\u91cd\u53e0\u8986\u76d6\u5219\u9700\u8981\u8003\u8651\u7aef\u70b9\u60c5\u51b5\uff0c\u5373\u82e5\u7aef\u70b9\u88ab\u67d3\u8272\uff0c\u5219\u7ebf\u6bb5\u4f5c\u5e9f\uff0c\u8bb0 $[l_i,r_i]\\sim [l_j,r_j]$ \u8986\u76d6\u4e86\u533a\u95f4 $[L,R]$\uff0c\u5176\u4e2d $i<j$ \u4e14 $l_i$ \u9012\u589e\u3002\n\n\u663e\u7136\uff0c\u6240\u6709\u975e\u7aef\u70b9\u7684\u4f4d\u7f6e\u53ef\u4ee5\u5b8c\u6210\u67d3\u8272\uff0c\u800c\u5269\u4e0b\u7684 $j-i+1$ \u6761\u7ebf\u6bb5\u5171 $2(j-i+1)$ \u4e2a\u7aef\u70b9\u7684\u5206\u914d\u9700\u8981\u6ce8\u610f\u3002\n\n\u5982\u4f55\u5206\u914d\u67d3\u8272\u4f7f\u5f97 $2(j-i+1)$ \u4e2a\u7aef\u70b9\u6709\u5c3d\u53ef\u80fd\u591a\u7684\u7aef\u70b9\u88ab\u67d3\u8272\uff0c\u4e00\u79cd\u663e\u800c\u6613\u89c1\u7684\u67d3\u8272\u7b56\u7565\u662f\u7b2c $k$ \u6761\u7ebf\u6bb5\u67d3\u53bb\u7b2c $k-1$ \u6761\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\uff0c\u8fd9\u79cd\u7b56\u7565\u53ea\u80fd\u67d3\u53bb $(j-i)$ \u4e2a\u7aef\u70b9\uff0c\u4f3c\u4e4e\u6709\u4e9b\u592a\u56fa\u5b9a\u4e86\u3002\u8003\u8651\u4e00\u79cd hack \u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dsnv2uth.png)\n\n\u4e2d\u95f4\u7684\u7ebf\u6bb5\u7aef\u70b9\u662f\u88ab\u5305\u542b\u7684\uff0c\u80fd\u67d3\u8272\u5e76\u4e14\u6709\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u67d3\u8272\u3002\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e9b\u7ebf\u6bb5\u80fd\u8986\u76d6 $[L,R]$\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u7ebf\u6bb5\u4e24\u7aef\u90fd\u80fd\u9009\u6389\u3002\u800c\u6211\u4eec\u60f3\u8ba9\u8986\u76d6\u7684\u70b9\u5c3d\u53ef\u80fd\u591a\uff0c\u6240\u4ee5\u9009\u62e9\u7684\u7ebf\u6bb5\u5c3d\u53ef\u80fd\u5c11\uff0c\u8f6c\u6362\u6210\u4e86\u533a\u95f4\u8986\u76d6\u95ee\u9898\uff0c\u53ef\u4ee5\u8d2a\u5fc3\u89e3\u51b3\u3002\u9009\u62e9\u7684\u7ebf\u6bb5\u6309\u7167\u4e4b\u524d\u7684\u7ebf\u6bb5\u6570\u51cf\u4e00\u7b56\u7565\uff0c\u4e0d\u9009\u7684\u7ebf\u6bb5\u6309\u7167\u603b\u4f53\uff0c\u8ba1\u5165\u7b54\u6848\u4e2d\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u74f6\u9888\u5728\u6392\u5e8f\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0'){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\n\nvoid print(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)print(x/10);\n\tputchar(x%10^48);\n}\n\nconst int N=2e5+5;\nint n,a[N],tmp,num,ans,l[N],r[N];\nstruct node{\n\tint L,R;\n\tbool operator<(const node &p)const{return (L==p.L)?R<p.R:L<p.L;}\n}p[N],q[N];\n\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i)a[i]=read();\n\tfor(int i=1;i<=n;++i){\n\t\tif(!l[a[i]])l[a[i]]=i,r[a[i]]=i;\n\t\telse r[a[i]]=i;\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tif(l[i]>0&&l[i]+1<r[i])p[++tmp]=(node){l[i],r[i]};\n\t}\n\tsort(p+1,p+tmp+1);\n\tfor(int i=1;i<=tmp;++i){\n\t\tint nxt=i+1;\n\t\twhile(nxt<=tmp&&p[nxt].R<=p[i].R)nxt++;\n\t\tq[++num]=p[i];\n\t\ti=nxt-1;\n\t}\n\tint cnt,ll,rr;\n\tfor(int i=1;i<=num;++i){\n\t\tint nxt=i+1;ll=q[i].L,rr=q[i].R,cnt=1;\n\t\twhile(q[nxt].L<rr&&nxt<=num){\n\t\t\twhile(q[nxt].L<rr&&nxt<=num)nxt++;\n\t\t\trr=q[nxt-1].R,cnt++;\n\t\t}\n\t\tans+=rr-ll-cnt;\n\t\ti=nxt-1;\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1670043945,
        "uid": 271736,
        "name": "Daidly",
        "ccfLevel": 6,
        "title": "CF1630C Paint the Middle \u9898\u89e3"
    },
    {
        "content": "### $\\text{Difficulty : 2200}$\n\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\u8fdb\u884c\u7b80\u5355\u7684\u95ee\u9898\u8f6c\u5316\u3002\n\n\u5148\u5c06\u6240\u6709\u7684\u76f8\u540c\u7684\u6570\u5b57\u4e2d\u53d6\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f5c\u4e3a\u53ef\u67d3\u8272\u533a\u95f4\uff0c\u5176\u4f59\u7684\u6570\u5b57\u76f4\u63a5\u65e0\u89c6\uff0c\u56e0\u4e3a\u4e00\u5b9a\u53ef\u4ee5\u5229\u7528\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u505a\u5230\u4efb\u4f55\u4e00\u4e2a\u4e2d\u95f4\u5c0f\u533a\u95f4\u80fd\u505a\u5230\u4efb\u4f55\u67d3\u8272\u3002\n\n\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u53ef\u67d3\u8272\u533a\u95f4\u7f29\u6389\u4e00\u4e9b\uff0c\u4efb\u4f55\u5b8c\u5168\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u53ef\u67d3\u8272\u533a\u95f4\u7684\u533a\u95f4\u90fd\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\uff0c\u7406\u7531\u540c\u6837\u662f\u5927\u533a\u95f4\u53ef\u4ee5\u505a\u5230\u4efb\u610f\u5c0f\u533a\u95f4\u80fd\u505a\u5230\u7684\u67d3\u8272\u3002\uff08\u5206\u6210\u4e24\u6b65\u53ef\u80fd\u4f1a\u597d\u7406\u89e3\u4e00\u70b9\uff0c\u4e5f\u53ef\u4ee5\u7528\u7edf\u4e00\u5b9a\u4e49\uff0c\u4e5f\u4e0d\u662f\u5f88\u96be\u3002\uff09\n\n\u5230\u6b64\u4e5f\u5c31\u662f\u4e00\u5806\u4e0d\u4e92\u76f8\u5305\u542b\u7684\u533a\u95f4\uff0c\u9009\u62e9\u4e00\u4e9b\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\u67d3\u8272\uff0c\u6ee1\u8db3\u6bcf\u4e00\u6b21\u67d3\u8272\u65f6\u5de6\u53f3\u7aef\u70b9\u90fd\u6ca1\u6709\u88ab\u67d3\u8272\u3002\u5f53\u533a\u95f4\u6ca1\u6709\u76f8\u4ea4\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5168\u90fd\u67d3\u4e0a\u5c31\u884c\u4e86\uff0c\u5173\u952e\u5c31\u5728\u4e8e\u5982\u4f55\u5904\u7406\u6709\u4ea4\u96c6\u7684\u533a\u95f4\u3002\n\n---\n\u4e0d\u59a8\u8003\u8651\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u8003\u8651\u67d3\u8272\uff08\u5426\u5219\u4e00\u5b9a\u80fd\u8f6c\u5316\u4e00\u79cd\u7ed3\u679c\u76f8\u540c\u7684\u4ece\u5de6\u5f80\u53f3\u7684\u67d3\u8272\u65b9\u5f0f\uff09\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u5229\u7528\u67d0\u4e00\u4e2a\u533a\u95f4\u67d3\u8272\u5c31\u4e00\u5b9a\u8981\u6c42\u4e4b\u524d\u4e3a\u8fd9\u4e2a\u533a\u95f4\u7559\u4e0b\u4e00\u4e2a\u4f4d\u4e8e\u7aef\u70b9\u5904\u7684\u7a7a\u767d\u70b9\u3002\u6362\u8a00\u4e4b\uff0c\u5c31\u662f\u67d3\u8272\u7528\u7684\u533a\u95f4\u6570\u91cf\u6bcf\u591a\u4e00\u4e2a\uff0c\u80fd\u67d3\u5230\u8272\u7684\u70b9\u5c31\u5c11\u4e00\u4e2a\u3002\u800c\u4e00\u4e2a\u4e0d\u88ab\u5305\u542b\u7684\u533a\u95f4\u81f3\u5c11\u6709\u4e00\u4e2a\u4f4d\u7f6e\u5305\u62ec\u5176\u4ed6\u7a7a\u767d\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6700\u540e\u9009\u51fa\u7684\u533a\u95f4\u628a\u6574\u4e2a\u53ef\u80fd\u7684\u8303\u56f4\u90fd\u8986\u76d6\u4e00\u5b9a\u662f\u4e00\u79cd\u4e0d\u52a3\u7684\u89e3\u3002\n\n\u6240\u4ee5\u95ee\u9898\u6700\u540e\u5c31\u8f6c\u6362\u4e3a\u82e5\u5e72\u4e2a\u533a\u95f4\u4e2d\u53d6\u82e5\u5e72\u533a\u95f4\u4f7f\u5f97\u6574\u4e2a\u53ef\u80fd\u7684\u8986\u76d6\u7684\u8303\u56f4\u88ab\u5b8c\u5168\u8986\u76d6\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u8d2a\u5fc3\u95ee\u9898\uff0c\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u4ece\u76f8\u4ea4\u533a\u95f4\u9009\u62e9\u53f3\u7aef\u70b9\u6700\u9760\u53f3\u7684\u4e00\u4e2a\u5c31\u884c\u4e86\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=400005;\nstruct str{\n\tint l,r;\n\tbool operator <(str a){\n\t\tif(l==a.l)return r<a.r;\n\t\treturn l<a.l;\n\t}\n}s[MAXN];\nint n,col[MAXN],l[MAXN],r[MAXN],book[MAXN],cnt,ans,maxn;\nqueue <int> q;\nvoid work(int now){\n\tif(s[now].r<=maxn){\n\t\tbook[now]=1;\n\t\treturn;\n\t}\n\tq.push(now);int i=now+1;\n\tbook[now]=1;maxn=max(maxn,s[now].r);\n\tint ll=s[now].l,tot=-1,maxi=-1;\n\twhile(!q.empty()){\n\t\tnow=q.front();\n\t\tq.pop();\n\t\tmaxi=-1;\n\t\tfor(;i<=cnt;i++){\n\t\t\tif(s[now].r<s[i].l)break;\n\t\t\tbook[i]=1;\n\t\t\tif(s[i].r>=maxn){\n\t\t\t\tmaxn=s[i].r;\n\t\t\t\tmaxi=i;\n\t\t\t}\n\t\t}\n\t\ttot++;\n\t\tif(maxi!=-1)\n\t\tq.push(maxi);\n\t}\n\tans+=maxn-ll-1-tot;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)l[i]=2147483647;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&col[i]);\n\t\tl[col[i]]=min(l[col[i]],i);\n\t\tr[col[i]]=max(r[col[i]],i);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(l[i]<r[i]-1){\n\t\t\ts[++cnt].l=l[i];\n\t\t\ts[cnt].r=r[i];\n\t\t}\n\t}\n\ts[cnt+1].l=2147483647;\n\tsort(s+1,s+cnt+1);\n\tfor(int i=1;i<=cnt;i++){\n\t\tif(book[i])continue;\n\t\telse work(i);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1646142170,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF1630C Paint the Middle \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4efb\u610f\u76f8\u540c\u7684\u4e24\u4e2a\u6570 $a_i =a_k$, \u53ef\u4ee5\u9009\u62e9 $(i,j)$ \u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u6570\u5b57 $a_j$ \u5e76\u5220\u53bb $(1\\le i<j<k\\le n)$\uff0c\u95ee\u6700\u591a\u80fd\u5220\u53bb\u591a\u5c11\u4e2a\u6570\u5b57\n\n## Sol 1 Model Constructing\n\n### \u7ed3\u8bba\n\n1. \u8003\u8651\u4e00\u7cfb\u5217\u76f8\u540c\u7684\u6570\u5b57\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u54ea\u4e9b\u4f4d\u7f6e\u975e\u5e38\u5173\u952e\uff1f\n   1. \u9996\u5c3e\n   2. \u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u7cfb\u5217\u76f8\u540c\u7684\u6570\u5b57\uff0c\u53ea\u7528\u8003\u8651\u5b83\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n   3. \u56e0\u4e3a\u4e2d\u95f4\u6570\u80fd\u6d88\u53bb\u7684\u90e8\u5206\u4e00\u5b9a\u80fd\u88ab\u6700\u5de6\u6700\u53f3\u7684\u6570\u5b57\u6d88\u9664\n2. \u8003\u8651\u5c06\u8fd9\u4e9b\u6700\u5148\u6700\u540e\u51fa\u73b0\u7684\u6570\u7684\u4f4d\u7f6e\u770b\u6210\u4e00\u6bb5\u533a\u95f4(\u7ebf\u6bb5)\uff0c\u8fd9\u4e9b\u533a\u95f4\u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\uff1f\n   1. \u533a\u95f4\u7684\u7aef\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u91cd\u5408\n   2. \u82e5\u6709\u5305\u542b\u7684\u533a\u95f4\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u5927\u533a\u95f4\u66ff\u6362\u6389(\u8bc1\u660e\u548c\u4e0a\u9762\u76f8\u540c)\n   3. \u8f6c\u5316\u4e3a\u4e86\u53ea\u6709\u76f8\u4ea4\u5173\u7cfb\u4e14\u7aef\u70b9\u4e0d\u4f1a\u91cd\u5408\u7684\u4e00\u7cfb\u5217\u533a\u95f4\n3. \u8003\u8651\u6d88\u6389\u533a\u95f4\u4e2d\u7684\u6570\n   1. \u9996\u5148\u4e0d\u4e3a\u533a\u95f4\u7aef\u70b9\u7684\u6570\u4e00\u5b9a\u80fd\u88ab\u6d88\u9664\u6389\n   2. \u6bcf\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u81f3\u591a\u6709\u4e00\u4e2a\u88ab\u6d88\u9664\u6389\n4. \u91cd\u65b0\u8003\u8651\u95ee\u9898\n   1. \u5982\u4f55\u5c3d\u91cf\u591a\u5730\u6d88\u9664\u6389\u533a\u95f4\u7aef\u70b9\uff1f\n   2. \u9996\u5148\u4e00\u6bb5\u6570\u5b57\u5982\u679c\u6ca1\u6709\u4efb\u610f\u533a\u95f4\u9009\u62e9\u4e00\u5b9a\u662f\u6700\u52a3\u7684(\u867d\u7136\u5f88\u663e\u7136\uff0c\u4f46\u8fd9\u662f\u6700\u7ec8\u7ed3\u8bba\u7684\u524d\u63d0)\n   3. \u6bcf\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u81f3\u591a\u6709\u4e00\u4e2a\u88ab\u6d88\u9664\u6389\uff0c\u5373\u6bcf\u4e2a\u533a\u95f4\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u6d88\u9664\u4e0d\u6389\uff0c\u8bbe\u5f53\u524d\u533a\u95f4\u7684\u96c6\u5408\u4e3a $S$, \u96c6\u5408\u4e2d\u533a\u95f4\u4e2a\u6570\u4e3a $|S|$\uff0c\u5219\u5bf9\u4e8e\u4e00\u7cfb\u5217\u8fde\u7eed\u76f8\u4ea4\u7684\u533a\u95f4\u81f3\u5c11\u6709 $|S|+1$ \u7684\u7aef\u70b9\u65e0\u6cd5\u88ab\u6d88\u53bb\n   4. \u5177\u4f53\u6d88\u53bb\u7684\u65b9\u6cd5\uff1a\u9996\u5148\u6d88\u53bb\u4e0d\u4e3a\u533a\u95f4\u7aef\u70b9\u7684\u6570\uff0c\u7136\u540e\u5269\u4e0b\u82e5\u5e72\u533a\u95f4\u7aef\u70b9\u3002\u8003\u8651\u6d88\u53bb\u7684\u540e\u6548\u6027\uff0c\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4 $x$\uff0c\u6bcf\u6b21\u9009\u62e9\u5b83\u7684\u4e0b\u4e00\u4e2a\u533a\u95f4 $x+1$ \u6d88\u53bb\u5b83\u7684\u53f3\u7aef\u70b9\uff0c\u8fd9\u6837\u6700\u7ec8\u4f1a\u5269\u4e0b\u6240\u6709\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u548c\u6700\u53f3\u8fb9\u4e00\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c\u5373\u6709 $|S|+1$ \u7684\u7aef\u70b9\u65e0\u6cd5\u88ab\u6d88\u53bb\u3002\n   5. \u4e0a\u8ff0\u65b9\u6cd5\u4e3a\u5148\u6d88\u9664\u975e\u7aef\u70b9\u7684\u70b9\uff0c\u518d\u6d88\u9664\u7aef\u70b9\uff0c\u4f7f\u5f97\u6700\u540e\u7684\u533a\u95f4\u8fde\u7eed\u3002\u5982\u679c\u9009\u62e9\u4e0d\u8fde\u7eed\u7684\u65b9\u6848(\u5373\u5206\u6bb5)\uff1f\n   6. \u524d\u9762\u8bf4\u8fc7\u4e86\u8986\u76d6\u533a\u95f4\u4e00\u5b9a\u6bd4\u4e0d\u8986\u76d6\u66f4\u4f18\uff0c\u5219\u5206\u6bb5\u65b9\u6848\u7684\u524d\u63d0\u662f\u4e24\u4e2a\u533a\u95f4\u672c\u6765\u80fd\u5408\u4e3a\u4e00\u6bb5(\u91c7\u7528\u4e0a\u8ff0\u4fdd\u7559\u5de6\u7aef\u70b9\u7684\u65b9\u6cd5)\uff0c\u4f46\u5f3a\u5236\u5206\u4e3a\u4e24\u6bb5\n   7. \u8003\u8651\u6bcf\u65b0\u5212\u5206\u4e00\u4e2a\u533a\u95f4\u6bb5\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u90fd\u4f1a\u591a\u4e00\u4e2a\u53f3\u7aef\u70b9\u65e0\u6cd5\u6d88\u53bb (c. \u4e2d\u6240\u8ff0)\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u533a\u95f4\u6bb5\u5c3d\u91cf\u5c0f\u6700\u4f18\n5. \u95ee\u9898\u8f6c\u4e3a\u9009\u62e9\u82e5\u5e72\u533a\u95f4\uff0c\u4f7f\u5f97\u6700\u540e\u6240\u5f97\u7684\u533a\u95f4\u5206\u6bb5\u6570\u5c3d\u91cf\u5c11\u7684\u524d\u63d0\u4e0b\uff0c\u9009\u62e9\u7684\u533a\u95f4\u6570\u5c3d\u91cf\u5c11\u3002\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7 $n^2$ \u7684 dp \u7ebf\u6bb5\u6811\u4f18\u5316\u6216\u8005\u6392\u5e8f\u626b\u63cf\u7ebf\u89e3\u51b3\u3002(\u533a\u95f4\u8986\u76d6\u6a21\u677f)\n\n### Implementation\n\n```cpp\nconst int N = 2e5 + 56;\nint a[N];\nint lpos[N], rpos[N];\ntypedef pair<int, int> pii;\nset<pii> st;\nvector<pii> now;\n/*\n    set \u4e2d\u7ef4\u62a4\u7684\u7ed3\u6784\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a\u5de6\u7aef\u70b9\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a\u53f3\u7aef\u70b9\n    \u4fdd\u8bc1 now \u4e2d\u8bb0\u5f55\u7684\u7ebf\u6bb5\u5f53\u524d\u6bb5\u7684 r[i] >= l[i + 1]\n    \u6b64\u9898\u4e2d r[i] > l[i + 1]\n    \u8d2a\u5fc3\uff0c\u6bcf\u6b21\u9009\u62e9\u626b\u63cf\u7ebf\u8303\u56f4\u4e2d\u6700\u53f3\u8fb9\u7aef\u70b9\n*/\nint getans() { //\u626b\u63cf\u7ebf\n    int cnt = now.back().second - now.front().first + 1;\n    // \u603b\u957f\u5ea6 - \u533a\u95f4\u6570 - 1\n    int res = 1, nowr = 0/*\u626b\u63cf\u7ebf\u4f4d\u7f6e*/, sz = now.size();\n    for (int i = 0; i < sz; ++i) {\n        if (i == sz - 1 || now[i + 1].first > nowr) { //\u6ce8\u610f\u7279\u5224\u6700\u540e\u4e00\u4e2a\u533a\u95f4\uff0c\u4e00\u5b9a\u8981\u9009\n            res++;\n            nowr = now[i].second;\n        }\n    }\n    return cnt - res;\n}\nint main() {\n    int n = read();\n    for (int i = 1; i <= n; ++i) {\n        a[i] = read();\n        if (!lpos[a[i]]) lpos[a[i]] = i;\n        rpos[a[i]] = i;\n    }\n    for (int i = 1; i <= n; ++i)\n        if (lpos[i] < rpos[i]) st.emplace(lpos[i], rpos[i]);\n    if (st.empty()) {\n        puts(\"0\");\n        return 0;\n    }\n    int ans = 0;\n    for (auto P : st) {\n        int l = P.first, r = P.second;\n        // \u5f53\u524d\u533a\u95f4 l, r\n        // \u4e4b\u524d\u7684\u533a\u95f4\u6bb5 \n        if (now.empty()) now.emplace_back(l, r);\n        else if (now.back().second < l) { // \u65b0\u5f00\u4e00\u6bb5\n            ans += getans();\n            now.clear();\n            now.emplace_back(l, r);\n        } else if (now.back().second < r) now.emplace_back(l, r); // \u6392\u9664\u6389\u533a\u95f4\u8986\u76d6\u7684\u60c5\u51b5 \n    }\n    ans += getans();\n    cout << ans << endl;\n    return 0;\n}\n```\n\n## Sol 2 Dynamic Programming\n\n\u6570\u636e\u8303\u56f4\u5927\u6982\u7387\u53ea\u80fd\u7ebf\u6027 dp\n\n\u8003\u8651 $dp_i$ \u8868\u793a\u5230\u7b2c $i$ \u4f4d\u65f6(\u533a\u95f4 $[1, i]$ )\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u7b2c $i$ \u4f4d\u7684\u72b6\u6001\uff1a\n\n1. \u7b2c $i$ \u4f4d\u4e0e\u524d\u9762\u7684\u7b2c $j$ \u4f4d $a_i=a_j$\uff0c\u6d88\u6389\u4ed6\u4eec\u4e2d\u95f4\u6240\u6709\u7684\u6570\n   1. `dp[i] = max{dp[j] + i - j + 1}`\n   2. `dp[i] = max{dp[j] - j} + i - 1`\n2. \u7b2c $i$ \u4f4d\u4e0e\u524d\u9762\u7684\u7b2c $j$ \u4f4d $a_i=a_j$\uff0c\u4f46\u4e0d\u76f4\u63a5\u6d88\u6389\u4ed6\u4eec\u4e2d\u95f4\u7684\u6240\u6709\u6570\uff0c\u8003\u8651\u4e2d\u95f4\u70b9 $k,(i<k<j)$\uff0c\u5148\u6d88\u9664\u5b8c\u5f00\u533a\u95f4 $(k,i)$ \u4e2d\u7684\u6240\u6709\u6570\uff0c\u518d\u5212\u5206\u4e3a\u5b50\u95ee\u9898 `dp[k]`\n   1. `dp[i] = max{dp[k] + i - k + 1}`\n   2. `dp[i] = max{dp[j] - j} + i - 1`\n3. \u76f4\u63a5\u820d\u5f03\u6389\u7b2c $i$ \u4f4d\n   1. `dp[i] = dp[i - 1]`\n   2. \u4e0a\u5f0f\u7b49\u4ef7\u4e8e $j=i-1$ \u7684\u60c5\u51b5\n4. \u8fd9\u6837\u505a\u5230\u4e86\u72b6\u6001\u66f4\u65b0\u7684\u4e0d\u91cd\u4e0d\u6f0f\n\n\u7ef4\u62a4\u4e3a\u533a\u95f4\u9759\u6001\u6700\u5927\u503c\uff0cSegment Tree \u89e3\u51b3\u5373\u53ef\u3002\n\n\n\n\n\n\n\n",
        "postTime": 1644483504,
        "uid": 19905,
        "name": "DarkMoon_Dragon",
        "ccfLevel": 0,
        "title": "CF1630C"
    },
    {
        "content": "## CF1631E Paint the Middle\n\n### \u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 $ a $ \uff0c\u521d\u59cb\u5168\u4e3a $ 0 $ \u7684\u6570\u7ec4 $ c $ \u3002\n\n\u5982\u679c $ c_i = c_k = 0 $ \u4e14 $ a_i = a_k $ \uff0c\u53ef\u4ee5\u628a $ c_j $ \u8bbe\u4e3a $ 1 \\  (i < j < k) $ \u3002\n\n\u6c42\u6700\u540e $ c $ \u6570\u7ec4\u7684\u548c\u7684\u6700\u5927\u503c\u3002\n\n### \u601d\u8def\n\n\u8003\u8651\u8bbe $ dp_i $ \u8868\u793a $ c_i = 0 $ \u60c5\u51b5\u4e0b $ c $ \u6570\u7ec4\u524d $ i $ \u9879\u6700\u5c11\u6709\u51e0\u4e2a\u4f4d\u7f6e\u4e3a $ 0 $ \u3002\n\n\u9996\u5148\uff0c $ dp $ \u6570\u7ec4\u4e00\u5b9a\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n\n\u82e5 $ a_i $ \u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u4f7f $ dp_i = dp_{i-1} + 1 $ \u3002\n\n\u5426\u5219\uff0c\u8003\u8651\u6700\u5c0f\u7684 $ j $ \u4f7f\u5f97 $ a_i = a_j $ \uff0c\u6211\u4eec\u7684\u7b54\u6848\u53ef\u4ee5\u662f $ \\min_{k=j}^{i-1}(dp_k) + 1 $ \u3002\n\n\u8bc1\u660e\uff1a\u8bbe $ \\min_{k=j}^{i-1}(dp_k) = dp_x $ \uff0c\u663e\u7136\u82e5 $ x = j $ \u8be5\u5f0f\u5b50\u6210\u7acb\u3002\n\n\u82e5 $ dp_x $ \u5bf9\u5e94\u9009\u62e9\u7684\u503c $ dp_y + 1 $ \u7684 $ y $ \u6ee1\u8db3 $ j <= y $ \uff0c\u5219\u663e\u7136 $ dp_y < dp_x $ \uff0c\u4e0e\u6211\u4eec\u627e\u7684\u503c\u6700\u5c0f\u7684 $ x $ \u77db\u76fe\u3002\n\n\u5269\u4e0b\u7684\u60c5\u51b5\u5c31\u662f $ dp_x $ \u5bf9\u5e94\u9009\u62e9\u7684\u503c $ dp_y + 1 $ \u7684 $ y $ \u6ee1\u8db3 $ y < j $ \u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u8ba9 $ y $ \u548c $ x $ \u4fee\u6539\u65f6\u7559\u4e0b $ c_j $ \uff0c\u518d\u7528 $ j $ \u548c $ i $ \u4fee\u6539\u65f6\u4f1a\u4fee\u6539 $ c_x $ \uff0c\u5f97\u5230\u7684\u6700\u4f18\u7b54\u6848\u5373 $ dp_x + 1 $ \u3002\n\n\u6839\u636e\u5b9a\u4e49\uff0c\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662f $ n - dp_n $ \u3002\n\n\u6ce8\uff1a\u4e0b\u9762\u4ee3\u7801\u5c06 $ dp $ \u6570\u7ec4\u53d6\u4e86\u76f8\u53cd\u6570\uff0c\u6545\u6c42\u533a\u95f4\u6700\u5927\u800c\u975e\u6700\u5c0f\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define f(i,j,k) for(register int i=j;i<=k;++i)\n#define g(i,j,k) for(register int i=j;i>=k;--i)\nint n,m,s,l;\nstruct xds{\n\tint l,r,c;\n}a[4040404];\nint b[202020];\nint c[202020];\ninline int Max(int x,int y){return x>y?x:y;}\nvoid bt(int id,int l,int r){\n\ta[id]=(xds){l,r,-l};\n\tif(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tbt(id*2,l,mid);\n\t\tbt(id*2+1,mid+1,r);\n\t}\n}\nvoid add(int id,int x,int v){\n\tif(a[id].l==a[id].r){\n\t\ta[id].c=v;\n\t\treturn;\n\t}\n\tint mid=(a[id].l+a[id].r)>>1;\n\tif(x<=mid)add(id*2,x,v);\n\telse add(id*2+1,x,v);\n\ta[id].c=Max(a[id*2].c,a[id*2+1].c);\n}\nint sum(int id,int l,int r){\n\tif(l<=a[id].l && a[id].r<=r)return a[id].c;\n\tint mid=(a[id].l+a[id].r)>>1;\n\tif(r<=mid)return sum(id*2,l,r);\n\telse if(mid<l)return sum(id*2+1,l,r);\n\treturn Max(sum(id*2,l,mid),sum(id*2+1,mid+1,r));\n}\nint main(){\n\tcin>>n;\n\tf(i,1,n)scanf(\"%d\",&b[i]);\n\tg(i,n,1)c[b[i]]=i;\n\tbt(1,1,n);\n\tf(i,2,n)add(1,i,sum(1,c[b[i]]-(c[b[i]]==i),i-1)-1);\n\tprintf(\"%d\\n\",sum(1,n,n)+n);\n\treturn 0;\n}\n```",
        "postTime": 1652937894,
        "uid": 218376,
        "name": "IloveSurtr",
        "ccfLevel": 7,
        "title": "CF1630C"
    },
    {
        "content": "# CF1630C - Paint the Middle\n>- \u94fe\u63a5\uff1ahttps://codeforces.com/problemset/problem/1630/C\n>- \u77e5\u8bc6\u70b9\uff1aDP\u3001\u7ebf\u6bb5\u6811\u4f18\u5316\n>- \u96be\u5ea6\uff1a\n\n## \u9898\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u5143\u7d20\uff0c\u7b2c $i$ \u4e2a\u5143\u7d20\u6709 $a_i$ \u548c $c_i$\uff0c$a_i$ \u5728\u8f93\u5165\u4e2d\u7ed9\u5b9a\uff0c\u6240\u6709 $c_i=0$\u3002\u4f60\u53ef\u4ee5\u6267\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f60\u53ef\u4ee5\u9009\u62e9\u6ee1\u8db3 $1\\leqslant i<j<k\\leqslant n$\uff0c$c_i=c_j=c_k=0$ \u4e14 $a_i=a_k$ \u7684\u4e09\u4e2a\u4f4d\u7f6e $i,j,k$\uff0c\u7136\u540e\u5c06 $c_j$ \u53d8\u4e3a $1$\u3002\u4f60\u5e0c\u671b\u6700\u5927\u5316 $\\sum\\limits_{i=1}^n c_i$ \u7684\u503c\uff0c\u6c42\u8fd9\u4e2a\u6700\u5927\u503c\u3002\n\u6570\u636e\u8303\u56f4\uff1a\n- $3\\leqslant n\\leqslant 2\\times 10^5$\u3002\n- $1\\leqslant a_i\\leqslant n$\u3002\n\n## \u601d\u8def\n- \u5bf9\u4e8e\u540c\u4e00\u4e2a $a_i$\uff0c\u53ef\u80fd\u6709\u591a\u4e2a\u4f4d\u7f6e\u586b\u6709\u6b64\u6570\uff0c\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c$a_i$\u4e4b\u95f4\u7684\u8fde\u8fb9\u4e00\u5b9a\u662f\u5176\u5b83\u5143\u7d20\u548c\u7b2c\u4e00\u4e2a\u8fde\u8fb9\u3002\n- \u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u5df2\u77e5\u4e00\u5806\u7ebf\u6bb5\uff0c\u7ebf\u6bb5\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8986\u76d6\uff0c\u7ebf\u6bb5\u7684\u5de6\u53f3\u4e24\u7aef\u70b9\u5fc5\u987b\u586b $0$\uff0c\u4e2d\u95f4\u7684\u5143\u7d20\u53ef\u4ee5\u586b $1$\uff0c\u600e\u4e48\u5b89\u653e\u80fd\u8ba9\u6574\u4e2a\u5e8f\u5217\u4e2d\u7684 $1$ \u5c3d\u53ef\u80fd\u591a\u3002\n- \u5bf9\u4e8e\u67d0\u4e00\u6761\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n    - 1. \u8fd9\u4e2a\u70b9\u4e0d\u8ddf\u524d\u9762\u7684\u70b9\u914d\u5bf9\uff0c$dp[i]=dp[i-1]$\n    - 2. \u8be5\u7ebf\u6bb5\u8ddf\u4e4b\u524d\u7684\u7ebf\u6bb5\u6ca1\u6709\u4efb\u4f55\u8986\u76d6\u5173\u7cfb\uff0c$dp[r]=dp[l]+(r-l-1)$\n    - 3. \u8be5\u7ebf\u6bb5\u8986\u76d6\u4e86\u5176\u4ed6\u7ebf\u6bb5\uff0c\u5e76\u4e14\u6211\u4eec\u8bbe\u88ab\u8986\u76d6\u7684\u8fd9\u4e9b\u7ebf\u6bb5\u4e2d\uff0c\u6700\u9760\u53f3\u7684\u53f3\u7aef\u70b9\u4e3a $k$\u3002$dp[r]=dp[k]+(r-k-1)$\u3002\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u80fd\u9009\u4e00\u4e2a\u5408\u9002\u7684 $k$ \u4f7f\u5f97\u5b83\u5bf9 $dp[r]$ \u9020\u6210\u7684\u8d21\u732e\u6700\u5927\uff0c\u6240\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $dp[i]-i$ \u5373\u53ef\u3002\n- \u6211\u4eec\u80fd\u591f\u53d1\u73b0\uff0c\u4ee5\u4e0a\u4e09\u79cd\u60c5\u51b5\u4e0d\u91cd\u4e0d\u6f0f\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\nconst int N\t= 1e6+10;\nconst int INF\t= 1e9;\nusing namespace std;\n\nint tree[N*4];\n\nvoid UPD(int cur,int l,int r,int pos,int d)\n{\n\tif(r<pos || l>pos)return;\n\tif(l==r){tree[cur]=d;return;}\n\tint mid=(l+r)/2;\n\tUPD(cur*2, l, mid, pos, d);\n\tUPD(cur*2+1, mid+1, r, pos, d);\n\ttree[cur] = max(tree[cur*2], tree[cur*2+1]);\n}\n\nint QRY(int cur,int l,int r,int ql,int qr)\n{\n\tif(r<ql || l>qr){return -INF;}\n\telse if(l>=ql && r<=qr){return tree[cur];}\n\tint mid=(l+r)/2;\n\treturn max(QRY(cur*2, l, mid, ql, qr),  QRY(cur*2+1, mid+1, r, ql, qr));\n}\n\nint arr[N];\nint prei[N],dp[N];\nint n;\n\nvoid Sol()\n{\n\tfor (int i=1; i<=n*4; i++)\n\t{\n\t\ttree[i] = -INF;\n\t}\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tdp[i] = dp[i-1];\n\t\tif(i > prei[ arr[i] ])\n\t\t{\n\t\t\tdp[i] = max(dp[i], dp[ prei[arr[i]] ] + i-prei[arr[i]]-1 );\n\t\t\tint res = QRY(1, 1, n, prei[ arr[i] ]+1, i-1);\n\t\t\tdp[i] = max(dp[i], res+i-1);\n\t\t}\n\t\tUPD(1, 1, n, i, dp[i]-i);\n\t}\n\tprintf(\"%d\\n\",dp[n]);\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tif(!prei[ arr[i] ]) prei[ arr[i] ] = i;\n\t}\n\tSol();\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1659534843,
        "uid": 36285,
        "name": "\u6c27\u5c11Kevin",
        "ccfLevel": 4,
        "title": "CF1630C - Paint the Middle"
    }
]