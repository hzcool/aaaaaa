[
    {
        "content": "\u57fa\u672c\u505a\u6cd5\u5c31\u662f**\u6a21\u62df**\n\n\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167\u9898\u76ee\u8981\u6c42\u505a\u5c31$AC$\u4e86\u5462\uff0c\u6709\u6ca1\u6709\u5f88\u795e\u5947$!$\n\n\u6211\u4eec\u7528\u5806\u6765\u5b9e\u73b0\u6211\u4eec\u7684\u6a21\u62df:\n\n\u5373\u6bcf\u6b21\u9009\u51fa\u6765\u4e24\u4e2a\u6570\u503c\u6700\u5c0f\u7684\u6570\uff0c\u5982\u679c\u53d1\u73b0\u5b83\u4eec\u76f8\u7b49\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8fdb\u884c\u5408\u5e76\u4e86\u3002\u5426\u5219\u5c31\u8bf4\u660e\u7b2c\u4e00\u4e2a\u6570\u5fc5\u7136\u662f\u6700\u540e\u5e8f\u5217\u4e2d\u7684\u6570\u4e86\uff0c\u6211\u4eec\u4fdd\u5b58\u5b83\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u8ba9\u7b2c\u4e8c\u4e2a\u6570\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u6570\u5c1d\u8bd5\u5339\u914d$......$\n\n\u6211\u4eec\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u65f6\u5019\u4ee5\u6570\u503c\u5927\u5c0f\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5\u539f\u59cb\u4f4d\u7f6e\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u90fd\u662f\u4ece\u5c0f\u5230\u5927\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u7528\u5806\u7684\u8bdd\u662f\u53cd\u7740\u6765\u7684\u3002\n\n\u6700\u540e\u6211\u4eec\u628a\u6211\u4eec\u8bb0\u5f55\u7684\u5728\u6700\u7ec8\u5e8f\u5217\u7684\u6570\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f\uff0c\u76f4\u63a5\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8:\u8bb0\u5f97\u5f00$long \\ long$\n\n$Code$\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#define ll long long\nusing namespace std;\nconst int N=150005;\nstruct D{\n\tll a;int id;\n\tbool operator < (const D&x) const\t//\u5806\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5e94\u8be5\u53cd\u7740\u6765 \n\t{\n\t\tif(a!=x.a) return a>x.a;\n\t\treturn id>x.id;\n\t}\n}e,fir,sec;\nstruct C{int id;ll a;}h[N];\nbool cmp(const C&x,const C&y) {return x.id<y.id;}\npriority_queue<D> q;\nint n,tot;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&e.a);\n\t\te.id=i;\n\t\tq.push(e);\n\t}\n\twhile(q.size())\n\t{\n\t\tfir=q.top();q.pop();\n\t\tif(q.empty())\t//\u7279\u5224\u6700\u540e\u4e00\u4e2a\u6570 \n\t\t{\n\t\t\th[++tot].a=fir.a;\n\t\t\th[tot].id=fir.id;\n\t\t\tbreak;\n\t\t}\n\t\tsec=q.top();\n\t\tif(fir.a==sec.a)\n\t\t{\n\t\t\tq.pop();\n\t\t\te.a=fir.a+sec.a;\n\t\t\te.id=sec.id;\n\t\t\tq.push(e);\n\t\t}\n\t\telse\n\t\t{\n\t\t\th[++tot].a=fir.a;\n\t\t\th[tot].id=fir.id;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",tot);\n\tsort(h+1,h+tot+1,cmp);\n\tfor(int i=1;i<=tot;i++)\n\tprintf(\"%lld \",h[i].a);\n\treturn 0;\n}\n```",
        "postTime": 1603078663,
        "uid": 192156,
        "name": "Bitter_Tea",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF962D \u3010Merge Equals\u3011"
    },
    {
        "content": "[in Blog](//milk-lemon.blog.luogu.org/solution-CF962D) & [Problem](//www.luogu.com.cn/problem/CF962D)\n\n## \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u5b9a\u6b63\u6574\u6570\u5e8f\u5217 $a_1,\\ a_2,\\ \\cdots,\\ a_n$\u3002\n\n- \u8981\u6c42\u6bcf\u6b21\u4ece\u5e8f\u5217\u4e2d\u627e\u51fa\u6700\u5c0f\u7684 $x$\uff0c\u4e14\u51fa\u73b0\u6b21\u6570\u81f3\u5c11\u4e3a $2$\uff0c\u518d\u627e\u5230\u6700\u5c0f\u7684 $i<j$\uff0c\u4f7f\u5f97 $a_i=a_j=x$\uff0c\u63a5\u7740\u5c06 $a_i$ \u4ece\u5e8f\u5217\u4e2d\u5220\u9664\uff0c\u6700\u540e\u5c06 $a_j$ \u4fee\u6539\u4e3a $2x$\u3002\n\n- \u5982\u6b64\u64cd\u4f5c\u76f4\u5230\u8fd9\u4e2a\u5e8f\u5217\u65e0\u6cd5\u7ee7\u7eed\u64cd\u4f5c\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5e8f\u5217\u3002\n\n- $2\\leq n\\leq 1.5\\times 10^5$\uff0c$1\\leq a_i\\leq 10^9$\n\n## \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u5c06\u6574\u4e2a\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u6570\u7684\u4e0b\u6807\uff08\u4e5f\u5c31\u662f $1\\sim n$\uff09\u653e\u5165\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u800c\u8be5\u4f18\u5148\u961f\u5217\u6309\u7167\u4e0b\u6807\u5bf9\u5e94\u7684\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u6bcf\u6b21\u4ece\u4f18\u5148\u961f\u5217\u4e2d\u53d6\u51fa\u4e24\u4e2a\u4e0b\u6807 $i,\\ j$\uff0c\u5219 $a_i,\\ a_j$ \u5fc5\u4e3a\u6b64\u65f6\u5e8f\u5217\u4e2d\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\uff0c\u4e0b\u9762\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u82e5 $a_i=a_j$\uff0c\u5219\u76f4\u63a5\u8fdb\u884c\u5408\u5e76\uff0c\u5c06\u539f\u5e8f\u5217\u7684 $a_j$ \u503c\u66ff\u6362\u4e3a $2a_j$\uff1b\n\n- \u82e5 $a_i\\not=a_j$\uff0c\u7531\u4e8e $a_i,\\ a_j$ \u662f\u6b64\u65f6\u5e8f\u5217\u4e2d\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\uff0c\u6545\u5e8f\u5217\u4e2d\u4ec5\u5b58\u5728\u4e00\u4e2a $a_i$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6570\u53ea\u4f1a\u53d8\u5927\uff0c\u90a3\u4e48\u6b64\u6570\u65e0\u6cd5\u5408\u5e76\u3002\u53ea\u9700\u628a\u5b83\u5f39\u51fa\u961f\u5217\uff0c\u628a\u4e0b\u6807\u52a0\u5165\u7b54\u6848\u6570\u7ec4\u5373\u53ef\u3002\n\n\u6700\u540e\u961f\u5217\u4e2d\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\uff0c\u76f4\u63a5\u52a0\u5165\u7b54\u6848\u6570\u7ec4\u5373\u53ef\u3002\n\n\u8f93\u51fa\u65f6\uff0c\u53ea\u9700\u6309\u7167\u4e0b\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u8f93\u51fa\u5bf9\u5e94\u7684\u6570\u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u3002\n\n## AC \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n; long long a[150001];\n\nstruct Cmp{\n    bool operator()(int x,int y){\n        if(a[x]!=a[y])return a[x]>a[y];\n        else return x>y;\n    }\n};\npriority_queue<int,vector<int>,Cmp> Q;\nvector<int> answer;\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n        scanf(\"%lld\",a+i),Q.push(i);\n\twhile(Q.size()>=2){\n\t\tint x=Q.top(); Q.pop();\n        int y=Q.top(); Q.pop();\n        if(a[x]==a[y])a[y]<<=1,Q.push(y); // \u6570\u503c\u7ffb\u500d\u518d\u653e\u56de\u4f18\u5148\u961f\u5217\n        else Q.push(y),answer.push_back(x); // \u76f4\u63a5\u52a0\u5165\u7b54\u6848\u5e8f\u5217\n\t}\n    if(!Q.empty())answer.push_back(Q.top());\n\tprintf(\"%d\\n\",int(answer.size()));\n    sort(answer.begin(),answer.end()); //\u5bf9\u4e0b\u6807\u6392\u5e8f\n    for(int i : answer)\n        printf(\"%lld \",a[i]);\n    printf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1652764462,
        "uid": 234641,
        "name": "Milmon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF962D - Merge Equals"
    },
    {
        "content": "\n\n$\u7528map\u8bb0\u5f55\u6bcf\u4e2a\u6570\u503c\u51fa\u73b0\u7684\u4e0a\u4e00\u6b21\u4e0b\u6807$\n\n$\u5728\u679a\u4e3e\u5230a_i\u65f6,\u770b\u4e00\u4e0bmap\u4ee5\u524d\u6709\u6ca1\u6709a_i\u8fd9\u4e2a\u503c,\u6ca1\u6709\u5c31\u628a\u4e0b\u6807\u5b58\u8fdb\u53bb$\n\n$\u6709\u7684\u8bdd\u5c31\u53d6\u51fa\u4ee5\u524d\u7684\u90a3\u4e2a\u4e0b\u6807,\u62b9\u6389,\u81ea\u5df1\u7ffb\u500d,\u7136\u540e\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b$\n\n**\u53ef\u80fd\u4f60\u4f1a\u7591\u60d1,\u8fd9\u91cc\u4e0d\u662f\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6d88\u9664\u7684,\u662f\u4e00\u65e6\u51fa\u73b0\u5c31\u6d88\u9664,\u4e3a\u4ec0\u4e48\u5bf9\u4e86\u5462?**\n\n$\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5728\u6700\u5de6\u8fb9,\u8fdf\u65e9\u8981\u6d88\u6389,\u4e0e\u987a\u5e8f\u65e0\u5173$\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn=2e5+10;\nint n,a[maxn],s;\nmap<int,int>m;\nsigned main()\n{\n\tcin >> n;\n\tint s=n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin >> a[i];\n\t\tif( m[ a[i] ] )\n\t\t{\n\t\t\twhile( m[ a[i] ])\n\t\t\t{\n\t\t\t\tint index = m[ a[i] ];\n\t\t\t\ta[index]=0,s--,m[ a[i] ] =0;//\u6e05\u7a7a\n\t\t\t\ta[i] = 2*a[i];\n\t\t\t}\n\t\t\tm[ a[i] ]=i;\n\t\t}\t\n\t\telse\tm[ a[i] ]=i;\n\t}\n\tcout<<s<<endl;\n\tfor(int i=1;i<=n;i++)\n\t\tif( a[i] )\tcout<<a[i]<<\" \";\n}\n```",
        "postTime": 1594121063,
        "uid": 299810,
        "name": "issue_is_fw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF962D \u3010Merge Equals\u3011"
    },
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/CF962D) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/962/problem/D)\n\n>\u9898\u610f\u89c1\u6d1b\u8c37\u91cc\u7684\u7ffb\u8bd1\u3002\n\n## \u8fd9\u9053\u9898\u6709$2$\u79cd\u65b9\u6cd5\u3002\n---\n### \u65b9\u6cd5$1$\uff1a\n\u628a\u6240\u6709\u6570\u4ee5\u6570\u672c\u8eab\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4e0b\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u538b\u5165\u5806\uff0c\u8fd9\u6837\u6240\u6709\u76f8\u540c\u7684\u6570\u5c31\u53ef\u4ee5\u6328\u5728\u4e00\u8d77\u4e86\u3002\u5f53\u5806\u91cc\u8fd8\u6709\u81f3\u5c11$1$\u4e2a\u5143\u7d20\u65f6\uff0c\u4e0d\u65ad\u5730\u4ece\u5806\u9876\u53d6\u4e24\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5c31\u5c06\u5b83\u4eec\u5f39\u51fa\u5e76\u4e14\u5c06\u5b83\u4eec\u76f8\u52a0\u7684\u548c\u518d\u538b\u5165\u5806\u4e2d\uff0c\u5426\u5219\u8bf4\u660e\u518d\u4e5f\u6ca1\u6709\u6570\u80fd\u591f\u4e0e\u7b2c\u4e00\u4e2a\u53d6\u7684\u6570\u5408\u5e76\u4e86\uff08\u56e0\u4e3a\u4ee5\u540e\u53d6\u7684\u6570\u4f1a\u66f4\u5927\uff0c\u6ca1\u6709\u66f4\u5927\u7684\u6570\u7684\u4e24\u500d\u4f1a\u53d8\u5c0f\uff09\uff0c\u4fbf\u5c06\u5b83\u5f39\u51fa\u5e76\u538b\u5165\u7b54\u6848\u5e8f\u5217\u91cc\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long//\u9632\u7206int\nstruct cmp{//\u5806\u7684\u6bd4\u8f83\u65b9\u5f0f\n\tbool operator()(pair<int,int> x,pair<int,int> y){\n\t\tif(x.first!=y.first)return x.first>y.first;//\u4ee5\u6570\u672c\u8eab\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\n\t\treturn x.second>y.second;//\u4e0b\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\n\t}\n};\npriority_queue<pair<int,int>,vector<pair<int,int> >,cmp> q;//\u5806\nstruct cmp0{//\u5b58\u50a8\u7b54\u6848\u7684\u5806\u7684\u6bd4\u8f83\u65b9\u5f0f\n\tbool operator()(pair<int,int> x,pair<int,int> y){\n\t\treturn x.second>y.second;//\u4ee5\u4e0b\u6807\u6bd4\u8f83\uff0c\u4ee5\u4fbf\u4ece\u5de6\u5f80\u53f3\u8f93\u51fa\n\t}\n};\npriority_queue<pair<int,int>,vector<pair<int,int> >,cmp0> q0;//\u5b58\u50a8\u7b54\u6848\nsigned/*int\u5df2\u7ecf\u88abdefine\u6210long long\u4e86\uff0c\u53ea\u80fd\u7528signed*/ main(){\n\tint n/*\u6570\u7684\u4e2a\u6570*/,i;cin>>n;\n\tfor(i=1;i<=n;i++){\n\t\tint x;cin>>x;\n\t\tq.push(make_pair(x,i)/*\u6570\u662fpair\u7684\u7b2c\u4e00\u5143\uff0c\u4e0b\u6807\u662f\u7b2c\u4e8c\u5143*/);//\u538b\u5165\u5806\n\t}\n\twhile(q.size()>1){//\u5f53\u5806\u8fd8\u5269\u81f3\u5c112\u4e2a\u5143\u7d20\u65f6\n\t\tint x1/*\u65701*/=q.top().first,y1/*\u4e0b\u68071*/=q.top().second;q.pop();//\u7b2c\u4e00\u4e2a\u6570\u65e0\u8bba\u5982\u4f55\u90fd\u8981\u5f39\u51fa\uff0c\u5c31\u5148\u5f39\u51fa\u4e86\n\t\tint x2/*\u65702*/=q.top().first,y2/*\u4e0b\u68072*/=q.top().second;\n\t\tif(x1==x2)/*\u76f8\u7b49\uff1f*/q.pop()/*\u5f39\u51fa\u7b2c\u4e8c\u4e2a\u6570*/,q.push(make_pair(x1<<1,y2/*\u4fdd\u7559\u7b2c\u4e8c\u4e2a\u6570\u7684\u4f4d\u7f6e*/));//\u538b\u5165\u548c\n\t\telse q0.push(make_pair(x1,y1));//\u7b2c\u4e00\u4e2a\u6570\u8fdb\u7b54\u6848\u5e8f\u5217\n\t}\n\tq0.push(q.top());//\u5806\u4e2d\u5269\u4e0b\u7684\u90a3\u4e2a\u5b64\u72ec\u7684\u6570\u4e5f\u662f\u8981\u8fdb\u7b54\u6848\u5e8f\u5217\u7684\n\tcout<<q0.size()<<\"\\n\";\n\twhile(q0.size())cout<<q0.top().first<<\" \",q0.pop();\n\treturn 0;\n}\n```\n---\n### \u65b9\u6cd5$2$\uff1a\n\n\u5148\u628a\u6240\u6709\u7684\u6570\u4e2d\u7684\u56e0\u6570$2$\u5168\u90e8\u9664\u5e72\u51c0\uff0c\u7136\u540e\u5c06\u539f\u6765\u7684$0\\sim n-1$\u7684\u8bbf\u95ee\u987a\u5e8f\u8fdb\u884c\u4ee5\u9664\u4e86\u56e0\u6570$2$\u4e4b\u540e\u7684\u6570\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3001\u539f\u6570\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u3001\u4e0b\u6807\u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8fd9\u6837\u76f8\u5f53\u4e8e\u505a\u4e86\u4e00\u6b21\u5206\u7c7b\uff0c\u5c06\u53ef\u80fd\u80fd\u5408\u5e76\u7684\uff0c\u5373\u9664\u4e86\u56e0\u6570$2$\u4e4b\u540e\u7684\u6570\u76f8\u540c\u7684\u6570\u653e\u5728\u4e86\u4e00\u8d77\uff0c\u6bcf\u4e00\u7c7b\u4e2d\u53c8\u5c06\u76f8\u540c\u7684\u6570\u653e\u5728\u4e86\u4e00\u8d77\u3002\u63a5\u4e0b\u6765\u8bbf\u95ee\u6bcf\u4e00\u7c7b\uff08\u8fd9\u91cc\u4e0d\u9700\u8981\u8003\u8651\u987a\u5e8f\u4e0d\u5408\u9898\u610f\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6d89\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\uff0c\u53c8\u5206\u51e0\u8f6e\u8bbf\u95ee\uff0c\u6bcf\u8f6e\u8bbf\u95ee\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u3002\u5728\u6bcf\u8f6e\u4e2d\uff0c\u7b2c\u5947\u6570\u6b21\u8bbf\u95ee\u65f6\uff0c\u5982\u679c\u5df2\u7ecf\u8bbf\u95ee\u5b8c\u4e86\uff0c\u5c31\u5c06\u5b83\u52a0\u5165\u7b54\u6848\u5e8f\u5217\uff08\u56e0\u4e3a\u518d\u4e5f\u6ca1\u6709\u6570\u53ef\u4ee5\u4e0e\u5b83\u5408\u5e76\u4e86\uff09\u5e76\u9000\u51fa\u8fd9\u4e00\u8f6e\uff1b\u7b2c\u5076\u6570\u6b21\u8bbf\u95ee\u65f6\uff0c\u5c06\u524d\u4e00\u6b21\u8bbf\u95ee\u7684\u6570\u4e0e\u5b83\u5408\u5e76\uff08\u56e0\u4e3a\u8bbf\u95ee\u987a\u5e8f\u7684\u7b2c\u4e09\u5173\u952e\u5b57\u662f\u4e0b\u6807\uff0c\u6240\u4ee5\u7b2c\u5076\u6570\u6b21\u7684\u4e0b\u6807\u4e00\u5b9a\u662f\u6bd4\u524d\u4e00\u6b21\u5927\u7684\u4e2d\u6700\u5c0f\u7684\uff0c\u7b26\u5408\u9898\u610f\uff09\uff0c\u6b64\u65f6\u5b83\u5df2\u7ecf\u53d8\u6210\u4e86\u539f\u6765\u7684$2$\u500d\uff0c\u7136\u540e\u8ba9\u5b83\u5728\u4e0b\u4e00\u8f6e\u88ab\u8bbf\u95ee\u5230\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nint a[150000]/*\u539f\u6570*/,b[150000]/*\u9664\u4e86\u56e0\u65702\u540e\u7684\u6570*/,ord[150000]/*\u8bbf\u95ee\u987a\u5e8f*/,las[150000]/*\u4e0a\u4e00\u8f6e\u52a0\u5165\u5230\u8fd9\u4e00\u8f6e\u7684\u4e0b\u6807*/,now[150000]/*\u8fd9\u4e00\u8f6e\u8981\u8bbf\u95ee\u7684\u4e0b\u6807*/,will_be_las[150000]/*\u5373\u5c06\u52a0\u5230\u4e0b\u4e00\u8f6e\u7684\u4e0b\u6807*/;\nll ans[150000];//\u7b54\u6848\u5e8f\u5217\nbitset<150000> isans;//\u662f\u5426\u52a0\u5165\u4e86\u7b54\u6848\u5e8f\u5217\uff08\u7528bitset\u6bd4bool\u6570\u7ec4\u7701\u7a7a\u95f4\uff09\nbool cmp(int i,int j){//\u8bbf\u95ee\u987a\u5e8f\u7684\u6392\u5e8f\u65b9\u5f0f\n\tif(b[i]!=b[j])return b[i]<b[j];//\u4ee5\u9664\u4e86\u56e0\u65702\u540e\u7684\u6570\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u8ba9\u540c\u7c7b\u6570\u6328\u5728\u4e00\u8d77\n\tif(a[i]!=a[j])return a[i]<a[j];//\u4ee5\u539f\u6570\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u8ba9\u76f8\u7b49\u7684\u6570\u6328\u5728\u4e00\u8d77\n\treturn i<j;//\u4ee5\u4e0b\u6807\u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\n}\nint main(){\n\tint n/*\u6570\u7684\u4e2a\u6570*/,i,t=0/*\u7b54\u6848\u4e2a\u6570*/,nlas/*las\u7684\u5927\u5c0f*/,nnow/*now\u7684\u5927\u5c0f*/,nwill_be_las/*\n\twill_be_las\u7684\u5927\u5c0f*/;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",a+i);\n\t\tb[i]=a[i];while((b[i]&1)==0)b[i]>>=1;//\u9664\u5149\u56e0\u65702\n\t\tord[i]=i;//\u8bbf\u95ee\u987a\u5e8f\u4e00\u5f00\u59cb\u662f0~n-1\n\t}\n\tsort(ord,ord+n,cmp);//\u5bf9\u8bbf\u95ee\u987a\u5e8f\u6392\u5e8f\n\tfor(int l=0/*\u76ee\u524d\u7684\u7c7b\u7684\u533a\u95f4\u5de6\u7aef\u70b9*/,r=0/*\u53f3\u7aef\u70b9*/;l<n;l=r/*\u4e0b\u4e00\u7c7b*/){//\u533a\u95f4\u524d\u95ed\u540e\u5f00\n\t\twhile(r<n&&b[ord[r]]==b[ord[l]])r++;//\u7b97\u51fa\u53f3\u7aef\u70b9\n\t\tnlas=0;//\u6e05\u7a7alas\n\t\tll val=a[ord[l]];//\u6b64\u8f6e\u7684\u6240\u6709\u6570\u7684\u503c\n\t\tint at=l;//\u6b64\u7c7b\u7684\u8bbf\u95ee\u8fdb\u5ea6\n\t\twhile(nlas/*\u5373\u4f7fat\u5230\u4e86r\uff0c\u4e5f\u53ef\u80fd\u6709\u4e0a\u4e00\u8f6e\u7684\u4f59\u7559*/||at<r){\n\t\t\tnnow=nwill_be_las=0;//\u6e05\u7a7a\n\t\t\twhile(at<r&&a[ord[at]]==val)now[nnow++]=ord[at++];//\u6574\u7406\u6b64\u8f6e\u8981\u8bbf\u95ee\u7684\u4e0b\u6807\n\t\t\tint atlas=0,atnow=0;//las\u3001now\u7684\u8bbf\u95ee\u8fdb\u5ea6\n\t\t\twhile(atlas<nlas||atnow<nnow){//\u5f53\u8fd8\u6709\u4e1c\u897f\u53ef\u8bbf\u95ee\u65f6\u7ee7\u7eed\u8bbf\u95ee\n\t\t\t\tint x;\n\t\t\t\tif(atlas<nlas/*las\u8fd8\u6709*/&&(atnow==nnow||las[atlas]<now[atnow])/*now\u6ca1\u4e86\u6216las\u7684\u66f4\u5148\u8bbf\u95ee*/)x=las[atlas++];//\u4e8e\u662f\u8bbf\u95eelas\u7684\n\t\t\t\telse x=now[atnow++];//\u5426\u5219\u8bbf\u95eenow\u7684\n\t\t\t\tif(atlas==nlas&&atnow==nnow)/*\u5947\u6570\u6b21\u65f6\u8bbf\u95ee\u5b8c\uff0c\u5269\u4e0b\u4e86*/{isans.set(x);ans[x]=val;t++;/*\u52a0\u5165\u7b54\u6848\u5e8f\u5217*/break;/*\u9000\u51fa*/}\n\t\t\t\tif(atlas<nlas&&(atnow==nnow||las[atlas]<now[atnow]))x=las[atlas++];\n\t\t\t\telse x=now[atnow++];//\u540c\u4e0a\n\t\t\t\twill_be_las[nwill_be_las++]=x;//\u5408\u5e76\uff0c\u7ed9\u4e0b\u4e00\u8f6e\n\t\t\t}\n\t\t\tnlas=nwill_be_las;for(i=0;i<nwill_be_las;i++)las[i]=will_be_las[i];//\u5373\u5c06\u52a0\u5230\u4e0b\u4e00\u8f6e\u7684\u8be5\u52a0\u5230\u4e0b\u4e00\u8f6e\u4e86\n\t\t    val<<=1;//\u589e\u5927\u4e00\u500d\n\t\t}\n\t}\n\tprintf(\"%d\\n\",t);\n\tfor(i=0;i<n;i++)if(isans[i])printf(\"%lld \",ans[i]);\n\treturn 0;\n}\n```\n---\n$2$\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f$\\mathrm{O}(n\\log_2n)$\uff0c\u4e0d\u8fc7\u65b9\u6cd5$2$\u7684\u5e38\u6570\u5c0f\u4e00\u70b9\uff08\u56e0\u4e3a\u5b83\u7684\u4e2d\u95f4\u90e8\u5206\u662f$\\mathrm{O}(n)$\u7684\uff0c\u53ea\u662f\u9664\u5149\u56e0\u6570$2$\u548c\u6392\u5e8f\u8981\u4e86\u4e00\u70b9$\\mathrm{O}(n\\log_2n)$\u7684\u65f6\u95f4\u800c\u5df2\uff0c\u800c\u65b9\u6cd5$1$\u4ece\u5934\u5230\u5c3e\u4e00\u76f4\u591a\u6b21\u4f7f\u7528\u5806\uff0c~~\u5f88\u663e\u7136~~\u662f\u5f7b\u5f7b\u5e95\u5e95\u7684$\\mathrm{O}(n\\log_2n)$\uff09\u3002\u65b9\u6cd5$2$\u6700\u5927\u7684\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u53ea\u7528\u4e86$93\\mathrm{ms}$\uff0c\u7136\u800c\u65b9\u6cd5$1$~~\u4e5f\u53ea~~\u7528\u4e86$452\\mathrm{ms}$\u3002",
        "postTime": 1550139275,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 962D - Merge Equals"
    },
    {
        "content": "  \u7ed9\u4f60n\u4e2a\u6570\uff0c\u7136\u540e\u5982\u679c\u540c\u4e00\u4e2a\u6570\u51fa\u73b0\u8fc7\u4e24\u6b21\u6216\u4ee5\u4e0a\u7684\u8bdd\uff0c\u5c31\u628a\u8fd9\u4e24\u4e2a\u6570\u6c42\u548c\uff0c\u5e76\u4e14\u66ff\u6362\u6389\u8fd9\u4e24\u4e2a\u6570\u7684\u53f3\u8fb9\u90a3\u4e2a\u6570\u7684\u4f4d\u7f6e\uff0c\u5de6\u8fb9\u90a3\u4e2a\u6570\u5c31\u79fb\u9664\uff0c\u627e\u51fa\u6700\u7ec8\u5e8f\u5217\u7684\u53d8\u5316(\u6bcf\u6b21\u90fd\u8981\u9009\u6700\u5de6\u8fb9\u7684\u4e24\u4e2a)\n    \u6bd4\u5982[3,4,1,2,2,1,1]->[3,4,2,2,2,1]->[3,4,4,2,1]->[3,8,2,1]\n    \u6bd4\u5982[1,1,3,1,1]->[2,3,1,1]->[2,3,2]->[3,4]\n    \u660e\u663emap\u6876 \uff0c\u641e\u4e0d\u597d\u7206\u4e86\u6570\u7ec4\n    \u9519\u8bef\u6f14\u793a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,a[200001],i,j,place[50000001],x,tot;\nbool num[50000001];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]==0) continue;\n\t\tif(num[a[i]]==1){\n\t\t\tx=a[i];\n\t\t\ta[i]*=2;\n\t\t\ta[place[x]]=0;\n\t\t\tnum[x]=0;\n\t\t\t--i;\n\t\t}\n\t\telse{\n\t\t\tnum[a[i]]=1;\n\t\t\tplace[a[i]]=i;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]!=0) ++tot;\n\t}\n\tprintf(\"%d\\n\",tot);\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]!=0) printf(\"%d \",a[i]);\n\t}\n}\n\n```\n\u5982\u679cstl\u5c31\u723d\u4e86\n~~\u53cd\u89e3~~\n```cpp\n _#include<bits/stdc++.h>\nusing namespace std;\nlong long a[220000],n,len;\nstd::map<long long,int> p;\nint main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",a+i);\n\t\twhile(p[a[i]]){\n\t\t\ta[p[a[i]]]=0;\n\t\t\tp[a[i]]=0;\n\t\t\ta[i]*=2;\n\t\t\tlen++;\n\t\t}\n\t\tp[a[i]]=i;\n\t}\n\tprintf(\"%lld\\n\",n-len);\n\tfor(int i=1;i<=n;i++) if(a[i]) printf(\"%lld \",a[i]);\n}_ \n```",
        "postTime": 1532087146,
        "uid": 49447,
        "name": "\u6c38\u4e0d\u590d\u884c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF962D \u3010Merge Equals\u3011"
    },
    {
        "content": "\t\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5927\u5c0f\u4e3an\u7684\u6570\u7ec4\uff0c\u5982\u679c\u5728\u6570\u7ec4\u4e2d\u6709\u6570\u5b58\u5728\u8fc7\u4e24\u6b21\u6216\u4ee5\u4e0a\uff0c\u90a3\u4e48\uff0c\u53d6\u6570\u7ec4\u4e2d\u51fa\u73b0\u8fc7\u4e24\u6b21\u6216\u4ee5\u4e0a\u7684\u6570\u4e2d\u6700\u5c0f\u7684\u6570\uff0c\u6309\u7167\u4f4d\u7f6e\u987a\u5e8f\u9009\u51fa\u4e24\u4e2a\uff0c\u5c06\u4f4d\u7f6e\u76f8\u5bf9\u53e6\u4e00\u4e2a\u6570\u5de6\u7684\u6570\u5220\u9664\uff0c\u4f4d\u7f6e\u76f8\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u6570\u53f3\u7684\u6570\u4e582\uff0c\u76f4\u5230\u4e0d\u80fd\u518d\u8fdb\u884c\u64cd\u4f5c\u4f4d\u7f6e\u3002\n    \u6700\u540e\u9700\u8981\u8f93\u51fa\u64cd\u4f5c\u540e\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u548c\u6570\u7ec4\u3002\n    \n    \u8fd9\u9053\u9898\u7684\u9898\u610f\u6bd4\u8f83\u7ed5\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6839\u636e\u6837\u4f8b\u6765\u66f4\u76f4\u89c2\u7684\u9610\u8ff0\u4e00\u4e0b\u9898\u610f\u3002\n    \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6837\u4f8b7\\n 3 4 1 2 2 1 1\n    \u5728\u6570\u7ec4\u4e2d1\u548c2\u5747\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u8fc7\u4e24\u6b21\u6216\u4ee5\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u4f18\u5148\u53d6\u8fd9\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5c0f\u7684\u65701\u8fdb\u884c\u64cd\u4f5c\u3002\n    \u4e8e\u662f\u6211\u4eec\u6309\u71671\u6240\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u5148\u9009\u51fa\u5904\u4e8e\u4f4d\u7f6e3\u548c\u4f4d\u7f6e6\u7684\u6570\uff0c\u5c06\u4f4d\u7f6e3\u7684\u6570\u5220\u9664\uff0c\u5c06\u4f4d\u7f6e\u4e3a6\u7684\u6570\u4e582\uff0c\u6b64\u65f6\u7684\u6570\u7ec4\u53d8\u4e3a3 4 2 2 2 1\n    \u56e0\u4e3a\u6570\u7ec4\u4e2d2\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u56e0\u6b64\u7ee7\u7eed\u5bf92\u8fdb\u884c\u64cd\u4f5c\uff0c\u6309\u987a\u5e8f\u53d6\u51fa\u5904\u4e8e\u5982\u4eca\u4f4d\u7f6e3\u76842\u548c\u5904\u4e8e\u5982\u4eca\u4e3a\u4f4d\u7f6e4\u76842\uff0c\u5220\u9664\u524d\u4e00\u4e2a\uff0c\u540e\u4e00\u4e2a\u4e582\uff0c\u56e0\u6b64\u6b64\u65f6\u7684\u6570\u7ec4\u53d8\u4e3a3 4 4 2 1\u3002\n    \u56e0\u4e3a4\u4ecd\u7136\u6ee1\u8db3\u8c03\u8282\uff0c\u6545\u7ee7\u7eed\u5bf94\u8fdb\u884c\u64cd\u4f5c\uff0c\u5219\u6570\u7ec4\u53d8\u4e3a3 8 2 1\uff0c\u800c\u5728\u6b64\u65f6\uff0c\u6570\u7ec4\u4e2d\u4e0d\u518d\u5b58\u5728\u4e00\u4e2a\u51fa\u73b0\u8fc7\u4e24\u6b21\u6216\u4ee5\u4e0a\u7684\u6570\uff0c\u56e0\u6b64\u505c\u6b62\u64cd\u4f5c\uff0c\u8f93\u51fa\u6570\u7ec4\u5927\u5c0f4\u548c\u6570\u7ec4\u5143\u7d203 8 2 1\n    \n    \u89e3\u6cd5\uff1a\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u6bcf\u4e00\u6b21\u90fd\u9700\u8981\u5bf9\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684\u6570\u8fdb\u884c\u5206\u6790\uff0c\u9996\u5148\u60f3\u5230\u7684\u5e94\u8be5\u662fsort\u6392\u5e8f\uff0c\u4f46\u5728\u8fd9\u9898\u770b\u6765\u53ef\u80fd\u4f1a\u6bd4\u8f83\u7e41\u7410\u3002\u56e0\u6b64\u6211\u4eec\u60f3\u5230\u53ef\u4ee5\u901a\u8fc7**\u4f18\u5148\u961f\u5217**\u5bf9\u6570\u5217\u4e2d\u6700\u503c\u8fdb\u884c\u9ad8\u6548\u7684\u7ef4\u62a4\u3002\n    \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u7531\u6570\u503c\u548c\u4f4d\u7f6e\u7ec4\u6210\u7684\u7ed3\u6784\u4f53\uff0c\u8ba9\u4f18\u5148\u961f\u5217\u540c\u65f6\u7ef4\u62a4\u6570\u503c\u548c\u4f4d\u7f6e\u3002\uff08\u6ce8\u610f\u5f53\u6570\u503c\u76f8\u540c\u65f6\uff0c\u9700\u8981\u8fd4\u56de\u4f4d\u7f6e\u9760\u524d\u7684\u6570\uff0c\u5426\u5219\u5c06\u4f1a\u4f7f\u4f4d\u7f6e\u9760\u540e\u7684\u6570\u503c\u5220\u9664\uff09\n    \u4e0d\u65ad\u7684pop\u51fa\u961f\u9996\u7684\u4e24\u4e2a\u6570\uff08\u6b64\u5904\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u6ce8\u610f\u70b9\uff0c\u8be6\u89c1\u4ee3\u7801\uff09\u5047\u5982\u4e24\u4e2a\u6570\u76f8\u540c\uff0c\u5219\u820d\u5f03\u524d\u4e00\u4e2a\u6570\uff0c\u5e76\u5c06\u540e\u4e00\u4e2a\u6570\u7684\u6570\u503c*2\u5e76\u91cd\u65b0\u538b\u5165\u4f18\u5148\u961f\u5217\uff1b\u5047\u5982\u4e24\u4e2a\u6570\u4e0d\u540c\uff0c\u610f\u5473\u7740\u524d\u4e00\u4e2a\u6570\u7684\u503c\u5df2\u7ecf\u6700\u4f18\uff0c\u6545\u5b58\u5165\u7528\u6765\u8bb0\u5f55\u7b54\u6848\u7684ans\u6570\u7ec4\uff0c\u7136\u540e\u7ee7\u7eed\u5c06\u540e\u4e00\u4e2a\u6570\u91cd\u65b0\u538b\u5165\u961f\u5217\u3002\u4e0d\u65ad\u8fdb\u884c\u64cd\u4f5c\uff0c\u76f4\u5230\u65e0\u6cd5\u64cd\u4f5c\u3002\n    \u6700\u540e\u56e0\u4e3aans\u6570\u7ec4\u4e2d\u6240\u4fdd\u5b58\u7684\u6570\u662f\u4e71\u7684\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u518d\u6309\u7167\u4f4d\u7f6e\u8fdb\u884c\u6392\u5e8f\u5373\u53ef\u3002\n    \uff08\u6ce8\u610f\u53ef\u80fd\u4f1a\u7206int\uff0c\u5f97\u7528long long\uff09\uff01\uff01\uff01\n    \n```cpp\n#include <bits/stdc++.h>\n#define maxn 150005\nusing namespace std;\ntypedef long long ll;\nstruct number{//\u7b2c\u4e00\u4e2a\u7ed3\u6784\u4f53\u7528\u6765\u8f93\u5165\u7684\u6570\n    ll a;//\u7528\u6765\u8bb0\u5f55\u6570\u503c\n    int id;//\u7528\u6765\u8bb0\u5f55\u4f4d\u7f6e\n    bool operator<(const number &b) const{//\u4f18\u5148\u961f\u5217\u91cd\u8f7d\n        if(b.a==a){//\u5982\u679c\u6570\u503c\u76f8\u540c\uff0c\u5219\u8fd4\u4f4d\u7f6e\u9760\u524d\u7684\u6570\n            return b.id<id;\n        }\n        return b.a<a;//\u5426\u5219\u8fd4\u56de\u6570\u503c\u5c0f\u7684\n    }\n}q[maxn];\nstruct num{//\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4f53\u7528\u6765\u8bb0\u5f55\u7b54\u6848\n    ll ans;//\u7b54\u6848\u7684\u503c\n    int id;//\u7b54\u6848\u6240\u5728\u7684\u4f4d\u7f6e\n}p[maxn];\nbool cmp(num a,num b){//\u7528\u6765\u4f7f\u6700\u540e\u7684\u7b54\u6848\u6309\u4f4d\u7f6e\u5347\u5e8f\u6392\u5e8f\n    return a.id<b.id;\n}\nint main()\n{\n    int n;\n    cin>>n;\n    priority_queue<number> que;//\u5efa\u7acb\u4e00\u4e2a\u50a8\u5b58number\u7684\u4f18\u5148\u961f\u5217\n    for(int i=1;i<=n;i++){\n        cin>>q[i].a;//\u8f93\u5165\u6570\u503c\n        q[i].id=i;//\u8bb0\u5f55\u4f4d\u7f6e\n        que.push(q[i]);//\u538b\u5165\u4f18\u5148\u961f\u5217\n    }\n    int cnt=0;//\u7b54\u6848\u7684\u5927\u5c0f\n    while(que.size()>1){//\u56e0\u4e3a\u8981\u4fdd\u8bc1\u4e00\u76f4\u53ef\u4ee5\u53d6\u5230\u4e24\u4e2a\u6570\uff0c\u56e0\u6b64\u9700\u8981\u6ee1\u8db3\u961f\u5217\u5927\u5c0f\u5927\u4e8e1\uff0c\u6700\u540e\u518d\u628a\u6700\u540e\u7684\u6570pop\u51fa\u5373\u53ef\n        number tmpa=que.top();//\u53d6\u961f\u9996\u7b2c\u4e00\u4e2a\u6570\n        que.pop();\n        number tmpb=que.top();//\u53d6\u961f\u9996\u7b2c\u4e8c\u4e2a\u6570\n        que.pop();\n        if(tmpa.a!=tmpb.a){//\u5982\u679c\u4e24\u4e2a\u6570\u4e0d\u76f8\u540c\uff0c\u5219\u7edf\u8ba1a\u7684\u7b54\u6848\uff0c\u91cd\u65b0\u538b\u5165b\n            p[cnt].ans=tmpa.a;\n            p[cnt++].id=tmpa.id;\n            que.push(tmpb);\n            continue;\n        }\n        else if(tmpa.a==tmpb.a){//\u5982\u679c\u4e24\u4e2a\u6570\u76f8\u540c\uff0c\u5219\u4e0d\u5bf9a\u64cd\u4f5c\uff0c\u66f4\u65b0b\u7684\u503c\uff0c\u5e76\u5c06b\u91cd\u65b0\u538b\u5165\u4f18\u5148\u961f\u5217\n            tmpb.a=tmpb.a*2;\n            que.push(tmpb);\n        }\n    }\n    while(!que.empty()){//\u628a\u6700\u540e\u961f\u5217\u4e2d\u4e00\u4e2a\u6570\u518d\u8bb0\u5f55\u4e0b\u6765\n        number xx=que.top();\n        que.pop();\n        p[cnt].ans=xx.a;\n        p[cnt++].id=xx.id;\n    }\n    sort(p,p+cnt,cmp);//\u5c06\u7b54\u6848\u91cd\u65b0\u6839\u636e\u4f4d\u7f6e\u5347\u5e8f\u6392\u5e8f\n    cout<<cnt<<endl;//\u8f93\u51fa\u64cd\u4f5c\u540e\u6570\u7ec4\u7684\u5927\u5c0f\n    for(int i=0;i<cnt;i++){//\u8f93\u51fa\n        if(i==0) cout<<p[i].ans;\n        else cout<<\" \"<<p[i].ans;\n    }\n    return 0;\n}\n\n```\n    ",
        "postTime": 1523455768,
        "uid": 83908,
        "name": "ChenJr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF962D \u3010Merge Equals\u3011"
    },
    {
        "content": "# CF962D Merge Equals \u9898\u89e3\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u6b63\u6574\u6570\u5e8f\u5217 $a[1\\dots N]$ \uff0c\u6bcf\u6b21\u4f60\u9700\u8981\u627e\u5230\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570 $>=2$ \u7684\u6700\u5c0f\u503c $x$ \uff0c\u627e\u5230 $x$ \u7684 $2$ \u4e2a\u6700\u5c0f\u4e0b\u6807 $(i,j)$ \uff0c\u5220\u9664 $a_i$\uff0c\u5c06 $a_j$ \u6539\u4e3a $2x$ \u3002\u53cd\u590d\u8fdb\u884c\u5982\u6b64\u64cd\u4f5c\uff0c\u76f4\u5230\u4e0d\u80fd\u64cd\u4f5c\u4f4d\u7f6e\uff0c\u6c42\u5e8f\u5217\u6700\u7ec8\u7684\u5f62\u6001\u3002\n\n## \u89e3\u6790\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u8981\u627e\u7684\u6570\uff0c\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n```cpp\n(1) \u51fa\u73b0\u6b21\u6570>=2\n(2) \u5c3d\u53ef\u80fd\u7684\u5c0f\n```\n\n\u5bf9\u4e8e\u6761\u4ef62\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u7684\u60f3\u5230\u7528\u5c0f\u6839\u5806\u7ef4\u62a4\uff0c\u4e5f\u5c31\u662f\u4f18\u5148\u961f\u5217\u3002\u4f46\u662f\u9898\u76ee\u4e2d\u8fd8\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u6570\u7684\u4e0b\u6807\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230\u7ef4\u62a4\u70b9\u5bf9 $pair(x,pos)$ \uff0c\u5176\u4e2d $x$ \u8868\u793a\u503c\uff0c $pos$ \u8868\u793a $x$ \u5728\u539f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n\u6211\u4eec\u628a\u6837\u4f8b\u4e2d\u6570\u636e\u6392\u4e2a\u5e8f\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f\uff1a\n\n$[1,3],[1,6],[1,7],[2,4],[2,5],[3,1],[4,2]$\u3002\u5f88\u660e\u663e\uff0c\u6211\u4eec\u8981\u5408\u5e76\u5f00\u5934\u7684\u4e24\u4e2a\u6570\u3002\n\n\u4ece\u521a\u624d\u7684\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c**\u6211\u4eec\u6bcf\u6b21\u53d6\u6570\uff0c\u53ea\u9700\u8981\u5904\u7406\u5f00\u5934\u7684\u4e24\u4e2a\u5143\u7d20\u5373\u53ef**\u3002\u6211\u4eec\u5c31\u5bf9\u5f00\u5934\u7684\u4e24\u4e2a\u5143\u7d20\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\uff08\u8bbe\u5f00\u5934\u7684\u4e24\u4e2a\u5143\u7d20\u5206\u522b\u4e3a $[x_1,p_1]$ \u548c $[x_2,p_2]$ \uff0c\u4e14 $x_1\\leqslant x_2$\uff09\n\n\uff081\uff09 $x_1=x_2$\n\n\u8fd9\u79cd\u60c5\u51b5\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u628a $[2x_1,p_2]$ \u653e\u5165\u961f\u5217\u4e2d\u5373\u53ef\u3002\n\n\uff082\uff09$x_1\\ne x_2$\n\n\u7531\u4e8e $x_1\\leqslant x_2$ \uff0c\u4e14 $x_1\\ne x_2$ \uff0c\u53ef\u5f97 $x_1<x_2$ \u3002\u53c8\u56e0\u4e3a $x_1$ \u548c $x_2$ \u662f\u4f18\u5148\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u6570\uff0c\u6240\u4ee5 $x_1$ **\u4e0d\u4f1a\u627e\u5230\u8ddf\u4ed6\u76f8\u7b49\u7684\u6570**\uff0c\u6240\u4ee5\u76f4\u63a5\u628a $x_1$ \u653e\u5165\u7b54\u6848\u5e8f\u5217\u4e2d\u5373\u53ef\uff0c $x_2$ \u5219\u8981\u91cd\u65b0\u653e\u56de\u961f\u5217\u3002\n\n\u6700\u540e\uff0c\u5728\u7b54\u6848\u5e8f\u5217\u4e2d\u8f93\u51fa\u5373\u53ef\u3002\u8fd9\u91cc\u53ef\u80fd\u4f1a\u78b0\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u56e0\u4e3a\u4e4b\u524d\u7684\u4f18\u5148\u961f\u5217\u662f\u6839\u636e**\u5143\u7d20\u503c**\u8fdb\u884c\u6392\u5e8f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c**\u6570\u7ec4\u4e0b\u6807**\u53ef\u80fd\u662f\u65e0\u5e8f\u7684\u3002\u4f46\u662f\u8f93\u51fa\u7b54\u6848\u5e8f\u5217\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u6c42\u6570\u7ec4\u4e0b\u6807\u662f**\u6709\u5e8f**\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u65b0\u5f00\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u5e76\u8ba9**\u4e0b\u8868\u4f4d\u7f6e**\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u5373\u53ef\u3002\n\n## \u7b97\u6cd5\u6d41\u7a0b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/trflxnys.png)\n\n\uff08\u672c\u6765\u662f\u7528 $mermaid$ \u6d41\u7a0b\u56fe\u7684\uff0c\u7ed3\u679c\u6d1b\u8c37\u8bc6\u522b\u4e0d\u4e86\uff0c\u53ea\u80fd\u4e0a\u4f20\u56fe\u7247\uff09\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read(){\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\tfor(; ch < '0' || ch > '9'; w *= (ch == '-') ? -1 : 1, ch = getchar());\n\tfor(; ch >= '0' && ch <= '9'; s = 10 * s + ch - '0', ch = getchar());\n\treturn s * w;\n}\nint n;\npriority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int> > > pq;\npriority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int> > > ans;\nsigned main(){\n\tn = read();\n\tfor(int i = 0; i < n; i++){\n\t\tint tmp = read();\n\t\tpq.push(make_pair(tmp, i));\n\t}\n\twhile(pq.size() > 1){\n\t\tpair<int, int> a, b;\n\t\ta = pq.top(), pq.pop();\n\t\tb = pq.top(), pq.pop();\n//\t\tprintf(\"(%d,%d) (%d,%d)\\n\", a.first, a.second, b.first, b.second);\n\t\tif(a.first == b.first){\n//\t\t\tprintf(\"push(%d, %d)\\n\", a.first * 2, b.second);\n\t\t\tpq.push(make_pair(a.first * 2, b.second));\n\t\t} else {\n\t\t\tpq.push(b);\n\t\t\tans.push(make_pair(a.second, a.first));\n\t\t}\n\t}\n\tans.push(make_pair(pq.top().second, pq.top().first));\n\tcout << ans.size() << endl;\n\twhile(!ans.empty()){\n\t\tpair<int, int> now = ans.top();\n\t\tans.pop();\n\t\tcout << now.second << \" \";\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1654134792,
        "uid": 352600,
        "name": "hexu2010",
        "ccfLevel": 5,
        "title": "CF962D Merge Equals \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u6b63\u6574\u6570\u5e8f\u5217 $a_1,a_2...a_N$\uff0c\u6bcf\u6b21\u4f60\u9700\u8981\u627e\u5230\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e 2 \u7684\u6700\u5c0f\u503c $x$\uff0c\u627e\u5230 $x$ \u7684\u4e24\u4e2a\u6700\u5c0f\u4e0b\u6807 ${i,j}$\uff0c\u5220\u9664 $a_i$ \u5e76\u5c06 $a_j$ \u6539\u4e3a $2x$\u3002\n\n\u53cd\u590d\u8fdb\u884c\u5982\u6b64\u64cd\u4f5c\uff0c\u6c42\u5e8f\u5217\u6700\u7ec8\u7684\u5f62\u6001\u3002\n\n## \u89e3\u6cd5\n\n**\u6a21\u62df\uff01**\n\n\u6211\u4eec\u53ef\u4ee5\u7528 $set$ \u6765\u7ef4\u62a4\u5b58\u5728\u7684\u4e0b\u6807\uff0c\u7528\u4f18\u5148\u961f\u5217 $pq$ \u6765\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u521d\u59cb\u5316 $set={1,2,\u2026,n},pq={(a_1,1),(a_2,2),\u2026,(a_n,n)}$\u3002\n\n\u76f4\u63a5\u6a21\u62df\u64cd\u4f5c\u8fc7\u7a0b\uff1a\u6bcf\u6b21\u62ff $pq$ \u4e2d\u7684\u524d\u4e24\u4e2a $pair$\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a $pair$ \u7684\u7b2c\u4e00\u4e2a\u503c\u76f8\u540c\uff0c\u90a3\u4e48\u5408\u5e76\uff0c\u628a\u5408\u5e76\u7684\u7ed3\u679c\u653e\u56de $pq$\uff0c\u6ce8\u610f\u653e\u56de\u65f6 $pair$ \u7684\u7b2c\u4e8c\u4e2a\u503c\u4e3a\u62ff\u51fa\u7684\u7b2c\u4e8c\u4e2a $pair$ \u7684\u7b2c\u4e8c\u4e2a\u503c\u3002\u5e76\u5c06\u7b2c\u4e00\u4e2a $pair$ \u7684\u7b2c\u4e8c\u4e2a\u503c\u4ece $set$ \u91cc\u5220\u9664\u3002\u5982\u679c\u8fd9\u4e24\u4e2a $pair$ \u7684\u7b2c\u4e00\u4e2a\u503c\u4e0d\u540c\uff0c\u90a3\u4e48\u8bf4\u660e\u7b2c\u4e00\u4e2a $pair$ \u4e2d\u7684\u7b2c\u4e00\u4e2a\u503c\u5e94\u5f53\u662f\u4e00\u4e2a\u7ed3\u679c\uff0c\u5e76\u6309\u7167 $set$ \u4e2d\u7684\u987a\u5e8f\u5b58\u50a8\u5728 $ans$ \u6570\u7ec4\u3002\u5e76\u628a\u53d6\u51fa\u7684\u7b2c\u4e8c\u4e2a $pair$ \u653e\u56de\u53bb\u3002\u6700\u540e\u7ed3\u675f\u65f6\u6ce8\u610f\u53ea\u5269\u4e00\u4e2a $pair$ \u7684\u60c5\u51b5\uff0c\u7279\u5224\u4e00\u4e0b\u7136\u540e\u9000\u51fa\u3002\n\n## \u4ee3\u7801\n\n\u4e0b\u9762\u653e\u65e0\u6ce8\u91ca\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pll pair<long long,long long>\nint n;\nlong long a[150005],ans[150005],inf=2e18;\nset<int>s;\npriority_queue<pll,vector<pll>,greater<pll> >pq;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cin>>n;\n    for(int i=1;i<=n;i++){\n\tcin>>a[i];\n\ts.insert(i);\n\tpq.push(make_pair(a[i],i));\n    }\n    for(int i=1;i<=n;i++)ans[i]=inf;\n    while(!pq.empty()){\n       pll a=pq.top();\n       pq.pop();\n       if(pq.empty()){\n           ans[a.second]=a.first;\n           break;\n       }\n       pll b=pq.top();\n       pq.pop();\n       if(a.first!=b.first){\n           pq.push(b);\n           ans[a.second]=a.first;\n           continue;\n       }\n       s.erase(a.second);\n       pq.push(make_pair(b.first*2,b.second));\n   }\n   cout<<s.size()<<endl;\n   for(int i=1;i<=n;i++){\n       if(ans[i]!=inf)cout<<ans[i]<<\" \";\n   }\n   cout<<endl;\n   return 0;\n}\n```\n",
        "postTime": 1648351427,
        "uid": 305424,
        "name": "yuheng_wang080904",
        "ccfLevel": 0,
        "title": "CF962D"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF962D)\n## \u9898\u76ee\u5206\u6790\n\n\u4f18\u5148\u961f\u5217\u57fa\u7840\u9898\u3002\n\n\u6ce8\u610f\u5230 `\u6700\u5c0f\u503c`\uff0c`\u6700\u5c0f\u4e0b\u6807`\uff0c\u5bf9\u4e24\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8003\u8651 `pair` \u5b9e\u73b0\u7684\u4f18\u5148\u961f\u5217\u3002\n\n\u5f00\u4e24\u4e2a\u4f18\u5148\u961f\u5217\uff0c`que` \u7ef4\u62a4\u4ecd\u6709\u53ef\u80fd\u88ab\u4fee\u6539\u7684\u5143\u7d20\uff0c`ans` \u7ef4\u62a4\u5df2\u7ecf\u4e0d\u53ef\u80fd\u4fee\u6539\u7684\u5143\u7d20\u3002\n\n\u521d\u59cb\u65f6\u5c06\u6240\u6709\u5143\u7d20\u5b58\u8fdb `que` \u5185\uff0c\u4ee5\u6570\u503c\u672c\u8eab\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n\u5f53\u4e00\u4e2a\u5143\u7d20\u5728\u539f\u5e8f\u5217\u4e2d\u6ca1\u6709\u5176\u5b83\u4e0e\u4e4b\u76f8\u540c\u7684\u5143\u7d20\u65f6\uff0c\u5b83\u4e0d\u53ef\u80fd\u88ab\u5220\u9664\u6216\u4fee\u6539\uff0c\u76f4\u63a5\u5f39\u51fa\u5e76\u5b58\u8fdb `ans`\u3002\n\n\u5426\u5219\u6309\u9898\u76ee\u8981\u6c42\u6a21\u62df\uff0c\u5f39\u51fa\u6700\u5c0f\u503c $x$ \u7684\u4e24\u4e2a\u6700\u5c0f\u4e0b\u6807\u5143\u7d20 $a_i,a_j$, \u5c06 $a_j\\times2$ \u540e\u91cd\u65b0\u5b58\u5165 `que`\u3002\n\n\u5f53 `que` \u5927\u5c0f\u4e0d\u518d\u6539\u53d8\u65f6\uff0c\u7ec8\u6b62\u64cd\u4f5c\uff0c\u5e76\u5c06 `que` \u4e2d\u6240\u6709\u5143\u7d20\u5b58\u5165 `ans`\uff0c\u5373\u4e3a\u6700\u7ec8\u5e8f\u5217\u3002\n\n\u7531\u4e8e\u9700\u8981\u6309\u987a\u5e8f\u8f93\u51fa\u6700\u7ec8\u5e8f\u5217\uff0c\u6240\u4ee5 `ans` \u4ee5\u4e0b\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n\u6ce8\u610f\u5f00 `long long`\u3002\n\n## code\n```cpp\n#include <bits/stdc++.h>\n#define rei register ll\n#define N 200010\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> inline void read(T &x)\n{\n\tx = 0; T f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -f; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\n\tx *= f;\n}\n\nll n, lst, tot;\npair<ll, ll> que[N];\npriority_queue<pair<ll, ll> > q, Q;\n\nint main()\n{\n\tread(n);\n\tfor (rei i = 1; i <= n; i++)\n\t{\n\t\tll x; read(x);\n\t\tq.push(make_pair(-x, -i));\n\t}\n\twhile (q.size())\n\t{\n\t\tif (lst == q.size()) break; lst = q.size();\n\t\tll x = q.top().first, y = q.top().second; q.pop();\n\t\tif (!tot || que[tot].first != x)\n\t\t{\n\t\t\tif (tot) Q.push(make_pair(que[tot].second, que[tot].first));\n\t\t\ttot = 1;\n\t\t\tque[tot] = make_pair(x, y);\n\t\t}\n\t\telse if (tot && que[tot].first == x)\n\t\t{\n\t\t\tq.push(make_pair(x * 2, y)); lst = 0;\n\t\t\ttot = 0;\n\t\t}\n\t}\n\tif (tot) Q.push(make_pair(que[tot].second, que[tot].first));\n\twhile (q.size()) Q.push(make_pair(q.top().second, q.top().first)), q.pop();\n\tprintf(\"%lld\\n\", Q.size());\n\twhile (Q.size()) printf(\"%lld \", -Q.top().second), Q.pop();\n\treturn 0;\n}\n```\n",
        "postTime": 1647003151,
        "uid": 200930,
        "name": "\u30d9\u72d0\u4ed9\u59d0\u59d0\u3054",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF962D \u3010Merge Equals\u3011"
    },
    {
        "content": "\u5728\u6d1b\u8c37\u4e0a\u63d0\u4ea4\u4e00\u76f4\u90fd\u662f waiting \u7684\u72b6\u6001\uff0c\u7ec8\u4e8e\u5728 Codeforces \u4e0a AC \u4e86\u3002\n\n\u770b\u5230\u4e0b\u9762\u7684\u9898\u89e3\u90fd\u597d\u50cf\u6ca1\u6709\u8bb2\u5f97\u592a\u6e05\u695a\uff0c\u5e0c\u671b\u6211\u7684\u8fd9\u7bc7\u9898\u89e3\u80fd\u591f\u8ba9\u66f4\u591a\u7684\u4eba\u505a\u5bf9\u8fd9\u9898\u3002\n\n## \u6570\u636e\u7ed3\u6784\n\u4f18\u5148\u961f\u5217\uff0cmap\u3002\n\n## \u9898\u76ee\u5927\u610f\n\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u96be\u8bfb\u7684\uff0c\u6240\u4ee5\u5199\u4e00\u4e0b\u9898\u76ee\u5927\u610f\u3002\n\n\u6709\u4e00\u4e2a\u6570\u5217\u3002\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u53d6\u51fa\u4e24\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u9700\u8981\u4fdd\u8bc1\u8fd9\u4e24\u4e2a\u6570\u662f\u6570\u5217\u4e2d\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4e0d\u5c11\u4e8e\u4e24\u6b21\u7684\u6570\u4e2d\uff0c\u6570\u503c\u6700\u5c0f\u7684\u3002\u5982\u679c\u6570\u5217\u4e2d\u6709\u591a\u4e2a\u8fd9\u4e2a\u6570\uff0c\u6211\u4eec\u9700\u8981\u62ff\u53d6\u8fd9\u4e9b\u6570\u4e2d\u6700\u9760\u5de6\u7684\u4e24\u4e2a\uff0c\u5e76\u628a\u4ed6\u4eec\u7684\u548c\u653e\u5728\u8fd9\u4e24\u4e2a\u6570\u4e2d\u4f4d\u7f6e\u9760\u53f3\u7684\u6570\u7684\u90a3\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u5e76\u628a\u53e6\u5916\u7684\u4e00\u4e2a\u6570\u5220\u9664\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c31\u4e0d\u628a\u5b83\u5220\u9664\u4e86\uff0c\u76f4\u63a5\u628a\u8fd9\u4e00\u4f4d\u8d4b\u4e3a $0$ \u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u6570\u5217\u4e2d\u6ca1\u6709\u5c0f\u4e8e\u7b49\u4e8e $0$ \u7684\u6570\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e86\u591a\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6\u4ed6\u5176\u4e2d\u7684\u4e24\u4e2a\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u5269\u4e0b\u6765\u7684\u8fd8\u53ef\u4ee5\u53d6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u53d6\u5b83\u3002\u6240\u4ee5\u76f8\u5f53\u4e8e\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6570\u5217\u4e2d\u6700\u5c0f\u7684\u51fa\u73b0\u4e86\u591a\u6b21\u7684\u6570\uff0c\u4ed6\u7684\u4e2a\u6570\u4e3a\u5947\u6570\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6570\u4ece\u5de6\u5230\u53f3\u7b2c\u4e8c\u6b21\u3001\u7b2c\u56db\u6b21\u3001\u7b2c\u516d\u6b21\u2026\u2026\u51fa\u73b0\u7684\u6570\u7ed9\u53d8\u6210\u8fd9\u4e2a\u6570\u7684\u4e24\u500d\uff0c\u628a\u4ece\u5de6\u5230\u53f3\u7b2c\u4e00\u6b21\u3001\u7b2c\u4e09\u6b21\u2026\u2026\u51fa\u73b0\u7684\u6570\u8d4b\u6210 $0$ \uff0c\u4f46\u662f\u6700\u540e\u51fa\u73b0\u7684\u90a3\u4e2a\u6570\u662f\u4e0d\u80fd\u8d4b\u6210 $0$ \u7684\uff0c\u56e0\u4e3a\u90a3\u4e2a\u65f6\u5019\u53ea\u5269\u4ed6\u4e00\u4e2a\u4e86\uff0c\u6211\u4eec\u4e0d\u80fd\u53d6\u4ed6\u3002\u5982\u679c\u6211\u8bf4\u7684\u4e0d\u597d\u61c2\uff0c\u8bf7\u53c2\u770b\u4e0b\u56fe\u3002\n\n![image.png](https://i.loli.net/2020/05/30/9EfhbomS85GFzXp.png)\n\n\u4e8e\u662f\uff0c\u51fa\u73b0\u6b21\u6570\u4e3a\u5076\u6570\u6b21\u7684\u4e5f\u662f\u5dee\u4e0d\u591a\u7684\uff08\u5176\u5b9e\u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u662f\u4e0d\u9700\u8981\u5224\u65ad\u5947\u5076\u6027\u7684\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff09\u3002\n```\nwhile(!q.empty()){//\u4f18\u5148\u961f\u5217q\u5b58\u50a8\u6570\u5217\u4e2d\u51fa\u73b0\u7684\u6570\u7684\u79cd\u7c7b\u4e14\u4e0d\u91cd\u590d\uff0c\u65f6\u65f6\u66f4\u65b0\uff0c\u6bcf\u6b21\u53d6\u51fa\u6765\u7684\u90fd\u662f\u6700\u5c0f\u7684\u6570\u7684\u503c\uff0c\u4f18\u5148\u961f\u5217book[temp]\u662f\u4ece\u5c0f\u5230\u5927\u5b58\u50a8\u6570temp\u5728\u6570\u5217\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0b\u6807\n\tll temp=q.top();\n\twhile(book[temp].size()>1){//\u5f53\u6ee1\u8db3\u8981\u6c42\u8fd8\u53ef\u4ee5\u53d6\u7684\u65f6\u5019\n\t\ta[book[temp].top()]=0;//\u9760\u5de6\u7684\u4e66\u8981\u5220\u9664\n\t\tbook[temp].pop();\n\t\tif(book[temp*2].empty()) q.push(temp*2);//\u5982\u679c\u6211\u4eec2x\u662f\u6570\u5217\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\uff0c\u90a3\u4e48\u6570\u5217\u4e2d\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2a\u6570\u7684\u79cd\u7c7b\n\t\tbook[temp*2].push(book[temp].top());//\u81ea\u5df1\u7406\u89e3\u4e00\u4e0b\uff0c2x\u7684\u4f4d\u7f6e\u5c31\u662f\u9760\u53f3\u7684\u4e00\u4e2a\u6570\u7684\u4f4d\u7f6e\n\t\ta[book[temp].top()]=temp*2;//\u6570\u5217\u6539\u53d8\u4e86\n\t\tbook[temp].pop();\n\t}\n\tq.pop();//\u4e0b\u4e00\u6b21\u6211\u4eec\u518d\u4e0d\u4f1a\u62ff\u8fd9\u4e2a\u6570\u4e86\uff0c\u56e0\u4e3a\u73b0\u5728\u8fd9\u4e2a\u6570\u53ea\u5728\u6570\u5217\u4e2d\u51fa\u73b00\u62161\u6b21\u4e86\n}\n```\n\u4ee5\u4e0a\u662f\u6838\u5fc3\u4ee3\u7801\uff0c\u6ce8\u91ca\u8be6\u5c3d\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u3002\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <vector>\n#include <map>\nusing namespace std;\ntypedef long long ll;\nmap <ll,priority_queue <ll,vector <ll>,greater <ll> > > book;\npriority_queue <ll,vector <ll>,greater <ll> > q;\nll a[150010];\nint main()\n{\n\tint n,cnt=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t\tif(book[a[i]].empty()) q.push(a[i]);\n\t\tbook[a[i]].push(i);\n\t}\n\twhile(!q.empty()){\n\t\tll temp=q.top();\n\t\twhile(book[temp].size()>1){\n\t\t\ta[book[temp].top()]=0;\n\t\t\tbook[temp].pop();\n\t\t\tif(book[temp*2].empty()) q.push(temp*2);\n\t\t\tbook[temp*2].push(book[temp].top());\n\t\t\ta[book[temp].top()]=temp*2;\n\t\t\tbook[temp].pop();\n\t\t}\n\t\tq.pop();\n\t}\n\tfor(int i=1;i<=n;i++) if(a[i]!=0) cnt++;\n\tprintf(\"%d\\n\",cnt);\n\tfor(int i=1;i<=n;i++) if(a[i]!=0) printf(\"%lld \",a[i]);\n}\n```\n\u5b8c\u7ed3\u3002",
        "postTime": 1590807498,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF962D \u3010Merge Equals\u3011"
    }
]