[
    {
        "content": "### Problem\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u6709\u4e00\u4e9b\u70b9\u662f\u8b66\u5bdf\u5c40\uff0c\u4fdd\u8bc1\u4efb\u610f\u4e00\u4e2a\u70b9\u5230\u5176\u6700\u8fd1\u7684\u8b66\u5bdf\u5c40\u7684\u8ddd\u79bb\u5c0f\u4e8e $d$\uff0c\u6c42\u6700\u591a\u80fd\u5220\u6389\u51e0\u6761\u8fb9\u4f7f\u8fd9\u4e2a\u6761\u4ef6\u4f9d\u7136\u6210\u7acb\uff08\u8b66\u5bdf\u5c40\u53ef\u80fd\u91cd\u590d\uff09\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a $n \\leq 3 \\times 10^5,d \\leq n-1$\u3002\n\n### Solution\n\n\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u8d2a\u5fc3\uff08~~\u6240\u4ee5\u4e3a\u4ec0\u4e48\u4f1a\u5728 DP \u4e13\u680f\u91cc~~\uff09\uff0c\u56e0\u4e3a\u4fdd\u8bc1\u6700\u5f00\u59cb\u7684\u65f6\u5019\u6ee1\u8db3\uff0c\u6240\u4ee5 $d$ \u5176\u5b9e\u5c31\u6ca1\u4ec0\u4e48\u7528\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u8b66\u5bdf\u5c40\uff08\u53bb\u91cd\u4e4b\u540e\uff09\u4e22\u5230\u961f\u5217\u91cc\u9762\u8fdb\u884c\u5e7f\u641c\uff0c\u7136\u540e\u7ed9\u6bcf\u4e2a\u70b9\u67d3\u8272\u3002\u7531\u4e8e\u5e7f\u641c\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u53d1\u73b0\u7ed9\u6bcf\u4e00\u4e2a\u8282\u70b9\u67d3\u8272\u7684\u8b66\u5bdf\u5c40\u4e00\u5b9a\u662f\u79bb\u8fd9\u4e2a\u8282\u70b9\u6700\u8fd1\u7684\u8b66\u5bdf\u5c40\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u4e24\u4e2a\u67d3\u8272\u4e0d\u540c\u7684\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u65ad\u6389\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u4ecd\u4fdd\u8bc1\u4e86\u4e24\u7aef\u8282\u70b9\u4ecd\u6709\u4e00\u4e2a\u8b66\u5bdf\u5c40\u76f8\u8fde\uff0c\u4e5f\u5c31\u6ee1\u8db3\u6761\u4ef6\u3002\n\n### Code\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+7232;\nint n,m,d,dis[N],ans;\nint x,y;\nstruct len{\n    int u,v;\n}t[N];\nstruct hl{\n    int v,nxt;\n}e[N<<1];\nint cnt,h[N];\nvoid add(int u,int v)\n{\n    e[++cnt].v=v,e[cnt].nxt=h[u],h[u]=cnt;\n}\nstruct llt{\n    int x,op;//op\u4ee3\u8868\u7ed9\u5b83\u67d3\u8272\u7684\u8b66\u5bdf\u5c40\n}tmp;\nqueue<llt> q;\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&d);\n    for(int i=1;i<=m;++i) \n    {\n        scanf(\"%d\",&x);\n        if(!dis[x]) dis[x]=x,q.push((llt){x,x});//\u8bb0\u5f97\u53bb\u91cd\n    }\n    for(int i=1;i<n;++i)\n    {\n        scanf(\"%d%d\",&t[i].u,&t[i].v);\n        add(t[i].u,t[i].v),add(t[i].v,t[i].u);\n    }\n    while(!q.empty())//\u5e7f\u641c\n    {\n        tmp=q.front(),q.pop();\n        for(int i=h[tmp.x],v;i;i=e[i].nxt)\n        {\n            if(dis[(v=e[i].v)]) continue;\n            dis[v]=tmp.op;\n            q.push((llt){v,tmp.op});\n        }\n    }\n    for(int i=1;i<n;++i)\n    if(dis[t[i].u]!=dis[t[i].v]) ++ans;//\u7edf\u8ba1\u7b54\u6848\n    printf(\"%d\\n\",ans);\n    for(int i=1;i<n;++i)\n    if(dis[t[i].u]!=dis[t[i].v]) printf(\"%d \",i);\n}\n```\n",
        "postTime": 1668330136,
        "uid": 478885,
        "name": "lenlen",
        "ccfLevel": 6,
        "title": "CF796D Police Stations \u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u633a\u5de7\u5999\u7684\u6811\u4e0a\u95ee\u9898\u3002\u6811\u4e0a\u6709\u4e00\u4e9b\u8b66\u5bdf\u5c40\uff0c\u6c42\u6240\u6709\u70b9\u5230\u8b66\u5bdf\u5c40\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $d$ \u7684\u60c5\u51b5\u4e0b\u6700\u591a\u80fd\u5220\u591a\u5c11\u6761\u8fb9\u3002\u6b64\u9898\u5176\u5b9e\u7528\u4e0d\u5230 $d$ \u8fd9\u4e2a\u6761\u4ef6\uff0c\u56e0\u4e3a\u9898\u76ee\u5df2\u7ecf\u4fdd\u8bc1\u539f\u59cb\u6811\u662f\u6ee1\u8db3\u8981\u6c42\u7684\u3002\u90a3\u4e48\u8981\u6c42\u8ddd\u79bb\u6700\u77ed\uff0c\u8fd8\u662f\u5728\u6811\u4e0a\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5e7f\u641c\uff0c\u5982\u679c\u628a\u6240\u6709\u8b66\u5bdf\u5c40\u653e\u5230\u4e00\u4e2a\u961f\u5217\u91cc\u5f00\u59cb\u5e7f\u641c\uff0c\u6839\u636e\u5e7f\u641c\u7684\u6027\u8d28\uff0c\u6bcf\u6b21\u88ab\u6807\u8bb0\u5230\u7684\u70b9\u4e00\u5b9a\u662f\u8fd9\u4e2a\u70b9\u79bb\u6240\u6709\u8b66\u5bdf\u5c40\u6700\u8fd1\u7684\u8ddd\u79bb\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u67d3\u8272\uff0c\u6bcf\u4e2a\u8b66\u5bdf\u5c40\u90fd\u8d4b\u4e88\u4e00\u79cd\u989c\u8272\u3002\u5982\u4f55\u5224\u65ad\u54ea\u4e9b\u8fb9\u53ef\u4ee5\u5220\u5462\uff1f\u8fd9\u6761\u8fb9\u4e24\u7aef\u70b9\u989c\u8272\u4e0d\u540c\u5c31\u53ef\u4ee5\u4e86\u3002\u56e0\u4e3a\u989c\u8272\u4e0d\u540c\u4fdd\u8bc1\u4e86\u8fd9\u4e2a\u8fb9\u88ab\u5220\u53bb\u540e\uff0c\u7aef\u70b9\u4f9d\u7136\u53ef\u4ee5\u5230\u8fbe\u5176\u4e2d\u4e00\u4e2a\u8b66\u5bdf\u5c40\uff0c\u5e76\u4e14\u7531\u4e8e\u5e7f\u641c\u7684\u6027\u8d28\uff0c\u8fd9\u4e2a\u8b66\u5bdf\u5c40\u4e00\u5b9a\u662f\u79bb\u4ed6\u6700\u8fd1\u7684\uff0c\u800c\u9898\u76ee\u53c8\u4fdd\u8bc1\u4e86\u79bb\u4ed6\u6700\u8fd1\u7684\u8b66\u5bdf\u5c40\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u8d85\u8fc7 $d$ \uff0c\u6240\u4ee5\u538b\u6839\u4e0d\u9700\u8981\u8003\u8651 $d$ \u3002\n\n\n```\n//bfs\u67d3\u8272 \n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,d,idx,col;\nint vis[1000010],head[1000010],u[1000010],v[1000010];\nstruct node{\n\tint nxt,to;\n}edge[1000010];\nvector<int> g;\nvoid add(int u,int v)\n{\n\tedge[++idx].nxt=head[u];\n\tedge[idx].to=v;\n\thead[u]=idx;\n}\nqueue< pair<int,int> > q;\nvoid bfs()\n{\n\twhile(q.size())\n\t{\n\t\tint x=q.front().first;\n\t\tint y=q.front().second;\n\t\tq.pop();\n\t\tfor(int i=head[x];i;i=edge[i].nxt)\n\t\t{\n\t\t\tint v=edge[i].to;\n\t\t\tif(!vis[v])\n\t\t\t{\n\t\t\t\tvis[v]=y;\n\t\t\t\tq.push(make_pair(v,y));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>k>>d;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(vis[x])\n\t\tcontinue;\n\t\tvis[x]=++col;\n\t\tq.push(make_pair(x,col));\n\t}\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tscanf(\"%d%d\",&u[i],&v[i]);\n\t\tadd(u[i],v[i]);\n\t\tadd(v[i],u[i]);\n\t}\n\tbfs();\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tif(vis[u[i]]!=vis[v[i]])\n\t\tg.push_back(i);\n\t}\n\tcout<<g.size()<<endl;\n\tfor(auto i : g)\n\t{\n\t\tprintf(\"%d \",i);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610435542,
        "uid": 250699,
        "name": "Herkaii",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF796D \u3010Police Stations\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u8d2a\u5fc3\u601d\u60f3\uff0c\u628a\u6240\u6709\u6709\u8b66\u5bdf\u5c40\u7684\u70b9\u6254\u8fdb\u51fa\u59cb\u961f\u5217\u91cc\u5e7f\u641c\uff0c\u5e76\u628a\u4ece\u4e0d\u540c\u7684\u8b66\u5bdf\u5c40\u641c\u7d22\u5230\u7684\u70b9\u67d3\u4e0d\u540c\u7684\u8272  \n\u679a\u4e3e\u4efb\u610f\u4e24\u6761\u8fb9\uff0c\u5982\u679c\u5b83\u7684\u4e24\u7aef\u989c\u8272\u4e0d\u540c\uff0c\u628a\u5b83\u52a0\u5165ans\u6570\u7ec4  \n\u5b8c\u7ed3\u6492\u82b1\n\n\u8d34\u4e2a\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#define max(a,b) ((a>b)?a:b)\n\nusing namespace std;\n\ninline int read(){\n    int x = 0; int zf = 1; char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\n\nstruct Edge{\n    int to, next;\n} edges[600005];\nint head[300005], edge_num = 0;\n\nvoid addEdge(int from, int to){\n    edges[++edge_num] = (Edge){to, head[from]};\n    head[from] = edge_num;\n}\n\nstruct Node{\n    int id;\n    int clr;\n};\n\nqueue<Node> que;\nint vis[300005];\n\nint ans[300005], ans_num = 0;\n\nvoid BFS(){\n    Node u;\n    while (!que.empty()){\n        u = que.front(), que.pop();\n        for (int c_e = head[u.id]; c_e; c_e = edges[c_e].next){\n            int v = edges[c_e].to;\n            if (!vis[v]){\n                vis[v] = u.clr;\n                que.push((Node){v, u.clr});\n            }\n        }\n    }\n}\n\nint u[300005], v[300005];\n\nint main(){\n    int n = read(), k = read(), d = read();\n    int clr = 0, kk = 0;\n    for (int i = 1; i <= k; ++i){\n        int pol = read();\n        if (!vis[pol]){\n            ++kk;\n            que.push((Node){pol, ++clr});\n            vis[pol] = clr;\n        }\n    }\n    for (int i = 1; i < n; ++i){\n        u[i] = read(), v[i] = read();\n        addEdge(u[i], v[i]), addEdge(v[i], u[i]);\n    }\n    BFS();\n    for (int i = 1; i < n; ++i)\n        if (vis[u[i]] != vis[v[i]])\n            ans[++ans_num] = i;\n    printf(\"%d\\n\", ans_num);\n    for (int i = 1; i <= ans_num; ++i){\n        if(i != 1)\n            printf(\" \");\n        printf(\"%d\", ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1558003329,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF796D \u3010Police Stations\u3011"
    },
    {
        "content": "# Police Stations\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u6709\u4e00\u4e9b\u70b9\u662f\u8b66\u5bdf\u5c40\uff0c\u8981\u6c42\u6240\u6709\u70b9\u5230\u6700\u8fd1\u7684\u8b66\u5bdf\u5c40\u7684\u8ddd\u79bb\u4e0d\u5927\u4e8ed\uff0c\u6c42\u6700\u591a\u80fd\u5220\u51e0\u6761\u8fb9\n## \u5e7f\u544a\u63d2\u5165\n\u5728\u6211\u7684\u535a\u5ba2\u91cc\u770b\u9898\u89e3\u4f7f\u7528\u6548\u679c\u66f4\u4f73\u54e6QwQ\n\n[\u6155\u5bb9\u7433\u7684\u540e\u82b1\u56ed](https://muronglin.top/hgoi-20190516/)\n\n[\u535a\u5ba2\u56ed(\u540c\u6b65\u66f4\u65b0)](https://www.cnblogs.com/muronglin/p/hgoi-20190516.html)\n## \u89e3\u6cd5\n\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u8fde\u7740\u6240\u6709\u8b66\u5bdf\u5c40\uff0c\u6216\u8005\u4e00\u5f00\u59cb\u5c31\u628a\u6240\u6709\u8b66\u5bdf\u5c40\u538b\u5165\u961f\u5217\uff0c\u8dd1bfs\n\n\u5982\u679c\u8fd9\u6761\u8fb9\u8fc7\u53bb\u7684\u70b9\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u8fd9\u6761\u8fb9\u5c31\u53ef\u4ee5\u5220\u9664\n\nbfs\u7684\u9000\u51fa\u6761\u4ef6\u4e0d\u662f\u70b9\u6709\u6ca1\u6709\u88ab\u641c\u8fc7\uff0c\u800c\u662f\u8fb9\u6709\u6ca1\u6709\u88ab\u641c\u7d22\u548c\u8ddd\u79bb\u662f\u5426\u8d85\u8fc7d\n## ac\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{int to,next,v;}e[600010];\nstruct Node{int num,d;};\nint n,k,d,cnt=1,ans=0,x,y,head[300010],vis[300010],flg[300010],res[300010];\nqueue<Node>q;\nvoid add(){e[++cnt]={y,head[x],0},head[x]=cnt,e[++cnt]={x,head[y],0},head[y]=cnt;}\nvoid bfs()\n{\n\twhile(!q.empty())\n\t{\n\t\tNode u=q.front();\n\t\tq.pop();\n\t\tflg[u.num]=0;\n\t\tif(u.d>d)continue;\n\t\tfor(int i=head[u.num];i;i=e[i].next)\n\t\t{\n\t\t\tif(e[i].v)continue;\n\t\t\te[i].v=e[i^1].v=1;\n\t\t\tif(vis[e[i].to])res[++ans]=i/2;\n\t\t\tif(!flg[e[i].to])q.push({e[i].to,u.d+1}),flg[e[i].to]=vis[e[i].to]=1;\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&k,&d);\n\tfor(int i=1;i<=k;i++)scanf(\"%d\",&x),q.push({x,0}),vis[x]=1;\n\tfor(int i=1;i<n;i++)scanf(\"%d%d\",&x,&y),add();\n\tbfs(),printf(\"%d\\n\",ans);\n\tfor(int i=1;i<=ans;i++)printf(\"%d \",res[i]);\n\treturn 0;\n}\n```",
        "postTime": 1557992791,
        "uid": 24663,
        "name": "\u6ce0\u5c0f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF796D \u3010Police Stations\u3011"
    },
    {
        "content": "## CF796D Police Stations \u591a\u6e90 BFS \u6784\u9020\n\n**\u9898\u610f**\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u8282\u70b9\u6811\uff0c\u6811\u4e0a\u6709 $k$ \u4e2a\u70b9\u662f\u8b66\u5bdf\u5c40\uff0c\u8981\u6c42\u6240\u6709\u70b9\u5230\u6700\u8fd1\u7684\u8b66\u5bdf\u5c40\u7684\u8ddd\u79bb\u4e0d\u5927\u4e8ed\uff0c\u6c42\u6700\u591a\u80fd\u5220\u51e0\u6761\u8fb9\u3002\n\n**\u6570\u636e\u8303\u56f4**  \n\n\u4fdd\u8bc1\u6240\u6709\u70b9\u8ddd\u79bb\u6700\u8fd1\u7684\u8b66\u5bdf\u5c40\u4e0d\u8d85\u8fc7 $d$  \u3002\n$1\\leq n,k \\leq 3 * 10^5$  \n$0\\leq d \\leq n - 1$ \n\n**\u601d\u8def** \n+ \u9996\u5148\u6240\u6709\u70b9\u8ddd\u79bb\u6700\u8fd1\u7684\u8b66\u5bdf\u5c40\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $d$ \uff0c\u6211\u4eec\u9700\u8981\u5220\u9664\u591a\u4f59\u7684\u8fb9\u3002\n+ \u53ef\u4ee5\u5c1d\u8bd5\u591a\u6e90 BFS\uff0c\u5c06\u6240\u6709\u8b66\u5bdf\u5c40\u70b9\u653e\u5165\u961f\u5217\u4e2d\uff0c\u7136\u540e\u5f00\u641c\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e2a\u70b9\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u6839\u636ebfs\u7684\u6027\u8d28\uff0c\u6211\u4eec\u73b0\u5728\u5904\u4e8e\u7684\u8fb9\u5c31\u662f\u53ef\u4ee5\u5220\u6389\u7684\u8fb9\u3002\n+ \u6ce8\u610f\u5bf9\u904d\u5386\u8fc7\u7684\u8fb9\u7684\u53cd\u5411\u8fb9\u7279\u5224\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n**Solution**  \n\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> PII;\ntypedef std::pair<ll, ll> PLL;\ntypedef double db;\n#define arr(x) (x).begin(),(x).end()\n#define x first\n#define y second\n#define pb push_back\n#define mkp make_pair\n#define endl \"\\n\"\nusing namespace std;\nconst int N = 3e5 + 10;\nbool st[N << 1];\nint dist[N];\nint n, k, d;\nvector<PII> edge[N];\n\nint main(){\n\tios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n\tcin >> n >> k >> d;\n\tmemset(dist, 0x3f, sizeof dist);\n\tqueue<int> q;\n\tfor(int i = 0; i < k; i++){\n\t\tint x;\n\t\tcin >> x;\n\t\tdist[x] = 0;\n\t\tq.push(x);\n\t}\n\tint cnt = 2;\n\tfor(int i = 1; i < n; i++){\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tedge[a].pb({b, cnt++});\n\t\tedge[b].pb({a, cnt++});\n\t}\n\tvector<int> res;\n    while(q.size()){\n\t\tauto u = q.front();\n\t\tq.pop();\n\t\tfor(auto v: edge[u]){\n\t\t\tif(st[v.y]) continue;\n\t\t\tif(dist[v.x] != 0x3f3f3f3f){\n\t\t\t\tres.pb(v.y / 2);\n\t\t\t\tst[v.y] = st[v.y ^ 1] = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tst[v.y] = st[v.y ^ 1] = true;\n\t\t\tdist[v.x] = dist[u] + 1;\n\t\t\tq.push(v.x);\n\t\t}\n\t}\n\tcout << res.size() << endl;\n\tfor(auto t: res)\n\t\tcout << t << \" \";\n    return 0;\n}\t\n```\n",
        "postTime": 1652886560,
        "uid": 392696,
        "name": "Roshin",
        "ccfLevel": 0,
        "title": "CF796D Police Stations \u9898\u89e3 --- \u591a\u6e90 BFS"
    },
    {
        "content": "\u6b64\u9898 bfs \u5373\u53ef\u3002\n\n## \u505a\u6cd5\uff1a\n\n\u5c06\u6bcf\u4e2a\u8b66\u5bdf\u5c40\u67d3\u4e0a\u4e0d\u540c\u7684\u989c\u8272\u3002\u7136\u540e\u8dd1\u4e00\u904d bfs\uff0c\u5c06\u6240\u7ecf\u8fc7\u7684\u70b9\u67d3\u4e0a\u8272\u3002\u5728\u6b64\u4e4b\u540e\uff0c\u7edf\u8ba1\u6bcf\u6761\u8fb9\u3002\u82e5\u8fd9\u6761\u8fb9\u4e24\u7aef\u70b9\u989c\u8272\u4e0d\u540c\uff0c\u8fd9\u6761\u8fb9\u53ef\u4ee5\u5220\u53bb\u3002\n\n## \u505a\u6cd5\u539f\u56e0\n\n\u6b64\u9898\u4e0d\u9700\u8981\u7528\u5230\u9898\u76ee\u4e2d\u7684 $d$\uff0c\u56e0\u4e3a\u6570\u636e\u6ee1\u8db3\u975e\u8b66\u5bdf\u5c40\u7684\u70b9\u5230\u6700\u8fd1\u7684\u8b66\u5bdf\u5c40\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $d$\uff08\u8fd9\u70b9\u5728\u7ffb\u8bd1\u91cc\u6ca1\u6709\u4f53\u73b0\uff0c\u671b\u8bf4\u660e\uff09\uff0c\u800c bfs \u4fdd\u8bc1\u4e86  _\u88ab\u641c\u5230\u7684\u70b9_ \u79bb _\u5176\u989c\u8272\u5bf9\u5e94\u7684\u8b66\u5bdf\u5c40_ \u7684\u8ddd\u79bb\u5fc5\u5b9a\u6700\u5c0f\u3002\u56e0\u6b64\uff0c\u5f53\u679a\u4e3e\u5230\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u989c\u8272\u4e0d\u540c\u65f6\uff0c\u5fc5\u7136\u80fd\u591f\u5220\u53bb\u8fd9\u6761\u8fb9\uff0c\u4e14\u80fd\u591f\u4fdd\u8bc1\u5230\u6700\u8fd1\u8b66\u5bdf\u5c40\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $d$\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <fstream>\n\nstd::streambuf* inbuf, *outbuf;\nchar ibuf[1 << 23], *i1 = ibuf, *i2 = ibuf;\n#define gc() (i1 == i2 && (i2 = (i1 = ibuf) + inbuf->sgetn(ibuf, 1 << 23), i1 == i2) ? EOF : *i1++)\n#define pc(x) (outbuf->sputc(x))\n\nint iget()\n{\n    int x = 0;\n    bool f = false;\n    char c = gc();\n    while (c < '0' || c > '9')\n    {\n        f |= c == '-';\n        c = gc();\n    }\n    while (c >= '0' && c <= '9')\n    {\n        x = (x << 3) + (x << 1) + (c ^ 48);\n        c = gc();\n    }\n    return f ? -x : x;\n}\n\nvoid ipr(int x)\n{\n    if (x == 0)\n    {\n        pc('0');\n        return ;\n    }\n    if (x < 0)\n    {\n        pc('-');\n        x = -x;\n    }\n    static char stk[25];\n    int top = 0;\n    while (x)\n    {\n        stk[top++] = x % 10 + 48;\n        x /= 10;\n    }\n    while (top--)\n    {\n        pc(stk[top]);\n    }\n}\n\nvoid iwsp(int x) // Int Write with Space \n{\n    ipr(x);\n    pc(' ');\n}\n\nvoid iwln(int x) // Int Write with LiNe\n{\n    ipr(x);\n    pc('\\n');\n}\n\n#include <vector>\n#include <algorithm>\n\nnamespace Solution\n{\n\n    const int maxn = 1000005;\n\n    struct Point  \n    {\n        int pos, col;\n        Point(int p = 0, int c = 0):\n            pos(p), col(c) {}\n    };\n\n    std::vector<int> g[maxn]; \n    Point qaq[maxn];\n    int head = 1, tail = 0;\n    int vis[maxn];\n    int u[maxn], v[maxn];\n\n    void bfs()\n    {\n        while (head <= tail)\n        {\n            int u = qaq[head].pos;\n            int c = qaq[head++].col;\n            for (int v : g[u])\n            {\n                if (!vis[v])\n                {\n                    vis[v] = c;\n                    qaq[++tail].pos = v;\n                    qaq[tail].col = c;\n                }\n            }\n        }\n    }\n\n\n    int main()\n    {\n        #ifndef ONLINE_JUDGE\n            std::ifstream cin(\"main.in\");\n            std::ofstream cout(\"main.out\");\n        #else\n            std::ios::sync_with_stdio(false);\n            std::cin.tie(nullptr);\n            std::cout.tie(nullptr);\n            using std::cin;\n            using std::cout;\n        #endif\n        inbuf = cin.rdbuf();\n        outbuf = cout.rdbuf();\n\n\n        int n = iget(), k = iget(), d = iget(), num = 0;\n        for (int i = 1; i <= k; ++i)\n        {\n            int p = iget();\n            if (vis[p])\n            {\n                continue;\n            }\n            vis[p] = ++num;\n            qaq[++tail].pos = p;\n            qaq[tail].col = num;\n        }\n        for (int i = 1; i < n; ++i)\n        {\n            u[i] = iget(), v[i] = iget();\n            g[u[i]].push_back(v[i]);\n            g[v[i]].push_back(u[i]);\n        }\n        bfs();\n        std::vector<int> pos;\n        for (int i = 1; i < n; ++i)\n        {\n            if (vis[u[i]] != vis[v[i]])\n            {\n                pos.push_back(i);\n            }\n        }\n        iwln(pos.size());\n        for (int p : pos)\n        {\n            iwsp(p);\n        }\n\n\n        #ifndef ONLINE_JUDGE\n            cin.close();\n            cout.close();\n        #endif\n        return 0;\n    }\n} // namespace Solution\n\n\nint main(int argc, const char* argv[])\n{\n    Solution::main();\n    return 0;\n}\n```\n\n## \u6ce8\u610f\n\n\u672c\u9898\u82e5\u6709\u591a\u79cd\u65b9\u6848\uff0c\u8f93\u51fa\u5176\u4efb\u610f\u4e00\u79cd\u5373\u53ef\u3002\u56e0\u6b64\uff0c\u7b2c\u4e00\u4e2a\u6837\u4f8b\u8f93\u51fa `1 (\\n) 5` \u548c `1 (\\n) 3` \u5747\u53ef\u3002\u5176\u4e2d `(\\n)` \u6307\u6362\u884c\u3002\n\n",
        "postTime": 1632124626,
        "uid": 317805,
        "name": "BootsH",
        "ccfLevel": 0,
        "title": "Solution of CF796D Police Stations"
    }
]