[
    {
        "content": "\u9898\u610f\uff1a\n\u6709\u4e00\u4e2a\u4eba\u8981\u4ece0\u5230n\uff0c\u5176\u95f4\u6709m\u8d9f\u516c\u4ea4\u8f66\uff0c\u8fd9\u4e2a\u4eba\u53ef\u4ee5\u4ece$s_i->t_i-1$\u7684\u4f4d\u7f6e\u4e0a\u8f66\uff0c\u5fc5\u987b\u5728$t_i$\u4e0b\u8f66\u3002\u4ed6\u60f3\u95ee\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\uff08$\\% \\ 10^9+7$\uff09\n\n\u89e3\u6cd5\uff1a\n\n\u5f88\u660e\u663e\u8981\u79bb\u6563\uff0c\u600e\u4e48\u79bb\u6563\u5c31\u4e0d\u8bb2\u4e86\u3002\u8f66\u4e5f\u8981\u6309\u7167\u7ec8\u70b9\u6392\u5e8f\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u4e00\u9053dp\u9898\uff0c\u5e76\u4e14\u60f3\u51fadp\u72b6\u6001\n\ndp[i]\u8868\u793a\u4e58\u5750\u7b2ci\u8d9f\u516c\u4ea4\u8f66\u5230\u8fbe\u7ec8\u70b9\u7684\u65b9\u6848\u6570\uff0c\u7b54\u6848\u5c31\u662f\u6240\u6709\u7ec8\u70b9\u662fn\u7684dp\u503c\n\u8f6c\u79fb\u679a\u4e3e\u524d\u9762\u90a3\u8d9f\u516c\u4ea4\u8f66\u8fdb\u884c\u8f6c\u79fb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(m^2)$\n\n\u5982\u4f55\u4f18\u5316\uff1f\n\n\u4f3c\u4e4e\u5f88\u5bb9\u6613\uff0c\u6211\u4eec\u7684\u4e0a\u4e00\u8d9f\u516c\u4ea4\u8f66\u80af\u5b9a\u662f\u5728$s_i->t_i-1$\u8303\u56f4\u8f6c\u79fb\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u628a\u4ece$s_i->t_i-1$\u7684dp\u503c\u52a0\u5230dp[i]\u5c31\u884c\u4e86\uff0c\u800c\u56e0\u4e3a\u6392\u5e8f\uff0c\u8d77\u70b9\u5728\u524d\u7684\u4e00\u5b9a\u7f16\u53f7\u5c0f\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u5728\u539f\u5e8f\u5217\u4e2d\u8fdb\u884c$lower\\_bound$\u5c31\u884c\u4e86\uff0c\n\n\u518d\u901a\u8fc7\u524d\u7f00\u548c\u6c42\u51fa\u4e00\u6bb5dp\u503c\u52a0\u5165\u5230dp[i]\u91cc\uff0c\u5c31OK\u4e86\n\n\u522b\u770b\u603b\u573a\u901a\u5e38\uff0c\u90a3\u662f\u56e0\u4e3a\u5934\u6587\u4ef6\u7684\u539f\u56e0\uff0c\u771f\u6b63main\u51fd\u6570\u91cc\u7684\u4ee3\u7801\u8fd8\u662f\u633a\u77ed\u7684\n\n```cpp\n#include <map>\n#include <set>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <bitset>\n#include <cstdio>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <cassert>\n#include <climits>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <functional>\nusing namespace std ;\n\n#define rep(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)\n#define Rep(i, a, b) for (int (i) = (a) - 1; (i) < (b); (i)++)\n#define REP(i, a, b) for (int (i) = (a); (i) >= (b); (i)--)\n#define clr(a) memset(a, 0, sizeof(a))\n#define Sort(a, len, cmp) sort(a + 1, a + len + 1, cmp)\n#define ass(a, sum) memset(a, sum, sizeof(a))\n\n#define ls ((rt) << 1)\n#define rs ((rt) << 1 | 1)\n#define lowbit(x) (x & -x)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define endl '\\n'\n#define ENDL cout << endl\n#define SZ(x) ((int)x.size())\n\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef vector <int> vi ;\ntypedef pair <int, int> pii ;\ntypedef pair <ll, ll> pll ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\ntypedef map <ll, ll> mll ;\n\nconst int N = 100010 ;\nconst double eps = 1e-8 ;\nconst int iinf = INT_MAX ;\nconst ll linf = 2e18 ;\nconst double dinf = 1e30 ;\nconst int MOD = 1000000007 ;\n\ninline int read(){\n    int X = 0, w = 0 ;\n\tchar ch = 0 ;\n    while (!isdigit(ch)) { w |= ch == '-' ; ch = getchar() ; }\n    while (isdigit(ch)) X = (X << 3) + (X << 1) + (ch ^ 48), ch = getchar() ;\n    return w ? - X : X ;\n}\n\nvoid write(int x){\n     if (x < 0) putchar('-'), x = - x ;\n     if (x > 9) write(x / 10) ;\n     putchar(x % 10 + '0') ;\n}\n\nvoid print(int x) {\n\tcout << x << endl ;\n\texit(0) ;\n}\n\nvoid PRINT(string x) {\n\tcout << x << endl ;\n\texit(0) ;\n}\n\nvoid douout(double x){\n\t printf(\"%lf\\n\", x + 0.0000000001) ;\n}\n\nint dp[N], sum[N] ;\nint n, m, ans ;\n\nint main() {\n\tscanf(\"%d%d\", &n, &m) ;\n\tvector <pii> a(m) ; vi v(m) ;\n\tfor (int i = 0, s, t; i < m; i++) {\n\t\tscanf(\"%d%d\", &s, &t) ;\n\t\ta[i] = mp(t, s) ;\n\t\tv[i] = t ;\n\t}\n\tsort(a.begin(), a.end()) ; sort(v.begin(), v.end()) ;\n\tfor (int i = 0; i < m; i++) {\n\t\tint f = a[i].se, t = a[i].fi ;\n\t\tif (f == 0) dp[i] = 1 ;\n\t\tint S = lower_bound(v.begin(), v.end(), f) - v.begin() ;\n\t\tint T = lower_bound(v.begin(), v.end(), t) - v.begin() ;\n\t\tdp[i] = (dp[i] + sum[T] - sum[S] + MOD) % MOD ;\n\t\tsum[i + 1] = (sum[i] + dp[i]) % MOD ;\n\t}\n\tfor (int i = 0; i < m; i++) if (a[i].fi == n) ans = (ans + dp[i]) % MOD ;\n\tprintf(\"%d\\n\", ans) ;\n}\n\n/*\n\u5199\u4ee3\u7801\u65f6\u8bf7\u6ce8\u610f\uff1a\n\t1.\u662f\u5426\u8981\u5f00Long Long\uff1f\u6570\u7ec4\u8fb9\u754c\u5904\u7406\u597d\u4e86\u4e48\uff1f\n\t2.\u5b9e\u6570\u7cbe\u5ea6\u6709\u6ca1\u6709\u5904\u7406\uff1f\n\t3.\u7279\u6b8a\u60c5\u51b5\u5904\u7406\u597d\u4e86\u4e48\uff1f\n\t4.\u505a\u4e00\u4e9b\u603b\u6bd4\u4e0d\u505a\u597d\u3002\n\u601d\u8003\u63d0\u9192\uff1a\n\t1.\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u95ee\u9898\u53ef\u4e0d\u53ef\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\uff1f\n\t2.\u6709\u6ca1\u6709\u8d2a\u5fc3\u7b56\u7565\uff1f\u5426\u5219\u80fd\u4e0d\u80fddp\uff1f\n*/\n\n```",
        "postTime": 1543662791,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF101B \u3010Buses\u3011"
    },
    {
        "content": "# CF101B Bus \u9898\u89e3\n\n## 1 \u9898\u89e3\n\n\u770b\u5230\u7edf\u8ba1\u65b9\u6cd5\u6570\uff0c\u9996\u5148\u601d\u8003 dp\u3002\n\n### 1.1 \u8868\u793a\u72b6\u6001\n\n\u9996\u5148\u5bb9\u6613\u60f3\u5230 $dp[i]$ \u8868\u793a\u5230 $i$ \u8f66\u7ad9\u7684\u603b\u65b9\u6848\u6570\uff0c\u4f46\u8fd9\u6837\u5f88\u96be\u8f6c\u79fb\u3002\uff08\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5c31\u662f\u72b6\u6001\u7684\u8868\u793a\u3002\uff09\n\n\u53ef\u4ee5\u60f3\u5230\u8fd9\u79cd\u60c5\u51b5\u4e0b $dp[i]$ \u90fd\u662f\u7531\u6ee1\u8db3 $t_x=i$ \u7684\u8f66\u7ad9 $x$ \u51b3\u5b9a\u7684\uff0c\u800c\u4e14 $m$ \u8303\u56f4\u4e0d\u5927\uff0c**\u6240\u4ee5\u8003\u8651 $dp[i]$ \u8868\u793a\u5750 $i$ \u516c\u4ea4\u5230\u7ec8\u70b9\u7684\u603b\u65b9\u6848\u6570**\u3002\n\n### 1.2 \u72b6\u6001\u8f6c\u79fb\n\n\u72b6\u6001\u8f6c\u79fb\u5c31\u597d\u60f3\u591a\u4e86\u3002\u60f3\u4e58\u5750\u516c\u4ea4 $x$\uff0c\u5219\u4e00\u5b9a\u5728 $[s_x,t_x)$ \u533a\u95f4\u5185\u4e0a\u8f66\u3002\u6211\u4eec\u679a\u4e3e\u7ec8\u70b9\u5728\u8fd9\u4e2a\u533a\u95f4\u6240\u6709\u516c\u4ea4\u7ebf\u8def\uff0c\u518d\u5c06\u8fd9\u91cc\u6240\u6709\u516c\u4ea4\u7ebf\u8def\u7684 dp \u503c\u6c42\u548c\u5373\u53ef\u3002\n\n### 1.3 \u4f18\u5316\n\n\u5047\u5982\u66b4\u529b\u5199\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m^2)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u6309\u7167\u7ec8\u70b9\u6392\u5e8f\uff0c\u8fd9\u6837\u679a\u4e3e\u7ec8\u70b9\u5728\u533a\u95f4\u5185\u7684\u516c\u4ea4\u7ebf\u8def\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u5b9e\u73b0\uff08\u627e\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff09\u3002\u6c42 dp \u503c\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u5b9e\u73b0\uff08\u56e0\u4e3a\u63d0\u524d\u6392\u8fc7\u5e8f\uff09\u3002**\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log m)$\u3002**\n\n### 1.4 \u603b\u7ed3\n\n\u4e00\u9053\u6709\u4e00\u5b9a\u601d\u7ef4\u96be\u5ea6\u7684 dp \u9898\u3002~~\u8fd9\u9898\u4e3a\u4ec0\u4e48\u80fd\u8bc4\u7d2b\uff1f~~\n\n## 2 \u53c2\u8003\u4ee3\u7801\n\n```c++\n#include<iostream>\n#include<algorithm>\n#define int long long\nusing namespace std;\nconst int MAXM=100005;\nconst int MOD=1e9+7;\nstruct Bus\n{\n    int s,t;\n}a[MAXM];\nint dp[MAXM];\nint sum[MAXM];\nbool cmp(Bus x,Bus y)\n{\n    if(x.t==y.t) return x.s<y.s;\n    return x.t<y.t;\n}\nsigned main()\n{\n    int n,m;\n    cin>>n>>m;\n    for(int i=1;i<=m;i++) cin>>a[i].s>>a[i].t;\n    sort(a+1,a+m+1,cmp);\n    for(int i=1;i<=m;i++)\n    {\n        if(!a[i].s) dp[i]=1;\n        int l=1,r=i-1;\n        int mid;\n        int ans1=-1;\n        while(l<=r)\n        {\n            mid=(l+r)>>1;\n            if(a[mid].t>=a[i].s)\n            {\n                r=mid-1;\n                ans1=mid;\n            }\n            else l=mid+1;\n        }\n        l=1,r=i-1;\n        int ans2=-1;\n        while(l<=r)\n        {\n            mid=(l+r)>>1;\n            if(a[mid].t<a[i].t)\n            {\n                l=mid+1;\n                ans2=mid;\n            }\n            else r=mid-1;\n        }\n        if(ans1!=-1&&ans2!=-1)\n        {\n            dp[i]+=sum[ans2]-sum[ans1-1];\n            dp[i]=(dp[i]+MOD)%MOD;\n        }\n        sum[i]=(sum[i-1]+dp[i])%MOD;\n    }\n    int cnt=0;\n    for(int i=1;i<=m;i++)\n        if(a[i].t==n)\n        {\n            cnt+=dp[i];\n            cnt=(cnt+MOD)%MOD;\n        }\n    cout<<cnt<<endl;\n    return 0;\n}\n```",
        "postTime": 1638268069,
        "uid": 328916,
        "name": "tonyre",
        "ccfLevel": 0,
        "title": "CF101B Bus \u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u8ba1\u6570\u7c7b\u9898\u60f3DP\u3002\n\n\u9996\u5148\u60f3\uff1a\u72b6\u6001\u53ef\u4ee5\u8bbe\u6210$dp[i]$\u8868\u793a\u5230\u8f66\u7ad9$i$\u4e0b\u8f66\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\u3002\u7b54\u6848\u662f$dp[n]$\u3002\u4f46\u662f\u53d1\u73b0$n$\u5f88\u5927\uff0c\u800c\u4e14\u4e0d\u592a\u597d\u8f6c\u79fb\u3002\u6240\u4ee5\u5f00\u59cb\u601d\u8003\uff1a\u5230\u8f66\u7ad9$i$\u4e0b\u8f66\uff0c\u53ea\u80fd\u662f\u7ec8\u70b9\u5728$i$\u7684\u8f66\u6b21\u3002\u65e2\u7136$m$\u7684\u8303\u56f4\u53ef\u4ee5\uff0c\u53c8\u6709\u8fd9\u4e2a\u6027\u8d28\uff0c\u80fd\u4e0d\u80fd\u76f4\u63a5\u7528\u8f66\u6b21\u4ee3\u66ff\u4f4d\u7f6e\u6765\u7ef4\u62a4\u5462\uff1f\n\n\u53ef\u4ee5\uff1a\u8bbe\u72b6\u6001\u4e3a$dp[i]$\u8868\u793a\u7b2c$i$\u8d9f\u8f66\uff08\u5f53\u7136\u8981\u5728$t[i]$\u4e0b\u8f66\uff09\u7684\u65b9\u6848\u6570\uff0c\u6700\u7ec8\u7b54\u6848\u662f\u6240\u6709$t[i]=n$\u7684$dp[i]$\u7684\u548c\u3002\u8f6c\u79fb\u4e5f\u975e\u5e38\u597d\u60f3\uff1a\u80fd\u5728$t[i]$\u4e0b\u8f66\uff0c\u4e00\u5b9a\u4f1a\u5728$s[i]-t[i]$\u8fd9\u6bb5\u8def\u4e0a\u4e0a\u8f66\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3e\u6709\u54ea\u4e9b\u8f66\u6b21\u7684\u7ec8\u70b9\u5728\u8fd9\u6bb5\u8def\u4e0a\uff0c\u8fd9\u4e9b\u8f66\u90fd\u53ef\u4ee5\u8f6c\u79fb\u5230\u5f53\u524d\u72b6\u6001\u3002\n\n\u90a3\u5c31\u9ebb\u70e6\u4e86\uff0c\u600e\u4e48\u627e\u5230\u8fd9\u4e9b\u8f6c\u79fb\u7684\u8f66\u6b21\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u5176\u6309\u53f3\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u6837\uff0c\u8f6c\u79fb\u800c\u6765\u7684\u90a3\u4e9b\u8f66\u6b21\u4e00\u5b9a\u5728\u5f53\u524d\u8f66\u6b21\u4e4b\u524d\u3002\u90a3\u4e48\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u6765\u627e\u5230\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int maxm=1e5+5;\nconst int mod=1e9+7;\nint n,m,ans;\nvector<pair<int,int> >e;\nvector<int> f;\nint dp[maxm],sum[maxm];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    e.push_back(make_pair(0,0));\n    f.push_back(0);\n    for(int i=1;i<=m;i++)\n    {\n        int s,t;\n        scanf(\"%d%d\",&s,&t);\n        e.push_back(make_pair(t,s));\n        f.push_back(t);\n    }\n    sort(e.begin(),e.end());\n    sort(f.begin(),f.end());\n    for(int i=1;i<=m;i++)\n    {\n        int x=e[i].second,y=e[i].first;//x,y\u662f\u5f53\u524d\u8def\u7ebf\u7684\u8d77\u7ec8\u70b9\n        if(!x)\n            dp[i]=1;\n        int s=lower_bound(f.begin(),f.end(),x)-f.begin();\n        int t=lower_bound(f.begin(),f.end(),y)-f.begin();\n        dp[i]=(dp[i]+sum[t]-sum[s]+mod)%mod;\n        sum[i+1]=(sum[i]+dp[i])%mod;\n    }\n    for(int i=1;i<=m;i++)\n        if(e[i].first==n)\n            ans=(ans+dp[i])%mod;\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1606644275,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF101B \u3010Buses\u3011"
    },
    {
        "content": "### \u9898\u610f\n[\u89c1\u9898\u9762](https://www.luogu.com.cn/problem/CF101B)\n### \u9898\u89e3\n\u6ce8\u610f\u5230\u6700\u7ec8\u7684\u7b54\u6848\u53ea\u4e0e\u6bcf\u8f86\u516c\u4ea4\u8f66\u8d77\u70b9\u7ec8\u70b9\u7684\u5927\u5c0f\u5173\u7cfb\u6709\u5173\uff0c\u8003\u8651\u79bb\u6563\u5316+\u52a8\u6001\u89c4\u5212\u3002\n\n\u79bb\u6563\u5316\u540e $dp_i$ \u8868\u793a\u5230\u8fbe\u7b2c $i$ \u4e2a\u8f66\u7ad9\u7684\u603b\u65b9\u6848\u6570\u8f6c\u79fb\u65f6\u679a\u4e3e\u6bcf\u4e00\u8f86\u5728\u7b2c $i$ \u4e2a\u8f66\u7ad9\u505c\u8f66\u7684\u516c\u4ea4\u8f66\uff0c\u5f97\u5230\u4e86\u82e5\u5e72\u4e2a\u53ef\u4ee5\u4e0a\u8f66\u7684\u533a\u95f4 $[l,r]$ \u6c42\u548c\u65f6\u524d\u7f00\u548c\u4f18\u5316\u5373\u53ef\u3002\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nvector<int> lst[200005];//\u7b2ci\u4e2a\u8f66\u7ad9\u505c\u8f66\u7684\u516c\u4ea4\u8f66\nint n,m,s[200005],t[200005],dp[200005][2];//0:dp;1:sum\nconst int mod=1e9+7;\nsigned main()\n{\n\tcin>>n>>m;\n\tvector<int> vc;\n\tvc.push_back(n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>s[i]>>t[i];\n\t\tvc.push_back(s[i]),vc.push_back(t[i]);\n\t}\n\tmap<int,int> ls;\n\tsort(vc.begin(),vc.end());\n\tif(vc[0]) return puts(\"0\"),0;\n\tls[vc[0]]=0;\n\tint cnt=0;\n   //\u79bb\u6563\u5316\n\tfor(int i=1;i<vc.size();i++)\n\t{\n\t\tif(vc[i]==vc[i-1]) continue;\n\t\tls[vc[i]]=++cnt;\n\t}\n\tfor(int i=1;i<=m;i++) s[i]=ls[s[i]],t[i]=ls[t[i]];\n\tfor(int i=1;i<=m;i++) lst[t[i]].push_back(s[i]);//\u7b2ci\u4e2a\u8f66\u7ad9\u505c\u8f66\u7684\u516c\u4ea4\u8f66\n\tdp[0][0]=dp[0][1]=1;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tfor(int j=0;j<lst[i].size();j++) dp[i][0]=(dp[i][0]+dp[i-1][1]-(!lst[i][j]?0:dp[lst[i][j]-1][1]/*\u9632\u6b62\u8bbf\u95ee\u5230-1*/)+mod)%mod;\n\t\tdp[i][1]=(dp[i-1][1]+dp[i][0])%mod;\n\t}\n\tcout<<dp[cnt][0];\n\treturn 0;\n}\n```",
        "postTime": 1638628923,
        "uid": 448159,
        "name": "wz20201136",
        "ccfLevel": 7,
        "title": "CF101B\u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n\u6709 $n$ \u4e2a\u516c\u4ea4\u7ad9\uff0c $m$ \u8f86\u8f66\uff0c\u53ea\u80fd\u4ece $[s_i,t_i-1]$ \u8303\u56f4\u91cc\u7684\u516c\u4ea4\u7ad9\u4e0a\u8f66\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u5230\u7b2c $n$ \u7ad9\u7684\u65b9\u6848\u3002\n\n### \u5206\u6790\n\n\u8fd9\u663e\u7136\u662f\u4e00\u9053 dp \u9898\u3002 $dp_i$ \u8868\u793a\u5750\u7b2c $i$ \u8f86\u8f66\u5230 $t_i$ \u7ad9\u7684\u65b9\u6848\u6570\u3002\u9996\u5148\u5c06\u6240\u6709\u516c\u4ea4\u8f66\u6309\u7167\u7ec8\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e8c\u5206\u627e\u5230\u7ec8\u70b9\u7b26\u5408\u6761\u4ef6\u7684\u4e00\u6bb5\u516c\u4ea4\u8f66\u7684\u5de6\u7aef\u70b9 $l$ \u548c\u53f3\u7aef\u70b9 $r$ \uff0c$dp_i= \\sum\\limits_{j=l}^r dp_j$ \uff0c\u7279\u5224\u4e00\u4e0b\u8d77\u70b9\u4e3a $0$ \u7684\u60c5\u51b5\uff0c\u7528\u524d\u7f00\u548c\u4f18\u5316\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int inf=2139062143;\nconst int MAXN=1e5+7;\nconst int mod=1e9+7;\ninline void qread(){}template<class T1,class ...T2>\ninline void qread(T1 &a,T2&... b)\n{\n\tregister T1 x=0;register bool f=false;char ch=getchar();\n\twhile(ch<'0') f|=(ch=='-'),ch=getchar();\n\twhile(ch>='0') x=(x*10)+(ch^48),ch=getchar();\n\tx=(f?-x:x);a=x;qread(b...);\n}\nint n,m,dp[MAXN],pre[MAXN],ans;\nstruct node{int s,t;node(){;}node(int _s,int _t):s(_s),t(_t){}bool operator < (const node &o)const{return t<o.t;}};\nvector<node>a;\nsigned main()\n{\n    qread(n,m);int i,j;\n    for(i=0;i<m;i++){int x,y;qread(x,y);a.push_back(node{x,y});}\n    sort(a.begin(),a.end());\n    for(i=0;i<m;i++)\n    {\n        int l=a[i].s,r=a[i].t;\n        int t1=lower_bound(a.begin(),a.end(),node{0,l})-a.begin();\n        int t2=lower_bound(a.begin(),a.end(),node{0,r})-a.begin();\n        dp[i]=(pre[t2]-pre[t1]+mod)%mod;\n        if(!l) dp[i]++;\n        pre[i+1]=(pre[i]+dp[i])%mod;\n        if(r==n) ans=(ans+dp[i])%mod;\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1638598192,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF101B Buses \u9898\u89e3"
    },
    {
        "content": "\u770b\u89c1\u5404\u4f4d\u5927\u4f6c\u90fd\u662f\u524d\u7f00\u548c\u554a\u2026\u2026\u7528\u7ebf\u6bb5\u6811\u7684\u5c0f\u849f\u84bb\u8868\u793a\u4e0d\u670d\u3002\n\n## \u89e3\u9898\u601d\u8def\uff1a\n\n\u7c7b\u4f3c dp\uff0c$dp_i$ \u8868\u793a\u8d70\u5230\u5f53\u524d\u8fd9\u4e00\u6761\u8def\u7ebf\u7684\u60c5\u51b5\u4e2a\u6570\u3002\n\n\u5982\u4f55\u8f6c\u79fb\u5462\uff1f\u6240\u6709\u7ec8\u70b9\u5728\u5f53\u524d\u8def\u7ebf\u4e2d\u95f4\u7684\u90fd\u53ef\u4ee5\u52a0\u8fdb\u5f53\u524d\u7b54\u6848\u3002\n\n\u4f46\u662f\u6709\u4e24\u4e2a\u95ee\u9898\u3002\n\n\u7b2c\u4e00\u4e2a\uff0c\u533a\u95f4\u65e0\u5e8f\uff0c\u5982\u679c\u66b4\u529b\u626b\u63cf\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002\n\n\u65e2\u7136\u65e0\u5e8f\uff0c\u90a3\u5c31\u8ba9\u533a\u95f4\u6309\u7167\u53f3\u7aef\u70b9\u6392\u4e2a\u5e8f\uff0c\u8fd9\u6837\u4e00\u4e8c\u5206\u5c31\u77e5\u9053\u54ea\u4e00\u6bb5\u8981\u7edf\u8ba1\u4e86\u3002\n\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u4e00\u6bb5\u7684\u548c\u3002\n\n\u770b\u89c1\u5404\u4f4d\u5927\u4f6c\u90fd\u662f\u7528\u7684\u524d\u7f00\u548c\uff0c\u4f46\u662f\u6211\u8868\u793a\u4e0d\u592a\u7406\u89e3\u3002\n\n\u6362\u4e2a\u65b9\u5f0f\uff0c\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u9700\u8981\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u3002\n\n\u8bf6\uff0c\u8fd9\u4e0d\u662f\u7ebf\u6bb5\u6811\u6a21\u677f\u5417\uff1f\uff08\u5f53\u7136\u5982\u679c\u4f60\u4f1a\u6811\u72b6\u6570\u7ec4\u5c31\u5f53\u6211\u4ec0\u4e48\u4e5f\u6ca1\u8bf4\uff09\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u6109\u5feb\u7684 AC \u8fd9\u9053\u9898\u4e86\u3002\n\n## AC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define int long long//\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long\u89c1\u7956\u5b97\u3002\nconst int mo=1e9+7;\nint n,m,tree[1000005],tag[1000005],sum;\nstruct node\n{\n    int l,r;\n}s[1000005];\nvoid push_down(int now,int l,int r)//\u7ebf\u6bb5\u6811\u5c31\u4e0d\u591a\u89e3\u91ca\u4e86\u3002\n{\n    int mid=(l+r)/2;\n    tag[now*2]+=tag[now]%mo;\n    tag[now*2]%=mo;\n    tag[now*2+1]+=tag[now]%mo;\n    tag[now*2+1]%=mo;\n    tree[now*2]+=(mid-l+1)*tag[now]%mo;\n    tree[now*2]%=mo;\n    tree[now*2+1]+=(r-mid)*tag[now]%mo;\n    tree[now*2+1]%=mo;\n    tag[now]=0;\n}\nvoid update(int now,int l,int r,int x,int y,int w)\n{\n    if(l>y || r<x)  return;\n    if(x<=l && r<=y)\n    {\n        tree[now]+=(r-l+1)*w%mo;\n        tree[now]%=mo;\n        tag[now]+=w%mo;\n        tag[now]%=mo;\n        return;\n    }\n    int mid=(l+r)/2;\n    push_down(now,l,r);\n    update(now*2,l,mid,x,y,w);\n    update(now*2+1,mid+1,r,x,y,w);\n    tree[now]=(tree[now*2]+tree[now*2+1])%mo;\n    tree[now]%=mo;\n}\nint query(int now,int l,int r,int x,int y)\n{\n    if(l>y || r<x)  return 0;\n    if(x<=l && r<=y)\n        return tree[now];\n    int mid=(l+r)/2;\n    push_down(now,l,r);\n    int res=(query(now*2,l,mid,x,y)+query(now*2+1,mid+1,r,x,y))%mo;\n    tree[now]=(tree[now*2]+tree[now*2+1])%mo;\n    tree[now]%=mo;\n    return res;\n}\nbool cmp(node x,node y)//\u6392\u5e8f\n{\n    if(x.r==y.r)\n        return x.l<y.l;\n    else\n        return x.r<y.r;\n}\nint search(int now)//\u624b\u52a8\u4e8c\u5206\u3002\n{\n    int l=1,r=m,ans=-1;\n    while(l<=r)\n    {\n        int mid=(l+r)/2;\n        if(s[mid].r<=now)\n            l=mid+1,ans=mid;\n        else\n            r=mid-1;\n    }\n    return ans;\n}\nint search2(int now)\n{\n    int l=1,r=m,ans=-1;\n    while(l<=r)\n    {\n        int mid=(l+r)/2;\n        if(s[mid].r>=now)\n            r=mid-1,ans=mid;\n        else\n            l=mid+1;\n    }\n    return ans;\n}\nsigned main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n        cin>>s[i].l>>s[i].r;\n    sort(s+1,s+1+m,cmp);\n    for(int i=1;i<=m;i++)\n        if(s[i].l==0)\n            update(1,1,m,i,i,1);//\u5982\u679c\u8d77\u70b9\u662f0\uff0c\u5219\u8d4b\u521d\u503c\u3002\n    for(int i=1;i<=m;i++)\n    {\n        int pos1=search2(s[i].l),pos2=search(s[i].r-1);//\u627e\u4e00\u6bb5\u53ef\u884c\u7684\u533a\u95f4\u3002\n        if(pos2==-1 || pos1==-1 || pos1>pos2)    continue;\n        update(1,1,m,i,i,query(1,1,m,pos1,pos2));//\u7ebf\u6bb5\u6811\u4fee\u6539\u3002\n    }\n    for(int i=1;i<=m;i++)\n        if(s[i].r==n)\n            sum+=query(1,1,m,i,i),sum%=mo;//\u7edf\u8ba1\u7b54\u6848\u3002\n    cout<<sum;\n    return 0;\n}\n```\n",
        "postTime": 1638330095,
        "uid": 355640,
        "name": "_HMZ_",
        "ccfLevel": 7,
        "title": "CF101B Buses \u9898\u89e3"
    }
]