[
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u6c42\u89e3\u3002\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u5ef6\u8fdf\u6807\u8bb0$ lz $\u2014\u2014\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u5b83\u7684$ lz $\u503c\u4e3a$ 0 $\uff0c\u90a3\u4e48\u8868\u793a\u8be5\u533a\u95f4\u6ca1\u6709\u8986\u76d6\u8bb0\u5f55\uff0c\u5426\u5219\u5b83\u8868\u793a$ b $\u6570\u7ec4\u4e2d\u8be5\u533a\u95f4$ [l,r] $\u88aba\u6570\u7ec4\u8986\u76d6\u7684\u5de6\u7aef\u70b9\u3002\n\n\u8003\u8651\u5ef6\u8fdf\u6807\u8bb0\u7684\u4e0b\u4f20\uff1a\n\n\u8bbe\u5f53\u524d\u8282\u70b9\u4e0b\u6807\u4e3a$ k $\n\n\u5982\u679c\u8282\u70b9$ k $\u7684$ lz $\u503c\u4e3a$ 0 $\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u4e0b\u4f20\u64cd\u4f5c\u4e86\u3002\n\n\u5982\u679c\u8282\u70b9$ k $\u7684$ lz $\u503c\u4e0d\u662f$ 0 $\uff1a\n\n\u5982\u679c\u8282\u70b9$ k $\u7684\u8868\u793a\u533a\u95f4\u4e3a$ [L,R] $\uff0c\u90a3\u4e48\u5b83\u5de6\u513f\u5b50\u8868\u793a\u7684\u533a\u95f4\u4e3a$ [L,\\frac{L+R}{2}] $\uff0c\u53f3\u513f\u5b50\u8868\u793a\u7684\u533a\u95f4\u4e3a$ [\\frac{L+R}{2}+1,R] $\u3002\u5047\u8bbe\u8282\u70b9$ k $\u7684$ lz $\u503c\u4e3a$ t $\u3002\u5219\u56e0\u4e3a$ a $\u6570\u7ec4\u6240\u8986\u76d6\u533a\u95f4\u7684\u957f\u5ea6\u4e0e$ b $\u6570\u7ec4\u88ab\u8986\u76d6\u533a\u95f4\u7684\u957f\u5ea6\u76f8\u7b49\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6807\u8bb0\u8868\u793a$ b $\u6570\u7ec4\u4e2d\u7684\u533a\u95f4$ [L,R] $\u88ab$ a $\u6570\u7ec4\u4e2d\u7684$ [t,t+R-L+1] $\u8986\u76d6\u3002\n\n\u518d\u8003\u8651\u5b83\u7684\u5b50\u8282\u70b9\u3002\u9996\u5148\u5de6\u5b50\u8282\u70b9\u7684\u5de6\u7aef\u70b9$ L $\u4e0b\u6807\u88ab$ a $\u6570\u7ec4\u4e2d\u7684\u7b2c$ t $\u4e2a\u6570\u8986\u76d6\uff0c\u56e0\u6b64$ k $\u7684\u5de6\u5b50\u8282\u70b9\u7684\u503c\u5c31\u662f$ t $\u3002\u53c8\u6839\u636e\u5b83\u7684\u533a\u95f4\u957f\u5ea6\u4e3a$ \\frac{L+R}{2}-L+1 $\uff0c\u5b83\u7684\u53f3\u7aef\u70b9\u88ab$ a $\u6570\u7ec4\u7684\u7b2c$ t+\\frac{L+R}{2}-L $\u4e2a\u6570\u8986\u76d6\uff0c\u56e0\u6b64\u8282\u70b9$ k $\u7684\u5de6\u5b50\u8282\u70b9\u7684\u53f3\u7aef\u70b9\u7684\u540e\u9a71\uff0c\u5373\u8282\u70b9$ k $\u7684\u53f3\u5b50\u8282\u70b9\u7684\u5de6\u7aef\u70b9\uff0c\u5e94\u88ab$ a[t+\\frac{L+R}{2}-L+1] $\u8986\u76d6\uff0c\u6240\u4ee5$ k $\u7684\u53f3\u5b50\u8282\u70b9\u7684$ lz $\u4e3a$ t+\\frac{L+R}{2}-L+1 $\u3002\n\n\u4e0a\u8ff0\u64cd\u4f5c\u5199\u6210\u4ee3\u7801\u5c31\u662f\u8fd9\u6837\uff1a\n\n```cpp\nvoid pushdown(int k){\n\tif(!s[k].lz)\treturn;//\u5982\u679c\u5b83\u7684lz\u4e3a0\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u7ed3\u675f\n\ts[k<<1].lz=s[k].lz;//\u5c06k\u7684\u6807\u8bb0\u4f20\u7ed9\u5de6\u513f\u5b50\n\ts[k<<1|1].lz=s[k<<1].r-s[k<<1].l+1+s[k].lz;//\u5c06k\u7684\u6807\u8bb0\u4f20\u7ed9\u53f3\u513f\u5b50\n\ts[k].lz=0;//\u6e05\u7a7ak\u7684\u6807\u8bb0\n}\n```\n\n\u533a\u95f4\u4fee\u6539\u548c\u5355\u70b9\u67e5\u8be2\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5177\u4f53\u89c1\u6ce8\u91ca\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,a[100005],b[100005];\nstruct node{\n\tint l,r,lz;//\u8282\u70b9\u7684\u7ed3\u6784\u4f53 l:\u5de6\u7aef\u70b9 r:\u53f3\u7aef\u70b9 lz:\u5ef6\u8fdf\u6807\u8bb0\n} s[400020];\nvoid build(int k,int l,int r){//\u5efa\u6811\n\ts[k].l=l;s[k].r=r;s[k].lz=0;\n\tif(l==r)\treturn;//\u5982\u679c\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u8fd4\u56de\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);//\u9012\u5f52\u5de6\u5b50\u6811\n\tbuild(k<<1|1,mid+1,r);//\u9012\u5f52\u53f3\u5b50\u6811\n}\nvoid pushdown(int k){//\u4e0b\u4f20\u64cd\u4f5c\n\tif(!s[k].lz)\treturn;//\u5982\u679c\u5b83\u7684lz\u4e3a0\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u7ed3\u675f\n\ts[k<<1].lz=s[k].lz;//\u5c06k\u7684\u6807\u8bb0\u4f20\u7ed9\u5de6\u513f\u5b50\n\ts[k<<1|1].lz=s[k<<1].r-s[k<<1].l+1+s[k].lz;//\u5c06k\u7684\u6807\u8bb0\u4f20\u7ed9\u53f3\u513f\u5b50\n\ts[k].lz=0;//\u6e05\u7a7ak\u7684\u6807\u8bb0\n}\nvoid change(int k,int l,int r,int L,int R){\n//\u533a\u95f4\u4fee\u6539 k:\u5f53\u524d\u8282\u70b9 \n//l:\u8981\u88ab\u8986\u76d6\u7684b\u6570\u7ec4\u7684\u5de6\u7aef\u70b9 r:\u8981\u88ab\u8986\u76d6\u7684b\u6570\u7ec4\u7684\u53f3\u7aef\u70b9\n//L:\u8981\u8986\u76d6\u7684a\u6570\u7ec4\u7684\u5de6\u7aef\u70b9 R:\u8981\u8986\u76d6\u7684a\u6570\u7ec4\u7684\u53f3\u7aef\u70b9\n\tif(l<=s[k].l&&s[k].r<=r){//\u5982\u679c\u5f53\u524d\u533a\u95f4\u5df2\u7ecf\u88ab\u5305\u542b\u5728\u8981\u4fee\u6539\u7684\u533a\u95f4\u91cc\u9762\u4e86\n\t\ts[k].lz=L;//\u6253\u4e0a\u61d2\u6807\u8bb0\n\t\treturn;\n\t}\n\tpushdown(k);\n\tint mid=(s[k].l+s[k].r)>>1;\n\tif(r<=mid)\t\tchange(k<<1,l,r,L,R);//\u5f85\u4fee\u6539\u533a\u95f4\u5b8c\u5168\u5728mid\u4e4b\u524d\n\telse if(l>mid)\tchange(k<<1|1,l,r,L,R);//\u5f85\u4fee\u6539\u533a\u95f4\u5b8c\u5168\u5728mid\u4e4b\u540e\n\telse\t\t\tchange(k<<1,l,mid,L,L+(mid-l)),//\u5f85\u4fee\u6539\u533a\u95f4\u5728mid\u524d\u7684\u4e00\u90e8\u5206\n\t\t\t\t\tchange(k<<1|1,mid+1,r,R-(r-mid-1),R);//\u5f85\u4fee\u6539\u533a\u95f4\u5728mid\u540e\u7684\u4e00\u90e8\u5206\n}\nint query(int k,int ind){\n\tif(s[k].l==s[k].r){\n\t\tif(!s[k].lz)\treturn b[ind];//\u5982\u679clz\u4e3a0\uff0c\u8868\u793a\u8be5\u8282\u70b9\u4ece\u6765\u6ca1\u6709\u88ab\u8986\u76d6\u8fc7\uff0c\u5c31\u8fd4\u56deb\u6570\u7ec4\u7684\u5f53\u524d\u4f4d\u7f6e\n\t\telse\t\t\treturn a[s[k].lz];//\u5426\u5219\u8fd4\u56dea\u6570\u7ec4\u7684lz\u503c\n\t}\n\tpushdown(k);\n\tint mid=(s[k].l+s[k].r)>>1;\n\tif(ind<=mid)\treturn query(k<<1,ind);//\u5982\u679c\u5f85\u67e5\u8be2\u7684\u70b9\u5728mid\u524d\n\telse\t\t\treturn query(k<<1|1,ind);//\u5982\u679c\u5f85\u67e5\u8be2\u7684\u70b9\u5728mid\u540e\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\tcin>>a[i];\n\tfor(int i=1;i<=n;i++)\tcin>>b[i];\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tint type;\n\t\tcin>>type;\n\t\tif(type==1){\n\t\t\tint x,y,k;cin>>x>>y>>k;\n\t\t\tchange(1,y,y+k-1,x,x+k-1);//\u5c06a\u6570\u7ec4\u7684[x,x+k-1]\u8986\u76d6\u5230b\u6570\u7ec4\u7684[y,y+k-1]\u4f4d\u7f6e\u4e0a\n\t\t}\n\t\telse{\n\t\t\tint i;cin>>i;\n\t\t\tcout<<query(1,i)<<endl;\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1562425394,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF292E \u3010Copying Data\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF292E)\n\n\u53c8\u662f\u4e00\u9053\u6807\u7b7e\u529d\u9000\u9898\u3002\n\n\u770b\u5230\u533a\u95f4\u5904\u7406\u548c $10^5$ \u7684\u6570\u636e\u8303\u56f4\u9996\u5148\u60f3\u5230**\u7ebf\u6bb5\u6811**\u5904\u7406\u3002\n\n\u56e0\u4e3a a \u6570\u7ec4\u548c b \u6570\u7ec4\u7684\u5143\u7d20\u662f\u968f\u673a\u7684\uff0c\u4f46**\u4e0b\u6807**\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 b \u6570\u7ec4\u6bcf\u4e2a\u4e0b\u6807\u5bf9\u5e94\u5230 a \u6570\u7ec4\u7684\u4e0b\u6807\uff08\u6211\u4eec\u7528 0 \u8868\u793a\u6ca1\u6709\u8986\u76d6\uff0c\u6240\u4ee5**\u521d\u59cb\u5316**\u53ea\u8981\u5c06\u503c\u5168\u90e8\u8d4b\u62100\u5373\u53ef\uff09\u3002\n\n\u4f46\u53c8\u56e0\u4e3a\u8fd9\u9898\u7684\u533a\u95f4\u4fee\u6539\u867d\u7136\u662f\u8986\u76d6\u4f46\u5e76\u4e0d\u662f\u5168\u90e8\u8986\u76d6\u6210\u4e00\u4e2a\u503c\uff0c\u800c\u662f\u8986\u76d6\u6210\u4e00\u4e2a**\u516c\u5dee**\u4e3a 1 \u7684\u9012\u589e\u5e8f\u5217\uff0c\u6ca1\u6cd5\u76f4\u63a5\u7ef4\u62a4\u3002\u4e8e\u662f\u6ce8\u610f\u5230**\u516c\u5dee**\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e0b\u6807\u7684**\u5dee\u5206\u5e8f\u5217**\u5e76\u652f\u6301\u533a\u95f4\u6c42\u548c\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u76f4\u63a5\u533a\u95f4\u8986\u76d6\u4e86\uff0c\u6c42\u4e0b\u6807\u53ea\u9700\u8981\u6c42\u548c\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m \\log n)$\uff0c\u5b9e\u73b0\u6709\u4e00\u4e9b\u7ec6\u8282\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002\n\n```cpp\n#include <cstdio>\nusing namespace std;\n\ntypedef long long LL;\n\nconst int maxn = 100015;\n\ninline int read() {\n    int s = 0, f = 1;\n    char ch = getchar();\n    while (ch < 48 || ch > 57) {\n        if (ch == 45) {\n            f = -1;\n        }\n        ch = getchar();\n    }\n    while (ch > 47 && ch < 58) {\n        s = (s << 3) + (s << 1) + ch - 48;\n        ch = getchar();\n    }\n    return s * f;\n}\n\nint n, m, a[maxn], b[maxn];\nbool L[maxn << 2];\nLL diff[maxn << 2], lazy[maxn << 2];\n\nvoid pushup(int id) {\n    diff[id] = diff[id << 1] + diff[id << 1 | 1];\n    return;\n}\n\nvoid pushdown(int id, LL len) {\n    if (L[id]) {\n        lazy[id << 1] = lazy[id << 1 | 1] = lazy[id];\n        diff[id << 1] = lazy[id] * (len - (len >> 1)); // \u5de6\u53f3\u5b69\u5b50\u7684\u533a\u95f4\u957f\u5ea6\u6ce8\u610f\u4e00\u4e0b\n        diff[id << 1 | 1] = lazy[id] * (len >> 1);\n        L[id << 1] = L[id << 1 | 1] = 1;\n        L[id] = 0;\n    }\n    return;\n}\n\nvoid update(int id, int l, int r, int x, int y, LL v) {\n    if (x <= l && r <= y) {\n        diff[id] = v * (r - l + 1);\n        lazy[id] = v;\n        L[id] = 1;\n        return;\n    }\n    pushdown(id, r - l + 1);\n    int mid = (l + r) >> 1;\n    if (x <= mid) {\n        update(id << 1, l, mid, x, y, v);\n    }\n    if (y > mid) {\n        update(id << 1 | 1, mid + 1, r, x, y, v);\n    }\n    pushup(id);\n    return;\n}\n\nLL query(int id, int l, int r, int x, int y) {\n    if (x <= l && r <= y) {\n        return diff[id];\n    }\n    pushdown(id, r - l + 1);\n    int mid = (l + r) >> 1;\n    LL res = 0;\n    if (x <= mid) {\n        res += query(id << 1, l, mid, x, y);\n    }\n    if (y > mid) {\n        res += query(id << 1 | 1, mid + 1, r, x, y);\n    }\n    return res;\n}\n\nint main() {\n    n = read();\n    m = read();\n    for (register int i = 1; i <= n; i++) {\n        a[i] = read();\n    }\n    for (register int i = 1; i <= n; i++) {\n        b[i] = read();\n    }\n    int t, x, y, k, tmp;\n    while (m--) {\n        t = read();\n        if (t - 2) {\n            x = read();\n            y = read();\n            k = read();\n            /*\n            \u533a\u95f4\u4fee\u6539\u8981\u6ce8\u610f\u4e00\u4e0b\uff1a\n            \u4f17\u6240\u5468\u77e5\uff0c\u5dee\u5206\u5e8f\u5217\u533a\u95f4\u4fee\u6539\u9700\u8981\u989d\u5916\u4fee\u6539\u533a\u95f4\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u7684\u503c\n            \u8fd9\u91cc\u6211\u76f4\u63a5\u66b4\u529b\u6c42\u51fa\u9700\u8981\u77e5\u9053\u7684\u4e0b\u6807\u7684\u503c\u7136\u540e\u76f4\u63a5\u505a\u51cf\u6cd5\u5e76\u8d4b\u503c\n            \u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u987a\u5e8f\n            \u56e0\u4e3a\u66b4\u529b\u6c42\u503c\u987b\u5efa\u7acb\u5728\u8be5\u4e0b\u6807\u524d\u7684\u503c\u90fd\u51c6\u786e\u7684\u524d\u63d0\u4e0b\n            \u7136\u800c\u6211\u4eec\u53ea\u4fee\u6539\u4e00\u4e2a\u5dee\u5206\u503c\u7684\u64cd\u4f5c\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u51c6\u786e\u7684\n            \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u53f3\u540e\u5de6\uff0c\u907f\u514d\u8fd9\u79cd\u4e0d\u51c6\u786e\u5bf9\u7b54\u6848\u5e26\u6765\u7684\u5f71\u54cd\n            */\n            if (y + k <= n) { // \u53f3\n                tmp = query(1, 1, n, 1, y + k);\n                update(1, 1, n, y + k, y + k, tmp - x - k + 1);\n            }\n            if (y > 1) { // \u5de6\n                tmp = query(1, 1, n, 1, y - 1);\n                update(1, 1, n, y, y, x - tmp);\n            }\n            else { // \u522b\u5fd8\u4e86\u5904\u7406\u5de6\u7aef\u70b9\u4e0b\u8868\u4e3a 1 \u7684\u7279\u6b8a\u60c5\u51b5\n                update(1, 1, n, y, y, x);\n            }\n            if (k > 1) {\n                update(1, 1, n, y + 1, y + k - 1, 1);\n            }\n        }\n        else {\n            x = read();\n            tmp = query(1, 1, n, 1, x);\n            if (tmp) {\n                printf(\"%d\\n\", a[tmp]);\n            }\n            else {\n                printf(\"%d\\n\", b[x]);\n            }\n        }\n    }\n    return 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1~\n",
        "postTime": 1637991287,
        "uid": 280233,
        "name": "Lee666666",
        "ccfLevel": 5,
        "title": "CF292E \u9898\u89e3"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\n\n## \u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u7528lazy\u6765\u6807\u8bb0\u6709\u65e0\u88ab\u8986\u76d6\n\n\u5982\u679c\u88ab\u8986\u76d6\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u8986\u76d6\u90a3\u4e00\u6bb5\u7684\u5de6\u53f3\u4e0b\u6807\uff0c\u6bcf\u6b21\u5411\u4e0b\u5c31$push$\u4e00\u4e0b\uff0c\u8be2\u95ee\u65f6\u53ea\u9700\u8f93\u51faa[\u4e0b\u6807]\u6216b[\u4e0b\u6807]\u5373\u53ef\n\n\u800c\u66f4\u65b0\u65f6\u7684\u4f4d\u7f6e\u53ea\u8981\u7528\u7ebf\u6bb5\u6811\u5efa\u6811\u65f6\u7684$l,r$\u5373\u53ef\n\n\n```cpp\nvoid change(int rt,int l,int r,int L,int R,int x)//\u66f4\u65b0\n{\n\t\n\tif(l>R||r<L)return;\n\tif(l>=L&&r<=R)\n\t{\n\t\ttr[rt].l=x+(l-L);tr[rt].r=x+(r-L);\n\t\ttr[rt].lazy=1;return;\n\t}\n\tpush(rt);int mid=l+r>>1;\n\tchange(ls,l,mid,L,R,x),change(rs,mid+1,r,L,R,x);\n}\nint query(int rt,int l,int r,int x)//\u67e5\u8be2\n{\n\tif(l>x||r<x)return 0;\n\tif(l==x&&r==x)\n\t{\n\t\tif(tr[rt].lazy==1)return a[tr[rt].l];\n\t\telse return b[l];\n\t}\n\tpush(rt);int mid=l+r>>1;\n\treturn query(ls,l,mid,x)+query(rs,mid+1,r,x);\n}\n```\n\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8986\u76d6\u4f4d\u7f6e\uff0c\u7528\u5efa\u6811\u65f6\u7684$l,r$\u6765\u66f4\u65b0\uff0c\u6bcf\u6b21$push$\u4e00\u4e0b\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nconst int maxn=2e5+5;\n#define ls rt<<1\n#define rs rt<<1|1\nstruct node\n{\n\tint l,r,lazy;\n}tr[maxn*4];\nint a[maxn],b[maxn],c[maxn],n,m,x,y,z,k;\nvoid push(int rt)\n{\n\tif(tr[rt].lazy==1)\n\t{\n\t\ttr[ls].lazy=1,tr[rs].lazy=1;\n\t\ttr[ls].r=tr[rt].l+(tr[ls].r-tr[ls].l),tr[ls].l=tr[rt].l;\n\t\ttr[rs].l=tr[ls].r+1;tr[rs].r=tr[rt].r;\n\t}tr[rt].lazy=0;\n}\nvoid build(int rt,int l,int r)\n{\n\ttr[rt].l=l,tr[rt].r=r;tr[rt].lazy=0;\n\tif(l==r)return;\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n}\nvoid change(int rt,int l,int r,int L,int R,int x)\n{\n\t\n\tif(l>R||r<L)return;\n\tif(l>=L&&r<=R)\n\t{\n\t\ttr[rt].l=x+(l-L);tr[rt].r=x+(r-L);\n\t\ttr[rt].lazy=1;return;\n\t}\n\tpush(rt);int mid=l+r>>1;\n\tchange(ls,l,mid,L,R,x),change(rs,mid+1,r,L,R,x);\n}\nint query(int rt,int l,int r,int x)\n{\n\tif(l>x||r<x)return 0;\n\tif(l==x&&r==x)\n\t{\n\t\tif(tr[rt].lazy==1)return a[tr[rt].l];\n\t\telse return b[l];\n\t}\n\tpush(rt);int mid=l+r>>1;\n\treturn query(ls,l,mid,x)+query(rs,mid+1,r,x);\n}\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<=n;i++)b[i]=read();\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tk=read();\n\t\tif(k==1)x=read(),y=read(),z=read(),change(1,1,n,y,y+z-1,x);\n\t\telse x=read(),printf(\"%d\\n\",query(1,1,n,x));\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1607753154,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF292E \u3010Copying Data\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811+\u5dee\u5206\u3002\n\n\u7528 $k_i$ \u8868\u793a\u6b64\u65f6\u7684 $b_i$ \u7684\u503c\u4e3a $a_{k_i}$\uff0c\u5982\u679c $k_i=0$ \u5219\u8bf4\u660e $b_i$ \u8fd8\u6ca1\u6709\u88ab\u53d8\u8fc7\u3002\u90a3\u4e48\u663e\u7136\u5bf9\u4e8e\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u53ea\u8981\u8ba9 $k_y =x,k_{y+1}=x+1\u2026k_{y+k-1}=x+k-1$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a $k$ \u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5dee\u5206\u3002\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u90a3\u4e48 $k$ \u7684\u5dee\u5206\u6570\u636e $c$ \u5c31\u4f1a\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a$c_y = x - k_{y - 1},c_{y + 1} = c_{y + 2} = \u2026 = c_{ y + k - 1 } = 1, c_{ y + k } = k_{ y + k } - ( x + k - 1)$ \uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a $c$ \u5c31\u53ef\u4ee5\u4e86\u3002\u90a3\u4e48\uff0c$k$ \u4e5f\u5c31\u5f88\u5bb9\u6613\u6c42\u51fa\u6765\u4e86\u3002\n\n[code](https://www.luogu.com.cn/paste/e5o5b8kj)\u3002",
        "postTime": 1606312848,
        "uid": 141179,
        "name": "pigstd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF292E \u3010Copying Data\u3011"
    },
    {
        "content": "[\u4f60\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF292E)\n\n[\u539f\u9898\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/292/E)\n\n## \u5206\u6790\n\u4e00\u773c\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u9898\u5b9e\u9645\u4e0a\u662f\u8ba9\u4f60\u7ef4\u62a4\u533a\u95f4\u8986\u76d6\u3001\u5355\u70b9\u67e5\u8be2\u64cd\u4f5c\u3002\u4e8e\u662f\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n\u8fdb\u4e00\u6b65\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u6b21\u8986\u76d6\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u628a $a_x$ \u53ca\u5176\u540e\u7684 $k-1$ \u4e2a\u5143\u7d20\u8d4b\u7ed9 $b_y$ \u53ca\u5176\u540e\u7684 $k-1$ \u4e2a\u5143\u7d20\u3002\u6211\u4eec\u753b\u4e2a\u56fe\u6765\u7406\u89e3\u4e00\u4e0b\uff1a\n\n![\u6837\u4f8b\uff0c\u4f46\u662f\u4e0d\u5b8c\u5168\u6837\u4f8b](https://cdn.luogu.com.cn/upload/image_hosting/c0it0c2m.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u4e5f\u5c31\u662f $b$ \u6570\u7ec4\u91cc\u7684\u6bcf\u4e00\u4e2a $b_y$ \u5728\u4e00\u6b21\u64cd\u4f5c\u540e\u90fd\u4f1a\u53d8\u6210 $a$ \u6570\u7ec4\u91cc\u7684\u4e00\u4e2a $a_{y+\\Delta}$\u3002\u8fd9\u4e2a $\\Delta$ \u5176\u5b9e\u5c31\u662f\u8fd9\u6b21\u64cd\u4f5c\u7684 $x - y$\u3002\u53ef\u4ee5\u53d1\u73b0 $\\Delta$ \u5176\u5b9e\u662f $b$ \u91cc\u67d0\u6bb5\u533a\u95f4\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u4ee3\u8868\u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6bcf\u4e2a $b_x$ \u90fd\u5373\u5c06\u88ab\u6539\u6210 $a_{x+\\Delta}$\u3002\u6240\u4ee5\u8fd9\u73a9\u610f\u663e\u7136\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u3002\u628a $\\Delta$ \u4f5c\u4e3a\u61d2\u6807\u8bb0\uff0c\u6bcf\u6b21\u5c06 $\\Delta$ \u4e0b\u4f20\u3002\u67e5\u8be2\u65f6\u67e5\u5230\u53f6\u5b50\u5c31\u76f4\u63a5\u8fd4\u56de $a$ \u91cc\u7684\u5bf9\u5e94\u503c\u3002\n\n\u7531\u4e8e $x$ \u548c $y$ \u53ef\u4ee5\u76f8\u7b49\uff0c\u6240\u4ee5 $\\Delta$ \u53ef\u4ee5\u662f $0$\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u80fd\u7528 $0$ \u6807\u8bb0\u533a\u95f4\u6ca1\u6709\u88ab\u8986\u76d6\u8fc7\uff0c\u800c\u8981\u7528\u65e0\u7a77\u5927\u6765\u6807\u8bb0\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\nusing namespace std;\nconst int N = 131072;\nconst int inf = 2147483647;\nint a[N << 2], b[N << 2];\nint tag[N << 2];\nvoid Build(int o, int l, int r) {\n    tag[o] = -inf; // \u521d\u59cb\u5316\u61d2\u6807\u8bb0\uff1a\u8fd9\u91cc\u6ca1\u6709\u88ab\u8986\u76d6\u8fc7\n    if (l == r) \n        return;\n    int mid = (l + r) >> 1;\n    Build(o << 1, l, mid);\n    Build(o << 1 | 1, mid + 1, r);\n}\nvoid pushdown(int o) {\n    if (tag[o] == -inf) \n        return;\n    int t = tag[o];\n    tag[o] = -inf;\n    tag[o << 1] = tag[o << 1 | 1] = t; // \u5de6\u53f3\u513f\u5b50\u90fd\u8981\u79fb \u25b3 \u4f4d\n}\nvoid Change(int o, int l, int r, int L, int R, int d) {\n    if (L <= l && r <= R) {\n        tag[o] = d; // \u8d4b\u4e3a \u25b3\n        return;\n    }\n    pushdown(o);\n    int mid = (l + r) >> 1;\n    if (L <= mid) \n        Change(o << 1, l, mid, L, R, d);\n    if (R > mid) \n        Change(o << 1 | 1, mid + 1, r, L, R, d);\n}\nint Query(int o, int l, int r, int x) {\n    if (l == r) \n        return (tag[o] == -inf ? b[x] : a[x + tag[o]]);\n        // \u5982\u679c\u6ca1\u6709\u88ab\u8986\u76d6\u8fc7\uff0c\u5219\u8fd4\u56de\u539f\u672c\u503c\u3002\u5982\u679c\u88ab\u8986\u76d6\u8fc7\uff0c\u8fd4\u56de a \u91cc\u7684\u5bf9\u5e94\u503c\u3002\n    pushdown(o);\n    int mid = (l + r) >> 1;\n    if (x <= mid) \n        return Query(o << 1, l, mid, x);\n    else \n        return Query(o << 1 | 1, mid + 1, r, x);\n}\nint main() {\n    Build(1, 1, N);\n    int n, m;\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) scanf(\"%d\", a + i);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", b + i);\n    while (m--) {\n        int op, x, y, k;\n        cin >> op;\n        if (op == 1) {\n            cin >> x >> y >> k;\n            Change(1, 1, N, y, y + k - 1, x - y); // \u25b3 = x - y\n        } else {\n            cin >> x;\n            cout << Query(1, 1, N, x) << \"\\n\";\n        }\n    }\n    return 0;\n}\n```\n### \u5b8c\u7ed3\u6492\u82b1~~~",
        "postTime": 1681263765,
        "uid": 573377,
        "name": "forgotmyhandle",
        "ccfLevel": 4,
        "title": "CF292E Copying Data \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u7684\u505a\u6cd5\n\n\u6bcf\u6b21\u7528 $a$ \u4e2d\u7684\u4e00\u6bb5\u533a\u95f4\u8986\u76d6 $b$ \u4e2d\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u52a8\u6001\u67e5\u8be2 $b$ \u4e2d\u67d0\u4e2a\u8282\u70b9\u7684\u503c\u662f\u591a\u5c11\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 $b$ \u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u540e\u4e00\u6b21\u88ab\u8986\u76d6\u7684\u64cd\u4f5c\u662f\u54ea\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u8bb0\u6bcf\u4e2a\u64cd\u4f5c\u4e3a $l,r,k$ \uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u67e5\u8be2\u7684\u90a3\u4e2a\u8282\u70b9\u5b83\u7684\u6700\u540e\u4e00\u6b21\u8986\u76d6\u64cd\u4f5c\u662f $i$ \uff0c\u90a3\u4e48\u5b83\u7684\u503c\u663e\u7136\u5c31\u662f $a[q[i].l+(pos-q[i].r)]$ \u8fd9\u91cc\u7684 $pos$ \u6307\u8fd9\u4e2a\u8282\u70b9\u5728 $b$ \u4e2d\u7684\u4e0b\u6807\u3002\n\n\u7279\u522b\u7684\uff0c\u5f53\u5b83\u6ca1\u6709\u88ab\u8986\u76d6\u65f6\uff0c\u53ea\u9700\u8981\u8f93\u51fa\u539f\u6765 $b$ \u6570\u7ec4\u7684\u503c\u5373\u53ef\u3002\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u533a\u95f4\u8d4b\u503c\uff0c\u5355\u70b9\u67e5\u8be2\u3002\n\n$ODT$ \u53ef\u4ee5\u9ad8\u6548\u5730\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u3002\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\nusing namespace std;\n\ntemplate <class T>\ninline void write(T x)\n{\n    if(x>9)\n    {\n        write(x/10);\n    }\n    putchar(x%10+'0');\n}\n\ninline char nc()\n{\n    static char buf[1000000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++;\n}\n\ninline void read(int &sum)\n{\n    char ch=nc();\n    int tf=0;\n    sum=0;\n    while((ch<'0'||ch>'9')&&(ch!='-')) ch=nc();\n    tf=((ch=='-')&&(ch=nc()));\n    while(ch>='0'&&ch<='9') sum=sum*10+(ch-48),ch=nc();\n    (tf)&&(sum=-sum);\n}\n\nconst int MAXN=1e5+10;\n\nstruct node\n{\n    int l,r,v;\n    node(){}\n    node(int L,int R=-1,int V=0):l(L),r(R),v(V){}\n    bool operator <(const node &o) const\n    {\n        return l<o.l;\n    }\n};\n\nset<node> s;\n\ninline set<node>::iterator split(int pos)\n{\n    set<node>::iterator it=s.lower_bound(node(pos));\n    if(it!=s.end()&&it->l==pos) return it;\n    --it;\n    int L=it->l,R=it->r,V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V));\n    return s.insert(node(pos,R,V)).first;\n}\n\ninline void assignval(int l,int r,int v)\n{\n    set<node>::iterator itr=split(r+1),itl=split(l);\n    s.erase(itl,itr);\n    s.insert(node(l,r,v));\n}\n\nstruct qnode\n{\n    int l,r,k;\n};\n\nqnode q[MAXN];\nint a[MAXN],b[MAXN];\nint n,m,cnt=0;\n\nint main()\n{\n    read(n),read(m);\n    for(int i=1;i<=n;++i)\n        read(a[i]);\n    for(int i=1;i<=n;++i)\n        read(b[i]);\n    s.insert(node(1,n,0));\n    while(m--)\n    {\n        int op;\n        read(op);\n        if(op==1)\n        {\n            ++cnt;\n            read(q[cnt].l),read(q[cnt].r),read(q[cnt].k);\n            assignval(q[cnt].r,q[cnt].r+q[cnt].k-1,cnt);\n        }\n        else\n        {\n            int pos;\n            read(pos);\n            int which=split(pos)->v;\n            if(which==0)\n            {\n                int ans=b[pos];\n                if(ans<0)\n                {\n                    putchar('-');\n                    ans=-ans;\n                }\n                write(ans);\n                putchar('\\n');\n            }\n            else\n            {\n                int ans=a[q[which].l+(pos-q[which].r)];\n                if(ans<0)\n                {\n                    putchar('-');\n                    ans=-ans;\n                }\n                write(ans);\n                putchar('\\n');\n            }\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1571820367,
        "uid": 102473,
        "name": "Setsugesuka",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF292E \u3010Copying Data\u3011"
    },
    {
        "content": "\u5982\u679c\u6211\u4eec\u77e5\u9053\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u6700\u540e\u4e00\u6b21\u662f\u88ab\u54ea\u4e00\u6b21\u64cd\u4f5c\u8986\u76d6\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u503c\u3002\n\n\u7531\u6b64\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u89e3\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u6700\u540e\u4e00\u6b21\u88ab\u54ea\u4e2a\u64cd\u4f5c\u8986\u76d6\u3002\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u533a\u95f4\u8d4b\u503c\uff08\u67d3\u8272\uff09\u95ee\u9898\u3002\u5229\u7528\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u7ef4\u62a4\u597d\u2014\u2014\u6211\u4eec\u6bcf\u4e00\u6b21\u5c06\u4e00\u4e2a\u5bf9\u5e94\u533a\u95f4set\u6210\u64cd\u4f5c\u7f16\u53f7\uff0c\u6bcf\u4e00\u6b21\u8be2\u95ee\u53ea\u9700\u8981\u627e\u51fa\u5bf9\u5e94\u53f6\u8282\u70b9\u7684\u7f16\u53f7\u5c31\u77e5\u9053\u662f\u54ea\u4e00\u6b21\u64cd\u4f5c\uff08\u7279\u6b8a\u7684\uff0c0\u610f\u5473\u7740\u6ca1\u6709\u64cd\u4f5c\uff09\u3002\n\n```cpp\n/*DennyQi 2019*/\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\ninline int read(){\n    int x(0),w(1); char c = getchar();\n    while(c^'-' && (c<'0'||c>'9')) c = getchar();\n    if(c == '-') w = -1, c = getchar();\n    while(c>='0' && c<='9') x = (x<<3) + (x<<1) + c - '0', c = getchar();\n    return x*w;\n}\nint n,m,opt,p,x,Q,a[100010],b[100010],qx[100010],qy[100010],qz[100010],c[400010],set[400010];\ninline void pushdown(int u, int l, int r){\n\tif(!set[u]) return;\n\tc[u<<1] = set[u];\n\tc[u<<1|1] = set[u];\n\tset[u<<1] = set[u];\n\tset[u<<1|1] = set[u];\n\tset[u] = 0;\n}\nint query(int u, int l, int r, int x){\n\tif(l == r){\n\t\treturn c[u];\n\t}\n\tpushdown(u,l,r);\n\tint mid = (l+r)/2;\n\tif(x <= mid) return query(u<<1,l,mid,x);\n\telse return query(u<<1|1,mid+1,r,x);\n}\nvoid modify(int u, int l, int r, int x, int y, int k){\n\tif(r<x || l>y) return;\n\tif(x<=l && r<=y){\n\t\tset[u] = k;\n\t\tc[u] = k;\n\t\treturn;\n\t}\n\tpushdown(u,l,r);\n\tint mid = (l+r)/2;\n\tmodify(u<<1,l,mid,x,y,k);\n\tmodify(u<<1|1,mid+1,r,x,y,k);\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; ++i) a[i] = read();\n\tfor(int i = 1; i <= n; ++i) b[i] = read();\n\tfor(int i = 1; i <= m; ++i){\n\t\topt = read();\n\t\tif(opt == 1){\n\t\t\t++Q;\n\t\t\tqx[Q] = read(), qy[Q] = read(), qz[Q] = read();\n\t\t\tmodify(1,1,n,qy[Q],qy[Q]+qz[Q]-1,Q);\n\t\t}else{\n\t\t\tx = read();\n\t\t\tp = query(1,1,n,x);\n\t\t\tif(!p){\n\t\t\t\tprintf(\"%d\\n\",b[x]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"%d\\n\",a[qx[p]+x-qy[p]]);\t\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1559017770,
        "uid": 115065,
        "name": "DennyQi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF292E \u3010Copying Data\u3011"
    }
]