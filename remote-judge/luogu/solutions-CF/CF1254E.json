[
    {
        "content": "\u8fd9\u4e2a\u9898\uff0c\u7b97\u662f\u601d\u8def\u597d\u60f3\u7ec6\u8282\u5f88\u591a\u7684\u9898\u7684\u5178\u578b...\u4e0d\u8fc7\u6bd4\u8d77\u5176\u4ed6\u7684\u76f8\u540c\u7c7b\u578b\u7684\u9898\u6765\u8bf4\uff0c\u8fd9\u4e2a\u9898\u597d\u5199\u4e00\u4e9b\u5c31\u662f\u4e86...\n\n\u5148\u60f3\u60f3\u5927\u81f4\u505a\u6cd5\uff1a\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u53ea\u8981\u5176\u6240\u6709\u51fa\u8fb9\u7684\u76f8\u5bf9\u987a\u5e8f\u786e\u5b9a\u4e86\uff0c\u5176\u6700\u7ec8\u5c40\u9762\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u300c\u94a6\u5b9a\u6570\u5b57 $x$ \u51fa\u73b0\u5728\u4f4d\u7f6e $i$ \u4e0a\u300d\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u6210\u5982\u4e0b\u7684\u4e00\u4e9b\u9650\u5236\u6761\u4ef6\uff1a\n\n- \u7f16\u53f7\u4e3a $x$ \u7684\u70b9\u7b2c\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u8fb9\u662f\u8c01\u3002\n- \u7f16\u53f7\u4e3a $i$ \u7684\u70b9\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u8fb9\u662f\u8c01\u3002\n- $x$ \u5230 $i$ \u7684\u94fe\u4e0a\uff0c\u76f8\u90bb\u4e24\u6761\u8fb9\u4e2d\uff08\u94a6\u5b9a\u9760\u8fd1 $x$ \u7684\u662f $A$\uff0c\u53e6\u4e00\u4e2a\u4e3a $B$\uff09$A$ \u88ab\u5220\u9664\u4e4b\u540e\uff0c$B$ \u9700\u8981\u7acb\u5373\u88ab\u5220\u9664\u3002\uff08\u53ef\u4ee5\u770b\u505a\u662f\u8fb9 $A$ \u5411\u8fb9 $B$ \u8fde\u4e86\u4e00\u6761\u6709\u5411\u8fb9\uff09\n\n\u7136\u540e\u6ce8\u610f\u5230\uff0c\u8fd9\u79cd\u5220\u8fb9\u7684\u987a\u5e8f\uff0c\u5728\u4e92\u4e0d\u51b2\u7a81\u7684\u60c5\u51b5\u4e0b\uff0c\u81f3\u591a\u53ea\u80fd\u52a0\u5165 $O(n)$ \u7ea7\u522b\u7684\u9650\u5236\u6761\u4ef6\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u6b21\u66b4\u529b\u626b $x$ \u5230 $i$ \u7684\u94fe\uff0c\u7136\u540e\u5224\u65ad\u52a0\u5165\u9650\u5236\u6761\u4ef6\u540e\u662f\u5426\u4f1a\u5bfc\u81f4\u4e0d\u5408\u6cd5\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u6765\u4ed4\u7ec6\u5206\u6790\u4e0d\u5408\u6cd5\u7684\u82e5\u5e72\u60c5\u51b5\uff1a\n\n- $x$\uff08$x \\ge 0$\uff09\u5728\u7ed9\u51fa\u7684 $a$ \u5e8f\u5217\u4e2d\u51fa\u73b0\u4e24\u6b21\u4ee5\u4e0a\uff0c\u4e00\u5b9a\u4e0d\u5408\u6cd5\uff1b\u89e3\u51b3\u65b9\u6848\uff1a\u5f00\u4e2a\u6876\u8bb0\u5f55\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n- \u9650\u5236\u6761\u4ef6\u6210\u73af\uff0c\u4e00\u5b9a\u4e0d\u5408\u6cd5\uff1b\u89e3\u51b3\u65b9\u6848\uff1a\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e0b\u9650\u5236\u6761\u4ef6\u8fde\u6210\u7684\u94fe\u96c6\u5408\u5373\u53ef\u3002\n- \u5f53\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u8fb9\u8fde\u6210\u4e86\u94fe\uff0c\u4e14\u8fd9\u4e2a\u70b9\u8fd8\u5b58\u5728\u5176\u4ed6\u8fb9\u4e0d\u5728\u8fd9\u6761\u94fe\u4e0a\uff08\u6216\u8005\u8bf4\uff0c\u8fd9\u4e2a\u70b9\u7684\u9650\u5236\u8fde\u6210\u7684\u94fe\u6570 $\\ge 2$\uff09\uff0c\u5219\u4e00\u5b9a\u4e0d\u5408\u6cd5\uff1b\u89e3\u51b3\u65b9\u6848\uff1a\u5224\u65ad\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u5426\u5728\u4e00\u4e2a\u94fe\u96c6\u5408\u4e2d\uff0c\u5982\u679c\u5728\u5c31\u5224\u65ad\u94fe\u6570\u3002\n\n\u5982\u679c\u4e0d\u5b58\u5728\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff0c\u5219\u9700\u8981\u6c42\u51fa\u6ee1\u8db3\u9650\u5236\u7684\u65b9\u6848\u6570\u3002\u8fd9\u4e2a\u65b9\u6848\u6570\u975e\u5e38\u597d\u6c42\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u9650\u5236\u6761\u4ef6\u8fde\u51fa\u7684\u94fe\u6570\uff08\u8bb0\u4e3a $S_i$\uff09\uff0c\u5219\u6700\u540e\u7684\u65b9\u6848\u6570\u5373\u4e3a\uff1a$\\prod_{i=1}^{n}S_i!$\u3002\n\n$\\rm Code$\uff1a\n\n```cpp\nconst int MAXN = 500010;\nconst int mod = 1e9 + 7;\n\nint n, flag;\nint tot = 1;\nint fi[MAXN];\nint deg[MAXN]; // \u521d\u59cb\u9650\u5236\u6761\u4ef6\u8fde\u51fa\u94fe\u6570\u5373\u4e3a\u5ea6\u6570\uff0c\u6240\u4ee5\u7528\u4e86 deg \u8868\u793a\u94fe\u6570\nint ne[MAXN << 1];\nint to[MAXN << 1];\n\ninline void Link(int u, int v) {\n\ttot++;\n\t++deg[u];\n\tto[tot] = v;\n\tne[tot] = fi[u];\n\tfi[u] = tot;\n}\n\nint st[MAXN];\nint ed[MAXN]; // \u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u8fb9\nint fa[MAXN];\nint vis[MAXN]; // \u6876\nint fac[MAXN];\nint dep[MAXN];\nint tof[MAXN]; // \u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u7236\u8fb9\u7f16\u53f7\nint L[MAXN << 1];\nint R[MAXN << 1];\nint f[MAXN << 1];\n\ninline int find(int x) { return f[x] == x ? x : f[x] = find(f[x]); }\ninline int Merge(int x, int y) { return x = find(x), y = find(y), x == y ? 1 : (f[x] = y, 0); }\n\ninline void dfs(int x, int la) {\n\tdep[x] = dep[la] + 1, fa[x] = la;\n\tfor(int i = fi[x]; i; i = ne[i]) {\n\t\tint u = to[i];\n\t\tif(u == la) { tof[x] = i; continue; }\n\t\tdfs(u, x);\n\t}\n}\n\ninline void Solve(int u, int v) {\n\tqueue<int>q; stack<int>s; int St = u, Ed = v;\n\twhile(dep[u] > dep[v]) --deg[u], q.push(tof[u]), u = fa[u];\n\twhile(dep[u] < dep[v]) --deg[v], s.push(tof[v]), v = fa[v];\n\twhile(u != v) {\n\t\t--deg[u], q.push(tof[u]), u = fa[u];\n\t\t--deg[v], s.push(tof[v]), v = fa[v];\n\t} --deg[u]; // \u4ee5\u4e0a\u5de5\u4f5c\u4e3a\uff0c\u626b\u51fa\u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u5e76\u4e14\u7531\u4e8e\u6bcf\u4e2a\u70b9\u4e0a\u7684\u9650\u5236\u90fd\u591a\u4e86\u4e00\uff0c\u5219\u4e0d\u8003\u8651\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b\u94fe\u6570\u90fd\u4f1a -1\n\twhile(!s.empty()) q.push(s.top() ^ 1), s.pop();\n\tint las = q.front(); q.pop();\n\tif(st[St] || L[las]) flag = 1; // \u5982\u679c\u8fd9\u6761\u8fb9\u5df2\u7ecf\u94a6\u5b9a\u4e86\u4e00\u4e2a\u5728\u5176\u4e4b\u540e\u5220\u9664\u7684\u8fb9\uff0c\u6216\u8005\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u6709\u4e86\u7b2c\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u8fb9\uff0c\u5219\u4e0d\u5408\u6cd5\u3002\u51fd\u6570\u4e2d\u5176\u4ed6\u7684\u5224\u65ad\u7c7b\u4f3c\u3002\n\tst[St] = las, L[las] = -1;\n\twhile(!q.empty()) {\n\t\tint x = q.front(); q.pop(), las ^= 1;\n\t\tif(R[las] || L[x] || Merge(x, las)) flag = 1;\n\t\tL[x] = las, R[las] = x, las = x;\n\t} las ^= 1;\n\tif(ed[Ed] || R[las]) flag = 1;\n\ted[Ed] = las, R[las] = -1;\n}\n\nint main() {\n\tn = ri, fac[0] = 1;\n\tfor(int i = 1; i <= n; i++) fac[i] = 1LL * fac[i - 1] * i % mod;\n\tfor(int i = 1; i < n; i++) {\n\t\tint u = ri, v = ri;\n\t\tLink(u, v), Link(v, u);\n\t} dfs(1, 0);\n\tfor(int i = 2; i <= tot; i++) f[i] = i;\n\tfor(int i = 1; i <= n; i++) {\n\t\tint x = ri; // x --> i\n\t\tif(!x) continue;\n\t\tif(vis[x] || x == i) { flag = 1; break; }\n\t\tvis[x] = 1, Solve(x, i);\n\t\tif(flag) break;\n\t} int res = !flag;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(st[i] && ed[i]) {\n\t\t\tif(find(st[i]) != find(ed[i])) res = 1LL * res * fac[deg[i]] % mod;\n\t\t\telse res *= deg[i] == -1; // \u7531\u4e8e\u300c\u94a6\u5b9a\u4e00\u6761\u8fb9\u662f\u7b2c\u4e00\u4e2a/\u6700\u540e\u4e00\u4e2a\u5220\u9664\u300d\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6\u4e5f\u4f1a\u4ee4\u6392\u5217\u4e2d\u53ef\u81ea\u7531\u9009\u62e9\u4f4d\u7f6e\u7684\u94fe -1\uff0c\u6240\u4ee5\u6211\u4e5f\u8ba9\u8fd9\u79cd\u60c5\u51b5\u7684 deg-1 \u4e86\u3002\u6240\u4ee5\u5728\u77e5\u9053\u4e86\u65e2\u6709\u5f00\u5934\u4e5f\u6709\u7ed3\u5c3e\u7684\u60c5\u51b5\u4e0b\uff0c\u94fe\u6570\u4e3a\u4e00\u7b49\u4ef7\u4e8e deg=-1\u3002\n\t\t} else res = 1LL * res * fac[deg[i]] % mod;\n\t} cout << res << endl;\n\treturn 0;\n}\n```",
        "postTime": 1585101659,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1254E \u3010Send Tree to Charlie\u3011"
    },
    {
        "content": "\u4e00\u9053\u8ddf`CSP`\u7684\u67d0\u9053\u9898\u5f88\u50cf\u7684\u9898\u3002\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u540e\u6784\u6210\u7684\u6811\u7684\u5f62\u6001\u4e00\u6837\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u800c\u8a00\u5b83\u8fde\u51fa\u53bb\u7684\u8fb9\u7684\u64cd\u4f5c\u7684\u76f8\u5bf9\u987a\u5e8f\u56fa\u5b9a\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u628a\u6bcf\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u8fb9\u7684\u76f8\u5bf9\u987a\u5e8f\u7684\u65b9\u6848\u6570\u6c42\u51fa\u6765\u4e4b\u540e\uff0c\u6bcf\u4e2a\u70b9\u7684\u65b9\u6848\u4e58\u8d77\u6765\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u8003\u8651\u4e00\u6761\u8def\u5f84\u5bf9\u8fd9\u4e9b\u8fb9\u7684\u76f8\u5bf9\u987a\u5e8f\u6709\u4ec0\u4e48\u5f71\u54cd\uff1a\n\n- \u8d77\u70b9\u8fde\u51fa\u53bb\u7684\u8fd9\u6761\u8fb9\u4e00\u5b9a\u662f\u8fd9\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u8fb9\u4e2d\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u7684\u3002\n- \u8fde\u5411\u7ec8\u70b9\u7684\u8fd9\u6761\u8fb9\u4e00\u5b9a\u662f\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u8fb9\u4e2d\u6700\u540e\u4e00\u4e2a\u88ab\u64cd\u4f5c\u7684\u3002\n- \u5bf9\u4e8e\u4e2d\u95f4\u7684\u70b9\uff0c\u8fde\u5411\u5b83\u7684\u8fb9\u64cd\u4f5c\u4e4b\u540e\u4e00\u5b9a\u9a6c\u4e0a\u63a5\u7740\u5b83\u8fde\u51fa\u53bb\u7684\u8fb9\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u8fb9\uff0c\u4e00\u5b9a\u6784\u6210\u4e86\u82e5\u5e72\u6761\u94fe\uff08\u5982\u679c\u4e0d\u6784\u6210\u94fe\u663e\u7136\u4e0d\u5408\u6cd5\uff09\uff0c\u8fd9\u4e9b\u94fe\u9664\u4e86\u94a6\u5b9a\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u662f\u53ef\u4ee5\u4efb\u610f\u6392\u5217\u7684\uff0c\u4e8e\u662f\u8fd9\u4e2a\u70b9\u7684\u65b9\u6848\u5c31\u662f\u53ef\u4ee5\u4efb\u610f\u79fb\u52a8\u7684\u94fe\u7684\u6570\u91cf\u7684\u9636\u4e58\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u8ba1\u7b97\u51fa\u6765\u65b9\u6848\u4e58\u8d77\u6765\u5373\u53ef\u3002\n\n\u5b9e\u73b0\u6709\u70b9\u6076\u5fc3\u3002\n\n\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 500010\n#define mod 1000000007\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>pii;\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch-'0'<0||ch-'0'>9){if(ch=='-') f=-1;ch=getchar();}\n    while(ch-'0'>=0&&ch-'0'<=9){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n;\nint deg[maxn];\nint head[maxn],nxt[maxn*2],to[maxn*2],tot;\nvoid add(int u,int v)\n{\n    tot++;\n    nxt[tot]=head[u];\n    head[u]=tot;\n    to[tot]=v;\n}\nint dep[maxn],up[maxn][22],fa_id[maxn],fa[maxn];\nvoid dfs(int x,int las)\n{\n    for(int i=head[x];i;i=nxt[i])\n    {\n        if(to[i]==las)  continue;\n        fa[to[i]]=x;\n        dep[to[i]]=dep[x]+1;\n        up[to[i]][0]=x;\n        fa_id[to[i]]=(i+1)/2;\n        dfs(to[i],x);\n    }\n}\nint LCA(int x,int y)\n{\n    if(dep[x]<dep[y])  swap(x,y);\n    for(int i=20;i>=0;i--)\n      if(dep[y]+(1<<i)<=dep[x])  x=up[x][i];\n    if(x==y)  return x;\n    for(int i=20;i>=0;i--)\n      if(up[x][i]!=up[y][i])  x=up[x][i],y=up[y][i];\n    return up[x][0];\n}\nint get_dis(int x,int y)\n{\n    return dep[x]+dep[y]-2*dep[LCA(x,y)];\n}\nint a[maxn];\nint en[maxn],st[maxn];\nvector<pii>E[maxn];\nvector<int>V,e[maxn];\nint get_path(int x,int lca,int ty)\n{\n    if(x==lca)  return 0;\n    while(fa[x]!=lca)\n    {\n        int y=fa[x];\n        if(!ty)  E[y].push_back(mp(fa_id[x],fa_id[fa[x]]));\n        else     E[y].push_back(mp(fa_id[fa[x]],fa_id[x]));\n        x=y;\n    }\n    return x;\n}\nint deg_in[maxn],deg_out[maxn],col[maxn];\nbool check()\n{\n    for(int i=0;i<V.size();i++)\n      if(deg[V[i]]>2)  return true;\n    return false;\n}\nqueue<int>q;\nbool top_sort(int id)\n{\n    for(int i=0;i<V.size();i++)  deg[V[i]]=0;\n    for(int i=0;i<E[id].size();i++)  deg[E[id][i].se]++;\n    for(int i=0;i<V.size();i++)\n      if(!deg[V[i]])  q.push(V[i]),col[V[i]]=V[i];\n    int cnt=0;\n    while(q.size())\n    {\n        int now=q.front();q.pop();cnt++;\n        for(int i=0;i<e[now].size();i++)\n        {\n            deg[e[now][i]]--;\n            if(!deg[e[now][i]])  col[e[now][i]]=col[now],q.push(e[now][i]);\n        }\n    }\n    return (cnt!=V.size());\n}\nint fac[maxn];\nint solve(int id)\n{\n    V.clear();\n    for(int i=head[id];i;i=nxt[i])  V.push_back((i+1)>>1);\n    for(int i=0;i<V.size();i++)  deg_in[V[i]]=deg_out[V[i]]=deg[V[i]]=0;\n    for(int i=0;i<V.size();i++)  e[V[i]].clear();\n    for(int i=0;i<E[id].size();i++)\n    {\n        deg_out[E[id][i].fi]++,deg_in[E[id][i].se]++;\n        deg[E[id][i].fi]++,deg[E[id][i].se]++;\n        e[E[id][i].fi].push_back(E[id][i].se);\n    }\n    if(check())  puts(\"0\"),exit(0);\n    if(top_sort(id))  puts(\"0\"),exit(0);\n    if(st[id]&&deg_in[st[id]])  puts(\"0\"),exit(0);\n    if(en[id]&&deg_out[en[id]])  puts(\"0\"),exit(0);\n    int cnt=0;\n    for(int i=0;i<V.size();i++)\n      if(!deg_in[V[i]])  cnt++;\n    if(st[id]&&en[id]&&col[st[id]]==col[en[id]])\n    {\n        if(cnt==1)  return 1;\n        else        puts(\"0\"),exit(0);\n    }\n    return fac[cnt-(st[id]!=0)-(en[id]!=0)];\n}\nint ans=1;\nint main()\n{\n    n=read();\n    fac[0]=1;\n    for(int i=1;i<=n;i++)  fac[i]=1ll*fac[i-1]*i%mod;\n    for(int i=1;i<n;i++)  \n    {\n        int q=read(),w=read();\n        add(q,w);add(w,q);\n    }\n    dfs(1,0);\n    for(int j=1;j<=20;j++)\n      for(int i=1;i<=n;i++)  up[i][j]=up[up[i][j-1]][j-1];\n    for(int i=1;i<=n;i++)  a[i]=read();\n    ll sum=0;\n    for(int i=1;i<=n;i++)\n      if(a[i])  sum+=get_dis(i,a[i]);\n    if(sum>2*n-2)  return puts(\"0\"),0;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i])\n        {\n            if(i==a[i])   return puts(\"0\"),0;\n            int lca=LCA(i,a[i]);\n            int u=get_path(a[i],lca,0);\n            int v=get_path(i,lca,1);\n            if(lca!=i&&lca!=a[i])  E[lca].push_back(mp(fa_id[u],fa_id[v]));\n            if(st[a[i]]||en[i])  return puts(\"0\"),0;\n            if(lca==a[i])  st[a[i]]=fa_id[v];\n            else           st[a[i]]=fa_id[a[i]];\n            if(lca==i)     en[i]=fa_id[u];\n            else           en[i]=fa_id[i];\n        }\n    }\n    for(int i=1;i<=n;i++)  ans=1ll*ans*solve(i)%mod;\n    cout<<ans<<endl;\n    return 0;\n}  \n```",
        "postTime": 1585048681,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1254E \u3010Send Tree to Charlie\u3011"
    },
    {
        "content": "- \u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u521d\u59cb\u65f6\u7b2c $i$ \u4e2a\u8282\u70b9\u4e0a\u6709\u4e00\u4e2a\u6570\u5b57 $i$\u3002\n- \u6bcf\u6b21\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u6761\u672a\u88ab\u5220\u9664\u7684\u8fb9\uff0c\u4ea4\u6362\u8fd9\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u4e0a\u7684\u6570\u5b57\u540e\uff0c\u5220\u9664\u8fd9\u6761\u8fb9\u3002\n- \u73b0\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u4e0a\u82e5\u4e0d\u4e3a $0$\uff0c\u5219\u4ee3\u8868\u8981\u6c42\u6700\u7ec8\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u8981\u4e3a $a_i$\u3002\u5426\u5219\u6ca1\u6709\u7279\u6b8a\u8981\u6c42\u3002\n- \u8bd5\u6c42\u51fa\uff0c\u6267\u884c $n-1$ \u6b21\u64cd\u4f5c\u4e4b\u540e\uff0c\u6709\u591a\u5c11\u79cd\u6700\u7ec8\u5c40\u9762\u6ee1\u8db3\u5e8f\u5217 $a$ \u7684\u8981\u6c42\u3002\u7b54\u6848\u5bf9 $10^9+7$ \u53d6\u6a21\u3002\n- $2 \\leq n \\leq 5 \\times 10^5$\uff0c$0 \\leq a_i \\leq n$\u3002\n\n\u8003\u8651\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\uff1a\n\n- $a_i=0$ \u4e14\u5f62\u6001\u662f\u83ca\u82b1\u3002\u7b54\u6848\u663e\u7136\u662f $(n-1)!$\u3002\n- $a_i=0$ \u4e14\u5f62\u6001\u662f\u94fe\u3002\u7b54\u6848\u6ca1\u90a3\u4e48\u663e\u7136\u3002\u4e0d\u59a8\u8003\u8651\u6bcf\u4e2a\u70b9\u6700\u7ec8\u4f1a\u53bb\u5411\u54ea\u91cc\uff0c\u5047\u8bbe\u5176\u4e0d\u662f\u7aef\u70b9\uff0c\u5219\u7b2c\u4e00\u6b65\u4f1a\u79fb\u5230\u4e24\u7aef\u7684\u8fb9\u4e2d\u5148\u88ab\u64cd\u4f5c\u7684\u4e00\u7aef\uff0c\u76f4\u5230\u64cd\u4f5c\u540e\u53e6\u4e00\u6761\u8fb9\u5df2\u7ecf\u88ab\u64cd\u4f5c\u4e86\uff0c\u5219\u505c\u6b62\u5728\u5f53\u524d\u70b9\u3002\n- \u53d1\u73b0\u6b64\u65f6\u5b83\u5230\u8fbe\u7684\u4f4d\u7f6e\u4ec5\u548c\u6bcf\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u4e24\u6761\u8fb9\u64cd\u4f5c\u7684\u5148\u540e\u987a\u5e8f\u6709\u5173\uff0c\u800c\u4e0e\u6bcf\u4e2a\u70b9\u76f8\u8fde\u7684\u8fb9\u7684\u5148\u540e\u987a\u5e8f\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\uff1a\u628a\u6bcf\u4e2a\u70b9\u8fde\u7740\u7684\u8fb9\u6839\u636e\u5b9a\u597d\u7684\u987a\u5e8f\u8fde\u51fa\u6709\u5411\u8fb9\u8868\u793a\u5148\u540e\u5173\u7cfb\uff0c\u4e0d\u4f1a\u8fde\u51fa\u73af\uff0c\u5219\u53ef\u4ee5\u62d3\u6251\u6392\u5e8f\u6784\u9020\u4e00\u79cd\u65b9\u6848\u3002\u5219\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7b54\u6848\u662f $2^{n-2}$\u3002\n\n\u5219\u5f97\u51fa\u4e00\u6761\u6027\u8d28\uff1a\u6811\u7684\u6700\u7ec8\u5f62\u6001\u4ec5\u4e0e\u6bcf\u4e2a\u70b9\u90bb\u8fb9\u7684\u64cd\u4f5c\u987a\u5e8f\u6709\u5173\uff0c\u70b9\u4e0e\u70b9\u4e4b\u95f4\u72ec\u7acb\u3002\n\n$a_i=0$ \u65f6\u7b54\u6848\u662f $\\prod (deg_u!)$\uff0c\u5982\u679c\u80fd\u6c42\u51fa\u6bcf\u4e2a\u70b9\u90bb\u8fb9\u7684\u64cd\u4f5c\u987a\u5e8f\u4e2a\u6570\uff0c\u5176\u4e58\u79ef\u5c31\u662f\u7b54\u6848\u3002\u7531\u6b64\uff0c\u8003\u8651\u5f53\u8981\u6c42\u300c\u6570\u5b57 $u$ \u6700\u7ec8\u505c\u5728\u7ed3\u70b9 $v$\u300d\u65f6\u5bf9\u64cd\u4f5c\u7684\u5f71\u54cd\uff08\u8bbe\u8def\u5f84 $u\\to v$ \u4f9d\u6b21\u7ecf\u8fc7 $u,x_1,x_2,\\cdots x_k,v$\uff0c$k\\ge 0$\uff09\uff1a\n\n- \u8fb9 $(u,x_1)$ \u662f\u70b9 $u$ \u9996\u6b21\u64cd\u4f5c\u7684\u8fb9\u3002\n- \u8fb9 $(x_k,v)$ \u662f\u70b9 $v$ \u6700\u540e\u64cd\u4f5c\u7684\u8fb9\u3002\n- \u8fb9 $(x_1,u)$ \u64cd\u4f5c\u540e\uff0c\u4e0b\u4e00\u4e2a\u5173\u4e8e $x_1$ \u7684\u64cd\u4f5c\u4e00\u5b9a\u662f $(x_1,x_2)$\u3002\n\n\u4e8e\u662f\u5e26\u6765\u7684\u9650\u5236\u7c7b\u578b\u6709\uff1a\n\n1. \u56fa\u5b9a\u70b9 $u$ \u7b2c\u4e00\u6b21\u64cd\u4f5c\u7684\u8fb9\u3002\n2. \u56fa\u5b9a\u70b9 $u$ \u6700\u540e\u4e00\u6b21\u64cd\u4f5c\u7684\u8fb9\u3002\n3. \u56fa\u5b9a\u70b9 $u$ \u64cd\u4f5c\u8fb9 $e_1$ \u540e\u4e0b\u4e00\u6b21\u64cd\u4f5c\u8fb9 $e_2$\u3002\n\n\u5219\u5bf9\u4e8e\u7c7b\u578b 3 \u7684\u9650\u5236\uff0c\u70b9 $u$ \u7684\u90bb\u8fb9\u5e94\u8be5\u5f62\u6210\u82e5\u5e72\u6761\u94fe\u7684\u9650\u5236\uff0c\u8868\u793a\u4e00\u65e6\u64cd\u4f5c\u94fe\u5934\uff0c\u63a5\u4e0b\u6765\u5c31\u4f1a\u4f9d\u6b21\u64cd\u4f5c\u8fd9\u6761\u94fe\u91cc\u7684\u6240\u6709\u8fb9\uff0c\u53ef\u4ee5\u628a\u5b83\u4eec\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u5bf9\u4e8e\u7c7b\u578b 1,2 \u7684\u9650\u5236\uff0c\u5219\u5bf9\u5e94\u4e86\u5176\u5bf9\u5e94\u94fe\u4e0d\u80fd\u4efb\u610f\u91cd\u6392\uff0c\u5219\u5982\u679c\u6709\u89e3\uff0c\u4e00\u4e2a\u70b9\u90bb\u8fb9\u7684\u64cd\u4f5c\u987a\u5e8f\u5e94\u8be5\u6709 $c!$ \u79cd\uff0c\u5176\u4e2d $c$ \u662f\u6ca1\u88ab\u5f3a\u5236\u5f00\u5934\u6216\u7ed3\u5c3e\u94fe\u7684\u6761\u6570\u3002\n\n\u8ba8\u8bba\u4e00\u4e9b\u660e\u663e\u7684\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff1a\n\n- \u5148\u540e\u5173\u7cfb\u7ec4\u6210\u7684\u4e0d\u662f\u94fe\u7ed3\u6784\uff0c\u5373\u4e00\u6761\u8fb9\u6709\u591a\u4e2a\u540e\u7ee7\u6216\u591a\u4e2a\u524d\u9a71\u3002\n- $u$ \u9996\u6b21\u64cd\u4f5c\u7684\u8fb9\u4e0d\u6b62\u4e00\u6761\uff0c\u5373\u8d85\u8fc7\u4e00\u4e2a $a_i=u$\u3002\n\n\u53d1\u73b0\u540e\u7ee7\u5173\u7cfb\u53ea\u6709\u81f3\u591a $O(n)$ \u6761\uff0c\u6240\u4ee5\u53ef\u4ee5\u66b4\u529b\u5730\u628a\u6bcf\u6761\u94fe\u62c9\u51fa\u6765\u6dfb\u52a0\u540e\u7ee7\u5173\u7cfb\uff0c\u8fd9\u4fdd\u8bc1\u4e86\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\u4e0d\u8fc7\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff1a\n\n- \u540e\u7ee7\u5173\u7cfb\u6210\u73af\u3002\n- \u5f3a\u5236\u5f00\u5934\u548c\u5f3a\u5236\u7ed3\u5c3e\u7684\u8fb9\u5728\u540c\u4e00\u6761\u94fe\u4e2d\uff0c\u4f46\u6ca1\u6709\u8986\u76d6\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u8fb9\uff0c\u5bfc\u81f4\u90bb\u8fb9\u65e0\u6cd5\u63d2\u5165\u3002\n\n\u5224\u6389\u8fd9\u4e9b\u60c5\u51b5\u5c31\u80fd\u8fc7\uff0c\u4e0d\u8fc7\u4e00\u4e2a\u53ef\u80fd\u8ba8\u8bba\u5f97\u66f4\u5c11\u7684\u5199\u6cd5\u662f\u62d3\u6251\u6392\u5e8f\u3002",
        "postTime": 1667893115,
        "uid": 447750,
        "name": "luogubot",
        "ccfLevel": 0,
        "title": "CF1254E"
    }
]