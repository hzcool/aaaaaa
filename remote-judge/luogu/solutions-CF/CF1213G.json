[
    {
        "content": "# [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1213G)\n## \u9898\u76ee\u63cf\u8ff0\n\n- \u7ed9\u51fa\u4e00\u68f5 $n (1 \\leq n \\leq 2 \\times 10 ^ 5)$ \u4e2a\u8282\u70b9\u7684\u5e26\u6743\u6811\u3002\n- \u8bf7\u6c42\u51fa\u6700\u5927\u8fb9\u6743\u4e0d\u8d85\u8fc7 $q (1 \\leq q \\leq 2 \\times 10 ^ 5)$ \u7684\u7b80\u5355\u8def\u5f84\u6570\u91cf\u3002\n\n\n## \u5206\u6790\n\u8fd9\u662f\u4e00\u9053 **\u5e76\u67e5\u96c6** \u597d\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u660e\u767d\u5f53\u7b2c $i$ \u6761\u8fb9\u7684\u8fb9\u6743\u4f5c\u4e3a\u7b80\u5355\u8def\u5f84\u4e2d\u6700\u5927\u7684\u8fb9\u6743\u65f6\uff0c\u6b64\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u6743\u90fd\u5e94\u4e0d\u5927\u4e8e\u6b64\u7b2c $i$ \u6761\u8fb9\u7684\u8fb9\u6743\u3002\u7531\u6b64\uff0c\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u5148\u5c06\u6bcf\u4e00\u6761\u8fb9\u6309\u8fb9\u6743\u5347\u5e8f\u6392\u5e8f\uff0c\u518d\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\u3002\u505a\u7b2c $i$ \u6761\u8fb9\u65f6\uff0c\u8bbe $sz[u]$ \u8868\u793a\u8282\u70b9 $u$ \u6240\u5728\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u5219\u5b83\u5bf9\u6743\u503c $w_i$ \u7684\u8d21\u732e\u4e3a $sz_{u_i} \\times sz_{v_i}$\uff0c\u7136\u540e\u7528 **\u5e76\u67e5\u96c6** \u5408\u5e76\u5de6\u53f3\u533a\u5757\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n\u9898\u76ee\u4e2d\u8ba9\u6211\u4eec\u6c42\u6700\u5927\u6743\u503c\u4e0d\u5927\u4e8e $q$ \u7684\u7b80\u5355\u8def\u5f84\u6570\u91cf\uff0c\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u6570\u7ec4 $ans$ \u4fdd\u5b58\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6743\u503c\u7684\u6570\u91cf\uff0c\u518d\u5bf9\u5176\u8fdb\u884c\u524d\u7f00\u548c\uff0c\u5f97\u51fa\u9898\u76ee\u6240\u6c42\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n + m)$\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int mxn = 2e5;\nconst int N = mxn + 10;\nll ans[N]; int n, m, fx, fy, sz[N], f[N], x;\nstruct node { int u, v, w; } e[N];//\u90bb\u63a5\u8868\nint get_fa(int x) { if(x == f[x]) return x; return f[x] = get_fa(f[x]); }//\u90bb\u63a5\u8868\u5efa\u8fb9\nbool cmp(node pre, node nxt) { return pre.w < nxt.w; }\nsigned main() {\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tcin >> n >> m;\n\tfor(int i = 1; i < n; ++ i) cin >> e[i].u >> e[i].v >> e[i].w;\n\tsort(e + 1, e + n, cmp);//\u5bf9\u8fb9\u6309\u6743\u503c\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\n\tfor(int i = 1; i <= n; ++ i) f[i] = i, sz[i] = 1;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\tfor(int i = 1; i < n; ++ i) {\n\t\tfx = get_fa(e[i].u), fy = get_fa(e[i].v);//\u6c42\u5f97\u7956\u5148\n\t\tans[e[i].w] += (ll) sz[fx] * sz[fy];//\u8ba1\u7b97\u8d21\u732e\n\t\tf[fx] = fy, sz[fy] += sz[fx];//\u5408\u5e76\u533a\u5757\n\t}\n\tfor(int i = 1; i <= mxn; ++ i) ans[i] += ans[i - 1];//\u524d\u7f00\u6c42\u7b54\u6848\n\twhile(m --) cin >> x, cout << ans[x] << ' ';\n\treturn 0;\n}\n```\n",
        "postTime": 1683027577,
        "uid": 765958,
        "name": "lottle1212",
        "ccfLevel": 5,
        "title": "Path Queries \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u76f4\u63a5\u7528\u70b9\u5206\u6cbb\u505a\uff0c\u4f46\u8f83\u6162\u4e14\u4ee3\u7801\u590d\u6742\u3002\n\n\u5b9e\u9645\u4e0a\u672c\u9898\u53ef\u4ee5\u5c06\u8be2\u95ee\u548c\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u679a\u4e3e\u7b2c$i$\u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8fde\u63a5\u8fb9\u6743\u4e0d\u5927\u4e8e$l_i$\u7684\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u4e3a(\u8054\u901a\u5757\u5927\u5c0f-1)*\u8054\u901a\u5757\u5927\u5c0f/2\u3002\n\n\u53ef\u4ee5\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757,\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n+m\\log m+n\\alpha(n))$\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#define ll long long\nint rd(){\n\tint k=0;char c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')k=k*10+c-'0',c=getchar();\n\treturn k;\n}\nconst int N=200001;\nstruct E{int u,v,w;}e[N];\nstruct P{int w,p;}p[N];\nbool Cmp(E x,E y){return x.w<y.w;}\nbool cmp(P x,P y){return x.w<y.w;}\nint n,m,l,f[N],sz[N];ll ans[N],S;\nint F(int x){\n\twhile(x!=f[x])x=f[x]=f[f[x]];\n\treturn x;\n}\nll g(int x){return(ll)x*(x-1)>>1;}\nvoid Merge(int x,int y){x=F(x),y=F(y),f[x]=y,S-=g(sz[x])+g(sz[y]),sz[y]+=sz[x],S+=g(sz[y]);}\nint main(){\n\tfreopen(\"data.in\",\"r\",stdin);\n\tfreopen(\"data.out\",\"w\",stdout);\n\tn=rd(),m=rd();\n\tfor(int i=1;i<n;++i)e[i]=(E){rd(),rd(),rd()};\n\tfor(int i=1;i<=n;++i)f[i]=i,sz[i]=1;\n\tfor(int i=1;i<=m;++i)p[i]=(P){rd(),i};\n\tstd::sort(p+1,p+m+1,cmp),std::sort(e+1,e+n,Cmp);\n\tfor(int i=1,j=1;i<=m;++i){\n\t\twhile(j<n&&e[j].w<=p[i].w)Merge(e[j].u,e[j].v),++j;\n\t\tans[p[i].p]=S;\n\t}\n\tfor(int i=1;i<=m;++i)printf(\"%lld \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1567515010,
        "uid": 68467,
        "name": "xcxcli",
        "ccfLevel": 0,
        "title": "CF1213GPath Queries"
    },
    {
        "content": "\u4e00\u770b\u8fd9\u4e2a\u9898\uff0c\u7edf\u8ba1\u6811\u4e0a\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u8def\u5f84\u6570\u91cf\uff0c\u9996\u5148\u60f3\u5230\u5927\u529b\u70b9\u5206\u6cbb\u3002\n\n\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e $i\\in[1,2\\times10^5]$\uff0c\u8bb0\u5f55\u8def\u5f84 $\\max$ **\u6070\u597d**\u4e3a $i$ \u7684\u8def\u5f84\u6570\u91cf\u3002\n\n\u5904\u7406\u8d77\u6765\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff0c\u628a\u6bcf\u4e2a\u5b50\u6811\u5185\u627e\u5230\u7684\u8def\u5f84\u957f\u5ea6\u6392\u4e2a\u5e8f\uff0c\u5c31\u5f88\u597d\u7b97\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log^2 n+q)$\uff0c\u5982\u679c\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\u53ef\u4ee5\u4f18\u5316\u5230 $\\Theta(n\\log n +q)$\u3002\n\nps\uff1a\u4f7f\u7528\u5e76\u67e5\u96c6\u7684\u505a\u6cd5\u662f\u79bb\u7ebf\u7684\uff0c\u6b64\u505a\u6cd5\u662f\u5728\u7ebf\u7684\u3002\n\n\u4ee3\u7801\uff1a \n```cpp\n#include<cstdio> \n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define ll long long\n#define N 200003\n#define reg register\nusing namespace std;\n\nstruct edge{\n    int v,w;\n    edge(int v=0,int w=0):v(v),w(w){}\n};\n\nvector<edge> adj[N];\nint son[N],size[N],dis[N],node[N];\nll ans[N];\nbool vis[N];\nint n,q,sum,rt,cnt;\n\ninline void read(int &x);\nvoid print(ll x);\nvoid getrt(int u,int fa);\nvoid divide(int u);\ninline void solve(int u,int len,int w);\nvoid getdis(int u,int fa);\n\nint main(){\n    int u,v,w;\n    read(n),read(q);\n    for(reg int i=1;i<n;++i){\n        read(u),read(v),read(w);\n        adj[u].push_back(edge(v,w));\n        adj[v].push_back(edge(u,w));\n    }\n    sum = son[rt] = n;\n    getrt(1,0);\n    divide(rt);\n    for(reg int i=2;i<N;++i) ans[i] += ans[i-1];\n    while(q--){\n        read(w);\n        print(ans[w]); //O(1)\u56de\u7b54\u8be2\u95ee\n        putchar('\\n');\n    }\n    return 0;\n}\n\nvoid getdis(int u,int fa){\n    node[++cnt] = dis[u];\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(v==fa||vis[v]) continue;\n        dis[v] = max(dis[u],adj[u][i].w); //\u8def\u5f84\u4e0a\u8981\u53d6max\u7684\n        getdis(v,u);\n    }\n}\n\ninline void solve(int u,int len,int w){\n    dis[u] = len;\n    cnt = 0;\n    getdis(u,0);\n    sort(node+1,node+1+cnt);\n    for(reg int i=1;i<=cnt;++i){\n        if(w==1) ans[node[i]] += i-1;\n        else ans[node[i]] -= i-1;\n    }\n}\n\nint getsiz(int u,int fa){\n    int res = 1;\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(vis[v]||v==fa) continue;\n        res += getsiz(v,u);\n    }\n    return res;\n}\n\nvoid divide(int u){\n    vis[u] = true;\n    solve(u,0,1);\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(vis[v]) continue;\n        solve(v,adj[u][i].w,-1);\n        sum = getsiz(v,u);\n        rt = 0,son[rt] = n;\n        getrt(v,u);\n        divide(rt);\n    }\n}\n\nvoid getrt(int u,int fa){\n    size[u] = 1;\n    son[u] = 0; //\u975e\u5e38\u91cd\u8981\u7684\u4e00\u884c\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(vis[v]||v==fa) continue;\n        getrt(v,u);\n        size[u] += size[v];\n        son[u] = max(son[u],size[v]);\n    }\n    son[u] = max(son[u],sum-size[u]);\n    if(son[u]<son[rt]) rt = u;\n}\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n\nvoid print(ll x){\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n```\n",
        "postTime": 1567520730,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1213G \u3010Path Queries\u3011"
    },
    {
        "content": "\u8fd9\u662f\u76ee\u524d\u9898\u89e3\u533a\u91cc\u8fd8\u6ca1\u6709\u7684 Kruskal \u91cd\u6784\u6811\u505a\u6cd5\u3002\n\n------------\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u5e26\u8fb9\u6743\u7684\u6811\uff0c$m$ \u6b21\u8be2\uff0c\u95ee\u7ed9\u5b9a $q$ \u95ee\u6700\u5927\u6743\u503c\u4e0d\u5927\u4e8e $q$ \u7684\u7b80\u5355\u8def\u5f84\u6570\u91cf\u3002\n\n------------\n## \u601d\u8def\n\n\u770b\u5230\u201c\u95ee\u6700\u5927\u6743\u503c\u4e0d\u5927\u4e8e $q$ \u7684\u7b80\u5355\u8def\u5f84\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230 Kruskal \u91cd\u6784\u6811\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u91cd\u6784\u6811\u4e0a\u65b0\u5efa\u7684\u8282\u70b9 $i$\uff0c\u8bbe\u5176\u6743\u503c\u4e3a $v_i$\uff0c\u5b50\u6811\u7684\u5927\u5c0f\uff08\u9664\u53bb\u6240\u6709\u65b0\u5efa\u8282\u70b9\uff09\u4e3a $s_i$\uff0c\u7236\u8282\u70b9\u4e3a $f_i$\uff0c\u90a3\u4e48\u4ed6\u5bf9\u4e8e\u6743\u503c\u5927\u4e8e\u7b49\u4e8e $v_i$ \u7684\u8be2\u95ee\u7684\u8d21\u732e\u4e3a $\\dfrac{s_i(s_i-1)}{2}$\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u6211\u4eec\u5728\u7edf\u8ba1\u67d0\u4e2a\u65b0\u5efa\u8282\u70b9\u7684\u8d21\u732e\u65f6\u4e5f\u7edf\u8ba1\u4e86\u5176\u5b50\u8282\u70b9\u7684\u8d21\u732e\u5c31\u4f1a\u7b97\u91cd\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u7b2c $i$ \u4e2a\u70b9\u53ea\u5bf9 $v_i\\le q\\le v_{f_i}-1$ \u505a\u51fa\u8d21\u732e\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848\u6b63\u786e\u4e86\u3002\n\n\u8fd9\u4e2a\u8d21\u732e\u5982\u4f55\u7ef4\u62a4\uff1f\u628a\u6240\u6709\u8be2\u95ee\u770b\u6210\u6570\u5217\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\uff1a\u533a\u95f4\u52a0\uff0c\u4ee5\u53ca\u6240\u6709\u533a\u95f4\u52a0\u4e4b\u540e\u5355\u70b9\u67e5\u8be2\u3002\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5dee\u5206\u5b9e\u73b0\uff0c\u6700\u540e\u518d\u505a\u4e2a\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u4e86\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u672c\u8d28\u662f\u79bb\u7ebf\u7684\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u5e94\u5bf9\u5728\u7ebf\u67e5\u8be2\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid dfs(int to, int fa) {\n\tsz[to] = (to <= n), f[to] = fa;\n\tfor (int i = head[to]; i; i = e[i].nxt) if (e[i].to != fa) dfs(e[i].to, to), sz[to] += sz[e[i].to];\n}\n\nsigned main() {\n\n\tn = idx = read(), m = read();\n\tfor (int i = 1; i < n; i++) fe[i].to = read(), fe[i].nxt = read(), fe[i].val = read();\n\tfor (int i = 1; i <= n; i++) blg[i] = i, blg[i + n] = i + n, fas[i].id = i;\n\tstd::sort(fe + 1, fe + n, cmpe);\n\tfor (int i = 1; i < n; i++) {\n\t\tint to = find(fe[i].to), nxt = find(fe[i].nxt);\n\t\tif (to == nxt) continue;\n\t\tfas[++idx].val = fe[i].val, blg[to] = blg[nxt] = idx;\n\t\tadd_edge(idx, to), add_edge(to, idx), add_edge(idx, nxt), add_edge(nxt, idx);\n\t}\n\tdfs(idx, 0), std::sort(fas + n + 1, fas + idx + 1, cmpf);\n\tfor (int i = n + 1; i <= idx; i++) {\n\t\tif (fas[f[i]].val == fas[i].val) continue;\n\t\tans[fas[i].val] += sz[i] * (sz[i] - 1) / 2;\n\t\tif (f[i]) ans[fas[f[i]].val] -= sz[i] * (sz[i] - 1) / 2;\n\t}\n\tfor (int i = 1; i < N; i++) ans[i] += ans[i - 1];\n\twhile (m--) {\n\t\tint x = read();\n\t\tprintf(\"%lld \", ans[x]);\n\t}\n\treturn Strelitzia_;\n\n}\n```",
        "postTime": 1680577284,
        "uid": 676638,
        "name": "Strelitzia_",
        "ccfLevel": 4,
        "title": "CF1213G \u9898\u89e3"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u6c34\u9898  \u6309\u8fb9\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u5408\u5e76\u8054\u901a\u5757\u5e76\u8ba1\u7b97\u6240\u6709\u53ef\u80fd\u7684\u7b54\u6848\u5373\u53ef\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\nusing namespace std;\nconst int N = 220000;\nstruct unionfind\n{\n\tarray<int, N> fa, rank;\n\tarray<long long, N> Size;\n\tvoid init()\n\t{\n\t\tfor (int i = 0; i < N; ++i)\n\t\t\tfa[i] = i;\n\t\trank.fill(0);\n\t\tSize.fill(1);\n\t}\n\tvoid link(int x, int y)\n\t{\n\t\tif (rank[x] > rank[y])\n\t\t\tfa[y] = x, Size[x] += Size[y];\n\t\telse\n\t\t{\n\t\t\tfa[x] = y;\n\t\t\tif (rank[x] == rank[y])\n\t\t\t\trank[y]++;\n\t\t\tSize[y] += Size[x];\n\t\t}\n\t}\n\tint find(int x)\n\t{\n\t\tif (fa[x] != x)\n\t\t\tfa[x] = find(fa[x]);\n\t\treturn fa[x];\n\t}\n\tvoid union_(int x, int y)\n\t{\n\t\tlink(find(x), find(y));\n\t}\n};\nunionfind un;\nvector<pair<int, int> > edge[N];\nlong long ans[N];\nint main()\n{\n\tint u, v, w;\n\tint n, q;\n\tcin >> n>>q;\n\tun.init();\n\tlong long cur_ans = 0;\n\tfor (int i = 0; i < n - 1; ++i)\n\t{\n\t\tcin >> u >> v >> w;\n\t\tedge[w].emplace_back(u, v);\n\t}\n\tfor (int i = 0; i < N; ++i)\n\t{\n\t\tif (!edge[i].empty())\n\t\t\tfor (auto &p : edge[i])\n\t\t\t{\n\t\t\t\tcur_ans += un.Size[un.find(p.first)] * un.Size[un.find(p.second)];\n\t\t\t\tun.union_(p.first, p.second);\n\t\t\t}\n\t\tans[i] = cur_ans;\n\t}\n\tint k;\n\twhile (q--)\n\t{\n\t\tcin >> k;\n\t\tcout << ans[k] << \" \";\n\t}\n\tcout << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1567507143,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1213G \u3010Path Queries\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8003\u5bdf\u7684\u5185\u5bb9\u66f4\u591a\u7684\u662f\u5e76\u67e5\u96c6\uff0c\u8fd9\u9053\u9898\u6211\u4eec\u4e0d\u9700\u8981\u5b8c\u5168\u7684\u5efa\u6210\u6811\uff0c\u53ea\u9700\u8981\u4ece\u6700\u5c0f\u7684\u8fb9\u5f00\u59cb\u7f29\u70b9\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7528\u5230\u5e76\u67e5\u96c6\u7684\u77e5\u8bc6\uff0c\u5c06\u4e24\u4e2a\u4e00\u6761\u8fb9\u4e0a\u7684\u4e24\u4e2a\u70b9u\uff0cv\u770b\u4f5c\u4e00\u4e2a\u70b9x\uff0c\u5e76\u4e14\u8fd9\u4e2a\u65b0\u7f29\u6210\u7684\u70b9x\u5c31\u662f\u539f\u672c\u4e24\u4e2a\u70b9\u6240\u4ee3\u8868\u7684\u4e2a\u6570\u7684\u548cnum[x]=num[u]+num[v]\uff0c\u540c\u65f6\uff0c\u7f29\u6389\u8fd9\u4e24\u4e2a\u70b9\u53ef\u4ee5\u4e3a\u8fd9\u6761\u8fb9\u6240\u4ee3\u8868\u7684\u6743\u503cw\u7684\u7b54\u6848\u589e\u52a0ans[w]+=num[x]*num[y].\n\n\u6ce8\u610f\u7b54\u6848\u9700\u8981\u5f00long long\n\n\u4ee3\u7801:\n\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<set>\n#define _USE_MATH_DEFINES\n#include<math.h>\n#include<queue>\n#include<vector>\n#include<limits.h>\n#include<functional>\n#include<stack>\ntypedef long long ll;\n#pragma GCC optimize(2)\nusing namespace std;\nconst int MAXN = 200005;\nlong long a[MAXN], num[MAXN];\nint n, m, fa[MAXN];\nstruct edge {\n\tint x, y, w;\n\tvoid read() {\n\t\tcin >> x >> y >> w;\n\t}\n\tbool operator < (const edge& rhs) const {\n\t\treturn w > rhs.w;\n\t}\n}e[MAXN];\nint findfa(int x) {\n\treturn fa[x] != x ? fa[x] = findfa(fa[x]) : x;\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcin >> n >> m;\n\tint mx = 0;\n\tfor (int i = n - 2; i >= 0; i--) {\n\t\te[i].read();\n\t\tmx = max(mx, e[i].w);\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfa[i] = i;\n\t\tnum[i] = 1;\n\t}\n\tsort(e, e + n - 1);\n\tfor (int i = n - 2; i >= 0; i--) {\n\t\tint p = e[i].w, x = findfa(e[i].x), y = findfa(e[i].y);\n\t\tlong long add;\n\t\tadd = num[x] * num[y];\n\t\tfa[x] = y;\n\t\tnum[y] += num[x];\n\t\ta[p] += add;\n\t}\n\tfor (int i = 1; i <= mx; i++)\n\t\ta[i] += a[i - 1];\n\twhile (m--) {\n\t\tint q;\n\t\tcin >> q;\n\t\tif (q > mx) q = mx;\n\t\tcout << a[q] << ' ';\n\t}\n}\n```\n",
        "postTime": 1567483110,
        "uid": 138569,
        "name": "youngk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1213G \u3010Path Queries\u3011"
    },
    {
        "content": "[**\u539f\u9898\u4f20\u9001\u95e8**](https://www.luogu.com.cn/problem/CF1213G)\n# \u9898\u76ee\u5927\u610f\uff1a\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u6811\uff0c\u6709 $m$ \u4e2a\u8be2\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u8f93\u51fa\u6700\u5927\u6743\u503c\u4e0d\u5927\u4e8e $q$ \u7684\u7b80\u5355\u8def\u5f84\u6570\u91cf\u3002\n# \u89e3\u9898\u601d\u8def\uff1a\n\u8bfb\u5b8c\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5f53\u4e00\u6761\u7b80\u5355\u8def\u5f84\u7b26\u5408\u8981\u6c42\u65f6\uff0c\u5728\u5b83\u91cc\u9762\u7684\u6240\u6709\u8def\u5f84\u4e5f\u90fd\u4f1a\u662f\u7b26\u5408\u8981\u6c42\u7684\u3002\n\n\u6839\u636e\u8fd9\u4e00\u7279\u70b9\uff0c\u6211\u4eec\u8003\u8651\u7528\u5e76\u67e5\u96c6\u505a\u3002\u9996\u5148\u5c06\u8fb9\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u679a\u4e3e\u8fc7\u6765\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5148\u6211\u4eec\u627e\u51fa\u5b83\u4e24\u4e2a\u7aef\u70b9\u7684\u7956\u5148\uff0c\u7136\u540e\u7ed9\u6700\u5927\u6743\u503c\u662f\u8fd9\u6761\u8fb9\u6743\u503c\u7684\u7b80\u5355\u8def\u5f84\u6570\u91cf\u52a0\u4e0a\u4e24\u4e2a\u7aef\u70b9\u7684\u7956\u5148\u7684\u6240\u5728\u96c6\u5408\u5927\u5c0f\u4e4b\u79ef\u3002\u539f\u56e0\u662f\u4e24\u4e2a\u7aef\u70b9\u7684\u7956\u5148\u6240\u5728\u7684\u96c6\u5408\u5404\u53d6\u4e00\u70b9\u540e\u6240\u8fde\u6210\u7684\u8def\u5f84\u7684\u6700\u5927\u6743\u503c\u4e00\u5b9a\u662f\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u3002\u6700\u540e\u6211\u4eec\u53ea\u9700\u8981\u5408\u5e76\u4e24\u70b9\u7684\u96c6\u5408\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u6c42\u51fa\u6700\u5927\u6743\u503c\u4e0d\u5927\u4e8e $q$ \u7684\u7b80\u5355\u8def\u5f84\u6570\u91cf\uff0c\u800c\u4e0d\u662f\u7b49\u4e8e $q$ \u7684\u6570\u91cf\uff0c\u6240\u4ee5\u8fd8\u5f97\u7528\u4e00\u4e2a\u524d\u7f00\u548c\u3002\n\n# Code: \n```\n#include <bits/stdc++.h>\nusing namespace std;\n#define in inline\n#define re register\n#define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\ntypedef long long LL;\nLL n, m, fa[220000], sum[220000], x, y, w, fx, fy, res[220000], q[220000], ma; \nstruct no {\n\tLL u, v, w; \n}e[220000];\nbool cmp(no x, no y) {return x.w < y.w; }\nin LL find(LL x) {return (x == fa[x] ? x : (fa[x] = find(fa[x]))); }\nin void merge(LL x, LL y) {\n\tLL fx = find(x), fy = find(y); \n\tfa[fx] = fy; sum[fy] += sum[fx]; sum[fx] = 0; \n}\nint main(){\n\tIOS;\n\tcin >> n >> m; \n\tfor(re int i = 1; i < n; i ++) cin >> e[i].u >> e[i].v >> e[i].w; \n\tsort(e + 1, e + n, cmp); //\u6392\u5e8f\n\tfor(re int i = 1; i <= n; i ++) fa[i] = i, sum[i] = 1; //\u521d\u59cb\u5316\n\tfor(re int i = 1; i < n; i ++) { //\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\n\t\tx = e[i].u; y = e[i].v; w = e[i].w; \n\t\tfx = find(x); fy = find(y); //\u627e\u7956\u5148\n\t\tres[w] += sum[fx] * sum[fy]; //\u589e\u52a0\u6570\u91cf\n\t\tmerge(x, y);  //\u5408\u5e76\u4e24\u70b9\n\t} \n\tfor(re int i = 1; i <= m; i ++) cin >> q[i], ma = max(ma, q[i]); \n\tfor(re int i = 1; i <= ma; i ++) res[i] += res[i - 1]; //\u524d\u7f00\u548c\n\tfor(re int i = 1; i <= m; i ++) cout << res[q[i]] << \" \"; \n\treturn 0;\n}\n```",
        "postTime": 1683988437,
        "uid": 570937,
        "name": "ssSSSss_sunhaojia",
        "ccfLevel": 4,
        "title": "Path Queries \u9898\u89e3"
    },
    {
        "content": "## Problem\n\n\u7ed9\u4e00\u68f5$n$\u70b9\u8fb9\u5e26\u6743\u7684\u6811\uff0c\u6709$m$\u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u6811\u4e0a\u6709\u591a\u5c11\u6700\u5927\u6743\u503c\u4e0d\u5927\u4e8e$q$\u7684\u7b80\u5355\u8def\u5f84\u3002\u5355\u72ec\u4e00\u4e2a\u70b9\u4e0d\u7b97\u8def\u5f84\u3002\n\n$1\u2264n,m\u22642\\times10^5$\n\n$1\\le u,v\\le n$\n\n$1\\le w,q \\le 2\\times 10^5$\n\n## Solution\n\n\u7b2c\u4e00\u773c\u662f\u4e00\u4e2a\u88f8\u7684\u70b9\u5206\u6cbb\u3002\n\n\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u5e76\u6392\u5e8f\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee$q$\uff0c\u90fd\u8dd1\u4e00\u904d\u70b9\u5206\u6cbb\uff0c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(nm\\log n)$\uff0c\u5b8c\u5168\u8fc7\u4e0d\u53bb\u3002\n\n\u53d1\u73b0\u6743\u503c$w,q\\le 2\\times 10^5$\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u7a81\u7834\u53e3\u3002\n\n\u4e0d\u5982\u53ea\u8dd1\u4e00\u904d\u70b9\u5206\u6cbb\u4f46\u662f\u7528\u4e00\u4e2a\u6876\u6765\u7edf\u8ba1**\u6700\u5927\u6743\u503c\u7b49\u4e8e$x$\u7684\u8def\u5f84\u7684\u6570\u91cf**\u3002\n\n\u6700\u540e\u6c42\u4e00\u4e2a\u524d\u7f00\u548c\u5373\u53ef\uff0c\u6ce8\u610f\u6392\u9664\u8def\u5f84\u957f\u5ea6\u4e3a$0$\u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n---\n\n\u4f46\u662f\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u66f4\u7b80\u5355\u4f46\u662f\u601d\u7ef4\u96be\u5ea6\u66f4\u9ad8\uff08\uff1f\uff09\u7684\u7b97\u6cd5\u3002\n\n\u5148\u5c06\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\u3002\u7c7b\u6bd4Kruskal\u7b97\u6cd5\uff0c\u5c06\u6240\u6709\u7684\u8fb9\u6309\u8fb9\u6743\u6392\u5e8f\u5e76\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e2a\u8fde\u901a\u5757\u5927\u5c0f\u3002\u5047\u5982\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u662f$size$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u5c31\u6709$\\dfrac {size\\times(size-1)}{2}$\u6761\u7b80\u5355\u8def\u5f84\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6309\u7167\u6392\u597d\u5e8f\u7684\u8be2\u95ee\u4ece\u5c0f\u5230\u5927\u52a0\u8fb9\uff0c\u52a0\u5b8c\u6240\u6709\u8fb9\u6743\u5c0f\u4e8e\u5f53\u524d\u8be2\u95ee\u7684$q$\u7684\u8fb9\u3002\u6b64\u65f6\uff0c\n$$\nans=\\sum \\dfrac {size\\times(size-1)}{2}\n$$\n\u4f7f\u7528\u5e76\u67e5\u96c6\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a$ans$\u5373\u53ef\u3002\n\n\u8fd9\u662f\u79bb\u7ebf\u505a\u6cd5\u3002\u4eff\u7167\u4e0a\u9762\u7684\u70b9\u5206\u6cbb\uff0c\u7531\u4e8e\u6743\u503c\u8303\u56f4\u5c0f\u7684\u53ef\u601c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u6709\u7684\u70b9\u6743\u90fd\u5f53\u4f5c\u4e00\u4e2a\u8be2\u95ee\uff0c\u5c31\u53d8\u6210\u6240\u8c13\u7684**\u5728\u7ebf\u505a\u6cd5**\u4e86\u3002\n\n**\u6ce8\u610f\u7b54\u6848\u662f$n^2$\u7ea7\u522b\u7684\uff0c\u9700\u8981\u5f00$\\text{long long}$\u3002**\n\n## Code\n\n### \u79bb\u7ebf\n\n```c++\n/**************************************************************\n * Problem: CF1213G Path Queries-bcj-no-online\n * Author: Vanilla_chan\n * Date: 20210309\n**************************************************************/\n//\u9884\u7f16\u8bd1\u90e8\u5206\u5df2\u7565\u53bb\n#define N 200010\nstruct Ask\n{\n\tint id,q;\n\tbool operator<(const Ask& z)const\n\t{\n\t\treturn q<z.q;\n\t}\n}ask[N];\nint f[N],sze[N];\nLL S;\nint getf(int x)\n{\n\tif(f[x]==x) return x;\n\treturn f[x]=getf(f[x]);\n}\nLL calc(LL x)\n{\n\treturn x*(x-1)/2;\n}\nvoid merge(int x,int y)\n{\n\tx=getf(x);\n\ty=getf(y);\n\tif(x==y) return;\n\tS-=calc(sze[x])+calc(sze[y]);\n\tif(sze[x]<sze[y])\n\t{\n\t\tf[x]=y;\n\t\tsze[y]+=sze[x];\n\t\tsze[x]=0;\n\t}\n\telse\n\t{\n\t\tf[y]=x;\n\t\tsze[x]+=sze[y];\n\t\tsze[y]=0;\n\t}\n\tS+=calc(sze[f[x]]);\n\t\n}\nint n,m;\nstruct edge\n{\n\tint x,y,z;\n\tbool operator<(const edge& b)const\n\t{\n\t\treturn z<b.z;\n\t}\n}e[N];\nLL ans[N];\nint main()\n{\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\te[i].x=read();\n\t\te[i].y=read();\n\t\te[i].z=read();\n\t}\n\tsort(e+1,e+n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\task[i].q=read();\n\t\task[i].id=i;\n\t}\n\tsort(ask+1,ask+m+1);\n\tfor(int i=1;i<=n;i++) f[i]=i,sze[i]=1;\n\tint top=1;\n\tfor(int i=1;i<=m;i++)//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\n\t{\n\t\twhile(top<n&&e[top].z<=ask[i].q) merge(e[top].x,e[top].y),top++;//\u4e00\u76f4\u52a0\u8fb9\u76f4\u5230\u4e0d\u8d85\u8fc7\u5f53\u524d\u8be2\u95ee\u7684q\n\t\tans[ask[i].id]=S;//\u5c06\u7b54\u6848\u653e\u56de\u53bb\n\t}\n\tfor(int i=1;i<=m;i++) cout<<ans[i]<<\" \";\n\treturn 0;\n}\n```\n\n### \u5728\u7ebf\n\n```c++\n/**************************************************************\n * Problem: CF1213G Path Queries-bcj-online\n * Author: Vanilla_chan\n * Date: 20210309\n**************************************************************/\n//\u9884\u7f16\u8bd1\u90e8\u5206\u5df2\u7565\u53bb\n#define N 200010\nint f[N],sze[N];\nLL S;\nint getf(int x)\n{\n\tif(f[x]==x) return x;\n\treturn f[x]=getf(f[x]);\n}\nLL calc(LL x)\n{\n\treturn x*(x-1)/2;\n}\nvoid merge(int x,int y)\n{\n\tx=getf(x);\n\ty=getf(y);\n\tif(x==y) return;\n\tS-=calc(sze[x])+calc(sze[y]);\n\tif(sze[x]<sze[y])\n\t{\n\t\tf[x]=y;\n\t\tsze[y]+=sze[x];\n\t\tsze[x]=0;\n\t}\n\telse\n\t{\n\t\tf[y]=x;\n\t\tsze[x]+=sze[y];\n\t\tsze[y]=0;\n\t}\n\tS+=calc(sze[f[x]]);\n\t\n}\nint n,m;\nstruct edge\n{\n\tint x,y,z;\n\tbool operator<(const edge& b)const\n\t{\n\t\treturn z<b.z;\n\t}\n}e[N];\nLL ans[N];\nint main()\n{\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\te[i].x=read();\n\t\te[i].y=read();\n\t\te[i].z=read();\n\t}\n\tsort(e+1,e+n);\n\tfor(int i=1;i<=n;i++) f[i]=i,sze[i]=1;\n\tint top=1;\n\tfor(int i=1;i<=200000;i++)\n\t{\n\t\twhile(top<n&&e[top].z<=i) merge(e[top].x,e[top].y),top++;\n\t\tans[i]=S;\n\t}\n\twhile(m--)\n\t{\n\t\twrite(ans[read()]); \n\t}\n\treturn 0;\n}\n```\n\n## \u8bf4\u5728\u540e\u9762\n\n\uff08\u8fd8\u662f\u90a3\u53e5\u8bdd\uff09\u82e5\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u6073\u8bf7\u7ba1\u7406\u5458\u65a7\u6b63\uff0c\u611f\u6fc0\u4e0d\u5c3d\uff01\n\n",
        "postTime": 1615301231,
        "uid": 188769,
        "name": "Vanilla_chan",
        "ccfLevel": 6,
        "title": "CF1213G Path Queries"
    },
    {
        "content": "\u9898\u610f\u7ffb\u8bd1\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u590d\u8ff0\u4e86\u3002\n\n\u4ece\u6570\u636e\u8303\u56f4\u4e0b\u624b\uff0c\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(mlogn)$ \u6216 $O(m)$ \u7684\u3002\u5bf9\u4e8e $O(mlogn)$ \u53ef\u4ee5\u76f4\u63a5\u70b9\u5206\u6cbb\uff0c~~\u4f46\u7531\u4e8e\u6211\u592a\u83dc\u4e0d\u4f1a~~\uff0c\u6240\u4ee5\u601d\u8003 $O(m)$\uff0c\u663e\u7136\u5e94\u8be5\u8003\u8651\u9884\u5904\u7406\u3002\u5c06\u6240\u6709\u7684\u8fb9\u6309\u8fb9\u6743\u6392\u5e8f\uff0c\u4ee5\u6700\u5927\u8fb9\u6743\u4e3a\u4e0a\u9650\u626b\uff0c\u7528\u5e76\u67e5\u96c6\u5408\u5e76\uff0c\u540c\u65f6\u5408\u5e76\u5927\u5c0f($siz$)\u5373\u53ef\u3002\u5bf9\u6bcf\u4e2a $q$\uff0c\u7b54\u6848\u5373\u4e3a\u5728\u4efb\u610f\u8054\u901a\u5757\u7684\u4e24\u4e2a\u70b9\uff0c\u53ef\u4ee5\u5728\u5408\u5e76\u7684\u65f6\u5019\u76f4\u63a5\u5904\u7406\u6389\u3002\n\n\u6ce8\u610f\u5f53 $q$ \u5927\u4e8e\u6700\u5927\u8fb9\u6743\u7684\u65f6\u5019\u9700\u8981\u7279\u5224\uff08\u5f53\u7136\u5176\u5b9e\u53ef\u4ee5\u9884\u5904\u7406\u76f4\u63a5\u5230 $200000$\uff09\uff0c\u5e76\u4e14\u8981\u5f00 `long long`\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tchar ch=getchar();\n\tint flag=1;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tch=getchar();\n\t\tif(ch=='-')\n\t\t\tflag=-1;\n\t}\n\tint res=0;\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tres=res*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn res*flag;\n}\nstruct edge\n{\n\tint x,y;\n\tint w;\n\tbool operator <(edge e2)\n\t{\n\t\treturn w<e2.w;\n\t}\n}e[200001];\nint n,m,father[200001],siz[200001];\nll res[200001],ans[200001];\nint find(int x)\n{\n\treturn x==father[x]?x:father[x]=find(father[x]);\n}\ninline ll c2(int x)\n{\n\treturn (ll)x*(x-1)/2;\n}\nint main()\n{\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\te[i].x=read();\n\t\te[i].y=read();\n\t\te[i].w=read();\n\t}\n\tsort(e+1,e+n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfather[i]=i;\n\t\tsiz[i]=1;\n\t}\n\tint j=1;\n\tfor(int i=1;i<=e[n-1].w;++i)\n\t{\n\t\tres[i]=res[i-1];\n\t\twhile(e[j].w==i&&j<n)\n\t\t{\n\t\t\tint xx=find(e[j].x),yy=find(e[j].y);\n\t\t\tif(xx!=yy)\n\t\t\t{\n\t\t\t\tres[i]+=c2(siz[xx]+siz[yy])-c2(siz[xx])-c2(siz[yy]);\n\t\t\t\tsiz[xx]+=siz[yy];\n\t\t\t\tfather[yy]=xx;\n\t\t\t}\n\t\t\t++j;\n\t\t}\n\t}\n\tint a;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\ta=read();\n\t\tif(a>=e[n-1].w)\n\t\t\tans[i]=res[e[n-1].w];\n\t\telse\n\t\t\tans[i]=res[a];\n\t}\n\tfor(int i=1;i<=m;++i)\n\t\tprintf(\"%lld \",ans[i]);\n\treturn 0; \n}\n```\n",
        "postTime": 1605167368,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1213G \u3010Path Queries\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u9762\uff0c\u5927\u5bb6\u5e94\u8be5\u9996\u5148\u60f3\u5230\u7684\u662f\u70b9\u5206\u6cbb\u5427\uff1f\uff1f\u4f46\u662f\u4ee3\u7801\u53c8\u957f\u53c8\u4e0d\u597d\u7406\u89e3\uff0c~~\u5176\u5b9e\u5c31\u662f\u672c\u849f\u84bb\u4e0d\u4f1a\u3002~~\n\n## Solution\n\u5148\u8003\u8651\u4e00\u4e0b\u8be5\u600e\u4e48\u8ba1\u7b97\u8def\u5f84\uff0c\u4e00\u5f00\u59cb\u60f3\u7684\u65f6\u5019\u4ee5\u4e3a\u53c8\u8981\u7528\u4ec0\u4e48\u9ad8\u6df1\u7b97\u6cd5\uff0c\u5176\u5b9e\u53ef\u4ee5\u5c06\u8ba1\u7b97\u8def\u5f84\u8f6c\u6362\u4e00\u4e0b\uff0c\u56e0\u4e3a\u662f\u6811\u4e0a\u7684\u7b80\u5355\u8def\u5f84\uff0c\u6240\u4ee5\u4e0d\u540c\u7684\u8def\u5f84\u53d6\u51b3\u4e8e\u4e0d\u540c\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6240\u4ee5\u53ea\u8981\u8003\u8651\u4e58\u6cd5\u539f\u7406\u5373\u53ef\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u79bb\u7ebf\u7b97\u6cd5\uff0c\u5c06\u8be2\u95ee\u548c\u8fb9\u6743\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u7b26\u5408\u6761\u4ef6\u7684\u8fb9\u52a0\u5165\uff0c\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u8fde\u901a\u5757\uff0c\u6839\u636e\u4e0a\u9762\u6240\u8bf4\uff0c\u5c06\u4e24\u4e2a\u8fde\u901a\u5757\u5e76\u8d77\u6765\u7684\u8d21\u732e\u5c31\u662f\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u8282\u70b9\u4e2a\u6570\u76f8\u4e58\u3002\n\n## Detail\n\u4e24\u4e2a\u8fde\u901a\u5757\u8282\u70b9\u76f8\u4e58\u65f6\u4f1a\u6ea2\u51fa\uff0c\u8981\u8f6c\u6210 long long\uff0cWA\u4e86\u56db\u4e94\u6b21\u624d\u53d1\u73b0\uff0c\u6211\u771f\u7684\u662f\u53c8\u849f\u53c8\u84bb\u3002\n\n\u89c1\u6b64\u5904\u4ee3\u7801\u3002\n```cpp\n    for(int i=1;i<=q;i++){\n        while(last<n&&edge[last].w<=ask[i].val){\n            int r1=find(edge[last].u),r2=find(edge[last].v);\n            if(r1!=r2){\n                fa[r1]=r2;\n                sum+=1ll*size[r2]*size[r1];\n                size[r2]+=size[r1];\n            }\n            last++;\n        }\n        ans[ask[i].id]=sum;\n    }\n```\n\u8d34\u4e0a\u5b8c\u6574\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+100;\nint n,q,fa[N],size[N];\nlong long ans[N],sum;\nstruct xzh{\n    int u,v,w;\n}edge[2*N];\nstruct hh{\n    int val,id;\n}ask[N];\nbool cmp(xzh x,xzh y){\n    return x.w<y.w;\n}\nbool cmp1(hh x,hh y){\n    return x.val<y.val;\n}\nint find(int x){\n    if(fa[x]!=x)fa[x]=find(fa[x]);\n    return fa[x];\n}\nint main(){\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<=n;i++)size[i]=1,fa[i]=i;\n    for(int i=1;i<n;i++)scanf(\"%d%d%d\",&edge[i].u,&edge[i].v,&edge[i].w);\n    sort(edge+1,edge+n,cmp);\n    for(int i=1;i<=q;i++)scanf(\"%d\",&ask[i].val),ask[i].id=i;\n    sort(ask+1,ask+1+q,cmp1);\n    int last=1;\n    for(int i=1;i<=q;i++){\n        while(last<n&&edge[last].w<=ask[i].val){\n            int r1=find(edge[last].u),r2=find(edge[last].v);\n            if(r1!=r2){\n                fa[r1]=r2;\n                sum+=1ll*size[r2]*size[r1];\n                size[r2]+=size[r1];\n            }\n            last++;\n        }\n        ans[ask[i].id]=sum;\n    }\n    for(int i=1;i<=q;i++)printf(\"%lld \",ans[i]);\n    return 0;\n}\n```\n\u770b\u522b\u4eba\u7684\u9898\u89e3\u90fd\u6bd4\u6211\u7b80\u6d01\uff0c\u89c9\u5f97\u6211\u5199\u7684\u9ebb\u70e6\u7684\u4e5f\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u5176\u4ed6\u5927\u4f6c\u7684\u9898\u89e3\u3002\n\n\u6700\u540e\u63a8\u8350\u4e00\u4e2a\u7c7b\u4f3c\u7684\u9898\uff1a[P4185 [USACO18JAN]MooTube G](https://www.luogu.com.cn/problem/P4185)",
        "postTime": 1667737998,
        "uid": 327295,
        "name": "GalwayGirl",
        "ccfLevel": 6,
        "title": "CF1213G\u6811\u4e0a\u5e76\u67e5\u96c6"
    }
]