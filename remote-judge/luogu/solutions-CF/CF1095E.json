[
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5c0f\u62ec\u53f7\u5e8f\u5217\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u6ee1\u8db3\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u62ec\u53f7\u65b9\u5411\u53cd\u8fc7\u6765\u540e\u4f7f\u5f97\u65b0\u5e8f\u5217\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u3002\u5373\u5728\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u524d\u7f00\u5de6\u62ec\u53f7\u7684\u4e2a\u6570\u4e0d\u5c11\u4e8e\u524d\u7f00\u53f3\u62ec\u53f7\u7684\u4e2a\u6570\uff0c\u540c\u65f6\u6574\u4e2a\u5e8f\u5217\u5de6\u53f3\u62ec\u53f7\u4e2a\u6570\u76f8\u540c\n\n## Input\n\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 $n$ \u4ee3\u8868\u5e8f\u5217\u957f\u5ea6\n\n\u4e0b\u9762\u4e00\u884c\u662f\u62ec\u53f7\u5e8f\u5217\n\n## Output\n\n\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6570\u5b57\u4ee3\u8868\u7684\u7b54\u6848\n\n## Hint\n\n$1~\\leq~n~\\leq~10^6$\n\n## Solution\n\n\u8003\u8651\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u662f\u5de6\u62ec\u53f7\uff0c\u90a3\u4e48\u80fd\u5c06\u5176\u53d8\u6210\u53f3\u62ec\u53f7\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n>\u6574\u4e2a\u5e8f\u5217\u5de6\u62ec\u53f7\u4e2a\u6570\u6bd4\u53f3\u62ec\u53f7\u591a $2$\n>\n>\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u524d\uff0c\u6240\u6709\u4f4d\u7f6e\u7684\u524d\u7f00\u5de6\u62ec\u53f7\u4e2a\u6570\u90fd\u4e0d\u5c11\u4e8e\u524d\u7f00\u53f3\u62ec\u53f7\u4e2a\u6570\n>\n>\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u540e\uff0c\u5728\u4fee\u6539\u540e\u6240\u6709\u4f4d\u7f6e\u7684\u524d\u7f00\u5de6\u62ec\u53f7\u4e2a\u6570\u90fd\u4e0d\u5c11\u4e8e\u524d\u7f00\u53f3\u62ec\u53f7\u4e2a\u6570\n\n\u6211\u4eec\u5c06\u7b2c\u4e09\u6761\u8f6c\u5316\u4e00\u4e0b\uff0c\u7531\u4e8e\u5728\u4fee\u6539\u4e4b\u540e\u5de6\u62ec\u53f7\u4e2a\u6570\u51cf\u4e00\uff0c\u53f3\u62ec\u53f7\u4e2a\u6570\u52a0\u4e00\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u7b2c\u4e09\u6761\u6539\u4e3a\n\n> \u5728\u8fd9\u4e2a\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u540e\uff0c\u4fee\u6539\u524d\u6240\u6709\u4f4d\u7f6e\u7684\u524d\u7f00\u5de6\u62ec\u53f7\u4e2a\u6570\u90fd\u6bd4\u524d\u7f00\u53f3\u62ec\u53f7\u4e2a\u6570\u81f3\u5c11\u591a\u4e24\u4e2a\n\n\u8fd9\u6837\u4e00\u4e2a\u4f4d\u7f6e\u80fd\u4e0d\u80fd\u4fee\u6539\u5c31\u4ec5\u4e0e\u539f\u5e8f\u5217\u6709\u5173\u4e86\u3002\n\n\u82e5\u679c\u662f\u53f3\u62ec\u53f7\uff0c\u4e5f\u540c\u7406\u8fdb\u884c\u5206\u6790\uff0c\u5c06\u4e24\u4e2a\u6539\u4e3a $-2$ \u4e2a\u5373\u53ef\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5904\u7406\u4e00\u4e0b\u524d\u7f00\u5de6\u62ec\u53f7\u4e2a\u6570-\u53f3\u62ec\u53f7\u4e2a\u6570\u3002\n\n\u8003\u8651\u7b2c\u4e8c\u6761\u9650\u5236\uff0c\u7b49\u4ef7\u4e8e $[1,pos]$ \u8fd9\u4e9b\u524d\u7f00\u4e2d\u7684\u6700\u5c0f\u503c\u4e0d\u5c0f\u4e8e $0$\u3002\u4e8e\u662f\u6211\u4eec\u5bf9\u8fd9\u4e9b\u524d\u7f00\u6c42\u4e00\u4e2a\u524d\u7f00\u6700\u5c0f\u503c\uff0c\u5c31\u53ef\u4ee5\u505a\u5230 $O(1)$ \u5224\u65ad\u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e09\u6761\u9650\u5236\uff0c\u7b49\u4ef7\u4e8e $[pos,n]$ \u8fd9\u4e9b\u524d\u7f00\u4e2d\u7684\u6700\u5c0f\u503c\u4e0d\u5c0f\u4e8e $2$\u3002\u4e8e\u662f\u6211\u4eec\u5bf9\u8fd9\u4e9b\u524d\u7f00\u6c42\u4e00\u4e2a\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u4e5f\u53ef\u4ee5\u505a\u5230 $O(1)$ \u5224\u65ad\u4e86\u3002\n\n\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u53f3\u62ec\u53f7\u7684\u60c5\u51b5\u540c\u7406\u3002\u7ec6\u8282\u53c2\u8003\u4ee3\u7801\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#ifdef ONLINE_JUDGE\n#define freopen(a, b, c)\n#endif\n#define rg register\n#define ci const int\n#define cl const long long\n\ntypedef long long int ll;\n\nnamespace IPT {\n\tconst int L = 1000000;\n\tchar buf[L], *front=buf, *end=buf;\n\tchar GetChar() {\n\t\tif (front == end) {\n\t\t\tend = buf + fread(front = buf, 1, L, stdin);\n\t\t\tif (front == end) return -1;\n\t\t}\n\t\treturn *(front++);\n\t}\n}\n\ntemplate <typename T>\ninline void qr(T &x) {\n\trg char ch = IPT::GetChar(), lst = ' ';\n\twhile ((ch > '9') || (ch < '0')) lst = ch, ch=IPT::GetChar();\n\twhile ((ch >= '0') && (ch <= '9')) x = (x << 1) + (x << 3) + (ch ^ 48), ch = IPT::GetChar();\n\tif (lst == '-') x = -x;\n}\n\ntemplate <typename T>\ninline void ReadDb(T &x) {\n\trg char ch = IPT::GetChar(), lst = ' ';\n\twhile ((ch > '9') || (ch < '0')) lst = ch, ch = IPT::GetChar();\n\twhile ((ch >= '0') && (ch <= '9')) x = x * 10 + (ch ^ 48), ch = IPT::GetChar();\n\tif (ch == '.') {\n\t\tch = IPT::GetChar();\n\t\tdouble base = 1;\n\t\twhile ((ch >= '0') && (ch <= '9')) x += (ch ^ 48) * ((base *= 0.1)), ch = IPT::GetChar();\n\t}\n\tif (lst == '-') x = -x;\n}\n\nnamespace OPT {\n\tchar buf[120];\n}\n\ntemplate <typename T>\ninline void qw(T x, const char aft, const bool pt) {\n\tif (x < 0) {x = -x, putchar('-');}\n\trg int top=0;\n\tdo {OPT::buf[++top] = x % 10 + '0';} while (x /= 10);\n\twhile (top) putchar(OPT::buf[top--]);\n\tif (pt) putchar(aft);\n}\n\nconst int maxn = 1000010;\n\nint n, ans;\nint cnt[maxn], pre[maxn], post[maxn];\nchar MU[maxn];\n\nint main() {\n\tfreopen(\"1.in\", \"r\", stdin);\n\tqr(n);\n\tfor (rg int i = 1; i <= n; ++i) {\n\t\tdo {MU[i] = IPT::GetChar();} while ((MU[i] != '(') && (MU[i] != ')'));\n\t\tif (MU[i] == '(') cnt[i] = cnt[i - 1] + 1;\n\t\telse cnt[i] = cnt[i - 1] - 1;\n\t}\n\tif ((cnt[n] != 2) && (cnt[n] != -2)) return puts(\"0\") & 1;\n\tpre[0] = maxn; post[n + 1] = maxn;\n\tfor (rg int i = 1; i <= n; ++i) pre[i] = std::min(pre[i - 1], cnt[i]);\n\tfor (rg int i = n; i; --i) post[i] = std::min(post[i + 1], cnt[i]);\n\tfor (rg int i = 1; i <= n; ++i) {\n\t\tif (MU[i] == '(') {\n\t\t\tif ((cnt[n] == 2) && (post[i] >= 2) && (pre[i - 1] >= 0)) ++ans;\n\t\t} else {\n\t\t\tif ((cnt[n] == -2) && (post[i] >= -2) && (pre[i - 1] >= 0)) ++ans;\n\t\t}\n\t}\n\tqw(ans, '\\n', true);\n\treturn 0;\n}\n```",
        "postTime": 1545986676,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1095E \u3010Almost Regular Bracket Sequence\u3011"
    },
    {
        "content": "**\u9898\u610f**\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5c0f\u62ec\u53f7\u5e8f\u5217\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u6ee1\u8db3\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u62ec\u53f7\u65b9\u5411\u53cd\u8fc7\u6765\u540e\u4f7f\u5f97\u65b0\u5e8f\u5217\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u3002\u5373\u5728\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u524d\u7f00\u5de6\u62ec\u53f7\u7684\u4e2a\u6570\u4e0d\u5c11\u4e8e\u524d\u7f00\u53f3\u62ec\u53f7\u7684\u4e2a\u6570\uff0c\u540c\u65f6\u6574\u4e2a\u5e8f\u5217\u5de6\u53f3\u62ec\u53f7\u4e2a\u6570\u76f8\u540c\u3002\n\n**\u5206\u6790**\n\n\u62ec\u53f7\u5e8f\u5217\u663e\u7136\u91c7\u53d6\u524d\u7f00\u548c\u601d\u60f3\uff0c\u5c06$'('$\u8bb0\u505a$1$\uff0c\u5c06$')'$\u8bb0\u505a$-1$\uff0c\u8bb0\u4e3a$sum[]$\u6570\u7ec4\uff0c\u5e76\u7edf\u8ba1$'('$\u7684\u524d\u7f00\u548c\uff0c\u5373\u4e3a$suml[]$\u6570\u7ec4\uff0c\u7edf\u8ba1$')'$\u7684\u524d\u7f00\u548c\uff0c\u5373\u4e3a$sumr[]$\u6570\u7ec4\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u5e8f\u5217\uff0c\u53ea\u80fd\u7ffb\u8f6c$'('$\u6216$')'$\u4e00\u79cd\u7c7b\u578b\uff0c\u5206\u7c7b\u8fdb\u884c\u5206\u6790\uff1a\n\n$(1)'('$\u6bd4$')'$\u591a$2$\u4e2a\uff0c\u5219\u7ffb\u8f6c$'('$\u53ef\u4ee5\u4f7f\u5f97$sum[n]$\u53d8\u4e3a$0$\u3002\u8003\u8651\u7ffb\u8f6c\u7b2c$i$\u4f4d\u7684$'('$\u4f1a\u4ea7\u751f\u7684\u5f71\u54cd\u3002\u5bf9\u4e8e$i\\leq j\\leq n$\u6765\u8bf4\uff0c\u6240\u6709\u7684$sum[j]$\u90fd\u51cf\u53bb$2$\uff0c\u6240\u4ee5\u8981\u4fdd\u8bc1\u6240\u6709\u7684$sum[]$\u90fd\u5927\u4e8e0\uff0c\u5373\u627e\u5230$i$\uff0c\u6709\n\n+ $1\\leq k <i$,$sum[k]>=0$\n+ $i < j \\leq n$,$sum[j]>=2$\n+ $sum[i]=1$\n\n\u7b54\u6848\u5373\u4e3a$i$~$n$\u4e2d$'('$\u6570\u91cf\u3002\n\n$(2)'('$\u6bd4$')'$\u5c11$2$\u4e2a\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ffb\u8f6c\u5b57\u7b26\u4e32\u5e76\u5c06\u6240\u6709\u7684$'('$\u548c$')'$\u7ffb\u8f6c\u83b7\u5f97\u7b2c$(1)$\u79cd\u60c5\u51b5\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8003\u8651\u7ffb\u8f6c\u7b2c$i$\u4f4d\u7684$')'$\u4f1a\u4ea7\u751f\u7684\u5f71\u54cd\uff0c\u5bf9\u4e8e$i\\leq j\\leq n$\u6765\u8bf4\uff0c\u6240\u6709\u7684$sum[j]$\u90fd\u52a0\u4e0a$2$\uff0c\u6240\u4ee5\u8981\u4fdd\u8bc1\u6240\u6709\u7684$sum[]$\u90fd\u5927\u4e8e0\uff0c\u5373\u627e\u5230$i$\uff0c\u6709\n\n+ $1\\leq k <i$,$sum[k]>=0$\n+ $i < j \\leq n$,$sum[j]>=-2$\n+ $sum[i]=-1$\n\n\u7b54\u6848\u5373\u4e3a$1$~$i$\u4e2d\u7684$')'$\u6570\u91cf\u3002\n\n$(3)$\u5176\u4ed6\u60c5\u51b5\u8f93\u51fa$0$\u5373\u53ef\uff0c\u5b58\u5728\u5df2\u7ecf\u4e3a\u62ec\u53f7\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u5b58\u5728\u4e0d\u53ef\u80fd\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002\n\n```cpp\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n\n#include <bits/stdc++.h>\n\n#define start ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define ll long long\n#define LL long long\n#define int ll\nusing namespace std;\nconst int maxn = (ll) 1e6 + 5;\nconst int mod = 1000000007;\nconst int inf = 0x3f3f3f3f;\nint sum[maxn];\nint suml[maxn];\nint sumr[maxn];\nchar s[maxn];\n\nsigned main() {\n    start;\n    int n;\n    cin >> n;\n    cin >> (s + 1);\n    for (int i = 1; i <= n; ++i) {\n        suml[i] = suml[i - 1];\n        sumr[i] = sumr[i - 1];\n        if (s[i] == '(')\n            sum[i] = sum[i - 1] + 1, ++suml[i];\n        else\n            sum[i] = sum[i - 1] - 1, ++sumr[i];\n    }\n    if (sum[n] == 2) {\n        for (int i = 1; i <= n; ++i)\n            if (sum[i] < 0) {\n                cout << 0;\n                return 0;\n            }\n        int l = n;\n        for (; l > 0; --l)\n            if (sum[l] == 1)\n                break;\n        cout << suml[n] - suml[l];\n    } else if (sum[n] == -2) {\n        for (int i = 1; i <= n; ++i)\n            if (sum[i] < -2) {\n                cout << 0;\n                return 0;\n            }\n        int l = 1;\n        for (; l <= n; ++l)\n            if (sum[l] == -1)\n                break;\n        cout << sumr[l];\n    } else\n        cout << 0;\n    return 0;\n}\n```\n\n",
        "postTime": 1576489481,
        "uid": 147428,
        "name": "F_Mu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1095E \u3010Almost Regular Bracket Sequence\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1095E)\n\n# \u9898\u610f\n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u62ec\u53f7\u5e8f\u5217\u3002\n\n\u6c42\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u4f7f\u5f97\u6539\u53d8\u4e86\u8be5\u4f4d\u7f6e\u7684\u62ec\u53f7\u79cd\u7c7b\u53ef\u4ee5\u4f7f\u5f97\u62ec\u53f7\u5e8f\u5217\u5408\u6cd5\u3002\n\n# \u601d\u8def\n\n\u4ee4\u5de6\u62ec\u53f7\u4e3a $1$\uff0c\u53f3\u62ec\u53f7\u4e3a $-1$\uff0c\u4e14\u8fd9\u4e2a\u5e8f\u5217\u6240\u6709\u6570\u4e4b\u548c\u4e3a $x$\u3002\n\n\u9996\u5148\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\u3002\n\n1. $x = 2$\uff0c\u90a3\u4e48\u8bf4\u660e\u5de6\u62ec\u53f7\u591a\u4e86\u4e00\u4e2a\uff08\u4e00\u4e2a\u53f3\u62ec\u53f7\u53d8\u4e00\u4e2a\u5de6\u62ec\u53f7\u4f1a\u4f7f\u5f97 $x$ \u51cf\u5c11 $2$\uff09\uff0c\u8981\u9009\u62e9\u4e00\u4e2a\u5de6\u62ec\u53f7\u53d8\u6210\u53f3\u62ec\u53f7\u3002\n2. $x = -2$\uff0c\u90a3\u4e48\u8bf4\u660e\u53f3\u62ec\u53f7\u591a\u4e86\u4e00\u4e2a\uff0c\u8981\u9009\u62e9\u4e00\u4e2a\u53f3\u62ec\u53f7\u53d8\u6210\u5de6\u62ec\u53f7\u3002\n3. $x < -2$ \u6216 $x > 2$ \u6216 $-2 < x < 2$\uff0c\u7b54\u6848\u5fc5\u5c06\u4e3a $0$\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u3002\n\n### \u5bf9\u4e8e\u60c5\u51b5\u4e00\n\n\u8bbe\u524d $i$ \u4e2a\u62ec\u53f7\u5e8f\u5217\u7684\u548c\u4e3a $sum_i$\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u6765\u89c2\u5bdf\u4e00\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ijpf374q.png)\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u91cc\uff0c\u867d\u7136 $x = 2$\uff0c\u4f46\u662f\u4ecd\u7136\u6ca1\u6709\u7b54\u6848\u3002Why\uff1f\n\n\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u6709\u4e00\u4e2a\u6761\u4ef6\uff0c\u90a3\u5c31\u662f**\u5728\u4efb\u4f55\u65f6\u5019\uff0c\u5de6\u62ec\u53f7\u7684\u6570\u91cf\u90fd\u4e0d\u80fd\u6bd4\u53f3\u62ec\u53f7\u5c11**\uff01\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u7b2c\u4e00\u4e2a\u6761\u4ef6\uff1a\n\n- \u53ef\u4ee5\u4f5c\u4e3a\u7b54\u6848\u7684\u4f4d\u7f6e $i$ \u5fc5\u7136\u8981\u6ee1\u8db3 $\\sum\\limits_{1 \\leqslant j < i}{(sum_ j\\geqslant 0)} = i - 1$\n\n\u90a3\u4e48\uff0c\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u53d1\u73b0 $sum_{i-1} < 0$ \u65f6\uff0c\u5c31\u53ef\u4ee5\u9000\u51fa\u627e\u7b54\u6848\u7684\u5faa\u73af\u4e86\uff0c\u540e\u9762\u7684\u6240\u6709\u4f4d\u7f6e**\u5747\u4e0d\u53ef\u6210\u4e3a\u7b54\u6848\u3002**\n\n\u518d\u6765\u89c2\u5bdf\u4e00\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nja3e0ly.png)\n\n\u4f4d\u7f6e $2$ \u548c\u4f4d\u7f6e $3$ \u7ed9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u90a3\u4e3a\u5565\u4f4d\u7f6e $1$ \u6ca1\u6709\u8d21\u732e\u5462\uff1f\n\n\u867d\u7136\u6211\u4eec\u77e5\u9053\uff0c\u4f4d\u7f6e $1$ \u4e00\u65e6\u53d8\u5316\uff0c\u5c31\u4f1a\u51fa\u73b0 $sum_1 = -1$ \u7684\u60c5\u51b5\uff0c\u53ef\u7a76\u7adf\u600e\u6837\u7b5b\u6389\u8fd9\u4e9b\u60c5\u51b5\u5462\uff1f\n\n\u624b\u63a8\u4e00\u4e0b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff1a\u628a\u4f4d\u7f6e $i$ \u4e0a\u7684\u5de6\u62ec\u53f7\u53d8\u4e3a\u53f3\u62ec\u53f7\uff0c\u4f1a\u4f7f\u5f97 $sum_j-2\\ (j \\geqslant i)$\u3002\n\n\u90a3\u4e48\u5c31\u597d\u529e\u4e86\uff0c\u53ea\u8981 $\\min\\limits_{i \\leqslant j \\leqslant n}\\{sum_j\\} \\geqslant 2$ \u4e14\u4f4d\u7f6e $i$ \u4e3a\u5de6\u62ec\u53f7\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u5373\u53ef\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\n\n### \u5bf9\u4e8e\u60c5\u51b5\u4e8c\n\n\u540c\u7406\uff0c\u53ea\u8981 $\\min\\limits_{i \\leqslant j \\leqslant n}\\{sum_j\\} \\geqslant -2$ \u4e14\u4f4d\u7f6e $i$ \u4e3a\u53f3\u62ec\u53f7\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u5373\u53ef\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\n\n### \u603b\u7ed3\n\n- \u5982\u679c $\\left\\vert x \\right\\vert \\neq 2$\uff0c\u7b54\u6848\u5fc5\u4e3a $0$\u3002\n- \u5982\u679c $x = 2$\uff0c\u7b54\u6848\u4e3a\u6ee1\u8db3\u8981\u6c42\u7684 $i$ \u7684\u4e2a\u6570\u3002\n  - $s_i = ($\u3002\n  - $\\sum\\limits_{1 \\leqslant j < i}{(sum_ j\\geqslant 0)} = i - 1$ \u4e14 $\\min\\limits_{i \\leqslant j \\leqslant n}\\{sum_j\\} \\geqslant 2$\u3002\n- \u5982\u679c $x = -2$\uff0c\u7b54\u6848\u4e3a\u6ee1\u8db3\u8981\u6c42\u7684 $i$ \u7684\u4e2a\u6570\u3002\n  - $s_i = )$\u3002\n  - $\\sum\\limits_{1 \\leqslant j < i}{(sum_ j\\geqslant 0)} = i - 1$ \u4e14 $\\min\\limits_{i \\leqslant j \\leqslant n}\\{sum_j\\} \\geqslant -2$\u3002\n\n\u7528\u524d\u7f00\u548c\u601d\u60f3\u5904\u7406\u51fa $sum$ \u6570\u7ec4\uff0c\u518d\u6c42\u4e00\u904d $sum$ \u7684\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n# Code\n\n```cpp\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nstring s;\nint n, sum[N], mi[N], ans; // sum \u4e3a\u524d\u7f00\u548c\uff0cmi \u4e3a sum \u7684\u540e\u7f00\u6700\u5c0f\u503c\n\nint main () {\n  ios::sync_with_stdio(0), cin.tie(0);\n  cin >> n >> s;\n  for (int i = 1; i <= n; i++) {\n    sum[i] = sum[i - 1];\n    if (s[i - 1] == '(') { // \u5904\u7406\u597d\u524d\u7f00\u548c\n      sum[i]++;\n    } else {\n      sum[i]--;\n    }\n  }\n  mi[n] = sum[n];\n  for (int i = n - 1; i; i--) { // \u5904\u7406\u540e\u7f00\u6700\u5c0f\u503c\n    mi[i] = min(mi[i + 1], sum[i]);\n  }\n  for (int i = 1; i <= n; i++) {\n    if (sum[n] == 2 && mi[i] >= 2 && s[i - 1] == '(') { // \u5224\u65ad\uff0c\u60c5\u51b5 1\n      ans++;\n    } else if (sum[n] == -2 && mi[i] >= -2 && s[i - 1] == ')') { // \u5224\u65ad\uff0c\u60c5\u51b5 2\n      ans++;\n    }\n    if (sum[i] < 0) { // \u5904\u7406 i + 1 \u65f6\uff0csum[i] < 0\uff0c\u7ed3\u675f\u5faa\u73af\n      break;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n```\n\n",
        "postTime": 1680149383,
        "uid": 724052,
        "name": "luogu_wsy0704",
        "ccfLevel": 5,
        "title": "CF1095E Almost Regular Bracket Sequence \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u62ec\u53f7\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u5728\u6700\u591a\u6539\u53d8\u4e00\u4e2a\u62ec\u53f7\u7684\u60c5\u51b5\u4e0b\u4f7f\u62ec\u53f7\u5339\u914d\uff08\u6539\u53d8\u4e3a'('-->')'\uff0c')'-->'('\uff09\uff0c\u5e76\u8f93\u51fa\u9700\u8981\u6539\u53d8\u7684\u62ec\u53f7\u7684\u4f4d\u7f6e\uff08\u6ca1\u6709\u5219\u8f93\u51fa0\uff09\n\n\u601d\u8def\uff1a\u6b64\u9898\u601d\u7ef4\u96be\u5ea6\u8f83\u5927\uff0c\u4f46\u662f\u4ee3\u7801\u5b9e\u73b0\u96be\u5ea6\u8f83\u5c0f\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u6211\u4eec\u7b97\u4e86\u4e00\u4e0b\u6700\u540e\u4e24\u79cd\u62ec\u53f7\u7684\u5dee\u65f6\uff0c\u53d1\u73b0\u5982\u679c\u6709\u7b54\u6848\u7684\u8bdd\u5dee\u503c\u53ea\u4e3a-2\uff0c0\uff0c2\uff0c\u4e0d\u7136\u662f\u4e0d\u4f1a\u6709\u89e3\u7684\u3002\n\u6240\u4ee5\u53ea\u9700\u8981\u5148\u770b\u540e\u9762\u6700\u5c11\u4f1a\u6210\u591a\u5c11\uff0c\u7136\u540e\u4f9d\u6b21\u626b\u4e00\u904d\uff0c\u7b26\u5408\u5c31\u52a0\uff0c\u4e0d\u7b26\u5408\u5c31\u4e0d\u53d8\uff0c\u7136\u540e\u968f\u65f6\u5224\u65ad\u4e00\u4e0b\u8fd9\u79cd\u60c5\u51b5\u53ef\u4e0d\u53ef\u80fd\u51fa\u73b0\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+10;\nint cnt[maxn],n,x=0;\nstring s;\n\nint main() \n{\tcin>>n>>s;\n    for(int i=0;i<n;++i) \n\t{\n        if(s[i]=='(') \n\t\t\tx++;\n        else \n\t\t\tx--;\n        cnt[i]=x;\n    }\n    for(int i=n-2;i>=0;--i)\n        cnt[i]=min(cnt[i+1],cnt[i]);\n    int ans=0,b=0;\n    for(int i=0;i<n;++i) \n\t{\n        if(s[i]=='(') \n\t\t{\n            if(cnt[i]>=2 && x==2) \n\t\t\t\tans++;\n            b++;\n        } \n\t\telse \n\t\t{\n            if(cnt[i]>=-2 && x==-2) \n\t\t\t\tans++;\n            b--;\n        }\n        if(b<0)\n            break;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1568296387,
        "uid": 132290,
        "name": "\u5f00\u59cb\u65b0\u7684\u8bb0\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1095E \u3010Almost Regular Bracket Sequence\u3011"
    }
]