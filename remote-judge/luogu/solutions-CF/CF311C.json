[
    {
        "content": "\u6ce8\u610f\u5230 $k \\le 10^4$\u3002\u8003\u8651\u628a\u6240\u6709\u4f4d\u7f6e\u6309\u6a21 $k$ \u7684\u503c\u5206\u6210 $k$ \u7c7b\uff0c\u5e76\u6309\u9664 $k$ \u7684\u5546\u5206\u6210\u82e5\u5e72\u6bb5\u3002\u663e\u7136\uff0c\u5982\u679c\u5728\u7b2c $i$ \u6bb5\u53ef\u4ee5\u5230\u8fbe\u4e00\u4e2a\u5c5e\u4e8e\u7b2c $j$ \u7c7b\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6240\u6709\u5728\u7b2c $i$ \u6bb5\u4ee5\u540e\u4e14\u5c5e\u4e8e\u7b2c $j$ \u7c7b\u7684\u4f4d\u7f6e\u90fd\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\u3002\u4e8e\u662f\uff0c\u53ea\u9700\u8981\u7ef4\u62a4 $d_i$ \u8868\u793a\u5c5e\u4e8e\u7b2c $i$ \u7c7b\u7684\u4f4d\u7f6e\u5728\u54ea\u4e00\u6bb5\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5c31\u53ef\u4ee5 $\\mathcal O(1)$ \u5730\u5224\u5b9a\u67d0\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\u3002\n\n\u8003\u8651\u7b2c\u4e00\u79cd\u64cd\u4f5c\u3002\u8003\u8651\u300c\u5411\u524d\u8d70 $x$ \u6b65\u300d\u8fd9\u4e2a\u64cd\u4f5c**\u5728\u6a21 $k$ \u4e0b\u610f\u4e49**\u7684\u672c\u8d28\uff1a\u5b83\u4f7f\u5f97 $i$ \u53ef\u4ee5\u5230\u8fbe $(i + x) \\bmod k$\uff0c\u4f46\u662f\u4e2d\u95f4\u8981\u8de8\u8fc7 $\\left\\lfloor\\dfrac{i+x}{k}\\right\\rfloor$ \u4e2a\u989d\u5916\u7684\u6bb5\u3002\u4e8e\u662f\u5efa\u4e2a\u56fe\uff1a\u8bbe\u4e00\u4e2a\u6e90\u70b9 $S$\uff0c\u5e76\u5bf9\u4e8e\u6240\u6709 $0 \\le i <k$ \u8fde\u6743\u503c\u4e3a $d_i$ \u7684\u6709\u5411\u8fb9 $S \\to i$\uff0c\u70b9\u4e4b\u95f4\u6309\u4e0a\u9762\u8bf4\u7684\u300c\u672c\u8d28\u300d\u8fde\u8fb9\uff0c\u4ece\u6e90\u70b9\u8dd1 Dijkstra\uff0c\u8dd1\u5b8c\u4e4b\u540e\u66f4\u65b0 $d$ \u5373\u53ef\u3002\u5355\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(k \\log k + n)$\u3002\n\n\u7b54\u6848\u53ef\u4ee5\u7528 `multiset` \u7ef4\u62a4\uff0c\u64cd\u4f5c\u4e8c\u548c\u4e09\u4e5f\u76f4\u63a5\u5728 `multiset` \u91cc\u9762\u64cd\u4f5c\u3002\n\n```c++\n// 2021.08.06 - 11:32\n// Code by LTb\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define ll long long\n#define debug printf(\"Passing Line %d in function [%s].\\n\",__LINE__,__FUNCTION__)\n#define fi first\n#define se second\ninline int read(){\n    int x=0,f=1;\n    char ch='.';\n    while(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n    return f*x;\n}\ninline void chmax(int &x,int y){x=max(x,y);}\ninline void chmin(int &x,int y){x=min(x,y);}\n\nconst int MOD = 998244353;\ninline int add(int x,int y){return(x+y>=MOD)?(x+y-MOD):((x+y<0)?(x+y+MOD):(x+y));}\n\nconst int MAXN = 100005, MAXM = 10005;\nconst int INF = 1e18 + 20;\nint stO_yzhang_txdy_ddjxd_Orz, n, m, k;\nint a[MAXN], c[MAXN];\nint d[MAXM];\nmultiset<int> s;\nbool in[MAXN];\n\ninline bool ok(int x) {\n\treturn d[x % k] <= x / k;\n}\n\nstruct Node {\n\tint x, w;\n\tbool operator < (const Node& b) const {\n\t\treturn w > b.w;\n\t}\n};\nint dis[MAXN];\nbool vis[MAXN];\nvector<Node> G[MAXN];\n\nvoid dijkstra(int S) {\n\tmemset(vis, false, sizeof(vis));\n\tpriority_queue<Node> q;\n\n\tdis[S] = 0;\n\tq.push((Node) { S, 0 });\n\twhile (!q.empty()) {\n\t\tauto p = q.top();\n\t\tq.pop();\n\t\tif (vis[p.x]) continue;\n\t\tvis[p.x] = true;\n\n\t\tfor (auto i : G[p.x]) {\n\t\t\tif (vis[i.x]) continue;\n\t\t\tif (dis[i.x] > p.w + i.w) {\n\t\t\t\tdis[i.x] = p.w + i.w;\n\t\t\t\tq.push((Node) { i.x, dis[i.x] });\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void upd(int x) {\n\tfor (int i = 0; i < k; i++)\n\t\tG[i].clear(), dis[i] = INF;\n\n\tfor (int i = 0; i < k; i++) {\n\t\tG[i].push_back((Node){(i + x) % k, (i + x) / k});\n\t\tG[k].push_back((Node){i, d[i]});\n\t}\n\n\tdijkstra(k);\n\tfor (int i = 0; i < k; i++) {\n\t\tchmin(d[i], dis[i]);\n\t}\n\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (ok(a[i]) && !in[i]) {\n\t\t\tin[i] = true;\n\t\t\ts.insert(c[i]);\n\t\t}\n\t}\n}\n\nsigned main()\n\n{\n\tstO_yzhang_txdy_ddjxd_Orz = read(), n = read(), m = read(), k = read();\n\n\tfor (int i = 0; i < k; i++)\n\t\td[i] = INF;\n\td[1 % k] = 0;\n\n\tfor (int i = 1; i <= n; i++) {\n\t\ta[i] = read(), c[i] = read();\n\t\tif (ok(a[i])) s.insert(c[i]), in[i] = true;\n\t}\n\n\twhile (m--) {\n\t\tint opt = read();\n\t\tif (opt == 1) {\n\t\t\tint x = read();\n\t\t\tupd(x);\n\t\t} else if (opt == 2) {\n\t\t\tint x = read(), y = read();\n\t\t\tif (in[x]) s.erase(s.find(c[x]));\n\t\t\tc[x] -= y;\n\t\t\tif (in[x]) s.insert(c[x]);\n\t\t} else {\n\t\t\tif (s.empty()) cout << 0 << endl;\n\t\t\telse {\n\t\t\t\tcout << *prev(s.end()) << endl;\n\t\t\t\ts.erase(prev(s.end()));\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1628225324,
        "uid": 48981,
        "name": "LTb_",
        "ccfLevel": 0,
        "title": "CF311C"
    }
]