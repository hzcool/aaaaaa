[
    {
        "content": "### \u9898\u76ee\n* [CF1729C Jumping on Tiles](https://www.luogu.com.cn/problem/CF1729C)\n\n### \u89e3\u6790\n* **\u58f0\u660e\uff1a\u4ee5\u4e0b\u8ba8\u8bba\u5747\u4ee5 $s_1\\le s_n$\uff08$n$ \u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\uff09 \u4e3a\u524d\u63d0\uff0c$s_1\\ge s_n$ \u8bf7\u81ea\u5df1\u6839\u636e\u63a8\u7406\u8fc7\u7a0b\u81ea\u884c\u89e3\u51b3\u3002**\n* \u9996\u5148\u8003\u8651\u53ea\u6709\u4e24\u4e2a\u5b57\u7b26 $s_1,s_2$ \u7684\u60c5\u51b5\uff1a\n* \u6b64\u65f6\u7684\u7b54\u6848\u53ea\u80fd\u662f $s_2-s_1$\uff0c\u8def\u5f84\u4e3a $1\u21922$\u3002\n* \u63a5\u4e0b\u6765\u8003\u8651\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u6b64\u65f6\u53ef\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u8def\u5f84 $1\u21923$\uff1a\u7ed3\u679c\u662f $s_3-s_1$\u3002\n2. \u8def\u5f84 $1\u21922\u21923$\uff1a\u6b64\u65f6\u53ef\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n- $s_1\\le s_3\\le s_2$\uff0c\u7ed3\u679c\u662f $|s_2-s_1|+|s_2-s_3|=2s_2-s_1-s_3=2(s_2-s_3)+(s_3-s_1)\\ge s_3-s_1$\u3002\n- $s_1\\le s_2\\le s_3$\uff0c\u7ed3\u679c\u662f $|s_2-s_1|+|s_2-s_3|=s_3-s_1$\u3002\n- $s_2\\le s_1\\le s_3$\uff0c\u7ed3\u679c\u662f $|s_2-s_1|+|s_2-s_3|=s_1+s_3-2s_2=(s_3-s_1)+2(s_1-s_2)\\ge s_3-s_1$\u3002\n\n* \u901a\u8fc7\u4ee5\u4e0a\u5206\u7c7b\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u63d2\u5165\u7684\u5b57\u6bcd\u6ee1\u8db3\u80fd\u591f\u4fdd\u6301\u5e8f\u5217\u5355\u8c03\u6027\u7684\u65b9\u6848\u662f\u4f18\u79c0\u7684\uff0c\u4e14\u7b54\u6848\u6700\u5c0f\u503c\u6c38\u8fdc\u4e3a $(s_n-s_1)$\u3002\n* \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u80fd\u7ef4\u6301\u5e8f\u5217\u539f\u6709\u5355\u8c03\u6027\u7684\u5b57\u6bcd\u53d6\u51fa\u518d\u6392\u5e8f\u5c31\u53ef\u4ee5\u5566\uff0c\u6240\u5f97\u7684\u5e8f\u5217\u5c31\u662f\u7b54\u6848\u5e8f\u5217\u3002\n* \u8fd8\u6709\u5c31\u662f\u522b\u5fd8\u8bb0\u5206\u7c7b\u8ba8\u8bba\u3002\n\n### \u4ee3\u7801\n* \u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}\\left(\\sum |s|\\log |s|\\right)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing std::cin;using std::cout;\nint t,cnt;\nstruct node{\n\tint p,id;\n}ans[200005];\nchar s[200005];\nsigned main(){\n// \tfreopen(\".in\",\"r\",stdin);\n// \tfreopen(\".out\",\"w\",stdout);\n\tstd::ios::sync_with_stdio(false);\n\tcin.tie(nullptr);cout.tie(nullptr);\n\tfor(cin>>t;t--;cnt=0){\n\t\tcin>>s;\n\t\tint len=strlen(s);\n\t\tfor(int i=1;i<len-1;++i) if(s[0]<=s[i]&&s[i]<=s[len-1]||s[0]>=s[i]&&s[i]>=s[len-1]) ans[++cnt].id=i+1,ans[cnt].p=s[i]-'a'+1;\n        //\u5206\u7c7b\u8ba8\u8bba\uff01\n\t\tif(s[0]>=s[len-1])\n\t\t\tstd::sort(ans+1,ans+cnt+1,[](node x,node y){return x.p>y.p;});\n\t\telse\n\t\t\tstd::sort(ans+1,ans+cnt+1,[](node x,node y){return x.p<y.p;});\n\t\tcout<<abs(int(s[len-1]-s[0]))<<' '<<cnt+2<<'\\n'<<1<<' ';\n\t\tfor(int i=1;i<=cnt;++i) cout<<ans[i].id<<' ';\n\t\tcout<<len<<'\\n';\n\t}\n    return 0;\n}\n```",
        "postTime": 1663154220,
        "uid": 394167,
        "name": "Dragon_Horse",
        "ccfLevel": 5,
        "title": "CF1729C Jumping on Tiles"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $t$ \u6b21\u8be2\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\u3002\u8bbe $s$ \u7684\u957f\u5ea6\u4e3a $n$\uff0c\u4e14 $\\operatorname{index}(\\texttt{a})=1$\uff0c$\\operatorname{index}(\\texttt{b})=2$\uff0c\u2026\u2026\uff0c$\\operatorname{index}(\\texttt{c})=26$\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002Polycarp \u73b0\u5728\u4f4d\u4e8e $s_1$\uff0c\u4ed6\u53ef\u4ee5\u82b1\u8d39 $|\\operatorname{index}(s_i)-\\operatorname{index}(s_j)|$ \u7684\u4ee3\u4ef7\u4ece $s_i$ \u79fb\u52a8\u5230 $s_j$\u3002\u6bcf\u4e2a $s_i$ \u53ea\u80fd\u8d70\u4e00\u904d\u3002\u8bf7\u4f60\u6c42\u51fa\u4e00\u79cd\u8ba9\u4ed6\u79fb\u52a8\u5230 $s_n$ \u7684\u65b9\u5f0f\uff0c\u4f7f\u5f97\u4ee3\u4ef7\u6700\u5c0f\u7684\u540c\u65f6\u79fb\u52a8\u6b21\u6570\u6700\u5927\u3002\u5206\u522b\u8f93\u51fa\u4ee3\u4ef7\u3001\u6700\u591a\u80fd\u79fb\u52a8\u5230\u7684\u4f4d\u7f6e\u6570\u91cf\u548c\u79fb\u52a8\u8fc7\u7a0b\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1 \\le t \\le 10^4$\uff0c$2 \\le |s| \\le 2 \\times 10^5$\uff0c\u4fdd\u8bc1\u6570\u636e\u4e2d $s$ \u957f\u5ea6\u7684\u603b\u548c\u4e0d\u8d85\u8fc7 $2 \\times 10^5$\u3002\n\n------------\n\n### \u89e3\u6cd5\u5206\u6790\n\n\u8fd8\u662f\u9996\u5148\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u4ee3\u4ef7\u6700\u5c0f\u53ef\u4ee5\u662f\u591a\u5c11\uff1f\n\n\u663e\u7136 $|\\operatorname{index}(s_1)-\\operatorname{index}(s_n)|$\u3002\n\n\u90a3\u5728\u8fd9\u4e2a\u6761\u4ef6\u4e0b\uff0c\u600e\u4e48\u624d\u80fd\u4f7f\u5f97\u79fb\u52a8\u6b65\u6570\u6700\u5927\uff1f\n\n\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n+ $\\operatorname{index}(s_1)\\le \\operatorname{index}(s_n)$\uff1a\u5c06\u6240\u6709\u6ee1\u8db3 $\\operatorname{index}(s_1)\\le \\operatorname{index}(s_i) \\le \\operatorname{index}(s_n)$ \u7684 $s_i$ \u90fd\u5206\u522b\u8d70\u4e00\u904d\uff1b\n\n+ $\\operatorname{index}(s_1)>\\operatorname{index}(s_n)$\uff1a\u5c06\u6240\u6709\u6ee1\u8db3 $\\operatorname{index}(s_1)\\ge \\operatorname{index}(s_i) \\ge \\operatorname{index}(s_n)$ \u7684 $s_i$ \u90fd\u5206\u522b\u8d70\u4e00\u904d\u3002\n\n\u7136\u540e\u5c31\u7ed3\u675f\u4e86\uff0c\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u3002\n\n------------\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define pb push_back\nusing namespace std;\nconst ll N=2e5+7;\nstruct node { char a; ll b; } sz[N];\nbool cmp1(const node a,const node b) { return a.a==b.a?a.b<b.b:a.a<b.a; }\nbool cmp2(const node a,const node b) { return a.a==b.a?a.b<b.b:a.a>b.a; }\nvoid solve() {\n\tll st,ed,n; string str;\n\tcin>>str;\n\tn=str.size();\n\tfor (ll i=0;i<n;i++) sz[i+1]={str[i],i+1};\n\tif (str[0]<=str.back()) {\n\t\tsort(sz+1,sz+n+1,cmp1);\n\t\tfor (ll i=1;i<=n;i++) if (sz[i].a==str[0]) { st=i; break; } //\u627e\u5230\u4e00\u4e2a\u76f8\u540c\u7684\u5c31\u7ed3\u675f\n\t\tfor (ll i=n;i;i--) if (sz[i].a==str.back()) { ed=i; break; }\n\t\tprintf(\"%lld %lld\\n\",(ll)(str.back()-str[0]),ed-st+1);\n\t\tfor (ll i=st;i<=ed;i++) printf(\"%lld \",sz[i].b);\n\t}\n\telse {\n\t\tsort(sz+1,sz+n+1,cmp2);\n\t\tfor (ll i=1;i<=n;i++) if (sz[i].a==str[0]) { st=i; break; }\n\t\tfor (ll i=n;i;i--) if (sz[i].a==str.back()) { ed=i; break; }\n\t\tprintf(\"%lld %lld\\n\",(ll)(str[0]-str.back()),ed-st+1);\n\t\tfor (ll i=st;i<=ed;i++) printf(\"%lld \",sz[i].b);\n\t}\n\tprintf(\"\\n\");\n}\nint main() {\n\tll t; scanf(\"%lld\",&t); while (t--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1663046816,
        "uid": 319803,
        "name": "CarroT1212",
        "ccfLevel": 6,
        "title": "CF1729C Sol"
    },
    {
        "content": "### \u601d\u8def\n\n\u5f88\u660e\u663e\uff0c\u5982\u679c\u53ea\u8003\u8651\u82b1\u8d39\u6700\u5c0f\uff0c\u76f4\u63a5\u4ece\u7b2c\u4e00\u4e2a\u8df3\u5230\u6700\u540e\u4e00\u4e2a\u662f\u4e00\u5b9a\u4e0d\u52a3\u7684\u3002\u56e0\u4e3a\u4f60\u65e0\u8bba\u5982\u4f55\u90fd\u81f3\u5c11\u8981\u8de8 $\\left|\\text{index}(s_0)-\\text{index}(s_{len-1})\\right|$ \u4e2a\uff0c\u82b1\u8d39\u4e5f\u81f3\u5c11\u662f\u8fd9\u4e48\u591a\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5176\u4ed6\u7684\u5b57\u7b26\uff0c\u5f88\u5bb9\u6613\u5730\u53d1\u73b0\u5982\u679c $\\text{index}(s_i)$ \u7684\u503c\u5728 $\\text{index}(s_0)$ \u4e0e $\\text{index}(s_{len-1})$ \u4e4b\u95f4\uff0c\u63d2\u5165\u540e\u5c31\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u5982\u4e0b\u7b56\u7565\uff1a\u5982\u679c $\\text{index}(s_0)>\\text{index}(s_{len-1})$\uff0c\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u8bbf\u95ee\u503c\u5728 $\\text{index}(s_0)$ \u4e0e $\\text{index}(s_{len-1})$ \u4e4b\u95f4\u7684\u5b57\u7b26\u3002\u5426\u5219\u5c31\u4ece\u5c0f\u5230\u5927\u3002\n\n### Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct e{\n\tint id;\n\tchar p;\n}a[200010];\nchar s[200010];\nbool cmp1(e a,e b){  //\u6392\u5e8f\u3002\u8bb0\u5f97\u8981\u4f7f\u7f16\u53f7\u5c0f\u7684\u5728\u524d\u9762\n\tif(a.p!=b.p){\n\t\treturn a.p<b.p;\n\t}\n\treturn a.id<b.id;\n}\nbool cmp2(e a,e b){\n\tif(a.p!=b.p){\n\t\treturn a.p>b.p;\n\t}\n\treturn a.id<b.id;\n}\nint main(){\n\tint n,len,i,sum,u;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tsum=0;\n\t\tscanf(\"%s\",s);\n\t\tlen=strlen(s);\n\t\tfor(int i=0;i<=len-1;i++){\n\t\t\ta[i+1].id=i+1;  //\u7ed3\u6784\u4f53\u5b58\u7f16\u53f7\n\t\t\ta[i+1].p=s[i];\n\t\t}\n\t\tif(s[0]<s[len-1]){  //\u770b\u5927\u5c0f\u5173\u7cfb\u6392\u5e8f\n\t\t\tsort(a+1,a+len+1,cmp1);  //\u4ece\u5c0f\u5230\u5927\n\t\t}\n\t\telse{\n\t\t\tsort(a+1,a+len+1,cmp2);  //\u4ece\u5927\u5230\u5c0f\n\t\t}\n\t\tfor(i=1;i<=len;i++){\n\t\t\tif(a[i].id==1){  //\u627e\u5230\u7b2c\u4e00\u4e2a\u5b57\u7b26\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tu=i;\n\t\tfor(;;i++){\n\t\t\tsum++;  //\u8bb0\u5f55\u4e00\u5171\u6709\u591a\u5c11\u5b57\u7b26\u53ef\u4ee5\u8df3\n\t\t\tif(a[i].id==len){  //\u5230\u4e86\u6700\u540e\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",abs(s[0]-s[len-1]),sum);  //\u5148\u8f93\u51fa\u603b\u6570\n\t\tfor(i=u;;i++){\n\t\t\tprintf(\"%d \",a[i].id);\n\t\t\tif(a[i].id==len){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}\n```",
        "postTime": 1663033694,
        "uid": 393934,
        "name": "zhicheng",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1729C Jumping on Tiles"
    },
    {
        "content": "# CF1729C Jumping on Tiles \u9898\u89e3\r\n\r\n## \u9898\u76ee\u63cf\u8ff0\r\n\r\n\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u7684\u503c\u4e3a\u8fd9\u4e2a\u5b57\u6bcd\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u5e8f\u53f7\u3002\u73b0\u5728\u4ece\u7b2c $1$ \u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8df3\u5230\u4efb\u4e00\u4e00\u4e2a\u5b57\u7b26\uff0c\u4ee3\u4ef7\u4e3a\u4e24\u4e2a\u5b57\u7b26\u7684\u503c\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u8df3\u5230\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u65f6\u7ed3\u675f\u3002\u95ee\u5728\u6ee1\u8db3\u8df3\u5230\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6240\u7528\u4ee3\u4ef7\u4e4b\u548c\u6700\u5c0f\u7684\u524d\u63d0\u4e0b\uff0c\u6700\u591a\u80fd\u8df3\u5230\u54ea\u4e9b\u683c\u5b50\u3002\r\n\r\n## \u601d\u8def\r\n\r\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u6700\u5c0f\u4ee3\u4ef7\u4e4b\u548c\u5c31\u662f\u7b2c\u4e00\u4e2a\u4e0e\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u503c\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u8bbe\u7b2c $i$ \u4e2a\u5b57\u7b26\u7684\u503c\u4e3a $a_{i}$\uff0c\u5171 $n$ \u4e2a\u5b57\u7b26\uff0c\u56e0\u4e3a\u5fc5\u987b\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u7ed3\u675f\uff0c\u90a3\u4e48\u81f3\u5c11\u6240\u9700\u4ee3\u4ef7\u5c31\u662f $\\lvert a_{n}-a_{1} \\rvert$\uff0c\u5982\u679c\u518d\u63d2\u5165\u4e00\u4e2a $a_{i}$\uff0c\u5982\u679c $a_{i}$ \u5728 $a_{1}\\sim a_{n}$\uff08$a_{1}<a_{n}$\uff09\u6216 $a_{n}\\sim a_{i}$\uff08$a_{1}>a_{n}$\uff09\u4e4b\u95f4\uff0c\u90a3\u4e48\u4ee3\u4ef7\u4e4b\u548c\u4e0d\u4f1a\u6539\u53d8\uff0c\u4f46\u5982\u679c\u4e0d\u5728\u8303\u56f4\u5185\uff0c\u90a3\u4e48\u4ee3\u4ef7\u548c\u4e00\u5b9a\u4f1a\u589e\u52a0\u3002\u6240\u4ee5\u8981\u53d6\u5f97\u4f4e\u4ef7\u6700\u5c0f\uff0c\u53ea\u8981\u628a\u6240\u6709\u5728\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u7684\u503c\u4e4b\u95f4\u7684\u6570\u52a0\u5165\uff0c\u6309\u5347\u5e8f\u6216\u964d\u5e8f\u6392\u5e8f\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u6700\u4f73\u65b9\u6848\u4e86\u3002\r\n\r\n## code\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint t,sl,ans,ansl;\r\nint sx[200010],tot;\r\nstring s;\r\npriority_queue<pair<int,int> > q;//\u7528\u4f18\u5148\u961f\u5217\u6765\u6392\u5217\u987a\u5e8f \r\nint main(){\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tans=0,ansl=0,tot=0;//\u521d\u59cb\u5316 \r\n\t\tcin>>s;\r\n\t\tsl=s.size()-1;\r\n\t\tchar la=s[sl],fi=s[0];\r\n\t\tif(la>fi){//\u5982\u679c\u6700\u540e\u4e00\u4e2a\u6bd4\u7b2c\u4e00\u4e2a\u5927 \r\n\t\t\tfor(int i=1;i<sl;i++){\r\n\t\t\t\tif(s[i]<=la&&s[i]>=fi){\r\n\t\t\t\t\tq.push(make_pair(-(int)s[i],i));//\u538b\u5165\u8d1f\u503c\uff0c\u5347\u5e8f\u6392\u5217 \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tfor(int i=1;i<sl;i++){\r\n\t\t\t\tif(s[i]>=la&&s[i]<=fi){\r\n\t\t\t\t\tq.push(make_pair((int)s[i],i));//\u964d\u5e8f\u6392\u5217 \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tint t,s=(int)fi;\r\n\t\twhile(!q.empty()){\r\n\t\t\tansl++;//\u4e00\u5171\u7684\u957f\u5ea6 \r\n\t\t\tt=abs(q.top().first);\r\n\t\t\tans+=abs(t-s);//\u4ece\u4e0a\u4e00\u4e2a\u5230\u73b0\u5728\u6240\u9700\u4ee3\u4ef7 \r\n\t\t\tsx[tot++]=q.top().second;//\u8df3\u7684\u987a\u5e8f \r\n\t\t\ts=t;\r\n\t\t\tq.pop();\r\n\t\t}\r\n\t\tif(!ansl){\r\n\t\t\tans=abs((int)la-(int)fi);//\u5982\u679c\u53ea\u6709\u9996\u5c3e\u4e24\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u4e24\u4e2a\u6570\u4e4b\u5dee \r\n\t\t}\r\n\t\telse{\r\n\t\t\tans+=abs(t-(int)la);//\u56e0\u4e3a\u5806\u91cc\u6ca1\u6709\u52a0\u5165\u6700\u540e\u4e00\u4e2a\u6570\uff0c \u6240\u4ee5\u518d\u52a0\u4e0a \r\n\t\t}\r\n\t\tprintf(\"%d %d\\n\",ans,ansl+2);//\u7b54\u6848\u548c\u6700\u591a\u6570\u91cf\uff0c\u6700\u591a\u6570\u91cf\u56e0\u4e3a\u6ca1\u6709\u7b97\u9996\u5c3e\u6240\u4ee5\u8981\u52a02 \r\n\t\tcout<<\"1 \";//\u9996 \r\n\t\tfor(int i=0;i<tot;i++){\r\n\t\t\tprintf(\"%d \",sx[i]+1);\r\n\t\t}\r\n\t\tcout<<sl+1;//\u5c3e \r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\n```\r\n",
        "postTime": 1663041038,
        "uid": 403895,
        "name": "THH_Konnyaku",
        "ccfLevel": 4,
        "title": "CF1729C Jumping on Tiles\u9898\u89e3"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\u6bd4\u8f83\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff0c\u6700\u7ec8\u7684\u6700\u5c0f $cost$ \u4e00\u5b9a\u662f $|\\operatorname{index}(s_1) - \\operatorname{index}(s_n)|$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e3a\u4e86\u4fdd\u6301\u6700\u5c0f\u7684 $cost$\uff0c\u80fd\u8df3\u5230\u7684 $s_i$ \u4e00\u5b9a\u662f\u5728 $\\operatorname{index}(s_1)$ \u548c $\\operatorname{index}(s_n)$ \u4e4b\u95f4\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n- \u5f53 $\\operatorname{index}(s_1) \\leq \\operatorname{index}(s_n)$ \u65f6\uff0c\u663e\u7136\u6211\u4eec\u5e94\u8be5\u5728\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u8df3\u6240\u6709\u6ee1\u8db3 $\\operatorname{index}(s_1) \\leq \\operatorname{index}(s_i) \\leq \\operatorname{index}(s_n)$ \u7684 $s_i$\u3002\n\n- \u5f53 $\\operatorname{index}(s_1) > \\operatorname{index}(s_n)$ \u65f6\uff0c\u5219\u5e94\u8be5\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u8df3\u6240\u6709\u6ee1\u8db3 $\\operatorname{index}(s_n) \\leq \\operatorname{index}(s_i) \\leq \\operatorname{index}(s_1)$ \u7684 $s_i$\u3002\n\n\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5355\u6b21 $O(n \\log n)$\u3002\n\n\u6c42\u51fa $cost$ \u548c\u6240\u6709\u8981\u8df3\u5230\u7684\u70b9\u7684\u590d\u6742\u5ea6\u4e3a\u6700\u574f\u5355\u6b21 $O(n)$\u3002\n\n\u56e0\u6b64\u6574\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\sum n \\log n)$\u3002\n\n## AC Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct Node{int ind, id;}a[200001];\nchar s[200001];\nint ans[200001];\n\ninline int getindex(char c){return c - 'a' + 1;}\ninline bool cmp_min(Node x, Node y){return x.ind < y.ind;}\ninline bool cmp_max(Node x, Node y){return x.ind > y.ind;}\n\nint main(){\n\tint t, n;\n\tscanf(\"%d\", &t);\n\twhile (t--){\n\t\tscanf(\"%s\", s + 1);\n\t\tn = strlen(s + 1);\n\t\tfor (int i=1; i<=n; i++) a[i] = (Node){getindex(s[i]), i};\n\t\tif (getindex(s[1]) <= getindex(s[n])) stable_sort(a + 1, a + n + 1, cmp_min);\n\t\telse stable_sort(a + 1, a + n + 1, cmp_max);\n\t\tint p = 1, q;\n\t\twhile (a[p].id != 1) p++;\n\t\tq = p + 1;\n\t\twhile (a[q].id != n) q++;\n\t\tans[1] = a[p].id;\n\t\tint cost = 0;\n\t\tfor (int i=p+1; i<=q; i++){\n\t\t\tans[i - p + 1] = a[i].id;\n\t\t\tcost += abs(a[i].ind - a[i - 1].ind);\n\t\t}\n\t\tprintf(\"%d %d\\n\", cost, q - p + 1);\n\t\tfor (int i=1; i<=q-p+1; i++) printf(\"%d \", ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\n```\n\nPS\uff1a\u7531\u4e8e\u6d1b\u8c37 RMJ \u6b63\u5728\u7ef4\u62a4\uff0cCodeforces \u4e0a\u7684 AC \u8bb0\u5f55\u5728[\u8fd9\u91cc](https://codeforces.com/contest/1729/submission/175328164)\u3002",
        "postTime": 1665405001,
        "uid": 542282,
        "name": "lrqlrq250",
        "ccfLevel": 0,
        "title": "CF1729C Jumping on Tiles \u9898\u89e3"
    },
    {
        "content": "# $\\text{Problems}$\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0cpolycarp \u6b32\u4ece\u5b57\u7b26\u4e32\u9996\u8df3\u5230\u5b57\u7b26\u4e32\u672b ($s_1$ \u2192 $s_n$\uff0c\u5176\u4e2d $n$ \u8868\u793a\u8be5\u5b57\u7b26\u4e32\u957f\u5ea6)\u3002\n\n\u5047\u8bbe polycarp \u73b0\u4ece $a_i$ \u8df3\u5230\u4e86 $a_j$ \u6211\u4eec\u5b9a\u4e49\u8fd9\u4e00\u6b21\u8df3\u8dc3\u7684\u6743\u503c\u4e3a $|\\operatorname{index}(a_i) - \\operatorname{index}(a_j)|$\uff0c\u5176\u4e2d $\\operatorname{index}$\n \u8868\u793a\u8be5\u5b57\u7b26\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u5e8f\u53f7 ( \u5982 $\\operatorname{index} = 1, \\; \\operatorname{index} = 26$ )\u3002\n \n \u8bf7\u6784\u9020\u51fa\u4e00\u79cd\u5728\u4fdd\u8bc1**\u6743\u503c\u548c\u6700\u5c0f**\u7684\u60c5\u51b5\u4e0b**\u7ecf\u8fc7\u7684\u5b57\u7b26\u6700\u591a**\u7684\u8df3\u8dc3\u65b9\u6848 ( \u5f53\u7136\uff0c\u540c\u4e00\u4e2a\u5b57\u7b26\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff0c\u5176\u4e2d\u540c\u4e00\u4e2a\u4ec5\u6307\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c )\u3002\n \n ### \u8f93\u5165\u683c\u5f0f\n \n \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 $t \\; (1 \\leqslant t \\leqslant 10^4)$ \uff0c\u8868\u793a\u6d4b\u8bd5\u6837\u4f8b\u7ec4\u6570\u3002\n \n \u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\u6837\u4f8b\uff0c\u5305\u542b\u4e00\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32 $s \\; (2 \\leqslant |s| \\leqslant 2 \\cdot 10^5)$\uff0c\u610f\u4e49\u89c1\u9898\u9762\u3002\n \n ### \u8f93\u51fa\u683c\u5f0f\n \n \u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\u6837\u4f8b\uff0c\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570 $cost$ \u548c $m$ \u5206\u522b\u8868\u793a \u6700\u5c0f\u6743\u503c\u548c \u548c \u6700\u5927\u7ecf\u8fc7\u7684\u5b57\u7b26\u6570\u3002\n \n \u7b2c\u4e8c\u884c\u5305\u542b $m$ \u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u6cbf\u9014\u7ecf\u8fc7\u7684\u6240\u6709\u5b57\u7b26\u4f4d\u7f6e\u3002( \u4f8b\u5982\u8f93\u51fa $1 \\; 4 \\; 3 \\; 5$ \u8868\u793a\u8df3\u8dc3\u8def\u5f84\u4e3a $s_1$ \u2192 $s_4$ \u2192 $s_3$ \u2192 $s_5$ ) \u6570\u4e0e\u6570\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\n \n $Translated \\; by \\; Zigh$\n \n# $\\text{Answer}$\n\n\u8003\u8651\u5230\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c $c$ \u6ee1\u8db3 $c\\in[a,b]$\uff0c\u90a3\u4e48\u6709 $|c-a|+|c-b|=|a-b|$\uff0c\u53ef\u4ee5\u901a\u8fc7\u8003\u8651\u6570\u8f74\u8bc1\u660e\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u4ece $2$ \u5230 $n-1$ \u4e2d\u628a\u6240\u6709 $a_{i}\\in[a_{1},a_{n}]$ \u90fd\u9009\u51fa\u6765\uff0c\u518d\u5c06\u5b83\u4eec\u4ece\u5c0f\u5230\u5927\uff08\u6216\u4ece\u5927\u5230\u5c0f\uff0c\u8fd9\u5f97\u8003\u8651 $a$ \u4e0e $b$ \u7684\u5927\u5c0f\u5173\u7cfb\uff09\uff0c\u5982\u679c $a$ \u5927\u4e8e $b$\uff0c\u90a3\u4e48\u4ece\u5927\u5230\u5c0f\u8f93\u51fa\uff0c\u53cd\u4e4b\u5219\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u3002\n\n\u663e\u7136\u8fd9\u6837\u9009\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n# $\\text{Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct arr\n{\n    int sum,num;\n}a[200002];\nint t;\nchar s[200002];\nint n;\nbool cmp1(arr x,arr y)\n{\n    return x.sum>y.sum;\n}\nbool cmp2(arr x,arr y)\n{\n    return x.sum<y.sum;\n}\nvoid work()\n{\n    scanf(\"%s\",s+1);\n    n=strlen(s+1);\n    for(int i=1;i<=n;++i) a[i].sum=s[i]-96,a[i].num=i;\n    cout<<abs(a[1].sum-a[n].sum)<<\" \";\n    if(a[1].sum>a[n].sum)\n    {\n        sort(a+2,a+n,cmp1);\n        int x=0;\n        for(int i=2;i<n;++i)\n            if(a[i].sum<=a[1].sum)\n            {\n                x=i;\n                break;\n            }\n        int y=n;\n        for(int i=n-1;i>=2;--i)\n            if(a[i].sum>=a[n].sum)\n            {\n                y=i;\n                break;\n            }\n        if(x==0||y==n)\n        {\n            cout<<\"2\\n1 \"<<n<<\"\\n\";\n            return;\n        }\n        cout<<y-x+1+2<<\"\\n\"<<\"1 \";\n        for(int i=x;i<=y;++i) cout<<a[i].num<<\" \";\n        cout<<n<<\"\\n\";\n    }\n    else\n    {\n        sort(a+2,a+n,cmp2);\n        int x=0;\n        for(int i=2;i<n;++i)\n            if(a[i].sum>=a[1].sum)\n            {\n                x=i;\n                break;\n            }\n        int y=n;\n        for(int i=n-1;i>=2;--i)\n            if(a[i].sum<=a[n].sum)\n            {\n                y=i;\n                break;\n            }\n        if(x==0||y==n)\n        {\n            cout<<\"2\\n1 \"<<n<<\"\\n\";\n            return;\n        }\n        cout<<y-x+1+2<<\"\\n\"<<\"1 \";\n        for(int i=x;i<=y;++i) cout<<a[i].num<<\" \";\n        cout<<n<<\"\\n\";\n    }\n}\nint main()\n{\n    cin>>t;\n    while(t--) work();\n    return 0;\n}\n```",
        "postTime": 1663251871,
        "uid": 202802,
        "name": "BotDand",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1729C \u3010Jumping on Tiles\u3011"
    },
    {
        "content": "$\\text{C.Jumping on Tiles}$\n\n\u9898\u610f\u7b80\u5316\uff1a\u4ece\u5934\u8df3\u5230\u5c3e\uff0c\u5728\u4ee3\u4ef7\u6700\u5c0f\u7684\u524d\u63d0\u4e0b\uff0c\u8981\u6c42\u8df3\u7684\u6b21\u6570\u6700\u591a\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u65b9\u6848\u3002\n\n\u6700\u5c0f\u4ee3\u4ef7\u5c31\u662f\u5934\u548c\u5c3e\u7684\u5dee\uff0c\u6240\u4ee5\u5728\u5934\u548c\u5c3e\u4e4b\u95f4\u4e0d\u80fd\u8df3\u5230\u5728\u5934\u548c\u5c3e\u8303\u56f4\u4e4b\u5916\u7684\u5b57\u7b26\u3002\u6240\u4ee5\u5728\u5934\u548c\u5c3e\u4e4b\u95f4\u8df3\u6240\u6709\u5728\u5934\u548c\u5c3e\u7684\u5b57\u7b26\u8303\u56f4\u5185\u7684\u5b57\u7b26\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u8df3\u7684\u5b57\u7b26\u4e00\u5b9a\u8981\u8fde\u7eed\uff0c\u4e0d\u7136\u4f1a\u4f7f\u4ee3\u4ef7\u53d8\u5927\u3002\n\n\u56e0\u6b64\uff0c\u53ef\u4ee5\u628a\u5934\u548c\u5c3e\u4e4b\u95f4\u7684\u5b57\u7b26\u6839\u636e\u5934\u548c\u5c3e\u5b57\u7b26\u7684\u5927\u5c0f\u5173\u7cfb\u8fdb\u884c\u964d\u5e8f\u6216\u5347\u5e8f\u6392\u5e8f\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+10;\nstruct node{\n\tchar a;\n\tint b;\n}q[N];\nint cnt,ans;\nchar s[N];\nvector<int> sta;\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nbool cmp1(node x,node y){\n\treturn x.a<y.a;\n}\nbool cmp2(node x,node y){\n\treturn x.a>y.a;\n}\nint main(){\n\tint i,j,n,len;\n\tn=read();\n\twhile(n--){\n\t\tcin>>s;\n\t\tcnt=0;ans=0;sta.clear();\n\t\tlen=strlen(s);\n\t\tfor(i=1;i<len-1;i++){\n\t\t\tq[++cnt].a=s[i];\n\t\t\tq[cnt].b=i;\n\t\t}\n\t\tif(s[0]<=s[len-1]){\n\t\t\tsort(q+1,q+1+cnt,cmp1);\n\t\t\tfor(i=1;i<=cnt;i++){\n\t\t\t\tif(q[i].a<=max(s[0],s[len-1])&&q[i].a>=min(s[0],s[len-1])){\n\t\t\t\t\tans++;\n\t\t\t\t\tsta.push_back(q[i].b);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d %d\\n\",abs(s[0]-s[len-1]),ans+2);\n\t\t\tprintf(\"1 \");\n\t\t\tfor(j=0;j<sta.size();j++) printf(\"%d \",sta[j]+1);\n\t\t\tprintf(\"%d\\n\",len);\n\t\t}\n\t\telse if(s[0]>s[len-1]){\n\t\t\tsort(q+1,q+1+cnt,cmp2);\n\t\t\tfor(i=1;i<=cnt;i++){\n\t\t\t\tif(q[i].a<=max(s[0],s[len-1])&&q[i].a>=min(s[0],s[len-1])){\n\t\t\t\t\tans++;\n\t\t\t\t\tsta.push_back(q[i].b);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d %d\\n\",abs(s[0]-s[len-1]),ans+2);\n\t\t\tprintf(\"1 \");\n\t\t\tfor(j=0;j<sta.size();j++) printf(\"%d \",sta[j]+1);\n\t\t\tprintf(\"%d\\n\",len);\n\t\t}\n\t}\n\treturn 0;\n}\n\u00a0\n```\n",
        "postTime": 1663055277,
        "uid": 225100,
        "name": "ice_in_sky",
        "ccfLevel": 0,
        "title": "CF1729C Jumping on Tiles"
    }
]