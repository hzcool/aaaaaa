[
    {
        "content": "\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u5c31\u662f\u901a\u8fc7\u5efa\u7acb\u4e8c\u5206\u56fe\u7136\u540e\u8dd1\u4e8c\u5206\u56fe\u67d3\u8272\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u5728\u6bcf\u5bf9\u60c5\u4fa3\u4e4b\u95f4\u8fde\u8fb9\uff0c\u8868\u793a\u4ed6\u4eec2\u4e2a\u5403\u7684\u4e0d\u4e00\u6837\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u76f8\u90bb3\u4e2a\u4eba\u4e2d\u8981\u67092\u4e2a\u5403\u7684\u4e0d\u540c\u7684\u9650\u5236\uff0c\u6211\u4eec\u5c31\u5728$2-1$\u548c$2i$\u4e4b\u95f4\u8fde\u8fb9\n\u56e0\u4e3a\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e09\u4e2a\u4eba\u4e2d\u5fc5\u5b9a\u67092\u4e2a\u5403\u7684\u4e0d\u540c\u3002\n\n\u4f46\u662f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5efa\u51fa\u6765\u7684\u56fe\u4e00\u5b9a\u662f\u4e8c\u5206\u56fe\u5462\uff1f\n\n\u5173\u4e8e\u4e8c\u5206\u56fe\u6709\u4e2a\u6027\u8d28\uff0c\u5982\u679c\u8fd9\u4e2a\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u6709\u5947\u73af\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u4e00\u5b9a\u662f\u4e8c\u5206\u56fe\u3002\n\n\u6211\u4eec\u5047\u8bbe$2i$\u548c$2i-1$\u4e4b\u95f4\u5df2\u7ecf\u6709\u4e00\u6761\u8def\u5f84\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u53ea\u4f1a\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u60c5\u4fa3\uff0c\u6240\u4ee5\u8fd9\u6761\u8def\u5f84\u4e00\u5b9a\u662f\u6709$x$\u6761\u60c5\u4fa3\u4e4b\u95f4\u7684\u8fb9\u548c$x-1$\u6761\u76f8\u90bb\u70b9\u4e4b\u95f4\u7684\u8fb9\u7ec4\u6210\u7684\uff08\u8fd9\u4e2a\u53ef\u4ee5\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\uff09\uff0c\u518d\u52a0\u4e0a\u8fd9\u6761\u8fb9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u73af\u5c31\u662f\u5076\u73af\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,x[200005],y[200005],c[200005];\nvector<int>v[200005];\nbool vis[200005];\nvoid dfs(int x,int y)//\u4e8c\u5206\u56fe\u67d3\u8272\n{\n    c[x]=y;\n    vis[x]=1;\n    for(int i=0; i<v[x].size(); i++)\n    {\n        int h=v[x][i];\n        if(!c[h])dfs(h,3-y);\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>x[i]>>y[i];\n        v[x[i]].push_back(y[i]);\n        v[y[i]].push_back(x[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        v[i*2-1].push_back(i*2);\n        v[i*2].push_back(i*2-1);\n    }\n    for(int i=1;i<=n*2;i++)if(!vis[i])dfs(i,1);\n    for(int i=1;i<=n;i++)printf(\"%d %d\\n\",c[x[i]],c[y[i]]);\n}\n```",
        "postTime": 1589518714,
        "uid": 88004,
        "name": "\u738b\u5955\u6e05",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF741C \u3010Arpa\u2019s overnight party and Mehrdad\u2019s silent entering\u3011"
    },
    {
        "content": "\u76f4\u63a5\u65e0\u8111\u968f\u673a\u8c03\u6574\uff01\n\n\u5927\u529b\u94a6\u70b9 $121212\\cdots$ \u5206\u914d\u3002\n\n\u6709\u9650\u5236\u7684\u4e4b\u95f4\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5f3a\u5236\u6539\u6210\u76f8\u53cd\u7684\uff0c\u6b64\u540e\u5176\u4e2d\u4e00\u4e2a\u6539\u53d8\u53e6\u4e00\u4e2a\u4e5f\u8981\u6539\u53d8\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u53ef\u80fd\u4e0d\u6ee1\u8db3\u76f8\u90bb\u4e09\u4e2a\u4e0d\u80fd\u90fd\u76f8\u540c\u4e86\uff0c\u628a\u51b2\u7a81\u7684\u62c9\u5230\u4e00\u4e2a\u961f\u5217\u91cc\u9762\uff0c\u6bcf\u6b21\u53d6\u51fa\u961f\u5934\u968f\u673a\u94a6\u70b9\u4e00\u4e2a\u4fee\u6539\uff0c\u518d\u628a\u4fee\u6539\u540e\u65b0\u4ea7\u751f\u7684\u51b2\u7a81\u62c9\u5230\u961f\u5217\u91cc\u9762\u53bb\u3002\n\n\u590d\u6742\u5ea6\u7384\u5b66\uff0c\u5b9e\u6d4b\u8dd1\u7684\u98de\u5feb\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<ctime>\n#include<algorithm>\ntemplate <typename T> T Max(T x, T y) { return x > y ? x : y; }\ntemplate <typename T> T Min(T x, T y) { return x < y ? x : y; }\ntemplate <typename T>\nT& read(T& r) {\n\tr = 0; bool w = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') w = ch == '-' ? 1 : 0, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') r = r * 10 + (ch ^ 48), ch = getchar();\n\treturn r = w ? -r : r;\n}\nconst int N = 1000010;\nint n;\nint to[N], pai[N][2];\nint lastpos(int x) { return (x-2+n)%n+1; }\nint nextpos(int x) { return x%n+1; }\nint a[N];\nbool vis[N];\nstd::queue<int>q;\nbool chk(int i) {return (a[i] == a[nextpos(i)] && a[nextpos(i)] == a[nextpos(nextpos(i))]); }\nvoid chk2(int pos) {\n\tif(chk(pos)) {\n\t\tif(!vis[pos]) q.push(pos);\n\t\tvis[pos] = 1;\n\t}\n\telse vis[pos] = 0;\n\tif(chk(lastpos(pos))) {\n\t\tif(!vis[lastpos(pos)]) q.push(lastpos(pos));\n\t\tvis[lastpos(pos)] = 1;\n\t}\n\telse vis[lastpos(pos)] = 0;\n\tif(chk(lastpos(lastpos(pos)))) {\n\t\tif(!vis[lastpos(lastpos(pos))]) q.push(lastpos(lastpos(pos)));\n\t\tvis[lastpos(lastpos(pos))] = 1;\n\t}\n\telse vis[lastpos(lastpos(pos))] = 0;\n\tif(chk(nextpos(pos))) {\n\t\tif(!vis[nextpos(pos)]) q.push(nextpos(pos));\n\t\tvis[nextpos(pos)] = 1;\n\t}\n\telse vis[nextpos(pos)] = 0;\n\tif(chk(nextpos(nextpos(pos)))) {\n\t\tif(!vis[nextpos(nextpos(pos))]) q.push(nextpos(nextpos(pos)));\n\t\tvis[nextpos(nextpos(pos))] = 1;\n\t}\n\telse vis[nextpos(nextpos(pos))] = 0;\n}\nsigned main() { //freopen(\"in.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout);\n\tsrand(time(NULL)^(unsigned)(* new char));\n\tread(n); bool fl = 0; n <<= 1;\n\tfor(int i = 1; i <= n/2; ++i) {\n\t\tint x, y; read(x); read(y);\n\t\tpai[i][0] = x; pai[i][1] = y;\n\t\tto[x] = y; to[y] = x;\n\t\tif(!(y == (x-2+n)%n+1 || y == x%n+1)) fl = 1;\n\t}\n\tfor(int i = 1; i <= n; ++i) a[i] = i&1;\n\tfor(int i = 1; i <= n; ++i)\n\t\tif(a[i] == a[to[i]])\n\t\t\ta[to[i]] = !a[to[i]];\n\tfor(int i = 1; i <= n; ++i) {\n\t\tvis[i] = chk(i);\n\t\tif(vis[i])\n\t\t\tq.push(i);\n\t}\n\twhile(!q.empty()) {\n\t\tint x = q.front(); q.pop();\n\t\tif(!chk(x)) continue ;\n\t\tint pos = rand()%2+1;\n\t\tif(pos == 1) pos = x;\n\t\telse if(pos == 2) pos = nextpos(x);\n\t\telse if(pos == 3) pos = nextpos(nextpos(x));\n\t\ta[pos] = !a[pos]; a[to[pos]] = !a[to[pos]];\n\t\tchk2(pos); chk2(to[pos]);\n\t}\n\tfor(int i = 1; i <= n/2; ++i)\n\t\tprintf(\"%d %d\\n\", 2-a[pai[i][0]], 2-a[pai[i][1]]);\n\treturn 0;\n}\n```",
        "postTime": 1628682748,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300dCodeforces 741C Arpa\u2019s overnight party and Mehrdad\u2019s silent entering"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF741C)\r\n\r\n## $\\text{Description}$\r\n\r\n- \u6709 $2n$ \u4e2a\u4eba\uff0c\u6392\u6210\u4e00\u4e2a\u5708\uff0c\u6807\u53f7\u4e3a $i$ \u7684\u4eba\u7684\u4e24\u4fa7\u662f $((i-2)\\bmod 2n)+1$ \u548c $(i\\bmod 2n)+1$ \u3002\u8fd9 $2n$ \u4e2a\u4eba\u4e24\u4e24\u4e3a\u4e00\u7ec4\uff0c\u4e00\u5171 $n$ \u7ec4\u3002\r\n- \u73b0\u5728\u8ba9\u4f60\u7ed9\u8fd9\u4e9b\u4eba\u7f16\u53f7 $1/2$\uff0c\u8981\u6c42\u4e0d\u5b58\u5728\u8fde\u7eed\u4e09\u4e2a\u4eba\u540c\u7f16\u53f7\uff0c\u8981\u6c42\u7ed9\u51fa\u67d3\u8272\u65b9\u6848\u3002\r\n- \u82e5\u4e0d\u5b58\u5728\u8f93\u51fa $-1$\u3002\r\n\r\n## $\\text{Solution}$\r\n\r\n~~\u545c\u545c\uff0c\u6a21\u62df\u8d5b\u8003\u4e86\u8fd9\u9898\u8003\u573a\u964d\u667a\u4e86\u3002~~\r\n\r\n\u8003\u8651\u5f3a\u5236\u8ba9 $2i$ \u4e0e $2i-1$ \u7f16\u53f7\u4e0d\u540c\u3002\r\n\r\n\u5bf9\u6bcf\u4e2a\u4eba\u5efa\u70b9\uff0c\u6211\u4eec\u8003\u8651\u8ba9\u7f16\u53f7\u4e0d\u540c\u7684\u9650\u5236\u4e3a\u8fb9\uff0c\u5373\u8fde\u8fb9 $2i\\to 2i-1$ \u4e0e $2i-1\\to 2i$\u3002\r\n\r\n\u540c\u65f6\u4e5f\u5728\u6bcf\u7ec4\u4eba\u4e4b\u95f4\u8fde\u65e0\u5411\u8fb9\u3002\r\n\r\n\u6709\u7ed3\u8bba\u8be5\u56fe\u5fc5\u80fd\u5206\u6210\u4e8c\u5206\u56fe\u3002\r\n\r\n\u8003\u8651\u8bc1\u660e\u7ed3\u8bba\u3002\r\n\r\n\u56fe\u80fd\u5206\u6210\u4e8c\u5206\u56fe\u7684\u5145\u8981\u6761\u4ef6\u662f\u8be5\u56fe\u4e0d\u5b58\u5728\u5947\u73af\u3002\r\n\r\n\u8003\u8651\u5230\u7ec4\u9650\u5236\u548c\u76f8\u90bb\u9650\u5236\u90fd\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u6709\u6070\u597d\u4e00\u6761\u8fb9\u3002\r\n\r\n\u90a3\u4e48\u5728\u73af\u4e0a\u5fc5\u5b9a\u662f\u4e00\u6761\u7ec4\u9650\u5236\u8fb9\u548c\u4e00\u6761\u76f8\u90bb\u9650\u5236\u8fb9\u76f8\u4e92\u4ea4\u66ff\u3002\r\n\r\n\u90a3\u4e48\u73af\u957f\u5fc5\u5b9a\u662f\u5076\u6570\u3002\r\n\r\n\u8bc1\u6bd5\u3002\r\n\r\n\u56e0\u6b64\u76f4\u63a5\u4e8c\u5206\u56fe\u67d3\u8272\u5373\u53ef\u3002\r\n\r\n## $\\text{Code}$\r\n\r\n```cpp\r\nconst int N=1e6+5;\r\nint n,a[N]={2},cnt,hd[N],b[N],g[N];\r\nstruct edge{int nxt,t;}es[N<<2];\r\ninline void add(int x,int y){es[++cnt]=(edge){hd[x],y};hd[x]=cnt;}\r\n\r\ninline void dfs(int x,int fa){\r\n\ta[x]=a[fa]^3;\r\n\tfor(re i=hd[x];i;i=es[i].nxt)\r\n\t\tif(!a[es[i].t]) dfs(es[i].t,x);\r\n}\r\n\r\n// ---------- Assign ---------- //\r\n\r\nint main(){\r\n//\tfreopen(\".in\",\"r\",stdin);\r\n//\tfreopen(\".out\",\"w\",stdout);\r\n//\tios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n\trd(n);\r\n\tfor(re i=1;i<=n;++i) add(2*i,2*i-1),add(2*i-1,2*i);\r\n\tfor(re i=1;i<=n;++i){rd(b[i]);rd(g[i]);add(b[i],g[i]);add(g[i],b[i]);}\r\n\tfor(re i=1;i<=n*2;++i) if(!a[i]) dfs(i,0);\r\n\tfor(re i=1;i<=n;++i) wr(a[b[i]]),putchar(' '),wr(a[g[i]]),puts(\"\");\r\n\treturn 0;\r\n}\r\n\r\n// ---------- Main ---------- //\r\n```",
        "postTime": 1628580154,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "CF741C Arpa\u2018s overnight party and Mehrdad\u2018s silent entering \u9898\u89e3 \u4e8c\u5206\u56fe\u67d3\u8272"
    },
    {
        "content": "### \u9898\u89e3\uff1a\n\n\u60c5\u4fa3\u5173\u7cfb\u7b49\u4ef7\u4e24\u8005\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\n\n\u6539\u53d8\u8fde\u7eed\u4e09\u4e2a\u7684\u9650\u5236\uff0c\u53d8\u4e3a\u8981\u6c42 $2i$ \u548c $2i -1$ \u98df\u7269\u7c7b\u578b\u4e0d\u540c\uff0c\u8fde\u4e00\u6761\u8fb9\n\n\u53d1\u73b0\u8fd9\u5f20\u56fe\u4e0a\u4e0d\u5b58\u5728\u5947\u73af\uff0c\u5373\u8fd9\u662f\u5f20\u4e8c\u5206\u56fe\n\n\u6240\u4ee5\u76f4\u63a5\u4e8c\u5206\u56fe\u67d3\u8272\u5373\u53ef\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#pragma GCC target(\"avx\")\n#include <bits/stdc++.h>\nusing namespace std;\n#ifdef ONLINE_JUDGE\n#define getchar gc\ninline char gc(){\n\tstatic char buf[1<<16],*p1=buf,*p2=buf;\n\tif(p1==p2){\n\t\tp2=(p1=buf)+fread(buf,1,1<<16,stdin);\n\t\tif(p2==p1) return EOF;\n\t}\n\treturn *p1++;\n}\n#endif\ntemplate<class t> inline t read(t &x){\n    char c=getchar();bool f=0;x=0;\n    while(!isdigit(c)) f|=c=='-',c=getchar();\n    while(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    if(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n    if(x<0) putchar('-'),write(-x);\n    else{if(x>9) write(x/10);putchar('0'+x%10);}\n}\n\nconst int N=2e5+5;\nint n,a[N],b[N],col[N],ans[N];\nbool tg[N];\nvector<int> g[N];\n\nvoid dfs(int x){ //\u67d3\u8272\n\tfor(int y:g[x]){\n\t\tif(ans[y]){\n\t\t\tif(ans[y]==ans[x]){\n\t\t\t\twrite(-1);\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\n\t\telse ans[y]=3-ans[x],dfs(y);\n\t}\n}\n\nsigned main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++){\n\t\tread(a[i]);\n\t\tread(b[i]);\n\t\tif(a[i]>b[i]) swap(a[i],b[i]),tg[i]=1; //\u5b58\u5728a>b\u7684\u60c5\u51b5\n\t\tcol[a[i]]=col[b[i]]=i; //\u8bb0\u4e0b\u662f\u54ea\u5bf9\u60c5\u4fa3\n\t\tg[i*2].push_back(i*2-1); //\u76f8\u90bb\u8fb9\n\t\tg[i*2-1].push_back(i*2);\n\t\tg[a[i]].push_back(b[i]); //\u60c5\u4fa3\u8fb9\n\t\tg[b[i]].push_back(a[i]);\n\t}\n\tfor(int i=1;i<=2*n;i++) if(!ans[i]) ans[i]=1,dfs(i);\n\tfor(int i=1;i<=n;i++) if(tg[i]) swap(a[i],b[i]);\n\tfor(int i=1;i<=n;i++) printf(\"%d %d\\n\",ans[a[i]],ans[b[i]]);\n}\n```",
        "postTime": 1589508941,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF741C \u3010Arpa\u2019s overnight party and Mehrdad\u2019s silent entering\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u4e3b\u8981\u63d0\u4f9b\u4e00\u79cd\u5bb9\u6613\u7406\u89e3\u7684\u4e8c\u5206\u56fe\u8bc1\u660e\u65b9\u6cd5\u3002\n\n\u8003\u8651\u6309\u4e0b\u9762\u7684\u7b56\u7565\u6784\u9020\u4e00\u5f20\u4e8c\u5206\u56fe\uff1a\n\n\u5bf9\u4e8e\u70b9 $2x$ \u8fde\u4e00\u6761\u65e0\u5411\u8fb9 $2x-1$  \uff0c\u5bf9\u8be5\u7c7b\u8fb9\u79f0\u4e3a \u201c\u4e00\u7c7b\u8fb9\u201d\uff0c\u6240\u6709 \u201c\u4e00\u7c7b\u8fb9\u201d\u6784\u6210\u7684\u8fb9\u96c6\u96c6\u5408\u4e3a $E_1$ \u3002\n\n\u5bf9\u4e8e\u4e00\u5bf9\u60c5\u4fa3 $x,y$ \u8fde\u4e00\u6761\u65e0\u5411\u8fb9 $(x,y)$ \u5bf9\u8be5\u7c7b\u8fb9\u79f0\u4e3a \u201c\u4e8c\u7c7b\u8fb9\u201d\uff0c\u6240\u6709 \u201c\u4e8c\u7c7b\u8fb9\u201d\u6784\u6210\u7684\u8fb9\u96c6\u96c6\u5408\u4e3a $E_2$ \u3002\n\n\u4ee4\u70b9\u96c6 $V = \\{x | 1\\le x\\le 2\\times n,x\\in Z\\}$ \u3002\n\n\u5bf9\u56fe $G=(V,E_1\\bigcup E_2)$ \u8fdb\u884c\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u79cd\u5408\u6cd5\u7684\u4e8c\u5206\u56fe\u67d3\u8272\u65b9\u6848\u5176\u4e00\u5b9a\u662f\u6ee1\u8db3\u8981\u6c42\u7684\uff0c\u5e76\u4e14\u8fd9\u6837\u5efa\u56fe\u4fdd\u8bc1\u56fe\u4e00\u5b9a\u662f\u4e8c\u5206\u56fe\u3002\n\n\n\u8bc1\u660e\uff1a\n\n\u9996\u5148\uff0c\u6709\u4e00\u4e2a\u5173\u952e\u6027\u8d28\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u5176\u5ea6\u6570\u4e00\u5b9a\u662f\u5c0f\u4e8e\u7b49\u4e8e\u4e8c\u7684\uff08\u56e0\u4e3a\u4e00\u4e2a\u70b9\u81f3\u591a\u8fde\u4e00\u6761\u201c\u4e00\u7c7b\u8fb9\u201d\u548c\u4e00\u6761\u201c\u4e8c\u7c7b\u8fb9\u201d\uff09\u3002\n\n\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u4e00\u5b9a\u662f\u7b80\u5355\u73af\u6216\u8005\u94fe\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8bc1\u660e\u8fd9\u4e2a\u56fe\u662f\u4e8c\u5206\u56fe\u5373\u8bc1\u660e\u56fe\u4e2d\u6240\u6709\u7684\u7b80\u5355\u73af\u90fd\u662f\u5076\u6570\u73af\u3002\n\n\u8003\u8651\u56fe $G_1=(V,E_1)$ \uff0c\u901a\u8fc7 \u201c\u52a0\u8fb9\u201d \u5c06\u56fe $G_1$ \u201c\u6539\u9020\u201d \u6210\u56fe $G$ \u3002\n\n\u5bf9\u4e8e\u56fe $G_1$ \uff0c\u82e5\u70b9 $u,v$ \u95f4\u5b58\u5728\u4e00\u6761\u8fb9 $(u,v)$ \u6211\u4eec\u5c06\u5176\u770b\u6210\u4e00\u4e2a\u70b9 $x$ \uff08\u5373\u4e00\u4e2a\u8fde\u901a\u5757\uff09\uff0c\u5c06\u6dfb\u52a0\u7684 $E_2$ \u96c6\u5408\u4e2d\u7684\u8fb9\u770b\u6210\u6240\u6709\u8fd9\u6837\u7684\u70b9 $x$ \u95f4\u7684\u8fde\u8fb9\u3002\n\n\u5e76\u4e14\u6211\u4eec\u53d1\u73b0\uff0c\u6240\u6709\u8fd9\u8bf8\u5982\u8fd9\u6837\u7684\u70b9 $x$ \u7684\u5ea6\u6570\u4e5f\u4e00\u5b9a\u662f\u4e0d\u8d85\u8fc7 $2$ \u7684\u3002\n\n\u5e76\u4e14\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u82e5\u5e72\u4e2a\u70b9 $x$ \u4e0d\u6784\u6210\u73af\uff0c\u90a3\u4e48\u8fd9\u4e9b\u70b9 $x$ \u4ee3\u8868\u7684\u8fde\u901a\u5757\u5185\u7684\u70b9\u4e5f\u6784\u4e0d\u6210\u73af\uff1b\u5982\u679c\u82e5\u5e72\u4e2a\u70b9 $x$ \u6784\u6210\u73af\uff0c\u82e5\u8be5\u73af\u7531 $k$ \u4e2a\u8fd9\u6837\u7684\u70b9 $x$ \u6784\u6210\uff0c\u90a3\u4e48\u5176\u76f8\u5f53\u4e8e\u6709 $2\\times k$ \u4e2a\u70b9\u96c6 $V$ \u5185\u7684\u70b9\u6784\u6210\u7684\u73af\uff0c\u56e0\u6b64 \u201c\u65b0\u56fe\u201d\u7684\u4efb\u610f\u4e00\u4e2a\u73af\uff0c\u4e00\u5b9a\u662f\u5076\u73af\u3002\n\n\u7531\u6b64\u53ef\u8bc1\uff0c\u56fe $G=(V,E1\\bigcup E2)$ \u4e00\u5b9a\u662f\u4e8c\u5206\u56fe\u3002",
        "postTime": 1630164872,
        "uid": 317459,
        "name": "RyexAwl",
        "ccfLevel": 6,
        "title": "CF741C \u4e8c\u5206\u56fe\u67d3\u8272 \u4e8c\u5206\u56fe\u8bc1\u660e"
    },
    {
        "content": "## \u601d\u8def\n\n\u8bbe\u4e24\u4e2a\u6709\u8fb9\u76f8\u8fde\u7684\u70b9\u989c\u8272\u4e0d\u540c\u3002\n\n\u5c06\u60c5\u4fa3\u4e4b\u95f4\u8fde\u8fb9\uff0c\u5bf9\u4e8e $i\\in[1,n]$ \uff0c\u5c06 $2i+1$ \u548c $2i$ \u8fde\u8fb9\uff08\u8fd9\u6837\u80fd\u6ee1\u8db3\u76f8\u90bb\u4e09\u4e2a\u4eba\u4e24\u4e2a\u4eba\u7684\u83dc\u4e0d\u540c\uff09\uff0c\u5f97\u5230\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u539f\u56e0\u662f\u4efb\u4f55\u4e00\u4e2a\u73af\u90fd\u662f\u7531\u82e5\u5e72\u6761\u60c5\u4fa3\u8fb9\u548c\u82e5\u5e72\u6761\u201c3\u4eba\u201d\u8fb9\u4e92\u76f8\u4ea4\u9519\u800c\u6210\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u5947\u73af\u3002\n\n\u7136\u540e\u8dd1\u4e8c\u5206\u56fe\u67d3\u8272\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int _ = 2e5 + 5;\n\nint n;\nint u[_],v[_],col[_];\nvector<int> G[_];\nbitset <_> vis;\n\nvoid dfs(int u,int v)\n{\n    col[u] = v;\n    vis[u] = 1;\n    for(int i = 0;i < G[u].size();i++)\n    {\n        int v_ = G[u][i];\n        if(!col[v_])\n\t\t\tdfs(v_,3 - v);\n    }\n}\nint main()\n{\n    cin >> n;\n    for(int i = 1;i <= n;i++)\n    {\n        cin >> u[i] >> v[i];\n        G[u[i]].push_back(v[i]);\n        G[v[i]].push_back(u[i]);\n    }\n    for(int i = 1;i <= n;i++)\n    {\n        G[i * 2 - 1].push_back(i * 2);\n        G[i * 2].push_back(i * 2 - 1);\n    }\n    for(int i = 1;i <= n * 2;i++)\n\t{\n\t\tif(!vis[i])\n\t\t\tdfs(i,1);\n\t}\n    for(int i = 1;i <= n;i++)\n\t\tcout << col[u[i]] << \" \" << col[v[i]] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1663567573,
        "uid": 413301,
        "name": "Digital_Sunrise",
        "ccfLevel": 7,
        "title": "CF741C Arpa\u2019s overnight party and Mehrdad\u2019s silent entering \u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u5efa\u51fa\u4e00\u4e2a\u56fe\uff0c\u4f7f\u5f97\u56fe\u4e2d\u6709\u8fb9\u7684\u4e24\u70b9\u989c\u8272\u4e0d\u540c\u3002\n\n\u9996\u5148\u60c5\u4fa3\u4e4b\u95f4\u8fde\uff08$\\tt1$ \u7c7b\u8fb9\uff09\u3002\n\n\u63a5\u7740 $\\forall i\\in[1,n]$\uff0c$2i$ \u548c $2i-1$ \u8fde\uff0c\u56e0\u4e3a\u8fd9\u6837\u7b49\u4ef7\u4e8e\u76f8\u90bb\u4e09\u4e2a\u4e0d\u80fd\u76f8\u540c\uff08$\\tt2$ \u7c7b\u8fb9\uff09\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e8c\u5206\u56fe\u3002\u539f\u56e0\u662f\u4efb\u4f55\u4e00\u4e2a\u73af\u90fd\u662f\u7531\u82e5\u5e72\u6761 $\\tt1$ \u7c7b\u8fb9\u548c\u82e5\u5e72\u6761 $\\tt2$ \u7c7b\u8fb9\u4e92\u76f8\u4ea4\u9519\u800c\u6210\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u5947\u73af\u3002\n\n```cpp\nconst int N = 2e5 + 5;\n\nint n,a[N],b[N],col[N];\nvector<int> G[N];\n\nvoid dfs(int u,int c){\n\tif(col[u] && col[u] != c)\n\t\tprintf(\"-1\\n\"),exit(0);\n\tif(col[u]) return;\n\tcol[u] = c;\n\tfor(int v : G[u]) dfs(v,c ^ 1);\n}\n\nsigned main(){\n\tread(n);\n\trep(i,1,n){\n\t\tread(a[i],b[i]);\n\t\tG[a[i]].push_back(b[i]);\n\t\tG[b[i]].push_back(a[i]);\n\t}\n\trep(i,1,n){\n\t\tint x = 2 * i,y = 2 * i - 1;\n\t\tG[x].push_back(y);\n\t\tG[y].push_back(x);\n\t}\n\trep(i,1,2 * n) if(!col[i]) dfs(i,0);\n\trep(i,1,n) printf(\"%d %d\\n\",col[a[i]] + 1,col[b[i]] + 1);\n\treturn 0;\n}\n```",
        "postTime": 1663566548,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF741C \u5efa\u4e8c\u5206\u56fe+\u67d3\u8272"
    },
    {
        "content": "## \u601d\u8def\n\n\u8fd9\u662f\u4e00\u9053\u88f8\u7684\u4e8c\u5206\u56fe\u5224\u5b9a\u9898\uff0c\u8fd9\u91cc\u8003\u8651\u4f7f\u7528\u67d3\u8272\u6cd5\u3002\n\n\u5bf9\u4e8e\u9650\u5236\u4e00\uff1a\u663e\u7136\u60c5\u4fa3\u4e4b\u95f4\u8981\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u5bf9\u4e8e\u9650\u5236\u4e8c\uff1a\u8003\u8651\u5c06\u7f16\u53f7\u4e3a $i\\times2-1$ \u548c $i\\times2$ \u7684\u4eba\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u6bcf $3$ \u4e2a\u4eba\u5403\u7684\u98df\u7269\u90fd\u4e0d\u4e00\u6837\uff08\u6bd5\u7adf\u662f\u6784\u9020\u9898\uff0c\u627e\u6700\u7279\u6b8a\u7684\u60c5\u51b5\uff09\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=1e5+5;\nstruct node\n{\n    int a,b;\n}cp[MAXN];\nvector<int>G[MAXN<<1];\nint col[MAXN<<1];\nbool bfs(int s)\n{\n    queue<int>q;\n    col[s]=1,q.push(s);\n    while(!q.empty())\n    {\n        int x=q.front();q.pop();\n        for(auto y:G[x])\n        {\n            if(!col[y]) col[y]=3-col[x],q.push(y);\n            else if(col[y]==col[x]) return 0;\n        }\n    }\n    return 1;\n}\nint main()\n{\n    int n;\n    cin>>n;\n    for(int i=1;i<=n;++i) scanf(\"%d %d\",&cp[i].a,&cp[i].b),G[cp[i].a].push_back(cp[i].b),G[cp[i].b].push_back(cp[i].a);\n    for(int i=1;i<=n;++i) G[i*2-1].push_back(i*2),G[i*2].push_back(i*2-1);\n    for(int i=1;i<=n*2;++i)\n    {\n        if(col[i]) continue;\n        if(!bfs(i))\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    for(int i=1;i<=n;++i) printf(\"%d %d\\n\",col[cp[i].a],col[cp[i].b]);\n    return 0;\n}\n```\n",
        "postTime": 1662644220,
        "uid": 513900,
        "name": "Wilson_Lee",
        "ccfLevel": 7,
        "title": "CF741C Arpa\u2019s overnight party and Mehrdad\u2019s silent entering \u9898\u89e3"
    },
    {
        "content": "## CodeForces 741C\n\n#### \u601d\u8def\n\n\u8fd9\u9898\u88ab\u67d0\u6a21\u62df\u8d5b\u5f53\u6210T2\uff0c\u8bfb\u4e00\u904d\u9898\uff0cemmm\uff0c\u4e8c\u5206\u56fe\u6ca1\u8dd1\u4e86\u3002\n\n\u8003\u8651\u5efa\u56fe\uff0c\u8003\u573a\u4e0a\u6211\u7b2c\u4e00\u773c\u60f3\u5230\u7684\u662f\u5bf9\u6bcf\u4e00\u4e2a\u5bf9 $(i,i+1)$ \u90fd\u5efa\u4e00\u6761\u8fb9\uff0c\u5e76\u4e14\u5bf9\u6bcf\u5bf9\u60c5\u4fa3\u4e4b\u95f4\u5efa\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u8dd1\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u4f46\u8fd9\u6837\u5efa\u8fb9\u53ef\u80fd\u4f1a\u5b58\u5728\u5947\u73af\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u539f\u56fe\u4e0d\u80fd\u4fdd\u8bc1\u662f\u4e8c\u5206\u56fe\uff0c\u7136\u540e\u5c31\u5047\u6389\u4e86\u3002\n\n\u4e8b\u5b9e\u4e0a\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5bf9\u6bcf\u4e00\u5bf9\u76f8\u90bb\u7684\u70b9\u90fd\u5efa\u8fb9\uff0c\u8f6c\u800c\u5bf9\u7c7b\u4f3c $(1,2),(3,4),(5,6)$ \u8fd9\u6837\u7684\u5f62\u5982 $(i\\times2,i\\times2+1)$ \u7684\u70b9\u5efa\u8fb9\uff0c\u8fd9\u6837\u65e2\u4fdd\u8bc1\u4e86\u8fde\u7eed\u4e09\u4e2a\u4e4b\u4e2d\u81f3\u5c11\u6709\u4e00\u5bf9\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u800c\u4e14\u4e5f\u6ee1\u8db3\u4e00\u5bf9\u60c5\u4fa3\u4e4b\u95f4\u98df\u7269\u4e0d\u540c\u7684\u8981\u6c42\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u8bc1\u660e\u4e00\u4e0b\u8fd9\u6837\u7684\u56fe\u4e0d\u4f1a\u51fa\u73b0\u5947\u73af\uff0c\u4e0d\u96be\u53d1\u73b0\u552f\u4e00\u6709\u53ef\u80fd\u4ea7\u751f\u5947\u73af\u7684\u60c5\u51b5\u4e00\u5b9a\u662f\u7531\u4e00\u5bf9\u60c5\u4fa3\u4e4b\u95f4\u7684\u8fb9\u8d21\u732e\u7684\uff0c\u53ef\u4ee5\u7b80\u5355\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n- \u5982\u679c\u5176\u662f\u5f62\u5982 $(i\\times2\\rightarrow i\\times2+1)$ \u8fd9\u6837\u8fb9\uff0c\u7531\u4e8e\u4e00\u4e2a\u4eba\u53ea\u80fd\u6709\u4e00\u4e2a\u914d\u5076\uff08~~\u5176\u5b9e\u591a\u4e2a\u4e5f\u884c\u561b~~\uff09\uff0c\u90a3\u8fd9\u5bf9\u60c5\u4fa3\u5c31\u6784\u6210\u4e86\u4e00\u4e2a**\u4e0d\u4e0e\u5916\u754c\u8054\u901a**\u7684\u5076\u73af\uff08\u5373\u4ed6\u4eec\u6784\u6210\u72ec\u7acb\u7684\u8054\u901a\u5757\uff09\uff0c\u6700\u7ec8\u8fd9\u4e24\u4e2a\u4eba\u4efb\u610f\u5206\u914d\u4e24\u79cd\u98df\u7269\u5373\u53ef\u3002\n- \u6211\u4eec\u5c06\u8fd9\u79cd\u72ec\u7acb\u7684\u8054\u901a\u5757\u6392\u9664\u4e4b\u540e\uff08\u6211\u4eec\u628a $(i\\times2,i\\times2+1)$ \u8fd9\u6837\u7684\u70b9\u5bf9\u79f0\u4e3a\u4e00\u4e2a\u201c\u8054\u901a\u5757\u201d\uff09\uff0c\u5269\u4e0b\u7684\u8fb9\u4e00\u5b9a\u662f\u4ecb\u4e8e\u4e0d\u540c\u8054\u901a\u5757\u4e4b\u95f4\u7684\uff0c\u8fd9\u79cd\u201c\u5927\u8054\u901a\u5757\u201d\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u4e00\u5b9a\u6709\u6070\u597d\u4e24\u6761\u51fa\u8fb9\uff0c\u800c\u4e14\u4e00\u4e2a\u201c\u5927\u8054\u901a\u5757\u201d\u4e4b\u95f4\u7684\u8fb9\u6570\u4e00\u5b9a\u662f\u5076\u6570\u6761\uff08\u5076\u6570\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e24\u6761\u51fa\u8fb9\uff0c\u4e00\u6761\u8fb9\u4f1a\u5bf9\u4e24\u4e2a\u70b9\u505a\u8d21\u732e\uff0c\u6700\u540e\u7684\u8fb9\u6570\u4e00\u5b9a\u662f\u5076\u6570\u4e2a\uff09\u3002\u6211\u4eec\u5bf9\u8fd9\u4e2a\u56fe\u8dd1\u6b27\u62c9\u56de\u8def\uff0c\u6839\u636e\u6b27\u62c9\u56de\u8def\u7684\u5b9a\u4e49\u6bcf\u4e2a\u70b9\u53ea\u53ef\u80fd\u88ab\u7ecf\u8fc7\u4e00\u6b21\uff08\u4e24\u6761\u8fb9\u4e00\u6761\u5165\u4e00\u6761\u51fa\uff09\uff0c\u6240\u4ee5\u6574\u4e2a\u6b27\u62c9\u56de\u8def\u662f\u8fd9\u4e2a\u56fe\u552f\u4e00\u7684\u73af\uff0c\u800c\u4e14\u6574\u4e2a\u6b27\u62c9\u56de\u8def\u6784\u6210\u7684\u5927\u73af\u662f\u6709\u5076\u6570\u6761\u8fb9\u7684\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u4f1a\u6784\u6210\u5947\u73af\u4e86\u3002\n\n-------\n\n#### code\n\n ```c++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5e5 + 10;\nconst int INF = 0x3f3f3f3f;\nconst int mods = 1e8 - 3;\ninline int read ( )\n{\n    int x = 0, f = 1;\n    char ch = getchar ( );\n    while (ch < '0' || ch > '9') {if (ch == '-') f = - 1; ch = getchar ( );}\n    while (ch >= '0' && ch <='9') {x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar ( );}\n    return x * f;\n}\nint n;\nint a[N], b[N];\nstruct edge{ \n    int ver, nxt;\n}e[N << 2];\nint head[N << 1], tot;\nvoid add_edge (int u, int v) { e[++tot] = (edge) {v, head[u]}; head[u] = tot;}\nbool vis[N << 1];\nint ans[N << 1];\nvoid dfs (int u, int col)\n{\n    ans[u] = col;\n    vis[u] = true;\n    for (int i = head[u]; i; i = e[i].nxt)\n    {\n        int v = e[i].ver;\n        if (vis[v]) continue;\n        dfs (v, col ^ 1);\n    }\n}\nsigned main()\n{\n    n = read ( );\n    for (int i = 1, u, v; i <= n; i++)\n    {\n        a[i] = read ( ), b[i] = read ( );\n        add_edge (a[i], b[i]);\n        add_edge (b[i], a[i]);\n    }\n    for (int i = 1; i <= n; i++) add_edge (i * 2 - 1, i * 2), add_edge (i * 2, i * 2 - 1);\n    for (int i = 1; i <= 2 * n; i++) if (!vis[i]) dfs (i, 0);\n    for (int i = 1; i <= n; i++) printf (\"%d %d\\n\", ans[a[i]] + 1, ans[b[i]] + 1);\n    return 0;\n}\n ```\n\n###### CSP2021 rp++",
        "postTime": 1634722195,
        "uid": 177837,
        "name": "violin_wyl",
        "ccfLevel": 6,
        "title": "CF741C Arpa\u2019s overnight party and Mehrdad\u2019s silent entering"
    },
    {
        "content": "\u8003\u8651\u76f4\u63a5\u6765\u4e00\u79cd\u66f4 trick \u7684\u9650\u5236\uff0c\u5373\u8fde\u8fb9 $(2i - 1,2i)$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e09\u4eba\u4e4b\u4e2d\u81f3\u5c11\u6709\u4e24\u4eba\u4e0d\u76f8\u540c\u3002               \n\n\u79f0\u5982\u4e0a\u8fde\u63a5\u7684\u56fe\u4e3a\u539f\u56fe\u3002\n\n\u63a5\u7740\u4f60\u53d1\u73b0\u6839\u636e\u9898\u76ee\u7684\u8fde\u8fb9\u8981\u6c42\u65e0\u8bba\u518d\u600e\u4e48\u8fde\u8fb9\u90fd\u65e0\u6cd5\u751f\u6210\u5947\u73af\uff1a\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a $2$ \u6240\u4ee5\u82e5\u751f\u6210\u4e00\u4e2a\u73af\u6bd5\u7136\u6bcf\u4e2a\u70b9\u4e00\u8fdb\u4e00\u51fa\uff0c\u800c\u540c\u65f6\u6211\u4eec\u53d1\u73b0\u5982\u679c\u89c6\u60c5\u4fa3\u4e4b\u95f4\u7684\u8fde\u8fb9\u662f\u4e00\u79cd\u62bd\u8c61\u610f\u4e49\u4e0a\u7684\u201c\u8fde\u63a5\u201d\u5173\u7cfb\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u73af\u4e0a\u7684\u6240\u6709\u70b9\u62c6\u5206\u4e3a\u82e5\u5e72\u7ec4\u539f\u56fe\u7684 $(2i - 1,2i)$ \u8fde\u8fb9\u5173\u7cfb\u7684\u70b9\u5bf9\uff08\u56e0\u4e3a\u4f60\u90fd\u751f\u6210\u73af\u4e86\u6240\u4ee5\u5fc5\u7136\u9009\u62e9\u4e86\u539f\u56fe\u7684\u8fb9\uff09\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5f53\u524d\u73af\u7684\u5927\u5c0f\u5fc5\u7136\u662f\u5076\u6570\u3002    \n\n\u7136\u540e\u76f4\u63a5\u4e8c\u5206\u56fe\u67d3\u8272\u3002             \n\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 4e5 + 5;\nint n,m,head[Len],cnt,vis[Len];\nstruct node\n{\n\tint next,to;\n}edge[Len << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nvoid dfs(int x)\n{\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(vis[to]) continue;\n\t\tvis[to] = 3 - vis[x];\n\t\tdfs(to);\t\n\t}\n}\nstruct Node\n{\n\tint x,y;\n}Edge[Len << 1];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tadd(x , y) , add(y , x);\n\t\tEdge[i].x = x , Edge[i].y = y;\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) add(2 * i - 1 , 2 * i) , add(2 * i , 2 * i - 1);\n\tfor(int i = 1 ; i <= (n << 1) ; i ++) \n\t{\n\t\tif(!vis[i])\n\t\t{\n\t\t\tvis[i] = 1;\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) printf(\"%d %d\\n\",vis[Edge[i].x],vis[Edge[i].y]);\n\tfor(int i = 1 ; i <= 2 * n ; i ++) head[i] = vis[i] = 0;\n\tcnt = 0;\n\treturn 0;\n}\n```",
        "postTime": 1632644135,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF741C Arpa\u2019s overnight party and Mehrdad\u2019s silent entering"
    },
    {
        "content": "\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u4e8c\u5206\u56fe\u7684\u9898\uff0c\u4f60\u4ec0\u4e48\u65f6\u5019\u90fd\u5f97\u6ce8\u610f\u70b9\uff1a\u5343\u4e07\u8bb0\u5f97\u5224\u4e00\u4e0b\u56fe\u662f\u5426\u8054\u901a\uff08~~\u4e3a\u6b64\u4e0d\u60dc\u727a\u7272\u6389 $O(n)$ \u7684\u590d\u6742\u5ea6~~\uff09\n\n### Solution\n\n\u9996\u5148\u60c5\u4fa3\u5fc5\u7136\u8fde\u7ebf\uff08\u5403\u4e0d\u540c\u7684\u98df\u7269\uff09\n\n\u5176\u6b21\uff0c\u7531\u4e8e\u7279\u6027\uff08spj\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u6784\u9020\u4e00\u4e2a\u4e8c\u5206\u56fe\u6765\u6ee1\u8db3\u7b2c\u4e8c\u6761\u7ea6\u675f\u6761\u4ef6\uff08\u5373\u4e09\u4eba\u91cc\u5fc5\u6709\u4e24\u4eba\u5403\u4e0d\u540c\u7684\u98df\u7269\uff09~~\u505a\u6784\u9020\u9898\u5b9e\u5728\u592a\u5feb\u4e50\u4e86~~\n\n\u6b64\u5904\u89c4\u5b9a\uff1a\u5728 $2i-1$ \u4e0e $2i$ \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u7b2c\u4e8c\u7ea6\u675f\u6761\u4ef6\n\n#### \u91cd\u70b9\uff1a\u5982\u4f55\u8bc1\u660e\u6784\u9020\u51fa\u6765\u7684\u56fe\u4fdd\u8bc1\u662f\u4e8c\u5206\u56fe\uff1f\n\n\u8981\u4fdd\u8bc1\u5b58\u5728\u4e8c\u5206\u56fe\uff0c\u5fc5\u987b\u4fdd\u8bc1\u8be5\u56fe\u4e0d\u5b58\u5728\u5947\u73af\u3002\u800c\u9996\u5148\u60c5\u4fa3\u5173\u7cfb\u4ea7\u751f $n$ \u6761\u8fb9\uff0c\u6211\u4eec\u6784\u9020\u7684\u65f6\u5019\u53c8\u4ea7\u751f $n$ \u6761\u8fb9\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\u5947\u73af\n\n\u4ee3\u7801\u8d70\u8d77\uff1a\n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define f(i,a,b) for (ll i=a;i<=b;i++)\n#define fx(i,a,b) for (ll i=a;i>=b;i--)\n#define HgS 998244353\nusing namespace std;\nconst int maxn=2e5+10;\nint n;\nint a[maxn];\nvector<int> v[maxn];\nint num[maxn];\nqueue<int> q;\ninline ll read()\n{\n\tll l=0,f=1;\n\tchar c;\n\twhile (!isdigit(c=getchar())) if (c=='-') f=-1;\n\twhile (isdigit(c)) l=(l<<3)+(l<<1)+(c^48),c=getchar();\n\treturn l*f;\n}\nsigned main()\n{\n\tn=read()*2;\n\tfor (int i=1; i<=n; i+=2) v[i].push_back(i+1),v[i+1].push_back(i);\n\tf(i,1,n/2)\n\t{\n\t\ta[i*2-1]=read(),a[i*2]=read();\n\t\tv[a[i*2-1]].push_back(a[i*2]),v[a[i*2]].push_back(a[i*2-1]);\n\t}\n\tf(i,1,n)\n\t{\n\t\tif (!num[i])\n\t\t{\n\t\t\tq.push(i),num[i]=1;\n\t\t\twhile (!q.empty())\n\t\t\t{\n\t\t\t\tint x=q.front();\n\t\t\t\tq.pop();\n\t\t\t\tf(i,0,v[x].size()-1)\n\t\t\t\t{\n\t\t\t\t\tif (!num[v[x][i]]) num[v[x][i]]=((num[x]==1)?2:1),q.push(v[x][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1; i<=n; i+=2) printf(\"%d %d\\n\",num[a[i]],num[a[i+1]]);\n\treturn 0;\n}\n```\n",
        "postTime": 1615206999,
        "uid": 152648,
        "name": "huangxianghui",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF741C Arpa\u2019s overnight party and Mehrdad\u2019s silent entering"
    },
    {
        "content": "\u9996\u5148\uff0c\u5728\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u6bcf\u4e00\u7ec4\u7684\u4e24\u4e2a\u4eba\u4e4b\u95f4\u8fde\u8fb9\u3002\u8bbe\u8fd9\u4e9b\u8fb9\u4e3a 1 \u7c7b\u8fb9\u3002\n\n\u5176\u6b21\uff0c\u8fde\u4e0a\u6240\u6709\u7f16\u53f7\u5f62\u5982 $2x-1$ \u548c $2x$ \u7684\u4eba\u4e4b\u95f4\u7684\u8fb9\u3002\u8bbe\u8fd9\u4e9b\u8fb9\u4e3a 2 \u7c7b\u8fb9\u3002\n\n\u5bf9\u65b0\u56fe\u8dd1\u4e8c\u5206\u56fe\u67d3\u8272\u5373\u53ef\u3002\n\n\u82e5\u80fd\u8dd1\u51fa\u4e00\u4e2a\u7ed3\u679c\uff0c\u5219\u7ed3\u679c\u7684\u6b63\u786e\u6027\u663e\u7136\u3002\u4e0b\u9762\u8bc1\u660e\u8fd9\u4e2a\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u9996\u5148\uff0c\u7ed9\u51fa\u4e8c\u5206\u56fe\u7684\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u80fd\u5c06\u70b9\u96c6\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff0c\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u96c6\u5408\u5185\u90e8\u7684\u70b9\u6ca1\u6709\u8fde\u8fb9\u3002\n\n\u6839\u636e\u8fd9\u4e2a\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u4e8c\u5206\u56fe\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u73af\u3002\u82e5\u6ca1\u6709\u8fd9\u6837\u7684\u73af\uff0c\u5219\u5b83\u4e00\u5b9a\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\uff08\u6bcf\u6761\u8fb9\u90fd\u662f\u4ece\u4e00\u4e2a\u96c6\u5408\u8d70\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\uff0c\u53ea\u6709\u8d70\u5076\u6570\u6b21\u624d\u53ef\u80fd\u56de\u5230\u540c\u4e00\u4e2a\u96c6\u5408\uff09\n\n\u5bf9\u4e8e\u65b0\u56fe\u4e2d\u7684\u4e24\u4e2a\u70b9\uff0c$2x-1$ \u548c $2x$\uff0c\u5047\u8bbe\u5728\u52a0\u4e0a\u5b83\u4eec\u4e4b\u95f4\u7684\u8fb9\u4e4b\u524d\uff0c\u5b83\u4eec\u4e4b\u95f4\u5c31\u5df2\u7ecf\u6709\u8def\u5f84\u4e86\u3002\n\n\u5047\u8bbe\u8def\u5f84\u662f\u4ece $2x-1$ \u5230 $2x$ \u7684\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4eec\u90fd\u4e0d\u53ef\u80fd\u518d\u6709\u5411\u5916\u7684 2 \u7c7b\u8fb9\u4e86\uff0c\u6240\u4ee5\u8def\u5f84\u7684\u7b2c\u4e00\u6761\u8fb9\u4e00\u5b9a\u662f 1 \u7c7b\u8fb9\u3002\n\n\u8d70\u5230\u4e00\u4e2a\u65b0\u70b9\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u53ea\u53ef\u80fd\u548c\u53e6\u4e00\u4e2a\u70b9\u5728\u540c\u4e00\u7ec4\u4e2d\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u4e0d\u53ef\u80fd\u6709\u5411\u5916\u7684 1 \u7c7b\u8fb9\u4e86\uff0c\u6240\u4ee5\u8def\u5f84\u7684\u7b2c\u4e8c\u6761\u8fb9\u4e00\u5b9a\u662f 2 \u7c7b\u8fb9\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd9\u6761\u8def\u5f84\u4e2d\u7684\u8fb9\u7684\u7c7b\u578b\u4e00\u5b9a\u5f62\u5982\uff1a1 \u7c7b\uff0c2 \u7c7b\uff0c1 \u7c7b\uff0c2 \u7c7b $\\cdots$\u3002\n\n\u540c\u65f6\uff0c\u4e00\u5b9a\u662f\u7531\u4e00\u6761 1 \u7c7b\u8fb9\u5230\u8fbe\u8def\u5f84\u7684\u7ec8\u70b9 $2x$ \u7684\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u8fde\u4e0a\u8fd9\u6761\u65b0\u8fb9\u540e\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u73af\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u4e2a\u56fe\u4e2d\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u73af\uff0c\u5b83\u662f\u4e8c\u5206\u56fe\u3002\u6545\u95ee\u9898\u4e00\u5b9a\u6709\u89e3\uff0c\u4e14\u8fd9\u6837\u505a\u4e00\u5b9a\u80fd\u89e3\u51fa\u4e00\u7ec4\u89e3\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nconst int N=1e6+10;\nint n,a[N],b[N],ans[N];\nvector <int> e[N];\nvoid dfs(int x,int y)\n{\n\tans[x]=y;\n\tfor(int i=0;i<e[x].size();i++)\n\t\tif(!ans[e[x][i]]) dfs(e[x][i],1-y);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ta[i]=x,b[i]=y;\n\t\te[x].push_back(y);\n\t\te[y].push_back(x);\n\t}\n\tfor(int i=1;i<=n*2;i+=2)\n\t{\n\t\te[i].push_back(i+1);\n\t\te[i+1].push_back(i);\n\t}\n\tfor(int i=1;i<=n*2;i++)\n\t\tif(!ans[i]) dfs(i,0);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d %d\\n\",ans[a[i]]+1,ans[b[i]]+1);\n\treturn 0;\n}\n```",
        "postTime": 1628609624,
        "uid": 186587,
        "name": "BBD186587",
        "ccfLevel": 0,
        "title": "L"
    }
]