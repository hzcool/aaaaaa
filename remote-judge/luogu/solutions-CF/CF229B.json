[
    {
        "content": "\u8fd9\u51e0\u4e4e\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u88f8\u9898\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a**\u4e0d\u7528** map/set \u7684 Dijkstra \u505a\u6cd5\u3002\n\n\u6211\u4eec\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\uff0c\u7528 $dis$ \u6570\u7ec4\u7ef4\u62a4\u5230\u8fbe\u4e00\u4e2a\u70b9\u7684\u65f6\u95f4\u3002\u6bcf\u6b21\u53d6\u4e00\u4e2a\u70b9 $u$ \u677e\u5f1b\u65f6\uff0c\u53d6\u51fa $dis_u$\uff0c\u8ba1\u7b97\u5f53\u5230\u8fbe\u65f6\u95f4\u4e3a $dis_u$ \u65f6\u7684\u51fa\u53d1\u65f6\u95f4 $w$\u3002\u7528  $ed_i.w$\uff08\u8fb9\u957f\uff09$+w$ \u4e0e $dis_v$ \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c $w+ed_i.w<dis_v$ \u5c31\u8fdb\u884c\u66f4\u65b0\u3002\u6700\u540e\u5982\u679c $dis_n<INF$\uff08\u53ef\u4ee5\u62b5\u8fbe\uff09\uff0c\u8f93\u51fa $dis_n$\uff0c\u5426\u5219\u8f93\u51fa $-1$ \u5373\u53ef\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u8ba1\u7b97\u51fa\u53d1\u65f6\u95f4\uff1a\n\n\u6211\u4eec\u5f00 $n$ \u4e2a vector \u6570\u7ec4 $t_{1-n}$\uff0c\u6570\u7ec4 $t_i$ \u5b58\u50a8\u70b9 $i$ **\u4e0d\u80fd**\u51fa\u53d1\u7684\u65f6\u95f4\uff08\u5982\u679c\u7528\u4e8c\u7ef4\u6570\u7ec4\u4f1a **MLE**\uff09\uff0c\u6bcf\u4e2a $t_i$\u6700\u540e\u518d\u538b\u5165\u4e00\u4e2a $INF$ \u3002\n\n\u5728\u67e5\u8be2\u51fd\u6570\u4e2d\u4e8c\u5206\u67e5\u627e $t_u$ \u4e2d\u7b2c\u4e00\u4e2a**\u5927\u4e8e\u7b49\u4e8e**  $dis_u$ \u7684\u65f6\u95f4 $t'$\uff0c\u5982\u679c $t'>dis_u$ \u8bf4\u660e\u5f53\u524d\u53ef\u4ee5\u51fa\u53d1\uff0c\u8fd4\u56de $dis_u$ \uff1b\n\n\u5426\u5219\uff08$t'=dis_u$\uff09\u4f9d\u6b21\u5411\u540e\u627e\u76f8\u90bb\u4e24\u4e2a\u4e0d\u80fd\u8d77\u98de\u7684\u65f6\u95f4 $t_{u,now}$ \u548c $t_{u,now+1}$ \u4e4b\u95f4\u662f\u5426\u6709\u95f4\u9694\uff0c\u5982\u679c\u6709\u95f4\u9694\u5c31\u8fd4\u56de $t_{u,now}+1$\uff08\u95f4\u9694\u4e2d\u7684\u6700\u5c0f\u503c)\u3002\n\n\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u6570 $t_{u,k_u}$ \u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e $1e9$\uff0c\u4e0e $INF$ \u4e4b\u95f4\u4e00\u5b9a\u6709\u95f4\u9694 \uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u4e00\u5b9a\u662f\u5c0f\u4e8e\u7b49\u4e8e $t_{u,k_u}+1$ \u7684\u3002\n\n### AC code:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<queue>\n#define ll long long\nusing namespace std;\nconst int N=3e5+5;\nint INF=0x3f3f3f3f;\nint n,m,u,v,w,tot;\nint nd[N],dis[N],bk[N],k[N];\nvector<int>t[N];\nstruct edge{\n\tint v,w,nxt;\n}ed[N];\nvoid add(int u,int v,int w){\n\ted[++tot]={v,w,nd[u]};\n\tnd[u]=tot;\n}\nstruct node{\n\tint dis,u;\n\tbool operator <(const node &x)const{\n\t\treturn x.dis<dis;\n\t}\n};\nint qry(int u,int ti){//\u51fa\u53d1\u65f6\u95f4 \n\tint l=1,r=k[u]+1,mid;\n\tif(l==r)return ti;//\u6ca1\u6709 \u4e0d\u80fd\u51fa\u53d1\u7684\u70b9\uff0c\u5f53\u524d\u53ef\u4ee5\u51fa\u53d1\n\twhile(l<r){//\u4e8c\u5206 \n\t\tmid=(l+r)>>1;\n\t\tif(t[u][mid]<ti)\n\t\t\tl=mid+1;\n\t\telse\n\t\t\tr=mid;\n\t}\n\tif(t[u][l]>ti)return ti;//\u5f53\u524d\u53ef\u4ee5\u51fa\u53d1\n\twhile(l++<=k[u])\n\t\tif(t[u][l-1]+1<t[u][l])//\u6709\u95f4\u9694\uff0c\u80fd\u51fa\u53d1\n\t\t\treturn t[u][l-1]+1;\n}\nvoid Dij(){\n\tpriority_queue<node>que;\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[1]=0;\n\tque.push({dis[1],1});\n\twhile(!que.empty()){\n\t\tu=que.top().u;\n\t\tw=que.top().dis;\n\t\tque.pop();\n\t\tif(bk[u])continue;\n\t\tbk[u]=1;\n\t\tw=qry(u,w);//\u5230\u8fbe\u65f6\u95f4->\u51fa\u53d1\u65f6\u95f4 \n\t\tfor(int i=nd[u];i;i=ed[i].nxt){\n\t\t\tv=ed[i].v;\n\t\t\tif(dis[v]>w+ed[i].w){\n\t\t\t\tdis[v]=w+ed[i].w;\n\t\t\t\tif(bk[v]==0)\n\t\t\t\t\tque.push({dis[v],v});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=0;i<m;i++){\n\t\tcin>>u>>v>>w;\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>k[i];\n\t\tt[i].push_back(0);//\u7ed9t[i][0]\uff0c\u8ba9\u4e4b\u540e\u7684\u8d4b\u503c\u4ecet[i][1]\u5f00\u59cb \n\t\tfor(int j=1;j<=k[i];j++){\n\t\t\tcin>>w;\n\t\t\tt[i].push_back(w);\n\t\t}\n\t\tt[i].push_back(INF);\n\t\t//\u6700\u540e\u8865\u4e00\u4e2a\u65e0\u7a77\u5927\u4fdd\u8bc1\u51fa\u53d1\u65f6\u95f4\u5728\uff08t[i][l],INF)\u4e4b\u95f4\n\t}\n\tDij();\n\tcout<<(dis[n]==INF?-1:dis[n])<<endl;\n\treturn 0;\n}\n```\n### The End.",
        "postTime": 1635757246,
        "uid": 346440,
        "name": "FreeTimeLove",
        "ccfLevel": 7,
        "title": "CF229B Planets"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6709\u5173\u6700\u77ed\u8def\u7684\u9898\u3002\n\n\u662f\u4e00\u9053\u6807\u51c6\u7684 Dijkstra\u3002\u52a0\u4e0a\u4e00\u70b9\u70b9\u9884\u5904\u7406\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define f first\n#define se second\n#define mp make_pair\ntypedef pair<int,int> pii;\nconst int N=1e5+7;\nconst int maxtime=1.5e9;  //1e9\u4e0d\u591f\n\nint n,m,a,b,wei,k,t;\nvector<pii>ed[N];  //\u7528\u6765\u8bb0\u5f55\u8fb9\npriority_queue<pii>q;  //\u4f18\u5148\u961f\u5217\nset<int>s[N];  //set\u7528\u6765\u8bb0\u5f55\u7b49\u5f85\u7684\u4eba\nint dist[N];  //dist\u8bb0\u5f55\u6700\u77ed\u8def\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);  //\u8f93\u5165\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&wei);\n\t\ted[a].pb(mp(b,wei));  //\u8bb0\u5f55\u5230vector\u4e2d\n\t\ted[b].pb(mp(a,wei));\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&k);\n\t\tfor(int j=0;j<k;j++){\n\t\t\tscanf(\"%d\",&t);\n\t\t\ts[i].insert(t);  //\u628a\u7b49\u5f85\u7684\u4eba\u52a0\u5230set\u4e2d\u53bb\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) dist[i]=maxtime;\n\tdist[1]=0;  //\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4e3a\u96f6\n\tq.push(mp(1,0));  //\u628a\u7b2c\u4e00\u4e2a\u70b9\u538b\u5165\u961f\u5217\n\twhile(!q.empty()){\n\t\tint cur=q.top().f;  //\u53d6\u51fa\u961f\u9996\n\t\tint w=-q.top().se;\n\t\tq.pop();  //\u5f39\u51fa\u961f\u9996\n\t\tif(dist[cur]!=w) continue;  //\u5982\u679c\u677e\u5f1b\u8fc7\uff0c\u8df3\u8fc7\n\t\twhile(s[cur].count(w)) w++;  //\u5982\u679c\u6709\u4eba\uff0c\u52a0\u52a0\uff08\u7b49\u5f85\uff09\n\t\tfor(int i=0;i<ed[cur].size();i++){ //\u679a\u4e3e\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\n\t\t\tint to=ed[cur][i].f;\n\t\t\tint w1=ed[cur][i].se;\n\t\t\tif(dist[to]>w+w1){  //\u5982\u679c\u53ef\u4ee5\u677e\u5f1b\u8fd9\u4e2a\u70b9\n\t\t\t\tdist[to]=w+w1;  //\u5c31\u677e\u5f1b\u5b83\n\t\t\t\tq.push(mp(to,-dist[to]));  //\u5e76\u628a\u5b83\u538b\u5165\u961f\u5217\n\t\t\t}\n\t\t}\n\t}\n\tif(dist[n]==maxtime) printf(\"-1\\n\");  //\u5982\u679c\u6ca1\u6709\u88ab\u677e\u5f1b\n    //\u8bf4\u660e\u5230\u8fbe\u4e0d\u4e86\n\telse printf(\"%d\\n\",dist[n]);  //\u8f93\u51fa\u8ddd\u79bb\n\treturn 0;\n}\n```\n\nmaxtime\u75281e9\u4e0d\u591f\uff0c\u81f3\u5c111e9+1e5\u3002\u5426\u5219\u2026\u2026\n\n\u4ee3\u7801\u4e2d\u6709\u4e00\u884c\uff08if(dist[cur]!=w) continue;\uff09\u5982\u679c\u4e0d\u5199\uff0c\u53ef\u80fd\u4f1aTLE\n\n\u4f18\u5148\u961f\u5217\u662f\u4e00\u4e2a\u5927\u6839\u5806\u3002\u53ef\u4ee5\u7528\u6765\u6392\u5e8f\uff08\u4ece\u5927\u5230\u5c0f\uff09\u3002\u4e0d\u7ba1\u63d2\u5165\u8fd8\u662f\u5f39\u51fa\u90fd\u53ea\u8981log n\u7684\u65f6\u95f4\u3002\u800c\u4e14\u4e0d\u7528\u6bcf\u4e00\u6b65\u90fdsort\u4e00\u904d\uff08\u5f88\u5feb\u5f88\u65b9\u4fbf\uff09\u3002\n\n\u56e0\u4e3a\u4f18\u5148\u961f\u5217\u5f39\u51fa\u5927\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8d1f\u7684\u538b\u8fdb\u961f\u5217\u53ef\u4ee5\u4f7f\u7edd\u5bf9\u503c\u5c0f\u7684\u5148\u51fa\u961f\u3002\n\n\u5982\u679c\u5fd8\u5199\u8d1f\u53f7\uff0c\u4e0d\u4f1aWA\uff0c\u4f46\u4f1aTLE\n\n\u56e0\u4e3a\u4e0d\u7ba1\u600e\u6837\uff0c\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u88ab\u677e\u5f1b\n\n\u4f46\u8fd9\u6837\u90a3\u4e9b\u6743\u503c\u5c0f\u7684\u70b9\u4f1a\u6392\u5728\u6700\u540e\uff0c\u4e8e\u662f\u5c31\u8dea\u4e86\u2026\u2026\n\n\n![](http://chuantu.biz/t6/255/1520997722x-1566638267.gif)\n\n~~\u6211\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\u2026\u2026~~\n\n\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u4f18\u5148\u961f\u5217\u5f39\u51fa\u5c0f\u7684\u3002\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\npriority_queue<int,vector<int>,greater<int> >q;\n\nint main(){\n\tint x;\n    cin>>x;\n    for(int i=0;i<x;i++){\n    \tint a;\n        cin>>a;\n        q.push(a);\n    }\n    while(!q.empty()){\n\t\tcout<<q.top()<<\" \";\n        q.pop();\n    }\n    return 0;\n}\n```\n\ngreater\u628a\u4f18\u5148\u961f\u5217\u7684\u5927\u5c0f\u6bd4\u8f83\u4ea4\u6362\u4e86\u4e00\u4e0b\uff08**\"greater<int> >\"\u4e2d\u95f4\u6709\u7a7a\u683c\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff01**\uff09\u3002\n\n\n------------\n\n#### \u5982\u679c\u6015\u9519\u4e86\uff0c\u53ef\u4ee5\u7528set\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define f first\n#define se second\n#define mp make_pair\ntypedef pair<int,int> pii;\nconst int INF=2e9;\nconst int N=1e5+5;\nint dist[N];\nvector<int>z[N];\nvector<pii>edge[N];\nset<pii>q;\nint n,m,from,to,w,x,kk;\n\nint main() {\t\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=m; i++) {\n\t\tscanf(\"%d%d%d\",&from,&to,&w);\n\t\tedge[from].pb(mp(to,w));\n\t\tedge[to].pb(mp(from,w));\n\t}\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%d\",&kk);\n\t\tfor(int j=0; j<kk; j++) {\n\t\t\tscanf(\"%d\",&x);\n\t\t\tz[i].pb(x);\n\t\t}\n\t}\n\tfor(int i=1; i<=n; i++) dist[i]=INF;\n\tdist[1]=0;\n\tq.insert(mp(0,1));\n\twhile(!q.empty()) {\n\t\tint k=q.begin()->second;\n\t\tq.erase(q.begin());\n\t\tint cur=dist[k];\n\t\tfor(int i=0; i<z[k].size(); i++) if(z[k][i]==cur) cur++;\n\t\tfor(int i=0; i<edge[k].size(); i++) {\n\t\t\tif(dist[edge[k][i].f]>cur+edge[k][i].se) {\n\t\t\t\tq.erase(mp(dist[edge[k][i].f],edge[k][i].f));\n\t\t\t\tdist[edge[k][i].f]=cur+edge[k][i].se;\n\t\t\t\tq.insert(mp(dist[edge[k][i].f],edge[k][i].f));\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dist[n]==INF?-1:dist[n]);\n\treturn 0;\n}\n```\n\n\u5176\u5b9e\u4e0epriority_queue\u6ca1\u591a\u5927\u533a\u522b\u3002",
        "postTime": 1533714789,
        "uid": 72784,
        "name": "ljk_Elaina",
        "ccfLevel": 0,
        "title": "CF229B Planets \u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u6700\u77ed\u8def\uff0c\u4e0e\u6a21\u677f\u4e0d\u540c\u7684\u662f\u8fd9\u91cc\u591a\u4e86\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6\uff1a\n\n**\u5f53\u6709\u5176\u4ed6\u4eba\u5728\u4f7f\u7528\u8fd9\u4e2a\u661f\u7403\u7684\u4f20\u9001\u901a\u9053\u65f6\uff0cJack\u65e0\u6cd5\u79bb\u5f00\u8fd9\u4e2a\u661f\u7403\u3002**\n\n\u6700\u5f00\u59cb\u60f3\u5230\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u5f53\u524d\u661f\u7403\u7684\u4f20\u9001\u95e8\u4f7f\u7528\u60c5\u51b5\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define FOR(i,j,k)  for(int i=(j);i<=(k);i++)\nusing namespace std;\nint n,m,cnt,Time;\nint dis[100001];\nbool inq[100001];\nint h[100001],t[100001],nxt[100001],val[100001];\nint used[100001][1001];\nint f,e,q[1000001];\ninline int read()\n{\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\ninline void addedge(int a,int b,int c)\n{\n\tt[++cnt]=b,val[cnt]=c,nxt[cnt]=h[a],h[a]=cnt;\n}\ninline bool check(int Time,int planet)\n{\n    int i=0;\n\twhile(used[planet][++i]!=0)\n\t{\n\t\tif(used[planet][i]==Time)\treturn true;\n\t\tif(used[planet][i]>Time)\treturn false;\n\t}\n\treturn false;\n}\nint main()\n{\n\tn=read(),m=read();\n\tmemset(dis,-1,sizeof(dis));\n    memset(h,0,sizeof(h));\n    memset(inq,false,sizeof(inq));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\taddedge(u,v,w),addedge(v,u,w);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint tmp=read();\n\t\tfor(int j=1;j<=tmp;j++)\n\t\t\tused[i][j]=read();\n\t}\n\tinq[1]=true,dis[1]=0,q[1]=1,f=e=1;\n\twhile(f<=e)\n\t{\n\t\tint u=q[f++];\n     \t\tTime=dis[u];\n      \t\twhile(check(Time,u))    Time++;\n\t\tfor(int p=h[u];p;p=nxt[p])\n\t\t{\n            int v=t[p],c=val[p];\n\t\t\tif(dis[v]==-1||dis[v]>=Time+c)\n\t\t\t{\n                    dis[v]=Time+c;\n                    if(!inq[v])\tinq[v]=true,q[++e]=v;\n            }\n\t\t}\n\t\tinq[u]=false;\n\t}\n\tprintf(\"%d\\n\",dis[n]);\n\treturn 0;\n}\n```\n\n\n\u7136\u540e\u53d1\u73b0\u5f00\u4e0d\u4e0b\uff0c\u76f4\u63a5 $MLE$\u3002\n\n\u4e8e\u662f\u60f3\u5230 $STL$ \u7684 $map$\u3002\n\n\u7b2c\u4e00\u6b21\u5199\u6210\u8fd9\u4e2a\u6837\u5b50\uff0c\u6ca1\u8fc7 $#4$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define FOR(i,j,k)  for(int i=(j);i<=(k);i++)\nusing namespace std;\nint n,m,cnt;\nint dis[100001];\nbool inq[100001];\nint h[100001],t[100001],nxt[200001],val[200001];\nint f,e,q[10000001];\nmap<int,int> s[100001];\ninline int read()\n{\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\ninline void addedge(int a,int b,int c)\n{\n\tt[++cnt]=b,val[cnt]=c,nxt[cnt]=h[a],h[a]=cnt;\n}\ninline bool check(int Time,int planet)\n{\n    int i=0;\n\twhile(s[planet][++i]!=0)\n\t{\n\t\tif(s[planet][i]==Time)\treturn true;\n\t\tif(s[planet][i]>Time)\treturn false;\n\t}\n\treturn false;\n}\nint main()\n{\n\tn=read(),m=read();\n\tmemset(dis,-1,sizeof(dis));\n    memset(h,0,sizeof(h));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\taddedge(u,v,w),addedge(v,u,w);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint tmp=read();\n\t\tfor(int j=1;j<=tmp;j++)\n\t\t\ts[i][j]=read();\n\t}\n\tinq[1]=true,dis[1]=0,q[1]=1,f=e=1;\n\twhile(f<=e)\n\t{\n\t\tint u=q[f++];\n        int Time=dis[u];\n        while(check(Time,u))    Time++;\n\t\tfor(int p=h[u];p;p=nxt[p])\n\t\t{\n            int v=t[p],c=val[p];\n\t\t\tif(dis[v]==-1||dis[v]>=Time+c)\n\t\t\t{\n                    dis[v]=Time+c;\n                    if(!inq[v])\tinq[v]=true,q[++e]=v;\n            }\n\t\t}\n\t\tinq[u]=false;\n\t}\n\tprintf(\"%d\\n\",dis[n]);\n\treturn 0;\n}\n```\n\u518d\u6362\u4e00\u79cd\u65b9\u6cd5\uff0c\u628a $map$ \u6539\u6210 $bool$ \u5c31\u8fc7\u4e86\n\n\u4e2d\u95f4 $t$ \u6570\u7ec4\u5f00\u9519\u5927\u5c0f\u4e00\u76f4\u6ca1\u8fc7\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define FOR(i,j,k)  for(int i=(j);i<=(k);i++)\nusing namespace std;\nint n,m,cnt;\nint dis[100001];\nbool inq[100001];\nint h[100001],t[200001],nxt[200001],val[200001];\nint f,e,q[10000001];\nmap<int,bool> s[100001];\ninline int read()\n{\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\ninline void addedge(int a,int b,int c)\n{\n\tt[++cnt]=b,val[cnt]=c,nxt[cnt]=h[a],h[a]=cnt;\n}\nint main()\n{\n\tn=read(),m=read();\n\tmemset(dis,-1,sizeof(dis));\n    memset(h,0,sizeof(h));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\taddedge(u,v,w),addedge(v,u,w);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint tmp=read(),x;\n\t\tfor(int j=1;j<=tmp;j++)\n\t\t\tx=read(),s[i][x]=true;\n\t}\n\tinq[1]=true,dis[1]=0,q[1]=1,f=e=1;\n\twhile(f<=e)\n\t{\n\t\tint u=q[f++];\n    \tint Time=dis[u];\n      while(s[u][Time]==true)    Time++;//\u552f\u4e00\u8981\u6ce8\u610f\u7684\u70b9\n\t\tfor(int p=h[u];p;p=nxt[p])\n\t\t{\n            int v=t[p],c=val[p];\n\t\t\tif(dis[v]==-1||dis[v]>=Time+c)\n\t\t\t{\n                    dis[v]=Time+c;\n                    if(!inq[v])\tinq[v]=true,q[++e]=v;\n            }\n\t\t}\n\t\tinq[u]=false;\n\t}\n\tprintf(\"%d\\n\",dis[n]);\n\treturn 0;\n}\n```\n\u7528\u7684\u662f $SPFA$",
        "postTime": 1592917863,
        "uid": 181775,
        "name": "_Fontainebleau_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF229B \u3010Planets\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\u5f88\u88f8\u7684\u6700\u77ed\u8def\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u5e94\u8be5\u6392\u961f\u7684\u65f6\u5019\u6392\u961f\u5373\u53ef\u3002  \n**\u6ce8\u610f**\uff1a  \n\u2460 $INF$ \u8d4b\u503c $1e9$ \u4e0d\u591f\u5927\uff0c\u53ef\u4ee5\u8d4b $2e9$\u3002    \n\u2461 \u8ba1\u7b97\u6240\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\u65f6 `d=dis[x];while(mp[x][d]) d++;`\u8981\u653e\u5728\u5faa\u73af\u7684\u5916\u9762\uff0c\u4e0d\u7136\u4f1aTLE\u3002\u3002\u3002  \n\n# \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<queue>\nusing namespace std;\ninline int read() {\n\tint t=0,w=1;\n\tchar ch=0;\n\twhile(!isdigit(ch)) {if(ch=='-') w=-1;ch=getchar();}\n\twhile(isdigit(ch)) t=(t<<1)+(t<<3)+ch-'0',ch=getchar();\n\treturn t*w;\n}\n#define N 100005\n\nint n,m;\nmap<int,bool>mp[N];\n\nstruct node {\n\tint v,c,nex;\n}e[N<<1];\nint tot,h[N];\nvoid add(int u,int v,int c) {\n\te[++tot].v=v,e[tot].c=c,e[tot].nex=h[u],h[u]=tot;\n}\n\nint dis[N];\nbool vis[N];\ndeque<int>q;\nvoid spfa() {\n\tfor(int i=1;i<=n;++i) dis[i]=2e9;\n\tq.push_back(1);\n\tdis[1]=0;\n\tint x,xx,d;\n\twhile(!q.empty()) {\n\t\tx=q.front();\n\t\tq.pop_front();\n\t\tvis[x]=0;\n\t\td=dis[x];\n\t\twhile(mp[x][d]) d++;\n\t\tfor(int i=h[x];i;i=e[i].nex) {\n\t\t\txx=e[i].v;\n\t\t\tif(dis[xx]>d+e[i].c) {\n\t\t\t\tdis[xx]=d+e[i].c;\n\t\t\t\tif(!vis[xx]) {\n\t\t\t\t\tvis[xx]=1;\n\t\t\t\t\tif(q.empty()||dis[xx]>dis[q.front()]) q.push_back(xx);\n\t\t\t\t\telse q.push_front(xx);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tint u,v,c;\n\tfor(int i=1;i<=m;++i) u=read(),v=read(),c=read(),add(u,v,c),add(v,u,c);\n\tfor(int i=1;i<=n;++i) {\n\t\tc=read();\n\t\tfor(int j=1;j<=c;++j) u=read(),mp[i][u]=1;\n\t}\n\tspfa();\n\tif(dis[n]==2e9) printf(\"-1\\n\");\n\telse printf(\"%d\\n\",dis[n]);\n\treturn 0;\n}\n```",
        "postTime": 1525698063,
        "uid": 36728,
        "name": "\u96e8\u5b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF229B \u3010Planets\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u56fe\uff0c\u6709 $n$ \u4e2a\u70b9 $m$ \u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$ \u90fd\u6709 $k_i$ \u4e2a\u9650\u5236\uff0c\u56e0\u6b64\u5728\u67d0\u4e9b\u65f6\u5019\u8fde\u5411 $i$ \u7684\u8fb9\u5c31\u4e0d\u80fd\u4f7f\u7528\u3002\u8bf7\u95ee\u4f60 $1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u3002\n\n## \u601d\u8def\n\n\u76f4\u63a5 SPFA + map \u6c34\u8fc7\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u5728\u6bcf\u4e2a\u70b9\u4e2d\u5982\u679c\u6709\u9650\u5236\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u5728 SPFA \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4e00\u6b21\u4e00\u6b21\u5224\u65ad\u5f53\u524d\u662f\u5426\u80fd\u591f\u677e\u5f1b\uff0c\u5982\u679c\u80fd\uff0c\u5c31\u677e\u5f1b\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u5c31\u76f4\u63a5\u6700\u77ed\u8def $+ 1$\u3002\u56e0\u6b64\uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\nwhile(\u5982\u679c\u4e0d\u80fd\u884c){\n  \u8df3\u5230\u4e0b\u4e00\u4e2a\u65f6\u95f4\n}\n  ......\n```\n\n\u90a3\u4e48\uff0c\u95ee\u9898\u5c31\u5728\u6211\u4eec\u5982\u4f55\u5224\u65ad\u884c\u4e0d\u884c\u3002\n\n\u8fd9\u65f6\uff0c\u4f9d\u9760\u8f93\u5165\u683c\u5f0f\u548c\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u81ea\u7136\u53ef\u4ee5\u60f3\u5230 vector\uff0c\u4f9d\u9760\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u5728\u4e0d\u5728\u5e8f\u5217\u4e2d\uff0c\u6211\u4eec\u53c8\u81ea\u7136\u60f3\u5230\u4e86 lower_bound\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 map \u6765\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u5408\u5e76\u7684\u95ee\u9898\uff08\u53cb\u60c5\u63d0\u793a\uff1amap \u5e38\u6570\u8fc7\u5927\uff0c\u6240\u4ee5\uff0c\u4f60\u77e5\u9053\u7684\uff09\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a map \u6570\u7ec4\uff0c\u7528\u6765\u6807\u8bb0\u7b2c $i$ \u4e2a\u70b9\u4e0d\u80fd\u7528\u7684\u6240\u6709\u65f6\u523b\uff0c\u5982\u4e0b\uff08$N$ \u8868\u793a\u70b9\u7684\u4e2a\u6570\uff09\uff1a\n\n```cpp\nmap<int, bool> book[N];\n......\n```\n\n\u8fd9\u6837\uff0c\u4e0a\u9762\u90a3\u4e2a\u95ee\u9898\u5c31\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\uff0c\u8fd9\u91cc\u4ee3\u7801\u7247\u6bb5\u5c31\u4e0d\u7ed9\u4e86\u3002\n\n## \u95ee\u9898\n\n\u90a3\u4e48\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u70b9\u53ef\u80fd\u51fa\u9519\u7684\u95ee\u9898\u3002\u6709\u4eba\u7684\u4ee3\u7801\u7247\u6bb5\u53ef\u80fd\u662f\u8fd9\u4e48\u5199\u7684\uff1a\n\n```cpp\nwhile(book[\u70b9][dis[\u70b9]]){\n  dis[\u70b9]++;\n}\n```\n\n\u5176\u4e2d\u70b9\u4ee3\u8868\u6211\u4eec\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u6765\u7684\u70b9\u3002\n\n\u8fd9\u91cc\u7684\u9519\u8bef\u8fde\u6837\u4f8b\u90fd\u68c0\u67e5\u4e0d\u51fa\u6765\uff0c\u6240\u4ee5\u63d0\u4e00\u4e0b\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u5bf9\uff0c\u56e0\u4e3a\u6700\u77ed\u8def\u7684\u4fee\u6539\u662f\u57fa\u4e8e\u8fde\u51fa\u53bb\u7684\u70b9\uff0c\u800c\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u6765\u7684\u70b9\u662f\u5df2\u7ecf\u7ecf\u8fc7\u677e\u5f1b\u7684\u70b9\u4e86\uff0c\u4f46\u662f\u4f60\u73b0\u5728\u53c8\u4fee\u6539\u4e86\uff0c\u6240\u4ee5\u624d\u4f1a\u4e0d\u5bf9\u3002\n\n## \u4ee3\u7801\n\n\u4ee3\u7801\u6765\u54af\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n\nusing namespace std;\n\ninline int read() {     // \u5361\u5e38\u7684\u5feb\u8bfb\n\tint x = 0, f = 1;\n  char ch = getchar();\n\twhile(ch < '0' || ch > '9'){\n    if(ch == '-'){\n      f = -1;\n    }\n    ch = getchar();\n  }\n\twhile(ch >= '0' && ch <= '9'){\n    x = x * 10 + ch - 48;\n    ch = getchar();\n  }\n\treturn x * f;\n}\n\nconst int N = 3e5 + 5;\n\nmap<int, bool> book[N];\n\nint n, m, s;\nint dis[N];\nbool vis[N];\n\nint tot, head[N];\n\nstruct node{\n\tint to, w, next;\n}edges[N];\n\nvoid add(int u, int v, int w){\n\ttot++;\n\tedges[tot].to = v;\n\tedges[tot].w = w;\n\tedges[tot].next = head[u];\n\thead[u] = tot;\n}\n\nvoid SPFA(int s){\n\tqueue<int> q;\n\tfor(int i = 1; i <= n; i++){\n\t\tdis[i] = 1e18;    // \u8fd9\u91cc\u8981\u8bbe\u5927\u4e00\u70b9\n\t}\n\tdis[s] = 0;\n\tq.push(s);\n\tvis[s] = true;\n\twhile(!q.empty()){\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tvis[x] = false;\n\t\tint tmp = dis[x];\n\t\twhile(book[x][tmp]){   // \u8fdb\u884c\u5224\u65ad\n\t\t\ttmp++;     // \u6ce8\u610f\u8fd9\u91cc\u8981\u65b0\u5efa\u4e00\u4e2a\u53d8\u91cf ++\n\t\t}\n\t\tfor(int i = head[x]; i; i = edges[i].next){\t\n\t\t\tif(tmp + edges[i].w < dis[edges[i].to]){\n\t\t\t\tdis[edges[i].to] = tmp + edges[i].w;\n\t\t\t\tif(!vis[edges[i].to]){\n\t\t\t\t\tq.push(edges[i].to);    // \u666e\u901a\u7684 SPFA\n\t\t\t\t\tvis[edges[i].to] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nsigned main(){\n\tn = read(), m = read();\n\tfor(int i = 1; i <= m; i++){\n\t\tint u, v, w;\n\t\tu = read();\n\t\tv = read();\n\t\tw = read();\n\t\tadd(u, v, w);\n\t\tadd(v, u, w);\n\t}\n\tfor(int i = 1; i <= n; i++){\n\t\tint k;\n\t\tk = read();\n\t\tfor(int j = 1; j <= k; j++){\n\t\t\tint t;\n\t\t\tt = read();\n\t\t\tbook[i][t] = true;   // \u8fdb\u884c\u6807\u8bb0\n\t\t}\n\t}\n\tSPFA(1);\n\tcout << (dis[n] == 1e18 ? -1 : dis[n]);  // \u8bb0\u4f4f\u8fd9\u91cc\u8981\u8f93\u51fa -1\n\treturn 0;\n} \n```",
        "postTime": 1645531017,
        "uid": 363006,
        "name": "_Alexande_",
        "ccfLevel": 5,
        "title": "CF229B \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\u4e00\u9053\uff08\u8fd1\u4e4e\uff09\u88f8\u7684\u6700\u77ed\u8def\u3002SPFA\u76f4\u63a5\u505a\uff0c\u53ea\u9700\u8981\u5728\u4ece\u6bcf\u4e2a\u70b9\u5411\u5916\u62d3\u5c55\u7684\u65f6\u5019\u6ce8\u610f\u5f53\u524d\u65f6\u95f4\u6709\u65e0\u4ed6\u4eba\u5728\u4f7f\u7528\uff0c\u5982\u679c\u6709\u5c31\u7b491\u65f6\u523b\uff08time++\uff09\u518d\u5224\u65ad\u3002\u53ef\u4ee5\u7528\u4e24\u4e2a\u961f\u5217\u7ef4\u62a4\uff08\u7ef4\u62a4\u5f53\u524d\u7684\u70b9\u548c\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u65f6\u95f4\uff09\u3002\n\n\u6ce8\u610f\u8fd9\u4e2a\u9898\u6709\u4e00\u4e2a\u5751\u70b9\uff1a\u67d0\u4e9b\u6d4b\u8bd5\u70b9\u7684\u7b54\u6848\u5341\u5206\u63a5\u8fd1int\u4e0a\u9650\uff08\u4f46\u662f\u4e5f\u4e0d\u9700\u8981long long\uff09\uff0c\u5904\u7406\u7684\u65f6\u5019\u6ce8\u610fINF\u7684\u503c\u4ee5\u53ca\u907f\u514d\u6ea2\u51fa\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <vector>\n#include <queue>\nusing namespace std;\n\nconst int MAXN=1e5+1, MAXM=MAXN<<1, INF=2e9;\nstruct edge { int to, w, next; } e[MAXM<<1];\nint firste[MAXN], eindex;\ninline void addedge( int a, int b, int l )\n{ e[++eindex]=(edge) { b, l, firste[a] }, firste[a]=eindex; }\n\nint dis[MAXN];\nint n, m;\nvector<int> isusing[MAXN];\n\ninline void reset( );\ninline void read( );\ninline int SPFA( int begin, int end );\n\nint main( )\n{\n    while( scanf( \"%d %d\", &n, &m )!=-1 )\n    {\n        reset( );\n        read( );\n        printf( \"%d\\n\", SPFA( 1, n ) ); //\u76f4\u63a5SPFA\u5c31\u597d\n    }\n    return 0;\n}\n\ninline void reset( )\n{\n    for ( register int i=0; i<=n; i++ )\n        firste[i]=dis[i]=0, isusing[i].clear();\n    eindex=0;\n}\n\ninline void read( )\n{\n    for ( int i=1; i<=m; i++ )\n    {\n        int a, b, t;\n        scanf( \"%d %d %d\", &a, &b, &t );\n        addedge( a, b, t ), addedge( b, a, t );\n    }\n    for ( int i=1; i<=n; i++ )\n    {\n        int use;\n        scanf( \"%d\", &use );\n        for ( int j=1; j<=use; j++ )\n        {\n            int t;\n            scanf( \"%d\", &t );\n            isusing[i].push_back(t);\n        }\n    }\n    return;\n}\n\nqueue<int> q, qt; //\u5206\u522b\u8bb0\u5f55\u8282\u70b9\u548c\u5230\u8fbe\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u95f4 \nbool inqueue[MAXN];\ninline int SPFA( int begin, int end )\n{\n    queue<int> q1; q=qt=q1;\n    for ( register int i=0; i<=n; i++ )\n        inqueue[i]=0, dis[i]=INF;\n    q.push( begin ), qt.push( 0 ), inqueue[begin]=1;\n    dis[begin]=0;\n    \n    while ( !q.empty( ) )\n    {\n        int now=q.front( ), nowt=qt.front( );\n        q.pop( ), qt.pop( ), inqueue[now]=0;\n        for ( register int i=0; i<isusing[now].size( ); i++ )\n            if ( isusing[now][i]==nowt )\n                nowt++; //\u5982\u679c\u5f53\u524d\u5230\u8fbe\u7684\u65f6\u5019\u6709\u5176\u4ed6\u4eba\u5728\u7528\u5c31\u7b491\u65f6\u523b\u518d\u51fa\u53d1\n        for ( int i=firste[now]; i!=0; i=e[i].next )\n        {\n            int to=e[i].to;\n            if ( dis[to]>nowt+e[i].w )\n            {\n                dis[to]=nowt+e[i].w;\n                q.push( to ), qt.push( dis[to] ), inqueue[to]=1;\n            } //\u5e38\u89c4SPFA\u66f4\u65b0\uff0c\u66f4\u65b0\u7684\u65f6\u5019\u987a\u624b\u66f4\u65b0\u5230\u8fbe\u8be5\u70b9\u65f6\u95f4\u5373\u53ef\n        }\n    }\n    \n    if ( dis[end]==INF )\n        return -1;\n    else\n        return dis[end];\n}\n```\n[\u63d0\u4ea4\u8bb0\u5f55 \u7528\u65f6: 7192ms / \u5185\u5b58: 12372KB](https://www.luogu.org/recordnew/show/6634172)",
        "postTime": 1522917006,
        "uid": 54160,
        "name": "Prurite",
        "ccfLevel": 7,
        "title": "\u601d\u8def CF229B \u3010Planets\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5206\u6790\n\u8fd9\u9898\u4e0d\u8fc7\u5c31\u662f\u5728\u6700\u77ed\u8def\u7684\u677f\u5b50\u4e0a\u52a0\u4e00\u70b9\u4e1c\u897f\uff0c\u5176\u5b9e\u53ef\u4ee5\u7528\u5b57\u5178\uff08\u4e0b\u6587\u79f0\u4e3a map\uff0c\u56e0\u4e3a~~\u8fd9\u6837\u65b9\u4fbf\u7801\u5b57~~\u8fd9\u662f\u5b83\u7684\u7c7b\u578b\u540d\u79f0\uff09\u3002\n\n\u672c\u6765\u6b63\u5e38\u7684\u6700\u77ed\u8def\u4ee3\u7801\uff08\u6211\u7528\u7684\u5806\u4f18\u5316 Dijkstra\uff09\u5e94\u8be5\u662f\u8fd9\u6837\uff08\u4e3a\u4e86\u65b9\u4fbf\u8bb2\u8ff0\uff0c\u6211\u628a\u524d\u9762\u5168\u5c40\u6570\u7ec4\u3001\u7ed3\u6784\u4f53\u7684\u4ee3\u7801\u90fd\u653e\u4e0a\u6765\u4e86\uff09\uff1a\n```cpp\n//\u5168\u5c40\u5b9a\u4e49\uff0cn\u548cm\u8fd8\u6709\u5176\u5b83\u4e00\u4e9b\u4e03\u4e03\u516b\u516b\u7684\u7531\u4e8e\u662f\u5355\u4e2a\u53d8\u91cf\uff0c\u4e5f\u4e0d\u9700\u8981\u5168\u5c40\u4f7f\u7528\uff0c\u6240\u4ee5\u5c31\u5f00\u4e3b\u51fd\u6570\u91cc\u9762\u5f53\u6210\u5c40\u90e8\u7528\u4e86\u3002\u6570\u7ec4\u5f00\u5168\u5c40\u662f\u56e0\u4e3a\u81ea\u5e26\u521d\u59cb\u5316\u65b9\u4fbf\nint dis[100005];//\u5b58\u6700\u77ed\u8def\nbool vis[100005];//\u662f\u5426\u8bbf\u95ee\u8fc7\nstruct edge\n{\n    int x,s;\n};//x\u662f\u8fd9\u6761\u8fb9\u5230\u7684\u70b9\uff0cs\u662f\u8fb9\u6743\nvector<edge>g[100005];\nstruct node\n{\n    int x,s;\n    bool operator<(const node&a)const\n    {\n        return s>a.s;\n    }\n};//x\u662f\u70b9\uff0cs\u662f\u5f53\u524d\u5230x\u7684\u6700\u77ed\u8def\npriority_queue<node>pq;\n\n//\u5806\u4f18\u5316Dijkstra\nmemset(dis,0x7f,sizeof(dis));//\u6ce8\u610f\uff0c\u8fd9\u8fb9\u7531\u4e8e\u4e00\u6761\u8fb9\u5c31\u670910^9\u6211\u5c31\u6ca1\u6709\u75280x3f\u800c\u662f0x7f\ndis[1]=0;//\u5230\u8d77\u70b9\u4e3a0\npq.push(node{1,0});//\u8d77\u70b9\u5165\u961f\nwhile(pq.size())//\u8dd1\u6700\u77ed\u8def\n{\n    node t=pq.top();//\u53d6\u51fa\u5f53\u524d\u8ddd\u79bb\u6700\u77ed\u7684\u70b9\n    pq.pop();\n    int a=t.x,b=t.s;\n    if(vis[a])//\u8d70\u8fc7\u5c31\u8df3\u8fc7\n    {\n        continue;\n    }\n    vis[a]=1;//\u8bbf\u95ee\u8fc7\n    for(int i=0;i<g[a].size();i++)//\u679a\u4e3e\u6240\u6709\u8fb9\n    {\n        edge f=g[a][i];//\u5b58\u8fb9\n        int x=f.x,y=f.s;//\u53d6\u51fa\u70b9\u548c\u6743\u503c\n        if(b+y<dis[x])//\u5982\u679c\u4ece\u5f53\u524d\u70b9\u5230\u8fbe\u65f6\u95f4\u66f4\u5c11\u5c31\u66f4\u65b0\u5e76\u5165\u961f\n        {\n            dis[x]=b+y;\n            pq.push(node{x,b+y});\n        }\n    }\n}\n```\n\u4f46\u662f\u73b0\u5728\u5176\u4ed6\u4eba\u4e5f\u4f1a\u4f7f\u7528\u4f20\u9001\u5668\uff0c\u8fd9\u5f88\u8ba8\u538c\u3002\u90a3\u4e48\u6211\u4eec\u9996\u5148\u60f3\u6700\u7b80\u5355\u7c97\u66b4\u7684\u65b9\u6cd5\uff0c\u7528 $vt[i][j]$ \u8868\u793a\u70b9 $i$ \u5728 $j$ \u7684\u65f6\u523b\u6709\u6ca1\u6709\u4ed6\u4eba\u4f7f\u7528\u4f20\u9001\u5668\uff0c\u6709\u5219\u6807\u8bb0\u4e3a $1$\u3002\u53ef\u662f $i$ \u6700\u5927\u53ef\u4ee5\u5230 $10^5$\uff0c$j$ \u6700\u5927\u53ef\u4ee5\u5230 $10^9$\uff0c\u6570\u7ec4\u80af\u5b9a\u4f1a\u7206\u3002\u800c\u7531\u4e8e\u4e0d\u662f\u6bcf\u4e2a\u65f6\u523b\u90fd\u6709\u4ed6\u4eba\u8981\u4f7f\u7528\uff0c\u6240\u4ee5\u8fd9\u6837\u5f00\u4f1a\u5f88\u6d6a\u8d39\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528 map\uff08\u8fd8\u4e0d\u4f1a\u4f7f\u7528 map \u7684 OIer \u4eec\u53ef\u4ee5\u53bb\u770b\u6211\u535a\u5ba2\u91cc\u7684[ STL \u5b57\u5178](https://www.luogu.com.cn/blog/juruo-lzy/post-zai-lai-yi-ge-stl-di-zi-dian)\u3002\n\nmap \u8f83\u6570\u7ec4\uff08\u90fd\u53eb $v$\uff09\u800c\u8a00\uff0c\u4f18\u52bf\u5728\u4e8e\uff1a\u540c\u662f\u6807\u8bb0 $a$ \u8fd9\u4e2a\u6570\uff0c\u6570\u7ec4\u8981\u4f7f\u7528 $v[1...a]$ \u8fd9\u4e48\u591a\u5355\u4f4d\u7684\u7a7a\u95f4\uff0c\u800c map \u53ea\u9700\u8981\u4f7f\u7528 $v[a]$ \u8fd9\u4e48\u4e00\u4e2a\u5355\u4f4d\u7684\u7a7a\u95f4\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a map\uff1a\n```cpp\nmap<pair<int,int>,bool>vt;//\u8fd9\u8fb9\u7531\u4e8e\u6709\u70b9\u3001\u65f6\u95f4\u4e24\u4e2a\u91cf\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86pair\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5f00\u7ed3\u6784\u4f53\uff0c\u4e0d\u8fc7\u6211\u61d2\u3002pair\u4e2d\u524d\u9762\u90a3\u4e2aint\u8868\u793a\u70b9\u7f16\u53f7\uff0c\u540e\u9762\u90a3\u4e2aint\u8868\u793a\u65f6\u523b\u3002\u4e0a\u9762\u89e3\u91ca\u8fc7\u8303\u56f4\u4e86\uff0c\u8fd9\u91ccint\u5c31\u591f\u3002\u8fd8\u4e0d\u4f1a\u7528pair\u7684OIer\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u7f51\u4e0a\u627e\u8fd9\u4e2aSTL\u7684\u7528\u6cd5\uff0c\u6211\u535a\u5ba2\u91cc\u6682\u65f6\u6ca1\u5199\n```\n\u524d\u9762\u8bfb\u8fb9\u7684\u65f6\u5019\u8fd8\u662f\u6b63\u5e38\u53cc\u5411\u5efa\u8fb9\uff0c\u53ea\u4e0d\u8fc7\u8bfb\u6bcf\u4e2a\u70b9\u7684\u4f20\u9001\u5668\u4f7f\u7528\u60c5\u51b5\u65f6\u9700\u8981\u8fd9\u6837\u5199\uff08\u53d8\u91cf\u540d\u7565\u8ddf\u9898\u76ee\u4e2d\u6709\u4e0d\u540c\uff09\uff1a\n```cpp\nfor(int i=1;i<=n;i++)\n{\n    int x;//\u8fd9\u4e2a\u70b9\u7684\u4f20\u9001\u5668\u6709x\u4e2a\u65f6\u523b\u88ab\u4ed6\u4eba\u4f7f\u7528\n    scanf(\"%d\",&x);\n    for(int j=1;j<=x;j++)\n    {\n        int s;//\u8fd9\u4e2a\u70b9\u7684\u4f20\u9001\u5668\u7b2cs\u4e2a\u65f6\u523b\u88ab\u4ed6\u4eba\u4f7f\u7528\n        scanf(\"%d\",&s);\n        vt[make_pair(i,s)]=1;//\u6253\u6807\u8bb0\uff0c\u8868\u793a\u70b9i\u5728s\u7684\u65f6\u523b\u6709\u4ed6\u4eba\u4f7f\u7528\u4f20\u9001\u5668\n    }\n}\n```\n\u7136\u540e\u5728\u521a\u624d\u7684\u6700\u77ed\u8def\u677f\u5b50\u91cc\uff0c\u52a0\u4e00\u6bb5\u5982\u4e0b\u7684\u4ee3\u7801\uff0c\u8fd9\u6bb5\u4ee3\u7801\u52a0\u5728\u5f53\u524d\u70b9\u679a\u4e3e\u6240\u6709\u8fb9\u6269\u5c55\u65b0\u70b9\u4e4b\u524d\u3002\n\n```cpp\nfor(int i=t.s;;i++)//\u4ece\u5f53\u524d\u6700\u77ed\u65f6\u523b\u5f00\u59cb\u679a\u4e3e\n{\n    if(!vt[make_pair(a,i)])//\u5982\u679c\u8fd9\u4e2a\u65f6\u523b\u6ca1\u6709\u4ed6\u4eba\u4f7f\u7528\u4f20\u9001\u5668\n    {\n        b=i;//b\u539f\u6765\u662f\u4e4b\u524d\u7684\u6700\u77ed\u8def\uff0c\u66f4\u65b0\u540e\u8868\u793a\u6700\u5c11\u5728b\u7684\u65f6\u523b\u4f7f\u7528\u4f20\u9001\u5668\n        break;\n    }\n}\n```\n\u7136\u540e\u5176\u5b83\u4e0d\u53d8\uff0c\u6211\u4eec\u5c31\u80fd\u4f7f\u7528\u6700\u6734 ~~\uff08\u82b1\u91cc\uff09~~ \u7d20 ~~\uff08\u80e1\u54e8\uff09~~ \u7684\u505a\u6cd5\u901a\u8fc7\u8fd9\u9898\u4e86\u3002\n# AC \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dis[100005];//\u5b58\u6700\u77ed\u8def\nbool vis[100005];//\u662f\u5426\u8bbf\u95ee\u8fc7\nstruct edge\n{\n    int x,s;\n};//x\u662f\u8fd9\u6761\u8fb9\u5230\u7684\u70b9\uff0cs\u662f\u8fb9\u6743\nvector<edge>g[100005];//\u56fe\uff0c\u7528\u5411\u91cf\u5b58\uff08\u672c\u8d28\u4e0a\u662f\u90bb\u63a5\u8868\uff09\nstruct node\n{\n    int x,s;\n    bool operator<(const node&a)const\n    {\n        return s>a.s;\n    }\n};//x\u662f\u70b9\uff0cs\u662f\u5f53\u524d\u5230x\u7684\u6700\u77ed\u8def\npriority_queue<node>pq;//\u5806\nmap<pair<int,int>,bool>vt;//\u8fd9\u8fb9\u7531\u4e8e\u6709\u70b9\u3001\u65f6\u95f4\u4e24\u4e2a\u91cf\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86pair\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5f00\u7ed3\u6784\u4f53\uff0c\u4e0d\u8fc7\u6211\u61d2\u3002pair\u4e2d\u524d\u9762\u90a3\u4e2aint\u8868\u793a\u70b9\u7f16\u53f7\uff0c\u540e\u9762\u90a3\u4e2aint\u8868\u793a\u65f6\u523b\u3002\u4e0a\u9762\u89e3\u91ca\u8fc7\u8303\u56f4\u4e86\uff0c\u8fd9\u91ccint\u5c31\u591f\u3002\u8fd8\u4e0d\u4f1a\u7528pair\u7684OIer\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u7f51\u4e0a\u627e\u8fd9\u4e2aSTL\u7684\u7528\u6cd5\uff0c\u6211\u535a\u5ba2\u91cc\u6682\u65f6\u6ca1\u5199\nint main()\n{\n    memset(dis,0x7f,sizeof(dis));//\u6ce8\u610f\uff0c\u8fd9\u8fb9\u7531\u4e8e\u4e00\u6761\u8fb9\u5c31\u670910^9\u6211\u5c31\u6ca1\u6709\u75280x3f\u800c\u662f0x7f\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        g[u].push_back(edge{v,w});//\u53cc\u5411\u5efa\u8fb9\n        g[v].push_back(edge{u,w});\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int x;//\u8fd9\u4e2a\u70b9\u7684\u4f20\u9001\u5668\u6709x\u4e2a\u65f6\u523b\u88ab\u4ed6\u4eba\u4f7f\u7528\n        scanf(\"%d\",&x);\n        for(int j=1;j<=x;j++)\n        {\n            int s;//\u8fd9\u4e2a\u70b9\u7684\u4f20\u9001\u5668\u7b2cs\u4e2a\u65f6\u523b\u88ab\u4ed6\u4eba\u4f7f\u7528\n            scanf(\"%d\",&s);\n            vt[make_pair(i,s)]=1;//\u6253\u6807\u8bb0\uff0c\u8868\u793a\u70b9i\u5728s\u7684\u65f6\u523b\u6709\u4ed6\u4eba\u4f7f\u7528\u4f20\u9001\u5668\n        }\n    }\n    dis[1]=0;//\u5230\u8d77\u70b9\u6700\u77ed\u8def\u662f0\n    pq.push(node{1,0});//\u8d77\u70b9\u5165\u961f\n    while(pq.size())//\u8dd1\u6700\u77ed\u8def\n    {\n        node t=pq.top();//\u53d6\u51fa\u5f53\u524d\u8ddd\u79bb\u6700\u77ed\u7684\u70b9\n        pq.pop();\n        int a=t.x;\n        if(vis[a])//\u8d70\u8fc7\u5c31\u8df3\u8fc7\n        {\n            continue;\n        }\n        vis[a]=1;//\u8bbf\u95ee\u8fc7\u4e86\n        int b;//\u6700\u5c11\u5728b\u7684\u65f6\u523b\u4f7f\u7528\u4f20\u9001\u5668\n        for(int i=t.s;;i++)//\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6700\u5c0f\u65f6\u523b\uff0c\u8fd9\u6837\u627e\u5230\u7b2c\u4e00\u4e2a\u5c31\u53ef\u4ee5\u8df3\u51fa\u5faa\u73af\uff0c\u7701\u65f6\u95f4\n        {\n            if(!vt[make_pair(a,i)])//\u8fd9\u4e2a\u65f6\u523b\u5f53\u524d\u70b9\u65e0\u4ed6\u4eba\u4f7f\u7528\u4f20\u9001\u5668\n            {\n                b=i;//\u628a\u6700\u5c0f\u65f6\u523b\u8d4b\u7ed9b\n                break;//\u8df3\u51fa\n            }\n        }\n        for(int i=0;i<g[a].size();i++)//\u679a\u4e3e\u5f53\u524d\u70b9\u8fde\u63a5\u7684\u6240\u6709\u8fb9\n        {\n            edge f=g[a][i];//\u6682\u5b58\u4e00\u4e0b\n            int x=f.x,y=f.s;//\u53d6\u51fa\u5230\u8fbe\u7684\u70b9\u3001\u6743\u503c\n            if(b+y<dis[x])//\u5982\u679c\u8fd9\u6837\u8def\u66f4\u77ed\n            {\n                dis[x]=b+y;//\u66f4\u65b0\n                pq.push(node{x,b+y});//\u5f53\u524d\u6700\u77ed\u8def\u5165\u961f\n            }\n        }\n    }\n    if(vis[n])//\u5982\u679c\u8bbf\u95ee\u8fc7\u80fd\u5230\u8fbe\n    {\n        printf(\"%d\\n\",dis[n]);//\u8f93\u51fa\u6700\u77ed\u8ddd\u79bb\n    }\n    else//\u5426\u5219\u8f93\u51fa-1\n    {\n        puts(\"-1\");\n    }\n    return 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\uff01\u8dea\u6c42\u8fc7\u5ba1 orz",
        "postTime": 1644222596,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "CF229B \u4e00\u79cd\u5b57\u5178\uff08map\uff09\u505a\u6cd5"
    },
    {
        "content": "### 1 \u601d\u8def\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5806\u4f18\u5316\u7684 [Dijkstra \u7b97\u6cd5](https://baike.baidu.com/item/%E8%BF%AA%E5%85%8B%E6%96%AF%E7%89%B9%E6%8B%89%E7%AE%97%E6%B3%95/23665989?fromtitle=Dijkstra%E7%AE%97%E6%B3%95&fromid=215612&fr=aladdin)\u89e3\u51b3\u6b64\u9898\u3002\n\n\u9996\u5148\u662f\u4e00\u7cfb\u5217\u666e\u901a\u7684\u64cd\u4f5c\uff0c\u5230\u4e86\u8f93\u5165\u901a\u9053\u5360\u7528\u60c5\u51b5\u7684\u65f6\u5019\uff0c\u5c31\u8981\u7528\u96c6\u5408 `set` \u7ef4\u62a4\u3002\n\n\u5f53\u4f60\u8d70\u5230\u67d0\u4e2a\u70b9\uff0c\u6b64\u65f6\u901a\u9053\u6b63\u5728\u88ab\u5360\u7528\uff0c\u5c31\u7528\u82b1\u8d39\u65f6\u95f4\u81ea\u589e\u6765\u6a21\u62df\u7b49\u5f85\u3002\n\n\u8bbe $s[i]$ \u4e3a $i$ \u70b9\u5360\u7528\u60c5\u51b5\u7684\u96c6\u5408\uff0c$dis[i]$ \u4e3a\u4ece $1$ \u70b9\u8d70\u5230 $i$ \u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c$u$ \u662f\u5f53\u524d\u70b9\uff0c$t$ \u662f\u5f53\u524d\u82b1\u8d39\u65f6\u95f4\uff0c$v$ \u662f\u8be5\u6761\u8fb9\u7ec8\u70b9\uff0c$w$ \u662f\u8be5\u6761\u8fb9\u8ddd\u79bb\u3002\n\n\u6a21\u62df\u7b49\u5f85\u53ef\u4ee5\u5199\u6210\uff1a\n\n```\nwhile(s[u].count(t))++t;\n```\n\n\u6ce8\u610f\u677e\u5f1b\u64cd\u4f5c\u8981\u5199\u5728\u7b49\u5f85\u540e\uff0c\u5e76\u4e14\u8981\u8fd9\u6837\u5199\uff1a\n\n```\nif(t+w<dis[v])...\n```\n\n\u800c\u4e0d\u662f\uff1a\n\n```\nif(dis[u]+w<dis[v])...\n```\n\n### 2 \u4ee3\u7801\u4e0e\u8bb0\u5f55\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<set>\nusing namespace std;\n#define max_n 100000\n#define max_m 200000\n#define inf 0x3f3f3f3f\nint n;\nint m;\nstruct E{\n\tint v,w,nx;\n}e[max_m+2];\nint ei=0;\nint fir[max_n+2];\nset<int>s[max_n+2];\nint dis[max_n+2];\nstruct W{\n\tint u,t;\n\tbool operator<(const W &a)const{\n\t\treturn a.t<t;\n\t}\n};\npriority_queue<W>q;\nW fro;\ninline void addedge(int u,int v,int w){\n\t++ei; e[ei].v=v; e[ei].w=w; e[ei].nx=fir[u]; fir[u]=ei;\n}\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"CF0229B_1.in\",\"r\",stdin);\n\tfreopen(\"CF0229B_1.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)fir[i]=0;\n\tfor(int i=1,u,v,w;i<=m;++i){\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\taddedge(u,v,w);\n\t\taddedge(v,u,w);\n\t}\n\tfor(int i=1,k,t;i<=n;++i){\n\t\tscanf(\"%d\",&k);\n\t\tfor(int j=1;j<=k;++j){\n\t\t\tscanf(\"%d\",&t);\n\t\t\ts[i].insert(t);\n\t\t}\n\t}\n\tdis[1]=0;\n\tfor(int i=2;i<=n;++i)dis[i]=inf;\n\tq.push((W){1,0});\n\twhile(!q.empty()){\n\t\tfro=q.top();\n\t\tq.pop();\n\t\tif(dis[fro.u]!=fro.t)continue;\n\t\twhile(s[fro.u].count(fro.t))++fro.t;\n\t\tfor(int i=fir[fro.u],v;i;i=e[i].nx){\n\t\t\tv=e[i].v;\n\t\t\tif(fro.t+e[i].w<dis[v]){\n\t\t\t\tdis[v]=fro.t+e[i].w;\n\t\t\t\tq.push((W){v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[n]==inf)printf(\"-1\\n\");\n\telse printf(\"%d\\n\",dis[n]);\n\treturn 0;\n}\n```\n\n[\u8bb0\u5f55\u4f20\u9001\u95e8](https://www.luogu.com.cn/record/57400343)\n\nBy **dengziyue**",
        "postTime": 1630669481,
        "uid": 387840,
        "name": "happy_dengziyue",
        "ccfLevel": 6,
        "title": "CF229B\u9898\u89e3"
    },
    {
        "content": "- ## \u4e00\u9053\u6807\u51c6\u7684\u6700\u77ed\u8def\u4e9a\u6a21\u677f\u9898\n\u4e4b\u6240\u4ee5\u662f\u4e9a\u6a21\u677f\u9898\uff0c\u662f\u56e0\u4e3a\u5b83\u4e0e\u6a21\u677f\u6709\u4e9b\u4e0d\u540c\u2014\u2014**\u591a\u4e86\u4e9b\u4e0e\u65f6\u95f4\u548c\u5730\u70b9\u6709\u5173\u7684\u9650\u5236**\n\n\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u96be\u5b9e\u73b0\u3002\n\n\u770b\u5230n<=10^5&&sum{$k_i$},\u6211\u4e00\u5f00\u59cb\u89c9\u5f97\u7528$map$\u53ef\u4ee5\u5361\u8fc7\uff0c\u4fbf\u6709\u4e86\u5982\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define RI register int\n#define s second \n#define f first\n#define du pair<int,int>\n#define ru(x,y) q.push((du){-y,x})\nusing namespace std;\nconst int N=1e5+2;\nconst int da=2147483647;\nstruct wu{\n\tint n,t,s;\n}a[N<<1];\nint f[N],h[N],p;bool b[N];\nmap<bool,map<int,int> >vis;\npriority_queue<du>q;\ninline void add(int u,int v,int s){\n\tp=-~p;a[p].s=s;\n\ta[p].t=v;a[p].n=h[u];\n\th[u]=p;\n}\nint main(){\n\tRI n,m,u,s,v,x;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(RI i=1;i<=m;i=-~i){\n\t\tscanf(\"%d%d%d\",&u,&v,&s);\n\t\tadd(u,v,s);add(v,u,s);\n\t}\n\tfor(RI i=1;i<=n;i=-~i){\n\t\tscanf(\"%d\",&s);\n\t\tfor(RI j=1;j<=s;j=-~j){\n\t\t\tscanf(\"%d\",&u);\n\t\t\tvis[i][u]=1;\n\t\t}\n\t\tf[i]=da;\n\t}\n\tru(1,0);f[1]=0;\n\twhile(q.size()){\n\t\tu=q.top().s;x=-q.top().f;\n\t\tq.pop();\n\t\tif(b[u]) continue;\n\t\tb[u]=1;\n\t\twhile(vis[u][x]) x=-~x;//\u5224\u65ad\u662f\u5426\u6709\u4eba\n\t\tfor(RI i=h[u];i;i=a[i].n){\n\t\t\tv=a[i].t;s=a[i].s;\n\t\t\tif(f[v]>x+s)\n\t\t\t\tf[v]=x+s,ru(v,f[v]);\n\t\t}\n\t}\n\tif(f[n]==da) printf(\"-1\");\n\telse printf(\"%d\",f[n]);\n\treturn 0;\n}\n```\n\n\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u80fd\u8fc7\uff0c\u6211\u4fbf\u8003\u8651\u4e86\u53e6\u4e00\u79cd\u9ed1\u79d1\u6280\u2014\u2014$set$\u3002\u63a5\u7740\u5957\u4e0a$ Dijkstra$\u6a21\u677f\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define RI register int\n#define is(x,y) q[x].insert(y)\n#define co(x,y) q[x].count(y)\nusing namespace std;\nconst int N=1e5+2;\nconst int da=2147483647;\nstruct wu{\n\tint n,t,s;\n}a[N<<1];\nint f[N],h[N],p,d[5000002][2];bool b[N];\nset<int>q[N];\ninline void add(int u,int v,int s){\n\tp=-~p;a[p].s=s;\n\ta[p].t=v;a[p].n=h[u];\n\th[u]=p;\n}\nint main(){\n\tRI n,m,u,s,v,x;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(RI i=1;i<=m;i=-~i){\n\t\tscanf(\"%d%d%d\",&u,&v,&s);\n\t\tadd(u,v,s);add(v,u,s);\n\t}\n\tfor(RI i=1;i<=n;i=-~i){\n\t\tscanf(\"%d\",&s);\n\t\tfor(RI j=1;j<=s;j=-~j){\n\t\t\tscanf(\"%d\",&u);\n\t\t\tis(i,u);\n\t\t}\n\t\tf[i]=da;\n\t}\n\tf[1]=0;d[1][0]=1;\n\tfor(RI t=1,w=1;t<=w;t=-~t){\n\t\tu=d[t][0];x=d[t][1];b[u]=0;\n\t\twhile(co(u,x)) x=-~x; //\u5224\u65ad\u662f\u5426\u6709\u4eba\n\t\tfor(RI i=h[u];i;i=a[i].n){\n\t\t\tv=a[i].t;s=a[i].s;\n\t\t\tif(f[v]>s+x){\n\t\t\t\tf[v]=s+x;\n\t\t\t\td[++w][0]=v;d[w][1]=f[v];\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tif(f[n]==da) printf(\"-1\");\n\telse printf(\"%d\",f[n]);\n\treturn 0;\n}\n```\n\u7ed3\u679c\u7adf\u8f7b\u677e\u6c34\u8fc7\u3002\n\n\u540c\u6837\uff0c\u4e5f\u53ef\u4ee5\u7528$spfa$\u8dd1\u4e00\u904d\u3002\n```cpp\n#include<bits/stdc++.h>\n#define RI register int\n#define s second \n#define f first\n#define is(x,y) d[x].insert(y)\n#define co(x,y) d[x].count(y)\n#define du pair<int,int>\n#define ru(x,y) q.push((du){-y,x})\nusing namespace std;\nconst int N=1e5+2;\nconst int da=2147483647;\nstruct wu{\n\tint n,t,s;\n}a[N<<1];\nint f[N],h[N],p;bool b[N];\nset<int>d[N];\npriority_queue<du>q;\ninline void add(int u,int v,int s){\n\tp=-~p;a[p].s=s;\n\ta[p].t=v;a[p].n=h[u];\n\th[u]=p;\n}\nint main(){\n\tRI n,m,u,s,v,x;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(RI i=1;i<=m;i=-~i){\n\t\tscanf(\"%d%d%d\",&u,&v,&s);\n\t\tadd(u,v,s);add(v,u,s);\n\t}\n\tfor(RI i=1;i<=n;i=-~i){\n\t\tscanf(\"%d\",&s);\n\t\tfor(RI j=1;j<=s;j=-~j){\n\t\t\tscanf(\"%d\",&u);\n\t\t\tis(i,u);\n\t\t}\n\t\tf[i]=da;\n\t}\n\tru(1,0);f[1]=0;\n\twhile(q.size()){\n\t\tu=q.top().s;x=-q.top().f;\n\t\tq.pop();\n\t\tif(b[u]) continue;\n\t\tb[u]=1;\n\t\twhile(co(u,x)) x=-~x;//\u5224\u65ad\u662f\u5426\u6709\u4eba\n\t\tfor(RI i=h[u];i;i=a[i].n){\n\t\t\tv=a[i].t;s=a[i].s;\n\t\t\tif(f[v]>x+s)\n\t\t\t\tf[v]=x+s,ru(v,f[v]);\n\t\t}\n\t}\n\tif(f[n]==da) printf(\"-1\");\n\telse printf(\"%d\",f[n]);\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u3002",
        "postTime": 1609588704,
        "uid": 133037,
        "name": "_OccDreamer_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF229B \u3010Planets\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u5c0fJ\uff08jack\uff09\u8981\u4ece1\u7a7f\u8d8a\u5230n\u3002\u661f\u7403\u4e4b\u95f4\u6709\u4e00\u4e9b\u53cc\u5411\u901a\u9053\uff0c\u5c0fJ\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u901a\u9053\u5230\u8fben\u3002\n\n\u4f46\u662f\u6709\u4e00\u4e9b~~\u9738\u9053~~\u7684\u7a7f\u8d8a\u8005\u4e5f\u8981\u7a7f\u8d8a\u3002\n\n\u5f53\u5c0fJ\u548c\u7a7f\u8d8a\u8005\u540c\u65f6\u8981\u4eceS\u5230T\u65f6\uff0c\u4ed6\u5fc5\u987b\u8981\u7b49\u5f85\u8be5\u7a7f\u8d8a\u8005\u51fa\u53d1\u624d\u80fd\u51fa\u53d1\uff0c\u82b1\u8d39\u4e00\u79d2\u3002\n\n\u5982\u679c\u6709\u591a\u4e2a\u7a7f\u8d8a\u8005\uff0c\u90a3\u4e48\u5fc5\u987b\u7b49\u8fd9\u4e9b\u7a7f\u8d8a\u8005\u5168\u90e8\u51fa\u53d1\uff0c\u5c0fJ\u624d\u80fd\u51fa\u53d1\n\n\u95ee\u6700\u77ed\u8981\u591a\u4e45\u624d\u80fd\u5230\u8fben\n\n\u5206\u6790\uff1a\n\n\u4e00\u770b\u5c31\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u6a21\u677f\u9898\u3002\u6211\u4eec\u5c31\u60f3\u600e\u4e48\u5904\u7406\u7b49\u5f85\u3002\n\n\u6211\u4eec\u80fd\u591f\u51fa\u53d1\u7684\u65f6\u95f4\u662f\u8be5\u70b9\u4e4b\u540e\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u6807\u8bb0\u6709\u7a7f\u8d8a\u8005\u6765\u7684\u90a3\u4e2a\u70b9\u3002\n\n\u4e8e\u662f\u5c31\u66b4\u529b\u5f80\u540e\u627e\u3002\n\n\u53ef\u80fd\u65f6\u95f4\u590d\u6742\u5ea6\u6709Bug\uff0c\u4f46\u662f\u5728CF\u4e0b\u8fc7\u4e86\u3002\u901f\u5ea6\u4e5f\u4e0d\u6162\u3002\n\n\u6700\u77ed\u8def\u662f\u5199Dijkstra\u7684\u3002\n\n\u5982\u679c\u8981\u63d0\u9ad8\u6548\u7387\uff0c\u53ef\u4ee5\u518dset\u4e2d\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\u3002\u8fd9\u6837\u5f88\u5feb\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\n\n#define rep(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)\n#define Rep(i, a, b) for (int (i) = (a) - 1; (i) < (b); (i)++)\n#define REP(i, a, b) for (int (i) = (a); (i) >= (b); (i)--)\n#define clr(a) memset(a, 0, sizeof(a))\n#define Sort(a, len, cmp) sort(a + 1, a + len + 1, cmp)\n#define ass(a, sum) memset(a, sum, sizeof(a))\n\n#define ls ((rt) << 1)\n#define rs ((rt) << 1 | 1)\n#define lowbit(x) (x & -x)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define endl '\\n'\n#define ENDL cout << endl\n#define SZ(x) ((int)x.size())\n\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef vector <int> Vi ;\ntypedef pair <int, int> Pii ;\ntypedef pair <ll, ll> Pll ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\ntypedef map <ll, ll> mll ;\n\nconst int N = 100010 ;\nconst double eps = 1e-8 ;\nconst int iinf = INT_MAX ;\nconst ll linf = 2e18 ;\nconst double dinf = 1e30 ;\nconst int MOD = 1000000007 ;\n\nint n, m, top = 1 ;\nset <int> s[N] ;\nint dis[N], head[N] ;\n\nstruct edge {\n    int to, nxt, w ;\n} e[N << 1] ;\n\nvoid add(int a, int b, int w) {\n    e[++top] = (edge) {b, head[a], w} ;\n    head[a] = top ;\n}\n\nstruct node {\n    int x, len ;\n    bool operator < (const node &a) const {\n        return len > a.len ;\n    }\n};\n\nvoid dij() {\n    priority_queue <node> q ;\n    for (int i = 1; i <= n; i++) dis[i] = iinf ;\n    dis[1] = 0 ;\n    q.push((node) {1, 0}) ;\n    while (!q.empty()) {\n        node now = q.top() ;\n        q.pop() ;\n        int tim = now.len ;\n        while (s[now.x].count(tim)) tim++ ;\n        if (dis[now.x] != now.len) continue ;\n        for (int i = head[now.x]; i; i = e[i].nxt) {\n            int to = e[i].to ;\n            if (dis[to] > tim + e[i].w) {\n                dis[to] = tim + e[i].w ;\n                q.push((node) {to, dis[to]}) ;\n            }\n        }\n    }\n}\n\nsigned main(){\n    scanf(\"%d%d\", &n, &m) ;\n    for (int i = 1; i <= m; i++) {\n        int x, y, z ;\n        scanf(\"%d%d%d\", &x, &y, &z) ;\n        add(x, y, z) ;\n        add(y, x, z) ;\n    }\n    for (int i = 1; i <= n; i++) {\n        int sum, x ;\n        scanf(\"%d\", &sum) ;\n        while (sum--) scanf(\"%d\", &x), s[i].insert(x) ;\n    }\n    dij() ;\n    if (dis[n] == iinf) cout << -1 << endl ;\n    else cout << dis[n] << endl ;\n    return 0 ;\n}\n```\n",
        "postTime": 1542446654,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF229B \u3010Planets\u3011"
    }
]