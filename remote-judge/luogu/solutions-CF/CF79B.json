[
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\n\u518d\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684 $k$ \u4e2a\u70b9\u574f\u6389\u4e86\uff0c\u9700\u8981\u518d\u5176\u4ed6\u70b9\u4e0a\u653e\u4e0a Grapes\uff0cCarrots \u548c Kiwis\u3002\u5e76\u4e14\u8be2\u95ee $t$ \u6b21\uff0c\u95ee\u7b2c $i$ \u884c\uff0c\u7b2c $j$ \u5217\u4e0a\u7684\u662f\u4ec0\u4e48?\u4e09\u79cd\u6c34\u679c\u7684\u653e\u7f6e\u987a\u5e8f\u662f\u4ece\u5de6\u5f80\u53f3\uff0c\u4ece\u4e0a\u5f80\u4e0b\u3002\n# Solution\n\u4e00\u5f00\u59cb\u662f\u60f3\u5230\u76f4\u63a5\u5efa\u4e00\u4e2a\u4e8c\u7ef4\u7684\u6570\u7ec4\u66b4\u529b\u6a21\u62df\u5f97\u51fa\u7ed3\u679c\uff0c\u4f46\u662f\u4e00\u770b\u6570\u636e\u53d1\u73b0\u5b58\u4e0d\u4e0b\u3002\u540e\u6765\u53c8\u60f3\u5230\u56e0\u4e3a\u653e\u6c34\u679c\u662f\u6709\u4e00\u5b9a\u7684\u987a\u5e8f\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u77e5\u9053\u518d\u8fd9\u4e2a\u70b9\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u574f\u6389\u4e86\u7684\u70b9\uff0c\u7136\u540e\u5c06\u672a\u574f\u6389\u7684\u70b9\u5bf9 $3$ \u53d6\u4f59\u6570\u5373\u53ef\u3002\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06\u4e8c\u7ef4\u7684\u8f6c\u6210\u4e00\u7ef4\u7684\u3002\u67e5\u627e\u574f\u6389\u4e86\u7684\u683c\u5b50\u7684\u6570\u91cf\u65f6\u53ef\u4ee5\u7528\u4e00\u4e2a $b_i$ \u6570\u7ec4\u8bb0\u5f55\u7b2c $i$ \u4e2a\u574f\u6389\u4e86\u7684\u683c\u5b50\u518d\u4e00\u7ef4\u4e0a\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6392\u5e8f\uff0c\u7528\u4e8c\u5206\u7684\u65b9\u5f0f\u6c42\u51fa\u518d $i,j$ \u70b9\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u574f\u6389\u4e86\u7684\u683c\u5b50\u3002\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u4e86\u3002\n# Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,t;\nint b[1005];\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*f;\n}\nsigned main(){\n\tn=read();m=read();k=read();t=read();\n\tfor(int i=1;i<=k;i++){\n\t\tint x=read(),y=read();\n\t\tb[i]=(x-1)*m+y;\t//\u8f6c\u4e00\u7ef4\n\t}\n\tsort(b+1,b+n+1);\n\twhile(t--){\n\t\tint x=read(),y=read();\n\t\tint l=1,r=k;\n\t\twhile(l<r){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(b[mid]>=(x-1)*m+y)r=mid;\n\t\t\telse l=mid+1;\n\t\t}//\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\n\t\tint tot=(x-1)*m+y;\n\t\tif(tot==b[r]){printf(\"Waste\\n\");continue;}\n\t\ttot=tot-r+1;\n\t\tif(tot%3==0)printf(\"Grapes\\n\");\n\t\telse if(tot%3==1)printf(\"Carrots\\n\");\n\t\telse if(tot%3==2)printf(\"Kiwis\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1666868408,
        "uid": 451100,
        "name": "Xjin",
        "ccfLevel": 3,
        "title": "CF79B"
    },
    {
        "content": "\u56e0\u4e3a $n$\uff0c$m$ \u6700\u5927\u4e3a $4\\times10^4$\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u5f00\u4e8c\u7ef4\u6570\u7ec4\u5b58\u3002\n\n\u8003\u8651\u628a\u4e8c\u7ef4\u7684\u77e9\u9635\u62c6\u6210\u4e00\u6761\u7ebf\u6765\u505a\uff0c\u5373\u628a\u77e9\u9635\u7684\u6bcf\u4e00\u884c\u63a5\u5230\u524d\u4e00\u884c\u7684\u672b\u5c3e\u53bb\u3002\n\n\u5f53\u8f93\u5165\u4e00\u4e2a\u5750\u6807\u65f6\uff0c\u6211\u4eec\u5148\u628a\u5b83\u8f6c\u6210\u4e00\u7ef4\u7684\u70b9\u3002\u5982\u679c\u8fd9\u4e2a\u70b9\u5c31\u662f\u201c\u574f\u6389\u7684\u70b9\u201d\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa\uff0c\u5426\u5219\u5c31\u7edf\u8ba1\u5b83\u7684\u524d\u9762\u6709\u51e0\u4e2a\u201c\u574f\u6389\u7684\u70b9\u201d\u5e76\u9664\u53bb\u3002\n\n\u56e0\u4e3a\u201c\u80e1\u841d\u535c\u201d\u3001\u201c\u5947\u5f02\u679c\u201d\u548c\u201c\u8461\u8404\u201d\u653e\u5165\u7684\u987a\u5e8f\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6700\u7ec8\u5f97\u5230\u7684\u4f4d\u7f6e\u5bf9 $3$ \u53d6\u6a21\u5c31\u80fd\u5224\u65ad\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u662f\u4ec0\u4e48\u6c34\u679c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define endl '\\n'\n#define ri register\n#define int long long\n#define inf 2147483647\n#define mp(x,y) make_pair((x),(y))\n#define reset(x,y) memset((x),(y),sizeof((x)))\nusing namespace std;\ninline int read()\n{\n\tint x=0;bool f=false;char c=getchar();\n\twhile(c<'0'||c>'9') {if(c=='-') f=true;c=getchar();}\n\twhile(c>='0'&&c<='9') {x=(x<<3)+(x<<1)+(c^'0');c=getchar();}\n\treturn f?-x:x;\n}\ninline void write(int x)\n{\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n}\nconst int N=5e4+10;\nint n,m,k,t,x,y,cnt,a[N];\n//a\u6570\u7ec4\u5b58\u653e\"\u574f\u6389\u7684\u70b9\"\u7684\u4f4d\u7f6e\nsigned main()\n{\n\tn=read();m=read();k=read();t=read();\n\tfor(ri int i=1;i<=k;++i)\n\t\tx=read(),y=read(),a[++cnt]=(x-1)*m+y;//\u4e8c\u7ef4\u8f6c\u4e00\u7ef4\n\tsort(a+1,a+cnt+1);//\u6392\u5e8f,\u4fbf\u4e8e\u7edf\u8ba1\n\tfor(ri int i=1;i<=t;++i)\n\t{\n\t\tx=read();y=read();\n\t\tri int res=(x-1)*m+y,tot=0,f=0;\n      \t\t//tot\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u524d\u9762\u6709\u51e0\u4e2a\"\u574f\u6389\u7684\u70b9\"\n            \t//f\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u5426\u4e3a\"\u574f\u6389\u7684\u70b9\"\n\t\tfor(ri int j=1;j<=cnt;++j)\n\t\t\tif(a[j]<res) ++tot;\n\t\t\t\telse if(a[j]==res) {f=1;break;}\n\t\t\t\t\telse break;//\u5c0f\u4f18\u5316\n\t\tif(f) {cout<<\"Waste\\n\";continue;}\n\t\tri int p=(res-tot)%3;//\u8be5\u70b9\u7684\u6700\u7ec8\u4f4d\u7f6e\n\t\tcout<<(!p?\"Grapes\\n\":p==1?\"Carrots\\n\":\"Kiwis\\n\");\n\t}\n\treturn 0;\n}",
        "postTime": 1617950629,
        "uid": 329672,
        "name": "Ninelife_Cat",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF79B \u3010Colorful Field\u3011"
    },
    {
        "content": "[\u65e0\u803b\u5730\u5ba3\u626c\u4e00\u4e0b\u6211\u7684\u535a\u5ba2](https://tongyuxin.blog.luogu.org/)\n# 1. \u9898\u610f\n\u6709\u4e00\u4e2a $n \\times m$ \u7684\u77e9\u9635\uff0c\u6709 $k$ \u4e2a\u70b9\u574f\u6389\u4e86\u4e0d\u80fd\u79cd\u4e1c\u897f\uff0c\u5176\u4f59\u7684\u70b9\u6309\u7167\u4ece\u4e0a\u5f80\u4e0b\uff0c\u4ece\u5de6\u5f80\u53f3\u7684\u987a\u5e8f\u4f9d\u6b21\u586b\u5165\u80e1\u841d\u535c\u3001\u5947\u5f02\u679c\u548c\u8461\u8404\u3002\u6709 $t$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u8f93\u5165\u4e00\u4e2a\u5750\u6807\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5750\u6807\u4e0a\u79cd\u7684\u662f\u4ec0\u4e48\u3002\n# 2.\u601d\u8def\n\u6211\u4eec\u53ef\u4ee5\u628a\u4e8c\u7ef4\u7684\u77e9\u9635\u62c6\u6210\u4e00\u7ef4\u7684\u4e00\u6761\u7ebf\uff0c\u540c\u65f6\u5c06\u574f\u6389\u4e86\u7684\u70b9\u6309\u7167\u5b83\u5728\u8fd9\u6761\u7ebf\u4e2d\u7684\u5750\u6807\u6392\u5e8f\uff0c\u8be2\u95ee\u65f6\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u8fd9\u4e2a\u70b9\u524d\u9762\u79bb\u5b83\u6700\u8fd1\u7684\u574f\u6389\u4e86\u7684\u70b9\uff0c\u800c\u8fd9\u4e2a\u70b9\u5728\u574f\u8282\u70b9\u4e2d\u7684\u7f16\u53f7\u5c31\u662f\u8be2\u95ee\u7684\u70b9\u524d\u9762\u574f\u63a5\u70b9\u7684\u6570\u91cf\u3002\u77e5\u9053\u4e86\u524d\u9762\u6709\u51e0\u4e2a\u574f\u8282\u70b9\uff0c\u5176\u4f59\u7684\u5c31\u53ef\u4ee5\u7528\u5468\u671f\u95ee\u9898\u7684\u601d\u60f3\u6109\u5feb\u7684\u89e3\u51b3\u4e86\uff01\n# 3.\u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, t, bad[1001];\nint main()\n{\n\tscanf(\"%d%d%d%d\", &n, &m, &k, &t);\n\tfor (int i = 1; i <= k; i ++)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tbad[i] = (x - 1) * m + y;\n\t}\n\tsort(bad + 1, bad + k + 1);\n\twhile (t --)\n\t{\n\t\tint x, y, id, l, r, cnt;\n\t\tbool waste = false;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tid = (x - 1) * m + y;\n\t\tl = 0, r = k;\n\t\twhile (l <= r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif (bad[mid] == id)\n\t\t\t{\n\t\t\t\twaste = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (bad[mid] > id) r = mid - 1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t\tcnt = mid;\n\t\t\t}\n\t\t}\n\t\tid -= cnt;\n\t\tif (waste) printf(\"Waste\\n\");\n\t\telse if (id % 3 == 0) printf(\"Grapes\\n\");\n\t\telse if (id % 3 == 1) printf(\"Carrots\\n\");\n\t\telse printf(\"Kiwis\\n\"); \n\t}\n}\n```",
        "postTime": 1673496483,
        "uid": 508927,
        "name": "Tong_Yuxin",
        "ccfLevel": 5,
        "title": "Colorful Field \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f \n\n\u4e00\u4e2a $n \\times m$ \u7684\u77e9\u9635\uff0c\u5176\u4e2d $k$ \u4e2a\u70b9\u662f\u574f\u7684\u3002\u6309 **\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3** \u7684\u987a\u5e8f\u586b\u5165\u5b57\u7b26\u4e32\uff0c\u4e3a $\\mathtt{Carrots}$\uff0c$\\mathtt{Kiwis}$ \u548c $\\mathtt{Grapes}$ \u5faa\u73af\uff0c\u586b\u5165\u65f6\u5982\u679c\u9047\u5230\u574f\u7684\u70b9\u5c31\u8df3\u8fc7\u3002\n\n$T$ \u4e2a\u8be2\u95ee\uff0c\u8f93\u5165 $x,y$\uff0c\u8f93\u51fa\u77e9\u9635\u4e2d\u7b2c $x$ \u884c\uff0c\u7b2c $y$ \u5217\u7684\u5b57\u7b26\u4e32\u3002\n\n## \u89e3\u6cd5\n\n\u4e00\u770b\u9898\u90fd\u80fd\u60f3\u5230\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4f46\u662f $1 \\leq n, m \\leq 4\\times10^4$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(nm)$ \u5f00\u4e0d\u4e0b\uff0c\u6240\u4ee5\u8981\u4f18\u5316\u3002\n\n\u7531\u4e8e\u662f $3$ \u4e2a\u5b57\u7b26\u4e32\u5faa\u73af\uff0c\u6240\u4ee5 \u5f88\u5bb9\u6613\u60f3\u5230\u8ba1\u7b97\u51fa \u8fd9\u4e2a\u70b9 \u662f\u586b\u5165\u65f6\u7684 \u7b2c\u51e0\u4e2a\u70b9\uff0c\u518d\u6a21 $3$\uff0c\u8f93\u51fa\u4f59\u6570\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u5373\u53ef\uff0c\u5982\u679c\u8be5\u70b9\u662f\u574f\u7684\uff0c\u5c31\u8f93\u51fa $\\mathtt{Waste}$\u3002\n\n\u672c\u4eba\u5148\u6c42\u51fa\u6bcf\u4e00\u884c\u6709\u51e0\u4e2a **\u975e\u574f\u7684** \u70b9\uff0c\u518d\u524d\u7f00\u548c\uff0c\u6c42\u51fa\u4ece\u7b2c\u4e00\u884c\u5230\u8fd9\u4e00\u884c\u6709\u51e0\u4e2a **\u975e\u574f\u7684** \u70b9\uff0c\u518d\u662f\u7528 \u4e8c\u7ef4 `vector` \u5b58\u6bcf\u4e00\u884c\u7684 **\u574f** \u7684\u70b9 \u7684\u4f4d\u7f6e\uff0c\u518d\u6bcf\u4e00\u884c\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u67e5\u8be2\uff0c\u53ea\u8981\u7b97\u51fa\u8be5\u70b9\u662f\u8be5\u884c\u7684\u7b2c\u51e0\u4e2a **\u975e\u574f\u7684** \u70b9\uff0c\u518d\u52a0\u4e0a\u4ece\u7b2c\u4e00\u884c\u5230\u4e0a\u4e00\u884c\u4e00\u5171\u6709\u51e0\u4e2a **\u975e\u574f\u7684** \u70b9\u5373\u53ef\u3002\u5229\u7528 **\u4e8c\u5206** \u6c42\u51fa\u8fd9\u4e00\u884c\u7684 **\u574f\u70b9** \u4e2d\uff0c$y$ \u5c0f\u4e8e \u8be5\u70b9 \u4e14\u6700\u5927\u7684\u70b9\u7684\u4e0b\u6807 \u52a0\u4e00\u5c31\u662f\u8be5\u70b9\u662f\u8be5\u884c\u7684\u7b2c\u51e0\u4e2a **\u975e\u574f\u7684** \u70b9 \uff08**`vector` \u4e0b\u6807\u4ece $0$ \u5f00\u59cb**\uff09\uff0c\u8981\u7279\u5224\u4e00\u4e0b\u8be5\u70b9\u662f\u4e0d\u662f **\u574f\u70b9**\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlog_2n+Tlog_2k)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+k)$\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define Fcin\\\n\tios :: sync_with_stdio(0);\\\n\tcin.tie(0); cout.tie(0)\nusing namespace std;\nconst LL N = 4e4 + 10;\nLL pre[N], n, m, k, T;\nvector<LL> bad[N];\nstring S[4] = {\"Grapes\", \"Carrots\", \"Kiwis\", \"Waste\"};\n\nstring solve(){\n\tLL x, y, res = 0;\n\tcin >> x >> y;\n\tres += pre[x - 1];\n\tLL l = 1, r = bad[x].size();\n\twhile (l + 1 < r){\n\t\tLL mid = (l + r) >> 1;\n\t\tif (bad[x][mid - 1] >= y)\n\t\t\tr = mid;\n\t\telse\n\t\t\tl = mid;\n\t}\n\tLL X;\n\tif (l == 0 || r == 0){\n\t\tres += y;\n\t\treturn S[res % 3];\n\t}\n\tif (bad[x][r - 1] <= y)\n\t\tX = r;\n\telse if (bad[x][l - 1] <= y)\n\t\tX = l;\n\telse{\n\t\tres += y;\n\t\treturn S[res % 3];\n\t}\n\tif (bad[x][X - 1] == y)\n\t\treturn S[3];\n\tres += y - X;\n\treturn S[res % 3];\n}\n\nint main(){\n//    Fcin;\n    LL x, y;\n    cin >> n >> m >> k >> T;\n    for (LL i = 1; i <= n; i ++)\n    \tpre[i] = m;\n    for (LL i = 1; i <= k; i ++){\n    \tcin >> x >> y;\n    \tpre[x] --;\n    \tbad[x].emplace_back(y);\n\t}\n\tfor (LL i = 1; i <= n; i ++){\n\t\tpre[i] += pre[i - 1];\n\t\tsort(bad[i].begin(), bad[i].end());\n\t}\n\twhile (T --){\n\t\tcout << solve() << \"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1668073233,
        "uid": 431658,
        "name": "LaDeX",
        "ccfLevel": 0,
        "title": "CF79B Colorful Field \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u7b80\u6d01\u660e\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u8d58\u8ff0\u3002\n## \u601d\u8def\n\u9996\u5148\u7ed3\u6784\u4f53\u6392\u5e8f\uff0c\u7136\u540e\u7528\u4e8c\u5206\u67e5\u627e\u8ddd\u79bb\u5f53\u524d\u7684\u70b9\u6700\u8fd1\u7684\u90a3\u4e2a\u574f\u6389\u7684\u683c\u5b50\u7684\u5e8f\u53f7\uff0c\u8fd9\u6837\u5c31\u80fd\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u683c\u5b50\u574f\u6389\u4e86\u3002    \n\u6700\u540e\u7528\u5468\u671f\u95ee\u9898\u5c31\u53ef\u4ee5\u6109\u5feb\u6ef4\u89e3\u51b3\u5566\uff01\n## Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<fstream>\n#include<algorithm>\n#include<cmath>\n#include<deque>\n#include<vector>\n#include<queue>\n#include<string>\n#include<cstring>\n#include<map>\n#include<stack>\n#include<set>\nusing namespace std;\nint n,m,k,T,i,bao,t,w,a,b,h;\nstruct Node{\n\tint x,y;\n}x[40010];\nbool cmp(Node x,Node y){return x.x<y.x||x.x==y.x&&x.y<y.y;}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&T);\n\tfor (i=1;i<=k;i++) scanf(\"%d%d\",&x[i].x,&x[i].y);\n\tsort(x+1,x+k+1,cmp);\n\twhile (T--){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tt=1;w=k;bao=0;\n\t\twhile (t<=w){\n\t\t\tint mid=(t+w)>>1;\n\t\t\tif (x[mid].x<a||x[mid].x==a&&x[mid].y<=b) bao=mid,t=mid+1;\n\t\t\telse w=mid-1;\n\t\t}\n\t\tif (x[bao].x==a&&x[bao].y==b) printf(\"Waste\\n\");\n\t\telse{\n\t\t\th=((a-1)*m+b-bao-1)%3+1;\n\t\t\tif (h==1) printf(\"Carrots\\n\");\n\t\t\telse if (h==2) printf(\"Kiwis\\n\");\n\t\t\telse printf(\"Grapes\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1657094963,
        "uid": 315398,
        "name": "\u5c0f\u6768\u5c0f\u5c0f\u6768",
        "ccfLevel": 5,
        "title": "CF79B Colorful Field\u9898\u89e3"
    }
]