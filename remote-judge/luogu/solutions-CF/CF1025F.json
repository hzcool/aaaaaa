[
    {
        "content": "## \u9898\u610f\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/CF1025F)\u3002\n\n\u7ed9\u51fa\u5e73\u9762\u4e0a\u7684\u4e00\u4e9b\u70b9\uff0c\u4ece\u5176\u4e2d\u9009\u51fa6\u4e2a\u70b9\uff0c\u7ec4\u6210\u4e24\u4e2a\u4e09\u89d2\u5f62\uff0c\u6c42\u4f7f\u4e24\u4e2a\u4e09\u89d2\u5f62\u4e0d\u76f8\u4ea4\uff08\u5373\u5e73\u9762\u4e0a\u4e0d\u5b58\u5728\u4e00\u4e2a\u70b9\u540c\u65f6\u5c5e\u4e8e\u4e24\u4e2a\u4e09\u89d2\u5f62\uff09\u7684\u65b9\u6848\u6570\uff0c\u5982\u679c\u9009\u7684\u70b9\u76f8\u540c\u4f46\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\u4e0d\u540c\u5219\u7b97\u4e0d\u540c\u7684\u65b9\u6848\u3002\n\n## \u5206\u6790\n\n\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c\u4e24\u4e2a\u4e09\u89d2\u5f62\u4e0d\u76f8\u4ea4\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e24\u6761\u5185\u516c\u5207\u7ebf\u3002\u5982\u4e0b\u56fe\uff08\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff09\uff1a\n\n![VJur90.png](https://s2.ax1x.com/2019/06/03/VJur90.png)\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u5185\u516c\u5207\u7ebf\u4e86\u3002\n\n\u5bf9\u4e8e\u8f93\u5165\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u8ba9\u5b83\u548c\u5176\u4ed6$n-1$\u4e2a\u70b9\u7ec4\u6210\u76f4\u7ebf\uff0c\u5e76\u8fdb\u884c\u6781\u89d2\u6392\u5e8f\uff0c\u7136\u540e\u9006\u65f6\u9488\u65b9\u5411\u679a\u4e3e\u8fd9\u4e9b\u76f4\u7ebf\uff0c\u540c\u65f6\u7ef4\u62a4\u5728\u76f4\u7ebf\u53f3\u4fa7\u7684\u70b9\u7684\u6570\u91cf\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u76f4\u7ebf\uff0c\u5229\u7528\u4e58\u6cd5\u539f\u7406\u8ba1\u7b97\u65b9\u6848\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff1a\u6bcf\u4e00\u6761\u76f4\u7ebf\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7ec4\u6210\u4e24\u4e2a\u4e09\u89d2\u5f62\u3002\u5982\u4e0a\u56fe\u4e2d\uff0c\u76f4\u7ebf$CE$\u65e2\u53ef\u4ee5\u7ec4\u6210$\\triangle ABC$\u548c$\\triangle DEF$\uff0c\u4e5f\u53ef\u4ee5\u7ec4\u6210$\\triangle ABE$\u548c$\\triangle CDF$\u3002\u6240\u4ee5\u6bcf\u6b21\u8ba1\u7b97\u7684\u65f6\u5019\u8981\u4e58$2$\u3002\u4f46\u662f\u6bcf\u4e00\u4e2a\u4e09\u89d2\u5f62\u53c8\u4f1a\u88ab\u4e24\u6761\u76f4\u7ebf\u540c\u65f6\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u540e\u7b54\u6848\u53c8\u8981\u51cf\u534a\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u5c31\u5b8c\u5168\u62b5\u6d88\u4e86\u3002\n\n\u540c\u65f6\uff0c\u6211\u4eec\u53ea\u679a\u4e3e\u6781\u89d2\u5c0f\u4e8e$0$\u7684\u76f4\u7ebf\uff0c\u9632\u6b62\u5171\u7ebf\u7684\u60c5\u51b5\u7b97\u91cd\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define MAX 2005\nusing namespace std;\n\nconst double PI = acos(-1.0);\n\nstruct vec{\n    double x, y;\n}a[MAX];\n\nint n;\ndouble b[MAX];\nll ans;\n\nll C2(ll x){\n    return (x-1)*x/2;\n}\n\nint main()\n{\n    cin >> n;\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%lf%lf\", &a[i].x, &a[i].y);\n    }\n    \n    for (int i = 1; i <= n; ++i) {\n        int cnt = 0;\n        for (int j = 1; j <= n; ++j) {\n            if(i != j){\n                b[++cnt] = atan2(a[j].y-a[i].y, a[j].x-a[i].x);\n            }\n        }\n        sort(b+1, b+cnt+1);\n        for (int j = 1, k = 1; j <= cnt && b[j] <= 0; ++j) {\n            while(k <= cnt && b[k]-b[j] < PI){\t\t//\u5728\u76f4\u7ebf\u53f3\u4fa7\u3002\n                k++;\n            }\n            ll l = k-j-1, r = cnt-l-1;\t\t//\u6ce8\u610f\u4e00\u4e0b\u70b9\u7684\u4e2a\u6570\u7ec6\u8282\uff1a\u5f53\u524d\u70b9\u548c\u5f53\u524dk\u4e0d\u80fd\u7b97\n            ans += C2(l)*C2(r);\t\t//\u4e58\u6cd5\u539f\u7406\n        }\n    }\n    \n    cout << ans << endl;\n\n    return 0;\n}\n```\n\n",
        "postTime": 1559535934,
        "uid": 22991,
        "name": "fighter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1025F \u3010Disjoint Triangles\u3011"
    },
    {
        "content": "@fighter \u5927\u4f6c\u8bb2\u7684\u5df2\u7ecf\u5f88\u597d\u4e86\n\n\u6211\u518d\u6765\u53d1\u4e00\u7bc7\u81ea\u5df1\u7684\u89c1\u89e3\u5427\n\n\u7ed9\u5b9a$n$\u4e2a\u70b9\uff0c\u6c42\u80fd\u627e\u5230\u51e0\u5bf9\u4e09\u89d2\u5f62\uff0c\u6ee1\u8db3\u5b83\u4eec\u7684\u9876\u70b9\u662f $n$ \u4e2a\u70b9\u4e2d\u7684\u82e5\u5e72\u4e2a\uff0c\u4e14\u4e0d\u76f8\u4ea4\u3002\n\n\u4e24\u4e2a\u4e09\u89d2\u5f62\u6ca1\u6709\u76f8\u4ea4\uff0c\u5219\u5fc5\u7136\u5b58\u5728\u4e24\u6761\u5185\u516c\u5207\u7ebf\uff0c\u5e76\u4e14\u4e24\u4e2a\u4e09\u89d2\u5f62\u5206\u522b\u5728\u516c\u5207\u7ebf\u4e24\u7aef\u3002\n\n\u6211\u4eec\u679a\u4e3e\u8fd9\u6761\u516c\u5207\u7ebf\u4e0a\u7684\u4e24\u4e2a\u9876\u70b9\uff0c\u4ee4\u5b83\u4eec\u5206\u522b\u4e3a\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u3002\u7136\u540e\u6c42\u51fa\u4e24\u8fb9\u5206\u522b\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u518d\u8ba1\u6570\u5373\u53ef\u3002\n\n\u5177\u4f53\u8ba1\u7b97\u65f6\uff0c\u5148\u679a\u4e3e\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u539f\u70b9\u5bf9\u5176\u4ed6\u70b9\u6781\u89d2\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u6781\u89d2\u5e8f\u679a\u4e3e\u6bcf\u4e00\u6761\u516c\u5207\u7ebf\u5373\u53ef\u3002\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6216\u8005\u53cc\u6307\u9488\u7684\u65b9\u5f0f\u5f97\u5230\u4e24\u8fb9\u5206\u522b\u6709\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2\\log n)$\u3002",
        "postTime": 1592305132,
        "uid": 267783,
        "name": "yyy\u7231\u7f16\u7a0b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1025F \u3010Disjoint Triangles\u3011"
    }
]