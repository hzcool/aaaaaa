[
    {
        "content": "\u5176\u5b9e\u4e0d\u662f\u4e00\u9053\u4ec0\u4e48\u5f88\u96be\u7684\u9898\u2026\u2026\u4f46\u6211\u5c31\u662f\u8003\u573a\u505a\u4e0d\u51fa\u6765\n\n\u9996\u5148\u53ea\u6709\u53f6\u5b50\u4e0a\u624d\u4f1a\u586b\u6570\uff0c\u5176\u4ed6\u90fd\u662f\u96f6\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u6211\u4eec\u4ee5 $h$ \u503c\u6700\u5927\u7684\u4e3a\u6839\uff0c\u90a3\u4e48\u5c31\u81f3\u5c11\u8981\u5728\u4e24\u4e2a\u5b50\u6811\u91cc\u6709 $h_{rt}$\uff0c\u5bf9\u4e8e\u5176\u4ed6\u70b9\uff0c\u53ea\u8981\u5728\u5b50\u6811\u5185\u5b58\u5728\u4e0d\u5c0f\u4e8e\u81ea\u8eab $h$ \u503c\u7684\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u904d\u5386\u5168\u6811\uff0c\u6bcf\u6b21\u5728\u5b50\u6811\u5185\u8d2a\u5fc3\u5730\u9009\u62e9\u76ee\u524d\u6700\u5927\u7684\u5df2\u586b\u7684 $h$ \u503c\uff0c\u5982\u679c\u4e0d\u5c0f\u4e8e\u81ea\u8eab $h$ \u503c\u5c31\u4e0d\u7528\u7ba1\u4e86\uff0c\u5426\u5219\u5c06\u5176\u6539\u4e3a\u81ea\u8eab $h$ \u503c\u3002\u5bf9\u4e8e\u6839\uff0c\u6211\u4eec\u9009\u62e9\u6700\u5927\u548c\u6b21\u5927\u5c31\u597d\u4e86\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define inf 1e9\nconst int maxn=2e5+10;\nconst int mod=1e9+7;\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\n#define ll long long\nint n,m,h[maxn];ll ans;\nint beg[maxn],nex[maxn<<1],to[maxn<<1],e;\ninline void add(int x,int y){\n\te++;nex[e]=beg[x];beg[x]=e;to[e]=y;\n\te++;nex[e]=beg[y];beg[y]=e;to[e]=x;\n}\ninline int dfs(int x,int fa){\n\tint Mx1=0,Mx2=0;\n\tfor(int i=beg[x];i;i=nex[i]){\n\t\tint t=to[i];\n\t\tif(t==fa)continue;\n\t\tint p=dfs(t,x);\n\t\tif(p>Mx1)Mx2=Mx1,Mx1=p;\n\t\telse if(p>Mx2)Mx2=p;\n\t}\n\tif(fa){\n\t\tans+=max(0,h[x]-Mx1);\n\t\tMx1=max(Mx1,h[x]);\n\t}else ans+=max(0,h[x]-Mx1)+max(0,h[x]-Mx2);\n\treturn Mx1;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++)h[i]=read();\n\tfor(int i=1,x,y;i<n;i++)\n\t\tx=read(),y=read(),add(x,y);\n\tint rt=1;\n\tfor(int i=2;i<=n;i++)\n\t\tif(h[rt]<h[i])rt=i;\n\tdfs(rt,0);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n\u6df1\u6df1\u5730\u611f\u5230\u81ea\u5df1\u7684\u5f31\u5c0f\u3002",
        "postTime": 1644720804,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "CF1637F"
    },
    {
        "content": "\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u628a\u5854\u90fd\u632a\u5230\u53f6\u8282\u70b9\u4e0a\uff0c\u6362\u6210\u53ea\u6709\u53f6\u8282\u70b9\u6709\u5854\u7684\u60c5\u51b5\u3002\n\n\u53d1\u73b0\u8282\u70b9 $u$ \u53ef\u4ee5\u6536\u5230\u4fe1\u53f7\u7b49\u4ef7\u4e8e\u4ee5 $u$ \u4f5c\u4e3a\u6839\u7684\u65f6\u5019\u6709\u81f3\u5c11\u4e24\u4e2a\u4e0d\u540c\u7684\u5b50\u6811\u5185\u6709\u9ad8\u5ea6 $\\ge h_u$ \u7684\u5854\u3002\n\n\u9009\u9ad8\u5ea6\u6700\u5927\u7684\u70b9\u4f5c\u4e3a\u6839\uff0c\u5219\u6839\u7684\u5b50\u6811\u91cc\u81f3\u5c11\u6709\u4e24\u4e2a\u5b50\u6811\u5185\u6709\u9ad8\u5ea6 $\\ge h_{rt}$ \u7684\u5854\u3002\n\n\u6240\u4ee5\u975e\u6839\u7684\u8282\u70b9\u53ea\u9700\u8981\u4fdd\u8bc1\u81ea\u5df1\u5b50\u6811\u5185\u6709\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684\u5854 $\\ge h_u$ \u5373\u53ef\u3002\n\n\u5982\u679c\u5f53\u524d $u$ \u5b50\u6811\u5185\u6ca1\u6709\u9ad8\u5ea6 $\\ge h_u$ \u7684\u5b50\u6811\uff0c\u90a3\u4e48\u628a\u5f53\u524d\u5b50\u6811\u5185\u6700\u9ad8\u7684\u5854\u52a0\u9ad8\u6210 $h_u$\uff0c\u5426\u5219\u4e0d\u7528\u7ba1\u3002\n\n\u6839\u8282\u70b9\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u590d\u6742\u5ea6 $O(n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=2e5+10;\n#define int long long\nint n,a[NR],rt,ans;\n#define pb push_back\nvector<int>g[NR];\n\nint dfs(int id,int fath){\n\tint v1=0,v2=0,tmp;\n\tfor(int x:g[id])\n\t\tif(x!=fath){\n\t\t\ttmp=dfs(x,id);\n\t\t\tv2=max(v2,tmp);\n\t\t\tif(v1<v2)swap(v1,v2);\n\t\t}\n\tif(id!=rt){\n\t\tans+=max(0ll,a[id]-v1);\n\t\tv1=max(v1,a[id]);\n\t\treturn v1;\n\t}\n\tans+=max(0ll,a[id]-v1)+max(0ll,a[id]-v2);\n\treturn 0; \n}\n\nsigned main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&a[i]),rt=a[rt]<a[i]?i:rt;\n\tfor(int i=1,x,y;i<n;i++)\n\t\tscanf(\"%lld%lld\",&x,&y),g[x].pb(y),g[y].pb(x);\n\tdfs(rt,0);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1660745558,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF1637F \u9898\u89e3"
    },
    {
        "content": "> CF1637F Towers\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff1a\u6211\u4eec\u603b\u4f1a\u5728\u67d0\u4e24\u4e2a\u7ecf\u8fc7 $h_{\\max}$ \u7684\u53f6\u5b50 $x, y$ \u5904\u653e\u4e0a $h_{\\max}$\uff0c\u90a3\u4e48 $x, y$ \u4e4b\u95f4\u6240\u6709\u70b9\u5747\u88ab\u8986\u76d6\u3002\u63a5\u4e0b\u6765\uff0c\u6bcf\u9009\u62e9\u4e00\u4e2a\u53f6\u5b50 $u$\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u80fd\u591f\u5229\u7528 $x$ \u6216 $y$\uff0c\u5728 $u$ \u5904\u653e\u4e00\u4e2a\u5c3d\u91cf\u5c0f\u7684\u5854\uff0c\u80fd\u591f\u8986\u76d6\u4ece $u$ \u5230\u79bb\u5b83\u6700\u8fd1\u7684\u4e00\u4e2a\u5df2\u7ecf\u88ab\u8986\u76d6\u7684\u8282\u70b9\uff08\u4e0d\u542b\uff09\u7684\u6240\u6709\u8282\u70b9\uff0c\u5176\u6743\u503c\u5373\u8fd9\u4e9b\u8282\u70b9\u7684 $h$ \u503c\u7684 $\\max$\u3002\n\n\u6839\u636e\u4e0a\u8ff0\u7406\u89e3\uff0c\u6211\u4eec\u6709\u5982\u4e0b\u8d2a\u5fc3\u7b97\u6cd5\uff1a\u8003\u8651\u5728\u4e00\u5f00\u59cb\u5728\u6240\u6709\u8282\u70b9\u5904\u90fd\u653e\u4e0a $h$\uff0c\u7136\u540e\u5c06\u6240\u6709\u6807\u8bb0 **\u4e0b\u653e**\u3002\u5177\u4f53\u5730\uff0c\u4ece\u6743\u503c\u6700\u5927\u7684\u8282\u70b9\u5f00\u59cb\uff08\u56e0\u4e3a\u5b83\u6700\u7279\u6b8a\uff0c\u8981\u6709\u4e24\u4e2a\u53f6\u5b50\u624d\u80fd\u8986\u76d6\uff0c\u5176\u5b83\u8282\u70b9\u53ea\u8981\u4e00\u4e2a\u53f6\u5b50\uff1a\u5229\u7528\u5df2\u7ecf\u653e\u4e0a $h_{\\max}$ \u7684 $x$ \u6216 $y$\uff09\u5bf9\u6574\u68f5\u6811\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u5b83\u8981\u6709 **\u4e24\u68f5** \u5b50\u6811\u5404\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u653e\u4e0a $h_{\\max}$\u3002\u5bf9\u4e8e\u5176\u5b83\u8282\u70b9 $u$\uff0c\u5b83\u53ea\u9700\u8981\u6709\u67d0\u4e2a\u5b50\u6811\u7684\u67d0\u4e2a\u53f6\u5b50\u8282\u70b9\u653e\u4e0a $\\geq h_u$ \u7684\u6743\u503c\u5373\u53ef\u3002\n\n\u56e0\u6b64\uff0c\u8bb0\u5f55 $f_u$ \u8868\u793a\u5b50\u6811 $\\max h$\u3002\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9 $v$\uff0c\u4ee4\u7b54\u6848\u52a0\u4e0a $h_v$\u3002\u5bf9\u4e8e\u975e\u6839\u8282\u70b9 $u$\uff0c\u4ee4\u7b54\u6848\u52a0\u4e0a $\\max(0, h_u - \\max\\limits_{v\\in \\mathrm{son}(u)} f_v)$\u3002\u5bf9\u4e8e\u6839\u8282\u70b9 $R$\uff0c\u4ee4\u7b54\u6848\u52a0\u4e0a $2h_R$ \u51cf\u53bb\u5176\u5b50\u8282\u70b9\u6700\u5927\u7684\u4e24\u4e2a $f$ \u503c\u3002\u6700\u7ec8\u7b54\u6848\u5373\u4e3a\u6240\u6c42\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6781\u5176\u4f18\u79c0\u7684\u7ebf\u6027\uff0c[\u4ee3\u7801](https://codeforces.com/contest/1637/submission/146185023)\u3002\n\n\u8d5b\u65f6\u505a\u6cd5\uff1a\u4ee5\u6700\u5927\u503c\u8282\u70b9\u4e3a\u6839\u5bf9\u6574\u68f5\u6811\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u6807\u8bb0\u6839\u8282\u70b9\u3002\u6309\u6743\u503c\u4ece\u5927\u5230\u5c0f\u904d\u5386\u6bcf\u4e2a\u975e\u6700\u5927\u503c\u8282\u70b9\uff0c\u82e5\u5f53\u524d\u8282\u70b9 $u$ \u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u5219\u627e\u5230\u6700\u8fd1\u7684\u88ab\u8986\u76d6\u7684\u7956\u5148 $a$\u3002\u82e5 $a$ \u7684\u8def\u5f84\u5df2\u7ecf\u5ef6\u4f38\u5230\u5176\u5b83\u5b50\u6811\u91cc\u9762\uff08\u8fd9\u610f\u5473\u7740 $u$ \u4e0d\u662f $a$ \u7684 $f$ \u503c\u6700\u5927\u7684\u5b50\u6811\uff09\uff0c\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u5c06 $u$ \u7684\u5b50\u6811\u7684\u67d0\u4e2a\u53f6\u5b50\u653e\u4e0a $h_u$\uff0c\u4ece\u800c\u8986\u76d6 $u\\to a$ \u4e0a\u7684\u6240\u6709\u8282\u70b9\uff0c\u4ee4\u5176\u6743\u503c\u4e3a $h_u$\u3002\u5426\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba9 $a$ \u7684\u8def\u5f84\u5ef6\u4f38\u5230 $u$\uff0c\u4ee4\u5176\u6743\u503c\u4e3a $a$ \u7684\u6743\u503c\u3002\u6bcf\u4e2a\u53f6\u5b50\u7684\u6743\u503c\u4e4b\u548c\u5373\u4e3a\u6240\u6c42\u3002\u6ce8\u610f\u82e5\u7956\u5148\u4e3a\u6839\u8282\u70b9\uff0c\u5219\u5fc5\u987b\u5411\u4e0b\u5ef6\u4f38 $2$ \u6761\u8def\u5f84\uff0c$u$ \u624d\u80fd\u5728\u81ea\u5df1\u7684\u5b50\u6811\u5185\u653e\u4e0a $h_u$ \u800c\u975e $h_a$\u3002[\u4ee3\u7801](https://codeforces.com/contest/1637/submission/146132848)\u3002",
        "postTime": 1644719233,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1637F Towers"
    },
    {
        "content": "\u6211\u9ad8\u5ea6\u6000\u7591\u8fd9\u662f\u4e0d\u662f `*2500` \u96be\u5ea6\u7684\u9898\uff0c\u611f\u89c9\u6211\u8fd9\u79cd\u8111\u5b50\u4e0d\u5e94\u8be5\u8fd9\u4e48\u5feb\u60f3\u51fa\u6765\u5427\uff08\n\n## \u601d\u8def\n\n\u4e00\u773c\u60f3\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u6700\u597d\u5c31\u662f\u628a\u6bcf\u4e2a\u70b9\u6db5\u76d6\u5230\u6839\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u4e0a\uff0c\u8fd9\u6837\u5e94\u8be5\u662f\u6700\u4f18\u7684\u60c5\u51b5\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u6839\u5c3d\u91cf\u653e\u6700\u5927\u7684\u3002\u53e6\u5916\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u653e\u4e00\u4e2a\u5854\uff0c\u628a\u5b83\u79fb\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u53ea\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\uff0c\u4e0d\u4f1a\u66f4\u52a3\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u975e\u6839\u8282\u70b9\uff0c\u90fd\u53ef\u4ee5\u4ece\u4ed6\u7684\u5b50\u6811\u91cc\u9762\u9009\u51fa\u4e00\u4e2a\u8282\u70b9\u628a\u5b83\u5305\u542b\u5230\u8fd9\u4e2a\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u91cc\u9762\u3002\n\n\u5c31\u6bd4\u5982\u5bf9\u4e8e\u70b9 $u$\uff0c\u4ed6\u5b50\u6811\u5185\u6709\u4e00\u4e2a\u70b9 $k$\uff0c\u5b83\u7684\u9ad8\u5ea6\u662f $h_k$\u3002\u6211\u4eec\u53ea\u9700\u8981\u8ba9 $h_k \\geq h_u$ \u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6839\u8282\u70b9\u7684 $h$ \u4e00\u5b9a\u662f\u6700\u5927\u7684\uff0c\u5df2\u7ecf\u6ee1\u8db3\u4e86\u6761\u4ef6\u3002\u6240\u4ee5\u6211\u4eec\u8d2a\u5fc3\u7684\u4ece\u5b50\u6811\u9009\u6700\u5927 $h$ \u6765\u6bd4\u8f83\u5373\u53ef\uff0c\u8fd9\u6837\u53ef\u4ee5\u6700\u5927\u5316\u51cf\u5c11\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u5f88\u7b80\u5355\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5b50\u6811\u6700\u5927\u503c\uff0c\u6bcf\u6b21\u548c\u8fd9\u4e2a\u8282\u70b9\u5224\u65ad\u4e00\u4e0b\u8c01\u66f4\u5927\u3002\u5982\u679c\u662f\u5b50\u6811\u5185\u66f4\u5927\uff0c\u90a3\u4e48\u5df2\u7ecf\u5305\u542b\u5c31\u53bb\u4e86\u5c31\u4e0d\u7528\u7ba1\u4e86\uff1b\u5426\u5219\uff0c\u5c31\u628a\u90a3\u4e2a\u8282\u70b9\u52a0\u4e0a\u8fd8\u5dee\u7684\u6570\u91cf\u3002\u4e0d\u8fc7\u8fd9\u91cc\u4e0d\u7528\u53bb\u8bb0\u5f55\u662f\u54ea\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u4e0a\u4f20\u4e4b\u540e\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u4fee\u6539\u5e76\u4e0d\u4f1a\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n\u6700\u540e\u5904\u7406\u6839\u8282\u70b9\uff0c\u6211\u4eec\u76f4\u63a5\u627e\u5230\u6700\u5927\u548c\u6b21\u5927\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u628a\u5b83\u4eec\u90fd\u6539\u6210\u6839\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\u6839\u5c31\u5305\u542b\u5728\u4e86\u4e00\u4e2a\u4ece\u4e0b\u5230\u6839\uff0c\u518d\u5411\u4e0b\u7684\u8fd9\u4e48\u4e00\u4e2a\u8def\u5f84\u4e0a\u3002\n\n\u7136\u540e\u5c31\u5904\u7406\u5b8c\u4e86\u6240\u6709\u60c5\u51b5\u3002\u6ce8\u610f\u4e00\u4e0b\u4ee3\u7801\u7ec6\u8282\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n\u6ce8\u610f\u5f00 long long\uff0c\u867d\u7136\u770b\u4e0a\u53bb\u53ef\u80fd\u4e0d\u7528\u3002~~\u522b\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684~~\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long \nusing namespace std;\nconst int MAXN=200005;\nll a[MAXN],b[MAXN],ans=0;\nvector<int> E[MAXN];\nvoid dfs(int u,int fa){\n\tll mx1=0,mx2=0;\n\tfor(int i=0;i<E[u].size();i++){\n\t\tint v=E[u][i];\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t\tif(b[v]>mx1) mx2=mx1,mx1=b[v]; // \u66f4\u65b0\u6700\u5927\u503c\u3001\u6b21\u5927\u503c \n\t\telse if(b[v]>mx2) mx2=b[v];\n\t}\n\tb[u]=max(mx1,a[u]); // \u6570\u7ec4\u8bb0\u5f55\u65b9\u4fbf\u4e0a\u4f20\u6700\u5927\u503c \n\tif(a[u]>mx1) ans+=(a[u]-mx1); // \u5982\u679c a[u] \u6bd4\u5b50\u6811\u5185\u6700\u5927\u7684\u8fd8\u5927\uff0c\u8bf4\u660e\u9700\u8981\u8865 \n\tif(fa==-1 && a[u]>mx2) ans+=(a[u]-mx2); // \u6839\u8282\u70b9\u65f6 fa=-1\uff0c\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u7528\u6b21\u5927\u503c\u66f4\u65b0\u7b54\u6848 \n}\nint main(){\n\tint n,rt=0; cin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t\tif(a[i]>a[rt]) rt=i; // \u627e\u5230 a[i] \u6700\u5927\u7684 i \u4f5c\u4e3a\u6839\u8282\u70b9 \n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint u,v; cin>>u>>v;\n\t\tE[u].push_back(v);\n\t\tE[v].push_back(u);\n\t}\n\tdfs(rt,-1);\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n~~\u53e6\uff1a50 \u7d2b\u9898\u796d\uff0c\u83dc\u6b7b\u4e86/kk\u3002~~",
        "postTime": 1660897926,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "CF1637F \u9898\u89e3"
    },
    {
        "content": "### $\\text{Difficulty : 2500}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u8003\u8651\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u53d1\u73b0\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u65b9\u6848\uff0c\u4f7f\u5f97\u6240\u6709\u9009\u62e9\u7684\u70b9\u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\u3002\u5047\u8bbe\u6709\u4e00\u4e2a\u70b9\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\u800c\u88ab\u9009\u4e2d\u5efa\u7b51\u4e86\u4e00\u4e2a\u4fe1\u53f7\u5854\uff0c\u5c06\u8fd9\u4e2a\u4fe1\u53f7\u5854\u79fb\u52a8\u5230\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u4e0a\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u52a3\u3002\n\n\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4ee5\u5916\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\u6bd4\u8fd9\u4e2a\u8282\u70b9\u7684\u8981\u6c42\u66f4\u9ad8\uff0c\u5219\u4e00\u5b9a\u53ef\u4ee5\u7528\u90a3\u4e2a\u8282\u70b9\u6240\u7528\u5230\u7684\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u548c\u8fd9\u4e2a\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u67d0\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u8fdb\u884c\u8986\u76d6\u3002\u6b64\u65f6\u5c31\u80fd\u60f3\u5230\u5c06\u8981\u6c42\u6700\u5927\u7684\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u8fd9\u6837\u6bcf\u4e00\u4e2a\u975e\u6839\u8282\u70b9\u90fd\u4e00\u5b9a\u4f1a\u5728\u5b50\u6811\u4e2d\u627e\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u5b50\u6811\u5916\u4e5f\u4e00\u5b9a\u6709\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u9009\u62e9\u3002\n\n\u66f4\u5177\u4f53\u5730\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u975e\u6839\u8282\u70b9\uff0c\u627e\u51fa\u5b50\u6811\u4e2d\u6700\u5927\u7684\u4fe1\u53f7\u5854\uff0c\u5c06\u8fd9\u4e2a\u4fe1\u53f7\u5854\u8865\u81f3\u5f53\u524d\u8981\u6c42\uff0c\u5982\u679c\u5df2\u7ecf\u8fbe\u5230\u8981\u6c42\uff0c\u4e0d\u4f5c\u5904\u7406\u3002\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u8003\u8651\u6700\u5927\u7684\u548c\u6b21\u5927\u7684\u4fe1\u53f7\u5854\u8fdb\u884c\u8865\u8db3\u3002\n\n\u6570\u636e\u8303\u56f4\u8f83\u5927\uff0c\u9700\u8981\u7528 $\\text{long long}$ \u8fdb\u884c\u5b58\u50a8\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int MAXN=400005;\nint n,h[MAXN],head[MAXN],nxt[MAXN],num[MAXN],tot,x,y,maxn,maxi,ans;\nvoid add(int x,int y){\n\tnxt[++tot]=head[x];\n\thead[x]=tot;\n\tnum[tot]=y;\n}\nint dfs(int now,int fa){\n\tint fi=0,sc=0;\n\tfor(int i=head[now];i;i=nxt[i]){\n\t\tif(num[i]==fa)continue;\n\t\tint p=dfs(num[i],now);\n\t\tif(p>fi){sc=fi;fi=p;}\n\t\telse if(p>sc)sc=p;\n\t}\n\tif(fa==0)ans+=max(0ll,h[now]-fi)+max(0ll,h[now]-sc);\n\telse ans+=max(0ll,h[now]-fi);\n\treturn max(h[now],fi);\n}\nsigned main(){\n\tscanf(\"%I64d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%I64d\",&h[i]);\n\t\tif(h[i]>maxn){\n\t\t\tmaxn=h[i];\n\t\t\tmaxi=i;\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%I64d%I64d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(maxi,0);\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1651504514,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF1637F Towers \u9898\u89e3"
    },
    {
        "content": "**\u9898\u76ee\u4f20\u9001\u95e8**\uff1a[CF1637F](https://codeforces.com/problemset/problem/1637/F)\n\n### \u524d\u8a00\n\n\u4ee3\u7801\u4e0d\u96be\u5199\uff0c\u4f46\u8981\u628a\u6027\u8d28\u6293\u51c6\uff0c\u60f3\u6e05\u695a\uff0c\u96be\uff08~~\u5f53\u7136\u4e3b\u8981\u539f\u56e0\u662f\u6211\u592a\u83dc\u4e86~~\uff09\u3002\n\n\u5148\u601d\u8003\u4e24\u4e2a\u95ee\u9898\uff1a\n\n- \u5f53\u6240\u6709\u70b9\u7684 $h_i$ \u90fd\u4e3a $1$ \u65f6\uff0c\u600e\u4e48\u505a\uff1f\n\n- \u5047\u8bbe\u8fd9\u662f\u4e00\u68f5\u6709\u6839\u6811\uff0c\u8003\u8651\u4e00\u68f5\u5b50\u6811\u7684\u6839\u5728 $v_1$ \u5230 $v_2$ \u7684\u8def\u5f84\u4e0a\uff0c\u4e24\u4e2a\u70b9 $v_1$\u3001$v_2$ \u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\uff1f\n\n### \u5206\u6790\n\n**\u6027\u8d28 $1$**\uff1a\u6700\u4f18\u7b54\u6848\u4e00\u5b9a\u662f\u5728\u6240\u6709\u53f6\u5b50\uff08\u4e5f\u5c31\u662f\u5ea6\u6570\u4e3a $1$ \u7684\u8282\u70b9\uff09\u4e0a\u82b1\u94b1\u3002\n\n**\u53e3\u80e1\u8bc1\u660e**\uff1a\n- \u8003\u8651\u4e00\u4e2a\u53f6\u7ed3\u70b9 $v$\uff0c\u9664\u4e86\u5c06 $v$ \u4f5c\u4e3a\u4e00\u4e2a\u7aef\u70b9\u7684\u8def\u5f84\uff0c\u5176\u4ed6\u8def\u5f84\u90fd\u4e0d\u80fd\u8986\u76d6 $v$ \u8fd9\u4e2a\u70b9\u3002\u6240\u4ee5\u6240\u6709\u53f6\u7ed3\u70b9\u5fc5\u987b\u82b1\u94b1\u3002\n\n- \u663e\u7136\uff0c\u6bcf\u4e00\u4e2a\u53f6\u7ed3\u70b9\u5230\u5176\u4ed6\u53f6\u7ed3\u70b9\u6784\u6210\u7684\u8def\u5f84\u4e00\u5b9a\u80fd\u5c06\u6574\u68f5\u6811\u8986\u76d6\u3002\u6240\u4ee5\u5728\u975e\u53f6\u8282\u70b9\u82b1\u94b1\uff0c\u4e00\u5b9a\u53ef\u4ee5\u88ab\u5728\u53f6\u7ed3\u70b9\u82b1\u94b1\u65f6\u66ff\u4ee3\uff0c\u5373\u4ec5\u5bf9\u53f6\u7ed3\u70b9\u64cd\u4f5c\u4e0d\u4f1a\u52a3\u4e8e\u5bf9\u975e\u53f6\u7ed3\u70b9\u64cd\u4f5c\u3002\n\n**\u6027\u8d28 $2$**\uff1a\u5f53\u6211\u4eec\u786e\u5b9a\u4e86\u6811\u7684\u6839\uff0c\u8003\u8651\u8986\u76d6\u4e00\u68f5\u5b50\u6811\u7684\u6839\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u662f\u5b83\u7684\u5b50\u5b59\u3002\uff08~~\u6bd4\u8f83\u663e\u7136\uff0c\u4e0d\u53e3\u80e1\u8bc1\u660e\u4e86~~\uff09\n\n\u6839\u636e\u4e24\u4e2a\u6027\u8d28\uff0c\u5c31\u80fd\u6709\u4e00\u4e2a**\u91cd\u8981\u7684\u601d\u8def**\uff1a\n\n1. \u82e5 $h_k$ \u6700\u5927\uff0c\u5c31\u5c06 $k$ \u4f5c\u4e3a\u6811\u6839\u3002\n\n2. \u5176\u6b21\u786e\u5b9a\u6bcf\u4e00\u4e2a\u8282\u70b9\u5b50\u6811\u5185\u7684\u7aef\u70b9 $v$\u3002\n\n\u56e0\u4e3a\u8986\u76d6\u6839\u7684\u4e24\u4e2a\u7aef\u70b9\u4e00\u5b9a\u5728\u4e24\u68f5\u4e0d\u540c\u7684\u5b50\u6811\u5185\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u90fd\u53ef\u4ee5\u5229\u7528 $v$ \u548c\u8986\u76d6 $k$ \u7684\u4e24\u4e2a\u7aef\u70b9\u4e2d\u7684\u4e00\u4e2a\u5339\u914d\uff0c\u8fbe\u5230\u8986\u76d6\u8fd9\u4e2a\u5b50\u8282\u70b9\u7684\u76ee\u7684\uff08\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u767d\u5ad6\u6839\u7684\u7aef\u70b9\uff09\u3002\n\n### \u5b9e\u73b0\n**\u786e\u5b9a\u8282\u70b9 $x$ \u5b50\u6811\u5185\u7684\u7aef\u70b9**\uff1a\u5728 $x$ \u7684\u5b50\u6811\u4e2d\u8d2a\u5fc3\u5730\u9009\u76ee\u524d\u82b1\u94b1\u6700\u591a\u7684\u8282\u70b9\u3002\u5982\u679c\u82b1\u7684\u94b1\u5c0f\u4e8e $h_x$\uff0c\u628a\u8d39\u7528\u8865\u4e0a\uff1b\u5df2\u7ecf\u5927\u4e8e\uff0c\u5219\u4e0d\u7ba1\u3002\n\n**\u786e\u5b9a\u6839\u7684\u4e24\u4e2a\u7aef\u70b9**\uff1a\u8d2a\u5fc3\u627e\u5b50\u6811\u4e2d\u82b1\u94b1\u6700\u591a\u548c\u6b21\u591a\u7684\u8282\u70b9\uff0c\u540c\u4e0a\u9762\u7c7b\u4f3c\u5904\u7406\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 200005;\nlong long ans;\nint n,h[N],rt,tot,head[N],ver[2*N],Next[2*N];\nint rd(){\n\tint x = 0;char ch = getchar();\n\twhile(ch < '0' || ch > '9')ch = getchar();\n\twhile(ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n\treturn x;\n}\nvoid add(int x,int y){\n\ttot++;\n\tver[tot] = y;\n\tNext[tot] = head[x];\n\thead[x] = tot;\n}\nint dfs(int fa,int x){\n\tint Mx1 = 0,Mx2 = 0,Mxy;//Mx1 \u82b1\u94b1\u6700\u591a\u591a\u5c11\uff0cMx2 \u82b1\u94b1\u6b21\u591a\u591a\u5c11\uff0cMxy \u5b50\u6811\u82b1\u94b1\u6700\u591a\u591a\u5c11\n\tfor(int i = head[x];i;i = Next[i]){\n\t\tint y = ver[i];\n\t\tif(y == fa)continue;\n\t\tMxy = dfs(x,y);\n\t\tif(Mxy > Mx1)\n\t\t\tMx2 = Mx1,Mx1 = Mxy;\n\t\telse if(Mxy > Mx2)\n\t\t\tMx2 = Mxy;\n\t}\n\tif(fa){//\u66f4\u65b0 and \u4ea4\u94b1\n\t\tans += max(0,h[x] - Mx1);\n\t\tMx1 = max(Mx1,h[x]);\n\t}\n\telse{\n\t\tans += h[x] - Mx1 + h[x] - Mx2;\n\t\tMx1 = h[x];\n\t}\n\treturn Mx1;\n}\nint main(){\n\tn = rd();\n\tfor(int i = 1;i <= n;i++){\n\t\th[i] = rd();\n\t\tif(!rt || h[i] > h[rt])\n\t\t\trt = i;//\u9009 h[i] \u6700\u5927\u7684\u4e3a\u6839\n\t}\n\tfor(int i = 1;i < n;i++){\n\t\tint x = rd(),y = rd();\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdfs(0,rt);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1646890590,
        "uid": 400072,
        "name": "sprads",
        "ccfLevel": 7,
        "title": "CF1637F Towers \u9898\u89e3"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u7b2c $i$ \u4e2a\u70b9\u6709\u4e00\u9ad8\u5ea6 $h_i$ \u3002\u4f60\u53ef\u4ee5\u5728\u4efb\u610f\u4e00\u4e9b\u7ed3\u70b9\u4e0a\u5efa\u4fe1\u53f7\u5854\uff0c\u9ad8\u5ea6\u968f\u610f\u3002\u7ed3\u70b9 $i$ \u6709\u4fe1\u53f7\u4e14\u5f53 $i$ \u5728 $u, v$ \u7684\u8def\u5f84\u4e0a\uff0c $u, v$ \u5206\u522b\u6709\u4e24\u5ea7\u4fe1\u53f7\u5854 $e_u, e_v$ \uff0c\u6ee1\u8db3 $\\min(e_u, e_v) \\ge h_i$ \u3002\u5efa\u9ad8\u5ea6\u4e3a $x$ \u7684\u4fe1\u53f7\u5854\u82b1 $x$ \u5143\uff0c\u95ee\u6700\u5c11\u5f97\u82b1\u591a\u5c11\u94b1\u4f7f\u5f97\u6240\u6709\u7ed3\u70b9\u90fd\u80fd\u6709\u4fe1\u53f7\u3002\n\n\u663e\u7136\uff0c\u5c06\u4fe1\u53f7\u5854\u5efa\u5728\u53f6\u5b50\u7ed3\u70b9\u6700\u5408\u7b97\u3002\u8bb0 $h_x$ \u4e3a\u6240\u6709\u7ed3\u70b9\u4e2d\u9ad8\u5ea6\u6700\u9ad8\u7684\u3002\u4e0d\u59a8\u5c06 $x$ \u8bbe\u4e3a\u6811\u6839\uff0c\u7136\u540e\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u5b50\u6811\u4e2d\u627e\u4e24\u4e2a\u53f6\u7ed3\u70b9 $u, v$ \uff0c\u9020\u4e24\u4e2a\u9ad8\u5ea6\u4e3a $h_x$ \u7684\u4fe1\u53f7\u5854\u3002\n\n\u5047\u5b9a\u6211\u4eec\u5148\u4e0d\u7ba1\u6839\u7ed3\u70b9\u600e\u4e48\u7b97\uff0c\u8003\u8651\u9664\u4e86\u6839\u7ed3\u70b9\u4e4b\u5916\u7684\u7ed3\u70b9\u600e\u4e48\u7b97\u3002\u4ece\u6811\u6839\u5f00\u59cb dfs \uff0c\u5230\u4e86\u7ed3\u70b9 $i$ \uff0c\u5148 dfs $i$ \u7684\u5b50\u6811\uff0c\u6c42\u51fa\u5b50\u6811\u4e4b\u4e2d\u9ad8\u5ea6\u6700\u9ad8\u7684\u4fe1\u53f7\u5854\uff0c\u9ad8\u5ea6\u4e3a $mx$ \u3002\n\n\u8fd9\u4e2a\u4fe1\u53f7\u5854\u53ea\u662f\u8ba9\u4e00\u4e2a\u5c40\u90e8\u6709\u4e86\u4fe1\u53f7\u3002\u4e5f\u5c31\u662f\u8bf4\u6811\u6839\u7684\u5b50\u6811\u4e2d\u6709\u4e00\u5ea7\u4f4d\u7f6e\u4e0d\u540c\u4e8e\u8fd9\u4e2a\u4fe1\u53f7\u5854\u7684\u4fe1\u53f7\u5854\uff0c\u201c\u4e0d\u540c\u4e8e\u8fd9\u4e2a\u4fe1\u53f7\u5854\u7684\u4fe1\u53f7\u5854\u201d\u7528\u4e8e\u7ed9\u6811\u6839\u4fe1\u53f7\uff0c\u7528\u4e8e\u7ed9\u6811\u6839\u4fe1\u53f7\u7684\u4fe1\u53f7\u5854\u9ad8\u5ea6\u4e00\u5b9a\u4e0d\u4f4e\u4e8e $h_i$ \u3002\u5982\u679c $h_i \\le mx$ \u5219\u4e0d\u9700\u8981\u5728 $h_i$ \u4e0a\u5efa\u4fe1\u53f7\u5854\uff0c\u7ed3\u70b9 $i$ \u5c31\u6709\u4fe1\u53f7\u3002\u5426\u5219\u5c06\u8fd9\u4e2a\u5c40\u90e8\u4fe1\u53f7\u5854\u9ad8\u5ea6\u589e\u52a0 $h_i - mx$ \uff0c\u8fd9\u6837\u7ed3\u70b9 $i$ \u5c31\u6709\u4e86\u4fe1\u53f7\u3002\n\n\u6839\u7ed3\u70b9\u5148 dfs \u5b50\u6811\uff0c\u7136\u540e\u77e5\u9053\u4e86\u4e0d\u540c\u5b50\u6811\u4e2d\u7684\u5df2\u7ecf\u5efa\u597d\u7684\u6700\u9ad8\u4fe1\u53f7\u5854\u3002\u9009\u51fa\u6700\u9ad8\u548c\u6b21\u9ad8\u7684\u4fe1\u53f7\u5854\uff0c\u5c06\u5b83\u4eec\u52a0\u9ad8\u5230 $h_{\\text{\u6839\u7ed3\u70b9}}$ \uff0c\u6839\u7ed3\u70b9\u4e5f\u6709\u4e86\u4fe1\u53f7\u3002\n\n```cpp\n//\n// Created by Cat-shao on 2022/2/12.\n//\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAX_N = 2e5 + 5;\n\nvector<int> graph[MAX_N];\nint h[MAX_N];\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int n, x, y;\n    cin >> n;\n    for_each(h + 1, h + n + 1, [](int &x){ cin >> x; });\n    for (int i = 1; i <= n - 1; ++i) {\n        cin >> x >> y;\n        graph[x].push_back(y);\n        graph[y].push_back(x);\n    }\n    int rt = max_element(h + 1, h + n + 1) - h;\n    long long ans = 0;\n    function<int(int, int)> dfs = [&](int cur, int par) {\n        int mx1 = 0, mx2 = 0;\n        for (const auto e : graph[cur]) {\n            if (e != par) {\n                int temp = dfs(e, cur);\n                if (temp > mx1) {\n                    swap(mx1, temp);\n                }\n                if (temp > mx2) {\n                    swap(mx2, temp);\n                }\n            }\n        }\n        if (par) {\n            int delta = max(h[cur] - mx1, 0);\n            ans += delta;\n            mx1 += delta;\n        } else {\n            ans += 2 * h[cur] - mx1 - mx2;\n        }\n        return mx1;\n    };\n    dfs(rt, 0);\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1645694702,
        "uid": 234011,
        "name": "Cat_shao",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011Towers"
    },
    {
        "content": "\u4e0b\u9762\u7684\u8bb2\u89e3\u9ed8\u8ba4\u770b\u8fc7\u9898\u4e86\u3002\n\n------------\n\u9996\u5148\u5148\u786e\u5b9a\u6839\u8282\u70b9 $root$\u3002\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u5b9a\u7136\u6709\u4e24\u4e2a\u4e0d\u5728\u540c\u4e00\u4e2a $root$ \u7684\u513f\u5b50\u7684\u5b50\u6811\u91cc\u7684\u70b9\uff0c$p$ \u548c $q$ \u4f7f\u5f97\u5b83\u4eec\u7684 $e$ \u503c\u8981\u5927\u4e8e\u7b49\u4e8e $h_{root}$\uff0c\u5e76\u4e14\u53d6\u7b49\u65f6\u6700\u4f18\u3002\u6240\u4ee5\u6839\u8282\u70b9\u5e94\u4e3a\u6240\u6709\u70b9\u4e2d\u9ad8\u5ea6\u6700\u9ad8\u7684\u70b9\u3002\u5426\u5219\u5982\u679c\u53e6\u4e00\u4e2a\u9ad8\u5ea6\u6bd4\u5b83\u4f4e\u7684\u70b9\u662f\u6839\u8282\u70b9\uff0c\u90a3\u4e48 $p$ \u548c $q$ \u7684 $e$ \u503c\u5c31\u53ef\u80fd\u4f1a\u88ab\u5176\u5b83\u9ad8\u5ea6\u6bd4\u6839\u8282\u70b9\u9ad8\u7684\u70b9\u6240\u63d0\u9ad8\uff0c\u4e0d\u518d\u53d6\u7b49\uff0c\u53d8\u5f97\u4e0d\u4f18\u3002\n\n\u786e\u5b9a\u597d\u6839\u8282\u70b9\u540e\u5c31\u4f1a\u6bd4\u8f83\u597d\u505a\u4e00\u4e9b\u3002\u9996\u5148\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u9009\u53d6\u7684\u70b9 $p$ \u548c $q$ \u5e94\u8be5\u662f\u4e0d\u5904\u4e8e\u540c\u4e00\u513f\u5b50\u7684\u5b50\u6811\u91cc $e$ \u503c\u6700\u5927\u548c\u6b21\u5927\u7684\u70b9\uff0c\u5e76\u5c06\u8fd9\u4e24\u4e2a\u70b9\u7684 $e$ \u503c \u63d0\u5347\u5230 $h_{root}$\uff08\u5982\u679c\u539f\u672c\u5c0f\u4e8e $h_{root}$ \u7684\u8bdd\uff09\u3002\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u5c31\u5229\u7528\u539f\u672c\u5efa\u5854\u7684\u70b9\uff0c\u5e76\u9009\u53d6\u4e24\u4e2a $e$ \u503c\u4e0e $h_{root}$ \u6700\u63a5\u8fd1\u6216\u8d85\u8fc7\u5b83\u7684\u70b9\uff0c\u5c3d\u53ef\u80fd\u6700\u5c0f\u5316\u82b1\u8d39\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u662f\u6839\u8282\u70b9\u7684\u70b9 $y$\uff0c\u6211\u4eec\u53ea\u9700\u9009\u62e9\u4e00\u4e2a\u5176\u5b50\u6811\u4e2d\u7684\u70b9 $z$\uff0c\u4f7f\u5f97 $e_z\\geq h_y$\u3002\u56e0\u4e3a\u5728\u8fd9\u91cc\u53ef\u4ee5\u4ee4 $u=z,x=y,v=p$ \u6216 $q$\uff0c\u5c31\u4e00\u5b9a\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u3002\u56e0\u4e3a $e_p,e_q\\geq h_{root}$ \u800c $h_{root}$ \u662f\u6240\u6709\u70b9\u4e2d\u9ad8\u5ea6\u6700\u9ad8\u7684\u70b9\uff0c\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e $h_y$\u3002$z$ \u7684\u6700\u4f18\u9009\u62e9\u5c31\u662f $y$ \u5b50\u6811\u4e2d $e$ \u503c\u6700\u5927\u7684\u70b9\uff0c\u539f\u56e0\u548c\u524d\u9762\u9009 $p$ \u548c $q$ \u65f6\u540c\u7406\u3002\n\n\u6ce8\u610f\u4e00\u70b9\uff0c\u53f6\u8282\u70b9\u663e\u7136\u5fc5\u987b\u5efa $e_i=h_i$ \u7684\u5854\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u4e2a\u5b50\u6811\u91cc\u4e0d\u4f1a\u6ca1\u6709\u5efa\u5854\u7684\u70b9\u3002\u5728\u4ee3\u7801\u91cc\u53ef\u4ee5\u76f4\u63a5\u548c\u5176\u5b83\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u7684\u5224\u65ad\u60c5\u51b5\u5408\u5e76\u8d77\u6765\u3002\n\n------------\n### \u4ee3\u7801\n###### \u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\n```cpp\n\n\n#include <cstdio>\n#include <cstring>\n#define ll long long\n\nusing namespace std;\n\nint N;\nint H[200009];\nint h[200009];\nint nxt[400009];\nint to[400009];\nint idx;\nll res;\n\ninline void Add (int a, int b) {\n    nxt[idx] = h[a], to[idx] = b, h[a] = idx++;\n}\n\nvoid In () {\n    int a;\n    int b;\n\n    memset(h, -1, sizeof(h));\n    scanf(\"%d\", &N);\n    for (int i = 1; i <= N; i++) scanf(\"%d\", &H[i]);\n    for (int i = 1; i < N; i++) scanf(\"%d%d\", &a, &b), Add(a, b), Add(b, a);\n}\n\ninline ll Max (ll a, ll b) {\n    return a > b ? a : b;\n}\n\nint Dfs (int x, int p) {\n    int v;\n    int t;\n    int mx1 = 0; //\u6700\u5927\u503c\n    int mx2 = 0; //\u6b21\u5927\u503c\n\n    for (int e = h[x]; ~e; e = nxt[e]) {\n        v = to[e];\n        if (v == p) continue;\n        t = Dfs(v, x);\n        if (t >= mx1) mx2 = mx1, mx1 = t;\n        else if (t > mx2) mx2 = t;\n    }\n    if (p) res += Max(0, H[x] - mx1), mx1 = mx1 > H[x] ? mx1 : H[x];\n    //\u5982\u679c\u4e0d\u662f\u6839\u8282\u70b9\u5219\u53ea\u9700\u9009\u6700\u5927\u503c\uff0c\u6ce8\u610f\u6700\u540e\u8981\u66f4\u65b0 mx1\uff08\u5982\u679c\u539f\u672c\u5927\u4e8e\u5c31\u4e0d\u7528\u518d\u589e\u52a0\uff09\uff0c\u56e0\u4e3a\u518d\u5f80\u4e0a\u7684\u8282\u70b9\u4e5f\u8981\u7528\u5230\u5b83\u3002\n    //\u5bf9\u4e8e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0cmx1=0\u3002\u5728\u8fd9\u91cc\u5c31\u4f1a\u76f4\u63a5\u628a mx1 \u63d0\u5230 H[x]\uff0c\u540c\u65f6\u66f4\u65b0\u7b54\u6848\n    else res += (Max(0, H[x] - mx1) + Max(0, H[x] - mx2));\n    //\u6839\u8282\u70b9\u8fd9\u91cc\u4e0d\u9700\u8981\u66f4\u65b0 mx1\u3002\u56e0\u4e3a\u518d\u5f80\u4e0a\u5c31\u6ca1\u6709\u8282\u70b9\u4e86\n    return mx1;\n}\n\nvoid Solve () {\n    int x = 0;\n\n    for (int i = 1; i <= N; i++)\n        if (H[x] < H[i]) x = i; //\u9ad8\u5ea6\u6700\u9ad8\u7684\u70b9\u8bbe\u4e3a\u6839\u8282\u70b9\n    Dfs(x, 0);\n}\n\nvoid Out () {\n    printf(\"%lld\\n\", res);\n}\n\nint main () {\n\n    In();\n    Solve();\n    Out();\n\n    return 0;\n}\n```",
        "postTime": 1644845714,
        "uid": 224532,
        "name": "lyxeason",
        "ccfLevel": 5,
        "title": "CF1637F Towers \u9898\u89e3"
    },
    {
        "content": "\n[\u5728\u8fd9\u91cc\u4f53\u9a8c\u66f4\u4f73](https://hylwxqwq.github.io/post/cf1637-f/)\n\n---\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5982\u679c\u5047\u5b9a\u4e86\u6811\u7684\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u5fc5\u987b\u653e\u4e00\u4e2a tower\u3002\n\n\u7136\u540e\u53c8\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5728\u5047\u5b9a\u4e86\u6839\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u8282\u70b9 $u$ \u662f\u6709\u4fe1\u53f7\u7684\u7684\uff0c\u90a3\u4e48 $u$ \u7684\u5b50\u6811\u5f53\u4e2d\u5fc5\u7136\u6709\u81f3\u5c11\u4e00\u4e2a tower\uff0c\u6ee1\u8db3\u8fd9\u4e2a tower \u7684 $e\\ge h_u$ \u3002\n\n\u4e0a\u9762\u7684\u7ed3\u8bba\u5168\u90e8\u57fa\u4e8e \u201c\u6839\u8282\u70b9\u5047\u5b9a\u201d \u7684\u60c5\u51b5\u3002\n\n\u4f46\u662f\u672c\u9898\u7ed9\u51fa\u7684\u660e\u663e\u662f\u4e00\u9897\u65e0\u6839\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u5f88\u81ea\u7136\u7684\u60f3\u5230\u4e86\u6362\u6839DP\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbe $f_u$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u7684\u65f6\u5019\uff0c\u4f7f\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53d8\u6210\u6709\u4fe1\u53f7\u7684\u8282\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u6362\u6839\u4e0d\u662f\u5f88\u597d\u5199\u3002\n\n\u53c8\u53d1\u73b0\uff0c\u5982\u679c\u8ba9 $h$ \u6700\u5927\u7684\u90a3\u4e00\u4e2a\uff08\u6216\u8005\u5176\u4e2d\u7684\u4e00\u4e2a\uff09\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u5f80\u4e0b\u53d6\u503c\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u56e0\u4e3a\u4f60\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u8ba9\u6bcf\u4e2a\u5b50\u6811\u5f53\u4e2d\u90fd\u6709\u4e00\u4e2a $e$ \u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u5b50\u6811\u7684\u6839\u7684 $h$ \u7684 tower\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u53ea\u9700\u8981\u8ba9\u5b83\u7684\u4e24\u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u5b50\u6811\u5f53\u4e2d\u6709\u4e24\u4e2a tower \u7684 $e=h_{root}$ \u5373\u53ef\u3002 \n\n\u5982\u679c\u8bf4\u8fd9\u4e2a $h$ \u6700\u5927\u7684\u70b9\u4e0d\u662f $root$ \uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u5728\u67d0\u4e2a\u5b50\u6811\u91cc\u9762\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5b50\u6811\u91cc\u9700\u8981\u591a\u653e\u51e0\u4e2a $e=h_{max}$ \u7684 tower\uff0c\u660e\u663e\u4e0d\u662f\u6700\u4f18\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u76f4\u63a5\u4ee4\u8fd9\u4e2a $h$ \u6700\u5927\u7684\u70b9\u4e3a $root$ \uff0c\u7136\u540e\u9012\u5f52\u4e0b\u53bb\u5904\u7406\u5c31\u884c\u4e86\u3002\n\n```cpp\n/*\n * @Author: black_trees <black_trees@foxmail.com>\n * @Date: 2022-02-13 09:32:23\n * @Last Modified by: black_trees <black_trees@foxmail.com>\n * @Last Modified time: 2022-02-13 10:21:40\n */\n\n/*\n * READ THIS BEFORE YOU WRITE YOUR CODE\n * ====================================\n * @ Read the description carefully!\n * @ Pay attention to the data domain.\n * @ Keep calm.\n * @ Write down your thought on your draft.\n * @ Keep your mind clear.\n * @ Stabilize the coding speed.\n * ====================================\n * READ THIS AGAIN BEFORE YOU START !!!\n */\n\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\nconstexpr int inf=1e18+1,si=2e5+10;\nint n,height[si],res;\nstruct Edge{\n\tint head,ver,Next;\n}e[si<<1]; int tot=0,root=0,rt[si];\ninline void add(int u,int v){ e[++tot].ver=v,e[tot].Next=e[u].head,e[u].head=tot; }\ninline pair<int,int> dfs(int u,int fa){\n\tint max1,max2; max1=max2=0;\n\tfor(register int i=e[u].head;i;i=e[i].Next){\n\t\tint v=e[i].ver; if(v==fa) continue;\n\t\tint now=dfs(v,u).first; if(now>max1) max2=max(max2,max1),max1=now; else max2=max(max2,now);\n\t} if(fa!=0) res+=max(height[u]-max1,0ll),max1+=max(height[u]-max1,0ll);\n\telse res+=max(height[u]-max1,0ll)+max(height[u]-max2,0ll); return make_pair(max1,max2);\n}\nsigned main(){\n\tscanf(\"%lld\",&n); for(register int i=1;i<=n;++i) scanf(\"%lld\",&height[i]);\n\tfor(register int i=1,u,v;i<n;++i) scanf(\"%lld%lld\",&u,&v),add(u,v),add(v,u);\n\tfor(register int i=1;i<=n;++i) root=height[i]>height[root]?i:root; dfs(root,0); return printf(\"%lld\\n\",res),0; // \n}\n\n```\n\n\n\n",
        "postTime": 1644723763,
        "uid": 304550,
        "name": "black_trees",
        "ccfLevel": 0,
        "title": "CF1637F"
    },
    {
        "content": "# Solution\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u731c\u6d4b\u8fd9\u9898\u7684\u89e3\u6cd5\u662f\u8d2a\u5fc3\u3002  \n\u9898\u76ee\u8981\u6c42\u7684\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $x$\uff0c\u90fd\u6709\u4e00\u6761\u7a7f\u8fc7\u5b83\u7684\u8def\u5f84 $(u,v)$ \u6ee1\u8db3 $u!=v$ \u4e14 $u,v$ \u4e0a\u7684\u5854\u5927\u4e8e $h_x$\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5982\u679c $u,v$ \u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u6211\u4eec\u5c06 $u,v$ \u90fd\u5206\u522b\u79fb\u52a8\u5230\u53f6\u5b50\u8282\u70b9\u5fc5\u7136\u4e0d\u52a3\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u51fa\u4e86\u7b2c\u4e00\u4e2a\u7ed3\u8bba\uff1a\u6bcf\u4e2a\u5854\u5fc5\u7136\u662f\u653e\u5728\u53f6\u5b50\u8282\u70b9\u3002  \n\u63a5\u7740\u6211\u4eec\u5c06\u6839\u8282\u70b9\u8bbe\u4e3a\u70b9\u6743\u6700\u5927\u7684\u70b9\uff0c\u5e76\u6309\u7167\u70b9\u6743\u4ece\u5927\u5230\u5c0f\u8003\u8651\u6bcf\u4e2a\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0\u9664\u4e86\u7b2c\u4e00\u4e2a\u70b9\u8981\u653e\u4e24\u5ea7\u5854\uff0c\u5176\u4ed6\u6bcf\u4e2a\u70b9\u90fd\u6700\u591a\u53ea\u9700\u518d\u653e\u4e00\u5ea7\u5854\u5373\u53ef\uff0c\u5e76\u4e14\u6bcf\u5ea7\u5854\u90fd\u53ef\u4ee5\u5c06\u5854\u6240\u5728\u7684\u8282\u70b9\u5230\u6839\u8282\u70b9\u8fd9\u4e00\u6761\u94fe\u4e0a\u7684\u8fd8\u672a\u5220\u9664\u7684\u70b9\u5220\u9664\u3002\u8fd9\u6837\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u8f6c\u5316\u4e3a\u4e86\u6bcf\u6b21\u627e\u4e00\u4e2a\u6839\u8282\u70b9\u653e\u5854\u3002  \n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u524d\u8282\u70b9\u6bcf\u6b21\u9009\u62e9\u8fdb\u5165\u5b50\u6811\u4e2d\u6700\u5927\u70b9\u6743\u6700\u5927\u7684\u513f\u5b50\u8282\u70b9\uff0c\u4e00\u76f4\u8d70\u5230\u6839\u5373\u53ef\uff0c\u8bc1\u660e\u4e5f\u5f88\u7b80\u5355\uff0c\u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u5219\u53d1\u73b0\u4ea4\u6362\u540e\u5fc5\u7136\u66f4\u4f18\u3002  \n\u6bcf\u6b21\u9009\u5b8c\u6839\u8282\u70b9\u540e\uff0c\u76f4\u63a5\u4e00\u8def\u5411\u4e0a\u5220\u70b9  \u5373\u53ef\u3002  \n\u590d\u6742\u5ea6 $O(N\\log_2N)$\uff0c\u74f6\u9888\u5728\u4e8e\u6392\u5e8f\u3002\n# Code\n``` cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T> inline void read(T &x) {\n\tx= 0;\n\tchar c= getchar();\n\twhile(!isdigit(c)) c= getchar();\n\twhile(isdigit(c)) x= x * 10 + (c & 15), c= getchar();\n}\n#define N 2000001\nint n, m, a[N], b[N], head[N], cnt, c[N], d[N], ma[N], son[N], fa[N];\nbool vis[N];\nlong long ans;\nstruct Edge {\n\tint a, b;\n} e[N << 1];\ninline void add(int a, int b) {\n\te[++cnt].a= head[a], e[cnt].b= b, head[a]= cnt;\n}\ninline void dfs(int x, int y) {\n\tma[x]= a[x], fa[x]= y;\n\tfor(int i= head[x]; i; i= e[i].a) {\n\t\tif(e[i].b == y) continue;\n\t\tdfs(e[i].b, x), ma[x]= max(ma[x], ma[e[i].b]);\n\t\tif(ma[e[i].b] > ma[son[x]]) son[x]= e[i].b;\n\t}\n}\nint main() {\n\tread(n);\n\tfor(int i= 1; i <= n; i++) read(a[i]), b[i]= a[i];\n\tsort(b + 1, b + n + 1), m= unique(b + 1, b + n + 1) - b - 1;\n\tfor(int i= 1; i <= n; i++) a[i]= lower_bound(b + 1, b + m + 1, a[i]) - b;\n\tfor(int i= 1, x, y; i < n; i++) read(x), read(y), add(x, y), add(y, x);\n\tfor(int i= 1; i <= n; i++) c[i]= i;\n\tsort(c + 1, c + n + 1, [](const int &x, const int &y) -> bool { return a[x] > a[y]; });\n\tdfs(c[1], 0);\n\tans= 2 * b[a[c[1]]];\n\tvis[c[1]]= 1;\n\tfor(int i= son[c[1]]; i; i= son[i]) vis[i]= 1;\n\tint s= 0;\n\tfor(int i= head[c[1]]; i; i= e[i].a) {\n\t\tif(e[i].b != son[c[1]] && ma[e[i].b] > ma[s]) s= e[i].b;\n\t}\n\tfor(int i= s; i; i= son[i]) vis[i]= 1;\n\tfor(int i= 2; i <= n; i++) {\n\t\tif(vis[c[i]]) continue;\n\t\tans+= b[a[c[i]]];\n\t\tfor(int x= son[c[i]]; x; x= son[x]) vis[x]= 1;\n\t\tfor(int x= fa[c[i]]; !vis[x] && x; x= fa[x]) vis[x]= 1;\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1644713135,
        "uid": 60075,
        "name": "pzc2004",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 of CF1637F Towers"
    }
]