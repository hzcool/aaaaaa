[
    {
        "content": "[Blog Link](https://blog.chaigidel.xyz/archives/%E9%A2%98%E8%A7%A3/Codeforces/CF1140E.html)\n\n\u53d1\u73b0 $b$ \u4e3a\u574f\u7684\u6761\u4ef6\u5b8c\u5168\u7b49\u4ef7\u4e8e \u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a\u4e09\u7684\u56de\u6587\u4e32\uff0c\u5373 $a_i \\neq a_{i+2}$\uff0c\u6545\u8003\u8651\u5206\u5947\u5076\u5904\u7406\uff0c\u6700\u540e\u4e58\u8d77\u6765\u3002\n\n\u95ee\u9898\u8f6c\u6362\u6210 \u957f\u5ea6\u4e3a $n$ \u7684\u4e32\uff0c\u76f8\u90bb\u6570\u4e0d\u80fd\u76f8\u7b49\uff0c\u65b9\u6848\u6709\u591a\u5c11\uff1f\n\n\u8003\u8651\u5206\u6cbb\n\n$a\\neq b$\uff0c$f_{i,0/1}$ \u8868\u793a\u4e2d\u95f4 $-1$ \u4e2a\u6570\u4e3a $i$\uff0c$1/0$ \u8868\u793a\u4e24\u7aef\u6570\u662f\u5426\u76f8\u7b49\n\n- $a, -1, \\dots, -1, b$ \u6709 $f_{i,0} = (k-2)f_{i-1,0}+f_{i-1,1}$\n- $a, -1, \\dots, -1, a$ \u6709 $f_{i,1} = (k-1)f_{i-1,0}$\n\n\u7279\u6b8a\u7684 $f_{0,0} = 1, f_{0,1}=0$\n\n\u6700\u540e\u8fd8\u8981\u8003\u8651\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\n\n```cpp\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n#define rep(i, l, r) for (int i = (l); i <= (r); ++i)\n#define per(i, l, r) for (int i = (l); i >= (r); --i)\nusing std::cerr;\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::make_pair;\nusing std::pair;\ntypedef pair<int, int> pii;\ntypedef long long ll;\ntypedef unsigned int ui;\n\nconst int p = 998244353;\n\nconst int N = 201000;\n\n#define mod(x) (x) %= 998244353\n\ninline int mul(int x, int y) { return ((ll)x * y) % p; }\ninline int add(int x, int y) { return ((ll)x + y) % p; }\n\nint a[N], b[N], cnta, cntb;\n\nint k, f[N][2];\n\nint ksm(int a, int n) {\n    int ret = 1;\n    while (n) {\n        if (n & 1) ret = mul(ret, a);\n        a = mul(a, a);\n        n >>= 1;\n    }\n    return ret;\n}\n\nint solve(int a[], int n) {\n    if (n == 0) return 1;\n    int l = 0, r = n - 1;\n    int ret;\n    for (; a[l] == -1 && l < n; l++)\n        ;\n    if (l == n) return mul(k, ksm(k - 1, n - 1));\n    for (; a[r] == -1; --r)\n        ;\n    ret = mul(ksm(k - 1, l), ksm(k - 1, n - r - 1));\n    int lst = l;\n    for (l = lst + 1; l <= r; ++l) {\n        if (a[l] == -1) continue;\n        ret = mul(ret, f[l - lst - 1][a[lst] == a[l]]);\n        lst = l;\n    }\n    return ret;\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    cout.tie(0);\n    int n;\n    cin >> n >> k;\n\n    f[0][0] = 1, f[0][1] = 0;\n    rep(i, 1, n) {\n        f[i][1] = mul(f[i - 1][0], k - 1);\n        f[i][0] = add(mul(k - 2, f[i - 1][0]), f[i - 1][1]);\n    }\n\n    rep(i, 1, n) {\n        if (i & 1)\n            cin >> a[cnta++];\n        else\n            cin >> b[cntb++];\n    }\n\n    cout << mul(solve(a, cnta), solve(b, cntb));\n    return 0;\n}\n```",
        "postTime": 1554525406,
        "uid": 9903,
        "name": "Chaigidel",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1140E \u3010Palindrome-less Arrays\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u82e5\u4e00\u4e2a\u6570\u7ec4\u4e2d\u5b58\u5728\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u8fde\u7eed\u56de\u6587\u5b50\u4e32(\u957f\u5ea6>1)\uff0c\u4ed6\u662f\u574f\u7684\uff0c\u5426\u5219\u662f\u597d\u7684\u3002\n\n\u7ed9\u51fa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d$-1$\u53ef\u66ff\u6362\u4e3a$1$~$k$\u4e2d\u7684\u4efb\u4f55\u6570\n\n\u6c42\u5176\u4e2d\u53ef\u4ee5\u66ff\u6362\u540e\u5f97\u5230\u597d\u6570\u7ec4\u7684\u65b9\u6848\u6570\uff0c\u5bf9998244353\u53d6\u6a21\n\n[\u539f\u9898](https://www.luogu.com.cn/problem/CF1140E)\n\n\u9898\u76ee\u8bf4\u5b58\u5728\u957f\u5ea6\u4e3a\u5927\u4e8e1\u7684\u5947\u6570\u7684\u8fde\u7eed\u56de\u6587\u5b50\u4e32\u5c31\u662f\u574f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u5b58\u5728\u957f\u5ea6\u4e3a3\u7684\u5947\u6570\u5c31\u662f\u574f\u7684\n\n\u76f4\u63a5\u8fd9\u4e48\u6765\u770b\u7684\u8bdd\u597d\u50cf\u6709\u70b9\u5934\u75bc\u554a\uff0c\u8003\u8651\u8f6c\u5316\u7684\u66f4\u65b9\u4fbf\u4e9b\n\n\u6211\u4eec\u6ce8\u610f\u5230\u6570\u7ec4\u4e2d**\u4e0b\u6807\u5947\u5076\u6027\u4e0d\u540c**\u7684\u6570\u4e4b\u95f4\u5176\u5b9e\u5e76\u65e0\u5173\u8054\n\n\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u628a\u539f\u6570\u7ec4\u6309\u5176**\u4e0b\u6807\u7684\u5947\u5076**\u5206\u6210\u4e24\u4efd\uff0c**\u597d\u6570\u7ec4**\u7684\u5b9a\u4e49\u5c31\u6210\u4e86\uff1a**\u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u6570\u90fd\u4e0d\u4e0e\u5176\u524d\u4e00\u4e2a\u6570\u76f8\u540c**\n\n\u7b54\u6848\u5373\u4e3a\u4e24\u4efd\u6570\u7ec4\u7684\u5408\u6cd5\u65b9\u6848\u6570\u7684\u79ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u6c42\u5206\u7ec4\u540e\u7684\u597d\u6570\u7ec4\u4e2a\u6570\uff1a\n\n\u9996\u5148\uff0c\u5f71\u54cd\u7b54\u6848\u7684\u53ea\u6709\u4e0d\u786e\u5b9a\u7684\u6570\uff0c\u5373$-1$\u3002\u90a3\u4e48\uff0c\u5c06\u6bcf\u6bb5\u8fde\u7eed\u7684-1\u548c\u5176\u4e24\u7aef\u53d6\u503c\u5df2\u7ecf\u786e\u5b9a\u7684\u6570\u89c6\u4f5c\u4e00\u6bb5\uff0c\u5e76\u8bd5\u7740\u5904\u7406\u6bcf\u6bb5\u8fd9\u6837\u7684\u6570\u7684\u65b9\u6848\u6570\uff0c\u6700\u540e\u76f8\u4e58\n\n\u663e\u7136\u6bcf\u6bb5\u7684\u65b9\u6848\u6570\u548c$-1$\u5728\u54ea\u91cc\u5e76\u6ca1\u6709\u5173\u7cfb\u3002\u5728\u6df1\u5165\u601d\u8003\uff0c\u53d1\u73b0\u5b83\u7684\u65b9\u6848\u6570\u8ddf\u5b83\u4e24\u7aef\u5df2\u786e\u5b9a\u7684\u6570\u7684\u5177\u4f53\u53d6\u503c\u4e5f\u57fa\u672c\u6ca1\u6709\u5173\u7cfb\u3002\n\n\u548c\u65b9\u6848\u6570\u6709\u5173\u7684\uff0c\u53ea\u6709 **$-1$ \u7684\u957f\u5ea6\u4ee5\u53ca\u4e24\u7aef\u5df2\u786e\u5b9a\u7684\u6570\u662f\u5426\u76f8\u7b49**\n\n\u8bd5\u7740\u9012\u63a8\u9884\u5904\u7406\u8fd9\u4e2a\u65b9\u6848\u6570\uff1a\n\n$dp[i][0]$\u8868\u793a\u4e00\u6bb5\u957f\u4e3ai\u7684-1\u4e14\u5176\u4e24\u7aef\u5df2\u786e\u5b9a\u7684\u6570\u53d6\u503c\u4e0d\u4e00\u81f4\u7684\u65b9\u6848\u6570\n\n$dp[i][1]$\u8868\u793a\u4e00\u6bb5\u957f\u4e3ai\u7684-1\u4e14\u5176\u4e24\u7aef\u5df2\u786e\u5b9a\u7684\u6570\u53d6\u503c\u4e00\u81f4\u7684\u65b9\u6848\u6570\n\n\u5bf9\u4e8e\u6bcf\u4e2a$dp[i][1]$:\n![](https://cdn.luogu.com.cn/upload/image_hosting/c7s49vxd.png)\n\n\u7531\u4e8e$a!=b$,$b$\u6709$k-1$\u79cd\u53d6\u503c\n\n\u6240\u4ee5$dp[i][1]=dp[i-1][0]*(k-1)$;\n\n\u800c\u5bf9\u4e8e$dp[i][0]$:\n![](https://cdn.luogu.com.cn/upload/image_hosting/7hlf2ngv.png)\n\n\u7531\u4e8e$a!=c,b!=c$,$c$\u6709$k-2$\u79cd\u53d6\u503c\n\n\u6240\u4ee5$dp[i][0]=dp[i-1][1]+(k-2)*dp[i-1][0];$\n\n\u521d\u59cb\u5316\uff0c\u5c31\u662f$dp[0][0]=1,dp[0][1]=0;$\n\n\u5269\u4e0b\u7684\uff0c\u5c31\u662f\u90a3\u4e9b\u6076\u5fc3\u7684\uff0c\u70e6\u4eba\u7684\u7ec6\u8282\u4e86\u3002\u5177\u4f53\u8bf7\u53c2\u89c1\u4ee3\u7801\uff0c\u52a0\u4e86\u6ce8\u91ca\uff0c\u5e0c\u671b\u60a8\u80fd\u770b\u61c2\u3002\n\n$Code:$\n```cpp\n#include <cstdio>\n#include <vector>\n\ntypedef long long ll;\nconst int maxn=2e5+5,mod=998244353;\n\nint n,k,a[maxn];ll dp[maxn][2],ans=1;\nstd::vector<int> v1,v2;\n\nll count(std::vector<int> v){//\u8ba1\u7b97\u5176\u4e2d\u4e00\u4efd\u6570\u7ec4\u7684\u5408\u6cd5\u65b9\u6848\u6570\n\tll res=1;\n\tfor(int i=0;i<v.size();){\n\t\tint j;//\u4e0b\u4e00\u4e2a\u4e0d\u4e3a-1\u7684\u4f4d\u7f6e\n\t\tif(v[i]==-1){//\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u552f\u4e00\u539f\u56e0\u5c31\u662f\u7b2c\u4e00\u4f4d\u4e3a-1\uff0c\u539f\u56e0\u89c1\u4e0b\n\t\t\tfor(j=i+1;v[j]==-1&&j<v.size();j++);//\u627e\u5230\u4e0b\u4e00\u4e2a\u4e0d\u4e3a-1\u7684\u6570\uff0c\u5373\u5f97\u5230\u4e00\u6bb5\u8fde\u7eed\u7684-1\n\t\t\tif(j==v.size()){//\u627e\u5230\u4e0d\u80fd\uff0c\u4e5f\u5c31\u662f\u5168\u662f-1\n\t\t\t\tif(v.size()==1) return k;//\u8981\u662f\u5c31\u4e00\u4e2a-1\uff0c\u90a3\u600e\u6837\u90fd\u597d\uff0c\u65b9\u6848\u6570\u5c31\u662fk\n\t\t\t\tres=(dp[v.size()-2][0]*(k-1)+dp[v.size()-2][1])%mod;//\u5426\u5219\u8ba1\u7b97\n                //\u5047\u8bbe\u7b2c\u4e00\u4e2a\u70b9\u53d6\u503c\u5df2\u56fa\u5b9a\uff0c\u6709(k-1)\u79cd\u53ef\u80fd\u662f\u7b2c\u4e00\u4e2a\u70b9\u548c\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u503c\u4e0d\u540c\n                //\u8fd8\u6709\u4e00\u79cd\u53ef\u80fd\u662f\u4e24\u4e2a\u70b9\u76f8\u540c\n                res*=k;//\u7531\u4e8e\u7b2c\u4e00\u4e2a\u70b9\u6709k\u79cd\u53d6\u503c\uff0c\u8fd8\u8981\u4e58k\n                res%=mod;\n                return res;\n\t\t\t}else{\n\t\t\t\tres*=(dp[j-1][0]*(k-1)+dp[j-1][1]);//\u5df2\u56fa\u5b9a\u4e86\u4e00\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u4e0d\u7528\u4e58k\uff0c\u5176\u4f59\u540c\u4e0a\n                res%=mod;i=j;//\u5c06i\u8f6c\u5230\u4e0b\u4e00\u4e2a\u4e0d\u4e3a-1\u7684\u4f4d\u7f6e\n\t\t\t}\n\t\t}else{//\u6b63\u5e38\u60c5\u51b5\n\t\t\tif(i==v.size()-1) return res;//\u5982\u679c\u5df2\u7ecf\u662f\u6700\u540e\u4e00\u4f4d\uff0c\u76f4\u63a5\u8fd4\u56de\n\t\t\tfor(j=i+1;v[j]==-1&&j<v.size();j++);//\u627e\u5230\u4e00\u6bb5-1(i+1~j-1\u90fd\u662f-1)\n\t\t\tif(j==v.size()){//\u627e\u5230\u4e0d\u80fd\n\t\t\t\tres*=(dp[v.size()-i-2][0]*(k-1)+dp[v.size()-i-2][1])%mod;\n\t\t\t\tres%=mod;//\u4e5f\u5c31\u662f\u4ecei+1\u5230\u7ed3\u5c3e\u5168\u662f-1\uff0c\u5904\u7406\u65b9\u6cd5\u4e0e\u4e4b\u524dv[i]=-1\u662f\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e00\u81f4\n\t\t\t}else{//\u771f\u6b63\u7684\u6b63\u5e38\u60c5\u51b5\n\t\t\t\tif(v[i]==v[j]) res*=dp[j-i-1][1];//\u5206\u7c7b\n\t\t\t\telse res*=(dp[j-i-1][0]);//\u552f\u4e00\u6b63\u5e38\u800c\u6e05\u723d\u7684\u90e8\u5206\n\t\t\t\tres%=mod;\n\t\t\t}\n            i=j;//\u901a\u8fc7\u6bcf\u6b21\u90fd\u5c06i\u8f6c\u5230\u4e0d\u4e3a-1\u7684\u4f4d\u7f6e\uff0c\u4fdd\u8bc1\u4e86\u901a\u5e38v[i]!=-1\u4e14\u4e0d\u4f1a\u6f0f\u70b9\n            //\u800c\u8fd9\u4e5f\u80fd\u5728j=v.size()\u65f6\u7ed3\u675f\u5faa\u73af\n\t\t}\n\t}return res;\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&k);dp[0][1]=0,dp[0][0]=1;//\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++){\n\t\tdp[i][1]=dp[i-1][0]*(k-1);dp[i][1]%=mod;\n\t\tdp[i][0]=dp[i-1][1]+dp[i-1][0]*(k-2);dp[i][0]%=mod;\n\t}//\u9884\u5904\u7406dp\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(i%2) v1.push_back(a[i]);//\u5206\u7ec4\n\t\telse v2.push_back(a[i]);\n\t}\n\tans*=count(v1);ans%=mod;\n\tans*=count(v2);ans%=mod;//\u8ba1\u7b97\n    printf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1596439565,
        "uid": 101984,
        "name": "Rui_R",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1140E \u3010Palindrome-less Arrays\u3011"
    },
    {
        "content": "### PS.\n\u6b64\u9898\u6709\u4e00\u4e9b\u7ec6\u8282\u6709\u70b9\u6bd2\u7624\u3002  \n\n### Problem.\n\u89c1\u9898\u76ee\u7ffb\u8bd1\uff0c\u5df2\u7ecf\u591f\u7b80\u6d01\u4e86\uff0c\u4e0d\u518d\u6982\u62ec\u3002  \n\n### Solution.\n\u9996\u5148\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6c42\u6709\u591a\u5c11\u4e2a\u4e0d\u574f\u7684\u4e32\u3002  \n\u4e32\u7684\u597d\u574f\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u4e32\u4e2d\u662f\u5426\u6709\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u56de\u6587\u5b50\u4e32\u3002  \n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u56de\u6587\u4e32\u7684\u6027\u8d28\uff0c\u77aa\u7740\u4e32\u7684\u597d\u574f\u662f\u505a\u4e0d\u51fa\u6765\u9898\u76ee\u7684\u3002  \n\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u56de\u6587\u4e32\u4e2d\u5f88\u663e\u7136\u6709\u5b50\u56de\u6587\u4e32\u3002  \n\u8fd9\u6837\u4e0d\u65ad\u9012\u5f52\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u957f\u5ea6\u4e3a3\u7684\u56de\u6587\u4e32\u3002  \n\u5f88\u663e\u7136\uff0c\u5982\u679c\u4e00\u4e2a\u5e8f\u5217\u4e2d\u6709\u957f\u5ea6\u4e3a3\u7684\u56de\u6587\u4e32\uff0c\u90a3\u5b83\u80af\u5b9a\u662f\u574f\u7684\u4e32\uff08\u5e9f\u8bdd  \n\u540c\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u4e32\u662f\u574f\u7684\uff0c\u90a3\u4e48\u5b83\u4e2d\u80af\u5b9a\u6709\u4e00\u4e2a\u957f\u5ea6\u8d85\u8fc73\u7684\u56de\u6587\u4e32\uff0c\u90a3\u4e48\u5b83\u4e5f\u80af\u5b9a\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u7684\u56de\u6587\u4e32\u3002  \n\u6240\u4ee5\uff0c\u6211\u4eec\u8bc1\u660e\u4e86`\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u7684\u56de\u6587\u5b50\u4e32`\u548c`\u8fd9\u4e2a\u4e32\u662f\u4e0d\u597d\u7684`\u662f\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u3002  \n\n\u7136\u540e\u6211\u4eec\u518d\u6765\u8003\u8651\u5982\u4f55\u8868\u793a\u4e00\u4e2a\u4e32\u662f\u5426\u62e5\u6709\u957f\u5ea6\u4e3a3\u7684\u56de\u6587\u5b50\u4e32\u3002  \n\u9996\u5148\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u7684\u56de\u6587\u5b50\u4e32\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u76f8\u540c\uff0c\u5373$a_{i-1}=a_{i+1}$\u3002  \n\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u4e32\u6ee1\u8db3\u5b58\u5728\u4e00\u4e2a$i$\uff0c\u4f7f\u5f97$a_{i-1}=a_{i+1}$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e32\u5c31\u662f\u574f\u7684\u3002  \n\u90a3\u4e48\u6211\u4eec\u5f88\u663e\u7136\u53ef\u4ee5\u6309\u7167$i$\u7684\u5947\u5076\u5206\u522b\u5904\u7406\uff0c\u6700\u540e\u628a\u7b54\u6848\u4e58\u8d77\u6765\u3002  \n\n\u7136\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\uff1a$a_i=-1\\;or\\;1\\le a_i\\le k$\u3002  \n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u539f\u5e8f\u5217\u4e2d\u5982\u679c\u5b58\u5728\u6570\uff0c\u80af\u5b9a\u662f\u548c$a_i$\u7684\u8303\u56f4\u662f\u76f8\u540c\u7684\u3002  \n\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u4e00\u6bb5\u8fde\u7eed\u7684$-1$\u5e8f\u5217\uff0c\u6211\u4eec\u80fd\u53d1\u73b0\u533a\u95f4\u5de6\u8fb9\u7684\u90a3\u4e2a\u6570\u548c\u533a\u95f4\u53f3\u8fb9\u7684\u90a3\u4e2a\u6570\u4e0e\u8fd9\u4e2a$-1$\u5e8f\u5217\u7684\u53d6\u503c\u662f\u65e0\u5173\u7684\uff0c\u6709\u5173\u7684\u53ea\u6709\u8fd9\u4e24\u4e2a\u6570\u662f\u5426\u76f8\u540c\u3002  \n\u4e00\u6bb5\u8fde\u7eed\u7684$-1$\u5e8f\u5217\u7684\u65b9\u6848\u6570\u53ea\u4e0e\u8fd9\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u548c\u5de6\u53f3\u662f\u5426\u76f8\u540c\u6709\u5173\u3002  \n\u90a3\u4e48\u5f88\u663e\u7136\u5c31\u8003\u8651\u5230dp\u3002  \n\n\u6211\u4eec\u8bbe$dp[i][0/1]$\u8868\u793a\u957f\u5ea6\u4e3a$i$\u7684\u8fde\u7eed$-1$\u5e8f\u5217\u5728\u5de6\u53f3\u4e24\u8fb9\u662f\u5426\u76f8\u540c\uff080\u8868\u793a\u76f8\u540c\uff0c1\u8868\u793a\u4e0d\u76f8\u540c\uff09\u7684\u60c5\u51b5\u4e0b\u7684\u65b9\u6848\u6570\u3002  \n\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6700\u540e\u4e00\u4f4d\u653e\u4ec0\u4e48\uff0c\u7136\u540e\u8f6c\u79fb\u3002  \n\u5219\u6211\u4eec\u8f7b\u6613\u5730\u5f97\u5230\u4e86\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f0f\u3002  \n$dp[i][0]=dp[i-1][1]\\times(k-1)$  \n$dp[i][1]=dp[i-1][1]\\times(k-2)+dp[i-1][0]$  \n\u521d\u59cb\u72b6\u6001\u4fbf\u4e3a$dp[0][0]=0,dp[0][1]=1$\uff0c\u8fd9\u4e2a\u5f88\u663e\u7136\uff08\u957f\u5ea6\u90fd\u4e3a0\u4e86\u3002  \n\n\u4e8e\u662f\uff0c\u7b14\u8005\u6253\u51fa\u4e86\u8fd9\u6837\u7684\u4e00\u4efd\u4ee3\u7801\u3002  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,P=998244353,ans,beg,dp[200005][2],a[200005],m=0,b[200005];\ninline int ksm(int a,int q) {int r=1;for(;q;q>>=1,a=1ll*a*a%P) if(q&1) r=1ll*r*a%P;return r;}//\u5feb\u901f\u5e42\ninline int wrk(int n,int a[])//\u5206\u522b\u5904\u7406\u5947\u5076\u4f4d\n{\n\tint ret=1;//\u8fd4\u56de\u503c\n\tfor(int i=1,j;i<=n;i=j+1)\n\t{\n\t\twhile(i<=n&&a[i]!=-1) i++;j=i;//i\u627e\u5230\u7b2c\u4e00\u4e2a-1\u7684\u4f4d\u7f6e\n\t\twhile(j<=n&&a[j]==-1) j++;j--;//j\u627e\u5230\u6700\u540e\u4e00\u4e2a-1\u7684\u4f4d\u7f6e\n\t\tif(i>j) continue;//\u8fd4\u56de\u4e00\u6b21\n\t\tif(i==1&&j==n) ret=1ll*ret*ksm(k-1,n-1)%P*k%P;\n//\u5982\u679c\u524d\u540e\u90fd\u6ca1\u6709\u9650\u5236\uff0c\u90a3\u4e5f\u5c31\u662f\u8bf4\u7b2c\u4e00\u683c\u6709k\u79cd\u653e\u6cd5\uff0c\u5176\u4ed6\u4e3a\u4e86\u907f\u514d\u548c\u4e0a\u4e00\u4e2a\u989c\u8272\u76f8\u540c\u6709k-1\u79cd\u653e\u6cd5\u3002\n\t\telse if(i==1||j==n) ret=1ll*(dp[j-i][0]+1ll*(k-1)*dp[j-i][1]%P)%P*ret%P;\n//\u5982\u679c\u524d\u540e\u4e2d\u6709\u4e00\u4e2a\u6ca1\u6709\u9650\u5236\uff0c\u90a3\u4e48\u6ca1\u6709\u9650\u5236\u90a3\u4e00\u8fb9\u7684\u989c\u8272\uff0c\u53ef\u4ee5\u63a8\u51fa\u4e0a\u9762\u7684\u67ff\u5b50\n\t\telse ret=1ll*ret*dp[j-i+1][a[i-1]!=a[j+1]]%P;\n//\u5426\u5219\u76f4\u63a5\u5957dp\u8f6c\u79fb\u7684\u7ed3\u679c\n\t}\n\treturn ret;//\u8fd4\u56de\u7b54\u6848\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k),dp[0][0]=0,dp[0][1]=1,ans=1;//dp\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",a+i);//\u8bfb\u5165\n\tfor(int i=1;i<=n;i++) dp[i][0]=1ll*dp[i-1][1]*(k-1)%P,dp[i][1]=(1ll*dp[i-1][1]*(k-2)%P+dp[i-1][0])%P;//dp\u8f6c\u79fb\n\tfor(int i=1;i<=n;i+=2) b[++m]=a[i];//\u628a\u4e0a\u9762\u7684\u5e8f\u5217\u6309\u7167\u5947\u5076\u5206\u5f00\u5206\u522b\u5904\u7406\n\tans=1ll*ans*wrk(m,b)%P,m=0;//ans\u4e58\u4e0a\u5947\u6570\u7684\u7b54\u6848\n\tfor(int i=2;i<=n;i+=2) b[++m]=a[i];//\u5076\u6570\n\treturn ans=1ll*ans*wrk(m,b)%P,printf(\"%d\\n\",ans),0;//ans\u4e58\u4e0a\u5076\u6570\u7684\u7b54\u6848\uff0c\u8f93\u51faans\n}\n```\n\u7136\u540e\u4e00\u4ea4\uff0cwoc\u600e\u4e48`Wrong Answer On 14`\u554a\u3002\u3002\u3002  \n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u6ca1\u6709\u8003\u8651\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u5982\u679c\u5df2\u7ecf\u6240\u6709\u7684\u6570\u90fd\u653e\u597d\u4e86\u3002  \n\u800c\u7b54\u6848\u4e0d\u7b26\u5408\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u5e94\u8be5\u662f0\uff0c\u6211\u4eec\u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u8dd1\u51fa1\uff0c\u6240\u4ee5\u8fd8\u8981\u52a0\u4e2a\u7279\u5224\u3002  \n\n### Coding.\nAC\u4ee3\u7801\u5982\u4e0b\uff08\u6bd4\u697c\u4e0a\u697c\u4e0b\u7684\u90fd\u77ed/cy\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,k,P=998244353,ans,beg,dp[200005][2],a[200005],m=0,b[200005];\ninline int ksm(int a,int q) {int r=1;for(;q;q>>=1,a=1ll*a*a%P) if(q&1) r=1ll*r*a%P;return r%P;}\ninline int wrk(int n,int a[])\n{\n\tint ret=1;\n\tfor(int i=1;i<n;i++) if(a[i]!=-1&&a[i]==a[i+1]) return 0;\n//\u8fd9\u5c31\u662f\u6211\u521a\u521a\u63d0\u5230\u7684\u7279\u5224\n\tfor(int i=1,j;i<=n;i=j+1)\n\t{\n\t\twhile(i<=n&&a[i]!=-1) i++;j=i;\n\t\twhile(j<=n&&a[j]==-1) j++;j--;\n\t\tif(i>j||i<1||j>n) continue;\n\t\telse if(i==1&&j==n) ret=1ll*ret*ksm(k-1,n-1)%P*k%P;\n\t\telse if(i==1||j==n) ret=1ll*(dp[j-i][0]+1ll*(k-1)*dp[j-i][1]%P)%P*ret%P;\n\t\telse ret=1ll*ret*dp[j-i+1][a[i-1]!=a[j+1]]%P;\n\t}\n\treturn ret;\n}\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&k),dp[0][0]=0,dp[0][1]=1,ans=1;\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",a+i);\n\tfor(int i=1;i<=n;i++) dp[i][0]=1ll*dp[i-1][1]*(k-1)%P,dp[i][1]=(1ll*dp[i-1][1]*(k-2)%P+dp[i-1][0])%P;\n\tfor(int i=1;i<=n;i+=2) b[++m]=a[i];\n\tans=1ll*ans*wrk(m,b)%P,m=0;\n\tfor(int i=2;i<=n;i+=2) b[++m]=a[i];\n\treturn ans=1ll*ans*wrk(m,b)%P,printf(\"%lld\\n\",ans),0;\n}\n```\n\u5b8c\u7ed3\u6563\u82b1\uff0c\u65e0\u803b\u6c42\u8d5e",
        "postTime": 1593928204,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF1140E Palindrome-less Arrays\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u9996\u5148\uff0c\u4e00\u4e2a\u56de\u6587\u4e32\u7684\u5185\u90e8\u8fd8\u662f\u4e00\u4e2a\u56de\u6587\u4e32\n\n\u6240\u4ee5\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a\u5947\u6570$\\Longleftrightarrow$\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a$3$\u7684\u56de\u6587\u4e32\u3002\n\n\u8fdb\u4e00\u6b65\u601d\u8003\u53d1\u73b0\u5947\u6570\u4f4d\u548c\u5076\u6570\u4f4d\u5f7c\u6b64\u72ec\u7acb\uff0c\u6240\u4ee5\u53ef\u4ee5\u5355\u72ec\u63d0\u51fa\u6765\uff0c\u5c31\u53d8\u6210\u4e86\u76f8\u90bb\u4e24\u4f4d\u4e0d\u76f8\u540c\u7684\u65b9\u6848\u6570\uff0c\u505a\u5b8c\u540e\u8981\u505a\u4e2a\u4e58\u6cd5\u3002\n\n\u6734\u7d20\u7684$dp$\u662f\u8003\u8651\u8bb0$dp_{i,k}$\u8868\u793a\u7b2c$i$\u4f4d\u4e3a$k$\u7684\u65b9\u6848\u6570\uff0c\u4f46\u8fd9\u4e2a\u663e\u7136\u4f1a$T$\u5f97\u98de\u8d77\u3002\n\n\u53d1\u73b0\u5b9e\u9645\u4e0a\u4f1a\u5f71\u54cd\u5230\u7b54\u6848\u7684\u53ea\u6709\u4e00\u6bb5\u8fde\u7eed\u7684$-1$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4ed6\u4eec\u5355\u72ec\u8003\u8651\u3002\n\n\u53d1\u73b0\u4e0d\u662f$-1$\u7684\u4f4d\u7f6e\u548c\u503c\u56fa\u5b9a\uff0c\u53ef\u4ee5\u53d8\u76f8\u7684\u770b\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u4e8e\u662f\u505a\u628a\u5f88\u591a\u6bb5\u5c0f\u7684$-1$\u7684\u7b54\u6848\u7b97\u51fa\u6765\uff0c\u505a\u4e00\u4e2a\u4e58\u6cd5\u539f\u7406\u597d\u4e86\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u89e3\u4e00\u6bb5\u8fde\u7eed\u7684$-1$\u7684\u7b54\u6848\uff0c\u8fdb\u4e00\u6b65\u5206\u6790\u540e\u53d1\u73b0\u5bf9\u4e8e\u4e00\u6bb5$-1$\uff0c\u5176\u4e24\u8fb9\u7684\u503c\u662f\u591a\u5c11\u5e76\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u6709\u6548\u7684\u72b6\u6001\u53ea\u6709\u4e24\u8fb9\u76f8\u7b49\u6216\u8005\u4e0d\u76f8\u7b49\u4e24\u79cd\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u901a\u8fc7$dp$\u9884\u5904\u7406\u51fa\u6765\u957f\u5ea6\u4e3a$i$\u7684$-1$\u6bb5\u4e24\u8fb9\u76f8\u540c$/$\u4e0d\u76f8\u540c\u7684\u65b9\u6848\u6570\u3002\n\n\u6211\u4eec\u8bbe$dp_{i,0}$\u8868\u793a\u957f\u5ea6\u4e3a$i$\u7684$-1$\u6bb5\u4e24\u8fb9\u76f8\u540c\u7684\u65b9\u6848\u6570\uff0c$dp_{i,1}$\u4e3a\u4e24\u8fb9\u4e0d\u540c\u7684\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u6709\u8f6c\u79fb\uff1a\n\n> $dp_{i,0}=dp_{i-1,1}*(k-1)$\n\n> $dp_{i,1}=dp_{i-1,1}*(k-2)+dp_{i-1,0}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\n#define int long long\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int N = 2e5 + 5 ; \nconst int mod = 998244353 ; \nint n, k, a[N], num, b[N], dp[N][2], Ans ;\nint solve() {\n\tint w = 1, len = 0, pre = 0 ; \n\trep( i, 1, num ) {\n\t\tif( b[i] == -1 ) ++ len ;\n\t\telse {\n\t\t\tif( len ) {\n\t\t\t\tif( !pre ) w = w * ( ( k - 1ll ) * dp[len - 1][1] % mod + dp[len - 1][0] ) % mod ;\n\t\t\t\telse if( pre == b[i] ) w = w * dp[len][0] % mod ; \n\t\t\t\telse w = w * dp[len][1] % mod ;  \n\t\t\t} \n\t\t\tpre = b[i], len = 0 ;\n\t\t}\n\t}\n\tif( len == num ) {\n\t\tw = k ;\n\t\trep( i, 2, num ) w = ( w * ( k - 1ll ) ) % mod ; \n\t\treturn w % mod ; \n\t} \n\tif( len ) w = ( w * ( ( dp[len - 1][0] + ( k - 1ll ) * dp[len - 1][1] % mod ) % mod ) ) % mod  ;\n\treturn w % mod ; \n}\nsigned main()\n{\n\tn = read(), k = read() ;  \n\trep( i, 1, n ) {\n\t\ta[i] = read() ; \n\t\tif( i > 3 && a[i] == a[i - 2] && a[i] != -1 )\n\t\t\tputs(\"0\"), exit(0) ; \n\t}\n\tdp[0][0] = 0, dp[0][1] = 1 ; //0\u8868\u793a\u4e24\u8fb9\u5916\u76f8\u540c\uff0c1\u8868\u793a\u4e0d\u540c \n\tfor( int i = 1; i <= n / 2 + 1; ++ i ) {\n\t\tdp[i][0] = ( dp[i - 1][1] * ( k - 1 ) ) % mod ;\n\t\tdp[i][1] = ( dp[i - 1][0] + ( ( k - 2 ) * dp[i - 1][1] % mod ) ) % mod ;\n\t}\n\trep( i, 1, n ) if( i % 2 ) b[++ num] = a[i] ; \n\tAns = solve(), num = 0 ; \n\trep( i, 1, n ) if( i % 2 == 0 ) b[++ num] = a[i] ; \n\tAns *= solve(), Ans %= mod ; \n\tprintf(\"%d\\n\", Ans ) ;\n\treturn 0;\n}\n```",
        "postTime": 1565323395,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1140E \u3010Palindrome-less Arrays\u3011"
    },
    {
        "content": "## \u9898\u89e3 CF1140E Palindrome-less Arrays\n\n\u53d1\u73b0\u3010\u4e0d\u5b58\u5728\u957f\u5ea6\u5927\u4e8e$1$\u7684\u5947\u56de\u6587\u4e32\u3011\uff0c\u7b49\u4ef7\u4e8e\u3010\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a$3$\u7684\u56de\u6587\u4e32\u3011\u3002\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9\u6240\u6709$i\\geq 3$\uff0c$a_i\\neq a_{i-2}$\u3002\u4e5f\u5c31\u662f\u6240\u6709\u8ddd\u79bb\u4e3a$2$\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u503c\u90fd\u4e0d\u76f8\u7b49\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0b\u6807\u4e3a\u5947\u6570\u7684\u4f4d\u7f6e\u548c\u5076\u6570\u7684\u4f4d\u7f6e\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\uff0c\u8003\u8651\u5206\u522b\u5904\u7406\uff0c\u7136\u540e\u628a\u65b9\u6848\u6570\u4e58\u8d77\u6765\u3002\n\n\u4ee5\u5947\u6570\u4e3a\u4f8b\u3002\u627e\u5230\u4e00\u4e2a\u5947\u6570\u4f4d\u7f6e$i$\uff0c\u6ee1\u8db3$a_i=-1$\u4e14$a_{i-2}\\neq -1$\uff08\u4e5f\u5c31\u662f$i$\u662f\u4e00\u6bb5\u8fde\u7eed$-1$\u7684\u5f00\u5934\uff09\uff0c\u518d\u627e\u5230\u6700\u5927\u7684$j$\uff0c\u6ee1\u8db3$j$\u4e5f\u662f\u5947\u6570\uff0c\u4e14$a_{i},a_{i+2},\\dots,a_{j}$\u90fd\u7b49\u4e8e$-1$\uff08\u4e5f\u5c31\u662f$j$\u662f\u8fd9\u6bb5\u8fde\u7eed\u7684$-1$\u7684\u7ed3\u5c3e\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u8fd9\u6837\u7684\u201c\u8fde\u7eed\u201d\u7684$-1$\uff0c\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u663e\u7136\u4e5f\u662f\u72ec\u7acb\u7684\uff0c\u53ef\u4ee5\u5206\u522b\u8ba1\u7b97\uff0c\u7136\u540e\u4e58\u8d77\u6765\u3002\u8fd9\u91cc\u201c\u8fde\u7eed\u201d\u6253\u5f15\u53f7\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e4b\u95f4\u5176\u5b9e\u662f\u95f4\u9694\u7740\u4e00\u4e2a\u5076\u6570\u7684\uff0c\u4f46\u5982\u679c\u53ea\u8003\u8651\u5947\u6570\uff0c\u5b83\u4eec\u5c31\u662f\u8fde\u7eed\u7684\u3002\n\n\u5bf9\u4e00\u6bb5\u201c\u8fde\u7eed\u201d\u7684$-1$\uff0c\u5728\u586b\u597d\u4ee5\u540e\uff0c\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u5fc5\u987b\u4e0d\u76f8\u7b49\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u6570\u4e0d\u80fd\u7b49\u4e8e\u5b83\u524d\u9762\u7684\u90a3\u4e2a\u6570\uff08$a_i\\neq a_{i-2}$\uff09\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u4e0d\u80fd\u7b49\u4e8e\u5b83\u540e\u9762\u7684\u90a3\u4e2a\u6570\uff08$a_{j}\\neq a_{j+2}$\uff09\u3002\u4f46\u4e5f\u6709\u7279\u4f8b\uff0c\u5c31\u662f$i-2<1$\u6216$j+2>n$\u65f6\uff0c\u6700\u524d\u9762\u6216\u6700\u540e\u9762\u7684\u90a3\u4e2a\u6570\uff0c\u53ef\u4ee5\u4e0d\u53d7\u9650\u5236\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u53ef\u4ee5\u628a\u4e00\u6bb5\u201c\u8fde\u7eed\u201d\u7684$-1$\u5206\u4e3a\u56db\u7c7b\uff1a\n\n1. \u5de6\u53f3\u90fd\u6ca1\u6709\u9650\u5236\uff08$i-2<1$\u4e14$j+2>n$\uff09\u3002\n2. \u5de6\u53f3\u5176\u4e2d\u4e00\u8fb9\u6709\u9650\u5236\uff08$i-2<1$\u6216$j+2>n$\uff0c\u6070\u6709\u4e00\u8005\u6210\u7acb\uff09\u3002\n3. \u5de6\u53f3\u90fd\u6709\u9650\u5236\uff0c\u9650\u5236\u76f8\u540c\uff08$a_{i-2}=a_{j+2}$\uff09\u3002\n4. \u5de6\u53f3\u90fd\u6709\u9650\u5236\uff0c\u9650\u5236\u4e0d\u540c\uff08$a_{i-2}\\neq a_{j+2}$\uff09\u3002\n\n\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u3001\u6bcf\u79cd\u957f\u5ea6\u7684\u8fde\u7eed\u6bb5\uff0c\u5176\u65b9\u6848\u6570\u53ef\u4ee5\u5206\u522b\u9884\u5904\u7406\u51fa\u6765\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n)$\u7684\u3002\u4f8b\u5982\uff0c\u7b2c\u56db\u79cd\u60c5\u51b5\u6700\u4e3a\u590d\u6742\uff0c\u662f\u505a\u4e00\u4e2aDP\uff1a$dp[x][y\\in\\{0,1,2\\}]$\u8868\u793a\u8003\u8651\u4e86\u524d$x$\u4e2a\u4f4d\u7f6e\uff0c\u7b2c$x$\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u662f\u7b49\u4e8e\u5de6\u8fb9\u7684\u9650\u5236\uff08$a_{i-2}$\uff09\u8fd8\u662f\u7b49\u4e8e\u53f3\u8fb9\u7684\u9650\u5236\uff08$a_{j+2}$\uff09\uff0c\u8fd8\u662f\u4e24\u4e2a\u90fd\u4e0d\u7b49\u4e8e\u3002\u5177\u4f53\u7684\u8f6c\u79fb\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//problem:CF1140E\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n\ntemplate<typename T>inline void ckmax(T& x,T y){x=(y>x?y:x);}\ntemplate<typename T>inline void ckmin(T& x,T y){x=(y<x?y:x);}\n\nconst int MOD=998244353;\ninline int mod1(int x){return x<MOD?x:x-MOD;}\ninline int mod2(int x){return x<0?x+MOD:x;}\ninline void add(int& x,int y){x=mod1(x+y);}\ninline void sub(int& x,int y){x=mod2(x-y);}\ninline int pow_mod(int x,int i){int y=1;while(i){if(i&1)y=(ll)y*x%MOD;x=(ll)x*x%MOD;i>>=1;}return y;}\n\nconst int MAXN=2e5;\nint n,K,a[MAXN+5];\nint f[4][MAXN+5],dp[MAXN+5][3];\n/*\n4\u79cd\u60c5\u51b5:\n0. \u5de6\u53f3\u90fd\u6ca1\u6709\u9650\u5236\n1. \u5de6\u53f3\u5176\u4e2d\u4e00\u8fb9\u6709\u9650\u5236\n2. \u5de6\u53f3\u90fd\u6709\u9650\u5236,\u9650\u5236\u76f8\u540c\n3. \u5de6\u53f3\u90fd\u6709\u9650\u5236,\u9650\u5236\u4e0d\u540c\n*/\nvoid init(int maxlen){\n\tf[0][1]=K;\n\tfor(int i=2;i<=maxlen;++i)\n\t\tf[0][i]=(ll)f[0][i-1]*(K-1)%MOD;\n\tf[1][1]=K-1;\n\tfor(int i=2;i<=maxlen;++i)\n\t\tf[1][i]=(ll)f[1][i-1]*(K-1)%MOD;\n\t\n\tdp[1][0]=K-1;\n\tdp[1][1]=0;\n\tf[2][1]=K-1;\n\tfor(int i=2;i<=maxlen;++i){\n\t\tdp[i][0]=((ll)dp[i-1][0]*(K-2) + (ll)dp[i-1][1]*(K-1))%MOD;\n\t\tdp[i][1]=dp[i-1][0];\n\t\tf[2][i]=dp[i][0];\n\t}\n\t\n\tdp[1][0]=K-2;\n\tdp[1][1]=0;\n\tdp[1][2]=1;\n\tf[3][1]=K-2;\n\tfor(int i=2;i<=maxlen;++i){\n\t\tdp[i][0]=((K>3?(ll)dp[i-1][0]*(K-3):0LL) + (ll)dp[i-1][1]*(K-2) + (ll)dp[i-1][2]*(K-2))%MOD;\n\t\tdp[i][1]=mod1(dp[i-1][0]+dp[i-1][2]);\n\t\tdp[i][2]=mod1(dp[i-1][0]+dp[i-1][1]);\n\t\tf[3][i]=mod1(dp[i][0]+dp[i][1]);\n\t}\n}\nint main() {\n\tcin>>n>>K;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>a[i];\n\tfor(int i=1;i+2<=n;++i){\n\t\tif(a[i]!=-1 && a[i]==a[i+2]){\n\t\t\tcout<<0<<endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tinit((n+1)/2);\n\tint ans=1;\n\tfor(int i=1;i<=n;i+=2){\n\t\tif(a[i]!=-1)\n\t\t\tcontinue;\n\t\tint j=i,len=1;\n\t\twhile(j+2<=n && a[j+2]==-1){\n\t\t\tj+=2;\n\t\t\tlen++;\n\t\t}\n\t\tint t=-1;\n\t\tif(i-2<1 && j+2>n)\n\t\t\tt=0;\n\t\telse if(i-2<1 || j+2>n)\n\t\t\tt=1;\n\t\telse if(a[i-2]==a[j+2])\n\t\t\tt=2;\n\t\telse\n\t\t\tt=3;\n//\t\tcout<<len<<\" \"<<t<<endl;\n//\t\tcout<<f[t][len]<<endl;\n\t\tans=(ll)ans*f[t][len]%MOD;\n\t\ti=j;\n\t}\n\tfor(int i=2;i<=n;i+=2){\n\t\tif(a[i]!=-1)\n\t\t\tcontinue;\n\t\tint j=i,len=1;\n\t\twhile(j+2<=n && a[j+2]==-1){\n\t\t\tj+=2;\n\t\t\tlen++;\n\t\t}\n\t\tint t=-1;\n\t\tif(i-2<1 && j+2>n)\n\t\t\tt=0;\n\t\telse if(i-2<1 || j+2>n)\n\t\t\tt=1;\n\t\telse if(a[i-2]==a[j+2])\n\t\t\tt=2;\n\t\telse\n\t\t\tt=3;\n//\t\tcout<<len<<\" \"<<t<<endl;\n//\t\tcout<<f[t][len]<<endl;\n\t\tans=(ll)ans*f[t][len]%MOD;\n\t\ti=j;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1595580709,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1140E \u3010Palindrome-less Arrays\u3011"
    },
    {
        "content": "\u770b\u5176\u4ed6\u9898\u89e3\u6ca1\u6709\u7c7b\u4f3c\u601d\u8def\uff0c\u6545\u4ea4\u4e00\u53d1\u3002\n\n\u672c\u4eba\u601d\u8def\u4e0e [CF1591F](https://www.luogu.com.cn/problem/CF1591F) \u7c7b\u4f3c\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u53bb\u505a\u505a\u3002\n\n## \u601d\u8def\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6761\u4ef6\u53ef\u4ee5\u8f6c\u5316\u6210 $a_i\\not=a_{i+2}$\uff0c\u8003\u8651\u5206\u5947\u5076\u6027\u5904\u7406\u3002\n\n\u8003\u8651 $dp_{i,j}$ \u8868\u793a\u770b\u5230\u7b2c $i$ \u4f4d\uff0c$a_i=j$ \u7684\u65b9\u6848\u6570\u3002\n\n\u8f6c\u79fb $dp_{i+2,j}=\\sum_{k\\not=j}dp_{i,k}$\u3002\u82e5 $a_{i+2}\\not=-1$\uff0c\u9700\u8981\u5c06\u9664\u4e86 $dp_{i+2,a_{i+2}}$ \u7684\u503c\u4ee5\u5916\u7684 $dp$ \u8d4b\u503c\u4e3a $0$\u3002\n\n\u590d\u6742\u5ea6 $O(n^2)$\uff0c**\u65e0\u6cd5**\u901a\u8fc7\u672c\u9898\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u5bb9\u6613\u53d1\u73b0\u4e0a\u9762\u4e24\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u7528\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u4e58\uff0c\u533a\u95f4\u67e5\u8be2\u7ef4\u62a4\uff0c\u6545\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,m;\nconst int p=998244353; \nstruct vert{\n\tint num,mul,plu,size,tg;\n};\nint a[200005],b[200005];\nstruct sgt{\n\tvert f[2000005];\n\tvoid pushup(int now){\n\t\tf[now].num=(f[now*2].num+f[now*2+1].num)%p;\n\t\tf[now].size=f[now*2].size+f[now*2+1].size; \n\t}\n\tvoid pushdown(int now){\n\t\tf[now*2].num=(f[now*2].num*f[now].mul+f[now].plu*f[now*2].size)%p;\n\t\tf[now*2+1].num=(f[now*2+1].num*f[now].mul+f[now].plu*f[now*2+1].size)%p;\n\t\tf[now*2].mul=(f[now*2].mul*f[now].mul)%p;\n\t\tf[now*2+1].mul=(f[now*2+1].mul*f[now].mul)%p;\n\t\tf[now*2].plu=(f[now*2].plu*f[now].mul+f[now].plu)%p;\n\t\tf[now*2+1].plu=(f[now*2+1].plu*f[now].mul+f[now].plu)%p;\n\t\tf[now].mul=1;\n\t\tf[now].plu=0;\n\t}\n\tvoid init(int now,int id){\n\t\tf[now].mul=1;\n\t\tf[now].plu=0;\n\t\tf[now].num=0;\n\t\tf[now].size=1;\n\t}\n\tvoid build(int now,int l,int r){\n\t\tif(l==r){\n\t\t\tinit(now,l);\n\t\t\treturn ; \n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tf[now].mul=1;\n\t\tf[now].plu=0;\n\t\tbuild(now*2,l,mid);\n\t\tbuild(now*2+1,mid+1,r);\n\t\tpushup(now);\n\t}\n\tvoid modify1(int now,int l,int r,int ql,int qr,int mul1){\n\t\tif(ql<=l&&qr>=r){\n\t\t\tf[now].mul=(f[now].mul*mul1)%p;\n\t\t\tf[now].plu=(f[now].plu*mul1)%p;\n\t\t\tf[now].num=(f[now].num*mul1)%p;\n\t\t\treturn ;\n\t\t}\n\t\tif(ql>r||qr<l) return ;\n\t\tpushdown(now);\n\t\tint mid=(l+r)>>1;\n\t\tmodify1(now*2,l,mid,ql,qr,mul1);\n\t\tmodify1(now*2+1,mid+1,r,ql,qr,mul1);\n\t\tpushup(now);\n\t}\n\tvoid modify2(int now,int l,int r,int ql,int qr,int plu1){\n\t\tif(ql<=l&&qr>=r){\n\t\t\tf[now].plu=(f[now].plu+plu1)%p;\n\t\t\tf[now].num=(f[now].num+plu1*f[now].size)%p;\n\t\t\treturn ;\n\t\t}\n\t\tif(ql>r||qr<l) return ;\n\t\tpushdown(now);\n\t\tint mid=(l+r)>>1;\n\t\tmodify2(now*2,l,mid,ql,qr,plu1);\n\t\tmodify2(now*2+1,mid+1,r,ql,qr,plu1);\n\t\tpushup(now);\n\t}\n\tint qry(int now,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&qr>=r) return f[now].num;\n\t\tif(ql>r||qr<l) return 0;\n\t\tpushdown(now);\n\t\tint mid=(l+r)>>1;\n\t\treturn (qry(now*2,l,mid,ql,qr)+qry(now*2+1,mid+1,r,ql,qr))%p;\n\t}\n}tree;\nsigned main(){\n\tint n,k;\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\ttree.build(1,1,k);\n\tif(a[1]==-1){\n\t\ttree.modify2(1,1,k,1,k,1);\n\t}\n\telse{\n\t\ttree.modify2(1,1,k,a[1],a[1],1);\n\t}\n\tfor(int i=3;i<=n;i+=2){\n\t\tint sum=tree.qry(1,1,k,1,k);\n\t\ttree.modify1(1,1,k,1,k,p-1);\n\t\ttree.modify2(1,1,k,1,k,sum);\n\t\tif(a[i]!=-1){\n\t\t\tsum=tree.qry(1,1,k,a[i],a[i]);\n\t\t\ttree.modify1(1,1,k,1,k,0);\n\t\t\ttree.modify2(1,1,k,a[i],a[i],sum);\n\t\t}\n\t}\n\tint ans=tree.qry(1,1,k,1,k);\n\ttree.build(1,1,k);\n\tif(a[2]==-1){\n\t\ttree.modify2(1,1,k,1,k,1);\n\t}\n\telse{\n\t\ttree.modify2(1,1,k,a[2],a[2],1);\n\t}\n\tfor(int i=4;i<=n;i+=2){\n\t\tint sum=tree.qry(1,1,k,1,k);\n\t\ttree.modify1(1,1,k,1,k,p-1);\n\t\ttree.modify2(1,1,k,1,k,sum);\n\t\tif(a[i]!=-1){\n\t\t\tsum=tree.qry(1,1,k,a[i],a[i]);\n\t\t\ttree.modify1(1,1,k,1,k,0);\n\t\t\ttree.modify2(1,1,k,a[i],a[i],sum);\n\t\t}\n\t}\n\tans=ans*tree.qry(1,1,k,1,k)%p;\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1654184808,
        "uid": 116664,
        "name": "Daniel_lele",
        "ccfLevel": 8,
        "title": "CF1140E \u9898\u89e3"
    },
    {
        "content": "\u4e00\u4e2a\u5e8f\u5217\u662f\u597d\u7684\u5f53\u4e14\u4ec5\u5f53\u4e0d\u5b58\u5728\u4e00\u4e2a $i$ \u4f7f\u5f97 $b_i=b_{i-2}$\u3002\n\n\u5c06\u6570\u7ec4\u6309\u7167\u5947\u5076\u6027\u5206\u7c7b\uff0c\u95ee\u9898\u53d8\u6210\u4e86\u5e8f\u5217\u4e2d\u5df2\u7ecf\u6709\u4e00\u90e8\u5206\u88ab\u786e\u5b9a\uff0c\u8981\u786e\u5b9a\u672a\u786e\u5b9a\u7684\u90e8\u5206\uff0c\u4f7f\u5f97\u5e8f\u5217\u76f8\u90bb\u4e24\u9879\u4e0d\u76f8\u7b49\u7684\u65b9\u6848\u6570\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6ca1\u6709\u88ab\u786e\u5b9a\u7684\u6570\uff0c\u90a3\u4e48\u8bbe\u8fd9\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u662f $l$\uff0c\u7b54\u6848\u662f $k(k-1)^{l-1}$\u3002\n\n\u4e00\u4e2a\u5e8f\u5217\u4e2d\u5df2\u7ecf\u786e\u5b9a\u7684\u6570\u4f1a\u628a\u5e8f\u5217\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u6bcf\u6bb5\u90fd\u662f\u72ec\u7acb\u7684\u3002\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u6bb5\u53ef\u4ee5\u76f4\u63a5\u7b97\uff0c\u5982\u679c\u6bb5\u957f\u662f $l$\uff08\u4e0d\u5305\u542b\u5df2\u7ecf\u88ab\u786e\u5b9a\u7684\u6570\uff09\u7b54\u6848\u5c31\u662f $(k-1)^l$\u3002\n\n\u5426\u5219\uff0c\u8bbe $f(s,t,l)$ \u8868\u793a\u6bb5\u5f00\u5934\u7684\u6570\u88ab\u6307\u5b9a\u4e3a $s$\uff0c\u7ed3\u5c3e\u7684\u6570\u88ab\u6307\u5b9a\u4e3a $t$\uff0c\u6bb5\u957f\u4e3a $l$\uff08\u5305\u542b\u4e24\u4e2a\u88ab\u786e\u5b9a\u7684\u6570\uff09\u3002\n\n\u90a3\u4e48\u8fd9\u4e00\u6bb5\u4e2d\u53ef\u80fd\u5b58\u5728 $l-1$ \u4e2a\u76f8\u7b49\u7684\u4e24\u4e2a\u76f8\u90bb\u6570\uff0c\u5bf9\u8fd9\u4e9b\u76f8\u90bb\u6570\u8bbe\u96c6\u5408\u8868\u793a\u4e24\u4e2a\u6570\u76f8\u7b49\u7684\u6240\u6709\u65b9\u6848\uff0c\u7b54\u6848\u5c31\u662f\u88ab\u8fd9\u4e9b\u96c6\u5408\u5305\u542b\u6070\u597d $0$ \u6b21\u7684\u5143\u7d20\u4e2a\u6570\u3002\n\n\u8bbe $f(i)$ \u8868\u793a\u4efb\u610f\u94a6\u5b9a $i$ \u5bf9\u76f8\u90bb\u6570\u76f8\u7b49\u7684\u65b9\u6848\u6570\u7684\u548c\uff0c\u90a3\u4e48 $f(l-1)=[s=t]$\uff0c$f(l-2)=l-1$\uff0c\u5176\u4f59\u7684 $f(i)=\\binom{l-1}{i}k^{l-2-i}$\uff0c\u76f4\u63a5\u4e8c\u9879\u5f0f\u53cd\u6f14\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\u3002\n\n```cpp\n// Author: e3c8f1a924   Time: 2022\u5e7408\u670812\u65e5 \u661f\u671f\u4e94 09\u65f607\u520653\u79d2\n#include<cstdio>\nconstexpr const int p = 998244353;\nconstexpr int maintain(int x) { return x >= p ? x - p : x; }\nconstexpr int plus(int x, int y) { return maintain(x + y); }\nconstexpr int minus(int x, int y) { return maintain(x - y + p); }\nconstexpr int mul(int x, int y) { return 1ll * x * y % p; }\nint fac[200005], ifac[200005];\nint C(int x, int y) { return mul(fac[x], mul(ifac[y], ifac[x - y])); }\nint a[2][200005], f[200005], k[200005], K[200005], n;\nint F(int s, int t, int l) {\n\tif (l == 2) return (s != t);\n\tf[l - 1] = (s == t), f[l - 2] = l - 1;\n\tfor (int i = 0; i < l - 2; i++) f[i] = mul(C(l - 1, i), k[l - 2 - i]);\n\tint ret = 0;\n\tfor (int i = 0; i <= l - 1; i++) {\n\t\tif (i & 1) ret = minus(ret, f[i]);\n\t\telse ret = plus(ret, f[i]);\n\t}\n\treturn ret;\n}\nint main() {\n\tfac[0] = ifac[0] = ifac[1] = 1;\n\tfor (int i = 2; i <= 200000; i++) ifac[i] = mul(p - p / i, ifac[p % i]);\n\tfor (int i = 2; i <= 200000; i++) ifac[i] = mul(ifac[i - 1], ifac[i]);\n\tfor (int i = 1; i <= 200000; i++) fac[i] = mul(fac[i - 1], i);\n\tscanf(\"%d%d\", &n, k + 1), k[0] = K[0] = 1;\n\tfor (int i = 2; i <= n; i++) k[i] = mul(k[i - 1], k[1]);\n\tfor (int i = 1; i <= n; i++) K[i] = mul(K[i - 1], k[1] - 1);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", a[i % 2] + (i + 1) / 2);\n\tint ans = 1;\n\tfor (int d = 0; d < 2; d++) {\n\t\tif (!(n + d) / 2) continue;\n\t\tint lst = 0;\n\t\tfor (int i = 1; i <= (n + d) / 2; i++) {\n\t\t\tif (a[d][i] == -1) continue;\n\t\t\tif (lst == 0) ans = mul(ans, K[i - 1]);\n\t\t\telse ans = mul(ans, F(a[d][lst], a[d][i], i - lst + 1));\n\t\t\tlst = i;\n\t\t}\n\t\tif (lst == 0) ans = mul(ans, mul(k[1], K[(n + d) / 2 - 1]));\n\t\telse ans = mul(ans, K[(n + d) / 2 - lst]);\n\t}\n\tprintf(\"%d\\n\", ans);\n}\n```",
        "postTime": 1660267651,
        "uid": 106140,
        "name": "e3c12195e3beef64f29a",
        "ccfLevel": 7,
        "title": "\u6807\u9898"
    },
    {
        "content": "## \u3010\u524d\u8a00\u3011\n\u672c\u9898\u89e3\u89e3\u6cd5\u4f3c\u4e4e\u4e0e\u5176\u4ed6\u9898\u89e3\u76f8\u4f3c\uff0c\u4f46\u5199\u6cd5\u4e0a\u66f4\u4e3a\u6e05\u6670\uff0c\u601d\u8def\u4e5f\u7565\u6709\u4e0d\u540c\uff0c\u4e2a\u4eba\u611f\u89c9**\u8d85\u8be6\u7ec6**\uff0c\u5e76\u4e14\u4e5f\u8bb8\u80fd\u56de\u7b54\u90e8\u5206\u540c\u5b66\u7684\u95ee\u9898\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u80fd\u901a\u8fc7\uff0c\u4e5f\u5e0c\u671b\u80fd\u4e3a\u5176\u4ed6\u540c\u5b66\u4eec\u5e26\u6765\u4e00\u4e9b\u5e2e\u52a9\u3002\n\n## \u3010\u95ee\u9898\u8f6c\u5316\u3011\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u672c\u9898\u4e2d\u53ea\u6709\u53ef\u4ee5\u88ab\u6211\u4eec\u4eba\u4e3a\u6539\u53d8\u7684$-1$\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u6b64\u6211\u4eec\u8ba4\u8bc6\u5230\u6211\u4eec\u7684\u601d\u8def\u8981\u5f80$-1$\u4e0a\u53bb\u9760\u62e2\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u6ca1\u6709\u9650\u5236\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e00\u4e2a$-1$\u90fd\u6709$k$\u79cd\u53d6\u503c\uff0c\u53ef\u4ee5\u8003\u8651\u7528\u7ec4\u5408\u7684\u65b9\u6cd5\u53bb\u601d\u8003\u3002\n\n\u4e0b\u9762\u8003\u8651\u9650\u5236\u6761\u4ef6\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u6570\u7ec4\u4e2d\u4e0d\u80fd\u51fa\u73b0\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u8fde\u7eed\u56de\u6587\u4e32\uff0c\u800c\u5b9e\u9645\u4e0a\uff0c\u4e00\u65e6\u51fa\u73b0\u4e86\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u56de\u6587\u4e32\uff0c\u5c31\u610f\u5473\u7740\u5fc5\u7136\u51fa\u73b0\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a$3$\u7684\u56de\u6587\u4e32\uff0c\u4e14\u82e5\u8fd9\u4e2a\u957f\u5ea6\u4e3a$3$\u7684\u56de\u6587\u4e32\u6ca1\u6709\u51fa\u73b0\uff0c\u90a3\u4e48\u957f\u5ea6\u4e3a\u5176\u4ed6\u5947\u6570\u7684\u56de\u6587\u4e32\u5fc5\u7136\u4e0d\u4f1a\u51fa\u73b0\uff0c\u56e0\u4e3a\u4e00\u5207\u957f\u5ea6\u5927\u4e8e$3$\u7684\u5947\u6570\u957f\u56de\u6587\u4e32\u90fd\u5fc5\u7136\u4ece\u5176\u5bf9\u79f0\u8f74\u5f00\u59cb\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u6070\u4e3a$3$\u7684\u56de\u6587\u4e32\u3002\n\n\u7531\u4e8e\u4e0d\u80fd\u8ba9\u957f\u5ea6\u4e3a$3$\u7684\u56de\u6587\u4e32\u51fa\u73b0\uff0c\u800c\u56de\u6587\u4e32\u5bf9\u79f0\u8f74\u4e0a\u7684\u90a3\u4e00\u4e2a\u6570\u53c8\u5bf9\u662f\u5426\u56de\u6587\u7684\u9650\u5236\u6761\u4ef6\u6ca1\u6709\u5f71\u54cd\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u6bcf$3$\u4e2a\u8fde\u7740\u7684\u6570$a_{i-1},a_{i}a_{i+1}$\uff0c\u53ea\u9700\u8981\u8003\u8651$a_{i-1}$\u4e0e$a_{i+1}$\u7684\u5f02\u540c\u60c5\u51b5\u5373\u53ef\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf**\u4e00\u5bf9**\u76f8\u9694\u4e00\u4e2a\u6570\u7684\u6570\uff0c\u90fd\u8981\u4fdd\u8bc1\u5b83\u4eec\u662f\u4e0d\u540c\u7684\uff0c\u5373\u4e0b\u6807**\u90fd\u4e3a\u5947\u6570**\u7684**\u76f8\u90bb**\u7684\u6570\uff0c\u4e0e\u4e0b\u6807**\u90fd\u4e3a\u5076\u6570**\u7684**\u76f8\u90bb**\u7684\u6570\uff0c\u5fc5\u987b\u8981\u4fdd\u8bc1\u4e0d\u540c\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5947\u6570\u5076\u6570\u5206\u5f00\u5904\u7406\u3002\n\n\u7531\u6b64\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86**\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5217\uff0c\u5176\u4e2d-1\u53ef\u4ee5\u66ff\u6362\u4e3a1\u5230k\u7684\u4efb\u610f\u6574\u6570\uff0c\u95ee\u4f7f\u5176\u76f8\u90bb\u4e24\u4f4d\u4e92\u4e0d\u76f8\u540c\u7684\u65b9\u6848\u6570**\n\n## \u3010\u95ee\u9898\u7b80\u5316\u3011\n\n\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u6bb5\u8fde\u7eed\u7684$-1$\u5bf9\u5176\u4ed6\u8fde\u7eed\u7684$-1$\u6bb5\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff0c\u539f\u56e0\u5728\u4e8e\u4e00\u4e2a\u6570\u53ea\u53ef\u80fd\u5f71\u54cd\u5176**\u76f8\u90bb**\u7684\u6570\uff0c\u800c**\u975e**$-1$\u7684\u6570\u672c\u8eab\u5c31\u4e0d\u4f1a\u6539\u53d8\uff0c\u53ef\u4ee5\u770b\u4f5c\u8fd9\u4e9b\u6570**\u5207\u5272**\u4e86$-1$\u6784\u6210\u7684\u5e8f\u5217\u3002\n\n\u90a3\u4e48\u4e3a\u4e86\u4f7f\u95ee\u9898\u7b80\u5316\uff0c\u8003\u8651\u5c06$-1$\u6bb5\u5168\u90e8**\u5206\u522b**\u63d0\u53d6\u51fa\u6765\u3002\u5f62\u6210\u591a\u4e2a\u65b0\u7684\u4e14\u5b8c\u5168\u4e3a$-1$\u7684$-1$\u6bb5\u3002\n\n\u4f46\u662f\uff0c\u8003\u8651\u5230\u6bcf\u4e00\u4e2a$-1$\u6bb5\u4e24\u7aef\u7684\u6570\u4f1a\u5f71\u54cd\u8fd9\u4e2a$-1$\u6bb5\uff0c\u7531\u4e8e\u672c\u9898\u53ea\u8003\u8651\u5f02\u540c\u60c5\u51b5\uff0c\u6240\u4ee5\u4e24\u7aef\u6570\u7684\u5177\u4f53\u6570\u503c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u53ea\u9700\u8bb0\u5f55\u4e24\u7aef\u6570\u7684\u5f02\u540c\u5173\u7cfb\u5373\u53ef\uff0c\u5e76\u4e14\u7531\u4e8e\u8fd9\u4e9b$-1$\u6bb5\u5b8c\u5168\u4e3a$-1$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u8fd9\u4e9b\u6bb5\u7684\u957f\u5ea6\u5373\u53ef\u3002\n\n## \u3010\u95ee\u9898\u5206\u7c7b\u3011\n\n\u4e0b\u9762\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u88ab\u5206\u79bb\u51fa\u6765\u7684$-1$\u6bb5\u8fdb\u884c\u6c42\u89e3\u3002\n\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e9b$-1$\u6bb5\u53ef\u4ee5\u5206\u4e3a$4$\u7c7b\uff1a\n\n1\u3001\u4e24\u7aef\u90fd\u6709\u6570\uff0c\u4e14\u8fd9\u4e24\u6570\u4e0d\u540c\n\n2\u3001\u4e24\u7aef\u90fd\u6709\u6570\uff0c\u4e14\u8fd9\u4e24\u6570\u76f8\u540c\n\n3\u3001\u4e24\u7aef\u53ea\u6709\u4e00\u7aef\u6709\u6570\uff08\u81ea\u7136\u4e0d\u7528\u8003\u8651\u5f02\u540c\uff0c\u6bd5\u7adf\u53e6\u4e00\u8fb9\u8fde\u6570\u90fd\u6ca1\u6709\uff09\n\n4\u3001\u4e24\u7aef\u90fd\u6ca1\u6709\u5176\u4ed6\u6570\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u4e2d$3,4$\u4e24\u79cd\u60c5\u51b5\u53ea\u53ef\u80fd\u51fa\u73b0\u5728\u4e00\u5f00\u59cb\u6211\u4eec\u5207\u5272\u65f6\u7684**\u6bb5\u9996**\u6216**\u6bb5\u5c3e**\uff0c\u56e0\u6b64\u5207\u5272\u53ef\u4ee5\u8fd9\u4e48\u5b9e\u73b0\uff1a\n\n```cpp\nvector <pi> v;//type = 2(both side, same), type = 3(both side, different), type = 1(one side empty), type = 0(both side empty)\n\ninline void init(int st){//st = 1\u65f6\u5904\u7406\u5947\u6570\uff0cst=2\u65f6\u5904\u7406\u5076\u6570\n    int cnt = 0, l = 0;//cnt\u8bb0\u5f55\u8be5\u6bb5-1\u6570\uff0cl\u8bb0\u5f55\u8be5\u6bb5\u5de6\u4fa7\u7684\u6570\uff08\u4e3a0\u5219\u4e3a\u7a7a\uff09\n    for (register int i = st;i <= n;i += 2){\n        if(~a[i]){//\u5982\u679c\u4e0d\u4e3a-1\uff0c\uff08~(-1)=0\uff09\n            if(cnt){\n                if(!l) v.push_back(make_pair(cnt, 1));//\u5de6\u4fa7\u4e3a\u7a7a\uff0c\u4e14\u53f3\u4fa7\u88ab\u8bb0\u5f55\u5230\uff0c\u53ea\u6709\u4e00\u8fb9\u6709\u6570\n                else{\n                    if(l ^ a[i]) v.push_back(make_pair(cnt, 3));//\u4e0d\u76f8\u540c\n                    else v.push_back(make_pair(cnt, 2)); //\u76f8\u540c\n                }\n                cnt = 0;//\u6e05\u7a7a\u627e\u4e0b\u4e00\u6bb5\n            }\n            l = a[i];\n        }\n        else cnt ++;\n    }\n    if(cnt){//\u626b\u63cf\u5230\u6700\u540e\uff0c\u5982\u679c\u6700\u540e\u4e00\u6bb5\u6ca1\u6709\u88ab\u6e05\u7a7a\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e00\u6bb5\u53f3\u4fa7\u6ca1\u6709\u6570\n        if(!l) v.push_back(make_pair(cnt, 0));//\u4e24\u4fa7\u90fd\u6ca1\u6709\u6570\n        else v.push_back(make_pair(cnt, 1));//\u5de6\u4fa7\u6709\u6570\uff0c\u53f3\u4fa7\u6ca1\u6709\n    }\n}\n```\n\n\u590d\u6742\u5ea6\u663e\u7136$O(n)$\n\n## \u3010\u95ee\u9898\u6c42\u89e3\u3011\n\n\u5904\u7406\u5b8c\u6240\u6709\u7ec6\u8282\uff0c\u5f00\u59cb\u8003\u8651\u89e3\u51b3\u95ee\u9898\u3002\n\n\u9996\u5148\u5904\u7406\u95ee\u9898$1,2$\u3002\n\n\u4ed4\u7ec6\u4e00\u60f3\uff0c\u8bf6\uff1f\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u88f8\u7684$DP$\u5417\uff1f\n\n\u5bb9\u6613\u60f3\u5230\u8bbe\u7f6e\u72b6\u6001$dp[i][0/1]$\u8868\u793a\u957f\u5ea6\u4e3a$i$\u7684$-1$\u4e32\uff0c$0$\u4e24\u4fa7\u76f8\u540c\uff0c$1$\u4e24\u4fa7\u4e0d\u540c\u7684\u65b9\u6cd5\u6570\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5bb9\u6613\u8003\u8651\uff1a\n$$\ndp[i][0] = (k - 1) * dp[i - 1][1]\n \\\\dp[i][1] = (k - 2) * dp[i - 1][1] + dp[i - 1][0]\n$$\n\u8bc1\u660e\u4e5f\u5bb9\u6613\uff0c\u82e5\u8be5\u6bb5\u4e24\u4fa7\u76f8\u540c\uff0c\u5219\u7b2c$i$\u4e2a\u80fd\u53d6\u7684\u5fc5\u7136\u4e0d\u4e0e\u8be5\u6bb5\u5de6\u4fa7\u76f8\u540c\uff0c\u6545\u8fd9\u4e00\u4f4d\u6709$k-1$\u79cd\u53d6\u6cd5\uff0c\u4e14\u5fc5\u7136\u4f7f\u524d$i-1$\u4f4d\u4e24\u4fa7\u4e0d\u540c\uff0c\u6545$dp[i][0] = (k - 1) * dp[i - 1][1]$\n\n\u800c\u82e5\u4e24\u4fa7\u4e0d\u540c\uff0c\u5219\u7b2c$i$\u9879\u6709$k-2$\u79cd**\u4e0e\u5de6\u4fa7\u4e0d\u540c**\u7684\u53d6\u6cd5\uff0c\u4e14\u6709$1$\u79cd**\u4e0e\u5de6\u4fa7\u76f8\u540c**\u7684\u53d6\u6cd5\uff0c\u6545$dp[i][1] = (k - 2) * dp[i - 1][1] + dp[i - 1][0]$\n\n\u7531\u6b64\u89e3\u51b3\u4e86\u95ee\u9898$1,2$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u95ee\u9898$3,4$\uff0c\u53d1\u73b0\u5b83\u4eec\u5b8c\u5168\u53ef\u4ee5\u7531$1,2$\u8f6c\u5316\u800c\u6765\uff0c\u5341\u5206\u65b9\u4fbf\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u95ee\u9898$3$\uff0c\u7279\u5224\u5176\u957f\u5ea6\u4e3a$1$\u7684\u60c5\u51b5\uff0c\u6b64\u60c5\u51b5\u4e0b\u7b54\u6848\u663e\u7136\u4e3a$k-1$\uff0c\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c**\u4e0d\u53d7\u5f71\u54cd\u53ef\u4ee5\u81ea\u7531\u53d6**\u7684\u90a3\u4e00\u4e2a$-1$\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u5e38\u6570\uff0c\u540c\u6837\u5206\u7c7b\u8ba8\u8bba\u662f\u5426\u4e0e\u53e6\u4e00\u4fa7\u76f8\u540c\u3002\u6613\u5f97\u6709$k-1$\u79cd\u4e0e\u53e6\u4e00\u4fa7\u4e0d\u540c\uff0c\u6709$1$\u79cd\u4e0e\u53e6\u4e00\u4fa7\u76f8\u540c\uff0c\u8bbe\u5176\u957f\u5ea6\u4e3a$len$\uff0c\u5219\u7b54\u6848\u663e\u7136\u4e3a$(k-1)*dp[len-1][1]+dp[len-1][0]$\uff0c\u7531\u6b64\u5b8c\u6210\u4e86\u95ee\u9898$3$\u7684\u8f6c\u5316\u3002\n\n\u518d\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u8003\u8651\u95ee\u9898$4$\uff0c\u7528\u76f8\u540c\u7684\u601d\u8def\uff0c\u8ba8\u8bba\u5176**\u4e24\u7aef**$-1$\u7684\u60c5\u51b5\uff0c\u4e5f\u56e0\u6b64\u8981\u7279\u5224$len=1$\u4e0e$len=2$\u7684\u60c5\u51b5\uff0c$len=1$\u65f6\u663e\u7136\u7b54\u6848\u4e3a$k$\uff0c$len=2$\u65f6\u663e\u7136\u4e58\u6cd5\u539f\u7406\u7b54\u6848\u4e3a$k*(k-1)$\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\u4e86\uff0c\u8003\u8651\u53d6\u4e00\u4fa7\u7684$-1$\u6709$k$\u79cd\u53d6\u503c\uff0c\u7136\u540e\u5c31\u53d1\u73b0\u5269\u4e0b\u7684$len-1$\u4e2a\u6570\u6210\u4e3a\u4e86\u4e00\u4e2a\u95ee\u9898$3$\uff0c\u7136\u540e\u5c31\u80fd\u8f7b\u6613\u5f97\u51fa\u7b54\u6848$k * ((k-1)*dp[len-2][1]+dp[len-2][0])$\n\n\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\uff0c\u53ef\u89c1\u8fd9\u4e00\u90e8\u5206\u5904\u7406\u662f$O(1)$\u7684\uff0c\u7b97\u4e0a\u603b\u6bb5\u6570\u590d\u6742\u5ea6$O(n)$\uff0c\u800c$DP$\u4e0e\u9884\u5904\u7406\u590d\u6742\u5ea6\u4e5f\u662f$O(n)$\u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6$O(n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u3010\u601d\u8def\u8d85\u6e05\u6670de\u4ee3\u7801\u3011\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef long double LD;\ntypedef unsigned int UI;\ntypedef pair <int, int> pi;\n#define MOD 998244353\ntemplate <typename T>\ninline void read(T &x){\n    x = 0;int fu = 1;\n    char c = getchar();\n    while(c > 57 || c < 48){\n        if(c == 45) fu = -1;\n        c = getchar();\n    }\n    while(c <= 57 && c >= 48){\n        x = (x << 3) + (x << 1) + c - 48;\n        c = getchar();\n    }\n    x *= fu;\n}\ntemplate <typename T>\ninline void fprint(T x){\n    if(x < 0) putchar(45), x = -x;\n    if(x > 9) fprint(x / 10);\n    putchar(x % 10 + 48);\n}\n//\u4e0d\u8981\u5728\u610f\u4e0a\u9762\u7684\u5feb\u8bfb\u5feb\u8f93\nint n, a[200010];\nLL k;\nvector <pi> v;//type = 2(both side, same), type = 3(both side, different), type = 1(one side empty), type = 0(both side empty)\n\ninline void init(int st){//st = 1\u65f6\u5904\u7406\u5947\u6570\uff0cst=2\u65f6\u5904\u7406\u5076\u6570\n    int cnt = 0, l = 0;//cnt\u8bb0\u5f55\u8be5\u6bb5-1\u6570\uff0cl\u8bb0\u5f55\u8be5\u6bb5\u5de6\u4fa7\u7684\u6570\uff08\u4e3a0\u5219\u4e3a\u7a7a\uff09\n    for (register int i = st;i <= n;i += 2){\n        if(~a[i]){//\u5982\u679c\u4e0d\u4e3a-1\uff0c\uff08~(-1)=0\uff09\n            if(cnt){\n                if(!l) v.push_back(make_pair(cnt, 1));//\u5de6\u4fa7\u4e3a\u7a7a\uff0c\u4e14\u53f3\u4fa7\u88ab\u8bb0\u5f55\u5230\uff0c\u53ea\u6709\u4e00\u8fb9\u6709\u6570\n                else{\n                    if(l ^ a[i]) v.push_back(make_pair(cnt, 3));//\u4e0d\u76f8\u540c\n                    else v.push_back(make_pair(cnt, 2)); //\u76f8\u540c\n                }\n                cnt = 0;//\u6e05\u7a7a\u627e\u4e0b\u4e00\u6bb5\n            }\n            l = a[i];\n        }\n        else cnt ++;\n    }\n    if(cnt){//\u626b\u63cf\u5230\u6700\u540e\uff0c\u5982\u679c\u6700\u540e\u4e00\u6bb5\u6ca1\u6709\u88ab\u6e05\u7a7a\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e00\u6bb5\u53f3\u4fa7\u6ca1\u6709\u6570\n        if(!l) v.push_back(make_pair(cnt, 0));//\u4e24\u4fa7\u90fd\u6ca1\u6709\u6570\n        else v.push_back(make_pair(cnt, 1));//\u5de6\u4fa7\u6709\u6570\uff0c\u53f3\u4fa7\u6ca1\u6709\n    }\n}\nLL dp[100010][2];//dp\u6570\u7ec4\uff0c\u5177\u4f53\u4e0a\u9762\u6709\u8bb2\nLL ans = 1;\ninline void DP(){\n    dp[1][0] = k - 1;\n    dp[1][1] = k - 2;\n    for (register int i = 2;i <= (n >> 1) + 1;i ++){//\u7531\u4e8e\u5206\u6210\u4e86\u5947\u6570\u5076\u6570\uff0c\u957f\u5ea6\u9876\u591a\u4e00\u534a\n        dp[i][0] = ((k - 1) * dp[i - 1][1]) % MOD;\n        dp[i][1] = (((k - 2) * dp[i - 1][1]) % MOD + dp[i - 1][0]) % MOD;\n    }\n}\n\ninline void work(int len, int type){//\u5904\u74064\u7c7b\u95ee\u9898\n    if(type >= 2) ans = (ans * dp[len][type & 1]) % MOD;//\u4e24\u8fb9\u90fd\u6709\n    if(type == 1){//\u53ea\u6709\u4e00\u8fb9\u6709\n        if(len == 1) ans = (ans * (k - 1)) % MOD;\n        else ans = (ans * ((((k - 1) * dp[len - 1][1]) % MOD + dp[len - 1][0]) % MOD)) % MOD;\n    }\n    if(type == 0){//\u4e24\u8fb9\u90fd\u6ca1\u6709\n        if(len == 1) ans = (ans * k) % MOD;\n        else if(len == 2) ans = (ans * ((k * (k - 1)) % MOD)) % MOD;\n        else ans = (ans * (k * (((k - 1) * dp[len - 2][1] + dp[len - 2][0]) % MOD) % MOD) % MOD) % MOD;\n    }\n}\n\nint main(){\n    read(n);read(k);\n    for (register int i = 1;i <= n;i ++){\n        read(a[i]);\n        if(a[i] > 0 && i > 2 && a[i - 2] == a[i]){\u76f4\u63a5\u5224\u65ad\u539f\u6570\u7ec4\u662f\u5426\u6709\u5947\u6570\u957f\u5ea6\u7684\u56de\u6587\u4e32\uff0c\u82e5\u6709\u5219\u76f4\u63a5\u65e0\u89e3\u8f93\u51fa0\n            printf(\"0\\n\");\n            return 0;\n        }\n    }\n    init(1);init(2);DP();//\u9884\u5904\u7406\u52a0DP\uff08\u662f\u4e0d\u662f\u8d85\u6e05\u6670\uff1f\uff09\n    for (register int i = 0;i < v.size();i ++) work(v[i].first, v[i].second);//\u6bcf\u4e00\u6bb5\u5904\u7406\u4e00\u6b21\n    fprint(ans);putchar(10);\n    return 0;\n}\n```",
        "postTime": 1596521678,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1140E \u3010Palindrome-less Arrays\u3011"
    }
]