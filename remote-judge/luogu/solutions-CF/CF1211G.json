[
    {
        "content": "\u8003\u8651\u6700\u7ec8\u64cd\u4f5c\u7684\u4e00\u5b9a\u662f\u4e00\u6761\u94fe\uff0c\u56e0\u4e3a\u975e\u7b80\u5355\u8def\u5f84\u7684\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u67d0\u4e00\u6761\u7b80\u5355\u8def\u5f84\u3002\n\n\u5047\u8bbe\u6700\u7ec8\u64cd\u4f5c\u7684\u4e00\u5b9a\u662f\u6839\u5230\u67d0\u4e00\u4e2a\u70b9\u7684\u8def\u5f84\uff0c\u7136\u540e\u662f\u628a\u90a3\u4e2a\u70b9\u8f6c\u5230\u6839\u8fd9\u91cc\u6765\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u54c8\u5e0c\u4e86\uff0c\u8bb0\u5f55\u6839\u5230\u5f53\u524d\u70b9\u8def\u5f84\u7684 $b$ \u6570\u7ec4\u54c8\u5e0c\u503c\u4ee5\u53ca\u4e0d\u7b97\u4e0a\u6839\u7684 $a$ \u6570\u7ec4\u54c8\u5e0c\u503c\u3002\u7136\u540e\u770b\u770b\u628a $a$ \u5de6\u79fb\u4e00\u4f4d\u518d\u52a0\u4e0a\u6839\u7684 $a$ \u662f\u5426\u548c $b$ \u76f8\u7b49\uff0c\u5e76\u4e14\u8fd8\u8981\u6ee1\u8db3\u4e0d\u88ab\u7ecf\u8fc7\u7684\u5b50\u6811\u6bcf\u4e2a\u8282\u70b9\u7684 $a_i$ \u90fd\u7b49\u4e8e $b_i$\u3002\n\n\u7136\u540e\u73b0\u5728\u95ee\u9898\u5c31\u662f\u627e\u5230\u8fd9\u4e2a\u6839\uff0c\u76f4\u63a5\u628a $a$ \u4e0d\u7b49\u4e8e $b$ \u7684\u70b9\u6263\u51fa\u6765\u865a\u6811\u627e\u53f6\u5b50\u5c31\u884c\u4e86\u3002\u5b9e\u73b0\u662f\u4e0d\u9700\u8981\u5efa\u865a\u6811\uff0c\u4e0a\u9762\u53ea\u662f\u63cf\u8ff0\u7684\u5f62\u8c61\u4e00\u70b9\u800c\u5df2\uff08\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\u8fd9\u9898\u53ea\u5141\u8bb8 Kotlin \u8bed\u8a00\u7684\u63d0\u4ea4\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u6254\u5230 gym \u7684 mashup \u91cc\u7528 C++ \u63d0\u4ea4\u3002\n\n```c++\n// Lynkcat.\n// Problem: A. King's Path\n// Contest: Codeforces - 10.10\n// URL: https://codeforces.com/gym/403227/problem/A\n// Memory Limit: 256 MB\n// Time Limit: 5000 ms\n\n#include<bits/stdc++.h>\n#define poly vector<int>\n#define IOS ios::sync_with_stdio(false)\n#define ll long long\n#define mp make_pair\n#define mt make_tuple\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define inf 1e9\n#define mod 998244353\n#define mod1 1000000007\n#define int ll\n#define N 200005\nusing namespace std;\nint dep[N],ffa[N],v[N];\nint Ans;\nint tot=0;\nint a[N],b[N];\nint siz[N];\nint col[N];\npoly G[N];\nint Rt,Rt1;\nint n;\npa work(pa x,int y)\n{\n\tx.fi=(x.fi*233%mod+y)%mod;\n\tx.se=(x.se*233%mod1+y)%mod1;\n\treturn x;\n}\nvoid dfs1(int k,int fa)\n{\n\tffa[k]=fa;\n\tv[k]=(a[k]==b[k]);\n\tdep[k]=dep[fa]+1;\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tdfs1(u,k);\n\t\tv[k]&=v[u];\n\t}\n}\nvoid dfs(int k,int fa,pa x,pa y)\n{\n\tx=work(x,b[k]);\n\tif (fa)\n\t\ty=work(y,a[k]);\n\tint sum=0;\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tsum+=v[u];\n\t}\n\tif (fa)\n\t{\n\t\tpa z=y;\n\t\tz=work(z,a[Rt]);\n\t\tif (z==x&&sum==(int)G[k].size()-(k!=Rt))\n\t\t{\n\t\t\tif (dep[k]<dep[Ans]) Ans=k;\n\t\t}\n\t}\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tif (sum-v[u]==(int)G[k].size()-(k!=Rt)-1)\n\t\t{\n\t\t\tdfs(u,k,x,y);\n\t\t}\n\t}\n}\nvoid dfs2(int k,int fa)\n{\n\tsiz[k]=col[k];\n\tint tt=0;\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tdfs2(u,k);\n\t\tsiz[k]+=siz[u];\n\t\ttt+=(siz[u]>0);\n\t}\n\ttt+=(tot-siz[k])>0;\n\tif (tt==1&&a[k]!=b[k])\n\t{\n\t\tif (Rt) Rt1=k;\n\t\telse Rt=k;\n    }\n}\nvoid BellaKira()\n{\n\tcin>>n;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];col[i]=0;\n\t}\n\tbool ans=1;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tcin>>b[i];\n\t\tans&=(a[i]==b[i]);\n\t}\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tG[x].push_back(y);\n\t\tG[y].push_back(x);\n\t}\n\tif (ans)\n\t{\n\t\tfor (int i=1;i<=n;i++) poly().swap(G[i]);\n\t\tcout<<\"Yes\\n\";\n\t\tcout<<\"0\\n\";\n\t\treturn;\n\t}\n\tRt=0,Rt1=0;tot=0;\n\tfor (int i=1;i<=n;i++)\n\t\tif (a[i]!=b[i])\n\t\t{\n\t\t\tcol[i]=1;\n\t\t\ttot++;\n\t\t}\n\tdfs2(1,0);\n\tAns=0;\n\tdep[0]=0;\n\tdfs1(Rt,0);\n\tdep[0]=inf;\n\tdfs(Rt,0,mp(0,0),mp(0,0));\n\tif (Ans)\n\t{\n\t\tcout<<\"Yes\\n\";\n\t\tcout<<dep[Ans]<<'\\n';\n\t\tpoly g;\n\t\twhile (Ans)\n\t\t{\n\t\t\tg.push_back(Ans);\n\t\t\tAns=ffa[Ans];\n\t\t}\n\t\treverse(g.begin(),g.end());\n\t\tfor (auto u:g) cout<<u<<\" \";\n\t\tcout<<'\\n';\n\t\tfor (int i=1;i<=n;i++) poly().swap(G[i]);\n\t\treturn;\n\t}\n\tif (!Rt1) \n\t{\n\t\tcout<<\"No\\n\";\n\t\tfor (int i=1;i<=n;i++) poly().swap(G[i]);\n\t\treturn;\n\t}\n\t\n\tswap(Rt,Rt1);\n\tdep[0]=0;\n\tdfs1(Rt,0);\n\tdep[0]=inf;\n\tdfs(Rt,0,mp(0,0),mp(0,0));\n\tif (Ans)\n\t{\n\t\tcout<<\"Yes\\n\";\n\t\tcout<<dep[Ans]<<'\\n';\n\t\tpoly g;\n\t\twhile (Ans)\n\t\t{\n\t\t\tg.push_back(Ans);\n\t\t\tAns=ffa[Ans];\n\t\t}\n\t\treverse(g.begin(),g.end());\n\t\tfor (auto u:g) cout<<u<<\" \";\n\t\tcout<<'\\n';\n\t\tfor (int i=1;i<=n;i++) poly().swap(G[i]);\n\t\treturn;\n\t}\n\tcout<<\"No\\n\";\n\tfor (int i=1;i<=n;i++) poly().swap(G[i]);\n}\nsigned main()\n{\n\tIOS;\n\tcin.tie(0);\n\tint T=1;\n\tcin>>T;\n\twhile (T--)\n\t{\n\t\tBellaKira();\n\t}\n}\n```",
        "postTime": 1665543235,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1211G King's Path"
    }
]