[
    {
        "content": "\u4e3a\u5565\u524d\u4e00\u7bc7\u9898\u89e3\u7684\u505a\u6cd5\u8fd9\u4e48\u9634\u95f4\u554a\u3002\n\n\u5176\u5b9e\u4e0d\u662f\u5f88\u96be\uff0c\u8003\u8651\u6700\u540e\u6811\u4e00\u5b9a\u662f $1$ \u4e3a\u6839\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u5728 $1$ \u5de6\u8fb9\u6709\u4e00\u68f5\u6811\uff0c\u53f3\u8fb9\u6709\u4e00\u68f5\u6811\u3002\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\u5df2\u77e5\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u6bcf\u4e2a\u524d\u7f00\u7684\u7b1b\u5361\u5c14\u6811\u6df1\u5ea6\u3002\n\n\u8fd9\u4e2a\u76f4\u63a5\u5728\u5355\u8c03\u6808\u5efa\u6811\u7684\u65f6\u5019\u76f4\u63a5\u7edf\u8ba1\u5c31\u597d\u4e86\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u8bb0\u5f55 $dep_i$ \u8868\u793a $i$ \u4e0b\u9762\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u52a0\u5165\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u5220\u6389\u7684\u70b9\u91cc\u627e\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u7136\u540e\u524d\u7f00\u505a\u4e00\u904d\uff0c\u540e\u7f00\u505a\u4e00\u904d\uff0c\u76f4\u63a5\u5408\u5e76\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e5+5;\nint st[N],top,dep[N];\nvoid work(vector<int> &vec,int *f){\n    if(vec.size()){\n        f[1]=1;\n        st[top=1]=vec[0],dep[1]=0;\n        for(int i=1;i<vec.size();i++){\n            f[i+1]=f[i];\n            if(vec[i]>st[top])st[++top]=vec[i],f[i+1]=max(f[i+1],top),dep[top]=0;\n            else {\n                int s=0;\n                while(st[top]>vec[i]&&top)s=max(s,top+1+dep[top]),top--;\n                f[i+1]=max(f[i+1],s);\n                st[++top]=vec[i],dep[top]=s-top;\n            }\n        }\n    }\n    for(int i=0;i<=vec.size();i++)f[i]++;\n}\nint n,a[N],f[N],g[N],ans1=1e9;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    for(int i=n+1;i<=2*n;i++)a[i]=a[i-n];\n    int k=0;\n    for(int i=1;i<=n;i++)if(a[i]==1){\n        vector<int> vec;\n        for(int j=i+1;j<i+n;j++)vec.push_back(a[j]);\n        work(vec,f);\n        reverse(vec.begin(),vec.end());\n        work(vec,g);\n        k=i-1;\n    }\n    for(int i=0;i<n;i++)ans1=min(ans1,max(g[i],f[n-1-i]));\n    printf(\"%d \",ans1);\n    for(int i=0;i<n;i++)if(max(g[i],f[n-1-i])==ans1)return printf(\"%d\\n\",(k-i+n)%n),0;\n}\n```",
        "postTime": 1653958774,
        "uid": 98490,
        "name": "houzhiyuan",
        "ccfLevel": 7,
        "title": "CF1220F"
    },
    {
        "content": "~~\u6253\u514b\u9686\u8d5b\u7684\u65f6\u5019\u6253\u4e71\u4e86\u9898\u76ee\u987a\u5e8f\uff0c\u5728\u5199\u5b8c ABC \u4e4b\u540e\u5f00\u59cb\u627e D \u9898\uff0c\u89c9\u5f97\u8fd9\u9898\u4f3c\u4e4e\u53ef\u505a\u5c31\u5f00\u809d\u4e86\uff0c\u54ea\u77e5\u9053\u505a\u4e86\u4e2a F\u3002~~\n\n\u5148\u8003\u8651\u751f\u6210\u539f\u5e8f\u5217\u7684\u7b1b\u5361\u5c14\u6811\uff0c\u7136\u540e\u628a\u6700\u540e\u4e00\u4e2a\u6570\u5220\u6389\uff0c\u52a0\u5230\u6700\u524d\u9762\u53bb\u3002\n\n\u5047\u8bbe\u4e00\u5f00\u59cb\u662f $5~2~1~3~6~4$ \u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/44t8ar32.png)\n\n\n\u628a $4$ \u4e22\u5230\u524d\u9762\u53d8\u6210\u4e86 $4~5~2~1~3~6$\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qtn9fi46.png)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8bbe\u5220\u9664\u7684\u662f\u6700\u540e\u4e00\u4e2a\u6570\u4e3a $x$\uff0c\u5b83\u662f\u6ca1\u6709\u53f3\u513f\u5b50\u7684\uff0c\u800c\u4e14\u5176\u5de6\u5b50\u6811\u7684\u8303\u56f4\u5c31\u662f\u4e0a\u4e00\u4e2a\u5c0f\u4e8e\u5b83\u7684\u6570\u5230\u5b83\u7684\u8fd9\u4e2a\u533a\u95f4\uff08\u5982\u4e0a\u8ff0\u521d\u59cb\u5e8f\u5217\u7684\u4f4d\u7f6e $(4,6)$\uff09\u3002\u5220\u6389\u5b83\u540e\uff0c\u5b83\u7684\u5de6\u513f\u5b50\u4f1a\u4ee3\u66ff\u5b83\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5b83\u7684\u5de6\u5b50\u6811\u7684\u603b\u4f53\u6df1\u5ea6\u4f1a\u51cf\u4e00\u3002\n\n\u540c\u6837\u7684\uff0c\u8003\u8651\u5206\u6790\u628a\u6570 $x$ \u63d2\u5230\u6700\u524d\u9762\u53bb\uff0c\u5b83\u662f\u6ca1\u6709\u5de6\u513f\u5b50\u7684\uff0c\u800c\u4e14\u5176\u53f3\u5b50\u6811\u7684\u8303\u56f4\u5c31\u662f\u5b83\u5230\u4e0b\u4e00\u4e2a\u5c0f\u4e8e\u5b83\u7684\u6570\u7684\u8fd9\u4e2a\u533a\u95f4\uff08\u5982\u4e0a\u8ff0\u4fee\u6539\u540e\u7684\u5e8f\u5217\u4f4d\u7f6e $(1,3)$\uff09\u3002\u52a0\u5165\u5b83\u540e\uff0c\u5b83\u6240\u5360\u7684\u5730\u65b9\u7684\u5b50\u6811\u4f1a\u53d8\u6210\u5b83\u7684\u53f3\u5b50\u6811\uff0c\u6240\u4ee5\u8fd9\u4e00\u6bb5\u7684\u603b\u4f53\u6df1\u5ea6\u4f1a\u52a0\u4e00\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\u4e4b\u540e\u5c31\u53ef\u4ee5\u52a8\u6001\u7ef4\u62a4\u8fd9\u68f5\u7b1b\u5361\u5c14\u6811\u7684\u6df1\u5ea6\u3002\u53ea\u9700\u8981\u5199\u4e2a\u652f\u6301\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6c42 $\\min$ \u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\u81f3\u4e8e\u627e\u533a\u95f4\u5185\u4e0b\u4e00\u4e2a/\u4e0a\u4e00\u4e2a\u5c0f\u4e8e\u67d0\u4e2a\u6570\u7684\u503c\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u52a0 ST \u8868\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u8003\u65f6\u4ee3\u7801\u6c42\u8f7b\u55b7\uff09\n\n```cpp\n#include <bits/stdc++.h>\n#define RI register int\ntypedef long long LL;\n\n#define FILEIO(name) freopen(name\".in\", \"r\", stdin), freopen(name\".out\", \"w\", stdout);\n\nusing namespace std;\n\nchar buf[1000000], *p1 = buf, *p2 = buf;\ninline char gc() {\n  if (p1 == p2) p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin);\n  return p1 == p2 ? EOF : *(p1++);\n}\ntemplate <class T> inline void read(T &n) {\n  n = 0; RI ch = gc(), f;\n  while ((ch < '0' || ch > '9') && ch != '-') ch = gc();\n  f = (ch == '-' ? ch = gc(), -1 : 1);\n  while (ch >= '0' && ch <= '9') n = n * 10 + (ch ^ 48), ch = gc();\n  n *= f;\n}\n\nint const MAXN = 4e5 + 5;\nint a[MAXN], b[MAXN];\nint Mn[MAXN][21];\nint child[MAXN][2], stk[MAXN], val[MAXN];\nint D[MAXN];\nint LOG[MAXN];\nint Mx[MAXN * 4], tag[MAXN * 4];\n\nvoid Dfs(int now, int dep) {\n  D[now] = dep;\n  if (child[now][0]) Dfs(child[now][0], dep + 1);\n  if (child[now][1]) Dfs(child[now][1], dep + 1);\n}\ninline int GetMin(int l, int r) {\n  int k = LOG[r - l + 1];\n  return min(Mn[l][k], Mn[r - (1 << k) + 1][k]);\n}\n\n#define lc (x << 1)\n#define rc (x << 1 | 1)\ninline void Update(int x) { Mx[x] = max(Mx[lc], Mx[rc]); }\ninline void Add(int x, int num) { Mx[x] += num, tag[x] += num; }\ninline void Pushdown(int x) { if (tag[x]) Add(lc, tag[x]), Add(rc, tag[x]), tag[x] = 0; }\nvoid Modify(int x, int l, int r, int i, int j, int num) {\n  if (i <= l && r <= j) return Add(x, num);\n  Pushdown(x);\n  int mid = (l + r) >> 1;\n  if (i <= mid) Modify(lc, l, mid, i, j, num);\n  if (j > mid) Modify(rc, mid + 1, r, i, j, num);\n  Update(x);\n}\nint Query(int x, int l, int r, int i, int j) {\n  if (i <= l && r <= j) return Mx[x];\n  Pushdown(x);\n  int mid = (l + r) >> 1, re = -1;\n  if (i <= mid) re = max(re, Query(lc, l, mid, i, j));\n  if (j > mid) re = max(re, Query(rc, mid + 1, r, i, j));\n  return re;\n}\n#undef lc\n#undef rc\n\nint main() {\n  \n#ifdef LOCAL\n  FILEIO(\"a\");\n#endif\n\n  int n; read(n);\n  LOG[1] = 0;\n  for (RI i = 2; i <= n + n; ++i)\n    LOG[i] = LOG[i >> 1] + 1;\n  for (RI i = 1; i <= n; ++i) read(b[i]);\n  for (RI i = 1; i <= n; ++i)\n    if (b[i] == 1) {\n      for (RI j = 1; j <= n; ++j, i = i % n + 1)\n        a[j] = b[i];\n      break;\n    }\n  for (RI i = n + 1; i <= n + n; ++i) a[i] = a[i - n];\n  for (RI i = 1; i <= n + n; ++i)\n    Mn[i][0] = a[i];\n  for (RI k = 1; k <= 19; ++k)\n    for (RI i = 1; i + (1 << k) - 1 <= n + n; ++i)\n      Mn[i][k] = min(Mn[i][k - 1], Mn[i + (1 << (k - 1))][k - 1]);\n\n/* \u6784\u9020\u521d\u59cb\u7b1b\u5361\u5c14\u6811 */\n\n  int L = n + 1, R = n + n, top = 0;\n  for (RI i = L; i <= R; ++i) {\n    int x = a[i];\n    while (top && val[top] > x) --top;\n    if (top) child[stk[top]][1] = i;\n    child[i][0] = stk[top + 1];\n    stk[++top] = i;\n    val[top] = x;\n    stk[top + 1] = 0;\n  }\n \n  Dfs(n + 1, 1);\n  for (RI i = L; i <= R; ++i)\n    Modify(1, 1, n + n, i, i, D[i]);\n  int tmp = Query(1, 1, n + n, L, R);\n  int ans = 0x7f7f7f7f, anspos = 0;\n  if (tmp < ans) ans = tmp, anspos = L;\n  \n  for (RI i = n; i > 1; --i) {\n  \n  /* \u5220\u6389\u6700\u540e\u4e00\u4e2a */\n    int del = i + n;\n    int l = L, r = R - 1, mid, pos;\n    while (l <= r) {\n      mid = (l + r) >> 1;\n      if (GetMin(mid, R) < a[del]) pos = mid, l = mid + 1;\n      else r = mid - 1;\n    }\n    Modify(1, 1, n + n, pos + 1, del, -1);\n    \n/* \u628a\u521a\u521a\u5220\u6389\u7684\u63d2\u5230\u7b2c\u4e00\u4e2a */\n\n    int ins = i;\n    l = L, r = R - 1;\n    while (l <= r) {\n      mid = (l + r) >> 1;\n      if (GetMin(L, mid) < a[ins]) pos = mid, r = mid - 1;\n      else l = mid + 1;\n    }\n    int Deep = Query(1, 1, n + n, pos, pos);\n    Modify(1, 1, n + n, ins, ins, Deep);\n    Modify(1, 1, n + n, ins, pos - 1, 1);\n\n    --L, --R;\n    int tmp = Query(1, 1, n + n, L, R);\n    if (tmp < ans)\n      ans = tmp, anspos = L;\n  }\n  int k = a[anspos];\n  for (RI i = 1; i <= n; ++i)\n    if (k == b[i])\n      printf(\"%d %d\\n\", ans, i - 1);\n\n  return 0;\n}\n\n// created by Daniel yuan\n\n```\n",
        "postTime": 1587651916,
        "uid": 71955,
        "name": "Daniel_yuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1220F \u3010Gardener Alex\u3011"
    }
]