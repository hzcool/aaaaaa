[
    {
        "content": "\u4e0d\u59a8\u94a6\u5b9a $1$ \u4e3a\u6839\u5206\u6790\u3002 \n\n\u8003\u8651\u5982\u4e0b\u95ee\u9898\uff1a\u6070\u6709\u4e00\u4e2a\u4ea4\u70b9\u7684\u4e24\u6761\u94fe\u4f1a\u957f\u6210\u4ec0\u4e48\u6837\u5b50\u3002\n\n\u5176\u5b9e\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\u4e00\u662f\u5b83\u4eec\u7684 $\\text{LCA}$ \u76f8\u540c\uff0c\u800c\u662f\u5b83\u4eec\u7684 $\\text{LCA}$ \u4e0d\u540c\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n![image.png](https://i.loli.net/2021/02/19/GCde8hplymbBWYR.png)\n\n\u5de6\u56fe\u4e2d `LCA` \u8868\u793a\u4e24\u6761\u94fe $A, B$ \u516c\u5171\u7684 $\\text{LCA}$\uff0c\u800c\u53f3\u56fe\u4e2d `LCA` \u5219\u662f $A$ \u7684 $\\text{LCA}$\uff08\u4e5f\u5c31\u662f\u4e24\u6761\u94fe\u7684 $\\text{LCA}$ \u4e2d\u8f83\u6df1\u7684\u90a3\u4e00\u4e2a\uff09\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u6761\u94fe $(u, v)$\uff0c\u6c42\u51fa\u5b83\u7684\u4e09\u4e2a\u503c\uff1a$lca, a, b$\u3002$a$ \u8868\u793a $u$ \u5728 $lca$ \u7684\u54ea\u4e00\u68f5\u5b50\u6811\u4e2d\uff0c$b$ \u8868\u793a $v$ \u5728 $lca$ \u7684\u54ea\u4e00\u68f5\u5b50\u6811\u4e2d\u3002\u6216\u8005\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u8bbe $u$ \u4e0e $lca$ \u7684\u6df1\u5ea6\u5dee\u4e3a $k$\uff0c\u5219 $a$ \u662f $u$ \u7684 $k-1$ \u7ea7\u7956\u5148\uff0c$b$ \u662f $v$ \u7684 $k-1$ \u7ea7\u7956\u5148\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u53ef\u80fd $u, v$ \u4e92\u4e3a\u7956\u5148\u2014\u540e\u4ee3\u5173\u7cfb\uff0c\u6bd4\u5982 $u$ \u662f $v$ \u7684\u7956\u5148\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u94a6\u5b9a $a$ \u4e3a\u4e00\u4e2a**\u65b0\u5f00\u7684\u70b9**\uff0c\u907f\u514d\u5bf9\u540e\u9762\u7684\u7edf\u8ba1\u9020\u6210\u5f71\u54cd\u3002\u540c\u65f6\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8bf7\u786e\u4fdd $a<b$\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6362 $u, v$ \u548c $a, b$ \u5f88\u7b80\u5355\u7684\u8fbe\u5230\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5206\u522b\u8003\u8651\u6c42\u51fa\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u5148\u8003\u8651\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684\u94fe\u5148\u6309 $lca$ \u7684\u6df1\u5ea6\uff0c\u518d\u6309 $lca$ \u6392\u5e8f\u3002\u5bf9\u4e8e $lca$ \u76f8\u540c\u7684\u4e00\u4e9b\u94fe\uff0c\u663e\u7136\u6211\u4eec\u6c42\u7684\u5c31\u662f **$\\boldsymbol{a_x, b_x, a_y, b_y(a_x<a_y)}$ \u4e92\u4e0d\u76f8\u540c\u7684\u94fe\u5bf9 $\\boldsymbol{(x, y)}$** \u7684\u6570\u91cf\u3002\u4e3a\u4e86\u786e\u4fdd\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u6211\u4eec\u4e0d\u59a8\u6309\u7167 $a$ **\u4e25\u683c\u9012\u589e**\u7684\u987a\u5e8f\u53bb\u4e00\u6bb5\u4e00\u6bb5\u5730\u679a\u4e3e\u94fe $y$\uff0c\u540c\u65f6\u5f00\u4e2a\u6876 $buk_i$ \u8bb0\u5f55\u4e00\u4e0b\u4ece\u5b50\u6811 $i$ \u4e2d\u4f38\u51fa\u6765\u7684\u94fe\u7684\u6761\u6570\u3002\u6bcf\u6b21 $ans \\gets ans + cnt - buk_{b_y}$\uff0c\u7136\u540e\u5206\u522b\u628a $buk_{a_y}, buk_{b_y} + 1$ \u5c31\u597d\u4e86\u3002\u4e0a\u9762 $cnt$ \u8868\u793a\u7684\u662f\u5df2\u7ecf\u679a\u4e3e\u8fc7\u7684\u94fe\u7684\u6761\u6570\u3002\u5177\u4f53\u7ec6\u8282\u53c2\u8003\u4ee3\u7801\u3002\n\n\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u628a\u6240\u6709\u7684\u94fe\u5148\u6309 $lca$ \u7684\u6df1\u5ea6\uff0c\u518d\u6309 $lca$ \u6392\u5e8f\u3002\u8bbe\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5bf9\u5e94 $\\text{DFS}$ \u5e8f\u4e0a $[\\textit{ldf}_u, \\textit{rdf}_u]$ \u8fd9\u4e00\u6bb5\u3002\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e2a $\\text{DFS}$ \u5e8f\uff0c\u6bcf\u6b21 $ans \\gets ans + \\operatorname{Sum}(\\textit{ldf}_{lca}, \\textit{rdf}_{lca})$\uff0c\u7136\u540e\u5982\u679c $a$ \u4e0d\u662f\u65b0\u5efa\u7684\u70b9\u7684\u8bdd\uff0c$ans \\gets ans - \\operatorname{Sum}(\\textit{ldf}_{a}, \\textit{rdf}_{a})$\uff0c$b$ \u540c\u7406\u3002\u6700\u7ec8\u6211\u4eec\u628a $\\text{DFS}$ \u5e8f\u4e0a\u7684 $x$ \u548c $y$ \u4f4d\u7f6e\u5206\u522b $+1$ \u5c31\u53ef\u4ee5\u4e86\u3002\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u6309\u7167\u4e0a\u9762\u7684\u505a\u6cd5\u662f\u4e00\u4e2a $\\log$ \u7684\uff0c\u4f46\u662f\u901a\u8fc7\u4e00\u4e9b\u5947\u6280\u6deb\u5de7\u53ef\u4ee5\u4f18\u5316\u6210\u7ebf\u6027\uff0c\u8fd9\u91cc\u4e0d\u518d\u8ba8\u8bba\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u63a8\u8350\u5154\u961f\u957f\u7684[\u8d5b\u65f6\u63d0\u4ea4](https://codeforces.com/contest/1486/submission/107847205)\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u5199\u7684\u5f88\u6e05\u6670\u4e86\u3002",
        "postTime": 1613714159,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1486F \u3010Pairs of Paths\u3011"
    },
    {
        "content": "### [\u3010\u539f\u9898\u94fe\u63a5\u3011](http://9ng.cn/UvWH)\n\n\u63d0\u4f9b\u4e00\u79cd\u5145\u5206\u53d1\u626c\u4eba\u7c7b\u667a\u6167\u7684\u89e3\u6cd5\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u4e3a\u4e86\u65b9\u4fbf\u53d9\u8ff0\uff0c\u6211\u4eec\u91c7\u53d6\u4ee5\u4e0b\u79f0\u8c13\uff1a\u9898\u76ee\u4e2d\u7ed9\u7684\u90a3 $m$ \u6761\u94fe\u6210\u4e3a**\u5173\u952e\u94fe**\uff1b\u6bcf\u4e00\u6761\u94fe\u4e24\u4e2a\u7aef\u70b9\u7684 $\\text{LCA}$ \u53eb\u505a\u8fd9\u6761\u94fe\u7684**\u9876\u70b9**\uff1b\u5728\u8fd9\u6761\u94fe\u4e0a\u9876\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u79f0\u4e3a **\u5173\u952e\u70b9**\uff1b\u7279\u522b\u5730\uff0c\u5982\u679c\u4e00\u6761\u94fe\u53ea\u6709\u4e00\u4e2a\u6216\u8005\u6ca1\u6709\u5173\u952e\u70b9\uff0c\u6211\u4eec\u94a6\u5b9a\u4e00\u4e2a\u65b0\u70b9\uff08\u7f16\u53f7 $n+1,n+2,\\dots$\uff09\u9876\u66ff\u5173\u952e\u70b9\u7684\u4f4d\u7f6e\uff0c\u4fbf\u4e8e\u5904\u7406\u3002\n\n\u9996\u5148\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n### \u4e24\u6761\u94fe\u7684\u9876\u70b9\u76f8\u540c\uff1a\n\n\u6211\u4eec\u7528\u4e00\u6761\u94fe\u53bb\u6570\u548c\u8fd9\u6761\u94fe\u9876\u70b9\u76f8\u540c\u4e14\u53ea\u6709\u4e00\u4e2a\u4ea4\u70b9\u7684\u94fe\u7684\u6570\u91cf\u3002\u5047\u8bbe\u8fd9\u4e2a\u6570\u91cf\u4e3a $cnt_1$\uff0c\u5219\n\n$$cnt_1=|\\{\\text{\u9876\u70b9\u4e0e\u8be5\u94fe\u76f8\u540c}\\}|-|\\{\\text{\u6709\u4e00\u4e2a\u5173\u952e\u70b9\u76f8\u540c}\\}|+|\\{\\text{\u4e24\u4e2a\u5173\u952e\u70b9\u90fd\u76f8\u540c}\\}|$$\n\n\u8fd9\u91cc\u7684\u7edf\u8ba1\u53ef\u4ee5\u7528\u6876\u548c `map` \u5b8c\u6210\u3002\n\n### \u4e24\u6761\u94fe\u7684\u9876\u70b9\u4e0d\u540c\uff1a\n\n\u5f15\u5165\uff1a\u5982\u679c\u6ca1\u6709\u4ea4\u70b9\u4ec5\u6709\u4e00\u4e2a\u7684\u9650\u5236\u5e94\u8be5\u600e\u4e48\u505a\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6761\u5173\u952e\u94fe\uff0c\u6211\u4eec\u628a\u94fe\u4e0a\u7684\u70b9\u70b9\u6743 $+1$\uff0c\u628a\u94fe\u4e0a\u7684\u8fb9\u8fb9\u6743 $-1$\u3002\u7136\u540e\uff0c\u4f60\u4f1a\u795e\u5947\u5730\u53d1\u73b0\uff0c\u5982\u679c\u4f60\u67e5\u8be2\u67d0\u6761\u94fe\u4e0a\u7684\u70b9\u6743\u4e0e\u8fb9\u6743\u4e4b\u548c\uff0c\u6bcf\u6761\u548c\u5176\u76f8\u4ea4\u5173\u952e\u94fe\u7684\u8d21\u732e\u521a\u597d\u662f $1$\uff0c\u4f60\u4e5f\u5c31\u77e5\u9053\u4e86\u7ecf\u8fc7\u67e5\u8be2\u94fe\u7684\u94fe\u4e2a\u6570\u3002\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/uyse2c91.png)\n\n\u5982\u4e0a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u6811\u4e0a\u5dee\u5206\u548c\u524d\u7f00\u548c\u8f7b\u677e\u89e3\u51b3\uff0c\u4e8e\u662f\u6211\u4eec\u77e5\u9053\u4e86\u4e0e\u8be2\u95ee\u94fe\u76f8\u4ea4\u7684\u5173\u952e\u94fe\u6570\u3002\n\n\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c\u7684\u601d\u8def\u3002\u76ee\u6807\u662f\u627e\u51fa\u6765**\u4e0d\u7b26\u5408\u89c4\u5b9a**\uff0c\u5373\u4ea4\u70b9\u5927\u4e8e\u4e00\u4e2a\u7684\u5173\u952e\u94fe\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u5173\u952e\u94fe\uff0c\u6211\u4eec\u8fd9\u6837\u6539\u4e00\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/swhyemnm.png)\n\n\u5728\u8fd9\u79cd\u5904\u7406\u65b9\u6cd5\u4e2d\uff0c\u9876\u70b9\u76f8\u540c\u7684\u94fe\u5bf9\u4f1a\u88ab\u7b97\u4e24\u6b21\u3002\u4f46\u662f\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u5904\u7406\u4e86\u9876\u70b9\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u51cf\u56de\u53bb\u5373\u53ef\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u8fd1\u4e4e\u5b8c\u7f8e\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u95ee\u9898\u7ed3\u675f\u4e86\u5417\uff1f\u6ca1\u6709\uff0c\u8003\u8651\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u3002\n\n### \u7279\u4f8b\u4ee5\u53ca\u7279\u4f8b\u7684\u7279\u4f8b\uff1a\n\n\u8003\u8651\u5982\u4e0b\u65b9\u5f0f\u7684\u8be1\u5f02\u5173\u952e\u94fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z41ete4q.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u79cd\u5173\u952e\u94fe\u7684\u8d21\u732e\u4e3a $2$\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u52a0\u56de\u4e00\u4e2a\u5173\u952e\u70b9\u4e0e\u67e5\u8be2\u94fe\u5b8c\u5168\u76f8\u540c\u7684\u5173\u952e\u94fe\u4e2a\u6570\u3002\n\n\u518d\u8003\u8651\u5982\u4e0b\u65b9\u5f0f\u7684\u8be1\u5f02\u8be2\u95ee\u94fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8mfhkl81.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5b83\u5bf9\u81ea\u5df1\u7684\u8d21\u732e\u4e3a $1$\uff0c\u4f46\u662f\u5728\u4e0a\u9762\u7684\u5904\u7406\u4e2d\u88ab\u52a0\u56de\u6765\u4e86\u3002\u56e0\u6b64\uff0c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u518d $-1$\u3002\n\n\u6709\u4e14\u4ec5\u6709\u8fd9\u4e24\u79cd\u7279\u4f8b\uff0c\u5904\u7406\u5b8c\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002\n\n### \u603b\u7ed3\n\n\u6211\u4eec\u7684\u601d\u8def\u662f\uff1a\u5bf9\u4e8e\u4e00\u6761\u94fe\uff0c\u6c42\u51fa\u7ecf\u8fc7\u5176\u5173\u952e\u94fe\u4e2a\u6570\uff0c\u51cf\u53bb\u5176\u4e2d\u4ea4\u70b9\u4e0d\u53ea\u4e00\u4e2a\u7684\u4e2a\u6570\u3002\u6c42\u548c\u5373\u5f97\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\u8fd9\u4e2a\u7b54\u6848\u4e2d\u6709\u91cd\u7b97\uff0c\u51cf\u53bb\u5c31\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u8bb2\u7684\u4f60\u5927\u6982\u7387\u662f\u770b\u4e0d\u61c2\u7684\uff0c\u6700\u597d\u7ed3\u5408\u4e00\u4e0b\u4ee3\u7801\u81ea\u884c\u7406\u89e3\u3002\u6211\u81ea\u5df1\u5199\u7684\u65f6\u5019\u4e5f\u7ed5\u4e86\u597d\u4e45\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n  \n/*\n\u7701\u7565100\u591a\u884c\u7684\u5feb\u8bfb\u5feb\u5199\u6a21\u677f\n\u5373\u4e0b\u6587\u4e2d\u7684qin\u3001qout\n*/\n\ntypedef long long LL;\nint n,m,up[300005],l[300005],r[300005];\nint bk[900005],zt[300005],fuck[300005];\nLL ans,sum;\nstruct Pair\n{\n\tint x,y;\n\tPair()=default;\n\tPair(int _x,int _y): x(_x),y(_y)\n\t\t{ if(x>y)swap(x,y); }\n\tinline bool operator <(const Pair &b)const\n\t\t{ return x!=b.x?x<b.x:y<b.y; }\n}p[300005];\nmap<Pair,int> mp;\nstruct Edge{ int to,nxt; }e[600005];\nint cnt,head[300005];\ninline void addEdge(int u,int v)\n\t{ e[++cnt]=(Edge){v,head[u]},head[u]=cnt; }\nint dep[300005],f[300005][20];\nint d1[300005],a1[900005],s1[300005],d2[300005],a2[900005],s2[300005];\n//1: vert, 2: edge\nvoid dfs(int u,int fa=0)\n{\n\tdep[u]=dep[fa]+1,f[u][0]=fa;\n\tfor(int i=1;(1<<i)<=dep[u];i++)\n\t\tf[u][i]=f[f[u][i-1]][i-1];\n\tfor(int i=head[u],v;v=e[i].to;i=e[i].nxt)\n\t\tif(v!=fa)\tdfs(v,u);\n}\nint lca(int x,int y)\n{\n\tif(dep[x]<dep[y])\tswap(x,y);\n\tfor(int i=19;i>=0;i--)\n\t\tif(dep[f[x][i]]>=dep[y])\n\t\t\tx=f[x][i];\n\tif(x==y)\treturn x;\n\tfor(int i=19;i>=0;i--)\n\t\tif(f[x][i]!=f[y][i])\n\t\t\tx=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nint tot;\nint jump(int x,int y)\n{\n\tif(dep[x]<=dep[y])\treturn ++tot;\n\tfor(int i=19;i>=0;i--)\n\t\tif(dep[f[x][i]]>dep[y])\n\t\t\tx=f[x][i];\n\treturn x;\n}\nvoid prework1(int u,int fa=0)\n{\n\ta1[u]=d1[u],a2[u]=d2[u];\n\tfor(int i=head[u],v;v=e[i].to;i=e[i].nxt)\n\t\tif(v!=fa)\n\t\t\tprework1(v,u),a1[u]+=a1[v],a2[u]+=a2[v];\n}\nvoid prework2(int u,int fa=0)\n{\n\ts1[u]=a1[u]+s1[fa],s2[u]=a2[u]+s2[fa];\n\tfor(int i=head[u],v;v=e[i].to;i=e[i].nxt)\n\t\tif(v!=fa)\tprework2(v,u);\n}\ninline void add1(int x,int y,int l,int v)\n\t{ d1[x]+=v,d1[y]+=v,d1[l]-=v,d1[f[l][0]]-=v; }\ninline void add2(int x,int y,int l,int v)\n\t{ d2[x]+=v,d2[y]+=v,d2[l]-=2*v; }\ninline int query1(int i)\n\t{ return s1[l[i]]+s1[r[i]]-s1[up[i]]-s1[f[up[i]][0]]; }\ninline int query2(int i)\n\t{ return s2[l[i]]+s2[r[i]]-2*s2[up[i]]; }\nint main()\n{\n\tqin>>n,tot=n;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;qin>>u>>v;\n\t\taddEdge(u,v),addEdge(v,u);\n\t}\n\tdfs(1);\n\tqin>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tqin>>l[i]>>r[i];\n\t\tup[i]=lca(l[i],r[i]),p[i]=Pair(jump(l[i],up[i]),jump(r[i],up[i]));\n\t\tmp[p[i]]++,bk[p[i].x]++,bk[p[i].y]++,zt[up[i]]++;\n\t\tadd1(l[i],r[i],up[i],1),add2(l[i],r[i],up[i],-1);\n\t}\n\tprework1(1),prework2(1);\n\tfor(int i=1;i<=m;i++)\tans+=query1(i)+query2(i);\n\tfor(int i=1;i<=m;i++)\ta1[up[i]]--,a2[p[i].x]++,a2[p[i].y]++;\n\tprework2(1);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tans-=query1(i)+query2(i);\n\t\tif(p[i].y<=n)\tans+=mp[p[i]];\n\t\tif(p[i].x>n)\tans--;\n\t}\n\tfor(int i=1;i<=m;i++)\tsum+=zt[up[i]]-bk[p[i].x]-bk[p[i].y]+mp[p[i]];\n\tqout<<ans-sum/2;\n//\treturn qout.flush(),0;\n}\n\n```\n",
        "postTime": 1640403559,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011CF1486F Pairs of Paths"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zjjws/p/14458365.html)\n\n---\n\n### \u9898\u610f\n\n[\u9898\u94fe](https://codeforces.com/contest/1486/problem/F)\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u548c $m$ \u8def\u5f84\uff0c\u6c42\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u516c\u5171\u70b9\u7684\u8def\u5f84\u5bf9\u6570\u3002\n\n---\n\n### Solution\n\n\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n$1.$ \u9664\u4e86\u4e00\u4e2a\u70b9\u7684\u8def\u5f84\u4ee5\u5916\uff0c\u5176\u5b83\u7684\u8def\u5f84\u76f8\u4e92\u4e4b\u95f4\u82e5\u8981\u53ea\u6709\u4e00\u4e2a\u516c\u5171\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u516c\u5171\u70b9\u5fc5\u5b9a\u5728\u5176\u4e2d\u4e00\u4e2a\u8def\u5f84\u7684 Lca \u4e0a\u3002\u8fd9\u70b9\u6613\u8bc1\u3002\n\n\u5bf9\u4e8e\u5269\u4e0b\u7684\u60c5\u51b5\u4e2d\uff0c\u6211\u4eec\u628a\u8def\u5f84\u6309\u7167 Lca \u662f\u5426\u76f8\u540c\u6765\u5206\u7c7b\uff0c\u5e76\u4e14\u5bf9\u4e8e\u540c\u7c7b\u548c\u4e0d\u540c\u7c7b\u7684\u4e24\u79cd\u8d21\u732e\u5206\u5f00\u8ba1\u7b97\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u4e00\u6761\u8def\u7ecf $(x,y,z),z=\\texttt{Lca}(x,y)$\uff0c\u53e6\u5916\u4e00\u6761\u8def\u5f84 $(a,b)$ \u4e0e $(x,y)$ \u53ea\u6709\u4e00\u4e2a\u516c\u5171\u70b9\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a\u627e\u5230 $x,y$ \u5bf9\u5e94\u7684\u7956\u5148\uff0c\u6ee1\u8db3\u662f $z$ \u7684\u513f\u5b50\u7684\u4e24\u4e2a\u70b9 $x',y'$\uff0c$(a,b)$ \u4e0d\u7ecf\u8fc7 $x'$ \u4e14\u4e0d\u7ecf\u8fc7 $y'$\u3002\n\n$2.$ \u5bf9\u4e8e\u4e0d\u540c\u7c7b\u7684\u4e24\u6761\u8def\u5f84\uff0c\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u6761\u8def\u5f84 $(x,y)$ \u67e5\u8be2 **\u7ecf\u8fc7\u5b83\u4eec Lca \u7684\u4e0d\u540c\u7c7b\u8def\u5f84\u6570\u91cf**\uff0c\u548c\u5206\u522b **\u7ecf\u8fc7** $x',y'$ **\u7684\u4e0d\u540c\u7c7b\u8def\u5f84\u6570\u91cf**\u3002\uff08\u56e0\u4e3a\u662f\u4e0d\u540c\u7c7b\u8def\u5f84\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u540c\u65f6\u7ecf\u8fc7 $x',y'$ \u7684\u8def\u5f84\uff0c\u9664\u4e86 $\\texttt{Lca}(x,y)=y$ \u7684\u60c5\u51b5\u7279\u6b8a\u8003\u8651\u4e00\u4e0b\uff09\n\n$3.$ \u5bf9\u4e8e\u540c\u7c7b\u7684\uff0c\u53ea\u9700\u8981\u5bb9\u65a5\u4e00\u4e0b\uff0c\u56e0\u4e3a\u4e24\u4e24\u4e0d\u540c\u7684\u4e0d\u592a\u597d\u7b97\uff0c\u6211\u4eec\u7528\u603b\u7684\u51cf\u53bb\u4e24\u4e2a\u90fd\u76f8\u540c\u7684\uff0c\u4ee5\u53ca\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u6570\u91cf\u3002\n\n\u5927\u4f53\u601d\u8def\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff0c\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u53ef\u80fd\u6709\u4e00\u70b9\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u3002\n\n\u56e0\u4e3a\u8fd9\u662f\u6211\u81ea\u5df1\u80e1\u7684 $\\operatorname O(n\\log n)$ \u505a\u6cd5\uff0c\u6ca1\u770b\u9898\u89e3\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u6709\u66f4\u52a0\u7b80\u4fbf\u7684\u540c\u7c7b\u590d\u6742\u5ea6\u505a\u6cd5\u5728\u5e38\u6570\u4e0a\u7206\u8e29\u6211\uff0c\u6bd5\u7adf\u6211\u662f\u5927\u5e38\u6570\u9009\u624b\u3002\n\n\u8bf4\u4e0d\u5b9a\u4e0d\u662f\u5e38\u6570\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u662f $\\operatorname O(n\\log n)$ \u7684\uff0c\u5982\u679c\u80fd\u591f\u6709 $\\operatorname O(n)$ \u5904\u7406\u51fa Lca \u4ee5\u53ca $x',y'$ \u7684\u4e1c\u897f\uff0c\u90a3\u8fd9\u9053\u9898\u7684\u590d\u6742\u5ea6\u5c31\u80fd\u591f\u8fbe\u5230 $\\operatorname O(n)$ \u4e86\u3002\n\n\u4e0d\u77e5\u9053 CF \u4e0a DP \u7684\u6807\u7b7e\u662f\u600e\u4e48\u56de\u4e8b\uff0c\u8bf4\u4e0d\u5b9a\u6709 DP \u7684\u505a\u6cd5\u3002\n\n---\n\n### Code\n\n```cpp\n#include <vector>\n#include <stdio.h>\n#include <algorithm>\n#define LL long long\n#pragma GCC optimize(3)\nusing namespace std;\nconst int Rea=1e5+3;\nstruct Rin\n{\n    char c;\n    inline char gc()\n    {\n        static char rea[Rea];\n        static char *head,*tail;\n        return head==tail&&(tail=(head=rea)+fread(rea,1,Rea,stdin),head==tail)?EOF:*head++;\n    }\n    inline Rin&operator >>(int &x)\n    {\n        x=0;\n        bool tag=false;\n        for(c=gc();c>'9'||c<'0';c=gc())if(c=='-'){c=gc();tag=true;break;}\n        for(;c>='0'&&c<='9';c=gc())x=(x<<1)+(x<<3)+(c^'0');\n        if(tag)x=-x;\n        return *this;\n    }\n}rin;\ninline void jh(int &x,int &y){if(x^y)x^=y^=x^=y;return;}\nconst int N=3e5+3;\nint n,m;\n\nnamespace St\n{\n    vector<int>nxt[N];\n    int f[20][N];\n    int dep[N];\n    inline void dfs(int x,int fa){dep[x]=dep[fa]+1;f[0][x]=fa;for(vector<int>::iterator i=nxt[x].begin();i!=nxt[x].end();i++)if((*i)!=fa)dfs(*i,x);}\n    inline int Lca(int x,int y)\n    {\n        if(dep[x]<dep[y])jh(x,y);\n        for(int i=dep[x]-dep[y],j=0;i;i>>=1,j++)if(i&1)x=f[j][x];\n        for(int j=0;j>=0;){if(f[j][x]!=f[j][y])x=f[j][x],y=f[j][y],j++;else j--;}\n        if(x!=y)x=f[0][x];\n        return x;\n    }\n    inline int find(int x,int y){for(int i=dep[x]-dep[y]-1,j=0;i>0;i>>=1,j++)if(i&1)x=f[j][x];return x;}\n}\nusing namespace St;\n\n\nvector<int>a[N];\nvector<pair<int,int> >b[N];\nint les[N];\nint cutt[N];\nint ruir[N];\nint ruier[N];\nLL ans;\n\ninline void init_ans(int x,int fa)\n{\n    int cuts=a[x].size()+b[x].size();\n    for(vector<int>::iterator i=nxt[x].begin();i!=nxt[x].end();i++)if((*i)!=fa)init_ans(*i,x),ruir[x]+=ruir[*i];\n    ans+=1LL*ruir[x]*ruier[x];ans+=1LL*ruier[x]*(ruier[x]-1)>>1;\n    for(vector<int>::iterator i=a[x].begin();i!=a[x].end();i++)ruir[*i]--;\n    for(vector<pair<int,int> >::iterator i=b[x].begin();i!=b[x].end();i++)ruir[i->first]--,ruir[i->second]--;\n    for(vector<int>::iterator i=a[x].begin();i!=a[x].end();i++)ans+=(ruir[x]-cuts-ruir[*i]);\n    for(vector<pair<int,int> >::iterator i=b[x].begin();i!=b[x].end();i++)ans+=(ruir[x]-cuts-ruir[i->first]-ruir[i->second]);\n    ans+=1LL*cuts*(cuts-1)>>1;\n    sort(b[x].begin(),b[x].end());\n    for(vector<int>::iterator j=a[x].begin();j!=a[x].end();j++)ans-=cutt[*j],cutt[*j]++;\n    for(vector<pair<int,int> >::iterator j=b[x].begin(),k;j!=b[x].end();j=k)\n    {\n        int nows=1;\n        for(k=j+1;k!=b[x].end()&&(*j)==(*k);k++)nows++;\n        ans-=1LL*nows*(nows-1)>>1;\n        ans-=1LL*(cutt[j->first]+cutt[j->second])*nows;\n        cutt[j->first]+=nows;cutt[j->second]+=nows;\n    }\n    for(vector<int>::iterator j=a[x].begin();j!=a[x].end();j++)cutt[*j]--;\n    for(vector<pair<int,int> >::iterator j=b[x].begin();j!=b[x].end();j++)cutt[j->first]--,cutt[j->second]--;\n    ruir[x]-=les[x];\n    return;\n}\nint main()\n{\n    rin>>n;for(int i=1;i<n;i++){int x,y;rin>>x>>y;nxt[x].push_back(y);nxt[y].push_back(x);}\n    dfs(1,0);for(int i=1;(1<<i)<=n;i++)for(int j=1;j<=n;j++)f[i][j]=f[i-1][f[i-1][j]];\n    rin>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        rin>>x>>y;\n        if(x==y){ruier[x]++;continue;}\n        if(dep[x]<dep[y])jh(x,y);\n        z=Lca(x,y);\n        int x_=find(x,z),y_=find(y,z);\n        if(y==z)a[z].push_back(x_);\n        else b[z].push_back(make_pair(min(x_,y_),max(x_,y_)));\n        ruir[x]++;ruir[y]++;ruir[z]--;les[z]++;\n    }\n    init_ans(1,0);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1614481816,
        "uid": 73551,
        "name": "zjjws",
        "ccfLevel": 7,
        "title": "CF1486F. Pairs of Paths"
    },
    {
        "content": "\u7ecf\u5178\u7ed3\u8bba\uff1a\u6307\u5b9a\u4e00\u4e2a\u6839\uff0c\u5219\u4e24\u6761\u8def\u5f84\u7684\u4ea4\u4e00\u5b9a\u8fc7\u4e00\u6761\u8def\u5f84\u7684 $\\texttt{LCA}$\u3002\n\n\u6240\u4ee5\u5982\u679c\u4e24\u6761\u8def\u5f84\u7684\u4ea4\u662f\u4e00\u4e2a\u70b9\uff0c\u5219\u4e00\u5b9a\u662f\u4e00\u6761\u8def\u5f84\u7684 $\\texttt{LCA}$\uff0c\u66f4\u5177\u4f53\u4e00\u70b9\uff0c\u4e00\u5b9a\u662f\u8f83\u6df1\u7684 $\\texttt{LCA}$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u8f83\u6df1\u7684 $\\texttt{LCA}$ \uff0c\u5bf9\u4e8e\u53e6\u5916\u4e00\u6761\u8def\u5f84\u5206\u5f00\u8ba8\u8bba\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u4e24\u6761\u8def\u5f84\u7684 $\\texttt{LCA}$ \u76f8\u540c\u3002\n\n\u5bb9\u65a5\u4e00\u4e0b\u5373\u53ef\uff0c\u603b\u6570$\\dfrac{size\\times (size-1)}{2}$\uff0c\u51cf\u53bb\u5728\u4e00\u4e2a\u5b50\u6811\u5185\u76f8\u4ea4\u7684\u4e2a\u6570\uff0c\u518d\u52a0\u4e0a\u4e24\u4e2a\u5b50\u6811\u90fd\u76f8\u4ea4\u7684\u4e2a\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6876\u89e3\u51b3\uff0c\u6392\u5e8f\u7ebf\u6027\u7684\u8bdd\u53ef\u4ee5\u5728 $\\rm O(N)$ \u65f6\u95f4\u5185\u89e3\u51b3\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u53e6\u4e00\u6761\u8def\u5f84\u7684 $\\texttt{LCA}$ \u6df1\u5ea6\u5c0f\u3002\n\n\u6211\u4eec\u5bf9\u6240\u6709\u8def\u5f84\u6309 $\\texttt{LCA}$ \u6df1\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u5c06 $\\texttt{LCA}$ \u6df1\u5ea6\u5c0f\u4e8e\u5f53\u524d $\\texttt{LCA}$ \u6df1\u5ea6\u7684\u70b9\u7684 $cnt+1$\u3002\u8fd9\u6837\u5f53\u524d $\\texttt{LCA}$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e5f\u53ef\u4ee5\u5bb9\u65a5\u4e00\u4e0b\u7b97\u51fa\u6765\u3002\u5177\u4f53\u4e00\u70b9\uff0c\u5c31\u662f\u4ee5 $\\texttt{LCA}$ \u4e3a\u6839\u6574\u4e2a\u5b50\u6811\u7684 $cnt$ \u4e4b\u548c\uff0c\u51cf\u53bb\u8def\u5f84\u4e00\u7aef $u$ \u5bf9\u5e94\u7684\u5b50\u6811\u7684\u548c\uff0c\u518d\u51cf\u53bb\u8def\u5f84\u53e6\u4e00\u7aef $v$ \u5bf9\u5e94\u7684\u5b50\u6811\u4e4b\u548c\u3002\n\n\u8fd9\u53ef\u4ee5\u7528 $\\rm DFS$ \u5e8f $+$ \u6811\u72b6\u6570\u7ec4\u5728$\\rm O(M\\log N)$\u7684\u65f6\u95f4\u5185\u89e3\u51b3\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\u5982\u679c\u8def\u5f84\u662f\u4e00\u6761\u5355\u94fe/\u4e00\u4e2a\u70b9\u9700\u8981\u7279\u522b\u5904\u7406\u8fb9\u754c\u60c5\u51b5\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 300005\nusing namespace std;\nint n,m,h[N],tot,d[N],f[N][20],t,dfn[N],idx,c[N],sz[N],u[N],v[N];long long ans=0;\nstruct edge{int to,nxt;}e[N<<1];\ninline void adde(int x,int y){e[++tot].nxt=h[x];h[x]=tot;e[tot].to=y;}\ninline void add(int x,int y){for(;x<=n;x+=x&-x)c[x]+=y;}\ninline int ask(int x){int sum=0;for(;x;x-=x&-x)sum+=c[x];return sum;}\nvoid dfs(int x,int fa){\n\tf[x][0]=fa;dfn[x]=++idx;d[x]=d[fa]+1;sz[x]=1;\n\trep(i,1,t)f[x][i]=f[f[x][i-1]][i-1];\n\tfor(int i=h[x];i;i=e[i].nxt)if(e[i].to!=fa)dfs(e[i].to,x),sz[x]+=sz[e[i].to];\n}\ninline int lca(int x,int y){\n\tif(d[x]<d[y])swap(x,y);\n\tpre(i,t,0)if(d[f[x][i]]>=d[y])x=f[x][i];\n\tif(x==y)return x;\n\tpre(i,t,0)if(f[x][i]!=f[y][i])x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nint get(int x,int y){\n\tpre(i,t,0)if(d[f[x][i]]>=y)x=f[x][i];\n\treturn x;\n}\nstruct node{\n\tint l,x,y;\n\tbool operator<(const node o)const{return l<o.l;}\n}a[N];\nbool cmp(node x,node y){return d[x.l]<d[y.l];}\nmap<pair<int,int>,int>w;\nvoid calc(int l,int r){\n\trep(i,l,r){\n\t\tans+=i-l;\n\t\tif(~a[i].x)ans-=c[a[i].x];\n\t\tif(~a[i].y)ans-=c[a[i].y];\n\t\tif(~a[i].x&&~a[i].y&&w.count(make_pair(a[i].x,a[i].y)))ans+=w[make_pair(a[i].x,a[i].y)];\n\t\tif(~a[i].x)c[a[i].x]++;\n\t\tif(~a[i].y)c[a[i].y]++;\n\t\tif(~a[i].x&&~a[i].y)w[make_pair(a[i].x,a[i].y)]++;\n\t}\n\trep(i,l,r){\n\t\tif(~a[i].x)c[a[i].x]--;\n\t\tif(~a[i].y)c[a[i].y]--;\n\t}\n\tw.clear();\n}\nvoid calc1(){\n\trep(i,1,m){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\ta[i].l=lca(x,y);u[i]=x;v[i]=y;\n\t\ta[i].x=(x==a[i].l?-1:get(x,d[a[i].l]+1));\n\t\ta[i].y=(y==a[i].l?-1:get(y,d[a[i].l]+1));\n\t\tif(a[i].x>a[i].y)swap(a[i].x,a[i].y);\n\t}\n\tsort(a+1,a+m+1);int pre=1;\n\t//rep(i,1,m)printf(\"%d %d %d\\n\",a[i].l,a[i].x,a[i].y);\n\trep(i,2,m)if(a[i].l!=a[i-1].l){calc(pre,i-1);pre=i;}\n\tcalc(pre,m);\n}\ninline void solve(int l,int r){rep(i,l,r)add(dfn[a[i].x],1),add(dfn[a[i].y],1);}\nvoid calc2(){\n\trep(i,1,m)a[i].l=lca(u[i],v[i]),a[i].x=u[i],a[i].y=v[i];\n\tsort(a+1,a+m+1,cmp);int pre=1;\n\trep(i,2,m){\n\t\tif(d[a[i].l]!=d[a[i-1].l])solve(pre,i-1),pre=i;\n\t\tans+=ask(dfn[a[i].l]+sz[a[i].l]-1)-ask(dfn[a[i].l]-1);\n\t\tint cur;\n\t\tif(a[i].x!=a[i].l){\n\t\t\tcur=get(a[i].x,d[a[i].l]+1);\n\t\t\tans-=ask(dfn[cur]+sz[cur]-1)-ask(dfn[cur]-1);\n\t\t}\n\t\tif(a[i].y!=a[i].l){\n\t\t\tcur=get(a[i].y,d[a[i].l]+1);\n\t\t\tans-=ask(dfn[cur]+sz[cur]-1)-ask(dfn[cur]-1);\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);t=log2(n);\n\trep(i,1,n-1){int x,y;scanf(\"%d%d\",&x,&y);adde(x,y);adde(y,x);}\n\tdfs(1,0);scanf(\"%d\",&m);calc1();calc2();\n\treturn printf(\"%lld\\n\",ans),0;\n}\n```",
        "postTime": 1614137028,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "CF1486F Pairs of Paths\u9898\u89e3"
    }
]