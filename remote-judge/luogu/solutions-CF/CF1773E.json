[
    {
        "content": "\u672c\u9898\u9700\u8981\u4f7f\u7528\u79bb\u6563\u5316\u7b97\u6cd5\u3002\n\n\u56e0\u4e3a\u672c\u9898\u6211\u4eec\u53ea\u5173\u6ce8\u6570\u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u5148\u5bf9\u5854\u91cc\u9762\u7684\u6570\u8fdb\u884c\u79bb\u6563\u5316\u5904\u7406\u3002\u5373\uff0c\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u7f16\u53f7\u4e3a $1,2,3\\ldots$\u3002\n\n\u7136\u540e\uff0c\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u5854 $a$\uff0c\u5854\u91cc\u5b58\u5728 $a_i-a{i+1}\\ne 1$\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u5c31\u5fc5\u987b\u8fdb\u884c\u4e00\u6b21\u5206\u88c2\u64cd\u4f5c\uff08\u4e0d\u59a8\u8bbe $a_i<a_{i+1}$\uff0c\u56e0\u4e3a\u5b58\u5728 $a_i<k<a_{i+1}$\uff0c\u800c $k$ \u5728\u6700\u540e\u5fc5\u987b\u63d2\u5165\u5b83\u4eec\u4e4b\u95f4\uff0c\u5982\u679c\u4e0d\u8fdb\u884c\u5206\u88c2\u65e0\u6cd5\u63d2\u5165\uff09\u3002\n\n\u56e0\u4e3a\u6240\u6709\u6570\u7686\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4e24\u4e2a\u5854\u5206\u522b\u662f $\\{1,2\\}$ \u548c $\\{2,1\\}$ \u5bfc\u81f4\u65e0\u6cd5\u5408\u5e76\u7684\u60c5\u51b5\uff0c\u4e0a\u8ff0\u7684\u505a\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\n\u8bb0\u5206\u88c2\u7684\u6b21\u6570\u4e3a $c$\uff0c\u90a3\u4e48\u5206\u88c2\u5b8c\u6210\u540e\u603b\u5171\u5c31\u6709 $c+n$ \u4e2a\u5854\uff0c\u6240\u4ee5\u5171\u9700 $c+n-1$ \u6b21\u5408\u5e76\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n  ios::sync_with_stdio(false);\n  int n,c=0,c0=0; cin>>n;\n  vector<vector<int> > a(n);\n  set<int> s; map<int,int> m;\n  for(auto &i:a){\n    int k; cin>>k; i.resize(k);\n    for(auto &j:i)cin>>j,s.emplace(j); // \u8bb0\u5f55\n  }\n  for(auto &i:s)m[i]=++c; // \u7f16\u53f7\n  for(auto &i:a)for(auto &j:i)j=m[j]; // \u8d4b\u503c\n  for(auto &i:a)\n    for(int j=1;j<i.size();j++)\n      if(i[j]-i[j-1]>1||i[j]-i[j-1]<0)c0++; // \u5224\u65ad\n  cout<<c0<<' '<<c0+n-1<<endl;\n  return 0;\n}\n```",
        "postTime": 1670666469,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "CF1773E Easy Assembly \u9898\u89e3"
    },
    {
        "content": "\u5c06\u5854\u89c6\u4e3a\u5e8f\u5217\uff0c\u5206\u88c2\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5c06\u4e00\u4e2a\u5e8f\u5217\u5207\u6210\u4e24\u534a\uff0c\u5408\u5e76\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5c06\u4e24\u4e2a\u5e8f\u5217\u76f8\u63a5\u3002\n\n\u8003\u8651\u521d\u59cb\u5e8f\u5217\u53ca\u5176\u76f8\u90bb\u4e24\u4e2a\u6570 $x, y$\uff0c\u5982\u679c $x$ \u5728\u6700\u7ec8\u5e8f\u5217\u7684\u540e\u7ee7\u4e0d\u662f $y$\uff0c\u5219 $x, y$ \u4e4b\u95f4\u9700\u8981\u7528\u81f3\u5c11\u4e00\u6b21\u5206\u88c2\u64cd\u4f5c\u5206\u5f00\u3002\n\n\u901a\u8fc7\u6267\u884c\u4e0a\u8ff0\u5fc5\u9700\u7684\u5206\u88c2\u64cd\u4f5c\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e9b\u5e8f\u5217\uff0c\u5b83\u4eec\u662f\u6700\u7ec8\u5e8f\u5217\u7684\u6781\u957f\u8fde\u7eed\u6bb5\u3002\u8bbe\u81f3\u5c11\u5206\u88c2 $c$ \u6b21\uff0c\u5219\u5f97\u5230 $n + c$ \u4e2a\u5e8f\u5217\u3002\u5bf9\u5b83\u4eec\u6267\u884c $n + c - 1$ \u6b21\u5408\u5e76\u64cd\u4f5c\u5373\u53ef\u8fbe\u5230\u76ee\u6807\u3002\n\n\u5982\u4f55\u68c0\u67e5 $x$ \u5728\u6700\u7ec8\u5e8f\u5217\u7684\u540e\u7ee7\u662f\u5426\u4e3a $y$\uff1a\u5c06\u6240\u6709\u6570\u79bb\u6563\u5316\u3002\u8bbe $x, y$ \u79bb\u6563\u5316\u540e\u5f97\u5230 $x', y'$\uff0c\u5219\u5145\u8981\u6761\u4ef6\u4e3a $x' + 1 = y'$\u3002\n\n- \u53e6\u4e00\u79cd\u81ea\u7136\u5730\u5206\u6790\u5408\u5e76\u6b21\u6570\u7684\u65b9\u5411\uff1a\u8003\u8651\u6700\u7ec8\u5e8f\u5217\u53ca\u5176\u76f8\u90bb\u4e24\u4e2a\u6570 $x, y$\uff0c\u5982\u679c $x$ \u5728\u521d\u59cb\u5e8f\u5217\u7684\u540e\u7ee7\u4e0d\u662f $y$\uff0c\u5219 $x, y$ \u4e4b\u95f4\u9700\u8981\u7528\u81f3\u5c11\u4e00\u6b21\u5408\u5e76\u64cd\u4f5c\u8fde\u63a5\u3002\n\n\u8bbe $m = \\sum k_i$\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(m\\log m)$\u3002\n\n```cpp\n// LUOGU_RID: 97121879\n#include <bits/stdc++.h>\nusing namespace std;\nconstexpr int N = 1e4 + 5;\nint n, cnt, d[N];\nvector<int> k[N];\nint main() {\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  cin >> n;\n  for(int i = 1; i <= n; i++) {\n    int sz, a;\n    cin >> sz;\n    while(sz--) cin >> a, k[i].push_back(d[++cnt] = a);\n  }\n  sort(d + 1, d + cnt + 1);\n  int split = 0;\n  for(int i = 1; i <= n; i++) {\n    for(int &it : k[i]) it = lower_bound(d + 1, d + cnt + 1, it) - d;\n    for(int p = 1; p < k[i].size(); p++) split += k[i][p - 1] + 1 != k[i][p];\n  }\n  cout << split << \" \" << n + split - 1 << \"\\n\";\n  return 0;\n}\n/*\ng++ E.cpp -o E -std=c++14 -O2 -DALEX_WEI\n*/\n```",
        "postTime": 1670752964,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1773E Easy Assembly"
    }
]