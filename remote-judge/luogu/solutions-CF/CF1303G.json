[
    {
        "content": "\u5148\u626f\u4e00\u70b9\u70b9\u522b\u7684\u2026\u2026\n\n\u8fd9\u573a CF \u6211\u662f F \u9898\u5168\u573a\u9996\u6740\uff0c\u8fc7\u6389 F \u4e4b\u540e\u4e00\u770b\u699c\uff0cF \u9898 1AC\uff0cG \u9898 2AC\uff0c\u6211\u662f rank3\u3002(\u540e\u6765\u53d1\u73b0 jiangly \u662f F \u9898 rank2\uff0clyh \u662f F \u9898 rank3\uff09\u5f53\u65f6\u6211\u771f\u7684\u4ee5\u4e3a G \u4f1a\u6bd4 F \u7b80\u5355\u3002\n\n\u540e\u6765\u8bc1\u660e G \u9898\u548c F \u9898\u76f8\u6bd4\u5c31\u662f\u4e00\u4e2a\u5927\u6bd2\u7624\uff0c\u4e4b\u6240\u4ee5 G \u8fc7\u7684\u4eba\u591a\u53ef\u80fd\u662f\u56e0\u4e3a G \u662f\u539f\u9898\u3002\n\n\u6700\u540e 10 \u5206\u949f\u5199\u5b8c\u4e86 G \u4ea4\u4e0a\u53bb WA\uff0c\u5f03\u7597\u540e\u770b\u4e86\u4e00\u773c\u699c\u53d1\u73b0\u9996\u9875\u53ea\u6709\u4e00\u4e2a\u4eba AK\uff0c\u5176\u4ed6\u4eba\u4e0d\u662f F \u9898\u72c2 WA \u5c31\u662f G \u9898\u72c2 WA\uff0c\u90fd\u81ea\u95ed\u4e86\u2026\u2026\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0b\u9762\u5f00\u59cb\u672c\u9898\u9898\u89e3\u3002\n\n---\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u5e26\u70b9\u6743\u7684\u6811\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u6811\u4e0a\u7684\u4e00\u4e2a\u8def\u5f84 $x_1,x_2,\\ldots,x_k$\uff0c\u6700\u5927\u5316 $\\sum_{i=1}^kia_{x_i}$\uff0c\u6c42\u6700\u5927\u6743\u503c\u3002\n\n### \u6570\u636e\u8303\u56f4\n\n$2\\le n\\le 150000$\n\n### \u89e3\u9898\u8fc7\u7a0b\n\n#### Part 1\n\n\u5bf9\u4e8e\u8def\u5f84\u76f8\u5173\uff0c\u9996\u5148\u6211\u4eec\u8003\u8651\u5982\u4f55\u5408\u5e76\u4e24\u6761\u8def\u5f84\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84 $x_1\\to x_k$\uff0c\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u4e2d\u95f4\u70b9 $x_m$\uff0c\u628a\u5b83\u62c6\u6210\u4e24\u4e2a\u5b50\u8def\u5f84\uff1a\n\n- \u7b2c\u4e00\u90e8\u5206\u662f $x_1\\to x_m$\uff0c\u6211\u4eec\u8bbe $l_1=m,v_1=\\sum_{i=1}^mia_{x_i}$\u3002\n- \u7b2c\u4e8c\u90e8\u5206\u662f $x_{m+1}\\to x_k$\uff0c\u6211\u4eec\u8bbe $s_2=\\sum_{i=m+1}^ka_i,v_2=\\sum_{i=m+1}^{k}(i-m)a_{x_i}$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6574\u6761\u8def\u5f84\u7684\u6743\u503c\u5c31\u662f $v_1+l_1s_2+v_2$\u3002\n\n\u5982\u679c\u6211\u4eec\u628a $(s_2,v_2)$ \u770b\u6210\u63d2\u5165\uff0c$(v_1,l_1)$ \u770b\u6210\u662f\u67e5\u8be2\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u76f8\u5f53\u4e8e\u6c42\u4e00\u6761\u76f4\u7ebf\u626b\u5230\u7684\u7b2c\u4e00\u4e2a\u70b9\uff0c\u80af\u5b9a\u548c\u51f8\u5305\u4e4b\u7c7b\u7684\u4e1c\u897f\u8131\u4e0d\u4e86\u5e72\u7cfb\u3002\n\n#### Part 2\n\n\u8003\u8651\u70b9\u5206\u6cbb\u3002\n\n\u7531\u4e8e\u6811\u5206\u6cbb\u4fdd\u8bc1\u4e86\u6df1\u5ea6\u662f $O(\\log n)$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684 $(v_1,l_1)$ \u548c\u6240\u6709\u7684 $(s_2,v_2)$ \u62ff\u51fa\u6765\uff0c\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\n\n\u627e\u5230\u6240\u6709\u7684\u8def\u5f84\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u4e00\u904d dfs\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u5047\u8bbe\u5bf9\u4e8e\u6bcf\u4e00\u68f5\u5b50\u6811\uff0c\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\u6240\u6709\u7684\u5b50\u8def\u5f84\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u9009\u62e9\u4e24\u6761\u4e0d\u5728\u4e00\u68f5\u5b50\u6811\u5185\u7684\u70b9\uff0c\u6c42 $v_1+l_1s_2+v_2$ \u7684\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u628a $(s_2,v_2)$ \u770b\u6210\u63d2\u5165\uff0c$(v_1,l_1)$ \u770b\u6210\u67e5\u8be2\uff0c\u90a3\u4e48\u6c42\u7684\u503c\u957f\u6210\u4e86\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\u7684\u5f62\u5f0f\uff0c\u5176\u4e2d $s_2$ \u662f\u659c\u7387\uff0c$v_2$ \u662f\u7eb5\u622a\u8ddd\uff0c\u81ea\u53d8\u91cf\u662f $x$\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u674e\u8d85\u6811\u7ef4\u62a4\u3002\n\n\u6240\u8c13\u674e\u8d85\u6811\u5c31\u662f\u4e00\u4e2a\u6807\u8bb0\u6c38\u4e45\u5316\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\uff0c\u652f\u6301\u63d2\u5165\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\u548c\u6c42\u5355\u70b9\u6700\u5927\u503c\uff0c\u5728 `pushdown` \u7684\u65f6\u5019\u5982\u679c\u80fd\u8986\u76d6\u5c31\u76f4\u63a5\u8986\u76d6\uff0c\u5426\u5219\u5355\u8fb9\u5f80\u4e0b\u9012\u5f52\uff0c\u4e00\u6b21 `pushdown` \u590d\u6742\u5ea6\u662f $O(\\log n)$\uff0c\u66f4\u8be6\u7ec6\u7684\u63cf\u8ff0\u8bf7\u70b9\u51fb[\u8fd9\u91cc](https://www.baidu.com/s?wd=%E6%9D%8E%E8%B6%85%E6%A0%91&rsv_spt=1&rsv_iqid=0xc0ee8512000202f4&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_dl=tb&rsv_enter=1&rsv_sug3=10&rsv_sug1=5&rsv_sug7=100&rsv_sug2=0&inputT=1670&rsv_sug4=1670)\u3002\n\n\u628a\u6240\u6709\u8def\u5f84\u6309\u7167\u6240\u5728\u5b50\u6811\u8fdb\u884c\u6392\u5e8f\uff0c\u8fdb\u884c\u5230\u6bcf\u4e00\u4e2a\u5b50\u6811\u7684\u65f6\u5019\u5148\u67e5\u8be2\u6240\u6709\u8def\u5f84\u518d\u63d2\u5165\u6240\u6709\u8def\u5f84\uff0c\u6700\u540e\u53cd\u7740\u518d\u505a\u4e00\u904d\uff08\u56e0\u4e3a\u8def\u5f84\u6709\u6b63\u53cd\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e00\u90e8\u5206\u3002\n\n### \u590d\u6742\u5ea6\u5206\u6790\n\n\u674e\u8d85\u6811\u5982\u679c\u652f\u6301\u533a\u95f4\u63d2\u5165\u4e00\u6b21\u51fd\u6570\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$ \u7684\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u63d2\u5165\u90fd\u662f\u5168\u5c40\u63d2\u5165\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u5c42\u7684\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define ll long long\nusing namespace std;\nstruct Tree//\u674e\u8d85\u6811\n{\n\t#define lc x<<1\n\t#define rc x<<1|1\n\t#define mid ((l+r)>>1)\n\tstruct Node\n\t{\n\t\tll a,b;\n\t}tree[600005];\n\tvoid ins(int x,int l,int r,ll a,ll b)//\u63d2\u5165\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\n\t{\n\t\tif(tree[x].a*l+tree[x].b<=a*l+b&&tree[x].a*r+tree[x].b<=a*r+b)\n\t\t{\n\t\t\ttree[x].a=a,tree[x].b=b;\n\t\t\treturn;\n\t\t}\n\t\tif(tree[x].a*l+tree[x].b>=a*l+b&&tree[x].a*r+tree[x].b>=a*r+b)return;\n\t\tif(tree[x].a*mid+tree[x].b<a*mid+b)swap(tree[x].a,a),swap(tree[x].b,b);\n\t\tif(a<tree[x].a)ins(lc,l,mid,a,b);\n\t\telse ins(rc,mid+1,r,a,b);//\u6bd4\u8f83\u4e2d\u95f4\u503c\uff0c\u7136\u540e\u5355\u8fb9\u9012\u5f52\n\t}\n\tvoid build(int x,int l,int r)\n\t{\n\t\ttree[x].a=tree[x].b=0;\n\t\tif(l==r)return;\n\t\tbuild(lc,l,mid);\n\t\tbuild(rc,mid+1,r);\n\t}\n\tll query(int x,int l,int r,int p)//\u67e5\u8be2\u5355\u70b9\u6700\u5927\u503c\uff0c\u56e0\u4e3a\u6807\u8bb0\u6c38\u4e45\u5316\u6240\u4ee5\u9700\u8981\u4e00\u8def\u53d6max\n\t{\n\t\tll ans=tree[x].a*p+tree[x].b;\n\t\tif(l==r)return ans;\n\t\tif(p<=mid)ans=max(ans,query(lc,l,mid,p));\n\t\telse ans=max(ans,query(rc,mid+1,r,p));\n\t\treturn ans;\n\t}\n\t#undef lc\n\t#undef rc\n\t#undef mid\n}T;\nstruct Edge\n{\n\tint to;\n\tint nxt;\n}e[300005];\nint n,m,edgenum,head[150005],dep[150005],maxd;\nint pa[150005],size[150005],root,maxs[150005];\nint st[150005],top;\nll a[150005],v1[150005],v2[150005],l[150005],s[150005],x[150005],maxv[150005],ans;\nbool flag[150005];\nvoid add(int u,int v)\n{\n\te[++edgenum].to=v;\n\te[edgenum].nxt=head[u];\n\thead[u]=edgenum;\n}\nvoid getroot(int node,int tot)//\u6c42\u91cd\u5fc3\uff0ctot\u6307\u7684\u662f\u603b\u5927\u5c0f\n{\n\tsize[node]=1;\n\tmaxs[node]=0;\n\tfor(int hd=head[node];hd;hd=e[hd].nxt)\n\t{\n\t\tint to=e[hd].to;\n\t\tif(to==pa[node]||flag[to])continue;\n\t\tpa[to]=node;\n\t\tgetroot(to,tot);\n\t\tsize[node]+=size[to];\n\t\tmaxs[node]=max(maxs[node],size[to]);\n\t}\n\tmaxs[node]=max(maxs[node],tot-size[node]);\n\tif(maxs[root]>maxs[node])root=node;\n\tpa[node]=0;\n}\nvoid dfs(int node,ll val1,ll val2,ll sum,int from)//val1,val2,sum,from \u5206\u522b\u8868\u793a v1,v2,s \u548c\u5f53\u524d\u6240\u5728\u5b50\u6811\n{\n\tif(node!=root&&!from)from=node;\n\tdep[node]=dep[pa[node]]+1;\n\tmaxd=max(maxd,dep[node]);\n\tbool f=0;\n\tsize[node]=1;\n\tfor(int hd=head[node];hd;hd=e[hd].nxt)\n\t{\n\t\tint to=e[hd].to;\n\t\tif(to==pa[node]||flag[to])continue;\n\t\tpa[to]=node;\n\t\tf=1;\n\t\tdfs(to,val1+sum+a[to],val2+a[to]*dep[node],sum+a[to],from);\n\t\tsize[node]+=size[to];\n\t}\n\tif(!f)//\u5bb9\u6613\u53d1\u73b0\uff0c\u8def\u5f84\u7aef\u70b9\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\uff0c\u56e0\u6b64\u53ea\u8003\u8651\u7aef\u70b9\u662f\u53f6\u8282\u70b9\u7684\u5b50\u8def\u5f84\n\t{\n\t\tst[++top]=node;\n\t\tv1[top]=val1,v2[top]=val2,s[top]=sum-a[root],l[top]=dep[node],x[top]=from;\n\t}\n}\nvoid solve()//\u70b9\u5206\u6cbb\n{\n\tflag[root]=1;\n\tmaxd=0;\n\ttop=0;\n\tpa[root]=0;\n\tdfs(root,a[root],0,a[root],0);\n\tst[++top]=root;\n\tv1[top]=a[root],l[top]=1,v2[top]=s[top]=x[top]=0;\n\tT.build(1,1,maxd);//\u9884\u5904\u7406\n\tx[top+1]=x[0]=-1;\n\tfor(int i=1;i<=top;)//\u6b63\u7740\u505a\u4e00\u904d\uff0c\u6bcf\u6b21\u8003\u8651\u4e00\u68f5\u5b50\u6811\u5185\u7684\u8def\u5f84\n\t{\n\t\tint j=i;\n\t\twhile(x[j]==x[i])ans=max(ans,T.query(1,1,maxd,(int)l[j])+v1[j]),j++;\n\t\tj=i;\n\t\twhile(x[j]==x[i])T.ins(1,1,maxd,s[j],v2[j]),j++;\n\t\ti=j;\n\t}\n\tT.build(1,1,maxd);\n\tfor(int i=top;i>=1;)//\u53cd\u7740\u518d\u505a\u4e00\u904d\n\t{\n\t\tint j=i;\n\t\twhile(x[j]==x[i])ans=max(ans,T.query(1,1,maxd,(int)l[j])+v1[j]),j--;\n\t\tj=i;\n\t\twhile(x[j]==x[i])T.ins(1,1,maxd,s[j],v2[j]),j--;\n\t\ti=j;\n\t}\n\tint x=root;\n\tfor(int hd=head[x];hd;hd=e[hd].nxt)\n\t{\n\t\tint to=e[hd].to;\n\t\tif(flag[to]||size[to]==1)continue;\n\t\tint t=size[to];\n\t\troot=0;\n\t\tgetroot(to,t);\n\t\tsolve();\n\t}\n}\nint main()\n{\n\tmaxs[0]=2147483647;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&a[i]);\n\tgetroot(1,n);\n\tsolve();\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1581650761,
        "uid": 54214,
        "name": "wucstdio",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1303G \u3010Sum of Prefix Sums\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u9898\u89e3\u6ca1\u4eba\u5199\u9759\u6001\u94fe\u5206\u6cbb\uff0c\u672c\u83dc\u9e21\u5728\u5199\u9519\u4e86 $n$ \u6b21\u67ff\u5b50\u540e\u7ec8\u4e8e\u8fc7\u4e86\u672c\u9898\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u5199\u9898\u89e3\u6765\u9020\u798f\u5199 dsu on tree \u7684\u540e\u4eba/ll\u3002\n\n\u6211\u4eec\u5148\u58f0\u660e\u8fd9\u4e9b\u4e1c\u897f\uff1a\n\n$F_i$\uff1a $i$ \u8282\u70b9\u7684\u7236\u4eb2\u3002\n\n$dep_i$\uff1a \u8282\u70b9\u6df1\u5ea6\u3002\n\n$dis_i$\uff1a$\\sum_{u\\in G_i}a_u\\times dep_u $\uff0c$G_i$ \u8868\u793a $i$ \u5230\u6839\u7684\u70b9\u96c6\uff0c\u4e0b\u9762\u542b\u4e49\u76f8\u540c\u3002\n\n$dis1_i:\\sum_{u\\in G_i}a_u\\times (dep_i-dep_u+1)$\n\n$s_i:\\sum_{u\\in G_i}a_u$\n\n\u4e0a\u9762\u7684\u4e1c\u897f\u90fd\u80fd $O(n)$ \u9884\u5904\u7406\u51fa\u6765\u3002\n\n\u4f60\u53ef\u4ee5\u7406\u89e3\u6210 $dis_i$ \u662f\u5f62\u5982\u8fd9\u6837\u7684\uff1a![\u56fe2](https://cdn.luogu.com.cn/upload/image_hosting/0lp1n5s1.png)\n\n\u4f60\u53ef\u4ee5\u7406\u89e3\u6210 $dis1_i$ \u662f\u5f62\u5982\u8fd9\u6837\u7684\uff1a![\u56fe1](https://cdn.luogu.com.cn/upload/image_hosting/is6dta6y.png)\n\n\u4f60\u53ef\u4ee5\u7406\u89e3\u6210 $s_i$ \u662f\u5f62\u5982\u8fd9\u6837\u7684\uff1a![\u56fe3](https://cdn.luogu.com.cn/upload/image_hosting/u0lulgei.png)\n\n\u6211\u4eec\u8003\u8651 dsu on tree \u548c\u674e\u8d85\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u5148\u8003\u8651\u6bd4\u8f83\u5bb9\u6613\u8ba1\u7b97\u7684\u4e00\u79cd\u5f62\u5f0f\uff1a![\u56fe4](https://cdn.luogu.com.cn/upload/image_hosting/dzg0ol2y.png)\n\n\u4e0a\u9762 $u$ \u662f\u5df2\u7ecf\u7edf\u8ba1\u8fc7\u7684\u70b9\uff0c$v$ \u662f\u8ba1\u7b97\u8d21\u732e\u5904\uff0c\u8bbe $fa$ \u4e3a $u$ \u4e0e $v$ \u7684 LCA\uff0c\u4e0b\u6587\u542b\u4e49\u76f8\u540c\u3002\n\n\u4e0d\u96be~~\u5f88\u96be~~\u5f97\u51fa\u6b64\u65f6\u7b54\u6848\u662f\uff1a\n$dis_u-dis_{F_{fa}}-(s_u-s_{F_{fa}})\\times(dep_{fa}-1+dep_v-dep_{fa})+dis1_v-dis1_{fa}-s_{fa}\\times(dep_v-dep_{fa})$\u3002\n\n\u6574\u7406\u67ff\u5b50\uff0c\u5c06\u4e0e $u$ \u76f8\u5173\u7684\u63d0\u51fa\uff1a\n\n$X=dis_u-s_u\\times(dep_{fa}-1+dep_v-dep_{fa})$\u3002\n\n\u5176\u4ed6\u90e8\u5206\uff1a\n\n$Y=-dis_{F_{fa}}+s_{F_{fa}}\\times(dep_{fa}-1+dep_v-dep_{fa})+dis1_v-dis1_{fa}-s_{fa}\\times(dep_v-dep_{fa})$\u3002\n\n$Y$ \u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\uff0c$X$ \u76f8\u5f53\u4e8e\u4e00\u6761 $kx+b$ \u7684\u76f4\u7ebf\uff0c\u505a\u5230 $u$ \u7684\u65f6\u5019\u5728\u674e\u8d85\u7ebf\u6bb5\u6811\u4e2d\u63d2\u5165\u4e00\u6761\u659c\u7387\u4e3a $s_u$\uff0c\u622a\u8ddd\u4e3a $dis_u$ \u7684\u76f4\u7ebf\uff0c$v$ \u5904\u67e5\u8be2\u6a2a\u5750\u6807\u5728 $dep_{fa}-1+dep_v-dep_{fa}$ \u5904\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u8003\u8651\u63d2\u5165\u7684\u5148\u540e\u987a\u5e8f\u4e0d\u4e00\u5b9a\uff0c\u6240\u4ee5\u8fd8\u8981\u8003\u8651\u53cd\u8fc7\u6765\u7684\u60c5\u51b5\uff1a![\u56fe5](https://cdn.luogu.com.cn/upload/image_hosting/d7g3kdt7.png)\n\n\u4e0d\u96be~~\u66f4\u52a0\u96be~~\u5f97\u51fa\u6b64\u65f6\u7b54\u6848\u662f\uff1a\n$dis1_u-dis1_{fa}-s_{F_{fa}}\\times (dep_u-dep_{fa}+1)+(s_v-s_{fa})\\times (dep_u-dep_{fa}+1-dep_{fa})+dis_v-dis_{fa}$\u3002\n\n\u540c\u6837\u5c06\u4e0e $u$ \u76f8\u5173\u7684\u63d0\u51fa\u3002\n\n$X=dis1_u+dep_u\\times (-s_{F_{fa}}+s_v-s_{fa})$\u3002\n\n$Y=-dis1_{fa}-S_{F_{fa}}\\times (1-dep_{fa})+(s_v-s_{fa})\\times (1-2\\times dep_{fa})+dis_v-dis_{fa}$\u3002\n\n$Y$ \u540c\u6837\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\uff0c$X$ \u76f8\u5f53\u4e8e\u4e00\u6761 $kx+b$ \u7684\u76f4\u7ebf\uff0c\u505a\u5230 $u$ \u7684\u65f6\u5019\u5728\u674e\u8d85\u7ebf\u6bb5\u6811\u4e2d\u63d2\u5165\u4e00\u6761\u659c\u7387\u4e3a $dep_u$\uff0c\u622a\u8ddd\u4e3a $dis1_u$ \u7684\u76f4\u7ebf\uff0c$v$ \u5904\u67e5\u8be2\u6a2a\u5750\u6807\u5728 $-s_{F_{fa}}+s_v-s_{fa}$ \u5904\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n \\log v)$\u3002\n\nps:\u5982\u679c\u4e0d\u7406\u89e3\u4e0a\u8ff0\u67ff\u5b50\u7684\u5b9e\u9645\u542b\u4e49\u53ef\u4ee5\u79c1\u4fe1\u6211\uff0c\u9650\u4e8e\u7bc7\u5e45\u8fd9\u91cc\u4e0d\u7ec6\u8bb2\uff0c\u4e0d\u8fc7\u540c\u7c7b\u7684\u67ff\u5b50\u90fd\u5199\u5728\u4e00\u8d77\u4e86\uff08\u5982\u679c\u67ff\u5b50\u9519\u4e86\u8bf7\u901f\u6233\u6211\uff09\u3002\n\n```c++\n//QwQcOrZ yyds!!!\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#define IOS ios::sync_with_stdio(false)\n#define ll long long\n#define mp make_pair\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define inf 1e18\n#define mod 998244353\n#define int ll\n#define N 150005\nusing namespace std;\ninline char gc(){static char buf[100000],*p1=buf,*p2=buf;return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;}\n//#define gc getchar\ninline ll read(){char c=gc();ll su=0,f=1;for (;c<'0'||c>'9';c=gc()) if (c=='-') f=-1;for (;c>='0'&&c<='9';c=gc()) su=su*10+c-'0';return su*f;}\ninline void write(ll x){if (x<0){putchar('-');write(-x);return;}if (x>=10) write(x/10);putchar(x%10+'0');}\ninline void writesp(ll x){write(x),putchar(' ');}\ninline void writeln(ll x){write(x);putchar('\\n');}\nint cnt,rt;\nstruct node\n{\n\tll k,b;\n}tr[15000005];\nint lson[15000005],rson[15000005];\nint a[N];\nll F[N],dis[N],s[N],dis1[N];\nint dep[N],siz[N],son[N];\nvector<int>G[N];\nll B=300000000000ll;\nll ans;\nint n;\ninline void ad(int x,int y)\n{\n\tG[x].push_back(y);\n}\ninline ll calc(node p,ll x)\n{\n\treturn p.b+p.k*x;\n}\nvoid update(int &k,ll l,ll r,node now)\n{\n\tif (!k)\n\t{\n\t\tk=++cnt;\n\t\ttr[k]=now;lson[k]=0,rson[k]=0;\n\t\treturn;\n\t}\n\tll mid=l+(r-l)/2;\n\tif (calc(tr[k],mid)<calc(now,mid))\n\t{\n\t\tswap(now,tr[k]);\n\t}\n\tif (l==r) return;\n\tif (tr[k].k<now.k)\n\t{\n\t\tupdate(rson[k],mid+1,r,now);\n\t} else\n\t{\n\t\tupdate(lson[k],l,mid,now);\n\t}\n}\nll query(int &k,ll l,ll r,ll i)\n{\n\tif (!k) return -inf;\n\tll res=calc(tr[k],i),mid=l+(r-l)/2;\n\tif (i<=mid)\n\t{\n\t\tres=max(res,query(lson[k],l,mid,i));\n\t} else res=max(res,query(rson[k],mid+1,r,i));\n\treturn res;\n}\nvoid dfs(int k,int fa)\n{\n\tF[k]=fa;\n\tdep[k]=dep[fa]+1;\n\tdis[k]=dis[fa]+dep[k]*a[k];\n\ts[k]=s[fa]+a[k];\n\tdis1[k]=dis1[fa]+s[fa]+a[k];\n\tsiz[k]=1;\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tdfs(u,k);\n\t\tsiz[k]+=siz[u];\n\t\tif (siz[u]>siz[son[k]]) son[k]=u;\n\t}\n}\ninline void work(int k,int rot)\n{\n\tll now=query(rt,-B,B,dep[k]-dep[rot]-(dep[rot]-1));\n\tnow-=1ll*dis[F[rot]];\n\tnow-=1ll*(s[F[rot]])*(dep[k]-dep[rot]);\n\tnow+=1ll*(s[F[rot]])*(dep[rot]-1);\n\tnow+=1ll*dis1[k];\n\tnow-=1ll*dis1[rot];\n\tnow-=1ll*(dep[k]-dep[rot])*s[rot];\n\tans=max(ans,now);\n}\ninline void work1(int k,int rot)\n{\n\tll now=query(rt,-B,B,-s[rot]+s[k]-s[F[rot]]);\n\tnow+=1ll*(dep[rot]-1)*(s[F[rot]]);\n\tnow-=1ll*dis1[F[rot]];\n\tnow-=1ll*(dep[rot]-1)*(s[k]-s[rot]);\n\tnow+=1ll*dis[k]-dis[rot];\n\tnow-=1ll*(s[k]-s[rot])*dep[rot];\n\tans=max(ans,now);\n}\nvoid que(int k,int fa,int rot)\n{\n\twork(k,rot);\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tque(u,k,rot);\n\t}\n}\nvoid que1(int k,int fa,int rot)\n{\n\twork1(k,rot);\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tque1(u,k,rot);\n\t}\n}\nvoid ins(int k,int fa)\n{\n\tnode now;\n\tnow.k=s[k],now.b=dis[k];\n\tupdate(rt,-B,B,now);\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tins(u,k);\n\t}\n}\nvoid ins1(int k,int fa)\n{\n\tnode now;\n\tnow.k=dep[k],now.b=dis1[k];\n\tupdate(rt,-B,B,now);\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tins1(u,k);\n\t}\n}\nvoid dfs1(int k,int fa)\n{\n\tfor (auto u:G[k])\n\t{\n\t\tif(u==fa||u==son[k]) continue;\n\t\tdfs1(u,k);\n\t\tcnt=0;rt=0;\n\t}\n\tif (son[k]) dfs1(son[k],k);\n\tnode now;\n\tnow.k=s[k],now.b=dis[k];\n\tupdate(rt,-B,B,now);\n\twork(k,k);\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa||u==son[k]) continue;\n\t\tque(u,k,k);\n\t\tins(u,k);\n\t}\n}\nvoid dfs2(int k,int fa)\n{\n\tfor (auto u:G[k])\n\t{\n\t\tif(u==fa||u==son[k]) continue;\n\t\tdfs2(u,k);\n\t\tcnt=0;rt=0;\n\t}\n\tif (son[k]) dfs2(son[k],k);\n\tnode now;\n\tnow.k=dep[k],now.b=dis1[k];\n\tupdate(rt,-B,B,now);\n\twork1(k,k);\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa||u==son[k]) continue;\n\t\tque1(u,k,k);\n\t\tins1(u,k);\n\t}\n}\nsigned main()\n{\n\tn=read();\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tad(u,v);\n\t\tad(v,u);\n\t}\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tdfs(1,0);\n\tdfs1(1,0);\n\tcnt=0,rt=0;\n\tdfs2(1,0);\n\twriteln(ans);\n}\n/*\n*/",
        "postTime": 1635753495,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1303G Sum of Prefix Sums"
    },
    {
        "content": "$$\\texttt{Description}$$\n\n[Sum of Prefix Sums](https://www.luogu.com.cn/problem/CF1303G)\n\n$$\\texttt{Solution}$$\n\n\u9996\u5148\u770b\u5230\u6811\u4e0a\u8def\u5f84\u7c7b\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651**\u70b9\u5206\u6cbb**\u3002\n\n\u5728\u70b9\u5206\u6cbb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u7814\u7a76\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\uff1a\n\n$$s_1 + (s_1 + s_2) + (s_1 + s_2 + s_3) + \\cdots + (s_1 + \\cdots + s_n)$$\n\n\u660e\u663e\u53ef\u4ee5\u5316\u7b80\u6210\uff1a\n\n$$\\sum_{i = 1}^n s_i \\cdot (n - i + 1) = (n + 1) \\times \\sum_{i = 1}^n s_i - \\sum_{i = 1}^n s_i \\cdot i$$\n\n\u7136\u540e\u5c31\u8003\u8651\u5728\u70b9\u5206\u6cbb\u65f6\u5982\u4f55\u5408\u5e76\u4e24\u6761\u8def\u5f84\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/g0rzit1f.png)\n\n\u6211\u4eec\u628a\u4e00\u6761\u8def\u5f84\u5206\u6210**\u84dd\u8272\u90e8\u5206**\u548c**\u7ea2\u8272\u90e8\u5206**\u3002\n\n\u8bbe\u84dd\u8272\u90e8\u5206\u7684**\u957f\u5ea6**\u4e3a $pre\\_len$\uff0c\u7ea2\u8272\u90e8\u5206\u7684**\u957f\u5ea6**\u4e3a $suc\\_len$\u3002\n\n\u8bbe\uff1a\n\n$$pre\\_sum = \\sum_{i = 1} ^ {pre\\_len} pre_i$$\n\n$$suc\\_sum = \\sum_{i = 1} ^ {suc\\_len} suc_i$$\n\n$$pre\\_rk\\_sum = \\sum_{i = 1} ^ {pre\\_len} i \\cdot pre_i$$\n\n$$suc\\_rk\\_sum = \\sum_{i = 1} ^ {suc\\_len} i \\cdot suc_i$$\n\n\u6240\u4ee5\u6574\u6761\u8def\u5f84\u7684\u6743\u503c\u5c31\u53ef\u4ee5\u8868\u793a\u51fa\u6765\u4e86\uff1a\n\n$$(pre\\_sum + {\\color{red}suc\\_sum}) \\times ({\\color{red}pre\\_len} + suc\\_len + 1) - (pre\\_rk\\_sum + suc\\_rk\\_sum + {\\color{red}suc\\_sum \\cdot pre\\_len})$$\n\n\u53d1\u73b0**\u7ea2\u8272\u90e8\u5206**\u4e4b\u95f4\u53ef\u4ee5\u6d88\u6389\uff1a\n\n$$pre\\_sum\\cdot suc\\_len+pre\\_sum\\cdot(pre\\_sum+1)-pre\\_rk\\_sum+suc\\_sum\\cdot(suc\\_len+1)-suc\\_rk\\_sum)$$\n\n\u6211\u4eec\u70b9\u5206\u6cbb\u7684\u65f6\u5019\u4f1a\u53bb\u904d\u5386\u5230\u6bcf\u4e00\u4e2a $suc$\uff0c\u6240\u4ee5\u5f0f\u5b50\u540e\u9762**\u53ea\u8ddf $suc$ \u6709\u5173**\u7684\u90e8\u5206\u53ef\u4ee5\u6682\u65f6\u5ffd\u7565\uff0c\u8003\u8651\u5982\u4f55\u8ba1\u7b97**\u524d\u534a\u90e8\u5206**\u7684\u6700\u5927\u503c\u3002\n\n$$\\begin{matrix}\\underbrace{pre\\_sum}\\\\k\\end{matrix}\\times\\begin{matrix}\\underbrace{suc\\_len}\\\\x\\end{matrix}+\\begin{matrix}\\underbrace{pre\\_sum\\cdot(pre\\_sum+1)-pre\\_rk\\_sum}\\\\b\\end{matrix}$$\n\n\u660e\u663e\u662f\u4e00\u4e2a**\u4e00\u6b21\u51fd\u6570**\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528**\u674e\u8d85\u7ebf\u6bb5\u6811**\u6765\u7ef4\u62a4\u6700\u5927\u503c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n \\log ^ 2 n)$\u3002\n\n$$\\texttt{Notice}$$\n\n+ \u5728\u7edf\u8ba1\u8def\u5f84\u65f6\u7531\u4e8e\u8def\u5f84 $x \\to y$ \u548c\u8def\u5f84 $y \\to x$ \u7684\u6743\u503c\u53ef\u80fd\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u5e94\u8be5**\u6b63\u7740\u53cd\u7740\u90fd\u7edf\u8ba1\u4e00\u904d**\u3002\n\n+ \u674e\u8d85\u7ebf\u6bb5\u6811\u6bcf\u6b21\u7edf\u8ba1\u7b54\u6848\u4e4b\u524d\u90fd\u8981**\u6e05\u7a7a**\uff0c\u4f46\u662f**\u76f4\u63a5\u91cd\u5efa\u65f6\u95f4\u590d\u6742\u5ea6\u8fc7\u9ad8**\uff0c\u53ef\u4ee5\u8003\u8651\u5728\u7ebf\u6bb5\u6811\u4e0a\u4ece\u4e0a\u5f80\u4e0b\u626b\uff0c\u5982\u679c\u9047\u5230\u6700\u4f18\u52bf\u7ebf\u6bb5\u4e0d\u4e3a\u521d\u59cb\u503c\u5219\u6e05\u7a7a\uff0c\u7ee7\u7eed\u626b\uff1b\u5426\u5219\u76f4\u63a5\u9000\u51fa\u3002\n\n$$\\texttt{Code}$$\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing poly = vector <int>;\n\nint n, a[150005];\npoly g[150005];\n\nbool vis[150005];\nint f[150005], siz[150005], sum, rt = 0;\n\nlong long ans = 0;\n\nvoid findrt(int u, int fa) {\n    f[u] = 0, siz[u] = 1;\n\n    for (auto v : g[u]) {\n        if (v != fa && !vis[v]) {\n            findrt(v, u);\n\n            f[u] = max(f[u], siz[v]);\n            siz[u] += siz[v];\n        }\n    }\n\n    f[u] = max(f[u], sum - siz[u]);\n\n    if (!rt or f[u] < f[rt]) {\n        rt = u;\n    }\n}\n\nstruct LiChaoTree {\n    struct node {\n        int l, r;\n        long long k, b;\n    } t[600005];\n\n    void build(int p, int l, int r) {\n        t[p].l = l, t[p].r = r;\n        t[p].k = 0, t[p].b = -4e18;\n\n        if (l == r) {\n            return ;\n        }\n\n        int mid = (l + r) >> 1;\n\n        build(p << 1, l, mid);\n        build(p << 1 | 1, mid + 1, r);\n    }\n\n    void clear(int p) {\n        if (t[p].k == 0 && t[p].b == -4e18) {\n            return ;\n        }\n        else {\n            t[p].k = 0, t[p].b = -4e18;\n        }\n\n        if (t[p].l == t[p].r) {\n            return ;\n        }\n\n        int mid = (t[p].l + t[p].r) >> 1;\n\n        clear(p << 1), clear(p << 1 | 1);\n    }\n\n    void update(int p, long long k, long long b) {\n        if (t[p].l == t[p].r) {\n            if (t[p].k * t[p].l + t[p].b < k * t[p].l + b) {\n                t[p].k = k, t[p].b = b;\n            }\n\n            return ;\n        }\n\n        int mid = (t[p].l + t[p].r) >> 1;\n\n        if (k * t[p].l + b > t[p].k * t[p].l + t[p].b) {\n            if (k * mid + b > t[p].k * mid + b) {\n                update(p << 1 | 1, t[p].k, t[p].b);\n                t[p].k = k, t[p].b = b;\n            }\n            else update(p << 1, k, b);\n        }\n        else if (k * t[p].r + b > t[p].k * t[p].r + t[p].b) {\n            if (k * mid + b > t[p].k * mid + t[p].b) {\n                update(p << 1, t[p].k, t[p].b);\n                t[p].k = k, t[p].b = b;\n            }\n            else update(p << 1 | 1, k, b);\n        }\n    }\n\n    long long qry(int p, int x) {\n        if (t[p].l == t[p].r) {\n            return t[p].k * x + t[p].b;\n        }\n\n        int mid = (t[p].l + t[p].r) >> 1;\n        long long ans = t[p].k * x + t[p].b;\n\n        if (x <= mid) ans = max(ans, qry(p << 1, x));\n        else ans = max(ans, qry(p << 1 | 1, x));\n\n        return ans;\n    }\n}tree;\n\nlong long pre_sum[150005], suc_sum[150005];\nlong long pre_rk_sum[150005], suc_rk_sum[150005];\n\nvoid dfs(int u, int fa, int len) {\n    siz[u] = 1;\n\n    for (auto v : g[u]) {\n        if (v != fa && !vis[v]) {\n            pre_sum[v] = pre_sum[u] + a[v];\n            pre_rk_sum[v] = pre_rk_sum[u] + pre_sum[v];\n\n            suc_sum[v] = suc_sum[u] + a[v];\n            suc_rk_sum[v] = suc_rk_sum[u] + 1ll * len * a[v];\n\n            dfs(v, u, len + 1);\n\n            siz[u] += siz[v];\n        }\n    }\n}\n\n\nvoid calc_dfs(int u, int fa, int len) {\n    ans = max(ans, pre_rk_sum[u]);\n    ans = max(ans, suc_rk_sum[u] + suc_sum[u] + 1ll * a[rt]);\n\n    ans = max(ans, tree.qry(1, len) + suc_sum[u] * (len + 1) - suc_rk_sum[u]);\n\n    for (auto v : g[u]) {\n        if (v != fa && !vis[v]) {\n            calc_dfs(v, u, len + 1);\n        }\n    }\n}\n\nvoid add_dfs(int u, int fa, int len) {\n    tree.update(1, pre_sum[u], pre_sum[u] * (len + 1) - pre_rk_sum[u]);\n\n    for (auto v : g[u]) {\n        if (v != fa && !vis[v]) {\n            add_dfs(v, u, len + 1);\n        }\n    }\n}\n\nvoid solve(int u) {\n    vis[u] = true, rt = u;\n    pre_sum[u] = pre_rk_sum[u] = a[u];\n    suc_sum[u] = suc_rk_sum[u] = 0;\n\n    ans = max(ans, 1ll * a[u]), dfs(u, 0, 1);\n\n    tree.clear(1);\n\n    for (auto v : g[u]) {\n        if (!vis[v]) {\n            calc_dfs(v, u, 1);\n            add_dfs(v, u, 2);\n        }\n    }\n\n    reverse(g[u].begin(), g[u].end());\n    tree.clear(1);\n\n    for (auto v : g[u]) {\n        if (!vis[v]) {\n            calc_dfs(v, u, 1);\n            add_dfs(v, u, 2);\n        }\n    }\n\n    for (auto v : g[u]) {\n        if (!vis[v]) {\n            rt = 0, sum = siz[v];\n            findrt(v, u), solve(rt);\n        }\n    }\n}\n\nint main() {\n    ios :: sync_with_stdio(0), cin.tie(0);\n\n    cin >> n;\n\n    for (int i = 1; i < n; ++i) {\n        int u, v; cin >> u >> v;\n        g[u].push_back(v), g[v].push_back(u);\n    }\n\n    for (int i = 1; i <= n; ++i) {\n        cin >> a[i];\n    }\n\n    sum = n, findrt(1, 0), tree.build(1, 1, n);\n\n    solve(rt);\n\n    cout << ans << '\\n';\n\n    return 0;\n}\n```\n\n$$\\texttt{Thanks for watching!}$$",
        "postTime": 1671160498,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "Sum of Prefix Sums"
    },
    {
        "content": "**\u8fd9\u7bc7\u9898\u89e3\u4e0d\u80fd\u591f AC\uff0c\u5927\u5bb6\u53ef\u4ee5\u5f53\u4e2a\u6bb5\u5b50\u770b**\n\n\u9996\u5148\u6b63\u7ecf\u505a\u6cd5\u662f\uff0c\u5982\u679c\u4f60\u94fe\u5206\u6cbb\u7684\u8bdd\uff0c\u5728 LCA \u5904\u5408\u5e76\u4e24\u6bb5\u8def\u5f84\uff0c\u62c6\u6389\u8d21\u732e\u53d1\u73b0\u662f\u4e00\u4e2a\u76f4\u7ebf\u5f62\u5f0f\uff0c $\\max ans_i-ans_l+(d_i-d_l)\\times (s_j-s_l)+ans_j-ans_l$ \u7136\u540e\u8f7b\u94fe\u5728\u91cd\u94fe\u7684\u674e\u8d85\u6811\u4e0a\u67e5\u8be2\u5c31\u884c\u4e86\u3002\u70b9\u5206/\u8fb9\u5206\u4e5f\u662f\u5dee\u4e0d\u591a\u5730\u3002\n\n\u8003\u8651\u4e00\u4e2a\u4e71\u641e\u505a\u6cd5\uff0c\u627e\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u7c7b\u4f3c\u7b97\u76f4\u5f84\u5730 dfs \u4e00\u904d\uff0c\u627e\u5230\u7b54\u6848\u6700\u5927\u7684\u70b9\uff0c\u7136\u540e\u4ece\u90a3\u4e2a\u70b9\u518d\u505a\u4e00\u6b21\u3002\u8fd9\u4e2a\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\n\n\u4f46\u6211\u4eec\u8003\u8651\u505a $200$ \u6b21\uff0c\u6b63\u786e\u7684\u6982\u7387\u4f1a\u975e\u5e38\u5927\u3002\u540c\u65f6\u8003\u8651\u5230\uff0c\u8fd9\u79cd\u8def\u5f84\u662f\u6709\u65b9\u5411\u7684\uff0c\u4e14\u4e0d\u540c\u7684\u65b9\u5411\u7b54\u6848\u4e0d\u540c\uff0c\u6211\u4eec\u8003\u8651\u968f\u673a\u8ba1\u7b97\u6b63\u5411/\u53cd\u5411\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u901a\u8fc7\u7edd\u5927\u90e8\u5206\u7684 hack \u6570\u636e\u3002\n\n\u8fd9\u4e2a\u7a0b\u5e8f pp \u4e86\uff0c\u5e76\u4e14\u5728 open hacking phase \u6ca1\u6709\u88ab\u4eba\u53c9\u6389\u3002\u7136\u800c\uff0c\u4e71\u641e\u4f9d\u7136\u6321\u4e0d\u4f4f\u771f\u6b63\u7684\u795e\u4ed9\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/e9izpqxj.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/srrm62so.png)\n\nhack \u7684\u65b9\u6cd5\u662f\uff0c\u5148\u9020\u4e00\u68f5\u6811\uff0c\u6ee1\u8db3\u4ece\u6839\u8282\u70b9\u5f80\u4e0b\u8dd1\u7684\u7b54\u6848\u662f\u9519\u8bef\u7684\uff0c\u7136\u540e\u5f80\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\u8fde\u4e00\u4e2a\u83ca\u82b1\u3002\u7136\u540e\u4f60\u968f\u7684\u70b9\u5728\u83ca\u82b1\u91cc\u9762\u7684\u8bdd\uff0c\u4e00\u5b9a\u5f97\u4e0d\u5230\u6b63\u786e\u7b54\u6848\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/48ypv6wc.png)\n\n> \u5927\u6982\u957f\u8fd9\u6837\n\n\u7136\u540e\u8fd9\u4e2a\u4e71\u641e\u5c31\u88ab\u53c9\u4e86233\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p3ksza04.png)\n\n\u53c2\u8003\u4ee3\u7801 https://codeforces.ml/contest/1303/submission/70891428\n\n",
        "postTime": 1581583303,
        "uid": 48355,
        "name": "EternalAlexander",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1303G \u3010Sum of Prefix Sums\u3011"
    },
    {
        "content": "### [\u539f\u9898\u94fe\u63a5](https://codeforces.com/contest/1303/problem/G)\n\n\u8fd9\u9898\u597d\u6bd2\u7624\u554a!\n\n\u9996\u5148\u770b\u5230\u662f\u6811\u4e0a\u67e5\u8be2\u5168\u5c40\u67d0\u5f0f\u5b50\u7684\u6700\u5927\u503c\uff0c\u73c2\u4ee5\u60f3\u5230\u8fd9\u9898\u65e0\u5916\u4e4e\u662f\u94fe\u5206\u6cbb($\\text{dsu on tree}$)\u6216\u70b9\u5206\u6cbb\u3002~~\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u4e1a\u7684\u94fe\u5206\u6cbb\u9009\u624b,~~ \u7a9d\u5728\u6bd4\u8d5b\u4e2d\u60f3\u4e86$30$min\u4e5f\u4e0d\u4f1a\u3002\u6bd4\u8d5b\u540e\u60f3\u4e86\u60f3\uff0c\u597d\u50cf$\\text{dsu on tree}$\u4e0d\u661f(\u73c2\u80fd\u8fd8\u662f\u7a9d\u592a\u83dc\u4e86)\u3002\n\n\u70b9\u5206\u6cbb\u3002\u56e0\u4e3a\u662f\u5168\u5c40\u6700\u5927\u503c\uff0c\u6240\u4ee5\u73c2\u4ee5\u4e0d\u7528\u5728\u5206\u6cbb\u91cc\u5bb9\u65a5\u3002\n\n\u5047\u8bbe\u5f53\u524d\u7684\u5b50\u6811\u7684\u6839\u662f$\\text{u}$\u3002\n\n\u7531\u4e8e\u4e0d\u7528\u5bb9\u65a5\uff0c\u6240\u4ee5\u8981\u786e\u4fdd\u5728\u5206\u6cbb\u91cc\u9762\u8def\u5f84\u4e0d\u80fd\u6709\u91cd\u590d\u8fb9\uff0c\u8fd9\u4e2a\u73c2\u4ee5\u679a\u4e3e$\\text{u}$\u7684\u513f\u5b50$\\text{v}$\uff0c\u7136\u540e\u679a\u4e3e$\\text v$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9$\\text y$\uff0c\u53e6\u5916\u5f00\u4e00\u4e2a\u73a9\u610f\u513f\u7ef4\u62a4\u4e4b\u524d\u7684\u6240\u6709\u8282\u70b9$\\text x$\u7684\u4fe1\u606f\uff0c\u5176\u4e2d$\\text x$\u4e0d\u5728\u5b50\u6811$\\text v$\u91cc\u9762\u3002\u8fd9\u6837\u5c31\u73c2\u4ee5\u907f\u514d\u8def\u5f84\u91cd\u590d\u4e86\u3002\n\n\u56e0\u4e3a\u8be2\u95ee\u662f\u6709\u65b9\u5411\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6bcf\u4e00\u6b21\u679a\u4e3e$\\{\\text x,\\text y\\}$\u65f6\uff0c\u9ed8\u8ba4\u65b9\u5411\u4e3a$\\text x\\rightarrow\\text u\\rightarrow \\text y$\u3002\u8fd9\u6837\u5728\u679a\u4e3e\u5b8c$\\text u$\u7684\u513f\u5b50$\\text v$\u4e4b\u540e\uff0c\u8fd8\u8981\u5728\u53cd\u8fc7\u6765\u679a\u4e3e\u4e00\u904d\uff0c\u5373\u679a\u4e3e\u53e6\u4e00\u4e2a\u65b9\u5411\u3002\n\n\u7a9d\u4eec\u8003\u8651\u7ef4\u62a4$\\text x$\u7684\u4ec0\u4e48\u4fe1\u606f\u3002\u8bbe$\\text x\\rightarrow \\text y$\u7684\u7b54\u6848\u4e3a$\\operatorname{ans}(\\text x,\\text y)$\uff0c$\\text x\\rightarrow\\text y$\u8def\u5f84\u7684\u957f\u5ea6\u4e3a$\\operatorname{len}(\\text x,\\text y)$\n\n$\\operatorname{ans}(\\text x,\\text y)=\\operatorname{ans}(\\text v,\\text y)+\\operatorname{ans}(\\text x,\\text u)+\\operatorname{len}(\\text v,\\text y)\\sum\\limits_{w\\in \\text x\\rightarrow\\text u}a_w$\n\n\u8fd9\u91cc\uff0c$\\operatorname{ans}(\\text v,\\text y),\\operatorname{len}(\\text v,\\text y)$\u662f\u5b9a\u503c\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u662f\u4e00\u4e2a$a+x+by$\u7684\u7ed3\u6784\uff0c\u5176\u4e2d$a,b$\u662f\u73c2\u80fd\u4f1a\u53d8\u7684\u5b9a\u503c\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u7a9d\u4eec\u8981\u641e\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\uff1a\n\n1. \u63d2\u5165\u4e8c\u5143\u7ec4$(x,y)$\n2. \u7ed9\u5b9a$c$\uff0c\u67e5\u8be2$\\max\\{x+cy\\}$\n\n\u5230\u8fd9\u513f\uff0c\u60f3\u5fc5\u795e\u4ed9\u4eec\u90fd\u4f1a\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\u6765\u5207\u6389\u8fd9\u9898\u4e86\u5427\n\n\u7136\u540e\u7531\u4e8e\u7a9d\u8fd9\u4e2a\u83dc\u9e21\u4e0d\u4f1a\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u53ea\u80fd\u7528\u5176\u4ed6\u65b9\u6cd5\u3002\n\n\u548c\u674e\u8d85\u7ebf\u6bb5\u6811\u505a\u6cd5\u4e00\u6837\uff0c\u7a9d\u4eec\u628a$(y,x)$\u8f6c\u5316\u4e3a\u5e73\u9762\u4e0a\u4e00\u6761\u76f4\u7ebf\u7684$(k,b)$\uff0c\u7136\u540e\u67e5\u8be2\u5c31\u662f\u8be2\u95ee$\\max\\{f(c)\\}$\u3002\n\n\u7a9d\u91c7\u7528\u52a8\u6001\u51f8\u5305\uff0c\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u54ea\u4e9b\u76f4\u7ebf\u73c2\u80fd\u6210\u4e3a\u6700\u5927\u503c\uff0c\u6309\u7167$k$\u6392\u5e8f\u3002\n\n\u63d2\u5165\u76f4\u7ebf\u65f6\uff0c\u7528\u53c9\u79ef\u5224\u65ad\u4e00\u6761\u76f4\u7ebf\u662f\u5426\u73c2\u80fd\u6210\u4e3a\u6700\u5927\u503c\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u5c31\u76f4\u63a5\u5e73\u8861\u6811\u4e0a\u4e8c\u5206\u6bcf\u4e00\u6761\u76f4\u7ebf$l$\u662f\u5426\u6ee1\u8db3\u6700\u5927\u503c\u7684\u8981\u6c42\uff0c\u5373$c$\u662f\u5426\u5728$l\\cap \\operatorname{nxt}(l)$\u5de6\u8fb9\u3002\n\n\u653e\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n// Code by H~$~C\n#include <bits/stdc++.h>\nusing namespace std;\n\n#ifndef LOCAL_JUDGE\nstatic char _in_buf[100000], *_in_p1 = _in_buf, *_in_p2 = _in_buf;\n#define gc (__builtin_expect(_in_p1 == _in_p2, 0) && (_in_p2 = (_in_p1 = _in_buf) + \\\n        fread(_in_buf, 1, 100000, stdin), _in_p1 == _in_p2) ? -1 : *_in_p1++)\n#else\n#define gc getchar()\n#endif\ninline int read() {\n  register char ch = gc;\n  register int x = 0;\n  while (ch < 48 || ch > 57) ch = gc;\n  while (ch > 47 && ch < 58) x = (x << 3) + (x << 1) + (ch ^ 48), ch = gc;\n  return x;\n}\n\nstatic const int Maxn = 150005;\n\nint n;\nlong long a[Maxn];\nlong long ans;\nvector<int> g[Maxn];\n\n// use to solve something that Li-Chao-Tree do\n// add a line f(x), query max{f(a)}\nnamespace HULL {\n  bool flag;\n  struct line {\n    long long k, b;\n    mutable function<const line* ()> nxt;\n    friend bool operator < (const line &a, const line &b) {\n      if (!flag) return a.k < b.k;\n      const line *s = a.nxt();\n      if (!s) return false;\n      return a.b - s->b < b.b * (s->k - a.k);\n    }\n  };\n  struct dynamic_hull\n  : public multiset<line> {\n    // check if the line is maximum somewhere\n    inline bool bad(iterator it) {\n      if (it == this->end()) return false;\n      auto nxt = next(it);\n      if (it == this->begin()) {\n        if (nxt == this->end()) return false;\n        return it->k == nxt->k && it->b <= nxt->b;\n      }\n      auto prv = prev(it);\n      if (nxt == this->end()) {\n        return it->k == prv->k && it->b <= prv->b;\n      }\n      return (prv->b - it->b) * (nxt->k - it->k) >= (it->b - nxt->b) * (it->k - prv->k);\n    }\n    // add a new line to the current hull\n    inline void add(long long k, long long b) {\n      auto it = this->insert((line){k, b});\n      it->nxt = [=]() { return next(it) == this->end() ? nullptr : &*next(it); };\n      if (bad(it)) return void(this->erase(it));\n      while (next(it) != this->end() && bad(next(it))) this->erase(next(it));\n      while (it != this->begin() && bad(prev(it))) this->erase(prev(it));\n    }\n    // query the maximum value where <x> = x\n    long long query(long long x) {\n      if (this->empty()) return -1LL << 60;\n      flag = true;\n      line l = *lower_bound((line){0, x});\n      flag = false;\n      return l.k * x + l.b;\n    }\n  };\n}\nusing HULL::dynamic_hull;\n\nbool vis[Maxn];\nint sz[Maxn], mxson[Maxn];\nint root, total, mnson;\n\nvoid get_root(int u, int fa) {\n  sz[u] = 1, mxson[u] = 0;\n  for (int v: g[u]) {\n    if (v == fa || vis[v]) continue;\n    get_root(v, u), sz[u] += sz[v];\n    mxson[u] = max(mxson[u], sz[v]);\n  }\n  mxson[u] = max(mxson[u], total - sz[u]);\n  if (mnson > mxson[u]) {\n    root = u;\n    mnson = mxson[u];\n  }\n}\n\nint dep[Maxn];\nlong long dis[Maxn], d[Maxn];\ndynamic_hull h;\n\nvoid dfs_query(int u, int fa, int dep, long long dis, long long sum) {\n  dis += a[u];\n  sum += dis;\n  ans = max(ans, h.query(dep) + sum);\n  for (int &v: g[u]) {\n    if (v == fa || vis[v]) continue;\n    dfs_query(v, u, dep + 1, dis, sum);\n  }\n}\nvoid dfs_modify(int u, int fa, int dep, long long dis, long long sum) {\n  dis += a[u];\n  sum += a[u] * dep;\n  h.add(dis, sum);\n  for (int &v: g[u]) {\n    if (v == fa || vis[v]) continue;\n    dfs_modify(v, u, dep + 1, dis, sum);\n  }\n}\n\nvoid solve(int u) {\n  ans = max(ans, a[u]);\n  \n  h.clear();\n  for (int v: g[u]) {\n    if (vis[v]) continue;\n    dfs_query(v, 0, 1, 0LL, 0LL);\n    dfs_modify(v, 0, 2, a[u], a[u]);\n  }\n}\n\nvoid divide_root(int u) {\n  vis[u] = true;\n  \n  solve(u);\n  reverse(g[u].begin(), g[u].end());\n  solve(u);\n  \n  for (int v: g[u]) {\n    if (vis[v]) continue;\n    \n    total = sz[v], root = 0;\n    mnson = 0x3f3f3f3f;\n    get_root(v, 0);\n    \n    divide_root(root);\n  }\n}\n\nint main() {\n  n = read();\n  for (int i = 1; i < n; ++i) {\n    int u = read(), v = read();\n    g[u].push_back(v);\n    g[v].push_back(u);\n  }\n  for (int i = 1; i <= n; ++i) {\n    a[i] = read();\n  }\n  \n  total = n, root = 0;\n  mnson = 0x3f3f3f3f;\n  get_root(1, 0);\n  \n  divide_root(root);\n  \n  printf(\"%lld\\n\", ans);\n  return 0;\n}\n\n```",
        "postTime": 1581585502,
        "uid": 290488,
        "name": "ycx_girlfriend",
        "ccfLevel": 0,
        "title": "CF1303G Sum of Prefix Sums"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/1303/problem/G) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1303G)\n\n\u4e2a\u4eba\u611f\u89c9\u8fd9\u9898\u79f0\u4e0d\u4e0a\u6bd2\u7624\u3002\n\n\u9996\u5148\u770b\u5230\u9009\u4e00\u6761\u8def\u5f84\u4e4b\u7c7b\u7684\u5b57\u773c\u53ef\u4ee5\u8f7b\u677e\u60f3\u5230\u70b9\u5206\u6cbb\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6bcf\u6b21\u53d6\u539f\u6811\u7684\u91cd\u5fc3 $r$ \u5e76\u5c06\u8def\u5f84\u5206\u4e3a\u7ecf\u8fc7\u91cd\u5fc3\u548c\u4e0d\u7ecf\u8fc7\u91cd\u5fc3\u4e24\u7c7b\u8def\u5f84\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\u8def\u5f84\u6211\u4eec\u80af\u5b9a\u53ef\u4ee5\u5728\u5bf9 $r$ \u6240\u6709\u5b50\u6811\u8fdb\u4e00\u6b65\u5206\u6cbb\u7684\u8fc7\u7a0b\u4e2d\u5c06\u5176\u53d8\u6210\u7b2c\u4e00\u7c7b\u8def\u5f84\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u7528\u8003\u8651\u600e\u6837\u8ba1\u7b97\u7b2c\u4e00\u7c7b\u8def\u5f84\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u663e\u7136\u5bf9\u4e8e\u4e00\u6761\u7b2c\u4e00\u7c7b\u8def\u5f84 $x\\to y$\uff0c\u6211\u4eec\u8981\u5c06\u5176\u62c6\u6210 $x\\to r$ \u548c $r\\to y$ \u4e24\u90e8\u5206\u5206\u522b\u5904\u7406\uff0c\u8003\u8651\u600e\u6837\u5408\u5e76\u8fd9\u4e24\u90e8\u5206\u7684\u8d21\u732e\uff0c\u6211\u4eec\u8bb0 $dep_x$ \u4e3a $x\\to r$ \u8def\u5f84\u4e0a\u70b9\u7684\u4e2a\u6570\uff0c$sum_x$ \u8868\u793a $x\\to r$ \u4e0a\u6240\u6709\u70b9\u7684\u6743\u503c\u4e4b\u548c\uff0c\u90a3\u4e48\u5bf9\u4e8e $x\\to r$ \u4e0a\u67d0\u4e2a\u70b9 $z$ \u800c\u8a00\uff0c\u5b83\u5bf9\u548c\u7684\u8d21\u732e\u5373\u4e3a $(dep_x-dep_z+1)\\times a_z$\uff0c\u540c\u7406\u5bf9\u4e8e $r\\to y$ \u4e0a\u67d0\u4e2a\u70b9 $z$\uff0c\u5b83\u5bf9\u548c\u7684\u8d21\u732e\u5373\u4e3a $(dep_x-1+dep_z)\\times a_z$\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u518d\u8bbe\u4e00\u4e2a $sum1_x$ \u8868\u793a $x\\to r$ \u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684 $(dep_x-dep_z+1)\\times a_z$\uff0c$sum2_x$ \u8868\u793a $x\\to r$ \u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684 $dep_z\\times a_z$ \u4e4b\u548c\u3002\u5bf9\u4e8e $x$ \u7684\u67d0\u4e2a\u513f\u5b50 $y$\uff0c\u663e\u7136\u6709 $sum1_y=sum1_x+sum_y,sum2_y=sum2_x+dep_ya_y$\u3002\n\n\u56e0\u6b64\u4e0a\u9762 $x\\to y$ \u8def\u5f84\u7684\u6743\u503c\u5c31\u53ef\u4ee5\u5199\u4f5c $sum1_x+(dep_x-1)sum_y+sum2_y$\uff0c\u4f46\u6ce8\u610f\u5230 $r$ \u65e2\u5728 $x\\to r$ \u7684\u8def\u5f84\u4e0a\u4e5f\u5728 $r\\to y$ \u7684\u8def\u5f84\u4e0a\uff0c\u5b83\u7684\u8d21\u732e\u88ab\u8ba1\u7b97\u4e86\u4e24\u6b21\uff0c\u56e0\u6b64\u9700\u51cf\u53bb $dep_xa_r$\uff0c\u5f97\u5230 $sum1_x+(dep_x-1)sum_y+sum2_y-dep_xa_r$\uff0c\u8003\u8651\u600e\u6837\u5feb\u901f\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6211\u4eec\u663e\u7136\u8981\u679a\u4e3e $x,y$ \u4e2d\u7684\u4e00\u4e2a\u5e76\u5feb\u901f\u7ef4\u62a4\u53e6\u4e00\u4e2a\u53d8\u91cf\u7684\u51b3\u7b56\uff0c\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u4ec0\u4e48\u597d\u5462\uff1f\u6ce8\u610f\u5230\u5982\u679c\u6211\u4eec\u679a\u4e3e $y$\uff0c\u90a3\u4e48\u6211\u4eec\u76f8\u5f53\u4e8e\u6c42\u82e5\u5e72\u6761\u5f62\u5982 $f_x(t)=(dep_x-1)t+sum1_x-dep_xa_r$ \u7684\u76f4\u7ebf\u5728 $t=sum_y$ \u5904\u7684\u6700\u5927\u503c\uff0c\u800c $sum_y$ \u7684\u503c\u57df\u8fc7\u5927\u4e0d\u597d\u76f4\u63a5\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u8981\u5199\u4e2a\u52a8\u6001\u51f8\u58f3\uff0c\u8fc7\u4e8e\u6bd2\u7624\uff0c\u56e0\u6b64\u8003\u8651\u679a\u4e3e $x$\uff0c\u8fd9\u6837\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u6c42\u82e5\u5e72\u6761\u5f62\u5982 $f_y(t)=sum_y\u00b7t+sum2_y$ \u7684\u76f4\u7ebf\u5728 $t=dep_x-1$ \u5904\u7684\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u503c\u57df\u662f\u5728 $[0,n-1]$ \u8303\u56f4\u5185\u7684\uff0c\u5c31\u53ef\u4ee5\u674e\u8d85\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\u3002\n\n\u7b97\u4e0b\u590d\u6742\u5ea6\uff0c\u70b9\u5206 1log\uff0c\u674e\u8d85\u7ebf\u6bb5\u6811\u5168\u5c40\u63d2\u5165\u662f 1log \u7684\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6 2log\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u6700\u540e\u8bf4\u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\n\n1. \u5728\u70b9\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u6ce8\u610f\u8981\u6b63\u53cd\u5404\u8dd1\u4e00\u904d\uff0c\u56e0\u4e3a\u5047\u8bbe\u6309\u987a\u5e8f\u679a\u4e3e\u7684\u5b50\u6811\u4f9d\u6b21\u662f $t_1,t_2,\\cdots,t_m$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u67d0\u4e2a $i<j$\uff0c\u6709\u53ef\u80fd\u662f $x\\in t_i,y\\in t_j$\uff0c\u4e5f\u6709\u53ef\u80fd $x\\in t_j,y\\in t_i$\u3002\n2. \u6bcf\u6b21\u70b9\u5206\u5b8c\u4e00\u4e2a\u70b9\u540e\u8981\u6e05\u7a7a\u674e\u8d85\u6811\uff0c\u4f46\u91cd\u65b0\u5efa\u6811\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5c06\u4fee\u6539\u7684\u70b9\u8bb0\u5f55\u5728\u4e00\u4e2a `std::vector` \u4e2d\u6bcf\u6b21\u5c06 `vector` \u4e2d\u7684\u70b9\u7684\u6700\u5927\u4f18\u52bf\u7ebf\u6bb5\u8d4b\u4e3a\u7a7a\u5373\u53ef\u3002\n\n```cpp\nconst int MAXN=1.5e5;\nconst ll INF=0x3f3f3f3f3f3f3f3fll;\nint n,a[MAXN+5],hd[MAXN+5],to[MAXN*2+5],nxt[MAXN*2+5],ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nstruct line{\n\tll k,b;\n\tline(ll _k=0,ll _b=-INF):k(_k),b(_b){}\n\tll get(int x){return 1ll*k*x+b;}\n};\nstruct node{int l,r;line v;} s[MAXN*4+5];\nvoid build(int k,int l,int r){\n\ts[k].l=l;s[k].r=r;if(l==r) return;\n\tint mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);\n}\nvector<int> opts;\nvoid modify(int k,line v){\n\tint mid=s[k].l+s[k].r>>1;\n\tll l1=s[k].v.get(s[k].l),r1=s[k].v.get(s[k].r),m1=s[k].v.get(mid);\n\tll l2=v.get(s[k].l),r2=v.get(s[k].r),m2=v.get(mid);\n\tif(l1>=l2&&r1>=r2) return;\n\tif(l2>=l1&&r2>=r1) return s[k].v=v,opts.pb(k),void();\n\tif(m2>=m1){\n\t\tif(l2<l1) return modify(k<<1,s[k].v),s[k].v=v,void();\n\t\telse return modify(k<<1|1,s[k].v),s[k].v=v,void();\n\t} else {\n\t\tif(l2<l1) return modify(k<<1|1,v),void();\n\t\telse return modify(k<<1,v),void();\n\t}\n}\nll query(int k,int x){\n\tif(s[k].l==s[k].r) return s[k].v.get(x);int mid=s[k].l+s[k].r>>1;\n\treturn max(s[k].v.get(x),(x<=mid)?query(k<<1,x):query(k<<1|1,x));\n}\nbool vis[MAXN+5];int siz[MAXN+5],mx[MAXN+5],cent=0,subsiz[MAXN+5];\nll ans=0,sum[MAXN+5],_sum[MAXN+5],__sum[MAXN+5];int dep[MAXN+5];\nvoid findcent(int x,int f,int tot){\n\tsiz[x]=1;mx[x]=0;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f||vis[y]) continue;\n\t\tfindcent(y,x,tot);siz[x]+=siz[y];\n\t\tchkmax(mx[x],siz[y]);\n\t} chkmax(mx[x],tot-siz[x]);\n\tif(mx[x]<mx[cent]) cent=x;\n}\nvector<int> pts;\nvoid getdis(int x,int f){\n\tpts.pb(x);\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f||vis[y]) continue;\n\t\tdep[y]=dep[x]+1;sum[y]=sum[x]+a[y];\n\t\t_sum[y]=_sum[x]+sum[y];\n\t\t__sum[y]=__sum[x]+1ll*a[y]*dep[y];\n\t\tgetdis(y,x);\n\t}\n}\nvoid divcent(int x){\n\tvis[x]=1;chkmax(ans,a[x]);dep[x]=1;\n\tsum[x]=_sum[x]=__sum[x]=a[x];\n\tmodify(1,line(sum[x],__sum[x]));\n\tstack<int> stk;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(vis[y]) continue;\n\t\tsum[y]=sum[x]+a[y];dep[y]=2;\n\t\t_sum[y]=sum[x]+a[x]+a[y];\n\t\t__sum[y]=sum[x]+(a[y]<<1);\n\t\tpts.clear();getdis(y,x);subsiz[y]=pts.size();\n\t\tfor(int i=0;i<pts.size();i++){\n\t\t\tint z=pts[i];\n\t\t\tchkmax(ans,_sum[z]+query(1,dep[z]-1)-1ll*a[x]*dep[z]);\n\t\t}\n\t\tfor(int i=0;i<pts.size();i++){\n\t\t\tint z=pts[i];\n\t\t\tmodify(1,line(sum[z],__sum[z]));\n\t\t} stk.push(y);\n\t}\n\tfor(int i=0;i<opts.size();i++) s[opts[i]].v=line();\n\topts.clear();\n\twhile(!stk.empty()){\n\t\tint y=stk.top();stk.pop();\n\t\tpts.clear();getdis(y,x);\n\t\tfor(int i=0;i<pts.size();i++){\n\t\t\tint z=pts[i];\n\t\t\tchkmax(ans,_sum[z]+query(1,dep[z]-1)-1ll*a[x]*dep[z]);\n\t\t}\n\t\tfor(int i=0;i<pts.size();i++){\n\t\t\tint z=pts[i];\n\t\t\tmodify(1,line(sum[z],__sum[z]));\n\t\t}\n\t} chkmax(ans,_sum[x]+query(1,0)-a[x]);\n\tfor(int i=0;i<opts.size();i++) s[opts[i]].v=line();\n\topts.clear();\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(vis[y]) continue;\n\t\tcent=0;findcent(y,x,subsiz[y]);\n\t\tdivcent(cent);\n\t} \n}\nint main(){\n\tscanf(\"%d\",&n);mx[0]=1e9;build(1,0,n);\n\tfor(int i=1,u,v;i<n;i++) scanf(\"%d%d\",&u,&v),adde(u,v),adde(v,u);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfindcent(1,0,n);divcent(cent);printf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1625801994,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1303G Sum of Prefix Sums"
    },
    {
        "content": "\u53ef\u4ee5\u53d1\u73b0\u90a3\u4e2a\u5f0f\u5b50\u7b49\u4ef7\u4e8e $\\sum_{i=1}^{l}ia_{i}$\u3002\n\n\u8003\u8651\u70b9\u5206\uff0c\u8bbe\u5f53\u524d\u6839\u4e3a $x$\u3002\u9009\u51fa\u6765\u7684 $u,v$ \u4e00\u5b9a\u662f\u53f6\u5b50\uff08\u70b9\u6743\u4e3a\u6b63\uff09\uff0c\u56e0\u4e3a\u6ca1\u6709\u4ec0\u4e48\u672c\u8d28\u5dee\u522b\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e00\u8d77\u7b97\u3002\u6211\u4eec\u628a $x$ \u5728 $(u,v)$ \u4e2d\u7684\u4f4d\u7f6e\u8bb0\u4f5c $o$\uff0c$(u,v)$ \u7684\u6743\u503c\u5c31\u4e3a $\\sum_{i=1}^{l}ia_{i}=\\sum_{i=1}^{o}ia_{i}+l\\sum_{i=o+1}^{l}a_{i}+\\sum_{i=o+1}^{l}(i-l)a_{i}$\uff0c\u8fd9\u662f\u4e2a\u4e00\u6b21\u51fd\u6570\uff0c\u4ee4 $b_{1}=\\sum_{i=1}^{l}ia_{i}=\\sum_{i=1}^{o}ia_{i},b_{2}=\\sum_{i=o+1}^{l}(i-l)a_{i},k=l$\uff0c\u5f97 $\\sum_{i=1}^{l}ia_{i}=k\\times\\sum_{i=o+1}^{l}a_{i}+b_{1}+b_{2}$\u3002\n\n[Code](https://paste.ubuntu.com/p/sfYznyMmVQ/)",
        "postTime": 1620882555,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "solution-cf1303g"
    },
    {
        "content": "## \u9898\u610f:\n\n\u9009\u51fa\u4e00\u6761\u94fe $[u \\to v]$\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e2a\u6743\u503c\uff0c\u7136\u540e\u6c42  $\\max{\\sum s_i}$\uff0c$s_i$ \u4e3a\u8def\u5f84\u524d\u7f00\u548c\u3002\n\n\u9996\u5148\u8def\u5f84\u95ee\u9898\u5148\u60f3\u5230\u70b9\u5206\u6cbb\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u94fe\u4e0a\u8ba1\u7b97\u8fd9\u4e2a\u8d21\u732e\uff0c\u5982\u679c\u5f53\u524d\u91cd\u5fc3\u4e3a $x$\uff0c\u6211\u4eec\u9009\u51fa\u4e86\u4e24\u4e2a\u70b9 $u,v$ \uff0c\u975e\u5e38\u663e\u7136 $u,v$ \u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\u3002\n~~\uff08\u8bc1\u660e\u7565\uff09~~\n\n\u7136\u540e\u4e00\u90e8\u5206\u7684\u8d21\u732e\u662f $[u \\to x]$\uff0c\u53e6\u4e00\u90e8\u5206\u600e\u4e48\u7b97\u5462\uff1f\uff08\u6307 $[x \\to v]$\uff09\uff0c\u6211\u4eec\u5148\u5ffd\u7565\u5de6\u8fb9\u7684\u957f\u5ea6\u7ed9\u4ed6\u5e26\u6765\u7684\u8d21\u732e\uff0c\u628a\u672c\u8eab\u8d21\u732e\u8ba1\u7b97\u4e00\u4e0b\uff0c\u7136\u540e\u5f88\u663e\u7136\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u628a $\\sum a_i [i \\in [x \\to v]]$ \u8bb0\u4e0b\u6765\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a $kx+b$ \u7684\u5f62\u5f0f\uff0c\u5c31\u53ef\u4ee5\u674e\u8d85\u6811/\u52a8\u6001\u51f8\u5305\u4e86\u3002\n\n\u4e5f\u5c31\u662f $k \\times \\sum a_i [x \\to v] + \\sum s_i [x \\to v] + \\sum s_i[u \\to x]$\n\n\u7136\u540e\u679a\u4e3e\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6211\u83dc\u7684\u53ef\u601c\u4e0d\u4f1a\u52a8\u6001\u51f8\u5305\uff0c\u6240\u4ee5\u5199\u4e86\u4e2a\u674e\u8d85\u6811\u3002\n\n```cpp\n#include <bits/stdc++.h> \nusing namespace std;\n#define int long long\nint read() {\n\tint x = 0; char c = getchar();\n\twhile(!isdigit(c)) c = getchar();\n\twhile(isdigit(c)) x = x * 10 + (c - 48), c = getchar();\n\treturn x;\n}\nint n;\nconst int maxn = 2e5 + 52;\nint a[maxn], deg[maxn];\nvector <int> g[maxn];\nstruct Line {\n\tint k, b; Line(int K = 0, int B = -1e18) : k(K), b(B) {}\n\tinline int val(int x) { return k * x + b; }\n} t[maxn << 2];\nvoid build(int l, int r, int p) {\n\tt[p] = Line(); if(l == r) return;\n\tint mid = l + r >> 1; build(l, mid, p << 1); build(mid + 1, r, p << 1 | 1);\n}\nvoid mdf(int l, int r, int p, Line x) {\n\tint lx = x.val(l), ly = t[p].val(l), rx = x.val(r), ry = t[p].val(r);\n\tif(lx <= ly && rx <= ry) return;\n\tif(lx >= ly && rx >= ry) { t[p] = x; return; }\n\tint mid = l + r >> 1, midx = x.val(mid), midy = t[p].val(mid);\n\tif(midx > midy) swap(t[p], x); x.k < t[p].k ? mdf(l, mid, p << 1, x) : mdf(mid + 1, r, p << 1 | 1, x); \n}\nint qry(int l, int r, int p, int x) {\n\tint ans = t[p].val(x), mid = l + r >> 1;\n\tif(l == r) return ans;\n\treturn max(ans, x <= mid ? qry(l, mid, p << 1, x) : qry(mid + 1, r, p << 1 | 1, x));\n}\nint fr[maxn], pos[maxn], tp = 0, upk[maxn], upb[maxn], dwn[maxn];\nvoid add(int f, int sum ,int up, int dw, int d) { fr[++ tp] = f; upk[tp] = sum;  upb[tp] = up; dwn[tp] = dw; pos[tp] = d; }\nint rt, tot, mxrt, vis[maxn], sz[maxn], dep[maxn];\nvoid frt(int u, int p) {\n\tint mxs = 0; sz[u] = 1;\n\tfor(int v: g[u]) if(!vis[v] && v ^ p) { frt(v, u); sz[u] += sz[v]; mxs = max(mxs, sz[v]); }\n\tmxs = max(mxs, tot - sz[u]); if(mxs < mxrt) { rt = u; mxrt = mxs; }\n}\nint leaf[maxn];\nvoid DFS(int u, int p, int f, int sum, int up, int dw) {\n\tdep[u] = dep[p] + 1; if(u != rt && !f) { f = u; } if(deg[u] == 1) add(f, sum - a[rt], up, dw, dep[u]), leaf[u] = 1;\n\tfor(int v: g[u]) if(!vis[v] && v ^ p) DFS(v, u, f, sum + a[v], up + dep[u] * a[v], dw + sum + a[v]), leaf[u] += leaf[v];\n}\nint ans = 0;\nvoid solve(int u) {\n\ttp = 0; DFS(u, 0, 0, a[u], 0, a[u]); int mxd = *max_element(pos + 1, pos + tp + 1);\n\tbuild(1, mxd, 1);\n\tfor(int i = 1, j; i <= tp; i = j) {\n\t\tfor(j = i; j <= tp && fr[j] == fr[i]; ++ j) ans = max(ans, qry(1, mxd, 1, pos[j]) + dwn[j]);\n\t\tfor(j = i; j <= tp && fr[j] == fr[i]; ++ j) mdf(1, mxd, 1, Line(upk[j], upb[j]));\n\t}\n\tbuild(1, mxd, 1);\n\tfor(int i = tp, j; i >= 1; i = j) {\n\t\tfor(j = i; j >= 1 && fr[j] == fr[i]; -- j) ans = max(ans, qry(1, mxd, 1, pos[j]) + dwn[j]);\n\t\tfor(j = i; j >= 1 && fr[j] == fr[i]; -- j) mdf(1, mxd, 1, Line(upk[j], upb[j]));\n\t}\n\tvis[u] = 1; int osz = tot;\n\tfor(int v: g[u]) if(!vis[v] && leaf[v] >= 2) { mxrt = tot = sz[v] < sz[u] ? sz[v] : osz - sz[u]; frt(v, u), solve(rt); }\n}\n#define pb push_back\nsigned main() {\n\tn = read();\n\tfor(int i = 1 ; i < n ; i ++) { int u = read(), v = read(); g[u].pb(v), g[v].pb(u), deg[u]++, deg[v]++; }\n\tfor(int i = 1 ; i <= n ; i ++) a[i] = read(); tot = mxrt = n; frt(1, 0), solve(rt);\n\tcout << ans << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1588683799,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1303G \u3010Sum of Prefix Sums\u3011"
    }
]