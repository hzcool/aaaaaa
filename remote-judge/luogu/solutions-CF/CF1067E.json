[
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u6761\u8fb9\u6709 $\\frac{1}{2}$ \u7684\u6982\u7387\u51fa\u73b0\uff0c\u8fd9\u6837\u4f1a\u5f97\u51fa\u4e00\u4e2a\u68ee\u6797\uff0c\u6c42\u8fd9\u4e2a\u68ee\u6797\u7684\u90bb\u63a5\u77e9\u9635 $A$ \u7684\u79e9 $\\operatorname{rank} A$ \u7684\u671f\u671b\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq 5\\times 10^5$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13889856.html)\n\n\u597d\u9898\uff0c\u6b63\u89e3\u662f\u7ebf\u6027\u4ee3\u6570 + \u671f\u671b DP\u3002~~\u5176\u5b9e\u662f\u4e0d\u77e5\u9053\u7ed3\u8bba\u611f\u89c9\u633a\u96be\u53ea\u8981\u77e5\u9053\u7ed3\u8bba\u5c31\u662f sb \u9898\u7684\u9898~~\n\n\u9996\u5148\u6765\u8bc1\u660e\u4e00\u4e2a\u7ed3\u8bba\uff1a\u4e00\u4e2a\u68ee\u6797\u90bb\u63a5\u77e9\u9635\u7684\u79e9\u4e3a\u8be5\u68ee\u6797\u6700\u5927\u5339\u914d\u6570\u76ee\u7684\u4e24\u500d\u3002\n\n\u8003\u8651 $\\operatorname{rank} A$ \u7684\u4e00\u4e2a\u5b9a\u4e49\uff0c\u4e5f\u5373\u975e\u96f6\u5b50\u5f0f\u7684\u6700\u9ad8\u9636\u6570\u3002\u6240\u4ee5\uff0c\u8bbe $\\operatorname{rank}A=k$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4e00\u4e2a $k$ \u9636\u5b50\u5f0f\u5373\u53ef\u3002\u5f88\u660e\u663e\u7531\u4e8e\u539f\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u662f\u5bf9\u79f0\u77e9\u9635\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u60f3\u53bb\u8003\u8651\u4e00\u4e2a\u5bf9\u79f0\u7684 $k$ \u9636\u5b50\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4e1c\u897f\u5bf9\u5e94\u539f\u56fe\u7684\u4e00\u4e2a\u5bfc\u51fa\u5b50\u56fe\u3002\n\n\u540c\u65f6\uff0c\u68ee\u6797\u7684\u5bfc\u51fa\u5b50\u56fe\u8fd8\u662f\u68ee\u6797\uff0c\u6240\u4ee5\u7c7b\u4f3c\u4e8e\u4e8c\u5206\uff0c\u5c06\u6700\u4f18\u5316\u8f6c\u5316\u4e3a\u5224\u5b9a\uff0c\u53ea\u8981\u8003\u8651\u4e00\u4e2a\u68ee\u6797\u7684\u90bb\u63a5\u77e9\u9635\u4ec0\u4e48\u60c5\u51b5\u4e0b\u662f\u6ee1\u79e9\u7684\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e $n\\times n$ \u7684\u65b9\u9635 $A$ \u6765\u8bf4\uff0c$\\operatorname{rank} A=n$ \u4e0e $\\det A\\neq 0$ \u7b49\u4ef7\u3002\u56e0\u4e3a\u5982\u679c $\\det A\\neq 0$ \u7684\u8bdd\u8fd9\u4e2a\u77e9\u9635\u4e00\u5b9a\u4e0d\u662f\u201c\u538b\u7f29\u6241\u5e73\u5316\u201d\u7684\u53d8\u6362\uff0c\u4e5f\u5373 $\\dim \\operatorname{Ker} A=0$\uff0c\u6839\u636e\u79e9\u96f6\u5316\u5ea6\u5b9a\u7406\u5373\u53ef\u5f97\u51fa\u3002\u4e8e\u662f\u6211\u4eec\u8f6c\u4e3a\u8003\u5bdf\u90bb\u63a5\u77e9\u9635\u7684\u884c\u5217\u5f0f\uff0c\u8fd9\u91cc\u76f4\u63a5\u8003\u8651\u5b9a\u4e49\uff1a\n\n$$\\det A=\\sum\\limits_{\\pi}\\prod_{i=1}^{n}A_{i,\\pi_i}$$\n\n\u6ce8\u610f\u5230\uff0c$A_{i,\\pi_i}$ \u975e\u96f6\uff0c\u8868\u793a\u56fe\u4e0a\u5b58\u5728\u4e00\u6761 $(i,\\pi_i)$ \u7684\u8fb9\u3002\u6240\u4ee5 $\\det A$ \u975e\u96f6\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u6392\u5217 $\\pi$ \u4f7f\u5f97 $(i,\\pi_i)$ \u5b58\u5728\u8fb9\u3002\n\n\u5c06\u8fd9\u4e2a\u6392\u5217\u5199\u6210\u7f6e\u6362\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u5206\u89e3\u6210\u82e5\u5e72\u4e2a\u5faa\u73af\u3002\u6ce8\u610f\u5230\u8003\u5bdf\u7684\u5bf9\u8c61\u662f\u68ee\u6797\uff0c\u6240\u4ee5\u6240\u6709\u5faa\u73af\u7684\u957f\u5ea6\u53ea\u53ef\u80fd\u662f $2$\uff0c\u4e5f\u5373\u4e00\u6761\u8fb9\u4ea7\u751f\u4e00\u4e2a\u5faa\u73af\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5faa\u73af\u5185\u7684\u70b9\u4e24\u4e24\u5339\u914d\uff0c\u5f88\u660e\u663e\u7684\uff0c\u7531\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u88ab\u5339\u914d\u4e0a\u4e86\uff0c\u8fd9\u4e2a\u5339\u914d\u662f\u5b8c\u7f8e\u5339\u914d\u3002\n\n\u4e8e\u662f\u6211\u4eec\u63a8\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u68ee\u6797\u7684\u90bb\u63a5\u77e9\u9635 $A$ \u6765\u8bf4\uff0c$\\operatorname{rank} A=n$ \u4e0e\u68ee\u6797\u6709\u5b8c\u7f8e\u5339\u914d\u662f\u7b49\u4ef7\u7684\u3002\u6240\u4ee5 $\\operatorname{rank} A$ \u4e5f\u5c31\u662f\u539f\u56fe\u7684\u6700\u5927\u6ee1\u8db3\u6709\u5b8c\u7f8e\u5339\u914d\u7684\u5bfc\u51fa\u5b50\u56fe\u7684\u5927\u5c0f\u3002\u8003\u8651\u6c42\u51fa\u539f\u56fe\u7684\u4e00\u4e2a\u6700\u5927\u5339\u914d\uff0c\u56e0\u4e3a\u6ca1\u6709\u6bd4\u6700\u5927\u5339\u914d\u66f4\u5927\u7684\u5339\u914d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9009\u539f\u56fe\u7684\u6700\u5927\u5339\u914d\u4f5c\u4e3a\u5bfc\u51fa\u5b50\u56fe\u3002\n\n\u901a\u8fc7\u4e0a\u8ff0\u7684\u8bf4\u660e\uff0c\u6211\u4eec\u6210\u529f\u8bc1\u660e\u4e86 $\\operatorname{rank} A$ \u4e3a\u6700\u5927\u5339\u914d\u6570\u76ee\u7684\u4e24\u500d\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u53d8\u6210\u6c42\u6700\u5927\u5339\u914d\u6570\u76ee\u7684\u671f\u671b\u4e86\u3002\u6839\u636e\u671f\u671b\u7684\u7ebf\u6027\u6027\uff0c\u8bbe $f_u$ \u8868\u793a $u$ \u4e0e\u4e00\u4e2a\u5b69\u5b50\u5339\u914d\u7684\u6982\u7387\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a\u6240\u6709 $f_u$ \u7684\u548c\u3002\u540c\u65f6\u8fd9\u4e2a $f_u$ \u7684\u8f6c\u79fb\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u4e0d\u505a\u8fc7\u591a\u8bf4\u660e\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=5e5+51,MOD=998244353,INV2=499122177;\nstruct Edge{\n\tll to,prev;\n};\nEdge ed[MAXN<<1];\nll n,tot,from,to,res,c;\nll last[MAXN],f[MAXN];\nnamespace FastIO{\n\tchar buf[MAXN*5],*st=buf,*ed=buf;\n\tinline char gc()\n\t{\n\t\treturn st==ed&&(ed=(st=buf)+fread(buf,1,2500000,stdin),ed==st)?0:*st++; \n\t}\n}\nusing FastIO::gc;\ninline ll read()\n{\n    register ll num=0;\n    register char ch=gc();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=gc();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=gc();\n    }\n    return num;\n}\ninline void addEdge(ll from,ll to)\n{\n\ted[++tot].prev=last[from];\n\ted[tot].to=to;\n\tlast[from]=tot;\n}\ninline void dfs(ll node,ll fa)\n{\n\tll prod=1;\n\tfor(register int i=last[node];i;i=ed[i].prev)\n\t{\n\t\tif(ed[i].to!=fa)\n\t\t{\n\t\t\tdfs(ed[i].to,node),prod=(li)prod*(1+f[ed[i].to])%MOD*INV2%MOD;\n\t\t}\n\t}\t \n\tres=(res+(f[node]=MOD+1-prod))%MOD;\n}\nint main()\n{\n\tn=read(),c=1;\n\tfor(register int i=0;i<n-1;i++)\n\t{\n\t\tfrom=read(),to=read(),addEdge(from,to),addEdge(to,from),c=(c+c)%MOD;\n\t}\n\tdfs(1,0),printf(\"%d\\n\",(li)res*(c+c)%MOD);\n}\n```",
        "postTime": 1603850094,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1067E \u3010Random Forest Rank\u3011"
    },
    {
        "content": "\u8003\u8651\u77e9\u9635\u7684\u79e9\u7684\u610f\u4e49\uff0c\u5373\u975e\u96f6\u5b50\u5f0f\u7684\u6700\u5927\u9636\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684\u5b50\u5f0f\u4f7f\u5f97\u5176\u884c\u5217\u5f0f\u4e0d\u4e3a\u96f6\u3002\u7531\u4e8e\u77e9\u9635\u662f\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u82e5\u5b50\u5f0f\u884c\u5217\u5f0f\u4e0d\u4e3a\u96f6\uff0c\u9009\u62e9\u5305\u62ec\u9009\u62e9\u7684\u6240\u6709\u884c\u5217\u4e0b\u6807\u7684\u4e3b\u5b50\u5f0f\u4e5f\u4e00\u5b9a\u884c\u5217\u5f0f\u4e0d\u4e3a\u96f6\uff0c\u800c\u8fd9\u4e2a\u4e3b\u5b50\u5f0f\u9636\u6570\u66f4\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u8003\u8651\u4e3b\u5b50\u5f0f\u3002\u90bb\u63a5\u77e9\u9635\u7684\u4e3b\u5b50\u5f0f\u65e2\u662f\u5176\u5bfc\u51fa\u5b50\u56fe\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u6240\u4ee5\u95ee\u9898\u53d8\u4e3a\u4ec0\u4e48\u6837\u7684\u68ee\u6797\u884c\u5217\u5f0f\u4e0d\u4e3a\u96f6\u3002\n\n\u8003\u8651\u884c\u5217\u5f0f\u7684\u5b9a\u4e49\uff1a\n$$\n\\det A=\\sum\\limits_{\\pi}(-1)^{\\tau(\\pi)}\\prod\\limits_{i=1}^nA_{i,\\pi_i}\n$$\n\u6ce8\u610f\u5230\u5982\u679c $A_{i,\\pi_i}=1$\uff0c\u5219\u5b58\u5728\u8fb9 $(i,\\pi_i)$\uff0c\u7531\u4e8e\u65e0\u81ea\u73af\uff0c\u8be5\u6392\u5217\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a $1$ \u7684\u5faa\u73af\uff0c\u7531\u4e8e\u65e0\u73af\uff0c\u8be5\u6392\u5217\u4e0d\u5b58\u5728\u957f\u5ea6\u5927\u4e8e $2$ \u7684\u5faa\u73af\uff0c\u6240\u4ee5\u6392\u5217\u53ea\u5b58\u5728\u957f\u5ea6\u4e3a $2$ \u7684\u5faa\u73af\uff0c\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u5f53\u4e14\u4ec5\u5f53 $\\pi$ \u4e3a\u8fd9\u5f20\u56fe\u7684\u5b8c\u7f8e\u5339\u914d\u65f6\uff0c$\\prod\\limits_{i=1}^nA_{i,\\pi_i}\\ne 0$\u3002 \n\n\u68ee\u6797\u6709\u4e00\u4e2a\u663e\u7136\u7684\u6027\u8d28\uff0c\u5b8c\u7f8e\u5339\u914d\u4e0d\u591a\u4e8e\u4e00\u79cd\uff0c\u8003\u8651\u4ece\u53f6\u5b50\u5f00\u59cb\u5339\u914d\uff0c\u5339\u914d\u65b9\u6cd5\u663e\u7136\u552f\u4e00\u3002\n\n\u6240\u4ee5\u68ee\u6797\u7684\u90bb\u63a5\u77e9\u9635\u884c\u5217\u5f0f\u4e0d\u4e3a\u96f6\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\uff1b\u4e00\u4e2a\u68ee\u6797\u7684\u90bb\u63a5\u77e9\u9635\u7684\u79e9\u5373\u5176\u6700\u5927\u5339\u914d\u7684\u4e8c\u500d\u3002\n\n\u95ee\u9898\u8f6c\u53d8\u4e3a\u6c42\u8fd9\u4e2a\u68ee\u6797\u6700\u5927\u5339\u914d\u7684\u671f\u671b\u3002\n\n\u8bbe $f_i$ \u4e3a $i$ \u4e0e\u5176\u513f\u5b50\u5339\u914d\u7684\u65b9\u6848\u6570\uff0c\u7b54\u6848\u5373\u4e3a $2\\sum\\limits_{i=1}^nf_i$\uff0c\u5177\u4f53\u7684\u8f6c\u79fb\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u4ee3\u7801\u91cc\u7684 `f[i]` \u662f $\\frac{f_i}{2^{n-sz_i}}$\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\nint const mod=998244353,inv2=(mod+1)/2;\nstd::vector<int> v[500010];\nint n,f[500010],pw[500010],ans,sz[500010];\nvoid dfs(int x,int fa){\n\tint p=1;\n\tsz[x]=1;\n\tfor(auto u:v[x])if(u!=fa){\n\t\tdfs(u,x);\n\t\tp=1ll*p*(pw[sz[u]-1]+f[u])%mod;\n\t\tsz[x]+=sz[u];\n\t}\n\tans=(ans+1ll*pw[n-sz[x]]*(f[x]=(pw[sz[x]-1]-p+mod)%mod))%mod;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tpw[0]=1;\n\tfor(int i=1;i<=n;i++) pw[i]=pw[i-1]*2%mod;\n\tfor(int i=1,x,y;i<n;i++)scanf(\"%d%d\",&x,&y),v[x].push_back(y),v[y].push_back(x);\n\tdfs(1,0);\n\tprintf(\"%d\\n\",2*ans%mod);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1625035293,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1067E Random Forest Rank"
    },
    {
        "content": "\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u4e2a\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u7684\u79e9\u76f8\u5f53\u4e8e\u8981\u9009\u4e00\u4e2a\u6700\u5927\u7684**\u6709\u5411\u8fb9**\uff08\u5373\u6bcf\u6761\u8fb9\u62c6\u6210\u4e24\u6761\uff09\u8fb9\u96c6\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u51fa\u5ea6\u81f3\u591a\u662f1\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u6700\u5927\u5339\u914d*2\uff0c\u6211\u4eec\u5c31\u662f\u8981\u5bf9\u8fd9\u4e2a\u6240\u6709\u7684\u68ee\u6797\u7684\u6700\u5927\u5339\u914d\u6c42\u548c\u3002\n\n\u800c\u68ee\u6797\u7684\u6700\u5927\u5339\u914d\u663e\u7136\u7b49\u4e8e\u6bcf\u68f5\u6811\u7684\u6700\u5927\u5339\u914d\u4e4b\u548c\uff0c\u800c\u6811\u7684\u6700\u5927\u5339\u914d\u8fd9\u4e2a\u663e\u7136\u662f\u53ef\u4ee5\u81ea\u5e95\u5f80\u4e0a\u8d2a\u5fc3\u7684\u80fd\u5339\u914d\u5219\u5339\u914d\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8d2a\u5fc3\u5339\u914d\u7684\u8fc7\u7a0b\u7528dp\u6a21\u62df\u51fa\u6765\uff0c\u4ee4$f[i][0/1]$\u4e3a\u4ec5\u8003\u8651$i$\u7684\u5b50\u6811\u91cc\u7684\u8fb9\u7684\u9009\u53d6\u60c5\u51b5\uff0ci\u8fd9\u4e2a\u70b9\u88ab\u6216\u672a\u88ab\u5339\u914d\u4e86\u7684\u65b9\u6848\u4e2d\u7684\u6700\u5927\u5339\u914d\u4e4b\u548c\uff0c$g[i][0/1]$\u4e3a\u65b9\u6848\u6570\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u7684\u65f6\u5019\u7a0d\u5fae\u8ba8\u8bba\u4e00\u4e0b\u5373\u53ef\u3002\u5982\u679c\u8fd9\u6761\u8fb9\u9009\u4e14\u4e24\u4e2a\u7aef\u70b9\u90fd\u672a\u88ab\u9009\u90a3\u4e48\u8fd9\u6761\u8fb9\u5fc5\u987b\u5339\u914d\u3002\u6ce8\u610f$f$\u7684\u8f6c\u79fb\u662f\u4e0d\u80fd\u76f8\u4e58\u7684\uff0c\u5fc5\u987b\u7528$fg+gf$\u8fd9\u6837\u7684\u8f6c\u79fb\uff0c\u6240\u4ee5\u8981\u8bb0\u4e00\u4e2a\u65b9\u6848\u6570\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define ll long long\n#define p 998244353\nusing namespace std;\nnamespace ywy {\n\tinline int get() {\n\t    int n = 0;\n\t    char c;\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            break;\n\t        if (c == '-')\n\t            goto s;\n\t    }\n\t    n = c - '0';\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 + c - '0';\n\t        else\n\t            return (n);\n\t    }\n\ts:\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 - c + '0';\n\t        else\n\t            return (n);\n\t    }\n\t}\n\ttypedef struct _b {\n\t    int dest;\n\t    int nxt;\n\t} bian;\n\tbian memchi[2000001];\n\tint gn = 1, heads[500001];\n\tll f[500001][2], g[500001][2];\n\tinline void add(int s, int t) {\n\t    memchi[gn].dest = t;\n\t    memchi[gn].nxt = heads[s];\n\t    heads[s] = gn;\n\t    gn++;\n\t}\n\tvoid dfs(int pt, int baba) {\n\t    g[pt][0] = 1;\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba)\n\t            continue;\n\t        dfs(memchi[i].dest, pt);\n\t        ll f0 = f[pt][0], g0 = g[pt][0], f1 = f[pt][1], g1 = g[pt][1];\n\t        //\u9009\n\t        g[pt][1] = (g0 * g[memchi[i].dest][0] + g1 * (g[memchi[i].dest][0] + g[memchi[i].dest][1])) % p;\n\t        g[pt][0] = (g0 * g[memchi[i].dest][1]) % p;\n\t        f[pt][1] = (f0 * g[memchi[i].dest][0] + g0 * g[memchi[i].dest][0]) % p;\n\t        f[pt][1] = (f[pt][1] + g0 * f[memchi[i].dest][0]) % p;\n\t        f[pt][1] = (f[pt][1] + g1 * (f[memchi[i].dest][0] + f[memchi[i].dest][1])) % p;\n\t        f[pt][1] = (f[pt][1] + f1 * (g[memchi[i].dest][0] + g[memchi[i].dest][1])) % p;\n\t        f[pt][0] = (g0 * f[memchi[i].dest][1] + f0 * g[memchi[i].dest][1]) % p;\n\t        //\u4e0d\u9009\n\t        g[pt][1] = (g[pt][1] + g1 * g[memchi[i].dest][0]) % p;\n\t        g[pt][1] = (g[pt][1] + g1 * g[memchi[i].dest][1]) % p;\n\t        g[pt][0] = (g[pt][0] + g0 * g[memchi[i].dest][0]) % p;\n\t        g[pt][0] = (g[pt][0] + g0 * g[memchi[i].dest][1]) % p;\n\t        f[pt][1] = (f[pt][1] + f1 * (g[memchi[i].dest][0] + g[memchi[i].dest][1])) % p;\n\t        f[pt][1] = (f[pt][1] + g1 * (f[memchi[i].dest][0] + f[memchi[i].dest][1])) % p;\n\t        f[pt][0] = (f[pt][0] + f0 * (g[memchi[i].dest][0] + g[memchi[i].dest][1])) % p;\n\t        f[pt][0] = (f[pt][0] + g0 * (f[memchi[i].dest][0] + f[memchi[i].dest][1])) % p;\n\t    }\n\t}\n\tvoid ywymain() {\n\t    int n = get();\n\t    for (register int i = 1; i < n; i++) {\n\t        int s = get(), t = get();\n\t        add(s, t);\n\t        add(t, s);\n\t    }\n\t    dfs(1, 0);\n\t    cout << ((f[1][0] + f[1][1]) * 2) % p << endl;\n\t}\n}  \nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1559894088,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1067E \u3010Random Forest Rank\u3011"
    },
    {
        "content": "\u7ed3\u8bba\u662f\uff0c\u68ee\u6797\u7684\u90bb\u63a5\u77e9\u9635\u7684\u79e9\u662f\u6700\u5927\u5339\u914d\u7684\u70b9\u6570\uff08\u4e5f\u5c31\u662f\u6700\u5927\u5339\u914d $\\times 2$\uff09\u3002\n\n\u9996\u5148\u90bb\u63a5\u77e9\u9635\u662f\u4e2a\u5bf9\u79f0\u77e9\u9635\uff0c\u79e9\u662f\u975e\u96f6\u5b50\u5f0f\u7684\u6700\u9ad8\u9636\u6570\u3002\u800c\u5bf9\u4e8e\u8fd9\u4e2a\u5bf9\u79f0\u77e9\u9635\u7684\u79e9\uff0c\u53ea\u770b\u4e3b\u5b50\u5f0f\u5373\u53ef\u3002\n\n\u8bc1\u660e\u53ef\u4ee5\u81ea\u884c\u9a8c\u8bc1\u5408\u540c\u53d8\u6362\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u53d8 \u7136\u540e\u5316\u6210\u6b63\u4ea4\u76f8\u4f3c\u6807\u51c6\u578b\u3002\n\n\u7136\u540e\u8003\u8651\u4e00\u4e2a\u4e3b\u5b50\u5f0f\uff0c\u7b97\u7684\u4e1c\u897f\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u70b9\u5bfc\u51fa\u5b50\u56fe\uff08\u4ecd\u7136\u4e3a\u4e00\u4e2a\u68ee\u6797\uff09\u7684\u884c\u5217\u5f0f\u3002\n\n\u628a\u8fd9\u4e2a\u884c\u5217\u5f0f\u7684\u5f0f\u5b50\u5199\u51fa\u6765\uff0c\u8003\u8651\u4ec0\u4e48\u6837\u7684\u68ee\u6797\u884c\u5217\u5f0f\u4e0d\u4e3a $0$\uff1a$\\det (E)=\\sum \\mathrm{sgn}(\\sigma)\\prod E_{i,\\sigma_i}$\uff0e\n\n\u8003\u8651\u53f3\u8fb9\u7684 $\\prod E_{i,\\sigma_i}$\uff0c\u53ea\u6709 $(i,\\sigma_i)$ \u8fd9\u6837\u7684\u8fb9\u90fd\u5b58\u5728\u503c\u624d\u4e3a $1$\uff0c\u53c8\u6709 $E_{i,i}=0$\uff0c\u6811\u4e2d\u5e76\u6ca1\u6709\u65e0\u5411\u7684\u73af\u3002\u6240\u4ee5\u5176\u4e0d\u4e3a $0$ \u53ea\u80fd\u662f\u82e5\u5e72\u4e2a\u4e8c\u5143\u73af\uff0c\u5bf9\u5e94\u5230\u6811\u4e0a\u5c31\u662f\u4e00\u7ec4\u5b8c\u7f8e\u5339\u914d\u3002\n\n\u7136\u540e\u8003\u8651\u6811\u6c42\u6700\u5927\u5339\u914d\u7684\u7b97\u6cd5\uff0c\u4ece\u5e95\u5411\u4e0a\u8d2a\u5fc3\u80fd\u5339\u914d\u5c31\u5339\u914d\uff0c\u56e0\u4e3a\u8003\u8651\u4e00\u4e2a\u53f6\u5b50\u4e0d\u548c\u5176\u7236\u4eb2\u5339\u914d\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u4f18\u3002\u6839\u636e\u8fd9\u4e2a\u7b97\u6cd5\u4e0d\u96be\u5f97\u51fa\u5b8c\u7f8e\u5339\u914d\u662f\u552f\u4e00\u7684\u3002\n\n\u6240\u4ee5 $\\det(E)$ \u975e\u96f6\uff0c\u5373 $E$ \u6ee1\u79e9\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u68ee\u6797\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\u3002\u800c\u6700\u5927\u7684\u70b9\u5bfc\u51fa\u5b50\u56fe\u6ee1\u8db3\u5176\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\uff0c\u5c31\u662f\u539f\u68ee\u6797\u7684\u6700\u5927\u5339\u914d\uff0c\u5219\u7ed3\u8bba\u5f97\u8bc1\u3002\n\n\u73b0\u5728\u95ee\u9898\u53d8\u6210\u4e86\uff0c\u68ee\u6797\u7684\u6bcf\u6761\u8fb9\u53ef\u4ee5\u51fa\u73b0\u548c\u4e0d\u51fa\u73b0\uff0c\u6c42\u6240\u6709\u65b9\u6848\u4e2d\u6700\u5927\u5339\u914d\u7684\u603b\u548c\u662f\u4ec0\u4e48\u3002\n\n\u53ef\u4ee5 dp\uff0c\u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\u4e86\u4e00\u4e2a\u6811\u6c42\u6700\u5927\u5339\u914d\u7684\u7b97\u6cd5\uff0c\u4f9d\u636e\u8fd9\u4e2a\u5217\u4e00\u4e2a dp \u5373\u53ef\u3002\n\n\u8bbe $f_{u,0/1}$ \u8868\u793a\u5728\u8d2a\u5fc3\u5339\u914d\u7b56\u7565\u4e0b\uff0c\u4ec5\u8003\u8651 $u$ \u5b50\u6811\u5185\u7684\u65b9\u6848\uff0c\u6240\u6709\u65b9\u6848\u4e2d $u$ \u6ca1\u88ab\u9009/\u88ab\u9009 \u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u5339\u914d\u6570\u7684\u548c\u662f\u591a\u5c11\u3002\n\n\u4e3a\u4e86\u8ba9 $f$ \u80fd\u591f\u8f6c\u79fb\uff0c\u8fd8\u8981 dp \u4e00\u4e2a $g_{u,0/1}$ \u8868\u793a\u5728\u8d2a\u5fc3\u5339\u914d\u7b56\u7565\u4e0b\uff0c\u4ec5\u8003\u8651 $u$ \u5b50\u6811\u5185\u7684\u65b9\u6848\uff0c\u6240\u6709\u65b9\u6848\u4e2d $u$ \u6ca1\u88ab\u9009/\u88ab\u9009 \u7684\u60c5\u51b5\u4e0b\uff0c\u65b9\u6848\u6570\u4e00\u5171\u6709\u591a\u5c11\u3002\n\n\u5177\u4f53\u5982\u4f55\u8f6c\u79fb\u76f4\u63a5\u8ba8\u8bba\u5373\u53ef\u3002\n\n\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8ba1\u6570\uff0c\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u5bf9\u4e8e\u6bcf\u4e2a $u$ \u8ba1\u7b97\u4ec5\u8003\u8651 $u$ \u5b50\u6811\u5185\u7684\u65b9\u6848\uff0c$u$ \u548c\u513f\u5b50\u5339\u914d\u7684\u65b9\u6848\u6570\u662f\u591a\u5c11\u3002\u8fd9\u4e2a\u76f4\u63a5\u9012\u63a8\u4e5f\u662f\u5bb9\u6613\u7b97\u7684\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\u4e24\u4e2a\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n)$\uff0e\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>\nT &read(T &r){\n\tr=0;bool w=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9')r=r*10+(ch^48),ch=getchar();\n\treturn r=w?-r:r;\n}\nconst int mod=998244353,N=500010;\ninline int add(int x,int y){return (x+y>=mod)?(x+y-mod):(x+y);}\ninline int del(int x,int y){return (x-y<0)?(x-y+mod):(x-y);}\nint n,ans,pow2[N],f[N],siz[N];\nvector<int>eg[N];\nvoid dfs(int u,int fa){\n\tint c=siz[u]=1;\n\tfor(auto v:eg[u])if(v!=fa){\n\t\tdfs(v,u);\n\t\tc=1ll*c*add(f[v],pow2[siz[v]-1])%mod;\n\t\tsiz[u]+=siz[v];\n\t}\n\tans=add(ans,1ll*(f[u]=del(pow2[siz[u]-1],c))*pow2[n-siz[u]]%mod);\n}\nsigned main(){\n\tread(n);pow2[0]=1;\n\tfor(int i=1;i<n;i++){\n\t\tpow2[i]=add(pow2[i-1],pow2[i-1]);\n\t\tint x,y;read(x);read(y);\n\t\teg[x].emplace_back(y);eg[y].emplace_back(x);\n\t}\n\tdfs(1,0);\n\tcout << add(ans,ans) << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1662123266,
        "uid": 366951,
        "name": "qawszx",
        "ccfLevel": 0,
        "title": "CF1067E"
    }
]