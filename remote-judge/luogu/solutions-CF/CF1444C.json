[
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u5f20\u70b9\u6709\u7c7b\u578b\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u6709\u591a\u5c11\u7ec4\u65e0\u5e8f\u7c7b\u578b\u5bf9 $(a,b)$ \u4f7f\u5f97\u4e24\u79cd\u7c7b\u578b\u8282\u70b9\u7684\u5bfc\u51fa\u5b50\u56fe\u662f\u4e8c\u5206\u56fe\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u4e8c\u5206\u56fe\u5224\u5b9a\u7b49\u4ef7\u4e8e\u5947\u73af\u5b58\u5728\u6027\uff0c\u90a3\u4e48\u5947\u73af\u53ea\u4f1a\u51fa\u73b0\u5728\u7c7b\u578b\u5185\u90e8\u548c\u7c7b\u578b\u4e4b\u95f4\u3002\u80fd\u5bf9\u7b54\u6848\u8d21\u732e\u7684\u7c7b\u578b\u5fc5\u5b9a\u6ca1\u6709\u5947\u73af\uff0c\u53ef\u4ee5\u5148\u5bf9\u6bcf\u4e2a\u7c7b\u578b dfs \u67d3\u8272\u5224\u5b9a\u3002\u5224\u5b9a\u5f97\u5230\u4ee5\u4e0b\u503c\uff1a$f_i$ \u8868\u793a $i$ \u5c5e\u4e8e\u7b2c $f_i$ \u4e2a\u8fde\u901a\u5757\uff0c$g_i$ \u8868\u793a\u5176\u88ab\u67d3\u8272 $i$\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8003\u8651\u54ea\u4e9b\u5269\u4e0b\u7684\u7c7b\u578b\u5bf9\u4e4b\u95f4\u4e0d\u6210\u5947\u73af\uff0c\u663e\u7136\u6570\u76ee\u662f\u975e\u5e38\u5927\u7684\uff0c\u8003\u8651\u8f6c\u5316\u4e3a\u6c42\u54ea\u4e9b\u7c7b\u578b\u5bf9\u6210\u5947\u73af\u3002\u663e\u7136\u7c7b\u578b\u5bf9\u80fd\u6210\u5947\u73af\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u7c7b\u578b\u5bf9\u4e4b\u95f4\u6709\u8fb9\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u7c7b\u95f4\u8fb9\u6309\u7167\u7aef\u70b9\u6240\u5c5e\u7c7b\u578b\u6392\u5e8f\u4e00\u8d77\u5904\u7406\uff0c\u8fd9\u6837\u9700\u8981\u5904\u7406\u7684\u7c7b\u578b\u5bf9\u6570\u76ee\u662f $O(m)$ \u7684\u3002\n\n\u8003\u8651\u4e00\u4e2a\u7c7b\u578b\u5bf9\u65f6\uff0c\u5efa\u7acb\u4e00\u5f20\u65b0\u56fe\uff0c\u8bbe\u7c7b\u95f4\u8fde\u8fb9 $(u,v)$\uff0c\u82e5 $g_u=g_v$ \u5219\u8fde\u8fb9 $(f_u,f_v)$ \u8868\u793a $f_u,f_v$ \u7684\u6807\u8272\u662f\u53cd\u7684\uff0c\u5426\u5219\u8fde\u8fb9 $(f_u,newnode),(newnode,f_v)$ \u8868\u793a $f_u,f_v$ \u7684\u6807\u8272\u76f8\u540c\uff0c\u5219\u663e\u7136\u539f\u56fe\u4e0d\u77db\u76fe\u5f53\u4e14\u4ec5\u5f53\u65b0\u56fe\u662f\u4e8c\u5206\u56fe\uff0c\u5bf9\u65b0\u56fe\u518d\u8dd1\u4e2a\u4e8c\u5206\u56fe\u5224\u5b9a\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n+m)$ \u6216 $O(n+m\\log m)$\uff0c\u53d6\u51b3\u4e8e\u6392\u5e8f\u662f\u5feb\u6392\u8fd8\u662f\u57fa\u6392\u3002\u7531\u4e8e\u6ca1\u6709\u5e76\u67e5\u96c6\uff0c\u590d\u6742\u5ea6\u5e76\u6ca1\u6709 $\\alpha$\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pa;\nconst int N=2e6+2;\nvector<int> lb[N],bh[N];\nll ans;\nint bel[N],ed[N],f[N],nf[N],app[N],fir[N],nxt[N],lj[N];\nint n,c,fh,i,j,k,t,x,y,m,bs,q,tp,cnt,cur,atp,ld;\nbool av[N],ned[N];\nstruct Q\n{\n\tint bu,bv,u,v;\n\tQ(int a=0,int b=0):bu(bel[a]),bv(bel[b]),u(a),v(b){}\n\tbool operator<(const Q &o) const {return (bu<o.bu)||(bu==o.bu)&&(bv<o.bv);}\n};\nQ st[N];\ninline void add(int x,int y)\n{\n\tlj[++bs]=y;\n\tnxt[bs]=fir[x];\n\tfir[x]=bs;\n\tlj[++bs]=x;\n\tnxt[bs]=fir[y];\n\tfir[y]=bs;\n}\ninline void read(int &x)\n{\n\tc=getchar();fh=1;\n\twhile ((c<48)||(c>57))\n\t{\n\t\tif (c=='-') {c=getchar();fh=-1;break;}\n\t\tc=getchar();\n\t}\n\tx=c^48;c=getchar();\n\twhile ((c>=48)&&(c<=57))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n\tx*=fh;\n}\nvoid dfs1(int x,int y)\n{\n\ted[x]=cnt;f[x]=y;\n\tfor (int i=0;i<lb[x].size();i++) if (!ed[lb[x][i]]) dfs1(lb[x][i],y^1); else\n\t{\n\t\tif (y==f[lb[x][i]]) {av[cur]=0;return;}\n\t}\n}\nvoid dfs2(int x,int y)\n{\n\t//printf(\"dfs2 %d %d\\n\",x,y);\n\tned[x]=1;nf[x]=y;\n\tfor (int i=fir[x];i;i=nxt[i]) if (!ned[lj[i]]) dfs2(lj[i],y^1); else\n\t{\n\t\tif (y==nf[lj[i]]) {av[cur]=0;return;}\n\t}\n}\nint main()\n{\n\t//freopen(\"a.in\",\"r\",stdin);\n\tread(n);read(m);read(q);\n\tfor (i=1;i<=n;i++) {read(bel[i]);bh[bel[i]].push_back(i);}\n\twhile (m--)\n\t{\n\t\tread(x);read(y);if (bel[x]!=bel[y])\n\t\t{\n\t\t\tif (bel[x]>bel[y]) swap(x,y);\n\t\t\tst[++tp]=Q(x,y);\n\t\t} else lb[x].push_back(y),lb[y].push_back(x);\n\t}\n\tfor (i=1;i<=q;i++) av[i]=1;ld=n;\n\tfor (i=1;i<=q;i++)\n\t{\n\t\tcur=i;\n\t\tfor (j=0;(j<bh[i].size())&&(av[cur]);j++) if (!ed[bh[i][j]]) {++cnt;dfs1(bh[i][j],0);}\n\t}cnt=0;\n\tfor (i=1;i<=q;i++) if (!av[i]) ++cnt;\n\tans=(ll)(q-cnt)*(q-cnt-1)>>1;\n\tsort(st+1,st+tp+1);\n\tfor (i=1;i<=tp;i=j+1)\n\t{\n\t\tj=i;\n\t\twhile ((j<tp)&&(st[j+1].bu==st[i].bu)&&(st[j+1].bv==st[i].bv)) ++j;\n\t\tif (!(av[st[i].bv]&&av[st[i].bu])) continue;\n\t\tatp=0;\n\t\tfor (k=i;k<=j;k++)\n\t\t{\n\t\t\t//if ((st[k].bu==2)&&(st[k].bv==3)) printf(\"%d %d %d %d %d\\n\",st[k].u,st[k].v,(int)f[st[k].u]==f[st[k].v],ed[st[k].u],ed[st[k].v]);\n\t\t\tif (f[st[k].u]==f[st[k].v])\n\t\t\t{\n\t\t\t\tadd(ed[st[k].u],++ld);\n\t\t\t\tadd(ld,ed[st[k].v]);\n\t\t\t} else add(ed[st[k].u],ed[st[k].v]);\n\t\t\tif (!ned[ed[st[k].u]]) app[++atp]=ed[st[k].u],ned[ed[st[k].u]]=1;\n\t\t\tif (!ned[ed[st[k].v]]) app[++atp]=ed[st[k].v],ned[ed[st[k].v]]=1;\n\t\t}\n\t\tfor (k=1;k<=atp;k++) ned[app[k]]=0;\n\t\tav[cur=i+q]=1;\n\t\tfor (k=1;(k<=atp)&&(av[cur]);k++) if (!ned[app[k]]) dfs2(app[k],0);\n\t\tif (!av[cur]) --ans;\n\t\t//printf(\"%d:%d %d\\n\",(int)av[cur],st[i].bu,st[i].bv);\n\t\tfor (k=1;k<=atp;k++) fir[app[k]]=0,ned[app[k]]=0;bs=0;\n\t}\n\tprintf(\"%lld\",ans);\n}\n```",
        "postTime": 1604339781,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1444C \u3010Team-Building\u3011"
    },
    {
        "content": "\n\u66f4\u6728\u68d2\u7684\u9605\u8bfb\u4f53\u9a8c $\\to $ [`George1123`](https://www.cnblogs.com/George1123/p/13912680.html)\n\n---\n\n## \u9898\u9762\n\n> [CF1444C Team-Building](https://www.luogu.com.cn/problem/CF1444C)\n\n> \u7ed9 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u6709\u989c\u8272 $c_i(1\\le c_i\\le k)$\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u989c\u8272\u5bf9\u4e24\u7ec4\u70b9\u5e76\u540e\u662f\u4e8c\u5206\u56fe\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le n,m,k\\le 5\\cdot 10^5$\u3002\n\n---\n\n## \u849f\u84bb\u8bed\n\n\u542c\u4eba\u8bf4\u662f\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u540e\u5f03\u7597\u4e86\uff0c\u6253\u51fa\u6b63\u89e3\u4e86\u6ca1\u6253\u5b8c\uff0c\u5176\u5b9e\u666e\u901a\u5e76\u67e5\u96c6\uff08~~\u6743\u503c\u5e76\u67e5\u96c6\u5957\u6743\u503c\u5e76\u67e5\u96c6~~\uff09\u5c31\u591f\u4e86\u3002\n\n\u56e0\u4e3a\u524d\u9762\u597d\u591a\u6cd5\u5e08\u5854\uff0c\u53ea\u4e0b\u4e86 $7$ \u5206\u3002\n\n---\n\n## \u9898\u89e3\n\n\u770b\u5230\u5224\u65ad\u4e8c\u5206\u56fe\u60f3\u5230\u9ed1\u767d\u67d3\u8272\u3002\u4f46\u662f\u4e0d\u60f3 `dfs`\uff0c\u600e\u4e48\u529e\uff1f\n\n\u6709\u4e24\u79cd\u529e\u6cd5\uff1a\u62c6\u70b9\u5e76\u67e5\u96c6\u548c\u8def\u5f84\u5e26\u6743\u503c\u5e76\u67e5\u96c6\u3002\u849f\u84bb\u9009\u4e86\u540e\u8005\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u989c\u8272\uff0c\u5185\u90e8\u4e0d\u662f\u4e8c\u5206\u56fe\u90a3\u4e48\u52a0\u5165\u4e86\u53e6\u4e00\u7ec4\u4e5f\u4e0d\u662f\u4e8c\u5206\u56fe\u4e86\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5148\u7528\u8def\u5f84\u5e26\u6743\u503c\u5e76\u67e5\u96c6\u5728\u6bcf\u4e2a\u989c\u8272\u5185\u90e8\u628a\u9ed1\u767d\u5173\u7cfb\u8fde\u597d\uff0c\u5185\u90e8\u4e0d\u662f\u4e8c\u5206\u56fe\u7684\u4ee5\u540e\u4e5f\u4e0d\u7528\u7ba1\u4e86\u3002\n\n\u7136\u540e\u5904\u7406\u4e24\u4e2a\u989c\u8272\u4e4b\u95f4\u7684\u3002\u867d\u7136\u770b\u4f3c $\\Theta(n^2)$\uff0c\u4f46\u662f\u5982\u679c\u4e24\u4e2a\u989c\u8272\u95f4\u6ca1\u8fb9\u5fc5\u7136\u662f\u4e8c\u5206\u56fe\uff0c\u5426\u5219\u53ea\u6709 $\\Theta(m)$ \u4e2a\u3002\n\n\u5904\u7406\u4e24\u4e2a\u989c\u8272\u95f4\u7684\uff0c\u53ef\u4ee5\u628a\u4e24\u4e2a\u989c\u8272\u5185\u90e8\u7684\u6bcf\u4e2a\u8fde\u901a\u5757\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u518d\u5957\u4e00\u5c42\u6743\u503c\u5e76\u67e5\u96c6\u7136\u540e\u8fde\u9ed1\u767d\u5173\u7cfb\u3002\n\n\u5916\u9762\u90a3\u5c42\u5e76\u67e5\u96c6\u6bcf\u6b21\u53ea\u9700\u8981\u521d\u59cb\u5316\u8981\u7528\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u53ef\u64a4\u9500\u3002\n\n---\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair((a),(b))\n#define x first\n#define y second\n#define bg begin()\n#define ed end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define R(i,a,b) for(int i=(a),i##E=(b);i<i##E;i++)\n#define L(i,a,b) for(int i=(b)-1,i##E=(a)-1;i>i##E;i--)\nconst int iinf=0x3f3f3f3f;\nconst ll linf=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=5e5;\nint n,m,k,c[N],good;\nbool bad[N];\n\n//Graph\nmap<pair<int,int>,int> mp;\nint mc; pair<int,int> me[N];\nvector<pair<int,int>> e[N];\n\n//Dsu\nstruct dsu{\n    int te[N],dep[N];\n    int find(int u){\n        if(te[u]==u) return u;\n        int an=find(te[u]);\n        dep[u]^=dep[te[u]];\n        return te[u]=an;\n    }\n}d[2];\n\n//Main\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin>>n>>m>>k,good=k;\n    R(i,0,n) cin>>c[i],--c[i];\n    R(i,0,m){\n        int u,v; cin>>u>>v,--u,--v;\n        if(c[u]>c[v]) swap(u,v);\n        pair<int,int> t=mp(c[u],c[v]);\n        if(!mp.count(t)) mp[t]=mc,me[mc]=t,mc++;\n        e[mp[t]].pb(mp(u,v));\n    }\n    iota(d[0].te,d[0].te+n,0);\n    R(i,0,k)if(mp.count(mp(i,i))){\n        for(pair<int,int> t:e[mp[mp(i,i)]]){\n            int x=d[0].find(t.x),y=d[0].find(t.y);\n            if(x==y&&(d[0].dep[t.x]^d[0].dep[t.y]^1)!=0){bad[i]=true,good--;break;}\n            d[0].dep[x]=d[0].dep[t.x]^d[0].dep[t.y]^1,d[0].te[x]=y;\n        }\n    }\n    // cout<<\"good=\"<<good<<'\\n';\n    ll ans=1ll*good*(good-1)/2;\n    R(i,0,mc)if(me[i].x!=me[i].y){\n        if(bad[me[i].x]||bad[me[i].y]) continue;\n        for(pair<int,int> t:e[i]){\n            int xi=d[0].find(t.x),yi=d[0].find(t.y);\n            d[1].dep[xi]=0,d[1].te[xi]=xi,d[1].dep[yi]=0,d[1].te[yi]=yi;\n        }\n        for(pair<int,int> t:e[i]){\n            int xi=d[0].find(t.x),yi=d[0].find(t.y);\n            int x=d[1].find(xi),y=d[1].find(yi);\n            if(x==y&&(d[1].dep[xi]^d[0].dep[t.x]\n                ^d[1].dep[yi]^d[0].dep[t.y]^1)!=0){ans--;break;}\n            d[1].dep[x]=d[1].dep[xi]^d[0].dep[t.x]\n                ^d[1].dep[yi]^d[0].dep[t.y]^1,d[1].te[x]=y;\n        }\n    }    \n    cout<<ans<<'\\n';\n    return 0;\n}\n```\n\n---\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1604277175,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1444C \u3010Team-Building\u3011"
    },
    {
        "content": "\u4ece\u522b\u7684\u9898\u89e3\u90a3\u91cc\u6284\u6765\u7684\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u5f20\u70b9\u6709\u7c7b\u578b\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u6709\u591a\u5c11\u7ec4\u65e0\u5e8f\u7c7b\u578b\u5bf9 $(a,b)$ \u4f7f\u5f97\u4e24\u79cd\u7c7b\u578b\u8282\u70b9\u7684\u5bfc\u51fa\u5b50\u56fe\u662f\u4e8c\u5206\u56fe\u3002\n\n\u5bb9\u6613\u60f3\u5230\u628a\u540c\u4e00\u7c7b\u578b\u7684\u70b9\u5185\u90e8\u5148\u5224\u65ad\u662f\u5426\u662f\u4e8c\u5206\u56fe\uff0c\u53ef\u4ee5\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u641e\u641e\uff08\u7c7b\u4f3c dfs \u9ed1\u767d\u67d3\u8272\uff09\u3002\u5982\u679c\u67d0\u79cd\u7c7b\u578b\u7684\u70b9\u672c\u8eab\u5c31\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u4e4b\u540e\u5c31\u65e0\u9700\u8003\u8651\u8fd9\u7c7b\u70b9\uff0c\u53ef\u4ee5\u628a\u5b83\u4eec\u76f4\u63a5\u5220\u53bb\u3002\n\n\u7136\u540e\u5c31\u53ea\u5269\u4e0b\u8fde\u63a5\u4e0d\u540c\u7c7b\u578b\u70b9\u7684\u8fb9\u4e86\u3002\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u56fe\u5f88\u7a00\uff0c\u56e0\u6b64\u8003\u8651\u6539\u4e3a\u8ba1\u7b97\u6709\u591a\u5c11\u7ec4 $(a,b)$ \u4f7f\u5f97\u4e24\u79cd\u7c7b\u578b\u8282\u70b9\u7684\u5bfc\u51fa\u5b50\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u8fd9\u6837\u53ea\u9700\u679a\u4e3e\u56fe\u4e2d\u5b58\u5728\u7684\u7c7b\u578b\u5bf9\u5224\u65ad\u5373\u53ef\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u56fe\u4e2d\u4e00\u6761\u8fde\u63a5\u7c7b\u578b $(a,b)$ \u7684\u8fb9\uff0c\u82e5\u8fde\u63a5\u540e\u4f1a\u4ea7\u751f\u5947\u73af\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u4e0d\u5408\u6cd5\uff0c\u8fdb\u800c\u5f97\u5230\u8fd9\u4e2a\u7c7b\u578b\u5bf9 $(a,b)$ \u4e0d\u5408\u6cd5\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\u6bcf\u6b21\u679a\u4e3e\u5230\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u5bf9\u65f6\uff0c\u8981\u64a4\u9500\u4e0a\u4e00\u4e2a\u7c7b\u578b\u5bf9\u4ea7\u751f\u7684\u5f71\u54cd\uff0c\u4e8e\u662f\u5c31\u628a\u5e76\u67e5\u96c6\u6539\u6210\u53ef\u64a4\u9500\u7684\u5c31\u505a\u5b8c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(m \\log n)$\u3002\n\n```cpp\n#define int long long\n#define pii pair<int, int>\n#define mp(x, y) make_pair(x, y)\n\nconst int maxn = 5e5 + 5;\n\nint n, m, k, cnt, ans, tot, flag;\nint col[maxn], fa[maxn], g[maxn], siz[maxn], vis[maxn];\n\nint tp, sta[maxn];\n\ninline int find(int x, int &c) {\n    while (fa[x] != x) {\n        c ^= g[x], x = fa[x];\n    }\n    return x;\n}\ninline bool merge(int x, int y) {\n    int res1 = 0, res2 = 0;\n    x = find(x, res1);\n    y = find(y, res2);\n    int w = res1 ^ res2 ^ 1;\n    if (x == y) {\n        if (w == 1) return 0;\n        return 1;\n    }\n    if (siz[x] > siz[y]) swap(x, y);\n    fa[x] = y, g[x] = w, siz[y] += siz[x];\n    if (flag) sta[++tp] = x;\n    return 1;\n}\n\ninline void del(int x, int y) {\n    while (true) {\n        siz[x] -= y;\n        if (fa[x] == x) return;\n        x = fa[x];\n    }\n}\n\nint buc[maxn][2];\nmap <pii, int> mp;\nvector <pii> e[maxn];\n\nsigned main(void) {\n    n = read(), m = read(), cnt = k = read();\n    for (int i = 1;i <= n;i++) col[i] = read(), fa[i] = i, siz[i] = 1;\n    for (int i = 1, u, v;i <= m;i++) {\n        u = read(), v = read();\n        if (col[u] != col[v]) {\n            if (col[u] > col[v]) swap(u, v);\n            pii p = mp(col[u], col[v]);\n            if (!mp.count(p)) { \n                mp[p] = ++tot;\n                buc[tot][0] = col[u], buc[tot][1] = col[v];\n            }\n            e[mp[p]].push_back(mp(u, v));\n            continue;\n        }\n        if (!merge(u, v)) {\n            if (!vis[col[u]]) cnt--;\n            vis[col[u]] = 1;\n        }\n    }\n    ans = cnt * (cnt - 1) / 2, flag = 1;\n    for (int i = 1;i <= tot;i++) {\n        if (vis[buc[i][0]] || vis[buc[i][1]]) continue;\n        int fl = 1;\n        for (pii p : e[i]) {\n            int u = p.first, v = p.second;\n            if (!merge(u, v)) {\n                fl = 0;\n                break;\n            } \n        }\n        if (!fl) ans--;\n        for (int i = 1;i <= tp;i++) {\n            if (fa[sta[i]] != sta[i]) del(fa[sta[i]], siz[sta[i]]);\n            fa[sta[i]] = sta[i], g[sta[i]] = 0;\n        }\n        tp = 0;\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1627118643,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1444C\u3010Team-Building\u3011"
    },
    {
        "content": "# \u77e5\u8bc6\u70b9\uff1a\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u679a\u4e3e \n\n\n\u539f\u9898\u9762\uff1a[Codeforces](https://codeforces.com/problemset/problem/1444/C)\n\n\u626f\n\n\u9898\u89e3\u7684\u8fd9\u4e2a\u7f29\u70b9\u6709\u70b9 nb\u3002\n\n\u8fd9\u4e2a\u8f6c\u5316\u679a\u4e3e\u5bf9\u8c61\u6709\u70b9 nb\u3002\n\n\n\u611f\u8c22 [DrCold](https://codeforces.com/profile/DrCold) \u7684\u6ce8\u91ca\u4ee3\u7801\uff01  \n\u63d0\u4ea4\u8bb0\u5f55\uff1a[https://codeforces.com/contest/1445/submission/97408824](https://codeforces.com/contest/1445/submission/97408824)\u3002\n\n---\n\n## \u9898\u610f\u7b80\u8ff0\n\n\n>\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u8282\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6ca1\u6709\u81ea\u73af\u91cd\u8fb9\u3002  \n>\u6bcf\u4e2a\u8282\u70b9\u90fd\u5728\u4e00\u4e2a\u7ec4 (group) \u4e2d\uff0c\u5171\u6709 $k$ \u7ec4\uff0c\u53ef\u80fd\u5b58\u5728\u67d0\u7ec4\u4e3a\u7a7a\u3002  \n>\u6c42\u9009\u51fa\u4e24\u7ec4\u70b9\uff0c\u662f\u5b83\u4eec\u80fd\u6784\u6210\u4e8c\u5206\u56fe\u7684 \u65b9\u6848\u6570\u3002  \n>$1\\le n\\le 5\\times 10^5$\uff0c$0\\le m\\le 5\\times 10^5$\uff0c$2\\le k\\le 5\\times 10^5$\u3002  \n>$1\\le c_i\\le k$\u3002  \n>3S\uff0c512MB\u3002  \n\n---\n\n## \u5206\u6790\u9898\u610f\n\n\u4e00\u5f20\u56fe\u662f\u4e8c\u5206\u56fe\u7684\u5145\u8981\u6761\u4ef6\u662f\u4e0d\u5b58\u5728\u5947\u73af\u3002  \n\u5148\u8003\u8651\u6bcf\u4e00\u7ec4\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\uff0c\u4f7f\u7528\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002  \n\u5c06\u5185\u90e8\u4e0d\u4e3a\u4e8c\u5206\u56fe\u7684\u7ec4\u5220\u9664\uff0c\u518d\u53cd\u5411\u8f6c\u5316\u4e00\u4e0b\uff0c\u6c42\u5269\u4e0b\u7684 $k'$ \u7ec4\u91cc\uff0c\u6709\u591a\u5c11\u5bf9\u4e0d\u80fd\u7ec4\u6210\u4e8c\u5206\u56fe\uff0c\u7b54\u6848\u5373 $\\frac{k'(k'-1)}{2} -$ \u5bf9\u6570\u3002\n\n\u4e4b\u540e\u679a\u4e3e\u6240\u6709\u70b9\u5bf9\u68c0\u67e5\uff1f\u592a\u6162\u5566\uff01  \n\u53d1\u73b0\u4e24\u7ec4\u70b9 \u4e0d\u80fd\u6784\u6210\u4e8c\u5206\u56fe\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u662f\u4e24\u7ec4\u70b9\u4e4b\u95f4\u6709\u81f3\u5c11\u4e00\u6761\u8fb9\u3002  \n\u53d1\u73b0\u56fe\u5f88\u7a00\u758f\uff0c\u8003\u8651\u679a\u4e3e\u6240\u6709\u7684 **\u8fde\u63a5\u4e0d\u540c\u7ec4** \u7684\u8fb9\u68c0\u67e5\u3002\n\n\u5148\u5c06\u6240\u6709\u8fde\u63a5\u4e0d\u540c\u7ec4\u7684\u8fb9\u6309\u7167 \u5b83\u4eec\u4e24\u7aef\u7684\u70b9\u7684\u7ec4\u53f7\u6392\u5e8f\uff0c\u4f7f\u5f97\u8fde\u63a5\u7684\u7ec4\u76f8\u540c\u7684\u8fb9 \u662f \u88ab\u8fde\u7eed\u679a\u4e3e\u7684\u3002\n\n\u5728\u5224\u65ad\u6bcf\u7ec4\u5185\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\u540e\uff0c\u5f97\u5230\u7684\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u679a\u4e3e\u5230\u7684\u65b0\u7684\u8fb9\u52a0\u5165\u56fe\u4e2d\u3002  \n\u82e5\u65b0\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u7684\u7ec4\u4e2d\u51fa\u73b0\u5947\u73af\uff0c\u5219\u8be5\u8fb9\u65e0\u7528\uff0c\u76f4\u63a5\u8df3\u8fc7\u3002  \n\u82e5\u52a0\u5165\u540e\u51fa\u73b0\u5947\u73af\uff0c\u5219\u8bf4\u660e\u8fde\u63a5\u7684\u4e24\u7ec4\u4e0d\u80fd\u6784\u6210\u4e8c\u5206\u56fe\uff0c\u7b54\u6848 -1\u3002  \n\u5f53\u5f53\u524d\u679a\u4e3e\u7684\u8fb9 \u4e0e \u4e0a\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u7ec4\u4e0d\u540c\u65f6\uff0c\u56de\u9000\u4e4b\u524d\u7684\u8fde\u63a5\u64cd\u4f5c\u3002  \n\n\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5219\u4ee5\u4e0a\u8fc7\u7a0b\u7684\u590d\u6742\u5ea6\u4e3a $O(m\\log n)$\u3002\n\n---\n\n## \u7206\u96f6\u5c0f\u6280\u5de7\n\n\u6ce8\u610f\u4e00\u4e9b\u4e3a\u4e86\u4f7f\u7b54\u6848\u4e0d\u91cd\u4e0d\u6f0f\u800c\u6dfb\u52a0\u7684\u7279\u5224\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n---\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n//\u77e5\u8bc6\u70b9\uff1a\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u679a\u4e3e \n/*\nBy:Luckyblock\n*/\n#include <algorithm>\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#define LL long long\nconst int kMaxn = 5e5 + 10;\n//=============================================================\nLL ans;\nint n, m, k, cnt, col[kMaxn];\nbool no[kMaxn];\n\nint top, fa[kMaxn << 1], size[kMaxn << 1];\nstruct Stack {\n  int u, v, fa, size;\n} st[kMaxn << 1];\n\nint e_num;\nstruct Edge {\n  int u, v, colu, colv;\n} e[kMaxn];\n//=============================================================\ninline int read() {\n  int f = 1, w = 0;\n  char ch = getchar();\n  for (; !isdigit(ch); ch = getchar())\n    if (ch == '-') f = -1;\n  for (; isdigit(ch); ch = getchar()) w = (w << 3) + (w << 1) + (ch ^ '0');\n  return f * w;\n}\nvoid Chkmax(int &fir_, int sec_) {\n  if (sec_ > fir_) fir_ = sec_;\n}\nvoid Chkmin(int &fir_, int sec_) {\n  if (sec_ < fir_) fir_ = sec_;\n}\nbool CompareEdge(Edge f_, Edge s_) {\n  if (f_.colu != s_.colu) return f_.colu< s_.colu;\n  return f_.colv < s_.colv;\n}\nint Find(int x_) {\n  while (x_ != fa[x_]) x_ = fa[x_];\n  return x_;\n}\nvoid Union(int u_, int v_) {\n  int fu = Find(u_), fv = Find(v_);\n  if (size[fu] > size[fv]) std::swap(fu, fv); //\u6ca1\u5199\u6309\u79e9\u5408\u5e76 \n  st[++ top] = (Stack) {fu, fv, fa[fu], size[fu]};\n  if (fu != fv) {\n    fa[fu] = fv;\n    size[fv] += size[fu];\n    size[fu] = 0;\n  }\n}\nvoid Restore() {\n  Stack now = st[top];\n  if (now.u != now.v) {\n    fa[now.u] = now.fa;\n    size[now.u] = now.size;\n    size[now.v] -= now.size;\n  }\n  top --;\n}\n//=============================================================\nint main() {\n  n = read(), m = read(), cnt = k = read();\n  for (int i = 1; i <= n; ++ i) col[i] = read();\n  for (int i = 1; i <= 2 * n; ++ i) {\n    fa[i] = i;\n    size[i] = 1;\n  }\n  for (int i = 1; i <= m; ++ i) {\n    int u_ = read(), v_ = read();\n    if (col[u_] != col[v_]) {\n      e[++ e_num] = (Edge) {u_, v_, col[u_], col[v_]};\n      if (e[e_num].colu > e[e_num].colv) {\n        std::swap(e[e_num].colu, e[e_num].colv); \n      }\n      continue ;\n    }\n    if (no[col[u_]]) continue ; //\u7279\u5224\uff0c\u9632\u6b62\u91cd\u590d\u7edf\u8ba1  \n    if (Find(u_) == Find(v_)) {\n      cnt --;\n      no[col[u_]] = true;\n      continue ;\n    }\n    Union(u_, v_ + n);\n    Union(v_, u_ + n);\n  }\n  \n  ans = 1ll * (cnt - 1ll) * cnt / 2ll;\n  int last_top = top, flag = false;\n  \n  std::sort(e + 1, e + e_num + 1, CompareEdge);\n  for (int i = 1; i <= e_num; ++ i) {\n    Edge now = e[i];\n    if (no[now.colu] || no[now.colv]) continue ;\n    if (now.colu != e[i - 1].colu || now.colv != e[i - 1].colv) {\n      while (top != last_top) Restore();\n      flag = false;\n    }\n    if (flag) continue ; //\u7279\u5224\uff0c\u9632\u6b62\u91cd\u590d\u7edf\u8ba1 \n    if (Find(now.u) == Find(now.v)) {\n      ans --;\n      flag = true;\n      continue ;\n    }\n    Union(now.u, now.v + n);\n    Union(now.v, now.u + n);\n  }\n  printf(\"%lld\\n\", ans);\n  return 0;\n}\n```",
        "postTime": 1604409139,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1444C \u3010Team-Building\u3011"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n\n1. \u4e8c\u5206\u56fe\u7684\u57fa\u7840\u6982\u5ff5\uff0c\u600e\u4e48\u7528\u5e76\u67e5\u96c6\u5224\u5b9a\u4e8c\u5206\u56fe\u3002\n2. \u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u770b[\u8fd9](https://www.luogu.com.cn/blog/zaczac/ke-che-xiao-bing-zha-ji)\u3002\n\n### \u601d\u8def\n\n\u6bd4\u8f83\u57fa\u7840\u7684\u4e00\u9053\u9898\uff0c\u53ef\u4ee5\u548c\u6a21\u677f\u9898\u76f8\u5ab2\u7f8e\u3002\n\n\u5148\u518d\u63d0\u4e00\u4e0b\u5427\uff0c\u627e\u80fd\u5426\u6784\u6210\u4e8c\u5206\u56fe\u7684\u5173\u952e\u6027\u8d28\u5728\u4e8e\u6b64\u56fe\u662f\u5426\u6709\u5947\u73af\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e24\u4e2a\u7aef\u70b9\u90fd\u662f\u540c\u4e00\u7ec4\u5185\u7684\u8fb9\uff0c\u53ea\u8981\u9009\u4e86\u8fd9\u4e00\u7ec4\u5c31\u5fc5\u987b\u8981\u9009\u8fd9\u4e9b\u8fb9\uff0c\u6240\u4ee5\u521d\u59cb\u7684\u65f6\u5019\u628a\u540c\u7ec4\u5185\u7684\u8fb9\u90fd\u8fde\u4e0a\uff0c\u4e14\u8fd9\u6837\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u7ec4\u3002\n\n\u8fd9\u65f6\uff0c\u5355\u7ec4\u5185\u6784\u4e0d\u6210\u4e8c\u5206\u56fe\u7684\u90a3\u4e9b\u7ec4\u522b\u4e00\u5b9a\u4e0d\u4f1a\u548c\u5176\u5b83\u7ec4\u4ea7\u751f\u8d21\u732e\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u5355\u7ec4\u5185\u80fd\u6784\u6210\u4e8c\u5206\u56fe\u7684\u90a3\u4e9b\u7ec4\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u5904\u4e8e $i$ \u4e0e $j$ \u8fd9\u4e24\u7ec4\u7684\u8fb9\u5f04\u5230\u4e00\u8d77\u53bb\uff08\u6392\u5e8f\u53ef\u4ee5\u5b9e\u73b0\uff09\uff0c\u7136\u540e\u6211\u4eec\u628a\u8fd9\u4e9b\u8fb9\u52a0\u5230\u5e76\u67e5\u96c6\u91cc\u53bb\uff0c\u5373\u7528\u5e76\u67e5\u96c6\u53bb\u5224\u65ad\u662f\u5426\u80fd\u6784\u6210\u4e8c\u5206\u56fe\u3002\u800c\u5bf9\u4e8e\u65b0\u7684\u4e00\u5bf9\u7ec4\u522b\u2014\u2014\u7b2c $k$ \u7ec4\u4ee5\u53ca\u7b2c $t$ \u7ec4\uff0c\u524d\u9762\u7684 $i$ \u4e0e $j$ \u8fd9\u4e24\u7ec4\u7684\u8fb9\u6ca1\u7528\u4e86\uff0c\u6240\u4ee5\u8981\u64a4\u9500\u6389\u3002\u800c\u8fd9\u6b63\u662f\u4e00\u4e2a\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define L(i, a, b) for(int i = a; i <= b; i++)\n#define R(i, a, b) for(int i = a; i >= b; i--) \nusing namespace std;\nconst int N = 1e6 + 10;\nint n, m, k, c[N], tu[N], sum[N]; ll ans;\nvector<pair<int, int> >e[N];\nstruct DSU{\n\tint n, top, s[N], fa[N], sz[N];\n\tvoid ins(int x){n++, fa[x] = x, sz[x] = 1;}\n\tint F(int x){return x == fa[x]? x : F(fa[x]);}\n\tvoid U(int x, int y){\n\t\tx = F(x), y = F(y); if(x == y) return;\n\t\tif(sz[x] < sz[y]) swap(x, y);\n\t\tfa[y] = x, sz[x] += sz[y], s[++top] = y;\n\t}\n\tvoid D(){\n\t\tif(!top) return;\n\t\tint y = s[top--]; sz[fa[y]] -= sz[y], fa[y] = y;\n\t}\n\tvoid back(int t){while(top > t) D();}\n}d;\nbool cmp(pair<int, int> a, pair<int, int> b){return c[a.second] < c[b.second];}\nint main(){\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tL(i, 1, n) scanf(\"%d\", &c[i]);\n\tL(i, 1, n * 2) d.ins(i);\n\tL(i, 1, k) tu[i] = 1;\n\tL(i, 1, m){\n\t\tint x, y; scanf(\"%d%d\", &x, &y);\n\t\tif(c[x] > c[y]) swap(x, y);\n\t\tif(c[x] == c[y]){\n\t\t\tif(d.F(x) == d.F(y))\n\t\t\t\ttu[c[x]] = 0;\n\t\t\telse d.U(x, y + n), d.U(x + n, y);\n\t\t}\n\t\telse e[c[x]].push_back(make_pair(x, y));\n\t}\n\tR(i, k, 1) sum[i] = sum[i + 1] + tu[i];\n\tL(cl, 1, k){\n\t\tif(!tu[cl]) continue;\n\t\tsort(e[cl].begin(), e[cl].end(), cmp);\n\t\tint flag = 1, t = d.top; ans += sum[cl + 1];\n\t\tfor(int i = 0; i < e[cl].size(); i++){\n\t\t\tint x = e[cl][i].first, y = e[cl][i].second;\n\t\t\tif(!tu[c[y]]) flag = -1;\n\t\t\tif(flag == 1 && d.F(x) == d.F(y))\n\t\t\t\tflag = 0;\n\t\t\telse d.U(x, y + n), d.U(x + n, y);\n\t\t\tif(i == e[cl].size() - 1 || c[y] != c[e[cl][i + 1].second]){\n\t\t\t\tans -= (!flag), flag = 1, d.back(t);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n} \n```\n",
        "postTime": 1675392526,
        "uid": 341946,
        "name": "zac2010",
        "ccfLevel": 7,
        "title": "CF1444C \u9898\u89e3"
    },
    {
        "content": "### CF1444C Team-Building\n\n\u9996\u5148\u60f3\u5230\u628a\u4e00\u7ec4\u70b9\u7f29\u5728\u4e00\u8d77\u4e4b\u540e\u5728\u641e\uff0c\u5982\u679c\u67d0\u4e00\u7ec4\u70b9\u81ea\u5df1\u5185\u90e8\u90fd\u6709\u5947\u73af\u90a3\u5c31\u6307\u5b9a $\\text{GG}$ \u4e86\u3002\n\n\u90a3\u4e48\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u641e\u4e00\u4e0b\u6bcf\u7ec4\u70b9\u7684\u5185\u90e8\uff0c\u6ce8\u610f\u5230\u8fd9\u4e2a\u56fe\u5f88\u7a00\uff0c\u90a3\u4e48\u4e0d\u7528\u679a\u4e3e\u7ec4\u5bf9\uff0c\u53ea\u9700\u8981\u52a0\u8fb9\u5373\u53ef\u3002\n\n\u6211\u4eec\u5148\u628a\u8fde\u63a5\u540c\u6837\u7ec4\u7684\u8fb9\u6254\u6389\uff0c\u7136\u540e\u5bf9\u4e8e\u5269\u4e0b\u7684\u8fb9\u6211\u4eec\u628a\u8fde\u63a5\u540c\u4e00\u5bf9\u7ec4\u7684\u8fb9\u6254\u5728\u4e00\u8d77\u5904\u7406\u3002\n\n\u9996\u5148\u8bbe\u6ca1\u6709 $\\text{GG}$ \u7684\u7ec4\u6709 $L$ \u4e2a\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u4e24\u4e2a\u672c\u6765\u5f88\u597d\u4f46\u662f\u8fde\u4e0a\u8fb9\u4e4b\u540e\u5c31\u6b47\u4e86\u7684\u5bf9\u6570\u3002\n\n\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e2a\u53ef\u64a4\u9500\u7684\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u5373\u53ef\u3002\n\n",
        "postTime": 1625918641,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "CF1444C Team-Building"
    },
    {
        "content": "### \u9898\u76ee\u4f20\u9001\u95e8\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF1444C)\n\n[Codeforces](https://codeforces.com/problemset/problem/1444/C)\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n#### \u4e8c\u5206\u56fe\u53ca\u5176\u5e76\u67e5\u96c6\u5224\u5b9a\u6cd5\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\u6211\u4eec\u6709\u4e09\u79cd\u5224\u5b9a\u65b9\u6cd5\n\n1. \u6839\u636e\u5b9a\u4e49\u5224\u5b9a\u3002\u5148\u5b9a\u4e49\u7b2c\u4e00\u4e2a\u70b9\u7684\u989c\u8272\u4e3a $0$\uff0c\u4e0e\u5176\u76f8\u90bb\u7684\u70b9\u989c\u8272\u5b9a\u4e49\u4e3a $1$\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5982\u679c\u6bcf\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u70b9\u7684\u989c\u8272\u90fd\u4e0d\u540c\uff0c\u5219\u539f\u56fe\u4e3a\u4e8c\u5206\u56fe\u3002\u6211\u4eec\u901a\u5e38\u79f0\u5176\u4e3a\u201c\u67d3\u8272\u6cd5\u201d\u3002\n\n1. \u6839\u636e\u7ed3\u6784\u5224\u5b9a\u3002\u539f\u56fe\u4e3a\u4e8c\u5206\u56fe\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\u539f\u56fe\u5b58\u5728\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u73af\u3002\n\n1. \u4f7f\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u3002\u6211\u4eec\u5e94\u5f53\u5148\u8fdb\u884c\u62c6\u70b9\uff0c\u82e5\u5171\u6709 $n$ \u4e2a\u70b9\u3002\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u70b9 $x$ \u989c\u8272\u4e3a $0$ \u5b9a\u4e49\u4e3a $x$\uff0c\u989c\u8272\u4e3a $1$ \u5b9a\u4e49\u4e3a $x+n$\u3002\u5982\u679c\u5b58\u5728\u4e00\u6761 $x$ \u548c $y$ \u7684\u8fb9\uff0c\u5c31\u901a\u8fc7\u5e76\u67e5\u96c6\u5408\u5e76 $(x,y+n)$ \u548c $(x+n,y)$\u3002\u6700\u7ec8\u5982\u679c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u6761 $x$ \u548c $y$ \u7684\u8fb9\uff0c$x$ \u548c $y$ \u90fd\u4e0d\u5728\u4e00\u4e2a\u5e76\u67e5\u96c6\u5185\uff0c\u5219\u539f\u56fe\u4e3a\u4e8c\u5206\u56fe\u3002\n\n#### [\u5e76\u67e5\u96c6\u7684\u542f\u53d1\u5f0f\u6309\u79e9\u5408\u5e76\u4e0e\u5220\u9664](https://oi-wiki.org/ds/dsu-complexity/)\n\n+ \u6309\u79e9\u5408\u5e76\u5373\u6309\u7167\u5176\u7ed3\u6784\u8fdb\u884c\u5408\u5e76\uff0c\u4e0d\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u5176\u7ed3\u6784\u4e0d\u53d8\uff0c\u4fbf\u4e8e\u5220\u9664\u64cd\u4f5c\u3002\n\n+ \u542f\u53d1\u5f0f\u5408\u5e76\u901a\u4fd7\u6765\u8bb2\u5c31\u662f\u628a\u5c0f\u7684\u96c6\u5408\u5408\u5e76\u5230\u5927\u7684\u96c6\u5408\uff0c\u4fdd\u8bc1\u5176\u65f6\u95f4\u590d\u6742\u7684\u4e3a $\\log (n)$ \u7ea7\u522b\u7684\u3002\n\n\u542f\u53d1\u5f0f\u6309\u79e9\u5408\u5e76\uff1a\n\n```cpp\ninline int find(int u)\n{\n\twhile(u != f[u]) u = f[u];\n\treturn u;\n}\ninline int merge(int u,int v)\n{\n\tu = find(u),v = find(v);\n\tif(u == v) return 0;\n\tif(sz[u] < sz[v]) swap(u,v);\n\tf[v] = u,sz[u] += sz[v];\n\ts.push((pii){u,v});\n\treturn 1;\n}\n```\n\u5220\u9664\n\n```cpp\ninline void erase(int u,int v)\n{\n\tsz[u] -= sz[v],f[v] = v;\n}\ninline void erase(int &len)\n{\n\twhile(len--)\n\t{\n\t\terase(s.top().first,s.top().second);\n\t\ts.pop()\t;\n\t}\n\tlen = 0;\n}\n```\n\n### \u9898\u610f\n\n\u5bf9\u4e8e\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u989c\u8272\uff0c\u8be2\u95ee\u6709\u591a\u5c11\u4e2a\u65e0\u5e8f\u989c\u8272\u70b9\u5bf9 $(x,y) \\ (x \\not= y)$ \u6ee1\u8db3\u989c\u8272 $x$ \u548c\u989c\u8272 $y$ \u7ec4\u6210\u7684\u56fe\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n### \u5206\u6790\n\n\u9996\u5148\uff0c\u6211\u4eec\u80af\u5b9a\u65e0\u6cd5\u679a\u4e3e\u65e0\u5e8f\u989c\u8272\u5bf9 $(x,y)$\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u8d85\u65f6\u3002\n\n\u6211\u4eec\u5206\u6790\u70b9\u5bf9 $(x,y)$\uff0c\u9996\u5148\uff0c\u989c\u8272 $x$ \u548c\u989c\u8272 $y$ \u7684\u5b50\u56fe\u5fc5\u987b\u662f\u4e8c\u5206\u56fe\uff0c\u5176\u6b21\uff0c\u52a0\u5165\u8de8\u989c\u8272 $(x,y)$ \u7684\u8fb9\u4e5f\u5fc5\u987b\u662f\u4e8c\u5206\u56fe\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fb9\u53ea\u6709 $m$ \u6761\uff0c\u6240\u4ee5\u8de8\u989c\u8272\u7684\u8fb9\u4e5f\u4e0d\u591a\uff0c\u6211\u4eec\u4ee5\u8f83\u5c0f\u7684\u989c\u8272\u4e3a\u4e0b\u6807\u5f00 vector \u628a\u5b83\u4eec\u90fd\u8bb0\u4e0b\u6765\u5373\u53ef\u3002\u5bf9\u4e8e\u4e24\u8fb9\u540c\u4e00\u4e2a\u989c\u8272\u7684\u8fb9\uff0c\u6211\u4eec\u4e5f\u8bb0\u4e0b\u6765\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u989c\u8272\u6309\u7167\u4ee5\u4e0a\u65b9\u6cd5\u5efa\u7acb\u5e76\u67e5\u96c6\uff0c\u5224\u65ad\u4e00\u4e0b\u5176\u5b50\u56fe\u662f\u5426\u662f\u4e8c\u5206\u56fe\u3002\n\n\u63a5\u7740\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u5408\u6cd5\u7684\u989c\u8272\uff0c\u5c06\u5176 vector \u6309\u53e6\u4e00\u4e2a\u989c\u8272\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5f53\u53e6\u4e00\u4e2a\u989c\u8272\u4e5f\u5408\u6cd5\u65f6\uff0c\u4e0d\u65ad\u5730\u52a0\u5e76\u67e5\u96c6\u7684\u8fb9\u3002\n\n\u8fd9\u91cc\uff0c\u6211\u4eec\u6bcf\u52a0\u4e00\u6761\u8fb9\u90fd\u5224\u65ad\u4e00\u4e0b\u5b83\u8fd8\u662f\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c**\u5982\u679c\u8fd9\u5df2\u7ecf\u4e0d\u662f\u4e8c\u5206\u56fe\u4e86\uff0c\u518d\u52a0\u8fb9\u4e5f\u4e00\u5b9a\u4e0d\u662f\u4e8c\u5206\u56fe**\uff0c\u6211\u4eec\u51cf\u53bb\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u5728\u5e76\u67e5\u96c6\u5185\u5220\u9664\u8fd9\u4e2a\u989c\u8272\u7684\u8fb9\uff0c\u8fd9\u662f\u6700\u8fd1\u52a0\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6808\u8bb0\u4e0b\u6765\u3002\u5f53\u53e6\u4e00\u4e2a\u989c\u8272\u52a0\u5b8c\u65f6\uff0c\u6211\u4eec\u4e5f\u5220\u9664\u8fd9\u5199\u8fb9\u3002\n\n$sum_i$ \u8868\u793a\u5728\u989c\u8272\u533a\u95f4 $[i,k]$ \u4e2d\u4e0d\u5408\u6cd5\u7684\u989c\u8272\u4e2a\u6570\u3002\n\n\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```cpp\nif(vis[i]) continue;\nsort(r[i].begin(),r[i].end());\nans += k-i-sum[i];\nint lst = 0,len = 0,no = 0;\nfor(auto p:r[i])\n{\n\tif(vis[p.t]||p.t == no) continue;\n\tif(lst&&p.t != lst) erase(len);\n\tlen += merge(p.u,p.v+n) + merge(p.u+n,p.v); \n\tif(find(p.u) == find(p.v)) \n\t{\n\t\t--ans;\n\t\tno = p.t;\n\t}\t\t\t\n\tlst = p.t;\t\t\n}\nerase(len);\t\n```\n### \u603b\u7ed3\n\n\u8fd9\u662f\u4e00\u9053\u56fe\u8bba\u597d\u9898\uff0c\u7075\u6d3b\u8fd0\u7528\u4e86\u5e76\u67e5\u96c6\u548c\u4e8c\u5206\u56fe\u7684\u5224\u5b9a\u65b9\u6cd5\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(register T &x)\n{\n\tregister T p = 1,num = 0;\n\tchar c = getchar();\n\twhile(c < '0'||c > '9')\n\t{\n\t\tif(c == '-') p = -p;\n\t\tc = getchar();\n\t}\n\twhile('0' <= c&&c <= '9')\n\t{\n\t\tnum = (num<<3)+(num<<1)+(c^48);\n\t\tc = getchar();\n\t}\n\tx = p * num;\n}\ntemplate<typename T>inline void write(register T x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) write(x/10);\n\tputchar(x%10+48);\n}\n#define D(i,a,b) for(register int i=a;i>=b;--i)\n#define F(i,a,b) for(register int i=a;i<=b;++i)\n#define ll long long\n#define pii pair<int,int>\n#define N 500010\nint f[N<<1],sz[N<<1],c[N],sum[N],n,m,k;\nvector<int> g[N],a[N];\nstruct node\n{\n\tint u,v,t;\n\tinline bool friend operator<(const node &X,const node &Y)\n\t{\n\t\treturn X.t < Y.t;\n\t}\n};\nvector<node> r[N];\nstack<pii> s;\nbitset<N> vis;\ninline int find(int u)\n{\n\twhile(u != f[u]) u = f[u];\n\treturn u;\n}\ninline int merge(int u,int v)\n{\n\tu = find(u),v = find(v);\n\tif(u == v) return 0;\n\tif(sz[u] < sz[v]) swap(u,v);\n\tf[v] = u,sz[u] += sz[v];\n\ts.push((pii){u,v});\n\treturn 1;\n}\ninline void erase(int u,int v)\n{\n\tsz[u] -= sz[v],f[v] = v;\n}\ninline void erase(int &len)\n{\n\twhile(len--)\n\t{\n\t\terase(s.top().first,s.top().second);\n\t\ts.pop();\n\t}\n\tlen = 0;\n}\nll ans = 0; \nint main()\n{\n\tread(n),read(m),read(k);\n\tF(i,1,n) \n\t{\n\t\tread(c[i]);\n\t\ta[c[i]].push_back(i);\n\t}\n\twhile(m--)\n\t{\n\t\tint u,v;\n\t\tread(u),read(v);\n\t\tif(c[u] == c[v])\n\t\t{\n\t\t\tg[u].push_back(v);\n\t\t\tg[v].push_back(u); \n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(c[u] > c[v]) swap(u,v);\n\t\t\tr[c[u]].push_back((node){u,v,c[v]}); \n\t\t}\n\t}\n\tF(i,1,n<<1) f[i] = i,sz[i] = 1;\n\tF(i,1,k)\n\t{\n\t\tfor(auto u:a[i])\n  \t\t\tfor(auto v:g[u])\n  \t\t\t\tmerge(u,v+n),merge(u+n,v);\t\n\t  \tfor(auto u:a[i])\n\t  \t\tif(find(u) == find(u+n))\n\t  \t\t{\n\t  \t\t\tvis[i] = 1;\n\t\t\t\tbreak;\t\n\t\t\t}\n\t}\n\tD(i,k,1) sum[i] = sum[i+1] + vis[i];\n\tF(i,1,k)\n\t{\n\t\tif(vis[i]) continue;\n\t\tsort(r[i].begin(),r[i].end());\n\t\tans += k-i-sum[i];\n\t\tint lst = 0,len = 0,no = 0;\n\t\tfor(auto p:r[i])\n\t\t{\n\t\t\tif(vis[p.t]||p.t == no) continue;\n\t\t\tif(lst&&p.t != lst) erase(len);\n\t\t\tlen += merge(p.u,p.v+n) + merge(p.u+n,p.v); \n\t\t\tif(find(p.u) == find(p.v)) \n\t\t\t{\n\t\t\t\t--ans;\n\t\t\t\tno = p.t;\n\t\t\t}\t\t\t\n\t\t\tlst = p.t;\t\t\n\t\t}\n\t\terase(len);\t\t\n\t} \n\twrite(ans); \n\treturn 0;\n}\n```\n",
        "postTime": 1676193189,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF1444C \u9898\u89e3\uff08\u5e26\u5220\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e8c\u5206\u56fe\uff09"
    },
    {
        "content": "\u964d\u667a\u9898\u3002\n\n\u4e00\u5f00\u59cb\u770b\u8fd9\u9898\u7684\u65f6\u5019 woc \u8fd9\u4ec0\u4e48\u9b3c\u9898\uff0c\u4e3a\u4ec0\u4e48\u8981\u5bf9 $500000$ \u7ec4\u7684\u6bcf\u5bf9\u5224\u4e8c\u5206\u56fe\uff0c\u6211\u4e0d\u4f1a\u5feb\u901f\u5224\u554a\u3002\u3002\u3002\n\n\u540e\u6765\u624d\u53d1\u73b0\uff0c\u6bcf\u6761\u8fb9\u90fd\u662f\u56fa\u5b9a\u7684\u5728\u4e00\u5bf9\u7ec4\u91cc\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u8fd9\u4e9b\u8fb9\u5206\u5206\u7c7b\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u66b4\u529b\u5224\u5c31\u884c\u4e86\u3002\n\n\u90a3\u5982\u4f55\u66b4\u529b\u5224\uff1f\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u628a\u8fb9\u7aef\u70b9\u662f\u540c\u7ec4\u7684\u7528\u5e76\u67e5\u96c6\u5e76\u8d77\u6765\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u8fb9\u6309\u7167\u7aef\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u7ec4\u5206\u7c7b\uff0c\u5bf9\u4e8e\u6bcf\u7c7b\u8fb9\uff0c\u628a\u5b83\u52a0\u8fdb\u53bb\uff0c\u7136\u540e\u5224\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\u3002\n\n\u5982\u4f55\u5feb\u901f\u5224\u5462\uff1f\n\n\u9996\u5148\u666e\u901a\u904d\u5386\u80af\u5b9a\u662f\u4e0d\u884c\u4e86\uff0c\u5f97\u6362\u4e00\u79cd\u65b9\u6cd5\u3002\n\n\u8bf4\u767d\u4e86\uff0c\u5176\u5b9e\u8fd9\u662f\u8981\u6c42\u652f\u6301\u52a8\u6001\u52a0\u8fb9\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\u3002\n\n\u8fd9\u4e2a\u5176\u5b9e\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\u8bb2\u4e00\u4e2a\u70b9\u5206\u6210\u5947\u70b9\u548c\u5076\u70b9\u4e24\u4e2a\u70b9\uff0c\u6bcf\u6b21\u8fde\u8fb9\u5947\u70b9\u5411\u5076\u70b9\uff0c\u5076\u70b9\u5411\u5947\u70b9\u8fde\u4e24\u6761\u8fb9\uff0c\u6700\u540e\u5224\u65ad\u5947\u70b9\u548c\u5076\u70b9\u662f\u5426\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5373\u53ef\u3002\n\n\u4f46\u7531\u4e8e\u6211\u4eec\u8981\u540c\u65f6\u5224\u65ad\u591a\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u5e26\u4e00\u4e2a\u64a4\u9500\u64cd\u4f5c\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u5408\u5e76\u4e0d\u80fd\u4f7f\u7528\u8def\u5f84\u538b\u7f29\uff0c\u8981\u4f7f\u7528\u6309\u79e9\u5408\u5e76\u3002\n\n~~\u4f60\u4f1a\u53d1\u73b0\uff0c\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u4e0d\u5982\u8bf4\u4e00\u53e5\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u677f\u5b50\u9898\u3002~~\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n+m\\log n+m\\log m+k)$",
        "postTime": 1649069201,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1444C"
    }
]