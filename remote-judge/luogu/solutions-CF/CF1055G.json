[
    {
        "content": "\u9996\u5148\u8003\u8651\u89e3\u51b3\u4e00\u4e2a\u5b50\u95ee\u9898\uff1a\u5982\u4f55\u5224\u65ad\u7b54\u6848\u662f\u5426\u662f $0$\u3002\u5047\u8bbe Bob \u7684\u591a\u8fb9\u5f62\u662f $P$\uff0c\u6c34\u6bcd\u6ca1\u6709\u6d3b\u52a8\u533a\u57df\uff0c\u90a3\u4e48\u663e\u7136\u53ea\u6709\u5f53\u6c34\u6bcd\u5728 $P$ \u4e2d\u65f6 Bob \u624d\u4f1a\u88ab\u8707\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u5047\u8bbe\u4f1a\u4f7f Bob \u88ab\u8707\u7684\u533a\u57df\u4e3a\u7981\u6b62\u533a\u57df\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7981\u6b62\u533a\u57df\u5c31\u662f\u6bcf\u53ea\u6c34\u6bcd\u5468\u56f4\u7684\u591a\u8fb9\u5f62\u3002\u8003\u8651\u518d\u52a0\u4e0a\u6c34\u6bcd\u534a\u5f84\u4e3a $r$ \u7684\u6d3b\u52a8\u8303\u56f4\uff0c\u7c7b\u4f3c\u4e8e\u3010JSOI2018\u3011\u6218\u4e89\uff0c\u7981\u6b62\u533a\u57df\u4e3a\u591a\u8fb9\u5f62 $-P$ \u4e0e\u534a\u5f84\u4e3a $r$ \u7684\u5706\u7684\u95f5\u53ef\u592b\u65af\u57fa\u548c\u3002\n\n\u7531\u4e8e\u4f1a\u51fa\u73b0\u4e24\u53ea\u6c34\u6bcd\u7684\u6d3b\u52a8\u8303\u56f4\u6709\u91cd\u53e0\u7684\u60c5\u51b5\uff0c\u6b64\u65f6 Bob \u4fbf\u4e0d\u80fd\u4ece\u8fd9\u4e24\u53ea\u6c34\u6bcd\u4e4b\u95f4\u901a\u8fc7\u3002\u5177\u4f53\u7684\uff0c\u5047\u8bbe\u8fd9\u4e24\u53ea\u6c34\u6bcd\u7684\u6d3b\u52a8\u533a\u57df\u5206\u522b\u4e3a $r_1$ \u548c $r_2$\uff0c\u4e2d\u5fc3\u5206\u522b\u4e3a $(x_1,y_1)$ \u548c $(x_2,y_2)$\uff0c\u5982\u679c $(x_1-x_2,y_1-y_2)$ \u5728 $P$ \u4e0e\u534a\u5f84\u4e3a $r_1+r_2$ \u7684\u5706\u7684\u95f5\u53ef\u592b\u65af\u57fa\u548c\u4e2d\uff0cBob \u4fbf\u4e0d\u80fd\u7ecf\u8fc7\u8fd9\u4e24\u53ea\u6c34\u6bcd\u4e4b\u95f4\u3002\u5b9e\u73b0\u4e0a\u53ef\u4ee5\u901a\u8fc7\u627e\u8be5\u5411\u91cf\u5230 $P$ \u4e0e $-P$ \u7684\u95f5\u53ef\u592b\u65af\u57fa\u548c\u7684\u8ddd\u79bb\u4e0e $r_1+r_2$ \u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u9898\u76ee\u6240\u7ed9\u5b9a\u6761\u4ef6\u53ef\u4ee5\u8ba9\u4e24\u8005\u76f8\u5bf9\u7cbe\u5ea6\u5dee\u5230 $10^{-17}$ \u5de6\u53f3\uff0c\u56e0\u6b64\u4e0d\u80fd\u76f4\u63a5\u7528\u6d6e\u70b9\u6570\u8ba1\u7b97\u3002\n\n\u5e76\u4e14\u6ce8\u610f\u5230\u53ef\u4ee5\u5728\u6cf3\u6c60\u8fb9\u754c\u548c\u6c34\u6bcd\u4e4b\u95f4\u7ecf\u8fc7\u3002\u8003\u8651\u6784\u9020\u4e00\u4e2a\u56fe\uff0c\u4ee4\u8fb9\u754c\u548c\u6bcf\u53ea\u6c34\u6bcd\u90fd\u662f\u9876\u70b9\uff0c\u5982\u679c\u4e24\u53ea\u6c34\u6bcd\u4e4b\u95f4\u4e0d\u80fd\u7ecf\u8fc7\u8fd9\u4e24\u4e2a\u9876\u70b9\u5c31\u8fde\u4e00\u6761\u8fb9\uff08\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5c31\u662f\u5bf9\u5076\u56fe\uff09\u3002\u5982\u679c\u5e73\u9762\u56fe\u4e0a\u4e0b\u8fde\u901a\uff08\u7b54\u6848\u4e3a $0$\uff09\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u5bf9\u5076\u56fe\u5de6\u8fb9\u754c\u5bf9\u5e94\u70b9\u4e8e\u53f3\u8fb9\u754c\u5bf9\u5e94\u70b9\u4e0d\u8fde\u901a\u3002\u5426\u5219\u5982\u679c\u8fde\u901a\uff0c\u5219 Bob \u4e00\u5b9a\u4f1a\u88ab\u86f0\u3002\n\n\u7136\u540e\u8003\u8651\u539f\u6765\u95ee\u9898\uff0c\u6211\u4eec\u6240\u8981\u6c42\u7684\u5c31\u662f\u5220\u53bb\u5c3d\u91cf\u5c11\u7684\u6c34\u6bcd\uff0c\u4f7f Bob \u4e0d\u88ab\u86f0\u3002\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u7f51\u7edc\u6d41\u5f62\u5f0f\uff1a\u6c42\u6700\u5c0f\u5272\u70b9\u6570\u91cf\u3002\u5c06\u539f\u56fe\u4e2d\u6c34\u6bcd\u6240\u5bf9\u5e94\u7684\u9876\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u7136\u540e\u76f4\u63a5\u8dd1\u6700\u5c0f\u5272\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ll long long\n#define R(i,a,b) for(int i=(a),i##E=(b);i<=i##E;i++)\n#define L(i,a,b) for(int i=(b),i##E=(a);i>=i##E;i--)\nusing namespace std;\nconst ll inf=1ll<<30;\nint n,w,m;\nstruct point\n{\n    int x,y;\n    inline point (int X=0,int Y=0):x(X),y(Y) {}\n    inline point operator +(const point &A)const\n    {\n        return point(x+A.x,y+A.y);\n    }\n    inline point operator -(const point &A)const\n    {\n        return point(x-A.x,y-A.y);\n    }\n    inline ll dot(const point &A)\n    {\n        return 1ll*x*A.x+1ll*y*A.y;\n    }\n    inline ll det(const point &A)\n    {\n        return 1ll*x*A.y-1ll*y*A.x;\n    }\n    inline int operator <(const point &A)const\n    {\n        return x==A.x?y<A.y:x<A.x;\n    }\n    inline ll abs2() \n    {\n        return 1ll*x*x+y*y;\n    }\n};\nvector<point>a,b;\nint top;\n\nint tim,S,T,id[222][2];\n\nstruct ccl\n{\n    point o;\n    int r;\n};\nvector<ccl>c;\nint lb,rb;\n\ninline vector<point> init(vector<point> a)\n{\n    vector<point>t;\n    int p=min_element(a.begin(),a.end())-a.begin();\n    R(i,0,a.size()-1) t.emplace_back(a[(i+p)%a.size()]);\n    return t;\n}\ninline vector<point> mincowski(vector<point>a,vector<point>b)\n{\n    a=init(a),b=init(b);\n    vector<point>t,A(a.size()),B(b.size());\n    R(i,0,a.size()-1) A[i]=a[(i+1)%a.size()]-a[i];\n    R(i,0,b.size()-1) B[i]=b[(i+1)%b.size()]-b[i];\n\n    int i=0,j=0;\n    t.emplace_back(a[0]+b[0]);\n    while(i<a.size()||j<b.size())\n    {\n        if(i==a.size()) t.emplace_back(t.back()+B[j]),++j;\n        else if(j==b.size()) t.emplace_back(t.back()+A[i]),++i;\n        else if(A[i].det(B[j])>=0) t.emplace_back(t.back()+A[i]),++i;\n        else t.emplace_back(t.back()+B[j]),++j;\n    }\n    t.pop_back();\n    return t;    \n}\ninline int check_onseg(point p,point x,point y)\n{\n    return ((p-x).det(p-y))==0&&((p-x).dot(p-y))<=0;\n}\ninline int check(point a,ll r,vector<point>q)\n{\n    for(auto b:q) if((a-b).abs2()<r*r) return 1;\n    int ok=1;    \n    R(i,0,q.size()-1)\n    {\n        point x=q[i],y=q[(i+1)%q.size()];\n        if(check_onseg(a,x,y)) return 1;\n        if((a-x).dot(y-x)>0&&(a-y).dot(x-y)>0)\n        {\n            ll t=(a-x).det(y-x);\n            if(t*t<r*r*(y-x).abs2()) return 1;\n        }\n        ok&=((a-x).det(y-x)<=0);\n    }\n    return ok;\n}\nstruct edge\n{\n    int to,nxt,f;\n}e[166666];\nint head[444],dis[444],cnt=1;\nint q[444];\ninline void add_edge(int u,int v,int d)\n{\n    e[++cnt]=(edge){v,head[u],d};\n    head[u]=cnt;\n    e[++cnt]=(edge){u,head[v],0};\n    head[v]=cnt;\n}\nint bfs()\n{\n    memset(dis,-1,sizeof(dis));\n    int h=0,t=1;\n    q[1]=S;dis[S]=0;\n    while(h!=t)\n    {\n        int u=q[++h];\n        for(int i=head[u];i;i=e[i].nxt)\n        {\n            int v=e[i].to;\n            if(dis[v]==-1&&e[i].f)\n            {\n                dis[v]=dis[u]+1;\n                if(v==T) return 1;\n                q[++t]=v;\n            }\n        }\n    }\n    return 0;\n}\nint dfs(int u,int flow)\n{\n    if(u==T) return flow;\n    int del=flow;\n    for(int i=head[u];i&&del;i=e[i].nxt)\n    {\n        int v=e[i].to;\n        if(dis[v]==dis[u]+1&&e[i].f)\n        {\n            int k=dfs(v,min(e[i].f,del));\n            e[i].f-=k;\n            e[i^1].f+=k;\n            del-=k;\n        }\n    }\n    if(del) dis[u]=-1;\n    return flow-del;\n}\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cin>>n>>w;\n    lb=166666,rb=-166666;\n    a.resize(n),b.resize(n);\n    R(i,0,n-1)\n    {\n        int x,y;\n        cin>>x>>y;\n        a[i]=point(x,y),b[i]=point(-x,-y);\n        lb=min(lb,x),rb=max(rb,x);\n    }\n    cin>>m;    \n    R(i,1,m) id[i][0]=++tim,id[i][1]=++tim;\n    S=++tim;\n    T=++tim;\n    c.resize(m+1);\n    R(i,1,m) cin>>c[i].o.x>>c[i].o.y>>c[i].r;\n    a=mincowski(a,b);\n    R(i,1,m)\n    {\n        add_edge(id[i][0],id[i][1],1);\n        if(rb-lb>c[i].o.x-c[i].r) add_edge(S,id[i][0],inf);\n        if(rb-lb>w-c[i].o.x-c[i].r) add_edge(id[i][1],T,inf);\n    }\n    R(i,1,m) R(j,i+1,m) if(check(c[i].o-c[j].o,c[i].r+c[j].r,a))\n    {\n        add_edge(id[j][1],id[i][0],inf);\n        add_edge(id[i][1],id[j][0],inf);\n    }\n    int ans=0;\n    while(bfs()) ans+=dfs(S,inf);\n    cout<<ans<<'\\n';\n}\n```\n",
        "postTime": 1649508318,
        "uid": 115779,
        "name": "\u6781\u5bd2\u795e\u51b0",
        "ccfLevel": 0,
        "title": "CF1055G"
    }
]