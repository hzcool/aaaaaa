[
    {
        "content": "## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1609B)\n\n## \u9898\u610f\u7b80\u8ff0\n\n\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u53ea\u5305\u542b ```abc``` \u4e09\u79cd\u5b57\u7b26\u3002$q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u628a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u6539\u6210\u7ed9\u5b9a\u5b57\u7b26\uff0c\u8be2\u95ee\u5f53\u524d\u4e32\u81f3\u5c11\u4fee\u6539\u51e0\u6b21\u6ee1\u8db3\u4e0d\u5305\u542b\u5b50\u4e32 ```abc```\u3002\u4fee\u6539\u6307\u628a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u4fee\u6539\u6210 ```a```\u3001```b```\u3001```c``` \u4e09\u79cd\u5b57\u7b26\u4e4b\u4e00\u3002\n\n\n## $\\texttt{SOLUTION}$\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u5341\u5206\u663e\u7136\u7684\u6761\u4ef6\uff1a\u5f53\u524d\u7a7f\u81f3\u5c11\u4fee\u6539\u51e0\u6b21\u624d\u80fd\u6ee1\u8db3\u4e0d\u5305\u542b\u5b50\u4e32 ```abc``` \uff0c\u8fd9\u76f8\u5f53\u4e8e\u5728\u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u542b\u6709\u591a\u5c11\u4e2a\u5b50\u4e32 ```abc```\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u6807\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u7ef4\u62a4\u6bcf\u65f6\u6bcf\u523b\u5b50\u4e32 ```abc``` \u7684\u6570\u91cf\u3002\n\n\u8fd9\u5341\u5206 $\\text{easy}$\uff0c\u5224\u65ad\u6bcf\u6b21\u64cd\u4f5c\u540e\u662f\u5426\u591a\u4e86\u4e00\u4e2a ```abc``` \u6709\u662f\u5426\u5c11\u4e86\u4e00\u4e2a ```abc``` \u5373\u53ef\uff08\u56e0\u4e3a\u6bcf\u6b21\u53ea\u6539\u53d8\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u53ef\u80fd\u591a\u4e86\u6216\u5c11\u4e86 $1$ \u4e2a ```abc```\uff09\u3002\n\n\u5177\u4f53\u7684\u89c1\u4ee3\u7801\u3002\n\n$\\texttt{AC CODE}$\n\n```cpp\n#include<bits/stdc++.h>\nint n,q,pos,ans;\nbool vis[100010];//vis[i]\u7528\u6765\u8bb0\u5f55\u67d0\u4e2a\u4f4d\u7f6e\u662f\u5426\u4e3a\u4e00\u4e2a\u5b50\u4e32abc\u5f00\u5934\u7684a\uff0c\u5373\u5b57\u7b26\u4e32s[i],s[i+1],s[i+1]\u6240\u6784\u6210\u7684\u5b50\u4e32\u662f\u5426\u662fabc\u3002\nchar s[100010],wh[10];\nint main()\n{\n\tscanf(\"%d%d%s\",&n,&q,s+1);\n\tfor(int i=1;i<n-1;i++) if(s[i]=='a'&&s[i+1]=='b'&&s[i+2]=='c') vis[i]=1,++ans; //\u8ba1\u7b97\u521d\u59cb\u7684abc\u4e2a\u6570\u3002\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%d%s\",&pos,wh);\n\t\tif(*wh==s[pos]) //\u5982\u679c\u4fee\u6539\u540e\u7684\u5b57\u7b26\u548c\u539f\u6765\u7684\u5b57\u7b26\u76f8\u540c\uff0c\u5219abc\u7684\u6570\u91cf\u4e0d\u4f1a\u6539\u53d8\u3002\n\t\t{\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t\tcontinue;\n\t\t}\n\t\t//\u5426\u5219\u4e00\u5b9a\u6709\u53d8\u52a8\u3002\n\t\t\n\t\t//\u51cf\u5c11\u7684\n\t\tif((vis[pos]||vis[pos-1]||vis[pos-2])) --ans;//\u5982\u679c\u6709 s[i] \u6216 s[i-1] \u6216 s[i-2] \u6253\u5934\u7684abc\u5b50\u4e32\uff0c\u90a3\u4e48\u5b50\u4e32\u4e00\u5b9a\u88ab\u7834\u574f\u4e86\u3002\n\t\t//\u5982\u679c\u88ab\u7834\u574f\u4e86\uff0c\u5c31\u66f4\u65b0 vis \u6570\u7ec4\t\t\n\t\tif(vis[pos]) vis[pos]=0;\n\t\tif(vis[pos-1]) vis[pos-1]=0;\n\t\tif(vis[pos-2]) vis[pos-2]=0;\n\t\t\n\t\t//\u65b0\u589e\u7684\n\t\tif(*wh=='a')\n\t\t{\n\t\t\tif(s[pos+1]=='b'&&s[pos+2]=='c') ++ans,vis[pos]=1;\n\t\t}\n\t\tif(*wh=='b')\n\t\t{\n\t\t\tif(s[pos-1]=='a'&&s[pos+1]=='c') ++ans,vis[pos-1]=1;\n\t\t}\n\t\tif(*wh=='c')\n\t\t{\n\t\t\tif(s[pos-2]=='a'&&s[pos-1]=='b') ++ans,vis[pos-2]=1;\n\t\t}\n\t\t\n\t\t//\u4fee\u6539\n\t\ts[pos]=*wh;\n\t\t\n\t\t//\u8f93\u51fa\u7b54\u6848\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```\n",
        "postTime": 1638781074,
        "uid": 254305,
        "name": "Marsrayd",
        "ccfLevel": 0,
        "title": "CF1609B \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u53ea\u5305\u542b `abc` \u4e09\u79cd\u5b57\u7b26\u3002$q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u628a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u6539\u6210\u7ed9\u5b9a\u5b57\u7b26\uff0c\u8be2\u95ee\u5f53\u524d\u4e32\u81f3\u5c11\u8981\u4fee\u6539\u51e0\u6b21\u624d\u80fd\u6ee1\u8db3\u4e0d\u5305\u542b\u5b50\u4e32 `abc`\u3002\u4fee\u6539\u6307\u628a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u4fee\u6539\u6210 `a`\u3001`b`\u3001`c` \u4e09\u79cd\u5b57\u7b26\u4e4b\u4e00\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\uff0c\u6bcf\u4e00\u4e2a `abc` \u5b50\u4e32\u7edd\u5bf9\u4e0d\u53ef\u80fd\u4f1a\u91cd\u53e0\uff0c\u6240\u4ee5\u6709\u591a\u5c11\u4e2a `abc` \u5b50\u4e32\u5c31\u8981\u4fee\u6539\u591a\u5c11\u6b21\u3002\u6240\u4ee5\u6bcf\u6b21\u4fee\u6539\u65f6\u7ef4\u62a4\u4e00\u5171\u6709\u591a\u5c11\u4e2a `abc` \u5b50\u4e32\uff0c\u8f93\u51fa\u5f53\u524d\u7684 `abc` \u5b50\u4e32\u4e2a\u6570\u5373\u53ef\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u4fee\u6539\u7b2c $pos$ \u4e2a\u5b57\u7b26\u6700\u591a\u53ea\u4f1a\u5f71\u54cd $[pos - 3, pos + 3]$ \u533a\u95f4\u5185\u7684 `abc`\uff0c\u4fee\u6539\u524d\u626b\u4e00\u904d\uff0c\u4fee\u6539\u540e\u626b\u4e00\u904d\uff0c\u7b54\u6848\u6539\u53d8\u7684\u503c\u5c31\u662f\u4e24\u8005\u7684\u5dee\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN = 100000 + 5;\n\nchar s[MAXN];\nint n, q, cnt;\n\nint main() {\n    scanf(\"%d%d%s\", &n, &q, s + 1);\n    for(int i = 1; i + 2 <= n; i++) {\n        if(s[i] == 'a' && s[i + 1] == 'b' && s[i + 2] == 'c') {\n            cnt++;\n        }\n    }\n    for(int i = 1; i <= q; i++) {\n        char op[10], c;\n        int pos, sum1 = 0, sum2 = 0;\n\n        scanf(\"%d%s\", &pos, op);\n        for(int i = max(1, pos - 5); i <= min(n, pos + 5); i++) {\n            if(s[i] == 'a' && s[i + 1] == 'b' && s[i + 2] == 'c') {\n                sum1++;\n            }\n        }\n        s[pos] = op[0];\n        for(int i = max(1, pos - 5); i <= min(n, pos + 5); i++) {\n            if(s[i] == 'a' && s[i + 1] == 'b' && s[i + 2] == 'c') {\n                sum2++;\n            }\n        }\n        cnt = cnt - (sum1 - sum2);\n        \n        printf(\"%d\\n\", cnt);\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1638620716,
        "uid": 132435,
        "name": "\u667a\u5b50",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1609B William the Vigilant"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u53d1\u73b0\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u9700\u8981\u4fee\u6539\u7684\u6b21\u6570\u5c31\u662f\u8fd9\u4e2a\u4e32\u4e2d abc \u7684\u4e2a\u6570\u3002\u4ece\u4e24\u65b9\u9762\u8003\u8651\uff0c\u9996\u5148\u4e0d\u53ef\u80fd\u5c0f\u4e8e\uff0c\u56e0\u4e3a\u4e00\u6b21\u4fee\u6539\u6700\u591a\u80fd\u4f7f\u5f97\u4e00\u4e2a abc \u53d8\u6210\u975e abc\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u53ea\u4fee\u6539 abc \u51fa\u73b0\u6b21\u6570\u6b21\u5c31\u80fd\u5c06\u6240\u6709\u7684 abc \u6d88\u9664\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u7edf\u8ba1\u5f53\u524d\u4fee\u6539\u540e\u7684\u4e32\u4e2d\u6709\u591a\u5c11 abc \u5c31\u884c\u4e86\uff0c\u4f46\u662f\uff0c\u76f4\u63a5\u8fdb\u884c\u7edf\u8ba1\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\uff0c\u8003\u8651\u52a0\u4e00\u4e2a\u5c0f\u4f18\u5316\u3002\n\n\u53d1\u73b0\u6bcf\u4e00\u6b21\u4fee\u6539\u53ea\u4f1a\u5f71\u54cd\u5468\u56f4\u7684\u4e00\u70b9\u70b9\u90e8\u5206\uff0c\u8003\u8651\u76f4\u63a5\u8ba1\u7b97\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u5148\u51cf\u53bb\u66f4\u6539\u524d\u6709\u7684\u66f4\u6539\u540e\u6ca1\u4e86\u7684\uff0c\u7136\u540e\u52a0\u4e0a\u66f4\u6539\u524d\u6ca1\u6709\uff0c\u66f4\u6539\u540e\u6709\u4e86\u7684\uff0c\u8fd9\u6837\u5355\u6b21\u590d\u6742\u5ea6\u5c31\u662f $O(1)$ \u7684\u4e86\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nchar c,s[100005];\nint n,m,x,tot;\nchar get(){\n\tchar c1=getchar();\n\twhile(c1==' '||c1=='\\n'||c1=='\\r')c1=getchar();\n\treturn c1;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\ts[i]=get();\n\tfor(int i=3;i<=n;i++)\n\tif(s[i]=='c'&&s[i-1]=='b'&&s[i-2]=='a')tot++;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&x);c=get();\n\t\tif(s[x]!=c){\n\t\t\tif(c=='c'&&s[x-1]=='b'&&s[max(0,x-2)]=='a')tot++;\n\t\t\tif(c=='b'&&s[x-1]=='a'&&s[x+1]=='c')tot++;\n\t\t\tif(c=='a'&&s[x+1]=='b'&&s[x+2]=='c')tot++;\n\t\t\t\n\t\t\tif(s[x]=='a'&&s[x+1]=='b'&&s[x+2]=='c')tot--;\n\t\t\tif(s[x]=='b'&&s[x-1]=='a'&&s[x+1]=='c')tot--;\n\t\t\tif(s[x]=='c'&&s[x-1]=='b'&&s[max(0,x-2)]=='a')tot--;\n\t\t\t\n\t\t\ts[x]=c;\n\t\t}\n\t\tprintf(\"%d\\n\",tot);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1638593112,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF1609B William the Vigilant \u9898\u89e3"
    }
]