[
    {
        "content": "[$\\tt Link$](/problem/CF845E)\u3002\n\n\u65b0\u601d\u8def\u3002\u3002\n\n\u9996\u5148\u8fd9\u4e2a\u7b54\u6848\u7684\u503c\u4f1a\u6bd4\u8f83\u5927\uff08$10^9$ \u7ea7\u522b\uff09\uff0c\u800c\u679a\u4e3e\u7b54\u6848\u6216\u8005\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\u7684\u65b9\u5f0f\u90fd\u4e0d\u53ef\u884c\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u90a3\u4e48\u5c31\u53ea\u9700\u8981\u5224\u65ad\u67d0\u4e2a\u65f6\u523b $t$ \u6709\u6ca1\u6709\u88ab\u8986\u76d6\u6ee1\u3002\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u523b\uff0c\u6b64\u65f6\u7684\u56fe\u4e0a\u5e94\u8be5\u662f\u82e5\u5e72\u4e2a\u77e9\u5f62\u91cd\u53e0\u7684\u6837\u5f0f\u3002\u6ce8\u610f\u5230 $n,m$ \u5f88\u5927\uff0c\u4e0d\u53ef\u80fd\u5b58\u4e0b\u8fd9\u4e9b\u77e9\u5f62\uff0c\u6240\u4ee5\u8003\u8651\u79bb\u6563\u5316\u3002\n\n\u79bb\u6563\u5316\u5b8c $n,m$ \u662f $k$ \u7684\u7ea7\u522b\u3002\u5728\u56fe\u4e0a\u6807\u8bb0\u539f\u6765\u7684 $k$ \u4e2a\u77e9\u5f62\uff0c\u6bcf\u4e2a\u53ef\u80fd\u7684\u8fb9\u957f\u662f $2t+1$ \u7684\u77e9\u5f62\uff0c\u7136\u540e\u770b\u6709\u6ca1\u6709\u8986\u76d6\u6240\u6709\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u70b9\u3002\n\n\u8fd9\u662f\u53e6\u5916\u4e00\u7bc7\u9898\u89e3\u7684\u601d\u8def\uff0c\u597d\u60f3\u3002\u53cd\u6b63\u6211\u662f\u4e0d\u4f1a\u5199\uff08\u56e0\u4e3a\u6709\u79bb\u6563\u5316\uff0c\u540e\u9762\u7684\u64cd\u4f5c\u53d8\u5f97\u590d\u6742\uff09\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u6765\u8003\u8651\u53e6\u4e00\u79cd\u601d\u8def\u3002\n\n\u5047\u8bbe\u5df2\u7ecf\u6807\u8bb0\u77e9\u5f62\u5b8c\u6210\uff0c\u73b0\u5728\u5e94\u8be5\u662f *\u5224\u65ad\u8ddd\u79bb\u6700\u8fdc\u7684\u4e24\u4e2a\u672a\u6807\u8bb0\u70b9\u7684\u8ddd\u79bb\u662f\u5426 $\\le2t$*\u3002\n\n\u8981\u6c42\u5e73\u9762\u5185\u4e24\u70b9\u6700\u8fdc\u8ddd\u79bb\uff1f\u76f4\u63a5\u4e71\u641e\u3002\u6211\u7684\u65b9\u6cd5\u662f\u6309\u7167\u6bcf\u4e2a\u70b9\u5230\u539f\u70b9\u7684\u8ddd\u79bb\u6392\u5e8f\uff0c\u6700\u540e\u62ff\u524d $40$ \u4e2a\u70b9\u548c\u540e $40$ \u4e2a\u70b9\u7684\u8ddd\u79bb\u53d6 $\\max$\u3002\n\n\u79bb\u6563\u5316\u662f\u771f\u7684\u633a\u96be\u5199\u7684\u3002\u3002\n\n```cpp\n#import<iostream>\n#import<vector>\n#import<ranges>\n#import<algorithm>\n\nusing namespace std;\n\nconst int K = 1e3 + 5,S = 2e3 + 5;\n\nint n,m,k,px[K],py[K];\nint xl[K],xr[K],yl[K],yr[K];\nint X[S],Y[S];\npair<int,int> p[S * S];\nbool vis[S][S];\n\nbool chk(int t){\n\tint lx = 0,ly = 0,lp = 0;\n\tfor(int i = 1;i <= k;++i){\n\t\txl[i] = max(px[i] - t,1);\n\t\txr[i] = min(px[i] + t,n);\n\t\tyl[i] = max(py[i] - t,1);\n\t\tyr[i] = min(py[i] + t,m);\n\t\tX[++lx] = xl[i]; X[++lx] = xr[i];\n\t\tY[++ly] = yl[i]; Y[++ly] = yr[i];\n\t\tif(xr[i] != n) X[++lx] = xr[i] + 1;\n\t\tif(yr[i] != m) Y[++ly] = yr[i] + 1;\n\t}\n\tX[++lx] = 1;\n\tY[++ly] = 1; \n\tsort(X + 1,X + lx + 1);\n\tsort(Y + 1,Y + ly + 1);\n\tlx = unique(X + 1,X + lx + 1) - X - 1;\n\tly = unique(Y + 1,Y + ly + 1) - Y - 1;\n\tfor(int i = 1;i <= k;++i){\n\t\txl[i] = prev(upper_bound(X + 1,X + lx + 1,xl[i])) - X;\n\t\txr[i] = prev(upper_bound(X + 1,X + lx + 1,xr[i])) - X;\n\t\tyl[i] = prev(upper_bound(Y + 1,Y + ly + 1,yl[i])) - Y;\n\t\tyr[i] = prev(upper_bound(Y + 1,Y + ly + 1,yr[i])) - Y;\n\t\tfor(int x = xl[i];x <= xr[i];++x)\n\t\t\tfor(int y = yl[i];y <= yr[i];++y) vis[x][y] = true;\n\t}\n\tfor(int i = 1;i <= lx;++i)\n\t\tfor(int j = 1;j <= ly;++j)\n\t\t\tif(vis[i][j]) vis[i][j] = 0;\n\t\t\telse p[++lp] = make_pair(i,j);\n\tsort(p + 1,p + lp + 1,[](auto a,auto b){\n\t\tauto[x0,y0] = a; auto[x1,y1] = b;\n\t\treturn x0 * y0 != x1 * y1 ? x0 * y0 < x1 * y1 : x0 < y0;\n\t});\n\tint dis = 0;\n\tfor(int i = 1;i <= min(40,lp);++i)\n\t\tfor(int j = max(i,lp - 40);j <= lp;++j){\n\t\t\tauto[xi,yi] = p[i]; auto[xj,yj] = p[j];\n\t\t\tif(xi > xj) swap(xi,xj);\n\t\t\tif(yi > yj) swap(yi,yj);\n\t\t\txi = X[xi]; xj = xj == lx ? n : X[xj + 1] - 1;\n\t\t\tyi = Y[yi]; yj = yj == ly ? m : Y[yj + 1] - 1;\n\t\t\tdis = max({dis,xj - xi,yj - yi});\n\t\t}\n\treturn dis <= (2 * t);\n}\n\nint main(){\n\tcin >> n >> m >> k;\n\tfor(int i = 1;i <= k;++i) cin >> px[i] >> py[i];\n\tint L = 0,R = max(n,m);\n\twhile(R - L + 1 > 5){\n\t\tint mid = (L + R) >> 1;\n\t\tchk(mid) ? R = mid : L = mid + 1;\n\t}\n\tfor(int i = L;i <= R;++i)\n\t\tif(chk(i)) return printf(\"%d\\n\",i),0;\n\treturn 0;\n} \n```",
        "postTime": 1659698130,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF845E \u4e8c\u5206\u7b54\u6848+\u4e71\u641e"
    },
    {
        "content": "\u672c\u9898\u7684\u9898\u610f\u5f88\u597d\u7406\u89e3\uff0c\u65e2\u7136\u8981\u6c42\u6700\u77ed\u7528\u65f6\uff0c\u90a3\u4e48\u4e0d\u96be\u60f3\u5230\u4e8c\u5206\u7b54\u6848\uff0c\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55check\u3002\n\n\u89c2\u5bdf\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0n\u3001m\u662f1e9\u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u4e8c\u7ef4\u6570\u7ec4\u53bb\u5b58\u50a8\u7684\u8bdd\u80af\u5b9a\u662f\u4e0d\u884c\u7684\u3002\u800ck\u5f88\u5c0f\uff0c\u6700\u5927\u53ea\u6709500\uff0c\u6240\u4ee5\u8003\u8651\u4ecek\u5165\u624b\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u77e9\u5f62\u8986\u76d6\u7684\u8303\u56f4\u53ea\u8ddf\u5b83\u7684\u56db\u4e2a\u89d2\u6709\u5173\uff0c\u6240\u4ee5\u8003\u8651\u79bb\u6563\u5316\uff0c\u5c06\u8fd9k\u4e2a\u77e9\u9635\u7684\u56db\u4e2a\u89d2\u6620\u5c04\u52301-1000\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u51b3n\u3001m\u8303\u56f4\u8fc7\u5927\u7684\u95ee\u9898\u3002\n\n\u81f3\u4e8e\u8ba1\u7b97\u77e9\u5f62\u8986\u76d6\u9762\u79ef\u7684\u8bdd\uff0c\u505a\u4e00\u4e2a\u4e8c\u7ef4\u5dee\u5206+\u524d\u7f00\u548c\u5c31\u597d\u4e86\u3002\n\n\u63a5\u7740\uff0c\u6211\u4eec\u53ea\u9700\u627e\u5230\u80fd\u591f\u8986\u76d6\u6240\u6709\u672a\u8986\u76d6\u683c\u5b50\u7684\u6700\u5c0f\u77e9\u5f62\uff0c\u8ba1\u7b97\u4e00\u4e0b\u5728t\u65f6\u95f4\u5185\u80fd\u5426\u6269\u6563\u5b8c\u8fd9\u4e2a\u77e9\u5f62\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint read()//\u5feb\u8bfb\u4e0d\u89e3\u91ca \n{\n  int x=0;\n  char c=getchar();\n  while(c<'0'||c>'9')  c=getchar();\n  while('0'<=c&&c<='9')\n  {\n  \tx=(x<<3)+(x<<1)+c-'0';\n  \tc=getchar();\n  }\n  return x;\n}\nint n,m,k;//\u540c\u9898\u610f \nstruct node{int x,y;}a[505];//\u5b58\u70b9 \nint x[1010],y[1010],xx[1010],yy[1010];//\u79bb\u6563\u5316\u7528\u5230\u7684\u6570\u7ec4 \nint find(int a[],int x,int len)//\u67e5\u627ex\u5728a\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e \n{\n  int l=1,r=len;\n  while(l<=r)\n  {\n  \tint mid=(l+r)>>1;\n  \tif(a[mid]<=x)  l=mid+1;\n  \telse  r=mid-1;\n  }\n  return r;\n}\nint d[1010][1010],s[1010][1010];//\u5dee\u5206\u6570\u7ec4\u4e0e\u524d\u7f00\u548c\u6570\u7ec4 \nbool check(int t)\n{\n  memset(d,0,sizeof(d));\n  memset(s,0,sizeof(s));\n  for(int i=1;i<=k;i++)//\u8ba1\u7b97\u8fd9k\u4e2a\u77e9\u5f62\u7684\u56db\u4e2a\u89d2 \n  {\n  \tx[i]=max(1,a[i].x-t),x[k+i]=min(n,a[i].x+t);\n  \ty[i]=max(1,a[i].y-t),y[k+i]=min(m,a[i].y+t);\n  }\n  x[k*2+1]=1,x[k*2+2]=n;\n  y[k*2+1]=1,y[k*2+2]=m;//\u6574\u4e2a\u77e9\u5f62\u7684\u56db\u4e2a\u89d2\u4e5f\u8981\u53c2\u4e0e\u79bb\u6563\u5316\uff0c\u4e0d\u7136\u5dee\u5206\u4f1a\u51fa\u95ee\u9898 \n  sort(x+1,x+k*2+3),sort(y+1,y+k*2+3);//\u79bb\u6563\u5316\n  int tot1=0,tot2=0; \n  for(int i=1;i<=k*2+2;i++)  if(x[i]!=x[i-1])  xx[++tot1]=x[i]; \n  for(int i=1;i<=k*2+2;i++)  if(y[i]!=y[i-1])  yy[++tot2]=y[i];//\u53bb\u91cd  \n  for(int i=1;i<=k;i++)\n  {\n  \tint x1=find(xx,max(1,a[i].x-t),tot1);\n\tint y1=find(yy,max(1,a[i].y-t),tot2);\n  \tint x2=find(xx,min(n,a[i].x+t),tot1);\n  \tint y2=find(yy,min(m,a[i].y+t),tot2);//\u8ba1\u7b97\u6620\u5c04 \n\td[x1][y1]++,d[x2][y1]--,d[x1][y2]--,d[x2][y2]++;\n  }\n  int up=n,down=1,left=m,right=1;//\u8ba1\u7b97\u8986\u76d6\u6240\u6709\u672a\u8986\u76d6\u683c\u5b50\u7684\u6700\u5c0f\u77e9\u5f62 \n  for(int i=1;i<tot1;i++)\n    for(int j=1;j<tot2;j++)\n      s[i][j]=s[i-1][j]+s[i][j-1]-s[i-1][j-1]+d[i][j];//\u8ba1\u7b97\u524d\u7f00\u548c \n  for(int i=1;i<tot1;i++)\n    for(int j=1;j<tot2;j++)\n      s[i][j]=min(s[i][j],1);//\u4ee4\u6240\u6709\u683c\u5b50\u975e0\u53731\uff0c\u65b9\u4fbf\u540e\u9762\u5904\u7406\u8fb9\u754c\u4e0a\u7684\u95ee\u9898 \n  for(int i=1;i<tot1;i++)\n    for(int j=1;j<tot2;j++)\n      if(!s[i][j])//\u9047\u5230\u4e86\u4e00\u4e2a\u7a7a\u683c\u5b50\uff0c\u7136\u540e\u8fd8\u8981\u770b\u770b\u6709\u6ca1\u6709\u7a7a\u9699 \n        if(xx[i]+s[i-1][j]<xx[i+1]||xx[i]==n-1) \n\t      if(yy[j]+s[i][j-1]<yy[j+1]||yy[j]==m-1)//\u8fd8\u6709\u7a7a\u9699\uff0c\u8bf4\u660e\u5b58\u5728\u672a\u8986\u76d6\u683c\u5b50 \n          {\n            up=min(up,xx[i]+s[i-1][j]);\n\t\t    down=max(down,xx[i+1]-s[i+1][j]);\n            left=min(left,yy[j]+s[i][j-1]);\n\t\t    right=max(right,yy[j+1]-s[i][j+1]);//\u66f4\u65b0\u76ee\u6807\u77e9\u5f62\n\t      }\n  //\u5f53\u7136\u8fd9\u91cc\u8fd8\u6709\u5176\u4ed6\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5c31\u4e0d\u8d58\u8ff0\u4e86 \n  if(up==n&&down==1&&left==m&&right==1)  return 1;//\u5df2\u7ecf\u5168\u8986\u76d6\u4e86 \n  if(max(down-up,right-left)<=t*2)  return 1;//\u53ef\u4ee5\u5728t\u65f6\u95f4\u5185\u8986\u76d6\u5b8c\u76ee\u6807\u77e9\u5f62 \n  return 0;\n}\nint main()\n{\n  n=read(),m=read(),k=read();\n  for(int i=1;i<=k;i++)  a[i].x=read(),a[i].y=read();\n  if(k+1==n*m)//\u7279\u5224 \n  {\n  \tprintf(\"0\");\n  \treturn 0;\n  }\n  int l=1,r=max(n,m);\n  while(l<=r)//\u4e8c\u5206\u7b54\u6848 \n  {\n  \tint mid=(l+r)>>1;\n  \tif(check(mid))  r=mid-1;\n  \telse  l=mid+1;\n  }\n  printf(\"%d\",l);\n  return 0;\n}\n```\n",
        "postTime": 1611660186,
        "uid": 69796,
        "name": "\u6797\u806a",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF845E \u3010Fire in the City\u3011"
    },
    {
        "content": "#  CF845E Fire in the City \u9898\u89e3\n[\u9898\u76ee\u94fe\u63a5_luogu](https://www.luogu.com.cn/problem/CF845E)\n\n[\u9898\u76ee\u94fe\u63a5_codeforces](https://codeforces.com/problemset/problem/845/E)\n\n\u6211\u4eec\u53d1\u73b0 $k$ \u975e\u5e38\u7684\u5c0f\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u53bb\u8003\u8651\u590d\u6742\u5ea6\u5927\u4e8e $O(k^2)$ \u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u601d\u8003\u5982\u4f55 $\\text{check}$\u3002\n\n\u6211\u4eec\u8981\u5148\u8ba1\u7b97\u73b0\u6709\u7684\u706b\u4f1a\u6269\u6563\u5230\u54ea\u4e9b\u5730\u65b9\uff0c\u7136\u540e\u6c42\u672a\u8986\u76d6\u7684\u70b9\u6784\u6210\u7684\u6700\u5927\u77e9\u5f62\u3002\u8fd9\u5c31\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u77e9\u5f62\u8986\u76d6\u95ee\u9898\uff0c\u663e\u7136\u662f\u53ef\u4ee5\u79bb\u6563\u5316+\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u3002\n\n\u4f46\u662f\u4f60\u8981\u662f\u76f4\u63a5\u8fd9\u6837\u6253\u5b8c\uff0c\u53ef\u80fd\u4f1a $\\text{Wrong answer on test 10}$\u3002\u56e0\u4e3a\u4f60\u4f1a\u53d1\u73b0\uff0c\u79bb\u6563\u5316\u4e4b\u540e\uff0c\u6709\u4e9b\u706b\u4e0e\u706b\u4e4b\u95f4\u7684\u95f4\u9699\u5c31\u88ab\u79bb\u6563\u5316\u79bb\u6563\u6389\u4e86\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u8003\u8651\u63cf\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u4ec5\u5c06 $x_1,x_2,y_1,y_2$ \u52a0\u5165\u79bb\u6563\u5316\u6570\u7ec4\uff0c\u8fd8\u8981\u5c06 $x_1-1,x_2+1,y_1-1,y_2+1$ \u52a0\u5165\u79bb\u6563\u5316\u6570\u7ec4\u5373\u53ef\u3002\n\n$\\text{Code:}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e3 + 10;\nint tx[N], ty[N], lenx, leny;\nint nx[N], ny[N], lx[N], ly[N], rx[N], ry[N], n, m, k, a[N][N];\ninline bool check(int x) {\n    memset(a, 0, sizeof(a));\n    lenx = leny = 0;\n    tx[++lenx] = 1, tx[++lenx] = n;\n    ty[++leny] = 1, ty[++leny] = m;\n    for (int i = 1; i <= k; i++) {\n        lx[i] = max(1, nx[i] - x), rx[i] = min(n, nx[i] + x);\n        ly[i] = max(1, ny[i] - x), ry[i] = min(m, ny[i] + x);\n        tx[++lenx] = lx[i], tx[++lenx] = rx[i], tx[++lenx] = max(1, lx[i] - 1), tx[++lenx] = min(n, rx[i] + 1);\n        ty[++leny] = ly[i], ty[++leny] = ry[i], ty[++leny] = max(1, ly[i] - 1), ty[++leny] = min(m, ry[i] + 1);\n    }\n    sort(tx + 1, tx + lenx + 1), lenx = unique(tx + 1, tx + lenx + 1) - tx - 1;\n    sort(ty + 1, ty + leny + 1), leny = unique(ty + 1, ty + leny + 1) - ty - 1;\n    for (int i = 1; i <= k; i++) {\n        lx[i] = lower_bound(tx + 1, tx + lenx + 1, lx[i]) - tx, ly[i] = lower_bound(ty + 1, ty + leny + 1, ly[i]) - ty;\n        rx[i] = lower_bound(tx + 1, tx + lenx + 1, rx[i]) - tx, ry[i] = lower_bound(ty + 1, ty + leny + 1, ry[i]) - ty;\n    }\n    int L = 0x7f7f7f7f, R = 0, D = 0x7f7f7f7f, U = 0;\n    for (int i = 1; i <= k; i++) ++a[lx[i]][ly[i]], --a[lx[i]][ry[i] + 1], --a[rx[i] + 1][ly[i]], ++a[rx[i] + 1][ry[i] + 1];\n    for (int i = 1; i <= lenx; i++) {\n        for (int j = 1; j <= leny; j++) {\n            a[i][j] = a[i][j] + a[i - 1][j] + a[i][j - 1] - a[i - 1][j - 1];\n            if (!a[i][j]) L = min(L, i), R = max(R, i), D = min(D, j), U = max(U, j);\n        }\n    }\n    if (!R) return 1;\n    int len = max(ty[U] - ty[D] + 1 >> 1, tx[R] - tx[L] + 1 >> 1);\n    return len <= x;\n}\nint main() {\n    cin >> n >> m >> k;\n    for (int i = 1; i <= k; i++) scanf(\"%d %d\", &nx[i], &ny[i]);\n    int l = 0, r = max(n, m) + 1, mid, ans;\n    while (l <= r) {\n        mid = l + r >> 1;\n        if (check(mid))\n            r = mid - 1, ans = mid;\n        else\n            l = mid + 1;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1665706864,
        "uid": 615348,
        "name": "zhouershan",
        "ccfLevel": 7,
        "title": "CF845E Fire in the City \u9898\u89e3"
    },
    {
        "content": "\u5c45\u7136\u6ca1\u6709\u626b\u63cf\u7ebf\u9898\u89e3\u3002  \n\u626b\u63cf\u7ebf\u8fdc\u8fdc\u5feb\u4e8e\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u6211\u7684\u4e8c\u7ef4\u524d\u7f00\u548c\u662f CF \u4e0a\u6700\u52a3\u89e3\uff0c\u800c\u626b\u63cf\u7ebf\u662f\u6700\u4f18\u89e3\u3002  \n## \u505a\u6cd5  \n\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002  \n\n\u8bbe\u5f53\u524d\u4e8c\u5206\u5230\u7684\u65f6\u95f4\u662f $t$\u3002 \n\n\u8003\u8651\u5982\u4f55\u5224\u5b9a\u3002  \n\n\u663e\u7136\u88ab\u706b\u70e7\u8fc7\u533a\u57df\u7531\u4e00\u4e2a\u4e2a\u77e9\u5f62\u7ec4\u6210\u3002  \n\n\u800c\u6211\u4eec\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u6c42\u51fa\u6ca1\u88ab\u77e9\u5f62\u8986\u76d6\u7684\u533a\u57df\u80fd\u4e0d\u80fd\u901a\u8fc7\u518d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u957f\u4e3a $2t+1$ \u7684\u77e9\u5f62\u89e3\u51b3\uff0c\u5373\u627e\u5230\u6ca1\u8986\u76d6\u70b9\u7684\u7eb5\u5750\u6807\u6700\u5927\u503c\uff0c\u7eb5\u5750\u6807\u6700\u5c0f\u503c\uff0c\u6a2a\u5750\u6807\u6700\u5927\u503c\uff0c\u6a2a\u5750\u6807\u6700\u5c0f\u503c\u3002  \nhy\n\u8003\u8651\u901a\u8fc7\u626b\u63cf\u7ebf\u89e3\u51b3\u3002  \n\n\u628a\u6240\u6709\u7684\u77e9\u5f62\u5206\u6210\u4e24\u4e2a\u7ad6\u7ebf\uff0c\u7b2c\u4e00\u4e2a\u7ad6\u7ebf\u4ee3\u8868\u8fd9\u4e2a\u77e9\u5f62\u51fa\u73b0\uff0c\u7b2c\u4e8c\u4e2a\u7ad6\u7ebf\u4ee3\u8868\u8fd9\u4e2a\u77e9\u5f62\u6d88\u5931\u3002  \n\n\u5750\u6807\u867d\u7136\u5f88\u5927\uff0c\u628a\u7eb5\u5750\u6807\u79bb\u6563\u5316\u4e00\u4e0b\u5c31\u89e3\u51b3\u4e86\u3002 \n\n\u7136\u540e\u628a\u6240\u6709\u7ad6\u7ebf\u6309\u7167\u5347\u5e8f\u6392\u5217\uff0c\u4f9d\u6b21\u5904\u7406\u3002  \n\n\u5982\u679c\u7b2c\u4e00\u6761\u7ad6\u7ebf\u6a2a\u5750\u6807\u5927\u4e8e $1$\uff0c\u90a3\u4e48\u6ca1\u8986\u76d6\u7eb5\u5750\u6807\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f4\u63a5\u786e\u5b9a\u4e3a $n$ \u548c $1$\uff0c\u6ca1\u8986\u76d6\u6700\u5927\u6700\u5c0f\u6a2a\u5750\u6807\u5bf9\u5e94\u66f4\u65b0\u4e00\u4e0b\u3002  \n\n\u6bcf\u5904\u7406\u4e00\u6761\u7ad6\u7ebf\uff0c\u5c31\u5229\u7528\u7ebf\u6bb5\u6811\u4fee\u6539\u8fd9\u6761\u7ad6\u7ebf\u5bf9\u5e94\u533a\u95f4\uff0c\u7528\u5f53\u524d\u6700\u9ad8\u548c\u6700\u4f4e\u6ca1\u8986\u76d6\u70b9\u8fdb\u884c\u66f4\u65b0\uff0c\u5982\u679c\u8fd9\u6761\u7ad6\u7ebf\u5b58\u5728\u70b9\u6ca1\u8986\u76d6\uff0c\u90a3\u4e48\u8fd8\u53ef\u4ee5\u66f4\u65b0\u6a2a\u5750\u6807\u3002  \n\n\n\u5982\u679c\u6700\u540e\u4e00\u6761\u7ad6\u7ebf\u540e\u9762\u6709\u7a7a\u7684\uff0c\u518d\u5904\u7406\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u5173\u4e8e\u7ebf\u6bb5\u6811\u7ec6\u8282\uff0c\u6811\u4e0a\u6bcf\u4e2a\u70b9\u5b58\u50a8\u5bf9\u5e94\u533a\u95f4\u6700\u9ad8\u548c\u6700\u4f4e\u6ca1\u8986\u76d6\u7684\u70b9\uff0c\u7136\u540e\u5e38\u89c4\u7ef4\u62a4\u5c31\u884c\u4e86\u3002  \n\n\n\u6ce8\u610f\u79bb\u6563\u5316\u5982\u679c\u4e0d\u628a $1$ \u548c $n$ \u4e5f\u79bb\u6563\u5316\uff0c\u4f1a Wrong answer on test10\u3002  \n## Code  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define FOR(i, a, b) for (int i = a; i <= b; i++)\n#define REP(i, a, b) for (int i = a; i >= b; i--)\nconst int maxn = 3005;\nint n, m, k;\nstruct Node\n{\n    int x, y;\n    // \u6a2a\u5750\u6807\uff0c\u7eb5\u5750\u6807\n} node[maxn];\nll lsh[maxn * 2];\nint lshtop;\nstruct Line\n{// \u5b58\u50a8\u7ad6\u7ebf\u4fe1\u606f\n    ll x, y1, y2, mark;\n    // y1 \u662f\u8fd9\u6761\u7ad6\u7ebf\u7684\u4e0a\u7aef\u70b9\uff0cy2 \u662f\u4e0b\u7aef\u70b9\n} line[maxn * 2];\nint linetop;\nll sgtcnt[maxn << 3], L[maxn << 3], R[maxn << 3], maxup[maxn << 3], mindw[maxn << 3];\n// maxup \u662f\u6700\u9ad8\u7684\u6ca1\u8986\u76d6\u70b9\uff0cmin \u662f\u6700\u4f4e\u7684\u6ca1\u8986\u76d6\uff0c\u6ce8\u610f\u8fd9\u4e2a\u662f\u79bb\u6563\u5316\u4e4b\u540e\u7684\u503c\n// sgtcnt \u662f\u5f53\u524d\u533a\u95f4\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u6b21\u6570\nvoid build(int pos, int l, int r)\n{\n    sgtcnt[pos] = 0;\n    L[pos] = l;\n    R[pos] = r;\n    maxup[pos] = r;\n    mindw[pos] = l;\n    if (l == r)\n    {\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(pos << 1, l, mid);\n    build(pos << 1 | 1, mid + 1, r);\n}\nvoid pushup(int now)\n{\n    if (sgtcnt[now])\n    {\n        maxup[now] = -5e9;\n        mindw[now] = 5e9;\n    }\n    else\n    {\n        if (L[now] != R[now])\n        {\n            maxup[now] = max(maxup[now << 1], maxup[now << 1 | 1]);\n            mindw[now] = min(mindw[now << 1], mindw[now << 1 | 1]);\n        }\n        else\n        {\n            maxup[now] = mindw[now] = L[now];\n        }\n    }\n}\nvoid change(int now, int l, int r, int val)\n{\n    if (l <= L[now] && R[now] <= r)\n    {\n        sgtcnt[now] += val;\n        pushup(now);\n        return;\n    }\n    if (L[now] > r || R[now] < l)\n        return;\n    int mid = (L[now] + R[now]) >> 1;\n    if (mid >= l)\n        change(now << 1, l, r, val);\n    if (mid < r)\n        change(now << 1 | 1, l, r, val);\n    pushup(now);\n}\nbool check(ll time)\n{\n    lshtop = 0, linetop = 0;\n    FOR(i, 1, k)\n    {\n        lsh[++lshtop] = min(1ll * n, node[i].y + time);\n        lsh[++lshtop] = max(1ll, node[i].y - time);\n        lsh[++lshtop] = min(1ll * n, node[i].y + time + 1);\n        lsh[++lshtop] = max(1ll, node[i].y - time - 1);\n        lsh[++lshtop] = min(1ll * n, max(1ll,node[i].y + time - 1));\n        lsh[++lshtop] = max(1ll, min(1ll*n,node[i].y - time + 1));\n    }\n    lsh[++lshtop] = 1;\n    lsh[++lshtop] = n;\n    sort(lsh + 1, lsh + lshtop + 1);\n    lshtop = unique(lsh + 1, lsh + lshtop + 1) - lsh - 1;\n    // \u79bb\u6563\u5316\n    FOR(i, 1, k)\n    {\n        int nwy1 = lower_bound(lsh + 1, lsh + lshtop + 1, min(1ll * n, node[i].y + time)) - lsh;\n        int nwy2 = lower_bound(lsh + 1, lsh + lshtop + 1, max(1ll, node[i].y - time)) - lsh;\n        // \u8ba1\u7b97\u79bb\u6563\u5316\u4e4b\u540e\u7684 y\n\n        line[++linetop] = {max(1ll, node[i].x - time), nwy1, nwy2, 1};\n        line[++linetop] = {min(1ll * m, node[i].x + time) + 1, nwy1, nwy2, -1};\n        // \u7ad6\u7ebf\n        // \u7b2c\u4e8c\u6761\u7ebf\u4ee3\u8868\u5220\u9664\u8fd9\u4e2a\u77e9\u5f62\n    }\n    sort(line + 1, line + linetop + 1, [&](Line &a, Line &b)\n         {  if(a.x!=b.x)\n                return a.x < b.x; \n            else\n                return a.mark>b.mark; });// \u5bf9\u7ad6\u7ebf\u6309\u6a2a\u5750\u6807\u5347\u5e8f\u6392\u5217\u3002  \n    build(1, 1, lshtop);// \u5efa\u6811\n    ll maxupf = -5e9, mindwf = 5e9, maxrigf = -5e9, minleff = 5e9;\n    if (line[1].x > 1)\n    {// \u524d\u9762\u6709\u7a7a\u7684\u533a\u57df\n        maxupf = n;\n        mindwf = 1;\n        minleff = 1;\n        maxrigf = line[1].x - 1;\n        //       puts(\"Updated\\n\");\n    }\n    int cnt = 0;\n    int posx=0;\n    ll before_x = 0;\n    FOR(i, 1, linetop)\n    {// \u8fd0\u884c\u626b\u63cf\u7ebf\n        if (line[i].x > m)\n            break;\n        change(1, line[i].y2, line[i].y1, line[i].mark);\n\n        cnt++; // \u8ba1\u7b97\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u6709\u591a\u5c11\u7ad6\u7ebf\u6ca1\u5904\u7406\n        posx=line[i].x;\n        if (line[i].x != line[i + 1].x)\n        {\n            cnt = 0;\n            if (mindw[1] != 5e9)\n            {\n                maxupf = max(maxupf, lsh[maxup[1]]);\n                mindwf = min(mindwf, lsh[mindw[1]]);\n                maxrigf = max(maxrigf, line[i + 1].x - 1);\n                minleff = min(minleff, before_x + 1);\n            }\n                before_x = line[i].x;\n        }\n    } \n    if (line[linetop].x < m)\n    {// \u540e\u9762\u6709\u7a7a\u7684\u533a\u57df\n        maxupf = n;\n        mindwf = 1;\n        maxrigf = m;\n        minleff = min(minleff, line[linetop].x  + 1);\n    }\n    return ((maxupf - mindwf + 1 <= time * 2  + 1) && (maxrigf - minleff + 1 <= time * 2 +1));\n}\nint main()\n{\n    scanf(\"%d%d%d\", &n, &m, &k);\n    FOR(i, 1, k)\n    {\n        scanf(\"%d%d\", &node[i].x, &node[i].y);\n        swap(node[i].x, node[i].y);\n    }\n    int l = 0, r = 1e9;\n    while (l < r)\n    {\n        int mid = (l + r) >> 1;\n        if (check(mid))\n        {\n            r = mid;\n        }\n        else\n        {\n            l = mid + 1;\n        }\n    }\n    printf(\"%d\", l);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1681617200,
        "uid": 507348,
        "name": "__vector__",
        "ccfLevel": 0,
        "title": "CF845E \u9898\u89e3"
    }
]