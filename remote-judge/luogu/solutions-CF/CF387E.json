[
    {
        "content": "## \u5206\u6790 + \u9898\u89e3\n\n\u9996\u5148\u8003\u8651\u5220\u6570\u7684\u987a\u5e8f\u2014\u2014\u663e\u7136\u6309\u6570\u503c\u4ece\u5c0f\u5230\u5927\u5220\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n**\u8bc1\u660e**\uff1a\u8f83\u5c0f\u7684\u6570\u53ef\u80fd\u4f1a\u9650\u5236\u8f83\u5927\u7684\u6570\u5220\u9664\u65f6\u7684\u533a\u95f4\u8303\u56f4\uff0c\u4e14\u8f83\u5927\u7684\u6570\u53ef\u80fd\u4f1a\u5bf9\u8f83\u5c0f\u7684\u6570\u5220\u9664\u65f6\u7684\u533a\u95f4\u957f\u5ea6\u6709\u8d21\u732e\uff0c\u4e14\u6ca1\u6709\u4efb\u4f55\u8d1f\u9762\u5f71\u54cd\u3002\n\n\u56e0\u6b64\u4ece\u5c0f\u5230\u5927\u8ba8\u8bba\u6bcf\u4e2a\u6570\uff0c\u82e5\u6b64\u6570\u4e0d\u5e94\u5220\u9664\uff0c\u5c06\u6b64\u6570\u7684\u4f4d\u7f6e\u52a0\u5165 `set`\uff1b\u5426\u5219\u5728 `set` \u4e2d\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230\u5de6\u53f3\u4e24\u8fb9\u672a\u88ab\u5220\u9664\u7684\u6570\u4e2d\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u4f4d\u7f6e\uff0c\u82e5\u65e0\u5219\u4e3a\u8fb9\u754c\uff0c\u5e76\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u5269\u4f59\u7684\u6570\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n \\log n)$\n\n## \u4ee3\u7801\n\n\u5b9e\u73b0\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\u3002\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k;\nconst int max_n=1e6+5;\nint pos[max_n];//pos[i] \u8bb0\u5f55\u6570\u503c i \u6240\u5728\u4f4d\u7f6e \nbool mark[max_n];//mark[i] \u6807\u8bb0\u6570\u503c i \u662f\u5426\u5e94\u4fdd\u7559 \nset<int> s;\nset<int>::iterator it;\nnamespace BIT//\u6811\u72b6\u6570\u7ec4 \n{\n\tint c[max_n];\n\tinline void modify(int p,int v)\n\t{\n\t\tif(p>0)\n\t\t{\n\t\t\tfor(int i=p;i<=n;i+=i&(-i))\n\t\t\t\tc[i]+=v;\n\t\t}\n\t}\n\tinline int query(int p)\n\t{\n\t\tint res=0;\n\t\tfor(int i=p;i>0;i-=i&(-i))\n\t\t\tres+=c[i];\n\t\treturn res;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint p;\n\t\tscanf(\"%d\",&p);\n\t\tpos[p]=i;\n\t}\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tint b;\n\t\tscanf(\"%d\",&b);\n\t\tmark[b]=true;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tBIT::modify(i,1);//\u6811\u72b6\u6570\u7ec4\u521d\u59cb\u5316\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u505a\u5230 O(n)\uff0c\u4f46\u6ca1\u5fc5\u8981 \n\tlong long ans=0;//\u8bb0\u5f97\u5f00 long long \n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(mark[i])\n\t\t\ts.insert(pos[i]);\n\t\telse\n\t\t{\n\t\t\tint l=1,r=n;//\u627e\u4e0d\u5230\u5373\u4e3a\u8fb9\u754c \n\t\t\tit=s.lower_bound(pos[i]);\n\t\t\tif(it!=s.end())\n\t\t\t\tr=*it-1;\n\t\t\tif(it!=s.begin())\n\t\t\t\tl=*(--it)+1;\n\t\t\tans+=BIT::query(r)-BIT::query(l-1);\n\t\t\tBIT::modify(pos[i],-1);//\u8bb0\u5f97\u5c06\u6b64\u6570\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u5f71\u54cd\u6d88\u9664 \n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1610611900,
        "uid": 145355,
        "name": "wsyhb",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF387E George and Cards"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u552f\u4e00\u7684\u9898\u89e3\u662f\u66b4\u529b\u554a\u2026\u2026~~\uff08\u867d\u7136\u78be\u4e86std\uff09~~\n\n___\n\n\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\uff1a\u5220\u6570\u5fc5\u5b9a\u4ece\u5c0f\u5230\u5927\u5220\u3002\n\n\u611f\u6027\u7406\u89e3\uff1a\u5220\u5c0f\u6570\u53ef\u4ee5\u51cf\u5c11\u540e\u6765\u5927\u6570\u6269\u5f20\u533a\u95f4\u65f6\u7684\u963b\u788d\uff0c\u800c\u5148\u5220\u5927\u6570\u5bf9\u5c0f\u6570\u4e0d\u4f1a\u6709\u5f71\u54cd\u3002\u663e\u7136\u524d\u8005\u66f4\u4f18\uff0c\u56e0\u4e3a\u7559\u4e0b\u4e86\u66f4\u591a\u6b63\u9762\u6548\u679c\u3002\n\n\u4f9d\u6b21\u8003\u8651\u5220\u6bcf\u4e2a\u6570\u65f6\u7684\u8d21\u732e\u3002\n\n\u5220\u6570\u5fc5\u7136\u8981\u4f7f\u9009\u7684\u533a\u95f4\u6700\u5927\uff0c\u4e14\u533a\u95f4\u7684 $min$ \u4e3a\u5220\u7684\u8fd9\u4e2a\u6570\u3002\u53d1\u73b0\u53ea\u8981\u6709\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u6570\u5b58\u5728\uff0c\u5fc5\u7136\u662f\u8fd9\u4e2a\u6570\u6269\u5f20\u4e2d\u65e0\u6cd5\u903e\u8d8a\u7684\u969c\u788d\u3002\n\n\u6240\u4ee5\u505a\u6cd5\u547c\u4e4b\u6b32\u51fa\uff1a\u6309\u7167\u6743\u503c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u7ef4\u62a4\u4e00\u4e2a$set$\u8868\u793a\u6bd4\u5f53\u524d\u6570\u5c0f\u7684\u672a\u88ab\u5220\u7684\u6570\u7684\u4f4d\u7f6e\u3002\u8d21\u732e\u5c31\u662f\u5728set\u4e2d\u627e\u5230\u7684\u524d\u9a71\u540e\u7ee7\u6240\u786e\u5b9a\u7684\u533a\u95f4\u4e2d\u672a\u88ab\u5220\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u6211\u4eec\u9700\u8981\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u652f\u6301\u5355\u70b9\u52a0\uff0c\u533a\u95f4\u6c42\u548c\u3002\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\uff08\u5947\u77ed\u65e0\u6bd4\uff09\n\n```cpp\n#include <set>\n#include <cstdio>\nconst int maxn = 1e6+5;\nint n,k,a[maxn],inb[maxn],pos[maxn],c[maxn];\nvoid update(int pos,int v){for(;pos<=n;pos+=(pos&(-pos)))c[pos] += v;}\nint sum(int pos){\n\tint res = 0;\n\tfor(;pos;pos-=(pos&(-pos)))res += c[pos];\n\treturn res;\n}\nstd :: set<int> p;\nlong long ans;\nint main(){\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&a[i]),pos[a[i]] = i,update(i,1);\n\tfor(int i=1,v;i<=k;++i)\n\t\tscanf(\"%d\",&v),inb[v] = 1;\n\tp.insert(0),p.insert(n+1);\n\tstd :: set<int> :: iterator it1,it2;\n\tfor(int i=1;i<=n;++i){\n\t\tif(!inb[i]){\n\t\t\tit1 = it2 = p.lower_bound(pos[i]),--it1;\n\t\t\tans += sum((*it2)-1)-sum((*it1));\n\t\t\tupdate(pos[i],-1);\n\t\t}\n\t\telse p.insert(pos[i]);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1608818386,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF387E \u3010George and Cards\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6570\u636e\u4f3c\u4e4e\u90fd\u662frand\u7684\uff0c\u5bfc\u81f4\u6211\u4ea4\u4e86\u4e2a\u66b4\u529b\u8fc7\u4e86\u3002\u3002\u3002\n\n\u9996\u5148\u6211\u4eec\u628a\u8fd9\u4e2a\u5e8f\u5217\u7684\u7b1b\u5361\u5c14\u6811\u5efa\u51fa\u6765\uff0c\u7136\u540e\u7ed9\u7684\u90a3\u4e2a\u5b50\u5e8f\u5217\u5c31\u76f8\u5f53\u4e8e\u5728\u7b1b\u5361\u5c14\u6811\u4e0a\u6807\u8bb0\u4e86\u4e00\u4e9b\u5173\u952e\u70b9\uff0c\u8fd9\u4e9b\u5173\u952e\u70b9\u662f\u4e0d\u80fd\u5220\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5904\u7406\u4e00\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u8fd9\u662f\u8fd9\u4e2a\u5b50\u6811\u91cc\u9762\u6700\u5c0f\u7684\u5bf9\u5427\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u7684\u9009\u6574\u4e2a\u5b50\u6811\u5220\u53bb\u6700\u5c0f\u503c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u6839\uff0c\u4e5f\u5c31\u662f\u628a\u7b54\u6848\u52a0\u4e0a\u5b50\u6811size\u3002\u5220\u53bb\u8fd9\u4e2a\u70b9\u4e4b\u540e\u6211\u4eec\u9700\u8981\u628a\u5b83\u5de6\u53f3\u513f\u5b50\u5408\u5e76\uff0c\u63a5\u7740\u5904\u7406\u6839\u3002\n\n\u5982\u679c\u6839\u5df2\u7ecf\u88ab\u6807\u8bb0\u4e86\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u518d\u51fa\u73b0\u8de8\u8d8a\u6839\u7684\u533a\u95f4\u4e86\uff0c\u5c31\u9012\u5f52\u5de6\u53f3\u513f\u5b50\u5904\u7406\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u8fd9\u91cc\u7684\u5408\u5e76\u662f\u6ca1\u6709\u590d\u6742\u5ea6\u4fdd\u8bc1\u7684\u66b4\u529b\u7b1b\u5361\u5c14\u6811\u5408\u5e76\u2026\u2026\u7136\u540e\u5b83\u8fc7\u4e86\u8fd8\u8dd1\u5f97\u98de\u5feb\u3002\u6211\u4ee5\u524d\u542c\u8fc7\u4e00\u4e2a\u53f7\u79f0\u662f\u5747\u644a$O(n)$\u7684\u94fe\u8868\u7ef4\u62a4\u7684\u7b1b\u5361\u5c14\u6811\u5408\u5e76\uff0c\u7136\u540e\u6211\u5199\u4e86\u4e00\u4e2a\u53d1\u73b0\u5b83\u590d\u6742\u5ea6\u662f\u5047\u7684\uff08\u8fd8\u6ca1\u76f4\u63a5\u66b4\u529b\u5408\u5e76\u8dd1\u5f97\u5feb\uff09\uff0c\u5982\u679c\u60a8\u6709\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u7b1b\u5361\u5c14\u6811\u7684\u5408\u5e76\u65b9\u6cd5\uff0c\u6b22\u8fce\u627e\u6211\u79c1\u804a~\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define N 1000100\n#define ll long long\n#define isroot(_o) ((fa[_o] == 0) || (_o != ch[fa[_o]][1] && _o != ch[fa[_o]][0]))\n#define opp(_o) (_o == ch[fa[_o]][1])\nusing namespace std;\nnamespace ywy {\n\tinline int get() {\n\t    int n = 0;\n\t    char c;\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            break;\n\t        if (c == '-')\n\t            goto s;\n\t    }\n\t    n = c - '0';\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 + c - '0';\n\t        else\n\t            return (n);\n\t    }\n\ts:\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 - c + '0';\n\t        else\n\t            return (n);\n\t    }\n\t}\n\tint lend[N], rend[N], changel[N], adds[N], changer[N], size[N];\n\tint ch[N][2], fa[N], ints[N], stk[N], fan[N];\n\tunsigned char bv[N];\n\tvoid dfs(int pt) {\n\t    if (!pt)\n\t        return;\n\t    dfs(ch[pt][0]);\n\t    dfs(ch[pt][1]);\n\t    fa[ch[pt][0]] = pt;\n\t    fa[ch[pt][1]] = pt;\n\t    if (ch[pt][1])\n\t        rend[pt] = rend[ch[pt][1]];\n\t    else\n\t        rend[pt] = pt;\n\t    if (ch[pt][0])\n\t        lend[pt] = lend[ch[pt][0]];\n\t    else\n\t        lend[pt] = pt;\n\t    size[pt] = size[ch[pt][0]] + size[ch[pt][1]] + 1;\n\t}\n\tint united(int a, int b) {\n\t    if (!(a && b))\n\t        return (a | b);\n\t    if (ints[a] < ints[b]) {\n\t        ch[a][1] = united(ch[a][1], b);\n\t        size[a] = size[ch[a][0]] + size[ch[a][1]] + 1;\n\t        return (a);\n\t    }\n\t    ch[b][0] = united(a, ch[b][0]);\n\t    size[b] = size[ch[b][0]] + size[ch[b][1]] + 1;\n\t    return (b);\n\t}\n\tll ans = 0;\n\tvoid efs(int pt) {\n\t    if (!pt)\n\t        return;\n\t    while (pt && !bv[pt]) {\n\t        ans += size[pt];\n\t        int a = ch[pt][0], b = ch[pt][1];\n\t        pt = united(a, b);\n\t    }\n\t    if (!pt)\n\t        return;\n\t    efs(ch[pt][0]);\n\t    efs(ch[pt][1]);\n\t}\n\tvoid ywymain() {\n\t    int n = get(), k = get();\n\t    for (register int i = 1; i <= n; i++) fan[ints[i] = get()] = i;\n\t    for (register int i = 1; i <= k; i++) bv[fan[get()]] = 1;\n\t    int sp = 0, rt = 1;\n\t    stk[sp] = 1, sp++;\n\t    for (register int i = 2; i <= n; i++) {\n\t        int lst = 0;\n\t        while (sp && ints[i] < ints[stk[sp - 1]]) sp--, lst = stk[sp];\n\t        if (!sp)\n\t            rt = i;\n\t        else\n\t            ch[stk[sp - 1]][1] = i;\n\t        ch[i][0] = lst;\n\t        stk[sp] = i;\n\t        sp++;\n\t    }\n\t    dfs(rt);\n\t    efs(rt);\n\t    cout << ans << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1558148567,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF387E \u3010George and Cards\u3011"
    }
]