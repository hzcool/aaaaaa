[
    {
        "content": "\u770b\u5230\u8fd9\u79cd\u5c51\u9898\u90fd\u8981\u5f00\u6446\u7684\u6211\u662f\u4ec0\u4e48\u8fa3\u9e21\u3002\u3002\u3002\n\n### \u9898\u610f\n\n> \u6709\u4e00\u4e2a\u4e0d\u4fdd\u8bc1\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u4f60\u80fd\u591f\u8fdb\u884c\u4ee5\u4e0b\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n> 1. \u5728\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a `(` \u6216 `)`\uff1b\n> 2. \u5c06\u5e8f\u5217\u6700\u540e\u7684\u62ec\u53f7\u79fb\u5230\u6700\u524d\u9762\u3002\n\n> \u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\uff0c\u5f97\u5230\u7684\u6700\u77ed\u7684\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u662f\u4ec0\u4e48\uff1f\u82e5\u591a\u89e3\uff0c\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002\uff08\u5de6\u62ec\u53f7\u5c0f\u4e8e\u53f3\u62ec\u53f7\uff09\n\n### \u9898\u89e3\n\n\u663e\u7136\u8981\u4e48\u662f\u8f6c\u4e00\u6bb5\u7136\u540e\u5728\u6700\u524d\u9762\u75af\u72c2\u52a0\u5de6\u62ec\u53f7\uff0c\u8981\u4e48\u662f\u8f6c\u4e00\u6bb5\u7136\u540e\u5728\u540e\u9762\u52a0\u53f3\u62ec\u53f7\u3002\n\n\u9996\u5148\u5bb9\u6613\u641e\u5b9a\u9700\u8981\u63d2\u5165\u591a\u5c11\u4e2a\u62ec\u53f7\u3002\n\n\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u65cb\u8f6c\u5e8f\u5217\u5230\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5224\u65ad\u662f\u4e0d\u662f\u5408\u6cd5\u3002\u8003\u8651\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u6709\u4ec0\u4e48\u6027\u8d28\uff0c\u628a\u5de6\u62ec\u53f7\u770b\u6210 $1$ \u53f3\u62ec\u53f7\u770b\u6210 $-1$\uff0c\u5c31\u662f\uff1a\n\n1. \u6574\u4e2a\u5e8f\u5217\u7684\u548c\u662f $0$\u3002\n2. \u6bcf\u4e2a\u524d\u7f00\u7684\u548c $\\ge 0$\u3002\n\n\u7b2c\u4e00\u4e2a\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u90a3\u5c31\u770b\u7b2c\u4e8c\u4e2a\u3002\u53d1\u73b0\u5c06\u5e8f\u5217\u500d\u957f\uff0c\u5176\u5b9e\u662f\u8981\u6c42\u67d0\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u533a\u95f4\u4e2d\u524d\u7f00\u548c\u7684\u6700\u5c0f\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u6570\uff08$0$ \u6216 \u52a0\u5165\u5de6\u62ec\u53f7\u4e2a\u6570\u7684\u76f8\u53cd\u6570\uff09\u3002\n\n\u7136\u540e\u5c31\u7b80\u5355\u7528 ST \u8868\u7ef4\u62a4\u4e00\u4e0b\u3002\n\n\u611f\u89c9\u8bc4\u9ed1\u6709\u70b9\u8fc7\u4e86\uff08\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ull long long\nconst ull mod=1e9+7;\nchar s[2000005];\nint sum[2000005];\nint st[2000005][23];\nint lg2[2000005];\nint n;\null has[2000005],pow3[2000005];\nint query(int l,int r){\n\tint k=lg2[r-l];\n\treturn min(st[l][k],st[r-(1<<k)+1][k]);\n}\null gethash(int l,int r){\n\treturn (has[r]-has[l-1]*pow3[r-l+1]%mod+mod)%mod;\n}\nbool check(int i,int j){\n\tint l=0,r=n;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(gethash(i,i+mid-1)!=gethash(j,j+mid-1))r=mid;\n\t\telse l=mid+1;\n\t}\n\tif(s[i+l-1]<s[j+l-1])return 1;\n\telse return 0;\n}\nint main(){\n\tscanf(\"%s\",s);n=strlen(s);\n\tfor(int i=2;i<=2*n;i++)lg2[i]=lg2[i/2]+1;\n\tfor(int i=0;i<n;i++)s[i+n]=s[i];\n\tsum[0]=(s[0]=='('?1:-1);has[0]=(s[0]=='('?1:2);pow3[0]=1;\n\tfor(int i=1;i<n*2;i++)sum[i]=sum[i-1]+(s[i]=='('?1:-1),has[i]=(has[i-1]*5+(s[i]=='('?1:2))%mod,pow3[i]=pow3[i-1]*5%mod;\n\tfor(int i=0;i<n*2;i++)st[i][0]=sum[i];\n\tfor(int j=1;j<=20;j++)\n\t\tfor(int i=0;i<=n*2-(1<<j);i++)st[i][j]=min(st[i][j-1],st[i+(1<<j-1)][j-1]);\n\tint add=sum[n-1];\n\tif(add>0){\n\t\tint mxpos=-1;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tif(query(i,i+n-1)>=(i==0?0:sum[i-1]))\n\t\t\t\tif(mxpos<0||check(i,mxpos))mxpos=i;\n\t\tfor(int i=mxpos;i<mxpos+n;i++)putchar(s[i]);\n\t\twhile(add--)putchar(')');\n\t\tputs(\"\");\n\t}else{\n\t\tint mxpos=-1;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tif(query(i,i+n-1)>=add+(i==0?0:sum[i-1]))\n\t\t\t\tif(mxpos<0||check(i,mxpos))mxpos=i;\n\t\tadd=-add;\n\t\twhile(add--)putchar('(');\n\t\tfor(int i=mxpos;i<mxpos+n;i++)putchar(s[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1655467449,
        "uid": 233462,
        "name": "Umbrella_Leaf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3CF524F And Yet Another Bracket Sequence"
    },
    {
        "content": "\u4e00\u9053\u4e0d\u7b97\u592a\u96be\u7684\u5b57\u7b26\u4e32\u8d2a\u5fc3\u9898\u3002\n\n\u8bbe\u539f\u4e32\u4e3a $S$\uff0c\u5176\u5de6\u62ec\u53f7\u6570\u91cf\u4e3a $l$\uff0c\u53f3\u62ec\u53f7\u6570\u91cf\u4e3a $r$\u3002\n\n\u9996\u5148\u53ef\u4ee5\u8bc1\u660e\u7684\u662f\u82e5 $l<r$ \u90a3\u4e48\u9700\u8981\u8865 $(r-l)$ \u4e2a\u5de6\u62ec\u53f7\uff0c\u53cd\u4e4b\u9700\u8981\u8865 $(l-r)$ \u4e2a\u53f3\u62ec\u53f7\u3002\n\n\u8bc1\u660e\u975e\u5e38\u7b80\u5355\uff1a\n\n\u5fc5\u8981\u6027\u663e\u7136\u3002\n\n\u8003\u8651\u5145\u5206\u6027\uff0c\u52a0\u5165\u5b8c\u8fd9\u4e9b\u62ec\u53f7\u540e\u9009\u62e9\u4e00\u4e2a $pos$ \u4f7f\u5f97\u4ee5 $pos$ \u4e3a\u7ed3\u5c3e\u7684\u524d\u7f00\u7684 $\\text{\u5de6\u62ec\u53f7\u6570\u91cf}-\\text{\u53f3\u62ec\u53f7\u6570\u91cf}$ \u6700\u5c0f\uff0c\u7136\u540e\u4ee5 $pos$ \u4e3a\u5f00\u5934\uff0c\u524d\u9762\u7684\u5faa\u73af\u79fb\u4f4d\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u65b0\u4e32\u5c31\u4e0d\u4f1a\u51fa\u73b0 $\\text{\u5de6\u62ec\u53f7\u6570\u91cf<\u53f3\u62ec\u53f7\u6570\u91cf}$ \u7684\u60c5\u51b5\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5c06 $|S|$ \u5faa\u73af\u79fb\u4f4d\u597d\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u5c06\u5de6\u62ec\u53f7\u653e\u5165\u6700\u5de6\u8fb9\u7684\u4f4d\u7f6e\uff0c\u53f3\u62ec\u53f7\u653e\u5728\u6700\u53f3\u8fb9\u7684\u4f4d\u7f6e\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u6c42\u51fa $SS$ \u7684\u540e\u7f00\u6570\u7ec4\u3002\n\n\u987a\u5e8f\u679a\u4e3e $i$\uff0c\u82e5\u5b58\u5728\u4e00\u4e2a $sa_i\\le |S|$ \u90a3\u4e48\u628a $SS_{sa_i,\u2026,sa_i+|S|-1}$ \u63d0\u53d6\u51fa\u6765\uff0c\u518d\u52a0\u5165\u65b0\u7684\u62ec\u53f7\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u5373\u53ef\uff0c\u82e5\u5408\u6cd5\uff0c\u5219\u7b54\u6848\u4e3a\u4e4b\uff0c\u53cd\u4e4b\uff0c\u7ee7\u7eed\u679a\u4e3e\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u5f97\u5230\u7684\u4e32\u662f\u5408\u6cd5\u7684\u4e14\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u8fd9\u79cd\u505a\u6cd5\u6700\u52a3\u662f $O(|S|^2)$ \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5feb\u901f\u5224\u65ad\u5176\u662f\u5426\u5408\u6cd5\u3002\n\n\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u8bbe $val_i$ \u4e3a $SS_{1,\u2026,i}$ \u4e32\u4e2d $\\text{\u5de6\u62ec\u53f7\u6570\u91cf-\u53f3\u62ec\u53f7\u6570\u91cf}$ \u7684\u503c\uff0c\u7136\u540e\u7528 ST \u8868\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4 $val$ \u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u90a3\u5982\u4f55\u67e5\u8be2\uff1f\n\n\u82e5 $l>r$\uff0c\u90a3\u4e48\u5f53 $\\min\\{val_{x,\u2026,x+|S|-1}\\}=val_{x-1}$ \u65f6\uff0c$x$ \u53ef\u4ee5\u4f5c\u4e3a\u52a0\u5165\u65b0\u62ec\u53f7\u4e4b\u524d\u7684\u62ec\u53f7\u5e8f\u5217\u7684\u5f00\u5934\u3002\n\n\u82e5 $l<r$ \u65f6\uff0c\u90a3\u4e48\u5f53 $\\min\\{val_{x,\u2026,x+|S|-1}\\}\\ge val_{x-1}+l-r$ \u65f6\uff0c$x$ \u53ef\u4ee5\u4f5c\u4e3a\u52a0\u5165\u65b0\u62ec\u53f7\u4e4b\u524d\u7684\u62ec\u53f7\u5e8f\u5217\u7684\u5f00\u5934\u3002\n\n\u8fd9\u91cc\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\uff0c$l>r$ \u662f\u56e0\u4e3a\u5f80\u540e\u9762\u52a0\u53f3\u62ec\u53f7\uff0c\u6240\u4ee5\u65e0\u6cd5\u5f71\u54cd\u524d\u9762\u7684\u6761\u4ef6\uff0c\u666e\u901a\u7684\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u7684\u6761\u4ef6\u4e00\u6837\uff1b$l<r$ \u662f\u56e0\u4e3a\u5f80\u524d\u9762\u52a0\u5de6\u62ec\u53f7\u4f1a\u4f7f\u540e\u9762\u7684\u6761\u4ef6\u53d1\u751f\u6539\u53d8\uff0c\u5176\u5b9e\u5c31\u662f\u628a $\\text{\u5de6\u62ec\u53f7\u6570\u91cf}\\ge\\text{\u53f3\u62ec\u53f7\u6570\u91cf}$ \u8fd9\u4e2a\u6761\u4ef6\u7684\u5de6\u5f0f\u52a0\u4e0a $r-l$\u3002\n\n\u8fd9\u6837\u67e5\u8be2\u5408\u6cd5\u5c31\u662f $O(1)$ \u7684\u4e8b\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(|S|\\log |S|)$\u3002\n# AC code\uff1a\n```cpp\nchar s[2000005];\nint fir[2000005],logg[2000005],top,sec[2000005],sum[2000005],sa[2000005],n,num=123,st[2000005][21];\nvoid getsa(){\n\tmemset(sum,0,num+1<<2);int i,j;\n\tfor(i=1;i<=n;i++) sum[fir[i]=s[i]]++;\n\tfor(i=1;i<=num;i++) sum[i]+=sum[i-1];\n\tfor(i=n;i;i--) sa[sum[fir[i]]--]=i;\n\tfor(i=1;i<=n;i<<=1){\n\t\tint cnt=0;\n\t\tfor(j=n-i+1;j<=n;j++) sec[++cnt]=j;\n\t\tfor(j=1;j<=n;j++) if(sa[j]>i) sec[++cnt]=sa[j]-i;\n\t\tmemset(sum,0,num+1<<2);\n\t\tfor(j=1;j<=n;j++) sum[fir[j]]++;\n\t\tfor(j=1;j<=num;j++) sum[j]+=sum[j-1];\n\t\tfor(j=n;j;j--) sa[sum[fir[sec[j]]]--]=sec[j];\n\t\tswap(fir,sec),fir[sa[1]]=cnt=1;\n\t\tfor(j=2;j<=n;j++) fir[sa[j]]=cnt+=sec[sa[j]]^sec[sa[j-1]]||sec[sa[j]+i]^sec[sa[j-1]+i];\n\t\tif(cnt==n) break;num=cnt;\n\t}\n}\ninline int getmin(int l,int r){int k=logg[r-l+1];return min(st[l][k],st[r-(1<<k)+1][k]);}\nint main(){\n\tscanf(\"%s\",s+1);int diff=0,i,j;n=strlen(s+1);\n\tfor(i=1;i<=n;i++) if(s[i]=='(') diff++;else diff--;\n\tfor(i=1;i<=n;i++) s[i+n]=s[i];n<<=1,getsa();\n\tfor(i=1;i<=n;i++){if(s[i]=='(') st[i][0]=st[i-1][0]+1;else st[i][0]=st[i-1][0]-1;}\n\tlogg[0]=-1;for(i=1;i<=n;i++) logg[i]=logg[i>>1]+1;\n\tfor(i=1;i<21;i++) for(j=1;j+(1<<i)-1<=n;j++) st[j][i]=min(st[j][i-1],st[j+(1<<i-1)][i-1]);\n\tfor(i=1;i<=n;i++) if(sa[i]<=n>>1&&getmin(sa[i],sa[i]+(n>>1)-1)>=min(diff,0)+st[sa[i]-1][0]){\n\t\tif(diff<0){while(diff++) putchar('(');diff=0;}\n\t\tfor(j=sa[i];j<sa[i]+(n>>1);j++) putchar(s[j]);\n\t\tif(diff>0) while(diff--) putchar(')');return 0;\n\t}\n}\n```",
        "postTime": 1647531445,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF524F"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u540e\u7f00\u6570\u7ec4+ST\u8868+\u8d2a\u5fc3\n\n&emsp;&emsp;\u5404\u8def\u9898\u89e3\u90fd\u6ca1\u600e\u4e48\u770b\u61c2\uff0c\u53ea\u4f1a\u5e38\u6570\u5de8\u5927\u7684\u540e\u7f00\u6570\u7ec4+ST\u8868\uff0c\u6700\u5927\u70b9\u7528\u65f6 $4s$, \u521a\u597d\u53ef\u4ee5\u8fc7\u3002\u3002\u3002\n\n## \u786e\u5b9a\u5408\u6cd5\u5e8f\u5217\u957f\u5ea6\n\n&emsp;&emsp;\u9996\u5148\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\u662f\u5408\u6cd5\u7684\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n1. ```(``` \u7684\u6570\u91cf\u548c```)```\u7684\u6570\u91cf\u76f8\u7b49\u3002\n2. **\u5e8f\u5217\u4efb\u610f\u524d\u7f00\u4e2d\uff0c```)```\u7684\u6570\u91cf\u90fd\u5c0f\u4e8e\u7b49\u4e8e```(```\u7684\u6570\u91cf\uff1b\u6216\u8005\u5e8f\u5217\u4efb\u610f\u540e\u7f00\u4e2d\uff0c```(```\u7684\u6570\u91cf\u90fd\u5c0f\u4e8e\u7b49\u4e8e```)```\u7684\u6570\u91cf\uff08\u5728\u6ee1\u8db3\u6761\u4ef61\u7684\u60c5\u51b5\u4e0b\u4e24\u79cd\u8bf4\u6cd5\u7b49\u4ef7\uff09**\u3002\n\n&emsp;&emsp;\u8fd9\u4e24\u4e2a\u6761\u4ef6\u5171\u540c\u6784\u6210\u4e86\u68c0\u9a8c\u62ec\u53f7\u5e8f\u5217\u5408\u6cd5\u7684\u5145\u8981\u6761\u4ef6\u3002\n\n&emsp;&emsp;\u6240\u4ee5\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u5408\u6cd5\u5e8f\u5217\u6700\u5c0f\u503c\uff0c\u5176\u5b9e\u5c31\u662f\u8ba9\u4e24\u4e2a\u62ec\u53f7\u6570\u76ee\u76f8\u7b49\u65f6\u7684\u603b\u957f\uff0c\u8ba9\u5c11\u7684\u90a3\u79cd\u62ec\u53f7\u8865\u4e0a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n## \u8ba9\u5b57\u5178\u5e8f\u6700\u5c0f\n\n&emsp;&emsp;\u73b0\u5728\u8003\u8651\u5982\u4f55\u8ba9\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n### 1. \u62ec\u53f7\u653e\u7f6e\uff08\u8d2a\u5fc3\uff09\n\n\u2003\u2003\u4e0d\u59a8\u8bbe\u5f53\u524d```)```\u6bd4```(``` \u5c11\uff0c\u6570\u91cf\u5206\u522b\u4e3a $cnt_1,cnt_2$\uff0c\u4e3a\u4e86\u8ba9\u5e8f\u5217\u957f\u5ea6\u6700\u5c0f\uff0c\u6211\u4eec\u53ea\u80fd\u5728\u5e8f\u5217\u4e2d\u8865\u4e0a $cnt_2-cnt_1$ \u4e2a```)```\u3002\u4e3a\u4e86\u8ba9\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6211\u4eec\u628a```)```\u653e\u5728\u5e8f\u5217\u672b\u5c3e\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u5728\u8981\u8865\u5168\u5e8f\u5217\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6 $2$ \u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u540e\u5f97\u5230\u7684\u5e8f\u5217\u662f\u5408\u6cd5\u7684\uff0c\u800c\u4e14\u5b57\u5178\u5e8f\u662f\u6700\u5c0f\u7684\u3002\u4f46\u662f\u5f53\u8981\u8865\u5168\u7684\u5e8f\u5217\u4e0d\u6ee1\u8db3\u6761\u4ef6 $2$ \u65f6\uff0c\u4e0d\u7ba1\u4f60\u600e\u4e48\u52a0```)```\u90fd\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6 $2$ \u4e86\uff0c\u6240\u4ee5\u5982\u679c\u80fd\u52a0```)```\u4e00\u5b9a\u662f\u52a0\u5728\u672b\u5c3e\u7684\uff08\u8d2a\u5fc3\uff09\u3002\n\n\u2003\u2003\u540c\u7406\u5728```(```\u6bd4```)``` \u5c11\u65f6\uff0c\u6211\u4eec\u5728\u5e8f\u5217\u524d\u9762\u8865\u5168```(``` \uff0c\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\u8fd9\u6837\u53ef\u4ee5\u53d1\u73b0\uff0c\u8981\u8865\u5168\u5e8f\u5217\u548c\u8865\u5168\u62ec\u53f7\u7684\u90e8\u5206\u662f\u5b8c\u5168\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u4f7f\u8981\u8865\u5168\u7684\u5e8f\u5217\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u4e14\u6ee1\u8db3\u6761\u4ef6 $2$, \u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\u3002 \n\n### 2. \u5b57\u5178\u5e8f\u6392\u5217\uff08\u540e\u7f00\u6570\u7ec4\uff09\n\n\u2003\u2003\u56e0\u4e3a\u62ec\u53f7\u5b57\u7b26\u4e32 $S$ \u53ef\u4ee5\u5faa\u73af\uff0c\u8fd9\u91cc\u4e00\u822c\u7684\u5957\u8def\u662f\u590d\u5236\u4e00\u6b21\u539f\u4e32\u5230\u672b\u5c3e\uff0c\u5f62\u6210\u5faa\u73af\u4e32\u3002\u8fd9\u91cc\u8981\u8ba9\u957f\u5ea6\u4e3a $|S|$ \u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u4f7f\u7528\u540e\u7f00\u6570\u7ec4\u5b8c\u6210[\u540e\u7f00\u6392\u5e8f](https://www.luogu.com.cn/problem/P3809)\u3002\u6211\u4eec\u53ea\u9700\u8003\u8651\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $|S|$ \u7684\u4e32\uff08\u56e0\u4e3a\u8fd9\u4e9b\u4e32\u8981\u4e48\u524d $|S|$ \u4e2a\u5b57\u7b26\u76f8\u7b49\uff0c\u8fd9\u6837\u53d6\u54ea\u4e2a\u90fd\u662f\u7b49\u4ef7\u7684\uff1b\u8981\u4e48\u4e0d\u7b49\uff0c\u90a3\u4e48\u6392\u5e8f\u5c31\u76f8\u5f53\u4e8e\u957f\u5ea6 $|S|$ \u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\uff09\u3002\n\n\u2003\u2003\u5269\u4e0b\u95ee\u9898\u5c31\u662f\u5224\u65ad\u8fd9\u4e2a\u957f\u5ea6\u4e3a $|S|$ \u7684\u533a\u95f4\uff0c\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 $2$ \u3002\n\n### 3.\u5224\u65ad\u6761\u4ef62\uff08ST\u8868\uff09\n\n\u2003\u2003\u8fd9\u91cc\u6709\u4e2a\u5224\u65ad\u62ec\u53f7\u5e8f\u5217\u5408\u6cd5\u7684\u5957\u8def\uff0c\u5c31\u662f\u628a```(```\u6620\u5c04\u4e3a $1$\uff0c```)```\u6620\u5c04\u4e3a $-1$\uff0c\u5f97\u5230\u524d\u7f00\u548c $lr\\_cnt$ \u4e0e\u540e\u7f00\u548c $rl\\_cnt$\u3002\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n+ $lr\\_cnt_{|S|}=0$ \uff0c\u6ee1\u8db3\u6761\u4ef6 $1$ \uff0c\u56e0\u4e3a\u4e0d\u7528\u8865\u5168\u62ec\u53f7\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u4e86\u3002\n+ $lr\\_cnt_{|S|}>0$ \uff0c```(```\u6570\u76ee\u591a\u4e8e```)```\uff0c\u9700\u8981\u5728\u5e8f\u5217\u672b\u5c3e\u8865\u4e0a```)```\u3002\u8981\u4f7f\u67d0\u4e2a\u533a\u95f4 $[l,r]$ \u6ee1\u8db3\u6761\u4ef6 $2$ \uff0c\u5c31\u8981\u4f7f $[l,r]$ \u7684\u4efb\u610f\u524d\u7f00\u4e2d\uff0c```)```\u7684\u6570\u91cf\u90fd\u5c0f\u4e8e\u7b49\u4e8e```(```\u7684\u6570\u91cf\uff0c\u5373\u5bf9\u4e8e $\\forall x,l\\le x\\le r$ \u90fd\u6709 $[l,x]$ \u4e2d```(```\u7684\u6570\u76ee\u51cf```)```\u7684\u6570\u76ee\u5927\u4e8e\u7b49\u4e8e $0$ \u3002\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5 $\\mathcal O(1)$ \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u4e0a\u8ff0\u8981\u6c42\uff1a\u53d6\u8fd9\u4e2a\u533a\u95f4\u4e0a\u524d\u7f00\u548c\u6700\u5c0f\u7684\u503c\uff0c\u51cf\u53bb $lr\\_cnt_{l-1}$ \uff0c\u5982\u679c\u4ecd\u5927\u4e8e\u7b49\u4e8e $0$ \uff0c\u8bf4\u660e\u8be5\u533a\u95f4\u786e\u5b9e\u6ee1\u8db3\u4e0a\u8ff0\u8981\u6c42\uff08\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u503c\u90fd\u4e0d\u5c0f\u4e8e $0$ \u4e86\uff0c\u533a\u95f4\u5176\u4ed6\u503c\u80af\u5b9a\u4e5f\u4e0d\u5c0f\u4e8e $0$\uff09\u3002\u6c42\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u9884\u5904\u7406ST\u8868\u5373\u53ef\u3002\n+ $lr\\_cnt_{|S|}<0$ \uff0c\u540c\u7406\u8981\u5728\u5e8f\u5217\u524d\u7aef\u8865\u4e0a```(```\u3002\u4e0a\u9762\u662f\u6c42\u524d\u7f00\u548c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u8fd9\u91cc\u5c31\u662f\u6c42\u540e\u7f00\u548c\u533a\u95f4\u6700\u5927\u503c\u4e86\u3002\u6240\u4ee5\u5728ST\u8868\u5f97\u5206\u60c5\u51b5\u5904\u7406\u3002\n\n### $Code:$\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 2e6+5;\nchar s[N];\nint tp[N],rak[N],sa[N],tax[N],sl,m,lr_cnt[N],lg[N],f[N][22],rl_cnt[N];\n\nvoid radixSort(){\n    for(int i = 1;i <= m;i++) tax[i] = 0;\n    for(int i = 1;i <= sl; i++) tax[rak[i]]++;\n    for(int i = 1;i <= m;i++) tax[i] += tax[i-1];\n    for(int i = sl; i ; i--) sa[tax[rak[tp[i]]]--] = tp[i];\n}\n\nvoid build_sa(){\n    m = 125;\n    for(int i = 1; i <= sl; i++) rak[i] = s[i], tp[i] = i;\n    radixSort();\n    for(int p = 0,w = 1; p < sl; w <<= 1, m = p){\n        p = 0;\n        for(int i = 1;i <= w;i++) tp[++p] = sl - w + i;\n        for(int i = 1; i <= sl; i++) if(sa[i] > w) tp[++p] = sa[i] - w;\n        radixSort();\n        swap(tp,rak);\n        rak[sa[1]] = p = 1;\n        for(int i = 2; i <= sl; i++) rak[sa[i]] = (tp[sa[i]] == tp[sa[i - 1]] && tp[sa[i] + w] == tp[sa[i - 1] + w]) ? p : ++p;\n    }\n}\n\nvoid make_st(){\n    int range = lg[sl];\n    //'('\u7684\u6570\u76ee\u591a\n    if(lr_cnt[sl] > 0){\n        for(int i = 1;i <= sl;i++) f[i][0] = lr_cnt[i];\n        for(int i = 1;i <= range;i++)\n            for(int j = 1;j + (1<<i) - 1<= sl;j++)\n                f[j][i] = min(f[j][i-1],f[j+(1<<(i-1))][i-1]);\n    }else{\n    //')'\u7684\u6570\u76ee\u591a    \n        for(int i = 1;i <= sl;i++) f[i][0] = rl_cnt[i];\n        for(int i = 1;i <= range;i++)\n            for(int j = 1;j + (1<<i) - 1<= sl;j++)\n                f[j][i] = max(f[j][i-1],f[j+(1<<(i-1))][i-1]);\n    }\n}\n\nint query(int l,int r){\n    int range = lg[r-l+1];\n    if(lr_cnt[sl] > 0) return min(f[l][range], f[r - (1 << range) + 1][range]);\n    else return max(f[l][range],f[r-(1<<range)+1][range]);\n}\n\nint main(){\n    scanf(\"%s\",s+1);\n    sl = strlen(s+1);\n    for(int i = 1;i <= sl;i++) s[i + sl] = s[i];\n    sl <<= 1;   //\u957f\u5ea6\u7ffb\u500d\uff0c\u6ce8\u610f\u540e\u9762\u7528\u5230\u65f6\u8981/2\u5f97\u5230\u539f\u957f\n    build_sa();\n\n    //lr_cnt\u4e3a\u524d\u7f00\u548c\uff0crl_cnt\u4e3a\u540e\u7f00\u548c\n    for(int i = 1;i <= sl;i++) \n        lr_cnt[i] = lr_cnt[i - 1] + ((s[i] == '(') ? 1 : -1); \n    for(int i = sl;i;i--) \n        rl_cnt[i] = rl_cnt[i + 1] + ((s[i] == '(') ? 1 : -1);\n    //\u9884\u5904\u7406log2\u6570\u7ec4\n    for(int i = 2;i <= sl;i++) lg[i] = lg[i-1] + (i == (1<<(lg[i-1]+1)));\n    make_st();\n\n    //l_fill\u662f\u5728\u524d\u7aef\u8865\u5168'('\u7684\u6570\u76ee,r_fill\u662f\u5728\u672b\u5c3e\u8865\u5168')'\u7684\u6570\u76ee\uff08\u5176\u4e2d\u4e00\u4e2a\u4e3a0\uff09\n    int l_fill = 0,r_fill = 0,ans_pos;\n    if(lr_cnt[sl] > 0) r_fill = lr_cnt[sl]/2; //\u56e0\u4e3a\u5e8f\u5217\u7ffb\u500d\uff0c\u6240\u4ee5\u5f97/2\n    else l_fill = abs(lr_cnt[sl]/2);\n\n    for(int i = 1;i <= sl;i++){\n        //\u83b7\u5f97\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u5de6\u7aef\u70b9\u5728\u539f\u4e32\u4f4d\u7f6e\n        int p = sa[i];             \n        if(p > sl/2) continue;     \n        //res\u67e5\u8be2\u533a\u95f4\u6700\u503c\n        int res = query(p,p + sl/2 -1);\n        if(lr_cnt[sl] > 0){\n            if(res - lr_cnt[p - 1] < 0) continue;\n        }else{\n            if(res - rl_cnt[p + sl / 2] > 0) continue;\n        }\n        ans_pos = p;\n        break;\n    }\n    for(int i = 1; i <= l_fill; i++) printf(\"(\");\n    for(int i = ans_pos;i <= ans_pos + sl/2 - 1;i++) printf(\"%c\",s[i]);\n    for(int i = 1; i <= r_fill; i++) printf(\")\");\n    return 0;\n}\n```\n\n",
        "postTime": 1615910548,
        "uid": 281293,
        "name": "ailanxier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF524F And Yet Another Bracket Sequence"
    },
    {
        "content": "# \u94fe\u63a5\nhttps://www.luogu.org/problem/show?pid=CF524F\n***\n# \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u73b0\u5728\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n1. \u5728\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u63d2\u5165\u6709\u4e00\u4e2a\u5de6\u62ec\u53f7\u6216\u53f3\u62ec\u53f7\n2. \u5c06\u672b\u5c3e\u7684\u4e00\u4e2a\u62ec\u53f7\u653e\u5230\u6700\u524d\u9762\n\n\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5e8f\u5217\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u95ee\u5728\u4f7f\u62ec\u53f7\u5e8f\u5217\u5408\u6cd5\u7684\u524d\u63d0\u4e0b\uff0c\u957f\u5ea6\u6700\u77ed\u662f\u591a\u5c11\uff0c\u5982\u679c\u6709\u591a\u7ec4\u89e3\uff0c\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\n\n$N\\leq10^6$\n***\n# \u89e3\u9898\u601d\u8def\n\u53ef\u4ee5\u7528\u540e\u7f00\u6570\u7ec4+\u7ebf\u6bb5\u6811\u89e3\u51b3\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u7801\u5f88\u957f~~\uff08\u5f88\u96be\u62a0\u6807\uff09~~\uff0c\u8003\u8651\u5176\u5b83\u7684\u7b97\u6cd5\n\n\u9996\u5148\u6700\u540e\u7684\u957f\u5ea6\u4e00\u5b9a\u7b49\u4e8e\uff08\u539f\u5b57\u7b26\u4e32\u957f\u5ea6+\u5de6\u62ec\u53f7\u4e0e\u53f3\u62ec\u53f7\u6570\u91cf\u7684\u5dee\u503c\uff09\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u8ba9\u5176\u7684\u5b57\u5178\u5e8f\u5c3d\u91cf\u7684\u5c0f\n\n\u6211\u4eec\u9884\u5904\u7406\u524d\u7f00\u548c\uff0c'('\u4e3a+1\uff0c')'\u4e3a-1\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u4e00\u5b9a\u662f\u4ece\u5e8f\u5217\u4e2d\u7684\u67d0\u4e00\u4f4d\u5f00\u59cb\u5faa\u73af$n$\u6b21\uff0c\u6700\u540e\u8865\u4e0a\u9700\u8981\u8865\u8db3\u7684\u62ec\u53f7\u6570\u7684\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ea\u9700\u8981\u67e5\u627e\u957f\u5ea6\u4e3a$n$\u7684\u5b50\u4e32\u4e2d\u5408\u6cd5\u4e14\u6700\u5c0f\u7684\u90a3\u4e32\n\n\u5224\u65ad\u5408\u6cd5\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7528hash+\u4e8c\u5206\n***\n# 97%(38/39)\u4ee3\u7801\n\u81ea\u7136\u6ea2\u51fa\u54c8\u5e0c\uff0c\u4f46\u5728\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9hash\u503c\u51fa\u73b0\u4e86\u5947\u602a\u7684\u91cd\u590d\u73b0\u8c61\uff0c\u6240\u4ee5\u8be5\u4ee3\u7801\u8fc7\u4e0d\u4e86\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9\n\n\u4f46\u662f\u8be5\u4ee3\u7801\u5728\u4e8e\u6b63\u89e3\u7684\u5bf9\u62cd\u4e2d10000\u7ec4\u6570\u636e\u5185\u90fd\u6ca1\u6709\u8bef\u5dee\u3002\u3002\u3002\n\n\u4ee3\u7801\u89e3\u91ca\u5728\u6b63\u89e3\u90a3\u91cc\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define r(i,a,b) for(register int i=a;i<=b;i++)\n#define MAXN 2000005\nusing namespace std;char s[MAXN];\nint n,N,a[MAXN],p,tot;\nunsigned long long c[MAXN],h[MAXN];\ndeque<int>q;\nconst int base=3;\ninline unsigned long long gethash(register int x,register int len){return h[x+len-1]-h[x-1]*c[len];}\ninline bool cmp(register int x,register int y)\n{\n\tint l=0,r=n,ans=0,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=l+r>>1;\n\t\tif(gethash(x,mid)==gethash(y,mid)) l=(ans=mid)+1;else r=mid-1;\n\t}\n\treturn ans==n?1:s[x+ans]=='(';\n}\nsigned main()\n{\n    /*freopen(\"data.in\",\"r\",stdin);\n    freopen(\"\u5047\u89e3.out\",\"w\",stdout);\u7528\u6765\u5bf9\u62cd\u7684\uff0c\u89c1\u8c05\uff01*/\n\tscanf(\"%s\",s+1);n=strlen(s+1);N=n<<1;\n\tc[0]=1;\n\tr(i,1,n) s[i+n]=s[i],tot+=(s[i]=='('?1:-1);\n\tr(i,1,N)\n\t{\n\t\tc[i]=c[i-1]*base;\n\t\th[i]=h[i-1]*base+(s[i]=='('?1:2);\n\t}\n\tif(tot>=0)\n\t{\n\t\tr(i,1,N) a[i]=a[i-1]+(s[i]=='('?1:-1);\n\t\tr(i,1,N-1)\n\t\t{\n\t\t\twhile(q.size()&&a[i]<=a[q.back()]) q.pop_back();\n\t\t\tq.push_back(i);\n\t\t\twhile(q.size()&&i-q.front()>=n) q.pop_front();\n\t\t\tif(q.size()&&i>=n&&a[q.front()]>=a[i-n]) {if(!p||cmp(i-n+1,p)) p=i-n+1;}\n\t\t}\n\t\tfor(register int i=0;i<n;i++) putchar(s[i+p]);\n\t\tr(i,1,tot) putchar(')');\n\t}\n\telse\n\t{\n\t\tfor(register int i=N;i;i--) a[i]=a[i+1]-(s[i]=='('?1:-1);\n\t\tfor(register int i=N-1;i;i--)\n\t\t\n\t\t{\n\t\t\twhile(q.size()&&a[i]<=a[q.back()]) q.pop_back();\n\t\t\tq.push_back(i);\n\t\t\twhile(q.size()&&q.front()-i>=n) q.pop_front();\n\t\t\tif(q.size()&&i<=n&&a[q.front()]>=a[i+n]) if(!p||cmp(i,p)) p=i;\n\t\t}\n\t\tfor(register int i=tot;i<0;i++) putchar('(');\n\t\tfor(register int i=0;i<n;i++) putchar(s[i+p]);\n\t}\n}\n```\n# AC\u4ee3\u7801\n\u5bf9\u4e0a\u7248\u672c\u7684$hash$\u7684\u6539\u826f\u7248\u672c\uff0c\u4eba\u5de5\u5904\u7406\u6ea2\u51fa\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define ymw 1000000009\n#define r(i,a,b) for(register int i=a;i<=b;i++)\n#define MAXN 2000005\nusing namespace std;char s[MAXN];\nint n,N,a[MAXN],p,tot,c[MAXN],h[MAXN];\ndeque<int>q;\ninline int add(register int x,register int y){x+=y;return x>=ymw?x-ymw:x;}//\u4eba\u5de5\u5904\u7406\u6ea2\u51fa\ninline int gethash(register int x,register int len){return add(h[x+len-1],ymw-h[x-1]*(long long)c[len]%ymw);}//\u53d6hash\u503c\ninline bool cmp(register int x,register int y)//\u5224\u65ad\u4ee5x\u5f00\u5934\u7684\u4e32\u662f\u5426\u80fd\u66ff\u6362y\u5f00\u5934\u7684\u4e32\n{\n\tint l=0,r=n,ans=0,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=l+r>>1;\n\t\tif(gethash(x,mid)==gethash(y,mid)) ans=mid,l=mid+1;else r=mid-1;\n\t}\n\treturn ans==n?1:s[x+ans]=='(';//\u5b8c\u5168\u80fd\u66ff\u6362\u6216\u8005\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\u662f\u5de6\u62ec\u53f7\u90fd\u884c\uff08\u8fd9\u8868\u660ey\u4e32\u4e0d\u5408\u6cd5\uff09\n}\ninline void solve1()//\u5904\u7406\u5de6\u62ec\u53f7\u66f4\u591a\u7684\u60c5\u51b5\uff0c\u6700\u540e\u8865\u53f3\u62ec\u53f7\n{\n\tc[0]=1;\n\tr(i,1,N)\n\t{\n\t\ta[i]=a[i-1]+(s[i]=='('?1:-1);\n\t\tc[i]=add(c[i-1],add(c[i-1],c[i-1]));\n\t\th[i]=add(add(h[i-1],add(h[i-1],h[i-1])),(s[i]=='('?1:2));\n\t}\n\tr(i,1,N-1)\n\t{\n\t\twhile(q.size()&&a[i]<=a[q.back()]) q.pop_back();//\u4f18\u5148\u7528\u53f3\u62ec\u53f7\u591a\u7684\u8fdb\u884c\u8f6c\u79fb\n\t\tq.push_back(i);\n\t\twhile(q.size()&&i-q.front()>=n) q.pop_front();//\u957f\u5ea6\u5927\u4e8en\uff0c\u5f39\u51fa\n\t\tif(i>=n&&a[q.front()]>=a[i-n]) if(!p||cmp(i-n+1,p)) p=i-n+1;\n\t}\n\tfor(register int i=0;i<n;i++) putchar(s[p+i]);\n\tr(i,1,tot) putchar(')');\n\treturn;\n}\ninline void solve2()//\u9700\u8981\u8865\u53ca\u5de6\u62ec\u53f7\u7684\uff0c\u628a\u539f\u4e32\u5012\u8fc7\u6765\u5904\u7406\u5373\u53ef\n{\n\tc[0]=1;\n\tr(i,1,N)\n\t{\n\t\tc[i]=add(c[i-1],add(c[i-1],c[i-1]));\n\t\th[i]=add(add(h[i-1],add(h[i-1],h[i-1])),(s[i]=='('?1:2));\n\t}\n\tfor(register int i=N;i;i--) a[i]=a[i+1]-(s[i]=='('?1:-1);\n\tfor(register int i=N-1;i;i--)\n\t{\n\t\twhile(q.size()&&a[i]<=a[q.back()]) q.pop_back();\n\t\tq.push_back(i);\n\t\twhile(q.size()&&q.front()-i>=n) q.pop_front();\n\t\tif(i<=n&&a[q.front()]>=a[i+n]) if(!p||cmp(i,p)) p=i;\n\t}\n\tfor(register int i=tot;i<0;i++) putchar('(');\n\tfor(register int i=0;i<n;i++) putchar(s[p+i]);\n\treturn;\n}\nsigned main()\n{\n\tscanf(\"%s\",s+1);n=strlen(s+1);N=n<<1;\n\tr(i,1,n) s[i+n]=s[i],tot+=(s[i]=='('?1:-1);//\u8ba1\u7b97+\u9884\u5904\u7406\n\tif(tot>=0) solve1();else solve2();\n}\n```",
        "postTime": 1538445631,
        "uid": 52915,
        "name": "Ajwallet",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF524F \u3010And Yet Another Bracket Sequence\u3011"
    }
]