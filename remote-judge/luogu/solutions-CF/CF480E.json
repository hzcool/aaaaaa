[
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/CF480E)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u8fd9\u79cd\u5355\u5411\u4fee\u6539\u5e76\u4e14\u7b54\u6848\u968f\u4fee\u6539\u5177\u6709\u5355\u8c03\u6027\u7684\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u79bb\u7ebf\u4e0b\u6765\u8be2\u95ee\uff0c\u4ee5\u4fdd\u8bc1\u7b54\u6848\u662f\u9012\u589e\u7684\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6240\u4ee5\u6211\u4eec\u628a\u6574\u9053\u9898\u79bb\u7ebf\uff0c\u5e76\u4e14\u5012\u7740\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u53ef\u4ee5\u628a\u6700\u7ec8\u72b6\u6001\u7684\u65b9\u683c\u7684\u5f62\u6001\u5904\u7406\u51fa\u6765\uff0c\u5e76\u4e14\u4e00\u4e2a$DP$\u626b\u51fa\u6700\u540e\u7684\u6700\u5927\u6b63\u65b9\u5f62\u3002\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u4e86\u6700\u540e\u4e00\u6b21\u4fee\u6539\u540e\u7684\u7b54\u6848\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u8fdb\u884c\u4e00\u6b21\u4fee\u6539\u3002\u6b64\u65f6\u4fee\u6539\u603b\u662f\u7531$'X'$\u53d8$'.'$\u3002\u6240\u4ee5\u6b64\u65f6\u7684\u5012\u7740\u505a\u7684\u7b54\u6848\u5fc5\u7136\u662f\u9012\u589e\u7684\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u663e\u7136\uff0c\u6b64\u65f6\u65b0\u51fa\u7684\u7b54\u6848\u7684\u6b63\u65b9\u5f62\u7684\u884c\u8303\u56f4\u5fc5\u7136\u5305\u542b\u4e86\u5f53\u524d\u64cd\u4f5c\u7684\u90a3\u4e00\u884c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u626b\u63cf\u90a3\u4e00\u884c\uff0c\u5e76\u4e14\u8ba1\u7b97\u51fa\u8fd9\u4e00\u884c\u4e0a\u6700\u5927\u6b63\u65b9\u5f62\u7684\u5927\u5c0f\uff0c\u4e0e\u539f\u6765\u7684\u7b54\u6848\u8fdb\u884c\u6bd4\u8f83\u5f97\u5230\u65b0\u7684\u7b54\u6848\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u201c\u60ac\u7ebf\u6cd5\u201d\u3002\u6211\u4eec\u9884\u5904\u7406\u51fa\u4e24\u4e2a\u51fd\u6570$f$\u548c$g$\u3002$f(i,j)$\u8868\u793a$(i,j)$\u5411\u4e0a\u7684\u8fde\u7eed\u7a7a\u683c\u5b50\u7684\u957f\u5ea6\uff1b$g(i,j)$\u8868\u793a\u5411\u4e0b\u7684\u3002\u5982\u679c\u5f53\u524d\u683c\u5b50\u6ca1\u88ab\u5360\uff0c\u4e24\u4e2a\u51fd\u6570\u90fd\u5e94\u8be5\u7b97\u4e0a\u81ea\u5df1\u8fd9\u4e00\u683c\u3002\u6bcf\u4e00\u6b21\u4fee\u6539\u9700\u8981\u7ef4\u62a4\u4e00\u4e0b$f$\u548c$g$\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u6709\u5f53\u524d\u4fee\u6539\u7684\u8fd9\u4e00\u5217\u7684\u4f1a\u88ab\u6539\uff0c\u6240\u4ee5\u65f6\u95f4\u662f$O(nk)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u8ba1\u7b97\u65b0\u7684\u7b54\u6848\u3002\u8bbe\u5f53\u524d\u884c\u4e3a$X$\u3002\u5bf9\u4e8e\u533a\u95f4$[l,r]$\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u6700\u957f\u7684\u533a\u95f4\uff0c\u5e76\u4e14\u6ee1\u8db3$\\min_{l\\le i\\le r}\\{f(X,i)\\}+\\max_{l\\le i\\le r}\\{g(X,i)\\}\\ge r-l+2$\u3002\u5982\u679c\u533a\u95f4\u7684\u957f\u5ea6\u786e\u5b9a\uff0c\u4e0d\u7b49\u5f0f\u53f3\u8fb9\u5c31\u4e3a\u533a\u95f4\u957f\u5ea6$+1$\uff0c\u4e0d\u7b49\u5f0f\u5de6\u8fb9\u53ef\u4ee5\u626b\u4e00\u904d\u533a\u95f4\u7136\u540e\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u3002\u6240\u4ee5\u8003\u8651\u4e8c\u5206\u533a\u95f4\u957f\u5ea6\uff0c\u7136\u540e\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u68c0\u67e5\u7b54\u6848\u3002\u65f6\u95f4$O(kn\\log_2n)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5c3a\u53d6\u6cd5\u628a$O(\\log_2n)$\u4f18\u5316\u6389\uff0c\u6240\u4ee5\u672c\u9898\u7684\u6700\u4f18\u65f6\u95f4\u5c31\u662f$O(nk)$\u3002\uff08\u6211\u5199\u7684$O(nk+kn\\log_2n)$\uff09  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n\nconst int MAXN = 2005, MAXM = 2005, MAXK = 2005;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nstruct deque\n{\n\tint q[MAXN];\n\tint h, t;\n\tdeque() { h = 1, t = 0; }\n\tvoid clear() { h = 1, t = 0; }\n\tint front() const { return q[h]; }\n\tint back() const { return q[t]; }\n\tvoid push_front( const int val ) { q[--h] = val; }\n\tvoid push_back( const int val ) { q[++t] = val; }\n\tvoid pop_front() { h ++; }\n\tvoid pop_back() { t --; }\n\tbool empty() const { return h > t; }\n}deq1, deq2;\n\nint DP[MAXN][MAXM];\nint up[MAXN][MAXM], down[MAXN][MAXM];\nint x[MAXN], y[MAXN], ans[MAXN];\nint N, M, K;\nchar tmp[MAXN];\nbool mp[MAXN][MAXN];\n\nbool chk( const int x, const int len )\n{\n\tdeq1.clear(), deq2.clear();\n\tfor( int i = 1 ; i < len ; i ++ )\n\t{\n\t\twhile( ! deq1.empty() && up[x][deq1.back()] >= up[x][i] ) deq1.pop_back();\n\t\tdeq1.push_back( i );\n\t\twhile( ! deq2.empty() && down[x][deq2.back()] >= down[x][i] ) deq2.pop_back();\n\t\tdeq2.push_back( i );\n\t}\n\tfor( int i = len ; i <= M ; i ++ )\n\t{\n\t\twhile( ! deq1.empty() && deq1.front() <= i - len ) deq1.pop_front();\n\t\twhile( ! deq2.empty() && deq2.front() <= i - len ) deq2.pop_front();\n\t\twhile( ! deq1.empty() && up[x][deq1.back()] >= up[x][i] ) deq1.pop_back();\n\t\tdeq1.push_back( i );\n\t\twhile( ! deq2.empty() && down[x][deq2.back()] >= down[x][i] ) deq2.pop_back();\n\t\tdeq2.push_back( i );\n\t\tif( up[x][deq1.front()] + down[x][deq2.front()] - 1 >= len ) return true;\n\t}\n\treturn false;\n}\n\nint main()\n{\n\tread( N ), read( M ), read( K );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tscanf( \"%s\", tmp + 1 );\n\t\tfor( int j = 1 ; j <= M ; j ++ ) mp[i][j] = tmp[j] == 'X';\n\t}\n\tfor( int i = 1 ; i <= K ; i ++ )\n\t\tread( x[i] ), read( y[i] ), mp[x[i]][y[i]] = true;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= M ; j ++ )\n\t\t{\n\t\t\tup[i][j] = mp[i][j] ? 0 : up[i - 1][j] + 1;\n\t\t\tdown[N - i + 1][j] = mp[N - i + 1][j] ? 0 : down[N - i + 2][j] + 1;\n\t\t}\n\tint res = 0;\n\tfor( int i = 1 ; i <= N ; i ++ ) DP[i][1] = ! mp[i][1], res = MAX( res, DP[i][1] );\n\tfor( int i = 1 ; i <= M ; i ++ ) DP[1][i] = ! mp[1][i], res = MAX( res, DP[1][i] );\n\tfor( int i = 2 ; i <= N ; i ++ )\n\t\tfor( int j = 2 ; j <= M ; j ++ )\n\t\t\tDP[i][j] = mp[i][j] ? 0 : MIN( DP[i - 1][j - 1], MIN( DP[i - 1][j], DP[i][j - 1] ) ) + 1,\n\t\t\tres = MAX( res, DP[i][j] ); \n\tans[K] = res;\n\tint l, r, mid;\n\tfor( int k = K ; k ; k -- )\n\t{\n\t\tmp[x[k]][y[k]] = false;\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t{\n\t\t\tup[i][y[k]] = mp[i][y[k]] ? 0 : up[i - 1][y[k]] + 1;\n\t\t\tdown[N - i + 1][y[k]] = mp[N - i + 1][y[k]] ? 0 : down[N - i + 2][y[k]] + 1;\n\t\t}\n\t\tl = 0, r = M;\n\t\twhile( r - l > 1 )\n\t\t{\n\t\t\tmid = ( l + r ) >> 1;\n\t\t\tif( chk( x[k], mid ) ) l = mid;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tif( chk( x[k], r ) ) res = MAX( res, r );\n\t\telse res = MAX( res, l );\n\t\tans[k - 1] = res; \n\t}\n\tfor( int i = 1 ; i <= K ; i ++ )\n\t\twrite( ans[i] ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1570684510,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF480E]Parking Lot"
    },
    {
        "content": "[My Blog](https://www.cnblogs.com/lyttt/p/14039264.html)\n\n[\u9898\u76ee\u94fe\u63a5](http://codeforces.com/problemset/problem/480/E)\n\n### \u9898\u76ee\u89e3\u6790\n\n~~\u88ab\u62ff\u6765\u4f5c\u4e3a\u8003\u8bd5\u9898\uff0c\u6211\u4ee5\u4e3a\u6211\u4f1a\u505a\u6765\u7740\uff0c\u7136\u800c\u5e76\u4e0d\u4f1a\uff08\u600e\u4e48\u597d\u591a\u4eba\u90fd\u505a\u8fc7\u8fd9\u9053\u9898\uff0c\u679c\u7136\u662f\u6211\u592a\u83dc\u4e86\u5624\u5624\u5624~~\n\n\uff08\u4e09\u79cd\u505a\u6cd5\u7684\u4ee3\u7801\u90fd\u653e\u5728\u4e86\u6700\u540e\u9762\n\n#### \u6cd5\u4e00\n\n\u5982\u679c\u4f60\u4ec0\u4e48\u90fd\u4e0d\u4f1a\uff0c\u5c31\u50cf\u6211\u4e00\u6837\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u6572\u51fa\u4e00\u4e2a\u5927\u66b4\u529b\u51fa\u6765\u3002\n\n$a[i][j]$\u8868\u793a\u70b9$(i,j)$\u524d\u9762\u4e00\u5217\u6700\u5927\u7684\u8fde\u7eed\u7a7a\u5730\u957f\u5ea6\uff0c\u7136\u540e$n^2$\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u6b63\u65b9\u5f62\u5de6\u4e0a\u89d2\uff0c\u518d\u679a\u4e3e\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u5f80\u53f3\u8fb9\u5ef6\u4f38\u591a\u5c11\uff0c\u4e00\u8fb9\u679a\u4e3e\u4e00\u8fb9\u5224\u65ad\u3002\n\n~~\uff08\u5176\u5b9e\u662f\u56e0\u4e3a\u60f3\u8d77\u4e86 [\u8fd9\u9053\u9898](https://blog.csdn.net/CQBZLYTina/article/details/99227832)~~\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6c42\u7b54\u6848\u662f$n^3$\u7684\uff08\u867d\u7136\u666e\u901a\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u8dd1\u6ee1\uff0c\u52a0\u4e0a\u8be2\u95ee\u603b\u65f6\u95f4\u590d\u6742\u5ea6$n^4$\n\n\u7136\u540e\u4f60\u5c31\u5f97\u5230\u4e86$20pts$\u7684\u597d\u6210\u7ee9~~\uff08\u8981\u77e5\u9053\u5168\u573a\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u5f97\u5230\u4e86\u8fd9\u4e2a\u5947\u602a\u7684\u5206\u6570~~\n\n\u8003\u573a\u4e0a\u5c1d\u8bd5\u4f18\u5316\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4fee\u6539\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u53ea\u6709\u8fd9\u4e2a\u70b9\u5468\u56f4\u7684\u7b54\u6848\u4f1a\u6539\u53d8\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u53ef\u80fd\u628a\u539f\u6765\u7684\u7b54\u6848\u6b63\u65b9\u5f62\u5288\u6210\u5f88\u591a\u534a\u3002\u4f46\u662f\u53d1\u73b0\u6709\u53ef\u80fd\u4f1a\u5b58\u5728\u5f88\u591a\u4e2a\u7b54\u6848\u6b63\u65b9\u5f62\uff0c\u4fee\u6539\u4e4b\u540e\u4f60\u65e0\u6cd5\u5224\u65ad\u8fd9\u4e00\u5768\u4f1a\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n\n#### \u6cd5\u4e8c\n\n~~\u600e\u4e48\u5927\u5bb6\u90fd\u4f1a\u8fd9\u79cd$dp$\u7684\u65b9\u6cd5\u554a~~\n\n\u5b9a\u4e49$f[i][j]$\u8868\u793a\u4ee5\u70b9$(i,j)$\u4e3a\u53f3\u4e0b\u89d2\u7684\u6700\u5927\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u3002\n\n\u5982\u679c$(i,j)$\u662f\u969c\u788d\u70b9\uff0c\u90a3\u4e48$f[i][j]=0$\uff0c\u5426\u5219\u6709$f[i][j]=min(f[i-1][j-1],min(f[i-1][j],f[i][j-1]))+1$\n\n\u8fd9\u4e2a\u4e5f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u8003\u8651$(i-1,j-1)$\u5f80\u53f3\u4e0b\u79fb\u4e00\u683c\uff0c\u800c$(i-1,j),(i,j-1)$\u7684\u7b54\u6848\u4e5f\u4f1a\u9020\u6210\u9650\u5236\uff0c\u6240\u4ee5\u53d6\u6700\u5c0f\u503c\uff0c\u518d\u52a0\u4e0a\u62d3\u5c55\u51fa\u6765\u7684$1$\n\n\u8fd9\u4e2a\u505a\u6cd5\u4fee\u6539$O(1)$\uff0c\u6bcf\u6b21\u67e5\u8be2$O(n^2)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n^3)$\n\n\u7136\u540e\u4f60\u5c31\u5f97\u5230\u4e86$50pts$\u7684\u597d\u6210\u7ee9\uff08\u5927\u4f17\u5206\n\n#### \u6cd5\u4e09\n\n\u6211\u4eec\u60f3\u8d77\u4e86\u6cd5\u4e00\u90a3\u4e2a\u4e2d\u9053\u5d29\u6b82\u7684\u4f18\u5316\uff0c\u90a3\u4e2a\u4f18\u5316\u4e0d\u53ef\u884c\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u4fee\u6539\u4e4b\u540e\u6700\u5927\u503c\u4f1a\u53d8\u5c0f\uff0c\u800c\u6211\u4eec\u4e0d\u77e5\u9053\u522b\u7684\u5730\u65b9\u6709\u6ca1\u6709\u5176\u5b83\u6700\u5927\u503c\u3002\n\n\u4f46\u5982\u679c\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u628a\u52a0\u969c\u788d\u53d8\u6210\u51cf\u969c\u788d\uff0c\u90a3\u4e48\u6700\u5927\u503c\u5c31\u53ea\u4f1a\u53d8\u5927\uff0c\u800c\u8fd9\u4e2a\u53d8\u5927\u7684\u6700\u5927\u503c\u53ea\u80fd\u6765\u6e90\u4e8e\u4fee\u6539\u7684\u90a3\u4e00\u90e8\u5206\uff08\u51a4\u6709\u5934\u503a\u6709\u4e3b\uff09\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u53ea\u5904\u7406\u4fee\u6539\u7684\u90a3\u4e00\u90e8\u5206\u4e86\u3002\n\n\u5177\u4f53\u600e\u4e48\u6c42\u7b54\u6848\u5462\uff1f\n\n\u5982\u679c\u6709\u66f4\u5927\u7684\u7b54\u6848\u7684\u8bdd\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u5305\u542b\u8fd9\u4e2a\u969c\u788d\u70b9\u7684\uff0c\u4e5f\u5c31\u662f\u8de8\u8fc7\u8fd9\u4e2a\u969c\u788d\u70b9\u6240\u5728\u884c\u3001\u6240\u5728\u5217\u7684\u3002\u6211\u4eec\u4e0d\u59a8\u4ece\u5217\u7684\u89d2\u5ea6\u6765\u8003\u8651\uff0c\u5148\u7c7b\u4f3c\u4e8e\u60ac\u7ebf\u6cd5\u90a3\u6837\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u6700\u591a\u80fd\u591f\u5411\u5de6\u53f3\u5ef6\u4f38\u591a\u8fdc\uff0c\u8fd9\u4e2a\u5728\u4fee\u6539\u65f6\u53ef\u4ee5$O(n)$\u66f4\u65b0\u3002\u67e5\u8be2\u65f6\uff0c\u7531\u4e8e\u4fee\u6539\u70b9\u90a3\u4e00\u5217\u4e00\u5b9a\u5728\u7b54\u6848\u6b63\u65b9\u5f62\u5185\u90e8\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\u8fd9\u4e00\u5217\u5411\u5de6\u5411\u53f3\u5ef6\u4f38\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u961f\u9996\u9650\u5236\u4e86\u6b63\u65b9\u5f62\u7684\u53d1\u5c55\uff0c\u5c31\u5f39\u51fa\u961f\u9996\u3002\u7531\u4e8e\u9700\u8981\u4e00\u4e2a\u5177\u4f53\u7684\u9650\u5236\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528$check$\u7684\u65b9\u5f0f\uff0c\u53bb$check$\u66f4\u5927\u7684\u7b54\u6848\u662f\u5426\u53ef\u884c\u3002\u5e73\u5747\u4e0b\u6765\u67e5\u8be2\u5927\u6982\u662f$O(n)$\u7684\u5427\uff0c\u53ef\u80fd\u5e38\u6570\u4f1a\u6709\u70b9\u5927\uff0c\u603b\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u7136\u540e\u4f60\u5c31\u5f97\u5230\u4e86$100pts$\u7684\u771f\u00b7\u597d\u6210\u7ee9\n\n------\n\n### \u25baCode View Ver.1\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\n#define N 2005\n#define INF 0x3f3f3f3f\n#define LL long long\nint rd()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1; c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\treturn f*x;\n}\nint n,m,T;\nchar s[N][N];\nint a[N][N],ans;\nint calc()\n{\n\tint res=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tint p=j,len=a[i][j];\n\t\t\twhile(p-j+1<=len) \n\t\t\t{\n\t\t\t\tlen=min(len,a[i][++p]),res=max(res,min(p-j+1,len));\n\t\t\t\tif(res==ans) return ans;\n\t\t\t}\n\t\t}\n\treturn ans=res;\n}\nint main()\n{\n\tfreopen(\"parking.in\",\"r\",stdin);\n\tfreopen(\"parking.out\",\"w\",stdout);\n\tn=rd(),m=rd(),T=rd();\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%s\",s[i]+1);\n\tfor(int i=1;i<=m;i++)\n\t\tif(s[1][i]=='.') a[1][i]=1;\n\tfor(int i=2;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(s[i][j]=='.')\n\t\t\t\ta[i][j]=a[i-1][j]+1;\n\twhile(T--)\n\t{\n\t\tint x=rd(),y=rd();\n\t\tfor(int i=x+1;i<=n;i++)\n\t\t{\n\t\t\tif(!a[i][y]) break;\n\t\t\ta[i][y]-=a[x][y];\n\t\t}\n\t\ta[x][y]=0;\n\t\tcalc();\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n\n```\n\n### \u25baCode View Ver.2 \n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\n#define N 2005\n#define INF 0x3f3f3f3f\n#define LL long long\nint rd()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1; c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\treturn f*x;\n}\nint n,m,T;\nchar s[N][N];\nint f[N][N],ans;\nvoid dp()\n{\n\tans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(s[i][j]=='X') f[i][j]=0;\n\t\t\telse f[i][j]=min(f[i-1][j-1],min(f[i-1][j],f[i][j-1]))+1;\n\t\t\tans=max(ans,f[i][j]);\n\t\t}\n}\nint main()\n{\n\tfreopen(\"parking.in\",\"r\",stdin);\n\tfreopen(\"parking.out\",\"w\",stdout);\n\tn=rd(),m=rd(),T=rd();\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%s\",s[i]+1);\n\twhile(T--)\n\t{\n\t\tint x=rd(),y=rd();\n\t\ts[x][y]='X';\n\t\tdp();\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n### \u25baCode View Ver.3\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\n#define N 2005\n#define INF 0x3f3f3f3f\n#define LL long long\nint rd()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1; c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\treturn f*x;\n}\nint n,m,T;\nchar s[N][N];\nint f[N][N],ans,res[N];\nint l[N][N],r[N][N];\npair<int,int> q[N];\nint xx,yy;\nint Q[N],hd,tl,tmp[N];\nvoid dp()\n{\n\tans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(s[i][j]=='X') f[i][j]=0;\n\t\t\telse f[i][j]=min(f[i-1][j-1],min(f[i-1][j],f[i][j-1]))+1;\n\t\t\tans=max(ans,f[i][j]);\n\t\t}\n}\nvoid Init()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(s[i][j]=='X') l[i][j]=0;\n\t\t\telse l[i][j]=l[i][j-1]+1;\n\t\t}\n\t\tfor(int j=m;j>=1;j--)\n\t\t{\n\t\t\tif(s[i][j]=='X') r[i][j]=0;\n\t\t\telse r[i][j]=r[i][j+1]+1;\n\t\t}\n\t}\n}\nbool check(int x)\n{\n\thd=1,tl=0;\n\tfor(int i=1;i<=n;i++)\n\t{//\u7ef4\u62a4\u5de6\u8fb9 \n\t\twhile(hd<=tl&&l[Q[tl]][yy]>=l[i][yy]) tl--;\n\t\t//\u7ef4\u62a4\u5355\u8c03\u589e\u961f\u5217 \u5982\u679c\u5f53\u524d\u53ef\u5230\u4f4d\u7f6e\u6bd4\u961f\u5217\u91cc\u7684\u5927 \u90a3\u4e48\u961f\u5217\u91cc\u7684\u5143\u7d20\u5c31\u4e0d\u4f1a\u6210\u4e3a\u74f6\u9888 \n\t\tQ[++tl]=i;\n\t\twhile(hd<=tl&&Q[hd]<=i-x) hd++;//\u961f\u9996\u6210\u4e3a\u4e86\u9650\u5236\n\t\ttmp[i]=l[Q[hd]][yy];\n\t}\n\thd=1,tl=0;\n\tfor(int i=1;i<=n;i++)\n\t{//\u7ef4\u62a4\u53f3\u8fb9 \n\t\twhile(hd<=tl&&r[Q[tl]][yy]>=r[i][yy]) tl--;\n\t\tQ[++tl]=i;\n\t\twhile(hd<=tl&&Q[hd]<=i-x) hd++;\n\t\ttmp[i]+=r[Q[hd]][yy]-1;\n\t}\n\tfor(int i=x;i<=n;i++)\n\t\tif(tmp[i]>=x) return 1;\n\treturn 0;\n}\nint main()\n{\n\tfreopen(\"parking.in\",\"r\",stdin);\n\tfreopen(\"parking.out\",\"w\",stdout);\n\tn=rd(),m=rd(),T=rd();\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%s\",s[i]+1);\n\tfor(int i=1;i<=T;i++)\n\t{\n\t\tq[i].first=rd(),q[i].second=rd();\n\t\ts[q[i].first][q[i].second]='X';\n\t}\n\tdp();\n\tres[T]=ans;\n\tInit();\n\tfor(int i=T-1;i>=1;i--)\n\t{\n\t\txx=q[i+1].first,yy=q[i+1].second;\n\t\ts[xx][yy]='.';\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(s[xx][j]=='X') l[xx][j]=0;\n\t\t\telse l[xx][j]=l[xx][j-1]+1;\n\t\t}\n\t\tfor(int j=m;j>=1;j--)\n\t\t{\n\t\t\tif(s[xx][j]=='X') r[xx][j]=0;\n\t\t\telse r[xx][j]=r[xx][j+1]+1;\n\t\t}\n\t\twhile(check(ans+1)) ans++;\n\t\tres[i]=ans;\n\t}\n\tfor(int i=1;i<=T;i++)\n\t\tprintf(\"%d\\n\",res[i]);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1606314420,
        "uid": 41165,
        "name": "Starlight_Glimmer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF480E \u3010Parking Lot\u3011"
    },
    {
        "content": "\n\u663e\u7136\uff0c\u5982\u679c\u6bcf\u6b21\u5220\u4e00\u4e2a\u70b9\uff0c\u7b54\u6848\u53ef\u80fd\u4f1a\u51cf\u5c0f\uff0c\u800c\u4e14\u4f60\u8fd8\u4e0d\u77e5\u9053\u5728\u54ea\u91cc\u51cf\u5c0f\u7684...\n\n\u6240\u4ee5\u6211\u4eec\u53cd\u5411\u601d\u8003\uff0c\u5982\u679c\u6bcf\u6b21\u52a0\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u662f\u4e0d\u51cf\u7684\uff0c\u800c\u4e14\u5982\u679c\u7b54\u6848\u53d8\u5927\uff0c\u65b0\u77e9\u9635\u4e00\u5b9a\u5305\u542b\u8be5\u70b9\u3002\n\n$up[i][j]$\u8868\u793a\u4ee5$(i,j)$\u4e3a\u8d77\u70b9\u51fa\u53d1\u5411\u4e0a\u80fd\u5230\u8fbe\u7684 $'.~'$ \u7684\u4e2a\u6570\u3002\uff08\u9047\u5230 $'X~'$ \u505c\u6b62\uff09\n\n$down[i][j]$\u8868\u793a\u4ee5$(i,j)$\u4e3a\u8d77\u70b9\u51fa\u53d1\u5411\u4e0b\u80fd\u5230\u8fbe\u7684 $'.~'$ \u7684\u4e2a\u6570\u3002\uff08\u9047\u5230 $'X~'$ \u505c\u6b62\uff09\n\n$up,down$\u90fd\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u80fd\u7528$dp$\u7b97\u51fa\u5728\u6240\u6709\u70b9\u90fd\u65e0\u6cd5\u9009\u65f6\uff08\u6700\u540e\u72b6\u6001\uff09\u7684\u7b54\u6848\uff0c\u8bb0\u4e3a$Ans$\uff0c\u4e0d\u77e5\u9053\u7684\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\uff1a[P1387 \u6700\u5927\u6b63\u65b9\u5f62](https://www.luogu.org/problem/P1387)\u3002\n\n***\n\n\u8bbe\u5f53\u524d\u52a0\u5165\u7684\u70b9\u4e3a$(x,y)$,\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u66f4\u65b0$up,down$,\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5f53\u524d\u533a\u95f4\u6700\u5c0f\u7684$up+down-1$\uff0c\u5982\u679c$Ans$\u5c0f\u4e8e\u5b83\uff0c\u5c31\u5c06$Ans+1$ , \u540c\u65f6\u5411\u4e24\u65c1\u6269\u5c55\u4e00\u683c\uff08\u8fb9\u957f\u52a01\uff09\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u4e0d\u7528\u62c5\u5fc3\u4e24\u65c1\u9047\u5230\u969c\u788d\u7684\u60c5\u51b5 , \u8fd9\u65f6\u7684$up\uff0cdown$\u90fd\u4e3a$0$,\u65e0\u6cd5\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n\n\u6ce8\u610f\u8fd9\u91cc\u7684\u7ebf\u6bb5\u6811\u6bcf\u6b21\u52a0\u70b9\u90fd\u8981\u91cd\u5efa\uff08$up,down$\u5728\u53d8\uff09\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\n#define ls x << 1\n#define rs x << 1 | 1\n#define INF 0x3f3f3f3f\n\nconst int MAXN = 2000;\nint n , m , k , Minu , Mind , Map[ MAXN + 5 ][ MAXN + 5 ];\nint up[ MAXN + 5 ][ MAXN + 5 ] , down[ MAXN + 5 ][ MAXN + 5 ];\nstruct node{\n\tint x , y , Ans;\n}q[ MAXN + 5 ];\n\nstruct Point{\n\tint l , r , minu , mind;\n};\nstruct Segment_Tree{\n\tPoint Tree[ 4 * MAXN + 5 ];\n\t\n\tvoid Pushup( int x ) {\n\t\tTree[ x ].minu = min( Tree[ ls ].minu , Tree[ rs ].minu );\n\t\tTree[ x ].mind = min( Tree[ ls ].mind , Tree[ rs ].mind );\n\t}\n\tvoid Build( int dex , int x , int l , int r ) {\n\t\tTree[ x ].l = l , Tree[ x ].r = r;\n\t\tif( l == r ) {\n\t\t\tTree[ x ].minu = up[ dex ][ l ];\n\t\t\tTree[ x ].mind = down[ dex ][ l ];\n\t\t\treturn;\n\t\t}\n\t\tint Mid = ( l + r ) / 2;\n\t\tBuild( dex , ls , l , Mid );\n\t\tBuild( dex , rs , Mid + 1 , r );\n\t\tPushup( x );\n\t}\n\tvoid Find( int x , int l , int r ) {\n\t\tif( r < Tree[ x ].l || Tree[ x ].r < l )\n\t\t\treturn;\n\t\tif( l <= Tree[ x ].l && Tree[ x ].r <= r ) {\n\t\t\tMinu = min( Minu , Tree[ x ].minu );\n\t\t\tMind = min( Mind , Tree[ x ].mind );\n\t\t\treturn;\n\t\t}\n\t\tFind( ls , l , r );\n\t\tFind( rs , l , r );\n\t}\n}Tree;\n\nint dp[ MAXN + 5 ][ MAXN + 5 ];\nvoid Dp( ) {\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t\tfor( int j = 1 ; j <= m ; j ++ )\n\t\t\tif( Map[ i ][ j ] ) {\n\t\t\t\tdp[ i ][ j ] = min( dp[ i - 1 ][ j - 1 ] , min( dp[ i ][ j - 1 ] , dp[ i - 1 ][ j ] ) ) + 1;\n\t\t\t\tq[ k ].Ans = max( q[ k ].Ans , dp[ i ][ j ] );\n\t\t\t}\n}\n\nbool check( int x , int row ) {\n\tif( x > n || x > m ) return 0;\n\tfor( int i = max( 1 , row - x + 1 ) ; i <= m - x + 1 ; i ++ ) {\n\t\tMinu = Mind = INF; Tree.Find( 1 , i , i + x - 1 );\n\t\tif( Minu + Mind - 1 >= x ) return 1;\n\t}\n\treturn 0;\n}\n\nchar s;\nint main( ) {\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tfor( int i = 1 ; i <= n ; i ++ ) {\n\t\tgetchar( );\n\t\tfor( int j = 1 ; j <= m ; j ++ ) {\n\t\t\tscanf(\"%c\",&s);\n\t\t\tMap[ i ][ j ] = ( s == '.' );\n\t\t}\n\t}\n\tfor( int i = 1 ; i <= k ; i ++ ) {\n\t\tscanf(\"%d %d\",&q[ i ].x,&q[ i ].y);\n\t\tMap[ q[ i ].x ][ q[ i ].y ] = 0;\n\t\tq[ i ].Ans = 0;\n\t}\n\t\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t\tfor( int j = 1 ; j <= m ; j ++ )\n\t\t\tup[ i ][ j ] = Map[ i ][ j ] ? up[ i - 1 ][ j ] + 1 : 0;\n\tfor( int i = n ; i >= 1 ; i -- )\n\t\tfor( int j = 1 ; j <= m ; j ++ )\n\t\t\tdown[ i ][ j ] = Map[ i ][ j ] ? down[ i + 1 ][ j ] + 1 : 0;\n\tDp( );\n\tint Ans = q[ k ].Ans;\n\tfor( int i = k ; i >= 1 ; i -- ) {\n\t\tint x = q[ i ].x , y = q[ i ].y; q[ i ].Ans = Ans;\n\t\tMap[ x ][ y ] = 1;\n\t\t\n\t\tup[ x ][ y ] = up[ x - 1 ][ y ] + 1;\n\t\tfor( int t = x + 1 ; t <= n && Map[ t ][ y ] ; t ++ )\n\t\t\tup[ t ][ y ] += up[ x ][ y ];\n\t\tdown[ x ][ y ] = down[ x + 1 ][ y ] + 1;\n\t\tfor( int t = x - 1 ; t >= 1 && Map[ t ][ y ] ; t -- )\n\t\t\tdown[ t ][ y ] += down[ x ][ y ];\n\t\tTree.Build( x , 1 , 1 , m );\n\t\twhile( check( Ans + 1 , y ) ) Ans ++;\n\t}\n\tfor( int i = 1 ; i <= k ; i ++ )\n\t\tprintf(\"%d\\n\",q[ i ].Ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1570599659,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF480E \u3010Parking Lot\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\u5176\u5b9e\u6ca1\u505a\u51fa\u6765\u8fd9\u9053\u9898\u8fd8\u662f\u6709\u70b9\u96be\u8fc7\u7684\uff0c\u8003\u573a\u4e0a\u7684\u4e00\u9053\u9898\uff0c\n\n\u5df2\u7ecf\u60f3\u5230\u4e86\u79bb\u7ebf\u5012\u5e8f\u5904\u7406\uff0c\u5e76\u4e14\u53d1\u73b0\u4e86\u5982\u679c\u66f4\u65b0\u4e86\u7b54\u6848\u90a3\u4e48\u8fd9\u4e2a\u503c\u5c31\u8981\u88ab\u5305\u542b\u5728\u65b0\u6b63\u65b9\u5f62\u5185\u8fd9\u4e2a\u6027\u8d28\uff0c    \n\n\u63a5\u7740\u5c31\u53d1\u73b0\u5bfb\u627e\u65b0\u6b63\u65b9\u5f62\u53ca\u5176\u56f0\u96be\uff0c\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e9b\u4fe1\u606f\uff0c\u4e5f\u5168\u88ab\u81ea\u5df1 $Hack$ \u6216\u8005\u8bf4\u592a\u96be\u5b9e\u73b0\u5c31\u653e\u5f03\u4e86\uff0c    \n\n\u6700\u540e\u5f88\u9057\u61be\u5730\u6253\u4e86\u4e2a\u66b4\u529b\u4e0a\u53bb\u751a\u81f3\u8fde $O(n^2k)$ \u90fd\u4e0d\u662f\u3002  \n\n# \u6b65\u5165\u6b63\u9898    \n\u5176\u5b9e\u5982\u679c\u505a\u8fc7[\u6700\u5927\u6b63\u65b9\u5f62](https://www.luogu.com.cn/problem/P1387)\u5e76\u4e14\u80fd\u5b8c\u5168\u7406\u89e3\u5176\u539f\u7406\u7684\u8bdd\uff0c\u8fd9\u9053\u9898\u5792\u4e2a $2h$ \u600e\u4e48\u90fd\u505a\u5f97\u51fa\u6765\uff0c\u53ef\u60dc\u7684\u662f\u6211\u4e0d\u4ec5\u5fd8\u4e86\u8fd9\u9053\u9898\u5e76\u4e14\u90a3\u65f6\u505a\u9898\u4e5f\u662f\u6ca1\u5f04\u6e05\u695a\u539f\u7406\uff0c\u8fd9\u90fd\u662f\u8fc7\u53bb\u77e5\u8bc6\u638c\u63e1\u4e0d\u7262\u7684\u540e\u679c\u554a\u3002    \n\n\u5148\u8bb2\u4e00\u4e0b\u9ec4\u9898\u6c34\u5e73\u7684 $O(n^2k)$ \u66b4\u529b\u5427\uff0c\u76f4\u63a5\u6bcf\u6b21\u52a0\u70b9\u7684\u65f6\u5019\u8dd1\u4e2a\u6700\u5927\u6b63\u65b9\u5f62\u5c31\u884c\u4e86\u3002    \n\n```cpp\nvoid DP()\n{\n\tfor(int i = 1 ; i <= n ; i ++)\n\t\tfor(int j = 1 ; j <= m ; j ++)\n\t\t\tif(mp[i][j])\n\t\t\t{\n\t\t\t\tdp[i][j] = min(dp[i - 1][j - 1] , min(dp[i - 1][j] , dp[i][j - 1])) + 1;\n\t\t\t\t//Print[k] = max(Print[k] , dp[i][j]);\n\t\t\t}\n}\n```\n\n\u8fd9\u91cc\u7c97\u7565\u8bc1\u660e\u4e00\u4e0b\u8fd9\u4e2a $DP$ \u5f0f\uff0c\u5982\u679c\u6b64\u65f6\u6211\u4eec\u679a\u4e3e\u5230\u4e86 $dp_{i,j}$ \u7684\u8bdd\uff0c\u6211\u4eec\u8003\u8651 $dp_{i - 1 , j - 1}$ \u7684\u4fe1\u606f\uff0c\u53d1\u73b0\u5c31\u662f\u591a\u4e86\u4e00\u884c\u4e00\u5217\u800c\u5df2\uff0c\u800c\u6211\u4eec\u53ea\u8981\u77e5\u9053\u6b64\u65f6\u5411\u4e0a\u548c\u5411\u5de6\u6700\u591a\u80fd\u5f80\u5916\u6269\u5c55\u591a\u5c11\u5c31\u884c\u4e86\uff0c\u8fd9\u65f6\u518d\u548c\u6211\u4eec\u7684 $dp_{i - 1 , j - 1}$ \u7684\u5927\u5c0f\u53d6\u4e2a ```min``` \u5c31\u662f\u6211\u4eec\u5f53\u524d\u6700\u5927\u80fd\u6269\u5c55\u5230\u54ea\u91cc\u7684\u503c\u5373 $dp_{i,j}$ \u503c\uff0c\u800c\u4e14\u4f60\u4f1a\u53d1\u73b0 $dp_{i - 1 , j - 1}$ \u4e5f\u5236\u7ea6\u7740\u5f53\u524d\u884c\u5217\u7684\u6700\u8fdc\u6269\u5c55\uff0c\u7531\u4e8e\u672c\u6765\u5c31\u662f\u53d6 ```min``` \u503c\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u628a $dp_{i - 1, j}$ \u548c $dp_{i , j - 1}$ \u503c\u62ff\u6765\u7528\u5c31\u597d\u4e86\uff0c\u66f4\u8be6\u7ec6\u7684\u8bc1\u660e\u5c31\u53c2\u8003[\u6700\u5927\u6b63\u65b9\u5f62](https://www.luogu.com.cn/problem/P1387)\u5427\u3002    \n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u4f18\u5316\u4e00\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\u76f4\u63a5\u6765\u7684\u8bdd\u672a\u514d\u592a\u96be\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5012\u5e8f\u5904\u7406\uff0c\u5e76\u4e14\u5f97\u5230\u4e86\u5982\u524d\u8a00\u6240\u8ff0\u7684\u6027\u8d28\u3002     \n\n\u6211\u4eec\u6b64\u65f6\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u80fd\u901a\u8fc7\u679a\u4e3e\u5f53\u524d\u7684\u884c\u533a\u95f4\u7136\u540e\u5728 $O(m)$ \u4ee5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fdb\u884c\u533a\u95f4\u67e5\u8be2\u5224\u65ad\u533a\u95f4\u67e5\u8be2\u662f\u5426\u5408\u6cd5\uff0c\u90a3\u4e48 $O(nqlogm)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u7684\u3002     \n\n\u7136\u540e\u5c31\u5f97\u60f3\u5230\u8fd9\u9053\u9898\u4e00\u4e2a\u6bd4\u8f83\u5173\u952e\u7684\u4e1c\u897f\uff1a   \n- $up[i][j]$ \u7ef4\u62a4\u70b9 $(i , j)$ \u4ee5\u4e0a\u80fd\u6269\u6563\u7684\u6700\u8fdc\u8ddd\u79bb\u3002   \n- $down[i][j]$ \u7ef4\u62a4\u70b9 $(i , j)$ \u4ee5\u4e0b\u80fd\u6269\u6563\u7684\u6700\u8fdc\u8ddd\u79bb\u3002    \n \n\u5f88\u663e\u7136\u7684\u662f\u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7 $O(n ^ 2)$ \u9884\u5904\u7406\u51fa\u8fd9\u4e24\u7ec4\u4fe1\u606f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u6bcf\u6b21\u52a0\u70b9\u65f6 $O(n)$ \u66b4\u529b\u4fee\u6539\u3002    \n\n\u90a3\u4e48\u6211\u4eec\u5c82\u4e0d\u662f\u53ea\u8981\u77e5\u9053\u5f53\u524d\u533a\u95f4\u91cc\u6240\u6709 $up$ \u7684\u6700\u5c0f\u503c\u548c $down$ \u7684\u6700\u5c0f\u503c\u5c31\u77e5\u9053\u5f53\u524d\u8fd9\u4e2a\u533a\u95f4\u53ef\u4ee5\u6269\u51fa\u6765\u7684\u6700\u5927\u503c\u4e86\u554a\uff0c\u8fd9\u73a9\u610f\u513f\u663e\u7136\u7ebf\u6bb5\u6811\u554a\uff0c\u7531\u4e8e\u7b54\u6848\u5355\u8c03\u9012\u589e\u6211\u4eec\u6bcf\u6b21\u5c31\u770b\u524d\u4e00\u4e2a\u7b54\u6848\u5728\u5f53\u524d\u662f\u5426\u80fd\u589e\u5927\u5c31\u597d\u4e86\u554a\u3002    \n\n\u5230\u6b64\u6574\u9053\u9898\u7684\u5173\u952e\u601d\u8def\u5c31\u5b8c\u4e86\uff0c\u5176\u5b9e\u5728\u6211\u770b\u6765\u6700\u5173\u952e\u7684\u5c31\u662f\u8981\u60f3\u5230 $up$ \u4e0e $down$ \uff0c \u6b38\u601d\u8003\u529b\u8fd8\u662f\u6b20\u4f73\u2026\u2026    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int Len = 2005,Inf = 1e9;\nint n,m,k,qx[Len],qy[Len],Print[Len],dp[Len][Len],minu,mind,mp[Len][Len],up[Len][Len],down[Len][Len],ansu[Len << 2],ansd[Len << 2];\nchar s[Len];\nint ls(int x){return x << 1;}\nint rs(int x){return x << 1 | 1;}\nvoid push_up(int x){ansu[x] = min(ansu[ls(x)] , ansu[rs(x)]) , ansd[x] = min(ansd[ls(x)] , ansd[rs(x)]);}\nvoid build(int p,int l,int r,int h)\n{\n\tif(l == r)\n\t{\n\t\tansu[p] = up[h][l];\n\t\tansd[p] = down[h][l];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid , h);\n\tbuild(rs(p) , mid + 1 , r , h);\n\tpush_up(p);\n}\nvoid Fmin(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r)\n\t{\n\t\tminu = min(minu , ansu[p]);\n\t\tmind = min(mind , ansd[p]);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) Fmin(ls(p) , l , mid , nl , nr);\n\tif(nr > mid) Fmin(rs(p) , mid + 1 , r , nl , nr);\n}\nvoid DP()\n{\n\tfor(int i = 1 ; i <= n ; i ++)\n\t\tfor(int j = 1 ; j <= m ; j ++)\n\t\t\tif(mp[i][j])\n\t\t\t{\n\t\t\t\tdp[i][j] = min(dp[i - 1][j - 1] , min(dp[i - 1][j] , dp[i][j - 1])) + 1;\n\t\t\t\tPrint[k] = max(Print[k] , dp[i][j]);\n\t\t\t}\n}\nbool check(int Sec,int nowy)\n{\n\tif(Sec > n || Sec > m) return 0;\n\tfor(int i = max(1 , nowy - Sec + 1) ; i <= m - Sec + 1 ; i ++)\n\t{\n\t\tminu = mind = Inf;Fmin(1 , 1 , m , i , i + Sec - 1);\n\t\tif(minu + mind - 1 >= Sec) return 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tscanf(\"%s\",s + 1);\n\t\tfor(int j = 1 ; j <= m ; j ++) mp[i][j] = (s[j] == '.');\n\t}\n\tfor(int i = 1 ; i <= k ; i ++)\n\t{\n\t\tscanf(\"%d %d\",&qx[i],&qy[i]);\n\t\tmp[qx[i]][qy[i]] = 0;\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t\tfor(int j = 1 ; j <= m ; j ++)\n\t\t{\n\t\t\tif(mp[i][j]) up[i][j] = up[i - 1][j] + 1;\n\t\t\telse up[i][j] = 0;\n\t\t}\n\tfor(int i = n ; i >= 1 ; i --)\n\t\tfor(int j = 1 ; j <= m ; j ++)\n\t\t{\n\t\t\tif(mp[i][j]) down[i][j] = down[i + 1][j] + 1;\n\t\t\telse down[i][j] = 0;\n\t\t}\n\tDP();\n\tint res = Print[k];\n\tfor(int i = k ; i >= 1 ; i --)\n\t{\n\t\tmp[qx[i]][qy[i]] = 1 , Print[i] = res;\n\t\tup[qx[i]][qy[i]] = up[qx[i] - 1][qy[i]] + 1;\n\t\tfor(int j = qx[i] + 1 ; j <= n ; j ++) \n\t\t{\n\t\t\tif(!mp[j][qy[i]]) break;\n\t\t\tup[j][qy[i]] += up[qx[i]][qy[i]];\n\t\t}\n\t\tdown[qx[i]][qy[i]] = down[qx[i] + 1][qy[i]] + 1;\n\t\tfor(int j = qx[i] - 1 ; j >= 1 ; j --)\n\t\t{\n\t\t\tif(!mp[j][qy[i]]) break;\n\t\t\tdown[j][qy[i]] += down[qx[i]][qy[i]];\n\t\t}\n\t\tbuild(1 , 1 , m , qx[i]);\n\t\twhile(check(res + 1 , qy[i])) res ++;\n\t}\n\tfor(int i = 1 ; i <= k ; i ++) printf(\"%d\\n\",Print[i]);\n\treturn 0;\n}\n```",
        "postTime": 1606299011,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF480E \u3010Parking Lot\u3011"
    },
    {
        "content": "- \u9996\u5148\uff0c\u8003\u8651\u66b4\u529b\uff0c\u5982\u679c\u5bf9\u6bcf\u4e00\u4e2a\u52a0\u70b9\u8fdb\u884c\u4e00\u904d\u626b\u63cf\uff0c\u90a3\u4e48\uff0c\u53ef\u4ee5\u8dd1\u5230\u5929\u8352\u5730\u8001\u4e86\u3002\u3002\u3002\n- \u5176\u6b21\uff0c\u5982\u679c\u50cf\u4ee5\u524d\u7684dp\u4e00\u6837\u8dd1\u5462\uff1f\u56e0\u4e3a\u662f\u52a8\u6001\u7684\uff0c\u6240\u4ee5\u4e0d\u884c\u3002\u3002\u3002\n- \u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u8fd9\u4e2a\u9762\u79ef\u4e00\u5b9a\u662f\u5355\u8c03\u4e0d\u589e\u7684\uff0c\u4e8e\u662f\uff0c\u5c31\u53ef\u4ee5\u5012\u5e8f\u6765\uff0c\u53d8\u6210\u52a0\u70b9\uff0c\u79bb\u7ebf\u505a\u3002\n- \u90a3\u4e48\uff0c\u6709\u4e86\u52a0\u70b9\u5c31\u53ef\u4ee5\u8dd1\u66b4\u529b\u4e86\u5417\uff1f\u5f88\u663e\u7136\u4e0d\u884c\u3002\u3002\u3002\n- \u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n# solution\uff1a\n\n\uff08\u4ee5\u4e0b\u521d\u59cb\u601d\u8def\u6765\u81ea\u8001\u5e08\uff09\n\n\u8fd9\u4e2a\u6b63\u65b9\u5f62\u53ef\u80fd\u51fa\u73b0\u5728\u54ea\u91cc\uff1f\n1. \u70b9\u4e0a\u4e0b\u5de6\u53f3\n2. \u70b9\u5de6\u4e0a\n3. \u70b9\u5de6\u4e0b\n1. \u70b9\u53f3\u4e0a\n1. \u70b9\u53f3\u4e0b\n\n\u4e00\u4e2a\u6b63\u65b9\u5f62\u7531\u957f\u548c\u5bbd\u6784\u6210\uff0c\u8981\u627e\u6700\u5927\u8fb9\u957f\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u7ef4\u62a4\u4e24\u4e2a\u4e1c\u897f\uff1a\u957f\u548c\u5bbd\u3002\n\n\u5206\u522b\u8003\u8651\u957f\u5bbd\u5982\u4f55\u7ef4\u62a4\uff08\u597d\u5427\u5dee\u4e0d\u591a\u90fd\u662f\u8fb9\u957f\uff09\n\n\u5bbd\uff1a\u5b83\u53ef\u80fd\u7ecf\u8fc7\u4e00\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u70b9\u5728\u5bbd\u8fd9\u6761\u8fb9\u4e0a\u3002\n\n\u4e8e\u662f\u4e0d\u592a\u5bb9\u6613\u60f3\u5230\uff1a\u7ef4\u62a4\u4e24\u4e2adp\u6570\u7ec4\uff0c\u5b58\u6bcf\u4e2a\u70b9\u5411\u5de6\u53f3\u80fd\u62d3\u5c55\u7684\u957f\u5ea6\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u4f9d\u65e7\u66b4\u529b\u66f4\u65b0\uff0c\u8fd8\u662f\u4f1a\u70b8\u6210\u6e23\u6ed3\u3002\u3002\u3002\n\n\u77aa\u5927\u773c\u770b\u9898\uff0c\u5f53\u4e00\u4e2a\u70b9\u66f4\u65b0\u65f6\uff0c\u53ea\u6709\u5b83\u6240\u5728\u7684\u4e00\u884c\u4f1a\u53d8\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5O\uff08n\uff09\u66f4\u65b0dp\u6570\u7ec4\u4e86\u3002\n\n\u4e8e\u662f\uff0c\u53ea\u8981\u5728\u6bcf\u4e2a\u70b9\u52a0\u4e0a\u540e\u66f4\u65b0dp\u6570\u7ec4\uff0c\u7136\u540e\u67e5\u51fa\u6700\u5927\u6b63\u65b9\u5f62\uff0c\u5c31\u5b8c\u4e8b\u4e86\n\n\u4e0b\u9762\u8003\u8651\u5217\uff1a\n\n\u80fd\u4e0d\u80fd\u50cf\u521a\u521a\u90a3\u6837\u7ee7\u7eeddp\u561e\uff1f\uff08\u50cfcdq\u90a3\u6837dp\u5957dp\u5462\uff1f\uff1f\uff1f\uff09\u5982\u679c\u8fd9\u6837\u505a\uff0c\u90a3\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u9519\u4f4d\u7684\u6b63\u65b9\u5f62\u3002\u3002\u3002\u5f88\u9ebb\u70e6.....\n\n\u51b5\u4e14\u6211\u4eec\u8981\u53bb\u6700\u5927\u7684\u4e0d\u662f\u5417\uff1f\u8fd9\u597d\u50cf\u6709\u4ec0\u4e48\u63d0\u793a.....\n\n\u60f3\u60f3\u6211\u5b66\u8fc7\u7684\u7ef4\u62a4\u6700\u503c\u7684\u6570\u636e\u7ed3\u6784\uff08qsort rmq \u7ebf\u6bb5\u6811 \u5355\u8c03\u961f\u5217 \u4e3b\u5e2d\u6811 \u5e73\u8861\u6811 \u6811\u5957\u6811\uff09\n\n\u518d\u7ed3\u5408\u4e00\u4e0b\u95ee\u9898\u5b9e\u9645\uff1a\u627e\u957f\u5ea6\uff0c\u4e0d\u592a\u5bb9\u6613\u60f3\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7b54\u6848\uff0c\u8fdb\u884c\u4e00\u6b21check\u3002\u8fd9\u4e2acheck\uff0c\u6709\u70b9\u50cf\u4e8c\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u884c\u7b54\u6848\u8fdb\u884c\u5224\u65ad\u7136\u540e\u66f4\u65b0\u6700\u4f18\u89e3\u3002\u800c\u8fd9\u4e2a\u53ef\u884c\u7b54\u6848\uff0c\u5c31\u662f\u770b\u662f\u5426\u80fd\u627e\u5230\u66f4\u5927\u7684\u6b63\u65b9\u5f62\u3002\n\n\u5bf9\u6b64\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u662f\u5426\u80fd\u627e\u5230\u6bd4\u5f53\u524d\u66f4\u5927\u7684\u8fb9\u957f\u5c31\u884c\u4e86\u3002\u56e0\u4e3a\u5b83\u662f\u6b63\u65b9\u5f62\uff0c\u6240\u4ee5\u957f\u5bbd\u76f8\u7b49\uff0c\u8fd9\u91cc\u5217\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b9a\u957f\u533a\u95f4\uff0c\u627e\u6700\u5927\u7684\u4e00\u4e2a\u4e4b\u524d\u5904\u7406\u51fa\u7684dp\u6570\u7ec4\u91cc\u662f\u5426\u6709\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u503c\u3002\n\n\u8fd9\u5c31\u5f88\u660e\u6717\u4e86\uff0c\u7ebf\u6bb5\u6811\uff0c\u5355\u8c03\u961f\u5217\u3002\n\n\u4e24\u8005\u5dee\u8ddd\u5728\u54ea\u91cc\u5462\uff1f\u7ebf\u6bb5\u6811O\uff08nlogn\uff09\u5355\u8c03\u961f\u5217O\uff08n\uff09\uff1b\n\n\u6211\u7528\u4e86\u5355\u8c03\u961f\u5217\u3002\n\n\u8fd9\u4efd\u4ee3\u7801\u7ed9\u6211\u7684\u611f\u89c9\u5c31\u662f\uff1a\u4ee3\u7801\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u5316\u7b80\uff0c\u903b\u8f91\u8fd0\u7b97\u7b26\u53ef\u4ee5\u6709\u6548\u589e\u52a0\u6548\u7387\u548c\u589e\u52a0\u7f8e\u89c2\u5ea6\n\n\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2050;\nchar s[maxn];\nint n,m,k;\nint a[maxn][maxn];\nstruct node\n{\n    int x,y,res;\n}ans[maxn];\nint f[maxn][maxn];\nint l[maxn][maxn];\nint r[maxn][maxn];\n\nvoid init()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",s+1);\n        for(int j=1;j<=m;j++)\n        {\n            a[i][j]=(s[j]=='.');\n        }\n    }\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d%d\",&ans[i].x,&ans[i].y);\n        a[ans[i].x][ans[i].y]=0;\n    }\n}\n\nvoid dp()\n{\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=m;j>=1;j--)\n        {\n            if(!a[i][j])\n            continue;\n            if(i==1||j==m)\n            {\n                f[i][j]=1;\n                ans[k].res=max(ans[k].res,1);\n                continue;\n            }\n            f[i][j]=min(f[i-1][j],f[i][j+1]);\n            if(a[i-f[i][j]][j+f[i][j]])f[i][j]++;\n            ans[k].res=max(ans[k].res,f[i][j]);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            l[i][j]=a[i][j]*(l[i][j-1]+1);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=m;j>=1;j--)\n        {\n            r[i][j]=a[i][j]*(r[i][j+1]+1);\n        }\n    }\n}\n\nint tmp[maxn];\nint q[maxn];\n\nbool check(int x,int y)\n{\n    int head=1,tail=0;\n    memset(tmp,0,sizeof(tmp));\n    for(int i=1;i<=n;i++)\n    {\n        while(head<=tail&&l[q[tail]][y]>=l[i][y])\n        tail--;\n        q[++tail]=i;\n        while(q[head]<=i-x)\n        head++;\n        tmp[i]+=l[q[head]][y];\n    }\n    head=1;tail=0;\n    for(int i=1;i<=n;i++)\n    {\n        while(head<=tail&&r[q[tail]][y]>=r[i][y])\n        tail--;\n        q[++tail]=i;\n        while(q[head]<=i-x)\n        head++;\n        tmp[i]+=r[q[head]][y]-1;\n    }\n    for(int i=x;i<=n;i++)\n    {\n        if(tmp[i]>=x)\n        return 1;\n    }\n    return 0;\n}\n\nvoid solve()\n{\n    int tem=ans[k].res;\n    for(int i=k;i>=2;i--)\n    {\n        ans[i].res=tem;\n        int x=ans[i].x;\n        int y=ans[i].y;\n        a[x][y]=1;\n        for(int j=1;j<=m;j++)\n        {\n            l[x][j]=a[x][j]*(l[x][j-1]+1);\n        }\n        for(int j=m;j>=1;j--)\n        {\n            r[x][j]=a[x][j]*(r[x][j+1]+1);\n        }\n        while(check(tem+1,y))\n        tem++;\n    }\n    ans[1].res=tem;\n    for(int i=1;i<=k;i++)\n    {\n        printf(\"%d\\n\",ans[i].res);\n    }\n}\n\nint main()\n{\n    init();\n    dp();\n    solve();\n    return 0;\n}\n```\n\uff08\u840c\u65b0\u6c42\u8fc7\uff09",
        "postTime": 1570115942,
        "uid": 39150,
        "name": "\u859b\u5b9a\u8c14\u7684\u9c7c",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF480E \u3010Parking Lot\u3011"
    }
]