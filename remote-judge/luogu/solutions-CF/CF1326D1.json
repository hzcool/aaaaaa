[
    {
        "content": "\u7b54\u6848\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\n\n1. \u6ee1\u8db3 $\\forall i \\in [1,k] s_i =s_{i-k+1}$ \u7684\u6700\u5927\u7684 $k$ \u5bf9\u5e94\u7684\u957f\u5ea6\u4e3a $k$ \u7684\u524d\u7f00\u548c\u540e\u7f00\uff1b\n2. \u5220\u9664 1 \u540e\u5f62\u6210\u7684\u65b0\u4e32\u7684\u6700\u957f\u56de\u6587\u524d/\u540e\u7f00\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u626b\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u90e8\u5206\uff0c\u901a\u8fc7\u679a\u4e3e\u4e2d\u95f4\u70b9\u5411\u4e24\u8fb9\u6269\u5c55\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u53ef\u4ee5\u901a\u8fc7 D1\u3002\n\n\u5f53\u7136\u53ef\u4ee5\u901a\u8fc7 Manacher \u6765\u4f18\u5316\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u4ece\u800c\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 $O(n)$\uff0c\u53ef\u4ee5\u901a\u8fc7 D2\u3002\n\n\u4e0b\u9762\u662f $O(n)$ \u7684\u4ee3\u7801\uff1a\n\n```cpp\n// Problem : D2. Prefix-Suffix Palindrome (Hard version)\n// Contest : Codeforces Global Round 7\n// URL : https://codeforces.com/contest/1326/problem/D2\n// Author : StudyingFather\n// Site : https://studyingfather.com\n// Memory Limit : 256 MB\n// Time Limit : 2000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\n#include <cstring>\n#include <iostream>\nusing namespace std;\nchar s[1000005],t[2000005];\nint f[2000005];\nvoid init()\n{\n t[0]=t[1]='#';\n int len=strlen(s);\n for(int i=0;i<len;i++)\n {\n  t[2*i+2]=s[i];\n  t[2*i+3]='#';\n }\n t[2*len+2]=0;\n}\nint main()\n{\n int T;\n cin>>T;\n while(T--)\n {\n  cin>>s;\n  init();\n  int len=strlen(t+1),l=1,r=len;\n  while(l<=r)\n  {\n   if(t[l]==t[r])l++,r--;\n   else break;\n  }\n  int ans=0,nl=l,nr=l,maxr=l,mid=l;\n  for(int i=l;i<=r;i++)\n  {\n   if(i<maxr)\n    f[i]=min(f[mid]+(mid-i),f[mid*2-i]);\n   else\n    f[i]=1;\n   while(t[i+f[i]]==t[i-f[i]]&&i+f[i]<=r&&i-f[i]>=l)\n    f[i]++;\n   if(f[i]+i>maxr)\n   {\n    maxr=f[i]+i;\n    mid=i;\n   }\n   if((i-f[i]<l||i+f[i]>r)&&f[i]>ans)\n   {\n    nl=i-f[i]+1;\n    nr=i+f[i]-1;\n    ans=f[i];\n   }\n  }\n  if(l>r)\n  {\n   cout<<s<<endl;\n   continue;\n  }\n  for(int i=1;i<l;i++)\n   if(t[i]!='#')cout<<t[i];\n  for(int i=nl;i<=nr;i++)\n   if(t[i]!='#')cout<<t[i];\n  for(int i=r+1;i<=len;i++)\n   if(t[i]!='#')cout<<t[i];\n  cout<<endl;\n }\n return 0;\n}",
        "postTime": 1584762171,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1326D1 \u3010Prefix-Suffix Palindrome (Easy version)\u3011"
    },
    {
        "content": "\u663e\u7136\u53ef\u4ee5\u5148\u8d2a\u5fc3\u5730\u53d6\u4e92\u4e3a\u53cd\u4e32\u7684\u6700\u957f\u524d\u540e\u7f00\u3002\n\n\u53d6\u5b8c\u6254\u6389\u4e4b\u540e\uff0c\u76f8\u5f53\u4e8e\u8981\u5728\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u6216\u540e\u7f00\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u56de\u6587\u4e32\u3002\n\nmanacher \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\u3002\n\n```cpp\nconst int N = 1e6 + 7;\nint n, m;\nchar s[N], t[N];\n\ninline int work(char *s, int n) {\n\tstring ss = \"$#\";\n\tvi p;\n\tfor (int i = 1; i <= n; i++) ss += s[i], ss += \"#\";\n\tp.pb(1);\n\tint mx = 0, id = 0, ans = 1;\n\tfor (int i = 1; i < (int)ss.length(); i++) {\n\t\tp.pb(mx > i ? min(p[2*id-i], mx - i) : 1);\n\t\twhile (i + p[i] < (int)ss.length() && ss[i+p[i]] == ss[i-p[i]]) ++p[i];\n\t\tif (i == p[i]) ans = max(ans, p[i]);\n\t\tif (i + p[i] > mx) mx = i + p[i], id = i;\n\t}\n\treturn ans - 1;\n}\n\ninline void solve() {\n\trds(s, n);\n\tint p = 1;\n\twhile (p <= n && s[p] == s[n+1-p]) ++p;\n\tif (p == n + 1) {\n\t\tfor (int i = 1; i <= n; i++) putchar(s[i]);\n\t\treturn puts(\"\"), void();\n\t}\n\tm = 0;\n\tfor (int i = p; i <= n + 1 - p; i++) t[++m] = s[i];\n\tint l = work(t, m);\n\treverse(t + 1, t + m + 1);\n\tint r = work(t, m);\n\treverse(t + 1, t + m + 1);\n\tif (l < r) reverse(t + 1, t + m + 1), swap(l, r);\n\tfor (int i = 1; i < p; i++) putchar(s[i]);\n\tfor (int i = 1; i <= l; i++) putchar(t[i]);\n\tfor (int i = p - 1; i; i--) putchar(s[i]);\n\tputs(\"\");\n}\n\nint main() {\n\tint T;\n\trd(T);\n\twhile (T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1584736862,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1326D1 \u3010Prefix-Suffix Palindrome (Easy version)\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\u770b\u5230\u672c\u9898\u7684\u7b2c\u4e00\u60f3\u6cd5\u662f\u679a\u4e3e\u524d\u540e\u7f00\u5339\u914d\u7684\u957f\u5ea6 $l$\uff0c\u7136\u540e\u8981\u6c42\u4ece $l+1$ \u5f00\u59cb\u7684\u6700\u957f\u56de\u6587\u4e32\u6216\u8005\u4ee5 $n-l$ \u7ed3\u5c3e\u7684\u6700\u957f\u56de\u6587\u4e32\u3002\n\n\u521a\u6253\u7b97\u53bb\u9694\u58c1 [\u6700\u957f\u53cc\u56de\u6587\u4e32](https://www.luogu.com.cn/problem/P4555) \u590d\u5236\u4e00\u4e2a\u4ee3\u7801\uff0c\u610f\u8bc6\u5230\u4e86\u4e0d\u5bf9...\n\n\u5982\u679c\u6c42\u51fa\u6765\u7684\u56de\u6587\u4e32\u4e0e\u524d\u540e\u7f00\u6709\u91cd\u53e0\u600e\u4e48\u529e\uff1f\n\n\u8003\u8651\u4e0a\u9762\u8fd9\u4e2a\u60f3\u6cd5\u7528\u66b4\u529b\u600e\u4e48\u5b9e\u73b0\u3002\u5728\u6211\u4eec\u5c06\u539f\u4e32\u4e2d\u95f4\u63d2\u5165 `#` \u540e\uff0c\u7528 manacher \u7b97\u6cd5\u4ee5 $i$ \u4e3a\u56de\u6587\u4e2d\u5fc3\u7684\u56de\u6587\u534a\u5f84 $d_i$\u3002\n\n\u7136\u540e\u6211\u4eec\u679a\u4e3e\u524d\u540e\u7f00\u5339\u914d\u957f\u5ea6 $l$\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u5bf9\u4e8e\u6240\u6709 $l+1\\le i\\le \\frac{|s|+1}{2}$ \u4e14 $i-d_i+1\\le l+1$\uff0c\u6c42\u51fa $i$ \u7684\u6700\u5927\u503c\uff1b\n- \u5bf9\u4e8e\u6240\u6709 $\\frac{|s|+1}{2}\\le i\\le n-l$ \u4e14 $i+d_i-1\\ge n-l$\uff0c\u6c42\u51fa $i$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u76f4\u63a5\u6309\u4e0a\u9762\u7684\u66b4\u529b\u5b9e\u73b0\uff0c\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u53ef\u4ee5\u901a\u8fc7 Easy version\u3002\n\n---\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$l$ \u8d8a\u5927\uff0c\u8d8a\u5bb9\u6613\u6ee1\u8db3\u9650\u5236\uff0c\u8d8a\u5bb9\u6613\u4f7f\u5f97 $i$ \u53d6\u5230\u6781\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6c42\u51fa\u6700\u5927\u7684 $l$ \u4ee5\u540e\u7528\u4e0a\u9762\u7684\u66b4\u529b\u5b9e\u73b0\u5373\u53ef\u3002\n\n~~\u5982\u679c\u4f60\u4e0d\u6015\u88ab hack \u7684\u8bdd~~ manacher \u4e5f\u53ef\u4ee5\u7528\u54c8\u5e0c\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n```cpp\nconst int N = 2000005; // \u6ce8\u610f\u6570\u7ec4\u5f00\u5927\u4e00\u500d\nint n, d[N];\nchar s[N];\nvoid manacher(int *d, char *s, int n){\n\tfor (register int i = 1, m = 0, r = 0; i <= n; ++i){\n\t\td[i] = i > r ? 0 : std::min(r - i + 1, d[m - (i - m)]);\n\t\twhile (i - d[i] > 0 && i + d[i] <= n && s[i - d[i]] == s[i + d[i]]) ++d[i];\n\t\tif (i + d[i] - 1 > r) m = i, r = i + d[i] - 1;\n\t}\n}\nvoid solve(){\n\tn = reads(s + 1);\n\tfor (register int i = n; i; --i) s[i << 1] = s[i], s[i << 1 | 1] = '#';\n\ts[1] = '#', n = n * 2 + 1;\n\tmanacher(d, s, n);\n\t// for (register int i = 1; i <= n; ++i) debug(\"%d \", d[i]); debug(\"\\n\");\n\tint len = 0;\n\tfor (register int i = 1; i <= n / 2; ++i)\n\t\tif (s[i] != s[n - i + 1]) break;\n\t\telse ++len;\n\t// debug(\"%d\\n\", len);\n\tint d1 = 0, d2 = 0;\n\tfor (register int i = len + 1; i <= (n + 1) / 2; ++i)\n\t\tif (i - d[i] + 1 <= len + 1) d1 = std::max(d1, (i - len) * 2 - 1);\n\tfor (register int i = (n + 1) / 2; i <= n - len; ++i)\n\t\tif (i + d[i] - 1 >= n - len) d2 = std::max(d2, (n - len - i + 1) * 2 - 1);\n\tif (d1 > d2){\n\t\tfor (register int i = 1; i <= len + d1; ++i)\n\t\t\tif (s[i] != '#') putchar(s[i]);\n\t\tfor (register int i = n - len + 1; i <= n; ++i)\n\t\t\tif (s[i] != '#') putchar(s[i]);\n\t}\n\telse{\n\t\tfor (register int i = 1; i <= len; ++i)\n\t\t\tif (s[i] != '#') putchar(s[i]);\n\t\tfor (register int i = n - len - d2 + 1; i <= n; ++i)\n\t\t\tif (s[i] != '#') putchar(s[i]);\n\t}\n\tputchar('\\n');\n}\n```",
        "postTime": 1584780919,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1326D1 \u3010Prefix-Suffix Palindrome (Easy version)\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a  \n\u7ed9\u51fa\u5b57\u7b26\u4e32 $s$ \uff0c\u627e\u51fa\u6700\u957f\u7684\u56de\u6587\u4e32 $t$ \uff0c\u6ee1\u8db3\uff1a  \n- $|t| \\leq |s|$\uff0c\u5176\u4e2d $|s|$ \u8868\u793a\u5b57\u7b26\u4e32 $s$ \u7684\u957f\u5ea6\u3002\n- \u5b58\u5728\u5b57\u7b26\u4e32 $a, b$\uff08\u53ef\u4ee5\u4e3a\u7a7a\u4e32\uff09\uff0c\u4f7f\u5f97 $t = a+b$ \uff08 `+` \u8868\u793a\u8fde\u63a5\uff09\uff0c\u4e14 $a$ \u4e3a $s$ \u7684\u524d\u7f00\uff0c$b$ \u4e3a $s$ \u7684\u540e\u7f00\u3002  \n\n$1\\leq |s|\\leq 5000$\n\n### $\\mathcal O(n^2)$ \u89e3\u6cd5\n\n\u627e\u51fa\u6700\u5927\u7684 $p (1\\leq p\\leq \\left\\lfloor\\dfrac{|s|}{2}\\right\\rfloor)$\uff0c\u4f7f\u5f97 $\\text{pre}(s,p)=\\text{rev}(\\text{suf}(s,p))$\uff0c\u5219 $p$ \u4e00\u5b9a\u4e3a $a$ \u7684\u524d\u7f00\uff0c\u4e14 $\\text{rev}(p)$ \u4e3a $b$ \u7684\u540e\u7f00\u3002  \n\u5728\u5269\u4f59\u7684\u5b50\u4e32 $s\\,[p+1,|s|-p]$ \u4e2d\u627e\u51fa\u4e3a\u56de\u6587\u4e32\u7684\u6700\u957f\u524d\u7f00\u4e0e\u6700\u957f\u540e\u7f00\uff0c\u9009\u957f\u5ea6\u8f83\u5927\u7684\u90a3\u4e00\u4e2a\u4f5c\u4e3a\u7b54\u6848\u3002  \n\n\u4f8b\u5982\uff0c`s=abcdaaadacba`\uff0c\u6b64\u65f6 $p=3$ \uff0c\u5728\u5269\u4f59\u7684\u5b50\u4e32 `daaada` \u4e2d\u627e\u51fa\u7684\u4e3a\u56de\u6587\u4e32\u7684\u6700\u957f\u524d\u7f00\u4e3a `daaad`\uff0c\u6700\u957f\u540e\u7f00\u4e3a `ada`\uff0c\u7531\u4e8e\u627e\u51fa\u7684\u524d\u7f00\u957f\u5ea6\u8f83\u5927\uff0c\u56e0\u6b64\u9009 `daaad` \u4f5c\u4e3a\u7b54\u6848\uff0c\u53ef\u77e5 `a=abcdaaad`\uff0c`b=cba`\uff0c`t=abcdaaadcba`\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08[\u5feb\u8bfb\u6a21\u677f](https://www.luogu.com.cn/blog/andyli/read-template)\uff09\uff1a  \n```cpp\n#include <algorithm>\n#include <cstring>\n#include <string>\nconst int maxn = 5005;\n\nchar str[maxn];\nbool ispalid(const std::string& str) // \u5b57\u7b26\u4e32 str \u662f\u5426\u4e3a\u56de\u6587\u4e32\n{\n    std::string t = str;\n    std::reverse(t.begin(), t.end());\n    return t == str;\n}\nint main()\n{\n    int q;\n    io.read(q);\n    while (q--) {\n        io.read(str + 1);\n        int n = strlen(str + 1);\n        std::string s(str + 1);\n        int p = 0;\n        for (int i = 1; i <= n / 2; i++)\n            if (str[i] == str[n - i + 1])\n                p = i;\n            else\n                break;\n        int cnt1 = 0, cnt2 = 0;\n        for (int i = p + 1; i <= n - p; i++) {\n            if (ispalid(s.substr(p, i - p)))\n                cnt1 = i;\n            if (ispalid(s.substr(n - i, i - p)))\n                cnt2 = i;\n        }\n        for (int i = 1; i <= p; i++)\n            io.write(str[i]);\n        if (cnt1 > cnt2)\n            for (int i = p + 1; i <= cnt1; i++)\n                io.write(str[i]);\n        else\n            for (int i = n - cnt2 + 1; i <= n - p; i++)\n                io.write(str[i]);\n        for (int i = n - p + 1; i <= n; i++)\n            io.write(str[i]);\n        writeln();\n    }\n    return 0;\n}\n```\n\n### $\\mathcal O(n)$ \u89e3\u6cd5\n\n\u628a $\\mathcal O(n^2)$ \u89e3\u6cd5\u4e2d\u5224\u65ad\u524d\u7f00\u4e0e\u540e\u7f00\u662f\u5426\u4e3a\u56de\u6587\u4e32\u7684\u6734\u7d20\u505a\u6cd5\u6539\u4e3a\u53cc\u6a21\u6570\u54c8\u5e0c\u5339\u914d\u5373\u53ef\u3002  \n\n\u4ee3\u7801\u5982\u4e0b\uff08[\u5feb\u8bfb\u6a21\u677f](https://www.luogu.com.cn/blog/andyli/read-template)\uff09\uff1a  \n```cpp\n#include <algorithm>\n#include <cstring>\nconst int maxn = 1000005, MOD1 = 1e9 + 7, MOD2 = 1e9 + 9, b1 = 31, b2 = 79;\n\nint p1[maxn], p2[maxn], hash1[maxn], hash2[maxn], hash3[maxn], hash4[maxn], n;\nchar str[maxn];\nbool issame(int l, int r, int x, int y) // \u5b50\u4e32 l-r \u662f\u5426\u4e0e rev(x-y) \u76f8\u7b49\n{\n    x = n - x + 1, y = n - y + 1;\n    std::swap(x, y);\n    int x1 = (hash1[r] - 1LL * hash1[l - 1] * p1[r - l + 1] % MOD1 + MOD1) % MOD1;\n    int x2 = (hash2[r] - 1LL * hash2[l - 1] * p2[r - l + 1] % MOD2 + MOD2) % MOD2;\n    int x3 = (hash3[y] - 1LL * hash3[x - 1] * p1[y - x + 1] % MOD1 + MOD1) % MOD1;\n    int x4 = (hash4[y] - 1LL * hash4[x - 1] * p2[y - x + 1] % MOD2 + MOD2) % MOD2;\n    return x1 == x3 && x2 == x4;\n}\nbool ispalid(int l, int r) // \u5b50\u4e32 l-r \u662f\u5426\u4e3a\u56de\u6587\u4e32\n{\n    int len = r - l + 1;\n    return issame(l, l + (len - 1) / 2, l + len / 2, r);\n}\nint main()\n{\n    int q;\n    io.read(q);\n    p1[0] = p2[0] = 1;\n    for (int i = 1; i <= 1000000; i++)\n        p1[i] = 1LL * p1[i - 1] * b1 % MOD1, p2[i] = 1LL * p2[i - 1] * b2 % MOD2;\n    while (q--) {\n        io.read(str + 1);\n        n = strlen(str + 1);\n        for (int i = 1; i <= n; i++)\n            hash1[i] = (1LL * hash1[i - 1] * b1 + str[i]) % MOD1;\n        for (int i = 1; i <= n; i++)\n            hash2[i] = (1LL * hash2[i - 1] * b2 + str[i]) % MOD2;\n        for (int i = n; i >= 1; i--)\n            hash3[n - i + 1] = (1LL * hash3[n - i + 1 - 1] * b1 + str[i]) % MOD1;\n        for (int i = n; i >= 1; i--)\n            hash4[n - i + 1] = (1LL * hash4[n - i + 1 - 1] * b2 + str[i]) % MOD2;\n        int p = 0;\n        for (int i = 1; i <= n / 2; i++)\n            if (str[i] == str[n - i + 1])\n                p = i;\n            else\n                break;\n        int cnt1 = 0, cnt2 = 0;\n        for (int i = p + 1; i <= n - p; i++) {\n            if (ispalid(p + 1, i))\n                cnt1 = i;\n            if (ispalid(n - i + 1, n - p))\n                cnt2 = i;\n        }\n        for (int i = 1; i <= p; i++)\n            io.write(str[i]);\n        if (cnt1 > cnt2)\n            for (int i = p + 1; i <= cnt1; i++)\n                io.write(str[i]);\n        else\n            for (int i = n - cnt2 + 1; i <= n - p; i++)\n                io.write(str[i]);\n        for (int i = n - p + 1; i <= n; i++)\n            io.write(str[i]);\n        writeln();\n    }\n    return 0;\n}\n```",
        "postTime": 1584770866,
        "uid": 84282,
        "name": "andyli",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1326D1 \u3010Prefix-Suffix Palindrome (Easy version)\u3011"
    },
    {
        "content": "\u5728\u6211\u7684[\u535a\u5ba2](https://oi-master.github.io/post/codeforces-contest-1322-d1-ti-jie/)\u9605\u8bfb\u4f53\u9a8c\u66f4\u597d\u54e6\uff01\n\n\u672c\u4eba\u592a\u83dc\uff0c\u4e0d\u4f1a D2 \u7684\u4f18\u5316\uff0c\u5927\u4f6c\u4eec\u81ea\u5df1\u5199\u5427\uff0c\u6b22\u8fce\u53d1\u90ae\u4ef6\u5230 <tianyuzhou123@foxmail.com> \u586b\u5751\u3002\n## \u601d\u8def\n\u8fd9\u9053\u9898\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0 $S$ \u957f\u5ea6\u603b\u548c\u624d\u4e3a $5000$ \uff0c\u611f\u89c9\u8fd9\u662f\u4e00\u9053\u504f\u66b4\u529b\u7684\u9898\u76ee\u3002\n\n\u7136\u540e\u672c\u849f\u84bb\u5c31\u60f3\u5230\u4e00\u4e2a\u66b4\u529b\u7684\u7b97\u6cd5\uff1a\u679a\u4e3e\u5f00\u5934\u9009\u51e0\u4e2a\uff0c\u540c\u65f6\u679a\u4e3e\u6700\u540e\u9009\u51e0\u4e2a\uff0c\u7136\u540e\u53d6\u51fa\u8fd9\u4e2a\u679a\u4e3e\u51fa\u6765\u7684\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u5b83\u662f\u5426\u56de\u6587\u3002\u679a\u4e3e\u5f00\u5934\u65f6\u6709 $N+1$ \u79cd\u53ef\u80fd\uff0c\u7ed3\u5c3e\u4e5f\u6709 $N+1$ \u79cd\uff0c\u7136\u540e\u5224\u65ad\u56de\u6587\u4e5f\u8981\u68c0\u67e5 $\\lfloor N \\div 2 \\rfloor$ \u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u662f $O(N^3)$ \u7684\uff0c\u8fc7\u4e0d\u4e86\uff0c\u5f97\u60f3\u60f3\u66f4\u597d\u7684\u7b97\u6cd5\u3002\n\n\u4f46\u662f\u60f3\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u800c\u6ca1\u6709\u76ee\u6807\uff0c\u662f\u4e0d\u65b9\u4fbf\u7684\u3002\u6211\u4eec\u77e5\u9053\uff0c\u76ee\u6807\u7b97\u6cd5\u81f3\u5c11\u5f97\u8fbe\u5230 $O(N^2)$ \uff0c\u5426\u5219\u4e00\u5b9a\u8d85\u65f6\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff1a\u679a\u4e3e\u524d\u7f00\uff0c\u5728\u679a\u4e3e\u540e\u7f00\uff0c\u4e24\u4e2a\u662f\u540c\u65f6\u7684\uff0c\u5199\u4e24\u91cd\u5faa\u73af\u663e\u7136\u4e0d\u59a5\u3002\u6211\u4eec\u53ef\u4ee5\u60f3\u529e\u6cd5\u5199\u4e00\u51b2\u5faa\u73af\u3002\u4e5f\u8bb8\u4f60\u4f1a\u95ee\uff0c\u8fd9\u6837\u600e\u53ef\u4ee5\uff1f\u4f60\u95ee\u7684\u539f\u56e0\u662f\uff0c\u8fd9\u4e2a\u201c\u524d\u201d\u4e0e\u201c\u540e\u201d\u662f\u540c\u65f6\u5b58\u5728\u7684\uff0c\u5982\u679c\u6211\u4eec\u53ea\u8ba9\u5b83\u4eec\u4e00\u4e2a\u5b58\u5728\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u4e09\u91cd\u5faa\u73af\u6539\u6210\u4e24\u4e2a\u4e24\u91cd\u5faa\u73af\u4e86\uff1f\u662f\u7684\uff0c\u5f53\u7136\u53ef\u4ee5\u3002\u4f46\u662f\u8ba9\u4e00\u4e2a\u5b58\u5728\u4e0d\u662f\u9898\u76ee\u7684\u610f\u601d\uff0c\u6211\u4eec\u8fd8\u5f97\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u52a0\u5de5\u52a0\u5de5\u3002\u6211\u4eec\u628a\u5f00\u5934\u3001\u7ed3\u5c3e\u5df2\u7ecf\u6210\u529f\u914d\u5bf9\u7684\u5b57\u7b26\u5220\u9664\uff0c\u5f53\u7136\uff0c\u4e0d\u662f\u771f\u7684\u5220\u9664\uff0c\u8981\u4e0d\u4f60\u600e\u4e48\u6253\u5370\uff1f\u5220\u9664\u6240\u6709\u7684\u914d\u5bf9\u5b57\u7b26\u540e\uff0c\u5f00\u5934\u4e0e\u7ed3\u5c3e\u53ea\u53ef\u80fd\u6709\u4e00\u4e2a\u8fd8\u8981\u7ee7\u7eed\u9009\uff0c\u90a3\u4e48\u4f60\u5904\u7406\u4e00\u4e0b\uff0c\u9009\u4e00\u9009\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u56de\u6587\u5373\u53ef\uff0c\u7eaf\u5c5e\u7ec3\u5750\u6807\u63a7\u5236\uff0c\u6ca1\u4ec0\u4e48\u96be\u5ea6\u3002\n## \u4ee3\u7801\n\u5de5\u4f5c\u91cf\u6709\u70b9\u591a\uff0c\u6211\u7ed9\u4e2a\u53c2\u8003\u4ee3\u7801\uff0c\u8bf7\u81ea\u5f8b\u4e0d\u8981\u590d\u5236\u3002\n```cpp\n/*\n * Author: OI_Master\n * Time: 2020-03-20 10:26:42\n*/\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nbool huiwen(string s){\n\tfor(int i=0;i<s.size()/2;++i)\n\t\tif(s[i]!=s[s.size()-1-i])\n\t\t\treturn false;\n\treturn true;\n}\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tstring s;\n\t\tcin>>s;\n\t\tint k=0;\n\t\twhile(k<s.size()/2&&s[k]==s[s.size()-1-k])\n\t\t\t++k;\n\t\tint i=k;\n\t\twhile(i<s.size()-1-k&&!huiwen(s.substr(i,s.size()-k-i)))\n\t\t\t++i;\n\t\tint j=s.size()-1-k;\n\t\twhile(j>=k&&!huiwen(s.substr(k,j+1-k)))\n\t\t\t--j;\n\t\tcout<<s.substr(0,k);\n\t\tif(s.size()-k-i<=j+1-k)\n\t\t\tcout<<s.substr(k,j+1-k);\n\t\telse\n\t\t\tcout<<s.substr(i,s.size()-k-i);\n\t\tcout<<s.substr(s.size()-1-k+1)<<endl;\n\t}\n\treturn 0;\n}\n```\n\u672c\u6587\u5230\u6b64\u7ed3\u675f\uff0c\u8c22\u8c22\u60a8\u7684\u89c2\u770b\u3002",
        "postTime": 1584747317,
        "uid": 317899,
        "name": "oimaster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1326D1 \u3010Prefix-Suffix Palindrome (Easy version)\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4f7f\u7528$kmp$\u6765\u5b9e\u73b0\u7684\u505a\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u6765\u7684\u4e32\u62c6\u6210\u8fd9\u79cd\u5f62\u5f0f$(A)+(B)+(C)+(-A)$\n\n$(A)$\u548c$(-A)$\u4e92\u4e3a\u53cd\u4e32\uff0c$(B)$\u548c$(C)$\u91cc\u9762\u6709\u4e00\u4e2a\u662f\u56de\u6587\u4e32\uff08\u5047\u8bbe\u662f$(B)$\uff09\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f$(A)+(B)+(-A)$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u628a\u6700\u957f\u7684$(A)$\u548c$(-A)$\u627e\u51fa\u6765\n\n\u7136\u540e\u770b\u4e2d\u95f4\u90a3\u4e00\u6bb5\uff0c\u6211\u4eec\u8981\u628a$(B)$\u627e\u51fa\u6765\uff0c\u8003\u8651\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u5982\u679c\u628a\u4ed6\u53cd\u8fc7\u6765\uff0c\u90a3\u4e48\u8fd8\u662f\u548c\u539f\u6765\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u539f\u4e32\u4e2d\u7684$(A)$\u548c$(-A)$\u5207\u6389\u4e4b\u540e\u5f97\u5230$(B)+(C)$\uff0c\u518d\u628a\u8fd9\u4e2a\u4e32\u53cd\u8f6c\u4e00\u4e0b\u63a5\u5230\u540e\u9762\uff0c\u53d8\u6210$(B)+(C)+(-C)+(B)$\uff0c\u7136\u540e\u8dd1\u4e00\u904d$kmp$\u5c31\u80fd\u591f\u5f97\u5230\u6700\u957f\u7684$(B)$\u4e86\n\n\u5982\u679c\u5728\u53f3\u534a\u90e8\u5206\u5c31\u53cd\u8fc7\u6765\u518d\u8dd1\u4e00\u904d\u5c31\u53ef\u4ee5\n\n\u4f46\u662f\u6ce8\u610f\u6211\u4eec\u6700\u540e\u7684$(B)$\u4e0d\u80fd\u6bd4$(B)+(C)$\u8fd8\u8981\u957f\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u957f\u5ea6$\\leq|(B)+(C)|$\u7684$Border$\uff0c\u6700\u540e\u66f4\u65b0\u4e00\u4e0b\u5c31\u597d\n\n\u8bb0\u5f97\u6570\u7ec4\u8981\u5f00\u4e24\u500d\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=2e6+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nchar s[N],t[N],tt[N];\nint T,ls,lt,ltt;\nint nxt[N],ans;\n\nvoid kmp(){\n    nxt[1]=0;\n    for(int i=2,j=0;i<=lt;i++){\n        while(j&&t[i]!=t[j+1])j=nxt[j];\n        if(t[j+1]==t[i])j++;\n        nxt[i]=j;\n    }\n    int j=nxt[lt];\n    while(j>lt/2){//\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u5230\u4e00\u534a\u7684Border\n        j=nxt[j];\n        nxt[lt]=j;\n    }\n}\n\nint main()\n{\n    read(T);\n    while(T--){\n        ls=lt=ltt=0;\n        scanf(\"%s\",s+1);\n        ls=strlen(s+1);\n        int p1=ls;\n        Rep(i,1,ls)\n            if(s[i]!=s[ls-i+1]){\n                p1=i-1;\n                break;\n            }\n        if(p1==ls){printf(\"%s\\n\",s+1);continue;}\n        for(int i=p1+1;i<=ls-p1;i++)\n            t[++lt]=s[i];\n        Rep(i,1,lt)t[lt+lt-i+1]=t[i];\n        lt=lt+lt;\n        kmp();\n        Rep(i,lt-nxt[lt]+1,lt)tt[++ltt]=t[i];\n        // cout<<nxt[lt]<<endl;\n        Rep(i,1,lt/2)swap(t[i],t[i+lt/2]);\n        kmp();\n        Rep(i,1,p1)printf(\"%c\",s[i]);\n        if(nxt[lt]>ltt)\n            Rep(i,lt-nxt[lt]+1,lt)printf(\"%c\",t[i]);\n        else Rep(i,1,ltt)printf(\"%c\",tt[i]);\n        _Rep(i,p1,1)printf(\"%c\",s[i]);\n        puts(\"\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1584958546,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1326D1 \u3010Prefix-Suffix Palindrome (Easy version)\u3011"
    }
]