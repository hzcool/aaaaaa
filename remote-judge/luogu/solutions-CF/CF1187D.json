[
    {
        "content": "\u8981\u6c42$a$\u548c$b$\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u7b49\uff0c\u5219\u6bcf\u79cd\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u4e5f\u8981\u76f8\u7b49\uff0c\u8fd9\u4e2a\u76f4\u63a5\u5224\u6389\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u53ea\u5bf9\u957f\u5ea6\u4e3a2\u7684\u533a\u95f4\u6392\u5e8f\uff08\u5373\u9009\u62e9\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\uff0c\u5c0f\u7684\u653e\u5de6\u8fb9\uff0c\u5927\u7684\u653e\u53f3\u8fb9\uff09\uff0c\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff08\u5192\u6ce1\u6392\u5e8f\u7684\u539f\u7406\uff09\u3002\n\n\u8003\u8651\u4ece$a_1\\sim a_n$\u4f9d\u6b21\u786e\u5b9a\u4e3a\u6b63\u786e\u7684\u503c\u3002\n\n\u5047\u8bbe\u5f53\u524d\u8003\u8651\u7684\u662f$a_i$\uff0c\u524d\u9762$i-1$\u4e2a\u5df2\u7ecf\u6b63\u786e\u5bf9\u5e94\u3002\n\n\u6211\u4eec\u5728\u4f4d\u7f6e$i$\u540e\u9762\u627e\u5230\u7b2c\u4e00\u4e2a\u7b49\u4e8e$b_i$\u7684\u5143\u7d20$a_j$\uff0c\u5e76\u8003\u8651\u628a\u5b83\u4ea4\u6362\u5230$a_i$\u4f4d\u7f6e\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u4e14\u4ec5\u5f53$a_i\\sim a_{j-1}$\u90fd\u5927\u4e8e$a_j$\u7684\u503c\u7684\u65f6\u5019\uff0c\u624d\u6709\u53ef\u80fd\u4ea4\u6362\u8fc7\u6765\u3002\u5e76\u4e14\u4ea4\u6362\u662f\u4e0d\u6539\u53d8\u5176\u4ed6\u5143\u7d20\u7684\u76f8\u5bf9\u987a\u5e8f\u7684\u3002\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u90fd\u662f\u628a\u540e\u9762\u67d0\u4e2a\u5143\u7d20\u6362\u5230\u6700\u524d\u9762\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684$a_i\\sim a_j$\u5728\u6700\u539f\u59cb\u7684\u6570\u7ec4\u4e2d\u4e5f\u662f\u6309\u7167\u8fd9\u6837\u7684\u76f8\u5bf9\u987a\u5e8f\u6392\u5217\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u628a\u4e00\u4e2a\u5143\u7d20\u79fb\u52a8\u5230\u524d\u9762\u7684\u65f6\u5019\uff0c\u5b83\u5bf9\u540e\u9762\u5c31\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u3002\n\n\u90a3\u4e48\u6211\u4eec\u76f8\u5f53\u4e8e\u505a\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff1a\n\n\u4ece\u5c0f\u5230\u5927\u679a\u4e3e$i$\uff0c\u5728$a$\u4e2d\u627e\u5230$b_i$\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e$p$\uff0c\u5224\u65ad$a_p$\u662f\u4e0d\u662f$a_1\\sim a_p$\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u5982\u679c\u4e0d\u662f\u5219\u8f93\u51faNO\u3002\u7136\u540e\u628a$a_p$\u6539\u6210\u65e0\u7a77\u5927\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u8fd9\u4e2a\u5143\u7d20\uff09\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u6700\u503c\u7684\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<queue>\nconst int N=3e5+6;\nint T,n,a[N],b[N],tot[N],pos[N];\nstd::queue<int>q[N];\nint d[N<<2];\nvoid build(int l,int r,int o){\n\tif(l==r)d[o]=a[l];else{\n\t\tconst int mid=l+r>>1;\n\t\tbuild(l,mid,o<<1),build(mid+1,r,o<<1|1);\n\t\td[o]=std::min(d[o<<1],d[o<<1|1]);\n\t}\n}\nint query(int l,int r,int o,const int&L,const int&R){\n\tif(L<=l&&r<=R)return d[o];\n\tconst int mid=l+r>>1;\n\tif(L<=mid&&mid<R)return std::min(query(l,mid,o<<1,L,R),query(mid+1,r,o<<1|1,L,R));\n\tif(L<=mid)return query(l,mid,o<<1,L,R);return query(mid+1,r,o<<1|1,L,R);\n}\nvoid modify(int l,int r,int o,const int&pos){\n\tif(l==r)d[o]=9999999;else{\n\t\tconst int mid=l+r>>1;\n\t\tif(pos<=mid)modify(l,mid,o<<1,pos);else modify(mid+1,r,o<<1|1,pos);\n\t\td[o]=std::min(d[o<<1],d[o<<1|1]);\n\t}\n}\nint main(){\n\tfor(scanf(\"%d\",&T);T--;){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;++i)tot[i]=0;\n\t\tfor(int i=1;i<=n;++i)scanf(\"%d\",a+i),++tot[a[i]];\n\t\tfor(int i=1;i<=n;++i)scanf(\"%d\",b+i),--tot[b[i]];\n\t\tint ok=1;\n\t\tfor(int i=1;i<=n&&ok;++i)if(tot[i]){\n\t\t\tputs(\"NO\");ok=0;\n\t\t}\n\t\tif(!ok)continue;\n\t\tfor(int i=1;i<=n;++i)\n\t\tq[a[i]].push(i);\n\t\tfor(int i=1;i<=n;++i)pos[i]=q[b[i]].front(),q[b[i]].pop();\n\t\tbuild(1,n,1);\n\t\tfor(int i=1;i<=n&&ok;++i){\n\t\t\tif(query(1,n,1,1,pos[i])!=b[i])ok=0;\n\t\t\tmodify(1,n,1,pos[i]);\n\t\t}\n\t\tputs(ok?\"YES\":\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1561975719,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1187D \u3010Subarray Sorting\u3011"
    },
    {
        "content": "### \u9898\u610f\n\u7ed92\u4e2a\u957f\u5ea6=N\u7684\u5e8f\u5217a,b\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06a\u7684\u8fde\u7eed\u5b50\u5e8f\u5217[l,r]\u6392\u5e8f\u3002\u95ee\u80fd\u5426\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u4f7f\u5e8f\u5217a\u53d8\u4e3a\u5e8f\u5217b\u3002\n\u591a\u7ec4\u8be2\u95ee\u3002\n\n\n### \u9898\u89e3\n\u8f6c\u5316\uff1a\u5c06\"\u5b50\u5e8f\u5217`[l,r]`\u6392\u5e8f\" -> \u82e5\u5e72`len=2`\u7684\u64cd\u4f5c -> \u901a\u8fc7\u76f8\u90bbswap\u6d88\u9664\u6389`[l,r]`\u4e2d\u6240\u6709\u9006\u5e8f\u5bf9\n\n\u89c2\u5bdf\u5230\u64cd\u4f5c\"\u4e0d\u4f1a\u4ea7\u751f\u65b0\u7684\u9006\u5e8f\u5bf9\"\uff0c\u5373ans=`yes`\u7684**\u5fc5\u8981\u6761\u4ef6**\u662f\"\u6ca1\u6709\u65b0\u7684\u9006\u5e8f\u5bf9\"\u3002\n\n\u8bbe`pos[b[i]]` = `b[i]`\u5728`a`\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n\u5373\u5bf9\u4e8e`b`\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20`b[i]`\uff1a\u4e0d\u5b58\u5728`j`\u6ee1\u8db3`j<i\u4e14b[j]>b[i]\u4e14pos[b[j]]>pos[b[i]]`\n  \n\u90a3\u4e48\uff1a`max{pos[b[j]]|j<i, b[j]>b[i]} < pos[b[i]]`\uff0c\u8f6c\u5316\u6210\u4e8c\u7ef4\u504f\u5e8f\u4e0a\u7684\u6700\u503c\u95ee\u9898\uff0c\u5355\u70b9\u4fee\u6539\u540e\u7f00\u6c42max\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u8fd9\u4e2a\u6761\u4ef6\u7684**\u5145\u5206\u6027**\u53ef\u4ee5\u8003\u8651\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u6240\u6709\u5143\u7d20\uff0c\u7528\u5f52\u7eb3\u6cd5\u8bc1\u660e\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 300005\n#define LL long long\n#define P int(1e4+7)\nusing namespace std;\n \nint N;\n \nint a[MAXN], b[MAXN];\n \nvector<int> adj[MAXN];//\u5b58i\u4e2d\u4e0b\u6807\uff0c\u7ef4\u62a4pos[]\u4fe1\u606f\n \n//segTree\n \nstruct Node{\n\tint l,r,d;\n\tNode *ls, *rs;\n\t\n\tvoid update(){\n\t\td = max(ls->d, rs->d);\n\t} \n} pool[3*MAXN], *rt;\n \nint top = 0;\n \nNode* buildT(int l, int r){\n\tNode* p = pool + (++top);\n\tp->l = l; p->r = r;\n\tp->d = 0;\n\tif(l==r) return p;\n\t\n\tint mid = (l + r)/2;\n\tp->ls = buildT(l, mid);\n\tp->rs = buildT(mid+1,r);\n\t\n\treturn p;\n}\n \nvoid change(Node* p, int id, int x){\n\tif(p->l==id && p->r==id){\n\t\tp->d = x;\n\t\treturn;\n\t}\n\t\n\tint mid = (p->l + p->r)/2;\n\tif(id <= mid) change(p->ls, id, x);\n\telse change(p->rs, id, x);\n\t\n\tp->update();\n}\n \nint query(Node* p, int l, int r){\n\tif(l > r) return 0;\n\tif(p->l==l && p->r==r){\n\t\treturn p->d;\n\t}\n\t\n\tint mid = (p->l + p->r)/2;\n\tif(r <= mid) return query(p->ls, l, r);\n\telse if(l >= mid+1) return query(p->rs, l, r);\n\telse return max(query(p->ls, l, mid), query(p->rs, mid+1, r));\n}\n \n//segTree End\n \nint cnt[MAXN];\n \nbool chk(){\n\tint x;\n\tfor(int i=1;i<=N;i++){\n\t\tx = a[i];\n\t\tadj[x].push_back(i);\n\t}\n\t\n\tint pos;\n\tfor(int i=1;i<=N;i++){\n\t\tx = b[i];\n\t\tif(++cnt[x] > adj[x].size()) return 0;\n\t\telse pos = adj[x][cnt[x]-1];\n \n\t\tif(query(rt,x+1,N) > pos) return 0;\n\t\tchange(rt, x, pos);\n\t}\n\treturn 1;\n}\n \nint main(){\n\tios::sync_with_stdio(0);\n\tint T;\n\tcin>>T;\n\t\n\twhile(T--){\n\t\tcin>>N;\n\t\tfor(int i=1;i<=N;i++) cin>>a[i];\n\t\tfor(int i=1;i<=N;i++) cin>>b[i];\n\t\t\n\t\t//init\n\t\t\n\t\ttop = 0;\n\t\trt = buildT(1,N);\n\t\tfor(int i=1;i<=N;i++){\n\t\t\tadj[i].clear();\n\t\t\tcnt[i] = 0;\n\t\t}\n \n\t\tif(chk()) cout<<\"YES\"<<endl;\n\t\telse cout<<\"NO\"<<endl;\n\t}\n \n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1562208755,
        "uid": 21017,
        "name": "\u8096\u7136",
        "ccfLevel": 7,
        "title": "\u3010CF1187D\u3011 Subarray Sorting"
    },
    {
        "content": "### \u6562\u95ee\u8fd9\u9898\u771f\u7684\u96be\u5417\uff1f\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e86\u3002\u3002\u3002\n## \u3010\u601d\u8def\u3011\n\u8fd8\u662f\u53ef\u4ee5\u60f3\u7684\uff0c\u660e\u663e\u662f$O(nlogn)$\u7684\u590d\u6742\u5ea6\uff0c\u800c\u4e14\u5f88\u60f3\u9006\u5e8f\u5bf9\u548c\u5176\u4ed6\u4e00\u4e9b\u503e\u5411\u4e8e\u6570\u5b66\u9898\u7684\u5efa\u6a21\u9898\uff0c\u4e8e\u662f\u8003\u8651\u5bf9\u8fd9\u9053\u9898\u4e2d\u6240\u7ed9\u64cd\u4f5c\u7684\u4e00\u4e9b\u6027\u8d28\u3002\n\n## \u3010\u6027\u8d28\u3011\n### \u6027\u8d281\u00b7\u6211\u8981\u5f80\u524d\u8d70\uff01\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5e8f\u5217$A$\u53d8\u6210$B$\u65f6\uff0c\u5982\u679c\u6211\u4eec\u4ece$B_1$\u5f00\u59cb\u5f80\u540e\u904d\u5386\uff0c\u4f1a\u53d1\u73b0\u6211\u4eec\u80af\u5b9a\u662f\u901a\u8fc7\u628a$A$\u4e2d\u5bf9\u5e94\u7684\u6570\u5f80\u524d\u79fb\u52a8\u5b8c\u6210\u53d8\u5316\u7684\uff0c\u6bd4\u5982$A_i \\neq B_i$\u65f6\uff0c\u4e14$A_k = B_i$\uff0c\u5982\u679c\u524d\u9762\u7684\u6570\u5df2\u7ecf\u5168\u90e8\u4e00\u4e00\u5339\u914d\uff0c\u90a3\u6211\u4eec\u5c31\u4e0d\u7528\u8003\u8651\u8fd9\u4e9b\u6570\uff08\u5373$A_1 = B_1 ...... A_{i-1} = B_{i-1}$\uff09\uff0c\u8bf4\u660e$k > i$\uff0c\u6240\u4ee5\u8981\u201c\u5f80\u524d\u8d70\u201d\u3002\n\n### \u6027\u8d282\u00b7\u6211\u8981\u6bd4\u4f60\u5c0f\uff01\n\u5982\u679c\u4e00\u4e2a\u6570\u7684\u524d\u9762\uff08\u672a\u5339\u914d\u90e8\u5206\uff09\u6709\u6bd4\u5b83\u5c0f\u7684\u6570\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u4e0d\u80fd\u548c\u81ea\u5df1\u8981\u5bf9\u5e94\u7684\u6570\u5339\u914d\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u662f\u901a\u8fc7\u6392\u5e8f\u4f4d\u79fb\u6570\u5b57\u7684\u3002\u6240\u4ee5\uff0c\u5f53\u6211\u4eec\u7684\u4e00\u4e2a\u6570\u5927\u4e8e\u524d\u9762\u67d0\u4e2a\u6570\u65f6\uff0c\u8fd9\u4e24\u4e2a\u6570\u7684\u987a\u5e8f\u5c31\u65e0\u6cd5\u6539\u53d8\u4e86\u3002\u6bd4\u5982\uff1a\n$$\\{1,2,5,4,3\\}$$\n\u4e2d\uff0c$5$\u3001$4$\u3001$3$\u5c31\u4e0d\u53ef\u80fd\u5230$1$\u3001$2$\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u4f46\u662f$4$\u53ef\u4ee5\u5411\u524d\u6362\u5230$5$\u7684\u4f4d\u7f6e\u3002\n\uff08\u81ea\u5df1\u7406\u89e3\uff09\n\n### \u6027\u8d283\u00b7\u6211\u4eec\u8981\u4e00\u6837\uff01\n\u8fd9\u4e00\u6761\u597d\u7406\u89e3\u7684\u3002$A$\u80fd\u53d8\u6210$B$\uff0c\u5fc5\u8981\u6761\u4ef6\u4e4b\u4e00\u662f$A$\u4e2d\u6240\u6709\u6570\u5b57\u4e2a\u6570\u4e0e$B$\u4e2d\u6240\u6709\u6570\u5b57\u4e2a\u6570\u5b8c\u5168\u76f8\u540c\uff08~~\u5c31\u662f\u8d28\u91cf\u5b88\u6052~~\uff09\n\n## \u3010\u7b97\u6cd5\u3011\n\u7136\u540e\u5c31\u7b80\u5355\u4e86\u3002\n\n\u6839\u636e\u4ee5\u4e0a\u6027\u8d28\uff0c\u6211\u4eec\u5bb9\u6613\u770b\u51fa\u8981\u8fd9\u4e48\u505a\uff1a\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\u3002\n\n\u6211\u4eec\u5148\u5b58$A$\u4e2d\u6bcf\u4e00\u4e2a\u6570\u7684\u6240\u6709\u4f4d\u7f6e\uff08\u7231\u7528\u94fe\u8868\u7528\u94fe\u8868\uff0c\u6211\u7528\u7684$vector$\uff09\u3002\n\n\u7136\u540e\u770b$B$\u53ef\u4e0d\u53ef\u4ee5\u5339\u914d\u5c31\u884c\u4e86\u3002\u4ece$B_1$\u5f00\u59cb\u5f80\u540e\u626b\uff0c\u627e$B_i$\u5728$A$\u4e2d**\u6ca1\u6709\u88ab\u5339\u914d\u8fc7\u7684\u6700\u524d\u9762\u7684\u4f4d\u7f6e**\uff0c\u7136\u540e\u627e\u8fd9\u4e4b\u524d**\u6ca1\u6709\u88ab\u4f7f\u7528\u7684**\u6700\u5c0f\u503c\uff0c\u6bd4\u8f83$B_i$\u4e0e\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u5927\u5c0f\u5c31\u53ef\u4ee5\u5224\u65ad\u51fa\u662f\u5426\u8981\u8f93\u51fa$NO$\uff08~~\u4e00\u6c27\u5316\u6c2e~~\uff09\u4e86\u3002\u8fd9\u91cc\u7531\u4e8e\u662f\u5728\u7ebf\u7684\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff08\u8fd8\u4e0d\u7528\u6253\u6807\u8bb0\uff09\u3002\n\n## \u3010\u4ee3\u7801\u3011\n```cpp\n//Frame_mzq\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x)\n{\n    char c;\n    x = 0;\n    int fu = 1;\n    c = getchar();\n    while(c > 57 || c < 48)\n    {\n        if(c == 45)\n        {\n            fu = -1;\n        }\n        c = getchar();\n    }\n    while(c <= 57 && c >= 48)\n    {\n        x = (x << 3) + (x << 1) + c - 48;\n        c = getchar();\n    }\n    x *= fu;\n}\ntemplate <typename T>\ninline void fprint(T x)\n{\n    if(x < 0)\n    {\n        putchar(45);\n        x = -x;\n    }\n    if(x > 9)\n    {\n        fprint(x / 10);\n    }\n    putchar(x % 10 + 48);\n}\nvector <int> num[300010];\nint n, x, cnt[300010];\nint tree[1200010];\n\nvoid pushup(int rt)\n{\n\ttree[rt] = min(tree[rt << 1], tree[rt << 1 | 1]);\n}\n\nint query(int rt, int l, int r, int x, int y)\n{\n\tif(x <= l && r <= y) return tree[rt];\n\tint mid = (l + r) >> 1;\n\tint ans = 0x3f3f3f3f;\n\tif(x <= mid) ans = min(ans, query(rt << 1, l, mid, x, y));\n\tif(y > mid) ans = min(ans, query(rt << 1 | 1, mid + 1, r, x, y));\n\tpushup(rt);\n\treturn ans;\n}\n\nvoid modify(int rt, int l, int r, int x, int y)\n{\n    if (x <= l && r <= x)\n    {\n        tree[rt] = y;\n        return;\n    }\n    int mid = (l + r) >> 1; \n    if (x <= mid) modify(rt << 1, l, mid, x, y);\n    if (x > mid) modify(rt << 1 | 1, mid + 1, r, x, y);\n    pushup(rt);\n}\n\nvoid work()\n{\n\tread(n);\n\tfor (register int i = 1;i <= n;i ++)\n\t{\n\t\tnum[i].clear();\n\t\tcnt[i] = 0;\n\t}\n\tfor (register int i = 1;i <= n;i ++)\n\t{\n\t\tread(x);\n\t\tnum[x].push_back(i);\n\t\tmodify(1, 1, n, i, x);\n\t}\n\tfor (register int i = 1;i <= n;i ++)\n\t{\n\t\tread(x);\n\t\tif(num[x].size() - cnt[x] == 0)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tfor (register int j = i + 1;j <= n;j ++) read(x);\n\t\t\treturn ;\n\t\t}\n\t\tint pos = num[x][cnt[x]];\n\t\tint ret = query(1, 1, n, 1, pos);\n\t\tif(ret < x)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tfor (register int j = i + 1;j <= n;j ++) read(x);\n\t\t\treturn ;\n\t\t}\n\t\tmodify(1, 1, n, pos, 0x3f3f3f3f);\n\t\tcnt[x] ++;\n\t}\n\tprintf(\"YES\\n\");\n}\nint Q;\nint main()\n{\n    read(Q);\n    while(Q --)\n    {\n    \twork();\n\t}\n}\n\n```",
        "postTime": 1561976211,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1187D \u3010Subarray Sorting\u3011"
    },
    {
        "content": "## CF1187D 2400\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a$ \u548c $b$\u3002\u4f60\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e00\u6bb5\u533a\u95f4 $[l,r]$\uff0c\u4ee4 $a_l-a_r$ \u7684\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u4f60\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u6b21\u64cd\u4f5c\u3002\u95ee\u80fd\u5426\u4f7f $a$ \u4e0e $b$ \u5b8c\u5168\u76f8\u7b49\u3002\n\n\n### \u601d\u8def\n\n\u8003\u8651\u4ece\u524d\u5f80\u540e\u51d1\u51fa $b$ \u6570\u7ec4\uff0c\u51d1 $b_i$ \u65f6\uff0c\u5e94\u8be5\u628a\u6ca1\u51d1\u6210\u7684\u6700\u9760\u524d\u7684 $a_j$ \u79fb\u5230 $i$\uff0c\u800c\u4e24\u4e2a\u4e00\u8d77\u6392\u5e8f\u4e00\u5b9a\u6bd4\u591a\u4e2a\u4e00\u8d77\u6392\u5e8f\u66f4\u6709\u53ef\u80fd\u6210\u529f\uff0c\u6240\u4ee5\uff0c\u6210\u529f\u7684\u6761\u4ef6\u5c31\u53d8\u4e3a\u4e86 $a_j$ \u6bd4 $a_i-a_j$ \u90fd\u66f4\u5c0f\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u5220\u9664\u4e00\u4e2a\u6570\u7b49\u4ef7\u4e3a\u5c06\u5b83\u8d4b\u6210 $INF$\u3002\n\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int MAXN=3e5+10;\nint T,n,a[MAXN],b[MAXN],aa[MAXN],bb[MAXN],tr[MAXN*5],book[MAXN];\nbool flag;\nqueue<int> q[MAXN];\nvoid build(int node,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttr[node]=a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2,lnode=node*2,rnode=node*2+1;\n\tbuild(lnode,l,mid);\n\tbuild(rnode,mid+1,r);\n\ttr[node]=min(tr[lnode],tr[rnode]);\n}\nvoid update(int node,int l,int r,int x,int num)\n{\n\tif(l==r)\n\t{\n\t\ttr[node]=num;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2,lnode=node*2,rnode=node*2+1;\n\tif(x<=mid)  update(lnode,l,mid,x,num);\n\telse  update(rnode,mid+1,r,x,num);\n\ttr[node]=min(tr[lnode],tr[rnode]);\n}\nint query(int node,int l,int r,int R)\n{\n\tif(l>R)  return LONG_LONG_MAX;\n\tif(r<=R)  return tr[node];\n\tint mid=(l+r)/2,lnode=node*2,rnode=node*2+1;\n\treturn min(query(lnode,l,mid,R),query(rnode,mid+1,r,R));\n}\nsigned main()\n{\n\tscanf(\"%lld\",&T);\n\twhile(T--)\n\t{\n\t\tflag=0;\n\t\tscanf(\"%lld\",&n);\n\t\tfor(int i=1;i<=n;i++)  scanf(\"%lld\",&a[i]);\n\t\tfor(int i=1;i<=n;i++)  scanf(\"%lld\",&b[i]);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\taa[i]=a[i];\n\t\t\tbb[i]=b[i];\n\t\t}\n\t\tsort(aa+1,aa+n+1);\n\t\tsort(bb+1,bb+n+1);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(aa[i]!=bb[i])  flag=1;\n\t\t}\n\t\tif(flag)\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\twhile(q[i].size())  q[i].pop();\n\t\t}\n\t\tfor(int i=1;i<=n;i++)  q[a[i]].push(i);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tbook[i]=q[b[i]].front();\n\t\t\tq[b[i]].pop();\n\t\t}\n\t\tbuild(1,1,n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(query(1,1,n,book[i])!=a[book[i]]&&book[i])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupdate(1,1,n,book[i],LONG_LONG_MAX);\n\t\t}\n\t\tif(flag)  puts(\"NO\");\n\t\telse  puts(\"YES\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1662550648,
        "uid": 457247,
        "name": "zsyyyy",
        "ccfLevel": 6,
        "title": "CF1187D\u9898\u89e3"
    },
    {
        "content": "\u4e4b\u524d\u4f7f\u7528\u4e86\u7ebf\u6bb5\u6811\u901a\u8fc7\u4e86\u6b64\u9898\uff0c\u73b0\u5728\u91cd\u65b0\u770b\uff0c\u53d1\u73b0\u6811\u72b6\u6570\u7ec4\u4e5f\u53ef\u4ee5\u505a\u3002\n\n\n\n------------\n\n\u9996\u5148\uff0c\u5982\u679c $a$ \u4e0e $b$ \u7684\u5143\u7d20\u53ef\u91cd\u96c6\u4e0d\u540c\uff0c\u5219\u76f4\u63a5\u975e\u6cd5\uff0c\u5426\u5219\uff0c\u7ee7\u7eed\u5224\u65ad\u3002\n\n\u5148\u8003\u8651\u5982\u679c $a_i$ \u4e2d\u5143\u7d20\u4e24\u4e24\u4e0d\u540c\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u8003\u8651\u6211\u4eec\u5e72\u7684\u4e8b\u60c5\uff0c\u628a $a$ \u53d8\u6210 $b$ \u5176\u5b9e\u5c31\u662f\u628a $a$ \u6570\u7ec4\u7684\u7b2c $i$ \u4e2a\u5143\u7d20\u79fb\u52a8\u5230 $r_i$ \u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a $a$ \u4e2d\u5143\u7d20\u4e24\u4e24\u4e0d\u540c\uff0c\u6240\u4ee5\u6bcf\u4e2a $i$ \u6709\u552f\u4e00\u7684 $r_i$\u3002\n\n\u90a3\u4e48\uff0c\u8003\u8651\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u7684\u8fd9\u4e2a\u6392\u5e8f\u64cd\u4f5c\uff0c\u9996\u5148\u5047\u8bbe\u6211\u4eec\u53ea\u64cd\u4f5c\u957f\u5ea6\u4e3a2\u7684\u5b50\u4e32\uff0c\u4efb\u4f55\u66f4\u957f\u7684\u4e1c\u897f\u80af\u5b9a\u53ef\u4ee5\u7531\u5b83\u7ec4\u6210\uff08\u5192\u6ce1\u6392\u5e8f\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u771f\u6b63\u8fdb\u884c\u7684\u64cd\u4f5c\u4f7f\u5bf9**\u4e24\u4e2a\u76f8\u90bb\u9006\u5e8f\u5143\u7d20\u8fdb\u884c\u4ea4\u6362**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\uff0c\u4e00\u4e2a\u6570 $a_i$ \u4ece $i$ \u8d70\u5230 $r_i$\uff0c\u8981\u4e0e\u54ea\u4e9b\u5143\u7d20 $a_j$ \u8fdb\u884c\u4ea4\u6362\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c \u4f4d\u7f6e $j$ \u6ee1\u8db3 $j<i,r_j>r_i$ \u6216 $j>i,r_j<r_i$\uff0c\u90a3\u4e48\u5b83\u4eec\u4e00\u5b9a\u4f1a\u53d1\u751f\u4ea4\u6362\uff0c\u56e0\u4e3a $j$ \u672c\u6765\u5728 $i$ \u7684\u4e00\u8fb9\uff0c\u6700\u540e\u8dd1\u5230\u4e86\u53e6\u4e00\u8fb9\u3002\u53cd\u4e4b\uff0c$j$ \u4f1a\u4e00\u76f4\u5728 $i$ \u7684\u4e00\u4fa7\uff0c\u4e0d\u4f1a\u53d1\u751f\u4ea4\u6362\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $r$\uff0c\u5224\u65ad\u6240\u6709\u4ea4\u6362\u662f\u5426\u5408\u6cd5\u3002\n\n\u8003\u8651\u5224\u65ad\u662f\u5426\u6709 $(\\forall j<i,r_j>r_i),(a_j>a_i)$\n\n\u9996\u5148\u5224\u65ad\u8fd9\u4e2a\u6761\u4ef6\u662f\u56e0\u4e3a\u6211\u4eec\u4ea4\u6362\u7684\u662f\u76f8\u90bb\u9006\u5e8f\uff0c\u6240\u4ee5\u5b83\u5de6\u8fb9\u7684\u8981\u6bd4\u5b83\u5927\u65b9\u53ef\u4ea4\u6362\u3002\n\n\u800c\u5224\u65ad\u7684\u65b9\u6cd5\u5219\u662f\u770b $j<i,r_j>r_i$ \u7684\u6240\u6709 $a_j$ \u7684 min \u662f\u5426 $ >a_i$\u5373\u53ef\uff0c\u8fd9\u4e2a\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u4e8c\u7ef4\u504f\u5e8f\u4e2d\u6c42\u4fe1\u606f\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u70b9\u4fee\u6539\uff0c\u540e\u7f00\u6c42 min \u7684\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u3002\n\n\u800c\u53e6\u4e00\u8fb9 $(\\forall j>i,r_j<r_i),(a_j<a_i)$ \u5bf9\u79f0\uff0c\u540c\u7406\u3002\n\n\u6240\u4ee5\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u6700\u540e\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff1a\u5982\u679c\u6709\u76f8\u540c\u5143\u7d20\u600e\u4e48\u529e\uff1f\n\n\u7ed9\u51fa\u7ed3\u8bba\uff1a$a$ \u4e2d\u7b2c\u4e00\u4e2a $x$ \u4e0e $b$ \u4e2d\u7b2c\u4e00\u4e2a $x$\u914d\u5bf9\uff0c\u7b2c\u4e8c\u4e2a\u4e0e\u7b2c\u4e8c\u4e2a\u914d...\u5373\u53ef\u3002\n\n\u9996\u5148\u611f\u6027\u7406\u89e3\u8fd9\u662f\u5bf9\u7684\u3002\n\n\u800c\u6b63\u786e\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u6211\u4eec\u5f88\u5bb9\u6613\u8bc1\u660e\uff0c\u8fd9\u6837\u505a\uff0c $x$ \u4e0e\u5176\u5b83\u5143\u7d20\u53d1\u751f\u7684\u4ea4\u6362\u662f\u6700\u5c11\u7684\uff0c\u4efb\u4f55\u65b9\u6848\u7684\u6539\u53d8\u53ea\u53ef\u80fd\u4f7f\u589e\u52a0\u4e0d\u5fc5\u8981\u7684\u4ea4\u6362\uff08\u7c7b\u4f3c\u6392\u5e8f\u4e0d\u7b49\u5f0f\u7684\u8bc1\u6cd5\uff09\uff0c\u5f88\u7b80\u5355\u5c31\u4e0d\u8be6\u7ec6\u8bf4\u4e86\u3002\n\n\u6240\u4ee5\u590d\u6742\u5ea6 $O(n\\log n)$\n\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//dengyaotriangle!\n\nconst int maxn=300005;\n\nint a[maxn],r[maxn];\nvector<int> p[maxn];\n\nint bit1[maxn],bit2[maxn];\n\nvoid chgi(int i,int x){while(i<maxn)bit1[i]=max(bit1[i],x),i+=i&-i;}\nvoid clri(int i){while(i<maxn)bit1[i]=INT_MIN,i+=i&-i;}\nint qryi(int i){int ret=INT_MIN;while(i)ret=max(ret,bit1[i]),i-=i&-i;return ret;}\nvoid chgx(int i,int x){while(i<maxn)bit2[i]=min(bit2[i],x),i+=i&-i;}\nvoid clrx(int i){while(i<maxn)bit2[i]=INT_MAX,i+=i&-i;}\nint qryx(int i){int ret=INT_MAX;while(i)ret=min(ret,bit2[i]),i-=i&-i;return ret;}\nint mi[maxn],mx[maxn];\n\nint main(){\n    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    cin>>t;\n    while(t--){\n        int n;\n        cin>>n;\n        for(int i=1;i<=n;i++)p[i].clear();\n        for(int i=1;i<=n;i++)cin>>a[i];\n        for(int i=1;i<=n;i++){int x;cin>>x;p[x].push_back(i);}\n        bool ok=1;\n        for(int i=n;i>=1;i--){\n            if(p[a[i]].empty()){ok=0;break;}\n            r[i]=p[a[i]].back();p[a[i]].pop_back();\n        }\n        if(ok){\n            for(int i=1;i<=n;i++)clri(i),clrx(i);\n            for(int i=1;i<=n;i++){\n                int v=qryx(n-r[i]+1);\n                if(v<a[i])ok=0;\n                chgx(n-r[i]+1,a[i]);\n            }\n            for(int i=n;i>=1;i--){\n                int v=qryi(r[i]);\n                if(v>a[i])ok=0;\n                chgi(r[i],a[i]);\n            }\n        }\n        cout<<(ok?\"YES\\n\":\"NO\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1599120295,
        "uid": 62598,
        "name": "dengyaotriangle",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1187D \u3010Subarray Sorting\u3011"
    },
    {
        "content": "\u4e00\u9053\u4e0d\u9519\u7684\u601d\u7ef4\u9898\u3002\n\n\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u8003\u8651 $b$ \u7684\u6bcf\u4e00\u4f4d\uff0c\u53d1\u73b0\u6211\u4eec\u80af\u5b9a\u8981\u4ece $a$ \u91cc\u627e\u4e00\u4e2a\u548c\u8fd9\u4e00\u4f4d\u76f8\u540c\u7684\u62c9\u8fc7\u6765\u3002\u53d1\u73b0\u6211\u4eec\u80af\u5b9a\u662f\u627e\u8fd8\u6ca1\u6709\u88ab\u7528\u5230\u7684\u7b2c\u4e00\u4e2a\u3002\u6211\u4eec\u7528\u961f\u5217\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u79cd\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u53ef\u4ee5\u88ab\u62c9\u8fc7\u6765\u3002\u53d1\u73b0\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u6570\u524d\u9762\u6240\u6709\u6ca1\u7528\u8fc7\u7684\u6570\u90fd\u6bd4\u5b83\u5927\u7684\u65f6\u5019\u5b83\u624d\u80fd\u88ab\u62c9\u8fc7\u6765\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u600e\u4e48\u628a\u5b83\u62c9\u8fc7\u6765\u3002\u53ef\u4ee5\u50cf\u5192\u6ce1\u4e00\u6837\u76f8\u90bb\u4e24\u4e2a\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u8fd9\u6837\u539f\u6765\u5728\u5b83\u524d\u9762\u7684\u6240\u6709\u6570\u7684\u987a\u5e8f\u8fd8\u662f\u6ca1\u6709\u53d8\u7684\u3002\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u8fd9\u6837\u62c9\u8fc7\u6765\u4ee5\u540e\u540e\u9762\u7684\u600e\u4e48\u5904\u7406\u8fd8\u662f\u53ef\u4ee5\u600e\u4e48\u5904\u7406\uff0c\u6240\u4ee5\u8bf4\u5982\u679c\u8fd9\u6837\u4e0d\u884c\u90a3\u4e00\u5b9a\u4e0d\u884c\u3002\n\n\u6240\u4ee5\u518d\u770b\u4e00\u4e0b\u6211\u4eec\u9700\u8981\u4ec0\u4e48\u64cd\u4f5c\uff1a\n- \u7528\u961f\u5217\u7ef4\u62a4\u6bcf\u79cd\u6570\u5728 $a$ \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n- \u5224\u65ad\u4e00\u4e2a\u6570\u524d\u9762\u6240\u6709\u6ca1\u7528\u8fc7\u7684\u6570\u662f\u5426\u90fd\u6bd4\u5b83\u5927\u3002\n- \u4ece\u201c\u6ca1\u7528\u8fc7\u7684\u6570\u201d\u91cc\u5220\u6389\u4e00\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u5220\u9664\u64cd\u4f5c\uff0c\u4f60\u5199\u4e2a\u5e73\u8861\u6811\u5f53\u7136\u4e5f\u6ca1\u95ee\u9898\u3002\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e2a\u6570\u8bbe\u6210\u65e0\u7a77\u5927\u3002\u8fd9\u6837\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6700\u503c\uff0c\u76f4\u63a5\u4e0a\u7ebf\u6bb5\u6811\u5c31\u884c\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<algorithm>\n#include<queue>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n    int x=0;\n    bool f=0;\n    char c=getchar();\n    while(!isdigit(c)&&c!='-') c=getchar();\n    if(c=='-'){\n        f=1;\n        c=getchar();\n    }\n\twhile(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return f?-x:x;\n}\nconst int maxn=3e5+5;\nint n,a[maxn],b[maxn];\nqueue<int> q[maxn];\nstruct node{\n\tint l,r;\n\tnode* ch[2];\n\tint v;\n\tvoid pushup(){\n\t\tv=min(ch[0]->v,ch[1]->v);\n\t}\n\tnode(int l,int r):l(l),r(r){\n\t\tif(l<r){\n\t\t\tint mid=l+(r-l)/2;\n\t\t\tch[0]=new node(l,mid);\n\t\t\tch[1]=new node(mid+1,r);\n\t\t\tpushup();\n\t\t}\n\t\telse{\n\t\t\tch[0]=ch[1]=0;\n\t\t\tv=a[r];\n\t\t}\n\t}\n\tvoid modify(int x,int k){\n\t\tif(l==r) v=k;\n\t\telse{\n\t\t\tif(x<=ch[0]->r) ch[0]->modify(x,k);\n\t\t\telse ch[1]->modify(x,k);\n\t\t\tpushup();\n\t\t}\n\t}\n\tint query(int ql,int qr){\n\t\tif(ql==l&&qr==r) return v;\n\t\telse{\n\t\t\tif(qr<=ch[0]->r) return ch[0]->query(ql,qr);\n\t\t\telse if(ql>=ch[1]->l) return ch[1]->query(ql,qr);\n\t\t\telse return min(ch[0]->query(ql,ch[0]->r),ch[1]->query(ch[1]->l,qr));\n\t\t}\n\t}\n\t~node(){\n\t\tif(l<r){\n\t\t\tdelete ch[0];\n\t\t\tdelete ch[1];\n\t\t}\n\t}\n}*rt;\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    int t=readint();\n    while(t--){\n    \tn=readint();\n    \tfor(int i=0;i<n;i++) a[i]=readint();\n    \tfor(int i=0;i<n;i++) b[i]=readint();\n    \tfor(int i=0;i<n;i++) q[a[i]].push(i);\n    \trt=new node(0,n-1);\n    \tbool ok=1;\n    \tfor(int i=0;i<n;i++){\n    \t\tif(q[b[i]].empty()){\n    \t\t\tok=0;\n    \t\t\tbreak;\n\t\t\t}\n    \t\tif(rt->query(0,q[b[i]].front())<b[i]){\n    \t\t\tok=0;\n    \t\t\tbreak;\n\t\t\t}\n\t\t\trt->modify(q[b[i]].front(),maxn);\n\t\t\tq[b[i]].pop();\n\t\t}\n\t\tprintf(ok?\"yes\\n\":\"no\\n\");\n    \tfor(int i=1;i<=n;i++) queue<int>().swap(q[i]);\n    \tdelete rt;\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1584018837,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1187D \u3010Subarray Sorting\u3011"
    },
    {
        "content": "## \u4e00\u3001\u601d\u8def\r\n\r\n\u8fd9\u9053\u9898\u7684\u95ee\u9898\u5728\u4e8e\u53ef\u4ee5\u6392\u5e8f\u7684\u533a\u95f4\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u6211\u4eec\u9009\u62e9\u7b56\u7565\u5341\u5206\u9ebb\u70e6\uff0c\u6240\u4ee5\u601d\u8003\u4e00\u4e0b\uff0c\u53d1\u73b0\u53ef\u4ee5\u6bcf\u6b21\u53ea\u6392\u4e24\u4e2a\u6570\uff0c\u5373\u4ea4\u6362\u4ed6\u4eec\u7684\u4f4d\u7f6e\u3002\r\n\r\n\u8fd9\u6837\u505a\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u6309\u7167\u5192\u6ce1\u6392\u5e8f\u6765\u770b\uff0c\u7684\u786e\u5c31\u662f\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u6570\u7684\u4f4d\u7f6e\u3002\r\n\r\n\u63a5\u4e0b\u6765\u679a\u4e3e\u7b2c $i$ \u4e2a\u4f4d\u7f6e\uff0c\u5047\u8bbe\u524d $i-1$ \u4e2a\u4f4d\u7f6e\u90fd\u5df2\u5b8c\u6210\u4e86\u3002\r\n\r\n\u627e\u5230 $a_j$ \u7b49\u4e8e $b_i$\uff0c\u7136\u540e\u5224\u65ad\u5b83\u662f\u5426\u80fd\u88ab\u4ea4\u6362\u5230\u5f53\u524d\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5224\u65ad\u5b83\u662f\u5426\u662f $[1,j]$ \u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5220\u9664\u5b83\uff08\u56e0\u4e3a\u5df2\u7ecf\u4e0d\u5f71\u54cd\u7ed3\u679c\u4e86\uff09\u3002\r\n\r\n\u56e0\u4e3a\u6211\u4eec\u662f\u901a\u8fc7\u4ea4\u6362\u7684\u65b9\u5f0f\u628a $a_j$ \u5f52\u4f4d\u7684\uff0c\u6240\u4ee5\u5269\u4e0b\u90e8\u5206\u7684\u987a\u5e8f\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\r\n\r\n## \u4e8c\u3001\u5b9e\u73b0\r\n\r\n\u9996\u5148\u8981\u9884\u5904\u7406\u6bcf\u4e00\u4e2a $b_i$ \u5bf9\u5e94\u7684 $a_j$ \u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u6765\u5b8c\u6210\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\nfor(int i=1;i<=n;i++) q[a[i]].push(i);\r\nfor(int i=1;i<=n;i++) go[i]=q[b[i]].front(),q[b[i]].pop();\r\n```\r\n\r\n\u7136\u540e\u6765\u770b\u533a\u95f4\u6c42\u6700\u503c\uff0c\u76f4\u63a5\u4e0a\u7ebf\u6bb5\u6811\u5c31\u597d\u4e86\uff0c\u5f53\u7136\u5176\u4ed6\u968f\u4fbf\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u4e5f\u53ef\u4ee5\u3002\r\n\r\n\u6ce8\u610f\u5220\u9664\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\u3002\r\n\r\n\u8d34\u4ee3\u7801\uff08\u9644\u6ce8\u91ca\uff09\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ninline int read()\r\n{\r\n    int s=0,w=1;\r\n    char ch=getchar();\r\n    while(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\r\n    while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\r\n    return s*w;\r\n\r\n}\r\n\r\nconst int N = 3e5+10, INF = 1e9;\r\nint n,a[N],b[N],go[N];\r\nint tonga[N],tongb[N];\r\nqueue<int> q[N];\r\nstruct sgt\r\n{\r\n    int minn,l,r;\r\n}tr[N*4];\r\n\r\nvoid update(int p)\r\n{\r\n    tr[p].minn=min(tr[p*2].minn,tr[p*2+1].minn);\r\n}\r\n\r\nvoid build(int p,int l,int r)\r\n{\r\n    tr[p].l=l,tr[p].r=r;\r\n    if(l==r)\r\n    {\r\n        tr[p].minn=a[l];\r\n        return;\r\n    }\r\n    int mid=l+r>>1;\r\n    build(p*2,l,mid);\r\n    build(p*2+1,mid+1,r);\r\n    update(p);\r\n}\r\n\r\nint query(int p,int l,int r)\r\n{\r\n    if(tr[p].l>=l&&tr[p].r<=r) return tr[p].minn;\r\n    int mid=tr[p].l+tr[p].r>>1;\r\n    int minn=INF;\r\n    if(l<=mid) minn=min(minn,query(p*2,l,r));\r\n    if(r>mid) minn=min(minn,query(p*2+1,l,r));\r\n    return minn;\r\n}\r\n\r\nvoid change(int p,int x,int k)\r\n{\r\n    if(tr[p].l==tr[p].r)\r\n    {\r\n        tr[p].minn=k;\r\n        return;\r\n    }\r\n    int mid=tr[p].l+tr[p].r>>1;\r\n    if(x<=mid) change(p*2,x,k);\r\n    else change(p*2+1,x,k);\r\n    update(p);\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    T=read();\r\n    while(T--)\r\n    {\r\n        n=read();\r\n\r\n        for(int i=1;i<=n;i++) tonga[i]=tongb[i]=0;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            a[i]=read();\r\n            tonga[a[i]]++;\r\n        }\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            b[i]=read();\r\n            tongb[b[i]]++;\r\n        }\r\n        //\u4e00\u5f00\u59cb\u8981\u5148\u5224\u65ad\u6570\u5b57\u7684\u4e2a\u6570\u662f\u5426\u4e00\u4e00\u5bf9\u5e94\r\n        int fl=1;\r\n        for(int i=1;i<=n;i++)\r\n            if(tonga[i]!=tongb[i])\r\n            {\r\n                fl=0;\r\n                break;\r\n            }\r\n        if(!fl)\r\n        {\r\n            puts(\"NO\");\r\n            continue;\r\n        }\r\n\r\n        for(int i=1;i<=n;i++) q[a[i]].push(i);\r\n        for(int i=1;i<=n;i++) go[i]=q[b[i]].front(),q[b[i]].pop();\r\n        \r\n        build(1,1,n);//\u5efa\u6811\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            if(query(1,1,go[i])!=a[go[i]])//\u5982\u679c\u5b83\u4e0d\u662f\u6700\u5c0f\u503c\uff0c\u90a3\u4ed6\u5c31\u65e0\u6cd5\u5f52\u4f4d\uff0c\u76f4\u63a5\u9000\u51fa\r\n            {\r\n                fl=0;\r\n                break;\r\n            }\r\n            change(1,go[i],INF);//\u5220\u9664\r\n        }\r\n        if(!fl) puts(\"NO\");\r\n        else puts(\"YES\");\r\n    }\r\n    return 0;\r\n}\r\n\r\n```\r\n",
        "postTime": 1669085860,
        "uid": 228778,
        "name": "H2O_TX",
        "ccfLevel": 6,
        "title": "CF1187D Subarray Sorting \u9898\u89e3"
    }
]