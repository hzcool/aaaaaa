[
    {
        "content": "## \u9898\u89e3 CF1146E Hot is Cold\n\n\u56e0\u4e3a\u662f\u5bf9\u6574\u4e2a\u5e8f\u5217\u64cd\u4f5c\uff0c\u6240\u4ee5\u5e8f\u5217\u91cc\u76f8\u540c\u7684\u503c\uff0c\u6700\u540e\u4f1a\u53d8\u6210\u7684\u7ed3\u679c\u4e5f\u662f\u76f8\u540c\u7684\u3002\u4e8e\u662f\u8fd9\u4e2a\u5e8f\u5217\u5c31\u4e0d\u91cd\u8981\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u503c\u7ef4\u62a4\uff0c\u5b83\u6700\u7ec8\u4f1a\u53d8\u6210\u4ec0\u4e48\u3002\u6c42\u7b54\u6848\u65f6\uff0c\u4f9d\u6b21\u8f93\u51fa\u5e8f\u5217\u91cc\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u503c\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u8003\u8651\u5bf9\u503c\u7ef4\u62a4\u7b54\u6848\u3002\u5148\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u8303\u56f4\u662f$[-10^5,10^5]$\uff0c\u4e5f\u5c31\u662f\u6574\u4e2a\u503c\u57df\uff08\u5728\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u56e0\u4e3a$\\texttt{C++}$\u4e0b\u6807\u4e0d\u80fd\u4e3a\u8d1f\uff0c\u6240\u4ee5\u53ef\u4ee5\u6574\u4f53\u52a0$10^5+1$\uff09\u3002\n\n\u8003\u8651\u4e00\u6b21\u64cd\u4f5c\uff0c\u4ee5$>$\u4e3a\u4f8b\uff08$<$\u662f\u540c\u7406\u7684\uff09\u3002\n\n- \u5982\u679c$x\\geq 0$\u3002\n  - \u5bf9\u4e8e\u521d\u59cb\u503c\u4e3a$[x+1,10^5]$\u548c$[-10^5,-x-1]$\u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u6570\uff0c\u5982\u679c\u5b83\u5728\u64cd\u4f5c\u524d\u662f\u6b63\u7684\uff0c\u5b83\u4e00\u5b9a$>x$\uff0c\u6240\u4ee5\u4f1a\u53d8\u6210\u8d1f\u7684\uff1b\u5982\u679c\u5b83\u4e4b\u524d\u662f\u8d1f\u7684\uff0c\u90a3\u5b83\u4e00\u5b9a$<x$\uff0c\u6240\u4ee5\u4e0d\u53d8\u3002\u56e0\u6b64\u53d1\u73b0\u8fd9\u4e9b\u6570\uff0c**\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u53d8\u6210\u8d1f\u7684**\uff01\u76f4\u63a5\u505a\u533a\u95f4\u8986\u76d6\u5373\u53ef\u3002\n  - \u5bf9\u4e8e\u521d\u59cb\u503c\u4e3a$[-x,x]$\u7684\u6570\uff0c\u5b83\u4eec\uff08\u65e0\u8bba\u6b63\u8d1f\uff09\u6c38\u8fdc\u4e0d\u53ef\u80fd$>x$\uff0c\u6240\u4ee5\u8fd9\u6b21\u64cd\u4f5c\u5bf9\u5b83\u4eec\u6ca1\u6709\u5f71\u54cd\u3002\n- \u5982\u679c$x<0$\u3002\n  - \u5bf9\u4e8e\u521d\u59cb\u503c\u4e3a$[x+1,-x-1]$\u7684\u6570\uff0c\u65e0\u8bba\u5728\u64cd\u4f5c\u524d\u662f\u6b63\u662f\u8d1f\uff0c\u4e00\u5b9a$<x$\uff0c\u6240\u4ee5\u76f4\u63a5\u53d6\u53cd\u3002\n  - \u5bf9\u4e8e\u521d\u59cb\u503c\u4e3a$[-10^5,x]$\u548c$[-x,10^5]$\u7684\u6570\uff0c\u5728\u64cd\u4f5c\u4e4b\u524d\u5982\u679c\u4e3a\u8d1f\uff0c\u5219\u53d6\u53cd\u53d8\u6210\u6b63\u7684\uff1b\u5426\u5219\u4e0d\u53d8\u3002\u6240\u4ee5\u76f4\u63a5\u505a\u533a\u95f4\u8986\u76d6\u5373\u53ef\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u5c31\u662f\u8981\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u652f\u6301\u533a\u95f4\u53d6\u53cd\u548c\u533a\u95f4\u8986\u76d6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//problem:CF1146E\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n\ntemplate<typename T>inline void ckmax(T& x,T y){x=(y>x?y:x);}\ntemplate<typename T>inline void ckmin(T& x,T y){x=(y<x?y:x);}\n\nconst int MAXN=1e5,MAXV=1e5;\nint trans(int x){\n\treturn x+MAXV+1;\n}\nint revtrans(int x){\n\treturn x-MAXV-1;\n}\nint n,q,a[MAXN+5],ans[MAXV*2+5];\nstruct SegmentTree{\n\tstatic const int SIZE=MAXV*2+1;\n\tint rev[SIZE*4+5],cov[SIZE*4+5];\n\tvoid push_down(int p){\n\t\tif(cov[p]!=0){\n\t\t\tcov[p<<1]=cov[p];\n\t\t\trev[p<<1]=0;\n\t\t\tcov[p<<1|1]=cov[p];\n\t\t\trev[p<<1|1]=0;\n\t\t\tcov[p]=0;\n\t\t}\n\t\tif(rev[p]){\n\t\t\trev[p<<1]^=1;\n\t\t\trev[p<<1|1]^=1;\n\t\t\trev[p]=0;\n\t\t}\n\t}\n\tvoid modify_rev(int p,int l,int r,int ql,int qr){\n\t\tif(ql<=l && qr>=r){\n\t\t\trev[p]^=1;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tpush_down(p);\n\t\tif(ql<=mid)\n\t\t\tmodify_rev(p<<1,l,mid,ql,qr);\n\t\tif(qr>mid)\n\t\t\tmodify_rev(p<<1|1,mid+1,r,ql,qr);\n\t}\n\tvoid modify_cov(int p,int l,int r,int ql,int qr,int x){\n\t\tif(ql<=l && qr>=r){\n\t\t\trev[p]=0;\n\t\t\tcov[p]=x;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tpush_down(p);\n\t\tif(ql<=mid)\n\t\t\tmodify_cov(p<<1,l,mid,ql,qr,x);\n\t\tif(qr>mid)\n\t\t\tmodify_cov(p<<1|1,mid+1,r,ql,qr,x);\n\t}\n\tvoid getans(int p,int l,int r){\n\t\tif(l==r){\n\t\t\tif(cov[p]!=0){\n\t\t\t\tans[l]=cov[p]*abs(revtrans(l));\n\t\t\t}\n\t\t\telse{\n\t\t\t\tans[l]=revtrans(l);\n\t\t\t}\n\t\t\tif(rev[p]!=0){\n\t\t\t\tans[l]=-ans[l];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tpush_down(p);\n\t\tgetans(p<<1,l,mid);\n\t\tgetans(p<<1|1,mid+1,r);\n\t}\n\tSegmentTree(){}\n}T;\n\nint main() {\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>a[i];\n\tfor(int tq=1;tq<=q;++tq){\n\t\tchar s;int x;\n\t\tcin>>s>>x;\n\t\tif(s=='>'){\n\t\t\tif(x>=0){\n\t\t\t\tif(x<MAXV){\n\t\t\t\t\tT.modify_cov(1,1,T.SIZE,trans(x+1),trans(MAXV),-1);\n\t\t\t\t\tT.modify_cov(1,1,T.SIZE,trans(-MAXV),trans(-x-1),-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tT.modify_rev(1,1,T.SIZE,trans(x+1),trans(-x-1));\n\t\t\t\tT.modify_cov(1,1,T.SIZE,trans(-x),trans(MAXV),-1);\n\t\t\t\tT.modify_cov(1,1,T.SIZE,trans(-MAXV),trans(x),-1);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(x<=0){\n\t\t\t\tif(x>-MAXV){\n\t\t\t\t\tT.modify_cov(1,1,T.SIZE,trans(-MAXV),trans(x-1),1);\n\t\t\t\t\tT.modify_cov(1,1,T.SIZE,trans(-x+1),trans(MAXV),1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tT.modify_rev(1,1,T.SIZE,trans(-x+1),trans(x-1));\n\t\t\t\tT.modify_cov(1,1,T.SIZE,trans(x),trans(MAXV),1);\n\t\t\t\tT.modify_cov(1,1,T.SIZE,trans(-MAXV),trans(-x),1);\n\t\t\t}\n\t\t}\n\t}\n\tT.getans(1,1,T.SIZE);\n\tfor(int i=1;i<=n;++i){\n\t\tcout<<ans[trans(a[i])]<<\" \";\n\t}\n\tcout<<endl;\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1595600964,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1146E \u3010Hot is Cold\u3011"
    },
    {
        "content": "\u7531\u4e8e $a$ \u7684\u503c\u57df\u5f88\u5c0f\uff08$[-10^5,10^5]$\uff09\u800c\u4e14\u6240\u6709\u64cd\u4f5c\u5747\u5bf9\u6574\u4e2a\u6570\u5217\u8fdb\u884c\uff0c\u6240\u4ee5\u53ef\u4ee5\u6784\u5efa\u7ebf\u6bb5\u6811\u7ef4\u62a4 $[-10^5,10^5]$ \u4e2d\u6bcf\u4e2a\u6570\u6700\u540e\u7684\u7ed3\u679c\uff0c\u7136\u540e\u518d\u5bf9\u6bcf\u4e00\u4e2a $a$ \u4e2d\u7684\u6570\u5229\u7528\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u6620\u5c04\u3002\n\n~~\u5b9e\u9645\u4e0a\u503c\u57df\u7ee7\u7eed\u5f00\u5927\u4e5f\u53ef\u4ee5\u79bb\u6563\u5316\u7136\u540e\u505a/\u52a8\u6001\u5f00\u70b9\u505a\u3002~~\n\n\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u5982\u679c\u662f $>x$\uff08$x>0$\uff09\uff1a  \n\u533a\u95f4 $[x+1,\\infty)$ \u4e2d\u7684\u6570\u5982\u679c\u7b26\u53f7\u7ffb\u8f6c\u4e0d\u53d8\uff0c\u5426\u5219\u88ab\u7ffb\u8f6c\uff0c\u5373\u5168\u90e8\u53d8\u4e3a\u8d1f\u6570\u3002\u533a\u95f4 $(-\\infty,-x-1]$ \u4e2d\u7684\u6570\u540c\u7406\u5168\u90e8\u53d8\u4e3a\u8d1f\u6570\u3002  \n\n\u5982\u679c\u662f $>x$\uff08$x<0$\uff09:  \n\u533a\u95f4 $(-\\infty,x-1]$ \u7684\u6570\u5982\u679c\u7b26\u53f7\u7ffb\u8f6c\u4f1a\u518d\u6b21\u7ffb\u8f6c\uff0c\u5426\u5219\u4e0d\u53d8\uff0c\u5373\u5168\u90e8\u53d8\u4e3a\u8d1f\u6570\u3002\u533a\u95f4 $[-x+1,\\infty)$ \u4e2d\u7684\u6570\u540c\u7406\u5168\u90e8\u53d8\u4e3a\u8d1f\u6570\u3002  \n\u800c\u533a\u95f4 $[x+1,-x-1]$ \u4e2d\u7684\u6570\u4e00\u5b9a\u4f1a\u88ab\u7ffb\u8f6c\u3002\n\n\u5982\u679c\u662f $<x$\uff08$x>0$\uff09\uff1a  \n\u540c\u7406\u53ef\u5f97\u533a\u95f4 $(-\\infty,-x-1]$ \u4e0e $[x+1,\\infty)$ \u4e2d\u7684\u5168\u90e8\u53d8\u4e3a**\u6b63**\u6570\u3002  \n\u533a\u95f4 $[-x+1,x-1]$ \u4e00\u5b9a\u4f1a\u88ab\u7ffb\u8f6c\u3002\n\n\u5982\u679c\u662f $<x$\uff08$x<0$\uff09\uff1a  \n\u540c\u7406\u53ef\u5f97\u533a\u95f4 $(-\\infty,x-1]$ \u4e0e $[-x+1,\\infty)$ \u4e2d\u7684\u5168\u90e8\u53d8\u4e3a\u6b63\u6570\u3002\n\n\u7efc\u4e0a\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u7528\u82e5\u5e72\u6b21\u533a\u95f4\u7ffb\u8f6c\u548c\u82e5\u5e72\u6b21\u533a\u95f4\u8d4b\u503c\u5f97\u5230\u3002\u53ef\u4ee5\u8003\u8651\u5230\u7ebf\u6bb5\u6811\u3002\uff08\u677f\u5b50\u4e0d\u7528\u8bb2\u4e86\u5427\uff09\n\n\uff08\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u8986\u76d6\u4e0e\u7ffb\u8f6c\u53cc lazy tag\uff0c\u4f46\u662f\u7531\u4e8e\u4e24\u4e2a tag \u4e92\u65a5\u6240\u4ee5\u7406\u8bba\u4e0a\u4e00\u4e2a\u5373\u53ef\uff09\n\n\u849f\u84bb\u4ee3\u7801\u5982\u4e0b\uff08\u6700\u5f00\u59cb 2.83K \u4e3a\u4e86\u53ef\u8bfb\u6027\u4e00\u8def\u538b\u5230 1.97K\uff09\uff1a\n\n```c++\n#include <cstdio>\nconst int Q=100010,N=300010;\nstruct seg\n{\n    int l,r,lazy;bool flip;\n}tree[N*4+10000];\nint n,m,a[N],f[N];\nvoid FLIP(int o) {if(tree[o].lazy)tree[o].lazy*=-1;else tree[o].flip=!tree[o].flip;}\nvoid SET(int x,int o) {tree[o].flip=false;tree[o].lazy=x;}\nvoid pushdown(int o)\n{\n    int &x=tree[o].lazy;\n    if(tree[o].flip) {FLIP(o<<1);FLIP(o<<1|1);}\n    if(x){SET(x,o<<1);SET(x,o<<1|1);}\n    tree[o].flip=false;x=0;\n}\nvoid flip(int l,int r,int o=1)\n{\n    if(tree[o].l==l&&tree[o].r==r){FLIP(o);return;}\n    int mid=(tree[o].l+tree[o].r)/2;\n    pushdown(o);\n    if(r<=mid) flip(l,r,o<<1);\n    else if(l>mid) flip(l,r,o<<1|1);\n    else\n    {\n        flip(l,mid,o<<1);\n        flip(mid+1,r,o<<1|1);\n    }\n}\nvoid set(int l,int r,int x,int o=1)\n{\n    if (tree[o].l==l&&tree[o].r==r){SET(x,o);return;}\n    int mid=(tree[o].l+tree[o].r)/2;\n    pushdown(o);\n    if(r<=mid) set(l,r,x,o<<1);\n    else if(l>mid) set(l,r,x,o<<1|1);\n    else\n    {\n        set(l,mid,x,o<<1);\n        set(mid+1,r,x,o<<1|1);\n    }\n}\nvoid mktree(int l,int r,int o=1)\n{\n    tree[o]=seg{l,r,l==r?(l<Q?-1:1):0,false};\n    if (l != r)\n    {\n        int mid=(l+r)/2;\n        mktree(l,mid,o<<1);\n        mktree(mid+1,r,o<<1|1);\n    }\n}\nint query(int x,int o=1)\n{\n    if (tree[o].l==x&&tree[o].r==x) return tree[o].lazy;\n    int mid=(tree[o].l+tree[o].r)/2;\n    pushdown(o);\n    return x<=mid?query(x,o<<1):query(x,o<<1|1);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++) scanf(\"%d\",a+i);\n    //\u56e0\u4e3a\u7ebf\u6bb5\u6811\u65e0\u6cd5\u5904\u7406\u8d1f\u6570\u5168\u90e8\u5411\u53f3\u5e73\u79fbQ\n    mktree(0,2*Q);\n    while(m--)\n    {\n        char ch;int x;\n        scanf(\" %c%d\",&ch,&x);\n        if(ch=='>')\n        {\n            if(x>=0){set(0,Q-x-1,-1);set(Q+x+1,2*Q,-1);}\n            else{flip(Q+x+1,Q-x-1);set(0,Q+x,-1); set(Q-x,2*Q,-1);}\n        }\n        if(ch=='<')\n        {\n            if(x<=0){set(0,Q+x-1,1);set(Q-x+1,2*Q,1);}\n            else{flip(Q-x+1, Q+x-1);set(0,Q-x,1);set(Q+x,2*Q,1);}\n        }\n    }\n    for(int i=0;i<n;i++)\n        printf(\"%d \",(a[i]<0?-a[i]:a[i])*query(Q+a[i]));\n}\n```\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.com.cn/record/71932907)",
        "postTime": 1647764819,
        "uid": 298051,
        "name": "xkcdjerry",
        "ccfLevel": 7,
        "title": "CF1146E \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u597d\u5199\u7684\u65b9\u6cd5\n\n\u6ce8\u610f\u5230\u9898\u76ee\u91cc $ai$ \u7684\u8303\u56f4\u5728 $[-1e5,1e5]$ \u4e4b\u95f4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\u636e\u8303\u56f4\u3002\u8003\u8651\u6bcf\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6211\u4eec\u90fd\u4f1a\u628a $>x$ \u7684\u6570\u53d6\u8d1f\uff0c\u6216\u8005\u662f\u628a $<x$ \u7684\u6570\u53d6\u8d1f\u3002\u5982\u679c\u6211\u4eec\u4ece\u7ed9\u5b9a\u7684\u6570\u5217\u91cc\u627e\u5230\u8fd9\u4e9b\u6570\u53bb\u6539\u53d8\u4ed6\u4eec\u7684\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4f1a\u5341\u5206\u7206\u70b8\u3002\n\n\u6362\u79cd\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb\u7ef4\u62a4 $[-1e5,1e5]$ \u4e4b\u95f4\u7684\u6bcf\u4e2a\u6570\u5728\u8fdb\u884c\u8fd9\u4e9b\u64cd\u4f5c\u4ee5\u540e\u4f1a\u53d8\u6210\u591a\u5c11\uff0c\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u53ea\u9700\u8981\u5bf9\u5e94\u5730\u53bb\u67e5\u627e\u8fd9\u4e2a\u6570\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a\u6570\u88ab\u53d6\u53cd\u7684\u72b6\u6001\u662f $-1$ \uff0c\u6ca1\u88ab\u53d6\u53cd\u7684\u72b6\u6001\u662f $1$ \u3002\n\n\u8003\u8651 $>x$ \u7684\u64cd\u4f5c\n\n\u5047\u8bbe $x>0$ \u90a3\u4e48\uff0c\u5728 $[x+1,1e5]$ \u4e4b\u95f4\u7684\u8fd9\u4e9b\u6570\u72b6\u6001\u90fd\u4f1a\u53d8\u6210 $-1$ \uff0c\u8fd9\u662f\u5f88\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u672c\u8eab\u72b6\u6001\u662f $1$ \u7684\u6570\u5927\u4e8e\u5b83\uff0c\u4f1a\u53d8\u6210 $-1$ \uff0c\u800c\u672c\u8eab\u72b6\u6001\u662f $-1$ \u7684\u6570\u5219\u5df2\u7ecf\u5c0f\u4e8e\u5b83\uff0c\u4e0d\u4f1a\u518d\u6539\u53d8\u4e86\u3002\u540c\u7406\uff0c\u5728 $[-1e5,x-1]$ \u4e4b\u95f4\u7684\u8fd9\u4e9b\u6570\u90fd\u4f1a\u53d8\u6210 $1$ \u3002\n\n\u5047\u8bbe $x<0$ \u90a3\u4e48\uff0c\u5728 $[x+1,-x-1]$ \u4e4b\u95f4\u7684\u8fd9\u6bb5\u6570\u4e0d\u7ba1\u600e\u4e48\u6539\u53d8\u90fd\u4f1a $>x$ \uff0c\u4e5f\u5c31\u662f\u4ed6\u4eec\u7684\u72b6\u6001\u90fd\u4f1a\u4e58\u4e0a $-1$ \u3002\u800c $[x,1e5]$ \u4ee5\u53ca $[-1e5,x]$ \u4e4b\u95f4\u8fd9\u4e9b\u6570\u5c31\u548c\u4e0a\u9762\u4e00\u6837\u4e86\u3002\n\n\u540c\u7406\uff0c $<x$ \u7684\u64cd\u4f5c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u597d\u5730\u60f3\u51fa\u6765\u3002\n\n\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u600e\u4e48\u7ef4\u62a4\u4e86\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u8d4b\u503c\u548c\u533a\u95f4\u53d6\u53cd\u7684\u6570\u636e\u7ed3\u6784\uff0c $ODT$ \u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u51b3\u8fd9\u4e00\u7c7b\u95ee\u9898\u3002\n\n\u9700\u8981\u6ce8\u610f\u5230\u7684\u662f\u6211\u4eec\u7684\u5143\u7d20\u503c\u57df\u5f88\u5c0f\uff0c\u53ea\u6709 $-1,1$ \uff0c\u6240\u4ee5\u6211\u4eec\u7684\u7a0b\u5e8f\u590d\u6742\u5ea6\u8981\u9760\u5b9e\u65f6\u7684\u533a\u95f4\u5408\u5e76\u6765\u4fdd\u8bc1\u3002\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#include <bits/stdc++.h>\nusing namespace std;\n\ntemplate <class T>\ninline bool read(T &ret)\n{\n    char c;\n    int sgn;\n    if (c = getchar(), c == EOF)\n    {\n        return 0;\n    }\n    while (c != '-' && (c < '0' || c > '9'))\n    {\n        c = getchar();\n    }\n    sgn = (c == '-') ? -1 : 1;\n    ret = (c == '-') ? 0 : (c - '0');\n    while (c = getchar(), c >= '0' && c <= '9')\n    {\n        ret = ret * 10 + (c - '0');\n    }\n    ret *= sgn;\n    return 1;\n}\n\ntemplate <class T>\ninline void write(T x)\n{\n    if (x > 9)\n    {\n        write(x / 10);\n    }\n    putchar(x % 10 + '0');\n}\n\nconst int MAXN=1e6+10;\n\nstruct node\n{\n    int l,r;\n    mutable int v;\n    node(){}\n    node(int L,int R=-1,int V=0):l(L),r(R),v(V){}\n    bool operator <(const node &o) const\n    {\n        return l<o.l;\n    }\n};\n\nset<node> s;\n\ninline void merge(int l)\n{\n    set<node>::iterator it1,it2,it3;\n    it2=s.lower_bound(l);\n    if(it2==s.begin())\n        return;\n    it1=it2,it3=it2;\n    --it1,++it3;\n    bool pd3=(it3!=s.end());\n    if(pd3&&it1->v==it2->v&&it2->v==it3->v&&it1->v==it3->v)\n    {\n        int l=it1->l,r=it3->r,v=it2->v;\n        s.erase(it1,++it3);\n        s.insert(node(l,r,v));\n    }\n    else if(it1->v==it2->v)\n    {\n        int l=it1->l,r=it2->r,v=it2->v;\n        s.erase(it1,++it2);\n        s.insert(node(l,r,v));\n    }\n    else if(pd3&&it2->v==it3->v)\n    {\n        int l=it2->l,r=it3->r,v=it2->v;\n        s.erase(it2,++it3);\n        s.insert(node(l,r,v));\n    }\n}\n\ninline set<node>::iterator split(int pos)\n{\n    set<node>::iterator it=s.lower_bound(node(pos));\n    if(it!=s.end()&&it->l==pos) return it;\n    --it;\n    int L=it->l,R=it->r,V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V));\n    return s.insert(node(pos,R,V)).first;\n}\n\ninline void assignval(int l,int r,int v)\n{\n    set<node>::iterator itr=split(r+1),itl=split(l);\n    s.erase(itl,itr);\n    s.insert(node(l,r,v));\n}\n\ninline void reverse(int l,int r)\n{\n    set<node>::iterator itr=split(r+1),itl=split(l);\n    for(;itl!=itr;++itl)\n    {\n        itl->v=-itl->v;\n    }\n}\n\nint a[MAXN];\nint n,q;\n\nint main()\n{\n    read(n),read(q);\n    for(int i=1;i<=n;++i)\n        read(a[i]);\n    s.insert(node(-100000,100000,1));\n    while(q--)\n    {\n        char op;\n        cin>>op;\n        int sr;\n        read(sr);\n        if(op=='>')\n        {\n            if(sr<0)\n            {\n                reverse(sr+1,-sr-1);\n                assignval(-100000,sr,1);\n                assignval(-sr,100000,-1);\n            }\n            else\n            {\n                assignval(sr+1,100000,-1);\n                assignval(-100000,-sr-1,1);\n            }\n            merge(sr+1);\n            merge(-sr-1);\n        }\n        else\n        {\n            if(sr>0)\n            {\n                reverse(-sr+1,sr-1);\n                assignval(sr,100000,1);\n                assignval(-100000,-sr,-1);\n            }\n            else\n            {\n                assignval(-100000,sr-1,-1);\n                assignval(-sr+1,100000,1);\n            }\n            merge(-sr+1);\n            merge(sr-1);\n        }\n    }\n    for(int i=1;i<=n;++i)\n    {\n        a[i]*=split(a[i])->v;\n        if(a[i]<0)\n        {\n            putchar('-');\n            a[i]=-a[i];\n        }\n        write(a[i]);\n        putchar(' ');\n    }\n    return 0;\n}\n```\n",
        "postTime": 1571818958,
        "uid": 102473,
        "name": "Setsugesuka",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1146E \u3010Hot is Cold\u3011"
    },
    {
        "content": "\u88f8\u7684\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u7531\u4e8e\u6bcf\u4e2a\u503c\u53ea\u4f1a\u53d8\u6210\u7edd\u5bf9\u503c\u76f8\u540c\u7684\u503c\uff0c\u8003\u8651\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u7edd\u5bf9\u503c\u7684\u60c5\u51b5\u3002\u8bb00\u4e3a\u4e0d\u6539\u53d8\uff0c1\u4e3a\u6b63\u53d8\u8d1f\uff0c2\u4e3a\u8d1f\u53d8\u6b63\uff0c3\u4e3a\u6b63\u8d1f\u4ea4\u6362\uff0c\u7531\u4e8e\u4fee\u6539\u9762\u5411\u6574\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e2a\u7edd\u5bf9\u503c\u7684\u53d8\u5316\u90fd\u662f\u8fd9\u56db\u79cd\u4e4b\u4e00\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4lazy\u6807\u8bb0\u5373\u53ef\u3002\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\nconst int N=1e5+2,M=4e5+2;\nint l[M],r[M],lz[M],ys[N],a[N];\nint n,m,q,i,x,y,z,c,fh;\ninline void read(int &x)\n{\n\tc=getchar();\n\twhile ((c<48)||(c>57))\n\t{\n\t\tif (c=='-') {c=getchar();fh=1;break;}\n\t\tc=getchar();\n\t}\n\tx=c^48;c=getchar();\n\twhile ((c>=48)&&(c<=57))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n\tif (fh) x=-x,fh=0;\n}\ninline int ab(int x)\n{\n\tif (x>0) return x;\n\treturn -x;\n}\nvoid build(int x)\n{\n\twhile (l[x]<r[x])\n\t{\n\t\tl[c=x<<1]=l[x];r[c]=l[x]+r[x]>>1;\n\t\tl[c|1]=r[c]+1;r[c|1]=r[x];\n\t\tbuild(c);x=x<<1|1;\n\t}\n\tys[l[x]]=x;\n}\ninline void pushdown(register int x)\n{\n\tif ((lz[x])&&(l[x]<r[x]))\n\t{\n\t\tregister int c=x<<1;\n\t\tif (lz[x]!=3)\n\t\t{\n\t\t\tlz[c]=lz[x];\n\t\t\tc|=1;\n\t\t\tlz[c]=lz[x];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlz[c]^=3;lz[c|1]^=3;\n\t\t}\n\t\tlz[x]=0;\n\t}\n}\nvoid mdf(int x)\n{\n\tpushdown(x);\n\tif ((z<=l[x])&&(r[x]<=y))\n\t{\n\t\tif ((l[x]<r[x])||(c!=3)) lz[x]=c; else lz[x]^=3; return;\n\t}\n\tif (z<=r[x<<1]) mdf(x<<1);\n\tif (y>r[x<<1]) mdf(x<<1|1);\n}\nvoid allpush(int x)\n{\n\twhile (l[x]<r[x])\n\t{\n\t\tpushdown(x);\n\t\tallpush(x<<1);x=x<<1|1;\n\t}\n}\nint main()\n{\n\tread(n);read(q);\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tread(a[i]);\n\t\tm=max(m,ab(a[i]));\n\t}\n\tif (m==0) {for (i=1;i<=n;i++) printf(\"0 \");return 0;}\n\tr[l[1]=1]=m;build(1);\n\twhile (q--)\n\t{\n\t\tc=getchar();\n\t\twhile ((c!='<')&&(c!='>')) c=getchar();\n\t\tif (c=='<')\n\t\t{\n\t\t\tread(x);\n\t\t\tif (x<0)\n\t\t\t{\n\t\t\t\tc=2;z=-x+1;y=m;if (z<=y) mdf(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc=3;z=1;y=x-1;if (z<=y) mdf(1);\n\t\t\t\tc=2;z=x;y=m;if (z<=y) mdf(1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tread(x);\n\t\t\tif (x>0)\n\t\t\t{\n\t\t\t\tc=1;z=x+1;y=m;if (z<=y) mdf(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc=3;z=1;y=-x-1;if (z<=y) mdf(1);\n\t\t\t\tc=1;z=-x;y=m;if (z<=y) mdf(1);\n\t\t\t}\n\t\t}\n\t}\n\tallpush(1);\n\tfor (i=1;i<=n;i++) if ((x=a[i])<0)\n\t{\n\t\tif (2^lz[ys[ab(x)]]&2) putchar('-');printf(\"%d \",-x);\n\t}\n\telse if (x==0) printf(\"0 \");\n\telse \n\t{\n\t\tif (lz[ys[ab(x)]]&1) putchar('-');printf(\"%d \",x);\n\t}\n}\n```\n",
        "postTime": 1556200926,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1146E \u3010Hot is Cold\u3011"
    }
]