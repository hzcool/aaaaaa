[
    {
        "content": "\u56fd\u5916\u9898\u5c31\u662f....\u5999\u554a\uff1f\u4e0d\u7528\u4efb\u4f55\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u5374\u628a\u4f60\u6574\u7684\u8981\u6b7b\u8981\u6d3b\u3002\n\n\u770b\u5230\u8fd9\u4e2a\u9898\u7b2c\u4e00\u53cd\u5e94\u5c31\u60f3\u5230\u4e86\u4e8c\u7ef4\u533a\u95f4 $\\text{mex}$\u3002\u5404\u79cd\u60f3\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u9b54\u6539\u4f46\u60f3\u4e0d\u51fa\u6765\u4e8e\u662f\u70b9\u5f00\u9898\u89e3--\u4e00\u7247\u7a7a\u767d\u3002\u4e8e\u662f\u4e4e\u4e0d\u5f97\u4e0d\u6253\u5f00\u751f\u8349\u673a\u7136\u540e\u6b65\u5165\u4e86CF\u9898\u89e3\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5982\u4f55\u679a\u4e3e\u6b63\u65b9\u5f62\u3002\u56e0\u4e3a\u6b63\u65b9\u5f62\u7684\u5bf9\u89d2\u7ebf\u5341\u5206\u7684\u201c\u7aef\u6b63\u201d\uff0c\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u7528\u5bf9\u89d2\u7ebf\u53bb\u679a\u4e3e\u6b63\u65b9\u5f62\u3002\u540c\u65f6\u7531\u4e8e $\\text{mex}$ \u5177\u6709\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u53cc\u6307\u9488\u7684\u65b9\u6cd5\u6765\u7ef4\u62a4\u6700\u5927\u7684\u975e\u6cd5\u6b63\u65b9\u5f62\uff08\u5f53\u7136\u6700\u5c0f\u7684\u5408\u6cd5\u6b63\u65b9\u5f62\u4e5f\u53ef\u4ee5\uff09\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u9996\u5148\u5728\u5916\u5c42\u679a\u4e3e\u6bcf\u4e00\u6761\u5bf9\u89d2\u7ebf\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u5bf9\u89d2\u7ebf\u5728\u5185\u5c42\u5faa\u73af\u679a\u4e3e\u6b63\u65b9\u5f62\u7684\u53f3\u4e0b\u89d2\uff0c\u540c\u65f6\u4f9d\u8d56\u5355\u8c03\u6027\u7ef4\u62a4\u5de6\u4e0a\u89d2\u3002\n\n\u5982\u4f55\u52a8\u6001\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\u7684 $\\text{mex}$ \u5462\uff1f**\u6216\u8bb8**\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u6765\u7c97\u7565\u7684\u4f30\u8ba1\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\u5bf9\u89d2\u7ebf\u6709 $n+m$ \u6761\uff0c\u6bcf\u6761\u5bf9\u89d2\u7ebf\u8981\u5bf9 $nm$ \u4e2a\u5355\u5143\u683c\u626b\u63cf\uff0c\u603b\u5171\u4f1a\u52a0\u5165 $k$ \u4e2a\u6012\u6c14\u503c......\u8fd9\u662f\u8981T\u98de\u554a\u3002\u4f46\u662f\uff0c\u4f46\u662f\uff0c\u6b63\u65b9\u5f62\u7684\u679a\u4e3e\u5176\u5b9e\u6709\u4e00\u4e2a\u975e\u5e38\u795e\u5999\u7684\u6027\u8d28\uff1a\u5728\u4e0d\u4f18\u79c0\u7684\u5b9e\u73b0\u4e0b\uff0c\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u6267\u884c\u52a0\u5165\u64cd\u4f5c $\\min(n,m)$ \u6b21\u3002\u7b80\u5355\u7684\u5206\u6790\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u4e00\u6761\u5bf9\u89d2\u7ebf\uff0c\u5b83\u6700\u52a3\u60c5\u51b5\u662f\u628a\u4ee5\u5b83\u4e3a\u5bf9\u89d2\u7ebf\u7684\u6b63\u65b9\u5f62\u5185\u6240\u6709\u70b9\u90fd\u626b\u4e86\u4e00\u904d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u6b63\u65b9\u5f62\u8fb9\u957f\u662f\u591a\u5c11\u5462\uff1f$\\min(n,m)$\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6700\u591a\u4f1a\u88ab\u591a\u5c11\u4e2a\u6b63\u65b9\u5f62\u8986\u76d6\u5462\uff1f\u663e\u7136\u4e5f\u662f $\\min(n,m)$\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u7684\u4fee\u6539\u6b21\u6570\u662f $k\\cdot\\min(n,m)$\uff0c\u67e5\u8be2\u6b21\u6570\u662f $nm$\u3002\u518d\u5e26\u4e0a\u7ebf\u6bb5\u6811\u4fee\u6539\u548c\u67e5\u8be2\u7684\u590d\u6742\u5ea6\uff0c\u6700\u52a3\u60c5\u51b5\u4e0b\u5927\u6982\u662f $1e6\\times200\\times\\log_21e6+4e4\\times\\log_21e6\\approx4e9$\uff0c\u4e0d\u592a\u80fd\u8fc7\u3002\u6211\u4eec\u7684\u4fee\u6539\u590d\u6742\u5ea6\u548c\u67e5\u8be2\u590d\u6742\u5ea6\u5e76\u4e0d\u662f\u5f88\u5747\u8861\uff0c\u4e0d\u59a8\u8003\u8651\u4f7f\u7528\u4e00\u79cd\u4fee\u6539\u590d\u6742\u5ea6\u66f4\u4f4e\uff0c\u5e76\u9002\u5f53\u653e\u5bbd\u67e5\u8be2\u590d\u6742\u5ea6\u7684\uff0c\u66f4\u52a0\u7b80\u5355\u7684\u65b9\u6cd5\u53bb\u7ef4\u62a4 $\\text{mex}$\uff1a\u5206\u5757\u3002\u4fee\u6539 $O(1)$ \u67e5\u8be2 $O(\\sqrt k)$\u3002\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002",
        "postTime": 1667268777,
        "uid": 237893,
        "name": "donkeys",
        "ccfLevel": 5,
        "title": "\u51e0\u4e4e\u6ca1\u6709ds\u7684\u6bd2\u7624\u9898"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u5148\u679a\u4e3e\u6b63\u65b9\u5f62\u7684\u4e3b\u5bf9\u89d2\u7ebf\uff0c\u518d\u5229\u7528\u53cc\u6307\u9488\u627e\u5230\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u5de6\u4e0a\u89d2\u65f6\u6700\u8fd1\u7684\u5408\u6cd5\u53f3\u4e0b\u89d2\u5728\u54ea\u91cc\u3002\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u8bdd\u6bcf\u4e2a\u4eba\u53ea\u4f1a\u88ab\u52a0\u5165 $\\min\\{n,m\\}\\leq \\sqrt{nm}$ \u6b21\u3002\uff08\u8fd9\u662f\u56e0\u4e3a\u6bcf\u6b21\u53cc\u6307\u9488\u65f6\u6bcf\u4e2a\u5927\u6b63\u65b9\u5f62\u5185\u7684\u5143\u7d20\u53ea\u4f1a\u52a0\u5165\u4e00\u6b21\u3001\u5220\u9664\u4e00\u6b21\uff0c\u6bcf\u4e2a\u4eba\u81f3\u591a\u5728 $\\min\\{n,m\\}$ \u4e2a\u5927\u6b63\u65b9\u5f62\u91cc\u3002\uff09\u5982\u679c\u6211\u4eec\u80fd\u7ef4\u62a4\u4e00\u4e2a\u652f\u6301\u5feb\u901f\u63d2\u5165\u3001\u5220\u9664\u5143\u7d20\u3001\u67e5\u8be2 $\\mathrm{mex}$ \u7684\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u89e3\u51b3\u4e86\u6b64\u9898\u3002\n\n\u6ce8\u610f\u5230\u63d2\u5165 / \u5220\u9664\u6b21\u6570\u4e3a $O(k\\sqrt{nm})$\uff0c\u67e5\u8be2\u6b21\u6570\u4e3a $O(nm)$\uff0c\u4fee\u6539\u6b21\u6570\u8fdc\u9ad8\u4e8e\u67e5\u8be2\u6b21\u6570\u3002\u5982\u679c\u6211\u4eec\u666e\u901a\u5730\u91c7\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u90a3\u4e48\u4f1a\u5bfc\u81f4\u4fee\u6539\u7684\u603b\u590d\u6742\u5ea6\u8fc7\u9ad8\u3002\u8003\u8651\u9488\u5bf9\u6027\u5730\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u589e\u5927\u5355\u6b21\u67e5\u8be2\u7528\u65f6\u4e3a\u4ee3\u4ef7\u51cf\u5c0f\u5355\u6b21\u4fee\u6539\u7528\u65f6\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u6240\u6709 $\\leq k$ \u7684\u6b63\u6574\u6570\u51fa\u73b0\u4e86\u6ca1\u6709\u3002\u8003\u8651\u5c06\u8fd9\u4e9b\u6570\u5206\u6210 $\\sqrt k$ \u6bb5\uff0c\u6bcf\u6bb5\u5185 $\\sqrt k$ \u4e2a\u6570\uff0c\u6211\u4eec\u989d\u5916\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u6bb5\u5185\u6709\u591a\u5c11\u4e2a\u6570\u51fa\u73b0\u8fc7\u3002\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\u53ea\u9700\u8981\u66f4\u6539\u5bf9\u5e94\u4f4d\u7684\u503c\u4ee5\u53ca\u5bf9\u5e94\u6bb5\u5185\u7684\u4fe1\u606f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(1)$\u3002\u67e5\u8be2\u7684\u65f6\u5019\u6211\u4eec\u5148\u987a\u6b21\u626b\u8fc7\u6240\u6709\u6bb5\uff0c\u627e\u5230\u6700\u5c0f\u7684\u6709\u7f3a\u5931\u5143\u7d20\u7684\u6bb5\uff0c\u518d\u5728\u6bb5\u5185\u66b4\u529b\u67e5\u8be2\u627e\u51fa $\\mathrm{mex}$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt k)$\u3002\u7efc\u4e0a\uff0c\u6211\u4eec\u5f97\u51fa\u4e86\u4e00\u4e2a $O(k\\sqrt{nm}+nm\\sqrt{k})$ \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n\nusing namespace std;\n\nconst int N=1100000,BS=1000;\n\nstruct BLOCK\n{\n\t\n\tint cnt[2000000],bl_cnt[2000000];\n\tvoid add(int x,int y)\n\t{\n\t\tif(x>N)return;\n\t\tint b=(x+BS-1)/BS;\n\t\tif(cnt[x])bl_cnt[b]--;\n\t\tcnt[x]+=y;\n\t\tif(cnt[x])bl_cnt[b]++;\n\t}\n\tint calc()\n\t{\n\t\tfor(int i=1;;i++)\n\t\t{\n\t\t\tif(bl_cnt[i]!=BS)\n\t\t\t{\n\t\t\t\tfor(int j=(i-1)*BS+1;j<=i*BS;j++)if(!cnt[j])return j-1;\n\t\t\t}\n\t\t}\n\t}\n}B[2];\n\nint n=0,m=0,k=0,t=0;\n\nvector<int> F[100000];\n\n#define ID(i,j)(((i)-1)*m+j)\n\nvoid modify(int x,int y,int type)\n{\n\tfor(int i=0;i<F[ID(x,y)].size();i++)\n\t{\n\t\tint u=F[ID(x,y)][i];if(u>0)B[0].add(u,type);else B[1].add(-u,type);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&t);\n\t\n\tbool flip=0;if(n>m)flip=1,swap(n,m);\n\tfor(int i=1,x=0,y=0,w=0;i<=k;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tif(flip)swap(x,y);\n\t\tF[ID(x,y)].push_back(w);\n\t}\n\t\n\tlong long ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int lx=i,ly=1,rx=lx-1,ry=ly-1;lx<=n;lx++,ly++)\n\t\t{\n\t\t\twhile(rx<n&&ry<m&&(B[0].calc()+B[1].calc()+1<t||rx<lx))\n\t\t\t{\n\t\t\t\trx++,ry++;\n\t\t\t\tfor(int j=lx;j<=rx;j++)modify(j,ry,1);\n\t\t\t\tfor(int j=ly;j<ry;j++)modify(rx,j,1);\n\t\t\t}\n\t\t\t\n\t\t\tif(B[0].calc()+B[1].calc()+1>=t)ans+=min(n-rx+1,m-ry+1);\n\t\t\t\n\t\t\tfor(int j=lx;j<=rx;j++)modify(j,ly,-1);\n\t\t\tfor(int j=ly+1;j<=ry;j++)modify(lx,j,-1);\n\t\t}\n\t}\n\t\n\tfor(int i=2;i<=m;i++)\n\t{\n\t\tfor(int lx=1,ly=i,rx=lx-1,ry=ly-1;lx<=n;lx++,ly++)\n\t\t{\n\t\t\twhile(rx<n&&ry<m&&(B[0].calc()+B[1].calc()+1<t||rx<lx))\n\t\t\t{\n\t\t\t\trx++,ry++;\n\t\t\t\tfor(int j=lx;j<=rx;j++)modify(j,ry,1);\n\t\t\t\tfor(int j=ly;j<ry;j++)modify(rx,j,1);\n\t\t\t}\n\t\t\t\n\t\t\tif(B[0].calc()+B[1].calc()+1>=t)ans+=min(n-rx+1,m-ry+1);\n\t\t\t\n\t\t\tfor(int j=lx;j<=rx;j++)modify(j,ly,-1);\n\t\t\tfor(int j=ly+1;j<=ry;j++)modify(lx,j,-1);\n\t\t}\n\t}\n\t\n\tprintf(\"%lld\",ans);\n}\n```",
        "postTime": 1666787409,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1753F\u3010Minecraft Series\u3011"
    },
    {
        "content": "\u5443\u5443\uff0c\u548b\u4e0d\u4f1a\u505a\u3002\n\n\u6b63\u65b9\u5f62\u5e94\u8be5\u6309\u7167\u5bf9\u89d2\u7ebf\u65b9\u5411\u8fdb\u884c\u626b\u63cf\u7ebf\uff0c\u679a\u4e3e\u5176\u6240\u5728\u5bf9\u89d2\u7ebf\uff0c\u4e00\u4e2a\u6b63\u65b9\u5f62\u5c31\u4f1a\u5bf9\u5e94\u4e00\u6bb5\u5bf9\u89d2\u7ebf\u533a\u95f4\u3002\n\n\u6ce8\u610f\u5230\u5176\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u6743\u503c $\\operatorname{mex}$\uff0c\u66b4\u529b\u8fdb\u884c\u52a0\u5165\u5220\u9664\u6b21\u6570\u662f $O(k\\sqrt{nm})$\uff0c\u800c\u6211\u4eec\u8981\u8fdb\u884c $O(nm)$ \u6b21\u67e5\u8be2\uff0c\u4f7f\u7528\u503c\u57df\u5206\u5757\u5373\u53ef\u505a\u5230 $O(k\\sqrt{nm}+nm\\sqrt k)$ \u7684\u590d\u6742\u5ea6\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=40005,B=1000,maxv=1000005;\nint n,m,k,t,ans;\nint x[maxn],y[maxn],w[maxn],a[maxv],b[maxv],ta[maxv],tb[maxv];\nvector< vector<int> >v[maxn];\nvoid upd(int x,int opt) {\n\tif(x>0) {\n\t\tint p=(x-1)/B+1;\n\t\tta[p]-=a[x]>0,a[x]+=opt,ta[p]+=a[x]>0;\n\t} else {\n\t\tx=-x;\n\t\tint p=(x-1)/B+1;\n\t\ttb[p]-=b[x]>0,b[x]+=opt,tb[p]+=b[x]>0;\n\t}\n}\nint query() {\n\tint res=1;\n\tfor(int i=1; i; i++)\n\t\tif(ta[i]<B) {\n\t\t\tfor(int j=(i-1)*B+1; j<=i*B; j++)\n\t\t\t\tif(a[j]==0) {\n\t\t\t\t\tres+=j-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\tfor(int i=1; i; i++)\n\t\tif(tb[i]<B) {\n\t\t\tfor(int j=(i-1)*B+1; j<=i*B; j++)\n\t\t\t\tif(b[j]==0) {\n\t\t\t\t\tres+=j-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\treturn res>=t;\n}\nvoid add(int x,int y,int opt) {\n\tfor(int i=0; i<v[x][y].size(); i++)\n\t\tupd(v[x][y][i],opt);\n}\nvoid solve(int sx,int sy) {\n\tint tx=sx,ty=sy;\n\tadd(sx,sy,1);\n\twhile(sx<=n&&sy<=m) {\n\t\twhile(query()==0&&tx<n&&ty<m) {\n\t\t\ttx++,ty++;\n\t\t\tfor(int i=sy; i<=ty; i++)\n\t\t\t\tadd(tx,i,1);\n\t\t\tfor(int i=sx; i<=tx-1; i++)\n\t\t\t\tadd(i,ty,1);\n\t\t}\n\t\tif(query())\n\t\t\tans+=min(n-tx+1,m-ty+1);\n\t\tfor(int i=sy; i<=ty; i++)\n\t\t\tadd(sx,i,-1);\n\t\tfor(int i=sx+1; i<=tx; i++)\n\t\t\tadd(i,sy,-1);\n\t\tsx++,sy++;\n\t}\n}\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&t);\n\tfor(int i=1; i<=n; i++)\n\t\tv[i].resize(m+1);\n\tfor(int i=1,x,y,w; i<=k; i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tif(w!=0&&abs(w)<=k)\n\t\t\tv[x][y].emplace_back(w);\n\t}\n\tfor(int i=1; i<=n; i++)\n\t\tsolve(i,1);\n\tfor(int i=2; i<=m; i++)\n\t\tsolve(1,i);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1683809332,
        "uid": 105611,
        "name": "IdnadRev",
        "ccfLevel": 0,
        "title": "\u3010DS\u8bb0\u5f55\u3011CF1753F Minecraft Series"
    }
]