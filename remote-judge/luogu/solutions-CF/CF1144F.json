[
    {
        "content": "# \u601d\u8def\n\u624b\u753b\u4e00\u4e0b\u5bb9\u6613\u53d1\u73b0\uff0c\u8981\u4f7f\u5f97\u56fe\u4e2d\u4e0d\u5b58\u5728\u957f\u5ea6 $\\geq2$ \u7684\u8def\u5f84\u3002\u53ea\u80fd\u662f\u6bcf\u4e2a\u9876\u70b9\u76f8\u8fde\u7684\u8fb9\u90fd\u662f\u6307\u5411\u5b83\u6216\u8005\u4ece\u5b83\u51fa\u53d1.\n\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u9876\u70b9\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6027\u8d28\u4e4b\u4e00\uff1a\n\n- \u5165\u5ea6\u4e3a $0$ \n- \u51fa\u5ea6\u4e3a $0$   \n\n\u540c\u65f6\u8fd8\u8981\u52a0\u4e0a\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\uff1a\u76f8\u90bb\u7684\u9876\u70b9\u6027\u8d28\u4e0d\u540c\u3002  \n\u6b64\u65f6\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e8c\u5206\u56fe\u67d3\u8272\u95ee\u9898\u3002\u56e0\u4e3a\u662f\u8fde\u901a\u56fe\uff0c\u76f4\u63a5\u9009\u5b9a\u4efb\u610f\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\u67d3\u8272\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nstruct edge{\n\tint u,v,next;\n}e[400005];\nint p[400005],eid = 0;\nvoid addedge(int u,int v){\n\te[eid].v = v;\n\te[eid].u = u;\n\te[eid].next = p[u];\n\tp[u] = eid++;\n}\nint u[200005],v[200005];\nbool ok = true;\nint col[200005];\nbool vis[200005];\nvoid dfs(int u,int c){\n\tif(!ok) return;\n\tcol[u] = c;\n\tfor(int i = p[u];i!=-1;i=e[i].next){\n\t\tint v = e[i].v;\n\t\tif(col[v]==col[u]){\n\t\t\tok = false;\n\t\t\treturn;\n\t\t}\n\t\tif(col[v]==-1) dfs(v,1-c);\n\t}\n}\nint main()\n{\n\tint n,m;\n\tcin>>n>>m;\n\tmemset(p,-1,sizeof(p));\n\tfor(int i = 1;i <= m;i++){\n\t\tscanf(\"%d%d\",&u[i],&v[i]);\n\t\taddedge(u[i],v[i]);\n\t\taddedge(v[i],u[i]);\n\t}\n\tmemset(col,-1,sizeof(col));\n\tmemset(vis,false,sizeof(vis));\n\tdfs(1,0);\n\tif(ok){\n\t\tputs(\"YES\");\n\t\tfor(int i = 1;i <= m;i++){\n\t\t\tif(col[u[i]]) printf(\"1\");\n\t\t\telse printf(\"0\");\n\t\t}\n\t\tputs(\"\");\n\t}\n\telse puts(\"NO\");\n\treturn 0;\n}\n```\n",
        "postTime": 1660552696,
        "uid": 102849,
        "name": "Deft_t",
        "ccfLevel": 0,
        "title": "CF1144F\u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u8ba9\u4f60\u628a\u6240\u6709\u8fb9\u6807\u8bb0\u65b9\u5411\uff0c\u5e76\u4f7f\u5176\u6ca1\u6709\u8ddd\u79bb$>=2$\u7684\u8fb9\uff0c\u95ee\u4f60\u662f\u5426\u5b58\u5728\u5e76\u8f93\u51fa\u65b9\u6848\u3002\n\n## \u9898\u89e3\uff1a\n\n\u4e0d\u662f\uff0c\u8fd9\u9898\u84dd\u7684\u6211\u53ef\u4ee5\u7406\u89e3\uff0c\u4f46\u662f\u80fd\u4e0a\u7d2b\u6211\u662f\u771f\u7684\u4e0d\u77e5\u9053\u554a\u3002\u3002\u800c\u4e14\u4e00\u4e2a$div.3$\u7684\u9898\uff0c$BCD$\u5c45\u7136\u90fd\u80fd\u7d2b\uff1f\uff1f\u800c\u4e14\u4f60\u8c37\u5224\u6076\u610f\u8bc4\u5206\u5c45\u7136\u662f\u6309\u6bd4\u4f8b\u6392\u7684\uff0c\u60f3\u628a\u5b83\u8bc4\u56de\u9ec4\u90fd\u4e0d\u884c\u3002\u3002\n\n~~\u4ee5\u4e0a\u626f\u6de1\uff0c~~\u6765\u770b\u8fd9\u9053\u9898\u3002\u5148\u968f\u624b\u753b\u4e2a\u6837\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/55674.png)\n\n1. \u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u90a3\u4e2a `1-3-2` \u80af\u5b9a\u8fdd\u6cd5\u4e86\uff0c\u56e0\u4e3a\u4f60\u65e0\u8bba`2-3`\u600e\u4e48\u8fde\uff0c\u8981\u4e48\u4e0e`1-3`\u91cd\uff0c\u8981\u4e48\u4e0e`1-2`\u91cd\u3002\u3002\n\n2. \u4f46\u660e\u663e\u7684\u662f\uff0c`1-6-5-4`\u53ef\u4ee5\u901a\u8fc7`1`\u5f80\u5916\u8fde\uff0c`5`\u5f80\u5185\u8fde\u8fb9\u7684\u65b9\u5f0f\u9020\u51fa\u7b26\u5408\u9898\u610f\u7684\u56fe\u3002\n\n3. \u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e`1-7-8-9`\u5373\u4f7f\u67094\u4e2a\u9876\u70b9\uff0c\u82e5`7-9`\u6709\u8fde\u8fb9\u5219\u4ecd\u4e0d\u884c\u3002\u3002\n\n### ~~\u4e8e\u662f\u6211\u4eec\u731c\u60f3\uff0c\u53ea\u8981\u5b58\u5728\u5947\u6570\u73af\u5c31\u80af\u5b9a\u4e0d\u884c\uff0c\u5426\u5219\u5c31\u884c\u3002~~\n\n\u867d\u7136\u8fd9\u4e2a\u731c\u60f3\u5341\u5206\u6b63\u786e\uff0c\u4f46\u663e\u7136\u60a8\u5e76\u4e0d\u80fd\u6839\u636e\u8fd9\u77ed\u77ed\u7684\u4e00\u53e5\u8bdd\u6572\u51fa\u4e00\u4e2a\u6b63\u786e\u7684\u4ee3\u7801\u3002\u56e0\u4e3a\u867d\u7136\u5224\u73af\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u62d3\u6251\uff0c\u4f46\u5224\u65ad\u8fde\u8fb9\u60c5\u51b5\u5374\u6ca1\u6709\u4e00\u4e2a\u4f53\u7cfb\u7684\u65b9\u6cd5\u3002\u3002\n\n### \u4e8e\u662f\u8003\u8651\u67ef\u5b66\u8bc1\u660e\uff1a\n\n**\u5f15\u5165\u9ed1\u767d\u67d3\u8272\u6cd5\uff0c** \u5c06\u6e90\u70b9\uff08\u8fd9\u91cc\u9ed8\u8ba4\u4e3a1\uff09\u6d82\u9ed1\uff0c\u51e1\u662f\u6709\u8fb9\u76f8\u8fde\u7684\u6d82\u767d\uff0c\u5c31\u8fd9\u6837\u6765\u56de\u67d3\u8272\uff0c\u6211\u4eec\u7684\u6837\u4f8b\u5c31\u53d8\u6210\u8fd9\u6837\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/55675.png)\n\n\u6211\u4eec\u5728\u6765\u89c2\u5bdf\u80fd\u5426\u6210\u529f\u8fde\u8fb9\u7684\u60c5\u51b5\uff1a\n\n1. \u53ef\u4ee5\u770b\u51fa\uff0c\u539f\u6765\u4e0d\u80fd\u8fde\u8fb9\u7684\u73af\u91cc\u90fd\u51fa\u73b0\u4e86**\u540c\u8272\u70b9\u6709\u76f4\u63a5\u8fde\u8fb9\u7684\u60c5\u51b5**\uff0c\u8bc1\u660e\u4e5f\u662f\u663e\u7136\u7684\uff0c\u7531\u4e8e\u6b63\u5e38\u9ed1\u70b9\u8fde\u5230\u767d\u70b9\u5f62\u6210\u5076\u6570\u7684\u914d\u5bf9\uff0c\u82e5\u540c\u8272\u5219\u5fc5\u4f1a\u51fa\u73b0\u5947\u6570\u6761\u8fb9\u3002\n\n2. \u82e5\u6ca1\u6709\u540c\u8272\u8fde\u5219\u4e5f\u5f88\u5bb9\u6613\u7684\u6784\u9020\u51fa\u7b54\u6848\uff1a\u5c06\u6240\u6709\u9ed1\u70b9\u8fde\u5411\u767d\u70b9\u5373\u53ef\u3002\u8fd9\u6837\u641e\u7684\u8bdd\u8fb9\u662f\u65b9\u5411\u4ea4\u66ff\u53d8\u7684\uff08\u5c31\u50cf`1-6-5-4`\u4e00\u6837\uff09\n\n\u7136\u540e\u5c31\u6ca1\u6709\u8fa3\uff01\u4ee5\u4e0a\u64cd\u4f5c\u5747\u53ef\u4ee5\u5728\u4e00\u4e2aDFS\u5185\u5b8c\u6210\uff0c\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\nusing namespace std;\n\nstruct ed{\n\tint u,next,v;\n}e[600000];\nint n,m,x,y,st=1,fir[300000],col[300000],v[300000];\nbool fal;\nvoid add(int x,int y)\n{\n\te[++st].u=y; e[st].next=fir[x]; fir[x]=st;\n\te[++st].u=x; e[st].next=fir[y]; fir[y]=st;\n}\n\nvoid dfs(int x,int fa)\n{\n\tif (v[x]&&col[x]==col[fa]) {fal=1; return;} //\u540c\u8272\u76f4\u63a5\u6b7b\u3002\n\tcol[x]=!col[fa]; v[x]++;\n\tif (v[x]==1) for (int i=fir[x];i;i=e[i].next)\n\t{\n\t\tint u=e[i].u; if (u==fa) continue; //\u65e0\u5411\u56fe\u4e0d\u8d70\u56de\u5934\u8def\u3002\n\t\tif (col[x]) e[i].v=1,e[i^1].v=0; else e[i^1].v=1,e[i].v=0;\n     //i^1\u8868\u793a\u6807\u8bb0\u5b83\u7684\u53cd\u8fb9\uff0c\u4ece\u7f51\u7edc\u6d41\u90a3\u91cc\u5b66\u7684\u6280\u5de7\u3002\u3002\n     dfs(u,x); \n\t}\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tfor (int i=1;i<=m;i++) cin>>x>>y,add(x,y);\n\tdfs(1,0);\n\tif (fal) cout<<\"NO\"<<endl;\n\telse \n\t{\n\t\tcout<<\"YES\"<<endl;\n\t\tfor (int i=2;i<=2*m;i+=2) cout<<e[i].v;\n\t}\n}\n```",
        "postTime": 1554129508,
        "uid": 15984,
        "name": "\u5929\u6cfd\u9f9f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1144F \u3010Graph Without Long Directed Paths\u3011\u3010\u56fe\u8bba+\u7b80\u5355\u8bc1\u660e\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8d3c\u6c34\u7684\u597d\u5417\uff0c\u7528\u4e0d\u7740\u90a3\u4e48ke\u5b66\u5427...QvQ\n\n~~\u7701\u9009\u524d\u5815\u843d\u5230\u6765\u8fd9\u5212\u6c34\uff0c\u6211tm\u80af\u5b9a\u51c9\u4e86~~\n\n\u9996\u5148\uff0c\u9898\u76ee\u63cf\u8ff0\uff1a1.\u8fde\u901a\u56fe  2.\u6ca1\u6709\u5927\u4e8e\u7b49\u4e8e\u4e8c\u7684\u8def\u5f84\n\n\u90a3\u6211\u4eec\u5c31\u6709\u4e24\u70b9\u63a8\u8bba\u4e86\uff1a\n\n1.\u5408\u6cd5\u65b9\u6848\u4e2d\u5c06\u6240\u6709\u8fb9\u53cd\u5411\u4f9d\u65e7\u6210\u7acb\n\n2.\u7531\u4e8e\u6ca1\u6709**\u7b49\u4e8e\u4e8c\u7684\u8def\u5f84**\uff0c\u56e0\u6b64\uff0c\u6bcf\u786e\u5b9a\u4e00\u6761\u8fb9\u7684\u65b9\u5411\u5c31\u80fd\u63a8\u53ca\u539f\u56fe\u4e2d\u4e0e\u6b64\u8fb9\u76f8\u90bb\u6240\u6709\u8fb9\u7684\u65b9\u5411\n\n\u53ef\u77e5\uff0c\u6211\u4eec\u7531\u6b64\u53ca\u5f7c\u7684\u6bcf\u4e00\u6b65\u64cd\u4f5c\u90fd\u662f\u552f\u4e00\u7684\uff0c\u4e14\u6700\u6b63\u786e\u7684\uff08\u6362\u800c\u8a00\u4e4b\u4e0d\u5408\u6cd5\u76f4\u63a5\u9000\u51fa\u8f93\u51faNO\u5c31\u5b8c\u4e8b\u513f\u4e86\uff09\n\n\u54c7\uff0c\u8fd9\u4e0d\u5c31\u662f\u7eafdfs\u4e48....\n\n\u53e6\u5916\uff0c\u5047\u8bbe\u4e00\u6761\u65e0\u5411\u8fb9\u94fe\u63a5u,v\uff0c\u6211\u4eec\u89c4\u5b9a\u65b9\u5411\u4e3a\u4ecev\u5230u\uff0c\u6211\u4eec\u53ef\u4ee5\u6807\u8bb0vis[u]=0,vis[v]=1\uff0c\u8868\u793a\u8fd9\u6761\u8fb9\u786e\u5b9a\u540e\uff0c\u6240\u6709\u4e0eu\u76f8\u8fde\u7684\u8fb9\u5747\u6307\u5411u\uff0c\u6240\u6709\u4e0ev\u76f8\u8fde\u7684\u8fb9\u5747\u7531v\u6307\u5411\u522b\u4eba\uff08\u5f88\u597d\u7406\u89e3\uff0c\u4e0d\u7136\u4e24\u6761\u8fb9\u5c31\u4e0d\u5408\u6cd5\u4e86\uff09\n\n\u81f3\u6b64\uff0c\u8fb9\u7684\u65b9\u5411\u53d8\u6210\u4e86\u70b9\u7684\u989c\u8272\uff080\u8272\u548c1\u8272...\uff09,\u6c34\u4e4b\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<vector>\nusing namespace std;\nint n,m,fail,a[200005],b[200005];\nint h[200005],vis[200005],cnt;\nstruct wf{\n\tint to,nxt;\n}edge[200005<<1];\nvoid add(int u,int v)\n{\n\tedge[++cnt].to=v;\n\tedge[cnt].nxt=h[u];\n\th[u]=cnt;\n}\nvoid dfs(int u,int fa,int col)\n{\n\tif (fail) return;//\u4e00\u65e6\u4e0d\u5408\u6cd5\uff0c\u5c31\u9000\u51fa\n\tvis[u]=col;\n\tfor (int i=h[u];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif (v==fa) continue;\n\t\tif (!vis[v]) dfs(v,u,col^1);\n\t\telse if (vis[v]==vis[u]) \n\t\t{\n\t\t\tfail=1;\n\t\t\treturn;\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint u,v;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t\ta[i]=u;\n\t\tb[i]=v;\n\t}\n\tdfs(1,-1,0);\n\tif (fail) printf(\"NO\");\n\telse\n\t{\n\t\tprintf(\"YES\\n\");\n\t\tfor (int i=1;i<=m;i++)\n\t\t  if (!vis[a[i]]) printf(\"0\");\n\t\t  else printf(\"1\");\n\t}\n\treturn 0;\n}\n```\n\n\u5e0c\u671b\u5bf9\u60a8\u6709\u6240\u5e2e\u52a9\n++RP\uff1b\n",
        "postTime": 1555253557,
        "uid": 41528,
        "name": "jiuguaiwf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1144F \u3010Graph Without Long Directed Paths\u3011"
    },
    {
        "content": "# $F.\\ Graph\\ Without\\ Long\\ Directed\\ Paths$\n\n\u4e00\u9053\u6c34\u9898\uff0c\u4e8c\u5206\u56fe\u67d3\u8272\u3002\n\n\n$Description$\n\n\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u628a\u6240\u6709\u8fb9\u6807\u8bb0\u65b9\u5411\uff0c\u5e76\u4f7f\u6574\u5f20\u56fe\u4e2d\u6ca1\u6709\u8ddd\u79bb \u22652 \u7684\u8def\u5f84\uff0c\u95ee\u4f60\u662f\u5426\u5b58\u5728\u5e76\u8f93\u51fa\u65b9\u6848\u3002\n\n\u7b2c\u4e00\u884c\u8f93\u51fa\u201cYES\u201d\u6216\u201cNO\u201d\uff0c\u82e5\u5b58\u5728\uff0c\u7b2c\u4e8c\u884c\u6309\u7167\u8bfb\u5165\u987a\u5e8f\u8f93\u51fa\u8fde\u8fb9\u65b9\u5411\uff08\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u8be5\u6761\u8fb9\u7684\u8fde\u8fb9\u65b9\u5411\u662f\u6309\u7167\u8f93\u5165\u7684\u65b9\u5411\u6709$u_i$\u5230$v_i$\u5c31\u8f93\u51fa1\uff0c\u5426\u5219\u5c31\u8f93\u51fa0\uff09\u3002\n\n\n$Solution$\n\n\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u9053\u67d3\u8272\u95ee\u9898\uff0c\u5982\u679c\u8def\u5f84\u22652\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u540c\u65f6\u4e3a\u5165\uff0c\u6216\u8005\u540c\u65f6\u4e3a\u51fa\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u8bf4\u660e\u6ca1\u6709\u4e24\u6761\u8fb9\u6216\u4ee5\u4e0a\u662f\u8fde\u7740\u8d70\u7684\u3002\n\u753b\u4e00\u4e0b\u6837\u4f8b\uff0c\u987a\u4fbf\u52a0\u4e00\u70b9\u6570\u636e\u3002\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200531093906601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTY5Nzc3NA==,size_16,color_FFFFFF,t_70)\n~~\u867d\u7136\u5165\u5ea6\u548c\u51fa\u5ea6\u4e0d\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u4f46\u662f\u8fd9\u91cc\u628a\u5b83\u9b54\u6539\u4e00\u4e0b\u7528\u8fd8\u662f\u633a\u6e05\u6670\u7684~~ \n\u7136\u540e\u4ee3\u7801\u5c31\u975e\u5e38\u7b80\u5355\u4e86\u3002\n\n$Code$\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<bitset>\n#include<vector>\n\n#define over(i,s,t) for(register int i = s;i <= t;++i)\n#define lver(i,t,s) for(register int i = t;i >= s;--i)\n//#define int __int128\n#define lowbit(p) p&(-p)\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> PII;\n\nconst int N = 2e5+7;\nstruct node{int u,v,val;}a[N];\nint n,m;\nvector<int>G[N];\nint vis[N];//\u8bb0\u5f55\u989c\u8272\nint v[N];//\u8bb0\u5f55\u662f\u5426\u8d70\u8fc7\nvoid dfs(int now,int sta){\n    vis[now] = sta;\n    v[now] = 1;\n    //cout<<sta<<endl;\n    for(int i = 0;i < G[now].size();++i){\n        int to = G[now][i];\n        if(!v[to])\n        dfs(to,-sta);//\u5f80\u4e0b\u67d3\n    }\n}\n\nint main()\n{\n    bool flag = 1;\n    scanf(\"%d%d\",&n,&m);\n    over(i,1,m){\n        int u,v;\n        scanf(\"%d%d\",&a[i].u,&a[i].v);\n        G[a[i].u].push_back(a[i].v);//\u5148\u5efa\u65e0\u5411\u56fe\n        G[a[i].v].push_back(a[i].u);\n    }\n    dfs(1,1);//\u67d3\u8272\n    over(i,1,m){\n        if(vis[a[i].u] != vis[a[i].v]){\n            if(vis[a[i].u] == 1)//\u662f\u51fa\u5ea6\u5219\u4e3a1\u4e5f\u5c31\u662f\u9009\u62e9\u7684\u8fb9\u662f\u4eceui\u5230vi\u7684\n                a[i].val = 1;\n            else a[i].val = 0;//\u4e0d\u662f\u5219\u4e3a0\n        }\n        else flag = 0;\n    }\n    if(!flag){\n        puts(\"NO\");\n    }\n    else {\n        puts(\"YES\");\n        over(i,1,m)\n        printf(\"%d\",a[i].val);\n        puts(\"\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1590897256,
        "uid": 262605,
        "name": "fanfansann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1144F \u3010Graph Without Long Directed Paths\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u67d3\u8272\u7684\u9898\n\n\u4e00\u770b\u5230\u4e0d\u80fd\u5927\u4e8e\u7b49\u4e8e$2$\u5c31\u80fd\u60f3\u5230\u67d3\u8272\n\n\u90a3\u5c31\u67d3\u8272\u9ed1\u767d\u70b9\u4e4b\u95f4\u968f\u4fbf\u5b9a\u4e00\u4e2a\u65b9\u5411\uff0c\u53ef\u4ee5\u9ed1\u5230\u767d\u4e5f\u53ef\u4ee5\u767d\u5230\u9ed1\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2*1e5+10;\nint n,m,head[maxn],tot=1;\nstruct node{\n    int to,nxt,id;\n    #define to(x) e[x].to\n    #define nxt(x) e[x].nxt\n}e[maxn<<1];\ninline void add(int from,int to){\n    to(++tot)=to;nxt(tot)=head[from];head[from]=tot;\n}\nint cl[maxn],fl=1;\nvoid dfs(int x,int co){\n    cl[x]=co;\n    for(int i=head[x];i;i=nxt(i)){\n        int y=to(i);\n        if(cl[y] && cl[y]==cl[x]){\n            fl=0;return;\n        }\n        if(!cl[y]) dfs(y,3-co);\n        if(cl[x]==1 && cl[y]==2) e[i].id=1,e[i^1].id=0;\n        if(cl[x]==2 && cl[y]==1) e[i].id=0,e[i^1].id=1;\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int x,y,i=1;i<=m;i++){\n        scanf(\"%d%d\",&x,&y);add(x,y);add(y,x);\n    }\n    dfs(1,1);\n    if(!fl) printf(\"NO\\n\");\n    else{\n        printf(\"YES\\n\");\n        for(int i=2;i<=2*m;i+=2){\n            cout<<e[i].id;\n        }\n    }\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1571883164,
        "uid": 128682,
        "name": "ChrisK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1144F \u3010Graph Without Long Directed Paths\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1144F)\n\n\u9996\u5148\u56fe\u662f\u65e0\u5411\u8fde\u901a\u56fe\u3002\n\n\u8def\u5f84\u957f\u5ea6 $\\le 2$\uff0c\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u70b9\u4e0d\u80fd\u65e2\u6709\u5165\u8fb9\u53c8\u6709\u51fa\u8fb9\uff0c\u5373\u4e00\u4e2a\u70b9\u8981\u4e48\u5165\u5ea6\u4e3a $0$\uff0c\u8981\u4e48\u51fa\u5ea6\u4e3a $0$\u3002\n\n\u6ce8\u610f\u5230\u76f8\u90bb\u7684\u70b9\u5fc5\u7136\u5177\u6709\u7684\u6027\u8d28\u4e0d\u540c\uff0c\u90a3\u4e48\u76f4\u63a5\u4e8c\u5206\u56fe\u67d3\u8272\u5373\u53ef\u3002",
        "postTime": 1676903468,
        "uid": 93266,
        "name": "\u65ad\u6e05\u79cb",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1144F Graph Without Long Directed Paths"
    },
    {
        "content": "\u6c34\u9898\uff0c\u5efa\u8bae\u964d\u84dd\u6216\u964d\u7eff\uff08~~\u6211\u5b9e\u5728\u4e0d\u7406\u89e3\u6211\u4ec0\u4e48\u65f6\u5019\u80fd\u591f\u4e00\u773c\u79d2\u7d2b\u9898\u4e86~~\uff09\u3002\n\n## Solution\n\u65e0\u5411\u56fe\u53d8\u6709\u5411\uff0c\u4e0d\u5b58\u5728\u5927\u4e8e\u7b49\u4e8e $2$ \u7684\u8def\u5f84\uff0c\u610f\u5473\u7740\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u6240\u6709\u4e0e\u8fd9\u6761\u8fb9\u76f8\u90bb\u7684\u8fb9\u90fd**\u5fc5\u987b\u4e0e\u5176\u53cd\u5411**\u3002\n\n\u4f46\u662f\u8fd9\u6837\u53d8\u6210\u4e86\u8fb9\u7684\u201c\u4e8c\u5206\u56fe\u201d\u3002\u6211\u4eec\u4ece\u70b9\u4e0a\u8003\u8651\u3002\n\n\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u4e0d\u53ef\u80fd\u540c\u65f6\u5b58\u5728\u5165\u5ea6\u548c\u51fa\u5ea6\uff08\u56e0\u4e3a\u5982\u679c\u540c\u65f6\u5b58\u5728\uff0c\u8d70\u8fd9\u4e24\u6761\u8fb9\u8def\u5f84\u957f\u5ea6\u5c31\u662f $2$ \u4e86\uff09\u3002\u6240\u4ee5\u6bcf\u4e2a\u70b9\u8981\u4e48\u53ea\u51fa\u4e0d\u8fdb\uff0c\u8981\u4e48\u53ea\u8fdb\u4e0d\u51fa\u3002\n\n\u5e76\u4e14\u6709\u8fb9\u76f4\u63a5\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\u4e0d\u53ef\u80fd\u540c\u5c5e\u4e00\u7c7b\uff0c\u7ed3\u8bba\u663e\u7136\uff0c\u8bfb\u8005\u753b\u56fe\u81ea\u8bc1\u4e0d\u96be\u3002\n\n\u6240\u4ee5\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u67d3\u8272\u95ee\u9898\uff0c\u5957\u4e2a\u6a21\u677f\u5c31\u53ef\u4ee5\u6536\u5de5\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 2e5 + 10;\nint n, m, f, uu[N], vv[N], col[N];\nint id, head[N << 1], to[N << 1], nxt[N << 1];\n\nvoid add(int u, int v){\n\tto[++id] = v;\n\tnxt[id] = head[u], head[u] = id;\n}\n\nvoid dfs(int u){\n\tfor(int i=head[u];i;i=nxt[i]){\n\t\tint v = to[i];\n\t\tif(col[u] == col[v])\n\t\t\tf = 1;//\u67d3\u51fa\u77db\u76fe\u4e86\uff0c\u4e0d\u5b58\u5728\u8fde\u8fb9\u65b9\u6848 \n\t\tif(col[v] == -1)\n\t\t\tcol[v] = col[u] ^ 1, dfs(v);\n\t}\n}\n\nint main(){\n\tmemset(col, -1, sizeof(col));\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\", &uu[i], &vv[i]);\n\t\tadd(uu[i], vv[i]), add(vv[i], uu[i]);\n\t}\n\tcol[1] = 1;\n\tdfs(1);\n\tif(f)\n\t\treturn printf(\"NO\\n\"), 0;\n\tprintf(\"YES\\n\");\n\tfor(int i=1;i<=m;i++){\n\t\tif(col[uu[i]])//\u968f\u4fbf\u5224\uff0c\u53cd\u6b63\u4e24\u7aef\u4e00\u5b9a\u662f\u4e00\u4e2a 1 \u4e00\u4e2a 0 \n\t\t\tprintf(\"1\");\n\t\telse\n\t\t\tprintf(\"0\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1676895830,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "CF1144F Graph Without Long Directed Paths \u9898\u89e3"
    },
    {
        "content": "UPD\uff1a\u4fee\u6539\u4e86\u4e00\u5904\u7b14\u8bef\n\n\u6211\u4eec\u6765\u5206\u6790\u8fd9\u4e2a\u9898\u7ed9\u7684\u8981\u6c42\u3002\n\n> \u4e0d\u80fd\u6709\u957f\u5ea6\u5927\u4e8e$2$\u7684\u8def\u3002\n\n\u90a3\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u8fd9\u5f20\u56fe\u5fc5\u987b\u8981\u80fd\u88ab\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206$A$\u548c$B$\uff0c\u4f7f\u5f97\u53ea\u5b58\u5728\u4ece$A$\u5230$B$\u7684\u8fb9\uff0c\u800c\u6ca1\u6709\u56de\u6765\u7684\u8fb9\u3002\n\n\u8fd9\u5c31\u8bf4\u660e\u4e86\uff0c\u8fd9\u5f20\u56fe\u662f\u4e00\u4e2a**\u4e8c\u5206\u56fe**\u3002\u76f4\u63a5\u67d3\u8272\u5224\u65ad\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i, n) for (int (i) = 0; (i) < n; (i)++)\nconst int INF = 0x3f3f3f3f;\nconst long double EPS = 1e-6;\nconst int N = 200020;\nvector <int> G[N];\nint n, m, col[N];\nvoid dfs(int u, int nowcol) {\n\tcol[u] = nowcol;\n\tfor (auto v:G[u]) {\n\t\tif (col[v] == -1) {//\u6ca1\u6709\u67d3\u8fc7\u8272\n\t\t\tdfs(v, nowcol ^ 1);//\u67d3\u4e0a\u4e0e\u73b0\u5728\u4e0d\u540c\u7684\u989c\u8272\n\t\t}\n\t\telse if (col[v] == nowcol) {//\u6709\u4e00\u4e2a\u70b9\u5df2\u7ecf\u67d3\u8272\u4e14\u4e0e\u5f53\u524d\u70b9\u989c\u8272\u76f8\u540c\n\t\t\tcout << \"NO\" << endl;//\u4e0d\u53ef\u80fd\n\t\t\texit(0);//\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\n\t\t}\n\t}\n}\nvector <pair <int, int> >Edges;\nint main() {\n\tios::sync_with_stdio(false);\n\tcin >> n >> m;\n\trep(i, m) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\t--u, --v;//\u6211\u4ece0\u5f00\u59cb\u7f16\u53f7\n\t\tG[u].pb(v);\n\t\tG[v].pb(u);\n\t\tEdges.pb(mp(u, v));\n\t} \n\tmemset(col, -1, sizeof(col));//-1\u8868\u793a\u6ca1\u6709\u67d3\u8fc7\u8272\n\tdfs(0, 0);\n\tcout << \"YES\" << endl;\n\tfor (auto i:Edges) {\n\t\tif (col[i.first] == 0)cout << 1;\n\t\telse cout << 0;\n\t} \n\treturn 0;\n}\n```",
        "postTime": 1567262921,
        "uid": 87696,
        "name": "Lily_White",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1144F \u3010Graph Without Long Directed Paths\u3011"
    }
]