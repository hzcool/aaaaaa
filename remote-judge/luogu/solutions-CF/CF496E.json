[
    {
        "content": "[\u5e7f\u544a](http://m-sea-blog.com)\n\n\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e2a\u6f14\u594f\u5bb6 $i$\uff0c\u6211\u4eec\u4f1a\u9009\u6ee1\u8db3 $c_i\\leq a_j,b_j\\leq d_i$ \u7684 $a_j$ \u6700\u5c0f\u7684\u4e00\u4e9b\u4e50\u66f2\u3002\n\n\u628a\u6240\u6709\u6f14\u594f\u5bb6\u6309 $d_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u628a\u6240\u6709\u4e50\u66f2\u6309 $b_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u524d\u5f80\u540e\u626b\uff0c\u5e76\u7528 `set` \u7ef4\u62a4\u6240\u6709\u6ee1\u8db3 $b_j\\leq d_i$ \u7684\u4e50\u66f2\uff0c\u6bcf\u6b21 `lower_bound` \u51fa $a_j\\geq c_i$ \u7684\u6700\u5c0f\u7684 $a_j$ \u5373\u53ef\u3002\n\n```cpp\n// ===================================\n//   author: M_sea\n//   website: http://m-sea-blog.com/\n// ===================================\n#include <algorithm>\n#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <set>\n#define re register\nusing namespace std;\n\ninline int read() {\n    int X=0,w=1; char c=getchar();\n    while (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n    while (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n    return X*w;\n}\n\nconst int N=100000+10;\n\nint n,m;\nstruct node { int l,r,k,id; } a[N],b[N];\nbool operator <(node a,node b) { return a.r<b.r; }\nset<pair<int,int> > S;\nint ans[N];\n\nint main() {\n    n=read();\n    for (re int i=1;i<=n;++i)\n        a[i].l=read(),a[i].r=read(),a[i].id=i;\n    m=read();\n    for (re int i=1;i<=m;++i)\n        b[i].l=read(),b[i].r=read(),b[i].k=read(),b[i].id=i;\n    sort(a+1,a+n+1),sort(b+1,b+m+1);\n    for (re int i=1,p=1;i<=m;++i) {\n        while (p<=n&&a[p].r<=b[i].r)\n            S.insert(make_pair(a[p].l,a[p].id)),++p;\n        while (b[i].k) {\n            auto it=S.lower_bound(make_pair(b[i].l,0));\n            if (it==S.end()) break;\n            ans[it->second]=b[i].id,--b[i].k,S.erase(it);\n        }\n    }\n    for (re int i=1;i<=n;++i)\n        if (!ans[i]) { puts(\"NO\"); return 0; }\n    puts(\"YES\");\n    for (re int i=1;i<=n;++i) printf(\"%d%c\",ans[i],\" \\n\"[i==n]);\n    return 0;\n}\n```",
        "postTime": 1573370582,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF496E \u3010Distributing Parts \u3011"
    },
    {
        "content": "## \u5e73\u8861\u6811   \n\u5c06\u66f2\u5b50\u548c\u97f3\u4e50\u5bb6\u7684\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u97f3\u4e50\u5bb6\uff0c\u53d6$r$\u66f2<=$r$\u97f3\u4e50\u5bb6\uff0c\u4e14$l$\u66f2>=$l$\u97f3\u4e50\u5bb6\u7684\u6700\u5c0f\u5373\u53ef\uff0c\u7531\u5355\u8c03\u6027\uff0c\u66f2\u5b50\u5355\u8c03\u52a0\u5165\u5e73\u8861\u6811\u5373\u53ef     \n\u4e0a\u4ee3\u7801    \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<set>\n#include<algorithm>\n#define inf 0x3f3f3f3f\n#define N 100010\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return x*f;\n}\nstruct node{\n\tint l,r,id,k;\n\tbool operator  <(const node &s1){return r<s1.r;};\n}a[N],b[N];\nset<pair<int,int> >q;\nint n,m,ans[N],now=1;\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].l=read(),a[i].r=read(),a[i].id=i;\n\t}\n\tm=read();\n\tfor(int i=1;i<=m;i++){\n\t\tb[i].l=read(),b[i].r=read(),b[i].k=read(),b[i].id=i;\n\t}\n\tsort(a+1,a+1+n);\n\tsort(b+1,b+1+m);\n\tfor(int i=1;i<=m;i++){\n\t\twhile(b[i].r>=a[now].r&&now<=n){          //\u5355\u8c03\u52a0\u5165\u5e73\u8861\u6811\n\t\t\tq.insert(make_pair(a[now].l,now));\n\t\t\tnow++;\n\t\t}\n\t\twhile(b[i].k--){                            //k\u4e2a\u97f3\u4e50\u5bb6\u90fd\u8981\u5339\u914d\n\t\t\tset<pair<int,int> >::iterator p;\n\t\t\tp=q.lower_bound(make_pair(b[i].l,0));\n\t\t\tif(p==q.end())break;\n\t\t\tans[a[p->second].id]=b[i].id;            //\u6ce8\u610fp\u4e3a\u6307\u9488 \n\t\t\tq.erase(p);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)if(!ans[i]){\n\t\tprintf(\"NO\\n\");return 0;\n\t}\n\tprintf(\"YES\\n\");\n\tfor(int i=1;i<=n;i++)printf(\"%d \",ans[i]);printf(\"\\n\");\n\treturn 0;\n}\n\n```\n",
        "postTime": 1563340835,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF496E \u3010Distributing Parts \u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/sunrize/solution-cf496e)\n\n[\u6d1b\u8c37 \u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF496E) | [CodeForces \u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/496/E)\n\n---\n\n### \u601d\u8def\n\n\u6392\u5e8f\u662f\u5fc5\u7136\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u6211\u4eec\u628a\u53f3\u7aef\u70b9\u5c0f\u4ed6\u5927\u7684\u6b4c\u66f2\u52a0\u5165 set\u3002\n\n$k$ \u5f88\u597d\u5904\u7406\uff0c\u5faa\u73af $k$ \u6b21\u5373\u53ef\u3002\u5bf9\u4e8e\u6bcf\u6b21\u5faa\u73af\uff0c\u6211\u4eec\u5728 set \u4e2d lower_bound \u627e\u51fa\u7b2c\u4e00\u4e2a\u5de6\u7aef\u70b9\u5927\u4e8e\u6b64\u4eba\u5de6\u7aef\u70b9\u7684\u6b4c\u66f2\uff0c\u6b64\u6b4c\u66f2\u4fbf\u662f\u5f53\u524d\u8fd9\u4e2a\u4eba\u7684\u7b54\u6848\u3002\n\n**\u8bb0\u5f97\u8981\u628a\u9009\u4e2d\u7684\u6b4c\u66f2\u4ece set \u4e2d\u5220\u9664\uff08\u56e0\u4e3a\u4e00\u9996\u6b4c\u4e0d\u80fd\u88ab\u591a\u6b21\u9009\uff09**\u3002\n\n`NO` \u7684\u60c5\u51b5\u5c31\u5f88\u597d\u5224\u65ad\u4e86\uff0c\u5982\u679c\u6709\u7684\u6b4c\u66f2\u7684 ans \u4e3a $0$\uff0c\u5219\u65e0\u89e3\u3002\n\n\u4e0d\u719f\u6089 set \u7684\u53ef\u4ee5\u770b\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\uff1a[Link](https://www.luogu.com.cn/blog/sunrize/set-multiset-notes)\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define _for(i, a, b)  for (int i = (a); i <= (b); i ++ )\n#define _all(i, a, b)  for (int i = (a); i >= (b); i -- )\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, ans[N];\nstruct music { int a, b, id; } a[N];\nstruct actor { int c, d, k, id; } b[N];\nstruct node {\n\tint val, id;\n\tinline bool operator < (const node & b) const { return val < b.val; }\n};\nmultiset<node> s;\nmultiset<node> :: iterator iter;\ninline bool rule_a(music x, music y) { return x.b < y.b; }\ninline bool rule_b(actor x, actor y) { return x.d < y.d; }\nint main() {\n\tios :: sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tcin >> n;\n\t_for (i, 1, n)  cin >> a[i].a >> a[i].b, a[i].id = i;\n\tcin >> m;\n\t_for (i, 1, m)  cin >> b[i].c >> b[i].d >> b[i].k, b[i].id = i;\n\tsort(a + 1, a + n + 1, rule_a), sort(b + 1, b + m + 1, rule_b);\n\tint j = 1;\n\t_for (i, 1, m) {\n\t\twhile (j <= n && a[j].b <= b[i].d)  s.insert((node){a[j].a, a[j].id}), j ++ ;\n\t\twhile (b[i].k) {\n\t\t\titer = s.lower_bound((node){b[i].c, 0});\n\t\t\tif (iter == s.end())  break;\n\t\t\tans[iter -> id] = b[i].id;\n\t\t\tb[i].k -- ;\n\t\t\ts.erase(s.find(*iter));\n\t\t}\n\t}\n\t_for (i, 1, n)  if (ans[i] == 0) { puts(\"NO\"); return 0; }\n\tcout << \"YES\\n\";\n\t_for (i, 1, n)  cout << ans[i] << \" \";\n\tputs(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1675247194,
        "uid": 502658,
        "name": "Sunrize",
        "ccfLevel": 0,
        "title": "[CF496E] Distributing Parts \u9898\u89e3"
    },
    {
        "content": "#### \u7b97\u6cd5\n\n\u8d2a\u5fc3\uff08\u9ed1\u9898\uff1f\uff09\n\n#### \u601d\u8def\n\n\u8003\u8651\u5982\u4f55\u8ba9\u6bcf\u4e00\u4f4d\u6f14\u594f\u5bb6\u53d1\u6325\u6700\u5927\u4f5c\u7528\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u6bcf\u4e00\u4f4d\u6f14\u594f\u8005\u4f18\u5148\u5904\u7406\u81ea\u5df1\u80fd\u529b\u8303\u56f4\u5185\u5de6\u7aef\u70b9\u6700\u5c0f\u7684\u533a\u95f4\u65f6\u53ef\u4ee5\u8fbe\u5230\u6700\u4f18\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e50\u66f2\u548c\u6f14\u594f\u8005\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u5e76\u7528$set$\u7ef4\u62a4\u4e50\u66f2\u5de6\u7aef\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6f14\u594f\u8005\uff0c\u5c06ta\u7684\u5de6\u7aef\u70b9${lower\\_bound}$\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n##### \u6ce8\u610f\n\n\u5982\u679c\u4f60\u7528\u7684\u662f\u7ed3\u6784\u4f53,\u90a3\u5efa\u8bae\u4f7f\u7528$multiset$\uff0c\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0\u91cd\u590d\u5143\u7d20\u3002\n\n#### \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <set>\n\nusing namespace std;\n\nconst int maxn = 1e5 + 10;\nint n,m,Ans[maxn];\nstruct R{\n\tint l,r,k,id;\n}a[maxn],b[maxn];\nstruct node{\n\tint val,id;\n\tfriend bool operator<(node x, node y){\n\t\treturn x.val < y.val;\n\t}\n}tmp;\nmultiset<node> s;\n\nbool cmp(R x, R y){return x.r < y.r;}\n\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++ i) scanf(\"%d%d\", &a[i].l, &a[i].r), a[i].id = i;\n\tscanf(\"%d\", &m);\n\tfor(int i = 1; i <= m; ++ i) scanf(\"%d%d%d\", &b[i].l, &b[i].r, &b[i].k), b[i].id = i;\n\tsort(a + 1, a + 1 + n, cmp); sort(b + 1, b + 1 + m, cmp);\n\tint j = 1;\n\tfor(int i = 1; i <= m; ++ i){\n\t\twhile(a[j].r <= b[i].r && j <= n){\n\t\t\ttmp.id = a[j].id;\n\t\t\ttmp.val = a[j].l;\n\t\t\ts.insert(tmp); j++;\n\t\t}\n\t\twhile(b[i].k){\n\t\t\tauto it = s.lower_bound((node){b[i].l, 0});\n\t\t\tif(it == s.end()) break;\n\t\t\tAns[it->id] = b[i].id; b[i].k--; s.erase(it);\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++ i) if(!Ans[i]) return printf(\"NO\\n\"), 0;\n\tprintf(\"YES\\n\");\n\tfor(int i = 1; i <= n; ++ i) printf(\"%d \", Ans[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1606879162,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF496E \u3010Distributing Parts \u3011"
    },
    {
        "content": "\u5148\u5bf9\u4e50\u66f2\u548c\u6b4c\u5531\u5bb6\u8fdb\u884c\u6392\u5e8f\u3002  \n\u4f9d\u6b21\u8003\u8651\u6bcf\u4e00\u4e2a\u4e50\u66f2$[a_i, b_i]$,\u6709\u6548\u7684\u97f3\u4e50\u5bb6$[c_i, d_i]$\u5e94\u5f53\u662f$c_i \\leqslant a_i$\u4e14$d_i \\geqslant b_i$\u7684\u3002\u8003\u8651\u5bf9\u6240\u6709\u7684$c_i \\leqslant a_i$,\u56e0\u4e3a\u5bf9$a$\u6392\u8fc7\u5e8f,\u5bf9\u540e\u9762\u7684\u5176\u4ed6\u4e50\u66f2\u6765\u8bf4$c_i \\leqslant a_j$\u90fd\u662f\u6052\u6210\u7acb\u7684,\u8fd9\u662f\u4e2a\u5e9f\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u53ea\u8981\u9009\u62e9\u6700\u5c0f\u7684$d_i \\geqslant b_i$\u5373\u53ef\u3002  \n\u8003\u8651\u7528\u5e73\u8861\u6811\u6765\u7ef4\u62a4,\u7531\u4e8e\u6ee1\u8db3$c \\leqslant a$\u7684\u6b4c\u5531\u5bb6\u53ea\u4f1a\u589e\u52a0,\u6bcf\u6b21\u628a\u65b0\u589e\u7684\u6b4c\u5531\u5bb6\u4e22\u5230\u5e73\u8861\u6811\u91cc(\u4ee5$d$\u4e3a\u5173\u952e\u5b57),\u6bcf\u6b21\u8981\u7528\u7684\u65f6\u5019\u67e5\u627e\u5373\u53ef\u3002  \n\u590d\u6742\u5ea6$O(nlogn)$  \n```cpp\n#include <cstdio>\n#include <set>\n#include <algorithm>\n#define itra multiset<node>::iterator\n\nusing namespace std;\n\nconst int N = 123456, inf = 0x3f3f3f3f;\n\nstruct node {\n\tint l, r, k, id;\n\tnode() {}\n\tnode(int L, int R, int K, int ID) : l(L), r(R), k(K), id(ID) {}\n\tbool operator < (const node& o) const { return r == o.r ? l < o.l : r < o.r; }\t\n}actor[N];\n\nstruct node1 {\n\tint l, r, id;\n\tnode1() {}\n\tnode1(int L, int R, int ID) : l(L), r(R), id(ID) {}\n\tbool operator < (const node1& o) const { return l < o.l; }\n}play[N];\n\ninline bool cmp(node& a, node& b) { return a.l < b.l; }\n\nmultiset<node> s;\nint ans[N];\n\nint main() {\n\tint n, m;\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i) scanf(\"%d %d\", &play[i].l, &play[i].r), play[i].id = i;\n\tscanf(\"%d\", &m);\n\tfor(int i = 1; i <= m; ++i) scanf(\"%d %d %d\", &actor[i].l, &actor[i].r, &actor[i].k), actor[i].id = i;\n\tsort(play + 1, play + n + 1);\n\tsort(actor + 1, actor + m + 1, cmp);\n\tint p = 1;\n\ts.insert(node(-inf,-inf,0,0));\n\ts.insert(node(inf,inf,0,0));\n\tfor(int i = 1; i <= n; ++i) {\n\t\twhile(p <= m && actor[p].l <= play[i].l) s.insert(actor[p]), ++p;\n\t\titra it = s.lower_bound(node(-inf, play[i].r, 0, 0));\n\t\tif(it->r == inf) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tnode tmp = *it; s.erase(it);\n\t\tif(--tmp.k > 0) s.insert(tmp);\n\t\tans[play[i].id] = tmp.id;\n\t}\n\tprintf(\"YES\\n\");\n\tfor(int i = 1; i <= n; ++i) printf(\"%d \", ans[i]);\n\tprintf(\"\\n\");\n\treturn 0; \n} \n```",
        "postTime": 1573535905,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF496E \u3010Distributing Parts \u3011"
    }
]