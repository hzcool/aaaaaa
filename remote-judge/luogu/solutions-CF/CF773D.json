[
    {
        "content": "\u7b80\u8ff0\u4e00\u4e0b\u9898\u610f\uff1a\u7ed9\u51fa$n$\u4e2a\u70b9\u7684\u5b8c\u5168\u56fe\uff0c\u5bf9\u4e8e\u5b8c\u5168\u56fe\u4e2d\u7684\u6bcf\u4e2a\u70b9$i$\uff0c$i$\u4f5c\u4e3a\u7ec8\u70b9\u65f6\uff0c\u8981\u4f7f\u5176\u4ed6\u6bcf\u4e2a\u70b9\u5230\u70b9$i$\u7684\u201c\u8ddd\u79bb\u201d\u548c\u6700\u5c0f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\u8fd9\u91cc\u7684\u201c\u8ddd\u79bb\u201d\u662f\u6307\u5bf9\u4e8e\u5176\u4ed6\u6bcf\u4e2a\u70b9\uff0c\u90a3\u4e2a\u70b9\u5230\u70b9$i$\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u503c\u3002\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$i$\uff0c\u8ba1\u7b97\u7b54\u6848\u65f6\u5e94\u4fdd\u8bc1\u56fe\u5185\u6bcf\u6761\u8fb9\u7684\u65b9\u5411\u4e00\u5b9a\u3002\uff08\u6709\u70b9\u96be\u89e3\u91ca\uff0c\u53ef\u4ee5\u53c2\u8003\u539f\u6587\uff09\n\n**\u9898\u610f\u5f88\u96be\u8868\u8ff0\u6e05\u695a\uff0c\u5efa\u8bae\u770b\u61c2\u539f\u9898\u540e\u518d\u6765\u770b\u6b64\u9898\u89e3\u3002**\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u7ec8\u70b9$i$\uff0c\u6700\u540e\u8fde\u63a5\u6240\u6709\u70b9\u540e\u56fe\u7684\u5f62\u6001\uff0c\u5e94\u8be5\u662f\u4e00\u68f5\u6811\u63a5\u4e0a\u4e00\u6761\u94fe\u3002\u5982\u56fe\uff1a![](https://s2.ax1x.com/2019/04/30/E8iUmR.jpg)\n\n------------\n### \u6211\u4f1a\u8d2a\u5fc3&&\u641c\u7d22\uff01\n\u4ece\u7ec8\u70b9\u5f00\u59cb\u5012\u641c\uff0c\u5bf9\u4e8e\u5f53\u524d\u641c\u5230\u7684\u70b9$now$\uff0c\u6bcf\u6b21\u627e\u5230\u672a$vis$\u7684\u4e14\u4e0e$now$\u76f8\u8fde\u7684\u8fb9\u6743\u6700\u5c0f\u7684\u70b9\uff0c\u5411\u90a3\u4e2a\u70b9\u7ee7\u7eed\u641c\u3002\n\n~~\u5f88\u663e\u7136\u8fd9\u4e2a\u60f3\u6cd5\u662f\u975e\u5e38\u975e\u5e38\u9519\u8bef\u7684\uff0c\u76f4\u63a5\u6392\u9664~~\n\n------------\n### \u8003\u8651\u4f18\u5316\u8d2a\u5fc3\uff1a\n\u65e2\u7136\u8ba9\u6bcf\u4e2a\u70b9\u5230\u7ec8\u70b9\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\u548c\u6700\u5c0f\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u60f3\u5230\u5c06\u6240\u6709\u70b9\u90fd\u8fde\u5230\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9\u7684\u4e00\u7aef\uff0c\u518d\u4ece\u8fd9\u4e2a\u70b9\u8fde\u5411\u7ec8\u70b9\u3002$($\u4e0b\u6587\u6211\u4eec\u5c06\u8fd9\u4e2a\u70b9\u79f0\u4e3a\u201c\u6700\u5c0f\u70b9\u201d$)$\n\n\u4f46\u8fd9\u4e2a\u8fd8\u662f\u9519\u8bef\u7684\uff0c\u5982\u679c\u8fde\u5411\u7ec8\u70b9\u7684\u90a3\u6761\u8fb9\u6743\u503c\u7279\u522b\u5927$(INF)$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u4f1a\u975e\u5e38\u52a3\u3002\u5982\u56fe\uff1a![](https://s2.ax1x.com/2019/04/30/E8itX9.jpg)\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u5c31\u8003\u8651\u8ba9\u201c\u6700\u5c0f\u70b9\u201d\u53bb\u95f4\u63a5\u7684\u8fde\u5411\u7ec8\u70b9\uff0c\u5373\u4ece\u90a3\u4e9b\u76f4\u63a5\u8fde\u5411\u201c\u6700\u5c0f\u70b9\u201d\u7684\u70b9\u4e2d\u53d6\u4e00\u4e9b\u51fa\u6765\uff0c\u4e0e\u201c\u6700\u5c0f\u70b9\u201d\u6784\u6210\u4e00\u6761\u94fe\uff0c\u4f7f\u8fd9\u4e00\u6761\u94fe\u52a0\u4e0a\u90a3\u68f5\u6811\u7684\u7b54\u6848\u66f4\u4f18\u3002\u6211\u4eec\u79f0\u8fd9\u6761\u94fe$($\u8d77\u70b9\u4e3a\u6700\u5c0f\u70b9,\u7ec8\u70b9\u4e3a$t$ $)$\u7684\u7b54\u6848\u4e3a$dis[t]$\u3002\u5982\u56fe\uff1a![](https://s2.ax1x.com/2019/04/30/E8ia01.jpg)\n\n\u600e\u4e48\u8ba1\u7b97\u7b54\u6848\u5462\uff1f\u6211\u4eec\u8bbe\u90a3\u6761\u94fe\u4e0a\u9664\u7ec8\u70b9\u5916\u6709$x$\u4e2a\u70b9\uff0c\u90a3\u4e48\u90a3\u68f5\u6811\u4e0a\u5c31\u6709$n-1-x$\u4e2a\u70b9\uff0c\u8bbe\u6700\u5c0f\u8fb9\u957f\u5ea6\u4e3a$minn$\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a$dis[t]+minn*(n-1-x)$\u3002\u8fd9\u4e2a$x$\u5f88\u96be\u8ba1\u7b97\uff0c\u8003\u8651\u6d88\u53bb\u3002\u5373\u8ba1\u7b97$dis[t]$\u524d\u5148\u5bf9\u6240\u6709\u8fb9\u6743\u51cf\u53bb\u4e00\u4e2a$minn$\uff0c\u8bbe\u65b0\u94fe\u7b54\u6848\u4e3a$dis'[t]$\uff0c\u90a3\u4e48\u7b54\u6848\u4f1a\u53d8\u6210$(dis'[t]+minn*x)+minn*(n-1-x)$\uff0c\u5373$dis'[t]+minn*(n-1)$\uff0c$x$\u5c31\u6d88\u53bb\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u8ba1\u7b97$dis'[t]$\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u8981\u6c42\u6700\u4f18\u89e3\uff0c\u6211\u4eec\u8dd1\u6700\u77ed\u8def\u6c42$dis$ $($\u5b9a\u4e49\u89c1\u4e0a$)$\u3002\u4e00\u5f00\u59cb\u7684\u72b6\u6001\u662f\u4e0a\u9762\u56fe2\uff0c\u5373\u5411\u7ec8\u70b9\u76f4\u63a5\u8fde\u8fb9\uff0c\u6240\u4ee5\u8d4b\u4e3a\u7ec8\u70b9\u4e0e\u6700\u5c0f\u70b9\u7684\u8fb9\u6743$($\u8be6\u89c1\u4ee3\u7801$)$\u3002\u8fd8\u6709\u4e00\u79cd\u72b6\u6001\uff0c\u5373\u8003\u8651\u90a3\u6761\u94fe\u4e0a\u67093\u4e2a\u70b9\u3002\u8bbe\u52a0\u5165\u7684\u4e3a\u70b9$j$\uff0c\u90a3\u4e48\u94fe\u7684\u7b54\u6848\u53ef\u80fd\u4e3a\u6700\u5c0f\u70b9\u5230\u7ec8\u70b9\u7684\u7b54\u6848\u52a0\u4e0a$j$\u5230\u7ec8\u70b9\u7684\u7b54\u6848\uff0c\u5373$f[i][j]*2$ $($ $f$\u6570\u7ec4\u4e3a\u90bb\u63a5\u77e9\u9635\uff0c$i$\u662f\u7ec8\u70b9 $)$\u3002\u6700\u540e$dij$\u677e\u5f1b\u5373\u53ef$($\u6a21\u677f$)$\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,f[3005][3005],vis[3005],dis[3005];\ninline int read(){\n\tint ret=0,ff=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') ff=-1;ch=getchar();}\n\twhile(isdigit(ch)){ret=(ret<<3)+(ret<<1)+(ch^48);ch=getchar();}\n\treturn ret*ff;\n}\ninline void write(int x){\n\tif(x<0){putchar('-');x=-x;}\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}\nvoid dij(int st){\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i]=f[st][i];\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(i!=j) dis[i]=min(dis[i],f[i][j]*2);\n\t}\n\tvis[st]=1;\n\tfor(int i=1;i<=n-1;i++){\n\t\tint minn=2e9+1,k;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!vis[j]&&dis[j]<minn){\n\t\t\t\tminn=dis[j];\n\t\t\t\tk=j;\n\t\t\t}\n\t\tvis[k]=1;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!vis[j])\n\t\t\t\tdis[j]=min(dis[j],dis[k]+f[j][k]);\n\t}\n}\nint main(){\n\tint minn=2e9+1,k;\n\tn=read();\n\tfor(int i=1;i<=n-1;i++)\n\t\tfor(int j=1;j<=n-i;j++){\n\t\t\tf[i][i+j]=f[i+j][i]=read();\n\t\t\tif(f[i][i+j]<minn){\n\t\t\t\tminn=f[i][i+j];\n\t\t\t\tk=i;\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n-1;i++)\n\t\tfor(int j=1;j<=n-i;j++){\n\t\t\tf[i][i+j]-=minn;\n\t\t\tf[i+j][i]=f[i][i+j];\n\t\t}\t\t\n\tdij(k);\n\tfor(int i=1;i<=n;i++) printf(\"%d \",dis[i]+minn*(n-1));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1551792109,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF773D \u3010Perishable Roads\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u7ffb\u8bd1\u6bd4\u8f83\u6709\u8bef\u5bfc\u6027\uff0c\u6751\u6c11\u5e76\u4e0d\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u4eba\u6307\u4e0d\u540c\u7684\u8def\uff0c\u5982\u679c\u662f\u90a3\u6837\u7684\u8bdd\u7b54\u6848\u6c38\u8fdc\u662f $w_{\\min}\\times (n-1)$\u3002\n\n\u9996\u5148\u5bb9\u6613\u53d1\u73b0\uff0c\u6240\u6709\u8282\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u7ec4\u6210\u4e86\u4e00\u68f5\u6811\u3002\u4f46\u662f\u8fd9\u4e2a\u63cf\u8ff0\u8fd8\u4e0d\u592a\u51c6\u786e\uff0c\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u7ec8\u70b9\u7684\u5ea6\u6570\u5927\u4e8e $1$ \u603b\u662f\u4f1a\u6709\u66f4\u4f18\u7684\u65b9\u6848\u7684\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u628a\u591a\u51fa\u6765\u7684\u5b50\u6811\u201c\u79fb\u683d\u201d\u5230\u6700\u77ed\u8fb9\u7684\u540e\u9762\u3002\n\n![CF773D-1](https://picgo-1302619124.file.myqcloud.com/C/CF773D-1.png)\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u540e\u8fd9\u5f62\u6210\u4e86\u4e00\u6761\u94fe+\u4e00\u68f5\u6811\u7684\u5f62\u6001\uff0c\u4f60\u53ef\u4ee5\u5728\u522b\u7684\u9898\u89e3\u91cc\u770b\u5230\u8fd9\u4e00\u8bf4\u6cd5\uff1b\u6811\u7684\u5f62\u6001\u4e0d\u91cd\u8981\uff0c\u6811\u7684\u5927\u5c0f\u548c\u94fe\u7684\u5f62\u6001/\u5927\u5c0f\u662f\u91cd\u8981\u7684\u3002\n\n\u7531\u4e8e\u8981\u6bcf\u4e2a\u7ec8\u70b9\u5f80\u6700\u5c0f\u8fb9\u4e0a\u5bf9\u7684\u5f00\u9500\u592a\u5927\uff0c\u6211\u4eec\u8003\u8651\u6c42\u51fa\u5bf9\u4e8e\u6700\u5c0f\u8fb9\u63a5\u5230\u6bcf\u4e00\u4e2a\u7ec8\u70b9\u7684\u94fe\u7684\u8d21\u732e $dis_i$\u3002\u8bbe\u94fe\u7684\u5927\u5c0f\uff08\u4e0d\u5305\u62ec\u7ec8\u70b9\uff0c\u4ece\u6700\u5c0f\u8fb9\u9760\u8fd1\u7ec8\u70b9\u7684\u90a3\u7aef\u7684\u8282\u70b9\u7b97\u8d77\uff09\u4e3a $x$\uff0c\u5219 $ans_i=w_{\\min}\\times(n-1-x)+dis_i$\u3002\n\n\u6709\u4e2a $x$ \u5f88\u70e6\uff0c\u6211\u4eec\u5e0c\u671b\u6d88\u6389\uff0c\u5982\u679c\u6240\u6709\u8fb9\u7684\u6743\u503c\u90fd\u51cf\u6389\u4e00\u4e2a\u7279\u5b9a\u7684\u503c $val$\uff0c\u90a3\u4e48\u603b\u7684\u8d21\u732e\u4e00\u5b9a\u51cf\u5c11\u4e86 $n\\times val$\u3002\u6211\u4eec\u8003\u8651\u8ba9\u6240\u6709\u8fb9\u7684\u6743\u503c\u90fd\u51cf\u6389 $w_{min}$\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u53d8\u6210\u4e86 $ans_i=w_{\\min}\\times(n-1)+dis_i$\u3002\u8003\u8651\u5982\u4f55\u6c42\u8fd9\u4e2a $dis_i$\uff0c\u9996\u5148\u521d\u59cb\u503c\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u662f\u6700\u5c0f\u70b9\u76f4\u63a5\u8fde $i$\uff0c\u503c\u4e3a $f_{\\min p,i}$\uff0c\u6216\u8005\u662f\u7ecf\u8fc7\u4e24\u6761\u8fb9\u3002\u8fd9\u6837\u80fd\u628a\u6700\u5c0f\u70b9\u7684\u8d21\u732e\u6d88\u6389\u3002\u968f\u540e\u50cf\u771f\u7684 Dij \u90a3\u6837\u8dd1\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,N,a[2005][2005],mn=2000000000,mnp,dis[2005],vis[2005];\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tcin>>a[i][j];\n\t\t\tif(a[i][j]<mn){\n\t\t\t\tmn=a[i][j];\n\t\t\t\tmnp=i;\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\ta[i][j]=a[j][i]=a[i][j]-mn;\n\t// for(int i=1;i<=n;i++)\n\t// \ta[i][i]=-mn;\n\tfor(int i=1;i<=n;i++)\n\t\tdis[i]=a[mnp][i];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(j!=i)\n\t\t\t\tdis[i]=min(dis[i],min(dis[j],a[j][i])+a[j][i]);\n\tdis[0]=2000000000;\n\tvis[mnp]=1;\n\tfor(int FUCK=1;FUCK<n;FUCK++){\n\t\tint cur=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(dis[i]<=dis[cur]&&!vis[i])\n\t\t\t\tcur=i;\n\t\tvis[cur]=1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(!vis[i])\n\t\t\t\tdis[i]=min(dis[i],dis[cur]+a[i][cur]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tcout<<1ll*mn*(n-1)+dis[i]<<'\\n';\n}/*\n*/\n```\n\n",
        "postTime": 1618224743,
        "uid": 251723,
        "name": "Schwarzkopf_Henkal",
        "ccfLevel": 6,
        "title": "Es lebe Mein F\u00fchrer"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n- \u9644\u8fd1\u6709$n$\u4e2a\u57ce\u5e02\uff0c\u57ce\u5e02\u4e24\u4e24\u4e4b\u95f4\u90fd\u6709\u53cc\u5411\u7684\u9053\u8def\uff0c\u9053\u8def\u7684\u957f\u5ea6\u4e3a$w$\uff0c\u67d0\u4f4d\u65c5\u884c\u8005\u7684\u76ee\u7684\u5730\u662f\u57ce\u5e02$s$\uff0c\u4f46\u662f\u4ed6\u4e0d\u8ba4\u8def\uff0c\u6240\u4ee5\u4ed6\u6bcf\u5230\u4e00\u4e2a\u57ce\u5e02\u90fd\u4f1a\u5411\u90a3\u91cc\u7684\u5c45\u6c11\u8be2\u95ee\u8be5\u5f80\u90a3\u91cc\u8d70\u624d\u80fd\u5230\u57ce\u5e02$s$\uff0c\u5230\u4e00\u4e2a\u57ce\u5e02\u7684\u4ee3\u4ef7\u4e3a\u6240\u7ecf\u8fc7\u7684\u9053\u8def\u7684\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u4ed6\u60f3\u77e5\u9053\u4ece\u4efb\u610f\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\u5230$s$\u7684\u6700\u5c0f\u7684\u4ee3\u4ef7\u548c\u3002\u4ed6\u8981\u53bb\u7684\u57ce\u5e02$s$\u8fd8\u6ca1\u6709\u5b9a\u4e0b\u6765\uff0c\u6240\u4ee5\u8bf7\u4f60\u6c42\u51fa\u5bf9\u4e8e\u6240\u6709\u7684$s$\u7684\u4ee3\u4ef7\u548c\u3002\u57ce\u5e02\u91cc\u7684\u5c45\u6c11\u90fd\u5f88\u806a\u660e\uff0c\u4f1a\u5bf9\u4ed6\u6307\u51fa\u4f7f\u4ee3\u4ef7\u548c\u6700\u5c0f\u7684\u65b9\u6848\u3002\n\n\u8981\u90e8\u5206\u5206\u4ee5\u53ca\u4e2d\u6587\u7ffb\u8bd1\u7684\u540c\u5b66\u53ef\u4ee5\u70b9\u5f00[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/U64505)\n\n- ~~\u51fa\u9898\u4eba\u592a\u83dc\u4e86\u4e0d\u77e5\u9053\u4ec0\u4e48\u90e8\u5206\u5206\u7684\u7b97\u6cd5\uff0c\u6240\u4ee5\u6570\u636e\u968f\u673a\uff0c\u5e76\u4e14\u7ed9\u4e86\u6b63\u786e\u6027\u8f83\u9ad8\u7684\u4e71\u641e\u90e8\u5206\u5206\u3002~~\n\n- \u5982\u679c\u6709\u7528\u4e71\u641e\u5f97\u5230\u9ad8\u5206\u7684\u9009\u624b\u53ef\u4ee5\u5148\u4e0a\u6765\u5206\u4eab\u4e00\u4e0b\u505a\u6cd5\n\n## \u9898\u76ee\u5206\u6790\n\n###  \u6211\u4e00\u5f00\u59cb\u7684\u9519\u8bef\u60f3\u6cd5\n\n\u200b\t\u5f88\u663e\u7136\uff0c\u8fd9\u4e2a\u8def\u6807\u8fde\u63a5\u8d77\u6765\u4e4b\u540e\u662f\u4e00\u68f5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u57ce\u5e02\u7684\u8d21\u732e\u5c31\u662f\u8fd9\u4e2a\u57ce\u5e02\u5230\u7ec8\u70b9\u57ce\u5e02$s$\u7684\u8def\u4e0a\u7684\u6700\u5c0f\u503c\u3002\n\n\u200b\t\u7136\u540e\u6211\u5c31\u6709\u4e86\u4e00\u4e2a~~\u975e\u5e38\u777f\u667a\u7684~~\u60f3\u6cd5\uff1a\u5c31\u662f\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7ec8\u70b9\u57ce\u5e02$s$\uff0c\u628a\u6240\u6709\u7684\u57ce\u5e02\u90fd\u8fde\u5728\u6700\u77ed\u8fb9\u7684\u4e00\u7aef\uff0c\u518d\u7531\u6700\u77ed\u8fb9\u76f4\u63a5\u8fde\u5230\u7ec8\u70b9\u57ce\u5e02$s$\u3002\n\n\u200b\t~~\u7136\u540e\u3002\u3002\u3002\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u662f\u5047\u7684~~\n\n### \u6b63\u786e\u7684\u60f3\u6cd5\n\n\u200b\t\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u5b83\u8fdb\u884c\u4e00\u4e9b~~\u5fae$(j\u00f9)$\u5c0f$(d\u00e0)$\u7684~~\u4fee\u6539\u8ba9\u5b83\u6210\u4e3a\u6b63\u786e\u7684\u3002\n\n\u200b\t\u8003\u8651\u8fd9\u4e2a\u60f3\u6cd5\u7684\u9519\u8bef\u4e4b\u5904\uff1a\u5728\u4e8e\u6700\u77ed\u8fb9\u7684\u4e00\u7aef\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\u53ef\u80fd\u5f88\u957f\uff0c\n\n\u200b\t\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5bf9\u8fd9\u4e2a\u8fdb\u884c\u8ba1\u7b97\n\n\u200b\t\u6700\u77ed\u8fb9\u7684\u4e00\u8fb9\u5230\u7ec8\u70b9\u57ce\u5e02\u7684\u8def\u5f84\u663e\u7136\u662f\u4e00\u6761\u94fe\u3002\n\n\u200b\t\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6761\u94fe\u5982\u679c\u662f\u4ece\u7ec8\u70b9\u57ce\u5e02\u5f00\u59cb\u9012\u51cf\u7684\n\n\u200b\t\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u8fd9\u6761\u94fe\u7684\u957f\u5ea6\n\n\u200b\t\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e2a\u4e1c\u897f\u518d\u8f6c\u5316\u4e00\u4e0b\n\n\u200b\t\u5bf9\u4e8e\u4e00\u4e2a\u4e2d\u95f4\u6709\u8fb9\u6bd4\u4e4b\u540e\u7684\u8fb9\u8981\u5c0f\u7684\u8bdd\uff0c\u90a3\u4e48\u663e\u7136\u5b83\u4e4b\u524d\u7684\u6240\u6709\u8fb9\u76f4\u63a5\u8fde\u5230\u6700\u77ed\u8fb9\u5c31\u597d\u4e86\u3002\n\n\u200b\t\u90a3\u4e48\u8fd9\u6761\u6700\u77ed\u8fb9\u7684\u8d21\u732e\u5e94\u8be5\u4e3a\u4e24\u500d\u7684\u6743\u503c\n\n\u200b\t\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u6700\u77ed\u8fb9\u7684\u70b9\u5230\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u53ef\u4ee5\u7b80\u5316\u6210\u672c\u6765\u5b58\u5728\u7684\u8def\u6216\u8005\u662f\u8fd9\u4e2a\u70b9\u8fde\u7740\u4e00\u6761\u8fb9\u7684\u4e24\u500d\t\n\n\u200b\t\u7136\u540e\u4ee5\u6700\u77ed\u8fb9\u7684\u70b9\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\u5c31\u597d\u4e86\n\n\u200b\t\u6700\u540e\u8bb0\u5f97\u52a0\u4e0a\u5269\u4e0b\u7684\u8fb9\u6570\u4e58\u6700\u77ed\u8fb9\n\n## \u732e\u4e0a\u6211\u7684~~\u4e11\u964b\u7801\u98ce~~\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\n\nchar gc()\n{\n    static char buf[1<<20],*p1=buf,*p2=buf;\n    if(p1==p2)\n    {\n        p2=(p1=buf)+fread(buf,1,1<<20,stdin);\n        if(p1==p2)return EOF;\n    }\n    return *p1++;\n}\n\n#define getchar gc\n\ntemplate<typename _Tp>\n_Tp read(_Tp& x)\n{\n    x=0;\n    char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    return x;\n}\n\n\nusing namespace std;\n\nlong long n,s,ans,minn,a[5005][5005],dis[5005];\nbool vis[5005];\n\ninline void dijkstra(int s)\n{\n    memset(vis,0,sizeof(vis));\n    memset(dis,0x7f,sizeof(dis));\n    for(int i=1;i<=n;i++)\n    {\n        dis[i]=a[s][i];\n        for(int j=1;j<=n;j++)\n        {\n            if(i!=j)dis[i]=min(dis[i],a[i][j]*2);\n        }\n    }\n    vis[s]=1;\n    for(int i=1;i<=n-1;i++)\n    {\n        long long minn=~(1LL<<63),v;\n        for(int j=1;j<=n;j++)\n        {\n            if(!vis[j]&&dis[j]<minn)\n            {\n                minn=dis[j];v=j;\n            }\n        }\n        vis[v]=true;\n        for(int j=1;j<=n;j++)\n        {\n            if(!vis[j])\n            {\n                dis[j]=min(dis[j],dis[v]+a[v][j]);\n            }\n        }\n    }\n}\n\nint main()\n{\n    read(n);\n    minn=0x7fffffffffffffff;\n    for(int i=1;i<=n-1;i++)\n    {\n        for(int j=i+1;j<=n;j++)\n        {\n            read(a[i][j]);\n            a[j][i]=a[i][j];\n            if(a[i][j]<minn)minn=a[i][j],s=i;\n        }\n    }\n    for(int i=1;i<=n-1;i++)\n    {\n        for(int j=i+1;j<=n;j++)\n        {\n            a[i][j]-=minn;\n            a[j][i]=a[i][j];\n        }\n    }\n    dijkstra(s);\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%lld \",dis[i]+minn*(n-1));\n    }\n}\n\n```\n\n",
        "postTime": 1551837003,
        "uid": 172719,
        "name": "\u5e94\u541f\u541f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF773D \u3010Perishable Roads\u3011"
    },
    {
        "content": "## Solution - CF773D\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/problemset/problem/773/D)\n\n### \u9898\u610f\n\n\u4e00\u5f20 $n$ \u4e2a\u70b9\u7684\u65e0\u5411\u5b8c\u5168\u56fe.\n\u6709\u4e00\u4e2a\u7ec8\u70b9 $e$\uff0c\u9700\u8981\u4f60\u7ed9\u6bcf\u4e00\u70b9\u786e\u5b9a\u4e00\u4e2a\u540e\u7ee7.\n\u4f7f\u6309\u7167\u89c4\u5b9a\u7684\u540e\u7ee7\u8d70\uff0c\u6240\u6709\u70b9\u5230 $e$ \u7684\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\u7684\u548c\u6700\u5c0f\n\u5f53 $e$ \u53d6 $[1,n]$ \u65f6\uff0c\u8f93\u51fa\u6bcf\u6b21\u7684\u7b54\u6848.\n\n### \u9898\u89e3\n\n\u771f\u662f\u4e00\u9053\u5999\u5999\u9898\uff0c\u51e0\u4e2a\u673a\u667a\u7684\u89c2\u5bdf\u8ba9\u8fd9\u9053\u9898\u53d8\u7684\u975e\u5e38\u5bb9\u6613.\n\n---\n\n#### \u89c2\u5bdf1\uff1a\n\n\u9996\u5148\u6211\u4eec\u4f1a\u6709\u4e00\u4e2a\u5341\u5206 $naive$ \u7684\u8d2a\u5fc3\uff0c\n\n\u5c31\u662f\u8ba9\u5176\u4ed6\u6240\u6709\u70b9\u901a\u8fc7 **\u6700\u5c0f\u7684\u8fb9** \u4e0e $e$ \u76f8\u8fde\uff0c\n\n\u8fd9\u6837\u7684\u8bdd\u6240\u6709\u7684\u70b9\u7684\u4ee3\u4ef7\u90fd\u662f\u6700\u5c0f\u8fb9\u7684\u957f\u5ea6\uff0c\u4e00\u5b9a\u662f\u6700\u4f18\u7684.\n\n\u4f46\u662f\u8fd9\u4e2a\u751f\u6210\u6811\u4e0d\u4e00\u5b9a\u9020\u7684\u51fa\u6765\uff0c\u56e0\u4e3a\u6700\u5c0f\u7684\u8fb9\u4e0d\u4e00\u5b9a\u4e0e $e$ \u76f4\u63a5\u76f8\u8fde\uff0c\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u7684\u6700\u4f18\u60c5\u51b5\u5c31\u662f **\u4e00\u6761\u94fe + \u4e00\u68f5\u6811** .  \u4e14\u6700\u5c0f\u8fb9\u5728\u6811\u3001\u94fe\u7684\u8fde\u63a5\u5904.\n\n\u6211\u4eec\u8bb0\u6700\u5c0f\u7684\u8fb9\u957f\u5ea6\u4e3a $min$ \uff0c\u6811\u4e0a\u7684\u70b9\u4ee3\u4ef7\u5168\u90e8\u4e3a $min$ \uff0c\u94fe\u4e0a\u7684\u70b9\u4ee3\u4ef7\u9700\u8981\u53e6\u5916\u8ba1\u7b97.\n\n---\n\n#### \u89c2\u5bdf2\uff1a\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u79cd\u6700\u4f18\u60c5\u51b5\uff0c\u4f7f\u94fe\u4e0a\u7684\u70b9\u4ece\u4e0e\u6700\u5c0f\u8fb9\u76f8\u8fde\u7684\u70b9 \u5230 $e$ \u662f **\u4f9d\u6b21\u9012\u589e** .\n\n\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff1a\n\n\u5982\u679c\u94fe\u4e0a\u6709\u4e00\u6761\u9012\u51cf\u7684\u8fb9\uff0c\u90a3\u4e48\u628a\u8fd9\u6761\u8fb9\u653e\u5230\u94fe\u7684\u8d77\u59cb\u4f4d\u7f6e\u7b54\u6848\u80af\u5b9a\u4e0d\u52a3\uff0c\n\n\u56e0\u4e3a\u524d\u9762\u8f83\u5927\u7684\u8fb9\u5e76\u4e0d\u4f1a\u5bf9\u94fe\u4e0a\u7684\u4ee3\u4ef7\u4f5c\u51fa\u4efb\u4f55\u8d21\u732e.\n\n\u7531\u4e8e\u94fe\u4e0a\u7684\u8fb9\u6743\u4f9d\u6b21\u9012\u589e\uff0c\u6bcf\u6761\u8fb9\u90fd\u53ea\u4f1a\u4f5c\u51fa\u4e00\u6b21\u8d21\u732e\uff0c\u76f8\u5f53\u4e8e\u662f\u4e00\u6761 **\u8def\u5f84**.\n\n\u6240\u4ee5\u6211\u4eec\u4ece\u4e0e\u6700\u5c0f\u8fb9\u76f8\u8fde\u7684\u70b9 $s$ \u51fa\u53d1\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\uff0c\n\n\u4ee5\u6240\u6709\u70b9\u4e3a\u7ec8\u70b9\u7684\u94fe\u4e0a\u7684\u6700\u5c0f\u4ee3\u4ef7.\n\n---\n\n\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u8ba1\u7b97\u7b54\u6848\uff0c\u53ef\u4ee5\u628a\u7b54\u6848\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u6811\u4e0a\u7684\u548c\u94fe\u4e0a\u7684.\n\n\u6211\u4eec\u8bb0\u94fe\u4e0a\u4e00\u5171\u6709 $x$ \u4e2a\u70b9\uff0c\u4e0e\u6700\u5c0f\u8fb9\u76f8\u8fde\u7684\u70b9\u662f $s$ \uff0c\u7ec8\u70b9\u4e3a $e$ \uff0c\u90a3\u4e48\uff1a\n$$\nans = (n-x-1)\\times min+dis(s,e)\n$$\n\u8003\u8651\u5230\u8fd9\u4e2a $x$ \u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u5f88\u96be **\u5728\u6700\u540e** \u8fdb\u884c\u8ba1\u7b97\uff0c\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651 **\u82b1\u8d39\u63d0\u524d** \u7684\u601d\u60f3\uff0c\u5728\u8ba1\u7b97 $dis$ \u65f6\uff0c\u628a $-x\\times min$ \u4e00\u5e76\u7b97\u6389.\n\n\u4e5f\u5c31\u662f\u628a\u6240\u6709\u7684\u8fb9\u6743\u5168\u90e8\u51cf\u53bb $min$ \u540e\u8dd1\u6700\u77ed\u8def.\n\n---\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long \nconst int N=2005;\nint n,m=0,g[N][N],mi=1e18,sta,dis[N],vis[N];\nbool checkmin(int &x,int y){return y<x?x=y,1:0;}\nvoid dijstra()\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tvis[sta]=1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tdis[i] = g[sta][i];\n\t\tfor(int j=1;j<=n;++j) if(j!=i) checkmin(dis[i],g[i][j]*2); \n\t}\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint u=-1; for(int j=1;j<=n;++j) if(!vis[j] && (u==-1||dis[j]<dis[u])) u=j;\n\t\tvis[u]=1; for(int v=1;v<=n;++v) if(!vis[v]) checkmin(dis[v],dis[u]+g[u][v]);\n\t}\n}\nsigned main()\n{\n\tcin >> n;\n\tfor(int x,i=1;i<=n-1;++i) for(int j=1;j<=n-i;++j) {\n\t\tscanf(\"%lld\",&x);\n\t\tg[i][i+j]=g[i+j][i]=x; \n\t\tif(checkmin(mi,g[i][i+j])) sta=i;\n\t}\n    \n\tfor(int i=1;i<=n;++i) for(int j=i+1;j<=n;++j) g[i][j]-=mi,g[j][i]-=mi;\n\tdijstra();\n\tfor(int i=1;i<=n;++i) cout << (n-1)*mi + dis[i] << endl; \n\n\treturn 0;\n}\n```",
        "postTime": 1606347299,
        "uid": 95246,
        "name": "MoonPie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF773D \u3010Perishable Roads\u3011"
    },
    {
        "content": "**\u5bf9\u4e8e\u9898\u610f\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u770b[\u03b9\u03c7\u03b3\u0431\u0431\u0431\u5de8\u4f6c\u7684\u535a\u5ba2](https://www.luogu.org/blog/27858/solution-cf773d)**\n\n\u57fa\u672c\u601d\u8def\u662f\u8d2a\u5fc3+\u7384\u5b66\u6700\u77ed\u8def\u3002\n\n\u6211\u4eec\u8bbe\u4e00\u70b9\u4e3a\u6700\u7ec8\u7b54\u6848\u7684\u7ec8\u70b9\uff0c\u5047\u8bbe\u6700\u7ec8\u7b54\u6848\u662f\u4e00\u6761\u94fe\u4e14\u5176\u5448\u9012\u589e\uff0c\u5373\u8d8a\u9760\u8fd1\u7ec8\u70b9\u8fb9\u7684\u6743\u503c\u8d8a\u5927\uff0c\u90a3\u4e48\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u4e5f\u662f\u9012\u589e\u7684\uff0c\u4e14\u662f\u8fd9\u4e2a\u60c5\u51b5\u4e0b\u7684\u6700\u4f18\u89e3\u3002\n\n\u5982\u679c\u8fd9\u6761\u94fe\u7684\u67d0\u4e00\u5904\u51fa\u73b0\u4e86\u9012\u51cf\u8fb9\uff0c\u90a3\u4e48\u628a\u8fd9\u6761\u8fb9\u653e\u5230\u94fe\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7b54\u6848\u80af\u5b9a\u66f4\u4f18\uff08\u7531\u4e8e\u94fe\u662f\u9012\u589e\uff0c\u94fe\u7684\u8d77\u59cb\u4f4d\u7f6e\u5bf9\u5e94\u7684\u8fb9\u6700\u5c0f\uff0c\u518d\u63a5\u4e00\u4e2a\u8f83\u52a3\u70b9\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff09\u3002\u56e0\u6b64\u6700\u540e\u7684\u7b54\u6848\u4e00\u5b9a\u6ee1\u8db3\u662f\u4e00\u6761\u9012\u589e\u7684\u94fe+\u4e00\u9897\u6811\u3002\n\n\u8bbe\u4e00\u6761\u8d77\u70b9\u4e3a\u6700\u5c0f\u70b9\uff0c\u7ec8\u70b9\u4e3a$i$\u7684\u94fe\u7684\u7b54\u6848\u4e3a$dis[i]$\uff0c\u7531\u4e8e\u8fd9\u6761\u94fe\u6240\u63a5\u7684\u6811\u4e0a\u8282\u70b9\u4e2a\u6570\u5f88\u96be\u7edf\u8ba1\uff0c\u4f46\u6700\u7ec8\u7b54\u6848\u548c\u6700\u77ed\u8fb9\u7684\u6743\u503c\u6709\u5173\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u6240\u6709\u7684$dis$\u90fd\u51cf\u53bb\u6700\u77ed\u8fb9\u7684\u8ddd\u79bb\uff0c\u8fd9\u6837\u5c31\u6d88\u9664\u4e86\u6811\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u4e71\u641e\u4e86\uff1a\u7531\u4e8e\u9012\u589e\u94fe\u6700\u4f18\uff0c\u6211\u4eec\u7528\u6700\u77ed\u8def\u6c42\u51fa\u6700\u4f18\u94fe\uff0c\u5e76\u628a\u6ca1\u7528\u7684\u70b9\u65e0\u8111\u4e22\u5230\u6811\u4e0a\u3002\u540c\u65f6\uff0c\u8003\u8651\u94fe\u4e0a\u4e24\u70b9$i,s$\uff0c\u82e5\u4ee5\u70b9$j$\u4e3a\u4e2d\u8f6c\u7ad9\u66f4\u4f18\uff0c\u7b54\u6848\u5c31\u662f$i,j$\u95f4\u8ddd\u79bb\u7684\u4e24\u500d\u3002\n\n\u603b\u4e4b\u8fd9\u9053\u9898\u8fd8\u662f\u5f88\u7384\u5b66\u7684\uff0c\u5927\u5bb6\u81ea\u884c\u7406\u89e3\n\n\u8bb0\u5f97\u5f00long long\uff0c\u4ee5\u4e0b\u4e3aAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define int long long\nusing namespace std;\n#define dd ch=getchar()\ninline int read()\n{\n    int x=0;bool f=false;char dd;\n    while(!isdigit(ch)){f|=ch=='-';dd;}\n    while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-48;dd;}\n    return f?-x:x;\n}\n#undef dd\ninline void write(int x)\n{\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)write(x/10);\n    putchar(x%10+48);\n}\nconst int N=2005,INF=0x7fffffff;\nint n,a[N][N];\nstruct node\n{\n    int w,id;\n    inline friend bool operator <(const node x,const node y){return x.w>y.w;}\n};\nint d[N];\nbool vis[N];\npriority_queue<node>q;\ninline void dijkstra(const int s)\n{\n    memset(d,0x3f,sizeof(d));\n    memset(vis,false,sizeof(vis));vis[s]=true;\n    for(int i=1;i<=n;i++)\n    {\n        d[i]=a[s][i];\n        for(int j=1;j<=n;j++)\n            if(i!=j)\n                d[i]=min(d[i],a[i][j]<<1);\n        q.push((node){d[i],i});\n    }\n    while(!q.empty())\n    {\n        int u=q.top().id;q.pop();\n        if(vis[u])continue;\n        vis[u]=true;\n        for(int v=1;v<=n;v++)\n        {\n            if(v==u)continue;\n            if(d[v]>d[u]+a[u][v])\n                d[v]=d[u]+a[u][v],q.push((node){d[v],v});\n        }\n    }\n}\nsigned main()\n{\n    n=read();\n    for(int i=1;i<n;i++)\n        for(int j=i+1;j<=n;j++)\n            a[j][i]=a[i][j]=read();\n    int minn=INF,s;\n    for(int i=1;i<=n;i++)\n        for(int j=i+1;j<=n;j++)\n            if(a[i][j]<minn)\n                minn=a[i][j],s=i;\n    for(int i=1;i<=n;i++)\n        for(int j=i+1;j<=n;j++)\n            a[j][i]=a[i][j]=a[i][j]-minn;\n    dijkstra(s);\n    for(int i=1;i<=n;i++)\n        write(d[i]+minn*(n-1)),putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1551834989,
        "uid": 80299,
        "name": "crpboy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF773D \u3010Perishable Roads\u3011"
    },
    {
        "content": "\u4e3b\u8981\u662f\u770b\u4e86\u5b98\u65b9\u9898\u89e3\u7684\u601d\u8def\u2026\u2026\u6240\u4ee5\u4e3b\u8981\u4e5f\u662f\u5b98\u65b9\u9898\u89e3\u7684\u601d\u8003\u6b65\u9aa4\u2026\u2026\n\nObservation 1\uff1a\u6700\u7ec8\u8fde\u6210\u7684\u4e00\u5b9a\u662f\u94fe\u3002\u5047\u8bbe\u51fa\u73b0\u4e86 $a\\to u$\uff0c$b\\to u$ \u7684\u60c5\u51b5\uff0c\u5047\u8bbe $a\\to u$ \u7684\u4ee3\u4ef7\u66f4\u5c0f\uff0c\u5219\u6211\u4eec\u8fde\u63a5 $b\\to a$ \u540e $b$ \u8d70\u5230 $u$ \u7684\u4ee3\u4ef7\u4e00\u5b9a\u66f4\u5c0f\u3002\n\nObservation 2\uff1a\u65e2\u7136\u4e00\u5b9a\u5b58\u5728\u4ee3\u4ef7\u94fe\u4e0a\u6700\u5c0f\u7684\u8fb9 $x$\uff0c\u5219\u6211\u4eec\u5c06\u6bcf\u4e00\u6761\u8fb9\u7684\u4ee3\u4ef7\u90fd\u51cf\u53bb $x$\uff0c\u7136\u540e\u6240\u6709\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u8def\u5f84\u7684\u4ee3\u4ef7\u5c31\u90fd\u662f $0$\u3002\n\n\u8bbe $w_i$ \u8868\u793a\u53cd\u5411\u94fe\u4e0a\u7b2c $i$ \u6761\u8fb9\u7684\u4ee3\u4ef7\u3002\u5bf9\u4e8e\u8ddd\u79bb\u7b2c\u4e00\u6761\u96f6\u8fb9 $>3$  \u7684\u8fb9\uff0c\u4e00\u5b9a\u6709 $w_i>w_{i+1}$\u3002\u5426\u5219\u6211\u4eec\u5c06\u7b2c $i+1$ \u6761\u8fb9\u6362\u6210\u8fde\u5411\u4e00\u4e2a\u96f6\u8fb9 $k$ \u7684\u51fa\u70b9\u7684\u8fb9\uff0c\u7136\u540e\u5c06 $i+2,i+3,...,k$ \u5168\u90e8\u53cd\u5411\u540e\u4e00\u5b9a\u4e0d\u5dee\uff0c\u751a\u81f3\u66f4\u4f18\u3002\n\n\u6240\u4ee5\u73b0\u5728\u552f\u4e00\u51fa\u73b0\u51b3\u7b56\u7684\u662f $w_{k-2}>w_{k-1}$ \u6216\u8005 $w_{k-2}\\le w_{k-1}$\u3002\u5bf9\u4e8e $w_{k-2}>w_{k-1}$\uff0c\u663e\u7136\u7b54\u6848\u4e3a\u5b83\u5230 museum \u7684\u6700\u77ed\u8def\uff1b\u5bf9\u4e8e $w_{k-2}\\le w_{k-1}$\uff0c\u8bbe\u8fb9 $k-2$ \u7684\u51fa\u70b9\u4e3a $u$\uff0c\u7b54\u6848\u4e3a $2w_{k-2}+dis_{u,t}$\u3002\uff08$t$ \u4e3a museum\uff09\u3002\n\n\u8003\u8651\u5efa\u7acb\u8d85\u7ea7\u6e90\u5230\u6bcf\u4e2a\u70b9 $u$ \u7684\u8ddd\u79bb\u4e3a $2\\min a_{u,i}$\u3002\u7136\u540e\u8d70\u6700\u77ed\u8def\u3002\u6700\u540e\u8981\u8bb0\u5f97\u52a0\u4e0a\u51cf\u53bb\u7684 $(n-1)x$\u3002\n\nhttp://codeforces.com/contest/773/submission/112301043",
        "postTime": 1617884328,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "CF773D Perishable Roads"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u8def\u6807\u5efa\u51fa\u6765\u662f\u4e00\u9897\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u662f\u8fd9\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u503c\u3002\u7136\u540e\u6709\u4e00\u4e2a\u5341\u5206\u673a\u667a\u7684\u60f3\u6cd5\u5c31\u662f\u5bf9\u4e8e\u6240\u6709\u7ec8\u70b9\uff0c\u628a\u6240\u6709\u70b9\u90fd\u8fde\u5728\u6700\u77ed\u7684\u8fb9\u7684\u4e00\u7aef\uff0c\u7136\u540e\u53e6\u4e00\u7aef\u8fde\u5411\u7ec8\u70b9\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u662f\u5047\u7684\n\n\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u5b83\u8fdb\u884c\u4e00\u4e9b\u5fae\u5c0f\u7684\u4fee\u6539\u8ba9\u5b83\u6210\u4e3a\u6b63\u786e\u7684\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u60f3\u6cd5\u7684\u9519\u8bef\u4e4b\u5904\u5728\u4e8e\u6700\u77ed\u8fb9\u7684\u4e00\u7aef\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\u53ef\u80fd\u5f88\u957f\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5bf9\u8fd9\u4e2a\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u77ed\u8fb9\u7684\u4e00\u8fb9\u5230\u7ec8\u70b9\u8def\u5f84\u663e\u7136\u662f\u4e00\u6761\u94fe\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6761\u94fe\u5982\u679c\u662f\u4ece\u7ec8\u70b9\u5f00\u59cb\u9012\u51cf\u7684\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u8fd9\u6761\u94fe\u7684\u957f\u5ea6\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e2a\u4e1c\u897f\u518d\u8f6c\u5316\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e2d\u95f4\u6709\u8fb9\u6bd4\u4e4b\u540e\u7684\u8fb9\u8981\u5c0f\u7684\u8bdd\uff0c\u90a3\u4e48\u663e\u7136\u5b83\u4e4b\u524d\u7684\u6240\u6709\u8fb9\u76f4\u63a5\u8fde\u5230\u6700\u77ed\u8fb9\u5c31\u597d\u4e86\u3002\u90a3\u4e48\u8fd9\u6761\u6700\u77ed\u8fb9\u7684\u8d21\u732e\u5e94\u8be5\u4e3a\u4e24\u500d\u7684\u6743\u503c\u3002\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u6700\u77ed\u8fb9\u7684\u70b9\u5230\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u53ef\u4ee5\u7b80\u5316\u6210\u672c\u6765\u5b58\u5728\u7684\u8def\u6216\u8005\u662f\u8fd9\u4e2a\u70b9\u8fde\u7740\u4e00\u6761\u8fb9\u7684\u4e24\u500d\u3002\n\n\u7136\u540e\u4ee5\u6700\u77ed\u8fb9\u7684\u70b9\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\u5c31\u597d\u4e86\uff0c\u6700\u540e\u8bb0\u5f97\u52a0\u4e0a\u5269\u4e0b\u7684\u8fb9\u6570\u4e58\u6700\u77ed\u8fb9\u3002\u3001\n\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n\n#define Max 3005\n#define ll long long\n\nusing namespace std;\n\nll n,s,ans,minn,a[Max][Max],dis[Max];\nbool vis[Max];\n\ninline void dijkstra(int s){\n\tmemset(vis,0,sizeof vis);\n\tmemset(dis,0x7f,sizeof dis);\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i]=a[s][i];\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(i!=j)dis[i]=min(dis[i],a[i][j]*2);\n\t\t}\n\t}\n\tvis[s]=1;\n\tfor(int i=1;i<=n-1;i++){\n\t\tll minn=1e9,v;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!vis[j]&&dis[j]<minn){\n\t\t\t\tminn=dis[j];v=j;\n\t\t\t}\n\t\t}\n\t\tvis[v]=true;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!vis[j]){\n\t\t\t\tdis[j]=min(dis[j],dis[v]+a[v][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nint main(){\n//    freopen(\"233333.in\",\"r\",stdin);\n//    freopen(\"233333.out\",\"w\",stdout);\n\tios::sync_with_stdio(false);//\u8bfb\u5165\u4f18\u5316\n\tcin>>n;\n\tminn=1e9;\n\tfor(int i=1;i<=n-1;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tcin>>a[i][j];\n\t\t\ta[j][i]=a[i][j];\n\t\t\tif(a[i][j]<minn)minn=a[i][j],s=i;\n\t\t}\n\t}\n\tfor(int i=1;i<=n-1;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\ta[i][j]-=minn;\n\t\t\ta[j][i]=a[i][j];\n\t\t}\n\t}\n\tdijkstra(s);\n\tfor(int i=1;i<=n;i++)cout<<dis[i]+minn*(n-1)<<\" \";\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1551773750,
        "uid": 172536,
        "name": "FAQmother",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF773D \u3010Perishable Roads\u3011"
    }
]