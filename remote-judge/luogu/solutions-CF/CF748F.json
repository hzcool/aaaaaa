[
    {
        "content": "~~**\u8fd9\u9898\u7adf\u7136\u8fd8\u6ca1\u6709\u9898\u89e3\u554a\uff0c\u8d76\u7d27\u6c34\u4e00\u53d1\u2026\u2026**~~\n\n## \u89e3\u6cd5\u8bb2\u89e3\n\n![](https://www.freesion.com/images/327/0be8298e4cf99a2fef8f3c25866b226f.png)\n\n\u5982\u4e0a\u56fe,\u53ea\u8981\u627e\u5230\u8fd9\u6837\u4e00\u4e2a\u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5b83\u7684\u7236\u4eb2\u548c\u513f\u5b50\u4eec\u6240\u5728\u7684\u5b50\u6811\u5728\u56fe\u4e2d\u6807\u4e3a \u2460\u2461\u2462...\u3002\n\n\u53ea\u8981\u5b83\u4eec\u7684\u5927\u5c0f $size \\times2 \\le k$\uff0c\n\n\u5219\u8fd9\u4e2a\u8282\u70b9\u5c31\u662f\u7b26\u5408\u8981\u6c42\u7684\u4e86\uff0c\u4f60\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u8282\u70b9\u5f00\u59cb dfs \u4e00\u6b21\u3002\n\n\u7136\u540e\u628a\u67d0\u4e2a\u961f\u7684\u5bb6\u4e61\u52a0\u5165\u5230\u4e00\u4e2a vector \u91cc\u9762(\u6309 dfs \u5e8f)\uff0c\u6700\u540e for \u4e00\u904d\u3002\n\n\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u5c06 $v[i]$ \u548c $v[i+k/2]$ \u914d\u5bf9\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\u90fd\u5c0f\u4e8e\u7b49\u4e8e $k \\div 2$\u3002\n\n\n\u5219\u53ef\u77e5 $v[i+k/2]$ \u5fc5\u7136\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u53e6\u5916\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u91cc\u9762\u7684\u8282\u70b9\u3002\n\n\u5219 $v[i]$ \u548c $v[i+k/2]$ \u5fc5\u7136\u4e0d\u662f\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u91cc\u9762\uff0c\u5219\u5b83\u4eec\u4fe9\u8fde\u63a5\u7684\u65f6\u5019\u8981\u7ecf\u8fc7\u4e2d\u95f4\u8fd9\u4e2a\u8282\u70b9 $u$\u3002\n\n\u8fd9\u6837\u7684\u8ba8\u8bba\u5bf9\u6240\u6709\u7684 $i$ \u90fd\u6210\u7acb ($ 1\\le i \\le 2\\times k $)\uff0c\u5219\u6bcf\u4e2a\u914d\u5bf9\u90fd\u4f1a\u7ecf\u8fc7\u8fd9\u8282\u70b9 $u$\u3002\n\n## \u4ee3\u7801\u65f6\u95f4\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\n#define LL long long\n#define rep1(i,a,b) for (int i = a;i <= b;i++)\n#define rep2(i,a,b) for (int i = a;i >= b;i--)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define rei(x) scanf(\"%d\",&x)\n#define rel(x) scanf(\"%I64d\",&x)\n \ntypedef pair<int,int> pii;\ntypedef pair<LL,LL> pll;\n \nconst int MAXN = 2e5+100;\nconst int dx[9] = {0,1,-1,0,0,-1,-1,1,1};\nconst int dy[9] = {0,0,0,-1,1,-1,1,-1,1};\nconst double pi = acos(-1.0);\n \nint n,k,macnt[MAXN],cnt[MAXN];\nbool team[MAXN];\nvector <int> G[MAXN],ans;\n \nvoid dfs1(int x,int fa)\n{\n    if (team[x])\n        cnt[x]++;\n    for (int y:G[x])\n    {\n        if (y==fa)\n            continue;\n        dfs1(y,x);\n        cnt[x] += cnt[y];\n        macnt[x] = max(macnt[x],cnt[y]);\n    }\n}\n \nvoid dfs2(int x,int fa)\n{\n    if (team[x])\n        ans.pb(x);\n    for (auto y:G[x])\n    {\n        if (y==fa) continue;\n        dfs2(y,x);\n    }\n}\n \nint main()\n{\n    rei(n);rei(k);\n    k<<=1;\n    rep1(i,1,n-1)\n    {\n        int x,y;\n        rei(x);rei(y);\n        G[x].pb(y);G[y].pb(x);\n    }\n    rep1(i,1,k)\n    {\n        int x;\n        rei(x);\n        team[x] = true;\n    }\n    dfs1(1,-1);\n    int u = -1;\n    rep1(i,1,n)\n        if ( (k-cnt[i])*2 <= k && macnt[i]*2 <= k)\n        {\n            u = i;\n            break;\n        }\n    puts(\"1\");\n    cout << u << endl;\n    if (team[u])\n        ans.pb(u);\n    for (int s : G[u])\n        dfs2(s,u);\n    rep1(i,0,k/2 -1 )\n        printf(\"%d %d %d\\n\",ans[i],ans[i+k/2],u);\n    return 0;\n}\n```\n\n~~\u6c42\u8fc7QWQ~~",
        "postTime": 1665240928,
        "uid": 673789,
        "name": "I_AK_IOI_and_NOI",
        "ccfLevel": 0,
        "title": "solution-cf748f"
    },
    {
        "content": "\u7b80\u5355\u7684 $2300$\u3002\n\n\u9996\u5148\u901a\u8fc7\u5404\u79cd\u5404\u6837\u795e\u5947\u624b\u73a9\uff0c\u5927\u6982\u53ef\u4ee5\u77e5\u9053\u4ed6\u7684 $m$ \u5fc5\u5b9a\u662f $1$\u3002\n\n\u76f8\u5f53\u4e8e\u662f\u5f31\u5316\u7248\u7684\u6811\u7684\u91cd\u5fc3\uff0c\u5c31\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u9897\u5b50\u8282\u70b9\u5185\u7684\u6807\u8bb0\u8282\u70b9\u4e0d\u80fd\u8d85\u8fc7 $k$ \u4e2a\u3002\n\n\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u884c\u624b\u73a9\uff0c\u53cd\u6b63\u6839\u636e\u5404\u79cd\u5404\u6837\u8c03\u6574\u5e94\u8be5\u53ef\u4ee5\u7684\u3002\n\n\u7136\u540e\u77e5\u9053\u8fd9\u4e2a\u7ed3\u8bba\u5c31\u6bd4\u8f83\u597d\u505a\u9898\u4e86\uff0c\u6211\u4eec\u9700\u8981\u5bfb\u627e\u4e00\u4e2a\u8282\u70b9 $sz_x$ \u4e0d\u8d85\u8fc7 $k$\uff0c\u90a3\u4e48\u7c7b\u4f3c\u4e8e\u6811\u7684\u91cd\u5fc3\uff0c\u6211\u4eec\u628a\u5b50\u8282\u70b9\u53d6 $\\max$\uff0c\u5bf9\u4e8e\u7956\u5148\u7684\u6211\u4eec\u7528 $2 \\times k - sz_x$\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u524d\u8fd9\u4e2a\u662f\u5426\u662f\u6807\u8bb0\u8282\u70b9\u662f\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u7684\u3002\n\n\u63a5\u7740\uff0c\u6211\u4eec\u628a\u6bcf\u9897\u5b50\u6811\u7684\u6807\u8bb0\u8282\u70b9\u90fd\u62ce\u51fa\u6765\uff0c\u6700\u5927\u548c\u6b21\u5927\u8fdb\u884c\u5339\u914d\u5373\u53ef\u3002\n\n\u6211\u660e\u767d\u8bc1\u660e\u7684\u4e0d\u591f\u4e25\u8c28\uff0c\u4f46\u662f OI \u7684\u8bdd\u4e5f\u53ea\u9700\u8981\u731c\u51fa\u8be5\u7ed3\u8bba\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define pb push_back\nusing namespace std;\nconst int INF=2e5+5;\nstruct _node_edge{\n\tint to_,next_;\n}edge[INF<<1];\nint n,k,head[INF],sz[INF],num[INF],tot,fl,vis1[INF],res1,vis[INF];\nvoid add_edge(int x,int y) {\n\tedge[++tot]=(_node_edge){y,head[x]};\n\thead[x]=tot;return ;\n}\nvector <int> cnt[INF];\nstruct _node_queue {\n\tint pos,dis_v;\n\tbool operator < (const _node_queue &x) const {\n\t\treturn x.dis_v>dis_v;\n\t}\n};\npriority_queue <_node_queue> q;\nvoid print(int x,int fa,int f) {\n//\tcout<<x<<\" \"<<fa<<\" \"<<f<<\" qweij\\n\";\n\tif (vis[x]) {\n//\t\tcout<<x<<\" qwiejo\\n\";\n\t\tnum[f]++;\n\t\tcnt[f].pb(x);\n\t}\n\tfor (int i=head[x];i;i=edge[i].next_) {\n\t\tint v=edge[i].to_;\n\t\tif (v==fa) continue;\n\t\tprint(v,x,f);\n\t}\n}\nvoid DFS(int x,int fa) {\n\tif (fl) return ;\n\tsz[x]=vis[x];\n\tint Max=0;\n\tfor (int i=head[x];i;i=edge[i].next_) {\n\t\tint v=edge[i].to_;\n\t\tif (v==fa) continue;\n\t\tDFS(v,x);\n\t\tif (fl) return ;\n\t\tsz[x]+=sz[v];\n\t\tMax=max(Max,sz[v]);\n\t}\n\tMax=max(Max,2*k-sz[x]);\n\tif (Max<=k) {\n\t\tcout<<\"1\\n\";\n\t\tcout<<x<<\"\\n\";\n\t\tfor (int i=head[x];i;i=edge[i].next_) {\n\t\t\tint v=edge[i].to_;\n\t\t\tprint(v,x,v);\n\t\t\tif (num[v]) q.push({v,num[v]});\n\t\t}\n\t\tif (vis[x]) num[x]++,cnt[x].pb(x),q.push({x,num[x]});\n\t\tint res=x;\n\t\twhile (q.size()) {\n\t\t\tauto x=q.top();q.pop();\n\t\t\tauto y=q.top();q.pop();\n\t\t\tcout<<cnt[x.pos][num[x.pos]-1]<<\" \"<<cnt[y.pos][num[y.pos]-1]<<\" \"<<res<<\"\\n\";\n\t\t\tnum[x.pos]--;num[y.pos]--;\n\t\t\tx.dis_v--;y.dis_v--;\n\t\t\tif (x.dis_v==0) ;\n\t\t\telse q.push(x);\n\t\t\t\n\t\t\tif (y.dis_v==0) ;\n\t\t\telse q.push(y);\n\t\t}\n\t\texit(0);\n\t}\n\treturn ;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>k;\n\tfor (int i=1;i<n;i++) {\n\t\tint a=0,b=0;cin>>a>>b;\n\t\tadd_edge(a,b);add_edge(b,a);\n\t}\n\tfor (int i=1;i<=k*2;i++) {\n\t\tint x=0;cin>>x;\n\t\tvis[x]=1;\n\t}\n\tDFS(1,0);\n\treturn 0;\n}\n```\n",
        "postTime": 1670205780,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF748F"
    }
]