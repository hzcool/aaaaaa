[
    {
        "content": "\u548b\u4e00\u770b\u662f\u4e2a\u56fe\u8bba\uff0c\u4ed4\u7ec6\u4e00\u770b\u5176\u5b9e\u662f\u4e2a**\u5e76\u67e5\u96c6**\u3002\n\n----\n\n\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u53ef\u4ee5\u8868\u793a\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u65b9\u6cd5\u5c31\u662f\u7528\u5e76\u67e5\u96c6```merge```\u64cd\u4f5c\u6765\u52a0\u8fb9\uff0c\u540c\u65f6\u5982\u679c\u52a0\u8fb9\u4e0d\u6210\u529f\uff0c\u5373\u4e24\u4e2a\u7aef\u70b9\u5df2\u7ecf\u5728\u540c\u4e00\u8fde\u901a\u5757\u5185\uff0c\u90a3\u4e48\u628a\u8fd9\u4e2a\u8fb9\u52a0\u8fdb~~\u56de\u6536\u7ad9~~```del[]```\u6570\u7ec4\uff0c\u7b49\u5230\u540e\u9762\u8f93\u51fa\u7b54\u6848\u65f6\uff0c\u8fd9\u4e2a\u6709\u7740\u534a\u58c1\u6c5f\u5c71\u3002```del[]```\u6570\u7ec4\u7684\u5927\u5c0f\u5c31\u662f\u6700\u597d\u7684\u65b9\u6848\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u626b\u63cf\u4e00\u904d\u5e76\u67e5\u96c6\u7684```f[]```\u6570\u7ec4\uff0c\u7edf\u8ba1\u8fde\u901a\u5757\u7684\u4e2a\u6570\uff08\u65b9\u6cd5\u5c31\u662f\u770b\u6709\u51e0\u4e2a```f[i]==i```\uff09\uff0c\u8fde\u901a\u5757\u7684\u4e2a\u6570\u540e\u9762\u8981\u7528\u3002\n\n\u518d\u8bf4\u540e\u9762\u7684\u65b9\u6848\u8f93\u51fa\uff0c\u6211\u4eec\u53ea\u8981\u6e05\u7a7a\u56de\u6536\u7ad9\uff0c\u7136\u540e\u628a\u5404\u4e2a\u8fde\u901a\u5757\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u5177\u4f53\u7684\u8bdd\u2014\u2014\u770b\u4ee3\u7801\u7f62\u3002\n\n~~\u4ee3\u7801\u5728\u54ea\uff1f\u5c31\u5728\u4e0b\u9762~~\n\n``` cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define F first\n#define S second\nusing namespace std;\nconst int N=10005;\nint f[N],gr[N],n,tot,cnt,now;\npair<int,int> d[N];\nint find(int x) {//\u5e76\u67e5\u96c6\u627e\u7956\u5b97\n\tif(f[x]!=x) f[x]=find(f[x]);\n\treturn f[x];\n}\nbool merge(int x,int y) {//\u5e76\u67e5\u96c6\u5408\u5e76\n\tx=find(x);\n\ty=find(y);\n\tif(x!=y) f[x]=y;\n\telse return 1;\n\treturn 0;\n}\nvoid del(int i) {//\u5904\u7406+\u8f93\u51fa\u51fd\u6570\n\tprintf(\"%d %d %d %d\\n\",d[i].F,d[i].S,gr[now],gr[cnt]);//\u8f93\u51fa\u56de\u6536\u7ad9\u5f53\u524d\u8fb9\u3001\u5f53\u524d\u5408\u5e76\u7684\u8fde\u901a\u5757\u7956\u5b97\n\tmerge(gr[now++],gr[cnt]);//\u5408\u5e76\u8fde\u901a\u5757\u5e76\u5c06\u5f53\u524d\u8fde\u901a\u5757\u5b9a\u4f4d\u5230\u4e0b\u4e00\u4e2a\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) f[i]=i;\n\tfor(int i=1;i<n;i++) {\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(merge(x,y)) d[++tot]=make_pair(x,y);//\u6254\u8fdb\u56de\u6536\u7ad9\n\t}\n\tfor(int i=1;i<=n;i++) if(f[i]==i) gr[++cnt]=i;//\u7edf\u8ba1\u8fde\u901a\u5757\u7684\u7956\u5b97\n\tnow=1;\n\tprintf(\"%d\\n\",tot);\n\tfor(int i=1;i<=cnt-1;i++)\n\t\tdel(i);//\u5904\u7406+\u8f93\u51fa\n\treturn 0;\n}\n\n```",
        "postTime": 1588837761,
        "uid": 189521,
        "name": "ahawzlc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF25D \u3010Roads not only in Berland\u3011"
    },
    {
        "content": "# \u5e76\u67e5\u96c6\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF25D)\uff0c\u4e2a\u4eba\u611f\u89c9\u96be\u5ea6\u865a\u9ad8\u3002\n\n\u9898\u76ee\u4fdd\u8bc1\u6709 $n$ \u4e2a\u70b9\uff0c$n-1$ \u6761\u8fb9\uff0c\u8ba9\u6211\u4eec\u5c06\u6574\u4e2a\u56fe\u8fde\u901a\u3002\n\n\u65e2\u7136\u662f $n-1$ \u6761\u8fb9\uff0c\u90a3\u4e48\u539f\u56fe\u4e2d\u80af\u5b9a\u542b\u6709\u73af\u3002\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u627e\u5230\u8fd9\u4e2a\u73af\uff0c\u7136\u540e\u62c6\u73af\uff0c\u5c06\u4e24\u4e2a\u4e0d\u540c\u7684\u8fde\u901a\u5757\u8fde\u8d77\u6765\u3002\n\n\u76f4\u5230\u6700\u540e\u8fde\u901a\u5757\u7684\u6570\u76ee\u4e3a 1\uff0c\u4efb\u52a1\u5b8c\u6210\u3002\n\n\u7ec6\u8282\u65b9\u9762\uff1a\n\n1. \u5224\u73af\u7528\u5e76\u67e5\u96c6\n\n\t\u4e0d\u77e5\u9053\u8fd9\u9898\u80fd\u4e0d\u80fd\u7528 tarjan\uff0c~~\u53cd\u6b63\u6211\u4e0d\u4f1a~~\u3002\n\n\t\u5f53\u8f93\u5165\u7684\u4e24\u4e2a\u70b9\u5df2\u7ecf\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u65f6\uff0c\u8fd9\u6761\u8fb9\u7684\u52a0\u5165\uff0c\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\u3002\n\n2. \u5220\u8fb9\u3001\u8fde\u8fb9\n\n\t\u6211\u9009\u62e9\u7528\u4e00\u4e2a\u961f\u5217\u50a8\u5b58\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u6bcf\u6b21\u627e\u5230\u6784\u6210\u73af\u7684\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u5c06\u5176\u5220\u53bb\uff08\u5176\u5b9e\u5220\u4e0d\u5220\u90fd\u4e00\u6837\uff0c\u90fd\u8fd8\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u4ec0\u4e48\u64cd\u4f5c\uff09\uff0c\u7136\u540e\u4ece\u961f\u5217\u91cc\u62ff\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u4e0e\u5f53\u524d\u8fde\u901a\u5757\u8fde\u8d77\u6765\u3002\n\n\t\u6ce8\u610f\uff0c\u5982\u679c\u62ff\u51fa\u6765\u7684\u8fde\u901a\u5757\u4ecd\u662f\u5f53\u524d\u8fde\u901a\u5757\uff0c\u9700\u8981\u518d\u62ff\u4e00\u4e2a\u3002\n\n\t\u7136\u540e\u8bb0\u5f55\u7b54\u6848\uff0c\u5c06\u6574\u4e2a\u8fde\u901a\u5757\u585e\u5230\u961f\u5217\u91cc\uff0c\u5982\u679c\u4e4b\u524d\u5f53\u524d\u8fde\u901a\u5757\u5c31\u5728\u961f\u5217\u91cc\uff0c\u5219\u4e0d\u64cd\u4f5c\u3002\n\n\u5927\u6982\u7684\u601d\u8def\u5c31\u662f\u8fd9\u6837\uff0c\u4ee3\u7801\uff1a\n\n```cpp\nconst int inf=1e5+7;\nint n,ans,fa[inf];\nbool inq[inf];\nint huan[2][inf],cnt;\nqueue<int>h;\nstruct __ans{\n\t//\u4e2a\u4eba\u611f\u89c9\u8f93\u51fa\u4e0d\u9700\u8981\u592a\u7f8e\u89c2\uff08\u4e3b\u8981\u662f\u60f3\u4e0d\u8d77\u6765\u53d8\u91cf\u540d\u4e86\uff09 \n\tint _1,_2,_3,_4;\n}ans_[inf];\nint find(int x)\n{//\u5e76\u67e5\u96c6\u57fa\u64cd\n\tif(fa[x]==x)return x;\n\treturn fa[x]=find(fa[x]);\n}\nint main()\n{\n\tn=re();\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u=re(),v=re();\n\t\tint r1=find(u),r2=find(v);\n\t\tif(r1^r2)fa[find(u)]=find(v);//\u5e76\u4e0d\u8fde\u901a \n\t\telse huan[0][++cnt]=u,huan[1][cnt]=v;//\u73af \n\t}\n\tfor(int i=1;i<=n;i++)\n\t{//\u627e\u8fde\u901a\u5757 \n\t\tint ls=find(i);\n\t\tif(inq[ls])continue;\n\t\tinq[ls]=1;h.push(ls);\n\t}\n\tfor(int i=1;i<=cnt;i++)\n\t{//\u5220\u8fb9 \n\t\tint rot=find(huan[0][i]);\n\t\tif(h.size()==1)break;//\u53ea\u5269 1 \u4e2a\u8fde\u901a\u5757 \n\t\tint ls=h.front();h.pop();\n\t\tinq[ls]=0;fa[ls]=rot;\n\t\tif(ls==rot)\n\t\t{//\u540c\u4e00\u4e2a\u5757\uff0c\u518d\u62ff\u4e00\u904d \n\t\t//\u56e0\u4e3a\u6709 inq \u7684\u5b58\u5728\uff0c\u6240\u4ee5\u961f\u5217\u91cc\u4e0d\u53ef\u80fd\u6709\u4e24\u4e2a\u76f8\u540c\u7684\u8fde\u901a\u5757\uff0c\n\t\t//\u6240\u4ee5\u8fd9\u91cc\u662f if \u800c\u4e0d\u9700\u8981 while\n\t\t\tls=h.front();h.pop();\n\t\t\tinq[ls]=0;fa[ls]=rot;\n\t\t}\n\t\tans_[++ans]._1=huan[0][i];\n\t\tans_[ans]._2=huan[1][i];//\u8bb0\u5f55\u7b54\u6848 \n\t\tans_[ans]._3=rot,ans_[ans]._4=ls;\n\t\tif(inq[rot])continue;//\u585e\u5230\u961f\u5217\u91cc \n\t\th.push(rot);inq[rot]=1;\n\t}\n\twr(ans);putchar('\\n');\n\tfor(int i=1;i<=ans;i++)\n\t{//\u8f93\u51fa \n\t\twr(ans_[i]._1),putchar(' ');\n\t\twr(ans_[i]._2),putchar(' ');\n\t\twr(ans_[i]._3),putchar(' ');\n\t\twr(ans_[i]._4),putchar('\\n');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1663666694,
        "uid": 413020,
        "name": "Zvelig1205",
        "ccfLevel": 4,
        "title": "CF25D Roads not only in Berland \u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "\u4e0d\u9700\u8981\u5e76\u67e5\u96c6\uff0c\u53ea\u9700\u8981 DFS \u5c31\u591f\u4e86\uff0c\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u9664\u53bb\u5bf9\u6574\u4e2a\u56fe\u8fdb\u884c DFS \u6240\u4ea7\u751f\u7684\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\uff0c\u5269\u4f59\u7684\u8fb9\u5747\u4e3a\u8981\u5220\u9664\u7684\u8fb9\uff0c\u8fd9\u4e9b\u8fb9\u53ef\u4ee5\u5728 DFS \u7684\u8fc7\u7a0b\u4e2d\u5f97\u5230\u3002\n\n\u54ea\u4e9b\u8fb9\u9700\u8981\u76f8\u8fde\u5462\uff1f\u4e0d\u59a8\u4ece\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u4e2d\u4efb\u53d6\u4e00\u4e2a\u70b9\uff0c\u8ba1\u4f5c $v1, v2,v3...$\uff0c\u7136\u540e\u5c06 $v1$ \u4e0e $v2$ \u76f8\u8fde\uff0c$v2$ \u4e0e $v3$ \u76f8\u8fde\uff0c\u2026\u2026\n\n\u7531\u4e8e\u56fe\u4e2d\u6709 $n-1$ \u6761\u8fb9\uff0c\u8fd9\u6837\u64cd\u4f5c\u6700\u540e\u4f1a\u5c06\u539f\u56fe\u53d8\u6210\u4e00\u68f5\u6811\u3002\n\nAC \u4ee3\u7801\uff08Golang\uff09\uff1a\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t. \"fmt\"\n\t\"os\"\n)\n\nfunc main() {\n\tin := bufio.NewReader(os.Stdin)\n\tout := bufio.NewWriter(os.Stdout)\n\tdefer out.Flush()\n\n\tvar n, v, w int\n\tFscan(in, &n)\n\tg := make([][]int, n+1)\n\tfor i := 1; i < n; i++ {\n\t\tFscan(in, &v, &w)\n\t\tg[v] = append(g[v], w)\n\t\tg[w] = append(g[w], v)\n\t}\n\n\ttype edge struct{ v, w int }\n\tdeletes := []edge{}\n\tvis := make([]bool, n+1)\n\tvar f func(v, fa int)\n\tf = func(v, fa int) {\n\t\tvis[v] = true\n\t\tfor _, w := range g[v] {\n\t\t\tif !vis[w] {\n\t\t\t\tf(w, v)\n\t\t\t} else if w != fa && v < w {\n\t\t\t\tdeletes = append(deletes, edge{v, w})\n\t\t\t}\n\t\t}\n\t}\n\tvs := []int{}\n\tfor i := 1; i <= n; i++ {\n\t\tif !vis[i] {\n\t\t\tvs = append(vs, i)\n\t\t\tf(i, 0)\n\t\t}\n\t}\n\n\tFprintln(out, len(deletes))\n\tfor i, p := range deletes {\n\t\tFprintln(out, p.v, p.w, vs[i], vs[i+1])\n\t}\n}\n```\n",
        "postTime": 1591347972,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF25D \u3010Roads not only in Berland\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff1a\n\n\u8fd9\u4e2a\u9898\u76ee\u9700\u8981\u6211\u4eec\u505a\u7684\u662f\uff1a\n\n- \u8ba1\u7b97\u9700\u8981\u62c6\uff08\u8fde\uff09\u591a\u5c11\u8fb9\u3002\n\n- \u5224\u65ad\u54ea\u4e9b\u8fb9\u53ef\u4ee5\u62c6\u3002\n\n- \u62c6\u4e0b\u6765\u7684\u8fb9\u8865\u5230\u54ea\u91cc\u3002\n\n### \u5e76\u67e5\u96c6\u6982\u8ff0\n\n\u4ecb\u7ecd\u4e00\u4e0b\u524d\u7f6e\u77e5\u8bc6\uff1a**\u5e76\u67e5\u96c6**\u3002\n\n\u5982\u679c\u6709\u4e0d\u77e5\u9053\u5e76\u67e5\u96c6\u662f\u4f55\u7269\u7684\u840c\u65b0\u53ef\u4ee5\u505a\u4e00\u4e0b\u8fd9\u4e9b\u9898\uff1a\n\n[P3367 \u3010\u6a21\u677f\u3011\u5e76\u67e5\u96c6](https://www.luogu.com.cn/problem/P3367)\n\u548c [P1551 \u4eb2\u621a](https://www.luogu.com.cn/problem/P1551)\u3002\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u8fd8\u662f\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\uff1a\n\n\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u6811\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u4e0d\u76f8\u4ea4\u96c6\u5408\u7684\u5408\u5e76\u53ca\u67e5\u8be2\u95ee\u9898\u3002\u5e38\u5e38\u5728\u4f7f\u7528\u4e2d\u4ee5\u68ee\u6797\u6765\u8868\u793a\u3002\u2014\u2014\u767e\u5ea6\u767e\u79d1\n\n\u770b\u5230\u8fd9\u91cc\uff0c\u4e0d\u8981\u88ab\u4f17\u591a\u7684\u540d\u8bcd\u5413\u5230\u4e86\uff0c\u5176\u5b9e\u7b80\u5355\u6765\u8bb2\u5c31\u662f\u8ba4\u4eb2\u548c\u627e\u7956\u5148\u7684\u8fc7\u7a0b\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\u5982\u56fe\u6240\u793a\uff0c\u8fd9\u91cc\u6784\u6210\u4e86\u4e24\u5927\u4eb2\u621a\u96c6\u56e2\uff0c\u5206\u522b\u662f\u4ee5 $1$ \u4e3a\u7956\u5148\u7684\u548c\u4ee5 $2$ \u4e3a\u7956\u5148\u7684\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/ywv8m8kj.png)\n\n\u5047\u5982\u6709\u4e00\u5929 $1$ \u548c $2$ \u6210\u4e3a\u4e86\u4eb2\u621a\uff0c\u5c31\u628a $2$ \u7684\u7956\u5148\u5b9a\u4e3a $1$\uff0c\u8fd9\u6837\u6240\u6709\u7684\u4eba\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7956\u5148\u4e86\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/e7ltrw98.png)\n\n\u5f53\u7136\u8fd9\u91cc\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u7528\u6cd5\u6bd4\u5982\u8def\u5f84\u538b\u7f29\uff0c\u4f46\u662f\u4eb2\u6d4b\u672c\u9898\u4e0d\u7528\u8def\u5f84\u538b\u7f29\u4e5f\u80fd AC\uff0c\u6240\u4ee5\u4e0d\u518d\u8d58\u8ff0\uff0c\u8bf7\u81ea\u884c\u67e5\u9605\u76f8\u5173\u8d44\u6599\u3002\n\n\u9644\u4e0a\u6211\u7684\u5e76\u67e5\u96c6\u4ee3\u7801\u4f9b\u5927\u5bb6\u601d\u8003\u548c\u4f7f\u7528\uff08\u9a6c\u8702\u5f88\u4e11\uff0c\u8bf7dalao\u89c1\u8c05\uff09\uff1a\n```cpp\nstruct uni{//\u5e76\u67e5\u96c6 \n\tint bin [ MAXN ];\n\tuni(){//\u521d\u59cb\u81ea\u5df1\u662f\u81ea\u5df1\u7684\u7956\u5148\n\t\tfor(int i = 0  ; i < MAXN ;i++)\n\t\tbin[i]=i;\n\t}\n\tint anc(int x)//\u627e\u7956\u5148 \n\t{\n\t\tif( bin[x] == x )return x;\n\t\telse return bin[x] = anc( bin[x] ); //\u8def\u5f84\u538b\u7f29 \n\t} \n\tvoid link( int x , int y )//\u8ba4\u4eb2 \n\t{\n\t\tbin[ anc(x) ] = anc(y);\n\t}\n}u;\n```\n***\n\n### \u4e3b\u8981\u601d\u8def\n\n\n#### 1.\u8ba1\u7b97\u9700\u8981\u62c6\uff08\u8fde\uff09\u591a\u5c11\u8fb9\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5e76\u67e5\u96c6\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6027\u8d28\uff0c\u5c31\u662f\u6240\u6709\u8054\u901a\u7684\u90e8\u5206\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7956\u5148\uff0c\u6240\u4ee5\u5728\u8fd9\u9053\u9898\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u5224\u65ad\u8fd9\u4e2a\u56fe\u88ab\u5206\u6210\u4e86\u591a\u5c11\u90e8\u5206\uff0c\u5373\u6709\u591a\u5c11\u4e0d\u540c\u7684\u7956\u5148\uff0c\u5047\u8bbe\u6709 $x$ \u4e2a\u7956\u5148\uff0c\u90a3\u4e48\u6bcf\u4e2a\u90e8\u5206\u53ea\u8981\u8fde\u4e00\u6761\u8fb9\u5c31\u53ef\u4ee5\u4f7f\u5176\u8054\u901a\uff0c\u6240\u4ee5\u53ea\u9700\u8fde $x-1$ \u6761\u8fb9\u5c31\u53ef\u4ee5\u4f7f\u56fe\u5b8c\u5168\u8054\u901a\uff0c\u7531\u6b64\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n#### 2.\u5224\u65ad\u54ea\u4e9b\u8fb9\u53ef\u4ee5\u62c6\n\n\u6211\u4eec\u624b\u73a9\u4e00\u4e0b\u6837\u4f8b\uff1a\n\u6837\u4f8b 1 \u60f3\u8c61\u4e00\u4e0b\u5c31\u597d\uff0c\n\u6837\u4f8b 2 \u5982\u56fe\u6240\u793a\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/1ql79vsn.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4ee5 $1$ \u4e3a\u7956\u5148\u7684\u90a3\u4e00\u90e8\u5206\u8fde\u901a\u5757\u6709 $3$ \u4e2a\u70b9\u548c $3$ \u6761\u8fb9\uff0c\u5fc5\u7136\u6709\u4e00\u6761\u8fb9\u662f\u65e0\u7528\u7684\uff0c\u6240\u4ee5\u4efb\u610f\u4e00\u6761\u8fb9\u662f\u53ef\u62c6\u7684\u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u5224\u65ad\u4e00\u6761\u8fb9\u662f\u5426\u4e3a\u65e0\u7528\u7684\u5462\uff1f\n\n\u6211\u4eec\u8fb9\u8f93\u5165\u8fb9\u5224\u65ad\uff0c\u5982\u679c\u8f93\u5165\u7684\u8fb9\u4e24\u7aef\u7684\u70b9\u5df2\u7ecf\u5728\u540c\u4e00\u8fde\u901a\u5757\u5185\u4e86\uff08\u5373\u7956\u5148\u76f8\u540c\u4e86\uff09\uff0c\u5c31\u4e0d\u7528\u8fde\u63a5\u4e86\uff0c\u628a\u4ed6\u52a0\u5165\u5f85\u5220\u76ee\u5f55\uff08\u6211\u7684\u5f85\u5220\u76ee\u5f55\u662f\u7528\u961f\u5217\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u597d\u7406\u89e3\uff09\uff0c\u5426\u5219\u6b63\u5e38\u5efa\u56fe\u3002\n\n#### 3.\u62c6\u4e0b\u6765\u7684\u8fb9\u8865\u5230\u54ea\u91cc\n\n\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u5e76\u67e5\u96c6\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u627e\u5230\u4e0d\u540c\u7684\u7956\u5148\u6570\uff08\u53ef\u4ee5\u4f7f\u7528 STL \u7684 set \u53bb\u91cd\uff0c\u6700\u540e set \u7684\u5927\u5c0f\u5c31\u662f\u8fde\u901a\u5757\u7684\u6570\u91cf\uff09\uff0c\u6211\u4eec\u968f\u610f\u53d6\u51fa\u67d0\u4e2a\u7956\u5148\uff0c\u5e76\u628a\u5176\u4f59 $x-1$ \u4e2a\u7956\u5148\u548c\u8fd9\u4e2a\u7956\u5148\u76f8\u8fde\uff0c\u8fd9\u4e2a\u56fe\u5c31\u662f\u8054\u901a\u7684\u4e86\u3002\n\n#### 4.\u5177\u4f53\u7ec6\u8282\u548c\u5b9e\u73b0\n\n\u5927\u5bb6\u53ef\u80fd\u4f1a\u60f3\u5230\uff0c\u6211\u4eec\u62c6\u8fb9\u548c\u8fde\u8fb9\u7684\u65f6\u5019\u4e0d\u4f1a\u6709\u4e0d\u540c\u7684\u89e3\u6cd5\u5417\uff1f\n\u8fd9\u5c31\u662f\u7ffb\u8bd1\u7684\u9505\u4e86\uff0c\u539f\u9898\u4e0a\u5199\u7684\u660e\u660e\u767d\u767d\uff1a\n\nIf the answer is not unique, output any.\n\n\u5982\u679c\u7b54\u6848\u4e0d\u552f\u4e00\uff0c\u5219\u8f93\u51fa\u4efb\u4f55\u7b54\u6848\u3002\n\n\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u8fdb\u5751\uff0c~~\u6211\u5c31\u662f\u8fdb\u5751\u7684\u90a3\u4e2a~~\u3002\n\n#### 5.\u5b8c\u6574\u4ee3\u7801\n\n\u4ee3\u7801\u6ce8\u91ca\u6709\u5f88\u591a\u7ec6\u8282\u5462\uff0c\u5e0c\u671b\u80fd\u8ba4\u771f\u98df\u7528\u5462\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<set>\nusing namespace std;\nconst int MAXN = 1e3 + 19;\nstruct edge{\n\tint u,v;\n};\nvector<int>G[MAXN];//\u5b58\u56fe \n\nqueue<edge>del;//\u5f85\u5220\u76ee\u5f55 \n\nset<int>fa;//\u7956\u5148\u96c6\u5408 \n\nstruct uni{//\u5e76\u67e5\u96c6 \n\tint bin [ MAXN ];\n\tuni(){//\u521d\u59cb\u81ea\u5df1\u662f\u81ea\u5df1\u7684\u7956\u5148 \n\t\tfor(int i = 0  ; i < MAXN ;i++)\n\t\tbin[i]=i;\n\t}\n\tint anc(int x)//\u627e\u7956\u5148 \n\t{\n\t\tif( bin[x] == x )return x;\n\t\telse return bin[x] = anc( bin[x] ); //\u8def\u5f84\u538b\u7f29 \n\t} \n\tvoid link( int x , int y )//\u8ba4\u4eb2 \n\t{\n\t\tbin[ anc(x) ] = anc(y);\n\t}\n}u;\nint n;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i < n ; i++)\n\t{\n\t\tint x,y;\n\t\tscanf( \"%d%d\" ,&x ,&y);\n\t\t\n\t\tif(u.anc(x) == u.anc(y))//\u5982\u679c\u5df2\u7ecf\u5728\u540c\u4e00\u8fde\u901a\u5757\u4e86 \n\t\tdel.push( (edge) {x,y} );//\u52a0\u5165\u5f85\u5220\u76ee\u5f55 \n\t\t\n\t\telse//\u5426\u5219 \n\t\tu.link( x , y );//\u6b63\u5e38\u5efa\u56fe \n\t}\n\t\n\tfor(int i = 1 ; i <= n ; i++)\n\t{\n\t\tint x = u.anc(i);//\u627e\u5404\u4e2a\u70b9\u7684\u7956\u5148 \n\t\tfa.insert(x);//\u52a0\u5165\u96c6\u5408\uff08\u53bb\u91cd\uff09 \n\t}\n\t\t\n\tcout << fa.size()-1 << endl;//\u96c6\u5408\u7684\u5927\u5c0f-1\u5c31\u662f\u9700\u8981\u8fde\u7684\u8fb9\u6570 \n\t\n\tif(fa.size()!=1)//\u5982\u679c\u672a\u5b8c\u5168\u8054\u901a \n\t{\n\t\tset<int>::iterator it=fa.begin();//\u53d6\u7b2c\u4e00\u4e2a\u7956\u5148 \n\t\tint root = *it;\n\t\t\n\t\tfa.erase(root);//\u5220\u6389\u6240\u53d6\u7684\u7956\u5148 \n\t\t\n\t\tfor(set<int>::iterator it=fa.begin();it!=fa.end();it++)//\u904d\u5386\u5176\u4ed6\u7956\u5148 \n\t\t{\n\t\t\tedge key = del.front();\n\t\t\tdel.pop();//\u4ece\u5f85\u5220\u76ee\u5f55\u91cc\u53d6\u8fb9 \n\t\t\t\n\t\t\tprintf(\"%d %d %d %d\\n\",key.u,key.v,root,*it);//\u8f93\u51fa \n\t\t}\n\t}\n\tputs(\"\");//\u597d\u4e60\u60ef \n\treturn 0;\n} \n```\n\u534e\u4e3d\u7684\u7ed3\u675f\u3002",
        "postTime": 1585017451,
        "uid": 123869,
        "name": "Maxwang",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF25D \u3010Roads not only in Berland\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF25D)\n\n\u8fd9\u662f\u4e00\u9053\u7b80\u5355\u7684\u704c\u6c34\u9898\u3002\n## \u601d\u8def\n\u8c8c\u4f3c\u9898\u89e3\u91cc\u90fd\u5728\u7528\u5e76\u67e5\u96c6\uff1f\u5176\u5b9e\u53ea\u8981\u4e00\u4e2a\u704c\u6c34\u5c31\u53ef\u641e\u5b9a\uff0c\u663e\u7136\u6211\u4eec\u6700\u5c11\u53ef\u4ee5\u5728\u4e00\u4e2a\u5927\u5c0f\u4e3a $x$ \u7684\u8fde\u901a\u5757\u4e2d\u4fdd\u7559 $x-1$ \u6761\u8fb9\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65e0\u5411\u56fe\u53ea\u6709 $n-1$ \u6761\u8fb9\uff0c\u6240\u4ee5\u5b83\u5982\u679c\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u5728\u8fd9\u4e9b\u8fde\u901a\u5757\u4e2d\u4e00\u5b9a\u6709\u67d0\u4e9b\u8fde\u901a\u5757\u7684\u8fb9\u6570\u5927\u4e8e\u70b9\u6570\u51cf $1$\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u628a\u8fd9\u4e9b\u591a\u4f59\u7684\u8fb9\u5220\u6389\uff0c\u7136\u540e\u518d\u628a\u8fde\u901a\u5757\u8fde\u8d77\u6765\u5373\u53ef\u3002\n## \u4ee3\u7801\n```cpp\n//A tree without skin will surely die. \n//A man without face is invincible.\n#include<bits/stdc++.h>\n#define int long long\n#define rint register int\nusing namespace std;\nint const N=1e3+10;\nint vis[N],k[N],lian[N];\nvector<int>a[N],b[N];\npair<int,int>p[N],del[N];\ninline void dfs(int x){\n    vis[x]=1;\n    for (int i=0;i<a[x].size();++i){\n        int v=a[x][i];\n        if (!vis[v]){dfs(v),k[b[x][i]]=1;}//\u5982\u679c\u8fd9\u6761\u8fb9\u8fde\u5411\u4e86\u4e00\u4e2a\u6ca1\u6709\u88ab\u704c\u6c34\u8fc7\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u9700\u8981\u4fdd\u7559\n    }\n}\nsigned main(){\n    ios::sync_with_stdio(false);\n    cout.tie(0),cout.tie(0);\n    int n,cnt=0;cin>>n;\n    for (int i=1;i<n;++i){\n        int u,v;cin>>u>>v;\n        a[u].push_back(v);\n        a[v].push_back(u);\n        b[u].push_back(i);\n        b[v].push_back(i);\n        p[i]={u,v};\n    }\n    for (int i=1;i<=n;++i)\n        if (!vis[i]) ++cnt,dfs(i),lian[cnt]=i;\n    int tot=0;\n    for (int i=1;i<n;++i) if (!k[i]) del[++tot]=p[i];//\u7edf\u8ba1\u4e0d\u9700\u4fdd\u7559\u7684\u8fb9\n    cout<<tot<<'\\n';\n    for (int i=1;i<=tot;++i)\n        cout<<del[i].first<<' '<<del[i].second<<' '<<lian[1]<<' '<<lian[i+1]<<'\\n';//\u628a\u522b\u7684\u8fde\u901a\u5757\u4e0e 1 \u53f7\u8fde\u901a\u5757\u8fde\u8d77\u6765\n    return 0;\n}\n\n```\n",
        "postTime": 1661929394,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF25D Roads not only in Berland"
    },
    {
        "content": "### \u601d\u8def\n\u8fd9\u9053\u9898\u7684\u672c\u8d28\u662f\u5e76\u67e5\u96c6\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u70b9\uff0c\u5982\u679c\u7956\u5148\u76f8\u540c\uff0c\u5219\u8bf4\u660e\u8fd9\u4e24\u7684\u70b9\u5df2\u7ecf\u8fde\u901a\u4e86\uff0c\u8fd9\u6761\u8fb9\u662f\u8981\u5220\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u4fdd\u5b58\u4e0b\u6765\u3002\u63a5\u7740\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u6bcf\u4e24\u4e2a\u70b9\uff0c\u82e5\u4ed6\u4eec\u7684\u7956\u5148\u4e0d\u540c\uff0c\u5219\u8bf4\u660e\u4ed6\u4eec\u4e0d\u662f\u8fde\u901a\u7684\uff0c\u5c31\u628a\u4ed6\u4eec\u7684\u7956\u5148\u8fde\u8d77\u6765\u3002\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\nint i,n,m,ans,f[1010],a[1010],b[1010],c[1010],d[1010],fx,fy,x,y,j,t;\nint find(int x){\n\tif(f[x]==x) return x;\n\treturn f[x]=find(f[x]);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++) f[i]=i;\n\tfor(i=1;i<n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tfx=find(x);fy=find(y);\n\t\tif(fx!=fy) f[fx]=fy;\n\t\telse a[++m]=x,b[m]=y;//\u4fdd\u5b58\n\t}//\u5e76\u67e5\u96c6\n\tif(m==0){printf(\"0\\n\");return 0;}\n\tt=1;\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++){//\u679a\u4e3e\n\t\t\tfx=find(i);fy=find(j);\n\t\t\tif(fx!=fy) ans++,c[t]=fx,d[t]=fy,f[fx]=fy,t++;//\u4fdd\u5b58\n//\u56e0\u4e3a\u53ea\u6709n-1\u6761\u8fb9\uff0c\u6240\u4ee5\u7ed3\u679c\u4e00\u5b9a\u4e2a\u4e0d\u5b58\u5728\u73af\u7684\u56fe\uff0c\u5373\u662f\u4e0d\u4f1a\u6709\u8fb9\u591a\u51fa\u6765\u7684\n\t\t}\n\tprintf(\"%d\\n\",ans);\n\tfor(i=1;i<=m;i++) printf(\"%d %d %d %d\\n\",a[i],b[i],c[i],d[i]); \n\treturn 0;\n}\n```\n",
        "postTime": 1660217628,
        "uid": 535145,
        "name": "_szs9601",
        "ccfLevel": 5,
        "title": "CF25D Roads not only in Berland \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u8981\u6c42\u8fde\u901a\uff0c\u57fa\u672c\u786e\u5b9a\u662f\u5e76\u67e5\u96c6\u3002\n\n\u8fd9\u9898\u5206\u4e3a2\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u770b\u6ca1\u7528\u7684\u8fb9\uff0c\u4e00\u4e2a\u662f\u770b\u90a3\u4e9b\u6ca1\u8fde\u901a\u3002\u5982\u679c\u6ca1\u7528\u7684\u6bd4\u9700\u8981\u7684\u591a\uff0c\u90a3\u4e5f\u6ca1\u6709\u5173\u7cfb\u3002\n\n\u6ca1\u7528\u7684\u8fb9\u53ef\u4ee5\u9884\u5904\u7406\u6389\uff0c\u6ca1\u8054\u901a\u7684\u8981\u540e\u9762\u505a\u3002\u6240\u4ee5\u8981\u628a\u8fb9\u5b58\u4e0b\u6765\uff0c\u63a5\u4e0b\u53bb\u5c31\u6ca1\u6709\u96be\u5ea6\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,cnt,fa[1001],sx[1001],sy[1001],ans[1001],ans2[1001],sum;//\nbool b[1001];\nint find(int x){\n\treturn fa[x]==x?fa[x]:fa[x]=find(fa[x]);\n}\nvoid merge(int x,int y){\n\tx=find(x);\n\ty=find(y);\n\tif(x<y) swap(x,y);\n\tfa[y]=x;\n}//\u5e76\u67e5\u96c6\u5e38\u89c4\u64cd\u4f5c\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\tfor(int i=1;i<n;i++){\n\t\tcin>>sx[i]>>sy[i];\n\t\tif(find(sx[i])==find(sy[i])){\n\t\t\tans[++cnt]=i;\n\t\t\tcontinue;//\u5982\u679c\u6ca1\u7528\u5c31\u4e0d\u7528\u518d\u5408\u5e76\u4e86\n\t\t}\n\t\tmerge(sx[i],sy[i]);\n\t}\n\tfor(int i=1;i<=n;i++) if(b[find(i)]==0) b[find(i)]=1,ans2[++sum]=find(i);\n\tcout<<sum<<endl;//\u8f93\u51fa\n\tfor(int i=1;i<sum;i++){\n\t\tcout<<sx[ans[i]]<<' '<<sy[ans[i]]<<' ';\n\t\tcout<<ans2[i]<<' '<<ans2[i+1]<<endl;\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1656668000,
        "uid": 310639,
        "name": "yingkeqian9217",
        "ccfLevel": 5,
        "title": "25D"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u9876\u70b9\uff0c$n-1$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u80fd\u53bb\u6389\u4e00\u6761\u8fb9\uff0c\u5e76\u4e14\u91cd\u65b0\u5728\u67d0\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u65b0\u8fb9\u3002\u8bd5\u6c42\u9700\u8981\u591a\u5c11\u6b21\u64cd\u4f5c\uff0c\u624d\u80fd\u4f7f\u5f97\u4ece\u4efb\u4e00\u9876\u70b9\u90fd\u80fd\u5230\u8fbe\u5176\u4ed6\u7684\u6240\u6709\u9876\u70b9\u3002\n\n## Solution\n\n\u524d\u6392\u63d0\u9192\uff1a~~\u8fd9\u5e94\u8be5\u662f\u672c\u9898\u6700\u66b4\u529b\u7684\u4e00\u7bc7\u9898\u89e3\u4e86~~\u3002\n\n\u601d\u8def\uff1a\u5e76\u67e5\u96c6\u3001\u66b4\u529b\u679a\u4e3e\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u5165\u7684 $u,v$\uff0c\u9996\u5148\u5224\u65ad\u5b83\u4eec\u662f\u5426\u5728\u4e00\u4e2a\u8054\u901a\u5757\u5185\uff0c\u5982\u679c\u662f\uff0c\u8bf4\u660e\u8fd9\u6761\u8fb9\u6ca1\u6709\u7528\uff0c\u6254\u8fdb\u65e0\u6548\u8fb9\u7684\u8fb9\u96c6\u4e2d\u53bb\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u3002\u8fd9\u4e9b\u64cd\u4f5c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u8f7b\u677e\u5b9e\u73b0\u3002\n\n\u7136\u540e**\u66b4\u529b\u679a\u4e3e**\u6bcf\u4e00\u4e2a\u9876\u70b9 $i,j$\uff0c\u5982\u679c\u5b83\u4eec\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u5408\u5e76\u4e4b\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^2\\times \\alpha(n))$\uff0c\u5176\u4e2d $\\alpha(n)$ \u4e3a\u963f\u514b\u66fc\u51fd\u6570\u7684\u53cd\u51fd\u6570\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b $\\alpha(n)\\leq 4$\u3002[Click here to know more\u3002](https://baike.baidu.com/item/%E9%98%BF%E5%85%8B%E6%9B%BC%E5%87%BD%E6%95%B0/10988285?fr=aladdin)\n\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,fa[1005],size[1005],cnt;\npair<int,int> remain[100005];\n\nint find(int x){\n\tif(x!=fa[x]) return fa[x]=find(fa[x]);\n\treturn fa[x];\n}\n\nvoid merge(int x,int y){\n\tfa[find(x)]=find(y);\n}\n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tif(find(u)!=find(v)) merge(u,v);\n\t\telse remain[++cnt]=(make_pair(u,v));\n\t}\n\tcout<<cnt<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tif(find(i)!=find(j)){\n\t\t\t\tprintf(\"%d %d %d %d\\n\",remain[cnt].first,remain[cnt].second,i,j);\n\t\t\t\tmerge(i,j);\n\t\t\t\t--cnt;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1645711949,
        "uid": 501865,
        "name": "TheSky233",
        "ccfLevel": 4,
        "title": "CF25D Roads not only in Berland \u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u975e\u5e38\u7b80\u5355\u7684\u5e76\u67e5\u96c6\u7ec3\u624b\u9898\u3002\u9898\u610f\u5927\u6982\u662f\u7ed9\u4f60 $N-1$\u6761\u8fb9\u8ba9\u4f60\u6539\u51e0\u6761\u8fb9\u8ba9\u56fe\u53d8\u6210\u8fde\u901a\u56fe\uff0c\u6709\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u6cd5\u5c31\u662f\u5728\u8bfb\u5165\u7684\u65f6\u5019\u7528\u4e00\u4e2a\u6808\u8bb0\u4e0b\u91cd\u8fb9\uff08\u6307\u4e24\u70b9\u5df2\u7ecf\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u683c\u5916\u7684\u8fde\u8fb9\uff09\uff0c\u7136\u540e\u66b4\u529b\u6c42\u51fa\u6bcf\u4e2a\u96c6\u5408\u7684\u968f\u610f\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u7528\u6808\u5b58\u4e0b\uff0c\u7136\u540e\u4e24\u4e2a\u6808\u4e92\u76f8\u5339\u914d\u4e00\u4e0b\uff08\u968f\u610f\u5339\u914d\u5c31\u53ef\u4ee5\u4e86\uff09\uff0c\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u66b4\u529b\u5b9e\u73b0\u5c31\u53ef\u4ee5\u4e86\u3002\n```cpp\n//\u7b80\u5355\u7684\u538b\u884c\uff0c\u6781\u81f4\u7684\u4f53\u9a8c\uff0c\u7a0b\u5e8f\u7684\u601d\u8def\u5e94\u8be5\u5f88\u6e05\u695a\u4e86\u7f62\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint sum=0,ff=1; char ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') ff=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t\tsum=sum*10+(ch^48),ch=getchar();\n\treturn sum*ff;\n}\nconst int N = 1005;\nint n , pre[N] , cu1[N] , cu2[N] , tot , tot2 , s[N] , to[N],ans;\nint _find(int x) {if(pre[x]==x) return x;return _find(pre[x]);}\nbool _union(int x,int y){return _find(x)!=_find(y);}\nmain() {\n\tn = read();\n\tfor(int i = 1 ; i <= n ; i ++) pre[i] = i;\n\tfor(int i = 1 ; i <= n-1 ; i ++) {\n\t\tint x = read() , y = read();\n\t\tif(_union(x,y)) pre[_find(x)]=_find(y);\n\t\telse cu1[++tot]=x,cu2[tot]=y;\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\tint x = _find(i);\n\t\tif(!to[x]) s[++tot2]=x,ans++,to[x]=1;\n\t}\n\tcout << ans-1<<endl;\n\tif(ans-1)\tfor(int i = tot2 ; i > 1 ; i --) cout<<cu1[tot--]<<\" \"<<cu2[tot]<<\" \"<<s[i]<<\" \"<<s[i-1]<<endl;\n}\n```\n",
        "postTime": 1592808022,
        "uid": 91381,
        "name": "\u521d\u4e91\u6095",
        "ccfLevel": 0,
        "title": "CF25D Roads not only in Berland \u9898\u89e3"
    },
    {
        "content": "\u770b\u770b\u9898\u76ee $:$ \u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u9876\u70b9 $n-1$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe  \n\u54a6 \u8fd9\u4e0d\u662f\u4e00\u68f5\u6811\u5417  \n\u4e8e\u662f\u672c\u9898\u62c6\u8fb9\u5c31\u53d8\u4e3a\u4e86\u62c6\u6389\u8ba9\u6811\u4e0a**\u5f62\u6210\u73af**\u7684\u8fb9 \u8fde\u8fb9\u5c31\u53d8\u4e3a\u4e86\u8ba9\u8fd9\u9897\u6811\u8054\u901a    \n#### \u5148\u770b\u5224\u65ad\u62c6\u8fb9\u7684\u6761\u4ef6   \n\u6bd4\u5982\u8bf4\u6211\u4eec\u8f93\u5165\u7684\u65f6\u5019\u6709\u8fd9\u4e2a\u73a9\u610f \u9ed1\u8272\u662f\u8fde\u63a5\u8fc7\u4e86 \u7ea2\u8272\u662f\u5373\u5c06\u8fde\u63a5\u7684     \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bmprov1g.png)   \n\u8fd9\u4e2a\u663e\u7136\u4e0d\u53ef\u4ee5\u8fde \u8fde\u63a5\u5c31\u4f1a\u4ea7\u751f\u73af \u4e0d\u7b26\u5408\u6811\u7684~~\u7279\u6027~~\u6027\u8d28  \n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6 \u5224\u65ad\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5728\u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5757 \n\u5982\u679c\u5728\u5c31\u4e0d\u53ef\u4ee5\u8fde \u628a\u8fd9\u6761\u8fb9\u4e22\u8fdb\u62c6\u8fb9\u6570\u7ec4\u4e2d   \n\u5982\u679c\u4e0d\u5728\u5c31\u53ef\u4ee5\u8fde \u76f4\u63a5\u8fde\u4e0a\u53bb\u5c31\u662f\u4e86  \n\n#### \u518d\u770b\u770b\u8fde\u8fb9\u7684\u6761\u4ef6  \n\u8fde\u8fb9\u5c31\u662f\u8ba9\u8fd9\u68f5\u6811\u8054\u901a \u8bf4\u7684\u7b80\u5355\u70b9 \u5c31\u662f\u628a\u591a\u68f5\u6811\u53d8\u6210\u4e00\u9897   \n\u6bd4\u5982\u8bf4\u6211\u4eec\u901a\u8fc7\u7384\u5b66\u5904\u7406 \u5df2\u7ecf\u77e5\u9053\u4e86\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u4ee5\u53ca\u8981\u62c6\u7684\u8fb9 \u9ed1\u8272\u662f\u8fde\u8fc7\u7684 \u7ea2\u8272\u662f\u8981\u8fde\u7684 \n![](https://cdn.luogu.com.cn/upload/image_hosting/rns9p0z3.png)  \n\u6211\u4eec\u4e0d\u59a8\u4ee4 $1$ $2$ $3$ \u4e3a\u96c6\u5408\u4ee3\u8868 ~~\u4e3a\u4e86\u65b9\u4fbf~~ \u6211\u4eec\u53d1\u73b0\u8fde\u8fb9\u5176\u5b9e\u5c31\u662f\u5728\u7956\u5148\u4e4b\u95f4\u8fde\u8fb9 **\u4e3a\u4e86\u907f\u514d\u73af\u7684\u51fa\u73b0**  \n\u6211\u4eec\u5c31\u8ba9\u5176\u4ed6\u7684\u7956\u5148\u5168\u548c \u7b2c\u4e00\u68f5\u6811\u7684\u7956\u5148\u8fde\u8fb9 ~~\u53cd\u6b63\u8f93\u51fa\u4efb\u4f55\u4e00\u79cd \u6015\u4ec0\u4e48~~  \n\u4e0d\u4f1a\u5e76\u67e5\u96c6\u7684 [\u6233\u8fd9\u91cc](https://www.luogu.com.cn/problem/P3367) \u771f\u7684\u5f88\u7b80\u5355  \n\u4e8e\u662f\u4e4e\u6211\u4eec\u6709\u4e86~~\u7b80\u5355\u6613\u61c2\u7684~~\u4ee3\u7801  \n\n\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nint n;\nint f[1005],fx,fy;//\u5e76\u67e5\u96c6\u7684\u76f8\u5173\u90e8\u5206 \nint ans1[1005],ans2[1005],h1;//\u8bb0\u5f55\u62c6\u8fb9\u7684\u6570\u7ec4 \nint dif[1005],h2;//\u8bb0\u5f55\u4e0d\u540c\u7684\u7956\u5148 \nint x,y;//\u8bfb\u5165\u8fb9 \ninline void read(int &x)//\u5feb\u8bfb \n{\n\tint f;char c;\n\tfor (f=1,c=getchar();c<'0'||c>'9';c=getchar()) if(c=='-') f=-1;\n\tfor (x=0;c<='9'&&c>='0';c=getchar()) x=x*10+(c&15);x*=f;\n}\ninline int mn(int _x,int _y)\n{\n\treturn _x<_y?_x:_y;\n}\ninline int mx(int _x,int _y)\n{\n\treturn _x>_y?_x:_y;\n}\ninline int ab(int _x)\n{\n\tif(_x<0) return -_x;\n\telse return _x;\n}\ninline int fd(int p)//\u627e\u4e00\u4e0b\u7956\u5148 \n{\n\treturn f[p]==p?p:f[p]=fd(f[p]);\n}\nint main()\n{\n\tread(n); \n\tfor(int i=1;i<=n;i++) f[i]=i;//\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316 \n\tfor(int i=1;i<n;i++)\n\t{\n\t\tread(x);read(y);\n\t\tfx=fd(x);//\u627e\u4e24\u4e2a\u70b9\u7684\u7956\u5148 \n\t\tfy=fd(y);\n\t\tif(fx==fy)//\u76f8\u540c\u5c31\u4ee3\u8868\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc \n\t\t{\n\t\t\th1++;//\u8fd9\u6761\u8fb9\u662f\u8981\u62c6\u7684 \n\t\t\tans1[h1]=x;\n\t\t\tans2[h1]=y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf[fy]=fx;//\u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u90a3\u5c31\u7ed9\u5b83\u8fde\u4e0a \n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i]==i) dif[++h2]=i;//\u627e\u4e00\u4e0b\u4e0d\u540c\u7684\u7956\u5148 f[i]==i \u4fdd\u8bc1\u4e0d\u4f1a\u91cd\u590d\u8bb0\u5f55\u540c\u4e00\u4e2a\u7956\u5148 \n\tprintf(\"%d\\n\",h1);//\u6253\u5370\u8981\u62c6\u7684\u8fb9 \n\tfor(int i=1;i<=h1;i++)\n\t\tprintf(\"%d %d %d %d\\n\",ans1[i],ans2[i],dif[1],dif[i+1]);//\u6309\u7167\u9898\u76ee\u683c\u5f0f\u6253\u5370\u5c31\u662f\u4e86 \n\treturn 0;\n}\n\n\n\n```\n",
        "postTime": 1585188643,
        "uid": 219198,
        "name": "Minecraft\u4e07\u5c81",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF25D \u3010Roads not only in Berland\u3011"
    },
    {
        "content": "\u9996\u5148\u62c6\u8fb9\u7684\u65f6\u5019\uff0c\u80af\u5b9a\u62c6\u6ca1\u7528\u7684\u8fb9\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\uff0c\u4e24\u4e2a\u70b9\u5df2\u7ecf\u8054\u901a\u4e86\uff0c\u518d\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e0a\u6dfb\u52a0\u8fb9\uff0c\u80af\u5b9a\u5c31\u662f\u6ca1\u7528\u7684\u54af\u3002\n\n\u521a\u5f00\u59cb\uff0c\u6240\u6709\u70b9\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u96c6\u5408\uff0c\u6bcf\u5f53\u8981\u6dfb\u52a0\u4e00\u6761\u65b0\u8fb9\u7684\u65f6\u5019\uff0c\u5224\u65ad\u8be5\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u5982\u679c\u5df2\u7ecf\u662f\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u8be5\u8fb9\u5c31\u662f\u6ca1\u7528\u7684\u8fb9\u3002\u5982\u679c\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u5c31\u628a\u8be5\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\u7684\u6240\u5c5e\u96c6\u5408\u5408\u5e76\u2014\u2014**\u5e76\u67e5\u96c6**\n\n\u4e4b\u540e\u626b\u63cf\u4efb\u610f\u4e24\u70b9\uff0c\u5982\u679c\u67d0\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u90a3\u4e48\u5c31\u6dfb\u52a0\u4e00\u6761\u8fb9\uff0c\u4f7f\u8fd9\u4e24\u70b9\u8054\u901a\uff0c\u628a\u8be5\u4e24\u70b9\u6240\u5c5e\u7684\u96c6\u5408\u5408\u5e76\u3002\n\n\u4e3b\u8981\u5c31\u8fd9\u4e48\u591a\uff0c\u5177\u4f53\u8be6\u7ec6\u53ea\u80fd\u770b\u4ee3\u7801\u4e86\n\n    LuckyCloud\n  \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct edge\n{\n  int u,v;\n}del[4000];\nstruct data\n{\n int u,v,x,y;\n}Item[4000];\nint fa[1013],sum[1013],tot,n,x,y,fx,fy,ans;\ninline int find(int x)\n{\n  if (fa[x]==x) return x;\n  fa[x]=find(fa[x]);\n  return fa[x];\n}\ninline long long read()\n{\n  long long cnt=0,f=1;char ch=getchar();\n  while (ch<'0'||ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n  while (ch>='0'&&ch<='9'){cnt=cnt*10+ch-48;ch=getchar();}\n  return cnt*f;\n}\nvoid load()\n{\n  for (int i=1;i<=n;i++)\n   fa[i]=i;\n}\nint main()\n{\n  n=read();\n  load();\n  for (int i=1;i<n;i++)\n   {\n   \tx=read();y=read();\n    fx=find(x);fy=find(y);\n    if (fx!=fy) fa[fy]=fx;\n    else {del[++tot].u=x;del[tot].v=y;}\n   }\n  for (int i=1;i<n;i++)\n   for (int j=i+1;j<=n;j++)\n    {\n      fx=find(i);fy=find(j);\n      if (fx!=fy)\n       {\n       \tfa[fy]=fx;\n       \tItem[++ans].u=del[tot].u;\n       \tItem[ans].v=del[tot--].v;\n       \tItem[ans].x=i;\n       \tItem[ans].y=j;\n       }\n    }   \n  printf(\"%d\\n\",ans);\n  for (int i=1;i<=ans;i++)\n   printf(\"%d %d %d %d\\n\",Item[i].u,Item[i].v,Item[i].x,Item[i].y);\n  return 0;\n}\n```\n\n\n",
        "postTime": 1530256555,
        "uid": 23977,
        "name": "LuckyCloud",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF25D \u3010Roads not only in Berland\u3011"
    },
    {
        "content": "# \u9898\u89e3 CF25D \u3010Roads not only in Berland\u3011\n\n\u7b80\u5355\u7684kurskal\u6a21\u677f\u9898\n\n\u4f17\u6240\u5468\u77e5kurskal\uff0c\u5148\u5199\u5e76\u67e5\u96c6\uff1a\n```\nint get_root(int u){\n\tif(father[u] == u){\n\t\treturn u;\n\t}else{\n\t\treturn father[u] = get_root(father[u]);\n\t}\n}\nbool pd(int u,int v){\n\treturn get_root(u) == get_root(v);\n}\nvoid merge(int u,int v){\n\tfather[get_root(u)] = get_root(v);\n\treturn ;\n}\n```\n\u7136\u540e\u9884\u5904\u7406\uff1a\u628a\u81ea\u5df1\u7684\u7238\u7238\u8bbe\u4e3a\u81ea\u5df1\n\n\u524d\u5f80\u522b\u5fd8\u4e86\uff1b\n\n\u7136\u540e\u8f93\u5165\u6392\u5e8f\uff0c\u8d2a\u5fc3\uff0c\u6c42\u6700\u5c0f\u770b\u662f\u5426\u5728\u4e00\u4e2a\u6811\u4e0a\n\n\u4f46\u8fd9\u9898\u6ca1\u6743\u503c\u6240\u4ee5\u4e0d\u6392\u5e8f\uff0c\u76f4\u63a5kurskal\n\n\u4e0d\u8fc7\u8981\u589e\u52a0\u5224\u65ad\u8fb9\u662f\u5426\u7528\u8fc7\n\n```\nvoid kurskal(){\n\tint c=1;\n\tfor (int i = 1; i < n; ++i){\n\t\tif(pd(input[i].x,input[i].y)){\n\t\t\tcontinue;\n\t\t}\n\t\tc++;\n\t\tmerge(input[i].x,input[i].y);\n\t\tvis[i]=true;\n\t\tif(n == c){\n\t\t\treturn ;\n\t\t}\n\t}\n\t\n}\n```\n\n\u7136\u540e\u7edf\u8ba1\u6ca1\u7528\u8fc7\u7684\u8fb9\uff0c\u8f93\u51fa\n```\nfor (int i = 1; i < n; ++i){\n\tif(!vis[i]){\n\t\tans++;\n\t}\n}\nprintf(\"%d\\n\",ans);\n```\n\n\u6700\u540e\u518d\u627e\u4e00\u904d\u6ca1\u8f93\u51fa\u7684\u8fb9\uff0c\u8f93\u51fa\u8fb9\n\n\u627e\u5230\u540e\u5728\u987a\u5e8f\u5bfb\u627e\u4e0d\u5728\u4e00\u8d77\u7684\u96c6\u5408\n\n\u8f93\u51fa\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\n\n\u5343\u4e07\u522b\u5fd8\u4e86\u628a\u4e24\u4e2a\u96c6\u5408\u8fde\u8d77\u6765\uff08~~\u9119\u4eba\u5c31\u5fd8\u4e86WA\u4e86\u4e00\u6b21~~\uff09\n\n```\nfor (int i = 1; i < n; ++i){\n\tif(!vis[i]){\n\t\tprintf(\"%d %d \",input[i].x,input[i].y);\n\t\twhile(j<=n){\n\t\t\tif(!pd(input[i].x,j)){\n\t\t\t\tprintf(\"%d %d\\n\",input[i].x,j);\n\t\t\t\tmerge(input[i].x,j);\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\t\n}\n```\n\n\n\n\n\n# code\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint father[100050];\nbool vis[1000050];\nint n,m,sum;\nstruct rode{\n\tint x,y;\n}input[100050];\nint get_root(int u){\n\tif(father[u] == u){\n\t\treturn u;\n\t}else{\n\t\treturn father[u] = get_root(father[u]);\n\t}\n}\nbool pd(int u,int v){\n\treturn get_root(u) == get_root(v);\n}\nvoid merge(int u,int v){\n\tfather[get_root(u)] = get_root(v);\n\treturn ;\n}\nvoid kurskal(){\n\tint c=1;\n\tfor (int i = 1; i < n; ++i){\n\t\tif(pd(input[i].x,input[i].y)){\n\t\t\tcontinue;\n\t\t}\n\t\tc++;\n\t\tmerge(input[i].x,input[i].y);\n\t\tvis[i]=true;\n\t\tif(n == c){\n\t\t\treturn ;\n\t\t}\n\t}\n\t\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (int i = 1; i <= n; ++i){\n\t\tfather[i] = i;\n\t}\n\tfor (int i = 1; i < n; ++i){\n\t\tscanf(\"%d %d\",&input[i].x,&input[i].y);\n\t}\n\t//sort(input ,input+m,cmp);\n\tkurskal();\n\tint ans=0;\n\tfor (int i = 1; i < n; ++i){\n\t\tif(!vis[i]){\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\tint j=1;\n\tfor (int i = 1; i < n; ++i){\n\t\tif(!vis[i]){\n\t\t\tprintf(\"%d %d \",input[i].x,input[i].y);\n\t\t\twhile(j<=n){\n\t\t\t\tif(!pd(input[i].x,j)){\n\t\t\t\t\tprintf(\"%d %d\\n\",input[i].x,j);\n\t\t\t\t\tmerge(input[i].x,j);\n\t\t\t\t\tbreak;\n\t\t\t\t}else{\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n}\n\n```\n",
        "postTime": 1596266778,
        "uid": 129390,
        "name": "yangwenbin",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF25D \u3010Roads not only in Berland\u3011"
    }
]