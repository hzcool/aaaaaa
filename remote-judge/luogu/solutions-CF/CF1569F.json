[
    {
        "content": "\u7206\u641c\u9898\uff0c\u6211\u4eec\u5148\u8003\u8651\u4e00\u6761\u54c8\u5bc6\u987f\u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u9996\u5c3e\u4e24\u4e24\u914d\u5bf9\u7684\u60c5\u51b5\u62a0\u51fa\u6765\uff0c\u56e0\u4e3a\u5224\u65ad\u56de\u6587\u4e0d\u9700\u8981\u77e5\u9053\u5177\u4f53\u8def\u5f84\u7684\u8fde\u63a5\u3002\u4e24\u4e24\u914d\u5bf9\u7684\u60c5\u51b5\u53ef\u4ee5\u7b97\u51fa\u6765\u662f $\\frac{\\binom{12}{6}}{6!}=10395$ \u79cd\u60c5\u51b5\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u6211\u4eec\u9700\u8981\u77e5\u9053\u662f\u5426\u6709\u4e00\u6761\u8def\u5f84\u80fd\u8fde\u63a5\uff0c\u76f4\u63a5\u5168\u6392\u5217\uff0c$10395\\times 6!=7484400$\u3002\n\n\u63a5\u4e0b\u6765\u8fd8\u8981\u8003\u8651\u5b57\u7b26\u653e\u4e0a\u53bb\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u628a\u6240\u6709\u5bf9\u5148\u5bf9\u5185\u6392\u5e8f\u540e\u518d\u6574\u4f53\u6392\u5e8f\uff0c\u7136\u540e\u4e00\u4e2a\u4e2a\u653e\u5b57\u7b26\uff0c\u5e76\u4e14\u4fdd\u8bc1\u5b57\u7b26 $i$ \u7684\u6700\u65e9\u51fa\u73b0\u65f6\u95f4\u4e0d\u8d85\u8fc7 $i+1$\uff0c\u8003\u8651\u8fd9\u6837\u7684\u65b9\u6848\u6570\u662f\u7b2c $6$ \u4e2a\u8d1d\u5c14\u6570 $=203$\u3002$10395\\times 203=2110185$\u3002\n\n\u7136\u540e\u6700\u540e\u5bf9\u8fd9 $2\\times 10^6$ \u79cd\u65b9\u6848\u53bb\u4e2a\u91cd\u7b97\u4e0b\u7b54\u6848\u5c31\u884c\u4e86\u3002\n\n```c++\n// Lynkcat.\n// Problem: F. Palindromic Hamiltonian Path\n// URL: https://codeforces.com/problemset/problem/1569/F\n// Memory Limit: 256 MB\n// Time Limit: 5000 ms\n// -----------------------------------------------\n\n#include<bits/stdc++.h>\n#define poly vector<int>\n#define IOS ios::sync_with_stdio(false)\n#define ll long long\n#define mp make_pair\n#define mt make_tuple\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define inf 1e18\n#define mod 998244353\n// #define int ll\n#define N 55\nusing namespace std;\nvector<poly> col[N];\nint f[N][N];\nint all1;\nvector<poly>Ans[N];\nint p[N];\nll C[N][N],fac[N];\nint all;\nint n,m,q;\nvoid dfs(int k,int mx,poly g)\n{\n\tif (k==n/2+1)\n\t{\n\t\tcol[mx].push_back(g);\n\t\tall1++;\n\t\treturn;\n\t}\n\tfor (int i=1;i<=mx+1;i++)\n\t{\n\t\tg.push_back(i),dfs(k+1,max(mx,i),g),g.pop_back();\n\t}\n}\nvoid work(vector<pa>g)\n{\n\tfor (int i=0;i<g.size();i++) p[i]=i;\n\tint ans=0;\n\tint tt=0;\n\tdo\n\t{\n\t\ttt++;\n\t\tbool res=0;\n\t\tfor (int i=0;i+1<g.size();i++)\n\t\t{\n\t\t\tint x=p[i],y=p[i+1];\n\t\t\tif (f[g[x].fi][g[y].fi]&&f[g[y].se][g[x].se])\n\t\t\t\tcontinue;\n\t\t\tif (f[g[x].fi][g[y].se]&&f[g[y].fi][g[x].se])\n\t\t\t\tcontinue;\n\t\t\tres=1;\n\t\t}\n\t\tint x=p[g.size()-1];\n\t\tif (!(f[g[x].fi][g[x].se])) res=1;\n\t\tif (res) continue;\n\t\tans=1;\n\t\tbreak;\n\t}while (next_permutation(p,p+g.size()));\n\tif (!ans) return;\n\tfor (int i=1;i<=n/2;i++)\n\t{\n\t\tfor (auto u:col[i])\n\t\t{\n\t\t\tpoly nowc(n,0);\n\t\t\tfor (int j=0;j<n/2;j++)\n\t\t\t\tnowc[g[j].fi-1]=nowc[g[j].se-1]=u[j];\n\t\t\tAns[i].push_back(nowc);\n\t\t}\n\t}\n}\n\t\t\nvoid dfs1(poly g,vector<pa>g1)\n{\n\tif (!g.size())\n\t{\n\t\tall++;\n\t\twork(g1);\n\t\treturn;\n\t}\n\tint x=g.back();\n\tg.pop_back();\n\tfor (int i=0;i<g.size();i++)\n\t{\n\t\tint now=g[i];\n\t\tpoly nxt=g;\n\t\tnxt.erase(nxt.begin()+i,nxt.begin()+i+1);\n\t\tg1.push_back(mp(x,g[i]));\n\t\tdfs1(nxt,g1);\n\t\tg1.pop_back();\n\t}\n}\nvoid BellaKira()\n{\n\tcin>>n>>m>>q;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tf[x][y]=f[y][x]=1;\n\t}\n\tdfs(1,0,poly());\n\tpoly now;\n\tfor (int i=1;i<=n;i++) now.push_back(i);\n\tdfs1(now,vector<pa>());\n\tC[0][0]=1;fac[0]=1;\n\tfor (int i=1;i<=q;i++)\n\t{\n\t\tC[i][0]=1;\n\t\tfac[i]=fac[i-1]*i;\n\t\tfor (int j=1;j<=i;j++)\n\t\t\tC[i][j]=(C[i-1][j]+C[i-1][j-1]);\n\t}\n\tll ans=0;\n\tfor (int i=1;i<=n/2;i++)\n\t{\n\t\tsort(Ans[i].begin(),Ans[i].end());\n\t\tAns[i].erase(unique(Ans[i].begin(),Ans[i].end()),Ans[i].end());\n\t\tans+=1ll*(ll)Ans[i].size()*C[q][i]*fac[i];\n\t}\n\tcout<<ans<<endl;\n}\nsigned main()\n{\n\tint T=1;\n\twhile (T--)\n\t{\n\t\tBellaKira();\n\t}\n}\n```",
        "postTime": 1654777193,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1569F Palindromic Hamiltonian Path"
    }
]