[
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u611f\u89c9\u6bd4\u8f83\u4f18\u7f8e\u7684\u505a\u6cd5\uff08\u4e0d\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff09\u3002\n\n\n------------\n\n\u6211\u4eec\u53d1\u73b0\u5c06\u8fd9\u4e9b\u6570\u770b\u6210\u4e8c\u8fdb\u5236\u6570\u5b57\u7b26\u4e32\u540e\uff0c$\\operatorname{xor}$ \u548c `lcp` \u662f\u5f88\u76f8\u4f3c\u7684\uff1b\u90a3\u4e48\u7c7b\u6bd4 `sa` \u5173\u4e8e\u540e\u7f00\u4e4b\u95f4\u7684 `lcp` \u7684\u90a3\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5c06\u8fd9\u4e9b\u6570\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u540e\u5f97\u5230 $a$ \u5e8f\u5217\uff0c\u90a3\u4e48 $a$ \u7684\u4e00\u4e2a\u5b50\u5e8f\u5217 $b$ \u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u5f02\u6216\u7684\u6700\u5c0f\u503c\u4e3a $\\min_i\\{b_i\\operatorname{xor} b_{i+1} \\}$\u3002\n\n\u8bc1\u660e\uff1a\u5fc5\u8981\u6027\u663e\u7136\uff0c\u8bc1\u4e00\u4e0b\u5145\u5206\u6027\uff1a\u5047\u8bbe\u5b58\u5728 $i+1<j$ \uff08\u76f8\u53cd\u60c5\u51b5\u540c\u7406\uff09\u4f7f\u5f97 $b_i\\operatorname{xor}b_j<b_i\\operatorname{xor}b_{i+1}$\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d $k$\uff0c\u4f7f\u5f97\u4efb\u610f $k^{\\prime}>k$ \u6ee1\u8db3 $b_{j,k^{\\prime}}=b_{i+1,k^{\\prime}}$ \u4e14 $b_{i,k}=b_{j,k}\\ne b_{i+1,k}$ \uff0c\u53c8\u56e0\u4e3a $b_{i}<b_{i+1}$ \u53ef\u5f97 $b_{i,k}=b_{j,k}=0,b_{i+1,k}=1$\uff1b\u8fd9\u6837\u4ee5\u6765\u53c8\u53ef\u5f97 $b_{i+1}>b_{j}$\uff0c\u4e0e\u5047\u8bbe $i+1<j$ \u77db\u76fe\uff0c\u5f97\u8bc1\u3002\n\n\n------------\n\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u5c06\u7ed9\u51fa\u7684\u5e8f\u5217\u6309\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u5b57\u5178\u5e8f\uff08\u5176\u5b9e\u5c31\u7b49\u4e8e\u6309\u6570\u503c\u5927\u5c0f\uff09\u6392\u5e8f\u5f97\u5230 $a$ \u5e8f\u5217\uff0c\u8bbe $f_i$ \u8868\u793a\u5f3a\u5236\u9009 $i$ \u65f6\u4ece\u533a\u95f4 $[1,i]$ \u6700\u591a\u80fd\u9009\u51e0\u4e2a\u6570\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e3a $f_i=\\max_{j<i,b_j\\operatorname{xor} b_i\\geq k}\\{f_j\\}+1$\u3002\n\n\u76f4\u63a5\u505a\u662f $O(n^2)$ \u7684\uff0c\u653e\u5728\u5b57\u5178\u6811\u4e0a\uff0c\u8bbe $g_x= \\max_{y\\in subtree(x),y\\texttt{ is a leaf}}\\{f_y\\}$\uff0c\u63d2\u5165\u65f6\u66b4\u529b\u7ef4\u62a4\uff0c\u8f6c\u79fb\u65f6\u4ece\u4e0a\u5411\u4e0b\u904d\u5386\uff0c\u8bbe\u5f53\u524d\u5728\u7b2c $j$ \u4f4d $x$ \u8282\u70b9\uff0c\u82e5 $k_j=0$\uff0c\u8bf4\u660e\u6b64\u65f6 $subtree(son_{x,b_i\\operatorname{xor}1})$ \u4e2d\u6240\u6709\u6570\u90fd\u662f\u53ef\u4ee5\u9009\u7684\uff0c\u4ee4 $f_i=\\max\\{f_i,g_{son_{x,b_i\\operatorname{xor}1}}+1\\}$\uff0c\u7136\u540e\u8fdb\u5165 $son_{x,b_i}$ \u7ee7\u7eed\u5904\u7406\uff1b\u5426\u5219\u53ea\u80fd\u8fdb\u5165 $son_{x,b_i\\operatorname{xor}1}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log v)$\uff0c$v$ \u4e3a\u503c\u57df\u3002\n\n\n\n------------\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rg register\n#define ll long long\n#define ull unsigned ll\n#define inf 0x3f3f3f3f\n#define lowbit(x) (x&(-x))\n#define eps 1e-8\nconst double alpha=0.73;\ninline void file(){\n\tfreopen(\"baka.in\",\"r\",stdin);\n\tfreopen(\"baka.ans\",\"w\",stdout);\n}\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int getc(){\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read(){\n\trg int ret=0,f=0;char ch=getc();\n    while(!isdigit(ch)){if(ch==EOF)exit(0);if(ch=='-')f=1;ch=getc();}\n    while(isdigit(ch)){ret=ret*10+ch-48;ch=getc();}\n    return f?-ret:ret;\n}\nstruct num{ \n\tint id,v; \n\tnum(int id=0,int v=0):id(id),v(v) {} \n\tbool operator<(const num& tmp)const{ return v^tmp.v?v<tmp.v:id<tmp.id; }\n}a[300005],f[300005],g[300005*32+5];\nint n,k,son[300005*32+5][2],cntt=1;\ninline void update(int x){\n\tconst int v=a[x].v,id=a[x].id; int u=1;\n\tfor(rg int i=30;~i;--i){\n\t\tif(!u) break;\n\t\tconst bool chk=((k>>i)&1),to=((v>>i)&1);\n\t\tif(!chk) f[id]=max(f[id],g[son[u][to^1]]);\n\t\tu=son[u][to^chk];\n\t}\n\tif(u) f[id]=max(f[id],g[u]);\n\t++f[id].v;\n}\ninline void insert(int x){\n\tconst int v=a[x].v,id=a[x].id; int u=1;\n\tconst num fid=num(id,f[id].v);\n\tfor(rg int i=30;~i;--i){\n\t\tconst bool to=((v>>i)&1);\n\t\tif(!son[u][to]) son[u][to]=++cntt;\n\t\tg[u]=max(g[u],fid);\n\t\tu=son[u][to];\n\t}\n\tg[u]=max(g[u],fid);\n}\nsigned main(){\n    //file();\n   \tn=read(),k=read();\n   \tfor(rg int i=1,x;i<=n;++i) x=read(),a[i]=num(i,x);\n\tsort(a+1,a+1+n);\n\tfor(rg int i=1;i<=n;++i) update(i),insert(i);\n\tint x=g[1].id;\n\tif(f[x].v==1) return 0*puts(\"-1\");\n\tprintf(\"%d\\n\",f[x].v);\n\twhile(x) printf(\"%d \",x),x=f[x].id;\n\treturn 0;\n}\n/*\n10 10\n18 2 6 17 7 19 17 6 2 12 14\n4 15 5 20 2 6 20 12 16 5\n*/\n```\n\n",
        "postTime": 1643713681,
        "uid": 241977,
        "name": "Legitimity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1625D"
    },
    {
        "content": "\u8fd9\u79cd\u95ee\u9898\u5148\u653e\u5230 trie \u6811\u4e0a\u770b\u770b\u3002\n\n\u5047\u8bbe $k$ \u7684\u6700\u9ad8\u4f4d\u4e3a $p$\uff0c\u90a3\u4e48 trie \u6811\u4e0a\u9ad8\u5ea6\u4e3a $p$ \u7684\u7ed3\u70b9\u7684\u5b50\u6811\u76f8\u4e92\u72ec\u7acb\uff08\u8fd9\u91cc\u7684\u9ad8\u5ea6\u4e3a $p$ \u662f\u6307\u7ed3\u70b9\u6240\u4ee3\u8868\u4e8c\u8fdb\u5236\u4f4d\u4e3a $p$\uff09\uff0c\u800c\u6bcf\u4e2a\u9ad8\u5ea6\u4e3a $p$ \u7684\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7684\u5b50\u6811\u91cc\u6700\u591a\u9009\u4e00\u4e2a\uff0c\u53f3\u513f\u5b50\u7684\u5b50\u6811\u91cc\u4e5f\u6700\u591a\u9009\u4e00\u4e2a\uff0c\u95ee\u9898\u8f6c\u4e3a\u80fd\u5426\u4ece\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u91cc\u9009\u51fa\u4e24\u4e2a\u4f7f\u5176\u5f02\u6216 $\\ge k$\u3002\n\n\u76f4\u63a5\u66b4\u529b\u627e\u51fa\u5de6\u5b50\u6811\u91cc\u7684\u6240\u6709\u5143\u7d20\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\u5728\u53f3\u5b50\u6811\u4e0a\u8d2a\u5fc3\u627e\u5230\u4e0e\u5b83\u5f02\u6216\u8d77\u6765\u6700\u5927\u7684\u6570\uff0c\u770b\u770b\u4e24\u8005\u7684\u5f02\u6216\u662f\u5426 $\\ge k$\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n//author:\u671b\u8fdc\u661f\n#include<bits/stdc++.h>\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define pb push_back\n#define mk make_pair\n#define sml(x,y) (x=min(x,y))\n#define big(x,y) (x=max(x,y))\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){int x=0,fh=1;char ch=getchar();while(!isdigit(ch)){if(ch=='-')fh=-1;ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}return x*fh;}\ninline void out(int *a,int l,int r){fo(i,l,r) cout<<*(a+i)<<' ';puts(\"\");}\n\nconst int N=3e5+5;\nint ch[N*30][2],n,num,a[N],k,root,pos,data[N*30];\nvector<int> ans,g;\n\nvoid insert(int &now,int x,int b){\n\tif(!now) now=++num;\n\tif(b<0) return;\n\tinsert(ch[now][x>>b&1],x,b-1);\t\n}\n\nvoid _dfs(int now,int b){\n\tif(b<0){\n\t\tg.pb(data[now]);\n\t\treturn;\n\t}\n\tif(ch[now][0]) _dfs(ch[now][0],b-1);\n\tif(ch[now][1]) _dfs(ch[now][1],b-1);\n}\n\nint query(int now,int x,int b){\n\tif(b<0) return data[now];\n\tif(ch[now][!(x>>b&1)]) return query(ch[now][!(x>>b&1)],x,b-1);\n\telse return query(ch[now][x>>b&1],x,b-1);\n}\n\nvoid dfs(int now,int b){\n\tif(b==pos){\n\t\tif(!ch[now][0]&&!ch[now][1]) return;\n\t\tif(!ch[now][0]){\n\t\t\t_dfs(ch[now][1],b-1);\n\t\t\tans.pb(g[0]);\n\t\t\tg.clear();\n\t\t\treturn;\n\t\t}\n\t\tif(!ch[now][1]){\n\t\t\t_dfs(ch[now][0],b-1);\n\t\t\tans.pb(g[0]);\n\t\t\tg.clear();\n\t\t\treturn;\t\n\t\t}\n\t\t_dfs(ch[now][0],b-1);\n\t\tfor(int i:g){\n\t\t\tint w=query(ch[now][1],a[i],b-1);\n\t\t\tif((a[w]^a[i])>=k){\n\t\t\t\tans.pb(i),ans.pb(w);\n\t\t\t\tgoto H;\n\t\t\t} \t\t\n\t\t}\n\t\tans.pb(g[0]);\n\t\tH:\n\t\tg.clear();\n\t\treturn;\n\t}\n\tif(ch[now][0]) dfs(ch[now][0],b-1);\n\tif(ch[now][1]) dfs(ch[now][1],b-1);\n}\n\nsigned main(){\n\tcin>>n>>k;\n\tfo(i,1,n){\n\t\ta[i]=read(),insert(root,a[i],29);\n\t\tif(!data[num]) data[num]=i;\n\t} \n\tif(!k){\n\t\tcout<<n<<'\\n';\n\t\tfo(i,1,n) cout<<i<<' ';\n\t\treturn 0;\n\t}\n\tfo(i,0,29) if(k>>i&1) pos=i;\n\tdfs(root,29);\n\tif(ans.size()<=1){\n\t\tcout<<-1;\n\t\treturn 0;\n\t}\n\tcout<<ans.size()<<'\\n';\n\tfor(int i:ans) cout<<i<<' ';\n\treturn 0;\n}\n/*\n-------------------------------------------------\n*/\n\n```\n",
        "postTime": 1643073223,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1625D Binary Spiders"
    },
    {
        "content": "*01trie\uff0c\u5206\u8ba8*\n\n---\n\u50cf\u6211\u8fd9\u79cd\u60f3\u4e0d\u5230\u7ed3\u8bba\u7684\u83dc\u903c\uff0c\u81ea\u7136\u662f\u4e0d\u4f1a\u7528\u7ed3\u8bba\u7684\u3002\n\n\u8003\u8651 01trie\uff0c\u627e\u5230 $k$ \u4e8c\u8fdb\u5236\u7684\u7b2c\u4e00\u4e2a $1$\uff0c\u548c trie \u4e0a\u8fd9\u4e00\u5c42\u7684\u8282\u70b9\u3002\n\n\u8fd9\u4e9b\u8282\u70b9\u5b50\u6811\u5185\u7684\u9009\u62e9\u662f\u72ec\u7acb\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u5b50\u6811\u5185\u9009\u7684\u6570\uff0c\u524d\u9762\u51e0\u4f4d\u5f02\u6216\u8d77\u6765\u4e00\u5b9a\u4e0d\u662f $0$\uff0c\u800c $k$ \u524d\u51e0\u4f4d\u90fd\u662f $0$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u6765\u8bf4\uff0c\u6700\u591a\u53ea\u80fd\u9009 $2$ \u4e2a\uff0c\u4e14\u9009 $2$ \u4e2a\u7684\u60c5\u51b5\u4e00\u5b9a\u662f\u5de6\u5b50\u6811\u4e00\u4e2a\u53f3\u5b50\u6811\u4e00\u4e2a\uff0c\u6240\u4ee5\u76f4\u63a5\u5728\u5de6\u53f3\u5b50\u6811\u9009\u4e00\u5bf9\u5f02\u6216\u8d77\u6765 $\\ge k$ \u7684\u5c31\u597d\u4e86\u3002\u9009\u4e0d\u51fa\u6765\u4e00\u5bf9\u7684\u8bdd\u5c31\u5728\u5b50\u6811\u5185\u968f\u4fbf\u9009\u4e00\u4e2a\u3002\n\n---\n\u8003\u8651 `check(int x, int y, int d)` \u8868\u793a\u8981\u4ece $x,y$\uff08\u6df1\u5ea6 $d$\uff09\u5b50\u6811\u4e2d\u5404\u627e\u4e00\u4e2a\u6570\uff0c\u4f7f\u5f97\u5f02\u6216\u548c $\\ge k$\u3002(\u8fd4\u56de\u503c\u4e3a\u4e00\u4e2a `pair` \u8868\u793a\u4e24\u4e2a\u6570\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807)\n\n\u5982\u679c $k$ \u8fd9\u4e00\u4f4d\u662f $0$ \u4e14\u5f53\u524d\u4f4d\u5f02\u6216\u548c\u53ef\u4ee5\u51d1\u51fa $1$\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u4f4d\u51d1\u51fa $1$ \u7684\u4efb\u610f\u4e24\u4e2a\u6570\u5c31\u597d\u4e86\u3002\n\n\u5426\u5219\u770b\u5f53\u524d\u4f4d\u5f02\u6216\u548c\u662f\u5426\u80fd\u548c $k$ \u4e00\u6837\uff0c\u4e0d\u80fd\u7684\u8bdd\u8fd4\u56de\u65e0\u89e3\u3002\n\n\u6ce8\u610f\u5230\u4e0a\u8ff0\u8fc7\u7a0b trie \u4e0a\u6bcf\u4e2a\u8282\u70b9\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6 $O(n\\log V)$\u3002\n\n*\u6ce8\u610f\u7279\u5224 0 \u5168\u90e8\u8f93\u51fa*\n\n---\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntemplate<typename T>\ninline void Read(T &n){\n\tchar ch; bool flag=false;\n\twhile(!isdigit(ch=getchar())) if(ch=='-')flag=true;\n\tfor(n=ch^48; isdigit(ch=getchar()); n=(n<<1)+(n<<3)+(ch^48));\n\tif(flag) n=-n;\n}\n\nenum{\n    MAXN = 300005\n};\n\nstruct node{\n    int son[2], val;\n    #define lc(x) t[x].son[0]\n    #define rc(x) t[x].son[1]\n    #define son(x,opt) t[x].son[opt]\n    #define val(x) t[x].val\n    // val \u8868\u793a\u5b50\u6811\u5185\u7684\u4efb\u610f\u4e00\u4e2a\u6570\n}t[MAXN*32];\nint rt=1, node_cnt=1;\n\nvector<int>q[31];\n\nint n, k;\n\ninline void insert(int x, int id){\n    int cur = rt;\n    for(int i=29; ~i; i--){\n        char v = x>>i&1;\n        if(!son(cur,v)) son(cur,v) = ++node_cnt, q[i].push_back(son(cur,v));\n        cur = son(cur,v); val(cur) = id;\n        // printf(\"%d \",cur);\n    }\n    // puts(\"\");\n}\n\nint ans[MAXN], cnt;\n\ntypedef pair<int,int> pii;\npii check(int d, int x, int y){\n    // printf(\"check %d %d %d\\n\",d,x,y);\n    if(d<0) return pii(val(x),val(y));\n    if(k>>d&1){\n        pii ans; ans.first = -1;\n        if(lc(x) and rc(y)) ans = check(d-1,lc(x),rc(y));\n        if(ans.first==-1 and rc(x) and lc(y)) ans = check(d-1,rc(x),lc(y));\n        return ans;\n    } \n    if(lc(x) and rc(y)) return pii(val(lc(x)),val(rc(y)));\n    if(rc(x) and lc(y)) return pii(val(rc(x)),val(lc(y)));\n    pii ans; ans.first = -1;\n    if(lc(x) and lc(y)) ans = check(d-1,lc(x),lc(y));\n    if(ans.first==-1 and rc(x) and rc(y)) ans = check(d-1,rc(x),rc(y));\n    return ans;\n}\n\nint a[MAXN];\n\ninline void check(){\n    for(int i=1; i<=cnt; i++) for(int j=i+1; j<=cnt; j++) assert((a[ans[i]]^a[ans[j]])>=k);\n}\n\nint main(){\n    // freopen(\"d.in\",\"r\",stdin);\n    // freopen(\"d.out\",\"w\",stdout);\n    Read(n); Read(k); q[30].push_back(1);\n    // puts(\"?\");\n    for(int i=1; i<=n; i++) Read(a[i]);\n    for(int i=1; i<=n; i++) insert(a[i],i);\n    // for(int i=1; i<=n; i++,puts(\"\")) for(int j=6; ~j; j--) printf(\"%d\",a[i]>>j&1);\n    if(!k){\n        printf(\"%d\\n\",n);\n        for(int i=1; i<=n; i++) printf(\"%d \",i);puts(\"\");\n        return 0;\n    }\n    for(int i=29; ~i; i--) if(k>>i&1){\n        // printf(\"pos = %d\\n\",i);\n        for(int x:q[i+1]){\n            // printf(\"solve %d\\n\",x);\n            pii res = check(i,x,x);\n            if(res.first==-1) ans[++cnt] = val(x);\n            else ans[++cnt] = res.first, ans[++cnt] = res.second;\n        }\n        if(cnt<2) return puts(\"-1\"), 0;\n        printf(\"%d\\n\",cnt);\n        for(int j=1; j<=cnt; j++) printf(\"%d \",ans[j]); puts(\"\");\n        // check();\n        return 0;\n    }\n    return 0;\n}\n```",
        "postTime": 1642033492,
        "uid": 56825,
        "name": "oisdoaiu",
        "ccfLevel": 9,
        "title": "cf765d Binary Spiders"
    },
    {
        "content": "\u535a\u5ba2\uff1a[CF DS\u9898\u9009\u505a](https://www.luogu.com.cn/blog/302837/cf-2300-ds-ti-zuo-ti-bi-ji)\n\n\u9898\u610f\uff1a\u7ed9\u5b9a $n$ \u4e2a\u6574\u6570\uff0c$a_1,a_2,...,a_n$\uff0c\u5e76\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 $k$\uff0c\u6c42\u51fa\u4e00\u4e2a\u6700\u5927\u7684\u96c6\u5408 $S$\uff0c\u6ee1\u8db3 $S$ \u4e2d\u7684\u5143\u7d20\u5747 $\\le n$\uff0c\u4e14\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a $S$ \u4e2d\u7684\u5143\u7d20 $x,y$\uff0c\u6ee1\u8db3\u4e24\u6570\u5f02\u6216\u548c $\\ge k$\u3002\n\n---\n\n\u5206\u6790\uff1a\u5982\u679c\u4e24\u4e2a\u6570\u5f02\u6216\u7ed3\u679c\u7684\u6700\u9ad8\u4f4d\u6bd4 $k$ \u5927\uff0c\u5219\u5f02\u6216\u7ed3\u679c\u4e00\u5b9a $>k$\uff0c\u5b9a\u4e49 $f(x)$ \u8868\u793a\u5f53 $x$ \u4e0d\u542b\u6709\u524d\u5bfc $0$ \u7684\u60c5\u51b5\u4e0b\u4e8c\u8fdb\u5236\u4f4d\u6570\uff0c\u8003\u8651\u5c06\u6240\u6709\u6570\uff0c\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u672b\u5c3e\u53bb\u6389 $f(k)$ \u4f4d\uff0c\u5e76\u6309\u65b0\u7684\u6570\u5206\u7ec4\uff0c\u82e5\u4e24\u4e2a\u6570\u5904\u4e8e\u4e0d\u540c\u7ec4\uff0c\u5219\u5b83\u4eec\u5f02\u6216\u548c\u4e00\u5b9a $>k$\u3002\n\n\u5bf9\u6bcf\u4e00\u7ec4\u5206\u522b\u6c42\u89e3\uff0c\u5bb9\u6613\u53d1\u73b0\u6bcf\u4e00\u7ec4\u6700\u591a\u53ea\u80fd\u9009\u4e0a $2$ \u4e2a\u6570\uff0c\u5982\u679c\u9009 $\\ge 3$ \u4e2a\u6570\uff0c\u5c31\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u6570\uff0c\u5b83\u4eec\u5f02\u6216\u548c $<k$\uff0c\u56e0\u4e3a $k$ \u7684\u6700\u9ad8\u4f4d\u4e0a\u7684\u6570\u5b57\u4e00\u5b9a\u4f1a\u6709 $2$ \u4e2a $0$ \u6216 $2$ \u4e2a $1$\u3002\n\n\u8bbe\u76ee\u524d\u5904\u7406\u7684\u90a3\u4e00\u7ec4\u7684\u6570\u4e3a $b_1,b_2,...,b_m$\uff0c\u5373\u8981\u6c42\u51fa\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u6570\u6ee1\u8db3\u5f02\u6216\u548c $\\ge k$\uff0c\u5373\u6c42\u4e24\u4e2a\u6570\u6700\u5927\u5f02\u6216\u548c\u3002\u5c06\u6570\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\uff0c\u4f9d\u6b21\u63d2\u5165 trie \u4e2d\uff0c\u5e76\u67e5\u8be2\u6700\u5927\u5f02\u6216\u548c\uff0c\u5373\u6bcf\u6b21\u5c3d\u91cf\u5f80\u81ea\u5df1\u76f8\u53cd\u7684\u65b9\u5411\u8d70\u3002\n\n\u6ce8\u610f\u6bcf\u4e00\u7ec4\u6c42\u89e3\u5b8c\u6210\u540e\u8981\u6e05\u7a7a trie\uff0c\u4e0d\u80fd memset\uff0c\u8981\u4e00\u4e2a\u4e00\u4e2a\u5220\u9664\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log A)$\u3002",
        "postTime": 1653535422,
        "uid": 302837,
        "name": "znstz2018",
        "ccfLevel": 7,
        "title": "CF1625D \u9898\u89e3"
    }
]