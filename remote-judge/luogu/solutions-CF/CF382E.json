[
    {
        "content": "\u9996\u5148\uff0c\u6811\u7684\u6700\u5927\u5339\u914d\u505a\u6cd5\u662f\u8d2a\u5fc3\u5220\u53f6\u5b50\uff0c\u7136\u540e\u4ece\u4e0b\u5f80\u4e0a\u53bb\u505a\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u72b6\u6001 $dp_{i,j,0/1}$ \u8868\u793a $i$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6709 $j$ \u4e2a\u5339\u914d\uff0c\u6839\u662f\u5426\u88ab\u5339\u914d\u7684\u65b9\u6848\u6811\u3002\n\n\u6ce8\u610f\u8fd9\u4e2a\u540c\u6784\u7684\u5b9a\u4e49\u662f\u76f8\u8fde\u8282\u70b9\u7684\u96c6\u5408\u76f8\u540c\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u94a6\u5b9a\u5de6\u513f\u5b50\u7684 $siz$ \u6bd4\u53f3\u513f\u5b50\u7684\u5c0f\uff0c\u7279\u522b\u7684\uff0c\u5982\u679c\u5de6\u53f3\u513f\u5b50 $siz$ \u76f8\u7b49\u7684\u8bdd\u8981 $\\div 2$ \u3002\n\n\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e\u4e00\u4e2a\u513f\u5b50\u7684 $siz$ \u548c\u5339\u914d\u6570\uff0c\u53e6\u4e00\u4e2a\u513f\u5b50\u7684\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u4e2a\u513f\u5b50\u6765\u7b97\u51fa\u6765\uff0c\u7531\u4e8e\u662f\u5e26\u6807\u53f7\u7684\uff0c\u6bcf\u6b21\u8f6c\u79fb\u7684\u65f6\u5019\u8981\u4e58\u4e0a $\\binom{sizl+sizr}{sizl}*(sizl+sizr+1)$ \uff08\u9009\u4e00\u4e2a\u505a\u6839\uff0c\u9009 $sizl$ \u4e2a\u505a\u5de6\u5b50\u6811\uff09\u3001\n\n\u7531\u4e8e\u9898\u76ee\u89c4\u5b9a\u4e86 $1$ \u662f\u6839\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u8981 $\\div n$ \u3002\n\n\u4ee3\u7801\uff08\u7528\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u8fd8\u633a\u597d\u5199\u7684\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define int long long\n#define YES puts(\"YES\")\n#define NO puts(\"NO\")\n#define Yes puts(\"Yes\")\n#define No puts(\"No\")\n#define edl puts(\"\")\n#define mc cerr<<\"qwq\\n\"\n#define error goto gg\n#define def gg:\n#define rd(x) x=read()\n#define opl(x) printf(\"%lld\",x)\n#define opls(x) printf(\"%lld \",x)\n#define opd(x) printf(\"%d\",x)\n#define opds(x) printf(\"%d \",x)\n#define ver(x) for(int i=head[x];i;i=nxt[i])\n#define up(i,x,y) for(int i=x,i##end=y;i<=i##end;++i)\n#define pu(i,x,y) for(int i=x,i##end=y;i>=i##end;--i)\n#define ft(x) for(int i=head[x];i;i=nxt[i])\n#define upn up(i,1,n)\n#define upm up(j,1,m)\n#define pun pu(i,n,1)\n#define pum pu(j,m,1)\n#define up_(x) up(i,1,x)\n#define pu_(x) pu(j,x,1)\n#define ep emplace_back\n#define fp for(auto to:\n#define pf )\n#define pii pair<int,int>\n#define pis pair<int,string>\n#define psi pair<string,int>\n#define mkp make_pair\n#define fi first\n#define se second\n#define mii map<int,int>\n#define mis map<int,string>\n#define msi map<string,int>\n#define mvi map<vector<int>,int>\n#define miv map<int,vector<int>>\n#define rdn rd(n)\n#define rdm rd(m)\n#define rdk rd(k)\n#define pb push_back\nusing namespace std;\nint n, m, k;\nint read()\n{\n    int s = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        s = s * 10 + ch - '0';\n        ch = getchar();\n    }\n    return s * f;\n}\n\n#define inf 1000000000000000000ll\nll Max(ll a=-inf,ll b=-inf,ll c=-inf,ll d=-inf,ll e=-inf,ll f=-inf,ll g=-inf,ll h=-inf)\n{\n\treturn max(max(max(a,b),max(c,d)),max(max(e,f),max(g,h)));\n}\nll Min(ll a=inf,ll b=inf,ll c=inf,ll d=inf,ll e=inf,ll f=inf,ll g=inf,ll h=inf)\n{\n\treturn min(min(min(a,b),min(c,d)),min(min(e,f),min(g,h)));\n}\n#undef inf\nvoid chkmin(int &x,int y)\n{\n\tif(x>y)x=y;\n}\nvoid chkmax(int &x,int y)\n{\n\tif(x<y)x=y;\n}\nconst int mod=1e9+7;\nconst int maxn=2020;\nint fac[maxn+10],ifac[maxn+10];\nint qpow(int a,int b=mod-2)\n{\n    int ans=1;\n    while(b)\n    {\n        if(b&1)ans=ans*a%mod;\n        a=a*a%mod;\n        b>>=1;\n    }\n    return ans;\n}\nint inv(int k)\n{\n    return qpow(k,mod-2);\n}\nvoid pre()\n{\n    fac[0]=1;\n    for(int i=1;i<=maxn;++i)\n        fac[i]=fac[i-1]*i%mod;\n    ifac[maxn]=inv(fac[maxn]);\n    for (int i=maxn-1;i>=0;--i)\n        ifac[i]=ifac[i+1]*(i+1)%mod;\n}\nint C(int nn,int mm)\n{\n    if(nn<0||nn-mm<0)return 0;\n    return fac[nn]*ifac[mm]%mod*ifac[nn-mm]%mod;\n}\nint invC(int nn,int mm)\n{\n    if(nn<0||nn-mm<0)return 0;\n    return ifac[nn]*fac[mm]%mod*fac[nn-mm]%mod;\n}\nint dp[55][55][2];int i2=qpow(2);\nint dfs(int n,int m,int fl)\n{\n\t\n\tif(n==0&&m==0&&fl==1)return 1;\n\telse if(n==0)return 0;\n\tif(n==1)\n\t{\n\t\tif(m==0&&fl==0)return 1;\n\t\telse return 0;\n\t}\n\tif(~dp[n][m][fl])return dp[n][m][fl];\n\tint ans=0;\n\tup(ln,0,n-1)\n\t{\n\t\tint rn=n-ln-1;\n\t\tif(ln>rn)break;\n\t\tup(lm,0,ln/2)\n\t\t{\n\t\t\tint rm=m-lm-1;\n\t\t\tup(lf,0,1)\n\t\t\t{\n\t\t\t\tup(rf,0,1)\n\t\t\t\t{\n\t\t\t\t\tint ff=lf&rf;\n\t\t\t\t\tff=1-ff;\n\t\t\t\t\tif(lm+rm+ff!=m)continue;\n\t\t\t\t\tif(ff!=fl)continue;\n\t\t\t\t\tint val=dfs(ln,lm,lf)*dfs(rn,rm,rf)%mod*C(ln+rn,rn)%mod*(ln+rn+1)%mod;\n\t\t\t\t\tif(ln==rn)val*=i2,val%=mod;\n\t\t\t\t\tans+=val;ans%=mod;\n\t\t\t\t}\n\t\t\t}\n\t\t\trm=m-lm;\n\t\t\tif(rm<0)continue;\n\t\t\tup(lf,0,1)\n\t\t\t{\n\t\t\t\tup(rf,0,1)\n\t\t\t\t{\n\t\t\t\t\tint ff=lf&rf;\n\t\t\t\t\tff=1-ff;\n\t\t\t\t\tif(lm+rm+ff!=m)continue;\n\t\t\t\t\tif(ff!=fl)continue;\n\t\t\t\t\tint val=dfs(ln,lm,lf)*dfs(rn,rm,rf)%mod*C(ln+rn,rn)%mod*(ln+rn+1)%mod;\n\t\t\t\t\tif(ln==rn)val*=i2,val%=mod;\n\t\t\t\t\tans+=val;ans%=mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdp[n][m][fl]=ans;\n\treturn ans;\n}\nsigned main()\n{\n\tpre();\n\tint T=1;\n\twhile(T--)\n\t{\n\t\trdn;rdk;\n\t\tmemset(dp,-1,sizeof(dp));\n\t\tint val1=dfs(n,k,1);\n\t\tint val0=dfs(n,k,0);\n\t\tint w=val0+val1;w%=mod;w*=qpow(n);w%=mod;\n\t\tcout<<w;\n\t}\n}\n```\n",
        "postTime": 1649041181,
        "uid": 154101,
        "name": "fily",
        "ccfLevel": 0,
        "title": "testqwq"
    },
    {
        "content": "\u9996\u5148\u6709\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff0c\u5728\u6811\u4e0a\u81ea\u5e95\u5411\u4e0a\u8d2a\u5fc3\u7684\u80fd\u5339\u914d\u5c31\u5339\u914d\u4e00\u5b9a\u4f1a\u641e\u51fa\u6765\u6700\u5927\u5339\u914d\u3002\n\n\u90a3\u8fd9\u9898\u7684$dp$\u5c31\u6bd4\u8f83\u663e\u7136\u4e86\uff0c$dp[i][j][0/1]$\u8868\u793a$i$\u4e2a\u70b9\u4ee51\u53f7\u70b9\u4e3a\u6839\uff0c\u6700\u5927\u5339\u914d\u662f$j$\uff0c\u6839\u662f\u5426\u5339\u914d\u8fc7\u7684\u65b9\u6848\u6570\u3002\n\n\u8f6c\u79fb\u7684\u65f6\u5019\u6211\u4eec\u679a\u4e3e\u5de6\u53f3\u513f\u5b50\u7684\u5927\u5c0f\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u513f\u5b50\u6ca1\u5339\u914d\u8fc7\u5c31\u8d2a\u5fc3\u7684\u5339\u914d\u4e0a\uff0c\u53e6\u5916\u8fd8\u8981\u4e58\u4e0a\u513f\u5b50\u7684size\uff0c\u56e0\u4e3a\u513f\u5b50\u7684\u6839\u53ef\u4ee5\u662f\u4efb\u610f\u7684\uff0c\u518d\u4e58\u4e0a\u7ec4\u5408\u6570\u5373\u53ef\u8f6c\u79fb\u3002$O(n^4)$\u3002\n\n\u53e6\u5916\u8fd9\u9898\u7684\u201c\u4e0d\u540c\u201d\u662f\u6307\u7684\u4e00\u4e2a\u70b9\u8fde\u5411\u7684\u70b9\u4e0d\u540c\uff0c\u6240\u4ee5\u4e0d\u80fd\u6709\u5de6\u53f3\u513f\u5b50\u4ea4\u6362\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u94a6\u5b9a\u5de6\u513f\u5b50\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc7\u53f3\u513f\u5b50\u7684\u5927\u5c0f\uff0c\u800c\u4e14\u8fd8\u8981\u5728\u4e8c\u8005\u76f8\u7b49\u7684\u65f6\u5019\u9664\u4e2a2\u53bb\u6389\u4ea4\u6362\u7684\u60c5\u51b5\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define ll long long\n#define p 1000000007\nusing namespace std;\nnamespace ywy {\n\tll dp[65][65][2], c[55][55];\n\tinline ll mi(int a, int b) {\n\t    ll ans = 1, tmp = a;\n\t    while (b) {\n\t        if (b & 1)\n\t            ans = (ans * tmp) % p;\n\t        tmp = (tmp * tmp) % p;\n\t        b >>= 1;\n\t    }\n\t    return (ans);\n\t}\n\tvoid ywymain() {\n\t    int n, k;\n\t    cin >> n >> k;\n\t    dp[1][0][0] = 1;\n\t    c[0][0] = 1;\n\t    for (register int i = 1; i <= n; i++) {\n\t        c[i][0] = 1;\n\t        for (register int j = 1; j <= i; j++) c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % p;\n\t    }\n\t    ll inv2 = mi(2, p - 2);\n\t    for (register int i = 2; i <= n; i++) {\n\t        for (register int j = 1; j < i - 1; j++) {\n\t            if (j > i - 1 - j)\n\t                break;\n\t            for (register int a = 0; a < j && a <= k; a++) {\n\t                if (!dp[j][a][0] && !dp[j][a][1])\n\t                    continue;\n\t                for (register int b = 0; b < i - 1 - j && b <= k; b++) {\n\t                    if (!dp[i - 1 - j][b][0] && !dp[i - 1 - j][b][1])\n\t                        continue;\n\t                    ll cjr = (dp[j][a][0] * dp[i - 1 - j][b][0]) % p;\n\t                    cjr = (cjr * j) % p;\n\t                    cjr = cjr * (i - 1 - j) % p;\n\t                    cjr = (cjr * c[i - 1][j]) % p;\n\t                    if (j == i - 1 - j)\n\t                        cjr = (cjr * inv2) % p;\n\t                    dp[i][a + b + 1][1] = (dp[i][a + b + 1][1] + cjr) % p;\n\t                    cjr = (dp[j][a][1] * dp[i - 1 - j][b][0]) % p;\n\t                    cjr = (cjr * j) % p;\n\t                    cjr = cjr * (i - 1 - j) % p;\n\t                    cjr = (cjr * c[i - 1][j]) % p;\n\t                    if (j == i - 1 - j)\n\t                        cjr = (cjr * inv2) % p;\n\t                    dp[i][a + b + 1][1] = (dp[i][a + b + 1][1] + cjr) % p;\n\t                    cjr = (dp[j][a][0] * dp[i - 1 - j][b][1]) % p;\n\t                    cjr = (cjr * j) % p;\n\t                    cjr = cjr * (i - 1 - j) % p;\n\t                    cjr = (cjr * c[i - 1][j]) % p;\n\t                    if (j == i - 1 - j)\n\t                        cjr = (cjr * inv2) % p;\n\t                    dp[i][a + b + 1][1] = (dp[i][a + b + 1][1] + cjr) % p;\n\t                    cjr = (dp[j][a][1] * dp[i - 1 - j][b][1]) % p;\n\t                    cjr = (cjr * j) % p;\n\t                    cjr = cjr * (i - 1 - j) % p;\n\t                    cjr = (cjr * c[i - 1][j]) % p;\n\t                    if (j == i - 1 - j)\n\t                        cjr = (cjr * inv2) % p;\n\t                    dp[i][a + b][0] = (dp[i][a + b][0] + cjr) % p;\n\t                }\n\t            }\n\t        }\n\t        for (register int j = 0; j < i - 1; j++) {\n\t            dp[i][j + 1][1] = (dp[i][j + 1][1] + dp[i - 1][j][0] * (i - 1)) % p;\n\t            dp[i][j][0] = (dp[i][j][0] + dp[i - 1][j][1] * (i - 1)) % p;\n\t        }\n\t    }\n\t    cout << (dp[n][k][0] + dp[n][k][1]) % p << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1558094034,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF382E \u3010Ksenia and Combinatorics\u3011"
    }
]