[
    {
        "content": "[CF838A](/problem/CF838A)\n\n\u76f4\u63a5\u679a\u4e3e $k$ \u5373\u53ef\u3002\n\n\u5229\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u8bb0\u5f55\u8303\u56f4\u5185 $1$ \u7684\u6570\u91cf\u3002\n\n$n, m$ \u540c\u9636\uff0c\u603b\u8fd0\u7b97\u6b21\u6570\u7ea6\u4e3a\n\n$$\\sum_{i = 1}^n \\frac{n^2}{i^2} < \\sum_{s = 1}^{n^2} \\frac{n^2}i = n^2 \\log n.$$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n^2 \\log n)$\uff0c\u4e0d\u592a\u7a33\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u82e5 $d | k \\land 1 < d < k$\uff0c\u5219 $d$ \u5fc5\u7136\u4e0d\u52a3\u4e8e $k$\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5757\u5185\u90fd\u6709\u663e\u7136\u66f4\u7ec6\u81f4\u7684\u5207\u6362\u65b9\u5f0f\u3002\u6545 $k$ \u9009\u8d28\u6570\u5373\u53ef\u3002\n\n$n$ \u4ee5\u5185\u7684\u8d28\u6570\u5bc6\u5ea6\u7ea6\u4e3a $\\frac 1 {\\log n}$\uff0c\u6545\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n^2)$\u3002\n\nCode\uff1a\n\n```cpp\n# include <cctype>\n# include <cstdio>\n\nnamespace Main {\n    namespace Source {\n        typedef short unsigned int hu;\n        typedef unsigned int uint;\n        static const uint UINT_MAX(0xffffFFFFu);\n        static inline char read() { char t; while (isspace(t = getchar())); return t; }\n        static inline const uint min(const uint a, const uint b) { return b < a ? b : a; }\n        static inline const void amin(uint& a, const uint b) { a = min(a, b); }\n        static inline const bool is_prime(const hu x) {\n            if (x < 2) return false;\n            for (hu i(2); i < x; ++i) if (not(x % i)) return false;\n            return true;\n        }\n    }\n    using namespace Source;\n    enum { N = 2500, M = 2500 };\n    static hu n, m;\n    static hu a[N * 2][M * 2];\n    static uint s[N * 2][M * 2];\n    static uint ans(UINT_MAX);\n    static inline const uint nt(const hu k, const hu x, const hu y) {\n        const uint t(s[x][y] + s[x - k][y - k] - s[x - k][y] - s[x][y - k]);\n        return min(t, k * k - t);\n    }\n    static inline const uint nt(const hu k) {\n        uint r(0);\n        for (hu i(k); i - k < n; i += k)\n            for (hu j(k); j - k < m; j += k)\n                r += nt(k, i, j);\n        return r;\n    }\n    static inline const void main() {\n        scanf(\"%hu%hu\", &n, &m);\n        for (hu i(1); i <= n; ++i)\n            for (hu j(1); j <= m; ++j)\n                a[i][j] = read() - '0';\n        for (hu i(1); i < n * 2 or i < m * 2; ++i)\n            for (hu j(1); j < m * 2 or j < n * 2; ++j)\n                s[i][j] = s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1] + a[i][j];\n        for (hu i(2); i <= n or i <= m; ++i) if (is_prime(i)) amin(ans, nt(i));\n        // printf(\"%u\\n\", nt(2));\n        printf(\"%u\\n\", ans);\n    }\n}\n\nsigned int main() { Main::main(); return 0; }\n```",
        "postTime": 1611647961,
        "uid": 236807,
        "name": "Mitama",
        "ccfLevel": 9,
        "title": "[Solution] CF838A"
    }
]