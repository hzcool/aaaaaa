[
    {
        "content": "~~\u867d\u7136\u505a\u6cd5\u5f88\u70c2\u3002~~\n\n## \u6b63\u6587\n\n### \u8f6c\u5316\n\n\u5148\u628a\u9898\u76ee\u8f6c\u5316\u4e00\u4e0b\uff0c\u4e24\u4e2a\u70b9\u4e24\u4e24\u4e92\u8fbe\u8bc1\u660e\u5176\u5fc5\u5728\u540c\u4e00\u5f3a\u8fde\u901a\u5757\u5206\u91cf\u4e2d\u3002\n\n\u6240\u4ee5\u53d8\u6210\u4e86:\n\n$$\n\\begin{aligned}\n \\min&\\sum_{i=1}^nk_i\\\\\n \\text{s.t.}&\\sum_{i=1}^n\\binom{k_i}2=p\n\\end{aligned}\n$$\n\n$k$ \u6700\u5927\u53d6\u503c\u4e3a $\\sqrt{2n}$ \uff0c\u6240\u4ee5\u5b8c\u5168\u80cc\u5305\u5373\u53ef:\n\n$$dp_j=\\min(dp_j,dp_{j-i \\times (i-1)}+i)$$\n\n\u5728\u8f6c\u79fb\u65f6\uff0c\u8bb0\u5f55\u8f6c\u79fb\u8fc7\u6765\u7684 $i$ \uff0c\u6700\u540e\u7b97\u51fa\u5355\u5411\u8282\u70b9\u5bf9\u6570\u3002\n\n\u4e0d\u8fc7\uff0c\u697c\u4e0a[Wilson_Inversion](https://www.luogu.com.cn/user/576737)\u7684\u505a\u6cd5\u66f4\u597d\uff0c\u62ff\u6240\u6709\u70b9\u5bf9\u6570\u51cf\u53bb $p$ \uff0c\u5373\u53ef\u3002\n\n### code\n```cpp\n/* let life be like summer flowers\t*/\n/* by wind_seeker\t\t\t\t\t*/\n/* 2023-01-15 08:59\t\t\t\t\t*/\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=2e5+1e3;\n\ninline int read(){\n\tint res=0,f=1;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) res=(res<<3)+(res<<1)+(c^48);\n\treturn res*f;\n}\n\nint n,dp[N],from[N],a[N],cnt;\n\nvoid solve(){\n\tint Max=(sqrt(n)+1)*2;\n\tfor(int i=1;i<=n;i++) dp[i]=N;dp[0]=0;\n\tfor(int i=2;i<=Max;i++)\n\t\tfor(int j=i*(i-1)/2;j<=n;j++){\n\t\t\tif(dp[j-(i*(i-1)/2)]+i<dp[j]){\n\t\t\t\tfrom[j]=i;\n\t\t\t\tdp[j]=dp[j-(i*(i-1))/2]+i;\n\t\t\t}\n\t\t}\n\tprintf(\"%lld \",dp[n]);\n\tint p=n;\n\twhile(p){\n\t\ta[++cnt]=from[p];\n\t\tp-=from[p]*(from[p]-1)/2;\n\t}\n\tint res=0,ans=0;\n\tfor(int i=cnt;i>=1;i--){\n\t\tres+=a[i];\n\t\tans+=a[i]*(dp[n]-res);\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n\nsigned main(){\n\tn=read();\n\tsolve();\n\treturn 0;\n}\n\n```",
        "postTime": 1673750707,
        "uid": 287545,
        "name": "wind_seeker",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1763E Node Pairs"
    },
    {
        "content": "\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u53ea\u6709\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u70b9\u624d\u80fd\u4e24\u4e24\u5230\u8fbe\uff0c\u6240\u4ee5\u76f4\u63a5\u5229\u7528\u80cc\u5305\uff0c$dp_{i}=\\min(dp_{i-\\frac{s\\times (s-1)}{2}}+s)$\uff0c\u5c31\u80fd\u89e3\u51b3\u7b2c\u4e00\u95ee\u3002\n\n\u7b2c\u4e8c\u95ee\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u628a\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u6392\u5217\u6210\u94fe\uff0c\u5e76\u6309\u7167\u62d3\u6251\u5e8f\u7ed9\u70b9\u8fdb\u884c\u7f16\u53f7\uff0c\u53ef\u4ee5\u8ba9\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u7684\u70b9\u5bf9\u90fd\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u7b54\u6848\u662f $\\binom{dp_p}{2}-p$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nnamespace Wilson_Inversion{\n\nvoid main();\n\n}\n\nint main(){\n\tWilson_Inversion::main();\n\treturn 0;\n}\n\nnamespace Wilson_Inversion{\n\nint n,dp[200010];\n\nvoid main(){\n\tscanf(\"%d\",&n);\n\tfor(int i(1);i<=n;++i){\n\t\tdp[i]=0x3f3f3f3f;\n\t\tfor(int j(2);j*(j-1)/2<=i;++j){\n\t\t\tdp[i]=min(dp[i],dp[i-j*(j-1)/2]+j);\n\t\t}\n\t}\n\tprintf(\"%d %lld\\n\",dp[n],1ll*dp[n]*(dp[n]-1)/2-n);\n}\n\n}\n```\n",
        "postTime": 1671873419,
        "uid": 576737,
        "name": "Wilson_Inversion",
        "ccfLevel": 7,
        "title": "CF1763E Node Pairs \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u6784\u9020\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6ee1\u8db3\u5176\u4e2d\u6709\u6070\u597d $p$ \u5bf9\u6709\u5e8f\u70b9\u5bf9 $(u,v)$ \u6ee1\u8db3 $u<v$ \u4e14 $u,v$ \u53ef\u76f8\u4e92\u5230\u8fbe\u3002\n\n\u6c42\u51fa\u6784\u9020\u6ee1\u8db3\u6761\u4ef6\u7684\u56fe\u7684\u6700\u5c11\u70b9\u6570\u548c\u5728\u70b9\u6570\u6700\u5c11\u7684\u60c5\u51b5\u4e0b\u5355\u5411\u70b9\u5bf9\u6700\u591a\u7684\u6570\u91cf\u3002\n\n\u5355\u76f8\u70b9\u5bf9\uff1a$(u,v)$ \u6ee1\u8db3 $u$ \u53ef\u4ee5\u5230\u8fbe $v$\uff0c\u4f46 $v$ \u4e0d\u80fd\u5230\u8fbe $u$\u3002\n\n------------\n\n\u7531\u4e8e\u7b2c\u4e8c\u95ee\u4f9d\u8d56\u4e8e\u7b2c\u4e00\u95ee\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u8003\u8651\u7b2c\u4e00\u95ee\u3002\n\n\u9996\u5148\u8d2a\u5fc3\u5730\u60f3\uff0c\u600e\u4e48\u7528\u6700\u5c11\u7684\u70b9\u6570\u6784\u9020\u51fa\u5c3d\u53ef\u80fd\u591a\u7684\u53ef\u4e92\u76f8\u5230\u8fbe\u7684\u70b9\u3002\n\n\u663e\u7136\uff0c\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684\u5f3a\u8fde\u901a\u56fe\u7684\u53ef\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6700\u591a\uff0c\u4e3a $\\dfrac{n(n-1)}{2}$\u3002\n\n\u7531\u4e8e\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u4e00\u5b9a\u4e0d\u4f1a\u6709\u70b9\u5bf9\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u56fe\u4e00\u5b9a\u662f\u7531\u82e5\u5e72\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6784\u6210\u7684\uff0c\u4e14 $p$ \u7b49\u4e8e\u5404\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u8d21\u732e\u7684\u70b9\u5bf9\u6570\u4e4b\u548c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u7684\u662f\uff1a\u4ece\u5404\u79cd\u5927\u5c0f\u5f3a\u8fde\u901a\u56fe\u4e2d\u9009\u82e5\u5e72\u79cd\uff0c\u6ee1\u8db3\u5b83\u4eec\u7684\u70b9\u5bf9\u6570\u4e4b\u548c\u4e3a $p$\uff0c\u4e14\u8282\u70b9\u6570\u6700\u5c11\uff0c\u6bcf\u79cd\u5927\u5c0f\u53ef\u4ee5\u9009\u4efb\u610f\u591a\u6b21\u3002\n\n\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u5b8c\u5168\u80cc\u5305\uff0c\u53ef\u4ee5\u53d1\u73b0\u5355\u4e2a\u5f3a\u8fde\u901a\u56fe\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 $633$ \u5de6\u53f3\uff0c\u6240\u4ee5\u80cc\u5305\u590d\u6742\u5ea6\u4e3a $O(|G|p)$\uff0c\u5176\u4e2d $|G|$ \u4e3a\u5355\u4e2a\u5f3a\u8fde\u901a\u56fe\u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u7136\u540e\u8003\u8651\u7b2c\u4e8c\u95ee\u5c31\u7b80\u5355\u4e86\uff0c\u663e\u7136\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u90e8\u4e0d\u4f1a\u5bf9\u8be5\u95ee\u505a\u8d21\u732e\uff0c\u800c\u4e24\u4e2a\u5927\u5c0f\u4e3a $a,b$ \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8d21\u732e\u4e3a $ab$\u3002\u76f4\u63a5\u7b97\u5373\u53ef\u3002\n\n## CODE\n\n```cpp\n#include<bits/stdc++.h>\n#define N 110\n#define LL long long\n#define ULL unsigned long long\n#define DB double\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define per(i,a,b) for(int i=a;i>=b;i--)\n#define INF 0x3f3f3f3f\n#define mod 1000000007\n#define pir pair<int,int>\n#define mp(i,j) make_pair(i,j)\n#define fi first\n#define se second\nusing namespace std;\ntemplate <typename T> inline void read(T &a)\n{\n\ta=0;T w=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){a=(a<<3)+(a<<1)+(ch^48);ch=getchar();}\n\ta*=w;\n}\ntemplate <typename T,typename ...Args> inline\nvoid read(T &x,Args &...args){read(x);read(args...);}\nint n,sum,ans,f[200010],fr[200010];\nvector<int> b;\ninline int calc(int x){return (x*(x-1))>>1;}\nsigned main()\n{\n\tread(n);\n\tmemset(f,0x3f,sizeof(f));\n\tf[0]=0;\n\trep(i,2,633)\n\t{\n\t\tint w=calc(i);\n\t\trep(j,w,n) if(f[j-w]+i<f[j]) f[j]=f[j-w]+i,fr[j]=i;\n\t}\n\tfor(int i=n;i;i-=calc(fr[i])) b.push_back(fr[i]);\n\tfor(int x:b)\n\t{\n\t\tans+=sum*x;sum+=x;\n\t}\n\tprintf(\"%d %d\\n\",f[n],ans);\n\treturn 0;\n}\n```",
        "postTime": 1671783003,
        "uid": 251324,
        "name": "stntn",
        "ccfLevel": 0,
        "title": "CF1763E Node Pairs \u9898\u89e3"
    }
]