[
    {
        "content": "~~\u6ca1\u770b\u61c2\u9898\u89e3\u53ea\u80fd\u81ea\u5df1\u53e3\u80e1~~\n\n\u8fd9\u79cd\u591a\u4e2a\u533a\u95f4\u90fd\u8981\u6ee1\u8db3\u4e0d\u662f\u5f88\u597d\u5904\u7406\uff0c\u8003\u8651 P6773 \u7684\u5957\u8def\uff0c\u9884\u5904\u7406\u51fa\u6765 $limit_i$ \u8868\u793a\u5305\u542b $i$ \u7684\u533a\u95f4\uff0c\u6700\u524d\u9762\u5230\u54ea\u91cc\uff0c\u8fd9\u6837\u5c31\u5c06 $m$ \u4e2a\u533a\u95f4\u6ee1\u8db3\u6761\u4ef6\u8f6c\u5316\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c$limit_i$ \u5230 $i$ \u4e4b\u95f4\u989c\u8272\u4e0d\u80fd\u6709\u76f8\u540c\u7684\uff0c\u540c\u65f6\uff0c**$limit_i$ \u662f\u968f\u7740 $i$ \u5355\u8c03\u4e0d\u4e0b\u964d\u7684\u3002**\n\n\u4e0d\u96be\u53d1\u73b0\u7b54\u6848\u5408\u6cd5\u7684\u4e00\u4e2a**\u5fc5\u8981**\u6761\u4ef6\uff0c\u5c31\u662f\u5bf9\u4e8e\u4efb\u610f $i$\uff0c$a_{[limit_i,i-1]}$ \u4e0d\u80fd\u6709\u548c $a_i$ \u76f8\u540c\u7684\u989c\u8272\u3002\u800c\u5355\u8c03\u4e0d\u4e0b\u964d\u8fd9\u4e2a\u6027\u8d28\u544a\u8bc9\u6211\u4eec\uff0c\u5bf9\u4e8e $i$ \u7684\u9650\u5236\uff0c\u5b83\u672c\u8eab\u7684 $limit$ \u7684\u9650\u5236\u662f\u4e25\u683c\u4e0d\u52a3\u4e8e $limit_j(j>i)$ \u5bf9 $i$ \u7684\u9650\u5236\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c**\u4e4b\u524d\u8bf4\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u5145\u8981\u7684\u3002**\n\n\u73b0\u5728\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u53d8\u4e3a\u4efb\u610f $i$\uff0c$a_{[limit_i,i-1]}$ \u4e0d\u80fd\u6709\u548c $a_i$ \u76f8\u540c\u7684\u989c\u8272\u3002\u8fd9\u4e2a\u5c31\u5f88\u5957\u8def\u4e86\uff0c\u6bcf\u4e2a\u989c\u8272\u5f00\u4e00\u4e2a `vector`\uff0c\u7ef4\u62a4\u5b83\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u6c42\u51fa\u6765 $[l_i,r_i]$ \u8868\u793a\u5982\u679c $i$ \u6ca1\u88ab\u5b50\u6bb5\u9009\u62e9\uff0c\u90a3\u4e48 $[l_i,r_i]$ \u90fd\u9700\u8981\u88ab\u5b50\u6bb5\u9009\u62e9\uff0c\u4f60\u9700\u8981\u6c42\u6700\u77ed\u5b50\u6bb5\u6ee1\u8db3\u6240\u6709 $i$ \u7684\u9650\u5236\u3002\n\n\u8003\u8651\u53cc\u6307\u9488\u7edf\u8ba1\u7b54\u6848\uff0c\u6bcf\u6b21\u79fb\u52a8\u76f8\u5f53\u4e8e\u662f\u53d6\u6d88/\u52a0\u5165 $i$ \u7684\u9650\u5236\uff0c\u9700\u8981\u67e5\u8be2\u7684\u662f\u5f53\u524d\u533a\u95f4\u662f\u5426\u6ee1\u8db3\u6240\u6709\u9650\u5236\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6240\u6709\u9650\u5236\u7684 $l$ \u7684\u6700\u5c0f\u503c\u548c $r$ \u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u548c\u5f53\u524d\u533a\u95f4\u6bd4\u8f83\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<map>\n#include<set>\n#include<vector>\nusing namespace std;\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\nconst int N=2e5+5;\nstruct tree\n{\n\tint l,r,minn,maxx;\n}t[N*4];\nint n,L[N],R[N],a[N],limit[N],m;\nvoid pushup(int k)\n{\n\tt[k].minn=min(t[k*2].minn,t[k*2+1].minn);\n\tt[k].maxx=max(t[k*2].maxx,t[k*2+1].maxx);\n}\nvoid build(int k,int l,int r)\n{\n\tt[k].l=l;t[k].r=r;\n\tif(l==r)\n\t{\n\t\tt[k].minn=L[l];\n\t\tt[k].maxx=R[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(k*2,l,mid);\n\tbuild(k*2+1,mid+1,r);\n\tpushup(k);\n}\nvoid change(int k,int x,int v)\n{\n\tif(t[k].l==t[k].r)\n\t{\n\t\tif(v) t[k].minn=n+1,t[k].maxx=0;\n\t\telse t[k].minn=L[x],t[k].maxx=R[x];\n\t\treturn;\n\t}\n\tif(x<=t[k*2].r) change(k*2,x,v);\n\telse change(k*2+1,x,v);\n\tpushup(k);\n}\nmultiset<int> s;\nmap<int,int> mp;\nint tot;\nint getid(int x)\n{\n\tif(!mp[x]) mp[x]=++tot;\n\treturn mp[x];\n}\nvector<int> v[N],v2[N];\nbool check(int l,int r)\n{\n//\tcout<<\"chk\"<<l<<' '<<r<<\" \"<<t[1].minn<<\" \"<<t[1].maxx<<endl; \n\treturn l<=t[1].minn&&t[1].maxx<=r;\n}\nvoid solve()\n{\n\ttot=0;\n\tmp.clear();\n\ts.clear();\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)\n\tv[i].clear(),v2[i].clear();\n\tfor(int i=1;i<=n;i++)\n\ta[i]=read(),a[i]=getid(a[i]),v2[a[i]].push_back(i);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tv[x].push_back(x);\n\t\tv[y+1].push_back(-x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=0;j<v[i].size();j++)\n\t\tif(v[i][j]>0) s.insert(v[i][j]);\n\t\telse s.erase(s.find(-v[i][j]));\n\t\tif(s.empty()) limit[i]=0,L[i]=n+1,R[i]=0;\n\t\telse limit[i]=(*s.begin());\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(limit[i]==0)\n\t\t{\n//\t\t\t cout<<i<<' '<<L[i]<<\" \"<<R[i]<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(limit[i]==i)\n\t\t{\n\t\t\tL[i]=n+1;\n\t\t\tR[i]=0;\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l=0,r=v2[a[i]].size()-1;\n\t\t\tL[i]=n+1,R[i]=0;\n\t\t\twhile(l<=r)\n\t\t\t{\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tif(v2[a[i]][mid]>=limit[i]) L[i]=v2[a[i]][mid],r=mid-1;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t\tif(L[i]>=i) L[i]=n+1;\n\t\t\tl=0,r=v2[a[i]].size()-1;\n\t\t\twhile(l<=r)\n\t\t\t{\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tif(v2[a[i]][mid]<i) R[i]=v2[a[i]][mid],l=mid+1;\n\t\t\t\telse r=mid-1;\n\t\t\t}\n\t\t\tif(R[i]<limit[i]) R[i]=0;\n\t\t}\n//\t\t cout<<i<<' '<<L[i]<<\" \"<<R[i]<<endl;\n\t}\n\tbuild(1,1,n);\n\tint ans=n;\n\tfor(int l=1,r=0;l<=n;l++)\n\t{\n\t\twhile(r<n&&!check(l,r)) r++,change(1,r,1);\n\t\tif(check(l,r)) ans=min(ans,max(0,r-l+1));\n//\t\t cout<<l<<' '<<r<<endl;\n\t\tchange(1,l,0);\n\t}\n\tcout<<ans<<endl;\n}\nint main()\n{\n//\tfreopen(\"a.in\",\"r\",stdin);\n//\tfreopen(\"a.out\",\"w\",stdout); \n\tint T=read();\n\twhile(T--) solve();\n \treturn 0;\n}\n\n/*\n1 5 2\n0 5 4 9 4 \n1 5\n3 4\nlgsblgsb\n*/\n```\n",
        "postTime": 1653703165,
        "uid": 196899,
        "name": "lndjy",
        "ccfLevel": 9,
        "title": "CF1684F \u9898\u89e3"
    },
    {
        "content": "\u663e\u7136\uff0c\u5bf9\u5b50\u6bb5\u8fdb\u884c\u64cd\u4f5c\u53ef\u4ee5\u89c6\u4e3a\u79fb\u9664\u4e86\u8be5\u5b50\u6bb5\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5b50\u6bb5\uff0c\u7ef4\u62a4\u5220\u6389\u8be5\u5b50\u6bb5\u65f6\uff0c\u5e8f\u5217\u5269\u4e0b\u90e8\u5206\u4e2d\u4f1a\u88ab\u7ed9\u5b9a\u533a\u95f4\u8986\u76d6\u5230\u7684\u76f8\u7b49\u7684\u5bf9\u6570\uff08\u65e0\u5e8f\uff09\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u77e5 $[l, r]$ \u65f6\u7684\u7ed3\u679c\uff1a\n\n- \u5982\u679c\u8981\u6c42 $[l, r + 1]$ \u7684\u7ed3\u679c\uff0c\u5c31\u662f\u51cf\u53bb $[1, l)$ \u548c $(r + 1, n]$ \u4e2d\u80fd\u4ea7\u751f\u8d21\u732e\uff08\u4e0e $r + 1$ \u76f8\u7b49\u4e14\u81f3\u5c11\u5171\u540c\u88ab\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\uff09\u7684\u4f4d\u7f6e\u6570\n\n- \u5982\u679c\u8981\u6c42 $[l + 1, r]$ \u7684\u7ed3\u679c\uff0c\u5c31\u662f\u52a0\u4e0a $[1, l)$ \u548c $(r, n]$ \u4e2d\u80fd\u4ea7\u751f\u8d21\u732e\u7684\u4f4d\u7f6e\u6570\n\n\u8003\u8651 $\\mathit{minL}_{i}, \\mathit{maxR}_{i}$ \u8868\u793a $i$ \u4f4d\u7f6e\u6700\u5de6\u3001\u6700\u53f3\u7684\u80fd\u5171\u540c\u88ab\u81f3\u5c11\u4e00\u4e2a\u7ed9\u5b9a\u533a\u95f4\u8986\u76d6\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e24\u4e2a\u6570\u7ec4\u90fd\u53ef\u4ee5\u7528\u7b80\u5355\u7684 \u524d\u7f00/\u540e\u7f00 \u6700\u5927/\u6700\u5c0f\u503c \u6c42\u51fa\u3002\n\n\u518d\u7ef4\u62a4\u82e5\u5e72\u4e2a\u6570\u7ec4\u6309\u987a\u5e8f\u5b58\u653e\u67d0\u4e2a\u503c\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u76f4\u63a5\u5728\u6570\u7ec4\u4e0a\u4e8c\u5206\u5c31\u53ef\u4ee5\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u5728\u8981\u6c42\u7684\u533a\u95f4\uff08\u4f8b\u5982\u4e0a\u9762\u7684\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f $\\Big( [1, l) \\cup (r + 1, n] \\Big) \\cap [\\mathit{minL}_{r + 1}, \\mathit{maxR}_{r + 1}]$\uff09\u5185\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u53cc\u6307\u9488\u5566\uff1a\u987a\u5e8f\u679a\u4e3e $r$\uff0c$l$ \u80fd\u5f80\u53f3\u52a8\u5c31\u52a8\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u5e76\u66f4\u65b0\u7b54\u6848\u3002\n\n---\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <map>\n#include <vector>\n\n// v \u4e2d\u5728 [l, r] \u8303\u56f4\u5185\u7684\u5143\u7d20\u4e2a\u6570\nlong count(const std::vector<long> &v, long l, long r) {\n  return l > r ? 0\n               : std::upper_bound(v.begin(), v.end(), r) -\n                     std::lower_bound(v.begin(), v.end(), l);\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(nullptr);\n\n  int t;\n  std::cin >> t;\n  while (t--) {\n    long n, m;\n    std::cin >> n >> m;\n    std::vector<long> a(n), minL(n, n), maxR(n, -1);\n    std::map<long, std::vector<long>> positions;\n    for (long i = 0; i < n; ++i) {\n      std::cin >> a[i];\n      positions[a[i]].push_back(i);\n    }\n    while (m--) {\n      long l, r;\n      std::cin >> l >> r;\n      --l;\n      --r;\n      if (l < minL[r])\n        minL[r] = l;\n      if (r > maxR[l])\n        maxR[l] = r;\n    }\n    for (long i = n - 2; i >= 0; --i)\n      minL[i] = std::min(minL[i], minL[i + 1]);\n    for (long i = 1; i < n; ++i)\n      maxR[i] = std::max(maxR[i], maxR[i - 1]);\n\n    long long s = 0;\n    for (const auto &[v, p] : positions) {\n      for (const auto &pos : p)\n        s += count(p, pos + 1, maxR[pos]);\n    }\n    if (s == 0) {\n      std::cout << \"0\\n\";\n      continue;\n    }\n\n    long l = 0, answer = n;\n    for (long i = 0; i < n; ++i) {\n      s -= count(positions[a[i]], minL[i], l - 1) +\n           count(positions[a[i]], i + 1, maxR[i]);\n      while (l < i && s + count(positions[a[l]], minL[l], l - 1) +\n                              count(positions[a[l]], i + 1, maxR[l]) ==\n                          0)\n        ++l;\n      if (s == 0)\n        answer = std::min(answer, i - l + 1);\n    }\n    std::cout << answer << '\\n';\n  }\n\n  return 0;\n}\n```",
        "postTime": 1654002972,
        "uid": 110634,
        "name": "zhanghengrui",
        "ccfLevel": 9,
        "title": "CF1684F Diverse Segments \u9898\u89e3"
    },
    {
        "content": "vp \u7684\u65f6\u5019\u5199\u4e86\u4e00\u4e2a\u6bd4\u8f83\u611a\u8822\u7684\u505a\u6cd5\u8fc7\u4e86\u3002\n\n\u9996\u5148\u9009\u62e9\u4e00\u4e2a\u533a\u95f4\u4fee\u6539\u7b49\u4ef7\u4e8e\u5220\u6389\u8fd9\u4e2a\u533a\u95f4\u3002\u90a3\u4e48\u8003\u8651\u5b83\u7ed9\u5b9a\u7684 $m$ \u4e2a\u533a\u95f4\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\u3002\u5047\u8bbe\u7ed9\u5b9a\u7684\u67d0\u4e2a\u533a\u95f4\u662f $[l,r]$\uff0c\u90a3\u4e48\u5047\u8bbe\u989c\u8272 $col$ \u5728\u8fd9\u4e2a\u533a\u95f4\u51fa\u73b0 $k$ \u6b21\uff0c\u4e0b\u6807\u662f $c_1,c_2,...,c_k$\u3002\u90a3\u4e48\uff1a\n\n- $0\\le k\\le 1$\uff1a\u6ca1\u7528\u3002\n- $k\\ge 2$\uff1a\u7b54\u6848\u533a\u95f4\u5fc5\u987b\u8981\u8986\u76d6 $c_2,c_3,...,c_{k-1}$\uff0c\u5e76\u4e14\u8981\u8986\u76d6 $c_1$ \u548c $c_k$ \u7684\u81f3\u5c11\u4e00\u4e2a\u3002\n\n\u8981\u662f\u5f97\u5230\u4e86\u6240\u6709 $c$\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u82e5\u5e72\u4e2a\u6761\u4ef6\u5f62\u5f0f\u662f\u4e0b\u9762\u4e24\u8005\u4e4b\u95f4\u4e00\u4e2a\uff1a\n\n1. \u5fc5\u987b\u8986\u76d6 $x$\u3002\n2. \u5fc5\u987b\u8986\u76d6 $x$ \u548c $y$ \u4e4b\u4e00\u3002\n\n\u5f88\u5bb9\u6613\u8d2a\u5fc3\u53bb\u505a\u3002\u5177\u4f53\u5730\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b54\u6848\u53f3\u7aef\u70b9 $r$\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u6bcf\u6b21\u7528 $r$ \u51cf\u53bb\u5806\u7684\u6700\u5c0f\u503c\u66f4\u65b0\u7b54\u6848\u3002\u8003\u8651\u5bf9\u4e8e\u7b2c $2$ \u7c7b\u6761\u4ef6\uff0c\u6211\u4eec\u5728\u5de6\u7aef\u70b9\u7684\u65f6\u5019\u52a0\u5165\uff0c\u5230\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u5220\u9664\u5de6\u7aef\u70b9\uff0c\u518d\u52a0\u5165\u53f3\u7aef\u70b9\u3002\n\n\u4f46\u662f\u5f97\u5230 $c$ \u9700\u8981\u7684\u590d\u6742\u5ea6\u8fd8\u662f\u4e0d\u5bf9\u3002\u8bb0\u5728 $x$ \u540e\u4e14\u989c\u8272\u4e0e $x$ \u76f8\u540c\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e3a $s(x)$\uff08\u627e\u4e0d\u5230\u5219\u4e3a $n+1$\uff09\u3002\u6211\u4eec\u8003\u8651\u628a\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u626b\u8fc7\u53bb\uff0c\u5bf9\u4e8e\u4f4d\u7f6e $l$\uff0c\u627e\u5230 $l$ \u6240\u5728\u7ed9\u5b9a\u533a\u95f4\u7684\u6700\u5927\u7684 $r$\u3002\u5982\u679c $s(s(x))\\le r$\uff0c\u90a3\u4e48 $s(x)$ \u662f\u4e00\u5b9a\u8981\u8986\u76d6\u7684\u4f4d\u7f6e\uff08\u5373\u6761\u4ef6 $1$\uff09\u3002\u518d\u627e\u5230 $r$ \u524d\u9762\u7b2c\u4e00\u4e2a\u548c $l$ \u540c\u989c\u8272\u7684\u4f4d\u7f6e $p$\uff0c\u90a3\u4e48\u9700\u8981\u6ee1\u8db3\u5fc5\u987b\u8986\u76d6 $l,p$ \u4e4b\u4e00\uff08\u5373\u6761\u4ef6 $2$\uff09\u3002\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u5c31\u6db5\u76d6\u4e86\u6240\u6709\u6761\u4ef6\u3002\n\n\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\u3002\u5b9e\u73b0\u7684\u65f6\u5019\u6709\u70b9\u7ec6\u8282\u3002\n\n\u4e0b\u9762\u662f\u573a\u4e0a\u5199\u7684\u4e11\u964b\u4ee3\u7801\uff0c\u5e76\u4e0d\u5efa\u8bae\u9605\u8bfb\u3002\u6709\u7591\u95ee\u53ef\u4ee5\u79c1\u4fe1\u6211\u3002\n\n```cpp\nconst int N=500005;\nint n,m,sum; \nint a[N],s[N],c[N];\nint p[N],h[N];\nmap<int,int>tmp;\nint col;\nvector<int>b[N];\nint g[N];\nvector<int>f[N];\nvoid add(int x,int y)\n{\n\tsum++;\n\tg[x]++;\n\tf[y].push_back(x);\n}\nmultiset<int>se;\nvoid work()\n{\n\tcin >> n >> m;\n\tsum=0;\n\ttmp.clear();\n\tcol=0;\n\tfor (int i=1;i<=n;i++) cin >> a[i];\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tg[i]=0;\n\t\tf[i].clear();\n\t\tif (tmp[a[i]]==0) tmp[a[i]]=++col;\n\t\ta[i]=tmp[a[i]];\n\t}\n\tfor (int i=1;i<=n;i++) c[i]=0,p[i]=0;\n\tfor (int i=n;i>=1;i--)\n\t{\n\t\tif (p[a[i]]==0) s[i]=n+1;\n\t\telse s[i]=p[a[i]];\n\t\tp[a[i]]=i;\n\t}\n\ts[n+1]=n+1;\n\tfor (int i=1;i<=n;i++) b[i].clear();\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint l,r;\n\t\tcin >> l >> r;\n\t\tb[l].push_back(r);\n\t}\n\tfor (int i=1;i<=n;i++) b[i].push_back(i);\n\tint mx=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j:b[i]) mx=max(mx,j);\n\t\tint u=s[i],v=s[u];\n\t\tif (v<=mx) c[u]=1;\n\t}\n\tint l=n+1,r=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (c[i]==1) r=max(r,i),l=min(l,i);\n\t}\n\tfor (int i=l;i<=r;i++) c[i]=1;\n\t// cout << l << \" \" << r << endl << endl;\n\tmx=0;\n\tfor (int i=1;i<=n;i++) h[i]=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j:b[i])\n\t\t{\n\t\t\twhile (mx<j)\n\t\t\t{\n\t\t\t\tmx++;\n\t\t\t\th[a[mx]]=mx;\n\t\t\t}\n\t\t}\n\t\tif (c[i]) continue;\n\t\tint u=h[a[i]];\n\t\tif (i!=u) add(i,u);\n\t}\n\tif (sum==0)\n\t{\n\t\tif (r==0) cout << 0 << endl;\n\t\telse cout << r-l+1 << endl;\n\t\treturn;\n\t}\n\tif (r!=0) sum+=r-l+1;\n\tint ans=n,uu=0;\n\tse.clear();\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=g[i];j++) se.insert(i),uu++;\n\t\tif (c[i]) se.insert(i),uu++;\n\t\tfor (int j:f[i]) \n\t\t{\n\t\t\tse.erase(se.find(j));\n\t\t\tse.insert(i);\n\t\t}\n\t\tif (uu==sum) ans=min(ans,i-*se.begin()+1);\n\t\t//cout << \"11c \" << *se.begin() << endl;\n\t}\n\tcout << ans << endl;\n}\n\n```\n",
        "postTime": 1659537836,
        "uid": 151475,
        "name": "Little09",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1684F Diverse Segments"
    },
    {
        "content": "vp \u7684\u65f6\u5019 D E \u6446\u70c2\u4e86\u4e00\u4f1a\u513f\uff0c\u7136\u540e\u8fd9\u9898\u5f00\u59cb\u60f3\u5047\u4e86\u5c31\u6ca1\u5199\u5b8c\uff0c\u88ab\u4e00\u8f66\u4eba\u540a\u9524\u4e86\u545c\u545c\u3002\n\n------------\n\n\u8003\u8651\u628a\u4e00\u4e2a\u533a\u95f4\u5408\u6cd5\u8f6c\u6210\u66f4\u53ef\u505a\u7684\u7ea6\u675f\u3002\u8bbe $pre_i$ \u662f\u4e0a\u4e00\u4e2a\u548c $a_i$ \u76f8\u540c\u7684\u4f4d\u7f6e\uff08\u6ca1\u6709\u5219 $pre_i=-1$\uff09\uff0c\u5219\u5b9e\u9645\u4e0a\u5bf9\u4e8e $i\\in [l_j,r_j]$\uff0c\u5e94\u8be5\u6ee1\u8db3 $pre_i\\lt l_j$\u3002\n\n\u4ece\u4e00\u4e2a\u533a\u95f4\u53d8\u6210\u591a\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a $i$\uff0c\u53ea\u8981\u8bbe $lim_i$ \u662f\u6240\u6709\u5305\u542b $i$ \u7684\u533a\u95f4\u4e2d\uff0c$l_j$ \u6700\u5c0f\u7684\u90a3\u4e2a\uff08\u6ca1\u6709\u5219 $lim_i=\\infty$\uff09\uff0c\u5219\u5b9e\u8d28\u4e0a\u9898\u76ee\u7684\u7ea6\u675f\u662f $\\forall i,pre_i\\lt lim_i$\u3002\n\n$pre$ \u548c $lim$ \u7684\u6c42\u89e3\u90fd\u662f\u7ecf\u5178\u95ee\u9898\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u628a\u4e00\u4e2a\u6570\u4efb\u610f\u91cd\u8d4b\u503c\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u4f5c\u5c06\u5b83\u7684 $pre$ \u7f6e\u4e3a $-\\infty$\uff0c\u540c\u65f6\u5c06 $pre_{nxt_i}$ \u7f6e\u4e3a $pre_i$\u3002\n\n\u53e6\u5916\uff0c\u8bbe $f(l)$ \u662f\u6700\u5c0f\u7684 $r$ \u4f7f\u5f97\u5220\u53bb $[l,r]$ \u5408\u6cd5\uff08\u4e0d\u5b58\u5728\u8fd9\u6837\u7684 $r$ \u5219 $f(l)=\\infty$\uff09\u3002\u663e\u7136 $f(l)$ \u5355\u8c03\u4e0d\u964d\u3002\u6362\u8a00\u4e4b\u53ef\u4ee5\u8003\u8651\u53cc\u6307\u9488\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5904\u7406\u52a8\u6001\u5730\u5220\u9664/\u52a0\u5165\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u7ef4\u62a4\u662f\u5426\u6ee1\u8db3\u6240\u6709\u4f4d\u7f6e $pre_i\\lt lim_i$ \u6210\u7acb\u3002\n\n\u8bbe\u4e00\u4e2a\u8ba1\u6570\u5668 $cur$ \u521d\u59cb\u4e3a $0$\u3002\u6bcf\u5f53\u6709\u4e00\u4e2a $pre_i\\ge lim_i$ \u5219 $cur$ \u589e\u52a0 $1$\u3002\u5219\u5b9e\u9645\u4e0a\u662f\u52a8\u6001\u7ef4\u62a4 $cur$\uff0c\u5408\u6cd5\u7b49\u4ef7\u4e8e $cur=0$\u3002\n\n\u79bb\u6563\u5316 $a$ \u540e\u7528 $set$ \u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\u3002\u5c31\u53ef\u4ee5\u52a8\u6001\u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u7684 $pre$ \u548c $nxt$\uff1a\u56e0\u4e3a\u4f60\u6ce8\u610f\u5230\u5220\u9664/\u52a0\u5165\u4e00\u4e2a\u4f4d\u7f6e\u53ea\u4f1a\u4fee\u6539 $O(1)$ \u4e2a\u4f4d\u7f6e\u7684 $pre$ \u548c $nxt$\u3002\u4fee\u6539\u4e00\u4e2a\u4f4d\u7f6e\u540e\u91cd\u65b0\u8ba1\u7b97\u5176\u5bf9 $cur$ \u7684\u8d21\u732e\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nusing namespace std;\nconst int MAXN=2e5+10,INF=1e9;\nint T,n,m,a[MAXN],l[MAXN],r[MAXN];\nint lim[MAXN],pre[MAXN],cur;\nset<int>occ[MAXN];\nint qry_pre(set<int>& s,int val){\n    if(s.empty())return -1;\n    auto it=s.lower_bound(val);if(it==s.begin())return -1;\n    it--;int ret=*it;if(ret<val)return ret;return -1;\n}\nint qry_nxt(set<int>& s,int val){\n    if(s.empty())return -1;\n    auto it=s.upper_bound(val);if(it==s.end())return -1;\n    int ret=*it;if(ret>val)return ret;return -1;\n}\nvoid add_pos(int pos){\n    int pv=qry_pre(occ[a[pos]],pos),nv=qry_nxt(occ[a[pos]],pos);\n    pre[pos]=pv;\n    if(pre[pos]>=lim[pos])cur++;\n    if(nv!=-1){\n        if(pre[nv]>=lim[nv])cur--;\n        pre[nv]=pos;\n        if(pre[nv]>=lim[nv])cur++;\n    }\n    occ[a[pos]].insert(pos);\n}\nvoid del_pos(int pos){\n    int pv=qry_pre(occ[a[pos]],pos),nv=qry_nxt(occ[a[pos]],pos);\n    if(pre[pos]>=lim[pos])cur--;\n    if(nv!=-1){\n        if(pre[nv]>=lim[nv])cur--;\n        pre[nv]=pv;\n        if(pre[nv]>=lim[nv])cur++;\n    }\n    occ[a[pos]].erase(pos);\n}\nnamespace D{\n    int b[MAXN],tot;\n    vector<int>add[MAXN],del[MAXN];\n    void process(){\n        tot=0;rep(i,1,n)b[++tot]=a[i];\n        sort(b+1,b+1+tot);tot=unique(b+1,b+1+tot)-b-1;\n        rep(i,1,n)a[i]=lower_bound(b+1,b+1+tot,a[i])-b;\n\n        rep(i,1,n)add[i].clear(),del[i].clear();\n        rep(i,1,m)add[l[i]].push_back(l[i]),del[r[i]].push_back(l[i]);\n        multiset<int>S;\n        rep(i,1,n){\n            lim[i]=INF;\n            for(auto u:add[i])S.insert(u);\n            if(S.size())lim[i]=*S.begin();\n            for(auto u:del[i])S.erase(S.find(u));\n        }\n\n        cur=0;\n        rep(i,1,tot)occ[i].clear();\n        rep(i,1,n)occ[a[i]].insert(i);\n        rep(i,1,n)pre[i]=qry_pre(occ[a[i]],i);\n        rep(i,1,n)if(pre[i]>=lim[i])cur++;\n        if(!cur){cout<<0<<'\\n';return;}\n        int ans=n;\n        int L=1,R=1;\n        while(L<=n){\n            if(R<L)R=L;\n            while(R<=n && cur){\n                del_pos(R);\n                R++;    \n            }\n            if(!cur)ans=min(ans,R-L);\n            add_pos(L);L++;\n        }\n        cout<<ans<<'\\n';\n    }\n};\nvoid solve(){\n    cin>>n>>m;\n    rep(i,1,n)cin>>a[i];\n    rep(i,1,m)cin>>l[i]>>r[i];\n    D::process();\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>T;\n    while(T--)solve();\n\n    return 0;\n}\n```\n\n",
        "postTime": 1654689966,
        "uid": 685789,
        "name": "Yasuraoka_Hanabi",
        "ccfLevel": 0,
        "title": "\u3010CF1684F\u3011"
    },
    {
        "content": ">\u4e00\u4e2a\u548c\u5b98\u65b9\u9898\u89e3\u4e0d\u5927\u4e00\u6837\u7684\u505a\u6cd5\uff0c\u5e38\u6570\u7565\u5fae\u5927\u4e00\u70b9\u70b9\uff0c\u6545\u4f5c\u6587\u8bb0\u4e4b\u3002\n\n* \u9996\u5148\u7b2c\u4e00\u70b9\uff0c\u6bcf\u4e00\u4e2a\u533a\u95f4\u90fd\u6709\u53ef\u80fd\u4ea7\u751f\u82e5\u5e72\u4e2a\u51b2\u7a81\u5bf9\uff0c\u7136\u540e\u663e\u7136\u6211\u9009\u62e9\u7684\u533a\u95f4\u4e00\u5b9a\u8981\u8986\u76d6\u8fd9\u4e9b\u51b2\u7a81\u3002\u4f46\u662f\u4e0d\u4e00\u5b9a\u8981\u5168\u90e8\u8986\u76d6\uff0c\u5176\u5b9e\u7559\u51fa\u6bcf\u7ec4\u51b2\u7a81\u5bf9\u7684\u6700\u5de6\u8fb9\u6216\u8005\u6700\u53f3\u8fb9\u90fd\u53ef\u4ee5\u3002\u4ee5\u53ca\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u5047\u5982\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\uff0c\u6700\u4f18\u7b54\u6848\u7684\u53f3\u7aef\u70b9\u4e5f\u4f1a\u5411\u53f3\u79fb\u52a8\u3002\n* \u73b0\u5728\u5c31\u662f\u628a\u8fd9\u4e2a\u95ee\u9898\u62c6\u6210\u4e00\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a1\u3001\u6bcf\u4e2a\u533a\u95f4\u6700\u591a\u80fd\u7f29\u591a\u5c11 2\u3001\u679a\u4e3e\u5f00\u5934\u4e4b\u540e\u6700\u5c11\u9700\u8981\u591a\u5c11\u80fd\u591f\u6ee1\u8db3\u9650\u5236\n* \u9996\u5148\u5982\u679c\u786e\u5b9a\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u7b54\u6848\u7684\u53f3\u7aef\u70b9\u5c31\u662f\u6bcf\u4e2a\u533a\u95f4\u7684\u5fc5\u8981\u7684\u53f3\u7aef\u70b9\u53d6 `max` \uff0c\u56e0\u6b64\u5148\u5206\u522b\u8003\u8651\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u7b54\u6848\u7684\u5de6\u7aef\u70b9\u5728\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48\u663e\u7136\u5bf9\u4e8e\u8fd9\u4e2a\u533a\u95f4\u800c\u8a00\u5bf9\u7b54\u6848\u7684\u53f3\u7aef\u70b9\u7684\u9650\u5236\u662f\u4e0d\u4f1a\u53d8\u5f97\uff0c\u53ea\u6709\u5f53\u7b54\u6848\u7684\u5de6\u7aef\u70b9\u8d8a\u8fc7\u4e86\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u65f6\uff0c\u8fd9\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u53f3\u7aef\u70b9\u7684\u9650\u5236\u5c31\u4f1a\u5411\u53f3\u632a\n* \u56e0\u6b64\u53ef\u4ee5\u4ece\u524d\u5f80\u540e\u626b\u4e00\u904d\uff0c\u5f00\u4e00\u4e2a `last[i]` \u8868\u793a\u626b\u5230\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u503c `i` \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u5728\u54ea\uff0c\u7136\u540e\u626b\u5230\u4e00\u4e2a\u6570\u5c31\u7528 `last[a[i]]` \u6765\u66f4\u65b0 `rmost` \uff0c\u7136\u540e\u66f4\u65b0 `last[a[i]]` \uff0c\u7136\u540e\u53ef\u4ee5\u7528\u4e00\u4e2a\u5806\u6765\u8bb0\u7740\u533a\u95f4\uff0c\u8fb9\u626b\u8fb9\u52a0\u533a\u95f4\uff0c\u4e4b\u540e\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u6bcf\u6b21\u68c0\u67e5\u5806\u9876\uff0c\u6bcf\u4e2a\u533a\u95f4\u5728\u51fa\u5806\u7684\u65f6\u5019\u88ab `rmost` \u66f4\u65b0\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8dd1\u51fa\u6bcf\u4e2a\u533a\u95f4\u5728\u7b54\u6848\u5de6\u7aef\u70b9\u6bd4\u81ea\u8eab\u5de6\u7aef\u70b9\u5c0f\u7684\u65f6\u5019\u6700\u5c11\u8981\u62d3\u5c55\u5230\u54ea\u91cc\uff0c\u8bb0\u4e3a `must[i]`\n* \u7136\u540e\u518d\u8003\u8651\u5728\u5411\u53f3\u632a\u7b54\u6848\u7684\u5de6\u7aef\u70b9\u7684\u65f6\u5019\uff0c\u600e\u4e48\u66f4\u65b0\u53f3\u7aef\u70b9\u3002\u9996\u5148\u5148\u8003\u8651\u4e00\u4e2a\u6027\u8d28\uff0c\u5047\u5982\u73b0\u5728\u505a\u5230\u7b2c `i` \u4f4d\uff0c\u73b0\u5728\u8986\u76d6\u5728\u4e0a\u9762\u7684\u6709\u4e24\u4e2a\u533a\u95f4\u7532\u4e59\uff0c\u7532\u53f3\u7aef\u70b9\u6bd4\u4e59\u7684\u5927\uff0c\u90a3\u4e48\u5f53\u6211\u628a\u7b54\u6848\u5de6\u7aef\u70b9\u4ece `i` \u632a\u5230 `i+1` \u65f6\uff0c\u7532\u5bf9\u7b54\u6848\u53f3\u7aef\u70b9\u4ea7\u751f\u7684\u9650\u5236\u4e00\u5b9a\u6bd4\u4e59\u66f4\u53f3\u8fb9\uff0c\u56e0\u4e3a\u632a\u5230\u4e0b\u4e00\u4f4d\u4e4b\u540e\u6211\u4f1a\u628a\u7b54\u6848\u66f4\u65b0\u6210\u67d0\u4e2a `last[a[i]]` \uff0c\u800c\u7532\u53f3\u7aef\u70b9\u7684 `last[a[i]]` \u4e00\u5b9a\u6bd4\u4e59\u7684\u5927\uff0c\u56e0\u6b64\u6211\u53ea\u9700\u8981\u5728\u632a\u7b54\u6848\u5de6\u7aef\u70b9\u65f6\u8bb0\u4f4f\u76ee\u524d\u8d70\u8fc7\u7684\u533a\u95f4\u4e2d\u53f3\u7aef\u70b9\u6700\u9760\u53f3\u7684\u662f\u591a\u5c11\u5373\u53ef\u3002\n* \u4ee3\u7801\n\n```cpp\n\n// Problem: F. Diverse Segments\n// Contest: Codeforces - Codeforces Round #792 (Div. 1 + Div. 2)\n// URL: https://codeforces.com/problemset/problem/1684/F\n// Memory Limit: 256 MB\n// Time Limit: 2000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\n#include <bits/stdc++.h>\n#define int long long\n#define fi first\n#define se second\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch))f^=ch=='-',ch=getchar();\n\twhile(isdigit(ch))x=x*10+(ch^48),ch=getchar();\n\treturn f?x:-x;\n}\nconst int N=2e5+5;\nint a[N],n,m,rks,ans,lmost,now,must[N],last[N];\npair<int,int> b[N],mmt[N];\nvector<pair<int,int>> seg[N],rev[N];\npriority_queue<pair<int,int>> q;\nvoid qclear(){\n\twhile(q.size())q.pop();\n}\nvoid gao1(){\n\tqclear();\n\tint need=n+1;\n\tlmost=need;\n\tmemset(last,0,sizeof(int)*(rks+5));\n\tfor(int i=n;i>=1;--i){\n\t\tfor(auto x:rev[i]){\n\t\t\tq.push(x);\n\t\t}\n\t\tif(last[a[i]])need=min(need,last[a[i]]);\n\t\tlast[a[i]]=i;\n\t\twhile(q.size()&&(q.top().fi==i)){\n\t\t\tint idx=q.top().se;\n\t\t\tq.pop();\n\t\t\tmust[idx]=need;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tif(must[i]<=mmt[i].se)lmost=min(lmost,must[i]);\n\t}\n}\nvoid gao2(){\n\tqclear();\n\tint need=0;\n\tmemset(last,0,sizeof(int)*(rks+5));\n\tmemset(must,0,sizeof(int)*(rks+5));\n\tfor(int i=1;i<=n;++i){\n\t\tfor(auto x:seg[i]){\n\t\t\tq.push({-x.fi,x.se});\n\t\t}\n\t\tif(last[a[i]])need=max(need,last[a[i]]);\n\t\tlast[a[i]]=i;\n\t\twhile(q.size()&&(-q.top().fi==i)){\n\t\t\tint idx=q.top().se;\n\t\t\tq.pop();\n\t\t\tmust[idx]=need;\n\t\t}\n\t}\n}\nvoid extend(int x){\n\twhile(now<=x){\n\t\tlast[a[now]]=now;\n\t\t++now;\n\t}\n}\nvoid gao3(){\n\tmemset(last,0,sizeof(int)*(rks+5));\n\tint extd=0;\n\tans=1e9;\n\tnow=1;\n\tfor(int i=1;i<=m;++i){\n\t\textd=max(extd,must[i]);\n\t}\n\tfor(int i=1;i<=min(n,lmost);++i){\n\t\tif(i>1){\n\t\t\textd=max(extd,last[a[i-1]]);\n\t\t}\n\t\textd=max(extd,i);\n\t\tint rf=0;\n\t\tfor(auto x:seg[i]){\n\t\t\textd=max(extd,must[x.se]);\n\t\t\trf=max(rf,x.fi);\n\t\t}\n\t\textend(rf);\n\t\tans=min(ans,extd-i+1);\n\t}\n}\nvoid solve(){\n\tn=read(),m=read(),rks=0;\n\tfor(int i=1;i<=n;++i){\n\t\tseg[i].clear();\n\t\trev[i].clear();\n\t\ta[i]=read();\n\t\tb[i]={a[i],i};\n\t}\n\tsort(b+1,b+n+1);\n\ta[b[1].se]=++rks;\n\tfor(int i=2;i<=n;++i){\n\t\tif(b[i].fi==b[i-1].fi)a[b[i].se]=a[b[i-1].se];\n\t\telse a[b[i].se]=++rks;\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tint l=read(),r=read();\n\t\tmmt[i]={l,r};\n\t\tseg[l].push_back({r,i});\n\t\trev[r].push_back({l,i});\n\t\tmust[i]=n+1;\n\t}\n\tgao1();\n\tif(lmost==n+1){\n\t\tputs(\"0\");\n\t\treturn;\n\t}\n\tgao2();\n\tgao3();\n\tprintf(\"%lld\\n\",ans);\n}\nsigned main(){\n\tint T=read();\n\twhile(T--)\n\t\tsolve();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1653055806,
        "uid": 239407,
        "name": "CHENHX",
        "ccfLevel": 6,
        "title": "CF1684F Diverse Segments"
    }
]