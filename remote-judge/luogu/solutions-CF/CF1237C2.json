[
    {
        "content": "\u8fd9\u4e48\u5999\u7684\u9898\u600e\u4e48\u6ca1\u4eba\u53d1\u9898\u89e3\u554a\n\n\u9996\u5148\u8fd9\u662f\u4e09\u7ef4\u7684\uff0c~~\u6211\u4eec\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u964d\u7ef4\u6253\u51fb~~\n\n\u5148\u8003\u8651\u4e00\u7ef4\u600e\u4e48\u505a\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u5176\u8be5\u7ef4\u5750\u6807\u8fdb\u884c\u6392\u5e8f\uff0c\u6309\u7167\u987a\u5e8f\u8f93\u51fa\uff0c\u53ef\u80fd\u4f1a\u591a\u4f59\u4e00\u4e2a\n\n\u90a3\u62d3\u5c55\u5230\u4e8c\u7ef4\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u8f6c\u5316\u6210\u4e00\u7ef4\uff0c\u5206\u6210\u5f88\u591a\u4e2a\u4e00\u7ef4\u540e\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u628a\u4e00\u7ef4\u4e2d\u591a\u7684\u4e00\u4e9b\u70b9\u5b58\u4e0b\u6765\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e9b\u70b9\u7684\u4e00\u7ef4\u503c\u4e24\u4e24\u4e0d\u7b49\uff0c\u4e8e\u662f\u6309\u7167\u53e6\u4e00\u7ef4\u5750\u6807\u8f93\u51fa\u5c31\u884c\u4e86\n\n\u90a3\u4e09\u7ef4\u5462\uff1f\n\n\u5176\u5b9e\u548c\u4e8c\u7ef4\u662f\u4e00\u6837\u7684\uff0c\u7528\u7c7b\u4f3c\u64cd\u4f5c\u8f6c\u5316\u6210\u4e8c\u7ef4\u5373\u53ef\n\n## $Code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\nil int read() {\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\n#define rep(i, s, t) for(re int i = s; i <= t; ++ i)\n#define maxn 100005\nstruct node {\n\tint x, y, z, id;\n}e[maxn], p[maxn], q[maxn], a[maxn], b[maxn];\n//e\u7528\u6765\u5b58\u50a8\u4e09\u7ef4\u5750\u6807\uff0cp\u7528\u6765\u5b58\u50a8\u7b2c\u4e09\u7ef4\u76f8\u7b49\u65f6\u7684\u4e8c\u7ef4\u5750\u6807\uff0cq\u7528\u6765\u5b58\u50a8\u7b2c\u4e8c\u4e09\u7ef4\u90fd\u76f8\u7b49\u7684\u4e00\u7ef4\u5750\u6807\n//a\u7528\u6765\u5b58\u50a8\u4e8c\u7ef4\u64cd\u4f5c\u4e2d\u5269\u4f59\u70b9\u7684\u5750\u6807\uff0cb\u5219\u662f\u7528\u6765\u5b58\u50a8\u4e09\u4f4d\u64cd\u4f5c\u4e2d\u5269\u4f59\u70b9\u7684\u5750\u6807\nint n, c2D, c3D;\nil bool cmp(node a, node b) { return a.z < b.z; }\nil bool cmp1(node a, node b) { return a.y < b.y; }\nil bool cmp2(node a, node b) {return a.x < b.x; }\nil void solve1D(int x) {\n\tsort(q + 1, q + x + 1, cmp2);\n\tfor(re int i = 1; i < x; i += 2) printf(\"%d %d\\n\", q[i].id, q[i + 1].id);\n\tif(x & 1) a[++ c2D] = q[x];\n}\nil void solve2D(int x) {\n\tsort(p + 1, p + x + 1, cmp1);\n\tint now = 1, cnt = 0; c2D = 0;\n\trep(i, 1, x) {\n\t\tnow = i;\n\t\twhile(now <= x && p[i].y == p[now].y) q[++ cnt] = p[now ++];\n\t\ti = now - 1, solve1D(cnt), cnt = 0;\n\t}\n\tfor(re int i = 1; i < c2D; i += 2) printf(\"%d %d\\n\", a[i].id, a[i + 1].id);\n\tif(c2D & 1) b[++ c3D] = a[c2D];\n}\nil void solve3D() {\n\tsort(e + 1, e + n + 1, cmp);\n\tint now = 1, cnt = 0;\n\trep(i, 1, n) {\n\t\tnow = i;\n\t\twhile(now <= n && e[i].z == e[now].z) p[++ cnt] = e[now ++];\n\t\ti = now - 1, solve2D(cnt), cnt = 0;\n\t}\n\tfor(re int i = 1; i < c3D; i += 2) printf(\"%d %d\\n\", b[i].id, b[i + 1].id);\n}\nint main() {\n\tn = read();\n\trep(i, 1, n) e[i].id = i, e[i].x = read(), e[i].y = read(), e[i].z = read();\n\tsolve3D();\n\treturn 0;\n}\n\n\n```",
        "postTime": 1571365234,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1237C2 \u3010Balanced Removals (Harder)\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u6bd4\u8f83\u65b9\u4fbf\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u663e\u7136\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u70b9 $i$\uff0c\u6211\u4eec\u627e\u5230\u5176\u5411\u53f3($x_j\\geq x_i$)\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u70b9\u96c6\uff0c\u518d\u627e\u5230\u5176\u4e2d\u5411\u4e0a($y_j\\geq y_i$)\u6700\u8fd1\u7684\u70b9\u96c6\uff0c\u518d\u627e\u5230\u5176\u4e2d\u5411\u53f3($z_j\\geq z_i$)\u6700\u8fd1\u7684\u70b9 $j$\u3002\n\n\u8fd9\u6837\u5f97\u5230\u7684 $(i,j)$ \u663e\u7136\u662f\u7b26\u5408\u6761\u4ef6\u7684\u3002\n\n\u90a3\u4e48\u600e\u4e48\u627e\u5230\u8fd9\u6837\u7684\u70b9\u96c6\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u7528 $\\text{map}$ \u5957 $\\text{map}$ \u6765\u5b9e\u73b0\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u7528 `\nmap<int,map<int,map<int,int> > >q;` \u7b2c\u4e00\u7ef4 $q[x_0]$ \u5b58\u6240\u6709 $x$ \u5750\u6807\u7b49\u4e8e $x_0$ \u7684\u70b9\u3002\u7b2c\u4e8c\u3001\u4e09\u7ef4\u540c\u7406\u3002\n\n\u8fd9\u6837\u5220\u9664\u7684\u65f6\u5019\u53ea\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u628a\u4e0d\u5b58\u5728\u7684\u7ef4\u5ea6\u4e00\u8d77\u5220\u6389\u5373\u53ef\u3002\n\n\u8fd9\u6837\u5728\u7b2c\u4e00\u7ef4 `lower_bound` \u5f97\u5230\u7684\u5c31\u662f\u5411\u53f3($x_j\\geq x_i$)\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u70b9\u96c6\uff0c\u7b2c\u4e8c\u3001\u4e09\u7ef4\u540c\u7406\u3002\n\n\u7279\u522b\u7684\uff0c\u5982\u679c\u4e0d\u5b58\u5728 $x_j\\geq x_i$ \u7684\u70b9\uff0c\u90a3\u6211\u4eec\u53ea\u8981\u627e\u5411\u5de6($x_j\\leq x_i$)\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u70b9\u96c6\u5373\u53ef\u3002\u5176\u4f59\u7ef4\u5ea6\u540c\u7406\u3002\n\n\u590d\u6742\u5ea6\u540c\u6837\u662f $O(n\\log n)$\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>\n#include<set>\n#define N 100010\n#define fi first\n#define se second\nusing namespace std;\nstruct node{\n    int x,y,z;\n}p[N];\nbool chs[N];\nmap<int,map<int,map<int,int> > >q;\nvoid erase(node p)\n{\n    q[p.x][p.y].erase(p.z);\n    if(q[p.x][p.y].empty()) q[p.x].erase(p.y);\n    if(q[p.x].empty()) q.erase(p.x);\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d%d%d\",&p[i].x,&p[i].y,&p[i].z),q[p[i].x][p[i].y][p[i].z]=i;\n    for(int i=1;i<=n;i++)\n    if(!chs[i])\n    {\n        erase(p[i]);\n        auto x=q.lower_bound(p[i].x);\n        if(x==q.end()) --x;\n        auto y=x->se.lower_bound(p[i].y);\n        if(y==x->se.end()) --y;\n        auto z=y->se.lower_bound(p[i].z);\n        if(z==y->se.end()) --z;\n        int u=z->se;\n        erase(p[u]);\n        chs[u]=chs[i]=true;\n        printf(\"%d %d\\n\",i,u);\n    }\n    return 0;\n}\n```",
        "postTime": 1606039226,
        "uid": 52902,
        "name": "Flying2018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1237C2 \u3010Balanced Removals (Harder)\u3011"
    },
    {
        "content": "## 1 \u9898\u610f\n\u4e09\u7ef4\u5e73\u9762\u6709 $n$ \u4e2a\u70b9\uff0c$n$ \u4e3a\u5076\u6570\u3002\n\n\u73b0\u5728\u8981\u6c42\u53d6 $\\frac{n}{2}$ \u6b21\uff0c\u6bcf\u6b21\u53bb\u4e00\u5bf9\u70b9 $(a,b)$\uff0c\u8981\u6c42\u6ca1\u6709\u672a\u88ab\u53d6\u8d70\u7684\u70b9\u5728\u4ee5 $x$ \u548c $y$ \u4e3a\u5bf9\u89d2\u70b9\u7684\u77e9\u5f62\u4e2d\u3002\n\n\u6c42\u4efb\u610f\u4e00\u7ec4\u5408\u6cd5\u65b9\u6848\u3002\n\n## 2 \u601d\u8def\n\u4ece\u4f4e\u7ef4\u5230\u9ad8\u7ef4\u8003\u8651\u3002\n### 2.1 \u4e00\u7ef4\n\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u6bcf\u4e2a\u70b9\u7684 $x$ \u5750\u6807\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6210\u5bf9\u5220\u9664\u5b83\u4eec\u3002\u6700\u540e\u6700\u591a\u5269\u4e0b $1$ \u4e2a\u70b9\u3002\n### 2.2 \u4e8c\u7ef4\n\u5bf9\u4e8e\u6bcf\u4e2a $y$\uff0c\u627e\u51fa\u6240\u6709\u4e0e\u4ed6 $y$ \u5750\u6807\u76f8\u540c\u7684\u70b9\uff0c\u5bf9\u6b64\u8fdb\u884c\u4e0e\u4e00\u7ef4\u76f8\u4f3c\u7684\u64cd\u4f5c\u3002\n\n\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u6bcf\u4e2a $y$ \u4e0a\u6700\u591a\u6709\u4e00\u4e2a\u70b9\u3002\n\n\u5728\u5c06 $y$ \u8fdb\u884c\u6392\u5e8f\uff0c\u8fdb\u884c\u4e00\u6b21\u4e00\u7ef4\u64cd\u4f5c\u5373\u53ef\u3002\n### 2.3 \u4e09\u7ef4\n\u540c\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $z$\uff0c\u627e\u5230\u6240\u6709\u5177\u6709\u8fd9\u4e2a $z$ \u5750\u6807\u7684\u70b9\uff0c\u5e76\u6c42\u89e3\u5176\u4e8c\u7ef4\u5f62\u5f0f\u3002\n\n\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u6bcf\u4e2a $z$ \u5750\u6807\u6700\u591a\u5269\u4e0b\u4e00\u4e2a\u70b9\u3002\n\n\u518d\u5bf9 $z$ \u8fdb\u884c\u4e00\u7ef4\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u6839\u636e\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u63a8\u5e7f\u5230 $k$ \u7ef4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(kn\\log n)$\u3002\n## 3 code\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\ninline int read(){\n    int X=0,w=0; char ch=0;\n    while(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n    while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    return w?-X:X;\n}\ninline void write(int x){\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) write(x/10);\n     putchar(x%10+'0');\n}\nstruct node{\n\tint x,y,z;\n\tint id;\n}a[50001];\nbool cmp(node a,node b){\n\tif(a.x==b.x){\n\t\tif(a.y==b.y){\n\t\t\treturn a.z<b.z;\n\t\t}\n\t\treturn a.y<b.y;\n\t}\n\treturn a.x<b.x;\n}\nint f[50001];\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].x=read(),a[i].y=read(),a[i].z=read();\n\t\ta[i].id=i;\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<n;i++){\n\t\tif(f[i]==0){\n\t\t\tint now=i+1;\n\t\t\tif(a[i].x==a[now].x&&a[i].y==a[now].y){\n\t\t\t\tcout<<a[i].id<<\" \"<<a[now].id<<\"\\n\";\n\t\t\t\tf[i]=1;\n\t\t\t\tf[now]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tif(f[i]==0){\n\t\t\tint now=i+1;\n\t\t\twhile(a[i].x==a[now].x&&f[now]!=0) now++;\n\t\t\tif(a[i].x==a[now].x){\n\t\t\t\tcout<<a[i].id<<\" \"<<a[now].id<<\"\\n\";\n\t\t\t\tf[i]=1;\n\t\t\t\tf[now]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tif(f[i]==0){\n\t\t\tint now=i+1;\n\t\t\twhile(f[now]!=0) now++;\n\t\t\tcout<<a[i].id<<\" \"<<a[now].id<<\"\\n\";\n\t\t\tf[i]=1;\n\t\t\tf[now]=1;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1645768494,
        "uid": 343251,
        "name": "heaksicn",
        "ccfLevel": 5,
        "title": "CF1237C2 Balanced Removals (Harder)"
    },
    {
        "content": "\u7531\u4e8e\u672c\u83dc\u83dc\u592a\u83dc\uff0c\uff08\u8003\u540e\uff09\u5199\u4e86\u4e00\u4e2a\u4f2aKDT\u7684\u4ee3\u7801\n\n\u8003\u8651\u5206\u6cbb\u505a\u6cd5\uff0c\u5982\u679c\u6211\u4eec\u7528\u4e00\u4e2a\u5e73\u9762\u628a\u7a7a\u95f4\u9694\u5f00\uff0c\u7136\u540e\u5e73\u9762\u4e24\u4fa7\u7684\u70b9\u90fd\u5206\u5f00\u914d\u5bf9\u3002\n\n\u6700\u540e\u6700\u591a\u4e24\u8fb9\u5404\u81ea\u5269\u4e0b\u4e00\u4e2a\u70b9\uff0c\u800c\u5176\u4ed6\u7684\u90fd\u88ab\u6d88\u6389\u4e86\uff0c\u6b64\u65f6\u5fc5\u7136\u53ef\u4ee5\u914d\u5bf9\u3002\n\n\u7136\u540e\u6309\u7167\u4e0a\u8ff0\u601d\u8def\u5c31\u4e00\u76f4\u5206\u6cbb\u5c31\u884c\u4e86\u3002\n\n\u501f\u9274\u4e86KDT\u7684\u601d\u8def\uff0c\u6bcf\u6b21\u4ece $x,y,z$ \u4e09\u7ef4\u627e\u4e00\u4e2a\u65b9\u5dee\u6700\u5c0f\u7684\uff0c\u7136\u540e\u7528\u4e2d\u4f4d\u6570\u8be5\u7ef4\u5ea6\u4e0a\u7684\u503c\u628a\u5bf9\u5e94\u7684\u5e73\u9762\u628a\u70b9\u5206\u6210\u4e24\u90e8\u5206\u3002\n\n\u4f46\u662f\u6211\u6bd4\u8f83\u61d2\uff0c\u6211\u76f4\u63a5\u7528\u7684\u5e73\u5747\u6570\u5206\u5272\u3002\n\n\u800c\u4e14\u8fd9\u4e5f\u4e0d\u662f\u6b63\u5e38\u7684KDT\uff0c\u6211\u8fd9\u4e2aKDT\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u4fdd\u5b58\u771f\u6b63\u7684\u8282\u70b9\u3002\n\n\u590d\u6742\u5ea6\u7384\u5b66\n\n```cpp\n#include<cstdio>\n#include<queue>\n\n#define rg register\n#define il inline\n#define MX (200000 + 5)\n\nstruct point{\n\tint pos[3] ,id;\n}p[MX];\n\nint cnt ,n;\nint ch[MX][2] ,fa[MX] ,key[MX];\nint build(point *A ,int Len){\n\t++cnt;\n\tif(Len == 1){\t// \u5f53\u524d\u5e73\u9762\u5185\u53ea\u6709\u4e00\u4e2a\u70b9 \n\t\tkey[cnt] = A[0].id;\n\t\tch[cnt][0] = ch[cnt][1] = 0;\n\t\treturn cnt;\n\t}\n\tdouble aver[3] = {0} ,del[3] = {0};\n\t// aver \u662f\u5e73\u5747\u6570 ,del \u662f\u65b9\u5dee*Len\n\tfor(rg int i = 0 ; i < Len ; ++i){\n\t\tfor(rg int j = 0 ; j < 3 ; ++j)\n\t\t\taver[j] += A[i].pos[j];\n\t}\n\taver[0] /= Len ,aver[1] /= Len ,aver[2] /= Len;\n\tfor(rg int i = 0 ; i < Len ; ++i){\n\t\tfor(rg int j = 0 ; j < 3 ; ++j)\n\t\t\tdel[j] += (A[i].pos[j] - aver[j])\n\t\t\t\t* (A[i].pos[j] - aver[j]);\n\t}\n\tint type = 0;\t// type = 0 ,1 ,2 \u5206\u522b\u8868\u793a\u4ece x ,y ,z \u4e09\u79cd\u5e73\u9762\u5207\u5f00 \n\tif(del[0] >= del[1] && del[0] >= del[2])\ttype = 0;\n\telse if(del[1] >= del[0] && del[1] >= del[2])\ttype = 1;\n\telse type = 2;\n\taver[type] += 0.00002;\t// \u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u5e73\u9762\u4e0d\u80fd\u78b0\u5230\u70b9 \n\tstd::queue<point> que[2];\t// \u5b58\u5e73\u9762\u4e24\u4fa7\u7684\u70b9\u7684 \n\tfor(rg int i = 0 ; i < Len ; ++i){\n\t\t// \u5206\u5272\u6211\u662f\u7528\u7684\u5e73\u5747\u6570\uff0c\u6709\u70b9\u61d2 QAQ \n\t\tque[A[i].pos[type] > aver[type]].push(A[i]);\n\t}\n\tint sz = que[0].size();\n\tfor(rg int i = 0 ; i < Len ; ++i){\n\t\tA[i] = que[i >= sz].front();\n\t\tque[i >= sz].pop();\n\t}\n\tint _now = cnt;\n\tch[_now][0] = build(A ,sz);\n\tch[_now][1] = build(A + sz ,Len - sz);\n\treturn _now;\n}\n\nint solve(int x){\n\tif(!x)\treturn 0;\n\tif(!ch[x][0] && !ch[x][1])\treturn key[x];\n\tint a = solve(ch[x][0]) ,b = solve(ch[x][1]);\n\tif(a && b)\treturn printf(\"%d %d \\n\" ,a ,b) ,0;\n\tif(a)\treturn a;\n\treturn b;\n}\n\nint main(){\n\tn = read();\n\tfor(rg int i = 1 ,x ,y ,z ; i <= n ; ++i){\n\t\tx = read(); y = read(); z = read();\n\t\tp[i] = (point){{x ,y ,z} ,i};\n\t}\n\tsolve(build(p + 1 ,n));\n\treturn 0;\n}\n\n```",
        "postTime": 1571483297,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1237C2 \u3010Balanced Removals (Harder)\u3011"
    },
    {
        "content": "\u8fd9\u7bc7\u9898\u89e3\u5495\u4e86\u597d\u4e45\u3002\u3002\u3002\n\ndalao\u4eec\u90fd\u7528\u4e86\u795e\u4ed9\u505a\u6cd5\uff0c\u53d1\u4e00\u4e2a\u6700\u597d\u5199\u7684\u3002\n\n\u5148\u8003\u8651\u4e00\u7ef4\u600e\u4e48\u505a\uff1f\u6392\u5e8f\u540e\u76f8\u90bb\u4e24\u4e2a\u914d\u5bf9\n\n\u4f46\u9898\u4e2d\u6709\u4e09\u7ef4\uff0c\u975e\u5e38\u70e6\uff0c\u8003\u8651\u964d\u7ef4\u3002  \n\u53d1\u73b0 $z$ \u8fd9\u4e00\u7ef4\u4e4b\u6240\u4ee5\u5b58\u5728\u662f\u56e0\u4e3a\u5b58\u5728 $x,y$ \u76f8\u540c\u800c $z$ \u4e0d\u540c\u7684\u70b9\uff0c\u4e8e\u662f\u60f3\u5230\u5148\u628a $x,y$ \u76f8\u540c\u7684\u70b9\u5f53\u4f5c\u53ea\u6709 $z$ \u8fd9\u4e00\u7ef4\u5904\u7406\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5ffd\u7565 $z$ \u8fd9\u4e00\u7ef4\u3002\u540c\u7406\uff0c\u4e8c\u7ef4\u4e5f\u53ef\u4ee5\u964d\u5230\u4e00\u7ef4\u3002\n\n\u5229\u7528\u597d `sort` \u7684 `cmp` \u51fd\u6570\uff0c\u53ef\u4ee5\u53ea\u6392\u4e00\u6b21\u5e8f\uff0c\u4e14\u4e09\u6bb5\u4ee3\u7801\u53ea\u9700\u8981\u6539\u4e0b `x y z`\uff0c\u975e\u5e38\u597d\u5199\u3002\n\n```cpp\nconst int N = 5e4+5;\nint n;\nstruct Node {\n\tint x,y,z,id;\n} a[N];\nbool operator < (const Node &i,const Node &j)\n\t{ return i.x==j.x ? (i.y==j.y ? i.z<j.z : i.y<j.y) : i.x<j.x; }\n \nbool vis[N];\n \nint main() {\n\tread(n);\n\tFor(i,1,n) read(a[i].x,a[i].y,a[i].z), a[i].id = i;\n\tsort(a+1,a+n+1);\n\tfor(int i = 1; i < n; ++i) if( !vis[i] ) {\n\t\tif( a[i].x == a[i+1].x && a[i].y == a[i+1].y ) {\n\t\t\tprintf(\"%d %d\\n\",a[i].id,a[i+1].id);\n\t\t\tvis[i] = vis[i+1] = 1;\n\t\t}\n\t}\n\tfor(int i = 1; i < n; ++i) if( !vis[i] ) {\n\t\tint j = i+1;\n\t\twhile( a[i].x == a[j].x && vis[j] ) ++j;\n\t\tif( a[i].x == a[j].x ) {\n\t\t\tprintf(\"%d %d\\n\",a[i].id,a[j].id);\n\t\t\tvis[i] = vis[j] = 1;\n\t\t}\n\t}\n\tfor(int i = 1; i < n; ++i) if( !vis[i] ) {\n\t\tint j = i+1;\n\t\twhile( vis[j] ) ++j;\n\t\tprintf(\"%d %d\\n\",a[i].id,a[j].id);\n\t\tvis[i] = vis[j] = 1;\n\t}\n\treturn 0;\n}\n```\n\n---\n\n\u987a\u4fbf\u5ba3\u4f20\u4e00\u4e0b [D\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/Rings/cf1237d-balanced-playlist#)",
        "postTime": 1621848461,
        "uid": 236866,
        "name": "401rk8",
        "ccfLevel": 9,
        "title": "CF1237C2 Balanced Removals (Harder) \u9898\u89e3"
    }
]