[
    {
        "content": "\u8fd9\u9053\u9898\u770b\u8d77\u6765\u7b80\u5355\uff0c\u5b9e\u9645\u4e0a\u6709\u5f88\u591a\u7ec6\u8282\u3002\n\n\u4ece\u9898\u610f\u4e0a\u770b\uff0c\u4f3c\u4e4e\u5c31\u662f\u627e\u4e00\u4e2a\u79bb\u51fa\u53d1\u70b9\u8ddd\u79bb\u4e3a\u5947\u6570\u5e76\u4e14\u51fa\u5ea6\u4e3a0\u7684\u70b9\uff0c\u76f4\u63a5DFS\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u3002\n\n\u4f46\u662f\u4e0d\u7136\uff0c\u8003\u8651\u5230\u56fe\u4e2d\u53ef\u80fd\u6709\u5947\u73af\u6539\u53d8 \u5230\u67d0\u70b9\u65f6\u8ddd\u79bb\u7684\u5947\u5076\u6027\uff0c\u6211\u4eec\u5728\u8dd1dfs\u5f04vis\u5224\u91cd\u65f6\u8981\u533a\u5206 \u5f53\u65f6\u6b65\u6570\u662f\u5947\u662f\u5076\uff0c\u5373vis[u][0/1]\u8868\u793adfs\u5230\u8fc7 \u5230\u70b9u\u65f6\u6b65\u6570\u4e3a\u5947/\u5076\u7684\u60c5\u51b5\u3002\n\n\u5f53\u5224\u65ad\u5b8cWin\u7684\u60c5\u51b5\u540e\uff0c\u518d\u770b\u8fd8\u6709\u6ca1\u6709draw\u7684\u60c5\u51b5\uff08\u5373\u5224\u73af\uff09\uff0c**\u53ea\u4ece\u8d77\u70b9\u51fa\u53d1Tarjan\u4e00\u904d\u5373\u53ef**\u3002\n\n\u6700\u540e\u5c31\u662fLose\u4e86\u3002\n```\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#define ll long long\n#define il inline\n#define re register\n#define fp(i,a,b) for(re int i=a;i<=b;i++)\n#define fq(i,a,b) for(re int i=a;i>=b;i--)\nusing namespace std;\nconst int N=1e5+100;\nint n,h[N],cnt,m,vis[N][2],st,len[N],f=0,top,chu[N],dfn[N],low[N],tim,inq[N],scc,Stack[N],t[N],mx;\nstruct Edge\n{\n    int to,next;\n}e[N<<1];\nil void add(re int u,re int v)\n{\n  e[++cnt]=(Edge){v,h[u]};h[u]=cnt;\n}\nil void Tarjan(re int u)//\u627e\u73af\u6a21\u677f\u3002\u3002\u3002\n{\n  dfn[u]=low[u]=++tim;\n  Stack[++top]=u;\n  inq[u]=1;\n  for(re int i=h[u];i;i=e[i].next)\n    {\n      re int v=e[i].to;\n      if(!dfn[v]) Tarjan(v),low[u]=min(low[u],low[v]);\n      else if(inq[v]) low[u]=min(low[u],dfn[v]);\n    }\n  if(low[u]==dfn[u])\n    {\n      ++scc;\n      while(Stack[top]^u)\n\t{\n\t  inq[Stack[top]]=0;\n\t  t[scc]++;--top;\n\t}\n      inq[u]=0;--top;\n      t[scc]++;mx=max(mx,t[scc]);\n    }\n}\nil void dfs(re int u,re int mk)//mk\u6807\u5947\u5076\n{\n    for(re int i=h[u];i;i=e[i].next)\n    {\n      re int v=e[i].to;\n      if(vis[v][mk^1]) continue;//\u4e00\u5b9a\u6ce8\u610f\u5224\u65ad\u4e00\u70b9\u662f\u5426\u8d70\u8fc7\u8981\u5206\u5947\u5076\uff01\uff01\uff01\u56e0\u6709\u5947\u73af\n      vis[v][mk^1]=1;\n      len[++top]=v;//\u5b58\u8def\u5f84\n      if(!mk&&!chu[v]){printf(\"Win\\n\");fp(i,0,top) printf(\"%d \",len[i]);exit(0);}//\u82e5\u5230\u8be5\u70b9\u6b65\u6570\u4e3a\u5947\u4e14\u65e0\u51fa\u5ea6\n      dfs(v,mk^1);\n      --top;\n    }\n}\nil int gi()\n{\n    re int x=0,t=1;\n    re char ch=getchar();\n    while(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n    if(ch=='-') t=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nint main()\n{\n    n=gi();m=gi();\n    fp(i,1,n)\n    {\n        chu[i]=gi();\n        fp(j,1,chu[i]) add(i,gi());\n    }\n    len[0]=gi();\n    dfs(len[0],0);top=0;\n    Tarjan(len[0]);//\u770b\u4ece\u8d77\u70b9\u51fa\u53d1\u80fd\u4e0d\u80fd\u627e\u5230\u73af\n    if(mx>1) {puts(\"Draw\");return 0;}\n    puts(\"Lose\");\n    return 0;\n}\n\n```",
        "postTime": 1519630474,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF936B \u3010Sleepy Game\u3011"
    },
    {
        "content": "\u4e00\u9053\u4e00\u6ce2\u4e09\u6298\u7684\u9898\uff0c\u521a\u8bfb\u7740\u6709\u70b9\u61f5\uff0c\u8bfb\u5b8c\u53d1\u73b0\u5176\u5b9e\u662f\u4e2a\u62ab\u7740\u535a\u5f08\u76ae\u7684\u56fe\u8bba\u9898\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u9898\u610f\uff1a\n### \u9898\u610f\n\u6709\u5411\u56fe\u4e0a\u6307\u5b9a\u4e00\u4e2a\u8d77\u70b9$s$\uff0c\u82e5\u5b58\u5728\u4e00\u6761\u5230\u53f6\u5b50\u8ddd\u79bb\u4e3a\u5947\u6570\u7684\u8def\u5f84\uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u8def\u5f84\u4e0d\u4e00\u5b9a\u662f\u6700\u77ed\u8def\u5f84\uff09\uff0c\u5219\u5fc5\u80dc\u3002\n\n\u82e5\u4e0d\u5b58\u5728\uff0c\u4f46\u662f\u53ef\u4ee5\u5230\u8fbe\u4e00\u4e2a\u56de\u8def\uff0c\u5219\u53ef\u4ee5\u5e73\u5c40\u3002\n\n\u4e0a\u8ff0\u4e24\u79cd\u90fd\u4e0d\u80fd\u8fbe\u5230\uff0c\u5219\u5931\u8d25\u3002\n\n~~\u8bf6\u597d\u50cf\u6709\u70b9\u88f8\u554a\uff0c\u8df3\u4e86\u8df3\u4e86~~\n### \u601d\u8def\n\u6b63\u51c6\u5907\u8df3\u4e86\u8fd9\u9898\u7684\u65f6\u5019\uff0c\u5ffd\u7136\u60f3\u5230\u5b58\u5728**\u8d77\u70b9->\u56de\u8def->\u53f6\u5b50**\u7684\u60c5\u51b5\uff0c\u5e76\u6ca1\u6709\u770b\u4e0a\u53bb\u90a3\u4e48\u597d\u5199\u3002\n\n#### Win\n\u8fd9\u91cc\u53ef\u4ee5\u5f00\u4e00\u4e2a\u4e8c\u7ef4$bool$\u6570\u7ec4$vis$\uff0c$vis[x][0]=true$\u8868\u793a\u8282\u70b9$x$\u53ef\u4ee5\u5728\u5076\u6570\u6b65\u65f6\u8bbf\u95ee\u5230\uff0c$vis[x][1]=true$\u8868\u793a\u8282\u70b9$x$\u53ef\u4ee5\u5728\u5947\u6570\u6b65\u65f6\u8bbf\u95ee\u5230\uff0c\u7531\u6b64\u7528\u6765$dfs$\u526a\u679d\u3002\n\n\u5728$dfs$\u65f6\u82e5\u5728\u5947\u6570\u6b65\u65f6\u8bbf\u95ee\u5230\u4e86\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u662f\u5fc5\u80dc\u7684\uff0c$dfs$\u65f6\u5f00\u4e00\u4e2a\u6808\u5373\u53ef\u8bb0\u5f55\u8def\u5f84\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528\u4e86\u53cc\u7aef\u94fe\u8868\u7684$STL$\u3002\n\n#### Draw\n\u5982\u679c\u5e76\u6ca1\u6709\u5728\u5947\u6570\u6b65\u65f6\u8bbf\u95ee\u5230\u4e00\u4e2a\u53f6\u5b50\uff0c\u90a3\u4e48\u5c31\u8981\u770b\u5728$s$\u51fa\u53d1\u65f6\u80fd\u4e0d\u80fd\u627e\u5230\u4e00\u4e2a\u56de\u8def\uff0c\u4ee5\u671f\u8fbe\u5230\u5e73\u5c40\u3002\n\n\u800c\u786e\u5b9a$s$\u662f\u5426\u80fd\u8fbe\u5230\u4e00\u4e2a\u56de\u8def\uff0c\u540c\u6837\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a$dfs$\u5185\u786e\u5b9a\u3002\n\n\n![](http://images2015.cnblogs.com/blog/638419/201511/638419-20151128184040687-313147708.png)\n\n\u5728\u4ee5$s$\u4e3a\u6839\u7684$dfs$\u6811\u4e0a\uff0c\u51fa\u73b0\u56de\u8def\u4e0e\u51fa\u73b0\u540e\u5411\u8fb9\uff08\u8fd4\u7956\u8fb9\uff09\u7b49\u4ef7\uff0c\u6240\u4ee5\u53ea\u8981\u786e\u5b9a\u6709\u6ca1\u6709\u8fd4\u7956\u8fb9\u5373\u53ef\u3002\n\n\u8bbe$vis2[x]=0$\u4e3a\u8282\u70b9$x$\u8fd8\u6ca1\u8bbf\u95ee\u5230\uff0c$vis2[x]=1$\u4e3a\u8282\u70b9$x$\u8bbf\u95ee\u5230\u4e86\u4f46\u5b50\u6811\u672a\u8bbf\u95ee\u5b8c\uff0c$vis2[x]=2$\u4e3a\u8282\u70b9$x$\u8bbf\u95ee\u5230\u4e86\u4e14\u5b50\u6811\u8282\u70b9\u5168\u90e8\u8bbf\u95ee\u3002\n\n\u6240\u4ee5\u5728$dfs$\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u4e0b\u4e00\u6b65\u6240\u8fbe\u8282\u70b9$v$\u7684$vis2[v]=1$\uff0c\u8bf4\u660e\u8fd9\u6761\u8fb9\u6307\u5411\u4e86\u7956\u5148\u8282\u70b9\uff0c\u5373\u5b58\u5728\u56de\u8def\u3002\n#### Lose\n\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\u90fd\u6ca1\u6709\uff0c\u5c31\u662fLose\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>pii;\nconst int maxn=2e5+10,inf=0x3f3f3f3f,mod=1000000007;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\nint pre[maxn][2],ok=0,tar=0,vv[maxn];\nbool vis[maxn][2];\nlist<int>ans;\nvector<int>G[maxn];\nvoid dfs(int x,bool sta)\n{\n\tif(vis[x][sta]||ok==2)\n\t\treturn;\n\tans.push_back(x);\n\tvv[x]=1;\n\tvis[x][sta]=1;\n\tfor(int &v:G[x])\n\t{\n\t\tif(vv[v]==1)//\u6709\u8fd4\u7956\u8fb9,\u5373\u6709\u73af\n\t\t\tok=max(ok,1);\n\t\tif(vis[v][!sta])//\u5947\u5076\u6027\u4e0d\u540c\n\t\t\tcontinue;\n\t\tif(G[v].size()==0&&!sta&&ok!=2)//\u5947\u6570,\u4e14\u65e0\u51fa\u8fb9,\u4e4b\u524d\u672a\u8f93\u51fa\u7b54\u6848\n\t\t{\n\t\t\tok=2;\n\t\t\tans.push_back(v);\n\t\t}\n\t\tdfs(v,!sta);\n\t}\n\tif(ok!=2)\n\t\tans.pop_back();\n\tvv[x]=2;\n}\nsigned main(signed argc, char const *argv[])\n{\n\tstd::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n\tint n,m,s;\n\tcin>>n>>m;\n\tfor(int i=1,c,v;i<=n;i++)\n\t{\n\t\tcin>>c;\n\t\tfor(int j=1;j<=c;j++)\n\t\t{\n\t\t\tcin>>v;\n\t\t\tG[i].push_back(v);\n\t\t}\n\t}\n\tcin>>s;\n\tdfs(s,0);\n\tif(ok==2)\n\t{\n\t\tcout<<\"Win\"<<endl;\n\t\tfor(int &i:ans)\n\t\t\tcout<<i<<' ';\n\t}\n\telse if(ok==1)\n\t\tcout<<\"Draw\"<<endl;\n\telse if(ok==0)\n\t\tcout<<\"Lose\"<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1600060253,
        "uid": 186219,
        "name": "Overstars",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF936B \u3010Sleepy Game\u3011"
    },
    {
        "content": "\n\n[\u9898\u76ee\u4f20\u9001](https://www.luogu.com.cn/problem/CF936B)\n\n[\u66f4\u68d2\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/Silymtics/p/solution-CF936B.html)\n\n### Solution\n\n\u9898\u610f\u975e\u5e38\u7684\u7b80\u5355\uff0c\u6ca1\u5565\u53ef\u8bf4\u7684\u3002\n\n\u5148\u5224\u65ad `Win` \u7684\u60c5\u51b5\uff1a\n\n\u4f60\u8003\u8651\u7528 $f_{u,0/1}$ \u6765\u8868\u793a\u8d70\u5230 $u$ \u8fd9\u4e2a\u70b9\u8d70\u4e86\u5076\uff08\u5947\uff09\u6b65\u8fd9\u4e2a\u72b6\u6001\u6709\u6ca1\u6709\u51fa\u73b0\u8fc7\u3002\n\n\u5bf9\u4e8e\u8fb9 $(u,v)$\uff0c\u663e\u7136\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_{v,0} |= f_{u,1}$$\n\n$$f_{v,1} |= f_{u,0}$$\n\n\u7136\u540e\u4f60\u5728\u8bb0\u5f55\u4e00\u4e2a\u51fa\u5ea6\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c`dfs` \u66f4\u65b0\u4e00\u904d\uff0c\u6700\u540e\u770b\u4e00\u770b\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u8d70\u4e86\u5947\u6b65\u8fd9\u4e2a\u72b6\u6001\u5b58\u5728\u6ca1\u6709\u3002\n\n\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u8def\u5f84\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u6bd4\u8f83\u5e73\u51e1\uff0c\u8bb0\u5f55\u4e00\u4e2a $pre$ \u9012\u5f52\u8f93\u51fa\u5373\u53ef\u3002\n\n\u518d\u8003\u8651\u5224\u65ad `Draw` \u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u8981\u6ce8\u610f\u7684\u662f `Draw` \u7684\u4f18\u5148\u7ea7\u6bd4 `Lose` \u8981\u9ad8\u3002~~\u4f30\u8ba1\u5c31\u6211\u4e00\u4e2a\u4eba\u6ca1\u770b\u51fa\u6765\u3002~~\n\n\u6240\u4ee5\u5728\u4e0d\u80fd\u8d70\u5947\u6b65\u505c\u6b62\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u8fdb\u5708\u5c31\u8fdb\u5708\u3002\n\n\u4e00\u5f00\u59cb\u6211\u7684\u60f3\u6cd5\u662f\u7528 `tarjan` \u7f29\u70b9\uff0c\u5efa\u51fa\u65b0\u56fe\uff0c\u63a5\u7740\u4ece $s$ \u6240\u5728\u70b9 `dfs`\uff0c\u770b\u770b\u7ecf\u8fc7\u7684\u8def\u5f84\u6709\u6ca1\u6709\u73af\u3002\u4f46\u662f\u6211\u5199\u6302\u4e86\u3002\n\n\u8003\u8651\u53e6\u5916\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u53ea\u4ece $s$ \u8dd1 `tarjan`\uff0c\u8bb0\u5f55\u4e0b\u7f29\u7684\u6700\u5927\u73af\u3002\n\n\u76f4\u63a5\u6839\u636e\u8fd9\u4e2a\u6700\u5927\u73af\u7684\u5927\u5c0f\u6765\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5176\u4ed6\u95ee\u9898\u770b\u4ee3\u7801\u3002\n\n### Code\n\n```cpp\n/*\nWork by: Suzt_ilymics\nProblem: \u4e0d\u77e5\u540d\u5c51\u9898\nKnowledge: \u5783\u573e\u7b97\u6cd5\nTime: O(\u80fd\u8fc7)\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#define LL long long\n#define orz cout<<\"lkp AK IOI!\"<<endl\n\nusing namespace std;\nconst int MAXN = 2e5+5;\nconst int INF = 1e9+7;\nconst int mod = 1e9+7;\n\nstruct edge {\n    int from, to, nxt;\n}e[MAXN << 1];\nint head[MAXN], num_edge = 1;\n\nint n, m, s, cnt = 0, t = 0, Max = 0;\nint od[MAXN];\nint pre[MAXN][2];\nint dfn[MAXN], low[MAXN], siz[MAXN], num[MAXN], stc[MAXN], sc = 0;\nbool f[MAXN][2], vis[MAXN];\n\nint read(){\n    int s = 0, f = 0;\n    char ch = getchar();\n    while(!isdigit(ch))  f |= (ch == '-'), ch = getchar();\n    while(isdigit(ch)) s = (s << 1) + (s << 3) + ch - '0' , ch = getchar();\n    return f ? -s : s;\n}\n\nvoid add_edge(int from, int to) { e[++num_edge] = (edge){from, to, head[from]}, head[from] = num_edge; }\n\nvoid tarjan(int u) {\n    dfn[u] = low[u] = ++cnt, vis[u] = true, stc[++sc] = u;\n    for(int i = head[u]; i; i = e[i].nxt) {\n        int v = e[i].to;\n        if(!dfn[v]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        } else if(vis[v]) {\n            low[u] = min(low[u], dfn[v]);\n        }\n    }\n    if(dfn[u] == low[u]) {\n        int cnt = 0;\n        int pre = stc[sc--]; vis[pre] = false;\n        ++cnt;\n        while(pre != u) {\n            pre = stc[sc--], vis[pre] = false;\n            ++cnt;\n        }\n        Max = max(Max, cnt);\n    }\n}\n\nvoid Dfs(int u) {\n    for(int i = head[u]; i; i = e[i].nxt) {\n        int v = e[i].to, flag = false;\n        if(!f[v][0] && f[u][1]) f[v][0] = true, flag = true, pre[v][0] = u;\n        if(!f[v][1] && f[u][0]) f[v][1] = true, flag = true, pre[v][1] = u;\n        if(flag) Dfs(v);\n    }\n}\n\nvoid Print(int u, int p) {\n    if(pre[u][p]) Print(pre[u][p], p^1);\n    printf(\"%d \", u);\n}\n\nint main()\n{\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; ++i) {\n\t    int k = read();\n\t    for(int j = 1, v; j <= k; ++j) {\n\t        v = read();\n\t        add_edge(i, v);\n\t        od[i]++;\n        }\n    }\n    s = read();\n    f[s][0] = true;\n    Dfs(s);\n    bool flag = false;\n    for(int i = 1; i <= n; ++i) {\n        if(!od[i] && f[i][1]) {\n            puts(\"Win\");\n            Print(i, 1);\n            puts(\"\");\n            return 0;\n        }\n    }\n    tarjan(s);\n    if(Max > 1) puts(\"Draw\");\n    else puts(\"Lose\");\n    return 0;\n}\n\n```",
        "postTime": 1632233858,
        "uid": 230580,
        "name": "Suzt_ilymtics",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF936B Sleepy Game"
    },
    {
        "content": "tarjan\u90fd\u51fa\u6765\u5e94\u8be5\u662f\u5199\u70e6~~\u50bb~~\u4e86 \n\n\u76f4\u63a5dfs\u5373\u53ef \n\n\u6bcf\u4e2a\u4f4d\u7f6e\u663e\u7136\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u72b6\u6001 \n\n\u4e00\u79cd\u8d70\u4e86\u5947\u6570\u6b65 \u4e00\u79cd\u8d70\u4e86\u5076\u6570\u6b65 \n\nvis\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u72b6\u6001 pre\u8bb0\u5f55\u4e00\u4e0b\u524d\u9a71 \n\nIn\u8868\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5426\u5728\u6808\u4e2d \u7528\u4e8e\u5224\u65ad\u5b83\u662f\u5426\u5728\u73af\u5185 \n\n\u5982\u679c\u6709\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u5947\u6570\u6b65\u5230\u8fbe \u4e14\u65e0\u51fa\u5ea6 \u5c31\u9012\u5f52\u8f93\u51fa\u8def\u5f84 \n\n\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u4f4d\u7f6e \u4e14s\u5728\u4e00\u4e2a\u73af\u5185 \u5c31\u5e73\u5c40 \n\n\u5426\u5219\u5931\u8d25 \n\n\u6700\u540e\u503c\u5f97\u6ce8\u610f\u7684\u662f \n\n\u9012\u5f52\u8f93\u51fa\u8def\u5f84\u65f6 \u78b0\u5230s \u8fd8\u8981\u5224\u65ad\u72b6\u6001\u662f\u5426\u4e3a\u5f00\u59cb\u72b6\u6001 \n\n\u56e0\u4e3a\u4eces\u5f00\u59cb\u53ef\u4ee5\u5728\u67d0\u4e2a\u73af\u4e0a\u7ed5\u4e00\u5708 \u518d\u8d70 \n\n```cpp\n#include<bits/stdc++.h> \n#define rg register \n#define fp( i , x , y ) for( rg int i=(x); i<=(y); ++i ) \n#define fq( i , x , y ) for( rg int i=(y); i>=(x); --i ) \nusing namespace std ; \nconst int N = 1e5+10 ; \nvector <int> v[N] ; \nbool vis[N][2] , In[N] , can[N] , flag ;   \nint pre[N][2] , n , s , m ; \nvoid dfs( int x , int k ) { \n  if( In[x] ) { flag = 1 ; } \n  if( vis[x][k] ) return ; \n  vis[x][k] = 1 ; In[x] = 1 ; \n  int l = v[x].size( ) - 1 , y ; \n  fp( i , 0 , l ) { \n     y = v[x][i] ; \n     if( !vis[y][k^1] ) pre[y][k^1] = x ; \n     dfs( y , k^1 ) ; \n  } In[x] = 0 ; \n} \nvoid print( int x , int k ) { \n   if( x == s && k == 1 )  { printf( \"%d \" , s ) ; return ; } \n   print( pre[x][k] , k^1 ) ; printf( \"%d \" , x ) ; }  \nsigned main( ) {  \n  int ti , y ; \n   scanf( \"%d %d\" , &n , &m ) ; \n   fp( i , 1 , n ) { \n     scanf( \"%d\" , &ti ) ; \n     if( !ti ) can[i] = 1 ; \n     fp( j , 1 , ti ) \n\t   scanf( \"%d\" , &y ) , v[i].push_back(y) ;  \n   }   \n   scanf( \"%d\" , &s ) ; \n   dfs( s , 1 ) ; \n   fp( i , 1 , n ) \n     if( can[i] && vis[i][0] ) { printf( \"Win\\n\" ) ;  print( i , 0 ) ; return 0 ; } \n\tif( flag ) printf( \"Draw\\n\" ) ; \n      else printf( \"Lose\\n\" ) ;  \n   return 0 ; \n} \n```\n",
        "postTime": 1597717455,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF936B \u3010Sleepy Game\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u641e\u4e86\u597d\u4e45\u624d\u641e\u8fc7~~\n## \u9898\u610f\n\u8be6\u89c1[\u9898\u5e72](https://www.luogu.com.cn/problem/CF936B)\n\n\u6ce8\u610f\uff0c\u5982\u679c\u4ed6**\u6709\u4e00\u79cd\u65b9\u6848\u80fd\u591f\u6ee1\u8db3 \"Win\" \u7684\u6761\u4ef6\uff0c\u8fd9\u65f6\u5373\u4f7f\u6709\u73af\uff0c\u7ed3\u679c\u4ecd\u7136\u4e3a \"Win\"** \u3002\n## \u89e3\u6790\n\u9898\u76ee\u8981\u6c42\u5224\u65ad\u4ece\u8d77\u70b9\u8d70\u82e5\u5e72\u5947\u6570\u6b65\u6570\u80fd\u5426\u5230\u8fbe\u4e00\u4e2a\u65e0\u6cd5\u8d70\u7684\u70b9\uff0c\u5373**\u6ca1\u6709\u51fa\u5ea6**\u7684\u70b9\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5148\u6807\u8bb0\u4e0b\u6ca1\u6709\u51fa\u5ea6\u7684\u70b9\uff0c\u518d\u4ece\u8d77\u70b9\u5f00\u59cb dfs \uff0c\u5224\u65ad\u6709\u6ca1\u6709\u4e00\u6b21\u8d70\u5230\u6ca1\u6709\u51fa\u5ea6\u7684\u70b9\u65f6\u6b65\u6570\u4e3a\u5947\u6570\u6b65\u5373\u53ef\u3002\n\n\u7136\u800c\u5177\u4f53 dfs \u7684\u5b9e\u73b0\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\u3002\u9996\u5148\uff0c\u540c\u4e00\u4e2a\u70b9\u53ef\u80fd**\u65e2\u53ef\u4ee5\u5947\u6570\u6b65\u5230\u8fbe\uff0c\u4e5f\u53ef\u4ee5\u5076\u6570\u6b65\u5230\u8fbe**\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2a $tag_{0/1}$ \u6570\u7ec4\u8bb0\u5f55\uff0c\u7528 $0$ \u8868\u793a\u8be5\u70b9\u80fd\u591f\u7528\u5076\u6570\u6b65\u5230\u8fbe\uff0c\u7528 $1$ \u8868\u793a\u8be5\u70b9\u80fd\u591f\u7528\u5947\u6570\u6b65\u5230\u8fbe\u3002\u663e\u7136\uff0c\u8d77\u70b9\u662f $0$ \u6b65\uff0c\u4e3a\u5076\u6570\u3002\n\n\u7136\u540e\u641c\u7d22\u65f6\u4e3a\u4e86\u9632\u6b62\u88ab\u73af\u5361\u6b7b\u4ee5\u53ca\u6d6a\u8d39\u65f6\u95f4\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u53ca\u65f6\u505c\u6b62\u8d70\u91cd\u590d\u7684\u8def\u7ebf\u3002\u5bb9\u6613\u77e5\u9053\uff0c\u82e5**\u4e0b\u4e00\u4e2a\u70b9\u4e0e\u5f53\u524d\u70b9\u5947\u5076\u6027\u4e0d\u540c\u7684\u60c5\u51b5**\u5df2\u7ecf\u88ab\u8d70\u8fc7\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u5fc5\u8981\u8d70\u4e86\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u51fa \"Win\" \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5728 \"Win\" \u4e0d\u6210\u7acb\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece\u8d77\u70b9\u8dd1\u4e00\u904d tarjan \u5224\u65ad\u6709\u65e0\u73af\u5373\u53ef\u3002\u6709\u5373\u4e3a \"Draw\" \uff0c\u53cd\u4e4b\u4e3a \"Lose\"\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nconst int M=2e5+5;\nstruct edge{\n\tint to,next;\n}e[M];\nint n,m,cnt,head[N],st;\nint chu[N],ans[N],len;\nbool tag[N][3],win;\ninline void add(int x,int y){\n\te[++cnt].to=y;\n\te[cnt].next=head[x];\n\thead[x]=cnt;\n}\ninline void dfs(int u,int check){//check \uff1a0 \u5076\u6570\uff0c1 \u5947\u6570 \n\ttag[u][check]=true;\n\tans[++len]=u;\n\tif(win) return;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(tag[v][check^1]) continue;//\u82e5\u4e0b\u4e00\u4e2a\u70b9\u4e0e\u5f53\u524d\u70b9\u5947\u5076\u6027\u4e0d\u540c\u7684\u60c5\u51b5\u5df2\u7ecf\u88ab\u8d70\u8fc7 \n\t\tif(!chu[v]&&(!check)){//\u82e5\u8d70\u5230\u6ca1\u6709\u51fa\u5ea6\u7684\u70b9\u65f6\u6b65\u6570\u4e3a\u5947\u6570\u6b65\n\t\t\twin=true;\n\t\t\tprintf(\"Win\\n\");\n\t\t\tfor(int j=1;j<=len;j++){\n\t\t\t\tprintf(\"%d \",ans[j]);\n\t\t\t}\t\n\t\t\tprintf(\"%d\",v);\n\t\t}\n\t\tdfs(v,check^1); \n\t\tif(win) return;\n\t}\n\tlen--;\n}\nint dfn[N],low[N],tot,cot;\nbool insta[N],draw;\nstack<int> s;\ninline void paint(int u){\n\ts.pop();\n\tinsta[u]=false;\n}\ninline void tarjan(int u){\n\tdfn[u]=low[u]=++tot;\n\ts.push(u);\n\tinsta[u]=true;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(insta[v]){\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t}\n\tif(dfn[u]==low[u]){\n\t\tcot++;\n\t\tint CNT=1;\n\t\twhile(s.top()!=u){\n\t\t\tpaint(s.top());\n\t\t\tCNT++;\n\t\t}\n\t\tpaint(u);\n\t\tif(CNT>=2) draw=true; \n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,k;i<=n;i++){\n\t\tscanf(\"%d\",&k);\n\t\tchu[i]=k;\n\t\tfor(int j=1,x;j<=k;j++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tadd(i,x);\n\t\t}\n\t}\n\tscanf(\"%d\",&st);\n\tdfs(st,0);//\u6807\u8bb0\u5947\u5076 \n\tif(win)\n\t\treturn 0;\n\telse{\n\t\ttarjan(st);//\u627e\u73af \n\t\tif(draw){\n\t\t\tprintf(\"Draw\");\n\t\t}\n\t\telse printf(\"Lose\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1597047034,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF936B \u3010Sleepy Game\u3011"
    }
]