[
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u9996\u5148\u8981\u77e5\u9053\uff1a      \n```\n1.\u4f53\u91cd\u5927\u7684\u8001\u9f20\u4f1a\u5728\u4f53\u91cd\u5c0f\u7684\u8001\u9f20\u4e0a\u65b9\n2.\u5728\u4f53\u79ef\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u8dd1\u5f97\u5feb\u7684\u8001\u9f20\u5e94\u8be5\u5728\u66f4\u4e0a\u65b9\n3.\u7531\u4e8e\u662f\u540c\u65f6\u51fa\u53d1\uff0c\u6240\u4ee5\u8001\u9f20\u7684\u4f4d\u7f6e\u5e76\u4e0d\u5f88\u91cd\u8981\uff0c\u4ec5\u6709\u6392\u5e8f\u7684\u4f5c\u7528\n```\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u8fd9\u9053\u9898\u7684\u65b9\u6cd5\uff1a\n```\n1.\u6309\u7167\u4f53\u91cd\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n2.\u5f53\u4f53\u91cd\u76f8\u540c\u65f6\u6309\u7167\u901f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n3.\u4e8c\u5206\u7b54\u6848\u51fa\u603b\u65f6\u95f4\uff0c\u7136\u540e\u518d\u5224\u65ad\u662f\u5426\u53ef\u884c\n```\n\u6ce8\uff1a\u5224\u65ad\u53ef\u884c\u4e0e\u5426\u7684\u6761\u4ef6\u4e3a\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u53ea\u8001\u9f20\uff0c\u770b\u5b83\u662f\u5426\u6ee1\u8db3$j*h/v[i]<mid$   \n\u6709$<k$\u53ea\u8001\u9f20\u6ee1\u8db3\u6761\u4ef6\uff0c\u8bf4\u660e\u6539\u65f6\u95f4\u4e0d\u53ef\u884c\uff0c\u5426\u5219\u53ef\u884c      \n###  \u8bf7\u7279\u522b\u6ce8\u610f\uff1a \u65f6\u95f4\u6709\u53ef\u80fd\u662f\u5c0f\u6570\uff0c\u6240\u4ee5\u4e8c\u5206\u4e2d\u7684l,r,mid\u7686\u4e3adouble\u7c7b\u578b\n\u540c\u65f6\uff0c\u8fd9\u9053\u9898\u7684\u6570\u91cf\u7ea7\u6781\u5c0f\uff0c\u5e38\u6570\u5374\u4e0d\u5c0f\uff0c\u6240\u4ee5\u7279\u522b\u5efa\u8bae\u4e8c\u5206\u7b54\u6848\u4f7f\u7528$for$\u5faa\u73af\u7684\u5199\u6cd5\uff1a\u5982\u4e0b\u6240\u793a\uff08\u4ee3\u7801\u6765\u81ea\u7ea2\u540d\u5927\u4f6c[LuoShaoyin](https://www.luogu.com.cn/user/235868)\uff09~~\u4e3b\u8981\u662f\u6211\u7684\u4ee3\u7801\u592a\u4e11\u4e86QwQ~~\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define int long long\n#define double long double\n//\u8fd9\u91cc\u4e5f\u5c3d\u91cf\u5199\u6210long double\u6bd4\u8f83\u597d\nusing namespace std;\n\nconst int MAXN = 1e5 + 5;\nconst double eps = 1e-18;\n//\u8bf7\u4e8c\u5206\u7b54\u6848\u7528while\u7684\u7ae5\u978b\u6ce8\u610f\uff0c\u672c\u9898\u7684eps\u5efa\u8bae\u8bbe\u7f6e1e-15\u4e00\u4e0b\nint inline read(){\n\tint x = 0, f = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') f ^= (ch == '-'), ch = getchar();\n\twhile(ch >= '0' && ch <= '9') x = x * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -x : x;\n}\n//\u5feb\u8bfb\u677f\u5b50\uff0c\u4e0d\u8bf4\u4e86\nint n, k, h;\nstruct lem{\n\tint m, v, id;\n\tbool operator< (const lem & A) const{\n\t\treturn m == A.m ? v > A.v : m > A.m;\n\t}\n}a[MAXN];\n//\u7ed3\u6784\u4f53\nint ans[MAXN], sol[MAXN];\nbool check(double t){\n\tmemset(sol, 0, sizeof(sol));\n\tint i = 1;\n\tfor(int j = k; j; --j){\n\t\tbool b = false;\n\t\tfor(; i <= n; ++i)\n\t\t\tif((double)j * (double)h <= (double)a[i].v * (t + eps)) {\n\t\t\t\t//\u5316\u9664\u4e3a\u4e58\uff0c\u5199\u8fc7\u9006\u5143\u7684\u7ae5\u978b\u5e94\u8be5\u90fd\u77e5\u9053\u8fd9\u6709\u591a\u91cd\u8981\n\t\t\t\tsol[j] = a[i++].id;\n\t\t\t\tb = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(!b) return false;\n\t}\n\treturn true;\n}\n\nsigned main(){\n\tn = read(), k = read(), h = read();\n\tfor(int i = 1; i <= n; ++i) a[i].m = read();\n\tfor(int i = 1; i <= n; ++i) a[i].v = read();\n\tfor(int i = 1; i <= n; ++i) a[i].id = i;\n\tsort(a + 1, a + n + 1);\n\t\n\tdouble l = 0, r = k * h, mid;//\u6bcf\u5929\u4e00\u4e2a\u5361\u5e38\u5c0f\u6280\u5de7\uff0c\u52a8\u6001\u533a\u95f4\u8303\u56f4\n\tfor(int cnt = 1; cnt <= 300; ++cnt){\n\t\tmid = (l + r) / 2;\n\t\tif(check(mid)) r = mid, memcpy(ans, sol, sizeof(ans));\n\t\telse l = mid;\n\t}//\u5728\u8fd9\u91cc\uff0ccnt\u53ea\u7528\u904d\u5386300\u6b21\uff0c\u7cbe\u5ea6\u5374\u53ef\u4ee5\u8fbe\u52302e-80\u5de6\u53f3\uff0c\u9632\u6b62double\u7684\u7cbe\u5ea6\u88ab\u5361\u4e13\u7528\n\tfor(int i = 1; i <= k; ++i) printf(\"%lld \", ans[i]);\n\t//\u7279\u522b\u6ce8\u610f\uff0c\u672c\u9898\u9700\u8981\u5c06ans\u6309\u7167\u91cd\u91cf\u6392\u5e8f\u540e\u8f93\u51fa\u7f16\u53f7\n\treturn 233;\n}\n```\n",
        "postTime": 1603889180,
        "uid": 101742,
        "name": "\u6c64\u6c64tongtongTOT",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF163B \u3010Lemmings\u3011"
    },
    {
        "content": "\u73b0\u5c06\u6240\u6709\u65c5\u9f20\u6309\u7167\u4f53\u91cd\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u6700\u5c0f\u65f6\u95f4\u3002\n\n\u5982\u4f55check\u5f53\u524d\u4e8c\u5206\u7684\u65f6\u95f4\u662f\u5426\u53ef\u884c\uff1f\u679a\u4e3e\u9ad8\u5ea6$[h,k*h]$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9ad8\u5ea6\uff0c\u9009\u62e9\u4e00\u4e2a\u4f53\u91cd\u5c3d\u53ef\u80fd\u5c0f\u4e14\u53ef\u4ee5\u5728\u5f53\u524d\u4e8c\u5206\u65f6\u95f4\u5185\u722c\u5b8c\u7684\u65c5\u9f20\u3002\u5982\u679c\u4e0d\u80fd\u9009\u5230k\u53ea\u65c5\u9f20\u8bf4\u660e\u5f53\u524d\u65f6\u95f4\u4e0d\u53ef\u884c\u3002\n\n\u4f46\u662f\u7531\u4e8e\u6700\u5c0f\u65f6\u95f4\u6709\u53ef\u80fd\u4e0d\u662f\u6574\u6570\uff0c\u849f\u84bb\u7684\u6211\u53ea\u597d\u4e8c\u5206\u5b9e\u6570\u4e86\uff0c\u88ab\u6bd2\u7624\u7684CF\u51fa\u9898\u4eba\u5361\u4e86\u597d\u591a\u6b21...\u8be6\u60c5\u8bf7\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ld long double\n#define nb 100010\nusing namespace std;\n\nint n, k, h, cnt, tmp[nb], ans[nb];\nld eps;\n\nstruct lemming{\n\tint v, w, id;\n\tbool operator < (const lemming &tmp) const{\n\t\treturn w < tmp.w || (w == tmp.w && v < tmp.v); \n\t}\t// \u5c06\u65c5\u9f20\u6309\u7167\u4f53\u91cd\u6392\u5e8f\n}a[nb];\n\nbool check(ld x){\n\t// h * j / v <= x\n\tint now = 1;\n\tmemset(tmp, 0, sizeof(tmp));\n\tfor(int i = 1; i <= n; i++){\n\t\tif((ld)h * now <= (x + eps) * (ld)a[i].v){\n\t\t\ttmp[now++] = a[i].id;\n\t\t}\n\t}\n\treturn now > k;\n}\n\nint main(){\n\tcin >> n >> k >> h;\n\teps = (n >= 1000 ? 1e-15 : 1e-18);\n\t// \u7531\u4e8e\u8981\u4e8c\u5206\u5b9e\u6570\uff0c\u9700\u8981\u8003\u8651\u7cbe\u5ea6\u95ee\u9898\n\t// \u5982\u679c\u7cbe\u5ea6\u4f4e\u4f1a\u88ab\u6bd2\u7624\u6570\u636e\u5361\uff0c\u7cbe\u5ea6\u592a\u9ad8\u4f1a\u8d85\u65f6\uff0c\u4e8e\u662f\u9762\u5411\u6570\u636e\u7f16\u7a0b \n\tfor(int i = 1; i <= n; i++) a[i].id = i;\n\tfor(int i = 1; i <= n; i++) cin >> a[i].w;\n\tfor(int i = 1; i <= n; i++) cin >> a[i].v;\n\tsort(a + 1, a + n + 1);\n\tld l = 0, r = k * h;\n\twhile(l <= r - eps && cnt++ <= 1000){\n\t\t// \u5982\u679c\u4e8c\u5206\u6b21\u6570\u592a\u591a\u5c31\u7ec8\u6b62 \n\t\tld mid = (l + r) / 2;\n\t\tif(check(mid)){\n\t\t\tmemcpy(ans, tmp, sizeof(ans)); //\u66f4\u65b0\u7b54\u6848 \n\t\t\tr = mid;\n\t\t}\n\t\telse l = mid;\n\t}\n\tfor(int i = 1; i <= k; i++) cout << ans[i] << \" \";\n\treturn 0;\n}\n```\n",
        "postTime": 1603874110,
        "uid": 142338,
        "name": "pythoner713",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF163B \u3010Lemmings\u3011"
    }
]