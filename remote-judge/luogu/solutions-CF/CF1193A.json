[
    {
        "content": "## \u9898\u610f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u7ffb\u8f6c\u4e00\u4e9b\u8fb9\u4f7f\u5f97\u5176\u65e0\u73af\uff0c\u95ee\u6240\u6709\u65b9\u6848\u7684\u603b\u7ffb\u8f6c\u8fb9\u6570\u5bf9\u67d0\u4e2a\u6570\u53d6\u6a21\u540e\u7684\u7ed3\u679c\u3002\n\n## \u5206\u6790\n\n\u7531\u9898\u76ee\uff0c$m\\le\\dfrac{n(n-1)}{2}$\u3002\n\n\u5bf9\u4e8e\u524d\u4e24\u4e2a $n\\le6$ \u7684\u5b50\u4efb\u52a1\uff0c$m\\le15$\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u6bcf\u6761\u8fb9\u662f\u5426\u7ffb\u8f6c\u3002\n\n\u5224\u65ad\u4e00\u4e2a\u6709\u5411\u56fe\u662f\u5426\u5b58\u5728\u73af\uff0c\u53ef\u4ee5\u4f7f\u7528[\u62d3\u6251\u6392\u5e8f](https://oi-wiki.org/graph/topo/)\uff0c\u82e5\u539f\u56fe\u4e3a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\uff0c\u5219\u5c31\u80fd push \u8fdb\u53bb\u6240\u6709\u7684\u70b9\uff0c\u5219 $sum=n$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\times2^n)$\u3002\n\n## Code\uff0819ppt\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define mod 998244353\n#define N 22\n#define M 400 \nll ans = 0;\nvector<int> g[N];\nint x[M],y[M],deg[N],n,m;\nint main()\n{\n    //freopen(\"park.in\",\"r\",stdin);\n    //freopen(\"park.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    if(!m)\n\t{\n\t\tputchar('1');\n\t\treturn 0;\t\n\t} \n    for(int i = 0;i < m;++i)\n    {\n        scanf(\"%d%d\",&x[i],&y[i]);  \n        g[x[i]].push_back(y[i]);\n        g[y[i]].push_back(x[i]);\n    }\n    for(int t = 0;t < 1<<m;++t)\n    {\n        int cnt = 0,sum = 0;\n        for(int i = 1;i <= n;++i) g[i].clear();\n        for(int i = 1;i <= n;++i) deg[i] = 0;\n        for(int i = 0;i < m;++i)\n        {\n            if(t & (1<<i))\n            {\n                ++cnt;  \n                g[y[i]].push_back(x[i]);\n                ++deg[x[i]];\n            }   \n            else\n            {\n                g[x[i]].push_back(y[i]);\n                ++deg[y[i]];\n            }\n        }\n        queue<int> q;\n        for(int i = 1;i <= n;++i)\n            if(!deg[i])\n                q.push(i);\n        while(q.size())\n        {\n            ++sum;\n            int u = q.front();\n            q.pop();\n            for(auto v:g[u])\n                if(--deg[v] == 0)\n                    q.push(v);      \n        } \n        if(sum == n) ans = (ans + cnt) % mod;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\n## \u63a8\u5bfc\u7ed3\u8bba\n\n\u5148\u524d\u7f6e\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\uff0c\u7ffb\u8f6c\u6240\u6709\u8fb9\u540e\u4ecd\u662f\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09**\u3002\n\n\u7b80\u5355\u5730\u8bc1\u660e\u4e00\u4e0b\uff1a\u5bf9\u4e8e\u6709\u5411\u56fe\u4e2d\u7684\u4e00\u4e2a\u73af\uff0c\u7ffb\u8f6c\u6240\u6709\u8fb9\uff0c\u80af\u5b9a\u662f\u4e00\u4e2a\u73af\uff0c\u53ea\u662f\u65b9\u5411\u53cd\u4e86\u4e00\u4e0b\u3002\u6240\u4ee5\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u7684\u4e00\u4e2a\u73af\u4e5f\u5fc5\u7136\u8981\u7531\u4e00\u4e2a\u73af\u7ffb\u8f6c\u8fc7\u6765\u3002\n\n\u6240\u4ee5\u539f\u56fe\u5b58\u5728\u73af\u662f\u53cd\u56fe\u5b58\u5728\u73af\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u3002\n\n\u6240\u4ee5\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09 \u7ffb\u8f6c\u540e\u4e0d\u53ef\u80fd\u5b58\u5728\u73af\uff0c\u5373\u8fd8\u662f\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\u4e86\u3002\n\n## \u4f18\u5316\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u5982\u679c\u7ffb\u8f6c $p$ \u6761\u8fb9\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\uff0c\u90a3\u4e48\u5176\u53cd\u56fe\uff0c\u7ffb\u8f6c $m-p$ \u6761\u8fb9\u4e5f\u5fc5\u7136\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\u3002\n\n\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u5e73\u5747\u7ffb\u8f6c\u4e86 $\\frac{m}{2}$ \u6761\u8fb9\u3002\n\n\u6240\u4ee5\u9898\u76ee\u5c31\u8f6c\u5316\u6210\u4e86\uff1a\u7ffb\u8f6c\u4e00\u4e9b\u8fb9\uff0c\u6c42\u51fa\u6210\u4e3a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09 \u7684\u65b9\u6848\u4e2a\u6570\u4e58\u4e0a $\\frac{m}{2}$ \u5bf9\u67d0\u4e2a\u6570\u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n## \u601d\u8def\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fdb\u884c\u72b6\u6001\u538b\u7f29 DP \u4e86\u3002\n\n\u8bbe $dp_i$ \u4e3a\u72b6\u6001 $i$ \u6210\u4e3a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09 \u7684\u65b9\u6848\u6570\u91cf\u3002\n\n\u679a\u4e3e $i$ \u7684\u5b50\u96c6 $j$ \u8fdb\u884c\u8f6c\u79fb\uff0c**\u663e\u7136 $j$ \u5fc5\u5b9a\u4e3a\u72ec\u7acb\u96c6**\uff08\u8001\u751f\u5e38\u8c08\u4e86\uff09\n\u3002\n\n\u4f46\u662f\u8fd9\u6837\u6709\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u4f1a\u7b97\u91cd\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u5bb9\u65a5\u539f\u7406\uff0c\u6839\u636e\u96c6\u5408\u7684\u5927\u5c0f\u8fdb\u884c\u5bb9\u65a5\u3002\u5927\u5c0f\u4e3a\u5947\u6570\u5219\u52a0\uff0c\u5927\u5c0f\u4e3a\u5076\u6570\u5219\u51cf\u3002\n\n![\u5bb9\u65a5\u539f\u7406](https://imgconvert.csdnimg.cn/aHR0cDovL3d3dy5jcHBibG9nLmNvbS9pbWFnZXMvY3BwYmxvZ19jb20vdmljaS8wMDAucG5n?x-oss-process=image/format,png)\n\n\u539f\u56e0\u6bd4\u8f83\u5957\u8def\uff0c\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u8bb2\u5bb9\u65a5\u539f\u7406\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u7b80\u5355\u5730\u67e5\u770b[\u8fd9\u4e2a\u5e16\u5b50](https://www.luogu.com.cn/discuss/451465)\u3002\n\n\u6700\u7ec8\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(3^n+m\\times2^n)$\u3002\n\n\u6ce8\u610f\u5728\u6700\u540e\u7b54\u6848\u7684\u8ba1\u7b97\u4e2d\u4f7f\u7528**\u9006\u5143**\uff0c\u4e0d\u7136\u53ef\u80fd\u4f1a\u7b54\u6848\u9519\u8bef\u3002\n## AC code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define mod 998244353\n#define maxn 262145\n#define N 22\n#define M 400 \nbitset<maxn> p;\nll dp[maxn];\nint n,m,cnt[maxn],x[M],y[M];\nint main()\n{\n\t//freopen(\"park.in\",\"r\",stdin);\n\t//freopen(\"park.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tif(!m)\n\t{\n\t\tputchar('1');\n\t\treturn 0;\n\t}\n\tint k = 1<<n;\n\tfor(int i = 1;i <= m;++i) scanf(\"%d%d\",&x[i],&y[i]);\n\tfor(int i = 0;i < k;++i)\n\t{\n\t\tint sum = 0;\n\t\tfor(int j = i;j;j&=(j-1)) ++sum;\n\t\tif(sum & 1) cnt[i] = 1;\n\t\telse cnt[i] = -1;//\u786e\u5b9a\u5bb9\u65a5\u7cfb\u6570\n\t\tfor(int j = 1;j <= m;++j)\n\t\t\tif(i&(1<<x[j]-1)&&i&(1<<y[j]-1))\n\t\t\t{\n\t\t\t\tp[i] = 1;\n\t\t\t\tbreak;\t\t\n\t\t\t}\t//\u5224\u65ad\u72ec\u7acb\u96c6\n\t}\n\tdp[0] = 1ll;\n\tfor(int i = 1;i < k;++i)\n\t\tfor(int j = i;j;j = i&(j-1))\n\t\t\tif(!p[j])\n\t\t\t\tdp[i] = (dp[i] + dp[i^j] * cnt[j] + mod) % mod;\n\tprintf(\"%lld\",dp[k-1]*(mod+1)/2%mod*m%mod);//\u6ce8\u610f\u4f7f\u7528\u9006\u5143\n\treturn 0;\n}\n```",
        "postTime": 1668263005,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF1193a \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u7ffb\u8f6c\u4e00\u4e9b\u8fb9\u4f7f\u5f97\u5176\u65e0\u73af\uff0c\u95ee\u6240\u6709\u65b9\u6848\u7684\u603b\u7ffb\u8f6c\u8fb9\u6570\u5bf9\u67d0\u4e2a\u6570\u53d6\u6a21\u540e\u7684\u7ed3\u679c\u3002\n\n## \u5206\u6790\n\n\u7531\u9898\u76ee\uff0c$m\\le\\dfrac{n(n-1)}{2}$\u3002\n\n\u5bf9\u4e8e\u524d\u4e24\u4e2a $n\\le6$ \u7684\u5b50\u4efb\u52a1\uff0c$m\\le15$\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u6bcf\u6761\u8fb9\u662f\u5426\u7ffb\u8f6c\u3002\n\n\u5224\u65ad\u4e00\u4e2a\u6709\u5411\u56fe\u662f\u5426\u5b58\u5728\u73af\uff0c\u53ef\u4ee5\u4f7f\u7528[\u62d3\u6251\u6392\u5e8f](https://oi-wiki.org/graph/topo/)\uff0c\u82e5\u539f\u56fe\u4e3a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\uff0c\u5219\u5c31\u80fd push \u8fdb\u53bb\u6240\u6709\u7684\u70b9\uff0c\u5219 $sum=n$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\times2^n)$\u3002\n\n## Code\uff0819ppt\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define mod 998244353\n#define N 22\n#define M 400 \nll ans = 0;\nvector<int> g[N];\nint x[M],y[M],deg[N],n,m;\nint main()\n{\n    //freopen(\"park.in\",\"r\",stdin);\n    //freopen(\"park.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    if(!m)\n\t{\n\t\tputchar('1');\n\t\treturn 0;\t\n\t} \n    for(int i = 0;i < m;++i)\n    {\n        scanf(\"%d%d\",&x[i],&y[i]);  \n        g[x[i]].push_back(y[i]);\n        g[y[i]].push_back(x[i]);\n    }\n    for(int t = 0;t < 1<<m;++t)\n    {\n        int cnt = 0,sum = 0;\n        for(int i = 1;i <= n;++i) g[i].clear();\n        for(int i = 1;i <= n;++i) deg[i] = 0;\n        for(int i = 0;i < m;++i)\n        {\n            if(t & (1<<i))\n            {\n                ++cnt;  \n                g[y[i]].push_back(x[i]);\n                ++deg[x[i]];\n            }   \n            else\n            {\n                g[x[i]].push_back(y[i]);\n                ++deg[y[i]];\n            }\n        }\n        queue<int> q;\n        for(int i = 1;i <= n;++i)\n            if(!deg[i])\n                q.push(i);\n        while(q.size())\n        {\n            ++sum;\n            int u = q.front();\n            q.pop();\n            for(auto v:g[u])\n                if(--deg[v] == 0)\n                    q.push(v);      \n        } \n        if(sum == n) ans = (ans + cnt) % mod;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\n## \u63a8\u5bfc\u7ed3\u8bba\n\n\u5148\u524d\u7f6e\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\uff0c\u7ffb\u8f6c\u6240\u6709\u8fb9\u540e\u4ecd\u662f\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09**\u3002\n\n\u7b80\u5355\u5730\u8bc1\u660e\u4e00\u4e0b\uff1a\u5bf9\u4e8e\u6709\u5411\u56fe\u4e2d\u7684\u4e00\u4e2a\u73af\uff0c\u7ffb\u8f6c\u6240\u6709\u8fb9\uff0c\u80af\u5b9a\u662f\u4e00\u4e2a\u73af\uff0c\u53ea\u662f\u65b9\u5411\u53cd\u4e86\u4e00\u4e0b\u3002\u6240\u4ee5\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u7684\u4e00\u4e2a\u73af\u4e5f\u5fc5\u7136\u8981\u7531\u4e00\u4e2a\u73af\u7ffb\u8f6c\u8fc7\u6765\u3002\n\n\u6240\u4ee5\u539f\u56fe\u5b58\u5728\u73af\u662f\u53cd\u56fe\u5b58\u5728\u73af\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u3002\n\n\u6240\u4ee5\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09 \u7ffb\u8f6c\u540e\u4e0d\u53ef\u80fd\u5b58\u5728\u73af\uff0c\u5373\u8fd8\u662f\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\u4e86\u3002\n\n## \u4f18\u5316\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u5982\u679c\u7ffb\u8f6c $p$ \u6761\u8fb9\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\uff0c\u90a3\u4e48\u5176\u53cd\u56fe\uff0c\u7ffb\u8f6c $m-p$ \u6761\u8fb9\u4e5f\u5fc5\u7136\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09\u3002\n\n\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u5e73\u5747\u7ffb\u8f6c\u4e86 $\\frac{m}{2}$ \u6761\u8fb9\u3002\n\n\u6240\u4ee5\u9898\u76ee\u5c31\u8f6c\u5316\u6210\u4e86\uff1a\u7ffb\u8f6c\u4e00\u4e9b\u8fb9\uff0c\u6c42\u51fa\u6210\u4e3a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09 \u7684\u65b9\u6848\u4e2a\u6570\u4e58\u4e0a $\\frac{m}{2}$ \u5bf9\u67d0\u4e2a\u6570\u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n## \u601d\u8def\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fdb\u884c\u72b6\u6001\u538b\u7f29 DP \u4e86\u3002\n\n\u8bbe $dp_i$ \u4e3a\u72b6\u6001 $i$ \u6210\u4e3a\u6709\u5411\u65e0\u73af\u56fe \uff08DAG\uff09 \u7684\u65b9\u6848\u6570\u91cf\u3002\n\n\u679a\u4e3e $i$ \u7684\u5b50\u96c6 $j$ \u8fdb\u884c\u8f6c\u79fb\uff0c**\u663e\u7136 $j$ \u5fc5\u5b9a\u4e3a\u72ec\u7acb\u96c6**\uff08\u8001\u751f\u5e38\u8c08\u4e86\uff09\n\u3002\n\n\u4f46\u662f\u8fd9\u6837\u6709\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u4f1a\u7b97\u91cd\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u5bb9\u65a5\u539f\u7406\uff0c\u6839\u636e\u96c6\u5408\u7684\u5927\u5c0f\u8fdb\u884c\u5bb9\u65a5\u3002\u5927\u5c0f\u4e3a\u5947\u6570\u5219\u52a0\uff0c\u5927\u5c0f\u4e3a\u5076\u6570\u5219\u51cf\u3002\n\n![\u5bb9\u65a5\u539f\u7406](https://imgconvert.csdnimg.cn/aHR0cDovL3d3dy5jcHBibG9nLmNvbS9pbWFnZXMvY3BwYmxvZ19jb20vdmljaS8wMDAucG5n?x-oss-process=image/format,png)\n\n\u539f\u56e0\u6bd4\u8f83\u5957\u8def\uff0c\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u8bb2\u5bb9\u65a5\u539f\u7406\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u7b80\u5355\u5730\u67e5\u770b[\u8fd9\u4e2a\u5e16\u5b50](https://www.luogu.com.cn/discuss/451465)\u3002\n\n\u6700\u7ec8\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(3^n+m\\times2^n)$\u3002\n\n\u6ce8\u610f\u5728\u6700\u540e\u7b54\u6848\u7684\u8ba1\u7b97\u4e2d\u4f7f\u7528**\u9006\u5143**\uff0c\u4e0d\u7136\u53ef\u80fd\u4f1a\u7b54\u6848\u9519\u8bef\u3002\n## AC code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define mod 998244353\n#define maxn 262145\n#define N 22\n#define M 400 \nbitset<maxn> p;\nll dp[maxn];\nint n,m,cnt[maxn],x[M],y[M];\nint main()\n{\n\t//freopen(\"park.in\",\"r\",stdin);\n\t//freopen(\"park.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tif(!m)\n\t{\n\t\tputchar('1');\n\t\treturn 0;\n\t}\n\tint k = 1<<n;\n\tfor(int i = 1;i <= m;++i) scanf(\"%d%d\",&x[i],&y[i]);\n\tfor(int i = 0;i < k;++i)\n\t{\n\t\tint sum = 0;\n\t\tfor(int j = i;j;j&=(j-1)) ++sum;\n\t\tif(sum & 1) cnt[i] = 1;\n\t\telse cnt[i] = -1;//\u786e\u5b9a\u5bb9\u65a5\u7cfb\u6570\n\t\tfor(int j = 1;j <= m;++j)\n\t\t\tif(i&(1<<x[j]-1)&&i&(1<<y[j]-1))\n\t\t\t{\n\t\t\t\tp[i] = 1;\n\t\t\t\tbreak;\t\t\n\t\t\t}\t//\u5224\u65ad\u72ec\u7acb\u96c6\n\t}\n\tdp[0] = 1ll;\n\tfor(int i = 1;i < k;++i)\n\t\tfor(int j = i;j;j = i&(j-1))\n\t\t\tif(!p[j])\n\t\t\t\tdp[i] = (dp[i] + dp[i^j] * cnt[j] + mod) % mod;\n\tprintf(\"%lld\",dp[k-1]*(mod+1)/2%mod*m%mod);//\u6ce8\u610f\u4f7f\u7528\u9006\u5143\n\treturn 0;\n}\n```",
        "postTime": 1666655348,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF1193A \u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u4f5c\u4e3a\u672c\u9898\u7b2c\u4e00\u4e2a\u63d0\u4ea4\u7ffb\u8bd1\u7684\u4eba\uff08\u4e5f\u4e0d\u77e5\u9053\u73b0\u5728\u8fc7\u6ca1\u8fc7\uff09\u548c\u7b2c\u4e8c\u4e2aAC\u7684\u4eba\uff0c\u5148\u62a2\u7740\u53d1\u4e00\u4e0b\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u4e4d\u4e00\u770b\u9898\u9762\uff08\u56e0\u4e3a\u662f\u6211\u7ffb\u8bd1\u7684\uff09\u611f\u89c9\u9898\u76ee\u7206\u96be\uff08\u4e8b\u5b9e\u4e0a\u7684\u786e\u633a\u96be\u7684\uff09\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u4e0d\u9700\u8981\u786e\u5b9a\u8fd9\u5f20\u56fe\u7684\u6d77\u62d4\u9ad8\u5ea6\u5230\u5e95\u662f\u591a\u5c11\u3002\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u8fd9\u5f20\u56fe\u6ca1\u6709\u73af\u5373\u53ef\uff08\u7531\u6837\u4f8b\u8bf4\u660e\u53ef\u4ee5\u5f97\u51fa\uff0c\u73af\u662f\u7edd\u5bf9\u4e0d\u5408\u6cd5\u7684\uff09\u3002\u540c\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u53ea\u8981\u8fd9\u4e2a\u56fe\u4e0d\u5305\u542b\u73af\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56fe\u5c31\u7edd\u5bf9\u662f\u5408\u6cd5\u7684\u3002\n\n\u90a3\u4e48\u9898\u610f\u5c31\u53d8\u6210\u4e86\uff1a\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u968f\u4fbf\u6539\u8fb9\u7684\u65b9\u5411\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u662f\u4f7f\u56fe\u65e0\u73af\u7684\u8d21\u732e\u4e4b\u548c\u3002\n\n~~\u4f46\u662f\u849f\u84bb\u592a\u5f31\u4e86\uff0c\u81ea\u5df1\u53eaYY\u5230\u4e86\u4e0a\u9762\u7684\u6b65\u9aa4...~~\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u53bb\u60f3\uff0c\u5bf9\u4e8e\u4e00\u5f20\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u62c6\u6210\u82e5\u5e72\u4e2aDAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c\u8fd9\u4e9bDAG\u4ee5\u70b9\u96c6\u7684\u5f62\u5f0f\u51fa\u73b0\u3002\u786e\u5b9a\u4e00\u4e2aDAG\u4e3a\u521d\u59cb\u96c6\u5408\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\uff1a\u6211\u4eec\u628a\u5269\u4e0b\u7684DAG\u70b9\u96c6\u5206\u6279\u6b21\u52a0\u5165\u5230\u8fd9\u4e2a\u521d\u59cb\u96c6\u5408\u4e2d\uff0c\u4f46\u662f\uff0cDAG+DAG\u4e0d\u4e00\u5b9a\u8fd8\u662fDAG\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u52a0\u5165\u7684\u65f6\u5019\u8fdb\u884c\u5224\u65ad\u3002\u663e\u7136\uff0c\u5047\u5982\u6211\u4eec\u65b0\u52a0\u5165\u7684\u70b9\u7684\u51fa\u5ea6\u6216\u5165\u5ea6\u5168\u90e8\u4e3a0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u52a0\u5165\u540e\u7684\u539f\u59cb\u96c6\u5408\u5c31\u4f1a\u4f9d\u7136\u5408\u6cd5\u3002\n\n\u6ce8\u610f\u8fd9\u4e2a\u5173\u7cfb\u662f**\u6216**\uff01\u4e3a\u4ec0\u4e48\u5462\uff1f\u4ee5\u4e3a\u6211\u4eec\u53ea\u8981\u4fdd\u8bc1\u8fd9\u4e9b\u70b9\u7684\u51fa\u5ea6\u6216\u8005\u5165\u5ea6\u90fd\u4e3a0\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1\uff1a\u6211\u4eec\u5728\u94fe\u63a5\u7684\u65f6\u5019\u53ea\u8fde\u5b83\u4eec\u4e2d\u5ea6\u4e3a0\u7684\u90a3\u4e9b\uff0c\u800c\u90a3\u4e9b\u5ea6\u4e0d\u4e3a0\u7684\u5c31\u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u4f1a\u548c\u539f\u56fe\u6784\u6210\u73af\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u91c7\u7528DP\u6765\u89e3\u51b3\u65b9\u6848\u6570\u7684\u95ee\u9898\uff1a\u8bbeDP[a]\u4e3a\u96c6\u5408a\u4e3aDAG\u7684\u65b9\u6848\u603b\u6570\u3002\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u51fa\u73b0\uff1a\u4e00\u4e2a\u5408\u6cd5\u7684\u5c0f\u96c6\u5408\uff0c\u6211\u4eec\u65e2\u53ef\u4ee5\u628a\u5b83\u5206\u591a\u6b21\u4f9d\u6b21\u52a0\u5165\uff0c\u4e5f\u53ef\u4ee5\u628a\u5b83\u4e00\u6b21\u6027\u52a0\u5165\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u5229\u7528\u5bb9\u65a5\u539f\u7406\u3002\n\n\u601d\u8def\u53ca\u4ee3\u7801\u501f\u9274\u81ea@zryabc's blog\u3002\n\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define check(x,y) (((x)>>((y)-1))&1)\nusing namespace std;\nconst int mod=998244353;\nconst int maxn=1<<18|5;\nint n,m;\nint u[405],v[405];\nll dp[maxn];\nint cnt[maxn];\nbool mark[maxn];\nvoid add(ll &x,ll y)\n{\n    x+=y;\n    if(x>=mod)\n        x-=mod;\n    if(x<0)\n        x+=mod;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n        scanf(\"%d%d\",&u[i],&v[i]);\n    cnt[0]=-1;dp[0]=1;\n    for(int i=1;i<1<<n;i++)\n        cnt[i]=-cnt[i&(i-1)];\n    for(int i=1;i<1<<n;i++)\n        for(int j=1;j<=m;j++)\n            if(check(i,u[j]) && check(i,v[j]))\n            {\n                mark[i]=1;\n                break;\n            }\n    for(int i=1;i<1<<n;i++)\n        for(int j=i;j>=1;j=(j-1)&i)\n            if(!mark[j])\n                add(dp[i],dp[i^j]*cnt[j]);\n    printf(\"%lld\\n\",dp[(1<<n)-1]*m%mod*499122177%mod);\n    return 0;\n}\n```\n",
        "postTime": 1570176569,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1193A \u3010Amusement Park\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u5c06\u539f\u9898\u8f6c\u5316\u4e3a\u6c42\u6700\u540e\u5f62\u6210\u4e00\u4e2a DAG \u7684\u65b9\u6848\u6570\u3002\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u7ffb\u8f6c\u4e86 $x$ \u6761\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u7ffb\u8f6c\u5269\u4e0b $m - x$ \u6761\u8fb9\uff0c\u76f8\u5f53\u4e8e\u662f\u628a\u539f DAG \u6240\u6709\u5f97\u8fb9\u65b9\u5411\u53cd\u4e00\u4e0b\uff0c\u663e\u7136\u8fd8\u662f\u4e2a DAG\u3002\u4e8e\u662f\u7b54\u6848\u5c31\u662f\u65b9\u6848\u6570\u4e58\u4e0a $\\dfrac{m}{2}$\u3002\u539f\u95ee\u9898\u4fbf\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u73b0\u5728\u8981\u5c06\u5176\u4e2d\u7684\u6bcf\u6761\u8fb9\u5b9a\u4e00\u4e2a\u65b9\u5411\uff0c\u8981\u6c42\u6700\u7ec8\u5f62\u6210\u7684\u6709\u5411\u56fe\u6ca1\u6709\u73af\uff0c\u8bf7\u95ee\u6709\u591a\u5c11\u79cd\u65b9\u6848\uff1f\n\n\u5bf9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u800c\u8a00\uff0c\u80af\u5b9a\u5b58\u5728\u4e00\u4e9b\u8282\u70b9\u5165\u5ea6\u4e3a 0\uff0c\u800c\u6211\u4eec\u5220\u9664\u8fd9\u4e9b\u70b9\u540e\uff0c\u5269\u4e0b\u7684\u56fe\u4e00\u5b9a\u4e5f\u662f\u4e2a DAG\u3002\u53ea\u8981\u8fd9\u4e9b\u70b9\u662f\u72ec\u7acb\u96c6\uff08\u4e92\u76f8\u4e4b\u95f4\u6ca1\u6709\u8fb9\u76f8\u8fde\uff0c\u53ef\u4ee5 $O(2 ^ n \\times n^2)$ \u9884\u5904\u7406\uff09\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u79cd\u65b9\u5f0f\u786e\u5b9a\u4e0e\u8fd9\u4e9b\u70b9\u76f8\u8fde\u7684\u8fb9\u7684\u65b9\u5411\uff0c\u5e76\u4e14\u8fd9\u79cd\u65b9\u6848\u6709\u4e14\u4ec5\u6709\u4e00\u79cd\u3002\u90a3\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e9b\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u8fdb\u884c\u7edf\u8ba1\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u5bb9\u65a5\u3002\u8bbe\u8fd9\u4e9b\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u6570\u91cf\u4e3a $cnt$\uff0c\u90a3\u4e48\u5bb9\u65a5\u7cfb\u6570\u4e3a $(-1)^{cnt - 1}$\u3002\u5c31\u76f8\u5f53\u4e8e\u662f\u52a0\u4e0a\u9664\u53bb\u8fd9\u4e9b\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u7684 DP \u503c\uff0c\u518d\u4e58\u4e0a\u8fd9\u4e2a\u7cfb\u6570\u3002\u5177\u4f53\u7684\uff0c\u6211\u4eec\u91c7\u7528\u679a\u4e3e\u5b50\u96c6\u7684\u65b9\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(3^n + 2^n \\times n^2)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 998244353;\nint n, m, dp[1 << 18], a[20], g[1 << 18];\nbool in_s[1 << 18];\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 1, x, y; i <= m; ++i) {\n\t\tscanf(\"%d%d\", &x, &y);\n\t\t--x, --y;\n\t\ta[x] |= 1 << y;\n\t\ta[y] |= 1 << x;\n\t}\n\tfor (int s = 0; s < (1 << n); ++s)  {\n\t\tin_s[s] = 1;\n\t\tg[s] = __builtin_popcount(s) & 1 ? 1 : -1;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tfor (int j = i + 1; j < n; ++j)\n\t\t\t\tif ((s >> i & 1) && (s >> j & 1) && (a[i] >> j & 1)) {\n\t\t\t\t\tin_s[s] = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t}\n\tdp[0] = 1;\n\tfor (int s = 1; s < (1 << n); ++s)\n\t\tfor (int i = s; i; i = (i - 1) & s)\n\t\t\tif (in_s[i]) {\n\t\t\t\tdp[s] += g[i] * dp[s ^ i];\n\t\t\t\tif (dp[s] < 0) dp[s] += mod;\n\t\t\t\tdp[s] %= mod;\n\t\t\t}\n\tcout << 1ll * dp[(1 << n) - 1] * (mod + 1 >> 1) % mod * m % mod << endl;\n}\n```",
        "postTime": 1666655378,
        "uid": 162196,
        "name": "\u4f1f\u5927\u7684\u738b\u592b\u5b50",
        "ccfLevel": 6,
        "title": "CF1193A Amusement Park \u9898\u89e3"
    }
]