[
    {
        "content": "## Solution - CF260E\n\n[\u9898\u76ee\u8fde\u63a5](https://codeforces.com/problemset/problem/260/E)\n\n### \u9898\u610f\n\n\u5e73\u9762\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u8fd8\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $9$ \u7684\u6570\u5217 $a$ \u6ee1\u8db3 $\\sum_{i=1}^{9}a_i=n$.\n\n\u4f60\u9700\u8981\u753b\u6c34\u5e73\u548c\u7ad6\u76f4\u7684\u76f4\u7ebf\u5404\u4e24\u6761\uff0c\u5c06\u5e73\u9762\u5206\u4e3a $9$ \u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u7684\u70b9\u6570\u8bb0\u4e3a $b_1,b_2\\dots b_9$.\n\n\u8981\u6c42 $b$ \u662f $a$ \u7684\u4e00\u79cd\u6392\u5217. \u8bf7\u4f60\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u65b9\u6848\uff1b\u82e5\u65e0\u89e3\uff0c\u8f93\u51fa $-1$.\n\n### \u9898\u89e3\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd **\u6811\u72b6\u6570\u7ec4** \u7684\u505a\u6cd5.\n\n\u7531\u4e8e $9$ \u5f88\u5c0f\uff0c\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u79cd $a$ \u7684\u6392\u5217\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u53ef\u884c.\n\n\u5982\u679c\u76f4\u63a5\u5728\u7ebf\u67e5\u8be2\uff0c\u663e\u7136\u9700\u8981\u4e3b\u5e2d\u6570\u6765\u652f\u6301\u4e8c\u7ef4\u6570\u70b9\uff0c\n\n\u4f46\u5982\u679c\u6211\u4eec\u5148 **\u521d\u6b65\u5224\u65ad** \u4e00\u4e0b\u662f\u5426\u53ef\u884c\uff0c\u5c31\u662f *\u6a2a\u7ad6* \u7684\u4e09\u5927\u90e8\u5206\u662f\u5426\u6ee1\u8db3\u8981\u6c42\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u79bb\u6563\u5316+\u524d\u7f00\u548c $logn$ \u6c42\u51fa.\n\n\u7136\u540e\u628a\u53ef\u4ee5\u7684\u70b9\u79bb\u7ebf\u4e0b\u6765.  \u73b0\u5728\u7684\u70b9\u5206\u4e3a\u4e24\u79cd\uff1a\u539f\u6765\u7ed9\u7684 $n$ \u4e2a\u70b9\uff0c\u548c\u540e\u9762\u52a0\u8fdb\u6765\u9700\u8981\u5224\u65ad\u662f\u5426\u6709\u89e3\u7684\u70b9.\n\n\u6309\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u8fbe\uff0c\u7eb5\u5750\u6807\u4ece\u5c0f\u5230\u5927\u7ed9\u6240\u6709\u70b9\u6392\u4e2a\u5e8f\uff0c\n\n\u4f9d\u6b21\u626b\u8fc7\u6765\uff0c\n\n\u5982\u679c\u662f\u7b2c\u4e00\u79cd\u70b9\uff0c\u5c31\u6309 **\u7eb5\u5750\u6807** \u52a0\u5165\u6811\u72b6\u6570\u7ec4\u4e2d\uff1b\n\n\u5982\u679c\u662f\u7b2c\u4e8c\u4e2d\u70b9\uff0c\u5c31\u5224\u65ad \u6bd4\u5176 **\u7eb5\u5750\u6807** \u5c0f\u7684\u70b9\u7684\u6570\u91cf\u662f\u5426\u6ee1\u8db3\u8981\u6c42.\n\n\u7531\u4e8e\u5df2\u7ecf\u6392\u5e8f\uff0c\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u70b9 **\u6a2a\u5750\u6807** \u80af\u5b9a\u6bd4\u5f53\u524d\u70b9\u5c0f\uff0c\u53ea\u9700\u5173\u5fc3 **\u7eb5\u5750\u6807** \u5373\u53ef.\n\n### Code\n\n```cpp\nconst int N=1e5+5,M=4e6,mod=998244353;\nint n,cx,cy,cq=0;\n// \u4e00\u5171\u6700\u591a 2n \u79cd\u7ad6\u7ebf  \u539f\u6765\u7684 \u4e2d\u95f4\u7684\n// \u8ba9\u539f\u6765\u7684\u7ebf\u5168\u90e8\u90fd\u5728\u5076\u6570\u4e0b\u6807\nint X[N],pre_x[N];  \nint Y[N],pre_y[N];\nint a[10],pl[10],tot_p;\nmap<ll,int> mp;\n\nstruct coor \n{ \n    int x,y,num,b;\n}po[N],pin[M];\n\nstruct question\n{ \n    int x[4],y[4],b[4];\n}que[M/2];\n\nint tr[M*2],ok[M];\nvoid add(int x,int v) {\n    for(;x<=cy*2+1;x+=x&-x) tr[x]+=v;\n}\nint ask(int x) {\n    int res=0;\n    for(;x;x-=x&-x) res+=tr[x];\n    return res;\n}\n\nbool cmp(coor a,coor b) {\n    if(a.x!=b.x) return a.x<b.x;\n    else return a.y<b.y;\n}\nvoid solve() {\n    cin>>n;\n    for(int i=1;i<=n;++i) {\n        scanf(\"%d%d\",&po[i].x,&po[i].y);\n        X[i] = po[i].x;\n        Y[i] = po[i].y;\n    }\n    tot_p = n;\n    sort(X+1,X+n+1);\n    sort(Y+1,Y+n+1);\n    cx = unique(X+1,X+n+1)-X-1;\n    cy = unique(Y+1,Y+n+1)-Y-1;\n\n    for(int i=1;i<=n;++i) {\n        po[i].x = lower_bound(X+1,X+cx+1,po[i].x)-X;\n        po[i].y = lower_bound(Y+1,Y+cy+1,po[i].y)-Y;\n        pin[i].x=po[i].x*2;\n        pin[i].y=po[i].y*2;\n        pre_x[po[i].x]++;\n        pre_y[po[i].y]++;\n    }\n\n    for(int i=1;i<=cx;++i) pre_x[i]+=pre_x[i-1];\n    for(int i=1;i<=cy;++i) pre_y[i]+=pre_y[i-1];\n\n    for(int i=1;i<=9;++i) scanf(\"%d\",&a[i]),pl[i]=i;\n    \n    for(int fx,fy,i=1;i<=362880;++i,next_permutation(pl+1,pl+10)) {\n        ll key=0;\n        for(int j=1;j<=9;++j) key=(1ll*key*(n+1)%mod+1ll*a[pl[j]])%mod;\n        if(mp[key]) continue;\n        mp[key]=1;\n\n        int xx=0,yy=0;\n        int tx1,tx2,ty1,ty2;\n\n        xx = a[pl[1]]+a[pl[4]]+a[pl[7]];\n        fx = lower_bound(pre_x+1,pre_x+cx+1,xx)-pre_x;\n        if(pre_x[fx] == xx) tx1 = fx*2+1;\n        else {continue;}\n        xx += a[pl[2]]+a[pl[5]]+a[pl[8]];\n        fx = lower_bound(pre_x+1,pre_x+cx+1,xx)-pre_x;\n        if(pre_x[fx] == xx) tx2 = fx*2+1;\n        else {continue;}\n\n        yy = a[pl[1]]+a[pl[2]]+a[pl[3]];\n        fy = lower_bound(pre_y+1,pre_y+cy+1,yy)-pre_y;\n        if(pre_y[fy] == yy) ty1 = fy*2+1;\n        else {continue;}\n        yy += a[pl[4]]+a[pl[5]]+a[pl[6]];\n        fy = lower_bound(pre_y+1,pre_y+cy+1,yy)-pre_y;\n        if(pre_y[fy] == yy) ty2 = fy*2+1;\n        else {continue;}\n\n        /* \n        \u627e\u51fa\u6240\u6709 \u6ee1\u8db3\u5927\u5757\u7684\u8981\u6c42\u7684\u5212\u5206 -> \u5df2\u7ecf\u6ee1\u8db3\u4e866\u4e2a\u8981\u6c42\n        \u6bcf\u4e00\u79cd\u5212\u5206\u53ef\u4ee5\u53d8\u62104\u4e2a\u70b9\n        \u79bb\u7ebf\u4e0b\u6765\uff0c\u7136\u540e\u4e00\u8d77\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u53e6\u59163\u4e2a\u8981\u6c42\n        \u8868\u793a\u63d2\u5728 X[fx] / Y[fy] \u7684\u540e\u9762\n        */\n\n        ++cq;\n        que[cq].x[0] = tx2; que[cq].y[0] = ty2; que[cq].b[0] = a[pl[1]]+a[pl[4]]+a[pl[2]]+a[pl[5]];\n        que[cq].x[1] = tx1; que[cq].y[1] = ty1; que[cq].b[1] = a[pl[1]];\n        que[cq].x[2] = tx1; que[cq].y[2] = ty2; que[cq].b[2] = a[pl[1]]+a[pl[4]];\n        que[cq].x[3] = tx2; que[cq].y[3] = ty1; que[cq].b[3] = a[pl[1]]+a[pl[2]];\n\n\n        for(int j=0;j<=3;++j) {\n            tot_p++;\n            pin[tot_p].x=que[cq].x[j];\n            pin[tot_p].y=que[cq].y[j];\n            pin[tot_p].num=cq;\n            pin[tot_p].b=que[cq].b[j];\n        }\n    }\n    \n    sort(pin+1,pin+tot_p+1,cmp);\n\n    for(int i=1;i<=tot_p;++i) {\n        if(pin[i].x%2) \n        {   // \u8be2\u95ee\u70b9\n            if(ask(pin[i].y) == pin[i].b) ok[pin[i].num]++;\n            if(ok[pin[i].num] == 4) {\n                int op = pin[i].num;\n                printf(\"%0.9lf %0.9lf\\n\",1.0*(X[que[op].x[1]/2]+X[que[op].x[1]/2+1])/2,1.0*(X[que[op].x[3]/2]+X[que[op].x[3]/2+1])/2);\n                printf(\"%0.9lf %0.9lf\\n\",1.0*(Y[que[op].y[1]/2]+Y[que[op].y[1]/2+1])/2,1.0*(Y[que[op].y[2]/2]+Y[que[op].y[2]/2+1])/2);\n                return ;\n            }\n        }\n        else \n        {  // \u539f\u6765\u70b9\n            add(pin[i].y , 1);\n        }\n    }\n    cout<<\"-1\\n\";\n}\n```",
        "postTime": 1605678078,
        "uid": 95246,
        "name": "MoonPie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF260E \u3010Dividing Kingdom\u3011"
    }
]