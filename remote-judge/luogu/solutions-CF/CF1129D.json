[
    {
        "content": "\u6309\u7167\u626b\u63cf\u7ebf\u7684\u601d\u8def\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $i$\uff0c\u7ef4\u62a4\u4e00\u4e2a $c_j$ \u8868\u793a\u533a\u95f4 $[j,i]$ \u51fa\u73b0\u4e00\u6b21\u7684\u6570\u7684\u4e2a\u6570\u3002\u6bcf\u6b21\u7ed9\u533a\u95f4 $(\\mathrm{last}(\\mathrm{last}(i)),\\mathrm{last}(i)]$ $-1$\uff0c\u533a\u95f4 $(\\mathrm{last}(i),i]$ $+1$\u3002\n\n\u8f6c\u79fb $f_{i+1}$ \u65f6\u5c31\u662f\u6c42 $0\\dots i$ \u4e2d\u6ee1\u8db3 $c_j\\le k$ \u7684 $f_j$ \u4e4b\u548c\u3002\n\n\u5206\u5757\uff0c\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2a\u6876\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt n)$\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u5757\u5185 $c_i$ \u4e4b\u5dee\u81f3\u591a\u662f\u5757\u957f\uff0c\u6240\u4ee5\u7a7a\u95f4\u662f $\\mathcal O(n)$\u3002\u539f\u56e0\u8003\u8651 $c$ \u6570\u7ec4\u7684\u5dee\u5206\u4e2d\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u80fd\u662f $0$ \u6216 $1$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nconstexpr int P = 998244353;\n\nvoid inc(int &x, int y) {\n    x += y;\n    if (x >= P) x -= P;\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n\n    int n, m;\n    std::cin >> n >> m;\n    std::vector<int> a(n);\n    for (int i = 0; i < n; ++i) {\n        std::cin >> a[i];\n        --a[i];\n    }\n\n    std::vector<int> f(n + 1);\n    f[0] = 1;\n\n    int block = std::sqrt(n);\n    int tot = (n - 1) / block + 1;\n    std::vector<int> lb(tot), rb(tot);\n    for (int i = 0; i < tot; ++i) {\n        lb[i] = i * block;\n        rb[i] = std::min((i + 1) * block, n);\n    }\n    std::vector<int> c(n);\n    std::vector<std::vector<int>> sum(tot, std::vector<int>(block + 1));\n    std::vector<int> off(tot);\n    std::vector<int> tag(tot);\n\n    auto rebuild = [&](int x) {\n        std::fill(sum[x].begin(), sum[x].end(), 0);\n        for (int i = lb[x]; i < rb[x]; ++i) c[i] += tag[x];\n        tag[x] = 0;\n        off[x] = *std::min_element(c.begin() + lb[x], c.begin() + rb[x]);\n        for (int i = lb[x]; i < rb[x]; ++i) {\n            inc(sum[x][c[i] - off[x]], f[i]);\n        }\n        for (int i = 1; i <= block; ++i) inc(sum[x][i], sum[x][i - 1]);\n    };\n\n    auto modify = [&](int l, int r, int k) {\n        int x = l / block;\n        int y = (r - 1) / block;\n        if (x == y) {\n            for (int i = l; i < r; ++i) c[i] += k;\n            rebuild(x);\n            return;\n        }\n        for (int i = l; i < rb[x]; ++i) c[i] += k;\n        rebuild(x);\n        for (int i = x + 1; i < y; ++i) tag[i] += k;\n        for (int i = lb[y]; i < r; ++i) c[i] += k;\n        rebuild(y);\n    };\n\n    std::vector<int> pos(n, -1);\n    std::vector<int> last(n);\n    for (int i = 0; i < n; ++i) {\n        int x = i / block;\n        for (int j = c[i] - off[x]; j <= block; ++j) {\n            inc(sum[x][j], f[i]);\n        }\n\n        last[i] = pos[a[i]];\n        pos[a[i]] = i;\n        modify(last[i] + 1, i + 1, 1);\n        if (last[i] != -1) {\n            modify(last[last[i]] + 1, last[i] + 1, -1);\n        }\n        \n        for (int j = 0; j < x; ++j) {\n            int t = m - (off[j] + tag[j]);\n            if (t >= 0) {\n                inc(f[i + 1], sum[j][std::min(t, block)]);\n            }\n        }\n        for (int j = lb[x]; j <= i; ++j) {\n            if (c[j] + tag[x] <= m) {\n                inc(f[i + 1], f[j]);\n            }\n        }\n    }\n    std::cout << f[n] << '\\n';\n\n    return 0;\n}\n```",
        "postTime": 1644659917,
        "uid": 52243,
        "name": "RenaMoe",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1129D Isolation"
    },
    {
        "content": "\u8bbe $f_i$ \u8868\u793a\u524d $i$ \u4e2a\u6570\u5212\u5206\u7684\u7b54\u6848\uff0c$p_j$ \u8868\u793a $[j+1,i]$ \u51fa\u73b0\u6b21\u6570\u4e3a $1$ \u7684\u6570\u7684\u79cd\u7c7b\u3002\n\n\u5219\u6709\uff1a\n\n$$f_i=\\sum_{p_j\\leq k} f_j$$\n\n\u6211\u4eec\u8003\u8651 $p_j$ \u7684\u53d8\u5316\uff0c\u8bbe $\\text{pre}_i$ \u8868\u793a\u4e0a\u4e00\u4e2a\u548c\u7b2c $i$ \u4e2a\u6570\u76f8\u7b49\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u6ca1\u6709\u5219\u662f $0$\u3002\n\n\u5219 $[\\text{pre}_{\\text{pre}_i},\\text{pre}_i-1]$ \u4f4d\u7f6e\u4e0a\u7684 $p_i$ \u9700\u8981\u51cf\u4e00\uff0c$[\\text{pre}_i,i-1]$ \u4f4d\u7f6e\u4e0a\u7684 $p_i$ \u9700\u8981\u52a0\u4e00\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u8fd9\u6837\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4 $\\text{key}$ \u52a0\u51cf\u4e00\uff0c\u6c42 $\\text{key}$ \u5927\u4e8e\u7b49\u4e8e $k$ \u7684\u4f4d\u7f6e\u7684 $\\text{value}$ \u548c\u3002\n\n\u636e lxl \u8bf4\u8fd9\u4e2a\u73b0\u5728\u6ca1\u6709 $\\mathrm{polylog}$ \u505a\u6cd5\u3002\n\n\u6211\u4eec\u5c06\u5e8f\u5217\u5206\u5757\uff0c\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $s_i$ \u8868\u793a\u5757\u5185 $p=i$ \u7684\u4f4d\u7f6e $f$ \u4e4b\u548c\uff0c\u540c\u65f6\u7ef4\u62a4\u7b54\u6848 $\\text{tot}$\u3002\n\n\u4fee\u6539\u6574\u5757\u7684\u65f6\u5019\uff0c\u52a0\u4e00\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u51cf\u53bb $p=k$ \u7684\u8d21\u732e\uff0c\u51cf\u4e00\u5c31\u52a0\u4e0a $p=k+1$ \u7684\u8d21\u732e\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7528 $\\text{tag}$ \u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u504f\u79fb\u91cf\u3002\n\n\u96f6\u6563\u5757\u91cd\u5efa\u5373\u53ef\uff0c\u67e5\u8be2\u628a\u6bcf\u4e2a\u5757\u7684 $\\text{tot}$ \u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\sqrt n)$\u3002\n\n\u8fd9\u4e2a\u9898 $O(n\\sqrt n\\log n)$ \u662f\u4e0d\u592a\u5bb9\u6613\u901a\u8fc7\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int Maxn = 100505, p = 998244353;\nint n, k, bloc, per, cnt[Maxn], bel[Maxn], las[Maxn], pre[Maxn];\nlong long f[Maxn], tot[Maxn], tag[Maxn], sum[305][Maxn];\nvoid clear(int x)\n{\n\ttot[x] = 0;\n\tfor (int i = (x - 1) * per + 1; i <= x * per; i++)\n\t\tsum[x][cnt[i]] = 0;\n}\nvoid build(int x)\n{\n\tfor (int i = (x - 1) * per + 1; i <= x * per; i++)\n\t{\n\t\tcnt[i] += tag[x];\n\t\t(sum[x][cnt[i]] += f[i]) %= p;\n\t\tif (cnt[i] <= k) (tot[x] += f[i]) %= p;\n\t}\n\ttag[x] = 0;\n}\nvoid inc(int x)\n{\n\tif (k >= tag[x]) (tot[x] += p - sum[x][k - tag[x]]) %= p;\n\ttag[x]++;\n}\nvoid dec(int x)\n{\n\ttag[x]--;\n\tif (k >= tag[x]) (tot[x] += sum[x][k - tag[x]]) %= p;\n}\nvoid inc(int lt, int rt)\n{\n\tif (lt > rt) return ;\n\tif (bel[lt] == bel[rt])\n\t{\n\t\tclear(bel[lt]);\n\t\tfor (int i = lt; i <= rt; i++)\n\t\t\tcnt[i]++;\n\t\tbuild(bel[lt]);\n\t\treturn ;\n\t}\n\tclear(bel[lt]);\n\tfor (int i = lt; i <= bel[lt] * per; i++)\n\t\tcnt[i]++;\n\tbuild(bel[lt]);\n\tclear(bel[rt]);\n\tfor (int i = (bel[rt] - 1) * per + 1; i <= rt; i++)\n\t\tcnt[i]++;\n\tbuild(bel[rt]);\n\tfor (int i = bel[lt] + 1; i <= bel[rt] - 1; i++)\n\t\tinc(i);\n}\nvoid dec(int lt, int rt)\n{\n\tif (lt > rt) return ;\n\tif (bel[lt] == bel[rt])\n\t{\n\t\tclear(bel[lt]);\n\t\tfor (int i = lt; i <= rt; i++)\n\t\t\tcnt[i]--;\n\t\tbuild(bel[lt]);\n\t\treturn ;\n\t}\n\tclear(bel[lt]);\n\tfor (int i = lt; i <= bel[lt] * per; i++)\n\t\tcnt[i]--;\n\tbuild(bel[lt]);\n\tclear(bel[rt]);\n\tfor (int i = (bel[rt] - 1) * per + 1; i <= rt; i++)\n\t\tcnt[i]--;\n\tbuild(bel[rt]);\n\tfor (int i = bel[lt] + 1; i <= bel[rt] - 1; i++)\n\t\tdec(i);\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &k);\n\tbloc = min(300, (int)sqrt(n)), per = ceil(n / (double) bloc);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tpre[i] = las[x];\n\t\tlas[x] = i;\n\t\tint tmp = pre[pre[i]];\n\t\tif (!tmp) tmp++, cnt[0] -= (bool) pre[i];\n\t\tdec(tmp, pre[i] - 1);\n\t\ttmp = pre[i];\n\t\tif (!tmp) tmp++, cnt[0]++;\n\t\tinc(tmp, i - 1);\n\t\tfor (int j = 1; j <= bloc; j++)\n\t\t\t(f[i] += tot[j]) %= p;\n\t\tif (cnt[0] <= k) f[i]++;\n\t\tbel[i] = (i - 1) / per + 1;\n\t\tclear(bel[i]);\n\t\tbuild(bel[i]);\n\t}\n\tprintf(\"%lld\", f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1603164109,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1129D \u3010Isolation\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u770b\u5230\u9898\u76ee\u6ca1\u601d\u8def\uff1f\u76f4\u63a5\u5148\u4e0a**\u66b4\u529b**\u3002\u8fd9\u9053\u9898\u660e\u663e\u662f\u4e2a **dp**\u3002\n### \u72b6\u6001\n\u53ef\u4ee5\u5148\u8bbe\u8ba1\u51fa\u4e00\u4e2a dp \u7684\u72b6\u6001\uff1a  \n$f_i$ \u8868\u793a\u524d $i$ \u4e2a\u6570\u7684\u7b54\u6848\u3002\n### \u8f6c\u79fb\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $j\\left ( j\\le i \\right )$ \u82e5\u6ee1\u8db3 $\\forall k\\in \\left [ j,i \\right ],a_k$ \u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684 $k$ \u7684\u4e2a\u6570 $cnt \\le m$ \u90a3\u4e48 $f_i$ \u5c31\u53ef\u4ee5\u4ece $f_{j-1}$ \u8f6c\u79fb\u8fc7\u6765\uff0c\u90a3\u4e48 $f_i=\\sum_jf_{j-1}$ \uff08$j$ \u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff09\u3002\u8fd9\u6837\u66b4\u529b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^{2})$\uff08\u4ee3\u7801\u4e5f\u8d34\u5728 code \u91cc\u4e86\uff09\uff0c\u660e\u663e\u8fc7\u4e0d\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\n### \u4f18\u5316\n\u5728\u66b4\u529b\u8ba1\u7b97 $cnt$ \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5b9e\u9645\u662f\u5728**\u533a\u95f4 $\\left [ last_{last_i},last_i \\right ] $ \u4e0a\u7684\u6bcf\u4e00\u4e2a $cnt$ \u51cf\u4e00**\uff0c\u5728**\u533a\u95f4 $\\left ( last_i,i \\right ]$ \u4e0a\u7684\u6bcf\u4e00\u4e2a $cnt$ \u52a0\u4e00**\uff08$last_i$ \u8868\u793a\u4e0a\u4e00\u4e2a\u6570\u503c\u7b49\u4e8e $a_i$ \u7684\u6570\u7684\u4e0b\u6807\uff09\u3002\u7136\u540e\u5c31\u6709 $f_i=\\sum_{\\forall j \\in \\left [ 1,i \\right ] ,cnt_{j}\\le m}f_{j-1}$\uff08$cnt_{j}$ \u8868\u793a\u5728\u533a\u95f4 $\\left [ j,i \\right ]$ \u91cc\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u7684\u4e2a\u6570\uff09\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u60f3\u5230\u7528**\u5206\u5757**\u8fdb\u884c\u4f18\u5316\u3002**\u533a\u95f4\u4fee\u6539**\u548c**\u533a\u95f4\u67e5\u8be2 $\\sum_{\\forall j \\in \\left [ 1,i \\right ] ,cnt_{j}\\le m}f_{j-1}$**\u3002\u533a\u95f4\u67e5\u8be2\u53ea\u8981**\u66b4\u529b\u7ef4\u62a4**\u4e00\u4e2a $val_{i,j}$ \u8868\u793a\u7b2c $i$ \u5757\u5185\u7684 $\\sum_{cnt_x=j}f_{x-1}$ \uff08\u7531\u4e8e $cnt_x$ \u53ef\u80fd\u5c0f\u4e8e $0$ \u6240\u4ee5\u4e0b\u6807\u53f3\u79fb $n$\uff09\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u533a\u95f4\u4fee\u6539**\u66b4\u529b\u4fee\u6539**\u5373\u53ef\u3002\u8fd9\u6837**\u533a\u95f4\u4fee\u6539**\u548c**\u533a\u95f4\u67e5\u8be2**\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $O(\\sqrt{n})$\u3002\u4e8e\u662f\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a\u4e86 $O(n\\sqrt{n})$\uff08\u5c31\u80fd\u8fc7\u4e86\uff09\u3002\n## $code$\n```cpp\n//\u66b4\u529b \n/*\n#include <bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nconst int N = 2e5 + 5;\nconst ll mod = 998244353;\n\ninline ll read() {\n\tll x = 0, f = 1;\n\tchar ch = getchar();\n\tfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -f;\n\tfor (; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + (ch ^ 48);\n\treturn x * f;\n}\n\nint n, m, a[N];\nll f[N], zj[N];\n\nint main() {\n\tn = read();\n\tm = read();\n\tfor (int i = 1; i <= n; ++i) a[i] = read();\n\tf[0] = 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tmemset(zj, 0, sizeof(zj));\n\t\tint cnt = 0;\n\t\tfor (int j = i; j; --j) {\n\t\t\t++zj[a[j]];\n\t\t\tif (zj[a[j]] == 1) ++cnt;\n\t\t\tif (zj[a[j]] == 2) --cnt;\n\t\t\tif (cnt <= m) f[i] += f[j - 1] %= mod;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", f[n] % mod);\n\treturn 0;\n}\n*/\n//\u5206\u5757\u4f18\u5316 \n#include <bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nconst int N = 2e5 + 5;\nconst int M = 320;\nconst int mod = 998244353;\n\ninline int read() {\n\tint x = 0, f = 1;\n\tchar ch = getchar();\n\tfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -f;\n\tfor (; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + (ch ^ 48);\n\treturn x * f;\n}\n\nint pr[N], las[N], val[M][N], cnt[N], f[N], tag[M], T, Ans, n, k;\n\ninline int belong(int x) { return (x - 1) / T + 1; }\n\ninline void dec(int &a, int b) { a -= b; if (a < 0) a += mod; }\n\ninline void inc(int &a, int b) { a += b; if (a >= mod) a -= mod; }\n\ninline void Ins(int u, int v) {\n\tint bu = belong(u);\n\tcnt[u] -= tag[bu];\n\tinc(Ans, v);\n\tinc(val[bu][cnt[u] + n], v);\n}\n\ninline void Mdfs(int u, int v) {\n\tint bu = belong(u);\n\tif(cnt[u] + tag[bu] <= k) dec(Ans, f[u - 1]);\n\tdec(val[bu][cnt[u] + n], f[u - 1]);\n\tcnt[u] += v;\n\tif(cnt[u] + tag[bu] <= k) inc(Ans, f[u - 1]);\n\tinc(val[bu][cnt[u] + n], f[u - 1]);\n}\n\ninline void Mdf(int L, int R, int v) {\n\tif (L > R) return;\n\tint bl = belong(L), br = belong(R);\n\tif (bl + 1 >= br) for(int i = L; i <= R; ++i) Mdfs(i, v);\n\telse {\n\t\tfor (int i = L; i <= bl * T; ++i) Mdfs(i, v);\n\t\tfor (int i = (br - 1) * T + 1; i <= R; ++i) Mdfs(i, v);\n\t\tfor (int i = bl + 1; i < br; ++i) {\n\t\t\tif (~v) dec(Ans, val[i][k - tag[i] + n]);\n\t\t\telse inc(Ans, val[i][k - tag[i] + 1 + n]);\n\t\t\ttag[i] += v;\n\t\t}\n\t}\n}\n\nint main() {\n\tn = read();\n\tk = read();\n\tfor (int i = 1, a; i <= n; ++i) a = read(), pr[i] = las[a], las[a] = i;\n\tT = sqrt(n); n = n; f[0] = 1; Ins(1, 1);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tMdf(pr[i] + 1, i, 1);\n\t\tMdf(pr[pr[i]] + 1, pr[i], -1);\n\t\tIns(i + 1, f[i] = Ans);\n\t}\n\tprintf(\"%d\\n\", f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1668689037,
        "uid": 367677,
        "name": "lyt_awa",
        "ccfLevel": 5,
        "title": "CF1129D Isolation\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u770b\u89c1\u8fd9\u9898\u6211\u4eec\u80fd\u60f3\u5230\u7684\u80af\u5b9a\u662f\u4e00\u4e2a\u66b4\u529bdp\uff1a\n\n$dp[i]=\\sum_{j=0}^{i-1}[[j+1,i]\\text{\u6709\u4e0d\u8d85\u8fc7k\u4e2a\u53ea\u51fa\u73b01\u6b21\u7684}]dp[j]$\n\n\u7136\u540e\u6211\u4eec\u770b\u89c1\u51fa\u73b0\u6b21\u6570\u4e3a1\u5c31\u80fd\u60f3\u5230\u4ecepre\u5165\u624b\uff0c\u6709\u4e86\uff01\u6211\u4eec\u5f80\u53f3\u626b\uff0c\u7ef4\u62a4\u4e00\u4e2a$p_j$\u8868\u793a$[j+1,i]$\u5185\u6709\u591a\u5c11\u4e2a\u53ea\u51fa\u73b01\u6b21\u7684\u6570\uff0c\u6bcf\u626b\u5230\u4e00\u4e2a\u6570\u5c31\u8ba9$[pre_i,i-1]$\u7684$p_j$\u90fd+1\uff0c\u518d\u8ba9$[pre_{pre_i},pre_i-1]$\u7684$p_j$\u90fd-1\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u52a8\u6001\u7ef4\u62a4$p[]$\u4e86\u3002\n\n\u54ce\uff0c\u90a3\u4f60\u7b54\u6848\u600e\u4e48\u7ef4\u62a4\uff1f\u6211\u4eec\u4e0d\u662f\u8981\u901a\u8fc7p\u627e\u8f6c\u79fb\u5417\uff1f\n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u505a\u5230\u5f3a\u5236\u5728\u7ebf\u7684\u533a\u95f4\u52a0$p$\uff0c\u67e5\u8be2\u533a\u95f4$p$\u503c\u4e0d\u8d85\u8fc7$k$\u7684$dp$\u503c\u7684\u548c~~\u6240\u4ee5\u5c31\u5f3a\u884c\u628a\u8fd9\u4e2adp\u9898\u751f\u786c\u7684\u641e\u6210\u4e86\u6570\u636e\u7ed3\u6784\u9898~~\n\n\u5982\u679c\u4f60\u7ecf\u5e38\u505aynoi\u4e00\u7c7b\u7684\u9898\u7684\u8bdd\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u8fd9\u4e2a\u53ef\u4ee5\u5206\u5757\u3002\u6211\u5f00\u59cb\u5199\u4e86\u4e2a$O(n\\sqrt nlogn)$\u7684T\u7684\u98de\u8d77\u7684\u505a\u6cd5\u5c31\u662f\u5728\u6bcf\u5757\u4e0a\u6253\u52a0\u6807\u8bb0\uff0c\u7136\u540e\u6bcf\u5757\u7684\u5757\u5185\u6392\u5e8f\uff0c\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5bf9\u6bcf\u4e2a\u5757\u4e8c\u5206\uff0c\u4fee\u6539\u65f6\u66b4\u529b\u91cd\u6784\u3002\u5176\u5b9e\u53ef\u4ee5\u6362\u4e2a\u601d\u8def\u5c31\u662f\u54b1\u4eec\u5e76\u4e0d\u7528\u6bcf\u56de\u90fd\u628a\u6240\u6709\u5757\u90fd\u67e5\u8be2\u4e00\u904d\uff0c\u76f4\u63a5\u52a8\u6001\u4fee\u6539\u6240\u6709\u53ef\u884c\u7684\u4f4d\u7f6e\u7684dp\u7684\u548c\u5c31\u884c\u4e86\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a$f[i][j]$\u8868\u793a\u5757i\u5185$j+tag_i=p_k$\u7684\u6240\u6709\u7684k\u7684dp\u503c\u4e4b\u548c\uff0c\u6574\u5757\u4fee\u6539\u7684\u8bdd\uff0c\u56e0\u4e3a\u4f60\u662f+1\u6216\u8005-1\uff0c+1\u7684\u8bdd\u5c31\u628a\u539f\u6765$p_j=k$\u7684dp\u503c\u51cf\u6389\u5c31\u884c\u4e86\uff0c\u5373$f[i][k-tag_i]$\uff0c-1\u7684\u8bdd\u5c31\u628a\u539f\u6765$p_j=k+1$\u7684dp\u503c\u52a0\u56de\u6765\u5c31\u884c\u4e86\uff0c\u5373$f[i][j-tag_i+1]$\uff0c\u5c0f\u6bb5\u66b4\u529b\u7684\u65f6\u5019\u76f4\u63a5\u4fee\u6539$f$\u6570\u7ec4\uff0c\u5e76\u4e14\u5982\u679c\u5f00\u59cb\u5c0f\u4e8e\u7b49\u4e8ek\u6216\u8005\u5f00\u59cb\u5927\u4e8ek\u5c31\u4fee\u6539\u7b54\u6848\u5373\u53ef\u3002\u4e8e\u662f\u5c31$O(n\\sqrt n)$\u4e86\u3002\n\n\u54e6\u5bf9\u4e86\u8fd9\u9898\u7684\u7a7a\u95f4\u9700\u8981\u523b\u610f\u5361\u4e00\u5361\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define ll long long\n#define p 998244353\n#define blo 350\nusing namespace std;\nnamespace ywy {\n\tinline int get() {\n\t    int n = 0;\n\t    char c;\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            break;\n\t        if (c == '-')\n\t            goto s;\n\t    }\n\t    n = c - '0';\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 + c - '0';\n\t        else\n\t            return (n);\n\t    }\n\ts:\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 - c + '0';\n\t        else\n\t            return (n);\n\t    }\n\t}\n\tll dp[100001];\n\tint val[290][200001], tag[100001], f[100001], pre[100001], ints[100001], ld[100001];\n\tll ans = 0;\n\tint k, n;\n\tinline void add(int l, int r, int num) {\n\t    int lbd = l / blo, rbd = r / blo;\n\t    if (lbd == rbd) {\n\t        for (register int i = l; i <= r; i++) {\n\t            if (f[i] + tag[lbd] == k + 1 && num == -1)\n\t                ans = (ans + dp[i]) % p;\n\t            if (f[i] + tag[lbd] == k && num == 1)\n\t                ans = (ans + p - dp[i]) % p;\n\t            val[lbd][f[i] + 100000] = (val[lbd][f[i] + 100000] + p - dp[i]) % p;\n\t            f[i] += num;\n\t            val[lbd][f[i] + 100000] = (val[lbd][f[i] + 100000] + dp[i]) % p;\n\t        }\n\t        return;\n\t    }\n\t    for (register int i = l; i < (lbd + 1) * blo; i++) {\n\t        if (f[i] + tag[lbd] == k + 1 && num == -1)\n\t            ans = (ans + dp[i]) % p;\n\t        if (f[i] + tag[lbd] == k && num == 1)\n\t            ans = (ans + p - dp[i]) % p;\n\t        val[lbd][f[i] + 100000] = (val[lbd][f[i] + 100000] + p - dp[i]) % p;\n\t        f[i] += num;\n\t        val[lbd][f[i] + 100000] = (val[lbd][f[i] + 100000] + dp[i]) % p;\n\t    }\n\t    for (register int i = rbd * blo; i <= r; i++) {\n\t        if (f[i] + tag[rbd] == k + 1 && num == -1)\n\t            ans = (ans + dp[i]) % p;\n\t        if (f[i] + tag[rbd] == k && num == 1)\n\t            ans = (ans + p - dp[i]) % p;\n\t        val[rbd][f[i] + 100000] = (val[rbd][f[i] + 100000] + p - dp[i]) % p;\n\t        f[i] += num;\n\t        val[rbd][f[i] + 100000] = (val[rbd][f[i] + 100000] + dp[i]) % p;\n\t    }\n\t    for (register int i = lbd + 1; i < rbd; i++) {\n\t        if (num == 1)\n\t            ans = (ans + p - val[i][k - tag[i] + 100000]) % p;\n\t        if (num == -1)\n\t            ans = (ans + val[i][k - tag[i] + 100001]) % p;\n\t        tag[i] += num;\n\t    }\n\t}\n\tvoid ywymain() {\n\t    n = get();\n\t    k = get();\n\t    ans = 1;\n\t    dp[0] = 1;\n\t    val[0][100000] = 1;\n\t    for (register int i = 1; i <= n; i++) {\n\t        ints[i] = get();\n\t        pre[i] = ld[ints[i]];\n\t        ld[ints[i]] = i;\n\t    }\n\t    for (register int i = 1; i <= n; i++) {\n\t        add(pre[i], i - 1, 1);\n\t        if (pre[i])\n\t            add(pre[pre[i]], pre[i] - 1, -1);\n\t        dp[i] = ans;\n\t        ans = (ans + dp[i]) % p;\n\t        val[i / blo][100000] = (val[i / blo][100000] + dp[i]) % p;\n\t    }\n\t    cout << dp[n] << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1552139655,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1129D \u3010Isolation\u3011"
    },
    {
        "content": "\u4e00\u9053\u88f8\u7684 DP \u9898\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b $f_i= \\sum f_j$\uff0c\u5176\u4e2d $i$ \u5230 $j$ \u51fa\u73b0\u8fc7 $1$ \u6b21\u7684\u6570\u5c0f\u4e8e\u7b49\u4e8e $ k$\u3002\n\n\u770b $n \\le 10^5$ \u5bb9\u6613\u60f3\u5230\u5206\u5757\u3002\n\n\u53ef\u4ee5\u4ece\u5de6\u5230\u53f3\u8fdb\u884c DP\uff0c\u52a8\u6001\u7ef4\u62a4\u6bcf\u4e2a\u5de6\u7aef\u70b9\u5230 $i$ \u4ec5\u51fa\u73b0\u8fc7 $1$ \u6b21\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u53ea\u8981\u7ed9\u533a\u95f4 $[last_{last_i}+1,last_i]$ \u51cf $1$\uff0c$[last_i+1,i-1]$ \u52a0 $1$ \u5373\u53ef\u3002\n\n\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\sqrt{n}\\log{n})$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(register T &x)\n{\n\tregister T p = 1,num = 0;\n\tchar c = getchar();\n\twhile(c < '0'||c > '9')\n\t{\n\t\tif(c == '-') p = -1;\n\t\tc = getchar();\n\t}\n\twhile('0' <= c&&c <= '9')\n\t{\n\t\tnum = (num<<3)+(num<<1)+(c^48);\n\t\tc = getchar();\n\t}\n\tx = p * num;\n}\ntemplate<typename T>inline void write(register T x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) write(x/10);\n\tputchar(x%10^48);\n}\n#define F(i,a,b) for(register int i=a;i<=b;++i)\n#define D(i,a,b) for(register int i=b;i>=a;--i)\n#define mod 998244353\n#define ll long long\n#define N 100010\n#define K 320\nint f[N],c[N],id[N],lst[N],a[N],n,k,s;\nint b[K],add[K];\ninline void ADD(int &x,int y) \n{\n\tx += y;\n\tif(x >= mod) x -= mod;\n}\nstruct Seg\n{\n\tint sum[N];\n\tinline void update(int x,int y)\t \n\t{\n\t\tif(!y) return;\n\t\tif(y < 0) y += mod;\n\t\t++x;\n\t\twhile(x <= n+1)\n\t\t{\n\t\t\tADD(sum[x],y);\n\t\t\tx += x & -x;\n\t\t}\n\t}\n\tinline int query(int x)\n\t{\n\t\t++x;\n\t\tint ret = sum[0];\n\t\twhile(x)\n\t\t{\n\t\t\tADD(ret,sum[x]);\n\t\t\tx -= x & -x;\n\t\t}\n\t\treturn ret;\n\t}\n}tree[K];\ninline void update(int l,int r,int p)\n{\n\t--l,--r;\n\tif(l > r) return;\n\tif(l/s == r/s)\n\t{\n\t\tF(i,l,r) \n\t\t{\n\t\t\ttree[i/s].update(c[i],-f[i]);\n\t\t\tc[i] += p;\n\t\t\ttree[i/s].update(c[i],f[i]);\n\t\t}\n\t\treturn;\n\t}\n\tF(i,l,b[l/s+1]-1) \n\t{\n\t\ttree[i/s].update(c[i],-f[i]);\n\t\tc[i] += p;\t\n\t\ttree[i/s].update(c[i],f[i]);\n\t}\n\tF(i,l/s+1,r/s-1) add[i] += p;\n\tF(i,b[r/s],r) \n\t{\n\t\ttree[i/s].update(c[i],-f[i]);\n\t\tc[i] += p;\t\n\t\ttree[i/s].update(c[i],f[i]);\t\n\t}\n}\nint main() \n{\n\tread(n),read(k);\n\tF(i,1,n) read(a[i]);\n\ts = (int)sqrt(n);\n\tF(i,0,n) \n\t{\n\t\tlst[i] = id[a[i]];\n\t\tid[a[i]] = i;\t\t\n\t\tif(!b[i/s])\tb[i/s] = i;\t\t\n\t}\n\tb[0] = 0;\n\tb[n/s+1] = n+1;\n\tf[0] = 1;\n\ttree[0].update(0,1);\n\tF(i,1,n)\n\t{\n\t\tif(!lst[i]) update(1,i,1);\n\t\telse if(!lst[lst[i]]) update(1,lst[i],-1),update(lst[i]+1,i,1);\n\t\telse update(lst[lst[i]]+1,lst[i],-1),update(lst[i]+1,i,1);\n\t\tF(j,0,i/s- 1)\n\t\t{\n\t\t\tif(k - add[j] < 0) continue;\n\t\t\tADD(f[i],tree[j].query(k-add[j]));\t\n\t\t} \n\t\tF(j,b[i/s],i-1)\n\t\t{  \n\t\t\tif(c[j]+add[i/s] <= k) \n\t\t\t\tADD(f[i],f[j]);\t\n\t\t}\t\n\t\ttree[i/s].update(c[i],f[i]);\n\t}\n\twrite(f[n]);\n    return 0;\n}\n```\n",
        "postTime": 1669297347,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF1129D \u9898\u89e3"
    },
    {
        "content": "\u5206\u5757\u4f18\u5316 dp\u3002               \n\n~~\u521a\u521a\u7ffb\u4e86\u4e0b\u9898\u89e3\u533a\u8c8c\u4f3c\u4e0d\u662f\u6700\u6b63\u89e3\uff0c\u602a\u4e0d\u5f97\u6211\u88ab\u5361\u5e38\u4e86\u3002~~\n\n\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u4e1c\u897f\uff0c\u957f\u5f97\u5f88 dp\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u505a\u5b83\uff01              \n\n\u5b9a\u4e49 $dp_i$ \u8868\u793a\u4ee5\u5e8f\u5217\u4e2d\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u4e3a\u7ed3\u5c3e\u65f6\u7684\u65b9\u6848\u6570\uff0c\u5b9a\u4e49 $c_{l,r}$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u51fa\u73b0\u6070\u597d\u4e00\u6b21\u7684\u5143\u7d20\u4e2a\u6570\u3002          \n\n\u5219\u6211\u4eec\u5c31\u53ef\u4ee5\u968f\u4fbf\u505a\u4e00\u4e2a $O(n ^ 2)$ \u7684 dp \u4e86\uff0c\u5373\uff1a            \n\n$dp_i = \\sum_{j = 1} ^ i dp_{j - 1} \\times [c(j , i) \\leq k]$\n\n\u8003\u8651\u8fd9\u4e2a\u5f0f\u5b50\u957f\u5f97\u6781\u5176\u7b80\u5355\uff0c\u5982\u679c\u6211\u4eec\u80fd\u7ef4\u62a4\u6240\u6709\u7684 $c(l,r)$ \u5c31\u53ef\u4ee5\u5feb\u901f\u8f6c\u79fb\u4e86\u3002             \n\n\u6839\u636e dp \u7684\u8f6c\u79fb\u5f62\u5f0f\uff0c\u5f88\u81ea\u7136\u5730\u5c31\u60f3\u5230\u4e86\u626b\u63cf\u7ebf\u7ef4\u62a4 $c$ \u503c\uff0c\u5177\u4f53\u6211\u4eec\u679a\u4e3e $r$ \u8fd9\u4e00\u7ef4\uff0c\u6bcf\u6b21\u4efb\u610f\u4e00\u4e2a\u70b9\u7684 $v_i$ \u5b58\u50a8 $c(i,r)$\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u6570\u6700\u540e\u51fa\u73b0\u7684\u4e24\u4e2a\u4f4d\u7f6e\u8bb0\u4e3a $llst_x,lst_x$\uff0c\u90a3\u4e48\u5c06 $[llst_x + 1 , lst_x - 1]$ \u533a\u95f4\u7684 $v_i - 1$ \uff0c$[lst_x + 1 , i]$ \u533a\u95f4\u7684 $v_i + 1$ \u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e86\u3002       \n\n\u73b0\u5728\u95ee\u9898\u53d8\u6210\u4e86\uff1a\n\n\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u8868\u793a\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(x,y)$\uff0c\u4e00\u5171\u6709\u4e0e $n$ \u540c\u9636\u7684 $q$ \u6b21\u533a\u95f4\u5bf9 $x$ \u7ef4 $+1$ \u6216 $-1$\uff0c\u67e5\u8be2\u533a\u95f4\u5185\u6240\u6709\u6ee1\u8db3 $x_i \\leq k$ \u7684 $y_i$ \u4e4b\u548c\uff0c\u5176\u4e2d $k$ \u662f\u4e00\u4e2a\u5b9a\u503c\u3002                 \n\n\u5982\u679c\u5355\u4ece\u64cd\u4f5c\u53ea $+1$ \u6216 $-1$ \u4ee5\u53ca $k$ \u662f\u5b9a\u503c\u6765\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u5757\u7ef4\u62a4\u5757\u5185\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0c\u91cd\u6784\u65f6\u53ef\u4ee5\u901a\u8fc7\u5f52\u5e76\u6392\u5e8f\u505a\u5230\u5355\u6b21 $O(\\sqrt n)$ \u4fee\u6539\uff0c\u6574\u5757\u52a0\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5757\u5185\u6700\u540e\u4e00\u4e2a $x_i \\leq k$ \u7684\u6570\uff0c\u66b4\u529b\u632a\u52a8\u6307\u9488\uff0c\u663e\u7136\u662f\u5355\u6b21 $O(1)$ \u7684\uff0c\u7136\u540e\u7ef4\u62a4\u6bcf\u4e2a\u5757\u5185\u7b26\u5408\u6761\u4ef6\u7684 $y$ \u503c\u4e4b\u548c\u5373\u53ef\u3002\n\n\u4e2a\u4eba\u5b9e\u73b0\u662f\u4f7f\u7528\u7684\u662f\u94fe\u8868\u7ef4\u62a4\u6392\u5e8f\u6570\u7ec4\uff0c\u5f53\u7136\u6700\u6b63\u786e\u7684\u505a\u6cd5\u662f\u89c2\u5bdf\u5230\u5757\u5185\u7684 $v$ \u503c\u6781\u5dee\u4e0d\u8d85\u8fc7 $\\sqrt n$ \u540e\u5bf9\u6bcf\u4e2a\u5757\u5f00\u4e00\u4e2a\u5927\u5c0f\u4e3a $\\sqrt n$ \u7684\u6876\u5145\u5f53\u94fe\u8868\uff0c\u53ef\u4ee5\u5f97\u5230\u6781\u5c0f\u7684\u5e38\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\sqrt n)$\uff0c\u5927\u5e38\u6570\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\u3002\n\n```cpp\n/*\n\u53c8\u662f\u77e5\u9053\u4e86\u662f\u5206\u5757\u4f18\u5316 dp \u6765\u505a\u7684\u2026\u2026 \n\u8003\u8651\u4e00\u79cd\u6700\u7b80\u5355\u7684\u66b4\u529b\uff0c\u5373 dp_{i} \u8868\u793a\u4ee5 i \u4f5c\u4e3a\u7ed3\u5c3e\u7684\u65b9\u6848\u6570\n\u90a3\u4e48\u8f6c\u79fb\u662f dp_{i} = \\sum_{j = 1} ^ {i - 1} dp_{j} \\times c(j + 1 , i)\n\u8003\u8651 c \u51fd\u6570\u4e0d\u5177\u5907\u4ec0\u4e48\u5f88\u7279\u522b\u7684\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u5f97\u60f3\u5230\u4e00\u4e9b\u597d\u7684\u529e\u6cd5\u53bb\u7ef4\u62a4\u5b83\n\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u7ef4\u62a4\u4efb\u610f lst\uff0c\u5bf9\u4e8e lst \u524d\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u52a0 1 \n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5206\u5757\u540e\u5bf9\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2a\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6563\u5757\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u62c6\u51fa\u6765\u53cc\u6307\u9488\u62c9\u4e86\u91cd\u6784\uff0c\u5bf9\u4e8e\u6574\u5757\u6211\u4eec\u76f4\u63a5\u52a0\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u6bcf\u6b21\u5f80\u524d\u9762\u626b\u5373\u53ef \n\u65f6\u95f4\u590d\u6742\u5ea6 O(n \\sqrt n)\n\u597d\u597d\u597d\u524d\u9762\u8fd8\u8981\u51cf\u4e00\n\u90a3\u5c31\u628a\u989c\u8272\u6bb5\u90fd\u5408\u5728\u4e00\u8d77\u5199 \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\ninline int read() {\n    char ch = getchar();\n    int x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\ninline void write(int x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nconst int Len = 1e5 + 5 , mod = 998244353 , SIZE = 1025;\nint tim,n,k,t,sizt,pos[Len],a[Len],lst[Len],llst[Len],L[SIZE],R[SIZE],val[Len],add[SIZE],IDX[SIZE];\nlong long dp[Len],sum[Len],SUM[SIZE];\nstruct Node\n{\n\tint L,R,wh;long long SUM;\n\tNode(){L = R = wh = 0;}\n\tNode(int LL,int RR,int WH,long long sUM){L = LL , R = RR , wh = WH , sUM = SUM;}\n}Ud;\nvector<Node> Sot[SIZE];\nbool cmp(Node x,Node y){return val[x.wh] < val[y.wh];}\ninline void MOD(long long &x){x = (x % mod + mod) % mod;}\ninline void Recount(int p)\n{\n\tSUM[p] = 0 , IDX[p] = -2;\n\tfor(int i = 0; i < Sot[p].size() ; i ++) \n\t{\n\t\tUd = Sot[p][i];\n\t\tif(val[Sot[p][i].wh] + add[p] <= k) SUM[p] += dp[Sot[p][i].wh - 1] , MOD(SUM[p]);\n\t\telse \n\t\t{\n\t\t\tIDX[p] = i - 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(IDX[p] == -2) IDX[p] = Sot[p].size() - 1;\n}\nvoid Relist(int p)//\u91cd\u65b0\u5206\u6bb5 \n{\n\tint lst = 0;long long ks = 0;\n\tfor(int i = 0 ; i < Sot[p].size() ; i ++)\n\t{\n\t\tif(i == Sot[p].size() - 1 || val[Sot[p][i + 1].wh] != val[Sot[p][i].wh])//\u5206\u6bb5 \n\t\t{\n\t\t\tfor(int j = lst ; j <= i ; j ++) ks += dp[Sot[p][j].wh - 1] , MOD(ks);\n\t\t\tfor(int j = lst ; j <= i ; j ++) Sot[p][j].L = lst , Sot[p][j].R = i , Sot[p][j].SUM = ks;\n\t\t\tlst = i + 1;\n\t\t\tks = 0;\n\t\t}\n\t}\n}\nvoid newbuild(int p)\n{\n\tfor(int i = L[p] ; i <= R[p] ; i ++) Sot[p].push_back(Node(0 , 0 , i , 0));\n\tsort(Sot[p].begin() , Sot[p].end() , cmp);\n\tRelist(p) , Recount(p);\n}\ninline int Pre(int p,int bs){return Sot[p][bs].L - 1;}\ninline int To(int p,int bs){return Sot[p][bs].R + 1;}\nvoid upd(int p)\n{\n\t//if(p == 2) printf(\"%d %lld\\n\",IDX[p],SUM[p]);\n\t//if(tim == 10 && p == 2) printf(\"???%d %d %d\\n\",p,IDX[p],add[p]);\n\tif(IDX[p] == -1) \n\t{\n\t\tif(val[Sot[p][0].wh] + add[p] <= k) \n\t\t{\n\t\t\tSUM[p] += Sot[p][0].SUM , MOD(SUM[p]);\n\t\t\tIDX[p] = Sot[p][0].R;\n\t\t}\n\t\telse return;\t\n\t}\n\t/*if(tim == 10 && p == 2)\n\t{\n\t\t//printf(\"%lld %d\\n\",SUM[p],IDX[p]);\n\t\tfor(int j = 0 ; j < Sot[p].size() ; j ++) printf(\"???%d %d %d %lld\\n\",Sot[p][j].wh,Sot[p][j].L,Sot[p][j].R,Sot[p][j].SUM);\n\t}*/\n\twhile(IDX[p] >= 0 && val[Sot[p][IDX[p]].wh] + add[p] > k)\n\t{\n\t\t//printf(\"???%d %d %d %d %d %d %lld\\n\",tim,p,IDX[p],Sot[p][IDX[p]].wh,Sot[p][IDX[p]].L,Sot[p][IDX[p]].R,SUM[p]);\n\t\tSUM[p] -= Sot[p][IDX[p]].SUM , MOD(SUM[p]);\n\t\tIDX[p] = Pre(p , IDX[p]);\n\t}\n\twhile(To(p , IDX[p]) < Sot[p].size() && val[Sot[p][To(p , IDX[p])].wh] + add[p] <= k)\n\t{\n\t\tSUM[p] += Sot[p][To(p , IDX[p])].SUM , MOD(SUM[p]);\n\t\tIDX[p] = To(p , IDX[p]);\n\t}\n}\nvector<Node> vase1,vase2;\nint Bid[SIZE];\nvoid Rebuild(int p,int LL,int RR,int w)\n{\n\tvase1.clear() , vase2.clear();\n\tif(!Bid[p])\n\t{\n\t\tfor(int i = L[p] ; i <= R[p] ; i ++) if(LL <= i && i <= RR) val[i] += w;\n\t\treturn;\n\t}\n\tfor(int i = L[p] ; i <= R[p] ; i ++) val[i] += add[p];\n\tadd[p] = 0;\n\tfor(int i = 0 ; i < Sot[p].size() ; i ++) \n\t{\n\t\tif(LL <= Sot[p][i].wh && Sot[p][i].wh <= RR) vase2.push_back(Sot[p][i]) , val[Sot[p][i].wh] += w;\n\t\telse vase1.push_back(Sot[p][i]);\n\t}\n\tSot[p].clear();\n\tint idx1 = 0 , idx2 = 0;\n\twhile(idx1 < vase1.size() && idx2 < vase2.size()) \n\t{\n\t\tif(val[vase1[idx1].wh] < val[vase2[idx2].wh]) \n\t\t{\n\t\t\tSot[p].push_back(vase1[idx1]);\n\t\t\tidx1 ++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tSot[p].push_back(vase2[idx2]);\n\t\t\tidx2 ++;\n\t\t}\n\t}\n\twhile(idx1 < vase1.size()){Sot[p].push_back(vase1[idx1]);idx1 ++;}\n\twhile(idx2 < vase2.size()){Sot[p].push_back(vase2[idx2]);idx2 ++;}\n\tRelist(p) , Recount(p);\n}\ninline void Upd(int L,int R,int w)\n{\n\tint Ll = pos[L] , Rr = pos[R];\n\tif(Ll == Rr){Rebuild(Ll , L , R , w);return;}\n\tRebuild(Ll , L , R , w);\n\tfor(int i = Ll + 1 ; i <= Rr - 1 ; i ++) \n\t{\n\t\tadd[i] += w;\n\t\tupd(i);\n\t}\n\tRebuild(Rr , L , R , w);\n}\nint main()\n{\n\tn = read() , k = read();\n\tfor(int i = 1 ; i <= n ; i ++) a[i] = read();\n\tsizt = 200 , t = max(1 , n / sizt);\n\tfor(int i = 1 ; i <= t ; i ++) \n\t{\n\t\tL[i] = (i - 1) * sizt + 1;\n\t\tR[i] = i * sizt;\n\t}\n\tif(R[t] != n) R[t] = n;\n\tfor(int i = 1 ; i <= t ; i ++) \n\t\tfor(int j = L[i] ; j <= R[i] ; j ++) pos[j] = i;\n\tdp[0] = 1;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\ttim = i;\n\t\tif(pos[i - 1] && pos[i] != pos[i - 1]) newbuild(pos[i - 1]) , Bid[pos[i - 1]] = 1;\n\t\tint adL = lst[a[i]] + 1 , kL = llst[a[i]] + 1;long long res = 0;\n\t\t//printf(\"%d %d %d\\n\",i,adL,kL);\n\t\tUpd(adL , i , 1);\n\t\tif(kL <= adL - 1) Upd(kL , adL - 1 , -1);\n\t\tfor(int j = 1 ; j < pos[i] ; j ++) res += SUM[j] , MOD(res);\n\t\t//if(i == 10) for(int j = 1 ; j < pos[i] ; j ++) printf(\"!!!%d %lld\\n\",j,SUM[j]);\n\t\t//printf(\"%d:\\n\",i);\n\t\tfor(int j = L[pos[i]] ; j <= i ; j ++) if(val[j] + add[pos[j]] <= k) res += dp[j - 1] , MOD(res);\n\t\tdp[i] = res;\n\t\tllst[a[i]] = lst[a[i]];\n\t\tlst[a[i]] = i;\n\t\t//printf(\"%d %lld\\n\",i,dp[i]);\n\t}\n\tprintf(\"%lld\\n\",dp[n] % mod);\n\treturn 0;\n}\n```",
        "postTime": 1646298666,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1129D Isolation"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/1129/problem/D) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1129D)\n\n\u53c8\u72ec\u7acb\u5207\u4e86\u9053 *2900\uff08\n\n\u9996\u5148\u8003\u8651 $dp$\uff0c$dp_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u7684\u5212\u5206\u7684\u65b9\u5f0f\uff0c\u90a3\u4e48\u663e\u7136\u6709\u8f6c\u79fb $dp_i=\\sum\\limits_{j=0}^{i-1}dp_j[uni(j+1,i)\\le k]$\uff0c\u5176\u4e2d $uni(l,r)$ \u8868\u793a $[l,r]$ \u4e2d\u51fa\u73b0\u6070\u597d\u4e00\u6b21\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u66b4\u529b\u4e00\u8138\u8fc7\u4e0d\u53bb\uff0c\u8003\u8651\u4f18\u5316\u3002\u6211\u4eec\u5b9e\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $f_j=uni(j+1,i)$\uff0c\u90a3\u4e48\u4e0a\u5f0f\u53ef\u5199\u4f5c $dp_i=\\sum\\limits_{j=0}^{i-1}dp_j[f_j\\le k]$\uff0c\u800c\u6ce8\u610f\u5230\u6bcf\u6b21 $i$ \u6307\u9488\u7684\u53f3\u79fb\u5f15\u8d77 $f$ \u6570\u7ec4\u7684\u53d8\u5316\u5e94\u4e3a\u4e24\u4e2a\u533a\u95f4\u7684 $+1/-1$\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u8bb0 $pre_v$ \u8868\u793a $v$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c$pre\\_pre_v$ \u4e3a $v$ \u4e0a\u4e0a\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6307\u9488\u79fb\u5230 $i$ \u65f6 $f$ \u7684\u53d8\u5316\u5e94\u4e3a $[pre\\_pre_{a_i},pre_{a_i})$ \u5185\u7684 $f_j$ \u51cf $1$\uff0c$[pre_{a_i},i)$ \u5185\u7684 $f_j$ \u52a0 $1$\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u60f3\u901a\u3002\n\n\u4e8e\u662f\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff0c\u6709\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u6743\u503c $\\text{value}$ \u548c\u952e\u503c $\\text{key}$\uff0c\u6bcf\u6b21\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u533a\u95f4\u7684\u952e\u503c $+1/-1$ \u6216\u8005\u8be2\u95ee\u5e8f\u5217\u4e2d\u952e\u503c $\\le k$ \u7684\u5143\u7d20\u7684\u6743\u503c\u4e4b\u548c\uff0c\u6ce8\u610f\u5230\u8fd9\u4e1c\u897f\u65e2\u6d89\u53ca\u4e0b\u6807\u53c8\u6d89\u53ca\u503c\uff0c\u662f\u4e0d\u592a\u597d\u7528\u5e38\u89c4\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982\u7ebf\u6bb5\u6811/\u5e73\u8861\u6811\u4e4b\u7c7b\u7ef4\u62a4\u7684\uff0c\u56e0\u6b64\u8003\u8651\u786c\u6838\u6570\u636e\u7ed3\u6784\u2014\u2014\u5206\u5757\u3002\u6211\u4eec\u8bbe\u4e00\u4e2a\u9608\u503c $B$ \u5e76\u5c06\u539f\u5e8f\u5217\u5206\u6210 $B$ \u5757\uff0c\u5e76\u5bf9\u6bcf\u4e00\u5757\u5efa\u4e00\u4e2a BIT\uff0c\u6bcf\u6b21\u6211\u4eec\u6267\u884c\u533a\u95f4 $+v$ \u65f6\uff0c\u8fb9\u89d2\u5757\u5c31\u66b4\u529b\u4fee\u6539 $f_i$ \u5e76\u4fee\u6539 BIT \u91cc\u7684\u503c\uff0c\u4e2d\u95f4\u5757\u5c31\u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4 $tag_i$ \u5e76\u4ee4 $tag_i$ \u52a0\u4e0a $v$\uff0c\u67e5\u8be2\u65f6\u5c31\u679a\u4e3e\u6bcf\u4e00\u5757\uff0c\u5e76\u5728 BIT \u4e2d\u67e5\u8be2 $\\le k-tag_i$ \u6240\u6709\u6570\u7684\u548c\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $n\\sqrt{n\\log n}$\uff0c\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u8fc7\uff1f\n\n\u8003\u8651\u4f18\u5316\uff0c\u6ce8\u610f\u5230\u4e0a\u9762\u7684\u89e3\u6cd5\u5e76\u6ca1\u6709\u7528\u5230\u6bcf\u6b21\u52a0\u7684\u503c\u4e3a $\\pm 1$ \u8fd9\u4e00\u6027\u8d28\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86 BIT \u4e5f\u5c31\u591a\u4e86\u4e00\u4e2a $\\sqrt{\\log n}$ \u7684\u590d\u6742\u5ea6\u3002\u6211\u4eec\u8003\u8651\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u548c\u6570\u7ec4 $sum_{i,j}$ \u8868\u793a\u7b2c $i$ \u5757\u4e2d $f_k\\le j$ \u7684 $dp_k$ \u4e4b\u548c\uff0c\u90a3\u4e48\u7531\u4e8e\u52a0\u7684\u503c\u4e3a $\\pm 1$\uff0c\u6545\u6bcf\u6b21\u5bf9\u533a\u95f4\u4e2d\u4e00\u4e2a\u5143\u7d20\u66b4\u529b\u52a0\u503c\u7684\u65f6\u5019\uff0c\u6700\u591a\u4f1a\u5f15\u8d77\u4e00\u4e2a $sum_{i,j}$ \u7684\u53d8\u5316\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u4ee4 $f_j$ \u52a0\u4e0a $1$\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684 $sum_{i,f_j}$ \u4f1a\u51cf\u53bb $dp_j$\uff1b\u5982\u679c\u6211\u4eec\u4ee4 $f_j$ \u51cf\u53bb $1$\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684 $sum_{i,f_j-1}$ \u4f1a\u52a0\u4e0a $dp_j$\uff1b\u56e0\u6b64\u4fee\u6539\u5355\u4e2a\u5143\u7d20\u7684\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86 $\\mathcal O(1)$\uff0c\u603b\u590d\u6742\u5ea6\u4e5f\u5c31\u53d8\u6210\u4e86 $n\\sqrt{n}$\n\n\u8fd8\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u95ee\u9898\uff0c\u5c31\u662f\u5f53\u6211\u4eec\u8ba1\u7b97\u51fa $dp_i$ \u4e4b\u540e\uff0c\u5bf9\u5e94\u7684 $f_i$ \u663e\u7136\u662f $0$\uff0c\u800c\u6b64\u65f6\u8be5\u4f4d\u7f6e\u7684\u6743\u503c\u4e5f\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5373\u7531 $0$ \u53d8\u4e3a\u4e86 $dp_i$\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u8981\u904d\u5386 $j\\in[0,n]$ \u5e76\u4ee4 $sum_{b,j}$ \u52a0\u4e0a $dp_i$\uff0c\u5176\u4e2d $b$ \u4e3a $i$ \u6240\u5728\u7684\u5757\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u53c8\u4f1a\u9000\u5316\u5230 $n^2$\uff0c\u8fd9\u663e\u7136\u662f\u6211\u4eec\u6240\u4e0d\u613f\u610f\u770b\u5230\u7684\u3002\u4e0d\u8fc7\u89e3\u51b3\u65b9\u6cd5\u975e\u5e38 simple\uff0c\u6211\u4eec\u53ea\u9700\u5c06 $sum_{i,j}$ \u7684\u5b9a\u4e49\u6539\u4e3a\u7b2c $i$ \u5757\u4e2d $f_k\\ge j$ \u7684 $dp_k$ \u4e4b\u548c\uff0c\u67e5\u8be2\u65f6\u7ef4\u62a4\u4e00\u4e2a $tot_i$ \u8868\u793a\u8fd9\u5757\u4e2d\u6240\u6709\u7684 $dp_j$ \u4e4b\u548c\uff0c\u62ff\u8fd9\u5757\u4e2d\u6240\u6709\u7684 $dp_j$ \u4e4b\u548c\u51cf\u53bb\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u5373\u53ef\uff0c\u8fd9\u6837\u4fee\u6539\u8fd8\u662f $\\mathcal O(1)$ \u7684\uff0c\u4e0d\u8fc7\u6700\u540e\u6c42\u5b8c $dp_i$ \u4e4b\u540e\u7684\u904d\u5386\u8fc7\u7a0b\u5c31\u6ca1\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u6211\u4eec\u53ea\u7528\u4ee4 $sum_{b,0}$ \u52a0\u4e0a $dp_i$\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f\u8d27\u771f\u4ef7\u5b9e\u7684 $n\\sqrt{n}$ \u8fa3\uff08\n\n\u4ee3\u7801\u975e\u5e38\u597d\u5199\uff0c\u4e0d\u8fc7\u4f3c\u4e4e\u6709\u4e9b\u5361\u7a7a\u95f4\uff08\uff1f\uff09\uff0c\u800c\u4e14\u6211\u7684\u4f3c\u4e4e\u8dd1\u5f97\u633a\u5feb\uff1f\u6700\u6162\u7684\u4e00\u4e2a\u70b9\u624d\u8dd1\u4e86 249ms\uff0c\u76ee\u524d\u6d1b\u8c37 rk3\n\n```cpp\nconst int MAXN=1e5;\nconst int SQRT=316;\nconst int MOD=998244353;\nvoid add(int &x,int y){((x+=y)>=MOD)&&(x-=MOD);}\nint n,k,a[MAXN+5],blk_sz,blk_cnt,bel[MAXN+5];\nint L[SQRT+5],R[SQRT+5],sum[SQRT+5][MAXN+5];\nint cnt[MAXN+5],tag[SQRT+5],dp[MAXN+5],tot[SQRT+5];\nint pre[MAXN+5],pre_pre[MAXN+5];\nvoid add(int x,int y,int z){\n\tif(x>y) return;\n\tif(bel[x]==bel[y]){\n\t\tfor(int i=x;i<=y;i++){\n\t\t\tif(z==1) add(sum[bel[x]][++cnt[i]],dp[i]);\n\t\t\telse add(sum[bel[x]][cnt[i]--],MOD-dp[i]);\n\t\t}\n\t} else {\n\t\tfor(int i=x;i<=R[bel[x]];i++){\n\t\t\tif(z==1) add(sum[bel[x]][++cnt[i]],dp[i]);\n\t\t\telse add(sum[bel[x]][cnt[i]--],MOD-dp[i]);\n\t\t}\n\t\tfor(int i=L[bel[y]];i<=y;i++){\n\t\t\tif(z==1) add(sum[bel[y]][++cnt[i]],dp[i]);\n\t\t\telse add(sum[bel[y]][cnt[i]--],MOD-dp[i]);\n\t\t}\n\t\tfor(int i=bel[x]+1;i<bel[y];i++) tag[i]+=z;\n\t}\n}\nint calc(){\n\tint ret=0;\n\tfor(int i=0;i<=blk_cnt;i++){\n\t\tadd(ret,tot[i]);\n\t\tif(k-tag[i]+1>=0) add(ret,MOD-sum[i][k-tag[i]+1]);\n\t\telse add(ret,MOD-tot[i]);\n\t} return ret;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);dp[0]=1;\n\tblk_sz=(int)pow(n,0.5);blk_cnt=n/blk_sz+1;\n\tfor(int i=1;i<=blk_cnt;i++){\n\t\tL[i]=(i-1)*blk_sz;R[i]=min(i*blk_sz-1,n);\n\t\tfor(int j=L[i];j<=R[i];j++) bel[j]=i;\n\t} sum[1][0]=1;tot[1]=1;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++){\n\t\tadd(pre_pre[a[i]],pre[a[i]]-1,-1);add(pre[a[i]],i-1,1);\n\t\tpre_pre[a[i]]=pre[a[i]];pre[a[i]]=i;dp[i]=calc();\n\t\tadd(sum[bel[i]][0],dp[i]);add(tot[bel[i]],dp[i]);\n//\t\tprintf(\"%d\\n\",dp[i]);\n\t} printf(\"%d\\n\",dp[n]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1620488196,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1129D Isolation"
    },
    {
        "content": "\u8fd9\u7bc7\u9898\u89e3\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e0d\u662f\u6700\u4f18\uff0c\u800c\u4e14\u601d\u8def\u6709\u90e8\u5206\u4e0e\u53e6\u4e00\u7bc7\u9898\u89e3\u91cd\u590d\u3002\u4f46\u662f\u770b\u4e86\u6b64\u7bc7\u9898\u89e3\u540e\u6216\u8bb8\u53ef\u4ee5\u63d0\u9ad8\u5361\u5e38\u80fd\u529b\uff0c\u5728\u8003\u573a\u4e0a\u83b7\u5f97\u66f4\u591a\u7684\u610f\u60f3\u4e0d\u5230\u7684\u5206\u6570\u3002~~\u4f7f\u5f97\u66b4\u529b\u78be\u6807\u7b97~~\u3002\n\n\u6ce8\uff1a\u6b64\u7bc7\u9898\u89e3\u5728$n\\leq1e5$\u5f97\u60c5\u51b5\u4e0b\u65e0\u6cd5\u88abhack\u6210TLE\u3002\uff08\u6b22\u8fce\u6765hack\uff09\n \ndp\u65b9\u7a0b\u6bd4\u8f83\u663e\u7136\uff1a\u5176\u4e2d\u540e\u9762\u5f97\u90e8\u5206\u662f\u5e03\u5c14\u8868\u8fbe\u5f0f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5wm4zpqs.png)\n\n\n\u6211\u4eec\u8003\u8651\u7ef4\u62a4$p[i][j]$\u8868\u793a$[j+1,i]$\u5185\u51fa\u73b0\u6b21\u6570\u4e3a1\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a$p$\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e9b\u6027\u8d28\uff1a$p[i]$\u548c$p[i-1]$\u5728\u4e00\u90e8\u5206\u4e0a\u662f\u76f8\u540c\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u7ef4\u62a4\u4e00\u4e2a\u7c7b\u4f3c\u5e8f\u5217\u81ea\u52a8\u673a\u7684\u4e1c\u897f\uff0c$pre[i]$\u8868\u793a\u7b2ci\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7b2c\u4e00\u4e2a\u51fa\u73b0$a[i]$\u8fd9\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u53ef\u4ee5$O(n)$\u6c42\u51fa\u3002\n\n\u90a3\u4e48$p[i]$\u548c$p[i-1]$\u7684\u533a\u522b\u5728\u4f55\u5904\u5462\uff1f\u6211\u4eec\u53d1\u73b0\uff0c$p[i]$\u4ec5\u4ec5\u662f\u901a\u8fc7\u628a$p[i-1]$\u7684$[pre_i,i-1]$\u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709\u6570$+1$\uff0c\u628a$p[i-1]$\u7684$[pre_{pre_i},pre_i-1]$\u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709\u6570$-1$\u53d8\u6210\u7684\u3002\u6240\u4ee5$p$\u53ef\u4ee5\u6eda\u6389\u4e00\u7ef4\n\n\u7136\u540e\u6574\u4f53\u8003\u8651\uff0c\u53d1\u73b0\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u5f97\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u6743\u503c\u5c0f\u4e8e\u7b49\u4e8ek\u7684\u4ef7\u503c\u4e4b\u548c\uff0c\u5e76\u80fd\u505a\u5230\u533a\u95f4\u52a0\u3001\u533a\u95f4\u51cf\u3002\n\n\u53c2\u8003[P2801 \u6559\u4e3b\u7684\u9b54\u6cd5](https://www.luogu.com.cn/problem/P2801)\u6211\u4eec\u77e5\u9053\u5206\u5757\u53ef\u4ee5\u5728$O(n\\sqrt n log_2n)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u5b8c\u6210\u8fd9\u4e2a\u4e8b\u60c5\u3002\n\n\u867d\u7136\u53e6\u4e00\u7bc7\u9898\u89e3\u8bf4\u8fc7\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/uqtorbsj.png)\n\n\u4f46\u662f\u8fd9\u4e2a\u505a\u6cd5\u771f\u7684\u53ef\u4ee5\u8fc7\u7684\uff0c\u8003\u573a\u4e0a\u6211\u4eec\u5982\u679c\u60f3\u4e0d\u5230\u6b63\u89e3\u96be\u9053\u4e0d\u662f\u5148\u5728\u6709\u53ef\u80fd\u901a\u8fc7\u7684\u7a0b\u5e8f\u4e0a\u5361\u5e38\u5361\u5230\u6781\u81f4\u5417\uff1f\n\n\u5148\u9644\u4e0aAC\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h> \n#define inc(i,a,b) for(register int i=a;i<=b;i++)\nusing namespace std;\nint n,k,a[100010],pre[100010],nxt[100010];\nconst int p=998244353;\nclass node{\n\tpublic:\n\tint p;\n\tlong long f,sum;\n\tbool operator <(const node& x){\n\t\treturn p<x.p;\n\t}\n}c[100010],d[100010];\nint block,tot,belong[100010],l[100010],r[100010],lazy[100010];\nvoid build(){\n\tblock=sqrt(n);\n\ttot=n/block;\n\tif(n%block) ++tot;\n\tinc(i,1,tot){\n\t\tl[i]=(i-1)*block+1;\n\t\tr[i]=i*block;\n\t}\n\tl[1]=0;\n\tr[tot]=n; belong[0]=1;\n\tinc(i,1,n) belong[i]=(i-1)/block+1;\n}\nvoid add(int x,int y,int goal){\n\tif(y<x) return;\n\tif(belong[x]==belong[y]){\n\t\tinc(i,x,y) c[i].p+=goal;\n\t\tinc(i,l[belong[x]],r[belong[x]]) d[i]=c[i];\n\t\tsort(d+l[belong[x]],d+r[belong[x]]+1);\n\t\td[l[belong[x]]].sum=d[l[belong[x]]].f;\n\t\tinc(i,l[belong[x]]+1,r[belong[x]]) d[i].sum=(d[i-1].sum+d[i].f)%p;\n\t\treturn;\n\t}\n\tinc(i,x,r[belong[x]]) c[i].p+=goal;\n\tinc(i,l[belong[x]],r[belong[x]]) d[i]=c[i];\n\tsort(d+l[belong[x]],d+r[belong[x]]+1);\n\td[l[belong[x]]].sum=d[l[belong[x]]].f;\n\tinc(i,l[belong[x]]+1,r[belong[x]]) d[i].sum=(d[i-1].sum+d[i].f)%p;\n\tinc(i,l[belong[y]],y) c[i].p+=goal;\n\tinc(i,l[belong[y]],r[belong[y]]) d[i]=c[i];\n\tsort(d+l[belong[y]],d+r[belong[y]]+1);\n\td[l[belong[y]]].sum=d[l[belong[y]]].f;\n\tinc(i,l[belong[y]]+1,r[belong[y]]) d[i].sum=(d[i-1].sum+d[i].f)%p;\n\tinc(i,belong[x]+1,belong[y]-1) lazy[i]+=goal;\n}\nlong long query(int x,int y){\n\tif(y<x) return 0;\n\tlong long ans=0;\n\tif(belong[x]==belong[y]){\n\t\tinc(i,x,y) if(lazy[belong[x]]+c[i].p<=k) ans=(ans+c[i].f)%p;\n\t\treturn ans;\n\t}\n\tinc(i,x,r[belong[x]]) if(lazy[belong[x]]+c[i].p<=k) ans=(ans+c[i].f)%p;\n\tinc(i,l[belong[y]],y) if(lazy[belong[y]]+c[i].p<=k) ans=(ans+c[i].f)%p;\n\tinc(i,belong[x]+1,belong[y]-1){\n\t\tint L=l[i],R=r[i],anss=n+1;\n\t\twhile(L<=R){\n\t\t\tint mid=(L+R)/2;\n\t\t\tif(lazy[i]+d[mid].p<=k){\n\t\t\t\tanss=mid;\n\t\t\t\tL=mid+1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tR=mid-1;\n\t\t\t}\n\t\t}\n\t\tans=(ans+d[anss].sum)%p;\n\t}\n\treturn ans;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tbuild();\n\tinc(i,1,n){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tc[0].f=1;\n\tinc(i,1,n){\n\t\tint now=pre[a[i]];\n\t\tadd(now,i-1,1); \n\t\tint nnow=nxt[now];\n\t\tadd(nnow,now-1,-1);\n\t\tc[i].f=query(0,i-1);\n\t\tinc(j,l[belong[i]],r[belong[i]]) d[j]=c[j];\n\t\tsort(d+l[belong[i]],d+r[belong[i]]+1);\n\t\td[l[belong[i]]].sum=d[l[belong[i]]].f;\n\t\tinc(j,l[belong[i]]+1,r[belong[i]]) d[j].sum=(d[j-1].sum+d[j].f)%p;\n\t\tnxt[i]=pre[a[i]];\n\t\tpre[a[i]]=i;\t\t\n\t}\n\tcout<<c[n].f;\n}\n```\n\u7136\u540e\u6211\u4eec\u7b80\u5355\u8bf4\u8bf4\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u54ea\u4e9b\u5361\u5e38\u6280\u5de7\uff1a\n\n1.\u5728\u7f13\u5b58\u548c\u5bc4\u5b58\u5668\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u4e00\u6761\u8bed\u53e5\u5185\u5927\u91cf\u7684\u5c55\u5f00\u8fd0\u7b97\u4f1a\u523a\u6fc0 CPU \u5e76\u53d1\n\n2.\u524d\u7f6e++/--\u8fd0\u7b97\u7b26\n\n3.\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u7684\u6548\u7387\u6bd4\u4f7f\u7528\u9759\u6001\u53d8\u91cf\u8981\u9ad8\uff08\u56e0\u4e3a\u5c40\u90e8\u53d8\u91cf\u662f\u5b58\u5728\u4e8e\u5806\u6808\u4e2d\u7684\uff0c\u5bf9\u5176\u7a7a\u95f4\u7684\u5206\u914d\u4ec5\u4ec5\u662f\u4fee\u6539\u4e00\u6b21\\(esp\\)\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u5373\u53ef.\u800c\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\u5806\u6808\u4e2d\u6700\u5927\u7684\u597d\u5904\u662f\uff0c\u51fd\u6570\u80fd\u91cd\u590d\u4f7f\u7528\u5185\u5b58\uff0c\u5f53\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u5b8c\u6bd5\u65f6\uff0c\u9000\u51fa\u7a0b\u5e8f\u5806\u6808\uff0c\u5185\u5b58\u7a7a\u95f4\u88ab\u56de\u6536\uff0c\u5f53\u65b0\u7684\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u5c40\u90e8\u53d8\u91cf\u53c8\u53ef\u4ee5\u91cd\u65b0\u4f7f\u7528\u76f8\u540c\u7684\u5730\u5740\u3002\u5f53\u4e00\u5757\u6570\u636e\u88ab\u53cd\u590d\u8bfb\u5199\uff0c\u5176\u6570\u636e\u4f1a\u7559\u5728\\(CPU\\)\u7684\u4e00\u7ea7\u7f13\u5b58\uff08\\(Cache\\)\uff09\u4e2d\uff0c\u8bbf\u95ee\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u800c\u9759\u6001\u53d8\u91cf\u5374\u4e0d\u5b58\u5728\u4e8e\u5806\u6808\u4e2d\u3002\uff09\n\n4.register\n\n\u6700\u540e\u9644\u4e0aCF\u4e0a\u4ea4\u9898\u8bb0\u5f55 [\u4f20\u9001\u95e8](https://codeforces.com/contest/1129/submission/86823093)\n\n\u548c\u6d1b\u8c37\u4ea4\u9898\u8bb0\u5f55  [\u4f20\u9001\u95e8](https://www.luogu.com.cn/record/35150217)",
        "postTime": 1594725020,
        "uid": 119189,
        "name": "\u795e\u4e4b\u53f3\u5927\u81e3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1129D \u3010Isolation\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u628a\u5b83\u5206\u6210\u82e5\u5e72\u5757\uff0c\u4f7f\u5f97\u6bcf\u4e00\u5757\u4e2d\u6070\u597d\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e $k$\uff0c\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u6848\u6570\uff0c\u5c06\u7b54\u6848\u5bf9 $998244353$ \u53d6\u6a21\u3002\n# \u601d\u8def\n\u9898\u76ee\u4e2d\u542b\u6709\u660e\u663e\u7684\u9636\u6bb5\uff0c\u5c31\u662f\u4e0b\u6807\u4ece $1$ \u5230 $i$ \u65f6\u7684\u65b9\u6848\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528 **DP** \u7684\u5199\u6cd5\uff0c\u6211\u4eec\u7528 $f_i$ \u6765\u8868\u793a\u6bcf\u4e00\u4e2a\u9636\u6bb5\uff0c\u8fb9\u754c\u503c $f_0=1$\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$f_i=\\sum_{0\\le j<i}^{} f_j$\uff08\u4e0b\u6807\u4e3a $j$ \u65f6\u5408\u6cd5\uff09\n\n\u6b64\u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u660e\u663e\u8fc7\u4e0d\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4ec0\u4e48\u65b9\u5f0f\u6765\u4f18\u5316\u8fd9\u79cd\u89e3\u6cd5\u5462\uff1f\n\n\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u60f3\u5230\uff0c\u6bcf\u4e00\u6b21\u8f6c\u79fb\u65f6\uff0c\u6211\u4eec\u6d6a\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u53bb\u641c\u7d22\u5408\u6cd5\u7684\u60c5\u51b5\uff0c\u4ece\u8fd9\u4e00\u70b9\u4e0b\u624b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4 $b$ \u6765\u8bb0\u5f55\u8f6c\u79fb $f_i$ \u65f6 $j$ \u5230 $i$ \u4e2d\u6709\u591a\u5c11\u4e2a\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u6570\u3002\n\n\u5728**\u533a\u95f4\u67e5\u8be2**\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528**\u5206\u5757**\u7684\u505a\u6cd5\uff0c\u7528 $pre_i$ \u6765\u8868\u793a\u4e0a\u4e00\u4e2a\u4e0e $a_i$ \u76f8\u540c\u7684\u6570\u7684\u4e0b\u6807\uff0c\u5c06\u6570\u7ec4 $b$ \u4e2d\u4e0b\u6807\u4e3a $pre_{pre_i}+1$ \u5230 $pre_i$ \u5185\u7684\u6570\u5168\u90e8\u51cf\u4e00\uff0c\u4e0b\u6807\u4e3a $pre_i+1$ \u5230 $i$ \u5185\u7684\u6570\u5168\u90e8\u52a0\u4e00\uff0c\u8fd9\u6837\u5c31\u80fd\u7528 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6765\u7ef4\u62a4 $b$ \u6570\u7ec4\u3002\n\n```\nvoid change(int l,int r,int x){\n\tif(l>r)return;\n\tif(bel[l]==bel[r]){\n\t\tfor(int i=l;i<=r;++i){\n\t\t\tb[i]+=x;\n\t\t}\n\t\tcopy(bel[l]);\n\t\treturn;\n\t}\n\tfor(int i=l;i<=R[bel[l]];++i){\n\t\tb[i]+=x;\n\t}\n\tcopy(bel[l]);\n\tfor(int i=L[bel[r]];i<=r;++i){\n\t\tb[i]+=x;\n\t}\n\tcopy(bel[r]);\n\tfor(int i=bel[l]+1;i<=bel[r]-1;++i){\n\t\tadd[i]+=x;\n\t}\n\treturn;\n}\n```\n\n\u540c\u7406\uff0c\u5728**\u533a\u95f4\u8be2\u95ee**\u65f6\uff0c\u5728\u6bcf\u4e00\u4e2a\u5757\u4e2d\u8fdb\u884c\u6392\u5e8f\uff0c\u505a\u4e00\u6b21**\u524d\u7f00\u548c**\u4f18\u5316\uff0c\u6700\u540e**\u4e8c\u5206**\u67e5\u627e\u7b54\u6848\uff0c\u8fd9\u6837\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86 $O(n \\sqrt n \\log n)$\uff0c\u7a0d\u5fae\u5361\u4e00\u4e0b\u5e38\u6570\u5c31\u80fd\u8fc7\u4e86\u3002\u6700\u540e\u6709\u4e00\u70b9\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u5982\u679c\u4e0b\u6807\u4e3a $j$ \u65f6\u5408\u6cd5\uff0c\u90a3\u4e48\u5b83\u8f6c\u79fb\u7684\u662f $f_{i-1}$ \u800c\u4e0d\u662f $f_i$\u3002\n# \u4ee3\u7801\n\u4e3b\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n```\nvoid init(){\n\tC=sqrt(n/3);\n\tfor(int i=1;i<=(n-1)/C+1;++i){\n\t\tL[i]=(i-1)*C+1;\n\t\tR[i]=i*C;\n\t}\n\tR[(n-1)/C+1]=n;\n\tfor(int i=1;i<=n;++i){\n\t\tbel[i]=(i-1)/C+1;\n\t}\n\tf[0]=1;\n\treturn;\n}\nvoid copy(int now){\n\tfor(int i=L[now];i<=R[now];++i){\n\t\tc[i]={b[i],f[i-1]};\n\t}\n\tsort(c+L[now],c+R[now]+1,cmp);\n\tp[L[now]]=c[L[now]].f;\n\tfor(int i=L[now]+1;i<=R[now];++i){\n\t\tp[i]=p[i-1]+c[i].f;\n\t\tif(p[i]>=mod)p[i]-=mod;\n\t}\n\treturn;\n}\nvoid change(int l,int r,int x){\n\tif(l>r)return;\n\tif(bel[l]==bel[r]){\n\t\tfor(int i=l;i<=r;++i){\n\t\t\tb[i]+=x;\n\t\t}\n\t\tcopy(bel[l]);\n\t\treturn;\n\t}\n\tfor(int i=l;i<=R[bel[l]];++i){\n\t\tb[i]+=x;\n\t}\n\tcopy(bel[l]);\n\tfor(int i=L[bel[r]];i<=r;++i){\n\t\tb[i]+=x;\n\t}\n\tcopy(bel[r]);\n\tfor(int i=bel[l]+1;i<=bel[r]-1;++i){\n\t\tadd[i]+=x;\n\t}\n\treturn;\n}\nlong long query(int x){\n\tlong long ans=0,X=0;\n\tfor(int i=1;i<=bel[x]-1;++i){\n\t\tint l=L[i],r=R[i],now=-1;\n\t\twhile(l<=r){\n\t\t\tint mid=(l+r)/2;\n\t\t\tif(c[mid].b+add[bel[mid]]<=m){\n\t\t\t\tnow=mid;\n\t\t\t\tl=mid+1;\n\t\t\t}\n\t\t\telse r=mid-1;\n\t\t}\n\t\tif(now==-1)continue;\n\t\tans+=p[now];\n\t\tif(ans>=mod)ans-=mod;\n\t}\n\tfor(int i=L[bel[x]];i<=x+X&&i<=R[bel[x]];++i){\n\t\tif(c[i].b+add[bel[x]]==0){\n\t\t\t++X;\n\t\t\tans+=c[i].f;\n\t\t\tif(ans>=mod)ans-=mod;\n\t\t\tcontinue;\n\t\t}\n\t\tif(c[i].b+add[bel[i]]<=m){\n\t\t\tans+=c[i].f;\n\t\t\tif(ans>=mod)ans-=mod;\n\t\t}\n\t}\n\treturn ans;\n}\nint main(){\n\tread(n);\n\tread(m);\n\tfor(int i=1;i<=n;++i){\n\t\tread(a);\n\t\tpre[i]=mark[a];\n\t\tmark[a]=i;\n\t}\n\tinit();\n\tfor(int i=1;i<=n;++i){\n\t\tchange(pre[pre[i]]+1,pre[i],-1);\n\t\tchange(pre[i]+1,i,1);\n\t\tf[i]+=query(i);\n\t\tif(f[i]>=mod)f[i]-=mod;\n\t}\n\twrite(f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1668831263,
        "uid": 698657,
        "name": "free_fall",
        "ccfLevel": 5,
        "title": "Isolation \u9898\u89e3"
    }
]