[
    {
        "content": "~~Codeforces\u7adf\u7136\u4e5f\u4f1a\u51fa\u7eaf\u56fe\u8bba\u9898~~\n\n\n------------\n\u8fd9\u9898\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u5957\u8def\uff0c\u5c31\u662f\u6c42\u4e24\u70b9\u4e4b\u95f4\u7ecf\u8fc7\u67d0\u4e00\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\n\n\u5047\u8bbe\u8fd9\u4e24\u70b9\u4e3a $x,y$\uff0c\u4e14\u5fc5\u987b\u7ecf\u8fc7\u7531\u70b9 $u$ \u8fde\u5411\u70b9 $v$ \u7684\u8fb9\uff0c\u90a3\u4e48\u4ece $x$ \u5230 $y$ \u7684\u6700\u77ed\u8def\uff08\u5c06\u56fe\u770b\u505a\u6709\u5411\u56fe\uff09\u80af\u5b9a\u80fd\u5212\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\u4ece $x$ \u5230 $u$\uff0c\u4ece $u$ \u5230 $v$\uff0c\u4ece $v$ \u5230 $y$\u3002\n\n\u4ece $u$ \u5230 $v$ \u7684\u957f\u5ea6\u5df2\u7ecf\u786e\u5b9a\uff0c\u5269\u4e0b\u4e24\u90e8\u5206\u8d2a\u5fc3\u5730\u8d70\u6700\u77ed\u8def\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a $dis(x,u)+dis(u,v)+dis(v,y)$\uff0c\u5176\u4e2d $dis(p,q)$ \u8868\u793a\u4ece\u70b9 $p$ \u5230\u70b9 $q$ \u7684\u6700\u77ed\u8def\u3002\n\n\n------------\n\n\u56de\u5230\u8fd9\u9898\u4e0a\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4efb\u610f\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u53d8\u4e3a $0$\uff0c\u90a3\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u5bf9\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u5462\uff1f\u80af\u5b9a\u662f**\u5bf9\u4e8e\u6240\u6709\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u8def\u5f84\u7684\u957f\u5ea6\u90fd\u6709\u5f71\u54cd**\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4e24\u70b9\u95f4\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u6743\u53d8\u4e3a $0$ \u7684\u8fb9\u7684\u6700\u77ed\u8def\u7684\u957f\u5ea6\uff0c\u7136\u540e\u4e0e\u539f\u6765\u7684\u6700\u77ed\u8def\u76f8\u6bd4\u8f83\uff0c\u5176\u4e2d\u7684\u6700\u5c0f\u503c\u5c31\u662f\u6211\u4eec\u6b64\u6b21\u64cd\u4f5c\u540e\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u9876\u70b9\u8dd1\u4e00\u904d Dijkstra\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u6c42\u51fa\u5c06\u8fd9\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u53d8\u4e3a $0$ \u4e4b\u540e\u9898\u76ee\u6240\u7ed9\u70b9\u5bf9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff0c\u6c42\u548c\u5e76\u66f4\u65b0\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2\\log{n}+nm)$\u3002\u6ce8\u610f\uff0c\u7531\u4e8e\u672c\u9898\u662f\u65e0\u5411\u56fe\uff0c\u56e0\u6b64\u8fd8\u8981\u8003\u8651\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u9876\u70b9\u7684\u5148\u540e\u987a\u5e8f\uff0c\u5177\u4f53\u600e\u4e48\u505a\u8bf7\u770b\u4ee3\u7801\u3002\n\n\n\n------------\n\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u70b9\u4e2a\u8d5e\u5457QAQ\uff09\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i) \nusing namespace std;\n\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\n\nconst int maxn=1005;\nstruct Edge{\n\tint to,next,val;\n}e[maxn<<1];\nint head[maxn],tot,n,m,k,dis[maxn][maxn],d[maxn],ti,a[maxn],b[maxn];\n\nvoid connect(int x,int y,int V){\n\te[++tot]=(Edge){y,head[x],V};\n\thead[x]=tot; \n}\n\nstruct Node{\n\tint num,dist;\n\tbool operator<(const Node &x)const{\n\t\treturn dist>x.dist;\n\t}\n};\n\npriority_queue<Node> q;\n\nvoid dij(int s){\n\t++ti;\n\tdis[s][s]=0;\n\tq.push((Node){s,0});\n\tfo(i,1,n){\n\t\twhile(!q.empty()&&d[q.top().num]==ti) q.pop();\n\t\tif(q.empty()) break;\n\t\tint x=q.top().num;q.pop();d[x]=ti;\n\t\tfor(int j=head[x];j;j=e[j].next){\n\t\t\tint p=e[j].to;\n\t\t\tif(d[p]==ti) continue;\n\t\t\tif(dis[s][p]>dis[s][x]+e[j].val){\n\t\t\t\tdis[s][p]=dis[s][x]+e[j].val;\n\t\t\t\tq.push((Node){p,dis[s][p]}); \n\t\t\t}\n\t\t}\n\t}\n\twhile(!q.empty()) q.pop();\n}\n\nint main(){\n\tmemset(dis,0x3f,sizeof dis);\n\tn=read(),m=read(),k=read();\n\tfo(i,1,m){\n\t\tint x=read(),y=read(),v=read();\n\t\tconnect(x,y,v);\n\t\tconnect(y,x,v);\n\t}\n\tint ans=0;\n\tfo(i,1,n) dij(i);\n\tfo(i,1,k){\n\t\ta[i]=read();\n\t\tb[i]=read();\n\t\tans+=dis[a[i]][b[i]];\n\t}\n\tfo(i,1,n){\n\t\tfor(int j=head[i];j;j=e[j].next){\n\t\t\tint p=e[j].to;\n\t\t\tint sum=0;\n\t\t\t//yrztxdy!! \n\t\t\tfo(w,1,k){\n\t\t\t\t//\u65e0\u5411\u56fe\u4e0e\u6709\u5411\u56fe\u7684\u5dee\u522b\u5c31\u5728\u4e8e\u53ef\u4ee5\u5148x->v,\u518dv->u,u->y\uff0c\u5904\u7406\u4e00\u4e0b\u5c31\u884c \n\t\t\t\tint yrztxdy=min(dis[a[w]][i]+dis[p][b[w]],dis[a[w]][p]+dis[i][b[w]]);\n\t\t\t\tif(yrztxdy<=dis[a[w]][b[w]]) sum+=yrztxdy;\n\t\t\t\telse sum+=dis[a[w]][b[w]];\n\t\t\t}\n\t\t\tans=min(ans,sum);\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n} \n```\n",
        "postTime": 1603329375,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1433G \u3010Reducing Delivery Cost\u3011"
    },
    {
        "content": "\u5927\u5957\u8def\u9898\u3002\n\n\u9996\u5148\u770b\u89c1 1000 \u7684\u8303\u56f4\uff0c\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u8fb9\uff0c\u518d\u66b4\u529b\u679a\u4e3e\u70b9\u5bf9\u91cd\u65b0\u8ba1\u7b97\u7b54\u6848\uff0c\u8fd9\u6837\u662f $nk$ \u7684\u3002\n\n\u7136\u800c\u5b83\u4e0d\u53ef\u80fd\u662f\u4e00\u4e2a\u7eaf\u66b4\u529b\uff0c\u6211\u4eec\u9700\u8981 $O(1)$ \u7684\u65b9\u6cd5\u6c42\u51fa\u8fb9\u6743\u4e3a 0 \u540e\u7684\u65b0\u8ddd\u79bb\u3002\n\n\u8fd9\u90e8\u5206\u662f\u4e00\u4e2a\u7ecf\u5178\u5957\u8def\uff1a\n\n\u5148\u7528 $n^2logn$ \u7684\u65f6\u95f4\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u505a\u4e00\u904d dij\uff0c\u8fd9\u6837\u5c31\u77e5\u9053\u4e86\u4efb\u610f\u4e24\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n\u90a3\u4e48\u4e24\u70b9\u95f4\u7684\u65b0\u6700\u77ed\u8ddd\u79bb\u53ef\u80fd\u7ecf\u8fc7\u53d8 0 \u7684\u8fb9\uff0c\u4e5f\u53ef\u80fd\u4e0d\u7ecf\u8fc7\u3002\n\n\u4ee4 $dis_{x,y}$ \u8868\u793a\u539f\u56fe $x$ \u5230 $y$ \u7684\u6700\u77ed\u8def\uff0c\u5219\u8fd9\u5bf9\u70b9\u5bf9\u7684\u8d21\u732e\u4e3a\uff1a\n\n$$\\min(dis_{x,y},\\min(dis_{x,from}+dis_{to,y},dis_{x,to}+dis_{y,from})))$$\n\n\u7136\u540e\u53d6\u52a0\u548c\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nint inline read()\n{\n\tint ans=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch))\n\t{\n\t\tif(ch=='-')\n\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t{\n\t\tans=ans*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn ans*f;\n}\nconst int N=1005;\nstruct edge\n{\n\tint to,nxt,v;\n}e[N*2];\nint head[N],cnt;\nvoid add(int u,int v,int w)\n{\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n\te[cnt].v=w;\n}\nint dis[N][N];\nstruct node\n{\n\tint num,dis;\n\tnode(int x,int y){num=x,dis=y;}\n\tbool  operator <(const node &p)\n\tconst{\n\t\treturn dis>p.dis;\n\t}\n};\npriority_queue<node> q;\nvoid dij(int st)\n{\n\tmemset(dis[st],0x3f,sizeof dis[st]);\n\tdis[st][st]=0;\n\tq.push(node(st,0));\n\twhile(!q.empty())\n\t{\n\t\tint now=q.top().num;q.pop();\n\t\tfor(int i=head[now];i;i=e[i].nxt)\n\t\t{\n\t\t\tif(dis[st][e[i].to]>dis[st][now]+e[i].v)\n\t\t\t{\n\t\t\t\tdis[st][e[i].to]=dis[st][now]+e[i].v;\n\t\t\t\tq.push(node(e[i].to,dis[st][e[i].to]));\n\t\t\t}\n\t\t}\n\t } \n}\nint n,m,k,ans=2e9;\nint a[N],b[N];\nint main()\n{\n\tn=read();m=read();k=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t}\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\ta[i]=read();b[i]=read();\n\t}\n\tfor(int i=1;i<=n;i++)\n\tdij(i);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=head[i];j;j=e[j].nxt)\n\t\t{\n\t\t\tint sum=0;\n\t\t\tfor(int x=1;x<=k;x++)\n\t\t\t{\n\t\t\t\tsum+=min(dis[a[x]][b[x]],min(dis[a[x]][i]+dis[e[j].to][b[x]],dis[a[x]][e[j].to]+dis[i][b[x]]));\n\t\t\t}\n\t\t\tans=min(ans,sum);\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1603977283,
        "uid": 196899,
        "name": "lndjy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1433G \u3010Reducing Delivery Cost\u3011"
    },
    {
        "content": "# Codeforces 1433G \u9898\u89e3\n\n## Solution\n\n\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u628a\u6240\u6709\u6700\u77ed\u8def\u5728\u9014\u4e2d\u6807\u8bb0\u51fa\u6765\uff0c\u7136\u540e\u53d6\u4e00\u4e2a \u7ecf\u8fc7\u6b21\u6570$\\times$\u8fb9\u6743 \u6700\u5927\u7684\u8fb9\u8fb9\u6743\u7f6e\u4e3a $0$\uff0c\u7136\u540e\u5c31\u6210\u4e3a\u4e86\u6807\u51c6\u9519\u89e3\uff0cWA ON TEST 2\u3002\u8fd9\u662f\u56e0\u4e3a\u5220\u4e4b\u524d\u7684\u6700\u77ed\u8def\u5f84\u548c\u5220\u4e4b\u540e\u7684\u6700\u77ed\u8def\u5f84\u4e0d\u4e00\u5b9a\u91cd\u5408\uff0c\u8fd9\u70b9\u4ece\u6837\u4f8b\u4e8c\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u3002\n\n\u4ee4 $\\text{dis}(x,y)$ \u8868\u793a $x$ \u5230 $y$ \u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u8003\u8651\u7684\u5c31\u662f\u5c06\u4e00\u6761\u8fb9 $(u,v)$ \u8fb9\u6743\u7f6e\u96f6\u540e $\\text{dis}(a_i,b_i)$ \u4f1a\u5982\u4f55\u53d8\u5316\u3002\u5982\u679c\u60f3\u8981\u8ba9 $\\text{dis}(a_i,b_i)$ \u53d8\u5c0f\uff0c\u5219\u6700\u77ed\u8def\u5f84\u4e00\u5b9a\u4f1a\u7ecf\u8fc7 $(u,v)$ \u8fd9\u6761\u8fb9\u3002\u663e\u7136\uff0c\u6b64\u65f6 $\\text{dis}(a_i,b_i)=\\min\\{\\text{dis}(a_i,b_i),\\text{dis}(a_i,u)+\\text{dis}(b_i,v),\\text{dis}(a_i,v)+\\text{dis}(b_i,u)\\}$\u3002$\\text{dis}$ \u53ef\u4ee5\u8dd1 $n$ \u904d Dijkstra \u9884\u5904\u7406\uff0c\u7136\u540e\u679a\u4e3e\u54ea\u6761\u8fb9\u88ab\u5220\u6389\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\ninline void read(int &x)\n{\n\tx=0; int f=1;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\n\t{\n\t\tif(c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0' && c<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar(); \n\t}\n\tx*=f;\n}\nconst int N=1000,M=2000,INF=0x3f3f3f3f;\nint head[N+10],ver[M+10],nxt[M+10],edge[M+10],tot=1;\nvoid add(int x,int y,int z)\n{\n\tver[++tot]=y;\n\tedge[tot]=z;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\nint dis[N+10][N+10];\nbool vis[N+10];\nint n,m,k;\nvoid dij(int S)\n{\n\tfor(int i=1;i<=n;i++) dis[S][i]=INF;\n\tdis[S][S]=0;\n\tmemset(vis,0,sizeof(vis));\n\tpriority_queue<pair<int,int> > que;\n\tque.push(make_pair(0,S));\n\twhile(!que.empty())\n\t{\n\t\tint x=que.top().second; que.pop();\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=ver[i],z=edge[i];\n\t\t\tif(dis[S][x]+z<dis[S][y])\n\t\t\t{\n\t\t\t\tdis[S][y]=dis[S][x]+z;\n\t\t\t\tque.push(make_pair(-dis[S][y],y));\n\t\t\t}\n\t\t}\n\t}\n}\nstruct node\n{\n\tint a,b;\n//\tbool operator < (const node &x) const {return a==x.a?b<x.b:a<x.a;}\n//\tbool operator == (const node &x) const {return a==x.a && b==x.b;}\n}s[N+10];\nint U[N+10],V[N+10];\nint main()\n{\n\tread(n);read(m);read(k);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tread(u);read(v);read(w);\n\t\tU[i]=u;V[i]=v;\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t}\n\tfor(int i=1;i<=n;i++) dij(i);\n\tfor(int i=1;i<=k;i++) \n\t{\n\t\tread(s[i].a);\n\t\tread(s[i].b);\n\t}\n//\tsort(s+1,s+k+1);\n//\tk=unique(s+1,s+k+1)-s-1;\n\tint ans=INF;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint sum=0;\n\t\tfor(int j=1;j<=k;j++)\n\t\t\tsum+=min(dis[s[j].a][s[j].b],min(dis[s[j].a][U[i]]+dis[V[i]][s[j].b],dis[s[j].a][V[i]]+dis[U[i]][s[j].b]));\n\t\tans=min(ans,sum);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1608122172,
        "uid": 125913,
        "name": "zztqwq",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1433G \u3010Reducing Delivery Cost\u3011"
    }
]