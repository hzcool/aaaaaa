[
    {
        "content": "## \u9898\u610f\uff1a\n\u5728\u65e0\u5411\u56fe\u4e0a\uff0c\u6709 $a,b,c$ \u4e09\u4e2a\u70b9\uff0c\u8981\u8ba9 $a$ \u5230 $b$ \u518d\u5230 $c$ \u7684\u8def\u5f84\u6700\u5c0f\uff0c\u8fb9\u6743\u5728\u53ef\u91cd\u96c6\u5408 $W$ \u4e2d\u9009\u53d6\u3002 \n## \u5206\u6790\n\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u90a3\u4e48 $a$ \u5230 $b$ \u7684\u6700\u5c0f\u8def\u5f84\u957f\u5ea6\u7b49\u4e8e $b$ \u5230 $a$ \u7684\u8def\u5f84\u957f\u5ea6\u3002\u6240\u4ee5\u5982\u679c\u6ca1\u6709\u91cd\u590d\u8def\u5f84 $a$ \u5230 $b$ \u518d\u5230 $c$ \u7684\u8def\u5f84\u957f\u5ea6\u5e94\u8be5\u8d2a\u5fc3\u7684\u9009\u62e9\u524d $k$ \u4e2a\u3002\u4f46\u5982\u679c\u6709\u91cd\u590d\u8def\u5f84\uff0c\u6211\u4eec\u5e94\u8be5\u8ba9\u91cd\u590d\u8def\u5f84\u66f4\u5c0f(\u8fd9\u4e2a\u8d2a\u5fc3\u5f88\u663e\u7136\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6700\u5c0f\u5316\u603b\u8def\u5f84\u957f\u5ea6)\u3002\u8fd9\u91cc\u6211\u4eec\u7528\u56fe\u4f8b\u8bf4\u660e\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/jicmw9q6.png)\n\n\u770b\u51fa $5$ \u5230 $3$ \u5230 $2$ \u7684\u8fd9\u6761\u8def\u5f84\u8fc7\u4e86\u4e24\u6b21\uff0c\u90a3\u6211\u4eec\u5c31\u5e94\u8be5\u6700\u5c0f\u5316\u8fd9\u4e00\u6761\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u770b\u51fa $2$ \u5230 $6$ \u548c $2$ \u5230 $7$ \u662f\u6ca1\u6709\u91cd\u590d\u70b9\u7684\u3002\u6211\u4eec\u518d\u7b80\u5316\u8def\u5f84\uff0c\u6240\u6709\u7684\u56fe\u7684\u6700\u5c0f\u8def\u5f84\u90fd\u662f\uff1a\u4ece $A$ \u5230 $D$ \uff08\u91cd\u590d\u70b9\uff09\uff0c\u518d\u4ece $D$ \u5230 $B$ \uff0c \u7136\u540e $B$ \u5230 $D$ \uff0c\u6700\u540e\u4ece $D$ \u5230 $C$\u3002\u6240\u4ee5\u603b\u957f\u5ea6\u4e3a: \n$$\nsum=dist[B] * 2 +dist[C] + dist[A]\n$$\n\u800c\u6211\u4eec\u4e0d\u53ef\u80fd\u505a $n$ \u6b21 $BFS$ \u6240\u4ee5\u8003\u8651\u4f18\u5316\u3002\u518d\u4ece\u65e0\u5411\u56fe\u7684\u6027\u8d28\uff1a\u4e24\u70b9\u8def\u5f84\u7b49\u4ef7\u53ef\u7b80\u5316\u5f0f\u5b50\uff1a\n$$\nsum = dist_{A-D}+dist_{B-D} * 2  + dist_{C-D}\n$$\n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u4e09\u6b21 $BFS$ \u5c31\u53ef\u4ee5\u4e86\u3002\u7136\u540e ${B-D}$ \u8def\u5f84\u9009\u524d $dist_{B-D}$ \u4e2a\u5c31\u53ef\u4ee5\uff0c\u7136\u540e ${D-A}$ \u548c ${D-C}$ \u4f9d\u6b21\u5411\u540e\u9009\u62e9\u5c31\u884c\u3002\u90a3\u6211\u4eec\u53ea\u9700\u679a\u4e3e $D$ \u5c31\u53ef\u4ee5\u4e86\u3002\u603b\u7684\u590d\u6742\u5ea6\u5e94\u4e3a $O(Tn)$ \u3002\u4f46\u53ef\u80fd\u5e38\u6570\u633a\u5927\u7684\u3002\n## \u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint read(){\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\n#define N 200100\nstruct edge{int next,to;}e[N<<1];\nint head[N],w[N],sum[N],n,m,A,B,C,disA[N],disC[N],disB[N],dis[N],cnt=-1;\nvoid add(int x,int y)\n{\n\te[++cnt].next = head[x];\n\te[cnt].to = y;\n\thead[x] = cnt;\n}\nvoid solve(int s,int t)\n{\n\tqueue<int> q;\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[s]=0;q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tfor(int i = head[x];~i;i=e[i].next)\n\t\t{\n\t\t\tint y = e[i].to;\n\t\t\tif(dis[y]==0x3f3f3f3f3f3f3f3f)\n\t\t\t{\n\t\t\t\tdis[y] = dis[x]+1;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n\tif(t == 1) \n\tfor(int i = 1;i <= n;i++)disA[i]=dis[i];\n\tif(t == 2) \n\tfor(int i = 1;i <= n;i++)disB[i]=dis[i];\n\tif(t == 3) \n\tfor(int i = 1;i <= n;i++)disC[i]=dis[i];\n}\nsigned main()\n{\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tmemset(head,-1,sizeof(head));\n\t\tmemset(w,0,sizeof(w));\n\t\tcnt=-1;\n\t\tn=read();m=read();A=read();B=read();C=read();\n\t\tfor(int i = 1;i <= m;i++)\n\t\t{\n\t\t\tw[i]=read();\n\t\t}\n\t\tsort(w+1,w+m+1);\n\t\tfor(int i = 1;i <= m;i++) sum[i]=sum[i-1]+w[i];\n\t\tfor(int i = 1;i <= m;i++)\n\t\t{\n\t\t\tint a=read(),b=read();\n\t\t\tadd(a,b);\n\t\t\tadd(b,a);\n\t\t}\n\t\tsolve(A,1);\n\t\tsolve(B,2);\n\t\tsolve(C,3);\n\t\tint ans=0x3f3f3f3f3f3f3f3f;\n\t\tfor(int i = 1;i <= n;i++)\n\t\t{\n\t\t\tint a=disA[i],b=disB[i],c=disC[i];\n\t\t\tif(a+b+c<=m)\n\t\t\t{\n\t\t\t\tans=min(sum[a+b+c]+sum[b],ans);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\tfor(int i = 1;i <= n;i++)\n\t\tdisA[i]=disB[i]=disC[i]=0x3f3f3f3f3f3f3f3f;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1588553776,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1343E \u3010Weights Distributing\u3011"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://registergen.github.io/post/solution-cf1343e/)\n\n[\u987a\u4fbf\u5b89\u5229\u6211\u7684\u6c34\u9898\u9009\u505a\u7cfb\u5217](https://registergen.github.io/tag/xSY20OkOx//)\n\nCF div3E \u7684\u56fe\u8bba\u9898\u5c31\u662f\u6e05\u65b0~\n\n\u5148\u8003\u8651\u53ea\u6709\u4e24\u4e2a\u70b9 $a,b$ \u7684\u60c5\u51b5\u3002\n\n# Solution\n\n\u663e\u7136\u6709\u4e00\u79cd\u8d2a\u5fc3\u7b56\u7565\uff1a\u5148\u628a\u6240\u6709\u70b9\u7684\u6743\u503c\u8bbe\u4e3a $1$\uff0c\u7528 BFS \u6c42\u51fa $a\\leftrightarrow b$ \u7684\u6700\u77ed\u8def $k$\uff0c\u8ba9\u6700\u5c0f\u7684 $k$ \u4e2a $w_i$ \u586b\u5165 $a\\leftrightarrow b$ \u95f4\u7684\u8def\u5f84\u5373\u53ef\u3002\n\n\u518d\u8003\u8651\u6709 $3$ \u4e2a\u70b9 $a,b,c$ \u7684\u60c5\u51b5\u3002\n\n\u4e0a\u9762\u7684\u8d2a\u5fc3\u7b56\u7565\u5df2\u7ecf\u5931\u6548\uff0c\u56e0\u4e3a $a\\leftrightarrow b$ \u4e0e $b\\leftrightarrow c$ \u7684\u6700\u77ed\u8def\u5f84\u53ef\u80fd\u6709\u91cd\u5408\u7684\u90e8\u5206\u3002\n\n\u4e0d\u8fc7\u7c7b\u6bd4\u4e24\u4e2a\u70b9\u7684\u505a\u6cd5\uff0c\u518d\u8003\u8651\u5904\u7406\u91cd\u5408\u7684\u529e\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u89e3\u6cd5\uff1a\n\n\u679a\u4e3e\u4e00\u4e2a\u70b9 $i$\uff08\u53ef\u4ee5\u4e3a $a,b,c$\uff09\uff0c\u6211\u4eec\u9009\u62e9\u7684\u8def\u7ebf\u4e3a $a\\to i\\to b\\to i\\to c$\uff08\u5373 $b\\leftrightarrow i$ \u662f\u91cd\u5408\u7684\u90e8\u5206\uff09\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a\n\n$$\n\\min\\{\\operatorname{price}(a,i)+2\\operatorname{price}(b,i)+\\operatorname{price}(c,i)\\}\n$$\n\n\u5176\u4e2d $\\operatorname{price}(x,y)$ \u4e3a\u5b89\u6392\u597d\u8fb9\u6743\u540e $x,y$ \u95f4\u7684\u6700\u77ed\u8def\u3002\n\n\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u8d2a\u5fc3\u5566\uff01\n\n\u679a\u4e3e $i\\in [1,n]$\uff0c\u5148\u628a\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9\u653e\u5728 $b\\leftrightarrow i$ \u95f4\u7684\u8def\u5f84\u4e0a\uff0c\u7136\u540e\u628a $a\\leftrightarrow i$ \u548c $c\\leftrightarrow i$ \u95f4\u8def\u5f84\u5b89\u6392\u4e0a\u8fb9\u6743\u5c3d\u91cf\u5c0f\u7684\u8fb9\u5373\u53ef\u3002\n\n\u53e6\u5916\uff0c\u7531\u4e8e\u672c\u9898\u591a\u6d4b\u800c\u4e14\u6570\u636e\u8303\u56f4\u662f $1\\le T\\le 10^4$\uff0c$2\\le n\\le 2\\times 10^5$\uff0c\u6240\u4ee5\u4e00\u6b21\u4e0d\u8981 `memset` \u592a\u591a\u6570\u7ec4\u3002\u7ed9\u6bcf\u4e2a\u51fd\u6570\u524d\u52a0\u4e0a\u4e00\u53e5 `__attribute__ ((always_inline))` \u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff08\u5f53\u7136\u6b63\u5f0f\u6bd4\u8d5b\u65f6\u5343\u4e07\u522b\u7528\uff09\u3002\n\n# Code\n\n```cpp\n// #pragma GCC optimize(3,\"Ofast\",\"inline\")\n\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n\ntypedef long long ll;\n\nconst int N=2e5;\nconst ll INF=0x3f3f3f3f3f3f3f3fLL;\nconst int inf=0x3f3f3f3f;\n\nstruct Edge{int to,nxt;}e[N*2+10];int head[N+10],tote;\n__attribute__ ((always_inline))\ninline void addEdge(int u,int v){e[++tote].to=v;e[tote].nxt=head[u];head[u]=tote;}\n\nint n,m,a,b,c;\nll w[N+10],s[N+10];\nint dis[N+10],disA[N+10],disB[N+10],disC[N+10];\nbool vis[N+10];\n\n__attribute__ ((always_inline))\ninline void BFS(int start,int opt)\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[start]=0;\n\tmemset(vis,0,sizeof(vis));\n\tstd::queue<int> q;\n\tq.push(start);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n//\t\tif(vis[u])continue;\n//\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]==inf)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n//\tfor(int i=1;i<=n;i++)\n//\t\tprintf(\"%lld \",dis[i]);\n//\tputs(\"\");\n\tif(opt==1)for(int i=1;i<=n;i++)disA[i]=dis[i];\n\tif(opt==2)for(int i=1;i<=n;i++)disB[i]=dis[i];\n\tif(opt==3)for(int i=1;i<=n;i++)disC[i]=dis[i];\n}\n\n__attribute__ ((always_inline))\ninline void solve()\n{\n\tmemset(head,0,sizeof(head));\n\ttote=0;\n//\tmemset(disA,0x3f,sizeof(disA));\n//\tmemset(disB,0x3f,sizeof(disB));\n//\tmemset(disC,0x3f,sizeof(disC));\n\tmemset(s,0,sizeof(s));\n\tscanf(\"%d%d%d%d%d\",&n,&m,&a,&b,&c);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%lld\",w+i);\n\tstd::sort(w+1,w+m+1);\n\tfor(int i=1;i<=m;i++)\n\t\ts[i]=s[i-1]+w[i]; // \u8fb9\u6743\u6392\u5e8f\u540e\u7684\u524d\u7f00\u548c\n\tfor(int u,v,i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\taddEdge(u,v);addEdge(v,u);\n\t}\n\tBFS(a,1);\n\tBFS(b,2);\n\tBFS(c,3);\n\tll ans=INF;\n\tfor(int i=1;i<=n;i++)\n\t{\n//\t\tputs(\"!\");\n\t\tint A=disA[i],B=disB[i],C=disC[i];\n//\t\tprintf(\"%lld %lld %lld\\n\",A,B,C);\n\t\tif(A+B+C<=m) // \u9632\u6b62\u8d8a\u754c\n\t\t\tans=std::min(ans,s[A+B+C]+s[B]);\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)solve();\n\treturn 0;\n}\n```",
        "postTime": 1596895703,
        "uid": 242702,
        "name": "registerGen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1343E \u3010Weights Distributing\u3011"
    },
    {
        "content": "\u5728\u6b64\u7ea6\u5b9a $ x $ \u548c $ y $ \u4e4b\u95f4\u7684\u6700\u77ed\u8def\u4e3a $ dis_{x,y} $ \u3002\n\n------------\n\n\u7ed9\u4f60\u4e00\u5f20\u56fe\u548c\u4e00\u4e9b\u8fb9\u6743\uff0c\u4f60\u53ef\u4ee5\u968f\u610f\u5730\u5b89\u6392\u8fb9\u6743\uff0c\u4f7f\u5f97\u8fb9\u4e0e\u6743\u4e00\u4e00\u5bf9\u5e94\u3002\n\n\u6c42 $ dis_{a,b} + dis_{b,c} $ \u7684\u6700\u5c0f\u503c\u3002\n\n\u6ce8\u610f\u662f\u53cc\u5411\u8fb9\u3002\n\n------------\n\n\u8fb9\u662f\u53cc\u5411\u7684\uff0c\u95ee\u9898\u6210\u4e86\u6c42 $ dis_{b,a} + dis_{b,c} $ \u7684\u6700\u5c0f\u503c\u3002\n\n\u5982\u679c2\u6761\u6700\u77ed\u8def\u6709\u5927\u4e8e $ 2 $ \u6bb5\u91cd\u5408\u4e86\uff0c\u53ef\u4ee5\u4e00\u76f4\u505a\u4e00\u4e0b\u64cd\u4f5c\uff1a\n\n1. \u9009\u62e9 $ 2 $ \u6bb5\u91cd\u5408\u6bb5\u4e2d\u95f4\u5939\u7740\u7684\u4e24\u6761\u8def\u5f84\u7684\u7ecf\u8fc7\u8fb9\u6700\u5c11\u7684\u4e00\u6bb5\u3002\n\n2. \u820d\u5f03\u53e6\u4e00\u6bb5\u3002\n\n\u5982\u4e0b\uff1a\n\n![bad](https://cdn.luogu.com.cn/upload/image_hosting/qnh96st8.png)\n\n\u4fee\u6539\u6210\uff1a\n\n![good](https://cdn.luogu.com.cn/upload/image_hosting/paprbai3.png)\n\n\u4f7f\u7528\u7684\u8fb9\u53d8\u5c11\u4e86\u81f3\u5c11 $ \\left \\lceil \\frac{ \\text{\u5939\u7740\u7684\u4e24\u6761\u8def\u5f84\u8fb9\u6570} }{2} \\right \\rceil $ \u3002\n\n\u800c\u589e\u52a0\u7684\u91cd\u5408\u8def\u5f84\u662f\u81f3\u591a $ \\left \\lfloor \\frac{ \\text{\u5939\u7740\u7684\u4e24\u6761\u8def\u5f84\u8fb9\u6570} }{2} \\right \\rfloor $ \uff0c\u6bd4\u8f83\u4e00\u4e0b\u53d1\u73b0\u8fd9\u6837\u4e00\u5b9a\u66f4\u4f18\u3002\n\n\u95ee\u9898\u53d8\u6210\u4e86 $ dis_{b,a} + dis_{b,c} $ \u7684\u6700\u5c0f\u503c\uff0c\u4e14\u4e24\u6761\u8def\u5f84\u53ea\u4f1a\u67091\u6bb5\u4ea4\u3002\n\n\u628a $ dis_{b,b} $ \u8fd9\u6bb5\u7a7a\u7684\u8def\u4e5f\u7b97\u4e00\u6bb5\u4ea4\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u7406\u8bba\u5408\u5e76\u3002\n\n\u95ee\u9898\u53d8\u6210\u4e86\u6c42\u4e00\u4e2a\u70b9 $ d $ \uff0c\u4f7f\u5f97 $ 2dis_{b,d} + dis_{d,a} + dis_{d,c} $ \u6700\u5c0f\uff08 $ b $ \u53ef\u4ee5\u548c $ d $ \u91cd\u5408\uff09\u3002\n\n\u53ea\u9700\u8981\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\u4e00\u904d\uff0c\u518d\u679a\u4e3e\u54ea\u4e2a\u70b9\u662f $ d $ \uff0c\u4f18\u5148\u628a\u6743\u503c\u5c0f\u7684\u8fb9\u7ed9\u91cd\u590d\u8def\u5f84\u5373\u53ef\u3002\n\n\u6839\u636e $ d $ \u8ba1\u7b97\u7b54\u6848\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u4f18\u5316\u6210 $ O(1) $ \u3002\n\n------------\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5373 $ O(n) $ \uff0c\u975e\u5e38\u6b63\u786e\u3002\n\n------------\n\n\u4ee3\u7801\u5982\u4e0b \uff08~~\u975e\u5e38\u7684\u77ed~~)\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,s,l;\nvector<int>q[202020];\nint vis[202020][3],dis[202020][3];\nlong long v[606060];\nqueue<int>b;\nvoid bfs(int x,int p){//\u628abfs\u5c01\u88c5\u6210\u51fd\u6570\u8c03\u7528\uff0cp\u8868\u793a\u8fd9\u6b21\u7684\u8ddd\u79bb\u5b58\u5728\u90a3\u4e2adis\u6570\u7ec4\u91cc\u9762\u3002\n\tb.push(x);\n\tvis[x][p]=1;\n\tstatic int s,l;\n\twhile(b.size()){\n\t\ts=b.front();\n\t\tb.pop();\n\t\tfor(register int i=0;i<q[s].size();++i){\n\t\t\tl=q[s][i];\n\t\t\tif(!vis[l][p]){\n\t\t\t\tdis[l][p]=dis[s][p]+1;\n\t\t\t\tvis[l][p]=1;\n\t\t\t\tb.push(l);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid doing(){\n\tstatic int a,b,c;\n\tcin>>n>>m>>a>>b>>c;\n\tfor(register int i=1;i<=n;++i){\n        q[i].clear();\n\t\tfor(register int j=0;j<3;++j)vis[i][j]=dis[i][j]=0;\n\t}\n\tfor(register int i=1;i<=m;++i)scanf(\"%lld\",&v[i]);\n\tfor(register int i=m+1;i<=m*3;++i)v[i]=1000000000;//\u9632\u6b62\u8fb9\u592a\u591a\u4e86\u3002\n\tsort(v+1,v+m+1);\n\tfor(register int i=1;i<=m*3;++i)v[i]+=v[i-1];//\u524d\u7f00\u548c\u4f18\u5316\u3002\n\tfor(register int i=1;i<=m;++i){\n\t\tscanf(\"%d %d\",&s,&l);\n\t\tq[s].push_back(l);\n\t\tq[l].push_back(s);\n\t}\n\tbfs(a,0);\n\tbfs(b,1);\n\tbfs(c,2);\n\tstatic long long ans;\n\tans=v[m*3];\n\t//\u4f18\u5148\u91cd\u5408\u6bb5\u7684\u7b54\u6848\u8ba1\u7b97\u3002\n\tfor(register int i=1;i<=n;++i)ans=min(ans,v[dis[i][0]+dis[i][1]+dis[i][2]]+v[dis[i][1]]);\n\tprintf(\"%lld\\n\",ans);\n}\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--)doing();\n\treturn 0;\n} \n```",
        "postTime": 1636689642,
        "uid": 218376,
        "name": "IloveSurtr",
        "ccfLevel": 7,
        "title": "CF1343E"
    },
    {
        "content": "\u7b2c\u4e00\u573a CF \u7684\u9898~~\u4e3a\u5565\u6211\u8fd9\u9898\u90fd\u4e0d\u4f1a\u505a\u554a~~\u3002\n\n\u9898\u610f\uff08\u8fd9\u9b3c\u7ffb\u8bd1\u5c45\u7136\u662f\u6211\u5199\u7684\uff09\uff1a\n\n\u7ed9\u6bcf\u6761\u8fb9\u5b89\u6392\u4e00\u4e2a\u8fb9\u6743\uff0c\u6700\u5c0f\u5316 $a$ \u5230 $b$ \u548c $b$ \u5230 $c$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\u548c\u3002\n\n\u6211\u4eec\u5c06 $a\\rightarrow b$ \u62c6\u5206\u4e3a $a\\rightarrow p\\rightarrow b$\uff0c\u540c\u7406 $c\\rightarrow b$ \u62c6\u4e3a $c\\rightarrow p\\rightarrow b$\uff0c\u610f\u601d\u662f $a,c$ \u4e24\u70b9\u5728 $p$ \u6c47\u5408\u4e4b\u540e\u8d70\u5230 $b$\uff0c**\u4e4b\u524d\u90fd\u6ca1\u6709\u6c47\u5408**\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u7684\u7b54\u6848\u5c31\u662f $2\\cdot dis(b\\rightarrow p)+dis(a\\rightarrow p)+dis(c\\rightarrow p)$\uff0c\u4e8e\u662f\u6211\u4eec\u5148\u4ee5\u8fb9\u6743\u4e3a 1\uff0c\u8dd1 $a,b,c$ \u5206\u522b\u4e3a\u6e90\u70b9\u7684\u6700\u77ed\u8def\uff0c\u4e4b\u540e\u679a\u4e3e $p$ \u70b9\u5c31\u884c\u4e86\uff08\u628a\u5c3d\u91cf\u5c0f\u7684\u6743\u503c\u5b89\u6392\u7ed9 $b\\rightarrow p$\uff09\u3002\n\n\u4f46\u8fd9\u6837\u4f60\u53d1\u73b0\u8fc7\u4e0d\u4e86\u7b2c\u4e00\u4e2a\u6837\u4f8b\uff0c\u56e0\u4e3a\u4f1a\u6709 $dis(a\\rightarrow p)+dis(b\\rightarrow p)+dis(c\\rightarrow p) > m$\uff0c\u8fb9\u6743\u5b89\u6392\u4e0d\u8fc7\u6765\uff0c\u6839\u636e\u62bd\u5c49\u539f\u7406\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u6761\u8fb9\u88ab\u7ecf\u8fc7\u4e24\u6b21\uff0c\u548c\u4e0a\u9762\u201c\u6ca1\u6709\u6c47\u5408\u201d\u5c31\u77db\u76fe\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u820d\u53bb\u8fd9\u79cd\u60c5\u51b5\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 2e5 + 5;\nconst int M = 2e5 + 5;\nconst ll INF = 1e18;\n\nll wgt[M], sum[M];\nvector<int> adj[N];\nint disa[N], disb[N], disc[N];\nint n, m, a, b, c;\n\nvoid Bfs(int s, int dis[]) {\n\tfor(int i = 1; i <= n; i++) {\n\t\tdis[i] = -1;\n\t}\n\tdis[s] = 0;\n\tqueue<int> q;\n\tq.push(s);\n\twhile(!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tfor(int v : adj[u]) {\n\t\t\tif(dis[v] == -1) {\n\t\t\t\tdis[v] = dis[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid Solve() {\n\tscanf(\"%d%d%d%d%d\", &n, &m, &a, &b, &c);\n\t\n\tfor(int i = 1; i <= n; i++) {\n\t\tadj[i].clear();\n\t}\n\t\n\tfor(int i = 1; i <= m; i++) {\n\t\tscanf(\"%lld\", &wgt[i]);\n\t}\n\tfor(int i = 1; i <= m; i++) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadj[u].push_back(v);\n\t\tadj[v].push_back(u);\n\t}\n\t\n\tsort(wgt + 1, wgt + 1 + m);\n\tfor(int i = 1; i <= m; i++) {\n\t\tsum[i] = sum[i - 1] + wgt[i];\n\t}\n\t\n\tBfs(a, disa), Bfs(b, disb), Bfs(c, disc);\n\t\n\tll ans = INF;\n\t\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(disa[i] + disb[i] + disc[i] > m) {\n\t\t\tcontinue;\n\t\t}\n\t\tans = min(ans, sum[disa[i] + disb[i] + disc[i]] + sum[disb[i]]);\n\t}\n\t\n\tprintf(\"%lld\\n\", ans);\n}\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) {\n\t\tSolve();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1600753361,
        "uid": 95103,
        "name": "KellyFrog",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1343E \u3010Weights Distributing\u3011"
    },
    {
        "content": "\u9996\u5148\u56e0\u4e3a\u56fe\u662f\u65e0\u5411\u7684\uff0c\u6240\u4ee5 $a$ \u5230 $b$ \u7684\u6700\u77ed\u8def\u7b49\u4e8e $b$ \u5230 $a$ \u7684\u6700\u77ed\u8def\uff0c\u5373\u6c42 $b$ \u5206\u522b\u5230 $a,c$ \u7684\u6700\u77ed\u8def\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u5982\u679c\u53ea\u6709\u4e24\u4e2a\u70b9\u7684\u8bdd\uff0c\u8003\u8651\u6c42\u51fa\u6240\u6709\u8fb9\u6743\u4e3a $1$ \u65f6\u4e24\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff08\u8fd9\u6761\u8def\u5f84\u7ecf\u8fc7\u7684\u8fb9\u662f**\u6700\u5c11**\u7684\uff09\uff0c\u53ea\u8981\u628a\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5c3d\u53ef\u80fd\u5c06\u5c0f\u7684\u6743\u503c\u653e\u5230\u4e24\u4e2a\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u5373\u53ef\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u90a3\u6709 $a,b,c$ \u4e09\u4e2a\u70b9\u7684\u60c5\u51b5\u5462\uff1f\u5176\u5b9e\u8fd9\u662f\u540c\u7406\u7684\u3002\u4e09\u4e2a\u70b9\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u6b63\u786e\uff0c\u662f\u56e0\u4e3a $b$ \u5230 $a$ \u7684\u6700\u77ed\u8def\u5f84\u548c $b$ \u5230 $c$ \u7684\u6700\u77ed\u8def\u5f84\u53ef\u80fd\u6709\u91cd\u5408\u7684\u90e8\u5206\uff0c\u800c\u8fd9\u4e9b\u90e8\u5206\u53ef\u80fd\u4f1a\u88ab\u8ba1\u7b97 $2$ \u6b21\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $i$\uff0c\u8868\u793a\u79bb $b$ \u6700\u8fdc\u7684\uff0c$b$ \u5230 $a$ \u548c $b$ \u5230 $c$ \u6700\u77ed\u8def\u5f84\u7684\u91cd\u53e0\u90e8\u5206\u7684\u70b9\u3002\u9898\u76ee\u5373\u6c42 $dis_{b,i}\\times 2+dis_{i,a}+dis_{i,c}$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c3d\u91cf\u628a\u5c0f\u7684\u8fb9\u4f18\u5148\u5b89\u6392\u5230 $b$ \u5230 $i$ \u7684\u8def\u5f84\u4e0a\uff0c\u7136\u540e\u518d\u5c3d\u91cf\u628a\u5c0f\u7684\u8fb9\u5b89\u6392\u5728 $i$ \u5230 $a,c$ \u7684\u8def\u5f84\u4e0a\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5982\u4f55\u6c42\u51fa $i$ \u5230 $a,b,c$ \u7ecf\u8fc7\u8fb9**\u6700\u5c11**\u7684\u8def\u5f84\u3002\u53ef\u4ee5\u4f7f\u7528 $3$ \u6b21 bfs \u89e3\u51b3\u3002\n\n\u4ee3\u7801\u5f88\u597d\u5199\uff0c\u8bb0\u5f55\u5982\u4e0b\u3002\n\n[$\\color{lightgreen}\\mathtt{code}$](https://codeforces.com/contest/1343/submission/164246854)",
        "postTime": 1657930403,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF1343E \u9898\u89e3"
    },
    {
        "content": "\u5ba3\u4f20\u535a\u5ba2 $\\to$ [link](https://blog.csdn.net/BWzhuzehao/article/details/120026599)\n\n\u4e00\u9053\u601d\u7ef4\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5b9e\u9645\u4e0a\u6211\u4eec\u5982\u679c\u80fd\u591f\u5728 $a \\to b \\to c$ \u4e0a\u7684\u8def\u5f84\u4e0a\u5c06\u603b\u548c\u6392\u7684\u5c3d\u91cf\u5c0f\u90a3\u4e48\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6c42\u51fa $a \\to b$ \u7684\u6700\u77ed\u8def\u4ee5\u53ca $b \\to c$ \u7684\u6700\u77ed\u8def\u7136\u540e\u5176\u548c\u7684\u7ed3\u679c\u5c31\u662f\u603b\u7684\u6700\u77ed\u8def\uff0c\u5c06\u5c0f\u7684\u4e22\u5230\u8fd9\u4e9b\u8def\u5f84\u4e0a\u9762\u5c31\u597d\u4e86\n\n\u2026\u2026\u5417\uff1f\n\n\u5b9e\u9645\u4e0a\u8fd8\u6ca1\u6709\uff0c\u56e0\u4e3a\u4e0a\u8ff0\u505a\u6cd5\u5e76\u6ca1\u6709\u8003\u8651\u5230 $a \\to b$ \u548c $b \\to c$ \u4e24\u6761\u8def\u5f84\u91cd\u5408\u7684\u60c5\u51b5\uff0c\u5982\u56fe\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/69b713109550428aa8a97eabec5d0369.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAUGxvemlh,size_12,color_FFFFFF,t_70,g_se,x_16)\n\n\u6b64\u65f6\u4f60\u4f1a\u53d1\u73b0\u5b9e\u9645\u4e0a $b \\to t$ \u8fd9\u6761\u8def\u5f84\u4f1a\u88ab\u7edf\u8ba1\u4e24\u6b21\uff0c\u4f46\u662f\u6309\u7167\u4e0a\u8ff0\u505a\u6cd5\u8fd9\u4e24\u6b21\u7edf\u8ba1\u5b9e\u9645\u4e0a\u662f\u4e0d\u540c\u7684\u7ed3\u679c\u3002\n\n\u6240\u4ee5\u5b9e\u9645\u4e0a\u6211\u4eec\u9700\u8981\u5728 $b \\to t$ \u8fd9\u6761\u8def\u5f84\u4e0a\u6392\u4e0a\u6700\u5c0f\u7684\u51e0\u4e2a\u6743\u503c\uff0c\u7136\u540e\u5269\u4e0b\u7684\u5c31\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u6392\u5566~\n\n\u8003\u8651\u5230\u8fd9\u4e2a $t$ \u662f\u4e0d\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981 $O(n)$ \u679a\u4e3e\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(Tn)$\u3002\n\nCode\uff1a[GitHub CodeBase-of-Plozia CF1343E Weights Distributing.cpp](https://github.com/Plozia/CodeBase-of-Plozia/blob/main/Codeforces%20%E5%88%B7%E9%A2%98%E5%90%88%E9%9B%86/CF1343E%20Weights%20Distributing.cpp)\n\n```cpp\n/*\n========= Plozia =========\n\tAuthor:Plozia\n\tProblem:CF1343E Weights Distributing\n\tDate:2021/8/30\n========= Plozia =========\n*/\n\n#include <bits/stdc++.h>\nusing std::priority_queue;\n\ntypedef long long LL;\nconst int MAXN = 2e5 + 5;\nint t, n, m, Head[MAXN], cnt_Edge = 1, dis[4][MAXN], Start, Middle, End, p[MAXN];\nLL ans = 0, sum[MAXN];\nbool book[4][MAXN];\nstruct node { int to, val, Next; } Edge[MAXN << 1];\nstruct pri\n{\n\tint u, Num;\n\tbool operator <(const pri &fir)const\n\t{\n\t\treturn Num > fir.Num;\n\t}\n};\n\nint Read()\n{\n\tint sum = 0, fh = 1; char ch = getchar();\n\tfor (; ch < '0' || ch > '9'; ch = getchar()) fh -= (ch == '-') << 1;\n\tfor (; ch >= '0' && ch <= '9'; ch = getchar()) sum = (sum * 10) + (ch ^ 48);\n\treturn sum * fh;\n}\nLL Max(LL fir, LL sec) { return (fir > sec) ? fir : sec; }\nLL Min(LL fir, LL sec) { return (fir < sec) ? fir : sec; }\nvoid add_Edge(int x, int y, int z) { ++cnt_Edge; Edge[cnt_Edge] = (node){y, z, Head[x]}; Head[x] = cnt_Edge; }\n\nvoid Dijkstra()\n{\n\tpriority_queue <pri> q1, q2, q3;\n\tq1.push((pri){Start, 0}), q2.push((pri){Middle, 0}), q3.push((pri){End, 0});\n\twhile (!q1.empty())\n\t{\n\t\tpri x = q1.top(); q1.pop();\n\t\tif (book[1][x.u]) continue ; book[1][x.u] = 1;\n\t\tfor (int i = Head[x.u]; i; i = Edge[i].Next)\n\t\t{\n\t\t\tint u = Edge[i].to;\n\t\t\tif (book[1][u]) continue ;\n\t\t\tif (dis[1][u] > dis[1][x.u] + Edge[i].val)\n\t\t\t{\n\t\t\t\tdis[1][u] = dis[1][x.u] + Edge[i].val;\n\t\t\t\tq1.push((pri){u, dis[1][u]});\n\t\t\t}\n\t\t}\n\t}\n\twhile (!q2.empty())\n\t{\n\t\tpri x = q2.top(); q2.pop();\n\t\tif (book[2][x.u]) continue ; book[2][x.u] = 1;\n\t\tfor (int i = Head[x.u]; i; i = Edge[i].Next)\n\t\t{\n\t\t\tint u = Edge[i].to;\n\t\t\tif (book[2][u]) continue ;\n\t\t\tif (dis[2][u] > dis[2][x.u] + Edge[i].val)\n\t\t\t{\n\t\t\t\tdis[2][u] = dis[2][x.u] + Edge[i].val;\n\t\t\t\tq2.push((pri){u, dis[2][u]});\n\t\t\t}\n\t\t}\n\t}\n\twhile (!q3.empty())\n\t{\n\t\tpri x = q3.top(); q3.pop();\n\t\tif (book[3][x.u]) continue ; book[3][x.u] = 1;\n\t\tfor (int i = Head[x.u]; i; i = Edge[i].Next)\n\t\t{\n\t\t\tint u = Edge[i].to;\n\t\t\tif (book[3][u]) continue ;\n\t\t\tif (dis[3][u] > dis[3][x.u] + Edge[i].val)\n\t\t\t{\n\t\t\t\tdis[3][u] = dis[3][x.u] + Edge[i].val;\n\t\t\t\tq3.push((pri){u, dis[3][u]});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tt = Read(); memset(dis, 0x7f, sizeof(dis));\n\twhile (t--)\n\t{\n\t\tn = Read(), m = Read(), Start = Read(), Middle = Read(), End = Read();\n\t\tfor (int i = 1; i <= n; ++i) Head[i] = book[1][i] = book[2][i] = book[3][i] = 0; cnt_Edge = 1;\n\t\tfor (int i = 1; i <= n; ++i) dis[1][i] = dis[2][i] = dis[3][i] = 0x7f7f7f7f; ans = 0x7f7f7f7f7f7f7f7f;\n\t\tdis[1][Start] = dis[2][Middle] = dis[3][End] = 0;\n\t\tfor (int i = 1; i <= m; ++i) p[i] = Read(); sum[0] = 0;\n\t\tstd::sort(p + 1, p + m + 1);\n\t\tfor (int i = 1; i <= m; ++i) sum[i] = (LL)p[i] + sum[i - 1];\n\t\tfor (int i = 1; i <= m; ++i)\n\t\t{\n\t\t\tint x = Read(), y = Read();\n\t\t\tadd_Edge(x, y, 1); add_Edge(y, x, 1);\n\t\t}\n\t\tDijkstra();\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tif (dis[1][i] + dis[3][i] + dis[2][i] <= m) ans = Min(ans, sum[dis[1][i] + dis[3][i] + dis[2][i]] + sum[dis[2][i]]);\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1630415839,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "CF1343E Weights Distributing \u9898\u89e3"
    },
    {
        "content": "\n**\u9898\u610f**\n\n\u591a\u7ec4\u6837\u4f8b\n\n\u7ed9\u5b9a$n,m,a,b,c$\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$m$\u7684\u6570\u7ec4$p[]$\uff0c\u7ed9\u5b9a$m$\u6761\u8fb9\uff0c\u6784\u6210\u4e00\u4e2a$n$\u4e2a\u70b9$m$\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c$Mike$\u60f3\u8981\u4ece$a$\u8d70\u5230$b$\uff0c\u518d\u4ece$b$\u8d70\u5230$c$\uff0c\u4f60\u53ef\u4ee5\u5728\u4ed6\u4ece$a$\u51fa\u53d1\u524d\u5c06$p[]$\u4e2d\u7684\u503c\u5206\u914d\u5230$m$\u6761\u8fb9\u4e0a\uff0c\u95ee$Mike$\u6700\u5c11\u8d70\u591a\u5c11\u8def\u7a0b\n\n**\u5206\u6790**\n\n\u6211\u4eec\u5148\u5c06\u6240\u6709\u8fb9\u7684\u6743\u503c\u8d4b\u4e3a$1$\uff0c\u610f\u4e3a\u4e24\u70b9\u95f4\u7684\u6700\u5c0f\u8fb9\u6570\u4e3a\u591a\u5c11\n\n\u5982\u679c$a$\u5230$b$\u548c$b$\u5230$c$\u7684\u6700\u77ed\u8def\u4e0d\u91cd\u5408\uff0c\u90a3\u5c31\u76f4\u63a5\u5c06\u4e24\u6761\u8def\u4e0a\u7684\u8fb9\u4ece\u5c0f\u5230\u5927\u8d4b\u503c\u5373\u53ef\uff0c\u95ee\u9898\u5728\u4e8e\u6709\u91cd\u5408\u7684\u90e8\u5206\u8def\u5f84\n\n\u53d1\u73b0$\\sum n\\leq 2\\cdot 10^5$\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u91cd\u5408\u7684\u70b9$i$\uff0c\u8ba9$Mike$\u8d70\u8def\u5f84$a->i->b->i->c$\uff0c\u7136\u540e\u6c42\u5f97\u8fb9\u6570\uff0c\u5176\u4e2d$i->b$\u7684\u8def\u5f84\u4e3a$p[]$\u4e2d\u6700\u5c0f\u7684\u51e0\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u8981\u8d70\u4e24\u904d\uff0c$i->a$\u548c$i->c$\u7684\u7684\u8def\u5f84\u4e3a\u5269\u4e0b\u5143\u7d20\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\n\n\u7531\u4e8e\u4e3a\u65e0\u5411\u56fe\uff0c$i$\u5230\u4e09\u70b9\u8ddd\u79bb\u5373\u4e3a\u4e09\u70b9\u5230$i$\u8ddd\u79bb\uff0c\u4e3a\u8868\u8ff0\u65b9\u4fbf\uff0c\u7686\u7528$i$\u5230\u4e09\u70b9\u8868\u8ff0\n\n\u679a\u4e3e$i$\u80af\u5b9a\u4e0d\u80fd\u4ee5$i$\u4e3a\u8d77\u70b9\u6c42\u6700\u77ed\u8def\uff0c\u5426\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u5219\u53ef\u4ee5\u4ee5\u4e09\u70b9\u6c42\u6700\u77ed\u8def\uff0c\u7136\u540e\u679a\u4e3e$i$\n\n\u5148\u8ba1\u7b97$i->a$\u7684\u8fb9\u6570\uff0c\u4ee5$a$\u4e3a\u8d77\u70b9\uff0c\u4f7f\u7528$Dijkstra$\u7b97\u6cd5\uff0c\u518d\u8ba1\u7b97$i->b$\u7684\u8fb9\u6570\uff0c\u4ee5$b$\u4e3a\u8d77\u70b9\uff0c\u4f7f\u7528$Dijkstra$\u7b97\u6cd5\uff0c\u518d\u8ba1\u7b97$i->c$\u7684\u8fb9\u6570\uff0c\u4ee5$c$\u4e3a\u8d77\u70b9\uff0c\u4f7f\u7528$Dijkstra$\u7b97\u6cd5\uff0c\u5176\u4e2d\u4e0d\u540c\u7684\u8ddd\u79bb\u8bbe\u4e3a$disa[],disb[],disc[]$\n\n\u56e0\u4e3a\u662f\u6c42\u8def\u5f84\u6743\u503c\u548c\uff0c\u53ef\u76f4\u63a5\u6392\u5e8f\u540e\u8ba1\u7b97\u524d\u7f00\u548c$sum[]$\n\n\u8bbe$i->a$\u7684\u8def\u5f84\u4e3a$disai$\uff0c$i->$\u7684b\u8def\u5f84\u4e3a$disbi$\uff0c$i->c$\u7684\u8def\u5f84\u4e3a$disci$\uff0c\u5219\u7b54\u6848\u4e3a$sum[disai + disbi + disci] + sum[disbi]$\u7684\u6700\u5c0f\u503c(\u4e09\u8fb9\u603b\u7684\u524d\u7f00\u548c\u52a0\u4e0a$i->b$\u7684\u4e8c\u6b21\u8ba1\u7b97)\n\n\u7531\u4e8e$i$\u5230\u4e09\u70b9\u7684\u8def\u5f84\u4e0d\u53ef\u80fd\u6709\u91cd\u53e0\uff08\u5426\u5219\u53d6\u91cd\u53e0\u70b9\u53ef\u4f7f\u5f97\u7b54\u6848\u66f4\u5c0f\uff09\uff0c\u56e0\u6b64\u4e09\u6761\u8def\u5f84\u548c\u5c0f\u4e8e$m$\uff0c\u6b63\u597d\u4f7f\u5f97$disai + disbi + disci$\u4e0d\u4f1a\u8d85\u51fa$sum[]$\u7684\u8303\u56f4\n\n```cpp\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n\n#include <bits/stdc++.h>\n\n#define start ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define ll long long\n#define int ll\n#define ls st<<1\n#define rs st<<1|1\n#define pii pair<int,int>\n#define rep(z, x, y) for(int z=x;z<=y;++z)\n#define com bool operator<(const node &b)\nusing namespace std;\nconst int maxn = (ll) 2e5 + 5;\nconst int mod = (ll) 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\nint T = 1;\n\nstruct edge {\n    int v, next, w;\n} e[maxn << 1];\n\nstruct node {\n    int dis, u;\n\n    bool operator<(const node &b) const {\n        return dis > b.dis;\n    }\n};\n\nint cnt;\nint head[maxn];\nint disa[maxn];\nint disb[maxn];\nint disc[maxn];\nbool vis[maxn];\n\nvoid addedge(int u, int v, int w) {\n    e[++cnt].next = head[u];\n    e[cnt].v = v;\n    e[cnt].w = w;\n    head[u] = cnt;\n    e[++cnt].next = head[v];\n    e[cnt].v = u;\n    e[cnt].w = w;\n    head[v] = cnt;\n}\n\nint n, m, s;\n\nvoid dijkstra_a() {\n    priority_queue<node> q;\n    disa[s] = 0;\n    node st;\n    st.dis = 0;\n    st.u = s;\n    q.push(st);\n    while (!q.empty()) {\n        node u = q.top();\n        q.pop();\n        if (vis[u.u])\n            continue;\n        vis[u.u] = true;\n        for (int i = head[u.u]; ~i; i = e[i].next) {\n            int v = e[i].v;\n            if (disa[v] > disa[u.u] + e[i].w) {\n                disa[v] = disa[u.u] + e[i].w;\n                node w;\n                w.dis = disa[v];\n                w.u = v;\n                q.push(w);\n            }\n        }\n    }\n}\n\nvoid dijkstra_b() {\n    priority_queue<node> q;\n    disb[s] = 0;\n    node st;\n    st.dis = 0;\n    st.u = s;\n    q.push(st);\n    while (!q.empty()) {\n        node u = q.top();\n        q.pop();\n        if (vis[u.u])\n            continue;\n        vis[u.u] = true;\n        for (int i = head[u.u]; ~i; i = e[i].next) {\n            int v = e[i].v;\n            if (disb[v] > disb[u.u] + e[i].w) {\n                disb[v] = disb[u.u] + e[i].w;\n                node w;\n                w.dis = disb[v];\n                w.u = v;\n                q.push(w);\n            }\n        }\n    }\n}\n\nvoid dijkstra_c() {\n    priority_queue<node> q;\n    disc[s] = 0;\n    node st;\n    st.dis = 0;\n    st.u = s;\n    q.push(st);\n    while (!q.empty()) {\n        node u = q.top();\n        q.pop();\n        if (vis[u.u])\n            continue;\n        vis[u.u] = true;\n        for (int i = head[u.u]; ~i; i = e[i].next) {\n            int v = e[i].v;\n            if (disc[v] > disc[u.u] + e[i].w) {\n                disc[v] = disc[u.u] + e[i].w;\n                node w;\n                w.dis = disc[v];\n                w.u = v;\n                q.push(w);\n            }\n        }\n    }\n}\n\nint num[maxn], sum[maxn];\n\nvoid solve() {\n    memset(head, -1, sizeof(head));\n    cnt = 0;\n    int a, b, c;\n    cin >> n >> m >> a >> b >> c;\n    for (int i = 1; i <= m; ++i)\n        cin >> num[i];\n    sort(num + 1, num + 1 + m);\n    for (int i = 1; i <= m; ++i)\n        sum[i] = sum[i - 1] + num[i];\n    for (int i = 1; i <= m; ++i) {\n        int u, v;\n        cin >> u >> v;\n        addedge(u, v, 1);\n    }\n    s = a;\n    for (int i = 1; i <= n; ++i) {\n        disa[i] = disb[i] = disc[i] = inf;\n        vis[i] = false;\n    }\n    dijkstra_a();\n    s = b;\n    for (int i = 1; i <= n; ++i)\n        vis[i] = false;\n    dijkstra_b();\n    s = c;\n    for (int i = 1; i <= n; ++i)\n        vis[i] = false;\n    dijkstra_c();\n    int ans = LLONG_MAX;\n    for (int i = 1; i <= n; ++i) {\n        int disai = disa[i];\n        int disbi = disb[i];\n        int disci = disc[i];\n        if (disai + disbi + disci > m)\n            continue;\n        int now = sum[disai + disbi + disci] + sum[disbi];\n        ans = min(ans, now);\n    }\n    cout << ans << '\\n';\n}\n\n\nsigned main() {\n    start;\n    cin >> T;\n    while (T--)\n        solve();\n    return 0;\n}\n```",
        "postTime": 1588251618,
        "uid": 147428,
        "name": "F_Mu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1343E \u3010Weights Distributing\u3011"
    }
]