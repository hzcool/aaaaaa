[
    {
        "content": "## \u3010\u9898\u8bb0\u3011\n\u5199\u4e86\u4e00\u4e2a\u5c0f\u65f6\u5de6\u53f3\uff0c\u6362\u4e86\u51e0\u79cd\u7b97\u6cd5\u624d\u8c03\u51fa\u6765\uff0c\u624b\u771f\u7684\u751f\u4e86\u3002\u3002\u3002\n\n## \u3010\u6ce8\u610f\u3011\n\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5751\u70b9\uff08~~\u5176\u5b9e\u662f\u6211\u81ea\u5df1\u8111\u6b8b\u6389\u8fdb\u53bb\u7684\uff0c\u6839\u672c\u4e0d\u5751~~\uff09\uff0c\u5982\u679c\u6709\u6389\u8fdb\u53bb\u7684\u53ef\u4ee5\u770b\u770b\uff1a\n\n\u5982\u679c\u5e93\u5b58\u6ee1\u4e86\uff0c\u54ea\u6015\u4f60\u4e66\u9a6c\u4e0a\u4e70\u9a6c\u4e0a\u501f\u51fa\u53bb\uff0c\u4e5f\u662f\u4e0d\u884c\u7684\uff0c\u5fc5\u987b\u6254\u4e00\u672c\u4e66\u624d\u80fd\u4e70\u65b0\u7684\u3002\n\n\u6bd4\u5982\u5e93\u5b58$1~2~3$\uff0c\u6709\u4eba\u6765\u501f$4$\uff0c\u54ea\u6015\u4ed6\u501f\u5b8c\u4e4b\u540e\u518d\u4e5f\u6ca1\u6709\u4eba\u8981$4$\u8fd9\u672c\u4e66\u4e86\uff08\u5c31\u662f\u8bf4$4$\u5e9f\u4e86\uff09\uff0c\u4f60\u4e5f\u5f97\u5fcd\u75db\u5272\u7231\u5148\u6254\u4e00\u672c\u5e93\u5b58\u7684\u624d\u80fd\u628a$4$\u501f\u51fa\u53bb\u3002\n## \u3010\u601d\u8def\u3011\n\u8fd9\u9053\u9898\u6709\u4e09\u4e2a\u7248\u672c\uff0c\u6700\u5f31\u7684\u6570\u636e\u8303\u56f4\u624d$80$\uff08~~\u5c45\u7136\u4e5f\u662f\u84dd\u9898~~\uff09\uff0c\u6700\u96be\u7684\u6807\u7b97\u4f3c\u4e4e\u662f\u7f51\u7edc\u6d41\u8d39\u7528\u6d41\uff0c\u6211\u6bd4\u8f83\u5f31\uff0c\u6240\u4ee5\u8fd9\u91cc\u8fd8\u662f\u8bb2\u4e00\u8bb2\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u7684\u89e3\u6cd5\u3002\n\n\u9898\u610f\u5f88\u660e\u4e86\uff0c\u4f60\u6700\u591a\u5b58$k$\u672c\u4e66\uff0c\u8d85\u51fa\u7684\u8981\u6254\u6389\uff0c\u6ca1\u6709\u7684\u8981\u4e70\u8fdb\uff0c\u4e8e\u662f\u60f3\u5230\u8981\u5c3d\u53ef\u80fd\u5c11\u4e70\u4e66\uff0c\u5373\u5c3d\u53ef\u80fd\u8ba9\u5df2\u6709\u7684\u4e66\u53d1\u6325\u6700\u5927\u4f5c\u7528\u3002\n\n\u4e8e\u662f\u60f3\u5230\u4e86\u8d2a\u5fc3\u3002\n\n\u518d\u770b\u6570\u636e\u8303\u56f4\uff0c\u4f3c\u4e4e\u662f$O(nlogn)$\u7ea7\u522b\u7684\uff0c\u4e8e\u662f\u53c8\u60f3\u5230\u4e86\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\n\n## \u3010\u7b97\u6cd5\u3011\n\u9996\u5148\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\uff0c \u65b9\u5411\u80af\u5b9a\u662f\u4ece\u5e93\u5b58\u4e66\u6548\u76ca\u7684\u6700\u5927\u5316\u4e0b\u624b\uff0c\u4e8e\u662f\uff0c\u5f53\u6211\u4eec\u53d1\u73b0\u4e00\u672c\u9700\u8981\u5e93\u5b58\u7684\u65b0\u4e66\u65f6\uff0c\u5e94\u8be5\u5148\u6254\u7684\u4e00\u5b9a\u662f\u6548\u76ca\u6700\u5c0f\u7684\u3002\n\n\u90a3\u4e48\u6548\u76ca\u600e\u4e48\u8ba1\u7b97\u5462\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u6254\u4e86\u54ea\u4e00\u672c\u4e66\u540e\u9762\u4e70\u4e66\u5c31\u53ef\u4ee5\u5c11\u4e70\u4e00\u4e9b\u5462\uff1f\n\n**\u7b54\u6848\u5c31\u662f\uff0c\u5148\u6254\u6389\u5e93\u5b58\u4e66\u4e2d\uff0c\u4e0b\u4e00\u6b21\u7528\u6700\u665a\u7684\u4e66\u3002**\n\n\u8fd9\u4e2a\u7ef4\u62a4\u597d\u7ef4\u62a4\uff0c\u7528\u4e00\u4e2a\u5806\u5c31\u884c\uff0c\u4e0b\u9762\u4e3b\u8981\u8fd8\u662f\u8bc1\u660e\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u8d2a\u5fc3\u7b56\u7565\u662f\u5bf9\u7684\u3002\n\n## \u3010\u8bc1\u660e\u3011\n\u8fd9\u4e2a\u6700\u597d\u8fd8\u662f\u610f\u4f1a\u3002\n\n\u9996\u5148\uff0c\u5047\u8bbe\u6709\u4e24\u672c\u4e66\uff0c\u4e00\u672c\u5148\u7528\u5230\uff0c\u79f0\u4e3a$A$\uff0c\u53e6\u4e00\u672c\u540e\u7528\u5230\uff0c\u79f0\u4e3a$B$\u3002\n\n\u90a3\u4e48\uff0c\u5728\u4e0b\u4e00\u6b21\u7528$B$\u4e4b\u524d\uff0c$A$\u4e00\u5b9a\u88ab\u7528\u5230\u8fc7\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u5148\u6254\u4e86$A$\uff0c\u90a3\u4e48\u5728\u7528$B$\u4e4b\u524d\u4e00\u5b9a\u4f1a\u7528\u5230\u4e0d\u6b62\u4e00\u6b21$A$\uff0c\u5373\u53ef\u80fd\u4e70\u4e0d\u6b62\u4e00\u6b21\uff0c\u6700\u540e\u7528$B$\u65f6\u8fd8\u662f$A~B$\u90fd\u5728\u5e93\u91cc\uff08\u53ea\u662f\u65f6\u95f4\u53ef\u80fd\u4e0d\u540c\uff09\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u5148\u6254\u4e86$A$\uff0c\u5728\u7528$B$\u4e4b\u524d\u81f3\u5c11\u7528\u4e00\u6b21$A$\uff0c\u53ef\u80fd\u4e70\u7684\u6b21\u6570**\u591a\u4e8e\u4e00\u6b21**\uff0c\u4f46\u5148\u6254$B$\uff0c\u5728\u4e0b\u4e00\u6b21\u7528$B$\u4e4b\u524d\u5bf9\u4e8e$A~B$\u6765\u8bf4\u4e00\u5b9a\u53ea\u7528\u4e70\u4e00\u6b21\u4e66\u3002\n\n\u7531\u6b64\uff0c\u5bf9\u4e8e$A~B$\uff0c\u5148\u6254$B$\u4e00\u5b9a\u4f18\u4e8e$A$\u3002\n\n\u8bc1\u6bd5\u3002\n\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint k, n;\nint ans, tot, succ[400010];\nbool b[400010];\npair <int, int> a[400010];\nstruct BOOK{\n\tint num, nxt;\n\tBOOK (int tmp1, int tmp2) : num(tmp1), nxt(tmp2) {}\n\tbool operator < (const BOOK &b) const\n\t{\n\t\treturn nxt < b.nxt;\n\t}\n\tbool operator > (const BOOK &b) const\n\t{\n\t\treturn nxt > b.nxt;\n\t}\n\t\n};\npriority_queue <BOOK> q;\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &k);\n\tfor (register int i = 1;i <= n;i ++)\n\t{\n\t\tscanf(\"%d\", &a[i].first);\n\t}\n\tfor (register int i = n;i >= 1;i --)\n\t{\n\t\tif(!succ[a[i].first]) a[i].second = 0x3f3f3f3f;//\u5982\u679c\u8fd9\u672c\u4e66\u518d\u4e5f\u4e0d\u4f1a\u88ab\u7528\u5230\u4e86\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u4e0b\u4e00\u6b21\u7528\u5230\u7684\u4f4d\u7f6e\u8bbe\u4e3a\u65e0\u9650\u5927\uff0c\u56e0\u4e3a\u5b83\u88ab\u6254\u6389\u663e\u7136\u6700\u4f18\u3002\n\t\telse a[i].second = succ[a[i].first];\n\t\tsucc[a[i].first] = i;\n\t}\n\tfor (register int i = 1;i <= n;i ++)\n\t{\n\t\tif(!b[a[i].first])\n\t\t{\n\t\t\tans ++;\n\t\t\ttot ++;\n\t\t\tif(tot > k)\n\t\t\t{\n\t\t\t\ttot --;\n\t\t\t\tBOOK tp = q.top();\n\t\t\t\tq.pop();\n\t\t\t\tb[a[tp.num].first] = false;\n\t\t\t}\n\t\t\tb[a[i].first] = true;\n\t\t}\n\t\tq.push(BOOK(i, a[i].second));\n\t}\n\tprintf(\"%d\\n\", ans);\n}\n```",
        "postTime": 1573116742,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF802B \u3010Heidi and Library (medium)\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u8bb2\u7684\u662f $O(n \\log n)$ \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u53cc\u500d\u7ecf\u9a8c\u3002\n\n~~\u636e\u8bf4\u6709\u4ec0\u4e48\u795e\u4ed9\u7f51\u7edc\u6d41\u53ef\u4ee5\u505a\uff0cwtcl \u60f3\u4e0d\u660e\u767d\u3002~~\n\n\u8003\u8651\u6734\u7d20\u7684\u8d2a\u5fc3\uff0c\u6211\u4eec\u80fd\u88c5\u6ee1\u5219\u88c5\u6ee1\uff0c\u4e0d\u80fd\u88c5\u6ee1\u5c31\u6254\u3002\n\n\u600e\u4e48\u6254\uff1f\u80af\u5b9a\u662f\u6254\u4e0b\u4e00\u6b21\u7528\u5230\u65f6\u95f4\u6bd4\u8f83\u8fdc\u7684\u4e66\u3002\n\n\u4e0d\u4e25\u683c\u8bc1\u660e\u4e00\u4e0b\uff0c\u5047\u5982\u6211\u4eec\u6254\u4e86\u4e00\u4e2a\uff0c\u90a3\u4e48\u5230\u4e86\u90a3\u4e2a\u65f6\u523b\u8fd8\u5f97\u518d\u6254\u4e00\u4e2a\u4e70\u56de\u6765\uff0c\u800c\u5982\u679c\u6211\u4eec\u6254\u4e86\u6bd4\u8f83\u8fd1\u7684\uff0c\u90a3\u4e48\u8fd1\u7684\u90a3\u4e2a\u65f6\u523b\u8fd8\u5f97\u518d\u4e70\u4e00\u4e2a\u518d\u6254\u4e00\u4e2a\uff0c\u4e00\u79cd\u7406\u60f3\u7684\u60c5\u51b5\u662f\u5c3d\u91cf\u8ba9\u6254\u7684\u64cd\u4f5c\u5c11\u53d1\u751f\u3002\n\n\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u65f6\u95f4\u6bd4\u8f83\u8fdc\u7684\u662f\u4e0d\u591f\u4f18\u79c0\u7684\u3002\n\n\u77e5\u9053\u4e86\u8fd9\u4e2a\uff0c\u6211\u4eec\u7528\u66b4\u529b\u53bb\u7ef4\u62a4\u53ef\u4ee5\u8fc7\u6389 CF802A\u3002\n\n\u8003\u8651\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u53bb\u7ef4\u62a4\uff0c\u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\u662f\u628a\u65f6\u95f4\u8fdc\u7684\u5f39\u6389\uff0c\u7136\u540e\u52a0\u5165\u5143\u7d20\uff0c\u5f88\u7b80\u5355\u7684\u662f\u7528\u5806\u6765\u7ef4\u62a4\uff0c\u4f46\u662f\u6211\u6bd4\u8f83\u83dc\uff0c\u4e0d\u4f1a\u5904\u7406\u5806\u5185\u4fee\u6539\uff0c\u5373\u9047\u5230\u4e00\u4e2a\u5728\u5806\u5185\u7684\u5143\u7d20\u9700\u8981\u628a\u5b83\u7684\u6743\u503c\u4fee\u6539\u4e00\u4e0b\u3002\n\n\u7c7b\u4f3c\u7684\uff0c\u4fee\u6539\u6743\u503c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u4ea4\u7ed9 set \u6765\u5b8c\u6210\u3002\n\n\u8bb0\u5f55\u5143\u7d20\u6743\u503c\u548c\u5143\u7d20\uff0c\u7136\u540e\u9047\u5230\u4e86\u5c31\u628a\u4ed6\u5220\u6389\uff0c\u6254\u8fdb\u53bb\u4e00\u4e2a\u6700\u65b0\u7684\u3002\n\n\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\log n)$\uff0c\u540c\u65f6\u5e38\u6570\u7a0d\u5927\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <algorithm>\n#include <set>\n#define pb push_back\nusing namespace std;\nconst int INF=4e5+5;\nint n,m,a[INF],vis[INF],L[INF];\nvector <int> v[INF];\nstruct _node_queue {\n\tint dis_v,pos;\n\tbool operator < (const _node_queue &x) const {\n\t\treturn x.dis_v<dis_v;\n\t}\n};\nmultiset <_node_queue> q;\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++) \n\t\tcin>>a[i],v[a[i]].pb(i);\n\tint ans=0;\n\tfor (int i=1;i<=n;i++) {\n\t\tif (vis[a[i]]) {\n\t\t\tint x=a[i],y=L[a[i]];\n\t\t\tq.erase(q.find((_node_queue){y,x}));\n\t\t\tint it=upper_bound(v[a[i]].begin(),v[a[i]].end(),i)-v[a[i]].begin();\n\t\t\tif (it<v[a[i]].size()) it=v[a[i]][it];\n\t\t\telse it=1e9;\n\t\t\tL[a[i]]=it;\n\t\t\tq.insert((_node_queue){it,a[i]});\n\t\t\tcontinue;\n\t\t}\n\t\tans++;\n\t\tif (q.size()<m) {\n\t\t\tint it=upper_bound(v[a[i]].begin(),v[a[i]].end(),i)-v[a[i]].begin();\n\t\t\tif (it<v[a[i]].size()) it=v[a[i]][it];\n\t\t\telse it=1e9;\n\t\t\tL[a[i]]=it;\n\t\t\tq.insert((_node_queue){it,a[i]});vis[a[i]]=1;\n\t\t}\n\t\telse {\n\t\t\t_node_queue xx=*q.begin();q.erase(q.find(*q.begin()));\n\t\t\tvis[xx.pos]=0;\n//\t\t\tcout<<xx.pos<<\" weaijr\\n\";\n\t\t\tint it=upper_bound(v[a[i]].begin(),v[a[i]].end(),i)-v[a[i]].begin();\n\t\t\tif (it<v[a[i]].size()) it=v[a[i]][it];\n\t\t\telse it=1e9;\n\t\t\tL[a[i]]=it;\n\t\t\tq.insert((_node_queue){it,a[i]});vis[a[i]]=1;\n\t\t}\n\t}\n\tcout<<ans<<\"\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1661752999,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF802B/CF802A"
    }
]