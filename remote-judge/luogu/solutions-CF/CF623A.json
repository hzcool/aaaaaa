[
    {
        "content": "\u5148\u63cf\u8ff0\u4e00\u4e0b\u9898\u610f\u5427\uff1a\n\n\u7ed9\u51fa\u4e00\u4e2a\u7531\u5b57\u7b26\u4e32$s$\u5efa\u56fe\u7684\u8fc7\u7a0b\uff0c\n\n- \u5b57\u7b26\u4ec5\u6709$a,b,c$\u4e09\u79cd\uff0c\u5efa\u51fa\u7684\u56fe\u4e2d\u7b2c$i$\u4e2a\u9876\u70b9\u8868\u793a\u539f\u6765\u7684\u7b2c$i$\u4e2a\u5b57\u7b26\u3002\n- $i$\u4e0e$j$\u6709\u8fde\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53$s[i]$\u4e0e$s[j]$\u76f8\u540c\u6216$s[i]$\u548c$s[j]$\u662f\u76f8\u90bb\u7684\u5b57\u7b26\uff08$a$\u4e0e$b$\u76f8\u90bb\uff0c$b$\u4e0e$c$\u76f8\u90bb\uff09\n\n\u73b0\u7ed9\u51fa\u7531\u67d0\u4e2a\u5b57\u7b26\u4e32$s$\u5efa\u51fa\u7684\u56fe\uff0c\u6784\u9020\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u5176\u7b26\u5408\u4e0a\u9762\u7684\u8981\u6c42\u8981\u6c42\uff0c\u6216\u8005\u56de\u7b54\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u3002\n\n###### \u8f93\u5165\uff1a\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570$n,m$\uff0c\u8868\u793a\u8282\u70b9\u6570\uff08\u5373\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u548c\u8fb9\u6570\n\u63a5\u4e0b\u6765$m$\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570\u5b57 $u_{i}$ and $v_{i}$\uff0c\u8868\u793a\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\n\n###### \u8f93\u51fa\uff1a\n\u5982\u679c\u5b57\u7b26\u4e32\u5b58\u5728\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a$\u201cYes\u201d\uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002\n\n\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u4ec5\u5728\u7b2c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a\u201cNo\u201d\uff1b\n\n---\n\n#### \u8bb2\u89e3\u65f6\u95f4\uff1a\n\n\u7531\u9898\u610f\u53ef\u77e5\uff0c$b$\u4e0e\u6240\u6709\u7684\u70b9\u90fd\u6709\u8fde\u8fb9\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u627e\u51fa$b$\uff0c\n\n\u53cd\u8fc7\u6765\u60f3\uff0c\u53ea\u6709$a,c$\u4e4b\u95f4\u6709\u6ca1\u6709\u8fde\u7684\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u56fe\u53cd\u8fc7\u6765\uff0c\u51c6\u786e\u7684\u8bf4\u662f\u5efa\u539f\u56fe\u7684\u8865\u56fe\uff0c\n\n\u5982\u679c\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u8fd9\u4e2a\u8865\u56fe\u4e00\u5b9a\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u5bf9\u8865\u56fe\u8fdb\u884c\u4e8c\u5206\u56fe\u67d3\u8272\u5c31\u5b8c\u6210\u4e86\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\uff0c\u5728\u8865\u56fe\u4e2d\u4e00\u6761\u8fb9\u90fd\u6ca1\u6709\u7684\u5373\u4e3a\u70b9$b$\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u5904\u7406\uff0c\u53ea\u5728\u6700\u540e\u8f93\u51fa\u5c31\u53ef\u4ee5\u5566\u3002\n##### \u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<ctype.h>\n#include<cstring>\n#include<cstdlib>\n#define _ 0\nusing namespace std;\ninline int read(){\n    int x=0,f=0;char ch=getchar();\n    while(!isdigit(ch))f|=ch=='-',ch=getchar();\n    while(isdigit(ch))x=x*10+(ch^48),ch=getchar();\n    return f?-x:x;\n}\nint head[507],cnt;\nstruct Edge{\n    int next,to;\n}edge[500007];\nbool ma[507][507];//\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff0c\u65b9\u4fbf\u5efa\u8865\u56fe\nint col[507];\ninline void Byebye(){printf(\"No\\n\");exit( ~~(0^_^0) );}//\u6709\u70b9\u95f2..\ninline void add_edge(int from,int to){\n    edge[++cnt].next=head[from];\n    edge[cnt].to=to;head[from]=cnt;\n}\nbool dfs(int x){//\u4e8c\u5206\u56fe\u67d3\u8272\n    for(int i=head[x];i;i=edge[i].next){\n        int to=edge[i].to;\n        if(col[to]==col[x])return 0;\n        if(~col[to])continue;col[to]=col[x]^1;\n        if(!dfs(to))return 0;\n    }\n    return 1;\n}\nint main(){\n    int n=read(),m=read();\n    for(int i=1;i<=m;++i){\n        int u=read(),v=read();\n        ma[u][v]=ma[v][u]=1;\n    }\n    for(int i=1;i<=n;++i)for(int j=1;j<i;++j)//\u5efa\u8865\u56fe\n        if(!ma[i][j])add_edge(i,j),add_edge(j,i);\n    memset(col,-1,sizeof col);//\u67d3\u8272\u6570\u7ec4\u7f6e\u4e3a-1\uff0c\u6700\u540e\u82e5\u4f9d\u65e7\u4e3a-1,\u5373\u4e3ab\n    for(int i=1;i<=n;++i){\n        if(~col[i] || !head[i])continue;\n        col[i]=0;\n        if(!dfs(i))Byebye();//\u67d3\u8272\u57fa\u672c\u5957\u8def\uff0c\u82e5\u4e0d\u7b26\u5408\u6761\u4ef6\u8f93\u51faNo\uff0c\u9000\u51fa\u7a0b\u5e8f\n    }\n    for(int i=1;i<=n;++i)for(int j=1;j<i;++j)\n        if(ma[i][j] && col[i]+col[j]==1)Byebye();//\u68c0\u67e5a,c\u4e4b\u95f4\u662f\u5426\u6709\u8fde\u8fb9\n    printf(\"Yes\\n\");\n    for(int i=1;i<=n;++i)putchar(~col[i]?!col[i]?'a':'c':'b');//\u8f93\u51fa\u4e00\u79cd\u5373\u53ef\n    return 0;//\u597d\u4e60\u60ef\n}\n```",
        "postTime": 1545178939,
        "uid": 56653,
        "name": "\u73c5\u8090",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF623A \u3010Graph and String\u3011"
    },
    {
        "content": "## \u5e76\u67e5\u96c6\u505a\u6cd5\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u5e76\u67e5\u96c6\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u6839\u636e\u9898\u610f\u80fd\u53d1\u73b0\uff1a\n\n1. $a$ \u53ea\u4e0e $a,b$ \u8fde\u8fb9\u3002\n\n2. $b$ \u4e0e\u6240\u6709\u70b9\u8fde\u8fb9\u3002\n\n3. $c$ \u53ea\u4e0e $b,c$ \u8fde\u8fb9\u3002\n\n\u6211\u4eec\u4ece\u4e0a\u53ef\u4ee5\u5f97\u77e5\u5f53\u4e00\u4e2a\u70b9\u4e3a $b$ \u7684\u65f6\u5019\uff0c\u4ed6\u7684\u5ea6\u6570\u662f $n-1$\u3002\n\n\u800c\u5269\u4e0b\u7684 $a$ \u548c $c$ \u4e4b\u95f4\u662f\u4e92\u76f8\u8fde\u8fb9\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53bb\u6389\u4e3a $b$ \u7684\u70b9\u4ee5\u53ca\u4e0e\u4e4b\u76f8\u8fde\u7684\u8fb9\uff0c\u6211\u4eec\u6700\u540e\u5f97\u5230\u7684\u56fe\uff0c\u53ea\u6709\u4e24\u4e2a\u8fde\u901a\u5757\uff08\u4e5f\u662f\u4e24\u4e2a\u5b8c\u5168\u56fe\uff09\uff0c\u4e00\u4e2a\u91cc\u9762\u7684\u70b9\u5168\u662f $a$\uff0c\u4e00\u4e2a\u91cc\u9762\u7684\u70b9\u5168\u662f $c$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570 $du_{i}$\uff0c\u4ee5\u53ca\u56fe\u7684\u8fde\u901a\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u7aef\u70b9\u6709 $b$ \u7684\u8fb9\u6211\u4eec\u76f4\u63a5\u8df3\u8fc7\uff0c\u5176\u4f59\u7684\u8fb9\u6211\u4eec\u8fdb\u884c\u5e76\u67e5\u96c6\u7684\u5408\u5e76\uff0c\u6700\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u8981\u662f\u6709\u5927\u4e8e\u4e24\u4e2a\u7684\u8fde\u901a\u5757\uff0c\u4e00\u5b9a\u662f\u65e0\u89e3\u7684\uff0c\u5bf9\u4e8e\u540c\u4e00\u8fde\u901a\u5757\u91cc\u7684\u70b9\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u70b9\u4e4b\u95f4\u662f\u6ca1\u6709\u8fb9\u76f8\u8fde\u7684\uff0c\u8bf4\u660e\u65e0\u89e3\uff0c\u56e0\u4e3a\u9898\u76ee\u8bf4\u4e86\u76f8\u540c\u7684\u5b57\u7b26\u4e4b\u95f4\u6709\u8fb9\u3002\n\n\u6700\u540e\u6211\u4eec\u9700\u8981\u6807\u8bb0\u4e00\u4e0b $n$ \u4e2a\u70b9\u7684\u6240\u5c5e\u7684\u8fde\u901a\u5757\uff0c\u7136\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n### code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 510\nusing namespace std;\nint n,m,cnt,du[N],fa[N],mp[N][N],vis[N];\ninline int fid(int x){if(fa[x]==x)return x;return fa[x]=fid(fa[x]);}\ninline int read(){int x=0,f=1;char ch=getchar();while(!isdigit(ch)){f=ch!='-';ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}return f?x:-x;}\nsigned main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)fa[i]=i,mp[i][i]=1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tdu[u]++,du[v]++;\n\t\tmp[u][v]=mp[v][u]=1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(du[i]==n-1)continue;\n\t    for(int j=1;j<=n;j++)\n\t      if(du[j]!=n-1&&mp[i][j])fa[fid(i)]=fid(j);\n\t\tint xx=fid(i);\n\t\tif(!vis[xx])vis[xx]=++cnt;\n\t}\n\tif(cnt>2){cout<<\"No\"<<endl;return 0;}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(du[i]==n-1)continue;\n\t    for(int j=1;j<=n;j++)\n\t\t  if(fid(i)==fid(j))if(!mp[i][j]){cout<<\"No\"<<endl;return 0;}\n\t}\n\tcout<<\"Yes\"<<endl;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint xx=fid(i);\n\t\tif(du[i]==n-1)cout<<\"b\";\n\t\telse if(vis[xx]==1)cout<<\"a\";\n\t\telse if(vis[xx]==2)cout<<\"c\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683375465,
        "uid": 526519,
        "name": "Aisaka_Taiga",
        "ccfLevel": 0,
        "title": "CF623A"
    },
    {
        "content": "# \u3010\u6c34\u9898\u89e3\u8bb0\u5f55\u3011CF623A Graph and String\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u7531\u5b57\u7b26\u4e32 $s$ \u5efa\u56fe\u7684\u8fc7\u7a0b\uff1a\n\n* \u5b57\u7b26\u4ec5\u6709 $a,b,c$ \u4e09\u79cd\uff0c\u5efa\u51fa\u7684\u56fe\u4e2d\u7b2c $i$ \u4e2a\u5b9a\u70b9\u8868\u793a\u539f\u6765\u7684\u7b2c $i$ \u4e2a\u5b57\u7b26\n* $i$ \u548c $j$ \u6709\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53 $s_i=s_j$ \u6216\u8005 $s_i$ \u548c $s_j$ \u662f\u76f8\u90bb\u7684\u5b57\u7b26\n* $a\uff0cb$ \u76f8\u90bb\uff0c$b,c$ \u76f8\u90bb\n\n\u7ed9\u51fa\u67d0\u4e2a\u5b57\u7b26\u4e32 $s$ \u5efa\u51fa\u7684\u56fe\uff0c\u6784\u9020\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u5176\u6ee1\u8db3\u4ee5\u4e0a\u8981\u6c42\u3002\n\n\u5982\u679c\u65e0\u89e3\u8f93\u51fa $No$\u3002\n\n## \u9898\u89e3\n\n\u663e\u7136\uff0c\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u662f $b$ \uff0c\u5b83\u4e0e\u9664\u4e86\u81ea\u8eab\u7684\u6240\u6709\u9876\u70b9\u90fd\u6709\u9876\u70b9\u3002\u6211\u4eec\u5148\u8fdb\u884c\u7279\u5224\u3002\n\n\u5269\u4e0b\u53ea\u8eab\u4e0b $a,c$ \uff0c\u5bf9\u4e8e\u9876\u70b9 $i,j$\uff0c\u5982\u679c $i,j$ \u6709\u8fde\u8fb9\uff0c\u5219 $s_i=s_j$\uff0c\u5426\u5219 $s_i\\not=s_j$\u3002\n\n\u53d1\u73b0\u662f\u4e00\u4e2a\u5178\u578b\u7684 **2-SAT**\uff0c\u4f7f\u7528 $tarjan$ \u89e3\u51b3\u672c\u9898\u3002\n\n## Code\n\n```cpp\n#define maxn 1005\nint scc[maxn],dfn[maxn],low[maxn],stac[maxn],vis[maxn],times,tot,sccnum;\nint h[maxn],in[maxn],head=1,f[maxn][maxn],ans[maxn],n,m;\nstruct yyy{\n\tint to,z;\n\tinline void add(int x,int y){\n\t\tto=y;z=h[x];h[x]=head;\n\t}\n}a[maxn*maxn*2];\ninline void tarjan(int x){\n\trg int i;dfn[x]=low[x]=++times;stac[++tot]=x;vis[x]=1;\n\tfor (i=h[x];i;i=a[i].z)\n\t    if (!dfn[a[i].to]) tarjan(a[i].to),low[x]=min(low[x],low[a[i].to]);\n\t    else if (vis[a[i].to]) low[x]=min(low[x],dfn[a[i].to]);\n\tif (low[x]==dfn[x]){\n\t\t++sccnum;\n\t\twhile (1){\n\t\t\tvis[stac[tot]]=0;\n\t\t\tscc[stac[tot]]=sccnum;\n\t\t\tif (stac[tot--]==x) return;\n\t\t}\n\t}\n}\nsigned main(){\n\trg int i,j,x,y;\n\tread(n);read(m);\n\tfor (i=1;i<=m;i++) {\n\t\tread(x);read(y);\n\t\tin[x]++;in[y]++;f[x][y]=f[y][x]=1;\n\t}\n\tfor (i=1;i<=n;i++){\n\t\tif (in[i]==n-1) continue;\n\t\tfor (j=1;j<=n;j++) \n            if (in[j]<n-1&&i!=j){\n            \tif (f[i][j]) a[++head].add(i,j),a[++head].add(i+n,j+n);\n            \telse a[++head].add(i,j+n),a[++head].add(i+n,j);\n\t\t\t}\n\t}\n\tfor (i=1;i<=2*n;i++) if (!dfn[i]) tarjan(i);\n\tfor (i=1;i<=n;i++) if (in[i]<n-1&&scc[i]==scc[i+n]) return puts(\"No\"),0;\n\tfor (puts(\"Yes\"),i=1;i<=n;i++) \n\t    if (in[i]==n-1) putchar('b');\n\t    else putchar(scc[i]<scc[i+n]?'a':'c');\n\treturn 0;\n}\n```\n\n",
        "postTime": 1622547389,
        "uid": 51569,
        "name": "\u8fdd\u89c4\u7528\u6237\u540dFkZyA0!2",
        "ccfLevel": 0,
        "title": "\u3010\u6c34\u9898\u89e3\u8bb0\u5f55\u3011CF623A Graph and String"
    },
    {
        "content": "\u9996\u5148\u6ce8\u610f\u5230 $\\texttt{b}$ \u5b57\u7b26\u4e0e\u6240\u6709\u5b57\u7b26\u8fde\u8fb9\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u5730\u6c42\u51fa\u54ea\u4e9b\u8282\u70b9\u662f $\\texttt{b}$ \u5b57\u7b26\n\n\u7136\u540e\u6211\u4eec\u53bb\u6389\u5176\u4ed6\u5b57\u7b26\u8fde\u63a5 $\\texttt{b}$ \u7684\u8fde\u8fb9\n\n\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u6709\u5408\u6cd5\u7684\u6784\u9020\u65b9\u6848\n\n\u4e00\u5b9a\u662f $2$ \u4e2a\u5b8c\u5168\u56fe\uff0c\u4e00\u4e2a\u5168\u662f $\\texttt{a}$ ,\u4e00\u4e2a\u5168\u662f $\\texttt{c}$\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+m)$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue> \n#include<vector>\n#include<cstdlib>\n#include<algorithm>\nstd::vector<int> a[100005];\nint n,m,col[100005],cnt[100005];\nvoid add(int x,int y){a[x].push_back(y);a[y].push_back(x);}\nvoid bfs(int s,int k)\n{\n\tint sz=0;\n\tstd::queue<int> q;\n\tcol[s]=k;q.push(s);\n\twhile (!q.empty())\n\t{\n\t\tint v=q.front();q.pop();\n\t\tfor (int i=0;i<a[v].size();i++)\n\t\t{\n\t\t\tint u=a[v][i];\n\t\t\tif (col[u]) continue;\n\t\t\t++sz;\n\t\t\tcol[u]=k;\n\t\t\tq.push(u);\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++) if (col[i]==k&&cnt[i]!=sz){puts(\"No\");exit(0);}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t}\n\tfor (int i=1;i<=n;i++) if (a[i].size()==n-1) col[i]=2;\n\tfor (int i=1;i<=n;i++) for (int j=0;j<a[i].size();j++) if (!col[a[i][j]]) ++cnt[i];\n\tint k;\n\tfor (k=1;k<=n;k++) if (!col[k]) break;\n\tbfs(k,1);\n\tfor (k=1;k<=n;k++) if (!col[k]) break;\n\tbfs(k,3);\n\tfor (int i=1;i<=n;i++) if (!col[i]){puts(\"No\");return 0;}\n\tputs(\"Yes\");\n\tfor (int i=1;i<=n;i++) printf(\"%c\",col[i]+96);\n\tputs(\"\");\n\treturn 0;\n}\n```\n",
        "postTime": 1584264724,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF623A \u3010Graph and String\u3011"
    }
]