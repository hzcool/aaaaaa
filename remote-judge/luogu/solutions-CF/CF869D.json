[
    {
        "content": "# \u597d\u9898\u5206\u4eab: The Overdosing Ubiquity (CF869D) - by Albus Sparrow #\n\n## \u9898\u76ee\u63cf\u8ff0 ##\n\n\u7ed9\u5b9a\u4e00\u68f5 n \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u3002 \u4e8c\u53c9\u6811\u4e0a\u7b2c i \u53f7\u8282\u70b9\u5411 $ \\lfloor \\frac{i}{2} \\rfloor $ \u53f7\u8fde\u8fb9 $(i>1)$ \u6811\u4e0a\u6709\u591a\u4f59 $ m $ \u6761\u8fb9\uff08\u53ef\u80fd\u6709\u91cd\u8fb9\uff0c\u4e0d\u4f1a\u6709\u81ea\u73af\uff09\u3002 \u6c42\u672c\u8d28\u4e0d\u540c\u7684 \u975e\u73af\u7b80\u5355\u8def\u5f84\u6761\u6570\u819c $ 10^9+7 $\u3002\n\n## \u5207\u9898\u8bb0\u5f55 ##\n\n\u9996\u5148\uff0c\u201c\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u8def\u5f84\u4e5f\u662f\u7b80\u5355\u8def\u5f84\u201d\u544a\u8bc9\u6211\u4eec\uff0c\u5982\u679c\u8fd9\u68f5\u6811\u6ca1\u6709\u4efb\u4f55\u9644\u52a0\u8fb9\uff0c\u90a3\u4e48\u7b80\u5355\u8def\u5f84\u5c31\u6709 $ n^2 $ \u6761\uff0c\u7279\u5224 $ m = 0 $\uff0c\u53ef\u62ff $ 15 $ pts\u3002\n\n\u5bf9\u4e8e $ n $ \u6781\u5c0f\u7684\u6570\u636e\uff0c\u76f4\u63a5\u66b4\u529b\u5efa\u56fe\u8dd1 $ dfs $ \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f $ O(n!) $\uff08\u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u590d\u6742\u5ea6\u5bf9\u4e0d\u5bf9\uff0c\u82e5\u6709\u8c2c\u8bef\uff0c\u6b22\u8fce\u62ac\u6760\uff09\u3002\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\nvoid dfs(int x) {\n\tif (vis[x]) return;\n\t++ans;\n\tvis[x] = 1;\n\tGraph(x) dfs(y);\n\tvis[x] = 0;\n}\n```\n\n\u5176\u4e2d `Graph(x)` \u4e3a\u904d\u5386 `x` \u51fa\u53d1\u7684\u6240\u6709\u8fb9\u3002\n\n**\u6ce8\u610f\uff1a\u4ee5\u4e0b\u7684\u6b63\u89e3\u601d\u8def\u4e3b\u8981\u4f9d\u9644\u4e8e\u8fd9\u4e2a dfs\uff01**\n\n\u60f3\u60f3\u6811\u4e3a\u4ec0\u4e48\u80fd $ O(1) $ \u5f97\u5230\u7b80\u5355\u8def\u5f84\u6570\u91cf\uff0c\u663e\u7136\u8fd9\u662f\u7531\u4e8e\u6811\u201c\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u53ea\u6709\u4e00\u6761\u201d\u7684\u6027\u8d28\uff0c\u800c\u6dfb\u52a0\u9644\u52a0\u8fb9\u6b63\u662f\u7834\u574f\u4e86\u8fd9\u6761\u6027\u8d28\u624d\u4f7f\u5f97\u6c42\u89e3\u53d8\u9ebb\u70e6\u4e86\u3002\u6211\u4eec\u60f3\uff0c\u6bcf\u6dfb\u52a0\u4e00\u6761\u9644\u52a0\u8fb9\uff0c\u53ea\u4f1a\u7834\u574f $ u $ \u548c $ v $ \u548c\u5176 $ lca $ \u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6027\u8d28\u3002\u6211\u4eec\u628a\u4e00\u5f20\u56fe\u4e2d\u6ee1\u8db3\u201c\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u53ea\u6709\u4e00\u6761\u201d\u7684\u8fde\u901a\u5206\u91cf\u79f0\u4f5c\u201c\u6811\u8fde\u901a\u5206\u91cf\u201d\uff0c\u7531\u4e8e $ m $ \u975e\u5e38\u5c0f\uff0c\u53ef\u4ee5\u91c7\u53d6\u201c\u7f29\u70b9\u201d\u7684\u601d\u60f3\uff0c\u628a\u4e00\u4e2a\u6781\u5927\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7f29\u6210\u4e00\u4e9b\u6781\u5c11\u7684\u70b9\u6784\u6210\u7684\u56fe\uff0c\u5728\u8fd9\u4e2a\u56fe\u4e0a\u8dd1 $ dfs $ \u5373\u53ef\u3002\n\n\u4ed4\u7ec6\u6765\u8bf4\uff0c\u6211\u4eec\u628a\u6240\u6709\u9644\u52a0\u8fb9\u7684\u7aef\u70b9\u7684 $ lca $ \u548c\u5176\u8def\u5f84\u4e0a\u7684\u70b9\u53d6\u51fa\uff0c\u91cd\u65b0\u6807\u53f7\u51fa $ m \\log_{2}{n} $ \u4e2a\u70b9\uff0c\u6ca1\u6709\u88ab\u53d6\u51fa\u7684\u70b9\uff0c\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5df2\u53d6\u51fa\u7684\u70b9\u4e0e\u5176\u540c\u5c5e\u4e00\u4e2a\u6811\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6240\u6709\u5df2\u53d6\u51fa\u7684\u70b9\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027 $ size $ \uff0c\u4e3a\u6240\u5c5e\u6811\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\uff0c\u7136\u540e\u8dd1 $ dfs $\uff0c\u6b64\u9898\u5f97\u89e3\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/15dd8vwb.png)\n\n\u52a0\u5b8c\u8fb9\u540e:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z2dvaeps.png)\n\n\u7f29\u70b9\u540e:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/r4qg1hwb.png)\n\n### \u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282 ###\n\n\u5bf9\u4e8e $ size $ \u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u4e9b\u4e8c\u8fdb\u5236\u5c0f\u6280\u5de7\u3002\n\n\u5b9a\u4e49\u51fd\u6570 $ S_n(u) $ \u4e3a\u5728 $ n $ \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c $ u $ \u8282\u70b9\u7684\u5927\u5c0f\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\uff08\u4ece $ 0 $ \u5f00\u59cb\uff09\u662f $ \\left\\lceil \\log_{2}{u} \\right\\rceil $ \uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6\u4e3a $ \\left\\lceil \\log_{2}{n} \\right\\rceil $ \uff0c\u6df1\u5ea6\u4e3a $ d $ \u7684\u6ee1\u4e8c\u53c9\u6811\u8282\u70b9\u4e2a\u6570\u4e3a $ 2^{d + 1} - 1 $ \uff0c\u5bf9\u4e8e $ S_n(u) $ \u7684\u8ba1\u7b97\u5982\u4e0b:\n\n$$\nS_n(u) = 2^{\\Delta D} + \\max{\\left\\{0, \\min{\\left\\{n - u \\times 2^{\\Delta D} + 1, 2^{\\Delta D}\\right\\}}\\right\\}} - 1\n$$\n\n\u5176\u4e2d:\n\n$$\n\\Delta D = \\left\\lceil \\log_{2}{n} \\right\\rceil - \\left\\lceil \\log_{2}{u} \\right\\rceil\n$$\n\n\u5176\u5b9e\u5c31\u662f\u628a\u6700\u540e\u4e00\u884c\u7684\u8282\u70b9\u5206\u5f00\u8003\u8651\uff0c\u4e0a\u65b9\u7684\u5957\u7528\u516c\u5f0f\u3002\n\n\u6700\u7ec8\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\n#include <vector>\n#include <unordered_map>\n#include <algorithm>\n\nusing namespace std;\n\n// int \u57df\u5185\u4e0a\u53d6\u6574 log2 \u51fd\u6570\uff0c\u5e38\u6570\u6781\u5c0f\uff0c\u65e0\u7cbe\u5ea6\u95ee\u9898\n// \u57fa\u4e8e\u63a9\u7801\u5b9e\u73b0\n// 0xFFFF0000 -> 0b11111111111111110000000000000000\n// 0xFF00FF00 -> 0b11111111000000001111111100000000\n// 0xF0F0F0F0 -> 0b11110000111100001111000011110000\n// 0xCCCCCCCC -> 0b11001100110011001100110011001100\n// 0xAAAAAAAA -> 0b10101010101010101010101010101010\ninline int log2i(int n) {\n\tint l = 0;\n\tif (n & 0xFFFF0000) { l |= 16; n &= 0xFFFF0000; }\n\tif (n & 0xFF00FF00) { l |=  8; n &= 0xFF00FF00; }\n\tif (n & 0xF0F0F0F0) { l |=  4; n &= 0xF0F0F0F0; }\n\tif (n & 0xCCCCCCCC) { l |=  2; n &= 0xCCCCCCCC; }\n\tif (n & 0xAAAAAAAA) { l |=  1; n &= 0xAAAAAAAA; }\n\treturn l;\n}\n\nint n, m, depth;\n// \u9644\u52a0\u8fb9\nint eu[10], ev[10];\nint nodecnt;\n// node: \u5bf9\u5e94\u70b9\u539f\u7f16\u53f7\n// size: size \u5c5e\u6027\nint node[640], size[640];\nunordered_map<int, int> id;\n\n// \u5077\u61d2\u7528\u4e86 vector \u5b58\u56fe\nvector<int> edge[640];\n\n// S_n(u) \u51fd\u6570\ninline int sizeOf(int p) {\n\tint d = depth - log2i(p);\n\treturn (1 << d) + max(0, min(n - (p << d) + 1, 1 << d)) - 1;\n}\n\n// \u6c42 lca, \u56e0\u4e3a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u6240\u4ee5\u66b4\u529b\u8df3\n// \u6cbf\u9014\u7684\u70b9\u5206\u914d\u65b0\u6807\u53f7\nint lca(int u, int v) {\n\tint du = log2i(u), dv = log2i(v);\n\twhile (du > dv) { if (id.find(u) == id.end()) id[u] = ++nodecnt, node[nodecnt] = u; u >>= 1, --du; }\n\twhile (dv > du) { if (id.find(v) == id.end()) id[v] = ++nodecnt, node[nodecnt] = v; v >>= 1, --dv; }\n\twhile (u ^ v) {\n\t\tif (id.find(u) == id.end()) id[u] = ++nodecnt, node[nodecnt] = u; u >>= 1, --du;\n\t\tif (id.find(v) == id.end()) id[v] = ++nodecnt, node[nodecnt] = v; v >>= 1, --dv;\n\t}\n\tif (id.find(v) == id.end()) id[v] = ++nodecnt, node[nodecnt] = v;\n\treturn v;\n}\n\n// \u66b4\u529b dfs\nbool vis[640];\nlong long dfs(int p) {\n\tlong long path = size[p];\n\tif (vis[p]) return 0;\n\tvis[p] = true;\n\tfor (auto& to : edge[p]) path = (path + dfs(to)) % MOD;\n\tvis[p] = false;\n\treturn path;\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tdepth = log2i(n);\n\n\tif (!m) {\n\t\tprintf(\"%lld\\n\", static_cast<long long>(n) * n % MOD);\n\t\treturn 0;\n\t}\n\n\tint root = -1;\n\tfor (int e = 0; e < m; ++e) {\n\t\tscanf(\"%d%d\", eu + e, ev + e);\n\t\tif (root == -1) root = lca(eu[e], ev[e]);\n\t\telse root = lca(root, lca(eu[e], ev[e]));\n\t}\n\n\t// \u5efa\u65b0\u56fe\u3001\u8ba1\u7b97 size\n\tfor (int p = 1; p <= nodecnt; ++p) {\n\t\tsize[p] = 1;\n\t\tif (n >= (node[p] << 1) && id.find(node[p] << 1) == id.end())\n\t\t\tsize[p] += sizeOf(node[p] << 1);\n\t\tif (n >= (node[p] << 1 | 1) && id.find(node[p] << 1 | 1) == id.end())\n\t\t\tsize[p] += sizeOf(node[p] << 1 | 1);\n\n\t\tif (node[p] > 1) {\n\t\t\tauto parent_iter = id.find(node[p] >> 1);\n\t\t\tif (parent_iter == id.end()) {\n\t\t\t\tsize[p] += n - sizeOf(node[p]);\n\t\t\t} else {\n\t\t\t\tedge[p].push_back(parent_iter->second);\n\t\t\t\tedge[parent_iter->second].push_back(p);\n\t\t\t}\n\t\t}\n\t}\n\n\t// \u8fde\u9644\u52a0\u8fb9\n\tfor (int e = 0; e < m; ++e) {\n\t\tauto u_iter = id.find(eu[e]), v_iter = id.find(ev[e]);\n\t\tedge[u_iter->second].push_back(v_iter->second);\n\t\tedge[v_iter->second].push_back(u_iter->second);\n\t}\n\n\t// \u8ba1\u7b97\u7b54\u6848\n\tlong long path = 0;\n\tfor (int p = 1; p <= nodecnt; ++p)\n\t\tpath = (path + size[p] * dfs(p) % MOD) % MOD;\n\tprintf(\"%lld\\n\", path);\n\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ O((m \\log_{2}{n})!) $\n",
        "postTime": 1662556183,
        "uid": 359763,
        "name": "AlbusSparrow",
        "ccfLevel": 0,
        "title": "\u597d\u9898\u5206\u4eab: The Overdosing Ubiquity (CF869D) - by Albus Sparrow"
    },
    {
        "content": "[CF869D The Overdosing Ubiquity](https://www.luogu.com.cn/problem/CF869D) \u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/xiaoziyao/p/15781300.html)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c$k$ \u53f7\u70b9\u7684\u7236\u4eb2\u4e3a $\\lfloor\\frac{k}{2}\\rfloor$\uff0c\u65b0\u52a0 $m$ \u6761\u8fb9\uff0c\u6c42\u672c\u8d28\u4e0d\u540c\u7b80\u5355\u8def\u5f84\u6570\u91cf\u3002\n\n$1\\leqslant n\\leqslant 10^9,0\\leqslant m\\leqslant 4$\u3002\n\n## \u5206\u6790\n\n\u7ed9\u4e00\u4e2a\u5e38\u6570\u5927\uff0c\u7801\u91cf\u5927\u4f46\u597d\u60f3\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u4e0d\u7ecf\u8fc7\u65b0\u52a0\u8fb9\u7684\u8def\u5f84\u6570\u91cf\u5c31\u662f $O(n^2)$\uff0c\u7136\u540e\u8003\u8651\u5f3a\u5236\u7ecf\u8fc7\u65b0\u52a0\u8fb9\u7684\u65b9\u6848\u6570\u3002\n\n\u7531\u4e8e $m$ \u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u9009\u54ea\u4e9b\u8fb9\uff0c\u679a\u4e3e\u8d70\u8fb9\u7684\u987a\u5e8f\uff0c\u679a\u4e3e\u8fb9\u7684\u65b9\u5411\uff08\u4e5f\u5c31\u662f\u65e0\u5411\u8fb9\u53d8\u6210\u6709\u5411\u8fb9\uff09\uff0c\u7136\u540e\u8003\u8651\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u7ecf\u8fc7\u94a6\u5b9a\u7684\u8fb9\u7684\u8def\u5f84\u6570\u91cf\u3002\n\n\u6211\u4eec\u4ee4 $(x_i,y_i)$ \u4e3a\u9009\u62e9\u7684\u7b2c $i$ \u6761\u65b0\u52a0\u8fb9\uff08\u4e00\u5171 $k$ \u6761\uff09\uff0c\u53d6\u51fa\u4e24\u6761\u8def\u5f84 $A$ \u548c $B$\u3002\n\n$A$\uff1a\u4ece $y_1$ \u6cbf\u7740\u6811\u4e0a\u7684\u8fb9\u8d70\u5230 $x_2$\uff0c\u7136\u540e\u8d70 $(x_2,y_2)$\uff0c\u518d\u4ece $y_2$ \u6cbf\u7740\u6811\u4e0a\u7684\u8fb9\u8d70\u5230 $x_3$\u2026\u2026\n$B$\uff1a $x_1$ \u6cbf\u7740\u6811\u4e0a\u7684\u8fb9\u8d70\u5230 $y_k$ \u7684\u8def\u5f84\u3002\n\n\u82e5 $A$ \u4e0e $B$ \u6709\u4ea4\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\u7ecf\u8fc7\u8fd9\u4e9b\u94a6\u5b9a\u8fb9\u7684\u8def\u5f84\u7684\u8d77\u70b9\u4e00\u5b9a\u662f $x$ \u4e0d\u7ecf\u8fc7 $A$ \u5185\u70b9\u6cbf\u7740\u6811\u4e0a\u7684\u8fb9\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u540c\u7406\u7ec8\u70b9\u4e00\u5b9a\u662f $y$ \u4e0d\u7ecf\u8fc7 $B$ \u5185\u70b9\u6cbf\u7740\u6811\u4e0a\u7684\u8fb9\u80fd\u5230\u8fbe\u7684\u70b9\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u76f4\u63a5\u5728\u6811\u4e0a\u641c\u4e00\u904d\u5f97\u5230\uff0c\u4e5f\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u8fde\u901a\u5757\u4e00\u5b9a\u662f\u4e00\u4e2a\u5b50\u6811\u53bb\u6389\u82e5\u5e72\u5b50\u6811\u7684\u7ed3\u679c\uff0c\u5927\u5b50\u6811\u548c\u53bb\u6389\u7684\u5b50\u6811\u90fd\u53ef\u4ee5\u679a\u4e3e $A$ \u4e0a\u7684\u70b9\u8ba1\u7b97\u51fa\u6765\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\uff08$\\text{dfs}$ \u90e8\u5206\uff09\n\n\u82e5 $A$ \u4e0e $B$ \u6ca1\u6709\u4ea4\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u51e0\u4e4e\u53ef\u4ee5\u5728 $A$ \u4e0e $B$ \u5230\u8fbe\u7684\u70b9\u4e2d\u4efb\u9009\u4e24\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u70b9 $s,t$ \u8981\u6ee1\u8db3 $(x_1,s)$ \u4e0e $(y_k,t)$ \u65e0\u4ea4\n\uff0c\u6211\u4eec\u679a\u4e3e $B$ \u4e0a\u6240\u6709\u70b9\uff0c\u4ee4\u679a\u4e3e\u7684\u70b9\u4e3a $s$ \u7684\u7956\u5148\uff0c\u90a3\u4e48 $t$ \u4e00\u5b9a\u5728 $B$ \u66f4\u540e\u9762\u7684\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u4e8e\u662f\u524d\u7f00\u548c\u4e00\u4e0b\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u7136\u540e\u4f60\u5c31\u5199\u51fa\u4e86\u5927\u5206\u8ba8\u4ee3\u7801\uff0c\u63a5\u4e0b\u6765\u5c31\u53ea\u9700\u8981\u8db3\u591f\u7684\u8010\u5fc3\u8c03\u8bd5\u4e86\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((m\\log n)^3m!4^m)$\uff0c\u975e\u5e38\u677e\uff0c\u968f\u4fbf\u8fc7\u3002\n\n## \u4ee3\u7801\n\n```\n#include<stdio.h>\n#include<algorithm>\n#include<string.h>\n#include<map>\nusing namespace std;\nconst int maxn=1000005,mod=1000000007;\nint n,m,ans;\nint x[maxn],y[maxn],t[maxn],p[maxn],q[maxn],aa[maxn],bb[maxn],cc[maxn],dd[maxn],no[maxn];\nmap<int,int>vis; \nint getsize(int x){\n//\tprintf(\"getsize(%d)=\",x);\n\tint r=x,dep=1;\n\twhile((r<<1|1)<=n)\n\t\tr=(r<<1|1),dep++;\n\tint out=(r<<1|1);\n//\tprintf(\"%d\\n\",((1<<dep)-1)+max((1<<dep)-(out-n),0)); \n\treturn ((1<<dep)-1)+max((1<<dep)-(out-n),0);\n}\nint isfa(int x,int y){\n\twhile(y){\n\t\tif(x==y)\n\t\t\treturn 1;\n\t\ty>>=1;\n\t}\n\treturn 0;\n}\nvoid dfs(int x,int ban1,int ban2,int &c){\n\tint nos=0;\n\tfor(map<int,int>::iterator it=vis.begin();it!=vis.end();it++)\n\t\tif(it->second&&it->first!=x)\n\t\t\tno[++nos]=it->first;\n\tif(ban1&&vis[ban1]==0&&ban1!=x)\n\t\tno[++nos]=ban1;\n\tif(ban2&&vis[ban2]==0&&ban2!=x)\n\t\tno[++nos]=ban2;\n\tsort(no+1,no+1+nos);\n//\tfor(int i=1;i<=nos;i++)\n//\t\tprintf(\"%d%c\",no[i],i==nos? '\\n':' ');\n\tint fa=0;\n\tfor(int i=1;i<=nos;i++)\n\t\tif(no[i]&&no[i]<x&&isfa(no[i],x))\n\t\t\tfa=max(fa,no[i]);\n\tint y=x,lst=0;\n\twhile(y!=fa)\n\t\tlst=(y&1),y>>=1;\n\tfa=(fa<<1)|lst,c=getsize(fa);\n\tfor(int i=1;i<=nos;i++)\n\t\tif(no[i]>fa&&isfa(fa,no[i]))\n\t\t\tfor(int j=i+1;j<=nos;j++)\n\t\t\t\tif(no[j]&&no[j]>fa&&isfa(no[i],no[j]))\n\t\t\t\t\tno[j]=0;\n\tfor(int i=1;i<=nos;i++)\n\t\tif(no[i]&&fa<no[i]&&isfa(fa,no[i])){\n//\t\t\tprintf(\"i=%d no[i]=%d %d\\n\",i,no[i],getsize(no[i]));\n\t\t\tc-=getsize(no[i]);\n\t\t}\n//\tprintf(\"y=%d fa=%d\\n\",y,fa);\n//\tprintf(\"(dfs %d %d %d)=%d(fa=%d)\\n\",x,ban1,ban2,c,fa);\n\t/*if(x==ban||x>n||x<1)\n\t\treturn ;\n\tvis[x]=1,c++;\n\tif(vis[x>>1]==0)\n\t\tdfs(x>>1,ban,c);\n\tif(vis[x<<1]==0)\n\t\tdfs(x<<1,ban,c);\n\tif(vis[x<<1|1]==0)\n\t\tdfs(x<<1|1,ban,c); */\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m),ans=1ll*n*n%mod;\n\tif(m==0){\n\t\tprintf(\"%d\\n\",ans);\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n\tfor(int i=1;i<(1<<m);i++){\n\t\tint tot=0;\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif((i>>(j-1))&1)\n\t\t\t\tt[++tot]=j,p[tot]=tot;\n\t\tdo{\n\t\t\tfor(int j=1;j<=tot;j++)\n\t\t\t\tq[j]=t[p[j]];\n\t\t\tfor(int j=0;j<(1<<tot);j++){\n//\t\t\t\tprintf(\"i=%d j=%d ans=%d\\n\",i,j,ans);\n\t\t\t\tvis.clear();\n\t\t\t\tfor(int k=1;k<=tot;k++)\n\t\t\t\t\tvis[x[q[k]]]=vis[y[q[k]]]=1;\n\t\t\t\tfor(int k=1;k<=tot;k++) \n\t\t\t\t\tif((j>>(k-1))&1)\n\t\t\t\t\t\tswap(x[q[k]],y[q[k]]);\n\t\t\t\tint flg=0;\n\t\t\t\tfor(int k=1;k<=tot;k++)\n\t\t\t\t\tfor(int r=k+1;r<=tot;r++)\n\t\t\t\t\t\tif(x[q[k]]==x[q[r]]||y[q[k]]==y[q[r]]||x[q[k]]==y[q[r]]||(y[q[k]]==x[q[r]]&&r!=k+1))\n\t\t\t\t\t\t\tflg=1;\n\t\t\t\tfor(int k=1;k<tot;k++){\n\t\t\t\t\tint X=y[q[k]],Y=x[q[k+1]],a=__builtin_clz(X),b=__builtin_clz(Y),s=X,t=Y;\n\t\t\t\t\twhile(a<b){\n\t\t\t\t\t\ts>>=1,a++;\n\t\t\t\t\t\tif(s!=t)\n\t\t\t\t\t\t\tflg|=vis[s],vis[s]=1;\n\t\t\t\t\t}\n\t\t\t\t\twhile(b<a){\n\t\t\t\t\t\tt>>=1,b++;\n\t\t\t\t\t\tif(s!=t) \n\t\t\t\t\t\t\tflg|=vis[t],vis[t]=1;\n\t\t\t\t\t}\n\t\t\t\t\twhile(s!=t){\n\t\t\t\t\t\ts>>=1,a++,flg|=vis[s],vis[s]=1;\n\t\t\t\t\t\tt>>=1,b++;\n\t\t\t\t\t\tif(s!=t)\n\t\t\t\t\t\t\tflg|=vis[t],vis[t]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n//\t\t\t\tfor(int k=1;k<=tot;k++)\n//\t\t\t\t\tprintf(\"xx=%d yy=%d\\n\",x[k],y[k]);\n\t\t\t\tif(flg==0){\n\t\t\t\t\tint X=x[q[1]],Y=y[q[tot]],a=__builtin_clz(X),b=__builtin_clz(Y),s=X,t=Y,f=0,as=0,bs=0,cs=0;\n\t\t\t\t\twhile(a<b){\n\t\t\t\t\t\ts>>=1,a++;\n\t\t\t\t\t\tif(s!=t)\n\t\t\t\t\t\t\tf|=vis[s],aa[++as]=s;\n\t\t\t\t\t} \n\t\t\t\t\twhile(b<a){\n\t\t\t\t\t\tt>>=1,b++;\n\t\t\t\t\t\tif(s!=t)\n\t\t\t\t\t\t\tf|=vis[t],bb[++bs]=t;\n\t\t\t\t\t}\n\t\t\t\t\twhile(s!=t){\n\t\t\t\t\t\ts>>=1,a++,f|=vis[s],aa[++as]=s;\n\t\t\t\t\t\tt>>=1,b++;\n\t\t\t\t\t\tif(s!=t) \n\t\t\t\t\t\t\tf|=vis[t],bb[++bs]=t;\n\t\t\t\t\t}\n\t\t\t\t\tif(f){\n//\t\t\t\t\t\tputs(\"case1\");\n\t\t\t\t\t\tint c0=0,c1=0;\n\t\t\t\t\t\tdfs(X,0,0,c0),dfs(Y,0,0,c1);\n\t\t\t\t\t\tans=(ans+1ll*c0*c1)%mod;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n//\t\t\t\t\t\tputs(\"case2\");\n\t\t\t\t\t\tfor(int k=1;k<=as;k++)\n\t\t\t\t\t\t\tcc[++cs]=aa[k];\n\t\t\t\t\t\tfor(int k=bs;k>=1;k--)\n\t\t\t\t\t\t\tcc[++cs]=bb[k];\n//\t\t\t\t\t\tprintf(\"X=%d Y=%d\\n\",X,Y);\n\t\t\t\t\t\tcc[0]=X,cc[cs+1]=Y;\n/*\t\t\t\t\t\tputs(\"CC\");\n\t\t\t\t\t\tfor(int k=0;k<=cs+1;k++)\n\t\t\t\t\t\t\tprintf(\"%d%c\",cc[k],k==cs+1? '\\n':' ');*/\n\t\t\t\t\t\tint all=0;\n//\t\t\t\t\t\tputs(\"A\");\n\t\t\t\t\t\tdd[0]=0,dfs(X,0,cc[1],dd[0]),all+=dd[0];\n\t\t\t\t\t\tfor(int k=1;k<=cs;k++)\n\t\t\t\t\t\t\tdd[k]=0,dfs(cc[k],cc[k-1],cc[k+1],dd[k]),all+=dd[k];\n//\t\t\t\t\t\tputs(\"B\");\n\t\t\t\t\t\tdd[cs+1]=0,dfs(Y,0,cc[cs],dd[cs+1]),all+=dd[cs+1];\n/*\t\t\t\t\t\tfor(int k=0;k<=cs+1;k++)\n\t\t\t\t\t\t\tprintf(\"k=%d dd[k]=%d\\n\",k,dd[k]);*/\n\t\t\t\t\t\tfor(int k=0;k<=cs;k++)\n\t\t\t\t\t\t\tall-=dd[k],ans=(ans+1ll*dd[k]*all)%mod;\n\t\t\t\t\t}\n\t\t\t\t}\n//\t\t\t\tprintf(\"i=%d j=%d ans=%d\\n\",i,j,ans);\n\t\t\t\tfor(int k=1;k<=tot;k++)\n\t\t\t\t\tif((j>>(k-1))&1)\n\t\t\t\t\t\tswap(x[q[k]],y[q[k]]);\n\t\t\t}\n\t\t}while(next_permutation(p+1,p+1+tot));\n//\t\tprintf(\"i=%d ans=%d\\n\",i,ans);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1641717775,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF869D\u3010The Overdosing Ubiquity\u3011"
    },
    {
        "content": "\u8bbe\u6bcf\u6761\u591a\u4f59\u7684\u8fb9\u4e3a $u,v$\uff0c\u90a3\u4e48\u628a$u$\u5230\u6839\uff0c$v$\u5230\u6839\u8def\u5f84\u4e0a\u7684\u70b9\u505a\u6807\u8bb0\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u6bcf\u68f5\u5b50\u6811\u7f29\u70b9\uff0c\u6761\u4ef6\u662f\u5b50\u6811\u4e2d\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u70b9\u3002\u7136\u540e\u5728\u7f29\u5b8c\u70b9\u7684\u6811\u4e0a\u8dd1dfs\u7edf\u8ba1\u7b54\u6848\u5373\u53ef",
        "postTime": 1550803172,
        "uid": 50251,
        "name": "\u59ec\u5c0f\u8def\u79cb\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF869D \u3010The Overdosing Ubiquity\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u63d0\u8fd9\u662f\u4e00\u9053\u865a\u6811\u554a\u2026\u2026 \u63d0\u4f9b\u4e00\u4e2a\u4e5f\u8bb8\u987a\u7545\u7684\u601d\u8003\u8fc7\u7a0b\uff08\uff1f\n\n----------\n\n\u770b\u5230\u9898\u76ee\u8981\u6c42\u7684\u8def\u5f84\u4e2a\u6570\u662f\u4e2a\u5f88\u96be\u5b58\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4e1c\u897f\uff0c\u4e14\u989d\u5916\u6dfb\u52a0\u7684\u8fb9\u5f88\u5c11\uff0c\u60f3\u5230 [**NOI2021 D1T3**](https://www.luogu.com.cn/problem/P7737)\uff0c\u8003\u8651\u5efa\u865a\u6811\u3002\n\n\n\u5c06\u65b0\u6dfb\u8fb9\u7684\u8282\u70b9\u63d0\u51fa\u6765\u5e38\u89c4\u5efa\u865a\u6811\uff0c\u663e\u7136\u6bcf\u4e00\u6761\u65b0\u589e\u8def\u5f84 $\\{u \\rightarrow v\\}$ \u7684\u4e2d\u95f4\u8282\u70b9\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u53ea\u9700\u8981\u786e\u5b9a $u,v$ \u4e24\u4e2a\u8d77\u70b9\u6709\u591a\u5c11\u79cd\u53ef\u80fd\u5373\u53ef\uff08\u56e0\u4e3a $u,v$ \u662f\u865a\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u5176\u7701\u53bb\u7684\u5b50\u8282\u70b9\u548c\u7236\u8282\u70b9\u90fd\u6709\u53ef\u80fd\u6210\u4e3a\u8d77\u70b9\uff09\u3002\n\n\u7136\u540e\u4f60\u7a81\u7136\u53d1\u73b0\u8d77\u70b9\u7684\u4e2a\u6570\u5f88\u96be\u7edf\u8ba1\u3002\n\n$\\{u\\rightarrow v\\}$ \u7684\u8def\u5f84\u65e0\u975e\u5c31\u4e24\u79cd\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xgcrs273.png)\n\n\u597d\u50cf\u53ea\u9700\u8981\u7edf\u8ba1 $u,v$ \u7684\u5de6\u53f3\u5b50\u6811\u5927\u5c0f\u5c31\u884c\u4e86\uff0c\u7136\u800c\u8fd9\u6761\u8def\u5f84\u53ef\u80fd\u957f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/854yf1ij.png)\n\n\u8fd9\u79cd\u8def\u5f84\u4e0b\uff0c\u8d77\u70b9\u5230 $u/v$ \u7684\u8def\u5f84\u4e0d\u80fd\u7a7f\u8fc7\u7ea2\u8272\u8282\u70b9\u3002\u5b9e\u64cd\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4fe1\u606f\u662f\u975e\u5e38\u96be\u7ef4\u62a4\u7684\uff0c\u56e0\u4e3a\u5b83\u4f1a\u968f\u7740\u7ea2\u8272\u8282\u70b9\u7684\u589e\u52a0\u3001\u8def\u5f84\u5f62\u6001\u7684\u53d8\u5316\u800c\u6539\u53d8\u3002\n\n--------\n\n------\n\n\u5f53\u865a\u6811\u7684\u6761\u4ef6\u4e0d\u8db3\u4ee5\u89e3\u9898\u7684\u65f6\u5019\uff0c\u7ecf\u5178\u5957\u8def\u5c31\u662f\u52a0\u70b9\u3002\n\n\u8003\u8651\u9898\u76ee\u7ed9\u7684\u6811\u6709\u4ec0\u4e48\u6027\u8d28\u3002\u663e\u800c\u6613\u89c1\u7684\uff0c\u6811\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7 $\\log n$\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f $O(\\log n)$ \u7ea7\u522b\u7684\u3002\n\n\u800c\u521a\u521a\u865a\u6811\u96be\u4ee5\u7ef4\u62a4\u7684\u95ee\u9898\u5728\u4e8e\u65e0\u6cd5\u5904\u7406\u7ea2\u8272\u70b9\u5230 $u,v$ \u4e4b\u95f4\u7684\u4fe1\u606f\u3002\n\n\u6240\u4ee5\u52a0\u70b9\u65f6\u76f4\u63a5\u5c06\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u90fd\u642c\u5230\u865a\u6811\u4e0a\u3002\u53d1\u73b0\u6bcf\u4e2a\u8282\u70b9\u4f5c\u4e3a\u8d77\u70b9\u7684\u6570\u91cf\u6070\u597d\u5c31\u662f**\u4e0d\u5728\u865a\u6811\u4e0a\u7684**\u5b50\u6811\u5927\u5c0f\u3002\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n-----------\n\n\u63d0\u51e0\u4e2a\u7ec6\u8282\uff1a\n\n- \u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u53ef\u4ee5\u5c06 $\\{1\\rightarrow u\\},\\{1 \\rightarrow v\\}$ \u7684\u6240\u6709\u70b9\u90fd\u642c\u5230\u865a\u6811\u4e0a\u3002\n\n- \u6c42\u5b50\u6811 $size$ \u7684\u65b9\u6cd5\u5f88\u591a\u3002\u6211\u7684\u65b9\u6cd5\u662f\u8003\u8651\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0a\u6bcf\u5411\u4e0b\u8d70\u4e00\u6b65\uff0c\u5c31\u662f\u5728\u539f\u8282\u70b9\u4e8c\u8fdb\u5236\u7f16\u53f7\u540e\u6dfb $0/1$\u3002\u6240\u4ee5\u679a\u4e3e\u8282\u70b9\u7f16\u53f7\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u7136\u540e\u7edf\u8ba1\u8d21\u732e\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n\n\t\u5e94\u8be5\u6709 $O(1)$ \u7684\u9ad8\u5999\u505a\u6cd5\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u74f6\u9888\u663e\u7136\u4e0d\u5728\u8fd9\u91cc\u3002~~\u6240\u4ee5\u6446\u70c2\u968f\u4fbf\u6c42\u5c31\u597d~~\n    \n- \u8981\u52a0\u4e0a\u521d\u59cb\u7b54\u6848 $n^2$\u3002\n\n----\n\n\u4e00\u9053\u6bd4\u8f83\u5178\u578b\u7684\u4ee5\u52a0\u70b9\u5f53 Trick \u7684\u865a\u6811\u9898\u3002\n\n\uff08\u4e0d\u8fc7\u597d\u50cf\u4e0d\u662f\u975e\u5e38\u9ad8\u5999\uff0c\u8bc4\u5206\u865a\u9ad8\u7f62\uff09\n\n\u653e\u4e00\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<bits/stdc++.h>\n#define il inline\nusing namespace std;\nconst int maxn=510;\nconst int mod=1e9+7;\nil int read(){\n\tint x=0;\n\tchar c=getchar();\n\tfor(;!(c>='0'&&c<='9');c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\treturn x;\n}\nstruct edge{\n\tint v,to;\n\tbool k;\n}e[maxn];\nint head[maxn],ecnt;\nvoid addedge(int u,int v,bool k){\n\te[++ecnt].v=v,e[ecnt].k=k;\n\te[ecnt].to=head[u],head[u]=ecnt;\n}\nint n,D,m,re[maxn];\nint N,w[maxn];\nmap<int,int>Id,Vis;\nbool vis[maxn];\nvoid update(int &x,int y){if((x+=y)>=mod)x-=mod;}\nint Find(int x){\n\tif(Id[x]) return Id[x];\n\tre[++N]=x;\n\treturn Id[x]=N;\n}\nint id(int x){return Find(x);}\nint ls(int x){return x<<1;}\nint rs(int x){return x<<1|1;}\nint fa(int x){return x>>1;}\nint dep(int x){return (double)log2(x)+1;}\nint size(int x){\n\tint sum=0;\n\tfor(int res=0;(x<<res)<=n;res++)\n\t\tsum+=min(x+1<<res,n+1)-(x<<res);\n\treturn sum;\n}\nint dfs(int x,bool fl){\n\tvis[x]=1;int sum=0;\n\tif(fl) sum=w[x];\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v])\n\t\t\tupdate(sum,dfs(e[i].v,fl|e[i].k));\n\tvis[x]=0;\t\n\treturn sum;\n}\nint main(){\n\tint x,y;\n\tscanf(\"%d%d\",&n,&m),D=dep(n);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\taddedge(id(x),id(y),1);\n\t\taddedge(id(y),id(x),1);\n\t\twhile(x^1){\n\t\t\tif(Vis[x]) break;\n\t\t\tVis[x]=1;\n\t\t\taddedge(id(x),id(fa(x)),0);\n\t\t\taddedge(id(fa(x)),id(x),0);\n\t\t\tx=fa(x);\n\t\t}\n\t\twhile(y^1){\n\t\t\tif(Vis[y]) break;\n\t\t\tVis[y]=1;\n\t\t\taddedge(id(y),id(fa(y)),0);\n\t\t\taddedge(id(fa(y)),id(y),0);\n\t\t\ty=fa(y);\n\t\t}\n\t}\n\tfor(int i=1;i<=N;i++){\n\t\tw[i]=size(re[i]);\n\t\tif(Id[ls(re[i])]) w[i]-=size(ls(re[i]));\n\t\tif(Id[rs(re[i])]) w[i]-=size(rs(re[i]));\n\t}\n\tint ans=n*1ll*n%mod;\n\tfor(int i=1;i<=N;i++){\n\t\tmemset(vis,0,sizeof(vis));\n\t\tupdate(ans,w[i]*1ll*dfs(i,0)%mod);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1664461729,
        "uid": 288716,
        "name": "lzqy_",
        "ccfLevel": 7,
        "title": "CF869D The Overdosing Ubiquity \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/LaoMang-no-blog/p/16462663.html)\n\n---\n\n[**CF link**](https://codeforces.com/problemset/problem/869/D)\n\n[**\u4f60\u8c37 link**](https://www.luogu.com.cn/problem/CF869D)\n\n\u4e00\u9053\u975e\u5e38\u5999\u7684\u641c\u7d22\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u4e00\u6b65\u4e00\u6b65\u63a8\u5230\u7b54\u6848\u3002\n\n\u9996\u5148\u6211\u4eec\u601d\u8003\u7b54\u6848\u6570\u7684\u4e0a\u9650\uff0c\u5047\u5982\u539f\u56fe\u5c31\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u7b54\u6848\u603b\u6570\u5c31\u662f $n^2$\uff0c\u56e0\u4e3a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u8003\u8651\u518d\u52a0\u4e0a\u4e00\u4e9b\u65b0\u8fb9\u540e\u7684\u8def\u5f84\u6570\u4f1a\u4ea7\u751f\u4ec0\u4e48\u53d8\u5316\uff0c\u53d1\u73b0\u65b0\u4ea7\u751f\u7684\u8def\u5f84\u80af\u5b9a\u662f\u7ecf\u8fc7\u8fd9\u4e9b\u65b0\u8fb9\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8d70\u54ea\u4e9b\u8fb9\u3001\u8d70\u7684\u987a\u5e8f\u548c\u65b9\u5411\uff0c\u603b\u4f53\u7b97\u8d77\u6765\u7b54\u6848\u6700\u5bf9\u5c31\u662f $\\mathcal O\\left(n^22^mm!\\right)$\uff0c\u53d1\u73b0\u56e0\u4e3a $m$ \u975e\u5e38\u5c0f\uff0c\u6240\u4ee5\u540e\u9762\u51e0\u4e4e\u53ef\u4ee5\u770b\u505a\u662f\u4e2a\u5927\u5e38\u6570\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u70b9\u5b9e\u5728\u592a\u591a\u4e86\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u5730\u60f3\u5230\u8981\u628a\u70b9\u5220\u53bb\u5f88\u591a\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u53d1\u73b0\u8fd9\u68f5\u6811\u4e2d\u867d\u7136\u70b9\u5f88\u591a\uff0c\u4f46\u662f\u56e0\u4e3a\u52a0\u4e0a\u53bb\u7684\u8fb9\u975e\u5e38\u5c11\uff0c\u6240\u4ee5\u6709\u8bb8\u591a\u7684\u70b9\u5e94\u5f53\u662f\u76f8\u4f3c\u7684\uff0c\u5b9e\u9645\u4e0a\u8bbe\u4f5c\u4e3a\u65b0\u52a0\u8fb9\u7aef\u70b9\u7684\u70b9\u4e3a**\u7279\u6b8a\u70b9**\uff0c\u5219\u4efb\u610f\u4e00\u6761\u8def\u5f84\u90fd\u53ef\u4ee5\u770b\u6210\u4ece\u8d77\u70b9\u5148\u8d70\u5230**\u8def\u5f84\u4e0a\u7684\u7b2c\u4e00\u4e2a**\u7279\u6b8a\u70b9\uff0c\u518d\u8d70\u5230**\u8def\u5f84\u4e0a\u7684\u6700\u540e\u4e00\u4e2a**\u7279\u6b8a\u70b9\uff08\u53ef\u80fd\u662f\u540c\u4e00\u4e2a\u70b9\uff09\uff0c\u7136\u540e\u518d\u8d70\u5230\u7ec8\u70b9\uff0c\u800c\u524d\u9762\u548c\u540e\u9762\u7684\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u5982\u679c\u6709\u591a\u6761\u8def\u5f84\u5219\u5206\u53c9\u4e00\u5b9a\u4ea7\u751f\u5728\u4e24\u4e2a\u7279\u6b8a\u70b9\u4e4b\u95f4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06**\u6240\u6709\u7279\u6b8a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u7684\u70b9**\u90fd\u53d6\u51fa\u6765\u6784\u6210\u4e00\u5f20\u751f\u6210\u56fe\uff0c\u8fd9\u6837\u7684\u8bdd\u5269\u4f59\u7684\u6240\u6709\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u751f\u6210\u56fe\u4e2d\u7684\u70b9\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u5373\u5c06\u751f\u6210\u56fe\u4e0a\u7684\u70b9\u5728\u539f\u56fe\u4e2d\u6807\u51fa\uff0c\u539f\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u5728\u4e0d\u7ecf\u8fc7\u4e00\u4e2a\u522b\u7684\u6807\u51fa\u70b9\u7684\u60c5\u51b5\u4e0b\u53ea\u80fd\u8d70\u5230\u4e00\u4e2a\u6807\u51fa\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u6bcf\u4e2a\u6807\u51fa\u70b9\u8fdb\u884c\u7edf\u8ba1\u8d70\u5230\u5b83\u7684\u539f\u56fe\u70b9\u7684\u4e2a\u6570\uff0c\u4ecb\u4e8e\u8fd9\u5f20\u56fe\u7684\u7279\u6b8a\u6027\uff0c\u8fd9\u91cc\u6240\u6709\u6807\u51fa\u70b9\u4e00\u5b9a\u88ab\u6240\u6709\u7279\u6b8a\u70b9\u53ca\u5b83\u5230\u6839\u7684\u8def\u5f84\u5305\u542b\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u6240\u6709\u7279\u6b8a\u70b9\u5230\u6839\u7684**\u6240\u6709\u70b9**\u90fd\u52a0\u5165\u6807\u8bb0\u70b9\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u867d\u7136\u5e76\u4e0d\u662f\u6240\u6709\u70b9\u90fd\u662f\u6807\u8bb0\u70b9\uff0c\u5e94\u5f53\u88ab\u6807\u8bb0\u7684\u70b9\u4e00\u5b9a\u5168\u90e8\u88ab\u5305\u542b\u5728\u5185\uff0c\u4e14\u65b9\u4fbf\u5904\u7406\uff0c\u540c\u65f6\u56e0\u4e3a\u6bcf\u4e2a\u6807\u51fa\u70b9\u7684\u7236\u4eb2\u4e5f\u662f\u6807\u51fa\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u7684\u5b9e\u9645\u4e0a\u5c31\u662f\u5b83\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\u76f4\u63a5\u7edf\u8ba1\uff0c\u540c\u65f6\u5982\u679c\u5b83\u7684\u513f\u5b50\u662f\u6807\u51fa\u70b9\uff0c\u90a3\u4e48\u8981\u5c06\u513f\u5b50\u7684\u5b50\u6811\u51cf\u53bb\u3002\n\n\u5177\u4f53[\u4ee3\u7801](https://codeforces.com/contest/869/submission/163416175)\u5b9e\u73b0\u4e0a\u96be\u5ea6\u4e0d\u5927\uff0c\u7ec6\u8282\u4e5f\u8fd8\u4e0d\u591a\u3002",
        "postTime": 1657418891,
        "uid": 310525,
        "name": "\u8001\u83bd\u83bd\u7a7f\u4e00\u5207",
        "ccfLevel": 0,
        "title": "[CF869D] The Overdosing Ubiquity \u9898\u89e3"
    }
]