[
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/CF809D)\n\n\u5e73\u8861\u6811+DP\u3002\n\n\u597d\u795e\u7684\u4e00\u9898\u554a\uff0c\u4e0d\u770b\u9898\u89e3\u5b8c\u5168\u4e0d\u4f1a\u3002\u8868\u793a\u8fd9\u8fb9\u7684\u9898\u89e3\u8bb2\u5f97\u4e0d\u662f\u5f88\u8be6\u7ec6\u54ce\uff0c\u6211\u6765\u5206\u6790\u4e00\u4e0b\u5230\u5e95\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u79fb\u4e00\u4f4d\u3002\n\n\u9996\u5148\uff0c$dp[j]$\u8868\u793a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a$j$\u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u3002\u8003\u8651\u5982\u4f55\u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u6709\u4e09\u79cd\uff1a\uff08\u8bbe\u5f53\u524d\u9650\u5236\u4e3a$l$\uff0c$r$\uff09\n\n1\u3001$dp[j]=min(dp[j],l)$\uff0c\u5f53$dp[j-1]<l$\u65f6\u3002\n\n2\u3001$dp[j]=min(dp[j],dp[j-1]+1)$\uff0c\u5f53$dp[j-1]>=l$&&$dp[j-1]<r$\u65f6\u3002\n\n3\u3001$dp[j]=dp[j]$\uff0c\u5f53$dp[j-1]>=r$\u65f6\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u66b4\u529b\u8f6c\u79fb\u662f$O(n^2)$\u7684\uff0c\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\n\n\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u4f18\u5316\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb\u627e\u5c0f\u4e8e$l$\u4e14\u6700\u5927\u7684$dp[j]$\u53bb\u8f6c\u79fb\u5230$dp[j+1]$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u533a\u95f4$[l,r-1]$\u8ba9\u6bcf\u4e2a\u6570\u52a0$1$\uff0c\u5e76\u4e14\u5411\u540e\u79fb\u4e00\u4f4d\uff0c\u4ee3\u8868\u8f6c\u79fb\u5230$j+1$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb\u627e\u5927\u4e8e\u7b49\u4e8e$r$\u4e14\u6700\u5c0f\u7684\u6570\uff0c\u7136\u540e\u628a\u5b83\u5220\u6389\u3002\n\n\u800c\u4ee5\u4e0a\u7684\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u505a\u5230\u3002\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u4e2d\u7684\u540e\u79fb\u5176\u5b9e\u4e5f\u4e0d\u7528\u8003\u8651\uff0c\u56e0\u4e3a\u5728\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5c0f\u4e8e$l$\u7684\u6570\uff0c\u6240\u4ee5\u80af\u5b9a\u8ba9\u6240\u6709\u6570\u5411\u540e\u79fb\u4e86\u4e00\u4f4d\u3002\n\n\u6240\u4ee5\u5c31\u8fd9\u4e48\u795e\u5947\u5730\u60f3\u51fa\u4e86\u8fd9\u9898\uff0c\u611f\u89c9\u597d\u795e\u7684\u601d\u60f3\u554a\u3002\n\ncode:\n```\n//2018.10.28 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=3e5+10;\nnamespace MAIN{\n    int n;\n    struct Treap{\n        int son[2],va,pri,siz,laz;\n    }tr[N];\n    int dp[N];\n    int st[N],top,tot;\n    int rt;\n    inline void pushup(const res &x){\n        tr[x].siz=tr[tr[x].son[0]].siz+tr[tr[x].son[1]].siz+1;\n    }\n    inline int newnode(const res &va){\n        res cnt;\n        if(top)cnt=st[top--];\n        else cnt=++tot;\n        tr[cnt].va=va,tr[cnt].son[0]=tr[cnt].son[1]=tr[cnt].laz=0,tr[cnt].siz=1,tr[cnt].pri=rand();\n        return cnt;\n    }\n    inline void change(const res &x,const res &va){\n        if(!x)return;\n        tr[x].laz+=va,tr[x].va+=va;\n    }\n    inline void pushdown(const res &x){\n        if(!x||!tr[x].laz)return;\n        change(tr[x].son[0],tr[x].laz),change(tr[x].son[1],tr[x].laz);\n        tr[x].laz=0;\n    }\n    int merge(const res &x,const res &y){\n        if(!x||!y)return x+y;\n        pushdown(x),pushdown(y);\n        if(tr[x].pri<tr[y].pri){\n            tr[x].son[1]=merge(tr[x].son[1],y);\n            pushup(x);\n            return x;\n        }\n        else {\n            tr[y].son[0]=merge(x,tr[y].son[0]);\n            pushup(y);\n            return y;\n        }\n    }\n    void split(res now,res k,res &x,res &y){\n        if(!now){x=y=0;return;}\n        pushdown(now);\n        if(tr[now].va<=k)x=now,split(tr[now].son[1],k,tr[now].son[1],y);\n        else y=now,split(tr[now].son[0],k,x,tr[now].son[0]);\n        pushup(now);\n    }\n    inline int kth(res now,res k){\n        if(!k)return 0;\n        while(233){\n            if(tr[tr[now].son[0]].siz==k-1)return now;\n            if(tr[tr[now].son[0]].siz>=k)now=tr[now].son[0];\n            else k-=tr[tr[now].son[0]].siz+1,now=tr[now].son[1];\n        }\n    }\n    inline int pre(const res &va){\n        res a,b,ret;\n        split(rt,va-1,a,b),ret=kth(a,tr[a].siz),rt=merge(a,b);\n        return ret;\n    }\n    inline int nxt(const res &va){\n        res a,b,ret;\n        split(rt,va,a,b),ret=kth(b,1),rt=merge(a,b);\n        return ret;\n    }\n    inline void insert(const res &va){\n        res a,b;\n        split(rt,va,a,b),rt=merge(merge(a,newnode(va)),b);\n    }\n    inline void del(const res &va){\n        res a,b,c,d;\n        split(rt,va,a,b),split(a,va-1,c,d),st[++top]=d,d=merge(tr[d].son[0],tr[d].son[1]),rt=merge(merge(c,d),b);\n    }\n    inline void modify(const res &l,const res &r){\n    \tres a,b,c,d;\n    \tsplit(rt,l-1,a,b),split(b,r,c,d),change(c,1),rt=merge(a,merge(c,d));\n\t}\n    inline void MAIN(){\n        n=read();\n        for(res i=1;i<=n;i++){\n            res l=read(),r=read();\n            if(i==1){insert(l);continue;}\n            res p=pre(l),q=nxt(r-1);\n            modify(l,r-1);\n            if(q)del(tr[q].va);\n            insert(l);\n        }\n        if(!rt)puts(\"0\");\n        else printf(\"%d\\n\",tr[rt].siz);\n    }\n}\nint main(){\n    srand((unsigned)time(NULL));\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1540733095,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF809D\u3011Hitchhiking in the Baltic States"
    },
    {
        "content": "CF *2900 \u5e73\u8861\u6811+dp \u795e\u9898\uff0c\u8865\u4e00\u53d1\u9898\u89e3\u3002\n\n\u8bbe $f_j$ \u8868\u793a\u957f\u5ea6\u4e3a $j$ \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4f4d\u3002\u8bbe\u5f53\u524d\u9650\u5236\u4e3a $a_i \\in [l,\\,r]$\u3002\n\n\u4e24\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n- $f_{j-1} < l-1$\uff0c$f_j = \\min(f_j,\\,l)$\u3002\n- $l - 1 \\leq f_{j-1} \\leq r - 1$\uff0c$f_j = \\min(f_j,\\,f_{j-1}+1)$\u3002\n\n\u66b4\u529b\u8f6c\u79fb\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\u4f18\u5316\u3002\n\n\u89c2\u5bdf\u5230\u6570\u7ec4 $f$ \u5177\u6709\u5355\u8c03\u6027\uff0c\u4ee5\u4e0a\u7684\u8f6c\u79fb\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\u8f6c\u5316\u4e3a\uff1a\n\n- \u627e\u5230\u6ee1\u8db3 $l - 1 \\leq f_{j} \\leq r - 1$ \u7684\u6700\u957f\u7684\u4e00\u6bb5\uff0c\u5c06\u8fd9\u4e00\u6bb5\u96c6\u4f53 $+1$\uff0c\u7136\u540e\u540e\u79fb\u4e00\u4f4d\uff08\u540e\u79fb\u4f7f\u7528\u540e\u9762\u7684\u64cd\u4f5c\uff09\u3002\n- \u56e0\u4e3a $f_0 = -\\infty$\uff0c\u4e00\u5b9a\u80fd\u627e\u5230\u4e00\u4e2a $j$ \u6ee1\u8db3 $f_{j} < l-1$\uff0c\u76f4\u63a5\u5728\u5e73\u8861\u6811\u4e2d\u63d2\u5165 $l$\u3002\u5728\u4e0a\u9762\u7684\u64cd\u4f5c\u4e2d\uff0c$f_j$ \u8f6c\u79fb\u540e\u503c\u4e00\u5b9a $<l$\uff0c\u6240\u4ee5\u8fd9\u4e2a\u64cd\u4f5c\u76f8\u5f53\u4e8e\u4e5f\u505a\u5230\u4e86\u4e0a\u9762\u7684\u540e\u79fb\u4e00\u4f4d\u3002\n- \u627e\u5230\u6700\u5c0f\u7684 $\\geq r$ \u7684\u6570\uff0c\u5982\u679c\u5b83\u5b58\u5728\uff0c\u5c06\u5176\u5220\u9664\u3002\n\n\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\u5e73\u8861\u6811\u7684\u5927\u5c0f\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/px3nf7uc.png)\n\n\u4f8b\u5982\u8fd9\u4e2a\u60c5\u51b5\uff0c\u9996\u5148\u627e\u5230\u6ee1\u8db3 $l - 1 \\leq f_{j} \\leq r - 1$ \u7684\u6700\u957f\u7684\u4e00\u6bb5 $[2,\\,5]$\uff0c\u5c06\u5176\u6574\u4f53 $+1$ \u5e76\u540e\u79fb\u4e00\u4f4d\uff0c\u63d2\u5165\u4e00\u4e2a $l$\uff0c\u7136\u540e\u627e\u5230\u6700\u5c0f\u7684 $\\geq r$ \u7684\u6570 $20$\uff0c\u5e76\u5c06\u5176\u5220\u9664\u3002\u5f97\u5230\u7684 $f$ \u6570\u7ec4\u53d8\u4e3a $\\{-\\infty,\\,3,\\,5,\\,8,\\,12,\\,14,\\,18,\\,27,\\, \\ldots\\}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n[Code](https://www.luogu.com.cn/paste/eh20c18x)",
        "postTime": 1621724145,
        "uid": 242543,
        "name": "BreezeEnder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF809D Hitchhiking in the Baltic States"
    },
    {
        "content": "# \u524d\u8a00\n[\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/14810551.html)\n\n\n\u60ca\u4e86\uff0csplay \u597d\u5199\u8fd8\u5feb\u4f46\u9898\u89e3\u91cc\u6ca1\u4eba\u7528\u3002\n# \u9898\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u533a\u95f4 $[l_i,r_i]$ \uff0c\u8bf7\u4f60\u6784\u9020\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5143\u7d20 $a_i$ \u6ee1\u8db3 $a_i\\in[l_i,r_i]$ \uff0c\u4e14\u8be5\u5e8f\u5217\u7684\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u6700\u957f\u3002\n# \u601d\u8def\n$n^2$ \u7684 DP \u90fd\u60f3\u4e86\u534a\u5929 QAQ \u3002\n\n\u9996\u5148\u5728\u7b2c\u4e00\u7ef4\u679a\u4e3e\u533a\u95f4\u3002\n\n\u5b9a\u4e49 $dp[i][j]$ \uff1a\u679a\u4e3e\u5230\u7b2c $i$ \u4e2a\u533a\u95f4\u65f6\uff0c\u957f\u5ea6\u4e3a $j$ \u7684\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u7ed3\u5c3e\u7684\u6700\u5c0f\u503c\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u4e3a\u6781\u5927\u503c\u3002\n\n\u663e\u7136\uff0c\u521d\u503c\u4e3a $dp[0][0]=0$ \uff0c\u5176\u4f59\u4e3a\u6781\u5927\u503c\u3002\u6700\u540e\u7edf\u8ba1 $dp[i](i\\in n)$ \u4e2d\u4e0d\u7b49\u4e8e\u6781\u5927\u503c\u7684\u6709\u591a\u5c11\u3002\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$dp[i][j]=\n\\begin{cases}\nmin(dp[i-1][j],l),& \\text{dp[i-1][j-1]<l,}\\\\\nmin(dp[i-1][j],dp[i-1][j-1]+1),& \\text{dp[i-1][j-1]>=l,dp[i-1][j-1]<r,}\\\\\ndp[i-1][j],& \\text{dp[i-1][j-1]>=r.}\n\\end{cases}$\n\n\u53ef\u4ee5\u6570\u7ec4\u964d\u7ef4\uff0c\u5c06\u7b2c\u4e00\u7ef4\u5220\u53bb\uff0c\u7136\u540e\u5012\u7740\u66f4\u65b0\u3002\u66b4\u529b DP \u4f2a\u4ee3\u7801\uff1a\n```cpp\nfor(int i = 1; i <= n; i++) {\n\tfor(int j = n; j >= 1; j--) {\n\t\tif(dp[j - 1] < l[i]) dp[j] = Min(dp[j], l[i]);\n\t\tif(l[i] <= dp[j - 1] && dp[j - 1] < r[i]) dp[j] = Min(dp[j], dp[j - 1] + 1);\n\t}\n}\n```\n\u5728\u8003\u8651\u7528\u5e73\u8861\u6811\u4f18\u5316\u3002\n\n\u7531\u4e8e\u662f\u4ece\u540e\u5f80\u524d\u66f4\u65b0\uff0c\u6240\u4ee5\u5148\u8003\u8651\u7b2c\u4e8c\u7c7b dp \u7684\u5f71\u54cd\u3002\u7b2c\u4e8c\u7c7b dp \u53ef\u4ee5\u5206\u89e3\u4e3a\u4e09\u90e8\uff1a\n1. \u5148\u5220\u9664\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $r$ \u7684\u70b9\u3002\n2. \u533a\u95f4 $[l,r)$ \u7684\u6240\u6709\u6570\u5e73\u79fb\u4e3a $[l+1,r+1)$ \u3002\n3. \u6700\u540e\u63d2\u5165\u5b9e\u884c\u7b2c\u4e8c\u90e8\u524d\uff0c\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $l$ \u7684\u6570\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u82e5\u533a\u95f4 $[l,r)$ \u6ca1\u6709\u4efb\u4f55\u6570\uff0c\u5219\u5ffd\u7565\u7b2c\u4e8c\u6b65\u64cd\u4f5c\u3002\n\n\u5728\u6267\u884c\u7b2c\u4e00\u7c7b dp \uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u53ea\u66f4\u65b0\u4e00\u4e2a\u6570\uff0c\u5373\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $l$ \u7684\u6570\u3002\u5177\u4f53\u5206\u4e3a\u4e24\u6b65\uff1a\n1. \u5148\u5220\u9664\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $l$ \u7684\u6570\u3002\n2. \u63d2\u5165 $l$ \u3002\n\n\u53ef\u4ee5\u5c06\u5176\u5408\u5e76\u4e3a $3$ \u4e2a\u64cd\u4f5c\uff0c\u5373\u7b2c\u4e8c\u7c7b dp \u7684 $1$ \uff0c $2$ \u64cd\u4f5c\uff0c\u4e0e\u7b2c\u4e00\u7c7b dp \u7684 $2$ \u64cd\u4f5c\u3002\n\n\u7531\u4e8e\u6d89\u53ca\u5230\u533a\u95f4\u64cd\u4f5c\uff0c\u9700\u8981\u6253\u61d2\u6807\u8bb0\u3002\n# Code\n```cpp\n#include <cstdio>\nnamespace Quick_Function {\n\ttemplate <typename Temp> void Read(Temp &x) {\n\t\tx = 0; char ch = getchar(); bool op = 0;\n\t\twhile(ch < '0' || ch > '9') { if(ch == '-') op = 1; ch = getchar(); }\n\t\twhile(ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); }\n\t\tif(op) x = -x;\n\t}\n\ttemplate <typename T, typename... Args> void Read(T &t, Args &... args) { Read(t); Read(args...); }\n\ttemplate <typename Temp> Temp Max(Temp x, Temp y) { return x > y ? x : y; }\n\ttemplate <typename Temp> Temp Min(Temp x, Temp y) { return x < y ? x : y; }\n\ttemplate <typename Temp> Temp Abs(Temp x) { return x < 0 ? (-x) : x; }\n\ttemplate <typename Temp> void Swap(Temp &x, Temp &y) { x ^= y ^= x ^= y; }\n}\nusing namespace Quick_Function;\n#define INF 0x3f3f3f3f\nconst int MAXN = 6e5 + 5;\nint n, ans;\nstruct Splay_Node {\n\tint son[2], fa, val, tag;\n\t#define ls t[pos].son[0]\n\t#define rs t[pos].son[1]\n};\nstruct Splay_Tree {\n\tSplay_Node t[MAXN];\n\tint root, tot, Top, stk[MAXN];\n\tint Ident(int pos) { return t[t[pos].fa].son[1] == pos ? 1 : 0; }\n\tvoid Connect(int pos, int fa, int flag) { t[fa].son[flag] = pos, t[pos].fa = fa; }\n\tvoid Push_Down(int pos) {\n\t\tif(!t[pos].tag) return;\n\t\tif(ls) { t[ls].val += t[pos].tag, t[ls].tag += t[pos].tag; }\n\t\tif(rs) { t[rs].val += t[pos].tag, t[rs].tag += t[pos].tag; }\n\t\tt[pos].tag = 0;\n\t}\n\tint New(int val, int fa) { t[++tot].fa = fa, t[tot].val = val; return tot; }\n\tvoid Build() { root = New(-INF, 0); t[root].son[1] = New(INF, root); }\n\tvoid Rotate(int pos) {\n\t\tint fa = t[pos].fa, grand = t[fa].fa;\n\t\tint flag1 = Ident(pos), flag2 = Ident(fa);\n\t\tConnect(pos, grand, flag2);\n\t\tConnect(t[pos].son[flag1 ^ 1], fa, flag1);\n\t\tConnect(fa, pos, flag1 ^ 1);\n\t}\n\tvoid Splay(int pos, int to) {\n\t\tint tmp = pos; Top = 0;\n\t\tstk[++Top] = tmp;\n\t\twhile(tmp) stk[++Top] = tmp = t[tmp].fa;\n\t\twhile(Top) Push_Down(stk[Top--]);//\u4ee5\u4e0a\u4e3a\u91ca\u653e\u61d2\u6807\u8bb0\n\t\tfor(int fa = t[pos].fa; t[pos].fa != to; Rotate(pos), fa = t[pos].fa)\n\t\t\tif(t[fa].fa != to) Ident(pos) == Ident(fa) ? Rotate(fa) : Rotate(pos);\n\t\tif(!to) root = pos;\n\t}\n\tvoid Insert(int &pos, int val, int fa) {\n\t\tif(!pos) { ++ans; pos = New(val, fa); Splay(pos, 0); return; }\n\t\tPush_Down(pos);//\u51e0\u4e4e\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u6709\u91ca\u653e\u61d2\u6807\uff0c\u522b\u5fd8\u4e86\n\t\tif(val < t[pos].val) Insert(ls, val, pos);\n\t\telse Insert(rs, val, pos);\n\t}\n\tvoid Erase(int pos) {\n\t\tSplay(pos, 0);\n\t\tint l = ls, r = rs;\n\t\twhile(t[l].son[1]) l = t[l].son[1];\n\t\twhile(t[r].son[0]) r = t[r].son[0];\n\t\tSplay(l, 0); Splay(r, l);\n\t\tt[r].son[0] = 0; --ans;\n\t}\n\tint Get_Pre(int val) {//\u67e5\u627e\u7b2c\u4e00\u4e2a\u5c0f\u4e8eval\u7684\u70b9\u7684\u7f16\u53f7\n\t\tint pos, res, newroot;\n\t\tpos = newroot = root;\n\t\twhile(pos) {\n\t\t\tPush_Down(pos);\n\t\t\tif(t[pos].val < val) { res = pos; pos = rs; }\n\t\t\telse pos = ls;\n\t\t}\n\t\tSplay(newroot, 0);\n\t\treturn res;\n\t}\n\tint Get_Nxt(int val) {//\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8eval\u7684\u70b9\u7684\u7f16\u53f7\n\t\tint pos, res, newroot;\n\t\tpos = newroot = root;\n\t\twhile(pos) {\n\t\t\tPush_Down(pos);\n\t\t\tif(t[pos].val > val) { res = pos; pos = ls; }\n\t\t\telse pos = rs;\n\t\t}\n\t\tSplay(newroot, 0);\n\t\treturn res;\n\t}\n\tvoid Move(int l, int r) {//\u5e73\u79fb\u533a\u95f4[l,r)\n\t\tint u = Get_Nxt(l - 1), v = Get_Pre(r);\n\t\tif(t[u].val > t[v].val) return;//\u6ca1\u6709\u6570\u5b57\u5c31\u8df3\u8fc7\n\t\tif(u == v) t[u].val++;\n\t\telse if(t[u].val < t[v].val) {\n\t\t\tSplay(u, 0); Splay(v, u);\n\t\t\tint rson = t[v].son[0];\n\t\t\t++t[u].val; ++t[v].val, t[rson].val++;\n\t\t\tif(rson) ++t[rson].tag;\n\t\t}\n\t}\n};\nSplay_Tree tree;\nint main() {\n\tRead(n); tree.Build();\n\ttree.Insert(tree.root, 0, 0); ans = 0;\n\tfor(int i = 1, l, r; i <= n; i++) {\n\t\tRead(l, r);\n\t\tint pos = tree.Get_Nxt(r - 1);\n\t\tif(pos && pos != 1 && pos != 2) tree.Erase(pos);\n\t\ttree.Move(l, r);\n\t\ttree.Insert(tree.root, l, 0);\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1621948000,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3] CF809D Hitchhiking in the Baltic States"
    },
    {
        "content": "# \u601d\u8def\n\n### Step1: \u76f4\u63a5 DP\n\n- \u72b6\u6001\u5b9a\u4e49\n\n$f[i][j]$ \u4e3a $a[1] \\rightarrow a[i]$ \u4e2d\u53d6\u957f\u5ea6\u4e3a $j$ \u7684\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u65f6\u6700\u540e\u4e00\u4e2a\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n- \u72b6\u6001\u8f6c\u79fb\n\n\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. $f[i-1][j-1]<l$\uff1a$f[i][j]=l$\uff1b\n2. $f[i-1][j-1]\t\\ge r$\uff1a\u72b6\u6001\u4e0d\u5408\u6cd5\uff0c\u4e0d\u7528\u8f6c\u79fb\u4e86\uff1b\n3. $l \\le f[i-1][j-1] < r$\uff1a$f[i][j]=f[i-1][j-1]+1$\u3002\n\n### Step2: Splay \u4f18\u5316\n\n- \u5bf9\u4e8e\u7b2c\u4e00\u79cd\uff0c$f[i-1][j-1]$ \u6ca1\u7528\uff0c\u76f4\u63a5\u8d4b\u503c\u5373\u53ef\uff1b\n- \u5bf9\u4e8e\u7b2c\u4e09\u79cd\uff0c\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4ee5\u5148\u628a\u6700\u9760 $r$ \u7684 $f$ \u5220\u9664\uff0c\u518d\u63d2\u5165\u4e00\u4e2a $l$\uff0c\u5c31\u53ef\u4ee5\u79fb\u52a8\u6574\u4e2a\u533a\u95f4\u3002\n- \u9898\u76ee\u601d\u7ef4\u5f88\u5de7\u5999\uff0c\u4f46\u4ee3\u7801\u6bd4\u8f83\u96be\u5b9e\u73b0\uff08\n\n\n# \u4ee3\u7801\n\n\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u5361\u4e86\u633a\u957f\u65f6\u95f4\u5e38\u624d AC \u7684\uff08\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 5;\nstruct node {\n    int s[2], fa, v, tag;\n} t[N];\n#define ls t[id].s[0]\n#define rs t[id].s[1]\ninline void rotate(int id) {\n\tint fa = t[id].fa, ffa = t[fa].fa;\n\tnode &pre = t[id], &f1 = t[fa], &f2 = t[ffa];\n\tbool c = f1.s[1] == id, cc = c ^ 1, c1 = f2.s[1] == fa;\n\tif (ffa) {\n\t\tf2.s[c1] = id;\n\t}\n\tint &son = pre.s[cc];\n\tpre.fa = ffa, f1.s[c] = son;\n\tif (son) {\n\t\tt[son].fa = fa;\n\t}\n\tson = fa, f1.fa = id;\n}\ninline void pushdown(int id) {\n\tif (!t[id].tag) {\n        return ;\n    }\n    int &tt = t[id].tag;\n\tif (ls) {\n        t[ls].v += tt, t[ls].tag += tt;\n    }\n\tif (rs) {\n        t[rs].v += tt, t[rs].tag += tt;\n    }\n    tt = 0;\n}\nint root;\nvoid splay(int id, int f) {\n\tstack<int> S;\n\tS.push(id);\n\tfor (int i = id; t[i].fa; i = t[i].fa) {\n\t\tS.push(t[i].fa);\n\t}\n\twhile (S.size()) {\n\t\tpushdown(S.top()), S.pop();\n\t}\n\twhile (t[id].fa != f) {\n\t\tint fa = t[id].fa, ffa = t[fa].fa;\n\t\tif (ffa != f) {\n\t\t\trotate((t[fa].s[0] == id) == (t[ffa].s[0] == fa) ? fa : id);\n\t\t}\n\t\trotate(id);\n\t}\n\tif (!f) {\n\t\troot = id;\n\t}\n}\nint find(int x) {\n\tint id = root, res = 0;\n\twhile (id) {\n\t\tpushdown(id);\n\t\tif (t[id].v < x) {\n\t\t\tres = id, id = rs;\n\t\t} else {\n\t\t\tid = ls;\n\t\t}\n\t}\n\treturn res;\n}\ninline int Nxt(int id) {\n    splay(id, 0), id = rs;\n    while (ls) {\n        id = ls;\n    }\n    return id;\n}\ninline int Pre(int id) {\n    splay(id, 0), id = ls;\n    while (rs) {\n        id = rs;\n    }\n    return id;\n}\ninline void del(int id) {\n\tint pre = Pre(id), nxt = Nxt(id);\n\tsplay(pre, 0), splay(nxt, pre);\n\tt[nxt].s[0] = t[id].fa = 0;\n}\nint k;\nvoid ins(int x) {\n\tint id = root, fa = 0;\n\twhile (id) {\n\t\tpushdown(id);\n\t\tfa = id, id = t[id].v > x ? ls : rs;\n\t}\n\tid = ++k;\n\tif (fa) {\n\t\tbool tt = t[fa].v <= x;\n        t[fa].s[tt] = id;\n    }\n\tt[id].fa = fa, t[id].v = x;\n    splay(id, 0);\n}\nint main() {\n\tios :: sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n    ins(-1e9 - 10), ins(1e9 + 10);\n    int n;\n    cin >> n;\n\tint res = n;\n    while (n--) {\n    \tint l, r;\n    \tcin >> l >> r;\n        int u = find(l), v = find(r), nxt = Nxt(v);\n        if (u ^ v) {\n            splay(u, 0), splay(nxt, u);\n            node &nxtt = t[t[nxt].s[0]];\n            ++nxtt.v, ++nxtt.tag;\n        }\n        if (nxt != 2) {\n            del(nxt), --res;\n        }\n        ins(l);\n    }\n    cout << res << '\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1650859310,
        "uid": 308106,
        "name": "_rockyyue_",
        "ccfLevel": 0,
        "title": "CF809D \u9898\u89e3"
    },
    {
        "content": "## \u4f20\u9001\u95e8\n\n\u200b\t[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF809D)\n\n\u200b\t[codeforces](https://codeforces.com/problemset/problem/809/D)\n\n## SOLUTION\n\n\u200b\t\u6211\u4eec\u8bbe $dp[j]$ \u8868\u793a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a $j$ \u65f6\u672b\u5c3e\u7684\u6700\u5c0f\u503c\uff0c\u521d\u59cb\u5316\u4e3a $inf$ \uff0c\u90a3\u4e48\u8003\u8651\u679a\u4e3e\u5230\u4e86\u7b2c $i$ \u4e2a\u533a\u95f4\uff0c\u5bf9\u4e8e $1\\leq j \\leq n$ \u6765\u8bf4\n\n\u200b\t$dp[j]=min(dp[j-1],l)$ $(dp[j-1] < l)$\n\n\u200b\t$dp[j]=min(dp[j-1]+1,dp[j])$ $(l \\le dp[j-1]<r)$\n\n\u200b\t$dp[j] = dp[j] $ $(dp[j-1]\\ge r)$\n\n\u200b\t\u90a3\u4e48\u6839\u636e\u4ee5\u4e0a\u5f0f\u5b50\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 $n^2$ \u7684\u4f18\u79c0\u505a\u6cd5\u3002\u4f46\u662f\u7531\u4e8e\u539f\u9898\u4e2d $n\\le 3*10^5+7$ \uff0c\u6240\u4ee5\u8bf4\u8fd9\u6837\u80af\u5b9a\u4e0d\u884c\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u200b\t\u6211\u4eec\u4f1a\u53d1\u73b0 $dp$ \u8fc7\u7a0b\u4e2d\u7684\u4efb\u610f\u65f6\u523b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $<n$ \u7684 $j$ \uff0c\u4e00\u5b9a\u6ee1\u8db3\uff1a\n\n\u200b\t$dp[j] \\le dp[j+1]$\n\n\u200b\t\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u6240\u6709\u7684 $dp[j]$ \u3002\n\n\u200b\t\u518d\u8003\u8651\u6bcf\u6b21\u626b\u5230\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\u65f6\uff0c $dp[j]$ \u5bf9 $dp[j+1]$ \u7684\u8d21\u732e\u3002\n\n\u200b\t\u5982\u679c\u8be5\u8f6c\u79fb\u6ee1\u8db3\u7b2c\u4e00\u884c\u5f0f\u5b50\uff08\u5373 $dp[j]<l$ \uff09\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u4f1a\u6709\u67d0\u4e2a $dp[j+1]$ \u662f\u7b49\u4e8e $l$ \u7684\uff0c\u800c\u8f6c\u79fb\u8fc7\u53bb\u7684 $dp[j]$ \u4e00\u5b9a\u662f\u5c0f\u4e8e $l$ \u7684\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u90a3\u4e48\u6b64\u65f6\u7684 $dp[j+1]$ \u4e00\u5b9a\u4e0d\u52a3\uff0c\u6240\u4ee5\u5728 $j$ \u7684\u540e\u9762\u4e00\u4e2a\u5e8f\u53f7\u5904\u5f3a\u884c\u6dfb\u52a0\u4e00\u4e2a $l$ \u5c31\u884c\u4e86\u3002\n\n\u200b\t\u5982\u679c\u6ee1\u8db3\u7b2c\u4e8c\u884c\u5f0f\u5b50 $l\\le dp[j]<r$ \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u8fd9\u4e00\u90e8\u5206\u7684 $dp[j]$ \u7684\u503c $+1$ \uff0c\u5e76\u4e14\u7f16\u53f7 $+1$ \uff0c\u6765\u4ee3\u66ff\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u521a\u521a\u672c\u6765\u5c31\u5f3a\u884c\u52a0\u5165\u4e86\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u503c $+1$ \u5c31\u884c\u4e86\u3002\n\n\u200b\t\u5982\u679c\u6709 $ dp[j]$ \u6ee1\u8db3\u7b2c\u4e09\u884c\u5f0f\u5b50\uff0c\u90a3\u4e48\u6b64\u65f6\u8fd9\u4e9b $dp[j]$ \u65e0\u6cd5\u8fdb\u884c\u4efb\u4f55\u8f6c\u79fb\uff0c\u4f46\u662f\u56e0\u4e3a\u4e4b\u524d\u7684 $dp[j]$ \u7f16\u53f7 $+1$ \uff0c\u6b64\u65f6\u5927\u4e8e\u7b49\u4e8e $r$ \u4e14\u6700\u5c0f\u7684 $dp[j]$ \u53ef\u4ee5\u88ab\u524d\u9762\u7684\u66ff\u6362\u6389\uff0c\u5b9e\u73b0\u5c31\u884c\u5c06\u5176\u5220\u9664\u3002\n\n\u200b\t\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u6bcf\u6b21\u8003\u8651\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\uff0c\u628a\u5e73\u8861\u6811\u4e2d\u503c\u57df\u5728 $[l,r-1]$ \u4e4b\u95f4\u7684\u70b9\u7684\u6743\u503c\u6574\u4f53 $+1$ \uff0c\u5220\u9664 $r$ \u7684\u540e\u7ee7\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\uff0c\u518d\u52a0\u5165\u4e00\u4e2a $l$ \u5c31\u884c\u4e86\u3002\n\n## \u4ee3\u7801\n\n\u6ce8\u610f\u4ee3\u7801\u4e2d\u8981\u6ce8\u610fpushdown\u548c\u65cb\u8f6c\u7684\u987a\u5e8f\uff0c\u907f\u514d~~\u50cf\u672c\u849f\u84bb\u4e00\u6837~~\u70b8\u9505\u3002\n\n\u7279\u522b\u63d0\u9192\uff1a\u5199splay\u7684\u540c\u5b66\u4e00\u5b9a\u8981\u6ce8\u610fsplay\u7684\u5f62\u6001\uff0c\u5426\u5219\u4f1aT\u60e8\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define ll long long\n#define rep(i,l,r) for(ll i=(l);i<=(r);++i)\n#define req(i,r,l) for(ll i=(r);i>=(l);--i)\n#define wif while\nconst ll inf = INT_MAX , df = 3e5 + 7 ;\nll fa[df] , cnt[df] , sum[df] , ls[df] , rs[df] , val[df] , sta[df] , top , n , root , tag[df] , tot ;\ninline ll read()\t{\n\tll x = 0 , y = 1 ; char ch = getchar() ;\n\twif( ch > '9' || ch < '0') \t\ty = ( ch == '-' ) ? - 1 : 1 , ch = getchar() ;\n\twif( ch >= '0' && ch <= '9' )\tx = ( x << 3 ) + ( x << 1 ) + ch - '0' , ch = getchar() ;\n\treturn x * y ;\t}\nvoid pushup( ll x )\t{\tsum[x] = sum[ls[x]] * ( ls[x] != 0 ) + sum[rs[x]] * ( rs[x] != 0 ) + cnt[x] ;\t}\nvoid pushdown( ll x )\t{\n\tif( ls[x] ) val[ls[x]] += tag[x] , tag[ls[x]] += tag[x] ;\n\tif( rs[x] )\tval[rs[x]] += tag[x] , tag[rs[x]] += tag[x] ;\n\ttag[x] = 0 ;\treturn ;\t}\nvoid merge( ll x )\t{\n\tll y = fa[x] , z = fa[y] ;\n\tfa[x] = z , fa[y] = x ;\n\tif( ls[z] == y )\tls[z] = x ;\telse\trs[z] = x ;\n\tif( ls[y] == x )\tls[y] = rs[x] , rs[x] = y , fa[ls[y]] = y ;\n\telse\t\t\t\trs[y] = ls[x] , ls[x] = y , fa[rs[y]] = y ;\n\tpushup( y ) , pushup( x ) ;\t}\nvoid splay( ll x , ll rt )\t{\n\ttop = 1 ; sta[top] = x ;\n\tfor( ll y = x ; y != rt ; y = fa[y] )\tsta[ ++ top ] = fa[y] ;\n\treq(i,top,1)\tpushdown( sta[i] ) ;\n\tfor( ll y = 0 ; ( y = fa[x] ) != rt ; merge(x) )\n\t\tif( fa[y] != rt )\tmerge( ( ( ls[y] == x ) ^ ( ls[fa[y]] == y ) ) ? x : y ) ;\n\tif( ! rt )\troot = x ;\n\treturn ;\t}\nll get_back( ll u , ll x )\t{\n\tll lst = 0 , ret = 0 ;\n\twif(u)\t{\n\t\tif( x < val[u] )\tlst = u , pushdown(u) , u = ls[ ret = u ] ;\n\t\telse\t\t\t\tlst = u , pushdown(u) , u = rs[u] ;\n\t}\n\tsplay( lst , 0 ) ;\treturn ret ;\t}\nll get_front( ll u , ll x )\t{\n\tll lst = 0 , ret = 0 ;\n\twif(u)\t{\n\t\tif( x > val[u] )\tlst = u , pushdown(u) , u = rs[ ret = u ] ;\n\t\telse\t\t\t\tlst = u , pushdown(u) ,  u = ls[u] ;\n\t}\n\tsplay( lst , 0 ) ;\treturn ret ;\t}\nvoid add( ll u , ll x )\t{\n\twif( x != val[u] )\t{\n\t\tpushdown(u);\n\t\tif( x < val[u] )\t{\tif( ! ls[u] )\tls[u] = ++ tot , fa[tot] = u , val[tot] = x ; u = ls[u] ;\t}\n\t\telse\t\t\t\t{\tif( ! rs[u] )\trs[u] = ++ tot , fa[tot] = u , val[tot] = x ; u = rs[u] ;\t}\n\t}\n\t++ cnt[u] , ++ sum[u] ;\tsplay( u , 0 ) ;\t}\nvoid det( ll x )\t{\n\tll u = get_front( root , x ) , v = get_back( root , x ) ;\n\tsplay( u , 0 ) , splay( v , u ) ;\n\tif( ! ls[v] )\treturn ;\n\t-- cnt[ls[v]] , -- sum[ls[v]] , -- sum[v] , -- sum[u] ;\n\tif( ! sum[ls[v]] )\t{\tfa[ls[v]] = 0 ; ls[v] = 0 ;\t}\n\treturn ;\t}\nvoid modity( ll l , ll r )\t{\n\tll x = get_front( root , l ) , y = get_back( root , r - 1 ) ;\n\tsplay( x , 0 ) , splay( y , x ) ;\n\tif( ls[y] )\tval[ls[y]] ++ , tag[ls[y]] ++ ;\n\treturn ;\t}\nint main()\t{\n\tn = read() ;\n\tadd( root , inf ) , add( root , - inf ) ;\n\trep( i , 1 , n )\t{\n\t\tll l = read() , r = read() ;\n\t\tif( i == 1 )\t{\tadd( root , l );\tcontinue ;\t}\n\t\tll x = get_back( root , r - 1 ) ;\n\t\tmodity( l , r ) ;\n\t\tif( val[x] < inf )\tdet( val[x] ) ;\n\t\tadd( root , l ) ;\n\t\tsplay( 1 , 0 ) ;\n\t}\n\treturn printf( \"%lld\\n\" , sum[ root ] - 2 ) , 0 ;\n}\n```",
        "postTime": 1618368745,
        "uid": 181164,
        "name": "CLZY",
        "ccfLevel": 0,
        "title": "CF809D Hitchhiking in the Baltic States\u9898\u89e3"
    },
    {
        "content": "[$\\tt Link$](/problem/CF809D)\n\n\u5e73\u8861\u6811\u4f18\u5316 $\\tt dp$\uff0c\u597d\u9898\u3002\u6765\u8865\u4e2a\u9898\u89e3\u3002\n\n## \u6734\u7d20 $\\tt dp$\n\n\u7ef4\u62a4 $dp_i$ \u4ee3\u8868\u957f\u5ea6\u4e3a $i$ \u7684 $\\tt LIS$ \u65f6\u6700\u540e\u4e00\u4f4d\u7684\u6700\u5c0f\u503c\u3002\u7528\u6bcf\u4e2a\u533a\u95f4 $l_j,r_j$ \u8fdb\u884c\u8f6c\u79fb\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$$\n\\begin{cases}\ndp_i=\\min(l)&dp_{i-1}\\lt l&(1)\\\\\ndp_i=\\min(dp_{i-1}+1)&dp_{i-1}\\in[l,r)&(2)\\\\\n\\end{cases}\n$$\n\n\u6ce8\u610f\u5f53 $dp_{i-1}\\ge r$ \u65f6\u65e0\u6cd5\u4ece $l,r$ \u6765\u8f6c\u79fb $dp_i$\u3002$\\quad(3)$\n\n\u8fd9\u6837\u7684\u8f6c\u79fb\u662f $n^2$ \u7684\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n## \u5e73\u8861\u6811\u4f18\u5316\n\n\u8003\u8651\u4f7f\u7528\u5e73\u8861\u6811\u6765\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a $\\tt LIS$\uff0c\u6bcf\u4e00\u6b21\u8bfb\u5165\u4e00\u4e2a $L_i,R_i$ \u5c31\u5220\u9664\u6389\u65e0\u6cd5\u5bf9\u540e\u9762\u51b3\u7b56\u4ea7\u751f\u5e2e\u52a9\u7684 $dp$ \u503c\u3002\n\n+ \u7531 $(2)$\uff0c\u6211\u4eec\u5728\u5e73\u8861\u6811\u91cc\u627e\u5230\u6700\u957f\u7684\u4e00\u4e2a\u533a\u95f4 $I$ \u4f7f\u5f97 $\\forall j\\in I,dp_j-1\\in[l,r]$\uff0c\u7136\u540e\u5c06\u5176\u96c6\u4f53\u53f3\u79fb\u3002\n+ \u7531 $(1)$\uff0c\u6211\u4eec\u5728\u5e73\u8861\u6811\u91cc\u63d2\u5165 $l$\uff0c\u586b\u8865\u81f3\u53f3\u79fb\u591a\u51fa\u7684\u7a7a\u4f4d\u3002\n+ \u7531 $(3)$\uff0c\u6211\u4eec\u5728\u5e73\u8861\u6811\u91cc\u5220\u9664 $r$ \u7684\u540e\u7ee7\uff0c\u5f53\u7136\u4e0d\u5b58\u5728\u5c31\u522b\u7ba1\u3002\n\n## \u5b9e\u73b0\n\n\u6211\u5199\u7684 $\\texttt{FHQ-Treap}$\u3002\n\n[$\\tt Code$](https://www.luogu.com.cn/paste/8tu6180c)",
        "postTime": 1657616280,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF809D Hitchhiking in the Baltic States"
    },
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF809D) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/809/problem/D)\n\n>\u9898\u610f\u89c1\u6d1b\u8c37\u91cc\u7684\u7ffb\u8bd1\u3002\n\n\u4e00\u8138DP\u7684\u6837\uff0c\u4e8e\u662f\u8003\u8651DP\u3002\n\n\u4e0e\u666e\u901a\u7684LIS\u7c7b\u4f3c\uff0c\u8bbe$dp_{i,j}$\u8868\u793a\u8003\u8651\u5230\u7b2c$i$\u4e2a\u6570\uff0c\u6700\u540e\u4e00\u4f4d\u4e3a$a_i=j$\u7684LIS\u957f\u5ea6\u3002\u663e\u7136\uff0c\u7b2c\u4e8c\u7ef4\u662f\u5b9a\u4e49\u5728\u503c\u57df$\\left[1,10^9\\right]$\u4e0a\u7684\uff0c\u65e0\u8bba\u5982\u4f55\u4f18\u5316\u5b83\u90fd\u4f1a\u51fa\u73b0\u5728\u65f6\u95f4/\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0a\uff0c\u53d7\u4e0d\u8d77\u3002\u4e8e\u662f\u8003\u8651\u4e00\u79cd\u60ef\u7528\u5957\u8def\uff0c\u5c06DP\u6570\u7ec4\u7684\u5b9a\u4e49\u57df\u548c\u503c\u57df\u8c03\u6362\uff0c\u5373\u8bbe$dp_{i,j}$\u8868\u793a\u8003\u8651\u5230\u7b2c$i$\u4e2a\u6570\uff0c\u957f\u5ea6\u4e3a$j$\u7684IS\u7684\u6700\u540e\u4e00\u4f4d\u6700\u5c0f\u4e3a\u591a\u5c11\uff08\u5982\u679c\u65e0\u6cd5\u5b9e\u73b0\u5219\u4e3a$\\infty$\uff09\u3002\n\n\u8fb9\u754c\u4e3a$dp_{0,i}=\\begin{cases}0&i=0\\\\\\infty&i>0\\end{cases}$\uff0c\u76ee\u6807\u4e3a$\\max\\limits_{i\\in[1,n],dp_{n,i}<\\infty}\\{i\\}$\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a$dp_{i,j}=\\min\\begin{cases}dp_{i-1,j}\\\\\\max(l_i,dp_{i-1,j-1}+1)&dp_{i-1,j-1}<r\\end{cases}$\uff08\u663e\u7136\uff0c\u57fa\u4e8e\u8d2a\u5fc3\uff0c\u82e5\u9009$a_i$\uff0c\u90a3\u4e48\u5728\u53ef\u80fd\u60c5\u51b5\u4e0b$a_i$\u8d8a\u5c0f\u8d8a\u597d\uff09\u3002\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\u538b\u5230$\\mathrm O(n)$\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\mathrm O\\!\\left(n^2\\right)$\u7684\u3002\u8003\u8651\u4f18\u5316\u3002\n\n\u6ce8\u610f\u5230\u8f6c\u79fb\u65f6\u7684\u6700\u4f18\u51b3\u7b56\u53ea\u53ef\u80fd\u4e3a$dp_{i-1,j},l_i,dp_{i-1,j-1}+1$\u8fd9$3$\u79cd\uff0c\u4e8e\u662f\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u8f6c\u79fb\u5230$l_i$\u3002\u5f53\u4e14\u4ec5\u5f53$\\begin{cases}l_i\\geq dp_{i-1,j-1}+1\\\\l_i\\leq dp_{i-1,j}\\end{cases}$\u3002\u4e0d\u96be\u53d1\u73b0\uff0c$\\forall i\\in[0,n]$\uff0c$dp_i$\u4e0d\u4e3a$\\infty$\u7684\u90a3\u90e8\u5206\u662f\u4e25\u683c\u5355\u8c03\u4e0a\u5347\u7684\uff08\u6613\u8bc1\uff09\u3002\u4e8e\u662f\u6211\u4eec\u8bbe$las$\u4e3a\u6700\u5927\u7684$j$\u4f7f\u5f97$dp_{i-1,j}<l_i$\u3002\u90a3\u4e48$\\begin{cases}l_i\\geq dp_{i-1,j-1}+1\\\\l_i\\leq dp_{i-1,j}\\end{cases}\\Rightarrow\\begin{cases}j-1\\leq las\\\\j>las\\end{cases}\\Rightarrow j=las+1$\uff1b\n2. \u8f6c\u79fb\u5230$dp_{i-1,j-1}+1$\u3002\u5f53\u4e14\u4ec5\u5f53$\\begin{cases}dp_{i-1,j-1}+1>l_i\\\\dp_{i-1,j-1}+1\\leq dp_{i-1,j}\\\\dp_{i-1,j-1}<r\\end{cases}$\uff08$dp_{i-1,j-1}+1=l_i$\u5f52\u5728\u60c5\u51b5$1$\u91cc\uff09\u3002\u6839\u636e\u5355\u8c03\u6027\uff0c$dp_{i-1,j-1}+1\\leq dp_{i-1,j}$\u663e\u7136\u6052\u6210\u7acb\u3002\u8bbe$las'$\u4e3a\u6700\u5927\u7684$j$\u4f7f\u5f97$dp_{i-1,j}<r_i$\u3002\u90a3\u4e48$\\begin{cases}dp_{i-1,j-1}+1>l_i\\\\dp_{i-1,j-1}<r\\end{cases}\\Rightarrow\\begin{cases}j-1>las\\\\j-1\\leq las'\\end{cases}\\Rightarrow j\\in[las+2,las'+1]$\uff1b\n3. \u8f6c\u79fb\u5230$dp_{i-1,j}$\u3002\u4e0d\u6ee1\u8db3\u60c5\u51b5$1,2$\u7684\u6761\u4ef6\u5219\u4e3a\u6b64\u60c5\u51b5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4$dp_i$\u8fd9\u4e2a\u6570\u5217\uff0c\u6bcf\u6b64\u8f6c\u79fb\u5373\u4ee4$dp_i=dp_{i+1}$\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u60f3\u7684\u8bdd\uff0c\u60c5\u51b5$3$\u76f8\u5f53\u4e8e\u4ec0\u4e48\u4e5f\u4e0d\u505a~~\uff0c\u6b63\u597d\u6211\u4eec\u4e5f\u6ca1\u5206\u6790\u60c5\u51b5$3$\u7684\u5145\u8981\u6761\u4ef6~~\uff0c\u4e8e\u662f\u53ea\u9700\u8981\u8003\u8651\u652f\u6301\u60c5\u51b5$1,2$\u5bf9\u5e94\u7684\u64cd\u4f5c\u5373\u53ef\u3002\u4e0d\u96be\u60f3\u5230\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u7ef4\u62a4\uff0c\u8fd9\u91cc\u4f7f\u7528fhq-Treap\u3002\u60c5\u51b5$1$\u5c31\u662f\u4e2a\u5355\u70b9\u4fee\u6539\uff1b\u60c5\u51b5$2$\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5256\u51fa\u533a\u95f4$[las+1,las']$\u540e\uff0c\u5220\u9664\u7b2c$las'+1$\u4e2a\u5143\u7d20\u5e76\u5c06\u7b2c$las+1$\u4e2a\u5143\u7d20\u5728\u539f\u4f4d\u62f7\u8d1d\u4e00\u4efd\uff0c\u7136\u540e\u533a\u95f4\u589e\u52a0$1$\u3002\u4e0e\u60c5\u51b5$2$\u4e00\u7efc\u5408\uff0c\u53ef\u4ee5\u628a\u201c\u5355\u70b9\u4fee\u6539\u3001\u5c06\u7b2c$las+1$\u4e2a\u5143\u7d20\u5728\u539f\u4f4d\u62f7\u8d1d\u4e00\u4efd\u201d\u7b80\u5316\u6210\u201c\u5728\u7b2c$las+1$\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u6dfb\u52a0\u201d~~\uff08\u5f53\u7136\u4e0d\u7b80\u5316\u4e5f\u6ca1\u5fc5\u8981\uff09~~\u3002\u8fd9\u91cc\u9762\u6d89\u53ca\u5230\u5220\u9664\u64cd\u4f5c\uff0c\u7531\u4e8e\u672c\u61a8\u61a8\u4e0d\u60f3\u7b97\u603b\u5171\u4f1a\u65b0\u5efa\u591a\u5c11\u4e2a\u8282\u70b9\uff0c\u800c\u4e14\u6b63\u597d\u627e\u4e2a\u673a\u4f1a\u7ec3\u4e60\u4e00\u4e0b\uff0c\u4e8e\u662f\u91c7\u7528\u5783\u573e\u56de\u6536\uff0c\u663e\u7136\u4efb\u610f\u65f6\u523b\u5143\u7d20\u6570$\\leq|[0,n]|=n+1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$\\mathrm O(n)$\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\n#define X first\n#define Y second\nconst int inf=0x3f3f3f3f;\nmt19937 rng(20060617/*\u4fe1\u4ef0\u4f18\u5316*/);\nconst int N=300000;\nint n;//\u6570\u7684\u6570\u91cf \nint l[N+1],r[N+1];//\u9650\u5236\u533a\u95f4 \nstruct fhq_treap{//fhq-Treap \n\tint sz/*\u70b9\u6570*/,root/*\u6839*/;\n\tstruct node{unsigned key;int lson,rson,sz,v,lz;}nd[N+2];\n\t#define key(p) nd[p].key\n\t#define lson(p) nd[p].lson\n\t#define rson(p) nd[p].rson\n\t#define sz(p) nd[p].sz\n\t#define v(p) nd[p].v\n\t#define lz(p) nd[p].lz\n\tstack<int> rub;//\u5783\u573e\u6808 \n\tvoid recyc(int p){rub.push(p);}//\u5783\u573e\u56de\u6536 \n\tint nwnd(int v){//\u65b0\u5efa\u8282\u70b9 \n\t\tint p;\n\t\tif(rub.size())p=rub.top(),rub.pop();//\u5783\u573e\u518d\u5229\u7528 \n\t\telse p=++sz;\n\t\treturn nd[p]=node({rng(),0,0,1,v,0}),p;\n\t}\n\tvoid sprup(int p){sz(p)=sz(lson(p))+1+sz(rson(p));}//\u4e0a\u4f20 \n\tvoid sprdwn(int p){//\u4e0b\u4f20 \n\t\tif(lz(p)){\n\t\t\tv(lson(p))+=lz(p);v(rson(p))+=lz(p);\n\t\t\tlz(lson(p))+=lz(p);lz(rson(p))+=lz(p);\n\t\t\tlz(p)=0;\n\t\t}\n\t}\n\tint bld(int l=0,int r=n){//\u5efa\u6811 \n\t\tint mid=l+r>>1,p=nwnd(mid?inf:0);\n\t\tif(l<=mid-1)lson(p)=bld(l,mid-1);\n\t\tif(mid+1<=r)rson(p)=bld(mid+1,r);\n\t\treturn sprup(p),p;\n\t}\n\tvoid init(){//fhq-Treap\u521d\u59cb\u5316 \n\t\tnd[sz=0]=node({0,0,0,0,0,0});\n\t\troot=bld();\n\t}\n\tpair<int,int> split(int x,int p=-1){~p||(p=root);\n\t\tif(!x)return mp(0,p);\n\t\tpair<int,int> sp;\n\t\tsprdwn(p);\n\t\tif(x<=sz(lson(p)))return sp=split(x,lson(p)),lson(p)=sp.Y,sprup(p),mp(sp.X,p);\n\t\treturn sp=split(x-sz(lson(p))-1,rson(p)),rson(p)=sp.X,sprup(p),mp(p,sp.Y);\n\t}\n\tint mrg(int p,int q){\n\t\tif(!p||!q)return p|q;\n\t\tsprdwn(p);sprdwn(q);\n\t\tif(key(p)<key(q))return rson(p)=mrg(rson(p),q),sprup(p),p;\n\t\treturn lson(q)=mrg(p,lson(q)),sprup(q),q;\n\t}\n\tint lss(int v,int p=-1)/*\u4ee5p\u4e3a\u6839\u7684\u5b50\u6811\u5185<v\u7684\u6570\u7684\u6570\u91cf*/{~p||(p=root);\n\t\tif(!p)return 0;\n\t\tsprdwn(p);\n\t\tif(v(p)<v)return sz(lson(p))+1+lss(v,rson(p));\n\t\treturn lss(v,lson(p));\n\t}\n\tvoid trs(int x){//\u8f6c\u79fb \n\t\tpair<int,int> sp=split(lss(l[x]));\n\t\tif(!sp.Y)return;\n\t\tpair<int,int> sp0=split(lss(r[x],sp.Y),sp.Y); \n\t\tif(sp0.Y){\n\t\t\tpair<int,int> sp1=split(1,sp0.Y);\n\t\t\trecyc(sp1.X);//\u5220\u9664\u5e76\u56de\u6536 \n\t\t\tv(sp0.X)++;lz(sp0.X)++;//\u533a\u95f4\u589e\u52a0 \n\t\t\troot=mrg(mrg(mrg(sp.X,nwnd(l[x])/*\u6dfb\u52a0*/),sp0.X),sp1.Y);\n\t\t}\n\t\telse{\n\t\t\tpair<int,int> sp1=split(sz(sp0.X)-1,sp0.X);\n\t\t\trecyc(sp1.Y);//\u5220\u9664\u5e76\u56de\u6536 \n\t\t\tv(sp1.X)++;lz(sp1.X)++;//\u533a\u95f4\u589e\u52a0 \n\t\t\troot=mrg(mrg(sp.X,nwnd(l[x])/*\u6dfb\u52a0*/),sp1.X);\n\t\t}\n\t}\n\tint at(int x,int p=-1)/*\u7b2cx\u4e2a\u5143\u7d20\uff080-indexed\uff09*/{~p||(p=root);\n\t\tsprdwn(p);\n\t\tif(sz(lson(p))+1==x+1)return v(p);\n\t\tif(sz(lson(p))>=x+1)return at(x,lson(p));\n\t\treturn at(x-sz(lson(p))-1,rson(p));\n\t}\n\tvoid dfs(int p=-1)/*\u8c03\u8bd5\u7528*/{~p||(p=root);\n\t\tif(!p)return;\n\t\tsprdwn(p);\n\t\tdfs(lson(p));\n\t\tcout<<v(p)<<\" \";\n\t\tdfs(rson(p));\n\t}\n}dp;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>l[i]>>r[i];\n\tdp.init();//fhq-Treap\u521d\u59cb\u5316 \n\tfor(int i=1;i<=n;i++)dp.trs(i)/*,dp.dfs(),puts(\"\")*/;//\u8f6c\u79fb \n//\tfor(int i=0;i<=n;i++)cout<<dp.at(i)<<\" \";puts(\"\");\n\tfor(int i=n;;i--)if(dp.at(i)<inf)return cout<<i,0;//\u8ba1\u7b97\u7b54\u6848 \n\treturn 0;\n}\n```",
        "postTime": 1587795882,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 809D - Hitchhiking in the Baltic States"
    },
    {
        "content": "# \u9898\u9762\n[\u539f\u9898](http://codeforces.com/problemset/problem/809/D)\n\n# Solution\n\u8fd9\u662f\u4eca\u5929\u505a\u7684\u9898\u76ee\u4e4b\u4e2d\u601d\u7ef4\u96be\u5ea6\u548c\u4ee3\u7801\u96be\u5ea6\u6700\u5927\u7684\u4e00\u9053\u9898.\n\n\u9996\u5148\u6211\u4eec\u8003\u8651DP.\n\n\u4e00\u822c\u7684LIS\u90fd\u662f\u8bbe\n```cpp\nf[i]\u8868\u793a\u4ee5i\u7ed3\u5c3e\u7684LIS\u4e2d\u7684\u6700\u5c0f\u503c.\n```\n\u90a3\u4e48\u4e0d\u96be\u5217\u51fa\u8f6c\u79fb\u65b9\u7a0b\n```cpp\nf[i]=min(f[i],f[i-1]+1);\n```\n\u601d\u8003\u4e00\u4e0b\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\u7684\u9650\u5236,\u5fc5\u7136\u4f1a\u5bf9\u4e00\u6bb5\u533a\u95f4\u9020\u6210\u5f71\u54cd:\u5373\u8be5\u6bb5\u533a\u95f4\u4e2d(\u7b2c\u4e00\u4e2a\u5927\u4e8el\u7684\u4f4d\u7f6e)\u7684\u5230(\u7b2c\u4e00\u4e2a\u5927\u4e8er\u7684\u4f4d\u7f6e-1),\u8fd9\u5c31\u662f\u53ef\u4ee5\u88ab\u5f71\u54cd\u7684\u533a\u95f4.\n\n\u90a3\u4e48\u8003\u8651\u5982\u4f55\u7ef4\u62a4,\u5bf9\u4e8e\u8fd9\u4e00\u6bb5\u533a\u95f4,\u76f8\u5f53\u4e8e\u662f\u628a\u8fd9\u6bb5\u533a\u95f4\u5411\u540e\u5e73\u79fb1\u4f4d\u5e76\u4e14\u628a\u7b2c\u4e00\u4e2a\u5927\u4e8el\u7684\u4f4d\u7f6e\u8d4b\u503c\u4e3al,\u90a3\u4e48\u52a8\u6001\u4fee\u6539\u4e0e\u52a8\u6001\u67e5\u8be2\u4e0d\u96be\u60f3\u5230\u7528\u5e73\u8861\u6811\u7ef4\u62a4.\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include<iostream>\n#include<queue>\nusing namespace std;\ninline int gi(){\n    int f=1,sum=0;char ch=getchar();\n    while(ch>'9' || ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0' && ch<='9'){sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n    return f*sum;\n}\nint ncnt;\nstruct Treap{\n    Treap *l,*r;\n    int val,siz,key,add;\n    inline void tain(){//update\n        if(add){\n            if(l){l->add+=add;l->val+=add;}\n            if(r){r->add+=add;r->val+=add;}\n            add=0;\n        }\n    }\n    void upt(){siz=(l?l->siz:0)+(r?r->siz:0)+1;}\n    Treap(){}\n    Treap(int v){\n        add=0;val=v;key=rand();l=r=NULL;siz=1;\n    }\n}pool[600010],*rt;\nint a[600010];\ninline int size(Treap*x){return x?x->siz:0;}\nTreap *Merge(Treap*a,Treap*b){//\u5408\u5e76a,b\u6811\n    if(a==NULL)return b;\n    if(b==NULL)return a;\n    a->tain();b->tain();\n    if(a->key<b->key){\n        a->r=Merge(a->r,b);a->upt();return a;\n    }\n    else{\n        b->l=Merge(a,b->l);b->upt();return b;\n    }\n}\ntypedef pair<Treap*,Treap*> DTreap;\nDTreap Split(Treap *o,int k){//\u5206\u79bbk\u4e2a\u8282\u70b9\n    if(!o)return DTreap(NULL,NULL);\n    o->tain();\n    DTreap y;\n    if(size(o->l)>=k){\n        y=Split(o->l,k);o->l=y.second;o->upt();y.second=o;\n    }\n    else{\n        y=Split(o->r,k-size(o->l)-1);o->r=y.first;\n        o->upt();y.first=o;\n    }\n    return y;\n}\nDTreap Split_val(Treap *o,int k){//\u5206\u79bbk\u4e2a\u8282\u70b9\n    if(!o)return DTreap(NULL,NULL);\n    o->tain();\n    DTreap y;\n    if(o->val>k){\n        y=Split_val(o->l,k);o->l=y.second;o->upt();y.second=o;\n    }\n    else{\n        y=Split_val(o->r,k);o->r=y.first;\n        o->upt();y.first=o;\n    }\n    return y;\n}\nvoid bianli(Treap *x){\n    if(!x)return;\n    x->tain();\n    bianli(x->l);\n    a[++*a]=x->val;\n    bianli(x->r);\n}\nint main(){\n    srand(19260817);\n    int n=gi();\n    pool[++ncnt]=Treap(0); rt=Merge(rt,pool+ncnt);\n    for (int i=1;i<=n;i++)\n        pool[++ncnt]=Treap((1<<30)+1),rt=Merge(rt,pool+ncnt);\n    for (int i=1;i<=n;i++){\n        int l=gi(),r=gi();\n        DTreap x=Split_val(rt,l-1);\n        DTreap y=Split_val(x.second,r-1);\n        DTreap z=Split(y.second,1);\n        pool[++ncnt]=Treap(l);\n        rt=Merge(x.first,pool+ncnt);\n        if (y.first) y.first->val++,y.first->add++;\n        rt=Merge(rt,y.first);\n        rt=Merge(rt,z.second);\n    }\n    *a=0; bianli(rt);\n    int i; for (i=1;i<=n && a[i+1]<1<<30;i++); i--;\n    printf(\"%d\\n\",i);\n    return 0;\n}\n```",
        "postTime": 1538208259,
        "uid": 133944,
        "name": "Biscuit46",
        "ccfLevel": 0,
        "title": "CF809D-Hitchhiking in the Baltic States"
    }
]