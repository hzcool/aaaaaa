[
    {
        "content": "\u95ee\u9898\u5176\u5b9e\u5c31\u662f\u600e\u4e48\u679a\u4e3e\u624d\u4e0d\u4f1a\u6f0f\u89e3\u3002\n\n\u663e\u7136\u7b54\u6848\u81f3\u591a\u662f $9$\u3002\u5982\u679c\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e2a\u4e09\u89d2\u5f62\u662f\u54ea\u4e9b\u70b9\uff0c\u518d\u6392\u9664\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u662f\u53ef\u505a\u7684\uff1b\u4f46\u6700\u7ec8\u9700\u8981\u89e3\u51b3\u201c\u7ed9\u5b9a\u5e73\u9762\u4e0a\u4e00\u4e9b\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb \u95ee\u5b58\u4e0d\u5b58\u5728\u89e3\u201d\uff0c\u8fd9\u4e2a\u95ee\u9898\u597d\u50cf\u672c\u8eab\u4e0d\u53ef\u505a\u3002\n\n\u63a5\u7740\u6765\u590d\u8bfb\u5b98\u65b9\u9898\u89e3\u4e86\u3002\u9996\u5148\u53bb\u6389\u5168\u7b49\u7684\u4e09\u89d2\u5f62\u3002\n\n\u8003\u8651\u4e09\u89d2\u5f62\u4f5c\u4e3a\u70b9\uff0c\u6709\u51e0\u4e2a\u516c\u5171\u70b9 \u4f5c\u4e3a\u4e24\u70b9\u95f4\u8fb9\u7684\u6761\u6570\uff0c\u6784\u6210\u7684\u56fe\u3002\u679a\u4e3e\u8fd9\u4e2a\u56fe\u957f\u4ec0\u4e48\u6837\u5b50\uff08\u5176\u5b9e\u4e0d\u5168\u662f\uff09\u3002\n\n\u56fe\u4e0a\u4e00\u6761\u91cd\u8fb9\u610f\u5473\u7740\u5171\u8fb9\u7684\u4e09\u89d2\u5f62\u3002\u4e00\u4e2a\u4e09\u5143\u73af / \u56db\u5143\u73af\u610f\u5473\u7740\u56fe\u957f\u6210\u4e2d\u95f4\u4e00\u4e2a\u4e09\u89d2\u5f62 / \u56db\u8fb9\u5f62\uff0c\u5916\u9762\u6302\u4e86\u4e00\u4e9b\u4e09\u89d2\u5f62\u3002\n\n\u7279\u5224\u6574\u4e2a\u56fe\u5c31\u662f\u4e2a\u56db\u5143\u73af\u7684\u60c5\u51b5\u3002\u4ee5\u4e0b\u5047\u8bbe\u8981\u4e48\u6ca1\u6709\u73af\u8981\u4e48\u6709\u4e09\u5143\u73af\u3002\n\n\u9996\u5148\u52a0\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u52a0\u5165\u4e0b\u4e00\u4e2a\u4e09\u89d2\u5f62\u6709\u51e0\u79cd\u65b9\u5f0f\u3002\n\n- \u968f\u4fbf\u4e71\u52a0\uff08\u53ea\u6709\uff0c\u4e5f\u53ea\u8981\u4e00\u4e2a\u516c\u5171\u70b9\uff09\u3002\n- \u4e0e\u76ee\u524d\u7684\u70b9\u76f8\u4e92\u8fde\u63a5\u5f62\u6210\u7684\u7ebf\u6bb5\u53ef\u4ee5\u6784\u6210\u516c\u5171\u8fb9\u3002\u5bf9\u4e8e\u6bcf\u6761\u516c\u5171\u8fb9\u81f3\u591a\u6709 $4$ \u79cd\u60c5\u51b5\uff0c\u5206\u522b\u679a\u4e3e\u3002\uff08\u53ef\u4ee5\u5b8c\u7f8e\u5d4c\u5165\u7684\u60c5\u51b5\u4e5f\u5305\u542b\u5728\u5185\uff09\n- \u52a0\u4e00\u4e2a\u4e09\u5143\u73af\u3002\u5b57\u9762\u610f\u601d\uff0c\u679a\u4e3e\u662f\u54ea\u4e09\u4e2a\u4e09\u89d2\u5f62\u3001\u5206\u522b\u7528\u54ea\u6761\u8fb9\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4e0a\u9762\u5df2\u7ecf\u8ba8\u8bba\u5230\u4e86\u6240\u6709\u60c5\u51b5\u3002\u5176\u5b9e\u5f3a\u5236\u5148\u52a0\u4e09\u5143\u73af\uff08\u5e94\u8be5\u662f\u53ea\u7528\u52a0\u4e00\u4e2a\u4e09\u5143\u73af\uff09\u518d\u52a0\u516c\u5171\u8fb9\u5e94\u8be5\u4e5f\u6ca1\u95ee\u9898\u3002\n\n\u6700\u7ec8\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a\u53ea\u5141\u8bb8\u52a0\u73af\uff08\u4e14\u73af\u6709\u987a\u5e8f\u6027\uff0c3->2\uff09\uff0c\u4e0d\u5141\u8bb8\u968f\u4fbf\u4e71\u52a0\uff0c\u4f46\u662f\u5bf9 $15$ \u4e2a\u5b50\u96c6\u90fd\u6c42\u51fa\u53ea\u5141\u8bb8\u52a0\u73af\u7684\u7b54\u6848\u3002\u6700\u540e\u72b6\u538b dp \u5408\u5e76\u3002\n\n\u4e0b\u9762\u8fd9\u4efd\u4ee3\u7801\u5b9e\u73b0\u590d\u6742\u5ea6\u6709\u70b9\u95ee\u9898\uff08\u679a\u4e3e\u4e86\u4e2d\u95f4\u7684\u4e09\u5143\u73af\u4f5c\u4e3a \u6838 \u4e4b\u540e\uff0c\u5e94\u8be5\u5f3a\u5236\u8fd9\u4e09\u6761\u8fb9\u5206\u522b\u5c5e\u4e8e\u4e09\u4e2a\u4e09\u89d2\u5f62\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u624d\u6b63\u786e\uff0c\u5426\u5219\u4f1a\u968f\u4fbf\u914d\uff0c\u5bfc\u81f4\u7b97\u5230\u5f88\u591a\u4e0d\u5408\u6cd5\u7684\u4e0d\u4f18\u79c0\u60c5\u51b5\uff09\uff0c\u4f46\u662f\u83ab\u540d\u5176\u5999\u8fc7\u4e86\uff0c\u61d2\u5f97\u6539\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst db eps=1e-8;\nstruct point{db x,y;void in(){cin>>x>>y;}}a[12];\ndb Dot(point x,point y){return x.x*y.x+x.y*y.y;}\ndb Cross(point x,point y){return x.x*y.y-x.y*y.x;}\ndb Dis(point x,point y){return sqrt((x.x-y.x)*(x.x-y.x)+(x.y-y.y)*(x.y-y.y));}\npoint operator +(point x,point y){return {x.x+y.x,x.y+y.y};}\npoint operator -(point x,point y){return {x.x-y.x,x.y-y.y};}\npoint operator *(db x,point y){return {x*y.x,x*y.y};}\npoint operator *(point y,db x){return {x*y.x,x*y.y};}\n//\u9006\u65f6\u9488\u65cb\u8f6c \npoint Rotate(point x,db y){return {x.x*cos(y)-x.y*sin(y),x.y*cos(y)+x.x*sin(y)};}\nstruct triangle{db l[3];db &operator [](const int k){return l[k];}}t[4];\nint f[20],ff[20],m;\nvector<point> Findp(point x,point y,db r1,db r2){\n\tdb dis=Dis(x,y),len[5]={dis,r1,r2};\n\tvector<point> ret;\n\tif(fabs(dis-r1-r2)<eps){\n\t\tret.push_back(x+(y-x)*(r1/dis));\n\t\tret.push_back(x+(y-x)*(r2/dis));\n\t\treturn ret;\n\t}\n\tif(r1<r2)swap(r1,r2);\n\tif(fabs(r1-dis-r2)<eps){\n\t\tret.push_back(x+(x-y)*(r2/dis));\n\t\tret.push_back(y+(y-x)*(r2/dis));\n\t\treturn ret;\n\t}\n\tdb ang=acos((dis*dis+r1*r1-r2*r2)/(2*dis*r1));\n\tpoint t=Rotate(y-x,ang);\n\tret.push_back(x+t*(r1/dis));\n\tt=Rotate(y-x,-ang);\n\tret.push_back(x+t*(r1/dis));\n\tif(fabs(r1-r2)>eps){\n\t\tt=Rotate(x-y,ang);\n\t\tret.push_back(y+t*(r1/dis));\n\t\tt=Rotate(x-y,-ang);\n\t\tret.push_back(y+t*(r1/dis));\n\t}\n\treturn ret;\n}\nvoid Add(point o){\n\tfor(int i=1;i<=m;i++)if(fabs(o.x-a[i].x)<eps&&fabs(o.y-a[i].y)<eps)return ;\n\ta[++m]=o;\n}\nvoid dfs(int cur,int to){\n\tif(m>=ff[to])return ;\n\tif(cur==to)return ff[to]=min(ff[to],m),void();\n\tfor(int i=0;i<4;i++){\n\t\tif((cur&(1<<i))||!(to&(1<<i)))continue;\n\t\tfor(int j=0;j<3;j++){\n\t\t\tfor(int k=1;k<=m;k++){\n\t\t\t\tfor(int l=k+1;l<=m;l++){\n\t\t\t\t\tif(fabs(Dis(a[k],a[l])-t[i][j])>eps)continue;\n\t\t\t\t\tint tm=m,p,q;\n\t\t\t\t\tif(j==0)p=1,q=2;\n\t\t\t\t\telse if(j==1)p=0,q=2;\n\t\t\t\t\telse p=0,q=1;\n\t\t\t\t\tauto vec=Findp(a[k],a[l],t[i][p],t[i][q]);\n\t\t\t\t\tfor(auto o:vec)Add(o),dfs(cur|(1<<i),to),m=tm;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid Solve(int S){\n\tfor(int i=0;i<4;i++){\n\t\tif(!(S&(1<<i)))continue;\n\t\tfor(int j=i+1;j<4;j++){\n\t\t\tif(!(S&(1<<j)))continue;\n\t\t\tfor(int k=j+1;k<4;k++){\n\t\t\t\tif(!(S&(1<<k)))continue;\n\t\t\t\tfor(int p=0;p<3;p++){\n\t\t\t\t\tfor(int q=0;q<3;q++){\n\t\t\t\t\t\tfor(int r=0;r<3;r++){\n\t\t\t\t\t\t\tdb len[5]={t[i][p],t[j][q],t[k][r]};\n\t\t\t\t\t\t\tsort(len,len+3);\n\t\t\t\t\t\t\tif(len[0]+len[1]+eps<len[2])continue;\n\t\t\t\t\t\t\tm=0,a[++m]={0,0},a[++m]={0,len[0]};\n\t\t\t\t\t\t\tauto vec=Findp(a[1],a[2],len[1],len[2]);\n\t\t\t\t\t\t\ta[++m]=vec[0],dfs(0,S);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tm=0,a[++m]={0,0},a[++m]={0,t[i][0]};\n\t\tauto vec=Findp(a[1],a[2],t[i][1],t[i][2]);\n\t\ta[++m]=vec[0],dfs(1<<i,S);\n\t}\n}\nint main(){\n\tmemset(f,0x3f,sizeof(f)),memset(ff,0x3f,sizeof(ff)),f[0]=0;\n\tfor(int i=0;i<4;i++){\n\t\tpoint x,y,z;\n\t\tx.in(),y.in(),z.in();\n\t\tt[i][0]=Dis(x,y),t[i][1]=Dis(x,z),t[i][2]=Dis(y,z);\n\t}\n\tfor(int i=1;i<16;i++)Solve(i);\n\tfor(int i=1;i<16;i++)for(int j=i;j;j=(j-1)&i)f[i]=min(f[i],f[i-j]+ff[j]-(bool)(i-j));\n\tint u=9;\n\tfor(int i=0;i<3;i++){\n\t\tfor(int j=0;j<3;j++){\n\t\t\tfor(int k=0;k<3;k++){\n\t\t\t\tfor(int l=0;l<3;l++){\n\t\t\t\t\tdb len[5]={t[0][i],t[1][j],t[2][k],t[3][l]};\n\t\t\t\t\tsort(len,len+4);\n\t\t\t\t\tif(len[0]+len[1]+len[2]+eps>len[3])u=8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<min(f[15],u);\n}\n```\n\n",
        "postTime": 1650508009,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "CF68E Contact"
    }
]