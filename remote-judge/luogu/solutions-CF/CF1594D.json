[
    {
        "content": "\u9996\u5148\u6bcf\u4e2a\u4eba\u8981\u4e48\u662f\u8001\u5b9e\u4eba\u8981\u4e48\u662f\u9a97\u5b50\u3002\n\n\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u6761\u4fe1\u606f\u53ef\u4ee5\u544a\u8bc9\u6211\u4eec\u4ec0\u4e48\uff1a\n\n- \u5047\u8bbe $A$ \u8bf4 $B$ \u662f\u8001\u5b9e\u4eba\uff0c\u90a3\u4e48\uff1a\n  - \u5982\u679c $A$ \u662f\u8001\u5b9e\u4eba\uff0c\u5219 $B$ \u4e5f\u662f\u8001\u5b9e\u4eba\u3002\n  - \u5982\u679c $A$ \u662f\u9a97\u5b50\uff0c\u7531\u4e8e $B$ \u4e0d\u662f\u8001\u5b9e\u4eba\uff0c\u6240\u4ee5 $B$ \u5fc5\u7136\u4e3a\u9a97\u5b50\u3002\n- \u5982\u679c $A$ \u8bf4 $B$ \u662f\u9a97\u5b50\uff1a\n  - $A$ \u8bf4\u5b9e\u8bdd\uff0c$B$ \u662f\u9a97\u5b50\u3002\n  - $A$ \u8bf4\u8c0e\uff0c$B$ \u662f\u8001\u5b9e\u4eba\u3002\n\n\u540c\u6837\u7684\uff0c\u5982\u679c $A$ \u8bf4 $B$ \u662f\u8001\u5b9e\u4eba\uff0c\u800c $B$ \u786e\u5b9e\u662f\u8001\u5b9e\u4eba\uff0c\u5219 $A$ \u8bf4\u7684\u662f\u5b9e\u8bdd\uff0c\u4e5f\u662f\u8001\u5b9e\u4eba\u3002\n\n\u5176\u4f59\u540c\u7406\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u4eba $A$ \u7684\u8eab\u4efd\u88ab\u786e\u5b9a\u4e86\uff0c\u5176\u4f59\u6240\u6709\u548c\u4ed6\u6709\u5173\u7cfb\u7684\u4eba\u7684\u8eab\u4efd\u5c31\u90fd\u786e\u5b9a\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\u4ee4 $i \\in [1,n]$ \u8868\u793a $i$ \u662f\u8001\u5b9e\u4eba\uff0c$i \\in [n + 1, 2n]$ \u8868\u793a $i$ \u662f\u9a97\u5b50\u3002\n\n\u505a\u7edf\u8ba1\u7684\u65f6\u5019\u8003\u8651\u6bcf\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\u662f\u8001\u5b9e\u4eba/\u9a97\u5b50\u7684\u60c5\u51b5\u4e0b\uff0c\u54ea\u79cd\u8001\u5b9e\u4eba\u6570\u91cf\u66f4\u591a\uff0c\u7d2f\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N = 2e5 + 5;\nchar s[N];\nint T, n, m;\nint fa[N << 1], siz[N << 1];\nint find(int x) { \n    if (x == fa[x]) return x;\n    fa[x] = find(fa[x]);\n    siz[fa[x]] += siz[x];\n    siz[x] = 0;\n    return fa[x];\n}\nvoid merge(int x, int y) {\n    int fx = find(x), fy = find(y);\n    if (fx == fy) return ;\n    siz[fx] += siz[fy]; siz[fy] = 0;\n    fa[fy] = fx;\n}\nint main(void) {\n    for (scanf(\"%d\", &T); T; T--) {\n        scanf(\"%d%d\", &n, &m);\n        for (int i = 1; i <= n << 1; i++) fa[i] = i, siz[i] = i <= n;\n        for (int i = 1, x, y; i <= m; i++) {\n            scanf(\"%d%d%s\", &x, &y, s);\n            if (s[0] == 'c') merge(x, y), merge(x + n, y + n);\n            else merge(x, y + n), merge(y, x + n);\n        }\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            if (find(i) == find(i + n)) {ans = -1; break;} // \u4e00\u4e2a\u4eba\u65e2\u8bda\u5b9e\u53c8\u8bf4\u8c0e\uff0c\u51fa\u73b0\u77db\u76fe\n            ans += max(siz[find(i)], siz[find(i + n)]);\n            siz[find(i)] = siz[find(i + n)] = 0; // \u7edf\u8ba1\u8fc7\u7684\u5730\u65b9\u8bb0\u5f97\u6e05\u7a7a\n        }\n        printf(\"%d\\n\", ans);\n    }\n}\n```\n\n",
        "postTime": 1633788212,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "CF1594D \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\r\n\r\n\u6709 $n$ \u4e2a\u73a9\u5bb6\u548c $m$ \u53e5\u8bdd\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u53ef\u80fd\u662f\u8239\u5458\u6216\u5185\u9b3c\uff0c\u6bcf\u53e5\u8bdd\u7684\u5f62\u5f0f\u4e3a\u201c\u73a9\u5bb6 $i$ \u8bf4\u73a9\u5bb6 $j$ \u662f\u8239\u5458/\u5185\u9b3c\u201d\uff0c\u6c42\u6700\u591a\u53ef\u80fd\u6709\u591a\u5c11\u4e2a\u5185\u9b3c\u3002\uff08\u5982\u679c\u81ea\u76f8\u77db\u76fe\uff0c\u8f93\u51fa $-1$\u3002\uff09\r\n\r\nPS\uff1a\u9898\u76ee\u80cc\u666f\u51fa\u81ea\u56fd\u5916\u7684\u8457\u540d\u6e38\u620f  _Among Us_ \uff0c\u4e2d\u6587\u540d\u4e3a\u300a\u6211\u4eec\u4e4b\u4e2d\u300b\uff0c\u4e5f\u88ab\u53eb\u505a\u300a\u5185\u9b3c\u6740\u300b\u6216\u300a\u592a\u7a7a\u72fc\u4eba\u6740\u300b\u3002\u6e38\u620f\u80cc\u666f\u8bbe\u7f6e\u4e8e\u592a\u7a7a\uff0c\u73a9\u5bb6\u5c06\u626e\u6f14\u8239\u5458\uff08\u82f1\u8bed\uff1aCrewmate\uff09\u6216\u5185\u9b3c\uff08\u82f1\u8bed\uff1aImpostor\uff09\u4e4b\u4e00\u3002\u8239\u5458\u7684\u76ee\u6807\u662f\u627e\u51fa\u4f2a\u88c5\u8005\u5e76\u5b8c\u6210\u4efb\u52a1\uff0c\u800c\u4f2a\u88c5\u8005\u7684\u76ee\u6807\u662f\u6740\u6b7b\u6240\u6709\u8239\u5458\u800c\u4e0d\u88ab\u53d1\u73b0\u3002\r\n\r\n## \u601d\u8def\r\n\r\n\u8fd9\u79cd\u9898\u76ee\u5f88\u5bb9\u6613\u8ba9\u4eba\u8054\u60f3\u5230\u5e76\u67e5\u96c6\u3002\u5c31\u50cf [NOI2001 \u98df\u7269\u94fe](https://www.luogu.com.cn/problem/P2024) \u4e00\u6837\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u201c\u6269\u5c55\u57df\u201d\u5e76\u67e5\u96c6\u6765\u89e3\u51b3\u3002\r\n\r\n\u7528 $x$ \u8868\u793a\u73a9\u5bb6 $x$ \u662f\u8239\u5458\uff0c$x + n$ \u8868\u793a\u8239\u5458 $x$ \u662f\u5185\u9b3c\u3002\r\n\r\n\u5bf9\u4e8e\u4e00\u53e5\u8bdd\uff0c\u5982\u679c\u662f\u201c\u73a9\u5bb6 $x$ \u8bf4\u73a9\u5bb6 $y$ \u662f\u8239\u5458\u201d\uff0c\u5c31\u610f\u5473\u7740\uff1a\r\n\r\n- \u5982\u679c\u8fd9\u53e5\u8bdd\u4e3a\u771f\uff0c\u90a3\u4e48\u73a9\u5bb6 $x$ \u548c\u73a9\u5bb6 $y$ \u90fd\u662f\u8239\u5458\u3002\r\n\r\n- \u5982\u679c\u8fd9\u53e5\u8bdd\u4e3a\u5047\uff0c\u90a3\u4e48\u73a9\u5bb6 $x$ \u548c\u73a9\u5bb6 $y$ \u90fd\u662f\u5185\u9b3c\u3002\r\n\r\n\u540c\u7406\uff0c\u5982\u679c\u662f\u201c\u73a9\u5bb6 $x$ \u8bf4\u73a9\u5bb6 $y$ \u662f\u5185\u9b3c\u201d\uff0c\u5c31\u610f\u5473\u7740\uff1a\r\n\r\n- \u5982\u679c\u8fd9\u53e5\u8bdd\u4e3a\u771f\uff0c\u90a3\u4e48\u73a9\u5bb6 $x$ \u662f\u8239\u5458\uff0c\u73a9\u5bb6 $y$ \u662f\u5185\u9b3c\u3002\r\n\r\n- \u5982\u679c\u8fd9\u53e5\u8bdd\u4e3a\u5047\uff0c\u90a3\u4e48\u73a9\u5bb6 $x$ \u662f\u5185\u9b3c\uff0c\u73a9\u5bb6 $y$ \u662f\u8239\u5458\u3002\r\n\r\n\u6309\u7167\u8fd9\u4e2a\u89c4\u5219\u5408\u5e76\u5e76\u67e5\u96c6\uff0c\u7136\u540e\u68c0\u67e5\u5982\u679c\u5b58\u5728 $find(x) = find(x + n)$\uff0c\u8bf4\u660e\u65e0\u89e3\uff0c\u8f93\u51fa `-1`\u3002\r\n\r\n\u5426\u5219\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $i$\uff0c\u8003\u8651\u5206\u522b\u5305\u542b $i$ \u548c $i + n$ \u7684\u4e24\u4e2a\u96c6\u5408\uff0c\u54ea\u4e2a\u96c6\u5408\u5305\u542b\u7684\u5185\u9b3c\u591a\u5c31\u9009\u53d6\u54ea\u4e2a\u96c6\u5408\uff0c\u5e76\u7d2f\u52a0\u7b54\u6848\u3002\r\n\r\n## \u4ee3\u7801\r\n\r\n```cpp\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\nusing namespace std;\r\n\r\nconst int MAXN = 200000 + 5;\r\n\r\nint f[MAXN * 2], vis[MAXN * 2], cnt[MAXN * 2];\r\nint n, m, p;\r\n\r\nint find(int k) {\r\n    return k == f[k] ? k : f[k] = find(f[k]);\r\n}\r\n\r\nint main() {\r\n    int T;\r\n\r\n    cin >> T;\r\n    while(T--) {\r\n        char s[20];\r\n\r\n        memset(vis, 0, sizeof(vis));\r\n        memset(cnt, 0, sizeof(cnt));\r\n        memset(f, 0, sizeof(f));\r\n        cin >> n >> m;\r\n        for(int i = 1; i <= n * 2; i++) {\r\n            f[i] = i;\r\n        }\r\n        for(int i = 1; i <= m; i++) {\r\n            int x, y;\r\n\r\n            cin >> x >> y >> s;\r\n            if(s[0] == 'c') {\r\n                f[find(x)] = f[find(y)];\r\n                f[find(x + n)] = find(y + n);\r\n            } else {\r\n                f[find(x)] = find(y + n);\r\n                f[find(x + n)] = find(y);\r\n            }\r\n        }\r\n        bool flag = true;\r\n        for(int i = 1; i <= n; i++) {\r\n            if(find(i) == find(i + n)) {\r\n                flag = false; // \u65e0\u89e3\r\n            }\r\n        }\r\n        if(!flag) {\r\n            cout << -1 << endl;\r\n            continue;\r\n        }\r\n        p = 0;\r\n        for(int i = 1; i <= n * 2; i++) {\r\n            if(i > n) {\r\n                cnt[find(i)]++; //\u7edf\u8ba1\u6bcf\u4e2a\u96c6\u5408\u7684\u5185\u9b3c\u603b\u6570\r\n            }\r\n        }\r\n        int ans = 0;\r\n        for(int i = 1; i <= n; i++) {\r\n            if(vis[find(i)] || vis[find(i + n)]) {\r\n                continue; //\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u8bbf\u95ee\u8fc7\uff0c\u5c31\u4e0d\u518d\u8bbf\u95ee\r\n            }\r\n            ans += max(cnt[find(i)], cnt[find(i + n)]); //\u9009\u53d6\u5185\u9b3c\u8f83\u591a\u7684\u96c6\u5408\uff0c\u52a0\u4e0a\u5176\u5185\u9b3c\u603b\u6570\r\n            vis[find(i)] = true;\r\n            vis[find(i + n)] = true; //\u6807\u8bb0\u8bbf\u95ee\r\n        }\r\n        cout << ans << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n```",
        "postTime": 1633787747,
        "uid": 132435,
        "name": "\u667a\u5b50",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1594D The Number of Imposters"
    },
    {
        "content": "# \u9898\u610f #\n\u5728\u6e38\u620f Among them \u4e2d\uff0c\u6709 $n$ \u4e2a\u4eba\uff0c\u5176\u4e2d\u6bcf\u4e2a\u4eba\u53ef\u80fd\u662f\u597d\u4eba\u6216\u6740\u624b\u3002  \n\n\u597d\u4eba\u6c38\u8fdc\u8bf4\u771f\u8bdd\uff0c\u6740\u624b\u6c38\u8fdc\u8bf4\u5047\u8bdd\u3002  \n\n\u7ed9\u51fa $m$ \u6761\u5bf9\u8bdd\uff0c\u5373 $i$ \u8bf4 $j$ \u662f\u597d\u4eba/\u6740\u624b\u3002  \n\n\u6839\u636e\u8fd9\u4e9b\u5bf9\u8bdd\uff0c\u5224\u65ad\u8fd9 $n$ \u4e2a\u4eba\u4e2d\u6700\u591a\u6709\u591a\u5c11\u6740\u624b\uff0c\u82e5\u5bf9\u8bdd\u81ea\u76f8\u77db\u76fe\u5219\u8f93\u51fa $-1$\u3002\n# solution # \n\u6211\u4eec\u60f3\u60f3\u6bcf\u6761\u5bf9\u8bdd\u4ee3\u8868\u4ec0\u4e48\uff1a  \n\n- \u5982\u679c\u4e00\u4e2a\u4eba\u8bf4\u53e6\u4e00\u4e2a\u4eba\u662f\u6740\u624b\uff0c\u5219\u4ed6\u4eec\u5c5e\u4e8e\u4e0d\u540c\u9635\u8425\uff08\u4e92\u8e29\uff09\u3002  \n\n- \u5982\u679c\u4e00\u4e2a\u4eba\u8bf4\u53e6\u4e00\u4e2a\u4eba\u662f\u597d\u4eba\uff0c\u5219\u4ed6\u4eec\u5c5e\u4e8e\u76f8\u540c\u9635\u8425\uff08\u53d1\u91d1\u6c34\uff09\u3002  \n\n\u800c\u5f88\u660e\u663e\u8fd9\u4e9b\u5173\u7cfb\u662f\u53ef\u4ee5\u4f20\u9012\u7684\uff0c\u800c\u6bcf\u4e2a\u4eba\u4e4b\u95f4\u7684\u5173\u7cfb\u53c8\u6709\u591a\u79cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u3002  \n\n\u7528\u4e24\u4e2a\u70b9\u8868\u793a\u7b2c $i$ \u4e2a\u4eba\uff0c\u5176\u4e2d\u7b2c $i$ \u53f7\u70b9\u8868\u793a\u4e0e\u4ed6\u8eab\u4efd\u76f8\u540c\u7684\u4eba\u7684\u96c6\u5408\uff08\u6b63\u96c6\uff09\uff0c\u7b2c $i+n$ \u53f7\u70b9\u8868\u793a\u4e0e\u4ed6\u8eab\u4efd\u4e0d\u540c\u7684\u4eba\u7684\u96c6\u5408\uff08\u53cd\u96c6\uff09\u3002  \n\n\u5bf9\u6bcf\u4e00\u6761\u5bf9\u8bdd\uff0c\u82e5\u8bf4\u522b\u4eba\u4e3a\u597d\u4eba\uff0c\u5408\u5e76\u4ed6\u4eec\u7684\u6b63\u53cd\u96c6\u4e0e\u5bf9\u65b9\u7684\u5408\u5e76\uff0c\u5426\u5219\u628a\u4ed6\u4eec\u7684\u6b63\u96c6\u4e0e\u5bf9\u65b9\u7684\u53cd\u96c6\u5408\u5e76\uff0c\u6700\u540e\u5224\u65ad\u5bf9\u7acb\u7684\u4e24\u4e2a\u96c6\u5408\u5927\u5c0f\uff0c\u53d6\u8f83\u5927\u503c\u6c42\u548c\u5373\u53ef\u3002  \n\n\u4ee3\u7801\uff1a \n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define ld long double\nusing namespace std;\nconst int N=2e5+10,M=5e5+10;\nint fa[N*2],siz[N*2],n,m,a[M],x[M],y[M],b[M];\nint get(int x){return x==fa[x]?x:fa[x]=get(fa[x]);}\nvoid merge(int x,int y)\n{\n\tif(x==y)return;\n\tfa[x]=y,siz[y]+=siz[x];\n}\n//\u6269\u5c55\u57df\u5e76\u67e5\u96c6 \nint solve(int ans=0)\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)fa[i]=i,siz[i]=1,b[i]=0;\n\tfor(int i=n+1;i<=2*n;i++)fa[i]=i,siz[i]=0,b[i]=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring s;\n\t\tcin>>x[i]>>y[i]>>s;\n\t\tif(s[0]=='i')a[i]=1;\n\t\telse a[i]=0;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x1=get(x[i]),y1=get(y[i]),x2=get(x[i]+n),y2=get(y[i]+n);\n\t\tif(a[i]==1)\n\t\t{\n\t\t\tif(x1==y1||x2==y2)return -1;\n\t\t\tmerge(y2,x1),merge(x2,y1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(x1==y2||x2==y1)return -1;\n\t\t\tmerge(x1,y1),merge(x2,y2);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x1=get(i),x2=get(i+n);\n\t\tif(!b[x1]&&!b[x2])ans+=max(siz[x1],siz[x2]),b[x1]=b[x2]=1;\n\t}\n\treturn ans;\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tint t;\n\tcin>>t;\n\twhile(t--)cout<<solve()<<endl;\n}\n\n```\n",
        "postTime": 1633923707,
        "uid": 320950,
        "name": "leexzq",
        "ccfLevel": 7,
        "title": "CF1594D The Number of Imposters \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u9010\u6e10\u96be\u8d77\u6765\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u4e00\u4e2a\u6027\u8d28\u3002\n\n\u5c31\u662f\u5982\u679c $i$ \u8bf4 $j$ \u662f imposter\uff0c\u90a3\u4e48 $i,j$ \u4e00\u5b9a\u662f\u4e00\u4e2a imposter\uff0c\u4e00\u4e2a crewmate\u3002\u5982\u679c $i$ \u8bf4 $j$ \u662f crewmate\uff0c\u90a3\u4e48 $i,j$ \u4e00\u5b9a\u662f\u540c\u4e00\u4e2a\u4e1c\u897f\u3002\u8003\u8651\u8fd9\u4e1c\u897f\u548c\u5f02\u6216\u53ef\u4ee5\u4ea7\u751f\u8054\u7cfb\u3002\n\n\u8003\u8651\u5efa\u4e00\u4e2a\u65e0\u5411\u56fe\u3002\u5bf9\u4e8e\u6bcf\u7ec4 $i,j$\uff0c\u5982\u679c $i$ \u8bf4 $j$ \u662f imposter\uff0c\u90a3\u4e48\u8fb9\u6743\u4e3a $1$ \u5426\u5219\u8fb9\u6743\u4e3a $0$\u3002\n\n\u8dd1\u8054\u901a\u5757\u3002\u8bbe\u8fd9\u4e2a\u5757\u4e2d\u7684\u4e00\u4e2a\u70b9\u4e3a imposter\uff0c\u7136\u540e\u7684\u8bdd\u8dd1\u8054\u901a\u5757\u3002\u7136\u540e\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u662f\u4ed6\u7684\u4e4b\u524d\u7684\u70b9\u5f02\u6216\u8fd9\u4e2a\u8fb9\u6743\u3002\u7136\u540e\u77db\u76fe\u60c5\u51b5\u662f\u4e24\u6b21\u7ecf\u8fc7\u540c\u4e00\u4e2a\u70b9\u65f6\uff0c\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\u51fa\u73b0\u4e0d\u540c\u3002\n\n\u7edf\u8ba1\u7b54\u6848\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8054\u901a\u5757\u76f4\u63a5 dfs \u904d\u5386\uff0c\u7136\u540e\u904d\u5386\u5230\u7684\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\u5f02\u6216\u8fb9\u6743\u5373\u53ef\u83b7\u5f97\u4e0b\u4e00\u4f4d\u7684\u6743\u503c\u3002\n\n\u653e\u4e2a\u4ee3\u7801\uff1a\n```cpp\n#include<stdio.h>\n#include<string>\n#include<iostream>\n\nusing std::string;\nusing std::cin;\n\nint t;\nint n,m;\nint head[200010],tot,w[1000010],nxt[1000010],ver[1000010];\nint a[200010];\nbool vis[200010];\nint ansx,ansy;\nint ans;\nbool no;\n\nvoid add(int x,int y,int z){\n\tnxt[++tot]=head[x];\n\tver[tot]=y;\n\tw[tot]=z;\n\thead[x]=tot;\n}\n\nint max(int a,int b){ return a>b?a:b; }\n\nvoid dfs(int x){\n\tif(a[x]==0) ansx++;\n\telse ansy++;\n\tvis[x]=1;\n\tfor(int i=head[x];~i;i=nxt[i]){\n\t\tint y=ver[i],z=w[i];\n\t\tif(vis[y]==1){\n\t\t\tif((a[x]^z)!=a[y]){\n\t\t\t\tno=1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse a[y]=a[x]^z,dfs(ver[i]);\n\t}\n\treturn;\n}\n\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tans=0;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++) head[i]=-1;\n\t\tfor(int i=1;i<=n;i++) vis[i]=0;\n\t\ttot=0;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint x,y;\n\t\t\tstring s;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tcin>>s;\n\t\t\tif(s==\"imposter\"){\n\t\t\t\tadd(x,y,1);\n\t\t\t\tadd(y,x,1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tadd(x,y,0);\n\t\t\t\tadd(y,x,0);\n\t\t\t}\n\t\t}\n\t\tbool flag=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(!vis[i]){\n\t\t\t\ta[i]=1;\n\t\t\t\tansx=ansy=no=0;\n\t\t\t\tvis[i]=1;\n\t\t\t\tdfs(i);\n\t\t\t\tif(no==1){\n\t\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse ans+=max(ansx,ansy);\n\t\t\t}\n\t\t}\n\t\tif(!flag) printf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1633769403,
        "uid": 424052,
        "name": "reailikezhu",
        "ccfLevel": 4,
        "title": "CF1594D\u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u5982\u4f55\u8fde\u8fb9\uff1a\n\n- \u82e5 $x$ \u67e5\u8bc1 $y$ \u662f `imposter`\uff0c\u8bf4\u660e $x$ \u548c $y$ \u8eab\u4efd**\u4e00\u5b9a\u4e0d\u76f8\u540c**\uff0c\u8fde\u65e0\u5411\u6709\u6743\u8fb9 $(x,y,1)$\n\n- \u82e5 $x$ \u67e5\u8bc1 $y$ \u662f `crewmate`\uff0c\u8bf4\u660e $x$ \u548c $y$ \u8eab\u4efd**\u4e00\u5b9a\u76f8\u540c**\uff0c\u8fde\u65e0\u5411\u6709\u6743\u8fb9 $(x,y,0)$\n\n\u82e5\u8fd9\u4e2a\u56fe\u5b58\u5728\u8fb9\u6743\u5f02\u6216\u548c\u4e3a $1$ \u7684\u5947\u73af\uff0c\u5219\u65e0\u89e3\u3002\n\n\u5426\u5219\uff0c\u6b64\u56fe\u4fdd\u7559\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u540e\u4e00\u5b9a\u662f\u4e8c\u5206\u56fe\uff0c\u7b54\u6848\u5c31\u662f\u53d6\u6bcf\u4e2a\u8054\u901a\u5757\u6700\u5927\u7684\u4e00\u90e8\u5206\u5e76\u76f8\u52a0\u5373\u53ef\u3002\n\n\u4f7f\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u590d\u6742\u5ea6\u5373\u4e3a $O(m\\alpha(n))$\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/1594/submission/131252622)",
        "postTime": 1633739672,
        "uid": 383079,
        "name": "Acc_Robin",
        "ccfLevel": 6,
        "title": "CF1594D The Number of Imposters \u9898\u89e3"
    },
    {
        "content": "# CF1594D \u9898\u89e3\n\n\u4e00\u9053\u6734\u7d20\u7684dfs\u9898\u3002\n\n\u6ce8\u610f\u5230\u867d\u7136\u9898\u4e2d\u7ed9\u7684\u662f\u5355\u5411\u8fb9\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u6cbf\u7740\u4e00\u6761\u5355\u5411\u8fb9\u53cd\u7740\u8ba1\u7b97\u3002\n\n\u4f8b\u5982\uff0c\u82e5\u6709\u4e00\u6761\u5355\u5411\u8fb9 $(u,v,w)$ \uff0c\u6211\u4eec\u5982\u679c\u77e5\u9053\u4e86 $v$ \u7684\u8eab\u4efd\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u8eab\u4efd\u4e0e\u8fb9\u6743 $w$ \u662f\u5426\u76f8\u540c\uff0c\u6765\u63a8\u65ad\u51fa $u$ \u7684\u8eab\u4efd\u662f\u771f\u8fd8\u662f\u5047\uff0c\u6545\u53ef\u4ee5\u5c06\u5355\u5411\u8fb9\u8f6c\u5316\u6210\u53cc\u5411\u3002\n\n\u90a3\u4e48\uff0c\u5c06\u4e0a\u8ff0\u5355\u5411\u8fb9\u6362\u6210\u53cc\u5411\u8fb9\u540e\uff0c\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u6211\u4eec\u786e\u5b9a\u4e86\u4e00\u4e2a\u4eba\u7684\u8eab\u4efd\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fde\u901a\u5757\u4e2d\u6240\u6709\u4eba\u7684\u8eab\u4efd\uff0c\u4ece\u800c\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u53ef\u4ee5\u5305\u542b\u7684\u5047\u4eba\u6700\u591a\u6709\u591a\u5c11\u3002\u800c\u4e0d\u540c\u7684\u8fde\u901a\u5757\u95f4\u4e0d\u4f1a\u4ea7\u751f\u76f8\u4e92\u5f71\u54cd\uff0c\u6240\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u6700\u591a\u5047\u4eba\u6570\u52a0\u5728\u4e00\u8d77\uff0c\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n\n\u90a3\u6211\u4eec\u53ea\u9700\u8981\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\uff0c\u518d\u5bf9\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u5206\u522bdfs\u67d3\u8272\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u641c\u7d22\u4e00\u6b21\uff0c\u6240\u4ee5dfs\u7684\u590d\u6742\u5ea6\u662f $O(N+M)$ \u7684\uff0c\u800c\u5e76\u67e5\u96c6\u7684\u590d\u6742\u5ea6\u662f $O(N \\alpha(N))$ \u7684\uff0c\u6545\u82e5 $N,M$ \u540c\u7ea7\uff0c\u5219\u603b\u590d\u6742\u5ea6\u662f $O(N \\alpha(N))$\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u7ed9\u51fa\u5355\u7ec4\u6570\u636e\u7684\u4ee3\u7801\uff1a\n\n```\nconst int N(2e6+10);\nstruct Edge {int to, dis, nxt, op;};\n\nint ok;\nint cnt;\nint siz;\nint n, m;\nint fa[N];\nEdge e[N];\nint vis[N];\nint head[N];\n\ninline void add(int u, int v, int w, int op) {\n\te[++cnt] = (Edge) {v, w, head[u], op}, head[u] = cnt;\n}\n\ninline int dfs(int u, int col) {\n\tif (ok == 1) return 0;\n\tint res = 0;\n\tif (vis[u] != -1) {\n\t\tif (vis[u] ^ col) ok = 1;\n\t\treturn 0;\n\t}\n\tvis[u] = col, siz++;\n\tif (col == 1) res++;\n\tedg (i, v, u) {\n\t\tint ncol = col ? 1 - e[i].dis : e[i].dis;\n\t\tif (e[i].op) ncol = (col ^ e[i].dis) ? 1 : 0;\n\t\tres += dfs(v, ncol);\n\t}\n\treturn res;\n}\n\nchar tmp[55];\n\ninline int f_set(int x) {\n\tif(x == fa[x]) return x;\n\treturn fa[x] = f_set(fa[x]);\n}\n\ninline void work() {\n\tn = read(), m=read(), ok = cnt = 0;\n\trep (i, 1, n)\n\thead[i] = 0, vis[i] = -1, fa[i] = i;\n\trep (i, 1, m)\n\te[i].to = e[i].dis = e[i].nxt = e[i].op = 0;\n\trep (i, 1, m) {\n\t\tint u = read(), v = read(), w;\n\t\tscanf(\"%s\", tmp);\n\t\tif (tmp[0] == 'i') w = 1;\n\t\telse w = 0;\n\t\tadd(u, v, w, 0), add(v, u, w, 1);\n\t\tif(f_set(u) ^ f_set(v)) fa[f_set(u)] = f_set(v);\n\t}\n\tint ans = 0;\n\trep (i, 1, n) {\n\t\tif (fa[i] == i) {\n\t\t\tsiz = 0;\n\t\t\tint ret = dfs(i, 0);\n\t\t\tif (ok) {\n\t\t\t\tputs(\"-1\");\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tckmax(ret, siz - ret);\n\t\t\tans += ret;\n\t\t}\n\t}\n\tcout << ans << endl;\n}\n\n```\n\n",
        "postTime": 1633760968,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "CF1594D \u9898\u89e3"
    },
    {
        "content": "\n## \u9898\u610f  \n\n\u6709 $n$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u53ef\u80fd\u662f\u8bda\u5b9e\u7684\u4eba\u6216\u8005\u8bf4\u8c0e\u7684\u4eba\u3002  \n\u8bda\u5b9e\u7684\u4eba\u6c38\u8fdc\u8bf4\u771f\u8bdd\uff0c\u8bf4\u8c0e\u7684\u4eba\u6c38\u8fdc\u8bf4\u5047\u8bdd\u3002  \n\u6709 $m$ \u4e2a\u6761\u4ef6\uff0c\u5206\u522b\u8868\u793a $i$ \u8bf4 $j$ \u662f\u8bda\u5b9e\u7684\u4eba/\u8bf4\u8c0e\u7684\u4eba\u3002  \n\u4f60\u9700\u8981\u5224\u65ad\u5728\u8fd9\u4e9b\u9650\u5236\u6761\u4ef6\u4e0b\uff0c\u6700\u591a\u6709\u53ef\u80fd\u6709\u51e0\u4e2a\u8bda\u5b9e\u7684\u4eba\uff0c\u6216\u8f93\u51fa `-1` \u58f0\u660e\u4e0d\u53ef\u80fd\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u3002  \n\n## \u9898\u89e3  \n\n\u6211\u4eec\u8bbe\u8bda\u5b9e\u7684\u4eba\u662f $1$\uff0c\u8bf4\u8c0e\u7684\u4eba\u662f $0$\u3002  \n\u90a3\u4e48\uff1a  \n- $1$ \u4f1a\u8bf4 $1$ \u662f $1$\u3002\n- $1$ \u4f1a\u8bf4 $0$ \u662f $0$\u3002\n- $0$ \u4f1a\u8bf4 $1$ \u662f $0$\u3002\n- $0$ \u4f1a\u8bf4 $0$ \u662f $1$\u3002  \n\u6211\u4eec\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u540c\u6216\u3002  \n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u9650\u5236\u76f8\u5f53\u4e8e\u662f\u94a6\u5b9a\u4e86\u4e24\u4e2a\u70b9\u7684\u5f02\u6216\u503c\u3002  \n\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\uff0c\u987a\u4fbf\u7ef4\u62a4\u51fa\u4e0e\u6839\u7684\u5f02\u6216\u503c\u662f $0$ \u8fd8\u662f $1$\u3002  \n\u90a3\u4e48\u5c31\u505a\u5b8c\u4e86\u3002  \n\n\n\n## \u4ee3\u7801\n\n\u6211\u7684\u4ee3\u7801\u53ef\u80fd\u6bd4\u8f83\u9634\u95f4\uff0c`fa[i]/2` \u8868\u793a\u7236\u4eb2\u8282\u70b9\uff0c`fa[i]%2` \u8868\u793a\u4e0e\u7236\u4eb2\u7684\u503c\u7684\u5f02\u6216\u503c\u3002 \n\n```cpp\nint n,m,k,ans,cnt;\nint fa[N];\nint a[N][2];\nchar s[N];\nbool flag=0;\nvoid getfa(int X){if (X*2==fa[X]) return;getfa(fa[X]/2);int u=fa[fa[X]/2],v=fa[X]&1;fa[X]=u^v;return;}\nbool merge(int X,int Y,int t)\n{\n    if (X==Y) return !t;\n    getfa(X);getfa(Y);\n    if (fa[X]/2!=fa[Y]/2) {fa[fa[X]/2]=fa[Y]^t^(fa[X]&1);return 1;}\n    return ((fa[X]&1)^(fa[Y]&1))==t;\n}\nvoid DOIT()\n{\n\trd(n);rd(m);flag=1;\n\tfor (int i=1;i<=n;i++) fa[i]=i*2;\n\twhile (m--)\n\t{\n\t\tint x,y,z,u,v;rd(x);rd(y);scanf(\"%s\",s);\n\t\tif (s[0]=='i') z=1;else z=0;\n\t\tflag&=merge(x,y,z);\n\t}\n\tif (!flag) {puts(\"-1\");return;}\n\tfor (int i=1;i<=n;i++) getfa(i);\n\tfor (int i=1;i<=n;i++) a[i][1]=a[i][0]=0;\n\tfor (int i=1;i<=n;i++) a[fa[i]/2][fa[i]%2]++;\n\tans=0;for (int i=1;i<=n;i++) ans+=max(a[i][0],a[i][1]);\n\tcout<<ans<<endl;\n}\n```",
        "postTime": 1633758301,
        "uid": 167006,
        "name": "WitheredZeal",
        "ccfLevel": 0,
        "title": "CF1594D"
    },
    {
        "content": "$i$ \u8bf4 $j$ \u4e3a\u5047\uff0c\u82e5 $j$ \u4e3a\u5047\u5219 $i$ \u4e3a\u771f\uff0c$j$ \u4e3a\u771f\u5219 $i$ \u4e3a\u5047\uff1b$i$ \u8bf4 $j$ \u4e3a\u771f\uff0c\u82e5 $j$ \u4e3a\u771f\u5219 $i$ \u4e3a\u771f\uff0c$j$ \u4e3a\u5047\u5219 $i$ \u4e3a\u5047\u3002\n\n\u7528\u5f02\u6216\u6765\u63cf\u8ff0\uff0c\u7ed9\u6bcf\u4e2a\u70b9\u8d4b\u4e00\u4e2a $01$ \u6743\u503c\uff0c$0$ \u4ee3\u8868\u5b83\u4e3a\u5047\uff0c$1$ \u4ee3\u8868\u5b83\u4e3a\u771f\u3002\u7136\u540e\u7528\u8fb9\u6743\u63cf\u8ff0\u5176\u4e24\u7aef\u70b9\u70b9\u6743\u7684\u5f02\u6216\u548c\uff0c\u5982\u679c $i$ \u8bf4 $j$ \u4e3a\u5047\u5219\u5728 $i,j$ \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u65e0\u5411\u8fb9\uff0c$i$ \u8bf4 $j$ \u4e3a\u771f\u5219\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u65e0\u5411\u8fb9\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\u7684\u771f/\u5047\u786e\u5b9a\u4e86\u90a3\u4e48\u5176\u4f59\u70b9\u4e5f\u5c31\u968f\u7740\u786e\u5b9a\u4e86\u3002\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\u8fdb\u884c dfs \u4e8c\u67d3\u8272\u5373\u53ef\uff0c\u6ce8\u610f\u5224\u65e0\u89e3\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define pii pair<int,int>\n#define pb push_back\n#define sml(x,y) (x=min(x,y))\n#define big(x,y) (x=max(x,y))\n#define int ll \n#define ll long long\n#define db double\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){int x=0,fh=1; char ch=getchar(); while(!isdigit(ch)){if(ch=='-') fh=-1; ch=getchar();} while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0'; ch=getchar();} return x*fh;}\ninline void out(int *a,int l,int r){fo(i,l,r) printf(\"%lld \",*(a+i));puts(\"\");}\n\nconst int N=1e6+5;\nstruct Edge{\n\tint to,next,val;\n}e[N<<1];\nint head[N],tot,col[N],top,rp;\n\nvoid connect(int x,int y,int val){\n\te[++tot]=(Edge){y,head[x],val};\n\thead[x]=tot;\n}\n\nbool dfs(int x){\n\t++top;if(col[x]) rp++;\n\tfor(int i=head[x];i;i=e[i].next){\n\t\tint p=e[i].to;\n\t\tif(col[p]<0){\n\t\t\tcol[p]=col[x]^e[i].val;\n\t\t\tif(!dfs(p)) return 0;\n\t\t}else if((col[p]^col[x])!=e[i].val) return 0;\n\t}\n\treturn 1;\n}\n\nvoid solve(){\n\tint n=read(),m=read(),ans=0;\n\tfo(i,1,n) head[i]=0,col[i]=-1;tot=0;\n\tfo(i,1,m){\n\t\tint x=read(),y=read();\n\t\tstring s;cin>>s;\n\t\tif(s[0]=='i') connect(x,y,1),connect(y,x,1);\n\t\telse connect(x,y,0),connect(y,x,0);\n\t}\n\tfo(i,1,n) if(col[i]==-1){\n\t\ttop=rp=0;col[i]=0;\n\t\tif(!dfs(i)){\n\t\t\tputs(\"-1\");\n\t\t\treturn;\n\t\t}\n\t\tans+=max(rp,top-rp);\n\t}\n\tcout<<ans<<endl;\n}\n\nsigned main(){\n\tint T=read();\n\twhile(T--) solve();\n\treturn 0;\n}\n/*\n-------------------------------------------------\n*/\n\n```\n",
        "postTime": 1633747842,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1594D The Number of Imposters"
    }
]