[
    {
        "content": "\u8003\u8651\u679a\u4e3e\u5220\u7684\u8fb9\uff0c\u90a3\u4e48\u53ea\u9700\u6c42\u6bcf\u6761\u8fb9\u4e24\u4fa7\u7684\u5b50\u6811\u4e2d\u5220\u53bb\u4e00\u4e2a\u70b9\u7684\u65b9\u6848\u6570\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u70b9\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\u3002\n\n\u5148\u4e0d\u7ba1\u6362\u6839\uff0c\u8003\u8651\u5b50\u6811\u5185\u3002\u8bbe $f(u,0/1,0/1)$ \u8868\u793a $u$ \u5b50\u6811\u5185\uff0c$u$ \u662f\u5426\u5df2\u5339\u914d\uff0c\u9664\u4e86 $u$ \u4e4b\u5916\u8fd8\u6709 $0/1$ \u4e2a\u70b9\u8fd8\u672a\u5339\u914d\u7684\u9009\u70b9\u65b9\u6848\u6570\u3002  \n\u8f6c\u79fb\u65f6\uff0c\u8003\u8651\u5148\u5c06\u6bcf\u4e2a\u513f\u5b50 $v$ \u63a5\u5230 $u$ \u4e0a\uff08\u5373\u5047\u8bbe\u4ec5\u4fdd\u7559 $u$ \u70b9\u548c $v$ \u70b9\u7684\u5b50\u6811\uff09\uff0c\u7136\u540e\u5c06\u5404\u5b50\u6811\u5408\u5e76\u3002\n\n\u5bf9\u4e8e\u5408\u5e76\u7684\u8fc7\u7a0b\u540e\u4e24\u7ef4\u7684\u53d8\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4e58\u6cd5\u8868\uff1a$0 \\otimes 0 = 0$\uff0c$0 \\otimes 1 = 1 \\otimes 0 = 1$\uff0c$1 \\otimes 1$ \u672a\u5b9a\u4e49\u3002  \n\u8fd9\u53ef\u4ee5\u770b\u6210\u4e24\u4e2a\u5143\u7d20\u7684\u5b50\u96c6\u5377\u79ef\uff0c\u6216\u8005\u662f $\\bmod x^2 y^2$ \u7684\u5377\u79ef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u662f**\u4ea4\u6362**\u3001**\u7ed3\u5408**\u7684\u3002  \n\u53ef\u60dc\u4e0d\u4e00\u5b9a\u53ef\u9006\uff0c\u4e0d\u8fc7\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u76f4\u63a5\u6362\u6839\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\n\nconst int N = 5e5;\n\nint n;\nvector<int> e[N + 5];\nint fa[N + 5], siz[N + 5], rk[N + 5];\nvoid dfs(int u) {\n  static int tot = 0;\n  siz[rk[++tot] = u] = 1;\n  for (int v: e[u])\n    if (v != fa[u])\n      fa[v] = u, dfs(v), siz[u] += siz[v];\n}\n\nstruct poly {\n  int a[2][2];\n  poly(int a00 = 0, int a01 = 0, int a10 = 0, int a11 = 0) { a[0][0] = a00, a[0][1] = a01, a[1][0] = a10, a[1][1] = a11; }\n  int *operator[](int x) { return a[x]; }\n  const int *operator[](int x) const { return a[x]; }\n  poly operator*(const poly &o) const {\n    poly ret;\n    for (int i = 0; i < 2; ++i)\n      for (int j = 0; i + j < 2; ++j)\n        for (int k = 0; k < 2; ++k)\n          for (int l = 0; k + l < 2; ++l)\n            ret[i + j][k + l] += a[i][k] * o[j][l];\n    return ret;\n  }\n  poly &operator*=(const poly &o) { return *this = *this * o; }\n} f[N + 5], g[N + 5], tmp[N + 5];\n\nint value(poly a) { return a[0][0] + a[1][1]; }\npoly trans(poly a) { return poly(a[1][0], a[0][0] + a[1][1], a[0][0], a[0][1]); }\n\nll ans;\n\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) f[i] = tmp[i] = poly(1);\n  for (int i = 2; i <= n; ++i) {\n    int u, v;\n    scanf(\"%d%d\", &u, &v);\n    e[u].push_back(v), e[v].push_back(u);\n  }\n  dfs(1);\n  g[1] = poly(0, 0, 1);\n  for (int i = n; i > 1; --i)\n    f[fa[rk[i]]] *= trans(f[rk[i]]),\n    g[rk[i]] = tmp[fa[rk[i]]], tmp[fa[rk[i]]] *= trans(f[rk[i]]);\n  for (int i = 1; i <= n; ++i) tmp[i] = poly(1);\n  for (int i = 2; i <= n; ++i)\n    g[rk[i]] *= trans(g[fa[rk[i]]]) * tmp[fa[rk[i]]], tmp[fa[rk[i]]] *= trans(f[rk[i]]),\n    ans += (ll)value(g[rk[i]]) * value(f[rk[i]]) + (ll)siz[rk[i]] * (n - siz[rk[i]]) * g[rk[i]][1][0] * f[rk[i]][1][0];\n  printf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1667482705,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "CF891D"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/891/problem/D) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF891D)\n\n\u6362\u6839 dp \u597d\u9898\u3002\n\n~~\u4e3a\u5565\u6ca1\u4eba\u505a/yiw~~\n\n\u9996\u5148 $n$ \u4e3a\u5947\u6570\u65f6\u7b54\u6848\u663e\u7136\u4e3a $0$\uff0c\u8bc1\u660e\u663e\u7136\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u7740\u91cd\u63a2\u8ba8 $n$ \u662f\u5076\u6570\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u4e00\u68f5\u6811\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\u7684\u7b49\u4ef7\u8bc1\u660e\uff1a\u6211\u4eec\u8003\u5bdf\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u5220\u6389\u8be5\u6761\u8fb9\u540e\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u90fd\u662f\u5947\u6570\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u5982\u679c\u8d2a\u5fc3\u5730\u5bf9\u4e24\u4e2a\u8fde\u901a\u5757\u8fdb\u884c\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\uff0c\u5982\u679c\u8fd8\u5269\u81f3\u5c11\u4e09\u4e2a\u70b9\u6ca1\u88ab\u5339\u914d\uff0c\u90a3\u4e48\u663e\u7136\u539f\u56fe\u4e0d\u5b58\u5728\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\uff0c\u5426\u5219\u6211\u4eec\u80af\u5b9a\u4f1a\u5269\u4e0b\u8be5\u8fde\u901a\u5757\u7684\u6839\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u8fd9\u6761\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\u3002\u6362\u53e5\u8bdd\uff0c\u5982\u679c\u539f\u56fe\u5b58\u5728\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u8fb9\u5fc5\u7136\u5728\u5b8c\u7f8e\u5339\u914d\u4e2d\u3002\u800c\u53e6\u4e00\u65b9\u9762\uff0c\u5bf9\u4e8e\u6240\u6709\u201c\u5220\u6389\u8fd9\u6761\u8fb9\u540e\uff0c\u5f62\u6210\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u90fd\u662f\u5076\u6570\u201d\u7684\u8fb9\uff0c\u663e\u7136\u5982\u679c\u539f\u56fe\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\u90a3\u4e48\u6211\u4eec\u5bf9\u4e24\u4e2a\u8fde\u901a\u5757\u8d2a\u5fc3\u5730\u4e8c\u5206\u56fe\u5339\u914d\u540e\uff0c\u5fc5\u7136\u662f\u80fd\u5b8c\u5168\u5339\u914d\u5b8c\u7684\uff0c\u56e0\u6b64\u8fd9\u6837\u7684\u8fb9\u4e0d\u53ef\u80fd\u51fa\u73b0\u5728\u5b8c\u7f8e\u5339\u914d\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n> Lemma. \u5982\u679c\u4e00\u5f20\u56fe\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\uff0c\u90a3\u4e48\u5b8c\u7f8e\u5339\u914d\u4e2d\u7684\u8fb9\u96c6\u5fc5\u5b9a\u662f\u6240\u6709\u6ee1\u8db3\u201c\u5272\u6389\u8fd9\u6761\u8fb9\u540e\u5f62\u6210\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u5927\u5c0f\u5747\u4e3a\u5947\u6570\u201d\u7684\u8fb9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u68f5\u6811\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u6ee1\u8db3\u201c\u5272\u6389\u8fd9\u6761\u8fb9\u540e\u5f62\u6210\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u5927\u5c0f\u5747\u4e3a\u5947\u6570\u201d\u5f62\u6210\u4e00\u4e2a\u5339\u914d\u3002\n\n\u8003\u8651\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u5bf9\u539f\u56fe\u7684\u8fb9\u8fdb\u884c\u67d3\u8272\uff0c\u6211\u4eec\u79f0\u4e00\u6761\u8fb9\u4e3a**\u9ed1\u8fb9**\uff0c\u5f53\u4e14\u4ec5\u5f53\u5220\u6389\u8fd9\u6761\u8fb9\u540e\u5f62\u6210\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u5927\u5c0f\u5747\u4e3a\u5947\u6570\u3002\u53cd\u4e4b\u79f0\u5176\u4e3a\u767d\u8fb9\uff0c\u90a3\u4e48\u8003\u8651\u5220\u6389\u4e00\u6761\u8fb9\u5e76\u52a0\u5165\u4e00\u6761\u65b0\u8fb9\u540e\u6bcf\u6761\u8fb9\u7684\u9ed1\u767d\u7c7b\u578b\u7684\u53d8\u5316\u60c5\u51b5\u3002\u6211\u4eec\u5047\u8bbe\u65b0\u52a0\u5165\u7684\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e3a $(u,v)$\uff0c\u90a3\u4e48\u663e\u7136\u4f60\u5220\u9664\u7684\u8fb9\u5728\u539f\u56fe\u4e0a\u5fc5\u987b\u5728 $u\\to v$ \u7684\u8def\u5f84\u4e0a\uff0c\u5426\u5219\u6700\u540e\u5f62\u6210\u4e0d\u4e86\u6811\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5728 $u\\to v$\u200b \u7684\u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u5272\u6389\u5b83\u540e\u663e\u7136**\u4e0d\u5305\u542b $u,v$ \u7684\u8fd9\u4e2a\u8fde\u901a\u5757\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u56e0\u6b64\u5b83\u7684\u53d8\u578b\u4e5f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316**\uff0c\u800c\u5bf9\u4e8e\u5728 $u\\to v$ \u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u6211\u4eec\u5047\u8bbe $u\u2019,v\u2019$ \u4e3a\u5272\u6389\u7684\u8fb9\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u6761\u8fb9\u5728 $u\\to u\u2019$ \u4e0a\uff0c\u90a3\u4e48\u5728\u52a0\u5165\u65b0\u8fb9\u524d\u540e\uff0c\u5272\u6389\u8fd9\u6761\u8fb9\u540e\uff0c\u6811\u6240\u5f62\u6210\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u4e00\u4f1a\u6263\u6389 $v$ \u539f\u6765\u6240\u5728\u7684\u8fde\u901a\u5757\uff0c\u56e0\u6b64\u5982\u679c\u5272\u6389\u7684\u8fd9\u6761\u8fb9\u672c\u8eab\u662f\u9ed1\u8fb9\uff0c\u90a3\u4e48 $v$ \u539f\u6765\u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\u4e3a\u5947\u6570\uff0c\u56e0\u6b64\u539f\u6765 $u\\to v$ \u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u7c7b\u578b\u90fd\u4f1a\u7ffb\u8f6c\uff0c\u53cd\u4e4b $u\\to v$ \u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7c7b\u578b\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u3002\n\n\u611f\u89c9\u8fd9\u4e00\u6bb5\u8bb2\u5f97\u6709\u70b9\u60ac\u4e4e\uff0c\u501f\u52a9\u4e0b\u56fe\u53ef\u80fd\u6bd4\u8f83\u597d\u7406\u89e3\uff08\u7eff\u8fb9\u4e3a\u539f\u6811\u4e0a\u7684\u8fb9\uff0c\u6a59\u8fb9\u4e3a\u5272\u6389\u7684\u8fb9\uff0c\u7ea2\u8fb9\u4e3a\u52a0\u4e0a\u7684\u8fb9\uff0c\u586b\u597d\u8272\u7684\u4e09\u89d2\u5f62\u4e3a\u4e00\u4e2a\u5b50\u6811\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e0d\u5728 $B\\to G$\u200b \u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u5982 $AB$\u200b\uff0c\u64cd\u4f5c\u524d\u540e\u5f62\u6210\u7684\u6811\u4e2d\uff0c\u5220\u6389\u8fd9\u6761\u8fb9\u4e4b\u540e\u5f62\u6210\u7684\u8fde\u901a\u5757\u4e4b\u4e00\u90fd\u662f\u7eff\u8272\u7684\u5b50\u6811\uff0c$CH$ \u4e5f\u540c\u7406\uff0c\u56e0\u6b64\u8fb9\u7684\u7c7b\u578b\u4e0d\u53d1\u751f\u53d8\u5316\uff0c\u800c\u5bf9\u4e8e $B\\to G$ \u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u5982 $BC$\uff0c\u539f\u6765\u5272\u6389\u5b83\u4e4b\u540e\u5f62\u6210\u7684\u8fde\u901a\u5757\u4e4b\u4e00\u662f $B$ \u52a0\u4e0a\u7eff\u8272\u7684\u5b50\u6811\uff0c\u800c\u5220\u6389 $DE$ \u52a0\u4e0a $BG$\u200b \u4e4b\u540e\u5f62\u6210\u7684\u8fde\u901a\u5757\u4e4b\u4e00\u662f $B,A$ \u6240\u5728\u7684\u5b50\u6811 $+$ \u84dd\u8272\u7684\u5b50\u6811\uff0c\u56e0\u6b64\u5982\u679c\u84dd\u8272\u5b50\u6811\u5927\u5c0f\u4e3a\u5947\u6570\uff0c\u5373\u5272\u6389\u7684\u8fb9\u4e3a\u9ed1\u8fb9\u90a3\u8fd9\u6761\u8fb9\u7c7b\u578b\u5c31\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5426\u5219\u8fd9\u6761\u8fb9\u7c7b\u578b\u4e0d\u53d8\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yghp9jyf.png)\n\n\u56e0\u6b64\u6211\u4eec\u5c06\u5272\u6389\u7684\u8fb9\u5206\u4e3a\u9ed1\u8fb9\u548c\u767d\u8fb9\u4e24\u79cd\u7c7b\u578b\u3002\u5982\u679c\u5272\u6389\u7684\u8fb9\u4e3a\u767d\u8fb9\uff0c\u7531\u4e8e\u6240\u6709\u8fb9\u989c\u8272\u90fd\u4e0d\u53d8\uff0c\u56e0\u6b64\u5982\u679c\u539f\u56fe\u4e2d\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\uff0c\u90a3\u4e48\u968f\u4fbf\u8fde\u4e0a\u4e00\u6761\u8fb9\u4ecd\u7136\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\uff0c\u8d21\u732e\u5c31\u662f\u4e24\u4e2a\u5b50\u6811\u7684 $siz$ \u4e4b\u79ef\u3002\u5426\u5219\u4e0d\u8bba\u8fde\u4e0a\u4ec0\u4e48\u8fb9\u90fd\u4e0d\u7b26\u5408\u6761\u4ef6\u3002\u5982\u679c\u5272\u6389\u7684\u8fb9\u4e3a\u9ed1\u8fb9\uff0c\u8fd9\u79cd\u60c5\u51b5\u6709\u70b9\u7e41\u7410\uff0c\u8003\u8651\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\u9996\u5148\u6bcf\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u9ed1\u8fb9\u4e2a\u6570\u90fd\u662f\u5947\u6570\u5bf9\u5427\uff0c\u5426\u5219\u603b\u70b9\u6570\u5c31\u662f\u5947\u6570\u4e86\uff0c\u56e0\u6b64\n\n- \u5982\u679c\u4e00\u4e2a\u70b9\u8fde\u51fa\u53bb\u4e86 $5$ \u6761\u53ca\u4ee5\u4e0a\u7684\u9ed1\u8fb9\uff0c\u90a3\u4e48\u7531\u4e8e\u4e00\u6761\u8def\u5f84\u6700\u591a\u7834\u574f\u6389\u4e00\u4e2a\u70b9\u76f8\u90bb\u7684\u4e24\u4e2a\u9ed1\u8fb9\uff0c\u56e0\u6b64\u7b54\u6848\u80af\u5b9a\u4e3a $0$\u3002\n\n- \u5426\u5219\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u70b9\u8fde\u51fa\u53bb\u4e86\u4e09\u6761\u9ed1\u8fb9\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u8fd9\u6761\u8def\u5f84\u5fc5\u987b\u7834\u574f\u6389\u6240\u6709\u4e0e\u8fde\u51fa\u53bb\u81f3\u5c11\u4e09\u6761\u9ed1\u8fb9\u7684\u70b9\uff0c\u540c\u65f6\u4e5f\u4e0d\u80fd\u4ea7\u751f\u65b0\u7684\u8fde\u51fa\u53bb\u81f3\u5c11\u4e09\u6761\u9ed1\u8fb9\u7684\u70b9\uff0c\u7a0d\u52a0\u601d\u8003\u5373\u53ef\u53d1\u73b0\u8fd9\u7b49\u4ef7\u4e8e\uff1a\n\n  - \u8bb0 $c$ \u8868\u793a\u8fd9\u6761\u8def\u5f84\u4e0a\u76f8\u90bb\u4e24\u6761\u8fb9\u90fd\u662f\u9ed1\u8fb9\u7684\u5bf9\u6570\uff0c\u90a3\u4e48\u5fc5\u987b\u6709 $c$ \u7b49\u4e8e $\\text{\u8fde\u51fa\u53bb\u81f3\u5c11\u4e09\u6761\u9ed1\u8fb9\u7684\u70b9\u7684\u4e2a\u6570}$\uff0c\u5426\u5219\u7834\u574f\u4e0d\u6389\u6240\u6709\u4e0d\u5408\u6cd5\u7684\u70b9\n  - \u4e0d\u80fd\u5b58\u5728\u76f8\u90bb\u4e24\u6761\u8fb9\uff0c\u6ee1\u8db3\u5b83\u4eec\u90fd\u662f\u767d\u8fb9\uff0c\u5426\u5219\u53cd\u8f6c\u4e4b\u540e\u5c31\u4f1a\u5f97\u5230\u4e24\u6761\u76f8\u90bb\u7684\u9ed1\u8fb9\u3002\n  - \u8def\u5f84\u7aef\u70b9\u7684\u4e24\u6761\u8fb9\u5fc5\u987b\u90fd\u662f\u9ed1\u8fb9\uff0c\u5426\u5219\u7ffb\u8f6c\u540e\u7aef\u70b9\u76f8\u8fde\u7684\u8fb9\u53d8\u6210\u9ed1\u8fb9\uff0c\u800c\u663e\u7136\u4f60\u65b0\u52a0\u5165\u7684\u8fb9\u4e5f\u662f\u9ed1\u8fb9\uff0c\u5c31\u4f1a\u4f7f\u7aef\u70b9\u53d8\u4e3a\u4e0d\u5408\u6cd5\u3002\n\n  \u7b54\u6848\u5c31\u662f\u6240\u6709\u7b26\u5408\u4ee5\u4e0a\u4e09\u6761\u9650\u5236\u7684\u8def\u5f84\u4e0a\u9ed1\u8fb9\u4e2a\u6570\u4e4b\u548c\u3002\u6211\u4eec\u8003\u8651\u600e\u6837\u6c42\u8fd9\u4e1c\u897f\u3002\u6211\u4eec\u968f\u4fbf\u4ee4\u4e00\u4e2a\u8fde\u51fa\u81f3\u5c11\u4e09\u6761\u9ed1\u8fb9\u7684\u70b9 $r$ \u4e3a\u6839\uff0c\u7136\u540e\u904d\u5386\u5b83\u7684\u4e09\u4e2a\u9ed1\u8fb9\u8fde\u51fa\u53bb\u7684\u5b50\u6811\uff0c\u8bb0 $cnt_v$ \u8868\u793a $r\\to v$ \u8def\u5f84\u4e0a\u6709\u591a\u5c11\u5bf9\u76f8\u90bb\u7684\u9ed1\u8fb9\uff0c$ban_v$ \u8868\u793a $r\\to v$ \u8def\u5f84\u4e0a\u662f\u5426\u6709\u76f8\u90bb\u7684\u767d\u8fb9\uff0c$d_v$ \u8868\u793a $r\\to v$ \u8def\u5f84\u4e0a\u9ed1\u8fb9\u4e2a\u6570\u3002\u90a3\u4e48\u5982\u679c\u6211\u4eec\u6c42\u51fa\u8fd9\u4e09\u4e2a\u6570\u7ec4\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u4e00\u6761\u8def\u5f84 $u\\to v$ \u7b26\u5408\u6761\u4ef6\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n  - $ban_u=0,ban_v=0$\n  - $u,v$ \u5728 $r$ \u7684\u4e0d\u540c\u5b50\u6811\u5185\uff0c\u4e14 $u,v$ \u6240\u5728 $r$ \u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\u4e0e $r$ \u76f8\u8fde\u7684\u8fb9\u90fd\u662f\u9ed1\u8fb9\n  - $cnt_u+cnt_v$ \u7b49\u4e8e\u8fde\u51fa\u53bb\u81f3\u5c11\u4e09\u6761\u9ed1\u8fb9\u7684\u70b9\u7684\u4e2a\u6570 $-1$\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u51cf\u4e00\u662f\u56e0\u4e3a $r$ \u4e5f\u4f1a\u88ab\u7834\u574f\u800c\u6211\u4eec\u6ca1\u6709\u7edf\u8ba1\u8fdb\u53bb\u3002\n  - $u,v$ \u4e0e\u5176\u7236\u4eb2\u76f8\u8fde\u7684\u8fb9\u90fd\u662f\u9ed1\u8fb9\n\n  \u8fd9\u6837\u7684\u8def\u5f84\u7684\u8d21\u732e\u5c31\u662f $d_u+d_v$\uff0c\u7528\u7c7b\u4f3c\u70b9\u5206\u6cbb\u7684\u65b9\u5f0f\u7edf\u8ba1\u8d21\u732e\u5373\u53ef\n\n- \u5982\u679c\u4e0d\u5b58\u5728\u4e00\u4e2a\u70b9\u8fde\u51fa\u53bb\u4e86\u81f3\u5c11\u4e09\u6761\u9ed1\u8fb9\uff0c\u4e5f\u5373\u539f\u56fe\u5c31\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\u90a3\u4e48\u6211\u4eec\u968f\u4fbf\u627e\u4e00\u6761\u9ed1\u767d\u76f8\u95f4\u4e14\u4e24\u4e2a\u7aef\u70b9\u76f8\u8fde\u7684\u8fb9\u90fd\u662f\u9ed1\u8fb9\u7684\u8def\u5f84\u7ffb\u8f6c\u5373\u53ef\uff0c\u8d21\u732e\u4e5f\u662f\u8def\u5f84\u4e0a\u9ed1\u8fb9\u4e2a\u6570\u3002\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u6362\u6839 $dp$ \u5b9e\u73b0\uff0c$cnt_{u,0/1}$ \u8868\u793a $u$ \u5b50\u6811\u5185\u6709\u591a\u5c11\u6761\u8def\u5f84 $v\\to u$\uff0c\u6ee1\u8db3\u4e0e $v$ \u76f8\u8fde\u7684\u8fb9\u4e3a\u9ed1\u8fb9\uff0c\u4e0e $u$ \u76f8\u8fde\u7684\u8fb9\u4e3a\u767d\u8fb9/\u9ed1\u8fb9\uff0c$sum_{u,0/1}$ \u5219\u8868\u793a\u6240\u6709 \u8def\u5f84 $v\\to u$\uff0c\u6ee1\u8db3\u4e0e $v$ \u76f8\u8fde\u7684\u8fb9\u4e3a\u9ed1\u8fb9\uff0c\u4e0e $u$ \u76f8\u8fde\u7684\u8fb9\u4e3a\u767d\u8fb9/\u9ed1\u8fb9\uff0c\u8fd9\u6837\u7684\u8def\u5f84\u4e0a\u9ed1\u8fb9\u4e2a\u6570\u4e4b\u548c\uff0c\u6362\u6839 DP \u4e00\u4e0b\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n~~\u9898\u89e3\u7801\u6b7b\u6211\u4e86~~\n\n```cpp\nconst int MAXN=5e5;\nint n,hd[MAXN+5],to[MAXN*2+5],nxt[MAXN*2+5],ec=1;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint siz[MAXN+5],fa[MAXN+5],bad[MAXN+5],ed[MAXN+5];\nbool isbad[MAXN+5];\nvoid dfs(int x,int f){\n\tfa[x]=f;siz[x]=1;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\tdfs(y,x);siz[x]+=siz[y];ed[y]=e>>1;\n\t}\n}\nnamespace have{\n\tll sum[MAXN+5][2],sum_out[MAXN+5];\n\tint cnt[MAXN+5][2],cnt_out[MAXN+5];\n\tvoid dfs1(int x,int f){\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];if(y==f) continue;dfs1(y,x);\n\t\t\tif(isbad[e>>1]){\n\t\t\t\tsum[x][1]+=sum[y][0]+cnt[y][0]+1;\n\t\t\t\tcnt[x][1]+=cnt[y][0]+1;\n\t\t\t} else {\n\t\t\t\tsum[x][0]+=sum[y][1];\n\t\t\t\tcnt[x][0]+=cnt[y][1];\n\t\t\t}\n\t\t} //printf(\"%d %lld %d %lld %d\\n\",x,sum[x][0],cnt[x][0],sum[x][1],cnt[x][1]);\n\t}\n\tvoid dfs2(int x,int f){\n\t\tll tmp_sum[3]={0},tmp_cnt[3]={0};\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];\n\t\t\tif(y==f){\n\t\t\t\tif(isbad[e>>1]){\n\t\t\t\t\ttmp_sum[1]+=sum_out[x];\n\t\t\t\t\ttmp_cnt[1]+=cnt_out[x];\n\t\t\t\t} else {\n\t\t\t\t\ttmp_sum[0]+=sum_out[x];\n\t\t\t\t\ttmp_cnt[0]+=cnt_out[x];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(isbad[e>>1]){\n\t\t\t\t\ttmp_sum[1]+=sum[y][0]+cnt[y][0]+1;\n\t\t\t\t\ttmp_cnt[1]+=cnt[y][0]+1;\n\t\t\t\t} else {\n\t\t\t\t\ttmp_sum[0]+=sum[y][1];\n\t\t\t\t\ttmp_cnt[0]+=cnt[y][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];if(y==f) continue;\n\t\t\tif(isbad[e>>1]){\n\t\t\t\ttmp_sum[1]-=sum[y][0]+cnt[y][0]+1;\n\t\t\t\ttmp_cnt[1]-=cnt[y][0]+1;\n\t\t\t\tsum_out[y]=tmp_sum[0]+tmp_cnt[0]+1;\n\t\t\t\tcnt_out[y]=tmp_cnt[0]+1;\n\t\t\t\ttmp_sum[1]+=sum[y][0]+cnt[y][0]+1;\n\t\t\t\ttmp_cnt[1]+=cnt[y][0]+1;\n\t\t\t} else {\n\t\t\t\ttmp_sum[0]-=sum[y][1];\n\t\t\t\ttmp_cnt[0]-=cnt[y][1];\n\t\t\t\tsum_out[y]=tmp_sum[1];\n\t\t\t\tcnt_out[y]=tmp_cnt[1];\n\t\t\t\ttmp_sum[0]+=sum[y][1];\n\t\t\t\ttmp_cnt[0]+=cnt[y][1];\n\t\t\t} dfs2(y,x);\n\t\t} //printf(\"%d %lld %d\\n\",x,sum_out[x],cnt_out[x]);\n\t}\n\tvoid solve(){\n\t\tll res=0,ss=0;\n\t\tfor(int i=1;i<=n;i++) if(~siz[i]&1) res+=1ll*siz[i]*(n-siz[i]);\n\t\tdfs1(1,0);dfs2(1,0);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tss+=sum[i][1];\n\t\t\tif(siz[i]&1) ss+=sum_out[i];\n\t\t} ss>>=1;\n\t\tprintf(\"%lld\\n\",ss+res);\n\t}\n}\nnamespace doesnt_have{\n\tbool ban[MAXN+5];int cnt[MAXN+5],siz_[MAXN+5],d[MAXN+5];\n\tvector<int> pt;ll buc[MAXN+5],bucc[MAXN+5];\n\tvoid dfs0(int x,int f){\n\t\tsiz_[x]=1;\n\t\tfor(int e=hd[x];e;e=nxt[e]) if(to[e]^f){\n\t\t\tdfs0(to[e],x);siz_[x]+=siz_[to[e]];\n\t\t}\n\t}\n\tvoid dfsclc(int x,int f,int pre){\n\t\tpt.pb(x);\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];if(y==f) continue;\n\t\t\tcnt[y]=cnt[x]+(pre&&(isbad[e>>1]));\n\t\t\tban[y]=ban[x]|(!pre&&(!isbad[e>>1]));\n\t\t\td[y]=d[x]+(siz_[y]&1);dfsclc(y,x,isbad[e>>1]);\n\t\t}\n\t}\n\tvoid solve(){\n\t\tint rt=0,tot=0;ll res=0;\n\t\tfor(int i=1;i<=n;i++) if(bad[i]>=3) rt=i,tot++;\n\t\tdfs0(rt,0);//printf(\"%d\\n\",rt);\n\t\tfor(int e=hd[rt];e;e=nxt[e]){\n\t\t\tint y=to[e];\n\t\t\tif(isbad[e>>1]){\n\t\t\t\tpt.clear();d[y]=1;cnt[y]=0;dfsclc(y,rt,1);\n//\t\t\t\tfor(int z:pt) printf(\"%d %d %d %d\\n\",z,cnt[z],ban[z],d[z]);\n\t\t\t\tfor(int z:pt) if((siz_[z]&1)&&!ban[z]&&bad[z]==1) res+=buc[tot-1-cnt[z]]+1ll*bucc[tot-1-cnt[z]]*d[z];\n\t\t\t\tfor(int z:pt) if((siz_[z]&1)&&!ban[z]&&bad[z]==1) buc[cnt[z]]+=d[z],bucc[cnt[z]]++;\n\t\t\t}\n\t\t} printf(\"%lld\\n\",res);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);if(n&1) return puts(\"0\"),0;\n\tfor(int i=1,u,v;i<n;i++) scanf(\"%d%d\",&u,&v),adde(u,v),adde(v,u);\n\tdfs(1,0);for(int i=2;i<=n;i++) if(siz[i]&1) bad[i]++,bad[fa[i]]++,isbad[ed[i]]=1;\n\tbool flg=1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(bad[i]>=5) return puts(\"0\"),0;\n\t\tif(bad[i]>=3) flg=0;\n\t}\n\tif(flg) have::solve();\n\telse doesnt_have::solve();\n\treturn 0;\n}\n/*\n8\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n7 8\n\n10\n1 2\n1 3\n1 4\n2 5\n2 6\n6 7\n5 8\n5 9\n2 10\n\n14\n1 2\n1 3\n1 4\n2 5\n2 6\n6 7\n5 8\n5 9\n2 10\n9 11\n8 12\n8 13\n12 14\n\n16\n1 2\n1 3\n1 4\n2 5\n2 6\n6 7\n5 8\n5 9\n2 10\n9 11\n8 12\n8 13\n12 14\n13 15\n13 16\n\n10\n1 2\n3 2\n3 4\n4 5\n5 6\n6 7\n7 8\n7 9\n6 10\n*/\n```\n\n",
        "postTime": 1631682132,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF891D Sloth"
    }
]