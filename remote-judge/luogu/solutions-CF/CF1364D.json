[
    {
        "content": "\u5047\u5982\u56fe\u662f\u4e00\u68f5\u6811\n\n\u6309\u6df1\u5ea6\u8fdb\u884c\u9ed1\u767d\u67d3\u8272\u5373\u53ef\uff0c\u7ec6\u8282\u662f\u67d0\u4e2a\u989c\u8272\u7684\u8282\u70b9\u6570\u53ef\u80fd\u5c0f\u4e8e $(k + 1) / 2$\uff0c\u9700\u8981\u53e6\u52a0\u5224\u65ad\u3002\n\n\u5982\u679c\u4e0d\u662f\u4e00\u68f5\u6811\n\n\u627e\u5230\u56fe\u4e2d\u7684\u6700\u5c0f\u73af\uff0c\u5982\u679c\u8282\u70b9\u6570\u4e0d\u8d85\u8fc7 $k$\uff0c\u76f4\u63a5\u8f93\u51fa\u73af\uff1b\u5982\u679c\u8282\u70b9\u6570\u5927\u4e8e $k$\uff0c\u5219\u5728\u73af\u4e0a\u6bcf\u9694\u4e00\u4e2a\u70b9\u53d6\u4e00\u4e2a\u70b9\uff0c\u5219\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u7b26\u5408\u8981\u6c42\u7684\u72ec\u7acb\u96c6\u3002\n\n\u4ee3\u7801\u4e2d\u9047\u5230\u8282\u70b9\u6570\u4e0d\u8d85\u8fc7 $k$  \u7684\u73af\u5c31\u76f4\u63a5\u8f93\u51fa\u4e86\u3002\u7801\u98ce\u8f83\u4e11\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i, j, k) for(int i = (j); i <= (k); i ++)\n#define frep(i, j, k) for(int i = (j); i >= (k); i --)\n#define mrep(i, h, j) for(int i = (h[j]); ~i; i = ne[i])\n#define mset(a, v) memset(a, v, sizeof(a))\n#define mcpy(a, v) memcpy(a, v, sizeof(a))\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\n\nconst int N = 100010, M = N << 2;\nint n, m, K, mx, S, T;\nint h[N], e[M], ne[M], idx;\nint dep[N], cnt[N];\nbool st[N], col[N];\nvector<int> v, res1, res2;\n\nvoid add(int a, int b){\n    e[idx] = b, ne[idx] = h[a], h[a] = idx ++;\n}\n\n//\u627e\u6700\u5c0f\u73af\nvoid dfs(int u){\n    v.push_back(u);\n    dep[u] = v.size();\n    mrep(i, h, u){\n        int j = e[i];\n        if(!dep[j]) dfs(j);\n        else if(dep[j] == dep[u] - 1) cnt[u] ++;\n        if(dep[j] < dep[u] - 1 || cnt[u] == 2){\n            int t = dep[u] - dep[j] + 1;\n            if(t <= K){\n                printf(\"2\\n%d\\n\", t);\n                rep(k, dep[j] - 1, dep[u] - 1) printf(\"%d \", v[k]);\n                exit(0);\n            }\n            else if(t <= mx){\n                mx = t;\n                S = u, T = j;\n            }\n        }\n    }\n    v.pop_back();\n}\n\n//\u8f93\u51fa\u72ec\u7acb\u96c6\nvoid dfs1(int u){\n    v.push_back(u);\n    dep[u] = v.size();\n    if(u == T){\n        puts(\"1\");\n        for(int k = 0; k < K; k += 2) printf(\"%d \", v[k]);\n        exit(0);\n    }\n    mrep(i, h, u){\n        int j = e[i];\n        if(u == S && j == T) continue;\n        if(!dep[j]) dfs1(j);\n    }\n    v.pop_back();\n}\n\n//\u6811\u7684\u60c5\u51b5\nvoid dfs2(int u){\n    st[u] = true;\n    if(col[u]) res1.push_back(u);\n    else res2.push_back(u);\n    mrep(i, h, u){\n        int j = e[i];\n        if(!st[j]){\n            col[j] = !col[u];\n            dfs2(j);\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d%d%d\", &n, &m, &K);\n    mset(h, -1);\n    while(m --){\n        int a, b;\n        scanf(\"%d%d\", &a, &b);\n        add(a, b), add(b, a);\n    }\n    mx = n;\n    dfs(1);\n    if(S){\n        mset(dep, 0);\n        dfs1(S);\n    }\n    puts(\"1\");\n    dfs2(1);\n    int t = (K + 1) / 2;\n    if(res1.size() >= t){\n        rep(i, 0, t - 1) printf(\"%d \", res1[i]);\n    }\n    else{\n        rep(i, 0, t - 1) printf(\"%d \", res2[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1661824392,
        "uid": 318008,
        "name": "liqize15235204345",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1364D Ehab's Last Corollary"
    },
    {
        "content": "## \u3010CF1364D\u3011 Ehab's Last Corollary\r\n\r\n### Analysis\r\n\r\n\u6709\u70b9\u8be1\u5f02\u7684\u9898\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u70b9\u7075\u5149\u4e4d\u73b0\uff1f\uff08\r\n\r\n\u51fa\u4e8e\u4e00\u4e9b\u7075\u5149\uff0c\u6211\u4eec\u9996\u5148\u8003\u8651 $k = n$ \u7684\u60c5\u51b5\u3002\u6784\u9020\u7b54\u6848\u5f88\u7b80\u5355\uff1a\r\n\r\n- \u5982\u679c\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u76f4\u63a5\u5bf9\u56fe\u8fdb\u884c\u9ed1\u767d\u67d3\u8272\uff0c\u663e\u7136\u540c\u8272\u7ed3\u70b9\u6784\u6210\u4e86\u4e00\u4e2a\u72ec\u7acb\u96c6\uff0c\u56e0\u6b64\u8f93\u51fa\u90a3\u4e2a size \u4e0d\u5c0f\u4e8e $\\left \\lceil \\frac k 2 \\right \\rceil$ \u7684\u96c6\u5408\u7684\u524d $\\left \\lceil \\frac k 2 \\right \\rceil$ \u4e2a\u5143\u7d20\u5373\u53ef\u3002\r\n- \u5426\u5219\u56e0\u4e3a\u662f\u8fde\u901a\u56fe\uff0c\u56fe\u4e0a\u4e00\u5b9a\u5b58\u5728\u73af\uff0c\u5927\u5c0f\u663e\u7136\u4e0d\u5927\u4e8e $k$\uff0c\u56e0\u6b64\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u73af\u5373\u53ef\u3002\r\n\r\n\u73b0\u5728\u8003\u8651 $n > k$ \u7684\u60c5\u51b5\u3002\u6ce8\u610f\u5230\u9898\u76ee\u63cf\u8ff0\u4e2d\u201cI have a proof that for any input you can always solve at least one of these problems\u201d\uff0c\u56e0\u6b64\u7ed9\u5b9a\u7684\u56fe\u7684\u4efb\u4e00\u5927\u5c0f\u4e3a $k$ \u7684\u5b50\u56fe\u4e00\u5b9a\u80fd\u627e\u5230\u89e3\u3002\u56e0\u6b64\u6211\u4eec\u5728\u539f\u56fe\u4e0a\u968f\u4fbf\u9009\u4e00\u4e2a\u8282\u70b9\u6570\u4e3a $k$ \u7684\u8fde\u901a\u5757\uff0c\u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86 $k = n$ \u7684\u60c5\u51b5\uff0c\u6309\u7167\u4e0a\u9762\u53d9\u8ff0\u627e\u7b54\u6848\u5373\u53ef\u3002\r\n\r\n\u627e\u73af\u7684\u65b9\u6cd5\u662f\uff0c\u4ece\u67d0\u4e2a\u8282\u70b9\u5f00\u59cb dfs\uff0c\u7528\u6808\u7ef4\u62a4 dfs \u6811\u4e0a\u5f53\u524d\u8282\u70b9\u5230\u6839\u7684\u6240\u6709\u8282\u70b9\u3002\u5982\u679c\u5728 dfs \u8fc7\u7a0b\u4e2d\u627e\u5230\u4e86\u4e0b\u4e00\u4e2a\u7ed3\u70b9 $v$ \u5728\u6808\u91cc\uff0c\u90a3\u4e48\u5f53\u524d\u6808\u9876\u5143\u7d20\u5230 $v$ \u4e4b\u95f4\u7684\u6240\u6709\u8282\u70b9\u6784\u6210\u4e86\u4e00\u4e2a\u73af\u3002\r\n\r\n### Code\r\n\r\n```cpp\r\nnamespace Fusu {\r\n\r\nconst int maxn = 200005;\r\n\r\nint n, m, t, cnt = 1;\r\nbool vis[maxn];\r\nstd::pair<int, int> edge[maxn];\r\nstd::vector<int> e[maxn], ans[2];\r\nstd::queue<int> Q;\r\n\r\nvoid dfs(const int u, const int v);\r\nvoid dfs(const int u, const int v, const int fa);\r\n\r\nvoid Main() {\r\n  qr(n); qr(m); qr(t);\r\n  for (int i = 1; i <= m; ++i) {\r\n    qr(edge[i].first); qr(edge[i].second);\r\n    e[edge[i].first].push_back(edge[i].second);\r\n    e[edge[i].second].push_back(edge[i].first);\r\n  }\r\n  Q.push(1);\r\n  vis[1] = true;\r\n  while (cnt != t) {\r\n    int u = Q.front(); Q.pop();\r\n    for (auto v : e[u]) if (vis[v] == false) {\r\n      vis[v] = true;\r\n      Q.push(v);\r\n      if (++cnt == t) break;\r\n    }\r\n  }\r\n  for (int i = 1; i <= n; ++i) {\r\n    e[i].clear();\r\n  }\r\n  int ecnt = 0;\r\n  for (int i = 1; i <= m; ++i) {\r\n    int u = edge[i].first, v = edge[i].second;\r\n    if (vis[u] && vis[v]) {\r\n      ++ecnt;\r\n      e[u].push_back(v);\r\n      e[v].push_back(u);\r\n    }\r\n  }\r\n  memset(vis, 0, sizeof vis);\r\n  if (ecnt == (t - 1)) {\r\n    puts(\"1\");\r\n    dfs(1, 0, 0);\r\n    int v = 0;\r\n    int tt = t >> 1;\r\n    if (t & 1) ++tt;\r\n    if (ans[v].size() < tt) v = 1;\r\n    for (int i = 0; i < tt; ++i) qw(ans[v][i], ' ');\r\n    putchar('\\n');\r\n  } else {\r\n    puts(\"2\");\r\n    dfs(1, 0);\r\n  }\r\n}\r\n\r\nvoid dfs(const int u, const int w, const int fa) {\r\n  ans[w].push_back(u);\r\n  for (auto v : e[u]) if (v != fa) {\r\n    dfs(v, w ^ 1, u);\r\n  }\r\n}\r\n\r\nint top;\r\nint stk[maxn];\r\nstd::vector<int> a;\r\nvoid dfs(const int u, const int fa) {\r\n  stk[++top] = u;\r\n  vis[u] = true;\r\n  for (auto v : e[u]) if (v != fa) {\r\n    if (vis[v]) {\r\n      while (stk[top] != v) {\r\n        a.push_back(stk[top--]);\r\n      }\r\n      a.push_back(v);\r\n      qw(a.size(), '\\n');\r\n      for (auto u : a) qw(u, ' ');\r\n      putchar('\\n');\r\n      exit(0);\r\n    } else {\r\n      dfs(v, u);\r\n    }\r\n  }\r\n  --top;\r\n}\r\n\r\n} // namespace Fusu\r\n```\r\n\r\n",
        "postTime": 1592192768,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1364D \u3010Ehab's Last Corollary\u3011"
    },
    {
        "content": "$update:$ \u589e\u52a0\u4e86 $\\text{Reference}$\n\n\u633a\u5999\u7684\u6784\u9020\u9898\u3002\n\n\u5148\u5efa\u4e00\u68f5 DFS \u6811\uff0c\u5728\u65e0\u5411\u8fde\u901a\u56fe\u7684 DFS \u6811\u4e2d\uff0c\u6240\u6709\u7684\u975e\u6811\u8fb9\u90fd\u662f\u540e\u5411\u8fb9\uff0c\u6240\u4ee5\u53ef\u4ee5\u5e94\u7528\u8fd9\u4e00\u6027\u8d28\u3002\n\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5bf9\u4e8e\u4e00\u6761\u975e\u6811\u8fb9 $(u,v)$\uff0c\u5df2\u77e5\u5176\u4e00\u5b9a\u662f\u540e\u5411\u8fb9\uff0c\u90a3\u4e48\u82e5 $|dep_u-dep_v|\\leq k$\uff0c\u90a3\u4e48\u5c31\u80fd\u627e\u5230\u4e00\u4e2a\u5927\u5c0f\u4e0d\u8d85\u8fc7 $k$ \u7684\u7b80\u5355\u73af\u3002\n\n\u5426\u5219\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n* $m=n-1$\n\n\t\u90a3\u4e48\u628a\u8282\u70b9\u6309\u6df1\u5ea6\u5947\u5076\u5206\u4e00\u4e0b\uff0c\u53d6\u5927\u5c0f\u8f83\u5927\u7684\u90a3\u4e00\u4e2a\u96c6\u5408\uff0c\u5176\u5b50\u96c6\u4e00\u5b9a\u80fd\u6ee1\u8db3\u5927\u5c0f\u4e3a $\\lceil\\frac{k}{2}\\rceil$\u3002\n \n* $\\text{Otherwse}$\n\n\t\u4e00\u5b9a\u5b58\u5728\u4e00\u5bf9 $(u,v)$ \u6ee1\u8db3 $|dep_u-dep_v|>k$\uff0c\u90a3\u4e48\u8fd9\u68f5 DFS \u6811\u4e00\u5b9a\u6df1\u5ea6\u5927\u4e8e $k$\uff0c\u4e14\u4e0d\u5b58\u5728\u8fde\u63a5\u6df1\u5ea6\u5dee\u4e3a $[2,k)$ \u7684\u975e\u6811\u8fb9\u3002\n    \n    \u90a3\u4e48\u5c31\u627e\u5230\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u6bcf\u6b21\u6761\u4e24\u4e2a\u7236\u4eb2\u5c31\u80fd\u5f97\u5230\u5408\u6cd5\u7684\u72ec\u7acb\u96c6\u3002\n        \n$\\texttt{Code:}$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define rint register int\n#define int long long\nusing namespace std;\nnamespace IO{\n\t#define File(x,y) freopen(#x,\"r\",stdin),freopen(#y,\"w\",stdout)\n\tinline int read(){\n\t\tint w=0,f=1; char ch=getchar();\n\t\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\t\twhile(ch>='0'&&ch<='9'){w=(w<<3)+(w<<1)+(ch^48); ch=getchar();}\n\t\treturn w*f;\n\t}\n\tinline void write(int x){\n  \t\tstatic int sta[35]; int top=0;\n  \t\tif(x<0) putchar('-'),x=-x;\n  \t\tdo{sta[++top]=x%10,x/=10;}while(x);\n  \t\twhile(top) putchar(sta[top--]+48); puts(\"\");\n\t}\n}\nusing namespace IO;\nnamespace CL{\n\t#define fill(x,y) memset(x,y,sizeof(x))\n\t#define copy(x,y) memcpy(x,y,sizeof(y))\n\n\tconst int maxn=2e5+5;\n\t\n\tint n,m,k,top;\n\tint f[maxn],dep[maxn],stk[maxn];\n\tbool vis[maxn];\n\tqueue<int> q1,q2;\n\tnamespace Graph{\n\t\tint head[maxn],id;\n\t\tstruct e{int v,next;}edge[maxn<<1];\n\t\tinline void add(int u,int v){\n\t\t\tedge[++id].v=v;\n\t\t\tedge[id].next=head[u];\n\t\t\thead[u]=id;\n\t\t}\n\t}using namespace Graph;\n\tinline int get(int x){return (x&1)?(x>>1)+1:(x>>1);}\n\tinline void solve1(){\n\t\tputs(\"1\");\n\t\tif(m==n-1){\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tif(dep[i]&1) q1.push(i);\n\t\t\t\telse q2.push(i);\n\t\t\t}\n\t\t\tif(q1.size()>q2.size())\n\t\t\t\tfor(int i=1;i<=get(k);i++) stk[++top]=q1.front(),q1.pop();\n\t\t\telse \n\t\t\t\tfor(int i=1;i<=get(k);i++) stk[++top]=q2.front(),q2.pop();\n\t\t\tfor(int i=1;i<=top;i++) printf(\"%lld \",stk[i]); puts(\"\");\n\t\t}else{\n\t\t\tint p=0;\n\t\t\tfor(int i=1;i<=n;i++) if(dep[i]>dep[p]) p=i;\n\t\t\twhile(p){\n\t\t\t\tstk[++top]=p;\n\t\t\t\tp=f[f[p]];\n\t\t\t}\n\t\t\tfor(int i=1;i<=get(k);i++) printf(\"%lld \",stk[i]); puts(\"\");\n\t\t}\n\t}\n\tinline void solve2(int u,int v){\n\t\tputs(\"2\");\n\t\tprintf(\"%lld\\n\",dep[u]-dep[v]+1);\n\t\twhile(u!=v){\n\t\t\tstk[++top]=u;\n\t\t\tu=f[u];\n\t\t}\n\t\tstk[++top]=v;\n\t\tfor(int i=1;i<=top;i++) printf(\"%lld \",stk[i]); puts(\"\");\n\t\texit(0);\n\t}\n\tvoid dfs(int u,int fa){\n\t\tf[u]=fa; dep[u]=dep[fa]+1;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v;\n\t\t\tif(v==fa) continue;\n\t\t\tif(vis[v]){\n\t\t\t\tif(dep[u]<dep[v]) continue;\n\t\t\t\tif(dep[u]-dep[v]+1<=k) solve2(u,v);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n\n\tinline int main(){\n\t\tn=read(); m=read(); k=read();\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint x=read(),y=read();\n\t\t\tadd(x,y); add(y,x);\n\t\t}\n\t\tdfs(1,0); solve1();\n\t\treturn 0;\n\t}\n}\nsigned main(){return CL::main();}\n```\n \n ## $\\text{Reference}$\n \n $2021$ \u56fd\u5bb6\u96c6\u8bad\u961f\u8bba\u6587 \u300a\u4fe1\u606f\u5b66\u7ade\u8d5b\u4e2d\u6784\u9020\u9898\u7684\u5e38\u7528\u89e3\u9898\u65b9\u6cd5\u300b\u2014\u848b\u51cc\u5b87",
        "postTime": 1628342256,
        "uid": 226113,
        "name": "\u706b\u7fbd\u767d\u65e5\u751f",
        "ccfLevel": 0,
        "title": "\u300c\u9898\u89e3\u300dCF1364D Ehab's Last Corollary"
    },
    {
        "content": "\u6ce8\u610f\u5230\u9898\u76ee\u8bf4\u4e86\u4e00\u53e5\u795e\u79d8\u7684\u8bdd\uff1a\n>I have a proof that for any input you can always solve at least one of these problems, but it's left as an exercise for the reader.\n\n\u65e2\u7136\u9898\u76ee\u8fd9\u4e48\u8bf4\uff0c\u5c31\u5c1d\u8bd5\u7740\u8bc1\u660e\u4e00\u4e0b\uff01\n\n\u5927\u6982\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u5982\u679c\u67d0\u4e00\u4e2a\u73af\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 k \uff0c\u5373\u4e3a\u6240\u6c42\uff1b\u5982\u679c\u6240\u6709\u73af\u7684\u957f\u5ea6\u90fd\u5927\u4e8e k \uff0c\u6216\u6839\u672c\u5c31\u6ca1\u6709\u73af\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u53ef\u4ee5\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a $\\lceil \\frac 2 k \\rceil$ \u7684\u72ec\u7acb\u96c6\u7684\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u6ce8\u610f\u5230\u5224\u73af\u7684\u8981\u6c42\u66f4\u4e25\u683c\uff0c\u6240\u4ee5\u5148\u5224\u65ad\u6709\u6ca1\u6709\u73af\u3002\n\n\u7528\u4e00\u4e2a\u6808\u5b58\u50a8\u5f53\u524d DFS \u5230\u7684\u5143\u7d20\uff0c\u540c\u65f6\u8bb0\u5f55\u4e0b\u6bcf\u4e00\u4e2a\u5143\u7d20\u5165\u6808\u7684\u65f6\u95f4\u622a\uff0c\u5982\u679c x \u53ef\u4ee5\u5230 y \u4e14 y \u5148\u5165\u6808\uff0c\u90a3\u4e48\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u5c31\u662f $dfn_x-dfn_y+1$ \u3002\uff08\u611f\u89c9\u6709\u70b9\u50cf tarjan)\n\n```cpp\nvoid dfs(int x,int fa)\n{\n\tst.push_back(x);\n\tdfn[x]=(int)st.size();\n\tfor(int i=head[x];i;i=edge[i].next)\n\t\tif(edge[i].to!=fa)\n\t\t{\n\t\t\tif(!dfn[edge[i].to])\n\t\t\t{\n\t\t\t\tdfs(edge[i].to,x);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(dfn[x]-dfn[edge[i].to]+1<=k&&dfn[x]+1>=dfn[edge[i].to])\n\t\t\t{\n\t\t\t\tputs(\"2\");\n\t\t\t\tcout<<dfn[x]-dfn[edge[i].to]+1<<endl;\n\t\t\t\tfor(int j=dfn[edge[i].to]-1;j<dfn[x];j++)\n\t\t\t\t\tcout<<st[j]<<\" \";\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\t\n\tst.pop_back();\n}\n```\n\n\u5982\u679c\u5224\u73af\u5931\u8d25\uff0c\u518d\u627e\u72ec\u7acb\u96c6\u3002\n\n\u6ce8\u610f\u5230\u72ec\u7acb\u96c6\u7684\u8981\u6c42\u5c31\u662f\u96c6\u5185\u4efb\u610f\u4e24\u4e2a\u70b9\u90fd\u4e0d\u76f8\u90bb\uff0c\u6240\u4ee5\u7528\u67d3\u8272\u6cd5\u5373\u53ef\uff08\u6709\u70b9\u50cf\u4e8c\u5206\u56fe\u5224\u5b9a\uff09\n\n```cpp\nvoid color(int x,int c)\n{\n\tcol_gro[c].push_back(x);\n\tcol[x]=c;\n\tif(col_gro[c].size()==kk)\n\t{\n\t\tputs(\"1\"); \n\t\tfor(int i=0;i<col_gro[c].size();i++)\n\t\t\tcout<<col_gro[c][i]<<\" \";\n//\t\tfor(int i:col_gro[c])\n//\t\t\tcout<<i<<\" \";\n\t\texit(0);\n\t}\n\tfor(int i=head[x];i;i=edge[i].next)\n\t\tif(col[edge[i].to]==-1)\n\t\t\tcolor(edge[i].to,c^1);\n}\n```\n\n\u6240\u4ee5\u8fd9\u9053\u9898~~\u5de7\u5999~~\u5730\u5c06 tarjan \u548c\u4e8c\u5206\u56fe\u67d3\u8272\u6cd5\u5224\u65ad\u7ed3\u5408\u5230\u4e86\u4e00\u8d77\uff08\u96fe\n\n\u603b\u7ed3\uff1a\u4e00\u4e2a\u601d\u7ef4\u96be\u5ea6\u4e0d\u7b97\u9ad8\uff0c\u4ee3\u7801\u96be\u5ea6\u5728\u84dd\u9898\u91cc\u4e2d\u7b49\u504f\u4e0a\u7684\u5947\u602a\u9898",
        "postTime": 1596545632,
        "uid": 240812,
        "name": "45dino",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1364D \u3010Ehab's Last Corollary\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e2d\u6709\u8fd9\u4e48\u4e00\u6bb5\u8bdd\uff1a\n\n> I have a proof that for any input you can always solve at least one of these problems, **but it's left as an exercise for the reader.**\n\n\u7136\u800c\uff0c\u4f60\uff08\u51e0\u4e4e\uff09\u4e0d\u5f97\u4e0d\u627e\u51fa\u8fd9\u4e2a\u8bc1\u660e\uff0c\u624d\u53ef\u80fd\u505a\u51fa\u8fd9\u9898\u2026\u2026\n\n\u90a3\u4e48\u5c31\u8bd5\u56fe\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u73af\u7684\u957f\u5ea6\u8d85\u8fc7 $k$\uff0c\u90a3\u4e48\u4f3c\u4e4e\u53ef\u4ee5\u6bcf\u9694\u4e00\u4e2a\u70b9\u53d6\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5c31\u2026\u2026\n\n\u6784\u9020\u51fa\u4e86\u4e00\u4e2a\u5927\u5c0f\u81f3\u5c11\u4e3a $\\left\\lfloor\\dfrac {k+1}2\\right\\rfloor=\\left\\lceil\\dfrac k2\\right\\rceil$ \u7684\u72ec\u7acb\u96c6\uff1f\uff01\n\n\u7136\u800c\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u662f\uff0c\u56e0\u4e3a\u73af\u4e0a\u7684\u70b9\u4e4b\u95f4\u8fd8\u53ef\u80fd\u6709\u9664\u73af\u5916\u7684\u8fde\u8fb9\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u76f4\u63a5\u53d6\u6700\u5c0f\u73af\uff0c\u663e\u7136\u70b9\u4e4b\u95f4\u9664\u4e86\u73af\u8fb9\u5c31\u6ca1\u6709\u8fde\u8fb9\u4e86\uff0c\u5426\u5219\u4f1a\u4e0e\u6700\u5c0f\u6027\u77db\u76fe\u3002\n\n\u4e8e\u662f\uff0c\u8fd9\u4e2a\u73af\uff0c\u8981\u4e48\u6ee1\u8db3\u6761\u4ef6 $2$\uff0c\u8981\u4e48\u9694\u4e00\u4e2a\u70b9\u53d6\u4e00\u4e2a\u70b9\u80fd\u591f\u6ee1\u8db3\u6761\u4ef6 $1$\u3002\n\n\u554a\u4e0d\u5bf9\uff0c\u4f3c\u4e4e\u8fd8\u5c11\u4e86\u65e0\u73af\uff08\u5373\u6811\uff09\u7684\u60c5\u51b5\u3002\n\n\u4f17\u6240\u5468\u77e5\u6811\u662f\u4e8c\u5206\u56fe\uff0c\u56e0\u6b64\u5176\u4e24\u8fb9\u81f3\u5c11\u6709\u4e00\u8fb9\u6709 $\\left\\lceil\\dfrac n2\\right\\rceil$ \u4e2a\u70b9\uff0c\u53d6\u70b9\u66f4\u591a\u7684\u4e00\u8fb9\u80fd\u591f\u6ee1\u8db3\u6761\u4ef6 $1$\u3002\n\n$\\texttt{Q.E.D.}$\n\n\u6811\u7684\u60c5\u51b5\u53ef\u4ee5\u5982\u4e0a\u5904\u7406\uff0c\u81f3\u4e8e\u6709\u73af\u7684\u60c5\u51b5\u2026\u2026\n\n\u8fd9\u4e2a\u56fe\u8fd9\u4e48\u591a\u70b9\uff0c\u627e\u4e2a\u9524\u5b50\u7684\u6700\u5c0f\u73af\u2026\u2026\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u8981 **\u73af\u4e0a\u7684\u70b9\u4e4b\u95f4\u6ca1\u6709\u9664\u73af\u5916\u7684\u8fde\u8fb9** \u5373\u53ef\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u7528 dfs \u968f\u4fbf\u627e\u4e2a\u73af\uff0c\u7136\u540e\u4f9d\u6b21\u8003\u8651\u6bcf\u6761\u8fb9\uff0c\u5982\u679c\u5176\u4e24\u7aef\u70b9\u662f\u73af\u4e0a\u4e24\u4e2a\u4e0d\u76f8\u90bb\u70b9\uff0c\u90a3\u5c31\u780d\u65ad\u5176\u4e2d\u4e00\u8fb9\uff0c\u6362\u6210\u65b0\u7684\u8fb9\u3002\n\n\u8fd9\u91cc\u53ef\u4ee5\u7528\u94fe\u8868\uff08\uff1f\uff09\u5b9e\u73b0\uff0c\u8be6\u60c5\u53ef\u4ee5\u53c2\u7167\u4ee3\u7801\u3002\n\n\u6700\u540e\u5f97\u5230\u7684\u73af\u663e\u7136\u70b9\u4e4b\u95f4\u6ca1\u6709\u73af\u4ee5\u5916\u7684\u8fde\u8fb9\uff08\u5426\u5219\u4f1a\u5728\u4e0a\u9762\u7684\u4e00\u6b65\u4e2d\u4f18\u5316\u6389\uff09\uff0c\u6309\u7167\u8bc1\u660e\u4e2d\u7684\u601d\u8def\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n\n$\\texttt{code:}$\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<fstream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define Set(a) memset(a,0,sizeof(a))\n#define F(i,a,b) for(register int i=a,i##end=b;i<=i##end;++i)\n#define UF(i,a,b) for(register int i=a,i##end=b;i>=i##end;--i)\n#define openf(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\n#define re register\n#define ri re int\n#define il inline\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate<typename T> inline T rd(T& x)\n{\n\tT f=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+(T)(c-'0');\n\tx*=f;\n\treturn x;\n}\nll rd(){ll x;rd(x);return x;}\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\nconst int inf=1<<30;\n\nconst int N=100005;\nconst int M=200005;\nint u[M],v[M];\nint head[N],to[M*2],nxt[M*2],tot=0;\nvoid add(int u,int v){to[++tot]=v;nxt[tot]=head[u];head[u]=tot;}\nint stk[N],top=0;\nbool in[N];\nbool dfs(int u,int f)\n{\n\tstk[++top]=u;\n\tif(in[u]) return 1;\n\tin[u]=1;\n\tfor(ri i=head[u];i;i=nxt[i]) if(to[i]!=f)\n\t{\n\t\tbool x=dfs(to[i],u);\n\t\tif(x) return 1;\n\t}\n\t--top;in[u]=0;return 0;\n}\nbool col[N];\nvoid dfs2(int u,int f,bool c)\n{\n\tcol[u]=c;\n\tfor(ri i=head[u];i;i=nxt[i]) if(to[i]!=f) dfs2(to[i],u,c^1);\n}\nint nnxt[N];bool in2[N];\nint main()\n{\n\tint n=rd();int m=rd();int k=rd();\n\tF(i,1,m) {rd(u[i]);rd(v[i]);add(u[i],v[i]);add(v[i],u[i]);}\n\tbool x=dfs(1,0);\n\tif(!x)\n\t{\n\t\tdfs2(1,0,0);k=(k+1)/2;\n\t\tint c[2];c[0]=c[1]=0;\n\t\tF(i,1,n) ++c[col[i]];\n\t\tputs(\"1\");\n\t\tif(c[0]>=k) F(i,1,n) {if(col[i]==0) printf(\"%d \",i),--k;if(!k) break;}\n\t\telse F(i,1,n) {if(col[i]==1) printf(\"%d \",i),--k;if(!k) break;}\n\t\tputs(\"\");\n\t}\n\telse\n\t{\n\t\tint u0=stk[top];--top;int lst=u0;in2[u0]=1;\n\t\twhile(stk[top]!=u0)\n\t\t{\n\t\t\tnnxt[stk[top]]=lst;\n\t\t\tin2[stk[top]]=1;\n\t\t\tlst=stk[top];\n\t\t\t--top;\n\t\t}\n\t\tnnxt[u0]=lst;\n\t\tF(i,1,m)\n\t\t{\n\t\t\tint a=u[i],b=v[i];\n\t\t\tif(in2[a]&&in2[b]) if(nnxt[a]!=b&&nnxt[b]!=a)\n\t\t\t{\n\t\t\t\tfor(ri c=nnxt[a];c!=b;c=nnxt[c]) in2[c]=0;\n\t\t\t\tnnxt[a]=b;\n\t\t\t}\n\t\t}\n\t\tint cnt=0;\n\t\tF(i,1,n) if(in2[i]) u0=i,++cnt;\n\t\tif(cnt<=k)\n\t\t{\n\t\t\tputs(\"2\");\n\t\t\tprintf(\"%d\\n\",cnt);\n\t\t\tprintf(\"%d \",u0);\n\t\t\tfor(ri i=nnxt[u0];i!=u0;i=nnxt[i]) printf(\"%d \",i);\n\t\t\tputs(\"\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tputs(\"1\");k=(k+1)/2;\n\t\t\tfor(ri i=u0;k;i=nnxt[nnxt[i]],--k) printf(\"%d \",i);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1592216139,
        "uid": 130151,
        "name": "WYXkk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1364D \u3010Ehab's Last Corollary\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u4e00\u9053\u5f88\u597d\u7684\u201c\u56fe\u8bba+\u6811\u201d\u7684\u9898\u3002\n\n**\u63a8\u8350\u4e00\u9053\u540c\u4e00\u4e2a\u4eba\u51fa\u7684\u7c7b\u4f3c\u7684\u9898\uff1a[Ehab's Last Theorem](https://codeforces.com/contest/1325/problem/F)**\n\n\u9898\u76ee\u6709\u4e91\uff1a\n\n>**I have a proof that for any input you can always solve at least one of these problems, but it's left as an exercise for the reader.**\n\n\u6211\u4eec\u5c31\u6765\u5148\u8bc1\u660e\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u8981\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u4ec0\u4e48\u65f6\u5019\u6211\u4eec\u80fd\u627e\u5230\u4e00\u4e2a\u5927\u5c0f\u4e3a $\\lceil \\frac{k}{2}\\rceil$ \u7684\u72ec\u7acb\u96c6\uff1f\u53ea\u6709\u5f53\u6211\u4eec\u80fd\u5728\u56fe\u4e2d\u627e\u5230\u4e00\u4e2a\u5927\u5c0f\u4e3a $k$ \u7684\u6811\u6216\u4e00\u4e2a\u5927\u5c0f\u4e3a $k$ \u7684\u7b80\u5355\u73af\u65f6\u624d\u53ef\u4ee5\uff0c\u7136\u800c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u56de\u7b54\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e5f\u5c31\u8bc1\u660e\u4e86\u4e00\u5b9a\u6709\u89e3\u3002\n\n\u7b80\u5355\u73af\u5c31\u662f\u4efb\u610f\u73af\u4e0a\u4e0d\u76f8\u90bb\u7684\u70b9\u6ca1\u6709\u8fde\u7ebf\uff0c\u5373 $(v_i,v_{i+1})\\notin E$\u3002\n\n\u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u89e3\u6cd5\uff1a\n\n### \u6cd5\u4e00\n\n\u9996\u5148\u6211\u4eec\u6765\u89e3\u51b3 $n=k$ \u7684\u60c5\u51b5\u3002\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u80fd\u627e\u5230\u72ec\u7acb\u96c6\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\uff0c\u5426\u5219\u5c31\u53ef\u56de\u7b54\u7b2c\u4e00\u4e2a\u95ee\u9898\u3002\n\n\u5982\u679c $n\\neq k$\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e00\u4e2a\u5927\u5c0f\u4e3a $k$ \u7684\u8054\u901a\u5b50\u56fe\uff0c\u7528 $n=k$ \u7684\u65b9\u6cd5\u53bb\u505a\uff0c\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b\u5982\u4f55\u627e\u5230\u4e00\u4e2a\u73af\uff08\u4e0d\u9650\u5927\u5c0f\uff09\u3002\n\n\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u56fe\uff1a\n\n![F](http://image.qingtengbc.com/2020/03/18/4d02aaca97fdd.png)\n\n\u9996\u5148\uff0c\u6211\u4eec\u968f\u4fbf\u4ee5\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\u8fdb\u884c DFS\u3002\u6211\u4eec\u4ee51\u4f4d\u8d77\u70b9\u3002\u90a3\u4e48\uff0c\u6211\u628aDFS\u4e2d\u7ecf\u8fc7\u8fc7\u7684\u8fb9\uff08\u4e5f\u5c31\u662fDFS\u6811\uff09\uff0c\u8fb9\u6743\u4e3a $1$\uff0c\u5176\u4ed6\u4e3a $0$\u3002\u90a3\u4e48\u539f\u56fe\u5c31\u53d8\u6210\u4e86\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![F2](http://image.qingtengbc.com/2020/03/19/56979c11e7fc4.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7531 $1$ \u8fb9\u6784\u6210\u7684\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u867d\u7136\u8fd9\u4e2a\u6027\u8d28\u5bf9\u6211\u4eec\u7684\u89e3\u9898\u6beb\u65e0\u7528\u5904\uff0c\u4f46\u8fd9\u4e2aDFS\u6811\u771f\u7684\u662f\u6ca1\u4ec0\u4e48\u7528\uff0c\u4e86\u89e3\u5c31\u597d\uff0c\u4ed6\u5bf9\u6211\u4eec\u7684\u601d\u8def\u542f\u53d1\u662f\u6709\u4e00\u70b9\u4f5c\u7528\u7684\u3002\u6211\u4eec\u7ee7\u7eed\u8bb2\u9898\uff0c\u73b0\u5728\uff0c\u5982\u679c\u5728DFS\u65f6\uff0c\u6211\u4eec\u4ece $u$ \u51fa\u53d1\uff0c\u627e\u5230\u4e86\u4e00\u4e2a\u70b9 $v$\uff0c\u5982\u679c\u4e4b\u524d $v$ \u5df2\u7ecf\u88ab\u641c\u5230\u8fc7\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u627e\u5230\u4e86\u4e00\u4e2a\u73af\u3002\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u5c31\u81f3\u5c11\u4e3a $dfn_u-dfn_v+1$\u3002\uff08$dfn$ \u8868\u7b2c $i$ \u4e2a\u70b9\u88ab\u904d\u5386\u5230\u7684\u65f6\u95f4\u6233\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint read() {\n    char ch=getchar();\n    int f=1,x=0;\n    while(ch<'0'||ch>'9') {\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return f*x;\n}\n\nconst int maxn=1e5+10;\n\nstruct edge {\n\tint v,next;\n}e[maxn<<2];\n\nint n,h[maxn],h2[maxn],cnt,m,k,cnt2;\nbool ex[maxn],flag,is[maxn];\nstack<int> s;\nvector<int> ans[2];\n\nvoid addedge(int u,int v) {\n\te[++cnt].v=v;\n\te[cnt].next=h[u];\n\th[u]=cnt;\n}\nvoid insert(int u,int v) {\n\taddedge(u,v);\n\taddedge(v,u);\n}\n\nvoid dfs(int u,int fa) {//\u627e\u73af\n\ts.push(u);\n\tex[u]=1;\n\tfor(int i=h[u];i;i=e[i].next) {\n\t\tint v=e[i].v;\n\t\t\n\t\tif(fa!=v&&is[v]) {//is[v]\u5224\u65ad\u7b54\u6211\u4eec\u904d\u5386\u7684\u70b9\u662f\u5426\u5728\u6211\u4eec\u5efa\u7684\u65b0\u56fe\u91cc\n\t\t\tif(ex[v]) {//\u627e\u5230\u5c31\u8f93\u51fa\n\t\t\t\tint sz=s.size();\n\t\t\t\t\n\t\t\t\tfor(int j=0;j<sz;j++) {\n\t\t\t\t\tans[0].push_back(s.top());\n\t\t\t\t\tif(s.top()==v) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ts.pop();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsz=ans[0].size();\n\t\t\t\tprintf(\"2\\n%d\\n\",sz);\n\t\t\t\tfor(int j=0;j<sz;j++) {\n\t\t\t\t\tprintf(\"%d \",ans[0][j]);\n\t\t\t\t}\n\t\t\t\texit(0);\n\t\t\t}\n\t\t\t\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n\ts.pop();\n\tex[u]=0;\n}\n\nvoid color(int u,int fa,int type) {//\u627e\u72ec\u7acb\u96c6\n\tans[type].push_back(u);\n\tfor(int i=h[u];i;i=e[i].next) {\n\t\tint v=e[i].v;\n\t\t\n\t\tif(fa!=v&&is[v]) {\n\t\t\tcolor(v,u,1-type);\n\t\t}\n\t}\n}\n\nvoid create(int u,int fa,int num) {//\u5efa\u65b0\u56fe\n\tis[u]=1;\n\tfor(int i=h[u];i;i=e[i].next) {\n\t\tint v=e[i].v;\n\t\t\n\t\tif(!is[v]) {\n\t\t\tif(flag) {\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tif(num==1) {\n\t\t\t\tflag=1; \n\t\t\t}\n\t\t\tcreate(v,u,num-1);\n\t\t}\n\t}\n}\n\nint main() {\n\tn=read();m=read();k=read();\n\t\n\tfor(int i=1;i<=m;i++) {\n\t\tint a=read(),b=read();\n\t\tinsert(a,b);\n\t}\n\t\n\tm=0;\n\tcreate(1,0,k-1);\n\t\n\tdfs(1,0);\n\t\n\tprintf(\"1\\n\");\n\tcolor(1,0,0);\n\t\n\tif(ans[0].size()<ans[1].size()) {\n\t\tswap(ans[0],ans[1]);\n\t}\n\tint sz=ans[0].size();\n\tsz=min(sz,(k+1)/2);//\u5224\u65ad\u4e00\u4e0b\u6211\u4eec\u627e\u5230\u7684\u6700\u5927\u72ec\u7acb\u96c6\u7684\u5927\u5c0f\u662f\u5426\u4e00\u5b9a\u5c0f\u4e8e ceil(k/2)\n\tfor(int i=0;i<sz;i++) {\n\t\tprintf(\"%d \",ans[0][i]);\n\t}\n\t\n\treturn 0;\n}\n```\n\n### \u6cd5\u4e8c\n\n\u6211\u4eec\u5148\u6765\u627e\u4e00\u4e2a\u7b80\u5355\u73af\uff0c\u5982\u679c\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u5927\u4e8e $k$\uff0c\u67d3\u8272\u6cd5\u627e\u72ec\u7acb\u96c6\uff0c\u5426\u5219\u76f4\u63a5\u8f93\u51fa\u3002",
        "postTime": 1592728621,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1364D \u3010Ehab's Last Corollary\u3011"
    },
    {
        "content": "# \u9898\u89e3 - $\\mathrm{CF1364D}$\n\n## \u9898\u76ee\u610f\u601d\n\n* [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1364D)\n\n## $\\mathrm{Sol}$\n\n* \u6211\u4eec\u9996\u5148\u5148\u8003\u8651\u7b2c\u4e00\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9ed1\u767d\u67d3\u8272\u6765\u5b8c\u6210\u5224\u65ad\uff0c\u590d\u6742\u5ea6$O(n)$\n\n* \u5bf9\u4e8e\u7b2c\u4e8c\u95ee\u5224\u73af\uff0c\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u8fdb\u5165\u73af\u7684\u65f6\u95f4\u6233$id_i$\uff0c\u5982\u679c\u5bf9\u4e8e\u4e24\u4e2a\u70b9$(u,v):k\\leq id_u-id_v$\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\u5bf9\u4e8e$id_i$\u8fd9\u4e2a\u6211\u4eec\u53ea\u8981\u7528$vector$\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\u590d\u6742\u5ea6$O(n)$\n\n## $\\mathrm{Code}$\n\n```cpp\n#include <bits/stdc++.h>\n#define For(i,a,b) for ( int i=(a);i<=(b);i++ )\n#define Dow(i,b,a) for ( int i=(b);i>=(a);i-- )\n#define GO(i,x) for ( int i=head[x];i;i=e[i].nex )\n#define mem(x,s) memset(x,s,sizeof(x))\n#define cpy(x,s) memcpy(x,s,sizeof(x))\n#define YES return puts(\"YES\"),0\n#define NO return puts(\"NO\"),0\n#define GG return puts(\"-1\"),0\n#define pb push_back\nusing namespace std;\n\ninline int read()\n{\n\tint sum=0,ff=1; char ch=getchar();\n\twhile(!isdigit(ch))\n\t{\n\t\tif(ch=='-') ff=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t\tsum=sum*10+(ch^48),ch=getchar();\n\treturn sum*ff;\n}\n\nconst int mod=1e9+7;\nconst int mo=998244353;\nconst int N=1e6+5;\n\nint n,m,vis[N],id[N],ans,s,S,C[N];\nvector<int> G[N],zh,yzc[3];\n\ninline void dfs(int u,int fa)\n{\n\tzh.pb(u);\n\tid[u]=(int)zh.size();\n\tFor(i,0,(int)G[u].size()-1)\n\t{\n\t\tint v=G[u][i];\n\t\tif(v==fa) continue;\n\t\tif(!id[v]) dfs(v,u);\n\t\telse \n\t\t\tif(id[u]-id[v]+1<=s&&id[u]-id[v]+1>=0) \n\t\t\t{\n\t\t\t\tputs(\"2\");\n\t\t\t\tprintf(\"%d\\n\",id[u]-id[v]+1);\n\t\t\t\tFor(j,id[v]-1,id[u]-1) printf(\"%d \",zh[j]);\n\t\t\t\texit(0);\n\t\t\t}\n\t}\n   zh.pop_back();\n}\n\ninline void col(int u,int c)\n{\n\tyzc[c].pb(u);\n\tC[u]=c;\n\tif(yzc[c].size()==S) \n\t{\n\t\tputs(\"1\");\n\t\tFor(i,0,(int)yzc[c].size()-1) printf(\"%d \",yzc[c][i]);\n\t\texit(0);\n\t}\n\tFor(i,0,(int)G[u].size()-1)\n\t{\n\t\tint v=G[u][i];\n\t\tif(~C[v]) continue;\n\t\tcol(v,c^1);\n\t}\n}\n\nint main()\n{\n\tn=read();\n\tm=read();\n\ts=read();\n\tFor(i,1,m) \n\t{\n\t\tint x,y;\n\t\tx=read(),y=read();\n\t\tG[x].pb(y);\n\t\tG[y].pb(x);\n\t}\n\tS=(s+1)/2;\n\tmemset(C,-1,sizeof(C));\n\tdfs(1,0);\n\tcol(1,1);\n\treturn 0;\n}\n\t\n```\n",
        "postTime": 1592204845,
        "uid": 308464,
        "name": "\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1364D \u3010Ehab's Last Corollary\u3011"
    },
    {
        "content": "\u9898\u9762\u662f $Rainy\\_chen$ \u5927\u795e\u7ffb\u8bd1\u7684\uff0c\u5f88\u8be6\u7ec6\u5bf9\u5427\u3002\n\n____\n\n\u6bd4\u8d5b\u5b8c\u53d1\u73b0\u81ea\u5df1\u505a\u6cd5\u548c\u5b98\u65b9\u9898\u89e3\u4e0d\u592a\u4e00\u6837\uff0c\u5c31\u5199\u4e0b\u6765\u4e86\u3002\n\n\u7531\u4e8e\u56fe\u4fdd\u8bc1\u8fde\u901a\uff0c\u5148\u968f\u4fbf\u751f\u6210\u4e00\u68f5\u6811\u51fa\u6765\uff0c\u76f4\u63a5DFS\u5c31\u597d\u4e86\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\u3002\n\n\u5269\u4e0b\u7684\u8fb9\u662f**\u975e\u6811\u8fb9**\uff0c\u4f60\u53d1\u73b0\u975e\u6811\u8fb9\u53ef\u4ee5\u4e0e\u6811\u8fb9\u8fde\u6210\u73af\u3002\n\n\u5176\u5b9e\u975e\u6811\u8fb9\u7ec4\u6210\u7684\u73af\u5f88\u590d\u6742\uff0c\u4f46\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651**\u53ea\u7ecf\u8fc7\u4e00\u6761\u975e\u6811\u8fb9**\u7684\u73af\u3002\n\n\u6211\u4eec\u8ba1\u7b97\u6bcf\u4e2a\u975e\u6811\u8fb9\uff0c\u5b83\u4e0e\u6811\u8fb9\u6784\u6210\u7684\u90a3\u6761**\u73af\u7684\u957f\u5ea6**\uff0c\u628a\u4fe1\u606f\u8bb0\u5728\u90a3\u6761\u975e\u6811\u8fb9\u4e0a\u3002\n\n\u7136\u540e\u627e\u51fa\u6700\u5c0f\u7684\u73af\uff08\u6ce8\u610f\u8fd9\u4e2a\u73af\u662f\u53ea\u7ecf\u8fc7\u4e00\u6761\u975e\u6811\u8fb9\u7684\u73af\uff0c\u4e0d\u4e00\u5b9a\u662f\u5168\u5c40\u6700\u5c0f\u73af\uff09\u3002\n\n\u4e09\u79cd\u60c5\u51b5\uff1a\n\n**1.**\u538b\u6839\u6ca1\u73af\uff0c\u5c31\u662f\u68f5\u6811\uff0c\u5947\u6570\u548c\u5076\u6570\u5c42\u80af\u5b9a\u6709\u4e00\u5c42\u6ee1\u8db3\u7684\uff0c\u8f93\u51fa\u8fd9\u4e2a\u72ec\u7acb\u96c6\u5c31\u597d\u4e86\u3002\n\n**2.**\u6700\u5c0f\u73af\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e $k$\uff0c\u90a3\u592a\u597d\u4e86\uff0c\u76f4\u63a5\u6309 $2$ \u7684\u65b9\u6848\u628a\u73af\u8f93\u51fa\u51fa\u6765\u3002\n\n**3.**\u6700\u5c0f\u73af\u957f\u5ea6\u5927\u4e8e $k$\uff0c\u90a3\u548b\u529e\u561b\uff1f\u4f60\u4f1a\u53d1\u73b0\u5982\u679c\u4f60\u5728\u8fd9\u6761\u73af\u4e0a\u6bcf\u9694\u4e24\u4e2a\u70b9\u9009\u4e00\u4e2a\u70b9\uff0c\u4e00\u5b9a\u662f\u4e2a\u72ec\u7acb\u96c6\uff0c\u800c\u4e14\u6b63\u597d\u80fd\u9009\u51fa $\\left\\lceil\\dfrac k2\\right\\rceil$ \u4e2a\u70b9\u3002\n\n\u4f46\u4f60\u6709\u4e2a\u7591\u95ee\uff1a\u9009\u51fa\u7684\u8fd9\u4e9b\u70b9\u4f1a\u4e0d\u4f1a\u6709\u8fde\u8fb9\u5462\uff1f\n\n\u56de\u7b54\uff1a\u5982\u679c\u6709\u8fde\u8fb9\uff0c\u90a3\u4e48\u4f60**\u9009\u51fa\u7684\u8fd9\u4e2a\u73af**\u4e00\u5b9a\u4e0d\u662f\u6700\u5c0f\u73af\uff0c\u53ea\u8981\u5b83\u6709\u5f26\uff0c\u5c31\u4e00\u5b9a\u5b58\u5728\u66f4\u5c0f\u7684\u73af\uff0c\u653e\u4e00\u5f20\u56fe\u4f1a\u66f4\u597d\u7406\u89e3\uff1a\n\n![](https://files-cdn.cnblogs.com/files/clever-sheep/T1.bmp)\n\n\u5168\u5c40\u6700\u5c0f\u73af\u663e\u7136\u662f6-10-8-9\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u8003\u8651\u4e00\u6761\u975e\u6811\u8fb9\u7684\u73af\uff0c\u53d1\u73b0\u8fd9\u5e76\u4e0d\u4f1a\u5f71\u54cd1 6 8\u6210\u4e3a\u72ec\u7acb\u96c6\u3002\n\n\u5982\u679c6 8\u6709\u8fde\u8fb9\uff0c\u90a3\u4e48\u6700\u5c0f\u73af\u80af\u5b9a\u4f1a\u7f29\u5c0f\uff0c\u90a3\u4e5f\u5c31\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u6761\u66f4\u5927\u7684\u73af\u4e86\u3002\n\n____\n\n\u4ee3\u7801\u4e0d\u7b97\u77ed\uff0c\u4f46\u662f\u611f\u89c9\u4e0d\u9700\u8981\u4efb\u4f55\u79d1\u6280\uff0c\u6bd4\u5b98\u65b9\u9898\u89e3\u5176\u5b9e\u597d\u7406\u89e3\u4e9b\uff1f\u5927\u6982\u3002\n\n\u6211\u7684\u4ee3\u7801\u592a\u4e11\u4e86\uff0c\u5c31\u4e0d\u653e\u4e86\u3002\u3002\u3002",
        "postTime": 1592192724,
        "uid": 102726,
        "name": "Flandre_495",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1364D \u3010Ehab's Last Corollary\u3011"
    },
    {
        "content": "\u60f3\u4e00\u60f3\uff0c\u300c\u7b80\u5355\u73af\u300d\u548c\u300c\u72ec\u7acb\u96c6\u300d\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\n\n**\u5982\u679c\u4e00\u4e2a\u5927\u5c0f\u4e3a $s$ \u7684\u73af\u662f\u4e0d\u53ef\u5206\u5272\u7684\uff0c\u90a3\u4e48\uff0c\u628a\u73af\u4e0a\u7684\u5143\u7d20\u9694\u4e00\u4f4d\u53d6\u4e00\u4e2a\uff0c\u5c31\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u5927\u5c0f\u4e3a $\\lfloor\\frac{s}{2}\\rfloor$ \u7684\u72ec\u7acb\u96c6\u3002**\n\n\n\u4e0b\u56fe\u5c55\u793a\u7684\u662f $s = 5$ \u7684\u4e00\u79cd\u5206\u6cd5\uff0c\u5206\u5272\u51fa\u4e86 $\\{1, 3\\}$ \u548c $\\{ 2, 4\\}$ \u4e24\u4e2a\u72ec\u7acb\u96c6\uff1a\n\n![image.png](https://i.loli.net/2020/06/15/3QiXPzAgljcpuF7.png)\n\n\u5173\u952e\u5728\u4e8e\u627e\u51fa\u4e00\u4e2a\u300c\u4e0d\u53ef\u5206\u5272\u7684\u73af\u300d\uff0c\u6bd4\u65b9\u8bf4\u5b83\u7684\u5927\u5c0f\u4e3a $a$\uff0c\u8981\u662f $a \\le k$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5b8c\u6210\u4efb\u52a1 2 \u4e86\uff0c\u76f4\u63a5\u8f93\u51fa\u5b83\u5c31\u597d\uff0c\u5426\u5219\uff08$a > k$\uff09\uff0c\u5fc5\u7136\u6709 $\\lfloor\\frac{a}{2}\\rfloor \\ge \\lceil\\frac{k}{2}\\rceil$\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u5728\u8fd9\u4e2a\u5206\u5272\u51fa\u6765\u7684\u72ec\u7acb\u96c6\u4e2d**\u518d\u5206\u5272\u4e00\u4e2a\u5927\u5c0f\u4e3a $\\lceil\\frac{k}{2}\\rceil$ \u7684\u72ec\u7acb\u96c6**\u5c31\u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1 1 \u4e86\u3002\n\n\u6240\u4ee5\uff0c\u5982\u679c\u6c42\u51fa\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u73af\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5728\u8fd9\u4e2a\u56fe\u4e2d\u968f\u4fbf\u627e\u51fa\u4e00\u4e2a\u73af\uff0c\u628a\u70b9\u96c6\u6309\u7167\u987a\u5e8f\u5b58\u5728\u4e00\u4e2a `deque`\uff08\u53cc\u7aef\u961f\u5217\uff09\u91cc\u9762\u3002\n\n\u7136\u540e\uff0c\u904d\u5386\u6bcf\u4e00\u6761\u8fb9 $\\left<u, v\\right>$\uff0c\u5982\u679c $\\left<u, v\\right>$ **\u5207\u5272**\u4e86\u73b0\u6709\u7684\u73af\uff0c\u90a3\u4e48\uff0c\u5c31\u518d\u5272\u51fa\u6765\u7684\u4e24\u4e2a\u5c0f\u73af\u4e2d\u4efb\u9009\u4e00\u4e2a\u4fdd\u7559\uff0c$m$ \u6761\u8fb9\u90fd\u5272\u5b8c\u4e3a\u6b62\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\uff0c\u5982\u679c $u, v$ \u90fd\u5728\u5f53\u524d\u73af\u4e2d\uff0c\u4e14 $\\left<u, v\\right>$ \u4e0d\u662f\u4e00\u6761\u73af\u4e0a\u7684\u8fb9\uff08\u53ef\u4ee5\u6bd4\u8f83 $u$ \u548c $v$ \u5728\u73af\u4e2d\u7684\u4f4d\u7f6e\u5dee\u662f\u4e0d\u662f $1$ \u6765\u786e\u5b9a\uff09\uff0c\u5219 $\\left<u, v\\right>$ \u5fc5\u7136\u5207\u5272\u5f53\u524d\u73af\uff0c\u5982\u56fe\uff1a\n\n![image.png](https://i.loli.net/2020/06/15/zCLamQtUVfoDiIY.png)\n\n\u539f\u6765 `deque` \u5f53\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u662f $\\{1, 2, 3, 4, 5\\}$\uff0c\u73b0\u5728\u6765\u4e86\u6761\u8fb9 $\\left<2, 4 \\right>$ \u5207\u5272\uff0c\u90a3\u4e48\uff0c\u5fc5\u7136\u6709\u4e00\u4e2a\u65b0\u7684\u5c0f\u73af\u7aef\u70b9\u4e3a $u = 2$ \u548c $v = 4$\uff0c\u90a3\u4e48\u628a\u4e24\u7aef\u5176\u4f59\u7684\u5143\u7d20\u5f39\u51fa\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u65b0\u7684\u5c0f\u73af $\\{ 2, 3, 4 \\}$\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u8fd9\u5f20\u56fe\u4e00\u4e2a\u73af\u90fd\u6ca1\u6709\uff0c\u5219\u8fd9\u5f20\u56fe\u662f\u6811\uff0c\u6811\u5fc5\u7136\u662f\u4e8c\u5206\u56fe\uff0c\u76f4\u63a5\u4e8c\u5206\u56fe\u67d3\u8272\u540e\u5728\u8f83\u5927\u7684\u989c\u8272\u96c6\u4e2d\u63d0\u53d6 $\\lceil\\frac{k}{2}\\rceil$ \u4e2a\u6765\u5b8c\u6210\u4efb\u52a1 1 \u5c31\u597d\u4e86\u3002\n\n\u521d\u59cb DFS \u627e\u73af\u662f $\\mathcal O(n)$ \u7684\uff0c\u904d\u5386\u8fb9\u96c6\u662f $\\mathcal O(n)$ \u7684\uff0c\u73af\u4e2d\u6700\u591a\u6709 $n$ \u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u5f39\u51fa\u6b21\u6570\u7684\u603b\u548c\u4e5f\u662f $\\mathcal O(n)$ \u7684\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\uff08\u8fd9\u91cc\u4e0d\u533a\u5206 $n$ \u548c $m$\uff09\u3002\n\n\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nvector<int> G[N];\ndeque<int> circ;\nvector<int> s, col[2];\nint n, m, k, pos[N], u[N], v[N];\nbool in_circ[N];\nvoid DFS(int u)\n{\n\tpos[u] = s.size();\n\ts.push_back(u);\n\tcol[pos[u] & 1].push_back(u);\n\tfor(int v : G[u])\n\t{\n\t\tif(pos[v] == -1) DFS(v);\n\t\telse if(circ.empty() && pos[u] > pos[v] + 1)\n\t\t{\n\t\t\tfor(int i = pos[v]; i <= pos[u]; i++)\n\t\t\t{\n\t\t\t\tcirc.push_back(s[i]);\n\t\t\t\tin_circ[s[i]] = true;\n\t\t\t}\n\t\t}\n\t}\n\ts.pop_back();\n}\nint main()\n{\n\tmemset(pos, -1, sizeof pos);\n\tcin >> n >> m >> k;\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tcin >> u[i] >> v[i];\n\t\tG[u[i]].push_back(v[i]);\n\t\tG[v[i]].push_back(u[i]);\n\t}\n\tDFS(1);\n\tif(circ.empty())\n\t{\n\t\tcout << 1 << endl; \n\t\tif(col[0].size() < col[1].size()) swap(col[0], col[1]);\n\t\tfor(int i = 0; i < (k + 1) / 2; i++) cout << col[0][i] << ' ';\n\t\treturn 0;\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tif(in_circ[u[i]] && in_circ[v[i]] && abs(pos[u[i]] - pos[v[i]]) != 1)\n\t\t{\n\t\t\twhile(circ.front() != u[i] && circ.front() != v[i]) \n\t\t\t\tin_circ[circ.front()] = false, circ.pop_front();\n\t\t\twhile(circ.back() != u[i] && circ.back() != v[i]) \n\t\t\t\tin_circ[circ.back()] = false, circ.pop_back();\n\t\t}\n\t}\n\tif(circ.size() <= k)\n\t{\n\t\tcout << 2 << endl;\n\t\tcout << circ.size() << endl;\n\t\tfor(int i = 0; i < circ.size(); i++) cout << circ[i] << ' ';\n\t}\n\telse\n\t{\n\t\tcout << 1 << endl;\n\t\tfor(int i = 0; i < (k + 1) / 2; i++) cout << circ[i * 2] << ' ';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1592151856,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1364D \u3010Ehab's Last Corollary\u3011"
    },
    {
        "content": "\u8003\u8651\u5efa\u7acb\u65e0\u5411\u56fe\u7684 dfs \u6811\u5e76\u6309\u7167\u7b2c\u4e00\u6b21\u8d70\u8fc7\u7684\u987a\u5e8f\u4e3a\u6811\u8fb9\u5b9a\u5411\uff0c\u663e\u7136\u8fd9\u4e48\u505a\u5f97\u5230\u7684\u975e\u6811\u8fb9\u90fd\u662f\u8fd4\u7956\u8fb9\u3002\n\n\u8003\u8651\u679a\u4e3e\u6240\u6709\u8fd4\u7956\u8fb9\uff0c\u5982\u679c\u5bf9\u5e94\u7684\u8def\u5f84\u957f\u5ea6\u4e0d\u8d85\u8fc7 $k$ \u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u5426\u5219\u6211\u4eec\u5206\u4e24\u7c7b\u8ba8\u8bba\uff1a\n\n- $m = n - 1$ \u5373\u539f\u56fe\u662f\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u6309\u7167\u6df1\u5ea6\u7684\u5947\u5076\u6027\u5206\u7ec4\uff0c\u663e\u7136\u8fd9\u6837\u8f83\u5927\u7684\u4e00\u7ec4\u81f3\u5c11\u6709 $\\lceil \\frac{n}{2} \\rceil$ \u4e2a\u70b9\uff0c\u4e14 $\\lceil \\frac{k}{2} \\rceil \\leq \\lceil \\frac{n}{2} \\rceil$\uff0c\u968f\u4fbf\u4ece\u96c6\u5408\u91cc\u9762\u9009\u51e0\u4e2a\u70b9\u5c31\u884c\u4e86\uff1b\n\n- $m < n - 1$\uff0c\u90a3\u4e48\u6839\u636e\u6700\u5f00\u59cb\u679a\u4e3e\u8fd4\u7956\u8fb9\u5f97\u5230\u7684\u6027\u8d28\uff0c\u6211\u4eec\u77e5\u9053 dfs \u6811\u7684\u6700\u5927\u6df1\u5ea6\u81f3\u5c11\u4e3a $k$\uff0c\u5e76\u4e14\u4efb\u610f\u5177\u6709\u7956\u5148-\u5b50\u5b59\u5173\u7cfb\u4e14\u6df1\u5ea6\u5dee\u5728 $k$ \u4ee5\u5185\u7684\u70b9\u5bf9\u6ca1\u6709\u8fd4\u7956\u8fb9\u76f8\u8fde\uff0c\u5229\u7528\u4ee5\u4e0a\u6027\u8d28\u6211\u4eec\u5c06\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9 $x$ \u6bcf\u6b21\u5411\u4e0a\u722c\u4e24\u5c42\u5f97\u5230\u7684\u6240\u6709\u8282\u70b9\u8f93\u51fa\u524d $\\lceil \\frac{k}{2} \\rceil$ \u4e2a\u5373\u53ef\u3002\n\n```cpp\n/*\n\u8c8c\u4f3c\u6839\u636e\u4e4b\u524d PMOI \u7684\u90a3\u9053\u9898\u7684\u5957\u8def\n\u5148\u5efa dfs \u6811\uff0c\u5982\u679c\u53f6\u5b50\u8282\u70b9 >= lceil k/2 rceil \u4e2a\u53f6\u5b50\u5c31\u76f4\u63a5\u8f93\u51fa\n\u611f\u89c9\u4e0d\u662f\u5f88\u5bf9\uff0c\u6811\u7684\u8bdd\u5c31\u53f6\u5b50\u8282\u70b9\u5982\u679c\u4e0d\u8d85\u8fc7 k/2 \u548b\u529e\u5462\u2026\u2026 \nAfter reading the solution\n\u679c\u7136\u8fd8\u662f\u5e94\u8be5\u5148\u627e\u7b80\u5355\u73af\u5417\u2026\u2026 \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 2e5 + 5;\nint n,m,k,l,head[Len],cnt,vis[Len],dep[Len],fa[Len],mx;\nvector<int> v[2];\nstruct node\n{\n\tint next,to;\n}edge[Len << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nvoid dfs(int x,int f)\n{\n\tvis[x] = 1;\n\tdep[x] = dep[f] + 1;\n\tv[dep[x] % 2].push_back(x);\n\tif(dep[x] > dep[mx]) mx = x;\n\tfa[x] = f;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f) continue;\n\t\tif(vis[to]) \n\t\t{\n\t\t\tif(dep[x] > dep[to] && dep[x] - dep[to] < k) \n\t\t\t{\n\t\t\t\tputs(\"2\");\n\t\t\t\tprintf(\"%d\\n\",dep[x] - dep[to] + 1);\n\t\t\t\tint now = x;\n\t\t\t\twhile(now != to){printf(\"%d \",now);now = fa[now];}\n\t\t\t\tprintf(\"%d \",now);\n\t\t\t\texit(0);\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(to , x);\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tif(k % 2 == 0) l = k / 2;\n\telse l = k / 2 + 1;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tadd(x , y);\n\t\tadd(y , x);\n\t}\n\tdfs(1 , 0);\n\tif(m == n - 1)\n\t{\n\t\tif(v[0].size() < v[1].size()) swap(v[0] , v[1]);\n\t\tputs(\"1\");\n\t\tfor(int i = 0 ; i < l ; i ++) printf(\"%d \",v[0][i]);\n\t\treturn 0;\n\t}\n\tputs(\"1\");\n\twhile(l --)\n\t{\n\t\tprintf(\"%d \",mx);\n\t\tmx = fa[mx];\n\t\tmx = fa[mx];\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1648692794,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1364D Ehab's Last Corollary"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\u548c\u4e00\u4e2a\u6b63\u6574\u6570 $k$\uff0c\u6c42\u51fa\u4e00\u4e2a\u5927\u5c0f\u4e0d\u8d85\u8fc7 $k$ \u7684\u73af\u6216\u8005\u662f\u6070\u597d\u4e3a $\\left\\lceil\\frac{k}{2}\\right\\rceil$ \u7684\u72ec\u7acb\u96c6\u3002\n\n$\\texttt{Data Range:}3\\leq k\\leq n\\leq 10^5,n-1\\leq m\\leq 2\\times 10^5$\n\n### \u9898\u89e3\n\n\u8003\u8651\u4e00\u4e2a\u73af\uff0c\u73af\u4e0a\u9762\u6ca1\u6709\u5176\u4ed6\u8fde\u63a5\u4e0d\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u8fb9\uff0c\u5982\u679c\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 $k$ \u76f4\u63a5\u56de\u7b54\u8fd9\u4e2a\u73af\u5373\u53ef\u3002\n\n\u5426\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u9694\u4e00\u4e2a\u70b9\u9009\u4e00\u4e2a\u70b9\u7684\u65b9\u5f0f\u627e\u5230\u4e00\u4e2a\u81f3\u5c11\u4e3a $\\left\\lceil\\frac{k}{2}\\right\\rceil$ \u7684\u72ec\u7acb\u96c6\uff0c\u56de\u7b54\u5b83\u7684\u4e00\u4e2a\u5b50\u96c6\u5373\u53ef\u3002\n\n\u4e8e\u662f\u5c31\u60f3\u5230\u8981\u53bb\u6c42\u8fd9\u4e48\u4e00\u4e2a\u73af\uff0c\u8d5b\u573a\u4e0a\u56e0\u4e3a\u6c42\u73af\u6c42\u9519\u4e86\u5bfc\u81f4 $\\texttt{FST}$\uff0c\u8eab\u8d25\u540d\u88c2\u3002\n\n\u5982\u679c\u6ca1\u6709\u73af\u76f4\u63a5\u4e8c\u5206\u56fe\u67d3\u8272\u56de\u7b54\u72ec\u7acb\u96c6\u5373\u53ef\u3002\n\n\u5426\u5219\uff0c\u9996\u5148\u6309\u7167 $\\texttt{Kruskal}$ \u7684\u8fc7\u7a0b\u627e\u5230\u4e00\u4e2a\u73af\uff0c\u7136\u540e\u9010\u4e00\u68c0\u67e5\u6240\u6709\u7684\u8fb9\u3002\n\n\u5982\u679c\u8fd9\u6761\u8fb9\u662f\u539f\u56fe\u4e0a\u94a6\u5b9a\u7684\u751f\u6210\u57fa\u73af\u6811\u4e0a\u7684\u8fb9\uff0c\u4e0d\u7ba1\u3002\n\n\u5426\u5219\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u8fde\u63a5\u4e86\u73af\u4e0a\u4e24\u4e2a\u4e0d\u76f8\u90bb\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u73af\u88ab\u8fd9\u6761\u8fb9\u5206\u6210\u4e86\u4e24\u4e2a\u5b50\u73af\uff0c\u968f\u673a\u53d6\u4e00\u4e2a\u5373\u53ef\u3002\n\n\u5148\u5bf9\u73af\u4e0a\u7684\u70b9\u6309\u987a\u5e8f\u91cd\u65b0\u6807\u53f7\uff0c\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u533a\u95f4\u6765\u8868\u793a\u4e00\u6bb5\u73af\u4e86\uff0c\u66f4\u65b0\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u6765\u66f4\u65b0\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51;\nstruct Edge{\n\tll to,prev;\n};\nEdge ed[MAXN<<1];\nll n,m,kk,tot,cur,nxt,fx,fy,totx,l,r,pu,pv,pp;\nll u[MAXN],v[MAXN],ffa[MAXN],fa[MAXN],indSet[MAXN],rp[MAXN];\nll tag[MAXN],last[MAXN],depth[MAXN],cx[2];\nvector<ll>res;\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline ll find(ll x)\n{\n\treturn x==ffa[x]?x:ffa[x]=find(ffa[x]);\n}\ninline void addEdge(ll from,ll to)\n{\n\ted[++tot].prev=last[from];\n\ted[tot].to=to;\n\tlast[from]=tot;\n}\ninline void dfs(ll node,ll f)\n{\n\tfa[node]=f,cx[depth[node]=depth[f]^1]++;\n\tfor(register int i=last[node];i;i=ed[i].prev)\n\t{\n\t\ted[i].to!=f?dfs(ed[i].to,node):(void)(1);\n\t}\n}\nint main()\n{\n\tn=read(),m=read(),kk=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tffa[i]=i;\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tu[i]=read(),v[i]=read();\n\t\tif((fx=find(u[i]))!=(fy=find(v[i])))\n\t\t{\n\t\t\taddEdge(u[i],v[i]),addEdge(v[i],u[i]),ffa[fy]=fx,tag[i]=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(totx)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttag[i]=1;\n\t\t\tdfs(u[i],0),indSet[++totx]=cur=v[i];\n\t\t\tfor(;cur!=u[i];indSet[++totx]=cur=fa[cur]);\n\t\t}\n\t}\n\tif(!totx)\n\t{\n\t\tdfs(1,0),pp=cx[0]>cx[1]?0:1;\n\t\tfor(register int i=1;i<=n;i++)\n\t\t{\n\t\t\tdepth[i]==pp?res.push_back(i):(void)(1);\n\t\t}\n\t\tputs(\"1\");\n\t\tfor(register int i=0;i<(kk+1)>>1;i++)\n\t\t{\n\t\t\tprintf(\"%d \",res[i]);\n\t\t}\n\t\treturn 0;\n\t}\n\tfor(register int i=1;i<=totx;i++)\n\t{\n\t\trp[indSet[i]]=i;\n\t}\n\tl=1,r=totx;\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tif(!tag[i])\n\t\t{\n\t\t\tpu=rp[u[i]],pv=rp[v[i]],pu>pv?swap(pu,pv):(void)(1);\n\t\t\tif(l<=pu&&pu<=r&&l<=pv&&pv<=r)\n\t\t\t{\n\t\t\t\tl=pu,r=pv;\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=l;i<=r;i++)\n\t{\n\t\tres.push_back(indSet[i]);\n\t}\n\tif(r-l+1<=kk)\n\t{\n\t\tprintf(\"2\\n%d\\n\",r-l+1);\n\t\tfor(register int i=0;i<r-l+1;i++)\n\t\t{\n\t\t\tprintf(\"%d \",res[i]);\n\t\t}\n\t}\n\telse\n\t{\n\t\tputs(\"1\");\n\t\tfor(register int i=0,j=0;j<(kk+1)>>1;i+=2,j++)\n\t\t{\n\t\t\tprintf(\"%d \",res[i]);\n\t\t}\n\t}\n}\n\n```",
        "postTime": 1592212985,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1364D \u3010Ehab's Last Corollary\u3011"
    }
]