[
    {
        "content": "## \u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\n~~\uff08\u867d\u7136\u6211UKE\u4e86\u4e24\u6b21\uff09~~  \n\u8981\u6ce8\u610f\u51e0\u70b9  \n\u7b2c\u4e00\u4e2a\uff0c\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684m\u4e2a\u64cd\u4f5c\u4e0d\u662f\u7acb\u5373\u6267\u884c\u7684\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u4eec\u7406\u89e3\u6210m\u4e2a\u51fd\u6570\uff0c\u9884\u8bbe\u597d\u4f46\u4e0d\u4e00\u5b9a\u4f1a\u8c03\u7528\u3002  \n\u7b2c\u4e8c\u4e2a\uff0c\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u4e0d\u4f7f\u7528\u4e00\u5b9a\u6280\u5de7\u53ef\u80fd\u4f1a\u8d85\u65f6~~\uff08\u8bd5\u8bd5\u7ebf\u6bb5\u6811\uff09~~  \n\u56e0\u6b64\u672c\u9053\u9898\u53ef\u4ee5\u4f7f\u7528**\u5dee\u5206\u6280\u5de7**\u3002  \n\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\u5dee\u5206\uff1a  \n#### 1. \u5bf9\u6570\u7ec4\u8fdb\u884c\u5dee\u5206  \n```cpp\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        for(int j=x;j<=y;j++)\n        {\n            delta[opt[j].l]+=opt[j].val;\n            delta[opt[j].r+1]-=opt[j].val;\n        }\n    }\n```\n#### 2.\u9488\u5bf9\u64cd\u4f5c\uff08\u51fd\u6570\uff09\u8fdb\u884c\u5dee\u5206\n```cpp\nfor(int i=1;i<=k;i++)\n    {\n        read(x);\n        read(y);\n        cnt[x]++;//cnt[i]\u8868\u793a\u7b2ci\u4e2a\u51fd\u6570\u7684\u6267\u884c\u6b21\u6570\n        cnt[y+1]--;\n    }\n```  \n\u8fd9\u91cc\u5f88\u660e\u663e\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u66f4\u4f18  \n\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f ~~\uff08[\u8840\u6dcb\u6dcb\u7684\u6559\u8bad](https://www.luogu.org/recordnew/show/19398903)\uff09~~  \n  \n\u4e0a\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <iostream>\n#define ll long long\nusing namespace std;\ninline void read( ll &x ) {\n    x = 0; char ch = getchar();\n    for( ; ch < '0' || ch > '9'; ch = getchar() );\n    for( ; ch >= '0' && ch <= '9'; ch = getchar() )\n        x = x * 10 + ch - '0';\n    return;\n}\nconst int N=1e5+10;\nll a[N];\nll delta[N];\nll cnt[N];\nll d;\nstruct node\n{\n\tll l;\n\tll r;\n\tll val;\n};\nnode opt[N];\nint n,m,k;\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tread(a[i]);\n\t\tdelta[i]=a[i]-a[i-1];\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tread(opt[i].l);\n\t\tread(opt[i].r);\n\t\tread(opt[i].val);\n\t}\n\tll x,y;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tread(x);\n\t\tread(y);\n\t\tcnt[x]++;\n\t\tcnt[y+1]--;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcnt[i]+=cnt[i-1];\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\t delta[opt[i].l]+=opt[i].val*cnt[i];\n\t\t delta[opt[i].r+1]-=opt[i].val*cnt[i];\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdelta[i]+=delta[i-1];\n\t\tcout<<delta[i]<<' ';\n\t}\n\treturn 0;\n}\n```\n  \n\u8c22\u8c22\u89c2\u770b\uff0c\u8c22\u8c22\u3002",
        "postTime": 1558882765,
        "uid": 118383,
        "name": "William_Fangs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF295A \u3010Greg and Array\u3011"
    },
    {
        "content": "#### \u770b\u4e86\u9898\u89e3\u91ccdalao\u4ee3\u7801\u540e...\u849f\u84bb\u8868\u793a\u5f88\u597d\u59470.0\n#### \u8fd9\u9898\u7ebf\u6bb5\u6811\u597d\u60f3\u597d\u5199\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u7528\u7ebf\u6bb5\u6811\u5462\uff1f\n\u7ebf\u6bb5\u6811\u4e0d\u719f\u8bf7\u81ea\u884c\u8df3\u8f6c\uff1a[P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1](https://www.luogu.org/problemnew/show/P3372)\n\n---\n### \u849f\u84bb\u7ebf\u6bb5\u6811\u9898\u89e3\u5949\u4e0a\n---\n\u9996\u5148\u6211\u4eec\u770b\u4e00\u770b\u6570\u636e\u89c4\u6a21\uff1a(1<=n,m,k<=10^5)\n\n\u4f3c\u4e4e\u7ebf\u6bb5\u6811\u53ef\u4ee5\u76f4\u63a5\u8fc7\u662f\u4e0d\u662f?\n\n\u4e8e\u662f\u6211\u4eec\u4e0a\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u6a21\u677f\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\nconst int N=100010;\ntypedef long long ll;//\u4e3a\u9632\u6b62\u51fa\u73b0\u610f\u5916\uff0c\u6211\u5c06\u6240\u6709int\u6362\u4e3a\u4e86long long\nstruct node\n{\n    ll l,r;\n    ll add;\n} cz[N];//\u5b58\u50a8\u64cd\u4f5c\nll n,m,K;\nll d[N];\nll tot_root;//\u7ebf\u6bb5\u6811\u6839\u8282\u70b9\nstruct node0\n{\n    ll l,r;//\u7ba1\u8f96\u8303\u56f4\n    ll lc,rc;//\u5de6\u53f3\u513f\u5b50\n    ll sum,delay;//\u5757\u6807\u8bb0\u548c\u61d2\u60f0\u6807\u8bb0\n} tree[N*2];//\u6211\u7528\u7684\u662f\u52a8\u6001\u5b58\u50a8\uff0c\u4e8c\u500d\u7a7a\u95f4\u5373\u53ef\nll tot;\nvoid push_up(ll root)//\u8bf7\u4e0d\u8981\u7ea0\u7ed3\u6211\u5947\u8469\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\n{\n    ll lc=tree[root].lc,rc=tree[root].rc;\n    tree[root].sum=tree[lc].sum+tree[rc].sum+tree[lc].delay*(tree[lc].r-tree[lc].l+1)+tree[rc].delay*(tree[rc].r-tree[rc].l+1);\n}\nvoid push_down(ll root)//\u8bf7\u4e0d\u8981\u7ea0\u7ed3\u6211\u5947\u8469\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\n{\n    ll lc=tree[root].lc,rc=tree[root].rc;\n    tree[lc].delay+=tree[root].delay;\n    tree[rc].delay+=tree[root].delay;\n    tree[root].delay=0;\n}\nvoid creat(ll & root,ll l,ll r)//\u8bf7\u4e0d\u8981\u7ea0\u7ed3\u6211\u5947\u8469\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\n{\n    root=++tot,tree[root].l=l,tree[root].r=r;\n    tree[root].lc=tree[root].rc=-1,tree[root].delay=0;\n    if(l==r)\n        tree[root].sum=d[l];\n    else\n    {\n        ll mid=(l+r)/2;\n        creat(tree[root].lc,l,mid),creat(tree[root].rc,mid+1,r);\n        push_up(root);\n    }\n}\nvoid add(ll root,ll l,ll r,ll zhi)//\u8bf7\u4e0d\u8981\u7ea0\u7ed3\u6211\u5947\u8469\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\n{\n    if(tree[root].l>=l && tree[root].r<=r)\n    {\n        tree[root].delay+=zhi;\n        return ;\n    }\n    push_down(root);\n    ll mid=(tree[root].r+tree[root].l)/2;\n    if(l>mid)\n        add(tree[root].rc,l,r,zhi);\n    else if(r<=mid)\n        add(tree[root].lc,l,r,zhi);\n    else\n        add(tree[root].lc,l,mid,zhi),add(tree[root].rc,mid+1,r,zhi);\n    push_up(root);\n}\nvoid dfs(ll root,ll l,ll r)//\u8bf7\u4e0d\u8981\u7ea0\u7ed3\u6211\u5947\u8469\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\n{\n    if(l==r)\n    {\n        d[l]=tree[root].sum+tree[root].delay;\n        return ;\n    }\n    push_down(root);\n    ll mid=(tree[root].r+tree[root].l)/2;\n    if(l>mid)\n        dfs(tree[root].rc,l,r);\n    else if(r<=mid)\n        dfs(tree[root].lc,l,r);\n    else\n        dfs(tree[root].lc,l,mid),dfs(tree[root].rc,mid+1,r);\n}\nint main()\n{\n    scanf(\"%lld %lld %lld\",&n,&m,&K);\n    for(ll k=1; k<=n; k++)\n        scanf(\"%lld\",&d[k]);\n    for(ll k=1; k<=m; k++)\n        scanf(\"%lld %lld %lld\",&cz[k].l,&cz[k].r,&cz[k].add);//\u8bfb\u5165\u64cd\u4f5c\n    creat(tot_root,1,n);\n    for(ll k=1; k<=K; k++)\n    {\n        ll a,b;\n        scanf(\"%lld %lld\",&a,&b);\n        for(int i=a;i<=b;i++)//\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\u505a\u51fa\u4fee\u6539\n            add(tot_root,cz[i].l,cz[i].r,cz[i].add);\n    }\n    dfs(tot_root,1,n);\n    for(ll k=1;k<=n;k++)\n        printf(\"%lld \",d[k]);\n    return 0;\n}\n```\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u6109\u5feb\u7684\u8d85\u65f6\u4e86...\n\n---\n\n\u4e3a\u4ec0\u4e48\u8d85\u65f6\uff1f\n\n\u6211\u4eec\u7b97\u4e00\u4e0b\u6211\u4eec\u7684\u590d\u6742\u5ea6...\n\nK\u6b21\u8be2\u95ee...\n\n\u4e00\u6b21\u8be2\u95ee\u53ef\u4ee5\u6267\u884c\u6700\u591am\u6b21\u4fee\u6539...\n\n\u4e00\u6b21\u4fee\u6539\u6d88\u8017O\uff08logN\uff09...\n\n\u590d\u6742\u5ea6\u5927\u6982\u662fO (mklogN)...\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u5426\u5c31\u6b64\u8fdb\u884c\u4e00\u5b9a\u4f18\u5316\uff1f\n\n\u9996\u5148\uff0c\u4fee\u6539\u6240\u9700\u590d\u6742\u5ea6\u662f\u53d8\u4e0d\u4e86\u7684\n\n\u90a3\u6211\u4eec\u5c31\u53ea\u80fd\u4ece\u4fee\u6539\u6b21\u6570\u4e0a\u5165\u624b...\n\n\u660e\u663e\uff0c\u5bf9\u540c\u4e00\u6bb5\u533a\u95f4\u8fdb\u884ck\u6b21\u589e\u52a0add\u7684\u4fee\u6539\u7b49\u4ef7\u4e8e\u4e00\u6b21\u589e\u52a0k*add\u7684\u4fee\u6539\n\n\u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u628a\u6bcf\u79cd\u4fee\u6539\u7684\u6267\u884c\u6b21\u6570\u8bb0\u4e0b\u6765\uff0c\u7136\u540e\u5bf9\u5b83\u4eec\u5206\u522b\u8fdb\u884c\u4e00\u6b21\u4fee\u6539\u561b\n\n---\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\nconst int N=100010;\ntypedef long long ll;\nstruct node\n{\n    ll l,r;\n    ll add;\n} cz[N];\nll cl[N];//\u8bb0\u5f55\u6bcf\u6b21\u4fee\u6539\u7684\u6b21\u6570\nll n,m,K;\nll d[N];\nll tot_root;\nstruct node0\n{\n    ll l,r;\n    ll lc,rc;\n    ll sum,delay;\n} tree[N*2];\nll tot;\nvoid push_up(ll root)\n{\n    ll lc=tree[root].lc,rc=tree[root].rc;\n    tree[root].sum=tree[lc].sum+tree[rc].sum+tree[lc].delay*(tree[lc].r-tree[lc].l+1)+tree[rc].delay*(tree[rc].r-tree[rc].l+1);\n}\nvoid push_down(ll root)\n{\n    ll lc=tree[root].lc,rc=tree[root].rc;\n    tree[lc].delay+=tree[root].delay;\n    tree[rc].delay+=tree[root].delay;\n    tree[root].delay=0;\n}\nvoid creat(ll & root,ll l,ll r)\n{\n    root=++tot,tree[root].l=l,tree[root].r=r;\n    tree[root].lc=tree[root].rc=-1,tree[root].delay=0;\n    if(l==r)\n        tree[root].sum=d[l];\n    else\n    {\n        ll mid=(l+r)/2;\n        creat(tree[root].lc,l,mid),creat(tree[root].rc,mid+1,r);\n        push_up(root);\n    }\n}\nvoid add(ll root,ll l,ll r,ll zhi)\n{\n    if(tree[root].l>=l && tree[root].r<=r)\n    {\n        tree[root].delay+=zhi;\n        return ;\n    }\n    push_down(root);\n    ll mid=(tree[root].r+tree[root].l)/2;\n    if(l>mid)\n        add(tree[root].rc,l,r,zhi);\n    else if(r<=mid)\n        add(tree[root].lc,l,r,zhi);\n    else\n        add(tree[root].lc,l,mid,zhi),add(tree[root].rc,mid+1,r,zhi);\n    push_up(root);\n}\nvoid dfs(ll root,ll l,ll r)\n{\n    if(l==r)\n    {\n        d[l]=tree[root].sum+tree[root].delay;\n        return ;\n    }\n    push_down(root);\n    ll mid=(tree[root].r+tree[root].l)/2;\n    if(l>mid)\n        dfs(tree[root].rc,l,r);\n    else if(r<=mid)\n        dfs(tree[root].lc,l,r);\n    else\n        dfs(tree[root].lc,l,mid),dfs(tree[root].rc,mid+1,r);\n}\nint main()\n{\n    scanf(\"%lld %lld %lld\",&n,&m,&K);\n    for(ll k=1; k<=n; k++)\n        scanf(\"%lld\",&d[k]);\n    for(ll k=1; k<=m; k++)\n        scanf(\"%lld %lld %lld\",&cz[k].l,&cz[k].r,&cz[k].add);\n    for(ll k=1; k<=K; k++)\n    {\n        ll a,b;\n        scanf(\"%lld %lld\",&a,&b);\n        for(int i=a;i<=b;i++)\n        \tcl[i]++;//\u8868\u793a\u4ecea\u5230b\u7684\u4fee\u6539\u64cd\u4f5c\u5747\u5e94\u8be5\u591a\u6267\u884c\u4e00\u6b21\n    }\n    creat(tot_root,1,n);\n    for(ll k=1; k<=m; k++)\n        if(cl[k]!=0)//\u5982\u679c\u6ca1\u6709\u8be5\u64cd\u4f5c\uff0c\u5c31\u4e0d\u9700\u8981\u4fee\u6539\u4e86\n            add(tot_root,cz[k].l,cz[k].r,cz[k].add*cl[k]);//\u5bf9\u540c\u4e00\u6bb5\u533a\u95f4\u8fdb\u884ccl[k]\u6b21\u589e\u52a0add\u7684\u4fee\u6539\u7b49\u4ef7\u4e8e\u4e00\u6b21\u589e\u52a0cl[k]*add\u7684\u4fee\u6539\n    dfs(tot_root,1,n);\n    for(ll k=1;k<=n;k++)\n        printf(\"%lld \",d[k]);\n    return 0;\n}\n```\n\n---\n\n\u7136\u800c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u8fd8\u662f\u6709\u70b9\u8fc7\u4e0d\u53bb...\n\n\u5f53\u7136...\u4f60\u8981\u662f\u5feb\u8bfb\uff0cinline\uff0co1o2o3ofast\u4e4b\u7c7b\u7684...\n\n\u53c8\u6216\u8005\u4f60\u80fd\u62ff\u51fa\u4ec0\u4e48\u7ebf\u6bb5\u6811dalao\u7ea7\u4f18\u5316\u7684\u8bdd...\n\nA\u4e86\u5f53\u6211\u6ca1\u8bf4...\n\n---\n\n\u90a3\u4e48\uff0c\u5047\u5982\u6211\u4eec\u4e0d\u7528\u4e0a\u8ff0\u4f18\u5316\u7684\u8bdd...\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u6bb5\u4ee3\u7801\n\n```cpp\n    for(ll k=1; k<=K; k++)\n    {\n        ll a,b;\n        scanf(\"%lld %lld\",&a,&b);\n        for(int i=a;i<=b;i++)\n        \tcl[i]++;\n    }\n```\n\u5176\u5b9e\u5f88\u660e\u663e\uff0c\u8fd9\u91cc\u53ef\u4ee5\u6709\u4e00\u4e2a\u5dee\u5206\u4f18\u5316\u7684\u64cd\u4f5c...\n\n~~\uff08\u8bf4\u597d\u7684\u4e0d\u7528\u5dee\u5206\u4f18\u5316\u5462\uff09~~\n\n\u53d8\u6210\u8fd9\u6837\n\n```cpp\n    for(ll k=1; k<=K; k++)\n    {\n        ll a,b;\n        scanf(\"%lld %lld\",&a,&b);\n        cl[a]++,cl[b+1]--;//cl \u8868\u793a\u5dee\u5206\u6570\u7ec4 \n    }\n```\n\u8fd9\u6837\u6211\u4eec\u5c31\u5c11\u4e86\u4e00\u4e2a\u5faa\u73af\uff0c\u9884\u5904\u7406\u590d\u6742\u5ea6\u4eceO(km)\u53d8\u6210\u4e86O(k)...\n\n\u7136\u540e\u5c31\u53ef\u4ee5AC\u4e86...\n\n---\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\nconst int N=100010;\ntypedef long long ll;\nstruct node\n{\n    ll l,r;\n    ll add;\n} cz[N];\nll cl[N];\nll n,m,K;\nll d[N];\nll tot_root;\nstruct node0\n{\n    ll l,r;\n    ll lc,rc;\n    ll sum,delay;\n} tree[N*2];\nll tot;\nvoid push_up(ll root)\n{\n    ll lc=tree[root].lc,rc=tree[root].rc;\n    tree[root].sum=tree[lc].sum+tree[rc].sum+tree[lc].delay*(tree[lc].r-tree[lc].l+1)+tree[rc].delay*(tree[rc].r-tree[rc].l+1);\n}\nvoid push_down(ll root)\n{\n    ll lc=tree[root].lc,rc=tree[root].rc;\n    tree[lc].delay+=tree[root].delay;\n    tree[rc].delay+=tree[root].delay;\n    tree[root].delay=0;\n}\nvoid creat(ll & root,ll l,ll r)\n{\n    root=++tot,tree[root].l=l,tree[root].r=r;\n    tree[root].lc=tree[root].rc=-1,tree[root].delay=0;\n    if(l==r)\n        tree[root].sum=d[l];\n    else\n    {\n        ll mid=(l+r)/2;\n        creat(tree[root].lc,l,mid),creat(tree[root].rc,mid+1,r);\n        push_up(root);\n    }\n}\nvoid add(ll root,ll l,ll r,ll zhi)\n{\n    if(tree[root].l>=l && tree[root].r<=r)\n    {\n        tree[root].delay+=zhi;\n        return ;\n    }\n    push_down(root);\n    ll mid=(tree[root].r+tree[root].l)/2;\n    if(l>mid)\n        add(tree[root].rc,l,r,zhi);\n    else if(r<=mid)\n        add(tree[root].lc,l,r,zhi);\n    else\n        add(tree[root].lc,l,mid,zhi),add(tree[root].rc,mid+1,r,zhi);\n    push_up(root);\n}\nvoid dfs(ll root,ll l,ll r)\n{\n    if(l==r)\n    {\n        d[l]=tree[root].sum+tree[root].delay;\n        return ;\n    }\n    push_down(root);\n    ll mid=(tree[root].r+tree[root].l)/2;\n    if(l>mid)\n        dfs(tree[root].rc,l,r);\n    else if(r<=mid)\n        dfs(tree[root].lc,l,r);\n    else\n        dfs(tree[root].lc,l,mid),dfs(tree[root].rc,mid+1,r);\n}\nint main()\n{\n    scanf(\"%lld %lld %lld\",&n,&m,&K);\n    for(ll k=1; k<=n; k++)\n        scanf(\"%lld\",&d[k]);\n    for(ll k=1; k<=m; k++)\n        scanf(\"%lld %lld %lld\",&cz[k].l,&cz[k].r,&cz[k].add);\n    for(ll k=1; k<=K; k++)\n    {\n        ll a,b;\n        scanf(\"%lld %lld\",&a,&b);\n        cl[a]++,cl[b+1]--;//cl \u8868\u793a\u5dee\u5206\u6570\u7ec4 \n    }\n    ll times=0;//\u6839\u636e\u5dee\u5206\u7279\u6027\uff0c\u8bb0\u5f55\u5f53\u524d\u4fee\u6539\u9700\u8981\u6267\u884c\u591a\u5c11\u6b21\n    creat(tot_root,1,n);\n    for(ll k=1; k<=m; k++)\n    {\n        times+=cl[k];\n        if(times!=0)\n            add(tot_root,cz[k].l,cz[k].r,cz[k].add*times);\n    }\n    dfs(tot_root,1,n);\n    for(ll k=1;k<=n;k++)\n        printf(\"%lld \",d[k]);\n    return 0;\n}\n```\n---\n\n### END\n\n---\n",
        "postTime": 1559265322,
        "uid": 118274,
        "name": "Sata_moto",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF295A \u3010Greg and Array\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF295A)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57 $n$ \u8868\u793a\u5e8f\u5217\u957f\u5ea6\uff0c$m$ \u8868\u793a\u5019\u9009\u64cd\u4f5c\u7684\u79cd\u7c7b\u6570\uff0c\u5e76\u4e14\u8fd9 $m$ \u6b21\u64cd\u4f5c\u90fd\u662f**\u975e\u5728\u7ebf**\u7684\uff08\u5373\u4e0d\u9700\u8981\u5728\u64cd\u4f5c\u65f6\u5373\u65f6\u56de\u7b54\uff0c\u53ea\u5728\u6700\u540e\u7edf\u8ba1\u7b54\u6848\uff09\uff0c$k$ \u8868\u793a\u6267\u884c\u64cd\u4f5c\u4e2a\u6570\u3002\n\n\u7b2c\u4e8c\u884c\u7ed9\u5b9a $n$ \u4e2a\u6570\uff0c\u5373\u5e8f\u5217 $a$\u3002\n\n\u63a5\u4e0b\u6765 $m$ \u884c\u6bcf\u884c\u7ed9\u5b9a $3$ \u4e2a\u6570 $l_i \\ r_i \\ d_i$ \u8868\u793a\u628a $a_i \\ ( i \\in [l_i \\ , r_i ])$ \u90fd\u52a0\u4e0a $d_i$\u3002\n\n\u6700\u540e $k$ \u884c\u6bcf\u884c $2$ \u4e2a\u6570 $x_j \\ y_j$ \u8868\u793a\u6267\u884c\u6240\u6709\u7684\u64cd\u4f5c $i \\in [x_j \\ , \\ y_j]$\u3002\u8981\u6c42\u8f93\u51fa\u6700\u540e\u64cd\u4f5c\u5b8c\u7684\u5e8f\u5217\u3002\n\n- $1 \\leq n,m,k,a_i,d_i \\leq 10^5$\n- $1 \\leq l_i \\leq r_i \\leq n$\n- $1 \\leq x_j \\leq y_j \\leq n$\n\n## \u89e3\u6790\n\n\u9996\u5148\u6211\u76f8\u4fe1\u5728\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u5927\u5bb6\u5e94\u8be5\u90fd\u60f3\u5230\u4e86\u5199\u7ebf\u6bb5\u6811\u5427\uff0c\u6211\u4e5f\u786e\u5b9e\u5199\u4e86\u7ebf\u6bb5\u6811\u3002\u4f46\u662f $\\dots$ \u5f53\u6211\u5199\u5b8c\u4ee3\u7801\u540e\u624d\u770b\u5230\u4e86\u6570\u636e\u8303\u56f4\u3002\u8fd9\u4e2a  $\\Theta(km \\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u771f\u7684\u8ba9\u6211\u6d41\u6cea\u4e86\uff08\u6240\u4ee5\u5927\u5bb6\u4e0d\u8981\u5b66\u6211\u7684\u8fd9\u4e2a\u574f\u4e60\u60ef\u554a\u554a\uff01\uff09\u3002\n\n\n\u56de\u5f52\u6b63\u9898\uff0c\u4e0d\u4ec5\u662f\u9650\u4e8e\u666e\u901a\u79bb\u7ebf\u67e5\u8be2\uff0c\u5728\u7ebf\u505a\u6cd5\u7684\u6811\u72b6\u6570\u7ec4\u5904\u7406\u533a\u95f4\u4fee\u6539\u7684\u65f6\u5019\u4e5f\u4f1a\u7ecf\u5e38\u7528\u5230\u4e00\u4e2a\u5f88\u57fa\u7840\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u2014\u2014\u5dee\u5206\uff01\n\n\u987e\u540d\u601d\u4e49\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217 $A$\uff0c\u5b83\u7684\u5dee\u5206\u5e8f\u5217 $C$ \u5c31\u662f\u7531\u5e8f\u5217 $A$ \u76f8\u90bb\u4e24\u9879\u7684\u5dee\u6784\u6210\u7684\u3002\n\n\u5373\uff1a\n\n$$C_i=A_i-A_{i-1}$$\n\n\u4f8b\u5982\uff1a\n\n$$A=\\{ 1,4,6,7,9,11,17 \\}$$\n\n\u5219\u53ef\u9012\u63a8\u51fa\u5b83\u7684\u5dee\u5206\u5e8f\u5217 $C$\uff1a\n\n$$C=\\{ 1,3,2,1,2,2,6 \\}$$\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u518d\u53bb\u6c42\u4e00\u4e0b\u5dee\u5206\u5e8f\u5217 $C$ \u7684[\u524d\u7f00\u548c](https://blog.csdn.net/qq_45914558/article/details/107385862?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-107385862-blog-121739364.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-107385862-blog-121739364.pc_relevant_default&utm_relevant_index=1)\u5e8f\u5217 $S$\uff1a\n\n$$S=\\{ 1,4,6,7,9,11,17 \\}$$\n\n\u7136\u540e\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e00\u4e2a\u5e8f\u5217\u7684\u5dee\u5206\u5e8f\u5217\u505a\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u539f\u5e8f\u5217\u3002\u6709\u4e86\u8fd9\u4e2a\u601d\u60f3\uff0c\u6211\u4eec\u5728\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230 $\\Theta(1)$\u3002\n\n\u5373\u628a\u533a\u95f4 $A_i (i \\in [l,r])$ \u90fd\u52a0\u4e00\u4e2a\u6570 $d$ \u65f6\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5168\u96f6\u6570\u7ec4 $C$ \u4f5c\u4e3a\u5dee\u5206\u6570\u7ec4\uff0c\u5bf9\u4e8e $C_{l}$ \u5904\u52a0 $d$\uff0c\u5bf9\u4e8e $C_{r+1}$ \u5904\u51cf $d$\uff0c\u8ba9 $d$ \u4ea7\u751f\u7684\u5f71\u54cd\u4ece $l$ \u5904\u5f00\u59cb\uff0c\u5728 $r+1$ \u5904\u6d88\u9664\uff0c\u5f71\u54cd\u8303\u56f4\u4e3a\u533a\u95f4 $ [l,r]$\u3002\n\n\u6700\u540e\u5728\u7ef4\u62a4\u6570\u7ec4 $C$ \u524d\u7f00\u548c\u7684\u65f6\u5019\u4f60\u5c31\u4f1a\u53d1\u73b0\u533a\u95f4 $[l,r]$ \u7684\u6240\u6709\u6570 $S_i (i \\in [l,r])$ \u90fd\u53d8\u6210\u4e86 $d$\u3002\n\n\n\u6709\u4e86\u8fd9\u4e2a\u601d\u60f3\uff0c\u4e0d\u96be\u5199\u51fa\u4e0b\u9762\u7684\u4ee3\u7801\u3002\n\n```cpp\ncin>>x>>y; \nfor(int i=x;i<=y;++i)\n{\n\tc[l[i]]+=d[i];\n\tc[r[i]+1]-=d[i];\n}\n```\n\u4f46\u662f\u8fd9\u6837\u7684\u64cd\u4f5c\u4e00\u5171\u6709 $k$ \u6b21\uff0c\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u6765\u5230\u4e86 $\\Theta(km)$\u3002\u6211\u751a\u81f3\u62b1\u6709\u4e00\u4e1d\u4fa5\u5e78\u5fc3\u7406\u5730\u5199\u4e86\u5feb\u8bfb\u5feb\u5199\u7136\u540e\u52a0\u4e86\u706b\u8f66\u5934\uff0c\u4f46\u6beb\u65e0\u610f\u5916\u5730[T\u98de\u4e86](https://www.luogu.com.cn/record/98008641)\u3002\n\n----------\n\n\u65e2\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u6b63\u786e\uff0c\u90a3\u6211\u4eec\u5c31\u6765\u8003\u8651\u4e00\u4e0b\u522b\u7684\u5199\u6cd5\u3002\u5bf9\u4e8e\u6bcf\u6b21\u9009\u62e9\u64cd\u4f5c\u533a\u95f4 $[l,r]$\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u518d\u8fdb\u884c\u4e00\u6b21\u5dee\u5206\uff0c\u662f\u5bf9\u4e8e\u64cd\u4f5c\u5e8f\u53f7\u5bf9\u5e94\u7684\u64cd\u4f5c\u6b21\u6570\u7684\u5dee\u5206\uff0c\u5230\u6700\u540e\u505a\u524d\u7f00\u548c\u518d\u7edf\u8ba1\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u4e00\u6b21\u5ef6\u8fdf\u64cd\u4f5c\u3002\n\n\u8fd9\u6837\u4e0a\u4e00\u4e2a\u5199\u6cd5\u7684 $\\Theta(km)$ \u5c31\u53ef\u4ee5\u88ab\u6beb\u65e0\u7591\u95ee\u5730\u5e72\u5230 $\\Theta(k)$ ,\u6574\u4efd\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n)$ \u7ea7\u522b\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fc7\u3002\n\n\u5230\u8fd9\u91cc\u672c\u7bc7\u9898\u89e3\u5df2\u7ecf\u63a5\u8fd1\u5c3e\u58f0\u4e86\uff0c\u6211\u8d34\u4e2a\u5b8c\u6574\u4ee3\u7801\u5427\u3002\n\n## AC Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm> \n#include<map> \nusing namespace std;\n#define int long long//\u8981\u5f00long long!!! \nconst int N=100005;\nint n,m,k,x,y;\nint a[N],c[N],tag[N];\nstruct node{//\u7ed3\u6784\u4f53\u66f4\u65b9\u4fbf \n\tint l,r;\n\tint dat;\n}t[N];\nmap<int,int>existed;\nsigned main()\n{\n\tcin.tie(0)->ios::sync_with_stdio(false);\n\tcout.tie(0); //cin,cout\u4f18\u5316 \n\tcin>>n>>m>>k;\n\tfor(register int i=1;i<=n;++i) cin>>a[i];\n\tfor(register int i=1;i<=m;++i) \n\t{\n\t\tcin>>t[i].l>>t[i].r>>t[i].dat;\n\t} \n\tfor(register int i=1;i<=k;++i)\n\t{\n\t\tcin>>x>>y; \n\t\ttag[x]++;//\u5dee\u5206\u8bb0\u5f55\u64cd\u4f5c\u6b21\u6570 \n\t\ttag[y+1]--;\n\t}\n\tfor(register int i=1;i<=m;++i) tag[i]+=tag[i-1];\n\tfor(register int i=1;i<=m;++i)\n\t{\n\t\tc[t[i].l]+=t[i].dat*tag[i];//\u4e8c\u6b21\u5dee\u5206\u628atag[i]\u6b21\u64cd\u4f5c\u8865\u4e0a \n\t\tc[t[i].r+1]-=t[i].dat*tag[i];\n\t}\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tc[i]+=c[i-1];//\u524d\u7f00\u548c \n\t\ta[i]+=c[i];//\u52a0\u4e0a\u5dee\u5206\u6570\u7ec4 \n\t}\n\tfor(register int i=1;i<=n;++i) cout<<a[i]<<' '; //\u8f93\u51fa \n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01 \n}\n\n```\n[AC Record](https://www.luogu.com.cn/record/98010165)\n",
        "postTime": 1671976316,
        "uid": 749325,
        "name": "Sincerin",
        "ccfLevel": 0,
        "title": "CF295A Greg and Array \u9898\u89e3"
    },
    {
        "content": "### \u89e3\u6cd5\uff1a\u4e24\u6b21\u5dee\u5206\n\n\u8fd9\u9898\u6bd4\u8f83\u7b80\u5355 ~~(\u96be\u5ea6\u8bc4\u4e0d\u4e0a\u7d2b)~~ \u3002\n\n\u9996\u5148\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4$num[i]$\u8868\u793a\u7b2c$i$\u4e2a\u64cd\u4f5c\u88ab\u8c03\u7528\u7684\u6b21\u6570\u3002\u5219\u5bf9\u4e8e$Greg$\u5199\u4e0b\u7684\u7b2c$i$\u4e2a\u95ee\u9898\uff0c$num[x_i]+1$ \uff0c$num[y_i+1]-1$ \uff0c\u6700\u540e\u6c42\u4e00\u904d\u524d\u7f00\u548c\uff0c\u4fbf\u53ef\u4ee5\u7b97\u51fa\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u8c03\u7528\u7684\u6b21\u6570\u3002\n\n\u7136\u540e\uff0c\u5728\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4$add[i]$\u8868\u793a\u7b2c$i$\u4e2a\u6570\u5728\u7ecf\u8fc7\u591a\u6b21\u64cd\u4f5c\u540e**\u52a0\u7684\u6570**\u7684\u503c\u3002\u5bf9\u4e8e\u7b2c$i$\u64cd\u4f5c\uff0c$add[l_i]+num[i]*d_i$ \uff0c$add[r_i+1]-num[i]*d_i$ \u3002\u6700\u540e\u6c42\u4e00\u904d\u524d\u7f00\u548c\uff0c\u4fbf\u53ef\u4ee5\u7b97\u51fa\u6bcf\u4e2a\u6570\u589e\u52a0\u7684\u91cf\uff0c\u518d\u52a0\u4e0a\u521d\u59cb\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u7b97\u51fa\u64cd\u4f5c\u540e\u7684\u503c\u3002\n\n~~\u5982\u679c\u524d\u9762\u770b\u4e0d\u61c2,\u53ef\u4ee5\u770b\u4ee3\u7801~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst long long maxn=100010;\nlong long n,m,k;\nlong long a[maxn];//\u521d\u59cb\u503c \nlong long add[maxn];//\u6bcf\u4e2a\u6570\u7684\u589e\u52a0\u91cf \nstruct node{\n\tlong long x,y,z;\n};\nnode emm[maxn];  //\u64cd\u4f5c \nlong long num[maxn];//\u6bcf\u4e2a\u64cd\u4f5c\u7684\u8c03\u7528\u6570 \nint main(){\n\tscanf(\"%lld %lld %lld\",&n,&m,&k);\n\tfor(long long i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&a[i]);  //\u8bfb\u5165\u521d\u59cb\u503c \n\tfor(long long i=1;i<=m;i++){\n\t\tscanf(\"%lld %lld %lld\",&emm[i].x,&emm[i].y,&emm[i].z); //\u8bfb\u5165\u64cd\u4f5c\u6570 \n\t}\n\tfor(long long i=1;i<=k;i++){\n\t\tlong long b,c;\n\t\tscanf(\"%lld %lld\",&b,&c);\n\t\tnum[b]++;  //\u5dee\u5206\uff0c\u4e3a\u4e86\u6c42\u6bcf\u4e2a\u64cd\u4f5c\u7684\u6b21\u6570 \n\t\tnum[c+1]--;\n\t}\n\tfor(long long i=1;i<=m;i++){\n\t\tnum[i]+=num[i-1]; //\u524d\u7f00\u548c\uff0c\u6c42\u51fa\u6bcf\u4e2a\u64cd\u4f5c\u7684\u6b21\u6570 \n\t\tadd[emm[i].x]+=emm[i].z*num[i];  //\u5dee\u5206\uff0c\u4e3a\u4e86\u6c42\u6bcf\u4e2a\u6570\u7684\u589e\u52a0\u91cf \n\t\tadd[emm[i].y+1]-=emm[i].z*num[i];\n\t}\n\tfor(long long i=1;i<=n;i++){\n\t\tadd[i]+=add[i-1];  //\u524d\u7f00\u548c\uff0c\u6c42\u51fa\u6bcf\u4e2a\u6570\u7684\u589e\u52a0\u91cf \n\t\tprintf(\"%lld \",a[i]+add[i]);//\u589e\u52a0\u91cf\u52a0\u4e0a\u521d\u59cb\u503c\uff0c\u5e76\u8f93\u51fa \n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1567840199,
        "uid": 55843,
        "name": "ueettttuj",
        "ccfLevel": 0,
        "title": "CF295A Greg and Array"
    },
    {
        "content": "\u5237\u7ebf\u6bb5\u6811\u9898\u5355\u627e\u5230\u7684\uff0c\u7136\u540e\u53d1\u73b0\u5e76\u6ca1\u6709\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u9996\u5148\u5c31\u662f\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u53ea\u8be2\u95ee\u4e00\u6b21\uff0c\u4e8e\u662f\u8003\u8651\u6709\u4ec0\u4e48\u79bb\u7ebf\u7684\u4e1c\u897f\u53ef\u4ee5\u53bb\u505a\u3002\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4 $t$ \u6765\u8bb0\u5f55\u5b83\u88ab\u6267\u884c\u4e86 $t_i$ \u6b21\uff0c\u6700\u540e\u5bf9\u539f\u5148\u7684\u5e8f\u5217\u7684\u8d21\u732e\u5c31\u662f $t_i\\times d_i$\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\uff0c\u8fd9\u4e2a\u9898\u76ee\u5c31\u53d8\u6210\u4e86\u53ea\u6709\u533a\u95f4\u4fee\u6539 \u4e0e \u4e00\u6b21\u67e5\u8be2\uff0c\u53ef\u4ee5\u5dee\u5206\u89e3\u51b3\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u539f\u5148\u7684\u6570\u7ec4 $a$ \u4e0e\u8fd9\u4e2a\u64cd\u4f5c\u6b21\u6570\u6570\u7ec4 $t$ \u90fd\u5dee\u5206\u7ef4\u62a4\uff0c\u6700\u540e\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define lson (p << 1)\n#define rson ((p << 1) | 1)\n#define mid (l + r) >> 1\n#define endl '\\n'\n\nconst int MAXN = 1e5 + 5;\nint a[MAXN], d[MAXN], t[MAXN], n, m, k, l[MAXN], r[MAXN], x[MAXN];\n\nsigned main(void) {\n    ios::sync_with_stdio(false), cin.tie(NULL);\n    cin >> n >> m >> k;\n    for (int i = 1; i <= n; ++i) {\n    \tcin >> a[i];\n    \td[i] = a[i] - a[i - 1];\n    }\n    for (int i = 1; i <= m; ++i) {\n    \tcin >> l[i] >> r[i] >> x[i];\n    }\n    for (int i = 1; i <= k; ++i) {\n    \tint u, v;\n    \tcin >> u >> v;\n    \tt[u]++; t[v + 1]--;\n    }\n    for (int i = 1; i <= m; ++i) {\n    \tt[i] += t[i - 1];\n    \td[l[i]] += x[i] * t[i]; \n    \td[r[i] + 1] -= x[i] * t[i]; \n    }\n    for (int i = 1; i <= n; ++i) {\n    \td[i] += d[i - 1];\n    \tcout << d[i] << ' ';\n    }\n    return 0;\n}\n\n",
        "postTime": 1684286736,
        "uid": 427623,
        "name": "XiaoQuQu",
        "ccfLevel": 4,
        "title": "CF295A Sol"
    }
]