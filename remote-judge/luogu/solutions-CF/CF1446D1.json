[
    {
        "content": "[\u52c7\u6562\u5411\u524d\u8fdb\uff0c\u524d\u8fdb\u6709\u5956\u54c1\uff01](https://www.cnblogs.com/dysyn1314/p/14007922.html)\n\n# CF1446D1, D2 Frequency Problem\n\n## \u9898\u76ee\u5927\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/contest/1446/problem/D2)\n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_1,a_2,\\dots ,a_n$\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5b50\u6bb5\uff08\u8fde\u7eed\u5b50\u5e8f\u5217\uff09\u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\u4e0d\u552f\u4e00\u3002\n\n\u8bf7\u6c42\u51fa\uff0c\u6700\u957f\u7684\u3001\u597d\u7684\u5b50\u6bb5\u7684\u957f\u5ea6\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leq n\\leq 2\\times10^5$\u3002\u5bf9\u4e8e D1\uff0c$1\\leq a_i\\leq \\min(n,100)$\uff0c\u5bf9\u4e8e D2\uff0c$1\\leq a_i\\leq n$\u3002\n\n## \u672c\u9898\u9898\u89e3\n\n### D1\n\n\u5982\u679c\u539f\u5e8f\u5217\u91cc\uff0c\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e0d\u552f\u4e00\uff0c\u5219\u7b54\u6848\u5c31\u662f $n$\u3002\u5426\u5219\uff0c\u8003\u8651\u90a3\u4e2a\u552f\u4e00\u7684\u3001\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\uff0c\u8bb0\u4e3a $x$\u3002\n\n\u53d1\u73b0\uff0c\u6700\u957f\u7684\u3001\u597d\u7684\u5b50\u6bb5\uff08\u4e5f\u5c31\u662f\u7b54\u6848\uff09\uff0c\u6709\u4e2a\u5fc5\u8981\u6761\u4ef6\u662f\uff1a$x$ \u662f\u5176\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\u4e4b\u4e00\u3002\n\n\u8bc1\u660e\uff1a\u8003\u8651\u4e00\u4e2a\u597d\u7684\u5b50\u6bb5 $[l,r]$\uff0c\u5982\u679c $x$ \u4e0d\u662f\u5176\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u4f9d\u6b21\u8003\u8651 $[l-1,r]$, $[l-2,r]$, ... ..., $[1,r]$, $[1,r+1]$, $[1,r+2]$, ... ..., $[1,n]$\u3002\u56e0\u4e3a $x$ \u7684\u6570\u91cf\u6bcf\u6b21\u6700\u591a\u589e\u52a0 $1$ \u4e2a\uff0c\u4e14\u5b83\u662f\u6574\u4e2a\u5e8f\u5217\u91cc\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\u3002\u90a3\u4e48\u603b\u6709\u67d0\u4e00\u6b65\u540e\uff0c$x$ \u548c\u5e8f\u5217\u91cc\u5176\u4ed6\u51fa\u73b0\u6700\u591a\u7684\u5143\u7d20\u4e00\u6837\u591a\u3002\n\n\u6211\u4eec\u679a\u4e3e\uff0c\u7b54\u6848\u7684\u5b50\u6bb5\u91cc\uff0c\u548c $x$ \u51fa\u73b0\u6b21\u6570\u4e00\u6837\u591a\u7684\u5143\u7d20\u662f\u8c01\uff0c\u8bb0\u4e3a $y$\u3002\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u5bf9\u4e00\u7ec4\u6570\u503c $(x,y)$ \u8ba1\u7b97\u7b54\u6848\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u6570\u5217\u91cc\u9664 $x$, $y$ \u5916\u7684\u5176\u4ed6\u6570\u3002\u95ee\u9898\u8fdb\u4e00\u6b65\u8f6c\u5316\u4e3a\uff1a\u6c42\u4e00\u4e2a\u6700\u957f\u7684\u5b50\u6bb5\uff0c\u6ee1\u8db3 $x$, $y$ \u7684\u51fa\u73b0\u6b21\u6570\u4e00\u6837\u591a\u3002\n\n\u628a\u6570\u5217\u91cc\u7684 $x$ \u770b\u505a $1$\uff0c$y$ \u770b\u505a $-1$\uff0c\u5176\u4ed6\u6570\u770b\u505a $0$\u3002\u5f97\u5230\u4e00\u4e2a\u5e8f\u5217 $b$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u8981\u6c42\u6700\u957f\u7684\u3001\u548c\u4e3a $0$ \u7684\u5b50\u6bb5\u957f\u5ea6\u3002\u505a\u524d\u7f00\u548c\uff0c\u4ee4 $\\text{sum}_i=\\sum_{j=1}^{i}b_j$\u3002\u95ee\u9898\u76f8\u5f53\u4e8e\u627e\u4e24\u4e2a\u4f4d\u7f6e $0\\leq l < r\\leq n$\uff0c\u6ee1\u8db3 $\\text{sum}_r = \\text{sum}_l$\u3002\u5bf9\u6bcf\u4e2a $\\text{sum}$ \u503c $v$\uff08$[-n,n]$\uff0c\u5171 $2n+1$ \u4e2a\u503c\uff09\u8bb0\u5f55\u5b83\u6700\u65e9\u7684\u51fa\u73b0\u4f4d\u7f6e\u3002\u7136\u540e\u679a\u4e3e $r$\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u6709\u8bfb\u8005\u53ef\u80fd\u5bf9\u201c\u5ffd\u7565\u6570\u5217\u91cc\u9664 $x$, $y$ \u5916\u7684\u5176\u4ed6\u6570\u201d\u8fd9\u4e00\u505a\u6cd5\u5fc3\u5b58\u7591\u8651\u3002\u56e0\u4e3a\u6709\u53ef\u80fd\uff0c\u6211\u4eec\u627e\u5230\u7684\u5e8f\u5217\u91cc\uff0c\u5b58\u5728\u4e00\u4e2a\u5176\u4ed6\u6570\u503c $z$\uff0c\u51fa\u73b0\u6b21\u6570\u591a\u4e8e $x,y$\u3002\u4f46\u662f\uff0c\u57fa\u4e8e\u4ee5\u4e0b\u4e24\u70b9\uff1a\n\n1. \u5b58\u5728\u8fd9\u6837 \"$z$\" \u7684\u5b50\u6bb5\uff0c\u957f\u5ea6\u4e00\u5b9a\u5c0f\u4e8e\u7b54\u6848\u3002\u8bc1\u660e\uff1a\u6211\u4eec\u6309\u548c\u4e0a\u9762\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u5411\u4e24\u8fb9\u6269\u5c55\u4e00\u4e0b\uff0c\u76f4\u5230 $x$ \u548c $z$ \u51fa\u73b0\u6b21\u6570\u76f8\u7b49\u3002\u5f97\u5230\u7684\u5e8f\u5217\u4ecd\u7136\u6ee1\u8db3\uff1a\u5b58\u5728\u4e24\u4e2a\u6570 $(x,z)$ \u51fa\u73b0\u6b21\u6570\u76f8\u7b49\uff0c\u4e14\u65b0\u7684\u5b50\u6bb5\u957f\u5ea6\u6bd4\u539f\u6765\u957f\u3002\u6240\u4ee5\u53ea\u8981\u5b58\u5728\u8fd9\u6837\u7684 \"$z$\"\uff0c\u6211\u4eec\u5c31\u6269\u5c55\u4e00\u4e0b\uff0c\u6700\u7ec8\u4e00\u5b9a\u80fd\u5f97\u5230\u6ca1\u6709 \"$z$\" \u7684\uff0c\u4e5f\u5c31\u662f\u4ee5 $x$ \u4e3a\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u7684\u5b50\u6bb5\uff0c\u4e14\u957f\u5ea6\u4e00\u5b9a\u4e25\u683c\u5927\u4e8e\u539f\u6765\u7684\u5b50\u6bb5\u3002\n2. \u7b54\u6848\u7684\u5b50\u6bb5\uff0c\u4e00\u5b9a\u4f1a\u88ab\u8003\u8651\u5230\u3002\u56e0\u4e3a\u53ea\u8981\u6ee1\u8db3 $x$, $y$ \u51fa\u73b0\u6b21\u6570\u76f8\u7b49\uff0c\u5c31\u4f1a\u88ab\u8003\u8651\u5230\u3002\n\n\u6211\u4eec\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6c42\u51fa\u7684\u5c31\u662f\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\times\\text{maxa})=O(n\\times 100)$\u3002\u53ef\u4ee5\u901a\u8fc7 D1\u3002\n\n### D2\n\n\u8003\u8651\u7b54\u6848\u5e8f\u5217\u91cc\uff0c\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\uff0c\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5982\u679c\u51fa\u73b0\u6b21\u6570 $>\\sqrt{n}$\uff0c\u5219\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u503c\u53ea\u6709\u4e0d\u8d85\u8fc7 $\\sqrt{n}$ \u4e2a\uff0c\u6211\u4eec\u5957\u7528 D1 \u7684\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\u3002\n\n\u5982\u679c\u51fa\u73b0\u6700\u591a\u7684\u6570\uff0c\u51fa\u73b0\u6b21\u6570 $\\leq \\sqrt{n}$\uff0c\u6211\u4eec\u679a\u4e3e\u8fd9\u4e2a\u51fa\u73b0\u6b21\u6570\uff0c\u8bb0\u4e3a $t$\u3002\u7136\u540e\u505a two pointers\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u679a\u4e3e\u533a\u95f4\u7684\u53f3\u7aef\u70b9 $r$\u3002\u5bf9\u6bcf\u4e2a $r$\uff0c\u8bb0\u6700\u5c0f\u7684\uff0c\u4f7f\u5f97 $[l,r]$ \u5185\u6240\u6709\u6570\u51fa\u73b0\u6b21\u6570\u90fd $\\leq t$ \u7684 $l$ \u4e3a $L_r$\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e $r=1,2,\\dots,n$\uff0c$L_r$ \u5355\u8c03\u4e0d\u964d\u3002\u5e76\u4e14\uff0c\u5728\u5f53\u524d\u7684 $t$ \u4e0b\uff0c\u5bf9\u4e00\u4e2a $r$ \u6765\u8bf4\uff0c\u5982\u679c $[L_r,r]$ \u4e0d\u662f\u597d\u7684\u5b50\u6bb5\uff08\u51fa\u73b0\u6b21\u6570\u4e3a $t$ \u7684\u6570\u503c\uff0c\u4e0d\u5230 $2$ \u4e2a\uff09\uff0c\u90a3\u4e48\u5176\u4ed6 $[l,r]$ ($L_r<l\\leq r$) \u4e5f\u4e0d\u53ef\u80fd\u662f\u3002\u56e0\u4e3a\u51fa\u73b0\u6b21\u6570\u4e3a $t$ \u7684\u6570\u503c\uff0c\u53ea\u4f1a\u66f4\u5c11\u3002\n\n\u6240\u4ee5\uff0c\u968f\u7740\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $r$\uff0c\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u5f53\u524d\u7684 $L_r$\u3002\u540c\u65f6\u7528\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\uff0c\u5f53\u524d\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u4ee5\u53ca**\u6bcf\u4e2a\u51fa\u73b0\u6b21\u6570**\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5c31\u80fd\u786e\u5b9a\uff0c\u5f53\u524d\u7684 $[L_r,r]$ \u662f\u5426\u662f\u597d\u7684\u533a\u95f4\u3002\u5177\u4f53\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\u8fd9\u4e2a two pointers \u7684\u8fc7\u7a0b\u662f $O(n)$ \u7684\u3002\u56e0\u4e3a\u6709 $\\sqrt{n}$ \u4e2a $t$\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(n\\sqrt{n})$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\u3002\n\n## \u603b\u7ed3\n\n\u672c\u9898\u9996\u5148\u9700\u8981\u4e00\u4e2a\u7ed3\u8bba\u3002\u901a\u8fc7\u89c2\u5bdf\u3001\u5206\u6790\u9898\u76ee\u6027\u8d28\uff0c\u662f\u53ef\u4ee5\u60f3\u5230\u7684\u3002\n\n\u7136\u540e\u9700\u8981\u4e00\u4e2a\u6280\u5de7\uff1a\u628a\u4e00\u4e2a\u666e\u901a\u5e8f\u5217\uff0c\u8f6c\u5316\u4e3a\u53ea\u542b $0$, $1$, $-1$ \u7684\u5e8f\u5217\u3002\u8fd9\u6837\u5c31\u628a\u590d\u5236\u7684\u3001\u51fa\u73b0\u6b21\u6570\u7684\u5173\u7cfb\uff0c\u8f6c\u5316\u4e3a\u4e86\u7b80\u5355\u7684\u6570\u503c\u5173\u7cfb\u3002\u8fd9\u4e2a\u6280\u5de7\uff0c\u5728\u4e00\u4e9b\u7ecf\u5178\u7684\uff0c\u4e8c\u5206\u4e2d\u4f4d\u6570\u7684\u9898\u91cc\u4e5f\u6709\u7528\u5230\uff08\u628a $> \\text{mid}$ \u7684\u89c6\u4e3a $1$\uff0c$\\leq \\text{mid}$ \u7684\u89c6\u4e3a $-1$\uff09\u3002\n\n\u5728 D2 \u91cc\uff0c\u60f3\u5230\u6839\u53f7\u5206\u6cbb\u4ee5\u540e\uff0c\u5e94\u8be5\u5c31\u4e0d\u662f\u592a\u96be\u4e86\u3002\n\n## \u53c2\u8003\u4ee3\u7801(both D1 & D2)\n\n\n[\u6211\u8981\u5f00\u98de\u673a\uff01\uff01\uff01\u6211\u8981\u5f53\u7ecf\u7406\uff01\uff01\uff01](https://www.cnblogs.com/dysyn1314/p/14007922.html)\n",
        "postTime": 1605791772,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1446D1 \u3010Frequency Problem (Easy Version)\u3011"
    },
    {
        "content": "[CF1446D1 Frequency Problem (Easy Version)](https://www.luogu.com.cn/problem/CF1446D1)&[CF1446D2 Frequency Problem (Hard Version)](https://www.luogu.com.cn/problem/CF1446D2)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1758352)\n\n## \u9898\u610f\n- \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5e8f\u5217\uff0c\u5b9a\u4e49\u597d\u7684\u5e8f\u5217\u4e3a\u4f17\u6570\u4e0d\u552f\u4e00\u7684\u5e8f\u5217\uff0c\u6c42\u6700\u957f\u7684\u597d\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u3002\n- \u6570\u636e\u8303\u56f4\uff1a$1\\leqslant n\\leqslant 2\\times 10^5$\uff0c$1\\leqslant a_i\\leqslant n$\uff0c\u5bf9\u4e8eEasy Version\uff0c$a_i\\leqslant 100$\u3002\n\n## \u5206\u6790\n\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u6700\u957f\u7684\u4f17\u6570\u4e0d\u552f\u4e00\u7684\u5b50\u5e8f\u5217\u4e00\u5b9a\u5305\u542b\u6574\u4e2a\u5e8f\u5217\u7684\u4f17\u6570**\u3002\n\n\u53cd\u8bc1\u6cd5\uff1a\u8bbe\u6574\u4e2a\u5e8f\u5217\u7684\u4f17\u6570\u4e3a$x$\uff0c\u5982\u679c\u8fd9\u4e2a\u5b50\u5e8f\u5217\u4e2d\u4f17\u6570\u4e0d\u542b\u6709$x$\uff0c\u90a3\u4e48\u6211\u4eec\u5c1d\u8bd5\u6bcf\u6b21\u7ed9\u8fd9\u4e2a\u5b50\u5e8f\u5217\u6269\u5c55\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u6269\u5c55\u4e0d\u4e86\u90a3\u4e48\u4f17\u6570\u4e00\u5b9a\u542b\u6709\u8fd9\u4e2a$x$\uff09\uff0c\u56e0\u4e3a$x$\u4e3a\u6574\u4e2a\u5e8f\u5217\u7684\u4f17\u6570\uff0c\u6bcf\u4e00\u6b21\u6269\u5c55\u4f1a\u6700\u591a\u8ba9$x$\u589e\u52a0$1$\uff0c\u6240\u4ee5\u603b\u6709\u4e00\u4e2a\u65f6\u95f4$x$\u7684\u6570\u91cf\u4f1a\u7b49\u4e8e\u5f53\u524d\u5e8f\u5217\u4f17\u6570\u7684\u6570\u91cf\uff0c\u6b64\u65f6\u8fd9\u4e2a\u5e8f\u5217\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e14\u5b83\u4e00\u5b9a\u4f18\u4e8e\u539f\u6765\u7684\u5e8f\u5217\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5148\u6c42\u5f97\u6574\u4e2a\u5e8f\u5217\u7684\u4f17\u6570$x$\uff0c\u5982\u679c\u4f17\u6570\u4e0d\u552f\u4e00\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f$n$\uff0c\u5426\u5219\u6211\u4eec\u7ee7\u7eed\u5206\u6790\uff1a\n\n\u5148\u8003\u8651Easy Version\uff0c\u56e0\u4e3a$a_i$\u7684\u503c\u57df\u4e3a$[1,100]$\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u8fd9\u4e2a\u4f17\u6570\uff08\u8bbe\u4e3a$y$\uff09\uff0c\u7136\u540e\u91cd\u6784\u4e00\u4e2a\u65b0\u5e8f\u5217$b$\uff1a\n\n- \u5f53$a_i=x$\u65f6\uff0c$b_i=1$\uff1b\n- \u5f53$a_i=y$\u65f6\uff0c$b_i=-1$\uff1b\n- \u5426\u5219\uff0c$b_i=0$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5e8f\u5217\uff0c**\u5b83\u7684$x$\u51fa\u73b0\u6b21\u6570\u4e0e$y$\u7684\u51fa\u73b0\u6b21\u6570\u4e00\u5b9a\u76f8\u7b49**\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7edf\u8ba1\u6240\u6709$b$\u4e4b\u548c\u4e3a$0$\u7684\u5e8f\u5217\u8fdb\u7b54\u6848\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u7591\u95ee\uff1a\u5982\u679c\u5728\u67d0\u4e00\u4e2a\u533a\u95f4\u4e2d\u5b58\u5728\u4e00\u4e2a\u6570$z$\uff0c\u51fa\u73b0\u6b21\u6570\u6bd4$x$\u548c$y$\u5747\u591a\uff0c\u90a3\u8fd9\u6837\u7684\u5e8f\u5217\u662f\u5426\u5408\u6cd5\uff1f\n\n\u8fd8\u662f\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u90a3\u79cd\u6269\u5c55\u7684\u65b9\u6cd5\uff0c\u53d1\u73b0\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u66f4\u957f\u7684\u5e8f\u5217\u4f17\u6570\u4e3a$x,z$\uff0c\u4e14\u6bd4\u521a\u624d\u7684\u5e8f\u5217\u66f4\u4f18\uff0c\u56e0\u6b64\u521a\u521a\u7684\u5e8f\u5217\u88ab\u7edf\u8ba1\u4e86\u4e5f\u4e0d\u4f1a\u5bf9\u6700\u7ec8\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u7528$O(maxa\\times n)$\u7684\u590d\u6742\u5ea6\u89e3\u51b3\u4e86Easy Version\u3002\n\n\u5bf9\u4e8eHard Version\uff0c\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\u3002\n\n\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c$S$\uff0c\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$S$\u7684\u6570\u5b57\uff0c\u5b83\u7684\u4e2a\u6570\u4e00\u5b9a\u4e0d\u4f1a\u8d85\u8fc7$\\frac{n}{S}$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a$\\text{vector}$\u5b58\u4e0b\u6240\u6709\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$S$\u7684\u6570\u5b57\uff0c\u7136\u540e\u7528Easy Version\u7684\u65b9\u6cd5\u66b4\u529b\u7edf\u8ba1\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt{n})$\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u7b49\u4e8e$S$\u7684\u6570\u5b57\uff0c\u6211\u4eec\u5f88\u663e\u7136\u53ef\u4ee5**\u679a\u4e3e\u8fd9\u4e2a\u51fa\u73b0\u6b21\u6570**\uff08\u8bbe\u4e3a$i$\uff09\uff0c\u7136\u540e\u5bf9\u4e8e\u6574\u4e2a\u5e8f\u5217\u505a\u4e00\u904d$\\text{two pointer}$\uff0c\u91cc\u9762**\u7ef4\u62a4\u6240\u6709\u6570\u7684\u51fa\u73b0\u6b21\u6570**\u548c**\u51fa\u73b0\u6b21\u6570\u7684\u51fa\u73b0\u6b21\u6570**\uff0c\u53ea\u8981\u51fa\u73b0\u6b21\u6570$i$\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e$2$\uff0c\u6211\u4eec\u5c31\u7edf\u8ba1\u8fd9\u4e2a\u7b54\u6848\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u7528$O(n\\sqrt{n})$\u7684\u590d\u6742\u5ea6\u89e3\u51b3\u95ee\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\sqrt{n})$\u3002\n\n## \u4ee3\u7801\nEasy Version:\n```\n#include<stdio.h>\n#define inf 1000000000\nconst int maxn=200005,maxk=105;\nint n,maxx,cnt,ans;\nint a[maxn],tot[maxk],sum[maxn],t[maxn*2];\ninline int min(int a,int b){\n\treturn a<b? a:b;\n}\ninline int max(int a,int b){\n\treturn a>b? a:b;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\ttot[a[i]]++;\n\t}\n\tfor(int i=1;i<=100;i++){\n\t\tif(tot[i]==maxx)\n\t\t\tcnt++;\n\t\tif(tot[i]>maxx)\n\t\t\tcnt=1,maxx=tot[i];\n\t}\n\tif(cnt>1){\n\t\tprintf(\"%d\\n\",n);\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=100;i++)\n\t\tif(tot[i]==maxx){\n\t\t\tmaxx=i;\n\t\t\tbreak;\n\t\t}\n\tfor(int i=1;i<=100;i++){\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tsum[j]=sum[j-1]+(a[j]==i? -1:(a[j]==maxx? 1:0));\n\t\tfor(int j=-n;j<=n;j++)\n\t\t\tt[n+j]=inf;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tans=max(ans,j-t[n+sum[j]]+1);\n\t\t\tt[n+sum[j-1]]=min(t[n+sum[j-1]],j);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\nHard Version\n```\n#include<stdio.h>\n#include<math.h>\n#include<vector>\n#define inf 1000000000\nusing namespace std;\nconst int maxn=200005,maxt=505;\nint n,maxx,cnt,ans,S,val;\nint a[maxn],tot[maxn],sum[maxn],t[maxn*2],cnt1[maxn],cnt2[maxn];\nvector<int>v;\ninline void modify(int x,int v){\n\tcnt2[cnt1[x]]--;\n\tcnt1[x]+=v;\n\tcnt2[cnt1[x]]++;\n}\nint main(){\n\tscanf(\"%d\",&n),S=sqrt(n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\ttot[a[i]]++;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(tot[i]==maxx)\n\t\t\tcnt++;\n\t\tif(tot[i]>maxx)\n\t\t\tcnt=1,maxx=tot[i];\n\t}\n\tif(cnt>1){\n\t\tprintf(\"%d\\n\",n);\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(tot[i]==maxx)\n\t\t\tval=i;\n\t\telse if(tot[i]>S)\t\t\n\t\t\tv.push_back(i);\n\t}\n\tfor(int i=0;i<v.size();i++){\n\t\tint k=v[i];\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tsum[j]=sum[j-1]+(a[j]==k? -1:(a[j]==val? 1:0));\n\t\tfor(int j=-n;j<=n;j++)\n\t\t\tt[n+j]=inf;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tans=max(ans,j-t[n+sum[j]]+1);\n\t\t\tt[n+sum[j-1]]=min(t[n+sum[j-1]],j);\n\t\t}\n\t}\n\tfor(int i=1;i<=S;i++){\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tcnt1[j]=cnt2[j]=0;\n\t\tint l=1,r=0;\n\t\twhile(r<n){\n\t\t\tr++,modify(a[r],1);\n\t\t\twhile(cnt1[a[r]]>i)\n\t\t\t\tmodify(a[l],-1),l++;\n\t\t\tif(cnt2[i]>=2)\n\t\t\t\tans=max(ans,r-l+1);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1605946984,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1446D1 \u3010Frequency Problem (Easy Version)\u3011"
    },
    {
        "content": "> \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u6c42\u4e00\u4e2a\u6700\u957f\u7684\u5b50\u6bb5\uff0c\u6ee1\u8db3\u8be5\u6bb5\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e0d\u6b62\u4e00\u4e2a\u3002\n\n\n\u5206\u4eab\u4e00\u4e2a\u5947\u602a\u7684\u4e8c\u5206\u505a\u6cd5\u3002\n\n\u8bbe\u5f53\u524d\u5224\u5b9a\u7684\u7b54\u6848\u4e3a $len$\uff0c\u67d0\u6bb5\u533a\u95f4\u5185 $i$ \u7684\u51fa\u73b0\u6b21\u6570\u4e3a $c_i$\u3002\u5219\u4ee5 $r$ \u4e3a\u7ed3\u5c3e\u7684\u67d0\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e $len$ \u7684\u533a\u95f4\u6ee1\u8db3\u6761\u4ef6\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n- $[r - len +1, r]$ \u7684\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u51fa\u73b0\u4e86 $f$ \u6b21\u3002\u8bb0\u8be5\u6570\u4e3a $x$\u3002\n- $\\exists i\\in[1,r-len+1]$ \u4f7f\u5f97 $[i,r]$ \u5185\u5b58\u5728\u53e6\u4e00\u4e2a\u6570 $y$\uff0c\u6ee1\u8db3\u5bf9\u4e8e $[i,r]$  \u6709 $c_y\\ge c_x$\u3002\n\n\u6211\u4eec\u53ea\u5173\u5fc3\u5bf9\u4e8e\u6240\u6709\u7684\u533a\u95f4 $[i,r]$ \u548c\u6240\u6709\u6570 $y\\neq x$\uff0c$c_y-c_x$ \u7684\u6700\u5927\u503c\u3002\u82e5\u8fd9\u4e2a\u6700\u5927\u503c\u975e\u8d1f\uff0c\u5219\u53ef\u4ee5\u5224\u5b9a $len$ \u6210\u7acb\u3002\n\n\u505a\u4e00\u4e2a\u524d\u7f00\u548c\u6570\u7ec4 $s$\uff0c\u5219\u4e0a\u8ff0\u6761\u4ef6\u53ef\u4ee5\u8f6c\u6362\u4e3a $s(r,y)-s(r,x)-\\min\\limits_{i=1}^{r-len+1}(s(i-1,y)-s(i-1,x))\\ge 0$\u3002\u5176\u4e2d $s(i-1,y)-s(i-1,x)$ \u7684\u6700\u5c0f\u503c\u5f88\u5bb9\u6613\u7ef4\u62a4\uff0c\u53ea\u9700\u8981\u9010\u4e2a\u679a\u4e3e $y$\uff0c\u5224\u5b9a\u4e0d\u7b49\u5f0f\u6210\u7acb\u6027\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(na\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nconst int MAXN = 2e5 + 19;\nint n, a[MAXN], s[MAXN][101], min[101][101];\nbool check(int len){\n    memset(min, 0, sizeof min);\n\tfor(int i = len; i <= n; ++i){\n\t\tfor(int j = 1; j <= 100; ++j)\n\t\t\tmin[j][a[i - len]] = std::min(min[j][a[i - len]], s[i - len][j] - s[i - len][a[i - len]]);\n\t\tint mx = std::max_element(s[i] + 1, s[i] + 101) - s[i];\n\t\tfor(int j = 1; j <= 100; ++j)\n\t\t\tif(j != mx && s[i][j] - min[j][mx] >= s[i][mx])\n\t\t\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i){\n\t\tscanf(\"%d\", a + i),\t++s[i][a[i]];\n\t\tfor(int j = 1; j <= 100; ++j)\n\t\t\ts[i][j] += s[i - 1][j];\n\t}\n\tfor(int i = 1; i <= 100; ++i)\n\t\tif(s[n][i] == n)\n\t\t    return puts(\"0\"), 0;\n\tint l = 2, r = n;\n\twhile(l < r){\n\t\tint mid = (l + r + 1) >> 1;\n\t\tcheck(mid) ? l = mid : r = mid - 1;\n\t}\n\tprintf(\"%d\\n\", l);\n\treturn 0;\n}\n```",
        "postTime": 1605579605,
        "uid": 222441,
        "name": "Flan",
        "ccfLevel": 7,
        "title": "CodeForces 1446D1 Frequency Problem (Easy Version)"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a $a_1,a_2,\\cdots,a_n$\uff0c\u6c42\u6700\u957f\u7684\u6ee1\u8db3\u533a\u95f4\u4f17\u6570\u6709\u81f3\u5c11\u4e24\u79cd\u7684\u533a\u95f4\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u533a\u95f4\uff0c\u8f93\u51fa $0$\u3002\n\n## \u5206\u6790\n\n### D1\n\n\u9996\u5148\uff0c\u5982\u679c\u539f\u5e8f\u5217\u53ef\u4ee5\u6210\u4e3a\u7b54\u6848\uff0c\u5c31\u53d6 $n$ \u4e3a\u6700\u7ec8\u7ed3\u679c\u3002\u800c\u5bf9\u4e8e\u5176\u5b83\u7684\u60c5\u51b5\uff0c\u7b54\u6848\u5e8f\u5217\u7684\u4f17\u6570\u5c31\u53ea\u6709\u4e00\u79cd\uff0c\u8bb0\u4e3a $x$\n\n\u7136\u540e\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n+ \u7b54\u6848\u5e8f\u5217\u7684\u591a\u4e2a\u4f17\u6570\u4e2d**\u4e00\u5b9a\u5305\u542b** $x$\u3002\n\n\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u597d\u7684\u5e8f\u5217\u7684\u4e0b\u6807\u533a\u95f4 $[l,r]$\uff0c\u5982\u679c $x$ \u4e0d\u662f\u5176\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u4f9d\u6b21\u8003\u8651\u539f\u5e8f\u5217\u4e2d\u7684 $[l - 1, r], [l - 2, r], \\cdots, [1, r], [1, r + 1], \\cdots, [1, n]$ \u8fd9 $n + l - r$ \u4e2a\u4e0b\u6807\u533a\u95f4\u3002\u56e0\u4e3a $x$ \u7684\u6570\u91cf\u5728\u4e24\u4e2a\u76f8\u90bb\u533a\u95f4\u4e2d\u6700\u591a\u589e\u52a0 $1$ \u4e2a\uff0c\u53c8\u56e0\u4e3a\u5b83\u662f\u6574\u4e2a\u5e8f\u5217\u91cc\u7684\u4f17\u6570\uff0c\u6240\u4ee5\u603b\u6709\u67d0\u4e00\u6b65\u540e\uff0c$x$ \u548c\u7b54\u6848\u533a\u95f4\u4e2d\u7684\u5176\u4ed6\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u4e00\u6837\u591a\u3002\n\n\u63a5\u4e0b\u6765\u679a\u4e3e\u53ef\u80fd\u6210\u4e3a\u4e0e $x$ \u4e0d\u540c\u7684\u4f17\u6570 $y$\uff0c\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u3001$x$ \u4e0e $y$ \u4e2a\u6570\u76f8\u540c\u7684\u5b50\u6bb5\u3002\u4e8e\u662f\u5c06 $x$ \u582a\u4e3a $1$\uff0c$y$ \u770b\u4e3a $-1$\uff0c\u6c42\u524d\u7f00\u548c\uff0c\u627e\u5230\u6700\u8fdc\u76f8\u540c\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u73b0\u5728\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Theta(100n)$\uff0c\u53ef\u8fc7 D1\n\n### D2\n\n\u8003\u8651 $x$ \u7684\u51fa\u73b0\u6b21\u6570 $k$\uff0c\u5e76\u5bf9 $k$ \u8fdb\u884c\u6839\u53f7\u5206\u6cbb\uff1a\n\n1. $k \\ge \\sqrt n$\n\n\u53ef\u80fd\u6210\u4e3a $y$ \u7684\u6570\u5c11\u4e8e $\\sqrt n$ \u4e2a\uff0c\u4f7f\u7528 D1 \u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n \\sqrt n)$\n\n2. $k \\le \\sqrt n$\n\n\u679a\u4e3e\u533a\u95f4\u5185 $x$ \u51fa\u73b0\u6b21\u6570 $k$ \u4e0e\u7b54\u6848\u533a\u95f4\u53f3\u7aef\u70b9 $r$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $r$\uff0c\u8bb0\u5f55\u6700\u5c0f\u7684\u4f7f\u5f97 $[l,r]$ \u5185\u6240\u6709\u6570\u51fa\u73b0\u6b21\u6570\u90fd $\\le k$ \u7684 $l$\u3002\u663e\u7136\uff0c\u968f\u7740 $r$ \u7684\u589e\u52a0\uff0c$l$ \u5355\u8c03\u9012\u589e\u3002\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u76f4\u63a5\u53cc\u6307\u9488\u7ef4\u62a4\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $\\Theta(n\\sqrt n)$\n\n## \u4ee3\u7801\n\n\u51fa\u4e8e\u7b80\u6d01\u8003\u8651\uff0c\u53ea\u653e D2 \u4ee3\u7801\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <math.h>\n#define lld long long\n#define cst(x) const x\n#define cref(x) const x&\n#define reg(x) register x\nusing namespace std;\n#ifdef ONLINE_JUDGE\n#define getchar() getchar_unlocked()\n#define putchar(ch) putchar_unlocked(ch)\n#endif\ncst(int) prec=6;\ntemplate<class T>inline void writeInt(reg(T)x){x=(x<0?(putchar('-'),-x):x);reg(char)c=0;static char s[50];do{s[++c]=x%10,x/=10;}while(x);for(reg(int)i=c;i;--i)putchar(s[i]^48);}\ntemplate<class T>inline void readInt(reg(T&)x){x=0;reg(T)fl=1;reg(char)ch;for(;(ch=getchar(),ch=='-'&&(fl=-1),ch)<48||ch>57;);for(x=ch&15;(ch=getchar())>=48&&ch<=57;x=(x<<3)+(x<<1)+(ch&15));x*=fl;}\ntemplate<class T>inline void writeFloat(reg(T)x){x=(x<0?(putchar('-'),-x):x);reg(T)cpy=x,add=0.5;for(reg(int)i=prec;i;--i)add/=10;writeInt((lld)(cpy+=add)),putchar('.'),cpy-=(lld)cpy;for(reg(int)i=prec;i;--i)putchar((int)(cpy=(cpy-(int)cpy)*10)+'0');}\ntemplate<class T>inline void readFloat(reg(T&)x){x=0;reg(char)ch;reg(T)fl=1,val=0.1;for(;(ch=getchar(),ch=='-'&&(fl=-1),ch)<48||ch>57;);for(x=ch&15;((ch=getchar())>=48&&ch<=57);)x=x*10+(ch&15);if(ch=='.')for(;((ch=getchar())>=48&&ch<=57);val/=10)x+=(ch&15)*val;x*=fl;}\ninline void writeStr(reg(cst(char*))str){for(reg(cst(char*))p=str;*p;++p)putchar(*p);}\ninline void readStr(reg(char*)str){reg(char*)p=str;for(;(*p=getchar())!=' '&&*p!='\\n'&&~*p;++p);*p=0;}\n\nconst int N = 200010, M = 450;\nstatic int n, a[N], ans;\nstatic int sum[N], pre[N << 1];\nstatic int cnt[N];\nint main() {\n\treadInt(n);\n\tfor (reg(int) i = 1; i <= n; ++ i) readInt(a[i]), ++ cnt[a[i]];\n\treg(int) sq = sqrt(n), mxval = 1;\n\tfor (reg(int) i = 2; i <= n; ++ i)\n\t\tif (cnt[a[i]] > cnt[mxval]) mxval = a[i];\n\tfor (reg(int) i = 1; i <= n; ++ i)\n\t\tif (a[i] != mxval && cnt[a[i]] == cnt[mxval]) {\n\t\t\twriteInt(n);\n\t\t\treturn 0;\n\t\t}\n\t// k >= sqrt(n)\n\tfor (reg(int) y = 1, i; y <= n; ++ y)\n\t\tif (cnt[y] >= sq && y != mxval) {\n\t\t\tmemset(pre, 0, sizeof(pre));\n\t\t\tfor (i = 1; i <= n; ++ i) {\n\t\t\t\tsum[i] = sum[i - 1] + (a[i] == mxval ? 1 : (a[i] == y ? -1 : 0));\n\t\t\t\tif (!pre[sum[i] + N] && sum[i]) pre[sum[i] + N] = i;\n\t\t\t\telse ans = max(ans, i - pre[sum[i] + N]);\n\t\t\t}\n\t\t}\n\t// k < sqrt(n)\n\tfor (reg(int) c = 1, ccnt, l, r; c <= sq; ++ c)\n\t\tfor (memset(cnt, 0, sizeof(cnt)), l = r = 1, ccnt = 0; r <= n; ++ r) {\n\t\t\tif ((++ cnt[a[r]]) == c) ++ ccnt;\n\t\t\tfor (; l <= r && cnt[a[r]] > c; (cnt[a[l]] == c) && (-- ccnt), -- cnt[a[l ++]]);\n\t\t\tif (ccnt >= 2) ans = max(ans, r - l + 1);\n\t\t}\n\twriteInt(ans);\n}\n```",
        "postTime": 1665234000,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "CF1446D1 Frequency Problem (Easy Version) \u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3\n\n- \u9898\u610f\u5341\u5206\u597d\u7406\u89e3\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\n\n- \u9996\u5148\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u77e5\u9053\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u6700\u957f\u7684\u4f17\u6570\u4e0d\u552f\u4e00\u7684\u5b50\u5e8f\u5217\u4e00\u5b9a\u5305\u542b\u6574\u4e2a\u5e8f\u5217\u7684\u4f17\u6570**\u3002\u8bc1\u660e\u7684\u8bdd\u9898\u89e3\u533a\u6709\u5f88\u591a\uff0c\u800c\u4e14\u5f88\u597d\u7406\u89e3\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8bc1\u660e\u4e86\u3002\n\n- \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a**\u6c42\u6700\u957f\u7684\u5b50\u5e8f\u5217\uff0c\u5176\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4f17\u6570\u6709\u4e0e\u6574\u4e2a\u5e8f\u5217\u7684\u4f17\u6570\u5728\u5b50\u5e8f\u5217\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u76f8\u540c**\u3002\u867d\u7136\u53ef\u80fd\u6709\u4e9b\u96be\u7406\u89e3\uff0c\u4f46\u662f\u8fd9\u662f\u8fd9\u9898\u7684\u91cd\u70b9\uff0c\u7406\u89e3\u4e86\u8fd9\u4e2a\uff0c\u540e\u9762\u7684\u5c31\u662f\u5199\u5b9e\u73b0\u65b9\u6cd5\u800c\u5df2\u4e86\u3002\n\n- \u8bb2\u4e00\u4e0b\u5b9e\u73b0\u65b9\u6cd5\uff1a\u9996\u5148\u80af\u5b9a\u662f\u6c42\u51fa\u4f17\u6570\uff0c\u7136\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6709\u591a\u4e2a\u3002\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5c31\u679a\u4e3e\u4e00\u4e0b\u53e6\u4e00\u4e2a\u4f17\u6570\uff0c\u7136\u540e\u7b97\u6700\u957f\u7684\u5b50\u5e8f\u5217\u5373\u53ef\u3002\n\n- \u6c42\u6700\u957f\u5b50\u5e8f\u5217\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u5b50\u5e8f\u5217\u4e2d\uff0c**\u6574\u4e2a\u5e8f\u5217\u7684\u4f17\u6570**\u548c**\u679a\u4e3e\u7684\u4f17\u6570**\u51fa\u73b0\u6b21\u6570\u5e94\u8be5\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6574\u4e2a\u5e8f\u5217\u4e2d\u7684\u6570\u5206\u4e3a\u4e09\u7c7b\uff1a\u7b49\u4e8e**\u6574\u4e2a\u5e8f\u5217\u7684\u4f17\u6570**\u7684\u6570\u3001\u7b49\u4e8e**\u679a\u4e3e\u7684\u4f17\u6570**\u7684\u6570\u3001\u5176\u5b83\u6570\uff0c\u5206\u522b\u7528 $1,-1,0$ \u8d4b\u503c\uff0c\u90a3\u4e48\u6700\u540e\u8981\u7edf\u8ba1\u7684\u662f**\u6700\u957f\u7684\u548c\u4e3a $0$ \u7684\u5b50\u5e8f\u5217**\u3002\n\n- \u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O( \\max {a_i}\\times n)$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, a[200005], tot[105], pre[200005], mp[400005];\n\nint main()\n{\n\tcin >> n;\n\tfor (int i = 1 ; i <= n ; i ++)\n\t{\n\t\tcin >> a[i];\n\t\ttot[a[i]] ++;\n\t}\n\tint cnt = 0, maxtot = 0;\n\tfor (int i = 1 ; i <= 100 ; i ++)\n\t{\n\t\tif (tot[i] == maxtot)\n\t\t{\n\t\t\tcnt ++;\n\t\t}\n\t\telse if (tot[i] > maxtot)\n\t\t{\n\t\t\tcnt = 1;\n\t\t\tmaxtot = tot[i];\n\t\t}\n\t}\n\tif (cnt > 1)\n\t{\n\t\tcout << n;\n\t\treturn 0;\n\t}\n\tint maxa = 0;\n\tfor (int i = 1 ; i <= 100 ; i ++)\n\t{\n\t\tif (tot[i] == maxtot)\n\t\t{\n\t\t\tmaxa = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tint ans = 0;\n\tfor (int i = 1 ; i <= 100 ; i ++)\n\t{\n\t\tfor (int j = 1 ; j <= n ; j ++)\n\t\t{\n\t\t\tpre[j] = pre[j - 1] + (a[j] == i ? -1 : (a[j] == maxa ? 1 : 0));\n\t\t}\n\t\tfor (int j = -n ; j <= n ; j ++)\n\t\t{\n\t\t\tmp[n + j] = 1000000000;\n\t\t}\n\t\tfor (int j = 1 ; j <= n ; j ++)\n\t\t{\n\t\t\tans = max(ans, j - mp[n + pre[j]] + 1);\n\t\t\tmp[n + pre[j - 1]] = min(mp[n + pre[j - 1]], j);\n\t\t}\n\t}\n\tcout << ans;\n}\n```\n",
        "postTime": 1655126862,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1446D1\u3010Frequency Problem (Easy Version)\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.tonyyin.top/2021/12/cf1446d2/)\n\n\u76f4\u63a5\u4f20D2\u7684\u9898\u89e3\u4e0a\u6765\u4e86\u3002\n\n**D1\u505a\u6cd5\u53c2\u8003\uff1a$\\operatorname{C} > \\sqrt{n}$ \u7684\u60c5\u51b5\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5bf9\u89e3\u51b3D1\u6ca1\u6709\u5e2e\u52a9\u3002**\n\n\u8fd9\u79cd\u505a\u6cd5\u5728D1\u4e2d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\times \\operatorname{maxa})$.\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217 $a_1, a_2\\cdots, a_n$\uff0c\u6c42\u6700\u957f\u7684\u5b50\u6bb5\uff0c\u4f7f\u5f97\u5176\u4e2d\u6709\u81f3\u5c11\u4e24\u4e2a\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\u3002\n\n\u8f93\u51fa\u5b50\u6bb5\u7684\u957f\u5ea6\uff0c$1\\leq n\\leq 2\\times 10^5$.\n\n## \u9898\u89e3\n\n#### \u5f15\u7406\u53ca\u8bc1\u660e\n\n> \u4f17\u6570\uff1a\u4e00\u4e2a\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5173\u4e8e\u4f17\u6570\u7684\u7ed3\u8bba\uff1a**\u7b54\u6848\u5b50\u6bb5\u7684\u4f17\u6570\u96c6\u5408\uff0c\u4e00\u5b9a\u5305\u542b\u539f\u5e8f\u5217\u7684\u4f17\u6570\u3002**\n\n\u53ef\u4ee5\u901a\u8fc7**\u53cd\u8bc1\u6cd5**\u6765\u8bc1\u660e\uff1a\n\n\u8bb0 $x$ \u662f\u539f\u5e8f\u5217\u7684\u4f17\u6570\uff0c**\u5047\u8bbe\u5b58\u5728**\u5b50\u6bb5 $a_l, a_{l+1}, \\cdots, a_r$ \u662f\u9898\u76ee\u6240\u6c42\u7684\u6700\u957f\u5b50\u6bb5\uff0c\u4e14\u5b50\u6bb5\u7684\u4f17\u6570\u4e0d\u5305\u542b $x$.\n\n\u6839\u636e\u4f17\u6570\u7684\u5b9a\u4e49\uff0c\u5728 $a_{[1, l-1]}$ \u548c $a_{[r+1, n]}$ \u4e2d\u4e00\u5b9a\u8fd8\u5305\u542b $x$\u3002\u4e0d\u59a8\u8bbe\u5de6\u4fa7\u5305\u542b $x$\uff0c\u5373 $\\exists a_p=x, p\\in[1, l-1]$.\n\n**\u8003\u8651\u5c06\u5b50\u6bb5 $a_{[l, r]}$ \u5411\u4e24\u4fa7\u6269\u5c55\uff0c\u628a $a_p$ \u5305\u542b\u8fdb\u53bb**\uff0c\u8fd9\u6837\u4f7f\u5b50\u6bb5\u957f\u5ea6\u53d8\u5927\uff0c\u4e0b\u9762\u8bf4\u660e\u4e00\u5b9a\u5b58\u5728\u65b9\u6848\u53ef\u4ee5\u5305\u542b $a_p$.\n\n\u628a $a_{[l, r]}$ \u6269\u5c55\u4e3a $a_{[p,r]}$ \u540e\uff0c\n\n- \u82e5\u5176\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570**\u4e0d\u53d8**\uff0c\u5219 $a_{[p,r]}$ \u5373\u4e3a\u66f4\u4f18\u7b54\u6848\u3002\n- \u82e5\u5176\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570**\u589e\u52a0**\uff0c\u90a3\u4e48\u6211\u4eec\u7ee7\u7eed\u6269\u5c55\uff0c\u4f7f\u66f4\u591a\u7684 $x$ \u88ab\u5305\u542b\u8fdb\u53bb\u3002\u7531\u4e8e $x$ \u662f\u6574\u4e2a\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\uff0c\u6240\u4ee5\u628a $x$ \u4e00\u4e2a\u4e00\u4e2a\u52a0\u8fdb\u53bb\uff0c\u6700\u540e\u5c31\u53d8\u6210\u4e86\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u603b\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6bd4 $a_{[l,r]}$ \u66f4\u4f18\u7684\u7b54\u6848\uff0c**\u5047\u8bbe\u4e0d\u6210\u7acb**\u3002\n\n\u6240\u4ee5\u7ed3\u8bba\u6210\u7acb\u3002\n\n#### \u601d\u8def\n\n\u5148\u627e\u5230\u5e8f\u5217 $a$ \u7684\u4f17\u6570 $x$\uff0c\u82e5\u5b58\u5728\u591a\u4e2a\u4f17\u6570\uff0c\u5219\u7b54\u6848\u4e3a $n$.\n\n\u5bf9\u7b54\u6848\u4e2d**\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570**\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\uff0c\u5206\u522b\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u5904\u7406\u3002\n\n\u8bbe $\\operatorname{C}$ \u4e3a**\u7b54\u6848\u5b50\u6bb5\u7684\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570**\uff0c$x,y$ \u8868\u793a\u7b54\u6848\u5b50\u6bb5\u7684\u4f17\u6570\uff0c$\\operatorname{cnt_i}$ \u4e3a\u503c $i$ \u5728\u5e8f\u5217 $a$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u4e0b\u9762\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\n\n#### $\\operatorname{C} > \\sqrt{n}$ \u7684\u60c5\u51b5\n\n\u7531\u4e8e\u7b54\u6848\u5b50\u6bb5\u4e00\u5b9a\u5305\u542b\u4f17\u6570 $x$\uff0c\u4e14 $\\operatorname{C}>\\sqrt{n}$\uff0c\u6240\u4ee5 $y$ \u4e5f\u6ee1\u8db3 $\\operatorname{cnt}_y>\\sqrt{n}$.\n\n\u663e\u7136\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684 $y$ \u6700\u591a\u6709 $\\sqrt{n}$ \u4e2a\uff0c\u8003\u8651\u679a\u4e3e $y$\u3002\n\n\u53ea\u9700\u5728 $\\mathcal{O}(n)$ \u7684\u590d\u6742\u5ea6\u5185**\u6c42\u51fa\uff1a\u4ee5 $(x,y)$ \u4f5c\u4e3a\u4f17\u6570\u7684\u6700\u5927\u5b50\u6bb5\u957f\u5ea6**\u3002\n\n\u6b64\u65f6\u95ee\u9898\u53ea\u4e0e $x,y$ \u8fd9\u4e24\u4e2a\u503c\u6709\u5173\uff0c\u9700\u8981\u7528\u5230\u4e00\u4e2a\u5e38\u89c1\u5957\u8def\uff0c**\u8ba9 $x$ \u7684\u6743\u503c\u4e3a $1$\uff0c$y$ \u7684\u6743\u503c\u4e3a $-1$\uff0c\u5176\u4f59\u4e3a $0$**.\n\n\u53ea\u9700\u5728\u65b0\u5e8f\u5217\u4e2d\u627e\uff1a\u6570\u503c\u548c\u4e3a $0$ \u7684\u6700\u957f\u5b50\u6bb5\u3002\n\n\u5bf9\u65b0\u6570\u5217\u7ef4\u62a4\u524d\u7f00\u548c $s_i$\uff0c\u5b50\u6bb5 $[l,r]$ \u7684\u6570\u503c\u548c\u4e3a $0$ \u7b49\u4ef7\u4e8e\uff1a$s_r=s_{l-1}$\uff0c\u53ea\u9700\u8bb0\u5f55\u6bcf\u4e2a $s_i$ \u7684\u6700\u65e9\u51fa\u73b0\u4f4d\u7f6e\u5373\u53ef\u3002\n\n```cpp\n// 1. \u7b54\u6848\u533a\u95f4\u4e2d\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570 > sqrt(n)\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u884c\u7684\u6570\u503ccheck\nfor(int i = 1; i <= n; i++) if(cnt[i] >= Sqrt && i != mxval) {\n    memset(L, 0, sizeof(L)); L[0 + N] = 0;\n    for(int j = 1; j <= n; j++) {\n        s[j] = s[j - 1] + (a[j] == mxval ? 1 : (a[j] == i ? -1 : 0));\n        if(!L[s[j] + N] && s[j]) L[s[j] + N] = j; //\u6ce8\u610f\u8fd9\u91cc\u4e0b\u6807\u53ef\u80fd\u4e3a\u8d1f\uff0c\u6240\u4ee5\u8981\u90fd\u52a0\u4e0aN\n        else ans = max(ans, j - L[s[j] + N]);\n    }\n}\n\n```\n\n\u6ce8\u610f $s_i\\in[-n, n]$\uff0c\u8bb0\u5f55\u6700\u65e9\u51fa\u73b0\u4f4d\u7f6e\u7684\u6570\u7ec4\uff0c\u4e0b\u6807\u9700\u8981\u6574\u4f53 $i\\leftarrow i+n$.\n\n#### $\\operatorname{C} \\leq \\sqrt{n}$ \u7684\u60c5\u51b5\n\n\u8003\u8651\u679a\u4e3e $\\operatorname{C}$\uff0c\u53ea\u9700\u5728 $\\mathcal{O}(n)$ \u7684\u590d\u6742\u5ea6\u5185**\u6c42\u51fa\uff1a\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u4e3a $\\operatorname{C}$ \u7684\u6700\u5927\u5b50\u6bb5**\u3002\n\n\u8fd9\u53ef\u4ee5\u7528**\u53cc\u6307\u9488**\u89e3\u51b3\uff0c**\u7ec6\u8282\u6709\u70b9\u591a**\u3002\n\n```cpp\n// 2. \u7b54\u6848\u533a\u95f4\u4e2d\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570 <= sqrt(n)\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u884c\u7684\u7b54\u6848\uff0c\u53cc\u6307\u9488\u5224\u65ad\u662f\u5426\u5408\u6cd5\nfor(int C = 1; C <= Sqrt; C++) {\n    memset(cnt, 0, sizeof(cnt));\n    for(int l = 1, r = 1, C_cnt = 0; r <= n; r++) {\n        cnt[a[r]]++; if(cnt[a[r]] == C) C_cnt++;\n        while(l <= r && cnt[a[r]] > C) {\n            if(cnt[a[l]] == C) C_cnt--;\n            cnt[a[l++]]--;\n        }\n        if(C_cnt >= 2) ans = max(ans, r - l + 1);\n    }\n}\n```\n\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c$\\operatorname{C_{cnt}}$ \u4ee3\u8868\u51fa\u73b0\u6b21\u6570\u4e3a $\\operatorname{C}$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\u52a8\u6001\u7ef4\u62a4\u6876\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 10, N = 2e5;\nint n, a[MAXN], ans;\nint L[MAXN << 1], s[MAXN]; //\u60c5\u51b5\u4e00\uff0cL[i]\u4e3a\u524d\u7f00\u548ci\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\uff0cs[i]\u4e3a\u524d\u7f00\u548c\nint cnt[MAXN]; //\u60c5\u51b52\uff0c\u5bf9\u4e8e\u76ee\u524d\u7684\u5c3a\u53d6\u533a\u95f4\uff0ccnt\u662f\u5bf9a[]\u7684\u6876\nint main() {\n\tios::sync_with_stdio(false);\n\tcin >> n;\n\tint Sqrt = (int)(sqrt(n));\n\tfor(int i = 1; i <= n; i++) cin >> a[i], cnt[a[i]]++;\n\tint mxcnt = 0, mxval = -1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(cnt[a[i]] > mxcnt) mxcnt = cnt[a[i]], mxval = a[i];\n\t\telse if(cnt[a[i]] == mxcnt && a[i] != mxval) mxval = n + 1;\n\t}\n\tif(mxval == n + 1) { cout << n << endl; return 0; } //\u82e5\u4f17\u6570\u6709\u4fe9\uff0c\u76f4\u63a5\u8f93\u51fan\n//\t1. \u7b54\u6848\u533a\u95f4\u4e2d\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570 > sqrt(n)\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u884c\u7684\u6570\u503ccheck\n\tfor(int i = 1; i <= n; i++) if(cnt[i] >= Sqrt && i != mxval) {\n\t\tmemset(L, 0, sizeof(L)); L[0 + N] = 0;\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\ts[j] = s[j - 1] + (a[j] == mxval ? 1 : (a[j] == i ? -1 : 0));\n\t\t\tif(!L[s[j] + N] && s[j]) L[s[j] + N] = j; //\u6ce8\u610f\u8fd9\u91cc\u4e0b\u6807\u53ef\u80fd\u4e3a\u8d1f\uff0c\u6240\u4ee5\u8981\u90fd\u52a0\u4e0aN\n\t\t\telse ans = max(ans, j - L[s[j] + N]);\n\t\t}\n\t}\n//\t2. \u7b54\u6848\u533a\u95f4\u4e2d\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570 <= sqrt(n)\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u884c\u7684\u7b54\u6848\uff0c\u53cc\u6307\u9488\u5224\u65ad\u662f\u5426\u5408\u6cd5\n\tfor(int C = 1; C <= Sqrt; C++) {\n\t\tmemset(cnt, 0, sizeof(cnt));\n\t\tfor(int l = 1, r = 1, C_cnt = 0; r <= n; r++) {\n\t\t\tcnt[a[r]]++; if(cnt[a[r]] == C) C_cnt++;\n\t\t\twhile(l <= r && cnt[a[r]] > C) {\n\t\t\t\tif(cnt[a[l]] == C) C_cnt--;\n\t\t\t\tcnt[a[l++]]--;\n\t\t\t}\n\t\t\tif(C_cnt >= 2) ans = max(ans, r - l + 1);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1641172092,
        "uid": 166535,
        "name": "TonyYin",
        "ccfLevel": 0,
        "title": "CF1446D1 Frequency Problem (Easy Version)"
    }
]