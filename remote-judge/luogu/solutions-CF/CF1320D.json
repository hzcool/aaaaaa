[
    {
        "content": "# \u9898\u89e3-Reachable Strings\n\n[$\\texttt{Read it in my cnblogs.}$](https://www.cnblogs.com/Wendigo/p/12539363.html)\n\n**\u524d\u7f6e\u77e5\u8bc6\uff1a**\n\n> $\\texttt{Hash}$\n\n---\n\n> [Reachable Strings](https://www.luogu.com.cn/problem/CF1320D)\n\n> \u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 $\\texttt{01}$ \u4e32 $s$\uff0c\u53ef\u4ee5\u8ba9 $s$ \u4e2d\u7684 $\\texttt{110}$ \u548c $\\texttt{011}$ \u4e92\u76f8\u8f6c\u6362\u3002$q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u4e24\u4e2a $s$ \u7684\u5b50\u4e32 $s_{l_1\\sim l_1+len-1}$ \u548c $s_{l_2\\sim l_2+len-1}$\uff0c\u95ee\u4e24\u4e2a\u4e32\u662f\u5426\u53ef\u4ee5\u4e92\u76f8\u53d8\u6362\u5f97\u5230\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le n,q\\le 10^5$\u3002\n\n---\n\u54c8\u5e0c\u840c\u65b0\u89c9\u5f97\u8fd9\u662f\u54c8\u5e0c\u597d\u9898\u3002\n\n---\n\n\u5f88\u5bb9\u6613\u6ce8\u610f\u5230 $\\texttt{11}\\color{#9c3}\\texttt{0}\\color{black}\\leftrightarrow\\color{#9c3}\\texttt{0}\\color{black}\\texttt{11}$ \u5c31\u662f **$\\texttt{0}$ \u5de6\u53f3\u79fb\u52a8\u4e24\u4e2a\u4f4d\u7f6e**\u3002\n\n\u4f46\u662f**\u4e0d\u53ef\u4ee5** $\\texttt{10}\\color{#9c3}\\texttt{0}\\color{black}\\leftrightarrow\\color{#9c3}\\texttt{0}\\color{black}\\texttt{01}$ \u6216 $\\texttt{01}\\color{#9c3}\\texttt{0}\\color{black}\\leftrightarrow\\color{#9c3}\\texttt{0}\\color{black}\\texttt{10}$\uff0c\u8bf4\u660e **$\\texttt{0}$ \u79fb\u52a8\u65f6\u4e0d\u80fd\u8de8\u8d8a\u522b\u7684 $\\texttt{0}$**\u3002\n\n\u7efc\u4e0a\uff0c\u6240\u6709 $\\texttt{0}$ \u7684**\u4f4d\u7f6e\uff08\u4ece\u5de6\u5f80\u53f3\u7b2c\u51e0\u4e2a $\\texttt{0}$\uff09** \u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u5e76\u4e14\u4e0b\u6807\u7684\u5947\u5076\u6027\u4e0d\u4f1a\u53d8\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u628a\u6240\u6709 $\\texttt{0}$ \u6309\u5e8f\u8bb0\u5f55\u4e0b\u6807\u5947\u5076\u6027\u751f\u6210\u5e8f\u5217\uff0c\u7136\u540e**\u5224\u65ad \u4e24\u4e2a\u5b50\u5e8f\u5217 \u662f\u5426\u53ef\u4ee5\u4e92\u76f8\u53d8\u6362\u5f97\u5230 \u53ef\u4ee5\u7528\u5e8f\u5217\u54c8\u5e0c\u5bf9\u6bd4 \u770b\u662f\u5426\u76f8\u7b49**\u3002\n\n\u91cd\u70b9\u662f**\u56e0\u4e3a\u6bcf\u4e2a\u5b50\u5e8f\u5217\u7684\u8d77\u70b9\u5947\u5076\u6027\u4e0d\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\u6bcf\u4e2a $0$ \u6709\u4e24\u79cd\u5947\u5076\u6027\u53ef\u80fd\uff0c\u6240\u4ee5\u7528\u4e24\u4e2a\u54c8\u5e0c\u6570\u7ec4\u3002**\n\n---\n\n\u5177\u4f53\u5b9e\u73b0\u54c8\u5e0c\u65f6\u53ef\u4ee5\u7528\u4e00\u4e2a**\u8d28\u6570\u8fdb\u5236\u6570**\u6765\u8868\u793a\u4e00\u4e2a\u5e8f\u5217\u3002\n\n\u5982\u679c\u4ece\u9ad8\u5230\u4f4e\u7b2c $i$ \u4f4d\u4e3a $1$\uff0c\u5c31\u8868\u793a\u539f\u5b57\u7b26\u4e32\u4ece\u5de6\u5230\u53f3\u7b2c $i$ \u4e2a $\\texttt{0}$ \u7684\u4e0b\u6807\u4e3a**\u5947\u6570**\uff1b\u5982\u679c\u4e3a $2$\uff0c\u5c31\u8868\u793a\u539f\u5b57\u7b26\u4e32\u4ece\u5de6\u5230\u53f3\u7b2c $i$ \u4e2a $\\texttt{0}$ \u7684\u4e0b\u6807\u4e3a**\u5076\u6570**\u3002\n\n\u7136\u540e\u5f00\u524d\u7f00 $\\texttt{0}$ \u5e8f\u5217\u6570\u7ec4 $h$\uff0c$h_n$ \u8868\u793a\u539f\u5b57\u7b26\u4e32\u524d $n$ \u4e2a $\\texttt{0}$ \u54c8\u5e0c\u5f97\u7684\u8d28\u6570\u8fdb\u5236\u6570\u3002\n\n\u56e0\u4e3a\u5b50\u5e8f\u5217\u7684**\u8d77\u70b9\u5947\u5076\u6027\u4e0d\u540c**\uff0c\u6240\u4ee5\u6709\u4e24\u4e2a $h$\uff0c\u5206\u522b\u8868\u793a\u4ee5\u8d77\u70b9\u4e3a**\u5947\u6570\u548c\u5076\u6570**\u4e3a\u6807\u51c6\u65f6\u54c8\u5e0c\u5f97\u7684\u524d\u7f00 $\\texttt{0}$ \u5e8f\u5217\u6570\u7ec4\u3002\n\n\u5b50\u4e32\u53ef\u4ee5\u7531\u524d\u7f00 $\\texttt{0}$ \u5e8f\u5217\u6570\u7ec4\u63a8\u5f97\uff0c\u770b\u662f\u5426\u53ef\u4ee5\u4e92\u76f8\u53d8\u6362\u5f97\u5230\u53ea\u9700\u76f4\u63a5\u6bd4\u8f83\u5b50\u4e32\u3002\n\n\u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff1a**$0$ \u90a3\u4e48\u591a\uff0c\u5f62\u6210\u7684\u8d28\u6570\u8fdb\u5236\u6570\u592a\u5927\u600e\u4e48\u529e\uff08\u8fdc\u7206 $\\texttt{long long}$\uff09\uff1f**\n\n**\u89e3\u51b3\u65b9\u6cd5\u662f\u6a21\u67d0\u4e2a\u5927\u8d28\u6570\uff08\u5982 $998244353$\uff09\u3002** \u867d\u7136\u8fd9\u6837\u53ef\u80fd\u4f1a\u628a\u4e24\u4e2a\u4e0d\u540c\u7684\u5e8f\u5217\u54c8\u5e0c\u5f97\u4e00\u6837\uff0c\u4f46\u8fd9\u6b63\u662f\u54c8\u5e0c\u7684\u7cbe\u9ad3\u3002\u6ca1\u6709\u7edd\u5bf9\u6b63\u786e\u7684\u54c8\u5e0c\uff0c\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u5c31\u662f\u597d\u54c8\u5e0c\u3002\n\n---\n\n## $\\texttt{Code}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//&Start\n#define inf 0x3f3f3f3f\n#define re register\n#define il inline\n#define hash unorded_map\ntypedef long long lng;\ntypedef unsigned long long ulng;\ntypedef vector<int> veci;\n#define fo(i,st,xb,y) for(re int i=st;i xb;i y)\n\n//&Data\n#define N 200000\n#define mod 998244353 //\u6a21\u6570\u4e3a998244353\n#define base 5119 //5119\u8fdb\u5236\nchar s[N+10];\nint n,m,h[N+10][2],bs[N+10]={1},ze[N+10];\n//\u4e24\u4e2ah\uff0c\u8fdb\u5236\u524d\u7f00\u79ef\uff0c\u96f6\u6570\u91cf\u524d\u7f00\u548c\n\n//&Main\nil int Hash(re int l,re int r,re int o){return (-1ll*h[l-1][o]*bs[ze[r]-ze[l-1]]%mod+h[r][o]+mod)%mod;} //\u5b50\u5e8f\u5217\u54c8\u5e0c\u503c\nint main(){\n\tscanf(\"%d%s\",&n,s+1);  \n\tfo(i,1,<=n,++)\n\t\tif(s[i]=='1') h[i][0]=h[i-1][0],h[i][1]=h[i-1][1],ze[i]=ze[i-1];\n\t\telse h[i][0]=(1ll*h[i-1][0]*base%mod+1+(i&1))%mod,\n\t\t\th[i][1]=(1ll*h[i-1][1]*base%mod+1+((i&1)^1))%mod,ze[i]=ze[i-1]+1;\n\tfo(i,1,<=n,++) bs[i]=1ll*bs[i-1]*base%mod;\n\tscanf(\"%d\",&m); fo(i,1,<=m,++){\n\t\tre int l1,l2,len; scanf(\"%d%d%d\",&l1,&l2,&len);\n\t\t(Hash(l1,l1+len-1,l1&1)==Hash(l2,l2+len-1,l2&1)?puts(\"Yes\"):puts(\"No\"));\n\t}\n\treturn 0;\n}\n```\n\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**\n",
        "postTime": 1584774003,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1320D \u3010Reachable Strings\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u5dee\u4e0d\u591a\u7684\u89e3\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u64cd\u4f5c\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u627e\u5230\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u8ba9\u4e24\u8005\u76f8\u7b49\uff0c\u4e24\u8005\u5c31\u4e00\u5b9a\u76f8\u7b49\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u7b49\u4ef7\u7c7b\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e32\u8fdb\u884c\u6bd4\u8f83\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6267\u884c $110\\rightarrow 011$ \u8fd9\u4e2a\u64cd\u4f5c\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$11$ \u8fd9\u79cd\u4e32\u4e00\u5b9a\u53ef\u4ee5\u79fb\u5230\u4e32\u7684\u672b\u5c3e\uff0c\u800c\u4e14\u79fb\u5230\u672b\u5c3e\u53ef\u4ee5\u89c6\u4e3a\u5220\u9664 $11$\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5de6\u53f3\u8fb9\u754c\u7684\u6570\uff0c\u76ee\u524d\u7684\u957f\u5ea6\uff0c\u54c8\u5e0c\u7684\u503c\uff0c\u5728\u4e0a\u4f20\u7684\u65f6\u5019\u628a $11$ \u5220\u6389\u3002\n\n\u65f6\u95f4 $\\mathcal{O}(n\\log n)$\u3002\n\n\u4ee3\u7801\u4f7f\u7528\u4e86\u53cc\u54c8\u5e0c\uff0c\u6240\u4ee5\u6bd4\u8f83\u6162\u3002\n\n[code](https://codeforces.com/contest/1320/submission/92760906)",
        "postTime": 1600059093,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1320D \u3010Reachable Strings\u3011"
    },
    {
        "content": "`011` \u548c `110` \u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u53ef\u4ee5\u5c06\u6bcf\u4e2a `0` \u5411\u5de6\u53f3\u79fb\u52a8\u4e24\u4e2a\u5355\u4f4d\uff0c\u56e0\u6b64\u6bcf\u4e2a `0` \u7684\u4f4d\u7f6e\u4e0b\u6807\u7684\u5947\u5076\u6027\u4e0d\u4f1a\u53d8\u3002\n\n\u4f46\u662f\u5f53\u51fa\u73b0 `00` \u65f6\uff0c\u5de6\u8fb9\u7684 `0` \u65e0\u6cd5\u79fb\u5230\u53f3\u8fb9\uff0c\u53f3\u8fb9\u7684 `0` \u65e0\u6cd5\u79fb\u5230\u5de6\u8fb9\uff0c\u4e5f\u5c31\u662f**\u65e0\u6cd5\u8de8\u8d8a\u5947\u5076\u6027\u4e0d\u540c\u7684 `0`**\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316\uff0c\u5f53\u4e14\u4ec5\u5f53**\u6bcf\u4e2a `0` \u6240\u5728\u7684\u4f4d\u7f6e\u4e0b\u6807\u7684\u5947\u5076\u6027\u4e00\u4e00\u5bf9\u5e94**\u3002\n\n\u6bd4\u5982\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709 $6$ \u4e2a `0`\uff0c\u4f4d\u7f6e\u5206\u522b\u5728 $1,2,3,4,6,7$\uff0c\u5219\u5b83\u4e00\u5b9a\u53ef\u4ee5\u8f6c\u5316\u4e3a `0` \u7684\u4f4d\u7f6e\u5206\u522b\u5728 $1,10,101,102,1000,10101$ \u7684\u5b57\u7b26\u4e32\u3002\n\n\u90a3\u4e48\uff0c\u6bcf\u6b21\u8be2\u95ee\u76f8\u5f53\u4e8e\u6c42\u51fa\u4e00\u4e2a\u533a\u95f4\u5185\u6bcf\u4e2a `0` \u5728**\u4ee5\u8fd9\u4e2a\u533a\u95f4\u5f00\u5934\u4e3a\u5947\u4e0b\u6807**\u65f6\u7684\u5947\u5076\u6027\u3002\n\n\u6211\u4eec\u5bf9\u8fd9\u4e2a\u5947\u5076\u6027\u8fdb\u884c hash\uff0c\u5c31\u80fd\u5feb\u901f\u6bd4\u8f83\u4e24\u4e2a\u533a\u95f4\u5185\u7684\u4fe1\u606f\u662f\u5426\u4e00\u81f4\u4e86\u3002\n\n```cpp\n#define Hash pair<modint, modint>\nconst Hash B = mp(131, 13331);\ninline Hash operator + (Hash a, Hash b) { return mp(a.fi + b.fi, a.se + b.se); }\ninline Hash operator - (Hash a, Hash b) { return mp(a.fi - b.fi, a.se - b.se); }\ninline Hash operator * (Hash a, Hash b) { return mp(a.fi * b.fi, a.se * b.se); }\ninline Hash operator + (Hash a, int b) { return mp(a.fi + b, a.se + b); }\n\nconst int N = 2e5 + 7;\nint n, q, c[N];\nchar s[N];\nHash h[N][2], p[N];\n\ninline Hash H(int l, int r, int o) {\n\treturn h[r][o] - h[l-1][o] * p[c[r]-c[l-1]];\n}\n\nint main() {\n\trd(n), rds(s, n), rd(q);\n\tp[0] = mp((modint)1, (modint)1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (s[i] != '0') h[i][0] = h[i-1][0], h[i][1] = h[i-1][1], c[i] = c[i-1];\n\t\telse h[i][0] = h[i-1][0] * B + ('0' + (i & 1)), h[i][1] = h[i-1][1] * B + ('0' + ((i & 1) ^ 1)), c[i] = c[i-1] + 1;\n\t\tp[i] = p[i-1] * B;\n\t}\n\twhile (q--) {\n\t\tint l1, l2, len;\n\t\trd(l1), rd(l2), rd(len);\n\t\tint r1 = l1 + len - 1, r2 = l2 + len - 1;\n\t\tprints(H(l1, r1, l1 & 1) == H(l2, r2, l2 & 1) ? \"Yes\" : \"No\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1583219571,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1320D \u3010Reachable Strings\u3011"
    },
    {
        "content": "# [CF1320D Reachable Strings](http://codeforces.com/contest/1320/problem/D)\n\n**\u633a\u597d\u7684\u601d\u7ef4\u9898\uff0c\u7801\u91cf\u4e5f\u4e0d\u5927**\n\n\u9996\u5148\uff0c\u9700\u8981\u770b\u51fa\u4e00\u4ef6\u4e8b\u60c5\u2014\u2014\u2014\u2014\u4e00\u6b21\u53d8\u6362\u76f8\u5f53\u4e8e\u8ba9\u4e00\u4e2a $0$ \u5411\u524d\u8df3\u4e24\u4f4d\u6216\u5411\u540e\u8df3\u4e24\u4f4d\uff0c\u4f46 $00$ \u8fd9\u79cd\u5b50\u4e32\u4e24\u4e2a $0$ \u90fd\u4e92\u76f8\u8df3\u4e0d\u8fc7\u53bb\n\n\u867d\u7136\u5f88\u663e\u7136\uff0c\u4f46\u4e0d\u5bb9\u6613\u5411\u8fd9\u65b9\u9762\u601d\u8003\uff08\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86\uff09\n\n\u5047\u8bbe $t$ \u662f\u539f\u5b57\u7b26\u4e32\uff0c  $t_{l_{1}, l_{1} + 1, ... , l_{1} + len - 1}$ \u4e2d $0$ \u7684\u5947\u5076\u6027\u4f9d\u6b21\u662f $k1_{1}, k1_{2}, ..., k1_{cnt_{1}}$\uff0c$t_{l_{2}, l_{2} + 1, ... , l_{2} + len - 1}$ \u4e2d $0$ \u7684\u5947\u5076\u6027\u4f9d\u6b21\u662f $k2_{1}, k2_{2}, ..., k2_{cnt_{2}}$\n\n\u90a3\u4e48\u53ef\u4ee5\u7531 $t_{l_{1}, l_{1} + 1, ... , l_{1} + len - 1}$ \u53d8\u6210 $t_{l_{2}, l_{2} + 1, ..., l_{2} + len - 1}$ \u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\uff1a\n\n$\\begin{cases}cnt_1 = cnt_2 \\\\ k1_{i} = k2_{i} (1 \\le i \\le cnt_1) \\end{cases}$\n\n\u63a5\u4e0b\u6765\u5c31\u7b80\u5355\u4e86\u2014\u2014\u2014\u2014  \n\u5bf9\u5b57\u7b26\u4e32\u7b80\u5355\u54c8\u5e0c\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n\u8be6\u60c5\u89c1\u6211\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mp make_pair\n#define pb push_back\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\nll read()\n{\n\tchar c = getchar(); ll flag = 1, ans = 0;\n\twhile (c < '0' || c > '9') {if (c == '-') flag = -flag; c = getchar();}\n\twhile (c >= '0' && c <= '9') {ans = ans * 10 + c - '0'; c = getchar();}\n\treturn ans * flag;\n}\n\nconst ll INF = 1e16;\nconst int MAXN = 200020;\nconst ll MOD = 1e9 + 9, bas = 23;\nll has[2][MAXN], pw[MAXN], cnt[MAXN];\nchar c[MAXN];\nint n, q;\n\nll query (int l, int r, int op)\n{\n\treturn ((has[op][r] - has[op][l - 1] * pw[cnt[r] - cnt[l - 1]]) % MOD + MOD) % MOD;\n}\n\nint main()\n{\n\tscanf (\"%d\", &n);\n\tscanf (\"%s\", c + 1);\n\tfor (int i = 1; i <= n; ++ i)\n\t{\n\t\thas[0][i] = has[0][i - 1], has[1][i] = has[1][i - 1], cnt[i] = cnt[i - 1];\n\t\tif (c[i] == '0')\n\t\t{\n\t\t\thas[0][i] = (has[0][i - 1] * bas + 1 + (i & 1)) % MOD;\n\t\t\thas[1][i] = (has[1][i - 1] * bas + 1 + ((i & 1) ^ 1)) % MOD;\n\t\t\t++ cnt[i];\n\t\t}\n\t}\n\tpw[0] = 1;\n\tfor (ll i = 1; i <= n; ++ i)\n\t\tpw[i] = pw[i - 1] * bas % MOD;\n\tscanf (\"%d\", &q);\n\tfor (int i = 1; i <= q; ++ i)\n\t{\n\t\tll l1, l2, len;\n\t\tscanf (\"%lld%lld%lld\", &l1, &l2, &len);\n\t\tif (query (l1, l1 + len - 1, l1 & 1) == query (l2, l2 + len - 1, l2 & 1))\n\t\t\tprintf (\"Yes\\n\");\n\t\telse\n\t\t\tprintf (\"No\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1583460017,
        "uid": 59317,
        "name": "legend_life",
        "ccfLevel": 0,
        "title": "CF1320D Reachable Strings"
    },
    {
        "content": "\u6bd4\u8d5b\u65f6\u5e76\u6ca1\u6709\u641e\u51fa\u6765qwq\n\n\u9898\u76ee\u4e2d\u7684\u4e24\u79cd\u53d8\u6362\u53ef\u4ee5\u5f53\u4f5c\u662f\u5b57\u7b26 $1$ \u6216 $0$ \u7684\u4e00\u6b21\u8fd0\u52a8\u3002\u6211\u4eec\u5c1d\u8bd5\u5bfb\u627e $0$ \u7684\u8fd0\u52a8\u89c4\u5f8b\u3002\n\n\u89c2\u5bdf\u5230 $011\\to 110$ \u53ef\u4ee5\u770b\u4f5c $0$ \u5728\u53f3\u8fb9\u6709\u8fde\u7eed\u4e24\u4e2a $1$ \u65f6\u53f3\u79fb $2$ \u4f4d\uff0c\u800c $110\\to 011$ \u53ef\u4ee5\u770b\u4f5c $0$ \u5728\u5de6\u8fb9\u6709\u8fde\u7eed\u4e24\u4e2a $1$ \u65f6\u5de6\u79fb $2$ \u4f4d\u3002\u8003\u8651\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u53d8\u6362\uff0c\u53d1\u73b0\u4e24\u4e2a $0$ \u662f\u4e0d\u53ef\u4ee5\u76f8\u4e92\u8de8\u8d8a\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a $0$ \u7684\u4e0b\u6807\u7684\u5947\u5076\u6027\u5728\u53d8\u6362\u4e2d\u4fdd\u6301\u4e0d\u53d8\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e24\u4e2a\u7b49\u957f\u7684\u5b50\u4e32\uff0c\u82e5\u5b83\u4eec\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff0c\u5219\u53ef\u4ee5\u4e92\u76f8\u901a\u8fc7\u53d8\u6362\u8fbe\u5230\uff1a\n\n- $0$ \u7684\u4e2a\u6570\u76f8\u7b49\uff1b\n- \u4e24\u4e2a\u5b50\u4e32\u4e2d\u7684\u7b2c $i$ \u4e2a $0$ \u7684\u4e0b\u6807\u7684\u5947\u5076\u6027\u5bf9\u5e94\u76f8\u540c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5bf9 $0$ \u54c8\u5e0c\u5b83\u7684\u4e0b\u6807\u5947\u5076\u6027\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u91cc\u4e0b\u6807\u662f\u76f8\u5bf9\u5de6\u7aef\u70b9\u7684\uff0c\u6240\u4ee5\u6c42\u5b50\u4e32\u54c8\u5e0c\u65f6\u8fd8\u8981\u8ba8\u8bba\u5de6\u7aef\u70b9\u7684\u5947\u5076\u6027\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <chrono>\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nconst int MAXN=220000;\nconst int BASE=rng()%19260817+3;\nconst int MOD=1004535809;\nchar a[MAXN];\nint powb[MAXN];\nint cnt[MAXN], h1[MAXN], h2[MAXN];\ninline int query(int l, int r)\n{\n\tif (l&1) return (h1[r]-1ll*h1[l-1]*powb[cnt[r]-cnt[l-1]]%MOD+MOD)%MOD;\n\telse return (h2[r]-1ll*h2[l-1]*powb[cnt[r]-cnt[l-1]]%MOD+MOD)%MOD;\n}\nint main()\n{\n//\tfreopen(\"D.in\", \"r\", stdin);\n//\tfreopen(\"D.out\", \"w\", stdout);\n\tint n, q;\n\tscanf(\"%d%s\", &n, a+1);\n\tpowb[0]=1;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tpowb[i]=1ll*powb[i-1]*BASE%MOD;\n\t\tcnt[i]=cnt[i-1]+(a[i]=='0');\n\t\tif (a[i]=='0')\n\t\t{\n\t\t\th1[i]=(1ll*h1[i-1]*BASE+(i&1)+1)%MOD;\n\t\t\th2[i]=(1ll*h2[i-1]*BASE+(i&1^1)+1)%MOD;\n\t\t}\n\t\telse h1[i]=h1[i-1], h2[i]=h2[i-1];\n\t}\n\tscanf(\"%d\", &q);\n\twhile (q--)\n\t{\n\t\tint l, r, len;\n\t\tscanf(\"%d%d%d\", &l, &r, &len);\n\t\tif (query(l, l+len-1)==query(r, r+len-1)) puts(\"Yes\");\n\t\telse puts(\"No\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1583201970,
        "uid": 152449,
        "name": "\u7075\u68a6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1320D \u3010Reachable Strings\u3011"
    },
    {
        "content": "~~\u771f\u6709\u610f\u601d~~\u7684\u54c8\u5e0c\n\n---\n\u601d\u8def\uff1a\n\n\u65e0\u4fee\u6539\uff0c\u5b50\u4e32\u67e5\u8be2\uff0c\u5bb9\u6613\u60f3\u5230\u54c8\u5e0c\u3002\n\n\u8003\u8651\u6bcf\u79cd\u64cd\u4f5c\u7684\u5b9e\u8d28\uff1a\u5c06\u6bcf\u4e2a **0** \u5411\u524d\u79fb\u52a8\u4e24\u4f4d\uff08\u9700\u4fdd\u8bc1\u524d\u4e24\u4f4d\u90fd\u662f **1** \uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u7ba1 **0** \u7684\u4f4d\u7f6e\uff0c\u5ffd\u89c6 **1** \u3002\n\n\u8003\u8651\u4e00\u79cd\u6784\u9020\u60c5\u51b5\uff1a\u5c06\u6240\u6709 **0** \u5c3d\u53ef\u80fd\u524d\u79fb\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\uff08\u4e0d\u4f1a\u9057\u6f0f\uff09\u3002\n\n\u5206\u6790\u6837\u4f8b\u53ef\u77e5\uff1a\u4e24\u4e2a **0** \u7684\u6700\u7ec8\u76f8\u5bf9\u4f4d\u7f6e\uff08\u4f4d\u7f6e\u5dee\uff0c\u4e2d\u95f4\u9694\u7684 **1** \u7684\u4e2a\u6570\uff09\u53ea\u53ef\u80fd\u662f 0 \u6216 1 \u3002\uff08\u5982\u679c\u5927\u4e8e 1 \uff0c\u5219\u53ef\u7ee7\u7eed\u5411\u524d\u79fb\u52a8 2 \u4f4d\uff09\n\n\u5206\u6790\u53ef\u77e5\uff1a\u4e24\u4e2a **0** \u7684\u6700\u7ec8\u76f8\u5bf9\u4f4d\u7f6e\u662f\u5b83\u4eec\u7684\u521d\u59cb\u4f4d\u7f6e\u5dee\u6a21 2 \u3002\u4e8e\u662f\u8bb0\u4e0b\u6240\u6709 **0** \u7684\u6700\u7ec8\u76f8\u5bf9\u4f4d\u7f6e\u5e76\u54c8\u5e0c\u3002\n\n\u73b0\u5728\u786e\u5b9a\u4e86\u6240\u6709 **0** \u7684\u6700\u7ec8\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u53ea\u9700\u786e\u5b9a\u7b2c\u4e00\u4e2a **0** \u7684\u4f4d\u7f6e\u5373\u53ef\u786e\u5b9a\u6574\u4e2a\u6700\u7ec8\u5e8f\u5217\u5e76\u5224\u65ad\u3002\n\n\u7b2c\u4e00\u4e2a **0** \u7684\u4f4d\u7f6e\u5224\u5b9a\u5982\u524d\uff0c\u53ea\u9700\u5c06\u521d\u59cb\u4f4d\u7f6e\u6a21 2 \u5373\u53ef\u3002\n\n\u8fd9\u6837\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u6700\u7ec8\u5e8f\u5217\u6709\u8f83\u5927\u6982\u7387\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\u3002\u8bb0\u4e0b\u533a\u95f4 **0** \u7684\u4e2a\u6570\u5e76\u6bd4\u8f83\u5373\u53ef\u89e3\u51b3\u3002\n\n---\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n\u5c06\u6240\u6709 **0** \u7684\u4f4d\u7f6e\u653e\u8fdb\u6570\u7ec4\uff0c\u8ba1\u7b97\u6700\u7ec8\u76f8\u5bf9\u4f4d\u7f6e\u5e76\u54c8\u5e0c\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\u65f6\u4e8c\u5206\u5373\u53ef\u3002\n\n\u5177\u4f53\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#define int long long\n#define mod 998244353\nusing namespace std;\nint n,q,x,y,t,len,pos[200005],ch[200005],fac[200005],num[200005],sum[200005];\nchar s[200005];\ninline int getmod(int x){\n    return (x%mod+mod)%mod;\n}\ninline int getsum(int l,int r){//\u83b7\u53d6\u76f8\u5bf9\u4f4d\u7f6e\u54c8\u5e0c\u503c\n    if (l>r)return 0;\n    return getmod(sum[r]-sum[l-1]*fac[r-(l-1)]);\n}\ninline int getnum(int l,int r){//\u9632\u6b62hack\uff0c\u8bb0\u5f55\u533a\u95f40\u7684\u4e2a\u6570\n    return num[r]-num[l-1];\n}\ninline int lowwer(int x){\n    int l=1,r=len,ans=-1;\n    while(l<=r){\n        int mid=(l+r)/2;\n        if (pos[mid]<=x)ans=mid,l=mid+1;\n        else r=mid-1;\n    }\n    return ans;\n}\ninline int larger(int x){\n    int l=1,r=len,ans=-1;\n    while(l<=r){\n        int mid=(l+r)/2;\n        if (pos[mid]>=x)ans=mid,r=mid-1;\n        else l=mid+1;\n    }\n    return ans;\n}\ninline int getval(int nowl,int nowr){ //\u83b7\u53d6\u6700\u7ec8\u5e8f\u5217\u54c8\u5e0c\u503c\n    int l=larger(nowl),r=lowwer(nowr);\n    if (l==-1||r==-1)return -1;\n    if (pos[l]>nowr||pos[r]<nowl||l>r)return -1;//\u4ee5\u4e0a\u4e24\u884c\u7279\u5224\u5168\u662f1\u7684\u60c5\u51b5\n    return getmod(getsum(l+1,r)*2+(pos[l]-nowl)%2);\n}\nsigned main(){\n    cin>>n;\n    scanf(\"%s\",s+1);\n    for (int i=1;i<=n;i++){\n        num[i]=num[i-1];\n        if (s[i]=='0')pos[++len]=i,num[i]++;\n    }//\u50a8\u5b580\u7684\u4f4d\u7f6e\n    fac[0]=1;\n    for (int i=1;i<=n;i++)fac[i]=getmod(fac[i-1]*2);\n    for (int i=2;i<=len;i++)ch[i]=(pos[i]-pos[i-1])%2;//\u76f8\u5bf9\u4f4d\u7f6e\n    for (int i=2;i<=len;i++)sum[i]=getmod(sum[i-1]*2+ch[i]);//\u76f8\u5bf9\u4f4d\u7f6e\u54c8\u5e0c\n    cin>>q;\n    while(q--){\n        scanf(\"%lld%lld%lld\",&x,&y,&t);\n        if (getval(x,x+t-1)==getval(y,y+t-1)&&getnum(x,x+t-1)==getnum(y,y+t-1))puts(\"Yes\");//\u67e5\u8be2\u5224\u65ad\n        else puts(\"No\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1583193794,
        "uid": 235926,
        "name": "1kri",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1320D"
    },
    {
        "content": "\u76f8\u5f53\u4e0d\u9519\u7684\u601d\u7ef4\u9898\u3002\n\n\u6ce8\u610f\u5230 $110\u2192011$ \u548c $011\u2192110$ \u76f8\u5f53\u4e8e\u628a $0$ \u5de6\u79fb\u6216\u53f3\u79fb\u4e24\u4f4d\uff0c\u4e14\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d**\u4e0d\u80fd\u8de8\u8d8a\u67d0\u4e2a $0$**\u3002\uff08**\u5173\u952e\u70b9 $1$**\uff09\n\n\u8fd9\u610f\u5473\u7740 $0$ \u7684\u76f8\u5bf9\u65b9\u4f4d\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\uff08**\u5173\u952e\u70b9** $2$\uff09\uff0c\u4e24\u4e2a\u5b50\u4e32 $s1$ \u548c $s2$ \u5982\u679c\u76f8\u4e92\u53ef\u8fbe\uff0c\u90a3\u4e48 $s1$ \u91cc\u7684 $0$ \u4e0e $s2$ \u91cc\u7684 $0$ \u7684\u5bf9\u5e94\u5173\u7cfb\u4e00\u5b9a\u662f\u552f\u4e00\u786e\u5b9a\u7684\u2014\u2014$s1$ \u7684\u7b2c\u4e00\u4e2a $0$ \u4e0e $s2$ \u7684\u7b2c\u4e00\u4e2a $0$ \u5bf9\u5e94\uff0c$s1$ \u7684\u7b2c\u4e8c\u4e2a $0$ \u4e0e $s2$ \u7684\u7b2c\u4e8c\u4e2a $0$ \u5bf9\u5e94\u2026\u2026\u6240\u4ee5 $s1$ \u4e0e $s2$ \u662f\u5426\u76f8\u4e92\u53ef\u8fbe\u4e5f\u5c31\u53ea\u4e0e\u5b83\u4eec\u6240\u542b\u7684 $0$ \u7684**\u6570\u91cf**\u548c $0$ \u7684**\u4e0b\u6807\u7684\u5947\u5076\u6027**\u6709\u5173\uff08**\u5173\u952e\u70b9** $3$\uff09\u3002\n\n\u9996\u5148\uff0c\u5982\u679c $0$ \u7684\u6570\u91cf\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u4e3a`no`\u3002\u5176\u6b21\uff0c\u5982\u679c $s1$ \u548c $s2$ \u4e2d\u6240\u5bf9\u5e94\u7684 $0$ \u7684\u4e0b\u6807\u7684\u5947\u5076\u6027\u4e0d\u540c\uff0c\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u4e5f\u4e3a`no`\uff0c\u56e0\u4e3a\u6bcf\u4e2a $0$ \u7684\u4e0b\u6807\u7684\u53d8\u5316\u91cf\u53ea\u80fd\u4e3a\u5076\u6570\uff08**\u5173\u952e\u70b9** $4$\uff09\u3002\u6545\u800c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32 $s$ \u6240\u542b\u7684\u6240\u6709 $0$ \u7684\u4e0b\u6807\u90fd\u653e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u5b57\u7b26\u4e32 $a$ \u91cc\uff0c\u628a\u5947\u6570\u8d4b\u4e3a $1$\uff0c\u5076\u6570\u8d4b\u4e3a $0$\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5224\u65ad $a$ \u4e2d\u7684\u4e24\u4e2a\u5b50\u4e32\u662f\u5426\u76f8\u7b49\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u54c8\u5e0c\u6765\u5b9e\u73b0\uff08**\u5173\u952e\u70b9** $5$\uff09\u3002\n\n\u6ce8\u610f\uff0c\u7531\u4e8e\u5f97\u5230\u7684 $a$ \u6570\u7ec4\u4e2d\u5b58\u50a8\u768401\u503c\u662f\u7531\u76f8\u5bf9\u4e8e\u539f\u5b57\u7b26\u4e32 $s$ \u800c\u8a00\u7684\u201c\u7edd\u5bf9\u4e0b\u6807\u201d\u5f97\u5230\u7684\uff0c\u800c\u6211\u4eec\u5b9e\u9645\u4e0a\u8981\u5224\u65ad\u7684\u662f\u76f8\u5bf9\u4e8e\u6240\u8be2\u95ee\u5b50\u4e32\u7684\u201c\u76f8\u5bf9\u4e0b\u6807\u201d\uff0c\u56e0\u6b64\u8be2\u95ee\u65f6\u7684\u67d0\u6bb5\u5b50\u4e32\u768401\u503c\u53ef\u80fd\u4f1a\u4e0e $a$ \u4e2d\u768401\u503c\u622a\u7136\u76f8\u53cd\uff0c\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u4e86\uff08**\u5173\u952e\u70b9** $6$\uff09\u3002\n\n\n------------\n\u4ee3\u7801\u5982\u4e0bqwq\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define mod1 998244353\n#define mod2 1000000007\n#define base1 3\n#define base2 101\n#define ll long long\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){ int x=0,fh=1; char ch=getchar(); while(!isdigit(ch)){ if(ch=='-') fh=-1; ch=getchar(); } while(isdigit(ch)){ x=(x<<1)+(x<<3)+ch-'0'; ch=getchar(); } return x*fh; }\n\nconst int N=2e5+5;\nchar s[N];\nint n,pw1[N],pw2[N],hx1[N],hx2[N],a[N],top,_hx1[N],_hx2[N];\n\nvoid hash_(){\n\tpw1[0]=pw2[0]=1;\n\tfo(i,1,top) pw1[i]=1ll*pw1[i-1]*base1%mod1,pw2[i]=1ll*pw2[i-1]*base2%mod2;\n\tfo(i,1,top){\n\t\thx1[i]=hx1[i-1];hx2[i]=hx2[i-1];_hx1[i]=_hx1[i-1];_hx2[i]=_hx2[i-1];\n\t\tif(a[i]&1) hx1[i]=(hx1[i]+pw1[i-1])%mod1,hx2[i]=(hx2[i]+pw2[i-1])%mod2;\n\t\telse _hx1[i]=(_hx1[i-1]+pw1[i-1])%mod1,_hx2[i]=(_hx2[i]+pw2[i-1])%mod2;\n\t}\n}\n\nbool check(){\n\tint l1=read(),l2=read(),len=read();\n\tbool flag=(l1&1)^(l2&1);\n\tif(l1>l2) swap(l1,l2);\n\tint r1=l1+len-1,r2=l2+len-1;\n\tint L1=lower_bound(a+1,a+1+top,l1)-a,R1=upper_bound(a+1,a+1+top,r1)-a-1;\n\tint L2=lower_bound(a+1,a+1+top,l2)-a,R2=upper_bound(a+1,a+1+top,r2)-a-1;\n\tif(R1-L1!=R2-L2) return 0;\n\tif(R1-L1==-1) return 1;\n\tint v1,v2;\n\tif(flag) v1=(0ll+_hx1[R1]+mod1-_hx1[L1-1])*pw1[L2-L1]%mod1;\n\telse v1=(0ll+hx1[R1]+mod1-hx1[L1-1])*pw1[L2-L1]%mod1;\n\tv2=(0ll+hx1[R2]+mod1-hx1[L2-1])%mod1;\n\tif(v1!=v2) return 0;\n\tif(flag) v1=(0ll+_hx2[R1]+mod2-_hx2[L1-1])*pw2[L2-L1]%mod2;\n\telse v1=(0ll+hx2[R1]+mod2-hx2[L1-1])*pw2[L2-L1]%mod2;\n\tv2=(0ll+hx2[R2]+mod2-hx2[L2-1])%mod2;\n\treturn v1==v2;\n}\n\nint main(){\n\tn=read();\n\tscanf(\"%s\",s+1);\n\tfo(i,1,n) if(s[i]=='0') a[++top]=i;\n\thash_();\n\tint q=read();\n\twhile(q--) puts(check()?\"Yes\":\"No\");\n\treturn 0;\n}\n```\n\n\u70b9\u4e2a\u8d5e\u518d\u8d70\u5457/kel",
        "postTime": 1609507775,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1320D \u3010Reachable Strings\u3011"
    },
    {
        "content": "\u5176\u5b83\u9898\u89e3\u8c8c\u4f3c\u90fd\u662f\u770b0\u7684\u64cd\u4f5c\u89c4\u5f8b\uff0c\u6211\u6765\u63d0\u4f9b\u4e00\u7bc71\u7684\n\n\u64cd\u4f5c\u7684\u542b\u4e49\u5c31\u662f\u6bcf\u6b21\u5c06\u5076\u6570\u4e2a1\u5411\u5de6\u8fb9\u79fb\u52a8\u4e00\u683c\u3002\u6211\u4eec\u5148\u627e\u627e\u6027\u8d28\uff0c\u770b\u8d77\u6765\u5076\u6570\u6bb5\u662f\u53ef\u4ee5\u968f\u610f\u6e38\u8d70\u7684\uff0c\u800c\u5947\u6570\u6bb5\u9700\u8981\u7559\u4e0b\u4e00\u4e2a\n\n\u8003\u8651\u5230\u64cd\u4f5c\u7684\u53ef\u9006\u6027\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u79cd\u64cd\u4f5c\u7684\u201c\u6a21\u5f0f\u201d\u4f7f\u5f97\u4e24\u4e2a\u5b50\u4e32\u7ecf\u8fc7\u8fd9\u79cd\u201c\u6a21\u5f0f\u201d\u540e\u76f8\u540c\n\n\u56e0\u6b64\u6211\u4eec\u8ba9\u4e24\u4e2a\u5b50\u4e32\u90fd\u5c06\u6240\u6709\u5076\u6570\u4e2a1\u79fb\u5230\u5b50\u4e32\u6700\u5de6\u7aef\uff0c\u4e0d\u96be\u8bc1\u660e\u8fd9\u6837\u64cd\u4f5c\u540e\u4e24\u5b50\u4e32\u662f\u5426\u76f8\u7b49\u7684\u5224\u65ad\u4e0e\u539f\u95ee\u9898\u7b49\u4ef7\n\n\u54c8\u5e0c\u5373\u53ef\u3002\n\n\uff08\u6b64\u65b9\u6cd5\u7ec6\u8282\u8f83\u591a\u4e0d\u5efa\u8bae\u4f7f\u7528\uff09\n\n```cpp#include <iostream>\n#include <cstdio>\n#define maxn 200005\n#define uint unsigned long long \nusing namespace std;\nint n, q, l1, l2, len;\nint sum[maxn], cnt[maxn];\nint pre[maxn], suf[maxn];\nchar s[maxn];\nuint hash1[maxn], hash2[maxn], pow1[maxn], pow2[maxn], bas1 = 998244353, bas2 = 1e9 + 7;\nvoid init()\n{\n\tpow1[0] = pow2[0] = 1;\n\tfor (int i = 1; i <= n; i++) \n\t{\n\t\tpow1[i] = pow1[i - 1] * bas1;\n\t\tpow2[i] = pow2[i - 1] * bas2;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum[i] = sum[i - 1];\n\t\tif(s[i] == '1') sum[i]++;\n\t}\n\tpre[0] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif(s[i] == '0') pre[i] = i;\n\t\telse pre[i] = pre[i - 1];\n\t}\n\tsuf[n + 1] = n + 1;\n\tfor (int i = n; i >= 1; i--)\n\t{\n\t\tif(s[i] == '0') suf[i] = i;\n\t\telse suf[i] = suf[i + 1];\n\t}\n}\nvoid work()\n{\n\tint p = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif(s[i] == '0') \n\t\t{\n\t\t\tcnt[i] = cnt[i - 1] + 1;\n\t\t\thash1[i] = hash1[i - 1] * bas1;\n\t\t\thash2[i] = hash2[i - 1] * bas2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint last = pre[i];\n\t\t\tcnt[i] = cnt[last];\n\t\t\tif((i - last) & 1) \n\t\t\t{\n\t\t\t\thash1[i] = hash1[last] * bas1 + 1;\n\t\t\t\thash2[i] = hash2[last] * bas2 + 1;\n\t\t\t\tcnt[i]++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thash1[i] = hash1[last];\n\t\t\t\thash2[i] = hash2[last];\n\t\t\t} \n\t\t}\n\t}\n}\nint check(int l, int r)\n{\n\tint tl = suf[l];\n\tif(tl > r)\n\t{\n\t\treturn (r - l + 1) & 1;\n\t}\n\treturn cnt[r] - cnt[tl - 1] + ((tl - l) & 1);\n}\nuint calc1(int l, int r)\n{\n\tint tl = suf[l];\n\tif(tl > r)\n\t{\n\t\tif((r - l + 1) & 1) return bas1;\n\t\telse return 0;\n\t}\n\tuint res = hash1[r] - hash1[tl - 1] * pow1[cnt[r] - cnt[tl - 1]];\n\tif((tl - l) & 1) res += pow1[cnt[r] - cnt[tl - 1]];\n\treturn res;\n}\nuint calc2(int l, int r)\n{\n\tint tl = suf[l];\n\tif(tl > r)\n\t{\n\t\tif((r - l + 1) & 1) return bas2;\n\t\telse return 0;\n\t}\n\tuint res = hash2[r] - hash2[tl - 1] * pow2[cnt[r] - cnt[tl - 1]];\n\tif((tl - l) & 1) res += pow2[cnt[r] - cnt[tl - 1]];\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%d%s%d\", &n, s + 1, &q);\n\tinit();\n\twork();\n\tfor (int i = 1; i <= q; i++)\n\t{\n\t\tscanf(\"%d%d%d\", &l1, &l2, &len);\n\t\tif(calc1(l1, l1 + len - 1) != calc1(l2, l2 + len - 1) || calc2(l1, l1 + len - 1) != calc2(l2, l2 + len - 1) || check(l1, l1 + len - 1) != check(l2, l2 + len - 1) || sum[l1 + len - 1] - sum[l1 - 1] != sum[l2 + len - 1] - sum[l2 - 1])\n\t\t{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse printf(\"Yes\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610801826,
        "uid": 46817,
        "name": "xcyle",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1320D \u3010Reachable Strings\u3011"
    },
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF1320D) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/1320/problem/D)\n\n>\u6709\u4e00\u4e2a01\u4e32$a,|a|=n$\u3002$q$\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa$l1,l2,len$\uff0c\u95ee$a_{l1\\sim l1+len-1},a_{l2\\sim l2+len-1}$\u8fd9$2$\u4e2a01\u4e32\u662f\u5426\u80fd\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u53d8\u5f97\u76f8\u7b49\uff0c\u5176\u4e2d\u4e00\u6b21\u64cd\u4f5c\u6307\u7684\u662f\u5c06\u4efb\u610f\u4e00\u4e2a01\u4e32\u7684\u4efb\u610f\u4e00\u4e2a\u7b49\u4e8e$\\texttt{110}$\u7684\u5b50\u4e32\u53d8\u6210$\\texttt{011}$\u6216\u5c06$\\texttt{011}$\u53d8\u6210$\\texttt{110}$\u3002\n\n>$n,q\\in\\left[1,2\\times10^5\\right]$\u3002\n\n\u8003\u8651\u5206\u6790\u80fd\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u53d8\u5f97\u76f8\u7b49\u7684\u5145\u8981\u6761\u4ef6\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4e0d\u53ef\u80fd\u6539\u53d801\u4e32\u4e2d$\\texttt0$\u548c$\\texttt1$\u5206\u522b\u7684\u6570\u91cf\uff0c\u6240\u4ee5$2$\u4e2a01\u4e32\u4e2d$\\texttt0$\u548c$\\texttt1$\u7684\u6570\u91cf\u5206\u522b\u76f8\u7b49\u662f\u80fd\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u53d8\u5f97\u76f8\u7b49\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u4f46\u5145\u5206\u6027\u8fd8\u8fdc\u8fdc\u4e0d\u591f\u3002\n\n\u53c8\u53d1\u73b0\uff0c$\\texttt{110}\\leftrightarrow\\texttt{011}$\u8fd9\u4e2a\u64cd\u4f5c\u6bd4\u8f83\u6709\u610f\u601d\uff0c\u5b83\u76f8\u5f53\u4e8e\u5c06\u8fd9\u4e2a\u552f\u4e00\u7684$\\texttt{0}$\u5411\u5de6/\u53f3\u63a8\u4e86$2$\u4f4d\u3002\u7531\u4e8e\u8fd9\u662f\u4e2a01\u4e32\uff0c\u975e$\\texttt0$\u5373$\\texttt1$\uff0c\u4e8e\u662f\u6211\u4eec\u5c06\u6240\u6709$\\texttt0$\u7684\u4f4d\u7f6e\u63ea\u51fa\u6765\uff0c\u5176\u4ed6\u4f4d\u7f6e\u81ea\u7136\u662f$\\texttt1$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c01\u4e32\u4e2d\u6240\u6709$\\texttt0$\u5bf9\u7684\u76f8\u5bf9\u4f4d\u7f6e\u90fd\u4e0d\u4f1a\u6539\u53d8\u3002\u8bc1\u660e\uff1a\u82e5$2$\u4e2a$\\texttt0$\u60f3\u8981\u4ea4\u6362\u4f4d\u7f6e\uff0c\u90a3\u4e48\u4ea4\u6362\u524d\u6700\u540e\u4e00\u523b\u7684\u72b6\u6001\u4e00\u5b9a\u662f\u8ddd\u79bb\u5dee$\\leq2$\uff0c\u6b64\u65f6\u5de6\u8fb9\u7684$\\texttt0$\u4e0d\u80fd\u901a\u8fc7$\\texttt{011}\\to\\texttt{110}$\u5f80\u53f3\u518d\u79fb$2$\u683c\uff0c\u56e0\u4e3a\u5b83\u53f3\u8fb9$1\\sim2$\u683c\u662f\u53f3\u8fb9\u7684$\\texttt0$\uff0c\u4ee5\u5b83\u5f00\u5934\u7684\u957f\u5ea6\u4e3a$3$\u7684\u5b50\u4e32\u4e00\u5b9a\u4e0d\u4e3a$\\texttt{011}$\u3002\u7c7b\u4f3c\u5730\uff0c\u53f3\u8fb9\u7684$\\texttt0$\u4e5f\u4e0d\u80fd\u5f80\u5de6\u79fb$2$\u683c\u3002\u5f97\u8bc1\u3002\n\n\u4e8e\u662f\u8003\u8651\u5c06$2$\u4e2a01\u4e32\u4e2d\u7684\u6240\u6709$\\texttt0$\u6309\u51fa\u73b0\u6b21\u5e8f\u4e00\u4e00\u5bf9\u5e94\u3002\u663e\u7136\uff0c\u7b2c$1$\u4e2a01\u4e32\u4e2d\u7684\u67d0\u4e2a$\\texttt0$\u80fd\u591f\u4e0e\u7b2c$2$\u4e2a01\u4e32\u4e2d\u7684\u67d0\u4e2a$\\texttt0$\u5230\u540c\u4e00\u4f4d\u7f6e\u4e0a\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u5728\u6240\u5728\u4e32\u4e2d\u7684\u4f4d\u7f6e\u4e4b\u5dee\u4e3a\u5076\u6570\uff0c\u5373\u5947\u5076\u6027\u76f8\u7b49\u3002\u6240\u4ee5\u6211\u4eec\u731c\u6d4b\uff1a$2$\u4e2a01\u4e32\u4e2d\u7684\u6240\u6709$\\texttt0$\u6309\u51fa\u73b0\u6b21\u5e8f\u4e00\u4e00\u5bf9\u5e94\u540e\uff0c\u6bcf\u5bf9$\\texttt0$\u5728\u6240\u5728\u4e32\u4e2d\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u76f8\u7b49\uff0c\u662f\u8fd9$2$\u4e2a01\u4e32\u80fd\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u53d8\u5f97\u76f8\u7b49\u7684\u5145\u8981\u6761\u4ef6\u3002\u8bc1\u660e\uff1a\n\n1. \u5145\u5206\u6027\u8bc1\u660e\uff1a\u6570\u5b66\u5f52\u7eb3\u6cd5\u3002\n   1. \u5f53$2$\u4e2a\u4e32\u90fd\u4e0d\u5b58\u5728$\\texttt0$\u65f6\uff0c\u5145\u5206\u6027\u663e\u7136\uff1b\n   1. \u5047\u8bbe\u5f53$2$\u4e2a\u4e32\u90fd\u5b58\u5728$x-1(x\\geq1)$\u4e2a$\\texttt0$\u65f6\uff0c\u6ee1\u8db3\u5145\u5206\u6027\u3002\u6b64\u65f6\u82e5\u8981\u5c06$2$\u4e2a\u5b58\u5728$x$\u4e2a$\\texttt0$\u768401\u4e32\u7684\u6240\u6709$\\texttt0$\u5bf9\u4e00\u4e00\u5bf9\u9f50\uff0c\u53ef\u4ee5\u5c06\u5de6\u6570\u7b2c$1$\u5bf9$\\texttt0$\u4e2d\u8f83\u53f3\u7684\u90a3\u4e2a$\\texttt0$\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u4e0e\u8f83\u5de6\u7684\u5bf9\u9f50\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u5c06\u5269\u4e0b$x-1$\u5bf9$\\texttt0$\u4e00\u4e00\u5bf9\u9f50\uff0c\u6839\u636e\u5047\u8bbe\uff0c\u5b58\u5728\u65b9\u6848\u3002\u6240\u4ee5\u82e5\u5f53$2$\u4e2a\u4e32\u90fd\u5b58\u5728$x-1$\u4e2a$\\texttt0$\u65f6\uff0c\u6ee1\u8db3\u5145\u5206\u6027\uff0c\u90a3\u4e48\u5f53$2$\u4e2a\u4e32\u90fd\u5b58\u5728$x$\u4e2a$\\texttt0$\u65f6\uff0c\u6ee1\u8db3\u5145\u5206\u6027\u3002\n   \n   \u7efc\u4e0a\uff0c\u5145\u5206\u6027\u5f97\u8bc1\uff1b\n1. \u5fc5\u8981\u6027\u663e\u7136\u3002\n\n\u7efc\u4e0a\uff0c\u5f97\u8bc1\u3002\n\n\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6bd4\u8f83\u88f8\u7684\u5e8f\u5217\u54c8\u5e0c\uff1a\u6bcf\u6b21\u7ed9\u5b9a$2$\u4e2a\u5b50\u4e32\uff0c\u95ee\u8fd9$2$\u4e2a\u5b50\u4e32\u4e2d$\\texttt0$\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u7ec4\u6210\u7684\u5e8f\u5217\u662f\u5426\u76f8\u7b49\u3002\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u6307\u7684\u662f\u76f8\u5bf9\u4e8e$l1/l2$\u7684\u4f4d\u7f6e\u5947\u5076\u6027\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e$1$\uff0c\u6240\u4ee5\u8981\u8bb0\u5f55$2$\u4e2a\u6bcf\u9879\u5bf9\u5e94\u76f8\u53cd\u7684$\\texttt0$\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u5e8f\u5217\u3002\u5b50\u4e32\u4e2d\u5305\u542b\u7684$\\texttt0$\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u5e8f\u5217\u7684\u5b50\u5e8f\u5217\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\u627e\u5230\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\n#define pb push_back\nconst int N=200000;\nint n/*01\u4e32\u957f\u5ea6*/,qu/*\u8be2\u95ee\u6b21\u6570*/;\nchar a[N+5];//01\u4e32 \nvector<int> pos;//'0'\u7684\u4f4d\u7f6e\u5e8f\u5217 \nconst int hbase1=131,hmod1=998244353,hbase2=13331,hmod2=1000000007;//\u54c8\u5e0c\u53c2\u6570 \nint Hsh1[N+1],Rhsh1[N+1],hpw1[N+1],Hsh2[N+1],Rhsh2[N+1],hpw2[N+1];//Hsh\uff1a\u76f8\u5bf9\u4e8e1\u7684'0'\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u5e8f\u5217\u7684\u524d\u7f00\u54c8\u5e0c\uff0cRhsh\uff1a\u76f8\u5bf9\u4e8e2\u7684\u2026\u2026 \nvoid hsh_init(){//\u54c8\u5e0c\u9884\u5904\u7406 \n\thpw1[0]=hpw2[0]=1;\n\tfor(int i=1;i<=pos.size();i++)//\u4e3a\u4e86\u524d\u7f00\u8fd0\u7b97\u65b9\u4fbf\uff0c\u54c8\u5e0c\u6570\u7ec4\u4eec1-indexed \n\t\tHsh1[i]=(1ll*Hsh1[i-1]*hbase1+pos[i-1]%2+1)%hmod1,\n\t\tRhsh1[i]=(1ll*Rhsh1[i-1]*hbase1+!(pos[i-1]%2)+1)%hmod1,\n\t\thpw1[i]=1ll*hpw1[i-1]*hbase1%hmod1,\n\t\tHsh2[i]=(1ll*Hsh2[i-1]*hbase2+pos[i-1]%2+1)%hmod2,\n\t\tRhsh2[i]=(1ll*Rhsh2[i-1]*hbase2+!(pos[i-1]%2)+1)%hmod2,\n\t\thpw2[i]=1ll*hpw2[i-1]*hbase2%hmod2;\n}\npair<int,int> hsh(int l,int r){//pos[l-1~r-1]\u76f8\u5bf9\u4e8e1\u7684\u5947\u5076\u6027\u5e8f\u5217\u7684\u54c8\u5e0c\u503c \n\treturn mp(((Hsh1[r]-1ll*Hsh1[l-1]*hpw1[r-l+1]%hmod1)+hmod1)%hmod1,\n\t\t\t  ((Hsh2[r]-1ll*Hsh2[l-1]*hpw2[r-l+1]%hmod2)+hmod2)%hmod2);\n}\npair<int,int> rhsh(int l,int r){//pos[l-1~r-1]\u76f8\u5bf9\u4e8e2\u7684\u5947\u5076\u6027\u5e8f\u5217\u7684\u54c8\u5e0c\u503c\n\treturn mp(((Rhsh1[r]-1ll*Rhsh1[l-1]*hpw1[r-l+1]%hmod1)+hmod1)%hmod1,\n\t\t\t  ((Rhsh2[r]-1ll*Rhsh2[l-1]*hpw2[r-l+1]%hmod2)+hmod2)%hmod2);\n}\nint main(){\n\tcin>>n>>a+1>>qu;\n\tfor(int i=1;i<=n;i++)if(a[i]=='0')pos.pb(i);//\u9884\u5904\u7406pos \n\thsh_init();//\u9884\u5904\u7406\u54c8\u5e0c \n\twhile(qu--){\n\t\tint l1,l2,len;\n\t\tscanf(\"%d%d%d\",&l1,&l2,&len);\n\t\tint l1_0=lower_bound(pos.begin(),pos.end(),l1)-pos.begin()+1,//a[l1~l1+len-1]\u5305\u542b\u7684'0'\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u5e8f\u5217\u7684\u5de6\u7aef\u70b9 \n\t\t\tr1_0=lower_bound(pos.begin(),pos.end(),l1+len)-pos.begin(),//a[l1~l1+len-1]\u5305\u542b\u7684'0'\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u5e8f\u5217\u7684\u53f3\u7aef\u70b9\n\t\t\tl2_0=lower_bound(pos.begin(),pos.end(),l2)-pos.begin()+1,//a[l2~l2+len-1]\u5305\u542b\u7684'0'\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u5e8f\u5217\u7684\u5de6\u7aef\u70b9\n\t\t\tr2_0=lower_bound(pos.begin(),pos.end(),l2+len)-pos.begin();//a[l2~l2+len-1]\u5305\u542b\u7684'0'\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u5e8f\u5217\u7684\u53f3\u7aef\u70b9\n\t\tpair<int,int> hsh1=l1%2?hsh(l1_0,r1_0):rhsh(l1_0,r1_0),hsh2=l2%2?hsh(l2_0,r2_0):rhsh(l2_0,r2_0);//\u8ba1\u7b97\u54c8\u5e0c\u503c \n\t\tputs(hsh1==hsh2?\"Yes\":\"No\");//\u5224\u65ad\u76f8\u7b49 \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1584695217,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 1320D - Reachable Strings"
    },
    {
        "content": "\u4e00\u9053\u633a\u597d\u7684\u9898\uff0c\u521a\u521a\u5f00\u59cb\u7684\u65f6\u5019\u6ca1\u4ec0\u4e48\u601d\u8def\uff0c\u540e\u6765\u8ba4\u771f\u8003\u8651\u4e86\u4e00\u4e9b\u6027\u8d28\u5c31\u4f1a\u505a\u4e86\u3002\n\n\u9898\u610f\u662f\u7ed9\u51fa\u4e00\u4e2a 01 \u4e32 $s$\uff0c$|s| \\leq 2 \\times 10^5$\uff0c\u6bcf\u6b21\u53ef\u5c06\u4efb\u610f\u5b50\u4e32 $011$ \u53d8\u6210 $110$ \u6216\u8005\u5c06 $110$ \u53d8\u6210 $011$\u3002\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e24\u4e2a\u7b49\u957f\u7684\u5b50\u4e32\uff0c\u8be2\u95ee\u662f\u5426\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5b50\u4e32\u7ecf\u8fc7\u53d8\u6362\u53d8\u6210\u53e6\u4e00\u4e2a\u5b50\u4e32\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u53d8\u6362\u76f8\u5f53\u4e8e\u628a $0$ \u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u4e24\u4f4d\uff0c\u79fb\u52a8\u524d\u540e\u76f8\u90bb\u4e24\u4e2a $0$ \u4e4b\u95f4 $1$ \u7684\u4e2a\u6570\u5947\u5076\u4e0d\u53d8\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u4e32\u4e2d\u7684 $0$ \u90fd\u5c3d\u91cf\u5f80\u67d0\u65b9\u5411\u79fb\u52a8\uff0c\u5982\u679c\u79fb\u52a8\u4e4b\u540e\u4e24\u4e32\u957f\u5f97\u4e00\u6837\uff0c\u5219\u8fd9\u4e24\u539f\u4e32\u95f4\u53ef\u76f8\u4e92\u53d8\u6362\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u6bcf\u4e2a $0$ \u7684\u6743\u503c\u8bbe\u4e3a\u4e0e\u524d\u4e00\u4e2a $0$ \u4e4b\u95f4 $1$ \u4e2a\u6570\u7684\u5947\u5076\uff08\u4e5f\u5c31\u662f\u8bbe\u6210  ```digit % 2```\uff0c\u5176\u4e2d ```digit``` \u8868\u793a\u524d\u9762\u6240\u8bf4\u7684 $1$ \u7684\u4e2a\u6570\uff0c\u7136\u540e\u7528\u54c8\u5e0c\u5224\u65ad\u662f\u5426\u76f8\u540c\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define reg register\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define pi pair<int, int>\n#define pl pair<ll, ll>\n#define vi vector<int>\n#define vl vector<ll>\n#define vpi vector<pi>\n#define vpl vector<pl>\n#define pb push_back\n#define er erase\n#define SZ(x) (int) x.size()\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define mkp make_pair\nusing namespace std;\nchar ch, B[1 << 20], *S = B, *T = B;\n#define getc() (S == T && (T = (S = B) + fread(B, 1, 1 << 20, stdin), S == T) ? 0 : *S++)\n#define isd(c) (c >= '0' && c <= '9')\nint aa, bb;\nint rd() {\n  while(ch = getc(), !isd(ch) && ch != '-');\n  ch == '-' ? aa = bb = 0 : (aa = ch - '0', bb = 1);\n  while(ch = getc(), isd(ch))\n    aa = aa * 10 + ch - '0';\n  return bb ? aa : -aa;\n}\nconst int MAXN = 2e5 + 10;\nconst int BASE = 233;\nchar s[MAXN];\nint n, a[MAXN], tot, flag[MAXN], cnt[MAXN];\null power[MAXN], Hash[MAXN];\null get(int l, int r) {\n  int len = r - l + 1;\n  return 1ll * Hash[r] - Hash[l - 1] * power[len];\n}\null check(int l, int r) {\n  int L = lower_bound(a + 1, a + tot + 1, l) - a;\n  int R = upper_bound(a + 1, a + tot + 1, r) - a - 1;\n  if(L <= R) {\n    ull x = (a[L] - l) & 1, v = x * power[R - L];\n    if(L < R)\n      v += get(L + 1, R);\n    return v;\n  }\n  return 0;\n}\ninline void work() {\n  power[0] = 1;\n  for(reg int i = 1; i < MAXN; ++i)\n    power[i] = power[i - 1] * BASE;\n  scanf(\"%d%s\", &n, s + 1);\n  int digit = 0;\n  for(reg int i = 1; i <= n; ++i) {\n    cnt[i] = cnt[i - 1];\n    if(s[i] == '1')\n      digit++;\n    else {\n      flag[++tot] = digit & 1;\n      digit = 0;\n      a[tot] = i;\n      ++cnt[i];\n    }\n  }\n  for(reg int i = 1; i <= tot; ++i)\n    Hash[i] = Hash[i - 1] * BASE + flag[i];\n  int q;\n  scanf(\"%d\", &q);\n  while(q--) {\n    int l1, l2, len, r1, r2;\n    scanf(\"%d%d%d\", &l1, &l2, &len);\n    r1 = l1 + len - 1;\n    r2 = l2 + len - 1;\n    if(cnt[r1] - cnt[l1 - 1] == cnt[r2] - cnt[l2 - 1] && check(l1, r1) == check(l2, r2))\n      printf(\"Yes\\n\");\n    else\n      printf(\"No\\n\");\n  }\n}\nint main() {\n \t// freopen(\"input.txt\", \"r\", stdin);\n  work();\n  return 0;\n}\n```",
        "postTime": 1583305565,
        "uid": 157411,
        "name": "Nylch",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1320D \u3010Reachable Strings\u3011"
    }
]