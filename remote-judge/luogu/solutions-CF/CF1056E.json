[
    {
        "content": "\u8bf4\u4e00\u4e2a\u5173\u4e8e Hash \u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff08\u4e0b\u6587\u4e2d $S_{01}$ \u8868\u793a $01$ \u4e32\uff0c$S_{abc}$ \u8868\u793a\u5b57\u6bcd\u4e32\uff09![/fad](https://cdn.luogu.com.cn/upload/pic/62250.png)\n\n---\n\n> \u901a\u5e38\u8fd9\u9053\u9898\u7684 Hash \u505a\u6cd5\u6d41\u7a0b\u662f\u8fd9\u6837\u7684\uff08\u8bb0 $cnt_0$ \u4e3a $01$ \u4e32\u4e2d\u7684 $0$ \u4e2a\u6570\uff0c$cnt_1$ \u4e3a $01$ \u4e32\u4e2d\u7684 $1$ \u4e2a\uff09\n> 1. \u679a\u4e3e $r_0$ \u7684\u957f\u5ea6 $len_0$\n> 2. \u5982\u679c\u6839\u636e\u679a\u4e3e\u5230\u7684\u957f\u5ea6 $len_0$ \u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6b63\u6574\u6570 $len_1$\uff0c\u6ee1\u8db3 $cnt_0 * len_0 + cnt_1 * len_1 = |S_{abc}|$\uff0c\u90a3\u4e48\u8fdb\u884c\u7b2c $3$ \u6b65\uff0c\u5426\u5219\u679a\u4e3e\u4e0b\u4e00\u4e2a $len_0$\n> 3. \u626b\u4e00\u904d $S_{01}$\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488 $p$ \u6307\u5411 $S_{abc}$ \u4e2d\u7684\u5b57\u7b26\uff08\u521d\u59cb\u4e3a $1$\uff09\u3002\u5982\u679c\u9047\u5230 $0$\uff0c\u5219\u5c06 $^{\\mathbf{Hash}}r_{0}$ \u4e0e $Hash(p, p + len_0 - 1)$ \u6bd4\u8f83\uff08\u82e5\u5f53\u524d\u679a\u4e3e\u5230\u7684 $0$ \u662f $S_{01}$ \u7684\u7b2c\u4e00\u4e2a $0$\uff0c\u5219\u5c06 $^{\\mathbf{Hash}}r_{0}$ \u8bbe\u4e3a $\\mathbf{Hash}(p, p + len_0 - 1)$\uff09\uff0c\u540c\u65f6\u5c06\u6307\u9488\u52a0\u4e0a $len_0$\u3002\u9047\u5230 $1$ \u540c\u7406\u3002\n\n\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u679a\u4e3e $len_0$ \u7684\u590d\u6742\u5ea6\u662f $\\Theta(\\frac{|S_{abc}|}{cnt_0})$\n\n\u8003\u8651\u5bf9\u4e8e\u591a\u5c11\u79cd\u60c5\u51b5\uff0c\u5b58\u5728\u6ee1\u8db3 $cnt_0 * len_0 + cnt_1 * len_1 = |S_{abc}|$ \u7684 $len_1$\n\n\u7531 $\\mathbf{exgcd}$ \u7684\u77e5\u8bc6\uff0c\u53ef\u77e5\u4e24\u7ec4\u6ee1\u8db3\u6761\u4ef6\u7684 $\\begin{cases}len_0\\\\len_1\\end{cases}$ \u4e4b\u95f4\uff0c$len_0$ \u76f8\u5dee $\\frac{cnt_0}{\\mathbf{gcd}(cnt_0, cnt_1)}$\n\n\u56e0\u6b64\u6700\u591a\u9700\u8981\u626b \n$$\\frac{\\Theta(\\frac{|S_{abc}|}{cnt_0})}{\\frac{cnt_0}{\\mathbf{gcd}(cnt_0, cnt_1)}}=\\Theta(\\frac{\\mathbf{gcd}(cnt_0, cnt_1)*|S_{abc}|}{cnt_0^2})$$\n\u904d\u7684 $S_{01}$\uff0c\u6bcf\u6b21 $\\Theta(|S_{01}|)$\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 \n$$\\Theta(\\frac{\\mathbf{gcd}(cnt_0, cnt_1)*|S_{abc}|*|S_{01}|}{cnt_0^2})$$\n\n\u5176\u4e2d\uff0c  \n$\\max\\{\\mathbf{gcd}(cnt_0, cnt_1)\\}\u2248\\frac{|S_{01}|}{2}$  \n$\\min\\{cnt_0^2\\}\u2248\\frac{|S_{01}|^2}{4}$\uff08\n $cnt_0$ \u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u5012\u7f6e $0,1$ \uff08$0$ \u53d8 $1$\uff0c$1$ \u53d8 $0$\uff09\u53d8\u6210 $\\max\\{cnt_0, cnt_1\\}$\uff09\n\n$$\\therefore\\Theta(\\frac{\\mathbf{gcd}(cnt_0, cnt_1)*|S_{abc}|*|S_{01}|}{cnt_0^2}) = \\Theta(\\frac{|S_{01}|*|S_{abc}|*|S_{01}|}{|S_{01}|^2})=\\Theta(|S_{abc}|)$$\n\n---\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4f18\u4e8e $\\mathbf{SA}$ \u7684\u3002\n\n\u4f46\u7531\u4e8e\u81ea\u52a8\u6ea2\u51fa $2^{32}$ \u88ab\u5361\u4e86\uff08$2^{64}$ \u5c1a\u4e0d\u6e05\u695a\uff09\uff0c\u6240\u4ee5\u9700\u8981 ``long long`` + ``% P``(P \u662f\u8d28\u6570)\uff0c\u56e0\u6b64\u6709\u4e00\u4e2a\u8f83\u5927\u7684\u5e38\u6570\u3002\n\n\u4e0d\u8fc7\u8fd8\u662f\u6bd4 $\\mathbf{SA}$ \u5feb ![/cy](https://cdn.luogu.com.cn/upload/pic/62225.png)![/xyx](https://cdn.luogu.com.cn/upload/pic/62230.png)\n\n\u4ee3\u7801\u53ef\u4ee5\u89c1 [gitee \u4ed3\u5e93](https://gitee.com/hkxa/mycode/blob/master/luogu/CF1056E.cpp)\n",
        "postTime": 1612344295,
        "uid": 63720,
        "name": "brealid",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1056E \u3010Check Transcription\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u5b9e\u73b0\u7b80\u5355\u7684 $\\mathcal{O}(|s|)$ \u505a\u6cd5\uff08\u8fd9\u4e2a $|s|$ \u662f\u7ffb\u8bd1\u4e2d\u90a3\u4e2a $10^6$ \u8303\u56f4\u7684\u4e1c\u897f\uff09\u3002\n\n## \u601d\u8def\n\u9996\u5148\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c $t$ \u4e32\u7684\u5f00\u5934\u90a3\u4e2a\u5b57\u7b26\u4e00\u5b9a\u5bf9\u5e94\u7684\u662f $s$ \u4e32\u7684\u4e00\u4e2a\u524d\u7f00\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e32\u7684\u957f\u5ea6\u5c31\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5b83\u5bf9\u5e94\u7684\u4e32\u3002\n\n\u7136\u540e\u6211\u4eec\u6ce8\u610f\u5230 $t$ \u4e32\u4e2d $0/1$ \u7684\u51fa\u73b0\u6b21\u6570\u6211\u4eec\u90fd\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u53c8\u77e5\u9053\u4e86\u67d0\u4e2a\u5b57\u7b26\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e32\u7684\u957f\u5ea6\u6211\u4eec\u4e5f\u80fd\u786e\u5b9a\u3002\n\n\u8003\u8651\u6211\u4eec\u626b\u4e00\u904d $t$ \u4e32\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u6211\u4eec\u90fd\u5df2\u77e5\uff0c\u56e0\u6b64\u82e5\u6211\u4eec $\\mathcal{O}(|t|)$ \u626b\u4e00\u904d $t$ \u4e32\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5728 $s$ \u4e32\u4e2d\u5bf9\u5e94\u7684 **\u8d77\u59cb\u4f4d\u7f6e**\u3002\n\n\u518d\u52a0\u4e0a\u6211\u4eec\u786e\u5b9a\u7684\u957f\u5ea6\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5728 $s$ \u4e2d\u5bf9\u5e94\u7684\u4e32\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c $\\mathcal{O}(1)$ \u6c42\u5f97\uff0c\u56e0\u6b64\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $\\mathcal{O}(|t|)$ \u5224\u65ad\u4e00\u7ec4\u957f\u5ea6\u662f\u5426\u5408\u6cd5\u7684\u7b97\u6cd5\u3002\n\n\u4f46\u662f\u8fd9\u6837\u770b\u8d77\u6765\u8fd8\u662f $\\mathcal{O}(|s||t|)$ \u7684\uff0c\u4e0d\u8fc7\u6ce8\u610f\u5230\u5728 $t$ \u4e32\u4e2d\uff0c\u51fa\u73b0\u6b21\u6570\u66f4\u591a\u7684\u90a3\u4e00\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u4e00\u5b9a $\\ge \\frac{|t|}{2}$\u3002\n\n\u56e0\u6b64\u6211\u4eec\u679a\u4e3e\u8fd9\u4e00\u4e2a\u5b57\u7b26\uff0c\u663e\u7136\u53e6\u4e00\u4e2a\u5b57\u7b26\u7684\u957f\u5ea6\u8fd8\u662f\u53ef\u4ee5 $\\mathcal{O}(1)$ \u6c42\uff0c\u800c\u4e14\u6211\u4eec\u679a\u4e3e\u7684\u4e0a\u754c\u53ea\u9700\u8981\u8fbe\u5230 $\\mathcal{O}(\\frac{|s|}{|t|})$\u3002\n\n\u56e0\u6b64\u6700\u7ec8\u590d\u6742\u5ea6\u5206\u6790\u51fa\u6765\u662f $\\mathcal{O}(\\frac{|s|}{|t|})\\times\\mathcal{O}(|t|)=\\mathcal{O}(|s|)$ \u7684\u3002\n\n## \u4ee3\u7801\n\u53ea\u653e\u5173\u952e\u90e8\u5206\n```cpp\nconst int MAXN = 1e6 + 5;\nchar t[MAXN], s[MAXN];\nint m, n;\n\nint h[MAXN][2], b[MAXN][2];\nconst int MOD[2] = {114, 1919};\nconst int base[2] = {514, 810};\n\ninline void init() {    \n    b[0][0] = b[0][1] = 1; rep(i, 1, n) {\n        b[i][0] = 1ll * b[i - 1][0] * base[0] % MOD[0];\n        b[i][1] = 1ll * b[i - 1][1] * base[1] % MOD[1];\n        \n        h[i][0] = (1ll * h[i - 1][0] * base[0] + s[i]) % MOD[0];\n        h[i][1] = (1ll * h[i - 1][1] * base[1] + s[i]) % MOD[1];\n    }\n}\n\nint f[2][2], len[2];\nbool vis[2];\n\ninline void get_hash(int &x, int &y, int l, int r) {\n    const int o = (r - l + 1);\n    x = (((1ll * h[r][0] - 1ll * h[l - 1][0] * b[o][0]) % MOD[0]) + MOD[0]) % MOD[0];\n    y = (((1ll * h[r][1] - 1ll * h[l - 1][1] * b[o][1]) % MOD[1]) + MOD[1]) % MOD[1];\n}\n\ninline int judge() {\n    vis[0] = vis[1] = 0; memset(f, 0, sizeof(f));\n    int it = 1; rep(i, 1, m) {\n        const bool x = t[i] ^ 48; int u, v; get_hash(u, v, it, it + len[x] - 1);\n        if(!vis[x]) { vis[x] = 1; f[x][0] = u; f[x][1] = v; }\n        else if(u != f[x][0] || v != f[x][1]) return 0;\n        it += len[x];\n    }\n    return !(f[0][0] == f[1][0] && f[0][1] == f[1][1]);\n}\n\nsigned main() {\n    read(t + 1); read(s + 1); m = strlen(t + 1); n = strlen(s + 1);\n    init(); int c[2] = {0, 0}; rep(i, 1, m) ++ c[t[i] ^ 48];\n    if(c[0] < c[1]) { std::swap(c[0], c[1]); rep(i, 1, m) t[i] ^= 1; }\n    int ans = 0; rep(k, 1, n / c[0]) {\n        len[0] = k; if((n - k * c[0]) % c[1]) continue;\n        if(!(len[1] = (n - k * c[0]) / c[1])) continue;\n        ans += judge();\n    }\n    print(ans);\n}\n```",
        "postTime": 1636098360,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010CF1056E Check Transcription\u3011"
    },
    {
        "content": "~~\u8fd9\u4e2a\u5f69\u7b14\u4e0d\u4f1a\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6,\u770b\u4e86\u6276\u82cf\u7684\u9898\u89e3\u624d\u4f1a\u8bc1.~~\n\n\u8003\u8651\u679a\u4e3e$|r_0|=i$.\u5148\u7edf\u8ba10\u7684\u4e2a\u6570$cnt_0$,\u5219$|r_1|=\\frac{|s|-cnt_0\\times i}{|t|-cnt_0}$\n\n\u5b9e\u9645\u4e0a\u77e5\u9053\u4e86$|r_0|,|r_1|$\u5c31\u80fd\u77e5\u9053$r_0,r_1$\u56e0\u4e3a0\u5bf9\u5e94\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4e32(\u5047\u8bbe\u8d77\u59cb\u4f4d\u7f6e\u662f$pos$)\u5c31\u662f$r_0$($s[pos,pos+i-1]=r_0$),$r_1$\u540c\u7406.  \n\u7136\u540e\u5c31\u662f\u68c0\u67e5,\u6bcf\u4e2a0\u5bf9\u5e94\u7684\u4e32\u5fc5\u987b\u76f8\u7b49,\u6bcf\u4e2a1\u5bf9\u5e94\u7684\u4e32\u5fc5\u987b\u76f8\u7b49$(r_0\\ne r_1)$.\u524d\u8005\u7b49\u4ef7\u4e8e\u6bcf\u4e2a0\u5bf9\u5e94\u7684\u4e32$=r_0$,\u540e\u8005\u7b49\u4ef7\u4e8e\u6bcf\u4e2a1\u5bf9\u5e94\u7684\u4e32$=r_1$\uff0e\u8fd9\u5c31\u662f\u4e00\u4e2a\u6c42\u5b50\u4e32LCP\u7684\u95ee\u9898,SA\u9884\u5904\u7406\u51faheight\u4e4b\u540e\u5efaST\u8868\u5373\u53ef\uff0e\n\n\u6700\u540e\u8bc1\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6,SA\u9884\u5904\u7406\u662f$\\mathcal O(n\\log n)\\ (n=max(|s|,|t|))$,\u540e\u9762\u6bcf\u6b21\u679a\u4e3e\u8981$|t|$\u7684\u4ee3\u4ef7,\u4f46\u8fd9\u6837\u4e0d\u597d\u8bc1,\u4f46\u56e0\u4e3a\u6709$|t|\\le \\frac{n}{i}$.\u6700\u574f\u60c5\u51b5\u4e0b\u662f$\\sum_{i=1}^n\\frac{n}{i}=\\mathcal O(n\\log n)$\n```cpp\n/**********/\n#define MAXN 1000001\nll sa[MAXN],rk[MAXN],tp[MAXN],c[MAXN];\nchar s[MAXN],t[MAXN];\nvoid radix_sort(ll n,ll m)\n{\n    for(ll i=1;i<=m;++i)c[i]=0;\n    for(ll i=1;i<=n;++i)++c[rk[i]];\n    for(ll i=1;i<=m;++i)c[i]+=c[i-1];\n    for(ll i=n;i;--i)sa[c[rk[tp[i]]]--]=tp[i];\n}\nvoid make_SA(ll n,ll m=128)\n{\n    for(ll i=1;i<=n;++i)rk[i]=s[i],tp[i]=i;\n    radix_sort(n,m);\n    for(ll k=1;k<=n;k<<=1)\n    {\n        ll cur=0;\n        for(ll i=n-k+1;i<=n;++i)tp[++cur]=i;\n        for(ll i=1;i<=n;++i)\n            if(sa[i]>k)tp[++cur]=sa[i]-k;\n        radix_sort(n,m);\n        std::swap(rk,tp);\n        cur=1,rk[sa[1]]=1;\n        for(ll i=2;i<=n;++i)\n        {\n            if(tp[sa[i]]!=tp[sa[i-1]]||tp[sa[i]+k]!=tp[sa[i-1]+k])++cur;\n            rk[sa[i]]=cur;\n        }\n        if(cur>=n)break;\n        m=cur;\n    }\n}\nll height[MAXN];\nvoid make_height(ll n)\n{\n    ll k=0;\n    for(ll i=1;i<=n;++i)\n    {\n        if(k>0)--k;\n        ll j=sa[rk[i]-1];\n        while(s[i+k]==s[j+k])++k;\n        height[rk[i]]=k;\n    }\n}\nstruct ST\n{\n    ll t[21][MAXN],lg[MAXN];\n    void build(ll* arr,ll n)\n    {\n        lg[1]=0;\n        for(ll i=2;i<=n;++i)lg[i]=lg[i>>1]+1;\n        for(ll i=1;i<=n;++i)t[0][i]=arr[i];\n        for(ll i=1;i<=lg[n];++i)\n            for(ll j=1;j+(1<<i)-1<=n;++j)\n                t[i][j]=min(t[i-1][j],t[i-1][j+(1<<(i-1))]);\n    }\n    ll Qmin(ll l,ll r)\n    {\n    \tif(l>r)std::swap(l,r);\n    \t++l;\n        ll k=lg[r-l];\n        return min(t[k][l],t[k][r-(1<<k)+1]);\n    }\n}st;\nint main()\n{\n    scanf(\"%s%s\",t+1,s+1);\n    ll lent=strlen(t+1),lens=strlen(s+1),cnt0=0;\n    make_SA(lens),make_height(lens);\n    st.build(height,lens);\n    for(ll i=1;i<=lent;++i)cnt0+=(t[i]=='0');\n    ll ans=0;\n    if(cnt0==lent)\n    {\n    \tif(lens%cnt0==0)\n    \t{\n    \t\tll i=lens/cnt0,pos=i+1,flag=1;\n    \t\tfor(ll j=2;j<=lent;pos+=i,++j)\n    \t\t\tif(st.Qmin(rk[1],rk[pos])<i)flag=0;\n    \t\tif(flag)++ans;\n\t\t}\n\t\tprintf(\"%d\",ans);\n\t\treturn 0;\n\t}\n    else if(cnt0==0)\n    {\n    \tif(lens%(lent-cnt0)==0)\n    \t{\n    \t\tll i=lens/(lent-cnt0),pos=i+1,flag=1;\n    \t\tfor(ll j=2;j<=lent;pos+=i,++j)\n    \t\t\tif(st.Qmin(rk[1],rk[pos])<i)flag=0;\n    \t\tif(flag)++ans;\n\t\t}\n\t\tprintf(\"%d\",ans);\n\t\treturn 0;\n\t}\n    for(ll i=1;i*cnt0<=lens;++i)\n    {\n        if((lens-i*cnt0)%(lent-cnt0))continue;\n        ll start0=0,start1=0,pos=1,flag=1;\n        ll k=(lens-i*cnt0)/(lent-cnt0);\n        for(ll j=1;j<=lent;++j)\n        {\n            if(t[j]=='0')\n            {\n                if(!start0)start0=pos;\n                else if(st.Qmin(rk[start0],rk[pos])<i)flag=0;\n                pos+=i;\n            }\n            else\n            {\n                if(!start1)start1=pos;\n                else if(st.Qmin(rk[start1],rk[pos])<k)flag=0;\n                if(!k)flag=0;\n                pos+=k;\n            }\n        }\n        if(flag&&(i!=k||st.Qmin(rk[start0],rk[start1])<i))++ans;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1585661262,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1056E \u3010Check Transcription\u3011"
    },
    {
        "content": "## \u3010SA\u3011\u3010CF1056E\u3011 Check Transcription\n\n### Description\n\n\u7ed9\u5b9a\u4e00\u4e2a $01$ \u4e32 $t$ \u548c\u4e00\u4e2a\u5b57\u6bcd\u4e32 $s$\uff0c\u6c42\u6709\u591a\u5c11\u5bf9\u5b57\u7b26\u4e32 $(r_0, r_1)$ \u6ee1\u8db3\u5c06 $r_0 \\neq r_1$ \u4e14\u5c06 $t$ \u4e2d\u7684 $0$ \u90fd\u6362\u6210 $r_0$\uff0c$1$ \u90fd\u6362\u6210 $r_1$ \u540e\uff0c\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u4e0e $s$ \u76f8\u540c\u3002\n\n$2 \\leq |t| \\leq 10^5$\uff0c$1 \\leq |s| \\leq 10^6$\uff0c$t$ \u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a $0$ \u548c\u4e00\u4e2a $1$\u3002\n\n### Solution\n\n\u4e0d\u59a8\u8bbe $t_0 = 0$\uff0c\u5426\u5219\u5c06 $t$ \u4e2d\u5b57\u7b26\u53d6\u53cd\uff0c\u7b54\u6848\u4e0d\u53d8\u3002\n\n\u663e\u7136 $r_0$ \u5e94\u8be5\u662f $s$ \u7684\u4e00\u4e2a\u524d\u7f00\uff0c\u8003\u8651\u679a\u4e3e $r_0$ \u7684\u957f\u5ea6 $\\operatorname{len}_0$\uff0c\u4e0d\u96be\u53d1\u73b0\u7531\u4e8e $t$ \u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5 $r_1$ \u4e5f\u88ab\u552f\u4e00\u786e\u5b9a\u4e86\uff0c\u5373 $\\operatorname{len}_1 = \\frac{|s| - \\operatorname{len_0} \\times \\operatorname{cnt}_0}{\\operatorname{cnt}_1}$\uff0c\u5176\u4e2d $\\operatorname{cnt_i}$ \u4e3a\u5b57\u7b26 $i$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u9996\u5148\u5982\u679c $\\operatorname{len}_1$ \u4e0d\u662f\u6b63\u6574\u6570\u5219\u663e\u7136\u8be5\u957f\u5ea6\u4e0d\u5408\u6cd5\uff0c\u5bf9\u4e8e $\\operatorname{len}_1$ \u662f\u6574\u6570\u7684\u60c5\u51b5\uff0c\u8003\u8651\u76f4\u63a5\u66b4\u529b\u904d\u5386 $t$\uff0c\u5bf9\u4e8e $t$ \u4e2d\u6bcf\u4e2a\u5b57\u7b26 $c$ \u6240\u5bf9\u5e94\u7684 $s$ \u7684\u5b50\u4e32\uff0c\u90fd\u6bd4\u8f83\u4e00\u4e0b\u8fd9\u6bb5\u5b50\u4e32\u548c $t$ \u4e2d\u7b2c\u4e00\u4e2a\u7b49\u4e8e $c$ \u7684\u5b57\u7b26\u5bf9\u5e94\u7684 $s$ \u7684\u5b50\u4e32\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5b50\u4e32\u662f\u5426\u76f8\u7b49\uff0c\u53ef\u4ee5\u540e\u7f00\u6392\u5e8f\u540e\u9884\u5904\u7406\u51fa $s$ \u7684 $\\operatorname{height}$ \u6570\u7ec4\uff0c\u7528 ST \u5373\u53ef\u505a\u5230 $O(1)$ \u67e5\u8be2\u3002\n\n\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u8bbe $|t| = m$\uff0c$|s| = n$\u3002\u9884\u5904\u7406 ST \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\uff0c\u5bf9\u4e8e\u679a\u4e3e\u957f\u5ea6\uff0c\u8bbe $\\min(\\operatorname{len}_0, \\operatorname{len}_1) = k$\uff0c\u5219\u4e00\u6b21\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u4e3a $O(\\frac{m}{k})$\uff0c\u540c\u65f6\u6ce8\u610f\u5230m\u6240\u6709\u7684 $\\operatorname{len_0}$ \u4e92\u4e0d\u76f8\u540c\uff0c$\\operatorname{len}_1$ \u4e92\u4e0d\u76f8\u540c\uff0c\u4e5f\u5373\u6bcf\u4e2a $k$ \u90fd\u53ea\u51fa\u73b0 $O(1)$ \u6b21\uff08\u81f3\u591a\u4e24\u6b21\uff09\uff0c\u800c $k_{\\max} = m$\uff0c\u8fd9\u662f\u4e00\u4e2a\u8c03\u548c\u7ea7\u6570\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m \\log m)$\u3002\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n) - O(m \\log m)$\u3002\n\n\u6700\u540e\u522b\u5fd8\u4e86\u7279\u5224 $r_0 = r_1$ \uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u80fd\u7d2f\u52a0\u7b54\u6848\u3002\n\n### Code\n\n```cpp\nconst int maxt = 21;\nconst int maxn = 2000006;\n\nvoid SA();\nvoid Calc();\nvoid Init();\nvoid Height();\n\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  Init();\n  SA();\n  Height();\n  Calc();\n  return 0;\n}\n\nint m, n;\nchar s[maxn], t[maxn];\nvoid Init() {\n  m = qrs(t + 1); n = qrs(s + 1);\n  if (t[1] == '1') {\n    for (int i = 1; i <= m; ++i) if (t[i] == '1') {\n      t[i] = '0';\n    } else {\n      t[i] = '1';\n    }\n  }\n}\n\nint mp;\nint sa[maxn], rnk[maxn], height[maxn], tax[maxn], tp[maxn];\nvoid RadixSort() {\n  memset(tax + 1, 0, mp * sizeof (int));\n  for (int i = 1; i <= n; ++i) ++tax[rnk[i]];\n  for (int i = 2; i <= mp; ++i) tax[i] += tax[i - 1];\n  for (int i = n; i; --i) sa[tax[rnk[tp[i]]]--] = tp[i];\n}\n\nvoid SA() {\n  for (int i = 1; i <= n; ++i) {\n    mp = std::max(mp, rnk[i] = s[i]);\n    tp[i] = i;\n  }\n  RadixSort();\n  for (int len = 1, p = 0; (mp = p) != n; len <<= 1) {\n    p = 0;\n    for (int i = 1; i <= len; ++i) tp[++p] = n - len + i;\n    for (int i = 1; i <= n; ++i) if (sa[i] > len) tp[++p] = sa[i] - len;\n    RadixSort();\n    std::swap(tp, rnk);\n    rnk[sa[1]] = p = 1;\n    for (int i = 2, di = i - 1; i <= n; di = i++) {\n      int x = sa[i], y = sa[di];\n      rnk[sa[i]] = ((tp[x] == tp[y]) && (tp[x + len] == tp[y + len])) ? p : ++p;\n    }\n  }\n}\n\nint ST[maxt][maxn];\nvoid Height() {\n  int p = 0;\n  for (int i = 1, j = sa[rnk[i] - 1]; i <= n; j = sa[rnk[++i] - 1]) {\n    if (p) --p;\n    while (s[i + p] == s[j + p]) ++p;\n    ST[0][rnk[i]] = height[rnk[i]] = p;\n  }\n  for (int i = 0, di = i + 1, len = (1 << i); i < maxt; len = 1 << (i = di++)) {\n    for (int l = 1, m = l + len; m <= n; m = ++l + len) {\n      ST[di][l] = std::min(ST[i][l], ST[i][m]);\n    }\n  }\n}\n\nint query(int x, int y) {\n  if (x == y) return n;\n  if (x > y) std::swap(x, y);\n  int len = y - x, t = log2(len);\n  return std::min(ST[t][x + 1], ST[t][y - (1 << t) + 1]);\n}\n\nint c0, c1, f1;\nvoid Calc() {\n  int ans = 0;\n  for (int i = 1; i <= m; ++i) if (t[i] == '0') {\n    ++c0;\n  } else {\n    ++c1;\n    if (f1 == 0) f1 = i - 1;\n  }\n  for (int len = 1; len <= n; ++len) {\n    bool flag = true;\n    ll t0 = 1ll * c0 * len;\n    if (t0 >= n) break;\n    if (((n - t0) % c1) != 0) continue;\n    int p1 = f1 * len + 1, len1 = (n - t0) / c1;\n    for (int i = 1, p = 1; i <= n; ++p) if (t[p] == '0') {\n      if (query(rnk[1], rnk[i]) < len) {\n        flag = false;\n        break;\n      }\n      i += len;\n    } else {\n      if (query(rnk[p1], rnk[i]) < len1) {\n        flag = false;\n        break;\n      }\n      i += len1;\n    }\n    if (flag) {\n      if ((len != len1) || (query(rnk[1], rnk[p1]) < len)) ++ans;\n    }\n  }\n  qw(ans, '\\n');\n}\n```\n\n",
        "postTime": 1584611541,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1056E \u3010Check Transcription\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u6709\u610f\u601d\u7684\u9898\u76ee\u3002     \n\u9274\u4e8e\u8fd9\u9053\u9898\u662f\u82f1\u6587\u9898\u9762\uff0c\u6211\u4eec\u6765\u628a\u9898\u9762\u7684\u91cd\u70b9\u7ffb\u8bd1\u4e00\u4e0b\u3002         \n```\n\u6211\u4eec\u6709\u4e00\u4e2a\u75310\uff0c1\u7ec4\u6210\u7684\u6570\u5b57\u4e32a\uff0c\u8fd8\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32b\u3002\n\u6211\u4eec\u4ee4a\u4e2d\u7684\u6bcf\u4e00\u4e2a0\u90fd\u5bf9\u5e94\u4e00\u4e2a\u4e32s1\uff0c\u4ee4a\u4e2d\u6bcf\u4e00\u4e2a1\u90fd\u5bf9\u5e94\u53e6\u4e00\u4e2a\u4e32s2\uff0cs1\u4e0es2\u4e0d\u80fd\u5b8c\u5168\u76f8\u540c\u3002\n\u95ee\u6709\u591a\u5c11\u7ec4\u4e0d\u540c\u7684\u4e32\u5bf9(s1,s2)\uff0c\u4f7f\u5f97a\u88abs1\uff0cs2\u66ff\u6362\u540e\u540e\u4e0eb\u5b8c\u5168\u76f8\u540c\u3002\n```\n\u770b\u5230\u8fd9\u79cd\u5b57\u7b26\u4e32\u9898\uff0c\u65e0\u975e\u5c31\u51e0\u4e2a\u7b97\u6cd5:AC\u81ea\u52a8\u673a\uff0chash\uff0cmarachar...      \n\u8fd9\u4e00\u9898\u5c31\u8981\u7528\u5230hash         \n\u53cb\u60c5\u63d0\u793a\uff1a\u8bf7\u4e0d\u8981\u7528\u80fd\u88abhash killer\u5e72\u6389\u7684\u6a21\u6570\uff0cCF\u53ef\u662f\u4e00\u4e2a\u53ef\u4ee5\u4e92\u76f8hack\u7684\u7f51\u7ad9\uff0c\u8fd9\u4e00\u9898\u91cc\u9762\u53ef\u80fd\u6709\u4e00\u5806\u6bd2\u7624\u6570\u636e\u3002        \n\u6211\u4eec\u6765\u8fc7\u4e00\u904d\u7b97\u6cd5\u6d41\u7a0b\u3002      \n1.\u521d\u59cb\u5316:   \n\u6211\u4eec\u5148\u8bfb\u5165\u4e32a\u548c\u4e32b\uff0c\u5e76\u5904\u7406\u51faa\u4e2d'0'\u548c'1'\u7684\u6570\u76ee\u3002\n```cpp\nint main()\n{\n\tscanf(\"%s%s\",&a[0],&b[0]);\n\tint lena=strlen(a);\n\tint lenb=strlen(b);\n\tfor(int i=0;i<lena;i++)\n\t{\n\t\tif(a[i]=='0')nowa++;\n\t\telse nowb++;\n\t}\n```\n2.\u9884\u5904\u7406\uff1a     \n\u7136\u540e\u6211\u4eec\u5f00\u4e24\u4e2a\u6570\u7ec4  \n\u7528```up[i]```\u6765\u5b58\u50a8pow(base,i)       \n\u7528```hb[i]```\u6765\u5b58\u50a8b\u7684hash\u503c \n```cpp\n\tup[0]=1;\n\tfor(int i=1;i<=lenb;i++)up[i]=(up[i-1]*base)%mod;\n\tfor(int i=1;i<=lenb;i++)hb[i]=(hb[i-1]*base+b[i-1]-'a'+1)%mod;\n```\n3.\u7b97\u6cd5\u4e3b\u8981\u8fc7\u7a0b:       \n\u8ba9\u6211\u4eec\u9010\u6b65\u5206\u6790\u7b97\u6cd5\u4e3b\u8981\u8fc7\u7a0b:     \n1.\u6211\u4eec\u679a\u4e3e'0'\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u4ecei\u4e00\u76f4\u679a\u4e3e\u5230lenb\u3002        \n\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u5b50\u4e32\u957f\u5ea6\u4e0e\u5b50\u4e32\u4e2a\u6570\u7684\u4e58\u79ef\u5927\u4e8elenb\uff0c\u5c31\u76f4\u63a5\u7ed3\u675f\u7b97\u6cd5\u3002     \n```cpp\n\tfor(int i=1;i<=lenb;i++)\n\t{\n\t\tif(!(nowa*i<=lenb))break;\n```\n2.\u4e00\u4e9b\u5b9a\u4e49:\n\u6211\u4eec\u5206\u522b\u5b9a\u4e49hs0\uff0chs1\u4e3a'0'\uff0c'1'\u4ee3\u8868\u7684\u5b50\u4e32\u7684hash\u503c\u3002      \n\u5b9a\u4e49p\u4e3a'1'\u5b50\u4e32\u7684\u957f\u5ea6\u3002    \n\u5b9a\u4e49l\uff0cr\u4e3a\u5f53\u524d\u4f4d\u7f6e\u3002     \n\u5b9a\u4e49flg\u4e3a\u5f53\u524d\u5faa\u73af\u8fc7\u7a0b\u662f\u5426\u5931\u8d25\u3002     \n```cpp\n\t\tll hs0=0,hs1=0;\n\t\tint p=lenb-nowa*i;\n\t\tif(p%nowb!=0||p<nowb)continue;\n\t\tp/=nowb;\n\t\tint l,r=0;\n\t\tint flg=0;\n```\n3.\u5224\u65ad\u80fd\u591f\u5339\u914d\u7684\u72b6\u6001:        \n\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u72b6\u6001\uff0c\u627e\u5230\u4e86\u5c31\u6253\u4e0aflg   \n\u5b50\u51fd\u6570\u5b9a\u4e49:\n```cpp\nll f(int l,int r)\n{\n\tll val=(hb[r]-hb[l-1]*up[r-l+1])%mod;\n\treturn (val+mod)%mod;\n}\nvoid judge(ll* xi,int* flg,int* klg,int* l,int *r)\n{\n\tif(*xi==0)*xi=f(*l,*r);\n\telse if(*xi!=f(*l,*r)){*klg=1;*flg=1;}\n}\n```\n\u5224\u65ad\u4ee3\u7801:\n```cpp\n\t\tfor(int j=0;j<lena;j++)\n\t\t{\n\t\t\tint klg(0);\n\t\t\tl=r+1;\n\t\t\tif(a[j]=='0'){r+=i;judge(&hs0,&flg,&klg,&l,&r);if(klg)break;}\n\t\t\tif(a[j]=='1'){r+=p;judge(&hs1,&flg,&klg,&l,&r);if(klg)break;}\n\t\t}\n```\n4.\u5224\u65ada\uff0cb\u662f\u5426\u662f\u76f8\u540c\u7684\u4e32,\u5e76\u66f4\u65b0\u7b54\u6848:\n```cpp\n\t\tif(hs0==hs1){flg=1;continue;}\n\t\tif(!flg)ans++;\n\t}\n```\n\u4e3b\u8fc7\u7a0b\u4ee3\u7801:    \n```cpp\n\tfor(int i=1;i<=lenb;i++)\n\t{\n\t\tif(!(nowa*i<=lenb))break;\n\t\tll hs0=0,hs1=0;\n\t\tint p=lenb-nowa*i;\n\t\tif(p%nowb!=0||p<nowb)continue;\n\t\tp/=nowb;\n\t\tint l,r=0;\n\t\tint flg=0;\n\t\tfor(int j=0;j<lena;j++)\n\t\t{\n\t\t\tint klg(0);\n\t\t\tl=r+1;\n\t\t\tif(a[j]=='0'){r+=i;judge(&hs0,&flg,&klg,&l,&r);if(klg)break;}\n\t\t\tif(a[j]=='1'){r+=p;judge(&hs1,&flg,&klg,&l,&r);if(klg)break;}\n\t\t}\n\t\tif(hs0==hs1){flg=1;continue;}\n\t\tif(!flg)ans++;\n\t}\n```\n4.\u8f93\u51fa\u7b54\u6848:     \n```cpp\n\t\tif(hs0==hs1){flg=1;continue;}\n\t\tif(!flg)ans++;\n\t}\n```\n\u7b97\u6cd5\u8fc7\u7a0b\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\u3002\n\u5b8c\u6574\u4ee3\u7801\uff1a         \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<climits>\n#include<ctime>\n#include<algorithm>\n#include<complex>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<vector>\n#define INF 0x3f3f3f3f\n#define ll long long\n#define base 39\n#define mod 1000000007\nusing namespace std;\nint ans;\nint nowa,nowb;\nchar b[1000010];\nchar a[100010];\nll hb[1000010];\nll up[1000010];\nll f(int l,int r)\n{\n\tll val=(hb[r]-hb[l-1]*up[r-l+1])%mod;\n\treturn (val+mod)%mod;\n}\nvoid judge(ll* xi,int* flg,int* klg,int* l,int *r)\n{\n\tif(*xi==0)*xi=f(*l,*r);\n\telse if(*xi!=f(*l,*r)){*klg=1;*flg=1;}\n}\nint main()\n{\n\tscanf(\"%s%s\",&a[0],&b[0]);\n\tint lena=strlen(a);\n\tint lenb=strlen(b);\n\tfor(int i=0;i<lena;i++)\n\t{\n\t\tif(a[i]=='0')nowa++;\n\t\telse nowb++;\n\t}\n\tup[0]=1;\n\tfor(int i=1;i<=lenb;i++)up[i]=(up[i-1]*base)%mod;\n\tfor(int i=1;i<=lenb;i++)hb[i]=(hb[i-1]*base+b[i-1]-'a'+1)%mod;\n\tfor(int i=1;i<=lenb;i++)\n\t{\n\t\tif(!(nowa*i<=lenb))break;\n\t\tll hs0=0,hs1=0;\n\t\tint p=lenb-nowa*i;\n\t\tif(p%nowb!=0||p<nowb)continue;\n\t\tp/=nowb;\n\t\tint l,r=0;\n\t\tint flg=0;\n\t\tfor(int j=0;j<lena;j++)\n\t\t{\n\t\t\tint klg(0);\n\t\t\tl=r+1;\n\t\t\tif(a[j]=='0'){r+=i;judge(&hs0,&flg,&klg,&l,&r);if(klg)break;}\n\t\t\tif(a[j]=='1'){r+=p;judge(&hs1,&flg,&klg,&l,&r);if(klg)break;}\n\t\t}\n\t\tif(hs0==hs1){flg=1;continue;}\n\t\tif(!flg)ans++;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1543478738,
        "uid": 105496,
        "name": "KevinYu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1056E \u3010Check Transcription\u3011"
    }
]