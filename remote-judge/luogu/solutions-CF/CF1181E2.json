[
    {
        "content": "### Description\n\n\u5728\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u6709\u82e5\u5e72\u4e2a\u77e9\u5f62\u3002\u5b9a\u4e49\u4e00\u4e2a\u77e9\u5f62\u7684\uff08\u6216\u6709\u8fb9\u5728\u65e0\u9650\u8fdc\u5904\uff09\u533a\u57df\u4e3a\u7b26\u5408\u6761\u4ef6\u7684\u6761\u4ef6\u4e3a\uff1a\n\n- \u8fd9\u4e2a\u533a\u57df\u4ec5\u5305\u542b\u4e00\u4e2a\u77e9\u5f62\uff0c\u4e14\u4e0d\u80fd\u4f7f\u8fb9\u754c\u7a7f\u8fc7\u4efb\u4f55\u4e00\u4e2a\u77e9\u5f62\u7684\u5185\u90e8\u3002\n- \u8fd9\u4e2a\u533a\u57df\u53ef\u4ee5\u7528\u4e00\u4e2a\u6c34\u5e73\u6216\u7ad6\u76f4\u7684\u76f4\u7ebf\u5206\u5272\u4e3a\u4e24\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u533a\u57df\u3002\n\n\u73b0\u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u77e9\u5f62\u7684\u5e73\u9762\uff0c\u8bf7\u4f60\u5224\u65ad\u6574\u4e2a\u5e73\u9762\u533a\u57df\u662f\u5426\u7b26\u5408\u6761\u4ef6\u3002\n\n### Hint\n\n- for all: $1\\le n\\le 10^5$\n    - for Easy: $n\\le 10^3$\n- $0\\le \\text{\u5750\u6807\u5927\u5c0f} \\le 10^9$\n\n### Solution\n\n#### Easy Version\n\n\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u7684\u6570\u636e\uff0c\u6211\u4eec\u76f4\u63a5\u6309\u9898\u610f\u5206\u6cbb\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e00\u7ec4\u77e9\u5f62\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u4e00\u6761\u5206\u5272\u7ebf\uff0c\u5206\u4e3a\u4e24\u7ec4\u77e9\u5f62\u7136\u540e\u9012\u5f52\u5904\u7406\u3002\n\n\u5982\u4f55\u627e\u5206\u5272\u7ebf\uff1f\u4e0d\u96be\u60f3\u5230\u6309 $x,y$ \u5750\u6807\u5206\u522b\u76f4\u63a5\u6392\u5e8f\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u590d\u6742\u5ea6 $O(n^2 \\log n)$\uff0c\u8db3\u4ee5\u901a\u8fc7 Easy \u6570\u636e\u3002\n\n#### Code(Easy)\n\n```cpp\n/*\n * Author : _Wallace_\n * Source : https://www.cnblogs.com/-Wallace-/\n * Problem : Codeforces 1181E1 A Story of One Country (Easy)\n */\n#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\nconst int N = 1e5 + 5;\n\nstruct area {\n\tint u, d, l, r;\n} ar[N];\ntypedef vector<area> areaList;\nint n;\n\nbool cmp_x(const area& x, const area& y) {\n\treturn x.l < y.l;\n}\nbool cmp_y(const area& x, const area& y) {\n\treturn x.u < y.u;\n}\n\nbool solve(areaList ar) {\n\tif (ar.size() == 1) return true;\n\t\n\tsort(ar.begin(), ar.end(), cmp_x);\n\tint maxR = ar.begin()->r;\n\tfor (register int i = 1; i < ar.size(); i++)\n\t\tif (maxR <= ar[i].l)\n\t\t\treturn solve(areaList(ar.begin(), ar.begin() + i))\n\t\t\t\t&& solve(areaList(ar.begin() + i, ar.end()));\n\t\telse maxR = max(maxR, ar[i].r);\n\t\n\tsort(ar.begin(), ar.end(), cmp_y);\n\tint maxD = ar.begin()->d;\n\tfor (register int i = 1; i < ar.size(); i++)\n\t\tif (maxD <= ar[i].u)\n\t\t\treturn solve(areaList(ar.begin(), ar.begin() + i))\n\t\t\t\t&& solve(areaList(ar.begin() + i, ar.end()));\n\t\telse maxD = max(maxD, ar[i].d);\n\t\n\treturn false;\n}\n\nsigned main() {\n\tcin >> n;\n\tareaList dat;\n\tfor (register int i = 1; i <= n; i++) {\n\t\tarea ar;\n\t\tcin >> ar.l >> ar.u >> ar.r >> ar.d;\n\t\tdat.push_back(ar);\n\t}\n\t\n\tif (solve(dat)) cout << \"YES\" << endl;\n\telse cout << \"NO\" << endl;\n}\n```\n\n#### Hard\n\n\u4e0a\u9762\u7684\u7b97\u6cd5\u4e4b\u6240\u4ee5\u6548\u7387\u4e0d\u9ad8\uff0c\u5f88\u5927\u539f\u56e0\u662f\u7531\u4e8e\u9012\u5f52\u5185\u90e8\u7684\u6392\u5e8f\u3002\n\n\u56e0\u6b64\u4e0d\u59a8\u76f4\u63a5\u7ef4\u62a4\u77e9\u5f62\u7684\u6709\u5e8f\u2014\u2014```set```\u3002\n\n\u8fd9\u91cc\u7ef4\u62a4\u4e24\u4e2a set\uff0c\u5206\u522b\u6309 $x, y$ \u5750\u6807\u6392\u5e8f\u3002\n\n\u5047\u5982\u627e\u5230\u4e86\u4e00\u6761\u5206\u5272\u7ebf\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u8fd9\u90e8\u5206\u7684\u77e9\u5f62\u5bfc\u51fa\u8f6c\u79fb\u81f3\u4e24\u4e2a\u65b0\u7684 set \u4e2d\uff0c\u9012\u5f52\u5206\u6cbb\u5904\u7406\u3002\n\n\u4f46\u5047\u5982\u5206\u5272\u7ebf\u5728\u975e\u5e38\u540e\u9762\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5bfc\u51fa\u77e9\u5f62\u7684\u65f6\u95f4\u5f00\u9500\u975e\u5e38\u5927\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4f7f\u7528 **\u542f\u53d1\u5f0f\u5206\u88c2** \u7684\u601d\u60f3\uff1a\u5f53\u5206\u5272\u7ebf\u5728\u975e\u5e38\u540e\u9762\uff0c\u867d\u7136\u524d\u9762\u5143\u7d20\u975e\u5e38\u591a\uff0c\u4f46\u540e\u9762\u5143\u7d20\u5374\u5f88\u5c11\u3002\u4f7f\u7528\u4e3a\u4ec0\u4e48\u4e0d\u5bfc\u51fa\u540e\u9762\uff0c\u4fdd\u7559\u524d\u9762\u5462\uff1f\n\n\u5047\u5982\u6211\u4eec\u603b\u662f\u8fd9\u6837\u505a\uff0c\u90a3\u4e48\u5bfc\u51fa\u90e8\u5206\u7684\u6548\u7387\u5c31\u53ef\u4ee5\u5f97\u5230\u4fdd\u8bc1\u3002\n\n---------------------\n\n\u73b0\u5728\u53c8\u6709\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\u2014\u2014\u600e\u4e48\u627e\u5206\u5272\u7ebf\uff1f\n\n\u5047\u5982\u76f4\u63a5\u626b set \u627e\uff0c\u6700\u574f\u8fd8\u5f97\u626b\u8fc7\u6574\u4e2a set\uff0c\u590d\u6742\u5ea6\u53c8\u9000\u5316\u5230\u4e86\u5e73\u65b9\u7ea7\u522b\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6709\u60f3\u5230 [Non-boring sequences](https://strncmp.blog.luogu.org/solution-uva1608) \u4e2d\u7684 **\u4e2d\u9014\u76f8\u9047\u6cd5**\u3002\n\n\u90a3\u4e2a\u662f\u4e00\u7ef4\u610f\u4e49\u4e0a\u7684\u4e2d\u9014\u76f8\u9047\uff0c\u800c\u8fd9\u91cc\u5219\u662f **\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4e2d\u9014\u76f8\u9047**\u3002\n\n\u5177\u4f53\u600e\u4e48\u505a\uff1f\u9898\u76ee\u4e0d\u662f\u7ed9\u6211\u4eec\u6bcf\u4e2a\u77e9\u5f62\u7684\u56db\u4e2a\u53c2\u6570\u5417\uff1f\u4e8e\u662f\u6211\u4eec\u6839\u636e 4 \u4e2a\u65b9\u5411\uff0c\u4e00\u4e2a\u5f00 4 \u4e2a set\u3002\n\n\u5e76\u4e14\u6211\u4eec\u8981\u6c42 4 \u4e2a\u65b9\u5411\u540c\u65f6\u5411\u4e2d\u95f4\u63a8\u8fdb\u3002\n\n\u5f53\u5176\u4e2d\u4e00\u4e2a\u65b9\u5411\u627e\u5230\u4e86\u5206\u5272\u7ebf\uff0c\u90a3\u4e48\u5c31 **\u76f4\u63a5\u5f00\u59cb\u5bfc\u51fa**\u3002\u7531\u4e8e\u8fd9\u91cc\u53ef\u4ee5\u5bfc\u51fa\u7684\u77e9\u5f62\u4e2a\u6570\u4e00\u5b9a\u4e0d\u8d85\u8fc7\u6574\u4e2a set \u7684\u4e00\u534a\uff0c\u4e8e\u662f\u4e0d\u9700\u8981\u5224\u65ad\u4e24\u8fb9\u7684\u4e2a\u6570\u591a\u5c11\uff0c\u81ea\u7136\u5c31\u4fdd\u8bc1\u4e86\u542f\u53d1\u5f0f\u5206\u88c2\u7684\u5b9e\u65bd\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $T(n) = T(x) + T(n - x) + O(x\\log n)$ \uff0c\u5176\u4e2d $x$ \u4e3a\u5bfc\u51fa\u7684\u77e9\u5f62\u7684\u4e2a\u6570\u3002\n\n\u5f53 $x = \\frac{n}{2}$ \u65f6\u8fbe\u5230\u6700\u52a3\u60c5\u51b5\uff0c\u4e3a $O(n\\log^2 n)$\u3002\n\n#### Code(Hard)\n\n```cpp\n/*\n * Author : _Wallace_\n * Source : https://www.cnblogs.com/-Wallace-/\n * Problem : Codeforces 1181E2 A Story of One Country (Hard)\n */\n#include <iostream>\n#include <algorithm>\n#include <set>\n#include <vector>\n\nusing namespace std;\nconst int N = 1e5 + 5;\nconst int MaxU = 1e9;\n\nstruct area {\n\tint l, r, u, d;\n};\ntypedef vector<area> areaList;\nint n;\n\nstruct cmp_l {\n\tinline bool operator () (const area& a, const area& b) {\n\t\treturn a.l != b.l ? a.l < b.l : a.u < b.u;\n\t}\n};\nstruct cmp_r {\n\tinline bool operator () (const area& a, const area& b) {\n\t\treturn a.r != b.r ? a.r > b.r : a.d > b.d;\n\t}\n};\nstruct cmp_u {\n\tinline bool operator () (const area& a, const area& b) {\n\t\treturn a.u != b.u ? a.u < b.u : a.l < b.l;\n\t}\n};\nstruct cmp_d {\n\tinline bool operator () (const area& a, const area& b) {\n\t\treturn a.d != b.d ? a.d > b.d : a.r > b.r;\n\t}\n};\ntypedef set<area, cmp_l> setL;\ntypedef set<area, cmp_r> setR;\ntypedef set<area, cmp_u> setU;\ntypedef set<area, cmp_d> setD;\n\nbool solve(setL& sl, setR& sr, setU& su, setD& sd) {\n\tint size = sl.size();\n\tif (size == 1) return true;\n\t\n\tsetL pl; setR pr;\n\tsetU pu; setD pd;\n\t\n\tsetL::iterator itl = sl.begin();\n\tsetR::iterator itr = sr.begin();\n\tsetU::iterator itu = su.begin();\n\tsetD::iterator itd = sd.begin();\n\t\n\tint maxR = itl->r, maxD = itu->d;\n\tint minL = itr->l, minU = itd->u;\n\t\n\twhile (--size) {\n\t\t++itl;\n\t\tif (maxR <= itl->l) {\n\t\t\tfor (setL::iterator j = sl.begin(); j != itl; j++)\n\t\t\t\tpl.insert(*j), pr.insert(*j), pu.insert(*j), pd.insert(*j);\n\t\t\tfor (setL::iterator j = sl.begin(); j != itl; j++)\n\t\t\t\tsr.erase(*j), su.erase(*j), sd.erase(*j);\n\t\t\tsl.erase(sl.begin(), itl);\n\t\t\treturn solve(pl, pr, pu, pd) && solve(sl, sr, su, sd);\n\t\t} else {\n\t\t\tmaxR = max(maxR, itl->r);\n\t\t}\n\t\t\n\t\t++itr;\n\t\tif (minL >= itr->r) {\n\t\t\tfor (setR::iterator j = sr.begin(); j != itr; j++)\n\t\t\t\tpl.insert(*j), pr.insert(*j), pu.insert(*j), pd.insert(*j);\n\t\t\tfor (setR::iterator j = sr.begin(); j != itr; j++)\n\t\t\t\tsl.erase(*j), su.erase(*j), sd.erase(*j);\n\t\t\tsr.erase(sr.begin(), itr);\n\t\t\treturn solve(pl, pr, pu, pd) && solve(sl, sr, su, sd);\n\t\t} else {\n\t\t\tminL = min(minL, itr->l);\n\t\t}\n\t\t\n\t\t++itu;\n\t\tif (maxD <= itu->u) {\n\t\t\tfor (setU::iterator j = su.begin(); j != itu; j++)\n\t\t\t\tpl.insert(*j), pr.insert(*j), pu.insert(*j), pd.insert(*j);\n\t\t\tfor (setU::iterator j = su.begin(); j != itu; j++)\n\t\t\t\tsl.erase(*j), sr.erase(*j), sd.erase(*j);\n\t\t\tsu.erase(su.begin(), itu);\n\t\t\treturn solve(pl, pr, pu, pd) && solve(sl, sr, su, sd);\n\t\t} else {\n\t\t\tmaxD = max(maxD, itu->d);\n\t\t}\n\t\t\n\t\t++itd;\n\t\tif (minU >= itd->d) {\n\t\t\tfor (setD::iterator j = sd.begin(); j != itd; j++)\n\t\t\t\tpl.insert(*j), pr.insert(*j), pu.insert(*j), pd.insert(*j);\n\t\t\tfor (setD::iterator j = sd.begin(); j != itd; j++)\n\t\t\t\tsl.erase(*j), sr.erase(*j), su.erase(*j);\n\t\t\tsd.erase(sd.begin(), itd);\n\t\t\treturn solve(pl, pr, pu, pd) && solve(sl, sr, su, sd);\n\t\t} else {\n\t\t\tminU = min(minU, itd->u);\n\t\t}\n\t}\n\t\n\treturn false;\n}\n\nsigned main() {\n\tcin >> n;\n\tareaList dat;\n\tfor (register int i = 1; i <= n; i++) {\n\t\tarea ar;\n\t\tcin >> ar.l >> ar.u >> ar.r >> ar.d;\n\t\tdat.push_back(ar);\n\t}\n\t\n\tsort(dat.begin(), dat.begin(), cmp_l());\n\tsetL sl(dat.begin(), dat.end());\n\t\n\tsort(dat.begin(), dat.begin(), cmp_r());\n\tsetR sr(dat.begin(), dat.end());\n\t\n\tsort(dat.begin(), dat.begin(), cmp_u());\n\tsetU su(dat.begin(), dat.end());\n\t\n\tsort(dat.begin(), dat.begin(), cmp_d());\n\tsetD sd(dat.begin(), dat.end());\n\t\n\tif (solve(sl, sr, su, sd)) cout << \"YES\" << endl;\n\telse cout << \"NO\" << endl;\n}\n```",
        "postTime": 1593997005,
        "uid": 61430,
        "name": "_Wallace_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1181E2 \u3010A Story of One Country (Hard)\u3011"
    }
]