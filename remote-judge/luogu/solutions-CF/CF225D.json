[
    {
        "content": "\u770b\u5230\u5730\u56fe\u548c\u6700\u5c11\u51e0\u6b65\uff0c\u9996\u5148\u60f3\u5230bfs\u3002\n\n\u8fd9\u9898\u7684\u96be\u70b9\uff0c\u5e94\u8be5\u662f\u72b6\u6001\u7684\u8868\u793a\u3002\u6211\u7684\u601d\u8def\u662f\u8bb0\u5f55\u86c7\u5934\u4e5f\u5c31\u662f1\u7684\u4f4d\u7f6e\uff0c\u540e\u8fb9\u86c7\u7684\u8eab\u5b50\u6bcf\u4e00\u8282\u7528\u4e00\u4e2a0-3\u4e4b\u95f4\u7684\u6574\u6570\u8868\u793a\uff0c\u5206\u522b\u4ee3\u8868\u5f53\u524d\u8fd9\u4e00\u8282\u5728\u4e0a\u4e00\u8282\u7684\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u3002\n\n\u5982\u679c\u628a\u8fd9\u4e00\u4e32\u6570\u770b\u4f5c10\u8fdb\u5236\uff0c\u90a3\u4e48\u6700\u5927\u67098\u4f4d\uff0c\u663e\u7136\u5f00\u4e0d\u4e86\u6570\u7ec4\uff0c\u6ca1\u6cd5\u53bb\u91cd\u3002\u6240\u4ee5\u4f1a\u60f3\u5230\u628a\u5b83\u770b\u4f5c\u4e00\u4e2a4\u8fdb\u5236\u6570\uff0c\u8fd9\u6837\u6700\u5927\u53ea\u670965535\uff0c\u5c31\u80fd\u987a\u5229\u7684\u5f00\u6570\u7ec4\uff0c\u800c\u4e14\u521a\u597d\u53ef\u4ee5\u501f\u52a9\u4f4d\u8fd0\u7b97\u5b8c\u6210\u4e00\u4e9b\u64cd\u4f5c\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1\u3001\u6bcf\u6b21\u53d6\u51fa\u961f\u9996\u90fd\u8981\u66f4\u65b0\u5f53\u524d\u86c7\u7684\u72b6\u6001\uff0c\u6ce8\u610f\u86c7\u5c3e\u53ef\u4ee5\u770b\u4f5c\u7a7a\u5730\u3002\n\n2\u3001\u6211\u4e2a\u4eba\u4e0d\u4e60\u60ef\u7528STL\u7684\u961f\u5217\uff0c\u5c31\u7c97\u7565\u8ba1\u7b97\u4e86\u4e00\u4e0bf\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f\u6700\u591a\u6709\u591a\u5c11\u79cd\u60c5\u51b5\uff0c\u5927\u6982\u5c31\u662f15* 15* 4* 3^7\u3002\u4e3a\u4ec0\u4e48\u662f3^7*4\u800c\u4e0d\u662f65535\u5462\uff0c\u53ef\u4ee5\u60f3\u4e00\u4e0b\uff0c\u5982\u679c\u524d\u4e00\u8282\u786e\u5b9a\u4e0b\u6765\uff0c\u90a3\u4e48\u5f53\u524d\u8fd9\u4e00\u8282\u5176\u5b9e\u53ea\u67093\u79cd\u9009\u62e9\u800c\u975e4\u79cd\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u8282\u7701\u7a7a\u95f4\u3002\n\n\u5f53\u7136\uff0c\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u5f00\u7684\u66f4\u5c0f\uff0c\u8fd8\u6709\u4e00\u4e9b\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u3002\u4f46\u662f\u7531\u4e8e\u672c\u849f\u84bb\u5b9e\u5728\u6c34\u5e73\u6709\u9650\uff0c\u5c31\u53ea\u80fd\u538b\u5230\u8fd9\u4e86\u3002\n\n\u4e0a\u4ee3\u7801~\uff08\u7edd\u5bf9\u539f\u521b\uff09\n\n```\n#include <cstdio>\nusing namespace std;\nstruct node\n{int x,y,body,step;}f[1968301];\nbool vi[16][16][65536];\nint m,n,stx,sty,ans=-1,dis,q=1;\nint mx[4]={-1,1,0,0},my[4]={0,0,-1,1};\nchar a[16][16];\nvoid read(int p)\n{\tchar x=' ';\n\twhile(x=='\\n'||x=='\\r'||x==' ')\n\tx=getchar();\n\tfor(int i=1;i<=n;i++)\n\t{\ta[p][i]=x;\n\t\tif(x=='1')\n\t\t{\tf[1].x=p;f[1].y=i;}//\u8bb0\u5f55\u86c7\u5934\u4f4d\u7f6e\n\t\tif(x>='1'&&x<='9'&&x-'0'>dis)\n\t\tdis=x-'0';//\u8bb0\u5f55\u86c7\u7684\u957f\u5ea6\n\t\tx=getchar();\n\t}\n}\nvoid build()//\u8282\u6570\u4ece\u5c0f\u5230\u5927\u538b\u7f29\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u5341\u8fdb\u5236\n{\tint lastx=f[1].x,lasty=f[1].y,x,y;\n\tfor(int i=2;i<=dis;i++)\n\t{\tfor(int j=0;j<4;j++)\n\t\t{\tx=lastx+mx[j];\n\t\t\ty=lasty+my[j];\n\t\t\tif(a[x][y]=='0'+i)\n\t\t\t{\tf[1].body*=4;\n\t\t\t\tf[1].body+=j;\n\t\t\t\tlastx=x;lasty=y;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid update(int num)//\u6bcf\u6b21\u90fd\u8981\u66f4\u65b0\u86c7\u7684\u72b6\u6001\uff0c\u66f4\u65b0\u524d\u5199\u6e05\u9664\u4e4b\u524d\u7684\n{\tint x=f[num].x,y=f[num].y,p=f[num].body,z=q;\n\tint xx;\n\tfor(int i=1;i<=m;i++)\n\tfor(int j=1;j<=n;j++)\n\tif(a[i][j]>='1'&&a[i][j]<='9')\n\ta[i][j]='.';\n\tfor(int i=1;i<=dis;i++)\n\t{\ta[x][y]='0'+i;\n\t\tif(p&&z)\n\t\txx=p/z;\n\t\telse xx=0;\n\t\tx+=mx[xx];y+=my[xx];\n\t\tif(p&&z)\n\t\tp=p%z;\n\t\tif(z)\n\t\tz/=4;\n\t}\n}\nvoid output()//\u8c03\u8bd5\u7528\u7684\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002\u6bcf\u6b21\u8f93\u51fa\u4e00\u4e0b\u6574\u5f20\u5730\u56fe\uff0c\u975e\u5e38\u76f4\u89c2\n{\tfor(int i=1;i<=m;i++)\n\t{\tfor(int j=1;j<=n;j++)\n\t\tprintf(\"%c\",a[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\tprintf(\"\\n\");\n}\nvoid bfs()\n{\tint l=1,r=2,x,y,z;\n\tbuild();\n\tvi[f[1].x][f[1].y][f[1].body]=true;\n\twhile(l<r)\n\t{\tupdate(l);\n//\t\toutput();\n\t\tfor(int i=0;i<4;i++)\n\t\t{\tx=f[l].x+mx[i];\n\t\t\ty=f[l].y+my[i];\n\t\t\tif(x<1||x>m||y<1||y>n) continue;\n\t\t\tif(a[x][y]=='#') continue;\n\t\t\tif(a[x][y]>='1'&&a[x][y]<'0'+dis)\n\t\t\tcontinue; \n\t\t\tif(a[x][y]=='@')\n\t\t\t{\tans=f[l].step+1;return;}\n\t\t\tz=f[l].body/4;\n\t\t\tz+=(i^1)*q;//\u5982\u679c\u86c7\u5934\u5411\u4e0a\u8d70\uff0c2\u53f7\u5c31\u57281\u53f7\u7684\u4e0b\u9762\n        //\u4f9d\u6b64\u7c7b\u63a8\uff0c\u65b9\u5411\u90fd\u662f\u53cd\u7740\u7684\uff0c\u6240\u4ee5\u8981\u5f02\u6216\u4e00\u4e0b\n\t\t\tif(vi[x][y][z]) continue;\n\t\t\tvi[x][y][z]=true;\n\t\t\tf[r].x=x;f[r].y=y;\n\t\t\tf[r].step=f[l].step+1;\n\t\t\tf[r].body=z;\n\t\t\tr++;\n\t\t}\n\t\tl++;\n\t}\n}\nint main()\n{\tscanf(\"%d %d\",&m,&n);\n\tfor(int i=1;i<=m;i++)\n\tread(i);\n\tfor(int i=2;i<dis;i++)\n\tq*=4;\n   //q\u7684\u4f5c\u7528\u53ef\u4ee5\u7c7b\u6bd4\u5341\u8fdb\u5236\u7406\u89e3\u4e00\u4e0b\uff0c\u7531\u4e8e\u6211\u7684\u72b6\u6001\u538b\u7f29\u662f\u5e8f\u53f7\u4ece\u5c0f\u5230\u5927\uff0c\u800c\u6bcf\u6b21\u66f4\u65b0\u7684\u90fd\u662f\u6700\u5c0f\u76842\u53f7\uff0c\u6240\u4ee5\u9700\u8981\u4e58\u4e00\u4e0bq\n\tbfs();\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5A\u4e86\uff0c\u4f46\u662f\u611f\u89c9\u8fd9\u4e2a\u4ee3\u7801\u8dd1\u5f97\u6709\u70b9\u6162\uff0c\u4e8e\u662f\u7784\u4e86\u4e00\u4e0brk1\u7684\u4ee3\u7801\uff0c\u6bd4\u7740\u505a\u4e86\u4e00\u4e9b\u4f18\u5316\uff0c\u5927\u4f53\u601d\u8def\u4e0d\u53d8\uff0c\u65f6\u95f4\u5c31\u4ece4.09m\u53d8\u6210\u4e862.15m\uff0c\u7a7a\u95f4\u4e0d\u53d8\uff08%%%dalao)\n\n\u4f18\u5316\uff1a\n\n1\u3001\u521d\u59cb\u72b6\u6001\u7684build\u51fd\u6570\u6539\u4e3a\u9012\u5f52\u5f62\u5f0f\uff0c\u72b6\u6001\u7531\u539f\u6765\u7684\u5e8f\u53f7\u4ece\u5c0f\u5230\u5927\u53d8\u6210\u4e86\u4ece\u5927\u5230\u5c0f\u3002\u597d\u5904\u662f\u540e\u7eed\u4fee\u6539\u7b2c2\u8282\u7684\u503c\u7684\u65f6\u5019\u53ef\u4ee5\u5168\u90e8\u4f9d\u9760\u4f4d\u8fd0\u7b97\uff0c\u907f\u514d\u4e86*q\uff1b\u66f4\u65b0\u7684update\u4e5f\u53ef\u4ee5\u7b80\u6d01\u5f88\u591a\uff0c\u5b8c\u5168\u4f9d\u9760\u4f4d\u8fd0\u7b97\n\n2\u3001\u66f4\u65b0\u86c7\u7684\u72b6\u6001\u7684\u65f6\u5019\uff0c\u4e8b\u5b9e\u4e0a\u6bcf\u4e2a\u70b9\u4e0a\u662f\u86c7\u7684\u7b2c\u51e0\u8282\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u6709\u6ca1\u6709\u86c7\uff0c\u6240\u4ee5\u4e4b\u524d\u5b8c\u5168\u8fd8\u539f\u86c7\u8eab\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u53ea\u8981\u5f00\u4e00\u4e2abool\u6570\u7ec4\u8bb0\u5f55\u662f\u5426\u6709\u5c31\u884c\u4e86\u3002\u8fd9\u6837\u5224\u65ad\u8d77\u6765\u4f1a\u66f4\u52a0\u7b80\u5355\u3002\n\n\u4ee3\u78012.0\n\n```\n#include <cstdio>\nusing namespace std;\nstruct node\n{int x,y,body,step;}f[1968301];\nbool vi[16][16][65536],use[16][16];\nint m,n,stx,sty,ans=-1,dis,q;\nint mx[4]={-1,1,0,0},my[4]={0,0,-1,1};\nchar a[16][16];\nvoid read(int p)\n{\tchar x=' ';\n\twhile(x=='\\n'||x=='\\r'||x==' ')\n\tx=getchar();\n\tfor(int i=1;i<=n;i++)\n\t{\ta[p][i]=x;\n\t\tif(x=='1')\n\t\t{\tf[1].x=p;f[1].y=i;}\n\t\tif(x>='1'&&x<='9'&&x-'0'>dis)\n\t\tdis=x-'0';\n\t\tx=getchar();\n\t}\n}\nint build(int lx,int ly,char p)\n{\tint x,y;\n\tfor(int i=0;i<4;i++)\n\t{\tx=lx+mx[i];y=ly+my[i];\n\t\tif(x<1||x>m||y<1||y>n) continue;\n\t\tif(a[x][y]==p)\n\t\treturn (build(x,y,p+1)<<2)|i;\n\t}\n\treturn 0;\n}\nvoid update(int num,bool v)\n{\tint x=f[num].x,y=f[num].y,z=f[num].body,p;\n\tfor(int i=1;i<dis;i++)\n\t{\tuse[x][y]=v;\n\t\tp=z&3;z>>=2;\n\t\tx+=mx[p];y+=my[p];\n\t}\n}\nvoid output()\n{\tfor(int i=1;i<=m;i++)\n\t{\tfor(int j=1;j<=n;j++)\n\t\tprintf(\"%d\",use[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\tprintf(\"\\n\");\n}\nvoid bfs()\n{\tint l=1,r=2,x,y,z;\n\tf[1].body=build(f[1].x,f[1].y,'2');\n\tvi[f[1].x][f[1].y][f[1].body]=true;\n\twhile(l<r)\n\t{\tupdate(l,1);//\u66f4\u65b0\u86c7\u7684\u72b6\u6001\n//\t\toutput();\n\t\tfor(int i=0;i<4;i++)\n\t\t{\tx=f[l].x+mx[i];\n\t\t\ty=f[l].y+my[i];\n\t\t\tif(x<1||x>m||y<1||y>n) continue;\n\t\t\tif(a[x][y]=='#') continue;\n\t\t\tif(use[x][y]) continue; //\u65b0\u7684update\u5e26\u6765\u7684\u4fbf\u5229\n\t\t\tif(a[x][y]=='@')\n\t\t\t{\tans=f[l].step+1;return;}\n\t\t\tz=f[l].body<<2;\n\t\t\tz&=q;//\u5de6\u79fb\u540e\u4e8b\u5b9e\u4e0a\u86c7\u5c3e\u7684\u72b6\u6001\u5df2\u7ecf\u6ca1\u7528\u4e86\uff0c\u9700\u8981\u7528q\u53bb\u9664\n\t\t\tz|=i^1;\n\t\t\tif(vi[x][y][z]) continue;\n\t\t\tvi[x][y][z]=true;\n\t\t\tf[r].x=x;f[r].y=y;\n\t\t\tf[r].step=f[l].step+1;\n\t\t\tf[r].body=z;\n\t\t\tr++;\n\t\t}\n\t\tupdate(l,0);l++;//\u8fd8\u539f\u86c7\u7684\u72b6\u6001\n\t}\n}\nint main()\n{\tscanf(\"%d %d\",&m,&n);\n\tfor(int i=1;i<=m;i++)\n\tread(i);\n\tq=(1<<(2*dis-2))-1;//\u4e3a\u4e86\u53bb\u9664\u591a\u4f59\u7684\u72b6\u6001\n\tbfs();\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1~",
        "postTime": 1565357353,
        "uid": 125270,
        "name": "flyfree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF225D \u3010Snake\u3011"
    },
    {
        "content": "\u770b\u5230\u672c\u9898\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u975e\u5e38\u975e\u5e38\u5c0f\u3002\n\n\u4e8e\u662f\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u5728\u961f\u5217\u91cc\u5957\u5b57\u7b26\u4e32\uff0c\u8fdb\u884c\u5bbd\u641c\u3002\n\n\u5177\u4f53\u662f\u8fd9\u6837\u7684\uff1a\n\n\u4e00\u4e2a\u6570\u7ec4\u50a8\u5b58\u86c7\u7684\u5934\u5230\u5c3e\u7684\u6240\u6709\u5143\u7d20\uff0c\u5faa\u73af\u5148\u5199\u51fa\u6700\u521d\u72b6\u6001\u7684\u6570\u7ec4\uff0c\u8ba9\u521d\u59cb\u72b6\u6001\u8fdb\u961f\uff0c\u7136\u540e\u7528 map \u8bb0\u5f55\u8fd9\u79cd\u6570\u7ec4\u7684\u60c5\u51b5\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u5982\u679c\u51fa\u73b0\u8fc7\u5c31\u4e0d\u518d\u5ef6\u7533\u8fdb\u961f\u3002\n\n\u7136\u540e\u9898\u4e2d\u5199\u660e\u86c7\u4e0d\u80fd\u8d70\u5230\u81ea\u5df1\u7684\u8eab\u4f53\u4e0a\n\n\uff08\u6ce8\u610f\u5c3e\u5df4\u5904\u662f\u53ef\u4ee5\u8d70\u8fc7\u7684\uff0c\u56e0\u4e3a\u5728\u5934\u8d70\u8fc7\u53bb\u7684\u65f6\u5019\u5c3e\u5df4\u4e5f\u52a8\u4e86\uff09\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u86c7\u7684\u8eab\u4f53\u90e8\u5206\u5168\u90e8\u53d8\u4e3a\u969c\u788d\uff0c\u6700\u540e\u518d\u6062\u590d\u6210\u539f\u6765\u7684\u6837\u5b50\u3002\n\n\uff08\u6307 while \u5faa\u73af\u4e2d\u7684\u4e00\u6b21\u5faa\u73af\u5e72\u4e00\u904d\u8fd9\u4e2a\u4e8b\u60c5\uff09\n\n\uff08\u8fd9\u6837\u5199\u7684\u8bdd\u8fd8\u9700\u8981\u6ce8\u610f\u4e00\u5f00\u59cb\u7684\u5730\u56fe\u4e2d\u7684\u86c7\u9700\u8981\u53bb\u6389\u5168\u90e8\u53d8\u6210\u70b9\uff09\n\n\u5176\u5b83\u60c5\u51b5\uff0c\u5c31\u6309\u6b63\u5e38\u7684\u5bbd\u641c\u6a21\u677f\u5199\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\uff08\u56db\u5927\u8981\u7d20\uff1a \u961f\u5217\uff0c\u5224\u8fb9\u754c\uff0c\u5224\u662f\u5426\u8bbf\u95ee\u8fc7\uff0c\u5224\u662f\u5426\u662f\u7ec8\u70b9\u5750\u6807\uff09\n\n\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u4e2a\u5c0f\u70b9\uff1a \u51c6\u5907\u5c06\u5143\u7d20\u5165\u961f\u7684\u65f6\u5019\uff0c\u8981\u5c06\u539f\u6765\u50a8\u5b58\u86c7\u7684\u4f4d\u7f6e\u4fee\u6539\u4e00\u4e0b\uff0c\u5220\u6389\u6700\u540e\u4e00\u4f4d\uff0c\u7136\u540e\u5728\u7b2c\u4e00\u4f4d\u63d2\u5165\u76ee\u524d\u7684\u5750\u6807\u3002\n\n\u8fd9\u8fb9\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5199 int \u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5185\u5b58\u53ef\u80fd\u4f1a\u70b8\u3002\n\n\u770b\u5230\u6570\u636e\u8303\u56f4 $15*15 = 225$\n\n\u4e8e\u662f\u6211\u4eec\u7528 unsigned char \u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u5b58\u3002\n\n\u6700\u540e codeforces 2200 \u7684\u9898\u5c31\u88ab\u6c34\u5b8c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n// \u672c\u7a0b\u5e8f\u8fd8\u5199\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u538b\u4e00\u7ef4\u7684\u6570\u7ec4\u8fdb\u884c\u8282\u7701\u7a7a\u95f4\nint dx[] = {1,-1,0,0};\nint dy[] = {0,0,1,-1};\n//\u5bbd\u641c\u65b9\u5411\nchar a[100][100];\n//\u5730\u56fe\nint n,m;\nvector<unsigned char>snake;\n//\u5b58\u521d\u59cb\u7684\u86c7\u7684\u6240\u6709\u70b9\u7684\u4f4d\u7f6e\uff08\u6309\u987a\u5e8f1\u5230\u6700\u540e\uff09\nmap<vector<unsigned char>,bool>mp;\nvoid find_snake(int sx,int sy){//\u4e00\u5f00\u59cb\u7684\u627e\u86c7\n\tsnake.push_back(sx*16+sy);\n\tchar now = '1';\n\tint nx = sx,ny = sy;\n\twhile(1){\n\t\tbool ok =0;\n\t\tif(now == '9')break;\n\t\tfor(int i =0;i<4;i++){\n\t\t\tint x1 = nx+dx[i],y1 = ny+dy[i];\n\t\t\tif(a[x1][y1] == now+1){\n\t\t\t\ta[x1][y1] = '.';\n\t\t\t\tnow+=1;\n\t\t\t\tnx = x1,ny = y1;\n\t\t\t\tok = 1;\n\t\t\t\tsnake.push_back(x1*16+y1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}if(!ok)break;\n\t}\n}\nqueue<pair<vector<unsigned char>,int> >q;\ninline bool check(int x2,int y2){\n\tif(x2<1 or x2>n or y2<1 or y2>m or a[x2][y2] == '#')return false;\n\treturn true;\n}\nint bfs(){\n\tq.push(make_pair(snake,(int)0));\n\tmp[snake] = true;\n\twhile(!q.empty()){\n\t\tvector<unsigned char>e = q.front().first;\n\t\tif(a[(int)e[0]/16][(int)e[0]%16] == '@'){\n\t\t\treturn q.front().second;\n        //\u770b\u662f\u5426\u8bbf\u95ee\u5230\u7b54\u6848\n\t\t}\n\t\tvector<unsigned char>ee = e;\n\t\tfor(int i = 1;i<e.size()-1;i++){\n\t\t\ta[(int)e[i]/16][(int)e[i]%16] = '#';\t\n        //\u5c06\u86c7\u7684\u8eab\u4f53\u90e8\u5206\u8bbe\u7f6e\u4e3a\u65e0\u6cd5\u8bbf\u95ee\u533a\n        //\u5176\u4e2d\u5faa\u73af\u7684\u5f00\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\u4e0d\u5305\u542b\u86c7\u5934\u548c\u86c7\u5c3e\n\t\t}for(int i =0;i<4;i++){\n\t\t\tint x1 = (int)e[0]/16+dx[i],y1 = (int)e[0]%16+dy[i];\n\t\t\tee = e;\n\t\t\tee.pop_back();\n\t\t\tee.insert(ee.begin(),x1*16+y1);\n\t\t\tif(check(x1,y1) and !mp[ee]){\n\t\t\t\tmp[ee] = true;\n\t\t\t\tq.push(make_pair(ee,q.front().second+1));\t\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1;i<e.size()-1;i++){\n\t\t\ta[(int)e[i]/16][(int)e[i]%16] = '.';\n\t\t}\n\tq.pop();}\n\treturn -1;\n}//\u5bbd\u641c\nint main(){\n\tcin >> n >> m;\n\tint sx,sy;\n\tfor(int i =1;i<=n;i++){\n\t\tfor(int j =1;j<=m;j++){\n\t\t\tcin >> a[i][j];\n\t\t\tif(a[i][j] == '1'){\n\t\t\t\tsx = i,sy = j;\n\t\t\t}\n\t\t}\n\t}find_snake(sx,sy);\n\tcout << bfs() << endl;\n\treturn 0;\n}//\u7d2b\u9898\u505a\u5b8c\u4e86\uff01\uff01\uff01\n```\n\n\n\n\n",
        "postTime": 1653997573,
        "uid": 580036,
        "name": "Phantom2009",
        "ccfLevel": 7,
        "title": "\u5927\u5927\u7684\u6a21\u62df+\u6c34\u6c34\u7684\u5bbd\u641c"
    },
    {
        "content": "\u672c\u573a\u6bd4\u8d5b A~E \u7684\u9898\u89e3\u53ef\u4ee5\u67e5\u770b[\u6211\u7684blog](https://www.cnblogs.com/SkyRainWind/p/17062489.html)\u3002\n\nD\n\n\u8003\u8651\u86c7\u7684\u4e00\u6b21\u79fb\u52a8\u5982\u4f55\u8868\u793a\uff0c\u4f8b\u5982\uff1a\n\n```\n34.\n21.\n```\n\n\u8003\u8651\u5148\u628a\u86c7\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd +1\uff0c\u7136\u540e\u53bb\u6389\u6700\u672b\u5c3e\u7684\u4e00\u4e2a\u3002\u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e\u8eab\u4f53\u7684\u79fb\u52a8\u3002\n\n```\n4..\n32.\n```\n\n\u518d\u8003\u8651\u5934\u8be5\u5982\u4f55\u79fb\u52a8\uff1a\n\n```\n41. 4..\n32. 321\n```\n\n\u4e24\u79cd\u90fd\u662f\u53ef\u4ee5\u7684\u3002\n\n\uff08\u6ce8\u610f\u8fd9\u6837\u8fd8\u80fd\u7701\u53bb\u5224\u65ad\u5934\u548c\u5c3e\u521a\u597d\u5dee\u4e00\u683c\u4e5f\u662f\u80fd\u79fb\u52a8\u7684\u60c5\u51b5\u3002\uff09\n\n\u7136\u540e\u5c31\u662f\u666e\u901a\u7684 bfs\uff0c\u4f46\u662f\u8fd8\u9700\u8981\u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u8bbf\u95ee\u8fc7\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\n\n- \u5bf9\u6574\u4e2a\u5730\u56fe hash\u3002\u81ea\u7136\u6ea2\u51fa[\u53ef\u80fd\u4f1a\u88ab\u5361](https://codeforces.com/contest/225/submission/189733666)\uff0c\u666e\u901ahash\u53ef\u80fd[\u5e38\u6570\u8fc7\u5927](https://codeforces.com/contest/225/submission/189736788)\uff08\u6700\u5927\u70b9\u9700\u8981 4.4s,TLE\uff09\n- \u5bf9\u86c7 hash\uff08\u5c31\u662f\u8bb0\u4e00\u4e0b $1..9$ \u7684\u4f4d\u7f6e\u7136\u540ehash\uff09\uff0c\u6700\u5927\u70b9\u53ea\u9700\u8981\u7ea6 $2s$\u3002\n\n```cpp\n// by SkyRainWind\n#include <bits/stdc++.h>\n#define mpr make_pair\n#define debug() cerr<<\"Yoshino\\n\"\n#define rep(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)\n#define pii pair<int,int>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef unsigned long long ull;\n\nconst int inf = 1e9, INF = 0x3f3f3f3f, maxn = 17;\nconst int p = 998244353, p2 = 990804011;\n\nint n,m;\nchar s[maxn][maxn];\nstruct state{\n\tchar st[maxn][maxn];\n\tint cnt;\n\t\n\tull gethash(){\n\t\tull hs = 0;\n\t\tull hs2 = 0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\ths = hs*p + st[i][j],\n\t\t\t\ths2 = (hs2*p2 + st[i][j]);\n\t\treturn hs*127+hs2;\n\t}\n\t\n\tstate(){cnt=0;}\n}hajime;\n\nint dx[] = {-1,0,1,0};\nint dy[] = {0,1,0,-1};\nunordered_map<ull,int>vis;\nqueue<state>Q;\nint ans = -1, len = 0;\n\nint ind(int x,int y){return (x-1)*n+y;}\nint in(int x,int y){return x>=1 && x<=n && y>=1 && y<=m;} \null hsh(int *pp){\n\tull now=0;\n\tfor(int i=1;i<=len;i++)now=now*p+pp[i];\n\treturn now;\n}\n\nvoid move(state now){\n\tint tmp[12];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(now.st[i][j] >= '1' && now.st[i][j] <= '9'){\n\t\t\t\tnow.st[i][j] ++;\n\t\t\t\tif(now.st[i][j] < len + '1')tmp[now.st[i][j] - '0'] = ind(i, j);\n\t\t\t}\n\tint bx, by;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(now.st[i][j] == '2')\n\t\t\t\tbx = i, by = j;\n\t\t\tif(now.st[i][j] == len + '1')\n\t\t\t\tnow.st[i][j] = '.';\n\t\t}\n\t\n\tnow.cnt ++;\n\tfor(int i=0;i<4;i++){\n\t\tint fx = bx + dx[i], fy = by + dy[i];\n\t\tif(!in(fx, fy))continue;\n\t\tif(now.st[fx][fy] == '@'){\n\t\t\tans = now.cnt;\n\t\t\treturn ;\n\t\t}else if(now.st[fx][fy] == '.'){\n\t\t\ttmp[1] = ind(fx, fy);\n\t\t\tnow.st[fx][fy] = '1';\n\t\t\tull nowhs = hsh(tmp);\n\t\t\tif(!vis.count(nowhs)){\n\t\t\t\tvis[nowhs] = 1;\n//\t\t\t\tvis.insert(nowhs);\n\t\t\t\tQ.push(now);\n\t\t\t}\n\t\t\tnow.st[fx][fy] = '.';\n\t\t}\n\t}\n}\n\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\t\n\tfor(int i=1;i<=n;i++)scanf(\"%s\",hajime.st[i] + 1);\n\t\n\tint tmp[12];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(hajime.st[i][j] >= '1' && hajime.st[i][j] <= '9')\n\t\t\t\tlen = max(len, hajime.st[i][j] - '0'),\n\t\t\t\ttmp[hajime.st[i][j] - '0'] = ind(i, j);\n\thajime.cnt = 0;\n\tvis[hsh(tmp)] = 1;\n//\tvis.insert(hajime.gethash());\n\tQ.push(hajime);\n\t\n\twhile(!Q.empty()){\n\t\tstate now = Q.front(); Q.pop();\n\t\t\n\t\tmove(now);\n\t\tif(~ans)break;\n\t}\n\tcout<<ans;\n\n\treturn 0;\n}\n```",
        "postTime": 1674181738,
        "uid": 84042,
        "name": "SkyRainWind",
        "ccfLevel": 7,
        "title": "CF225D \u9898\u89e3"
    }
]