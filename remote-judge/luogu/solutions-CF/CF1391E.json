[
    {
        "content": "\u9996\u5148\u5bf9\u8fd9\u4e2a\u56fe\u6784\u9020 $\\text{DFS}$ \u6811\u3002\n\n\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n+ \u5982\u679c\u8fd9\u68f5\u6811\u7684\u6df1\u5ea6\u81f3\u5c11\u4e3a $\\lceil \\frac{n}{2}\\rceil$ \uff0c\u90a3\u4e48\u76f4\u63a5\u9009\u62e9\u8def\u5f84\u5373\u53ef\u3002\n+ \u5426\u5219\u5728\u6bcf\u4e00\u5c42\u4e2d\u4e0d\u65ad\u9009\u62e9\u70b9\u5bf9\uff0c\u4f7f\u5f97\u8fd9\u4e00\u5c42\u91cc\u6700\u591a\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u9009\u4e0a\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u6b63\u786e\u6027\uff1a\n\n\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u70b9\u5bf9 $a,b$ \u4e0e $c,d$ \uff0c$\\text{dep}_a=\\text{dep}_b$\uff0c$\\text{dep}_c=\\text{dep}_d$ \u3002\u4e0d\u59a8\u8bbe $\\text{dep}_a<\\text{dep}_c$ \u3002\u540c\u5c42\u7ed3\u70b9\u4e0d\u4f1a\u6709\u8fb9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u5c42\u7684\u7ed3\u70b9\uff0c\u53ea\u6709\u53ef\u80fd\u662f\u7236\u4eb2\u6216\u8005\u8fd4\u7956\u8fb9\u3002\n\n+ \u5982\u679c\u662f\u8fd4\u7956\u8fb9\uff0c\u7531\u4e8e $a,b$ \u6bcf\u4e2a\u70b9\u53ea\u80fd\u7531\u4e00\u4e2a\u8fd4\u7956\u8fb9\uff0c\u6240\u4ee5\u6700\u591a\u4e24\u6761\u8fb9\u3002\n+ \u5982\u679c\u662f\u7236\u4eb2\uff0c\u5e76\u4e14 $a,b$ \u6709\u4e0d\u540c\u7684\u7236\u4eb2\uff0c\u90a3\u4e48\u5fc5\u7136\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\u3002\n+ \u5982\u679c\u662f\u7236\u4eb2\uff0c\u5e76\u4e14 $a,b$ \u7684\u7236\u4eb2\u76f8\u540c\uff0c\u90a3\u4e48\u5fc5\u7136 $c,d$ \u4e2d\u4e00\u4e2a\u70b9\u6709\u4e24\u6761\u8fb9\uff0c\u53e6\u4e00\u4e2a\u70b9\u6ca1\u8fb9\u3002\n\n\u6240\u4ee5\u6700\u591a\u4e24\u6761\u8fb9\u3002\n\n\u53e6\u5916\u56e0\u4e3a\u4e0d\u8db3 $\\lceil\\frac{n}{2}\\rceil$ \u4e2a\u5c42\uff0c\u6240\u4ee5\u4e00\u5c42\u6700\u591a\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u9009\u4e0a\u3002\u6240\u4ee5\u70b9\u6570\u81f3\u5c11 $\\lceil\\frac{n}{2}\\rceil$ \u4e2a\u3002",
        "postTime": 1597048617,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1391E \u3010Pairs of Pairs\u3011"
    },
    {
        "content": "> \u9898\u76ee\u7b80\u8ff0\uff1a\n>\n>- \u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\u3002\n>- \u4f60\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u4e24\u4e2a\u4efb\u52a1\u4e2d\u7684\u4e00\u4e2a\uff1a\n>  - \u627e\u4e00\u6761\u957f\u5ea6\u81f3\u5c11\u4e3a $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \u7684\u7b80\u5355\u8def\u5f84\u3002\n>  - \u5c06\u81f3\u5c11 $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \u4e2a\u8282\u70b9\u4e24\u4e24\u5206\u7ec4\uff0c\u6ee1\u8db3\u4efb\u610f\u4e24\u7ec4\u7684\u56db\u4e2a\u8282\u70b9\u7684 **\u5bfc\u51fa\u5b50\u56fe** \u81f3\u591a\u6709\u4e24\u6761\u8fb9\u3002\n\n\u9898\u76ee\u5f3a\u8c03\uff1a**\u81f3\u5c11\u6709\u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u88ab\u5b8c\u6210**\u3002\n\n\u5bf9\u4e8e\u4efb\u52a1\u4e00\uff0c\u53ef\u4ee5\u60f3\u5230\u76f4\u63a5\u5728\u56fe\u4e0a $\\texttt{dfs}$\u3002\n\n\u6211\u4eec\u518d\u591a\u60f3\u4e00\u4e9b\uff0c\u5728\u56fe\u4e0a $\\texttt{dfs}$ \u7684\u641c\u7d22\u6811\u5c31\u662f\u4e00\u68f5\u751f\u6210\u6811\uff0c\u6211\u4eec\u79f0\u4e3a $\\texttt{dfs}$ \u6811\u3002\n\n\u90a3\u4e48\u80fd\u591f\u5b8c\u6210\u4efb\u52a1\u4e00\u7684 **\u552f\u4e00\u6761\u4ef6** \u5373\u4e3a\u8fd9\u68f5 $\\texttt{dfs}$ \u6811\u7684\u6700\u5927\u6df1\u5ea6\u4e0d\u5c0f\u4e8e $\\left\\lceil\\frac{n}{2}\\right\\rceil$\u3002\n\n\u7531\u4e8e\u9898\u76ee\u5f3a\u8c03\uff0c**\u81f3\u5c11\u6709\u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u88ab\u5b8c\u6210**\uff0c\u4e8e\u662f\u6211\u4eec\u731c\u60f3\u5f53\u8fd9\u68f5 $\\texttt{dfs}$ \u6811\u7684\u6700\u5927\u6df1\u5ea6\u5c0f\u4e8e $\\left\\lceil\\frac{n}{2}\\right\\rceil$  \u65f6\uff0c\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u4e00\u5b9a\u53ef\u4ee5\u88ab\u5b8c\u6210\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u65e0\u5411\u56fe\u4e0a\u7684 $\\texttt{dfs}$ \u6811\u4f3c\u4e4e\u548c $\\text{Tarjan}$ \u63d0\u51fa\u7684\u6709\u5411\u56fe\u4e2d\u7684 $\\texttt{dfs}$ \u6811\u5341\u5206\u76f8\u4f3c\u3002\u501f\u7528\u5176\u4e2d\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a **\u4e24\u4e2a\u70b9\u5728\u539f\u56fe\u4e0a\u6709\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u4e2a\u70b9\u5728 $\\texttt{dfs}$ \u6811\u4e0a\u662f\u7956\u5b59\u5173\u7cfb\u3002**\n\n\u8bc1\u660e\u4e5f\u5f88\u7b80\u5355\uff0c\u5047\u8bbe\u4e24\u4e2a\u4e0d\u5b58\u5728\u7956\u5b59\u5173\u7cfb\u7684\u70b9 $u,v$ \u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\uff0c\u4e0d\u59a8\u8bbe $u$ \u5148\u88ab\u8bbf\u95ee \uff0c\u90a3\u4e48\u5728\u8bbf\u95ee $u$ \u7684\u5b50\u6811\u65f6\uff0c\u4e00\u5b9a\u4f1a\u8bbf\u95ee\u5230 $v$ \uff0c\u90a3\u4e48 $v$ \u4e0e $fa_v$ \u7684\u8fb9\u5c31\u4e0d\u4f1a\u51fa\u73b0\u5728\u6811\u4e0a\uff0c\u5e76\u4e14\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u70b9\u5b58\u5728\u7956\u5b59\u5173\u7cfb\uff0c\u5f97\u8bc1\u3002\n\n\u6839\u636e\u4e0a\u8ff0\u6027\u8d28\uff0c**\u5982\u679c\u6211\u4eec\u53ea\u9009\u4e24\u4e2a\u6df1\u5ea6\u76f8\u540c\u7684\u70b9 $x_1,y_1$ \u4f5c\u4e3a\u4e00\u5bf9\uff0c\u90a3\u4e48\u51fa\u73b0\u7684\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u4f1a\u8d85\u8fc7 $2$ \u6761\u8fb9**\uff1a\n\n- \u4e0e $x_1,y_1$ \u6df1\u5ea6\u76f8\u540c\u7684\u4e24\u4e2a\u70b9 $x_2,y_2$\uff0c\u8fd9\u56db\u4e2a\u70b9\u7684\u5bfc\u51fa\u5b50\u56fe\u4e0a\u53ea\u6709 $0$ \u6761\u8fb9\u3002\n- \u4e0e $x_1,y_1$ \u6df1\u5ea6\u4e0d\u540c\u7684 **\u53e6\u4e24\u4e2a\u6df1\u5ea6\u76f8\u540c\u7684\u70b9** $x_2,y_2$\uff0c\u8fd9\u56db\u4e2a\u70b9\u7684\u5bfc\u51fa\u5b50\u56fe\u4e0a\u6700\u591a\u53ea\u4f1a\u6709 $2$ \u6761\u8fb9\u3002\n\n\u5f53\u8fd9\u68f5 $\\texttt{dfs}$ \u6811\u7684\u6700\u5927\u6df1\u5ea6\u5c0f\u4e8e $\\left\\lceil\\frac{n}{2}\\right\\rceil$\uff0c\u8fd9\u6837\u5206\u7ec4\u4f1a\u4e0d\u4f1a\u4e0d\u6ee1\u8db3\u5c06\u81f3\u5c11 $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \u4e2a\u70b9\u5206\u7ec4\u7684\u8981\u6c42\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u540c\u4e00\u6df1\u5ea6\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u70b9\u4e0d\u80fd\u88ab\u5206\u7ec4\uff0c\u800c\u5f53\u6700\u5927\u6df1\u5ea6\u5c0f\u4e8e $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \u65f6\uff0c\u81f3\u5c11\u4e5f\u80fd\u5c06 $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \u4e2a\u70b9\u5206\u7ec4\uff0c\u4e8e\u662f\u5f97\u8bc1\u3002\n\n```cpp\nint top=0,maxDep=0;\nint st[500005],d[500005];\nstd::vector<int> vec[500005],mp[500005];\ninline void dfs(int x) {\n\tmaxDep=max(maxDep,d[x]);\n\tvec[d[x]].push_back(x);\n\tfor(register int i=0;i<mp[x].size();++i) {\n\t\tint y=mp[x][i];\n\t\tif(d[y]) continue;\n\t\td[y]=d[x]+1;\n\t\tdfs(y);\n\t}\n}\nint main() {\n\tint T=read();\n\twhile(T--) {\n\t\tint n=read(),m=read();maxDep=1;\n\t\tfor(register int i=1;i<=m;++i) {\n\t\t\tint x=read(),y=read();\n\t\t\tmp[x].push_back(y);\n\t\t\tmp[y].push_back(x);\n\t\t}\n\t\td[1]=1;dfs(1);\n\t\tif(maxDep>(int)(n*1.00/2+0.5)) {\n\t\t\tprintf(\"PATH\\n\");\n\t\t\tfor(register int i=vec[maxDep][0],dep=maxDep;i!=1&&dep!=1;--dep) {\n\t\t\t\tfor(register int j=0;j<mp[i].size();++j) {\n\t\t\t\t\tif(d[mp[i][j]]==dep-1) {st[++top]=i;i=mp[i][j];break;} \n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",top+1);\n\t\t\tprintf(\"1 \");\n\t\t\tfor(;top>=1;--top) printf(\"%d \",st[top]);printf(\"\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"PAIRING\\n\");\n\t\t\tint k=0;\n\t\t\tfor(register int i=1;i<=maxDep;++i) k+=vec[i].size()/2;\n\t\t\tprintf(\"%d\\n\",k);\n\t\t\tfor(register int i=1;i<=maxDep;++i) {\n\t\t\t\tfor(register int j=0;j<vec[i].size()-1;j+=2) {\n\t\t\t\t\tprintf(\"%d %d\\n\",vec[i][j],vec[i][j+1]);\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\tfor(register int i=1;i<=n;++i) mp[i].clear(),d[i]=0;\n\t\tfor(register int i=1;i<=maxDep;++i) vec[i].clear();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597125087,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1391E \u3010Pairs of Pairs\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u8bf7\u4f60\u5b8c\u6210\u4ee5\u4e0b\u4e24\u4e2a\u5b50\u95ee\u9898\u7684\u4efb\u610f\u4e00\u4e2a\uff1a\n\n1.\u7ed9\u81f3\u5c11 $\\lceil \\frac{n}{2} \\rceil$ \u4e2a\u8282\u70b9\u4e24\u4e24\u914d\u5bf9\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u5bf9\u70b9\u7684\u5bfc\u51fa\u5b50\u56fe\u4e0d\u591a\u4e8e2\u6761\u8fb9\u3002\n\n2.\u627e\u4e00\u6761\u957f\u5ea6\u4e3a $\\lceil \\frac{n}{2} \\rceil$ \u7684\u7b80\u5355\u8def\u5f84\u3002\n\n\n### \u9898\u89e3\n\n\u53d1\u73b0\u4efb\u52a1 2 \u770b\u8d77\u6765\u6bd4\u8f83\u5bb9\u6613\uff1a\u6211\u4eec\u6784\u5efa\u51fa\u56fe\u7684 dfs \u6811\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u5982\u679c\u6df1\u5ea6 $\\geq\\lceil \\frac{n}{2}\\rceil$ \u7684\u70b9\u5b58\u5728\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u70b9\u5230\u6839\uff08\u6839\u76f4\u63a5\u94a6\u5b9a\u4e3a 1 \uff09\u7684\u8def\u5f84\u62ce\u51fa\u6765\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u8003\u8651\u4efb\u52a1 1 \u600e\u4e48\u505a\uff1a\u6211\u4eec\u628a\u540c\u4e00\u6df1\u5ea6\u7684\u70b9\u4e24\u4e24\u914d\u5bf9\uff0c\u56e0\u4e3a\u540c\u4e00\u6df1\u5ea6\u7684\u70b9\u4e4b\u95f4\u662f\u4e0d\u4f1a\u6709\u8fde\u8fb9\u7684\u3002\u7136\u540e\u7531\u4e8edfs\u6811\u6709\u4e2a\u6027\u8d28\u5c31\u662f\u975e\u6811\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\u5fc5\u7136\u662f\u7956\u5b59\u5173\u7cfb\uff0c\u6240\u4ee5\u8003\u8651\u4efb\u610f\u9009 $(a1,a2),(b1,b2)$ \u8fd9\u4e24\u5bf9\u70b9\uff0c\u5047\u8bbe $deep_{a1}<deep_{b1}$ \u90a3\u4e48\u4ed6\u4eec\u4e4b\u95f4\u7684\u8fb9\u53ea\u6709\u8fd9\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1. $a1,a2$ \u5206\u522b\u662f $b1,b2$ \u7684\u7236\u4eb2\uff0c\u90a3\u4e48\u5404\u8fde\u4e00\u6761\u4e00\u5171\u4e24\u6761\u8fb9\u3002\n\n2. $a1,a2$ \u6709\u4e00\u4e2a\u662f $b1,b2$ \u7684\u7236\u4eb2\uff0c\u90a3\u4e48\u4f5c\u4e3a\u7236\u4eb2\u7684\u70b9\u4f1a\u6709\u4e24\u6761\u8fb9\uff0c\u53e6\u4e00\u4e2a\u6ca1\u8fb9\u3002\n\n3. $a1,a2$ \u548c $b1,b2$ \u4e4b\u95f4\u662f\u975e\u6811\u8fb9\uff0c\u90a3\u4e48\u4e00\u5b9a\u5177\u6709\u7956\u5b59\u5173\u7cfb\uff0c\u6700\u591a\u53ea\u6709\u4e24\u6761\u8fb9\u3002\n\n\u6240\u4ee5\u80af\u5b9a\u662f\u7b26\u5408\u8981\u6c42\u7684\u3002\n\n### \u4ee3\u7801 \n\n```cpp\n#include <cstdio>\n#include <vector>\nconst int N = 1000005;\nint h[N], nxt[N << 1], adj[N << 1], n, m, T, t, u, v, fa[N], d[N], o1[N], o2[N], mxd, id;\nstd::vector<int> g[N];\ninline void add() { nxt[++t] = h[u], h[u] = t, adj[t] = v, nxt[++t] = h[v], h[v] = t, adj[t] = u; }\ninline void dfs(int x) {\n    g[d[x] = d[fa[x]] + 1].push_back(x);\n    if (d[x] >= mxd) mxd = d[x], id = x;\n    for (int i = h[x], j; i; i = nxt[i])\n        if (!d[j = adj[i]])\n            fa[j] = x, dfs(j);\n}\nint main() {\n    scanf(\"%d\", &T);\n    int i, j, co;\n    while (T--) {\n        scanf(\"%d%d\", &n, &m),co = mxd = id = t = 0;\n        for (i = 1; i <= n; ++i) d[i] = h[i] = fa[i] = 0, g[i].clear();\n        while (m--) scanf(\"%d%d\", &u, &v), add();\n        dfs(1);\n        for (i = 1; i <= mxd; ++i)\n            for (j = 0; j + 1 < g[i].size(); j += 2) \n\t\t\t\to1[++co] = g[i][j], o2[co] = g[i][j + 1];\n        if ((co << 1) >= (n + 1 >> 1)) {\n            puts(\"PAIRING\"), printf(\"%d\\n\", co);\n            for (i = 1; i <= co; ++i) printf(\"%d %d\\n\", o1[i], o2[i]);\n            continue;\n        }\n        puts(\"PATH\"),co = 0;\n        while (id) o1[++co] = id, id = fa[id];\n        printf(\"%d\\n\", co);\n        for (i = 1; i <= co; ++i) printf(\"%d \", o1[i]);\n        puts(\"\");\n    }\n    return 0;\n}",
        "postTime": 1597053673,
        "uid": 87724,
        "name": "\u58a8\u821e\u7075\u7eaf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1391E \u3010Pairs of Pairs\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u6240\u770b\u4e86\u9898\u89e3\u7684\u9898\u76ee\u3002~~\u770b\u5b8c\u9898\u89e3\u8fd8\u539a\u989c\u65e0\u803b\u5730\u5728vp\u7ed3\u675f\u4e4b\u524d\u5199\u4e86\u4ea4\u4e0a\u53bb~~\n\n> ### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1391E) & [CF\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/1391/problem/E)\n\n> \u7ed9\u5b9a\u4e00\u4e2a$n$\u4e2a\u70b9$m$\u6761\u8fb9\u7684\u8fde\u901a\u65e0\u5411\u56fe\u3002\u4f60\u9700\u8981\u505a\u4ee5\u4e0b\u4e24\u4ef6\u4e8b\u4e2d\u7684\u4efb\u610f\u4e00\u4ef6\uff1a\n\n>1. \u627e\u4e00\u6761\u957f\u5ea6\u81f3\u5c11\u4e3a$\\left\\lceil\\dfrac n2\\right\\rceil$\u7684\u7b80\u5355\u8def\u5f84\uff1b\n>1. \u5c06\u81f3\u5c11$\\left\\lceil\\dfrac n2\\right\\rceil$\u4e2a\u8282\u70b9\uff08\u8981\u6c42\u662f\u5076\u6570\u4e2a\uff09\u4e24\u4e24\u5206\u7ec4\uff0c\u6ee1\u8db3\u4efb\u610f\u4e24\u7ec4\u7684\u56db\u4e2a\u8282\u70b9\u7684\u5bfc\u51fa\u5b50\u56fe\u6700\u591a\u6709\u4e24\u6761\u8fb9\u3002\n\n>\u53ef\u4ee5\u8bc1\u660e\u81f3\u5c11\u6709\u4e00\u4ef6\u4e8b\u662f\u53ef\u4ee5\u505a\u7684\u3002\n\n>\u672c\u9898\u591a\u6d4b\u3002\n\n>$\\sum n\\in\\left[2,5\\times10^5\\right],\\sum m\\in\\left[1,10^6\\right]$\u3002\n\n\u65e0\u5411\u8fde\u901a\u56fe\u6709\u4e2a\u91cd\u8981\u7684\u4e1c\u897f\uff1aDFS\u6811\u3002\u5b83\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff1a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u8fb9\u4ec5\u5f53\u5b83\u4eec\u662f\u957f\u8f88\u4e0e\u665a\u8f88\u7684\u5173\u7cfb\u3002\u5f88\u597d\u8bc1\uff0c\u56e0\u4e3a\u82e5\u6709\u975e\u957f\u665a\u8f88\u5173\u7cfb\u7684\u70b9\u5bf9\u4e4b\u95f4\u6709\u8fb9\uff0c\u90a3\u4e48\u5f53DFS\u5230\u5176\u4e2d\u90a3\u4e2a\u65f6\u95f4\u6233\u8f83\u5c0f\u7684\u70b9\u65f6\uff0c\u6839\u636e\u6df1\u5ea6\u4f18\u5148\u4e00\u5b9a\u53ef\u4ee5\u8d70\u5230\u65f6\u95f4\u6233\u8f83\u5927\u7684\u90a3\u4e2a\u70b9\uff0c\u4ece\u800c\u4f7f\u5f97\u5b83\u4eec\u662f\u957f\u665a\u8f88\u5173\u7cfb\uff0c\u4e0e\u5047\u8bbe\u77db\u76fe\u3002\u8fd9\u4e0e\u6709\u5411\u56feDFS\u6811\u7684\u6a2a\u53c9\u8fb9\u7684\u6027\u8d28\u7c7b\u4f3c\u3002\n\n\u770b\u5230\u7b2c\u4e8c\u4ef6\u4e8b\u4e2d\u6709\u8981\u9650\u5236\u4e00\u4e9b\u8fb9\u4e0d\u80fd\u51fa\u73b0\u8fd9\u79cd\u611f\u89c9\uff0c\u4e0d\u96be\u60f3\u5230DFS\u6811\u7684\u8fd9\u4e2a\u6027\u8d28\u3002\uff08\u8fd9\u4e2a\u5927\u6982\u662fTarjan\u6c42DCC\u65f6\u8981\u7528\u5230\u7684\uff0c\u7136\u9e45\u6211\u8fd8\u4e0d\u4f1a\uff0c\u6240\u4ee5\u6ca1\u60f3\u5230\uff09\n\n\u6c42\u51fa\u4efb\u610fDFS\u6811\uff0c\u5982\u679c\u5b58\u5728\u6df1\u5ea6$\\geq\\left\\lceil\\dfrac n2\\right\\rceil$\u7684\u70b9\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u505a\u7b2c\u4e00\u4ef6\u4e8b\uff0c\u76f4\u63a5\u8f93\u51fa\u5c31\u884c\u4e86\u3002\u5426\u5219\uff0c\n\n\u6ce8\u610f\u5230DFS\u6811\u7684\u8fd9\u4e00\u6027\u8d28\uff0c\u5982\u4f55\u628a\u5b83\u7528\u8d77\u6765\u3002\u8003\u8651\u4e24\u5bf9\u6df1\u5ea6\u4e0d\u540c\u7684\u5144\u5f1f\u8282\u70b9\uff0c\u5144\u5f1f\u4e4b\u95f4\u663e\u7136\u4e0d\u4f1a\u6709\u8fb9\uff0c\u90a3\u4e48\u53ea\u6709\u5728\u4e0d\u540c\u5bf9\u4e2d\u7684\u8fb9\u3002\u8003\u8651\u4ece\u4e0b\u5f80\u4e0a\u8fde\uff0c\u7531\u4e8e\u53ea\u80fd\u8fde\u5411\u7956\u5148\uff0c\u800c\u4e0a\u9762\u4e24\u4e2a\u70b9\u662f\u5144\u5f1f\u53ef\u4ee5\u63a8\u51fa\u5bf9\u4e8e\u4e0b\u9762\u6bcf\u4e2a\u70b9\u6700\u591a\u53ea\u6709\u4e0a\u9762\u7684\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u5b83\u7684\u7956\u5148\uff0c\u4e8e\u662f\u6700\u591a\u4f1a\u6709\u4e24\u6761\u8fb9\u3002\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\u63a5\u4e0b\u6765\u540c\u5c42\u7684\u5c3d\u91cf\u5206\u7ec4\uff0c\u6bcf\u5c42\u6700\u591a\u7559\u4e0b\u4e00\u4e2a\u5355\u8eab\u3002\u7531\u4e8e\u6700\u5927\u6df1\u5ea6$<\\left\\lceil\\dfrac n2\\right\\rceil$\uff0c\u5355\u8eab\u7684\u4e5f\u662f\u5c0f\u4e8e\u8fd9\u4e48\u591a\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u88ab\u5206\u7ec4\u7684\u70b9\u7684\u6570\u91cf\u3002\n\n~~\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4e0b\u6b21\u9047\u5230\u8fd9\u6837\u7684\u667a\u5546\u9898\u80fd\u505a\u51fa\u6765\u54e6\uff08~~\n\n**\u591a\u6d4b`memset`\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002**\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\nconst int N=500000;\nint n,m;\nvector<int> nei[N+1];\nbool vis[N+1];\nint fa[N+1],dep[N+1];\nvoid dfs(int x=1){//\u6c42\u641c\u7d22\u6811 \n\tvis[x]=true;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(vis[y])continue;\n\t\tfa[y]=x;dep[y]=dep[x]+1;\n\t\tdfs(y);\n\t}\n}\nvector<int> buc[N+1];\nvoid mian(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)nei[i].clear(),buc[i].clear(),vis[i]=fa[i]=dep[i]=0;\n\twhile(m--){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tnei[x].pb(y);nei[y].pb(x);\n\t}\n\tdep[1]=1;\n\tdfs();\n\tfor(int i=1;i<=n;i++)\n\t\tif(dep[i]>=n+1>>1){//\u53ef\u4ee5\u8f93\u51fa\u7b80\u5355\u8def\u5f84\u4e86 \n\t\t\tputs(\"PATH\");\n\t\t\tprintf(\"%d\\n\",dep[i]);\n\t\t\twhile(i)printf(\"%d \",i),i=fa[i];\n\t\t\tputs(\"\");\n\t\t\treturn;\n\t\t}\n\t\telse buc[dep[i]].pb(i);\n\tputs(\"PAIRING\");//\u4e0d\u80fd\u8f93\u51fa\u7b80\u5355\u8def\u5f84\uff0c\u90a3\u4e48\u4e00\u5b9a\u80fd\u5206\u7ec4 \n\tint cnt=0;\n\tfor(int i=1;i<=n;i++)cnt+=buc[i].size()>>1;//\u7edf\u8ba1\u6570\u91cf \n\tprintf(\"%d\\n\",cnt);\n\tfor(int i=1;i<=n;i++){//\u679a\u4e3e\u5c42 \n\t\tfor(int j=0;j+1<buc[i].size();j+=2)printf(\"%d %d\\n\",buc[i][j],buc[i][j+1]);//\u540c\u5c42\u5206\u7ec4 \n\t}\n}\nint main(){\n\tint testnum;\n\tcin>>testnum;\n\twhile(testnum--)mian();\n\treturn 0;\n}\n```",
        "postTime": 1597049603,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 1391E - Pairs of Pairs"
    },
    {
        "content": "\u65f6\u9694\u8fd1\u4e24\u4e2a\u6708\u8fd8\u662f\u6765\u5199\u53d1\u9898\u89e3\uff0c\u6bd5\u7adf\u5f53\u65f6\u6211\u625b\u8fd9\u9053\u9898\u625b\u4e86\u6574\u573a\u6bd4\u8d5b\uff08\n\n\u8981\u60f3\u5230\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u5fc5\u987b\u5f97\u5bf9 dfs \u6811\u7684\u6027\u8d28\u6709\u5f88\u6df1\u7684\u5370\u8c61\uff08\u6211\u751a\u81f3\u6000\u7591\u51fa\u9898\u8005\u662f\u770b\u7740 dfs \u6811\u9020\u7684\u8fd9\u9053\u9898X\uff09\uff0c\u4e0d\u7136\u5c31\u5f88\u53ef\u80fd\u60f3\u6b6a\u4e86\uff08~~\u6216\u8005\u4ec5\u4ec5\u662f wtcl~~\uff09\n\n## \u89e3\u6790\n\n\u8bb2\u89e3\u6cd5\u524d\uff0c\u8fd9\u91cc\u5148\u4ecb\u7ecd\u4e0b dfs \u6811\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u53ca\u5176\u7b80\u8981\u8bc1\u660e\n\n### dfs \u6811\n\n\u4e3a\u4e86\u8bf4\u660e\u65b9\u4fbf\uff0c\u8fd9\u91cc\u5148\u5bf9\u79f0\u547c\u505a\u4e00\u4e9b\u7ea6\u5b9a\uff1a\n\n\uff08\u53e6\u5916\uff0c\u7531\u4e8e\u65e0\u5411\u56fe\u7684\u8fb9\u7684\u7279\u6027\uff0c\u4e0b\u9762\u5728\u63d0\u5230\u8fb9 $(u, v)$ \u65f6\uff0c\u4e5f\u6709\u53ef\u80fd\u540c\u65f6\u5728\u6307\u8fb9 $(v, u)$\uff09\n\n1. \u6811\u8fb9\uff1a\u662f dfs \u6811\u4e0a\u7684\u8fb9\u3002\u5982\u679c\u5728 dfs \u65f6\u901a\u8fc7\u8fb9 $(u, v)$ \u7b2c\u4e00\u6b21\u53d1\u73b0\u7ed3\u70b9 $v$\uff0c\u5219 $(u, v)$ \u662f\u4e00\u6761\u6811\u8fb9\n2. \u8fd4\u7956\u8fb9\uff08\u524d\u5411/\u540e\u5411\u8fb9\uff09\uff1a\u82e5\u8fb9 $(u, v)$ \u8fde\u63a5\u7684\u662f dfs \u6811\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\u4e0e\u5b83\u7684\u540e\u4ee3\uff0c\u5219 $(u, v)$ \u662f\u4e00\u6761\u8fd4\u7956\u8fb9\n3. \u6a2a\u5411\u8fb9\uff08\u6a2a\u53c9\u8fb9\uff09\uff1a\u6307\u5176\u4ed6\u6240\u6709\u7684\u8fb9\u3002\u6a2a\u5411\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u7ed3\u70b9\u4e0d\u5177\u6709\u7236\u4ee3\u540e\u4ee3\u5173\u7cfb\n4. \u672a\u904d\u5386/\u5df2\u904d\u5386/\u6b63\u5728\u904d\u5386\uff1a\u6307\u7ed3\u70b9\u7684\u72b6\u6001\u3002\u5176\u4e2d\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff0c\u6b63\u5728\u904d\u5386\u6307 dfs \u5230\u67d0\u4e2a\u7ed3\u70b9\uff0c\u4e14\u51fd\u6570\u5c1a\u672a\u4ece\u90a3\u4e2a\u7ed3\u70b9**\u8fd4\u56de**\uff08`return`\uff09\n\n\u7531 dfs \u7b97\u6cd5\u7684\u7279\u6027\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5b9a\u7406\n\n> \u5b9a\u7406 1. \u5728\u5bf9\u65e0\u5411\u56fe\u8fdb\u884c dfs \u65f6\uff0c\u6bcf\u6761\u8fb9\u8981\u4e48\u662f\u6811\u8fb9\uff0c\u8981\u4e48\u662f\u8fd4\u7956\u8fb9\n\n\u8bc1\u660e\uff1a\u8bbe $(u, v)$ \u662f\u65e0\u5411\u56fe\u7684\u4efb\u610f\u4e00\u6761\u8fb9\u3002\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u5047\u5b9a $u$ \u5148\u4e8e $v$ \u88ab\u904d\u5386\u5230\u3002\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff0c\u5728 $u$ \u7684 dfs \u51fd\u6570\u8fd4\u56de\u524d\uff0c\u7b97\u6cd5\u4e00\u5b9a\u4f1a\u904d\u5386 $(u, v)$ \u8fd9\u6761\u8fb9\uff0c\u81f3\u5c11\u4e5f\u4f1a\u4ece $u$ \u904d\u5386\u5230\u3002\u5982\u679c $(u, v)$ \u7b2c\u4e00\u6b21\u88ab\u904d\u5386\u5230\u7684\u65b9\u5411\u662f\u4ece $u$ \u5230 $v$\uff0c\u5219 $v$ \u5728\u6b64\u65f6\u662f\u5904\u4e8e\u672a\u904d\u5386\u7684\u72b6\u6001\uff0c\u5426\u5219\u8fb9\u4e00\u5b9a\u5df2\u7ecf\u4ece\u53cd\u65b9\u5411\u63a2\u7d22\u8fc7\u4e00\u6b21\u4e86\uff08\u7531\u4e8e $v$ \u540e\u4e8e $u$ \u88ab\u904d\u5386\uff0c\u5f53\u7a0b\u5e8f\u5904\u4e8e $u$ \u7684\u51fd\u6570\uff0c\u4e14 $v$ \u5df2\u88ab\u904d\u5386\u65f6\uff0c$v$ \u7684\u51fd\u6570\u4e00\u5b9a\u5df2\u7ecf\u8fd4\u56de\uff09\uff0c\u8fd9\u65f6\u8fb9 $(u, v)$ \u5c31\u4f1a\u6210\u4e3a\u4e00\u6761\u6811\u8fb9\u3002\u5982\u679c $(u, v)$ \u7b2c\u4e00\u6b21\u88ab\u904d\u5386\u5230\u7684\u65b9\u5411\u662f\u4ece $v$ \u5230 $u$\uff0c\u90a3\u4e48 $u$ \u6b64\u65f6\u662f\u5904\u4e8e\u6b63\u5728\u904d\u5386\u7684\u72b6\u6001\uff08\u7531\u4e8e $v$ \u540e\u4e8e $u$ \u88ab\u904d\u5386\uff0c\u5f53\u7a0b\u5e8f\u4ece $u$ \u7684\u51fd\u6570\u8fd4\u56de\uff0c\u4e5f\u4e00\u5b9a\u5df2\u7ecf\u4ece $v$ \u7684\u51fd\u6570\u8fd4\u56de\u4e86\uff09\uff0c\u8fd9\u65f6\u8fb9 $(u, v)$ \u5c31\u4f1a\u6210\u4e3a\u4e00\u6761\u8fd4\u7956\u8fb9\n\n### \u914d\u5bf9\u65b9\u6cd5\n\n\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u6784\u9020\u65b9\u6cd5\n\n\u5148\u5bf9\u539f\u56fe\u6784\u5efa dfs \u6811\u3002\u5982\u679c\u6811\u9ad8\u5927\u4e8e\u7b49\u4e8e $\\left\\lceil\\frac n 2\\right\\rceil$\uff0c\u90a3\u4e48\u76f4\u63a5\u6784\u9020\u8def\u5f84\u5373\u53ef\u3002\u5982\u679c\u6811\u9ad8\u5c0f\u4e8e $\\left\\lceil\\frac n 2\\right\\rceil$\uff0c\u6211\u4eec\u53ea\u53d6\u5728 dfs \u6811\u4e0a\u6df1\u5ea6\u76f8\u540c\u7684\u7ed3\u70b9\u914d\u5bf9\uff0c\u5e76\u5c3d\u53ef\u80fd\u5730\u8fd9\u6837\u505a\uff0c\u5219\u5728\u6bcf\u5c42\u6211\u4eec\u81f3\u591a\u53ea\u4f1a\u7559\u4e0b $1$ \u4e2a\u7ed3\u70b9\u6ca1\u88ab\u914d\u5bf9\uff1b\u7531\u4e8e\u6811\u9ad8\u5c0f\u4e8e $\\left\\lceil\\frac n 2\\right\\rceil$\uff0c\u6ca1\u88ab\u914d\u5bf9\u7684\u7ed3\u70b9\u4e5f\u4e0d\u4f1a\u8d85\u8fc7 $\\left\\lceil\\frac n 2\\right\\rceil$\uff0c\u6240\u4ee5\u914d\u5bf9\u65b9\u6848\u7684\u914d\u5bf9\u6570\u76ee\u4e00\u5b9a\u662f\u5408\u6cd5\u7684\n\n\u73b0\u5728\u53ea\u9700\u518d\u8bc1\u660e\u914d\u5bf9\u65b9\u6848\u7684\u914d\u5bf9\u4e4b\u95f4\u7684\u5bfc\u51fa\u5b50\u56fe\uff08\u8c8c\u4f3c\u9898\u76ee\u4e2d\u662f\u8fd9\u4e48\u79f0\u547c\u7684...\u5177\u4f53\u5b9a\u4e49\u53ef\u89c1\u9898\u9762\u539f\u6587\uff09\u5408\u6cd5\u5373\u53ef\u3002\u8003\u8651\u4e24\u4e2a\u914d\u5bf9 $(a, b), (c, d)$\uff0c\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u5047\u5b9a $a, b$ \u7684\u6df1\u5ea6\u5c0f\u4e8e\u7b49\u4e8e $c, d$\u3002\u5982\u679c $a, b$ \u7684\u6df1\u5ea6\u7b49\u4e8e $c, d$\uff0c\u7531\u4e8e\u5bf9\u65e0\u5411\u56fe\u8fdb\u884c dfs \u65f6\u4e0d\u53ef\u80fd\u51fa\u73b0\u6a2a\u5411\u8fb9\uff0c\u8fd9\u4e24\u4e2a\u914d\u5bf9\u7684\u5bfc\u51fa\u5b50\u56fe\u5b9e\u9645\u4e0a\u662f\u6ca1\u6709\u8fb9\u7684\u3002\u5982\u679c $a, b$ \u7684\u6df1\u5ea6\u5c0f\u4e8e $c, d$\uff0c\u5219\u5bf9\u4e8e $c$ \u548c $a, b$\uff0c$c$ \u53ea\u80fd\u548c $a, b$ \u7684\u5176\u4e2d\u4e00\u4e2a\u5b58\u5728\u8fb9\uff0c\u56e0\u4e3a\u65e0\u8bba\u8fd9\u6761\u8fb9\u662f\u6811\u8fb9\u8fd8\u662f\u6a2a\u5411\u8fb9\uff0c\u90fd\u8868\u660e\u4e86 $a$ \u6216 $b$ \u662f $c$ \u7684\u7236\u4ee3\uff0c\u800c\u4e00\u4e2a\u7ed3\u70b9\u7684\u4e24\u4e2a\u4e0d\u540c\u7684\u7236\u4ee3\u7ed3\u70b9\u4e4b\u95f4\uff0c\u4e5f\u4e00\u5b9a\u5b58\u5728\u7236\u4ee3\u540e\u4ee3\u5173\u7cfb\uff08\u67d0\u4e2a\u7ed3\u70b9\u7684\u6240\u6709\u7236\u4ee3\u7ed3\u70b9\u5c31\u76f8\u5f53\u4e8e\u8be5\u7ed3\u70b9\u5230\u6839\u7684\u4e00\u6761\u94fe\uff09\uff0c\u663e\u7136 $a, b$ \u4e4b\u95f4\u4e0d\u80fd\u6709\u7236\u4ee3\u540e\u4ee3\u5173\u7cfb\uff1b\u5bf9\u4e8e $d$ \u548c $a, b$\uff0c\u8fd9\u4e5f\u662f\u76f8\u540c\u7684\n\n\u4e8e\u662f\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u4e0d\u540c\u914d\u5bf9\u7684\u5bfc\u51fa\u5b50\u56fe\u81f3\u591a\u5b58\u5728\u4e24\u6761\u8fb9\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <bitset>\n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"Ofast\",\"-funroll-loops\",\"-fdelete-null-pointer-checks\")\n#pragma GCC target(\"ssse3\",\"sse3\",\"sse2\",\"sse\",\"avx2\",\"avx\")\nusing std::vector;\nusing std::bitset;\n\nconst int MAXN =5e5+50, MAXM =2e6+50;\n\n/*------------------------------Dfs------------------------------*/\n\nvector<int> E[MAXN];\n\ninline void addedge(int u, int v){ E[u].push_back(v); }\n\nint lim;\nbitset<MAXN> vis;\nint f[MAXN];\nvector<int> out[MAXN];\n\nvoid dfs(int u, int dep, int fa){\n\tf[u] =fa;\n\tout[dep].push_back(u);\n\tvis[u] =1;\n\tif(dep == lim)\n\t\treturn;\n\tfor(int i =0; i < (int)E[u].size(); ++i){\n\t\tif(!vis[E[u][i]])\n\t\t\tdfs(E[u][i], dep+1, u);\n\t}\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; register char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nint main(){\n\tfor(int t =0, T =read(); t < T; ++t){\n\t\tint n =read(), m =read();\n\t\tfor(int i =0; i < m; ++i){\n\t\t\tint u =read(), v =read();\n\t\t\taddedge(u, v);\n\t\t\taddedge(v, u);\n\t\t}\n\t\tlim =(n+1)>>1;\n\t\tdfs(1, 1, 0);\n\t\tif((int)out[lim].size() != 0){\n\t\t\tputs(\"PATH\");\n\t\t\tprintf(\"%d\\n\", lim);\n\t\t\tfor(int u =out[lim][0]; u; u =f[u])\n\t\t\t\tprintf(\"%d \", u);\n\t\t\tputchar('\\n');\n\t\t}\n\t\telse{\n\t\t\tputs(\"PAIRING\");\n\t\t\tint k =0;\n\t\t\tfor(int i =0; i < lim; ++i)\n\t\t\t\tk +=out[i].size()>>1;\n\t\t\tprintf(\"%d\\n\", k);\n\t\t\tfor(int i =0; i < lim; ++i)\n\t\t\t\tfor(int j =1; j < (int)out[i].size(); j +=2)\n\t\t\t\t\tprintf(\"%d %d\\n\", out[i][j-1], out[i][j]);\n\t\t}\n\t\tfor(int i =1; i <= n; ++i)\n\t\t\tout[i].clear(), E[i].clear();\n\t\tvis.reset();\n\t}\n}\n```",
        "postTime": 1600218166,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1391E \u3010Pairs of Pairs\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9053\u9898\u80af\u5b9a\u8981\u5efa dfs tree\uff0c\u8fd9\u9898\u8ddf CF1325F \u6bd4\u8f83\u50cf\u3002\n\n\u9996\u5148\u627e\u5230\u957f\u5ea6\u4e3a $\\left\\lceil\\dfrac{n}{2}\\right\\rceil$ \u7684\u8def\u5f84\u7b80\u5355\uff08\u8fd9\u91cc\u7684\u957f\u5ea6\u6307\u70b9\u7684\u4e2a\u6570\uff09\uff0c\u5982\u679c\u6811\u7684\u6df1\u5ea6\uff08\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a $1$\uff09\u4e0d\u5c11\u4e8e $\\left\\lceil\\dfrac{n}{2}\\right\\rceil$\uff0c\u8bf4\u660e\u4e00\u5b9a\u80fd\u627e\u5230\u3002\n\n\u5426\u5219\u7684\u8bdd\uff0c\u6211\u4eec\u4e5f\u4e00\u5b9a\u80fd\u627e\u5230 $\\left\\lceil\\dfrac{n}{4}\\right\\rceil$ \u4e2a\u70b9\u5bf9\uff0c\u7531\u4e8e dfs tree \u6ca1\u6709\u6a2a\u53c9\u8fb9\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a dfs tree \u7684\u6811\u8fb9\u8fd8\u4e0d\u662f\u4e00\u6761\u94fe\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u9009\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u914d\u5bf9\u3002\u7531\u4e8e\u4f60\u627e\u4e0d\u5230\u957f\u5ea6\u4e3a $\\left\\lceil\\dfrac{n}{2}\\right\\rceil$ \u7684\u8def\u5f84\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u5b9a\u4f1a\u5269\u4e0b\u81f3\u5c11 $\\left\\lceil\\dfrac{n}{2}\\right\\rceil$ \u4e2a\u70b9\uff0c\u52a0\u4e0a\u94fe\u4e0a\u7684\u53f6\u5b50\u8282\u70b9\u4e5f\u53ef\u4ee5\u8fdb\u884c\u914d\u5bf9\uff0c\u6240\u4ee5\u6709 $(\\left\\lceil\\dfrac{n}{2}\\right\\rceil+1)$ \u4e2a\u70b9\u4f9b\u4f60\u9009\u62e9\uff0c\u663e\u7136\u8fd9\u4e2a\u4e00\u5b9a\u80fd\u9009\u62e9\u51fa\u6765\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u5bf9\u4e4b\u95f4\u6ca1\u6709\u8fb9\uff0c\u70b9\u5bf9\u4e2d\u7684\u70b9\u6784\u4e0d\u6210\u7956\u5b59\u5173\u7cfb\uff0c\u6240\u4ee5\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5148\u914d\u6210\u7684\u70b9\u5bf9\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u53ea\u4f1a\u8fde\u5411\u540e\u914d\u6210\u7684\u70b9\u5bf9\u7684\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u6700\u591a\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u4e24\u4e2a\u70b9\u5bf9\u7684\u5bfc\u51fa\u5b50\u56fe\u6700\u591a\u4e24\u6761\u8fb9\u3002\n# AC code\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\nvector<int> edge[500005];\nint fa[500005],dis[500005],in[500005],dep;\nbool vis[500005];\nvoid dfs(int x){\n\tdis[x]=++dep;\n\tvis[x]=1;\n\tfor(int i=0;i<edge[x].size();i++){\n\t\tif(!vis[edge[x][i]]) in[x]++,dfs(edge[x][i]),fa[edge[x][i]]=x;\n\t}\n\tdep--;\n}\nvoid solve(){\n\tint n,m,i;scanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++) vis[i]=in[i]=0,edge[i].clear();\n\twhile(m--){\n\t\tint u,v;scanf(\"%d%d\",&u,&v);\n\t\tedge[u].emplace_back(v),edge[v].emplace_back(u);\n\t}\n\tdfs(1);\n\tint rt=1;\n\tfor(i=2;i<=n;i++) if(dis[rt]<dis[i]) rt=i;\n\tif(dis[rt]>=n+1>>1){\n\t\tputs(\"PATH\");\n\t\tprintf(\"%d\\n\",dis[rt]);\n\t\tfor(i=rt;i;i=fa[i]) printf(\"%d \",i);puts(\"\");\n\t\treturn ;\n\t}\n\tputs(\"PAIRING\");\n\tint k=n+3>>2;\n\tprintf(\"%d\\n\",k);\n\tqueue<int> q;\n\tfor(i=1;i<=n;i++){\n\t\tif(!in[i]) q.push(i);\n\t}\n\tfor(i=1;i<=k;i++){\n\t\tint f1=q.front();\n\t\tq.pop();\n\t\tin[fa[f1]]--;\n\t\tif(!in[fa[f1]]) q.push(fa[f1]);\n\t\tint f2=q.front();\n\t\tq.pop();\n\t\tin[fa[f2]]--;\n\t\tif(!in[fa[f2]]) q.push(fa[f2]);\n\t\tprintf(\"%d %d\\n\",f1,f2);\n\t}\n}\nint main(){\n\tint t;scanf(\"%d\",&t);\n\twhile(t--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1633019158,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1391E"
    }
]