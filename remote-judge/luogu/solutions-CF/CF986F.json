[
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n\n- **Pollard-Rho \u7b97\u6cd5**\n\n> \u4e00\u79cd\u53ef\u4ee5\u5feb\u901f\u5206\u89e3\u8d28\u56e0\u6570\u7684\u7b97\u6cd5\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u672c\u9898\u5982\u679c\u5199\u5f97\u597d\u53ef\u4ee5\u7528\u66b4\u529b\u5206\u89e3\u8fc7\u3002\n\n- [**P3403 \u8df3\u697c\u673a**](https://www.luogu.com.cn/problem/P3403)\u7684**\u540c\u4f59\u6700\u77ed\u8def**\u601d\u60f3\n\n\n### \u4e3b\u8981\u601d\u8def\n\n#### 1.\u8d28\u56e0\u6570\u5206\u89e3 \n\n\u9898\u76ee\u95ee $ n $ \u80fd\u5426\u7531 $ k $ \u7684\u56e0\u5b50\u6c42\u548c\u5f97\u5230\u3002\u800c $ k $ \u7684\u56e0\u5b50\u663e\u7136\u662f\u53ef\u4ee5\u901a\u8fc7 $ k $ \u7684\u8d28\u56e0\u6570\u7ec4\u5408\u6c42\u548c\u5f97\u5230\u7684\uff0c\u53ef\u4ee5\u611f\u6027\u7406\u89e3\uff0c\u4e0d\u518d\u8bc1\u660e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5148\u5c06 $ k $ \u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\u3002\n\n$$ k=\\prod_{i=1}^{Q}p_{i}^{c_{i}} $$\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe $ p_i<p_{i+1}(1 \\leq i < k) $\u3002\n\n#### 2.\u5206\u7c7b\u8ba8\u8bba\n\n\u9996\u5148\uff0c\u82e5 $ k=1 $\uff0c\u5219 $ k $ \u6ca1\u6709\u8d28\u56e0\u6570\uff0c\u663e\u7136\u4e0d\u53ef\u5206\u3002\n\n\u5bf9\u4e8e $ k \\geq 2 $\uff0c\u89c2\u5bdf\u5230 $ k \\leq 10^{15} $\uff0c\u90a3\u4e48\u6709 $ 1 \\leq \\sqrt[3]{k}\\leq 10^{5} $\u3002\n\n\u5bf9 $ k $ \u4e2d\u4e0d\u540c\u8d28\u56e0\u6570\u7684\u4e2a\u6570 $ Q $ \u8fdb\u884c\u5206\u7c7b\uff1a\n\n- $ Q=1 $\n\n\u6b64\u65f6 $ k $ \u4e3a\u7d20\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u662f $ [k \\mid n] $\u3002\n\n- $ Q=2 $\n\n\u6b64\u65f6 $ k $ \u53ef\u4ee5\u5199\u4f5c\u5982\u4e0b\u5f62\u5f0f\uff1a\n\n$$ k=a^{c_1}b^{c_2} $$\n\n\u76f4\u63a5\u8003\u8651\u4e3a\u7528 $ a,b $ \u4e24\u4e2a\u6570\u7ec4\u5408\u5f97\u5230 $ n $\u3002\u5373\uff1a\n\n$$ ax+by=n $$\n\n\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u5373\u662f**\u8be5\u4e8c\u5143\u4e00\u6b21\u4e0d\u5b9a\u65b9\u7a0b\u662f\u5426\u6709\u975e\u8d1f\u6574\u6570\u89e3**\u3002\n\n- $ Q \\geq 3 $\n\n\u56e0\u4e3a $ 1 \\leq \\sqrt[3]{k}\\leq 10^{5} $\uff0c\u4e14\u6211\u4eec\u89c4\u5b9a\u4e86 $ p_i<p_{i+1}(1 \\leq i < k) $\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u6709 $ 1 \\leq p_{1} \\leq 10^{5} $\u3002\n\n\u4eff\u7167[**P3403 \u8df3\u697c\u673a**](https://www.luogu.com.cn/problem/P3403)\u7684\u601d\u8def\uff0c\u5148\u4e0d\u4f7f\u7528 $ p_{1} $\uff0c\u7528\u5176\u5b83\u6570\u5728\u6a21 $ p_{1} $ \u7684\u5269\u4f59\u7cfb\u4e0b**\u5c3d\u53ef\u80fd\u51cf\u5c11\u603b\u548c**\uff0c\u6700\u540e\u7528 $ p_{1} $ \u8865\u5168\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u6570\u7ec4 $ dst_i $ \u8868\u793a\uff1a\u7531\u5f53\u524d $ k $ \u7684\u8d28\u56e0\u5b50\u7ec4\u5408\u51fa\u7684**\u6700\u5c0f\u7684**\u6a21 $ p_{1} $ \u4e3a $ i $ \u7684\u6570\u3002\n\n\u7531\u6b64\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u5305\u542b $ p_{1} $ \u4e2a\u8282\u70b9\u7684\u56fe\uff0c\u7f16\u53f7\u4ece $ 0 $ \u81f3 $ p_{1}-1 $\uff0c\u7b2c $ i $ \u53f7\u70b9\u7684\u72b6\u6001\u5373\u4e3a\u6a21 $ p_{1} $ \u4e3a $ i $ \u3002\n\n\u800c\u5bf9\u4e8e $ j\\geq 2 $\uff0c\u4ece $ i(0 \\leq i < p_{1}) $ \u53f7\u70b9\u5411 $ (i+p_{j}) \\bmod p_{1} $ \u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $ p_{j} $ \u7684\u8fb9\uff0c\u7136\u540e\u8dd1\u666e\u901a\u6700\u77ed\u8def\u5373\u53ef\u3002$ Q $ \u6700\u5927\u5927\u6982\u662f $ 13 $\uff0c\u590d\u6742\u5ea6\u4e0d\u4f1a\u70b8\u3002\n\n\u7b54\u6848\u5373\u4e3a $ [dst_{(n \\bmod p_{1})}\\leq n] $\u3002\n\n**\u6ce8\u610f\uff1a\u9898\u610f\u4e2d\u8bf4\u660e\u4e0d\u540c\u7684 $ k $ \u53ea\u6709 $ 50 $ \u4e2a\uff0c\u9700\u8981\u5bf9\u540c\u4e00\u4e2a $ k $ \u7684\u8be2\u95ee\u7edf\u4e00\u5904\u7406\u3002**\n\n#### 3.\u5b9e\u73b0\u7ec6\u8282\n\n\u603b\u7ed3\u4e86\u4e24\u70b9\u6211\u5728\u5b9e\u73b0\u4e2d\u51fa\u73b0\u7684\u95ee\u9898\uff1a\n\n- \u6784\u5efa\u56fe\u7684\u65f6\u5019\u7f16\u53f7\u4e3a $ 0 $ \u81f3 $ p_{1}-1 $\uff0c\u6e05\u7a7a\u65f6\u4e0d\u8981\u5fd8\u8bb0\u6e05\u7f16\u53f7 $ 0 $ \u4e0a\u7684\u503c\u3002\n\n- \u7528\u5230\u4e58\u6cd5\u7684\u65f6\u5019\u6700\u597d\u4f7f\u7528 ```__int128``` \u6216\u8005\u5feb\u901f\u4e58\uff0c\u4ee5\u9632\u6ea2\u51fa\u3002\n\n- \u66f4\u591a\u7684\u5c31\u770b\u4ee3\u7801\u5427\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n#define int ll\n#define ibig __int128\nconst int N=500005;\nstruct Node{int n,k,Ans,id;}ask[N];\nmap< int,vector<Node> > mp;\nint power(int c,int p,int mod)\n{\n\tif(!p) return 1;\n\tint p2=power(c,p>>1,mod);\n\tif(p&1) return (ibig)p2*p2%mod*c%mod;\n\telse return (ibig)p2*p2%mod;\n}\nnamespace mr{\n\tint ori[]={0,2,3,5,7,11,13,17,19,23,29,31,37};\n\tconst int tot=12;\n\tbool check(const int bas,int p)\n\t{\n\t\tif(power(bas,p-1,p)!=1) return false;\n\t\tint d=p-1;\n\t\twhile(d%2==0)\n\t\t{\n\t\t\td/=2;\n\t\t\tif(power(bas,d,p)==p-1) return true;\n\t\t\tif(power(bas,d,p)!=1) return false;\n\t\t}\n\t\treturn true;\n\t} \n\tbool isprime(int p)\n\t{\n\t\tif(p<=1) return false;\n\t\tfor(int i=1;i<=tot;i++) if(p==ori[i]) return true;\n\t\tfor(int i=1;i<=tot;i++) if(!check(ori[i],p)) return false;\n\t\treturn true;\n\t}\n}\nnamespace p_rho{\n\tint f(int x,int c,int p){return ((ibig)x*x+c)%p;}\n\tint pr(int p)\n\t{\n\t\tint a1=0,a2=0,c=rand()%(p-1)+1,d;\n\t\tfor(int len=1,total=1;;len<<=1,a1=a2,total=1)\n\t\t{\n\t\t\tfor(int step=1;step<=len;step++)\n\t\t\t{\n\t\t\t\ta2=f(a2,c,p);\n\t\t\t\ttotal=(ibig)total*abs(a2-a1)%p;\n\t\t\t\tif(total%127==0)\n\t\t\t\t{\n\t\t\t\t\tif((d=__gcd(p,total))>1) return d;\n\t\t\t\t} \n\t\t\t}\n\t\t\tif((d=__gcd(p,total))>1) return d;\n\t\t}\n\t\treturn p;\n\t}\n\tvoid split(int p,map<int,bool> &mp)\n\t{\n\t\tif(p<2) return;\n\t\tif(mr::isprime(p)) return void(mp[p]=true);\n\t\tint d=p;\n\t\twhile(d==p) d=pr(d);\n\t\twhile(p%d==0) p/=d;\n\t\tsplit(d,mp),split(p,mp);\n\t}\n\tvector<int> divide(int n)\n\t{\n\t\tmap<int,bool> d;\n\t\tvector<int> rec; \n\t\tsplit(n,d);\n\t\tfor(map<int,bool>::iterator it=d.begin();it!=d.end();++it)\n\t\t\trec.push_back(it->first); \n\t\treturn rec;\n\t}\n}\n\nvoid re0(int k){for(Node pac:mp[k]) ask[pac.id].Ans=false;}\n\nvoid re1(int k){for(Node pac:mp[k]) ask[pac.id].Ans=(pac.n%k==0);}\n\nint exgcd(int a,int &x,int b,int &y)\n{\n\tif(!b) return x=1,y=0,a;\n\tint d=exgcd(b,y,a%b,x);\n\ty-=a/b*x;\n\treturn d;\n}\nvoid re2(int a,int b,int k)\n{\n\tfor(Node pac:mp[k])\n\t{\n\t\tint c=pac.n;\n\t\task[pac.id].Ans=((ibig)b*((ibig)c*power(b,a-2,a)%a)<=(ibig)c);\n\t}\n}\n\nnamespace Chain{\n\tint h[N],cnt;        \n\tstruct Edge{int next,to,v;}e[10000005];\n\tvoid AddEdge(int c,int d,int w){e[++cnt]=(Edge){h[c],d,w};h[c]=cnt;}\n}\nusing namespace Chain;\nint dst[N];\npriority_queue< pair<int,int> > q;\nbitset<N> vst;\nvoid dij(int MAXN)\n{\n\tfor(int i=0;i<=MAXN;vst[i]=0,dst[i]=LLONG_MAX,i++);\n\tdst[0]=0;\n\tq.push(make_pair(-dst[0],0));\n\twhile(!q.empty())\n\t{\n\t\tint r=q.top().second; q.pop();\n\t\tif(vst[r]) continue;\n\t\tvst.set(r);\n\t\tfor(int i=h[r];i;i=e[i].next)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif(vst[y]) continue;\n\t\t\tif(dst[y]>dst[r]+e[i].v) \n\t\t\t{\n\t\t\t\tdst[y]=dst[r]+e[i].v;\n\t\t\t\tq.push(make_pair(-dst[y],y));\n\t\t\t}   \n\t\t}\n\t\t\n\t}\n}\nvoid re3(vector<int> &d,int k)\n{\n\tsort(d.begin(),d.end());\n\tcnt=0;for(int i=0;i<=d[0];i++) h[i]=0;\n\tfor(int i=0;i<d[0];i++)\n\t\tfor(int it=1;it!=d.size();++it)\n\t\t\tAddEdge(i,(i+d[it])%d[0],d[it]);\n\tdij(d[0]);\n\tfor(Node pac:mp[k])\n\t\task[pac.id].Ans=(dst[pac.n%d[0]]<=pac.n);\n}\n\nvoid solve(int k)\n{\n\tvector<int> d=p_rho::divide(k);\n\tif(d.size()==0) re0(k);\n\telse if(d.size()==1) re1(k);\n\telse if(d.size()==2) re2(d[0],d[1],k);\n\telse re3(d,k);\n}\n\nsigned main()\n{\n\tsigned T; scanf(\"%d\",&T);\n\tfor(int i=1;i<=T;i++) scanf(\"%lld %lld\",&ask[i].n,&ask[i].k),mp[ask[i].k].push_back((Node){ask[i].n,0,0,i});\n\tfor(map< int,vector<Node> >::iterator it=mp.begin();it!=mp.end();++it) solve(it->first);\n\tfor(int i=1;i<=T;i++) printf(ask[i].Ans?\"YES\\n\":\"NO\\n\");\n\treturn 0;\n}\n\n```",
        "postTime": 1670244253,
        "uid": 432127,
        "name": "Avocadooo",
        "ccfLevel": 0,
        "title": "CF986F \u9898\u89e3"
    },
    {
        "content": "1e4\u6b21\u8be2\u95ee\uff0c\u7ed9\u5b9an\u4e0ek\uff0c\u95ee\u662f\u5426\u80fd\u5c06n\u5206\u4e3a\u82e5\u5e72\u4e2ak\u7684\u56e0\u6570\u4e4b\u548c\u3002 \n\u6ce8\u610f\u7531\u4e8e\u9898\u9762\u539f\u56e0\uff0ck=1\u65f6\u7b54\u6848\u4e3aNO \nn<=1e18,k<=1e15\uff0c\u6700\u591a50\u4e2a\u4e0d\u540c\u7684k.\n\n\u5148\u5206\u89e3\u8d28\u56e0\u6570k=p1p2p3\u2026\n\u663e\u7136\u53ea\u9700\u8981\u7528\u8d28\u56e0\u5b50\u62fc\u51fan\u5c31\u884c\n\u7136\u540e\u76f8\u5f53\u4e8e\u6c42a1p1+a2p2+a3p3..=na1p1+a2p2+a3p3..=n\u662f\u5426\u5b58\u5728\u81ea\u7136\u6570\u89e3{a1,a2,a3\u2026}\n\u6839\u636e\u8d85\u54e5\u7684\u8bb2\u4e49\n\n\u8f6c\u6362\u4e3a\u56fe\u8bba\u95ee\u9898\uff0c\u8bb0\u5176\u4e2d\u6700\u5c0f\u8d28\u56e0\u5b50\u4e3ap1. \n\u5219\u5efa\u6709p1\u4e2a\u8282\u70b9\u7684\u56fe\uff0c\u5206\u522b\u4ee3\u8868\u6a21p1\u610f\u4e49\u4e0b\u76840..p1-1 \n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9x\u4e0e\u8d28\u56e0\u5b50pi\uff0c\u5411(pi+x)%p1\u8fde\u4e00\u6761\u8fb9\u6743\u4e3api\u7684\u8fb9\u3002 \n\u8fd9\u6837\u4ece0\u5f00\u59cb\u8dd1\u5230x\u7684\u6700\u77ed\u8def\u5c31\u76f8\u5f53\u4e8e\u6c42\u51fa\u8ba9a1p1+a2p2+a3p3..modp1=xa1p1+a2p2+a3p3..modp1=x\u7684\u6700\u5c0f\u503c\u3002 \n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95een,k\uff0c\u82e5\u5728k\u7684\u56fe\u4e2ddis[n%p1]<=n\uff0c\u5219\u53ef\u4ee5\u52a0\u82e5\u5e72\u4e2ap1\u5f97\u5230n.\u56e0\u6b64\u662fyes\uff0c\u5426\u5219\u662fno.\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u70b9\u6570\u53ef\u80fd\u8fc7\u591a\u3002\u53d1\u73b0\u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2a\u6216\u4e24\u4e2a\u8d28\u56e0\u5b50\u7684k\u53ea\u9700\u8981\u7b80\u5355\u5224\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\uff0c\u8fd9\u6837\u70b9\u6570\u5c31\u88ab\u9650\u5236\u52301e5\u4e4b\u5185\u4e86\n\n\u5176\u6838\u5fc3\u5c31\u662f\u628a\u95ee\u9898\u8f6c\u5316\u5728modp1\u610f\u4e49\u4e0b\u6c42\u89e3\u3002\u800cp1\u662f1e5\u8303\u56f4\u5185\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c06\u6574\u4e2a\u95ee\u9898\u9650\u5236\u57281e5\u8303\u56f4\u5185\uff0c\u518d\u901a\u8fc7p1\u65e0\u9650\u4f7f\u7528\u6765\u8fbe\u5230\u964d\u4f4e\u590d\u6742\u5ea6\u7684\u76ee\u7684\u3002\n\n\u4e24\u4e2a\u8d28\u56e0\u5b50\u5177\u4f53\u600e\u4e48\u5224\uff1a \n\u5bf9\u4e8ek=ab\uff0c\u82e5ax+by=n\uff0c\u5219\u6709y=n/b(mod a)\uff0c\u53c8\u56e0\u4e3aa,b\u4e92\u8d28\uff0c\u6240\u4ee5\u53ef\u4ee5\u6c42\u51famod a\u610f\u4e49\u4e0b\u7684y. \n\u6211\u4eec\u5e0c\u671bx,y\u90fd\u662f\u975e\u8d1f\u6574\u6570\uff0c\u6240\u4ee5y\u8d8a\u5c0f\u8d8a\u597d\uff0c\u5373\u53d6mod a\u610f\u4e49\u4e0b\u7684y\u5c31\u884c\n\n\n\u4ee3\u7801\uff1a\n~~~\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <map>\n#include <vector>\n#include <cstring>\n#include <cmath> \nusing namespace std;\ntypedef long long ll;\ntypedef long double db;\n\nint t;\nmap<int,int> has;\nll fj[55][50],gs[55],bh;\nll n,k;\nconst ll S=31624000;\nconst ll mf=1e5+10;\nbool is[S];\nll p[2000000];\n\nvoid init() {\n    for (int i=2; i<S; i++) {\n        if (!is[i]) p[++p[0]]=i;\n        for (int j=1; j<=p[0] && p[j]*i<S; j++){\n            is[i*p[j]]=1;\n            if (i%p[j]==0) break;\n        }\n    }\n}\n\n\nll mx,dis[mf];\nvector<pair<int,int> > e[mf];\nvector<int> ans[51];\n\nll Q[mf*100],vis[mf];\nvoid build(ll z) {\n    mx=fj[z][1];\n    for (int i=0; i<mx; i++) {\n        e[i].clear();\n        for(int j=1; j<=gs[z]; j++) \n            e[i].push_back(make_pair((i+fj[z][j])%mx,fj[z][j]));\n    }\n    memset(dis,127,sizeof dis); dis[0]=0;\n    int L=0,R=1; Q[R]=0;\n    while (L<R) {\n        int x=Q[++L]; vis[x]=0;\n        for (int i=0; i<e[x].size(); i++) {\n            ll y=e[x][i].first,c=e[x][i].second;\n            if (dis[x]+c<dis[y]) {\n                dis[y]=dis[x]+c;\n                if (!vis[y]) {\n                    vis[y]=1; Q[++R]=y;\n                }\n            }\n        }\n    }\n    for (int i=0; i<mx; i++) ans[z].push_back(dis[i]);\n}\nint fen(ll x) {\n    bh++;\n    for (int i=1; p[i]*p[i]<=x; i++) {\n        if (x%p[i]==0) {\n            fj[bh][++gs[bh]]=p[i];\n            while (x%p[i]==0) x/=p[i];\n        }\n    }\n    if (x!=1) \n        fj[bh][++gs[bh]]=x;\n    if (gs[bh]>=3) build(bh);\n    return bh;\n}\nvoid getans(int n,int z) {\n    if (n<fj[z][1]) printf(\"NO\\n\"); else \n    if (ans[z][n%fj[z][1]]<=n) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n}\nll ksm(ll x,ll y,ll mo) {\n    ll ret=1; for (; y; y>>=1) {\n        if (y&1) ret=ret*x%mo;\n        x=x*x%mo;\n    }\n    return ret;\n}\nint main() {\n    init();\n//  freopen(\"F.in\",\"r\",stdin);\n//  freopen(\"F.out\",\"w\",stdout);\n    for (cin>>t; t; t--) {\n        scanf(\"%I64d %I64d\",&n,&k);\n        int &z=has[k];\n        if (!z) z=fen(k);\n        if (k==1) {\n            printf(\"NO\\n\");\n            continue;\n        }\n        if (gs[z]==1) {\n            printf(n%fj[z][1]?\"NO\\n\":\"YES\\n\");\n        } else if (gs[z]==2) {\n            ll a=fj[z][1],b=fj[z][2];\n            ll my=ksm(b,a-2,a) * (n%a) % a;\n            if (my*b <= n) printf(\"YES\\n\"); else printf(\"NO\\n\");\n        } else getans(n,z);\n    }\n}\n~~~",
        "postTime": 1548548354,
        "uid": 115066,
        "name": "yang2018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF986F \u3010Oppa Funcan Style Remastered\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/CF986F)\n\n\u60ca\u8bb6\uff0c\u770b\u4e86\u770b\u6700\u4f18\u89e3\u53d1\u73b0\u6211 300+ms\uff0c\u522b\u4eba 6s+\uff1f\n\n\u53e6\u5916\u8fd9\u9898 *3300?\n\n## \u9898\u610f\n\u7ed9\u4f60 $n$ \u548c $k$\uff0c\u95ee $n$ \u80fd\u5426\u8868\u793a\u4e3a $k$ \u7684\u82e5\u5e72\u975e $1$ \u56e0\u5b50\u4e4b\u548c\uff0c\u6bcf\u4e2a\u56e0\u5b50\u53ef\u7528\u65e0\u9650\u6b21\u3002\n\n$t$ \u7ec4\u6570\u636e\uff0c\u4ee4 $t_k$ \u8868\u793a\u6240\u6709\u6570\u636e\u4e2d\u4e0d\u540c $k$ \u7684\u6570\u91cf\u3002\n\n$n\\le 10^{18},k\\le 10^{15},t\\le 10^4,t_k\\le 50$\u3002\n## \u9898\u89e3\n****\n\u5f15\u7406\uff1a\u82e5 $n$ \u80fd\u8868\u793a\u4e3a $k$ \u7684\u82e5\u5e72\u975e $1$ \u56e0\u5b50\u4e4b\u548c\uff0c\u5219 $n$ \u80fd\u8868\u793a\u4e3a $k$ \u7684\u82e5\u5e72\u8d28\u56e0\u5b50\u4e4b\u548c\u3002\n\n\u8bc1\uff1a\u8bbe $n=\\displaystyle\\sum_{i=1}^d w_i$\uff0c\u82e5 $w_i\\notin\\Bbb P$\uff0c\u5219\u5fc5\u7136\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u8d28\u6570 $p|w_i$\uff0c\u663e\u7136\uff0c$p$ \u662f $k$ \u7684\u8d28\u56e0\u5b50\uff0c$w_i$ \u4fbf\u53ef\u7528 $\\dfrac {w_i}p$ \u4e2a $p$ \u4ee3\u66ff\u3002\n****\n\u9996\u5148\u5bf9\u6bcf\u4e2a $k$ \u5206\u522b\u8ba1\u7b97\uff0c\u8bbe $\\displaystyle k=\\prod_{i=1}^dp_i^{q_i}$\uff0c\u5176\u4e2d $p_i\\le p_{i+1}$\u3002\n\n\u5bf9 $d$ \u5206\u7c7b\u8ba8\u8bba\uff1a\n- $d=0$\uff1a\u5f88\u663e\u7136\uff0c$k=1$\uff0c\u7531\u4e8e\u8981\u7684\u662f\u8d28\u56e0\u5b50\uff0c\u6240\u4ee5\u65e0\u89e3\u3002\n- $d=1$\uff1a\u5f88\u663e\u7136\uff0c$k\\in\\Bbb P$\uff0c\u7531\u4e8e\u53ea\u6709 $k$ \u4e00\u4e2a\u8d28\u56e0\u5b50\u5373\u5b83\u81ea\u5df1\uff0c\u76f4\u63a5\u5224\u65ad $[k|n]$ \u5373\u53ef\u3002\n- $d=2$\uff1a\u8bbe $k=x^{u}y^{v}$\uff0c\u5f88\u663e\u7136\uff0c\u6307\u6570\u5728\u8fd9\u91cc\u6ca1\u7528\u3002\u5047\u8bbe\u6709\u89e3\uff0c\u4ee4 $ax+by=n$\uff0c\u5219\u6613\u5f97 $by\\equiv n(\\bmod x)$\uff0c\u6c42\u89e3\u9006\u5143 $y^{-1}$\uff0c\u5e26\u56de\u8ba1\u7b97 $[y\\times(n\\times y^{-1}\\bmod x)\\le n]$ \u5373\u53ef\u3002\n- $d\\ge 3$\uff1a\u770b\u8d77\u6765\u5e76\u4e0d\u597d\u76f4\u63a5\u6c42\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e $d\\ge 3$\uff0c$p_1\\le\\sqrt[3]{k}\\le 10^5$\u3002\u6b64\u65f6\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\uff0c\u7ed9\u5b9a\u521d\u59cb\u72b6\u6001 $0$ \u548c $d$ \u79cd\u8f6c\u79fb\uff0c\u7b2c $i$ \u79cd\u8f6c\u79fb\u7684\u6743\u503c\u662f $p_i$\uff0c\u7ed9\u51fa\u4e00\u5806\u8be2\u95ee\uff0c\u6c42\u80fd\u5426\u901a\u8fc7\u521d\u59cb\u72b6\u6001\u8f6c\u79fb\u5230 $n$\u3002\n\n\u6b64\u65f6\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u7b97\u6cd5\uff1a\u540c\u4f59\u6700\u77ed\u8def\u3002\n\n\u8003\u8651\u4ee4 $s_i$ \u8868\u793a\u4ee5 $0$ \u4e3a\u521d\u59cb\u72b6\u6001\uff0c\u80fd\u8f6c\u79fb\u5230\u7684 $u\\bmod p_1=i$ \u7684\u6700\u5c0f\u7684 $u$\u3002\u4e8e\u662f\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $n$\uff0c\u53ea\u9700\u8003\u8651 $[s_{n\\bmod p_1}\\le n]$ \u5373\u53ef\u3002\uff08\u663e\u7136\uff0c\u4e4b\u540e\u53ef\u4ee5\u4e00\u76f4 $+p_1$ \u62fc\u51fa $n$\uff09\n\n\u90a3\u4e48\u600e\u4e48\u8ba1\u7b97 $s$ \u5462\uff1f\n\n\u8003\u8651\u56fe\u8bba\u5efa\u6a21\uff0c\u8f6c\u79fb\u53ef\u4ee5\u770b\u4f5c\u5bf9\u4e8e\u6240\u6709 $2\\le i\\le d,0\\le j<p_1$\uff0c\u8fde\u8fb9 $j\\to(j+p_i)\\bmod p_1$\uff0c\u6743\u503c\u4e3a $p_i$\uff0c\u4ece $0$ \u5f00\u59cb\u4f7f\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$d\\le13$\uff0c\u8fb9\u6570\u662f $\\Theta(d\\sqrt[3]k)$ \u7684\uff0c\u70b9\u6570\u662f $\\Theta(\\sqrt[3]k)$ \u7684\uff0c\u6240\u4ee5\u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n\u53e6\u5916\uff0c$k$ \u5f88\u5927\uff0c\u5206\u89e3\u8d28\u56e0\u6570\u8981\u7528 Pollard-Rho\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Theta(t\\log k+t_kd\\sqrt[3]k\\log k)$\uff0c\u663e\u7136\u8dd1\u4e0d\u6ee1\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=1e5+10;\nnamespace PR{\n\t#define lll __int128\n\tinline ll qpow(ll x,ll y,const ll mod){\n\t\tll res=1;\n\t\twhile(y){\n\t\t\tif(y&1) res=(lll)res*x%mod;\n\t\t\tx=(lll)x*x%mod;\n\t\t\ty>>=1;\n\t\t}\n\t\treturn res;\n\t}\n\tinline bool Miller_Rabin(ll x,int a){\n\t\tll y=x-1;\n\t\twhile(y){\n\t\t\tll res=qpow(a,y,x);\n\t\t\tif(res!=1&&res!=x-1) return 0;\n\t\t\tif(y&1||res==x-1) return 1;\n\t\t\ty>>=1;\n\t\t}\n\t\treturn 1;\n\t}\n\tinline bool Isprime(ll x){\n\t\tif(x<2||x==46856248255981) return 0;\n\t\tif(x==2||x==3||x==7||x==61||x==24251) return 1;\n\t\tif(x%6!=1&&x%6!=5) return 0;\n\t\treturn Miller_Rabin(x,2)&&Miller_Rabin(x,61);\n\t}\n\tinline ll f(ll x,ll c,ll n){\n\t\treturn ((lll)x*x+c)%n;\n\t}\n\tinline ll Pollard_Rho(ll x){\n\t\tll s=0,t=0,c=1ll*rand()%(x-1)+1,val=1;\n\t\tint stp,g=1;\n\t\tfor(;;g<<=1,s=t,val=1){\n\t\t\tfor(stp=1;stp<=g;stp++){\n\t\t\t\tt=f(t,c,x);\n\t\t\t\tval=(lll)val*abs(t-s)%x;\n\t\t\t\tif(!(stp&127)){\n\t\t\t\t\tll q=__gcd(val,x);\n\t\t\t\t\tif(q>1) return q;\n\t\t\t\t}\n\t\t\t}\n\t\t\tll q=__gcd(val,x);\n\t\t\tif(q>1) return q;\n\t\t}\t\n\t}\n\tinline void solve(ll x,ll cnt,vector<ll> &ans){\n\t\tif(x<2) return ;\n\t\tif(Isprime(x)) {for(int i=1;i<=cnt;i++)ans.push_back(x);return ;}\n\t\tll pri=x;\n\t\tfor(;pri>=x;pri=Pollard_Rho(x));\n\t\tll s=0;\n\t\tfor(;x%pri==0;x/=pri)s++;\n\t\tsolve(x,cnt,ans),solve(pri,cnt*s,ans);\n\t}\n\tinline void decompose(ll x,vector<ll>&ans){\n\t\tsolve(x,1,ans);\n\t}\n}\nmap<ll,int>mp; \nstruct nd{\n\tll n;\n\tint id;\n};\nstruct node{\n\tll k;\n\tvector<nd>vec;\n}tmp[70];\nint cnt,T;\nbool ans[N];\ninline int qpow(ll x,ll y,ll p){\n\tll res=1;\n\tx%=p;\n\twhile(y){\n\t\tif(y&1) res=res*x%p;\n\t\tx=x*x%p;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\nint cntt,head[N];\nll dis[N];\nbool vis[N];\nstruct Edge{\n\tint to,nxt;\n\tll w;\n}a[N*30];\ninline void add(int u,int v,ll w){\n\tcntt++;\n\ta[cntt].to=v;\n\ta[cntt].nxt=head[u];\n\ta[cntt].w=w;\n\thead[u]=cntt;\n}\nstruct nodeE{\n\tint x;\n\tll d;\n\tinline friend bool operator<(const nodeE &a,const nodeE &b){\n\t\treturn a.d>b.d;\n\t}\n};\npriority_queue<nodeE>q;\ninline void Dijkstra(int s){\n\tmemset(vis,0,sizeof(vis));\n    memset(dis,127,sizeof(dis));\n\tdis[s]=s;\n\tq.push({s,dis[s]});\n\twhile(!q.empty()){\n\t    nodeE p=q.top();\n\t    q.pop();\n\t    int rt=p.x;\n\t    if(vis[rt]) continue;\n\t    vis[rt]=1;\n\t    for(int i=head[rt];i;i=a[i].nxt){\n\t\t    int t=a[i].to;\n\t\t    if(dis[t]>dis[rt]+a[i].w){\n\t\t\t    dis[t]=dis[rt]+a[i].w;\n\t\t\t    if(!vis[t])\n\t\t\t\t    q.push({t,dis[t]});\n\t\t\t}\n\t\t}\n\t}\n}\n/*\n4\n41 236447\n7 1533\n128 68191\n1188 267623\n*/\ninline void solve(node p){\n\tll k=p.k;\n\tvector<ll>d;\n\tPR::decompose(k,d);\n\tsort(d.begin(),d.end());\n\td.resize(unique(d.begin(),d.end())-d.begin());\n\tint sz=d.size();\n\tif(sz==0){\n\t\treturn ;\n\t}else if(sz==1){\n\t\tfor(auto tmp:p.vec)\n\t\t\tans[tmp.id]=tmp.n%k==0;\n\t}else if(sz==2){\n\t\tll x=d[0],y=d[1];\n\t\tfor(auto tmp:p.vec){\n\t\t\tll n=tmp.n;\n\t\t\tif(n%x==0) ans[tmp.id]=1;\n\t\t\telse{\n\t\t\t\tll pp=n%x*qpow(y,x-2,x)%x;\n\t\t\t\tans[tmp.id]=(lll)pp*y<=n;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tcntt=0;\n\t\tmemset(head,0,sizeof(head));\n\t\tfor(int i=0;i<d[0];i++)\n\t\t\tfor(int j=1;j<sz;j++)\n\t\t\t\tadd(i,(i+d[j])%d[0],d[j]);\n\t\tDijkstra(0);\n\t\tfor(auto tmp:p.vec){\n\t\t\tll n=tmp.n;\n\t\t\tans[tmp.id]=dis[n%d[0]]<=n;\n\t\t}\n\t}\n}\nint main(){\n\tT=read();\n\tfor(int i=1;i<=T;i++){\n\t\tll n=read(),k=read();\n\t\tif(!mp[k]) mp[k]=++cnt;\n\t\tint t=mp[k];\n\t\ttmp[t].k=k;\n\t\ttmp[t].vec.push_back({n,i});\n\t}\n\tfor(int i=1;i<=cnt;i++)\n\t\tsolve(tmp[i]);\n\tfor(int i=1;i<=T;i++)\n\t\tputs(ans[i]?\"YES\":\"NO\");\n\tflush();\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1639183984,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF986F\u3010Oppa Funcan Style Remastered\u3011"
    },
    {
        "content": "\u8f6c\u5316\u4e3a\u4e0d\u540c\u8d28\u56e0\u6570\u80fd\u4e0d\u80fd\u51d1\u51fa\u6765 $n$\uff0c\u8bc1\u660e\u4e0d\u8d58\u8ff0\n\n\u82e5 $k$ \u8d28\u56e0\u6570\u4e2a\u6570\u4e0d\u8d85\u8fc7 $1$\uff0c\u662f\u5e73\u51e1\u7684\n\n\u82e5 $k$ \u8d28\u56e0\u6570\u4e2a\u6570\u4e3a $2$\uff0cexgcd \u7b97\u7b97\u5373\u53ef\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u679a\u4e3e\u5927\u8d28\u56e0\u5b50\u7684\u4f7f\u7528\u6b21\u6570\uff0c\u7136\u540e\u5229\u7528\u5c0f\u51ef\u7684\u7591\u60d1\u90a3\u4e2a\u4e0a\u754c\u53ef\u77e5\u4f7f\u7528\u6b21\u6570\u4f30\u8ba1\u4e5f\u5c31\u6839\u53f7\u7ea7\u522b\uff0c\u90a3 $50\\sqrt{k}$ \u8bf4\u4e0d\u5b9a\u4e5f\u80fd\u8dd1\n\n\u82e5 $k$ \u8d28\u56e0\u5b50\u4e2a\u6570\u8d85\u8fc7 $3$\uff0c\u8003\u8651\u6700\u5c0f\u7684\u90a3\u4e24\u4e2a\u4e58\u8d77\u6765\u4e0d\u8d85\u8fc7 $\\sqrt{k}$\uff0c\u8bbe\u5176\u4e3a $p_1,p_2$\uff0c\u5219\u53ea\u9700\u8981\u8003\u8651 $p_1\\times p_2-p_1-p_2$ \u4ee5\u5185\u7684\u8fd9\u4e9b\u6570\uff0c\u90a3\u76f4\u63a5\u505a\u80cc\u5305\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u5f53\u7136\u4e58\u4e2a $50$ \u53ef\u80fd\u8dd1\u4e0d\u4e86\uff0c\u4f46\u662f\u53ef\u4ee5 bitset \u518d\u9664\u4e2a $w$\uff0c\u90a3\u5c31\u80fd\u8dd1\u4e86\n\n\u82e5 $k$ \u8d28\u56e0\u5b50\u4e2a\u6570\u4e3a $3$\uff0c\u8bbe\u4e3a $p_1<p_2<p_3$\uff0c\u540c\u6837\u8003\u8651\u5c0f\u51ef\u7684\u7591\u60d1\u7684\u7ed3\u8bba\uff0c\u53ea\u9700\u8981\u89e3\u51b3 $p_1\\times p_2-p_1-p_2$ \u4ee5\u5185\u7684\u6570\u3002\u5982\u679c\u80fd\u5bf9\u4e8e\u6bcf\u4e2a $k$ \u679a\u4e3e $p_2,p_3$ \u4f7f\u7528\u6b21\u6570\u7684\u8bdd\uff0c\u8bb0\u4e00\u4e0b\u6a21 $p_1$ \u4e0b\u6240\u6709\u4f59\u6570\u5bf9\u5e94\u7684\u6700\u5c0f\u7684 $xp_2+yp_3$\uff0c\u5c31\u884c\u4e86\uff0c\u4f46\u8fd9\u73a9\u610f\u5355\u6b21\u9884\u5904\u7406\u590d\u6742\u5ea6 $k^{\\frac{2}{3}}$\uff0c\u4e0d\u662f\u5f88\u884c\n\n\u90a3\u4e48\u8bbe\u4e00\u4e2a\u5757\u957f $B$\uff0c\u679a\u4e3e $p_3$ \u4f7f\u7528\u6b21\u6570\uff0c\u518d\u679a\u4e3e $p_2$ \u4f7f\u7528\u6b21\u6570\u9664 $B$ \u4e0b\u53d6\u6574\uff0c\u7136\u540e\u6bcf\u6b21\u8be2\u95ee\u679a\u4e3e $p_2$ \u4f7f\u7528\u6b21\u6570\u6a21 $B$\uff0c\u5982\u679c\u53d6 $B=k^{\\frac{1}{6}}$ \u7684\u8bdd\uff0c\u6709\u5173 $B$ \u7684\u590d\u6742\u5ea6\u5927\u6982\u662f $Tk^{\\frac{1}{6}}+50\\sqrt{k}$\uff0c\u5728\u7b97\u91cf\u4e0a\u4ecd\u6709\u5dee\u8ddd\uff0c\u53ef\u4ee5\u9002\u5f53\u8c03\u5927 $B$ \u4f7f\u5f97\u540e\u9762\u90a3\u9879\u8f83\u5c0f\uff0c\u57fa\u672c\u53ef\u4ee5\u901a\u8fc7\uff08\u5176\u5b9e\u8fd9\u73a9\u610f\u6ca1\u5565\u5e38\u6570\uff0c\u8dd1\u8d77\u6765\u53ef\u5feb\u4e86\uff09",
        "postTime": 1674713007,
        "uid": 339136,
        "name": "blackname",
        "ccfLevel": 0,
        "title": "CF986F \u4e00\u4e9b\u5947\u602a\u505a\u6cd5"
    },
    {
        "content": "### CF986F\n\n\u7ed9\u5b9a $n$ \u4e0e $k$\uff0c\u95ee\u662f\u5426\u80fd\u5c06 $n$ \u5206\u4e3a\u82e5\u5e72\u4e2a $k$ \u7684\u975e $1$ \u56e0\u6570\u4e4b\u548c\uff0c\u6bcf\u4e2a\u56e0\u6570\u90fd\u53ef\u4ee5\u88ab\u9009\u591a\u6b21\u3002\n\n\n\u4e00\u5171 $T$ \u7ec4\u8be2\u95ee\u3002\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u82e5\u6ee1\u8db3\u8f93\u51fa `Yes`\uff0c\u5426\u5219\u8f93\u51fa `No`\u3002\n\n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 $1 \\leq T \\leq 10^4,1 \\leq n \\leq 10^{18},1 \\leq k \\leq 10^{15}$ \u4e14\u6700\u591a\u6709 $50$ \u79cd\u4e0d\u540c\u7684 $k$\u3002\n\n#### sol\n\n\n\u9996\u5148\u53d1\u73b0\uff0c\u82e5 $n$ \u80fd\u88ab\u8868\u793a\u6210\u82e5\u5e72\u4e2a $k$ \u7684\u975e $1$ \u56e0\u6570\u4e4b\u548c\uff0c\u5219 $n$ \u4e5f\u4e00\u5b9a\u80fd\u88ab\u8868\u793a\u6210\u82e5\u5e72\u4e2a $k$ \u7684\u8d28\u56e0\u5b50\u4e4b\u548c\u3002\n\n\u8bc1\u660e\uff1a\u6bcf\u4e2a $k$ \u7684\u975e\u8d28\u56e0\u5b50\u4e00\u5b9a\u80fd\u88ab\u8868\u793a\u6210 $pq$ \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d $p$ \u4e3a\u8d28\u6570\uff0c\u5219\u5c06\u8be5\u975e\u8d28\u56e0\u5b50\u62c6\u6210 $q$ \u4e2a $p$ \u76f8\u52a0\u5373\u53ef\u3002\n\n\u7136\u540e\u8003\u8651\u5c06$k$ \u8d28\u56e0\u5b50\u5206\u89e3\uff0c\u8bbe $k=\\prod_{i=1}^{d}p_i^{q_i}$\uff0c\u5176\u4e2d $p_i$ \u4e3a\u8d28\u6570\uff0c$q_i$ \u4e3a\u81ea\u7136\u6570\u3002\n\n\u7531\u4e8e\u4e0d\u540c\u7684 $k$ \u6700\u591a\u53ea\u6709 $50$ \u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7b5b\u5b8c\u8d28\u6570\u540e\u679a\u4e3e\u5206\u89e3\uff0c\u7531\u4e8e $10^{7.5}$ \u7684\u8d28\u6570\u53ea\u6709\u7ea6 $\\frac{10^{7.5}}{\\ln 10^{7.5}}$ \u4e2a\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u5728 $1.2\\times 10^{8}$ \u7ea7\u522b\uff0c\u53ef\u8fc7\u3002\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 `Pollard-Rho` \u5206\u89e3\uff09\n\n\u518d\u5bf9 $d$ \u5206\u7c7b\u8ba8\u8bba\uff1a\n\n* $d=0$\uff1a\u663e\u7136\uff0c$k=1$\uff0c\u65e0\u89e3\u3002\n* $d=1$\uff1a\u663e\u7136\uff0c$k \\in \\mathbb{P}$\uff0c\u76f4\u63a5\u5224\u65ad $[k|n]$ \u5373\u53ef\u3002\n* $d=2$\uff1a\u8bbe $k=x^u y^v$\uff0c\u90a3\u4e48\u9898\u610f\u8f6c\u6362\u4e3a\u5224\u65ad\u662f\u5426 $\\exists a,b \\in [0,\\infty] \\cap \\mathbb{Z},ax+by=n$\uff0c\u5047\u8bbe\u6709\u89e3\uff0c\u663e\u7136\u6709 $b$ \u7684\u6700\u5c0f\u503c $b_{min}=n\\times y^{-1} \\bmod x$\uff0c\u6700\u540e\u5224\u65ad $[y \\times b_{min} \\leq n]$ \u5373\u53ef\u3002\n* $d \\geq 3$\uff1a\u6839\u636e\u4e0a\u9762\u7684\u601d\u8def\uff0c\u9898\u610f\u8f6c\u6362\u4e3a\u5224\u65ad\u662f\u5426 $\\exists x_1,x_2,\\cdots,x_m \\in [0, \\infty] \\cap \\mathbb{Z},\\sum_{i=1}\\limits^{d}p_ix_i=n$\uff0c\u76f4\u63a5\u68c0\u9a8c\u8c8c\u4f3c\u6709\u70b9\u68d8\u624b\uff0c\u4e0d\u8fc7\u4e0d\u96be\u53d1\u73b0\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u5bf9\u4e8e\u4efb\u610f $x_i$ \u5982\u679c $n$ \u53ef\u884c\uff0c\u90a3\u4e48 $n+zp_i$ \u4e5f\u53ef\u884c\uff0c\u53d1\u73b0\u8fd9\u7c7b\u4f3c\u4e8e\u540c\u4f59\u3002\n\n\u4e8e\u662f\u5f15\u5165\u4e00\u4e2a\u7b97\u6cd5\uff1a\u540c\u4f59\u6700\u77ed\u8def\u3002\n\n\u8003\u8651\u4ee4 $dis_i$ \u8868\u793a\u80fd\u88ab\u8868\u793a\u51fa\u6765\u7684\u6ee1\u8db3 $u \\bmod p_1=i$ \u7684\u6700\u5c0f\u7684 $u$\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $n$\uff0c\u53ea\u9700\u5224\u65ad $[dis_{n \\bmod p_1} \\leq n]$ \u5373\u53ef\u3002\n\n\u90a3\u4e48\u600e\u4e48\u8ba1\u7b97 $dis$ \u5462\uff1f\n\n\u8f6c\u5230\u56fe\u4e0a\uff0c\u5bf9\u4e8e\u6240\u6709 $2 \\leq i \\leq d,0 \\leq j < p_1$\uff0c\u8fde\u8fb9 $j \\to (j+p_i)\\bmod p_1$\uff0c\u6743\u503c\u4e3a $p_i$\uff0c\u4ece $0$  \u5f00\u59cb\u4f7f\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u5373\u53ef\u5f97\u5230 $dis$\u3002 \n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$d \\leq 13$\uff0c\u8fb9\u6570\u662f $\\mathcal O(d\\sqrt[3]{k})$ \u7684\uff0c\u70b9\u6570\u662f $\\mathcal O(\\sqrt[3]{k})$ \u7684\uff0c\u53ef\u8fc7\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(T \\log k+50\\times d \\sqrt[3]{k}\\log k)$\uff0c\u53ef\u8fc7\u3002\n\n~~\u6700\u4f18\u89e3~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace PR\n{\n\ttypedef long long ll;\n#define lll __int128\n\n\ttemplate <class kkk>\n\tinline kkk qr(kkk sample)\n\t{\n\t\tkkk ret = 0, sgn = 1;\n\t\tchar cur = getchar();\n\t\twhile (!isdigit(cur))\n\t\t\tsgn = (cur == '-' ? -1 : 1), cur = getchar();\n\t\twhile (isdigit(cur))\n\t\t\tret = (ret << 1) + (ret << 3) + cur - '0', cur = getchar();\n\t\treturn sgn == -1 ? -ret : ret;\n\t}\n\n\tll max_factor;\n\n\tinline ll gcd(ll a, ll b)\n\t{\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tinline ll qp(ll x, ll p, ll mod)\n\t{\n\t\tll ans = 1;\n\t\twhile (p)\n\t\t{\n\t\t\tif (p & 1)\n\t\t\t\tans = (lll)ans * x % mod;\n\t\t\tx = (lll)x * x % mod;\n\t\t\tp >>= 1;\n\t\t}\n\t\treturn ans;\n\t}\n\n\tinline bool mr(ll x, ll b)\n\t{\n\t\tll k = x - 1;\n\t\twhile (k)\n\t\t{\n\t\t\tll cur = qp(b, k, x);\n\t\t\tif (cur != 1 && cur != x - 1)\n\t\t\t\treturn false;\n\t\t\tif ((k & 1) == 1 || cur == x - 1)\n\t\t\t\treturn true;\n\t\t\tk >>= 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tinline bool prime(ll x)\n\t{\n\t\tif (x == 46856248255981ll || x < 2)\n\t\t\treturn false;\n\t\tif (x == 2 || x == 3 || x == 7 || x == 61 || x == 24251)\n\t\t\treturn true;\n\t\treturn mr(x, 2) && mr(x, 61);\n\t}\n\n\tinline ll f(ll x, ll c, ll n)\n\t{\n\t\treturn ((lll)x * x + c) % n;\n\t}\n\n\tinline ll PR(ll x)\n\t{\n\t\tll s = 0, t = 0, c = 1ll * rand() % (x - 1) + 1;\n\t\tint stp = 0, goal = 1;\n\t\tll val = 1;\n\t\tfor (goal = 1;; goal <<= 1, s = t, val = 1)\n\t\t{\n\t\t\tfor (stp = 1; stp <= goal; ++stp)\n\t\t\t{\n\t\t\t\tt = f(t, c, x);\n\t\t\t\tval = (lll)val * abs(t - s) % x;\n\t\t\t\tif ((stp % 127) == 0)\n\t\t\t\t{\n\t\t\t\t\tll d = gcd(val, x);\n\t\t\t\t\tif (d > 1)\n\t\t\t\t\t\treturn d;\n\t\t\t\t}\n\t\t\t}\n\t\t\tll d = gcd(val, x);\n\t\t\tif (d > 1)\n\t\t\t\treturn d;\n\t\t}\n\t}\n\n\tinline void fac(ll x, set<ll> &st)\n\t{\n\t\tif (x <= max_factor || x < 2)\n\t\t\treturn;\n\t\tif (prime(x))\n\t\t{\n\t\t\tst.insert(x);\n\t\t\treturn;\n\t\t}\n\t\tll p = x;\n\t\twhile (p >= x)\n\t\t\tp = PR(x);\n\t\twhile ((x % p) == 0)\n\t\t\tx /= p;\n\t\tfac(x, st), fac(p, st);\n\t}\n\n\tinline set<ll> get(ll x)\n\t{\n\t\tset<ll> st;\n\t\tfac(x, st);\n\t\treturn st;\n\t}\n}\n\nusing namespace PR;\n\ninline ll read()\n{\n\tll x = 0, f = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9')\n\t{\n\t\tif(c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9')\n\t{\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\nconst int _ = 1e7 + 7;\n\nint T, ans[10007];\n\nll n, k, dis[_];\n\nmap<ll, vector<pair<ll, int> > > mp;\n\ninline ll qpow(ll x, ll y, ll mod)\n{\n\tll res = 1;\n\twhile(y)\n\t{\n\t\tif(y & 1) res = res * x % mod;\n\t\tx = x * x % mod;\n\t\ty >>= 1;\n\t}\n\treturn res;\n}\n\nsigned main()\n{\n\tT = read();\n\tfor(int i = 1; i <= T; ++i)\n\t{\n\t\tll x = read();\n\t\tmp[read()].push_back({x, i});\n\t}\n\tfor(auto t : mp)\n\t{\n\t\tll k = t.first;\n\t\tif(k == 1) continue;\n\t\tauto d = get(k);\n\t\tif(d.size() == 1)\n\t\t{\n\t\t\tfor(auto i : t.second) ans[i.second] = !(i.first % k);\n\t\t\tcontinue;\n\t\t}\n\t\tif(d.size() == 2)\n\t\t{\n\t\t\tll x = *d.begin(), y = *d.rbegin();\n\t\t\tfor(auto i : t.second)\n\t\t\t{\n\t\t\t\tll c = i.first, id = i.second;\n\t\t\t\tif(c % x == 0)\n\t\t\t\t{\n\t\t\t\t\tans[id] = 1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tll b = c % x * qpow(y, x - 2, x) % x;\n\t\t\t\tans[id] = b * y <= c;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tvector<ll> f(d.begin(), d.end());\n\t\tint x = f[0];\n\t\tf.erase(f.begin());\n\t\tfor(int i = 0; i < x; ++i) dis[i] = -1;\n\t\tdis[0] = 0;\n\t\tpriority_queue<pair<ll, int>> q;\n\t\tq.push({0, 0});\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tauto now = q.top();\n\t\t\tq.pop();\n\t\t\tint p = now.second;\n\t\t\tif(now.first != -dis[p]) continue;\n\t\t\tfor(auto i : f)\n\t\t\t{\n\t\t\t\tint tmp = (p + i) % x;\n\t\t\t\tif(dis[tmp] == -1 || dis[tmp] > dis[p] + i)\n\t\t\t\t{\n\t\t\t\t\tdis[tmp] = dis[p] + i;\n\t\t\t\t\tq.push({-dis[tmp], tmp});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(auto i : t.second) ans[i.second] = dis[i.first % x] <= i.first;\n\t}\n\tfor(int i = 1; i <= T; ++i) cout << (ans[i] ? \"YES\" : \"NO\") << \"\\n\";\n\treturn 0;\n}\n```\n\n",
        "postTime": 1643636546,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF986F Oppa Funcan Style Remastered"
    },
    {
        "content": "\u4e0d\u540c $k$ \u7684\u6570\u76ee\u4e0d\u8d85\u8fc7 $50$\uff0c\u56e0\u6b64\u5148\u5c06\u8be2\u95ee\u6309\u7167 $k$ \u5206\u7c7b\u3002\n\n\u53d1\u73b0\u5982\u679c $n$ \u80fd\u88ab\u8868\u793a\u6210\u82e5\u5e72\u4e2a $k$ \u7684\u56e0\u5b50\u4e4b\u548c\uff0c \u5219$n$ \u4e00\u5b9a\u4e5f\u80fd\u88ab\u8868\u793a\u6210\u82e5\u5e72\u4e2a $k$ \u7684\u8d28\u56e0\u5b50\u4e4b\u548c\uff1a\u6bcf\u4e2a\u975e\u8d28\u56e0\u5b50\u4e00\u5b9a\u80fd\u88ab\u8868\u793a\u6210 $pq$ \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d $p$ \u4e3a\u8d28\u6570\uff0c\u5c06\u8be5\u975e\u8d28\u56e0\u5b50\u62c6\u6210 $q$ \u4e2a $p$ \u8fde\u52a0\u5373\u53ef\u3002\n\n\u5148\u5c06 $k$ \u8d28\u56e0\u5b50\u5206\u89e3\u3002\u53ef\u4ee5\u4f7f\u7528Pollard-Rho\uff0c\u4e0d\u8fc7$10^{7.5}$\u5185\u7684\u8d28\u6570\u53ea\u6709\u7ea6 $\\dfrac{10^{7.5}}{\\ln{10^{7.5}}}$ \u4e2a\uff0c\u5206\u89e3 $50$ \u4e2a\u6570\u7684\u590d\u6742\u5ea6\u8fde\u540c\u7b5b\u8d28\u6570\u7684\u590d\u6742\u5ea6\u5927\u7ea6\u5728 $1.2\\times 10^8$ \u7ea7\u522b\uff0c\u4f9d\u65e7\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u8bbe $k$ \u7684\u8d28\u56e0\u5b50\u96c6\u5408\u4e3a $P_k$ \u3002\u82e5 $|P_k|=1$ \uff0c\u5373 $k$ \u4e3a\u8d28\u6570\uff0c\u76f4\u63a5\u5224\u65ad $n$ \u662f\u5426\u4e3a $k$ \u7684\u500d\u6570\u3002\n\n\u82e5 $|P_k|=2$\uff0c \u8bbe $P_k$ \u4e2d\u7684\u4e24\u4e2a\u5143\u7d20\u5206\u522b\u4e3a $x,y$ \uff0c\u5219\u9898\u76ee\u76f8\u5f53\u4e8e\u8be2\u95ee\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u81ea\u7136\u6570 $(a,b)$ \u4f7f\u5f97$ax+by=n$\u3002\u5c06\u5176\u53d8\u5f62\u5f97 $by\\equiv n\\pmod{x}$\uff0c\u6c42\u89e3\u9006\u5143\u518d\u5e26\u56de\u539f\u5f0f\u68c0\u9a8c\u3002\n\n$|P_k|\\ge 3$ \u65f6\uff0c\u76f4\u63a5\u5217\u51fa\u65b9\u7a0b\u6c42\u65b9\u7a0b\u662f\u5426\u6709\u89e3\u5f88\u96be\u505a\uff0c\u4f46\u662f $\\min\\{P_k\\}\\le 10^5$\uff0c\u53ef\u4ee5\u5229\u7528\u540c\u4f59\u6700\u77ed\u8def\u89e3\u51b3\uff1a\u8bbe $k$ \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u4e3a $g$\uff0c$dis_x$ \u8868\u793a\u6ee1\u8db3$n\\bmod g=x$\u7684\u53ef\u4ee5\u88ab\u8868\u793a\u51fa\u6765\u7684\u6700\u5c0f\u7684 $n$\uff0c\u5bf9\u6bcf\u4e2a\u8d28\u56e0\u5b50 $p\\in P_k,p\\ne g$ \u548c\u6ee1\u8db3 $0\\le x<g$ \u7684 $x$\uff0c\u90fd\u4ece $x$ \u5411 $(x+p)\\bmod g$ \u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $p$\uff0c\u4ece $0$ \u8dd1\u6700\u77ed\u8def\u53ef\u89e3\u51fa $dis$\u3002\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e2a $n$ \u5224\u65ad $dis_{n\\bmod g}\\le n$ \u662f\u5426\u6210\u7acb\u3002\u5177\u4f53\u53ef\u89c1P3403\u3002\n\n\n```cpp\nconst int N = 100005,M = 10005;\nint n;map<ll,vector<pair<ll,int>>> mp;bool ans[M];\ninline ll mul(ll x,ll y,ll P);\nll qpow(ll a,ll b,ll P);\nll gcd(ll x,ll y) {return y ? gcd(y,x % y) : x;}\nnamespace PR\n{    \n    set<ll> get_fac(ll x); // \u5c06x\u8d28\u56e0\u6570\u5206\u89e3\u5e76\u8fd4\u56de\u8d28\u56e0\u5b50\u96c6\u5408\n}\nll dis[N];\nint main ()\n{\n    ios::sync_with_stdio(false);srand(time(0));\n    cin >> n;ll t1,t2;\n    for (int i = 1;i <= n;i++) cin >> t1 >> t2,mp[t2].push_back({t1,i});\n    for (auto &t : mp)\n    {\n        ll kk = t.first;if (kk == 1) continue;\n        auto st = PR::get_fac(kk);\n        if (st.size() == 1)\n        {\n            for (auto &i : t.second) ans[i.second] = !(i.first % kk);\n            continue;\n        }\n        if (st.size() == 2)\n        {\n            ll x = *st.begin(),y = *st.rbegin();\n            for (auto &i : t.second)\n            {\n                ll c = i.first;int id = i.second;if (c % x == 0) {ans[id] = 1;continue;}\n                ll b = c % x * qpow(y,x - 2,x) % x;ans[id] = b * y <= c;\n            }\n            continue;\n        }\n        vector<ll> f(st.begin(),st.end());\n        int x = f[0];f.erase(f.begin());\n        for (int i = 0;i < x;i++) dis[i] = -1;\n        dis[0] = 0;priority_queue<pair<ll,int>> pq;pq.push({0,0});\n        while (!pq.empty())\n        {\n            auto nd = pq.top();pq.pop();int p = nd.second;if (nd.first != -dis[p]) continue;\n            for (auto &i : f)\n            {\n                int np = (p + i) % x;\n                if (dis[np] == -1 || dis[np] > dis[p] + i)\n                    dis[np] = dis[p] + i,pq.push({-dis[np],np});\n            }\n        }\n        for (auto &i : t.second) ans[i.second] = dis[i.first % x] <= i.first;\n    }\n    for (int i = 1;i <= n;i++) cout << (ans[i] ? \"YES\" : \"NO\") << endl;\n    return 0;   \n}\n```",
        "postTime": 1616817084,
        "uid": 92602,
        "name": "SIGSEGV",
        "ccfLevel": 0,
        "title": "CF986F Oppa Funcan Style Remastered \u9898\u89e3"
    },
    {
        "content": "\u8868\u793a\u5e76\u4e0d\u77e5\u9053\u697c\u4e0b\u662f\u600e\u4e48\u66b4\u529b\u5206\u89e3\u8fc7\u7684\u2026\u2026\u53cd\u6b63\u6211\u5199\u7684pollard-rho\u2026\u2026\n\n\u9996\u5148\u6211\u4eec\u8981\u627e\u7684\u662f\u7f6e\u6362\uff0c\u800c\u7f6e\u6362\u53ef\u4ee5\u5206\u89e3\u4e3a\u73af\uff0c\u4e00\u4e2a\u7f6e\u6362\u56de\u5230\u5355\u4f4d\u6392\u5217\u7684\u6b21\u6570\u5c31\u662f\u73af\u957f\u7684$lcm$\uff0c\u90a3\u4e48\u6211\u4eec\u76f8\u5f53\u4e8e\u8981\u6c42\u4e00\u7ec4$\\sum a_i=n$\u4e14$\\min a_i>1$\u4e14$lcm\\{a_i\\}|K$\uff08\u56e0\u4e3a\u8d70\u56de\u5355\u4f4d\u6392\u5217\u4e4b\u540e\u53ef\u4ee5\u5faa\u73af\u7684\u8d70\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8d70\u56de\u65f6\u95f4\u662f$K$\u7684\u7ea6\u6570\u5373\u53ef\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u60f3\uff0c\u65e2\u7136$a_i>1$\u5b83\u4eec\u7684$lcm$\u8fd8\u5f97\u662f$K$\u7684\u7ea6\u6570\uff0c\u663e\u7136\u6bcf\u4e2a$a_i$\u90fd\u5fc5\u987b\u6709$k$\u7684\u8d28\u56e0\u5b50\u3002\u5047\u8bbe\u6211\u4eec\u6c42\u51fa\u4e86\u4e00\u7ec4$\\sum a_i=n$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a$a_i$\u90fd\u6709$a_i=\\prod p_j^{k_j}$\uff0c\u5176\u4e2d$p_j$\u662f$K$\u7684\u67d0\u4e2a\u8d28\u56e0\u5b50\uff0c\u6362\u800c\u8a00\u4e4b\u5b83\u4e00\u5b9a\u80fd\u591f\u5199\u6210$xp_j$\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u6211\u4eec\u5e72\u8106\u5c31\u5c06\u5b83\u62c6\u4e3a$x$\u4e2a$p_j$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5f3a\u5236\u8ba9\u6bcf\u4e2a$a_i$\u90fd\u662f\u67d0\u4e2a$p_j$\uff0c\u8fd9\u6837\u7684\u8bdd\u663e\u7136$lcm$\u4ecd\u7136\u662f$K$\u7684\u7ea6\u6570\uff0c\u8fd9\u7531\u4e8e\u662f\u7b49\u4ef7\u7684\u53d8\u6362\u6240\u4ee5\u548c\u8fd8\u662f$n$\uff0c\u6bd5\u7adf\u6211\u4eec\u662f\u5728\u505a\u5224\u65ad\u5e76\u4e0d\u9700\u8981\u8003\u8651\u90a3\u4e48\u591a\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5224\u65ad$n$\u662f\u4e0d\u662f\u80fd\u88ab$\\{p_i\\}$\u901a\u8fc7\u4e00\u4e9b\u7cfb\u6570\u51d1\u51fa\u6765\uff0c\u5982\u679c$K$\u662f\u8d28\u6570\u90a3$n$\u5c31\u5fc5\u987b\u662f$K$\u7684\u500d\u6570\uff0c\u5426\u5219\u8003\u8651\u6700\u5c0f\u7684$p_0<=\\sqrt K$\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6a21$p_0$\u5269\u4f59\u7cfb\u4e0b\u8dd1\u4e00\u4e2a\u540c\u4f59\u7c7bbfs\uff08\u4ee5$\\{p_i\\}$\u4e3a\u8fb9\u7684\u6700\u77ed\u8def\uff09\uff0c\u5373$dis_i$\u8868\u793a\u6700\u5c0f\u80fd\u88ab\u8868\u793a\u51fa\u7684$\\%p_0=i$\u7684\u6570\uff0c\u663e\u7136\u5982\u679c$dis_{n\\%p_0}<=n$\u90a3\u4e48$n$\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u5728$dis_{n\\%p_0}$\u4e0a\u52a0\u4e00\u5806$p_0$\u51d1\u51fa\u6765\u3002\n\n\u7136\u800c$\\sqrt K$\u7684\u6700\u77ed\u8def\u8fd8\u662f\u8fc7\u4e0d\u53bb\uff0c\u4ed6\u53ef\u80fd\u4f1a\u51fa\u4e24\u4e2a$3e7$\u8d28\u6570\u7684\u4e58\u79ef\u7136\u540e\u5361\u7684\u98de\u8d77\u2026\u2026\u4f46\u662f\u8fd9\u6700\u574f\u60c5\u51b5\u4ec5\u662f\u4e24\u4e2a\u8d28\u6570\u7684\u60c5\u51b5\uff0c\u800c\u8fd9\u76f8\u5f53\u4e8e\u5224\u65ad\u7ebf\u6027\u65b9\u7a0b$px+qy=n$\u662f\u5426\u5b58\u5728$x>=0,y>=0$\u7684\u89e3\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u6269\u6b27\u6c42\u51fa\u4e00\u4e2a$>=0$\u7684\u6700\u5c0f\u7684$x$\uff0c\u7136\u540e\u8fd9\u4e2a\u65f6\u5019$y$\u4e00\u5b9a\u662f\u6700\u5927\u7684\uff0c\u5224\u65ad$y$\u662f\u5426$>=0$\u5373\u53ef\u3002\u4e8e\u662f\u590d\u6742\u5ea6\u5c31\u662f$O(T\\sqrt[3]K)$\u4e86\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n#define ll long long\n#define abs(_o) ((_o < 0) ? -(_o) : _o)\n#define double long double\nusing namespace std;\nnamespace ywy {\n\tinline ll gsc(ll a, ll b, ll p) {\n\t    a %= p;\n\t    b %= p;\n\t    if (a <= 1000000000 && b <= 1000000000)\n\t        return ((a * b) % p);\n\t    ll cjr = (double)a * b / p;\n\t    ll res = a * b - cjr * p;\n\t    res %= p;\n\t    res += p;\n\t    res %= p;\n\t    return (res);\n\t}\n\tvoid exgcd(ll a, ll b, ll &x, ll &y) {\n\t    if (!b) {\n\t        x = 1;\n\t        y = 0;\n\t        return;\n\t    }\n\t    ll x1, y1;\n\t    exgcd(b, a % b, x1, y1);\n\t    x = y1;\n\t    y = x1 - (a / b) * y1;\n\t}\n\tinline ll mi(ll a, ll b, ll p) {\n\t    ll ans = 1, tmp = a;\n\t    while (b) {\n\t        if (b & 1)\n\t            ans = gsc(ans, tmp, p);\n\t        tmp = gsc(tmp, tmp, p);\n\t        b >>= 1;\n\t    }\n\t    return (ans);\n\t}\n\tinline ll Rand() {\n\t    ll a = rand(), b = rand(), c = rand(), d = rand();\n\t    return ((a << 48) | (b << 32) | (c << 16) | d);\n\t}\n\tvector<ll> vec;\n\tint pri[10] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29 };\n\tinline int check(ll n) {\n\t    if (n == 2 || n == 3 || n == 5 || n == 7)\n\t        return (1);\n\t    if (n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0)\n\t        return (0);\n\t    for (register int i = 0; i < 10; i++) {\n\t        if (n == pri[i])\n\t            return (1);\n\t        ll tmp = n - 1;\n\t        while (1) {\n\t            ll cjr = mi(pri[i], tmp, n);\n\t            if (cjr == n - 1)\n\t                break;\n\t            if (cjr != 1)\n\t                return (0);\n\t            if (tmp & 1)\n\t                break;\n\t            tmp >>= 1;\n\t        }\n\t    }\n\t    return (1);\n\t}\n\tinline ll gcd(ll a, ll b) {\n\t    while (b) {\n\t        ll r = a % b;\n\t        a = b;\n\t        b = r;\n\t    }\n\t    return (a);\n\t}\n\tinline ll rho(ll n, int c) {\n\t    ll x = Rand(), y = x, k = 2;\n\t    while (1) {\n\t        ll ji = 1;\n\t        for (register int i = 1; i <= k; i++) x = (gsc(x, x, n) + c) % n, ji = gsc(ji, abs(y - x), n);\n\t        ll g = gcd(ji, n);\n\t        if (g > 1)\n\t            return (g);\n\t        y = x;\n\t        k <<= 1;\n\t    }\n\t}\n\tinline void pollard(ll n, int c) {\n\t    if (n == 1)\n\t        return;\n\t    if (check(n)) {\n\t        vec.push_back(n);\n\t        return;\n\t    }\n\t    while (1) {\n\t        ll cjr = rho(n, c);\n\t        c--;\n\t        if (cjr != n) {\n\t            while (n % cjr == 0) n /= cjr;\n\t            ll g = gcd(n, cjr);\n\t            while (n % g == 0 && g != 1) n /= g;\n\t            pollard(cjr, c);\n\t            pollard(n, c);\n\t            return;\n\t        }\n\t    }\n\t}\n\tll dis[2000001];\n\tint que[5000001];\n\tunsigned char bv[2000001];\n\ttypedef struct _n {\n\t    int id;\n\t    ll n;\n\t    ll k;\n\t    friend bool operator<(const _n &a, const _n &b) { return (a.k < b.k); }\n\t} node;\n\tnode memchi[20001];\n\tunsigned char anss[20001];\n\tvoid ywymain() {\n\t    srand(19260817);\n\t    int q;\n\t    cin >> q;\n\t    for (register int i = 1; i <= q; i++) {\n\t        memchi[i].id = i;\n\t        cin >> memchi[i].n >> memchi[i].k;\n\t    }\n\t    sort(memchi + 1, memchi + 1 + q);\n\t    for (register int x = 1; x <= q; x++) {\n\t        int cjr = x;\n\t        while (cjr < q && memchi[cjr + 1].k == memchi[x].k) cjr++;\n\t        if (memchi[x].k == 1) {\n\t            x = cjr;\n\t            continue;\n\t        }\n\t        vec.clear();\n\t        pollard(memchi[x].k, 19260817);\n\t        sort(vec.begin(), vec.end());\n\t        if (vec.size() == 1) {\n\t            for (register int i = x; i <= cjr; i++) {\n\t                if (memchi[i].n % memchi[i].k == 0)\n\t                    anss[memchi[i].id] = 1;\n\t            }\n\t            x = cjr;\n\t            continue;\n\t        }\n\t        if (vec.size() == 2) {\n\t            ll X, y;\n\t            ll p = vec[1], q = vec[0];\n\t            exgcd(p, q, X, y);\n\t            X %= q;\n\t            X += q;\n\t            X %= q;\n\t            for (register int i = x; i <= cjr; i++) {\n\t                ll dx = gsc(X, memchi[i].n, q), dy = memchi[i].n - dx * p;\n\t                if (dy >= 0)\n\t                    anss[memchi[i].id] = 1;\n\t            }\n\t            x = cjr;\n\t            continue;\n\t        }\n\t        for (register int i = 0; i < vec[0]; i++) dis[i] = 0x7f7f7f7f7f7f7f7f;\n\t        int head = 0, tail = 1;\n\t        que[0] = 0;\n\t        dis[0] = 0;\n\t        do {\n\t            int me = que[head];\n\t            head++;\n\t            bv[me] = 0;\n\t            for (register int i = 1; i < vec.size(); i++) {\n\t                int dst = (me + vec[i]) % vec[0];\n\t                if (dis[me] + vec[i] < dis[dst]) {\n\t                    dis[dst] = dis[me] + vec[i];\n\t                    if (!bv[dst])\n\t                        bv[dst] = 1, que[tail] = dst, tail++;\n\t                }\n\t            }\n\t        } while (head < tail);\n\t        for (register int i = x; i <= cjr; i++) {\n\t            if (dis[memchi[i].n % vec[0]] <= memchi[i].n)\n\t                anss[memchi[i].id] = 1;\n\t        }\n\t        x = cjr;\n\t    }\n\t    for (register int i = 1; i <= q; i++)\n\t        if (anss[i])\n\t            printf(\"YES\\n\");\n\t        else\n\t            printf(\"NO\\n\");\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1559132045,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF986F \u3010Oppa Funcan Style Remastered\u3011"
    },
    {
        "content": "\u9996\u5148\u628a\u8d28\u56e0\u6570\u7528 Pollard-Rho \u5206\u89e3\u51fa\u6765\u4e0d\u8bb2\u3002\n\n$k$ \u5f88\u5927\uff0c\u5c1d\u8bd5\u6570\u636e\u5206\u6cbb\u3002\u8bb0 $k$ \u7684\u8d28\u56e0\u5b50\u6570\u91cf\u4e3a $f$\u3002\n\n- $f=1$ \u65f6\u5224\u65ad $[k\\mid n]$ \u5373\u53ef\u3002\n- $f=2$ \u65f6\uff0c\u5373\u6c42 $ax+by=n$ \u662f\u5426\u6709\u975e\u8d1f\u6574\u6570\u89e3\uff0c\u5176\u4e2d $a$\u3001$b$ \u662f $k$ \u7684\u4e24\u4e2a\u8d28\u56e0\u5b50\u3002\n\n> \u53ef\u4ee5 ExGCD \u6c42\u51fa $ax+by=\\gcd(a,b)$ \u7684\u4e00\u7ec4\u7279\u89e3 $(x_0,y_0)$\uff0c\u6b64\u65f6\u8be5\u65b9\u7a0b\u7684\u901a\u89e3\u4e3a $x=x_0 + t\\cdot d_x, y = y_0 - t\\cdot d_y$\uff0c\u5176\u4e2d $d_x=b/\\gcd(a,b)$\uff0c$d_y=a/\\gcd(a,b)$\u3002\n>\n> \u65b9\u7a0b\u4e58\u4e0a $n/\\gcd(a,b)$ \u53d8\u4e3a\u539f\u65b9\u7a0b\uff0c\u5219\u7279\u89e3\u7684\u503c\u4e5f\u4e58\u4e0a $n/\\gcd(a,b)$\uff0c\u800c $d_x,d_y$ \u4e0d\u53d8\u3002 \u6240\u4ee5\u53ef\u4ee5\u6c42\u51fa\u539f\u65b9\u7a0b\u7684\u901a\u89e3 $x=x_1 + t\\cdot d_x, y = y_1 + t\\cdot d_y$\u3002\u53d6 $x$ \u4e3a\u6700\u5c0f\u6574\u6570\u89e3\uff0c\u5219 $y$ \u6709\u6700\u5927\u503c\uff0c\u5224\u65ad $y$ \u662f\u5426 $\\ge 0$ \u5373\u53ef\u3002\n\n- $f\\ge 3$ \u65f6\u4e0d\u8db3\u4ee5\u7528\u6b63\u5e38\u7684\u65b9\u6cd5\u6c42\u89e3\u3002\u8003\u8651\u4e0d\u5230 $k$ \u662f\u8d28\u56e0\u6570\u76f8\u4e58\uff0c\u6709\uff1a\u6700\u5c0f\u7684\u8d28\u56e0\u6570 $F_0\\le k^{1/3}$\u3002\u4e8e\u662f\u53ef\u4ee5**\u540c\u4f59\u6700\u77ed\u8def**\u6c42\u7528\u5176\u4f59\u8d28\u56e0\u5b50\u51d1\u51fa\u6a21 $F_0$ \u4e3a $d$ \u7684\u6700\u5c0f\u6574\u6570\uff0c\u5373\u53ef\u5224\u5b9a\u80fd\u5426\u5728 $n$ \u4ee5\u5185\u51d1\u51fa\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ms(x, v) memset(x, v, sizeof(x))\n#define il __attribute__((always_inline)) static\n#define U(i,l,r) for(int i(l),END##i(r);i<=END##i;++i)\n#define D(i,r,l) for(int i(r),END##i(l);i>=END##i;--i)\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef __int128 ll;\ntemplate <class T> using BS = basic_string<T>;\n\n//const int SZ(1 << 23);\n//unsigned char buf[SZ], *S, *Q;\n//#define getchar() ((S==Q)&&(Q=buf+fread(S=buf,1,SZ,stdin)),S==Q?EOF:*S++)\ntemplate <class T> void rd(T& s) {\n\tint c = getchar(); T f = 1; s = 0;\n\twhile (!isdigit(c)) { if (c == '-') f = -1; c = getchar(); }\n\twhile (isdigit(c)) { s = s * 10 + (c ^ 48); c = getchar(); }\n\ts *= f;\n}\ntemplate <class T, class... Y> void rd(T& x, Y&... y) { rd(x), rd(y...); }\n#define meow(...) fprintf(stderr, __VA_ARGS__)\n#define Assert(e, v) if (!(e)) exit(v);\n\n// \u540c\u4f59\u6700\u77ed\u8def\u6c42\u89e3\u4e0d\u5b9a\u65b9\u7a0b\n\nnamespace PR {\n\tll quick_pow(ll x, ll p, ll mod) {  // ???\n\t  ll ans = 1;\n\t  while (p) {\n\t    if (p & 1) ans = ans * x % mod;\n\t    x = x * x % mod;\n\t    p >>= 1;\n\t  }\n\t  return ans;\n\t}\n\t\n\tbool Miller_Rabin(ll p) {  // ????\n\t  if (p < 2) return 0;\n\t  if (p == 2) return 1;\n\t  if (p == 3) return 1;\n\t  ll d = p - 1, r = 0;\n\t  while (!(d & 1)) ++r, d >>= 1;  // ?d?????\n\t  for (ll k = 0; k < 10; ++k) {\n\t    ll a = rand() % (p - 2) + 2;\n\t    ll x = quick_pow(a, d, p);\n\t    if (x == 1 || x == p - 1) continue;\n\t    for (int i = 0; i < r - 1; ++i) {\n\t      x = x * x % p;\n\t      if (x == p - 1) break;\n\t    }\n\t    if (x != p - 1) return 0;\n\t  }\n\t  return 1;\n\t}\n\t\n\tll absll(ll x) { return x < 0 ? -x : x; }\n\tll Pollard_Rho(ll x) {\n\t  ll s = 0, t = 0;\n\t  ll c = (ll)rand() % (x - 1) + 1;\n\t  int step = 0, goal = 1;\n\t  ll val = 1;\n\t  for (goal = 1;; goal *= 2, s = t, val = 1) {  // ????\n\t    for (step = 1; step <= goal; ++step) {\n\t      t = ((__int128)t * t + c) % x;\n\t      val = (__int128)val * absll(t - s) % x;\n\t      if ((step % 127) == 0) {\n\t        ll d = __gcd(val, x);\n\t        if (d > 1) return d;\n\t      }\n\t    }\n\t    ll d = __gcd(val, x);\n\t    if (d > 1) return d;\n\t  }\n\t}\n\t\n\tvector<ll> f;\n\tvoid fac(ll x) {\n\t  if (x < 2) return;\n\t  if (Miller_Rabin(x)) {              // ??x???\n\t  \tf.push_back(x);\n//\t    max_factor = max(max_factor, x);  // ????\n\t    return;\n\t  }\n\t  ll p = x;\n\t  while (p >= x) p = Pollard_Rho(x);  // ?????\n\t  while ((x % p) == 0) x /= p;\n\t  fac(x), fac(p);  // ??????x?p\n\t}\n}\n\nvector<ll> getFac(ll x) {\n\tvector<ll> &f = PR::f;\n\tf.clear();\n\tPR::fac(x);\n\tsort(f.begin(), f.end());\n\tf.erase(unique(f.begin(), f.end()), f.end());\n\treturn f;\n}\nll exgcd(ll a, ll b, ll &x, ll &y) {\n\tif (!b) {\n\t\tx = 1; y = 0;\n\t\treturn a;\n\t}\n\tll d = exgcd(b, a % b, y, x);\n\ty = y - a / b * x;\n\treturn d;\n}\n\nmap<ll, vector<pair<ll, int>>> qr;\n\nconst int N = 100005;\nbool ans[N];\n\nvoid solve(ll k, vector<pair<ll, int>> &vec) {\n\tif (k == 1) {\n\t\treturn;\n\t}\n\tvector<ll> f = getFac(k);\n\tif (f.size() == 1) {\n\t\tfor (auto [n, i] : vec)\n\t\t\tans[i] = !(n % f[0]);\n\t\treturn;\n\t} else if (f.size() == 2) {\n\t\tll x0, y0, g = exgcd(f[0], f[1], x0, y0);\n\t\tll dx = f[1] / g, dy = f[0] / g;\n\t\tfor (auto [n, i] : vec) {\n\t\t\tif (n % g) continue;\n\t\t\tll x = x0 * (n / g);\n\t\t\t((x %= dx) += dx) %= dx;\n\t\t\tll by = n - f[0] * x;\n\t\t\tif (by >= 0)\n\t\t\t\tans[i] = 1;\n\t\t}\n\t\treturn;\n\t}\n\t\n\tll dis[N]; memset(dis, 0x3f, 16 * (f[0] + 2));\n\tstatic BS<pair<int, ll>> g[N]; static bool vis[N];\n\tU (i, 0, f[0]) g[i].clear(), vis[i] = 0;\n\t\n\tdis[0] = 0;\n\tfor (ll i : f) if (i != f[0]) {\n\t\tU (j, 0, f[0] - 1)\n\t\t\tg[j].push_back({(j + i) % f[0], i});\n\t}\n\tpriority_queue<pair<ll, int>> pq; pq.push({0, 0});\n\twhile (pq.size()) {\n\t\tauto [d, u] = pq.top(); pq.pop(); d = -d;\n\t\tif (vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor (auto &[v, w] : g[u]) if (dis[v] > d + w) {\n\t\t\tdis[v] = dis[u] + w;\n\t\t\tpq.push({-dis[v], v});\n\t\t}\n\t}\n\t\n\tfor (auto [n, i] : vec)\n\t\tans[i] = (n >= dis[n % f[0]]);\n}\n\nint main() {\n//\tfreopen(\"arrebol.in\", \"r\", stdin);\n\t\n\tint T; rd(T);\n\tU (i, 1, T) {\n\t\tll n, k; rd(n, k);\n\t\tqr[k].push_back({n, i});\n\t}\n\tfor (auto &[k, vec] : qr)\n\t\tsolve(k, vec);\n\tU (i, 1, T)\n\t\tputs(ans[i] ? \"YES\" : \"NO\");\n}\n```",
        "postTime": 1683172428,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u6284\u9898\u89e3] CF986F"
    },
    {
        "content": "## \u601d\u8def\n\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u53ef\u4ee5\u53ea\u8003\u8651\u8d28\u56e0\u5b50\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u53c8\u770b\u5230 $k$ \u7684\u79cd\u7c7b\u4e0d\u591a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u5bf9\u4e8e\u6bcf\u4e00\u79cd $k$ \u5904\u7406\u3002\n\n\u5148\u7ed9 $k$ \u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5047\u88c5\u4ece\u5c0f\u5230\u5927\u6709\u8d28\u56e0\u5b50 $p_1\\cdots p_l$\u3002\n\n\u7136\u540e~~\u53ef\u80fd\u662f\u5957\u8def\u5427~~\uff0c\u5728\u6a21 $p_1$ \u4e0b\u8fdb\u884c\u540c\u4f59\u6700\u77ed\u8def\u7684\u6c42\u89e3\uff0c\u5373\u6c42\u51fa $d_i$ \u8868\u793a\u80fd\u8868\u793a\u51fa\u7684 $\\bmod\\ p_1=i$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u629b\u5f00\u8d28\u56e0\u5b50\u5206\u89e3\u7684\u590d\u6742\u5ea6\u4e0d\u8c08\u590d\u6742\u5ea6\u4e3a $O((\\sum p_1\\log^2n)+n)$\u3002\n\n\u5982\u679c\u7279\u5224\u4e86\u53ea\u6709\u4e00\u4e2a\u8d28\u56e0\u5b50\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u662f $O(\\omega \\sqrt k\\log^2n+n)$\u3002\n\n\u4f46\u662f\u6211\u6ca1\u6709\u60f3\u5230\u590d\u6742\u5ea6\u8fd8\u6709\u95ee\u9898\u8981\u52a0\u4e0a\u6211\u4e00\u5f00\u59cb\u5c31\u5199\u597d\u7684\u6709\u4e24\u4e2a\u8d28\u56e0\u5b50\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f $O(\\omega \\sqrt[3] k\\log^2n+n)$\u3002\n\n\u751a\u81f3\u8fd8\u5b66\u4e86 Pallard_Rho \u7b80\u76f4\u6d6a\u8d39\u65f6\u95f4\u3002\u3002\u3002\n\n## \u4ee3\u7801\n\n```cpp\nusing mystd::LL;\nusing mystd::i128;\nint T, cnt_k;\nstd::map<LL, int> idk;\nstd::vector<std::pair<LL, int> > vec[51]; \nbool ans[10005];\n\nmain() {\n  std::cin.tie(0)->sync_with_stdio(0);\n  std::cin >> T;\n  for (int i(1); i <= T; ++i) {\n    LL n, k;\n    std::cin >> n >> k;\n    if (!idk[k]) idk[k] = ++cnt_k;\n    vec[idk[k]].emplace_back(n, i);\n  }\n  \n  for (auto things : idk) {\n    LL k(things.first);\n    int id(things.second);\n    \n    if (k == 1) continue;\n    \n    std::vector<LL> fac;\n    \n    fac = mystd::fac(k);\n    sort(fac.begin(), fac.end());\n    fac.erase(unique(fac.begin(), fac.end()), fac.end());\n    \n    \n    if (fac.size() == 1) {\n      for (auto i : vec[id]) \n        ans[i.second] = i.first % fac[0] == 0;\n      continue; \n    }\n    \n    if (fac.size() == 2) {\n      const LL a(fac[0]), b(fac[1]);\n      for (auto i : vec[id]) {\n        i128 x, y;\n        if (i.first > a * b - a - b) {\n          ans[i.second] = true; continue;\n        }\n        mystd::exgcd(a, b, x, y);\n        x *= i.first, y *= i.first;\n        assert(a * x + b * y == i.first);\n        if (x < 0) {\n          i128 tmp((-x + b - 1) / b);\n          x += tmp * b, y -= tmp * a;\n        }\n        if (y < 0) {\n          i128 tmp((-y + a - 1) / a);\n          y += tmp * a, x -= tmp * b;\n        }\n        ans[i.second] = x >= 0 && y >= 0;\n      }\n      continue;\n    }\n    \n    std::vector<LL> d(fac[0], LL(1e18));\n    std::priority_queue<std::pair<LL, LL>,\n      std::vector<std::pair<LL, LL>>, \n      std::greater<std::pair<LL, LL>>> Q;\n    Q.emplace(d[0] = 0, 0);\n    \n    while (Q.size()) {\n      auto t(Q.top());\n      Q.pop();\n      if (d[t.second] != t.first) continue;\n      for (LL i : fac) {\n        LL v((i + t.second) % fac[0]);\n        if (d[v] > t.first + i)\n          Q.emplace(d[v] = t.first + i, v);\n      }\n    }\n    \n    for (auto i : vec[id]) \n      ans[i.second] = d[i.first % fac[0]] <= i.first;\n  }\n  \n  for (int i(1); i <= T; ++i) \n    std::cout << (ans[i] ? \"YES\" : \"NO\") << \"\\n\";\n}\n```",
        "postTime": 1683117853,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution]Oppa Funcan Style Remastered"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/986/problem/F) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF986F)\n\n~~\u611f\u8c22\u6b64\u9898\u6559\u4f1a\u6211\u4e00\u4e2a\u4e1c\u897f\u53eb\u505a\u540c\u4f59\u6700\u77ed\u8def\uff08\u5927\u96fe~~\n\n\u9996\u5148\u8fd9\u4e2a\u4e0d\u540c $k$ \u7684\u4e2a\u6570 $\\le 50$ \u8fd9\u4e2a\u6761\u4ef6\u663e\u7136\u662f\u8ba9\u6211\u4eec\u5bf9\u6bcf\u4e2a $k$ \u8fdb\u884c\u4e00\u904d\u9884\u5904\u7406\u5e76\u5feb\u901f\u6c42\u51fa\u7b54\u6848\u3002\u600e\u4e48\u9884\u5904\u7406\u5462\uff1f\u9996\u5148\u8003\u8651\u4e00\u4e2a\u975e\u5e38 trivial \u7684\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u6240\u6709 $k$ \u7684\u975e\u8d28\u6570\u56e0\u5b50\u663e\u7136\u53ef\u4ee5\u8868\u793a\u6210\u8d28\u56e0\u5b50\u7684\u548c\u5bf9\u5427\uff0c\u6240\u4ee5\u4e00\u4e2a\u6570\u80fd\u591f\u8868\u793a\u6210 $k$ \u7684\u82e5\u5e72\u4e2a\u8d28\u56e0\u5b50\u7684\u548c\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u80fd\u591f\u8868\u793a\u6210 $k$ \u7684\u82e5\u5e72\u4e2a\u8d28\u56e0\u5b50\u7684\u548c\u3002\u56e0\u6b64\u8003\u8651\u5148\u5bf9 $k$ \u8fdb\u884c\u4e00\u904d\u8d28\u56e0\u6570\u5206\u89e3\u2014\u2014\u53ef\u4ee5\u4f7f\u7528 PR \u7b97\u6cd5\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\uff0c\u6bcf\u6b21 $\\sqrt{k}$ \u5730\u5206\u89e3\u4f1a\u8d85\u65f6\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\uff0c\u4e4b\u524d\u6691\u5047\u67d0\u573a\u6a21\u62df\u8d5b\u51fa\u73b0\u8fc7\uff0c\u5c31\u662f\u663e\u7136\u6211\u4eec\u53ea\u4f1a\u7528\u5230 $\\le\\sqrt{k}$ \u7684\u6240\u6709**\u8d28\u56e0\u5b50**\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u9884\u5904\u7406\u51fa $\\le \\sqrt{10^{15}}$ \u7684\u6240\u6709\u8d28\u6570\uff0c\u7136\u540e\u6bcf\u6b21\u5206\u89e3\u904d\u5386\u4e00\u904d\u8fd9\u4e2a\u8d28\u6570\u96c6\u5408\u5373\u53ef\uff0c\u8fd9\u6837\u5206\u89e3\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u5230 $\\sqrt{10^{15}}\u00b7\\dfrac{1}{\\ln 10^{15}}\u00b750$\u3002\n\n\u8003\u8651\u600e\u6837\u8ba1\u7b97\u7b54\u6848\uff0c\u5982\u679c $k$ \u672c\u8eab\u5c31\u662f\u8d28\u6570\u90a3\u663e\u7136\u53ea\u6709 $k$ \u7684\u500d\u6570\u80fd\u591f\u8868\u793a\u6210 $k$ \u7684 $\\ne 1$ \u7684\u8d28\u56e0\u5b50\u4e4b\u548c\u3002\u76f4\u63a5\u5224\u65ad\u4e00\u4e0b $n\\bmod k=0$ \u662f\u5426\u6210\u7acb\u5373\u53ef\u3002\u5982\u679c $k$ \u6709\u4e24\u4e2a\u8d28\u56e0\u5b50\uff0c\u90a3\u4e48\u5047\u8bbe $k$ \u4e24\u4e2a\u8d28\u56e0\u5b50\u5206\u522b\u4e3a $x,y$\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u68c0\u9a8c\u662f\u5426 $\\exists a,b\\in[0,\\infty)\\cap\\mathbb{Z},s.t.ax+by=n$\uff0c\u663e\u7136\u5fc5\u987b\u6709 $by\\equiv n\\pmod{x}$\uff0c\u90a3\u4e48 $b$ \u7684\u6700\u5c0f\u503c $b_{\\min}=n\u00b7y^{-1}\\bmod x$\uff0c\u68c0\u9a8c\u4e00\u4e0b\u662f\u5426\u6709 $b_{\\min}\u00b7y\\le n$ \u5373\u53ef\u3002\n\n\u5982\u679c $k$ \u8d28\u56e0\u5b50\u4e2a\u6570 $\\ge 3$\uff0c\u90a3\u4e48\u5047\u8bbe $k$ \u7684\u8d28\u56e0\u5b50\u5206\u522b\u4e3a $p_1,p_2,\\cdots,p_m$\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u68c0\u9a8c\u662f\u5426 $\\exists x_1,x_2,\\cdots,x_m\\in[0,\\infty)\\cap\\mathbb{Z},s.t.\\sum\\limits_{i=1}^mp_ix_i=n$\uff0c\u76f4\u63a5\u68c0\u9a8c\u8c8c\u4f3c\u6709\u70b9\u68d8\u624b\uff0c\u4e0d\u8fc7\u4e0d\u96be\u53d1\u73b0\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u5bf9\u4e8e\u4efb\u610f $x_i$ \u53ca $n$\uff0c\u5982\u679c $n$ \u53ef\u884c\uff0c\u90a3\u4e48 $n+zp_i$ \u4e5f\u53ef\u884c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6240\u6709 $j\\in[0,p_i)$\uff0c\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u754c $lim_j$\uff0c\u6ee1\u8db3\u6240\u6709 $\\bmod x_i=j$ \u7684\u6570\u5f53\u4e2d\uff0c\u6240\u6709 $\\ge lim_j$ \u7684\u6570\u90fd\u7b26\u5408\u8981\u6c42\uff0c\u6240\u6709 $<lim_j$ \u7684\u6570\u90fd\u7b26\u5408\u8981\u6c42\uff0c\u8003\u8651\u600e\u6837\u6c42 $lim_j$\uff0c\u663e\u7136 $lim_0=0$\uff0c\u800c\u5bf9\u4e8e\u6240\u6709 $j\\in[0,x_i),t\\in[1,m]$\uff0c\u663e\u7136 $lim_{(j+p_t)\\bmod p_1}\\le lim_j+p_t$\uff0c\u8fd9\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u5f62\u5f0f\uff0c\u7528 dijkstra \u8f6c\u79fb\u5373\u53ef\u3002\u5e76\u4e14\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e $k\\le 10^{15}$\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b $k$ \u6700\u5c0f\u7684\u8d28\u56e0\u5b50\u5fc5\u7136 $\\le 10^5$\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9 $k$ \u6700\u5c0f\u8d28\u56e0\u5b50\u8dd1\u540c\u4f59\u6700\u77ed\u8def\u5373\u53ef\u5b9e\u73b0 $10^5\\log 10^5\u00b750$ \u7684\u590d\u6742\u5ea6\u3002\n\n~~\u8bdd\u8bf4\u8fd9\u573a\u7684 D\u3001E\uff0c\u5c24\u5176\u662f\u90a3\u4e2a\u6076\u5fc3\u65e0\u6bd4\u7684 D\u2026\u2026\u52fe\u8d77\u4e86\u8fdc\u53e4\u56de\u5fc6~~\n\n```cpp\nconst int MAXN=1e4;\nconst int MAXK=1e5;\nconst int MAXV=3.163e7;\nint qpow(int x,int e,int mod){\n\tint ret=1;\n\tfor(;e;e>>=1,x=1ll*x*x%mod) if(e&1) ret=1ll*ret*x%mod;\n\treturn ret;\n}\nint qu,pr[MAXV/8+5],prcnt,vis[MAXV+5];\nvoid sieve(int n){\n\tfor(int i=2;i<=n;i++){\n\t\tif(!vis[i]) pr[++prcnt]=i;\n\t\tfor(int j=1;j<=prcnt&&pr[j]*i<=n;j++){\n\t\t\tvis[pr[j]*i]=1;if(i%pr[j]==0) break;\n\t\t}\n\t}\n}\nint res[MAXN+5];\nmap<ll,vector<pair<ll,int> > > mpv;\nvector<ll> decomp(ll v){\n\tvector<ll> ret;\n\tfor(int i=1;i<=prcnt;i++) if(v%pr[i]==0){\n\t\tret.pb(pr[i]);\n\t\twhile(v%pr[i]==0) v/=pr[i];\n\t} if(v>1) ret.pb(v);\n\treturn ret;\n}\nll dis[MAXK+5];\nint main(){\n\tsieve(MAXV);scanf(\"%d\",&qu);\n\tfor(int i=1;i<=qu;i++){\n\t\tll n,k;scanf(\"%lld%lld\",&n,&k);\n\t\tif(k!=1) mpv[k].pb(mp(n,i));\n\t}\n\tfor(auto it:mpv){\n\t\tll v=it.fi;vector<pair<ll,int> > qv=it.se;\n\t\tvector<ll> pr=decomp(v);\n\t\tif(pr.size()==1){\n\t\t\tfor(pair<ll,int> p:qv) res[p.se]=(p.fi%pr[0]==0);\n\t\t} else if(pr.size()==2){\n\t\t\tll x=pr[0],y=pr[1],ivy=qpow(y%x,x-2,x);\n\t\t\tfor(pair<ll,int> p:qv){\n\t\t\t\tint bmin=1ll*(p.fi%x)*ivy%x;\n\t\t\t\tres[p.se]=(p.fi>=1ll*bmin*y);\n\t\t\t}\n\t\t} else {\n\t\t\tint x=pr[0];memset(dis,63,sizeof(dis));dis[0]=0;\n\t\t\tpriority_queue<pair<ll,int>,vector<pair<ll,int> >,greater<pair<ll,int> > > q;\n\t\t\tq.push(mp(0,0));\n\t\t\twhile(!q.empty()){\n\t\t\t\tpair<ll,int> p=q.top();q.pop();\n\t\t\t\tint cur=p.se;\n\t\t\t\tfor(int i=1;i<pr.size();i++){\n\t\t\t\t\tif(dis[(cur+pr[i])%x]>dis[cur]+pr[i]){\n\t\t\t\t\t\tdis[(cur+pr[i])%x]=dis[cur]+pr[i];\n\t\t\t\t\t\tq.push(mp(dis[(cur+pr[i])%x],(cur+pr[i])%x));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(pair<ll,int> p:qv) res[p.se]=(p.fi>=dis[p.fi%x]);\n\t\t}\n\t}\n\tfor(int i=1;i<=qu;i++) printf(\"%s\\n\",(res[i])?\"YES\":\"NO\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1632300455,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF986F Oppa Funcan Style Remastered"
    }
]