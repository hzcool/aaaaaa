[
    {
        "content": "\u65e2\u7136 $q\\leq 5e4$ \u5f53\u7136\u662f $O(nq)$ \u76f4\u63a5\u8fc7\u554a\u3002\n\n\u5f00\u73a9\u7b11\u7684\uff0c\u4e0d\u8fc7\u66b4\u529b\u786e\u5b9e\u80fd\u8fc7\u3002\n\n\u4e0b\u9762\u4ecb\u7ecd\u590d\u6742\u5ea6\u6b63\u786e\u7684\u65b9\u6cd5\uff1aSegment Tree Beats\n\nCF \u4e0a\u5b98\u65b9\u9898\u89e3\u597d\u50cf\u662f $O(n\\sqrt n\\log n)$ \u7684\u5206\u5757\uff0c\u4e0d\u8fc7\u8fd9\u9898\u5b8c\u5168\u53ef\u4ee5\u7528\u5409\u53f8\u673a\u7ebf\u6bb5\u6811\u8fc7\u3002\n\n[\u66f4\u677f\u5b50\u7684\u9898](https://vjudge.net/problem/HDU-5306)\n\n[\u677f\u5b50\u9898](https://www.luogu.com.cn/problem/P6242)\n\n\u5982\u679c\u6ca1\u5b66\u8fc7\u5409\u53f8\u673a\u7ebf\u6bb5\u6811\u7684\u8bdd\u53ef\u4ee5\u53bb\u4e0a\u9762\u4e24\u9053\u9898\u5b66\u5b66\uff08\u4f1a\u7b2c\u4e00\u9898\u5c31\u53ef\u4ee5\u505a\u8fd9\u9053\u9898\u4e86\uff09\uff0c\u4ee5\u4e0b\u5047\u5b9a\u5927\u5bb6\u90fd\u4f1a\u4e86\u3002\n\n\u6b64\u9898\u8981\u6c42\u6211\u4eec\u5e72\u8fd9\u4e24\u4ef6\u4e8b\uff1a\n\n+ \u533a\u95f4\u6dfb\u52a0\u5143\u7d20\n\n+ \u533a\u95f4\u6c42\u8d21\u732e\u548c\n\n\u9996\u5148\u6211\u4eec\u5f00\u4e24\u9897\u7ebf\u6bb5\u6811\uff0c\u5206\u522b\u7ef4\u62a4\u6b63\u6570\u548c\u8d1f\u6570\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n\u533a\u95f4\u52a0\u5143\u7d20\u76f8\u5f53\u4e8e\u533a\u95f4\u53d6 $\\min$ \uff0c\u5e38\u89c4\u64cd\u4f5c\u3002\n\n\u95ee\u9898\u662f\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u56e0\u4e3a\u53ea\u6709\u6b63\u6216\u8d1f\u6570\u7684\u96c6\u5408\u662f\u6ca1\u6709\u8d21\u732e\u7684\u3002\n\n\u6211\u7684\u60f3\u6cd5\u662f\u518d\u5f00\u4e24\u9897\u7ebf\u6bb5\u6811\u7edf\u8ba1\u6709\u8d21\u732e\u7684\u96c6\u5408\u3002\n\n\u5728\u67d0\u4e2a\u96c6\u5408\u4ece\u65e0\u8d21\u732e\u5230\u6709\u8d21\u732e\u65f6\uff0c\u5c31\u628a\u5b83\u7684\u4fe1\u606f\u642c\u5230\u7edf\u8ba1\u7b54\u6848\u7684\u7ebf\u6bb5\u6811\u91cc\uff0c\u6700\u540e\u5728\u8fd9\u9897\u7ebf\u6bb5\u6811\u91cc\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u5224\u65ad\u67d0\u4e2a\u96c6\u5408\u4ece\u65e0\u8d21\u732e\u5230\u6709\u8d21\u732e\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u65b9\u6cd5\uff1a\u5f00\u4e24\u4e2a set \u5b58\u50a8\u6ca1\u6709\u6b63\u6570\u6216\u8d1f\u6570\u7684\u96c6\u5408\u7f16\u53f7\uff0c\u5728\u67d0\u4e2a\u533a\u95f4\u63d2\u6570\u65f6\u904d\u5386 set \u4e2d\u5728\u6b64\u533a\u95f4\u5185\u7684\u6240\u6709\u96c6\u5408\u5e76\u5220\u9664\uff0c\u5982\u679c\u6b63\u8d1f\u90fd\u88ab\u5220\u4e86\u5c31\u7edf\u8ba1\u4fe1\u606f\u5373\u53ef\u3002\n\n\u4e00\u4e2a\u96c6\u5408\u53ea\u4f1a\u88ab\u5220\u9664\u4e24\u6b21\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u4e0d\u5f71\u54cd\u590d\u6742\u5ea6\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\u770b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+10,INF=1e9+10;\n\nstruct node{\n\tint mx,tag,cnt,sec;\n\tlong long sum;\n};\nint L,R,n=1e5,q;\n\nstruct SegTree{\n#define ls (rt<<1)\n#define rs ((rt<<1)|1)\n#define middef int mid=(l+r)>>1\n\nnode t[N];\n\nvoid push_up(int rt){\n\tt[rt].sum=t[ls].sum+t[rs].sum;\n\tint u=ls,v=rs;\n\tif(t[u].mx==t[v].mx){\n\t\tt[rt].mx=t[v].mx;\n\t\tt[rt].cnt=t[u].cnt+t[v].cnt;\n\t\tt[rt].sec=max(t[u].sec,t[v].sec);\n\t}else{\n\t\tif(t[u].mx>t[v].mx)swap(u,v);\n\t\tt[rt].sec=max(t[u].mx,t[v].sec);\n\t\tt[rt].mx=t[v].mx,t[rt].cnt=t[v].cnt;\n\t}\n}\n\nvoid update(int rt,int v){\n\tif(v<t[rt].mx){\n\t\tt[rt].sum+=1ll*(v-t[rt].mx)*t[rt].cnt;\t\t\n\t\tt[rt].mx=t[rt].tag=v;\n\t}\n}\n\nvoid push_down(int rt){\n\tif(~t[rt].tag){\n\t\tupdate(ls,t[rt].tag);\n\t\tupdate(rs,t[rt].tag);\n\t\tt[rt].tag=-1;\n\t}\n}\n\nvoid build(int l=1,int r=n,int rt=1){\n\tt[rt].tag=-1;\n\tif(l==r){\n\t\tt[rt].sum=t[rt].mx=INF;\n\t\tt[rt].cnt=1;\n\t\treturn;\n\t}\n\tmiddef;\n\tbuild(l,mid,ls),build(mid+1,r,rs);\n\tpush_up(rt);\n}\n\nvoid minimize(int v,int l=1,int r=n,int rt=1){\t\n\tif(l>R||r<L||v>=t[rt].mx)return;\t\n\tif((L<=l&&r<=R)&&(t[rt].sec<v))return update(rt,v);\t\n\tpush_down(rt);\n\tmiddef;\n\tminimize(v,l,mid,ls);\n\tminimize(v,mid+1,r,rs);\n\tpush_up(rt);\n}//\u533a\u95f4\u53d6 min\n\nvoid modify(int pos,int v,int l=1,int r=n,int rt=1){\n\tif(l==r){\n\t\tt[rt].mx=t[rt].sum=v;\n\t\tt[rt].cnt=1;\n\t\treturn;\n\t}\n\tmiddef;\n\tpush_down(rt);\n\tif(pos<=mid)modify(pos,v,l,mid,ls);\n\telse modify(pos,v,mid+1,r,rs);\n\tpush_up(rt);\n}//\u5355\u70b9\u4fee\u6539\n\nint get_val(int pos,int l=1,int r=n,int rt=1){\n\tif(l==r)return t[rt].sum;\n\tmiddef;\n\tpush_down(rt);\n\tif(pos<=mid)return get_val(pos,l,mid,ls);\n\treturn get_val(pos,mid+1,r,rs);\n}//\u5355\u70b9\u67e5\u8be2\n\nlong long get_sum(int l=1,int r=n,int rt=1){\n\tif(l>R||r<L)return 0;\n\tif(L<=l&&r<=R)return t[rt].sum;\n\tpush_down(rt);\n\tmiddef;\n\tlong long ret=get_sum(l,mid,ls)+get_sum(mid+1,r,rs);\n\tpush_up(rt);\n\treturn ret;\n}\n\n}pos_ans,neg_ans,pos_all,neg_all;\n//\u5409\u53f8\u673a\u7ebf\u6bb5\u6811\u677f\u5b50\u3002\n\nset<int> pos_p,neg_p;\nint cnt[N];\n\ninline void modify(SegTree &all,SegTree &ans,set<int> &pos,int v){\n\tall.minimize(v);\n\tans.minimize(v);\n\tfor(auto it=pos.lower_bound(L);*it<=R;it=pos.erase(it)){\n\t\tcnt[*it]++;\n        //\u7edf\u8ba1\u88ab\u5220\u9664\u6b21\u6570\uff0c\u8fbe\u5230\u4e8c\u8bf4\u660e\u6709\u6b63\u6709\u8d1f\u3002\n\t\tif(cnt[*it]==2){\n\t\t\tpos_ans.modify(*it,pos_all.get_val(*it));\n\t\t\tneg_ans.modify(*it,neg_all.get_val(*it));\n            //\u628a\u5bf9\u5e94\u70b9\u7684\u503c\u642c\u8fc7\u53bb\n\t\t}\n\t}\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcin>>q;\n\tfor(int i=1;i<=n;++i)pos_p.insert(i),neg_p.insert(i);\n\tpos_all.build();\n\tneg_all.build();\n    //\u7edf\u8ba1\u7b54\u6848\u7684\u7ebf\u6bb5\u6811\u4e0d\u9700\u8981\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u5b83\u7684\u503c\u662f\u4e4b\u540e\u9010\u4e2a\u63d2\u5165\u7684\u3002\n\tfor(int i=1;i<=q;++i){\n\t\tint op,v;\n\t\tcin>>op>>L>>R;\n\t\tR--;\n\t\tif(op==1){\n\t\t\tcin>>v;\n\t\t\tif(v<0) modify(neg_all,neg_ans,neg_p,-v);\n\t\t\telse modify(pos_all,pos_ans,pos_p,v);\n\t\t}else cout<<pos_ans.get_sum()+neg_ans.get_sum()<<endl;\n\t}\n}\n```",
        "postTime": 1623985175,
        "uid": 231710,
        "name": "zhouyixian",
        "ccfLevel": 8,
        "title": "CF855F Nagini \u9898\u89e3"
    }
]