[
    {
        "content": "[CF1179C Serge and Dining Room](https://www.luogu.com.cn/problem/CF1179C)\n### \u9898\u610f\n\u98df\u5802\u6709 $n$ \u79cd\u83dc\u54c1\uff0c\u7b2c $i$ \u79cd\u83dc\u54c1\u4ef7\u683c $a_i$ \u5143\u3002\u6709 $m$ \u4e2a\u5b66\u751f\u6392\u961f\u5403\u996d\uff0c\u7b2c $i$ \u4e2a\u5b66\u751f\u5e26\u4e86 $b_i$ \u5143\u3002\u5b66\u751f\u4f9d\u6b21\u6311\u9009\u83dc\u54c1\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u9009\u62e9\u4e4b\u524d\u6ca1\u4eba\u4e70\u8fc7\u7684\uff0c\u81ea\u5df1\u80fd\u4e70\u5f97\u8d77\u7684\u6700\u8d35\u7684\u83dc\u3002\u73b0\u5728\u7ed9\u5b9a\u83dc\u54c1\u4ef7\u683c\u5e8f\u5217 $a$ \uff0c\u4ee5\u53ca\u5b66\u751f\u8eab\u4e0a\u6240\u5e26\u91d1\u989d\u7684\u5e8f\u5217 $b$\uff0c\u5e76\u8fdb\u884c $q$ \u6b21\u4fee\u6539\uff0c\u6bcf\u6b21\u4fee\u6539\u53ef\u4ee5\u8ba9\u4e00\u79cd\u83dc\u54c1\u7684\u4ef7\u683c\u53d8\u4e3a $x$ \u5143\uff0c\u6216\u8005\u8ba9\u4e00\u4e2a\u5b66\u751f\u5e26\u7684\u94b1\u53d8\u6210 $x$ \u5143\u3002\u95ee\u6bcf\u6b21\u4fee\u6539\u5b8c\uff0c\u5b66\u751f\u4e70\u5b8c\u4e4b\u540e\u5269\u4e0b\u83dc\u54c1\u4e2d\u6700\u8d35\u7684\u83dc\u503c\u591a\u5c11\u94b1\uff1f\n\n###### \u6570\u636e\u8303\u56f4\uff1a\n$1 \\leq n,m \\leq 3\\times10^5, 1\\leq a,b \\leq 10^6,1 \\leq q \\leq 3\\times 10^5$\u3002\n###### \u5173\u952e\u8bcd\uff1a\u7ebf\u6bb5\u6811\n\n------------\n### \u89e3\u9898\u601d\u8def\n\u9898\u610f\u5f88\u957f\uff0c\u521a\u5f00\u59cb\u53ef\u4ee5\u591a\u4e3e\u4e00\u4e9b\u4f8b\u5b50\u5e2e\u52a9\u7406\u89e3\u3002\u7ecf\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u7684\u8ba1\u7b97\u548c\u6a21\u62df\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u8be2\u95ee\uff0c\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684\u83dc\u54c1\u4ef7\u683c $a_i$\uff0c\u4f7f\u5f97\u80fd\u4e70\u5f97\u8d77\u8fd9\u76d8\u83dc\u7684\u5b66\u751f\u4eba\u6570\u5c0f\u4e8e\u4ef7\u683c\u5927\u4e8e\u7b49\u4e8e $a_i$ \u7684\u83dc\u54c1\u7684\u6570\u91cf\u3002\n\n\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f $(a_i)_ {max}$\uff0c\u4f7f\u5f97\u96c6\u5408 $\\{x|x\\geq a_i \\ \\wedge\\ x\\in \\{a\\}\\}$ \u4e2d\u7684\u5143\u7d20\u591a\u4e8e\u96c6\u5408 $\\{y|y\\geq a_i \\ \\wedge\\ y\\in \\{b\\}\\}$\u3002\n\n\u65e2\u7136\u6211\u4eec\u8981\u7edf\u8ba1\u7684\u662f\u96c6\u5408\u5927\u5c0f\uff0c\u90a3\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5e94\u8be5\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u7ba1\u5b66\u751f\u600e\u4e48\u6392\u961f\uff0c\u83dc\u54c1\u6309\u4ec0\u4e48\u987a\u5e8f\u6392\u5217\uff0c\u6700\u540e\u5269\u4e0b\u83dc\u54c1\u7684\u6700\u9ad8\u4ef7\u683c\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u5bf9\u5417\uff1f\u53ef\u4ee5\u7b80\u5355\u5730\u8bc1\u660e\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u53ea\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u5b66\u751f\u4e4b\u95f4\u7684\u987a\u5e8f\uff0c\u90a3\u6700\u591a\u53ea\u53ef\u80fd\u8ba9\u4e24\u4e2a\u4eba\u5403\u5230\u7684\u83dc\u4ea4\u6362\u4e00\u4e0b\uff0c\u5bf9\u7b54\u6848\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\u7531\u6b64\uff0c\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u4ea4\u6362\u5b66\u751f\u4e4b\u95f4\u7684\u987a\u5e8f\uff0c\u6700\u7ec8\u7b54\u6848\u90fd\u4e0d\u53d8\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6bcf\u79cd\u4ef7\u683c\u6240\u5bf9\u5e94\u7684\u83dc\u54c1\u548c\u5b66\u751f\u7684\u6570\u91cf\u5c31\u53ef\u4ee5\u4e86\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0 $f(i)$ \u4e3a\u4ef7\u683c\u5927\u4e8e\u7b49\u4e8e $i$ \u7684\u83dc\u7684\u6570\u91cf\uff0c $g(i)$ \u4e3a\u94b1\u6570\u5927\u4e8e\u7b49\u4e8e $i$ \u7684\u5b66\u751f\u7684\u6570\u91cf\u3002\u7531\u4e8e\u6211\u4eec\u5173\u5fc3\u7684\u662f\u83dc\u54c1\u6570\u548c\u5b66\u751f\u6570\u4e4b\u95f4\u7684\u5dee\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u597d\u6bcf\u4e00\u4e2a\u4ef7\u683c\u5bf9\u5e94\u7684 $g(i) - f(i)$\uff0c\u5e76\u4e14\u627e\u5230\u6700\u5927\u7684 $i$ \u4f7f\u5f97 $g(i) - f(i) < 0$ \u5c31\u884c\u4e86\u3002\n\n\u5982\u4f55\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u4ef7\u683c\u5bf9\u5e94\u7684 $g(i) - f(i)$\uff1f\u9996\u5148\uff0c\u4e00\u76d8\u4ef7\u683c\u4e3a $a_i$ \u7684\u83dc\u4f1a\u8ba9\u6bcf\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e $a_i$ \u7684\u4ef7\u683c\u7684 $g(i) - f(i)$ \u51cf\u4e00\uff0c\u800c\u4e00\u4e2a\u5e26\u4e86 $b_j$ \u5143\u94b1\u7684\u5b66\u751f\u4f1a\u8ba9\u6bcf\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e $a_i$ \u7684\u4ef7\u683c\u7684 $g(i) - f(i)$ \u52a0\u4e00\u3002\u4fee\u6539\u83dc\u4ef7\u548c\u5b66\u751f\u94b1\u6570\u4e5f\u53ef\u4ee5\u770b\u6210\u662f\u540c\u6837\u7684\u64cd\u4f5c\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u7684\u64cd\u4f5c\u3002\u76f4\u63a5\u4f7f\u7528\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u672c\u9898\u7ebf\u6bb5\u6811\u4f7f\u7528\u4ef7\u683c\u4f5c\u4e3a\u533a\u95f4\u3002\u5728\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 $mn$ \u6570\u7ec4\u6765\u8868\u793a\u6bcf\u4e00\u4e2a\u533a\u95f4\u5185\u6700\u5c0f\u7684 $g-f$ \u7684\u503c\u3002\u5728\u67e5\u8be2\u7684\u8fc7\u7a0b\u4e2d\uff0c\u627e\u5230\u4f4d\u7f6e\u6700\u9760\u53f3\u7684\uff0c$mn$ \u503c\u5c0f\u4e8e $0$ \u4e14\u957f\u5ea6\u4e3a\u4e00\u7684\u533a\u95f4\uff0c\u5e76\u8fd4\u56de\u5176\u533a\u95f4\u4f4d\u7f6e\uff08\u5373\u5bf9\u5e94\u4ef7\u683c\uff09\u3002\u5982\u679c\u6574\u4e2a\u5b9a\u4e49\u57df\u5185\u90fd\u6ca1\u6709 $mn$ \u5c0f\u4e8e $0$ \u7684\u533a\u95f4\uff0c\u8bf4\u660e\u65e0\u89e3\uff0c\u8fd4\u56de $-1$\u3002\u6bcf\u4e00\u6b21\u8be2\u95ee\u90fd\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u4e00\u6b21\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u5e76\u8f93\u51fa\u7b54\u6848\u3002\u6bcf\u6b21\u8be2\u95ee\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log(10^6))$\uff0c\u7ecf\u8fc7 $q$ \u6b21\u64cd\u4f5c\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q\\cdot \\log(10^6))$\u3002\n\n\u672c\u9898\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\nusing namespace std;\n\n#define ls i << 1\n#define rs (i << 1) + 1\nconst int maxN = 300005;\nconst int maxA = 1000005;\nint n, m, q;\nint a[maxN], b[maxN];\nint cnt[maxA];\t\t//\u5728\u8f93\u5165\u521d\u59cb\u6570\u7ec4\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u4ef7\u683c\u5bf9\u5e94\u7684\u6570\u91cf\nint l[maxA * 4], r[maxA * 4], mn[maxA * 4], tag[maxA * 4];\t\t//\u7ebf\u6bb5\u6811\u533a\u95f4\u4fe1\u606f\uff0ctag\u4e3a\u533a\u95f4\u64cd\u4f5c\u65f6\u7684\u61d2\u6807\u8bb0\n\nvoid setup(int i) {\t\t//\u5efa\u6811\n    if (l[i] == r[i]) return;\n    int m = (l[i] + r[i]) >> 1;\n    l[ls] = l[i];\n    r[ls] = m;\n    l[rs] = m + 1;\n    r[rs] = r[i];\n    setup(ls);\n    setup(rs);\n}\nvoid push_down(int i) {\t\t//\u6807\u8bb0\u4e0b\u653e\n    if (tag[i] == 0) return;\n    mn[ls] += tag[i];\n    mn[rs] += tag[i];\n    tag[ls] += tag[i];\n    tag[rs] += tag[i];\n    tag[i] = 0;\n}\nvoid update(int ql, int qr, int i, int d) {\t//\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u8fdb\u884c\u589e\u91cf\u5f0f\u7ef4\u62a4\n    if (qr < l[i] || r[i] < ql) return;\n    else if (l[i] < ql || qr < r[i]) {\n        push_down(i);\n        update(ql, qr, ls, d);\n        update(ql, qr, rs, d);\n        mn[i] = min(mn[ls], mn[rs]);\n    }\n    else {\n        mn[i] += d;\n        tag[i] += d;\n    }\n}\nint query(int i) {\t\t//\u7ebf\u6bb5\u6811\u67e5\u8be2\uff0c\u8fd4\u56de\u5bf9\u5e94\u4ef7\u683c\u6700\u9ad8\u7684\u5408\u6cd5\u4f4d\u7f6e\n    if (mn[i] > 0) return -1;\n    else if (l[i] == r[i]) return l[i];\n    else {\n        push_down(i);\n        if (mn[rs] < 0) return query(rs);\n        else if (mn[ls] < 0) return query(ls);\n        else return -1;\n    }\n}\n\nint main() {\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        cin >> a[i];\n        cnt[a[i]]--;\n    }\n    for (int i = 1; i <= m; i++) {\n        cin >> b[i];\n        cnt[b[i]]++;\n    }\n    l[1] = 1;\n    r[1] = 1000000;\n    setup(1);\n    for (int i = 1; i <= 1000000; i++) {\n        update(1, i, 1, cnt[i]);\n    }\t\t\t//\u7ebf\u6bb5\u6811\u521d\u59cb\u5316\n    cin >> q;\n    for (int t = 1; t <= q; t++) {\n        int c, i, x;\n        cin >> c >> i >> x;\n        if (c == 1) {\n            if (x > a[i]) update(a[i] + 1, x, 1, -1);\n            else update(x + 1, a[i], 1, 1);\n            a[i] = x;\n        }\n        else {\n            if (x > b[i]) update(b[i] + 1, x, 1, 1);\n            else update(x + 1, b[i], 1, -1);\n            b[i] = x;\n        }\n        cout << query(1) << endl;\t\t//\u5bf9\u6bcf\u6b21\u66f4\u65b0\u8fdb\u884c\u7ef4\u62a4\uff0c\u5e76\u8f93\u51fa\u7b54\u6848\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1626440879,
        "uid": 362761,
        "name": "Mr_HY43205",
        "ccfLevel": 6,
        "title": "CF1179C Serge and Dining Room"
    },
    {
        "content": "\u5c0f\u849f\u84bb\u53c8\u6765\u6c34\u9898\u89e3\u5566 Q\u03c9Q\n\n# \u9898\u76ee\n\u2026\u2026 \u6ca1\u6cd5\u7b80\u5316\u9898\u610f\u4e86\u3002\n\n# \u601d\u8def\n\u6211\u4eec\u673a\u623f\u91cc\u7684\u53e6\u4e00\u4f4d\u540c\u5b66\u5f88\u5feb\u5c31\u7ed9\u51fa\u4e86\u89e3\u6cd5\uff1a\n\n__\u5982\u679c\u7b2c $i$ \u5927\u7684 $a$ \u6ee1\u8db3\uff0c\u4e0d\u5c0f\u4e8e\u5b83\u7684 $b$ \u6709\u81f3\u591a $i-1$ \u4e2a\uff0c\u5219 $i$ \u53ef\u4ee5\u4f5c\u4e3a\u7b54\u6848\uff01__\n\n\u201c\u4ece\u6765\u5982\u6b64\uff0c\u4fbf\u5bf9\u5417\uff1f\u201d\u867d\u7136 $\\tt LLB$ \u7ecf\u5e38\u8650\u573a\uff0c\u4f46\u662f\u6211 ~~\u6000\u7740\u6760\u7cbe\u7684\u50b2\u9aa8~~ \u51b3\u5b9a\u53cd\u9a73\uff01\n\n\u7136\u540e\u627e\u5230\u4e86\u4e00\u7ec4\u6570\u636e\u3002$a=\\{1,4,5\\},b=\\{2,3\\}$ \uff0c\u663e\u7136\u7b2c $3$ \u5927\u7684 $a$ \u662f\u4e0d\u80fd\u4f5c\u4e3a\u7b54\u6848\u7684\u3002\n\n~~\u8bdd\u8bf4\u53e6\u4e00\u7bc7\u9898\u89e3\u597d\u50cf\u4e5f\u6709\u8fd9\u4e2a\u5c0f\u5931\u8bef\uff1f~~\n\n\u6211\u53ea\u597d\u81ea\u5df1 $\\tt yy$ \u4e86\u4e00\u4e2a\u7b97\u6cd5\u3002\u6211\u8bf4\uff0c\u6211\u628a $a$ \u548c $b$ \u90fd\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u626b\u8fc7\u53bb\u3002\u8bbe\u5b9a\u53d8\u5143 $x=0$ \u3002\u5982\u679c\u9047\u5230 $b$ \uff0c\u5c06 $x$ \u52a0\u4e0a $1$ \uff1b\u9047\u5230 $a$ \uff0c\u5c06 $x$ \u51cf $1$ \uff0c\u82e5 $x<0$ \uff0c\u7acb\u523b\u8fd4\u56de\u5f53\u524d $a$ \u503c\u4f5c\u4e3a\u7b54\u6848\u3002\n\n\u6211\u662f\u600e\u4e48\u60f3\u7684\u5462\uff1f$x$ \u76f8\u5f53\u4e8e\u8bb0\u5f55\u4e86\u6ca1\u5339\u914d\u7684 $b$ \u7684\u6570\u91cf\u3002\u5982\u679c\u6709\u4e00\u4e2a $a$ \u51fa\u73b0\uff0c\u80af\u5b9a\u4f1a\u4e0e\u4e00\u4e2a $b$ \u5339\u914d\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e4b\u95f4\u6ca1\u522b\u4eba\u3002\u800c $x<0$ \u8bf4\u660e\u6ca1\u6709 $b$ \u4e0e\u4e4b\u5339\u914d\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u4f5c\u4e3a\u7b54\u6848\u4e86\u2014\u2014\u6bd5\u7adf\u662f\u4ece\u5927\u5230\u5c0f\u8003\u8651\u7684\u3002\n\n\u7ed3\u679c\u8fd9\u4e24\u79cd\u7b97\u6cd5\u8d70\u5230\u4e86\u540c\u4e00\u6761\u8def\u4e0a\uff1a\u5c06 $b$ \u89c6\u4e3a $+1$ \uff0c\u5c06 $a$ \u89c6\u4e3a $-1$ \uff0c\u6c42\u540e\u7f00\u548c\u4e3a\u8d1f\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u53ef\u662f\u4e3a\u5565\u524d\u9762\u90a3\u79cd\u8bba\u8ff0\u6709\u53cd\u4f8b\uff1f\u95ee\u9898\u5c31\u662f\u8fd9\u4e2a\u201c\u7acb\u523b\u8fd4\u56de\u5f53\u524d $a$ \u503c\u4f5c\u4e3a\u7b54\u6848\u201d\u3002\u6700\u7ec8\u7684\u7b54\u6848\u662f\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\uff0c\u4f46\u662f\u5176\u4ed6\u7684 $a$ \u5374\u8bf4\u4e0d\u51c6\u4e86\u3002\n\n\u53cd\u6b63\u5927\u5bb6\u89c9\u5f97\u524d\u9762\u90a3\u4e2a\u4e5f\u6709\u9053\u7406\u3001\u4e5f\u80fd $\\tt AC$ \uff0c\u5c31\u4e0d\u7528\u770b\u6211\u7684\u60f3\u6cd5\u4e86\u3002\n\n# \u4ee3\u7801\n\u540e\u7f00\u548c\u548b\u6574\uff1f\u5f53\u6210\u5bf9 $(-\\infty,a]$ \u8fdb\u884c\u533a\u95f4\u4fee\u6539\u3002\u4e8e\u662f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u67e5\u8be2\u9760\u4e8c\u5206\uff0c\u4e8c\u5206\u53ef\u4ee5\u653e\u5728\u7ebf\u6bb5\u6811\u4e0a\u3002\u590d\u6742\u5ea6 $\\mathcal O[(n+m+q)\\log a]$ \u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\ntypedef long long int_;\ninline int readint(){\n\tint a = 0; char c = getchar(), f = 1;\n\tfor(; c<'0'||c>'9'; c=getchar())\n\t\tif(c == '-') f = -f;\n\tfor(; '0'<=c&&c<='9'; c=getchar())\n\t\ta = (a<<3)+(a<<1)+(c^48);\n\treturn a*f;\n}\ninline void writeint(int x){\n\tif(x < 0) putchar('-'), x = -x;\n\tif(x > 9) writeint(x/10);\n\tputchar((x%10)^48);\n}\n\nconst int MaxN = 1000000;\n\nint v[MaxN<<1|1]; // \u7ebf\u6bb5\u6811\u533a\u95f4\u5185\u6700\u5c0f\u503c\nint lazy[MaxN<<1|1]; // \u61d2\u6807\u8bb0\n\nvoid pushDown(int l,int r){\n\tint t = (l+r)|(l!=r), mid = (l+r)>>1;\n\tint lson = (l+mid)|(l!=mid);\n\tint rson = (mid+1+r)|(mid+1!=r);\n\tv[lson] += lazy[t];\n\tlazy[lson] += lazy[t];\n\tv[rson] += lazy[t];\n\tlazy[rson] += lazy[t];\n\tlazy[t] = 0;\n}\n\nint add(int ql,int qr,int adv,int l=1,int r=MaxN){\n\tint t = (l+r)|(l!=r); // \u5b58\u50a8\u4f4d\u7f6e\n\tif(r < ql || qr < l) return v[t];\n\tif(ql <= l && r <= qr){\n\t\tlazy[t] += adv;\n\t\treturn v[t] += adv;\n\t}\n\tpushDown(l,r); // \u4e00\u5b9a\u8bb0\u5f97\u5148\u4e0b\u4f20\u61d2\u6807\u8bb0\n\tint lson = add(ql,qr,adv,l,(l+r)>>1);\n\tint rson = add(ql,qr,adv,(l+r)/2+1,r);\n\treturn v[t] = min(lson,rson); // pushUp\n}\n\nint query(int l=1,int r=MaxN){\n\tint t = (l+r)|(l!=r);\n\tif(v[t] >= 0) return -1;\n\tif(l == r) return l;\n\tpushDown(l,r);\n\tint res = query((l+r)/2+1,r);\n\tif(res != -1) return res;\n\treturn query(l,(l+r)>>1);\n}\n\nint a[2][MaxN];\nint main(){\n\tint n = readint(), m = readint();\n\tfor(int i=1; i<=n; ++i)\n\t\tadd(1,a[0][i] = readint(),-1);\n\tfor(int i=1; i<=m; ++i)\n\t\tadd(1,a[1][i] = readint(),1);\n\tint q = readint();\n\twhile(q --){\n\t\tint opt = readint()-1;\n\t\tint x = readint();\n\t\tint v = readint();\n\t\tadd(1,a[opt][x],1-2*opt);\n\t\tadd(1,a[opt][x] = v,2*opt-1);\n\t\twriteint(query());\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597498512,
        "uid": 123796,
        "name": "Damo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1179C \u3010Serge and Dining Room\u3011"
    },
    {
        "content": "\u8fd9\u9898\u9898\u610f\u5c31\u662f\u6709 $n$ \u76d8\u83dc\uff0c\u6bcf\u76d8\u83dc\u6709\u4ef7\u683c $a_i$\uff1b\u6709 $m$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u6709 $b_i$ \u7684\u94b1\u3002\u6bcf\u4e2a\u4eba\u4f1a\u4e70\u81ea\u5df1\u80fd\u4e70\u5e76\u4e14\u8fd8\u6709\u7684\u6700\u8d35\u7684\u3002\u95ee\u6700\u540e\u5269\u4e0b\u7684\u6700\u8d35\u7684\u83dc\u662f\u591a\u5c11\u94b1\uff1f\u5e26\u4fee\u6539\u3002\n\n\u6211\u4eec\u5148\u6765\u60f3\u4e00\u4e2a\u95ee\u9898\uff0c\u4ec0\u4e48\u65f6\u5019\u4e00\u76d8\u83dc\u4f1a\u5269\u4e0b\u6765\uff1f\u663e\u7136\u662f\u80fd\u4e70\u8fd9\u76d8\u83dc\u7684\u4eba\u90fd\u53bb\u4e70\u66f4\u8d35\u7684\u83dc\u4e86\uff0c\u800c\u4e0d\u80fd\u4e70\u7684\u4eba\u4ec0\u4e48\u90fd\u505a\u4e0d\u4e86\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49 $rank_i$ \u8868\u793a\u80fd\u4e70\u7b2c $i$ \u9053\u83dc\u7684\u4eba\u51cf\u53bb\u8fd9\u9053\u83dc\u4ece\u5927\u5230\u5c0f\u7684\u6392\u540d\u3002\u5982\u679c $rank_i<0$\uff0c\u5c31\u4ee3\u8868\u8fd9\u76d8\u83dc\u4f1a\u5269\u4e0b\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u60f3\u5230\u4e86\u4e00\u4e2a\u66b4\u529b\u7684\u505a\u6cd5\uff1a\u6bcf\u4e00\u6b21\u4fee\u6539\uff0c\u6211\u4eec\u90fd\u628a $rank_i$ \u7b97\u51fa\u6765\uff0c\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u4e86\u3002\n\n\u6211\u4eec\u6765\u60f3\u529e\u6cd5\u4f18\u5316\u8fd9\u4e2a\u505a\u6cd5\u3002\u56e0\u4e3a\u6bcf\u4e00\u6b21 $a_i$ \u6539\u53d8\u6216 $b_i$ \u6539\u53d8\uff0c\u53d7\u5f71\u54cd\u7684\u90fd\u662f\u4ece $1$ \u5230 $a_i/b_i$ \u7684 $rank_i$ \u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u9897\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4e0b\u6807\u5c31\u662f\u83dc\u7684\u4ef7\u683c\uff0c\u5373 $a_i$\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u5bf9\u5e94\u533a\u95f4\u5185 $rank_i$ \u7684\u6700\u5c0f\u503c\uff0c\u8bb0\u4e3a $mn$ \u5373\u53ef\u3002\u67e5\u8be2\u65f6\uff0c\u82e5 $mn>=0$\uff0c\u5219\u4ee3\u8868\u65e0\u89e3\uff0c\u5426\u5219\u8fd4\u56de\u6700\u5927\u7684\u4e0b\u6807\u5373\u53ef\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define lson o<<1\n#define rson o<<1|1\n#define mid (l+r>>1)\n\nconst int N = 1e6;\nconst int INF = 0x7f7f7f7f;\n\nint n,m,q,a[300005],b[300005],apr[1000005];\nstruct segtree{\n\tint mn,laz;\n}t[1000005<<2];\n\nvoid update(int o)\n{\n\tt[o].mn = min(t[lson].mn,t[rson].mn);\n}\n\nvoid build(int o,int l,int r)\n{\n\tt[o].laz = 0;\n\tif(l==r)\n\t{\n\t\tt[o].mn = INF;\n\t\treturn;\n\t}\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\tupdate(o);\n}\n\nvoid pushdown(int o)\n{\n\tif(t[o].laz)\n\t{\n\t\tt[lson].mn += t[o].laz, t[lson].laz += t[o].laz;\n\t\tt[rson].mn += t[o].laz, t[rson].laz += t[o].laz;\n\t}\n\tt[o].laz = 0;\n}\n\nvoid modify(int o,int l,int r,int ql,int qr,int v)\n{\n\tif(l>=ql && r<=qr)\n\t{\n\t\tt[o].mn += v;\n\t\tt[o].laz += v;\n\t\treturn;\n\t}\n\tpushdown(o);\n\tif(ql<=mid)\n\t\tmodify(lson,l,mid,ql,qr,v);\n\tif(qr>mid)\n\t\tmodify(rson,mid+1,r,ql,qr,v);\n\tupdate(o);\n}\n\nint query(int o,int l,int r)\n{\n\tif(t[o].mn>=0)\n\t\treturn -1;\n\tif(l==r)\n\t\treturn l;\n\tpushdown(o);\n\tif(t[rson].mn<0)\n\t\treturn query(rson,mid+1,r);\n\telse\n\t\treturn query(lson,l,mid);\n}\n\nsigned main()\n{\n\tcin>>n>>m;\n\tbuild(1,1,N);\n\tfor(int i=1;i<=n&&scanf(\"%lld\",a+i);i++)\n\t{\n\t\tmodify(1,1,N,1,a[i],-1);\n\t\tapr[a[i]]++;\n\t\tif(apr[a[i]]==1)\n\t\t\tmodify(1,1,N,a[i],a[i],-INF);\n\t}\n\tfor(int i=1;i<=m&&scanf(\"%lld\",b+i);i++)\n\t\tmodify(1,1,N,1,b[i],1);\n\tcin>>q;\n\twhile(q--)\n\t{\n\t\tint op,x,y;\n\t\tscanf(\"%lld%lld%lld\",&op,&x,&y);\n\t\tif(op==1)\n\t\t{\n\t\t\tmodify(1,1,N,1,a[x],1);\n\t\t\tapr[a[x]]--;\n\t\t\tif(apr[a[x]]==0)\n\t\t\t\tmodify(1,1,N,a[x],a[x],INF);\n\t\t\ta[x] = y;\n\t\t\tapr[a[x]]++;\n\t\t\tmodify(1,1,N,1,a[x],-1);\n\t\t\tif(apr[a[x]]==1)\n\t\t\t\tmodify(1,1,N,a[x],a[x],-INF);\n\t\t}\n\t\telse if(op==2)\n\t\t{\n\t\t\tmodify(1,1,N,1,b[x],-1);\n\t\t\tb[x] = y;\n\t\t\tmodify(1,1,N,1,b[x],1);\n\t\t}\n\t\tprintf(\"%lld\\n\",query(1,1,N));\n\t}\n\t\n\treturn 0;\n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1616254299,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1179C \u3010Serge and Dining Room\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5341\u5206\u5de7\u5999\u7684\u8d2a\u5fc3\u9898\u3002\n\n### \u9898\u610f\n\n\u6709$n$\u76d8\u83dc\u548c$m$\u4e2a\u4eba\uff0c\u6bcf\u4e00\u4e2a\u4eba\u90fd\u4f1a\u9009\u62e9\u4ed6\u80fd\u4e70\u7684\u4ef7\u503c\u6700\u9ad8\u7684\u83dc\uff0c\u95ee\u6700\u540e\u5269\u4e0b\u7684\u4ef7\u503c\u6700\u9ad8\u7684\u83dc\u7684\u4ef7\u503c\uff0c\u5e26\u4fee\u6539\u3002\n\n### \u8f6c\u5316\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u6211\u4eec\u53ef\u4ee5\u600e\u4e48\u6c42\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u4eba$i<j$\uff0c\u4e14$b_i<b_j$\uff0c\u90a3\u4e48\u5982\u679c$i$\u9009\u62e9\u7684\u83dc\u6bd4$j$\u9009\u62e9\u7684\u83dc\u8d35\uff08\u56e0\u4e3a\u4ed6\u6392\u5728\u524d\u9762\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u4eba\u9009\u62e9\u7684\u83dc\u4ea4\u6362\u4e00\u4e0b\uff0c\u8fd9\u6837\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5224\u5b9a\u662f\u5426\u6709\u89e3\u3002\n\n\u7ecf\u8fc7\u82e5\u5e72\u6b21\u4ea4\u6362\uff0c\u6211\u4eec\u5c31\u53d1\u73b0\u4eba\u7684\u6807\u53f7\u5df2\u7ecf\u6ca1\u6709\u5173\u7cfb\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u628a$b_i$\u6392\u5e8f\u4e4b\u540e\uff0c\u4f1a\u53d1\u73b0\u4ed6\u4eec\u9009\u62e9\u7684\u83dc\u4e5f\u5df2\u7ecf\u6309\u7167\u4ef7\u683c\u6392\u5e8f\u4e86\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u53e6\u4e00\u4e2a\u66b4\u529b\uff1a\u5c06\u6240\u6709\u4eba\u548c\u6240\u6709\u83dc\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6bcf\u6b21\u6bd4\u8f83\u5f00\u5934\u7684\u4e24\u4e2a\uff0c\u5982\u679c\u80fd\u4e70\u5c31\u5220\u6389\u4ed6\u4eec\u540e\u7ee7\u7eed\uff0c\u5426\u5219\u8fd9\u4e2a\u83dc\u5c31\u662f\u7b54\u6848\u3002\n\n### \u518d\u8f6c\u5316\n\n\u7136\u800c\u6211\u4eec\u53d1\u73b0\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u66b4\u529b\u2026\u2026\n\n\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2a\u518d\u8f6c\u5316\u6210\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u7684\u4e1c\u897f\u3002\n\n\u6211\u4eec\u8003\u8651\u6700\u540e\u7684\u7b54\u6848$i$\u5e94\u8be5\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u3002\u5bb9\u6613\u53d1\u73b0\u6761\u4ef6\u5c31\u662f\u80fd\u4e70\u4e0b\u5b83\u7684\u6709$i-1$\u4e2a\u4eba\uff0c\u5e76\u4e14\u8fd9\u4e9b\u4eba\u90fd\u4e70\u4e86\u6bd4\u5b83\u8d35\u7684\u90a3\u4e9b\u83dc\u3002\n\n\u7ecf\u8fc7\u4e00\u756a\u601d\u8003\uff0c\u6761\u4ef6\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f6c\u5316\u4e3a\uff1a**\u6392\u5e8f\u540e\uff0c\u7b2c$i$\u9053\u83dc\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff0c\u5f53\u4e14\u4ec5\u5f53\u80fd\u591f\u4e70\u4e0b\u8fd9\u9053\u83dc\u7684\u4eba\u6570\u5c0f\u4e8e$i$**\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6240\u6709\u8fd9\u6837\u7684\u83dc\u4ef7\u683c\u53d6\u4e2amax\u5373\u53ef\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u80fd\u4e70\u4e0b\u8fd9\u9053\u83dc\u7684\u4eba\u6570\u51cf\u53bb\u6bcf\u4e00\u9053\u83dc\u7684\u6392\u540d\uff0c\u8bb0\u4e3a$val[i]$\uff0c\u8fd9\u6837\u7b54\u6848\u5c31\u662f\u7b2c\u4e00\u4e2a$val[i]<0$\u7684\u5143\u7d20\u3002\u53ef\u4ee5\u76f4\u63a5\u5728\u5e73\u8861\u6811\u4e0a\u4e8c\u5206\u5b9e\u73b0\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u503c\u57df\u8303\u56f4\u53ea\u6709$10^6$\uff0c\u6240\u4ee5\u5176\u5b9e\u4e0d\u9700\u8981\u5e73\u8861\u6811\uff0c\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\u6ce8\u610f\u4e00\u5f00\u59cb\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u7684\u6570\u5e94\u8be5\u90fd\u8bbe\u4e3a\u6b63\u65e0\u7a77\uff0c\u5f53\u4e00\u4e2a\u503c\u53d8\u6210\u5408\u6cd5\u7684\u65f6\u5019\u518d\u51cf\u56de\u6765\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define lson o<<1\n#define rson o<<1|1\n#define mid (l+r)/2\nusing namespace std;\nstruct Tree\n{\n\tint minv;\n\tint addv;\n}tree[4000005];\nint n,m,q,a[300005],b[300005],cnt[1000005];\nvoid pushup(int o)\n{\n\ttree[o].minv=min(tree[lson].minv,tree[rson].minv);\n}\nvoid build(int o,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttree[o].minv=1000000000;\n\t\treturn;\n\t}\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\tpushup(o);\n}\nvoid pushdown(int o)\n{\n\tif(tree[o].addv)\n\t{\n\t\ttree[lson].addv+=tree[o].addv;\n\t\ttree[rson].addv+=tree[o].addv;\n\t\ttree[lson].minv+=tree[o].addv;\n\t\ttree[rson].minv+=tree[o].addv;\n\t\ttree[o].addv=0;\n\t}\n}\nvoid add(int o,int l,int r,int from,int to,int v)\n{\n\tif(l>=from&&r<=to)\n\t{\n\t\ttree[o].addv+=v;\n\t\ttree[o].minv+=v;\n\t\treturn;\n\t}\n\tpushdown(o);\n\tif(from<=mid)add(lson,l,mid,from,to,v);\n\tif(to>mid)add(rson,mid+1,r,from,to,v);\n\tpushup(o);\n}\nint ask(int o,int l,int r)\n{\n\tif(tree[o].minv>=0)return -1;\n\tif(l==r)return l;\n\tpushdown(o);\n\tif(tree[rson].minv<0)return ask(rson,mid+1,r);\n\telse return ask(lson,l,mid);\n}\nvoid debug(int o,int l,int r)\n{\n\tif(l>10)return;\n\tif(l==r)\n\t{\n\t\tprintf(\"%d \",tree[o].minv);\n\t\treturn;\n\t}\n\tpushdown(o);\n\tdebug(lson,l,mid);\n\tdebug(rson,mid+1,r);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tbuild(1,1,1000000);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tcnt[a[i]]++;\n\t\tif(cnt[a[i]]==1)add(1,1,1000000,a[i],a[i],-1000000000);\n\t\tadd(1,1,1000000,1,a[i],-1);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\tadd(1,1,1000000,1,b[i],1);\n\t}\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint opt,i,x;\n\t\tscanf(\"%d%d%d\",&opt,&i,&x);\n\t\tif(opt==1)\n\t\t{\n\t\t\tadd(1,1,1000000,1,a[i],1);\n\t\t\tcnt[a[i]]--;\n\t\t\tif(cnt[a[i]]==0)add(1,1,1000000,a[i],a[i],1000000000);\n\t\t\ta[i]=x;\n\t\t\tadd(1,1,1000000,1,a[i],-1);\n\t\t\tcnt[a[i]]++;\n\t\t\tif(cnt[a[i]]==1)add(1,1,1000000,a[i],a[i],-1000000000);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd(1,1,1000000,1,b[i],-1);\n\t\t\tb[i]=x;\n\t\t\tadd(1,1,1000000,1,b[i],1);\n\t\t}\n\t\tprintf(\"%d\\n\",ask(1,1,1000000));\n\t}\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O((n+q)\\log v)$",
        "postTime": 1561256773,
        "uid": 54214,
        "name": "wucstdio",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1179C \u3010Serge and Dining Room\u3011"
    },
    {
        "content": "### \u4e00\u3001\u524d\u7f6e\u77e5\u8bc6\n+ [\u7ebf\u6bb5\u6811\u4e8c](https://www.luogu.com.cn/problem/P3373)\n\n### \u4e8c\u3001\u9898\u76ee\u5927\u610f\n\n+ \u98df\u5802\u6709 $n$ \u79cd\u83dc\u54c1\uff0c\u7b2c $i$ \u79cd\u83dc\u54c1\u4ef7\u683c $a_i$ \u5143\u3002\u6709 $m$ \u4e2a\u5b66\u751f\u6392\u961f\u5403\u996d\uff0c\u7b2c $i$ \u4e2a\u5b66\u751f\u5e26\u4e86 $b_i$ \u5143\u3002\u5b66\u751f\u4f9d\u6b21\u6311\u9009\u83dc\u54c1\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u9009\u62e9\u4e4b\u524d\u6ca1\u4eba\u4e70\u8fc7\u7684\uff0c\u81ea\u5df1\u80fd\u4e70\u5f97\u8d77\u7684\u6700\u8d35\u7684\u83dc\u3002\u73b0\u5728\u7ed9\u5b9a\u83dc\u54c1\u4ef7\u683c\u5e8f\u5217 $a$\uff0c\u4ee5\u53ca\u5b66\u751f\u8eab\u4e0a\u6240\u5e26\u91d1\u989d\u7684\u5e8f\u5217 $b$\uff0c\u5e76\u8fdb\u884c $q$ \u6b21\u4fee\u6539\uff0c\u6bcf\u6b21\u4fee\u6539\u53ef\u4ee5\u6539\u53d8\u4e00\u9053\u83dc\u7684\u4ef7\u683c\u6216\u4e00\u4e2a\u5b66\u751f\u6240\u5e26\u7684\u94b1\u6570\u3002\u95ee\u6bcf\u6b21\u4fee\u6539\u5b8c\uff0c\u5b66\u751f\u4e70\u5b8c\u4e4b\u540e\u5269\u4e0b\u83dc\u54c1\u4e2d\u6700\u8d35\u7684\u83dc\u503c\u591a\u5c11\u94b1\uff1f\n\n### \u4e09\u3001\u9898\u76ee\u89e3\u6790\n\n+ \u901a\u8fc7\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u4e00\u9053\u83dc\u6700\u540e\u6ca1\u6709\u88ab\u5403\uff0c\u4e00\u5b9a\u662f\u6240\u6709**\u6709\u94b1\u4e70\u8fd9\u9053\u83dc\u7684\u5b66\u751f\u90fd\u4e70\u4e86\u66f4\u8d35\u7684\u83dc**\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u503c\u57df\u7ef4\u62a4\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u5c06 $[1,a_i]$ \u5168\u52a0\u4e0a -1\uff0c\u5c06 $[1,b_i]$ \u5168\u52a0\u4e0a 1\uff0c\u90a3\u6bcf\u6b21\u4fee\u6539\u540e\uff0c\u6211\u4eec\u6240\u6c42\u7684\u7b54\u6848\u5c31\u662f\u7ebf\u6bb5\u6811\u4e2d**\u6700\u5927\u7684\u503c\u5c0f\u4e8e\u4e00\u7684\u70b9**\n\n### \u56db\u3001\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>inline void rd(T&x){\n\tx=0;T f=1;char ch=getchar();\n\twhile(!isdigit(ch))f=(ch=='-')?-1:1,ch=getchar();\n\twhile(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\tx*=f;\n}\nconst int M=1000010,inf=1e6;\nint mi[M<<2],tag[M<<2];\nint a[M],b[M],n,m,q;\n#define ls (k<<1)\n#define rs (k<<1|1)\n#define lson ls,l,mid\n#define rson rs,mid+1,r\n#define mid ((l+r)>>1)\ninline void pushdown(int k){\n\tif(!tag[k])return;\n\ttag[ls]+=tag[k];\n\ttag[rs]+=tag[k];\n\tmi[ls]+=tag[k];\n\tmi[rs]+=tag[k];\n\ttag[k]=0;\n}\nvoid update(int k,int l,int r,int x,int y,int v){\n\tif(x<=l&&r<=y){\n\t\tmi[k]+=v,tag[k]+=v;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tif(x<=mid)update(lson,x,y,v);\n\tif(y>mid)update(rson,x,y,v);\n\tmi[k]=min(mi[ls],mi[rs]);\n}\nint query(int k,int l,int r){\n\tif(mi[k]>=0)return -1;//\u82e5\u8be5\u533a\u95f4\u503c\u90fd >=0 \u5219\u65e0\u89e3 \n\tif(l==r)return l;\n\tpushdown(k);\n\tif(mi[rs]<0)return query(rson);//\u503c\u5927\u7684\u6709\u89e3\u533a\u95f4\u7b54\u6848\u4e00\u5b9a\u66f4\u4f18 \n\telse return query(lson);\n}\nint main(){\n\trd(n);rd(m);\n\tfor(int i=1;i<=n;i++)rd(a[i]),update(1,1,inf,1,a[i],-1);\n\tfor(int i=1;i<=m;i++)rd(b[i]),update(1,1,inf,1,b[i],1);\n\trd(q);\n\tfor(int i=1;i<=q;i++){\n\t\tint c,t,x;\n\t\trd(c),rd(t),rd(x);\n\t\tif (c == 1) {\n            if (x > a[t]) update(1,1,inf,a[t] + 1, x, -1);\n            else update(1,1,inf,x + 1, a[t], 1);\n            a[t] = x;\n        }\n        else {\n            if (x > b[t]) update(1,1,inf,b[t] + 1, x, 1);\n            else update(1,1,inf,x + 1, b[t], -1);\n            b[t] = x;\n        }\n        printf(\"%d\\n\",query(1,1,inf));\n\t}\n\treturn 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1",
        "postTime": 1652068737,
        "uid": 233260,
        "name": "zyp123456",
        "ccfLevel": 7,
        "title": "CF1179C \u9898\u89e3"
    },
    {
        "content": "## Solution\n\n\u7d2b\u9898\u5f53\u7136\u8981\u5199\u9898\u89e3\u55bd .\n\n\u8003\u8651\u7b54\u6848\u662f $x$ . \u90a3\u4e48\u6709 $A=\\sum[a_i \\ge x]$ \u4e2a\u76d8\u5b50\u53ef\u4f9b\u9009\u62e9 , \u6709 $B=\\sum [b_i \\ge x]$ \u4e2a\u9614\u6c14\u7684\u5c0f\u670b\u53cb\u53ef\u4ee5\u4e70\u5f97\u8d77\u4ef7\u683c\u4e0d\u5c11\u4e8e $x$ \u7684\u76d8\u5b50 .\n\n\u5176\u5b9e\u6211\u4eec\u4e0d\u7528\u5173\u5fc3\u8fd9\u4e9b\u5c0f\u670b\u53cb\u4e70\u7684\u5177\u4f53\u662f\u54ea\u4e00\u4e2a , \u53ea\u9700\u8981\u77e5\u9053\u6709 $B$ \u4e2a\u4eba\u5c31\u53ef\u4ee5\u4e86 .\n\n\u663e\u7136\u5f53 $A > B$ \u7684\u65f6\u5019 Serge \u662f\u53ef\u4ee5\u4e70\u5230\u4ef7\u683c\u4e0d\u5c11\u4e8e $x$ \u7684\u76d8\u5b50 .\n\n$A > B$ \u8fd9\u79cd\u6761\u4ef6\u7684\u89e3\u6cd5\u6bd4\u8f83\u7ecf\u5178 : $\\pm 1$ \u5e8f\u5217 , \u5b50\u6bb5\u548c\u4e3a\u6b63 .\n\n\u7531\u4e8e\u5e26\u4fee , \u6211\u4eec\u5f00\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811 , \u8868\u793a\u4ef7\u683c . \u6211\u4eec\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c :\n\n- `update(1,1,N,a[i],1)` \u8868\u793a\u4e00\u4e2a\u76d8\u5b50\n- `update(1,1,N,b[i],-1)` \u8868\u793a\u4e00\u4e2a\u5c0f\u670b\u53cb\n\n\u8fd9\u6837\u6211\u4eec\u6c42\u6b63\u7684\u540e\u7f00\u548c\u5373\u53ef .\n\n\u8fd9\u79cd\u663e\u7136\u7684\u4e1c\u897f\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206 .\n\n> \u600e\u6837\u4e8c\u5206 ? \u6211\u4eec\u5e94\u62e9\u4f18\u53d6\u5927\u7684 , \u6240\u4ee5\u5148\u5f80\u53f3\u513f\u5b50\u8d70 . \u770b\u770b\u6709\u513f\u5b50\u7684\u6700\u5927\u540e\u7f00\u548c\u52a0\u4e0a\u540e\u9762\u7684\u662f\u5426 $> 0$ , \u5982\u679c\u662f , \u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u5728\u53f3\u513f\u5b50 ; \u5426\u5219\u5f80\u5de6\u513f\u5b50\u8d70 . \u590d\u6742\u5ea6 $\\text{O(log n)}$ .\n\n\u6ce8\u610f\u5224 `-1` .\n\ncode : \n\n```cpp\n#include<bits/stdc++.h>\n#define ffor(i,a,b) for(int i=(a);i<=(b);i++)\n#define roff(i,a,b) for(int i=(a);i>=(b);i--)\n#define mid (l+r>>1)\nusing namespace std;\nconst int MAXN=1e6+10;\nint n,m,q,a[MAXN],b[MAXN];\nstruct Segment_Tree {\n\tint l,r,sum,suf;\n}tr[MAXN<<2];\nSegment_Tree operator +(Segment_Tree A,Segment_Tree B) {\n\treturn {A.l,B.r,A.sum+B.sum,max(B.suf,B.sum+A.suf)};\n}\nvoid build(int k,int l,int r) {\n\tif(l==r) return tr[k]={l,r,0,0},void();\n\tbuild(k<<1,l,mid),build(k<<1|1,mid+1,r);\n\ttr[k]=tr[k<<1]+tr[k<<1|1];\n\treturn ;\n}\nvoid update(int k,int l,int r,int pos,int add) {\n\tif(l==r) return tr[k]={l,r,tr[k].sum+add,tr[k].suf+add},void();\n\tif(pos<=mid) update(k<<1,l,mid,pos,add);\n\telse update(k<<1|1,mid+1,r,pos,add);\n\ttr[k]=tr[k<<1]+tr[k<<1|1];\n\treturn ;\n}\nint N=1000000;\nvoid init(void) {\n\tbuild(1,1,N);\n \tffor(i,1,n) update(1,1,N,a[i],1);\n \tffor(i,1,m) update(1,1,N,b[i],-1);\n\treturn ;\n}\nint query(int k,int l,int r,int tot) {\n\tif(l==r&&tot+tr[k].sum>0) return l;\n\tif(l==r) return -1;\n\tif(tot+tr[k<<1|1].suf>0) return query(k<<1|1,mid+1,r,tot);\n\treturn query(k<<1,l,mid,tot+tr[k<<1|1].sum);\n}\nint main() {\n\tios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n\tcin>>n>>m;\n\tffor(i,1,n) cin>>a[i];\n\tffor(i,1,m) cin>>b[i];\n\tinit();\n\tcin>>q;\n\tffor(i,1,q) {\n\t\tint op,pos,val;\n\t\tcin>>op>>pos>>val;\n\t\tif(op==1) update(1,1,N,a[pos],-1),update(1,1,N,val,1),a[pos]=val;\n\t\telse update(1,1,N,b[pos],1),update(1,1,N,val,-1),b[pos]=val;\n\t\tcout<<query(1,1,N,0)<<'\\n';\n\t}\n\treturn 0;\n}\n```\n\n\u5199\u5f97\u592a\u4e11\u5566 ......",
        "postTime": 1651983074,
        "uid": 120947,
        "name": "Purslane",
        "ccfLevel": 7,
        "title": "CF1179C"
    }
]