[
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u8003\u8651\u8d2a\u5fc3\u3002\n\n\u80fd\u4e0d\u7ffb\u500d\u5c31\u4e0d\u7ffb\u500d\uff0c\u5426\u5219\u5c3d\u91cf\u628a\u7ffb\u500d\u5f80\u524d\u653e\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5148\u8ba1\u7b97\u51fa\u4e00\u5171\u4e0d\u5f97\u4e0d\u7ffb\u500d\u51e0\u6b21\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u7b56\u7565\u662f\u5f53\u6709\u9519\u8bef\u53ef\u4ee5\u7528\u7684\u65f6\u5019\uff0c\u76f4\u5230\u5c31\u5dee\u4e00\u4e2a\u5c31\u8981\u7ffb\u500d\u4e86\u518d\u7528\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u503c\u7684\u8ba1\u7b97\u5c31\u9700\u8981\u5148\u6c42\u51fa\u9519\u4e86\u51e0\u4e2a\uff0c\u7136\u540e\u518d\u6839\u636e\u8fd9\u4e2a\u7b97\u51fa\u53ef\u4ee5\u6709\u591a\u5c11\u9898\u4e0d\u7528\u7ffb\u500d\uff0c\u8fd9\u6837\u5269\u4e0b\u7684\u5c31\u662f\u6ca1\u6709\u9519\u8bef\u7684\u56de\u7b54\u57ab\u800c\u5fc5\u987b\u7ffb\u500d\u7684\u9898\u76ee\u4e86\u3002\u7136\u540e\u5c31\u80fd\u6839\u636e\u8fd9\u4e2a\u7b97\u51fa\u7ffb\u500d\u7684\u6b21\u6570\u5566\u3002\n\n\u8fd9\u6837\u7b97\u51fa\u6765\u662f\uff1a$\\left\\lfloor\\dfrac{n-(n-m)k}{k}\\right\\rfloor$\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f60\u7b97\u51fa\u6765\u7684\u8fd9\u4e2a\u503c\u53ef\u80fd\u662f\u8d1f\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u6839\u672c\u4e0d\u53ef\u80fd\uff0c\u6ce8\u610f\u5224\u65ad\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u6570\u662f\u5f88\u5927\u7684\uff0c\u4e0d\u80fd\u76f4\u63a5\u66b4\u529b\u5904\u7406\uff0c\u8003\u8651\u518d\u5f80\u524d\u63a8\u4e00\u6b65\u3002\n\n\u53d1\u73b0\u6bcf\u4e00\u6b21\u7ffb\u500d\u4e4b\u524d\u5206\u6570\u90fd\u589e\u957f\u4e86 $num$\uff0c\u7136\u540e\u7ffb\u500d\uff0c\u518d\u589e\u957f\uff0c\u518d\u7ffb\u500d\u3002\u82e5\u8bbe\u7b2c $i$ \u6b21\u7ffb\u500d\u540e\u603b\u5171\u7684\u7684\u5206\u662f $f_i$\uff0c\u5bb9\u6613\u5f97\u51fa\u4e00\u4e2a\u9012\u63a8\u516c\u5f0f\uff1a$f_i=2(f_{i-1}+k)$\uff08\u9996\u9879 $f_0=0$\uff09\u3002\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u6c42\u4e00\u4e2a\u901a\u9879\u516c\u5f0f\uff1a$f_n=(2^{n+1}-2)k$ \u7136\u540e\u76f4\u63a5\u5feb\u901f\u5e42\u5904\u7406\u3002\u8fd9\u91cc\u4f3c\u4e4e\u662f\u76f4\u63a5\u5feb\u901f\u5e42\u66f4\u7b80\u5355\u4e00\u70b9\u3002\n\n\u6700\u540e\u4e0d\u8981\u5fd8\u4e86\u52a0\u4e0a\u540e\u6765\u4e0d\u7ffb\u500d\u9898\u7684\u5206\u6570\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#define int long long\nusing namespace std;\nconst int MOD=1e9+9;\nint n,m,k,dou,ans;\nint pow(int a,int b){\n\tint ans=1;\n\twhile(b){\n\t\tif(b&1)ans=(ans*a)%MOD;\n\t\ta=(a*a)%MOD;\n\t\tb=b>>1;\n\t}\n\treturn ans;\n}\nsigned main(){\n\tscanf(\"%I64d%I64d%I64d\",&n,&m,&k);\n\tif(m==0){printf(\"0\\n\");return 0;}\n\tdou=(n-(n-m)*k)/k;\n\tif(dou<0)printf(\"%I64d\",m);\n\telse ans=(k*(2*(pow(2,dou)-1)%MOD)%MOD+m-dou*k)%MOD,printf(\"%I64d\",ans);\n\treturn 0;\n}\n/*\n25 22 5\n*/\n```\n",
        "postTime": 1636444699,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF337C Quiz"
    }
]