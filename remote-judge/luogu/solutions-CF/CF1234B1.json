[
    {
        "content": "# CF1234B1 Social Network \u7b80\u6613\u7248 \u9898\u89e3\n~~STL\u5927\u6cd5\u597d~~\n\n\u672c\u9898\u7528\u4e00\u4e2a\u666e\u901a\u7684\u961f\u5217queue\u4fbf\u53ef\u4ee5\u8f7b\u6613\u5b9e\u73b0\n\n\u5bf9\u8f93\u5165\u7684\u6bcf\u4e2a\u7f16\u53f7\u8fdb\u884c\u8bbf\u95ee\u548c\u5224\u65ad\uff1a\n\n\u6211\u4eec\u9996\u5148\u5224\u65ad\u8f93\u5165\u7684\u7f16\u53f7\u6709\u6ca1\u6709\u5728\u961f\u5217\u91cc\uff0c\u5982\u679c\u6ca1\u6709\u5728\u961f\u5217\u91cc\uff0c\u5c31\u5c06\u8be5\u7f16\u53f7\u5165\u961f\uff1b\u518d\u5224\u65ad\u961f\u5217\u91cc\u6709\u6ca1\u6709\u8d85\u8fc7K\u4e2a\u804a\u5929\u8bb0\u5f55\uff0c\u82e5\u8d85\u8fc7\u4e86\uff0c\u5c31\u5220\u9664\u961f\u5c3e\u5143\u7d20\u3002\n\n\u8bbf\u95ee\u5b8c\u540e\uff0c\u5148\u8f93\u51fa\u961f\u5217\u7684\u957f\u5ea6\uff0c\u518d\u501f\u52a9\u4e00\u4e2a\u53ef\u53d8\u6570\u7ec4vector\uff0c\u4ece\u961f\u9996\u5230\u961f\u5c3e\u8f93\u51fa\u6240\u6709\u5143\u7d20\n\n\u5728\u8fd9\u91cc\u9700\u8981\u7528\u5230\u4e00\u4e9b\u5173\u4e8e\u961f\u5217\u7684\u51fd\u6570\uff0c\u5728\u8fd9\u91cc\u79d1\u666e\u4e00\u4e0b~\n```\nque.size()//\u8fd4\u56de\u961f\u5217\u957f\u5ea6\nque.front()//\u8fd4\u56de\u961f\u9996\u5143\u7d20\nque.push(x)//\u5c06x\u63d2\u5165\u5230\u961f\u5c3e\nque.pop()//\u5220\u9664\u961f\u9996\u5143\u7d20\nque.empty()//\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n```\n\n\u6700\u540e\u9644\u4e0aC++\u7684AC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,ans[250];\nqueue<int> que;\nvector<int> vec;\nbool check(int id)//\u67e5\u627e\u961f\u5217\u4e2d\u6709\u6ca1\u6709id\u8fd9\u4e2a\u7f16\u53f7\n{\n\tbool flag=false;\n\tint len=que.size();\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tif(que.front()==id)\n\t\t\tflag=true;\n\t\tque.push(que.front());\n\t\tque.pop();\n\t}\n\treturn flag;\n}\nint main()\n{\n\tcin>>n>>k;\n\twhile(n--)\n\t{\n\t\tint id;\n\t\tcin>>id;//\u8bfb\u5165\u4e00\u4e2a\u7f16\u53f7\n\t\tif(!check(id))//id\u4e0d\u5728\u961f\u5217\u91cc\n\t\t{\n\t\t\tque.push(id);\n\t\t\tif(que.size()>k)//\u5224\u65ad\u961f\u5217\u5143\u7d20\u7684\u4e2a\u6570\u6709\u6ca1\u6709\u8d85\u8fc7K\u4e2a\n\t\t\t\tque.pop();\n\t\t}\n\t}\n   \t//\u8f93\u51fa\u5f53\u524d\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u804a\u5929\u8bb0\u5f55\u4e2a\u6570\n\tcout<<que.size()<<endl;\n   \t//\u7531\u4e8e\u961f\u5217\u4e0d\u80fd\u904d\u5386\uff0c\u6240\u4ee5\u5c06\u961f\u5217\u6240\u6709\u5143\u7d20\u90fd\u5b58\u5165vector\n\twhile(!que.empty())\n\t{\n\t\tvec.push_back(que.front());\n\t\tque.pop();\n\t}\n   \t//\u7528\u8fed\u4ee3\u5668\u9006\u5e8f\u8bbf\u95eevector\u5e76\u8f93\u51fa\n\tfor(vector<int>::iterator it=vec.end()-1;it!=vec.begin()-1;it--)\n\t\tcout<<*it<<' ';\n\treturn 0;\n}\n```\n\u5927\u5bb6\u6709\u5174\u8da3\u7684\u8bdd\u8fd8\u53ef\u4ee5\u505a\u4e00\u4e0b\u6b64\u9898\u7684\u5347\u7ea7\u7248CF1234B2\uff0c\u4e5f\u4e0d\u96be\u7684\n\n\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n\u6c42\u8fc7 o(\uffe3\u25bd\uffe3)\uff44",
        "postTime": 1572535516,
        "uid": 219866,
        "name": "Blunt_Feeling",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1234B1 \u3010Social Network (easy version)\u3011"
    },
    {
        "content": "\u7b80\u8ff0\u4e00\u4e0b\u9898\u610f,\u73b0\u5728\u6709n\u6761\u4fe1\u606f\uff0c\u4f46\u662f\u4f60\u7684\u624b\u673a\u53ea\u80fd\u663e\u793am\u6761\u4fe1\u606f\uff0c\u6bcf\u6b21\u5f39\u8fc7\u6765\u4e00\u6761\u4fe1\u606f\uff0c\u5b83\u5c06\u88ab\u653e\u5728\u7b2c\u4e00\u4f4d\uff0c\u5982\u679c\u5f53\u524d\u624b\u673a\u663e\u793a\u7684\u4fe1\u606f\u5927\u4e8em\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u4e2a\u5c31\u4f1a\u88ab\u5f39\u51fa\uff0c\u540c\u65f6\uff0c\u6bcf\u4e00\u6b21\u5f39\u8fc7\u6765\u7684\u4fe1\u606f\uff0c\u5982\u679c\u624b\u673a\u91cc\u9762\u5df2\u7ecf\u6709\u8fd9\u4e2a\u4eba\u53d1\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e0d\u4f5c\u51fa\u6539\u53d8\u3002\n\n\u601d\u8def\uff1a\u4f7f\u7528\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u6bcf\u4e00\u6b21\u5f39\u6765\u7684\u4fe1\u606f\uff0c\u653e\u5165\u961f\u5934\uff0c\u5982\u679c\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u5c31$continue$,\u5f53\u961f\u5217\u7684\u957f\u5ea6\u5927\u4e8em\uff0c\u5219\u628a\u6700\u540e\u4e00\u4e2a\u4fe1\u606f\u5f39\u51fa\u3002\n\n**code:**\n```cpp\n    /**\n    *    author:  a2954898606\n    *    created: 2019/10/01 22:54:49\n    **/\n    #include<bits/stdc++.h>\n    #define REP(A,B,I) for(int I=(A);I<=(B);I++)\n    #define PER(A,B,I) for(int I=(A);I>=(B);I--)\n    #define max(X,Y) ((X)<(Y)?(Y):(X))\n    #define min(Y,X) ((X)<(Y)?(X):(Y))\n    #define read(FILENAME) freopen((FILENAME + \".txt\"), \"r\", stdin);\n    #define write(FILENAME) freopen((FILENAME + \".txt\"), \"w\", stdout);\n    #define LL long long\n    using namespace std;\n    deque<int> que;\n    map<int,bool> mp;\n    int n,k,m;\n    int main(){\n        //read(1)\n        //write(1)\n        ios_base::sync_with_stdio(false);\n        cin.tie(0);\n        cout.tie(0);\n     \n        cin>>n>>k;\n        REP(1,n,i){\n            int x;\n            cin>>x;\n            if(mp[x]==true)continue;\n            mp[x]=true;\n            que.push_front(x);\n            if(que.size()>=k+1){\n                m=que.back();\n                mp[m]=false;\n                que.pop_back();\n            }\n        }\n        cout<<que.size()<<endl;\n        while(!que.empty()){\n            int x=que.front();\n            que.pop_front();\n            cout<<x<<\" \";\n        }\n        return 0;\n    }\n```\n",
        "postTime": 1570065299,
        "uid": 103304,
        "name": "a2954898606",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1234B1 \u3010Social Network (easy version)\u3011"
    },
    {
        "content": "# $\\mathtt{CF 1234B1}$\n\n## $\\mathcal{Description}$\n\n\u6709\u4e00\u4e2a\u961f\u5217\uff0c\u957f\u5ea6\u6700\u5927\u4e3a $k$\uff0c\u5f00\u59cb\u65f6\u961f\u5217\u91cc\u6ca1\u6709\u5143\u7d20\uff0c\u6709 $n$ \u4e2a\u5143\u7d20\u8981\u52a0\u5165\u961f\u5217\uff0c\u7b2c $i$ \u4e2a\u5143\u7d20\u7684\u503c\u4e3a $id_i$ $(1 \\leq id_i \\leq 10 ^ 9)$\u3002\u5982\u679c\u5f53\u524d\u961f\u5217\u957f\u5ea6\u4e3a $k$\uff0c\u5219\u6e05\u9664\u961f\u5217\u7b2c $k$ \u4e2a\u4f4d\u7f6e\u7684\u6570\uff0c\u5982\u679c\u961f\u5217\u957f\u5ea6\u5c0f\u4e8e $k$ \u5e76\u4e14 $id_i$ \u6ca1\u5728\u961f\u5217\u4e2d\u51fa\u73b0\u8fc7\uff0c\u5219 $id_i$ \u5c06\u51fa\u73b0\u5728\u961f\u5217\u5934\u90e8\uff0c\u5176\u4ed6\u7684\u6570\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8981\u6c42\u8f93\u51fa\u6700\u540e\u7684\u961f\u5217\u3002\n\n$B1: 1 \\leq n, k \\leq 200$\n\n$B2: 1 \\leq n, k \\leq 2e5$\n\n## $\\mathcal{Solution}$\n\n\u7528$queue$\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u6309\u9898\u76ee\u610f\u601d\u8fdb\u884c\u6a21\u62df\uff0c\u6216\u8005\u7528\u6570\u7ec4\u6a21\u62df\u7686\u53ef\u3002\n\n## $\\mathcal{Code}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nqueue<int> q;\nmap<int, bool> mp;\nint n, k, x, a[200010];\nint main() {\n    scanf(\"%d%d\", &n, &k);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &x);\n        if (!mp[x]) {\n            mp[x] = 1;\n            q.push(x);\n        }\n        if (q.size() > k) {\n            mp[q.front()] = 0;\n            q.pop();\n        }\n    }\n    int sz = q.size();\n    printf(\"%d\\n\", sz);\n    for (int i = 1; i <= sz; i++)  {\n        a[i] = q.front();\n        q.pop();\n    }\n    for (int i = sz; i >= 1; i--)\n        printf(\"%d%c\", a[i], \" \\n\"[i == 1]);\n    return 0;\n}\n```\n\n",
        "postTime": 1570347438,
        "uid": 13746,
        "name": "Trimsteanima",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1234B1"
    },
    {
        "content": "### \u9898\u76ee\u89e3\u6790\uff1a\n\n[\u535a\u5ba2\u5730\u5740](http://littleseven.top/)\n\n\u8fd9\u9053\u9898\u6211\u4eec\u6d89\u53ca\u5230\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u5217\u8868\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u770b\u8fd9\u4e2a\u5217\u8868\u7684\u4e00\u4e9b\u6027\u8d28\uff1a\n\n- \u552f\u4e00\uff1a\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\uff0c\u5217\u8868\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\u3002\n- \u987a\u5e8f\uff1a\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6309\u7167\u90fd\u6309\u7167\u51fa\u73b0\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u5e76\u4e14\u6bcf\u6b21\u4fee\u6539\u8981\u5220\u6389\u6700\u540e\u4e00\u4e2a\u5e76\u4e14\u540e\u63a8\u3002\n\n\u6839\u636e\u8fd9\u9053\u9898\u6240\u6a21\u62df\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u7684\u5c31\u4f1a\u60f3\u5230\u961f\u5217\u3002\u4f46\u662f\u7531\u4e8e\u8fd9\u9053\u9898\u65e2\u6709\u961f\u5934\u5165\u961f\uff0c\u53c8\u6709\u961f\u5c3e\u51fa\u961f\uff0c\u90a3\u4e48\u6211\u4eec\u9009\u62e9\u53cc\u7aef\u961f\u5217\uff08deque\uff09\u3002\n\n\u4f46\u662f\u53e6\u5916\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u4fdd\u8bc1\u8fd9\u4e2a\u5217\u8868\u4e2d\u7684\u552f\u4e00\u6027\uff08\u4e0d\u91cd\u590d\u6027\uff09\u3002\u8fd9\u600e\u4e48\u5b9e\u73b0\uff1f\uff1f\uff1f\u2014\u2014\u2014\u2014\u96c6\u5408\u554a\u3002\n\n\u6309\u7167\u96c6\u5408\u7684\u4e0d\u91cd\u590d\u6027\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e0d\u91cd\u590d\u7684\u5217\u8868\u521a\u521a\u597d\u3002\uff08set\u91cc\u627e\u4e0d\u5230\u5c31\u662f\u6ca1\u6709\u51fa\u73b0\u8fc7\u5457\uff09\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u7528$deque$\u548c$set$\u6df7\u5408\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nchar *p1, *p2, buf[100000];\n\n#define nc() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1 ++ ) \n\nint rd() {\n\tint x = 0, f = 1;\n\tchar c = nc();\n\twhile (c < 48) {\n\t\tif (c == '-') {\n\t\t\tf = -1;\n\t\t}\n\t\tc = nc();\n\t}\n\twhile (c > 47) {\n\t\tx = (((x << 2) + x) << 1) + (c ^ 48);\n\t\tc = nc();\n\t}\n\treturn x * f;\n}\n\nconst int N = 2e5 + 10;\n\nint n, k;\n\nbool vis[N];\n\nint main() {\n\tn = rd(), k = rd();\n\tdeque <int> q;\n\tset <int> s;\n\tfor (int i = 1; i <= n; i ++ ) {\n\t\tint x = rd();\n\t\tif (s.find(x) == s.end()) {\n\t\t\tq.push_front(x);\n\t\t\ts.insert(x);\n\t\t\tif (q.size() > k) {\n\t\t\t\tint now = q.back();\n\t\t\t\ts.erase(now);\n\t\t\t\tq.pop_back();\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", q.size());\n\twhile (! q.empty()) {\n\t\tprintf(\"%d \", q.front());\n\t\tq.pop_front();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1570159786,
        "uid": 144702,
        "name": "littleseven",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 CF1234B1 \u3010Social Network (easy version)\u3011"
    },
    {
        "content": "\u7528 `std::deque` \u6a21\u62df\u5373\u53ef\u3002\n\n\u9996\u5148\u5c06\u6240\u6709\u6570\u636e\u79bb\u6563\u5316\uff0c\u5f00\u4e00\u4e2a `bool` \u6570\u7ec4  `use` \u8bb0\u5f55\u8fd9\u4e2a ID \u7684\u670b\u53cb\u53d1\u7684\u6d88\u606f\u662f\u5426\u5b58\u5728\u4e8e\u5c4f\u5e55\u4e0a\u3002\n\n\u5bf9\u4e8e\u7b2c $i$ \u6761\u6d88\u606f\uff1a\n\n- \u5982\u679c $id_i$ \u5728\u5df2\u7ecf\u5b58\u5728\uff0c\u90a3\u4e48\u5c31\u8df3\u8fc7\u8fd9\u6b64\u64cd\u4f5c\u3002\n- \u5426\u5219\u5728\u53cc\u7aef\u961f\u5217\uff08`deque`\uff09 \u7684\u961f\u9996\u52a0\u5165\u8fd9\u4e2a $id_i$\u3002\n- \u5982\u679c\u53cc\u7aef\u961f\u5217\u7684\u5143\u7d20\u4e2a\u6570 $>k$\uff0c\u5c06\u961f\u5c3e\u5143\u7d20\u5f39\u51fa\u3002\n\n\u5728 $n$ \u6b21\u64cd\u4f5c\u4e4b\u540e\u4f9d\u6b21\u8f93\u51fa\u961f\u5217\u5143\u7d20\u5373\u53ef\u3002\n\n```cpp\n# include <bits/stdc++.h>\n# define rr register\nusing namespace std;\nconst int N=210;\nint a[N],b[N];\nint n,k;\nint m;\nbool use[N];\nstd::deque <int> q;\nint main(void){\n\tcin>>n>>k;\n\tfor(rr int i=1;i<=n;++i)\n\t\tcin>>a[i],b[i]=a[i];\n\tstd::sort(b+1,b+1+n);\n\tm=std::unique(b+1,b+1+n)-(b+1);\t\n\tfor(rr int i=1;i<=n;++i){\n\t\tif(!use[std::lower_bound(b+1,b+1+n,a[i])-b])\n\t\t\tq.push_front(a[i]),use[std::lower_bound(b+1,b+1+n,a[i])-b]=true;\n\t\tif(q.size()>k){\n\t\t\tuse[std::lower_bound(b+1,b+1+n,q.back())-b]=false,q.pop_back();\n\t\t}\t\n\t}\n\tint tmp=q.size();\n\tcout<<tmp<<endl;\n\tfor(rr int i=1;i<=tmp;++i)\n\t\tcout<<q.front()<<\" \",q.pop_front();\n\treturn 0;\n}\n```",
        "postTime": 1570016654,
        "uid": 108949,
        "name": "Meatherm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1234B1 \u3010Social Network (easy version)\u3011"
    },
    {
        "content": "\u6a21\u62df\u9898\uff0c\u89c4\u5219\u8ddfQQ\uff0cWX\u5dee\u4e0d\u591a\uff0c\u5c4f\u5e55\u53ea\u80fd\u5bb9\u7eb3\uff4b\u4e2a\u6d88\u606f\uff0c\u4e0d\u540c\u7684\u662f\u65b0\u6d88\u606f\u7684\u4f1a\u8bdd\u7a97\u53e3\u5df2\u7ecf\u51fa\u73b0\u5728\u5c4f\u5e55\u91cc\uff0c\u4e0d\u4f1a\u7f6e\u9876\uff0c\u53ea\u6709\u5c4f\u5e55\u5916\u7684\u4f1a\u8bdd\u7a97\u53e3\u53d1\u51fa\u65b0\u6d88\u606f\uff0c\u624d\u4f1a\u7f6e\u9876\u5e76\u4e14\u628a\u6700\u4e0b\u9762\u7684\u6d88\u606f\u9876\u51fa\u53bb\u3002\n```cpp\n#include <cstdio>\n#include <set>\n#include <queue>\n\nusing namespace std;\n\nconst int maxn = 2e5+10;\nint ans[maxn];\nint main () {\n\tint n, k, num, cnt = 0;\n\tqueue<int> q, tmp;\n\tset<int> se;\n\tset<int>::iterator it;\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &num);\n\t\tif (q.size() < k && se.count(num) == 0) {\n\t\t\tq.push(num);\n\t\t\tse.insert(num);\n\t\t} else {\n\t\t\tif (se.count(num) == 0) {\n\t\t\t\tq.push(num);\n\t\t\t\tse.insert(num);\n\t\t\t\tse.erase(se.find(q.front()));\n\t\t\t\tq.pop();\n\t\t\t}\n\t\t}\n\t}\n\twhile (!q.empty()) {\n\t\tans[++cnt] = q.front();\n\t\tq.pop();\n\t}\n\tprintf(\"%d\\n\", cnt);\n\tfor (int i = cnt; i ; i--) {\n\t\tprintf(\"%d \", ans[i]);\n\t}\n\tputs(\"\");\n\treturn 0;\n}\n```\n",
        "postTime": 1569996674,
        "uid": 215942,
        "name": "CLer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1234B1 \u3010Social Network (easy version)\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u73b0\u5728\u6709n\u6761\u4fe1\u606f\uff0c\u4f60\u7684\u5c4f\u5e55\u4e0a\u53ea\u80fd\u663e\u793am\u79cd\uff0c\u6bcf\u6b21\u6765\u4fe1\u606f\u65f6\u5c4f\u5e55\u53d8\u52a8\u89c4\u5219\u5982\u4e0b\uff1a\u5982\u679c\u8fd9\u4e2a\u4fe1\u606f\u5df2\u7ecf\u5728\u5c4f\u5e55\u4e0a\uff0c\u90a3\u4e48\u4e0d\u53d8\uff0c\u53cd\u4e4b\u5219\u5427\u6700\u665a\u653e\u8fdb\u6765\u7684\u4fe1\u606f\u63d0\u51fa\uff0c\u5728\u628a\u8fd9\u7c7b\u653e\u8fdb\u53bb\uff0c\u6c42\u6700\u540e\u7684\u4fe1\u606f\u6392\u5217\u3002\n\n\u601d\u8def\uff1a\u5c31\u662f\u7528queue\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\u3002\n\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nqueue <int> q;\nmap <int ,int > my_hash;\nint n,m,a[200010],cnt=1;\n \nint main()\n{\tq.empty(); \n\tcin>>n>>m;\n\twhile(n--)\n\t{\n\t\tint x;\n\t\tcin>>x;\n\t\tif(!my_hash[x])\n\t\t{\n\t\t\tq.push(x);\n\t\t\tmy_hash[x]=1;\n\t\t}\n\t\tif(q.size()>m)\n\t\t{\n\t\t\tint y=q.front();\n\t\t\tq.pop();\n\t\t\tmy_hash[y]=0;\n\t\t}\n\t}\n\tcout<<q.size()<<endl;\n\twhile(!q.empty())\n\t{\n\t\ta[++cnt]=q.front();\n\t\tq.pop();\n\t}\n\tfor(int i=cnt;i>1;--i)\n\t\tcout<<a[i]<<' ';\n\treturn 0;\n}\n```\n",
        "postTime": 1570070068,
        "uid": 132290,
        "name": "\u5f00\u59cb\u65b0\u7684\u8bb0\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1234B1 \u3010Social Network (easy version)\u3011"
    },
    {
        "content": "\u6a21\u62df\uff08$B1B2$\u901a\u5403\u7248\uff09\n\n\u7531\u9898\u610f\u6211\u4eec\u5f97\u5230\uff0c\u8fd9\u4e2a\u901a\u8baf\u8f6f\u4ef6\u7684\u4e3b\u4f53\u7ed3\u6784\u5e94\u8be5\u662f\u4e00\u4e2a$First\\ In\\ First\\ Out$\uff0c\u8fd9\u4efd\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u662f$Queue$\u3002\uff08\u6b63\u5e38\u7684\u901a\u8baf\u8f6f\u4ef6\u5e94\u8be5\u662f\u63a5\u6536\u5230\u4e00\u4e2a\u4eba\u7684\u4fe1\u606f\u7684\u65f6\u5019\u628a\u5f53\u524d\u5bf9\u8bdd\u7f6e\u9876\uff0c\u4e0d\u8fc7\u90a3\u6837\u66f4\u6709\u96be\u5ea6\u3002\uff09\n\n\u53ef\u4ee5\u5f00\u4e00\u4e2a\u961f\u5217\uff0c\u5b58\u50a8\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u540c\u65f6\u5f00\u4e00\u4e2a$map$\u5224\u65ad\u5f53\u524d$ID$\u662f\u4e0d\u662f\u5df2\u7ecf\u5728\u961f\u5217\u4e2d\u4e86\u3002\u6700\u540e\u5012\u5e8f\u8f93\u51fa\u961f\u5217\u5373\u53ef\u3002\n```\n#include<map>\n#include<queue>\n#include<cctype>\n#include<cstdio>\n#define rint register int\nusing namespace std;\nmap<int,bool>t;\nqueue<int>q;\nint N,K,a,ans[200005];\ntemplate<class T>inline void read(T &m)\n{\n\tm=0;\n\tregister char c=getchar();\n\twhile(!isdigit(c))c=getchar();\n\twhile(isdigit(c))m=(m<<3)+(m<<1)+(c&15),c=getchar();\n}\nsigned main()\n{\n\tread(N),read(K);\n\tfor(rint i=1; i<=N; ++i)\n\t{\n\t\tread(a);\n\t\tif(t[a])continue;//\u5df2\u7ecf\u5728\u961f\u5217\u4e2d\n\t\telse\n\t\t{\n\t\t\tq.push(a);\n\t\t\tt[a]=1;\n\t\t\t//\u585e\u5165\uff0c\u6253\u6807\u8bb0\n\t\t\tif(q.size()>K)//\u8d85\u8fc7\u5e94\u6709\u957f\u5ea6\n\t\t\t{\n\t\t\t\tt[q.front()]=0;\n\t\t\t\tq.pop();\n\t\t\t\t//\u56e0\u4e3a\u6bcf\u6b21\u53ea\u585e\u5165\u4e00\u4e2a\uff0c\u6240\u4ee5\u5220\u9664\u4e00\u4e2a\u5373\u53ef\uff0c\u540c\u65f6\u6253\u4e0a\u6807\u8bb0\n\t\t\t}\n\t\t}\n\t}\n\t//\u5012\u5e8f\u8f93\u51fa\n\twhile(!q.empty())\n\t{\n\t\tans[++ans[0]]=q.front();\n\t\tq.pop();\n\t}\n\tprintf(\"%d\\n\",ans[0]);\n\twhile(ans[0])\n\t{\n\t\tprintf(\"%d \",ans[ans[0]]);\n\t\t--ans[0];\n\t}\n}\n```",
        "postTime": 1569993126,
        "uid": 5880,
        "name": "B_Qu1e7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1234B1 \u3010Social Network (easy version)\u3011"
    }
]