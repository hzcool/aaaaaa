[
    {
        "content": "### \u9898\u610f\uff1a\n\n\u7ed9\u51fa\u4e24\u4e2a\u767d\u8f66\u548c\u767d\u738b\u3001\u9ed1\u738b\u7684\u4f4d\u7f6e\uff0c\u5224\u65ad\u9ed1\u738b\u662f\u5426\u4f1a\u88ab\u5403\u6389\u3002\n\n\u6211\u4eec\u4f7f\u7528\u7ea2\u8272\u4ee3\u8868\u767d\u65b9\u80fd\u591f\u63a7\u5236\u7684\u683c\u5b50\uff0c\u663e\u7136\uff0c\u8981\u6ee1\u8db3\u9ed1\u738b\u88ab\u5403\u6389\uff0c\u5c31\u8981\u4f7f\u5b83\u6240\u5728\u7684\u683c\u5b50\u548c\u80fd\u8d70\u5230\u7684\u683c\u5b50\u90fd\u88ab\u63a7\u5236\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n![1](https://cdn.luogu.com.cn/upload/image_hosting/cua62pzy.png)\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u9ed1\u738b\u81ea\u5df1\u53ca\u5176\u5468\u56f4\u4e00\u5708\u7684\u683c\u5b50\u662f\u5426\u90fd\u88ab\u67d3\u6210\u7ea2\u8272\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6839\u636e\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u4e00\u4e2a\u8f66\u80fd\u63a7\u5236\u7684\u8303\u56f4\u5c31\u662f\u5b83\u6240\u5728\u7684\u884c\u548c\u5217\uff0c**\u4f46\u662f\u4e0d\u5305\u62ec\u672c\u8eab\u6240\u5728\u7684\u683c\u5b50\u3002** \u5982\u4e0b\u56fe\u6240\u793a\uff1a\n![2](https://cdn.luogu.com.cn/upload/image_hosting/7amesft5.png)\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u5199\u51fa\u8f66\u63a7\u5236\u683c\u5b50\u7684\u4ee3\u7801\uff1a\n```cpp\ncin>>s;\nfor(int i=1;i<=8;i++){\n\tif(i==s[1]-'0')continue;//\u4e0d\u5305\u542b\u81ea\u5df1\n\tmp[s[0]-'a'+1][i]++;\n}\nfor(int i=1;i<=8;i++){\n\tif(i==s[0]-'a'+1)continue;//\u4e0d\u5305\u542b\u81ea\u5df1\n\tmp[i][s[1]-'0']++;\n}\n```\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u56fd\u738b\uff0c\u56fd\u738b\u63a7\u5236\u7684\u662f\u5468\u56f4\u7684 8 \u4e2a\u683c\u5b50\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a![3](https://cdn.luogu.com.cn/upload/image_hosting/9g6ab6ww.png)\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u5199\u51fa\u76f8\u5e94\u7a0b\u5e8f\u4e86\u3002\n```cpp\ncin>>s;\nint sx=s[0]-'a'+1,sy=s[1]-'0';\nfor(int i=1;i<=8;i++){\n\tif(sx+dx[i]<1||sx+dx[i]>8||sy+dy[i]<1||sy+dy[i]>8)continue;//\u8003\u8651\u8d8a\u754c\n\tmp[sx+dx[i]][sy+dy[i]]++;\n}\n```\n**\u4f46\u662f\uff0c\u6211\u4eec\u8003\u8651\u4e0b\u9762\u7684\u60c5\u51b5\uff1a**\n\n![4](https://cdn.luogu.com.cn/upload/image_hosting/wgun552i.png)\n\n\u5982\u56fe\u6240\u793a\uff0c\u56fd\u738b\u6321\u4f4f\u4e86\u8f66\u7684\u653b\u51fb\u4f7f\u5f97\u8f66\u65e0\u6cd5\u653b\u51fb\u5230\u56fd\u738b\u53e6\u4e00\u4fa7\u7684\u683c\u5b50\uff0c\u8fd9\u65f6\uff0c\u6211\u4eec\u8003\u8651\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u8f66\u7684\u5750\u6807\uff0c\u6211\u4eec\u628a\u56fd\u738b\u6446\u597d\u540e\uff0c\u770b\u662f\u5426\u6709\u8f66\u4e0e\u56fd\u738b\u540c\u884c/\u540c\u5217\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48\u53e6\u4e00\u4fa7\u7684\u683c\u5b50\u5c31\u4e0d\u80fd\u88ab\u67d3\u8272\u3002\uff08\u4f46\u662f\u5982\u679c\u53e6\u4e00\u4e2a\u8f66\u80fd\u653b\u51fb\u5230\uff0c\u8fd8\u662f\u4f1a\u88ab\u67d3\u8272\u3002\uff09\n```cpp\n\nfor(int j=1;j<=2;j++){\n\tif(roots[j][0]==sx){//\u884c\u76f8\u540c\n\t\tif(roots[j][1]>sy)for(int i=1;i<=sy-1;i++)mp[sx][i]--;//\u5728\u5de6\u4fa7\n\t\telse for(int i=sy+1;i<=8;i++)mp[sx][i]--;//\u5728\u53f3\u4fa7\n\t}\n\tif(roots[j][1]==sy){//\u5217\u76f8\u540c\n\t\tif(roots[j][0]>sx)for(int i=1;i<=sx-1;i++)mp[i][sy]--;//\u5728\u4e0a\u4fa7\n\t\telse for(int i=sx+1;i<=8;i++)mp[i][sy]--;//\u5728\u4e0b\u4fa7\n\t}\n}\n```\n\u8fd9\u6837\uff0c\u5c06\u6240\u6709\u683c\u5b50\u67d3\u5b8c\u8272\u4ee5\u540e\uff0c\u53ea\u8981\u5224\u65ad\u9ed1\u738b\u7684 9 \u4e2a\u683c\u5b50\u662f\u5426\u90fd\u88ab\u67d3\u8272\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\ncin>>s;\nsx=s[0]-'a'+1,sy=s[1]-'0';\nfor(int i=0;i<=8;i++){\n\tif(sx+dx[i]<1||sx+dx[i]>8||sy+dy[i]<1||sy+dy[i]>8)continue;//\u8d8a\u754c\n\tif(!mp[sx+dx[i]][sy+dy[i]]){\n\t\tcout<<\"OTHER\";//\u5982\u679c\u6709\u4e00\u4e2a\u6ca1\u88ab\u67d3\u8272\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u88ab\u5403\n\t\treturn 0;\n\t}\n}\ncout<<\"CHECKMATE\";\n```\n\n### \u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define f(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nint mp[9][9];\nchar s[2];\nint dx[9]={0,0,0,1,-1,1,1,-1,-1};\nint dy[9]={0,1,-1,0,0,1,-1,1,-1};\nint roots[3][2];\nint main(){\n\tf(i,1,2){//\u4e24\u4e2a\u8f66\n\t\tcin>>s;\n\t\troots[i][0]=s[0]-'a'+1;//\u5750\u6807\u8f6c\u6362\uff0c\u4e0b\u9762\u540c\u7406\n\t\troots[i][1]=s[1]-'0';\n\t\tf(i,1,8){//\u5c06\u8fd9\u884c\u67d3\u8272\n\t\t\tif(i==s[1]-'0')continue;\n\t\t\tmp[s[0]-'a'+1][i]++;\n\t\t}\n\t\tf(i,1,8){//\u8fd9\u5217\u4e5f\u67d3\u8272\n\t\t\tif(i==s[0]-'a'+1)continue;\n\t\t\tmp[i][s[1]-'0']++;\n\t\t}\n\t}\n\tcin>>s;//\u5904\u7406\u767d\u738b\n\tint sx=s[0]-'a'+1,sy=s[1]-'0';\n\tf(i,1,8){\n\t\tif(sx+dx[i]<1||sx+dx[i]>8||sy+dy[i]<1||sy+dy[i]>8)continue;\n\t\tmp[sx+dx[i]][sy+dy[i]]++;\n\t}\n\tf(j,1,2){//\u68c0\u6d4b\u662f\u5426\u6321\u4f4f\u8f66\n\t\tif(roots[j][0]==sx){\n\t\t\tif(roots[j][1]>sy)f(i,1,sy-1)mp[sx][i]--;\n\t\t\telse f(i,sy+1,8)mp[sx][i]--;\n\t\t}\n\t\tif(roots[j][1]==sy){\n\t\t\tif(roots[j][0]>sx)f(i,1,sx-1)mp[i][sy]--;\n\t\t\telse f(i,sx+1,8)mp[i][sy]--;\n\t\t}\n\t}\n\tcin>>s;\n\tsx=s[0]-'a'+1,sy=s[1]-'0';\n\tf(i,0,8){//\u68c0\u6d4b\u9ed1\u738b\u5468\u56f4\u683c\u5b50\n\t\tif(sx+dx[i]<1||sx+dx[i]>8||sy+dy[i]<1||sy+dy[i]>8)continue;\n\t\tif(!mp[sx+dx[i]][sy+dy[i]]){\n\t\t\tcout<<\"OTHER\";//\u80fd\u8d70\u6389\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"CHECKMATE\";\n\treturn 0;\n}\n\n```\n$$END$$",
        "postTime": 1656919010,
        "uid": 604479,
        "name": "zongSiLing",
        "ccfLevel": 6,
        "title": "CF42B"
    },
    {
        "content": "# CF42B\n\n\u4e00\u9053\u7ec6\u8282\u86ee\u591a\u7684\u5927\u6a21\u62df\u3002\n\n## \u9898\u610f\n\n\u6bd4\u8f83\u7b80\u5355\uff0c\u7ed9\u51fa\u4e00\u4e2a\u56fd\u9645\u8c61\u68cb\u6b8b\u5c40\uff08\u53ea\u6709\u4e24\u4e2a\u767d\u8f66\uff0c\u767d\u738b\uff0c\u9ed1\u738b\uff09\uff0c\u5224\u65ad\u767d\u65b9\u662f\u5426\u80fd\u8d62\u3002\n\n\n## \u89e3\u9898\u601d\u8def\n\n\u5173\u952e\u5c31\u5728\u4e8e\u201c\u80fd\u8d62\u201d\u7684\u8fd9\u4e00\u6761\u4ef6\u8f6c\u5316\uff1a\n\n\u901a\u8fc7\u601d\u8003\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u767d\u65b9\u80fd\u8d62\uff0c\u5219\u9ed1\u738b\u5f53\u524d\u4e00\u5b9a\u5728\u88ab\u5c06\u519b\u7684\u60c5\u51b5\u4e0b\u540c\u65f6\u5468\u56f4 $8$ \u4e2a\u65b9\u5411\u5747\u65e0\u6cd5\u884c\u8d70\uff0c\u6b64\u65f6\u8f93\u51fa `CHECKMATE`, \u5426\u5219\u8f93\u51fa `OTHER`\u3002\n\n\u90a3\u4e48\u7531\u6b64\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u7684\u89e3\u9898\u601d\u8def\uff0c\u4e5f\u5c31\u662f\u9996\u5148\u6807\u8bb0\u51fa\u6240\u6709\u4e0d\u80fd\u8d70\u7684\u4f4d\u7f6e \uff08 \u4e5f\u5c31\u662f\u4e24\u4e2a\u767d\u8f66\u548c\u767d\u738b\u7684\u653b\u51fb\u8303\u56f4\uff09\uff0c\u968f\u540e\u5206\u522b\u6a21\u62df $8$ \u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u5224\u65ad\u662f\u5426\u53ef\u8d70\u3002\n\n\u5f53\u7136\u8fd9\u91cc\u4e5f\u9700\u8981\u5224\u65ad\u653b\u51fb\u8303\u56f4\u5185\u662f\u5426\u5b58\u5728\u5176\u4ed6\u7684\u68cb\u5b50\u8fdb\u884c\u963b\u6321\u3002\n\n\u8fd9\u91cc\u5176\u5b9e\u5df2\u7ecf\u5f88\u9ebb\u70e6\u4e86\uff0c\u4f46\u662f\u6700\u7ec6\u8282\u7684\u4e00\u70b9\u5c31\u5728\u4e8e\u9ed1\u738b\u8fd8\u53ef\u4ee5\u5403\u6389\u5176\u4ed6\u767d\u5b50\u6765~~\u82df\u5ef6\u6b8b\u5598~~\u786e\u4fdd\u6e38\u620f\u7ee7\u7eed\u3002\n\n\u8fd9\u91cc\u6211\u7684\u60f3\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u6807\u8bb0\u51fa\u6bcf\u4e2a\u68cb\u5b50\u53ef\u4e0d\u53ef\u4ee5\u5403\uff0c\u5982\u679c\u8fd9\u4e2a\u68cb\u5b50\u53ef\u4ee5\u5403\uff0c\u90a3\u4e48\u540c\u6837\u8fd9\u4e2a\u683c\u5b50\u4e5f\u662f\u80fd\u8d70\u7684\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5e94\u8be5\u5224\u65ad\u4e00\u4e2a\u68cb\u5b50\u80fd\u4e0d\u80fd\u5403\u5462\uff1f\u5176\u5b9e\u5f88\u7b80\u5355\u3002\n\u53ea\u9700\u8981\u5728\u626b\u63cf\u767d\u68cb $a$ \u7684\u653b\u51fb\u8303\u56f4\u65f6\uff0c\u5982\u679c\u626b\u63cf\u5230\u4e86\u53cb\u519b\u68cb\u5b50 $b$\uff0c\u5c31\u8bf4\u660e\u5018\u82e5\u9ed1\u738b\u5403\u6389\u4e86\u68cb\u5b50 $b$\uff0c\u5219\u4f1a\u7acb\u9a6c\u66b4\u9732\u5728\u5b50 $a$ \u7684\u653b\u51fb\u8303\u56f4\u4e4b\u4e0b\uff0c\u8bc1\u660e\u8be5\u68cb\u5b50\u4e0d\u53ef\u5403\u3002\n\n\u53cd\u4e4b\uff0c\u5982\u679c\u5728\u5168\u90e8\u626b\u63cf\u5b8c\u6240\u6709\u68cb\u5b50\u7684\u653b\u51fb\u8303\u56f4\u540e\uff0c\u56fd\u738b\u627e\u5230\u4e86\u4e00\u4e2a\u672a\u88ab\u6807\u8bb0\u8fc7\u7684\u68cb\u5b50\uff0c\u5219\u8bf4\u660e\u5403\u6389\u8be5\u68cb\u5b50\u540e\u4e0d\u4f1a\u66b4\u9732\u5728\u5176\u4ed6\u68cb\u5b50\u7684\u653b\u51fb\u8303\u56f4\u4e0b\uff0c\u8bc1\u660e\u8be5\u68cb\u5b50\u53ef\u5403\u3002\n\n## \u4ee3\u7801\n\n\u4ee3\u7801\u6709\u4e9b\u957f\uff0c\u6240\u4ee5\u6211\u5206\u6279\u653e\u4e86\u3002\n\n\u9996\u5148\u662f\u68cb\u5b50\u5750\u6807\u7684\u5b58\u50a8\u548c\u68cb\u76d8\u72b6\u6001\u7684\u5b58\u50a8:\n\u68cb\u5b50\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\uff0c\u68cb\u76d8\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u3002\n\n```cpp\nstruct pieces{int x, y;};\n\nint conv(char  a){return (a-'a'+1);} //\u5750\u6807\u8f6c\u6362\u51fd\u6570\n\npieces a[5]; //a1\u4e3a\u767d\u8f661,a2\u8868\u793a\u767d\u8f662\uff0ca3\u8868\u793a\u767d\u738b, a4\u8868\u793a\u9ed1\u738b.\nint vis[10][10]; //\u5730\u56fe\nbool is_attack; //\u5f53\u524d\u662f\u5426\u6709\u5c06\u519b\nint d[8][2] = {{-1,-1},{-1,0},{-1,1},{0,-1},{0,1},{1,-1},{1,0},{1,1}}; //8\u4e2a\u65b9\u5411\nchar x; //\u5b9a\u4e49\u4e00\u4e2achar\u505a\u4e3a\u8f93\u5165\n```\n\n\n\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\u4e3b\u51fd\u6570\u7684\u5185\u5bb9: \n\n```cpp\nint main()\n{\n   input(); //\u8f93\u5165\u6570\u636e\n   car_range(a[1].x, a[1].y); // \u5224\u65ad\u7b2c\u4e00\u4e2a\u8f66\u7684\u6709\u6548\u653b\u51fb\u8303\u56f4\n   car_range(a[2].x, a[2].y); // \u7b2c\u4e8c\u4e2a\u8f66\n   king_range(a[3].x,a[3].y); // \u5224\u65ad\u56fd\u738b\u7684\u653b\u51fb\u8303\u56f4\n   check_king(a[4].x,a[4].y); // \u6a21\u62df\u56fd\u738b\u6240\u6709\u53ef\u8d70\u7684\u4f4d\u7f6e\uff0c\u627e\u5230\u53ef\u884c\u7684\u89e3\n   cout<<\"CHECKMATE\"<<endl;  //\u5982\u679c\u6b64\u65f6\u7a0b\u5e8f\u8fd8\u5728\u8fd0\u884c\uff0ccheckmate\n   return 0;\n}\n```\n\n\u9996\u5148\u662f\u8f93\u5165\u51fd\u6570:\n\n```cpp\nvoid input(){\n    for(int i=1;i<=4;i++){\n        int x_pos,y_pos;\n        cin>>x, x_pos = conv(x); cin>>y_pos;\n        a[i].x = x_pos,a[i].y = y_pos;\n        if(i<4) vis[x_pos][y_pos] = 1; //1 ->\u767d\u68cb\n        else vis[x_pos][y_pos] = 2; //2 ->\u9ed1\u68cb\n    }\n}\n```\n\n\u7136\u540e\u662f\u5224\u65ad\u4e24\u4e2a\u8f66\u7684\u653b\u51fb\u8303\u56f4:\n\n\u5206\u522b\u4ece\u90a3\u4e2a\u8f66\u7684\u5de6\uff0c\u53f3\uff0c\u4e0a\uff0c\u4e0b\u626b\u5230\u5934\u3002\n\n\u8fd9\u91cc\u6709\u51e0\u4e2a\u7ec6\u8282\uff1a\n1. \u5982\u679c\u626b\u5230\u56fd\u738b\u5219\u66f4\u6539\u5c06\u519b\u72b6\u6001\u3002\n2. \u5982\u679c\u626b\u5230\u53cb\u519b\u5219\u6807\u8bb0\u4e3a $4$, \u8868\u793a\u8be5\u68cb\u5b50\u4e0d\u53ef\u5403\u3002\n3. \u653b\u51fb\u8303\u56f4\u6807\u8bb0\u7528\u6570\u5b57 $3$ \u8868\u793a\u3002\n\n```cpp\nvoid car_range(int x, int y){\n    for(int i=y+1;i<=8;i++){ //\u6a2a\u5411\n        if(i>8)break;\n        if(vis[x][i]==0||vis[x][i]==3)vis[x][i]=3;\n        else if(vis[x][i]==2)is_attack = true;\n        else if(vis[x][i]==1){\n            if(i!=y)vis[x][i]=4;\n            break;\n        }else break;\n    }\n    for(int i=y-1;i>=1;i--){\n        if(i<1)break;\n        if(vis[x][i]==0||vis[x][i]==3) vis[x][i]=3;\n        else if(vis[x][i]==2) is_attack = true;\n        else if(vis[x][i]==1){\n            if(i!=y)vis[x][i]=4;\n            break;\n        }else break;\n    }\n    for(int i=x+1;i<=8;i++){ //\u7eb5\u5411\n        if(i>8)break;\n        if(vis[i][y]==0||vis[i][y]==3)vis[i][y]=3;\n        else if(vis[i][y]==2)is_attack = true;\n        else if(vis[i][y]==1){\n            if(i!=x)vis[i][y]=4;\n            break;\n        }else break;\n    }\n    for(int i=x-1;i>=1;i--){\n        if(i<1)break;\n        if(vis[i][y]==0||vis[i][y]==3)vis[i][y]=3;\n        else if(vis[i][y]==2) is_attack = true;\n        else if(vis[i][y]==1){\n            if(i!=x)vis[i][y]=4;\n            break;\n        }else break;\n    }\n}\n```\n\u7136\u540e\u662f\u6a21\u62df\u56fd\u738b\u7684 $8$ \u4e2a\u4e0d\u540c\u8d70\u6cd5\uff0c\u8fdb\u884c\u67d3\u8272\uff0c\u65b9\u6cd5\u901a\u4e0a\u3002\n\n```cpp\nvoid king_range(int x, int y){\n    for(int i=0;i<8;i++){\n        int x1 = x+d[i][0];\n        int y1 = y+d[i][1];\n        if(x1<1||y1<1||x1>8||y1>8)continue;\n        if(vis[x1][y1]==0||vis[x1][y1]==3)vis[x1][y1]=3;\n        if(vis[x1][y1]==1)vis[x1][y1]=4;\n        if(vis[x1][y1]==2)is_attack=true;\n    }\n}\n```\n\u6700\u540e\u662f\u68c0\u67e5\u9ed1\u738b\u7684\u6240\u6709\u8d70\u6cd5\uff0c\u770b\u662f\u5426\u5b58\u5728\u5408\u6cd5\u7684\uff0c\u53ea\u8981\u683c\u5b50\u662f $0$ \u6216\u8005 $1$ \u5c31\u53ef\u4ee5\u8d70\u3002\n\n\u5982\u679c\u90fd\u4e0d\u53ef\u4ee5\u8d70\u5c31\u5224\u65ad\u5f53\u524d\u662f\u5426\u5c06\u519b\u3002\u5982\u679c\u4e0d\u5c06\u519b\u5c31\u53ef\u4ee5\u5446\u5728\u539f\u5730\u3002\n\n```cpp\nvoid check_king(int x, int y){\n    for(int i=0;i<8;i++){\n        int x1 = x+d[i][0];\n        int y1 = y+d[i][1];\n        if(x1<1||y1<1||x1>8||y1>8)continue;\n        if(vis[x1][y1]==0||vis[x1][y1]==1){\n            if(x1!=a[3].x||y1!=a[3].y){\n                cout<<\"OTHER\"<<endl;\n                exit(0);\n            }\n        }\n    }\n    if(!is_attack){\n        cout<<\"OTHER\"<<endl;\n        exit(0);\n    }\n}\n```\n\n\u7136\u540e\u5c31\u5b8c\u7f8e\u8fc7\u6389\u5566!\n\n[![Tz8yGD.jpg](https://s4.ax1x.com/2022/01/06/Tz8yGD.jpg)](https://imgtu.com/i/Tz8yGD)\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1641460450,
        "uid": 355276,
        "name": "\u6e05\u5c0f\u79cbovo",
        "ccfLevel": 0,
        "title": "CF42B"
    },
    {
        "content": "\u5bf9\u4e8e\u521d\u59cb\u7684\u5c40\u9762\uff0c\u9ed1\u738b\u5171\u6709 9 \u79cd\u9009\u62e9\uff0c\u9664\u4e86 8 \u4e2a\u65b9\u5411\uff0c\u8fd8\u6709\u4e0d\u52a8\n\n\u5728\u8fd9\u4e94\u79cd\u79fb\u52a8\u9009\u62e9\u4e2d\uff0c\u82e5\u6709\u4e00\u79cd\u767d\u65b9\u4e0d\u80fd\u6740\u6b7b\u9ed1\u738b\uff0c\u5219\u8f93\u51fa other\n\n\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8981\u5224\u65ad\u738b\u7684\u4f4d\u7f6e\u4ee5\u53ca\u8f66\u7684\u4f4d\u7f6e\uff1a\n\n1.\u8be5\u4f4d\u7f6e\u662f\u5426\u5728\u767d\u738b\u79fb\u52a8\u8303\u56f4\u5185\uff0c\u5373\u767d\u738b\u548c\u9ed1\u738b\u662f\u76f8\u90bb\u7684\n\n2.\u8be5\u4f4d\u7f6e\u662f\u5426\u5728\u767d\u8f66\u7684\u79fb\u52a8\u8303\u56f4\u5185\uff0c**\u5e76\u4e14\u767d\u8f66\u79fb\u52a8\u5230\u8be5\u4f4d\u7f6e\u6ca1\u6709\u88ab\u68cb\u5b50\u6321\u4f4f**\n\n\u5982\u679c\u8fd9\u4e24\u4e2a\u6761\u4ef6\u5747\u4e3a\u201c\u5426\u201d\uff0c\u5219\u8be5\u4f4d\u7f6e\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u6b64\u5f97\u5230\u5982\u4e0b\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nchar a, b, c, d;\nint x, y, xx, yy, ex, ey, sx, sy;\nint fx[8][2] = {0, 1, 0, -1, 1, 0, -1, 0, -1, -1, -1, 1, 1, -1, 1, 1};\nbool checkc(int cx, int cy, int px, int py) {\n\tif(cx == px) {//\u5224\u65ad\u8f66\u79fb\u52a8\u5230\u8be5\u4f4d\u7f6e\u662f\u5426\u6709\u68cb\u5b50\u6321\u4f4f\n\t\tif(cy > py) {\n\t\t\tfor(int i = cy - 1;i >= py;i --) {\n\t\t\t\tif((cx == x && i == cy) || (cx == xx && i == cy) || (cx == ex && i == ey)) {\n\t\t\t\t\tif(i != py) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor(int i = cy + 1;i <= py;i ++) {\n\t\t\t\tif((cx == x && i == cy) || (cx == xx && i == cy) || (cx == ex && i == ey)) {\n\t\t\t\t\tif(i != py) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tif(cx > px) {\n\t\t\tfor(int i = cx - 1;i >= px;i --) {\n\t\t\t\tif((cy == y && i == x) || (cy == yy && i == xx) || (cy == ey && i == ex)) {\n\t\t\t\t\tif(i != px) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor(int i = cx + 1;i <= px;i ++) {\n\t\t\t\tif((cy == y && i == x) || (cy == yy && i == xx) || (cy == ey && i == ex)) {\n\t\t\t\t\tif(i != px) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nbool check(int p1, int p2) {\n\tif(p1 < 1 || p1 > 8 || p2 < 1 || p2 > 8) return false;\n\tif(p1 == x && p2 != y) {\n\t\tif(checkc(x, y, p1, p2)) return false;\n\t}\n\tif(p1 != x && p2 == y) {\n\t\tif(checkc(x, y, p1, p2)) return false;\n\t}\n\tif(p1 == xx && p2 != yy) {\n\t\tif(checkc(xx, yy, p1, p2)) return false;\n\t}\n\tif(p1 != xx && p2 == yy) {\n\t\tif(checkc(xx, yy, p1, p2)) return false;\n\t}\n\tif(p1 == ex + 1 && p2 == ey) return false;//\u5224\u65ad\u767d\u738b\u662f\u5426\u53ef\u4ee5\u79fb\u52a8\u5230\u8be5\u4f4d\u7f6e\n\tif(p1 == ex - 1 && p2 == ey) return false;\n\tif(p1 == ex && p2 == ey + 1) return false;\n\tif(p1 == ex && p2 == ey - 1) return false;\n\tif(p1 == ex + 1 && p2 == ey + 1) return false;\n\tif(p1 == ex + 1 && p2 == ey - 1) return false;\n\tif(p1 == ex - 1 && p2 == ey + 1) return false;\n\tif(p1 == ex - 1 && p2 == ey - 1) return false;\n\treturn true;\n}\nint main() {\n\tcin >> a >> y >> b >> yy >> c >> ey >> d >> sy;\n\tx = a - 'a' + 1;//\u628a\u5750\u6807\u6362\u6210\u6570\u5b57\u8868\u793a\n\txx = b - 'a' + 1;\n\tex = c - 'a' + 1;\n\tsx = d - 'a' + 1;\n\tif(check(sx, sy)) {//\u5224\u65ad\u9ed1\u738b\u4e0d\u52a8\n\t\tcout << \"OTHER\" << endl;\n\t\treturn 0;\n\t}\n\tfor(int i = 0;i <= 7;i++) {\n\t\tint cx = sx + fx[i][0];\n\t\tint cy = sy + fx[i][1];\n\t\tif(check(cx, cy)) {//\u5224\u65ad8\u4e2a\u65b9\u5411\n\t\t\tcout << \"OTHER\" << endl;//\u53ea\u8981\u6709\u4e00\u79cd\u79fb\u52a8\u65b9\u6848\u53ef\u884c,\u8f93\u51faother\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << \"CHECKMATE\" << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1617490595,
        "uid": 503822,
        "name": "Essinsop",
        "ccfLevel": 0,
        "title": "CF42B \u9898\u89e3"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u771f\u7684\u597d\u9898\uff0c\u5237\u65b0\u4e86\u6211\u5bf9\u4e8e\u7ec6\u8282\u7684\u8ba4\u8bc6\u3002\n\n\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5c06\u6240\u6709\u88ab\u63a7\u5236\u7684\u70b9\u67d3\u8272\uff0c\u7136\u540e\u5728\u9ed1\u738b\u65c1\u8fb9\u627e\u662f\u5426\u6709\u6ca1\u6709\u88ab\u63a7\u5236\u7684\u70b9\u3002\n\n\u53ef\u60dc\u60f3\u8fc7\u8fd9\u9898\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\u3002\n\n---\n\n\u6211\u5728\u8fd9\u4efd\u4ee3\u7801\u4e2d\u8003\u8651\u7684\u7ec6\u8282\uff1a\n\n1. \u5f53\u9ed1\u738b\u73c2\u4ee5\u76f4\u63a5\u5403\u6389\u767d\u738b\u65f6\u5c31\u83b7\u80dc\u4e86\uff0c\u5c5e\u4e8e\u5176\u4ed6\u60c5\u51b5\u3002\n\n2. \u5f53\u767d\u6321\u4f4f\u8f66\u7684\u65f6\u5019\u88ab\u6321\u4f4f\u7684\u90e8\u5206\u4e0d\u80fd\u67d3\u8272\u3002\n\n3. \u9ed1\u738b\u4e0d\u53ef\u4ee5\u79bb\u5f00\u68cb\u76d8\uff0c\u4e5f\u5c31\u662f\u5224\u65ad\u8fb9\u754c\u3002\n\n4. \u9ed1\u738b\u53ef\u4ee5\u9009\u62e9\u4e0d\u52a8\u3002\n\n5. \uff08\u6216\u8bb8\u4e0d\u7b97\u7ec6\u8282\uff09\u738b\u662f\u516b\u5411\u79fb\u52a8\u3002\n\n---\n\u603b\u4f53\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint mp[15][15];\nint car1[2],car2[2],baiking[2],heiking[2];\nint dx[10]={0, 1, 1, 1, 0, 0,-1,-1,-1};\nint dy[10]={0,-1, 1, 0, 1,-1, 1,-1, 0};\nchar a;\nchar get(){\n\tchar c=getchar();\n\twhile(c=='\\n'||c==' '||c=='\\r')c=getchar();\n\treturn c;\n}\nint main(){\n\ta=get();car1[0]=a-'a'+1;\n\tscanf(\"%1d\",&car1[1]);\n\ta=get();car2[0]=a-'a'+1;\n\tscanf(\"%1d\",&car2[1]);\n\ta=get();baiking[0]=a-'a'+1;\n\tscanf(\"%1d\",&baiking[1]);\n\ta=get();heiking[0]=a-'a'+1;\n\tscanf(\"%1d\",&heiking[1]);\n\t\n\tfor(int i=car1[1];i<=8;i++){\n\t\tmp[car1[0]][i]++;\n\t\tif(car1[0]==baiking[0]&&i==baiking[1])break;\n\t}\n\tfor(int i=car1[1];i>=1;i--){\n\t\tmp[car1[0]][i]++;\n\t\tif(car1[0]==baiking[0]&&i==baiking[1])break;\n\t}\n\t\n\tfor(int i=car1[0];i<=8;i++){\n\t\tmp[i][car1[1]]++;\n\t\tif(i==baiking[0]&&car1[1]==baiking[1])break;\n\t}\n\tfor(int i=car1[0];i>=1;i--){\n\t\tmp[i][car1[1]]++;\n\t\tif(i==baiking[0]&&car1[1]==baiking[1])break;\n\t}\n\tmp[car1[0]][car1[1]]-=4;\n\t\n\tfor(int i=car2[1];i<=8;i++){\n\t\tmp[car2[0]][i]++;\n\t\tif(car2[0]==baiking[0]&&i==baiking[1])break;\n\t}\n\tfor(int i=car2[1];i>=1;i--){\n\t\tmp[car2[0]][i]++;\n\t\tif(car2[0]==baiking[0]&&i==baiking[1])break;\n\t}\n\t\n\tfor(int i=car2[0];i<=8;i++){\n\t\tmp[i][car2[1]]++;\n\t\tif(i==baiking[0]&&car2[1]==baiking[1])break;\n\t}\n\tfor(int i=car2[0];i>=1;i--){\n\t\tmp[i][car2[1]]++;\n\t\tif(i==baiking[0]&&car2[1]==baiking[1])break;\n\t}\n\tmp[car2[0]][car2[1]]-=4;\n\t\n\tfor(int i=1;i<=8;i++)\n\tmp[baiking[0]+dx[i]][baiking[1]+dy[i]]++;\n\tmp[baiking[0]][baiking[1]]=0;\n\t\n//\tfor(int i=1;i<9;i++){\n//\t\tfor(int j=1;j<9;j++)\n//\t\tprintf(\"%d\",mp[i][j]);\n//\t\tprintf(\"\\n\");\n//\t}\n\t\n\tfor(int i=0;i<=8;i++)\n\tif(heiking[0]+dx[i]<=8&&heiking[0]+dx[i]>=1&&\n\theiking[1]+dy[i]<=8&&heiking[1]+dy[i]>=1&&\n\tmp[heiking[0]+dx[i]][heiking[1]+dy[i]]<=0){\n\t\tprintf(\"OTHER\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"CHECKMATE\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1636192023,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF42B Game of chess unfinished"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u5728\u5224\u65ad\u9ed1\u738b\u4f1a\u4e0d\u4f1a\u88ab\u5403\u6389\u3002\n\n\u9ed1\u738b\u53ef\u4ee5\u9009\u62e9\u4e0d\u52a8\u6216\u8005\u79fb\u52a8\u5230\u76f8\u90bb\u7684\u683c\u5b50\uff08\u6216\u89d2\u6216\u8fb9\uff09\uff0c\u4e00\u51719\u79cd\u60c5\u51b5 \u3002\n\n\u53ea\u8981\u6709\u4e00\u79cd\u60c5\u51b5\u4e0b\u4e0d\u88ab\u5403\u6389\uff0c\u90a3\u4e48\u5c31\u8f93\u51faOTHER\uff0c\u5426\u5219\u5c31\u8f93\u51faCHECKMATE\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string a,b,c,d;\n    int a1[2],b1[2],c1[2],d1[2];\n    cin>>a>>b>>c>>d;\n    a1[0]=a[0]-96,a1[1]=a[1]-48; //\u9996\u5148\u8bb0\u5f554\u4e2a\u68cb\u5b50\u7684\u4f4d\u7f6e\n    b1[0]=b[0]-96,b1[1]=b[1]-48;\n    c1[0]=c[0]-96,c1[1]=c[1]-48;\n    d1[0]=d[0]-96,d1[1]=d[1]-48;\n    for(int i=-1; i<2; ++i)\n    {\n        for(int j=-1; j<2; ++j)\n        {                       //\u6a21\u62df\u9ed1\u738b\u7684\u79fb\u52a8\n            int x=d1[0]+i; \n            int y=d1[1]+j; \n            bool judge[4]= {0}; //\u5224\u65ad\u79fb\u52a8\u540e\u80fd\u5426\u5403\u6389\u5176\u4ed6\u68cb\u5b50\n            if(x>0&&x<9&&y>0&&y<9)\n            {\n                if(x==a1[0]&&y==a1[1])\n                    judge[1]=1;\n                else if(x==b1[0]&&y==b1[1])\n                    judge[2]=1;\n                else if(x==c1[0]&&y==c1[1])\n                    judge[3]=1;\n                bool mapp[10][10]= {0}; //\u5b9a\u4e49\u4e00\u5f20\u68cb\u76d8\n                if(!judge[1]) //\u767d\u8f661\u6ca1\u88ab\u5403\u6389\u7684\u60c5\u51b5\n                {\n                    int te=-1; //\u6a21\u62df\u8f66\u53ef\u4ee5\u79fb\u52a8\u6c34\u5e73\u6216\u5782\u76f4\u7684\u4efb\u610f\u6570\u91cf\u7684\u683c\u5b50\uff08\u5047\u8bbe\u8def\u5f84\u4e0a\u6ca1\u6709\u5176\u4ed6\u68cb\u5b50\uff09\n                    for(int k=1; k<9; ++k)\n                        if(a1[0]==c1[0]&&k==c1[1])\n                            te=k;\n                    if(te==-1)\n                        for(int k=1; k<9; ++k)\n                            mapp[a1[0]][k]=1;\n                    else if(te<a1[1])\n                        for(int k=te+1; k<9; ++k)\n                            mapp[a1[0]][k]=1;\n                    else\n                        for(int k=1; k<te; ++k)\n                            mapp[a1[0]][k]=1;\n                    te=-1;\n                    for(int k=1; k<9; ++k)\n                        if(k==c1[0]&&a1[1]==c1[1])\n                            te=k;\n                    if(te==-1)\n                        for(int k=1; k<9; ++k)\n                            mapp[k][a1[1]]=1;\n                    else if(te<a1[0])\n                        for(int k=te+1; k<9; ++k)\n                            mapp[k][a1[1]]=1;\n                    else\n                        for(int k=1; k<te; ++k)\n                            mapp[k][a1[1]]=1;\n                }\n                if(!judge[2]) //\u767d\u8f662\u6ca1\u88ab\u5403\u6389\u7684\u60c5\u51b5\n                {\n                    int te=-1;  //\u6a21\u62df\u8f66\u53ef\u4ee5\u79fb\u52a8\u6c34\u5e73\u6216\u5782\u76f4\u7684\u4efb\u610f\u6570\u91cf\u7684\u683c\u5b50\uff08\u5047\u8bbe\u8def\u5f84\u4e0a\u6ca1\u6709\u5176\u4ed6\u68cb\u5b50\uff09\n                    for(int k=1; k<9; ++k)\n                        if(b1[0]==c1[0]&&k==c1[1])\n                            te=k;\n                    if(te==-1)\n                        for(int k=1; k<9; ++k)\n                            mapp[b1[0]][k]=1;\n                    else if(te<b1[1])\n                        for(int k=te+1; k<9; ++k)\n                            mapp[b1[0]][k]=1;\n                    else\n                        for(int k=1; k<te; ++k)\n                            mapp[b1[0]][k]=1;\n                    te=-1;\n                    for(int k=1; k<9; ++k)\n                        if(k==c1[0]&&b1[1]==c1[1])\n                            te=k;\n                    if(te==-1)\n                        for(int k=1; k<9; ++k)\n                            mapp[k][b1[1]]=1;\n                    else if(te<b1[0])\n                        for(int k=te+1; k<9; ++k)\n                            mapp[k][b1[1]]=1;\n                    else\n                        for(int k=1; k<te; ++k)\n                            mapp[k][b1[1]]=1;\n                }\n                if(!judge[3]) //\u767d\u738b\u6ca1\u88ab\u5403\u6389\u7684\u60c5\u51b5\n                    for(int ti=-1; ti<2; ++ti)\n                        for(int tj=-1; tj<2; ++tj)\n                            mapp[c1[0]+ti][c1[1]+tj]=1;\n                if(mapp[x][y]==0) //\u5982\u679c\u6709\u4e00\u79cd\u60c5\u51b5\u6ca1\u88ab\u5403\u6389\u5c31\u8f93\u51faOTHER\uff0c\u7ed3\u675f\n                {\n                    cout<<\"OTHER\"<<endl;\n                    return 0;\n                }\n            }\n        }\n    }\n    cout<<\"CHECKMATE\"<<endl; //\u5426\u5219\u8f93\u51faCHECKMATE\uff0c\u7ed3\u675f\n    return 0;\n}\n\n```\n",
        "postTime": 1581346791,
        "uid": 265539,
        "name": "Mint_Flipped",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF42B \u3010Game of chess unfinished\u3011"
    }
]