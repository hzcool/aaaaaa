[
    {
        "content": "~~\u51ac\u4ee4\u8425\u4e0a\u78b0\u5230\uff0c\u4e0d\u4f1a\uff0c\u8fc7\u6765\u6c34\u9898\u89e3~~\n\n\u975e\u5e38\u76f4\u89c2\u7684\u601d\u8def\u5c31\u662f\u5c06\u6bcf\u6761\u8fb9$c$\u62c6\u6210$\\lg c$\u4e2a\u70b9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u90fd\u662f\u4e00\u4f4d\u6570\u3002\n\n\n\u7136\u540e\u8d2a\u5fc3\u7684\u60f3\uff0c\u53d1\u73b0\u6211\u4eec\u7684\u6700\u4f18\u8def\u5f84\u4e00\u5b9a\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf\u4e00\u5b9a\u662f**\u6700\u5c11\u7684**\uff08\u56e0\u4e3a\u6700\u5c0f\u7684$x+1$\u4f4d\u6570\u4e00\u5b9a\u5927\u4e8e\u6700\u5927\u7684$x$\u4f4d\u6570\uff09\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5bfs\u7206\u641c\u4e86\uff08bfs\u4fdd\u8bc1\u8ddd\u79bb\u8d77\u59cb\u72b6\u6001\u66f4\u8fd1\u7684\u72b6\u6001\u4f1a\u88ab\u5148\u641c\u5230\uff09\uff0c\u4f18\u5148\u66f4\u65b0\u90a3\u4e9b\u8fb9\u6743\u66f4\u5c0f\u7684\u8fb9\u3002\n\n\u5982\u679c\u4e0d\u51fa\u6240\u6599\u7684\u8bdd\uff0c\u4f60\u5e94\u8be5\u4f1aWA10\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u8fd9\u6837bfs\u662f\u4fdd\u8bc1\u4e86\u8ddd\u79bb\u8f83\u5c0f\u7684\u70b9\u5148\u88ab\u8bbf\u95ee\uff0c\u4f46\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u8ddd\u79bb\u76f8\u7b49\u7684\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5bf9\u4e8e\u8ddd\u79bb\u76f8\u7b49\u7684\u70b9\uff0c\u6211\u4eec\u5e94\u8be5\u540c\u65f6\u67e5\u770b\u5b83\u4eec\u7684$0$\u6743\u8fb9\uff0c\u7136\u540e\u662f$1$\u6743\u8fb9\u2026\u2026\u6700\u540e\u662f$9$\u6743\u8fb9\u3002\n\n\u5982\u679c\u6309\u7167\u6211\u4eec\u4e4b\u524d\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u5219\u662f\u5148\u67e5\u770b\u4e86\u67d0\u4e2a\u70b9\u7684\u6240\u6709\u8fb9\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\u70b9\u7684\u2026\u2026\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6709\u53ef\u80fd$5$\u53f7\u70b9\u672c\u6765\u53ef\u4ee5\u88ab\u4ece$3$\u53f7\u8282\u70b9\u6765\u7684\u4e00\u6761\u6743\u503c\u4e3a$5$\u7684\u8def\u5f84\u66f4\u65b0\u7684\uff0c\u4f46\u662f\u56e0\u4e3a\u5728\u961f\u5217\u91cc$2$\u5728$3$\u524d\u9762\uff0c\u56e0\u6b64$5$\u53f7\u70b9\u5c31\u88ab$2$\u53f7\u70b9\u6765\u7684\u6743\u503c\u4e3a$7$\u7684\u8def\u5f84\u66f4\u65b0\u4e86\uff01\u5982\u679c$2$\u53f7\u70b9\u548c$3$\u53f7\u70b9\u5230$1$\u53f7\u70b9\u7684\u8ddd\u79bb\u90fd\u4e3a$2$\u7684\u8bdd\uff0c\u5219\u6211\u4eec\u5f88\u660e\u663e\u662f\u9519\u4e86\uff01\u660e\u660e\u4eba\u5bb6$5$\u53f7\u70b9\u7684\u8ddd\u79bb\u53ef\u4ee5\u8fbe\u5230$25$\uff0c\u4f46\u8fd9\u6837\u8dd1\u4e0b\u6765\u5c31\u662f$27$\u4e86\uff01\n\n\u6211\u4eec\u8fd9\u65f6\u5c31\u9700\u8981\u628a\u8ddd\u79bb\u76f8\u540c\u7684\u70b9\u5168\u90fd\u6253\u5305\u5230\u4e00\u4e2a```std::vector<int>```\u91cc\u9762\uff0c\u4e00\u8d77\u66f4\u65b0\u3002\u56e0\u6b64\uff0c\u6211\u4eecbfs\u65f6\u5e94\u8be5\u7528\u7684\u6570\u636e\u7ed3\u6784\u662f```std::queue<vector<int>>```\u3002\n\n\u9664\u4e86\u8fd9\u4e2a\u201c\u4e00\u8d77\u66f4\u65b0\u201d\u7684\u8981\u6c42\u6bd4\u8f83\u96be\u6ce8\u610f\u5230\uff0c\u5176\u5b83\u90e8\u5206\u8fd8\u662f\u5f88\u7b80\u5355\u7684~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=1e9+7;\nint n,m,num[10],tot,res[2001000];\nvector<int>v[2001000][10];\nqueue<vector<int> >q;\nint main(){\n\tscanf(\"%d%d\",&n,&m),tot=n,memset(res,-1,sizeof(res));\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tint tmp=i,sz=0;\n\t\twhile(tmp)num[++sz]=tmp%10,tmp/=10;\n\t\tif(sz==1)v[x][num[sz]].push_back(y);\n\t\telse v[x][num[sz]].push_back(tot+1),v[tot+sz-1][num[1]].push_back(y);\n\t\tfor(int j=2;j<sz;j++)v[tot+j-1][num[sz-j+1]].push_back(tot+j);\n\t\t\n\t\tif(sz==1)v[y][num[sz]].push_back(x);\n\t\telse v[y][num[sz]].push_back(tot+sz-1),v[tot+1][num[1]].push_back(x);\n\t\tfor(int j=2;j<sz;j++)v[tot+sz-j+1][num[sz-j+1]].push_back(tot+sz-j);\n\t\t\n\t\ttot+=sz;\n\t}\n\tq.push({1}),res[1]=0;\n\twhile(!q.empty()){\n\t\tvector<int>x=q.front();q.pop();\n//\t\tfor(int i=0;i<x.size();i++)printf(\"%d \",x[i]);puts(\"\");\n\t\tfor(int i=0;i<10;i++){\n\t\t\tvector<int>y;\n\t\t\tfor(int j=0;j<x.size();j++)for(int k=0;k<v[x[j]][i].size();k++)if(res[v[x[j]][i][k]]==-1)res[v[x[j]][i][k]]=(10ll*res[x[j]]+i)%mod,y.push_back(v[x[j]][i][k]);\n\t\t\tif(!y.empty())q.push(y);\n\t\t}\n\t}\n\tfor(int i=2;i<=n;i++)printf(\"%d\\n\",res[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1583751544,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1209F \u3010Koala and Notebook\u3011"
    },
    {
        "content": "> [CF1209F Koala and Notebook](https://www.luogu.com.cn/problem/CF1209F)\n\n\u65e0\u8111\u5c0f\u4e11\u505a\u6cd5\u3002\n\n\u4e0d\u62c6\u8fb9\uff0c\u800c\u662f\u7c7b\u4f3c [CF464E](https://www.luogu.com.cn/problem/CF464E) \u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4ece $1$ \u5f00\u59cb\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u8dd1 dijkstra\u3002\n\n\u533a\u95f4\u7ef4\u62a4\u5341\u8fdb\u5236\u6570\u54c8\u5e0c\u503c\uff0c\u6bd4\u8f83\u4e24\u4e2a $dist$ \u53ea\u9700\u7ebf\u6bb5\u6811\u4e0a\u4ece\u53f3\u5f80\u5de6\u4e8c\u5206\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(m\\log ^ 2 m)$\uff0c\u6ce8\u610f\u7ebf\u6bb5\u6811\u5927\u5c0f\u8981\u5f00 $m\\log_{10} m$ \u5373 $5\\times 10 ^ 5$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool Mbe;\nconstexpr int N = 1e5 + 5;\nconstexpr int mod = 1e9 + 7;\nconstexpr int mod2 = 998244353;\nconstexpr int L = 5e5;\nconstexpr int K = L << 5;\nint n, m, pw[L], pw2[L], lg[N];\nvector<pair<int, int>> e[N];\nint node, ls[K], rs[K];\nstruct dat {\n  int val, val2, len;\n  dat operator + (const dat &rhs) const {\n    dat res = {rhs.val, rhs.val2, len + rhs.len};\n    res.val = (res.val + 1ll * val * pw[rhs.len]) % mod;\n    res.val2 = (res.val2 + 1ll * val2 * pw2[rhs.len]) % mod;\n    return res;\n  }\n} val[K];\nvoid modify(int pre, int &x, int l, int r, int ql, int qr, int v) {\n  x = ++node, ls[x] = ls[pre], rs[x] = rs[pre];\n  if(l == r) return val[x] = {v / pw[qr - l] % 10, v / pw[qr - l] % 10, 1}, void();\n  int m = l + r >> 1;\n  if(ql <= m) modify(ls[pre], ls[x], l, m, ql, qr, v);\n  if(m < qr) modify(rs[pre], rs[x], m + 1, r, ql, qr, v);\n  val[x] = val[ls[x]] + val[rs[x]];\n}\ndat query(int l, int r, int ql, int qr, int x) {\n  if(!x || ql <= l && r <= qr) return val[x];\n  int m = l + r >> 1;\n  dat ans = {0, 0};\n  if(ql <= m) ans = query(l, m, ql, qr, ls[x]);\n  if(m < qr) ans = ans + query(m + 1, r, ql, qr, rs[x]);\n  return ans;\n}\nint binary(int l, int r, int x, int y) {\n  if(val[x].val == val[y].val && val[x].val2 == val[y].val2) return -1;\n  if(l == r) return l;\n  int m = l + r >> 1;\n  int res = binary(l, m, ls[x], ls[y]);\n  if(res != -1) return res;\n  return binary(m + 1, r, rs[x], rs[y]);\n}\nint querybit(int p, int x) {\n  int l = 1, r = L;\n  while(l != r) {\n    int m = l + r >> 1;\n    if(p <= m) r = m, x = ls[x];\n    else l = m + 1, x = rs[x];\n  }\n  return val[x].val;\n}\nstruct dist {\n  int id, R, len;\n  bool operator > (const dist &rhs) const {\n    if(len != rhs.len) return len > rhs.len;\n    int v = binary(1, L, R, rhs.R);\n    if(v == -1) return 0;\n    return querybit(v, R) > querybit(v, rhs.R);\n  }\n} dis[N];\npriority_queue<dist, vector<dist>, greater<dist>> q;\nbool Med;\nint main() {\n  fprintf(stderr, \"%.4lf\\n\", (&Mbe - &Med) / 1048576.0);\n#ifdef ALEX_WEI\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"1.out\", \"w\", stdout);\n#endif\n  cin >> n >> m;\n  for(int i = 1; i <= m; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    e[x].push_back({y, i});\n    e[y].push_back({x, i});\n  }\n  for(int i = 10; i <= m; i++) lg[i] = lg[i / 10] + 1;\n  for(int i = pw[0] = 1; i < L; i++) pw[i] = pw[i - 1] * 10ll % mod;\n  for(int i = pw2[0] = 1; i < L; i++) pw2[i] = pw2[i - 1] * 10ll % mod2;\n  q.push(dis[1] = {1, 0, 0});\n  while(!q.empty()) {\n    dist t = q.top();\n    q.pop();\n    int id = t.id, le = t.len;\n    if(dis[id].R != t.R) continue;\n    for(auto it : e[id]) {\n      int tmpR, to = it.first, eid = it.second;\n      modify(t.R, tmpR, 1, L, le + 1, le + lg[eid] + 1, eid);\n      dist d = {to, tmpR, le + lg[eid] + 1};\n      if(to != 1 && (!dis[to].R || dis[to] > d)) q.push(dis[to] = d);\n    }\n  }\n  for(int i = 2; i <= n; i++) printf(\"%d\\n\", query(1, n, 1, dis[i].len, dis[i].R).val);\n  return cerr << \"Time: \" << clock() << endl, 0;\n}\n/*\n2022/6/17\nstart coding at 20:09\nfinish debugging at 21:06\n*/\n```",
        "postTime": 1657625135,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1209F Koala and Notebook"
    },
    {
        "content": "\u8fd9\u9898\u662f\u771f\u7684\u6709\u8da3\u3002\u867d\u7136\u573a\u4e0a\u5e76\u6ca1\u6709\u53bb\u5199\uff08\u611f\u89c9\u5199\u4e86\u4e5f\u662f\u4e0d\u53ef\u80fd\u8fc7\u7684\uff0c\u56e0\u4e3a\u7ec6\u8282\u6bd4\u8f83\u591a\uff09\u3002\n\n\u4e00\u5f00\u59cb\u89c9\u5f97\u300c\u96be\u9053\u4e0d\u662f\u628a\u51fa\u8fb9 xjb \u6392\u4e2a\u5e8f\u5c31\u505a\u5b8c\u4e86\u561b\u300d\u3002\u7136\u540e\u53d1\u73b0\u88ab\u53c9\u4e86\uff0c\u5fc3\u60c5\u90c1\u95f7(x\n\n\u8003\u8651\u5982\u4f55\u6bd4\u8f83\u300c\u7f16\u53f7\u76f8\u8fde\u5f97\u5230\u7684\u5341\u8fdb\u5236\u6570\u300d\u7684\u5927\u5c0f\uff0c\u90a3\u5fc5\u7136\u662f\u5148\u6bd4\u8f83\u4f4d\u6570\uff0c\u518d\u4ece\u5934\u5f00\u59cb\u6bd4\u8f83\u6743\u503c\u3002\u4e8e\u662f\u5c31\u6709\u4e2a\u7279\u522b\u5f3a\u7684\u5efa\u56fe\u6280\u5de7\uff1a\u62c6\u8fb9\u3002\u8003\u8651\u628a\u4e00\u6761\u7f16\u53f7\u4e3a $(\\overline{a_1a_2\\cdots a_k})_{10}$ \u7684\u8fb9\u62c6\u6210\u4e24\u6761\u6709\u5411\u94fe\uff0c\u94fe\u4e0a\u7684\u8fb9\u7684\u8fb9\u6743\u5206\u522b\u4e3a $a_1,a_2\\cdots a_k$\u3002\n\n\u7136\u540e\u8003\u8651\u8fdb\u884c\u7c7b\u4f3c\u5206\u5c42\u56fe\u7684 BFS\u3002\u8fd9\u4e2a\u5206\u5c42\u56fe\u7684\u7ec6\u8282\u5f88\u4e30\u5bcc\uff1a\n\n0\u3001\u5206\u5c42\u7684\u76ee\u7684\u662f\uff0c\u63a7\u5236\u904d\u5386\u987a\u5e8f\uff0c\u4f7f\u5f97 BFS \u7684\u6700\u4f18\u6027\u4e5f\u5728\u5f53\u524d\u95ee\u9898\u4e2d\u4f53\u73b0\u3002\u5373\u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6700\u5148\u88ab\u904d\u5386\u65f6\u4e00\u5b9a\u662f\u6700\u77ed\u8def\u3002\n\n1\u3001\u9996\u5148\u8981\u5148\u5ffd\u7565\u8fb9\u6743\u8fdb\u884c\u5206\u5c42\u3002\n\n2\u3001\u5176\u6b21\u8003\u8651\u5982\u679c\u5b58\u5728\u591a\u6761\u51fa\u8fb9\uff0c\u5fc5\u7136\u662f\u8d70\u6743\u6700\u5c0f\u7684\u90a3\u6761\u8fb9\u3002\n\n3\u3001\u53ea\u7b26\u5408\u4e0a\u9762\u4e24\u6761\u8fd8\u662f\u4e0d\u5bf9\u7684\u3002\u56e0\u4e3a\u8003\u8651\u5982\u679c\u67d0\u4e2a\u70b9 $t$ \u6709\u4e24\u6761\u5165\u8fb9 $e_1,e_2$ \u6ee1\u8db3 $val(e_1)<val(e_2)$\uff0c\u4ed6\u4eec\u5728 BFS \u6811\u4e0a\u7684\u6df1\u5ea6\u76f8\u540c\uff0c\u90a3\u4e48\u5982\u679c\u5355\u7eaf\u6309\u70b9\u6765\u8f6c\u79fb\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5148\u8d70 $e_2$ \u518d\u8d70 $e_1$ \u7684\u60c5\u51b5\uff0c\u800c\u6b64\u65f6 $t$ \u5df2\u7ecf\u88ab\u66f4\u65b0\u5b8c\u6bd5\u5c31\u4f1a\u5bfc\u81f4\u51fa\u9519\u3002\u6240\u4ee5\u8fd8\u8981\u6309\u7167\u8fb9\u6743\u4ece $0$ \u5230 $9$ \u8fdb\u884c\u518d\u5206\u5c42\u3002\n\n\u53ef\u4ee5\u77e5\u9053\u8fd9\u6837\u505a\u6700\u540e\u590d\u6742\u5ea6\u4e00\u5b9a\u4e0d\u4f1a\u8d85\u8fc7 $O(10\\times m)$ \u3002\n\n```[cpp\nint ob ;\nint cnt ;\nint n, m ;\nint arr[M] ;\nint f[N] ;\nint g[N] ;\nint T ;\n \nvector <int> q[N] ;\nvector <int> E[N][10] ;\n \nint main(){\n    cin >> n >> m ;\n    int x, y, z ; cnt = n ;\n    for (int i = 1 ; i <= m ; ++ i){\n        x = qr(), y = qr() ; ob = 0 ; z = i ;\n        while (z) arr[++ ob] = z % 10, z /= 10 ; z = x ;\n        for (int j = ob ; j > 1 ; -- j)\n            E[x][arr[j]].push_back(++ cnt), x = cnt ;\n        E[x][arr[1]].push_back(y) ;\n        for (int j = ob ; j > 1 ; -- j)\n            E[y][arr[j]].push_back(++ cnt), y = cnt ;\n        E[y][arr[1]].push_back(z) ;\n    }\n    g[1] = T = 1 ;\n    q[1].push_back(1) ;\n    for (int d = 1 ; d <= T ; ++ d){\n//        if (!q[d].size()) break ;\n        for (z = 0 ; z < 10 ; ++ z){\n            auto t = q[d].begin() ;\n            while (t != q[d].end()){\n                x = *t ;\n                for (auto y : E[x][z]){\n                    if (g[y]) continue ;\n                    f[y] = (f[x] * 10ll + z) % P ;\n                    g[y] = 1, q[T + 1].push_back(y) ;\n                }\n                ++ t ;\n            }\n            if (q[T + 1].size()) ++ T ;\n        }\n    }\n    for (int i = 2 ; i <= n ; ++ i)\n        printf(\"%d\\n\", f[i]) ; return 0 ;\n}\n```\n\n# ",
        "postTime": 1592314121,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u300c\u627e\u6027\u8d28+\u6bd4\u8f83\u5f3a\u7684\u5206\u5c42\u56fe\u300d [Codeforces 1209F] Koala and Notebook"
    },
    {
        "content": "\u5c06\u6bcf\u4e00\u6761\u8fb9\u6309 $10$ \u8fdb\u5236\u4f4d\u62c6\u5f00\uff0c\u7136\u540eBFS \u8d2a\u5fc3\uff0c\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u5373\u53ef\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9 + 7;\nvector<int> son[2000010][10];\nint n, m, cnt, vis[2000010];\nint dis[2000010];\ninline void addedge(int u, int v, int w) {\n    while(w >= 10) {\n        cnt++;\n        son[cnt][w % 10].push_back(v);\n        v = cnt;\n        w /= 10;\n    }\n    son[u][w].push_back(v);\n}\nvector<vector<int> > q1, q2;\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    cnt = n;\n    for(int i = 1; i <= m; i++) {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        addedge(u, v, i);\n        addedge(v, u, i);\n    }\n    dis[1] = 0;\n    vector<int> tmp;\n    tmp.push_back(1);\n    q1.push_back(tmp);\n    vis[1] = 1;\n    while(1) {\n        if(q1.empty()) break;\n        for(auto x : q1) {\n            for(int d = 0; d < 10; d++) {\n                tmp.clear();\n                for(auto i : x) {\n                    for(auto v : son[i][d]) {\n                        if(vis[v]) continue;\n                        vis[v] = 1, dis[v] = (dis[i] * 10ll + d) % mod;\n                        tmp.push_back(v);\n                    }\n                }\n                if(!tmp.empty()) q2.push_back(tmp);\n            }\n        }\n        q1 = q2;\n        q2.clear();\n    }\n    for(int i = 2; i <= n; i++) printf(\"%d\\n\", dis[i]);\n    return 0;\n}\n```\n",
        "postTime": 1568534044,
        "uid": 26937,
        "name": "_soul_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1209F \u3010Koala and Notebook\u3011"
    },
    {
        "content": "## \u9898\u76ee\u94fe\u63a5\n[link.](https://www.luogu.com.cn/problem/CF1209F)\n\n## \u9898\u89e3\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6bcf\u4e00\u6761\u8fb9\u7684\u7f16\u53f7\u4f4d\u6570\u76f8\u540c\u5c31\u4f1a\u5f88\u597d\u5904\u7406\uff0c\u53c8\u53ef\u4ee5\u53d1\u73b0\u8d70\u8fc7\u4e00\u6761\u7f16\u53f7\u4e3a 1 \u7684\u8fb9\u548c\u4e00\u6761\u7f16\u53f7\u4e3a 2 \u7684\u8fb9\u7684\u8d21\u732e\u4e0e\u8d70\u8fc7\u4e00\u6761\u7f16\u53f7\u4e3a 12 \u7684\u8fb9\u76f8\u7b49\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u62c6\u8fb9\uff0c\u5c06\u8fb9\u6309\u7167\u5341\u8fdb\u5236\u8fdb\u884c\u62c6\u5206\u3002\u56e0\u4e3a\u6bcf\u6761\u8fb9\u53ea\u6709\u4e00\u4f4d\u4e86\uff0c\u6240\u4ee5\u6700\u77ed\u7684\u8ddd\u79bb\u80af\u5b9a\u8d70\u6700\u5c11\u7684\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u95ee\u9898\u8f6c\u6362\u6210\u4e86\u6700\u77ed\u8def\u95ee\u9898\u3002\n\n\u7136\u540e\u56e0\u4e3a\u5982\u679c\u5b58\u5728\u591a\u6761\u51fa\u8fb9\uff0c\u6211\u4eec\u8981\u8d70\u6743\u6700\u5c0f\u7684\u90a3\u6761\u8fb9\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u51fa\u8fb9\u8fdb\u884c 0~9 \u5206\u7c7b\u3002\n\n\u7136\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e0a\u6587\u63d0\u5230\u8fc7\u8d70 1 \u518d\u8d70 2 \u548c\u8d70 12 \u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vkwahd5a.png)\n\n\u4ece $s$ \u51fa\u53d1\uff0c\u6211\u4eec\u6709\u53ef\u80fd\u4f1a\u9009\u62e9\u8d70 1->2->3->4 \u7684\u9053\u8def\u5230\u8fbe $t$ \uff0c\u4f46\u663e\u7136\u8fd9\u4e0d\u662f\u6700\u8fd1\u7684\u9053\u8def\u3002\n\n\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5728\u6bcf\u6b21\u641c\u7d22\u65f6\u8ba9\u5c42\u6570\u76f8\u540c\u7684\u4e00\u8d77\u6269\u5c55\u3002\n\n\u4f46\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mjkb7xvo.png)\n\n\u5982\u56fe\uff0c\u5c06\u7b2c\u4e09\u5c42\u7684\u653e\u5728\u4e00\u8d77\u6269\u5c55\uff0c\u4f46\u53ef\u80fd\u4f1a\u51fa\u73b0 $2< 3$ \uff0c\u6240\u4ee5\u6211\u5148\u4ece\u4e0b\u9762\u6269\u5c55\u7684\u7ec8\u70b9\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u5176\u5b9e\u6211\u4eec\u6269\u5c55\u5e76\u4e0d\u662f\u5c06\u540c\u4e00\u5c42\u7684\u653e\u4e00\u8d77\uff0c\u800c\u662f\u5c06\u76ee\u524d\u4e3a\u6b62\u4ef7\u503c\u76f8\u540c\u7684\u653e\u5728\u4e00\u8d77\uff0c\u5e76\u6309\u7167\u4e0b\u4e00\u6761\u8fb9\u7684\u6743\u503c\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6269\u5c55\u3002\n\n### code\n````cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define db double\n\nint n,k,ans=0;\nstruct zz{\n\tint x,y;\t\n}a[15],b[1005];\nvector<int> v[15][1005];\nbool cmp(zz x,zz y){\n\tif(x.x==y.x) return x.y<y.y;\n\treturn x.x<y.x; \n}\n\nbool Cheak(zz x,zz y,zz yy){\n\tif(x.x==y.x&&x.x==yy.x) return 1;\n\tif(x.x==y.x&&x.x==yy.x) return 1;\n\treturn (x.y-y.y)*(x.x-yy.x)==(x.y-yy.y)*(x.x-y.x);\n}\n\nvoid Fk(){\n\tfor(int i=1;i<=k;i++) for(int j=1;j<=n;j++) for(int l=1;l<=n;l++) if(j!=l&&Cheak(a[i],b[j],b[l]))\n\t\tif(min(a[i].x,b[j].x)<=b[l].x&&b[l].x<=max(a[i].x,b[j].x)&&min(a[i].y,b[j].y)<=b[l].y&&b[l].y<=max(a[i].y,b[j].y)) \n\t\t\tv[i][j].push_back(l);\n}\n\nbool f[15];\nint t[15],sum=0;\nbool vis[1005];\n\n\nbool DFS(int x){\n\tif(sum==k+1) return 0;\n\tint now=t[sum++];\n\tfor(auto y:v[now][x]) if(!vis[y]&&!DFS(y)) return 0;\n\tvis[x]=1;\n\treturn 1;\n}\n\nbool Check(int x,int tot){\n\tif(tot==k+1){ memset(vis,0,sizeof vis);sum=1;return DFS(x); }\n\tfor(int i=1;i<=k;i++) if(!f[i]){\n\t\tf[i]=1;t[tot]=i;\n\t\tif(Check(x,tot+1)) return 1;\n\t\tf[i]=0;\n\t}\n\treturn 0;\n}\n\nint main(){\n\tcin>>k>>n;\n\tfor(int i=1;i<=k;i++) scanf(\"%d%d\",&a[i].x,&a[i].y);\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d\",&b[i].x,&b[i].y);\n\tFk();\n\tfor(int i=1;i<=n;i++){\n\t\tans+=Check(i,1);\n\t\tmemset(f,0,sizeof f);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1656153939,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "CF1209F \u9898\u89e3"
    }
]