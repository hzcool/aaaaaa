[
    {
        "content": "\u8fd9\u9898\u4ee3\u7801\u5176\u5b9e\u7528\u4e0d\u7740\u767e\u6765\u884c\uff0c\u5982\u679c\u7528\u4e3b\u5e2d\u6811\u5b9e\u73b0\u7684\u8bdd\u3002\n\n\u9047\u5230\u6811\u4e0a\u95ee\u9898\uff0c\u9996\u5148\u60f3\u4e00\u60f3\u94fe\u4e0a\u7684\u60c5\u51b5\u3002  \n\u5982\u679c\u8f93\u5165\u662f\u4e00\u6761\u94fe\uff0c\u6211\u4eec\u5411\u67d0\u4e2a\u65b9\u5411\u8df3\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u8981\u5c3d\u53ef\u80fd\u5750\u8f66\u5230\u8fdc\u7684\u5730\u65b9\uff0c\u6bcf\u6b21\u66b4\u529b\u627e\u6700\u8fdc\u7684\u80af\u5b9a\u4e0d\u884c\uff0c\u5bb9\u6613\u60f3\u5230\u53ef\u4ee5\u500d\u589e\u4f18\u5316\u3002\n\n\u73b0\u5728\u628a\u94fe\u4e0a\u7684\u60c5\u51b5\u642c\u5230\u6811\u4e0a\u3002  \n\u6811\u4e0a\u4ecd\u7136\u662f\u94fe\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u8981\u6c42\u6700\u5c11\u4e58\u8f66\uff0c\u800c\u5728\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u4e0d\u91cd\u590d\u7ecf\u8fc7\u70b9\u7684\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u8003\u8651\u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u90a3\u6761\u94fe\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u8fd9\u91cc\u540c\u6837\u53ef\u4ee5\u500d\u589e\uff0c\u628a\u8def\u5206\u6210\u4e24\u6bb5\uff0c\u7136\u540e\u4e24\u70b9\u5f80\u5b83\u4eec\u7684 LCA \u8df3\u3002\u53ef\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u4e07\u4e00\u8fd9\u4e2a\u8def\u8df3\u8fc7 LCA \u4e86\u600e\u4e48\u529e\uff1f\n\n\u53ea\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6709\u4e00\u6761\u8def\u80fd\u8de8\u8fc7 LCA \u5c31\u597d\u4e86\uff01  \n\u4e5f\u5c31\u662f\u8bf4\u8981\u5224\u65ad\u6709\u6ca1\u6709\u4e00\u8f86\u8f66\u7684\u7ebf\u8def\u7684\u4fe9\u7aef\u70b9\u5206\u522b\u5728\u4e24\u4e2a\u67e5\u8be2\u7684\u70b9\u5728 LCA \u4e0a\u4e00\u6b21\u8df3\u5230\u7684\u70b9\u7684\u4e24\u4e2a\u5b50\u6811\u5185\uff0c\u8fd9\u5c31\u53d8\u6210\u4e86\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u626b\u63cf\u7ebf\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u6211\u63a8\u8350\u4e3b\u5e2d\u6811\uff0c\u56e0\u4e3a\u4f3c\u4e4e\u77ed\u4e00\u4e9b\u3002\u5177\u4f53\u5730\uff0c\u5bf9\u6bcf\u4e2a\u7aef\u70b9\u70b9\u6309 dfs \u5e8f\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u63d2\u5165\u53e6\u4e00\u4e2a\u7aef\u70b9\uff0c\u67e5\u8be2\u65f6\u53ea\u9700\u8981\u67e5\u8be2\u4e00\u4e2a\u7aef\u70b9\u7684\u5b50\u6811 dfs \u533a\u95f4\u5185\u7684\u503c\u6709\u662f\u5426\u5927\u4e8e $0$ \u5373\u53ef\u3002\n\n\u5176\u5b9e\u51fa\u9898\u4eba\u4e3a\u4e86\u8ba9\u6211\u4eec\u4ee3\u7801\u5c11\u5199\u4e00\u70b9\u8fd8\u662f\u505a\u4e86\u4e9b\u4ec0\u4e48\u7684\uff0c\u6bd4\u5982\u9898\u76ee\u91cc\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u4e00\u5b9a\u6bd4\u5b83\u5c0f\uff0c\u8fd9\u6837\u4ece\u5927\u5230\u5c0f\u5c31\u53ef\u4ee5\u907f\u514d\u7236\u4eb2\u7684\u5f71\u54cd\u3002  \n\u8fd8\u6709\u4e2a\u5c0f trick, \u5728\u4e00\u68f5\u6811\u4e0a\u591a\u6b21\u63d2\u5165\u7684\u65f6\u5019\u53ef\u4ee5\u63d2\u591a\u68f5\u6811\uff0c\u6700\u540e\u628a\u6839\u6307\u5411\u6700\u540e\u90a3\u68f5\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u5728\u5199\u4e2a\u4fee\u6539\u51fd\u6570\u4e86\u3002\n\n\u4ee3\u7801\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\nconst int N = 200005;\nint n, m, cnt, tim, f[N][20], d[N], g[N][20], rt[N], p[N], q[N];\nstd::vector<int> G[N], bus[N];\nstruct twt { int ls, rs, s; } t[N*40];\nvoid dfs(int u) {\n    p[u] = ++tim, d[u] = d[f[u][0]] + 1;\n    for (int i = 0; i < (signed)G[u].size(); i++) dfs(G[u][i]);\n    q[u] = tim;\n}\nint lca(int x, int y) {\n    if (d[x] < d[y]) std::swap(x, y);\n    int t = d[x] - d[y];\n    for (int i = 0; i <= 19; i++)\n        if (t & (1 << i)) x = f[x][i];\n    if (x == y) return x;\n    for (int i = 19; ~i; i--)\n        if (f[x][i] != f[y][i]) x = f[x][i], y = f[y][i];\n    return f[x][0];\n}\nvoid add(int &rt, int l, int r, int x) {\n    t[++cnt] = t[rt], t[cnt].s ++;\n    rt = cnt;\n    if (l == r) return;\n    int mid = l + (r-l) / 2;\n    if (x <= mid) add(t[rt].ls, l, mid, x);\n    else add(t[rt].rs, mid+1, r, x);\n}\nint Query(int rt, int l, int r, int x, int y) {\n    if (!rt) return 0;\n    if (l == x && r == y) return t[rt].s;\n    int mid = l + (r-l) / 2;\n    if (y <= mid) return Query(t[rt].ls, l, mid, x, y);\n    else if (x > mid) return Query(t[rt].rs, mid+1, r, x, y);\n    else return Query(t[rt].ls, l, mid, x, mid) +\n                Query(t[rt].rs, mid+1, r, mid+1, y);\n}\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 2; i <= n; i++) \n        scanf(\"%d\", &f[i][0]), G[f[i][0]].push_back(i);\n    for (int j = 1; j <= 19; j++)   \n        for (int i = 1; i <= n; i++) f[i][j] = f[f[i][j-1]][j-1];\n    dfs(1);\n    scanf(\"%d\", &m);\n    for (int i = 1; i <= n; i++) g[i][0] = i;\n    for (int i = 1, x, y; i <= m; i++) {\n        scanf(\"%d%d\", &x, &y);\n        int l = lca(x, y);\n        g[x][0] = std::min(g[x][0], l), g[y][0] = std::min(g[y][0], l);\n        bus[p[x]].push_back(p[y]), bus[p[y]].push_back(p[x]);\n    }\n    for (int i = n; i >= 1; i--) \n        g[f[i][0]][0] = std::min(g[f[i][0]][0], g[i][0]);\n    for (int j = 1; j <= 19; j++)\n        for (int i = 1; i <= n; i++) g[i][j] = g[g[i][j-1]][j-1];\n    for (int i = 1; i <= n; i++) {\n        rt[i] = rt[i-1];\n        for (int j = 0; j < (signed)bus[i].size(); j++)\n            add(rt[i], 1, n, bus[i][j]);\n    }\n    scanf(\"%d\", &m);\n    for (int i = 1, u, v; i <= m; i++) {\n        scanf(\"%d%d\", &u, &v);\n        if (u == v) { puts(\"0\"); continue; }\n        int l = lca(u, v);\n        if (g[u][19] > l || g[v][19] > l) { puts(\"-1\"); continue; }\n        int ans = 2;\n        for (int i = 19; i >= 0; i--)\n            if (g[u][i] > l) u = g[u][i], ans += (1 << i);\n        for (int i = 19; i >= 0; i--)\n            if (g[v][i] > l) v = g[v][i], ans += (1 << i);\n        if (l == u || l == v) ans --;\n        else ans -= !!(Query(rt[q[u]], 1, n, p[v], q[v]) - \n                       Query(rt[p[u]-1], 1, n, p[v], q[v]));\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1625975640,
        "uid": 40318,
        "name": "Acfboy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF983E NN country"
    },
    {
        "content": "## \u601d\u8def\n\n\u795e\u5947\u8d2a\u5fc3+\u500d\u589e\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u5c31\u662f\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9**\u80fd\u901a\u8fc7\u540c\u4e00\u6761\u8def\u7ebf\u5230\u8fbe\u7684**\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee $(x,y)$\uff0c\u5148\u4ee4 $dfn_x < dfn_y$\uff0c\u7136\u540e\uff1a\n\n- \u5982\u679c $x,y$ \u662f\u7956\u5148\u548c\u540e\u4ee3\u5173\u7cfb\uff0c\u5373 $\\operatorname{lca}(x,y) = x$\uff0c\u90a3\u4e48\u5c31\u8ba9 $y$ \u5411\u4e0a\u8df3 $dy$ \u6b65\u76f4\u5230\u548c $x$ \u53ea\u5dee\u4e00\u6b65\u3002\u663e\u7136\u5982\u679c\u8df3\u4e0d\u5230 $x$ \u5c31\u65e0\u89e3\uff0c\u5426\u5219\u7b54\u6848\u4e3a $dy + 1$\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u8df3\u90fd\u5207\u6362\u4e86\u4e00\u6b21\u8def\u7ebf\uff0c\u4e14\u6b64\u65f6\u7684 $y$ \u548c $x$ \u4e00\u5b9a\u5728\u540c\u4e00\u6761\u8def\u7ebf\u4e0a\u3002\n\n- \u5982\u679c $x,y$ \u4e0d\u662f\u7956\u5148\u548c\u540e\u4ee3\u5173\u7cfb\uff0c\u90a3\u4e48\u5c31\u8ba9 $x$ \u5411\u4e0a\u8df3 $dx$ \u6b65\u76f4\u5230\u79bb $lca$ \u53ea\u5dee\u4e00\u6b65\uff0c$y$ \u5411\u4e0a\u8df3 $dy$ \u6b65\u76f4\u5230\u79bb $lca$ \u53ea\u5dee\u4e00\u6b65\u3002\u663e\u7136\u5982\u679c $x$ \u6216 $y$ \u8df3\u4e0d\u5230 $lca$ \u5c31\u65e0\u89e3\uff0c\u5426\u5219\u5982\u679c\u6b64\u65f6 $x$ \u548c $y$ \u5728\u540c\u4e00\u6761\u8def\u7ebf\u4e0a\uff0c\u5219\u7b54\u6848\u4e3a $dx + dy + 1$\uff1b\u5426\u5219\u7b54\u6848\u4e3a $dx + dy + 2$\uff08\u56e0\u4e3a $x$ \u5fc5\u987b\u518d\u8df3\u4e00\u6b65\u624d\u80fd\u4e0e $y$ \u5728\u540c\u4e00\u6761\u8def\u7ebf\u4e0a\uff09\u3002\n\n\u53d1\u73b0\u66b4\u529b\u8df3\u592a\u6162\u4e86\uff0c\u6240\u4ee5\u7528\u500d\u589e\u4f18\u5316\uff0c\u9884\u5904\u7406\u51fa\u500d\u589e\u6570\u7ec4 $f_{u,j}$ \u8868\u793a $u$ \u5411\u4e0a\u8df3 $2^j$ \u6b65\u8df3\u5230\u54ea\u4e2a\u70b9\u3002\n\n\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5224\u65ad\u4e24\u4e2a\u70b9 $u,v$ \u662f\u5426\u5728\u540c\u4e00\u6761\u8def\u7ebf\u4e0a\u3002\u5982\u679c\u5b83\u4eec\u5728\u540c\u4e00\u6761\u8def\u7ebf\uff0c\u90a3\u4e48 $u$ \u7684\u5b50\u6811\u4e2d\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u70b9 $p$\uff0c\u4f7f\u5f97**\u4ece $p$ \u51fa\u53d1\u7684\u8def\u7ebf\u4e2d\u6709\u4e00\u6761\u8def\u7ebf\u7684\u7ec8\u70b9\u5728 $v$ \u7684\u5b50\u6811\u5185**\u3002\u6211\u4eec\u5c06\u6bcf\u4e00\u68f5\u5b50\u6811\u8f6c\u5316\u4e3a\u4e00\u6bb5\u8fde\u7eed\u7684 $dfn$ \u533a\u95f4 $[start_x, end_x]$\uff0c\u90a3\u4e48\u5982\u679c\u628a\u4e00\u6761\u8def\u7ebf\u770b\u4f5c\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9 $(dfn_a,dfn_b)$\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u4e8c\u7ef4\u6570\u70b9\uff1a\u7edf\u8ba1\u6a2a\u5750\u6807\u5728 $[start_u,end_u]$ \u533a\u95f4\u5185\uff0c\u7eb5\u5750\u6807\u5728 $[start_v,end_v]$ \u533a\u95f4\u5185\u662f\u5426\u5b58\u5728\u70b9\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n## \u4ee3\u7801\n\n[code](https://codeforces.com/contest/983/submission/157001707)",
        "postTime": 1652443793,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "CF983E \u9898\u89e3"
    },
    {
        "content": "\uff08\u5410\u69fd\u4e00\u53e5\u8fd9\u9898\u7684\u8d85\u5927\u4ee3\u7801\u91cf\u2026\u2026\u4e00\u5806dfs+\u4e00\u4e2a\u6811\u5256+\u4e00\u4e2a\u500d\u589e\u2026\u2026\uff09\n\n\u9996\u5148\u8fd9\u9898\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u6811\u4e0a\u500d\u589e\uff0c\u5373\u8bbe$dp[i][j]$\u4e3a\u70b9i\u5f80**\u4e0a**\u8d70$2^j$\u6761\u516c\u4ea4\u8f66\u8def\u7ebf\u80fd\u5230\u8fbe\u7684\u6700\u9ad8\u70b9\uff08\u4e0d\u884c\u5219\u8bbe\u4e3a0\uff0c\u6211\u4eec\u4ee4$deep[0]=+\u221e$\u5373\u53ef\uff09\uff0c\u8fd9\u4e2a$dp[i][0]$\uff08\u5373\u5411\u4e0a\u8d70\u4e00\u6761\u8def\u7ebf\u5230\u7684\u6700\u9ad8\u70b9\uff09\u6211\u76f4\u63a5\u7528\u7684\u6811\u5256\uff0c\u5c31\u662f\u6709\u4e00\u6761\u8def\u7ebf$s->t$\uff0c\u7136\u540e\u5c31\u628a\u8fd9\u4e2a\u8def\u5f84\u4e0a\u7684\u70b9\u9009\u62e9\u6027\u8d4b\u503c\uff08\u5c31\u662f\u8d4b\u503c\u6210\u6df1\u5ea6\u5c3d\u91cf\u5c0f\u7684\u70b9\uff09\u4e3a$LCA(s,t)$\uff0c\u90a3\u4e2a\u5c5e\u4e8e\u7eaf\u7ebf\u6bb5\u6811\u90e8\u5206\u8fd9\u91cc\u5c31\u4e0d\u63d0\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee$(a,b)$\uff0c\u6211\u4eec\u7528\u7c7b\u4f3c\u500d\u589e$LCA$\u7684\u65b9\u5f0f\u8ba9\u4ed6\u4eec\u5206\u522b\u5411\u4e0a\u8df3\u8def\u7ebf\uff0c**\u76f4\u5230\u4ed6\u4eec\u5206\u522b\u5230LCA\u53ea\u5269\u6700\u591a\u4e00\u6761\u53ef\u884c\u8def\u7ebf\u4e3a\u6b62**\uff0c\u5982\u679c\u8df3\u4e0d\u5230LCA\u5c31\u4e00\u5b9a\u65e0\u89e3\uff0c\u5982\u679c\u5b83\u4eec\u5c45\u7136\u91cd\u5408\u4e86\u90a3\u5c31\u4e0d\u7528\u7ba1\u76f4\u63a5\u51fa\u7b54\u6848\u3002\u7136\u540e\u6211\u4eec\u8981\u505a\u7684\u5de5\u4f5c\u5c31\u662f\u5224\u65ad\u73b0\u5728\u7684a\u548cb\u662f\u5426\u80fd\u53ea\u901a\u8fc7\u4e00\u6761\u8fc7$LCA(a,b)$\u7684\u8def\u7ebf\u76f4\u63a5\u5230\u8fbe\uff0c\u8fd9\u6837\u7684\u8bdd\u53ea\u9700\u628a\u7b54\u6848+1\uff0c\u5426\u5219\u5c31\u628a\u7b54\u6848+2\u5c31\u662f\u8fd8\u5f97\u8d70\u4e0d\u540c\u76842\u6761\u5230LCA\u76f8\u9047\uff0c\u90a3\u4e48\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u2460$a==LCA(a,b)||b==LCA(a,b)$\uff0c\u90a3\u4e48\u663e\u7136ab\u4e00\u5b9a\u53ef\u4ee5\u76f4\u8fbe\u3002\n\n\u2461ab\u5728$LCA(a,b)$\u4e24\u4fa7\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u8981\u5224\u65ad\u8fd9\u6761\u6298\u8d77\u6765\u7684\u8def\u5f84\u662f\u4e0d\u662f\u88ab\u4e00\u6761\u8def\u7ebf\u6240\u8986\u76d6\uff0c\u90a3\u5c31\u7528\u79bb\u7ebf\u7684dfs\u5904\u7406\uff0c\u5f53\u5230\u4e00\u4e2a\u8def\u7ebf\u7684\u4e00\u7aef\uff0c\u5c31\u628a\u53e6\u4e00\u7aef+1\uff0c\u5982\u679ca\u7684\u5b50\u6811\u4e2d\u5b58\u5728\u80fd\u4f7fb\u7684\u5b50\u6811\u548c\u6539\u53d8\u7684\u70b9\u5c31\u8bf4\u660e\u8fd9\u6761\u8def\u5f84\u88ab\u8986\u76d6\u4e86\uff0cab\u53ef\u4e92\u8fbe\u3002\u81f3\u4e8e\u5b50\u6811\u548c\u5c31\u968f\u4fbf\u7528\u4e2alogn\u6570\u636e\u7ed3\u6784\u7ef4\u62a4dfs\u5e8f\u5427\u3002\n\n\u5bf9\u4e86\uff0c\u5728\u60a8\u500d\u589e\u5411\u4e0a\u8df3\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u628a\u5411\u4e0a\u8df3\u7684\u8def\u7ebf\u8ba1\u5165\u7b54\u6848\uff0c\u800c\u4e14\u52a0\u7684\u4e0d\u662f1\uff0c\u800c\u662f\u5411\u4e0a\u8df3\u7684\u90a3\u4e2a$2^j$\u2026\u2026\uff08\u6211\u56e0\u4e3a\u8fd9\u4e2aWA\u4e86\u4e00\u7247\u2026\u2026\uff09\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nvoid print(int num){\n    if(num==-1){\n        putchar('-');putchar('1');return;\n    }if(num>=10)print(num/10);putchar(num%10+'0');\n}\ninline int get(){\n    int n;char c;while((c=getchar())||1)if(c>='0'&&c<='9')break;\n    n=c-'0';while((c=getchar())||1){\n        if(c>='0'&&c<='9')n=n*10+c-'0';\n        else return(n);\n    }\n}\ntypedef struct _b{\n    int dest;int next;\n}bian;bian memchi[1000001];int gn=1;int heads[200001];\ninline void add(int s,int t){\n    memchi[gn].dest=t;memchi[gn].next=heads[s];heads[s]=gn;gn++;\n}\nint dp[200001][21];int gdfn=1;\nint dfn[200001],top[200001],deep[200001],size[200001],zhongson[200001],dad[200001];\n//-------------\n//  Warning!!!\n//\u7ebf\u6bb5\u6811\u90e8\u5206\uff0cdeep[0]=+inf\n//-------------\ntypedef struct _n{\n    int left;int right;int data;\n}node;node nodes[1000001];int gnn=1;\ninline void down(int tree){\n    int ls=nodes[tree].left,rs=nodes[tree].right,cjr=nodes[tree].data;\n    if(cjr!=0){\n        if(deep[cjr]<deep[nodes[ls].data])nodes[ls].data=cjr;\n        if(deep[cjr]<deep[nodes[rs].data])nodes[rs].data=cjr;\n    }\n}\nint ints[200001];int n,root;\nint bun[200001];\ninline void incpt(int pt){\n    for(register int i=pt;i<=n;i+=(i&-i))bun[i]++;\n}\ninline int getpt(int pt){\n    int ans=0;for(register int i=pt;i>0;i-=(i&-i))ans+=bun[i];return(ans);\n}\ninline int getsum(int l,int r){\n    return(getpt(r)-getpt(l-1));\n}\nint build(int l,int r){\n    int tree=gnn;gnn++;nodes[gnn].data=0;if(l!=r){\n        int mid=(l+r)>>1;nodes[tree].left=build(l,mid);nodes[tree].right=build(mid+1,r);\n    }return(tree);\n}int num;\nvoid change(int rl,int rr,int l,int r,int tree){\n    if(deep[nodes[tree].data]<deep[num])return;\n    if(rl==l&&rr==r){\n        nodes[tree].data=num;return;\n    }int mid=(l+r)>>1;down(tree);if(rl>mid)change(rl,rr,mid+1,r,nodes[tree].right);\n    else{\n        if(rr<=mid)change(rl,rr,l,mid,nodes[tree].left);\n        else{\n            change(rl,mid,l,mid,nodes[tree].left);\n            change(mid+1,rr,mid+1,r,nodes[tree].right);\n        }\n    }\n}\nvoid tui(int l,int r,int tree){\n    if(l==r){\n        ints[l]=nodes[tree].data;return;\n    }\n    int mid=(l+r)>>1;down(tree);tui(l,mid,nodes[tree].left);tui(mid+1,r,nodes[tree].right);\n}\nvoid dfs(int pt,int baba){int mx=0,best=0;top[pt]=pt;\n    size[pt]=1;for(register int i=heads[pt];i;i=memchi[i].next){\n        if(memchi[i].dest==baba)continue;\n        dad[memchi[i].dest]=pt;deep[memchi[i].dest]=deep[pt]+1;dfs(memchi[i].dest,pt);\n        size[pt]+=size[memchi[i].dest];if(size[memchi[i].dest]>mx)mx=size[memchi[i].dest],best=memchi[i].dest;\n    }zhongson[pt]=best;\n}\nvoid dfs1(int pt,int baba){dfn[pt]=gdfn;gdfn++;\n    if(zhongson[pt]){\n        top[zhongson[pt]]=top[pt];dfs1(zhongson[pt],pt);\n    }for(register int i=heads[pt];i;i=memchi[i].next){\n        if(memchi[i].dest==baba||memchi[i].dest==zhongson[pt])continue;dfs1(memchi[i].dest,pt);\n    }\n}\ninline int lca(int a,int b){\n    while(top[a]!=top[b]){\n        if(deep[top[a]]>deep[top[b]])swap(a,b);b=dad[top[b]];\n        //printf(\"(%d,%d)\\n\",a,b);\n    }if(deep[a]>deep[b])swap(a,b);return(a);\n}\ninline void setst(int s,int t,int _n){\n    num=_n;\n    while(top[s]!=top[t]){\n        if(deep[top[s]]>deep[top[t]])swap(s,t);change(dfn[top[t]],dfn[t],1,n,root);\n        //printf(\"change(%d,%d,%d)\\n\",dfn[top[t]],dfn[t],num);\n\t\tt=dad[top[t]];\n    }if(deep[s]>deep[t])swap(s,t);change(dfn[s],dfn[t],1,n,root);//printf(\"change(%d,%d,%d)\\n\",dfn[s],dfn[t],num);\n}\nint ansq[200001];\ntypedef struct _psw{\n    int other;int tmp;int query;\n}eflags;\nvector<eflags> cmd[200001];\nvector<int> others[200001];\nvoid dfs2(int pt,int baba){\n\tfor(register int i=0;i<cmd[pt].size();i++){\n\t\tint her=cmd[pt][i].other;\n\t\tcmd[pt][i].tmp=getsum(dfn[her],dfn[her]+size[her]-1);\n\t}\n\tfor(register int i=0;i<others[pt].size();i++){\n\t\tincpt(dfn[others[pt][i]]);\n\t}\n\tfor(register int i=heads[pt];i;i=memchi[i].next){\n\t\tif(memchi[i].dest==baba)continue;\n\t\tdfs2(memchi[i].dest,pt);\n\t}\n\tfor(register int i=0;i<cmd[pt].size();i++){\n\t\tint her=cmd[pt][i].other;\n\t\tif(getsum(dfn[her],dfn[her]+size[her]-1)==cmd[pt][i].tmp){\n\t\t\tansq[cmd[pt][i].query]+=2;\n\t\t}else{\n\t\t\tansq[cmd[pt][i].query]++;\n\t\t}\n\t}\n}\nint main(){\n    n=get();for(register int i=2;i<=n;i++){\n        int a=get();add(i,a);add(a,i);\n    }deep[0]=1234567890;\n    dfs(1,0);dfs1(1,0);root=build(1,n);\n    int m=get();for(register int i=1;i<=m;i++){\n        int s=get(),t=get();setst(s,t,lca(s,t));//printf(\"set path %d->%d,width %d\\n\",s,t,lca(s,t));\n\t\tothers[s].push_back(t);others[t].push_back(s);\n    }tui(1,n,root);for(register int i=1;i<=n;i++)dp[i][0]=ints[dfn[i]];\n    for(register int i=1;i<=20;i++){\n        for(register int j=1;j<=n;j++)dp[j][i]=dp[dp[j][i-1]][i-1];\n    }\n    //for(register int i=1;i<=n;i++){\n    //\tprintf(\"dp[%d][0]=%d,dfn=%d\\n\",i,dp[i][0],dfn[i]);\n\t//}\n    int q=get();for(register int i=1;i<=q;i++){\n        int s=get(),t=get();int Lca=lca(s,t);eflags hh;\n        //printf(\"Lca(%d,%d)=%d\\n\",s,t,Lca);\n        for(register int j=20;j>=0;j--){\n            if(dp[s][j]!=0&&deep[dp[s][j]]>deep[Lca])s=dp[s][j],ansq[i]+=(1<<j);\n        }if(deep[dp[s][0]]>deep[Lca]&&s!=Lca){\n            ansq[i]=-1;goto s;\n        }for(register int j=20;j>=0;j--){\n            if(dp[t][j]!=0&&deep[dp[t][j]]>deep[Lca])t=dp[t][j],ansq[i]+=(1<<j);\n        }if(deep[dp[t][0]]>deep[Lca]&&t!=Lca){\n            ansq[i]=-1;goto s;\n        }\n        if(s==t)goto s;\n        //printf(\"new %d,%d\\n\",s,t);\n        if(s==Lca||t==Lca){\n        \tansq[i]++;goto s;\n\t\t}\n        //\u82e5\u786e\u5b9e\u76f8\u540c\uff0cansq++\uff0c\u5426\u5219ansq+=2\n        hh.tmp=0;hh.query=i;hh.other=t;\n\t\tcmd[s].push_back(hh);\n        s:;\n    }dfs2(1,0);\n    for(register int i=1;i<=q;i++){\n    \tprint(ansq[i]);putchar('\\n');\n\t}\n    return(0);\n}\n```",
        "postTime": 1531014409,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF983E \u3010NN country\u3011"
    },
    {
        "content": "[\u9898\u4f20](https://www.luogu.com.cn/problem/CF983E)\n\n~~\u8fd9\u4f3c\u4e4e\u662f\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u95ee\u9898~~\n\n\u5bf9\u4e8e\u4e00\u7c7b\u6811\u4e0a\u8def\u5f84\u95ee\u9898\uff0c\u6211\u4eec\u4f18\u5148\u8003\u8651\u6811\u5f62\u6001\u4e3a\u94fe\u600e\u4e48\u505a\u3002\n\n\u9996\u5148\uff0c\u82e5\u5f53\u524d\u6709\u4e00\u6761\u8def\u7ebf\u7ecf\u8fc7\u5f53\u524d\u70b9\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u76f4\u63a5\u8df3\u5230\u8fd9\u6761\u7ebf\u7684\u7ec8\u70b9\uff08\u82e5\u80fd\u76f4\u63a5\u8df3\u5230\u7ec8\u70b9\u4e5f\u5dee\u4e0d\u591a\uff09\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u4f1a\u5728 $end$ \u524d\u9762\u7684\u4f4d\u7f6e\u8df3\u5230 $end$ \u540e\u9762\u7684\u4f4d\u7f6e\uff0c\u90a3\u8fd9\u6761\u8def\u80af\u5b9a\u4e5f\u7ecf\u8fc7\u4e86 $end$\uff0c\u6240\u4ee5\u5b83\u80af\u5b9a\u662f\u4e0d\u52a3\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u4ece\u4e24\u7aef\u4e00\u76f4\u5f80\u4e2d\u95f4\u8df3\uff0c\u76f4\u5230\u4e24\u7aef\u518d\u8df3\u4e00\u6b21\u5c31\u4f1a\u76f8\u9047\u7684\u65f6\u5019\u505c\u6b62\uff0c\u82e5\u6b64\u65f6\u6709\u4e00\u6761\u8def\u5f84\u6070\u597d\u8986\u76d6\u4e86\u5f53\u524d\u4e24\u7aef\uff0c\u5219\u53ea\u7528\u8df3\u4e00\u6b21\uff0c\u5426\u5219\u8981\u8df3\u4e24\u6b21\uff08\u8fd8\u6709\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u5224\u662f\u5426\u8fd8\u80fd\u8df3\u5373\u53ef\uff09\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u56de\u5230\u6811\u4e0a\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee $(x, y)$\uff0c\u6211\u4eec\u628a\u5b83\u62c6\u6210 $(x, \\operatorname{LCA}(x, y))$ \u548c $(y, \\operatorname{LCA}(x, y))$ \u4e24\u6761\u8def\u5f84\uff0c\u540c\u6837\u8ddf\u524d\u9762\u4e00\u6837\uff0c\u6211\u4eec\u5c06 $x$ \u548c $y$ \u4e00\u8d77\u8df3\u5230 $\\operatorname{LCA}(x, y)$ \u6700\u8fd1\u7684\u4f4d\u7f6e\u3002\u63a5\u4e0b\u6765\u5927\u529b\u5206\u8ba8\uff1a\n\n1. \u82e5 $x, y$ \u5176\u4e2d\u6709\u4e00\u4e2a\u5c31\u662f $\\operatorname{LCA}$\uff0c\u76f4\u63a5\u770b\u80fd\u4e0d\u80fd\u8df3\u5c31\u597d\u3002\n\n1. \u5f53 $x, y$ \u5206\u5e03\u5728 $\\operatorname{LCA}$ \u4e24\u4fa7\u65f6\uff0c\u6211\u4eec\u540c\u6837\u9700\u8981\u5224\u65ad\u662f\u5426\u6709\u4e00\u6761\u8def\u5f84\u76f4\u63a5\u8986\u76d6\u4e86 $x, y$ \u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a\n\n1. \u6211\u4eec\u5728\u5148\u524d\u66b4\u529b\u8df3\u7684\u590d\u6742\u5ea6\u4e3a $O(m)$\uff0c\u9700\u8981\u4f18\u5316\n\n1. \u600e\u4e48\u5feb\u901f\u5224\u65ad\u6709\u6ca1\u6709\u8def\u5f84\u540c\u65f6\u8986\u76d6\u4e86 $(x, y)$\u3002\n\n\u5bf9\u4e8e\u95ee\u9898 1\uff0c\u7531\u4e8e\u6211\u4eec\u6bcf\u4e00\u6b21\u90fd\u662f\u76f4\u63a5\u8df3\u5230\u672b\u5c3e\uff0c\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u4f7f\u7528\u500d\u589e\u4f18\u5316\uff0c\u5bf9\u4e8e $ST_{x, 0}$\uff0c\u601d\u8003\u5b83\u7684\u672c\u8d28\u610f\u4e49\uff1a\u4ece $x$ \u5411\u4e0a\u8df3\u6700\u8fdc\u80fd\u5230\u8fbe\u7684\u70b9\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8def\u5f84\uff0c\u7528 $\\operatorname{LCA}(a, b)$ \u53bb\u66f4\u65b0 $ST_{a, 0}$ \u548c $ST_{b, 0}$\uff0c\u82e5\u5b50\u6811\u67d0\u4e2a\u73c2\u4ee5\u8dd1\u5230\u5b57\u6570\u5916\u9762\uff0c\u663e\u7136\u5b50\u6811\u6839\u4e5f\u73c2\u4ee5\u901a\u8fc7\u90a3\u6761\u8def\u51fa\u53bb\u5916\u9762\uff0c\u62d3\u6251\u5012\u5e8f\u9012\u63a8\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u95ee\u9898 2\uff0c\u8f6c\u6362\u95ee\u9898\uff1a\u662f\u5426\u6709\u4e00\u6761\u8def\u5f84\u7684\u8d77\u59cb\u70b9\u5206\u522b\u5728 $x, y$ \u7684\u5b50\u6811\u5185\uff1f\n\n\u5b50\u6811\u5224\u522b\u95ee\u9898\uff0c\u4f7f\u7528 $\\operatorname{dfs}$ \u5e8f\uff0c\u8bbe\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9 $(s, t)$ \u8868\u793a $s$ \u73c2\u4ee5\u5b58\u5728\u5355\u5411\u8def\u5f84 $(s, t)$ \uff08\u6ce8\u610f\u9898\u76ee\u91cc\u9762\u662f\u53cc\u5411\u7684\uff0c\u9700\u8981\u6253\u4e24\u4e2a\uff09\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $(x, y)$\uff0c\u7531\u4e8e\u5b50\u6811\u5185\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684 $\\operatorname{dfs}$ \u5e8f $c$\uff0c\u6709 $dfn_x \\le c \\le end_x$ \uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5c31\u662f\u67e5\u8be2\u4e00\u4e2a\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a $(dfn_x, dfn_y)$\u3001\u53f3\u4e0b\u89d2\u5750\u6807\u4e3a $(end_x, end_y)$ \u7684\u77e9\u5f62\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u8fd9\u662f\u4e2a\u7ecf\u5178\u7684\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u4e0d\u4f1a\u7684\u8bdd\u51fa\u95e8\u5de6\u8f6c [\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P2163)\u3002\n\n\u81f3\u6b64\uff0c\u672c\u95ee\u9898\u5f97\u5230\u5b8c\u7f8e\u89e3\u51b3\uff0c\u590d\u6742\u5ea6 $O((n+Q)\\log m)$\u3002\n\n### Code\uff1a\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <cstdlib>\n#include <cctype>\n#include <vector>\n#include <set>\nusing namespace std;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(!isdigit(ch)){if(ch=='-') f=-1; ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int N=2e5+5;\nint n, m, Q, ST[N][18], siz[N], top[N], son[N], dep[N], fa[N], dfn[N], Ed[N], dfn_cnt, ans[N];\nvector <int> G[N];//Graph\ninline int Mx(int a, int b){return dep[a]<dep[b]?a:b;}\nvoid Get_dep(int x){\n\tsiz[x]=1;dfn[x]=++dfn_cnt;\n\tfor(int i=0, v; i<G[x].size(); i++) \n\t\tdep[v=G[x][i]]=dep[x]+1, Get_dep(v), fa[v]=x,\n\t\tsiz[x]+=siz[v], son[x]=siz[son[x]]>siz[v]?son[x]:v;\n\tEd[x]=dfn_cnt;\n}\nvoid dfs(int x, int root){\n\ttop[x]=root;if(son[x]) dfs(son[x], root);\n\tfor(int i=0; i<G[x].size(); i++)\n\t\tif(G[x][i]!=son[x]) dfs(G[x][i], G[x][i]);\n}\nint LCA(int x, int y){\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x, y);\n\t\tx=fa[top[x]];\n\t}\n\treturn Mx(x, y);\n}\nvoid Dfs(int x){for(int i=0, v; i<G[x].size(); i++) Dfs(v=G[x][i]), (dep[ST[v][0]]<dep[x])?(ST[x][0]=Mx(ST[x][0], ST[v][0])):0;}\nstruct Box{int Lx, Ly, Rx, Ry, id;}box[N];int tot;\nnamespace CntingPoint{//\u4e8c\u7ef4\u6570\u70b9 \n\tint res[N];\n\tpair <int, int> P[N*2];int tot;\n\tstruct Ques{int Ly, Rx, Ry, id, tag;bool operator < (const Ques &X) const{return Rx<X.Rx;}}T[N*2]; \n\t#define lowbit(x) ((x)&(-x)) \n\tint bit[N*4], cnt, p[N*4];\n\tvoid add(int x){if(!x) return ;for(; x<=cnt; x+=lowbit(x)) bit[x]++;}\n\tint query(int x){int res=0;for(; x; x-=lowbit(x)) res+=bit[x];return res;}\n\t#undef lowbit\n\tint pos(int x){return lower_bound(p+1, p+cnt+1, x)-p;}\n\tsigned Solve(int n, int m){\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tp[++cnt]=P[i].second;\n\t\tfor(int i=1; i<=m; i++){\n\t\t\tint Lx=box[i].Lx, Ly=box[i].Ly, Rx=box[i].Rx, Ry=box[i].Ry;\n\t\t\tT[++tot]=(Ques){Ly, Rx, Ry, i, 1};T[++tot]=(Ques){Ly, Lx-1, Ry, i, -1};\n\t\t\tp[++cnt]=Ly-1, p[++cnt]=Ry;\n\t\t}\n\t\tsort(p+1, p+cnt+1), sort(T+1, T+tot+1), sort(P+1, P+n+1);\n\t\tcnt=unique(p+1, p+cnt+1)-p-1;int now=1;\n\t\tfor(int i=1; i<=tot; i++){\n\t\t\twhile(now<=n&&P[now].first<=T[i].Rx) add(pos(P[now++].second));\n\t\t\tres[T[i].id]+=T[i].tag*(query(pos(T[i].Ry))-query(pos(T[i].Ly-1)));\n\t\t}\n\t\tfor(int i=1; i<=m; i++) if(res[i]) ans[box[i].id]--;\n\t\treturn 0;\n\t}\n}\ninline bool Can(int lca, int x){return Mx(lca, x)==lca&&x!=lca&&x;}\nsigned main(){\n\tn=read();\n\tfor(int i=2; i<=n; i++)\n\t\tG[read()].push_back(i);\n\tGet_dep(dep[1]=1);dep[0]=INF;dfs(1, 1);m=read();\n\tfor(int i=1; i<=m; i++){\n\t\tint st=read(), ed=read();\n\t\tint lca=LCA(st, ed);\n\t\tCntingPoint :: P[i*2-1]=make_pair(dfn[st], dfn[ed]);\n\t\tCntingPoint :: P[i*2]=make_pair(dfn[ed], dfn[st]);\n\t\tST[st][0]=Mx(ST[st][0], lca);\n\t\tST[ed][0]=Mx(ST[ed][0], lca);\n\t}\n\tDfs(1);for(int x=1; x<=n; x++) if(ST[x][0]==x) ST[x][0]=0;\n\tfor(int j=1; j<18; j++)\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tST[i][j]=ST[ST[i][j-1]][j-1];\n\tQ=read();\n\tfor(int i=1; i<=Q; i++){\n\t\tint x=read(), y=read(), lca=LCA(x, y);\n\t\tfor(int j=17; j>=0; j--)\n\t\t\tif(Can(lca, ST[x][j])) x=ST[x][j], ans[i]+=(1<<j);\n\t\tfor(int j=17; j>=0; j--)\n\t\t\tif(Can(lca, ST[y][j])) y=ST[y][j], ans[i]+=(1<<j);\n\t\tif(x==lca||y==lca){\n\t\t\tif(y==lca) swap(x, y);\n\t\t\tif(Mx(ST[y][0], lca)==ST[y][0]) ans[i]++;\n\t\t\telse ans[i]=-1;\n\t\t}\n\t\telse{\n\t\t\tif(Can(lca, ST[x][0])&&Can(lca, ST[y][0])) ans[i]=-1;\n\t\t\telse if((!ST[x][0])||(!ST[y][0])) ans[i]=-1;\n\t\t\telse ans[i]+=2, box[++tot]=(Box){dfn[x], dfn[y], Ed[x], Ed[y], i};\n\t\t}\n\t}\n\tCntingPoint :: Solve(m*2, tot);\n\tfor(int i=1; i<=Q; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1633231425,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "CF983E NN country"
    },
    {
        "content": "\u53d1\u73b0\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u8d2a\u5fc3\u53ef\u4ee5\u500d\u589e\u4f18\u5316\u3002\n\n\u8d2a\u5fc3\u7b56\u7565\uff1a\u628a\u8def\u5f84\u62c6\u5f00\u6210\u4e24\u6761\u94fe\uff0c\u8d77\u59cb\u70b9\u548c\u7ed3\u5c3e\u70b9\u4e3a\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u7684\u94fe\uff0c\u663e\u7136\u662f\u6df1\u5ea6\u8d8a\u6d45\u8d8a\u597d\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u66b4\u529b\u722c\u3002\u53d1\u73b0\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\u6709\u8def\u5f84\u53ef\u4ee5\u7a7f\u8fc7lca\n\n\u90a3\u4e48\u5c31\u5224\u4e00\u4e0b\uff0c\u662f\u5426\u6709\u8def\u5f84\u8d77\u59cb\u70b9\u5728\uff08\u500d\u589e\u8df3\u8fc7\u540e\u7684\u505c\u7559\u70b9\uff09\u5b50\u6811\u4e2d\u3002\n\n\u5982\u4f55\u5224\uff1f\u5b50\u6811\u4e2d\u7684\u70b9\u7684dfs\u5e8f\u4e00\u5b9a in[rt]<=x<=out[rt]\n\n\u4e24\u4e2a\u53d8\u91cf\u5c31\u662f\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u54af\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=2e5+5;\nstruct edge{\n\tint link,next;\n}e[N<<1];\nstruct event{\n\tint x,y,id,opt;\n}b[N*5];\nint m,q,n,head[N],tot;\ninline void add_edge(int u,int v){\n\te[++tot]=(edge){v,head[u]}; head[u]=tot;\n}\ninline void insert(int u,int v){\n\tadd_edge(u,v); add_edge(v,u);\n}\nint g[N][20],dep[N],fa[N][20],l[N],r[N],cnt;\nvoid dfs(int u,int Fa){\n\tdep[u]=dep[Fa]+1; fa[u][0]=Fa; l[u]=++cnt;\n\tfor (int i=1;i<20;i++) fa[u][i]=fa[fa[u][i-1]][i-1];\n\tfor (int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].link;\n\t\tif (v!=Fa) dfs(v,u);\n\t}\n\tr[u]=cnt;\n}\ninline int LCA(int u,int v){\n\tif (dep[u]<dep[v]) swap(u,v);\n\tint delta=dep[u]-dep[v];\n\tfor (int i=0;i<20;i++) if (delta&(1<<i)) u=fa[u][i];\n\tfor (int i=19;i>=0;i--) if (fa[u][i]!=fa[v][i]) u=fa[u][i],v=fa[v][i];\n\tif (u!=v) return fa[u][0];\n\treturn u;\n}\ninline void init(){\n\tn=read();\n\tfor (int i=2;i<=n;i++) insert(i,read());\n\tdfs(1,0); m=read(); tot=0;\n\tfor (int i=1;i<=m;i++){\n\t\tint u=read(),v=read(),lca=LCA(u,v);\n\t\tif (l[u]>l[v]) swap(u,v);\n\t\tif (!g[u][0]||dep[lca]<dep[g[u][0]]) g[u][0]=lca;\n\t\tif (!g[v][0]||dep[lca]<dep[g[v][0]]) g[v][0]=lca;\n\t\tb[++tot]=(event){l[u],l[v],0,1};\n\t}\n}\nvoid Dfs(int u,int Fa){\n\tfor (int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].link;\n\t\tif (v!=Fa){\n\t\t\tDfs(v,u);\n\t\t\tif (!g[u][0]||g[v][0]&&dep[g[v][0]]<dep[g[u][0]]) g[u][0]=g[v][0];\n\t\t}\n\t}\n}\ninline bool cmp(event A,event B){\n\treturn A.x<B.x||(A.x==B.x&&A.id<B.id);\n}\nint bit[N];\ninline int lowbit(int x){\n\treturn x&(-x);\n}\ninline void update(int x){\n\tfor (;x<=n;x+=lowbit(x)) bit[x]++;\n}\ninline int query(int x){\n\tint sum=0;\n\tfor (;x;x-=lowbit(x)) sum+=bit[x];\n\treturn sum;\n}\nint ans[N],ANS[N];\ninline void solve(){\n\tDfs(1,0);\n\tfor (int i=1;i<=n;i++) if (g[i][0]==i) g[i][0]=0;\n\tfor (int i=1;i<20;i++)\n\t\tfor (int j=1;j<=n;j++) g[j][i]=g[g[j][i-1]][i-1];\n\tq=read();\n\tfor (int i=1;i<=q;i++){\n\t\tint u=read(),v=read(),lca=LCA(u,v);\n\t\tif (l[u]>l[v]) swap(u,v);\n\t\tfor (int j=19;j>=0;j--) if (g[u][j]&&dep[g[u][j]]>dep[lca]) u=g[u][j],ans[i]+=(1<<j);\n\t\tfor (int j=19;j>=0;j--) if (g[v][j]&&dep[g[v][j]]>dep[lca]) v=g[v][j],ans[i]+=(1<<j);\n\t\tif ((!g[u][0]&&u!=lca)||(!g[v][0]&&v!=lca)) {ans[i]=-1; continue;}\n\t\tif (u==lca||v==lca) ans[i]++;\n\t\t\telse {\n\t\t\t\tans[i]+=2;\n\t\t\t\tb[++tot]=(event){r[u],r[v],i,1};\n\t\t\t\tb[++tot]=(event){l[u]-1,r[v],i,-1};\n\t\t\t\tb[++tot]=(event){r[u],l[v]-1,i,-1};\n\t\t\t\tb[++tot]=(event){l[u]-1,l[v]-1,i,1};\n\t\t\t}\n\t}\n\tsort(b+1,b+1+tot,cmp);\n\tfor (int i=1;i<=tot;i++){\n\t\tif (!b[i].id) update(b[i].y);\n\t\t\telse ANS[b[i].id]+=b[i].opt*query(b[i].y);\n\t}\n\tfor (int i=1;i<=q;i++) writeln(ans[i]-(ANS[i]>0));\n}\nint main(){\n\tinit(); solve();\n\treturn 0;\n}\n```",
        "postTime": 1534338793,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF983E \u3010NN country\u3011"
    },
    {
        "content": "~~\u867d\u7136\u5199\u7684\u65f6\u95f4\u6709\u70b9\u957f\uff0c\u4f46\u662f\u8fd8\u662f\u4e00\u904dA\u4e86\uff0c\u5f00\u5fc3~~\n\n\u9898\u610f\u5f88\u660e\u767d\uff1b\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6c42\u51fa\u53ea\u7528\u4e00\u6761\u8def\u7ebf\u5411\u4e0a\u80fd\u591f\u5230\u8fbe\u7684\u6700\u9ad8\u70b9 ??????[?]\n\n\u5bf9 ?????? \u6784\u9020\u500d\u589e\u6570\u7ec4\n\u5bf9\u4e8e\u8be2\u95ee (?,?)\uff0c\u500d\u589e\u5230 ?\u2032,?\u2032 \u540e\uff0c\u53ea\u9700\u68c0\u67e5 ?\u2032 \u5230 ?\u2032 \u662f\u5426\u6709\u8de8\u8d8a ???(?,?) \u7684\u76f4\u8fbe\u8def\u7ebf\n\n\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 DFS \u5e8f\n\nDFS \u904d\u5386\u6574\u68f5\u6811\uff0c\u9012\u5f52\u8fdb\u5165 ? \u65f6\uff0c\u626b\u63cf\u8def\u7ebf (?,?)\uff0c\u628a ? \u5728 DFS \u5e8f\u4e0a\u5bf9\u5e94\u4f4d\u7f6e +1\n\n?,? \u53ef\u76f4\u8fbe\uff0c\u5f53\u4e14\u4ec5\u5f53 ? \u5b50\u6811\u4e2d\u7684\u8282\u70b9\u4f7f DFS \u5e8f\u4e0a ? \u5bf9\u5e94\u533a\u95f4\u7684\u548c\u53d1\u751f\u4e86\u53d8\u5316\n\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<deque>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof (x))\n#define mem1(x) memset((x),0x3f,sizeof (x))\n#define gc getchar\n#define pb push_back\ntemplate<class T>void in(T &x)\n{\n    x = 0; bool f = 0; char c = gc();\n    while (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n    while ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n    if (f) x = -x;\n}\n#undef gc\nvoid out(int x) {\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) out(x / 10);\n    putchar(x % 10 + '0');\n}\n#define N 200010\n#define M N<<2\nint n, m;\nint v[M], u[M], nx[M];\nint cnt = 1, head[N];\nil void add(int uu, int vv) {\n    u[++cnt] = uu, v[cnt] = vv, nx[cnt] = head[uu];\n    head[uu] = cnt;\n}\nint bv[M], bu[M], bnx[M];\nint lcab[M];\nint bc = 1, bh[N];\nil void badd(int uu, int vv) {\n    bu[++bc] = uu, bv[bc] = vv, bnx[bc] = bh[uu];\n    bh[uu] = bc;\n}\nint qv[M], qu[M], qnx[M];\nint qc = 1, qh[N];\nint lcaq[M];\nint ans[M];\nil void qadd(int uu, int vv) {\n    qu[++qc] = uu, qv[qc] = vv, qnx[qc] = qh[uu];\n    qh[uu] = qc;\n}\nint dep[N], high[N][21];\nbool vis[N];\nint fa[N];\nstruct Union {\n    int f[N];\n    Union() {memset(f, 0, sizeof(f));}\n    void init(int x) {\n        for (ri i = 1; i <= x; ++i) f[i] = i;\n    }\n    int find(int x) {\n        return x == f[x] ? x : f[x] = find(f[x]);\n    }\n} tar;\nint tr[N << 1];\nvoid tadd(int x, int k) {\n    for (; x <= n; x += (x & -x)) {\n        tr[x] += k;\n    }\n}\nint query(int x) {\n    int ret = 0;\n    for (; x; x -= (x & -x)) {\n        ret += tr[x];\n    }\n    return ret;\n}\nint dc, dfn[N];\npi dx[N];\nint sz[N];\nint pv[M], pu[M], pnx[M];\nint pc = 1, ph[N];\nint lcap[M];\nil void padd(int uu, int vv) {\n    pu[++pc] = uu, pv[pc] = vv, pnx[pc] = ph[uu];\n    ph[uu] = pc;\n}\nint dfs1(int x, int f, int d) {\n    vis[x] = 1;\n    fa[x] = f;\n    dep[x] = d;\n    dfn[x] = ++dc;\n    dx[x].fi = dx[x].se = dfn[x];\n    sz[x] = 1;\n    for (ri i = head[x]; i; i = nx[i]) {\n        if (vis[v[i]]) continue;\n        sz[x] += dfs1(v[i], x, d + 1);\n        tar.f[v[i]] = x;\n    }\n    dx[x].se += sz[x] - 1;\n    for (ri i = bh[x]; i; i = bnx[i]) {\n        if (!vis[bv[i]]) continue;\n        lcab[i ^ 1] = lcab[i] = tar.find(bv[i]);\n    }\n    for (ri i = ph[x]; i; i = pnx[i]) {\n        if (!vis[pv[i]]) continue;\n        lcap[i ^ 1] = lcap[i] = tar.find(pv[i]);\n    }\n    return sz[x];\n}\nvoid dfs2(int x) {\n    vis[x] = 1;\n    high[x][0] = x;\n    for (ri i = bh[x]; i; i = bnx[i]) {\n        if (dep[lcab[i]] < dep[high[x][0]] || high[x][0] == 0) high[x][0] = lcab[i];\n    }\n    for (ri i = head[x]; i; i = nx[i]) {\n        if (vis[v[i]]) continue;\n        dfs2(v[i]);\n        if (dep[high[v[i]][0]] < dep[high[x][0]]) high[x][0] = high[v[i]][0];\n    }\n}\nvoid dfs3(int x) {\n    vis[x] = 1;\n    vector< pi >q;\n    for (ri i = qh[x]; i; i = qnx[i]) {\n        if (dfn[qv[i]] > dfn[x] && ans[i >> 1] != -1) {\n            q.pb(mp(i, query(dx[qv[i]].se) - query(dx[qv[i]].fi - 1)));\n        }\n    }\n    for (ri i = head[x]; i; i = nx[i]) {\n        if (vis[v[i]]) continue;\n        dfs3(v[i]);\n    }\n    for (ri i = bh[x]; i; i = bnx[i]) {\n        tadd(dfn[bv[i]], 1);\n        tadd(dfn[bu[i]], 1);\n    }\n    for (ri i = 0, t; i < q.size(); ++i) {\n        t = query(dx[qv[q[i].fi]].se) - query(dx[qv[q[i].fi]].fi - 1);\n        ans[q[i].fi >> 1] += (q[i].se != t ? 1 : 2);\n    }\n}\nint q;\nsigned main() {\n    in(n);\n    for (ri i = 1, a; i < n; ++i) {\n        in(a);\n        add(a, i + 1);\n        add(i + 1, a);\n    }\n    in(m);\n    for (ri i = 1, a, b; i <= m; ++i) {\n        in(a), in(b);\n        badd(a, b);\n        badd(b, a);\n    }\n    in(q);\n    for (ri i = 1, a, b; i <= q; ++i) {\n        in(a), in(b);\n        padd(a, b);\n        padd(b, a);\n    }\n    tar.init(n);\n    dfs1(1, 0, 0);\n    mem0(vis);\n    dfs2(1);\n    for (ri i = 1; i <= n; ++i) {\n        for (ri j = 1; j <= 20; ++j) {\n            high[i][j] = high[high[i][j - 1]][j - 1];\n        }\n    }\n    for (ri i = 2, t; i <= pc; i += 2) {\n        int a = pu[i], b = pv[i];\n        t = 0;\n        for (ri j = 20; j >= 0; j--) {\n            if (dep[high[a][j]] > dep[lcap[i]]) {\n                a = high[a][j];\n                t += (1 << j);\n            }\n        }\n        for (ri j = 20; j >= 0; j--) {\n            if (dep[high[b][j]] > dep[lcap[i]]) {\n                b = high[b][j];\n                t += (1 << j);\n            }\n        }\n        qadd(a, b); lcaq[qc] = lcap[i];\n        qadd(b, a); lcaq[qc] = lcap[i];\n        if (dep[high[a][0]] <= dep[lcaq[i]] && dep[high[b][0]] <= dep[lcaq[i]]) ans[i >> 1] = t;\n        else ans[i >> 1] = -1;\n    }\n    mem0(vis);\n    dfs3(1);\n    for (ri i = 1; i <= q; ++i) {\n        printf(\"%d\\n\", ans[i]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1531056903,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u597d\u9898-CF983E-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF983E)\n\n\u89e3\u9898\u601d\u8def\uff1a\u500d\u589e+\u6811\u5256+\u6811\u72b6\u6570\u7ec4\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u6210\u662f\u4e24\u4e2a\u70b9\u90fd\u4e0d\u65ad\u5f80\u4e0a\u8df3\uff08\u5982\u679c\u4e00\u4e2a\u70b9\u662f\u53e6\u4e00\u4e2a\u70b9\u7684\u7956\u5148\u5219\u662f\u53ea\u6709\u4e00\u4e2a\u8df3\uff09\uff0c\u6709\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u8d2a\u5fc3\u7b56\u7565\uff1a\u6bcf\u6b21\u90fd\u8df3\u5230\u80fd\u8df3\u5230\u7684\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\u3002\u7136\u800c\u4e00\u6b21\u4e00\u6b21\u5f80\u4e0a\u8df3\u53ef\u80fd\u88ab\u6781\u7aef\u6570\u636e\u5361\u6389\uff0c\u6240\u4ee5\u8981\u7528\u500d\u589e\u7ef4\u62a4\u8df3 $2^i$ \u6b21\u80fd\u8df3\u5230\u54ea\u91cc\u3002\n\n\u7136\u800c\u4e24\u4e2a\u70b9\u90fd\u8df3\u5230\u4ed6\u4eec\u7684 ```lca``` \u4e0a\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u65b9\u6848\uff0c\u6240\u4ee5\u53ef\u4ee5\u8ba9\u4e24\u4e2a\u70b9\u90fd\u8df3\u5230\u5dee\u4e00\u6b65\u80fd\u8df3\u5230 ```lca``` \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u6709\u4e00\u6761\u8def\u76f4\u63a5\u8054\u901a\u4e24\u4e2a\u70b9\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u51fa ```dfs``` \u5e8f\uff0c\u5c06\u6bcf\u4e00\u6761\u516c\u4ea4\u8f66\u7ebf\u8def\u770b\u6210\u662f\u5750\u6807\u7cfb\u4e0a $(dfn_u,dfn_v)$ \u7684\u4e00\u4e2a\u70b9\uff0c\u6bcf\u6b21\u8be2\u95ee\u5c31\u662f\u5224\u65ad\u5de6\u4e0b\u89d2\u662f $(dfn_u,dfn_v)$\uff0c\u53f3\u4e0a\u89d2\u662f $end_u,end_v$ \u7684\u77e9\u5f62\u5185\u662f\u5426\u6709\u70b9\uff0c\u5176\u4e2d $end_i$ \u8868\u793a $i$ \u7684\u5b50\u6811\u4e2d\u70b9\u7684 $dfn$ \u7684\u6700\u5927\u503c\u3002\u53ef\u4ee5\u8f6c\u5316\u6210\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002[\u677f\u5b50\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P2163)\u3002\u5176\u4e2d\u8981\u7279\u5224\u4e00\u4e0b\u4e00\u4e2a\u70b9\u662f\u53e6\u4e00\u4e2a\u70b9\u7684\u7956\u5148\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u8df3\u5373\u53ef\u3002\n\n\u6c42 ```lca``` \u63a8\u8350\u7528\u6811\u5256\uff0c\u987a\u4fbf\u8fd8\u53ef\u4ee5\u5904\u7406\u51fa\u4e00\u4e2a ```dfn```\u3002\n\ncode\uff1a\n\n```cpp\nint n,m,q,e[maxn],ans[maxn],res[maxn<<2],fm[maxn][22];\nint siz[maxn],dep[maxn],fa[maxn],wt[maxn];\nint cnt,top[maxn],dfn[maxn];\nint tot,head[maxn];\nbool vis[maxn];\nstruct node{\n\tint to,nxt;\n}edge[maxn<<1];\nstruct zb{\n\tint x,y,id;\n\tbool operator<(const zb &tmp)const{return x<tmp.x;}\n}qry[maxn<<2];\nstd::pii d[maxn<<1];\ninline void add(int u,int v){\n\tedge[++tot]={v,head[u]};\n\thead[u]=tot;\n}\ninline int lowbit(int x){return x&(-x);}\ninline void update(int x){\n\twhile(x<=n)e[x]++,x+=lowbit(x);\n}\ninline int query(int x){\n\tint ret=0;\n\twhile(x)ret+=e[x],x-=lowbit(x);\n\treturn ret;\n}\nvoid dfs1(int u,int f){\n\tfa[u]=f;siz[u]=1;\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==f)continue;\n\t\tdep[v]=dep[u]+1;\n\t\tdfs1(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[v]>siz[wt[u]])wt[u]=v;\n\t}\n}\nvoid dfs2(int u,int t){\n\ttop[u]=t;dfn[u]=++cnt;\n\tif(!wt[u])return;\n\tdfs2(wt[u],t);\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==fa[u]||v==wt[u])continue;\n\t\tdfs2(v,v);\n\t}\n}\nvoid dfs3(int u){//\u5904\u7406\u8df3\u4e00\u6b21\u80fd\u8df3\u5230\u54ea\u91cc\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==fa[u])continue;\n\t\tdfs3(v);\n\t\tif(~fm[v][0])fm[u][0]=dep[fm[v][0]]<dep[fm[u][0]]?fm[v][0]:fm[u][0];\n\t}\n\tif(fm[u][0]==u||!fm[u][0])fm[u][0]=-1;\n}\nvoid dfs4(int u){//\u500d\u589e\n\tfor(int i=1;i<=20;i++){\n\t\tif(~fm[u][i-1])fm[u][i]=fm[fm[u][i-1]][i-1];\n\t\telse fm[u][i]=-1;\n\t}\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==fa[u])continue;\n\t\tdfs4(v);\n\t}\n}\nint get_lca(int u,int v){\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]<dep[top[v]])swap(u,v);\n\t\tu=fa[top[u]];\n\t}\n\treturn dep[u]<dep[v]?u:v;\n}\nint get_ans(int u,int v,int k){//\u4e24\u4e2a/\u4e00\u4e2a\u70b9\u5f80\u4e0a\u8df3\n\tint w=get_lca(u,v),ret=0;\n\tif(w==u){\n\t\tfor(int i=20;~i;i--){\n\t\t\tif(~fm[v][i]&&dep[fm[v][i]]>dep[w])v=fm[v][i],ret+=(1<<i);\n\t\t}\n\t\treturn ~fm[v][0]?ret+1:-1;\n\t}else if(w==v){\n\t\tfor(int i=20;~i;i--){\n\t\t\tif(~fm[u][i]&&dep[fm[u][i]]>dep[w])u=fm[u][i],ret+=(1<<i);\n\t\t}\n\t\treturn ~fm[u][0]?ret+1:-1;\n\t}else{\n\t\tfor(int i=20;~i;i--){\n\t\t\tif(~fm[u][i]&&dep[fm[u][i]]>dep[w])u=fm[u][i],ret+=(1<<i);\n\t\t}\n\t\tfor(int i=20;~i;i--){\n\t\t\tif(~fm[v][i]&&dep[fm[v][i]]>dep[w])v=fm[v][i],ret+=(1<<i);\n\t\t}\n\t\tvis[k]=true;\t\n\t}\n\tint x=dfn[u],y=dfn[v],kk=k<<2;\n\tqry[kk-3]={x+siz[u]-1,y+siz[v]-1,kk-3};qry[kk-2]={x-1,y-1,kk-2};\n\tqry[kk-1]={x+siz[u]-1,y-1,kk-1};qry[kk]={x-1,y+siz[v]-1,kk};\n\treturn ~fm[u][0]&&~fm[v][0]||fm[u][0]==v||fm[v][0]==u?ret:-1;\n}\nvoid solve(){\n\tread(n);\n\tfor(int u=2,v;u<=n;u++){\n\t\tread(v);\n\t\tadd(u,v);add(v,u);\n\t}\n\tdep[0]=inf;\n\tdfs1(1,0);dfs2(1,1);\n\tread(m);\n\tfor(int i=1,u,v;i<=m;i++){\n\t\tread(u);read(v);\n\t\td[(i<<1)-1]=mp(dfn[u],dfn[v]);d[(i<<1)]=mp(dfn[v],dfn[u]);\n\t\tint w=get_lca(u,v);\n\t\tfm[u][0]=dep[w]<dep[fm[u][0]]?w:fm[u][0];\n\t\tfm[v][0]=dep[w]<dep[fm[v][0]]?w:fm[v][0];\n\t}\n\tdfs3(1);dfs4(1);\n\tread(q);\n\tfor(int i=1,u,v;i<=q;i++){\n\t\tread(u);read(v);\n\t\tans[i]=get_ans(u,v,i);\n\t}\n\tconst int mm=m<<1,qq=q<<2;\n\tsort(d+1,d+mm+1);sort(qry+1,qry+qq+1);\n\tfor(int i=1,j=1;i<=qq;i++){\n\t\twhile(j<=mm&&d[j].fi<=qry[i].x)update(d[j++].se);\n\t\tres[qry[i].id]=query(qry[i].y);\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tint now=i<<2;\n\t\tif(vis[i]&&~ans[i]){\n\t\t\tif(res[now-3]+res[now-2]-res[now-1]-res[now]==0)ans[i]+=2;\n\t\t\telse ans[i]++;\n\t\t}\n\t\twrite(ans[i]);putchar('\\n');\n\t}\n}\n```",
        "postTime": 1665658266,
        "uid": 578590,
        "name": "yinhee",
        "ccfLevel": 0,
        "title": "CF983E\u9898\u89e3"
    },
    {
        "content": "### Solve\n\n\u795e\u4ed9\u9898\u3002\n\n\u8003\u8651\u94fe\u4e0a\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u5f00\u8d2a\uff0c\u6bcf\u4e00\u6b21\u8df3\u5230\u6700\u8fdc\u80fd\u8df3\u5230\u7684\u70b9\u4e0a\u3002\u6b63\u786e\u6027\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\u3002\u500d\u589e\u4f18\u5316\uff0c$f_{u,j}$ \u8868\u793a $u$ \u8df3 $2^j$ \u6b21\u80fd\u8df3\u5230\u54ea\u91cc\u3002\n\n\u6269\u5c55\u5230\u6811\u4e0a\uff0c\u8bb0\u8be2\u95ee\u7684\u4e24\u70b9\u4e3a $u,v$\uff0c$\\text{lca}$ \u4e3a $u,v$ \u7684 $\\text{LCA}$\u3002\u548c\u94fe\u4e0a\u7684\u505a\u6cd5\u4e00\u6837\uff0c\u628a $u,v$ \u8df3\u5230 $\\text{lca}$ \u4e0a\u3002\u4f46\u662f\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u9519\u8bef\u7684\uff0c\u6bd4\u5982\u8bf4\uff1a\n\n![?](https://cdn.luogu.com.cn/upload/image_hosting/vmm4onk4.png)\n\n\u5176\u4e2d\u6709\u4e00\u6761\u8def\u7ebf $u\\to v$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\uff0c\u6b64\u65f6\u7684\u7b54\u6848\u4e0d\u7b49\u4e8e $1+1=2$\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u5b58\u5728\u7a7f\u8fc7 $\\text{lca}$ \u7684\u8def\u7ebf\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u628a $u,v$ \u8df3\u5230 $\\text{lca}$ **\u4e4b\u4e0b**\u5c31\u7ed3\u675f\uff0c\u94a6\u5b9a\u7b54\u6848\u4e3a $u,v$ \u8df3\u8dc3\u7684\u7b54\u6848\u548c $+2$\uff0c\u6b64\u65f6\uff0c\u82e5\u5b58\u5728\u4e00\u6761\u8def\u7ebf $x\\to y$\uff0c\u6ee1\u8db3 $x,y$ \u5206\u522b\u5728 $u,v$ \u7684\u5b50\u6811\u4e0b\uff0c\u628a\u7b54\u6848 $-1$\u3002\n\n\u7ecf\u5178\u7684\u4e8c\u7ef4\u6570\u70b9\u3002",
        "postTime": 1672454244,
        "uid": 534654,
        "name": "Network_Error",
        "ccfLevel": 0,
        "title": "CF983E NN country \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u6c42\u51fa\u4ece\u67d0\u70b9\u505a $ 2^k $ \u6b21\u8f66\u80fd\u5230\u7684\u6700\u6d45\u7684\u70b9\uff0c\u8fd9\u4e2a\u53ea\u8981\u6df1\u641c\u4e00\u4e0b\uff0c\u628a\u5b83\u7684\u5b69\u5b50\u80fd\u5230\u7684\u6700\u6d45\u7684\u70b9\u66f4\u65b0\u8fc7\u6765\u5c31\u53ef\u4ee5\u3002\n\n\u7136\u540e\u500d\u589e\u5730\u5f80\u4e0a\u8df3\uff0c\u4e0d\u80fd\u8df3\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u4e0a\u9762\uff0c\u8bb0\u5f55\u5750\u8f66\u7684\u6b21\u6570 $ ans $\u3002\n\n\u6b64\u65f6\u6709\u4e09\u79cd\u60c5\u51b5\u8bbe\u6700\u8fdc\u80fd\u8df3\u5230 $ x $ \u5230 $ y $\u3002\n\u3000\u3000\n  1. \u518d\u8df3\u4e5f\u8df3\u4e0d\u5230 $ lca $ \u7684\u4e0a\u9762\uff0c\u5c31\u662f\u8d1f\u4e00\u3002\n\u3000\u3000\n  1. \u8def\u5f84 $ x $ \u88ab\u67d0\u8d9f\u8f66\u8986\u76d6\uff0c\u7b54\u6848\u662f $ ans $ \u52a0\u4e00\u3002\n\u3000\u3000\n  1. \u5e76\u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u7b54\u6848\u662f $ ans $ \u52a0\u4e8c\u3002\n\n\u90a3\u4e48\u600e\u4e48\u770b\u6709\u6ca1\u6709\u8986\u76d6\u5462\uff1f\n\n\u9996\u5148\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u662f\u76f4\u4e0a\u76f4\u4e0b\u7684\uff1a\u6709\u4e00\u4e2a\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u53ea\u8981\u770b\u4e0b\u9762\u90a3\u4e2a\u70b9\u80fd\u4e0d\u80fd\u8df3\u5230\u4e0a\u9762\u53bb\u5c31\u884c\u3002\n\n\u5bf9\u4e8e\u5269\u4e0b\u7684 $ x $ \u5230 $ y $\uff0c\u53ea\u8981\u6709\u8f66\u7684\u4e24\u7aef\u70b9\u5206\u522b\u5728 $ x $ \u548c $ y $ \u7684\u5b50\u6811\u4e2d\u5c31\u53ef\u4ee5\u3002\n\n\u6240\u4ee5\u505a\u4e00\u904d\u6df1\u641c\uff0c\u8fdb\u67d0\u4e2a\u70b9 $ x $ \u7684\u65f6\u5019\u8bb0\u4e0b\u6765 $ y $ \u7684\u5b50\u6811\u4e2d\u8f66\u7aef\u70b9\u7684\u4e2a\u6570\uff0c\u7136\u540e\u628a\u4ece $ x $ \u53d1\u7684\u8f66\u7684\u7ec8\u70b9\u52a0\u4e00\uff0c\u51fa\u6765\u7684\u65f6\u5019\u518d\u6b21\u7edf\u8ba1\u90a3\u4e2a\u4e2a\u6570\uff0c\u5982\u679c\u4e0d\u76f8\u540c\uff0c\u5c31\u8bf4\u660e $ x $ \u5230 $ y $ \u8fd9\u6761\u8def\u5f84\u88ab\u8986\u76d6\u4e86\u3002\u8fd9\u4e2a\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u6811\u4e0a\u4f5c\u5dee\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,q,fa[21][200005],tmp[200005*2],num=0,cnt=0,dfn[200005][2],s[200005],dep[200005],nxt[200005][21];\nint ed[200005][2],edh[200005];\nint pt[200005*2][2],pth[200005];\nint lq[200005*2][2],lqh[200005],ans[200005];\nbool co[200005];\nvoid add(int x,int y)\n{\n    ++num;\n    ed[num][0]=y;\n    ed[num][1]=edh[x];\n    edh[x]=num;\n}\nvoid dfs1(int x)\n{\n     dfn[x][0]=++cnt;\n     for(int i=0;fa[i][x]&&fa[i][fa[i][x]];i++)\n     {\n         fa[i+1][x]=fa[i][fa[i][x]];\n     }\n     for(int i=edh[x];i>0;i=ed[i][1])\n     {\n         int to=ed[i][0];\n         dep[to]=dep[x]+1;\n         dfs1(to);\n     }\n     dfn[x][1]=cnt;\n}\nint lca(int x,int y)\n{\n    if(dep[x]<dep[y])\n    {\n        swap(x,y);\n    }\n    for(int i=20;i>=0&&dep[x]!=dep[y];i--)\n    {\n        if(fa[i][x]&&dep[fa[i][x]]>=dep[y])\n        {\n            x=fa[i][x];\n        }\n    }\n    if(x==y)return x;\n    for(int i=20;i>=0;i--)\n    {\n        if(fa[i][x]!=fa[i][y])\n        {\n            x=fa[i][x];\n            y=fa[i][y];\n        }\n    }\n    return fa[0][x];\n}\nvoid dfs2(int x)\n{\n     for(int i=edh[x];i>0;i=ed[i][1])\n     {\n         int to=ed[i][0];\n         dfs2(to);\n         if(nxt[to][0]&&(dep[nxt[to][0]]<dep[nxt[x][0]]||!nxt[x][0]))\n         {\n             nxt[x][0]=nxt[to][0];\n         }\n     }\n     if(dep[nxt[x][0]]>=dep[x])nxt[x][0]=0;\n}\nint lowbit(int x)\n{\n    return x&(-x);\n}\nvoid pre(int x,int y)\n{\n    while(x<=n)\n    {\n        s[x]+=y;\n        x+=lowbit(x);\n    }\n}\nint getsum(int x)\n{\n    int sum=0;\n    while(x>0)\n    {\n        sum+=s[x];\n        x-=lowbit(x);\n    }\n    return sum;\n}\nvoid dfs3(int x)\n{\n    for(int i=lqh[x];i>0;i=lq[i][1])\n    {\n        int to=lq[i][0];\n        tmp[i]=getsum(dfn[to][1])-getsum(dfn[to][0]-1);\n    }\n    for(int i=pth[x];i>0;i=pt[i][1])\n    {\n        int to=pt[i][0];\n        pre(dfn[to][0],1);\n    }\n    for(int i=edh[x];i>0;i=ed[i][1])\n    {\n        int to=ed[i][0];\n        dfs3(to);\n    }\n    for(int i=lqh[x];i>0;i=lq[i][1])\n    {\n        int to=lq[i][0];\n        if(tmp[i]!=getsum(dfn[to][1])-getsum(dfn[to][0]-1))\n        {\n            co[i>>1]=1;\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=2;i<=n;i++)\n    {\n        cin>>fa[0][i];\n        add(fa[0][i],i);\n    }\n    dep[1]=1;\n    dfs1(1);\n    cin>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int a,b;\n        cin>>a>>b;\n        pt[i<<1][0]=a,pt[i<<1][1]=pth[b],pth[b]=i<<1;\n        pt[i<<1|1][0]=b,pt[i<<1|1][1]=pth[a],pth[a]=i<<1|1;\n        int lcaa=lca(a,b);\n        if(dep[lcaa]<dep[nxt[a][0]]||!nxt[a][0])nxt[a][0]=lcaa;\n        if(dep[lcaa]<dep[nxt[b][0]]||!nxt[b][0])nxt[b][0]=lcaa;\n    }\n    dfs2(1);\n    for(int i=0;i<19;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            nxt[j][i+1]=nxt[nxt[j][i]][i];\n        }\n    }\n    cin>>q;\n    for(int i=1;i<=q;i++)\n    {\n        int a,b;\n        cin>>a>>b;\n        int lcaa=lca(a,b);\n        for(int j=19;j>=0;j--)\n        {\n            if(nxt[a][j]&&dep[nxt[a][j]]>dep[lcaa])\n            {\n                ans[i]+=1<<j,a=nxt[a][j];\n            }\n        }\n        for(int j=19;j>=0;j--)\n        {\n            if(nxt[b][j]&&dep[nxt[b][j]]>dep[lcaa])\n            {\n                ans[i]+=1<<j,b=nxt[b][j];\n            }\n        }\n        if((a==lcaa&&nxt[b][0]&&dep[nxt[b][0]]<=dep[lcaa])||(b==lcaa&&nxt[a][0]&&dep[nxt[a][0]]<=dep[lcaa]))\n        {\n            ans[i]+=1;\n        }\n        else if(nxt[b][0]&&nxt[a][0]&&dep[nxt[b][0]]<=dep[lcaa]&&dep[nxt[a][0]]<=dep[lcaa])\n        {\n            ans[i]+=2;\n            lq[i<<1][0]=a,lq[i<<1][1]=lqh[b],lqh[b]=i<<1;\n            lq[i<<1|1][0]=b,lq[i<<1|1][1]=lqh[a],lqh[a]=i<<1|1;\n        }\n        else\n        {\n            ans[i]=-1;\n        }\n    }\n    dfs3(1);\n    for(int i=1;i<=q;i++)\n    {\n        cout<<ans[i]-co[i]<<endl;\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1642684200,
        "uid": 237437,
        "name": "xxasmcd",
        "ccfLevel": 6,
        "title": "CF983E\u9898\u89e3"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/983/problem/E) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF983E)\n\n\u4e00\u9053\uff08\u7edd\u5bf9\uff09\u504f\u7b80\u5355\u7684 D1E\uff0c\u4f46\u662f\u6211\u6015\u81ea\u5df1\u8fc7~~\u82e5\u5e72\u5e74~~\uff08\u5927\u96fe\uff09\u5fd8\u4e86\u81ea\u5df1\u7684\u89e3\u6cd5\u4e86\uff0c\u6240\u4ee5\u8fc7\u6765\u6c34\u7bc7\u9898\u89e3\uff08\n\n\u9996\u5148\u8003\u8651\u600e\u4e48\u66b4\u529b\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u6bcf\u4e00\u6b65\u80af\u5b9a\u4f1a\u8d2a\u5fc3\uff0c\u8d2a\u5fc3\u5730\u8df3\u5230\u6240\u6709\u7ecf\u8fc7\u5f53\u524d\u70b9\u7684\u516c\u4ea4\u7ebf\u8def\u4e2d\u53e6\u4e00\u7aef\u6700\u6d45\u7684\u4f4d\u7f6e\uff0c\u76f4\u5230\u5230\u8fbe\u4e24\u70b9\u7684 $\\text{LCA}$ \u4e3a\u6b62\u3002\u4e0d\u96be\u53d1\u73b0\u4e0a\u8ff0\u8fc7\u7a0b\u53ef\u4ee5\u500d\u589e\u4f18\u5316\uff0c\u5177\u4f53\u6765\u8bf4\u6211\u4eec\u8bb0 $nxt_{i,j}$ \u8868\u793a\u4ece $i$ \u5f00\u59cb\u8d70 $2^j$ \u6b65\u6700\u6d45\u80fd\u591f\u5230\u8fbe\u54ea\u91cc\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4e00\u9762\u6811\u5256\u6c42\u51fa\u7ecf\u8fc7\u6bcf\u4e2a\u70b9\u80fd\u591f\u5230\u8fbe\u6df1\u5ea6\u6700\u6d45\u7684\u8282\u70b9\uff0c\u4e00\u9762\u500d\u589e\u5f80\u4e0a\u8df3\u77e5\u9053\u8df3\u5230\u6df1\u5ea6 $<\\text{LCA}(u,v)$ \u7684\u4f4d\u7f6e\u4e3a\u6b62\u3002\n\n\u4e0d\u8fc7\u4e0a\u8ff0\u7b97\u6cd5\u6709\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u5c31\u662f\u5728\u6211\u4eec\u5230\u8fbe $\\text{LCA}(u,v)$ \u7684\u524d\u4e00\u6b65\u5230\u8fbe\u7684\u70b9 $u',v'$ \u5f88\u53ef\u80fd\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u67d0\u6761\u516c\u4ea4\u7ebf\u76f8\u8fde\u4e86\uff0c\u6b64\u65f6\u6211\u4eec\u5927\u53ef\u4e0d\u5fc5\u518d\u82b1\u8d39 $2$ \u7684\u4ee3\u4ef7\u8df3\u5230 $\\text{LCA}(u,v)$\uff0c\u76f4\u63a5\u4e00\u6b65\u5c31\u53ef\u4ee5\u641e\u5b9a\uff0c\u7b54\u6848\u9700\u51cf\u4e00\u3002\u56e0\u6b64\u8003\u8651\u518d\u500d\u589e\u6c42\u51fa $u,v$ \u5230\u8fbe $\\text{LCA}(u,v)$ \u4e4b\u524d\u4e0a\u4e00\u6b65\u5230\u8fbe\u7684\u8282\u70b9 $u',v'$\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u7531\u4e8e $u',v'$ \u4e4b\u95f4\u4e0d\u5b58\u5728\u7956\u5148\u5173\u7cfb\uff0c\u56e0\u6b64 $u',v'$ \u5b58\u5728\u516c\u4ea4\u7ebf\u76f8\u8fde\u7684\u5145\u8981\u6761\u4ef6\u662f\u5b58\u5728\u67d0\u4e2a\u516c\u4ea4\u7ebf\uff0c\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u5728 $u',v'$ \u5b50\u6811\u5185\uff0c\u8fd9\u4e2a\u53ef\u4ee5 DFS \u5e8f+\u79bb\u7ebf\u4e8c\u7ef4\u6570\u70b9/\u5728\u7ebf\u4e3b\u5e2d\u6811\u6c42\u51fa\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n\\log^2n$\uff0c\u4f46\u663e\u7136\u6709\u590d\u6742\u5ea6\u66f4\u4f18\u79c0/\u66f4\u597d\u5199\u7684 implementation\uff0c\u6bd4\u65b9\u8bf4\u6811\u5256\u6362\u6210 `set` \u542f\u53d1\u5f0f\u5408\u5e76\u4ee3\u7801\u53ef\u4ee5\u5c11\u4e09\u5341\u591a\u884c\uff0c\u6362\u6210\u7ebf\u6bb5\u6811\u5408\u5e76\u53ef\u4ee5\u5c11\u4e00\u4e2a $\\log$\u3002\n\n~~\u6211\u7adf\u7136\u5199\u8fd9\u4e48\u77ed\u7684\u9898\u89e3\uff0c\u6211\u6015\u4e0d\u662f\u7cbe\u795e\u4e0d\u6b63\u5e38\uff08\u5927\u96fe~~\n\n\u4ee3\u7801\uff08\u8fd9\u79cd\u9898\u6211\u90fd\u80fd\u7801 171 \u884c\u2026\u2026zz \u8fd9\u9898\u6211\u5b9e\u73b0\u5f97\u8ddf sh*t \u4e00\u6837\uff09\uff1a\n\n```cpp\nconst int MAXN=2e5;\nconst int LOG_N=18;\nconst int INF=0x3f3f3f3f;\nint n,m,qu,qn,hd[MAXN+5],to[MAXN+5],nxt[MAXN+5],ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint siz[MAXN+5],wson[MAXN+5],dep[MAXN+5],fa[MAXN+5][LOG_N+2];\nint top[MAXN+5],dfn[MAXN+5],tim=0,edt[MAXN+5];\nvoid dfs1(int x){\n\tsiz[x]=1;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];dep[y]=dep[x]+1;\n\t\tdfs1(y);siz[x]+=siz[y];\n\t\tif(siz[y]>siz[wson[x]]) wson[x]=y;\n\t}\n}\nvoid dfs2(int x,int tp){\n\ttop[x]=tp;dfn[x]=++tim;if(wson[x]) dfs2(wson[x],tp);\n\tfor(int e=hd[x];e;e=nxt[e]) if(to[e]!=fa[x][0]&&to[e]!=wson[x])\n\t\tdfs2(to[e],to[e]);\n\tedt[x]=tim;\n}\nint getlca(int x,int y){\n\twhile(top[x]^top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tx=fa[top[x]][0];\n\t} if(dep[x]<dep[y]) swap(x,y);\n\treturn y;\n}\nstruct node{int l,r,val,lz;} s[MAXN*4+5];\nvoid pushup(int k){s[k].val=min(s[k<<1].val,s[k<<1|1].val);}\nvoid build(int k,int l,int r){\n\ts[k].l=l;s[k].r=r;s[k].lz=INF;if(l==r) return s[k].val=INF,void();\n\tint mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);pushup(k);\n}\nvoid pushdown(int k){\n\tif(s[k].lz!=INF){\n\t\tchkmin(s[k<<1].val,s[k].lz);chkmin(s[k<<1|1].val,s[k].lz);\n\t\tchkmin(s[k<<1].lz,s[k].lz);chkmin(s[k<<1|1].lz,s[k].lz);\n\t\ts[k].lz=INF;\n\t}\n}\nvoid modify(int k,int l,int r,int x){\n\tif(l<=s[k].l&&s[k].r<=r){\n\t\tchkmin(s[k].val,x);chkmin(s[k].lz,x);\n\t\treturn;\n\t} pushdown(k);int mid=s[k].l+s[k].r>>1;\n\tif(r<=mid) modify(k<<1,l,r,x);\n\telse if(l>mid) modify(k<<1|1,l,r,x);\n\telse modify(k<<1,l,mid,x),modify(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\nint query(int k,int x){\n\tif(s[k].l==s[k].r) return s[k].val;pushdown(k);\n\tpushdown(k);int mid=s[k].l+s[k].r>>1;\n\tif(x<=mid) return query(k<<1,x);\n\telse return query(k<<1|1,x);\n}\nvoid jumpath(int x,int y,int v){\n\twhile(top[x]^top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tmodify(1,dfn[top[x]],dfn[x],v);\n\t\tx=fa[top[x]][0];\n\t} if(dep[x]<dep[y]) swap(x,y);\n\tmodify(1,dfn[y],dfn[x],v);\n}\nint get_kanc(int x,int k){\n\tfor(int i=LOG_N;~i;i--) if(k>>i&1) x=fa[x][i];\n\treturn x;\n}\nint nt[MAXN+5][LOG_N+2],cnt[MAXN+5],ans[MAXN+5],mark[MAXN+5];\nint step(int x,int d){\n\tif(dep[x]<=d) return 0;\n\tif(dep[nt[x][LOG_N]]>d) return -1;int cnt=0;\n\tfor(int i=LOG_N;~i;i--) if(dep[nt[x][i]]>d) x=nt[x][i],cnt|=(1<<i);\n\treturn cnt+(dep[x]>d);\n}\nint get_kstp(int x,int k){\n\tfor(int i=LOG_N;~i;i--) if(k>>i&1) x=nt[x][i];\n\treturn x;\n}\nvector<int> pts[MAXN+5];\nstruct qry{\n\tint x,y,t,id;\n\tbool operator <(const qry &rhs) const{\n\t\treturn x<rhs.x;\n\t}\n} q[MAXN*4+5];\nvoid add_rec(int x1,int x2,int y1,int y2,int id){\n//\tprintf(\"%d %d %d %d %d\\n\",x1,x2,y1,y2,id);\n\tq[++qn]={x2,y2,1,id};q[++qn]={x1-1,y2,-1,id};\n\tq[++qn]={x2,y1-1,-1,id};q[++qn]={x1-1,y1-1,1,id};\n}\nstruct fenwick{\n\tint t[MAXN+5];\n\tvoid add(int x,int v){for(int i=x;i<=n;i+=(i&(-i))) t[i]+=v;}\n\tint query(int x){int ret=0;for(int i=x;i;i&=(i-1)) ret+=t[i];return ret;}\n} tr;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=2;i<=n;i++) scanf(\"%d\",&fa[i][0]),adde(fa[i][0],i);\n\tdfs1(1);dfs2(1,1);build(1,1,n);\n\tfor(int i=1;i<=n;i++) modify(1,dfn[i],dfn[i],dep[i]);\n\tscanf(\"%d\",&m);\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tpts[dfn[x]].pb(dfn[y]);pts[dfn[y]].pb(dfn[x]);\n//\t\tprintf(\"(%d %d)\\n\",dfn[x],dfn[y]);\n\t\tjumpath(x,y,dep[getlca(x,y)]);\n\t}\n\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j<=n;j++) fa[j][i]=fa[fa[j][i-1]][i-1];\n\tfor(int i=1;i<=n;i++) nt[i][0]=get_kanc(i,dep[i]-query(1,dfn[i]));\n\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j<=n;j++) nt[j][i]=nt[nt[j][i-1]][i-1];\n\tscanf(\"%d\",&qu);\n\tfor(int i=1;i<=qu;i++){\n\t\tint x,y,l;scanf(\"%d%d\",&x,&y);l=getlca(x,y);\n\t\tint sx=step(x,dep[l]),sy=step(y,dep[l]);\n\t\tif(!~sx||!~sy) ans[i]=-1;\n\t\telse{\n\t\t\tans[i]=sx+sy;\n\t\t\tif(sx!=0&&sy!=0){\n\t\t\t\tint ax=get_kstp(x,sx-1);\n\t\t\t\tint ay=get_kstp(y,sy-1);\n\t\t\t\tadd_rec(dfn[ax],edt[ax],dfn[ay],edt[ay],i);\n\t\t\t}\n\t\t}\n\t}\n//\tfor(int i=1;i<=qu;i++) printf(\"%d\\n\",ans[i]);\n\tsort(q+1,q+qn+1);int cur=1;\n\tfor(int i=1;i<=qn;i++){\n\t\twhile(cur<=q[i].x){\n\t\t\tfor(int y:pts[cur]) tr.add(y,1);\n\t\t\tcur++;\n\t\t} cnt[q[i].id]+=q[i].t*tr.query(q[i].y);\n//\t\tprintf(\"%d %d %d\\n\",q[i].x,q[i].y,tr.query(q[i].y));\n\t}\n\tfor(int i=1;i<=qu;i++) printf(\"%d\\n\",ans[i]-(cnt[i]>0));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1626007323,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF983E NN country"
    }
]