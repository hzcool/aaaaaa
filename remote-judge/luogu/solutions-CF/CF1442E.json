[
    {
        "content": "- [CF1442E Black, White and Grey Tree](https://www.luogu.com.cn/problem/CF1442E)\n\n---\n\n\u6709\u8da3\u7684\u601d\u7ef4\u9898\uff0c\u9700\u8981\u53d1\u73b0\u4e00\u4e9b\u6027\u8d28\uff1a\n\n\u9996\u5148\uff0c\u6240\u6709\u8fde\u5728\u4e00\u8d77\uff0c\u989c\u8272\u4e00\u6837\u7684\u70b9\u90fd\u53ef\u4ee5\u4e00\u8d77\u5220\u3002\n\n\u7136\u540e\uff0c\u5982\u679c\u6811\u53ea\u6709\u9ed1\u548c\u767d \uff0c\u90a3\u4e48\u53ef\u4ee5\u6709\u8fd9\u6837\u4e00\u4e2a\u8d2a\u5fc3\u7684\u7b56\u7565\uff1a\n\n\u9996\u5148\u5bf9\u4e8e\u6240\u6709\u8fb9\uff0c\u5982\u679c\u4e24\u8fb9\u7684\u70b9\u989c\u8272\u76f8\u540c\u770b\u505a\u8fb9\u6743\u4e3a $0$ \uff0c\u4e0d\u540c\u5219\u4e3a $1$ \uff0c\u90a3\u4e48\u6c42\u4e00\u4e0b\u76f4\u5f84 $len$ \u3002\n\n\u76f4\u5f84\u4e0a\u7684\u70b9\u662f\u9ed1\u767d\u76f8\u95f4\u7684\uff0c\u8d2a\u5fc3\u4ece\u76f4\u5f84\u7684\u4e24\u5934\u5f00\u59cb\u5220\uff0c\u5220\u6389\u6b21\u6570 $=\\lceil \\frac{len}{2} \\rceil +1$\n\n\u7136\u540e\u5982\u679c\u6709\u7070\u70b9\uff0c\u5c31\u8981\u7ed9\u7070\u70b9\u67d3\u6210 \u9ed1/\u767d \uff0c\u4f7f\u76f4\u5f84\u957f\u5ea6\u6700\u5c0f\u3002\n\n\u8003\u8651 DP\uff0c\u7c7b\u4f3c\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u8bbe $f(u,1/2)$ \u8868\u793a $u$ \u67d3\u6210\u767d/\u9ed1\uff0c\u5b50\u6811\u4e2d\u67d0\u4e2a\u70b9\u79bb\u5b83\u6700\u5927\u7684\u8ddd\u79bb\uff0c$g(u,1/2)$ \u8868\u793a $u$ \u67d3\u6210\u767d/\u9ed1 \u7ecf\u8fc7 $u$ \u7684\u7b54\u6848\u3002\n\n\u8f6c\u79fb\u4ece\u513f\u5b50 $v$ \u5408\u5e76\uff1a\n\n$f(u,j)=\\max(f(u,j),\\min(f(v,k)+(j\\neq k)))$\n\n$g(u,j)=\\max(g(u,j),\\min(f(u,j)+f(v,k)+(j\\neq k)))$\n\n$answer=\\max(\\min(g(u,1/2)))$\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Rep(i,a,b) for(register int i=(a);i>=(b);--i)\nusing namespace std;\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\n#define maxn 200005\nint n,m,res;\nstruct edge{\n\tint to,nxt;\n}e[maxn<<1];\nint tot,head[maxn];\ninline void adde(int u,int v){\n\te[++tot]=(edge){v,head[u]};\n\thead[u]=tot;\n}\n#define inf 0x3f3f3f3f\nint a[maxn],f[maxn][3],g[maxn][3];\n// f[i][1/2] : u\u4e3a1/2\u7684\u6700\u5927\u513f\u5b50\u94fe \n// g[i][1/2] : u\u4e3a1/2\u7684\u7b54\u6848 \nvoid dfs(int u,int pa)\n{\n\tint c=a[u];\n\tif(c)f[u][c^3]=g[u][c^3]=inf,\n\t\tf[u][c]=0,g[u][c]=-inf;\n\telse f[u][1]=f[u][2]=0,g[u][1]=g[u][2]=-inf;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==pa)continue;\n\t\tdfs(v,u);\n\t\tFor(j,1,2)\n\t\t{\n\t\t\tif(c+j==3)continue;\n\t\t\tint tf=inf,tg=inf;\n\t\t\tFor(k,1,2){\n\t\t\t\tif(f[v][k]==inf)continue;\n\t\t\t\ttf=min(tf,f[v][k]+(j!=k));\n\t\t\t\ttg=min(tg,f[u][j]+f[v][k]+(j!=k));\n\t\t\t}\n\t\t\tf[u][j]=max(f[u][j],tf);\n\t\t\tg[u][j]=max(g[u][j],tg);\n\t\t}\n\t}\n\tres=max(res,min(g[u][1],g[u][2]));\n}\nvoid work()\n{\n\tn=read();tot=1;\n\tFor(i,1,n)head[i]=0,a[i]=read();\n\tFor(i,2,n){\n\t\tint u=read(),v=read();\n\t\tadde(u,v),adde(v,u);\n\t}\n\tres=0;\n\tdfs(1,0);\n\tprintf(\"%d\\n\",(res+1)/2+1);\n}\n\nsigned main()\n{\n\tint T=read();\n\twhile(T--)work();\n    return 0;\n}\n```\n\n~~\u4e3a\u4ec0\u4e48\u6211\u603b\u89c9\u7684\u8fd9\u4e2a dp \u6709\u6f0f\u6d1e\u554a\uff0c\u6709\u4eba\u6765hack\u4e00\u4e0b\u5417\uff08~~",
        "postTime": 1609764731,
        "uid": 151935,
        "name": "Rainbow_qwq",
        "ccfLevel": 0,
        "title": "CF1442E \u3010Black, White and Grey Tree\u3011"
    },
    {
        "content": "# CF1442E Black, White and Grey Tree\n\n\u9996\u5148\uff0c\u6211\u4eec\u628a\u76f8\u90bb\u7684\u540c\u8272\u70b9\u7f29\u8d77\u6765\uff0c\u56e0\u4e3a\u5b83\u4eec\u663e\u7136\u53ef\u4ee5\u4e00\u8d77\u64cd\u4f5c\u3002\n\n\u8003\u8651\u6811\u662f\u4e00\u6761\u94fe\uff0c\u4e14\u65e0\u7070\u70b9\u7684\u65f6\u5019\u3002\u56e0\u4e3a\u5df2\u7ecf\u7f29\u70b9\uff0c\u6240\u4ee5\u6574\u6761\u94fe\u4e00\u5b9a\u662f\u9ed1\u767d\u76f8\u95f4\u3002\u8bbe\u94fe\u7684\u957f\u5ea6\u4e3a $k$\uff08\u8282\u70b9\u6570\u91cf\uff09\uff0c\u5219\u7b54\u6848\u4e3a $\\lfloor\\frac{k}{2}\\rfloor + 1$\u3002\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u7b54\u6848\uff1a\n\n1. \u7b56\u7565\u4e00\uff1a\u5148\u628a\u51fa\u73b0\u6b21\u6570\u8f83\u591a\uff08\u51fa\u73b0 $\\lceil\\frac{k}{2}\\rceil$ \u6b21\uff09\u7684\u989c\u8272\uff0c\u7528\u4e00\u4e2a\u64cd\u4f5c\u5220\u6389\u3002\u7136\u540e\u5269\u4e0b $\\lfloor\\frac{k}{2}\\rfloor$ \u4e2a\u540c\u8272\u8fde\u901a\u5757\uff0c\u53ef\u4ee5\u9010\u4e2a\u5220\u6389\u3002\n2. \u7b56\u7565\u4e8c\uff1a\u5148\u7528\u4e00\u6b21\u64cd\u4f5c\uff0c\u628a\u94fe\u4e24\u7aef\u7684\u70b9\u5220\u6389\uff08\u5982\u679c\u94fe\u957f\u5ea6\u662f\u5076\u6570\u5219\u53ea\u5220\u5176\u4e2d\u4e00\u7aef\uff09\u3002\u7136\u540e\u94fe\u7684\u4e24\u7aef\u989c\u8272\u4e00\u5b9a\u76f8\u540c\uff0c\u6b64\u65f6\u6bcf\u6b21\u5220\u6389\u4e24\u7aef\u7684\u70b9\uff08\u5373\u4e24\u4e2a\u53f6\u5b50\uff09\u3002\n\n\u8003\u8651\u6811\u4e0d\u662f\u4e00\u6761\u94fe\uff0c\u4e14\u65e0\u7070\u70b9\u7684\u65f6\u5019\u3002\u628a\u4e0a\u8ff0\u4e24\u79cd\u7b56\u7565\u6269\u5c55\u5230\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n1. \u7b56\u7565\u4e00\uff1a\u5148\u628a\u6574\u68f5\u6811\u91cc\u51fa\u73b0\u6b21\u6570\u8f83\u591a\u7684\u989c\u8272\u5168\u90e8\u5220\u6389\u3002\u7136\u540e\u9010\u4e2a\u8fde\u901a\u5757\u5220\u53bb\u3002\n2. \u7b56\u7565\u4e8c\uff1a\u9009\u62e9\u4e00\u79cd\u989c\u8272\u4f5c\u4e3a\u8d77\u59cb\u989c\u8272\uff08\u53ef\u4ee5\u66b4\u529b\u628a\u9ed1\u3001\u767d\u90fd\u5c1d\u8bd5\u4e00\u4e0b\uff09\u3002\u5220\u6389\u8fd9\u79cd\u989c\u8272\u7684\u6240\u6709\u53f6\u5b50\u3002\u518d\u5220\u6389\u53e6\u4e00\u79cd\u989c\u8272\u7684\u6240\u6709\u53f6\u5b50\u3002\u5982\u6b64\u8f6e\u6362\u3002\n\n\u53d1\u73b0\u7b56\u7565\u4e00\u7684\u7b54\u6848\u4e0a\u754c\u662f $\\lfloor\\frac{\\text{\u70b9\u6570}}{2}\\rfloor + 1$\uff0c\u800c\u7b56\u7565\u4e8c\u7684\u7b54\u6848\u4ec5\u4e3a $\\lfloor\\frac{\\text{\u76f4\u5f84\u957f\u5ea6}}{2}\\rfloor + 1$\u3002\u663e\u7136\u7b56\u7565\u4e8c\u662f\u66f4\u4f18\u7684\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u4e0d\u5b58\u5728\u66f4\u4f18\u7684\u7b56\u7565\u3002\n\n\u518d\u8003\u8651\u6709\u7070\u70b9\u7684\u60c5\u51b5\uff0c\u95ee\u9898\u76f8\u5f53\u4e8e\uff0c\u6211\u4eec\u8981\u7ed9\u6bcf\u4e2a\u7070\u70b9\u9009\u62e9\u4e00\u79cd\u989c\u8272\uff08\u9ed1\u6216\u767d\uff09\uff0c\u4f7f\u5f97\u518d\u6b21\u7f29\u70b9\u540e\u76f4\u5f84\u957f\u5ea6\u6700\u77ed\u3002\u8003\u8651\u6267\u884c\u4e0a\u8ff0\u8d2a\u5fc3\uff08\u7b56\u7565\u4e8c\uff09\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u9047\u5230\u5f53\u524d\u7684\u53f6\u5b50 $u$\uff0c\u5b83\u7684\u7236\u4eb2 $fa(u)$ \u662f\u7070\u8272\u7684\uff0c\u4e14\u5220\u53bb $u$ \u540e $fa(u)$ \u5c31\u4f1a\u53d8\u6210\u53f6\u5b50\uff08\u5373 $u$ \u662f $fa(u)$ \u7684\u6700\u540e\u4e00\u4e2a\u513f\u5b50\uff09\u3002\u6b64\u65f6\u6211\u4eec\u76f4\u63a5\u4ee4 $fa(u)$ \u548c $u$ \u540c\u8272\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n// problem: CF1442E\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\n\ntemplate<typename T> inline void ckmax(T& x, T y) { x = (y > x ? y : x); }\ntemplate<typename T> inline void ckmin(T& x, T y) { x = (y < x ? y : x); }\n\nconst int MAXN = 2e5;\nint n, a[MAXN + 5];\npii e[MAXN + 5];\n\nint fa[MAXN + 5], sz[MAXN + 5];\nint get_fa(int u) { return (fa[u] == u) ? u : (fa[u] = get_fa(fa[u])); }\nvoid unite(int u, int v) {\n\tu = get_fa(u); v = get_fa(v);\n\tif (u != v) {\n\t\tif (sz[u] > sz[v])\n\t\t\tswap(u, v);\n\t\tfa[u] = v;\n\t\tsz[v] += sz[u];\n\t}\n}\n\nstruct EDGE { int nxt, to; } edge[MAXN * 2 + 5];\nint head[MAXN + 5], tot;\ninline void add_edge(int u, int v) { edge[++tot].nxt = head[u]; edge[tot].to = v; head[u] = tot; }\n\nbool vis[MAXN + 5];\nint _deg[MAXN + 5], deg[MAXN + 5];\nint leaves[MAXN + 5], cnt_leaf;\nint work(int c) {\n\tcnt_leaf = 0;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tvis[i] = 0;\n\t\tdeg[i] = _deg[i];\n\t\tif (deg[i] <= 1) {\n\t\t\tleaves[++cnt_leaf] = i;\n\t\t\tvis[i] = 1;\n\t\t}\n\t}\n\tint res = 0;\n\twhile (cnt_leaf) {\n\t\tres++;\n\t\tqueue<int> q;\n\t\tfor (int i = 1; i <= cnt_leaf; ++i) {\n\t\t\tint u = leaves[i];\n\t\t\tif (a[u] == 0 || a[u] == c) {\n\t\t\t\tq.push(u);\n\t\t\t\tif (i != cnt_leaf) {\n\t\t\t\t\tswap(leaves[i], leaves[cnt_leaf]);\n\t\t\t\t}\n\t\t\t\t--cnt_leaf;\n\t\t\t\t--i;\n\t\t\t}\n\t\t}\n\t\twhile (!q.empty()) {\n\t\t\tint u = q.front();\n\t\t\tq.pop();\n\t\t\tfor (int i = head[u]; i; i = edge[i].nxt) {\n\t\t\t\tint v = edge[i].to;\n\t\t\t\tif (vis[v])\n\t\t\t\t\tcontinue;\n\t\t\t\tdeg[v]--;\n\t\t\t\tif (deg[v] <= 1) {\n\t\t\t\t\tvis[v] = 1;\n\t\t\t\t\tif ((a[v] == 0 || a[v] == c)) {\n\t\t\t\t\t\tq.push(v);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tleaves[++cnt_leaf] = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tc = 3 - c;\n\t}\n\treturn res;\n}\nvoid solve_case() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcin >> a[i];\n\t\tfa[i] = i;\n\t\tsz[i] = 1;\n\t\thead[i] = 0;\n\t\t_deg[i] = 0;\n\t}\n\ttot = 0;\n\t\n\tfor (int i = 1; i < n; ++i) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tif (a[u] == a[v])\n\t\t\tunite(u, v);\n\t\te[i] = mk(u, v);\n\t}\n\tfor (int i = 1; i < n; ++i) {\n\t\tint u = e[i].fi, v = e[i].se;\n\t\tu = get_fa(u);\n\t\tv = get_fa(v);\n\t\tif (u != v) {\n\t\t\tadd_edge(u, v);\n\t\t\tadd_edge(v, u);\n\t\t\t_deg[u]++;\n\t\t\t_deg[v]++;\n\t\t}\n\t}\n\tint ans = n;\n\tfor (int i = 1; i <= 2; ++i) {\n\t\tckmin(ans, work(i));\n\t}\n\t// cerr << \"**********************\" << endl;\n\tcout << ans << endl;\n}\nint main() {\n\tint T; cin >> T; while (T--) {\n\t\tsolve_case();\n\t}\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1606188726,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1442E \u3010Black, White and Grey Tree\u3011"
    },
    {
        "content": "~~\u600e\u4e48\u9898\u89e3\u90fd\u662f\u6e05\u4e00\u8272\u7684 dp \u554a~~\n\n\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\uff0c\u4ece\u7b80\u5355\u7684\u60c5\u666f\u51fa\u53d1\uff0c\u627e\u5230\u6027\u8d28\u3002\n\n\u4e0d\u96be\u60f3\u5230\u7684\u662f\uff0c\u76f8\u90bb\u7684\u540c\u8272\u8282\u70b9\u53ef\u4ee5\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u56e0\u4e3a\u5982\u679c\u65e0\u8bba\u4f55\u79cd\u6700\u4f18\u64cd\u4f5c\uff0c\u603b\u662f\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u540c\u8272\u8fde\u901a\u5757\u91cc\u7684\u70b9\u5220\u9664\u5ef6\u540e\uff0c\u548c\u8fde\u901a\u5757\u4e2d\u6700\u665a\u5220\u9664\u7684\u90a3\u4e2a\u70b9\u4e00\u8d77\u5220\u9664\u3002\n\n\u8003\u8651\u5408\u5e76\u540c\u8272\u8282\u70b9\u540e\u82e5\u5f97\u5230\u4e86\u4e00\u6761\u9ed1\u767d\u76f8\u95f4\u7684\u957f\u5ea6\u4e3a $m$ \u7684\u94fe\uff0c\u901a\u8fc7\u5f52\u7eb3\u6cd5\u8bc1\u660e\u5176\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u4e3a $\\left \\lfloor\\frac{m}{2}\\right \\rfloor+1$\uff0e\n\n\u6211\u53e3\u80e1\u7684\u5f52\u7eb3\u65b9\u6cd5\u662f\u6309\u7167\u5947\u5076\u6027\u8fdb\u884c\u4e00\u4e2a\u5206\u7c7b\u8ba8\u8bba\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u7b80\u4fbf\u7684\u65b9\u6cd5\uff1a\u5047\u8bbe\u957f\u5ea6\u4e3a $n$ \u7684\u94fe\uff0c\u5220\u53bb\u4e86 $k$ \u4e2a\u70b9\uff0c\u5269\u4f59\u7684\u8fde\u901a\u5757\u5927\u5c0f\u4e3a $b_1,b_2,\\cdots$\uff0e\n\n- $n=1,2$\uff1a\u663e\u7136\u6210\u7acb\u3002\n- $n$ \u4e3a\u5076\u6570\uff1a\n  - \u94fe\u7684\u4e24\u7aef\u4e0d\u80fd\u540c\u65f6\u88ab\u9009\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u540c\u8272\u3002\n  - \u94fe\u53ea\u6709\u5176\u4e2d\u4e00\u7aef\u88ab\u9009\uff0c\u5269\u4e0b $k$ \u4e2a\u8fde\u901a\u5757\uff0c\u5b83\u4eec\u5927\u5c0f\u4e00\u5b9a\u90fd\u662f\u5947\u6570\uff0c\u5219\u7b54\u6848\u662f $1+\\sum \\left(\\left\\lfloor\\frac{b_i}{2}\\right\\rfloor+1\\right)=1+\\sum\\frac{b_i+1}{2}=1+\\frac{\\sum(b_i+1)}{2}=1+\\frac{n-k+k}{2}=\\frac{n}{2}+1$\uff0e\n  - \u94fe\u4e24\u7aef\u90fd\u6ca1\u6709\u88ab\u9009\uff0c\u5269\u4e0b $(k+1)$ \u4e2a\u8fde\u901a\u5757\uff0c\u8fde\u901a\u5757\u5927\u5c0f\u662f $k$ \u4e2a\u5947\u6570\uff0c$1$ \u4e2a\u5076\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u662f $1+\\sum \\left(\\left\\lfloor\\frac{b_i}{2}\\right\\rfloor+1\\right)=1+\\frac{\\sum (b_i+1+[b_i\\bmod 2=0])}{2}=1+\\frac{n-k+(k+1)+1}{2}=\\frac{n}{2}+2$\uff0e\n- $n$ \u4e3a\u5947\u6570\uff1a\n  - \u94fe\u7684\u4e24\u7aef\u540c\u65f6\u88ab\u9009\uff0c\u5269\u4e0b $(k-1)$ \u4e2a\u8fde\u901a\u5757\uff0c\u5927\u5c0f\u4e00\u5b9a\u90fd\u662f\u5947\u6570\uff0c\u7b54\u6848\u4e3a $1+\\sum \\left(\\left\\lfloor\\frac{b_i}{2}\\right\\rfloor+1\\right)=1+\\sum\\frac{b_i+1}{2}=1+\\frac{\\sum(b_i+1)}{2}=1+\\frac{n-k+(k-1)}{2}=\\frac{n-1}{2}+1$\uff0e\n  - \u94fe\u53ea\u6709\u4e00\u7aef\u88ab\u9009\uff0c\u5269\u4e0b $k$ \u4e2a\u8fde\u901a\u5757\uff0c\u8fde\u901a\u5757\u5927\u5c0f $(k-1)$ \u4e2a\u5947\u6570\uff0c$1$ \u4e2a\u5076\u6570\uff0c\u7b54\u6848\u4e3a $1+\\sum \\left(\\left\\lfloor\\frac{b_i}{2}\\right\\rfloor+1\\right)=1+\\frac{\\sum (b_i+1+[b_i\\bmod 2=0])}{2}=1+\\frac{n-k+k+1}{2}=\\frac{n+1}{2}+1$\uff0e\n  - \u94fe\u4e24\u7aef\u90fd\u6ca1\u6709\u88ab\u9009\uff0c\u5269\u4e0b $(k+1)$ \u4e2a\u8fde\u901a\u5757\uff1a\n    - \u9009\u62e9\u7684\u989c\u8272\u548c\u94fe\u7aef\u70b9\u989c\u8272\u76f8\u540c\uff0c\u8fde\u901a\u5757\u5927\u5c0f $(k-1)$ \u4e2a\u5947\u6570\uff0c$2$ \u4e2a\u5076\u6570\uff0c\u7b54\u6848\u4e3a $1+\\sum \\left(\\left\\lfloor\\frac{b_i}{2}\\right\\rfloor+1\\right)=1+\\frac{\\sum (b_i+1+[b_i\\bmod 2=0])}{2}=1+\\frac{n-k+(k+1)+2}{2}=\\frac{n+3}{2}+1$\uff0e\n    - \u9009\u62e9\u7684\u989c\u8272\u548c\u94fe\u7aef\u70b9\u989c\u8272\u4e0d\u540c\uff0c\u8fde\u901a\u5757\u5927\u5c0f $(k+1)$ \u4e2a\u5947\u6570\uff0c\u7b54\u6848\u4e3a $1+\\sum \\left(\\left\\lfloor\\frac{b_i}{2}\\right\\rfloor+1\\right)=1+\\sum\\frac{b_i+1}{2}=1+\\frac{\\sum(b_i+1)}{2}=1+\\frac{n-k+(k+1)}{2}=\\frac{n+1}{2}+1$\uff0e\n\n\u65e0\u8bba $n$ \u662f\u5076\u6570\u8fd8\u662f\u5947\u6570\uff0c\u5c3d\u53ef\u80fd\u7684\u9009\u4e24\u7aef\u90fd\u53ef\u4ee5\u8fbe\u5230 $\\left\\lfloor\\frac{n}{2}\\right\\rfloor+1$ \u7684\u7b54\u6848\u4e0b\u754c\uff0c\u4e5f\u5c31\u662f\u5176\u6700\u4f18\u65b9\u6848\u4e4b\u4e00\u662f\u6bcf\u6b21\u4ece\u4e24\u7aef\u5220\u9664\u53f6\u5b50\uff08\u5f02\u8272\u5219\u53ea\u5220\u4e00\u4e2a\uff09\u3002\n\n\u73b0\u5728\u8003\u8651\u7f29\u540c\u8272\u70b9\u540e\u662f\u4e00\u68f5\u6811\u7684\u60c5\u51b5\uff0c\u4f46\u5e76\u4e0d\u5305\u542b\u7070\u8272\u70b9\u3002\u90a3\u4e48\u627e\u51fa\u6811\u7684\u76f4\u5f84\uff0c\u5176\u5927\u5c0f\u4e3a $k$\uff0c\u6839\u636e\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u81f3\u5c11\u9700\u8981 $(\\left\\lfloor\\frac{k}{2}\\right\\rfloor+1)$ \u6b21\u64cd\u4f5c\uff0c\u7531\u4e8e\u76f4\u5f84\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\uff0c\u800c\u76f4\u5f84\u957f\u5ea6\u662f\u5947\u6570\u7684\u8bdd\u5fc5\u987b\u9009\u62e9\u76f4\u5f84\u7aef\u70b9\u7684\u989c\u8272\u5220\u9664\u624d\u80fd\u5f97\u5230\u8fd9\u4e2a\u4e0b\u754c\u3002\u7531\u4e8e\u6811\u7684\u76f4\u5f84\u7684\u4e2d\u70b9\u4e00\u5b9a\u91cd\u5408\uff0c\u6240\u4ee5\u8fd9\u4e9b\u76f4\u5f84\u7684\u7aef\u70b9\u4e00\u5b9a\u662f\u540c\u4e00\u989c\u8272\u3002\u90a3\u4e48\u6bcf\u6b21\u9009\u62e9\u76f4\u5f84\u4e24\u6bb5\u7684\u989c\u8272\uff0c\u5bf9\u8fd9\u4e2a\u989c\u8272\u5c3d\u53ef\u80fd\u5730\u5220\u53f6\u5b50\uff0c\u5373\u4e3a\u6700\u4f18\u65b9\u6848\u3002\n\n\u73b0\u5728\u6709\u4e86\u7070\u8272\uff0c\u4e0d\u786e\u5b9a\u5176\u5e94\u8be5\u548c\u9ed1\u8272\u4e00\u8d77\u5220\u8fd8\u662f\u548c\u767d\u8272\u4e00\u8d77\u5220\uff0c\u9009\u62e9\u548c\u4e0d\u540c\u7684\u989c\u8272\u7684\u4e00\u8d77\u5220\u53ef\u80fd\u4f1a\u5e26\u6765\u4e0d\u540c\u7684\u76f4\u5f84\u957f\u5ea6\u3002\n\n\u5927\u90e8\u5206\u9898\u89e3\u7684\u5904\u7406\u65b9\u6cd5\u662f dp\uff0c\u6211\u8fd9\u91cc\u7684\u65b9\u6cd5\u662f\u8d2a\u5fc3\u3002\n\n\u6839\u636e\u4e0a\u8ff0\u8bc1\u660e\uff0c\u6700\u4f18\u64cd\u4f5c\u4e00\u5b9a\u662f\u6bcf\u6b21\u4e0d\u65ad\u5730\u5265\u53f6\u5b50\uff0c\u80fd\u5265\u5c31\u5265\u3002\u800c\u6bcf\u6b21\u5c3d\u53ef\u80fd\u5730\u5265\u5b8c\u9ed1\u8272\uff08\u53ca\u7070\u8272\uff09\u4e4b\u540e\uff0c\u4e0d\u80fd\u518d\u9009\u62e9\u9ed1\u8272\u5265\uff0c\u53ea\u80fd\u9009\u62e9\u767d\u8272\u5265\u3002\u6240\u4ee5\u9009\u62e9\u7684\u989c\u8272\u4e00\u5b9a\u662f\u9ed1\u767d\u4ea4\u66ff\u7684\u3002\u5982\u679c\u6ca1\u6709\u7070\u8272\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u76f4\u5f84\u7aef\u70b9\u786e\u5b9a\u5265\u54ea\u4e2a\u66f4\u4f18\u3002\n\n\u73b0\u5728\u6709\u4e86\u7070\u8272\uff0c\u4e0d\u77e5\u9053\u5148\u5265\u54ea\u4e2a\u989c\u8272\u66f4\u4f18\uff0c\u4f46\u662f\u4e00\u5b9a\u662f\u9ed1\u767d\u4ea4\u66ff\u5265\u3002\u6240\u4ee5\u9ed1\u8272\u6253\u5934\u9635\u548c\u767d\u8272\u6253\u5934\u9635\u4e24\u79cd\u60c5\u51b5\u90fd\u7b97\u4e00\u904d\uff0c\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u7b54\u6848\u5373\u53ef\u3002\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u5373\u4e3a\u62d3\u6251\u6392\u5e8f\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n)$\uff0e\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<ctime>\n#include<random>\n#include<assert.h>\n#define pb emplace_back\n#define mp make_pair\n#define fi first\n#define se second\n#define dbg(x) cerr<<\"In Line \"<< __LINE__<<\" the \"<<#x<<\" = \"<<x<<'\\n';\n#define dpi(x,y) cerr<<\"In Line \"<<__LINE__<<\" the \"<<#x<<\" = \"<<x<<\" ; \"<<\"the \"<<#y<<\" = \"<<y<<'\\n';\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int>pii;\ntypedef pair<ll,int>pli;\ntypedef pair<ll,ll>pll;\ntypedef pair<int,ll>pil;\ntypedef vector<int>vi;\ntypedef vector<ll>vll;\ntypedef vector<pii>vpii;\ntypedef vector<pil>vpil;\ntemplate<typename T>T cmax(T &x, T y){return x=x>y?x:y;}\ntemplate<typename T>T cmin(T &x, T y){return x=x<y?x:y;}\ntemplate<typename T>\nT &read(T &r){\n\tr=0;bool w=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9')r=r*10+(ch^48),ch=getchar();\n\treturn r=w?-r:r;\n}\ntemplate<typename T1,typename... T2>\nvoid read(T1 &x,T2& ...y){read(x);read(y...);}\nconst int mod=998244353;\ninline void cadd(int &x,int y){x=(x+y>=mod)?(x+y-mod):(x+y);}\ninline void cdel(int &x,int y){x=(x-y<0)?(x-y+mod):(x-y);}\ninline int add(int x,int y){return (x+y>=mod)?(x+y-mod):(x+y);}\ninline int del(int x,int y){return (x-y<0)?(x-y+mod):(x-y);}\n//0 Gray\n//1 white\n//2 black\nconst int N=200010;\nint n,fa[N],ans,sum;\nint a[N],d[N],eu[N],ev[N];\nvi eg[N];\nqueue<int>q[3];\n#define relax(i) do{\\\n\tint x=q[i].front();q[i].pop();\\\n\tfor(auto v:eg[x]){\\\n\t\t--d[v];\\\n\t\tif(d[v]==1)\\\n\t\t\tq[a[v]].push(v);\\\n\t}\\\n}while(0)\nvoid solve(){\n\tread(n);ans=N;sum=0;\n\tfor(int i=1;i<=n;i++)fa[i]=d[i]=a[i]=0,vi().swap(eg[i]);\n\tfor(int i=1;i<=n;i++)read(a[i]);\n\tfor(int i=1,x,y;i<n;i++){\n\t\tread(x,y);eu[i]=x,ev[i]=y;\n\t\teg[x].pb(y);eg[y].pb(x);\n\t\t++d[x];++d[y];\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(d[i]<=1){\n\t\t\tq[a[i]].push(i);\n\t\t}\n\tint fl=1;\n\twhile(!(q[0].empty() && q[1].empty() && q[2].empty())){\n\t\twhile(!(q[0].empty() && q[fl].empty())){\n\t\t\tif(!q[0].empty())relax(0);\n\t\t\tif(!q[fl].empty())relax(fl);\n\t\t}\n\t\t++sum;\n\t\tfl=3-fl;\n\t}\n\tcmin(ans,sum);\n\tsum=0;\n\tfor(int i=1;i<=n;i++)d[i]=0;\n\tfor(int i=1;i<n;i++){\n\t\t++d[eu[i]];++d[ev[i]];\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(d[i]<=1){\n\t\t\tq[a[i]].push(i);\n\t\t}\n\tfl=2;\n\twhile(!(q[0].empty() && q[1].empty() && q[2].empty())){\n\t\twhile(!(q[0].empty() && q[fl].empty())){\n\t\t\tif(!q[0].empty())relax(0);\n\t\t\tif(!q[fl].empty())relax(fl);\n\t\t}\n\t\t++sum;\n\t\tfl=3-fl;\n\t}\n\tcmin(ans,sum);\n\tcout << ans << '\\n';\n\treturn ;\n}\nsigned main(){\n\t#ifdef do_while_true\n//\t\tassert(freopen(\"data.in\",\"r\",stdin));\n//\t\tassert(freopen(\"data.out\",\"w\",stdout));\n\t#endif\n\tint T;read(T);\n\twhile(T--){\n\t\tsolve();\n//\t\tcerr << \"-----------------------\\n\";\n\t}\n    #ifdef do_while_true\n\t\tcerr<<'\\n'<<\"Time:\"<<1.0*clock()/CLOCKS_PER_SEC*1000<<\" ms\"<<'\\n';\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1665795129,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300dCodeforces 1442E Black, White and Grey Tree"
    },
    {
        "content": "**sol of CF1442E** \n\n\u4e00\u773c\u4e0d\u4f1a\u6811\uff0c\u5148\u505a\u94fe\uff1b\u94fe\u4e5f\u4e0d\u4f1a\u505a\uff0c\u5148\u505a\u53ea\u6709\u9ed1\u767d\u8272\u7684\u94fe\u3002\n\n\u4e00\u4e2a\u5f88\u840c\u7684\u8d2a\u5fc3\u662f\u76f4\u63a5\u5408\u5e76\u989c\u8272\u76f8\u540c\u7684\u8282\u70b9\uff0c\u7136\u540e\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u6761\u9ed1\u767d\u76f8\u95f4\u7684\u94fe\u3002\n\n\u5b9a\u4e49\u6811\u4e0a\u4efb\u610f\u94fe\u957f\u8ba1\u6570\u5355\u4f4d\u4e3a\u8fb9\u6570\u3002\n\n\u5148\u8fdb\u884c\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u6211\u4eec\u53d1\u73b0\u94fe\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u662f $\\lceil \\frac{\\text {len}}{2}\\rceil + 1$\uff0c\u5373\u7b54\u6848\u4e0b\u754c\u3002\n\n\n\u901a\u8fc7\u5927\u91cf\u624b\u73a9\u53d1\u73b0\u5b58\u5728\u4e00\u79cd\u6784\u9020\u65b9\u6cd5\u53ef\u4ee5\u8fbe\u5230\u6b64\u4e0b\u754c\uff1a\u5c06\u94fe\u7684\u4e2d\u5fc3\u62c9\u51fa\u6765\u6210\u6839\uff0c\u6bcf\u6b21\u5220\u6240\u6709\u5f53\u524d\u6df1\u5ea6\u6700\u6df1\u7684\u8282\u70b9\uff0c\u663e\u7136\u6839\u636e\u4e8c\u5206\u56fe\u67d3\u8272\u5b9a\u7406\u5b83\u4eec\u662f\u540c\u8272\u7684\u3002\u7136\u540e\u5220\u7684\u6b21\u6570\u5c31\u4e3a\u5f53\u524d\u6811\u7684\u6700\u5927\u6df1\u5ea6\u5373 $\\lceil \\frac{\\text {len}}{2}\\rceil + 1$\u3002\n\n\u8003\u8651\u6269\u5c55\u5230\u6709\u7070\u8272\u7684\u94fe\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u4e00\u4e2a\u5e8f\u5217 $\\text{dp}_{\\text x,0/1}$ \u8868\u793a\u7b2c $x$ \u4e2a\u4f4d\u7f6e\u662f\u767d\u8272\u6216\u9ed1\u8272\u65f6\u5f53\u524d\u94fe\u6700\u5c0f\u5316\u7684\u6700\u5927\u957f\u5ea6\uff08\u6ce8\u610f\u5230\u4f7f\u7528\u6700\u5f00\u59cb\u7684\u840c\u840c\u8d2a\u5fc3\uff0c\u7070\u8272\u8282\u70b9\u6d82\u8272\u540e\u94fe\u53c8\u53ef\u80fd\u4ea7\u751f\u6536\u7f29\uff09\uff0c\u5904\u7406\u4e00\u4e0b\u8fb9\u754c\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u8003\u8651\u505a\u9ed1\u767d\u6811\u3002\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u7684\u6784\u9020\u6269\u5c55\u5230\u6811\u4e0a\u5c31\u4f1a\u5c06\u76f4\u5f84\u4ee3\u5165 $\\text {len}$\u3002\u7531\u4e8e\u6811\u7684\u95ee\u9898\u6bd4\u94fe\u5f3a\u5bb9\u6613\u5f97\u5230\u8fd9\u662f\u6811\u95ee\u9898\u7b54\u6848\u7684\u4e0b\u754c\uff0c\u53c8\u7531\u4e8e\u4e0a\u9762\u7684\u6784\u9020\u8bc1\u660e\u4e86\u6811\u95ee\u9898\u7684\u4e0b\u754c\u53ef\u4ee5\u88ab\u6784\u9020\u51fa\u6765\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u6811\u95ee\u9898\u7684\u7b54\u6848\u3002\n\n\u7136\u540e\u5c31\u662f\u5f88\u5957\u8def\u5730\u6811 dp\u3002\u6548\u4eff\u76f4\u5f84\u7684\u6c42\u6cd5\u6211\u4eec\u7ef4\u62a4 $\\text{dp}_{\\text x,0/1}$ \u8868\u793a\u5728\u7ecf\u8fc7\u8d2a\u5fc3\u5730\u538b\u7f29\u540e\uff0c\u70b9 $\\text x$ \u6d82\u767d/\u9ed1\u5411\u4e0b\u7684\u6700\u957f\u94fe\u957f\u5ea6\uff0c\u800c $\\text{mx}_{\\text x,0/1}$ \u8868\u793a\u7ecf\u8fc7\u8d2a\u5fc3\u5730\u538b\u7f29\u540e\uff0c\u70b9 $\\text x$ \u6d82\u767d/\u9ed1\u5411\u4e0b\u65f6\u5b50\u6811\u5185\u7684\u76f4\u5f84\u957f\u5ea6\u3002\n\n\u8f6c\u79fb\u5f88\u7b80\u5355\uff1a\n\n- $\\text{dp}_{\\text x,\\text j} \\leftarrow \\max_{\\text u\\in \\text{Son}}(\\min(\\text{dp}_{\\text u,0}+(0\\not=\\text j),\\text{dp}_{\\text u,1} + (1 \\not = \\text j)))$\n\n- $\\text{mx}_{\\text x,\\text j} \\leftarrow \\max_{\\text u\\in \\text{Son}}(dp_{x,j} + \\min(\\text{dp}_{\\text u,0}+(0\\not=\\text j),\\text{dp}_{\\text u,1} + (1 \\not = \\text j)))$\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n```cpp\n/*\n\u8d2a\u5fc3\u7b56\u7565\uff1a\u9009\u76f4\u5f84\u4e2d\u70b9\u4e3a\u6839\uff0c\u7136\u540e\u5c06\u6df1\u5ea6\u4ece\u6df1\u5f80\u6d45\u5220\u3002\n\u7136\u540e\u6b63\u5e38 dp \u5373\u53ef\u3002 \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 2e5 + 5 , Inf = 1e9;\nint n,m,head[Len],cnt,col[Len];\nstruct node\n{\n\tint next,to;\n}edge[Len << 1];\ninline void add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nint dp[Len][2],mx[Len][2],as;\nvoid DP(int x,int f)\n{\n\tdp[x][0] = dp[x][1] = mx[x][0] = mx[x][1] = 0;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f) continue;\n\t\tDP(to , x);\n\t\tfor(int j = 0 ; j <= 1 ; j ++) mx[x][j] = max(mx[x][j] , min(dp[to][0] + dp[x][j] + (0 != j) , dp[to][1] + dp[x][j] + (1 != j)));\n\t\tfor(int j = 0 ; j <= 1 ; j ++) dp[x][j] = max(dp[x][j] , min(dp[to][0] + (0 != j) , dp[to][1] + (1 != j)));\n\t}\n\tif(col[x] == 1) mx[x][1] = dp[x][1] = Inf;\n\tif(col[x] == 2) mx[x][0] = dp[x][0] = Inf; \n\tas = max(as , min(mx[x][0] , mx[x][1]));\n}\nint main()\n{\n\tint T;scanf(\"%d\",&T);\n\twhile(T --)\n\t{\n\t\tscanf(\"%d\",&n);as = 0;for(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&col[i]);\n\t\tfor(int i = 1 ; i < n ; i ++)\n\t\t{\n\t\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\t\tadd(x , y) , add(y , x);\n\t\t}\n\t\tDP(1 , 0);\n\t\tprintf(\"%d\\n\",(as + 1) / 2 + 1);\n\t\tfor(int i = 0 ; i <= n ; i ++) head[i] = 0;\n\t\tcnt = 0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1666861242,
        "uid": 782894,
        "name": "Kuon",
        "ccfLevel": 0,
        "title": "adamant faith"
    },
    {
        "content": "## \u5206\u6790\n\n\u7c7b\u4f3c `CF1089D`\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u76f8\u540c\u989c\u8272\u7684\u76f8\u90bb\u70b9\u7f29\u5728\u4e00\u8d77\uff0c\u7f29\u5b8c\u4e4b\u540e\u6211\u4eec\u5c31\u6ca1\u6709\u76f8\u90bb\u7684\u540c\u8272\u70b9\u4e86\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6811\u6ca1\u6709\u7070\u8272\u8fd9\u79cd\u6a21\u68f1\u4e24\u53ef\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e00\u4e2a\u8d2a\u5fc3\uff1a\u56e0\u4e3a\u76f4\u5f84\u80af\u5b9a\u662f\u9ed1\u767d\u76f8\u95f4\u7684\uff0c\u6240\u4ee5\u4ece\u76f4\u5f84\u7684\u4e24\u5934\u5f00\u59cb\u5220\u989c\u8272\u76f8\u540c\u7684\u70b9\uff0c\u6b21\u6570\u4e3a $\\lfloor \\dfrac{len}2 \\rfloor + 1$\n\n\u73b0\u5728\u8003\u8651\u5982\u679c\u6709\u7070\u8272\u70b9\u7684\u60c5\u51b5\uff0c\u5c31\u5c1d\u8bd5\u628a\u5b83\u67d3\u6210\u9ed1\u8272\u6216\u8005\u767d\u8272\u6765\u53d8\u6210\u4e0a\u9762\u7684\u60c5\u51b5\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651 `dp`\u3002\u4ee4 $f(u, c)\n$ \u8868\u793a $u$ \u67d3\u6210\u989c\u8272 $c$ \u65f6\u5b50\u6811\u7684\u67d0\u4e2a\u70b9\u79bb\u5b83\u6700\u5927\u7684\u8ddd\u79bb\uff08\u8fd9\u91cc\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\u7ecf\u8fc7\u8fb9\u7684\u6743\u503c\u548c\uff0c\u8fb9 $u, v$ \u7684\u6743\u503c\u4e3a $[u \\neq v]$\uff09\uff0c$g(u, c)$ \u8868\u793a $u$ \u67d3\u6210\u989c\u8272 $c$ \u65f6\u7ecf\u8fc7 $u$ \u7684\u7b54\u6848\u3002\n\n\u7531\u6211\u4eec\u521a\u521a\u7684\u8fb9\u7684\u6743\u503c\u5b9a\u4e49\uff0c\u5f97\u5230 $f(u, c) = \\max(\\{\\min{f(v, t) + [c \\neq t]\\}, t \\in \\{1, 2\\}, v \\in sons[u]})$\n\n\u4e8e\u662f\u5c31\u80fd\u5f97\u5230 $g(u, c) = \\max(\\{\\min\\{f(u, j) + f(v, t) + [j != t]\\}, t \\in \\{1, 2\\}, v in sons[u]\\})$\n\n\u800c\u56e0\u4e3a\u662f\u4ece\u76f4\u5f84\u4e24\u7aef\u5f00\u59cb\u67d3\u8272\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a $\\max\\{\\min\\{g(u, 0), g(u, 1)\\}, u \\in V\\}$\n\n## \u4ee3\u7801\n\n```cpp\n#include <stdio.h>\ninline int min(const int &x, const int &y) { return x < y ? x : y; }\ninline int max(const int &x, const int &y) { return x < y ? y : x; }\nconst int N = 200010;\nconst int inf = 0x3f3f3f3f;\nstruct edge {\n\u00a0\u00a0\u00a0\u00a0int to, nxt;\n} es[N << 1];\nint head[N], ecnt;\ninline void addedge(int u, int v) {\n\u00a0\u00a0\u00a0\u00a0es[++ ecnt] = (edge){v, head[u]};\n\u00a0\u00a0\u00a0\u00a0head[u] = ecnt;\n}\nint T, n, ans;\nint a[N];\nint f[N][3], g[N][3];\ninline void dfs(int u, int fa) {\n\u00a0\u00a0\u00a0\u00a0if (a[u]) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0f[u][3 - a[u]] = inf;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0g[u][3 - a[u]] = inf;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0f[u][a[u]] = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0g[u][a[u]] = -inf;\n\u00a0\u00a0\u00a0\u00a0} else {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0f[u][1] = f[u][2] = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0g[u][1] = g[u][2] = -inf;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0for (int e = head[u], v; v = es[e].to, e; e = es[e].nxt)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (v != fa) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dfs(v, u);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int j = 1; j <= 2; ++ j)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (a[u] != 3 - j) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int t1 = inf, t2 = inf;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int k = 1; k <= 2; ++ k) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0t1 = min(t1, f[v][k] + (j != k));\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0t2 = min(t2, f[u][j] + f[v][k] + (j != k));\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0f[u][j] = max(f[u][j], t1);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0g[u][j] = max(g[u][j], t2);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0ans = max(ans, min(g[u][1], g[u][2]));\n}\nint main() {\n//\u00a0 freopen(\"B_test.in\", \"r\", stdin);\n\u00a0\u00a0\u00a0\u00a0scanf(\"%d\", &T);\n\u00a0\u00a0\u00a0\u00a0for (; T --; ) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scanf(\"%d\", &n);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ecnt = 1;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int i = 1; i <= n; ++ i) head[i] = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int i = 1; i <= n; ++ i) scanf(\"%d\", a + i);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int i = 1, u, v; i < n; ++ i) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scanf(\"%d%d\", &u, &v);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0addedge(u, v);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0addedge(v, u);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ans = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dfs(1, 0);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"%d\\n\", (ans + 1) / 2 + 1);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```",
        "postTime": 1660792185,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "CF1442E Black, White and Grey Tree \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u67d3\u4e86\u7070\u3001\u767d\u3001\u9ed1\u8272\u7684\u6811\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u82e5\u5e72\u4e2a\u53ef\u4ee5\u76f8\u4e92\u8fde\u901a\u7684\u70b9\uff0c\u4f46\u4e0d\u80fd\u540c\u65f6\u542b\u6709\u9ed1\u767d\u4e24\u8272\u3002\u4e00\u6b21\u64cd\u4f5c\u5b9a\u4e49\u4e3a\u5c06\u9009\u62e9\u7684\u70b9\u5168\u90e8\u5220\u53bb\u3002\u95ee\u6700\u5c11\u51e0\u6b21\u53ef\u4ee5\u5220\u9664\u5168\u90e8\u7684\u70b9\u3002\n\n## \u505a\u6cd5\n\u672c\u9898\u4e3a\u4e00\u9053\u6811\u5f62 DP\u3002\n\n\u6211\u4eec\u5148\u4e0d\u8003\u8651\u7070\u70b9\u3002\u82e5\u53ea\u6709\u9ed1\u767d\u4e24\u8272\uff0c\u90a3\u6700\u5c11\u5220\u9664\u6b21\u6570\u5fc5\u5b9a\u4e3a $\\lceil\\frac{d}{2}\\rceil +1$\uff08$d$ \u4e3a\u6811\u7684\u76f4\u5f84\uff09\u3002\n\n\u7b80\u5355\u7684\u8bc1\u660e\uff1a\u5c06\u540c\u8272\u7684\u70b9\u89c6\u4e3a\u4e00\u4e2a\u6781\u5927\u7684\u70b9\uff08\u7f29\u70b9\uff09\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u68f5\u76f8\u90bb\u8282\u70b9\u5fc5\u5b9a\u5f02\u8272\u7684\u6811\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u4e0d\u505c\u5730\u5728\u76f4\u5f84\u4e0a\u5220\u6389\u4e0e\u67d0\u4e00\u7aef\u540c\u8272\u7684\u6240\u6709\u53f6\u8282\u70b9\u3002\n1. \u5982\u679c $d\\equiv 1\\pmod 2$\uff0c\u90a3\u4e48\u6bcf\u6b21\u4f1a\u5c06\u76f4\u5f84\u4e24\u7aef\u7684\u70b9\u90fd\u5220\u6389\uff0c\u5220 $\\lceil\\frac{d}{2}\\rceil +1$ \u6b21\u5c31\u6ca1\u70b9\u4e86\uff08\u6bd4\u76f4\u5f84\u5c0f\u7684\u5fc5\u5b9a\u5728\u67d0\u6b21\u5220\u9664\u4e2d\u88ab\u5f53\u6210\u53f6\u5b50\u8282\u70b9\u5220\u6389\u4e86\uff09\u3002\n2. \u5982\u679c $d\\equiv 0\\pmod 2$\uff0c\u5220\u6389\u4e00\u7aef\u5c31\u6210\u4e86\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7b54\u6848\u4f9d\u7136\u662f $\\lceil\\frac{d}{2}\\rceil+1$\u3002\n\n\u5173\u4e8e\u6811\u7684\u76f4\u5f84\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c\u6709\u9700\u8981\u7684\u8bf7\u81ea\u884c\u5b66\u4e60\u6811\u5f62 DP \u6c42\u76f4\u5f84\u3002\n\n\u6784\u9020\uff1a**\u4e0d\u9700\u8981\u7f29\u70b9**\uff0c\u53ea\u9700\u8981\u5c06\u540c\u8272\u70b9\u8fb9\u6743\u8bbe\u4e3a $0$\uff0c\u5f02\u8272\u70b9\u8fb9\u6743\u8bbe\u4e3a $1$\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u7f29\u70b9\u540e\u6811\u7684\u76f4\u5f84\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u52a0\u5165\u7070\u70b9\u3002\u5982\u679c\u4f60\u771f\u6b63\u7406\u89e3\u4e86\u4e0a\u9762\u7684\u601d\u8def\uff0c\u90a3\u7070\u70b9\u7684\u5904\u7406\u5e76\u4e0d\u96be\u3002\u6240\u6709\u7684\u7070\u70b9\uff0c\u65e0\u975e\u8ddf\u7740\u9ed1\u3001\u767d\u4e00\u8d77\u5220\u9664\u3002\u800c\u8fd9\u4e2a\u5220\u9664\u7684\u8fc7\u7a0b\u5fc5\u5b9a\u662f\u5f53\u5b83\u6210\u4e3a\u4e86\u53f6\u8282\u70b9\u540e\u4e0e\u5176\u4ed6\u53f6\u8282\u70b9\u4e00\u8d77\u5220\u9664\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u7070\u70b9\u5230\u5e95\u8ddf\u7740\u54ea\u79cd\u989c\u8272\u4e00\u8d77\u5220\u9664\uff0c\u5373\u5b83\u5230\u5e95\u67d3\u4e0a\u9ed1\u8272\u8fd8\u662f\u767d\u8272\u3002\n\n\u60f3\u8981\u5728\u8f83\u4f4e\u590d\u6742\u5ea6\u5185\u6c42\u51fa\u8fd9\u4e2a\u95ee\u9898\uff0c\u6811\u5f62 DP \u65e0\u7591\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u6211\u4eec\u8bbe $f1_{u,1/2}$ \u4e3a\u82e5\u5c06 $u$ \u67d3\u4e0a\u767d\u8272\u3001\u9ed1\u8272\u540e\u79bb\u5176\u6700\u8fdc\u7684\u8282\u70b9\u5230 $u$ \u7684\u8ddd\u79bb\uff08\u8bb2\u4eba\u8bdd\uff0c$u$ \u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u7684\u5730\u65b9\uff09\u3002\u8fd9\u4e2a\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u67d3\u4e0a\u9ed1\u767d\u4e24\u8272\u8fb9\u6743\u662f\u4f1a\u53d8\u7684\u3002\u4f46\u662f\uff0c\u6709\u4e86\u8fd9\u4e2a\u6211\u4eec\u8fd8\u4e0d\u80fd\u6c42\u51fa\u7b54\u6848\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6c42\u51fa\u7ecf\u8fc7 $u$ \u7684\u76f4\u5f84\u957f\uff0c\u624d\u80fd\u7edf\u8ba1\u51fa\u6700\u5c11\u5220\u9664\u6b21\u6570\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u52a0\u591a\u4e00\u4e2a $f2_{u,1/2}$ \u8868\u793a\u7ecf\u8fc7 $u$ \u7684\u6700\u77ed\u76f4\u5f84\u957f\u5ea6\u3002\n\n\u63a5\u4e0b\u6765\u91cd\u70b9\u8bb2\u8bb2\u8f6c\u79fb\u3002\n\n\u8bbe $u$ \u7684\u6240\u6709\u51fa\u8fb9\u4e3a $v_1,v_2,\\cdots,v_k$\u3002$f$ \u6570\u7ec4\u7684\u8f6c\u79fb\u5f88\u597d\u6c42\uff0c\n$f1_{u,i}=\\max_{col=1}^{2}\\{f1_{{v_j},col}+w_{u,v_j}\\}$\uff08$col$ \u4e3a $v$ \u7684\u989c\u8272\uff09\u3002\u8bb2\u4eba\u8bdd\uff0c\u79bb $u$ \u6700\u8fdc\u7684\u5c31\u662f\u79bb $v_i$ \u6700\u8fdc\u7684\u52a0\u4e0a $u\\rightarrow v$ \u8fd9\u6761\u8fb9\u7684\u6743\u503c\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6b21\u6570\u5c3d\u91cf\u5c11\uff0c\u6240\u4ee5\u5728 $v_j$ \u4e2d\u53d6**\u6700\u5c0f\u503c**\u3002\n\n$f2$ \u6570\u7ec4\u4e0e\u6c42\u76f4\u5f84\u76f8\u4f3c\uff0c\u5373\u7ecf\u8fc7 $u$ \u7684\u6700\u957f\u8def\u5f84\u52a0\u4e0a\u7ecf\u8fc7 $v_i$ \u7684\u6700\u957f\u8def\u5f84\u53ca $u\\rightarrow v$ \u7684\u6743\u503c\u3002\u6211\u4eec\u4e5f\u5f97\u5230\u4e86 $f2$ \u7684\u9012\u63a8\u5f0f\uff1a$f2_{u,i}=\\max_{col=1}^{2}\\{f1_{u,i}+f1_{v_j,col}+w_{u,v}\\}$\u3002\n\n\u540c\u6837\uff0c\u6211\u4eec\u6c42\u7684\u662f\u6700\u5c0f\u6b21\u6570\uff0c\u6240\u4ee5\u5728\u6240\u6709 $v_j$ \u4e2d\u53d6**\u6700\u5c0f\u503c**\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $\\lceil\\dfrac{\\max_{u=1}^{n}\\{\\min(f2_{u,1},f2_{u,2})\\}}{2}\\rceil+1$\uff0c\u5373\u6240\u6709\u70b9\u67d3\u9ed1\u8272\u6216\u767d\u8272\u7684\u7b54\u6848 $\\div 2$ \u5411\u4e0a\u53d6\u6574\u518d $+1$\u3002\n\n## \u4ee3\u7801\n\u5b9e\u73b0\u8fd8\u662f\u6709\u70b9\u96be\u5ea6\u7684\uff0c\u7ed9\u4e2a\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n \nconst int N = 2e5 + 10;\nint T, n, ans, col[N];\nint f1[N][3], f2[N][3];\nvector<int> g[N];\n \nvoid dfs(int u, int fa){\n\tif(col[u])\tf1[u][col[u] ^ 3] = f2[u][col[u] ^ 3] = 1e9, f1[u][col[u]] = 0, f2[u][col[u]] = -1e9;//\u521d\u59cb\u5316 \n\telse\tf1[u][1] = f1[u][2] = 0, f2[u][1] = f2[u][2] = -1e9;//\u7070\u70b9\n\tfor(int v: g[u]){\n\t\tif(v == fa)\tcontinue;\n\t\tdfs(v, u);\n\t\tfor(int i=1;i<=2;i++){//u \u67d3\u6210\u4ec0\u4e48\u989c\u8272 \n\t\t\tif(col[u] + i == 3)\tcontinue;//\u9ed1\u767d\u90fd\u51fa\u73b0\u4e86\n\t\t\tint mnf = 1e9, mng = 1e9;//u\u88ab\u67d3\u6210\u4e86i\uff0cmnf\u6c42\u6240\u6709\u8def\u5f84\u6700\u5c0f\u503c\uff0cmng\u5219\u8bb0\u5f55\u6700\u5c0f\u76f4\u5f84\n\t\t\tfor(int j=1;j<=2;j++){//v \u67d3\u6210\u4ec0\u4e48\u989c\u8272\n\t\t\t\tmnf = min(mnf, f1[v][j] + (i != j));//\u513f\u5b50\u67d3\u6210\u4e86j\uff0c\u90a3\u5c31\u4ece\u5b83\u7684\u72b6\u6001\u52a0\u4e0a\u8fb9\u6743\u8f6c\u79fb\u8fc7\u6765 \n\t\t\t\tmng = min(mng, f1[u][i] + f1[v][j] + (i != j));\n\t\t\t}\n\t\t\tf1[u][i] = max(f1[u][i], mnf);//\u8fd9\u4e2a\u8ddf\u4e0a\u9762\u540c\u7406 \n\t\t\tf2[u][i] = max(f2[u][i], mng);//v\u8fd9\u4e2a\u513f\u5b50\u7684\u6700\u5c0f\u76f4\u5f84\u4e0d\u4e00\u5b9a\u662f\u6574\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u6240\u4ee5\u53d6 max \u624d\u80fd\u6c42\u51fa\u771f\u6b63\u76f4\u5f84 \n\t\t}\n\t}\n\tans = max(ans, min(f2[u][1], f2[u][2]));//\u7b54\u6848\u4e0e\u4e24\u79cd\u989c\u8272\u7684\u8f83\u5c0f\u503c\u53d6\u6700\u5927\u503c\n}\n\nint main(){\n    scanf(\"%d\", &T);\n    while(T--){\n    \tans = 0;//\u8bb0\u5f97\u6e05\u96f6 \n        for(int i=1;i<=n;i++)    g[i].clear();//\u8bb0\u5f97\u6e05\u7a7a \n        scanf(\"%d\", &n);\n        for(int i=1;i<=n;i++)    scanf(\"%d\", &col[i]);\n        for(int i=1;i<n;i++){\n            int u, v;\n            scanf(\"%d%d\", &u, &v);\n            g[u].push_back(v), g[v].push_back(u); \n        }\n        dfs(1, 0);\n        printf(\"%d\\n\", ((ans + 1) >> 1) + 1);//\u8f93\u51fa\u7b54\u6848 \n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1660304909,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "CF1442E Black, White and Grey Tree \u9898\u89e3"
    }
]