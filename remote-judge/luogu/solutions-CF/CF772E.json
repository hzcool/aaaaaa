[
    {
        "content": "[**\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.cnblogs.com/alan-zhao-2007/p/cf772e-sol.html)\uff08\u5176\u5b9e\u5dee\u4e0d\u591a\uff09\n\n## \u9898\u89e3\n\n\u56e0\u4e3a\u539f\u6811\u7684\u6240\u6709\u975e\u53f6\u5b50\u8282\u70b9\u90fd\u6070\u597d\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u6240\u4ee5\u539f\u6811\u4e0a $n$ \u4e2a\u53f6\u5b50\u8282\u70b9\u5f62\u6210\u7684**\u865a\u6811**\u4e0e\u539f\u6811\u540c\u6784\u3002\n\n\u8003\u8651\u589e\u91cf\u5730\u6784\u9020\u865a\u6811\uff1a\u5047\u5982\u524d $(i-1)$ \u4e2a\u53f6\u5b50\u7684\u865a\u6811\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\uff0c\u90a3\u4e48\u600e\u4e48\u627e\u5230\u7b2c $i$ \u4e2a\u53f6\u5b50\u7684\u4f4d\u7f6e\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u8be2\u95ee\uff0c\u786e\u5b9a\u53f6\u5b50\u8282\u70b9 $i$ \u76f8\u5bf9\u4e8e\u67d0\u4e2a*\u975e\u53f6\u5b50*\u8282\u70b9 $u$ \u7684\u4f4d\u7f6e\u3002\u5177\u4f53\u5730\uff0c\u8bbe $x,y$ \u5206\u522b\u4e3a $u$ \u7684\u5de6\u3001\u53f3\u5b50\u6811\u5185\u7684\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u8be2\u95ee $(x,y,i)$ \u6765\u786e\u5b9a $i$ \u5728 $u$ \u7684\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u6216\u4e0e $u$ \u6ca1\u6709\u7956\u5148\u5173\u7cfb\u3002\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff1a\u8be2\u95ee\u6b21\u6570\u4e0d\u8d85\u8fc7 $10n$ \u800c $10=\\lceil \\log_2 1000\\rceil$\u3002\n\n\u4e8e\u662f\u60f3\u5230\u70b9\u5206\u6cbb\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50 $i$\uff0c\u90fd\u8fdb\u884c\u4e00\u6b21\u70b9\u5206\u6cbb\u3002\u6bcf\u6b21\u70b9\u5206\u6cbb\u5bf9\u4e8e\u5f53\u524d\u8fde\u901a\u5757\u627e\u5230\u91cd\u5fc3 $rt$\uff08\u6ce8\u610f\u8fd9\u4e2a\u91cd\u5fc3\u4e0d\u80fd\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u82e5\u5206\u6cbb\u5230\u4e00\u4e2a\u53ea\u6709\u5355\u4e00\u53f6\u5b50\u8282\u70b9\u7684\u8fde\u901a\u5757\uff0c\u65b0\u5efa\u70b9\u4f5c\u4e3a\u8fd9\u4e2a\u8fde\u901a\u5757\u548c $i$ \u7684\u7236\u4eb2\u5373\u53ef\uff09\uff0c\u5e76\u8be2\u95ee $rt$ \u4e0e $i$ \u7684\u4f4d\u7f6e\u5173\u7cfb\u3002\u8bbe\u4e0e $rt$ \u76f8\u90bb\u7684\u3001\u671d\u5411 $i$ \u7684\u90a3\u4e2a\u70b9\uff08\u8fd9\u4e2a\u70b9\u6709\u53ef\u80fd\u662f $rt$ \u7684\u513f\u5b50\uff0c\u4e5f\u6709\u53ef\u80fd\u662f $rt$ \u7684\u7236\u4eb2\uff09\u4e3a $v$\uff0c\u57fa\u4e8e\u8fd9\u4e2a\u4f4d\u7f6e\u5173\u7cfb\uff0c\u6709\u5982\u4e0b\u51e0\u79cd\u53ef\u80fd\uff1a\n\n- $v$ \u4e4b\u524d\u6ca1\u6709\u4f5c\u4e3a\u5206\u6cbb\u4e2d\u5fc3\u8fc7\uff1a\u9012\u5f52\u5230 $v$ \u8fdb\u884c\u70b9\u5206\u6cbb\u5373\u53ef\u3002\n- $i$ \u4e0d\u5728 $rt$ \u7684\u5b50\u6811\u5185\uff08\u5373\u9700\u8981\u5f80\u4e0a\u8d70\uff09\uff1a\n  \n\t- $rt$ \u662f\u865a\u6811\u7684\u6839\uff1a\u6211\u4eec\u9700\u8981\u5728 $rt$ \u4e0a\u9762\u65b0\u52a0\u4e00\u4e2a\u70b9\uff0c\u4f5c\u4e3a\u65b0\u7684\u6839\uff0c\u5e76\u4ee4 $rt,i$ \u4e3a\u65b0\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u3002\n\t- \u5426\u5219\uff0c\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 $v$ \u66fe\u7ecf\u4f5c\u4e3a\u5206\u6cbb\u4e2d\u5fc3\uff0c\u5e76\u4e14\u5b83\u4e00\u5b9a\u662f\u4e0a\u4e00\u8f6e\u70b9\u5206\u6cbb\u7684\u5206\u6cbb\u4e2d\u5fc3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c**$i,rt$ \u5728 $v$ \u7684\u540c\u4e00\u5b50\u6811\u5185\uff0c\u4e14 $i$ \u4e0d\u5728 $rt$ \u7684\u5b50\u6811\u5185**\u3002\u8fd9\u663e\u7136\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u65b0\u5efa\u4e00\u4e2a\u70b9\uff0c\u5176\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3a $rt,i$ \u800c\u7236\u4eb2\u4e3a $v$\u3002\n- $i$ \u5728 $rt$ \u7684\u5b50\u6811\u5185\uff0c\u800c $v$ \u4e4b\u524d\u88ab\u8bbf\u95ee\u8fc7\uff1a\u540c\u4e0a\u65b0\u5efa\u70b9\u5373\u53ef\u3002\n\n\u53e6\u5916\uff0c\u6ce8\u610f\u5230\u524d\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u4e0d\u9700\u8981\u70b9\u5206\u6cbb\u786e\u5b9a\u4f4d\u7f6e\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u865a\u6811\u4e0a\u4e00\u5b9a\u6709\u5171\u540c\u7684\u7236\u4eb2\u3002\n\n\u56e0\u4e3a\u6bcf\u6b21\u70b9\u5206\u6cbb\u90fd\u53ea\u4f1a\u5206\u6cbb\u5230\u67d0\u4e2a\u5b50\u6811\uff0c\u800c\u65b0\u4e00\u8f6e\u5206\u6cbb\u7684\u8fde\u901a\u5757\u5927\u5c0f\u4f1a\u51cf\u534a\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n(n+\\frac{n}{2}+\\frac{n}{4}+\\dots))=\\mathcal{O}(n^2)$\uff0c\u8be2\u95ee\u6b21\u6570\u4e3a $\\mathcal{O}(n\\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <algorithm>\n#include <cassert>\nusing namespace std;\n#define For(Ti,Ta,Tb) for(int Ti=(Ta);Ti<=(Tb);++Ti)\n#define Dec(Ti,Ta,Tb) for(int Ti=(Ta);Ti>=(Tb);--Ti)\ntemplate<typename T> void Read(T &x){\n\tx=0;int _f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) _f=(ch=='-'?-1:_f),ch=getchar();\n\twhile(isdigit(ch)) x=x*10+(ch^48),ch=getchar();\n\tx=x*_f;\n}\ntemplate<typename T,typename... Args> void Read(T &x,Args& ...others){\n\tRead(x);Read(others...);\n}\ntypedef long long ll;\nconst int N=2005;\nint n,tot,e[N][3],sym[N][2],root;\n//e[u][0] \u8868\u793a u \u7684\u7236\u4eb2\uff0ce[u][1,2] \u5206\u522b\u8868\u793a u \u7684\u5de6\u53f3\u513f\u5b50\n//sym[u][0,1] \u5206\u522b\u8868\u793a\u4ee5 u \u7684\u5de6\u3001\u53f3\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u4efb\u4e00\u53f6\u5b50\u8282\u70b9\nvoid Link(int u,int x,int v){\n\te[u][x]=v,e[v][0]=u;\n}\nint vis[N],siz[N],mxsiz[N];\nint GetSize(int u,int pre){\n\tint res=1;\n\tFor(i,0,2){\n\t\tif(!e[u][i]||e[u][i]==pre||vis[e[u][i]]) continue;\n\t\tres+=GetSize(e[u][i],u);\n\t}\n\treturn res;\n}\nint rt;\nvoid GetRoot(int u,int pre,int tsiz){\n\tsiz[u]=1,mxsiz[u]=0;\n\tFor(i,0,2){\n\t\tif(!e[u][i]||e[u][i]==pre||vis[e[u][i]]) continue;\n\t\tGetRoot(e[u][i],u,tsiz);\n\t\tmxsiz[u]=max(mxsiz[u],siz[e[u][i]]);\n\t\tsiz[u]+=siz[e[u][i]];\n\t}\n\tmxsiz[u]=max(mxsiz[u],tsiz-siz[u]);\n\tif(e[u][1]&&mxsiz[u]<=tsiz/2) rt=u;\n}\nvoid Decomp(int u,int lf){//\u70b9\u5206\u6cbb\u3002lf:\u9700\u8981\u786e\u5b9a\u4f4d\u7f6e\u7684\u53f6\u5b50\u8282\u70b9\n\tif(!e[u][1]){//\u7279\u5224\u5206\u6cbb\u5230\u53f6\u5b50\u7684\u60c5\u51b5\n\t\tint f=e[u][0],sn;\n\t\tif(e[f][1]==u) sn=1;\n\t\telse sn=2;\n\t\tLink(f,sn,++tot);Link(tot,1,u);Link(tot,2,lf);\n\t\tsym[tot][0]=u,sym[tot][1]=lf;\n\t\treturn;\n\t}\n\trt=0;\n\tint s=GetSize(u,0);\n\tGetRoot(u,0,s);\n\tu=rt;\n\tvis[u]=1;\n\tprintf(\"%d %d %d\\n\",sym[u][0],sym[u][1],lf);\n\tfflush(stdout);\n\tint nxt;char temp[10];\n\tscanf(\"%s\",temp);\n\tif(temp[0]=='X') nxt=0;\n\telse if(temp[0]=='Y') nxt=2;\n\telse nxt=1;\n\tif(e[u][nxt]&&!vis[e[u][nxt]]){\n\t\tDecomp(e[u][nxt],lf);\n\t}else{\n\t\tint v=e[u][nxt];\n\t\tif(nxt==0){//\u5f80\u4e0a\u8d70\n\t\t\tif(!v){\n\t\t\t\tLink(++tot,1,u);Link(tot,2,lf);\n\t\t\t\tsym[tot][0]=sym[u][0],sym[tot][1]=lf;\n\t\t\t\troot=tot;return;\n\t\t\t}\n\t\t\tint sn=e[v][1]==u?1:2;\n\t\t\tLink(v,sn,++tot);Link(tot,1,u);Link(tot,2,lf);\n\t\t\tsym[tot][0]=sym[u][0],sym[tot][1]=lf;\n\t\t}else{//\u5f80\u5de6/\u53f3\u513f\u5b50\u8d70\n\t\t\tLink(u,nxt,++tot);Link(tot,1,v);Link(tot,2,lf);\n\t\t\tif(!e[v][1]) sym[tot][0]=v;\n\t\t\telse sym[tot][0]=sym[v][0];\n\t\t\tsym[tot][1]=lf;\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\troot=tot=n+1;\n\tLink(root,1,1);Link(root,2,2);\n\tsym[n+1][0]=1,sym[n+1][1]=2;\n\tFor(i,3,n){\n\t\tmemset(vis,0,sizeof vis);\n\t\tDecomp(root,i);\n\t}\n\tputs(\"-1\");\n\tFor(i,1,tot) printf(\"%d \",e[i][0]?e[i][0]:-1);\n\treturn 0;\n}\n```",
        "postTime": 1628157190,
        "uid": 225625,
        "name": "Alan_Zhao",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF772E\u3010Verifying Kingdom\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u662f\u4e00\u4e2a\u201c\u52a8\u6001\u201d\u70b9\u5206\u6cbb~~\u610f\u601d\u5c31\u662f\u6bcf\u6b21\u90fd\u52a8\u6001\u63d2\u53f6\u5b50\u66b4\u529b\u70b9\u5206\u6cbb\u2026\u2026~~\n\n\u6211\u4eec\u8003\u8651\u9010\u4e2a\u7684\u628a\u53f6\u5b50\u63d2\u8fdb\u53bb\u628a\u8fd9\u68f5\u6811\u6784\u9020\u51fa\u6765\uff0c\u5047\u8bbe\u5f53\u524d\u5df2\u7ecf\u6709\u4e00\u68f5\u524d$i-1$\u4e2a\u53f6\u5b50\u7684\u6811\uff08\u5f53\u7136\u7236\u5b50\u5173\u7cfb\u4e0d\u4e00\u5b9a\u8981\u662f\u539f\u6811\u7684\uff0c\u4f46\u6211\u4eec\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u53f6\u5b50\u6784\u9020\u51fa\u6765\u7684\u65b0\u6811\u4e00\u5b9a\u662f\u8fd9$i$\u4e2a\u53f6\u5b50\u7684**\u865a\u6811**\uff0c\u8fd9\u6837\u628a\u6240\u6709\u53f6\u5b50\u7684\u865a\u6811\u6784\u9020\u51fa\u6765\u5c31\u662f\u7b54\u6848\u4e86\uff09\uff0c\u6211\u4eec\u8981\u63d2\u53f6\u5b50$i$\uff0c\u5e0c\u671b\u77e5\u9053\u5b83\u4f1a\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4f7f\u7528\u70b9\u5206\u6cbb\u8fdb\u884c$O(\\log n)$\u6b21**\u5b9a\u4f4d**\uff08\u7c7b\u4f3c\u4e8c\u53c9\u67e5\u627e\u6811\u90a3\u6837\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u7528\u5230\u8be2\u95ee\u4e86\uff09\uff0c\u6211\u4eec\u6bcf\u6b21\u627e\u5230\u5f53\u524d\u8fde\u901a\u5757\u7684\u91cd\u5fc3\uff0c\u6ce8\u610f\u8fd9\u4e2a\u91cd\u5fc3\u4e0d\u80fd\u662f\u53f6\u5b50\uff0c\u7136\u540e\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\u662f3\uff08\u6216\u80052\uff0c\u4e0d\u8fc7\u8fd9\u65e0\u5173\u7d27\u8981\uff09\uff0c\u6211\u4eec\u5e0c\u671b\u77e5\u9053\u53f6\u5b50$i$\u662f\u5728\u91cd\u5fc3\u7684\u5de6\u5b50\u6811\uff0c\u53f3\u5b50\u6811\uff0c\u8fd8\u662f\u5728\u5b50\u6811\u5916\u3002\u663e\u800c\u6613\u89c1\u7684\u662f\u91cd\u5fc3\u65e2\u7136\u4e0d\u662f\u53f6\u5b50\u90a3\u4e48\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u91cc\u4e00\u5b9a\u90fd\u6709\u53f6\u5b50\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u5de6\u53f3\u5b50\u6811\u91cc\u968f\u4fbf\u627e\u4e2a\u53f6\u5b50\uff0c\u8bbe\u4e3a$lef$\u548c$rgh$\uff0c\u7136\u540e\uff0c\u6211\u4eec\u505a\u4e00\u6b21\u8be2\u95ee$(lef,rgh,i)$\uff0c\u5c31\u80fd\u77e5\u9053\u5728\u91cd\u5fc3\u7684\u54ea\u4e2a\u65b9\u5411\u4e86\uff1a\n\nX\uff1a$i$\u5728\u91cd\u5fc3\u7684\u5b50\u6811\u5916\u3002\n\nY\uff1a$i$\u5728\u53f3\u5b50\u6811\u91cc\u3002\n\nZ\uff1a$i$\u5728\u5de6\u5b50\u6811\u91cc\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u9012\u5f52\u5904\u7406\u4e86\u3002\n\n\u7136\u540e\u8fd9\u91cc\u7684\u8fb9\u754c\u6bd4\u8f83\u6709\u610f\u601d\uff0c\u5982\u679c\u6211\u4eec\u9012\u5f52\u5230\u4e00\u4e2a\u53f6\u5b50\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u865a\u70b9\uff08\u4e8b\u5b9e\u4e0a\u6211\u4eec\u6bcf\u6b21\u63d2\u4e2a\u53f6\u5b50\u90fd\u8981\u5efa\u6070\u597d\u4e00\u4e2a\u865a\u70b9\uff0c\u53ef\u4ee5\u60f3\u60f3\u4e3a\u5565\uff09\uff0c\u628a\u8fd9\u4e2a\u53f6\u5b50\u4e0e\u53f6\u5b50$i$\u5206\u522b\u4f5c\u4e3a\u5de6\u53f3\u513f\u5b50\u3002\u5982\u679c\u6211\u4eec\u9012\u5f52\u5230\u4e86\u4e00\u4e2a\u88ab\u8bbf\u95ee\u8fc7\u7684\u91cd\u5fc3\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u91cd\u5fc3\u548c\u4e0a\u6b21\u9012\u5f52\u7684\u91cd\u5fc3\u7684\u8def\u5f84\u4e0a\u5e94\u8be5\u65b0\u5efa\u4e00\u4e2a\u865a\u70b9\uff0c\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3a\u8fd9\u4e2a\u91cd\u5fc3\u548c\u53f6\u5b50$i$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u603b\u8be2\u95ee\u6b21\u6570\u662f$O(n\\log n)$\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2)$\u7684\uff08\u56e0\u4e3a\u6bcf\u6b21\u90fd\u8981\u70b9\u5206\u6cbb\u4e00\u904d\uff0c\u4f46\u662f\u8fd9\u4e2a\u70b9\u5206\u6cbb\u662f\u53ea\u9012\u5f52\u4e00\u8fb9\u7684\u70b9\u5206\u6cbb\uff09\u3002\n\n\u8fd8\u6709\u6570\u7ec4\u8981\u5f00\u52302000\u2026\u2026\u56e0\u4e3a\u603b\u70b9\u6570\u662f$2n-1$\u7684\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <cstdlib>\n#define opp(_o) (_o == ch[fa[_o]][1])\nusing namespace std;\nnamespace ywy {\n\tint ch[2111][2], fa[2111], gpt = 1, size[2111];\n\tunsigned char bv[2111];\n\tint tot = 0, zx;\n\tvoid afs(int pt) {\n\t    if (bv[pt] || !pt)\n\t        return;\n\t    tot++;\n\t    if (!ch[pt][0] && !ch[pt][1]) {\n\t        return;\n\t    }\n\t    afs(ch[pt][0]);\n\t    afs(ch[pt][1]);\n\t}\n\tint minn = 1234567890;\n\tvoid bfs(int pt) {\n\t    if (bv[pt] || !pt)\n\t        return;\n\t    int mx = 0;\n\t    if (!ch[pt][0] && !ch[pt][1])\n\t        size[pt] = 1;\n\t    else {\n\t        size[pt] = 1;\n\t        for (register int i = 0; i <= 1; i++) {\n\t            if (bv[ch[pt][i]])\n\t                continue;\n\t            bfs(ch[pt][i]);\n\t            size[pt] += size[ch[pt][i]];\n\t            mx = max(mx, size[ch[pt][i]]);\n\t        }\n\t        if (max(mx, tot - size[pt]) < minn)\n\t            zx = pt, minn = max(mx, tot - size[pt]);\n\t    }\n\t}\n\tvoid digui(int pt, int me) {  //\u4fdd\u8bc1pt\u5c3d\u91cf\u9760\u4e0a\n\t    if (bv[pt] || (!ch[pt][0] && !ch[pt][1])) {\n\t        int cjr = gpt;\n\t        gpt++;\n\t        ch[fa[pt]][opp(pt)] = cjr;\n\t        fa[cjr] = fa[pt];\n\t        fa[me] = cjr;\n\t        fa[pt] = cjr;\n\t        ch[cjr][0] = me;\n\t        ch[cjr][1] = pt;\n\t        return;\n\t    }\n\t    tot = 0;\n\t    afs(pt);\n\t    minn = 1234567890;\n\t    bfs(pt);\n\t    int lef = zx;\n\t    while (ch[lef][0]) lef = ch[lef][0];\n\t    int rgh = zx;\n\t    while (ch[rgh][1]) rgh = ch[rgh][1];\n\t    printf(\"%d %d %d\\n\", lef, rgh, me);\n\t    fflush(stdout);\n\t    char c;\n\t    cin >> c;\n\t    bv[zx] = 1;\n\t    if (c == 'Z') {  //\u5de6\n\t        digui(ch[zx][0], me);\n\t        return;\n\t    }\n\t    if (c == 'Y') {  //\u53f3\n\t        digui(ch[zx][1], me);\n\t        return;\n\t    }\n\t    if (c == 'X') {  //\u4e0a\n\t        if (bv[fa[zx]] || !fa[zx]) {\n\t            int cjr = gpt;\n\t            gpt++;\n\t            fa[cjr] = fa[zx];\n\t            ch[fa[zx]][opp(zx)] = cjr;\n\t            ch[cjr][0] = zx;\n\t            ch[cjr][1] = me;\n\t            fa[zx] = cjr;\n\t            fa[me] = cjr;\n\t            return;\n\t        }\n\t        int cur = fa[zx];\n\t        while (!bv[fa[cur]] && fa[cur]) cur = fa[cur];\n\t        digui(cur, me);\n\t    }\n\t}\n\tvoid ywymain() {\n\t    int n;\n\t    cin >> n;\n\t    gpt = n + 2;\n\t    ch[n + 1][0] = 1;\n\t    ch[n + 1][1] = 2;\n\t    fa[1] = fa[2] = n + 1;\n\t    for (register int i = 3; i <= n; i++) {\n\t        memset(bv, 0, sizeof(bv));\n\t        int cur = 1;\n\t        while (fa[cur]) cur = fa[cur];\n\t        digui(cur, i);\n\t    }\n\t    printf(\"-1\\n\");\n\t    fflush(stdout);\n\t    for (register int i = 1; i <= n * 2 - 1; i++) {\n\t        if (!fa[i])\n\t            printf(\"-1 \");\n\t        else\n\t            printf(\"%d \", fa[i]);\n\t    }\n\t    cout << endl;\n\t    fflush(stdout);\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1559570307,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF772E \u3010Verifying Kingdom\u3011"
    }
]