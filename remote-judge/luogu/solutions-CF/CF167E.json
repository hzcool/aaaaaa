[
    {
        "content": "~~\u521a\u521a\u5728\u673a\u623f\u770b zhihu \u88ab\u6293\u6446\u4e86\uff0c\u6559\u7ec3\u8ba9\u6211\u843d\u5b9e\u8fd9\u9053\u9898\u5e76\u4e0b\u5348\u5206\u4eab\uff0c\u597d\u96bew\u3002~~\n\n\u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a DAG\uff0c\u7136\u540e\u6709\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u8981\u6c42\u6e90\u70b9\u548c\u6c47\u70b9\u4e24\u4e24\u5339\u914d\uff0c\u5e76\u4e14\u5c06\u4ed6\u4eec\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u8def\u5f84\u4e0d\u80fd\u6709\u76f8\u4ea4\u90e8\u5206\uff0c\u914d\u5bf9\u540e\u6e90\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5bf9\u5e94\u51fa\u6765\u7684\u6c47\u70b9\u7684\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u5982\u679c\u662f\u5076\u6570\u5c31\u6709 $1$ \u7684\u8d21\u732e\uff0c\u5426\u5219\u5c31\u6709 $-1$ \u7684\u8d21\u732e\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u627e\u51fa\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u7136\u540e\u5728 DAG \u4e0a dp \u6c42\u51fa\u6bcf\u4e2a\u6e90\u70b9\u5230\u6bcf\u4e2a\u6c47\u70b9\u7684\u65b9\u6848\u6570\uff0c\u628a\u8fd9\u4e2a\u4e22\u8fdb\u4e00\u4e2a\u77e9\u9635 $S$ \u91cc\u3002\n\n\u7136\u540e\u8003\u8651\u5148\u5ffd\u7565\u6389\u8def\u5f84\u4e0d\u80fd\u91cd\u590d\u7684\u9650\u5236\u6761\u4ef6\uff0c\u8003\u8651\u5047\u8bbe\u73b0\u5728\u6c47\u70b9\u5e8f\u5217\u4e3a $T$\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u7684\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $(-1)^{\\sigma(T)}\\prod_{i=1}^n S_{i,T_i}$\uff0c\u5176\u4e2d $\\sigma(T)$ \u4e3a\u5e8f\u5217 $T$ \u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u3002\n\n\u4f60\u53d1\u73b0\u6392\u5217 $T$ \u662f\u4e00\u4e2a\u5168\u6392\u5217\uff0c\u4f60\u518d\u6765\u770b\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u4f60\u53d1\u73b0\u4ed6\u50cf\u4e00\u4e2a\u884c\u5217\u5f0f\u6c42\u548c\u5bf9\u5427\u3002\n\n\u4e0d\u5bf9\uff0c\u56e0\u4e3a\u8fd8\u6709\u76f8\u4ea4\u7684\uff0c\u4f46\u662f\u76f8\u4ea4\u7684\u6211\u4eec\u53ef\u4ee5\u4e0d\u53bb\u8003\u8651\u4ed6\uff0c\u5982\u679c\u8def\u5f84\u76f8\u4ea4\u610f\u5473\u7740\u8def\u5f84\u53ef\u66ff\u6362\uff0c\u66ff\u6362\u4e4b\u540e\u9006\u5e8f\u5bf9\u6570\u91cf\u7684\u5947\u5076\u6027\u53d8\u5316\uff0c\u5927\u767d\u8bdd\u6765\u8bb2\uff0c\u4fe9\u65b9\u6848\u62b5\u6d88\u4e86\u4e0d\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u76f8\u4ea4\u7684\u53ef\u4ee5\u76f4\u63a5\u4e0d\u8003\u8651\u4e86\u3002\n\n\u6240\u4ee5\u76f4\u63a5\u884c\u5217\u5f0f\u6c42\u548c\u5c31\u505a\u5b8c\u4e86\u3002",
        "postTime": 1679715531,
        "uid": 653218,
        "name": "kisara_qwq",
        "ccfLevel": 0,
        "title": "CF167E\u9898\u89e3"
    },
    {
        "content": "\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u6240\u6709\u6e90\u70b9\u4e0e\u6c47\u70b9\u7b5b\u51fa\u6765\uff0c\u7136\u540e\u4ece\u6bcf\u4e00\u4e2a\u6e90\u70b9dfs\u6c42\u51fa\u5b83\u5230\u5404\u6c47\u70b9\u7684\u8def\u5f84\u6570\uff0c\u9898\u76ee\u4e2d\u4fdd\u8bc1\u6e90\u70b9\u4e0e\u6c47\u70b9\u6570\u91cf\u76f8\u540c\uff0c\u6211\u4eec\u8bb0\u4e3a$cnt$\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a$cnt * cnt$\u7684\u77e9\u9635\u3002\n\n\u5148\u8003\u8651\u8def\u5f84\u4e0d\u76f8\u4ea4\u7684\u60c5\u51b5\uff08\u4f3c\u4e4e\u5927\u5bb6\u601d\u8def\u90fd\u662f\u8fd9\u6837\uff09\uff0c\u9898\u76ee\u6c42\u7684\u662f\u4e00\u4e2a\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u8bb0\u4e3a$\\tau(\\sigma)$\u3002\u90a3\u4e48\uff0c\u9898\u76ee\u7b49\u4ef7\u4e8e\u6c42\uff1a\n\n$$\n\\sum(-1)^{\\tau(\\sigma)}*\\prod{f_{~i~\\sigma_i}}\n$$\n\n\u5176\u4e2d\uff0c$f_{i~\\sigma_i}$\u8868\u793ai\u53f7\u6e90\u70b9\u8d70\u5230$\\sigma_i$\u53f7\u6c47\u70b9\u7684\u8def\u5f84\u6570\u3002\n\n\u7ed3\u5408\u4e0a\u6587\uff0c~~\u4e0d\u96be~~\u5f88\u96be\u60f3\u5230\u884c\u5217\u5f0f\u3002\u7136\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u77e9\u9635\u7684\u884c\u5217\u5f0f\u5c31\u662f\u7b54\u6848\u3002\n\n***\n\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u8def\u5f84\u76f8\u4ea4\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u7b54\u6848\u4e0d\u53d8\u3002\n\n![graph _1_.png](https://i.loli.net/2019/08/23/1XjfSGzKki9Ynqy.png)\n\n\u663e\u7136\uff0c$(1 \\to 4),(2 \\to 5)$\u8def\u5f84\u76f8\u4ea4\u4e86\n\n\u6211\u4eec\u8003\u8651\u4ea4\u6362$4,5$\u4f4d\u7f6e\n\n![graph.png](https://i.loli.net/2019/08/23/WK5MHdtu8pBLo7U.png)\n\n~~\u8fd8\u662f\u76f8\u4ea4\u7684~~\u3002\n\n\u8fd9\u867d\u7136\u4e0d\u80fd\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u7ecf\u8fc7\u4ea4\u6362\u540e\uff0c**\u6c47\u70b9\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u5947\u5076\u6027\u53d8\u4e86**\uff0c\u4e5f\u5c31\u662f\u77e9\u9635\u884c\u5217\u5f0f\u7684\u5176\u4e2d\u4e00\u9879\u53d8\u53f7\u3002\u540c\u65f6\uff0c\u8def\u5f84\u6570\u5374\u6ca1\u6709\u53d8\u3002\u6240\u4ee5\uff0c\u4e24\u79cd\u60c5\u51b5\u76f8\u4e92\u62b5\u6d88\u4e86\uff01\uff01\uff01\n\n\u6240\u4ee5\uff0c\u8def\u5f84\u76f8\u4ea4\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u76f4\u63a5\u7b97\u884c\u5217\u5f0f\u5373\u53ef\u3002\n\n***\n\u672c\u4ee3\u7801\u7531@Krain\u5927\u4f6c\u4fee\u6539\uff0c\u53ef\u80fd\u795e\u4f3c\u8bf7\u89c1\u8c05\u3002\n\n\u540c\u65f6\uff0c\u6c42\u77e9\u9635\u884c\u5217\u5f0f\u65f6\u6d88\u5143\u5fc5\u987b\u5728\u6574\u6570\u8303\u56f4\u5185\u8fd0\u7b97\uff0c\u9700\u8981\u7528\u5230\u8f97\u8f6c\u76f8\u9664\u7684\u9ad8\u65af\u6d88\u5143\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN = 600;\nint n , m , x , y , p , cnt;\nint Ind[ MAXN + 5 ] , Outd[ MAXN + 5 ];\nint s[ MAXN + 5 ][ MAXN + 5 ];\nint tmp[ MAXN + 5 ] , f[ MAXN + 5 ][ MAXN + 5 ];\nvector< int > Graph[ MAXN + 5 ];\nvector< int > S , T;\n\nint Mo( long long x ) {\n\treturn ( x % p + p ) % p;\n}\nint Gauss( ) {\n\tint Sign = 1;\n    for( int i = 1 ; i <= cnt ; i ++ ) {\n    \tfor( int j = i + 1 ; j <= cnt ; j ++ ) {\n    \t\tint A = f[ i ][ i ] , B = f[ j ][ i ];\n    \t\twhile( B ) {\n    \t\t\tint t = A / B; A %= B; swap( A , B );\n    \t\t\tfor( int k = i ; k <= n ; k ++ )\n    \t\t\t\tf[ i ][ k ] = Mo( 1ll * f[ i ][ k ] - 1ll * t * f[ j ][ k ] );\n    \t\t\t\n    \t\t\tswap( f[ i ] , f[ j ] );\n    \t\t\tSign *= -1;\n\t\t\t}\n\t\t}\n    \tif( !f[ i ][ i ] ) return 0;\n    }\n    int Ans = 1;\n    for( int i = 1 ; i <= cnt ; i ++ )\n        Ans = ( 1ll * Ans * f[ i ][ i ] ) % p;\n    return Mo( 1ll * Ans * Sign );\n}\n\nbool vis[ MAXN + 5 ];\nvoid dfs( int u ) {\n\tvis[ u ] = 1;\n    if( !Outd[ u ] ) s[ u ][ u ] = 1;\n    for( int i = 0 ; i < Graph[ u ].size( ) ; i ++ ) {\n        int v = Graph[ u ][ i ];\n        if( !vis[ v ] ) dfs( v );\n        for( int j = 0 ; j < T.size() ; j ++ )\n        \ts[ u ][ T[ j ] ] = Mo( 1ll * s[ u ][ T[ j ] ] + s[ v ][ T[ j ] ] );\n    } \n}\nint main( ) {\n    scanf(\"%d %d %d\",&n,&m,&p);\n    for( int i = 1 ; i <= m ; i ++ ) {\n        scanf(\"%d %d\",&x,&y);\n        Graph[ x ].push_back( y );\n        Outd[ x ] ++ , Ind[ y ] ++;\n    }\n    for( int i = 1 ; i <= n ; i ++ ) {\n    \tif( !Ind[ i ] )\n    \t\tS.push_back( i );\n    \tif( !Outd[ i ] )\n    \t\tT.push_back( i );\n\t}\n    for( int i = 1 ; i <= n ; i ++ )\n        if( !Ind[ i ] ) dfs( i );\n    \n    for( int i = 0 ; i < S.size() ; i ++ )\n    \tfor( int j = 0 ; j < T.size() ; j ++ )\n    \t\tf[ i + 1 ][ j + 1 ] = s[ S[ i ] ][ T[ j ] ];\n    cnt = S.size();\n    printf(\"%d\",Gauss( ));\n    return 0;\n}\n```\n",
        "postTime": 1566548313,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF167E \u3010Wizards and Bets\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/CF167E).\n# \u9898\u89e3\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u76f8\u4fe1\u6ca1\u4eba\u80fd\u770b\u61c2\u9b3c\u755c\u7ffb\u8bd1, \u5728\u6b64\u63cf\u8ff0\u7b80\u8981\u63d0\u8bae:  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u8fdc\u70b9\u4e0e\u6c47\u70b9\u7684\u5339\u914d, \u6211\u4eec\u5c06\u5176\u770b\u505a\u4e8c\u5143\u7ec4$(a_i,b_i)$, \u4ee5$a$\u5347\u5e8f\u6392\u5217\u540e, $A$\u5c06\u83b7\u5f97\u6536\u76ca$(-1)^{\\tau_\\sigma}$, \u5176\u4e2d$\\sigma$\u662f$b$\u6b64\u65f6\u503c\u7684\u6392\u5217, $\\tau$\u662f\u5e38\u89c1\u7684\u9006\u5e8f\u5bf9\u7edf\u8ba1\u8bb0\u53f7. \u5f62\u8c61\u6765\u8bf4:  \n![](https://i.loli.net/2019/08/21/ZTp7eiKwSCR3ytb.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( $\\tau$\u4ee3\u8868\u53f3\u4fa7\u6570\u5217\u7684\u9006\u5e8f\u5bf9\u6570 ).  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u8fd9\u5982\u6b64\u719f\u6089\u7684\u5f0f\u5b50, \u4f60\u60f3\u5230[\u884c\u5217\u5f0f](https://baike.baidu.com/item/%E8%A1%8C%E5%88%97%E5%BC%8F/2010180?fr=aladdin)\u4e86\u5417? ( \u6211\u6ca1\u6709 ). \u8bbe$A$\u662f\u4e00\u4e2a$n\\times n$\u7684\u77e9\u9635, \u5219:  \n![3.png](https://i.loli.net/2019/08/21/2e3iXHBETplPQxd.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u4e5f\u63d0\u793a\u4e86\u6211\u4eec\u4f7f\u7528\u884c\u5217\u5f0f\u6c42\u89e3. \u9996\u5148\u8003\u5bdf\u65e0\u8def\u5f84\u76f8\u4ea4\u9650\u5236\u7684\u95ee\u9898 ( \u597d\u50cf\u601d\u8def\u90fd\u957f\u8fd9\u6837\u5509... ), \u8bbe$f_{ij}$\u8868\u793a\u539f\u70b9$i$\u8d70\u5230\u6c47\u70b9$j$\u7684\u65b9\u6848\u6570, \u8bbe\u539f\u70b9\u6709$m$\u4e2a, \u6211\u4eec\u5bf9$F$\u6c42\u884c\u5217\u5f0f:  \n![4.png](https://i.loli.net/2019/08/21/RxNYakS1wnm3HOd.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u628a\u62bd\u8c61\u7684\u7b26\u53f7\u653e\u5728\u9898\u9762\u4e0a\u7406\u89e3:  \n- \u679a\u4e3e\u7684\u6392\u5217$\\sigma$: \u5982\u4e0a, \u4e8c\u5143\u7ec4\u6392\u5e8f\u540e\u7684$b$\u6570\u5217.  \n\n- \u7cfb\u6570$(-1)^{\\tau_{\\sigma}}$: $A$\u7684\u6536\u76ca.  \n\n- \u7d2f\u4e58$\\prod_{i=1}^mf_{i\\sigma_i}$: \u4e58\u6cd5\u539f\u7406, \u6bcf\u4e2a\u539f\u70b9$i$\u5230\u6c47\u70b9$\\sigma_i$\u65b9\u6848\u6570\u4e4b\u79ef.  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$OMG!$\u884c\u5217\u5f0f\u7684\u503c\u4e0d\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u5417?  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b49\u7b49, \u6211\u4eec\u8fd8\u9700\u8981\u56de\u5f52\u5230\u672c\u9898\u5bf9\u8fb9\u76f8\u4ea4\u7684\u9650\u5236, \u53d1\u73b0\u7b54\u6848\u7adf\u7136\u6ca1\u53d8! \u8fd9\u662f\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4e00\u79cd\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\u7684\u65b9\u6848$x$, \u9009\u62e9\u8fd9\u5bf9\u8def\u5f84\u4e0a\u76f8\u4ea4\u7684\u6700\u540e\u4e00\u4e2a\u70b9, \u5c06\u8fd9\u4e2a\u70b9\u4e4b\u540e\u7684\u8def\u5f84\u53cd\u8f6c, \u4e00\u5b9a\u4f1a\u6620\u5c04\u5230\u53e6\u4e00\u79cd\u8def\u5f84\u76f8\u4ea4\u7684\u65b9\u6848$y$, \u800c\u7531\u4e8e\u9006\u5e8f\u5bf9\u7684\u6539\u53d8, \u8fd9\u4e24\u79cd\u975e\u6cd5\u72b6\u6001\u7684\u6536\u76ca\u4f1a\u76f8\u4e92\u62b5\u6d88\u6389. \u5f53\u7136, \u5e0c\u671b\u76f4\u89c2\u7684\u753b\u9762\u66f4\u80fd\"\u4e00\u56fe\u60ca\u4eba\":  \n![2.png](https://i.loli.net/2019/08/21/1qvOufjiQ2xSL7U.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u56fe\u4e2d\u4ea4\u53c9\u70b9\u4ee3\u8868\u8def\u5f84\u7684\u4ea4\u70b9, \u800c\u84dd\u8272\u5339\u914d\u65b9\u6848\u4e0e\u7ea2\u8272\u5339\u914d\u65b9\u6848\u7684\u552f\u4e00\u5dee\u522b\u662f\u5728\u8ba1\u7b97\u6536\u76ca\u65f6, $b_x$\u4e0e$b_y$\u4ea4\u6362\u4e86\u4f4d\u7f6e. \u663e\u7136, \u8fd9\u4f1a\u6539\u53d8\u9006\u5e8f\u5bf9\u7684\u5947\u5076\u6027, \u6240\u4ee5, \u8fd9\u4e24\u79cd\u65b9\u6848\u76f8\u4e92\u62b5\u6d88\u4e86!  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5230\u6b64, \u6211\u4eec\u53ef\u4ee5\u7528$DFS$\u6216$Floyd$\u6c42\u51fa$F$\u77e9\u9635, \u518d\u4f7f\u7528[$Gauss$\u6d88\u5143](https://baike.baidu.com/item/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83%E6%B3%95)\u5c31\u53ef\u4ee5\u54d2! ( $ps$. \u518d\u6a21\u610f\u4e49\u4e0b\u7684\u884c\u5217\u5f0f\u4e5f\u80fd\u76f4\u63a5\u6d88\u5143, \u4e0d\u9700\u8981\u6c42\u9006\u5143\u54df! )\n```cpp\n#include <cstdio>\n#include <vector>\n#include <assert.h>\n\n#define Int register int\n\nusing namespace std;\n\ntypedef long long int LL;\n\nconst int MAXN = 600, MAXM = 100000;\nbool Vis[MAXN + 5] = {};\nint n, m, p, Cnte, Head[MAXN + 5] = {};\nint f[MAXN + 5][MAXN + 5] = {}, ind[MAXN + 5] = {}, outd[MAXN + 5] = {};\nLL det[MAXN + 5][MAXN + 5] = {};\nvector<int> Sink, Source;\n\nstruct Edge {\n\tint To, _nxt;\n} Graph[MAXM + 5] = {};\n\ninline int Fix ( const LL x ) {\n\treturn ( x % p + p ) % p;\n}\n\ninline void Link ( const int From, const int To ) {\n\tGraph[++ Cnte] = { To, Head[From] };\n\tHead[From] = Cnte, ++ ind[To], ++ outd[From];\n}\n\ninline void DFS ( const int u ) {\n\tVis[u] = true;\n\tif ( ! outd[u] ) f[u][u] = 1;\n\tfor ( Int i = Head[u], v; i; i = Graph[i]._nxt ) {\n\t\tif ( ! Vis[v = Graph[i].To] ) DFS ( v );\n\t\tfor ( unsigned int j = 0; j ^ Sink.size (); ++ j ) {\n\t\t\tf[u][Sink[j]] = Fix ( 1LL * f[u][Sink[j]] + f[v][Sink[j]] );\n\t\t}\n\t}\n}\n\ninline void Calculate ( const int n ) {\n\tLL Ans = 1, f = 1;\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tfor ( Int j = i + 1; j <= n; ++ j ) {\n\t\t\tint x = i, y = j;\n\t\t\twhile ( det[y][i] ) {\n\t\t\t\tLL t = det[x][i] / det[y][i];\n\t\t\t\tfor ( Int k = i; k <= n; ++ k ) {\n\t\t\t\t\tdet[x][k] = Fix ( det[x][k] - 1LL * det[y][k] * t % p );\n\t\t\t\t}\n\t\t\t\tswap ( x, y );\n\t\t\t}\n\t\t\tif ( x ^ i ) {\n\t\t\t\tswap ( det[i], det[x] );\n\t\t\t\tf = -f;\n\t\t\t}\n\t\t}\n\t\tif ( ! det[i][i] ) {\n\t\t\tputs ( \"0\" );\n\t\t\treturn ;\n\t\t} else {\n\t\t\tAns = 1LL * Ans * det[i][i] % p;\n\t\t}\n\t}\n\tAns = Fix ( Ans * f );\n\tprintf ( \"%lld\\n\", Ans );\n}\n\ninline void Work () {\n\tscanf ( \"%d %d %d\", &n, &m, &p );\n\tfor ( Int i = 1, s, t; i <= m; ++ i ) {\n\t\tscanf ( \"%d %d\", &s, &t );\n\t\tLink ( s, t );\n\t}\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tif ( ! ind[i] ) {\n\t\t\tSource.push_back ( i );\n\t\t}\n\t\tif ( ! outd[i] ) {\n\t\t\tSink.push_back ( i );\n\t\t}\n\t}\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tif ( ! ind[i] ) {\n\t\t\tDFS ( i );\n\t\t}\n\t}\n\tassert ( Source.size () == Sink.size () );\n\tfor ( unsigned int i = 0; i ^ Source.size (); ++ i ) {\n\t\tfor ( unsigned int j = 0; j ^ Sink.size (); ++ j ) {\n\t\t\tdet[i + 1][j + 1] = f[Source[i]][Sink[j]];\n\t\t}\n\t}\n\tCalculate ( Sink.size () );\n}\n\nint main () {\n\tWork ();\n\treturn 0;\n}\n```",
        "postTime": 1566388402,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "Aug. 20th, 2019---[CF167E]Wizards and Bets\u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/CF167E)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u7ffb\u8bd1\u9996\u5148\u4f1a\u770b\u5230\u8fd9\u6837\u4e00\u53e5\u975e\u5e38\u62d7\u53e3\u7684\u8bdd\uff1a  \n\n> \u628a\u6e90\u70b9\u6309\u6807\u53f71\u5230n\u6392\u5e8f\u540e\uff0c\u5f97\u5230\u7684\u5bf9\u5e94\u6c47\u70b9\u5e8f\u5217\u7684\u9006\u5e8f\u6570\u5bf9\u7684\u4e2a\u6570\u662f\u5947\u6570\uff0c\u90a3\u4e48A\u7ed9B\u4e00\u5757\u94b1\uff0c\u5426\u5219B\u7ed9A\u4e00\u5757\u94b1\u3002 \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u628a\u5b83\u7ffb\u8bd1\u6210\u6570\u5b66\u7684\u8bed\u8a00\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e8c\u5143\u7ec4$(a,b)$\u7684\u6392\u5217\uff0c\u4ee5$a$\u4e3a\u5173\u952e\u5b57\u6392\u5217\u540e\uff0c$b$\u5bf9\u5e94\u7684\u6392\u5217$p$\u7684\u9006\u5e8f\u5bf9\u6570$t(p)$\uff0c\u5219$A$\u7684\u6536\u76ca\u5c31\u662f$(-1)^{t(p)}$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u884c\u5217\u5f0f\uff01  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e00\u4e2a$n\\times n$\u7684\u77e9\u9635\u7684\u884c\u5217\u5f0f\u5c31\u662f\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![\u884c\u5217\u5f0f\u793a\u4f8b.png](https://i.loli.net/2019/08/21/jL4PYJHZEw5duCA.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8e\u662f\u6211\u4eec\u5c31\u5f88\u81ea\u7136\u5730\u60f3\u5230\u4e86\u6784\u9020\u4e00\u4e2a\u77e9\u9635\u540e\u6c42\u5b83\u7684\u884c\u5217\u5f0f\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u8003\u8651\u8def\u5f84\u4e0d\u76f8\u4ea4\u7684\u60c5\u51b5\uff0c\u6b64\u65f6$a_{ij}$\u5c31\u662f\u4ece\u7b2c$i$\u4e2a\u6e90\u70b9\u8d70\u5230\u7b2c$j$\u4e2a\u6c47\u70b9\u7684\u65b9\u6848\u603b\u6570\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u6216\u8005$DP$\uff0c\u6216\u8005$Floyed$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u8003\u8651\u8def\u5f84\u76f8\u4ea4\u7684\u60c5\u51b5\u3002\u5982\u679c\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\uff0c\u6bd4\u5982\uff0c$u$\u53f7\u6e90\u70b9\u5230$v$\u53f7\u6c47\u70b9\u7684\u8def\u5f84\u548c$p$\u53f7\u6e90\u70b9\u5230$q$\u53f7\u6c47\u70b9\u7684\u8def\u5f84\u76f8\u4ea4\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u627e\u5230\u4e86\u4e24\u6761\u8def\u5f84\u7684\u6700\u540e\u4e00\u4e2a\u4ea4\u70b9$x$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![show1.png](https://i.loli.net/2019/08/21/RGj7MtSXcQTwYio.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u6211\u4eec\u7ffb\u8f6c\u8def\u5f84$(x,v)$\u548c$(x,q)$\uff0c\u8fd9\u6837\u8def\u5f84\u5c31\u53d8\u6210\u4e86$(u,q)$\u548c$(p,v)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![show2.png](https://i.loli.net/2019/08/21/jd5HWh4yfai612r.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u73b0\u5728\u4e24\u6761\u8def\u5f84\u8fd8\u662f\u76f8\u4ea4\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u8fd8\u662f\u4e0d\u5408\u6cd5\u3002**\u4e0d\u8fc7**\uff0c\u7531\u4e8e\u7ec8\u70b9\u7ffb\u8f6c\uff0c\u6240\u4ee5\u6b64\u65f6\u8fd9\u4e2a\u8def\u5f84\u5bf9\u5e94\u7684\u884c\u5217\u5f0f\u7cfb\u6570\u5c31\u8981\u4e58\u4e0a\u4e00\u4e2a$-1$\uff0c\u5728\u6700\u540e\u7684\u8ba1\u7b97\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u4e0d\u5408\u6cd5\u65b9\u6848\u5c31\u4f1a**\u4e92\u76f8\u62b5\u6d88**\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f8\u4ea4\u8def\u5f84\u538b\u6839\u5c31\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848......  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6240\u4ee5\u6c42\u51fa\u70b9\u5230\u70b9\u7684\u65b9\u6848\u4e4b\u540e\u653e\u5230\u77e9\u9635\u91cc\u9762\u76f4\u63a5\u6c42\u5b83\u7684\u884c\u5217\u5f0f\u5c31\u53ef\u4ee5\u4e86\u3002\u9ad8\u65af\u6d88\u5143$O(n^3)$\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\ntypedef long long LL;\n\nconst int MAXN = 605, MAXM = 1e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n    x = 0;char s = getchar();int f = 1;\n    while( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n    while( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n    x *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n    if( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n    if( 9 < x ){ write( x / 10 ); }\n    putchar( x % 10 + '0' );\n}\n\nint p;\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXM];\n\nstruct matrix\n{\n\tint mat[MAXN][MAXN];\n\tint n, m;\n\tmatrix()\n\t{\n\t\tmemset( mat, 0, sizeof( mat ) );\n\t\tn = m = 0;\n\t}\n\tint* operator [] ( const int indx )\n\t{\n\t\treturn mat[indx];\n\t}\n}dp;\n\nint f[MAXN][MAXN];\nint sta[MAXN], tar[MAXN];\nint into[MAXN], outo[MAXN];\nint head[MAXN];\nint N, M, cnt1, cnt2, cnt;\nbool visited[MAXN] = {};\n\nvoid addEdge( const int from, const int to )\n{\n\tcnt ++;\n\tGraph[cnt].to = to;\n\tGraph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nint qkpow( int base, int indx )\n{\n\tint res = 1;\n\twhile( indx )\n\t{\n\t\tif( indx & 1 )\n\t\t{\n\t\t\tres = 1ll * res * base % p;\n\t\t}\n\t\tbase = 1ll * base * base % p;\n\t\tindx >>= 1;\n\t}\n\treturn res % p;\n}\n\nint inv( const int a )\n{\n\treturn qkpow( a, p - 2 );\n}\n\nint fix( const int a )\n{\n\treturn ( 1ll * a % p + p ) % p;\n}\n\nint det()\n{\n\tint n = dp.n;\n\tint opt = 1, indx, tmp, coe = 1, inver;\n\tfor( int i = 1 ; i <= n && opt <= n ; i ++, opt ++ )\n\t{\n\t\tindx = -1;\n\t\tfor( int j = i ; j <= n ; j ++ )\n\t\t{\n\t\t\tif( dp[j][opt] )\n\t\t\t{\n\t\t\t\tindx = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif( indx == -1 )\n\t\t{\n\t\t\ti --;\n\t\t\tcontinue;\n\t\t}\n\t\tif( indx ^ i ) coe = -coe;\n\t\tstd :: swap( dp.mat[indx], dp.mat[i] );\n\t\tinver = inv( dp[i][opt] );\n\t\tfor( int j = i + 1 ; j <= n ; j ++ )\n\t\t{\n\t\t\ttmp = p - 1ll * dp[j][opt] * inver % p;\n\t\t\tfor( int k = 1 ; k <= n ; k ++ )\n\t\t\t{\n\t\t\t\tdp[j][k] = ( dp[j][k] + 1ll * dp[i][k] * tmp % p ) % p;\n\t\t\t}\n\t\t}\n\t}\n\tint res = 1;\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t{\n\t\tres = 1ll * res * dp[i][i] % p;\n\t}\n\tif( coe < 0 ) res = -res;\n\treturn ( res % p + p ) % p;\n}\n\nvoid dfs( const int u )\n{\n\tvisited[u] = true;\n\tif( ! outo[u] )\n\t{\n\t\tf[u][u] = 1;\n\t\treturn;\n\t}\n\tint v;\n\tfor( int i = head[u] ; i ; i = Graph[i].nxt )\n\t{\n\t\tv = Graph[i].to;\n\t\tif( ! visited[v] ) dfs( v );\n\t\tfor( int j = 1 ; j <= cnt2 ; j ++ )\n\t\t{\n\t\t\tf[u][tar[j]] = ( f[u][tar[j]] + f[v][tar[j]] ) % p;\n\t\t}\n\t}\n}\n\nsigned main()\n{\n\tint fr, to;\n\tread( N ), read( M ), read( p );\n\tfor( int i = 1 ; i <= M ; i ++ )\n\t{\n\t\tread( fr ), read( to );\n\t\taddEdge( fr, to );\n\t\touto[fr] ++, into[to] ++;\n\t}\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tif( ! into[i] ) sta[++cnt1] = i;\n\t\tif( ! outo[i] ) tar[++cnt2] = i;\n\t}\n\tfor( int i = 1 ; i <= cnt1 ; i ++ ) \n\t\tdfs( sta[i] );\n\tdp.n = dp.m = cnt1;\n\tfor( int i = 1 ; i <= cnt1 ; i ++ )\n\t{\n\t\tfor( int j = 1 ; j <= cnt1 ; j ++ )\n\t\t{\n\t\t\tdp[i][j] = f[sta[i]][tar[j]];\n\t\t}\n\t}\n\twrite( det() ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1566386225,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF167E]Wizards and Bets"
    },
    {
        "content": "## \u4e00\u3001\u9898\u76ee\n\n**\u9898\u76ee\uff1a**\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4ubHVvZ3Uub3JnL3VwbG9hZC9waWMvNzM4NTEucG5n) \n\n## \u4e8c\u3001\u89e3\u6cd5\n\n\u5148\u8003\u8651\u4e0d\u76f8\u4ea4\u8def\u5f84\u7684\u9650\u5236\uff0c\u4ee4$a[i][j]$\u4e3a\u4ece\u7b2c$i$\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\u8d70\u5230\u7b2c$j$\u51fa\u5ea6\u4e3a0\u7684\u70b9\u7684\u65b9\u6848\u6570\uff0c\u7531\u4e8e\u884c\u5217\u5f0f\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e2a\u77e9\u9635\u7684\u77e9\u9635\u7684\u884c\u5217\u5f0f\u7684\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n\u518d\u8003\u8651\u8def\u5f84\u4e0d\u76f8\u4ea4\u7684\u60c5\u5f62\uff0c\u53d1\u73b0\u7b54\u6848\u4e0d\u53d8\uff0c\u8fd9\u662f\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4e00\u79cd\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\u7684\u65b9\u6848$x$\uff0c\u9009\u62e9\u8fd9\u5bf9\u8def\u5f84\u4e0a\u76f8\u4ea4\u7684\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e2a\u70b9\u4e4b\u540e\u7684\u8def\u5f84\u53cd\u8f6c\uff0c\u4e00\u5b9a\u4f1a\u6620\u5c04\u5230\u53e6\u4e00\u79cd\u8def\u5f84\u76f8\u4ea4\u7684\u65b9\u6848$y$\u3002\n\n\u600e\u4e48\u66f4\u6e05\u695a\u7684\u7406\u89e3\u5b83\u5462\uff1f\u5728\u884c\u5217\u5f0f\u751f\u6210\u7684\u6392\u5217\u4e2d\uff0c\u6211\u4eec\u4ea4\u6362$bx$\u548c$by$\uff0c\u7531\u4e8e\u6c42\u548c\u4e2d\u7684\u7d2f\u4e58\u503c\u4e0d\u4f1a\u6539\u53d8\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4ea4\u6362\u540e\u9006\u5e8f\u5bf9\u6570\u7684\u53d8\u5316\uff0c\u7531\u4e8e\u4f1a\u751f\u6210\u4e24\u4e2a$bx\uff0cby$\u4f4d\u7f6e\u76f8\u53cd\u7684\u5e8f\u5217\uff0c\u6240\u4ee5\u4ea4\u6362\u540e\u6b63\u8d1f\u8fd8\u662f\u4f1a\u62b5\u6d88\uff0c\u8bf4\u660e\u4e86\u53cd\u8f6c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u6211\u4eec\u5148\u8dd1\u4e00\u904ddfs\uff0c\u518d\u628a\u77e9\u9635\u6d88\u6210\u4e00\u4e2a\u4e0a\u4e09\u89d2\u884c\u5217\u5f0f\uff0c\u5bf9\u89d2\u7ebf\u6c42\u4e58\u79ef\u5373\u53ef\uff0c\u6ce8\u610f\u9ad8\u65af\u6d88\u5143\u7684\u5199\u6cd5\u4f1a\u4e0e\u7ea6\u65e6\u9ad8\u65af\u6d88\u5143\u6cd5\u6709\u4e9b\u533a\u522b\u3002\uff08\u672c\u7bc7\u9898\u89e3\u6ca1\u4ec0\u4e48\u516c\u5f0f\uff0c\u60f3\u8981\u66f4\u7406\u89e3\u8bf7\u53c2\u7167[WXK](https://krain.blog.luogu.org/solution-cf167e)\u5927\u4f6c\u7684\u535a\u5ba2\uff09\u3002\n\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#define LL long long\nusing namespace std;\nconst LL MAXN = 100005;\nLL read()\n{\n\tLL x=0,flag=1;char c;\n\twhile((c=getchar())<'0' || c>'9') if(c=='-') flag=-1;\n\twhile(c>='0' && c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*flag;\n}\nLL n,m,mod,tot,f[605],in[605],out[605];\nLL a[605][605],t[605][605];\nbool vis[605];\nvector<LL> fr,to;\nstruct edge\n{\n\tLL v,next;\n}e[MAXN];\nvoid dfs(LL u)\n{\n\tvis[u]=1;\n\tif(!out[u]) t[u][u]=1;\n\tfor(LL i=f[u];i;i=e[i].next)\n\t{\n\t\tLL v=e[i].v;\n\t\tif(!vis[v]) dfs(v);\n\t\tfor(LL i=0;i<to.size();i++)\n\t\t\tt[u][to[i]]=(t[u][to[i]]+t[v][to[i]])%mod;\n\t}\n}\nLL qkpow(LL a,LL b)\n{\n\tLL res=1;\n\twhile(b>0)\n\t{\n\t\tif(b&1) res=(res*a)%mod;\n\t\ta=(a*a)%mod;\n\t\tb>>=1;\n\t}\n\treturn res;\n}\nvoid gauss(LL n)\n{\n\tLL mark=1;\n\tfor(LL i=1;i<=n;i++)\n\t{\n\t\tLL r=i;\n\t\tfor(;r<=n;r++)\n\t\t\tif(a[r][i])\n\t\t\t\tbreak;\n\t\tif(i^r) mark=-mark;\n\t\tswap(a[r],a[i]);\n\t\tfor(LL j=i+1;j<=n;j++)\n\t\t{\n\t\t\tLL tmp=a[j][i]*qkpow(a[i][i],mod-2)%mod;\n\t\t\tfor(LL k=i;k<=n;k++)\n\t\t\t\ta[j][k]=(a[j][k]-a[i][k]*tmp%mod+mod)%mod;\n\t\t}\n\t}\n\tLL ans=mark;\n\tfor(LL i=1;i<=n;i++)\n\t\tans=ans*a[i][i]%mod;\n\tprintf(\"%lld\\n\",(ans%mod+mod)%mod);\n}\nint main()\n{\n\tn=read();m=read();mod=read();\n\tfor(LL i=1;i<=m;i++)\n\t{\n\t\tLL u=read(),v=read();\n\t\te[++tot]=edge{v,f[u]},f[u]=tot;\n\t\tin[v]++;out[u]++;\n\t}\n\tfor(LL i=1;i<=n;i++)\n\t{\n\t\tif(!in[i]) fr.push_back(i);\n\t\tif(!out[i]) to.push_back(i);\n\t}\n\tfor(LL i=1;i<=n;i++)\n\t\tif(!in[i])\n\t\t\tdfs(i);\n\tfor(LL i=0;i<fr.size();i++)\n\t\tfor(LL j=0;j<to.size();j++)\n\t\t\ta[i+1][j+1]=t[fr[i]][to[j]];\n\tgauss(fr.size());\n}\n```\n\n",
        "postTime": 1566393271,
        "uid": 128239,
        "name": "C20203030",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF167E \u3010Wizards and Bets\u3011"
    }
]