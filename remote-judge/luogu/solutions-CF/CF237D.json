[
    {
        "content": "## \u9898\u89e3:\n\u9996\u5148 ,\u5148\u770b\u4e00\u4e0b\u9898\u76ee,\n\n \u4f1a\u4e0d\u4f1a\u89c9\u5f97$\\huge\\text{\u7279\u522b\u60f3......AFO???}$\n# $\\color{blue}\\text{But:\u6ca1\u5173\u7cfb}$\n\u9898\u610f$\\huge\\color{red}\\text{\u867d\u7136\u5341\u5206\u590d\u6742}$\uff0c\u4f46\u8bfb\u660e\u767d\u4e86\u8fd9\u4e2a\u9898\u5c31$\\color{CornFlowerblue}\\text{\u5341\u5206\u7b80(hao)\u5355(xiao)}$\uff0c\u9898\u76ee\u672c\u8d28\u4e0a\u5c31\u662f**\u6784\u9020\u4e00\u68f5\u65b0\u7684\u6811**\uff0c\u4f7f\u5f97\u6811\u4e0a\u7684\u65b0\u7ed3\u70b9\u662f\u4e4b\u524d\u6811\u4e0a\u7684\u67d0\u6761\u8fb9\uff0c\u6743\u503c\u662f\u65b0\u70b9\u4e2d\u539f\u70b9\u91cc\u7f16\u53f7\u6700\u5927\u7684\u90a3\u4e2a\u7684\u7f16\u53f7\uff0c\u5e76\u4e14\u6784\u5efa\u51fa\u7684\u6811\u6743\u503c\u6700\u5c0f\n\n\u7531\u4e8e\u8981\u6c42**\u6743\u503c\u6700\u5c0f**\uff0c\u90a3\u4e48\u6211\u4eec\u5c3d\u91cf\u8ba9\u65b0\u70b9\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u7f16\u53f7\u6570\u66f4\u5c0f\uff0c\u8003\u8651\u6bcf\u4e24\u4e2a\u70b9\u7ec4\u6210\u4e00\u4e2a\u65b0\u7ed3\u70b9\uff0c**\u8fd9\u6837\u4e00\u6765\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6784\u5efa\u51fa\u7684\u65b0\u6811\u662f\u6743\u503c\u6700\u5c0f\u7684**\n\n\u8003\u8651\u65b0\u6811\u7684\u70b9\uff0c\u7531\u4e8e\u539f\u6765\u7684\u6811\u6709 $n-1$ \u6761\u8fb9\uff0c\u90a3\u4e48\u65b0\u6811\u5c31\u6709 $n-1$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u662f\u539f\u6811\u7684\u4e00\u6761\u8fb9\uff0c\u6bcf\u8f93\u5165\u4e00\u6761\u8fb9\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\u5bf9\u5e94\u7684\u70b9\u7684\u7f16\u53f7\n\n\u518d\u8003\u8651\u65b0\u6811\u7684\u8fb9\uff0c\u5728\u8f93\u5165\u7684\u65f6\u5019\uff0c\u5c06\u539f\u6765\u7684\u8fb9\u7684\u70b9\u4e0e\u5f53\u524d\u70b9\u7684\u7f16\u53f7$i$\u5206\u522b$\\color{red}\\text{\u6784\u5efa\u4e00\u6761\u65b0\u8fb9}$\u5373\u53ef\uff0c\u6700\u540e\u53ea\u9700\u8981\u5c06\u76f8\u90bb\u4e24\u8fb9\u8f93\u51fa\u5373\u53ef\n### \u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nconst int N = 500000+5;\nusing namespace std;\nvector<int> G[N];\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    printf(\"%d\\n\",n-1);\n    for(int i=1;i<=n-1;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        printf(\"2 %d %d\\n\",x,y);\n        x--;\n        y--;\n        G[x].push_back(i);\n        G[y].push_back(i);\n    }\n    for(int i=0;i<=n-1;i++)\n        for(int j=0;j<G[i].size()-1;j++)\n            printf(\"%d %d\\n\",G[i][j],G[i][j+1]);\n    return 0;\n}\n```\n\u6240\u4ee5\u8bf4\u8fd9\u9053\u9898~~\u7279\u522b\u7684\u6c34~~\n\n\u795d\u5927\u5bb6$\\begin{matrix}\\underbrace{1+2+\\cdots+\\infty}\\\\rp++\\end{matrix}$ ",
        "postTime": 1574141299,
        "uid": 126633,
        "name": "liyichun001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF237D \u3010T-decomposition\u3011"
    }
]