[
    {
        "content": "## \u9898\u610f\n\n$n$ \u884c $m$ \u5217\u7684\u7f51\u683c\u4e2d\u6709 $k$ \u4e2a\u70b9\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u4ece\u4e00\u4e2a\u70b9\u82b1\u8d39 $0$ \u5757\u94b1\u5230\u8fbe\u53e6\u4e00\u4e2a\u4e0e\u5b83\u56db\u8fde\u901a\u7684\u70b9\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u8fd8\u53ef\u4ee5\u82b1\u8d39 $1$ \u5757\u94b1\u4ece $(x_1,y_1)$ \u5230\u8fbe $(x_2,y_2)$\uff08\u9700\u6ee1\u8db3 $|x_1-x_2| \\le 1$ **\u6216** $|y_1-y_2| \\le 1$\uff09\u3002\u6c42 $(1,1)$ \u5230 $(n,m)$ \u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n## \u601d\u8def\n\n\u5bf9\u4e8e\u7f51\u683c\u4e2d\u7684 $n$ \u4e2a\u884c\uff0c$m$ \u4e2a\u5217\u548c $k$ \u4e2a\u70b9\u5728\u65b0\u56fe\u4e0a\u5efa\u7acb\u4e00\u4e9b\u4e00\u4e00\u5bf9\u5e94\u7684\u865a\u70b9\u3002\n\n\u90a3\u4e48\u4e0d\u96be\u60f3\u5230\u5efa\u56fe\u65b9\u5f0f\uff1a\u7b2c $i$ \u4e2a\u70b9\u5411\u7b2c $r$ \u884c\uff08$|x_i-r| \\le 1$\uff09\u548c\u7b2c $c$ \u5217\uff08$|y_i-c| \\le 1$\uff09\u5206\u522b\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u53cd\u8fc7\u6765\u7b2c $r$ \u884c\u548c\u7b2c $c$ \u5217\u5411\u7b2c $i$ \u4e2a\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\uff08\u56e0\u4e3a\u70b9\u5207\u6362\u5230\u884c/\u5217\u7684\u9700\u8981\u82b1\u8d39 $1$\uff0c\u800c\u4ece\u884c/\u5217\u5207\u6362\u5230\u5177\u4f53\u7684\u70b9\u4e0d\u9700\u8981\u82b1\u8d39\uff09\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u518d\u5411\u4e0e\u81ea\u5df1\u56db\u8fde\u901a\u7684\u53e6\u5916\u7684\u70b9\u5206\u522b\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u3002\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u7531\u4e8e\u56fe\u4e0a\u7684\u8fb9\u6743\u5168\u90fd\u4e3a $0/1$\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528 01bfs \u6c42\u6700\u77ed\u8def\u3002\n\n## \u4ee3\u7801\n\n[code](https://pastebin.ubuntu.com/p/PchkF6yBBv/)",
        "postTime": 1642150598,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "CF821D \u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\uff0c\u8fd9\u9053\u9898\u4e0d\u7528long long\u4e5f\u80fdAC\u3002\n\n------------\n\n\u9898\u610f\u662f\u7ed9\u4f60\u4e00\u4e2a\u77e9\u9635\uff0c\u6709\u4e00\u4e9b\u683c\u5b50\u88ab\u70b9\u4eae\u6709\u4e00\u4e9b\u6ca1\u6709\uff0c\u6bcf\u4e00\u6b21\u53ea\u80fd\u5728\u88ab\u70b9\u4eae\u7684\u683c\u5b50\u4e0a\u9762\u8d70\u3002\n\n\u7136\u540e\u4f60\u6bcf\u4e00\u6b21\u90fd\u53ef\u4ee5\u9009\u62e9\u70b9\u4eae\u4e00\u884c\u6216\u4e00\u6392\uff08\u975e\u6c38\u4e45\uff09\uff0c\u73b0\u5728\u95ee\u4f60\u6700\u5c11\u70b9\u591a\u5c11\u6b21\u53ef\u4ee5\u8d70\u5230\u7ec8\u70b9\uff1f\n\n------------\n\n\u601d\u8def\u5341\u5206\u597d\u60f3\u3002\n\n\u6211\u4eec\u628a\u76f8\u90bb\u7684\u683c\u5b50\u8fb9\u6743\u8bbe\u4e3a0\uff0c\u628a\u4e0d\u76f8\u90bb\u4f46\u53ea\u5dee\u4e00\u884c\u7684\u683c\u5b50\u4e4b\u95f4\u8fb9\u6743\u8bbe\u4e3a1\u3002\uff08\u5176\u4ed6\u60c5\u51b5\u90fd\u4e0d\u80fd\u76f4\u63a5\u5230\u8fbe\uff09\n\n\u7136\u540e\u8dd1\u4e00\u4e0bSPFA\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u9700\u8981\u8003\u8651\u4e00\u4e2a\u7279\u4f8b\uff1a\u7ec8\u70b9\u6709\u6ca1\u6709\u88ab\u70b9\u4eae\u3002\n\n\u5982\u679c\u70b9\u4e86\u7684\u8bdd\u90a3\u6ca1\u5173\u7cfb\uff0c\u6ca1\u70b9\u7684\u8bdd\u5f97\u628a(n+1,m+1)\u8bbe\u4e3a\u70b9\u4eae\u7684\u70b9\u3002\uff08\u8981\u4e0d\u7136\u6211\u4eec\u8d70\u4e0d\u5230\u7ec8\u70b9\u4e0d\u662f\u5417\uff09\n\n------------\n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n`11149ms/192kb`\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cmath>\nusing namespace std;\nnamespace StandardIO{\n\ttemplate<typename T>inline void read(T &x){\n\t\tx=0;T f=1;char c=getchar();\n\t\tfor(;c<'0'||c>'9';c=getchar())if(c=='-')f=-1;\n\t\tfor(;c>='0'&&c<='9';c=getchar())x=x*10+c-'0';\n\t\tx*=f;\n\t}\n\ttemplate<typename T>inline void write(T x){\n\t\tif(x<0)putchar('-'),x*=-1;\n\t\tif(x>=10)write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nusing namespace StandardIO;\nnamespace Solve{\n\tconst int N=10100;\n\tconst int INF=0x3f3f3f3f;\n\tint n,m,k;\n\tstruct node{\n\t\tint from,to;\n\t}edge[N];\n\tint dis[N],vis[N];\n\tinline int spfa(){\n\t\tfor(register int i=1;i<=k;++i)dis[i]=INF;\n\t\tqueue<int>q;q.push(1);\n\t\tvis[1]=1,dis[1]=0;\n\t\twhile(!q.empty()){\n\t\t\tint to=q.front();q.pop();\n\t\t\tvis[to]=0;\n\t\t\tfor(register int i=1;i<=k;++i){\n\t\t\t\tif(to==i)continue;\n\t\t\t\tint val=INF;\n\t\t\t\tint dx=abs(edge[to].from-edge[i].from),dy=abs(edge[to].to-edge[i].to);\n\t\t\t\tif(dx+dy==1)val=0;\n\t\t\t\telse if(dx<=2||dy<=2)val=1;\n\t\t\t\tif(dis[i]>dis[to]+val){\n\t\t\t\t\tdis[i]=dis[to]+val;\n\t\t\t\t\tif(!vis[i]){\n\t\t\t\t\t\tq.push(i),vis[i]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[k]!=INF)return dis[k];\n\t\treturn -1;\n\t}\n\tinline void solve(){\n\t\tread(n),read(m),read(k);\n\t\tint flag=0;\n\t\tfor(register int i=1;i<=k;++i){\n\t\t\tread(edge[i].from),read(edge[i].to);\n\t\t\tif(edge[i].from==n&&edge[i].to==m)flag=1;\n\t\t}\n\t\tif(!flag)edge[++k].from=n+1,edge[k].to=m+1;\n\t\twrite(spfa());\n\t}\n}\nusing namespace Solve;\nint main(){\n\tsolve();\n}\n```",
        "postTime": 1538317067,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF821D \u3010Okabe and City\u3011"
    },
    {
        "content": " \u9996\u5148\uff0c\u6b64\u9898\u8981\u5f00long long\uff1b\n\n\n------------\n\n \u5176\u6b21\uff0ck\u7684\u8303\u56f4\u662f10000\uff0c\u4e0d\u662f104\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6ca1\u5904\u7406\u597d\u6392\u7248\uff1b\n \n\n------------\n~~\u7136\u540e\uff0c\u6211\u4e0d\u662f\u5728\u6c34~~\n\n\n------------\n# \u8fdb\u5165\u4e3b\u9898\u3002\n\u9898\u76ee\u8bf4\u7684\u4e0d\u592a\u6e05\u695a\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6709k\u4e2a\u70b9\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u7684\u80fd\u529b\uff0c\u5229\u7528\u8fd9  \u4e9b\u70b9\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u3002\n\u800c\u80fd\u529b\u4e5f\u5f88\u7b80\u5355\uff0c\u82b1\u8d391s\uff08~~\u7ffb\u8bd1\u662f\u771f\u7684\u76ae~~\uff09\u5efa\u4e00\u6761\u8fb9\u8fde\u63a52\u4e2a\u70b9\uff0c\u8fd9\u4e24\u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u5dee\u4e0d\u80fd\u90fd\u8d85\u8fc72\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e2d\u95f4\u6700\u591a\u63d2\u4e00\u884c\u6216\u4e00\u5217\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u70b9\u5bf9\u4e4b\u95f4\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\u5c31\u6ca1\u4e86\u3002\n###### \u5f53\u7136\n\u8fd8\u6709\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u7684\u8fb9\uff0c\u8fb9\u6743\u4e3a0\uff1b\n###### \u81f3\u4e8e\u90a3\u4e9b\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u4e24\u79cd\u6761\u4ef6\u7684\u70b9\u5bf9\uff0c\u4e4b\u95f4\u7684\u8fb9\u8fb9\u6743\u4e3ainf\n\u4f7f\u7528spfa\uff0c\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u8fb9\u641c\u8fb9\u5efa\u8fb9\u3002\n# \u4ee3\u7801\n```c\n#include<bits/stdc++.h>\nconst int inf=0x3f3f3f3f;\nconst int maxn=1e5+10;\nusing namespace std;\nlong long n,m,k,cnt;\nlong long dis[maxn],vis[maxn],nx[10010],ny[10010];\nbool flag;\nvoid spfa(int s)\n{\n    fill(dis+1,dis+(maxn-20)+1,inf);\n    fill(vis+1,vis+(maxn-20)+1,0);\n    queue<int> que;\n    que.push(s);\n    dis[s]=0; \n    vis[s]=1;\n    while(!que.empty())\n    {\n        int x=que.front(); \n        que.pop();\n        vis[x]=0;\n        for(int i=1;i<=k;i++)\n        {\n            long long tmp;\n            int dx=abs(nx[i]-nx[x]);\n            int dy=abs(ny[i]-ny[x]);\n            if(dx+dy==1) \n            tmp=0;\n            else if(dx<=2||dy<=2) \n            tmp=1;\n            else \n\t\t\ttmp=inf;   \n            if(dis[i]>dis[x]+tmp)\n            {\n                dis[i]=dis[x]+tmp;\n                if(!vis[i])\n                vis[i]=1;\n                que.push(i);\n            }\n        }\n    }\n    printf(\"deep \u2642dark\u2642fantasy\\n\"); \n}\nmain()\n{\n    scanf(\"%lld%lld%lld\",&n,&m,&k);\n    for(int i=1;i<=k;i++)\n    {\n    \tscanf(\"%lld%lld\",&nx[i],&ny[i]);\n    \tif(nx[i]==n&&ny[i]==m)\n    \tflag=true;\n    }\n    if(!flag)\n    {\n    k++;\n    nx[k]=n+1;\n    ny[k]=m+1;\n    }\n    spfa(1);\n    if(dis[k]!=inf)\n    printf(\"%lld\",dis[k]);\n    else\n    printf(\"-1\");\n    return 0;\n}\n```\n```\n\u6211\u7edd\u4e0d\u662f\u54f2\u5b66\u5bb6\u3002\n```",
        "postTime": 1528288117,
        "uid": 85841,
        "name": "Dr_Gears",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF821D \u3010Okabe and City\u3011"
    }
]