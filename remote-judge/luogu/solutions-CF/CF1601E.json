[
    {
        "content": "\u8003\u8651\u4e00\u6b21\u8be2\u95ee\u7684\u60c5\u51b5\uff0c\u663e\u7136\u6709\u4e00\u4e2a\u8d2a\u5fc3\uff1a\n$$\nans=\\sum_{i=l+kx,i\\leq r}\\min\\limits_{l\\leq j\\leq i}\\{a[j]\\}\n$$\n\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u524d\u7f00\u6700\u5c0f\u503c\u7684\u524d\u7f00\u548c\u3002\n\n\u8003\u8651\u5230\u53ea\u4f1a\u5728\u4e0e $l$ \u6a21 $k$ \u540c\u4f59\u7684\u65f6\u5019\u53d6\u503c\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u957f\u5ea6\u4e3a $k+1$ \u7684\u6bb5\u6346\u5305\uff0c\u53f3\u7aef\u70b9\u4e3a $i$ \u8bb0\u4e3a $c_i$ \uff0c\u4e00\u4e2a $c_i$ \u9020\u6210\u7684\u5f71\u54cd\u8303\u56f4\u5fc5\u7136\u662f\u5bf9\u4e8e\u540e\u9762\u7684\u67d0\u4e00\u6bb5\u91cc\u9762\uff0c\u65b0\u7684 $c_j(j>i)$ \u4e0d\u5982 $c_i$ \u4f18\uff0c\u76f4\u5230\u9047\u5230\u6bd4 $c_i$ \u4f18\u7684\u518d\u6362\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ece $l+k$ \u5f00\u59cb\u67e5\u8be2\u540e\u7ee7\uff0c\u518d\u8ba1\u7b97\u8d21\u732e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8d77\u5230\u4e00\u70b9\u70b9\u4f18\u5316\u6548\u679c\u3002\n\n\u4e00\u4e2a\u4e2a\u8df3\u975e\u5e38\u7684\u6162\uff0c\u6211\u4eec\u8003\u8651\u500d\u589e\u3002\n\n\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u79cd\u4f59\u6570\uff0c\u5728\u6240\u6709\u540c\u4f59\u7684\u4f4d\u7f6e\u4e0a\u8dd1\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u9884\u5904\u7406\u4e00\u4e2a $to[i][j]$ \u8868\u793a $i$ \u540e\u9762\u7b2c $2^j$ \u4e2a\u6bd4 $c_i$ \u5c0f\u7684\u4f4d\u7f6e\uff0c\u518d\u8ba1\u7b97\u4e00\u4e2a\u4ea7\u751f\u7684\u8d21\u732e $s[i][j]$ \uff0c\u500d\u589e\u8df3\u6c42\u89e3\u5373\u53ef\u3002",
        "postTime": 1636360509,
        "uid": 99643,
        "name": "\u9648\u5200\u4ed4",
        "ccfLevel": 7,
        "title": "CF1601E\u9898\u89e3"
    },
    {
        "content": "\u767e\u5e74\u4e00\u9047\u7684\u7b80\u5355 div.1 E\u3002\n\n\u9996\u5148\u6ce8\u610f\u5230\u53ef\u4ee5\u628a\u8d21\u732e\u5199\u6210 \n\n$$\\sum_{i=l+xK,l\\le i\\le r,x\\in Z} \\min_{l\\le j\\le i} a_j$$\n\n\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8ba4\u4e3a $r=l+k\\lfloor\\dfrac {r-l}k\\rfloor$\uff0c\u8fd9\u6837 $l,r$ \u5c31\u6a21 $k$ \u540c\u4f59\u4e86\u3002\n\n\u628a\u8be2\u95ee\u6309\u7167 $l,r$ \u6a21 $k$ \u7684\u4f59\u6570\u5206\u7c7b\uff0c\u5bf9\u4e8e\u6a21 $k$ \u4f59 $p$ \u7684\u90a3\u4e00\u7c7b\uff0c\u8bbe $g(i)=\\min_{iK+p+1\\le j\\le (i+1)K+p}$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u53ef\u4ee5\u5199\u6210\uff08\u5f0f\u5b50\u53ea\u8981\u6d89\u53ca\u4e0b\u53d6\u6574\uff0c\u90fd\u4f1a\u6709\u52a0\u4e00\u51cf\u4e00\u4e4b\u7c7b\u7684\u95ee\u9898\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u63a8\u4e00\u4e0b\uff0c\u8fd9\u91cc\u53ea\u60f3\u8bf4\u660e\u5927\u4f53\u601d\u8def\uff09\n\n$$\\sum_{i\\le \\frac{r}{K}} \\min(a_l,\\min_{\\frac lK\\le j\\le i} g(j))$$\n\n\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u5355\u8c03\u6808\u6c42\uff0c\u4ece\u540e\u5f80\u524d\u626b $g$\uff0c\u7136\u540e\u4e8c\u5206\u627e\u5230 $a_l$ \u7684\u7ba1\u8f96\u533a\uff0c\u518d\u4e8c\u5206\u627e\u5230 $\\dfrac rK$ \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5206\u6bb5\u8ba1\u7b97\u7b54\u6848\u3002\u53ea\u9700\u8981\u5728\u5355\u8c03\u6808\u4e0a\u505a $g(st_i)(st_i-st_{i-1})$ \u7684\u524d\u7f00\u548c\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(K\\times \\dfrac nK\\times \\log n)=O(n\\log n)$\u3002",
        "postTime": 1635404725,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1601E\u3010Phys Ed Online\u3011"
    },
    {
        "content": "\u6ca1\u6709\u591a\u7ec4\u8be2\u95ee\u65f6\u663e\u7136\u662f\u53ef\u4ee5\u8d2a\u5fc3\u7684\u3002\u8bbe $b_i=\\min_{j=i-k}^i\\{a_i\\}$\uff0c\u5219\u8be2\u95ee $[l,r]$ \u7684\u7b54\u6848\u4e3a $a_l+b_{l+k}+\\min\\{b_{l+k},b_{l+2k}\\}...+\\min\\{b_{l+k},b_{l+2k}+\\dots +b_{l+tk}\\}$\uff0c\u5176\u4e2d $t$ \u662f\u6700\u5927\u7684\u6ee1\u8db3 $l+tk\\leq r$ \u7684\u6574\u6570\u3002\n\n\u8003\u8651\u540e\u9762\u90a3\u4e2a\u524d\u7f00 $\\min$ \u7684\u524d\u7f00\u548c\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u628a\u5b83\u62bd\u79bb\u51fa\u6765\uff0c\u8bbe\u5f97\u5230\u4e86\u5e8f\u5217 $c_{1\\cdots m}$\uff0c\u6c42 $f_i=\\sum_{j=i}^n \\min\\{c_{i\\cdots j}\\}$\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u5904\u7406\u51fa $nxt_i$ \u8868\u793a $i$ \u540e\u9762\u7b2c\u4e00\u4e2a\u503c\u5c0f\u4e8e $c_i$ \u7684\u4f4d\u7f6e\uff0c\u5219 $f_i=f_{nxt_i}+(nxt_i-i)\u00b7c_i$\u3002\n\n\u9898\u76ee\u4e2d\u6c42\u7684\u5f62\u5f0f\u662f $\\sum_{i=l}^r \\min\\{c_{l\\cdots i}\\}$\uff0c\u6c42\u8fd9\u4e2a\u53ef\u4ee5\u627e\u5230 $c_p=\\min\\{c_{l\\cdots r}\\}$\uff0c\u5219\u524d\u9762\u7684\u5f0f\u5b50\u5c31\u7b49\u4e8e $f_l-f_p+c_p\u00b7(r-p+1)$\uff0c\u8fd9\u4e2a\u7684\u610f\u4e49\u662f\u4ece $l$ \u5230 $p$ \u90fd\u662f\u7528\u7684 $f_l$ \u7684\u65b9\u6848\uff0c\u4ece $p$ \u5f00\u59cb\u5f80\u540e\uff0c$f_l,f_p$ \u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u65b9\u6848\uff0c\u5bf9\u5e94\u7684\u503c\u81ea\u7136\u76f8\u540c\uff0c\u53ef\u4ee5\u76f8\u51cf\uff0c\u800c $[p,r]$ \u6bb5\u7528\u7684\u6700\u5c0f\u503c\u90fd\u662f $c_p$\uff0c\u518d\u52a0\u56de\u6765\u5373\u53ef\u3002\n\n\u7cbe\u7ec6\u5b9e\u73b0\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\uff0c\u4f46 ST \u8868\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n[code](https://codeforces.com/contest/1601/submission/133210519)\u3002",
        "postTime": 1635320544,
        "uid": 173685,
        "name": "\u6478\u9c7c\u9171",
        "ccfLevel": 8,
        "title": "CF1601E"
    },
    {
        "content": "> \u6458\u81ea\u6211\u7684 [\u8d2a\u5fc3/\u6784\u9020/DP \u6742\u9898\u9009\u505a\u2162](https://www.cnblogs.com/ET2006/p/greedy-construction-dp3.html) \u4e2d\u7684\u7b2c $59$ \u9898\n\n\u5176\u5b9e\u611f\u89c9\u5728\u91cd\u5927\u8003\u8bd5\u51fa\u7eaf\u8d2a\u5fc3\u9898\u662f\u5360\u5c11\u6570\uff0c\u5012\u662f\u6709\u4e0d\u5c11\u9898\u662f\u5c06\u8d2a\u5fc3\u4e0e\u8ba1\u6570/\u6570\u636e\u7ed3\u6784\u7ed3\u5408\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784/\u8ba1\u6570\u9898\u4e00\u822c\u662f\u5148\u7ed9\u4f60\u4e00\u5806\u64cd\u4f5c\uff0c\u95ee\u4f60\u6709\u591a\u5c11\u4e2a\u5e8f\u5217\u7b26\u5408\u5728\u591a\u5c11\u591a\u5c11\u6b21\u64cd\u4f5c\u4e4b\u5185\u8fbe\u6210\u4ec0\u4e48\u76ee\u6807/\u8981\u52a8\u6001\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\u4e4b\u7c7b\u7684\u4e1c\u897f\u5e76\u67e5\u8be2\u6700\u5c11\u8fdb\u884c\u591a\u5c11\u6b21\u64cd\u4f5c\u624d\u80fd\u6253\u6210\u4ec0\u4e48\u76ee\u6807\u4e4b\u7c7b\u7684\uff0c\u800c\u53d1\u73b0\u5982\u4f55\u5b9e\u73b0\u6700\u4f18\u7b56\u7565\u7684\u8fc7\u7a0b\uff0c\u5c31\u9700\u8981\u8d2a\u5fc3\u3002\u6b64\u9898\u5c31\u662f\u5178\u578b\uff0c~~\u867d\u7136\u5b83\u7684\u8d2a\u5fc3\u8fd8\u4e0d\u7b97\u56f0\u96be~~\n\n~~\u6bd4\u8d5b\u73b0\u573a\u5148\u5f00 D \u540e\u5f00 E\uff0c\u5de8\u5927\u7684\u5931\u8bef\u3002~~\n\n\u9996\u5148\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u6027\u8d28\u662f\u6211\u4eec\u80af\u5b9a\u4f1a\u6070\u597d\u5728 $l,l+k,l+2k,\\cdots$ \u65f6\u523b\u7528\u6512\u4e0b\u6765\u7684\u5165\u573a\u5238\uff0c\u8fd9\u5c31\u8981\u6c42\u6211\u4eec\u5728 $[l,l],[l,l+k],[l,l+2k],\\cdots$ \u65f6\u523b\u4e2d\u5404\u4e70\u4e00\u4e2a\u5165\u573a\u5238\uff0c\u800c\u663e\u7136\u6211\u4eec\u80af\u5b9a\u4f1a\u4e70\u8fd9\u4e9b\u533a\u95f4\u4e2d $a_i$ \u6700\u5c0f\u7684\u5165\u573a\u5238\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u7ec4\u8be2\u95ee\uff0c\u5b83\u7684\u7b54\u6848\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\n$$\n\\sum\\limits_{l+tk\\le r,t\\ge0}(\\min\\limits_{i=l}^{l+tk}a_i)\n$$\n\u8003\u8651\u5982\u4f55\u6c42\u4e4b\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u5176\u5b9e\u4e0d\u7b97\u592a\u91cd\u8981\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4f7f\u5f97 $l+tk\\le r$\u200b \u6700\u5927\u7684 $t$\u200b \u76f8\u540c\u3001\u5de6\u7aef\u70b9\u4e5f\u76f8\u540c\u7684\u4e24\u4e2a\u8be2\u95ee\uff0c\u5b83\u4eec\u7684\u7b54\u6848\u80af\u5b9a\u662f\u76f8\u540c\u7684\u3002\u800c\u5de6\u7aef\u70b9\u5c31\u4e0d\u540c\u4e86\uff0c\u6240\u6709\u67e5\u8be2 $\\min$\u200b \u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u90fd\u7b49\u4e8e $l$\u200b\uff0c\u4e14\u533a\u95f4\u957f\u5ea6\u90fd\u6a21 $k$\u200b \u4f59 $1$\u200b\uff0c\u8fd9\u4e0d\u7981\u542f\u53d1\u6211\u4eec\u5c06 $l\\bmod k$\u200b \u76f8\u540c\u7684\u8be2\u95ee\u653e\u5728\u4e00\u8d77\u5904\u7406\u3002\u6211\u4eec\u5c06\u8be2\u95ee\u6302\u5728 $l$\u200b \u5904\u7136\u540e\u679a\u4e3e $l\\bmod k$\u200b \u7684\u503c $i$\u200b \u5e76\u6279\u91cf\u5904\u7406 $i\\equiv l\\pmod{k}$\u200b \u7684\u8be2\u95ee\u4eec\u3002\u5f53\u6211\u4eec\u5904\u7406 $i\\equiv l\\pmod{k}$\u200b \u7684\u8be2\u95ee\u65f6\uff0c\u6211\u4eec\u5c06 $i\\equiv j\\pmod{j}$\u200b \u7684\u70b9\u8bbe\u4e3a\u5173\u952e\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u533a\u95f4\uff0c\u6211\u4eec\u63d0\u53d6\u51fa\u5b83\u4eec\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u5927\u6982\u662f $\\dfrac{2n}{k}$\u200b \u7684\u5e8f\u5217\uff0c\u7136\u540e\u6211\u4eec\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e0a\u4ece\u540e\u5f80\u524d\u626b\u4e00\u904d\u5355\u8c03\u6808\uff0c\u5355\u8c03\u6808\u7684\u540c\u65f6\u5904\u7406\u51fa\u4e0a\u76f8\u90bb\u4e24\u4e2a\u70b9 $stk_{tp},stk_{tp-1}$\u200b \u4e4b\u95f4\u6709\u591a\u5c11\u5173\u952e\u70b9 $cnt$\u200b\uff0c\u5e76\u6c42\u51fa $a_{stk_{tp}}\u00b7cnt$ \u7684\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u67e5\u8be2\u65f6\u5c31\u5728\u5355\u8c03\u6808\u4e0a\u4e8c\u5206\u79bb\u6808\u5e95\u6700\u8fd1\u7684 $\\le l+\\lfloor\\dfrac{r-l}{k}\\rfloor\u00b7k$ \u7684\u70b9\uff0c\u524d\u9762\u7684\u6bb5\u4f7f\u7528\u524d\u7f00\u548c\u7b97\u51fa\uff0c\u6700\u540e\u4e00\u6bb5\u5355\u72ec\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u505a\u5230 $\\Theta(\\log n)$ \u5730\u67e5\u8be2\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\Theta((n+q)\\log n)$\u3002\n\n```cpp\nnamespace fastio {\n\t#define FILE_SIZE 1 << 23\n\tchar rbuf[FILE_SIZE], *p1 = rbuf, *p2 = rbuf, wbuf[FILE_SIZE], *p3 = wbuf;\n\tinline char getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = rbuf) + fread(rbuf, 1, FILE_SIZE, stdin), p1 == p2) ? -1: *p1++;\n\t}\n\tinline void putc(char x) {(*p3++ = x);}\n\ttemplate <typename T> void read(T &x) {\n\t\tx = 0; char c = getchar(); T neg = 0;\n\t\twhile (!isdigit(c)) neg |= !(c ^ '-'), c = getchar();\n\t\twhile (isdigit(c)) x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();\n\t\tif (neg) x = (~x) + 1;\n\t}\n\ttemplate <typename T> void recursive_print(T x) {\n\t\tif (!x) return;\n\t\trecursive_print (x / 10);\n\t\tputc (x % 10 ^ 48);\n\t}\n\ttemplate <typename T> void print(T x) {\n\t\tif (!x) putc('0');\n\t\tif (x<0) putc('-'), x = -x;\n\t\trecursive_print(x);\n\t}\n\ttemplate <typename T> void print(T x,char c) {print(x); putc(c);}\n\tvoid print_final() {fwrite(wbuf, 1, p3-wbuf, stdout);}\n}\nusing namespace fastio;\nconst int MAXN = 3e5;\nconst int LOG_N = 19;\nint n, qu, k, a[MAXN + 5] ,L[MAXN + 5], R[MAXN + 5];\npii st[LOG_N + 2][MAXN + 5]; vector<int> qv[MAXN + 5];\npii query_st(int l, int r) {\n\tint k = 31 - __builtin_clz(r - l + 1);\n\treturn min(st[k][l], st[k][r - (1 << k) + 1]);\n}\nll res[MAXN + 5];\nint query(int l, int r, int x) {\n\tint posl = l / k * k + x;\n\tif (posl < l) posl += k;\n\tint posr = r / k * k + x;\n\tif (posr > r) posr -= k;\n\tif (posl > posr) return 0;\n\treturn (posr - posl) / k + 1;\n}\nint main() {\n\tread(n); read(qu); read(k);\n\tfor (int i = 1; i <= n; i++) read(a[i]), st[0][i] = mp(a[i], i);\n\tfor (int i = 1; i <= qu; i++) read(L[i]), read(R[i]), qv[L[i]].pb(i);\n\tfor (int i = 1; i <= LOG_N; i++) for (int j = 1; j + (1 << i) - 1 <= n; j++)\n\t\tst[i][j] = min(st[i - 1][j], st[i - 1][j + (1 << i - 1)]);\n\tfor (int i = 1; i <= k; i++) {\n\t\tvector<int> vec;\n\t\tfor (int j = i; j <= n; j += k) {\n\t\t\tif (k != 1 && j - k >= 1)\n\t\t\t\tvec.pb(query_st(j - k + 1, j - 1).se);\n\t\t\tvec.pb(j);\n\t\t}\n\t\tstatic int stk[MAXN + 5];\n\t\tstatic ll sum[MAXN + 5];\n\t\tint tp = 0;\n\t\tfor (int j = (int)(vec.size()) - 1; ~j; j--) {\n\t\t\tint p = vec[j];\n\t\t\twhile (tp && a[stk[tp]] >= a[p]) tp--; stk[++tp] = p;\n\t\t\tsum[tp] = sum[tp - 1] + 1ll * a[p] * query(p, stk[tp - 1] - 1, i % k);\n\t\t\tif ((p - i) % k == 0) {\n\t\t\t\tfor (int id : qv[p]) {\n\t\t\t\t\tint pos = (R[id] - L[id]) / k * k + L[id];\n\t\t\t\t\tint l = 1, r = tp, pp = 0;\n\t\t\t\t\twhile (l <= r) {\n\t\t\t\t\t\tint mid = l + r >> 1;\n\t\t\t\t\t\tif (stk[mid] <= pos) pp = mid, r = mid - 1;\n\t\t\t\t\t\telse l = mid + 1;\n\t\t\t\t\t}\n\t\t\t\t\tres[id] = sum[tp] - sum[pp] + 1ll * a[stk[pp]] * query(stk[pp], pos, i % k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= qu; i++) print(res[i], '\\n');\n\tprint_final();\n\treturn 0;\n}\n```",
        "postTime": 1637159854,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1601E Phys Ed Online"
    }
]