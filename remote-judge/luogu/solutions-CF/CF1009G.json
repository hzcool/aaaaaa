[
    {
        "content": "\u770b\u5230\u9898\u7684\u5929\u7136\u60f3\u6cd5\u662f\u7ef4\u62a4\u4e00\u4e0b\u5b57\u7b26\u96c6\u6bcf\u4e2a\u5b50\u96c6\u8986\u76d6\u5230\u7684A\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u7684\u6570\u91cf\uff0c\u6bcf\u6b21\u8d2a\u5fc3\u653e\u4e00\u4e0b\uff0c\u7136\u540e\u4ec0\u4e48\u5bb9\u65a5\u554a\u5565\u7684\u5224\u5b9a\u662f\u5426\u53ef\u884c\u3002\n\n\u60f3\u4e86\u534a\u5929\u6ca1\u611f\u89c9\uff0c\u7136\u540e\u611f\u89c9\u8fd9\u9898\u53ef\u4ee5\u7f51\u7edc\u6d41\uff0c\u5c31\u53ef\u4ee5\u987a\u7740\u505a\u4e0b\u53bb\u3002\n\n\u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u7f51\u7edc\u6d41\u6a21\u578b\uff0cA\u96c6\u5408\u662f\u4f4d\u7f6e\uff0cB\u96c6\u5408\u662f\u5b57\u7b26\u96c6\uff0cB\u5230\u8d85\u7ea7\u6c47\u8fde\u8fb9size\u662f\u5b57\u7b26\u6570\u3002\u5929\u7136\u7684\u601d\u8def\u662f\u4e0d\u65ad\u5730\u8d2a\u5fc3\u653e\u4e0b\u53bb\uff0c\u6bcf\u6b21\u6700\u6700\u5927\u6d41\u67e5\u770b\u5269\u4f59\u7684\u4f4d\u7f6e\u662f\u5426\u8fd8\u6709\u5b8c\u5907\u5339\u914d\u3002\u8fd9\u4e2a\u590d\u6742\u5ea6\u663e\u7136\u4e0d\u80fd\u63a5\u53d7\uff0c\u90a3\u4e48\u8003\u8651\u5176\u4ed6\u7684\u5224\u5b9a\u65b9\u6cd5\u3002\n\n\u5404\u79cd\u5339\u914d\u5728\u7b97\u6cd5\u590d\u6742\u5ea6\u5df2\u7ecf\u6709\u4e00\u4e2an\u7684\u60c5\u51b5\u4e0b\u5df2\u7ecf\u7b97\u662f\u6b7b\u4e86\uff0c\u4e0d\u8fc7\u6211\u4eec\u77e5\u9053\u6709hall\u5b9a\u7406\uff0c\u5b83\u662f\u8fd9\u6837\u8bf4\u7684\uff1a\n\n>\u8bbe\u4e8c\u5206\u56fe\u7684\u4e24\u90e8\u5206\u4e3aX\u3001Y\uff0c\u4e14|X|\u2264|Y|\u3002\u5219\u5b9a\u7406\u63cf\u8ff0\u4e3a\uff1a\u4e8c\u5206\u56fe\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\uff0c\u7b49\u4ef7\u4e8e\u5bf9\u4e8eX\u7684\u4efb\u610f\u5b50\u96c6X\u2032\uff0c\u4e0e\u5b83\u4eec\u4e2d\u4efb\u610f\u70b9\u76f8\u8fde\u7684Y\u7684\u7ed3\u70b9\u4e2a\u6570\u2265|X\u2032|\u3002\n\n\u987a\u53e3\u80e1\u4e00\u4e0b\u8bc1\u660e\n\n>**\u5fc5\u8981\u6027\uff1a** \u56e0\u4e3a\u5b58\u5728\u5b8c\u5907\u5339\u914d\uff0c\u6240\u4ee5X\u4e2d\u6bcf\u4e2a\u70b9\u7684\u51fa\u8fb9\u6570\u5927\u4e8e\u7b49\u4e8e1\uff0c\u5fc5\u8981\u6027\u5f97\u8bc1\u3002\n\n>**\u5145\u5206\u6027\uff1a**\n\n>\u5047\u5b9a\u5f53\u524d\u4e0d\u5b58\u5728\u5b8c\u5907\u5339\u914d\uff0c\u90a3\u4e48X\u4e2d\u6709\u5143\u7d20$a_0$\u6ca1\u6709\u5339\u914d\u3002\n\n>$a_0$\u5fc5\u5b9a\u6709\u81f3\u5c11\u4e00\u6761\u51fa\u8fb9\uff0c\u5982\u679c\u8fd9\u6761\u51fa\u8fb9\u4e0d\u5728\u5339\u914d\u4e2d\uff0c\u90a3\u5c31\u5339\u914d\u4e0a\u4e86\uff0c\u77db\u76fe\uff1b\u56e0\u6b64a\u7684\u51fa\u8fb9\u5168\u90e8\u5728\u5339\u914d\u4e2d\u3002\n\n>\u5047\u5b9a$a_0$\u5b58\u5728\u51fa\u8fb9$b_1$\uff0c\u6211\u4eec\u5f3a\u5236\u4ee4\u4e24\u8005\u5339\u914d\u4e0a\uff0c\u90a3\u4e48$b_1$\u539f\u5148\u7684\u5339\u914d$a_1$\u5931\u53bb\u5339\u914d\uff0c\u56e0\u4e3a\u6211\u4eec\u6709$a_0$\u548c$a_1$\u7684\u76f8\u90bb\u70b9\u96c6\u5408\u5927\u5c0f\u22652\uff0c\u6240\u4ee5$a_1$\u5fc5\u5b9a\u53ef\u4ee5\u627e\u5230$b_1$\u4e4b\u5916\u65b0\u7684\u5339\u914d\u3002\n\n>\u6211\u4eec\u628a\u8fd9\u4e2a\u64cd\u4f5c\u8fc7\u7a0b\u4e2dX\u96c6\u5408\u7684\u5143\u7d20\u52a0\u5165$A$\uff0cY\u7684\u5143\u7d20\u52a0\u5165$B$\uff0c\u5047\u5b9a\u6b64\u65f6$|A|=|B|$\u3002\u5f53\u524d\u843d\u5355\u7684\u5143\u7d20$a_k$\u52a0\u5165$A$\uff0c\u6b64\u65f6$A$\u96c6\u5408\u7684\u90bb\u5c45\u96c6\u5408$|S|\u2265|A|>|B|$\uff0c$S$\u4e2d\u5fc5\u5b9a\u5b58\u5728$B$\u4e2d\u6ca1\u6709\u7684\u70b9\u3002\u8fd9\u6837\u4e00\u8def\u64cd\u4f5c\u4e0b\u53bb\uff0c\u7531\u4e8e$|X|<|Y|$,\u4e8e\u662f\u6700\u7ec8\u505c\u6b62\u5728Y\uff0c\u5b8c\u6210\u5339\u914d\u3002\n\n>\u8fd9\u91cc\u8fd8\u6ca1\u89e3\u51b3$|X|=|Y|$\u7684\u95ee\u9898\uff0c\u65e2\u7136\u96c6\u5408\u5927\u5c0f\u76f8\u7b49\uff0c\u90a3\u4e48\u5728\u6700\u5927\u5339\u914d\u91cc\uff0cY\u96c6\u5408\u4e2d\u5fc5\u5b9a\u4e5f\u6709\u4e2a\u843d\u5355\u70b9\u3002\u5982\u679c\u5728\u64cd\u4f5c\u4e2dY\u88ab\u8fde\u4e0a\u5c31\u592a\u597d\u4e86\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48X\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u88ab\u904d\u5386\uff0c\u90fd\u4e0d\u548cY\u8fde\u8fb9\uff0c\u90a3\u4e48X\u5168\u96c6\u7684\u90bb\u5c45\u6570\u5c31\u4e3a$|Y-1|$\uff0c\u4e0d\u7b26\u5408\u6761\u4ef6\u3002\n\n>\u4e8e\u662f\u5145\u5206\u6027\u5f97\u8bc1\u3002\n\n\n\u770b\u7740\u4e00\u5934\u96fe\u6c34\uff0c\u56e0\u4e3aA\u90a3\u4e2a\u5927\u5c0f\u679a\u4e3e\u5b50\u96c6\u6ca1\u4efb\u4f55\u610f\u4e49\u554a\u3002\n\n\u4e0d\u8fc7\u6709B\u561b\u3002\n\nB\u96c6\u5408\u5df2\u7ecf\u88ab\u538b\u62106\u4e2a\u4e86\uff0c\u4fe1\u606f\u6709\u70b9\u4e71\u3002\u5047\u8bbe\u539f\u6765\u7684\u591a\u91cd\u96c6\u5408\u662f$B_0$,$B$\u5b9e\u5219\u662f\u628a$B_0$\u538b\u7f29\u8d77\u6765\uff0c\u6211\u4eec\u8bf4$B$\u4e2d\u5143\u7d20$x$\u7684$size$\u662f$x$\u5728$B_0$\u91cc\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u90a3\u4e48$B_0$\u7684\u5b50\u96c6\u5b9e\u9645\u4e0a\u7b49\u4ef7\u4e8eB\u7684\u6240\u6709\u5b50\u96c6S\uff0c\u5e76\u4e14S\u7684\u6240\u6709\u5143\u7d20x\u7684\u5927\u5c0f\u9009\u62e9$[1,size_x]$\u7684\u5168\u90e8\u65b9\u6848\u3002\u8fd9\u6837\u7b97\u6765\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u96c6S\u800c\u8a00\uff0c\u65e0\u8bba\u5143\u7d20\u5927\u5c0f\u5982\u4f55\u9009\u62e9\uff0c\u4e0eA\u96c6\u5408\u4e2d\u76f8\u8fde\u7684\u8fb9\u7684\u6570\u91cf\u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u6700\u574f\u7684\u60c5\u51b5\u65e0\u975e\u662f\u5927\u5c0f\u53d6\u6ee1\u3002\n\n\u6240\u4ee5\u8fd8\u8981\u6bcf\u6b21\u90fd\u8be2\u95ee\u51fa\u4e00\u4e2a\u96c6\u5408\u8986\u76d6\u5230\u4e86A\u96c6\u5408\u91cc\u7684\u591a\u5c11\u70b9\u3002\n\nps:\u7a81\u7136\u53d1\u89c9\u81ea\u5df1\u7ed5\u56de\u4e86\u81ea\u5df1\u6700\u5f00\u59cb\u60f3\u5230\u7684\u90a3\u4e2a\u7ed3\u8bba\n\n\u8003\u8651\u8d2a\u5fc3\u8fc7\u7a0b\u4e2d\u8981\u6bcf\u6b21\u5220\u4e00\u4e2a\u70b9\u548c\u5b83\u5bfc\u51fa\u7684\u6240\u6709\u8fb9\uff0c\u5728\u7ebf\u6539\u6709\u70b9\u96be\u53d7\uff0c\u90a3\u4e48\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u540e\u7f00\u7684\u8fd9\u4e2a\u4e1c\u897f\u5c31\u5b8c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005;\nint n,m,sz[maxn],link[maxn][1<<6],x,cover[maxn];\nchar s[maxn],ans[maxn];\nvector<int>t[maxn];\nbool check(int x)\n{\n    for(int i=0;i<1<<6;i++)\n    {\n        int a=link[x][i],b=0;\n        for(int j=0;j<6;j++)\n            if((i>>j)&1)b+=sz[j];\n        if(a<b)return 0;\n    }\n    return 1;\n}\nint main()\n{\n    scanf(\"%s\",s+1);\n    n=strlen(s+1);\n    for(int i=1;i<=n;i++)sz[s[i]-'a']++;\n    cin>>m;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%s\",&x,s+1);\n        int len=strlen(s+1);\n        for(int j=1;j<=len;j++)\n            t[x].push_back(s[j]-'a'),cover[x]+=1<<(s[j]-'a');\n    }\n    for(int i=1;i<=n;i++)\n        if(t[i].size()==0)\n        {\n            cover[i]=(1<<6)-1;\n            for(int j='a';j<='f';j++)t[i].push_back(j-'a');\n        }\n            \n    for(int i=n;i>=1;i--)\n    {\n        for(int j=0;j<1<<6;j++)\n        if(j&cover[i])link[i][j]=link[i+1][j]+1;\n        else link[i][j]=link[i+1][j];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        sort(t[i].begin(),t[i].end());\n        for(auto c:t[i])\n        {\n            sz[c]--;\n            if(check(i+1)){ans[i]=c+'a';break;}\n            sz[c]++;\n        }\n    }\n    if(strlen(ans+1)<n)cout<<\"Impossible\";\n    else printf(\"%s\",ans+1);\n}\n```",
        "postTime": 1600776584,
        "uid": 87316,
        "name": "Asuka\u4e8c\u53f7\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009G \u3010Allowed Letters\u3011"
    },
    {
        "content": "\u53c8\u662f\u6bd4\u8f83\u964d\u667a\u7684\u4e00\u9053\u9898\u2026\u2026\n\n\u663e\u7136\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u8d2a\u5fc3\u7684\u4ece\u524d\u5f80\u540e\u4ece\u5c0f\u5230\u5927\u586b\u5b57\u7b26\uff0c\u7136\u800c\u6211\u4eec\u62c5\u5fc3\u73b0\u5728\u867d\u7136\u53ef\u4ee5\u586b\u8fd9\u4e2a\u5b57\u7b26\u4f46\u662f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u540e\u9762\u7684\u586b\u4e0d\u4e86\u5c31gg\u4e86\uff0c\u8fd9\u4e2a\u5bb9\u6613\u60f3\u5230\u7528\u6700\u5927\u6d41\u5b9e\u73b0\u7684\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u5224\u65ad\u662f\u5426\u4e3a\u5b8c\u7f8e\u5339\u914d\uff0c\u5c31\u662f\u5de6\u90e8\u70b9\u662f$n$\u4e2a\u4f4d\u7f6e\uff0c\u53f3\u90e8\u70b9\u662f6\u4e2a\u5b57\u7b26\uff0c\u53f3\u90e8\u70b9\u5411$t$\u8fde\u4e2a\u6570\u7684\u8fb9\uff0c\u6bcf\u6b21\u5c1d\u8bd5\u586b\u4e00\u4e2a\u5b57\u7b26\uff0c\u628a\u6d41\u91cf\u4fee\u6539\u4e00\u4e0b\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u6d41\u5373\u53ef\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u77e5\u9053\u6709\u4e2a\u5224\u65ad\u5b8c\u7f8e\u5339\u914d\u7684\u4e1c\u897f\u53eb\u970d\u5c14\u5b9a\u7406\uff0c\u5c31\u662f\u4efb\u610f\u53f3\u90e8\u70b9\u7684$k$\u4e2a\u70b9\u4e0e\u4e4b\u76f8\u90bb\u7684\u5de6\u90e8\u70b9\u4e0d\u5c0f\u4e8e$k$\u4e2a\uff0c\u90a3\u4e48\u6211\u4eec\u5e72\u8106\u66b4\u529b\u5efa\u4e00\u4e2a\u771f\u6b63\u7684\u5de6\u53f3\u90e8\u70b9\u90fd\u4e3a$n$\u7684\u4e8c\u5206\u56fe\uff0c\u53f3\u90e8\u70b9\u4e3a\u6240\u6709\u53ef\u9009\u7684$n$\u4e2a\u5b57\u7b26\uff0c\u8fd9\u6837\u7684\u8bdd\u5de6\u90e8\u70b9\u6bcf\u4e2a\u4f4d\u7f6e\u4f1a\u5411\u53f3\u90e8\u70b9\u6bcf\u4e2a\u53ef\u4ee5\u5339\u914d\u7684\u5b57\u7b26\u8fde\u8fb9\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53d1\u73b0**\u5728\u53f3\u90e8\u70b9\u4e2d\u76f8\u540c\u7684\u5b57\u7b26\u8fde\u7684\u5de6\u90e8\u70b9\u8fb9\u96c6\u662f\u76f8\u7b49\u7684**\u3002\u6240\u4ee5**\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u540c\u79cd\u5b57\u7b26\u7684\u6240\u6709\u70b9**\uff0c\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u7684\u6240\u6709\u70b9\u6784\u6210\u7684\u70b9\u96c6\u6ee1\u8db3\u970d\u5c14\u5b9a\u7406\u7684\u8bdd\uff0c\u7531\u4e8e\u5b83\u4ee5\u53ca\u5b83\u7684\u5b50\u96c6\u76f8\u90bb\u7684\u5de6\u90e8\u70b9\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u5b50\u96c6\u4e00\u5b9a\u6ee1\u8db3\u970d\u5c14\u5b9a\u7406\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u540c\u79cd\u5b57\u7b26\u7684\u70b9\u770b\u505a\u4e00\u4e2a\u6574\u4f53\u70b9\uff0c\u5c31\u67096\u4e2a\u6574\u4f53\u70b9\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u66b4\u529b$2^6$\u679a\u4e3e\u8fd9\u4e9b\u70b9\u96c6\u4e86\u3002\u4ee4$f[S]$\u4e3a\u540e\u9762\u53ef\u9009\u96c6\u5408\u4e0e$S$\u6709\u4ea4\u7684\u4f4d\u7f6e\u6570\uff0c\u53ea\u8981\u5bf9\u4efb\u610f$S$\u90fd\u6709$f[S]>=S$\u7684\u53f3\u90e8\u70b9\u6570\u5373\u53ef\uff0c$f[S]$\u53ef\u4ee5\u66b4\u529b\u7ef4\u62a4\u3002$O(6*2^6n)$\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\nnamespace ywy {\n\tint f[64], s[100011], cnt[10], bits[64], df[64];\n\tchar str[100011];\n\tvoid ywymain() {\n\t    cin >> str + 1;\n\t    int n = strlen(str + 1);\n\t    for (register int i = 1; i <= n; i++) cnt[str[i] - 'a']++, s[i] = 63;\n\t    int m;\n\t    cin >> m;\n\t    while (m) {\n\t        m--;\n\t        int pos;\n\t        cin >> pos;\n\t        cin >> str + 1;\n\t        int len = strlen(str + 1);\n\t        s[pos] = 0;\n\t        for (register int i = 1; i <= len; i++) s[pos] |= (1 << (str[i] - 'a'));\n\t    }\n\t    for (register int i = 1; i <= n; i++) {\n\t        for (register int j = 0; j < 64; j++)\n\t            if ((j & s[i]))\n\t                f[j]++;\n\t    }\n\t    for (register int i = 0; i < 6; i++) df[1 << i] = i;\n\t    for (register int i = 1; i < 64; i++) bits[i] = bits[i - (i & -i)] + cnt[df[i & -i]];\n\t    for (register int i = 0; i < 64; i++) {\n\t        if (f[i] < bits[i]) {\n\t            printf(\"Impossible\\n\");\n\t            return;\n\t        }\n\t    }\n\t    for (register int i = 1; i <= n; i++) {\n\t        for (register int k = 0; k < 64; k++)\n\t            if ((k & s[i]))\n\t                f[k]--;\n\t        for (register int j = 0; j < 6; j++) {\n\t            if (!(s[i] & (1 << j)) || !cnt[j])\n\t                continue;\n\t            cnt[j]--;\n\t            memset(bits, 0, sizeof(bits));\n\t            for (register int k = 1; k < 64; k++) bits[k] = bits[k - (k & -k)] + cnt[df[k & -k]];\n\t            for (register int k = 0; k < 64; k++) {\n\t                if (f[k] < bits[k]) {\n\t                    cnt[j]++;\n\t                    goto s;\n\t                }\n\t            }\n\t            printf(\"%c\", j + 'a');\n\t            break;\n\t        s:;\n\t        }\n\t    }\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1559100624,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1009G \u3010Allowed Letters\u3011"
    },
    {
        "content": "CF\u5b98\u65b9\u9898\u89e3\u601d\u8defI\uff1a\n\n\u51e1\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u56e0\u4e3a\u53ea\u8981\u4fdd\u8bc1\u5f53\u524d\u4f4d\u586b\u51fa\u7684\u4e1c\u897f\u5c3d\u91cf\u5927\uff0c\u540e\u9762\u7684\u4f4d\u90fd\u53ea\u8981\u4fdd\u8bc1\u6709\u4e2a\u89e3\u5c31\u884c\u4e86\u3002\u6bd4\u5982\u8fd9\u9053\u9898\uff0c\u5c31\u662f\u679a\u4e3e\u6bcf\u4e00\u4f4d\u586b\u4ec0\u4e48\uff0c\u7136\u540e\u7528\u7f51\u7edc\u6d41\u5224\u65ad\u51fa\u540e\u9762\u6709\u65e0\u5408\u6cd5\u89e3\u3002\n\n\u6211\u4eec\u987a\u5e8f\u679a\u4e3e\u6bcf\u4e00\u4f4d\u586b\u4ec0\u4e48\u3002\u6211\u4eec\u5efa\u51fa$6$\u4e2a\u70b9\u4ee3\u8868$'a'$\u5230$'f'$\u5b57\u7b26\uff0c\u540c\u65f6\u5c06\u6bcf\u4f4d\u53ef\u4ee5\u586b\u7684\u5b57\u7b26\u79cd\u7c7b\u72b6\u538b\u4e00\u4e0b\uff0c\u72b6\u538b\u51fa$2^6$\u4e2a\u70b9\u3002\u6bcf\u4e2a\u5b57\u7b26\u5411\u6240\u6709\u5305\u542b\u7740\u5b83\u7684\u72b6\u6001\u8fde\u4e00\u6761\u65e0\u7a77\u5927\u7684\u8fb9\uff0c\u6e90\u70b9\u5411\u6bcf\u4e2a\u5b57\u7b26\u8fde\u201c\u5269\u4f59\u90e8\u5206\u8be5\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u201d\u8fb9\u6743\u7684\u8fb9\uff0c\u540c\u65f6\u6bcf\u4e2abitmask\u5411\u6c47\u70b9\u8fde\u201c\u5269\u4f59\u90e8\u5206\u8be5bitmask\u51fa\u73b0\u6b21\u6570\u201d\u8fb9\u6743\u7684\u8fb9\u3002\u8fd9\u5c31\u662f\u76f8\u5f53\u4e8e\u7528$6$\u4e2a\u5b57\u7b26\u4e0e$2^6$\u4e2abitmask\u8fdb\u884c**\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d**\u3002\n\n\u8fd9\u6837\uff0c\u5982\u679c\u8dd1\u51fa\u6765\u7684\u6700\u5927\u6d41\u7b49\u4e8e\u201c\u5269\u4f59\u90e8\u5206\u957f\u5ea6\u201d\uff0c\u5219\u5f53\u524d\u4f4d\u586b\u5165\u8be5\u5b57\u7b26\u662f\u5408\u6cd5\u7684\u3002\n\n\u5982\u679c\u6211\u4eec\u5c31\u8fd9\u4e48\u76f4\u63a5\u6bcf\u6b21\u90fd\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u6700\u5dee\u4e3a\n$n*A*{(A+2^A)}^2*(2^{A-1}*A)$\uff0c\u5047\u8bbe\u7f51\u7edc\u6d41\u590d\u6742\u5ea6\u4e3a\u5e38\u89c4\u7684$n^2m$\uff08$n^2\\sqrt{m}$\u7684HLPP\u4e0d\u5728\u8ba8\u8bba\u8303\u56f4\u5185\uff09\uff0c\u800c$A$\u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\u3002\n\u4ee3\u5165$n={3*10}^5,A=6$\uff0c\u5f97\u590d\u6742\u5ea6\u6700\u52a3\u4e3a${3*10}^5*6*{70}^2*192\\approx1.7*{10}^{12}$\u3002\u56e0\u4e3a\u7f51\u7edc\u6d41\u590d\u6742\u5ea6\u7384\u5b66\uff0c\u4e0d\u59a8\u4e58\u4e0a\u4e00\u4e2a\u767e\u5206\u4e4b\u4e00\u7684\u5e38\u6570\uff0c\u5f97\u590d\u6742\u5ea6\u7ea6\u4e3a$1.7*{10}^{10}$\uff0c\u4e0d\u53ef\u80fd\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee5\u4e0b\u662f\u8fd9\u4e2aTLE\u7684\u66b4\u529b\u7f51\u7edc\u6d41\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int lim=1<<6;\nint n,mask[100100],m,tot[lim],cmp[6];\nchar s[100100],ss[6],ans[100100];\nnamespace MaxFlow{\n\tconst int N=10000,M=200000;\n\tint head[N],cur[N],dep[N],cnt,S,T,res;\n\tstruct node{\n\t\tint to,next,val;\n\t}edge[M];\n\tvoid ae(int u,int v,int w){\n\t\tedge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n\t\tedge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tqueue<int>q;\n\tinline bool bfs(){\n\t\tmemset(dep,0,sizeof(dep)),q.push(S),dep[S]=1;\n\t\twhile(!q.empty()){\n\t\t\tregister int x=q.front();q.pop();\n\t\t\tfor(register int i=cur[x]=head[x];i!=-1;i=edge[i].next)if(edge[i].val&&!dep[edge[i].to])dep[edge[i].to]=dep[x]+1,q.push(edge[i].to);\n\t\t}\n\t\treturn dep[T]>0;\n\t}\n\tbool reach;\n\tinline int dfs(int x,int flow){\n\t\tif(x==T){\n\t\t\tres+=flow;\n\t\t\treach=true;\n\t\t\treturn flow;\n\t\t}\n\t\tint used=0;\n\t\tfor(register int &i=cur[x];i!=-1;i=edge[i].next){\n\t\t\tif(!edge[i].val||dep[edge[i].to]!=dep[x]+1)continue;\n\t\t\tregister int ff=dfs(edge[i].to,min(edge[i].val,flow-used));\n\t\t\tif(ff){\n\t\t\t\tedge[i].val-=ff;\n\t\t\t\tedge[i^1].val+=ff;\n\t\t\t\tused+=ff;\n\t\t\t\tif(used==flow)break;\n\t\t\t}\n\t\t}\n\t\treturn used;\n\t}\n\tinline void Dinic(){\n\t\twhile(bfs()){\n\t\t\treach=true;\n\t\t\twhile(reach)reach=false,dfs(S,0x3f3f3f3f);\n\t\t}\n\t}\n}\nusing namespace MaxFlow;\nint che(){\n\tfor(register int i=head[S];i!=-1;i=edge[i].next)edge[i].val=cmp[edge[i].to],edge[i^1].val=0;\n\tfor(register int i=head[T];i!=-1;i=edge[i].next)edge[i^1].val=tot[edge[i].to-6],edge[i].val=0;\n\tres=0;\n\tDinic();\n\treturn res;\n}\ninline void read(int &x){\n\tx=0;\n\tregister char c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n}\ninline void print(int x){\n\tif(x<=9)putchar('0'+x);\n\telse print(x/10),putchar('0'+x%10);\n}\nint main(){\n\tscanf(\"%s\",s+1),n=strlen(s+1),S=6+lim,T=6+lim+1;\n\tfor(register int i=1;i<=n;i++)cmp[s[i]-'a']++;\n\tread(m);\n\tfor(register int i=1,x,y;i<=m;i++){\n\t\tread(x),scanf(\"%s\",ss),y=strlen(ss);\n\t\tfor(register int j=0;j<y;j++)mask[x]|=1<<(ss[j]-'a'); \n\t}\n\tfor(register int i=1;i<=n;i++)if(!mask[i])mask[i]=lim-1;\n\tfor(register int i=1;i<=n;i++)tot[mask[i]]++;\n\tmemset(head,-1,sizeof(head));\n\tfor(register int i=0;i<6;i++)ae(S,i,cmp[i]);\n\tfor(register int i=0;i<lim;i++)for(register int j=0;j<6;j++)if(i&(1<<j))ae(j,i+6,0x3f3f3f3f);\n\tfor(register int i=0;i<lim;i++)ae(i+6,T,tot[i]);\n\tDinic();\n\tif(res!=n){puts(\"Impossible\");return 0;}\n\tfor(register int i=1;i<=n;i++)for(register int j=0;j<6;j++){\n\t\tif(!(mask[i]&(1<<j)))continue;\n\t\tif(!cmp[j])continue;\n\t\ttot[mask[i]]--,cmp[j]--;\n\t\tif(che()!=n-i)tot[mask[i]]++,cmp[j]++;\n\t\telse{ans[i]='a'+j;break;}\n\t}\n\tans[n+1]='\\0';\n\tprintf(\"%s\",ans+1);\n\treturn 0;\n}\n```\n\u7f51\u7edc\u6d41\u9898\u6700\u6709\u6548\u7684\u4f18\u5316\u662f\u4ec0\u4e48\uff1f**\u6b8b\u91cf\u7f51\u7edc\u4f18\u5316**\u3002\u5728\u91cd\u8dd1\u7f51\u7edc\u6d41\u65f6\uff0c\u4e0d\u518d\u5168\u4f53\u6e05\u7a7a\u8fb9\u6743\uff0c\u800c\u662f\u53ea\u6e05\u7a7a\u5c11\u91cf\u8fb9\u6743\uff0c\u5176\u5b83\u90e8\u5206\u4ecd\u6cbf\u7528\u4e4b\u524d\u7ed3\u679c\u3002\n\n\u6211\u4eec\u8003\u8651\u5f53\u5c1d\u8bd5\u5728\u4e00\u4e2abitmask\u4e3a$msk$\u7684\u4f4d\u7f6e\u4e0a\u586b\u5165\u5b57\u7b26$chr$\u7684\u53d8\u5316\uff1a\n\n\u9996\u5148\uff0c\u6211\u4eec\u627e\u51fa\u8fb9$(S,chr)$\u548c$(msk,T)$\u3002\u663e\u7136\uff0c\u8fd9\u4e24\u6761\u8fb9\u5fc5\u987b\u662f\u6ee1\u6d41\u91cf\u7684\uff08\u4e0d\u7136\u6700\u5927\u6d41\u80af\u5b9a\u4e0d\u4e3a$n$\uff09\u3002\n\n\u6211\u4e60\u60ef**\u53ea\u8bb0\u5f55\u8fb9\u7684\u6b8b\u91cf**\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5b83\u4eec\u7684\u53cd\u8fb9\uff0c\u5219\u53cd\u8fb9\u4e0a\u7684\u6b8b\u91cf\u5373\u4e3a\u5f53\u524d\u6b63\u8fb9\u4e0a\u7684\u6d41\u91cf\uff0c\u4e5f\u5c31\u662f\u6b63\u8fb9\u4e0a\u7684\u6d41\u91cf\u4e0a\u9650\uff08\u6700\u5927\u6d41\u5fc5\u5b9a\u6ee1\u6d41\uff09\u3002\u5982\u679c\u53cd\u8fb9\u6b8b\u91cf\u4e3a0\uff0c\u5c31\u610f\u5473\u7740\u6b63\u8fb9\u6d41\u91cf\u4e3a$0$\uff0c\u5c31\u610f\u5473\u7740\u6b63\u8fb9\u6d41\u91cf\u4e0a\u9650\u4e3a$0$\uff0c\u5c31\u610f\u5473\u7740$chr$\u6216$msk$\u5df2\u7ecf\u4e00\u4e2a\u4e0d\u5269\u4e86\uff0c\u56e0\u6b64\u80af\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u76f4\u63a5\u8df3\u6389\u3002\n\n\u5982\u679c\u8fb9$(chr,msk)$\u4e0a\u6d41\u91cf\u4e0d\u4e3a\u96f6\uff08\u5373\u53cd\u8fb9\u6709\u6b8b\u91cf\uff09\uff0c\u5219\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u4f7f\u8fd9\u6761\u8fb9\u4e0a\u6d41\u91cf\u51cf\u4e00\uff0c\u76f4\u63a5\u5224\u4e3a\u5408\u6cd5\u5e76\u9000\u51fa\u3002\n\n\u5426\u5219\uff0c\u6211\u4eec\u627e\u5230\u4e00\u6761\u65b0\u7684\u589e\u5e7f\u8def$(S\\rightarrow 1\\rightarrow x\\rightarrow T)$\uff0c\u5176\u4e2d\u8fd9\u4e2a$x$\u53ef\u4ee5\u662f\u4efb\u4f55\u8282\u70b9\u3002\u5f53\u7136\uff0c\u8fd9\u91cc\u9762\u4efb\u4f55\u4e00\u6761\u8fb9\uff0c\u90fd\u5fc5\u987b\u6709\u6d41\u91cf\uff08\u800c\u4e0d\u662f\u5e38\u89c4\u589e\u5e7f\u8def\u7684\u5b9a\u4e49 **\u201c\u672a\u6ee1\u6d41\u7684\u8def\u5f84\u201d** \uff0c\u56e0\u4e3a\u8fd9\u6761\u589e\u5e7f\u8def\u662f\u4e3a\u9000\u6d41\u800c\u7528\uff09\u3002\n\n\u5f53\u6211\u4eec\u627e\u5230\u8fd9\u6837\u4e00\u6761\u589e\u5e7f\u8def\u540e\uff08\u5fc5\u7136\u5b58\u5728\uff0c\u56e0\u4e3a\u8fb9$(S,chr)$\u51fa\u6765\u7684\u6d41\u91cf\u6700\u7ec8\u80af\u5b9a\u6d41\u5411\u6c47\u70b9\uff09\uff0c\u5c31\u628a\u589e\u5e7f\u8def\u4e0a\u6bcf\u4e00\u6761\u8fb9\u7684\u6d41\u91cf\u5168\u90fd\u51cf\u5c11\u4e00\uff08\u5373\u53cd\u8fb9\u6b8b\u91cf\u51cf\u4e00\uff0c\u6b63\u8fb9\u6b8b\u91cf\u52a0\u4e00\uff09\u3002\n\n\u540c\u65f6\uff0c\u6211\u4eec\u4ece$msk$\u51fa\u53d1\uff0c\u627e\u4e00\u6761\u53cd\u5411\u7684\u589e\u5e7f\u8def\uff0c\u9053\u7406\u8fd8\u662f\u9000\u6d41\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u627e\u7684\u5c31\u662f\u5e38\u89c4\u589e\u5e7f\u8def\uff08\u672a\u6ee1\u6d41\u7684\u8def\u5f84\uff09\uff0c\u56e0\u4e3a\u8fd9\u56de\u7684\u9000\u6d41\u5c31\u662f\u53cd\u8fb9\u6b8b\u91cf\u52a0\u4e00\uff0c\u6b63\u8fb9\u6b8b\u91cf\u51cf\u4e00\u3002\n\n\u5168\u90fd\u505a\u5b8c\u4ee5\u540e\uff0c\u5220\u53bb\u8fb9$(S,chr)$\u4e0e$(msk,T)$\u7684\u5404\u4e00\u70b9\u6d41\u91cf\uff0c\u56e0\u4e3a\u8fd9\u6b21\u5339\u914d\u540e\uff0c$chr$\u548c$msk$\u7684\u51fa\u73b0\u6b21\u6570\u5c06\u4f1a\u5404\u51cf\u5c111\uff0c\u56fa\u7136\u662f\u9700\u8981\u5220\u53bb\u7684\u3002\n\n\u8fd9\u4e48\u4e00\u756a\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u6210\u529f\u62c6\u6389\u4e86\u4e24\u70b9\u6d41\u91cf\uff08\u6b63\u589e\u5e7f\u8def\u7684\u4e00\u70b9\uff0c\u53cd\u589e\u5e7f\u8def\u7684\u4e00\u70b9\uff09\u3002\u7136\u540e\uff0c\u6211\u4eec\u518d\u8981\u8dd1\u6700\u5927\u6d41\u9a8c\u8bc1\u4e0d\u5c0f\u5fc3\u591a\u62c6\u7684\u90a3\u4e00\u70b9\uff08\u5373\u8fb9$(chr,msk)$\u4e0a\u539f\u5e94\u6709\u7684\u90a3\u4e00\u70b9\uff09\u80fd\u4e0d\u80fd\u8865\u56de\u6765\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u90a3\u8fd9\u6b21\u5339\u914d\u5c31\u7b97\u6210\u529f\u4e86\uff0c\u76f4\u63a5\u9000\u51fa\u3002\u5426\u5219\uff0c\u5339\u914d\u5931\u8d25\uff0c\u53bb\u6389\u4e24\u6761\u589e\u5e7f\u8def\u7684\u6240\u6709\u5f71\u54cd\uff0c\u8fd4\u56de\u5339\u914d\u5931\u8d25\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int lim=1<<6;\nint n,mask[100100],m,tot[lim],cmp[6],enm[80][80];\nchar s[100100],ss[6];\nnamespace MaxFlow{\n\tconst int N=10000,M=200000;\n\tint head[N],cur[N],dep[N],cnt,S,T,res;\n\tstruct node{\n\t\tint to,next,val;\n\t}edge[M];\n\tvoid ae(int u,int v,int w){\n\t\tenm[u][v]=cnt,edge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n\t\tenm[v][u]=cnt,edge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tqueue<int>q;\n\tinline bool bfs(){\n\t\tmemset(dep,0,sizeof(dep)),q.push(S),dep[S]=1;\n\t\twhile(!q.empty()){\n\t\t\tregister int x=q.front();q.pop();\n\t\t\tfor(register int i=cur[x]=head[x];i!=-1;i=edge[i].next)if(edge[i].val&&!dep[edge[i].to])dep[edge[i].to]=dep[x]+1,q.push(edge[i].to);\n\t\t}\n\t\treturn dep[T]>0;\n\t}\n\tbool reach;\n\tinline int dfs(int x,int flow){\n\t\tif(x==T){\n\t\t\tres+=flow;\n\t\t\treach=true;\n\t\t\treturn flow;\n\t\t}\n\t\tint used=0;\n\t\tfor(register int &i=cur[x];i!=-1;i=edge[i].next){\n\t\t\tif(!edge[i].val||dep[edge[i].to]!=dep[x]+1)continue;\n\t\t\tregister int ff=dfs(edge[i].to,min(edge[i].val,flow-used));\n\t\t\tif(ff){\n\t\t\t\tedge[i].val-=ff;\n\t\t\t\tedge[i^1].val+=ff;\n\t\t\t\tused+=ff;\n\t\t\t\tif(used==flow)break;\n\t\t\t}\n\t\t}\n\t\treturn used;\n\t}\n\tinline void Dinic(){\n\t\twhile(bfs()){\n\t\t\treach=true;\n\t\t\twhile(reach)reach=false,dfs(S,0x3f3f3f3f);\n\t\t}\n\t}\n}\nusing namespace MaxFlow;\ninline void read(int &x){\n\tx=0;\n\tregister char c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n}\ninline void print(int x){\n\tif(x<=9)putchar('0'+x);\n\telse print(x/10),putchar('0'+x%10);\n}\nbool fillin(int msk,int cha){\n\tif(!(msk&(1<<cha)))return false;\n\tint p1=cha,p2=msk+6;\n\tint e1=enm[S][p1],e2=enm[p2][T];\n\tif(!edge[e1^1].val||!edge[e2^1].val)return false;\n\tedge[e1^1].val--;\n\tedge[e1].val++;\n\tvector<int>afe;\n\tafe.push_back(e1);\n\tfor(int i=head[p1],x;i!=-1;i=edge[i].next){\n\t\tif((i&1)||!edge[i^1].val)continue;\n\t\tafe.push_back(i);\n\t\tedge[i^1].val--;\n\t\tedge[i].val++;\n\t\tx=edge[i].to;\n\t\tfor(int j=head[x];j!=-1;j=edge[j].next){\n\t\t\tif(j&1)continue;\n\t\t\tafe.push_back(j);\n\t\t\tedge[j^1].val--;\n\t\t\tedge[j].val++;\n\t\t\tbreak;\n\t\t}\n\t\tbreak;\n\t}\n\tif(edge[e2].val){edge[e2].val--,edge[e1].val--;return true;}\n\tafe.push_back(e2);\n\tedge[e2^1].val--;\n\tedge[e2].val++;\n\tfor(int i=head[p2],x;i!=-1;i=edge[i].next){\n\t\tif(!(i&1)||!edge[i].val)continue;\n\t\tafe.push_back(i^1);\n\t\tedge[i^1].val++;\n\t\tedge[i].val--;\n\t\tx=edge[i].to;\n\t\tfor(int j=head[x];j!=-1;j=edge[j].next){\n\t\t\tif(!(j&1))continue;\n\t\t\tafe.push_back(j^1);\n\t\t\tedge[j^1].val++;\n\t\t\tedge[j].val--;\n\t\t\tbreak;\n\t\t}\n\t\tbreak;\n\t}\n\tedge[e1].val--;\n\tedge[e2].val--;\n\tres=0;\n\tDinic();\n\tif(res)return true;\n\tedge[e1].val++;\n\tedge[e2].val++;\n\tfor(int i=0;i<afe.size();i++)edge[afe[i]].val--,edge[afe[i]^1].val++;\n\treturn false;\n} \nint main(){\n\tscanf(\"%s\",s+1),n=strlen(s+1),S=6+lim,T=6+lim+1;\n\tfor(register int i=1;i<=n;i++)cmp[s[i]-'a']++;\n\tread(m);\n\tfor(register int i=1,x,y;i<=m;i++){\n\t\tread(x),scanf(\"%s\",ss),y=strlen(ss);\n\t\tfor(register int j=0;j<y;j++)mask[x]|=1<<(ss[j]-'a'); \n\t}\n\tfor(register int i=1;i<=n;i++)if(!mask[i])mask[i]=lim-1;\n\tfor(register int i=1;i<=n;i++)tot[mask[i]]++;\n\tmemset(head,-1,sizeof(head));\n\tfor(register int i=0;i<6;i++)ae(S,i,cmp[i]);\n\tfor(register int i=0;i<lim;i++)for(register int j=0;j<6;j++)if(i&(1<<j))ae(j,i+6,0x3f3f3f3f);\n\tfor(register int i=0;i<lim;i++)ae(i+6,T,tot[i]);\n\tDinic();\n\tif(res!=n){puts(\"Impossible\");return 0;}\n\tfor(register int i=1;i<=n;i++)for(register int j=0;j<6;j++)if(fillin(mask[i],j)){putchar('a'+j);break;}\n\treturn 0;\n}\n```\nCF\u5b98\u65b9\u9898\u89e3\u601d\u8defII\uff1a\u6709\u4e2a\u53eb\u505aHall's theorem\u7684\u5947\u602a\u73a9\u610f\uff0c\u6211\u4e5f\u4e0d\u4f1a\u7528\u2026\u2026\n",
        "postTime": 1583405725,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009G \u3010Allowed Letters\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5730\u65b9\u80fd\u653e\u7684\u662f\u5565\uff0c\u7136\u540e\u5b58\u5728\u4e00\u4e2a vector \u91cc\u9762\uff0c\u5e76\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff08\u56e0\u4e3a $2^8 = 64$\uff09\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5176\u5b9e\u662f\u4e00\u4e2a\u5b8c\u7f8e\u5339\u914d\u95ee\u9898\uff0c\u6839\u636e $Hall$ \u5b9a\u7406\u7136\u540e\u76f4\u63a5\u8d2a\u5fc3\u7684\u4ece $a \\to f$ \u679a\u4e3e\u5c31\u53ef\u4ee5\u4e86\uff08\u6839\u636e\u5b57\u5178\u5e8f\u5927\u5c0f\u5b9a\u4e49\uff09\u3002\n\n~~\u8fd9\u9898\u5199\u8fc7\u4ee3\u7801~~\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,x,y) for(int i=x,I=y+1;i<I;++i)\n#define per(i,x,y) for(int i=x,I=y-1;i>I;--i)\nusing namespace std;\nusing ll=long long;\nvoid cmax(int&x,const int&y){x=x>y?x:y;}\nvoid cmin(int&x,const int&y){x=x<y?x:y;}\ntemplate<class T>istream&operator>>(istream&in,vector<T>&V){for(auto&x:V)in>>x;return in;}\ntemplate<class T>ostream&operator<<(ostream&out,const vector<T>&V){for(auto x:V)out<<x<<' ';return out;}\ntemplate<class T>void sort(vector<T>&V){sort(V.begin(),V.end());}\ntemplate<class T>void reverse(vector<T>&V){reverse(V.begin(),V.end());}\ntemplate<class T>int SZ(const vector<T>&V){return (int)V.size();}\nvoid debug(){cerr<<\"whxorz\"<<'\\n';}\n\nconst int N = 1e5 + 5;\nconst int B = 64;\nint n, m, sz[N];\nint link[N][B];\nint cov[N];\nvector<int> t[N];\nchar s[N];\nstring ans;\n\nbool check(int x) {\n\tfor (int i = 0; i < B; i++) {\n\t\tint tmp = 0;\n\t\tfor (int j = 0; j < 6; j++)\n\t\t\tif (i >> j & 1)\n\t\t\t\ttmp += sz[j];\n\t\tif (link[x][i] < tmp)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcin >> s + 1;\n\tn = strlen(s + 1);\n\t\n\tfor (int i = 1; i <= n; i++)\n\t\tsz[s[i] - 'a']++;\n\t\t\n\tcin >> m;\n\twhile (m--) {\n\t\tint x;\n\t\tstring tmp;\n\t\tcin >> x >> tmp;\n\t\tfor (auto y : tmp)\n\t\t\tt[x].push_back(y - 'a'), cov[x] |= 1 << y - 'a';\n\t}\n\n\tfor (int i = 1; i <= n; i++) {\n\t\tif ((int)t[i].size() == 0) {\n\t\t\tcov[i] = B - 1;\n\t\t\tfor (int j = 0; j < 6; j++)\n\t\t\t\tt[i].push_back(j);\n\t\t}\n\t}\n\t\n\tfor (int i = n; i >= 1; i--) {\n\t\tfor (int j = 0; j < B; j++)\n\t\t\tif (j & cov[i])\n\t\t\t\tlink[i][j] = link[i + 1][j] + 1;\n\t\t\telse\n\t\t\t\tlink[i][j] = link[i + 1][j];\n\t}\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tsort(t[i]);\n\t\t\n\t\tfor (auto x : t[i]) {\n\t\t\tsz[x]--;\n\t\t\tif (check(i + 1)) {\n\t\t\t\tans.push_back(x + 'a');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsz[x]++;\n\t\t}\n\t}\n\tif ((int)ans.size() < n)\n\t\tcout << \"Impossible\" << '\\n';\n\telse\n\t\tcout << ans << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1601097607,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1009G \u3010Allowed Letters\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u662f\u6ca1\u95ee\u9898\u7684\u3002 \u5173\u952e\u662f\u5982\u4f55\u5224\u65ad\u540e\u9762\u65b9\u6848\u80fd\u5426\u6210\u7acb\n\n\u8003\u8651\u8fd9\u662f\u4e00\u4e2a\u5b8c\u7f8e\u5339\u914d\u95ee\u9898\u3002\u800c\u4e14\u4e8c\u5206\u56fe\u53f3\u4fa7\u7684\u96c6\u5408\u53ea\u67096\u79cd\u5143\u7d20\u3002\n\n\u53ef\u4ee5\u81ea\u7136\u60f3\u5230\u970d\u5c14\u5b9a\u7406\uff1a\u4e8c\u90e8\u56feG\u4e2d\u7684\u4e24\u90e8\u5206\u9876\u70b9\u7ec4\u6210\u7684\u96c6\u5408\u5206\u522b\u4e3aX, Y; G\u4e2d\u6709\u4e00\u7ec4\u65e0\u516c\u5171\u70b9\u7684\u8fb9\uff0c\u4e00\u7aef\u6070\u597d\u4e3a\u7ec4\u6210X\u7684\u70b9\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\uff1aX\u4e2d\u7684\u4efb\u610fk\u4e2a\u70b9\u81f3\u5c11\u4e0eY\u4e2d\u7684k\u4e2a\u70b9\u76f8\u90bb\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u679a\u4e3e\u53f3\u8fb9\u70b9\u7684\u7ec4\u6210\uff0c\u6765\u5224\u65ad\u5de6\u8fb9\u70b9\u662f\u5426\u5408\u6cd5\u3002\n\n\u53f3\u8fb9\u70b9\u7684\u7ec4\u6210\u53ea\u67091<<6\u79cd\u60c5\u51b5\u3002 \n\n\u6bcf\u6b21\u9009\u4e00\u4e2a\u5b57\u7b26\u524d\u5224\u65ad\u4e00\u4e0b\u80fd\u5426\u9009\uff0c\u80fd\u9009\u5c31\u9009\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=1e5+5;\nchar s[N],ans[N];\nint n,cnt[1<<6],f[N][1<<6],edge[N],m;\ninline void init(){\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tfor (int i=1;i<=n;i++){\n\t\tfor (int j=0;j<(1<<6);j++){\n\t\t\tif (j&(1<<(s[i]-'a'))){\n\t\t\t\tcnt[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tedge[i]=(1<<6)-1;\n\t}\n\tscanf(\"%d\",&m);\n\tfor (int i=1;i<=m;i++){\n\t\tchar S[10]; int x;\n\t\tscanf(\"%d %s\",&x,S+1);\n\t\tint len=strlen(S+1);\n\t\tedge[x]=0;\n\t\tfor (int j=1;j<=len;j++){\n\t\t\tedge[x]|=1<<(S[j]-'a'); \n\t\t}\n\t}\n}\ninline void solve(){\n\tfor (int i=n;i;i--){\n\t\tfor (int j=0;j<(1<<6);j++){\n\t\t\tf[i][j]=f[i+1][j];\n\t\t\tif ((j&edge[i])==edge[i]) f[i][j]++;\n\t\t}\n\t}\n\tbool ok=0;\n\tfor (int i=1;i<=n;i++){\n\t\tbool flag=false;\n\t\tfor (int j=0;j<6&&!flag;j++){\n\t\t\tif (cnt[1<<j]&&(edge[i]&(1<<j))){\n\t\t\t\tok=1;\n\t\t\t\tfor (int k=0;k<(1<<6)&&ok;k++){\n\t\t\t\t\tif (f[i+1][k]>cnt[k]-((k>>j)&1)){\n\t\t\t\t\t\tok=false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (ok){\n\t\t\t\t\tflag=1;\n\t\t\t\t\tans[i]='a'+j;\n\t\t\t\t\tfor (int k=0;k<(1<<6);k++){\n\t\t\t\t\t\tif (k&(1<<j)) cnt[k]--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!flag){\n\t\t\tputs(\"Impossible\");\n\t\t\treturn;\n\t\t}\n\t}\n\tputs(ans+1);\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1533884484,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009G \u3010Allowed Letters\u3011"
    }
]