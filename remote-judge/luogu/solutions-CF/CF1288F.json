[
    {
        "content": "~~\u51ac\u4ee4\u8425\uff0c\u542c\u4e0d\u61c2\uff0c\u6c34\u9898\u89e3~~\n\n\u770b\u5230$1\\leq n_1,n_2,m,R,B\\leq 200$\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u5e94\u8be5\u5f88\u5bb9\u6613\u60f3\u5230\u7f51\u7edc\u6d41\u5427\u3002\n\n\u52a0\u4e0a\u8d39\u7528\u548c\u201c\u4e25\u683c\u591a\u4e8e\u201d\u8fd9\u4e2a\u9650\u5236\uff0c\u5e94\u8be5\u80fd\u60f3\u5230\u8dd1**\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41**\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u6761\u8fb9$(u,v,l,r,c)$\u8868\u793a\uff1a\u4e00\u6761\u4ece$u$\u5230$v$\uff0c\u4e0b\u754c\u4e3a$l$\uff0c\u4e0a\u754c\u4e3a$r$\uff0c\u8d39\u7528\u4e3a$c$\u7684\u8fb9\u3002\u5b9a\u4e49$s$\u8868\u793a\u6e90\u70b9\uff0c$t$\u8868\u793a\u6c47\u70b9\u3002\n\n\u5177\u4f53\u64cd\u4f5c\u662f\u8fd9\u6837\u7684\uff1a\n\n\u5bf9\u4e8e\u539f\u56fe\u4e2d\u4e00\u6761\u8fb9$(u,v)$\uff0c\u6211\u4eec\u5c06\u5b83\u62c6\u4f5c\u4e24\u6761\u8fb9$(u,v,0,1,R)$\u548c$(v,u,0,1,B)$\u3002\u5982\u679c\u5b83\u4ece\u5de6\u5f80\u53f3\u6d41\uff0c\u5219\u8fd9\u6761\u8fb9\u662f\u7ea2\u8fb9\uff1b\u5982\u679c\u5b83\u4ece\u53f3\u5f80\u5de6\u6d41\uff0c\u5219\u8fd9\u6761\u8fb9\u662f\u84dd\u8fb9\u3002\u5426\u5219\uff0c\u5982\u679c\u5b83\u5de6\u53f3\u90fd\u4e0d\u6d41\uff0c\u5219\u8fd9\u6761\u8fb9\u4e0d\u67d3\u8272\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u6761\u7ea2\u8fb9\uff0c\u5de6\u90e8\u70b9\u4ed8\u51fa\u6d41\u91cf\uff0c\u53f3\u90e8\u70b9\u6536\u5230\u6d41\u91cf\uff1b\u5bf9\u4e8e\u4e00\u6761\u84dd\u8fb9\uff0c\u5de6\u90e8\u70b9\u53d7\u5230\u6d41\u91cf\uff0c\u53f3\u90e8\u70b9\u4ed8\u51fa\u6d41\u91cf\u3002\n\n\u5bf9\u4e8e\u5de6\u90e8\u7684\u7ea2\u70b9\u4ee5\u53ca\u53f3\u90e8\u7684\u84dd\u70b9$x$\uff0c\u4ed8\u51fa\u7684\u6d41\u91cf\u5e94\u8be5\u5927\u4e8e\u6536\u5230\u7684\u6d41\u91cf\uff0c\u56e0\u6b64\u8fde\u8fb9$(s,x,1,\\infty,0)$\uff1b\n\n\u5bf9\u4e8e\u5de6\u90e8\u7684\u84dd\u70b9\u4ee5\u53ca\u53f3\u90e8\u7684\u7ea2\u70b9$x$\uff0c\u4ed8\u51fa\u7684\u6d41\u91cf\u5e94\u8be5\u5927\u4e8e\u6536\u5230\u7684\u6d41\u91cf\uff0c\u56e0\u6b64\u8fde\u8fb9$(x,t,1,\\infty,0)$\uff1b\n\n\u5bf9\u4e8e\u4e00\u4e2a\u65e0\u8272\u70b9$x$\uff0c\u56e0\u4e3a\u5b83\u65e2\u53ef\u4ee5\u4ed8\u51fa\u6d41\u91cf\uff0c\u53c8\u53ef\u4ee5\u53d7\u5230\u6d41\u91cf\uff0c\u56e0\u6b64\u8fde\u8fb9$(s,x,0,INF,0)$\u548c$(x,t,0,INF,0)$\u3002\n\n\u7136\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n1,n2,m,R,B,s,t,tot;\nnamespace MCMF{\n\tconst int N=10000,M=20000;\n\tint head[N],cnt,dis[N],fr[N],id[N],S,T,cost,degree[N],flow;\n\tstruct node{\n\t\tint to,next,val,cost;\n\t}edge[M];\n\tvoid ae(int u,int v,int l,int r,int c){\n\t\tdegree[u]-=l,degree[v]+=l;\n//\t\tprintf(\"%d %d %d %d %d\\n\",u,v,l,r,c);\n\t\tedge[cnt].cost=c,edge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=r-l,head[u]=cnt++;\n\t\tedge[cnt].cost=-c,edge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tqueue<int>q;\n\tbool in[N];\n\tbool SPFA(){\n\t\tmemset(dis,0x3f,sizeof(dis)),dis[S]=0,q.push(S),in[S]=true;\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop(),in[x]=false;\n\t//\t\tprintf(\"%d\\n\",x);\n\t\t\tfor(int i=head[x];i!=-1;i=edge[i].next){\n\t\t\t\tif(!edge[i].val)continue;\n\t\t\t\tif(dis[edge[i].to]>dis[x]+edge[i].cost){\n\t\t\t\t\tdis[edge[i].to]=dis[x]+edge[i].cost,fr[edge[i].to]=x,id[edge[i].to]=i;\n\t\t\t\t\tif(!in[edge[i].to])in[edge[i].to]=true,q.push(edge[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[T]==dis[0])return false;\n\t\tint x=T,mn=0x3f3f3f3f;\n\t\twhile(x!=S)mn=min(mn,edge[id[x]].val),x=fr[x];\n\t\tcost+=dis[T]*mn,x=T,flow+=mn;\n\t\twhile(x!=S)edge[id[x]].val-=mn,edge[id[x]^1].val+=mn,x=fr[x];\n\t\treturn true;\n\t}\n}\nusing namespace MCMF;\nchar ll[210],rr[210];\nint main(){\n\tscanf(\"%d%d%d%d%d\",&n1,&n2,&m,&R,&B),memset(head,-1,sizeof(head)),s=n1+n2+1,t=n1+n2+2,S=n1+n2+3,T=n1+n2+4;\n\tscanf(\"%s%s\",ll+1,rr+1);\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tae(x,y+n1,0,1,R);\n\t\tae(y+n1,x,0,1,B);\n\t}\n\tfor(int i=1;i<=n1;i++){\n\t\tif(ll[i]=='R')ae(s,i,1,0x3f3f3f3f,0);\n\t\tif(ll[i]=='B')ae(i,t,1,0x3f3f3f3f,0);\n\t\tif(ll[i]=='U')ae(s,i,0,0x3f3f3f3f,0),ae(i,t,0,0x3f3f3f3f,0);\n\t}\n\tfor(int i=1;i<=n2;i++){\n\t\tif(rr[i]=='R')ae(i+n1,t,1,0x3f3f3f3f,0);\n\t\tif(rr[i]=='B')ae(s,i+n1,1,0x3f3f3f3f,0);\n\t\tif(rr[i]=='U')ae(s,i+n1,0,0x3f3f3f3f,0),ae(i+n1,t,0,0x3f3f3f3f,0);\n\t}\n\tae(t,s,0,0x3f3f3f3f,0);\n\tfor(int i=1;i<=t;i++){\n\t\tif(degree[i]>0)tot+=degree[i],ae(S,i,0,degree[i],0);\n\t\tif(degree[i]<0)ae(i,T,0,-degree[i],0);\n\t}\n\twhile(SPFA());\n\tif(flow!=tot){puts(\"-1\");return 0;}\n\tprintf(\"%d\\n\",cost);\n\tfor(int i=0;i<4*m;i+=4){\n\t\tif(!edge[i].val)putchar('R');\n\t\telse if(!edge[i+2].val)putchar('B');\n\t\telse putchar('U');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1583810745,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1288F \u3010Red-Blue Graph\u3011"
    },
    {
        "content": "\n\u6b22\u8fce\u6765\u849f\u84bb\u7684\u535a\u5ba2\u56ed $\\to $ [$\\rm George1123$](https://www.cnblogs.com/George1123/p/13685713.html)\n\n---\n## \u9898\u9762\n\n> [CF1288F Red-Blue Graph](https://www.luogu.com.cn/problem/CF1288F)\n\n> \u6709\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u6709 $n_1$ \u4e2a\u70b9\uff0c\u53f3\u8fb9\u6709 $n_2$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u3002\u6bcf\u4e2a\u70b9\u53ef\u80fd\u6709\u4e00\u79cd\u989c\u8272 `R` \u6216\u8005 `B`\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709\uff0c\u4e5f\u5c31\u662f `U`\u3002\u73b0\u5728\u8981\u7ed9\u4e00\u4e9b\u8fb9\u67d3\u8272\uff0c\u628a\u8fb9\u67d3\u6210 `R` \u8981\u82b1\u8d39 $r$ \u7684\u4ee3\u4ef7\uff0c\u628a\u8fb9\u67d3\u6210 `B` \u8981\u82b1\u8d39 $b$ \u7684\u4ee3\u4ef7\uff0c\u8981\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\u4e3a `R` \u7684\u70b9\uff0c\u4e0e\u4e4b\u76f8\u90bb\u7684\u8fb9\u4e2d `R` \u7684\u8fb9**\u4e25\u683c\u591a\u4e8e** `B` \u7684\u8fb9\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\u4e3a `B` \u7684\u70b9\uff0c\u4e0e\u4e4b\u76f8\u90bb\u7684\u8fb9\u4e2d `B` \u7684\u8fb9**\u4e25\u683c\u591a\u4e8e** `R` \u7684\u8fb9\u3002\u6c42\u82b1\u8d39\u6700\u5c0f\u7684\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\uff0c\u65e0\u89e3\u8f93\u51fa $-1$\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1 \\le n_1,n_2,m,r,b\\le 200$\u3002\n\n---\n## \u849f\u84bb\u8bed\n\n\u849f\u84bb\u6628\u5929\u6253\u4e86\u4e00\u573a $\\rm VP$\uff0c\u7136\u540e\u4eca\u5929\u8865\u4e86\u4e00\u4e2a\u4e0b\u5348\u7684\u9898\u3002\u4e2d\u9014\u7684\u65f6\u5019\uff0czaky \u8bf4\u8981\u6253\u849f\u84bb\u6253\u8fc7\u7684 $\\rm VP$\uff0c\u4e8e\u662f\u6039\u53bb\u6253\u4e86\u3002\u7b49\u849f\u84bb\u8865\u5b8c\u9898\u540e\u849f\u84bb\u770b\u5230 zaky \u7ad9\u4e86\u8d77\u6765\uff0c\u8bf4\uff1a\u201c\u6715 AK \u4e86\u201d\u3002\n\n\u8fd9\u9898\u6709\u4e00\u4e2a**\u4e0d\u9700\u8981\u4e0a\u4e0b\u754c\u53ea\u9700\u8981\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41**\u7684\u9a9a\u64cd\u4f5c\uff0c\u849f\u84bb\u89c9\u5f97\u633a\u5999\u7684\u4e8e\u662f\u5199\u7bc7\u9898\u89e3\u3002\n\n---\n## \u849f\u84bb\u89e3\n\n\u5148\u4ee4\u539f\u56fe\u6bcf\u4e2a\u53f3\u8fb9\u7684\u8282\u70b9 $u$ \u7f16\u53f7\u4e3a $u+n_1$\uff0c\u6709\u8272\u70b9\u4e2a\u6570\u4e3a $cnt$\u3002\n\n\u9996\u5148\u5c06\u4e00\u6761\u4e8c\u5206\u56fe\u4e0a\u7684\u8fb9 $(u,v)$ \u8f6c\u5316\u4e3a\u7f51\u7edc\u6d41\u4e0a\u7684\u8fb9\uff1a\n\n$(u,v,flow=1,cost=r)$\uff0c\u5982\u679c\u6d41\u4e86\u8868\u793a\u9009\u4e86\u7ea2\u8272\uff1b\n\n$(v,u,flow=1,cost=b)$\uff0c\u5982\u679c\u6d41\u4e86\u8868\u793a\u9009\u4e86\u84dd\u8272\uff1b\n\n\u90fd\u6ca1\u6d41\u8868\u793a\u65e0\u8272\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5de6\u8fb9\u7684\u8282\u70b9 $u$\uff0c\u5982\u679c\u989c\u8272\u4e3a `R`\uff0c\u8fde $(s,u,flow=1,cost=-\\infty),(s,u,flow=\\infty,cost=0)$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u8fb9\u7684\u8282\u70b9 $u$\uff0c\u5982\u679c\u989c\u8272\u4e3a `R`\uff0c\u8fde $(u,t,flow=1,cost=-\\infty),(u,t,flow=\\infty,cost=0)$\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f15\u8bf1\u7f51\u7edc\u6d41\u7b97\u6cd5\u5148\u6ee1\u8db3\u7ea2\u70b9\u7684\u9650\u5236\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5de6\u8fb9\u7684\u8282\u70b9 $u$\uff0c\u5982\u679c\u989c\u8272\u4e3a `B`\uff0c\u8fde $(u,t,flow=1,cost=-\\infty),(u,t,flow=\\infty,cost=0)$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u8fb9\u7684\u8282\u70b9 $u$\uff0c\u5982\u679c\u989c\u8272\u4e3a `B`\uff0c\u8fde $(s,u,flow=1,cost=-\\infty),(s,u,flow=\\infty,cost=0)$\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f15\u8bf1\u7f51\u7edc\u6d41\u7b97\u6cd5\u5148\u6ee1\u8db3\u84dd\u70b9\u7684\u9650\u5236\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u5982\u679c\u989c\u8272\u4e3a `U`\uff0c\u8fde $(s,u,flow=\\infty,cost=0),(u,t,flow=\\infty,cost=0)$\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5b83\u4e0d\u4f18\u5148\u8003\u8651\uff0c\u540c\u65f6\u53ef\u4ee5\u9009\u62e9\u8f85\u52a9\u6ee1\u8db3\u53e6\u5916\u4e24\u79cd\u989c\u8272\u7684\u6761\u4ef6\u3002\n\n\u7136\u540e\u8dd1**\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41**\u3002\n\n\u5982\u679c\u6ee1\u8db3\u4e86\u6240\u6709\u6761\u4ef6\uff0c\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u5305\u542b $cnt$ \u4e2a $-\\infty$\uff0c\u6240\u4ee5\u8981\u7ed9\u8dd1\u51fa\u6765\u7684\u603b $cost$ \u52a0\u4e0a $cnt\\cdot \\infty$\u3002\u5982\u679c $cost\\ge \\infty$\uff0c\u90a3\u4e48\u80af\u5b9a\u6709\u6761\u4ef6\u6ca1\u6709\u6ee1\u8db3\uff0c\u8f93\u51fa $-1$\u3002\n\n\u8fd9\u6837\u76f4\u63a5\u4ea4\u4f1a WA#$19$\uff0c\u56e0\u4e3a\u6709\u4e2a\u5c0f\u95ee\u9898\uff1a\u867d\u7136\u8fd9\u662f\u4e2a\u6700\u5c0f\u8d39\u7528\u6d41\uff0c\u4f46\u662f\u5b83\u6bd5\u7adf\u8fd8\u662f\u4e2a\u6700\u5927\u6d41\uff0c\u6240\u4ee5\u5b83\u628a\u6240\u6709\u8d1f\u6743\u8def\u5f84\u8dd1\u5b8c\u540e\u5c31\u5f00\u59cb\u8dd1\u6b63\u6743\u8def\u5f84\u4e86\u3002\n\n\u5982\u679c\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u8dd1\u8d1f\u6743\u8def\u5f84\u5c31\u591f\u4e86\uff0c\u6b63\u6743\u8def\u5f84\u76f8\u5f53\u4e8e\u9009\u4e86\u591a\u4f59\u7684\u6709\u8272\u8fb9\uff0c\u8fd9\u662f\u4e0d\u5fc5\u8981\u7684\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u7528 $\\rm EK$ \u7b97\u6cd5\uff0c\u6ee1\u8db3\u6761\u4ef6\u548c\u8dd1\u591a\u4f59\u8fb9\u80af\u5b9a\u662f\u5206\u5f00\u8ba1\u7b97\u7684\uff0c\u800c\u4e14\u80af\u5b9a\u662f\u5148\u8d1f\u6743\u518d\u6b63\u6743\uff0c\u6240\u6709\u53ef\u4ee5\u5728\u5206\u754c\u70b9\u4e0a `break`\uff0c\u4e0d\u518d\u8dd1\u7f51\u7edc\u6d41\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u8fd8\u57fa\u4e8e\u67d3\u8272\u8fb9\u7684\u6b63\u6743\u4ee3\u4ef7\u4f7f\u5f97\u6709\u8272\u8fb9\u5c3d\u91cf\u5730\u5c11\u3002\n\n---\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair((a),(b))\n#define x first\n#define y second\n#define be(a) (a).begin()\n#define en(a) (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define R(i,a,b) for(int i=(a),I=(b);i<I;i++)\n#define L(i,a,b) for(int i=(b)-1,I=(a)-1;i>I;i--)\nconst int iinf=0x3f3f3f3f;\nconst ll linf=0x3f3f3f3f3f3f3f3f;\n\n//Mcmf\nconst int T=402;\nint tn,s,t;\nvector<int> e[T],to,fw,co;\nint  adde(int u,int v,int w,int c){\n//\tcout<<u<<\" - \"<<v<<\" (\"<<w<<\" , \"<<c<<\")\\n\";\n\te[u].pb(sz(to)),to.pb(v),fw.pb(w),co.pb(+c);\n\te[v].pb(sz(to)),to.pb(u),fw.pb(0),co.pb(-c);\n\treturn sz(to)-2;\n}\nint dep[T],pre[T]; bool vis[T];\nbool spfa(){\n\tfill(vis,vis+tn,false);\n\tfill(dep,dep+tn,iinf);\n\tfill(pre,pre+tn,-1);\n\tqueue<int> q; q.push(s),vis[s]=true,dep[s]=0;\n\twhile(sz(q)){\n\t\tint u=q.front(); q.pop(),vis[u]=false;\n\t\tfor(int v:e[u])if(fw[v]&&dep[to[v]]>dep[u]+co[v]){\n\t\t\tdep[to[v]]=dep[u]+co[v],pre[to[v]]=v;\n\t\t\tif(!vis[to[v]]) vis[to[v]]=true,q.push(to[v]);\n\t\t}\n\t}\n\treturn dep[t]<iinf;\n}\nint flow,cost;\nvoid mcmf(){\n\twhile(spfa()){\n\t\tif(dep[t]>=0) break; // \u9898\u89e3\u7684\u7cbe\u534e\n\t\tint f=iinf;\n\t\tfor(int i=t;i!=s;i=to[1^pre[i]]) f=min(f,fw[pre[i]]);\n\t\tfor(int i=t;i!=s;i=to[1^pre[i]]) fw[pre[i]]-=f,fw[pre[i]^1]+=f;\n\t\tcost+=dep[t]*f,flow+=f;\n\t}\t\n}\n\n//Data\nconst int N=200;\nint n1,n2,m,r,b,re[N],be[N],cnt;\nstring sa,sb;\n\n//Main\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n1>>n2>>m>>r>>b>>sa>>sb;\n\ttn=(t=(s=n1+n2)+1)+1; \n\tR(i,0,m){\n\t\tint u,v; cin>>u>>v,--u,--v;\n\t\tre[i]=adde(u,v+n1,1,r),be[i]=adde(v+n1,u,1,b);\n\t}\n\tint mx=4e6;\n\tR(i,0,n1){\n\t\tif(sa[i]=='R') adde(s,i,1,-mx),cnt++;\n\t\telse adde(i,t,mx,0);\n\t\tif(sa[i]=='B') adde(i,t,1,-mx),cnt++;\n\t\telse adde(s,i,mx,0);\n\t}\n\tR(i,0,n2){\n\t\tif(sb[i]=='R') adde(i+n1,t,1,-mx),cnt++;\n\t\telse adde(s,i+n1,mx,0);\n\t\tif(sb[i]=='B') adde(s,i+n1,1,-mx),cnt++;\n\t\telse adde(i+n1,t,mx,0);\n\t}\n\tmcmf(),cost+=cnt*mx;\n\tif(cost>=mx) cout<<-1<<'\\n',exit(0);\n\tcout<<cost<<'\\n';\n\tR(i,0,m){\n\t\tif(fw[re[i]^1]) cout<<'R';\n\t\telse if(fw[be[i]^1]) cout<<'B';\n\t\telse cout<<'U';\n\t}\n\tcout<<'\\n';\n\treturn 0;\n}\n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1600330299,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1288F \u3010Red-Blue Graph\u3011"
    },
    {
        "content": "\u8003\u8651\u7f51\u7edc\u6d41\u5efa\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9 $\\left<u,v\\right>$\uff0c\u5728\u7f51\u7edc\u6d41\u56fe\u4e0a\u5efa\u7acb\u4e24\u6761\u8fb9\uff1a$u\\to v$\uff0c\u5982\u679c\u6d41\u8868\u793a\u5c06\u8be5\u8fb9\u67d3\u6210\u7ea2\u8272\uff0c$v\\to u$\uff0c\u8868\u793a\u5c06\u6539\u53d8\u67d3\u6210\u9ed1\u8272\u3002\n\n\u5efa\u7acb\u8d85\u6e90 $s$ \u548c\u8d85\u6c47 $t$\uff0c\u8003\u8651\u5de6\u8fb9\u7ea2\u8272\u70b9\uff0c$s$ \u5411\u8be5\u70b9\u8fde\u4e00\u6761\u4e0b\u754c\u4e3a $1$ \u7684\u8fb9\uff0c\u8868\u793a\u5f3a\u5236\u6d41\u7ea2\u5927\u4e8e\u6d41\u9ed1\uff0c\u5bf9\u4e8e\u5de6\u8fb9\u9ed1\u8272\u70b9\uff0c\u8be5\u70b9\u5411 $t$ \u8fde\u4e00\u6761\u4e0b\u754c\u4e3a $1$ \u7684\u8fb9\uff0c\u8868\u793a\u5f3a\u5236\u6d41\u9ed1\u5927\u4e8e\u6d41\u7ea2\uff0c\u53f3\u8fb9\u540c\u7406\u3002\n\n\u6700\u540e\u8dd1\u4e00\u904d\u8d39\u7528\u6d41\u5373\u53ef\u3002",
        "postTime": 1579604130,
        "uid": 84088,
        "name": "pufanyi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1288F \u3010Red-Blue Graph\u3011"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/1288/problem/F) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1288F)\n\n\u597d\u4e45\u6ca1\u6709\u5199\u8fc7\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u4e86\uff0c\u5148\u6765\u4e00\u9898\u518d\u8bf4\uff08\n\n\u9996\u5148\u5148\u5047\u8bbe\u6240\u6709\u8fb9\u90fd\u662f\u84dd\u8fb9\uff0c\u90a3\u4e48\u8fd9\u6837\u9996\u5148\u5c31\u6709 $b\\times m$ \u7684\u82b1\u8d39\uff0c\u4f46\u662f\u8fd9\u6837\u4e0d\u4e00\u5b9a\u7b26\u5408\u6761\u4ef6\uff0c\u5c31\u7b97\u7b26\u5408\u6761\u4ef6\u4e5f\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u56e0\u6b64\u9700\u8981\u8c03\u6574\u3002\n\n\u663e\u7136\u4e00\u4e2a\u70b9\u4e0e\u5176\u76f8\u8fde\u7684\u8fb9\u4e2d\uff0c\u7ea2\u8fb9\u4e0e\u84dd\u8fb9\u7684\u5927\u5c0f\u5173\u7cfb\u53ef\u7528 $b-r$ \u6765\u8861\u91cf\uff0c\u5176\u4e2d $b,r$ \u5206\u522b\u8868\u793a\u4e0e\u5176\u76f8\u8fde\u7684\u84dd\u8fb9\u3001\u7ea2\u8fb9\u7684\u6570\u91cf\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u53cd\u6094\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u8003\u8651\u5c06\u4e00\u6761\u84dd\u8fb9\u53d8\u6210\u7ea2\u8fb9\u4f1a\u5bf9 $b-r$ \u4ea7\u751f\u600e\u6837\u7684\u5f71\u54cd\uff0c\u663e\u7136\u8fd9\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff0c\u4e00\u662f\u84dd $\\to$ \u65e0\u7684\u9636\u6bb5\uff0c$b-r$ \u7684\u503c\u51cf\u4e00\uff0c\u800c\u662f\u65e0 $\\to$ \u7ea2\u7684\u9636\u6bb5\uff0c$b-r$ \u7684\u503c\u518d\u6b21\u51cf\u4e00\u3002\u56e0\u6b64\u8003\u8651\u7528\u4e24\u6761\u8fb9\u8868\u793a\u8fd9\u4e24\u4e2a\u9636\u6bb5\uff0c\u4e00\u662f $u\\to v$\uff0c\u5bb9\u91cf $1$ \u8d39\u7528 $-b$ \u7684\u8fb9\uff0c\u8868\u793a\u84dd $\\to$ \u65e0\u7684\u9636\u6bb5\uff0c\u800c\u662f $u\\to v$\uff0c\u5bb9\u91cf $1$ \u8d39\u7528 $r$ \u7684\u8fb9\uff0c\u8868\u793a\u65e0 $\\to$ \u7ea2\u7684\u9636\u6bb5\u3002\u7531\u4e8e\u6211\u4eec\u8981\u6c42\u6700\u5c0f\u8d39\u7528\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e24\u6761\u91cd\u8fb9\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u4f18\u5148\u9009\u8d39\u7528\u5c0f\u7684\u8d70\uff0c\u5373\u8d39\u7528 $-b$ \u7684\u8fb9\uff0c\u7b26\u5408\u6211\u4eec\u7684\u5efa\u56fe\u65b9\u5f0f\u3002\u800c\u7ecf\u6211\u4eec\u8fd9\u4e48\u4e00\u5efa\u56fe\uff0c\u4e00\u4e2a\u70b9\u7684 $b-r$ \u5c31\u5f88\u597d\u8868\u793a\u4e86\uff1a\u5c31\u662f\u8be5\u70b9\u7684\u5ea6\u51cf\u53bb\u7ecf\u8fc7\u8be5\u70b9\u7684\u6d41\u7684\u6761\u6570\u3002\u63a5\u4e0b\u6765\u8003\u8651\u4e00\u4e2a\u70b9\u7684\u9650\u5236\uff0c\u5bf9\u4e8e\u7ea2\u70b9 $x$\uff0c\u5b83\u7684 $b-r$ \u5e94 $<0$\uff0c\u56e0\u6b64\u7ecf\u8fc7\u5b83\u7684\u6d41\u7684\u6761\u6570\u5e94 $>deg_x$\uff0c\u56e0\u6b64\u5982\u679c\u5b83\u5728\u5de6\u90e8\uff0c\u6211\u4eec\u5c31\u8fde\u8fb9 $(S,x,deg_x+1,2deg_x,0)$\uff0c\u5982\u679c\u5b83\u5728\u53f3\u90e8\uff0c\u6211\u4eec\u5c31\u8fde\u8fb9 $(x,T,deg_x+1,2deg_x,0)$\u3002\u5bf9\u4e8e\u84dd\u70b9 $x$\uff0c\u5b83\u7684 $b-r$ \u5e94 $>0$\uff0c\u56e0\u6b64\u7ecf\u8fc7\u5b83\u7684\u6d41\u7684\u6761\u6570\u5e94 $<deg_x$\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u7528\u628a\u4e0a\u9762\u8fde\u7684\u8fb9\u4e2d $(deg_x+1,2deg_x)$ \u5168\u90e8\u6362\u6210 $(0,deg_x-1)$ \u5373\u53ef\u3002\u5bf9\u4e8e\u65e0\u8272\u70b9\u663e\u7136\u6ca1\u6709\u4efb\u4f55\u9650\u5236\uff0c\u76f4\u63a5\u8fde $(0,2deg_x)$ \u7684\u8fb9\u5373\u53ef\u3002\u7136\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41\uff0c\u7b54\u6848\u5c31\u662f\u8d39\u7528 $+bm$\u3002\n\n\u76f4\u63a5\u8dd1\u4f1a\u51fa\u73b0\u8d1f\u73af\uff0c\u56e0\u4e3a\u5728\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41\u4e2d\u6211\u4eec\u8fde\u4e86 $T\\to S$ \u7684\u8fb9\uff0c\u800c\u8fd9\u6761\u8fb9\u4e0e\u4e2d\u95f4\u6211\u4eec\u8fde\u7684\u8d39\u7528\u4e3a $-b$ \u7684\u8fb9\u6784\u6210\u4e86\u5927\u5c0f\u4e3a $-b$ \u7684\u73af\uff0c\u56e0\u6b64\u9700\u8981\u6d88\u5708\u3002\u5177\u4f53\u6d88\u5708\u65b9\u6cd5\u5c31\u662f\u5047\u8bbe\u8d1f\u6743\u8fb9\u6ee1\u6d41\uff0c\u7136\u540e\u6309\u7167\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u5957\u8def\u5efa\u7acb\u865a\u62df\u6e90\u6c47\u7136\u540e\u8fde\u76f8\u5e94\u7684\u8fb9\u8c03\u6574\u6d41\u91cf\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\text{\u80fd\u8fc7})$\u3002\n\n```cpp\nconst int MAXN=200;\nconst int MAXV=404;\nconst int MAXE=5000;\nint n1,n2,m,r,b,deg[MAXV+5];char s1[MAXN+5],s2[MAXN+5];\nint S1,S2,T1,T2,hd[MAXV+5],to[MAXE+5],nxt[MAXE+5],cst[MAXE+5],cap[MAXE+5],ec=1;\nvoid adde(int u,int v,int f,int c){\n\tif(f<0) puts(\"-1\"),exit(0);\n//\tprintf(\"%d %d %d %d\\n\",u,v,f,c);\n\tto[++ec]=v;cap[ec]=f;cst[ec]=c;nxt[ec]=hd[u];hd[u]=ec;\n\tto[++ec]=u;cap[ec]=0;cst[ec]=-c;nxt[ec]=hd[v];hd[v]=ec;\n}\nint sum_has,sum_cst;\nvoid _adde(int u,int v,int l,int r,int c){\n\tadde(u,v,r-l,c);adde(S2,v,l,0);adde(u,T2,l,0);\n\tsum_has+=l;sum_cst+=1ll*l*c;\n}\nint dis[MAXV+5],lste[MAXV+5],flw[MAXV+5],pre[MAXV+5];\nbool inq[MAXV+5];\nbool getdis(int S,int T){\n\tmemset(dis,63,sizeof(dis));memset(flw,0,sizeof(flw));\n\tdis[S]=0;flw[S]=INF;inq[S]=1;queue<int> q;q.push(S);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();inq[x]=0;\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e],z=cap[e],w=cst[e];\n\t\t\tif(z&&dis[y]>dis[x]+w){\n\t\t\t\tdis[y]=dis[x]+w;flw[y]=min(flw[x],z);\n\t\t\t\tpre[y]=x;lste[y]=e;\n\t\t\t\tif(!inq[y]) inq[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t} return dis[T]<INF;\n}\npair<int,int> mcmf(int S,int T){\n\tint mxfl=0,mncst=0;\n\twhile(getdis(S,T)){\n\t\tmncst+=1ll*flw[T]*dis[T];mxfl+=flw[T];\n\t\tfor(int i=T;i^S;i=pre[i]){\n\t\t\tcap[lste[i]]-=flw[T];cap[lste[i]^1]+=flw[T];\n\t\t}\n\t} return mp(mxfl,mncst);\n}\nint main(){\n\tscanf(\"%d%d%d%d%d%s%s\",&n1,&n2,&m,&r,&b,s1+1,s2+1);\n\tT2=(S2=(T1=(S1=n1+n2+1)+1)+1)+1;\n\tfor(int i=1,u,v;i<=m;i++){\n\t\tscanf(\"%d%d\",&u,&v);v+=n1;\n\t\tdeg[u]++;deg[v]++;adde(v,u,1,b);\n\t\tadde(S2,v,1,0);adde(u,T2,1,0);\n\t\tsum_cst-=b;sum_has++;adde(u,v,1,r);\n\t}\n\tfor(int i=1;i<=n1;i++){\n\t\tif(s1[i]=='R') _adde(S1,i,deg[i]+1,deg[i]*2,0);\n\t\tif(s1[i]=='B') adde(S1,i,deg[i]-1,0);\n\t\tif(s1[i]=='U') adde(S1,i,deg[i]*2,0);\n\t}\n\tfor(int i=1;i<=n2;i++){\n\t\tif(s2[i]=='R') _adde(i+n1,T1,deg[i+n1]+1,deg[i+n1]*2,0);\n\t\tif(s2[i]=='B') adde(i+n1,T1,deg[i+n1]-1,0);\n\t\tif(s2[i]=='U') adde(i+n1,T1,deg[i+n1]*2,0);\n\t} adde(T1,S1,INF,0);\n\tpair<int,int> pr=mcmf(S2,T2);\n\tif(pr.fi!=sum_has) return puts(\"-1\"),0;\n\tint res=sum_cst+pr.se+m*b;\n\tprintf(\"%d\\n\",res);\n\tfor(int i=3,j=1;j<=m;i+=8,j++){\n\t\tif(cap[i]==1) putchar('B');\n\t\telse if(cap[i+6]==1) putchar('R');\n\t\telse putchar('U');\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1633530183,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1288F Red-Blue Graph"
    },
    {
        "content": "# CF1288F\n\n## \u9898\u610f\n\n\u6709\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u6709 $n_1$ \u4e2a\u70b9\uff0c\u53f3\u8fb9\u6709 $n_2$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u3002\u6bcf\u4e2a\u70b9\u53ef\u80fd\u6709\u4e00\u79cd\u989c\u8272 `R` \u6216\u8005 `B`\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709\uff0c\u4e5f\u5c31\u662f `U`\u3002\u73b0\u5728\u8981\u7ed9\u4e00\u4e9b\u8fb9\u67d3\u8272\uff0c\u628a\u8fb9\u67d3\u6210 `R` \u8981\u82b1\u8d39 $r$ \u7684\u4ee3\u4ef7\uff0c\u628a\u8fb9\u67d3\u6210 `B` \u8981\u82b1\u8d39 $b$ \u7684\u4ee3\u4ef7\uff0c\u8981\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\u4e3a `R` \u7684\u70b9\uff0c\u4e0e\u4e4b\u76f8\u90bb\u7684\u8fb9\u4e2d `R` \u7684\u8fb9**\u4e25\u683c\u591a\u4e8e** `B` \u7684\u8fb9\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\u4e3a `B` \u7684\u70b9\uff0c\u4e0e\u4e4b\u76f8\u90bb\u7684\u8fb9\u4e2d `B` \u7684\u8fb9**\u4e25\u683c\u591a\u4e8e** `R` \u7684\u8fb9\u3002\u6c42\u82b1\u8d39\u6700\u5c0f\u7684\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\uff0c\u65e0\u89e3\u8f93\u51fa $-1$\u3002\u5176\u4e2d $1 \\le n_1, n_2, m, r, b \\le 200$\n\n## \u5206\u6790\n\n\u7ecf\u8fc7\u5206\u6790\uff0c\u4e0d\u4f1a\u3002\u770b\u5230 200 \u7684\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u59a8\u8003\u8651\u7f51\u7edc\u6d41\u3002\u5982\u679c\uff0c\u4e00\u4e2a\u70b9\u662f `R` \u70b9\uff0c\u90a3\u4e48 `R` \u8fb9\u8981\u6bd4 `B` \u8fb9\u8981\u591a\u81f3\u5c11\u4e00\u4e2a\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u662f `B` \u70b9\uff0c\u90a3\u4e48 `B` \u8fb9\u4f1a\u6bd4 `R` \u8fb9\u591a\u4e00\u3002\n\n\u90a3\u4e48\uff0c\u8003\u8651\u5982\u4f55\u5efa\u6a21\u53bb\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u53ef\u4ee5\u4f7f\u7528\u548c\u6d41\u91cf\u76f8\u5173\u7684\u53d8\u89e3\u51b3\u4ed6\uff0c\u4ee4\u4e00\u4e2a\u8fb9 $(u,v,low, up, w)$ \u8868\u793a\u4ece $u$ \u5230 $v$ \u6709\u4e00\u4e2a\u4e0b\u754c\u662f $low$ \u4e0a\u754c\u662f $up$ \u7684\u4e00\u6761\u5f27\uff0c\u628a\u539f\u56fe\u7684\u4e00\u6761\u8fb9 $(x,y)$ \u53d8\u4e3a\u7f51\u7edc\u6d41\u957f\u7684\u4e24\u4e2a\u8fb9 $(x,y,0,1,R)$ \u548c $(y,x,0, 1,B)$\u3002\u5982\u679c\u6d41\u5411\u7b2c\u4e00\u4e2a\u8fb9\u5c31\u662f\u82b1\u8d39 $R$ \u53d8\u4e3a\u7ea2\u8fb9\uff0c\u5982\u679c\u8d70\u7b2c\u4e8c\u4e2a\u8fb9\u5c31\u662f\u82b1\u8d39 $B$ \u53d8\u4e3a\u84dd\u8272\u8fb9\u3002\n\n\u5bf9\u4e8e\u5de6\u8fb9\u7684\u7ea2\u8272\u70b9\u548c\u53f3\u8fb9\u7684\u84dd\u8272\u70b9\uff0c\u4ed6\u4eec\u7684\u6d41\u91cf\u662f\u6ea2\u51fa\u7684\uff0c\u6240\u4ee5\u4ece $(s,i,1,\\inf,0)$ \u3002\u5bf9\u4e8e\u53f3\u8fb9\u7684\u7ea2\u8272\u70b9\u548c\u5de6\u8fb9\u7684\u84dd\u8272\u70b9\uff0c\u4ed6\u4eec\u7684\u6d41\u91cf\u662f\u7f3a\u5931\u7684\uff0c\u6240\u4ee5\u4ece $(i,t,1,\\inf,0)$\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u662f $U$\uff0c\u90a3\u4e48\u5efa\u7acb $(s,i,0,\\inf, 0)$ \u548c $(i,t,0,\\inf,0)$ \u8868\u793a\u6d41\u91cf\u548b\u6837\u6211\u4e0d\u7ba1\u3002\u8dd1\u4e00\u4e2a\u4e0a\u4e0b\u754c\u7684\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41\u5373\u53ef\u3002\n\n```c++\n#include <bits/stdc++.h>\nconst int N = 505, inf = 0x3f3f3f3f;\nusing std::pair;\nnamespace QS {\n int n, s, t, S, T, cnt, h[N], cur[N], in[N], dis[N], maxflow, mincost;\n bool vis[N];\n struct Edge {\n  int lac, flow, w, to;\n  void insert(int x, int y, int z, int W) {\n   lac = h[x];\n   to = y;\n   w = W;\n   flow = z;\n   h[x] = cnt++;\n  }\n } edge[N * N];\n void init(int ops) {\n  n = ops;\n  s = 0;\n  t = n + 1;\n  S = t + 1;\n  T = S + 1;\n  memset(h, -1, sizeof h);\n  return;\n }\n inline void Add_Edge(int w, int up, int low, int v, int u) {\n  in[u] -= low;\n  in[v] += low;\n  edge[cnt].insert(u, v, up - low, w);\n  edge[cnt].insert(v, u, 0, -w);\n  return;\n }\n inline void Add_Edge(int w, int flow, int v, int u) {\n  edge[cnt].insert(u, v, flow, w);\n  edge[cnt].insert(v, u, 0, -w);\n  return;\n }\n int Dfs(int u, int sum) {\n  if (u == T)\n   return sum;\n  int min = sum;\n  vis[u] = 1;\n  for (int i = cur[u], to; ~i; i = edge[i].lac) {\n   cur[u] = i;\n   if (edge[i].flow && dis[to = edge[i].to] == dis[u] + edge[i].w && !vis[to]) {\n    int ret = Dfs(to, std::min(min, edge[i].flow));\n    min -= ret;\n    edge[i].flow -= ret;\n    edge[i ^ 1].flow += ret;\n    if (!min)\n     break;\n   }\n  }\n  vis[u] = 0;\n  return sum - min;\n }\n bool spfa() {\n  memset(dis, 63, sizeof dis);\n  dis[S] = 0;\n  std::queue<int> Q;\n  Q.push(S);\n  while (!Q.empty()) {\n   int fr = Q.front();\n   Q.pop();\n   vis[fr] = 0;\n   for (int i = h[fr], to; ~i; i = edge[i].lac) {\n    if (edge[i].flow && dis[(to = edge[i].to)] > dis[fr] + edge[i].w) {\n     dis[to] = dis[fr] + edge[i].w;\n     if (!vis[to])\n      Q.push(to),\n      vis[to] = 1;\n    }\n   }\n  }\n  return dis[T] != inf;\n }\n pair<int, int> Dinitz() {\n  maxflow = 0, mincost = 0;\n  while (spfa()) {\n   memcpy(cur, h, sizeof cur);\n   int flow = Dfs(S, inf);\n   mincost += flow * dis[T];\n   maxflow += flow;\n  }\n  return std::make_pair(maxflow, mincost);\n }\n};\nint n1, n2, m, R, B;\nchar c1[N], c2[N];\nint main() {\n scanf(\"%d %d %d %d %d\", &n1, &n2, &m, &R, &B);\n QS::init(n1 + n2);\n scanf(\"%s %s\", c1 + 1, c2 + 1);\n int x, y;\n for (int i = 1; i <= m; ++i) {\n  scanf(\"%d %d\", &x, &y);\n  QS::Add_Edge(R, 1, 0, y + n1, x);\n  QS::Add_Edge(B, 1, 0, x, y + n1);\n }\n for (int i = 1; i <= n1; ++i) {\n  if (c1[i] == 'R')\n   QS::Add_Edge(0, inf, 1, i, QS::s);\n  if (c1[i] == 'B')\n   QS::Add_Edge(0, inf, 1, QS::t, i);\n  if (c1[i] == 'U')\n   QS::Add_Edge(0, inf, 0, i, QS::s),\n   QS::Add_Edge(0, inf, 0, QS::t, i);\n }\n for (int i = 1; i <= n2; ++i) {\n  if (c2[i] == 'B')\n   QS::Add_Edge(0, inf, 1, i + n1, QS::s);\n  if (c2[i] == 'R')\n   QS::Add_Edge(0, inf, 1, QS::t, i + n1);\n  if (c2[i] == 'U')\n   QS::Add_Edge(0, inf, 0, i + n1, QS::s),\n   QS::Add_Edge(0, inf, 0, QS::t, i + n1);\n }\n QS::Add_Edge(0, inf, 0, QS::s, QS::t);\n int sum = 0;\n for (int i = QS::s; i <= QS::t; ++i)\n  if (QS::in[i] > 0)\n   sum += QS::in[i],\n   QS::Add_Edge(0, QS::in[i], 0, i, QS::S);\n  else\n   QS::Add_Edge(0, -QS::in[i], 0, QS::T, i);\n pair<int, int> res = QS::Dinitz();\n if (res.first ^ sum)\n  return puts(\"-1\"), 0;\n printf(\"%d\\n\", res.second);\n for (int i = 0; i < 4 * m; i += 4) {\n  if (!QS::edge[i].flow)\n   putchar('R');\n  else if (!QS::edge[i + 2].flow)\n   putchar('B');\n  else\n   putchar('U');\n }\n return 0;\n}\n```\n\n\u771f\u7684\u795e\u4ed9\u9898\u76ee\uff01",
        "postTime": 1604905059,
        "uid": 232125,
        "name": "SiRiehn_nx",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1288F \u3010Red-Blue Graph\u3011"
    }
]