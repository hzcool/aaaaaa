[
    {
        "content": "# CF81B Sequence Formatting \u9898\u89e3\n\u672c\u6587\u4e2d\u7684\u4ee3\u7801\u5747\u4e3a Python \u8bed\u8a00\u4e66\u5199\uff0c\u4f46\u5e76\u4e0d\u96be\u7406\u89e3\uff0c\u53ef\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\n## \u4e00\u3001\u9898\u76ee\u5206\u6790\n~~\u4e4d\u4e00\u770b\u8fd9\u9053\u9898\u662f\u4e2a\u6a21\u62df\u9898\uff0c~~ \u5b9e\u9645\u4e0a\u5b83\u5c31\u662f\u4e2a\u6a21\u62df\u9898\u3002\n\n\u5f53\u7136\uff0c\u5728\u6a21\u62df\u4e4b\u524d\u6211\u4eec\u9996\u5148\u8981\u6765\u7406\u6e05\u6211\u4eec\u7f16\u7a0b\u7684\u601d\u8def\u3002\n\n\u65e2\u7136\u9898\u76ee\u4e2d\u63d0\u5230\u4e86 **\u201c\u8bcd\u201d** \u8fd9\u4e2a\u6982\u5ff5\uff0c\u6211\u4eec\u5c31\u4ee5 **\u8bcd** \u4e3a\u5355\u4f4d\u8fdb\u884c\u6a21\u62df\u3002\n\nP.S. \u4e3a\u4e86\u8868\u8ff0\u65b9\u4fbf\uff0c\u540e\u6587\u4e2d\u4ee5 **\u5355\u8bcd** \u6765\u4ee3\u66ff\n\n\u672c\u9898\uff0c\u6211\u91c7\u7528\u7684\u662f\u5148\u5c06\u5b57\u7b26\u4e32\u62c6\u6210\u5355\u8bcd\uff0c\u518d\u9010\u4e2a\u5206\u6790\u5e76\u8f93\u51fa\u5355\u8bcd\u7684\u65b9\u6cd5\u3002\n\n## \u4e8c\u3001\u4ee3\u7801\u601d\u8def\n### 1\u3001\u62c6\u5206\u5b57\u7b26\u4e32\n\u4e3a\u4e86\u4fbf\u4e8e\u5927\u5bb6\u7406\u89e3\uff0c\u6211\u753b\u4e86\u4e00\u5f20\u601d\u7ef4\u5bfc\u56fe\uff0c\u8f83\u4e3a\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u6211\u7684\u601d\u8def\u3002\n![](https://s3.bmp.ovh/imgs/2022/05/01/bc2f0e3b54731d0d.png)\n\n## 2\u3001\u5355\u8bcd\u8f93\u51fa\n\u8fd9\u91cc\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u5e03\u5c14\u578b\u53d8\u91cf flag \u6765\u8868\u793a\u4e0a\u4e00\u4e2a\u8f93\u51fa\u662f\u5426\u662f\u9017\u53f7\uff0c\u7528\u4e8e\u5224\u65ad\u8f93\u51fa\u4e09\u4e2a\u70b9\u65f6\u662f\u5426\u52a0\u4e0a\u524d\u5bfc\u7a7a\u683c\n\n\u5177\u4f53\u8fc7\u7a0b\u540c\u6837\u4e5f\u662f\u4e00\u5f20\u601d\u7ef4\u5bfc\u56fe\u3002\n![](https://s3.bmp.ovh/imgs/2022/05/01/bc54436fe6ecee40.png)\n\n## \u4e09\u3001\u5b8c\u6574\u4ee3\u7801\n\u8bb2\u4e86\u8fd9\u4e48\u591a\u4e5f\u662f\u65f6\u5019\u653e AC \u4ee3\u7801\u4e86\n\n```python\nclass CLS_word(object):\n    def __init__(self, type, value):\n        self.type = type\n        self.value = value\n\ndef print_s(wL):\n    flag = False\n    for i in range(len(wL)):\n        word = wL[i]\n        if word.type == 'num':\n            flag = False\n            print(word.value, end='')\n        elif word.type == 'space' and wL[i - 1].type == 'num' and wL[i + 1].type == 'num':\n            flag = False\n            print(' ', end='')\n        elif word.type == 'comma':\n            flag = True\n            if i == len(wL) - 1:\n                print(',', end='')\n            else:\n                print(', ', end='')\n        elif word.type == 'dot':\n            if flag == True or i == 0:\n                flag = False\n                print('...', end='')\n            else:\n                print(' ...', end='')\n    return\n\ndef print_w(wL):\n    for word in wL:\n        print(word.type, word.value)\n\n\ns = input()\ns += '&'\nwordList = []\np1, p2 = 0, 1\nnum = ('1','2','3','4','5','6','7','8','9','0')\n\nwhile True:\n    if p2 == len(s):\n        break\n    if s[p1] in num:\n        while s[p2] in num:\n            p2 += 1\n        wordList.append(CLS_word('num', s[p1:p2]))\n        p1 = p2\n        p2 = p1 + 1\n    elif s[p1] == ' ':\n        while s[p2] == ' ':\n            p2 += 1\n        wordList.append(CLS_word('space', s[p1:p2]))\n        p1 = p2\n        p2 = p1 + 1\n    elif s[p1] == '.':\n        wordList.append(CLS_word('dot', '...'))\n        p1 += 3\n        p2 = p1 + 1\n    elif s[p1] == ',':\n        wordList.append(CLS_word('comma', ','))\n        p1 += 1\n        p2 = p1 + 1\nprint_s(wordList)\n```\n\n## \u56db\u3001\u907f\u5751\u6307\u5357\n\u6ca1\u4ec0\u4e48\u53ef\u591a\u8bf4\u7684\uff0c\u5bf9\u4e8e\u6a21\u62df\u9898\u5c31\u662f $\\color{Red}\\text{\u7ec6\u5fc3\uff0c\u7ec6\u5fc3\uff0c\u518d\u7ec6\u5fc3}$",
        "postTime": 1651417948,
        "uid": 373484,
        "name": "Henry_ji",
        "ccfLevel": 4,
        "title": "CF81B Sequence Formatting \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF81B)\n\n\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u79cd\u5f88\u6bd4\u8f83\u7279\u522b\u7684\u65b9\u6cd5\u3002\n\n------------\n\n\u975e\u5e38\u663e\u7136\u7684\u4e00\u9053\u5b57\u7b26\u4e32\u9898\u3002\n\n\u9898\u76ee\u4e2d\u6709\u8fd9\u6837\u4e00\u53e5\u8bdd:\n\n ```Polycarp``` \u60f3**\u6dfb\u52a0**\u5e76\u4e14**\u5220\u9664**\u5b57\u7b26\u4e32 ```s``` \u4e2d\u591a\u4f59\u7684\u7a7a\u683c\u6765\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\u3002\n \n\u65e2\u7136\u4ed6\u4e0d\u4ec5\u8981\u6dfb\u52a0\u7a7a\u683c\uff0c\u8fd8\u8981\u5220\u9664\u7a7a\u683c\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u5148\u76f4\u63a5\u628a\u6240\u6709\u7a7a\u683c\u5220\u4e86\uff0c\u91cd\u65b0\u6309\u7167\u9898\u610f\u6574\u7406\u53e5\u5b50\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u601d\u8def\u53bb\u505a\u3002\u4ee5\u4e0b\u6709\u51e0\u70b9\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1. \u8f93\u5165\u7684\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u5efa\u8bae\u7528 ```getline``` \uff0c\u56e0\u4e3a\u8f93\u5165\u65f6\u9700\u8981\u8bfb\u5165\u7a7a\u683c\u3002\n\n1. \u8fd9\u9898\u8f93\u5165\u6ca1\u6709\u7ed9\u51fa\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u5b57\u7b26\u6570\u7ec4\u7684\u4e0b\u6807\u5f97\u4ece\u96f6\u5f00\u59cb\u5faa\u73af\u3002\n\n1. \u201c...\u201d\u662f\u7531\u4e09\u4e2a\u5b57\u7b26\u7ec4\u6210\uff0c\u5728\u5224\u65ad\u7684\u65f6\u5019\u5fc5\u987b\u8981\u6ce8\u610f\u3002",
        "postTime": 1636467994,
        "uid": 355424,
        "name": "Lish_Xizse",
        "ccfLevel": 0,
        "title": "CF81B\u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\u8fd9\u662f\u4e00\u9053\u6a21\u62df\u9700\u8981\u7ec6\u5fc3\uff0c\u5177\u4f53\u60c5\u51b5\u89c1\u4ee3\u7801\u6ce8\u91ca\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring str;\nchar a[256];\nint k;\nint main()\n{\n\tgetline(cin,str);//\u8bfb\u5165\u4e00\u884c\n\tint n=str.size();//\u53d6\u957f\u5ea6\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(i==n-1&&str[i]==',')//\u5982\u679c\u8fd9\u662f\u9017\u53f7\u4e14\u662f\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\n\t\t{\n\t\t\tcout<<',';\n\t\t\tcontinue;\n\t\t}\n\t\tif(str[i]==' ') continue;//\u5982\u679c\u662f\u7a7a\u683c\u8df3\u8fc7\n\t\tif(k==0)//k\u8bb0\u5f55\u4e0a\u4e00\u4f4d\u9664\u4e86\u7a7a\u683c\u7684\u5b57\u7b26\u5728\u54ea\u91cc\n\t\t{\n\t\t\ta[++k]=str[i];\n\t\t\tputchar(str[i]);\n\t\t\tif(str[i]<='9'&&str[i]>='0') continue;\n\t\t\tif(str[i]!='.') putchar(' ');\n\t\t\tcontinue;\n\t\t}\n\t\ta[++k]=str[i];\n\t\tif(str[i]<='9'&&str[i]>='0')//\u5982\u679c\u8fd9\u662f\u6570\u5b57\n\t\t{\n\t\t\tif(a[k-1]<='9'&&a[k-1]>='0'&&str[i-1]==' ') putchar(' ');//\u5c06\u6570\u5b57\u4e4b\u95f4\u7684\u7a7a\u683c\u4fdd\u7559\u4e00\u4e2a\n\t\t\tputchar(str[i]);\u8f93\u51fa\u8fd9\u4e2a\u6570\u5b57\n\t\t\tcontinue;\n\t\t}\n\t\tif(str[i]=='.'&&k>=4&&a[k-1]=='.'&&a[k-2]=='.'&&a[k-3]=='.')//\u5982\u679c\u662f\u7701\u7565\u53f7\n\t\t{\n\t\t\tputchar(' ');//\u8f93\u51fa\u7a7a\u683c\n\t\t\tk-=3;\n\t\t}\n\t\tputchar(str[i]);\n\t\tif(str[i]!='.') putchar(' ');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1621056166,
        "uid": 406947,
        "name": "Allanljx",
        "ccfLevel": 5,
        "title": "CF81B\u9898\u89e3"
    },
    {
        "content": "~~Aya\uff0c\u611f\u89c9\u8fd9\u4e2a\u9898\u4e0d\u662f\u6211\u8fd9\u79cd\u849f\u84bb\u505a\u7684\u2026\u2026~~\n\n~~\u539f\u672c\u6211\u60f3\u8650\u6c34\u9898\uff0c\u5374\u88ab\u6c34\u9898\u8650\u2026\u2026~~\n\n\u597d\u7684\uff0c\u5f00\u59cb\u8bb2\uff1a\n\n\u8fd9\u9898\u5c31\u662f\u8981\u7ec6\u5fc3\uff0c\u7ec6\u5fc3\uff0c\u518d\u7ec6\u5fc3\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u4e0d\u7136\u5c31\u662fWA~~qaq~~\n![](https://cdn.luogu.com.cn/upload/pic/63908.png)\n![](https://cdn.luogu.com.cn/upload/pic/63909.png)\n\n\u795e\u2122\u8fd9\u9898\u771f\u7684\u96be\u505a\uff08\u53ef\u80fd\u662f\u6211\u592a\u5f31\u4e86\uff09\n\n\u4e0b\u9762\u8d34\u51fa\u4ee3\u7801\u3002\n```\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#include<cstdio>\n\n#include<string>\n#include<map>\nusing namespace std;\nmap<int,bool> mp;\nstring str,ans;\nstring res;\nint main(){\n    string s;\n    getline(cin,s);\n    for(int i=0;i<s.size();i++){\n        if(s[i]==','){\n            str+=s[i];\n            str+=' ';\n            continue;\n        }\n        if(s.substr(i,3)==\"...\"){\n            str+='@';//\u628a\u5b83\u6539\u6210\u5355\u5b57\u7b26\uff0c\u5f88\u597d\u7b97\n            i+=2;\n            continue;\n        }\n        str+=s[i];\n    }\n//cout<<str<<endl;\n    bool flag=false;\n    for(int i=0;i<str.size();i++){//\u53bb\u6389\u91cd\u590d\u7a7a\u683c\n        if(str[i]==' '){\n            if(!flag){\n                flag=true;\n                res+=str[i];\n                continue;\n            }\n        }\n        else{\n            res+=str[i];\n            flag=false;\n            continue;\n        }\n    }\n    str=res;\n//cout<<str<<endl;\n    for(int i=0;i<str.size();i++){//\u907f\u514d \u201c... 1\uff0c2 ,\u201d\u8fd9\u79cd\u60c5\u51b5\n        ans+=str[i];\n        if(str[i]==' '&&str[i-1]=='@'&&str[i+1]!='@'){\n            ans=ans.substr(0,ans.size()-1);\n            continue;\n        }\n        if(str[i]==' '&&str[i+1]!='@'&&str[i-1]!=','){\n            if(str[i+1]!=','&&str[i-1]!='@'){\n                continue;\n            }\n            if(str[i]==' '&&str[i+1]==','){\n                ans=ans.substr(0,ans.size()-1);\n            }\n            continue;\n        }\n    }\n//cout<<ans<<endl;\n    for(int i=0;i<ans.size();i++){//\u8f93\u51fa\uff0c\u597d\u597d\u8bb2\u8bb2\uff1a\n        if(ans.size()-2==i&&ans[i]==','){//\u5982\u679c\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u2026\u2026\n            putchar(',');//\u5c31\u4e0d\u8981\u8f93\u51fa\u7a7a\u683c\u4e86\n            break;\n        }\n        if(ans[i]=='@'){//\u5982\u679c\u7b2c\u4e00\u4e2a\u5c31\u662f\u7701\u7565\u53f7\u7684\u8bdd\u4e5f\u4e0d\u8981\u7a7a\u683c\n            if(i!=0&&ans[i-1]!=' '){\n                cout<<\" \";\n            }\n            cout<<\"...\";\n        }\n        else{//\u4e0d\u7136\u5b89\u9759\u5730\u8f93\u51faqaq\n            cout<<ans[i];\n        }\n    }\n//putchar('-');\n    return 0;\n}\n```",
        "postTime": 1563193482,
        "uid": 122605,
        "name": "\u7075\u5149\u4e00\u95ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF81B \u3010Sequence Formatting\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e00\u8bfb\u5c31\u61c2\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u6ce8\u610f\u8003\u8651\u6e05\u695a\u60c5\u51b5\uff0c\u7ec6\u5fc3\u70b9\u5c31\u53ef\u4ee5\u8bf7\u8f7b\u677eAC\u3002\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tstring s;\n\tgetline(cin,s);\n\tfor(int i=0;i<s.size();i++)\n\t{\n\t\tif(s[i]=='.')\n\t\t{\n\t\t\ts[i]='@';\n\t\t\ts.erase(s.begin()+i+1);\n\t\t\ts.erase(s.begin()+i+1);\n\t\t}\n\t}\n\tfor(int i=0;i<s.size();i++)\n\t{\n\t\tif(s[i]=='@')\n\t\t{\n\t\t\tif(s[i-1]==' '||i==0)\n\t\t\t\tcout<<\"...\";\n\t\t\telse\n\t\t\t\tcout<<\" ...\";\n\t\t}\n\t\telse if(s[i]==',')\n\t\t{\n\t\t\tif(i==s.size()-1)\n\t\t\t\tcout<<\",\";\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout<<\", \";\n\t\t\t\ts[i]=' ';\n\t\t\t}\n\t\t}\n\t\telse if(s[i]==' ')\n\t\t{\n\t\t\tif(s[i-1]==' ')\n\t\t\t\tcontinue;\n\t\t\tif(s[i-1]==','||s[i+1]=='@'||(isdigit(s[i-1])&&isdigit(s[i+1])))\n\t\t\t\tcout<<' ';\n\t\t\telse\n\t\t\t\ts[i]=s[i-1];\n\t\t}\n\t\telse\n\t\t\tcout<<s[i];\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1532603543,
        "uid": 67896,
        "name": "AllureLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF81B \u3010Sequence Formatting\u3011"
    },
    {
        "content": "~~\u4e00\u770b\u9898\u76ee\u5185\u5bb9\uff0c\u8fd9\u9053\u9898\u770b\u4f3c\u662f\u9053\u6a21\u62df\uff0c\u5b9e\u9645\u4e0a\u786e\u5b9e\u662f\u9053\u6a21\u62df\u3002~~\n\n-----\n\n### \u89e3\u6790\n\n\u9898\u76ee\u4e2d\u5206\u56db\u79cd\u7c7b\u578b\uff1a\u6574\u6570\u3001\u9017\u53f7\u3001\u7a7a\u683c\u3001\u7701\u7565\u53f7\u3002\u6211\u4eec\u6765\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1. **\u6574\u6570**\uff1a\u65e0\u9700\u5904\u7406\uff0c\u76f4\u63a5\u585e\u5230 $s$ \u91cc\u9762\u5c31\u884c\u4e86\u3002\n\n2. **\u9017\u53f7**\uff1a\u5f80 $s$ \u91cc\u9762\u52a0\u4e00\u7ec4 `, `\uff08\u5373\u4e00\u4e2a\u9017\u53f7\u52a0\u4e00\u4e2a\u7a7a\u683c\uff09\u3002\n\n3. **\u7a7a\u683c**\uff1a\u5f53\u4e24\u4e2a\u6574\u6570\u5185\u5305\u542b\u591a\u4e2a\u7a7a\u683c\u65f6\uff0c\u53ea\u4fdd\u7559\u4e00\u4e2a\u3002\u5373\u53ea\u6709\u524d\u4e00\u4e2a\u662f\u6570\u5b57\u65f6\u624d\u52a0\u5165\u7a7a\u683c\uff0c\u5176\u5b83\u5ffd\u7565\u3002\n\n4. **\u7701\u7565\u53f7**\uff1a\u7701\u7565\u53f7\u7684\u5904\u7406\u8f83\u4e3a\u590d\u6742\uff0c\u9700\u8981\u5206\u6210\u6bcf\u4e09\u4e2a\u4e00\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u8f93\u5165 `.` \u7684\u4e2a\u6570\uff0c\u5f53\u5176\u4e3a $0$ \u65f6\u8f93\u51fa ` .`\uff08\u7a7a\u683c\u52a0\u70b9\uff09\uff0c\u5426\u5219\u53ea\u8f93\u51fa `.`\uff1b\u5f53\u5176\u8fbe\u5230 $3$ \u65f6\u610f\u5473\u7740\u4e00\u7ec4\u7701\u7565\u53f7\u5df2\u5b8c\u6210\uff0c\u9700\u8981\u5c06\u5176\u6e05\u96f6\u4ee5\u4fbf\u4e0b\u4e00\u7ec4\u7701\u7565\u53f7\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u8f93\u51fa\u7a7a\u683c\u3002\n\n\u8fd9\u6837\u505a\u53ef\u80fd\u4ea7\u751f\u8fde\u7eed\u7a7a\u683c\uff0c\u8f93\u51fa\u65f6\u9700\u8981\u518d\u5224\u65ad\u4e00\u4e0b\uff0c\u8fde\u7eed\u7a7a\u683c\u53ea\u8f93\u51fa $1$ \u4e2a\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u8f93\u5165 `1   ,  2` \u65f6\u4f1a\u8f93\u51fa `1 , 2`,\u6570\u5b57\u548c\u9017\u53f7\u4e4b\u95f4\u591a\u4e86\u4e00\u4e2a\u7a7a\u683c\u3002\u8f93\u51fa\u65f6\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u6ce8\u610f\u4e8b\u9879\uff1a\u672b\u5c3e\u4e0d\u80fd\u989d\u5916\u8f93\u51fa\u7a7a\u683c\u6216\u6362\u884c\uff0c\u6240\u4ee5\u672b\u5c3e\u7684\u7a7a\u683c\u8fd8\u9700\u8981\u5904\u7406\u4e00\u4e0b\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8bf7\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\n\u8fd9\u6837\uff0c\u5c31\u80fd\u6b63\u786e\u8f93\u51fa\u7b54\u6848\u4e86\u3002\n\n-----\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\n\nchar s[10005];\t//s \u50a8\u5b58\u6700\u7ec8\u7ed3\u679c\uff0c\u4ece s[1] \u5f00\u59cb \nint len=0;\t\t//len \u8868\u793a s \u7684\u957f\u5ea6 \n\nint main()\n{\n\tint dot=0;\t\t//dot \u7528\u6765\u8868\u793a . \u7684\u4e2a\u6570 \n\twhile(true)\n\t{\n\t\tchar ch=getchar();\t\t//\u8f93\u5165\u5355\u4e2a\u5b57\u7b26 \n\t\tif(ch=='\\n') break;\t\t//\u5982\u679c\u8f93\u5165\u5b8c\u6210\u5219\u9000\u51fa\u5faa\u73af \n\t\tif(ch==' ')\t\t\t\t//\u60c5\u51b5 3 \n\t\t{\n\t\t\tif(s[len]>='0'&&s[len]<='9')\n\t\t\t\ts[++len]=' ';\n\t\t\telse continue;\n\t\t}\n\t\tif(ch>='0'&&ch<='9') \t//\u60c5\u51b5 1 \n\t\t\ts[++len]=ch;\n\t\tif(ch==',') s[++len]=',',s[++len]=' ';\t//\u60c5\u51b5 2 \n\t\tif(ch=='.')\t\t\t//\u60c5\u51b5 4 \n\t\t{\n\t\t\tif(dot==0&&(s[len]!=' '&&len!=0)) s[++len]=' ';\n\t\t\ts[++len]='.';\n\t\t\tdot++;\n\t\t\tif(dot==3) dot=0;\n\t\t}\n\t}\n\twhile(s[len]==' ') len--;\t\t//\u5faa\u73af\u5904\u7406\u5b57\u7b26\u4e32\u672b\u5c3e\u5b57\u7b26 \n\tfor(int i=1;i<=len;i++)\n\t{\n\t\tif(s[i]==' '&&s[i-1]==' ') continue;\t//\u5224\u65ad\u8fde\u7eed\u7a7a\u683c \n\t\tif(s[i-1]>='0'&&s[i-1]<='9' && s[i]==' ' && s[i+1]==',')\n\t\t\tcontinue;\t\t//\u201c\u6570\u5b57+\u7a7a\u683c+\u9017\u53f7\u201d\u7684\u7279\u6b8a\u60c5\u51b5\u5224\u65ad \n\t\tputchar(s[i]);\n\t}\n\treturn 0;\n}\n```\n\n$$\\large\\frak{The\\ End}$$",
        "postTime": 1658974128,
        "uid": 545986,
        "name": "Jerrycyx",
        "ccfLevel": 5,
        "title": "CF81B Sequence Formatting - \u9898\u89e3"
    }
]