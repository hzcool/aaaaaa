[
    {
        "content": "\u9996\u5148\u6211\u4eec\u7ed9\u6bcf\u79cd\u989c\u8272\u8d4b\u4e00\u4e2a\u7f16\u53f7\uff0c\u5982 `R` \u4e3a $1$\uff0c`Y` \u4e3a $2$\uff0c`B` \u4e3a $3$\uff0c`W` \u6216 `.` \u4e3a $0$\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c`mix` \u64cd\u4f5c\u5176\u5b9e\u5c31\u662f\u5728\u6c42\u6240\u6709\u9009\u4e2d\u7684\u6570\u7684\u5f02\u6216\u548c\uff0c\u4f46\u662f\u4ea4\u6362\u4e24\u79cd\u989c\u8272\u7684\u64cd\u4f5c\u5e76\u4e0d\u597d\u8868\u793a\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u5c06\u6bcf\u4e2a\u6570\u62c6\u6210\u4e24\u4e2a bit $a_{i}$ \u548c $b_i$ \u540e\uff0c\u4e8b\u60c5\u5c31\u53d8\u5f97\u7b80\u5355\u4e86\uff1a\n\n- `RY` \u64cd\u4f5c\uff1a\u4ea4\u6362 $a_i$ \u548c $b_i$\u3002\n- `RB` \u64cd\u4f5c\uff1a$b_i\\leftarrow a_i\\operatorname{xor} b_i$\u3002\n- `YB` \u64cd\u4f5c\uff1a$a_i\\leftarrow a_i\\operatorname{xor} b_i$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u5f53\u524d\u7684 $a_i$ \u548c $b_i$ \u4e0e\u521d\u59cb\u503c\u7684\u5173\u7cfb\uff0c\u5219\u6bcf\u4e2a `mix` \u64cd\u4f5c\u90fd\u53ef\u4ee5\u5bf9\u4e24\u4e2a bit \u5206\u522b\u5217\u51fa\u4e00\u4e2a\u65b9\u7a0b\u3002\u6700\u7ec8\u6211\u4eec\u4f1a\u5f97\u5230 $2\\cdot n$ \u4e2a\u672a\u77e5\u6570\uff0c\u4e0d\u8d85\u8fc7 $2\\cdot k$ \u4e2a\u65b9\u7a0b\u7684\u65b9\u7a0b\u7ec4\uff0c\u7528\u9ad8\u65af\u6d88\u5143 + bitset \u6c42\u51fa\u4efb\u610f\u89e3\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(\\frac{n\\cdot k\\cdot \\min\\{n,k\\}}{w})$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nconstexpr int N = 1e3;\nint n, k, cnt;\nstd::bitset<2 * N> a[2 * N];\nint t[2 * N], pos[N], b[2 * N], x[2 * N];\nint colorId(char c) {\n    if (c == 'W') {\n        return 0;\n    } else if (c == 'R') {\n        return 1;\n    } else if (c == 'Y') {\n        return 2;\n    } else {\n        return 3;\n    }\n}\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    std::cin >> n >> k;\n    for (int i = 0; i < n; ++i) {\n        t[2 * i] = 1;\n        t[2 * i + 1] = 2;\n    }\n    for (int i = 0; i < k; ++i) {\n        std::string opt;\n        std::cin >> opt;\n        int m;\n        std::cin >> m;\n        for (int j = 0; j < m; ++j) {\n            std::cin >> pos[j];\n            --pos[j];\n        }\n        if (opt == \"mix\") {\n            char res;\n            std::cin >> res;\n            int c = colorId(res);\n            for (int j = 0; j < m; ++j) {\n                int p = pos[j];\n                a[cnt][2 * p] = t[2 * p] & 1;\n                a[cnt][2 * p + 1] = t[2 * p] >> 1;\n            }\n            b[cnt++] = c & 1;\n            for (int j = 0; j < m; ++j) {\n                int p = pos[j];\n                a[cnt][2 * p] = t[2 * p + 1] & 1;\n                a[cnt][2 * p + 1] = t[2 * p + 1] >> 1;\n            }\n            b[cnt++] = c >> 1;\n        } else if (opt == \"RY\") {\n            for (int j = 0; j < m; ++j) {\n                int p = pos[j];\n                std::swap(t[2 * p], t[2 * p + 1]);\n            }\n        } else if (opt == \"RB\") {\n            for (int j = 0; j < m; ++j) {\n                int p = pos[j];\n                t[2 * p + 1] ^= t[2 * p];\n            }\n        } else {\n            for (int j = 0; j < m; ++j) {\n                int p = pos[j];\n                t[2 * p] ^= t[2 * p + 1];\n            }\n        }\n    }\n    int r = 0;\n    for (int i = 0; i < 2 * n && r < cnt; ++i) {\n        for (int j = r; j < cnt; ++j) {\n            if (a[j][i]) {\n                std::swap(a[j], a[r]);\n                std::swap(b[j], b[r]);\n                break;\n            }\n        }\n        if (!a[r][i])\n            continue;\n        for (int j = 0; j < cnt; ++j) {\n            if (j != r && a[j][i]) {\n                a[j] ^= a[r];\n                b[j] ^= b[r];\n            }\n        }\n        ++r;\n    }\n    for (int i = r; i < cnt; ++i) {\n        if (b[i]) {\n            std::cout << \"NO\\n\";\n            return 0;\n        }\n    }\n    for (int i = 0; i < r; ++i) {\n        int j = 0;\n        while (!a[i][j])\n            ++j;\n        x[j] = b[i];\n        for (int k = j + 1; k < 2 * n; ++k)\n            if (a[i][k])\n                x[j] ^= x[k];\n    }\n    std::cout << \"YES\\n\";\n    for (int i = 0; i < n; ++i) {\n        int c = x[2 * i] | x[2 * i + 1] << 1;\n        std::cout << \".RYB\"[c];\n    }\n    std::cout << \"\\n\";\n    return 0;\n}\n```\n\n",
        "postTime": 1592311391,
        "uid": 149656,
        "name": "jiangly",
        "ccfLevel": 10,
        "title": "CF1344F Piet's Palette \u9898\u89e3"
    }
]