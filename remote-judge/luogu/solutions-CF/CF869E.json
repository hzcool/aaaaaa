[
    {
        "content": "\u80af\u5b9a\u662f\u6253\u6807\u8bb0\u64cd\u4f5c\u4e86\uff0c\u5c06\u6bcf\u4e00\u884c\u5355\u72ec\u89c6\u4e3a\u4e00\u4e2a\u5e8f\u5217\uff0c\u62c6\u5efa\u56f4\u5899\u53ea\u9700\u8981\u5c06x=r1\u6253\u4e0a\u6807\u8bb0i\uff0cr2+1\u6253\u4e0a\u6807\u8bb0-1\n\n\u5728\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5224\u65ad\u8be5\u70b9\u6240\u5904\u7684\u90a3\u4e00\u884c\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u5176\u5904\u4e8e\u7b2c\u51e0\u4e2a\u533a\u57df\u4e2d\uff0c\u5982\u679c\u533a\u57df\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u8f93\u51fayes\n\n**And else \u8fd9\u9898\u7684\u5361\u5e38\u5f88\u6076\u5fc3\u554a\uff0c\u5efa\u8bae\u4f7f\u7528\u8bfb\u5165\u4f18\u5316\uff0c\u6570\u7ec4\u4e0d\u8981\u5f00\u5927\u4e86\uff0c\u5426\u5219\u7edd\u5bf9\u4f1aTLE\u554a**\n\n```\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define dep(i,a,b) for(int i=a;i>=b;i--)\nusing namespace std;\nconst int maxn=2506;\nint was[maxn][maxn];\n \ninline int read()\n{\n\tint f=1,x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n \nint main()\n{\n    int n=read(),m=read(),q=read();\n    rep(i,1,q){\n    \tint t=read(),r1=read(),c1=read(),r2=read(),c2=read();\n\t\tif(t==1)rep(r,r1,r2){was[r][c1]=i;was[r][c2+1]=-1;}\n\t\telse if(t==2)rep(r,r1,r2)was[r][c1]=was[r][c2+1]=0;\n\t\telse{\n\t\t    int st=0,res1=0,res2=0;\n\t\t\tdep(i,c1,0)\n\t\t\t    if(was[r1][i]>0)\n\t\t\t\t    if(st==0){res1=was[r1][i];break;}\n\t\t\t\t    else st++;\n\t\t\t\telse if(was[r1][i]<0)st--;\n\t\t\tst=0;\n\t\t\tdep(i,c2,0)\n\t\t\t    if(was[r2][i]>0)\n\t\t\t\t    if(st==0){res2=was[r2][i];break;}\n\t\t\t\t\telse st++;\n\t\t\t\telse if(was[r2][i]<0)st--; \n\t\t\tprintf(\"%s\",res1==res2?\"Yes\\n\":\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1551587972,
        "uid": 48439,
        "name": "YuRuiH_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF869E \u3010The Untended Antiquity\u3011"
    },
    {
        "content": "\u7531\u4e8e\u6ca1\u6709\u516c\u5171\u70b9\u8fd9\u4e00\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u6765\u89e3\u51b3\u6b64\u9898\u3002\n\n\u6b64\u9898\u6d89\u53ca\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7684\u533a\u95f4\u4fee\u6539\u5355\u70b9\u67e5\u8be2\u3002\n\n\u5982\u679c\u4e3a\u589e\u52a0\u969c\u788d\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u7ed9\u8fd9\u4e2a\u969c\u788d\u4e00\u4e2a ID\uff0c\u7136\u540e\u8ba9\u8fd9\u4e2a\u533a\u57df\u5185\u6240\u6709\u6570\u5b57\u52a0\u4e0a\u8fd9\u4e2a ID\u3002  \n\u5f88\u5bb9\u6613\u60f3\u5230\u4f7f\u7528\u5dee\u5206\u3002\n\n\u5982\u679c\u4e3a\u62c6\u9664\u969c\u788d\u64cd\u4f5c\uff0c\u5c31\u628a\u8fd9\u4e2a\u533a\u57df\u5185\u6240\u6709\u6570\u5b57\u51cf\u53bb\u8fd9\u4e2a ID\u3002\n\n\u5982\u679c\u4e3a\u67e5\u8be2\u64cd\u4f5c\uff0c\u5c31\u67e5\u8be2\u8fd9\u4e24\u4e2a\u70b9\u7684\u503c\u662f\u5426\u76f8\u540c\u3002  \n\u4e0d\u9700\u8981\u5728\u610f ID \u53e0\u52a0\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e5f\u662f\u5728\u540c\u4e00\u4e2a\u969c\u788d\u4e4b\u5185\u3002\n\n\u4e8e\u662f\u6709\u4e86\u7b2c\u4e00\u7248\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <map>\n#define lowbit(x) ((x) & -(x))\nusing namespace std;\nint n,m,q,tot;\nstruct matrix\n{\n    int x1,y1,x2,y2;\n    inline bool operator<(const matrix &a) const\n    {\n        if(x1 < a.x1)\n            return 1;\n        if(y1 < a.y1)\n            return 1;\n        if(x2 < a.x2)\n            return 1;\n        if(y2 < a.y2)\n            return 1;\n        return 0;\n    }\n};\nint c[2510][2510];\nmap<matrix,int> hs;\ninline void update(int x,int y,int k)\n{\n    for(register int i = x;i <= n;i += lowbit(i))\n        for(register int j = y;j <= m;j += lowbit(j))\n            c[i][j] += k;\n}\ninline int query(int x,int y)\n{\n    int ret = 0;\n    for(register int i = x;i;i -= lowbit(i))\n        for(register int j = y;j;j -= lowbit(j))\n            ret += c[i][j];\n    return ret;\n}\ninline void init()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n}\ninline void work()\n{\n    int opt,x1,y1,x2,y2;\n    while(q--)\n    {\n        scanf(\"%d%d%d%d%d\",&opt,&x1,&y1,&x2,&y2);\n        if(opt == 1)\n        {\n            hs[(matrix){x1,y1,x2,y2}] = ++tot;\n            update(x1,y1,tot);\n            update(x1,y2 + 1,-tot);\n            update(x2 + 1,y1,-tot);\n            update(x2 + 1,y2 + 1,tot);\n        }\n        else if(opt == 2)\n        {\n            int num = hs[(matrix){x1,y1,x2,y2}];\n            update(x1,y1,-num);\n            update(x1,y2 + 1,num);\n            update(x2 + 1,y1,num);\n            update(x2 + 1,y2 + 1,-num);\n        }\n        else\n        {\n            if(query(x1,y1) == query(x2,y2))\n                puts(\"Yes\");\n            else\n                puts(\"No\");\n        }\n    }\n}\nint main()\n{\n    init();\n    work();\n    return 0;\n}\n```\n\n\u4f46\u662f\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u5728\u7b2c 8 \u4e2a\u70b9 WA \u6389\u3002\n\n\u4ed4\u7ec6\u601d\u8003\u540e\u53d1\u73b0\u539f\u6765\u662f ID \u7684\u95ee\u9898\uff0c\u8fd9\u79cd ID \u5206\u914d\u65b9\u5f0f\u4f7f\u5f97\u6709\u53ef\u80fd\u51fa\u73b0 $1+3=2+2$ \u7684\u5c34\u5c2c\u95ee\u9898\u3002\n\n\u7136\u540e\u53ef\u4ee5\u60f3\u5230\u66ff\u4ee3\u65b9\u6848  \n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ $\u54c8\u5e0c\u3002\n\n\u6211\u9009\u62e9\u628a\u5b83\u5f53\u505a\u4e00\u4e2a $691$ \u8fdb\u5236\u6570\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53d6\u8fd9\u4e2a\u6570\u5b57\uff0c\u662f\u56e0\u4e3a\u6211\u7684\u5c0f\u53f7zclclWJN\u501f\u7ed9\u4e86\u4e00\u4e2a\u4e2d\u4e8c\u75c5\u540c\u5b66\uff0c\u4ed6\u7684\u5973\u53cb\u540d\u5b57\u8c10\u97f3\u4e3a $691$\u3002\n\n```cpp\n#include <cstdio>\n#include <map>\n#define lowbit(x) ((x) & -(x))\nusing namespace std;\nint n,m,q,tot;\nlong long c[2510][2510];\ninline void update(int x,int y,long long k)\n{\n    for(register int i = x;i <= n;i += lowbit(i))\n        for(register int j = y;j <= m;j += lowbit(j))\n            c[i][j] += k;\n}\ninline long long query(int x,int y)\n{\n    long long ret = 0;\n    for(register int i = x;i;i -= lowbit(i))\n        for(register int j = y;j;j -= lowbit(j))\n            ret += c[i][j];\n    return ret;\n}\ninline void init()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n}\ninline void work()\n{\n    int opt,x1,y1,x2,y2;\n    while(q--)\n    {\n        scanf(\"%d%d%d%d%d\",&opt,&x1,&y1,&x2,&y2);\n        if(opt == 1)\n        {\n            long long num = x1 + y1 * 691 + x2 * 691 * 691 + y2 * 691 * 691 * 691;\n            update(x1,y1,num);\n            update(x1,y2 + 1,-num);\n            update(x2 + 1,y1,-num);\n            update(x2 + 1,y2 + 1,num);\n        }\n        else if(opt == 2)\n        {\n            long long num = x1 + y1 * 691 + x2 * 691 * 691 + y2 * 691 * 691 * 691;\n            update(x1,y1,-num);\n            update(x1,y2 + 1,num);\n            update(x2 + 1,y1,num);\n            update(x2 + 1,y2 + 1,-num);\n        }\n        else\n        {\n            if(query(x1,y1) == query(x2,y2))\n                puts(\"Yes\");\n            else\n                puts(\"No\");\n        }\n    }\n}\nint main()\n{\n    init();\n    work();\n    return 0;\n}\n\n```\n\n\u5b8c\u7f8e AC\u3002",
        "postTime": 1534777903,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF869E \u3010The Untended Antiquity\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u4e24\u4e2a\u70b9\u80af\u5b9a\u8981\u88ab\u56f4\u5728\u540c\u6837\u7684\u56f4\u5899\u4e2d\uff0c\u5426\u5219\u4e24\u4e2a\u70b9\u663e\u7136\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u3002\n\n\u660e\u786e\u4e86\u8fd9\u4e2a\u4e8b\u5b9e\uff0c\u6211\u4eec\u6765\u770b\u770b\u8fd9\u9053\u9898\u3002\n\n\u4e0d\u59a8\u628a\u5efa\u5899\u770b\u6210\u4e8c\u7ef4\u533a\u95f4\u52a0\uff0c\u62c6\u5899\u770b\u6210\u4e8c\u7ef4\u533a\u95f4\u51cf\uff0c\u628a\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u88ab\u56f4\u5728\u540c\u6837\u7684\u56f4\u5899\u4e2d\u770b\u6210\u5224\u65ad\u8fd9\u4e24\u4e2a\u70b9\u7684\u503c\u662f\u5426\u76f8\u540c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u3002\n\n\u4f46\u662f\uff0c\u65b0\u7684\u95ee\u9898\u53c8\u51fa\u73b0\u4e86\uff1a\u533a\u95f4\u52a0\u4ec0\u4e48\uff1f\u4ece $1$ \u5f00\u59cb\u9010\u4e2a\u52a0\u663e\u7136\u4e0d\u884c\uff0c\u56e0\u4e3a $2+3=1+4$ \uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u5899 $2,3$ \u56f4\u4f4f\uff0c\u53e6\u4e00\u4e2a\u70b9\u88ab\u5899 $1,4$ \u56f4\u4f4f\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u5c31\u4f1a\u88ab\u5224\u4e3a\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u70b9\u663e\u7136\u662f\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u7684\u3002\n\n\u4e00\u4e2a\u65b9\u6cd5\u662f\u628a\u4e00\u4e2a\u64cd\u4f5c\u770b\u6210\u4e00\u4e2a $BASE$ \u8fdb\u5236\u6570\uff0c\u6bcf\u6b21\u52a0\u4e0a\u8fd9\u4e2a\u6570\u3002\u8fd9\u6837\u91cd\u590d\u7684\u6982\u7387\u6bd4\u8f83\u5c0f\u3002\u53e6\u4e00\u4e2a\u65b9\u6cd5\u662f\u7528\u968f\u673a\u6570\uff0c\u8fd9\u6837\u91cd\u590d\u7684\u6982\u7387\u66f4\u5c0f\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u7b2c\u4e00\u79cd\u65b9\u6cd5\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\n\n```cpp\n#include <iostream>\nusing namespace std;\nconst int MAXN = 25e2;\nconst int BASE = 666;//\u6211\u8fd9\u91cc\u662f666\u8fdb\u5236\u6570\uff0c\u5f53\u7136\u5176\u4ed6\u8fdb\u5236\u7684\u4e5f\u53ef\u4ee5\n/***************\u6811\u72b6\u6570\u7ec4\u6a21\u677f********************/\nint tree[MAXN + 5][MAXN + 5];\nint n,m,q;\nint lowbit(int x)\n{\n\treturn x & -x;\n}\nvoid add(int x,int y,int k)\n{\n\tfor(int i = x;i <= n;i += lowbit(i))\n\t{\n\t\tfor(int j = y;j <= m;j += lowbit(j))\n\t\t{\n\t\t\ttree[i][j] += k;\n\t\t}\n\t}\n}\nint query(int x,int y)\n{\n\tint sum = 0;\n\tfor(int i = x;i > 0;i -= lowbit(i))\n    {\n\t\tfor(int j = y;j > 0;j -= lowbit(j))\n\t\t{\n\t\t\tsum += tree[i][j];\n\t\t}\n\t}\n\treturn sum;\n}\n/***************\u6811\u72b6\u6570\u7ec4\u6a21\u677f********************/\nint main()\n{\n\tcin >> n >> m >> q;\n\twhile(q--)\n\t{\n\t\tint opt,x1,y1,x2,y2;\n\t\tcin >> opt >> x1 >> y1 >> x2 >> y2;\n\t\tif(opt == 1)//\u533a\u95f4\u52a0\n\t\t{\n\t\t\tint k = x1 * BASE * BASE * BASE + y1 * BASE * BASE + x2 * BASE + y2;//666\u8fdb\u5236\u6570\n\t\t\tadd(x1,y1,k);//\u5229\u7528\u5dee\u5206\u6570\u7ec4\u7684\u601d\u60f3\u533a\u95f4\u52a0\n\t\t\tadd(x1,y2 + 1,-k);\n\t\t\tadd(x2 + 1,y1,-k);\n\t\t\tadd(x2 + 1,y2 + 1,k);\n\t\t}\n\t\telse if(opt == 2)//\u533a\u95f4\u51cf\n\t\t{//\u540c\u7406\n\t\t\tint k = x1 * BASE * BASE * BASE + y1 * BASE * BASE + x2 * BASE + y2;\n\t\t\tadd(x1,y1,-k);\n\t\t\tadd(x1,y2 + 1,k);\n\t\t\tadd(x2 + 1,y1,k);\n\t\t\tadd(x2 + 1,y2 + 1,-k);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(query(x1,y1) == query(x2,y2))//\u5224\u65ad\n\t\t\t{\n\t\t\t\tcout << \"Yes\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout << \"No\\n\";\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1630047103,
        "uid": 299432,
        "name": "lsw1",
        "ccfLevel": 0,
        "title": "solution-cf869e"
    },
    {
        "content": "\u600e\u4e48\u7855\u5462\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u6309\u6211\u7684\u601d\u8def\u6765\u8bb2\u7684\u8bdd\uff0c\u6709\u4e24\u79cd\u89e3\u6cd5\uff0c\u6211\u76f4\u63a5\u8bb2\u7528\u54c8\u5e0c+\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7684\u65b9\u6cd5\u7684\u884c\u4e86\u3002\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5f53\u8986\u76d6\u4e24\u70b9\u7684\u6700\u5c0f\u77e9\u5f62\u4e0d\u540c\u65f6\uff0c\u4e00\u5b9a\u4e0d\u53ef\u8fbe\uff0c\u8fd9\u6837\u7684\u95ee\u9898\u4e0d\u96be\u60f3\u5230\u7ecf\u5178\u7684\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4+\u5dee\u5206\u6765\u652f\u6301\u4e8c\u7ef4\u533a\u95f4\u8986\u76d6+\u67e5\u8be2\u3002\n\n\u5bf9\u4e8e\u8986\u76d6\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5dee\u5206\u7684\u7ed9\u8fd9\u4e2a\u77e9\u9635\u91cc\u52a0\u4e0a\u4e00\u4e2a\u7f16\u53f7\u3002\n\n\u5bf9\u4e8e\u64cd\u5899\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u53cd\u7740\u51cf\u53bb\u8fd9\u4e2a\u7f16\u53f7\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5c31\u67e5\u8be2\u8fd9\u4e24\u4e2a\u70b9\u7684\u503c\u662f\u5426\u76f8\u540c\uff0c\u7f16\u53f7\u7684\u7d2f\u79ef\u4e0d\u5f71\u54cd\uff0c\u56e0\u4e3a\u53ea\u6709\u5728\u540c\u4e00\u4e2a\u5899\u5185\u624d\u4f1a\u7d2f\u79ef\u3002\n\uff08\u6ce8\u610f\uff1a\u5982\u679c\u53ea\u662f\u5355\u5355\u7684\u628a\u7f16\u53f7\u4ece1\u5f00\u59cb\u6807\u53f7\u662f\u4e0d\u591f\u7684 \u56e0\u4e3a\u4f1a\u51fa\u73b0$1+3=2+2$\u8fd9\u7c7b\u60c5\u51b5\n\uff09\n\n\u522b\u7684\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define uint unsigned int\n#define N 2505\n#define lowbit(x) x&(-x)\n#define base 19260817\nusing namespace std;\ntemplate<class T>\ninline void read(T &x)\n{\n    x=0; int f=1;\n    static char ch=getchar();\n    while((!isdigit(ch))&&ch!='-')  ch=getchar();\n    if(ch=='-') f=-1;\n    while(isdigit(ch))  x=x*10+ch-'0',ch=getchar();\n    x*=f;\n}\nint tree[N][N],n,m,id;\ninline void add(int x,int y,int z)\n{\n    for(int i=x;i<=n;i+=lowbit(i))\n        for(int j=y;j<=m;j+=lowbit(j))\n            tree[i][j]+=z;\n}\ninline int query(int x,int y)\n{\n    int ans=0;\n    for(int i=x;i;i-=lowbit(i))\n        for(int j=y;j;j-=lowbit(j))\n            ans+=tree[i][j];\n    return ans;\n}\n/*struct matrix\n{\n    int x1,y1,x2,y2;\n    inline bool operator<(const matrix &a) const\n    {\n        if(x1 < a.x1)\n            return 1;\n        if(y1 < a.y1)\n            return 1;\n        if(x2 < a.x2)\n            return 1;\n        if(y2 < a.y2)\n            return 1;\n        return 0;\n    }\n};\nmap <matrix,int> M;*/\nint main()\n{\n    int Q;\n    read(n),read(m),read(Q);\n    for(int i=1,x1,y1,x2,y2,opt;i<=Q;i++)\n    {\n        read(opt),read(x1),read(y1),read(x2),read(y2);\n        uint num=x1*base*base*base+x2*base*base+y1*base+y2;\n        //\u5f53\u8986\u76d6\u4e24\u70b9\u7684\u6700\u5c0f\u77e9\u5f62\u4e0d\u540c\u65f6\uff0c\u4e00\u5b9a\u4e0d\u53ef\u8fbe\n        if(opt==1)\n        {\n        //  M[(matrix){x1,y1,x2,y2}]=++id;\n            add(x1,y1,num);\n            add(x1,y2+1,-num);\n            add(x2+1,y1,-num);\n            add(x2+1,y2+1,num);\n        }\n        if(opt==2)\n        {\n        //  int num=M[(matrix){x1,y1,x2,y2}];\n            add(x1,y1,-num);\n            add(x1,y2+1,num);\n            add(x2+1,y1,num);\n            add(x2+1,y2+1,-num);\n        }\n        if(opt==3)\n        {\n            if(query(x1,y1)==query(x2,y2)) puts(\"Yes\");\n            else puts(\"No\");\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1621048538,
        "uid": 467824,
        "name": "Future_Maker",
        "ccfLevel": 0,
        "title": "CF869E\u62c9\u80ef\u9898\u89e3"
    }
]