[
    {
        "content": "\u54a6\uff1f\u9898\u89e3\u600e\u4e48\u5168\u662f\u7ebf\u6bb5\u6811\uff1f\n~~\uff08\u672c\u849f\u84bb\u592a\u83dc\u4e86\u4e0d\u4f1a\u7ebf\u6bb5\u6811\uff09~~\n\n\u6211\u5c31\u6765\u53d1\u4e00\u4e2a\u4e0d\u7528\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\u3002\n\n\u5148\u5f0062\uff0810+26+26\uff09\u4e2aset\u7ef4\u62a4\u6bcf\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\uff0c\u518d\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4ece1\u5230i\u88ab\u5220\u4e86\u51e0\u4e2a\u70b9\uff0c\u5220\u9664\u524d\u53ef\u4ee5\u5148\u901a\u8fc7\u4e8c\u5206\u6c42\u51fa\u7ed9\u51fa\u7684\u4f4d\u7f6e\u5728\u539f\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5728set\u4e2d\u4e8c\u5206\u51fa\u90a3\u4e2a\u533a\u95f4\uff0c\u6bcf\u6b21\u5220\u9664\u53ea\u8981\u5728set\u4e2derase\u5e76\u4e14\u5728\u6811\u72b6\u6570\u7ec4\u90a3\u4e2a\u4e0b\u6807+1\u5373\u53ef\u3002\n\ncode:\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200005;\nint get(char c)\n{\n\tif(c>='0'&&c<='9')\n\t\treturn c-'0';\n\tif(c>='A'&&c<='Z')\n\t\treturn c-'A'+10;\n\treturn c-'a'+36;\n}\nset<int>d[62];\nint bit[N];\nint del[N];\nvoid ins(int x)\n{\n\tfor(;x<N;x+=x&-x)\n\t\tbit[x]++;\n} \nint qq(int x)\n{\n\tint res=0;\n\tfor(;x;x-=x&-x)\n\t\tres+=bit[x];\n\treturn res; \n}\nint get_pos(int x)\n{\n\tint ll=x,rr=N-1;\n\twhile(ll<rr)\n\t{\n\t\tint mm=(ll+rr)/2;\n\t\tif(mm-qq(mm)>=x)\n\t\t\trr=mm;\n\t\telse\n\t\t\tll=mm+1;\n\t}\n\treturn ll;\n}\nchar s[N];\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%s\",s);\n\tfor(int i=0;i<n;i++)\n\t\td[get(s[i])].insert(i+1);\n\tfor(int cs=0;cs<m;cs++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tchar c[4];\n\t\tscanf(\"%s\",c);\n\t\tint id=get(c[0]);\n\t\tx=get_pos(x);\n\t\ty=get_pos(y);\n\t\tauto it=d[id].lower_bound(x);\n\t\tauto it2=it;\n\t\twhile(it2!=d[id].end()&&*it2<=y)\n\t\t{\n\t\t\tdel[*it2]=1;\n\t\t\tins(*it2);\n\t\t\tit2++;\t\n\t\t}\n\t\td[id].erase(it,it2);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!del[i])\n\t\t\tputchar(s[i-1]);\n\tputs(\"\");\n\treturn 0;\n}\n\n```",
        "postTime": 1548984078,
        "uid": 67896,
        "name": "AllureLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF899F \u3010Letters Removing\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4f5c\u4e3a\u9ed1\u9898\u662f\u7b80\u5355\u4e86\u70b9\uff0c\u601d\u8003\u8fc7\u7a0b\u8fd8\u662f\u5f88\u5999\u7684\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u9898\u53ea\u6709\u5220\u9664\u64cd\u4f5c\u3002\n\n\u90a3\u5176\u5b9e\u6211\u4eec\u7684\u91cd\u70b9\u5b8c\u5168\u4e0d\u5728\u5982\u4f55\u7ef4\u62a4\u5220\u9664\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u5220\u4e00\u6b21\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u66b4\u529b\u5355\u70b9\u5220\u9664\uff0c\u4e0d\u9700\u8981\u591a\u4f59\u7684\u6280\u5de7\u53bb\u7ef4\u62a4\uff0c\u53ea\u8981\u5355\u70b9\u5220\u9664\u590d\u6742\u5ea6\u662f\u5bf9\u7684\uff0c\u5747\u644a\u4e0b\u6765\u590d\u6742\u5ea6\u5c31\u662f\u5bf9\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u91cd\u5fc3\u653e\u5728\u5982\u4f55\u627e\u51fa\u8be5\u88ab\u5220\u7684\u6570\u3002\n\n\u6709\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u60f3\u6cd5\u662f\u76f4\u63a5\u53bb\u5b58\u6bcf\u4e00\u4e2a\u5b57\u7b26\u7684\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\uff0c\u90a3\u6211\u4eec\u7528 `set` \u7ef4\u62a4\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u5747\u644a\u4e00\u4e2a $\\log$\u3002\n\n\u4f46\u662f\u8fd9\u9898\u7684\u4e0b\u6807\u662f\u4f1a\u6709\u53d8\u5316\u7684\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u7ed9\u51fa\u7684\u4e0b\u6807\u627e\u51fa\u539f\u5e8f\u5217\u4e0b\u6807\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u672a\u88ab\u5220\u9664\u7684\u70b9\u585e\u8fdb\u4e00\u4e2a\u5e73\u8861\u6811\u91cc\uff0c\u7136\u540e\u5c31\u53ea\u9700\u8981\u652f\u6301\u7b2c $k$ \u5927\u67e5\u8be2\u5373\u53ef\u3002\u8fd9\u9898\u6743\u503c\u7ebf\u6bb5\u6811\u6bd4\u4efb\u4f55\u4e00\u79cd\u5e73\u8861\u6811\u90fd\u597d\u5199\u5f88\u591a\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u8fd9\u6837\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<set>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n    int x=0;\n    bool f=0;\n    char c=getchar();\n    while(!isdigit(c)&&c!='-') c=getchar();\n    if(c=='-'){\n        f=1;\n        c=getchar();\n    }\n\twhile(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return f?-x:x;\n}\nconst int maxn=2e5+5;\nint n,m;\nchar s[maxn];\nset<int> ss[70];\ninline int hash(char c){\n\tif(islower(c)) return c-'a';\n\telse if(isupper(c)) return 26+c-'A';\n\telse return 52+c-'0';\n}\n\ninline char readchar(){\n\tchar c=getchar();\n\twhile(isspace(c)) c=getchar();\n\treturn c;\n}\nstruct node{\n\tint l,r;\n\tnode* ch[2];\n\tint sum;\n\tvoid pushup(){\n\t\tsum=ch[0]->sum+ch[1]->sum;\n\t}\n\tnode(int l,int r):l(l),r(r){\n\t\tif(l<r){\n\t\t\tint mid=l+(r-l)/2;\n\t\t\tch[0]=new node(l,mid);\n\t\t\tch[1]=new node(mid+1,r);\n\t\t\tpushup();\n\t\t}\n\t\telse{\n\t\t\tsum=1;\n\t\t\tch[0]=ch[1]=0;\n\t\t}\n\t}\n\tvoid remove(int x){\n\t\tif(l==r) sum=0;\n\t\telse{\n\t\t\tif(x<=ch[0]->r) ch[0]->remove(x);\n\t\t\telse ch[1]->remove(x);\n\t\t\tpushup();\n\t\t}\n\t}\n\tint kth(int k){\n\t\tif(l==r) return r;\n\t\telse{\n\t\t\tif(k<=ch[0]->sum) return ch[0]->kth(k);\n\t\t\telse return ch[1]->kth(k-ch[0]->sum);\n\t\t}\n\t}\n\tvoid out(){\n\t\tif(l==r){\n\t\t\tif(sum==1) printf(\"%c\",s[r]);\n\t\t}\n\t\telse{\n\t\t\tch[0]->out();\n\t\t\tch[1]->out();\n\t\t}\n\t}\n}*rt;\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    n=readint();\n    m=readint();\n    scanf(\"%s\",s+1);\n    for(int i=1;i<=n;i++) ss[hash(s[i])].insert(i);\n    rt=new node(1,n);\n    while(m--){\n    \tint l,r,c;\n    \tl=rt->kth(readint());\n    \tr=rt->kth(readint());\n    \tc=hash(readchar());\n    \tset<int>::iterator itl=ss[c].lower_bound(l),itr=ss[c].upper_bound(r);\n    \tfor(set<int>::iterator i=itl;i!=itr;i++) rt->remove(*i);\n\t\tss[c].erase(itl,itr);\n\t}\n\trt->out();\n\tprintf(\"\\n\");\n    return 0;\n}\n```\n",
        "postTime": 1581340328,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF899F \u3010Letters Removing\u3011"
    },
    {
        "content": "## $\\text{Description}$\n\u957f\u5ea6\u4e3a $n$ \u7684\u4e32\uff0c$m$ \u6b21\u64cd\u4f5c\uff0c\u5220\u9664\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u6240\u6709\u4e3a $c$ \u7684\u5b57\u7b26\uff0c\u8f93\u51fa\u5220\u9664\u5b8c\u6bd5\u540e\u7684\u5b57\u7b26\u4e32\u3002\u6ce8\u610f\u8fd9\u4e2a\u533a\u95f4\u662f\u6307\u8fdb\u884c\u5b8c\u4e4b\u524d\u7684\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u4e0a\u7684\u533a\u95f4\u3002\n## $\\text{Solution}$\n\u53d1\u73b0\u53ea\u6709\u5220\u9664\u4e00\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u5176\u5b9e\u53ea\u9700\u8981\u627e\u5230\u6bcf\u6b21\u5220\u9664\u54ea\u4e9b\u5b57\u7b26\u5373\u53ef\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u4e00\u79cd\u5b57\u7b26\u5f00\u4e00\u4e2a `set`\uff0c\u603b\u5171\u5f00 $10+26+26=62$ \u4e2a `set`\uff0c\u7136\u540e\u6bcf\u6b21\u5220\u9664\u5bf9\u5e94 `set` \u4e2d\u533a\u95f4\u5185\u7684\u5143\u7d20\u5373\u53ef\u3002\n\n\u4f46\u662f\u600e\u4e48\u77e5\u9053\u6bcf\u4e2a\u5143\u7d20\u5728\u8fdb\u884c\u4e86\u4e4b\u524d\u7684\u5220\u9664\u64cd\u4f5c\u540e\u7684\u4f4d\u7f6e\u5462\uff1f\u8003\u8651\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\u521d\u59cb\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd $+1$\uff0c\u5220\u9664\u5c31\u5c06\u5bf9\u5e94\u4f4d\u7f6e $-1$\u3002\u90a3\u4e48\u600e\u4e48\u786e\u5b9a\u7ed9\u5b9a\u533a\u95f4\u5728\u539f\u5e8f\u5217\u4e0a\u5bf9\u5e94\u7684\u533a\u95f4\u5462\uff1f\u53ef\u4ee5\u5728[\u6811\u72b6\u6570\u7ec4\u4e0a\u500d\u589e](https://www.cnblogs.com/lnwhl/p/17091331.html)\u3002\n\n\u8fd9\u6837\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u6700\u540e\u904d\u5386\u4e00\u4e0b\u6bcf\u4e2a `set` \u627e\u5230\u6ca1\u6709\u88ab\u5220\u9664\u7684\u5143\u7d20\u8f93\u51fa\u5373\u53ef\u3002\n\n\u603b\u7684\u590d\u6742\u5ea6\u5e94\u8be5\u662f $\\mathcal O(n\\log n)$\uff0c\u5f53\u7136\u5982\u679c\u60a8\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4\u4e0a\u500d\u589e\u6c42\u7b2c $k$ \u5c0f\u5143\u7d20\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u8fdb\u884c\u4e8c\u5206\uff0c\u590d\u6742\u5ea6\u662f $\\mathcal O(n\\log^2n)$ \u7684\uff0c\u540c\u6837\u53ef\u4ee5\u901a\u8fc7\u3002\u4e5f\u53ef\u4ee5\u770b\u770b\u6211\u5199\u7684[\u8fd9\u7bc7\u535a\u5ba2](https://www.cnblogs.com/lnwhl/p/17091331.html)\u3002\n## $\\text{Code}$\n```cpp\n#include <bits/stdc++.h>\n#define pii pair<int,int>\n#define il inline\nusing namespace std;\nconst int N=2e5+5;\nint n,m,b[N];\nset<int>st[65];\nmap<int,char>mp;\nil int cg(char ch)//\u5c06\u5b57\u7b26\u8f6c\u6210\u4e0b\u6807 \n{\n\tif(ch>='a'&&ch<='z')return ch-'a';\n\tif(ch>='A'&&ch<='Z')return ch-'A'+26;\n\treturn ch-'0'+52;\n}\nil char dec(int x)//\u5c06\u4e0b\u6807\u8f6c\u6210\u5b57\u7b26 \n{\n\tif(x<=25)return 'a'+x;\n\tif(x<=51)return 'A'+x-26;\n\treturn '0'+x-52;\n}\nil int lb(int x){return x&-x;}\nil void add(int x,int y){while(x<=n)b[x]+=y,x+=lb(x);}\nil int query(int x){int res=0;while(x)res+=b[x],x-=lb(x);return res;}\nil int get_pos(int k)//bit\u4e0a\u500d\u589e \n{\n\tint l=0,tot=0,x,y;\n\tfor(int i=20;i>=0;--i)\n\t{\n\t\tx=l+(1<<i);\n\t\tif(x>n)continue;\n\t\ty=tot+b[x];\n\t\tif(y<k)l=x,tot=y;\n\t}\n\treturn l+1;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tchar ch;cin>>ch;add(i,1);\n\t\tst[cg(ch)].insert(i);\n\t}\n\twhile(m--)\n\t{\n\t\tint l,r,c;char ch;cin>>l>>r>>ch;\n\t\tl=get_pos(l),r=get_pos(r);c=cg(ch);\n\t\tfor(auto it=st[c].lower_bound(l);it!=st[c].end();)\n\t\t{\n\t\t\tif(*it>r||st[c].empty())break;\n\t\t\tadd(*it,-1);it=st[c].erase(it);\n\t\t\t/*\u66f4\u65b0\u6811\u72b6\u6570\u7ec4\uff0c\u8fed\u4ee3\u5668++*/ \n\t\t}\n\t}\n\tfor(int i=0;i<=61;++i)//\u904d\u538662\u4e2aset\u627e\u5230\u6ca1\u88ab\u5220\u9664\u7684\u5143\u7d20 \n\t\tfor(auto it=st[i].begin();it!=st[i].end();++it)\n\t\t\tmp[*it]=dec(i);\n\tfor(auto it=mp.begin();it!=mp.end();++it)cout<<it->second;\n\treturn 0;\n}\n```",
        "postTime": 1675262849,
        "uid": 451328,
        "name": "lnwhl",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011CF899F Letters Removing"
    },
    {
        "content": "\u4e4b\u524d\u5b66\u6821\u505a\u8fc7\u8fd9\u9053\u9898\uff0c\u4eca\u5929\u7a81\u7136\u770b\u5230\u4e86\uff0c\u6765\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u957f\u5ea6\u4e3a $n$ \u7684\u4e32\uff0c$m$ \u6b21\u64cd\u4f5c\uff0c\u5220\u9664\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u6240\u6709\u4e3a $c$ \u7684\u5b57\u7b26\uff0c\u8f93\u51fa\u5220\u9664\u5b8c\u6bd5\u540e\u7684\u5b57\u7b26\u4e32\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u56e0\u4e3a\u53ea\u6709\u5c0f\u5199\u5b57\u6bcd\u3001\u5927\u5199\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f00 $62$ \u68f5 `set` \u6765\u7ef4\u62a4\u6bcf\u4e2a\u5b57\u6bcd\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5982\u679c\u5220\u9664\u540e\u6ca1\u6709\u5408\u5e76\u64cd\u4f5c\u7684\u8bdd\uff0c\u76f4\u63a5\u6807\u8bb0\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u5220\u9664\u540e\u4f1a\u5408\u5e76\uff0c\u90a3\u4e48\u4e5f\u5c31\u4ee3\u8868\u4e0b\u6807\u53ef\u80fd\u4f1a\u53d8\u5316\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4 $1\\sim i$ \u5220\u9664\u7684\u5b57\u7b26\u4e2a\u6570\u3002\u5220\u9664\u524d\u5148\u4e8c\u5206\u6c42\u51fa\u8be2\u95ee\u7ed9\u51fa\u7684\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e $posl,posr$\uff0c\u5047\u8bbe\u8981\u5220\u9664\u7684\u5b57\u7b26\u4e3a $ch$\uff0c\u7136\u540e\u518d\u5728 $ch$ \u7684 `set` \u4e2d\u4e8c\u5206\u627e\u5230\u5927\u4e8e\u7b49\u4e8e $posl$ \u7684\u4e0b\u6807\uff0c\u518d\u66b4\u529b\u904d\u5386 `set` \u5220\u9664\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n```cpp\n//2022/2/20\n//2022/3/6\n#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <set>\n#define enter() putchar(10)\n#define debug(c,que) cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) cout << arr[i] << w;\n#define speed_up() cin.tie(0),cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define Abs(x) ((x) > 0 ? (x) : -(x))\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\twhile (x < 0) x += mod;\n\twhile (x >= mod) x -= mod;\n\treturn x;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\nusing namespace std;\n\nconst int ma = 2e5 + 5,MA = 63;\nchar str[ma];\nbool del[ma];\nset<int>st[MA];\nint n,m;\ninline int getid(char ch) {\n\tif (ch >= '0' && ch <= '9') return (int)(ch - '0');\n\tif (ch >= 'a' && ch <= 'z') return (int)(ch - 'a') + 10;\n\treturn (int)(ch - 'A') + 10 + 26;\n}\nstruct BIT {\n\tint tr[ma];\n\t#define lowbit(x) (x & -x)\n\tinline void update(int x,int k) {\n\t\tfor (;x < ma;x += lowbit(x)) {\n\t\t\ttr[x] += k;\n\t\t}\n\t}\n\tinline int query(int x) {\n\t\tint res = 0;\n\t\tfor (;x;x -= lowbit(x)) {\n\t\t\tres += tr[x];\n\t\t}\n\t\treturn res;\n\t}\n\t#undef lowbit\n} bit;\ninline int binary(int now) {\n\tint l = now,r = ma - 1;\n\twhile (l < r) {\n\t\tint mid = l + r >> 1;\n\t\tif (mid - bit.query(mid) < now) {\n\t\t\tl = mid + 1;\n\t\t} else {\n\t\t\tr = mid;\n\t\t}\n\t}\n\treturn l;\n}\nint main(void) {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n#endif\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%s\",str + 1);\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tst[getid(str[i])].insert(i);\n\t}\n\twhile (m --) {\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tchar ch[5];\n\t\tscanf(\"%s\",ch + 1);\n\t\tint posl = binary(l),posr = binary(r),pos = getid(ch[1]);\n\t\tset<int>::iterator it = st[pos].lower_bound(posl),t = it;\n\t\tfor (;t != st[pos].end() && *t <= posr; ++ t) {\n\t\t\tdel[*t] = true;\n\t\t\tbit.update(*t,1);\n\t\t}\n\t\tst[pos].erase(it,t);\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (!del[i]) {\n\t\t\tprintf(\"%c\",str[i]);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1646560994,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "CF899F Letters Removing"
    },
    {
        "content": "\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u5b57\u7b26\u4f4d\u7f6e\u7684\u5e73\u8861\u6811\u68ee\u6797\uff0c\u8fd8\u6709\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019$l,r$\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u627e\u5230\u5bf9\u5e94\u5728\u539f\u5e8f\u5217\u7684\u4f4d\u7f6e\n\n\u5220\u9664\u7684\u65f6\u5019\u5728\u5e73\u8861\u6811\u548c\u7ebf\u6bb5\u6811\u4e0a\u540c\u65f6\u5220\u5c31\u884c\n\n\u6211\u7684\u5e73\u8861\u6811\u5199\u7684fhq treap\n\n\u7531\u4e8efhq treap\u5220\u51fa\u6765\u7684\u4ecd\u7136\u662f\u4e00\u68f5\u6811\uff0c\u53ef\u4ee5\u76f4\u63a5dfs\uff0c\u5e38\u6570\u6bd4\u8c03\u7528set\u7684\u8fed\u4ee3\u5668\u5c0f\u4e86\u4e0d\u5c11\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1<<18;\nconst int MAXM=256;\n\nint n,m,cnt;\nchar ch[MAXN];\nint sum[MAXN<<1],ik[MAXN];\nint root[MAXM];\nint siz[MAXN],val[MAXN],rev[MAXN],sn[2][MAXN];\n\nint cret(int v)\n{\n\tsiz[++cnt]=1;\n\tval[cnt]=v;\n\trev[cnt]=rand();\n\treturn cnt;\n}\n\nvoid pushup(int x){siz[x]=siz[sn[0][x]]+siz[sn[1][x]]+1;}\n\nint un(int x,int y)\n{\n\tif(!x||!y) return x|y;\n\tif(rev[x]<rev[y]){\n\t\tsn[1][x]=un(sn[1][x],y);\n\t\tpushup(x);\n\t\treturn x;\n\t}sn[0][y]=un(x,sn[0][y]);\n\tpushup(y);\n\treturn y;\n}\n\nvoid dro(int k,int v,int &x,int &y)\n{\n\tif(!k){x=y=0;return;}\n\tif(val[k]<=v) x=k,dro(sn[1][k],v,sn[1][k],y);\n\telse y=k,dro(sn[0][k],v,x,sn[0][k]);\n\tpushup(k);\n\treturn;\n}\n\nvoid ins(int id,int v)\n{\n\tint x,y;\n\tdro(root[id],v,x,y);\n\troot[id]=un(un(x,cret(v)),y);\n\treturn;\n}\n\nvoid build(int k,int l,int r)\n{\n\tif(l==r){ins((int)ch[l],l);sum[k]=1;ik[l]=k;return;}\n\tint i=k<<1,mid=l+r>>1;\n\tbuild(i,l,mid),build(i|1,mid+1,r);\n\tsum[k]=sum[i]+sum[i|1];\n\treturn;\n}\n\nint find(int k,int l,int r,int v)\n{\n\twhile(1){\n\t\tif(l==r) return l;\n\t\tint i=k<<1,mid=l+r>>1;\n\t\tif(sum[i]>=v) k=i,r=mid;\n\t\telse v-=sum[i],k=i|1,l=mid+1;\n\t}\n}\n\nvoid dfsdel(int x)\n{\n\tif(sn[0][x]) dfsdel(sn[0][x]);\n\tif(sn[1][x]) dfsdel(sn[1][x]);\n\tfor(int i=ik[val[x]];i;i>>=1) --sum[i];\n\treturn;\n}\n\nvoid cdel(int id,int l,int r)\n{\n\tint x,y,z;\n\tdro(root[id],l-1,x,y);\n\tdro(y,r,y,z);\n\troot[id]=un(x,z);\n\tif(y) dfsdel(y);\n\treturn;\n}\n\nvoid dfs(int k,int l,int r)\n{\n\tif(l==r&&sum[k]){putchar(ch[l]);return;}\n\tint i=k<<1,mid=l+r>>1;\n\tif(sum[i]) dfs(i,l,mid);\n\tif(sum[i|1]) dfs(i|1,mid+1,r);\n\treturn;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%s\",ch+1);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tint l,r;char c;\n\t\tscanf(\"%d%d\\n%c\",&l,&r,&c);\n\t\tl=find(1,1,n,l);r=find(1,1,n,r);\n\t\tcdel((int)c,l,r);\n\t}dfs(1,1,n);puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1548077268,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF899F \u3010Letters Removing\u3011"
    }
]