[
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u968f\u673a\u5316\u7684\u5199\u6cd5\uff0c\u80fd\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u4e00\u904d $\\text{AC}$ \u3002\n\n## \u3010\u601d\u8def\u3011\n~~\u770b\u5230\u8fd9\u79cd\u8be2\u95ee\u5c11\u7684\u4ea4\u4e92\u9898\u7b2c\u4e00\u53cd\u5e94\u968f\u673a\u5316~~\n\n\u6211\u4eec\u53d1\u73b0\u53ea\u9700\u8981\u6c42\u4e00\u4e2a $0$ \u548c\u4e00\u4e2a $1$ \uff0c\u8003\u8651\u5206\u5f00\u6765\u6c42\u3002\n\n\u6211\u4eec\u53c8\u53d1\u73b0\u6c42 $0$ \u548c\u6c42 $1$ \u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5c31\u53ea\u62ff\u5176\u4e2d\u4e00\u4e2a\u6765\u8bb2\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u6c42 $1$ \u3002\n\n\u9996\u5148\u6211\u4eec\u5fc5\u7136\u9700\u8981\u4e00\u6b21\u8be2\u95ee\u6c42\u51fa\u6574\u4e2a\u5e8f\u5217\u4e2d $1$ \u7684\u603b\u4e2a\u6570\uff0c\u8bbe\u4e3a $cnt1$ \uff0c\u65b9\u6cd5\u4e3a\u8be2\u95ee\u4e00\u4e2a\u5168 $0$ \u7684\u5e8f\u5217\uff0c\u8fd4\u56de\u503c\u663e\u7136\u4e3a $1$ \u7684\u603b\u4e2a\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8be2\u95ee\u62fc\u51d1\u51fa **\u4e00\u4e2a\u533a\u95f4\u5185 1 \u7684\u4e2a\u6570** \u3002\n\n\u5177\u4f53\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n-----\n\u5047\u8bbe\u6211\u4eec\u8981\u8be2\u95ee $[l, r]$ \u4e4b\u95f4 $1$ \u7684\u4e2a\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u5168\u96f6\u4e32\u4e2d\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709 $0$ \u53d8\u6210 $1$ \uff0c\u76f8\u5f53\u4e8e\u8fd9\u4e2a\u533a\u95f4\u5185\u539f\u672c $1$ \u4ea7\u751f\u8d21\u732e\u73b0\u5728\u53d8\u6210\u4e86 $0$ \u4ea7\u751f\u8d21\u732e\uff0c\u8bb0\u8fd4\u56de\u503c\u4e3a $res$ \u3002\n\n\u5047\u8bbe\u8fd9\u4e2a\u533a\u95f4\u5185\u6709 $x$ \u4e2a $1$\uff0c $y$ \u4e2a $0$ \uff0c\u53ef\u5f97\uff1a\n\n$$\nx+y=r-l+1\n$$\n$$\nx-y=cnt1-res\n$$\n\u7136\u540e\u89e3\u4e00\u4e2a\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u5373\u53ef\uff0c\u8fd9\u4e2a\u5e94\u8be5\u90fd\u4f1a\u3002\n\n-----\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u5de5\u5177\uff0c\u63a5\u4e0b\u6765\u7ee7\u7eed\u8bf4\u5269\u4e0b\u7684\u89e3\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5206\u4e24\u7c7b\u8ba8\u8bba\uff1a\n\n### 1\u3001\u5047\u8bbe $cnt1 \\ge \\frac{n}{2}$ \n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u968f\u673a\u53bb\u4e00\u4e2a\u70b9 **\u53d6\u4e0d\u5230** $1$ \u7684\u6982\u7387\u662f $\\frac{1}{2}$ \uff0c\u591a\u53d6\u51e0\u6b21\u8fd9\u4e2a\u6982\u7387\u5c31\u4f1a\u6307\u6570\u7ea7\u4e0b\u964d\u3002\u8fd0\u7528\u521a\u624d\u7684\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u70b9\u662f\u5426\u662f $1$ \uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u968f\u673a\u53d6\u70b9\u7684\u65b9\u6cd5\u5f97\u5230 $1$ \u7684\u4f4d\u7f6e\u3002\n\n### 2\u3001\u5047\u8bbe $cnt1 < \\frac{n}{2}$\n\u6b64\u65f6\u6211\u4eec\u53ea\u80fd\u4e8c\u5206\u3002\n\n\u6bcf\u4e00\u6b21\u770b\u4e00\u4e2a\u5b50\u533a\u95f4\u4e2d\u662f\u5426\u6709 $1$ \uff0c\u8fd9\u663e\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4 $1$ \u7684\u4e2a\u6570\u8f6c\u5316\u800c\u6765\u3002\n\n\u7136\u540e\u6bcf\u4e00\u6b21\u533a\u95f4\u7f29\u5c0f\u4e00\u534a\u5373\u53ef\uff0c\u8fd9\u91cc\u8981\u8be2\u95ee $logn$ \u4e5f\u5c31\u662f $10$ \u6b21\u5de6\u53f3\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5408\u5e76 $0,1$ \u4e24\u4e2a\u5b50\u95ee\u9898\u4e86\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u82e5 $1$ \u6ee1\u8db3\u60c5\u51b5 $1$ \uff0c\u5219 $0$ \u5fc5\u7136\u6ee1\u8db3\u60c5\u51b5 $2$ \uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u4e8e\u662f\u6211\u4eec\u968f\u673a\u5316\u7684\u6b21\u6570\u6700\u591a $4$ \u6b21\uff0c\u6b63\u786e\u6027\u662f\u4fdd\u8bc1\u4e0d\u4e86\u7684\u3002\n\n\u8fd8\u662f\u62ff $1$ \u6765\u8bf4\u3002\n\n\u6211\u4eec\u6539\u4e3a\u6bcf\u4e00\u6b21\u968f\u673a\u4e24\u4e2a\u70b9\uff0c\u82e5\u8fd9\u4e24\u4e2a\u70b9\u90fd\u662f $1$ \uff0c\u90a3\u4e48\u4efb\u53d6\u5176\u4e2d\u4e00\u4e2a\u5373\u53ef\uff0c\u82e5\u6709 $1$ \u4e2a\u4e0d\u662f $1$ \uff0c\u90a3\u4e48\u518d\u8be2\u95ee\u8fd9\u4e24\u4e2a\u4e2d\u7684\u4e00\u4e2a\u662f\u5426\u662f $1$ \u5c31\u53ef\u4ee5\u786e\u5b9a $1$ \u7684\u4f4d\u7f6e\uff0c\u5426\u5219\u518d\u6b21\u968f\u673a\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u53d6 $6$ \u4e2a\u70b9\uff08\u56e0\u4e3a\u8fd8\u9700\u8981\u4e00\u6b21\u8be2\u95ee\u4e24\u4e2a\u70b9\u4e2d\u662f\u5426\u6709 $1$\uff09\uff0c\u518d\u6b21\u63d0\u5347\u4e86\u6b63\u786e\u6027\u3002\n\n\u5b9e\u6d4b\u8fd9\u79cd\u89e3\u6cd5\u4e00\u822c\u53ef\u4ee5\u5728 $13$ \u6b21\u8be2\u95ee\u4ee5\u5185\u5f97\u51fa\u7b54\u6848\u3002\n\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, cnt1;\ninline int get0(int l, int r){\n    printf(\"? \");\n    for (register int i = 1;i <= n;i ++) putchar(48 + (i <= r && i >= l));\n    putchar(10);\n    fflush(stdout);\n    int res;scanf(\"%d\", &res);\n    return r - l + 1 - ((r - l + 1 + cnt1 - res) >> 1);\n}\ninline int get1(int l, int r){\n    return r - l + 1 - get0(l, r);\n}\ninline int getpos(int l, int r){\n    printf(\"? \");\n    for (register int i = 1;i <= n;i ++) putchar(48 + (i == r || i == l));\n    putchar(10);\n    fflush(stdout);\n    int res;scanf(\"%d\", &res);\n    return (2 + cnt1 - res) >> 1;\n}\nint main(){\n    scanf(\"%d\", &n);\n    printf(\"? \");\n    for (register int i = 1;i <= n;i ++) putchar(48);\n    putchar(10);\n    fflush(stdout);\n    scanf(\"%d\", &cnt1);\n    srand(time(NULL));\n    if(cnt1 >= (n >> 1)){\n        int tot = 14;\n        int l = 1, r = n, pos;\n        while(l <= r){\n            int mid = (l + r) >> 1;\n            tot --;\n            if(get0(l, mid)) pos = mid, r = mid - 1;\n            else l = mid + 1;\n        }\n        while(tot --){\n            int x = rand() % n + 1;\n            int x2 = rand() % n + 1;\n            while(x == x2){\n                x = rand() % n + 1;\n                x2 = rand() % n + 1;\n            }\n            int res = getpos(x, x2);\n            if(res == 2){\n                printf(\"! %d %d\\n\", pos, x);\n                fflush(stdout);\n                return 0;\n            }\n            if(res == 1){\n                if(!get0(x, x)){\n                    printf(\"! %d %d\\n\", pos, x);\n                    fflush(stdout);\n                    return 0;\n                }\n                else{\n                    printf(\"! %d %d\\n\", pos, x2);\n                    fflush(stdout);\n                    return 0;\n                }\n            }\n        }\n    }\n    else{\n        int tot = 14;\n        int l = 1, r = n, pos;\n        while(l <= r){\n            int mid = (l + r) >> 1;\n            tot --;\n            if(get1(l, mid)) pos = mid, r = mid - 1;\n            else l = mid + 1;\n        }\n        while(tot --){\n            int x = rand() % n + 1;\n            int x2 = rand() % n + 1;\n            while(x == x2){\n                x = rand() % n + 1;\n                x2 = rand() % n + 1;\n            }\n            int res = getpos(x, x2);\n            if(res == 0){\n                printf(\"! %d %d\\n\", x, pos);\n                fflush(stdout);\n                return 0;\n            }\n            if(res == 1){\n                if(get0(x, x)){\n                    printf(\"! %d %d\\n\", x, pos);\n                    fflush(stdout);\n                    return 0;\n                }\n                else{\n                    printf(\"! %d %d\\n\", x2, pos);\n                    fflush(stdout);\n                    return 0;\n                }\n            }\n        }\n    }\n}\n```",
        "postTime": 1606275657,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF862D \u3010Mahmoud and Ehab and the binary string\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\u8d85\u7ea7\u6c34\u7684\u4ea4\u4e92\u9898\uff0c\u53ef\u4ee5\u79d2\u5207\uff08\u786e\u4fe1\uff09\n## \u601d\u8def\n\u6211\u4eec\u5148\u6c42\u51fa\u7b2c\u4e00\u4f4d\u662f\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u4efb\u52a1\u53ef\u4ee5\u7528\u8fd9\u4e24\u4e2a\u8be2\u95ee\u89e3\u51b3\uff1a\n\n```\n? 00000...000\n? 10000...000\n```\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7b2c\u4e00\u4f4d\u4e3a $0$ \u65f6\u4e0a\u9762\u6bd4\u4e0b\u9762\u5927 $1$\uff0c\u7b2c\u4e00\u4f4d\u4e3a $1$ \u65f6\u4e0b\u9762\u6bd4\u4e0a\u9762\u5927 $1$\u3002\n\n\u7136\u540e\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u53d8\u6210\u4e86\u5728\u5269\u4f59\u7684 $999$ \u4e2a\u6570\u4e2d\u627e\u53e6\u5916\u4e00\u4e2a\u3002\u6211\u4eec\u8fd8\u5269\u4e0b $13$ \u6b21\u8be2\u95ee\uff0c\u4e0d\u96be\u60f3\u5230\u4f7f\u7528\u4e8c\u5206\u3002\u6ce8\u610f\u5230\u8fd9\u4e9b\u6570\u4e2d\u5fc5\u5b9a\u6709\u4e00\u4e2a\u5bf9\u5e94\u79cd\u7c7b\u7684\u6570\uff08\u9898\u76ee\u7ed9\u5b9a\u7684\u8981\u6c42\uff09\uff0c\u6211\u4eec\u8003\u8651\u5224\u65ad**\u4e00\u4e2a\u533a\u95f4\u4e2d\u662f\u5426\u5168\u90e8\u662f\u6211\u4eec\u4e0d\u9700\u8981\u7684\u8fd9\u79cd\u6570**\u3002\n\n\u7a0d\u52a0\u601d\u8003\u5c31\u77e5\u9053\u8fd9\u73a9\u610f\u5f88\u6c34\u3002\u4e0d\u59a8\u8bbe\u6211\u4eec\u8981\u5224\u65ad $[l,r]$ \u662f\u5426\u5168\u662f $0$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 $[l,r]$ \u7684\u4f4d\u7f6e\u4e0a\u8f93\u51fa $1$\uff0c\u5176\u4f59\u4f4d\u7f6e\u8f93\u51fa $0$ \u540e\uff0c\u5224\u65ad\u8fd4\u56de\u503c\u548c\u6700\u5f00\u59cb\u5168\u90e8\u8f93\u51fa $0$ \u7684\u5927\u5c0f\u5173\u7cfb\u5373\u53ef\u3002\n\n\u5982\u679c\u8fd9\u4e9b\u4f4d\u7f6e\u5168\u662f $0$\uff0c\u90a3\u4e48\u8fd4\u56de\u503c\u4e00\u5b9a\u6bd4\u5168 $0$ \u5927 $(r-l+1)$\uff0c\u5168 $1$ \u540c\u7406\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\u533a\u95f4\u3002\u6211\u4eec\u5148\u627e\u4e00\u4e2a\u80af\u5b9a\u6709\u76ee\u6807\u6570\u7684\u533a\u95f4 $[2,n]$\uff0c\u7136\u540e\u6bcf\u6b21\u4e8c\u5206\u65f6\u5224\u65ad\u5de6\u533a\u95f4\u662f\u5426\u5168\u662f\u6211\u4eec\u4e0d\u9700\u8981\u7684\u6570\uff0c\u5982\u679c\u90fd\u662f\u4e0d\u9700\u8981\u7684\u5c31\u5c06\u8303\u56f4\u53d8\u6210\u53f3\u533a\u95f4\uff0c\u5728 $l=r$ \u7684\u65f6\u5019\u9000\u51fa\u5373\u53ef\u3002\n## \u4ee3\u7801\n```\n#include<bits/stdc++.h>\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nusing namespace std;\nsigned main(){\n    int n=read();\n\tprintf(\"? \");\n\tfor(int i=1; i<=n; i++) printf(\"0\");\n\tputs(\"\"),fflush(stdout);\n\tint p=read();\n\tprintf(\"? 1\");\n\tfor(int i=1; i<n; i++) printf(\"0\");\n\tputs(\"\"),fflush(stdout);\n\tint q=read();\n\tint id0=-1,id1=-1; \n\tif(p>q) \n\t{\n\t\tid1=1;//we need 0\n\t\tint l=2,r=n;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tif(l==r) \n\t\t\t{\n\t\t\t\tid0=l;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tprintf(\"? \");\n\t\t\tfor(int i=1; i<=n; i++) if(l<=i && i<=mid) printf(\"1\"); else printf(\"0\");\n\t\t\tputs(\"\"),fflush(stdout);\n\t\t\tint res=read();\n\t\t\tif(p-res==mid-l+1) l=mid+1; else r=mid; \n\t\t}\n\t}\n\telse\n\t{\n\t\tid0=1;//we need 1\n\t\tint l=2,r=n;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tif(l==r) \n\t\t\t{\n\t\t\t\tid1=l;\n\t\t\t\tbreak;\t\n\t\t\t}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tprintf(\"? \");\n\t\t\tfor(int i=1; i<=n; i++) if(l<=i && i<=mid) printf(\"1\"); else printf(\"0\");\n\t\t\tputs(\"\"),fflush(stdout);\n\t\t\tint res=read();\n\t\t\tif(res-p==mid-l+1) l=mid+1; else r=mid; \n\t\t}\n\t}\n\tprintf(\"! %d %d\\n\",id0,id1);\n\tfflush(stdout);\n    return 0;\n}\n```",
        "postTime": 1606272748,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF862D \u3010Mahmoud and Ehab and the binary string\u3011"
    },
    {
        "content": "\n\n\u9996\u5148\u6211\u4eec\u67e5\u8be2 $00000000$\uff0c\u5f97\u5230\u4e0d\u4e00\u6837\u7684\u5c31\u662f $1$ \u7684\u4e2a\u6570\u3002\n\n\u518d\u67e5\u8be2\u4e00\u904d $10000000$ \uff0c\u5c31\u80fd\u5f97\u5230 \u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f $0 $ \u8fd8\u662f $1$ \uff0c \u6211\u4eec\u518d\u627e\u53e6\u4e00\u4e2a\u7b54\u6848\u3002\n\n\n\u518d\u67e5\u8be2 $11110000$ \uff1a\n\n\u8bbe $len$ \u4e3a\u8fd9\u6b21\u67e5\u8be2\u6539\u53d8\u7684\u6570\u4e2a\u4e2a\u6570 \u3002\n\n\u5982\u679c\u7b54\u6848\u56e0\u6b64\u6070\u597d\u53d8\u5316 $len$ \uff0c\u5206\u53d8\u5316\u7684\u6b63\u8d1f\u8ba8\u8bba\u7b54\u6848\u5728\u54ea\u4e00\u8fb9\u3002\n\n\u5426\u5219\u76f4\u63a5\u5728 $l,mid$ \u91cc\u7ee7\u7eed\u9012\u5f52 \uff08\u56e0\u4e3a\u8fd9\u91cc\u4e00\u5b9a\u6709\u7b54\u6848\uff09\n\n\u8fd9\u6837\u9012\u5f52\u4e0b\u53bb \u6700\u591a\u627e $logn$ \u6b21\uff0c\u5c31\u80fd\u627e\u5230\u7ed3\u679c \u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1010;\nint n;\nint ans[N][N],ans0,ans1;\nstring ask=\" \";\nvoid findans(int l,int r,int flag,int bef){\n\tif(l==r){\n\t\tif(flag)ans1=l;\n\t\telse ans0=l;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1,now1;\n\tfor(int i=l;i<=mid;i++){\n\t\task[i]='1'+'0'-ask[i];\n\t}\n\tcout<<\"? \"<<ask<<endl;\n\tcin>>now1;\n\tif(ask[l]-'0'==flag){\n\t\tif(now1-bef==mid-l+1)findans(mid+1,r,flag,now1);\n\t\telse findans(l,mid,flag,now1);\n\t}\n\telse{\n\t\tif(bef-now1==mid-l+1)findans(mid+1,r,flag,now1);\n\t\telse findans(l,mid,flag,now1);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)ask+=\"0\";\n\tcout<<\"? \"<<ask<<endl;\n\tcin>>ans[1][n];\n\task[n]='1';\n\tcout<<\"? \"<<ask<<endl;\n\tcin>>ans[1][n-1];\n\task[n]='0';\n\tif(ans[1][n]>ans[1][n-1]){\n\t\tans1=n;\n\t\tfindans(1,n,0,ans[1][n]);\n\t}\n\telse{\n\t\tans0=n;\n\t\tfindans(1,n,1,ans[1][n]);\n\t}\n\tcout<<\"! \"<<ans0<<\" \"<<ans1<<endl;\n}\n```\n\n\n",
        "postTime": 1617022949,
        "uid": 104319,
        "name": "Why_not_use_longlong",
        "ccfLevel": 0,
        "title": "CF862D Mahmoud and Ehab and the binary string \u9898\u89e3"
    },
    {
        "content": "### P.S.\n\u597d\u5bb6\u4f19\uff0c\u7b2c\u4e00\u6b21\u4ea4\u4e92\u4e00\u53d1 A \uff08\u5728\u4e0d\u770b\u9898\u89e3\u7684\u60c5\u51b5\u4e0b\u3002  \n\u8fd9\u7bc7\u9898\u89e3\u597d\u50cf\u6bd4\u697c\u4e0a\u697c\u4e0b\u7684\u4ee3\u7801\u90fd\u7b80\u6d01\uff1f\uff08\u622a\u81f3\u5f53\u524d  \n### Description.\n\u7ed9\u5b9a\u4e00\u4e2a `01` \u4e32\uff0c\u8981\u6c42\u5728 `15` \u6b21\u8be2\u95ee\u5185\u627e\u5230\u4efb\u610f\u4e00\u4e2a\u4e3a `0` \u7684\u4f4d\u7f6e\u548c\u4e00\u4e2a\u4e3a `1` \u7684\u4f4d\u503c\u3002  \n\u6bcf\u6b21\u8be2\u95ee\u4f60\u53ef\u4ee5\u7ed9\u5b9a\u4e00\u4e2a\u548c\u539f\u4e32\u7b49\u957f\u7684 `01` \u4e32\uff0c\u4f1a\u56de\u7b54\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u5dee\u7684\u5b57\u7b26\u6570\u3002  \n### Solution.\n\u8fd9\u4e2a\u8be2\u95ee\u6570\u91cf\u9650\u5236\u8ba9\u4eba\u60f3\u5230\u663e\u7136\u662f\u590d\u6742\u5ea6 $\\log$ \u7684\u4e8c\u5206\u3002  \n\n\u6211\u4eec\u9996\u5148\u67e5\u8be2\u5b57\u7b26\u4e32\u4e2d\u6709\u591a\u5c11\u4e2a `0`\u3002  \n\u7136\u540e\u6211\u4eec\u628a\u4e00\u6bb5\u533a\u95f4\u66ff\u6362\u6210 `1`\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u8fd9\u6bb5\u533a\u95f4\u5185 `0` \u548c `1` \u6570\u91cf\u5dee\u3002  \n\u800c\u6211\u4eec\u663e\u7136\u77e5\u9053\u4e86\u8fd9\u6bb5\u533a\u95f4 `0` \u548c `1` \u548c\u4e3a\u533a\u95f4\u957f\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u533a\u95f4 `0` \u6570\u91cf\u548c `1` \u6570\u91cf\u3002  \n\n\u663e\u7136\uff0c\u6211\u4eec\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5b83\u80af\u5b9a\u662f\u6700\u7ec8\u7b54\u6848\u7684\u4e00\u534a\uff08\u4e0b\u9762\u4ee3\u7801\u4e2d\u9009\u62e9\u4e86\u7b2c n \u4e2a\u4f4d\u7f6e\u3002  \n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728\u5269\u4e0b\u6240\u6709\u4e32\u4e2d\u627e\u5230\u53e6\u4e00\u4e2a\u6570\u5b57\u3002  \n\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\uff08\u867d\u7136\u5e76\u6ca1\u6709\u5355\u8c03\u6027\u3002  \n\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u7528\u4e00\u6b21\u8be2\u95ee\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u662f\u5426\u5168\u90e8\u90fd\u4e3a `0` \u6216 `1`\u3002  \n\uff08\u6bd5\u7adf\u4e0a\u9762\u90fd\u5df2\u7ecf\u53ef\u4ee5\u6c42\u51fa\u533a\u95f4\u6709\u591a\u5c11\u4e2a `0` \u4e86\u3002  \n\u5982\u679c\u533a\u95f4\u5b8c\u5168\u6ca1\u6709\u5f85\u67e5\u5143\u7d20\uff0c\u90a3\u5c31\u522b\u7ba1\u8fd9\u4e2a\u533a\u95f4\u3002  \n\u5426\u5219\u76f4\u63a5\u5728\u8fd9\u4e2a\u533a\u95f4\u9012\u5f52\u5c31\u597d\u4e86\u3002  \n\u867d\u7136\u6ca1\u6709\u5355\u8c03\u6027\uff0c\u4f46\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u4e00\u4e2a\u7b54\u6848\uff0c\u6240\u4ee5\u8fd9\u6837\u662f\u5bf9\u7684\u3002  \n\u67e5\u8be2\u6b21\u6570\u4e3a $O(\\log N)$\u3002  \n### Coding.\n```cpp\n//\u613f\u4f60\u548c\u4f60\u91cd\u8981\u7684\u4eba\u80fd\u591f\u518d\u6b21\u91cd\u9022\uff01\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<48||c>59;c=getchar()) if(!(c^45)) f=1;\n\tfor(;c>=48&&c<=57;c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tf?x=-x:0;\n}int n,tot;\ninline int qry(int l,int r)\n{//\u67e5\u8be2\u628a [l,r] \u53d8\u6210 1 \u540e\u4e0d\u540c\u5b57\u7b26\u6570\u91cf\n\tputchar('?'),putchar(' ');for(int i=1;i<=n;i++) putchar(48|(i>=l&&i<=r));\n\tputchar('\\n'),fflush(stdout);int x;return read(x),x;\n}\ninline int solve(int l,int r,int qwq)//\u8fd9\u662f\u627e\u5230\u4efb\u4e00 !qwq \u7684\u51fd\u6570\n{\n\tint md=(l+r)>>1;if(l==r) return l;//\u7ec8\u6b62\u6761\u4ef6\n\tif(qry(l,md)+(md-l+1)*((qwq<<1)-1)==tot) return solve(md+1,r,qwq);else return solve(l,md,qwq);\n\t//\u8fd9\u4e2a\u6761\u4ef6\u624b\u73a9/\u63a8\u5f0f\u5b50\u641e\u4e00\u4e0b\u5c31\u51fa\u6765\u4e86\uff0c\u5177\u4f53\u4e0d\u89e3\u91ca\u3002\n}\nint main()\n{\n\tread(n),tot=qry(0,0);int tt=qry(n,n);//tot\u76f8\u5f53\u4e8e\u662f\u51680\uff0ctt\u5224\u65ad\u7b2c n \u4e2a\u4f4d\u7f6e\u7684\u7c7b\u578b\n\tif(tt==tot+1) printf(\"! %d %d\\n\",n,solve(1,n-1,0));else printf(\"! %d %d\\n\",solve(1,n-1,1),n);//\u627e\u5230\u5c31\u597d\u4e86\n\treturn 0;\n}\n```",
        "postTime": 1612248417,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF862D Mahmoud and Ehab and the binary string\uff08\u9898\u89e3\uff09"
    }
]