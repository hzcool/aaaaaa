[
    {
        "content": "\u6839\u636e\u697c\u4e0a\u8bf4\u7684\uff0c\u56e0\u4e3a\u76f8\u90bb\u4e24\u6570\u4e0d\u8d85\u8fc71\uff0c\u6240\u4ee5\u5b50\u4e32\u4e2d\u6700\u5927\u503c\u7684\u503c\u51cf\u6700\u5c0f\u503c\u7684\u7ed3\u679c\u4e0d\u8d85\u8fc71\uff0c\u76f8\u5f53\u4e8e\u533a\u95f4\u5185\u53ea\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\u3002\n\n\u90a3\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u60f3\u3002\u8bb0\u4e94\u4e2a\u53d8\u91cf$sum1$,$cnt1$,$sum2$,$cnt2$\uff0c$l$\uff0c\u5206\u522b\u8868\u793a\u7b2c\u4e00\u4e2a\u503c\u3001\u7b2c\u4e00\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3001\u7b2c\u4e8c\u4e2a\u503c\u3001\u7b2c\u4e8c\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\u548c\u5f53\u524d\u5de6\u7aef\u70b9\u3002\u6bcf\u8bfb\u5165\u4e00\u4e2a\u6570$x$\uff0c\u5c31\u4e0e$sum1$\u548c$sum2$\u6bd4\u8f83\u3002\u5982\u679c$x$\u548c$sum1$\u6216$sum2$\u76f8\u7b49\uff0c\u90a3\u4e48\u76f4\u63a5\u5728\u5bf9\u5e94\u7684$cnt$\u4e0a\u52a0\u5373\u53ef\u3002\u5982\u679c\u90fd\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u76f4\u63a5\u5c06$l$\u4e0d\u65ad\u53f3\u79fb\u76f4\u5230$sum1$\u6216$sum2$\u51fa\u73b0\u6b21\u6570\u4e3a0\uff0c\u7136\u540e\u7528$x$\u6765\u66ff\u4ee3\u5c31\u884c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(N)$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,l,sum1,sum2,cnt1,cnt2,a[1000000],ans;\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&a[1]);\n\tl=1,sum1=a[1],cnt1=1;\n\tfor (int i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif (sum1==a[i]) cnt1++;\n\t\t\telse if (sum2==a[i]) cnt2++;\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\twhile (cnt1&&cnt2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (a[l]==sum1) cnt1--;\n\t\t\t\t\t\t\telse cnt2--;\n\t\t\t\t\t\tl++;\n\t\t\t\t\t}\n\t\t\t\t\tif (!cnt1) sum1=a[i],cnt1=1;\n\t\t\t\t\t\telse sum2=a[i],cnt2=1;\n\t\t\t\t}\n\t\tans=max(ans,cnt1+cnt2);\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n",
        "postTime": 1554479208,
        "uid": 29575,
        "name": "Holy_Push",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    },
    {
        "content": "~~\u5e73\u8861\u6811 ta \u4e0d\u9999\u5417\uff1f~~\n\n~~\u9ed1\u9898\u600e\u4e48\u80fd\u76f4\u63a5\u6c34\u8fc7\u53bb\uff1f~~\n\n\u6bcf\u6b21\u6269\u5c55\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u6839\u636e\u9898\u76ee\u7684\u7ea6\u675f\u66f4\u65b0\u5de6\u7aef\u70b9\u5373\u53ef\u3002\n\n\u6765\u4e00\u4efd $\\mathrm{Treap}$\uff0c\u5bb9\u6613\u7406\u89e3~~\u53c8\u597d\u5199~~\uff0c\u8fd8\u80fd\u7ec3\u7ec3\u624b\u3002\n\n- \u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=1e5+5;\nconst int inf=1e9+7;\nint n,a[N],ans,pos=1;\nstruct Treap{\n\tint son[N][2],cnt[N],siz[N],rd[N],val[N],R,num;\n\tvoid push(int x){siz[x]=cnt[x]+siz[son[x][0]]+siz[son[x][1]];}\n\tvoid rotate(int &x,int d){//\u5de6/\u53f3\u65cb,Treap\u57fa\u7840\u64cd\u4f5c \n\t\tint k=son[x][d^1];\n\t\tson[x][d^1]=son[k][d];\n\t\tson[k][d]=x;\n\t\tpush(x); push(k);\n\t\tx=k;\n\t}\n\tvoid ins(int &x,int v){//\u63d2\u5165,Treap\u57fa\u7840\u64cd\u4f5c \n\t\tif(!x){\n\t\t\tx=++num;\n\t\t\tsiz[num]=cnt[num]=1;\n\t\t\trd[num]=rand();\n\t\t\tval[num]=v;\n\t\t}\n\t\telse if(val[x]==v)siz[x]++,cnt[x]++;\n\t\telse{\n\t\t\tint d=v>val[x];\n\t\t\tins(son[x][d],v);\n\t\t\tif(rd[x]<rd[son[x][d]])rotate(x,d^1);\n\t\t\tpush(x);\n\t\t}\n\t}\n\tvoid del(int &x,int v){//\u5220\u9664,Treap\u57fa\u7840\u64cd\u4f5c\n\t\tif(!x)return;\n\t\tif(v>val[x])del(son[x][1],v);\n\t\telse if(v<val[x])del(son[x][0],v);\n\t\telse if(!son[x][0]&&!son[x][1]){\n\t\t\tsiz[x]--,cnt[x]--;\n\t\t\tif(siz[x]==0)x=0;\n\t\t}\n\t\telse if(son[x][0]&&!son[x][1]){\n\t\t\trotate(x,1); del(son[x][1],v);\n\t\t}\n\t\telse if(son[x][1]&&!son[x][0]){\n\t\t\trotate(x,0); del(son[x][0],v);\n\t\t}\n\t\telse{\n\t\t\tint d=rd[son[x][0]]>rd[son[x][1]];\n\t\t\trotate(x,d);\n\t\t\tdel(son[x][d],v);\n\t\t}\n\t\tpush(x);\n\t}\n\tint pre(int x,int v){//\u524d\u7f00,Treap\u57fa\u7840\u64cd\u4f5c\n\t\tif(!x)return -inf;\n\t\tif(v<=val[x])return pre(son[x][0],v);\n\t\telse return max(val[x],pre(son[x][1],v));\n\t}\n\tint suf(int x,int v){//\u540e\u7f00,Treap\u57fa\u7840\u64cd\u4f5c\n\t\tif(!x)return inf;\n\t\tif(v>=val[x])return suf(son[x][1],v);\n\t\telse return min(val[x],suf(son[x][0],v));\n\t}\n\tint getdif(){//\u6c42\u5f53\u524d\u533a\u95f4\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\n\t\treturn pre(R,inf)-suf(R,-inf);\n\t}\n}tr;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++){\n\t\ttr.ins(tr.R,a[i]);\n\t\twhile(tr.getdif()>1)tr.del(tr.R,a[pos++]);//\u66f4\u65b0\u5de6\u7aef\u70b9\n\t\tans=max(ans,i-pos+1);\n\t}\n\tcout<<ans<<endl;\n    return 0;\n}\n```\n\n\u8bdd\u8bf4\u8fd9\u8981\u662f\u5728 $\\mathrm{CF\\ Div.2\\ B}$ \u9898\u4e0a\u5199\u4e2a\u5e73\u8861\u6811\u6015\u4e0d\u662f\u5df2\u7ecf\u66b4\u6bd9\u4e86\u3002",
        "postTime": 1578052263,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u6076\u8bc4\u597d\u9898~\n\n\u5927\u4f6c\u4eec\u90fd\u5199\u7ebf\u6bb5\u6811\u3001ST\u8868\uff0c\u5c0f\u849f\u84bb\u53ea\u4f1a\u7528dp\u505a\n\n\u7ef4\u62a4\u4e00\u4e2a$dp[n][2]$\u6570\u7ec4\uff0c\u8bbe\u5f53\u524d\u6570\u503c\u4e3a$sum$\uff0c$dp[i][0]$\u7ef4\u62a4\u5f53\u524d\u70b9\u5411\u540e\u5ef6\u4f38\u7684\u6570\u503c\u4e3a$sum$\u548c$sum-1$\u7684\u5b50\u4e32\u7684\u6700\u5927\u957f\u5ea6\uff0c$dp[i][1]$\u7ef4\u62a4\u5f53\u524d\u70b9\u5411\u540e\u5ef6\u4f38\u7684\u6570\u503c\u4e3a$sum$\u548c$sum+1$\u7684\u5b50\u4e32\u7684\u6700\u5927\u957f\u5ea6\u3002\n\n\u663e\u7136\u82e5$a[i]=a[i+1]$\uff0c\n\u5219\u6709$dp[i][0]=dp[i+1][0]+1,dp[i][1]=dp[i+1][1]+1$\n\n\u82e5$a[i]=a[i+1]-1$\uff0c\u5219\u6709$dp[i][0]=dp[i+1][1]+1$\n\n\u82e5$a[i]=a[i+1]+1$\uff0c\u5219\u6709$dp[i][1]=dp[i+1][0]+1$\n\n\u5012\u7740\u904d\u5386\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\n\n\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint n,a[100001],dp[100001][2];\nint ans;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tdp[n][0]=dp[n][1]=1;\n\tfor(int i=n-1;i>=1;i--){\n\t\tdp[i][0]=dp[i][1]=1;\n\t\tif(a[i]==a[i+1])dp[i][0]=dp[i+1][0]+1,dp[i][1]=dp[i+1][1]+1;\n\t\telse if(a[i]==a[i+1]+1)dp[i][0]=dp[i+1][1]+1;\n\t\telse if(a[i]==a[i+1]-1)dp[i][1]=dp[i+1][0]+1;\n\t\tans=max(ans,max(dp[i][0],dp[i][1]));\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1566916152,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    },
    {
        "content": "\u8fd9\u9898\u597d\u5427\uff0c\u6076\u8bc4 emmm\n\n\u9996\u5148\u8fd9\u9898\u5f88\u6c34\u3002\u9898\u610f\u5982\u4e0b\n\n\u7ed9\u4f60\u4e00\u4e32\u6570\uff0c\u8ba9\u4f60\u627e\u5230\u5f53\u4e2d\u4e00\u4e2a\u5b50\u4e32\uff0c\u4f7f\u5f97\u6574\u4e2a\u4e32\u7684\u6700\u5927\u503c-\u6700\u5c0f\u503c\u4e0d\u5c0f\u4e8e1\u3002\n\n~~\u90a3\u4e0d\u662f\u5f88\u7b80\u5355\u5417~~\n\n\u6211\u76f4\u63a5\u5199\u66b4\u529b\uff0cemm\n\n\u5148\u7ed9\u4e00\u4e2a\u6ca1\u6709\u52a0\u8fc7\u4f18\u5316\u7684\u3002\n\n```cpp\n#include <cstdio>\n#include <map>\n\nusing namespace std;\n\ninline int read(){//\u7384\u5b66\u5feb\u8bfb\n    int AK=1,IOI=0;\n    char ch=0;\n    while (ch<'0'||ch>'9'){\n        AK=ch=='-'?-1:1;\n        ch=getchar();\n    }\n    while (ch<='9'&&ch>='0'){\n        IOI*=10;\n        IOI+=ch-48;\n        ch=getchar();\n    }\n    return AK*IOI;\n}\n\nint a[100001];\n\ninline int max(int x,int y){\n    return x>y?x:y;\n}\ninline int min(int x,int y){\n    return x<y?x:y;\n}\nint main(){\n    int n=read();\n    for (int i=1;i<=n;i++){\n        a[i]=read();\n    }\n    int answer=0;\n    for (int i=1;i<=n;i++){\n        int now_max=a[i],now_min=a[i];//\u5f53\u524d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n        int now_answer=1;//\u5f53\u524d\u7684\u6700\u957f\u5b50\u4e32\n        for (int j=i+1;j<=n;j++){\n            now_max=max(now_max,a[j]);//\u627e\u6700\u5927\u503c\n            now_min=min(now_min,a[j]);//\u627e\u6700\u5c0f\u503c\n            if (now_max-now_min>1) break;//\u5982\u679c\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u5c31\u9000\u51fa\n            now_answer++;\n        }\n        answer=max(now_answer,answer);//\u4fdd\u5b58\u7b54\u6848\n    }\n    printf(\"%d\",answer);\n}\n```\n\n\u6211\u4eec\u53d1\u73b0\u5b83\u5f88\u8f7b\u677e\u7684T\u4e86\uff0c\u90a3\u4e48\u6709\u4ec0\u4e48\u5730\u65b9\u53ef\u4ee5\u4f18\u5316\u5462\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4ed6\u7684\u7b54\u6848\u5f88\u5927\u65f6\u90a3\u4e48\u8fd9\u4e2a\u65f6\u95f4\u80af\u5b9a\u662f\u5f88\u5927\u7684\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5f88\u5927\u5c31\u8bf4\u660ej\u7684\u679a\u4e3e\u5f88\u5927\u3002\n\n\u7b54\u6848\u5f88\u5927\u7684\u8bdd\uff0c\u540e\u534a\u4e2a\u53ef\u4ee5\u5b8c\u5168\u4e0d\u7528\u505a\u554a\u3002\u56e0\u4e3a\u5c31\u7b97\u540e\u9762\u7b26\u5408\u6761\u4ef6\uff0c\u4f46\u662f\u5b83\u80af\u5b9a\u6ca1\u6709\u73b0\u5728\u7684\u5b50\u4e32\u957f\u4e0d\u662f\u5417\u3002\u90a3\u4e48\u76f4\u63a5\u628a\u540e\u9762\u534a\u4e2a\u8df3\u51fa\uff0c\u90a3\u4e48\u5c31\u4e0dT\u4e86\u3002\n\n\n\n```cpp\n#include <cstdio>\n#include <map>\n\nusing namespace std;\n\ninline int read(){//\u7384\u5b66\u5feb\u8bfb\n    int AK=1,IOI=0;\n    char ch=0;\n    while (ch<'0'||ch>'9'){\n        AK=ch=='-'?-1:1;\n        ch=getchar();\n    }\n    while (ch<='9'&&ch>='0'){\n        IOI*=10;\n        IOI+=ch-48;\n        ch=getchar();\n    }\n    return AK*IOI;\n}\n\nint a[100001];\n\ninline int max(int x,int y){\n    return x>y?x:y;\n}\ninline int min(int x,int y){\n    return x<y?x:y;\n}\nint main(){\n    int n=read();\n    for (int i=1;i<=n;i++){\n        a[i]=read();\n    }\n    int answer=0;\n    for (int i=1;i<=n;i++){\n        if (n-answer<i) break;//AC\u4e0eTLE\u7684\u533a\u522b\n        int now_max=a[i],now_min=a[i];//\u5f53\u524d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n        int now_answer=1;//\u5f53\u524d\u7684\u6700\u957f\u5b50\u4e32\n        for (int j=i+1;j<=n;j++){\n            now_max=max(now_max,a[j]);//\u627e\u6700\u5927\u503c\n            now_min=min(now_min,a[j]);//\u627e\u6700\u5c0f\u503c\n            if (now_max-now_min>1) break;//\u5982\u679c\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u5c31\u9000\u51fa\n            now_answer++;\n        }\n        answer=max(now_answer,answer);//\u4fdd\u5b58\u7b54\u6848\n    }\n    printf(\"%d\",answer);\n}\n```\n\n\n\u6b64\u4eba\u4e3aC++\u849f\u84bb\uff0c\u5728\u6b64\uff0c\u819c\u62dc\u5404\u4f4dC++\u5de8\u7237\u3002",
        "postTime": 1552476552,
        "uid": 46586,
        "name": "to_be_continued",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u8bf4\u6c42\u4e00\u4e2a\u5e8f\u5217\u7684\u5b57\u4e32\u4e2d\u80fd\u6ee1\u8db3 \u6700\u5927\u503c-\u6700\u5c0f\u503c<=0 \u7684\u6700\u957f\u90a3\u4e00\u4e2a\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u4e8c\u5206\u7b54\u6848\u3002\n\n\u4e8c\u5206\u4e00\u6bb5\u7684\u957f\u5ea6\uff0c\u5982\u679c\u4e00\u6bb5\u7684\u957f\u5ea6\u4e0d\u6ee1\u8db3\u7684\u8bdd\uff0c\u90a3\u4e48\u6bd4\u5b83\u66f4\u957f\u7684\u4e00\u6bb5\u4e5f\u4e00\u6bb5\u4e0d\u6ee1\u8db3\uff0c\u6240\u4ee5\u80fd\u6ee1\u8db3\u4e8c\u5206\u7684\u5355\u8c03\u6027\u3002\n\n\u533a\u95f4\u6700\u5c0f\u503c\u6700\u5927\u503c\u53ef\u4ee5\u4f7f\u7528st\u8868\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u5177\u4f53\u7684\u505a\u6cd5\u662f\u4e8c\u5206\u7b54\u6848+st\u8868\uff0c\u5148\u4e8c\u5206\u957f\u5ea6\uff0c\u518d\u4f7f\u7528check\u51fd\u6570\u679a\u4e3e\u67d0\u4e00\u4e2a\u4ee5i\u5f00\u5934\u7684\u4e00\u6bb5\uff0c\u5982\u679c\u8fd9\u4e00\u6bb5\u7684\u6700\u5927\u503c-\u6700\u5c0f\u503c\u76f8\u5dee\u4e0d\u8d85\u8fc71,\u90a3\u4e48\u8fd9\u4e00\u6bb5\u5c31\u6ee1\u8db3\uff0c\u5426\u5219\u4e0d\u6ee1\u8db3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $ O(nlogn) $\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,ans;\nint ai[100010],f[1<<17][20],f1[1<<17][20];\n\nint Max(int l,int r)\n{\n\tint k=log(r-l+1)/log(2);\n\treturn max(f[l][k],f[r-(1<<k)+1][k]); \n} \nint Min(int l,int r)\n{\n\tint k=log(r-l+1)/log(2);\n\treturn min(f1[l][k],f1[r-(1<<k)+1][k]); \n} \nbool check(int k)\n{\n\tfor(int i=1;i+k-1<=n;i++)\n\t\tif (Max(i,i+k-1)-Min(i,i+k-1)<=1) return true;\n\treturn false;\n}\n\nint main()\n{\n\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>ai[i],f[i][0]=f1[i][0]=ai[i];\n\tfor(int j=1;(1<<j)<=n;j++)\n\t{\n\t\tfor(int i=1;i+(1<<j)-1<=n;i++)\n\t\tf[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]),\n\t\tf1[i][j]=min(f1[i][j-1],f1[i+(1<<(j-1))][j-1]);\n\t}\n\t\n\tint l=1,r=n+1;\n\twhile(l+1<r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif (check(mid)) l=mid;\n\t\telse r=mid;\n\t}\n\tcout<<l<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1551585955,
        "uid": 52170,
        "name": "\u9759\u9759\u662f\u4ed6\u7684\uff0c",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u76f8\u90bb\u6570\u5dee\u4e0d\u8d85\u8fc7 $1$ \u7684\u5e8f\u5217\uff0c\u6c42\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u6ee1\u8db3\u5b50\u4e32\u4e2d\u7684\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u4e5f\u4e0d\u8d85\u8fc7 $1$\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u4e32\u6700\u591a\u4e00\u5b9a\u53ea\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u53ef\u4ee5\u5927\u529b $O(n)$ \u7ef4\u62a4\u3002\n\n\u4f46\u770b\u5728\u6570\u636e\u8303\u56f4\u7684\u9762\u5b50\u4e0a\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a $O(n\\log n)$ \u7684\u505a\u6cd5\uff0c\u8fd9\u4e2a\u505a\u6cd5\u5373\u4f7f\u76f8\u90bb\u6570\u5dee\u8d85\u8fc7 $1$ \u4e5f\u6ca1\u5173\u7cfb\u3002\n\n\u7528\u4e00\u4e2a\u5927\u6839\u5806\u3001\u5c0f\u6839\u5806\u5206\u522b\u7ef4\u62a4\u5f53\u524d\u5b50\u4e32\u6700\u5927\u6570\u548c\u6700\u5c0f\u6570\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5c31\u8981\u628a\u5de6\u8fb9\u754c\u5f80\u53f3\u79fb\u5bf9\u5427\uff0c\u4f46\u5806\u53c8\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\uff0c\u4e8e\u662f\u518d\u6dfb\u52a0\u4e00\u4e2a\u5927\u6839\u5806\u3001\u5c0f\u6839\u5806\uff0c\u628a\u5220\u9664\u7684\u6570\u5f80\u91cc\u9762\u653e\u3002\u5f53\u5bf9\u5e94\u7684\u539f\u5806\u548c\u5220\u9664\u5806\u6709\u76f8\u540c\u7684 $top$\uff0c\u540c\u65f6\u5220\u9664\u5373\u53ef\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <vector>\n\ninline int read() {\n    char c = getchar(); int n = 0; bool f = false;\n    while (c < '0' || c > '9') { if (c == '-') { f = true; } c = getchar(); }\n    while (c >= '0' && c <= '9') { n = (n << 1) + (n << 3) + (c & 15); c = getchar(); }\n    return f ? -n : n;\n}\n\nconst int maxN = 100005;\n\nint n, ans, a[maxN];\nstd::priority_queue<int> max, maxDel;\nstd::priority_queue<int, std::vector<int> , std::greater<int> > min, minDel;\n\nint main() {\n    n = read();\n    for (int i = 1, j = 1; i <= n; i++) {\n        a[i] = read(); max.push(a[i]); min.push(a[i]);\n        while (max.top() - min.top() > 1) {\n            maxDel.push(a[j]); minDel.push(a[j++]);\n            while (maxDel.size() && max.top() == maxDel.top()) { max.pop(); maxDel.pop(); }\n            while (minDel.size() && min.top() == minDel.top()) { min.pop(); minDel.pop(); }\n        }\n        ans = std::max(ans, i - j + 1);\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1543192378,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    },
    {
        "content": "\u4e00\u904d AC\uff0c\u867d\u7136\u662f\u9053\u6076\u610f\u8bc4\u6d4b\u7684\u9898\n\n\u539f\u9898\u94fe\u63a5[\u3010Approximating a Constant Range\u3011](https://www.luogu.org/problem/CF602B)\n\n\u770b\u5b8c\u672c\u9898\u7684\u9898\u9762\u548c\u6570\u636e\u8303\u56f4\u65f6\uff0c\u6211\u4e00\u5171\u60f3\u5230\u4e86\u4e09\u79cd\u7b97\u6cd5\uff1a\n\n\t\t1.\u4e8c\u5206\u7b54\u6848\uff0c\u56fa\u5b9a\u6ed1\u52a8\u7a97\u53e3\u957f\u5ea6\uff0c\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u533a\u95f4\u6700\u503c\n\n\t\t2.\u6ed1\u52a8\u7a97\u53e3\u957f\u5ea6\u53ef\u53d8\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u503c\uff08\u6216\u8005 ST \u8868\uff0c\u4f46\u662f ST \u8868\u5e38\u6570\u5176\u5b9e\u662f\u6bd4\u7ebf\u6bb5\u6811\u8981\u5927\u7684\uff09\n\n\u8be6\u89c1\u6211\u7684[\u3010[SNOI2017]\u70b8\u5f39\u3011](https://162867.blog.luogu.org/solution-p5025#)\u7684\u9898\u89e3\n\n\t\t3.\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5f53\u524d\u6700\u503c\uff0c\u6ed1\u52a8\u7a97\u53e3\n\n\u5f53\u7136\u8fd8\u6709\u50cf\u697c\u4e0a\u697c\u4e0b\u8bf4\u7684\u90a3\u79cd\u7ef4\u62a4\u662f\u54ea\u4e24\u4e2a\u6570\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u5982\u679c\u628a\u5dee\u503c\u6539\u6210 k \u5c31\u505a\u4e0d\u4e86\u4e86\u5427\n\n\u4e09\u79cd\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u5206\u522b\u662f\n\n\t\t1.O (n logn logn)\n\n\t\t2.O (n logn)\n\n\t\t3.O (n)\n\n\u6211\u9996\u5148\u5199\u4e86\u7b2c\u4e8c\u79cd\u7b97\u6cd5\uff0c\u5e76\u4e14\u63d0\u4ea4\u4e86\n\n\u7528\u7684\u662f \u7ebf\u6bb5\u6811 + \u6ed1\u52a8\u7a97\u53e3\n\n\u8dd1\u7684\u4e5f\u4e0d\u7b97\u5feb\uff0c\u4e0d\u5f00 O2 \u7528\u4e862.8 s\uff0c\u4f46\u662f\u5df2\u7ecf AC \u4e86\n\n\u4e5f\u53ef\u80fd\u662f\u6211\u7684\u7ebf\u6bb5\u6811\u5e38\u6570\u592a\u5927\u4e86\uff0cQwQ~~\n\n\u53ea\u8ffd\u6c42 AC \u7684\u540c\u5b66\u4eec\u53ef\u4ee5\u79bb\u5f00\u4e86\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\nconst int maxn = 1e5 + 10;\nconst int INF = 1e9;\n\ninline int read() {\n\tchar c = getchar(); int x = 0, f = 1;\n\tfor (; c > '9' || c < '0'; c = getchar()) if (c == '-') f = -1;\n\tfor (; c >='0' && c <='9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\treturn x * f; \n}\n\nint a[maxn];\nint n, ans;\n\nstruct djj_lxy_Tree {\n\tint z_max[maxn << 2], z_min[maxn << 2];\n\n\tvoid build (int l, int r, int now) {\n\t\tif (l == r) {\n\t\t\tz_max[now] = a[l];\n\t\t\tz_min[now] = a[l];\n\t\t\treturn ;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tbuild (l, mid, now << 1);\n\t\tbuild (mid + 1, r, now << 1 | 1);\n\t\tz_min[now] = min (z_min[now << 1], z_min[now << 1 | 1]);\n\t\tz_max[now] = max (z_max[now << 1], z_max[now << 1 | 1]);\n\t}\n\n\tint query_min (int l, int r, int now, int nowl, int nowr) {\n\t\tif (nowl <= l && r <= nowr)\n\t\t\treturn z_min[now];\n\t\tint mid = l + r >> 1, ans = INF;\n\t\tif (nowl <= mid)\n\t\t\tans = min (ans, query_min (l, mid, now << 1, nowl, nowr));\n\t\tif (mid < nowr)\n\t\t\tans = min (ans, query_min (mid + 1, r, now << 1 | 1, nowl, nowr));\n\t\treturn ans;\n\t}\n\t\n\tint query_max (int l, int r, int now, int nowl, int nowr) {\n\t\tif (nowl <= l && r <= nowr)\n\t\t\treturn z_max[now];\n\t\tint mid = l + r >> 1, ans = - INF;\n\t\tif (nowl <= mid)\n\t\t\tans = max (ans, query_max (l, mid, now << 1, nowl, nowr));\n\t\tif (mid < nowr)\n\t\t\tans = max (ans, query_max (mid + 1, r, now << 1 | 1, nowl, nowr));\n\t\treturn ans;\n\t}\n} t;\n\nvoid djj_lxy () {\n\tn = read();\n\tfor (register int i = 1; i <= n; i ++)\n\t\ta[i] = read();\n\tt.build (1, n, 1);\n\tint l = 1, r = 1, maxx = a[1];\n\tfor (; r <= n; ) {\n\t\tint now_max = t.query_max (1, n, 1, l, r);\n\t\tint now_min = t.query_min (1, n, 1, l, r);\n\t\tif (now_max - now_min <= 1)\n\t\t\tans = max (ans, r - l + 1), r ++;\n\t\telse\n\t\t\tl ++;\n\t}\n\tprintf (\"%d\\n\", ans);\n}\n\nint main () {\n\tdjj_lxy ();\n}\n```\n\n\u4e00\u79cd\u7b80\u5355\u7684\u597d\u60f3\u7684\u4f18\u5316\u601d\u8def\u5c31\u662f\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e00\u8d77\u8ba1\u7b97\n\n\u4e0b\u9762\u6211\u8bf4\u4e00\u4e0b\u7b2c\u4e09\u79cd O\uff08n\uff09\u7684\u7b97\u6cd5\n\n\u56e0\u4e3a\u6211\u5728\u5199\u7b2c\u4e09\u79cd\u7b97\u6cd5\u65f6\u5176\u5b9e\u8fd8\u4e0d\u4f1a\u5199\u5355\u8c03\u961f\u5217\uff0c\u53ea\u662f\u5bf9\u601d\u60f3\u6709\u70b9\u4e86\u89e3\n\n\u6240\u6709\u6211\u5176\u5b9e\u4e5f\u662f\u5728\u8fb9\u5b66\u8fb9\u8bf4\n\n\u5355\u8c03\u961f\u5217\uff0c\u4ee5\u7ef4\u62a4\u6700\u5927\u503c\u4e3a\u4f8b\n\n\u8981\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u90a3\u5c31\u8981\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u961f\u5217\n\n\u4e00\u822c\u4f7f\u7528 deque \u5b9e\u73b0\n\n\u6ce8\u610f\uff1a\u5355\u8c03\u961f\u5217\u52a0\u5165\u5143\u7d20\u65f6\uff0c\u52a0\u5165\u4e0b\u6807\u5373\u53ef\uff0c\u6211\u65e2\u52a0\u5165\u4e86\u4e0b\u6807\uff0c\u53c8\u52a0\u5165\u4e86\u503c\uff0c\u8c03\u4e86\u534a\u5e74\uff0c\u6539\u4e86\u4e4b\u540e\u624d\u8fc7\u6837\u4f8b\n\n\u5165\u961f\u64cd\u4f5c\n\n\t\t\u6bcf\u5f53\u6709\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u5165\u961f\u65f6\uff0c\u5148\u52a0\u5230\u5f53\u524d\u7684\u961f\u5c3e\uff0c\n\n\t\t\u628a\u5b83\u524d\u9762\u6240\u6709\u7684\u6bd4\u5b83\u5c0f\u7684\u5143\u7d20\u90fd\u5220\u9664\n\n\u51fa\u961f\u64cd\u4f5c\n\n\t\t\u5229\u7528\u52a0\u5165\u961f\u5217\u7684\u4e0b\u6807\u5224\u662f\u5426\u5220\u9664\u5373\u53ef\n\n\u672c\u9898\u4ee3\u7801\uff0c\u4e0d\u77e5\u4e3a\u4f55\u8dd1\u4e86 1.9 s\uff0cSTL \u7684 deque \u6ca1\u5f00 O2\uff0c\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <deque>\n#include <cmath>\n\nusing namespace std;\nconst int maxn = 1e5 + 10;\n\ninline int read() {\n\tchar c = getchar(); int x = 0, f = 1;\n\tfor (; c > '9' || c < '0'; c = getchar()) if (c == '-') f = -1;\n\tfor (; c >='0' && c <='9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\treturn x * f;\n}\n\nint a[maxn];\nint n, ans;\n\nstruct djj_queue {\n\tdeque <int> q;\n\n\tvoid push_back (int i, int x) {\n\t\tif (q.empty())\n\t\t\tq.push_back (i);\n\t\telse if (x > a[q.back()]) {\n\t\t\tfor (; x > a[q.back ()]; ) {\n\t\t\t\tq.pop_back ();\n\t\t\t\tif (q.empty()) break ;\n\t\t\t}\n\t\t\tq.push_back (i);\n\t\t}\n\t\telse\n\t\t\tq.push_back(i);\n\t}\n\t\n\tvoid pop_front (int l) {\n\t\tif (!q.empty())\n\t\t\tif (l == q.front())\n\t\t\t\tq.pop_front();\n\t}\n\t\n\tint query () {\n\t\tif (!q.empty())\n\t\t\treturn a[q.front()];\n\t\treturn 0;\n\t}\n} djj_;\n\nstruct lxy_queue {\n\tdeque <int> q;\n\n\tvoid push_back (int i, int x) {\n\t\tif (q.empty())\n\t\t\tq.push_back (i);\n\t\telse if (x < a[q.back()]) {\n\t\t\tfor (; x < a[q.back ()]; ) {\n\t\t\t\tq.pop_back();\n\t\t\t\tif (q.empty()) break ;\n\t\t\t}\n\t\t\tq.push_back (i);\n\t\t}\n\t\telse\n\t\t\tq.push_back(i);\n\t}\n\t\n\tvoid pop_front (int l) {\n\t\tif (!q.empty())\n\t\t\tif (l == q.front())\n\t\t\t\tq.pop_front();\n\t}\n\t\n\tint query () {\n\t\tif (!q.empty())\n\t\t\treturn a[q.front()];\n\t\treturn 0;\n\t}\n} lxy_;\n\nvoid djj_lxy () {\n\tn = read();\n\tfor (register int i = 1; i <= n; i ++)\n\t\ta[i] = read();\n\tint l = 1, r = 1;\n\tdjj_.push_back (1, a[1]);\n\tlxy_.push_back (1, a[1]);\n\tfor (; r <= n; ) {\n\t\tif (r < l) {\n\t\t\tdjj_.push_back (l, a[l]);\n\t\t\tlxy_.push_back(l, a[l]);\n\t\t\tr = l;\n\t\t}\n\t\tint now_djj = djj_.query();\n\t\tint now_lxy = lxy_.query();\n\t\tif (now_djj - now_lxy <= 1) {\n\t\t\tans = max (ans, r - l + 1), r ++;\n\t\t\tdjj_.push_back (r, a[r]);\n\t\t\tlxy_.push_back (r, a[r]);\n\t\t}\n\t\telse {\n\t\t\tdjj_.pop_front (l);\n\t\t\tlxy_.pop_front (l);\n\t\t\tl ++;\n\t\t}\n\t}\n\tprintf (\"%d\\n\", ans);\n\texit (0);\n}\n\nint main () {\n\tdjj_lxy ();\n}\n```\n\n\u90a3\u5c31\u5148\u8fd9\u6837\u5427\uff0c\u590d\u4e60\u6ed1\u52a8\u7a97\u53e3\u987a\u5e26\u5b66\u4e00\u4e0b\u5355\u8c03\u961f\u5217\n\n\u8ddd\u79bb CSP-S \u8fd8\u6709\u5341\u5929\uff0c\u795d\u5927\u5bb6 rp ++\n\n\u4e5f\u5e0c\u671b\u81ea\u5df1\u80fd\u66f4\u52aa\u529b\u4e00\u4e9b\uff0c\u52a0\u6cb9",
        "postTime": 1572839252,
        "uid": 162867,
        "name": "shame_djj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    },
    {
        "content": "\u8fd9\u662f\u5168\u6d1b\u8c37\u6700\u6709 **_\u6c34_** \u51c6\u7684\u4e00\u9053\u9ed1\u9898\n\n\u672c\u849f\u84bb\u7684\u601d\u8def\u5f88\u7b80\u5355\uff0c\u7528\u7ebf\u6bb5\u6811\uff08\u6216st\u8868\u7b49\uff09\u6765\u5b58\u6bcf\u4e00\u4e2a\u6570\uff0c\u6811\u4e0a\u8282\u70b9\u8868\u793a\u6bcf\u4e00\u6bb5\u6570\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u624b\u52a8\u6a21\u62df\u961f\u5217\uff0c\u5982\u679c\u5373\u5c06\u5165\u961f\u7684\u5143\u7d20\u548c\u961f\u4e2d\u6240\u6709\u5143\u7d20\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u4e4b\u5dee>1\uff0c\u6216\u8005\u961f\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e4b\u5dee\u5df2\u7ecf>1\uff08\u4e0d\u8fc7\u597d\u50cf\u6ca1\u6709\u5fc5\u8981\u8003\u8651\u8fd9\u4e00\u6b65\uff09\uff0c\u8bf4\u660e\u5982\u679c\u628a\u8fd9\u4e2a\u6570\u63d2\u5165\u5230\u961f\u5217\u4e2d\uff0c\u961f\u4e2d\u5143\u7d20\u65e0\u6cd5\u7ec4\u6210\u4e00\u4e2a\u5408\u6cd5\u7684\u5b50\u5e8f\u5217\uff0c\u5219\u5c06\u961f\u9996\u5143\u7d20\u5f39\u51fa\uff08\u5934\u6307\u9488h++\uff09\uff0c\u76f4\u5230\u8fd9\u4e2a\u6570\u53ef\u4ee5\u548c\u961f\u4e2d\u5143\u7d20\u7ec4\u6210\u4e00\u4e2a\u5408\u6cd5\u7684\u5b50\u5e8f\u5217\u4e3a\u6b62\u3002\n\n\u8fd9\u6837\u6bcf\u6b21\u64cd\u4f5c\u540e\uff0c\u961f\u4e2d\u7684\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u5408\u6cd5\u7684\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u66f4\u65b0ans\u5c31\u53ef\u4ee5\u4e86\uff1b\n\n\u6700\u540e\u5c3e\u6307\u9488t++\u3002\n\n\u5230\u5c3e\u6307\u9488\u6307\u5230\u6700\u540e\u4e00\u4f4d\u540e\u505c\u6b62\u3002\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c~~\u8bf7\u5927\u5bb6\u539f\u8c05\u6211\u5bf9\u7ebf\u6bb5\u6811\u7684\u504f\u597d~~\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct mp{\n\tint l,r,w,f,m;\n}p[9999999];\nint n,m;\nint x,y,maxx,o,a[100050],num,minn;\nvoid build(int l,int r,int k)\n{\n\tp[k].l=l;p[k].r=r;\n\tif(l==r)\n\t{\n\t\tscanf(\"%d\",&p[k].w);//\u5efa\u6811\n\t\tp[k].m=p[k].w;\n\t\ta[++num]=p[k].w;\n\t\treturn;\n\t}\n\tint m=(l+r)/2;\n\tbuild(l,m,k*2);\n\tbuild(m+1,r,k*2+1);\n\tp[k].w=max(p[k*2].w,p[k*2+1].w);\n\tp[k].m=min(p[k*2].m,p[k*2+1].m);\n}\nvoid search(int k,int x,int y)\n{\n\tif(p[k].l>=x&&p[k].r<=y)\n\t{\n\t\tmaxx=max(maxx,p[k].w);//\u627e\u6700\u5927\u503c\n\t\tminn=min(minn,p[k].m);//\u627e\u6700\u5c0f\u503c\n\t\treturn ;\n\t}\n\tint m=(p[k].l+p[k].r)/2;\n\tif(x<=m)search(k*2,x,y);\n\tif(y>m)search(k*2+1,x,y);\n}\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n*4;i++)\n\tp[i].m=999999;//\u521d\u59cb\u5316\n\tbuild(1,n,1);\n\tint h=1,t=2,anss=1;\n\twhile(t<=n)\n\t{\n\t\tmaxx=0;minn=999999;\n\t\tsearch(1,h,t-1);\n\t\twhile((abs(a[t]-maxx)>1||abs(a[t]-minn)>1||abs(maxx-minn)>1)&&h<t)\n\t\t{\n\t\t\tmaxx=0;minn=999999;\n\t\t\th++;\n\t\t\tsearch(1,h,t-1);//\u67e5\u5f39\u51fa\u961f\u9996\u540e\u7684\u5e8f\u5217\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n\t\t}\n\t\tanss=max(anss,t-h+1);\n\t\tt++;\n\t}\n\tprintf(\"%d\",anss);\n\treturn 0;\n}\n```\n\n\u7531\u4e8e~~CF\u6570\u636e\u6bd4\u8f83\u6bd2\u7624~~\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u53ef\u80fd\u6709\u4e9b\u5197\u4f59\u7684\u5224\u65ad\u548c\u64cd\u4f5c\uff0c~~\u8bf7\u5404\u4f4d\u5927\u4f6c\u65e0\u89c6~~",
        "postTime": 1544802790,
        "uid": 50190,
        "name": "\u54e5\u4f60\u633a6\u554a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF602B"
    },
    {
        "content": "## \u9898\u76ee\u94fe\u63a5\uff1a[CF602B Approximating a Constant Range](https://www.luogu.org/problemnew/show/CF602B)\n## **\u6a21\u62df\u4e86\u4e00\u4e0b\u5c31\u6c34\u8fc7\u53bb\u4e86**\n\n**\u5176\u5b9e\u6211\u8c03\u4e86\u597d\u4e45\uff08~~\u6211\u592a\u5f31\u4e86~~\uff09**\n\n\u9700\u8981\u7528\u5230\u51e0\u4e2a\u53d8\u91cf\uff1as1,c1,s2,c2,tot,ans\n\n\u5206\u522b\u4ee3\u8868\u76ee\u524d\u5b57\u4e32\u5176\u4e2d\u4e00\u4e2a\u6570\u7684\u503c\uff0c\u8fd9\u4e2a\u6570\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u6570\u7684\u503c\uff0c\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u76ee\u524d\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u5df2\u6c42\u5f97\u7684\u6700\u957f\u7684\u957f\u5ea6\n\n\u7136\u540e\u5c31\u662fO\uff08n\uff09\u6a21\u62df\n\n\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\nint s1,s2,c1,c2;\nint a[100100];\nint n,ans=-1000000;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {cin>>a[i];}\n    s1=a[1];c1=1;\n    int tot=1;\n    for(int i=2;i<=n;i++)\n    {\n        if(a[i]!=s1&&a[i]!=s2)\n        {\n            ans=max(ans,tot);\n            if(abs(s1-a[i])<abs(s2-a[i]))\n            {s2=a[i];tot=i-c2;c2=i;}\n            else{s1=a[i];tot=i-c1;c1=i;}\n        }\n        else if(a[i]==s1) c1=i,tot++;\n        else if(a[i]==s2) c2=i,tot++;\n    }\n    cout<<max(ans,tot);\n    return 0;\n}\n```\n\n**\u7ba1\u7406\u5927\u5927\u6c42\u8fc7**",
        "postTime": 1556380505,
        "uid": 84066,
        "name": "Mcggvc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    },
    {
        "content": "###\n\u8fd9\u4e2a\u9898\u7684\u505a\u6cd5\u5f88\u591a\u5462\u4f46\u662f\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u7528\u5355\u8c03\u961f\u5217\u6765\u505a\u5462\n\u5355\u8c03\u961f\u5217\u5b8c\u5168\u53ef\u4ee5\u505a\u8fd9\u4e2a\u9898QwQ;\n\u5c31\u662f\u7ef4\u62a4\u4e24\u4e2a\u961f\u5217\u5440\uff0c\u563b\u563b\uff1b\n```\n#include<iostream>\n#include<cstdio>\n#include<deque>\nusing namespace std;\nconst int N=100005;\nstruct node\n{\n\tint ans;\n\tint length;\n};\ndeque<node>q1;\ndeque<node>q2;\nint n,s[N],ans=-1,pre;//pre1\u5343\u4e07\u4e0d\u8981\u4e2d\u95f4\u6e05\u96f6QwQ\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&s[i]);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(!q1.empty()&&q1.back().ans<s[i])q1.pop_back();//\u5355\u8c03\u9012\u589e\u961f\u5217\n\t\twhile(!q2.empty()&&q2.back().ans>s[i])q2.pop_back();////\u5355\u8c03\u9012\u51cf\u961f\u5217\n\t\tq1.push_back((node){s[i],i});\n\t\tq2.push_back((node){s[i],i});\n\t\twhile(q1.front().ans-q2.front().ans>1&&!q1.empty()&&!q2.empty())\n\t\t{\n\t\t\tif(q1.front().length>q2.front().length){pre=q2.front().length+1;q2.pop_front();}\n\t\t\telse {pre=q1.front().length+1;q1.pop_front();}\n\t\t}\n\t\tans=max(ans,i-pre+1);//\u8fd9\u4e2a\u5730\u65b9\u6ce8\u610f\u4e86\uff0c\u6211\u4e3a\u4e86\u597d\u7406\u89e3\u5199\u7684pre+1,\u4e5f\u53ef\u4ee5\u672c\u6765\u5c31\u628apre\u8bbe\u6210pre+1\uff0c\u4f46\u662f\u4e0d\u5927\u597d\u7406\u89e3\u662f\u4e0d\u662f\uff1b\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1553679058,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF602B \u3010Approximating a Constant Range\u3011"
    }
]