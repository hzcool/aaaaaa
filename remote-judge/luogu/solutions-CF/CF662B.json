[
    {
        "content": "# \u5e76\u67e5\u96c6\r\n\r\n\u63d0\u4f9b\u4e00\u79cd\u53ea\u9700\u4f7f\u7528\u5e76\u67e5\u96c6\u7684\u597d\u5199\u7684\u65b9\u6cd5\u3002\r\n\r\n\u7edf\u4e00\u84dd\u548c\u7edf\u4e00\u7ea2\u53ea\u6709\u4e00\u4e2a\u53d6\u53cd\u7684\u5dee\u522b\uff0c\u4ee5\u4e0b\u9ed8\u8ba4\u5168\u90e8\u7edf\u4e00\u4e3a\u84dd\u3002\r\n\r\n\u4e00\u6761\u84dd\u8fb9\uff0c\u5b83\u7684\u4e24\u4e2a\u7aef\u70b9\u8981\u4e48\u90fd\u9009\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\u3002\r\n\r\n\u4e00\u6761\u7ea2\u8fb9\uff0c\u5b83\u7684\u4e24\u4e2a\u7aef\u70b9\u53ea\u9009\u62e9\u5176\u4e2d\u4e4b\u4e00\u3002\r\n\r\n\u4e8e\u662f\u5bf9\u6bcf\u4e2a\u70b9\u5efa\u7acb\u4e24\u4e2a\u4e8b\u4ef6\u201c\u5b83\u9009\u201d\u548c\u201c\u5b83\u4e0d\u9009\u201d\uff0c\u53ef\u4ee5\u7528\u8bf8\u5982  $i,i+n$  \u7684\u4e00\u7c7b\u65b9\u6cd5\u8bb0\u5f55\uff0c\u4ee5\u4e0b\u4ee5  $i$  \u8868\u793a\u9009\uff0c$i+n$  \u8868\u793a\u4e0d\u9009\u3002\r\n\r\n\r\n\u6309\u7167\u4e0a\u9762\u7684\u6761\u4ef6\uff0c\u8bbe\u4e00\u6761\u8fb9\u4e24\u4e2a\u7aef\u70b9\u4e3a  $(u,v)$\u3002\u53ef\u4ee5\u53d1\u73b0\uff1a\r\n\r\n\u4e00\u6761\u84dd\u8fb9\uff0c\u52a0\u5165\u65e0\u5411\u8fb9  $(u,v),(u+n,v+n)$\u3002\r\n\r\n\u4e00\u6761\u7ea2\u8fb9\uff0c\u52a0\u5165\u65e0\u5411\u8fb9  $(u,v+n),(u+n,v)$\u3002\r\n\r\n\r\n\u5230\u4e86\u8fd9\u4e00\u6b65\uff0c\u5927\u90e8\u5206\u9898\u89e3\u4f7f\u7528\u4e86  $\\rm 2-SAT$  \u5224\u5b9a\u3002\r\n\r\n\u4f46\u5176\u5b9e\u8fd9\u4e9b\u6761\u4ef6\u90fd\u662f\u53cc\u5411\u7684\uff0c\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5224\u65ad\uff0c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u7684\u4e8b\u4ef6\u5fc5\u987b\u540c\u65f6\u53d1\u751f\u3002\r\n\r\n\u4e8e\u662f\u8d2a\u5fc3\u5730\u9009\u62e9\u4e00\u4e0b\u64cd\u4f5c\u6700\u5c11\u8fde\u901a\u5757\u5c31\u597d\u4e86\uff0c\u751a\u81f3\u4e0d\u7528\u5efa\u56fe\uff0c\u4e5f\u6ca1\u6709\u5565\u7ec6\u8282\u3002\r\n\r\n\u4ee3\u7801\uff1a\r\n\r\n```\r\n#include<bits/stdc++.h>\r\n#define rep(a,b,c) for(int c(a);c<=(b);++c)\r\n#define drep(a,b,c) for(int c(a);c>=(b);--c)\r\nusing namespace std;\r\ninline int read()\r\n{\r\n\tint res=0;char ch=getchar();while(ch<'0'||ch>'9')ch=getchar();\r\n\twhile(ch<='9'&&ch>='0')res=res*10+(ch^48),ch=getchar();return res;\r\n}\r\ninline bool Get(){char c;do c=getchar();while(c!='R'&&c!='B');return c=='R';}\r\nconst int N=1e5+10;int fa[N<<1],U[N],V[N],sz[N<<1];bool W[N],vis[N<<1];int n,m;\r\ninline int fnd(int x){return fa[x]==x?x:fa[x]=fnd(fa[x]);}\r\ninline void merge(int x,int y)\r\n{\r\n\tint X=fnd(x),Y=fnd(y);if(X==Y)return;\r\n\tfa[X]=Y;sz[Y]+=sz[X];\r\n}\r\nvector<int> a[2];\r\ninline bool work(vector<int> &ans)\r\n{\r\n\tmemset(vis+1,0,n<<1);\r\n\trep(1,n<<1,i)fa[i]=i,sz[i]=(i<=n);\r\n\trep(1,m,i)\r\n\t{\r\n\t\tint u=U[i],v=V[i];\r\n\t\tif(W[i])merge(u,v),merge(u+n,v+n);\r\n\t\telse merge(u+n,v),merge(u,v+n);\r\n\t}\r\n\trep(1,n,i)if(fnd(i)==fnd(i+n))return false;\r\n\trep(1,n,i)\r\n\t{\r\n\t\tint u=fnd(i),v=fnd(i+n);\r\n\t\tif(!vis[u]&&!vis[v])\r\n\t\t{\r\n\t\t\tif(sz[u]<sz[v]){ans.push_back(i);vis[v]=true;}\r\n\t\t\telse vis[u]=true;\r\n\t\t}\r\n\t\telse{if(vis[v])ans.push_back(i);}\r\n\t}\r\n\treturn true;\r\n}\r\ninline void print(vector<int> &a)\r\n{\r\n\tprintf(\"%d\\n\",int(a.size()));\r\n\tfor(int v:a)printf(\"%d \",v);puts(\"\");\r\n}\r\nint main()\r\n{\r\n\tn=read();m=read();rep(1,m,i){U[i]=read();V[i]=read();W[i]=Get();}\r\n\tbool f1=work(a[0]);\r\n\trep(1,m,i)W[i]^=1;\r\n\tbool f2=work(a[1]);\r\n\tif(!f1&&!f2)return puts(\"-1\"),0;\r\n\tif(!f1||!f2){if(f1)print(a[0]);else print(a[1]);return 0;}\r\n\tif(a[0].size()>a[1].size())print(a[1]);else print(a[0]);\r\n}\r\n``\r\n\r\n",
        "postTime": 1665568865,
        "uid": 191281,
        "name": "Jr_Zlw",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF662B Graph Coloring"
    },
    {
        "content": "\u5de8\u5927\u591a\u7ec6\u8282\u9898\u3002\n\n\u663e\u7136\u8054\u901a\u5757\u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\uff0c\u4e8e\u662f\u6211\u4eec\u6bcf\u4e2a\u8054\u901a\u5757\u5355\u72ec\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u9996\u5148\u5168\u5c40\u8003\u8651\u6700\u540e\u628a\u8fb9\u67d3\u6210\u7ea2\u8272\u8fd8\u662f~~\u9ed1\u8272~~\u84dd\u8272\u3002\n\n\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u70b9\u786e\u5b9a\u4e86\u989c\u8272\uff0c\u90a3\u4e48\u4e0e\u8fd9\u4e2a\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u4e5f\u786e\u5b9a\u4e86\u989c\u8272\uff0c\u8fd9\u6837\u4e0b\u53bb\u6574\u4e2a\u8054\u901a\u5757\u7684\u989c\u8272\u90fd\u786e\u5b9a\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6bcf\u4e2a\u8054\u901a\u5757\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9\u8003\u8651\u5c31\u884c\u4e86\u3002\n\n\u9996\u5148\u5047\u8bbe\u5b83\u4e0d\u9009\u3002\u7136\u540e\u5982\u679c\u67d3\u8272\u6210\u529f\uff0c\u6ce8\u610f\u5230\u628a\u6bcf\u4e2a\u70b9\u72b6\u6001\u53cd\u8f6c\u4e4b\u540e\u4e00\u5b9a\u8fd8\u662f\u6210\u529f\u7684\uff08\u76f8\u5f53\u4e8e\u5f02\u6216 $1$ \u4e24\u6b21\uff09\u3002\n\n\u90a3\u4e48\u770b\u53cd\u8f6c\u662f\u5426\u66f4\u4f18\uff0c\u5982\u679c\u66f4\u4f18\u5c31\u53cd\u8f6c\u3002\n\n```cpp\n// Problem: CF662B Graph Coloring\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF662B\n// Memory Limit: 250 MB\n// Time Limit: 1000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#include <stdio.h>\n#include <string.h> \n#include <stdlib.h>\n#include <queue>\n#define odb(x) printf(\"%d \",x)\n#define odl(x) printf(\"%d\\n\",x)\n#define rg(x) for(int i=1;i<=(x);i++){\n#define fe(u) for(int i=h[u];i;i=e[i].nxt){int v=e[i].v,w=e[i].w;\n#define gr }\n#define int long long\n#define newe(n) struct Edge{int v,w,nxt;}e[n*2+5];\\\ntypedef int arr[n+5];\\\narr h;\\\nint cnt=1;\\\ninline void addedge(int u,int v,int w){e[cnt]=(Edge){v,w,h[u]};h[u]=cnt++;}\ninline int read()\n{\n\tint num=0,f=1;char c=getchar();\n\twhile(c<48||c>57){if(c=='-')f=-1;c=getchar();}\n\twhile(c>47&&c<58)num=num*10+(c^48),c=getchar();\n\treturn num*f;\n}\ninline int re1d()\n{\n\tchar c=getchar();\n\twhile(c<'A'||c>'Z')c=getchar();\n\treturn c=='R';\n}\ninline int min(int a,int b){return a>b?b:a;}\ninline int max(int a,int b){return a<b?b:a;}\nnewe(200005)\nint ans[200005];\nclass cmll02{\n\tpublic:\n\tint fin=0;\nint vis[200005];\nint qwq[200005];\nint wis[200005],y[200005];\nvoid cpy_main(int u,int fa,int q)\n{\n\twis[u]=1;\n\tqwq[u]^=q;\n\tfe(u)(wis[v]==0)?cpy_main(v,u,q):(void)0;gr\n}\nint sz,ss;\nvoid cpy_cnt(int u,int fa)\n{\n\ty[u]=1;\n\tsz++;ss+=qwq[u];\n\tfe(u)(y[v]==0)?cpy_cnt(v,u):(void)0;gr\n}\nvoid cpy(int u,int fa)\n{\n\tsz=ss=0;\n\tcpy_cnt(u,fa);\n\tif(ss>sz-ss)cpy_main(u,fa,1);\n\telse cpy_main(u,fa,0);\n}\nint dfs(int u,int fa,int c)\n{\n\tqwq[u]=2;vis[u]=1;\n\tint c1=0,c0=0;\n\tfe(u)if(vis[v])if(qwq[v]==(c^1^w))c1++;else c0++;gr\n\tint rs=0;\n\tif(c1==c0&&c0==0)\n\t{\n\t\tqwq[u]=0;\n\t\tfe(u)(vis[v]==0)&&(rs+=dfs(v,u,c));gr\n\t\treturn rs;\n\t}\n\tif(c1&&c0)return 1919810;\n\tif(c0)qwq[u]=0;else qwq[u]=1,rs=1;\n\tfe(u)(vis[v]==0)&&(rs+=dfs(v,u,c));gr\n\treturn rs;\n}}cmll[2];\ninline void solve(int n)\n{\n\tint q0=(cmll[0].dfs(n,0,0)),q1=(cmll[1].dfs(n,0,1));\n\tcmll[0].cpy(n,0);\n\tcmll[1].cpy(n,0);\n//\todp(q0,q1);\n\tcmll[0].fin+=q0;\n\tcmll[1].fin+=q1;\n\tif(min(q1,q0)>=1919810){puts(\"-1\");exit(0);};\n//\tif(q0<q1)cmll[0].cpy(n,0);else cmll[1].cpy(n,1);\n}\nsigned main()\n{\n\tint n=read(),m=read();\n\trg(m)int u=read(),v=read(),w=re1d();addedge(u,v,w);addedge(v,u,w);gr\n\trg(n)if(!cmll[0].vis[i]&&!cmll[1].vis[i])solve(i);gr\n\tint q0=cmll[0].fin,q1=cmll[1].fin;\n\tif(min(q0,q1)>=1919810)return puts(\"-1\")&0;\n\tq0=0,q1=0;\n\trg(n)q0+=cmll[0].qwq[i];gr\n\trg(n)q1+=cmll[1].qwq[i];gr\n\tif(cmll[0].fin>=1919810)q0=1919810;\n\tif(cmll[1].fin>=1919810)q1=1919810;\n//\toldp(q0,q1);//\n\tif(q0<q1)\n\t{\n\t\todl(q0);\n\t\trg(n)cmll[0].qwq[i]&&odb(i);gr\n\t}\n\telse\n\t{\n\t\todl(q1);\n\t\trg(n)cmll[1].qwq[i]&&odb(i);gr\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1624359982,
        "uid": 171487,
        "name": "cmll02",
        "ccfLevel": 8,
        "title": "/wq"
    },
    {
        "content": "[\u6d1b\u8c37CF662B](https://www.luogu.org/problemnew/show/CF662B)\n\n---\n# \u5206\u6790\n\u9996\u5148\u7ffb\u8f6c\u5947\u6570\u6b21\u4e5f\u5c31\u662f\u7ffb\u8f6c\u4e00\u6b21\uff0c\u7ffb\u8f6c\u5076\u6570\u6b21\u4e5f\u5c31\u662f\u4e0d\u7ffb\u8f6c\uff0c\u9996\u5148\u6211\u4eec\u5148\u679a\u4e3e\u8981\u5168\u90e8\u53d8\u6210\u7684\u989c\u8272\uff0c\u5982\u679c\u8fd9\u6837\u7ffb\u8f6c\uff0c\u4f1a\u5206\u6210\u51e0\u4e2a\u8fde\u901a\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u56fe\uff0c\u7528\u6df1\u641c\u7684\u65b9\u5f0f\uff0c\u5148\u6307\u5b9a\u4e00\u4e2a\u70b9\u8981\u7ffb\u8f6c\uff0c\u7136\u540e\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u5224\u65ad\u662f\u5426\u9700\u8981\u7ffb\u8f6c\uff0c\u5982\u679c\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u7ffb\u8f6c\u8fc7\u800c\u4e14\u4e0d\u5408\u6cd5\uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\u5e94\u8be5\u4f1a\u5206\u6210\u4e24\u4e2a\u9635\u8425\uff0c\u53d8\u8272\u6216\u8005\u4e0d\u53d8\u8272\uff0c\u82e5\u53d8\u8272\u6570\u91cf\u8d85\u8fc7\u4e0d\u53d8\u8272\u6570\u91cf\uff0c\u5f53\u7136\u9700\u8981\u628a\u4e0d\u53d8\u8272\u7684\u70b9\u53d8\u8272\uff0c\u53d8\u8272\u7684\u70b9\u4e0d\u53d8\u8272\uff0c\u6211\u7684\u65b9\u6cd5\u5c31\u662f\u7528\u4e00\u4e2a\u961f\u5217\u628a\u6240\u6709\u70b9\u5b58\u4e0b\u6765\uff0c\u5f53\u53d8\u8272\u6570\u91cf$tot1$>\u4e0d\u53d8\u8272\u6570\u91cf$tot2$,\u96c6\u4f53\u7ffb\u8f6c\n\n---\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <queue>\n#define rr register\nusing namespace std;\nstruct node{int y,w,next;}e[200011];\nint color1[100001],color[100001]; queue<int>q;\nint n,k=1,tot1,tot2,ls[100001],ans=-1,want;\ninline signed iut(){\n    rr int ans=0; rr char c=getchar();\n    while (!isdigit(c)) c=getchar();\n    while (isdigit(c)) ans=(ans<<3)+(ans<<1)+(c^48),c=getchar();\n    return ans;\n}\ninline void dfs(int x){\n    if (color[x]) ++tot1; else ++tot2; q.push(x);\n    for (rr int i=ls[x];i;i=e[i].next){\n        rr int j=color[x]^want^e[i].w;\n        if (color[e[i].y]<0){\n            color[e[i].y]=j;\n            dfs(e[i].y);\n            if (tot1<0) return;\n        }\n        else if (color[e[i].y]!=j) {tot1=-1; return;}//\u600e\u4e48\u53ef\u80fd\u6709\u89e3\n    }\n}\ninline void tryto(int temp){\n    rr int tans=0; want=temp;\n    memset(color,-1,sizeof(color));\n    for (rr int i=1;i<=n;++i)\n    if (color[i]<0){\n    \twhile (q.size()) q.pop();\n        tot1=tot2=0,color[i]=1,dfs(i);\n        if (tot1<0) {tans=-1; break;}\n        tans+=tot1<tot2?tot1:tot2;\n        rr bool t=tot1>tot2;\n        while (q.size())\n            color[q.front()]^=t,q.pop();\n    }\n    if ((ans==-1||ans>tans)&&tans!=-1){\n        for (rr int i=1;i<=n;++i)\n            color1[i]=color[i];\n        ans=tans;\n    }\n}\nsigned main(){\n    n=iut();\n    for (rr int m=iut();m;--m){\n        rr int x=iut(),y=iut(),q=getchar()=='R';\n        e[++k]=(node){y,q,ls[x]}; ls[x]=k;\n        e[++k]=(node){x,q,ls[y]}; ls[y]=k;\n    }\n    tryto(0); tryto(1);\n    printf(\"%d\\n\",ans);\n    if (ans!=-1) for (rr int i=1;i<=n;++i)\n    if (color1[i]) printf(\"%d \",i);\n    return 0;\n}\n```",
        "postTime": 1554620402,
        "uid": 37782,
        "name": "lemondinosaur",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF662B \u3010Graph Coloring\u3011"
    },
    {
        "content": "\u5df2\u7ecf\u6709\u4e00\u7bc7 2-SAT \u9898\u89e3\u4e86\uff0c\u4f46\u90a3\u7bc7\u9898\u89e3\u6ca1\u6709\u7528\u5230\u672c\u9898\u7684\u6027\u8d28\uff0c\u5bfc\u81f4\u4ee3\u7801\u4e0d\u90a3\u4e48\u7b80\u6d01\n\n---\n\n\u5206\u522b\u7b97\u5168\u53d8\u6210 `R` \u6216 `B` \u7684\u4ee3\u4ef7\u53d6 $\\min$\uff0c\u4ee5\u53d8\u4e3a `R` \u7684\u5355\u4e2a\u8fde\u901a\u5757\u4e3a\u4f8b\uff1a\n\n\u663e\u7136\u6bcf\u4e2a\u70b9\u6700\u591a\u7ffb\u4e00\u6b21\u3002\u8bb0 $i$ \u4e3a\u70b9 $i$ \u4e0d\u7ffb\u8f6c\uff0c$i+n$ \u4e3a\u70b9 $i$ \u7ffb\u8f6c\uff0c\u8fde\u8fb9\uff1a\n\n- $c_{i}=R$\uff1a$(u_{i},v_{i}),(v_{i},u_{i}),(u_{i}+n,v_{i}+n),(v_{i}+n,u_{i}+n)$\uff08\u8981\u4e48\u90fd\u7ffb\uff0c\u8981\u4e48\u90fd\u4e0d\u7ffb\uff09\n- $c_{i}=B$\uff1a$(u_{i},v_{i}+n),(v_{i}+n,u_{i}),(u_{i}+n,v_{i}),(v_{i},u_{i}+n)$\uff08\u7ffb\u4e00\u4e2a\uff09\n\n\u7136\u540e\u8dd1 2-SAT\uff0c\u82e5 $i,i+n$ \u5728\u540c\u4e00 SCC \u65e0\u89e3\u3002  \n\u672c\u9898\u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\u90fd\u662f\u65e0\u5411\u8fb9\uff0c\u90a3\u4e48\u9009\u70b9 $i$ \u5c31\u5fc5\u987b\u9009 $i$ \u6240\u5728\u7684\u8fde\u901a\u5757\u5305\u542b\u7684\u6240\u6709\u70b9\uff0c$i+1$ \u540c\u7406\uff0c\u4e14\u5bf9\u4e8e $i,i+n$ \u6240\u5728\u7684\u4e24\u4e2a\u8fde\u901a\u5757\uff0c$\\forall j\\ne i$ \u8981\u4e48\u4e0d\u5728\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u8981\u4e48 $j,j+n$ \u5206\u5904\u4e24\u4e2a\u3002\u56e0\u6b64\u5bf9\u4e8e $i,i+n$ \u8fd9\u4e24\u4e2a SCC\uff0c\u53ea\u9700\u8981\u8d2a\u5fc3\u7684\u9009\u9700\u8981\u7ffb\u8f6c\u7684\u70b9\u6570\u5c11\u7684\u5373\u53ef\u3002\n\n\u4ee3\u7801\u51e0\u4e4e\u90fd\u662f\u677f\u5b50\uff0c\u975e\u5e38\u597d\u5199\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\n\n[code](https://codeforces.com/contest/662/submission/137589996)",
        "postTime": 1638367009,
        "uid": 236866,
        "name": "401rk8",
        "ccfLevel": 9,
        "title": "CF662B Graph Coloring \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF662B)\n\n## \u9898\u76ee\u5927\u610f\n> \u7ed9\u4f60\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u6bcf\u6761\u8fb9\u662f\u84dd\u8272\u6216\u8005\u7ea2\u8272\u7684\uff0c\u8ba9\u4f60\u6bcf\u6b21\u9009\u4e00\u4e2a\u70b9\uff0c\u5c31\u4f1a\u628a\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u8fb9\u7684\u989c\u8272\u53cd\u8f6c\uff08\u7ea2\u53d8\u84dd\uff0c\u84dd\u53d8\u7ea2\uff09\uff0c\u6c42\u6700\u5c11\u6b65\u6570\u7684\u65b9\u6848\u4f7f\u5f97\u6700\u540e\u6240\u6709\u8fb9\u7684\u989c\u8272\u90fd\u4e00\u6837\u3002\n\n## \u601d\u8def\n\u597d\u50cf\u6ca1\u6709 $2-sat$ \u7684\u9898\u89e3\uff0c\u90a3\u6211\u5c31\u6765\u4e00\u53d1\u3002\n\n\u9996\u5148\u5206\u7c7b\u8ba8\u8bba\uff1a\u8981\u4e48\u90fd\u53d8\u6210\u7ea2\u8272\uff0c\u8981\u4e48\u90fd\u53d8\u6210\u84dd\u8272\u3002\n\n\u5982\u679c\u4e00\u6761\u8fb9\u7684\u989c\u8272\u4e0e\u5f53\u524d\u6211\u4eec\u671f\u671b\u7684\u989c\u8272\u76f8\u540c\uff0c\u90a3\u4e48\u8981\u4e48\u4e24\u4e2a\u70b9\u90fd\u9009\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u70b9\u4e0d\u9009\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u70b9\u4e5f\u4e0d\u9009\uff0c\u4e00\u4e2a\u70b9\u9009\u4e86\uff0c\u53e6\u4e00\u4e2a\u70b9\u4e5f\u8981\u9009\uff0c\u5efa\u56fe\u5c31\u884c\u4e86\uff0c\u5982\u4e0b\u56fe\u3002\n\n![A_zjzj](https://img-blog.csdnimg.cn/ac4795ef0a764999b81b1fff7615544b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Ffemp6ag==,size_16,color_FFFFFF,t_70)\n\n\u90a3\u4e48\u540c\u7406\uff0c\u5982\u679c\u4e00\u6761\u8fb9\u7684\u989c\u8272\u4e0e\u671f\u671b\u7684\u989c\u8272\u4e0d\u540c\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u9009\uff0c\u53e6\u4e00\u4e2a\u70b9\u5c31\u4e0d\u80fd\u9009\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u4e0d\u9009\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u70b9\u5c31\u5fc5\u987b\u80fd\u9009\uff0c~~\u56fe\u7684\u8bdd\uff0c\u7565\u5427~~\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u7406\u51fa\u6765\u4e00\u4e2a $2-sat$ \u7684\u6a21\u578b\u3002\n\n\u5224\u65ad\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u8fd9\u5c31\u662f $2-sat$ \u7684\u7ecf\u5178\u64cd\u4f5c\uff0c\u5224\u65ad $u,u'$ \u662f\u5426\u5904\u4e8e\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6709\u89e3\u7684\u60c5\u51b5\uff0c\u8fd8\u8981\u8f93\u51fa\u89e3\uff0c\u90a3\u4e48\u7531\u4e8e\u8fd9\u4e2a\u56fe\u662f\u4e0a\u4e0b\u5bf9\u79f0\u7684\uff0c\u6240\u4ee5\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u9009\u4e86 $i_1,i_2\\dots,i_m,j_1',j_2'\\dots,j_{m'}'$ \u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u4f60\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u4e0d\u9009\u5b83\uff0c\u9009 $i_1',i_2'\\dots,i_m',j_1,j_2\\dots,j_{m'}$ \u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u4e3a\u4e86\u8ba9\u9009\u7684\u4e2a\u6570\u5c3d\u53ef\u80fd\u7684\u5c11\uff0c\u6240\u4ee5\u770b\u770b\u8fd9\u4e24\u4e2a\u4e1c\u897f\u4e2d $u'$ \u4e2a\u6570\u8c01\u591a\u8c01\u5c11\uff0c\u52a0\u5230\u7b54\u6848\u91cc\u9762\uff0c\u7136\u540e\u518d\u628a\u9009\u7684\u8fd9\u4e9b\u70b9\u653e\u5230\u6700\u540e\u7684\u65b9\u6848\u91cc\u9762\u5c31\u884c\u4e86\u3002\n\n\u8be6\u89c1\u4ee3\u7801\u3002\n\n~~\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5176\u4ed6\u9898\u89e3\u8bf4\u8fd9\u9898\u7ec6\u8282\u591a\uff0c\u53ef\u80fd\u6211\u7684\u65b9\u6cd5\u6ca1\u5565\u7ec6\u8282\u3002~~\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nvoid read(){}//\u5b66\u8d77\u6765\u5427,\u53ef\u4ee5\u8fd9\u4e48\u7528:read(a,b,c,\u2026\u2026,n);\ntemplate<typename _Tp,typename... _Tps>\nvoid read(_Tp &x,_Tps &...Ar){\n\tx=0;char c=getchar();bool flag=0;\n\twhile(c<'0'||c>'9')flag|=(c=='-'),c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\tif(flag)x=-x;\n\tread(Ar...);\n}\nconst int N=1e5+10;\nint n,m;\nstruct zj{\n\tint u,v,w;\n}a[N];\nstruct edges{\n\tint to,nex;\n}edge[N*4];//\u6ce8\u610f\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9,\u8981\u5efa\u4e24\u6761\u53cc\u5411\u8fb9,\u6240\u4ee5\u5927\u5c0f\u8981\u5f00 4 \u500d\nint head[N*2],kk;\nvoid addedge(int u,int v){//\u94fe\u5f0f\u524d\u5411\u661f\u57fa\u672c\u64cd\u4f5c,\u76f4\u63a5\u5efa\u53cc\u5411\u8fb9\u4e86\n\tedge[++kk]=(edges){v,head[u]};head[u]=kk;\n\tedge[++kk]=(edges){u,head[v]};head[v]=kk;\n}\nint dfn[N*2],low[N*2],s[N*2],top,cnt,scc[N*2],scct;//\u70b9\u6570\u522b\u5fd8\u4e86\u5f00 2 \u500d\nvoid tarjan(int u){//tarjan \u7f29\u70b9\u6a21\u677f\n\tdfn[u]=low[u]=++cnt;s[++top]=u;\n\tfor(int i=head[u];i;i=edge[i].nex){\n\t\tint v=edge[i].to;\n\t\tif(!dfn[v])tarjan(v),low[u]=min(low[u],low[v]);\n\t\telse if(!scc[v])low[u]=min(low[u],low[v]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\t++scct;\n\t\twhile(s[top]!=u)scc[s[top--]]=scct;\n\t\tscc[s[top--]]=scct;\n\t}\n}\nint cnt1,cnt2,k1[N],k2[N],s1[N],s2[N];//\u8bb0\u5f55 dfs \u4e2d\u5230\u8fbe\u7684 u \u548c u' \u7684\u6570\u91cf\u548c\u7f16\u53f7\nbool vis[N];\nvoid dfs(int u){\n\tif(vis[(u-1)%n+1])return;//1,2,\u2026\u2026,n \u4e0d\u53d8, n+1,n+2,\u2026\u2026,n+n \u53d8\u6210 1,2,\u2026\u2026,n\n\tvis[(u-1)%n+1]=1;u<=n?(k1[++cnt1]=u):(k2[++cnt2]=u-n);\n\tfor(int i=head[u];i;i=edge[i].nex){\n\t\tint v=edge[i].to;\n\t\tdfs(v);\n\t}\n}\nint get(){\n\tint i;char c[5];bool flag1,flag2;int ans1=0,ans2=0;\n\tfor(read(n,m),i=1;i<=m;i++)read(a[i].u,a[i].v),scanf(\"%s\",c),a[i].w=(c[0]=='R');//\u9002\u91cf\u538b\u884c\u53ef\u4ee5\u589e\u5f3a\u4ee3\u7801\u53ef\u8bfb\u6027(\n\tfor(i=1;i<=m;i++)a[i].w?(addedge(a[i].u,a[i].v),addedge(a[i].u+n,a[i].v+n)):(addedge(a[i].u,a[i].v+n),addedge(a[i].u+n,a[i].v));//\u5c31\u662f\u6211\u4e0a\u9762\u9610\u8ff0\u7684\u5185\u5bb9\n\tfor(i=1;i<=n*2;i++)if(!dfn[i])tarjan(i);\n\tfor(flag1=1,i=1;i<=n;i++)if(scc[i]==scc[i+n])flag1=0;\n\tif(flag1)for(i=1;i<=n;i++){\n\t\tif(vis[i])continue;\n\t\tcnt1=cnt2=0;\n\t\tdfs(i);\n\t\tif(cnt1<cnt2){//\u770b\u770b u,u' \u54ea\u4e2a\u5c11\u5c31\u9009\u54ea\u4e2a\n\t\t\tans1+=cnt1;\n\t\t\twhile(cnt1)s1[++s1[0]]=k1[cnt1--];\n\t\t}\n\t\telse{\n\t\t\tans1+=cnt2;\n\t\t\twhile(cnt2)s1[++s1[0]]=k2[cnt2--];\n\t\t}\n\t\t//\u6b64\u5904\u4e0d\u80fd\u4e3a\u4e86\u8282\u7701\u4ee3\u7801\u5199\u6210\u8fd9\u6837:\n\t\t//if(cnt1>cnt2)swap(k1,k2),swap(cnt1,cnt2);\n\t\t//ans1+=cnt1;\n\t\t//while(cnt1)s1[++s1[0]]=k1[cnt1--];\n\t\t//\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u590d\u6742\u5ea6\u53d8\u6210 O(n^2),\u76f4\u63a5 T \u98de\n\t}\n\t//-----------------\u8fd9\u4e9b\u662f\u5168\u90e8\u53d8\u6210\u84dd\u8272\u7684\u60c5\u51b5-----------------\n\tmemset(head,0,sizeof(head));kk=0;\n\tmemset(dfn,0,sizeof(dfn));cnt=0;\n\tmemset(low,0,sizeof(low));\n\tmemset(scc,0,sizeof(low));scct=0;\n\tmemset(s,0,sizeof(s));top=0;\n\tmemset(vis,0,sizeof(vis));\n\t//-----------------\u4e00\u5b9a\u8981\u6ce8\u610f\u6e05\u7a7a-----------------\n\tfor(i=1;i<=m;i++)a[i].w?(addedge(a[i].u+n,a[i].v),addedge(a[i].u,a[i].v+n)):(addedge(a[i].u,a[i].v),addedge(a[i].u+n,a[i].v+n));\n\tfor(i=1;i<=n*2;i++)if(!dfn[i])tarjan(i);\n\tfor(flag2=1,i=1;i<=n;i++)if(scc[i]==scc[i+n])flag2=0;\n\tif(flag2)for(i=1;i<=n;i++){\n\t\tcnt1=cnt2=0;\n\t\tdfs(i);\n\t\tif(cnt1<cnt2){\n\t\t\tans2+=cnt1;\n\t\t\twhile(cnt1)s2[++s2[0]]=k1[cnt1--];\n\t\t}\n\t\telse{\n\t\t\tans2+=cnt2;\n\t\t\twhile(cnt2)s2[++s2[0]]=k2[cnt2--];\n\t\t}\n\t}\n\t//-----------------\u8fd9\u4e9b\u662f\u5168\u90e8\u53d8\u6210\u7ea2\u8272\u7684\u60c5\u51b5-----------------\n\tif(!flag1&&!flag2)return printf(\"-1\"),0;//\u4e24\u79cd\u60c5\u51b5\u90fd\u65e0\u89e3\u90a3\u5c31\u65e0\u89e3\u4e86\n\tif(!flag1||(flag2&&s1[0]>s2[0]))swap(s1,s2);//\u5982\u679c\u7b2c\u4e00\u79cd\u60c5\u51b5\u65e0\u89e3\u6216\u8005\u7b2c\u4e00\u79cd\u60c5\u51b5\u6ca1\u6709\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4f18,\u90a3\u5c31\u9009\u7b2c\u4e8c\u79cd\n\tfor(printf(\"%d\\n\",s1[0]),i=1;i<=s1[0];i++)printf(\"%d \",s1[i]);\n\treturn 0;//\u5b8c\u7f8e\u6492\u82b1\n}\nint main(){\n\treturn get();//\u4e3b\u51fd\u6570\u4e00\u884c,\u4e3b\u8981\u53ef\u4ee5\u65b9\u4fbf\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\u6216\u8005\u5f00\u5173 freopen,\u8981\u4e0d\u7136\u8fd8\u8981\u628a\u6eda\u8f6e\u5212\u4e0a\u53bb\u6ce8\u91ca\u6389\uff0c\u592a\u9ebb\u70e6\u4e86!\n}\n```\n## \u6e29\u99a8\u63d0\u9192\n> \u5982\u679c\u6709\u4ec0\u4e48\u7b14\u8bef\u6216\u4e0d\u8db3\u4e4b\u7c7b\u7684\uff0c\u8bc4\u8bba\u6216\u79c1\u804a\u6211\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u5927\u5bb6\n\n## \u8c22\u8c22--zhengjun",
        "postTime": 1627129001,
        "uid": 263082,
        "name": "A_zjzj",
        "ccfLevel": 7,
        "title": "CF662B Graph Coloring\u9898\u89e3--zhengjun"
    },
    {
        "content": "\u9996\u5148\u6574\u5f20\u56fe\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u4e14\u6bcf\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002\u8003\u8651\u94a6\u5b9a\u6bcf\u6761\u8fb9\u6700\u7ec8\u7684\u989c\u8272\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u627e\u5230\u5b83\u7684\u4efb\u610f\u4e00\u68f5\u751f\u6210\u6811\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u56fa\u5b9a\u4e86\u94a6\u5b9a\u7684\u989c\u8272\uff0c\u4ee5\u53ca\u6839\u7ed3\u70b9\u662f\u5426\u7ffb\u8f6c\uff0c\u8981\u6ee1\u8db3\u751f\u6210\u6811\u91cc\u9762\u8fb9\u7684\u6761\u4ef6\uff0c\u90a3\u5176\u5b83\u70b9\u7684\u7ffb\u8f6c\u72b6\u6001\u4e5f\u5c31\u552f\u4e00\u786e\u5b9a\u4e86\u3002\n\n\u5bf9\u4e8e\u751f\u6210\u6811\u5916\u7684\u8fb9\uff0c\u7531\u4e8e\u5df2\u7ecf\u786e\u5b9a\u4e86\u6bcf\u4e2a\u7ed3\u70b9\u662f\u5426\u7ffb\u8f6c\uff0c\u76f4\u63a5\u8fdb\u884c\u5224\u65ad\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int Maxn=1e5;\n\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nstruct Node{int frm,to,nxt,w;} Edge[Maxn*2+5];\nint tot=1,Head[Maxn+5];\ninline void Add(int x,int y,int z)\n{\n    Edge[++tot]=(Node){x,y,Head[x],z};\n    Head[x]=tot;\n}\n\nint n,m,s,col[Maxn+5],ind[Maxn+5];\nint rt[Maxn+5],vis[Maxn+5];\nvector<int> v[Maxn+5],w[Maxn+5];\nvector<int> chk[Maxn+5],ans[2];\nvector<int> tmp[Maxn+5][2],cur[Maxn+5][2][2];\n\ninline void Addedge(int p)\n{\n    int x=Edge[p].frm,y=Edge[p].to;\n    v[x].push_back(p),v[y].push_back(p);\n    ind[x]++,ind[y]++;\n}\ninline void dfs(int x)\n{\n    w[s].push_back(x);\n    for(int i=Head[x];i;i=Edge[i].nxt)\n    {\n        int y=Edge[i].to;\n        if(!col[y]) col[y]=s,Addedge(i),dfs(y);\n    }\n}\ninline void Build()\n{\n    For(i,1,s) rt[i]=*w[i].begin();\n    for(int i=2;i<=tot;i+=2) chk[col[Edge[i].to]].push_back(i);\n}\ninline int dfs2(int x,int f,int c,int typ,int id,int rev)\n{\n    int res=0;\n    if(x!=rt[id] && c^vis[f]^typ)\n    {\n        vis[x]=1,res++;\n        cur[id][typ][rev].push_back(x);\n    }\n    for(auto i:v[x])\n    {\n        int y=Edge[i].frm+Edge[i].to-x;\n        if(y==f) continue;\n        res+=dfs2(y,x,Edge[i].w,typ,id,rev);\n    }\n    return res;\n}\ninline int Count(int x,int typ,int rev)\n{\n    for(auto i:w[x]) vis[i]=0;\n    int res=rev; vis[rt[x]]=rev;\n    if(rev) cur[x][typ][rev].push_back(rt[x]);\n    res+=dfs2(rt[x],0,0,typ,x,rev);\n    for(auto i:chk[x]) if(Edge[i].w^typ^vis[Edge[i].frm]^vis[Edge[i].to]) return -1;\n    return res;\n}\ninline int Solve(int x,int typ)\n{\n    int s1=Count(x,typ,0),s2=Count(x,typ,1);\n    if(s1==-1 && s2==-1) return -1;\n    if(s1==-1) return tmp[x][typ]=cur[x][typ][1],s2;\n    if(s2==-1) return tmp[x][typ]=cur[x][typ][0],s1;\n    if(s1<s2) return tmp[x][typ]=cur[x][typ][0],s1;\n    else return tmp[x][typ]=cur[x][typ][1],s2;\n}\ninline int Find(int typ)\n{\n    int all=0;\n    For(i,1,s)\n    {\n        int res=Solve(i,typ);\n        if(res==-1) return -1;\n        all+=res;\n    }\n    return all;\n}\ninline void Print(int typ)\n{\n    For(i,1,s) for(auto j:tmp[i][typ]) ans[typ].push_back(j);\n    printf(\"%u\\n\",ans[typ].size());\n    for(auto i:ans[typ]) printf(\"%d \",i);\n    printf(\"\\n\");\n}\n\nint main()\n{\n    n=read(),m=read();\n    For(i,1,m)\n    {\n        int a=read(),b=read(); char c; cin>>c;\n        Add(a,b,c=='R'?0:1),Add(b,a,c=='R'?0:1);\n    }\n    For(i,1,n) if(!col[i]) col[i]=++s,dfs(i);\n    Build();\n    int flag0=Find(0),flag1=Find(1);\n    if(flag0==-1 && flag1==-1) {printf(\"-1\\n\"); return 0;}\n    if(flag0!=-1 && (flag1==-1 || flag0<flag1)) Print(0);\n    else Print(1);\n    return 0;\n}\n```",
        "postTime": 1665218087,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF662B\u3010Graph Coloring\u3011"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/662/B)\n\n# \u9898\u89e3\n\n\u9996\u5148\uff0c\u610f\u8bc6\u5230\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5206\u6bcf\u4e2a\u8054\u901a\u5757\u8fdb\u884c\u8003\u8651.\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u8fd9\u4e2a\u5757\u7684\u53cd\u8f6c\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n1. \u67d0\u4e00\u4e2a\u70b9\u7684\u53cd\u8f6c\u60c5\u51b5\uff1b\n2. \u6240\u6709\u8fb9\u6700\u7ec8\u4f1a\u88ab\u7ffb\u6210\u4ec0\u4e48\u989c\u8272\uff1b\n\n\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u60c5\u51b5\u7684\u7ec4\u5408\u81f3\u591a\u6709 $2\\times 2=4$ \u79cd\u60c5\u51b5\uff0c\u800c\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u5982\u679c\u6211\u4eec\u8981\u786e\u5b9a\u5176\u989c\u8272\uff0c\u53ea\u9700\u8981 $dfs$ \u4e00\u904d\uff0c\u590d\u6742\u5ea6 $\\mathcal O(n)$\uff0c\u90a3\u4e48\u603b\u5171\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(4n)$\uff0c\u662f\u53ef\u8fc7\u7684\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5047\u5b9a\u5176\u4e2d\u4efb\u610f\u4e00\u70b9\u7684\u53cd\u8f6c\u60c5\u51b5\uff0c\u518d\u679a\u4e3e\u6240\u6709\u8fb9\u67d3\u6210\u7684\u989c\u8272\uff0c\u7136\u540e $dfs$ \u68c0\u67e5\u662f\u5426\u53ef\u884c\uff0c\u9009\u62e9\u6700\u5c0f\u7684\u53cd\u8f6c\u65b9\u6cd5\u5373\u53ef\n\n# \u4ee3\u7801\n\n```cpp\nhttps://www.cnblogs.com/Arextre/p/13387963.html\n```\n",
        "postTime": 1595859304,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF662B \u3010Graph Coloring\u3011"
    }
]