[
    {
        "content": "##### Problem\n\n\u4e00\u68f5$n$\u4e2a\u70b9\u7684\u6811\uff0c\u518d\u7ed9\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a\n\n- \u70b9 $1$ \u7684\u5ea6\u6570\u662f $k$\n- \u7ed9\u5b9a $m$\u5bf9 $u$\u548c$v$\uff0c\u6ee1\u8db3 $u$\u548c $v$\u4e4b\u95f4**\u4e0d\u5b58\u5728**\u8fb9\n\n\u8be2\u95ee\u4ee5\u4e0a\u4fe1\u606f\u662f\u5426\u5408\u6cd5\uff08\u662f\u5426\u5b58\u5728\u8fd9\u6837\u7684\u6811\uff09\n\n\u5408\u6cd5\u8f93\u51fa $possible$\uff0c\u5426\u5219\u8f93\u51fa $impossible$\n\n##### Solution\n\n\u6211\u4eec\u5206\u5f00\u8003\u8651\u4e24\u4e2a\u6761\u4ef6\uff0c\u9996\u5148\uff0c\u6211\u4eec\u628a$1$\u7ed3\u70b9\u5206\u5f00\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5148\u8003\u8651\u7b2c\u4e00\u4e2a\u9650\u5236\uff1a\n\n\u9996\u5148\uff0c\u5982\u679c$1$\u7ed3\u70b9\u7684\u5ea6\u6570\u5c0f\u4e8e$k$\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa$impossible$\n\n\u5426\u5219\uff0c\u8bf4\u660e$1$\u7ed3\u70b9\u7684\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e$k$\uff0c\u6211\u4eec\u7ee7\u7eed\u5f80\u4e0b\u3002\n\n\u6211\u4eec\u8003\u8651\u8fd9\u6837\u7684\u4e8b\u60c5\uff1a\n\n\u6211\u4eec\u628a\u9664\u4e86$1$\u7ed3\u70b9\u4e4b\u5916\u7684\u6240\u6709\u70b9\u90fd\u8fdb\u884c\u8fde\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5148\u628a\u4e0d\u80fd\u8fde\u7684\u8fb9\u5168\u90e8\u53bb\u6389\uff0c\u518d\u628a\u80fd\u8fde\u7684\u8fb9\u5168\u90e8\u8fde\u4e0a\n\n\u90a3\u4e48\u539f\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8003\u8651$1$\u53f7\u70b9\u7684\u9650\u5236\u4e86\n\n\u5982\u679c\u6211\u4eec\u7684\u8fde\u901a\u5757\u4e2a\u6570\u5927\u4e8e$k$\uff0c\u90a3\u4e48\u5c31\u4e0d\u884c\uff0c\u8f93\u51fa$impossible$\uff0c\u56e0\u4e3a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c$1$\u8fde\u51fa\u53bb\u7684\u8fb9\u4e00\u5b9a\u662f\u5927\u4e8e$k$\u7684\uff0c\u4e0d\u7b26\u5408\u9898\u610f\n\n\u5426\u5219\u6211\u4eec\u7ee7\u7eed\u8003\u8651\uff1a\n\n\u5982\u679c\u67d0\u4e00\u4e2a\u8fde\u901a\u5757\u4e0d\u80fd\u5230\u8fbe$1$\u53f7\u7ed3\u70b9\uff08\u5373\u8be5\u8fde\u901a\u5757\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u90fd\u4e0d\u80fd\u8fde\u5411$1$\uff09\uff0c\u90a3\u4e48\u8f93\u51fa$impossible$\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u6574\u5f20\u56fe\u4e0d\u8fde\u901a\uff0c\u4e0d\u53ef\u80fd\u6784\u6210\u6811\n\n\u90a3\u4e48\u5176\u4f59\u6240\u6709\u60c5\u51b5\u90fd\u662f\u53ef\u80fd\u7684\uff0c\u8f93\u51fa$possible$\n\n\u81f3\u4e8e\u5b9e\u73b0\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u5f3a\u884c\u52a0\u8fb9\u7136\u540e\u6c42\u8fde\u901a\u5757\uff0c\u8fd9\u6837\u5e72\u590d\u6742\u5ea6\u7206\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528$set/unordered$_$set$\u6765\u7ef4\u62a4\u8fde\u901a\u5757\u7684\u5143\u7d20\uff0c\u4f7f\u7528$BFS$\u6765\u627e\u8fde\u901a\u5757\uff0c\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u5269\u4e0b\u7684\u770b\u4ee3\u7801\u5b9e\u73b0\n\n##### Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n    x=0;char ch=getchar();bool f=false;\n    while(!isdigit(ch)){if(ch=='-'){f=true;}ch=getchar();}\n    while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    x=f?-x:x;\n    return ;\n}\ntemplate <typename T>\ninline void write(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10^48);\n    return ;\n}\ntemplate <typename T>\ninline void print(T x){write(x),putchar(' ');}\n#define ll long long\n#define ull unsigned long long\n#define inc(x,y) (x+y>=MOD?x+y-MOD:x+y)\n#define dec(x,y) (x-y<0?x-y+MOD:x-y)\n#define min(x,y) (x<y?x:y)\n#define max(x,y) (x>y?x:y)\nconst int N=3e5+5,M=1e6+5,MOD=1e9+7;\nint n,m,k,to;\nunordered_set<int> now,inv[N];\nvector<int> vec;\nbool vis[N];\nbool bfs(int st){\n    queue<int> q;\n    bool flag=true;q.push(st);vis[st]=true;\n    vec.clear();\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        for(auto v:now){\n            if(!vis[v]&&!inv[x].count(v)&&v!=x){\n                vec.push_back(v);\n                vis[v]=true;\n                q.push(v);\n            }\n        }\n        if(!inv[x].count(1)) flag=false;\n        for(auto v:vec) now.erase(v);\n        vec.clear();\n    }\n    return flag;\n}\nint main(){\n    read(n),read(m),read(k);to=n-1;\n    for(int i=2;i<=n;i++) now.insert(i);\n    for(int i=1;i<=m;i++){\n        int u,v; \n        read(u),read(v);\n        inv[u].insert(v);\n        inv[v].insert(u);\n        if(u==1||v==1) to--;\n    }\n    if(to<k){puts(\"impossible\");return 0;}\n    for(int i=2;i<=n;i++){\n        if(!vis[i]&&now.count(i)){\n            if(bfs(i)){\n                puts(\"impossible\");return 0;\n            }\n        }\n    }\n    if(now.size()>k) puts(\"impossible\");\n    else puts(\"possible\");\n    return 0;\n}\n```\n",
        "postTime": 1611977108,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF653E \u3010Bear and Forgotten Tree 2\u3011"
    },
    {
        "content": "\u5047\u5982\u80fd\u5230\u8fbe1\u7684\u8fb9\u6570\u5c0f\u4e8ek\u80af\u5b9a\u4e0d\u884c\u3002\u7136\u540e\u5219\u770b\u96641\u53f7\u8282\u70b9\u7684\u5176\u4ed6\u8282\u70b9\uff0c\u5982\u679c\u4ed6\u4eec\u6240\u7ec4\u6210\u8054\u901a\u5757\u7684\u6570\u91cf\u5927\u4e8e\u4e86k\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u8fde\u52301\u624d\u80fd\u6784\u6210\u6811\uff0c\u8fd9\u6837\u5ea6\u6570\u5c31\u5927\u4e8ek\u4e86\u3002\u5982\u679c\u6709\u4e2a\u8054\u901a\u5757\u5b83\u4e0d\u80fd\u5230\u8fbe1\uff0c\u90a3\u4e48\u663e\u7136\u6574\u4e2a\u56fe\u4e5f\u662f\u4e0d\u8054\u901a\u7684\u3002\u5426\u5219\u4e00\u5b9a\u80fd\u901a\u8fc7\u5c06\u4e00\u4e2a\u5757\u5206\u6210\u4e00\u4e9b\u5c0f\u5757\u6765\u4f7f\u5f971\u7684\u5ea6\u6570\u4e3ak\u3002\n\n\u81f3\u4e8e\u6c42\u8054\u901a\u5757\u91c7\u7528bfs\uff0c\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u5efa\u56fe\uff0c\u4e8e\u662f\u7528\u94fe\u8868\u6765\u5b58\u50a8\u672a\u8d70\u8fc7\u7684\u70b9\u6765\u679a\u4e3e\u9632\u6b62\u66b4\u529b\u679a\u4e3e\u590d\u6742\u5ea6\u5230$O(n)$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nstruct bian\n{\n\tint from, to;\n}eg[300010 << 1];\nint front[300010], num;\nvoid lian(int x, int y)\n{\n\teg[++ num].to = y;\n\teg[num].from = front[x];\n\tfront[x] = num;\n}\nvector<int>v;\nint vis[300010], col[300010], sf[300010], can[300010], y[300010];\nint n, m, k, d, ans;\nint q[300010];\nint rr[300010], ll[300010];\nvoid bfs(int o)\n{\n\tint l = 0, r = 0;\n\tq[r ++] = o;\n\twhile(l < r)\n\t{\n\t\tint now = q[l ++];\n\t\tvis[now] = 1;\n\t\tint first = 0;\n\t\tfor (int i = front[now]; i; i = eg[i].from)\n\t\t{\n\t\t\tint to = eg[i].to;\n\t\t\ty[to] = 1;\n\t\t}\n\t\tfor (int i = 1; i <= n; i = rr[i])\n\t\t{\n\t\t\tif(y[i] == 0 && vis[i] == 0)\n\t\t\t{\n\t\t\t\tcol[i] = col[now];\n\t\t\t\tq[r ++] = i;\n\t\t\t\trr[ll[i]] = rr[i];\n\t\t\t\tll[rr[i]] = ll[i];\n\t\t\t}\n\t\t\telse\n\t\t\ty[i] = 0;\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tfor (int i = 1; i <= m; ++ i)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tlian(x, y);\n\t\tlian(y, x);\n\t\tif(x == 1)\n\t\tv.push_back(y);\n\t\tif(y == 1)\n\t\tv.push_back(x);\n\t}\n\tif(n - 1 - v.size() < k)\n\t{\n\t\tprintf(\"impossible\\n\");\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i <= n; ++ i)\n\t{\n\t\tll[i] = i - 1;\n\t\trr[i] = i + 1;\n\t\tcol[i] = i;\n\t}\n\tvis[1] = 1;\n\tfor (int i = 2; i <= n; ++ i)\n\t{\n\t\tif(vis[i] == 0)\n\t\tbfs(i);\n\t}\n\tfor (int i = 2; i <= n; ++ i)\n\t{\n\t\tif(sf[col[i]] == 0)\n\t\t++ ans;\n\t\t++ sf[col[i]];\n\t}\n\tif(ans > k)\n\t{\n\t\tprintf(\"impossible\\n\");\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < v.size(); ++ i)\n\t{\n\t\tint to = v[i];\n\t\t++ can[col[to]];\n\t}\n\tfor (int i = 2; i <= n; ++ i)\n\t{\n\t\tif(can[i] == sf[i] && can[i] > 0)\n\t\t{\n\t\t\tprintf(\"impossible\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"possible\\n\");\n}\n```\n",
        "postTime": 1600690979,
        "uid": 111728,
        "name": "\u5e7b\u5f71\u661f\u575a\u5f3a",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF653E \u3010Bear and Forgotten Tree 2\u3011"
    }
]