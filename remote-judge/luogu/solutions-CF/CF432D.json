[
    {
        "content": "Z-function (\u56e0\u8be5\u9996\u5148\u60f3\u5230\u7684\u4e0d\u662f\u5b83\u5427)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[111111];\nint l,r,i,j,k,cnt,n,z[111111],ans[111111];\npair<int,int> res[111111];\nint main(){\n\tscanf(\"%s\",s);\n\tn=strlen(s);\n\tl=0,r=0,z[0]=n;\n\tfor(i=1;i<n;++i){                        //\u8ba1\u7b97\u51fa\u6240\u6709\u7684z\u7684\u503c\n\t\tif(i>r){\n\t\t\tj=0;\n\t\t\twhile(s[j]==s[i+j]) ++j;\n\t\t\tl=i,r=i+j-1,z[i]=j;\n\t\t}else{\n\t\t\tk=i-l;\n\t\t\tif(z[k]<r-i+1) z[i]=z[k];\n\t\t\telse{\n\t\t\t\tj=r;\n\t\t\t\twhile(s[j]==s[j-i]) ++j;\n\t\t\t\tl=i,r=j-1,z[i]=r-l+1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;++i) ++ans[z[i]];           //\u7edf\u8ba1\u4e2a\u6570\n\tfor(i=n-1;i;--i) ans[i]+=ans[i+1];\n\tfor(i=0;i<n;++i) if(i+z[i]==n) res[++cnt]=make_pair(z[i],ans[z[i]]);\n\tsort(res+1,res+cnt+1);                  //\u6309\u7167\u8981\u6c42\u6392\u4e2a\u5e8f\n\tprintf(\"%d\\n\",cnt);\n\tfor(i=1;i<=cnt;++i) printf(\"%d %d\\n\",res[i].first,res[i].second);\n\treturn 0;\n}\n```",
        "postTime": 1549532202,
        "uid": 125964,
        "name": "\u4e16\u672bOIer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF432D \u3010Prefixes and Suffixes\u3011"
    },
    {
        "content": "\u770b\u5230\u5b50\u4e32\u5728\u539f\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u679c\u65ad SAM\u3002\n\n\u7b2c\u4e8c\u95ee\u7684\u65b9\u6cd5\u975e\u5e38 naive\uff0c\u5efa\u51fa SAM \u540e\u5c06\u524d\u7f00\u653e\u4e0a\u53bb\u8dd1\uff0c\u8f93\u51fa\u8d70\u5230\u7684\u72b6\u6001\u7684 $\\text{endpos}$ \u96c6\u5408\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7b2c\u4e00\u95ee @Styx \u7684\u505a\u6cd5\u662f\u76f4\u63a5\u66b4\u529b Hash \u5224\u65ad\uff0c\u4f46\u5176\u5b9e SAM \u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5224\u65ad\u7684\u65b9\u5f0f\u3002\n\n\u6211\u4eec\u8003\u8651\u5728 SAM \u4e2d\u4e00\u4e2a\u72b6\u6001\u4ee3\u8868\u7684\u4e32\u662f\u539f\u4e32\u7684\u540e\u7f00\u7684\u6761\u4ef6\uff1a\n\n- \u8fd9\u4e2a\u72b6\u6001\u7684 $\\text{endpos}$ \u96c6\u5408\u4e2d\u5305\u542b\u4e86 $\\text{len}$ \u8fd9\u4e2a\u4f4d\u7f6e\u3002\n\n\u53c8\u7531 SAM \u7684\u57fa\u672c\u77e5\u8bc6\u77e5\u9053\uff0cParent \u6811\u4e0a\u7956\u5148\u7684 $\\text{endpos}$ \u96c6\u5408\u662f\u5305\u542b\u5173\u7cfb\u3002\u90a3\u4e48\u6240\u6709\u5408\u6cd5\u7684\uff08\u5373\u4e3a\u539f\u4e32\u540e\u7f00\u7684\uff09\u72b6\u6001\uff0c\u5c31\u662f\u6700\u540e last \u8fd9\u4e2a\u4f4d\u7f6e\u5728 Parent \u6811\u4e0a\u5230\u6839\u94fe\u4e0a\u7684\u6240\u6709\u72b6\u6001\u3002\n\n\u6211\u4eec\u7ed9\u8fd9\u4e9b\u72b6\u6001\u6253\u4e2a\u6807\u8bb0\uff0c\u5728\u62ff\u524d\u7f00\u8fdb SAM \u5339\u914d\u7684\u65f6\u5019\u6bcf\u8bbf\u95ee\u5230\u4e00\u4e2a\u6709\u6807\u8bb0\u7684\u8282\u70b9\uff0c\u5c31\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <map>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nconst int maxn = 2e5+5;\ninline int max(int a,int b){return a>b?a:b;}\nchar s[maxn];\nstd :: map<char,int> ch[maxn];\nint len[maxn],link[maxn],siz[maxn],vis[maxn],sz,last;\nvoid append(char x){\n\tint cur = ++sz,p = last;\n\tlen[cur] = len[last]+1;\n\twhile((~p)&&ch[p].find(x)==ch[p].end())ch[p][x] = cur,p = link[p];\n\tif(p == -1)link[cur] = 0;\n\telse{\n\t\tint q = ch[p][x];\n\t\tif(len[p] + 1 == len[q])link[cur] = q;\n\t\telse{\n\t\t\tint nq = ++sz;\n\t\t\tlen[nq] = len[p] + 1,link[nq] = link[q],ch[nq] = ch[q],link[q] = link[cur] = nq;\n\t\t\twhile((~p)&&ch[p][x] == q)ch[p][x] = nq,p = link[p];\n\t\t}\n\t}\n\tlast = cur,siz[cur] = 1;\n}\nbool cmp(int x,int y){return len[x] > len[y];}\nint id[maxn];\nvoid getsiz(){\n\tfor(int i=1;i<=sz;++i)id[i] = i;\n\tstd :: sort(id+1,id+sz+1,cmp);\n\tfor(int i=1;i<=sz;++i){\n\t\tint u = id[i];\n\t\tsiz[link[u]] += siz[u];\n\t}\n}\nint n,ans[maxn],anssiz[maxn];\nint main(){\n\tlink[last=sz=0] = -1;\n\tscanf(\"%s\",s+1),n = strlen(s+1);\n\tfor(int i=1;i<=n;++i)append(s[i]);\n\tint p = last;while(~p)vis[p] = 1,p = link[p];\n\tgetsiz(),p = 0;\n\tint cnt = 0;\n\tfor(int i=1;i<=n;++i){\n\t\tp = ch[p][s[i]];\n\t\tif(vis[p])ans[++cnt] = i,anssiz[cnt] = siz[p];\n\t}\n\tprintf(\"%d\\n\",cnt);\n\tfor(int i=1;i<=cnt;++i)\n\t\tprintf(\"%d %d\\n\",ans[i],anssiz[i]);\n\treturn 0;\n}\n```",
        "postTime": 1612188580,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF432D \u3010Prefixes and Suffixes\u3011"
    },
    {
        "content": "\u5514\uff0c\u539f\u6765\u8fd9\u79cd\u7b97\u6cd5\u5c31\u662fexkmp\u554a\uff0c\u6211\u4e00\u5f00\u59cb\u8fd8\u4ee5\u4e3a\u6211\u81ea\u5df1\u53d1\u660e\u4e86\u4e2a\u65b0\u7b97\u6cd5\nok\n\u90a3\u6211\u5c31\u4e0d\u590d\u8bfb\u4e86\n\n\u63d0\u4f9b\u4e00\u4e2a\u66b4\u529b\u505a\u6cd5\n\n\u524d\u7f00\u4e0e\u540e\u7f00\u662f\u5426\u76f8\u7b49\uff0c\u663e\u7136\u53ef\u4ee5\u679a\u4e3e\u524d\u540e\u7f00\u54c8\u5e0c\u503c\u6bd4\u8f83\uff0c\u672c\u9898\u5f88\u6c34\uff0c\u5355\u6a21\u54c8\u5e0c\u5c31\u80fd\u8fc7\n\n\u7136\u540e\u5c31\u662f\u7edf\u8ba1\u4e00\u4e2a\u524d\u7f00\u5728\u4e32\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21\n\n\u8fd9\u73a9\u610f\u4e00\u770b\u5c31\u662f\u4e2a\u540e\u7f00\u81ea\u52a8\u673a\u677f\u5b50\u9898\n\n\u4e00\u4e2a\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u4e3a\u5176\u6240\u5728\u540e\u7f00\u81ea\u52a8\u673a\u8282\u70b9\u5b50\u6811\u4e2dnp\u8282\u70b9\u7684\u4e2a\u6570\n\n\u4e8e\u662f\u63d2\u5165\u5b8c\uff0cdfs\u4e00\u904d\u7b97\u51fa\u4e2a\u6570\u5c31\u5b8c\u4e8b\u4e86\n\n\u7136\u540e\u8003\u8651\u67e5\u8be2\uff0c\u663e\u7136\u5bf9\u4e8e\u7b2ci\u4f4d\uff0c\u4ed6\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e2d\u7684\u8282\u70b9\u7f16\u53f7\u4e3a\u63d2\u5165\u540e\u7684np\u503c\n\n\u4e8e\u662f\u672c\u9898\u7ed3\u675f\n\n```cpp\n#include<bits/stdc++.h>\n#define mod1 1000000007\n#define mod2 1000000009 \nusing namespace std;\n\nlong long pre[100010],suf[100010];\nchar s[100010];\nint n;\n\nstruct SAM\n{\n\t\n\tstruct point\n\t{\n\t\tint son[26],fa,len,at,mx,vis[26];\n\t}t[200010];\n\t\n\tint last=1,cnt=1;\n\tint sz[200010],pos[200010],tot;\n\tvector<int> g[200010];\n\t\n\tvoid add(int c)\n\t{\n\t\tint p=last;\n\t\tint np=++cnt;\n\t\tt[np].len=t[p].len+1;\n\t\tsz[np]=1;\n\t\twhile(p&&(!t[p].son[c]))\n\t\t{\n\t\t\tt[p].son[c]=np;\n\t\t\tp=t[p].fa;\n\t\t}\n\t\tif(!p) t[np].fa=1;\n\t\telse\n\t\t{\n\t\t\tint q=t[p].son[c],nq;\n\t\t\tif(t[q].len==t[p].len+1)\n\t\t\t{\n\t\t\t\tt[np].fa=q;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnq=++cnt;\n\t\t\t\tt[nq]=t[q];\n\t\t\t\tt[nq].len=t[p].len+1;\n\t\t\t\tt[q].fa=t[np].fa=nq;\n\t\t\t\twhile(p&&(t[p].son[c]==q))\n\t\t\t\t{\n\t\t\t\t\tt[p].son[c]=nq;\n\t\t\t\t\tp=t[p].fa;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpos[++tot]=np;\n\t\tlast=np;\n\t}\n\t\n\tvoid dfs(int now)\n\t{\n\t\tfor(int i=0;i<g[now].size();i++)\n\t\t{\n\t\t\tdfs(g[now][i]);\n\t\t}\n\t\tsz[t[now].fa]+=sz[now];\n\t}\n\t\n\tvoid solve()\n\t{\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t{\n\t\t\tg[t[i].fa].push_back(i);\n\t\t}\n\t\tdfs(1);\n\t}\n\t\n}sam;\n\nint main()\n{\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tpre[i]=(pre[i-1]*27+(s[i]-'A'))%mod1;\n\t}\n\tlong long bit=1;\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tsuf[i]=(suf[i+1]+bit*(s[i]-'A')%mod1)%mod1;\n\t\tbit=bit*27%mod1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tsam.add(s[i]-'A');\n\t}\n\tsam.solve();\n\tint cnt=0;\n\tfor(int i=1;i<=n;i++) if(pre[i]==suf[n-i+1]) cnt++;\n\tprintf(\"%d\\n\",cnt);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(pre[i]==suf[n-i+1]) printf(\"%d %d\\n\",i,sam.sz[sam.pos[i]]);\n\t}\n}\n```\n",
        "postTime": 1601770204,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF432D \u3010Prefixes and Suffixes\u3011"
    },
    {
        "content": "> \u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\u3002\u6c42\u51fa\uff1a\n\n> 1. \u6709\u591a\u5c11\u4e2a\u5b50\u4e32\u65e2\u662f $s$ \u7684\u540e\u7f00\u4e5f\u662f $s$ \u7684\u524d\u7f00\u3002\n\n> 2. \u8fd9\u4e9b\u5b50\u4e32\u4f5c\u4e3a\u540e\u7f00\u7684\u65f6\u5019\u7684\u8d77\u59cb\u4e0b\u6807\n\n> 3. \u8fd9\u4e9b\u5b50\u4e32\u5728 $s$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u9898\u89e3\uff1a\u6269\u5c55 KMP\uff0c\u5373 Z \u7b97\u6cd5\u3002\n\n\u6211\u4eec\u6784\u9020\u5b57\u7b26\u4e32 $t=s+\"|\"+s$\uff0c\u5b9a\u4e49\u6570\u7ec4 $z_i$\u4e3a\u5bf9\u4e8e\u6240\u6709\u7684$2 \\leq i \\leq |t|$\uff0c\u4ee5 $i$ \u4e3a\u8d77\u59cb\u4f4d\u7f6e\u7684\u540e\u7f00\u548c $t$ \u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\u3002\n\n\u4f8b\u5982\uff0c\u82e5 $s=\\texttt{ababa}$\uff0c\u90a3\u4e48 $t=\\texttt{ababa|ababa}$\uff0c\u7531\u4e8e $t$ \u4ece\u7b2c $9$ \u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u5b50\u4e32\u4e3a $\\texttt{aba}$\uff0c\u4e0e $t$ \u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\u4e3a $3$\uff0c\u56e0\u6b64 $z_9=3$\u3002\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e86 $z$ \u6570\u7ec4\u7684\u503c\uff08\u5982\u4f55\u6c42 $z$ \u6570\u7ec4\u7684\u503c\u63a5\u4e0b\u6765\u4f1a\u8bb2\uff09\uff0c\u90a3\u4e48\u6c42\u7b54\u6848\u7684\u65b9\u5f0f\u5c31\u8f83\u660e\u663e\u4e86\u3002\u679a\u4e3e $t$ \u7684\u540e\u4e00\u534a\uff0c\u7531\u4e8e $t$ \u662f\u7531\u4e24\u4e2a $s$ \u4e0e\u4e00\u4e2a\u5206\u9694\u53f7 $\\texttt{\"|\"}$ \u7ec4\u6210\u7684\uff0c$t_{|s|+1+i}=s_i$\uff0c\u90a3\u4e48\u4ee5 $i$ \u5f00\u5934\u7684\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u5b50\u4e32\u5f53\u4e14\u4ec5\u5f53 $s_is_{i+1}\\dots s_{|s|}=s_1s_2\\dots s_{|s|-i+1}$\uff0c\u5373 $t_{|s|+1+i}t_{|s|+2+i}\\dots t_{|s| \\times 2+1}=t_1t_2\\dots t_{|s|-i+1}$\uff0c\u5316\u7b80\u4e0b\u6765\u5176\u5b9e\u5c31\u662f $z_{|s|+1+i}=|s|-i+1$\uff0c\u6c42\u51fa\u73b0\u6b21\u6570\u5176\u5b9e\u5c31\u662f $t$ \u7684\u540e\u4e00\u534a\u4e2d\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u6ee1\u8db3 $z_{|s|+1+i} \\geq |s|-i+1$\uff0c\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6876\u7528\u540e\u7f00\u548c\u641e\u51fa\u6765\u3002\n\n\u90a3\u4e48\u600e\u4e48\u6c42 $z_i$ \u5462\uff1f\n\n\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a $box_i$ \u4e3a\u533a\u95f4 $[i,i+z_i-1]$\u3002\u6211\u4eec\u5047\u8bbe\u5f53\u524d\u6211\u4eec\u5728\u8ba1\u7b97 $z_i$ \u7684\u503c\uff0c\u6211\u4eec\u518d\u5b9a\u4e49 $[l,r]$ \u4e3a$box_2,box_3,\\dots,box_{i-1}$ \u4e2d\u53f3\u7aef\u70b9\u6700\u9760\u53f3\u7684 $box$ \u7684\u5de6\u53f3\u7aef\u70b9\u3002\n\n\u90a3\u4e48\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1.\u82e5$i \\gt r$\uff0c\u5219\u8bc1\u660e\u524d\u9762\u7684\u6240\u6709\u7684 $box_j$ \u548c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u5173\u8054\uff0c\u6211\u4eec\u65e0\u6cd5\u5229\u7528\uff0c\u540c\u65f6\u4e5f\u8bc1\u660e $box_i$ \u4e00\u5b9a\u662f\u6700\u9760\u53f3\u7684\uff0c\u76f4\u63a5\u66b4\u529b\u5f80\u540e\u5339\u914d\uff0c\u66f4\u65b0 $l=i$\uff0c$r=i+z_i-1$\u3002\n\n2.\u82e5$i \\leq r$\uff0c\u5219\u4ee4$i'=i-l+1$\uff0c\u56e0\u4e3a$i$\u4f4d\u4e8e$[l,r]$\u5185\uff0c\u5219\u6211\u4eec\u77e5\u9053$t_l,t_{l+1},\\dots,t_r$\u5e94\u8be5\u4e0e$t_1,t_2,\\dots,t_r$\u5339\u914d\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06$[l,r]$\u5e73\u79fb\u5230$[1,r-l+1]$\u4e0a\u53bb\uff0c$i'$\u5176\u5b9e\u5c31\u662f$i$\u5728\u8fd9\u6bb5\u533a\u95f4\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6839\u636e$z_{i'}$\u7684\u6570\u503c\u6765\u8ba1\u7b97$z_i$\uff0c\u6211\u4eec\u4ee4$\\beta=r-i+1$\u3002\n\n\u4e0b\u9762\u6211\u4eec\u53c8\u53ef\u4ee5\u5206\u51fa\u4e24\u79cd\u60c5\u51b5\uff1a\n\n$(1)$ $z_{i'}(s)<\\beta$\u3002\u5373$box_{i'}$ \u8fd9\u4e2a\u4f4d\u7f6e\u63a7\u5236\u7684\u53f3\u7aef\u70b9\u5e76\u6ca1\u6709\u8d85\u8fc7 $r$\uff0c\u76f4\u63a5\u4ee4$z_i=z_{i'}$\uff0c$l,r$ \u4fdd\u6301\u539f\u6837\u3002\n\n$(2)$ $z_{i'}(s)\\geq\\beta$\u3002$box_{i'}$ \u7684\u53f3\u7aef\u70b9\u8d85\u8fc7\u4e86\u8d85\u8fc7\u4e86$[l,r]$\u5bf9\u5e94\u7684\u524d\u7f00\u3002\u56e0\u4e3a\u6211\u4eec\u4ec5\u4ec5\u77e5\u9053 $t_l,t_{l+1},\\dots,t_r$\u4e0e$t_1,t_2,\\dots,t_r$ \u5339\u914d\uff0c\u8fd8\u4e0d\u77e5\u9053\u540e\u9762\u7684\u90e8\u5206\u3002\u56e0\u6b64\u6211\u4eec\u66f4\u65b0 $l=i$\uff0c\u7ee7\u7eed\u66b4\u529b\u5339\u914d\u540e\u9762\u7684\u957f\u5ea6\uff0c\u5339\u914d\u5b8c\u6210\u540e\u66f4\u65b0 $z_i=r-l$\u3002\n\n\u4e0d\u96be\u53d1\u73b0 $r$ \u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n)$\u3002\n\n```cpp\n//Coded by tzc_wk\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi\t\t\tfirst\n#define se\t\t\tsecond\n#define fz(i,a,b)\tfor(int i=a;i<=b;i++)\n#define fd(i,a,b)\tfor(int i=a;i>=b;i--)\n#define foreach(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define all(a)\t\ta.begin(),a.end()\n#define giveup(...) return printf(__VA_ARGS__),0;\n#define fill0(a)\tmemset(a,0,sizeof(a))\n#define fill1(a)\tmemset(a,-1,sizeof(a))\n#define fillbig(a)\tmemset(a,0x3f,sizeof(a))\n#define fillsmall(a) memset(a,0xcf,sizeof(a))\n#define mask(a)\t\t(1ll<<(a))\n#define maskx(a,x)\t((a)<<(x))\n#define _bit(a,x)\t(((a)>>(x))&1)\n#define _sz(a)\t\t((int)(a).size())\n#define filei(a)\tfreopen(a,\"r\",stdin);\n#define fileo(a)\tfreopen(a,\"w\",stdout);\n#define fileio(a) \tfreopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\n#define eprintf(...) fprintf(stderr,__VA_ARGS__)\n#define put(x)\t\tputchar(x)\n#define eoln        put('\\n')\n#define space\t\tput(' ')\n#define y1\t\t\ty_chenxiaoyan_1\n#define y0\t\t\ty_chenxiaoyan_0\ntypedef pair<int,int> pii;\ninline int read(){\n\tint x=0,neg=1;char c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\tneg=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\tx=x*10+c-'0',c=getchar();\n\treturn x*neg;\n}\ninline void print(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tprint(abs(x));\n\t\treturn;\n\t}\n\tif(x<=9)\tputchar(x+'0');\n\telse{\n\t\tprint(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\ninline int qpow(int x,int e,int _MOD){\n\tint ans=1;\n\twhile(e){\n\t\tif(e&1)\tans=ans*x%_MOD;\n\t\tx=x*x%_MOD;\n\t\te>>=1;\n\t}\n\treturn ans;\n}\n//\u4ee5\u4e0a\u5168\u662f\u6a21\u677f\uff0c\u6b63\u6587\u90e8\u5206\u4ece\u4e0b\u9762\u5f00\u59cb\nchar s[100005],ss[200005];\nint n,len=0,z[200005],buc[200005],suf[200005];\nsigned main(){\n\tcin>>s+1;\n\tn=strlen(s+1);\n\tfor(int i=1;i<=n;i++)\tss[len++]=s[i];\n\tss[len++]='|';\n\tfor(int i=1;i<=n;i++)\tss[len++]=s[i];//\u6784\u9020\u5b57\u7b26\u4e32t\n\tint l=0,r=0;\n\tfor(int i=1;i<len;i++){\n\t\tif(i<=r)\tz[i]=min(z[i-l],r-i);//\u60c5\u51b52\u4e2d\u7684\u4e24\u7c7b\n\t\twhile(i+z[i]<len&&ss[i+z[i]]==ss[z[i]])\tz[i]++;\n\t\tif(i+z[i]>r){\n\t\t\tl=i;r=i+z[i];//\u5982\u679c\u8d85\u8fc7\u5c31\u66f4\u6539l\u5230r\u7684\u503c\n\t\t}\n\t}\n\tint cnt=0;\n\tvector<int> v;\n\tfor(int i=n+1;i<=(n<<1);i++){\n\t\tif(z[i]==(n<<1)-i+1){\n\t\t\tcnt++;\n\t\t\tv.push_back((n<<1)-i+1);//\u5c06\u5bf9\u5e94\u7684i\u538b\u5165\u8bb0\u5f55\u7b54\u6848\u7684vector\u4e2d\n\t\t}\n\t\tbuc[z[i]]++;//\u5f00\u4e00\u4e2a\u6876\n\t}\n\treverse(all(v));//\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\uff0c\u800c\u6211\u4eec\u540e\u7f00\u957f\u5ea6\u662f\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u7684\n\tfd(i,n,1)\tsuf[i]=suf[i+1]+buc[i];//\u540e\u7f00\u548c\n\tcout<<cnt<<endl;\n\tforeach(it,v){//\u5bf9\u4e8ev\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8f93\u51fa\n\t\tcout<<*it<<\" \"<<suf[*it]<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582729725,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF432D \u3010Prefixes and Suffixes\u3011"
    },
    {
        "content": "> \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$\uff0c\u6c42\u51fa $S$ \u7684\u6240\u6709\u516c\u5171\u524d\u540e\u7f00\u4ee5\u53ca\u6bcf\u4e2a\u524d\u540e\u7f00\u5728\u539f\u4e32\u4e2d\u4f5c\u4e3a\u4e00\u4e2a\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u9996\u5148\uff0c\u5b50\u4e32\u5728\u539f\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u90a3\uff0c\u5c31\u662f\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u8be5\u5b50\u4e32\u6240\u5728\u8282\u70b9\u4ee3\u8868\u7684 $\\text {endpos}$ \u96c6\u5408\u5927\u5c0f\u3002\n\n\u5176\u6b21\u6839\u636e\u9898\u610f\u77e5\u9053\u9700\u8981\u6c42\u51fa\u73b0\u6b21\u6570\u7684\u5b50\u4e32\u4e00\u5b9a\u662f $S$ \u7684\u524d\u7f00\uff0c\u56e0\u6b64\u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u7684\u516c\u5171\u524d\u540e\u7f00\uff0c\u8bb0\u5f55\u5b83\u4eec\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u7136\u540e\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u5230\u88ab\u6807\u8bb0\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u7684 $\\text{endpos}$ \u96c6\u5408\u5927\u5c0f\u5373\u53ef\u3002\n\n\u5173\u4e8e\u6c42\u5f97\u6240\u6709\u7684\u516c\u5171\u524d\u540e\u7f00\uff0c\u8003\u8651\u6734\u7d20 KMP \u7b97\u6cd5\u3002\u6734\u7d20 KMP \u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d\u6c42\u5f97\u4e86\u4e00\u4e2a\u524d\u7f00\u51fd\u6570 $\\pi(n)$\uff0c\u5176\u542b\u4e49\u662f\u5b57\u7b26\u4e32\u4e2d\u957f\u5ea6\u4e3a $n$ \u7684\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u957f\u5ea6\u3002\n\n\u8003\u8651\u539f\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\uff0c\u8bb0\u5b83\u4eec\u5206\u522b\u4e3a $pre_0$ \u548c $suf_0$\uff0c\u6839\u636e\u5b9a\u4e49\u6709 $pre_0 = suf_0$\uff0c\u90a3\u4e48 $pre_0$ \u7684\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u4e00\u5b9a\u65e2\u662f $pre_0$ \u7684\u524d\u7f00\u53c8\u662f $suf_0$ \u7684\u540e\u7f00\uff0c\u5373\u539f\u4e32\u6b21\u957f\u7684\u516c\u5171\u524d\u540e\u7f00\u3002\n\n\u56e0\u6b64\u66b4\u529b\u8df3 $\\pi$ \u51fd\u6570\u5f97\u5230\u7684\u6240\u6709\u957f\u5ea6\u5c31\u662f\u539f\u4e32\u6240\u6709\u7684\u516c\u5171\u524d\u540e\u7f00\u957f\u5ea6\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nconst int Maxn = 1e5 + 5;\n\nint tr[Maxn << 1][26], len[Maxn << 1], link[Maxn << 1], size[Maxn << 1], cnt = 1, lst = 1;\nint extend(int c) {\n\tint cur = ++cnt, p = lst; lst = cur; len[cur] = len[p] + 1, size[cur] = 1;\n\twhile(p && !tr[p][c]) tr[p][c] = cur, p = link[p];\n\tif(!p) return link[cur] = 1, cur;\n\tint q = tr[p][c]; if(len[q] == len[p] + 1) return link[cur] = q, cur;\n\tint cl = ++cnt; len[cl] = len[p] + 1; memcpy(tr[cl], tr[q], sizeof tr[cl]);\n\tlink[cl] = link[q]; link[q] = link[cur] = cl;\n\twhile(p && tr[p][c] == q) tr[p][c] = cl, p = link[p]; return cur;\n}\nint id[Maxn << 1], rk[Maxn << 1];\nvoid initsize() {\n\tfor(int i = 1; i <= cnt; ++i) ++ rk[len[i]];\n\tfor(int i = 1; i <= cnt; ++i) rk[i] += rk[i - 1];\n\tfor(int i = cnt; i >= 1; --i) id[rk[len[i]] --] = i;\n\tfor(int i = cnt; i > 1; --i) size[link[id[i]]] += size[id[i]];\n}\n\nchar s[Maxn]; int n, pi[Maxn];\n\nbool b[Maxn];\n\nint main() {\n\tscanf(\"%s\", s + 1); n = strlen(s + 1);\n\tfor(int i = 1; i <= n; ++i) extend(s[i] - 'A'); initsize();\n\tfor(int i = 2; i <= n; ++i) {\n\t\tint j = pi[i - 1];\n\t\twhile(j && s[j + 1] != s[i]) j = pi[j];\n\t\tif(s[j + 1] == s[i]) ++j;\n\t\tpi[i] = j;\n\t}\n\tint p = n, ans = 0; while(p) b[p] = 1, p = pi[p], ++ans;\n\tint cur = 1; printf(\"%d\\n\", ans);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tcur = tr[cur][s[i] - 'A'];\n\t\tif(b[i]) printf(\"%d %d\\n\", i, size[cur]);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1630570570,
        "uid": 119009,
        "name": "int1",
        "ccfLevel": 0,
        "title": "CF432D"
    },
    {
        "content": "\u540e\u7f00\u6570\u7ec4\u505a\u8fd9\u9053\u9898\u7a0d\u5fae\u6709\u4e9b\u9ebb\u70e6\u3002\n\n\u9996\u5148\u8003\u8651\u51fa\u9884\u5904\u7406\u51fa$sa$\u548c$height$\uff0c\u5e76\u9884\u5904\u7406$ST$\u8868\u6765\u641e$LCP$\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u540e\u7f00\uff0c\u5728\u540e\u7f00\u6570\u7ec4\u4e2d\u5bf9\u6bcf\u4e00\u4e2a\u540e\u7f00\u5339\u914d\u6574\u4e2a\u4e32\uff08\u5373\u540e\u7f001\uff09\uff0c\u8fd9\u6837\u5373\u53ef\u5224\u65ad\u4e00\u7ec4\u524d\u540e\u7f00\u662f\u5426\u53ef\u884c\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6c42\u89e3\u4e00\u4e2a\u5b50\u4e32\u5728\u6574\u4e2a\u4e32\u91cc\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u5355\u8c03\u6808\u9884\u5904\u7406\u51fa\u4ee5$height[i]$\u4e3a\u6700\u5c0f\u503c\u5411\u524d\u5411\u540e\u6269\u5c55\u7684\u6700\u5927\u957f\u5ea6\u3002\u6269\u5c55\u7684\u533a\u95f4\u957f\u5ea6\u5373\u4e3a\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u7ec6\u8282\u633a\u591a\u7684\uff0c\u5199\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u3002\n\n```cpp\n/*DennyQi 2019*/\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int N = 100010;\nconst int P = 998244353;\nconst int INF = 0x3f3f3f3f;\ninline int mul(const int& a, const int& b){ return 1ll*a*b%P; }\ninline int add(const int& a, const int& b){ return (a+b>=P)?a+b-P:a+b; }\ninline int sub(const int& a, const int& b){ return (a-b<0)?a-b+P:a-b; }\ninline int read(){\n    int x(0),w(1); char c = getchar();\n    while(c^'-' && (c<'0' || c>'9')) c = getchar();\n    if(c=='-') w = -1, c = getchar();\n    while(c>='0' && c<='9') x = (x<<3)+(x<<1)+c-'0', c = getchar(); \n    return x*w;\n}\nchar s[N];\nint n,top,ans,sa[N],x[N],y[N],c[N],h[N],rk[N],lex[N],rex[N],S[N],f[N][20],lg[N];\ninline void build_SA(int m){\n\tint p;\n\tfor(int i = 1; i <= m; ++i) c[i] = 0;\n\tfor(int i = 1; i <= n; ++i) ++c[x[i] = s[i]];\n\tfor(int i = 1; i <= m; ++i) c[i] += c[i-1];\n\tfor(int i = n; i >= 1; --i) sa[c[x[i]]--] = i;\n\tfor(int k = 1; k <= n; k += k){\n\t\tp = 0;\n\t\tfor(int i = n-k+1; i <= n; ++i) y[++p] = i;\n\t\tfor(int i = 1; i <= n; ++i) if(sa[i] > k) y[++p] = sa[i]-k;\n\t\tfor(int i = 1; i <= m; ++i) c[i] = 0;\n\t\tfor(int i = 1; i <= n; ++i) ++c[x[i]];\n\t\tfor(int i = 1; i <= m; ++i) c[i] += c[i-1];\n\t\tfor(int i = n; i >= 1; --i) sa[c[x[y[i]]]--] = y[i], y[i] = 0;\n\t\tswap(x,y);\n\t \tx[sa[1]] = 1, p = 1;\n\t \tfor(int i = 2; i <= n; ++i) x[sa[i]] = (y[sa[i]]==y[sa[i-1]]&&y[sa[i]+k]==y[sa[i-1]+k])?p:++p;\n\t \tif(p >= n) break;\n\t \tm = p;\n\t}\n\tfor(int i = 1; i <= n; ++i) rk[sa[i]] = i;\n\tint k = 0;\n\tfor(int i = 1; i <= n; ++i){\n\t\tif(k) --k;\n\t\twhile(s[i+k] == s[sa[rk[i]-1]+k]) ++k;\n\t\th[rk[i]] = k;\n\t\tf[rk[i]][0] = k;\n\t}\n\t// for(int i = 1; i <= n; ++i){\n\t// \tprintf(\"#%d \",i);\n\t// \tfor(int j = sa[i]; j <= n; ++j){\n\t// \t\tprintf(\"%c\",s[j]);\n\t// \t}\n\t// \tprintf(\"   height=%d\\n\",h[i]);\n\t// }\n\tfor(int i = 1; i <= n; ++i){\n\t\twhile(top > 0 && h[i] < h[S[top]]){\n\t\t\trex[S[top]] = i-1;\n\t\t\t--top;\n\t\t}\n\t\tS[++top] = i;\n\t}\n\twhile(top > 0){\n\t\trex[S[top]] = n;\n\t\t--top;\n\t}\n\tfor(int i = n; i >= 1; --i){\n\t\twhile(top > 0 && h[i] < h[S[top]]){\n\t\t\tlex[S[top]] = i+1;\n\t\t\t--top;\n\t\t}\n\t\tS[++top] = i;\n\t}\n\twhile(top > 0){\n\t\tlex[S[top]] = 1;\n\t\t--top;\n\t}\n\t// for(int i = 1; i <= n; ++i){\n\t// \tprintf(\"i=%d lex=%d rex=%d\\n\",i,lex[i],rex[i]);\n\t// }\n\tfor(int j = 1; (1<<j) <= n; ++j){\n\t\tfor(int i = 1; i+(1<<j)-1 <= n; ++i){\n\t\t\tf[i][j] = min(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n\t\t}\n\t}\n}\ninline int lcp(int l, int r){\n\tif(l == r) return n-sa[l]+1;\n\tif(l > r) swap(l,r);\n\t++l;\n\tint k = lg[r-l+1];\n\treturn min(f[l][k],f[r-(1<<k)+1][k]);\n}\nint main(){\n\t// freopen(\"file.in\",\"r\",stdin);\n\tlg[1] = 0, lg[2] = 1;\n\tfor(int i = 3; i <= 100000; ++i) lg[i] = lg[i>>1]+1;\n\tscanf(\"%s\",s+1);\n\tn = strlen(s+1);\n\tbuild_SA('Z'+1);\n\tfor(int l = 1; l <= n; ++l){\n\t\tif(lcp(rk[1],rk[n-l+1]) == l) ++ans;\n\t}\n\tprintf(\"%d\\n\",ans);\n\tfor(int l = 1; l <= n; ++l){\n\t\tif(lcp(rk[1],rk[n-l+1]) == l){\n\t\t\tint L, R;\n\t\t\t// printf(\"pos = %d\\n\",rk[n-l+1]);\n\t\t\tif(h[rk[n-l+1]+1] < l){\n\t\t\t\tR = rk[n-l+1];\n\t\t\t}else{\n\t\t\t\tR = rex[rk[n-l+1]+1];\n\t\t\t}\n\t\t\tif(h[rk[n-l+1]] < l){\n\t\t\t\tL = rk[n-l+1];\n\t\t\t}else{\n\t\t\t\tL = lex[rk[n-l+1]];\n\t\t\t}\n\t\t\t// printf(\"l=%d L=%d R=%d\\n\",l,L,R);\n\t\t\tprintf(\"%d %d\\n\",l,R-L+1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1564208729,
        "uid": 115065,
        "name": "DennyQi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF432D \u3010Prefixes and Suffixes\u3011"
    },
    {
        "content": "\u53d1\u73b0\u8fd9\u4e2a\u6c34\u9898\n\n\u4e00\u773c\u5c31\u611f\u89c9\u662f $kmp$, \u56e0\u4e3a $nxt$ \u6570\u7ec4\u5929\u751f\u5c31\u662f\u5e72\u8fd9\u79cd\u4e8b\u60c5\u7684\n\n\u7b54\u6848\u96c6\u5408\u5c31\u662f\u4ece $n$ \u8df3 $nxt$ \u6240\u80fd\u8df3\u5230\u7684\u6240\u6709\u8282\u70b9\n\n\u90a3\u4e2a\u51fa\u73b0\u6b21\u6570\u600e\u4e48\u641e\uff1f\n\n\u663e\u7136\u53ef\u4ee5 $dp$\n\n$dp[i]$ \u8868\u793a\u8df3\u5230 $i$ \u7684\u65b9\u6848\u6570\n\n\u7136\u540e\u5012\u53d9\u679a\u4e3e $i$, $dp[nxt[i]]+=dp[i]$\n\n\u7136\u540e\u5c31\u6ca1\u4e86\n\n```cpp\n#include <map>\n#include <set>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <cmath>\n#include <vector>\n#include <bitset>\n#include <cstdio>\n#include <cctype>\n#include <string>\n#include <numeric>\n#include <cstring>\n#include <cassert>\n#include <climits>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <functional>\nusing namespace std ;\n//#define int long long\n#define rep(i, a, b) for (int i = (a); i <= (b); i++)\n#define per(i, a, b) for (int i = (a); i >= (b); i--)\n#define loop(s, v, it) for (s::iterator it = v.begin(); it != v.end(); it++)\n#define cont(i, x) for (int i = head[x]; i; i = e[i].nxt)\n#define clr(a) memset(a, 0, sizeof(a))\n#define ass(a, sum) memset(a, sum, sizeof(a))\n#define lowbit(x) (x & -x)\n#define all(x) x.begin(), x.end()\n#define ub upper_bound\n#define lb lower_bound\n#define pq priority_queue\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define iv inline void\n#define enter cout << endl\n#define siz(x) ((int)x.size())\n#define file(x) freopen(#x\".in\", \"r\", stdin),freopen(#x\".out\", \"w\", stdout)\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef pair <int, int> pii ;\ntypedef vector <int> vi ;\ntypedef vector <pii> vii ;\ntypedef queue <int> qi ;\ntypedef queue <pii> qii ;\ntypedef set <int> si ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\nconst int N = 100010 ;\nconst int INF = 0x3f3f3f3f ;\nconst int iinf = 1 << 30 ;\nconst ll linf = 2e18 ;\nconst int MOD = 1000000007 ;\nconst double eps = 1e-7 ;\nvoid print(int x) { cout << x << endl ; exit(0) ; }\nvoid PRINT(string x) { cout << x << endl ; exit(0) ; }\nvoid douout(double x){ printf(\"%lf\\n\", x + 0.0000000001) ; }\ntemplate <class T> void chmin(T &a, T b) { if (a > b) a = b ; }\ntemplate <class T> void chmax(T &a, T b) { if (a < b) a = b ; }\ntemplate <class T> void upd(T &a, T b) { (a += b) %= MOD ; }\ntemplate <class T> void mul(T &a, T b) { a = 1ll * a * b % MOD ; }\n\nint n ;\nvi ans ;\nint dp[N], nxt[N] ;\nchar s[N] ;\n\nsigned main() {\n    scanf(\"%s\", s + 1) ;\n    n = strlen(s + 1) ;\n    nxt[1] = 0 ;\n    for (int i = 2, j = 0; i <= n; i++) {\n        while (j && s[j + 1] != s[i]) j = nxt[j] ;\n        if (s[j + 1] == s[i]) j++ ;\n        nxt[i] = j ;\n    }\n    for (int i = nxt[n]; i; i = nxt[i]) ans.pb(i) ;\n    clr(dp) ;\n    per(i, n, 1) {\n        dp[i]++ ;\n        dp[nxt[i]] += dp[i] ;\n    }\n    printf(\"%d\\n\", siz(ans) + 1) ;\n    per(i, siz(ans) - 1, 0) printf(\"%d %d\\n\", ans[i], dp[ans[i]]) ;\n    printf(\"%d %d\\n\", n, dp[n]) ;\n\n    return 0 ;\n}\n\n/*\n\u5199\u4ee3\u7801\u65f6\u8bf7\u6ce8\u610f\uff1a\n    1.ll\uff1f\u6570\u7ec4\u5927\u5c0f\uff0c\u8fb9\u754c\uff1f\u6570\u636e\u8303\u56f4\uff1f\n    2.\u7cbe\u5ea6\uff1f\n    3.\u7279\u5224\uff1f\n    4.\u81f3\u5c11\u505a\u4e00\u4e9b\n\u601d\u8003\u63d0\u9192\uff1a\n    1.\u6700\u5927\u503c\u6700\u5c0f->\u4e8c\u5206\uff1f\n    2.\u53ef\u4ee5\u8d2a\u5fc3\u4e48\uff1f\u4e0d\u884cdp\u53ef\u4ee5\u4e48\n    3.\u53ef\u4ee5\u4f18\u5316\u4e48\n    4.\u7ef4\u62a4\u533a\u95f4\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\uff1f\n    5.\u7edf\u8ba1\u65b9\u6848\u662f\u7528dp\uff1f\u6a21\u4e86\u4e48\uff1f\n    6.\u9006\u5411\u601d\u7ef4\uff1f(\u6b63\u96e3\u5247\u53cd)\n*/\n\n\n```",
        "postTime": 1552905741,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF432D \u3010Prefixes and Suffixes\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u601d\u8def\u6e05\u6670~~\u505a\u6cd5\u7c97\u66b4~~\uff1aKMP \u6c42\u201c\u5b8c\u7f8e\u5b50\u4e32\u201d\uff0cfail \u6811\u7edf\u8ba1\u4e2a\u6570\u3002\n\n\u770b\u5230\u9898\u76ee\u4e2d\u201c\u65e2\u662f\u5b83\u7684\u524d\u7f00\u4e5f\u662f\u5b83\u7684\u540e\u7f00\u201d\uff0c\u5bb9\u6613\u60f3\u5230 KMP \u7b97\u6cd5\u6216\u8005\u6269\u5c55 KMP\uff0c\u800c\u89e3\u51b3\u5b50\u4e32\u7edf\u8ba1\u95ee\u9898\u53ef\u4ee5\u7528 AC \u81ea\u52a8\u673a\u6216\u8005\u540e\u7f00\u81ea\u52a8\u673a\u3002\u770b\u5230\u8fd9\u9898\u7528 AC \u81ea\u52a8\u673a\u7edf\u8ba1\u4e2a\u6570\u7684\u6bd4\u8f83\u5c11\uff0c\u5c31\u5199\u4e00\u7bc7\u9898\u89e3\u4f9b\u53c2\u8003\u3002\n\n\u5b66\u4e60 KMP \u7b97\u6cd5\u7684\u65f6\u5019\u6709\u4e00\u4e2a**\u91cd\u8981\u5f15\u7406**\uff1a\u6ee1\u8db3 $j < i$ \u4e14 $S[1]$ \u5230 $S[j]$ \u4e0e $S[i-j+1]$ \u5230 $S[i]$ \u76f8\u7b49\u7684 $j$ \u79f0\u4e3a\u201c\u5019\u9009\u9879\u201d\u3002\u82e5 $j_0$ \u662f $next[i]$ \u7684\u4e00\u4e2a\u5019\u9009\u9879\uff0c\u5219\u5c0f\u4e8e $j_0$ \u7684\u6700\u5927\u7684 $next[i]$ \u7684\u5019\u9009\u9879\u662f $next[j_0]$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u51fa $next[i]$ \uff0c\u5c31\u80fd\u5217\u4e3e\u51fa\u5176\u6240\u6709\u5019\u9009\u9879\u3002\u8fd9\u6837\u6211\u4eec\u8dd1\u4e00\u904d KMP \uff0c\u5c31\u53ef\u4ee5\u7edf\u8ba1\u51fa\u201c\u5b8c\u7f8e\u5b50\u4e32\u201d\u7684\u4e2a\u6570\u4e86\u3002\n\nfail \u6811\u53ef\u7528\u4e8e\u7edf\u8ba1\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u4e2d\u51fa\u73b0\u6b21\u6570\u3002\u5728 $fail[i]$ \u4e0e $i$ \u4e4b\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\u5373\u53ef\u3002\u7531\u4e8e\u5b57\u5178\u6811\u4e0a\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a $fail$ \u6307\u9488\uff0c\u800c\u7b2c\u4e00\u5c42\u7ed3\u70b9\u7684 $fail$ \u6307\u9488\u90fd\u6307\u5411\u6839\u8282\u70b9\uff0c\u6240\u4ee5\u5efa\u597d\u7684\u56fe\u662f\u68f5\u6811\u3002$fail$ \u6307\u9488\u6709\u4e00\u4e2a\u7279\u70b9\uff1a\u6307\u5411\u7ed3\u70b9\u8868\u793a\u7684\u5b57\u7b26\u4e32\u4e3a\u5f53\u524d\u7ed3\u70b9\u8868\u793a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u3002\u5982\u4e0b\u56fe\u4e2d\uff0c\u7ed3\u70b9 $4$ \u8868\u793a\u5b57\u7b26\u4e32 $ABA$ \uff0c\u5b83\u7684\u6307\u5411\u7684 $2$ \u7ed3\u70b9\u8868\u793a\u5b57\u7b26\u4e32 $A$ \uff0c\u4e3a\u524d\u8005\u540e\u7f00\u3002\u7531\u6b64\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5efa\u597d\u7684\u6811\u4e2d\uff0c\u7ed3\u70b9 $u$ \u6240\u8868\u793a\u5b57\u7b26\u4e32\u51fa\u73b0\u6b21\u6570\uff0c\u5c31\u662f\u5176\u5b50\u6811\u5927\u5c0f\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rl81v29f.png)\n\n\n## Code\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nchar s[100005];\nint node=1,trie[100005][26],fail[100005],flag[100005],nxt[100005];// KMP \u4e2d\u4f7f\u7528 nxt \u6570\u7ec4 \nint tot,first[100005],Next[100005],go[100005];// fail\u6811\u5efa\u8fb9 \nint cnt,ans[2][100005];// \u5b58\u7b54\u6848\uff0ccnt \u662f\u5b8c\u7f8e\u5b50\u4e32\u4e2a\u6570 \ninline void addEdge(int u,int v) {\n\tNext[++tot]=first[u];\n\tfirst[u]=tot;\n\tgo[tot]=v;\n}\nvoid dfs(int u) {\n\tfor(int e=first[u];e;e=Next[e]) {\n\t\tint v=go[e];\n\t\tdfs(v);\n\t\tflag[u]+=flag[v];\n\t}\n}\nint main() {\n\tscanf(\"%s\",s+1);\n\tint p=1;\n\tfor(int i=1;s[i];++i) {\n\t\ttrie[p][s[i]-'A']=++node;\n\t\tp=node;\n\t\tflag[p]=1;\n\t}\n\tfor(int i=0;i<26;++i) trie[0][i]=1;\n\tqueue<int> q;\n\tq.push(1);\n\tint u,v;\n\twhile(q.size()) {\n\t\tu=q.front();q.pop();\n\t\tfor(int i=0;i<26;++i) {\n\t\t\tv=trie[u][i];\n\t\t\tif(v) {\n\t\t\t\tfail[v]=trie[fail[u]][i];\n\t\t\t\taddEdge(fail[v],v);\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tdfs(1);\n\tfor(int i=2,j=0;s[i];++i) {\n\t\twhile(j&&s[j+1]!=s[i]) j=nxt[j];\n\t\tif(s[j+1]==s[i]) j++;\n\t\tnxt[i]=j;\n\t}\n\tint j=nxt[node-1]; // trie\u6811\u663e\u7136\u662f\u4e00\u6761\u94fe\uff0c\u7531\u4e8e\u6709 1 \u53f7\u6839\u7ed3\u70b9\uff0cs \u7684\u957f\u5ea6\u5b9e\u9645\u4e3a\u7ed3\u70b9\u6570\u51cf\u4e00 \n\twhile(j) { \n\t\tans[0][++cnt]=j;\n\t\tans[1][cnt]=flag[j+1];\n\t\tj=nxt[j];\n\t}\n\tprintf(\"%d\\n\",cnt+1); // \u6ce8\u610f\uff1a\u5b8c\u7f8e\u5b50\u4e32\u5305\u62ec\u81ea\u5df1\uff0c\u6240\u4ee5\u7b54\u6848\u7edf\u8ba1\u52a0\u4e00\uff0c\u6700\u540e\u591a\u8f93\u51fa\u4e00\u884c \n\tfor(int i=cnt;i;--i) printf(\"%d %d\\n\",ans[0][i],ans[1][i]);\n\tprintf(\"%d 1\",node-1);\n\treturn 0;\n}\n```\n",
        "postTime": 1626183193,
        "uid": 186477,
        "name": "SegTre",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF432D"
    }
]