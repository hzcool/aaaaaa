[
    {
        "content": "\u867d\u7136\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u53ef\u6015\u7684$2\\le l_i\\le r_i\\le2\\times10^9$\u6570\u636e\u8303\u56f4\uff0c\u4f46\u7559\u610f\u6570\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u90fd\u4e0d\u5927\u4e8e$10^7$\uff0c\u56e0\u6b64\u5927\u4e8e$10^7$\u7684\u8d28\u6570\u5bf9\u7b54\u6848\u662f\u6ca1\u6709\u8d21\u732e\u7684\uff08\u5c0f\u6570\u4e0d\u80fd\u88ab\u5927\u6570\u6574\u9664\u7684\u561b\uff09\u3002\u6240\u4ee5\u53ea\u9700\u8981\u6c42\u51fa\u5bf9\u4e8e\u8d28\u6570$p\\le10^7$\u7684$f(p)$\u503c\u5c31OK\u4e86\u3002\n\n\u53e6\u5916\u6ce8\u610f\u5230\u9898\u76ee\u8be2\u95ee\u67d0\u4e2a\u533a\u95f4\u5185\u7684$f(p)$\u4e4b\u548c\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7ef4\u62a4\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n1.\u8f93\u5165\u6570\u5217 $a$\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff08\u8fd9\u91cc\u7528cont[k]\u8868\u793ak\u5728a\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c\u56e0\u4e3acount\u662f\u81ea\u5e26\u51fd\u6570\u5c31\u53ea\u597d\u7528cont\uff09\n\n2.\u7528\u6b27\u62c9\u7b5b\u7b5b\u51fa$10^7$\u4ee5\u5185\u7684\u6240\u6709\u8d28\u6570\n\n3.\u5bf9\u4e8e\u6bcf\u4e2a\u8d28\u6570$p_i$\uff0c\u679a\u4e3e\u5b83\u7684\u500d\u6570\uff0c\u5b83\u6240\u6709\u7684\u500d\u6570\u5728 $a$ \u4e2d\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\u5373\u4e3a$f(p_i)$\u7684\u503c\uff0c\u5373\uff1a\n\n$$f(p_i)=\\sum_{k=1}^{10^7/p_i}\\text{cont}[k\\times p_i]$$\n\n4.\u5230\u8fd9\u91cc\u9884\u5904\u7406\u5c31\u5b8c\u6210\u5566\u3002\u73b0\u5728\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee$[l,r]$\uff0c\u4e8c\u5206\u627e\u5230\u8fd9\u4e2a\u533a\u95f4\u7aef\u70b9\u7684\u4e24\u4e2a\u8d28\u6570$p_l,p_r$\uff0c\u7136\u540e\u8f93\u51fa$\\text{sum}[r]-\\text{sum}[l-1]$\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define nb 1000010\nusing namespace std;\n\nint n, m, cnt, a[nb], p[nb], t[nb], cont[nb * 10];\n// \u8fd9\u91cc\u505a\u4e86\u4e00\u4e0b\u79bb\u6563\u5316\u5904\u7406\uff0ct[i] = f[p[i]]\nbool vis[10 * nb];\n\nvoid init(){\n\tfor(int i = 2; i <= nb * 10; i++){ //\u6b27\u62c9\u7b5b \n\t\tif(!vis[i]) p[++cnt] = i;\n\t\tfor(int j = 1; j <= cnt && p[j] * i <= nb * 10; j++){\n\t\t\tvis[i * p[j]] = 1;\n\t\t\tif(i % p[j] == 0) break;\n\t\t}\n\t}\n\tfor(int i = 1; i <= cnt; i++){\n\t\tfor(int j = 1; j * p[i] <= nb * 10; j++){\n\t\t\tt[i] += cont[j * p[i]]; // \u679a\u4e3ep[i]\u7684\u500d\u6570 \n\t\t}\n\t\tt[i] += t[i - 1]; //\u6c42\u51fa t \u7684\u524d\u7f00\u548c \n\t}\n}\n\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tcont[a[i]]++;\n\t}\n\tinit();\n\tscanf(\"%d\", &m);\n\tfor(int i = 1; i <= m; i++){\n\t\tint l, r, L, R;\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tif(l > p[cnt]){ \n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t\t//\u8fd9\u91cc\u6709\u4e2a\u5c0f\u7ec6\u8282\uff1a\u5982\u679c\u8be2\u95ee\u7684\u533a\u95f4\u8d85\u51fa10^7\u5c31\u76f4\u63a5\u8fd4\u56de0 \n\t\t}\n\t\tL = lower_bound(p + 1, p + cnt + 1, l) - p;\n\t\tR = upper_bound(p + 1, p + cnt + 1, r) - p - 1;\n\t\tprintf(\"%d\\n\", t[R] - t[L - 1]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1600871326,
        "uid": 142338,
        "name": "pythoner713",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF385C \u3010Bear and Prime Numbers\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u4f60$n$\u4e2a\u6570$a_i$\u3002  \n$f(x)$\u8868\u793a\u80fd\u591f\u88ab$x$\u7684\u6570\u7684\u4e2a\u6570\u3002  \n\u5176\u4e2d$x$\u4e3a\u8d28\u6570\u3002  \n\u7ed9\u4f60$m$\u4e2a\u8be2\u95ee\u3002    \n\u6bcf\u4e00\u4e2a\u8be2\u95ee\u8ba9\u4f60\u6c42\u89e3\u6574\u4e2a\u533a\u95f4$i\\in[l,r]$\u5185\u7684$f(i)$\u7684\u548c\u3002  \n## \u9898\u89e3\n\u7b2c\u4e00\u773c\u5f00\u9898\u611f\u89c9\u6ca1\u6709\u4ec0\u4e48\u60f3\u6cd5\u3002  \n\u4f46\u662f\u53ef\u4ee5\u8fd9\u6837\u60f3\u4e00\u4e0b\u3002    \n\u9996\u5148\u9898\u76ee\u53ef\u4ee5\u627f\u53d7$nlogn$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002    \n$nlogn$\u7684\u590d\u6742\u5ea6\uff0c\u53c8\u8ddf\u8d28\u6570\u6709\u5173\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u57c3\u7b5b\u548c\u6b27\u7b5b\uff0c\u4f46\u662f\u8fd9\u4e00\u9053\u9898\u76ee\u4e0d\u53ef\u4ee5\u7528\u6b27\u7b5b\uff0c\u539f\u56e0\u52a0\u4e0b\u6765\u4f1a\u8bb2\u89e3\u3002  \n\u56de\u5fc6\u4e00\u4e0b\u6b27\u7b5b\u548c\u57c3\u7b5b\u7684\u7279\u70b9\u3002   \n\u6b27\u7b5b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c$O(n)$\uff0c\u4f46\u662f\u65e0\u6cd5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5408\u6570\u6c42\u51fa\u6700\u5c0f\u7684\u8d28\u6570\uff0c\u4ed6\u53ea\u80fd\u5b9e\u73b0\u7528\u4e00\u4e2a\u8d28\u6570\u7b5b\u6389\u6700\u5c0f\u4ed6\u9700\u8981\u7b5b\u6389\u7684\u5408\u6570\u3002  \n\u57c3\u7b5b\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5408\u6570\u4e2d\u7684\u6240\u6709\u8d28\u56e0\u6570\u90fd\u904d\u5386\u4e00\u904d\u3002    \n\u6a21\u62df\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u4e00\u4e2a\u8d28\u6570\u66f4\u65b0\u4e00\u4e2a\u5408\u6570\u7684\u65f6\u5019\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u5408\u6570\u662f\u8fd9\u4e2a\u8d28\u6570\u7684$k$\u500d\u3002  \n\u5c31\u5bf9\u6211\u4eec\u7684\u7b54\u6848\u6709\u8d21\u732e\u3002  \n\u4f46\u662f\u5f88\u5bb9\u6613\u60f3\u5230\u8fd9\u79cd\u505a\u6cd5\u53ef\u80fd\u6709\u95ee\u9898\u3002  \n\u4e5f\u5c31\u662f\u8d28\u56e0\u6570\u7684$k$\u6b21\u65b9\u3002  \n\u4f46\u662f\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u79cd\u95ee\u9898\u3002    \n\u6a21\u62df\u4e00\u4e0b\uff0c\u5047\u8bbe\u6211\u4eec\u9700\u8981\u5904\u7406$49$\u8fd9\u4e2a\u6570\uff0c\u90a3\u4e48$7$\u4f1a\u66f4\u65b0$49$\u4e00\u6b21\uff0c\u4f46\u662f$49$\u4e5f\u4f1a\u66f4\u65b0\u81ea\u5df1\u4e00\u6b21\u3002\u7b54\u6848\u4f9d\u65e7\u662f\u5bf9\u7684\u3002    \n\u63a5\u4e0b\u6765\u5c31\u662f\u8be2\u95ee\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u53ea\u9700\u8981\u524d\u7f00\u548c\u5904\u7406\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002    \n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IOstream {\n\t#define gc getchar\n\ttemplate <typename T>\n\tinline void read(T &x) {\n\t\tx = 0; T fl = 1; char c = 0;\n\t\tfor (; c < '0' || c > '9'; c = gc())\n\t\t\tif (c == '-') fl = -1;\n\t\tfor (; c >= '0' && c <= '9'; c = gc())\n\t\t\tx = (x << 1) + (x << 3) + (c ^ 48);\n\t\tx *= fl;\n\t}\n\t#undef gc\n} using namespace IOstream;\nconst int N = 1e7 + 10;\nbool isprime[N];\nint d[N], sum[N];\nint pcnt, n, m;\nint main() {\n\tread(n);\n\tfor (int i = 1, x; i <= n; i ++) read(x), d[x] ++; \n\tfor (int i = 2; i < N; i ++) {\n\t\tsum[i] = sum[i - 1];\n\t\tif (isprime[i]) continue;\n\t\tfor (int j = 1; j * i < N; j ++) {\n\t\t\tsum[i] += d[j * i];  \n\t\t\tisprime[i * j] = 1; \n\t\t}\n\t}\n\tread(m);\n\twhile (m --) {\n\t\tint l, r; \n\t\tread(l); read(r); \n\t\tl --; \n\t\tl = min(l, N - 2);\n\t\tr = min(r, N - 2);\n\t\tprintf(\"%d\\n\", sum[r] - sum[l]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1556513897,
        "uid": 35567,
        "name": "Ayers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF385C \u3010Bear and Prime Numbers\u3011"
    },
    {
        "content": "\u66b4\u529b\u641e\u51fa$10^7$\u7684\u7d20\u6570\uff0c\u7136\u540e\u524d\u7f00\u548c+\u4e8c\u5206\u56de\u7b54\u8be2\u95ee\n```\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ninline void rad(int &_){\n    static char ch;\n    while(ch=getchar(),ch<'0'||ch>'9');_=ch-48;\n    while(ch=getchar(),ch<='9'&&ch>='0')_=_*10+ch-48;\n}\nconst int N=1e7+50;\nint n,m,x,y,a[N],b[N/10];\nbool vis[N];\nint pri[N/10],cnt;\nvoid pre(){\n\tpri[++cnt]=2;\n\tint qwq;\n\tfor(int i=3;i<N;i+=2)\n\tif(!vis[i]){\n\t\tpri[++cnt]=i;qwq=i<<1;\n\t\tfor(int j=i;j<N;j+=qwq)\n\t\tif(!vis[j])vis[j]=true;\n\t}\n}\nint main(){\n\tpre();rad(n);//\u641e\u51fa\u7d20\u6570\n\tfor(int i=1;i<=n;++i)rad(x),++a[x];\n\tfor(int i=1;i<=cnt;++i)\n\tfor(int j=pri[i];j<N;j+=pri[i])\n\tb[i]+=a[j];\n\tfor(int i=1;i<=cnt;i++)b[i]+=b[i-1];\n    //\u524d\u7f00\u548c\n\trad(m);\n\tfor(int i=1;i<=m;++i){\n\t\trad(x);rad(y);\n\t\tprintf(\"%d\\n\",b[lower_bound(pri+1,pri+cnt+1,y+1)-pri-1]-b[lower_bound(pri+1,pri+cnt+1,x)-pri-1]);\n        //\u4e8c\u5206\u8d28\u6570\uff0c\u56de\u7b54\u8be2\u95ee\n\t}\n}\n```",
        "postTime": 1548213002,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF385C \u3010Bear and Prime Numbers\u3011"
    },
    {
        "content": "[$\\texttt{link}$](https://www.luogu.com.cn/problem/CF385C)\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u5b9a\u4e49 $f(p)=\\sum\\limits_{i=1}^n\\left[p|a_i\\right]$\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6c42 $\\sum\\limits_{i=l}^r f(i)\\left[i\\in\\mathbf{Prime}\\right]$\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le10^6,1\\le m\\le 5\\times 10^4,1\\le a_i\\le10^7,1\\le l\\le r\\le2\\times 10^9$\n\n## \u9898\u89e3\n\n\u4ee4 $cnt_i=f(i)$\u3002\n\n\u56e0\u4e3a $a_i\\le10^7$\uff0c\u6240\u4ee5 $l,r$ \u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\u4fbf\u6ca1\u610f\u4e49\u4e86\u3002\n\n\u4ee4 $mn_i=\\min\\{k\\in\\mathbf{Prime} \\land k|i\\}$\uff0c\u7ebf\u6027\u7b5b\u641e\u51fa\u6765\u3002\n\n\u626b\u4e00\u904d\u539f\u5e8f\u5217\uff0c\u6bcf\u6b21\u4ee4 $a_i\\gets \\frac{a_i}{mn_{a_i}}$\uff0c\u5e76\u52a0\u5728 $cnt_{mn_{a_i}}$ \u4e0a\uff0c\u56e0\u4e3a $mn_{a_i}\\ge2$\uff0c\u6240\u4ee5\u6700\u591a $\\log_{a_i}$ \u6b21\u5c31\u9664\u5b8c\uff0c\u590d\u6742\u5ea6 $O(n\\log a_i)$\u3002\n\n\u4ee4 $sum_i=\\sum\\limits_{i=1}^i cnt_i$\uff0c\u67e5\u8be2 $\\left[l,r\\right]$ \u7b54\u6848\u5373\u4e3a $sum_r-sum_{l-1}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log a_i+q)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 1e6 + 10, W = 1e7 + 10;\nint prime[W], mn[W], cnt;\nbitset<W> isp;\nvoid sieve(int n) {\n\tmn[1] = isp[1] = 1;\n\tfor(int i = 2; i <= n; i++) {\n\t\tif(!isp[i]) prime[++cnt] = i, mn[i] = i;\n\t\tfor(int j = 1; j <= cnt && prime[j] * i <= n; j++) {\n\t\t\tisp[prime[j] * i] = 1;\n\t\t\tif(!(i % prime[j])) {\n\t\t\t\tmn[prime[j] * i] = prime[j];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmn[prime[j] * i] = prime[j];\n\t\t}\n\t}\n}\nint n, m;\nll f[W];\nint main() {\n\tsieve(1e7);\n\tscanf(\"%d\", &n);\n\tfor(int i = 1, a; i <= n; i++) {\n\t\tscanf(\"%d\", &a);\n\t\twhile(a > 1) {\n\t\t\tint t = mn[a];\n\t\t\tf[t]++;\n\t\t\twhile(!(a % t)) a /= t;\n\t\t}\n\t}\n\tfor(int i = 1; i <= 1e7; i++)\n\t\tf[i] += f[i - 1];\n\tscanf(\"%d\", &m);\n\tint l, r;\n\twhile(m--) {\n\t\tscanf(\"%d%d\", &l, &r);\n\t\tr = min(10000000, r);\n\t\tif(l > r) {\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%lld\\n\", f[r] - f[l - 1]);\n\t} \n\treturn 0;\n} \n```\n",
        "postTime": 1653891334,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF385C Bear and Prime Numbers"
    },
    {
        "content": "\u9996\u5148\uff0c\u663e\u800c\u6613\u89c1\u5730\uff0c\u57c3\u6c0f\u7b5b\u7b5b\u51fa $10^7$ \u6b21\u65b9\u5185\u6240\u6709\u7684\u7d20\u6570\u3002\n\n$l,r$ \u90a3\u4e48\u5927\u4e0d\u7528\u7ba1\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6570\u4e00\u5b9a\u4e0d\u4f1a\u6574\u9664\u6bd4\u5b83\u5927\u7684\u6570\u3002\n\n\u7b5b\u7d20\u6570\u7684\u540c\u65f6\u987a\u5e26\u9884\u5904\u7406\u51fa\u5728 $a$ \u6570\u5217\u4e2d\u80fd\u88ab\u8be5\u6570\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5e76\u7ef4\u62a4\u524d\u7f00\u548c\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u53ef\u4ee5\u524d\u7f00\u548c $O(1)$ \u505a\u3002\n\n\u7136\u540e\u5c31\u662f\u9898\u76ee\u7684\u8f93\u5165\u91cf\u6bd4\u8f83\u5927\uff0c\u5bf9\u4e8e\u5927\u5e38\u6570\u9009\u624b\u53ef\u80fd\u8d85\u65f6\uff0c\u6700\u597d\u7528\u5feb\u8bfb\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e7 + 10;\nint n, q, a, b, pr[maxn], C[maxn], t[maxn];\nint ping(int x) { return x * x; }\nnamespace in{\n    #ifdef faster\n    char buf[1 << 21], *p1 = buf, *p2 = buf;\n    inline int getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\n    #else\n    inline int getc(){return getchar();}\n    #endif\n    template <typename T>inline void read(T& t){\n        t=0;int f=0;char ch=getc();while (!isdigit(ch)){if(ch=='-')f = 1;ch=getc();}\n        while(isdigit(ch)){t=t*10+ch-48;ch = getc();}if(f)t=-t;\n    }\n    template <typename T, typename... Args> inline void read(T& t, Args&... args) { read(t); read(args...); }\n}\nsigned main() {\n    in::read(n);\n    while (n--) {\n        int tmp;\n        in::read(tmp);\n        t[tmp]++;\n    }\n    for (int i = 2; i < maxn; i++) {\n        if (pr[i]) C[i] = C[i - 1];\n        else {\n            for (int j = 1; i * j < maxn; j++) {\n                pr[i * j] = 1;\n                C[i] += t[i * j];\n            }\n            C[i] += C[i - 1];\n        }\n    }\n    in::read(q);\n    while (q--) {\n        in::read(a, b);\n        printf(\"%d\\n\", (C[min(b, maxn - 10)] - C[min(a - 1, maxn  - 10)]));\n    }\n}\n```\n",
        "postTime": 1648287465,
        "uid": 305379,
        "name": "SolitaryJailbird",
        "ccfLevel": 6,
        "title": "CF385C Bear and Prime Numbers \u9898\u89e3"
    },
    {
        "content": "# Bear and Prime Numbers\n\n\u7ed9\u4f60\u4e00\u4e32\u6570\u5217a.\u5bf9\u4e8e\u4e00\u4e2a\u8d28\u6570p,\u5b9a\u4e49\u51fd\u6570f(p)=a\u6570\u5217\u4e2d\u80fd\u88abp\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570.\u7ed9\u51fam\u7ec4\u8be2\u95eel,r,\u8be2\u95ee[l,r]\u533a\u95f4\u5185\u6240\u6709\u7d20\u6570p\u7684f(p)\u4e4b\u548c.\n\n## \u5e7f\u544a\u63d2\u5165\n\n\u5728\u6211\u7684\u535a\u5ba2\u91cc\u770b\u9898\u89e3\u4f7f\u7528\u6548\u679c\u66f4\u4f73\u54e6QwQ\n\n[\u6155\u5bb9\u7433\u7684\u540e\u82b1\u56ed](https://muronglin.top/hgoi-20190429/)\n\n## \u89e3\u6cd5\n\n\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6240\u6709\u8d28\u6570\u7684\u7b54\u6848\uff0c\u5177\u4f53\u5c31\u662f\u628aa\u6570\u5217\u5206\u89e3\u8d28\u56e0\u6570\n\n\u4e4b\u540e\u53ef\u4ee5\u524d\u7f00\u548c\u641e\u4e00\u4e0b\uff0cO(1)\u8be2\u95ee\u5373\u53ef\uff0c\u4e0d\u77e5\u9053\u697c\u4e0a\u5946\u4f6c\u4e3a\u4ec0\u4e48\u8981\u4e8c\u5206qwq\n\ntips\uff1al\u548cr\u9700\u8981\u7f29\u5c0f\u62101e7\u7684\u6570\u91cf\u7ea7\uff0c\u4f46\u662f\u5f53l>maxx\u65f6\uff0c\u7b54\u6848\u76f4\u63a5\u662f0\n\n## ac\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,maxx,a[1000010],b[10000010],l,r,v[10000010],pr[1000010],cnt;\nlong long ans[10000010];\nvoid get_prime(int s)\n{\n\tfor(int i=2;i<=s;i++)\n\t{\n\t\tif(!v[i])pr[++cnt]=i,v[i]=i;\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t{\n\t\t\tif(pr[j]>v[i]||s/pr[j]<i)break;\n\t\t\tv[i*pr[j]]=pr[j];\n\t\t}\n\t}\n}\nvoid calc(int s)\n{\n\twhile(s!=1)\n\t{\n\t\tans[v[s]]++;\n\t\tint k=v[s];\n\t\twhile(s%k==0&&k!=1)s/=k;\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]),maxx=max(maxx,a[i]);\n\tget_prime(maxx);\n\tfor(int i=1;i<=n;i++)\n\t\tcalc(a[i]);\n\tfor(int i=1;i<=maxx;i++)ans[i]+=ans[i-1];\n\tscanf(\"%d\",&m);\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d\",&l,&r),r=min(r,maxx);\n\t\tif(l>r)puts(\"0\");\n\t\telse printf(\"%lld\\n\",ans[r]-ans[l-1]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1556507072,
        "uid": 24663,
        "name": "\u6ce0\u5c0f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF385C \u3010Bear and Prime Numbers\u3011"
    }
]