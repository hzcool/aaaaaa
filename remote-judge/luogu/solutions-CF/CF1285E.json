[
    {
        "content": "\u770b\u5230\u8d1f\u6570\uff0c\u9996\u5148\u8003\u8651 **\u79bb\u6563\u5316**\uff0c\u7136\u540e\u5c31\u5f88\u81ea\u7136\u5730\u60f3\u5230\u7528 $d_i$ \u6765\u8868\u793a\u5750\u6807\uff08\u79bb\u6563\u5316\u540e\uff09\u4e3a $i$ \u7684\u70b9\u88ab\u51e0\u6761\u7ebf\u6bb5\u8986\u76d6\uff0c\u7136\u540e\u59d1\u4e14\u4e0d\u8bf4\u5220\u53bb\u4e00\u6761\u7ebf\u6bb5\uff0c\u5c31\u662f\u539f\u7ebf\u6bb5\u96c6\u7684 _\u5e76\u96c6_ \u600e\u4e48\u6c42\u5462\uff1f\n\n\u753b\u4e2a\u56fe\u770b\u770b\uff08\u56fe\u4e2d\u4e3a\u4e86\u9632\u6b62\u7ebf\u6bb5\u91cd\u53e0\u5c06\u7ebf\u6bb5\u8fdb\u884c\u4e86\u7ad6\u76f4\u5e73\u79fb\uff0c\u4e00\u6761\u7ebf\u6bb5\u7684\u5b9e\u9645\u8986\u76d6\u533a\u57df\u5373\u4e3a\u5176\u7ad6\u76f4\u6295\u5f71\uff09\uff1a\n\n![image.png](https://i.loli.net/2020/01/13/9w382IzSYV7UsBR.png)\n\n\u7b80\u5355\uff01\u8fde\u7eed\u975e\u96f6\u6bb5\u7684\u4e2a\u6570\u5c31\u662f _\u5e76\u96c6_ \u5927\u5c0f\uff01\n\n\u771f\u7684\u662f\u8fd9\u6837\u5417\uff1f\n\n![image.png](https://i.loli.net/2020/01/13/OzRW4nKr1ixvPuH.png)\n\n\u4f3c\u4e4e\u2026\u2026\u4e0d\u592a\u5bf9\uff1f\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4e00\u79cd\u795e\u4ed9\u7684\u65b9\u6cd5\uff1a\u65e2\u7136\u6211\u4eec\u7684\u6807\u53f7\u90fd\u5728\u70b9\u4e0a\uff0c\u7b2c\u4e8c\u5f20\u56fe\u4e0d\u80fd\u5f88\u597d\u5904\u7406\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u7ed9\u8fb9\u4e5f\u6765\u4e2a $d$\uff01\n\n\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u53ea\u8981\u628a\u6240\u6709\u7684 $l_i, r_i$ \u90fd $\\times 2$ \u5373\u53ef\uff01\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u80fd\u5f88\u597d\u5730\u5904\u7406\u4e86\uff1a\n\n![image.png](https://i.loli.net/2020/01/13/NEWRaBZYhSv3QUt.png)\n\n\u90a3\u4e48 $\\mathcal O(n^2)$ \u7684\u505a\u6cd5\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\uff1a\u5220\u53bb\u7ebf\u6bb5 $i$ \u65f6\uff0c\u5c31\u628a $[l_i, r_i]$ \u7684 $d$ \u90fd\u51cf\u53bb $1$\uff0c\u7136\u540e\u91cd\u65b0\u7edf\u8ba1\u4e00\u904d\u6c42\u6700\u5927\u503c\uff01\n\n\u663e\u7136\u662f\u8fc7\u4e0d\u4e86\u7684\uff0c\u8fd8\u9700\u8981\u4f18\u5316\u3002\n\n\u628a $[l_i, r_i]$ \u7684 $d$ \u90fd\u51cf\u53bb $1$ \u540e\uff0c\u6709\u80fd\u529b\u6210\u4e3a\u65b0\u7684\u7a7a\u6bb5\u7684\u6761\u4ef6\uff0c\u663e\u7136\u662f $d = 1$\uff0c\u6211\u4eec\u4e0d\u59a8\u5927\u80c6\u7684\u5047\u8bbe\u4e00\u4e0b\uff0c$[l_i, r_i]$ \u4e2d $d = 1$ \u7684\u8fde\u7eed\u6bb5\u6570\uff08\u663e\u7136\u8fd9\u91cc\u7684 $d$ \u4e0d\u4f1a\u4e3a $0$\uff0c\u81f3\u5c11\u6709\u7ebf\u6bb5 $i$ \u8986\u76d6\u5462\uff09\uff0c\u5c31\u662f\u5220\u53bb\u7ebf\u6bb5 $i$ \u540e **\u65b0\u589e\u7684\u6bb5\u6570**\u3002\n\n\u8bd5\u4e00\u4e0b\uff1f\n\n![image.png](https://i.loli.net/2020/01/13/xHsFXQk3uJnv1oI.png)\n\n\u597d\u50cf\u662f\u5bf9\u7684\uff1f\n\n\u90a3\u8981\u662f\u8fd9\u6837\u5462\uff1f\n\n![image.png](https://i.loli.net/2020/01/13/pFl1gfciCO3S4h6.png)\n\n\u53ef\u662f\u663e\u7136\u7b54\u6848\u662f\u589e\u52a0 $1$\uff0c\u800c\u4e0d\u662f\u589e\u52a0 $2$ \u5440\uff1f\n\n\u518d\u4e3e\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\n\n![image.png](https://i.loli.net/2020/01/13/qoxQs4fzLDtWeUO.png)\n\n\u8fd9\u65f6\uff0c\u663e\u7136\u7b54\u6848\u662f\u51cf\u53bb $1$ \u4e86\uff0c\u800c\u4e0d\u662f\u79bb\u8c31\u5730\u589e\u52a0 $1$\u3002\uff08\u867d\u7136 $n \\ge 2$\uff0c\u4f46\u8fd9\u91cc\u59d1\u4e14\u8ba4\u4e3a\u90a3\u4e2a $l$ \u548c $r$ \u975e\u5e38\u5927\uff09\n\n\u53d1\u73b0\u4e86\u4ec0\u4e48\uff1f\u5f53\u65b0\u589e\u6bb5\u548c $l_i$ \u76f8\u901a\u65f6\uff0c\u7b54\u6848\u8981 $-1$\uff0c\u548c $r_i$ \u76f8\u901a\u65f6\u4e5f\u8981 $-1$\uff0c\u5b9e\u73b0\u4e0a\u53ea\u8981\u5224\u65ad\u4e00\u4e0b $d_{l_i}$ \u548c $d_{r_i}$ \u662f\u4e0d\u662f\u7b49\u4e8e $1$ \u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u600e\u4e48\u6c42\u65b0\u589e\u6bb5\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u628a\u6bcf\u4e00\u4e2a\u8fde\u7eed $1$ \u6bb5\u7684\u6700\u5de6\u8fb9\u7684 $d' + 1$\uff0c\u6700\u53f3\u8fb9\u7684 $d' + 1$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 $\\left \\lfloor \\dfrac{\\sum_{i = l}^{r} d'_i}{2} \\right \\rfloor $ \u6765\u8ba1\u7b97\u6bb5\u6570\u4e86\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff1f\uff09\uff0c\u5982\u679c\u52a0\u4e0a\u524d\u7f00\u548c\u4f18\u5316\uff0c\u90a3\u4e48\u53bb\u6389 $\\mathcal O(n \\log n)$ \u7684\u79bb\u6563\u5316\uff0c\u4ee3\u7801\u5c31\u662f $\\mathcal O(n)$ \u7684\u4e86\u3002\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u76f4\u89c2\u7684\u6f14\u793a\uff1a\n\n![image.png](https://i.loli.net/2020/01/13/THJ4nb1uMFYr6CQ.png)\n\n\u4ee3\u7801\u8d34\u51fa\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\uff08\u4ee3\u7801\u4e2d\u7528 `d_` \u6765\u8868\u793a $d'$\uff09\n\n```cpp\n#include <bits/stdc++.h>\n#define REP(i, x, y) for(register int i = x; i <= y; i++)\nusing namespace std;\ntypedef long long LL;\nconst int N = 2e5 + 5;\nstruct segment { LL l, r; } s[N];\nint n;\nLL ans0, ans1, tmp[N << 1], d_[N << 2], d[N << 2];\nint main()\n{\n\tios::sync_with_stdio(false);\n\tint T;\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tans0 = 0; ans1 = INT_MIN;\n\t\tcin >> n;\n\t\tREP(i, 1, n)\n\t\t{\n\t\t\tcin >> s[i].l >> s[i].r;\n\t\t\ttmp[(i << 1) - 1] = s[i].l;\n\t\t\ttmp[i << 1] = s[i].r;\n\t\t}\n\t\tsort(tmp + 1, tmp + (n << 1) + 1);\n\t\tint tot = unique(tmp + 1, tmp + (n << 1) + 1) - tmp - 1;\n\t\tREP(i, 1, n)\n\t\t{\n\t\t\ts[i].l = lower_bound(tmp + 1, tmp + tot + 1, s[i].l) - tmp;\n\t\t\ts[i].r = lower_bound(tmp + 1, tmp + tot + 1, s[i].r) - tmp;\n\t\t\ts[i].l <<= 1LL; s[i].r <<= 1LL; \n\t\t\td[s[i].l]++; d[s[i].r + 1]--; // \u5dee\u5206\u7b97\u539f\u59cb\u6570\u7ec4 \n\t\t}\n\t\ttot <<= 1LL;\n\t\tREP(i, 1, tot + 5) d[i] += d[i - 1];\n\t\tREP(i, 0, tot + 5) ans0 += d[i] && !d[i + 1];\n\t\tREP(i, 0, tot + 4) if(d[i] == 1 && d[i + 1] != 1) d_[i]++;\n\t\tREP(i, 1, tot + 5) if(d[i] == 1 && d[i - 1] != 1) d_[i]++;\n\t\tREP(i, 1, tot + 5) d_[i] += d_[i - 1]; // d_[] \u4e0a\u524d\u7f00\u548c \n\t\tREP(i, 1, n)\n\t\t{\n\t\t\tLL t = (d_[s[i].r] - d_[s[i].l - 1]) / 2; \n\t\t\tt -= (d[s[i].r] == 1) + (d[s[i].l] == 1);\n\t\t\tans1 = max(ans1, t);\n\t\t}\n\t\tcout << ans0 + ans1 << endl; // \u521d\u59cb\u7b54\u6848\u52a0\u4e0a\u65b0\u589e\u7b54\u6848 \n\t\tREP(i, 0, tot + 10) d[i] = d_[i] = 0; // \u7528\u591a\u5c11\u6e05\u591a\u5c11\uff0c\u907f\u514d memset \u6d6a\u8d39\u65f6\u95f4 \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1578918891,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1285E \u3010Delete a Segment\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u53d1\u73b0\uff0c\u7ebf\u6bb5\u96c6\u7684\u5e76\u96c6\u7ebf\u6bb5\u4e2a\u6570\u8f6c\u5316\u4e3a\u5c06\u7ebf\u6bb5\u6620\u5c04\u5230\u6876\u4e0a\u4e4b\u540e\u4e0d\u4e3a\u96f6\u7684\u6bb5\u6570\uff0c\u4e8e\u662f\u9996\u5148\u5148\u5c06\u539f\u7ebf\u6bb5\u96c6\u79bb\u6563\u5316\u3002\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u5982\u679c\u6876\u91cc\u5b58\u70b9\uff0c\u5c31\u4f1a\u51fa\u73b0\u5c06\u7ebf\u6bb5 $[1,4]$\uff0c$[5,6]$ \u5e76\u4e3a $[1,6]$ \u7684\u60c5\u51b5\uff0c\u800c\u5982\u679c\u6876\u91cc\u5b58\u8fb9\u5219\u65e0\u6cd5\u5904\u7406 $l_i=r_i$ \u7684\u60c5\u51b5\u3002\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\u662f\u5c06\u79bb\u6563\u5316\u540e\u7684\u5de6\u53f3\u65ad\u70b9 $\\times2$\uff0c\u6876\u91cc\u5b58\u70b9\uff0c\u8fd9\u6837\u76f8\u90bb\u7684\u4e24\u4e2a\u4e0d\u4e3a\u96f6\u7684\u70b9\u4e00\u5b9a\u5c31\u540c\u5c5e\u4e8e\u4e00\u6761\u7ebf\u6bb5\u4e86\u3002\n\n\u8f6c\u5316\u95ee\u9898\u540e\u7528\u7ebf\u6bb5\u6811\u6c42\u89e3\uff0c\u5c31\u975e\u5e38\u5bb9\u6613\u4e86\uff0c\u5206\u522b\u7ef4\u62a4\u533a\u95f4\u5185\u6bb5\u6570\uff0c\u5de6\u53f3\u662f\u5426\u6709\u672a\u7ed3\u675f\u7684\u4e00\u6bb5\u3002\u4f46\u662f\u7edf\u8ba1\u7b54\u6848\u662f\u9700\u8981\u5c06\u533a\u95f4\u5185\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8986\u76d6\u6b21\u6570\u51cf\u4e00\uff0c\u800c\u76f4\u63a5\u901a\u8fc7\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\u65e0\u6cd5\u5b9e\u73b0\u3002\u8003\u8651\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u591a\u53ea\u4f1a\u51cf\u4e00\uff0c\u6240\u4ee5\u5b8c\u5168\u53ef\u4ee5\u518d\u5efa\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u6876\u5185\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u51cf\u4e00\uff08\u82e5\u672c\u6765\u5c31\u4e3a $0$ \u5219\u4e0d\u53d8\uff09\u540e\u7684\u7b54\u6848\uff0c\u518d\u901a\u8fc7\u4e24\u4e2a\u7ebf\u6bb5\u6811\u7684\u7b54\u6848\u7ec4\u5408\u8d77\u6765\u5f97\u5230\u5220\u6389\u6bcf\u6761\u7ebf\u6bb5\u7684\u7b54\u6848\uff0c\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=200005,MAXM=800005;\nstruct node\n{\n\tbool lft,rt;\n\tint cnt;\n\tnode operator+(const node &o) const\n\t{\n\t\tif(cnt==-1) return o;\n\t\tif(o.cnt==-1) return (node){lft,rt,cnt};\n\t\treturn (node){lft,o.rt,cnt+o.cnt-(rt&o.lft)};\n\t}\n}tr1[MAXM<<2],tr2[MAXM<<2];//\u4e24\u9897\u7ebf\u6bb5\u6811\nint n,l[MAXN],r[MAXN],t,ct[MAXM]/*\u6876*/,dif[MAXM]/*\u5dee\u5206*/,m;\nmap<int,int> mp;\nvoid init()\n{\n\tmp.clear(),m=0;\n\tmemset(dif,0,sizeof(dif));\n}\nvoid ls()//\u79bb\u6563\u5316\n{\n\tvector<int> vc;\n\tfor(int i=1;i<=n;i++)\n\t\tvc.push_back(l[i]),vc.push_back(r[i]);\n\tsort(vc.begin(),vc.end());\n\tm=mp[vc[0]]=1;\n\tfor(int i=1;i<vc.size();i++)\n\t\tif(vc[i]!=vc[i-1]) mp[vc[i]]=++m;\n\tfor(int i=1;i<=n;i++)\n\t\tl[i]=mp[l[i]]*2,r[i]=mp[r[i]]*2;\n\tm*=2;\n}\nvoid bd1(int u,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttr1[u].cnt=tr1[u].lft=tr1[u].rt=(ct[l]>0);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbd1(u*2,l,mid),bd1(u*2+1,mid+1,r);\n\ttr1[u]=tr1[u*2]+tr1[u*2+1];\n}\nvoid bd2(int u,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttr2[u].cnt=tr2[u].lft=tr2[u].rt=(ct[l]>1);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbd2(u*2,l,mid),bd2(u*2+1,mid+1,r);\n\ttr2[u]=tr2[u*2]+tr2[u*2+1];\n}\nnode _0=(node){0,0,-1};\nnode qr1(int u,int l,int r,int L,int R)\n{\n\tif(L<=l&&r<=R) return tr1[u];\n\tif(L>r||l>R) return _0;\n\tint mid=(l+r)/2;\n\treturn qr1(u*2,l,mid,L,R)+qr1(u*2+1,mid+1,r,L,R);\n}\nnode qr2(int u,int l,int r,int L,int R)\n{\n\tif(L<=l&&r<=R) return tr2[u];\n\tif(L>r||l>R) return _0;\n\tint mid=(l+r)/2;\n\treturn qr2(u*2,l,mid,L,R)+qr2(u*2+1,mid+1,r,L,R);\n}\nint main()\n{\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tinit();\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%d%d\",&l[i],&r[i]);\n\t\tls();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tdif[l[i]]++,dif[r[i]+1]--;\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tct[i]=ct[i-1]+dif[i];\n\t\tbd1(1,1,m),bd2(1,1,m);\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tans=max(ans,(qr1(1,1,m,1,l[i]-1)+qr2(1,1,m,l[i],r[i])+qr1(1,1,m,r[i]+1,m)).cnt);\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n} \n```\n\n",
        "postTime": 1651207168,
        "uid": 448159,
        "name": "wz20201136",
        "ccfLevel": 7,
        "title": "CF1285E\u9898\u89e3"
    },
    {
        "content": "\u8bb2\u4e00\u79cd\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u9700`set`\u5373\u53ef\u3002\n\n\u5148\u6765\u770b\u4e00\u79cd\u6781\u7aef\u7684\u60c5\u51b5\n\n![](https://s2.ax1x.com/2020/01/24/1VHx39.jpg)\n\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e00\u5171\u56db\u6761\u9ed1\u8272\u7ebf\u6bb5\uff0c\u663e\u7136\u6211\u4eec\u53bb\u6389\u90a3\u6761\u6700\u957f\u7ebf\u6bb5\uff0c\u5c31\u80fd\u5f97\u5230\u4e09\u4e2a\u533a\u57df\uff0c\u6240\u4ee5\u7b54\u6848\u662f3\u3002\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u53bb\u6389\u662f\u8fd9\u6761\u957f\u7ebf\u6bb5\u5462\uff1f\n\n\u4e3a\u4e86\u533a\u522b\u6bb5\u548c\u539f\u9898\u4e2d\u7684\u7ebf\u6bb5\uff0c\u628a\u6bb5\u79f0\u8c13**\u90e8\u4f4d**\u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u6761\u957f\u7ebf\u6bb5\u7684\u56db\u4e2a\u7ea2\u8272\u90e8\u4f4d\u662f\u5b83\u81ea\u5df1\u72ec\u5360\u7684\uff0c\u800c\u4e09\u6761\u77ed\u7ebf\u6bb5\u6839\u672c\u6ca1\u6709\u72ec\u5360\u7684\u90e8\u4f4d\u3002\n\n\u800c\u8fd9\u56db\u4e2a\u90e8\u4f4d\u4e2d\u5934\u5c3e\u4e24\u4e2a\u5176\u5b9e\u662f\u65e0\u6548\u7684\uff0c\u771f\u6b63\u5e26\u6765\u8d21\u732e\u7684\u662f\u4e2d\u95f4\u4e24\u4e2a\u72ec\u5360\u7684\u90e8\u4f4d\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff0c\u4e00\u6761\u90fd\u4e0d\u5220\u65f6\u7684\u533a\u57df\u6570\u91cf\u662f1\uff0c\u52a0\u4e0a\u6240\u6709\u7ebf\u6bb5\u4e2d\u6700\u5927\u7684\u6709\u6548\u72ec\u5360\u90e8\u4f4d\u65702\uff0c\u5c31\u662f\u6700\u7ec8\u7b54\u6848 3\u3002\n\n\n\u5177\u4f53\u7684\u505a\u6cd5\u662f\uff1a\u628a\u9898\u4e2d n \u4e2a\u7ebf\u6bb5\u8f6c\u6210 2n \u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u6309\u5750\u6807\u6392\u5e8f\uff08\u8981\u4fdd\u8bc1\u540c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8d77\u70b9\u6bd4\u7ec8\u70b9\u5148\uff09\u3002\u7136\u540e\u904d\u5386\u8fd9\u4e9b\u4e8b\u4ef6\uff0c\u7edf\u8ba1\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u4e3a\u8d77\u70b9\u90a3\u4e2a\u90e8\u4f4d\u662f\u5426\u72ec\u5360\uff0c\u8be6\u60c5\u89c1\u4ee3\u7801\u91cc\u7684\u6ce8\u91ca\u3002\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\nconst LL mod = 1e9 + 7;\nconst int N = 200005;\n\npair<int, int> a[N * 2];  //first \u4e3a\u4e8b\u4ef6\u7684\u5750\u6807\uff0csecond \u4e3a\u7ebf\u6bb5\u7f16\u53f7\uff08\u8d1f\u6570\u8868\u793a\u8d77\u70b9\uff0c\u6b63\u6570\u8868\u793a\u7ec8\u70b9\uff0c\u56e0\u4e3a\u6392\u5e8f\u8981\u4fdd\u8bc1\u5148\u8003\u8651\u8d77\u70b9\uff09\nint cnt[N];               // \u7edf\u8ba1\u6bcf\u4e2a\u7ebf\u6bb5\u4e2d \u81ea\u5df1\u72ec\u5360\u7684\u90e8\u4f4d\u6570\u91cf\uff08\u6392\u9664\u4e24\u7aef\u8fb9\u754c\u5916\uff09\nint main() {\n    int _;\n    scanf(\"%d\", &_);\n    while (_--) {\n        int n, m = 0;\n        scanf(\"%d\", &n);\n        for (int i = 1; i <= n; i++) cnt[i] = 0;\n        for (int i = 1; i <= n; i++) {\n            int x, y;\n            scanf(\"%d%d\", &x, &y);\n            a[m++] = {x, -i};\n            a[m++] = {y, i};\n        }\n        sort(a, a + m);\n        set<int> se;  //\u50a8\u5b58\u5305\u542b\u5f53\u524d\u8003\u8651\u7684\u90e8\u4f4d\u7684\u7ebf\u6bb5\u7f16\u53f7\n        int ans = 0;  // \u7edf\u8ba1\u7a7a\u9699\u6570\u91cf\uff0c\u5305\u62ec\u6700\u53f3\u8fb9\u7684\u7a7a\u767d\uff0c\u4e0d\u5305\u62ec\u6700\u5de6\u8fb9\u7684\u7a7a\u767d\uff0c\u6240\u4ee5\u5c31\u7b49\u4e8e\u4e00\u6761\u4e0d\u5220\u65f6\u7684\u533a\u57df\u6570\n        for (int i = 0; i < m; i++) {\n            //\u7528\u626b\u63cf\u7ebf\u8003\u5bdf\u4ee5 a[i].first \u4e3a\u8d77\u70b9\u7684\u90a3\u4e2a\u90e8\u4f4d\n            int id = abs(a[i].second);\n            if (a[i].second < 0) {\n                if (se.size() == 0) cnt[id]--;  // \u8be5\u90e8\u4f4d\u662f\u5de6\u8fb9\u754c\n                se.insert(id);\n            } else {\n                if (se.size() == 1) cnt[id]--;  // \u8be5\u90e8\u4f4d\u662f\u53f3\u8fb9\u754c\n                se.erase(id);\n            }\n            if (se.empty()) ans++;                   // \u8fd9\u662f\u4e00\u4e2a\u95f4\u9699\n            if (se.size() == 1) cnt[*se.begin()]++;  // \u8be5\u90e8\u5206\u72ec\u5360\n        }\n        int mx = -1;  // \u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u6392\u9664\u5de6\u53f3\u8fb9\u754c\u540e\uff0c\u72ec\u5360\u6570\u4e3a-1, \u76f8\u5f53\u4e8e\u672c\u6765\u5b64\u96f6\u96f6\u7684\u4e00\u6bb5\u88ab\u5220\u6389\u4e86\u3002\n        for (int i = 1; i <= n; i++) mx = max(mx, cnt[i]);\n        ans += mx;\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1579808508,
        "uid": 54357,
        "name": "OMG_wc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1285E \u3010Delete a Segment\u3011"
    },
    {
        "content": "\u770b\u8d77\u6765\u6211\u7684\u505a\u6cd5\u6700\u5947\u602a\uff0c\u751a\u81f3\u6ca1\u6709\u6570\u636e\u7ed3\u6784\u2026\u2026\u53d1\u4e00\u4e0b\u6211\u7684\u5783\u573e\u91cd\u5de5\u4e1a\u505a\u6cd5\u5427\u2026\u2026\n\n\u5c06\u6240\u6709\u7ebf\u6bb5\u6309 $l$ \u6392\u5e8f\u3002\n\n\u4ee4 $mx_i$ \u8868\u793a\u524d $i$ \u6761\u7ebf\u6bb5\u4e2d $r$ \u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8054\u901a\u5757\u4e2a\u6570\u5c31\u5e94\u8be5\u662f\uff1a\n\n$$\\sum_{i=1}^n[l_i>mx_{i-1}]$$\n\n\u8003\u8651\u5220\u9664\u4e86\u4e00\u6761\u7ebf\u6bb5 $j$\uff0c\u5b83\u4f1a\u5bf9\u67d0\u4e2a\u533a\u95f4\u5185\u7684 $mx$ \u90fd\u4ea7\u751f\u5f71\u54cd\u3002\u8fd9\u4e2a\u533a\u95f4\u6ee1\u8db3 $mx=r_j$\uff0c\u56e0\u4e3a $mx$ \u5355\u8c03\uff0c\u53ef\u4ee5\u4e8c\u5206\u6c42\u51fa\u3002\n\n\u5220\u6389\u8fd9\u6761\u7ebf\u6bb5\u540e\uff0c\u8fd9\u533a\u95f4\u91cc\u9762\u7684 $mx$\uff0c\u4e5f\u5c31\u662f\u524d\u7f00\u6700\u5927\u503c\u4f1a\u53d8\u6210\u524d\u7f00\u6b21\u5927\u503c\uff08\u4e0d\u8981\u6c42\u4e25\u683c\uff09\u3002\n\n\u518d\u5f04\u4e00\u4e2a\u524d\u7f00\u6b21\u5927\u503c $mx2$\uff0c\u7136\u540e\u5c31\u80fd\u7b80\u5355\u7b97\u4e86\u3002\u8fd9\u4e2a\u533a\u95f4\u91cc\u9762\u6bcf\u6761\u7ebf\u6bb5\u7684\u8d21\u732e\u662f $[l>mx2]$\uff0c\u5916\u9762\u6bcf\u6761\u7ebf\u6bb5\u7684\u8d21\u732e\u662f $[l>mx]$\uff0c\u518d\u5f04\u4e2a\u524d\u7f00\u548c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u867d\u7136\u6ca1\u6709\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u611f\u89c9\u6bd4\u6570\u636e\u7ed3\u6784\u505a\u6cd5\u8fd8\u96be\u7801\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst int maxn=444444;\n#define MP make_pair\n#define PB push_back\n#define lson o<<1,l,mid\n#define rson o<<1|1,mid+1,r\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(int i=(a);i>=(b);i--)\n#define MEM(x,v) memset(x,v,sizeof(x))\ninline ll read(){\n\tchar ch=getchar();ll x=0,f=0;\n\twhile(ch<'0' || ch>'9') f|=ch=='-',ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\nstruct seg{\n\tint l,r;\n\tbool operator<(const seg &s)const{return l<s.l;}\n}s[maxn];\nint t,n,mx[2][maxn],pre[2][maxn];\nint main(){\n\tt=read();\n\twhile(t--){\n\t\tn=read();\n\t\tFOR(i,1,n){\n\t\t\ts[i].l=read();s[i].r=read();\n\t\t}\n\t\tsort(s+1,s+n+1);\n\t\tFOR(i,0,n) mx[0][i]=mx[1][i]=-2e9;\n\t\tFOR(i,1,n){\n\t\t\tmx[0][i]=mx[0][i-1];\n\t\t\tmx[1][i]=mx[1][i-1];\n\t\t\tif(s[i].r>mx[0][i]) mx[1][i]=mx[0][i],mx[0][i]=s[i].r;\n\t\t\telse mx[1][i]=max(mx[1][i],s[i].r);\n\t\t\tpre[0][i]=pre[0][i-1]+(s[i].l>mx[0][i-1]);\n\t\t\tpre[1][i]=pre[1][i-1]+(s[i].l>mx[1][i-1]);\n\t\t}\n\t\tint ans=0;\n\t\tFOR(i,1,n){\n\t\t\tint p1=lower_bound(mx[0]+i,mx[0]+n+1,s[i].r)-mx[0];\n\t\t\tint p2=lower_bound(mx[0]+i,mx[0]+n+1,s[i].r+1)-mx[0];\n\t\t\tif(mx[0][p1]!=s[i].r) ans=max(ans,pre[0][n]);\n\t\t\telse{\n\t\t\t\tp2--;\n\t\t\t\tassert(mx[0][p2]==s[i].r);\n\t\t\t\tbool in=i>=p1+1 && i<=p2+1 && s[i].l>mx[1][i-1] || (i<p1+1 || i>p2+1) && s[i].l>mx[0][i-1];\n\t\t\t\tans=max(ans,pre[0][p1]+pre[1][min(n,p2+1)]-pre[1][p1]+pre[0][n]-pre[0][min(n,p2+1)]-in);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```",
        "postTime": 1578717469,
        "uid": 72118,
        "name": "AThousandSuns",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1285E \u3010Delete a Segment\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u4f60\u6709$n$\u4e2a\u533a\u95f4$[l_i, r_i]$\uff0c \u4f60\u8981\u6070\u597d\u5220\u6389\u4e00\u4e2a\u533a\u95f4\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684$n-1$\u4e2a\u533a\u95f4\u7684\u5e76\u7684\u603b\u548c\u6700\u591a\n\n$\\texttt{eg.}$ $[1,2], [3,5], [3,7]$\u7684\u5e76\u662f$[1,2], [3,7]$\n\n<!--more-->\n\n### \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u5c06\u7ed9\u5b9a\u7684\u533a\u95f4\u8fdb\u884c\u79bb\u6563\u5316\n\n\u7531\u4e8e\u533a\u95f4\u7aef\u70b9\u76f8\u90bb\u7684\u533a\u95f4\u5e76\u4e0d\u7b97\u76f8\u4ea4\uff0c\u6240\u4ee5\u79bb\u6563\u5316\u65f6\u8981\u8fdb\u884c\u7279\u6b8a\u5904\u7406$(x=x*2-1)$\n\n\u7136\u540e\u672c\u9898\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898:\n\n1.\u5bf9\u4e8e\u6240\u6709$[l_i, r_i]$, \u628a\u5bf9\u5e94\u533a\u95f4\u7684\u6570\u503c$a_i$\u5168\u90e8\u52a0\u4e0a1\uff0c\u5e76\u7edf\u8ba1\u6b64\u65f6\u6240\u6709\u533a\u95f4\u5e76\u7684\u4e2a\u6570$num$\n\n2.\u5bf9\u4e8e\u6bcf\u4e2a$[l_i, r_i]$, \u6c42\u51fa\u8be5\u533a\u95f4\u5185\u6ee1\u8db3$a_i=1$\u7684\u8fde\u7eed\u6bb5\u4e2a\u6570\uff0c\u5e76\u7edf\u8ba1\u6700\u5927\u503c$ans$\n\n\u90a3\u4e48\uff0c$ans+num$\u5373\u4e3a\u7b54\u6848\n\n\u5bf9\u4e8e\u6b65\u9aa4$1$\uff0c\u53ef\u4ee5\u7528\u5dee\u5206\u6c42\u51fa\uff1b\u5bf9\u4e8e\u6b65\u9aa4$2$\uff0c \u53ef\u4ee5\u7528\u524d\u7f00\u548c\u6c42\u51fa\uff08\u6ce8\u610f\u7279\u5224\u5f00\u5934\u548c\u7ed3\u5c3e\u76f8\u7b49\u7684\u60c5\u51b5\uff09\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\n#define R register\n#define ll long long\n#define sum(a, b, mod) (((a) + (b)) % mod)\n\nconst int MaxN = 1e6 + 10;\n\nstd::map<int, int> m1, m2;\nint n, cnt, l[MaxN], r[MaxN], a[MaxN], s[MaxN];\n\ninline void prework()\n{\n    m1.clear(), m2.clear();\n    for (int i = 1; i <= n; i++)\n        m1[l[i]] = m1[r[i]] = 1;\n    cnt = 0;\n    for (std::map<int, int>::iterator it = m1.begin(); it != m1.end(); it++)\n        m2[it->first] = ++cnt;\n    for (int i = 1; i <= n; i++)\n        l[i] = m2[l[i]] * 2 - 1, r[i] = m2[r[i]] * 2 - 1;\n}\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n    {\n        if (ch == '-')\n            f = 0;\n        ch = getchar();\n    }\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return f ? x : (-x);\n}\n\nint main()\n{\n    int T = read();\n    while (T--)\n    {\n        n = read(), cnt = 0;\n        for (int i = 1; i <= n; i++)\n            l[i] = read(), r[i] = read();\n        prework(), cnt = cnt * 2 - 1;\n        for (int i = 1; i <= n; i++)\n            a[l[i]]++, a[r[i] + 1]--;\n        for (int i = 1; i <= cnt; i++)\n            a[i] += a[i - 1];\n        int num = 0, ans = -1000000;\n        for (int i = 1; i <= cnt; i++)\n        {\n            s[i] = s[i - 1];\n            num += (a[i] && !a[i - 1]);\n            if (a[i] > 1 && a[i - 1] <= 1)\n                ++s[i];\n        }\n        for (int i = 1; i <= n; i++)\n        {\n            int cur = s[r[i]] - s[l[i] - 1] + ((a[l[i]] > 1) && (a[l[i] - 1] > 1)) - 1;\n            ans = std::max(ans, cur);\n        }\n        printf(\"%d\\n\", num + ans);\n        for (int i = 0; i <= cnt * 2; i++)\n            a[i] = s[i] = 0;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1578878474,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1285E \u3010Delete a Segment\u3011"
    },
    {
        "content": "\u76ee\u524d\u4e3a\u6b62\u6ca1\u6709\u770b\u5230\u83ab\u961f\u505a\u6cd5\u3002\n\n~~2022/10/4\uff0cEnder32k \u5728\u5b66\u6821\u6a21\u62df\u8d5b\u4e2d\u8bd5\u56fe\u4f7f\u7528\u83ab\u961f\u89e3\u51b3\u6b64\u9898\uff0c\u4e14\u88ab\u6bd2\u7624\u642c\u9898\u4eba 1s \u7684\u65f6\u9650\u5361\u5230\u66b4\u529b\u5206\u6570\uff0c\u8ddd\u4eca 7 \u4e2a\u5c0f\u65f6\uff0c\u671b\u5468\u77e5\u3002~~\n\n---\n\n### Solution\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u7ebf\u6bb5\u8986\u76d6\u7b49\u540c\u4e8e\u533a\u95f4\u52a0/\u533a\u95f4\u8986\u76d6\uff0c\u6700\u540e\u6c42\u4e0d\u5305\u542b $0$ \u7684\u6781\u957f\u8fde\u7eed\u6bb5\u4e2a\u6570\u3002\n\n\u7531\u4e8e\u53ea\u9700\u8981\u5220\u9664\u4e00\u6761\u7ebf\u6bb5\uff0c\u53ef\u4ee5\u5148\u79bb\u6563\u5316\u540e\u628a\u6240\u6709\u7ebf\u6bb5\u52a0\u5230\u6570\u8f74\u4e0a\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u533a\u95f4\u5220\u9664\uff0c\u67e5\u8be2\u5168\u5c40\u6781\u957f\u975e $0$ \u8fde\u7eed\u6bb5\u4e2a\u6570\u3002\n\n\u5982\u679c\u628a\u8981\u5220\u9664\u7684\u7ebf\u6bb5\u770b\u6210\u8be2\u95ee\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u4f7f\u7528\u83ab\u961f\u4e86\u3002\u8003\u8651\u6570\u8f74\u7b2c $i$ \u4f4d $+1$ \u6216 $-1$ \u540e\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u5982\u679c\u7b2c $i$ \u4f4d\u88ab\u51cf\u5230\u4e86 $0$\uff0c\u5982\u679c $i-1,i+1$ \u5747\u4e0d\u7b49\u4e8e $0$\uff0c\u5219\u7b2c $i$ \u4f4d\u5c06\u539f\u6765 $i$ \u6240\u5728\u7684\u6bb5\u5206\u6210\u4e86\u4e24\u534a\uff0c\u7b54\u6848\u589e\u52a0 $1$\uff1b\u5982\u679c $i-1,i+1$ \u5747\u4e3a $0$\uff0c\u5219\u539f\u6765 $i$ \u81ea\u5df1\u5c31\u662f\u4e00\u6bb5\uff0c\u73b0\u5728\u628a\u5b83\u5220\u53bb\u4e86\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u51cf\u5c11 $1$\uff1b\u5426\u5219\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\n\n\u7b2c $i$ \u4f4d\u4ece $0$ \u589e\u52a0\u5230 $1$ \u7684\u60c5\u51b5\u540c\u7406\u3002\n\n\u4e8e\u662f\u5bf9\u8be2\u95ee\u79bb\u7ebf\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u80fd\u4f7f\u7528\u83ab\u961f\u5728 $O(n\\sqrt n)$ \u5185\u89e3\u51b3\u6b64\u9898\u3002\n\n\u4e8e\u662f\u4f60\u9ad8\u5174\u5730\u5199\u4e86\u4e00\u53d1\u4e0a\u53bb\uff0c\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u3002\u56e0\u4e3a\u5728\u4e0a\u8ff0\u505a\u6cd5\u4e2d\uff0c\u533a\u95f4 $[l_i,r_i]$ \u8868\u793a\u5e76\u4e0d\u662f\u9898\u76ee\u6240\u8bf4\u7684\u70b9\u3002\u6bd4\u5982\u76ee\u524d\u6709\u533a\u95f4 $[2,3],[5,6]$\uff0c\u90a3\u4e48\u52a0\u5165 $[4,5]$ \u540e\u6211\u4eec\u7684\u505a\u6cd5\u4f1a\u5c06 $[2,6]$ \u8fde\u6210\u4e00\u5757\uff0c\u7136\u800c\u64cd\u4f5c\u540e\u7684\u533a\u95f4\u5e94\u8be5\u662f $[2,3],[4,6]$\u3002\n\n\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c06\u539f $[l_i,r_i]$ \u7684\u4e0b\u6807\u5168\u90e8\u4e58 $2$\u3002\u8fd9\u6837\u5982\u679c\u5b58\u5728\u539f\u533a\u95f4 $[l_1,r],[r+1,r_1]$ \u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4f1a\u8986\u76d6\u533a\u95f4 $[2l_1,2r],[2r+2,2r_1]$\uff0c\u4e2d\u95f4\u95f4\u9694\u4e86\u4e00\u4e2a $2r+1$\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u628a\u4e24\u4e2a\u533a\u95f4\u5408\u5e76\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5199\u7684\u5e38\u6570\u4f1a\u4e58\u7b49\u4e8e $2\\sqrt 2$\uff0c\u7ea6\u7b49\u4e8e $3$\uff0c\u6240\u4ee5\u9700\u8981**\u5947\u5076\u6392\u5e8f**\u4f18\u5316\uff0c\u4f18\u5316\u540e\u6700\u5927\u7684\u6d4b\u8bd5\u70b9\u65f6\u95f4\u5927\u6982 $0.9s$\u3002\n\n[AC Code](https://codeforces.com/contest/1285/submission/174590323)",
        "postTime": 1664869151,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF1285E Delete a Segment \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u9996\u5148\u6211\u4eec\u8981\u5bf9\u4e8e\u70b9\u8fdb\u884c\u79bb\u6563\u5316\u7684\u5904\u7406\uff0c\u4e3a\u63a5\u4e0b\u6765\u7528\u6811\u72b6\u6570\u7ec4\u4f5c\u51c6\u5907\u3002\u7ecf\u8fc7\u79bb\u6563\u5316\u4e4b\u540e\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fdb\u884c\u533a\u95f4\u7684\u7d2f\u8ba1\uff0c\u5f97\u5230\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u6709\u51e0\u6761\u7ebf\u6bb5\u3002\n\n\u5148\u8003\u8651\u4e0d\u5220\u9664\u7684\u60c5\u51b5\u4e0b\u6709\u591a\u5c11\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684union\uff0c\u8fd9\u4e2a\u7b54\u6848\u662f\u4ece1\u5230(k+1)\u4e2a\u70b9\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u70b9\u6ee1\u8db3\u5f53\u524d\u4f4d\u7f6e\u7ebf\u6bb5\u8986\u76d6\u65700\u800c\u524d\u4e00\u4e2a\u4f4d\u7f6e\u7ebf\u6bb5\u8986\u76d6\u6570\u4e0d\u4e3a0\u3002\u5176\u4e2dk\u4e3a\u79bb\u6563\u5316\u540e\u7684\u6700\u5927\u503c\u3002\u8fd9\u4e2a\u7ed3\u8bba\u6bd4\u8f83\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e2aunion\uff0c\u7ed3\u5c3e\u5fc5\u7136\u6709\u4e00\u4e2a\u70b9\u4e3a0\u3002\n\n\u5462\u4e48\u5bf9\u4e8e\u8981\u5220\u53bb\u7684\u7ebf\u6bb5\uff0c\u5176\u5b9e\u53ea\u8981\u4f1a\u5f71\u54cd\u5230\u6709\u70b9\u7ebf\u6bb5\u8986\u76d6\u6570\u4e3a1\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u8fde\u7eed\u7684\u7ebf\u6bb5\u8986\u76d6\u6570\u4e3a1\uff0c\u5462\u4e48\u5219\u8ba4\u4e3a\u4ed6\u4eec\u662f\u4e00\u4e2a\u6574\u4f53\u3002\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8ba4\u4e3a\u4e00\u6bb5\u8fde\u7eed\u76841\u548c\u540e\u9762\u540e\u7eed\u7684\u5185\u5bb9\u975e1\u7684\u503c\uff0c\u8981\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6574\u4f53\u3002\u540c\u65f6\uff0c\u5bf9\u4e8e\u51fa\u73b011100111\u8fd9\u6837\u5728\u8fde\u7eed\u76841\u4e2d\u524d\u540e\u5982\u4f55\u78b0\u5230\u4e860\uff0c\u4e5f\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b00(1)\u67e5\u8be2\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8de8\u8d8a\u4e86\u591a\u5c11\u4e2a\u533a\u57df\u3002\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u89c2\u5bdf\u5230\u5bf9\u4e8e\u6570\u636e1\u52302\u548c3\u52304\u8fd9\u4e24\u6761\u7ebf\u6bb5\u5bf9\u5e94\u7684union\u5e94\u8be5\u662f2\uff0c\u4f46\u5982\u4f55\u6211\u4eec\u53ea\u662f\u666e\u901a\u7684\u79bb\u6563\u5316\u7684\u8bdd\u4f1a\u8ba4\u4e3a2\u548c3\u662f\u8fde\u5728\u4e00\u8d77\u7684\uff0c\u56e0\u800c\u6211\u4eec\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u503c*2\uff0c\u5b9e\u73b0\u5bf9\u4e8e\u53d8\u62104\u548c6\u662f\u5206\u5f00\u7684\u3002\n\n\u540c\u65f6\u6709\u4e00\u4e2a\u70b9\uff0c\u5982\u4f55\u67e5\u8be2\u5230\u662f\u540c\u4e00\u4e2a\u533a\u57df\uff0c\u4e0a\u8ff0\u8ba1\u7b97\u65b9\u6cd5\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5ea6\u662f0\uff0c\u4f46\u5c31\u6bd4\u5982\u4e0a\u9762\u7684\u6570\u636e1\u52302\u548c3\u52304\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u5e94\u8be5\u662f1\uff0c\u56e0\u4e3a\u5fc5\u987b\u5220\u53bb\u4e00\u6761\u8fb9\uff0c\u5462\u4e48\u6709\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\uff0c\u5728\u8fd9\u4e2aunion\u662f\u4e00\u4e2a\u533a\u57df\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u7279\u5224\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5ea6\u4e3a-1\u3002\u7279\u5224\u65b9\u6cd5\u662f\u4e24\u70b9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u533a\u57df\u4e14\u8fd9\u4e24\u4e2a\u70b9\u5bf9\u5e94\u4f4d\u7f6e\u7684\u7ebf\u6bb5\u8986\u76d6\u6570\u90fd\u4e3a1\u3002\n\n\u6ce8\u610f\u7a7a\u95f4\u5b9e\u9645\u4e0a\u662f\u8981\u5f00\u52308*10^5\u3002\u56e0\u4e3a\u5b9e\u9645\u4e0a\u7ed9\u4e864*10^5\u4e2a\u70b9\uff0c\u540c\u65f6\u6211\u4eec\u5c06\u6240\u6709\u7684\u70b9*2\u5904\u7406\u4e86\u3002\n\n\u6700\u540e\u4e0a\u4ee3\u7801:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define lowbit(x) x & -x\n#define endl '\\n'\n#pragma GCC optimize(2)\nint t;\nint tree[802000];\nvoid add(int x, int num) {\n    while (x <= 801000) {\n        tree[x] += num;\n        x += lowbit(x);\n    }\n}\nint query(int x) {\n    int ans = 0;\n    while (x) {\n        ans += tree[x];\n        x -= lowbit(x);\n    }\n    return ans;\n}\nint c[802000],b[802000];\nvoid solve(){\n    vector<int> l,r,a;\n    int x,y,n,mx = 0;\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>x>>y;\n        l.push_back(x);\n        r.push_back(y);\n        a.push_back(x);\n        a.push_back(y);\n    }\n    sort(a.begin(),a.end());\n    int p = unique(a.begin(),a.end())-a.begin();\n    for(auto& u:l){\n        u = lower_bound(a.begin(),a.begin()+p,u)-a.begin()+1;\n        u<<=1;\n    }\n    for(auto& u:r){\n        u = lower_bound(a.begin(),a.begin()+p,u)-a.begin()+1;\n        u<<=1;\n    }\n    for(int i=0;i<n;i++){\n        add(l[i],1);\n        add(r[i]+1,-1);\n        mx=max(mx,r[i]);\n    }\n    mx++;\n    for(int i=1;i<=mx;i++){\n        b[i]=query(i);\n    }\n    int ans = 0,mmax = INT_MIN,flag0 = 0,cnt = 1;\n    for(int i=1;i<=mx;i++) {\n        if (!b[i] && b[i - 1])\n            ans++;\n    }\n    for(int i=1;i<=mx;i++) {\n        if (b[i] > 1)\n            c[i] = cnt;\n        if (b[i] <= 1) {\n            int p = i;\n            flag0 = 0;\n            while (b[p] <= 1 && p <= mx) {\n                if (!b[p])\n                    flag0 = 1;\n                p++;\n            }\n            if (!flag0)\n                cnt++;\n            for (int j = i; j <= p; j++)\n                c[j] = cnt;\n            i = p;\n        }\n    }\n    for(int i=0;i<n;i++){\n        int tt = c[r[i]]-c[l[i]];\n        if(c[r[i]]==c[l[i]]&&b[l[i]]==1&&b[r[i]]==1)\n            tt=-1;\n        mmax=max(mmax, tt);\n    }\n    cout<<ans+mmax<<endl;\n    for(int i=0;i<n;i++){\n        add(l[i],-1);\n        add(r[i]+1,1);\n    }\n\n\n}\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    cin>>t;\n    while(t--)\n        solve();\n    return 0;\n}\n```\n\n",
        "postTime": 1578756954,
        "uid": 138569,
        "name": "youngk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1285E \u3010Delete a Segment\u3011"
    },
    {
        "content": "Div2\u7684E\u9898\uff0c\u90fd\u4f1a\u7684\u5427\n\n\u5c31\u662f\u6ca1\u65f6\u95f4\u6253CF\uff08\u8df3\u8dc3\u5f0f\u53d1\u7262\u9a9a\uff09\n\n\u5148\u79bb\u6563\u5316\u4ed6\u4e00\u624b ~~\u79bb\u6563\u5316\u771f\u7684\u9e21\u808b~~ \u5b9a\u4e49\u7ebf\u6bb5\u7ec4\u6570\u4e3a\u5408\u5e76\u5b8c\u540e\u7684\u7ebf\u6bb5\u4e2a\u6570\u3002\n\n\u5220\u53bb\u4e00\u6761\u7ebf\u6bb5\u540e\uff0c\u5f88\u660e\u663e\uff0c\u6240\u589e\u52a0\u7684\u7ebf\u6bb5\u7ec4\u6570\u5c31\u662f\u53ea\u6709\u8fd9\u6761\u7ebf\u6bb5\u8986\u76d6\u7684\u533a\u95f4\u4e2a\u6570\u3002\u5982$[1,7],[-2,3],[4,5],[6,8]$\u8fd9\u56db\u6761\u7ebf\u6bb5\uff0c\u53ea\u88ab$[1,7]$\u6240\u5305\u542b\u7684\u533a\u95f4\u5c31\u662f$(3,4),(5,6)$\uff0c\u6240\u4ee5\u65ad\u5f00\u540e\uff0c\u7b54\u6848\u4f1a\u589e\u52a0$2$\u3002\n\n\u505a\u6cd5\u81f3\u6b64\u5c31\u5f88\u663e\u7136\u4e86\u3002\u628a\u79bb\u6563\u5316\u540e\u7684\u7ebf\u6bb5\u5750\u6807\u5148\u5168\u90e8\u4e58\u4ee52\uff0c\u9632\u6b62\u7e41\u7410\u7684\u76f8\u90bb\u533a\u95f4\u7684\u5224\u65ad\uff0c\u518d\u7528\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u6bcf\u4e2a\u5143\u7d20\u4ee5\u5f00\u533a\u95f4$(i,i+1)$\u7684\u5f62\u5f0f\u7ef4\u62a4\u5750\u6807\u8f74\u4e0a\u7684\u7ebf\u6bb5\u7684\u60c5\u51b5\uff08\u5b9e\u73b0\u65f6\uff0c\u524d\u7f00\u548c\u6570\u7ec4\u4e0b\u6807\u7528\u53f3\u7aef\u70b9$i+1$\u8868\u793a\u5373\u53ef\uff09\u3002\n\n\u5982\u76f8\u90bb\u4e24\u5750\u6807{$i,i+1$}\uff0c\u4e00\u4e2a\u53ea\u88ab1\u6761\u7ebf\u6bb5\u8986\u76d6\uff0c\u53e6\u4e00\u4e2a\u88ab\u591a\u6761\u7ebf\u6bb5\u8986\u76d6\uff0c\u5219$(i,i+1)$\u6743\u503c++\uff08\u5c06$(i,i+1)$\u79f0\u4e4b\u4e3a\u597d\u533a\u95f4\uff09\uff0c\u82e5\u4e00\u4e2a\u53ea\u88ab1\u6761\u7ebf\u6bb5\u8986\u76d6\uff0c\u53e6\u4e00\u4e2a\u65e0\u7ebf\u6bb5\u8986\u76d6\uff0c\u5219$(i,i+1)$\u6743\u503c--\uff0c\u7528\u6765\u8868\u793a\u81ea\u8eab\u88ab\u5220\u9664\u540e\u4e24\u4fa7\u65e0\u7ebf\u6bb5\u62fc\u63a5\uff0c\u56e0\u6b64\u51cf\u5c11\u4e86\u4e00\u7ebf\u6bb5\u3002\u8be2\u95ee\u65f6\uff0c$(l_i-1,r_i+1)$\u7684\u6743\u503c\u4e4b\u548c\u518d\u9664\u4ee5$2$\u5c31\u80fd\u8868\u793a\u8be5\u7ebf\u6bb5\u4e2d\u6709\u591a\u5c11\u4e2a\u53ea\u88ab\u5b83\u81ea\u5df1\u8986\u76d6\u7684\u533a\u95f4\u4e86\u3002\n\n\u8fd8\u8981\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\uff01\u518d\u770b\u8be5\u7ebf\u6bb5\u7684\u7aef\u70b9\u5904\u3002\u5982\u679c$l_i,r_i$\u90fd\u53ea\u88ab\u4e00\u6761\u7ebf\u6bb5\u8986\u76d6\uff0c\u4e14$l_i-1,r_i+1$\u88ab\u591a\u6761\u7ebf\u6bb5\u8986\u76d6\uff0c\u5219\u7b54\u6848\u8fd8\u8981\u518d$-1$\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u4e24\u4fa7\u662f\u4e24\u4e2a\u4e0d\u914d\u5bf9\u7684\u597d\u533a\u95f4\uff0c\u5373\u5de6\u90e8\u5206\u5728\u53f3\uff0c\u53f3\u90e8\u5206\u5728\u5de6\uff0c\u53bb\u9664\u540e\uff0c\u4e24\u4fa7\u7ebf\u6bb5\u662f\u65e0\u6cd5\u65ad\u5f00\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u7ebf\u6bb5\u7ec4\u7684\u3002\n\n\u8be2\u95ee\u7684\u7b54\u6848\u52a0\u4e0a\u521d\u59cb\u7b54\u6848\uff08\u6709n\u4e2a\u7ebf\u6bb5\u65f6\u7684\u7ebf\u6bb5\u7ec4\u6570\uff09\u540e\u5373\u4e3a\u6700\u7ec8\u7b54\u6848\u3002\u53d6max\u5373\u53ef\u3002\n\n\uff08\u53ea\u6709\u4e00\u4e2a\u53ef\u4ee5\u5077\u61d2\u4e0d\u51cf\uff0c\u56e0\u4e3a\u9664\u4ee52\u7684\u65f6\u5019\u4f1a\u5411\u4e0b\u53d6\u6574\uff09\n\n\uff08\u9898\u89e3\u91cc\u6211\u7528\u7684\u6811\u72b6\u6570\u7ec4\u4ee3\u66ff\u7684\u524d\u7f00\u548c\uff0c\u53cd\u6b63\u8fd9\u4fe9\u5dee\u4e0d\u591a\u662f\u5427\u3002\u3002\u3002\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n/*************************************************************************\n\t> File Name: CF1285E.cpp\n\t> Author: The-Out-Land\n\t> Mail: 2264454706@qq.com \n\t> Created Time: 2020\u5e7401\u670811\u65e5 \u661f\u671f\u516d 11\u65f638\u520615\u79d2\n ************************************************************************/\n\n#include <bits/stdc++.h>\n\n#define enter putchar('\\n')\n#define space putchar(' ')\n#define re register\n#define N 800010\n\nusing namespace std;\n\nconst int inf=800000;\n\n//\u8bb0\u5f97\u5f002*2\u500d\u7a7a\u95f4\n\nint n;\n\nint sum[N];\n\nint l[N],r[N],a[N];\n\nint ans,fans;\n\nstruct bittree{//\u6811\u72b6\u6570\u7ec4\n\tint T[N];\n\tinline void add(int x,int y){\n\t\tfor(re int i=x;i<=inf;i+=(i&-i))\n\t\tT[i]+=y;\n\t\treturn;\n\t}\n\t\n\tinline int query(int x){\n\t\tint ans=0;\n\t\tfor(re int i=x;i;i-=(i&-i))\n\t\tans+=T[i];\n\t\treturn ans;\n\t}\n\tinline int ret(int x,int y){\n\t\treturn query(y)-query(x-1);\n\t}\n}Q,P;\n\ninline int getans(int x,int y){\n\treturn (Q.ret(x,y))>>1;\n}\n\ninline int read(){\n\tint x=0;char c=getchar();bool y=1;\n\tfor(;c<'0' || c>'9';c=getchar()) if(c=='-') y=0;\n\tfor(;c>='0' && c<='9';c=getchar()) x=(x<<1)+(x<<3)+c-48;\n\tif(y) return x;\n\treturn -x;\n}\n\ninline void Input(){\n\tans=0;\n\tn=read();\n\ta[0]=0;\n\tfor(re int i=1;i<=n;++i) l[i]=read(),a[++a[0]]=l[i],r[i]=read(),a[++a[0]]=r[i];\n\tsort(a+1,a+a[0]+1);\n\ta[0]=unique(a+1,a+a[0]+1)-a-1;\n\tfor(re int i=1;i<=n;++i) l[i]=(lower_bound(a+1,a+a[0]+1,l[i])-a)*2,r[i]=(lower_bound(a+1,a+a[0]+1,r[i])-a)*2/*,cout<<l[i]<<\" \"<<r[i]<<endl*/;\n\t//\u79bb\u6563\u5316\n\tfor(re int i=1;i<=(a[0]<<1)+10;++i) sum[i]=0;//\u591a\u7ec4\u8be2\u95ee\u4e00\u5b9a\u8981\u8bb0\u5f97\u6e05\u7a7a\uff01\n\n\tfor(re int i=1;i<=n;++i) ++sum[l[i]],--sum[r[i]+1];\n\t\n\tfor(re int i=1;i<=(a[0]<<1)+10;++i){\n\t\tsum[i]+=sum[i-1];\n\t\tif(sum[i] && !sum[i-1]) ++ans;//\u8ba1\u7b97\u521d\u59cb\u7b54\u6848\n\t}\n\n\t//enter;\n\n\treturn;\n}\n\ninline void solve(){\n\tfans=-1;\n\tfor(re int i=1;i<=(a[0]<<1)+10;++i)\n\t{\n\t\tif((sum[i]==1 && sum[i-1]==0) || (sum[i]==0 && sum[i-1]==1))\n\t\tQ.add(i,-1);//(i-1,i)--\n\t\t\n\t\telse if((sum[i]==1 && sum[i-1]>1) || (sum[i]>1 && sum[i-1]==1))\n\t\tQ.add(i,1)/*,printf(\"plus:%d\\n\",i)*/;//(i,i+1)++\n\n\t\tif(sum[i]==1)\n\t\tP.add(i,1);\n\t}\n\n\t//cout<<ans<<endl;\n\n\tfor(re int i=1;i<=n;++i)\n\t{\n\t\tif(!P.ret(l[i],r[i])) {fans=max(fans,0);continue;}\n\t\tint now=getans(l[i],r[i]+1);\n\t\t//printf(\"%d %d %d %d %d %d\\n\",l[i],r[i],sum[l[i]],sum[l[i]-1],sum[r[i]],sum[r[i]+1]);\n\t\tif(sum[l[i]]>1 && sum[l[i]-1]==1 && sum[r[i]]>1 && sum[r[i]+1]==1)\n\t\t--now/*,cout<<\"!!!!\"<<endl*/;\n\t\tfans=max(now,fans);\n\t}\n\n\tprintf(\"%d\\n\",ans+fans);\n\n\t//enter;\n\n\tfor(re int i=1;i<=(a[0]<<1)+10;++i)\n\t{\n\t\tif((sum[i]==1 && sum[i-1]==0) || (sum[i]==0 && sum[i-1]==1))\n\t\tQ.add(i,1);\n\t\t\n\t\telse if((sum[i]==1 && sum[i-1]>1) || (sum[i]>1 && sum[i-1]==1))\n\t\tQ.add(i,-1);\n\n\t\tif(sum[i]==1)\n\t\tP.add(i,-1);\n\t}//\u590d\u6742\u5ea6\u6b63\u786e\u7684\u6811\u72b6\u6570\u7ec4\u8fd8\u539f,\u76f4\u63a5memset\u662f\u9519\u8bef\u7684\n\treturn;\n}\n\nint TT;\n\nint main(){\n\t//freopen(\"appl.in\",\"r\",stdin);\n\t//freopen(\"appl.out\",\"w\",stdout);\n\tTT=read();\n\twhile(TT--)\n\t{\n\t\tInput();\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1578740808,
        "uid": 55357,
        "name": "Thaumaturge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1285E \u3010Delete a Segment\u3011"
    }
]