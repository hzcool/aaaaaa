[
    {
        "content": "## \u9898\u89e3 CF1147D Palindrome XOR\n\n\u9996\u5148\uff0c\u56e0\u4e3a\u4fdd\u8bc1\u4e86$s_1=1$\uff0c\u53c8\u8981\u6c42$a<b$\uff0c\u6240\u4ee5\u663e\u7136\u53ef\u4ee5\u786e\u5b9a$a_1=0,b_1=1$\u3002\n\n\u73b0\u5728$b$\u7684\u6700\u9ad8\u4f4d\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u800c$a$\u7684\u6700\u9ad8\u4f4d\u8fd8\u4e0d\u77e5\u9053\u3002\u6ce8\u610f\u5230\u6570\u636e\u8303\u56f4\u53ea\u6709$1000$\uff0c\u4e8e\u662f\u60f3\u5230\u679a\u4e3e$a$\u7684\u6700\u9ad8\u4f4d\u3002\n\n\u8003\u8651\u679a\u4e3e\u4e86$a$\u7684\u6700\u9ad8\u4f4d\u4e3a$i$ ($2\\leq i\\leq n$)\u3002\u5219$a_{1\\dots i-1}$\u90fd\u5fc5\u987b\u7b49\u4e8e$0$\uff0c$a_i$\u5fc5\u987b\u7b49\u4e8e$1$\u3002\n\n\u7136\u540e\u5176\u4ed6\u4f4d\u600e\u4e48\u786e\u5b9a\u5462\uff1f\u5982\u679c\u4f60\u8bd5\u56fe\u89c2\u5bdf\u8fd9\u4e2a\u4e32\u7684\u6027\u8d28\uff0c\u627e\u5faa\u73af\u8282\u4e4b\u7c7b\u7684\uff0c\u4f1a\u5f88\u9ebb\u70e6\u3002\u672c\u9898\u7684\u96be\u70b9\u5c31\u5728\u8fd9\u4e00\u6b65\uff1a\u8981\u60f3\u5230\u7528**\u56fe\u8bba\u7684\u6a21\u578b**\u53bb\u89e3\u51b3\u3002\n\n\u95ee\u9898\u76f8\u5f53\u4e8e\uff1a\u6709$2n$\u4e2a\u70b9\uff0c\u70b9\u6743\u4e3a$\\{0,1\\}$\u3002\u4e00\u4e9b\u70b9\u7684\u70b9\u6743\u5df2\u7ecf\u786e\u5b9a\uff0c\u5176\u4ed6\u70b9\u8fd8\u672a\u786e\u5b9a\u3002\u6709\u4e00\u4e9b\u9650\u5236\u6761\u4ef6\u5f62\u5982\uff1a\u70b9$u$\u548c\u70b9$v$\u7684\u6743\u503c\u5fc5\u987b\u76f8\u7b49\uff0c\u6216\u70b9$u$\u548c\u70b9$v$\u7684\u6743\u503c\u5fc5\u987b\u4e0d\u7b49\u3002\u95ee\u6709\u591a\u5c11\u79cd\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u6743\u65b9\u6848\u3002\n\n\u8003\u8651\u5efa\u4e00\u5f20$2n+2$\u4e2a\u70b9\u7684\u56fe\u3002\u5176\u4e2d\u4e24\u4e2a\u70b9$0,1$\uff0c\u5b83\u4eec\u7684\u6743\u503c\u5c31\u5206\u522b\u4e3a$0,1$\uff0c\u5df2\u7ecf\u786e\u5b9a\u3002\u7136\u540e\u5728\u5176\u5b83\u70b9\u4e4b\u95f4\u8fde\u8fb9\u3002\u6709\u4e24\u79cd\u8fb9\uff1a\u8fb9\u6743\u4e3a$0$\u8868\u793a\u8fd9\u4e24\u4e2a\u70b9\u6743\u503c\u5fc5\u987b**\u76f8\u7b49**\uff1b\u8fb9\u6743\u4e3a$1$\u8868\u793a\u8fd9\u4e24\u4e2a\u70b9\u6743\u503c\u5fc5\u987b**\u4e0d\u7b49**\u3002\u5177\u4f53\u6765\u8bf4\uff1a\n\n- \u5148\u5728$0,1$\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff08\u8868\u793a\u5b83\u4eec\u6743\u503c\u4e0d\u7b49\uff09\u3002\n- \u5bf9\u4e8e\u70b9$u$\uff0c\u5982\u679c\u6743\u503c\u5df2\u7ecf\u786e\u5b9a\u4e3a$0$\u6216$1$\uff0c\u5219\u5411$0$\u6216$1$\u8fde\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\u3002\n- \u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e$j$ ($1\\leq j\\leq n$)\uff0c\u5982\u679c$s_j=0$\uff0c\u5219$a_j,b_j$\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\uff1b\u5982\u679c$s_j=1$\uff0c\u5219$a_j,b_j$\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff1b\u5982\u679c$s_j=\\text{?}$\uff0c\u5219\u4e0d\u8fde\u8fb9\uff08\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09\u3002\n- \u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e$k$ ($1\\leq k\\leq n$)\uff0c\u5728$b_k$\u548c$b_{n-k+1}$\u4e4b\u95f4\u8fde\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\uff08\u8fd9\u6837\u80fd\u4fdd\u8bc1\u56de\u6587\uff09\u3002\u5bf9$a$\u540c\u7406\u3002\n\n\u5efa\u597d\u56fe\u540e\uff0c\u6211\u4eec\u5148\u628a\u7531\u6743\u503c\u4e3a$0$\u7684\u8fb9\u76f8\u8fde\u7684\u70b9\u7f29\u8d77\u6765\uff08\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\uff09\u3002\u7136\u540e\u56fe\u4e0a\u5c31\u53ea\u5269\u6743\u503c\u4e3a$1$\u7684\u8fb9\u4e86\uff1a\u6bcf\u6761\u8fb9\u4e24\u7aef\u90fd\u5fc5\u987b\u4e0d\u7b49\u3002\u90a3\u4e48\uff0c\u663e\u7136\uff0c\u56fe\u4e0a\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u90fd\u5fc5\u987b\u662f\u4e8c\u5206\u56fe\uff0c\u5426\u5219\u65b9\u6848\u6570\u4e3a$0$\u3002\u5224\u65ad\u4e8c\u5206\u56fe\u53ef\u4ee5\u7528$\\text{dfs}$\u67d3\u8272\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n\u73b0\u5728\u5df2\u7ecf\u5224\u65ad\u4e86\u6bcf\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u4e8c\u5206\u56fe\u3002\u8bbe\u6709$c$\u4e2a\u8fde\u901a\u5757\uff0c\u5219\u5408\u6cd5\u7684\u67d3\u8272\u65b9\u6848\u6570\u5c31\u662f$2^{c-1}$\u3002\u56e0\u4e3a\u6bcf\u4e2a\u8fde\u901a\u5757\u91cc\uff0c\u53ea\u8981\u786e\u5b9a\u4e86\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u5176\u4ed6\u70b9\u7684\u6743\u503c\u5c31\u90fd\u786e\u5b9a\u4e86\u3002\u800c\u51cf$1$\u662f\u56e0\u4e3a\u5305\u542b\u70b9$0,1$\u7684\u8fd9\u4e2a\u8fde\u901a\u5757\uff0c$0$\u8fd9\u4e2a\u70b9\u6743\u503c\u5929\u7136\u5c31\u662f$0$\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fde\u901a\u5757\u91cc\u6240\u6709\u503c\uff0c\u4e00\u5f00\u59cb\u5c31\u90fd\u5df2\u7ecf\u786e\u5b9a\u4e86\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u672c\u89e3\u6cd5\u6700\u5999\u7684\u5730\u65b9\uff0c\u8fd8\u662f\u5728\u4e8e\u7528**\u56fe\u8bba**\u7684\u6a21\u578b\uff0c\u6765\u523b\u753b\u8fd9\u4e9b\u9650\u5236\u3002\u8fd9\u6709\u70b9\u50cf$\\text{2-SAT}$\uff0c\u4f46\u672c\u9898\u5e76\u4e0d\u662f$\\text{2-SAT}$\u3002\u56e0\u4e3a\u672c\u9898\u91cc\uff0c\u6211\u4eec\u8fde\u7684\u90fd\u662f**\u65e0\u5411\u8fb9**\u3002\u8fd9\u4e5f\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65b9\u6848\u6570\u3002\u800c\u7ecf\u5178\u7684$\\text{2-SAT}$\u662f\u4e0d\u80fd\u6c42\u65b9\u6848\u6570\u7684\uff08\u53ea\u80fd\u5224\u65ad\u53ef\u884c\u6027\u3001\u6784\u9020\u4e00\u7ec4\u65b9\u6848\uff09\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//problem:\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n\ntemplate<typename T>inline void ckmax(T& x,T y){x=(y>x?y:x);}\ntemplate<typename T>inline void ckmin(T& x,T y){x=(y<x?y:x);}\n\nconst int MOD=998244353;\nconst int MAXN=1000;\ninline int mod1(int x){return x<MOD?x:x-MOD;}\ninline int mod2(int x){return x<0?x+MOD:x;}\ninline void add(int& x,int y){x=mod1(x+y);}\ninline void sub(int& x,int y){x=mod2(x-y);}\ninline int pow_mod(int x,int i){int y=1;while(i){if(i&1)y=(ll)y*x%MOD;x=(ll)x*x%MOD;i>>=1;}return y;}\n\nint pw[MAXN*2+5];\n\nint n;\nchar s[MAXN+5];\n\nint id_a[MAXN+5],id_b[MAXN+5],id[2],cnt_id;\nint fa[MAXN*2+5],sz[MAXN*2+5];\nint get_fa(int x) { return (fa[x]==x) ? x : (fa[x]=get_fa(fa[x])); }\nvoid unite(int u,int v){\n\tu=get_fa(u);v=get_fa(v);\n\tif(u!=v){\n\t\tif(sz[u]>sz[v]) swap(u,v);\n\t\tfa[u]=v;\n\t\tsz[v]+=sz[u];\n\t}\n}\n\nstruct EDGE{int nxt,to;}edge[MAXN*2+100];\nint head[MAXN*2+5],tot;\ninline void add_edge(int u,int v) { edge[++tot].nxt=head[u];edge[tot].to=v;head[u]=tot; }\n\nint col[MAXN*2+5];\nbool fail;\nvoid dfs(int u){\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(col[v]){\n\t\t\tif(col[v]==col[u]){\n\t\t\t\tfail=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tcol[v]=3-col[u];\n\t\tdfs(v);\n\t\tif(fail) return;\n\t}\n}\n\nint main() {\n\tcin>>(s+1); n=strlen(s+1);\n\tcnt_id=0;\n\tid[0]=++cnt_id;\n\tid[1]=++cnt_id;\n\tfor(int i=1;i<=n;++i){\n\t\tid_a[i]=++cnt_id;\n\t\tid_b[i]=++cnt_id;\n\t}\n\tpw[0]=1;\n\tfor(int i=1;i<=cnt_id;++i)\n\t\tpw[i]=mod1(pw[i-1]<<1);\n\tint ans=0;\n\tfor(int st=2;st<=n;++st){\n\t\tfor(int i=1;i<=cnt_id;++i){\n\t\t\tfa[i]=i;\n\t\t\tsz[i]=1;\n\t\t\thead[i]=0;\n\t\t\tcol[i]=0;\n\t\t}\n\t\ttot=0;\n\t\tunite(id_a[st],id[1]);\n\t\tunite(id_b[1],id[1]);\n\t\tfor(int i=1;i<st;++i){\n\t\t\tunite(id_a[i],id[0]);\n\t\t}\n\t\tfor(int i=st;i<=n;++i){\n\t\t\tint l=i-st+1;\n\t\t\tunite(id_a[i],id_a[n-l+1]);\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tunite(id_b[i],id_b[n-i+1]);\n\t\t\tif(s[i]=='0'){\n\t\t\t\tunite(id_a[i],id_b[i]);\n\t\t\t}\n\t\t}\n\t\tadd_edge(get_fa(id[0]),get_fa(id[1]));\n\t\tadd_edge(get_fa(id[1]),get_fa(id[0]));\n\t\tfor(int i=1;i<=n;++i){\n\t\t\t\n\t\t\tif(s[i]=='1'){\n\t\t\t\tadd_edge(get_fa(id_a[i]),get_fa(id_b[i]));\n\t\t\t\tadd_edge(get_fa(id_b[i]),get_fa(id_a[i]));\n\t\t\t}\n\t\t}\n\t\tfail=false;\n\t\tint cnt_cc=0;//connected componet\n\t\tfor(int i=1;i<=cnt_id;++i){\n\t\t\tif(get_fa(i) == i && !col[i]){\n\t\t\t\tcol[i]=1;\n\t\t\t\tdfs(i);\n\t\t\t\tif(fail) break;\n\t\t\t\tcnt_cc++;\n\t\t\t}\n\t\t}\n\t\tif(fail) continue;\n\t\tadd(ans,pw[cnt_cc-1]);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1596973722,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1147D \u3010Palindrome XOR\u3011"
    },
    {
        "content": "\u770b\u89c1\u8fd9\u9053\u9898\u7684\u9898\u89e3\u90fd\u662f $dfs$ \u67d3\u8272\uff0c\u90a3\u6211\u6765\u4e00\u53d1\u5e26\u6743\u5e76\u67e5\u96c6\u3002\n\n\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\uff0c\u4e0b\u6587\u7684 $a,b$ \u90fd\u662f\u4e8c\u8fdb\u5236\u3002\n\n\u56e0\u4e3a\u6709 $1 \\leq a < b < 2^m$ \u7684\u9650\u5236\u5b58\u5728\uff0c\u540c\u65f6 $a \\ XOR \\ b = s,s_1=0$\uff0c\u4e0d\u96be\u53d1\u73b0 $a$\uff0c$b$ \u7684\u4f4d\u6570\u4e00\u5b9a\u4e0d\u540c\uff0c\u800c\u4e14 $b$ \u7684\u4f4d\u6570\u4e3a $m$\uff0c\u6700\u9ad8\u4f4d\u4e3a $1$\uff0c\u5426\u5219\u65e0\u6cd5\u6ee1\u8db3 $a \\ XOR \\ b = s$\u3002\n\n\u4f46\u662f $a$ \u7684\u4f4d\u6570\u662f\u672a\u77e5\u7684\uff0c\u7531\u4e8e $1 \\leq m \\leq 1000$\uff0c\u8003\u8651\u679a\u4e3e $a$ \u7684\u4f4d\u6570\u3002\u8bbe $a$ \u7684\u4f4d\u6570\u4e3a $n$\u3002\n\n\u9898\u76ee\u8981\u6c42 $a,b$ \u56de\u6587\uff0c\u4e5f\u5c31\u662f $\\forall \\ m-n+1 \\leq i \\leq m,1 \\leq j \\leq m$\uff0c\u6709 $a_i=a_{n-i+1},b_j=b_{m-j+1}$\u3002\u800c $a \\ XOR \\ b = s$\uff0c\u5c31\u662f $\\forall 1 \\leq i \\leq m$\uff0c\u6709 $a_i=b_i (s_i=0),a_i \\neq b_i (s_i = 1)$\uff0c\u7279\u522b\u5730\uff0c\u5982\u679c $s_i= \\ ?$\uff0c\u90a3\u4e48 $a_i,b_i$ \u4e4b\u95f4\u6ca1\u6709\u9650\u5236\uff0c\u5bf9\u4e8e $\\forall i \\leq m-n$\uff0c\u6709 $a_i=0$\u3002\u6b64\u5916\uff0c\u663e\u7136\u6709 $a_{m-n+1}=b_1=1$\u3002\n\n\u7b80\u5355\u5730\u8bf4\uff0c\u56de\u6587\u7684\u9650\u5236\u548c\u5f02\u6216 $=s$ \u7684\u9650\u5236\u544a\u8bc9\u4e86\u6211\u4eec $a,b$ \u4e2d\u54ea\u4e9b\u4f4d\u662f\u76f8\u7b49\u6216\u8005\u4e0d\u7b49\u7684\u3002\u56e0\u6b64\u6211\u4eec\u628a\u8fd9\u4e9b\u76f8\u5173\u7684\u4f4d\u5206\u5230\u4e00\u7ec4\u91cc\u9762\uff0c\u53ef\u4ee5\u5f97\u5230\u82e5\u5e72\u7ec4\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u4e2d\u7684\u4e00\u4e9b\u4f4d\uff0c\u4efb\u610f\u4e00\u4f4d\u786e\u5b9a\u4e86\u503c\u662f $0,1$\uff0c\u90a3\u4e48\u6574\u7ec4\u7684\u503c\u90fd\u552f\u4e00\u786e\u5b9a\u3002\u4f46\u662f\u6ce8\u610f\u7531\u4e8e $a_{m-n+1}=b_1=1$\uff0c\u4e00\u5b9a\u6709\u4e00\u7ec4\u53ea\u6709\u4e00\u79cd\u53d6\u503c\uff0c\u5176\u4ed6\u7ec4\u7684\u503c\u90fd\u6709\u4e24\u79cd\uff0c\u90a3\u4e48 $a$ \u7684\u4f4d\u6570\u4e3a $n$ \u7684\u7b54\u6848\u5c31\u662f $2^{cnt-1}$\uff0c\u5176\u4e2d $cnt$ \u8868\u793a\u7ec4\u6570\u3002\u7279\u522b\u5730\uff0c\u5982\u679c\u67d0\u7ec4\u4e2d\u5b58\u5728\u76f8\u4e92\u77db\u76fe\u7684\u5173\u7cfb\uff0c\u90a3\u4e48 $a$ \u7684\u4f4d\u6570\u4e3a $n$ \u7684\u7b54\u6848\u4e3a $0$\u3002\n\n\u5206\u7ec4\u663e\u7136\u53ef\u4ee5\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u3002\u6211\u4eec\u628a $b$ \u7684\u6bcf\u4e00\u4f4d\u6807\u8bb0\u4e3a $1,2,\\cdots ,m$\uff0c\u628a $a$ \u7684\u6bcf\u4e00\u4f4d\u6807\u8bb0\u4e3a $m+1,m+2 \\cdots ,m+m$\uff0c\u5982\u679c\u786e\u5b9a\u67d0\u4e24\u4f4d\u76f8\u540c\u6216\u8005\u4e0d\u540c\uff0c\u5c31\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u5408\u5e76\u8d77\u6765\uff0c\u540c\u65f6\u6807\u8bb0\u8fd9\u4e24\u4f4d\u76f8\u540c\u6216\u4e0d\u540c\u3002\u5408\u5e76\u7684\u65f6\u5019\u987a\u4fbf\u5224\u65ad\u662f\u5426\u77db\u76fe\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(m^2)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff1a\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int mod=998244353;\nconst int Maxn=2005;\nint n;\nchar str[1005];\nint fath[Maxn],dis[Maxn];\n\ninline int& md(int &a) {return a<mod?a:(a-=mod);}\n\nint power(int a,int n,int p)\n{\n\t//UOIAKer\u7684\u5feb\u901f\u5e42\n\tint ans=1;a%=p;\n\tfor (;n;n>>=1,a=1ll*a*a%p) if (n&1) ans=1ll*ans*a%p;\n\treturn ans;\n}\n\nint Find(int x)\n{\n\tif (fath[x]==x) return x;\n\tint rt=Find(fath[x]);\n\tdis[x]^=dis[fath[x]];\n\treturn fath[x]=rt;\n}\n\nbool Merge(int a,int b,int c)\n{\n\tint x=Find(a),y=Find(b);\n\tif (x==y) return dis[a]^dis[b]^c^1;\n\tfath[x]=y;\n\tdis[x]=dis[a]^dis[b]^c;\n\treturn true;\n}\n\nint solve(int la)\n{\n\tfor (int i=1;i<=n+n;++i) {\n\t\tfath[i]=i;dis[i]=0;\n\t}\n\tfor (int i=1;i<=n/2;++i) Merge(i,n-i+1,0);\n\tfor (int i=1;i<=la/2;++i) Merge(n+i,n+la-i+1,0);\n\tfor (int i=la+1;i<n;++i) Merge(n+i,n+n,0);\n\tMerge(1,n+1,0);\n\tfor (int i=1;i<=n;++i) {\n\t\tif (str[n-i+1]=='?') continue;\n\t\tif (!Merge(n+i,i,str[n-i+1]-48)) return 0;\n\t}\n\tint cnt=0;\n\tfor (int i=1;i<=n+n;++i) cnt+=fath[i]==i;\n\treturn power(2,cnt-1,mod);\n}\n\nint main()\n{\n\tscanf(\"%s\",str+1);\n\tn=strlen(str+1);int ans=0;\n\tfor (int i=1;i<n;++i) md(ans+=solve(i));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1597850449,
        "uid": 269442,
        "name": "Hydroxythio",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1147D \u3010Palindrome XOR\u3011"
    },
    {
        "content": "\u56e0\u4e3a s \u9996\u4f4d\u4e3a 1\uff0c\u6240\u4ee5 a<2^(m-1) 2^(m-1)<=b<2^m\uff0c\u786e\u5b9a\u4e86 b \u7684\u4f4d\u6570\n\n\u5efa\u56fe\uff0c\u8fb9\u5206 0/1 \u4e24\u79cd\uff0c0\u4ee3\u8868\u4e24\u7aef\u6570\u7684\u5bf9\u5e94\u4e8c\u8fdb\u5236\u4f4d\u76f8\u7b49\uff0c1\u4ee3\u8868\u4e0d\u7b49\n\n\u5c06 a[i] a[n-1-i] \u8fde 0\u8fb9\uff08\u56de\u6587\uff09 b \u540c\u7406\n\u5efa\u4e24\u4e2a\u865a\u70b9 0 1 \uff082*n \u30012*n+1\uff09\u865a\u70b9\u89c1\u8fde 1 \u8fb9\n\n\u5982\u679c s[i] \u5bf9\u5e94\u7684\u4f4d\u4e3a 1\uff0c\u5219 a b \u95f4\u8fde 1 \u8fb9\uff0c\u5426\u5219\u82e5\u4e3a 0\uff0c\u8fde 0 \u8fb9\uff0c'?' \u4e0d\u64cd\u4f5c\nb \u6bd4 a \u591a\u7684\u90a3\u4e9b\u4f4d a \u4e0e 0 \u70b9\u8fde 0 \u8fb9 \uff08\u56e0\u4e3a\u8fd9\u4e00\u4f4d\u5fc5\u987b\u6ca1\u6709\uff09\n\n\u6ce8\u610f a b \u4e0d\u80fd\u6709\u524d\u5bfc 0\uff0c\u76f4\u63a5 \u4e0e 2*n \u8fde 1 \u8fb9\u5373\u53ef \n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n// by Balloons\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <string>\n#define mpr make_pair\n#define debug() puts(\"okkkkkkkk\")\n#define rep(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int inf = 1 << 30;\nconst int mod=998244353;\nconst int maxn=2005;\n\nstring s;\nLL ans=0;\nint n;\nvector<pair<int,int> >edges[maxn];\nint col[maxn],vis[maxn];\nint isbi=1;\n\nvoid flood(int x,int curcol){\n\tif(vis[x]){\n\t\tif(col[x]!=curcol){\n\t\t\tisbi=0;\n\t\t}\n\t\treturn ;\n\t}\n\tvis[x]=1;\n\tcol[x]=curcol;\n\tfor(int i=0;i<edges[x].size();i++){\n\t\tint u=edges[x][i].first,v=edges[x][i].second;\n\t\tflood(u,curcol ^ v);\n\t}\n}\n\nint pw(int x,int y){\n\tif(!y)return 1;\n\tif(y==1)return x;\n\tint mid=pw(x,y>>1);\n\tif(y&1)return 1ll*mid*mid%mod*x%mod;\n\treturn 1ll*mid*mid%mod; \n}\n\nint sear(){\n\tisbi=1;\n\tint con=0;\n\tfor(int i=0;i<=2*n+1;i++){\n\t\tif(!vis[i]){\n\t\t\tflood(i,0);\n\t\t\t++ con;\n\t\t}\n\t}\n\tif(!isbi)return 0;\n\treturn pw(2,con-1);\n}\n\nint solve(int m){\n\tmemset(vis,0,sizeof vis);\n\tmemset(col,-1,sizeof col);\n\tfor(int i=0;i<=maxn-1;i++)edges[i].clear();\n\tfor(int i=0;i<n;i++){\t// b\n\t\tedges[i].push_back(mpr(n-1-i,0));\n\t}\n\tfor(int i=0;i<m;i++){\t// a\n\t\tedges[i+n].push_back(mpr(n+(m-1-i),0));\n\t}\n\tfor(int i=m;i<n;i++){\n\t\tedges[i+n].push_back(mpr(2*n,0));\t// 2*n --> 0\n\t\tedges[2*n].push_back(mpr(i+n,0));\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tif(s[n-1-i]=='0'){\n\t\t\tedges[i].push_back(mpr(i+n,0));\n\t\t\tedges[i+n].push_back(mpr(i,0));\n\t\t}else if(s[n-1-i]=='1'){\n\t\t\tedges[i].push_back(mpr(i+n,1));\n\t\t\tedges[i+n].push_back(mpr(i,1));\n\t\t}\n\t}\n\tedges[2*n].push_back(mpr(2*n+1,1));\n\tedges[2*n+1].push_back(mpr(2*n,1));\n\t\n\tedges[n].push_back(mpr(2*n,1));\n\tedges[2*n].push_back(mpr(n,1));\n\tedges[0].push_back(mpr(2*n,1));\n\tedges[2*n].push_back(mpr(0,1));\n//\tcout<<\"ed   \"<<edges[2*n+1].size()<<endl;\n\t\n\treturn sear();\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>s;\n\tn=s.size();\n\tfor(int i=1;i<n;i++){\n\t\tans = (ans+solve(i))%mod;\n//\t\tprintf(\"%d\\n\",ans);\n\t}\n\tcout<<ans<<endl;\n\n\treturn 0;\n}\n\n```\n",
        "postTime": 1560848095,
        "uid": 84042,
        "name": "SkyRainWind",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1147D \u3010Palindrome XOR\u3011"
    },
    {
        "content": "# Palindrome XOR\n\n\u4e00\u4e2a\u975e\u5e38\u597d\u73a9\u7684\u9898\u76ee\u3002\n\n\u770b\u5230\u9898\u89e3\u91cc\u90fd\u662f\u9ad8\u6df1\u7684 dfs \u505a\u6cd5\uff0c\u611f\u89c9\u597d\u96be\u3002\u9700\u8981\u8fdb\u884c\u5efa\u56fe dfs\uff0c\u597d\u50cf\u8fd8\u9700\u8981\u7f29\u70b9\uff1f\u611f\u89c9\u6709\u70b9\u590d\u6742\u3002\n\n\u8fd9\u91cc\u5199\u4e00\u4e2a\u6bd4\u8f83\u65e0\u8111\u7684\u505a\u6cd5\uff0c\u6709\u53ef\u80fd\u672c\u8d28\u4e0a\u662f\u548c\u53e6\u5916\u51e0\u4f4d\u4f6c\u7684\u505a\u6cd5\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u4e2a\u4eba\u611f\u89c9\u7b80\u5355\u597d\u60f3\u3002\n\n\u524d\u9762\u7684\u6b65\u9aa4\u4e0e\u53e6\u5916\u51e0\u4f4d\u5927\u4f53\u4e00\u81f4\uff0c\u679a\u4e3e $a$ \u7684\u6700\u9ad8\u4f4d\u662f\u54ea\u4e00\u4f4d\u3002\u7136\u540e\u5927\u6982\u641e\u4e00\u4e2a\u56fe\u72b6\u7269\u3002\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u5fc5\u8981\u628a\u4ed6\u5efa\u51fa\u6765\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u4e32\u7684\u6027\u8d28\uff0c\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u6027\u8d28\u662f\u4ed6\u4eec\u662f\u56de\u6587\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53d1\u73b0\uff1a\u901a\u8fc7\u4e24\u4e2a\u56de\u6587\u4e2d\u5fc3\u76f8\u4e92\u636f\u996c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4ed6\u4e00\u6b65\u53ef\u4ee5\u5230\u8fbe\u81f3\u591a\u4e24\u4e2a\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\u611f\u89c9\u4e0a\u8fd9\u4e2a\u4e1c\u897f\u4f1a\u53d8\u6210\u4e00\u4e2a\u94fe\u72b6\u7269\u6216\u73af\u72b6\u7269\u3002\n\n\u7a0d\u5fae\u624b\u73a9\u4e00\u4e0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u53ea\u6709\u94fe\uff0c\u6211\u4eec\u7528\u8fd9\u4e9b\u201c\u8fb9\u201d\u4e00\u5b9a\u53ef\u4ee5\u5c06\u539f\u6765\u7684\u4e24\u4e2a\u4e32\u5212\u5206\u4e3a\u4ee5\u4e0b\u5f62\u5f0f\uff1a\u7531\u82e5\u5e72\u6761\u4e92\u4e0d\u76f8\u4ea4\u7684\u94fe\u7ec4\u6210\uff0c\u4e14\u6bcf\u4e00\u6761\u94fe\u90fd\u6709\u81f3\u5c11\u4e00\u4e2a\u7aef\u70b9\u5728\u88f8\u9732\u90e8\u5206\u3002\u8fd9\u91cc\u88f8\u9732\u90e8\u5206\u7684\u5b9a\u4e49\u662f\u90a3\u4e9b $b$ \u6709 $a$ \u6ca1\u6709\u7684\u4f4d\u3002\n\n\u6211\u4eec\u5bf9\u94fe\u7a0d\u52a0\u6574\u7406\uff0c\u5927\u81f4\u5f97\u5230\u4e86\u8fd9\u6837\u4e00\u79cd\u4e1c\u897f\uff1a![](https://cdn.luogu.com.cn/upload/image_hosting/lvvp0ldb.png)\n\n\u5176\u4e2d\u6bcf\u4e00\u4e2a\u62d0\u70b9\u90fd\u662f\u4e00\u4e2a\u539f\u5e8f\u5217\u7684\u4f4d\u3002\n\n\u6709\u4e86\u8fd9\u79cd\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u65e0\u8111\u7684\u4e0a\u4e00\u4e2a $dp$\u3002\n\n\u8fd9\u5f20\u56fe\u6c42\u89e3\u65b9\u6848\u6570\u7b49\u4ef7\u4e8e\uff1a\u5c06\u6bcf\u4e00\u4e2a\u6a2a\u7ebf\u8bbe\u5b9a\u4e00\u4e2a\u6743\u503c\uff0c\u7ad6\u7ebf\u7684\u6743\u503c\u4e3a\u4e0e\u5176\u76f8\u63a5\u7684\u6a2a\u7ebf\u6743\u503c\u5f02\u6216\u548c\uff0c\u4e14\u5e94\u7b49\u4e8e\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\u53c2\u6570\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49 $dp_{i,1/0}$ \u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u4e86\u7b2c $i$ \u6761\u6a2a\u7ebf\uff0c\u4e14\u8fd9\u6761\u6a2a\u7ebf\u7684\u6743\u503c\u4e3a $0/1$ \u7684\u65b9\u6848\u6570\u5373\u53ef\u3002\u8f6c\u79fb\u662f\u6734\u7d20\u7684\u3002 \u7136\u540e\u9700\u8981\u6ce8\u610f\u7684\u662f $a$ \u7684\u6700\u9ad8\u4f4d\u5e94\u8be5\u4e3a $1$\uff0c\u9700\u8981\u5728\u5bf9\u5e94\u4f4d\u7f6e\u6e05\u9664 $0$ \u7684\u65b9\u6848\u3002\u5728\u5b9e\u9645\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u628a\u6570\u7ec4\u5efa\u51fa\u6765\uff0c\u76f4\u63a5\u4ece\u4e0a\u4e00\u4e2a\u5411\u4e0b\u4e00\u4e2a\u63a8\u5373\u53ef\u3002\n\n\u6700\u540e\u6211\u4eec\u628a\u6240\u6709\u94fe\u7684\u65b9\u6848\u6570\u76f8\u4e58\u5f97\u5230\u5bf9\u4e8e\u56fa\u5b9a $a$ \u6700\u9ad8\u4f4d\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u76f8\u52a0\u5f97\u89e3\u3002\n\n\u611f\u89c9\u8fd9\u4e2a\u505a\u6cd5\u548c\u5176\u4ed6\u9898\u89e3\u5f88\u50cf\u4f46\u662f\u76f8\u5bf9\u65e0\u8111\u4e86\u4e00\u70b9\uff08\u53ea\u662f\u53ef\u80fd\u5b9e\u9645\u5199\u7684\u65f6\u5019\u6709\u70b9\u9ebb\u70e6\uff0c\u8fb9\u754c\u53ef\u80fd\u6709\u70b9\u591a\u3002\u4e0b\u65b9\u6302\u51fa\u4e3b\u9898\u4ee3\u7801\u4ee5\u4f9b\u53c2\u8003\u3002\n\n\n```cpp\ninline int OP(int x,int l,int r){\n    if(x<l||x>r)exit(0);\n    int d=x-l;\n    return r-d;\n}\nsigned main(){\n    ios::sync_with_stdio(0);\n    cin>>s;\n    n=s.size();\n    s=\" \"+s;\n    int ans=0;\n    for(int i=1;i<n;i++){\n        memset(vis,0,sizeof(vis));\n        int res=1;\n        for(int j=1;j<=n;j++)\n            if(!vis[j]){\n                int x=j;bool p=1;\n                vector<int>T;vis[j]=1;\n                while(1){int pt=x;\n                    if(p)x=OP(x,1,n);\n                    else x=OP(x,n-i+1,n);\n                    vis[x]=1;\n                    if(x==pt)break;T.push_back(x);\n                    if(x<n-i+1)break;p^=1;\n                }\n                int X=x,d1=0,d0=0;bool fl=0;\n                if(s[j]=='1'||s[j]=='?')d1++;\n                if(s[j]=='0'||s[j]=='?')d0++;\n                for(int x:T)if(x!=X||x>=n-i+1){\n                    if(fl==1&&x==n-i+1)d0=0;\n                    int t1=0,t0=0;\n                    if(s[x]=='1') t0=d1,t1=d0;\n                    else if(s[x]=='0') t0=d0,t1=d1;\n                    else t0=(d1+d0)%M,t1=(d1+d0)%M;\n                    fl^=1;\n                    if(fl==1&&x==n-i+1)t0=0;\n                    d1=t1,d0=t0;\n                }\n                if(X<n-i+1){\n                    if(s[X]=='1')res=(res*d1)%M;\n                    else if(s[X]=='0')res=(res*d0)%M;\n                    else res=(res*(d1+d0))%M;\n                }\n                else res=(res*(d1+d0))%M;\n            }\n        ans=(ans+res)%M;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1685094400,
        "uid": 455490,
        "name": "Jocker_CW",
        "ccfLevel": 8,
        "title": "Palindrome XOR"
    }
]