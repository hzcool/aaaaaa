[
    {
        "content": "\u9996\u5148\u89c2\u5bdf\u9898\u76ee\u7684\u6027\u8d28\u3002\n\n\u7531\u4e8e\u662f\u51f8\u5305\uff0c\u56e0\u6b64\u4e0d\u81ea\u4ea4\u8def\u5f84\u4e2d\u7684\u4e00\u6761\u8fb9$(x, y)$\u7684\u4e24\u7aef\u70b9\u53ea\u80fd\u5411\u4e0e$x$\u6216$y$\u76f8\u90bb\u7684\u7ed3\u70b9\u8fde\u8fb9\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff0c\u82e5\u9009\u53d6\u4e86\u4e00\u6761\u8fb9$(x, y)$\uff0c\u4e14\u5047\u8bbe\u7f16\u53f7\u4ece$x$\u5230$y$\u7ed3\u70b9\u5df2\u7ecf\u5728\u4e00\u6761\u4e0d\u81ea\u4ea4\u8def\u5f84\u4e2d\uff08\u4e0d\u8003\u8651\u7279\u6b8a\u60c5\u51b5\uff09\uff0c\u90a3\u4e48\u5411\u5916\u6269\u5c55\u8def\u5f84\u53ea\u80fd\u8fde\u5411\u76f8\u90bb\u7684\u70b9\uff0c\u5373\u53ea\u80fd\u8fde\u8fb9$(x+1, y)$\u6216$(x, x+1)$\u6216$(x, y-1)$\u6216$(y-1, y)$\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/l5nyw3ji.png)\n\n\u5f88\u5bb9\u6613\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\u3002\u5047\u8bbe\u8fde\u8fb9$(x-2, y)$\uff0c\u90a3\u4e48\u70b9$x-1$\u5219\u65e0\u6cd5\u901a\u8fc7\u4e00\u6761\u4e0d\u4e0e$(x, y)$\u6216$(x-2, y)$\u76f8\u4ea4\u7684\u8def\u5f84\u4e0e\u5176\u4ed6\u70b9\u8fde\u901a\u3002\u800c\u6b64\u9898\u8def\u5f84\u8981\u8986\u76d6\u6240\u6709\u70b9\uff0c\u5373\u6240\u6709\u70b9\u4e4b\u95f4\u8fde\u901a\uff0c\u5219\u77db\u76fe\u3002\u56e0\u6b64\u4e0a\u8ff0\u7ed3\u8bba\u6210\u7acb\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xwco2erm.png)\n\n\u7531\u4e8e\u9009\u53d6\u7684\u8def\u5f84\u6bcf\u6b21\u53ea\u80fd\u5411\u5916\u6269\u5c55\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u6b64\u9898\u5c31\u53d8\u6210\u4e86\u533a\u95f4\u52a8\u6001\u89c4\u5212\u95ee\u9898\u3002\n\n\u8bbe$f_{l, r, 0/1}$\u8868\u793a\u533a\u95f4$[l, r]$\u7684\u6700\u957f\u8def\u5f84\u957f\u5ea6\uff0c$0$\u8868\u793a\u8def\u5f84\u7ec8\u70b9\u5728$l$\uff0c $1$\u8868\u793a\u8def\u5f84\u7ec8\u70b9\u5728$r$\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\n\n$f_{l, r, 0}=max\\{f_{l+1, r, 0}+dis(l, l+1), f_{l+1, r, 1}+dis(l, r)\\}$\n\n$f_{l, r, 1}=max\\{f_{l, r-1, 0}+dis(r, l), f_{l, r-1, 1}+dis(r, r-1)\\}$\n\n\u4e14\u6613\u77e5$f_{x, x, 0}=f_{x, x, 1}=0$\n\n\u6b64\u9898\u5361\u7a7a\u95f4\uff0c\u4e0d\u80fd\u5f00\u4e24\u500d\u5927\u5c0f\uff0c\u5c06\u4e0b\u6807\u53d6\u6a21\u540e\u518ddp\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\nconst int N=2510;\nstruct Point {\n\tdouble x, y;\n\tPoint(int x=0, int y=0):x(x), y(y){}\n} p[N];\ndouble dis(Point a, Point b) {\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\ndouble f[N][N][2];\nint n;\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i=0; i<n; i++) {\n\t\tint x, y; scanf(\"%d%d\", &x, &y);\n\t\tp[i]=Point(x, y);\n\t}\n\tfor (int len=2; len<=n; len++)\n\t\tfor (int l=0; l<n; l++) {\n\t\t\tint r=(l+len-1)%n;\n\t\t\tf[l][r][0]=max(f[(l+1)%n][r][0]+dis(p[l], p[(l+1)%n]), f[(l+1)%n][r][1]+dis(p[l], p[r]));\n\t\t\tf[l][r][1]=max(f[l][(r-1+n)%n][0]+dis(p[r], p[l]), f[l][(r-1+n)%n][1]+dis(p[r], p[(r-1+n)%n]));\n\t\t}\n\tdouble ans=0;\n\tfor (int i=0; i<n; i++) ans=max(ans, max(f[i][(i+n-1)%n][0], f[i][(i+n-1)%n][1]));\n\tprintf(\"%.10lf\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1571221726,
        "uid": 14855,
        "name": "lihaozhe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF838E \u3010Convex Countour\u3011"
    }
]