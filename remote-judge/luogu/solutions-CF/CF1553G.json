[
    {
        "content": "> [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1553G)\u3002\n>\n> \u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u51fa\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u4e24\u4e2a\u70b9 $i,j$ \u4e4b\u95f4\u6709\u8fb9\u5f53\u4e14\u4ec5\u5f53 $(a_i,a_j)>1$\u3002$q$ \u6b21\u8be2\u95ee\u7ed9\u5b9a $s,t$\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u70b9 $i$ \u5e76\u65b0\u5efa\u8282\u70b9 $a_i\\times (a_i+1)$\uff0c\u6c42\u81f3\u5c11\u8981\u591a\u5c11\u6b21\u64cd\u4f5c\u624d\u80fd\u4f7f $s,t$ \u8054\u901a\u3002\n\n\u4e0d\u7b97\u96be\u7684\u4e00\u9053\u9898\uff0c\u4f46\u662f\u8d5b\u65f6\u6ca1\u5199\u51fa\u6765\uff0c\u4e0e 2500+ \u5931\u4e4b\u4ea4\u81c2/\u6d41\u6cea\u3002\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u5173\u952e\u7684\u6027\u8d28\u662f**\u7b54\u6848\u4e0d\u8d85\u8fc7 $2$**\u3002\u8fd9\u5f88\u663e\u7136\uff0c\u56e0\u4e3a $a_i(a_i+1)$ \u4e00\u5b9a\u80fd\u88ab $2$ \u6574\u9664\u3002\u6240\u4ee5 $(a_s(a_s+1),a_t(a_t+1))>1$\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5bf9\u4e09\u79cd\u60c5\u51b5\u5206\u522b\u8ba8\u8bba\uff1a\n\n- \u7b54\u6848\u4e3a $0$\uff1a\u6b64\u65f6 $s,t$ \u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u8fde\u901a\u5757\u7684\u9884\u5904\u7406\u5f88\u5bb9\u6613\uff1a\u8bb0 $buc_{a_i}=i$\uff0c\u679a\u4e3e\u6bcf\u4e2a\u8d28\u6570 $p$ \u53ca\u5176\u500d\u6570 $cp$\uff0c\u5c06\u6240\u6709 $buc_{cp}$ \u6709\u503c\u7684\u5168\u90e8\u8fde\u901a\u5373\u53ef\uff0c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\u3002\n- \u7b54\u6848\u4e3a $1$\uff1a\u6ce8\u610f\u5230 **$a_i+1$ \u6240\u542b\u6709\u7684\u4e0d\u540c\u8d28\u56e0\u5b50\u662f\u5f88\u5c11\u7684**\uff0c\u6700\u591a\u53ea\u6709 $7$\uff0c\u5e76\u4e14**\u542b\u6709\u76f8\u540c\u8d28\u56e0\u5b50\u7684\u6570\u4e00\u5b9a\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757**\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a $a_i$\uff0c\u6c42\u51fa \u201c$a_i$ \u6240\u5728\u7684\u8fde\u901a\u5757\u201d \u4e0e \u201c$a_i+1$ \u6240\u542b\u6709\u7684\u8d28\u56e0\u5b50\u6240\u8868\u793a\u7684\u6240\u6709\u8fde\u901a\u5757\u201d\uff0c\u5e76\u5c06\u5f97\u5230\u7684\u6240\u6709\u8fde\u901a\u5757\u4e24\u4e24\u6807\u8bb0\u4e00\u4e0b\u3002\u90a3\u4e48\u82e5 $s,t$ \u6240\u5904\u7684\u8fde\u901a\u5757\u4e4b\u95f4\u6709\u6807\u8bb0\uff0c\u5219\u7b54\u6848\u4e3a $1$\u3002\u8fd9\u4e2a\u53ef\u4ee5\u8bb0\u5f55\u6240\u6709\u6807\u8bb0\u7684\u8fde\u901a\u5757\u5bf9\uff08\u6700\u591a $21n$ \u4e2a\uff09\uff0c\u6392\u5e8f\u4e00\u8fb9\u540e\u6bcf\u6b21\u8be2\u95ee\u4f7f\u7528 `lower_bound` \u67e5\u627e\u3002\n- \u5426\u5219\u7b54\u6848\u4e3a $2$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u592a\u4f1a\u5206\u6790\uff0c\u5927\u6982\u662f $\\mathcal{O}(m\\log m+d^2n+q\\log(d^2n))$\uff0c\u5176\u4e2d $m$ \u4e3a\u503c\u57df\uff0c$d$ \u4e3a\u4e0d\u8d85\u8fc7\u503c\u57df\u7684\u6570\u6240\u542b\u6709\u7684\u6700\u591a\u8d28\u56e0\u5b50\u4e2a\u6570\uff0c\u672c\u9898\u4e2d\u4e3a $7$\u3002\u5b9e\u9645\u5e38\u6570\u4f1a\u5f88\u5c0f\uff0c\u56e0\u4e3a\u9996\u5148\u6709\u4e00\u4e2a $\\dfrac{1}{2}$ \u7684\u5e38\u6570\uff0c\u540c\u65f6\u663e\u7136\u5361\u4e0d\u6ee1\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pii pair <int,int>\n\nconst int N=1e6+5;\n\nint n,q,a[N],buc[N],pr[N];\nint f[N],col[N],d[N],c;\nint find(int x){return f[x]==x?x:f[x]=find(f[x]);}\nvector <pii> res;\n\nint main(){\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;i++)cin>>a[i],f[i]=i,buc[a[i]]=i;\n\tfor(int i=2;i<N;i++){\n\t\tif(pr[i])continue;\n\t\tfor(int j=i,pre=-1;j<N;j+=i){\n\t\t\tif(buc[j]){\n\t\t\t\tif(pre==-1)col[i]=find(buc[j]);\n\t\t\t\telse f[find(pre)]=find(buc[j]);\n\t\t\t\tpre=buc[j];\n\t\t\t} pr[j]=i;\n\t\t}\n\t}\n\tfor(int i=2;i<N;i++)if(pr[i]==i)col[i]=find(col[i]);\n\tfor(int i=1,p=a[1]+1;i<=n;p=a[++i]+1,c=0){\n\t\td[++c]=find(i);\n\t\twhile(p>1)d[++c]=col[pr[p]],p/=pr[p];\n\t\tsort(d+1,d+c+1),c=unique(d+1,d+c+1)-d-1;\n\t\tfor(int i=1;i<c;i++)\n\t\t\tfor(int j=i+1;j<=c;j++)\n\t\t\t\tres.push_back({d[i],d[j]});\n\t} sort(res.begin(),res.end());\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y; cin>>x>>y,x=find(x),y=find(y);\n\t\tif(x==y)puts(\"0\");\n\t\telse{\n\t\t\tpii cur={min(x,y),max(x,y)};\n\t\t\tauto it=lower_bound(res.begin(),res.end(),cur);\n\t\t\tputs(it!=res.end()&&*it==cur?\"1\":\"2\");\n\t\t} \n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1627013107,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1553G Common Divisor Graph"
    },
    {
        "content": "\u5f53\u65f6\u573a\u4e0a\u6c34\u5e73\u7279\u522b\u5dee\uff0c\u53ea pp \u4e86 5 \u4e2a\u9898\u8fd8 fst \u4e86\u4e24\u9898\uff0c\u73b0\u5728\u968f\u5230\u8fd9\u4e2a\u9898\u53d1\u73b0\u975e\u5e38\u7b80\u5355\u3002\u3002\n\n\u9996\u5148\u53ef\u4ee5\u5728\u4e00\u5206\u949f\u5185\u770b\u51fa\u7b54\u6848\u5fc5\u5b9a $\\le2$\uff0c\u4f60\u8003\u8651\u5947\u5076\u6027\uff0c\u5982\u679c\u4e24\u4e2a\u5076\u6570\u7b54\u6848\u5c31\u662f $0$\uff0c\u4e00\u5947\u4e00\u5076\u7b54\u6848\u81f3\u591a\u662f $1$\uff0c\u4e24\u4e2a\u5947\u6570\u7b54\u6848\u81f3\u591a\u662f $2$\uff08\u4e00\u6b21\u64cd\u4f5c\u53ef\u4ee5\u628a\u4e00\u4e2a\u5947\u6570\u53d8\u6210\u4e00\u4e2a\u5076\u6570\uff0c\u4e24\u4e2a\u5076\u6570\u7684 $\\gcd\\ge2$\uff09\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u5224\u65ad\u7b54\u6848\uff0c\u663e\u7136\u662f\u5148\u5224\u65ad\u7b54\u6848\u662f\u4e0d\u662f $0$\uff0c\u518d\u5224\u65ad $1$ \uff0c\u5982\u679c\u90fd\u4e0d\u884c\u7684\u8bdd\u5c31\u662f $2$\u3002\n\n\u5148\u8003\u8651 $0$ \u7684\u60c5\u51b5\uff0c\u6839\u636e\u5957\u8def\uff0c\u56fe\u4e0a\u5224\u8054\u901a\u8ddd\u79bb\u4e4b\u7c7b\u7684\u5148\u53bb\u60f3\u60f3\u80fd\u4e0d\u80fd\u751f\u6210\u6811/\u5e76\u67e5\u96c6\u53bb\u641e\uff0c\u53d1\u73b0\u540e\u8005\u662f\u53ef\u884c\u7684\u3002\u7531\u4e8e $10^6$ \u4e4b\u5185\u7684\u6570\u7684\u8d28\u56e0\u5b50\u4e2a\u6570\u6700\u591a\u4e3a $7$ \u4e2a\uff08$2\\times 3\\times5\\times7\\times11\\times13\\times17=510510$\uff09\uff0c\u4e8e\u662f\u4f60\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6570\u7684\u8d28\u56e0\u5b50\u9884\u5904\u7406\u51fa\u6765\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8d28\u56e0\u5b50\u5f00\u4e00\u4e2a\u96c6\u5408\uff0c\u628a\u6709\u8fd9\u4e2a\u8d28\u56e0\u5b50\u7684\u6570\u653e\u8fdb\u53bb\uff0c\u6700\u540e\u518d\u7528\u5e76\u67e5\u96c6\u628a**\u6bcf\u4e2a**\u96c6\u5408\u91cc\u9762\u7684\u6570\u90fd\u5408\u5e76\u8d77\u6765\u3002\u5224\u65ad\u7684\u65f6\u5019\u5982\u679c\u4e24\u4e2a\u6570\u5728\u8fd9\u4e2a\u56fe\u5185\u8054\u901a\uff08\u6709\u540c\u4e00\u4e2a\u7956\u5148\uff09\u90a3\u5c31\u662f\u53ef\u884c\u7684\uff0c\u7b54\u6848\u5c31\u662f $0$\u3002  \n\u7136\u540e\u8003\u8651 $1$ \u7684\u60c5\u51b5\u3002\u6709\u4e09\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\uff1a  \n1.  \u5bf9 s \u8fdb\u884c\u64cd\u4f5c\n2.  \u5bf9 t \u8fdb\u884c\u64cd\u4f5c\n3. \u5bf9\u4e00\u4e2a\u522b\u7684\u6570\u8fdb\u884c\u64cd\u4f5c\n\n\u524d\u4e24\u79cd\u60c5\u51b5\u76f4\u63a5\u5224\u6389\uff0c\u4e0d\u591a\u8d58\u8ff0\u3002\u5bf9\u4e8e\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u628a  $a_i\\times (a_i+1)$  \u8d28\u56e0\u5b50\u641e\u51fa\u6765\uff08\u53ea\u9700\u8981\u628a\u9884\u5904\u7406\u51fa\u7684 $a_i$ \u548c $a_i+1$ \u5408\u5e76\u8d77\u6765\u5c31\u884c\uff09 \u7136\u540e\u8003\u8651\u5982\u679c\u5bf9\u4ed6\u8fdb\u884c\u64cd\u4f5c\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u5f97 $a_i\\times (a_i+1)$ \u6240\u542b\u7684**\u4efb\u610f\u4e24\u4e2a\u8d28\u56e0\u5b50\u6240\u5728\u7684\u96c6\u5408\u7684\u7956\u5148**\u8054\u901a\uff0c\u66b4\u529b\u4e8c\u91cd\u5faa\u73af\uff0c\u628a\u5b83\u4eec\u585e\u8fdb\u4e00\u4e2a\u54c8\u5e0c\u8868\uff08\u6216\u8005 map\uff09\u5c31\u53ef\u4ee5\u4e86\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u770b $(find(s),find(t))$ \u662f\u5426\u51fa\u73b0\u8fc7\u5373\u53ef\u3002  \n\u5426\u5219\u7b54\u6848\u5c31\u662f $2$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nx^2\\log n)$\uff0cx \u4e3a\u8d28\u56e0\u5b50\u4e2a\u6570\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/1553/submission/155021476)",
        "postTime": 1651047240,
        "uid": 154101,
        "name": "fily",
        "ccfLevel": 0,
        "title": "?"
    },
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a[\u6700\u5927\u516c\u7ea6\u6570\uff08gcd\uff09](https://oi-wiki.org/math/number-theory/gcd/)\u3001[\u7ebf\u6027\u7b5b](https://oi-wiki.org/math/number-theory/sieve/#_7)\u3001[\u5e76\u67e5\u96c6](https://oi-wiki.org/ds/dsu/)\n\n\u901a\u8fc7\u89c2\u5bdf\u6837\u4f8b\uff0c\u53ef\u4ee5\u731c\u60f3\uff1a\u7b54\u6848\u4e3a $[0, 2]$ \u5185\u7684\u4e00\u4e2a\u6570\u3002\u8bc1\u660e\u5c06\u4f1a\u5728\u540e\u9762\u7ed9\u51fa\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u4e2d\u53d9\u8ff0\u7684\u8fde\u8fb9\u65b9\u5f0f\u7b49\u6548\u4e8e\u5c06 $i$ \u7684\u8054\u901a\u5757\u4e0e\u4efb\u610f\u5305\u542b $a_i$ \u7684\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u8054\u901a\u5757\u5408\u5e76\u3002\n\n\u4e8e\u662f\u6211\u4eec\u901a\u8fc7\u7ebf\u6027\u7b5b\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u6570\u3001\u901a\u8fc7\u6700\u5c0f\u8d28\u56e0\u6570\u5206\u89e3\u8d28\u56e0\u6570\u5e76\u5408\u5e76\u5373\u53ef\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u5982\u679c $s, t$ \u5df2\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u7b54\u6848\u4e3a $0$\uff1b\u5982\u679c $a_s + 1$ \u7684\u8d28\u56e0\u6570\u6240\u5728\u7684\u96c6\u5408\u4e0e $t$ \u6240\u5728\u7684\u96c6\u5408\u6709\u76f8\u540c\u6216 $a_t + 1$ \u7684\u8d28\u56e0\u6570\u6240\u5728\u7684\u96c6\u5408\u4e0e $s$ \u6240\u5728\u7684\u96c6\u5408\u6709\u76f8\u540c\uff0c\u7b54\u6848\u4e3a $1$\uff1b\u5426\u5219\uff0c\u7b54\u6848\u4e3a $2$\u3002\n\n\u8bc1\u660e\uff1a\u6b64\u65f6\u53ef\u4ee5\u65b0\u5efa\u4e24\u4e2a\u8282\u70b9\uff0c\u6743\u503c\u4e3a $a_s(a_s + 1)$ \u548c $a_t(a_t + 1)$\uff0c\u6b64\u65f6\u5b83\u4eec\u4e00\u5b9a\u6709\u4e00\u4e2a $\\gcd$ \u4e3a $2$\u3002\n\n\u9884\u5904\u7406 $a_i + 1$ \u7684\u8d28\u56e0\u6570\u6240\u5728\u7684\u96c6\u5408\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <map>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1e6 + 7, M = 1.5e5 + 7;\nint prime[N], lpf[N], root[M], a[M], ref[N];\nbool p[N], vis[N];\nmap<int, bool> mp[M];\nvector<int> v;\n\ninline void init(int n){\n\tint cnt = 0;\n\tp[0] = p[1] = true;\n\tlpf[1] = 0;\n\tfor (register int i = 2; i < N; i++){\n\t\tif (!p[i]){\n\t\t\tprime[++cnt] = i;\n\t\t\tlpf[i] = i;\n\t\t}\n\t\tfor (register int j = 1; j <= cnt && i * prime[j] < N; j++){\n\t\t\tint t = i * prime[j];\n\t\t\tp[t] = true;\n\t\t\tlpf[t] = prime[j];\n\t\t\tif (i % prime[j] == 0) break;\n\t\t}\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\troot[i] = i;\n\t}\n}\n\nint get_root(int x){\n\tif (root[x] == x) return x;\n\treturn root[x] = get_root(root[x]);\n}\n\ninline void merge(int x, int y){\n\tint x_root = get_root(x), y_root = get_root(y);\n\tif (x_root != y_root) root[x_root] = y_root;\n}\n\nint main(){\n\tint n, q, ni;\n\tcin >> n >> q;\n\tni = n + 1;\n\tinit(ni);\n\tfor (register int i = 1; i <= n; i++){\n\t\tcin >> a[i];\n\t\tfor (register int j = a[i]; j > 1; ){\n\t\t\tint t = lpf[j];\n\t\t\tif (!vis[t]){\n\t\t\t\tvis[t] = true;\n\t\t\t\tref[t] = i;\n\t\t\t} else {\n\t\t\t\tmerge(i, ref[t]);\n\t\t\t}\n\t\t\twhile (j % t == 0){\n\t\t\t\tj /= t;\n\t\t\t}\n\t\t}\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tint size, size_d;\n\t\tv.clear();\n\t\tv.push_back(get_root(i));\n\t\tfor (register int j = a[i] + 1; j > 1; ){\n\t\t\tint t = lpf[j];\n\t\t\tif (!vis[t]){\n\t\t\t\tvis[t] = true;\n\t\t\t\tref[t] = ni;\n\t\t\t}\n\t\t\tv.push_back(get_root(ref[t]));\n\t\t\twhile (j % t == 0){\n\t\t\t\tj /= t;\n\t\t\t}\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tsize = unique(v.begin(), v.end()) - v.begin();\n\t\tsize_d = size - 1;\n\t\tfor (register int j = 0; j < size_d; j++){\n\t\t\tfor (register int k = j + 1; k < size; k++){\n\t\t\t\tmp[v[j]][v[k]] = mp[v[k]][v[j]] = true;\n\t\t\t}\n\t\t}\n\t}\n\tfor (register int i = 1; i <= q; i++){\n\t\tint s, t;\n\t\tcin >> s >> t;\n\t\ts = get_root(s);\n\t\tt = get_root(t);\n\t\tif (s == t){\n\t\t\tcout << 0 << endl;\n\t\t} else if (mp[s].count(t) || mp[t].count(s)){\n\t\t\tcout << 1 << endl;\n\t\t} else {\n\t\t\tcout << 2 << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1631085982,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1553G \u3010Common Divisor Graph\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[CF1553G Common Divisor Graph](https://www.luogu.com.cn/problem/CF1553G)\n\n\u8fd9\u9898\u76ee\u6bd4 $F$ \u9898\u597d\u505a\uff0c\u4e5f\u6bd4 $F$ \u9898\u597d\u60f3\u3002\u3002\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\uff1a **\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u4e00\u5b9a\u4e0d\u5927\u4e8e2**\u3002\n\n\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u5076\u6570\u6765\u8bf4\uff0c\u5b83\u5fc5\u6709\u8fb9\u8fde\u5411\u53e6\u5916\u4e00\u4e2a\u5076\u6570\uff0c\u6240\u4ee5\u6700\u574f\u60c5\u51b5\u5c31\u662f\u4e24\u4e2a\u5947\u6570\u8282\u70b9\u5168\u90fd\u9760\u751f\u6210\u751f\u6210\u51fa\u4e24\u4e2a\u5076\u6570\u8282\u70b9\uff0c\u8fd9\u4e24\u4e2a\u5076\u6570\u8282\u70b9\u76f8\u4e92\u8fde\u63a5\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u5947\u6570\u8282\u70b9\u8054\u901a\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5982\u4f55\u5224\u65ad0\u548c1\u7684\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u5982\u4f55\u5224\u65ad0\uff0c **\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u5728\u539f\u56fe\u4e2d\u8054\u901a\u5373\u53ef** \u3002\u4e5f\u5c31\u662f\u8ba9\u6211\u4eec\u627e\u51fa\u521d\u59cb\u56fe\u7684\u8054\u901a\u5206\u91cf\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u4e2a\u7d20\u6570 $prime(2 \\le prime \\le Max+1)$ \u5efa\u7acb\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u7528$P$\u6765\u7ef4\u62a4\u8fd9\u4e2a\u6570\u7684\u6240\u6709\u8d28\u56e0\u6570\uff0c\u7136\u540e\u5c06 $prime$ \u4e0e $P(a[i])$ \u7684\u6240\u6709\u5143\u7d20\u4e4b\u95f4\u76f8\u4e92\u8fde\u63a5\u8d77\u6765\uff0c**\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0**\u3002\n\n\u7136\u540e\u6211\u4eec\u5224\u65ad\u65f6\u53ea\u8981\u5224\u65ad\u8f93\u5165\u7684\u4e24\u4e2a\u503c\u7684 $a[s],a[t]$ \u662f\u5426\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u5982\u4f55\u5224\u65ad1\uff0c\u6211\u4eec\u5047\u8bbe $a[s]$ \u548c $a[t]$ \u5904\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u8054\u901a\u5206\u91cf\u4e2d\uff0c\u80fd\u5224\u65ad\u4e00\u6b65\u80fd\u8d70\u5230\u7684\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1.\u5bf9\u4e8e $a[s]$ \u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\u3002\n\n2.\u5bf9\u4e8e $a[t]$ \u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\u3002\n\n3.\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u6beb\u4e0d\u76f8\u5e72\u7684\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\u3002\n\n~~\uff08\u8fd9\u4e0d\u662f\u663e\u800c\u6613\u89c1\u7684\u4e8b\u60c5\u5417\uff09~~\n\n\n\u663e\u7136\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6211\u4eec\u628a $a[i]$ \u52a0\u5165\u5230 $P(a[i+1])$ \u4f7f\u5f97\u4ed6\u4eec\u80fd\u591f\u4e92\u76f8\u627e\u5230\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e $P(a[i+1])$ \u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u80fd\u591f\u8054\u901a\u7684\u8bdd\u5c31\u653e\u8fdb\u4e00\u4e2a\u8fb9\u96c6\u91cc\u9762\uff08\u8fb9\u96c6\u7528 $set$ \u7ef4\u62a4\uff09,\u6700\u540e\u53ea\u9700\u8981\u67e5\u627e\u8fb9 $a[s]->a[t]$ \u662f\u5426\u5b58\u5728\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u4ee3\u7801\u4e5f\u547c\u4e4b\u6b32\u51fa\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6~~\u5927\u6982~~\u662f $O((n+q)\\times\\log_2^2(n))$\n\n```cpp\n#include<bits/stdc++.h>\n#define Debug if(false)\n#define rnt register int\nusing namespace std;\nconst int maxn=2000010;\ninline int read()\n{\n\tint x=0,f=1;char c;\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-f;\n\tfor(;isdigit(c);c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\treturn x*f;\n}\nint n,q,Max;\nint a[maxn];\nstruct Unionset\n{\n\tint f[maxn];\n\tinline void init()\n\t\t{for(rnt i=1;i<=Max+1;i++) f[i]=i;}\n\tinline int Find(int x)\n\t{\n\t\tif(f[x]==x) return x;\n\t\telse return f[x]=Find(f[x]);\n\t}\n\tinline void Union(int x,int y)\n\t\t{f[Find(x)]=Find(y);}\n}uni;\nvector<int> P[maxn]; //\u56e0\u4e3a\u6211\u4e0d\u4f1a\u4f30\uff0c\u6240\u4ee5\u7528\u7684vector \nset<pair<int,int> > edgeset;\nsigned main()\n{\n\tn=read(),q=read();\n\tfor(rnt i=1;i<=n;i++)\n\t\ta[i]=read(),Max=max(Max,a[i]);\n\t//\u521d\u59cb\u5316P\u6570\u7ec4\n\tuni.init();\n\tfor(rnt prime=2;prime<=Max+1;prime++)\t\n\t\tif(P[prime].empty())\n\t\t\tfor(rnt x=prime;x<=Max+1;x+=prime)\n\t\t\t\tP[x].push_back(prime);\n\t//\u628a\u6240\u6709\u7684a[i]\u4e0e\u4ed6\u7684\u8d28\u56e0\u6570\u538b\u8fdb\u4e00\u4e2a\u96c6\u5408\u91cc \n\tfor(rnt i=1;i<=n;i++)\n\t\tfor(auto prime:P[a[i]])\n\t\t\tuni.Union(a[i],prime);\n\tfor(rnt i=1;i<=n;i++)\n\t{\n\t\tvector<int> nodeset=P[a[i]+1];\n\t\tnodeset.push_back(a[i]); //\u628aa[i]\u538b\u8fdba[i]+1\u7684\u96c6\u5408\u91cc\u9762 \n\t\tfor(rnt i=0;i<nodeset.size();i++)\n\t\t\tfor(rnt j=i+1;j<nodeset.size();j++)\n\t\t\t{\n\t\t\t\tint node1=nodeset[i],node2=nodeset[j];\n\t\t\t\tnode1=uni.Find(node1),node2=uni.Find(node2);\n\t\t\t\tif(node1!=node2)\n\t\t\t\t{\n\t\t\t\t\tDebug printf(\"node1: %d node2: %d\\n\",node1,node2);\n\t\t\t\t\tif(node1>node2) swap(node1,node2);\n\t\t\t\t\tedgeset.insert({node1,node2}); //\u8fde\u4e0a\u4e00\u6761\u8fb9 \n\t\t\t\t}\n\t\t\t}\n\t}\n\twhile(q--)\n\t{\n\t\tint s=read(),t=read();\n\t\ts=uni.Find(a[s]),t=uni.Find(a[t]);\n\t\tif(s>t) swap(s,t);\n\t\tif(s==t) puts(\"0\"); //\u5982\u679c\u5904\u4e8e\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u5c31\u76f4\u63a5\u8f93\u51fa0 \n\t\telse if(edgeset.count({s,t})) puts(\"1\"); //\u5982\u679c\u80fd\u591f\u901a\u8fc7\u4e00\u6761\u8fb9\u5c31\u8df3\u5230\u5c31\u8f93\u51fa0 \n\t\telse puts(\"2\"); //\u5176\u4f59\u7684\u8bdd\u5c31\u8f6c\u6210\u5076\u6570\uff0c\u8f93\u51fa2 \n\t}\n\treturn 0;\n}\n```\n\n\n\u5c31\u7ed3\u675f\u4e86\u3002\u3002\u3002\u3002\u3002",
        "postTime": 1627026825,
        "uid": 235855,
        "name": "shenxinge",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011CF1553G Common Divisor Graph"
    },
    {
        "content": "\u663e\u7136\u7b54\u6848\u4e0a\u754c\u4e3a $2$\u3002\u786e\u5b9a\u7b54\u6848\u4e0a\u754c\u5728\u5404\u79cd\u5730\u65b9\u90fd\u6709\u7528\u5230\u3002\n\n\u81f3\u4e8e\u8bc1\u660e\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6b63\u6574\u6570 $x$\uff0c$2 \\mid \\gcd(x,x+1)$\u3002\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u62d3\u5c55 $s,t$ \u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u4e0d\u62d3\u5c55\u6216\u8005\u62d3\u5c55\u4e00\u6b21\u90fd\u4e0d\u884c\uff0c\u7b54\u6848\u4e3a $2$\u3002\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u4e0d\u62d3\u5c55\u6216\u62d3\u5c55\u4e00\u6b21\u662f\u5426\u53ef\u884c\uff1f\n\n\u9996\u5148\u662f\u4e0d\u62d3\u5c55\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$ \u5c06\u5176\u6240\u6709\u8d28\u56e0\u5b50\u5168\u90e8\u5904\u7406\u51fa\u6765\u3002\u5c06\u8fd9\u4e2a\u8d28\u56e0\u5b50\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0e\u5f53\u524d\u4f4d\u7f6e\u5408\u5e76\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\u3002\n\n\u62d3\u5c55\u4e00\u6b21\u7684\u8bdd\uff0c\u8fd8\u662f\u679a\u4e3e $a_i+1$\u3002\u8003\u8651\u52a0\u5165 $a_i+1$ \u7684\u8d21\u732e\uff0c\u6211\u4eec\u4f1a\u8fde\u63a5\u6240\u6709 $a_i+1$ \u7684\u8d28\u56e0\u5b50\u4ee3\u8868\u7684\u8fde\u901a\u5757\u4ee5\u53ca $a_i$ \u6240\u5728\u8fde\u901a\u5757\u3002\u6ce8\u610f\u5230 $\\omega(10^6+1)$ \u4e3a $7$\uff0c\u6211\u4eec\u5c06\u53ea\u62d3\u5c55\u4e00\u6b21\u53ef\u4ee5\u8fde\u63a5\u7684\u6bcf\u5bf9\u8fde\u901a\u5757\u5b58\u4e0b\u6765\uff0c\u5982\u679c\u53ea\u9700\u8981\u62d3\u5c55\u4e00\u6b21\uff0c\u90a3\u4e48 $s,t$ \u6240\u5728\u8fde\u901a\u5757\u5fc5\u7136\u51fa\u73b0\u5728\u5176\u4e2d\u3002\n\n\u5426\u5219\uff0c\u7b54\u6848\u4e3a $2$\u3002\u4ee4\u503c\u57df\u4e3a $a$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5199\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u80fd\u8fc7\u5c31\u5bf9\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct unionFindSet{\n\tint fa[150005];\n\tvoid makeSet(int up){for(int i=0;i<=up;++i)\tfa[i]=i;}\n\tint findSet(int x)\n\t{\n\t\tif(x==fa[x])\treturn x;\n\t\treturn fa[x]=findSet(fa[x]);\n\t}\n\tvoid unionSet(int x,int y)\n\t{\n\t\tint xx=findSet(x),yy=findSet(y);\n\t\tif(xx==yy)\treturn ;\n\t\tfa[xx]=yy;\n\t}\n}ufs;\nint n,q,a[150005],lst[1000005],pb[25];\n#define mp make_pair\nint main(){\n\tscanf(\"%d %d\",&n,&q);\n\tufs.makeSet(n);\n\tfor(int i=1;i<=n;++i)\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint tmp=a[i];\n\t\tfor(int j=2;j*j<=tmp;++j)\n\t\t{\n\t\t\tif(tmp%j==0)\n\t\t\t{\n\t\t\t\tif(lst[j])\tufs.unionSet(lst[j],i);\n\t\t\t\tlst[j]=i;\n\t\t\t\twhile(tmp%j==0)\ttmp/=j;\n\t\t\t}\n\t\t}\n\t\tif(tmp!=1)\n\t\t{\n\t\t\tif(lst[tmp])\tufs.unionSet(lst[tmp],i);\n\t\t\tlst[tmp]=i;\n\t\t\ttmp=1;\n\t\t}\n\t}\n\tvector<pair<int,int>> Ret;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint tmp=a[i]+1,cnt=0;\n\t\tfor(int j=2;j*j<=tmp;++j)\n\t\t{\n\t\t\tif(tmp%j==0)\n\t\t\t{\n\t\t\t\tif(lst[j])\tpb[++cnt]=ufs.findSet(lst[j]);\n\t\t\t\twhile(tmp%j==0)\ttmp/=j;\n\t\t\t}\n\t\t}\n\t\tif(tmp!=1)\n\t\t{\n\t\t\tif(lst[tmp])\tpb[++cnt]=ufs.findSet(lst[tmp]);\n\t\t\ttmp=1;\n\t\t}\n\t\tpb[++cnt]=ufs.findSet(i);\n\t\tsort(pb+1,pb+1+cnt);\n\t\tcnt=unique(pb+1,pb+1+cnt)-pb-1;\n//\t\tprintf(\"%d\\n\",cnt);for(int j=1;j<=cnt;++j)\tprintf(\"%d \",pb[j]);puts(\"\");\n\t\tfor(int j=1;j<=cnt;++j)\tfor(int k=j+1;k<=cnt;++k)\tRet.push_back(mp(min(pb[j],pb[k]),max(pb[j],pb[k])));\n\t}\n\tsort(Ret.begin(),Ret.end());\n\tRet.erase(unique(Ret.begin(),Ret.end()),Ret.end());\n\twhile(q-->0)\n\t{\n\t\tint s,t;\n\t\tscanf(\"%d %d\",&s,&t);\n\t\ts=ufs.findSet(s),t=ufs.findSet(t);\n\t\tif(s>t)\tswap(s,t);\n//\t\tprintf(\"%d %d\\n\",s,t);\n\t\tif(s==t)\tputs(\"0\");\n\t\telse if(lower_bound(Ret.begin(),Ret.end(),mp(s,t))!=Ret.end() && *lower_bound(Ret.begin(),Ret.end(),mp(s,t))==mp(s,t))\tputs(\"1\");\n\t\telse\tputs(\"2\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1628415176,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u7761\u89c92"
    }
]