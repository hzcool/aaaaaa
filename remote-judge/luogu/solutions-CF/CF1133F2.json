[
    {
        "content": "\u4ea4\u4e86\u7ffb\u8bd1\u4e5f\u6765\u4ea4\u4e2a\u9898\u89e3\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u5982\u679c\u8fde\u5728\u4e00\u53f7\u7684\u8fb9\u6570\u5c0f\u4e8e\u8981\u6c42\u7684$D$\uff0c\u90a3\u4e00\u5b9a\u4e0d\u884c\n\n\u5176\u6b21\uff0c\u5c31\u8981\u8003\u8651\u5757\u6570\u91cf\u4e86\uff0c\u8fd9\u4e5f\u662f\u6211\u4e00\u5f00\u59cb\u6ca1\u60f3\u5230\u7684\n\n\u5148dfs\u4e00\u8fb9\uff0c\u770b\u4e00\u4e0b**\u9664\u4e86\u4e00\u53f7\u4ee5\u5916\u7684**\u8fde\u901a\u5757\u7684\u4e2a\u6570\n\n\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u4e00\u4e2a\u5757\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u662f\u8981\u8fde\u4e00\u53f7\u7684\uff0c\u4e0d\u7136\u5c31\u4e0d\u80fd\u6784\u6210\u751f\u6210\u6811\n\n\u6700\u540e\u518dbfs\u6216\u8005dfs\uff0c\u5c31\u53ef\u4ee5\u8f93\u51fa\u8fb9\u4e86\uff0c\u6211\u7531\u4e8e\u6bd4\u8f83\u61d2\uff0c\u5224\u65ad\u8fde\u4e00\u7684\u8fb9\u653e\u5728bfs\u91cc\u9762\u505a\u4e86\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <queue>\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nstruct Edge\n{\n  int to,next;\n}e[400010];\n\nint n,m,k,cnt;\n\nint head[200010],num;\n\nint vis[200010],chose[200010],d[200010];\n\nvoid addedge(int a,int b)\n{\n  e[++num].to=b;\n  e[num].next=head[a];\n  head[a]=num;\n}\n\nvoid dfs(int u)\n{\n  vis[u]=1;\n  for(int i=head[u];i;i=e[i].next)\n  {\n    if(!vis[e[i].to]) dfs(e[i].to);\n  }\n  return ;\n}\n\nvoid bfs()\n{\n  memset(vis,0,sizeof(vis));\n  queue <int>q;\n  q.push(1);\n  vis[1]=1;\n  while(!q.empty())\n  {\n    int now=q.front();\n    q.pop();\n    for(int i=head[now];i;i=e[i].next)\n    {\n      if(((now==1&&chose[e[i].to])||now!=1)&&!vis[e[i].to])\n      {\n        vis[e[i].to]=1;\n        printf(\"%d %d\\n\",now,e[i].to);\n        q.push(e[i].to);\n      }\n    }\n  }\n}\n\nint main()\n{\n  scanf(\"%d%d%d\",&n,&m,&k);\n  for(int i=1;i<=m;i++)\n  {\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    if(b!=1) addedge(a,b);\n    if(a!=1) addedge(b,a);\n    d[a]++;\n    d[b]++;\n  }\n  vis[1]=1;\n  for(int i=head[1];i;i=e[i].next)\n  {\n    if(!vis[e[i].to])\n    {\n      cnt++;\n      chose[e[i].to]=1;\n      dfs(e[i].to);\n    }\n  }\n  if(k>=cnt&&k<=d[1])\n  {\n    printf(\"YES\\n\");\n    for(int i=head[1];i&&cnt<k;i=e[i].next)\n    {\n      if(!chose[e[i].to])\n      {\n        cnt++;\n        chose[e[i].to]=1;\n      }\n    }\n    bfs();\n  }\n  else\n  {\n    printf(\"NO\\n\");\n    return 0;\n  }\n}\n\n```",
        "postTime": 1591434962,
        "uid": 62573,
        "name": "zzqDeco",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1133F2 \u3010Spanning Tree with One Fixed Degree\u3011"
    },
    {
        "content": "## CF1133F2 Spanning Tree with One Fixed Degree\n\n### \u9898\u610f\n\n- \u7ed9\u4f60\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff08\u65e0\u81ea\u73af\u6216\u91cd\u8fb9\uff09\u3002\n- \u8ba9\u4f60\u6784\u9020\u4e00\u4e2a\u6ee1\u8db3\u7f16\u53f7\u4e3a $1$ \u7684\u70b9\u7684\u5ea6\u6570\u4e3a $k$ \u7684\u6811\uff0c\u6811\u7684\u9876\u70b9\u6570\u4e0e\u56fe\u7684\u9876\u70b9\u6570\u76f8\u7b49\u3002\n- \u82e5\u53ef\u4ee5\uff0c\u8f93\u51fa $\\texttt{YES}$ \uff0c\u5e76\u8f93\u51fa\u8fd9\u68f5\u6811\u3002\n- \u82e5\u4e0d\u53ef\u4ee5\uff0c\u8f93\u51fa $\\texttt{NO}$ \u3002\n- $2\\leq n\\leq 2 \\times 10^5$, $n-1\\leq m \\leq \\min(2 \\times 10^5,\\frac{n(n-1)}{2})$, $1\\leq k \\leq n$\u3002\n\n### \u5206\u6790\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u8fde\u901a\u5757\uff08\u5f53\u7136\u5f3a\u8fde\u901a\u5206\u91cf\u4e5f\u53ef\u4ee5\uff09\uff0cBFS\u3002\n\n\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u672c\u9898\u7684\u96be\u70b9\u5c31\u5728\u8f93\u51fa $\\texttt{YES/NO}$ \u4e0a\u3002\u53ea\u8981\u60f3\u51fa\u4e86\u8fd9\u4e2a\u70b9\uff0c\u5269\u4e0b\u7684 BFS \u57fa\u672c\u5c31\u662f\u65e0\u8111\u64cd\u4f5c\u3002\u6240\u4ee5\u672c\u6587\u5c31\u8bb2\u5982\u4f55\u5224\u65ad\u80fd\u5426\u751f\u6210\u8fd9\u68f5\u6811\u3002\n\n\u9996\u5148\uff0c\u4e0d\u59a8\u8ba1\u4e0e\u7ed3\u70b9 $1$ \u76f8\u8fde\u7684\u8fb9\u7684\u6570\u91cf\u4e3a $cnt$ \u3002\u4e00\u4e2a\u5f88\u663e\u7136\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\u662f $cnt <k$ \u3002\n\n\u4f46\u662f\u8fd9\u6837\u4ec5\u4ec5\u662f\u6700\u591a\u8fde\u8fb9\u6570\u5c0f\u4e8e $k$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u79cd\u6700\u5c0f\u8fde\u8fb9\u6570\u5927\u4e8e $k$ \u7684\u60c5\u51b5\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\uff0c\u201c\u6811\u7684\u9876\u70b9\u6570\u4e8e\u56fe\u7684\u9876\u70b9\u4e66\u76f8\u7b49\u201d\uff0c\u6240\u4ee5\uff0c\u8981\u6ee1\u8db3\u9898\u610f\uff0c\u7ed3\u70b9 $1$ \u5fc5\u987b\u81f3\u5c11\u5411\u6b64\u65f6\u7684\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u8fde\u8fb9\u3002\u56e0\u800c\u5bb9\u6613\u60f3\u5230\uff0c\u5f53\u5220\u53bb\u7ed3\u70b9 $1$ \u540e\uff0c\u8fde\u901a\u5757\u6570\u91cf\u5927\u4e8e $k$ \u4e5f\u662f\u4e0d\u884c\u7684\u3002\n\n\u4e8e\u662f\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\u5c31\u88ab\u6211\u4eec\u89e3\u51b3\u4e86\u3002\n\n\u751f\u6210\u6811\u7684\u8bdd\uff0c\u5148\u5411\u6240\u6709\u8fde\u901a\u5757\u8fde\u8fb9\uff0c\u7136\u540e\u5982\u679c\u4e0d\u591f\uff0c\u5c31\u518d\u968f\u4fbf\u5411\u5176\u4ed6\u70b9\u8fde\u8fb9\u3002\n\n### \u4ee3\u7801\n\n~~\u76ee\u524d\u662f\u6700\u4f18\u89e3~~\n\n\u8fde\u901a\u5757\u91c7\u7528\u7684\u662f\u5e76\u67e5\u96c6\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,cnt,num,tot;\nint fa[200005];\nint d[400005];\nbool used[200005],inq[200005];\nint t[400005],nxt[400005],h[200005];\nint q[1001001],f,e;\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nint find(int x)\n{\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}\ninline void merge(int x,int y)\n{\n\tint p=find(x),q=find(y);\n\tfa[p]=q;\n}\ninline void addedge(int a,int b)\n{\n\tt[++tot]=b,nxt[tot]=h[a],h[a]=tot;\n}\ninline void bfs()\n{\n\tf=e=1,q[1]=1,inq[1]=true;\n\twhile(f<=e)\n\t{\n\t\tint u=q[f++];\n\t\tfor(int p=h[u];p;p=nxt[p])\n\t\t{\n\t\t\tint v=t[p];\n\t\t\tif(!inq[v])\tinq[v]=true,q[++e]=v,printf(\"%d %d\\n\",u,v);\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read(),k=read();\n\tfor(int i=0;i<=n;i++)\tfa[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tif(u>v)\tswap(u,v);\n\t\tif(u!=1)\n\t\t\tmerge(u,v),addedge(u,v),addedge(v,u);\n\t\telse\td[++cnt]=v;\n\t}\n\tfor(int i=2;i<=n;i++)\n\t\tif(fa[i]==i)\tnum++;\n\tif(k>cnt||k<num)\n\t{\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tputs(\"YES\");\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tint v=d[i];\n\t\tif(used[find(v)])\tcontinue;\n\t\tused[find(v)]=true;\n\t\td[i]=-1;\n\t\taddedge(1,v),addedge(v,1);\n\t\tk--;\n\t}\n\tif(k)\n\t\tfor(int i=1;i<=cnt&&k;i++)\n\t\t{\n\t\t\tint v=d[i];\n\t\t\tif(d[i]==-1)\tcontinue;\n\t\t\taddedge(1,v),addedge(v,1);\n\t\t\tk--;\n\t\t}\n\tbfs();\n\treturn 0;\n}\n```\n",
        "postTime": 1616687022,
        "uid": 181775,
        "name": "_Fontainebleau_",
        "ccfLevel": 0,
        "title": "\u300cCF1133F2 Spanning Tree with One Fixed Degree\u300d\u9898\u89e3"
    }
]