[
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/CF1129C) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/1129/problem/C)\n\n>\u9898\u610f\u89c1\u6d1b\u8c37\u91cc\u7684\u7ffb\u8bd1\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u7528\u533a\u95f4DP\u7b97\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u5b5001\u4e32\uff0c\u80fd\u8868\u793a\u7684\u5b57\u6bcd\u4e32\u7684\u4e2a\u6570\u3002\n\n\u8bbe$dp_{i,j}$\u8868\u793a\u957f\u5ea6\u4e3a$i$\uff0c\u8d77\u70b9\u4e3a$j$\uff08\u4e0b\u6807\u4ece$1$\u5f00\u59cb\uff09\u7684\u5b5001\u4e32\u80fd\u8868\u793a\u7684\u5b57\u6bcd\u4e32\u7684\u4e2a\u6570\uff08\u4e5f\u8bb8\u6211\u8bbe\u7684DP\u72b6\u6001\u6709\u70b9\u5947\u602a\uff09\u3002\u663e\u7136\uff0c$dp_{0,i}=1$\uff0c\u56e0\u4e3a\u7a7a\u5b5001\u4e32\u80fd\u4e14\u4ec5\u80fd\u8868\u793a\u7a7a\u5b57\u6bcd\u4e32\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\u53ef\u4ee5\u4ece\u4e32\u7684\u9996\u90e8\u8f6c\u79fb\uff0c\u4ece\u9996\u90e8\u6316\u51fa$1\\sim4$\u4e2a\u5b57\u7b26\u7ec4\u6210\u5b57\u6bcd\uff0c\u7d2f\u52a0\u4e0a\u5269\u4e0b\u7684\u4e32\u7684DP\u503c\u3002\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a$dp_{i,j}=\\sum\\limits_{k=1}^{\\min(4,i)}dp_{i-k,j+k}$\uff0c\u5176\u4e2d$k=4$\u65f6\u8fd8\u8981\u8003\u8651\u9996\u90e8$4$\u4e2a\u5b57\u7b26\u662f\u5426\u4e3a\u4e0d\u80fd\u8868\u793a\u5b57\u6bcd\u7684\u90a3\u53ef\u601c\u7684$4$\u4e2a01\u4e32\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5c31\u4e0d\u80fd\u7d2f\u52a0\u4e0a$dp_{i-4,j+4}$\u3002\u540c\u6837\u7684\u9053\u7406\uff0c\u4ece\u5c3e\u90e8\u8f6c\u79fb\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u8f6c\u79fb\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\mathrm{O}\\left(n^2\\right)$\uff0c\u56e0\u4e3a\u4e00\u5171\u6709$\\mathrm{O}\\left(n^2\\right)$\u4e2a\u5b5001\u4e32\uff0c\u800c\u6bcf\u6b21\u8f6c\u79fb\u662f$\\mathrm{O}(1)$\u7684\u3002\n\n\u63a5\u4e0b\u6765\u8981\u7b97\u7b54\u6848\u4e86\u3002\u8bbe\u5230\u5f53\u524d\u7b2c$i$\u6b21\u7684\u6dfb\u52a0\u5b57\u7b26\u540e\uff0c\u7b54\u6848\u4e3a$ans$\uff0c\u90a3\u4e48\u5bb9\u6613\u60f3\u5230\uff0c\u4e0b\u4e00\u6b21\uff08\u7b2c$i+1$\u6b21\uff09\u6dfb\u52a0\u5b57\u7b26\u540e\uff0c\u589e\u52a0\u4e86$[1,i+1],[2,i+1],\\cdots,[i+1,i+1]$\u8fd9$i+1$\u4e2a\u5b5001\u4e32\uff0c\u7b54\u6848\u53d8\u6210\u4e86$ans+\\sum\\limits_{j=1}^{i+1}dp_{i+1-j+1,j}$\uff0c\u6211\u4eec\u628a$\\sum\\limits_{j=1}^{i+1}dp_{i+1-j+1,j}$\u7d2f\u52a0\u5230$ans$\u91cc\u3002\u4f46\u662f\uff0c\u5728\u7d2f\u52a0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u5bf9\u4e8e\u6709\u7684$j$\uff0c$[j,i+1]$\u8fd9\u6bb5\u5b5001\u4e32\u548c\u4e4b\u524d\u7d2f\u52a0\u7684\u6709\u91cd\u590d\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u6bb5\u5b5001\u4e32\u6240\u80fd\u8868\u793a\u7684\u6240\u6709\u5b57\u6bcd\u4e32\u90fd\u88ab\u7b97\u8fc7\u4e86\uff0c\u5c31\u4e0d\u80fd\u518d\u628a$dp_{i+1-j+1,j}$\u7d2f\u52a0\u4e0a\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5224\u91cd\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u524d\u7f00\u54c8\u5e0c\u6570\u7ec4$Hsh$\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728$\\mathrm{O}(1)$\u65f6\u95f4\u5185\u8ba1\u7b97\u51fa\u4efb\u610f\u4e00\u4e2a\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u3002\u7136\u540e\u600e\u4e48\u5224\u91cd\u5462\uff1f\u7528\u4e00\u4e2a$vis$\u6570\u7ec4\u80af\u5b9a\u4e0d\u884c\uff0c\u56e0\u4e3a\u54c8\u5e0c\u503c\u5728$\\left[0,2^{64}\\right)$\u5185\uff0c\u4f1aMLE\u3002\u7528\u88f8\u7684`set`\uff0c\u8981\u5224$\\mathrm{O}\\left(n^2\\right)$\u6b21\uff0c\u6bcf\u6b21$\\mathrm{O}\\left(\\log_2n^2\\right)=\\mathrm{O}(\\log_2n)$\uff0c\u603b\u5171$\\mathrm{O}\\left(n^2\\log_2n\\right)$\uff1b\u5c06`set`\u6309\u5b5001\u4e32\u957f\u5ea6\u5206\u6210$n$\u7ec4\uff0c\u4e5f\u8fd8\u662f$\\mathrm{O}\\left(n^2\\log_2n\\right)$\u3002\u8fd9\u590d\u6742\u5ea6\u914d\u4e0aSTL\u7684\u5e38\u6570\uff0c\u4f1aTLE\u3002\n\n\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c`set`\u7684\u7ec4\u6570\u5176\u5b9e\u5e94\u8be5\u5c3d\u53ef\u80fd\u591a\uff0c\u90a3\u6837\u6bcf\u4e2a`set`\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u5c3d\u53ef\u80fd\u5c11\uff0c\u590d\u6742\u5ea6\u5c31\u5c3d\u53ef\u80fd\u5c0f\u3002\u4e0d\u59a8\u6309\u54c8\u5e0c\u503c\u6a21$10^7$\u7684\u503c\u5206\u4e3a$10^7$\u7ec4\u3002\u8fd9\u6837\u5206\uff0c\u5e73\u5747\u6bcf\u7ec4\u53ea\u6709\u4e00\u4e24\u4e2a\u5143\u7d20\uff0c\u7528`set`\u8fd8\u4e8f\u4e86\uff0c\u76f4\u63a5\u7528\u94fe\u5f0f\u524d\u5411\u661f\u88c5\u5373\u53ef\u3002\n\n\u4ee5\u4e0b\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 3000\n#define hshmod 10000000//\u5c06\u54c8\u5e0c\u5206\u4e3a\u7684\u7ec4\u6570\n#define mod 1000000007\n#define ull unsigned long long\nbitset<N+1> a;//01\u4e32\nint dp[N+1][N+2];//dp[i][j]\u8868\u793a\u957f\u5ea6\u4e3ai\uff0c\u8d77\u70b9\u4e3aj\u7684\u5b5001\u4e32\u80fd\u8868\u793a\u7684\u5b57\u6bcd\u4e32\u6570\ninline bool ok(bool a,bool b,bool c,bool d){//\u662f\u5426\u80fd\u8868\u793a\u5b57\u6bcd\n\treturn !(!a&&!b&&c&&d||!a&&b&&!c&&d||a&&b&&c&&!d||a&&b&&c&&d);//\u4e0d\u662f\u90a3\u53ef\u601c\u76844\u4e2a\u4e32\u5c31OK\n}\null Hsh[N+1]/*\u524d\u7f00\u54c8\u5e0c\u503c*/,power[N+1]/*power[i]\u4e3a\u54c8\u5e0cbase\uff08131\uff09\u7684i\u6b21\u65b9*/;\null hsh(int l,int r){//[l,r]\u8fd9\u6bb5\u5b5001\u4e32\u7684\u54c8\u5e0c\u503c\n\treturn Hsh[r]-Hsh[l-1]*power[r-l+1];\n}\nint head[hshmod],nxt[N*N],tot;ull data[N*N];//\u94fe\u5f0f\u524d\u5411\u661f\nvoid add(int x,ull y){//\u5f80\u7b2cx\u7ec4\u91cc\u6dfb\u52a0\u54c8\u5e0c\u503cy\n\tdata[++tot]=y;nxt[tot]=head[x];head[x]=tot;\n}\nint main(){\n\tint n/*\u6dfb\u52a0\u5b57\u7b26\u7684\u6b21\u6570\uff0c\u5373\u6700\u7ec801\u4e32\u7684\u957f\u5ea6*/,ans=0/*\u76ee\u524d\u7684\u7b54\u6848*/,i,j;scanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){int x;scanf(\"%d\",&x);a[i]=x;}\n\tpower[0]=1;//131^0=1\n\tfor(i=1;i<=n;i++)Hsh[i]=Hsh[i-1]*131ull+a[i]+1,power[i]=power[i-1]*131ull;//\u9884\u5904\u7406\n\tfill(dp[0]+1,dp[0]+n+2,1);//DP\u8fb9\u754c\uff1adp[i][0]=1\n\tfor(i=1;i<=n;i++)for(j=1;j+i-1<=n;j++)//\u72b6\u6001\u8f6c\u79fb\n\t\tdp[i][j]=dp[i-1][j+1],\n\t\tdp[i][j]+=i>=2?dp[i-2][j+2]:0,dp[i][j]%=mod,\n\t\tdp[i][j]+=i>=3?dp[i-3][j+3]:0,dp[i][j]%=mod,\n\t\tdp[i][j]+=i>=4&&ok(a[j],a[j+1],a[j+2],a[j+3])?dp[i-4][j+4]:0,dp[i][j]%=mod;\n//\tfor(i=1;i<=n;i++)for(j=1;j+i-1<=n;j++)\n//\t\tprintf(\"dp[%d][%d]=%d\\n\",i,j,dp[i][j]);\n\tfor(i=1;i<=n;i++){//\u7b2ci\u6b21\u6dfb\u52a0\u5b57\u7b26\n\t\tfor(j=1;j<=i;j++){//\u679a\u4e3e\u65b0\u589e\u5b5001\u4e32\u7684\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u662fi\n\t\t\tull h=hsh(j,i);//\u6b64\u65b0\u5b5001\u4e32\u7684\u54c8\u5e0c\u503c\n\t\t\tint hmod=h%hshmod;//\u5b83\u7684\u7c7b\u522b\n//\t\t\tcout<<h<<\" \"<<hmod<<\" \"<<dp[i-j+1][j]<<\"\\n\";\n\t\t\tbool mar=false;//\u662f\u5426\u548c\u4e4b\u524d\u7684\u67d0\u4e00\u4e2a\u4e32\u91cd\u590d\n\t\t\tfor(int k=head[hmod];k;k=nxt[k])//\u679a\u4e3e\u6b64\u7ec4\u91cc\u7684\u5143\u7d20\n\t\t\t\tif(data[k]==h)//\u6709\u548c\u5b83\u7684\u54c8\u5e0c\u503c\u76f8\u540c\u7684\uff1f\n\t\t\t\t\t{mar=true;/*\u91cd\u590d*/break;/*\u4e0d\u5fc5\u518d\u627e\uff0c\u9000\u51fa*/}\n\t\t\tif(!mar)//\u5982\u679c\u65e0\u91cd\u590d\uff0c\u7167\u6837\u7d2f\u52a0\n\t\t\t\tans+=dp[i-j+1][j],ans%=mod,add(hmod,h)/*\u6254\u8fdb\u94fe\u8868*/;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);//\u8f93\u51fa\u76ee\u524d\u7684\u7b54\u6848\n//\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1555161480,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 1129C - Morse Code"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u8003\u8651\u600e\u4e48\u6c42\u4e00\u4e2a\u4e32\u53ef\u884c\u7684\u5b57\u6bcd\u4e32\u7684\u603b\u6570\u3002\n\n\u8003\u8651\u7528DP\u6765\u6c42\u3002\u8bbe$f_i$\u8868\u793a$1$\u5230$i$\u8fd9\u4e2a\u5b50\u4e32\u7684\u53ef\u884c\u65b9\u6848\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u4ee4$f_i=f_{i-1}+f_{i-2}+f_{i-3}+f_{i-4}$\uff0c\u7136\u540e\u518d\u770b\u957f\u5ea6\u4e3a$4$\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u51cf\u6389\u5c31\u884c\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u600e\u6837\u6c42\u6240\u6709\u5b50\u4e32\u7684\u3002\u7531\u4e8e\u8fd9\u9053\u9898\u53ea\u652f\u6301\u63d2\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u63d2\u5165\u540e\u7528\u4e0a\u9762\u90a3\u4e2aDP\u6c42\u51fa\u6240\u6709\u540e\u7f00\u7684\u53ef\u884c\u65b9\u6848\uff0c\u5012\u8fc7\u6765DP\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u540e\u7f00\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u8fc7\u5c31\u52a0\u5165\u3002\n\n\u6211\u8003\u573a\u5199\u4e86\u4e00\u4e2aset\uff0c\u7136\u540e\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2\\log n)$\u5149\u8363TLE\u4e86\u2026\u2026\n\n\u6211\u4eec\u8003\u8651\u5efa\u540e\u7f00\u81ea\u52a8\u673a\u3002\u7531\u4e8e\u540e\u7f00\u81ea\u52a8\u673a\u5bf9\u5e94\u53cd\u4e32\u540e\u7f00\u6811\uff0c\u800c\u6240\u6709\u65b0\u52a0\u5165\u7684\u540e\u7f00\u5c31\u5bf9\u5e94\u4e86\u5f53\u524d\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u6240\u4ee5\u8981\u60f3\u4f7f\u5f97\u8fd9\u4e2a\u540e\u7f00\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u53ea\u9700\u8981\u67e5\u770b\u5b83\u7684\u5b50\u6811\u4e2d\u662f\u5426\u6709\u9664\u4e86\u65b0\u52a0\u5165\u7684\u70b9\u4e4b\u5916\u7684\u5176\u5b83\u70b9\u3002\u6bd4\u5982$11000$\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u5efa\u51fa\u6765\u7684\u53cd\u4e32\u540e\u7f00\u6811\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/61522.png)\n\n\u5bb9\u6613\u53d1\u73b0\uff0c$000,0001,00011$\u8fd9\u4e09\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u6ca1\u6709\u5206\u53c9\uff0c\u800c$0,00$\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u6709\u5206\u53c9\u3002\n\n\u628a\u5b57\u7b26\u4e32\u53cd\u8fc7\u6765\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c$0,00$\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u524d\u51fa\u73b0\u8fc7\uff0c\u800c$000,0001,00011$\u8fd9\u4e09\u4e2a\u5b57\u7b26\u4e32\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0\u8fc7\u3002\n\n\u4e8e\u662f\u505a\u6cd5\u5c31\u51fa\u6765\u4e86\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u52a0\u5165\u7684\u5b57\u7b26\uff0c\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u5b83\u6240\u5728\u7684\u8282\u70b9\u7684\u7236\u8282\u70b9$node$\uff0c\u7136\u540e\u6240\u6709\u957f\u5ea6\u5927\u4e8e$len[node]$\u7684\u90fd\u8981\u52a0\u5165\u7b54\u6848\uff0c\u5176\u4f59\u7684\u90fd\u4e0d\u80fd\u52a0\u5165\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2)$\uff0c\u7136\u800c\u5982\u679c\u4f60\u63d0\u524d\u6ce8\u610f\u5230\u80fd\u52a0\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e00\u5b9a\u8fde\u7eed\u7684\u8bdd\u5c31\u53ef\u4ee5\u628a\u524d\u9762\u4f1aTLE\u7684\u7b97\u6cd5\u7528\u4e2a\u4e8c\u5206\u4e00\u4f18\u5316\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define ll long long\nusing namespace std;\nconst ll MOD=1e9+7;\nint m,a[3005];\nll f[3050];\nstruct Tree\n{\n\tint child[2];\n\tint len;\n\tint fail;\n}tree[6005];\nint n,tot,last,p[30005];\nvoid insert(int c)\n{\n\tint now=++tot,node=last;\n\ttree[now].len=tree[node].len+1;\n\twhile(node!=-1&&!tree[node].child[c])\n\t{\n\t\ttree[node].child[c]=now;\n\t\tnode=tree[node].fail;\n\t}\n\tif(node==-1)tree[now].fail=0;\n\telse\n\t{\n\t\tint cur=tree[node].child[c];\n\t\tif(tree[cur].len==tree[node].len+1)tree[now].fail=cur;\n\t\telse\n\t\t{\n\t\t\tint clone=++tot;\n\t\t\ttree[clone]=tree[cur];\n\t\t\tp[clone]=p[cur];\n\t\t\ttree[clone].len=tree[node].len+1;\n\t\t\twhile(node!=-1&&tree[node].child[c]==cur)\n\t\t\t{\n\t\t\t\ttree[node].child[c]=clone;\n\t\t\t\tnode=tree[node].fail;\n\t\t\t}\n\t\t\ttree[cur].fail=tree[now].fail=clone;\n\t\t}\n\t}\n\tlast=now;\n}\nint main()\n{\n\ttree[0].fail=-1;\n\tscanf(\"%d\",&m);\n\tll ans=0;\n\tfor(int n=1;n<=m;n++)\n\t{\n\t\tscanf(\"%d\",&a[n]);\n\t\tinsert(a[n]);\n\t\tp[last]=n;\n\t\tmemset(f,0,sizeof(f));\n\t\tf[n+1]=1;\n\t\tfor(int i=n;i>=1;i--)\n\t\t{\n\t\t\tf[i]=f[i+1]+f[i+2]+f[i+3]+f[i+4];\n\t\t\tif(!a[i]&&!a[i+1]&&a[i+2]&&a[i+3])f[i]-=f[i+4];\n\t\t\tif(!a[i]&&a[i+1]&&!a[i+2]&&a[i+3])f[i]-=f[i+4];\n\t\t\tif(a[i]&&a[i+1]&&a[i+2]&&!a[i+3])f[i]-=f[i+4];\n\t\t\tif(a[i]&&a[i+1]&&a[i+2]&&a[i+3])f[i]-=f[i+4];\n\t\t\tf[i]%=MOD;\n\t\t\tans+=f[i];\n\t\t}\n\t\tint node=tree[last].fail;\n\t\tfor(int i=tree[node].len;i>=1;i--)\n\t\t  ans-=f[n-i+1];\n\t\tans%=MOD;\n\t\tprintf(\"%I64d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1561638743,
        "uid": 54214,
        "name": "wucstdio",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1129C \u3010Morse Code\u3011"
    },
    {
        "content": "\u653e\u4e2aSAM\u7248\u7684 || \u53ef\u4ee5\u5f3a\u5236\u5728\u7ebf\u505a \u6a21\u4eff\u6c42\u4e0d\u540c\u5b50\u4e32\u7684\u505a\u6cd5 \u76f4\u63a5\u4eceborder\u7684\u524d\u4e00\u4f4d\u5f00\u59cb\u679a\u4e3edp\u5230\u5f00\u5934 \u679a\u4e3e\u65f6\u72b6\u6001\u4e0d\u6e05\u7a7a\u5373\u53ef\u5f97\u5230\u6240\u6709\u65b0\u589e\u52a0\u540e\u7f00\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u7d2f\u52a0\u5373\u53ef\n\uff08\u96be\u70b9\u5728\u4e8e\u5728\u7ebf\u5199\u7684\u8bdd \uff0c\u6df1\u641c\u7684\u7ec6\u8282\u975e\u5e38\u591a\uff0c\u7ec6\u8282\u4e0d\u597d\u5904\u7406\uff0c\u4f46\u662f\u601d\u8def\u662f\u5341\u5206\u663e\u7136\u7684\uff09\n\n```cpp\n#include<string>\n#include<cstring>\n#include<vector>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<deque>\n#include<iomanip>\n#include<sstream>\n#include<stack>\n#include<iostream>\n#include<limits>\n#include<bitset>\n#include<list>\n#include<queue>\n#include<memory>\n#include<functional>\n#include<cstdio>\nusing namespace std;\nconst int N = 10000;\nstruct SAM_node\n{\n\tSAM_node *pre, *next[5];\n\tint step;\n\tvoid clear()\n\t{\n\t\tpre = 0;\n\t\tstep = 0;\n\t\tmemset(next, 0, sizeof(next));\n\t}\n};\nlong d[N * 2];\nSAM_node *pool[N * 2];\nSAM_node SAM_Pool[N * 2];\nstruct SAM \n{\n\tSAM_node *root, *last;\n\tSAM_node  *cur;\n\tlong tot2;\n\tlong k;\n\tvoid init()\n\t{\n\t\tcur = SAM_Pool;\n\t\troot = last = cur++;\n\t\troot->clear();\n\t}\n\tvoid Insert(int w)\n\t{\n\t\tSAM_node *p = last;\n\t\tSAM_node *np = cur++;\n\t\tnp->clear();\n\t\tnp->step = p->step + 1;\n\t\twhile (p && !p->next[w])\n\t\t{\n\t\t\tp->next[w] = np, p = p->pre;\n\t\t}\n\t\tif (p == 0)\n\t\t\tnp->pre = root;\n\t\telse\n\t\t{\n\t\t\tSAM_node *q = p->next[w];\n\t\t\tif (p->step + 1 == q->step)\n\t\t\t\tnp->pre = q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tSAM_node *nq = cur++;\n\t\t\t\tnq->clear();\n\t\t\t\tmemcpy(nq->next, q->next, sizeof(q->next));\n\t\t\t\tnq->step = p->step + 1;\n\t\t\t\tnq->pre = q->pre;\n\t\t\t\tq->pre = nq;\n\t\t\t\tnp->pre = nq;\n\t\t\t\twhile (p&&p->next[w] == q)\n\t\t\t\t{\n\t\t\t\t\tp->next[w] = nq, p = p->pre;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlast = np;\n\t}\n}part;\nlong long dp[10000];\nint str[10000];\nvector<int> anti[4];\nconst int mod = 1000000007;\nlong long dfs(int a,int end)\n{\n\tif (dp[a] != -1)\n\t\treturn dp[a];\n\tif (a == end)\n\t\treturn 1;\n\tdp[a] = 0;\n\tvector<int> p;\n\tp.push_back(str[a]);\n\tint k = min(a + 3, end);\n\tfor (int i = a + 1; i <= k; ++i)\n\t{\n\t\tdp[a] += dfs(i, end), p.push_back(str[i]);\n\t\tdp[a] = dp[a] % mod;\n\t}\n\tif (a + 3 >= end&&(p != anti[0] && p != anti[1] && p != anti[2] && p != anti[3]))\n\t\tdp[a]++;\n\tif ((p != anti[0] && p != anti[1] && p != anti[2] && p != anti[3]))\n\t{\n\t\tif (a + 4 <= end)\n\t\t{\n\t\t\tdp[a] += dfs(a + 4, end);\n\t\t\tdp[a] = dp[a] % mod;\n\t\t}\n\t}\n\treturn dp[a];\n}\nlong long ans1[N];\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcout.tie(NULL);\n\tmemset(dp, -1, sizeof(dp));\n\tmemset(str, 0, sizeof(str));\n\tanti[0].push_back(1);\n\tanti[0].push_back(1);\n\tanti[0].push_back(1);\n\tanti[0].push_back(1);\n\tanti[1].push_back(0);\n\tanti[1].push_back(0);\n\tanti[1].push_back(1);\n\tanti[1].push_back(1);\n\tanti[2].push_back(1);\n\tanti[2].push_back(1);\n\tanti[2].push_back(1);\n\tanti[2].push_back(0);\n\tanti[3].push_back(0);\n\tanti[3].push_back(1);\n\tanti[3].push_back(0);\n\tanti[3].push_back(1);\n\tint n,a;\n\tcin >> n;\n\tlong long ans = 0;\n\tpart.init();\n\tans1[0] = 0;\n\tmemset(ans1, 0, sizeof(ans1));\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tmemset(dp, -1, sizeof(dp));\n\t\tcin >> a;\n\t\tstr[i] = a;\n\t\tpart.Insert(a);\n\t\tfor (int j = i - part.last->pre->step; j >= 1; --j)\n\t\t{\n\t\t\t//memset(dp, -1, sizeof(dp));\n\t\t\tans1[i] += dfs(j, i);\n\t\t\tans1[i] = ans1[i] % mod;\n\t\t}\n\t\tans += ans1[i];\n\t\tans = ans % mod;\n\t\tcout << ans << '\\n';\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1554714398,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1129C \u3010Morse Code\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 01 \u5b57\u7b26\u4e32 $s$ \uff0c\u6c42\u5176\u6240\u6709\u524d\u7f00\u4e2d\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u53ef\u4ee5\u89e3\u7801\u6210\u5408\u6cd5\u7684 **\u5b57\u6bcd** \u4e32\uff0c\u6309\u7167\u524d\u7f00\u7684\u957f\u5ea6\u4ece $1$ \u5230 $n$ \u8f93\u51fa\u7b54\u6848\u3002\n\n\u7b54\u6848\u53d6\u6a21 $10^9+7$ \u3002\n\n\u4e00\u4e2a\u5b57\u7b26\u4e32 $p$ \u53ef\u4ee5\u88ab\u8bd1\u4e3a\u4e00\u4e2a **\u5b57\u6bcd** \u5f53\u4e14\u4ec5\u5f53 $1\\le |s|\\le 4$ \u4e14 $p$ \u4e0d\u7b49\u4e8e $0011,0101,1110$ \u6216 $1111$ \u3002\n\n\u4e00\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u88ab\u8bd1\u4e3a\u4e00\u4e2a **\u5b57\u6bcd** \u4e32\u5f53\u4e14\u4ec5\u5f53\u5176\u53ef\u4ee5\u88ab\u5206\u4e3a\u82e5\u5e72\u4e2a\u90e8\u5206\uff0c\u8fd9\u4e9b\u90e8\u5206\u90fd\u53ef\u4ee5\u88ab\u8bd1\u4e3a\u4e00\u4e2a **\u5b57\u6bcd** \uff1b\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e0d\u540c\u7684\u5206\u89e3\u65b9\u5f0f\u88ab\u5b9a\u4e49\u4e3a\u5206\u89e3\u65b9\u5f0f\u4e0d\u540c\u3002\n\n$1\\le n\\le 3000$\n\n## \u89e3\u9898\u601d\u8def\n\n### \u8fd9\u662f\u4e00\u4e2a\u62fc\u9898\n\n\u7b80\u5355 DP $+($ \u540e\u7f00\u6570\u7ec4 $+$ \u94fe\u8868 $)$\n\n### \u7b80\u5355 DP\n\n\u5047\u5982\u6211\u4eec\u4e0d\u8981\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u7684\u7b54\u6848\uff0c\u800c\u662f\u6c42\u6240\u6709\u5b50\u4e32\u7684\u7b54\u6848\u3002\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a\u8d77\u70b9\u4f4d\u7f6e $x$ \uff0c\u8bb0 $f(x,i)$ \u4e3a\u4ece\u8d77\u70b9\u4f4d\u7f6e $x$ \u5230\u4f4d\u7f6e $i$ \u6240\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u7684\u4e0d\u540c\u5206\u89e3\u65b9\u5f0f\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5408\u6cd5\u7684\u5b57\u6bcd\u5bf9\u5e94\u7684 01 \u4e32 $p$ \uff0c\u6709 $f(x,i)=\\sum f(x,i-|p|)$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a DP \uff0c\u6c42\u51fa\u6240\u6709 $f$ \u7684\u503c\u3002\n\n\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u3002\n\n### \u540e\u7f00\u6570\u7ec4\n\n\u4f46\u662f\u8003\u8651\u5230\u6211\u4eec\u8981\u6c42\u7684\u662f\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u7684\u7b54\u6848\uff0c\u6211\u4eec\u5bf9\u5b57\u7b26\u4e32 $s$ \u8fdb\u884c\u540e\u7f00\u6392\u5e8f\uff0c\u4ece\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u548c\u540e\u7f00\u6392\u5e8f\u4f4d\u7f6e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u7684 $LCP$ \u4e4b\u540e\u7684\u4e0d\u540c\u524d\u7f00\u3002\u90a3\u4e48\u6211\u4eec\u5728\u7edf\u8ba1\u7684\u65f6\u5019\u53ea\u9700\u8ba1\u7b97 $\\sum_{i=sa_x+h_x}^n f(sa_x,i)$ \u7684\u503c\u5373\u53ef\u3002\n\n\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log_2 n+n^2)$\n\n### \u94fe\u8868\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8981\u6c42\u7684\u503c\u662f\u7ed9\u5b9a\u5b57\u7b26\u4e32\u524d\u7f00\u7684\u7b54\u6848\u3002\u6211\u4eec\u7ffb\u8f6c\u539f\u5b57\u7b26\u4e32 $s$ \uff0c\u5c06\u5176\u540e\u7f00\uff08\u5373\u539f\u4e32\u7684\u524d\u7f00\uff09\u4ece\u540e\u7f00\u6570\u7ec4\u4e2d\u5220\u9664\uff0c\u5e76\u7ef4\u62a4\u76f8\u90bb\u7684 $LCP$ \u503c\uff0c\u91cd\u65b0\u8ba1\u7b97\u589e\u52a0\u503c\u3002\n\n\u6211\u4eec\u7528\u94fe\u8868\u7ef4\u62a4\u8fd9\u4e2a\u64cd\u4f5c\u3002\u9996\u5148\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u5728\u540e\u7f00\u6392\u5e8f\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5220\u9664\u8be5\u4f4d\u7f6e\u65f6\uff0c\u5408\u5e76\u5176\u5411\u5de6\u548c\u5411\u53f3\u7684\u4e24\u4e2a $LCP$ \u503c\uff0c\u5373\u53d6\u6700\u5c0f\u503c\uff0c\u7136\u540e\u52a0\u4e0a\u4e00\u4e9b\u4e4b\u524d\u6ca1\u6709\u8ba1\u7b97\u8fc7\u7684\u503c\u3002\u7531\u4e8e\u6bcf\u4e2a\u503c\u53ea\u4f1a\u88ab\u52a0\u4e0a\u6216\u51cf\u53bb\u90fd\u6700\u591a\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e3a $O(n^2)$\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$ \u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=3010;\nconst int mod=1000000007;\nint n,m,sa[maxn],x[maxn],y[maxn],c[maxn],rnk[maxn],h[maxn];\nint s[maxn],f[maxn][maxn],ans[maxn],tot[maxn],r[maxn];\nstruct node\n{\n\tint lft,rgt,lv,rv;\n}ss[maxn];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=n;i>=1;i--)scanf(\"%d\",s+i);\n\tm=2;\n\tfor(int i=1;i<=n;i++)x[i]=s[i];\n\tfor(int i=0;i<=m;i++)c[i]=0;\n\tfor(int i=1;i<=n;i++)c[x[i]]++;\n\tfor(int i=1;i<=m;i++)c[i]+=c[i-1];\n\tfor(int i=n;i>=1;i--)sa[c[x[i]]--]=i;\n\tfor(int k=1,cur;k<=n;k<<=1)\n\t{\n\t\tcur=0;\n\t\tfor(int i=n;i>n-k;i--)y[++cur]=i;\n\t\tfor(int i=1;i<=n;i++)if(sa[i]>k)y[++cur]=sa[i]-k;\n\t\tfor(int i=0;i<=m;i++)c[i]=0;\n\t\tfor(int i=1;i<=n;i++)c[x[i]]++;\n\t\tfor(int i=1;i<=m;i++)c[i]+=c[i-1];\n\t\tfor(int i=n;i>=1;i--)sa[c[x[y[i]]]--]=y[i];\n\t\tcur=y[sa[1]]=1;\n\t\tfor(int i=2;i<=n;i++)\n\t\t{\n\t\t\tint a,b;\n\t\t\ta=sa[i]+k>n?-1:x[sa[i]+k];\n\t\t\tb=sa[i-1]+k>n?-1:x[sa[i-1]+k];\n\t\t\ty[sa[i]]=(x[sa[i]]==x[sa[i-1]])&&(a==b)?cur:(++cur);\n\t\t}\n\t\tswap(x,y);\n\t\tif(cur>=n)break;\n\t\tm=cur;\n\t}\n\tfor(int i=1;i<=n;i++)rnk[sa[i]]=i;\n\tint nww=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(rnk[i]==1)continue;\n\t\tif(nww)nww--;\n\t\twhile(i+nww<=n&&sa[rnk[i]-1]+nww<=n&&s[i+nww]==s[sa[rnk[i]-1]+nww])nww++;\n\t\th[rnk[i]]=nww;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tf[i][i]=1;\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tfor(int k=max(i,j-3);k<=j;k++)//[k,j]\n\t\t\t{\n\t\t\t\tbool tf=true;\n\t\t\t\tif(k==j-3)\n\t\t\t\t{\n\t\t\t\t\tif(s[j-3]==1&&s[j-2]==1&&s[j-1]==1&&s[j]==1)tf=false;\n\t\t\t\t\tif(s[j-3]==1&&s[j-2]==1&&s[j-1]==0&&s[j]==0)tf=false;\n\t\t\t\t\tif(s[j-3]==1&&s[j-2]==0&&s[j-1]==1&&s[j]==0)tf=false;\n\t\t\t\t\tif(s[j-3]==0&&s[j-2]==1&&s[j-1]==1&&s[j]==1)tf=false;\n\t\t\t\t}\n\t\t\t\tif(tf)\n\t\t\t\t{\n\t\t\t\t\tf[i][j]+=(k==i?1:f[i][k-1]);\n\t\t\t\t\tf[i][j]%=mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)for(int j=sa[i]+h[i];j<=n;j++)\n\tans[1]+=f[sa[i]][j],ans[1]%=mod,tot[sa[i]]+=f[sa[i]][j],tot[sa[i]]%=mod;\n\tfor(int i=1;i<=n;i++)r[sa[i]]=sa[i]+h[i];\n\tsa[n+1]=n+1;\n\tfor(int i=1;i<=n;i++)ss[sa[i]].lft=sa[i-1],ss[sa[i]].lv=h[i],ss[sa[i]].rgt=sa[i+1],ss[sa[i]].rv=h[i+1];\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tans[i]=(ans[i-1]-tot[i-1]+mod)%mod;\n\t\tss[ss[i-1].lft].rgt=ss[i-1].rgt;\n\t\tss[ss[i-1].rgt].lft=ss[i-1].lft;\n\t\tint minn=min(ss[i-1].rv,ss[i-1].lv);\n\t\tif(ss[i-1].rv!=minn)\n\t\t{\n\t\t\tfor(int j=ss[i-1].rgt+minn;j<r[ss[i-1].rgt];j++)\n\t\t\tans[i]+=f[ss[i-1].rgt][j],ans[i]%=mod,\n\t\t\ttot[ss[i-1].rgt]+=f[ss[i-1].rgt][j],tot[ss[i-1].rgt]%=mod;\n\t\t\tr[ss[i-1].rgt]=ss[i-1].rgt+minn;\n\t\t}\n\t\tss[ss[i-1].lft].rv=minn;\n\t\tss[ss[i-1].rgt].lv=minn;\n\t}\n\tfor(int i=n;i>=1;i--)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1552393275,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1129C \u3010Morse Code\u3011"
    },
    {
        "content": "[\u5b98\u65b9\u9898\u89e3](https://codeforces.com/blog/entry/65520)\u7ed9\u4e86\u4e00\u4e2a\u79bb\u7ebf\u505a\u6cd5\uff0c\u800c\u4e14\u662f$O(m^2+m^2logm)$\u7684\uff0c\u6211\u7684\u505a\u6cd5\u662f\u5728\u7ebf\u7684$O(m^2)$\u3002\u6211\u662f\u7528Trie\u6811\u505a\u54d2\uff0c\u78b0\u5230\u5b50\u5e8f\u5217\u5b50\u4e32\u4e4b\u7c7b\u7684\u95ee\u9898\u6709\u65f6\u5019\u60f3\u60f3Trie\u6811\u4f1a\u6709\u5947\u6548\u5594QAQ\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0d\u540c\u76840/1\u5b50\u5e8f\u5217\u7b54\u6848\u4e0d\u4f1a\u91cd\u590d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5bf9\u6240\u6709\u4e0d\u540c\u7684\u76840/1\u5b50\u5e8f\u5217\u8ba1\u7b97\u6709\u591a\u5c11\u79cd\u82f1\u6587\u521a\u597d\u6784\u6210\u8fd9\u4e2a\u5b50\u5e8f\u5217\u3002\u800cTrie\u6811\u4e0a\u4e0d\u4f1a\u6709\u76f8\u540c\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e8e\u662f\u81ea\u7136\u60f3\u5230\u4e86\u5bf9\u5f53\u524d\u7684$i$\u4f4d0/1\u4e32\u7684\u6240\u6709\u5b50\u5e8f\u5217\u4e00\u8d77\u5efa\u4e00\u68f5Trie\u6811\u3002\u6bcf\u6b21\u65b0\u589e\u4e00\u4f4d\u65f6\uff0c\u53ea\u9700\u8981\u5728\u4e4b\u524d\u7684\u7b54\u6848\u4e0a\u518d\u52a0\u4e0a\u6240\u6709\u540e\u7f00\u7684\u7b54\u6848\u5c31\u884c\u4e86\u3002\u8fd9\u4e9b\u65b0\u540e\u7f00\u90fd\u8981\u88ab\u52a0\u5165Trie\u6811\u3002\n\n\u7528$anc[x]$\u8868\u793a\u7ed3\u70b9\u7684\u7236\u4eb2\u7ed3\u70b9\uff0c$f[x]$\u8868\u793a\u4ece\u6839\u5230\u7ed3\u70b9$x$\u7684\u8fd9\u4e2a0/1\u4e32\u6709\u591a\u5c11\u79cd\u82f1\u6587\u6784\u6210\u3002\u5047\u8bbe\u5f53\u524d\u8981\u5728Trie\u6811\u4e0a\u52a0\u5165\u539f\u4e32\u4e2d\u7b2c$i$\u4e2a0/1\uff0ca\u6570\u7ec4\u4e2d\u8bb0\u5f55\u7684\u5c31\u662fTrie\u6811\u4e2d\u8868\u793a\u539f\u4e32\u7b2c$i-1$\u4f4d\u7684\u90a3\u4e9b\u70b9\u3002\u6211\u4eec\u53ea\u9700\u8981\u5728\u8fd9\u4e9b\u70b9\u7684\u513f\u5b50\u52a0\u4e0a\u7b2c$i$\u4f4d\uff0c\u5c31\u53ef\u4ee5\u6784\u6210\u6240\u6709\u540e\u7f00\u4e86\u3002\u6bcf\u6b21\u5728Trie\u6811\u4e0a\u65b0\u52a0\u4e00\u4e2a\u70b9$x$\uff0c\u53ef\u4ee5\u7528DP\u7684\u65b9\u6cd5$O(1)$\u8ba1\u7b97$f[x]$\uff0c\u518d$ans+=f[x]$\u5c31\u884c\u4e86\n\n\u8fd8\u6709\u4e00\u79cd\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u628a\u5f53\u524d\u4e32\u53cd\u5411\u518d\u63d2\u5165Trie\u6811\uff0c\u4e0d\u8fc7\u5f53\u65f6\u672c\u849f\u84bb\u5e76\u6ca1\u6709\u60f3\u5230\u3002\u3002\n\n\u535a\u4e3b\u8bed\u6587\u592a\u70c2\u4e86\uff0c\u611f\u89c9\u8bb2\u5f97\u53ef\u80fd\u4e0d\u592a\u6e05\u695a\uff0c\u5177\u4f53\u6709\u4ec0\u4e48\u4e0d\u61c2\u7684\u53ef\u4ee5\u7559\u8a00\uff5e[CSDN](https://blog.csdn.net/ymzqwq/article/details/88311549)\u4e0a\u56de\u590d\u53ef\u80fd\u4f1a\u6bd4\u8f83\u53ca\u65f6\uff0c\u5927\u5bb6\u591a\u591a\u5305\u6db5QAQ\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define fr(i,x,y) for(int i=(x);i<=(y);i++)\n#define rf(i,x,y) for(int i=(x);i>=(y);i--)\n#define frl(i,x,y) for(int i=(x);i<(y);i++)\n#define do_nothing 233\nusing namespace std;\nconst int N=3005;\nconst int p=1e9+7;\nint n;\nint trie[N*N][2],cnt,anc[N*N],f[N*N];\nint ans;\nint a[N],m;\n\nvoid read(int &x){\n\tchar ch=getchar();x=0;\n\tfor(;ch<'0'||ch>'9';ch=getchar());\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n}\n\nvoid Add(int &x,int y){  //\u624b\u52a8\u53d6\u6a21\n\tx+=y;\n\twhile(x>=p) x-=p;\n}\n\nvoid add(int x,int d){  //\u5728trie\u6811\u4e0a\u65b0\u589e\u4e00\u4e2a\u7ed3\u70b9\n\ttrie[x][d]=++cnt;\n\tanc[cnt]=x;\n\tint tmp=cnt,s=0,ss=0;\n\tfr(i,1,4){  //DP\uff0c\u679a\u4e3e\u6700\u540e\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u5360\u51e0\u4e2a0/1\n\t\tint ff=anc[tmp];\n\t\tif (trie[ff][0]==tmp) s=0;else s=1;\n\t\tss+=s<<(i-1);\n\t\ttmp=ff;\n\t\tif (i==4&&(ss==3||ss==5||ss==14||ss==15)) do_nothing;\n\t\t else Add(f[cnt],f[tmp]);\n\t\tif (tmp==0) break;\n\t}\n\tAdd(ans,f[cnt]);\n}\n\nvoid ins(int x){  //\u5728trie\u6811\u4e0a\u52a0\u5165\u6240\u6709\u540e\u7f00\n\ta[++m]=0;\n\tfr(i,1,m){\n\t\tint tmp=a[i];\n\t\tif (!trie[tmp][x]) add(tmp,x);\n\t\ta[i]=trie[tmp][x];\n\t}\n}\n\nint main(){\n\tread(n);\n\tint x;\n\tf[0]=1;\n\tfr(i,1,n){\n\t\tread(x);\n\t\tins(x);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1551946547,
        "uid": 6174,
        "name": "\u591c\u732b\u5b50\u9a71\u868a\u5668",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1129C \u3010Morse Code\u3011"
    }
]