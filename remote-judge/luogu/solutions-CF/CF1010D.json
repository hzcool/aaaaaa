[
    {
        "content": "\u8fd9\u5c31\u662f\u4e00\u9053\u6c34\u6c34\u7684\u5c0f\u6c34\u9898\u554a\uff0c\u4e0d\u81f3\u4e8e\u6210\u4e3a\u4e00\u4e2a\u9ed1\u9898\u5427\u3002\u3002\u3002\uff08\u665a\u4e0a\u6253CF\u7684\u65f6\u5019\u4e00\u773c\u79d2\u554a\u3002\u3002\u3002\uff09  \n\u8003\u8651\u4e00\u4e0b\u6240\u6709\u7684\u64cd\u4f5c\uff0c\u9664\u53bb$or$\u548c$and$\uff0c\u5176\u5b83\u7684\u64cd\u4f5c\u5982\u679c\u5f53\u524d\u8282\u70b9\u53d6\u53cd\u7684\u8bdd\u90a3\u4e48\u7b54\u6848\u4e00\u5b9a\u4f1a\u53d6\u53cd\uff0c\u800c$or$\u548c$and$\u5bfc\u81f4\u7b54\u6848\u4e0d\u53d8\u7684\u60c5\u51b5\u5f53\u4e14\u4ec5\u5f53$or$\u7684\u4e00\u4e2a\u513f\u5b50\u4e3a$1$\u6216\u8005$and$\u7684\u4e00\u4e2a\u513f\u5b50\u4e3a$0$\u3002  \n\u6240\u4ee5\uff0c\u5148\u6c42\u51fa\u5728\u4e0d\u6539\u53d8\u7684\u60c5\u51b5\u4e0b\u6240\u6709\u8282\u70b9\u7684\u503c\u3002\u7136\u540e\u4f9d\u6b21$check$\u6240\u6709\u7684$or$\u548c$and$\uff0c\u5982\u679c\u6709\u4e0a\u8ff0\u4e0d\u4f1a\u6539\u53d8\u7684\u60c5\u51b5\uff0c\u5c31\u7ed9\u53e6\u5916\u4e00\u4e2a\u5b50\u6811\u6253\u4e0a\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u5b50\u6811\u5185\u65e0\u8bba\u600e\u4e48\u53d8\u5316\u7b54\u6848\u90fd\u4e0d\u4f1a\u6539\u53d8\uff0c\u6700\u540e\u679a\u4e3e\u6240\u6709$input$\u8282\u70b9\u76f4\u63a5$check$\u6709\u6ca1\u6709\u6807\u8bb0\uff0c\u8f93\u51fa\u5bf9\u5e94\u7684\u7b54\u6848\u5c31\u597d\u4e86\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\n#define ll long long\n#define RG register\n#define MAX 1001000\ninline int read()\n{\n    RG int x=0,t=1;RG char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n    if(ch=='-')t=-1,ch=getchar();\n    while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nint n;\nchar ch[20];\nstruct Line{int v,next;}e[MAX<<1];\nint h[MAX],cnt=1;\ninline void Add(int u,int v){e[cnt]=(Line){v,h[u]};h[u]=cnt++;}\nint p[MAX],c[MAX],fa[MAX],tag[MAX];\nvoid dfs(int u,int ff)\n{\n    fa[u]=ff;int son[5],tot=0;\n    for(int i=h[u];i;i=e[i].next)\n        if(e[i].v!=ff)son[++tot]=e[i].v,dfs(e[i].v,u);\n    if(p[u]==0)return;\n    if(p[u]==1)c[u]=c[son[1]]&c[son[2]];\n    if(p[u]==2)c[u]=c[son[1]]^1;\n    if(p[u]==3)c[u]=c[son[1]]|c[son[2]];\n    if(p[u]==4)c[u]=c[son[1]]^c[son[2]];\n    if(p[u]==1)\n    {\n        int x=son[1],y=son[2];\n        if(!c[x])tag[y]=1;if(!c[y])tag[x]=1;\n    }\n    if(p[u]==3)\n    {\n        int x=son[1],y=son[2];\n        if(c[x])tag[y]=1;if(c[y])tag[x]=1;\n    }\n}\nvoid dfs2(int u,int ff)\n{\n    tag[u]|=tag[ff];\n    for(int i=h[u];i;i=e[i].next)\n        if(e[i].v!=ff)dfs2(e[i].v,u);\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%s\",ch);\n        if(ch[0]=='A')p[i]=1,Add(i,read()),Add(i,read());\n        if(ch[0]=='I')p[i]=0,c[i]=read();\n        if(ch[0]=='N')p[i]=2,Add(i,read());\n        if(ch[0]=='O')p[i]=3,Add(i,read()),Add(i,read());\n        if(ch[0]=='X')p[i]=4,Add(i,read()),Add(i,read());\n    }\n    dfs(1,0);dfs2(1,0);\n    for(int i=1;i<=n;++i)\n        if(p[i]==0)\n        {\n            if(tag[i])putchar(48+c[1]);\n            else putchar(48+(c[1]^1));\n        }\n    puts(\"\");return 0;\n}\n```",
        "postTime": 1532853709,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1010D \u3010Mars rover\u3011"
    },
    {
        "content": "\n# \u9898\u89e3\uff1a\n\n~~2019.10.24\u6a21\u62df\u8d5bT2 30\u5206\u66b4\u529b\u573a~~\n\n### \u5199\u5728\u524d\u9762\n\n\u770b\u4e86\u5176\u4ed6\u4eba\u7684\u9898\u89e3\uff0c\u975e\u5e38\u7684\u96be\u53d7\u3002\n\n\u89c1\u8fc7\u4e00\u4e9b\u5927\u4f6c\u7684\u7b7e\u540d\u662f\u8fd9\u4e48\u5199\u7684\uff1a**\u60f3\u8981\u53d8\u5f97\u725bX\uff0c\u5f97\u5148\u628a\u81ea\u5df1\u5f53\u6210\u50bbX**\u3002\n\n\u7279\u522b\u559c\u6b22\u8fd9\u53e5\u8bdd\uff0c\u867d\u7136\u6709\u4e9b\u7c97\u9119\u3002\n\n\u8bf7\u4e0d\u8981\u628a\u81ea\u5df1\u4f1a\u505a\u7684\u9898\u90fd\u5f52\u4e3a\u50bbX\u9898\u3002\u4e0d\u8bba\u8fd9\u9053\u9898\u662f\u4e0d\u662f\u771f\u7684\u90a3\u4e48\u7b80\u5355\u3002\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u548c\u6bcf\u9053\u9898\u76ee\u90fd\u9700\u8981\u8db3\u591f\u7684\u5c0a\u91cd\u3002\u5927\u5bb6\u90fd\u5e74\u8f7b\u8fc7\uff0c\u90fd\u66fe\u7ecf\u4ece\u96f6\u5f00\u59cb\u3002\u8bf7\u60f3\u4e00\u60f3\u90a3\u65f6\u7684\u81ea\u5df1\u770b\u5230\u81ea\u5df1\u73b0\u5728\u7684\u7f6e\u8bc4\u65f6\u4f1a\u662f\u4ec0\u4e48\u611f\u89c9\u3002\n\n\u8fd9\u4e5f\u662f\u6211\u6765\u53d1\u8fd9\u7bc7\u9898\u89e3\u7684\u539f\u56e0\u3002\n\n## \u6b63\u6587\n\n\u66b4\u529b\u5206\u53ea\u8981\u7406\u89e3\u597d\u9898\u610f\u5c31\u53ef\u4ee5\u62ff\uff1a\u53ef\u4ee5\u770b\u51fa\u6765\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6df1\u641c\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u4e00\u4e2a\u7ed3\u6784\u4f53\uff1a\u64cd\u4f5c\u3001\u5de6\u53f3\u513f\u5b50\u3002\uff08\u53f6\u5b50\u8282\u70b9\u7684\u8bdd\u5b58\u503c\uff09\uff0c\u7136\u540e\u76f4\u63a5\u5f00\u641c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f$O(n^2)$\u7684\uff0c\u5927\u7ea6\u53ea\u80fd\u8fc730\u5206...\uff08\u6a21\u7cca.jpg\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u8003\u573a\u7248\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nconst int maxn=1e6+10;\nint n;\nstruct node\n{\n    char opt[10];\n    int a,b;\n}t[maxn];\nint dfs(int x)\n{\n    if(t[x].opt[1]=='A')\n        return dfs(t[x].a)&dfs(t[x].b);\n    else if(t[x].opt[1]=='O')\n        return dfs(t[x].a)|dfs(t[x].b);\n    else if(t[x].opt[1]=='X')\n        return dfs(t[x].a)^dfs(t[x].b);\n    else if(t[x].opt[1]=='N')\n        return !dfs(t[x].a);\n    else\n        return t[x].a;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",t[i].opt+1);\n        if(t[i].opt[1]=='A' || t[i].opt[1]=='X' || t[i].opt[1]=='O')\n            scanf(\"%d%d\",&t[i].a,&t[i].b);\n        else\n            scanf(\"%d\",&t[i].a);\n    }\n    for(int i=1;i<=n;i++)\n        if(t[i].opt[1]=='I')\n        {\n            t[i].a=!t[i].a;\n            printf(\"%d\",dfs(1));\n            t[i].a=!t[i].a;\n        }\n    return 0;\n}\n```\n\n\n\n\u6211\u4eec\u91cd\u65b0\u6765\u770b\u8fd9\u9053\u9898\u3002\u6570\u636e\u662f$10^6$\u7684\uff0c\u8fd9\u662f$O(n)$\u6216$O(nlogn)$\u7684\u6570\u636e\u8303\u56f4\uff0c$O(n)$\u505a\u6cd5\u6bd4\u8f83\u4e0d\u73b0\u5b9e\uff0c\u6211\u4eec\u7528$log$\u7684\u3002\u4e00\u770b$log$\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u5e94\u8be5\u60f3\u5230\u548c\u4e8c\u6709\u5173\u7684\u4e00\u4e9b\u6280\u5de7\u3001\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u500d\u589e\u3001\u6811\u5f62\u7ed3\u6784\u7b49\u7b49\u3002\u518d\u7ed3\u5408\u8fd9\u9053\u9898\u7684\u9898\u76ee\uff1a\u5e94\u8be5\u5c31\u662f\u6811\u5f62\u7ed3\u6784\u3002\n\n\u5e26\u7740\u8fd9\u4e2a\u5e7b\u60f3\uff0c\u6211\u4eec\u5f00\u59cb\u91cd\u65b0\u5ba1\u9898\uff1a\u8fd9\u662f\u4e00\u68f5\u201c\u8fd0\u7b97\u6811\u201d\u3002\u624b\u63a8\u51e0\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff1a\u5982\u679c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u88ab\u66f4\u6539\u5f71\u54cd\u5230\uff0c\u90a3\u4e48\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u94fe\uff08\u8fd9\u4e2a\u94fe\u662f\u552f\u4e00\u7684\uff09\u7684\u6240\u6709\u503c\u90fd\u4f1a\u88ab\u53d6\u53cd\u3002\u90a3\u4e48\u6211\u4eec\u6765\u770b\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u5f53\u64cd\u4f5c\u4e3a\u975e\u6216\u8005\u5f02\u6216\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u4f1a\u88ab\u53d6\u53cd\uff08\u4efb\u610f\u4e00\u4e2a\u513f\u5b50\u88ab\u4fee\u6539\u5373\u53ef\uff09\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u64cd\u4f5c\u4e3a\u4e0e\u6216\u6216\uff0c\u5fc5\u987b\u4e24\u4e2a\u513f\u5b50\u7684\u503c\u90fd\u88ab\u4fee\u6539\uff0c\u624d\u80fd\u88ab\u53d6\u53cd\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\uff1a\u5728\u6bcf\u4e2a\u8282\u70b9\u52a0\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u4f1a\u4e0d\u4f1a\u968f\u7740\u513f\u5b50\u8282\u70b9\u7684\u6743\u503c\u53d8\u5316\u800c\u53d8\u5316\uff1a\u5982\u679c\u8fd9\u4e2a\u6570\u7ec4\u7684\u503c\u4e3a1\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u4f1a\u968f\u7740\u513f\u5b50\u7684\u503c\u53d8\u5316\u800c\u53d8\u5316\uff0c\u4e3a0\u5219\u76f8\u53cd\u3002\u7136\u540e\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u8fc7\u7a0b\uff1a\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u4e3a0\uff0c\u90a3\u4e48\u5c31\u628a\u5176\u6240\u6709\u5b50\u8282\u70b9\u7684\u6807\u8bb0\u5168\u7f6e\u62100\uff08\u5219\u65e0\u8bba\u600e\u4e48\u6539\u90fd\u4e0d\u4f1a\u5bf9\u5176\u9020\u6210\u5f71\u54cd\uff09\u3002\u53cd\u4e4b\u5c31\u4e0b\u4f20\u6807\u8bb0\uff08\u7ee7\u7eed\u5224\u4e0b\u9762\u7684\u513f\u5b50\u4eec\uff09\n\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=1e6+10;\nint n,ans[maxn],opt[maxn],son[maxn][2],val[maxn];\nbool v[maxn];\nint turn(char s[])\n{\n    if(s[0]=='I') \n        return 1;\n    if(s[0]=='N') \n        return 2;\n    if(s[0]=='O') \n        return 3;\n    if(s[0]=='A') \n        return 4;\n    if(s[0]=='X') \n        return 5;\n}\nint dfs1(int u)\n{\n    if(opt[u]==1) \n        return val[u];\n    if(opt[u]==2) \n        return(val[u]=!dfs1(son[u][0]));\n    if(opt[u]==3) \n        return(val[u]=(dfs1(son[u][0])|dfs1(son[u][1])));\n    if(opt[u]==4) \n        return(val[u]=(dfs1(son[u][0])&dfs1(son[u][1])));\n    if(opt[u]==5) \n        return(val[u]=(dfs1(son[u][0])^dfs1(son[u][1])));\n}\nvoid dfs2(int u)\n{\n    if(v[u]==0) \n        v[son[u][0]]=v[son[u][1]]=0;\n    else\n    {\n        switch(opt[u])\n        {\n            case 2:\n                v[son[u][0]]=1;\n                break;\n            case 3:\n                if(val[son[u][0]]) \n                    v[son[u][1]]=0;\n                else \n                    v[son[u][1]]=1;\n                if(val[son[u][1]]) \n                    v[son[u][0]]=0;\n                else \n                    v[son[u][0]]=1;\n                break;\n            case 4:\n                if(!val[son[u][0]])\n                    v[son[u][1]]=0;\n                else \n                    v[son[u][1]]=1;\n                if(!val[son[u][1]]) \n                    v[son[u][0]]=0;\n                else \n                    v[son[u][0]]=1;\n                break;\n            case 5:\n                v[son[u][0]]=v[son[u][1]]=1; \n                break;\n        }\n    }\n    v[0]=0;\n    if(son[u][0]) \n        dfs2(son[u][0]);\n    if(son[u][1]) \n        dfs2(son[u][1]);\n}\nint main()\n{\n    memset(v,1,sizeof(v));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        char s[10]; \n        scanf(\"%s\",s);\n        opt[i]=turn(s);\n        if(opt[i]==1)\n            scanf(\"%d\",&val[i]);\n        else if(opt[i]==2) \n            scanf(\"%d\",&son[i][0]);\n        else \n            scanf(\"%d%d\",&son[i][0],&son[i][1]);\n    }\n    dfs1(1);\n    v[1]=1;\n    dfs2(1);\n    for(int i=1;i<=n;i++) \n        if(opt[i]==1)  \n            printf(\"%d\",val[1]^v[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1571902303,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1010D \u3010Mars rover\u3011"
    },
    {
        "content": "\u666e\u53ca\u7ec4\u9009\u624b\u5c31\u9002\u5408\u5199\u666e\u53ca\u7ec4\u9898\u89e3\u3002\n\n\u7531\u4e8e\u53ea\u4fee\u6539\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8003\u8651\u4fee\u6539\u8fd9\u4e2a\u503c\u540e\u5bf9\u6839\u8282\u70b9\u662f\u5426\u4f1a\u6709\u5f71\u54cd\u3002\n\n\u663e\u7136\u5982\u679c\u5728 `AND` \u7684\u65f6\u5019\u6ee1\u8db3\u5de6\u513f\u5b50\u7684\u503c\u4e3a `0`\uff0c\u90a3\u4e48\u53f3\u513f\u5b50\u5b50\u6811\u4e2d\u6240\u6709\u7684\u70b9\u4fee\u6539\u540e\u5bf9\u6839\u8282\u70b9\u90fd\u6ca1\u6709\u5f71\u54cd\u3002\u53f3\u513f\u5b50\u540c\u7406\u3002`OR` \u7684\u65f6\u5019\u540c\u7406\u3002\n\n\u90a3\u4e48\u8003\u8651\u6309\u7167\u8fd9\u79cd\u65b9\u5f0f\u7ed9\u70b9\u6253\u4e00\u4e2a\u5e9f\u7269\u6807\u7b7e $fw_i$\uff0c\u5982\u679c $f_i=1$ \u8868\u793a\u8fd9\u4e2a\u70b9\u5b50\u6811\u4e2d\u6240\u6709\u7684\u70b9\u4fee\u6539\u540e\u5bf9\u6839\u8282\u70b9\u90fd\u6ca1\u6709\u5f71\u54cd\uff0c\u901a\u8fc7\u518d\u4e00\u6b21 `dfs` \u628a\u5e9f\u7269\u6807\u7b7e\u4e0b\u4f20\u5373\u53ef\u3002\n\n\u4e0d\u61c2\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u4f5c\u4e3a\u666e\u53ca\u7ec4\u9898\u76ee\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+5;\nint fw[N],n,val[N],opt[N];\nint ch[N][2];\nvoid redfs(int x){\n\tif(fw[x]){\n\t\tif(ch[x][0]) fw[ch[x][0]]=1,redfs(ch[x][0]);\n\t\tif(ch[x][1]) fw[ch[x][1]]=1,redfs(ch[x][1]);\n\t\treturn;\n\t}\n\tif(ch[x][0]) redfs(ch[x][0]);\n\tif(ch[x][1]) redfs(ch[x][1]);\n}\nvoid dfs(int x){\n//\tcout<<x<<endl;\n\tif(opt[x]==0) return;\n\tint i=x;\n\tif(opt[x]==1){\n\t\tdfs(ch[i][0]),dfs(ch[i][1]);\n\t\tif(val[ch[i][0]]==0) fw[ch[i][1]]=1;\n\t\tif(val[ch[i][1]]==0) fw[ch[i][0]]=1;\n\t\tval[x]=val[ch[i][0]]&val[ch[i][1]];\n\t\t//if(x==10) cout<<val[x]<<\" \"<<val[ch[i][0]]<<\" \"<<val[ch[i][1]]<<endl;\n\t\treturn;\t\n\t} \n\tif(opt[x]==2){\n\t\tdfs(ch[i][0]),dfs(ch[i][1]);\n\t\tval[x]=val[ch[i][0]]^val[ch[i][1]];\t\n\t\treturn;\t\n\t}\n\tif(opt[x]==3){\n\t\tdfs(ch[i][0]),dfs(ch[i][1]);\n\t\tif(val[ch[i][0]]==1) fw[ch[i][1]]=1;\n\t\tif(val[ch[i][1]]==1) fw[ch[i][0]]=1;\n\t\tval[x]=val[ch[i][0]]|val[ch[i][1]];\t\n\t\treturn;\t\n\t}\t\n\tdfs(ch[i][0]);\n\tval[x]=!val[ch[i][0]];\n}\nsigned main(){\n\tcin>>n;\n\tchar s[10];\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>s;\n\t\tif(s[0]=='I') opt[i]=0,cin>>val[i];\n\t\tif(s[0]=='A') opt[i]=1,cin>>ch[i][0]>>ch[i][1];\n\t\tif(s[0]=='X') opt[i]=2,cin>>ch[i][0]>>ch[i][1];\n\t\tif(s[0]=='O') opt[i]=3,cin>>ch[i][0]>>ch[i][1];\n\t\tif(s[0]=='N') opt[i]=4,cin>>ch[i][0];\n\t}\n\tdfs(1);\n\tredfs(1);\n//\tfor(int i=1;i<=n;++i)\n//\t\tcout<<i<<\" \"<<val[i]<<endl;\n//\tcout<<val[1]<<endl;\n\tfor(int i=1;i<=n;++i)\n\t\tif(opt[i]==0) cout<<(val[1]^fw[i]^1);\n\treturn 0;\n} \n```\n",
        "postTime": 1605614021,
        "uid": 344016,
        "name": "wurzang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1010D \u3010Mars rover\u3011"
    },
    {
        "content": "\u9996\u5148\u66b4\u529b$n^2$\u5bf9\u4e8e$n \\le 10^6$\u80af\u5b9a\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\n\n\u6240\u4ee5\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u4e86**\u5efa\u6811**\u3002\n\n\u601d\u8def\uff1a\n\n1. \u5efa\u6811\uff1a\u628a\u6bcf\u4e00\u4e2a\u8fd0\u7b97\u7b26\u770b\u4f5c\u662f\u4e00\u68f5\u6811\u7684\u6839\uff0c\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u5c31\u662f\u8981\u8fdb\u884c\u8fd0\u7b97\u7684\u5b50\u6811\uff08\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff09\uff0c\u53f6\u8282\u70b9\u5c31\u662fIN\uff0c\u5f53\u7136\uff0cNOT\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u68f5\u6811\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\u3002\n\ncode:\n\n```c\nvoid read()\n{\n\tint x,y;\n\tchar c,a;\n\tfor(int k = 1;k <= n;k++)\n\t{\n\t\twhile(!isalpha((c = getchar())));\n\t\tif(c == 'I')\n\t\t{\n\t\t\ta = getchar();\n\t\t\ta = getchar();\n\t\t\tscanf(\"%d\",&x);\n\t\t\ttr[k] = node(x,0,0);\n\t\t\ts[++m] = k;\n\t\t} \n\t\telse if(c == 'N')\n\t\t{\n\t\t\tfor(int i = 1;i <= 3;i++) a = getchar();\n\t\t\tscanf(\"%d\",&x);\n\t\t\ttr[k] = node(x,0,c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(c == 'O') a = getchar(),a = getchar();\n\t\t\telse\n\t\t\tfor(int i = 1;i <= 3;i++) a = getchar();\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\ttr[k] = node(x,y,c);\n\t\t}\n\t}\n}\n```\n\n\n2. \u6c42\u8fd9\u68f5\u6811\u7684\u503c\uff1a\u53ef\u4ee5\u7528\u6df1\u641c\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u7684\u8fd0\u7b97\u7b26\u662f\uff08AND\u3001OR\u3001XOR\u3001NOT\uff09\u5c31\u8fd4\u56dedfs\uff08\u5de6\u513f\u5b50\uff09\uff08AND\u3001OR\u3001XOR\u3001NOT\uff09dfs\uff08\u53f3\u513f\u5b50\uff09\n\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e0b\u7b2c$i$\u4e2a\u8282\u70b9\u7684\u503c\u3002\n\ncode:\n\n```c\nint dfs(int u)\n{\n\tif(!tr[u].op) return ans[u] = tr[u].l;\n\tif(tr[u].op == 'A') return ans[u] = dfs(tr[u].l) & dfs(tr[u].r);\n\tif(tr[u].op == 'O') return ans[u] = dfs(tr[u].l) | dfs(tr[u].r);\n\tif(tr[u].op == 'X') return ans[u] = dfs(tr[u].l) ^ dfs(tr[u].r);\n\tif(tr[u].op == 'N') return ans[u] = !dfs(tr[u].l);\n}\n```\n\n3. \u5173\u952e\u662f\u6700\u540e\u4e00\u6b65\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u53d6\u53cd\uff0c\u6811\u7684\u503c\u4f1a\u4e0d\u4f1a\u6539\u53d8\u5462\uff1f\n\n\u5148\u63d2\u4e00\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k5bsdv9n.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u503c\u6539\u4e0d\u6539\u53d8\uff0c\u5176\u5b9e\u53d6\u51b3\u4e8e\u5b83\u7684\u5b50\u8282\u70b9\u7684\u503c\u6539\u4e0d\u6539\u53d8\u3002\n\ncode:\n\n```c\nvoid change(int u)\n{\n\tif(!tr[u].op) cg[u] = 1;\n\tif(tr[u].op == 'N') change(tr[u].l);\n\tif(tr[u].op == 'A')\n\t{\n\t\tif(ans[tr[u].l] == 1 && ans[tr[u].r] == 0) change(tr[u].r);\n\t\tif(ans[tr[u].l] == 0 && ans[tr[u].r] == 1) change(tr[u].l);\n\t\tif(ans[tr[u].l] == 1 && ans[tr[u].r] == 1) change(tr[u].l),change(tr[u].r);\n\t}\n\tif(tr[u].op == 'O')\n\t{\n\t\tif(ans[tr[u].l] == 1 && ans[tr[u].r] == 0) change(tr[u].l);\n\t\tif(ans[tr[u].l] == 0 && ans[tr[u].r] == 1) change(tr[u].r);\n\t\tif(ans[tr[u].l] == 0 && ans[tr[u].r] == 0) change(tr[u].l),change(tr[u].r);\n\t}\n\tif(tr[u].op == 'X') change(tr[u].l),change(tr[u].r);\n}\n```\n\n",
        "postTime": 1605535696,
        "uid": 351015,
        "name": "\u65ed\u65e5\u4e34\u7a97",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1010D \u3010Mars rover\u3011"
    },
    {
        "content": "1e6\u6570\u636e\u5927\u5c0f\uff0c\u66b4\u529b\u7684\u8bdd$O(n^{2})$\u80af\u5b9a\u662f\u4e0d\u884c\u7684\u3002\u6240\u4ee5\uff0c\u9996\u5148\u9884\u5904\u7406\u628a\u6574\u68f5\u6811\u5efa\u51fa\u6765\uff0c\u8ba1\u7b97\u4e00\u4e0b\u4e0d\u4fee\u6539\u72b6\u6001\u4e0b\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\uff0c\u65b9\u6cd5\u5f88\u591a\uff0c\u6211\u4f7f\u7528\u4e86\u62d3\u6251\u6392\u5e8f\u3002\u968f\u540e\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u8fdb\u884cdfs\u641c\u7d22\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u513f\u5b50\uff0c\u5224\u65ad\u8fd9\u4e2a\u513f\u5b50\u5f53\u524d\u72b6\u6001\u4e0b\u53ea\u4fee\u6539\u662f\u5426\u4f1a\u5bf9\u4e0a\u65b9\u7ed3\u679c\u53d1\u751f\u6539\u53d8\uff0c\u5982\u679c\u6539\u53d8\u7ee7\u7eed\u641c\u7d22\uff0c\u4e0d\u53d1\u751f\u6539\u53d8\u5c31\u8fd4\u56de\u3002\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f8b\u5982\uff0c0\u4e0e1\u7ecf\u8fc7\u4e0e\u95e8\uff0c1\u53d1\u751f\u6539\u53d8\u80af\u5b9a\u4e0d\u5bf9\u7ed3\u679c\u4ea7\u751f\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u4e3a\u53e6\u4e00\u4e2a\u662f0\uff0c\u7ed3\u679c\u5fc5\u7136\u62110\uff0c\u6240\u4ee5\u4e0b\u65b9\u8f93\u5165\u5373\u4f7f\u53d1\u751f\u53d8\u5316\uff0c\u5bf9\u6700\u7ec8\u7ed3\u679c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff0c\u800c0\u53d1\u751f\u6539\u53d8\uff0c1\u5219\u4f1a\u4f7f\u6700\u7ec8\u7ed3\u679c\u53d1\u751f\u6539\u53d8\uff0c\u56e0\u4e3a\u4e0e\u95e8\u4f1a\u4f7f\u7ed3\u679c\u4ece0\u53d8\u4e3a1\uff0c\u5bf90\u7684\u4e24\u4e2a\u6765\u6e90\u8fdb\u884c\u641c\u7d22\uff0c\u5982\u679c\u641c\u7d22\u5230\u6811\u6839\u7684\u8bdd\u5c31\u8868\u660e\u8fd9\u4e2a\u70b9\u7684\u6539\u53d8\u4f1a\u5f71\u54cd\u5230\u6700\u7ec8\u7ed3\u679c\uff0c\u53cd\u4e4b\u4e0d\u4f1a\uff0c\u6700\u540e\u6309\u987a\u5e8f\u8f93\u51fa\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n```cpp\n#include<bits/stdc++.h>\n \nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair <ll,ll> pii;\n#define rep(i,x,y) for(int i=x;i<y;i++)\n#define rept(i,x,y) for(int i=x;i<=y;i++)\n#define per(i,x,y) for(int i=x;i>=y;i--)\n#define all(x) x.begin(),x.end()\n#define pb push_back\n#define fi first\n#define se second\n#define mes(a,b) memset(a,b,sizeof a)\n#define mp make_pair\n#define dd(x) cout<<#x<<\"=\"<<x<<\" \"\n#define de(x) cout<<#x<<\"=\"<<x<<\"\\n\"\n#define debug() cout<<\"I love Miyamizu Mitsuha forever.\\n\"\nconst int inf=0x3f3f3f3f;\nconst int maxn=1e6+5;\nclass Tree\n{\n\tpublic:\n\t\tint son1,son2;\n\t\tint val;\n\t\tint op;//and=1,or=2,xor=3,not=4,in=5\n\t\tbool rev;\n\t\tvector<int> v;\n}tree[maxn];\nint degree[maxn];\nqueue<int> q;\n \nvoid dfs(int id)\n{\n\ttree[id].rev=1;\n\tif(tree[id].op==5)\n\t\treturn ;\n\tif(tree[id].op==1)\n\t{\n\t\tif(tree[tree[id].son1].val) dfs(tree[id].son2);\n\t\tif(tree[tree[id].son2].val) dfs(tree[id].son1);\n\t}\n\tif(tree[id].op==2)\n\t{\n\t\tif(!tree[tree[id].son1].val) dfs(tree[id].son2);\n\t\tif(!tree[tree[id].son2].val) dfs(tree[id].son1);\n\t}\n\tif(tree[id].op==3)\n\t{\n\t\tdfs(tree[id].son1);\n\t\tdfs(tree[id].son2);\n\t}\n\tif(tree[id].op==4)\n\t{\n\t\tdfs(tree[id].son1);\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint n;\n\tcin>>n;\n\trept(i,1,n)\n\t{\n\t\ttree[i].rev=0;\n\t\tstring s;\n\t\tcin>>s;\n\t\tif(s==\"AND\")\n\t\t{\n\t\t\ttree[i].op=1;\n\t\t\tcin>>tree[i].son1>>tree[i].son2;\n\t\t\ttree[tree[i].son1].v.pb(i);\n\t\t\ttree[tree[i].son2].v.pb(i);\n\t\t\tdegree[i]=2;\n\t\t}\n\t\telse if(s==\"OR\")\n\t\t{\n\t\t\ttree[i].op=2;\n\t\t\tcin>>tree[i].son1>>tree[i].son2;\n\t\t\ttree[tree[i].son1].v.pb(i);\n\t\t\ttree[tree[i].son2].v.pb(i);\n\t\t\tdegree[i]=2;\n\t\t}\n\t\telse if(s==\"XOR\")\n\t\t{\n\t\t\ttree[i].op=3;\n\t\t\tcin>>tree[i].son1>>tree[i].son2;\n\t\t\ttree[tree[i].son1].v.pb(i);\n\t\t\ttree[tree[i].son2].v.pb(i);\n\t\t\tdegree[i]=2;\n\t\t}\n\t\telse if(s==\"NOT\")\n\t\t{\n\t\t\ttree[i].op=4;\n\t\t\tcin>>tree[i].son1;\n\t\t\ttree[tree[i].son1].v.pb(i);\n\t\t\tdegree[i]=1;\n\t\t}\n\t\telse if(s==\"IN\")\n\t\t{\n\t\t\ttree[i].op=5;\n\t\t\tcin>>tree[i].val;\n\t\t\tq.push(i);\n\t\t}\n\t}\n\tint root;\n\twhile(!q.empty())\n\t{\n\t\tint id=q.front();\n\t\troot=id;\n\t\tq.pop();\n\t\trep(i,0,tree[id].v.size())\n\t\t{\n\t\t\tdegree[tree[id].v[i]]--;\n\t\t\tif(!degree[tree[id].v[i]]) q.push(tree[id].v[i]);\n\t\t}\n\t\tif(tree[id].op==5) continue;\n\t\telse if(tree[id].op==1)\n\t\t{\n\t\t\ttree[id].val=(tree[tree[id].son1].val&&tree[tree[id].son2].val);\n\t\t}\n\t\telse if(tree[id].op==2)\n\t\t{\n\t\t\ttree[id].val=(tree[tree[id].son1].val||tree[tree[id].son2].val);\n\t\t}\n\t\telse if(tree[id].op==3)\n\t\t{\n\t\t\ttree[id].val=(tree[tree[id].son1].val^tree[tree[id].son2].val);\n\t\t}\n\t\telse if(tree[id].op==4)\n\t\t{\n\t\t\ttree[id].val=!tree[tree[id].son1].val;\n\t\t}\n\t}\n\tdfs(root);\n\trept(i,1,n)\n\t\tif(tree[i].op==5)\n\t\t{\n\t\t\tif(tree[i].rev) cout<<!tree[root].val;\n\t\t\telse cout<<tree[root].val;\n\t\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1583844714,
        "uid": 222753,
        "name": "GGMU",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1010D \u3010Mars rover\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6bcf\u6b21\u53ea\u4f1a\u6539\u53d8\u4e00\u4e2a\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u662f\u50bb\u9898\u3002\n\nrt_val[u][0/1]\u8868\u793a\u8fd9\u4e2a\u70b9\u503c\u4e3a0\u62161\u65f6\uff0c\u6839\u8282\u70b9\u7684\u503c\u3002\n\n\u7136\u540e\u9012\u63a8\u4e00\u904d\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int N=1e6+5;\nint opt[N],val[N],n,son[N][2],fa[N];\ninline void init(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++){\n\t\tchar s[10]; int x,y;\n\t\tscanf(\"%s\",s+1);\n\t\tif (s[1]=='A') opt[i]=1;\n\t\tif (s[1]=='O') opt[i]=2;\n\t\tif (s[1]=='X') opt[i]=3;\n\t\tif (s[1]=='I'||s[1]=='N') {\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif (s[1]=='N') opt[i]=4,son[i][0]=x,fa[x]=i;\n\t\t\t\telse val[i]=x;\n\t\t}else{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tson[i][0]=x; son[i][1]=y;\n\t\t\tfa[x]=i; fa[y]=i;\n\t\t}\n\t} \n}\nint work(int u){\n\tif (opt[u]==1) return val[son[u][0]]&val[son[u][1]];\n\tif (opt[u]==2) return val[son[u][0]]|val[son[u][1]];\n\tif (opt[u]==3) return val[son[u][0]]^val[son[u][1]];\n\tif (opt[u]==4) return !val[son[u][0]];\n}\nvoid dfs(int u){\n\tif (!u||!opt[u]) return;\n\tdfs(son[u][0]); dfs(son[u][1]); \n\tval[u]=work(u);\n}\nint ans[N],rt_val[N][2];\nvoid Dfs(int u){\n\tif (!u) return;\n\tint tmp=val[u];\t\n\tif (u!=1){\n\t\tval[u]=0; rt_val[u][0]=rt_val[fa[u]][work(fa[u])];\n\t\tval[u]=1; rt_val[u][1]=rt_val[fa[u]][work(fa[u])];\n\t}\n\tval[u]=tmp;\n\tDfs(son[u][0]); Dfs(son[u][1]);\n\tif (!opt[u]){\n\t\tans[u]=rt_val[u][!tmp];\n\t}\n}\ninline void solve(){\n\tdfs(1);\n\trt_val[1][0]=0; rt_val[1][1]=1;\n\tDfs(1);\n\tfor (int i=1;i<=n;i++){\n\t\tif (!opt[i]){\n\t\t\tputchar((ans[i])?'1':'0');\n\t\t} \n\t}\n\tputs(\"\");\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n} \n```\n",
        "postTime": 1533807965,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1010D \u3010Mars rover\u3011"
    },
    {
        "content": "## \u9898\u5916\u8bdd\n~~\u6765\u81ea[\u67d0\u5e74\u666e\u53ca\u7ec4T3](https://www.luogu.com.cn/problem/P7073)\u7684\u6028\u5ff5~~\n\n\u8bdd\u8bf4\u8fd9\u9898\u6bd4\u90a3\u9898\u8fd8\u5c11\u4e86\u4e2a\u5904\u7406\u5b57\u7b26\u4e32\u4e3a\u5565\u8fd9\u9898\u662f\u7d2b\u800c\u90a3\u9898\u53ea\u6709\u7eff\uff0c\u5efa\u8bae\u66f4\u6b63\u4e00\u4e0b\u96be\u5ea6\u3002\n## \u6b63\u6587\n### 1\u3001\u66b4\u529b\u505a\u6cd5\n\u6328\u4e2a\u6539\u53d8\u4f9d\u6b21\u6c42\u503c\uff0c\u5f88\u660e\u663e\u65e0\u6cd5\u62ff\u5230\u5f88\u9ad8\u7684\u5206\u3002\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n### 2.\u4ece\u53f6\u5b50\u8282\u70b9\u5411\u6839\u8282\u70b9\u7ef4\u62a4\n\u8be5\u79cd\u505a\u6cd5\u7684\u4e3b\u8981\u7b97\u6cd5\u662f\u4ece\u6539\u53d8\u53f6\u8282\u70b9\u540e\u4f9d\u6b21\u5411\u6839\u8282\u70b9\u6c42\u503c\u3002\u663e\u7136\uff0c\u5982\u679c\u641c\u5230\u4e00\u4e2a\u8282\u70b9\u5b83\u7684\u503c\u76f8\u5bf9\u4e8e\u539f\u6765\u6ca1\u6709\u6539\u53d8\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u5411\u4e0b\u641c\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa\u6839\u8282\u70b9\u7684\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u4e00\u76f4\u641c\u5230\u4e86\u6839\u8282\u70b9\u53731\u53f7\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u6839\u8282\u70b9\u7684\u503c\u88ab\u6539\u53d8\u4e86\uff0c\u9700\u8981\u5bf9\u6839\u8282\u70b9\u7684\u503c\u8fdb\u884c\u53d6\u53cd\u3002\n\n\u5bf9\u4e8e\u5224\u65ad\u6bcf\u4e2a\u8282\u70b9\u65f6\u662f\u5426\u5bf9\u5176\u7236\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2abool\u6765\u5728\u5efa\u6811\u65f6\u8fdb\u884c\u5b58\u50a8\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u904d\u5386\u3002\u6b63\u5982\u524d\u9762\u7684\u5927\u4f6c\u4eec\u6240\u8bf4\uff0c\u9664\u4e86|\u548c&\u4e4b\u5916\u6539\u53d8\u7684\u8bdd\u90fd\u662f\u4e00\u5b9a\u6539\u53d8\u7684\uff0c|\u548c&\u6709\u7279\u6b8a\u7684\u89c4\u5f8b\uff0c\u53ef\u4ee5\u770b\u770b\u90a3\u51e0\u4f4d\u5927\u4f6c\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bf4\u4e86\u3002\n\n\u8fd9\u79cd\u505a\u6cd5\u5728\u7b2c88\u4e2a\u70b9\u4f1aTLE\uff08~~\u7136\u800c\u672c\u849f\u84bb\u56e0\u4e3a\u628a|\u5199\u6210\u4e86||\u800c\u5728\u7b2c21\u4e2a\u70b9\u5361\u4e86\u4e00\u9875\u8bc4\u6d4b~~\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u8fd9\u4e2a\u7b97\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\n\n### 3\u3001\u505a\u6cd52+\u8bb0\u5fc6\u5316\n\u5f88\u660e\u663e\uff0c\u5bf9\u4e8e\u4e4b\u524d\u5df2\u7ecf\u904d\u5386\u51fa \u8be5\u8282\u70b9\u7684\u503c\u6539\u53d8\u540e \u6839\u8282\u70b9\u7684\u503c\u662f\u5426\u6539\u53d8\u7684 \u90a3\u4e9b\u8282\u70b9\u6765\u8bf4\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u53bb\u641c\u4e00\u904d\u4e86\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u6570\u7ec4\uff0c\u6765\u8868\u793a\u6539\u53d8\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u6839\u8282\u70b9\u7684\u503c\u662f\u5426\u4f1a\u88ab\u6539\u53d8\u3002\u5728\u4e4b\u540e\u641c\u5230\u8fd9\u4e2a\u8282\u70b9\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6839\u8282\u70b9\u662f\u5426\u6539\u53d8\u4e86\u3002\u8fd9\u4e2a\u6570\u7ec4\u9700\u8981\u7528int\u6216short\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5b58\u4e0d\u4f1a\u6539\u53d8\uff0c\u4f1a\u6539\u53d8\uff0c\u548c\u672a\u88ab\u904d\u5386\u4e09\u79cd\u72b6\u6001\uff0c\u4e00\u4e2abool\u65e0\u6cd5\u5b58\u4e0b\u3002\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint le[1000007];\nint lev; \ninline int read()\n{\n\tchar c=getchar();\n\tint s=0;\n\twhile(c>'9'||c<'0')\n\tc=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\ts=s*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s;\n}\nstruct nodee{\n\tint kind;\n\tint fa;\n\tint l,r;\n\tbool num;\n\tbool ch;\n\tint jl;\n}a[1000007];\ninline int build(int i)\n{\n\ta[i].jl=-1;\n\tif(a[i].kind==5)\n\treturn a[i].num;\n\tif(a[i].kind==1)\n\t{\n\t\ta[i].num=build(a[i].l)&build(a[i].r);\n\t\tif(a[a[i].l].num==1&&a[a[i].r].num==1)\n\t\t{\n\t\t\ta[a[i].l].ch=a[a[i].r].ch=1;\n\t\t}\n\t\telse if(a[a[i].l].num==0&&a[a[i].r].num==1)\n\t\t{\n\t\t\ta[a[i].l].ch=1;\n\t\t}\n\t\telse if(a[a[i].l].num==1&&a[a[i].r].num==0)\n\t\t{\n\t\t\ta[a[i].r].ch=1;\n\t\t}\n\t\treturn a[i].num;\n\t}\n\tif(a[i].kind==2)\n\t{\n\t\ta[i].num=build(a[i].l)^build(a[i].r);\n\t\ta[a[i].l].ch=a[a[i].r].ch=1;\n\t\treturn a[i].num;\n\t}\n\tif(a[i].kind==3)\n\t{\n\t\ta[i].num=!build(a[i].l);\n\t\ta[a[i].l].ch=1;\n\t\treturn a[i].num;\n\t}\n\ta[i].num=build(a[i].l)|build(a[i].r);\n\tif(a[a[i].l].num==0&&a[a[i].r].num==0)\n\t{\n\t\ta[a[i].l].ch=a[a[i].r].ch=1;\n\t}\n\telse if(a[a[i].l].num==0&&a[a[i].r].num==1)\n\t{\n\t\ta[a[i].r].ch=1;\n\t}\n\telse if(a[a[i].l].num==1&&a[a[i].r].num==0)\n\t{\n\t\ta[a[i].l].ch=1;\n\t}\n\treturn a[i].num;\n}\ninline bool findd(int i)\n{\n\tif(a[i].jl!=-1)\n\treturn a[i].jl;\n\tif(i==1)\n\treturn 1;\n\tif(a[i].ch==1)\n\t{\n\t\tif(findd(a[i].fa))\n\t\t{\n\t\t\ta[i].jl=1;\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta[i].jl=0;\n\t\t\treturn 0;\n\t\t}\n\t}\n\telse\n\t{\n\t\ta[i].jl=0;\n\t\treturn 0;\n\t}\n}\nint main()\n{\n\tn=read();\n\tchar c;\n\ta[1].fa=-1;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tc=getchar();\n\t\tif(c=='A')\n\t\t{\n\t\t\ta[i].kind=1;\n\t\t\ta[i].l=read();\n\t\t\ta[i].r=read();\n\t\t\ta[a[i].l].fa=i;\n\t\t\ta[a[i].r].fa=i;\n\t\t}\n\t\telse if(c=='I')\n\t\t{\n\t\t\ta[i].kind=5;\n\t\t\ta[i].num=read();\n\t\t\tlev++;\n\t\t\tle[lev]=i;\n\t\t}\n\t\telse if(c=='X')\n\t\t{\n\t\t\ta[i].kind=2;\n\t\t\ta[i].l=read();\n\t\t\ta[i].r=read();\n\t\t\ta[a[i].l].fa=i;\n\t\t\ta[a[i].r].fa=i;\n\t\t}\n\t\telse if(c=='N')\n\t\t{\n\t\t\ta[i].kind=3;\n\t\t\ta[i].l=read();\n\t\t\ta[a[i].l].fa=i;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta[i].kind=4;\n\t\t\ta[i].l=read();\n\t\t\ta[i].r=read();\n\t\t\ta[a[i].l].fa=i;\n\t\t\ta[a[i].r].fa=i;\n\t\t}\n\t}\n\tbuild(1);\n\tfor(register int i=1;i<=lev;++i)\n\t{\n\t\tprintf(\"%d\",findd(le[i])^a[1].num);\n\t}\n\treturn 0;\n}\n```\n~~\u7136\u800c\u5bf9\u4e8e\u67d0T3\u8fd8\u662f\u4e0d\u4f1a\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5904\u7406\u6210\u4e00\u68f5\u6811~~",
        "postTime": 1607867710,
        "uid": 414210,
        "name": "Iam1789",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1010D \u3010Mars rover\u3011"
    },
    {
        "content": "[\u5f31\u5316\u7248\u2014\u2014\u8868\u8fbe\u5f0f](https://www.luogu.com.cn/problem/P7073)\n\n\u7b80\u5316\u9898\u610f\uff1a\u5bf9\u4e8e\u4e00\u68f5\u8868\u8fbe\u5f0f\u6811\uff0c\u6c42\u53d6\u53cd $n$ \u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u503c\u4e4b\u540e\u6700\u7ec8\u7684\u6839\u8282\u70b9\u7684\u503c\u3002\n\n\u542b\u6709\u4e0e\uff0c\u6216\uff0c\u975e\uff0c\u5f02\u6216\u4e09\u79cd\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u7ed3\u8bba\uff1a$0$ & $x=0$\uff0c$1|x=1$\uff0c\u6240\u4ee5\n- \u5982\u679c\u6839\u8282\u70b9\u662f &\uff0c\u82e5\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u4e3a $0$ \uff0c\u65e0\u8bba\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9\u4e3a\u4f55\u503c\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002 \u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u5b50\u6811\u5168\u90e8\u6807\u8bb0\u8d77\u6765\n- \u5982\u679c\u6839\u70b9\u662f $|$ \uff0c\u82e5\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u4e3a $1$ \uff0c\u65e0\u8bba\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9\u4e3a\u4f55\u503c\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002 \u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u5b50\u6811\u5168\u90e8\u6807\u8bb0\u8d77\u6765\n\n\u6807\u8bb0\u7684\u610f\u601d\u5c31\u662f\uff1a\u65e0\u8bba\u8be5\u70b9\u600e\u4e48\u53d8\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7956\u5148\u8282\u70b9\u7684\u503c\n\n\u8003\u8651\u5982\u4f55\u6807\u8bb0\n\n\u5982\u679c\u66b4\u529b\u904d\u5386\u5b50\u6811\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7ea7\u522b\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53ea\u5bf9\u8981\u6807\u8bb0\u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\u5b9e\u884c\u4e00\u6b21\u8ba1\u6570\u6807\u8bb0\uff0c\u5728\u6240\u6709\u7684\u6807\u8bb0\u7ed3\u675f\u540e\uff0c\u8fdb\u884c\u4e00\u6b21\u6811\u4e0a\u524d\u7f00\u548c\u3002\u8fd9\u6837\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u5224\u65ad\u8be5\u70b9\u662f\u5426\u6709\u503c\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u88ab\u6807\u8bb0\n\n\u5bf9\u4e8e $n$ \u6b21\u8be2\u95ee\n- \u5982\u679c\u88ab\u6807\u8bb0\uff0c\u8f93\u51fa $ans$\n- \u5982\u679c\u6ca1\u88ab\u6807\u8bb0\uff0c\u8f93\u51fa $!$ $ans$\n\n$Code:$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e6+10;\nbool a[N],in[N],num[N],cmt[N];\nint fa[N];\nchar s[N];\nvector<int> p[N];\nvoid add(int x,int y)\n{\n        p[x].push_back(y);\n        fa[y]=x;in[y]=1;\n}\nvoid dfs1(int x)\n{\n        int i,v1,v2;\n        if(s[x]!='|'&&s[x]!='&'&&s[x]!='^'&&s[x]!='!'){\n            num[x]=a[x];\n            return ;\n        }\n        for(i=0;i<p[x].size();i++) dfs1(p[x][i]);\n        if(s[x]=='!') num[x]=!num[p[x][0]];\n        if(p[x].size()==2){\n            v1=p[x][0];\n            v2=p[x][1];\n            if(s[x]=='|') num[x]=num[v1]|num[v2];\n            if(s[x]=='&') num[x]=num[v1]&num[v2];\n            if(s[x]=='^') num[x]=num[v1]^num[v2];\n        }\n}\nvoid dfs2(int x)\n{\n        int i,v1,v2;\n        for(i=0;i<p[x].size();i++) dfs2(p[x][i]);\n        if(p[x].size()==2){\n            v1=p[x][0];\n            v2=p[x][1];\n            if(s[x]=='|'){\n                if(num[v1]) cmt[v2]=1;\n                if(num[v2]) cmt[v1]=1;\n            }\n            if(s[x]=='&'){\n                if(!num[v1]) cmt[v2]=1;\n                if(!num[v2]) cmt[v1]=1;\n            }\n        }\n}\nvoid dfs3(int x)\n{\n        int i;\n        if(cmt[fa[x]]) cmt[x]=1;\n        for(i=0;i<p[x].size();i++) dfs3(p[x][i]);\n}\ninline int read()\n{\n        int x=0,f=1;\n        char ch=getchar();\n        while(ch<'0'||ch>'9'){\n            if(ch=='-')\n                f=-1;\n            ch=getchar();\n        }\n        while(ch>='0'&&ch<='9'){\n            x=(x<<1)+(x<<3)+(ch^48);\n            ch=getchar();\n        }\n        return x*f;\n}\nint main()\n{\n        char ch;\n        int x,y,i,n,len;\n        n=read();\n        for(i=1;i<=n;i++){\n            string opt;\n            while(ch=getchar()){\n                if(ch==' ') break;\n                opt+=ch; \n            }\n            if(opt==\"OR\") s[i]='|';\n            if(opt==\"AND\") s[i]='&';\n            if(opt==\"XOR\") s[i]='^';\n            if(opt==\"NOT\") s[i]='!';\n            if(s[i]=='|'||s[i]=='^'||s[i]=='&'){\n                x=read();y=read();\n                add(i,x);add(i,y);\n            }\n            if(s[i]=='!'){\n                x=read();\n                add(i,x);\n            }\n            if(opt==\"IN\") a[i]=read();\n        }\n        for(i=1;i<=n;i++){\n            if(!in[i]){\n                dfs1(i);//\u5148\u6c42\u51fa\u8868\u8fbe\u5f0f\u6811\u5404\u4e2a\u8282\u70b9\u7684\u503c\n                dfs2(i);//\u6807\u8bb0\n                dfs3(i);//\u6811\u4e0a\u524d\u7f00\u548c\n                len=i;\n                break;\n            }\n        }\n        for(i=1;i<=n;i++){\n            if(s[i]!='!'&&s[i]!='|'&&s[i]!='&'&&s[i]!='^'){\n                if(cmt[i]) printf(\"%d\",num[len]);\n                else printf(\"%d\",!num[len]);\n            }\n        }\n        return 0;\n}\n```\n\n$Tips:$ \u6811\u4e0a\u524d\u7f00\u548c\u4e5f\u53ef\u4ee5\u6539\u6210\u7528 $bool$ \u6570\u7ec4\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e3a\u4e86\u7701\u5185\u5b58\uff0c\u800c\u4e14\u6015\u7206 $long$ $long$\n\n$update:$ \u8fd9\u91cc\u8865\u5145\u4e00\u4e0b\u5173\u4e8e\u5982\u679c\u6ca1\u6709\u6807\u8bb0\u5c31\u662f $!$ $ans$ \u7684\u8bc1\u660e\uff1a\n\n\u5982\u679c\u67d0\u4e2a\u70b9\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c\u90a3\u4e48\u8ba1\u7b97\u4e4b\u540e\u7684\u7ed3\u679c\u80af\u5b9a\u4e3a $1$ & $x$ \u6216\u8005 $0$ $|$ $x$\uff0c\u4e5f\u5c31\u662f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981 $x$ \u6539\u53d8\u6700\u7ec8\u7ed3\u679c\u5c31\u4f1a\u6539\u53d8\uff0c\u800c\u5982\u679c $x$ \u4e0d\u6539\u53d8\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\uff1a\u7956\u5148\u8282\u70b9\u7684\u7ed3\u679c\u4e0d\u968f\u5b50\u5b59\u7ed3\u679c\u7684\u6539\u53d8\u800c\u6539\u53d8\u3002\u8fd9\u6837\u662f\u4f1a\u88ab\u6807\u8bb0\u7684\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c\u7b54\u6848\u5c31\u4e3a $!$ $ans$\uff08 \u67d0\u4e2a\u8282\u70b9\u80fd\u5426\u5f71\u54cd\u7956\u5148\u8282\u70b9\u53ea\u8ddf\u8fd9\u4e2a\u7956\u5148\u8282\u70b9\u7684\u53e6\u4e00\u68f5\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9\u6709\u5173\u3002\u8ddf\u67d0\u4e2a\u8282\u70b9\u6240\u5728\u7684\u7956\u5148\u8282\u70b9\u7684\u5b50\u6811\u65e0\u5173 \uff09",
        "postTime": 1606045559,
        "uid": 225100,
        "name": "ice_in_sky",
        "ccfLevel": 0,
        "title": "CF1010D Mars rover"
    }
]