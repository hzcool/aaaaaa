[
    {
        "content": "\u633a\u4e0d\u9519\u7684\u4e00\u4e2a\u6811\u5f62 dp \u9898\n\n\u9996\u5148\u628a $1\\to n$ \u7684\u94fe\u63d0\u53d6\u51fa\u6765\uff0c\u663e\u7136\u8fd9\u4e00\u6761\u94fe\u4e0a\u4f1a\u6302\u5f88\u591a\u5b50\u6811\n\n\u8003\u8651\u94fe\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9 $u$ \u4ee5\u53ca\u5b83\u7684\u5b50\u6811\uff0c\u663e\u7136\u5982\u679c\u8fd9\u4e2a\u5b50\u6811\u5185\u6709\u5927\u4e8e\u7b49\u4e8e 3 \u4e2a\u8282\u70b9\uff08\u5305\u62ec $u$\uff09\u5219\u5728\u8fd9\u4e2a\u5b50\u6811\u5185\u4e00\u5b9a\u80fd\u9009\u51fa\u4e24\u4e2a\u6ca1\u6709\u76f4\u63a5\u8fde\u8fb9\u7684\u70b9\uff0c\u6bcf\u6b21\u67e5\u8be2\u53ea\u8981\u8fde\u8fd9\u4e24\u4e2a\u70b9\u5373\u53ef\uff0c\u4e8e\u662f\u7b54\u6848\u5c31\u662f\u539f\u6811\u4e0a $1\\to n$ \u7684\u6700\u77ed\u8def\n\n\u8003\u8651\u4e0d\u5b58\u5728\u8fd9\u79cd\u5b50\u6811\u7684\u60c5\u51b5\n\n\u8bb0 $dis_u$ \u4e3a **\u94fe\u4e0a\u8282\u70b9 $u$** \u8ddd\u79bb\u4e00\u53f7\u8282\u70b9\u7684\u8ddd\u79bb\uff0c$f_u$ \u4e3a $u$ \u5b50\u6811\u5185\u8ddd\u79bb $u$ \u6700\u8fdc\u7684\u90a3\u4e2a\u70b9\u79bb $u$ \u7684\u8ddd\u79bb\n\n\u5047\u8bbe\u5f53\u524d\u9009\u5230\u4e86\u4e00\u4e2a\u70b9 $i$\uff0c\u6211\u4eec\u53ea\u8981\u627e\u51fa\u4e00\u4e2a $j<i$\uff0c\u4f7f\u5f97 $f_j+f_i+dis_j+(dis_n+dis_i)+x$ \u6700\u5927\u5373\u53ef\n\n\u4e0d\u770b\u6240\u6709\u4e0e $j$ \u65e0\u5173\u7684\u91cf\uff0c\u4e8e\u662f\u53d1\u73b0\u53ea\u8981\u7ef4\u62a4 $f_j+dis_j$ \u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u6700\u5927\u503c\uff0c\u7528\u5355\u8c03\u6808\u626b\u4e00\u904d\u5373\u53ef\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u8003\u8651 $i$ \u7684\u65f6\u5019\uff0c\u5982\u679c $i$ \u76f8\u90bb\u7684\u70b9 $j$ \u662f\u6700\u4f18\u51b3\u7b56\u70b9\uff0c\u5219\u9700\u8981\u7279\u5224 $i$ \u548c $j$ \u4e2d\u662f\u5426\u6709\u4e00\u4e2a\u7684\u5b50\u6811\u5927\u5c0f\u5927\u4e8e 1\uff0c\u5426\u5219\u53ea\u80fd\u4ece $i$ \u8fde\u5230 $j$\uff0c\u4e3a\u975e\u6cd5\u60c5\u51b5\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\uff0c\u611f\u89c9\u4ee3\u7801\u5b9e\u73b0\u6bd4\u5176\u4ed6\u9898\u89e3\u6e05\u695a\u4e00\u70b9\uff1f\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 300010\n#define int long long\nusing namespace std;\nint n,m;\nstruct Node{int to,nxt,val;}Edge[MAXN<<1];\nint Head[MAXN],cnt_Edge;\nvoid Add_Edge(int u,int v,int w){\n\tEdge[++cnt_Edge]=(Node){v,Head[u],w};\n\tHead[u]=cnt_Edge;\n}\nint st[MAXN],val[MAXN],tp,vis[MAXN];\nint dis[MAXN],f[MAXN],sz[MAXN];\nint q[MAXN],r,ans,tag;\nbool dfs(int u,int fa){\n\tif(u==n)return true;\n\tfor(int i=Head[u];i;i=Edge[i].nxt){\n\t\tint v=Edge[i].to,w=Edge[i].val;\n\t\tif(v==fa)continue;\n\t\tst[++tp]=v;val[tp]=w;vis[v]=true;\n\t\tif(dfs(v,u))return true;\n\t\ttp--;vis[v]=false;\n\t}return false;\n}//\u7528\u6808\u7ef4\u62a4\u5230\u6839\u7684\u94fe\nvoid dp(int u,int fa){\n\tsz[u]=1;\n\tfor(int i=Head[u];i;i=Edge[i].nxt){\n\t\tint v=Edge[i].to,w=Edge[i].val;\n\t\tif(v==fa||vis[v])continue;dp(v,u);\n\t\tsz[u]+=sz[v];f[u]=max(f[u],f[v]+w);\n\t}\n}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);ans=0xcfcfcfcfcfcfcfcf;\n\tfor(int i=1;i<n;i++){\n\t\tint u,v,w;scanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tAdd_Edge(u,v,w);Add_Edge(v,u,w);\n\t}st[tp=1]=1;vis[1]=true;dfs(1,0);\n\tfor(int i=1;i<=tp;i++)dis[i]=dis[i-1]+val[i];\n\tfor(int i=1;i<=tp;i++)dp(st[i],0),tag|=(sz[st[i]]>2);\n\tif(sz[st[1]]>1||sz[st[2]]>1)ans=max(ans,f[st[1]]+f[st[2]]+dis[tp]-dis[2]);\n\tq[r=1]=1;//\u5355\u8c03\u6808\n\tfor(int i=3;i<=tp;i++){\n\t\tans=max(ans,f[st[i]]+f[st[q[1]]]+dis[q[1]]+dis[tp]-dis[i]);\n\t\tif(sz[st[i]]>1||sz[st[i-1]]>1)ans=max(ans,f[st[i]]+f[st[i-1]]+dis[tp]-dis[i]+dis[i-1]);//\u6ce8\u610f\u7279\u5224\n\t\twhile(r&&f[st[i-1]]+dis[i-1]>=f[st[q[r]]]+dis[q[r]])r--;\n\t\tq[++r]=i-1;\n\t}\n\twhile(m--){\n\t\tint x;scanf(\"%lld\",&x);\n\t\tprintf(\"%lld\\n\",tag?dis[tp]:min(dis[tp],ans+x));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603287368,
        "uid": 65681,
        "name": "UltiMadow",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1016F \u3010Road Projects\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5qwq](https://www.luogu.com.cn/problem/CF1016F)\n# \u4e00\u3001\u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\uff1a\u7ed9\u5b9a\u4e00\u6761\u957f\u5ea6\u4e3a $l$ \u7684\u8fb9\uff0c\u4efb\u9009\u4e24\u4e2a**\u6ca1\u6709\u8fb9\u76f4\u63a5\u76f8\u8fde\u7684\u70b9**\u63a5\u4e0a\u8fd9\u6761\u8fb9\uff0c \u6700\u5927\u5316\u8fde\u8fb9\u540e $mindis(1, n)$ \u3002\n# \u4e8c\u3001\u9898\u89e3\n\u8003\u8651\u5c06\u6811\u62c6\u6210\u8fd9\u6837\u7684\u5f62\u6001\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6759v92s.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6211\u4eec\u628a\u8fd9\u79cd\u6811\u7684\u5f62\u6001\u79f0\u4f5c `\u94fe\u6811` \uff08\u6211\u81ea\u5df1\u778e\u8d77\u7684\uff09\uff0c\u5373\u4ee5\u4e00\u6761\u4e3b\u5e72\u4e3a\u7ebf\u5c06\u4ee5\u6574\u68f5\u6811\u4e32\u8d77\u6765\u3002\u6211\u4eec\u628a$path(1, n)$\u79f0\u4f5c `main` \uff0c\u628a `main` \u4e0a\u7684\u70b9\u79f0\u4e3a `\u4e3b\u5e72\u70b9` \uff0c\u628a\u4ee5\u4e3b\u5e72\u70b9 $u$ \u4e3a\u6839\u5206\u53c9\u5f00\u7684\u5b50\u6811\u79f0\u4f5c `branch(u)`\u3002\n\n\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4e3b\u5e72\u70b9 $u$  \uff0c\u4f7f\u5f97 $size(branch(u))>=3$\uff0c\u5219 $branch(u)$ \u5185\u5fc5\u6709\u4e00\u5bf9\u70b9 $u, v$ \u95f4\u6ca1\u6709\u8fde\u8fb9\uff0c\u56e0\u4e3a $C^n_2-(n-1)=\\frac{n*(n-1)}{2}-n+1=\\frac{n(n-3)}{2}+1$ \u3002\u663e\u7136\uff0c $n >= 3$ \u65f6\u4e3a\u6b63\u6570\u3002\u5bf9\u4e8e\u4efb\u4f55\u8be2\u95ee\u76f4\u63a5\u5c06\u4e24\u70b9\u8fde\u8d77\u6765\u5373\u53ef\u3002\u6545\u76f4\u63a5\u8f93\u51fa $q$ \u6b21\u539f\u6811\u7684 $mindis(1,n)$ \u5373\u53ef\u3002\n\n\u5426\u5219\uff0c\u6bcf\u4e2a\u4e3b\u5e72\u70b9\u5fc5\u5b9a\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\u3002\u7136\u540e\u95ee\u9898\u5c31\u88ab\u7b80\u5316\u4e86\u8bb8\u591a\uff0c\u628a $main$ \u4e0a\u7684\u70b9\u626b\u4e00\u904d\uff0c\u7ef4\u62a4\u4e00\u4e0b\u524d\u7f00\u6700\u5927\u503c\u5373\u53ef\u3002\u6ce8\u610f\uff1a\u4e24\u4e2a\u5df2\u7ecf\u76f8\u8fde\u7684\u8fb9\u4e0d\u80fd\u518d\u76f8\u8fde\uff01\u5751\u70b9\u5f88\u591a\uff0c\u5177\u4f53\u8bf7\u5eb7\u4ee3\u7801\u3002\n# \u4e09\u3001\u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define rg register\n#define fu(i, a, b) for(rg int i = (a), I = (b) + 1; i < I; ++i)\n#define fd(i, a, b) for(rg int i = (a), I = (b) - 1; i > i; --i)\n#define go(u) for(rg int o = head[u], v = to[o], w = val[o]; o; o = nxt[o], v = to[o], w = val[o])\ntemplate <class T> inline void read(T &x) {\n\tx = 0; char ch = getchar();\n\twhile(ch < 48 || ch > 57) ch = getchar();\n\twhile(ch >= 48 && ch <= 57) x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n}\ntemplate <class T> inline void ckmax(T &a, T b) {a = max(a, b);}\ntemplate <class T> inline void ckmin(T &a, T b) {a = min(a, b);}\n\nconst int N = 3e5 + 5;\nconst ll inf = 1e18;\nint n, q, to[N << 1], nxt[N << 1], val[N << 1], head[N], fa[N], cnt, a[N];\nbool vis[N], flg, sz;\nll dis[N], l;\n/*\nanswer = min(dis[n], dis[n] - s[y] + s[x] + a[x] + a[y] + l =)\nSo our mission is maximizing f(x, y) (x < y) = (a[x] + s[x]) + (a[y] - s[y]) = f(x) + g(y);\n*/\n\ninline void add(int u, int v, int w) {\n\tto[++cnt] = v, val[cnt] = w, nxt[cnt] = head[u];\n\thead[u] = cnt; \n} \n\nvoid dfs(int u) {\n\tgo(u) \n\t\tif(v != fa[u]) {\n\t\t\tfa[v] = u;\n\t\t\tdis[v] = dis[u] + w;\n\t\t\tdfs(v); \n\t}\n}\n\ninline void getpath() {\n\tint u = n;\n\twhile(u) vis[u] = 1, u = fa[u];\n}\n\nvoid getsub(int u, int fa) {\n\tgo(u) \n\t\tif(!vis[v] && v != fa) {\n\t\t\tif(sz) {\n\t\t\t\tfu(i, 1, q) printf(\"%lld\\n\", dis[n]);\n\t\t\t\texit(0);\n\t\t\t}\n\t\t\tsz = 1;\n\t\t\ta[u] = w;\n\t\t\tgetsub(v, u);\n\t} \n}\n\ninline void work() {\n\tint u = n;\n\tll mx1 = -inf, mx2 = -inf, lst = -inf, ans = -inf;\n\twhile(u) {\n\t\tif(a[u]) {\n\t\t\tckmax(ans, a[u] + dis[u] + max(mx1, mx2));\n\t\t\tckmax(mx1, a[u] - dis[u]);\n\t\t}\n\t\telse {\n\t\t\tckmax(ans, a[u] + dis[u] + max(mx1, lst));\n\t\t\tlst = mx2, ckmax(mx2, a[u] - dis[u]);\n\t\t}\n\t\tu = fa[u];\n\t}\n\tfu(i, 1, q) read(l), printf(\"%lld\\n\", min(dis[n], dis[n] + ans + l));\n}\n\nint main() {\n\tread(n), read(q);\n\tfor(int i = 1, u, v, w; i < n; ++i) {\n\t\tread(u), read(v), read(w);\n\t\tadd(u, v, w), add(v, u, w);\n\t}\n\tdfs(1), getpath();\n\tfu(i, 1, n) if(vis[i]) sz = 0, getsub(i, 0);\n\twork();\n}\n```\n\n# \u56db\u3001\u603b\u7ed3\n\u4e0a\u6587\u63d0\u5230\u7684\u6811\u7684\u8fd9\u79cd\u5f62\u6001( `\u94fe\u6811` \uff09\u5f88\u91cd\u8981\uff01\u60f3\u5230\u4e4b\u540e\u5c31\u4e0d\u96be\u4e86\u3002",
        "postTime": 1579754787,
        "uid": 100101,
        "name": "yzc2005",
        "ccfLevel": 9,
        "title": "CF1016F \u3010Road Projects\u3011\uff08\u94fe\u6811\uff09"
    },
    {
        "content": "### \u601d\u8def\n\u53ef\u4ee5\u8003\u8651\u53e6\u4e00\u79cd\u60f3\u6cd5\uff1a\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\uff0c\u7b54\u6848\u662f\u80af\u5b9a\u4e0d\u4f1a\u5927\u4e8e\u5728\u539f\u6765\u7684\u6811\u4e0a\u7684\u6700\u77ed\u8def\u5f84\u7684\u3002\u6240\u4ee5\u539f\u6765\u7684\u6700\u77ed\u8def\u662f\uff08\u6709\u53ef\u80fd\u7684\uff09\u6700\u5927\u503c\uff01\n\n\u6211\u4eec\u628a\u6811\u53d8\u6210\u8fd9\u6837\uff0c\u63d0\u53d6\u51fa1~n\u7684\u8def\u5f84\uff0c\u65b9\u4fbf\u89c2\u770b\u6495\u70e4\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6759v92s.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\uff08\u5b83\u6709\u4e2a\u6211\u8d77\u7684\u540d\u5b57\uff0c\u53eb**\u706f\u7b3c\u6811\u6001**,\u5904\u7406\u6811\u4e0a\u8def\u5f84\u4e0e\u5176\u4f59\u90e8\u5206\u4e4b\u95f4\u7684\u5173\u7cfb\u65f6\u753b\u56fe\u7528\uff0c\u5e76\u975e\u771f\u5b9e\u7684\u6570\u636e\u7ed3\u6784)\n\n\u6211\u4eec\u79f0\u88ab\u63d0\u53d6\u51fa\u6765\u7684\u6811\u4e0a\u8def\u5f84\uff08\u672c\u9898\u4e3a1~n\uff09\u4e3a**\u706f\u7b3c\u7ebf**\uff0c\u8def\u5f84\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ca\u5176\u4e0b\u60ac\u6302\u7684\u5b50\u6811\u79f0\u4e3a**\u706f\u7b3c\u5b50\u6811**\uff0c\u6bcf\u4e00\u4e2a\u706f\u7b3c\u5b50\u6811\u7684\u6839\u8282\u70b9\u53eb**\u60ac\u6302\u70b9**\u3002\n\n**(\u8fd9\u4e00\u6bb5\u53ef\u4ee5\u8df3\u8fc7,\u592a\u70e6\u4e86\u5f71\u54cd\u601d\u7ef4)** ~~\u663e\u7136\uff0c\u60ac\u6302\u70b9\u4e00\u5b9a\u5728\u706f\u7b3c\u7ebf\u4e0a\u3002\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u60ac\u6302\u70b9\u5c31\u662f\u5b83\u6240\u5728\u7684\u706f\u7b3c\u5b50\u6811\u7684\u60ac\u6302\u70b9\u3002\u4e00\u4e2a\u70b9\u5982\u679c\u5728\u706f\u7b3c\u7ebf\u4e0a\uff0c\u90a3\u4e48\u5b83\u7684\u60ac\u6302\u70b9\u662f\u81ea\u5df1\u3002~~\n\n\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u539f\u6765\u7684\u6700\u77ed\u8def\u4e0d\u662f\u7b54\u6848\u5462\uff1f\n\n\u90a3\u4e48\u5c31\u662f\u5bf9\u4e8e\u4efb\u4f55\u7684u\u548cv\uff0c\u5c06\u5b83\u4eec\u8fde\u63a5\u8d77\u6765\u540e\uff0c\u65b0\u7684\u6700\u77ed\u8def\u90fd\u6bd4\u539f\u6765\u7684\u6700\u77ed\u8def\u5c0f\u3002\n\n\u6362\u53e5\u8bdd\u8bf4:\u8bbe**\u706f\u7b3c\u7ebf**\u4e0a\u7684\u4e24\u4e2a\u70b9x\u548cy\u5206\u522b\u4e3a\u51c6\u5907\u65b0\u52a0\u8fb9\u7684u\uff0cv\u7684**\u60ac\u6302\u70b9**\u3002\u90a3\u4e48\u53ea\u9700\u6bd4\u8f83(x\u5230y\u7684\u8def\u5f84\u957f\u5ea6)\u548c\uff08u~x\uff0cv~y\u7684\u957f\u5ea6\u548c\u518d\u52a0\u4e0a\u6bcf\u6b21\u8be2\u95ee\u65f6\u7684\u90a3\u4e2a\u503c)\u5373\u53ef\u3002\n\n~~\uff08\u91cd\u5934\u620f\u6765\u4e86\uff01)~~\n\n**\u5982\u679c\u4e0a\u6587\u7684u\u548cv\u518d\u540c\u4e00\u9897\u706f\u7b3c\u5b50\u6811\u5185\u5462\uff1f**\n\n \uff08*\uff09\u4e8e\u662f,\u4f60\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c\u4e00\u9897\u706f\u7b3c\u5b50\u6811\u9664\u60ac\u6302\u70b9\u5916\u6709\u8d85\u8fc7\u4e24\u4e2a\u4ee5\u4e0a\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u8fde\u63a5\u8fd9\u9897\u706f\u7b3c\u5b50\u6811\u5185\u7684\u4e24\u4e2a\u6ca1\u6709\u76f4\u63a5\u8fb9\u76f8\u8fde\u7684\u70b9\uff0c\u65e0\u8bba\u8be2\u95ee\u591a\u5c11\uff0cAns\u4f1a\u53d6\u5230\u539f\u56fe\u7684\u6700\u77ed\u8def\uff0c\u4e5f\u5c31\u662f\u7406\u8bba\u6700\u5927\u503c\u3002 \n\n**\u6240\u4ee5\uff0c\u6211\u4eec\u4ec5\u9700\u8003\u8651\u6bcf\u9897\u9897\u706f\u7b3c\u5b50\u6811\u9664\u60ac\u6302\u70b9\u5916\u4ec5\u67091\u7684\u70b9\u7684\u539f\u6811\u5373\u53ef\u3002**\n\n\u7531\u4e8e\u8981\u6bd4\u8f83(x\u5230y\u7684\u8def\u5f84\u957f\u5ea6)\u548c\uff08u~x\uff0cv~y\u7684\u957f\u5ea6\u548c\u518d\u52a0\u4e0a\u6bcf\u6b21\u8be2\u95ee\u65f6\u7684\u90a3\u4e2a\u503c\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u6700\u5927\u7684(x\u5230y\u7684\u8def\u5f84\u957f\u5ea6)-\uff08u~x\uff0cv~y\u7684\u957f\u5ea6\u548c\uff09,\u6bcf\u6b21\u8be2\u95ee\u5c06\u5176\u52a0\u4e0a\u8be2\u95ee\u503c\u5e76\u4e0e0\u6bd4\u8f83\u5373\u53ef\u3002\n\n\u5982\u4f55\u7b97\u51fa(x\u5230y\u7684\u8def\u5f84\u957f\u5ea6)-\uff08u~x\uff0cv~y\u7684\u957f\u5ea6\u548c\uff09\uff1f\u5c06\u8fd9\u4e2a\u5f0f\u5b50\u62c6\u5f00\u5206\u522b\u7ef4\u62a4\uff0c\u4e00\u904ddfs\uff0c\u7528heap\u7ef4\u62a4\u4e00\u4e0b\u3002\u5efa\u8bae\u8bfb\u8005\u81ea\u884c\u6495\u70e4\u8fd9\u90e8\u5206\u5185\u5bb9\u3002\n\nCode\uff1a\n```cpp\n#include <cstdio>\n#include <queue>\nusing namespace std;\nconst int S=600006;\nstruct info\n{\n\tint x;\n\tlong long s;\n\tinline bool operator<(const info &a) const\n\t{\n\t\treturn s<a.s;\n\t}\n}st[S];\npriority_queue<info> pq;\nint n,m,h[S],nx[S],v[S],w[S],eg=1,s[S],fa[S],top,lc[S],rc[S];\nconst long long infl=(1ll<<60)-1;\nlong long dep[S],res=-infl;\nbool flag,mk[S];\nvoid read(int &s)\n{\n\ts=0;char c=getchar();\n\twhile (c<'0' || c>'9') c=getchar();\n\twhile (c>='0' && c<='9') s=(s<<1)+(s<<3)+(c^48),c=getchar();\n}\ninline void egadd(int uu,int vv,int ww)\n{\n\tnx[++eg]=h[uu];h[uu]=eg;\n\tv[eg]=vv;w[eg]=ww;\n}\nvoid dfs_1(int x)\n{\n\ts[x]=1;\n\tfor (int i=h[x];i;i=nx[i])\n\t\tif (v[i]!=fa[x])\n\t\t{\n\t\t\tfa[v[i]]=x;\n\t\t\tdep[v[i]]=dep[x]+w[i];\n\t\t\tdfs_1(v[i]);\n\t\t\ts[x]+=s[v[i]];\n\t\t}\n}\nbool check()\n{\n\tint o=n;\n\tif (s[o]>2) return false;\n\twhile (o!=1)\n\t{\n\t\tif (s[fa[o]]-s[o]>2) return false;\n\t\tmk[o]=true;\n\t\to=fa[o];\n\t}\n\tmk[1]=true;\n\treturn true;\n}\ninline long long ma(long long a,long long b){return a>b?a:b;}\ninline long long mi(long long a,long long b){return a<b?a:b;}\nvoid dfs_3(int x)//\u8fd9\u91cc\u662f\u5c06\u539f\u6811\u8f6c\u4e3a\u4e8c\u53c9\u6811\uff0c\u56e0\u4e3a\u706f\u7b3c\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7\u4e24\u4e2a\u70b9\u7684\u6811\u5c31\u662f\u4e00\u9897\u4e8c\u53c9\u6811\n{\n\tfor (int i=h[x];i;i=nx[i])\n\t\tif (v[i]!=fa[x])\n\t\t{\n\t\t\tdfs_3(v[i]);\n\t\t\tif (mk[v[i]])\n\t\t\t{\n\t\t\t\tlc[x]=v[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\tfor (int i=h[x];i;i=nx[i])\n\t\tif (v[i]!=fa[x])\n\t\t\tif (!mk[v[i]])\n\t\t\t{\n\t\t\t\trc[x]=v[i];\n\t\t\t\tbreak;\n\t\t\t}\n}\nvoid dfs_2(int x)\n{\n\tif (lc[x]) dfs_2(lc[x]);\n\tif (rc[x]) dfs_2(rc[x]);\n\twhile (!pq.empty() && fa[pq.top().x]==x)\n\t\tst[++top]=pq.top(),pq.pop();\n\tif (!pq.empty()) res=ma(res,pq.top().s+dep[x]);\n\twhile (top) pq.push(st[top--]);\n\tpq.push((info){x,2*(mk[x]?0:dep[x]-dep[fa[x]])-dep[x]});\n}\nint main()\n{\n\tread(n);read(m);\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tint uu,vv,ww;\n\t\tread(uu);read(vv);read(ww);\n\t\tegadd(uu,vv,ww);\n\t\tegadd(vv,uu,ww);\n\t}\n\tdfs_1(1);\n\tflag=check();\n\tif (flag) dfs_3(1),dfs_2(1);\n\tint x;\n\twhile (m--)\n\t{\n\t\tread(x);\n\t\tif (flag) printf(\"%lld\\n\",dep[n]+mi(0,res+x));\n\t\telse printf(\"%lld\\n\",dep[n]);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1571369967,
        "uid": 34907,
        "name": "Hygebra",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1016F \u3010Road Projects\u3011"
    },
    {
        "content": "\u4e00\u79cd\u5f88\u597d\u60f3\u4f46\u6ca1\u4eba\u63d0\u7684\u601d\u8def\u3002\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8fb9\u5e26\u6743\uff0c\u4efb\u9009\u4e24\u4e2a\u4e0d\u76f8\u90bb\u7684\u70b9\u8fde\u4e00\u6761\u6743\u503c\u4e3a $k$ \u7684\u8fb9\uff0c$1$ \u4e0e $n$ \u4e4b\u95f4\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\u662f\u591a\u5c11\u3002\u591a\u6b21\u8be2\u95ee\u3002\n\n\u9996\u5148\u5c06 $1$ \u4f5c\u4e3a\u6839\uff0c\u628a $1$ \u5230 $n$ \u7684\u94fe\u63d0\u51fa\u6765\uff0c\u4e0a\u9762\u7684\u70b9\u8ba4\u4e3a\u662f\u5173\u952e\u70b9\uff0c\u5176\u4f59\u70b9\u8ba4\u4e3a\u662f\u975e\u5173\u952e\u70b9\u3002\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u8fde\u8fb9\u4e00\u5b9a\u53ef\u4ee5\u4e0d\u6539\u53d8\u6700\u77ed\u8def\u3002\n\n1. \u67d0\u4e2a\u5173\u952e\u70b9\u4e0e\u81f3\u5c11\u4e24\u4e2a\u975e\u5173\u952e\u70b9\u76f8\u8fde\u3002\u5728\u8fd9\u4e24\u4e2a\u975e\u5173\u952e\u70b9\u4e4b\u95f4\u8fde\u8fb9\u5373\u53ef\u3002\n2. \u67d0\u4e24\u4e2a\u975e\u5173\u952e\u70b9\u4e4b\u95f4\u6709\u7956\u8f88\u5173\u7cfb\u3002\u8ba9\u8f83\u6df1\u7684\u70b9\u5411\u6bd4\u5176\u6df1\u5ea6\u5c0f $2$ \u7684\u70b9\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u7279\u5224\u5b8c\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5269\u4e0b\u7684\u6811\u5927\u6982\u957f\u8fd9\u6837\uff1a\u4ece $1$ \u5230 $n$ \u4e00\u6761\u94fe\uff0c\u94fe\u4e0a\u6bcf\u4e2a\u70b9\u53ef\u80fd\u8fde\u4e86\u4e00\u4e2a\u975e\u5173\u952e\u70b9\u3002\u51fa\u4e8e\u65b9\u4fbf\uff0c\u6211\u4eec\u5047\u8bbe\u6ca1\u6709\u8fde\u975e\u5173\u952e\u70b9\u7684\u8282\u70b9\u4e5f\u5404\u8fde\u4e86\u4e00\u4e2a\u70b9\uff0c\u8fb9\u6743\u4e3a $0$\u3002\u663e\u7136\u5982\u679c\u8fde\u8fb9\u7684\u8bdd\u80af\u5b9a\u5728\u975e\u5173\u952e\u70b9\u4e4b\u95f4\u76f8\u8fde\u66f4\u4f18\u3002\n\n\u4ee4 $d_x$ \u8868\u793a$1$ \u5230 $x$ \u7684\u6700\u77ed\u8def\uff0c$a_x$ \u8868\u793a\u8282\u70b9 $x$ \u548c\u4e0e\u5176\u76f8\u90bb\u7684\u975e\u5173\u952e\u70b9\u4e4b\u95f4\u8fb9\u6743\u5927\u5c0f\u3002\u73b0\u5728\u8fde\u4e00\u6761\u957f\u4e3a $k$ \u7684\u8fb9\uff0c\u5047\u8bbe $x,y$ \u4e3a\u6211\u4eec\u8fde\u8fb9\u7684\u4e24\u4e2a\u70b9\u4e14\u4e0e $x$ \u76f8\u8fde\u7684\u5173\u952e\u70b9\u6df1\u5ea6\u8f83\u6d45\u3002\n\n\u6709\u5f71\u54cd\u7684\u53ea\u6709 $x,y$ \u4e4b\u95f4\u7684\u8def\u5f84\uff0c$d_y-d_x$ \u4e0e $a_x+a_y+k$ \u53d6\u6700\u5c0f\u3002\u524d\u8005\u505a\u6700\u5c0f\u5bf9\u7b54\u6848\u6ca1\u5f71\u54cd\uff0c\u5047\u8bbe\u540e\u8005\u6700\u5c0f\uff0c\u90a3\u4e48\u6700\u77ed\u8def\u4f1a\u53d8\u5c0f $d_y-d_x-(a_x+a_y+k)=d_y-a_y-(d_x+a_x)-k$\u3002\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u6700\u5c0f\u5316\u8fd9\u4e2a\u67ff\u5b50\u3002\n\n$k$ \u662f\u5e38\u91cf\u4e0d\u7528\u7ba1\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u662f\u8981\u627e\u5230\u6700\u5c0f\u7684 $(d_y-a_y)-(d_x+a_x)$\u3002\u4ece\u6839\u5f80\u4e0b\u626b\u4e00\u904d\uff0c\u7ef4\u62a4 $\\max\\{d_x+a_x\\}$ \u66f4\u65b0\u6700\u5c0f\u503c\u3002\u7136\u540e\u5904\u7406\u8be2\u95ee\uff0c\u770b\u51cf\u53bb $k$ \u540e\u503c\u662f\u8d1f\u6570\u6700\u77ed\u8def\u4e0d\u53d8\uff0c\u5426\u5219\u51cf\u53bb\u8fd9\u4e2a\u503c\uff0c\u5c31\u884c\u4e86...\u5417\uff1f\n\n\u5927\u4f53\u4e0a\uff0c\u8fd9\u4e2a\u601d\u8def\u662f\u6ca1\u95ee\u9898\u7684\u3002\u4f46\u627e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u70b9\u6743\u5747\u4e3a $0$\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u70b9\u90fd\u662f\u6211\u4eec\u7684\u865a\u62df\u70b9\uff0c\u539f\u56fe\u4e2d\u8fd8\u6709\u8fd9\u6761\u8fb9\uff0c\u56e0\u6b64\u662f\u4e0d\u80fd\u8fde\u8fb9\u7684\uff01\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u7ef4\u62a4\u5228\u53bb\u7236\u8282\u70b9\u7684\u6700\u5927\u503c\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\nusing namespace std;\nvector<int>g[300001],gg[300001];\nint fa[300001],a[300001],n,son[300001];\nbool imp[300001];\nlong long d[300001];\nvoid dfs(int x){\n\tint i;\n\tfor(i=0;i<g[x].size();i++){\n\t\tint y=g[x][i];\n\t\tif(fa[x]==y)continue;\n\t\tfa[y]=x;\n\t\td[y]=d[x]+gg[x][i];\n\t\tdfs(y);\n\t}\n}\nlong long maxn(long long x,long long y){\n\treturn x>y?x:y;\n}\nint main(){\n\tint i,m;\n\tbool nf=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<n;i++){\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tg[x].push_back(y);\n\t\tg[y].push_back(x);\n\t\tgg[x].push_back(z);\n\t\tgg[y].push_back(z);\n\t}\n\tdfs(1);\n\timp[1]=1;i=n;while(i!=1)imp[i]=1,i=fa[i];\n\tfor(i=1;i<=n;i++){\n\t\tif(g[i].size()>=4-(i==1||i==n)||(!imp[i]&&g[i].size()>1)){\n\t\t\tnf=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(nf){\n\t\twhile(m--)printf(\"%lld\\n\",d[n]);\n\t\treturn 0;\n\t}\n\ti=n;while(i!=1)son[fa[i]]=i,i=fa[i];\n\tfor(i=1;i<=n;i++)if(!imp[i])a[fa[i]]=gg[i][0];\n\tlong long mx=d[1]+a[1],rs=1ll<<60,pmx=-rs;\n\tfor(i=son[1];i;i=son[i]){\n\t\tif(a[i]||a[fa[i]]){\n\t\t\tif(d[i]-a[i]-mx<rs)rs=d[i]-a[i]-mx;\n\t\t}\n\t\telse if(d[i]-a[i]-pmx<rs)rs=d[i]-a[i]-pmx;\n\t\tpmx=mx;\n\t\tif(d[i]+a[i]>mx)mx=d[i]+a[i];\n\t}\n\twhile(m--){\n\t\tscanf(\"%d\",&i);\n\t\tprintf(\"%lld\\n\",d[n]-maxn(rs-i,0));\n\t}\n}\n```",
        "postTime": 1658826609,
        "uid": 128606,
        "name": "2018ljw",
        "ccfLevel": 7,
        "title": "CF1016F \u9898\u89e3"
    },
    {
        "content": "## \u89e3\u6790\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u76f8\u5bf9\u66f4\u597d\u5199\u7684\u505a\u6cd5\n\n\u8003\u8651\u6dfb\u52a0\u4e00\u6761\u8fb9 $(u, v)$ \u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\u3002\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u5982\u679c\u8fd9\u4ee4 $1, n$ \u95f4\u7684\u7b80\u5355\u8def\u5f84\u6570\u589e\u52a0\u4e86\uff08\u4e00\u6761\uff09\uff0c\u5bb9\u6613\u8bc1\u660e\u5176\u6743\u4e3a $\\min(d_1[u]+d_n[v], d_n[u]+d_1[v])+w(u, v)$\uff0c\u5176\u4e2d $d_1[x], d_n[x]$ \u5206\u522b\u8868\u793a\u539f\u6811\u4e2d $x$ \u5230 $1, n$ \u7684\u8def\u5f84\u7684\u6743\n\n2. \u5982\u679c\u8fd9\u6ca1\u6709\u4ee4 $1, n$ \u95f4\u7684\u7b80\u5355\u8def\u5f84\u6570\u589e\u52a0\uff0c\u90a3\u4e48\u663e\u7136 $\\min(d_1[u]+d_n[v], d_n[u]+d_1[v])+w(u, v)$ \u4e00\u5b9a\u6bd4\u539f\u6811\u4e2d $1$ \u5230 $n$ \u7684\u8def\u5f84\u6743\uff08\u5373 $d_1[n]$\uff09\u5927\n\n\u4e8e\u662f\u53ea\u8981\u6211\u4eec\u80fd\u6c42\u51fa $ans=\\max\\{\\min(d_1[u]+d_n[v], d_n[u]+d_1[v])\\}$\uff08\u5f53\u7136 $u, v$ \u95f4\u5728\u539f\u6811\u4e2d\u4e0d\u80fd\u6709\u8fb9\uff09\uff0c\u5bf9\u6bcf\u6b21\u8be2\u95ee $x_j$ \u5c31\u53ea\u9700\u8f93\u51fa $\\min(d_1[n], ans+x_j)$ \u5373\u53ef\n\n\u6211\u4eec\u679a\u4e3e $u$\uff0c\u4e14\u53ea\u9009\u62e9\u6ee1\u8db3 $d_1[u]+d_n[v] < d_n[u]+d_1[v]$ \u7684 $v$\uff0c\u663e\u7136\u9700\u8981\u5728\u5176\u4e2d\u627e\u5230 $d_n[v]$ \u6700\u5927\u7684 $v$ \u4e0e\u5176\u914d\u5bf9\u3002\u8003\u8651\u5982\u4f55\u5feb\u901f\u627e\u5230\u8fd9\u4e2a\u4e1c\u897f\uff1a\n\n\u5c06\u521a\u624d\u7684\u4e0d\u7b49\u5f0f\u53d8\u5f62\u4e00\u4e0b\uff0c\u8f6c\u4e3a $d_1[u]-d_n[u] < d_1[v]-d_n[v]$\u3002\u8bbe\u6392\u5e8f\u540e\u7b2c $x$ \u4f4d\u7684\u5143\u7d20\u5bf9\u5e94\u7684\u7ed3\u70b9\u7f16\u53f7\u4e3a $number[x]$\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5143\u7d20\u4ee5 $d_1[x]-d_n[x]$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u5bb9\u6613\u53d1\u73b0\u5bf9\u4e8e $i, j$\uff0c\u4e14 $j$ \u6ee1\u8db3 $j>i$\uff0c\u4e00\u5b9a\u6709 $d_1[number[i]]+d_n[number[j]] < d_n[number[i]]+d_1[number[j]]$\u3002\n\n\u4e8e\u662f\u521a\u624d\u7684\u95ee\u9898\u5c31\u5f88\u5bb9\u6613\u89e3\u51b3\u4e86\uff0c\u53ea\u9700\u6309\u4e0a\u8ff0\u5173\u952e\u5b57\u6392\u5e8f\u540e\uff0c\u6309\u6392\u5e8f\u987a\u5e8f\u679a\u4e3e $u$\uff0c\u518d\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 $d_n[v]$ \u6700\u5927\u7684 $v$ \u5373\u53ef\n\n\u6700\u540e\u8003\u8651\u627e\u5230\u7684 $v$ \u5982\u679c\u4e0e $u$ \u5728\u539f\u6811\u95f4\u5b58\u5728\u8fb9\uff08\u5373\u975e\u6cd5\u65f6\uff09\u65f6\u8be5\u600e\u4e48\u529e\u3002\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u987a\u6b21\u679a\u4e3e $d_n[v]$ \u66f4\u5c0f\u7684 $v$\uff08\u4e8e\u662f\u8fd9\u91cc\u9700\u8981\u7528\u5e73\u8861\u6811\u7ef4\u62a4 $v$ \u96c6\u5408\uff0c\u800c\u4e0d\u80fd\u7528\u5806\uff09\u3002\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u679a\u4e3e\u6b21\u6570\u662f\u4f9d\u8d56\u4e8e\u8fb9\u6570\u7684\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u95ee\u9898\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <map>\n#include <set>\n#include <algorithm>\n#define ll long long\nusing std::vector;\nusing std::map;\nusing std::set;\nusing std::pair;\nusing std::sort;\nusing std::max;\nusing std::min;\ntypedef pair<ll, int> pad;\n\n/*------------------------------IO------------------------------*/\n\nnamespace IO_number{\n\tint read(){\n\t\tint x =0; char c =getchar(); bool f =0;\n\t\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\t\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\t\treturn (f) ? -x : x;\n\t}\n\t\n\tvoid write(const ll &x){\n\t\tif(x < 0){\n\t\t\tputchar('-');\n\t\t\twrite(-x);\n\t\t}\n\t\telse{\n\t\t\tif(x/10)\n\t\t\t\twrite(x/10);\n\t\t\tputchar('0'+x%10);\n\t\t}\n\t}\n}\nusing namespace IO_number;\n\n/*------------------------------Func------------------------------*/\n\nnamespace Graph{\n\tstruct edge{\n\t\tint to, nxt, w;\n\t\t\n\t\tedge(const int &_to, const int &_nxt, const int &_w)\n\t\t\t:to(_to), nxt(_nxt), w(_w){}\n\t};\n\tvector<int> first;\n\tvector<edge> e(1, edge(0, 0, 0));\n\t\n\tinline void addedge(const int &u, const int &v, const int &w){\n\t\te.push_back(edge(v, first[u], w)), first[u] =e.size()-1;\n\t\te.push_back(edge(u, first[v], w)), first[v] =e.size()-1;\n\t}\n}\nusing namespace Graph;\n\nstruct node{\n\tll to_1, to_n;\n\tint node_number;\n\t\n\tnode(){}\n\tnode(const ll &_to_1, const ll &_to_n, const int &_node_number)\n\t\t:to_1(_to_1), to_n(_to_n), node_number(_node_number){}\n};\nvector<node> dp;\n\nvoid dfs_dp(const int &u, const int &fa, const char &typ){\n\tdp[u].node_number =u;\n\tfor(int l =first[u]; l; l =e[l].nxt)\n\t\tif(e[l].to != fa){\n\t\t\tif(typ == '1')\n\t\t\t\tdp[e[l].to].to_1 =dp[u].to_1+e[l].w;\n\t\t\telse\n\t\t\t\tdp[e[l].to].to_n =dp[u].to_n+e[l].w;\n\t\t\tdfs_dp(e[l].to, u, typ);\n\t\t}\n}\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tconst int n =read(), m =read();\n\tfirst.resize(n+1);\n\te.reserve(2*(n-1)+1);\n\tvector<set<int> > e_(n+1, set<int>());\n\tfor(int i =0; i < n-1; ++i){\n\t\tconst int u =read(), v =read(), w =read();\n\t\taddedge(u, v, w);\n\t\te_[u].insert(v), e_[v].insert(u);\n\t}\n\t\n\tdp =vector<node>(n+1, node(0, 0, 0));\n\tdfs_dp(1, 0, '1'), dfs_dp(n, 0, 'n');\n\tll ans_ =dp[n].to_1;\n\t\n\tsort(dp.begin()+1, dp.end(), [&](const node &A, const node &B){ return A.to_1-A.to_n < B.to_1-B.to_n; });\n\t/* -tips: (A_1+B_n < A_n+B_1) => (A_1-A_n < B_1-B_n) */\n\tmap<ll, int> Map;\n\tll ans =0;\n\tfor(int i =n; i >= 1; --i){\n\t\tauto it =Map.begin();\n\t\twhile(it != Map.end() && e_[dp[i].node_number].count(dp[it->second].node_number))\n\t\t\t++it;\n\t\tif(it != Map.end())\n\t\t\tans =max(ans, dp[i].to_1+dp[it->second].to_n);\n\t\tMap.insert(pad(-dp[i].to_n, i));\n\t}\n\t\n\tfor(int _t =0; _t < m; ++_t)\n\t\twrite(min(ans_, ans+read())), putchar('\\n');\n}\n```",
        "postTime": 1617011467,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1016F\u3010CF1016F Road Projects\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684 $2600$\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u96be\u5ea6\u865a\u9ad8\uff0c\u4f46\u662f\u8fd8\u662f\u8c03\u4e86\u633a\u4e45\u4e86\u3002\n\n\u5404\u4f4d dalao \u90fd\u662f $O(n)$ \u7684\u505a\u6cd5\uff0c\u90a3\u6211\u6765\u4e2a $O(n \\log n)$ \u7684\u505a\u6cd5\u5427\u3002\n\n\u6211\u4eec\u5148\u9884\u5904\u7406\u4e00\u4e2a $dis_{0,i}$ \u8868\u793a $1$ \u5230\u5b83\u7684\u8ddd\u79bb\uff0c\u4ee5\u53ca $dis_{1,i}$ \u8868\u793a $n$ \u5230\u5b83\u7684\u8ddd\u79bb\u3002\n\n\u5bb9\u6613\u89c2\u5bdf\u5c31\u53ef\u4ee5\u77e5\u9053 $(u,v)$ \u6709\u6548\u7684\u53ea\u6709\u4e00\u7ec4\uff0c\u90a3\u5c31\u662f $\\min(dis_{0,u}+dis_{1,v},dis_{1,u}+dis_{0,v})$ \u6700\u5927\u7684\u90a3\u4e00\u7ec4\u3002\n\n\u5982\u679c\u6211\u4eec\u8fde\u4e0a\u4e86 $u$ \u5230 $v$ \u7684\u8fd9\u6761\u8fb9\uff0c\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u662f\u8d70\u8fc7\u5b83\u6216\u8005\u76f4\u63a5\u8d70 $1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\uff0c\u524d\u8005\u5c31\u662f\u4e0a\u9762\u7684\u5f0f\u5b50\u52a0\u4e2a\u8fb9\u6743\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u627e\u5230 $(u,v)$ \u6709\u6548\u7684\u90a3\u7ec4\uff0c\u90a3\u6837\u7684\u8bdd\uff0c\u5148\u8ba8\u8bba\u62c6\u6389 $\\min$\u3002\n\n$dis_{0,u}+dis_{1,v} \\le dis_{1,u}+dis_{0,v}$\uff0c\u90a3\u4e48\u79fb\u9879\u5f97\u5230 $dis_{0,u}-dis_{1,u} \\le dis_{0,v}-dis_{1,v}$\uff0c\u7136\u540e\u6309\u7167\u8fd9\u4e2a\u5dee\u503c\u6392\u5e8f\uff0c\u4e00\u4e2a\u6570\u7684\u524d\u7f00\u5c31\u662f\u548c\u5b83\u53d6 $\\min$ \u91cc\u9762\u524d\u8005\u7684\u503c\uff0c\u540e\u7f00\u662f\u540e\u8005\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u4e86\uff01\n\n\u601d\u7ef4\u96be\u5ea6\u4e0d\u9ad8\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u5df1\u73a9\u4e00\u4e0b\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long \nusing namespace std;\nconst int INF=6e5+5;\nstruct _node_edge{\n\tint to_,next_,disv_;\n}edge[INF<<1];\nint n,m,tot,head[INF];\nint dis_[3][INF],cnt[INF],p[INF],pp[INF],Max2[INF],Max3[INF];\nvoid add_edge(int x,int y,int z) {\n\tedge[++tot]={y,head[x],z};\n\thead[x]=tot;\n}\nqueue <int> q;\nvoid SPFA(int s,int t) {\n\tmemset(dis_[t],63,sizeof dis_[t]);\n\tq.push(s);dis_[t][s]=0;\n\twhile (q.size()) {\n\t\tint x=q.front();q.pop();\n\t\tfor (int i=head[x];i;i=edge[i].next_) {\n\t\t\tint v=edge[i].to_,d=edge[i].disv_;\n\t\t\tif (dis_[t][v]>dis_[t][x]+d) {\n\t\t\t\tdis_[t][v]=dis_[t][x]+d;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nstruct BIT3{\n\t#define ls(x) x<<1\n\t#define rs(x) x<<1|1\n\tint tree[INF<<2],m;\n\tvoid build() {\n\t\tm=1;\n\t\twhile (m<=n+1) m*=2;\n\t\tfor (int i=n+m+1;i;i--)\n\t\t\tif (i>=m) {\n\t\t\t\ttree[i]=dis_[0][p[i-m+1]];\n\t\t\t\ttree[n+1+m]=tree[n+m]=-1e15;\n\t\t\t}\n\t\t\telse tree[i]=max(tree[ls(i)],tree[rs(i)]);\n\t\t\n//\t\tfor (int i=m;i<=n+m+1;i++)\n//\t\t\tcout<<tree[i]<<\" iyw?\\n\";\n\t}\n\tvoid add(int x,int y) {\n\t\tx+=m;x--;tree[x]+=y;\n//\t\tcout<<x<<\" \"<<tree[x]<<\" \"<<y<<\" kelkel\\n\";\n\t\twhile (x>1) {\n\t\t\tx>>=1;\n\t\t\tif (x) \n\t\t\t\ttree[x]=max(tree[ls(x)],tree[rs(x)]);\n\t\t}\n\t\t\n//\t\tfor (int i=1;i<=n+m+1;i++)\n//\t\t\tcout<<i<<\" \"<<tree[i]<<\" endl\\n\";\n\t}\n\tint query(int x,int y) {\n\t\tif (x>y) return -1e15;\n\t\tint l=x+m-1,r=y+m-1,ans=max(tree[l],tree[r]);\n\t\twhile (l || r) {\n//\t\t\tcout<<l<<\" \"<<r<<\" \"<<tree[l]<<\" \"<<tree[r]<<\" kel\\n\";\n\t\t\tif (l/2!=r/2) {\n\t\t\t\tif (l%2==0) ans=max(ans,tree[l+1]);\n\t\t\t\tif (r%2==1) ans=max(ans,tree[r-1]);\n\t\t\t}\n\t\t\telse break;\n\t\t\tl/=2,r/=2;\n\t\t}\n\t\treturn ans;\n\t}\n}T2;\nstruct BIT{\n\t#define ls(x) x<<1\n\t#define rs(x) x<<1|1\n\tint tree[INF<<2],m;\n\tvoid build() {\n\t\tm=1;\n\t\twhile (m<=n+1) m*=2;\n\t\tfor (int i=n+m+1;i;i--)\n\t\t\tif (i>=m) {\n\t\t\t\ttree[i]=dis_[1][p[i-m+1]];\n\t\t\t\ttree[n+1+m]=tree[n+m]=-1e15;\n\t\t\t}\n\t\t\telse tree[i]=max(tree[ls(i)],tree[rs(i)]);\n\t\t\n//\t\tfor (int i=m;i<=n+m+1;i++)\n//\t\t\tcout<<tree[i]<<\" iyw?\\n\";\n\t}\n\tvoid add(int x,int y) {\n\t\tx+=m;x--;tree[x]+=y;\n\t\twhile (x>1) {\n\t\t\tx>>=1;\n\t\t\tif (x) \n\t\t\t\ttree[x]=max(tree[ls(x)],tree[rs(x)]);\n\t\t}\n\t\t\n//\t\tfor (int i=1;i<=n+m+1;i++)\n//\t\t\tcout<<i<<\" \"<<tree[i]<<\" endl\\n\";\n\t}\n\tint query(int x,int y) {\n\t\tif (x>y) return -1e15;\n\t\tint l=x+m-1,r=y+m-1,ans=max(tree[l],tree[r]);\n\t\twhile (l || r) {\n\t\t\tif (l/2!=r/2) {\n\t\t\t\tif (l%2==0) ans=max(ans,tree[l+1]);\n\t\t\t\tif (r%2==1) ans=max(ans,tree[r-1]);\n\t\t\t}\n\t\t\telse break;\n\t\t\tl/=2,r/=2;\n\t\t}\n\t\treturn ans;\n\t}\n}T1;\n//struct Segment{\n//\t#define ll tl[id]\n//\t#define rr tr[id]\n//\t#define ls(x) x<<1\n//\t#define rs(x) x<<1|1\n//\tint tl[INF<<2],tr[INF<<2],sum[INF<<2];\n//\tvoid push_up(int id) {sum[id]=max(sum[ls(id)],sum[rs(id)]);}\n//\tvoid build(int l,int r,int id) {\n//\t\tll=l;rr=r;\n//\t\tif (l==r) {sum[id]=dis_[1][p[l]];return ;}\n//\t\tint Mid=(l+r)>>1;\n//\t\tbuild(l,Mid,ls(id));\n//\t\tbuild(Mid+1,r,rs(id));\n//\t\tpush_up(id);\n//\t}\n//\tvoid add(int l,int x,int id) {\n//\t\tif (ll==rr) {sum[id]=x;return ;}\n//\t\tint Mid=(ll+rr)>>1;\n//\t\tif (l<=Mid) add(l,x,ls(id));\n//\t\telse add(l,x,rs(id));\n//\t\tpush_up(id);\n//\t}\n//\tint query(int l,int r,int id) {\n//\t\tif (l<=ll && rr<=r) return sum[id];\n//\t\tint Mid=(ll+rr)>>1;\n//\t\tif (l>Mid) return query(l,r,rs(id));\n//\t\telse if (r<=Mid) return query(l,r,ls(id));\n//\t\telse return max(query(l,r,ls(id)),query(l,r,rs(id)));\n//\t}\n//}T1;\nint check(int xx,int i) {\n\t// min(dis_[0][i]+dis_[1][j],dis_[1][i]+dis_[0][j])>=xx\n\tint l=1,r=n,ans=-1,yy=xx-dis_[1][i];\n\twhile (l<=r) {\n\t\tint Mid=(l+r)>>1;\n\t\tif (dis_[0][p[Mid]]>=yy) r=(ans=Mid)-1;\n\t\telse l=Mid+1;\n\t}\n\tif (ans==-1) return 0;\n\tif (T1.query(ans,n)+dis_[0][i]>=xx) return 1;\n\treturn 0;\n}\nsigned main()\n{\n//\tfreopen(\"test.in\",\"r\",stdin);\n//\tfreopen(\"test.out\",\"w\",stdout);\n\tmemset(T1.tree,-63,sizeof T1.tree);\n\tmemset(T2.tree,-63,sizeof T2.tree);\n\tcin>>n>>m;\n\tfor (int i=1;i<n;i++) {\n\t\tint x=0,y=0,z=0;\n\t\tcin>>x>>y>>z;\n\t\tadd_edge(x,y,z);\n\t\tadd_edge(y,x,z);\n\t}\n\t\n\tSPFA(1,0);\n\tSPFA(n,1);\n\tfor (int i=1;i<=n;i++) p[i]=i;\n\tsort(p+1,p+1+n,[](int x,int y){return dis_[0][x]<dis_[0][y];});\n\tsort(p+1,p+1+n,[](int x,int y){return dis_[0][x]-dis_[1][x]<dis_[0][y]-dis_[1][y];});\n\tint sum=0;\n\tT2.build(); T1.build();\n\tfor (int i=1;i<=n;i++) pp[p[i]]=i;\n//\tfor (int i=1;i<=n;i++)\n//\t\tcout<<dis_[0][p[i]]<<\" \"<<dis_[1][p[i]]<<\" over?\\n\";\n//\tfor (int i=1;i<=n;i++) cout<<p[i]<<\" \";\n//\tcout<<\" alding\\n\";\n\tfor (int i=1;i<=n;i++) {\n\t\tfor (int j=head[i];j;j=edge[j].next_) {\n\t\t\tT1.add(pp[edge[j].to_],-1e15);\n\t\t\tT2.add(pp[edge[j].to_],-1e15);\n\t\t}\n\t\tT1.add(pp[i],-1e15);\n\t\tT2.add(pp[i],-1e15);\n//\t\tcout<<i<<\" \"<<sum<<\" \"<<T2.query(1,pp[i]-1)+dis_[1][i]<<\" \"<<T1.query(pp[i]+1,n)+dis_[0][i]<<\" over?=======================================\\n\"; \n//\t\tfor (int j=1;j<=n;j++) {\n//\t\t\tif (cnt[j]) continue;\n//\t\t\tif (i==j) ;\n//\t\t\telse sum=max(sum,min(dis_[0][i]+dis_[1][j],dis_[1][i]+dis_[0][j]));\n//\t\t}\n//      dis_[0][i]+dis_[1][j]<=dis_[1][i]+dis_[0][j]\n//      dis_[0][i]-dis_[1][i]<=dis_[0][j]-dis_[1][j] \n//\t\tint l=0,r=3e14,ans=-1;\n//\t\twhile (l<=r) {\n//\t\t\tint Mid=(l+r)>>1;\n//\t\t\tif (check(Mid,i)) l=(ans=Mid)+1;\n//\t\t\telse r=Mid-1;\n//\t\t}\n\t\t\n\t\t// T1 ->1 T2 -> 0\n\t\tsum=max(sum,max(T2.query(1,pp[i]-1)+dis_[1][i],T1.query(pp[i]+1,n)+dis_[0][i]));\n\t\tT1.add(pp[i],1e15);\n\t\tT2.add(pp[i],1e15);\n\t\tfor (int j=head[i];j;j=edge[j].next_) {\n\t\t\tT1.add(pp[edge[j].to_],1e15);\n\t\t\tT2.add(pp[edge[j].to_],1e15);\n\t\t}\n\t}\n//\tcout<<sum<<\" iyw?\\n\";\n\tfor (int i=1;i<=m;i++) {\n\t\tint x=0;cin>>x;\n\t\tcout<<min(sum+x,dis_[0][n])<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1672725830,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF1016F"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/CF1016F)\n## \u9898\u610f\n\u7ed9\u4e00\u9897 $n$ \u4e2a\u7ed3\u70b9\u7684\u5e26\u6743\u6811\uff0c$q$ \u7ec4\u8be2\u95ee\u5728\u6811\u4e0a\u52a0\u4e00\u6761\u957f\u5ea6\u4e3a $x$ \u7684\u8fb9\u540e $1\\to n$ \u7684\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\u3002\n\n$n,q\\le 3\\times 10^5$.\n## \u601d\u8def\n\u9510\u8bc4\uff1a\u770b\u4e0d\u61c2\u67d0\u7bc7\u5355\u8c03\u6808\uff0c\u4e8e\u662f\u6765\u5199\u4e2a\u524d\u7f00\u548c\u3002\n\n\u7167\u6837\u628a $1\\to n$ \u7684\u94fe\u62c9\u51fa\u6765\u5e76\u6807\u8bb0\u5b83\u4eec\uff0c\u4ee4\u5b83\u4eec\u7684 $v_i=1$\uff0c\u94fe\u957f\u4e3a $t$\u3002\n\n\u4ee4 $p_i$ \u8868\u793a\u88ab\u6807\u8bb0\u7684\u70b9 $i$ \u5230 $1$ \u7684\u6743\u503c\u548c\uff0c$d_i$ \u8868\u793a\u88ab\u6807\u8bb0\u7684\u70b9 $i$ \u5230\u5b83\u4e0d\u88ab\u6807\u8bb0\u7684\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u8ddd\u79bb\uff0c$s_i$ \u8868\u793a\u70b9 $i$ \u4e0d\u88ab\u6807\u8bb0\u7684\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u7684\u70b9\u6570\u548c\u3002\n\n\u9996\u5148\u7b54\u6848\u4e0d\u5927\u4e8e $p_n$\u3002\u8003\u8651 $\\exists v_i=1,s_i\\ge 2$\uff0c\u5219\u8fde\u63a5\u5b83\u7684\u94fe\u5916\u5b50\u6811\u4e2d\u4efb\u610f\u4e24\u70b9\uff0c\u4e0d\u6539\u53d8\u6700\u77ed\u8def\uff0c\u7b54\u6848\u4e3a $p_n$\u3002\n\n\u5426\u5219\uff0c\u8003\u8651\u5728 $i$ \u6216\u5b83\u7684\u7684\u94fe\u5916\u5b50\u6811\u548c $j$ \u6216\u5b83\u7684\u7684\u94fe\u5916\u5b50\u6811\u4e2d\u9009\u4e24\u4e2a\u70b9\u8fde\u8fb9\uff0c\u7b54\u6848\u4e3a \n$$\\max_{i<j,v_{i,j}=1}(p_i+d_i-p_j+d_j+p_n+x)$$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b54\u6848\u53ea\u4e0e\u524d\u56db\u9879\u6709\u5173\uff0c\u5904\u7406\u51fa $p_i+d_i$ \u7684\u524d\u7f00 $\\max pr_i$ \u548c\u53d6\u5230\u7684\u4f4d\u7f6e $prp_i$\uff0c\u5904\u7406\u51fa $-p_i+d_i$ \u7684\u540e\u7f00 $\\max sf_i$ \u548c\u53d6\u5230\u7684\u4f4d\u7f6e $sfp_i$\uff0c\u7b54\u6848\u5219\u4e3a\n$$\\max_{i=1}^{t-1} (pr_i+sf_{i+1})+p_n+x$$\n\n\u7279\u522b\u5730\uff0c\u5f53\u6700\u4f18\u51b3\u7b56\u76f8\u90bb\u5e76\u4e14\u90fd\u6ca1\u6709\u94fe\u5916\u5b50\u6811\u65f6\u4e0d\u80fd\u53d6\u5230\u3002\n\n\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n+q)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=3e5+10;\nstruct Edge{\n\tint to,nxt,w;\n}a[N<<1];\nint n,q,siz[N],fa[N],cnt,head[N];\nll p[N],d[N];\nbool vis[N];\nvector<int>vec;\ninline void add(int u,int v,int w){\n    cnt++;\n    a[cnt].to=v;\n    a[cnt].nxt=head[u];\n    a[cnt].w=w;\n    head[u]=cnt;\n}\ninline void dfs1(int rt,int f){\n\tfa[rt]=f;\n\tfor(int i=head[rt];i;i=a[i].nxt){\n\t\tint t=a[i].to;\n\t\tif(t==f) continue;\n\t\tdfs1(t,rt);\n\t}\n}\ninline void dfs2(int rt){\n\tsiz[rt]=1;\n\tif(vis[rt]) vec.push_back(rt);\n\tfor(int i=head[rt];i;i=a[i].nxt){\n\t\tint t=a[i].to;\n\t\tif(t==fa[rt]) continue;\n\t\tif(vis[t])\n\t\t\tp[t]=p[rt]+a[i].w;\n\t\tdfs2(t);\n\t\tif(!vis[t])\n\t\t\tsiz[rt]+=siz[t],\n\t\t\td[rt]=max(d[rt],d[t]+a[i].w);\n\t}\n}\nbool fl;\nint prp[N],sup[N];\nll pr[N],sf[N],sep[N],ses[N],ans=-2e18;\nint main(){\n\tn=read(),q=read();\n\tfor(int i=1;i<n;i++){\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w),add(v,u,w);\n\t}\n\tdfs1(1,0);\n\tfor(int i=n;i;i=fa[i])\n\t\tvis[i]=1;\n\tvec.push_back(0);\n\tdfs2(1);\n\tfor(int i=1;i<=n;i++)\n\t\tif(siz[i]>=3) \n\t\t\tfl=1;\n\tpr[0]=sf[vec.size()]=-2e18;\n\tfor(int i=1;i<vec.size();i++){\n\t\tll tmp=p[vec[i]]+d[vec[i]];\n\t\tif(tmp>pr[i-1]) pr[i]=tmp,prp[i]=i;\n\t\telse pr[i]=pr[i-1],prp[i]=prp[i-1];\n\t}\n\tfor(int i=vec.size()-1;i;i--){\n\t\tll tmp=-p[vec[i]]+d[vec[i]];\n\t\tif(tmp>sf[i+1]) sf[i]=tmp,sup[i]=i;\n\t\telse sf[i]=sf[i+1],sup[i]=sup[i+1];\n\t}\n\tfor(int i=1;i<vec.size();i++){\n\t\tif(prp[i-1]==i-1&&sup[i]==i&&siz[vec[i-1]]==1&&siz[vec[i]]==1) continue;\n\t\tans=max(ans,pr[i-1]+sf[i]);\n\t}\n\tans+=p[n];\n\tfor(int i=1;i<vec.size()-2;i++)\n\t\tans=max(ans,p[vec[i]]+p[n]-p[vec[i+2]]);\n\tfor(int i=1;i<vec.size();i++){\n\t\tif(siz[vec[i]]==1) continue;\n\t\tif(i!=1) ans=max(ans,p[vec[i-1]]+d[vec[i]]+p[n]-p[vec[i]]);\n\t\tif(i!=vec.size()-1) ans=max(ans,p[vec[i]]+d[vec[i]]+p[n]-p[vec[i+1]]);\n\t}\n\twhile(q--){\n\t\tint x=read();\n\t\twrite(fl?p[n]:min(ans+x<=0?p[n]:ans+x,p[n])),putc('\\n');\n\t}\n\tflush();\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1644925798,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1016F\u3010Road Projects\u3011"
    },
    {
        "content": "### \u8fd9\u9898\u51fa\u7684\u633a\u5999\u7684\n\n\u5148\u627e\u51fa\u539f\u6811\u4e2d1-n\u8fd9\u6761\u94fe\n\n\u60c5\u51b51\uff1a\u539f\u6811\u4e2d1-n\u94fe\u4e0a\u6709\u70b9\u6709>=2\u4e2a\u975e\u94fe\u7684\u513f\u5b50\uff0c\u90a3\u76f4\u63a5\u8fde\u8d77\u6765\uff0c\u4e0d\u5f71\u54cd\u6700\u77ed\u8def\uff0c\n\n\u60c5\u51b52\uff1a\u6bcf\u4e2a\u94fe\u4e0a\u70b9\u53ea\u6709<=1\u4e2a\u975e\u94fe\u513f\u5b50\uff0c\n\n\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6dfb\u52a0\u4e86\u4e00\u6761\u957f\u5ea6\u4e3a0\u8fb9\uff0c\u6dfb\u52a0\u540e\u6700\u77ed\u8def\u6539\u53d8\u6700\u5c0f\u7684\u90a3\u4e2a\u662f\u6c38\u8fdc\u6700\u4f18\u7684\u6dfb\u8fb9\u65b9\u6848\u3002\n\n\u8ba1\u7b971\u5230\u94fe\u4e0a\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb($dis[i]$)\u548c\u5230\u94fe\u4e0a\u6bcf\u4e2a\u70b9\u53ca\u5176\u975e\u94fe\u5b50\u8282\u70b9\uff08\u5982\u679c\u5b58\u5728\uff09\u7684\u6700\u5927\u8ddd\u79bb($mx[i]$)\n\n\u7ef4\u62a4 $dis[i]*2-mx[i]-mx[j]$ \u6700\u5c0f\u503c\n\n\u8fd9\u4e0d\u662f\u524d\u7f00\u7ef4\u62a4\u7ebf\u6027\u626b\u63cf\u4e00\u4e0b\u5c31\u597d\u4e86\u5417\uff08\u6211\u7531\u4e8e\u83dc\u7528\u4e86\u5355\u8c03\u961f\u5217\uff09\n\n\u6ce8\u610f\u94fe\u4e0a\u76f8\u90bb\u4e24\u70b9\u4e0d\u80fd\u8fde\u8fb9\u3002\n\n```cpp\n//coder: Feliks Hacker of IOI == YB an AKer of IMO\n//acknowledgement: https://www.cnblogs.com/myx12345/p/10065082.html\n//\u7801\u98ce\u4e11\u89c1\u8c05 \n#include<bits/stdc++.h>\n#define ll long long\n#define re register\nusing namespace std;\nconst int N=1e6;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch) && ch!='-')ch=getchar();\n\tif(ch=='-')f=-1,ch=getchar();\n\twhile(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\treturn x*f;\n}inline ll Min(ll x,ll y){\n\tif(x<y)return x;\n\treturn y;\n}inline ll Max(ll x,ll y){\n\tif(x>y)return x;\n\treturn y;\n}\nint n,m;\nint v[N],w[N],nex[N],first[N],tot;\ninline void add(int x,int y,int z){\n\tv[++tot]=y;w[tot]=z;\n\tnex[tot]=first[x];\n\tfirst[x]=tot;\n}\nll dis[N],mx[N];\nint sz[N],fa[N];\nbool vis[N],is[N],got;\n//is: \u4e00\u4e2a\u70b9\u662f\u5426\u5728\u94fe\u4e0a\n//got: \u662f\u5426\u7b26\u5408\u60c5\u51b51 \nint lian[N],cnt;\n//\u8bb0\u5f55\u94fe \nint a,b;\nint q[N];//\u5355\u8c03\u961f\u5217 \nint mn[N];//\u5bf9\u4e8e\u94fe\u4e0a\u6bcf\u4e2a\u70b9\uff0c\u548c\u54ea\u4e2a\u70b9\u8fde\u8fb9\n//\u53ef\u4ee5\u4f7f2*dis[i] - mx[i] - mx[j]\u6700\u5c0f \nll Mn=1e18;\nvoid find(int x,int f){//\u627e\u94fe\uff0c\u627e\u7236\u4eb2 \n\tvis[x]=1;fa[x]=f;\n\tif(x==n)for(re int i=1;i<=n;i++)if(vis[i])is[i]=1;\n\tfor(re int i=first[x];i;i=nex[i]){\n\t\tint y=v[i];\n\t\tif(y==f)continue;\n\t\tfind(y,x);\n\t}vis[x]=0;\n}void dfs(int x,int f){//dis\uff0c\u5b50\u8282\u70b9\u4e2a\u6570 \n\tsz[x]=1;\n\tfor(re int i=first[x];i;i=nex[i]){\n\t\tint y=v[i];\n\t\tif(y==f)continue;\n\t\tdis[y]=dis[x]+w[i];\n\t\tdfs(y,x);\n\t\tsz[x]+=sz[y];\n\t}\n}void DFS(int x){//\u8bb0\u5f55\u94fe \n\tlian[++cnt]=x;\n\tfor(re int i=first[x];i;i=nex[i]){\n\t\tint y=v[i];\n\t\tif(y==fa[x] || !is[y])continue;\n\t\tsz[x]-=sz[y];\n\t\t//\u6211\u4eec\u60f3\u8ba9sz\u8bb0\u5f55\u81ea\u8eab\u548c\u975e\u94fe\u5b50\u8282\u70b9\u603b\u4e2a\u6570 \n\t\t//\u6240\u4ee5\u8981\u628a\u67d0\u4e9b\u4e1c\u4e1c\u51cf\u6389 \uff08\u81ea\u884c\u7406\u89e3\u662f\u54ea\u4e9b\u4e1c\u4e1c\uff09 \n\t\tDFS(y);\n\t}\n}void get_mx(int x){//\u770b\u51fd\u6570\u540d\u5373\u61c2 \n\tmx[x]=dis[x];\n\tfor(re int i=first[x];i;i=nex[i]){\n\t\tint y=v[i];\n\t\tif(y==fa[x])continue;\n\t\tget_mx(y);\n\t\tif(!is[y])//y\u662fx\u7684\u975e\u94fe\u5b50\u8282\u70b9 \n\t\t\tmx[x]=Max(mx[x],mx[y]);\n\t}\n}\ninline void prework(){\n\tfind(1,0);\n\tdis[1]=0;dfs(1,0);\n\tDFS(1);\n\tfor(re int i=1;i<=cnt;i++)\n\t\tif(sz[lian[i]]>=3)got=1;//\u7531\u4e8esz\u7b97\u4e0a\u81ea\u5df1\uff0c\n\t\t//\u6240\u4ee5\u9700\u8981>=3\n\tif(got)return; \n\tget_mx(1);\n\tint l=1,r=0;q[++r]=1;//\u5355\u8c03\u961f\u5217\u4e0a\u573a \n\tif(!(dis[lian[1]]==mx[lian[1]]&&dis[lian[2]]==mx[lian[2]]))mn[2]=1;\n\t//\u76f8\u90bb\u4e24\u70b9\u7279\u5224 \n\tfor(re int i=3;i<=cnt;i++){\n\t\tmn[i]=q[l];\n\t\twhile(l<=r && mx[lian[q[r]]]<mx[lian[i-1]])--r;\n\t\tq[++r]=i-1;\n\t\t//\u626b\u63cf\u5230i\u65f6\u628ai-2\u52a0\u8fdb\u961f\u5217\uff0c\u9632\u6b62\u76f8\u90bb\u4e24\u70b9\u8fde\u8fb9 \n\t\tif(!(dis[lian[i]]==mx[lian[i]]&&dis[lian[i-1]]==mx[lian[i-1]])\n\t\t\t&&mx[lian[i-1]]>mx[lian[mn[i]]])mn[i]=i-1;\n\t\t//\u5224\u65ad\u76f8\u90bb\u4e24\u70b9\u5230\u5e95\u80fd\u4e0d\u80fd\u8fde\uff08\u5373\u662f\u5426\u4e24\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u6709\u975e\u94fe\u5b50\u8282\u70b9\uff09 \n\t}//\u8ba1\u7b97\u6700\u77ed\u8def\u6700\u5c0f\u5f71\u54cd \n\tif(mn[2])\n\t\tMn=-mx[lian[2]]-mx[lian[mn[2]]]+(dis[lian[2]]<<1);\n\tfor(re int i=3;i<=cnt;i++)\n\t\tMn=Min(Mn,-mx[lian[i]]-mx[lian[mn[i]]]+(dis[lian[i]]<<1));\n}\nint main(){\n\tn=read(),m=read();\n\tfor(re int i=1;i<n;i++){\n\t\tint x=read(),y=read(),z=read();\n\t\tadd(x,y,z),add(y,x,z);\n\t}prework();\n\twhile(m--){\n\t\tint x=read();\n\t\tif(got)printf(\"%lld\\n\",dis[n]);\n\t\telse printf(\"%lld\\n\",Min(dis[n],dis[n]-Mn+x));\n\t\t//\u82e5\u7ecf\u8fc7\u65b0\u8fde\u7684\u8fb9\u7684\u8def\u5f84\u7adf\u7136\u66f4\u957f\uff0c\u5219\u6700\u77ed\u8def\u4e0d\u53d8\uff08dis[n]\uff09 \n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1579930326,
        "uid": 104292,
        "name": "YellowBean_Elsa",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1016F \u3010Road Projects\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u4e0d\u5f97\u4e0d\u8bf4 CF \u7684\u6570\u636e\u662f\u771f\u7684\u5f3a\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u70b9\u6f0f\u6d1e\uff0c\u4e24\u4efd\u6709\u4e9b\u533a\u522b\u7684\u4ee3\u7801\u90fd\u8fc7\u4e86\u3002\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u770b\u6211\u7684\u8bb0\u5f55\uff0c\u505a\u4e86\u5dee\u4e0d\u591a\u4e09\u4e2a\u5c0f\u65f6\u3002\n\n# \u601d\u8def\n\n\u539f\u56fe\u662f\u68f5\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6c42 $1$ \u5230 $n$ \u7684\u8ddd\u79bb\uff0c\n\n\u9898\u76ee\u8981\u6c42\u6dfb\u52a0\u65b0\u8fb9\u540e\u4f7f\u5f97\u6700\u77ed\u8def\u6700\u957f\uff0c\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u65b0\u52a0\u7684\u8fb9\u4f1a\u9020\u6210\u5f71\u54cd\uff0c\u56e0\u6b64\u5fc5\u987b\u4f7f\u5f97\u65b0\u7684\u8def\u5f84\u5c3d\u91cf\u7684\u957f\u3002\u5982\u679c\u8fc7\u957f\u7684\u8bdd\uff0c\u6700\u77ed\u8def\u5f84\u80af\u5b9a\u5c31\u662f\u539f\u8def\u5f84\u4e86\u3002\n\n\u6211\u4eec\u628a $1$ \u5230 $n$ \u4f5c\u4e3a\u4e3b\u94fe\u63ea\u51fa\u6765\uff0c\u5176\u4f59\u8fb9\u5747\u4f5c\u4e3a\u652f\u94fe\u6446\u5230\u4e00\u4fa7\uff0c\u53ef\u4ee5\u60f3\u5230\u6211\u4eec\u65b0\u52a0\u5165\u7684\u8fb9\u4f1a\u4f5c\u4e3a\u4e00\u6761 \u201c \u8fd1\u8def\u201d \u800c\u4e0d\u5fc5\u7ecf\u8fc7\u4e3b\u94fe\u4e0a\u7684\u8fb9\uff0c\u4ece\u800c\u76f4\u63a5\u7ecf\u8fc7\u8fd9\u6761\u8def\u5f84\u6765\u51cf\u5c11\u8def\u7a0b\u3002\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u4ecd\u7136\u5206\u7c7b\u8ba8\u8bba ( \u6211\u4eec\u5c06 $1$ \u5206\u5728\u5de6\u4fa7 \uff0c $n$ \u5206\u5728\u53f3\u4fa7 \uff0c\u65b0\u52a0\u5165\u7684\u8fb9\u8fde\u63a5\u5de6\u53f3\u4e24\u4fa7) \uff1a\n\n- \u52a0\u5165\u7684\u8fb9\u7684\u4e00\u70b9\u5728\u652f\u94fe\u4e0a\u3002\n\n1. \u8be5\u70b9\u5728\u5de6\u4fa7 \u3002\u5f53\u6211\u4eec\u5728\u5de6\u4fa7\u7684\u67d0\u4e00\u70b9\u65f6\uff0c\u53ef\u4ee5\u62d0\u5165\u8fd9\u4e2a\u70b9\u7684\u652f\u94fe\u5230\u8fbe\u8fd9\u4e2a\u70b9\u4ece\u800c\u8d70\u8fd9\u6761\u8fb9\u5230\u8fbe\u53f3\u4fa7\u3002\n\n2. \u8be5\u70b9\u5728\u53f3\u4fa7 \u3002\u5f53\u6211\u4eec\u4ece\u5de6\u4fa7\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u5230\u8fbe\u8fd9\u4e2a\u70b9\u65f6\uff0c\u4ece\u8fd9\u4e2a\u70b9\u6240\u5728\u652f\u94fe\u8fd4\u56de\u4e3b\u94fe\u3002\n\n3. \u4e0d\u96be\u770b\u51fa\uff0c\u4ee5\u4e0a\u52a0\u5165\u7684\u8fb9\u540e\u5bfc\u81f4\u7684\u957f\u5ea6\u4e3a \u652f\u94fe\u957f\u5ea6 + \u8fb9\u957f\u5ea6 \u3002\u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u8ba9\u652f\u94fe\u957f\uff0c\u6240\u4ee5\u5982\u679c\u9009\u62e9\u4e86\u8fd9\u6761\u652f\u94fe\uff0c\u5c31\u76f4\u63a5\u5efa\u5728\u6700\u6df1\u7684\u53f6\u5b50\u8282\u70b9\u3002\n- \u52a0\u5165\u7684\u8fb9\u7684\u4e00\u70b9\u5728\u652f\u94fe\u4e0a\u3002\n\n1. \u8fd9\u4e2a\u65e0\u9700\u592a\u591a\u8ba8\u8bba\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u8ba4\u4e3a\u6210\u6ca1\u6709\u957f\u5ea6\u7684\u652f\u94fe\u4e0a\u7684\u70b9\u3002\n\n2. \u957f\u5ea6\u4e3a \u8fb9\u957f\u5ea6\u3002\n\n\u4ece\u4e0a\u9762\u7684\u8ba8\u8bba\u4e2d\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u65b0\u5efa\u8fb9\u540e\uff0c\u82e5\u8981\u4f7f\u7528\u8fd9\u6761\u8fb9\u7684\u9700\u8981\u7684\u989d\u5916\u957f\u5ea6\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u5e94\u8be5\u4e0e\u5176\u8282\u7701\u7684\u957f\u5ea6\u4f5c\u6bd4\u8f83\u3002\n\n\u8282\u7701\u7684\u957f\u5ea6\u548c\u5bb9\u6613\u8ba1\u7b97\uff0c\u5c31\u662f\u8fd9\u6761\u65b0\u5efa\u8fb9\u7684\u4e24\u4e2a\u70b9\u6240\u5bf9\u5e94\u7684\u4e3b\u94fe\u4e0a\u7684\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5e94\u5f53\u4ee5 $1$ \u4e3a\u6839\u5904\u7406\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u548c\u5b50\u6811\u5185\u7684\u6700\u5927\u6df1\u5ea6\u4ee5\u53ca\u5b50\u6811\u5185\u8282\u70b9\u6570\u91cf\u3002\n\n\u7136\u540e\u4ece $n$ \u5411\u4e0a\u8df3\u5e76\u8ba1\u7b97\u5176\u6240\u4ee5\u7684\u652f\u94fe\u5b50\u6811\u5185\u7684\u70b9\u7684\u8d21\u732e\u3002\n\n\u671f\u95f4\uff0c\u4f60\u8bb0\u5f55\u4e00\u4e2a\u503c $maxx$ \u8868\u793a \u652f\u94fe\u957f\u5ea6 $-$ \u4e3b\u94fe\u957f\u5ea6 \u7684\u6700\u5927\u503c\u3002\u901a\u8fc7\u8fd9\u4e2a\u503c\uff0c\u4f60\u53ef\u4ee5\u5728\u8ba1\u7b97\u8d21\u732e\u65f6\uff0c\u5c1d\u8bd5\u5c06\u5b50\u6811\u5185\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u4e0e\u5176\u5339\u914d\uff0c\u6700\u7ec8\u957f\u5ea6\u5373\u4e3a $maxx+dep[x]-dep[now]$ \uff08\u5176\u4e2d $x$ \u4e3a\u5b50\u6811\u5185\u6700\u6df1\u7684\u70b9 , $now$ \u4e3a\u5f53\u524d\u7684\u70b9\uff09\u3002\u8ba1\u7b97\u5b8c\u540e\u5e76\u5c1d\u8bd5\u66f4\u65b0 $maxx$ . \u5f53\u4f60\u5411\u4e0a\u8df3\u65f6\uff0c\u51cf\u53bb\u4e3b\u94fe\u4e0a\u8fb9\u7684\u957f\u5ea6\u6765\u8fdb\u884c\u7ef4\u62a4\u3002\u4f46\u662f\u4f60\u4e5f\u53ef\u80fd\u5c06\u4e3b\u94fe\u4e0a\u7684\u70b9\u4f5c\u4e3a\u5339\u914d\u70b9\uff0c\u6240\u4ee5\u8bb0\u5f97\u53d6\u4e2a $maxx$ \u3002\n\n\u7136\u800c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u79cd\u9519\u8bef\u60c5\u51b5\uff0c\u5c31\u662f\u5f53\u4f60\u5c06\u4e3b\u94fe\u4e0a\u7684\u67d0\u4e00\u70b9\u4f5c\u4e3a \u5339\u914d\u70b9 \u540e\uff0c\u4f60\u5411\u4e0a\u8df3\u4e4b\u540e\uff0c \u8fd9\u4e24\u4e2a\u70b9\u95f4\u76f8\u4e92\u5339\u914d\u4e86\u3002 \u6240\u4ee5\u6211\u53c8\u8bb0\u5f55\u4e86\u4e00\u4e2a $maxx2$ \uff0c\u6765\u7ee7\u627f $maxx$ \uff0c\u7136\u540e\u53ea\u8ba9 \u4e3b\u94fe\u4e0a\u70b9 \u4e0e $maxx2$ \u5339\u914d\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u4e86\u3002\n\n\u5bf9\u4e8e\u4e00\u70b9\uff0c\u5176\u6240\u6709\u652f\u94fe\u7684\u5b50\u6811\u5185\u70b9\u6570\u4e4b\u548c\u591a\u4f59 $2$ \u7684\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a $ans$ \u8bbe\u6ee1\u4e86\uff0c\u56e0\u4e3a\u5c06\u65b0\u8fb9\u5efa\u5728\u8fd9\u4e2a\u5b50\u6811\u5185\u7684\u8bdd\uff0c\u6700\u77ed\u8def\u80af\u5b9a\u5c31\u662f\u4e3b\u94fe\u4e86\uff0c\u65b0\u8fb9\u4e0d\u4f1a\u51cf\u5c11\u8def\u7a0b\u7684\uff0c\u56e0\u4e3a\u4e24\u70b9\u5bf9\u5e94\u7684\u4e3b\u94fe\u4e0a\u7684\u70b9\u95f4\u8ddd\u79bb\u4e3a $0$ \uff0c\u53ea\u4f1a\u589e\u52a0\u957f\u5ea6\u3002\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline void read(int &x)\n{\n\tint w=1;x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-')w=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\tx*=w;\n}\nstruct road\n{\n\tint to,val;\n};\nvector<road>side[300010];\nint fa[300010],dep[300010],siz[300010],maxdep[300010];\nbool used[300010];\nvoid dfs(int x)\n{\n\tsiz[x]=1;maxdep[x]=dep[x];\n\tfor(int i=0;i<side[x].size();i++)\n\t{\n\t\tint to=side[x][i].to;\n\t\tint val=side[x][i].val;\n\t\tif(to==fa[x])continue;\n\t\tdep[to]=dep[x]+val;\n\t\tfa[to]=x;\n\t\tdfs(to);\n\t\tsiz[x]+=siz[to];\n\t\tmaxdep[x]=max(maxdep[x],dep[to]);\n\t}\n}\nsigned main()\n{\n\tint n,m,a,b,c;read(n);read(m);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tread(a);read(b);read(c);\n\t\tside[a].push_back((road){b,c});\n\t\tside[b].push_back((road){a,c});\n\t}\n\tfa[1]=1;dfs(1);\n\tint now=n,maxx=-9999999999999999,ladep=-9999999999999,ladep2=-9999999999999,qa=9999999999999999,qb=999999999999999;\n\twhile(1)\n\t{\n\t//\tcout<<now<<\" \"<<qa<<\" \"<<qb<<\" \"<<ladep<<\" \"<<maxx<<\"\\n\";\n\t\tint tofa,sizz=0;used[now]=1;\n\t\tmaxx=max(ladep2,maxx);\n\t\tfor(int i=0;i<side[now].size();i++)\n\t\t{\n\t\t\tint to=side[now][i].to;\n\t\t\tint val=side[now][i].val;\n\t\t\tif(to==fa[now])\n\t\t\t{\n\t\t\t\ttofa=val;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(used[to])continue;\n\t\t\tmaxx=max(maxdep[to]-dep[now]+ladep,maxx);\n\t\t\tsizz+=siz[to];\n\t\t\tladep=max(ladep,maxdep[to]-dep[now]);\n\t\t}\n\t\tif(sizz>1)maxx=99999999999999999;\n\t\tladep2=max(ladep,ladep2);\n\t\tladep2-=tofa;\n\t\tladep=max(0ll,ladep);\n\t\tladep-=tofa;\n\t\tmaxx=max(-qa-qb,maxx);\n\t\tqb=qa;qa=tofa;\n\t\tif(now==1)break;\n\t\tnow=fa[now];\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tread(a);\n\t\tcout<<dep[n]+min(0ll,maxx+a)<<\"\\n\";\n\t}\n}\n```",
        "postTime": 1572922986,
        "uid": 89785,
        "name": "\u7a7a\u306e\u8ecc\u8de1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1016F \u3010Road Projects\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\u7ed9\u4f60\u4e00\u4e2a\u6811\uff0c\u7136\u540e\u7ed9\u60a8$m$\u6b21\u8be2\u95ee\uff0c\u8be2\u95ee\u95f4\u4e92\u76f8\u72ec\u7acb\uff0c\u6bcf\u4e2a\u8be2\u95ee\u8ba9\u4f60\u6dfb\u52a0\u4e00\u6761\u957f\u5ea6\u7ed9\u5b9a\u7684\u8fb9\uff0c\u4f7f$1$~$n$\u7684\u6700\u77ed\u8def\u53d8\u5316\u6700\u5c0f\u3002\n\n\u7279\u5224+\u6811\u5f62$dp$\uff08\u53ef\u80fd\u662f\u8d2a\u5fc3\uff1f\uff09\n\n\u53ef\u4ee5\u786e\u5b9a\u7684\u662f\uff0c\u5982\u679c$1$~$n$\u7684\u6700\u77ed\u8def\u94fe\u4e0a\u6709\u4e00\u4e2a\u70b9\u62e5\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4e0d\u5728\u6700\u77ed\u8def\u94fe\u8868\u4e0a\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u6dfb\u52a0\u8fb9\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u968f\u4fbf\u8fde\u5728\u90a3\u4e24\u4e2a\u70b9\u4e0a\u4e86\uff0c\u4e0d\u4f1a\u5bf9\u6700\u77ed\u8def\u4ea7\u751f\u5f71\u54cd\u3002\u6240\u6709\u8be2\u95ee\u90fd\u76f4\u63a5\u8f93\u51fa\u6700\u77ed\u8def\u957f\u5ea6\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u6bcf\u4e00\u4e2a\u5728\u6700\u77ed\u8def\u94fe\u4e0a\u7684\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u6216\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u6ce8\u610f\u6b64\u5904\u7684\u5b57\u8282\u70b9\u662f\u4e0d\u5305\u62ec\u94fe\u4e0a\u7684\u70b9\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6dfb\u52a0\u4e86\u4e00\u6761\u957f\u5ea6\u4e3a$0$\u8fb9\uff0c\u6dfb\u52a0\u540e\u6700\u77ed\u8def\u6539\u53d8\u6700\u5c0f\u7684\u90a3\u4e2a\u662f\u6700\u4f18\u7684\u6dfb\u8fb9\u65b9\u6848\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8dd1\u4e24\u6b21\u6700\u77ed\u8def\uff0c\u5206\u522b\u4ece$1$\u51fa\u53d1\u548c\u4ece$n$\u51fa\u53d1\uff0c\u4ece$1$\u51fa\u53d1\u8bb0\u4e3a$dis1[]$\uff0c\u4ece$n$\u51fa\u53d1\u4e3a$dis2[]$\u3002\u8bb0\u5f55\u4e00\u4e2a$maxn1[i]$\u8868\u793a\u5230\u4e86$i$\u8fd9\u4e2a\u70b9\uff0c\u4ece$1$\u51fa\u53d1\u5230$i$\u8fd9\u4e2a\u70b9\uff08\u540c\u65f6\u4e5f\u5230\u4e86$i$\u7684\u94fe\u5916\u5b50\u8282\u70b9\uff09\u7684\u6700\u957f\u8def\u5f84\uff0c\u90a3\u4e48\u5982\u679c$son[i]$\u5b58\u5728\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f$maxn1[i]=max(dis1[son[i]],maxn1[father[i]])$\uff0c\u5426\u5219\u662f$maxn1[i]=max(dis1[i],maxn1[father[i]])$\uff0c$father[i]$\u4ee3\u8868\u7684\u662f\u4ece$1$\u5230$i$\u94fe\u4e0a\u7684$i$\u7684\u76f8\u90bb\u70b9\uff0c$i$\u548c$father[i]$\u5fc5\u987b\u5728\u6700\u77ed\u8def\u94fe\u4e0a\uff0c$son[i]$\u5fc5\u987b\u4e0d\u5728\u6700\u77ed\u8def\u94fe\u4e0a\u3002\u6b64\u5916$maxn2$\u4ee3\u8868\u7684\u662f\u4ece$n$\u53cd\u5411\u8fc7\u6765\u7684$maxn1$\uff0c\u5dee\u4e0d\u591a\u4e00\u6837\u3002\n\n\u6211\u4eec\u73b0\u5728\u6dfb\u52a0$0$\u8fb9\u7684\u6700\u5927\u6700\u77ed\u8def\u3002\n\n\u6211\u4eec\u6cbf\u7740\u6700\u77ed\u8def\u94fe\u679a\u4e3e\uff0c\u8bbe\u6700\u5927\u6700\u77ed\u8def\u662f$ans$\u3002\u5f53$i$\u548c$father[i]$\u4e2d\u6709\u4e00\u70b9\u62e5\u6709\u94fe\u5916\u5b50\u8282\u70b9\uff0c$ans=max(ans,maxn1[father[i]]+maxn2[i])$\uff0c\u5426\u5219\u6211\u4eec\u65e0\u6cd5\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u53ea\u80fd\u662f\u8df3\u8fc7$father[i]$\u8fde\u8fb9\uff0c\u5219$ans=max(ans,maxn1[father[father[i]]]+maxn2[i])$\uff0c\u5f53\u7136\u8981\u4fdd\u8bc1\u8fde\u8fb9\u7684\u4e24\u4e2a\u70b9\u90fd\u5b58\u5728\uff01\n\n\u6700\u540e\u8be2\u95ee\u8f93\u5165$k$\uff0c\u5224\u65ad$k+ans$\u662f\u5426\u5927\u4e8e\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u5927\u4e8e\u7684\u8bdd\u8f93\u51fa\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u5426\u5219\u8f93\u51fa$k+ans$\u3002\n\n\u4f60\u4eec\u4e0d\u53ef\u80fd\u770b\u5f97\u61c2\u7684\u7384\u5b66\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n,m;\nint v[300005];\nlong long dis[300006];\nlong long dis2[300005];\nlong long nxt[300005];\nlong long maxn[300005];\nlong long maxn2[300005];\nlong long an;\nbool t;\n\nvector<int> q[300005];\nvector<long long> l[300005];\n\nvoid back(int x,int father)\n{\n\tfor(int i=0;i<q[x].size();i++)\n\t{\n\t\tint nx=q[x][i];\n\t\tif(nx==father)continue;\n\t\tdis2[nx]=dis2[x]+l[x][i];\n\t\tback(nx,x);\n\t}\n}\n\nbool dfs(int x,int father)\n{\n    bool ok=0;\n\tv[x]++;\n    if(x==n)\n    {\n        ok=1;\n    }\n    for(int i=0;i<q[x].size();i++)\n    {\n        int nx=q[x][i];\n        if(nx==father)continue;\n        dis[nx]=dis[x]+l[x][i];\n        bool op=dfs(nx,x);\n        if(op)\n        \tnxt[x]=nx;\n        if(op==0)\n            v[x]+=v[nx];\n        ok|=op;\n    }\n    if(v[x]>2)t=1;\n    maxn[x]=dis[x];\n    maxn2[x]=dis2[x];\n    for(int i=0;i<q[x].size();i++)\n    {\n    \tint nx=q[x][i];\n    \tmaxn2[x]=max(maxn2[x],maxn2[nx]);\n\t\tif(nx==nxt[x])continue;\n\t\tmaxn[x]=max(maxn[x],maxn[nx]);\n\t}\n\tif(x!=n){\n\t\tif(v[x]>1||v[nxt[x]]>1){\n\t\t\tan=max(an,maxn[x]+maxn2[nxt[x]]);\n\t\t}\n\t\telse if(nxt[nxt[x]]!=0)\n\t\t\tan=max(an,maxn[x]+maxn2[nxt[nxt[x]]]);\n\t}\n    return ok;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n\t\tlong long z;\n        scanf(\"%d%d%lld\",&x,&y,&z);\n        q[x].push_back(y);\n        q[y].push_back(x);\n        l[x].push_back(z);\n        l[y].push_back(z);\n    }\n    back(n,n);\n    dfs(1,1);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tlong long k;\n\t\tscanf(\"%lld\",&k);\n\t\tif(k+an>dis2[1]||t==1)\n\t\t\tprintf(\"%lld\\n\",dis2[1]);\n\t\telse\n\t\t\tprintf(\"%lld\\n\",an+k);\n\t}\n    return 0;\n}\n```",
        "postTime": 1550043475,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1016F \u3010Road Projects\u3011"
    },
    {
        "content": "## \u9898\u76ee\u94fe\u63a5\n\n[Link.](https://www.luogu.com.cn/problem/CF1016F)\n\n## \u9898\u89e3\n\n\u56e0\u4e3a\u662f $1$ \u5230 $n$ \u5728\u6811\u4e0a\u7684\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f $1$ \u5230 $n$ \u8fd9\u6761\u94fe\uff0c\u6211\u4eec\u5148\u628a\u94fe\u62c9\u51fa\u6765\uff0c\u90a3\u4e48\u94fe\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u770b\u505a\u6302\u4e0a\u4e86\u5269\u4f59\u7684\u4e0d\u5728\u94fe\u4e0a\u7684\u8282\u70b9\u3002\n\n\u5982\u679c\u94fe\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\u6302\u7740\u7684\u8282\u70b9\u8d85\u8fc7\u6216\u7b49\u4e8e\u4e24\u4e2a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5728\u8fd9\u4e24\u4e2a\u4e4b\u95f4\u8fde\u8fb9\uff0c\u6240\u4ee5\u65e0\u8bba\u8be2\u95ee\u6240\u7ed9\u7684\u8fb9\u662f\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u3002\u8fd9\u79cd\u60c5\u51b5\u7279\u5224\u5373\u53ef\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u7684\u8282\u70b9\u5c31\u6700\u591a\u53ea\u4f1a\u6302\u4e00\u4e2a\u4e0d\u5728\u94fe\u4e0a\u7684\u8282\u70b9\u4e86\u3002\n\n\u56e0\u4e3a\u53ea\u6709\u80fd\u8fde\u8fb9\u624d\u53ef\u80fd\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff0c\u6240\u4ee5\u8003\u8651\u54ea\u4e9b\u70b9\u4e4b\u95f4\u53ef\u4ee5\u8fde\u8fb9\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u53ea\u6709\u5f53\u94fe\u4e0a\u7684\u4e24\u4e2a\u70b9\u76f8\u90bb\u4e14\u4ed6\u4eec\u90fd\u6ca1\u6709\u6302\u5176\u4ed6\u70b9\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4e0d\u53ef\u4ee5\u8fde\u8fb9\u3002\n\n\u4e3a\u4e86\u8868\u73b0\u8fde\u8fb9\u7684\u8d21\u732e\uff0c\u5b9a\u4e49 $\\mathrm {dep}$ \u6570\u7ec4\uff0c$\\mathrm{dep_i}$\u8868\u793a\u4ece $1$ \u5f00\u59cb\u5230 $i$ \u7684\u8ddd\u79bb\uff1b\u5b9a\u4e49 $\\mathrm {now}$ \u6570\u7ec4\uff0c$\\mathrm{now_i}$\u8868\u793a\u4ece $1$ \u5f00\u59cb\u5230 $i$ \u7684\u8ddd\u79bb\uff0c\u5982\u679c $i$ \u6302\u4e86\u70b9\uff0c\u90a3\u4e48 $\\mathrm{now_i}$ \u518d\u52a0\u4e0a $i$ \u5230\u5b83\u6302\u7684\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u8bbe\u5728 $i,j$ \u95f4\u8fde\u4e86\u4e00\u6761\u957f\u5ea6\u4e3a $\\mathrm {sum}$ \u7684\u8fb9$(i<j)$\u3002\n\n\u56e0\u4e3a\u5728 $i,j$ \u8fde\u4e86\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u6784\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u4ece\u4e0d\u5728\u94fe\u4e0a\u7684\u8fb9\u8d70\u5230 $n$ \u7684\u4ee3\u4ef7\u5c31\u4e3a $\\mathrm {dep_n} + \\mathrm {now_i} + \\mathrm{now_j} - \\mathrm{dep_j} \\times 2 + \\mathrm{sum}$\u3002\n\n\u53d1\u73b0\u9664\u4e86 $\\mathrm {sum}$ \u4ee5\u5916\u5176\u4ed6\u4e1c\u897f\u90fd\u662f\u56fa\u5b9a\u7684\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u6765\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u8bfb\u5165\u7684 $\\mathrm {sum}$\uff0c\u6700\u540e\u548c $\\mathrm {dep_n}$ \u6bd4\u8f83\u4e00\u4e2a\u6700\u5c0f\u503c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u8003\u8651\u600e\u4e48\u6c42\u51fa$\\mathrm {now_i} + \\mathrm{now_j} - \\mathrm{dep_j} \\times 2$ \u3002\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u4ece\u540e\u5f80\u524d\u4fbf\u5229\uff0c\u518d\u7528\u4e2a\u4f18\u5148\u961f\u5217\u7ef4\u62a4 $\\mathrm{now_j} - \\mathrm{dep_j} \\times 2$ \u7684\u6700\u5927\u503c\u5373\u53ef~~\u5176\u5b9e\u53ef\u4ee5\u5355\u8c03\u961f\u5217\u4f46\u6211\u61d2~~\u3002\n\n### code.\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int INF=1e15;\nint n,m;\n\nstruct zz{\n\tint u,w;\n};\nbool operator <(zz x,zz y){\n\tif(x.u==y.u) return x.w>y.w;\n\treturn x.u<y.u; \n} \nvector<zz> v[300005];\nbool f[300005];\nint dep[300005],Max[300005],siz[300005];\nvoid DFS_1(int x,int fa){\n\tif(x==n) f[x]=1;\n\tMax[x]=dep[x];siz[x]=1;\n\tfor(const auto &qwq:v[x]) if(qwq.u^fa){\n\t\tint y=qwq.u,w=qwq.w;\n\t\tdep[y]=dep[x]+w;\n\t\tMax[x]=max(Max[x],Max[y]);\n\t\tDFS_1(y,x);\n\t\tif(f[y]) f[x]=1;\n\t\telse siz[x]+=siz[y];\n\t}\n}\nvector<int> q;\nint now[300005];\nvoid DFS_2(int x,int fa){\n\tq.push_back(x);now[x]=dep[x];\n\tfor(auto qwq:v[x]) if(!f[qwq.u]) now[x]+=(Max[qwq.u]-dep[x]);\n\tfor(auto qwq:v[x]) if(f[qwq.u]&&(qwq.u^fa)) DFS_2(qwq.u,x);\n}\n\npriority_queue<zz> qq;\n\nsigned main(){\n\tcin>>n>>m;\n\tfor(int i=1,x,y,z;i<n;i++) \n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z),v[x].push_back((zz){y,z}),v[y].push_back((zz){x,z});\n\tdep[1]=0;DFS_1(1,0);\n\tfor(int i=1;i<=n;i++){\n\t\tif(f[i]) if(siz[i]>=3){\n\t\t\tfor(int k=1;k<=m;k++) printf(\"%lld\\n\",dep[n]); return 0;\n\t\t}\n\t\t\n\t}\n\tDFS_2(1,0);\n\tint ans=now[1]+now[n]-dep[n]*2;\n\t\n\tfor(int i=q.size()-1;i>=0;i--){\n\t\tzz qwq;\n\t\tif(!qq.size()) goto Fuck;\n\t\tqwq=qq.top();\n\t\tif(qwq.w==q[i+1]&&siz[qwq.w]<2&&siz[q[i]]<2){\n\t\t\tqq.pop();\n\t\t\tif(!qq.size()){ qq.push(qwq);goto Fuck; }\n\t\t\telse{ zz qaq=qq.top();qq.push(qwq);qwq=qaq; }\n\t\t}\n\t\tans=max(ans,qwq.u+now[q[i]]);\n\t\tFuck:;qq.push((zz){now[q[i]]-dep[q[i]]*2,q[i]});\n\t}\n\t\n\tfor(int i=1,x;i<=m;i++){\n\t\tscanf(\"%lld\",&x),printf(\"%lld\\n\",min(dep[n],dep[n]+ans+x));\n\t}\n\treturn 0;\n}\n```\n\u54e6\u5bf9\u4e86\uff0c\u8fd9\u4efd\u4ee3\u7801\u53ea\u80fd\u5728\u79c1\u4e0b\u7528\uff0c\u5728\u897f\u897f\u5f17\u7684\u6bd4\u8d5b\u4e2d\u7528\u4f1a\u88ab\u5c01\u53f7\u7684/jk\n",
        "postTime": 1657788923,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "CF1016F \u9898\u89e3"
    }
]