[
    {
        "content": "\u66f4\u9b54\u6cd5\u68d2\u7684\u9605\u8bfb\u4f53\u9a8c $\\to $ [`George1123`](https://www.cnblogs.com/George1123/p/14035139.html)\n\n---\n\n## \u9898\u9762\n\n> [CF348E Pilgrims](https://www.luogu.com.cn/problem/CF348E)\n\n> \u6709\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684 **\u5e26\u6743** \u6811\u548c $m$ \u4e2a\u5173\u952e\u70b9\uff0c\u8981\u6c42\u6740\u4e86\u4e00\u4e2a\u4e0d\u5173\u952e\u7684\u70b9\uff0c\u6ee1\u8db3\u6700\u591a\u7684\u5173\u952e\u70b9\u5230\u79bb\u5b83\u6700\u8fdc\u7684\u6240\u6709\u5173\u952e\u70b9\u7684\u8def\u5f84\u90fd\u88ab\u6253\u65ad\u3002\u6c42\u53ef\u4ee5\u6ee1\u8db3\u7684\u6700\u591a\u5173\u952e\u70b9\u6570\u548c\u6b64\u65f6\u7684\u6740\u70b9\u65b9\u6848\u6570\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$2\\le m<n\\le 10^5$\u3002\n\n---\n\n## \u9898\u89e3\n\n\u5199\u4e86\u4e2a\u5947\u602a\u7684\u505a\u6cd5\u8c03\u4e86\u4e00\u4e2a\u4e0a\u5348\uff0c\u5199\u7bc7\u4e0d\u884c\u7684\u9898\u89e3\u3002\n\n\u5f88\u660e\u663e\u6240\u6709\u5173\u952e\u70b9\u5230\u6240\u6709\u79bb\u5b83\u6700\u8fdc\u7684\u5173\u952e\u7684\u6240\u6709\u8def\u5f84\u90fd\u7ecf\u8fc7\u4e00\u4e2a\u70b9\uff1a\n\n\u8ddd\u79bb\u6700\u8fdc\u7684\u4e00\u5bf9\u5173\u952e\u70b9\u7684\u4e2d\u70b9\uff08\u4e0d\u9700\u8981\u53d6 $\\frac{dist}{2}$ \u7684\u4f4d\u7f6e\u5efa\u51fa\u4e00\u4e2a\u65b0\u70b9\uff01\u5982\u679c\u771f\u6b63\u7684\u4e2d\u5fc3\u5728\u8fb9\u4e0a\uff0c\u8fb9\u4e0a\u7684\u4e24\u70b9\u90fd\u884c\uff01\uff09\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $u$\uff0c\u5982\u679c\u4ee5\u5b83\u4e3a\u6839\uff0c\u79bb\u5b83\u6700\u8fdc\u7684\u6240\u6709\u70b9\u7684 $\\rm lca$ \u4e3a $v$\uff0c\u53ea\u6709\u6740 $u$ \u548c $v$ \u8def\u5f84\u4e0a\u7684\u70b9\u624d\u80fd\u6740\u6b7b $u$\u3002\n\n\u6240\u4ee5\u76ee\u6807\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a $u$ \u627e $v$\uff0c\u7136\u540e\u6700\u540e\u6811\u4e0a\u5dee\u5206\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u53ef\u4ee5\u4ee5\u4e0a\u6587\u4e2d\u7684\u4e2d\u70b9\u4e3a\u6839\uff0c\u8fb9 `dfs` \u8fb9\u627e\uff0c\u8fd9\u4e2a $v$ \u662f\u53ef\u4ee5\u52a8\u6001\u7ef4\u62a4\u7684\u3002\n\n\u5982\u679c\u5f53\u524d `dfs` \u5230\u8282\u70b9 $u$\uff0c\u8fd9\u4e2a $v$ \u7edd\u4e0d\u4f1a\u662f\u5b83\u7684\u5b50\u6811\u70b9\uff0c\u751a\u81f3\u4e0d\u53ef\u80fd\u662f\u548c $u$ \u5728\u6839\u7684\u540c\u4e00\u68f5\u5b50\u6811\u5185\u7684\u70b9\u3002\n\n\u6240\u4ee5\u6240\u6709\u79bb $u$ \u6700\u8fdc\u7684\u70b9\u7684\u5f53\u524d $\\rm lca$ \u5c31\u662f $v$\u3002\n\n\u53ef\u4ee5\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u548c\u6700\u5927\u503c\u70b9\u7684 $\\rm lca$\uff0c\u652f\u6301\u533a\u95f4\u52a0\u51cf\u3002\n\n\u7136\u540e\u5c31\u89e3\u51b3\u4e86\u3002\u5982\u679c\u5acc\u5f03 $\\Theta(\\log n)$ \u7684 `pushup`\uff0c\u53ef\u4ee5\u7528 `ST` \u8868 $\\Theta(1)$ `lca`\u3002\n\n---\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\n#define x first\n#define y second\n#define bg begin()\n#define ed end()\n#define pb push_back\n#define mp make_pair\n#define sz(a) int((a).size())\n#define R(i,n) for(int i(0);i<(n);++i)\n#define L(i,n) for(int i((n)-1);~i;--i)\nconst int iinf=0x3f3f3f3f;\nconst ll linf=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=1e5+1;\nint n,m,rt=-1,mon[N];\nbool imon[N],newed;\n\n//Tree_0\nconst int D=20;\nvector<int> e[N],to,we;\nvoid adde(int u,int v,int w){\n    e[u].pb(sz(to)),to.pb(v),we.pb(w);\n    e[v].pb(sz(to)),to.pb(u),we.pb(w);\n}\nint dep[N],pre[N],in,dfn[N],lim[N],no[N];\nint in2,dfn2[N],lg[N<<1]; pair<int,int> st[D][N<<1];\nvoid dfs0(int u){\n    for(int v:e[u])if(to[v]^to[pre[u]])\n        dep[to[v]]=dep[u]+we[v],pre[to[v]]=v^1,dfs0(to[v]);\n}\nvoid dfs1(int u){\n    no[dfn[u]=in++]=u,st[0][dfn2[u]=in2++]=mp(dep[u],u);\n    for(int v:e[u])if(to[v]^pre[u])\n        dep[to[v]]=dep[pre[to[v]]=u]+we[v],dfs1(to[v]),\n            st[0][in2++]=mp(dep[u],u);\n    lim[u]=in;\n}\nvoid linit(){\n    R(i,D-1)R(u,in2-(2<<i)+1)\n        st[i+1][u]=min(st[i][u],st[i][u+(1<<i)]);\n    R(i,in2+1)if(i>1) lg[i]=lg[i>>1]+1;\n}\nint lca(int u,int v){\n    u=dfn2[u],v=dfn2[v];\n    if(u>v) swap(u,v); v++; int i=lg[v-u];\n    return min(st[i][u],st[i][v-(1<<i)]).y;\n}\n\n//SegmentTree\nconst int sN=N<<2;\n#define mid ((l+r)>>1)\nint mx[sN],tag[sN],anc[sN];\nvoid pushup(int u){\n    if(mx[u*2+1]>mx[u*2+2]) mx[u]=mx[u*2+1],anc[u]=anc[u*2+1];\n    else if(mx[u*2+2]>mx[u*2+1]) mx[u]=mx[u*2+2],anc[u]=anc[u*2+2];\n    else mx[u]=mx[u*2+1],anc[u]=lca(anc[u*2+1],anc[u*2+2]);\n}\nvoid pushtag(int u,int v){tag[u]+=v,mx[u]+=v;}\nvoid pushdown(int u){tag[u]&&(pushtag(u*2+1,tag[u]),\n    pushtag(u*2+2,tag[u]),tag[u]=0);}\nvoid sinit(int u=0,int l=0,int r=n){\n    if(r-l==1) return mx[u]=imon[no[l]]?dep[no[l]]:-iinf,anc[u]=no[l],void();\n    sinit(u*2+1,l,mid),sinit(u*2+2,mid,r),pushup(u);\n}\nvoid fixr(int x,int y,int v,int u=0,int l=0,int r=n){\n    if(r<=x||y<=l) return; if(x<=l&&r<=y) return pushtag(u,v);\n    pushdown(u),fixr(x,y,v,u*2+1,l,mid),fixr(x,y,v,u*2+2,mid,r),pushup(u);\n}\nvoid print(int u=0,int l=0,int r=n){\n    if(r-l==1) return void(cout<<\"[\"<<l<<\"]:\"<<mx[u]<<\" \");\n    pushdown(u),print(u*2+1,l,mid),print(u*2+2,mid,r);\n}\n#undef mid\n\n//Tree_1\nint mk[N];\nvoid dfs2(int u){\n    if(imon[u]) mk[u]++,mk[anc[0]]++,mk[rt]--;\n    for(int v:e[u])if(to[v]^pre[u]){\n        fixr(0,n,we[v]),fixr(dfn[to[v]],lim[to[v]],-2*we[v]);\n        dfs2(to[v]),fixr(0,n,-we[v]),fixr(dfn[to[v]],lim[to[v]],2*we[v]);\n    }\n}\nvoid dfs3(int u){\n    for(int v:e[u])if(to[v]^pre[u]) dfs3(to[v]),mk[u]+=mk[to[v]];\n}\n\n//Main\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin>>n>>m;\n    R(i,m) cin>>mon[i],--mon[i],imon[mon[i]]=true;\n    R(i,n-1){int u,v,w; cin>>u>>v>>w,--u,--v,adde(u,v,w);}\n    R(u,n) sort(e[u].bg,e[u].ed);\n    int s=-1,t=-1,now=0;\n    R(u,n) pre[u]=-1; dep[mon[0]]=0,dfs0(mon[0]);\n    R(i,m)if(!~s||dep[mon[i]]>dep[s]) s=mon[i];\n    R(u,n) pre[u]=-1; dep[s]=0,dfs0(s);\n    R(i,m)if(!~t||dep[mon[i]]>dep[t]) t=mon[i];\n    for(int u=t;u^s;u=to[pre[u]]){\n        if(now>=dep[t]/2){rt=u;break;}\n        now+=we[pre[u]];\n    }\n    if(!~rt) rt=s;\n    R(u,n) pre[u]=-1;\n    dep[rt]=0,dfs1(rt),linit(),sinit(),dfs2(rt),dfs3(rt);\n    int mx=-1,cnt=0;\n    R(u,n)if(!imon[u]){\n        if(mk[u]>mx) mx=mk[u],cnt=1;\n        else if(mk[u]==mx) cnt++; \n    }\n    cout<<mx<<\" \"<<cnt<<'\\n';\n    return 0;\n}\n```\n\n---\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1606276310,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF348E \u3010Pilgrims\u3011"
    },
    {
        "content": "\u6811\u5f62 dp + \u6811\u4e0a\u5dee\u5206\u3002\n\n\u679a\u4e3e\u6467\u6bc1\u7684\u57ce\u9547\u4e0d\u65b9\u4fbf\u5904\u7406\uff0c\u8003\u8651\u679a\u4e3e\u4fee\u9053\u9662\u3002\n\n\u8bbe\u4ee5\u4fee\u9053\u9662 $x$ \u4e3a\u6839\uff0c\u6240\u6709\u8ddd\u79bb $x$ \u6700\u8fdc\u7684\u4fee\u9053\u9662\u7684 lca \u4e3a $y$\u3002$x$ \u7684\u671d\u5723\u8005\u4e0d\u9ad8\u5174\u5f53\u4e14\u4ec5\u5f53 $y$ \u5230 $x$ \u7684\u8def\u5f84\u4e0a\u6709\u57ce\u9547\u88ab\u6467\u6bc1\u3002\n\n\u5148\u4e00\u904d dfs \u9884\u5904\u7406 $f_{i,x}$ ($0<=i<=2$) \u8868\u793a\u4ee5 $1$ \u4e3a\u6839\uff0c\u6bcf\u4e2a\u70b9\u5411\u4e0b\u7684\u6700\u957f\u94fe\uff0c\u6b21\u957f\u94fe\uff0c\u7b2c\u4e09\u957f\u94fe\uff1b$g_{i,x}$ \u8868\u793a $f_{i,x}$ \u5bf9\u5e94\u7684 $y$\uff1b$h_{i,x}$ \u8868\u793a $g_{i,x}$ \u4f4d\u4e8e\u70b9 $x$ \u7684\u513f\u5b50 $h_{i,x}$ \u7684\u5b50\u6811\u4e2d\uff1b$p_x$ \u8868\u793a $x$ \u5b50\u6811\u5185\u8ddd\u79bb $x$ \u6700\u8fdc\u7684\u4fee\u9053\u9662\u7684 lca\u3002\n\n\u82e5\u70b9 $x$ \u7684\u5b50\u6811\u5185\u548c\u5b50\u6811\u5916\u90fd\u6709\u8ddd\u79bb $x$ \u6700\u8fdc\u7684\u4fee\u9053\u9662\uff0c\u5219\u70b9 $x$ \u4e0d\u53ef\u80fd\u88ab\u7834\u574f\u3002\n\n\u82e5\u8ddd\u79bb $x$ \u6700\u8fdc\u7684\u4fee\u9053\u9662\u5728\u5b50\u6811\u5185\uff0c\u5219 $y=p_x$\u3002\n\n\u82e5\u5728\u5b50\u6811\u5916\uff0c\u5728\u7b2c\u4e8c\u904d dfs \u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u4e09\u4e2a\u53d8\u91cf $u$,$v$,$w$ \u5206\u522b\u8868\u793a\u5f53\u524d\u8ddd\u79bb\u6700\u8fdc\u7684\u4fee\u9053\u9662\u7684 lca(\u4ee5 $x$ \u4e3a\u6839)\uff0c$x$ \u548c $u$ \u7684 lca(\u4ee5 $1$ \u4e3a\u6839)\uff0c\u4ee5\u53ca\u6700\u8fdc\u7684\u8ddd\u79bb\uff0c\u5219 $y=u$\u3002\u7ef4\u62a4 $v$ \u662f\u4e3a\u4e86\u907f\u514d\u500d\u589e\u6c42 lca\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6bcf\u6b21\u5bf9\u4e00\u6761\u94fe\u7684\u70b9\u70b9\u6743 +1 \uff0c\u6700\u540e\u8be2\u95ee\u6240\u6709\u70b9\u7684\u70b9\u6743\u3002\u6811\u4e0a\u5dee\u5206\u6253 tag\uff0c\u6700\u540e\u518d dfs \u4e00\u904d\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$ \u3002\n\n\u5177\u4f53 dp \u8f6c\u79fb\u65b9\u7a0b\u548c\u5b9e\u73b0\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+3,M=2e5+3;\nbool b[N];\nint he[N],to[M],len[M],ne[M],f[3][N],g[3][N],h[2][N],p[N],fa[N],s[N];\nvoid pre(int x,int y){\n\tif(b[x])f[0][x]=0,g[0][x]=x;\n\tfor(int i=he[x],j,k,l;i;i=ne[i])if((j=to[i])!=y){\n\t\tfa[j]=x,pre(j,x),k=f[0][j]+len[i],l=p[j];\n\t\tif(k>f[0][x])f[2][x]=f[1][x],f[1][x]=f[0][x],f[0][x]=k,g[2][x]=g[1][x],g[1][x]=g[0][x],g[0][x]=l,h[1][x]=h[0][x],h[0][x]=j;\n\t\telse if(k>f[1][x])f[2][x]=f[1][x],f[1][x]=k,g[2][x]=g[1][x],g[1][x]=l,h[1][x]=j;\n\t\telse if(k>f[2][x])f[2][x]=k,g[2][x]=l;\n\t}\n\tp[x]=f[0][x]==f[1][x]?x:g[0][x];//\u82e5\u6700\u957f\u94fe\u548c\u6b21\u957f\u94fe\u4e00\u6837\u957f\uff0c\u5219lca\u4e3ax\uff0c\u5426\u5219 lca \u4e3a\u539f\u6765\u7684 lca\n}\nvoid dp(int x,int u,int v,int w){\n\tif(b[x])if(f[0][x]>w)++s[p[x]],--s[fa[x]];else if(f[0][x]<w)++s[u],++s[x],--s[v],--s[fa[v]];//\u6811\u4e0a\u5dee\u5206\u6253 tag\n\tfor(int i=he[x],j,k,l;i;i=ne[i])if((j=to[i])!=fa[x]){\n\t\tif(j==h[0][x])k=f[1][x],l=f[1][x]==f[2][x]?x:g[1][x];\n\t\telse if(j==h[1][x])k=f[0][x],l=f[0][x]==f[2][x]?x:g[0][x];\n\t\telse k=f[0][x],l=p[x];//k,l \u5206\u522b\u8868\u793a\u70b9x\u5411\u4e0b\u4e0d\u7ecf\u8fc7j\u7684\u6700\u957f\u94fe\u957f\u5ea6\u548c lca\n\t\tif(k>w)dp(j,l,x,k+len[i]);\n\t\telse if(k==w)dp(j,x,x,k+len[i]);//\u82e5 k \u4e0e w \u76f8\u7b49\uff0c\u5219 lca \u5373\u4e3a x\n\t\telse dp(j,u,v,w+len[i]);\n\t}\n}\nvoid dfs(int x){for(int i=he[x],j;i;i=ne[i])if((j=to[i])!=fa[x])dfs(j),s[x]+=s[j];}\nint main(){\n\tint n,m,i,j,k,l,t=0;\n\tscanf(\"%d%d\",&n,&m),memset(f,-9,sizeof(f));//\u6ce8\u610f\u521d\u503c\u8d4b -inf\n\tfor(i=1;i<=m;++i)scanf(\"%d\",&j),b[j]=1;\n\tfor(i=1;i<n;++i){\n\t\tscanf(\"%d%d%d\",&j,&k,&l);\n\t\tne[++t]=he[j],to[t]=k,len[t]=l,he[j]=t;\n\t\tne[++t]=he[k],to[t]=j,len[t]=l,he[k]=t;\n\t}\n\tpre(1,0),dp(1,0,0,-1e9),dfs(1);\n\tfor(i=1,j=k=0;i<=n;++i)if(!b[i])if(s[i]>j)j=s[i],k=1;else if(s[i]==j)++k;\n\tprintf(\"%d %d\\n\",j,k);\n\treturn 0;\n}\n```\n",
        "postTime": 1600960813,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF348E \u3010Pilgrims\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/problemset/problem/348/E)\n## \u6811\u7684\u6027\u8d28\uff08O(n)\u5199\u6cd5\uff09\n\u5f88\u597d\u7684\u4e00\u9053\u9898\u3002\n\u5f53\u7136\uff0c\u8fd8\u6709\u6811\u4e0a\u5dee\u5206\uff0c\u70b9\u5206\u6cbb\u7b49\u5199\u6cd5\u3002\n\u8054\u60f3\u6811\u7684\u76f4\u5f84\uff0c\u4e0d\u96be\u53d1\u73b0\u6709\u8fd9\u6837\u4e00\u4e2a\u6027\u8d28\uff1a\n>\u6240\u6709\u6559\u5f92\u5230\u79bb\u4ed6\u6700\u8fdc\u7684\u4fee\u9053\u9662\u7684\u8def\u5f84\u5fc5\u5b9a\u76f8\u4ea4\u4e8e\u4e00\u4e2a\u8282\u70b9\u3002\u800c\u8fd9\u4e2a\u8282\u70b9\u5c31\u662f\u4e00\u6761\u6700\u957f\u8def\u5f84\u7684\u4e2d\u70b9\u3002\u6211\u4eec\u79f0\u8fd9\u4e2a\u70b9\u4e3a**\u4e2d\u5fc3**\uff08\u7279\u522b\u7684\u4e2d\u70b9\u5728\u4e8e\u67d0\u6761\u4e24\u70b9\u95f4\u7684\u8fb9\u4e0a\u65f6\uff0c\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e2d\u5fc3\uff09\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5148\u627e\u5230\u4e2d\u5fc3\uff0c\u518d\u628a\u4e2d\u5fc3\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6240\u6709\u6559\u5f92\u8d70\u5230\u76ee\u7684\u5730\u90fd\u9700\u8981**\u7ecf\u8fc7\u6839\u8282\u70b9\u3002**\n\n\u7136\u540e\u6211\u4eec\u518d\u5904\u7406\u51fa\u6839\u8282\u70b9\u6240\u6709\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u8ddd\u79bb\u6839\u8282\u70b9\u6700\u8fdc\u7684\u4fee\u9053\u9662\u7684\u8ddd\u79bb\u3002\n\n\u63a5\u7740\uff0c\u5c31\u662f\u91cd\u70b9\u4e86\u3002\n\n\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a\u8981\u6bc1\u6389\u7684\u975e\u4fee\u9053\u9662\u7684\u70b9\uff0c\u90a3\u4e48\uff0c\u5176\u5b50\u6811\u4e2d\u6240\u6709\u7684\u6559\u5f92\u90fd\u65e0\u6cd5\u8fbe\u5230\u76ee\u7684\u5730\uff08**\u65e0\u6cd5\u5230\u6839\u8282\u70b9**\uff09\u3002\n\n\u90a3\u5bf9\u4e8e\u5b50\u6811\u5916\u7684\u70b9\u5462\uff1f\n\n\u5206\u7c7b\u8ba8\u8bba\uff01\n\n\u6709\u5982\u4e0b\u60c5\u51b5:\uff08\u6211\u4eec\u5148\u6807\u8bb0\u6839\u8282\u70b9\u7684\u513f\u5b50\uff0c\u82e5\u5176\u5b50\u6811\u4e2d\u6709\u6700\u5927\u6df1\u5ea6\uff0c\u8bb0\u4e3aA\uff0c\u82e5\u6709\u6b21\u8fbe\u6df1\u5ea6\uff0c\u8bb0\u4e3aB\uff0c\u90fd\u6ca1\u6709\uff0c\u5219\u8bb0\u4e3aC\uff0c\u540c\u65f6\u6700\u5927\u6df1\u5ea6\u548c\u6b21\u5927\u6df1\u5ea6\u4e25\u683c\u4e0d\u76f8\u7b49\uff09\n\n**1.A\u548cB\u7684\u6570\u91cf\u90fd\u4e3a1**\n![](https://cdn.luogu.com.cn/upload/pic/65269.png)\n\n\u7531\u56fe\u77e5\uff0c\u9664\u4e86A\u8981\u5230B\u5916\uff0c\u5176\u4ed6\u7684\u70b9\u90fd\u662f\u5230A\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u65ad\u4e86A\u5185\u7684\u70b9\uff0c\u5c06\u4f1a\u9694\u65ad\u9664A\u5916**\u5176\u4ed6\u6240\u6709\u5b50\u6811\u7684\u6559\u5f92**\n\n\u5982\u679c\u65ad\u4e86B\u5185\u7684\u70b9\uff0c\u90a3\u4e48\u53ea\u4f1a\u9694\u65ad**A\u5185\u7684\u6240\u6709\u6559\u5f92**\n\n**2.A\u7684\u6570\u91cf\u4e3a1\uff0cB\u7684\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e2**\n\n![](https://cdn.luogu.com.cn/upload/pic/65270.png)\n\u7531\u56fe\u77e5\uff0cA\u53ef\u4ee5\u52302\u4e2aB\uff0c\u800c\u5176\u4ed6\u7684\u70b9\u90fd\u662f\u5230A\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u65ad\u4e86A\u5185\u7684\u70b9\uff0c\u4ecd\u5c06\u4f1a\u9694\u65ad\u9664A\u5916**\u5176\u4ed6\u6240\u6709\u5b50\u6811\u7684\u6559\u5f92**\n\n\u800c\u65ad\u4e86B\u5185\u7684\u70b9\u5462\uff1f\u90a3\u4e48A\u4f9d\u7136\u53ef\u4ee5\u8d70\u5230\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684B\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c**\u6b64\u65f6\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u70b9**\n\n**3.A\u7684\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e2**\n\n![](https://cdn.luogu.com.cn/upload/pic/65272.png)\n\n\u7531\u56fe\u77e5\uff0c\u65ad\u4e86A\u5185\u7684\u70b9\uff0c\u5176\u4ed6\u5b50\u6811\u7684\u6559\u5f92\u4f9d\u7136\u4e0d\u4f1a\u88ab\u9694\u65ad\n\n\u800c\u65ad\u4e86B\u5185\u7684\u70b9\uff0c**A\u5185\u7684\u6559\u5f92\u8fd8\u53ef\u4ee5\u5230\u53e6\u4e00\u4e2aA**\uff0c\u4f9d\u7136\u4e0d\u4f1a\u6709\u5f71\u54cd\n**\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53A\u7684\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e2\u65f6\uff0c\u6211\u4eec\u53ea\u7528\u8003\u8651\u5b50\u6811\u5185\u6709\u591a\u5c11\u4e2a\u6559\u5f92\u88ab\u9694\u65ad\u4e86\u5373\u53ef**\n\n\u771f\u7684\u8fd9\u6837\u5417\uff1f\n\n\u518d\u6765\u770b\u4e0b\u4e00\u4e2a\u3002\n\n#### 4.A\u7684\u6570\u91cf\u4e3a2\uff0cB\u7684\u6570\u91cf\u4e3a0\n![](https://cdn.luogu.com.cn/upload/pic/65273.png)\n\u663e\u7136\uff0cC\u4e2d\u662f\u6ca1\u6709\u6559\u5f92\u7684\uff08\u5982\u679c\u6709\u7684\u8bdd\uff0c\u90a3\u4e48\u5176\u5c31\u53d8\u6210B\u4e86\uff09\n\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u8981\u7279\u5224\u3002\n\n\u56e0\u4e3a\uff0c\u5f53\u9694\u65ad\u7684\u70b9\u5728\u4e00\u4e2aA\u4e2d\u65f6\uff0c**\u53e6\u4e00\u4e2aA\u4e2d\u7684\u6559\u5f92\u4f1a\u88ab\u9694\u65ad**\n\n\u6700\u540e\uff0c\u5728\u5904\u7406\u4e00\u4e0b\u9694\u65ad\u7684\u70b9\u5728\u6839\u8282\u70b9\u65f6\u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n#### \u6700\u540e\uff0c\u6ce8\u610f\u7ec6\u8282\uff01\u6ce8\u610f\u7ec6\u8282\uff01\u6ce8\u610f\u7ec6\u8282\uff01\n\n\u4ee3\u7801:(\u5de8\u4e11\u65e0\u6bd4\uff0c\u5efa\u8bae\u4e0d\u8981\u770b\uff0c\u6700\u597d\u62ff\u53bb\u5bf9\u62cd)\n```c++\n#include<bits/stdc++.h>\n#define MAXN 100010\nusing namespace std;\nint n,m,duan1,duan2,Len_D,deep[MAXN],dis[3][MAXN],root,max_deep[MAXN],size[MAXN],MaxMax,MinMax,MaxCnt,MinCnt,sumMax[MAXN],sumMin[MAXN],ans,ans_can;\nint TreeCntMax,TreeCntMin,TreeKind[MAXN],Add1,Add2;\nstruct node {\n\tint ed,v;\n};\nvector<node>G[MAXN];\nbool mark[MAXN];\nvoid Get_D(int x,int fa,int sum,int pos) {\n\tif(sum>=Len_D&&mark[x]) {\n\t\tLen_D=sum;\n\t\tif(!pos)duan1=x;\n\t\telse duan2=x;\n\t}\n\tfor(int i=0; i<G[x].size(); i++) {\n\t\tint t=G[x][i].ed,v=G[x][i].v;\n\t\tif(t==fa)continue;\n\t\tGet_D(t,x,sum+v,pos);\n\t}\n}\nvoid BL(int x,int fa,int sum,int pos) {\n\tdis[pos][x]=sum;\n\tfor(int i=0; i<G[x].size(); i++) {\n\t\tint t=G[x][i].ed,v=G[x][i].v;\n\t\tif(t==fa)continue;\n\t\tBL(t,x,sum+v,pos);\n\t}\n}\nvoid Get_root() { //\u627e\u7c7b\u4e2d\u5fc3\n\tint st;\n\tfor(int i=1;i<=n;i++){\n\t\tif(mark[i]){\n\t\t\tst=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tGet_D(st,0,0,0);\n\tGet_D(duan1,0,0,1);\n\tBL(duan1,0,0,1);\n\tBL(duan2,0,0,2);\n\tfor(int i=1,cha=2e9+7; i<=n; i++) {\n\t\tif(dis[1][i]+dis[2][i]==Len_D) {\n\t\t\tif(abs(dis[1][i]-dis[2][i])<cha) {\n\t\t\t\tcha=abs(dis[1][i]-dis[2][i]);\n\t\t\t\troot=i;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid DFS(int x,int fa) {\n\tfor(int i=0; i<G[x].size(); i++) {\n\t\tint t=G[x][i].ed,v=G[x][i].v;\n\t\tif(t==fa)continue;\n\t\tdeep[t]=deep[x]+v;\n\t\tDFS(t,x);\n\t}\n}\nvoid DFS2(int x,int fa) {\n\tif(mark[x]) {\n\t\tsize[x]++;\n\t\tif(deep[x]==MaxMax)sumMax[x]++;\n\t\tif(deep[x]==MinMax)sumMin[x]++;\n\t}\n\tfor(int i=0; i<G[x].size(); i++) {\n\t\tint t=G[x][i].ed;\n\t\tif(t==fa)continue;\n\t\tDFS2(t,x);\n\t\tsize[x]+=size[t];\n\t\tsumMax[x]+=sumMax[t];\n\t\tsumMin[x]+=sumMin[t];\n\t}\n}\nvoid Get_Max(int x,int fa) {\n\tif(mark[x])max_deep[x]=max(max_deep[x],deep[x]);\n\tfor(int i=0; i<G[x].size(); i++) {\n\t\tint t=G[x][i].ed;\n\t\tif(t==fa)continue;\n\t\tGet_Max(t,x);\n\t\tmax_deep[x]=max(max_deep[x],max_deep[t]);\n\t}\n}\nvoid solve(int x,int fa,int Add,int Kind) {\n\tif(!mark[x]) {\n\t\tint res=0;\n\t\tres+=size[x];\n\t\tif(Kind==1) {\n\t\t\tif(TreeCntMax==1) {\n\t\t\t\tif(sumMax[x]==MaxCnt)res+=Add;\n\t\t\t}\n\t\t} else if(Kind==2) {\n\t\t\tif(TreeCntMax==1&&TreeCntMin==1) {\n\t\t\t\tif(sumMin[x]==MinCnt)res+=Add;\n\t\t\t}\n\t\t}\n\t\tif(res>ans) {\n\t\t\tans=res;\n\t\t\tans_can=1;\n\t\t} else if(ans==res)ans_can++;\n\t}\n\tfor(int i=0; i<G[x].size(); i++) {\n\t\tint t=G[x][i].ed;\n\t\tif(t==fa)continue;\n\t\tsolve(t,x,Add,Kind);\n\t}\n}\nvoid tepan(){\n\tint t1,t2;\n\tfor(int i=0,p=1;i<G[root].size();i++){\n\t\tint t=G[root][i].ed;\n\t\tif(max_deep[t]==MaxMax){\n\t\t\tif(p==1)t1=t,p=-1;\n\t\t\telse t2=t;\n\t\t}\n\t}\n\tsumMin[t2]=sumMax[t2],sumMax[t2]=0;\n\tMaxCnt=sumMax[t1],MinCnt=sumMin[t2];\n\tTreeKind[t2]=2;\n\tAdd1=size[t2],Add2=size[t1];\n}\nvoid Calc(int x,int fa,int &Ma,int &tot){\n\tif(mark[x]){\n\t\tif(deep[x]>Ma){\n\t\t\tMa=deep[x];\n\t\t\ttot=1;\n\t\t}\n\t\telse if(deep[x]==Ma)tot++;\n\t}\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint t=G[x][i].ed;\n\t\tif(t==fa)continue;\n\t\tCalc(t,x,Ma,tot);\n\t}\n}\nint main() {\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1,x; i<=m; i++)scanf(\"%d\",&x),mark[x]=true;\n\tfor(int i=1; i<=n-1; i++) {\n\t\tint x,y,z;\n\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\tG[x].push_back((node) {y,z});\n\t\tG[y].push_back((node) {x,z});\n\t}\n\tGet_root();\n\tDFS(root,0);\n\tGet_Max(root,0);\n\tfor(int i=0; i<G[root].size(); i++) {\n\t\tint t=G[root][i].ed;\n\t\tif(max_deep[t]>MaxMax) {\n\t\t\tMinMax=MaxMax;\n\t\t\tMaxMax=max_deep[t];\n\t\t} else if(max_deep[t]>MinMax) {\n\t\t\tMinMax=max_deep[t];\n\t\t}\n\t}\n\tfor(int i=0;i<G[root].size();i++){\n\t\tint t=G[root][i].ed;\n\t\tint Ma=0,tot=0;\n\t\tCalc(t,root,Ma,tot);\n\t\tif(Ma==MaxMax)MaxCnt+=tot;\n\t\telse if(Ma==MinMax)MinCnt+=tot;\n\t}\n\tfor(int i=0; i<G[root].size(); i++) {\n\t\tint t=G[root][i].ed;\n\t\tif(max_deep[t]==MaxMax)TreeCntMax++,TreeKind[t]=1;\n\t\telse if(max_deep[t]==MinMax)TreeCntMin++,TreeKind[t]=2;\n\t}\n\tDFS2(root,0);\n\tAdd1=m;\n\tfor(int i=0; i<G[root].size(); i++) {\n\t\tint t=G[root][i].ed;\n\t\tif(TreeKind[t]==1)Add1-=size[t],Add2+=size[t];\n\t}\n\tif(TreeCntMax==2&&TreeCntMin==0){\n\t\ttepan();\n\t\tTreeCntMax=TreeCntMin=1;\n\t}\n\tfor(int i=0; i<G[root].size(); i++) {\n\t\tint t=G[root][i].ed;\n\t\tif(TreeKind[t]==1)solve(t,root,Add1,1);\n\t\telse if(TreeKind[t]==2)solve(t,root,Add2,2);\n\t\telse solve(t,root,0,0);\n\t}\n\tif(!mark[root]) {\n\t\tif(m>ans) {\n\t\t\tans=m;\n\t\t\tans_can=1;\n\t\t} else if(ans==m)ans_can++;\n\t}\n\tcout<<ans<<\" \"<<ans_can;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1563862322,
        "uid": 54298,
        "name": "\u7cea\u773e\u8126\u98b0\u7f77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF348E \u3010Pilgrims\u3011"
    }
]