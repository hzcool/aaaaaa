[
    {
        "content": "\n[blog](https://acxblog.site/archives/sol-cf-1042f.html)\n\n\u8003\u8651\u4ece\u4e0b\u5411\u4e0a\u7ef4\u62a4\u3002\n\n\u5047\u8bbe\u7ef4\u62a4\u4e0a\u6765\u5b50\u6811\u53f6\u5b50\u8282\u70b9\u7684\u76ee\u524d\u4e3a\u6b62\u5206\u6210\u4e86$k$\u4e2a\u96c6\u5408\uff0c\u5e76\u4e14\u6bcf\u4e2a\u96c6\u5408\u7684\u6700\u6df1\u6df1\u5ea6\u4e3a$k_i$\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u5408\u5e76\u8fd9$k$\u4e2a\u96c6\u5408\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u5047\u8bbe\u6709$k_1< k_2< ... < k_n$\uff0c\u5219\u6211\u4eec\u627e\u5230\u6700\u5927\u7684$i$\u4f7f$k_i+k_{i+1}>K$\uff0c\u90a3\u4e48$k_1$\u5230$k_i$\u90fd\u53ef\u4ee5\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u8fd9\u4e48\u5408\u5e76\u4e00\u5b9a\u6700\u4f18\u3002\n\n\u82e5\u5b58\u5728$1,2,4$\u80fd\u5408\u5e76\uff0c\u5219\u4e00\u5b9a\u6709$1,2,3$\u80fd\u5408\u5e76\uff0c\u90a3\u4e48\u65e0\u8bba\u600e\u4e48\u5408\u5e76\uff0c\u6700\u540e\u5269\u4e0b\u6765\u7684\u4e00\u5b9a\u4f1a\u5305\u542b$3,4$\uff08\u7531$1,2,3$\u6216$1,2,4$\u5408\u5e76\u800c\u6765\uff09\u3002\n\n\u82e5\u5b58\u5728$1,2,4,6$\u80fd\u5408\u5e76\uff0c\u5219\u4e00\u5b9a\u6709$1,2,3,4,6$\u80fd\u5408\u5e76\uff0c\u6240\u4ee5\u6240\u6709\u7684\u5176\u5b83\u60c5\u51b5\u90fd\u53ef\u8f6c\u5316\u6210\u4e0a\u9762\u7684\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u5982\u6b64\u5408\u5e76\u5f97\u5230\u7684\u7ed3\u679c\u6700\u7ec8\u662f\u76f8\u540c\u7684\u3002\n\n\u6b64\u65f6\u4e0a\u53ef\u5e76\u5806\u5c31\u53ef\u4ee5\u505a\u5230$O(n\\log n)$\u7684\u590d\u6742\u5ea6\u4e86\u3002\n\n---------------------\n\n\u8fdb\u4e00\u6b65\u5206\u6790\u3002\u82e5$k_i+k_{i+1}>K$\uff0c\u90a3\u4e48\u5728\u5411\u4e0a\u7ef4\u62a4\u7684\u8fc7\u7a0b\u4e2d\uff0c$k_{i+1}$\u4e00\u5b9a\u4e0d\u4f1a\u518d\u4e0e\u5176\u5b83\u96c6\u5408\u8fdb\u884c\u5408\u5e76\u3002\n\n\u53c8\u56e0\u4e3a\u6240\u6709\u6bd4$k_i$\u5c0f\u7684\u90fd\u5df2\u7ecf\u5408\u5e76\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5f97\u5230$k_i$\u5373\u53ef\uff0c\u800c\u4ee4$k_{i+1}$\u5230$k_n$\u76f4\u63a5\u5355\u72ec\u6210\u4e3a\u96c6\u5408\u3002\n\n\u4e8e\u662f\u53ea\u9700\u7528\u4e00\u4e2a\u53d8\u91cf\u7ef4\u62a4$k_i$\u7684\u503c\u5373\u53ef\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u4e3a$O(n)$\u3002\n\n\u6ce8\u610f\u6240\u6709$k_i>K$\u7684\u60c5\u51b5\u3002\n\n## Code\n```cpp\n// Code by ajcxsu\n// Problem: leaf sets\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=1e6+10, M=2e6+10;\nint h[N], to[M], nexp[M], d[N], p=1;\ninline void ins(int a, int b) {\n    nexp[p]=h[a], h[a]=p, to[p]=b, p++; d[a]++;\n}\n\ntemplate<typename T> inline void gn(T &x) {\n    char ch=getchar(); x=0;\n    while(ch<'0' || ch>'9') ch=getchar();\n    while(ch>='0' && ch<='9') x=x*10+ch-'0', ch=getchar();\n}\n\n\nint k, ans;\nint dfs(int x, int fa) {\n    if(d[x]==1) return 1;\n    int na=0;\n    for(int u=h[x];u;u=nexp[u])\n        if(to[u]!=fa) {\n            int d=dfs(to[u], x);\n            if(d+na>k) ans++, na=min(na, d);\n            else if(d>na) na=d;\n        }\n    return na?na+1:0;\n}\n\nint main() {\n    int n, u, v, x;\n    gn(n), gn(k);\n    for(int i=0;i<n-1;i++) gn(u), gn(v), ins(u, v), ins(v, u);\n    for(int i=1;i<=n;i++) if(d[i]>1) x=dfs(i, 0), printf(\"%d\\n\", ans+bool(x)), exit(0);\n    printf(\"%d\\n\", ans+1);\n    return 0;\n}\n```\n\n\n",
        "postTime": 1537237186,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1042F \u3010Leaf Sets\u3011"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u628a\u6811\u7684\u53f6\u5b50\u5206\u6210\u591a\u4e2a\u96c6\u5408\uff0c\u8981\u6c42\u6bcf\u4e2a\u96c6\u5408\u7684\u53f6\u5b50\u8ddd\u79bb\u4e0d\u8d85\u8fc7$k$\uff0c\u95ee\u6700\u5c11\u53ef\u4ee5\u5212\u5206\u6210\u51e0\u4e2a\u96c6\u5408\n\n#### \u9898\u89e3\n\u611f\u89c9\u601d\u8def\u633a\u795e\u4ed9\u7684\u2026\u2026\n\n\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6309\u6df1\u5ea6\u5904\u7406\u6bcf\u4e2a\u70b9\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u91cc\u7684\u53f6\u5b50\u8282\u70b9\u5230ta\u7684\u8ddd\u79bb\uff0c\u6392\u4e2a\u5e8f\u540e\u628a\u76f8\u90bb\u7684\u76f8\u52a0\u4e0d\u5927\u4e8e$k$\u7684\u5212\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u5373\u4ece$1$\u5f00\u59cb\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u5176\u4ed6\u7684\u5404\u81ea\u641e\u4e2a\u96c6\u5408\uff0c\u7136\u540e\u8fd4\u56de\u5927\u96c6\u5408\u91cc\u7684\u6700\u957f\u8fb9\uff0cta\u4e0a\u9762\u7684\u8282\u70b9\u5904\u7406\u8fd9\u68f5\u5b50\u6811\u65f6\u5c31\u4ee5\u8fd9\u6761\u8fb9\u4e3a\u4ee3\u66ff\u4e86\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5212\u5206\u4fdd\u8bc1\u6700\u4f18\u5462\uff1f\u5047\u8bbe\u6709\u4e09\u6761\u8fb9$a,b,c(a<b<c)$\uff0c\u4e14$a+b\\leq k,a+c\\leq k,b+c>k$\uff0c\u5982\u679c$a$\u548c$c$\u653e\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u90a3\u8fd9\u4e2a\u96c6\u5408\u5c31\u4e0d\u80fd\u653e$b$\u4e86\uff0c\u540c\u65f6\u8fd9\u4e2a\u96c6\u5408\u80fd\u52a0\u8fdb\u53bb\u7684\u957f\u5ea6\u4e3a$k-c$\uff0c\u5982\u679c\u653e$b$\uff0c\u8fd9\u4e2a\u96c6\u5408\u80fd\u52a0\u8fdb\u53bb\u7684\u957f\u5ea6\u4e3a$k-b$\uff0c\u660e\u663e\u662f\u4f18\u4e8e\u653e$c$\u7684\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u662f\u8fd4\u56de\u5927\u96c6\u5408\u91cc\u7684\u6700\u957f\u8fb9\u5462\uff1f\u5982\u679c\u8fd4\u56de\u5176\u4ed6\u5355\u5143\u7d20\u7684\u96c6\u5408\uff0cta\u4eec\u80af\u5b9a\u5927\u4e8e\u5927\u96c6\u5408\u91cc\u7684\u6700\u957f\u8fb9\uff0c\u5176\u4ed6\u5b50\u6811\u4e0eta\u5339\u914d\u7684\u9650\u5236\u4f1a\u53d8\u5927\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u5212\u5206\u6210\u66f4\u591a\u7684\u96c6\u5408\uff0c\u4e0d\u662f\u66f4\u4f18\u7684\u5904\u7406\n\n#### \u4ee3\u7801\n```\n# include<bits/stdc++.h>\nusing namespace std;\nconst int MAX=1e6+1;\nstruct p{\n\tint x,y;\n}c[MAX<<1];\nint n,k,num,ans;\nint du[MAX],h[MAX];\nvoid add(int x,int y)\n{\n\tc[++num]=(p){h[x],y},h[x]=num;\n\tc[++num]=(p){h[y],x},h[y]=num;\n}\nint dfs(int x,int f=0)\n{\n\tif(du[x]==1) return 0;\n\tvector<int> ve;\n\tfor(int i=h[x];i;i=c[i].x)\n\t  if(c[i].y!=f) ve.push_back(dfs(c[i].y,x)+1);\n\tsort(ve.begin(),ve.end());\n\tint L=ve.size()-1;\n\tfor(;L>=1;--L)\n\t  {\n\t  \tif(ve[L]+ve[L-1]<=k) break;\n\t  \t++ans;\n\t  }\n\treturn ve[L];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1,x,y;i<n;++i)\n\t  scanf(\"%d%d\",&x,&y),add(x,y),++du[x],++du[y];\n\tint rt=1;\n\tfor(int i=1;i<=n;++i)\n\t  if(du[i]>1) {rt=i;break;}\n\tdfs(rt);\n\treturn printf(\"%d\",ans+1),0;\n}\n```",
        "postTime": 1537845421,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1042F \u3010Leaf Sets\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u4e2a\u6a21\u578b\uff0c\u518d\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c\u8d2a\u5fc3\u6ca1\u9519\u4e86\u3002\n\n\u6811\u5f62\u8d2a\u5fc3\u901a\u5e38\u8003\u8651\u5f53\u524d\u5b50\u6811\u7684\u60c5\u51b5\uff0c\u81ea\u5e95\u800c\u4e0a\u5408\u5e76\u7b54\u6848\uff0c\u8fd9\u9898\u4e5f\u662f\u5982\u6b64\u3002\n\n\u8bbe\u5f53\u524d $x$ \u7684\u5b50\u6811\u5185\u6709 $m(x)$ \u4e2a\u5212\u5206\u51fa\u7684\u53f6\u5b50\u96c6\u5408 $S_i$\uff0c\u96c6\u5408 $S_i$ \u4e2d\u8282\u70b9\u7684\u6700\u5927\u6df1\u5ea6\u662f $p_i$\u3002\n\n\u5982\u679c\u5c06\u8fd9 $m(x)$ \u4e2a\u96c6\u5408\u6309 $p_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5373 $k_1\\leq k_2\\leq k_3\\leq k_4..\\leq k_{m(x)}$\uff0c\u9009\u62e9\u6700\u5c0f\u7684 $k_i+k_{i+1}>k$\uff0c\u5c06 $k_1,k_2,..,k_i$ \u6240\u4ee3\u8868\u7684\u96c6\u5408\u5408\u5e76\uff0c\u8bb0\u5408\u5e76\u540e\u7684\u96c6\u5408\u4e3a $S'$\u3002\u8fd9\u6837\u505a\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u4e0d\u5b58\u5728\u5176\u4ed6\u65b9\u6848\u6bd4\u8fd9\u4e2a\u65b9\u6848\u66f4\u4f18\uff0c\u8fd9\u662f\u975e\u5e38\u5bb9\u6613\u8bc1\u660e\u7684\u3002\u5e76\u4e14\uff0c\u5c06 $S'$ \u5411\u4e0a\u5408\u5e76\u5176\u4ed6\u5b50\u6811\u5185\u7684\u53f6\u5b50\u96c6\u5408\u4e5f\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a $S'$ \u662f $x$ \u5b50\u6811\u5185\u6700\u5927\u6df1\u5ea6\u6700\u5c0f\u7684\u96c6\u5408\uff0c\u5982\u679c $S'$ \u65e0\u6cd5\u5408\u5e76\uff0c\u5b50\u6811 $x$ \u5185\u7684\u5176\u4ed6\u96c6\u5408\u4e00\u5b9a\u4e5f\u65e0\u6cd5\u5408\u5e76\u3002\u6309\u4e0a\u8ff0\u7b56\u7565\u4e0d\u65ad\u9012\u5f52\u5411\u4e0a\u5408\u5e76\u5c31\u53ef\u4ee5\u4e86\uff0c\u91c7\u7528\u4f18\u79c0\u4e00\u70b9\u7684\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230 $O(n)$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u8bdd\uff0c\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a\u5b50\u6811\u5185\u5f53\u524d\u7684 $k_i$ \u7684 $\\min$\uff0c\u5e76\u6ce8\u610f\u7279\u5224\u5f53\u524d\u5b50\u6811\u5185\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684 $k_i$ \u7684\u60c5\u51b5\u3002 \n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<algorithm>\nint cnt=0,ans=0,n,k;\nint h[1000005],to[2000005],ver[2000005];\nint dep[1000005],du[1000005];\ninline int read() {\n    register int x=0,f=1;register char s=getchar();\n    while(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n    while(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n    return x*f;\n}\ninline void add(int x,int y) {++du[x];to[++cnt]=y;ver[cnt]=h[x];h[x]=cnt;}\ninline void add_d(int x,int y) {add(x,y);add(y,x);} \ninline int max(const int &x,const int &y) {return x>y? x:y;}\ninline int min(const int &x,const int &y) {return x<y? x:y;}\ninline int dfs(int x,int fa) {\n    if(du[x]==1) return du[x];\n    int res=0;\n    for(register int i=h[x],y,t;i;i=ver[i]) {\n        if((y=to[i])==fa) continue; t=dfs(y,x);\n        if(t+res>k) {++ans;res=min(res,t);}\n        else if(res<t) res=t;\n    }\n    return res? res+1:0;\n}\nint main() {\n    n=read();k=read();\n    for(register int i=1;i<n;++i) add_d(read(),read());\n    int rt=1; for(register int i=2;i<=n;++i) if(du[i]>1) {rt=i;break;}\n    dep[rt]=1; int x=dfs(rt,-1); printf(\"%d\\n\",ans+(x>0));\n    return 0;\n}\n```\n\n",
        "postTime": 1603362802,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1042F \u3010Leaf Sets\u3011"
    }
]