[
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF817F)\n\n\u672c\u9898\u770b\u5b8c\u540e\u6211\u4eec\u53d1\u73b0\u5b83\u5e94\u8be5\u9700\u8981\u7ef4\u62a4 3 \u79cd\u64cd\u4f5c\uff1a\n\n> - \u5c06 l \u5230 r \u7684\u533a\u95f4\u7528 1 \u8986\u76d6\n>\n> - \u5c06 l \u5230 r \u7684\u533a\u95f4\u7528 0 \u8986\u76d6\n>\n> - \u5c06 l \u5230 r \u7684\u533a\u95f4\u53d6\u53cd\n>\n> \u533a\u95f4\u7684\u521d\u59cb\u503c\u90fd\u4e3a 0\u3002\n>\n> \u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u7b2c\u4e00\u4e2a 0 \u7684\u4e0b\u6807\u3002\n\n\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\u7684\u95ee\u9898\uff0c\u5f88\u660e\u663e\u662f\u7ebf\u6bb5\u6811\u3002\n\n\u53ea\u4e0d\u8fc7\u3002\u3002\u3002~~\u7ec6\u8282\u591a\u5f97\u8ba9\u4eba\u75af~~\n\n## 1. \u5bf9\u4e8e\u61d2\u60f0\u6807\u8bb0\uff0c\u6211\u4eec\u6709 4 \u79cd\u60c5\u51b5\uff1a\n\n- 0\uff1a\u8868\u793a\u6ca1\u6709\u6807\u8bb0\n\n- 1\uff1a\u8868\u793a\u8981\u7528 0 \u8986\u76d6\n\n- 2\uff1a\u8868\u793a\u8981\u7528 1 \u8986\u76d6\n\n- 3\uff1a\u8868\u793a\u8981\u53d6\u53cd\n\n\u6240\u4ee5\uff0c\u4e0b\u964d\u61d2\u60f0\u6807\u8bb0\u4e5f\u3002\u3002\u3002\n\n```cpp\n  void down(int q){\n      if(c[q].p&&c[q].l!=c[q].r){//\u6709\u6807\u8bb0\n          int l=q<<1,r=q<<1|1;\n          if(c[q].p!=3){//\u8fd9\u4e2a\u61d2\u60f0\u6807\u8bb0\u662f\u8986\u76d6\n              c[l].p=c[q].p;c[l].v=(c[q].p-1)*(c[l].r-c[l].l+1);\n              c[r].p=c[q].p;c[r].v=(c[q].p-1)*(c[r].r-c[r].l+1);//\u90a3\u5c31\u76f4\u63a5\u8986\u76d6\n          }\n          else{//\u8fd9\u4e2a\u6807\u8bb0\u662f\u53cd\u8f6c\n              if(c[l].p==0)c[l].v=c[l].r-c[l].l+1-c[l].v,c[l].p=3;//\u6ca1\u6709\u5c31\u76f4\u63a5\u4fee\u6539\n              else if(c[l].p==1)c[l].v=c[l].r-c[l].l+1,c[l].p=2;//\u5982\u679c\u75280\u8986\u76d6\uff0c\u5c31\u6362\u6210\u75281\u8986\u76d6\n              else if(c[l].p==2)c[l].v=0,c[l].p=1;//\u5982\u679c\u75281\u8986\u76d6\uff0c\u5c31\u6362\u6210\u75280\u8986\u76d6\n              else c[l].v=c[l].r-c[l].l+1-c[l].v,c[l].p=0;//\u5982\u679c\u6807\u8bb0\u4e86\u53cd\u8f6c\uff0c\u76f4\u63a5\u6539\n              if(c[r].p==0)c[r].v=c[r].r-c[r].l+1-c[r].v,c[r].p=3;\n              else if(c[r].p==1)c[r].v=c[r].r-c[r].l+1,c[r].p=2;\n              else if(c[r].p==2)c[r].v=0,c[r].p=1;\n              else c[r].v=c[r].r-c[r].l+1-c[r].v,c[r].p=0;//\u540c\u7406\n          }\n      }\n      c[q].p=0;\n  }\n```\n\n## 2.\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\uff0c\u6211\u4eec\u6709\u4e24\u79cd\uff1a\n\n#### 1.\u8986\u76d6\n\n```cpp\n  void Add(int q,int l,int r,int x){\n          if(l<=c[q].l&&c[q].r<=r){c[q].p=x;c[q].v=(x-1)*(c[q].r-c[q].l+1);return;}//\u4fee\u6539\u6574\u4e2a\u533a\u95f4\uff0c\u76f4\u63a5\u6539\u61d2\u60f0\u6807\u8bb0\n          down(q);\n          int mid=c[q].l+c[q].r>>1;\n          if(l<=mid)Add(q<<1,l,r,x);\n          if(mid<r)Add(q<<1|1,l,r,x);\n          c[q].v=c[q<<1].v+c[q<<1|1].v;\n   }\n```\n\n#### 2.\u53cd\u8f6c\n```cpp\n  void Swap(int q,int l,int r){\n      if(l<=c[q].l&&c[q].r<=r){//\u53cd\u8f6c\u6574\u4e2a\u533a\u95f4\n          if(c[q].p==1||c[q].p==2){//\u539f\u672c\u662f\u8986\u76d6\uff0c\u90a3\u5c31\u53cd\u7740\u8986\u76d6\n              c[q].v=c[q].r-c[q].l+1-c[q].v;\n              c[q].p=(c[q].p==1?2:1);\n          }\n          else{//\u539f\u672c\u662f\u53cd\u8f6c\u6216\u6ca1\u6709\uff0c\u76f4\u63a5\u6539\n              c[q].v=c[q].r-c[q].l+1-c[q].v;\n              c[q].p=(c[q].p==0?3:0);\n          }\n          return;\n      }\n      down(q);\n      int mid=c[q].l+c[q].r>>1;\n      if(l<=mid)Swap(q<<1,l,r);\n      if(mid<r)Swap(q<<1|1,l,r);\n      c[q].v=c[q<<1].v+c[q<<1|1].v;\n  }\n```\n\n## 3.\u67e5\u8be2\n```cpp\n  int Gets(int q){\n      if(c[q].v==0)return c[q].l;//\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u90fd\u662f0\uff0c\u8fd4\u56de\u5de6\u7aef\u70b9\n      if(c[q].v==c[q].r-c[q].l+1)return 0;//\u5982\u679c\u90fd\u662f1\uff0c\u65e0\u89e3\n      down(q);//\u4e0b\u4f20\n      int sum=Gets(q<<1);//\u5148\u5de6\u540e\u53f3\n      if(sum!=0)return sum;\n      sum=Gets(q<<1|1);\n      return sum;\n  }\n```\n\n## 4.\u4e3b\u51fd\u6570\n```cpp\n  scanf(\"%lld\",&n);\n  for(int i=1;i<=n;i++){\n      scanf(\"%lld%lld%lld\",&a[i].t,&a[i].l,&a[i].r);\n      p[(i-1)*4+1]=a[i].l;\n      p[(i-1)*4+2]=a[i].l-1;//\u52a0\u5165l-1\uff08\u52a0\u5165\u66f4\u4f18\u7684\u7b54\u6848\uff09\n      p[(i-1)*4+3]=a[i].r;\n      p[i*4]=a[i].r+1;//\u52a0\u5165r+1\u4fdd\u8bc1\u6709\u7b54\u6848\n  }\n  p[n*4+1]=1;//\u4e00\u5b9a\u8981\u67091\uff01\uff01\uff01\n  sort(p+1,p+n*4+2);\n  for(int i=1;i<=n*4+1;i++){if(p[i]!=p[i-1])M_A[p[i]]=++tot,M_B[tot]=p[i];}//\u79bb\u6563\u5316\n  T.Build(1,1,tot);\n  for(int i=1;i<=n;i++){\n      if(a[i].t!=3)T.Add(1,M_A[a[i].l],M_A[a[i].r],(a[i].t==1?2:1));\n      else T.Swap(1,M_A[a[i].l],M_A[a[i].r]);//\u6309\u8981\u6c42\u64cd\u4f5c\n      printf(\"%lld\\n\",M_B[T.Gets(1)]);//\u8f93\u51fa\n  }\n```\n\u8fd9\u662f[\u603b\u4ee3\u7801](https://www.luogu.com.cn/paste/v3f629h8)\uff08\u65e0\u6ce8\u91ca\uff09",
        "postTime": 1641629345,
        "uid": 428358,
        "name": "cqbztzl",
        "ccfLevel": 5,
        "title": "CF817F\u9898\u89e3"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6 \n[\u73c2\u6735\u8389\u6811](https://pzj.blog.luogu.org/ke-duo-li-shu)\uff0c\u662f\u4e00\u79cd\u652f\u6301\u533a\u95f4\u8986\u76d6\uff0c\u533a\u95f4\u53d6\u53cd\uff0c\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u4e58\u7b49\u64cd\u4f5c\uff0c\u5728**\u968f\u673a\u6570\u636e**\u4e0b\uff0c\u590d\u6742\u5ea6\u63a5\u8fd1\u7ebf\u6027\u3002\u5bf9\u4e8e\u672c\u9898\uff0c\u867d\u7136\u4e0d\u662f\u968f\u673a\u6570\u636e\uff0c\u4f46\u662f CF \u653e\u8fc7\u4e86\uff0c\u65f6\u95f4\u5728\u6700\u4f18\u89e3\u7684\u5927\u7ea6 3 \u500d\u3002\n\n\u9996\u5148\uff0c$1$\u3001$2$\u3001$3$ \u64cd\u4f5c\u90fd\u662f\u73c2\u6735\u8389\u6811\u7684\u677f\u5b50\uff1a\u533a\u95f4\u8986\u76d6\uff0c\u533a\u95f4\u53d6\u53cd\uff0c\u91cd\u70b9\u662f\u67e5\u8be2\uff1a\n\n\u9996\u5148\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a `set` \u5b83\u91cc\u9762\u5b58\u50a8\u4e86\u5404\u4e2a\u533a\u95f4\u7684\u6743\u503c\uff0c\u82e5\u4e3a 0\uff0c\u5219\u8868\u793a\u5b83\u672a\u52a0\u5165\u6216\u5df2\u5220\u9664\uff0c\u8f93\u51fa\u5b83\u7684\u5de6\u7aef\u70b9\u5373\u53ef\uff0c\u5373\u4e00\u6b21\u66b4\u529b\u67e5\u627e\u3002\u56e0\u4e3a\u6709\u89e3\uff0c\u6240\u4ee5 $10^{18}+1$ \u6c38\u8fdc\u4e3a $0$\u3002\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long//\u4e0d\u5f00 long long \u89c1\u7956\u5b97\n#define se set<node>::iterator//\u5b8f\u5b9a\u4e49\u8fed\u4ee3\u5668\nusing namespace std;\ninline int read(){\n\tint res=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t\tch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tres=(res<<1)+(res<<3)+(ch^'0');\n\t\tch=getchar();\n\t}\n\treturn res;\n}//\u5feb\u8bfb\nstruct node{\n    int l,r;\n\tmutable int val;//\u533a\u95f4\u7aef\u70b9\u3001\u6743\u503c\n    bool operator<(const node &t) const{\n\t\treturn l<t.l;\n\t}\n\n};\nint n;\nset<node> s;\nse it,itl,itr;\ninline se split(int pos){\n    it=s.lower_bound(node({pos}));\n    if(it!=s.end()&&it->l==pos)\n\t\treturn it;\n    --it;\n    int l=it->l,r=it->r,v=it->val;\n    s.erase(it);\n    s.insert(node({l,pos-1,v}));\n    return s.insert(node({pos,r,v})).first;\n}//\u5206\u88c2\u6210 2 \u4e2a\u533a\u95f4\ninline void assign(int l,int r,int val){\n    itr=split(r+1),itl=split(l);\n    s.erase(itl,itr);\n    s.insert(node({l,r,val}));\n}//\u533a\u95f4\u8986\u76d6\ninline void rever(int l,int r){\n    itr=split(r+1),itl=split(l);\n    for(se it=itl;it!=itr;++it)\n        it->val=!it->val;\n}//\u533a\u95f4\u53d6\u53cd\nsigned main(){\n    n=read();\n    s.insert(node({1,(int)1e18+1,0}));//\u521d\u59cb\u5316\u4e3a 0\uff0c\u4e14 1e18+1 \u4e00\u5b9a\u662f\u4e00\u4e2a\u63a5\n    while(n--){\n        int flag=read(),l=read(),r=read();\n        if(flag==1)\n\t\t\tassign(l,r,1);//\u8986\u76d6\n        else if(flag==2)\n\t\t\tassign(l,r,0);//\u8986\u76d6\n        else if(flag==3)\n\t\t\trever(l,r);//\u7ffb\u8f6c\n        for(it=s.begin();it!=s.end();++it)\n            if(!it->val){\n                printf(\"%lld\\n\",it->l);\n                break;\n            }//\u66b4\u529b\u67e5\u8be2\n    }\n    return 0;\n}\n```",
        "postTime": 1641967560,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "CF817F MEX Queries \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u8981\u652f\u6301\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528**\u7ebf\u6bb5\u6811**\uff0c\u7531\u4e8e $l,r\u226410^{18}$ \u5e76\u4e14\u53ea\u9700\u8981\u67e5\u627e\u4f4d\u7f6e\uff0c\u4e8e\u662f\u5c31\u80fd\u5f88\u5bb9\u6613\u5730\u60f3\u5230**\u79bb\u6563\u5316**\u3002\n\n\u7528 $sum$ \u6570\u7ec4\u5b58\u533a\u95f4\u548c\uff0c$tag$ \u6570\u7ec4\u5b58\u533a\u95f4\u8d4b\u503c\uff0c$rev$ \u6570\u7ec4\u5b58\u533a\u95f4\u7ffb\u8f6c\u3002\n\n\u518d\u5f00\u4e00\u4e2a $q$ \u6570\u7ec4\uff0c\u7528\u6765\u79bb\u6563\u5316\u3002\u56e0\u4e3a\u8981\u79bb\u6563\u5316\uff0c\u6240\u4ee5\u662f\u79bb\u7ebf\u7684\u3002\u628a\u6bcf\u6b21\u64cd\u4f5c\u7684 $l$ \u548c $r$ \u5b58\u8fdb $q$ \uff0c\u5e76\u628a $r+1$ \u5b58\u8fdb $q$ ,\u7136\u540e\u5c06 $q$ \u6570\u7ec4\u8fdb\u884c \u6392\u5e8f+\u53bb\u91cd\uff0c\u5c31\u5f97\u5230\u4e86\u539f\u64cd\u4f5c\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5e76\u4e14\u6620\u5c04\u5230\u4e86 $1-n$\u3002\n\n\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7528 $map$\uff0c\u4e0b\u89d2\u6807\u4e3a $1-n$\uff0c\u503c\u4e3a $l,r,r+1$\uff0c\u4f46\u662f\u6211\u8fd9\u91cc\u7528\u7684\u662f\u7b2c\u4e00\u79cd\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u5148\u4ece\u6839\u5f00\u59cb\uff0c\u5982\u679c $sum<$\u533a\u95f4\u957f\u5ea6\uff0c\u8bf4\u660e\u5b58\u5728 $0$\uff0c \u53ea\u9700\u8981\u518d\u7ee7\u7eed\u5f80\u4e0b\u67e5\u627e\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff08**\u6ce8\u610f\u987a\u5e8f**\uff0c\u8981**\u5148\u67e5\u627e\u5de6\u5b50\u6811**\uff09\uff0c\u76f4\u5230\u53f6\u8282\u70b9\uff0c\u6700\u540e\u5c06\u67e5\u627e\u5230\u7684\u4f4d\u7f6e\u5bf9\u5e94\u503c\u7684\u503c\u8f93\u51fa\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define int long long\n\nusing namespace std;\n\nconst int N = 12e5+10;\t//\u56e0\u4e3a\u8be2\u95ee\u4e2a\u6570\u6700\u5927\u662f1e5\uff0c\u6bcf\u6b21\u8be2\u95ee\u90fd\u4f1a\u52a0\u4e09\u4e2a\u503c\uff0c\u800c\u7ebf\u6bb5\u6811\u8981\u5f004\u500d\uff0c\u6240\u4ee5\u662f12e5\nconst int M = 1e5+10;\n\nint n,m;\nint t[M],l[M],r[M],q[M<<2];\t//q[]:\u79bb\u6563\u5316\u6570\u7ec4\nint sum[N],tag[N],rev[N];\n//sum[]:\u533a\u95f4\u548c\uff0ctag[]:\u533a\u95f4\u8d4b\u503c\uff0crev[]:\u533a\u95f4\u7ffb\u8f6c \n\ninline int read()\t//\u5feb\u8bfb \n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n\treturn x;\n}\n\ninline void pushup(int rt)\n{\n\tsum[rt]=sum[rt<<1]+sum[rt<<1|1];\n}\n\ninline void build(int l,int r,int rt)\n{\n\t//\u521d\u59cb\u5168\u4e3a0\uff0ctag\u4e3a-1\n\tsum[rt]=0;\n\trev[rt]=0;\n\ttag[rt]=-1;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,rt<<1);\n\tbuild(mid+1,r,rt<<1|1);\n\tpushup(rt);\n}\n\ninline void pushdown(int l,int r,int rt)\n{\n\tint mid=(l+r)>>1;\n\tif(tag[rt]!=-1)\t\t//\u5982\u679c\u6709tag\uff0c\u90a3\u4e48\u5c31\u6e05\u7a7arev \n\t{\n\t\ttag[rt<<1]=tag[rt];\n\t\ttag[rt<<1|1]=tag[rt];\n\t\trev[rt<<1]=0;\n\t\trev[rt<<1|1]=0;\n\t\tif(tag[rt])\n\t\t{\n\t\t\tsum[rt<<1]=mid-l+1;\n\t\t\tsum[rt<<1|1]=r-mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum[rt<<1]=0;\n\t\t\tsum[rt<<1|1]=0;\n\t\t}\n\t\ttag[rt]=-1;\n\t}\n\tif(rev[rt])\t\t//\u5982\u679c\u6709rev\uff0c\u90a3\u4e48\u5982\u679c\u6709tag\uff0c\u5c31\u5c06tag^1,\u5426\u5219\u5c06rev^1 \n\t{\n\t\tif(tag[rt<<1]!=-1) tag[rt<<1]^=1;\n\t\telse rev[rt<<1]^=1;\n\t\tif(tag[rt<<1|1]!=-1) tag[rt<<1|1]^=1;\n\t\telse rev[rt<<1|1]^=1;\n\t\tsum[rt<<1]=mid-l+1-sum[rt<<1];\n\t\tsum[rt<<1|1]=r-mid-sum[rt<<1|1];\n\t\trev[rt]=0; \n\t}\n}\n\ninline void update(int t,int L,int R,int l,int r,int rt)\n{\n\tif(L<=l&&r<=R)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tif(t==1) sum[rt]=1;\n\t\t\telse if(t==2) sum[rt]=0;\n\t\t\telse sum[rt]^=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(t==1)\t//\u533a\u95f4\u8d4b\u503c\u4e3a1\n\t\t\t{\n\t\t\t\ttag[rt]=1;\n\t\t\t\trev[rt]=0;\n\t\t\t\tsum[rt]=r-l+1;\n\t\t\t}\n\t\t\tif(t==2)\t//\u533a\u95f4\u8d4b\u503c\u4e3a0\n\t\t\t{\n\t\t\t\ttag[rt]=0;\n\t\t\t\trev[rt]=0;\n\t\t\t\tsum[rt]=0;\n\t\t\t}\n\t\t\tif(t==3)\t//\u533a\u95f4\u7ffb\u8f6c\n\t\t\t{\n\t\t\t\tif(tag[rt]!=-1) tag[rt]^=1;\n\t\t\t\telse rev[rt]^=1;\n\t\t\t\tsum[rt]=r-l+1-sum[rt];\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tpushdown(l,r,rt);\n\tint mid=(l+r)>>1;\n\tif(L<=mid) update(t,L,R,l,mid,rt<<1);\n\tif(mid<R) update(t,L,R,mid+1,r,rt<<1|1);\n\tpushup(rt);\n}\n\ninline int query(int l,int r,int rt)\n{\n\tif(l==r) return l;\n\tpushdown(l,r,rt);\n\tint mid=(l+r)>>1;\n\t//\u5982\u679csum<\u533a\u95f4\u957f\u5ea6\uff0c\u8bf4\u660e\u5b58\u57280\n\tif(sum[rt<<1]<mid-l+1) return query(l,mid,rt<<1);\n\telse return query(mid+1,r,rt<<1|1);\n}\n\nsigned main()\n{\n\tm=read();\n\tq[++n]=1;\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tt[i]=read(),l[i]=read(),r[i]=read();\n\t\tq[++n]=l[i],q[++n]=r[i],q[++n]=r[i]+1;\t//\u79bb\u6563\u5316\u521d\u59cb\u6570\u7ec4 \n\t}\n\t//\u79bb\u6563\u5316 \n\tsort(q+1,q+1+n);\t\t\t//\u6392\u5e8f\n\tn=unique(q+1,q+1+n)-(q+1);\t//\u53bb\u91cd\n\tbuild(1,n,1);\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tl[i]=lower_bound(q+1,q+1+n,l[i])-q;\n\t\tr[i]=lower_bound(q+1,q+1+n,r[i])-q;\n\t\tupdate(t[i],l[i],r[i],1,n,1);\n\t\tprintf(\"%lld\\n\",q[query(1,n,1)]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582383661,
        "uid": 211300,
        "name": "Acestar",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "\u52a8\u6001\u5f00\u70b9\u5e73\u8861\u6811,\u5979\u4e0d\u9999\u4e48?\n\n---\n\n\u6211\u770b\u89c1\u6e05\u4e00\u8272\u7684\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811,\u4e3a\u6bdb\u6211\u7b2c\u4e00\u60f3\u6cd5\u662f\u52a8\u6001\u5f00\u70b9?\n\n\u7528 $\\operatorname{FHQ\\ Treap}$ \u66f4\u597d\u5904\u7406\u4e00\u4e9b\n\n\u52a8\u6001\u5f00\u70b9\u4f1a\u4f7fpushdown\u6781\u5176\u7b80\u77ed\n\n\u5b89\u5229\u53e6\u4e00\u9053\u52a8\u6001\u5f00\u70b9\u5e73\u8861\u6811\u7684\u9898[P3968](https://www.luogu.com.cn/problem/P3968) + [\u9898\u89e3](https://www.luogu.com.cn/blog/1445353309froggy/solution-p3968) ,P3968\u663e\u7136\u6bd4\u8fd9\u9053\u9898\u8981\u590d\u6742\u4e00\u4e9b..(\u4f46\u5176\u5b9e\u53ea\u8981\u601d\u8def\u6e05\u6670\u4e5f\u4e0d\u96be)\n\n\u770b\u9898\u89e3\u4e4b\u524d,\u9996\u5148\u8981\u4fdd\u8bc1\u4f1a\u5199 $\\operatorname{FHQ\\ Treap}$\n\n\u5bf9\u4e8e\u5e73\u8861\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u6240\u4ee3\u8868\u7684\u533a\u95f4 $[l,r]$ ,\u4ee5\u53ca\u533a\u95f4\u91cc\u7684\u6570\u7684\u503c`num` ,\u53cd\u8f6c\u6807\u8bb0`rev`,\u6700\u5de6\u4fa7\u76840/1: `mn[0/1]` (\u5982\u679c\u4e0d\u5b58\u57280/1\u5c31\u8bbe\u7f6e\u4e3ainf) \u548c\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u6240\u4ee3\u8868\u7684\u533a\u95f4\u957f\u5ea6 `siz` (\u522b\u5fd8\u5f00**long long**\u54e6)\n\n\u540c\u65f6\u7528\u4e00\u4e2amap\u8bb0\u5f55\u53f3\u7aef\u70b9\u4e3ar\u7684\u8282\u70b9\u7f16\u53f7,\u65b9\u4fbf\u4e4b\u540e\u7684\u52a8\u6001\u5f00\u70b9\n\n\u8fd9\u91cc\u91cd\u70b9\u8bb2\u5982\u4f55\u5f00\u70b9:\n\n\u6bd4\u5982\u641e\u8981\u5728 $[L,R]$ \u8fd9\u4e2a\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c,\u90a3\u4e48\u5c31\u5206\u522b\u5728 $L$,$R$ \u7684\u4f4d\u7f6e\u65b0\u5f00\u70b9\n\n\u5047\u8bbe\u5f00\u70b9\u7684\u4f4d\u7f6e\u4e3a $pos$\n\n\u9996\u5148\u8981\u627e\u5230 $pos$ \u5728\u5e73\u8861\u6811\u7684\u54ea\u4e2a\u8282\u70b9\u7684\u533a\u95f4\u4e4b\u4e2d,\u5373\u5728\u5e73\u8861\u6811\u4e2d\u627e\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u533a\u95f4 $[l,r]$ \u6ee1\u8db3: $l \\leq pos \\leq r$\n\n\u8fd9\u4e2a\u597d\u529e,\u76f4\u63a5\u5728map\u91cc\u9762lower_bound\u5373\u53ef\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u62c6\u6210 $[l,pos-1],[pos,pos],[pos+1,r]$ \u4e09\u4e2a\u533a\u95f4,\u65b0\u5efa\u4e09\u4e2a\u8282\u70b9\u7136\u540e\u518d\u5408\u5e76\u56de\u53bb\u5373\u53ef(\u5177\u4f53\u89c1\u4ee3\u7801)\n\n\u5f53\u7136\u8981\u5148\u5224\u65ad\u4e00\u4e0b $pos>l$ \u548c $r>pos$\n\n\u522b\u5fd8\u4e86**\u5220\u9664\u539f\u6765\u7684\u8282\u70b9,\u66f4\u65b0map**!!!\n\n\u5f00\u70b9\u8bb2\u5b8c\u4e86,\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282:\n\n\u533a\u95f4\u53cd\u8f6c\u7684\u65f6\u5019\u8fd8\u8981 `swap(mn[0],mn[1]);`\n\nupdate\u7684\u65f6\u5019\u5f88\u5957\u8def\u5c31\u4e0d\u8be6\u7ec6\u8bf4\u4e86,\u66f4\u65b0mn[0/1]\u65f6\u76f4\u63a5\u5728\u5de6\u53f3\u5b50\u6811\u91cc\u53d6min\u5373\u53ef\n\n*code:*\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#include<map>\nusing namespace std;\n#define N 200010\ntypedef long long ll;\nconst ll inf=1LL<<61;\nmap<ll,int> mp;//\u5f00\u4e2amap\u8bb0\u5f55\u5e73\u8861\u6811\u4e2d\u53f3\u7aef\u70b9\u4e3ar\u7684\u8282\u70b9\u7f16\u53f7\ninline ll read(){\n    ll x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nint m,root,cnt=0;\nstruct node{\n\tint key,num,ch[2],rev;\n\tll mn[2],l,r,siz;\n\tbool Rev(){//\u5f04\u4e2a\u6210\u5458\u51fd\u6570\u8fdb\u884c\u533a\u95f4\u53cd\u8f6c\n\t\tnum^=1;\n\t\trev^=1;\n\t\tswap(mn[0],mn[1]);\n\t}\n}t[N<<4];\nint NewNode(int num,ll l,ll r){//\u5efa\u65b0\u8282\u70b9\n\tint k=++cnt; \n\tt[k].num=num;\n\tt[k].l=l,t[k].r=r;\n\tt[k].siz=r-l+1;\n\tt[k].key=rand();\n\tt[k].ch[0]=t[k].ch[1]=0;\n\tif(num==0){\n\t\tt[k].mn[0]=l;\n\t\tt[k].mn[1]=inf;\n\t}\n\telse{\n\t\tt[k].mn[0]=inf;\n\t\tt[k].mn[1]=l;\n\t}\n\tmp[r]=k;\n\treturn k;\n}\nvoid pushdown(int k){//\u4e0b\u653e\u6807\u8bb0\n\tif(t[k].rev){\n\t\tt[t[k].ch[0]].Rev();\n\t\tt[t[k].ch[1]].Rev();\n\t\tt[k].rev=0;\n\t}\n}\nvoid update(int k){//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f\n\tt[k].mn[0]=t[k].mn[1]=inf;\n\tt[k].siz=t[t[k].ch[0]].siz+t[t[k].ch[1]].siz+t[k].r-t[k].l+1;\n\tif(t[k].num==0){\n\t\tt[k].mn[0]=t[k].l;\n\t}\n\telse{\n\t\tt[k].mn[1]=t[k].l;\n\t}\n\tif(t[k].ch[0]){\n\t\tfor(int i=0;i<=1;i++)\n\t\tt[k].mn[i]=min(t[k].mn[i],t[t[k].ch[0]].mn[i]);\n\t}\n\tif(t[k].ch[1]){\n\t\tfor(int i=0;i<=1;i++)\n\t\tt[k].mn[i]=min(t[k].mn[i],t[t[k].ch[1]].mn[i]);\n\t}\n}\nvoid Split(int k,ll data,int &l,int &r){\n\tif(!k){\n\t\tl=r=0;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tif(t[k].r<=data){\n\t\tl=k;\n\t\tSplit(t[k].ch[1],data,t[k].ch[1],r);\n\t}\n\telse{\n\t\tr=k;\n\t\tSplit(t[k].ch[0],data,l,t[k].ch[0]);\n\t}\n\tupdate(k);\n}\nint Merge(int l,int r){\n\tif(!l||!r)return l+r;\n\tpushdown(l),pushdown(r);\n\tif(t[l].key<t[r].key){\n\t\tt[l].ch[1]=Merge(t[l].ch[1],r);\n\t\tupdate(l);\n\t\treturn l;\n\t}\n\telse{\n\t\tt[r].ch[0]=Merge(l,t[r].ch[0]);\n\t\tupdate(r);\n\t\treturn r;\n\t}\n}\nvoid del(int k){;\n\tmp.erase(mp.lower_bound(t[k].r));\n\tif(t[k].ch[0])del(t[k].ch[0]);\n\tif(t[k].ch[1])del(t[k].ch[1]);\n}\nvoid New(ll pos){//\u5f00\u70b9\n\tint k=mp.lower_bound(pos)->second;\n\tint l=0,r=0,p=0;\n\tint num=t[k].num;\n\tll x=t[k].l,y=t[k].r;\n\tif(x==y&&x==pos)return;\n\tSplit(root,y,l,r);\n\tSplit(l,x-1,l,p);\n\tdel(p);\n\tif(pos>x){\n\t\tl=Merge(l,NewNode(t[k].num,x,pos-1));\n\t}\n\tif(y>pos){\n\t\tr=Merge(NewNode(t[k].num,pos+1,y),r);\n\t}\n\troot=Merge(l,Merge(NewNode(t[k].num,pos,pos),r));\n}\nvoid Change(ll x,ll y,int num){\n\tint l=0,p=0,r=0;\n\tNew(x),New(y);//\u5148\u5f00\u70b9\n\tSplit(root,y,l,r);\n\tSplit(l,x-1,l,p);\n\tdel(p);\n\troot=Merge(l,Merge(NewNode(num,x,y),r));\n}\nvoid Rev(ll x,ll y){\n\tint l=0,p=0,r=0;\n\tNew(x),New(y);//\u5148\u5f00\u70b9\n\tSplit(root,y,l,r);\n\tSplit(l,x-1,l,p);\n\tt[p].Rev();\n\troot=Merge(l,Merge(p,r));\n}\nint main(){\n\tsrand(time(0));\n\tm=read();\n\troot=Merge(root,NewNode(0,1,2000000000000000000LL));//\u4e00\u5f00\u59cb\u5f00\u4e00\u4e2a\u5927\u533a\u95f4\n\tfor(int i=1;i<=m;i++){\n\t\tint opt=read();\n\t\tll l=read(),r=read();\n\t\tif(opt==1){\n\t\t\tChange(l,r,1);\n\t\t}\n\t\telse if(opt==2){\n\t\t\tChange(l,r,0);\n\t\t}\n\t\telse{\n\t\t\tRev(l,r);//1<->0\n\t\t}\n\t\tprintf(\"%lld\\n\",t[root].mn[0]);//\u76f4\u63a5\u4ece\u6839\u67e5\u8be2\u5373\u53ef\n\t}\n\treturn 0;\n}\n```\n\n[*Froggy's blog*](https://www.luogu.org/blog/1445353309froggy/)\n\n#### \u5471!!\n",
        "postTime": 1580048127,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u53d1\u4e00\u7bc7\u66f4\u8be6\u7ec6\u7684\u9898\u89e3\u3002\n\n\u7ebf\u6bb5\u6811+\u79bb\u6563\u5316\u3002\n\n\u4f46\u662f\u5e76\u4e0d\u662f\u88f8\u7684\u53e0\u52a0\u3002\n\n\u4ece\u5934\u5f00\u59cb\u601d\u8003\uff0c\u5c55\u73b0\u4e00\u4e0b\u601d\u8def\u8fc7\u7a0b\uff1a\u9996\u5148\u8981\u7ef4\u62a4\u4e09\u79cd\u64cd\u4f5c\uff0c\u533a\u95f4\u7f6e\u96f6\uff0c\u533a\u95f4\u7f6e1\uff0c\u533a\u95f4\u53cd\u8f6c\uff0c\u5e76\u8f93\u51fa\u4ece\u5de6\u5230\u53f3\u7b2c\u4e00\u4e2a0\u7684\u4f4d\u7f6e\u3002\n\n\u533a\u95f4\u64cd\u4f5c\u5fc5\u7136\u8003\u8651\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u8fd9\u4e2a\u503c\u57df\u7ef4\u62a4\u4ee4\u4eba\u671b\u800c\u5374\u6b65\uff0c\u4f46\u662f\u8fd9\u4e48\u5927\u7684\u503c\u57df\u9700\u8981\u79bb\u6563\u5316\u5df2\u7ecf\u662f\u5957\u8def\u7684\u4e1c\u897f\u4e86\u3002\u6240\u4ee5\u76f4\u63a5\u628a\u5176\u6392\u5e8f\u53bb\u91cd\u6620\u5c04\u5230\u4e00\u4e2a\u6709\u9650\u503c\u57df\u4e2d\uff0c\u5728\u8fd9\u4e2a\u6709\u9650\u503c\u57df\u5efa\u7ebf\u6bb5\u6811\uff0c\u6700\u540e\u8fd4\u56de\u7684\u503c\u518d\u6620\u5c04\u56de\u53bb\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u601d\u8003\u5982\u4f55\u7ef4\u62a4\u8fd9\u51e0\u79cd\u64cd\u4f5c\u3002\u533a\u95f4\u8d4b\u503c\u53ef\u4ee5\u6253lazy\u6807\u8bb0\uff0c\u533a\u95f4\u53cd\u8f6c\u540c\u6837\u53ef\u4ee5\u6253\u53cd\u8f6c\u6807\u8bb0\u3002\u6253\u591a\u91cdlazy\u6807\u8bb0\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u8003\u8651\u597d\u6807\u8bb0\u95f4\u7684\u76f8\u4e92\u5f71\u54cd\uff0c\u6362\u8a00\u4e4b\uff0c\u5c31\u662f\u4e24\u79cd\u6807\u8bb0\u4e0b\u4f20\u7684\u5148\u540e\u95ee\u9898\u3002\u90a3\u4e48\u6211\u4eec\u8003\u8651\uff1a\n\n\u533a\u95f4\u8d4b\u503c\uff0c\u4e4b\u524d\u7684\u53cd\u8f6c\u6807\u8bb0\u5c31\u4f1a\u5931\u6548\u3002\u533a\u95f4\u53cd\u8f6c\uff0c\u4e4b\u524d\u7684\u8d4b\u503c\u6807\u8bb0\u5c31\u4f1a\u53d6\u53cd\u3002\u5b83\u4eec\u4e4b\u95f4\u6ca1\u6709\u5148\u540e\u7684\u987a\u5e8f\uff0c\u53ea\u662f\u6bcf\u6b21\u6253\u65b0\u6807\u8bb0\u7684\u65f6\u5019\u76f4\u63a5\u91cd\u65b0\u8d4b\u503c\u53e6\u4e00\u79cd\u6807\u8bb0\u5c31\u597d\u3002\n\n\u81f3\u4e8e\u6c42MEX\u503c\uff0c\u5f88\u591a\u5927\u4f6c\u7528\u4e86\u7ebf\u6bb5\u6811+\u4e8c\u5206\u3002\u4f46\u662f\u6ca1\u6709\u5fc5\u8981\uff0c\u53ea\u9700\u8981\u5148\u67e5\u5de6\u5b50\u6811\u540e\u67e5\u53f3\u5b50\u6811\uff0c\u5c31\u53ef\u4ee5\u627e\u5230\u6700\u5de6\u7684\u8282\u70b9\u3002\u6709\u4eba\u8bf4\u8fd9\u662f\u8d2a\u5fc3\uff0c\u52c9\u5f3a\u7b97\u5427\uff0c\u5c0f\u8d2a\u5fc3\uff1f\n\n\u4e4b\u540e\u662f\u672c\u9898\u5751\u70b9\uff1a\u79bb\u6563\u5316\u8981\u628ar+1\u4e5f\u79bb\u6563\u8fdb\u53bb\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u7740\u91cd\u8bb2\u4e00\u8bb2\uff1a\u56e0\u4e3a\u6211\u4eec\u672c\u6765\u60f3\u7ef4\u62a4\u503c\u57df\uff0c\u4f46\u662f\u56e0\u4e3a\u503c\u57df\u592a\u5bbd\u5e7f\u4e86\uff0c\u6240\u4ee5\u8981\u79bb\u6563\u5316\u3002\u4f46\u662f\u5e76\u4e0d\u662f\u6240\u6709\u7684\u90fd\u53ef\u4ee5\u79bb\u6563\u5316\u3002\u4ed4\u7ec6\u601d\u8003\uff1a\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u628a$[l,r]$\u8fdb\u884c\u79bb\u6563\u64cd\u4f5c\uff0c\u8fd9\u4e2a$[l,r]$\u5c31\u6709\u53ef\u80fd\u8fde\u6210\u4e00\u8d77\u3002\u90a3\u4e48\u5047\u5982\u6211\u4eec\u8981\u67e5\u8be2$l,r$\u4e2d\u95f4\u7684\u6570\uff0c\u5c31\u67e5\u4e0d\u5230\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u4e0d\u80fd\u79bb\u6563\u5316\u3002\n\n\u4f46\u662f\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u79bb\u6563\u5316\u5462\uff1f\u5c31\u662f\u56e0\u4e3a\u6211\u4eec\u662f\u6574\u4e2a\u533a\u95f4\u8d4b\u503c\u3001\u53cd\u8f6c\uff0c\u6240\u4ee5\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848\u80af\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u5728\u8fd9\u4e9b\u533a\u95f4\u5185\u90e8\uff0c\u56e0\u4e3a\u6211\u4eec\u672c\u6765\u5c31\u662f\u6309\u5757\u64cd\u4f5c\u7684\u3002\n\n\u4f46\u662f$r+1$\u4e0d\u4e00\u6837\uff0c\u663e\u7136\uff0c$r+1$\u662f\u6709\u53ef\u80fd\u88ab\u7b97\u6210\u7b54\u6848\u7684\u3002\u6240\u4ee5$r+1$\u4e5f\u8981\u79bb\u6563\u8fdb\u53bb\u3002\n\n\u5c31\u5927\u529f\u544a\u6210\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define int long long\n#define lson pos<<1\n#define rson pos<<1|1\nusing namespace std;\nchar *p1,*p2,buf[100000];\n#define nc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n\tint x=0,f=1;\n\tchar ch=nc();\n\twhile(ch<48||ch>57)\n\t\tif(ch=='-')\n\t\t\tf=-1,ch=nc();\n\twhile(ch>=48&&ch<=57)\n\t\tx=x*10+ch-48,ch=nc();\n\treturn x*f;\n}\nconst int maxn=1e5+5;\nint n;\nint opt[maxn],l[maxn],r[maxn];\nint a[maxn<<2],cnt;\nint sum[maxn<<4],lazy[maxn<<4],rev[maxn<<4];\n//sum\u6c42\u548c\uff0clazy\u8d4b\u503c\uff0crev\u53cd\u8f6c\nvoid pushup(int pos)\n{\n\tsum[pos]=sum[lson]+sum[rson];\n}\nvoid build(int pos,int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tlazy[pos]=-1;\n\tif(l==r)\n\t\treturn;\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n}\nvoid mark(int pos,int l,int r,int k)\n{\n\tif(k==1)\n\t{\n\t\tsum[pos]=(r-l+1);   \n\t\tlazy[pos]=1;\n\t\trev[pos]=0;\n\t}\n\telse if(k==2)\n\t{\n\t\tlazy[pos]=0;\n\t\tsum[pos]=0;\n\t\trev[pos]=0;\n\t}\n\telse\n\t{\n\t\tif(lazy[pos]!=-1)\n\t\t\tlazy[pos]^=1;\n\t\telse\n\t\t\trev[pos]^=1;\n\t\tsum[pos]=(r-l+1)-sum[pos];\n\t}\n}\nvoid pushdown(int pos,int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tif(lazy[pos]==1)\n\t{\n\t\tmark(lson,l,mid,1);\n\t\tmark(rson,mid+1,r,1);\n\t\tlazy[pos]=-1;\n\t}\n\telse if(lazy[pos]==0)\n\t{\n\t\tmark(lson,l,mid,2);\n\t\tmark(rson,mid+1,r,2);\n\t\tlazy[pos]=-1;\n\t}\n\tif(rev[pos])\n\t{\n\t\tmark(lson,l,mid,3);\n\t\tmark(rson,mid+1,r,3);\n\t\trev[pos]=0;\n\t}\n}\nvoid update(int pos,int l,int r,int x,int y,int k)\n{\n\tint mid=(l+r)>>1;\n\tif(l==r)\n\t{\n\t\tif(k==1)\n\t\t\tsum[pos]=1;\n\t\telse if(k==2)\n\t\t\tsum[pos]=0;\n\t\telse\n\t\t\tsum[pos]^=1;\n\t\treturn;\n\t}\n\tif(x<=l && r<=y)\n\t{\n\t\tmark(pos,l,r,k);\n\t\treturn;\n\t}\n\tpushdown(pos,l,r);\n\tif(x<=mid)\n\t\tupdate(lson,l,mid,x,y,k);\n\tif(y>mid)\n\t\tupdate(rson,mid+1,r,x,y,k);\n\tpushup(pos);\n}\nint query(int pos,int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tif(l==r)\n\t\treturn l;\n\tpushdown(pos,l,r);\n\tif(sum[lson]<(mid-l+1))\n\t\treturn query(lson,l,mid);\n\telse\n\t\treturn query(rson,mid+1,r);\n}\nsigned main()\n{\n\tn=read();\n\ta[++cnt]=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\topt[i]=read();l[i]=read();r[i]=read();\n\t\ta[++cnt]=l[i];a[++cnt]=r[i];a[++cnt]=r[i]+1;\n\t}\n\tsort(a+1,a+cnt+1);\n\tcnt=unique(a+1,a+cnt+1)-(a+1);\n\tbuild(1,1,cnt);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tl[i]=lower_bound(a+1,a+cnt+1,l[i])-a;\n\t\tr[i]=lower_bound(a+1,a+cnt+1,r[i])-a;\n\t\tupdate(1,1,cnt,l[i],r[i],opt[i]);\n\t\tprintf(\"%lld\\n\",a[query(1,1,cnt)]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1605176470,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "\u5728\u770b\u5230\u9898\u89e3\u6e05\u4e00\u8272\u7684\u7ebf\u6bb5\u6811\u540e\uff0c\u6211\u51b3\u5b9a\u4e3a\u9898\u89e3\u533a\u5e26\u6765\u4e00\u4e9b\u65b0\u9c9c\u7684\u8840\u6db2\n\n**\u5206\u5757**\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ef4\u62a4\u4e00\u4e2a\u521d\u59cb\u5168\u4e3a0\u7684\u6570\u7ec4\uff0c\u5e76\u5904\u7406\u4e09\u79cd\u64cd\u4f5c\uff1a\n\n\u5c06\u533a\u95f4$l~r$\u6539\u4e3a1\uff0c\u5c06\u533a\u95f4$l~r$\u6539\u4e3a0\uff0c\u5c06\u533a\u95f4$l~r$\u53d6\u53cd\n\n\u64cd\u4f5c\u6b21\u6570\u4e3a$n$\uff0c\u4e14\u8981\u4f60\u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u6700\u5c0f\u7684\uff0c\u5728\u6570\u7ec4\u4e2d\u4e3a0\u7684\u6b63\u6574\u6570\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leqslant n \\leqslant 1e5,1\\leqslant l,r \\leqslant 1e18$\n\n[\u539f\u9898](https://www.luogu.com.cn/problem/CF817F)\n\n\u8fdb\u5165\u6b63\u6587\u3002\n\n\u9996\u5148\u6211\u4eec\u770b\u5230\u6570\u636e\u8303\u56f4\uff1a$1e18$  \u4e8e\u662f\u5012\u5438\u4e00\u53e3\u51c9\u6c14\u3002\u79bb\u6563\u5316\u65e0\u7591\u3002\n\n\u90a3\u4e48\u8981\u600e\u4e48\u79bb\u6563\u5316\u5462?\n\n\u6211~~\u611f\u6027~~\u89c9\u5f97\uff0c\u8fd9\u4e2a\u7b54\u6848\u5e94\u8be5\u53ea\u4e0e\u6bcf\u6b21\u64cd\u4f5c\u7684\u7aef\u70b9\u6709\u5173\n\n\u4e8e\u662f\u6df1\u5165\u601d\u8003\u5f97\u5230\uff0c\u771f\u6b63\u6709\u610f\u4e49\u7684\uff0c\u53ea\u6709\u6bcf\u6b21\u64cd\u4f5c\u7684$l,r,r+1$\n\n\u8bf6\uff0c$r+1$?\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\uff0c\u82e5\u4e00\u6b21\u64cd\u4f5c\u540e$1~r$\u5168\u90e8\u4e3a1\uff0c\u7b54\u6848\u5c06\u4e3a$r+1$\u800c\u4e0d\u662f\u4e0b\u4e00\u4e2a\u70b9\u3002\u56e0\u6b64\u7d22\u6027\u5c06$r+1$\u4e5f\u4f5c\u4e3a\u4e00\u4e2a\u70b9\u52a0\u5165\u5230\u79bb\u6563\u5316\u540e\u7684\u7ed3\u679c\u4e2d\n\n\u8fd8\u6709\u4e00\u4e2a\u81ed\u540d\u662d\u8457\u7684\u5751\u70b9\uff1a$1$\u4e5f\u8981\u88ab\u6254\u5230\u79bb\u6563\u5316\u7684\u7ed3\u679c\u4e2d\n\n\u6bd5\u7adf\u82e5\u6bcf\u6b21\u64cd\u4f5c\u7684\u7aef\u70b9\u4e0d\u6d89\u53ca$1$\u7b54\u6848\u5c31\u662f$1$\u554a\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u79bb\u6563\u5316\u7684\u7ed3\u679c\uff0c\u5c31\u53ef\u4ee5\u7528\u5206\u5757\u53bb\u7ef4\u62a4\u4e86\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2atag\uff0c\u8868\u793a\u8fd9\u4e2a\u5757\u4e2d\u6709\u51e0\u4e2a\u503c\u4e3a$1$,\u518d\u7ef4\u62a4\u4e00\u4e2ac\uff0c\u8868\u793a\u8fd9\u4e2a\u5757\u662f\u5426\u88ab\u53d6\u53cd\u8fc7\n\n\u5bf9\u6bcf\u4e2a\u70b9\u8bbe\u7f6e\u4e00\u4e2av\uff0c\u8868\u793a\u5b83\u770b\u8d77\u6765\u7684\u503c\n\n\u800c\u5176\u5b9e\u9645\u4e0a\u7684\u503c\u8fd8\u8981\u8003\u8651\u5176\u6240\u5c5e\u5757\u7684tag\u548cc(\u82e5tag\u53d6\u6ee1\u5219\u5176\u503c\u4e3a1\uff0ctag\u4e3a0\u5219\u5176\u503c\u4e3a0\uff0c\u4e14\u8981\u8003\u8651\u5176\u662f\u5426\u88ab\u53d6\u53cd\u8fc7)\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n* \\sqrt{n})$,\u5bf9\u4e8e\u672c\u9898\u7684\u6570\u636e\u80fd\u591f\u641e\u5b9a\n\n\u90a3\u4e48\uff0c\u57fa\u672c\u5c31\u8fd9\u6837\u4e86\u3002\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u4ee3\u7801\u3002\u52a0\u4e86\u6ce8\u91ca\uff0c\u5e0c\u671b\u60a8\u80fd\u770b\u61c2\u3002\n\n$Code:$\n```cpp\n#include <cstdio>\n#include <map>\n#include <cmath>\n#include <algorithm>\n\n#define int long long\n\nconst int maxn=4e5+50;//\u4e00\u6b21\u64cd\u4f5c\u52a0\u4e09\u4e2a\u70b9\uff0c\u8fd9\u91cc\u6c42\u7a33\u5f00\u4e86\u56db\u500d\n\nstruct question{\n\tint opt,l,r;\n}q[maxn];\n\nint n,a[maxn],cnt,to[maxn];std::map<int,int> after;//\u79bb\u6563\u5316\u7528\n\nint tag[maxn],belong[maxn],key,v[maxn],c[maxn],size[maxn];\n\ninline void assign(int id,int k){//\u5c06\u7b2cid\u5757\u5168\u90e8\u6539\u4e3ak\n\tint begin=(id-1)*key+1;\n\tfor(int i=begin;belong[i]==belong[begin];i++) v[i]=c[belong[i]]?!k:k;\n}\n\ninline void modify(int l,int r,int k){\n\tif(k==-1){//\u533a\u95f4\u53d6\u53cd\n\t\tif(belong[l]==belong[r]){\n\t\t\tif(tag[belong[l]]==size[belong[l]]||!tag[belong[l]]){\n\t\t\t\tint pos=tag[belong[l]]>0;//1 or 0\n\t\t\t\tassign(belong[l],pos);\n\t\t\t}\n\t\t\t//\u9700\u8981assign\u51fd\u6570\u662f\u56e0\u4e3a\u6709\u65f6tag\u4f1a\u4e0d\u518d\u6709\u610f\u4e49\n\t\t\t//\u4e0d\u80fd\u518d\u7528tag\u662f\u5426\u53d6\u6ee1\u6216tag\u662f\u5426\u4e3a0\u6765\u5224\u65ad\u8fd9\u4e00\u6574\u5757\n\t\t\t//\u56e0\u4e3a\u8fd9\u91cc\u6211\u4eec\u4fee\u6539\u4e86\u8fd9\u4e00\u5757\u7684\u4e00\u90e8\u5206\n\t\t\tfor(int i=l;i<=r;i++){\n\t\t\t\tif((c[belong[i]]?!v[i]:v[i])==1) tag[belong[i]]--;\n\t\t\t\tif((c[belong[i]]?!v[i]:v[i])==0) tag[belong[i]]++;\n\t\t\t\tv[i]=!v[i];\n\t\t\t}//\u66b4\u529b\u4fee\u6539\n\t\t\treturn;\n\t\t}\n\t\tif(tag[belong[l]]==size[belong[l]])\n\t\tassign(belong[l],1);\n\t\tif(!tag[belong[l]]) assign(belong[l],0);\n\t\t//\u89c2\u5bdftag\u662f\u5426\u5bf9\u5176\u5757\u5185\u7684\u503c\u6709\u610f\u4e49\n\t\t//\u82e5\u6709\u610f\u4e49\u5219\u5176\u610f\u4e49\u5e94\u88ab\u66b4\u529b\u4e0b\u4f20\u6765\u4f53\u73b0\n\t\t//\u56e0\u4e3atag\u8981\u53d8\u4e86\n\t\tfor(int i=l;belong[i]==belong[l];i++){\n\t\t\tif((c[belong[i]]?!v[i]:v[i])==1) tag[belong[i]]--;\n\t\t\tif((c[belong[i]]?!v[i]:v[i])==0) tag[belong[i]]++;\n\t\t\tv[i]=!v[i];\n\t\t}\n\t\tif(tag[belong[r]]==size[belong[r]])\n\t\tassign(belong[r],1);\n\t\tif(!tag[belong[r]]) assign(belong[r],0);\n\t\tfor(int i=r;belong[i]==belong[r];i--){\n\t\t\tif((c[belong[i]]?!v[i]:v[i])==1) tag[belong[i]]--;\n\t\t\tif((c[belong[i]]?!v[i]:v[i])==0) tag[belong[i]]++;\n\t\t\tv[i]=!v[i];\n\t\t}\n\t\tfor(int i=belong[l]+1;i<belong[r];i++){\n\t\t\tc[i]=!c[i];\n\t\t\ttag[i]=size[i]-tag[i];//\u4ee4\u4eba\u8212\u723d\u7684\u90e8\u5206\n\t\t\t//\u4e0d\u7528\u7ba1\u4ec0\u4e48\u4e71\u4e03\u516b\u7cdf\u7684\uff0c\u53cd\u8fc7\u6765\u5c31\u597d\n\t\t}\n\t}else{\n\t\t//\u533a\u95f4\u8d4b\u503c\n\t\t//\u5176\u5b9e\u601d\u60f3\u6839\u4e0a\u9762\u5f88\u50cf\uff0c\u4ee3\u7801\u4e5f\u57fa\u672c\u4e00\u81f4\n\t\t//\u6240\u4ee5\u770b\u7740\u4ee3\u7801\u767e\u6765\u884c\u7684\uff0c\u5176\u5b9e\u6ca1\u591a\u5c11\n\t\tif(belong[l]==belong[r]){\n\t\t\tif(tag[belong[l]]==size[belong[l]]) assign(belong[l],1);\n\t\t\tif(!tag[belong[l]]) assign(belong[l],0);\n\t\t\tfor(int i=l;i<=r;i++){\n\t\t\t\t//\u82e5\u503c\u53d8\u4e86\uff0c\u66f4\u65b0tag\n\t\t\t\tif((c[belong[i]]?!v[i]:v[i])==1&&k==0) tag[belong[l]]--;\n\t\t\t\tif((c[belong[i]]?!v[i]:v[i])==0&&k==1) tag[belong[l]]++; \n\t\t\t\tv[i]=c[belong[i]]?!k:k;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif(tag[belong[l]]==size[belong[l]]) assign(belong[l],1);\n\t\tif(!tag[belong[l]]) assign(belong[l],0);\n\t\tfor(int i=l;belong[i]==belong[l];i++){\n\t\t\tif((c[belong[i]]?!v[i]:v[i])==1&&k==0) tag[belong[i]]--;\n\t\t\tif((c[belong[i]]?!v[i]:v[i])==0&&k==1) tag[belong[i]]++;\n\t\t\tv[i]=c[belong[i]]?!k:k;\n\t\t}\n\t\tif(tag[belong[r]]==size[belong[r]]) assign(belong[r],1);\n\t\tif(!tag[belong[r]]) assign(belong[r],0);\n\t\tfor(int i=r;belong[i]==belong[r];i--){\n\t\t\tif((c[belong[i]]?!v[i]:v[i])==1&&k==0) tag[belong[i]]--;\n\t\t\tif((c[belong[i]]?!v[i]:v[i])==0&&k==1) tag[belong[i]]++;\n\t\t\tv[i]=c[belong[i]]?!k:k;\n\t\t}\n\t\tfor(int i=belong[l]+1;i<belong[r];i++){\n\t\t\tc[i]=0;//\u5927\u624b\u4e00\u6325\u628ac\u5212\u6389\u4e0d\u7ba1\n\t\t\tif(k==0) tag[i]=0;\n\t\t\telse tag[i]=size[i];//\u4ee4\u4eba\u8212\u723d\uff0c\u76f4\u63a5\u8d4b\u503c\n\t\t}\n\t}\n}\n\ninline int query(){\n\t// printf(\"cnt:%d\\n\",cnt);\n\t// for(int i=1;i<=cnt;i++) printf(\"i:%d v[i]:%d val:%d\\n\",i,tag[belong[i]]==size[belong[i]]?1:!tag[belong[i]]?0:c[belong[i]]?!v[i]:v[i],to[i]);\n\tfor(int i=1;i<=belong[cnt];i++){\n\t\t// printf(\"i:%d tag:%d\\n\",i,tag[i]);\n\t\tif(tag[i]!=size[i]){//\u82e5\u4e0d\u6ee1\uff0c\u90a3\u80af\u5b9a\u662f\u5728\u91cc\u9762\u4e86\n\t\t\tint begin=(i-1)*key+1;\n\t\t\tif(!tag[i]) return begin;\n\t\t\tfor(int j=begin;belong[j]==belong[begin];j++){\n\t\t\t\tif((c[i]?!v[j]:v[j])==0) return j;//\u679a\u4e3e\u5c31\u597d\n\t\t\t}\n\t\t}\n\t}\n\t// return cnt;\n}\n\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld%lld%lld\",&q[i].opt,&q[i].l,&q[i].r);\n\t\ta[++cnt]=q[i].l,a[++cnt]=q[i].r,a[++cnt]=q[i].r+1;\n\t}\n\ta[++cnt]=1;\n\tstd::sort(a+1,a+cnt+1);\n\tcnt=std::unique(a+1,a+cnt+1)-a-1;//\u79bb\u6563\u5316\n\t// for(int i=1;i<=cnt;i++) printf(\"%d \",a[i]);putchar('\\n');\n\tkey=std::sqrt(cnt);\n\tfor(int i=1;i<=cnt;i++){after[a[i]]=i,to[i]=a[i],belong[i]=(i-1)/key+1;size[belong[i]]++;}//\u5206\u5757\n\t// for(int i=1;i<=cnt;i++) printf(\"%d \",belong[i]);putchar('\\n');\n\t// to[cnt+1]=to[cnt]+1;\n\t// for(int i=1;i<=n;i++) printf(\"l:%d after_l:%d r:%d after_r:%d\\n\",q[i].l,after[q[i].l],q[i].r,after[q[i].r]);\n\tfor(int i=1;i<=n;i++){\n\t\tif(q[i].opt==1){\n\t\t\tmodify(after[q[i].l],after[q[i].r],1);\n\t\t}\n\t\tif(q[i].opt==2){\n\t\t\tmodify(after[q[i].l],after[q[i].r],0);\n\t\t}\n\t\tif(q[i].opt==3){\n\t\t\tmodify(after[q[i].l],after[q[i].r],-1);\n\t\t}\n\t\t// printf(\"%lld\\n\",query());\n\t\tprintf(\"%lld\\n\",to[query()]);//\u8f93\u51fa\n\t\t//to[after[x]]=x,to\u7528\u6765\u5c06\u79bb\u6563\u5316\u540e\u7684\u7ed3\u679c\u8f6c\u56de\u5176\u771f\u6b63\u7684\u503c\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1595940571,
        "uid": 101984,
        "name": "Rui_R",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "> \u524d\u8a00\uff1a\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u8fd9\u91cc:https://www.luogu.org/blog/lrl/\n\n- \u672c\u9898\u8bb2\u5e08\u8bb2\u7684~~\u5de8\u6c34~~\uff0c\u4f46\u5bb9\u6613\u9519\u7684\u7ec6\u8282\u5374\u63d0\u9192\u4e86\u7684\uff0c\u542c\u7684\u65f6\u5019\u4e0d\u662f\u5f88\u61c2\uff0c\u4e2d\u5348\u56de\u53bb\u60f3\u4e86\u4e00\u4e0b\uff0c\u597d\u50cf\u61c2\u4e86\uff0c\u4e0b\u5348\u5c31\u5f00\u59cb\u505a\uff0c\u672c\u9898\u4ee4\u6211\u60f3\u7684\u6700\u4e45\u7684\u5c31\u662f\u591a\u6807\u8bb0\u95ee\u9898\uff08$XOR$\u6807\u8bb0\u548c$Add$\u67d3\u8272\u6807\u8bb0\uff09\uff0c\u6700\u7ec8\u51b3\u5b9a**\u540c\u4e00\u8282\u70b9\u53ea\u4fdd\u75591\u4e2a\u6807\u8bb0**\uff08\u7531\u4e8e\u672c\u9898\u7684\u7279\u6b8a\u6027\uff09\uff0c\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f$XOR$\u548c\u533a\u95f4\u66b4\u529b\u8986\u76d6\u6210$1$\u6216$0$\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\uff0c\u90a3\u5c31\u4e00\u5b9a\u53ef\u4ee5\u5408\u5e76\uff0c\u5b58\u5728$Add$\u6570\u7ec4\u4e0a\uff0c\u6240\u4ee5\u5728$Pushdown$\u7684\u65f6\u5019\uff1a\n\n1. \u5047\u5982\u4f20$Add$\u6807\u8bb0\uff0c\u5c31\u628a\u5de6\u53f3\u513f\u5b50\u533a\u95f4\u7684$Add$\u76f4\u63a5\u8986\u76d6\u6210\u5f53\u524d\u7684$Add$\uff0c\u5e76\u628a\u5b83\u4eec\u7684$XOR$\u6807\u8bb0\u8d4b\u4e3a0\uff08\u6709\u53ef\u80fd\u5b58\u5728\uff0c\u4f46\u5b58\u5728\u6ca1\u6709\u7528\u4e86\uff0c\u67d3\u8272\u6210$0/1$\u662f\u66b4\u529b\u7684,\u65e0\u6761\u4ef6\u7684\uff09\uff1b\n2. \u5047\u5982\u4f20$XOR$\u6807\u8bb0\uff0c\u4ee5\u5de6\u513f\u5b50\u4e3a\u4f8b\uff0c\u5982\u679c\u5de6\u513f\u5b50$Add!=-1$\uff0c\u5c31\u8ba9$Add\\ xor\\ 1$\uff0c\u5426\u5219\u5c31\u628a\u5de6\u513f\u5b50\u7684$XOR$\u548c$1$\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\uff0c\u53f3\u513f\u5b50\u4f20\u9012\u662f\u4e00\u6837\u7684\uff1b\n3. \u5047\u5982\u540c\u65f6\u4f20$Add$\u6807\u8bb0\u548c$XOR$\u6807\u8bb0\uff0c\u90a3\u662f\u4e0d\u80fd\u7684\uff0c\u524d\u6587\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u4e0a\u4e24\u6b65\u5728\u4f20\u9012\u7684\u65f6\u5019\u4e5f**\u4fdd\u8bc1\u4e86\u4e24\u4e2a\u6807\u8bb0\u540c\u4e00\u8282\u70b9\u6700\u591a\u53ea\u5b58\u5728\u4e00\u4e2a**\u3002\n\n#### \u672c\u9898\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u9996\u5148\u8981\u79bb\u6563\u5316\uff08~~\u8fd9\u4e2a\u5e94\u8be5\u90fd\u77e5\u9053\u4e0d\u8bb2\u4e86~~\uff09\uff0c\u5e76\u4e14\u5728\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\u91cc\u540c\u65f6\u52a0\u4e0a\u6bcf\u4e2a\u64cd\u4f5c\u7684\uff08\u53f3\u7aef\u70b9$+1$\uff09\uff0c\u56e0\u4e3a\u5b83\u662f\u5f88\u53ef\u80fd\u4ea7\u751f\u7b54\u6848\u7684\u5730\u65b9\uff0c\u8fd8\u6709\u4e5f\u522b\u5fd8\u8bb0\u79bb\u6563\u5316\u6570\u7ec4\u91cc\u4e00\u5b9a\u5f97\u6709$1$  \n\n\u53e6\u5916\u5728\u4ee3\u7801\u91cc\u5f02\u6216\u6570\u7ec4\u662f$yh$\uff08\u76f4\u63a5\u53d6\u7684\u62fc\u97f3\u9996\u5b57\u6bcd\uff0c\u522b\u89c1\u602a\uff09\uff0c$1$\u8868\u793a\u8be5\u533a\u95f4\u9700\u8981$XOR$\uff0c0\u8868\u793a\u8be5\u533a\u95f4\u4e0d\u9700\u8981$XOR$\uff0c\u521d\u59cb\u503c\u4e3a$0$\u3002\n\n$Code:$\n```cpp\n#define ri register int\n#define ll long long\n#define ci const int&\n#define rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define dwn(i,a,b) for(register int i=(a);i>=(b);--i)\n#define ee(i,a) for(register int i=head[a];i;i=e[i].nxt)\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\n#define pre int m=(l+r)>>1\n#define pushup sum[rt]=sum[rt<<1]+sum[rt<<1|1]\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+55;\nconst int M=2055;\nconst int inf=0x3f3f3f3f;\nchar ss[1<<21],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<21,stdin),A==B)?EOF:*A++;}\ntemplate<class T>void rd(T&x){\n    ri f=1;char c=gc();x=0;while(c<48||c>57){if(c=='-')f=-1;c=gc();};\n    while(c>47&&c<58){x=(x<<3)+(x<<1)+(c^48);c=gc();}x*=f;\n}\nint n,sum[(N*3)<<2],add[(N*3)<<2],yh[(N*3)<<2],op[N],cnt=0;\nll v[N<<2],ql[N],qr[N];\nstruct cmp{\n\tinline bool operator()(const ll&T1,const ll&T2){\n\t\treturn T1<T2; \n\t}\n};\n\nvoid buildtree(int l,int r,int rt){\n\tif(l==r){\n\t\tsum[rt]=0;add[rt]=-1;yh[rt]=0;\n\t\treturn;\n\t}\n\tpre;\n\tsum[rt]=0;add[rt]=-1;yh[rt]=0;\n\tbuildtree(lson);\n\tbuildtree(rson);\n\tpushup;\n}\n\ninline void pushdown(int l,int r,int rt){\n\tpre;\n\tif(add[rt]!=-1){\n\t\tadd[rt<<1]=add[rt];\n\t\tadd[rt<<1|1]=add[rt];\n\t\tyh[rt<<1]=0;\n\t\tyh[rt<<1|1]=0;\n\t\tif(add[rt]==1){\n\t\t\tsum[rt<<1]=m-l+1;\n\t\t\tsum[rt<<1|1]=r-m;\n\t\t}\n\t\telse{\n\t\t\tsum[rt<<1]=0;\n\t\t\tsum[rt<<1|1]=0;\n\t\t}\n\t\tadd[rt]=-1;\n\t}\n\tif(yh[rt]){\n\t\tif(add[rt<<1]!=-1)add[rt<<1]^=1;\n\t\telse yh[rt<<1]^=1;\n\t\tif(add[rt<<1|1]!=-1)add[rt<<1|1]^=1;\n\t\telse yh[rt<<1|1]^=1;\n\t\tsum[rt<<1]=m-l+1-sum[rt<<1];\n\t\tsum[rt<<1|1]=r-m-sum[rt<<1|1];\n\t\tyh[rt]=0;\n\t}\n}\n\nint query(int l,int r,int rt){\n\tif(l==r)return l;\n\tpushdown(l,r,rt);\n\tpre;\n\tif(sum[rt<<1]<m-l+1)return query(lson);\n\telse return query(rson);\n} \n\nvoid update(int o,int x,int y,int l,int r,int rt){\n\tif(x<=l&&r<=y){\n\t\tif(l==r){\n\t\t\tif(o==1)sum[rt]=1;\n\t\t\telse if(o==2)sum[rt]=0;\n\t\t\telse sum[rt]^=1;\n\t\t}\n\t\telse{\n\t\t\tif(o==1){\n\t\t\t\tadd[rt]=1;yh[rt]=0;\n\t\t\t\tsum[rt]=r-l+1;\n\t\t\t}\n\t\t\telse if(o==2){\n\t\t\t\tadd[rt]=0;yh[rt]=0;\n\t\t\t\tsum[rt]=0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(add[rt]==-1)yh[rt]^=1;\n\t\t\t\telse add[rt]^=1;\n\t\t\t\tsum[rt]=r-l+1-sum[rt];\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tpushdown(l,r,rt);\n\tpre;\n\tif(x<=m)update(o,x,y,lson);\n\tif(y>m)update(o,x,y,rson);\n\tpushup;\n}\n\nint main()\n{\n    //freopen(\"read.txt\",\"r\",stdin);\n    rd(n);\n    v[++cnt]=1;\n    rep(i,1,n){\n    \trd(op[i]);rd(ql[i]);rd(qr[i]);\n    \tv[++cnt]=ql[i];v[++cnt]=qr[i];v[++cnt]=qr[i]+1;\n\t}\n\tsort(v+1,v+cnt+1,cmp());\n\tcnt=unique(v+1,v+cnt+1)-v-1;\n\tbuildtree(1,cnt,1);\n\trep(i,1,n){\n\t    ql[i]=lower_bound(v+1,v+cnt+1,ql[i])-v;\n\t\tqr[i]=lower_bound(v+1,v+cnt+1,qr[i])-v;\t\n\t\tupdate(op[i],ql[i],qr[i],1,cnt,1);  \n\t\tprintf(\"%lld\\n\",v[query(1,cnt,1)]);\n    }\n    return 0;\n}\n```",
        "postTime": 1550653924,
        "uid": 109412,
        "name": "LRL52",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "#### Description\n\n> \u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u521d\u59cb\u4e3a\u7a7a\u3002\u6709 $3$ \u79cd\u64cd\u4f5c\uff1a\n> - \u628a $[l,r]$ \u4e2d\u5728\u96c6\u5408\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002\n> - \u628a $[l,r]$ \u4e2d\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u4ece\u96c6\u5408\u4e2d\u5220\u6389\u3002\n> - \u628a $[l,r]$ \u4e2d\u5728\u96c6\u5408\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\uff0c\u5e76\u628a $[l,r]$ \u4e2d\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u4ece\u96c6\u5408\u4e2d\u5220\u6389\u3002\n>\n> \u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u5728\u96c6\u5408\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6700\u5c0f\u6b63\u6574\u6570\u3002\n\n#### Solution\n\nODT \u88f8\u9898\uff0c\u672c\u7bc7\u9898\u89e3\u5c31\u5f53\u505a ODT \u5165\u95e8\u8bb2\u89e3\u5427\uff08\n\nODT \u7684\u521d\u6b65\u601d\u60f3\u4f7f\u7528 `set` \u7ef4\u62a4\u4e00\u4e9b\u533a\u95f4\uff0c\u9996\u5148\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u6784\u4f53\uff0c\u6ce8\u610f `set` \u80fd\u591f\u5f15\u7528\u7684\u53d8\u91cf\u540d\u662f\u8981\u6709\u5e8f\u7684\uff1a\n\n```cpp\nstruct range {\n\tlong long l; // \u5de6\u754c \n\tlong long r; // \u53f3\u754c \n\tmutable long long v; // \u6027\u8d28 \u533a\u95f4\u4e2d\u7684\u6570\u662f\u5426\u5df2\u5728\u96c6\u5408\u4e2d 0 / 1 \n\tbool operator < (const range& a) const {\n\t\tif (l != a.l) return l < a.l;\n\t\telse return r < a.r;\n\t}\n};\n```\n\n\u91cc\u9762\u7684\u56db\u6837\u4e1c\u897f\u5206\u522b\u662f\uff1a\n\n- $l,r$\uff1a\u533a\u95f4\u7684\u5de6\u53f3\u754c\uff1b\n- $v$\uff1a\u533a\u95f4\u7684\u6027\u8d28\uff0c\u5728\u672c\u9898\u4e2d\u5c31\u662f\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u662f\u5426\u5df2\u5728\u96c6\u5408\u4e2d\uff0c\u6ce8\u610f\u8981\u5728\u524d\u9762\u52a0\u4e00\u4e2a `mutable`\uff0c\u5177\u4f53\u539f\u56e0\u5728\u4e0b\u65b9\u4f1a\u8bf4\u660e\uff1b\n- `<` \u7684\u7279\u6b8a\u58f0\u660e\uff1a\u4f7f\u5f97\u7ed3\u6784\u4f53 `range` \u662f\u6709\u5e8f\u7684\u3002\n \n\u9996\u5148\u6211\u4eec\u5c31\u628a $[1,10^{18}]$ \u8fd9\u4e2a\u533a\u95f4\u63d2\u5165 `set` \u91cc\uff0c\u6027\u8d28 $v=0$\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u672c\u9898\u7684\u4e09\u4e2a\u64cd\u4f5c\u5206\u522b\u8003\u8651\u3002\n\n**\u7b2c\u4e00\u4e2a\u64cd\u4f5c**\n\n\u6211\u4eec\u8fd0\u884c\u5230\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u65f6\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u5c06\u533a\u95f4 $[l,r]$ \u63d2\u5165\uff0c\u5047\u8bbe $[l,r]=[3,15]$\uff0c\u7136\u540e `set` \u4e2d\u539f\u6709\u4e09\u4e2a\u533a\u95f4\u7684 $v=1$\uff0c\u5206\u522b\u662f $[1,4]$\uff0c$[6,8]$\uff0c$[10,17]$\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e09\u4e2a\u533a\u95f4\u5206\u88c2\u4e3a\u4e94\u4e2a $v=1$ \u7684\u533a\u95f4 $[1,2]$\uff0c$\\bf[3,4]$\uff0c$\\bf[6,8]$\uff0c$\\bf[10,15]$\uff0c$[16,17]$\uff0c\u7136\u540e\u5c06\u4e0a\u9762\u52a0\u7c97\u7684\u4e09\u4e2a\u533a\u95f4\u5220\u6389\uff0c\u63d2\u5165 $[3,15]$\uff0c\u7136\u540e\u8fd9\u4e2a\u533a\u95f4\u7684 $v=1$\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\u5177\u4f53\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u5b9e\u73b0\u5728 $p$ \u5904\u5206\u5272\u4e00\u4e0b\uff0c\u5982\u679c $p$ \u521a\u597d\u5728\u4e00\u4e2a\u533a\u95f4 $[L,R]$ \u5185\u90a3\u4e48\u5c31\u5c06\u533a\u95f4 $[L,R]$ \u5206\u5272\u6210 $[L,p-1]$ \u548c $[p,R]$\uff0c$v$ \u7ee7\u627f $[L,R]$ \u7684 $v$\uff0c\u518d\u5c06\u8fd9\u4e24\u4e2a\u533a\u95f4\u63d2\u5165\u5373\u53ef\u3002\n\n\u95ee\u9898\u6765\u4e86\uff0cset \u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\u4e0b\u6807\uff0c\u6211\u4eec\u600e\u4e48\u627e\u5230\u6ee1\u8db3\u8981\u6c42\u7684 $[L,R]$ \u5462\uff1f\u53ef\u4ee5\u4f7f\u7528 `lower_bound` \u67e5\u627e\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5206\u5272\u51fd\u6570 `split` \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u5668\u6307\u5411 $[p,R]$\uff0c\u5728\u4e4b\u540e\u7684\u4ee3\u7801\u91cc\u6709\u5927\u7528\u5904\uff1a\n\n```cpp\nset <range>::iterator split (long long p) {\n\trange tmp;\n\ttmp.l = p, tmp.r = p, tmp.v = 0;\n\tset <range>::iterator it = s.lower_bound(tmp); // \u4e8c\u5206\u67e5\u627e\n\tif (it != s.end() && (*it).l == p) return it; // \u7279\u6b8a\u60c5\u51b5\n\tit--;\n\tlong long l = (*it).l, r = (*it).r, v = (*it).v;\n\ts.erase(it); // \u5220\u6389 [l,r]\n\trange L, R;\n\tL.l = l, L.r = p - 1, L.v = v;\n\tR.l = p, R.r = r, R.v = v;\n\ts.insert(L); // \u63d2\u5165 [l, p - 1]\n\treturn s.insert(R).first; // \u63d2\u5165 [p, r] \u5e76\u8fd4\u56de\u8fed\u4ee3\u5668\n}\n// [l, r] -> [l, p - 1], [p, r]\n```\n\n\u6ce8\u610f\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u8981\u7279\u6b8a\u8003\u8651\uff0c\u6bd4\u5982\u8bf4\u53f3\u754c\u662f `set` \u7684\u53f3\u754c\u7b49\uff0c\u5728\u4e0a\u65b9\u4ee3\u7801\u91cc\u6709\u660e\u786e\u6807\u6ce8\u3002\n\n\u7136\u540e\u6211\u4eec\u8c03\u7528 `split(r + 1)` \u548c `split(l)`\uff08\u8981\u5148\u8c03\u7528 $r+1$ \u518d\u8c03\u7528 $l$\uff0c\u5177\u4f53\u539f\u56e0\u6211\u4e0d\u6e05\u695a\uff0c\u5176\u4ed6\u5de8\u4f6c\u53ef\u80fd\u6709\u8bb2\u89e3\uff1f\uff09\uff0c\u5206\u5272\u540e\u8fd4\u56de\u4e86\u5206\u522b\u4ee5 $l$ \u548c $r+1$ \u4e3a\u5de6\u754c\u7684\u533a\u95f4\u7684\u8fed\u4ee3\u5668 $p,q$\u3002\n\n```cpp\nset <range>::iterator q = split(r + 1);\nset <range>::iterator p = split(l);\n```\n\n\u8981\u5220\u9664\u533a\u95f4 $[l,r]$ \u5185\u7684\u6240\u6709\u5b50\u533a\u95f4\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 `erase(p, q)`\uff0c\u56e0\u4e3a `erase` \u51fd\u6570\u662f\u5de6\u95ed\u53f3\u5f00\u7684\uff0c\u548c\u6211\u4eec\u7684\u76ee\u7684\u76f8\u7b26\u3002\u5220\u9664\u540e\uff0c\u518d\u5c06 $[l,r]$ \u63d2\u5165\u5373\u53ef\uff0c\u63d2\u5165\u65f6 $v=1$\uff0c\u56e0\u4e3a\u5c06\u8981\u5c06\u8fd9\u4e9b\u6570\u52a0\u5165\u96c6\u5408\u3002\n\n```cpp\ns.erase(p, q);\nrange now;\nnow.l = l, now.r = r, now.v = 1;\ns.insert(now);\n```\n\n**\u7b2c\u4e8c\u4e2a\u64cd\u4f5c**\n\n\u4e0e\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u6700\u540e\u63d2\u5165 $[l,r]$ \u65f6 $v=0$\u3002\n\n```cpp\ns.erase(p, q);\nrange now;\nnow.l = l, now.r = r, now.v = 0;\ns.insert(now);\n```\n\n**\u7b2c\u4e09\u4e2a\u64cd\u4f5c**\n\n\u7c7b\u4f3c\u4e8e\u533a\u95f4\u7ffb\u8f6c\uff0c\u53ef\u4ee5\u8003\u8651\u5206\u5272\u4e4b\u540e\u679a\u4e3e\u8fed\u4ee3\u5668 $[p,q)$\uff0c\u76f4\u63a5\u66b4\u529b\u8ba9 $v=1-v$ \u5373\u53ef\u3002\n\n```cpp\nfor (set <range>::iterator it = p; it != q; it++)\n\t(*it).v = 1 - (*it).v;\n```\n\n**\u8f93\u51fa MEX**\n\n\u4e5f\u4e0d\u96be\uff0c\u679a\u4e3e\u6574\u4e2a `set`\uff0c\u7136\u540e\u627e\u5230\u6700\u9760\u5de6\u7684\u4e0d\u5728\u96c6\u5408\u5185\u7684\u533a\u95f4\u7684\u5de6\u754c\u5373\u53ef\u3002\n\n```cpp\nlong long ans = 0;\nfor (set <range>::iterator it = s.begin(); it != s.end(); it++)\n\tif ((*it).v == 0) {\n\t\tans = (*it).l;\n\t\tbreak;\n\t}\n```\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u7528 `set` \u7ef4\u62a4\u7684\u65b9\u5f0f\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u76ee\u3002",
        "postTime": 1626963667,
        "uid": 114914,
        "name": "\u4e00\u53ea\u4e66\u866b\u4ed4",
        "ccfLevel": 4,
        "title": "CF817F \u9898\u89e3"
    },
    {
        "content": "# problem\n- \u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u521d\u59cb\u4e3a\u7a7a\u3002\n- \u6709 $3$ \u79cd\u64cd\u4f5c\uff1a\n    1. \u628a $[l,r]$ \u4e2d\u5728\u96c6\u5408\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002\n    2. \u628a $[l,r]$ \u4e2d\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u4ece\u96c6\u5408\u4e2d\u5220\u6389\u3002\n    3. \u628a $[l,r]$ \u4e2d\u5728\u96c6\u5408\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\uff0c\u5e76\u628a $[l,r]$ \u4e2d\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u4ece\u96c6\u5408\u4e2d\u5220\u6389\u3002\n- \u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u96c6\u5408\u7684 $\\operatorname{MEX}$ \u2014\u2014 \u5728\u96c6\u5408\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6700\u5c0f\u6b63\u6574\u6570\u3002\n- $1\\le n\\le 10^5$\uff0c$1\\le l\\le r\\le 10^{18}$\u3002\n# solution\n\u7ade\u8d5b\u8001\u5e08\u8bf4\u8981\u5b66\u4e60\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\u6240\u4ee5\u8bf4\u6211\u5c31\u5f00\u59cb\u75af\u72c2\u5b66\u4e60\u3002\u4f46\u662f\u8fd9\u662f\u4e2a\u5565\u554a\u3002\n\n~~\u8bd5\u56fe\u653e\u5f03\u3002~~ ~~gg\u662f\u795e~~\n\n\u533a\u95f4\u64cd\u4f5c\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\n\n\u7b2c\u4e00\u6b65\u80af\u5b9a\u662f\u79bb\u6563\u5316\uff0c\u56e0\u4e3a$l,r$\u975e\u5e38\u5927\u3002\n\n\u64cd\u4f5c\u5176\u5b9e\u5f88\u597d\u64cd\u4f5c\uff0c\u5e8f\u5217\u7684\u4fee\u6539\u548c\u7ebf\u6bb5\u6811\u6ca1\u4ec0\u4e48\u5dee\u522b\u3002\n\n\u7136\u540e\u5728\u67e5\u8be2\u4e2d\u4e8c\u5206\u67e5\u8be2\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\u5176\u5b9e\u7279\u522b\u597d\u61c2\u3002\n# thoughts\n\u5176\u5b9e\u8fd9\u4e2a$r$\u52a0\u4e00\u548c\u51cf\u4e00\u662f\u770b\u4e00\u4e2a\u535a\u5ba2\u5199\u7684\u3002\u5e94\u8be5\u662f\u67e5\u8be2\u524d\u9762\u5168\u90fd\u662f1\u7684\u533a\u95f4\u7684\u957f\u5ea6\u3002\n# code\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<map>\nusing namespace std;\nconst long long N=150020;\nmap<long long,long long> mp;\nlong long b[N*4],n,m,cnt;\nstruct ask{\n    long long l,r;\n    long long k;\n}q[N];\nstruct tree{\n    long long l,r,sum,sev,lazy;\n}tr[N*40];\nvoid build(long long l,long long r,long long now){\n    tr[now].l=l;\n    tr[now].r=r;\n    tr[now].lazy=-1;\n    if(l==r)return;\n    long long mid=(l+r)>>1;\n    build(l,mid,now*2);\n    build(mid+1,r,now*2+1);\n}\nvoid pushdown(long long now){\n    long long mid=(tr[now].l+tr[now].r)>>1;\n    if(tr[now].lazy!=-1){\n        tr[now*2].lazy=tr[now*2+1].lazy=tr[now].lazy;\n        tr[now*2].sum=(mid-tr[now].l+1)*tr[now].lazy;\n        tr[now*2+1].sum=(tr[now].r-mid)*tr[now].lazy;\n        tr[now*2].sev=tr[now*2+1].sev=0;\n        tr[now].lazy=-1;\n    }\n    if(tr[now].sev){\n        tr[now*2].sev^=1;\n        tr[now*2+1].sev^=1;\n        tr[now*2].sum=(mid-tr[now].l+1)-tr[now*2].sum;\n        tr[now*2+1].sum=(tr[now].r-mid)-tr[now*2+1].sum;\n        tr[now].sev=0;\n    }\n}\nvoid update(long long l,long long r,long long now,long long k){\n    pushdown(now);\n    if(tr[now].l==l&&tr[now].r==r){\n        tr[now].sum=(tr[now].r-tr[now].l+1)*k;\n        tr[now].lazy=k;\n        tr[now].sev=0;\n        return ;\n    }\n    long long mid=(tr[now].l+tr[now].r)>>1;\n    if(l>mid){\n        update(l,r,now*2+1,k);\n    }\n    else if(r<=mid){\n        update(l,r,now*2,k);\n    }\n    else{\n        update(l,mid,now*2,k);\n        update(mid+1,r,now*2+1,k);\n    }\n    tr[now].sum=tr[now*2].sum+tr[now*2+1].sum;\n}\nvoid serve(long long l,long long r,long long now){\n    pushdown(now);\n    if(tr[now].l==l&&tr[now].r==r){\n        tr[now].sum=(tr[now].r-tr[now].l+1)-tr[now].sum;\n        tr[now].sev^=1;\n        return;\n    }\n    long long mid=(tr[now].l+tr[now].r)>>1;\n    if(l>mid)serve(l,r,now*2+1);\n    else if(r<=mid)serve(l,r,now*2);\n    else{\n        serve(l,mid,now*2);\n        serve(mid+1,r,now*2+1);\n    }\n    tr[now].sum=tr[now*2].sum+tr[now*2+1].sum;\n}\nvoid check(long long now){\n    if(tr[now].l==tr[now].r){\n        printf(\"%lld\\n\",b[tr[now].l]);\n        return ;\n    }\n    long long mid=(tr[now].l+tr[now].r)>>1;\n    pushdown(now);\n    if(tr[now*2].sum<mid-tr[now].l+1)check(now*2);\n    else return check(now*2+1);\n}\nint main(){\n    scanf(\"%lld\",&m);\n    for(long long i=1;i<=m;i++){\n        scanf(\"%lld%lld%lld\",&q[i].k,&q[i].l,&q[i].r);\n        q[i].r++;\n        b[++cnt]=q[i].l;\n        b[++cnt]=q[i].r;\n    }\n    b[++cnt]=1;\n    sort(b+1,b+1+cnt);\n    n=unique(b+1,b+1+cnt)-(b+1);\n    for(long long i=1;i<=n;i++){\n        mp[b[i]]=i;\n    }\n    build(1,n,1);\n    for(long long i=1;i<=m;i++){\n        if(q[i].k==1){\n            update(mp[q[i].l],mp[q[i].r]-1,1,1);\n        }\n        else if(q[i].k==2){\n            update(mp[q[i].l],mp[q[i].r]-1,1,0);\n        }\n        else{\n            serve(mp[q[i].l],mp[q[i].r]-1,1);\n        }\n        check(1);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1603780002,
        "uid": 141683,
        "name": "liuziwen0224",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "[$\\Large{\\texttt{CF817F}}$](https://www.luogu.com.cn/problem/CF817F)\n\n\u9898\u76ee\u8c03\u4e86\u597d\u4e45\uff0c\u53d1\u7247\u9898\u89e3\u7eaa\u5ff5\u4e0bQwQ\n\n\u7b97\u6cd5\uff1a\u7ebf\u6bb5\u6811+\u79bb\u6563\u5316\n\n---\n\n$\\Large\\texttt{Meaning}$\n\n\uff08\u9898\u610f\u7565\u6709\u6539\u52a8\uff09\n\n\u5171\u6709 $n$ \u4e2a\u64cd\u4f5c\uff0c\u4e00\u4e2a\u533a\u95f4\uff08\u521d\u59cb\u5168\u4e3a $0$ \uff09\uff0c\u5171\u4e09\u79cd\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n$1.$ \u5c06 $[l,r]$ \u533a\u95f4\u8d4b\u503c\u4e3a $1$ \u3002\n\n$2.$ \u5c06 $[l,r]$ \u533a\u95f4\u8d4b\u503c\u4e3a $0$ \u3002\n\n$3.$ \u5c06 $[l,r]$ \u533a\u95f4\u7684\u6570\u53d6\u53cd\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u540e\u95ee\u6700\u5c0f\u7684\u6b63\u6574\u6570 $x$ \u4e14 $a_x$ \u4e3a $0$ \u3002\n\n$1\\le l,r\\le 10^{18}$\n\n---\n\n$\\Large\\texttt{Solution}$\n\n\u533a\u95f4\u4fee\u6539\uff0c\u67e5\u8be2\uff0c\u9996\u5148\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u5efa\u4e00\u4e2a $10^{18}$ \u91cf\u7ea7\u7684\u7ebf\u6bb5\u6811\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u663e\u7136\u4e0d\u5408\u7406\u3002\n\n\u4f46\u662f\u53d1\u73b0 $n$ \u7684\u8303\u56f4\u5f88\u5c0f\uff0c\u6bcf\u6b21\u4fee\u6539\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u9876\u591a\u4e5f\u53ea\u6709$2*10^{5}$\uff0c\u6240\u4ee5~~\u5957\u8def~~\u5c06\u6570\u636e\u79bb\u7ebf\u4e0b\u6765\u8fdb\u884c\u79bb\u6563\u5316\u5904\u7406\uff0c\u5c06\u6bcf\u4e2a\u7aef\u70b9\u6392\u5e8f\u518d\u4f9d\u6b21\u6807\u53f7\uff0c\u7528\u6570\u7ec4\u50a8\u5b58\u3002\n\n\u7136\u540e\u7684\u64cd\u4f5c\u548c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\uff0c\u5728\u7ebf\u6bb5\u6570\u4e2d\u5bf9\u6bcf\u4e00\u6bb5\u533a\u95f4\u5b58\u50a8\u4e24\u4e2a\u53d8\u91cf( $p_0$ \uff1a\u533a\u95f4\u4e2d\u662f\u5426\u6709 $0$ \uff0c $p_1$ \uff1a\u533a\u95f4\u4e2d\u662f\u5426\u6709 $1$ )\u3002\n\n\u64cd\u4f5c\u4e00\uff1a$p_0$ \u8d4b\u503c\u4e3a $0$ \uff0c $p_1$ \u8d4b\u503c\u4e3a $1$ \u3002\n\n\u64cd\u4f5c\u4e8c\uff1a$p_0$ \u8d4b\u503c\u4e3a $0$ \uff0c $p_1$ \u8d4b\u503c\u4e3a $1$ \u3002\n\n\u64cd\u4f5c\u4e09\uff1a\u4ea4\u6362 $p_0$ \u548c $p_1$ \u3002\n\n\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff08\u8fd9\u91cc\u6211\u5361\u4e86\u597d\u4e45\uff09\uff0c $\\texttt{push\\_down}$ \u7684\u64cd\u4f5c\u4e2d\uff0c\u5bf9\u4e8e\u8981\u4e0b\u4f20\u7684\u6807\u8bb0\u4e3a3\u65f6\uff0c\u82e5\u513f\u5b50\u8282\u70b9\u7684\u61d2\u6807\u8bb0\u8fd8\u6ca1\u6709\u4e0b\u4f20\uff0c\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8986\u76d6\u7684\uff0c\u539f\u56e0\u663e\u7136\u3002\n\n\u53ef\u662f\u61d2\u6807\u8bb0\u7684\u7279\u70b9\u5c31\u662f \u201c\u61d2\u201d \uff0c\u4e0d\u53ef\u80fd\u8ba9\u64cd\u4f5c\u4e00\u76f4\u9012\u5f52\u4e0b\u53bb\u5427\u3002\n\n\u6240\u4ee5\u5bf9\u6b64\u9700\u8981\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u82e5\u4e0b\u4f20\u7684\u64cd\u4f5c\u662f $1$ \u6216 $2$ \uff1a\u53ef\u4ee5\u76f4\u63a5\u8986\u76d6\u61d2\u6807\u8bb0\uff0c\u56e0\u4e3a\u8fd9\u6b21\u64cd\u4f5c\u4f1a\u5c06\u6574\u4e2a\u533a\u95f4\u90fd\u8d4b\u503c\u4e3a $0$ \u6216 $1$ \uff0c\u548c\u4e4b\u524d\u7684\u64cd\u4f5c\u65e0\u5173\u3002\n\n\u82e5\u4e0b\u4f20\u7684\u64cd\u4f5c\u662f $3$ \uff1a\u90a3\u4e48\u5982\u679c\u61d2\u6807\u8bb0\u4e3a $3$ \uff0c\u53ef\u4ee5\u76f4\u63a5\u6d88\u9664\u61d2\u6807\u8bb0\uff0c\u53d6\u53cd $+$ \u53d6\u53cd $=$ \u4e0d\u53d8\u3002\n\n\u82e5\u4e0b\u4f20\u7684\u64cd\u4f5c\u662f $3$ \uff1a\u5982\u679c\u61d2\u6807\u8bb0\u4e3a $1$ \uff0c\u5219\u5c31\u6539\u61d2\u6807\u8bb0\u4e3a $2$ \uff0c\u5982\u679c\u61d2\u6807\u8bb0\u4e3a $2$ \uff0c\u5219\u5c31\u6539\u61d2\u6807\u8bb0\u4e3a $1$ \uff0c\u8986\u76d6( $1/0$ )+\u53d6\u53cd=\u8986\u76d6( $0/1$ ) \uff08\u8fd9\u4e2a\u64cd\u4f5c\u4ee3\u7801\u4e2d\u672a\u4f53\u73b0 ~~\u5176\u5b9e\u662f\u6211\u61d2\u7684\u5199~~\uff09\u3002\n\n---\n\n$\\Large\\texttt{Code}$\n\n\u4ee3\u7801\u7ec6\u8282\u8fd8\u662f\u633a\u591a\u7684\uff0c\u8bf7\u7ec6\u7ec6\u770b\uff08\u7801\u98ce\u5e94\u8be5\u53ef\u4ee5\u4ee4\u4eba\u63a5\u53d7QwQ\uff09\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(1)\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")\n#include <immintrin.h>\n#include <emmintrin.h>\n//qqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzkqqzk\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <bits/stdc++.h>\nusing namespace std;\n\n// #define PB push_back\n// #define MP make_pair\n#define ls now << 1\n#define rs now << 1 | 1\n// #define int long long\n// #define us unsigned\n#define LL long long\nconst int N = 1e5;\n// const int N = 4e5;\n// #define re register\n// const int mod = 1e9 + 7;\n// const int inf = 0x7fffffff;\n// char buf[(int)1e8], *ss = buf;\n// inline int INIT()\n// {\n//     buf[fread(buf, 1, (int)1e8 - 1, stdin)] = '\\n';\n//     fclose(stdin);\n//     return 0;\n// }\n// const int __START__ = INIT();\n\ninline char nc()\n{\n    static const int BS = 1 << 22;\n    static unsigned char buf[BS], *st, *ed;\n    if (st == ed)\n        ed = buf + fread(st = buf, 1, BS, stdin);\n    return st == ed ? EOF : *st++;\n}\n//#define nc getchar\ninline LL read()\n{\n    char ch;\n    LL res = 0;\n    bool flag = 0;\n    while (!isdigit(ch = nc()))\n        ;\n    while (ch >= '0' and ch <= '9')\n    {\n        res = (res << 1) + (res << 3) + (ch - '0');\n        ch = nc();\n    }\n    return res;\n}\n\nint a, top, id;\nLL p[(N << 5) + 10];\nmap<LL, int> st;\nstruct node\n{\n    int opt;\n    LL l, r;\n} s[(N << 5) + 10];\nstruct S\n{\n    int l, r, lazy;\n    bool p0, p1, qq;\n} m[(N << 5) + 10];\n\ninline void up(int now)\n{\n    m[now].p0 = m[ls].p0 | m[rs].p0;\n    m[now].p1 = m[ls].p1 | m[rs].p1;\n}\n\ninline void down(int now)\n{\n    if (!m[now].lazy || m[now].qq)\n        return;\n    if (m[now].lazy == 1)\n    {\n        m[ls].p0 = m[rs].p0 = 0;\n        m[ls].p1 = m[rs].p1 = 1;\n    }\n    else if (m[now].lazy == 2)\n    {\n        m[ls].p0 = m[rs].p0 = 1;\n        m[ls].p1 = m[rs].p1 = 0;\n    }\n    else\n    {\n        if (m[ls].lazy)\n            down(ls);\n        if (m[rs].lazy)\n            down(rs);\n        swap(m[ls].p0, m[ls].p1);\n        swap(m[rs].p0, m[rs].p1);\n    }\n    m[ls].lazy = m[rs].lazy = m[now].lazy;\n    m[now].lazy = 0;\n}\n\ninline void build(int now, int l, int r)\n{\n    m[now].l = l;\n    m[now].r = r;\n    if (l == r)\n    {\n        m[now].p0 = 1;\n        m[now].p1 = 0;\n        m[now].qq = 1;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(ls, l, mid);\n    build(rs, mid + 1, r);\n    up(now);\n    return;\n}\n\ninline void add(int now, int l, int r, int k)\n{\n    if (m[now].l >= l && m[now].r <= r)\n    {\n        if (k == 1)\n        {\n            m[now].p0 = 0;\n            m[now].p1 = 1;\n        }\n        else if (k == 2)\n        {\n            m[now].p0 = 1;\n            m[now].p1 = 0;\n        }\n        else\n        {\n            swap(m[now].p0, m[now].p1);\n        }\n        if (k == 1 || k == 2)\n            m[now].lazy = k;\n        else if (k == 3 && m[now].lazy == 3)\n            m[now].lazy = 0;\n        else\n        {\n            down(now);\n            m[now].lazy = k;\n        }\n        return;\n    }\n    down(now);\n    int mid = (m[now].l + m[now].r) >> 1;\n    if (l <= mid)\n        add(ls, l, r, k);\n    if (mid < r)\n        add(rs, l, r, k);\n    up(now);\n}\n\ninline int query(int now, int l, int r)\n{\n    if (m[now].r < l || m[now].l > r || m[now].p0 == 0)\n        return -1;\n    if (m[now].p0 == 1 && m[now].p1 == 0)\n        return m[now].l;\n    down(now);\n    int mid = (m[now].l + m[now].r) >> 1;\n    int k = query(ls, l, r);\n    if (k != -1)\n        return k;\n    return query(rs, l, r);\n}\n\nsigned main()\n{\n    a = read();\n    for (int i = 1; i <= a; i++)\n    {\n        s[i].opt = read();\n        s[i].l = read();\n        s[i].r = read();\n        if (s[i].l != 1)\n            p[++top] = s[i].l - 1;\n        p[++top] = s[i].l;\n        p[++top] = s[i].l + 1;\n        if (s[i].r != 1)\n            p[++top] = s[i].r - 1;\n        p[++top] = s[i].r;\n        p[++top] = s[i].r + 1;\n    }\n    p[++top] = 1;\n    sort(p + 1, p + top + 1);\n    int k = unique(p + 1, p + top + 1) - p - 1;\n    build(1, 1, k);\n    for (int i = 1; i <= k; i++)\n        st[p[i]] = i;\n    // cout << st[2] << ' ' << st[10];\n    for (int i = 1; i <= a; i++)\n    {\n        add(1, st[s[i].l], st[s[i].r], s[i].opt);\n        // for (int i = 1; m[i].l; i++)\n        //     cout << i << ' ' << m[i].l << ' ' << m[i].r << ' ' << m[i].p0 << ' ' << m[i].p1 << ' ' << m[i].lazy << endl;\n        printf(\"%lld\\n\", p[query(1, 1, k)]);\n    }\n    return 0;\n}\n```\n\n[$\\large\\texttt{My Blog}$](https://www.luogu.com.cn/blog/184549/)",
        "postTime": 1595913836,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "\u6211\u5bfb\u601d\u7740\u524d\u6392\u7684**sto LRL52 orz**\u90fd\u505a\u4e86\uff0c\u6211\u4e5f\u8be5\u8bd5\u7740\u505a\u4e00\u4e0b......\n\n\u7136\u548c\uff0c\u55ef\uff0c\u5f88\u660e\u663e\u662f\u79bb\u6563\u5316\u548c\u7ebf\u6bb5\u6811\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a\u61d2\u6807\u8bb0\u597d\u7ef4\u62a4\uff0c\u5f02\u6216\u6807\u8bb0\u600e\u4e48\u529e\uff1f\n\n\u4f5c\u4e3a\u4e00\u4e2a\u5927\u849f\u84bb\uff0c\u6211\u4e00\u70b9\u90fd\u4e0d\u8ba4\u4e3a\u6211\u80fd\u60f3\u601d\u8def\u6e05\u5947\u7684LRL\u4e00\u6837\u540c\u65f6\u7ef4\u62a4\u4e24\u4e2a\u53ef\u80fd\u76f8\u4e92\u51b2\u7a81\u7684\u6807\u8bb0\u554a......\n\n\u60f3\u4e86\u4e00\u60f3\uff0c\u6211\u51b3\u5b9a\uff0c**\u53ea\u7ef4\u62a4\u4e00\u4e2a\u61d2\u6807\u8bb0\uff0c\u5f02\u6216\u64cd\u4f5c\u65f6\u76f4\u63a5\u627e\u5230\u5b58\u5728\u7684\u61d2\u6807\u8bb0\u4fee\u6539**\uff01\n\n\u597d\u7684\u6253\u51fa\u6765\u6ca1\u8fc7\uff0c\u770b\u4e86CF\u7684\u6570\u636e\u4e00\u53e3\u8001\u8840\uff1a\u6211\u5fd8\u4e86\u7279\u5224\u53f3\u533a\u95f4+1\u662f\u7b2c\u4e00\u4e2a0\u7684\u60c5\u51b5\u4e86\uff01\n\n\u601d\u8003\u4e86\u4e00\u4e0b\u4eba\u751f\uff0c\u6211\u8dd1\u53bb\u5ad6\u4e86LRL\u7684\u667a\u6167\uff1a**\u79bb\u6563\u5316\u7684\u65f6\u5019\u628a\u53f3\u533a\u95f4+1\u4e5f\u63d2\u8fdb\u53bb**\n\n```cpp\nfor(long long i=1;i<=N;i++){\n\t\tcin>>cmd[i]>>l[i]>>r[i];\n\t\tlsh[++cnt]=l[i];lsh[++cnt]=r[i];lsh[++cnt]=r[i]+1;\n\t}\n```\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n\u597d\u4e86\u4e8e\u662f\u5c31\u505a\u51fa\u6765\u4e86\uff08\u5509\u6211\u592a\u83dc\u4e86\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long maxn=400005;\nlong long N,cnt,sum[maxn<<2],lz[maxn<<2],cmd[maxn],l[maxn>>1],r[maxn>>1],lsh[maxn];\n\nvoid pushdown(long long L,long long R,long long id){\n    if(lz[id]==-1)return;\n    long long M=L+R>>1;\n    lz[id<<1]=lz[id<<1|1]=lz[id];\n    sum[id<<1]=lz[id]*(M-L+1);\n    sum[id<<1|1]=lz[id]*(R-M);\n    lz[id]=-1;\n}\n\nvoid change(long long x,long long y,long long L,long long R,long long id,long long k){\n    if(x<=L&&R<=y){\n        lz[id]=k;sum[id]=(R-L+1)*k;return;\n    }\n    pushdown(L,R,id);\n    long long M=(L+R)>>1;\n    if(x<=M)change(x,y,L,M,id<<1,k);\n    if(y>M)change(x,y,M+1,R,id<<1|1,k);\n    sum[id]=sum[id<<1]+sum[id<<1|1];\n}\n\nvoid rotate(long long x,long long y,long long L,long long R,long long id){\n    if(x<=L&&R<=y&&lz[id]!=-1){\n        lz[id]^=1;sum[id]=R-L+1-sum[id];return;\n    }\n    pushdown(L,R,id);\n    long long M=(L+R)>>1;\n    if(x<=M)rotate(x,y,L,M,id<<1);\n    if(y>M)rotate(x,y,M+1,R,id<<1|1);\n    sum[id]=sum[id<<1]+sum[id<<1|1];\n}\n\nlong long query(long long L,long long R,long long id){\n    if(L==R)return L;\n    long long M=L+R>>1;\n    pushdown(L,R,id);\n    if(sum[id<<1]<M-L+1)return query(L,M,id<<1);\n    else return query(M+1,R,id<<1|1);\n}\n\nvoid build(long long L,long long R,long long id){\n    if(L==R){\n        lz[id]=0;\n        return;\n    }\n    long long M=L+R>>1;\n    build(L,M,id<<1);\n    build(M+1,R,id<<1|1);\n}\n\nint main(){\n    //freopen(\"in.txt\",\"r\",stdin);\n    memset(lz,-1,sizeof(lz));\n    cin>>N;\n    lsh[++cnt]=1;\n    for(long long i=1;i<=N;i++){\n        cin>>cmd[i]>>l[i]>>r[i];\n        lsh[++cnt]=l[i];lsh[++cnt]=r[i];lsh[++cnt]=r[i]+1;\n    }\n    sort(lsh+1,lsh+cnt+1);\n    long long len=unique(lsh+1,lsh+cnt+1)-lsh-1;\n    build(1,len,1);\n    for(long long i=1;i<=N;i++){\n        long long x=lower_bound(lsh+1,lsh+len+1,l[i])-lsh;\n        long long y=lower_bound(lsh+1,lsh+len+1,r[i])-lsh;\n        if(cmd[i]==1)change(x,y,1,len,1,1);\n        else if(cmd[i]==2)change(x,y,1,len,1,0);\n        else if(cmd[i]==3)rotate(x,y,1,len,1);\n        printf(\"%lld\\n\",lsh[query(1,len,1)]);\n    }\n    return 0;\n}\n```\n\u522b\u95ee\u6211\u4e3a\u5565\u79bb\u6563\u5316\u7684\u65b9\u5f0f\u90fd\u4e00\u6837\u2014\u2014\u6bd5\u7adf\u540c\u4e00\u4e2a\u8001\u5e08\u6559\u7684\u554a\uff08\u9003\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u4f1a\u5927\u4e00\u70b9\uff0c\u4f46\u662f\u597d\u7406\u89e3\u554a\uff08\u7b11\uff09\n\n\u554a\uff0c\u8bf4\u6211luogu\u4e0a\u6ca1\u8fc7\uff1f\uff1f\nunknown error\u4ea4\u4e0d\u8fc7\u53bb\u6211\u4e5f\u5f88\u7edd\u671b\u554a",
        "postTime": 1553936422,
        "uid": 109396,
        "name": "Uniecho1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "\u867d\u7136\u533a\u95f4\u8303\u56f4\u5f88\u5927\uff0c\u4f46\u662f\u6211\u4eec\u89c2\u5bdf\u5230\u6709\u6548\u7684\u53ea\u6709 $O(n)$ \u4e2a\uff0c\u90a3\u4e48\u53ef\u4ee5\u5047\u8bbe $l,r$ \u7684\u8303\u56f4\u53ea\u6709 $2n$\uff0c\u7136\u540e\u641e\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u6216\u8005\u79bb\u6563\u5316\u4e0b\u5c31\u968f\u610f\u4e86\u3002\n\n\u90a3\u4e48\u7ef4\u62a4\u8ba1\u6570\u5668\u53ef\u77e5 $1,2$ \u64cd\u4f5c\u5c31\u662f\u533a\u95f4\u8986\u76d6\uff0c$3$ \u64cd\u4f5c\u662f\u533a\u95f4 $\\oplus$\uff0c\u6253\u4e0a\u4e24\u4e2a\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8be2\u95ee\u64cd\u4f5c\u5c31\u662f\u627e\u51fa $\\min\\{x|c_1=\\dots =c_x=1\\}$\uff0c\u90a3\u4e48\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002",
        "postTime": 1637944362,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "CF817F"
    },
    {
        "content": "\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n\u8003\u573a\u4e0aA\u4e86\u8fd9\u9053\u9898\u7136\u800c\u7531\u4e8e\u5185\u5b58\u5f00\u5927MLE\n\n\u4e00\u773c\u90fd\u80fd\u770b\u51fa\u6765\u662f\u4e2a\u6570\u636e\u7ed3\u6784\u9898\n\n\u6211\u9009\u62e9\u7ebf\u6bb5\u6811\uff01\n\n\u89e3\u51b3\u8fd9\u9053\u9898\u7684\u5173\u952e\u662f\u61d2\u6807\u8bb0\u7684\u53e0\u52a0\u548c\u4e0b\u4f20\u8fc7\u7a0b\n\n\u6211\u4e00\u5f00\u59cb\u7ef4\u62a4\u7684\u662f\u533a\u95f4\u5185\u6700\u5de6\u8fb91\u548c\u6700\u5de6\u8fb90\u7684\u4f4d\u7f6e\n\n\u540e\u6765\u53d1\u73b0\u6807\u8bb0\u6ca1\u529e\u6cd5\u4e0b\u4f20\u66f4\u6539\n\n\u6240\u4ee5\u7ef4\u62a40\u548c1\u7684\u4e2a\u6570\n\n\u67e5\u8be2\u65f6\u5019\u5c0f\u8d2a\u5fc3\u4e00\u4e0b\u4f18\u5148\u5f80\u5de6\u8fb9\u67e5\u8be2\n\n### \u6807\u8bb0\u5904\u7406\uff1a\n\n\u5bf9\u4e8e\u8981\u7ef4\u62a4\u7684\u533a\u95f4 \u5047\u5982\u4f20\u7684\u6807\u8bb0\u4e3a0\u62161\n\n\u90a3\u4e48\u76f4\u63a5\u8986\u76d6\u6389\u4e4b\u524d\u7684 \u7136\u540e\u66f4\u65b0\n\n\u5982\u679c\u4f20\u7684\u6807\u8bb0\u662f\u5f02\u6216\u6807\u8bb0\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8003\u8651\u5982\u679c\u4e0a\u4e2a\u6807\u8bb0\u662f\u5f02\u6216\n\n\u6211\u4eec\u518d\u6b21\u4ea4\u63620 1\u7684\u4e2a\u6570\n\n\u5982\u679c\u662f1 \u90a3\u5c31\u76f8\u5f53\u4e8e\u5168\u90e8\u53d8\u62100 \u6240\u4ee5\u6807\u8bb0\u53d8\u62100\n\n0\u4e5f\u540c\u7406\n\n\u90a3\u4e48\u6211\u4eec\u5728\u66f4\u65b0\u65f6\u5019\u5206\u7c7b\u8ba8\u8bba\n\n\u7136\u540epushdown\u5927\u529b\u5206\u5de6\u53f3\u513f\u5b50\u8ba8\u8bba\n\n### \u5173\u4e8e\u79bb\u6563\u5316\uff1a\n\nr\u6700\u5927\u5230\u4e861E18\n\n\u90a3\u4e48\u6211\u4eec\u79bb\u6563\u5316\u4ec0\u4e48?\n\n\u64cd\u4f5c\u533a\u95f4 \n\n\u6211\u4eec\u8003\u8651\u4e00\u6b21\u64cd\u4f5c\u65e0\u975e\u5c31\u662f01\u53d8\u5316\n\n\u7b54\u6848\u53ef\u80fd\u662f\u5de6\u7aef\u70b9 \u53f3\u7aef\u70b9 \u5de6\u7aef\u70b9-1 \u53f3\u7aef\u70b9+1\n\n\u4ee5\u53ca 1\n\n\u79bb\u6563\u5316\u6620\u5c04\u4e0b\u5373\u53ef\n\n\u6211\u559c\u6b22\u7ed3\u6784\u4f53\u7684\u7ebf\u6bb5\u6811\uff01\uff01\u4f20\u53c2\u5c11\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=2e6+10;\nconst int INF =1e15;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nstruct node{\n\tint l,r,tag,id0,id1,siz;\n}tree[N];\nstruct NODE{\n\tint l,r,op;\n}query[N];\nint m,n,L[N];\ninline int ls(int x){return x<<1;}\ninline int rs(int x){return x<<1|1;}\ninline void upd(int p){\n\ttree[p].id0=tree[ls(p)].id0+tree[rs(p)].id0;\n\ttree[p].id1=tree[ls(p)].id1+tree[rs(p)].id1;\n}\ninline void build(int l,int r,int p){\n\ttree[p].l=l,tree[p].r=r,tree[p].id0=r-l+1,tree[p].id1=0;\n\ttree[p].tag=-1;\n\ttree[p].siz=r-l+1;\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,ls(p));\n\tbuild(mid+1,r,rs(p));\n\tupd(p);\n}\ninline void pushdown(int p){\n\tif(tree[p].tag==-1){\n\t\treturn ;\n\t}\n\tint tag=tree[p].tag;\n\tif(tag==1){\n\t\ttree[ls(p)].tag=tree[rs(p)].tag=1;\n\t\ttree[ls(p)].id0=0;\n\t\ttree[ls(p)].id1=tree[ls(p)].siz;\n\t\ttree[rs(p)].id0=0;\n\t\ttree[rs(p)].id1=tree[rs(p)].siz;\n\t\t\ttree[p].tag=-1;\n\t}else if(tag==0){\n\t\ttree[ls(p)].tag=tree[rs(p)].tag=0;\n\t\ttree[ls(p)].id1=0;\n\t\ttree[ls(p)].id0=tree[ls(p)].siz;\n\t\ttree[rs(p)].id1=0;\n\t\ttree[rs(p)].id0=tree[rs(p)].siz;\n\t\ttree[p].tag=-1;\n\t}else {\n\t\tif(tree[ls(p)].tag==2){\n\t\tswap(tree[ls(p)].id1,tree[ls(p)].id0);\n\t\ttree[ls(p)].tag=-1;\n\t\t}else {\n\t\t\tif(tree[ls(p)].tag==-1){\n\t\t\t\tswap(tree[ls(p)].id1,tree[ls(p)].id0);\n\t\t\t\ttree[ls(p)].tag=2;\n\t\t\t}else if(tree[ls(p)].tag==0){\n\t\t\t\ttree[ls(p)].tag=1;\n\t\t\t\ttree[ls(p)].id0=0;\n\t\t\t\ttree[ls(p)].id1=tree[ls(p)].siz;\n\t\t\t}else if(tree[ls(p)].tag==1){\n\t\t\t\ttree[ls(p)].tag=0;\n\t\t\t\ttree[ls(p)].id1=0;\n\t\t\t\ttree[ls(p)].id0=tree[ls(p)].siz;\n\t\t\t}\n\t\t}\n\t\tif(tree[rs(p)].tag==2){\n\t\tswap(tree[rs(p)].id1,tree[rs(p)].id0);\n\t\ttree[rs(p)].tag=-1;\n\t\t}else {\n\t\t\tif(tree[rs(p)].tag==-1){\n\t\t\t\tswap(tree[rs(p)].id1,tree[rs(p)].id0);\n\t\t\t\ttree[rs(p)].tag=2;\n\t\t\t}else if(tree[rs(p)].tag==0){\n\t\t\t\ttree[rs(p)].tag=1;\n\t\t\t\ttree[rs(p)].id0=0;\n\t\t\t\ttree[rs(p)].id1=tree[rs(p)].siz;\n\t\t\t}else if(tree[rs(p)].tag==1){\n\t\t\t\ttree[rs(p)].tag=0;\n\t\t\t\ttree[rs(p)].id1=0;\n\t\t\t\ttree[rs(p)].id0=tree[rs(p)].siz;\n\t\t\t}\n\t\t}\n\t\t\ttree[p].tag=-1;\n\t}\n}\ninline void change(int l,int r,int p,int fl){\n\tif(tree[p].l>=l&&tree[p].r<=r){\n\t\tif(fl==0){\n\t\t\ttree[p].id0=tree[p].siz;\n\t\t\ttree[p].id1=0;\n\t\t\ttree[p].tag=0;\n\t\t\treturn;\n\t\t}\t\n\t\tif(fl==1){\n\t\t\ttree[p].id0=0;\n\t\t\ttree[p].id1=tree[p].siz;\n\t\t\ttree[p].tag=1;\n\t\t}\t\n\t\treturn ;\n\t}\n\tpushdown(p);\n\tint mid=(tree[p].l+tree[p].r)>>1;\n\tif(l<=mid){\n\t\tchange(l,r,ls(p),fl);\n\t}\n\tif(r>mid){\n\t\tchange(l,r,rs(p),fl);\n\t}\n\tupd(p);\n}\ninline int ask(int l,int r,int p){\n\tif(l==r){\n\t\treturn l;\n\t}\n\tpushdown(p);\n\tint mid=(l+r)>>1;\n\tif(tree[ls(p)].id0){\n\t\treturn ask(l,mid,ls(p));\n\t}else return ask(mid+1,r,rs(p));\n}\ninline void change1(int l,int r,int p){\n\tif(tree[p].l>=l&&tree[p].r<=r){\n\t\tif(tree[p].tag==-1){\n\t\t\tswap(tree[p].id0,tree[p].id1);\n\t\t\ttree[p].tag=2;\n\t\t}else if(tree[p].tag==0){\n\t\t\ttree[p].tag=1;\n\t\t\ttree[p].id1=tree[p].siz;\n\t\t\ttree[p].id0=0;\n\t\t}else if(tree[p].tag==1){\n\t\t\ttree[p].tag=0;\n\t\t\ttree[p].id1=0;\n\t\t\ttree[p].id0=tree[p].siz;\n\t\t}else{\n\t\t\ttree[p].tag=-1;\n\t\t\tswap(tree[p].id0,tree[p].id1);\n\t\t}\n\t\treturn;\n\t}\n\tpushdown(p);\n\tint mid=(tree[p].l+tree[p].r)>>1;\n\tif(l<=mid){\n\t\tchange1(l,r,ls(p));\t\n\t}\n\tif(r>mid){\n\t\tchange1(l,r,rs(p));\n\t}\n\tupd(p);\n}\nsigned main(){\n//\tfreopen(\"a.in\",\"r\",stdin);\n//\tfreopen(\"a.out\",\"w\",stdout);\n\tm=read();\n\tfor(int i=1;i<=m;i++){\n\t\tquery[i].op=read();\n\t\tquery[i].l=read(),query[i].r=read();\n\t\tL[++n]=query[i].l,L[++n]=query[i].r,L[++n]=max(1ll,query[i].l-1);\n\t\tL[++n]=query[i].r+1;\n\t}\n\tL[++n]=1;\n\tsort(L+1,L+n+1);\n\tn=unique(L+1,L+n+1)-L-1;\n\tbuild(1,n,1);\n\tfor(int i=1;i<=m;i++){\n\t\tint l=query[i].l,r=query[i].r,op=query[i].op;\n\t\tint ans=0;\n\t\tint ql=lower_bound(L+1,L+n+1,l)-L;\n\t\tint qr=lower_bound(L+1,L+n+1,r)-L;\n\t\tif(op==1){\n\t\t\tchange(ql,qr,1,1);\n\t\t\tprintf(\"%lld\\n\",L[ask(1,n,1)]);\n\t\t}\n\t\tif(op==2){\n\t\t\tchange(ql,qr,1,0);\n\t\t\tprintf(\"%lld\\n\",L[ask(1,n,1)]);\n\t\t}\n\t\tif(op==3){\n\t\t\tchange1(ql,qr,1);\n\t\t\tprintf(\"%lld\\n\",L[ask(1,n,1)]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566357999,
        "uid": 142373,
        "name": "Kendrick_Z",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684 $mex$ \u5148\u8ba9\u6211\u60f3\u5230\u7684\u662f~~\u503c\u57df\u5206\u5757~~\u3002\n\n# Solution\n\n\u8fd9\u9898\u7528\u503c\u57df\u5206\u5757\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u8003\u573a\u4e0a\u4e0d\u60f3\u88ab\u5361\uff0c\u4e8e\u662f\u6211\u6253\u4e86\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u4e00\u3001\u4e8c\u64cd\u4f5c\u53ca\u7b49\u540c\u4e8e\u5728\u503c\u57df\u4e0a\u533a\u95f4\u8d4b $1/0$\uff0c\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u770b\u6210\u533a\u95f4\u53d6\u53cd\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u4e4b\u53ea\u6709\u53ef\u80fd\u662f $1/0$\uff0c\u6240\u4ee5\u53d6\u53cd\u65f6\u53ef\u4ee5 $O(1)$ \u5f97\u5230\u8ba1\u7b97\u540e\u7684\u503c\uff0c\u8fd9\u91cc\u5c31\u662f\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u540e\u8bb2\u8bb2\u6bd4\u8f83\u5173\u952e\u7684\u4e00\u4e2a\u70b9\uff1a\u61d2\u60f0\u6807\u8bb0\u7684\u4e0b\u4f20\u3002\n\n\u8fd9\u9898\u7684\u8d4b\u503c\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u8986\u76d6\uff08\u56e0\u4e3a\u64cd\u4f5c\u5f88\u201c\u66b4\u529b\u201d\uff09\uff0c\u53d6\u53cd\u65f6\u8981\u8003\u8651\u539f\u6709\u7684\u61d2\u6807\uff0c\u5982\u679c\u662f\u533a\u95f4\u8d4b\u503c\u7684\u61d2\u6807\u5c31\u641e\u6210\u53e6\u5916\u4e00\u79cd\u533a\u95f4\u8d4b\u503c\uff08$1$ \u6539\u6210 $0$\uff0c$0$ \u6539\u6210 $1$\uff09\uff0c\u5982\u679c\u672c\u8eab\u662f\u53d6\u53cd\u7684\u6807\u8bb0\u7684\u8bdd\u5c31\u6539\u6210\u65e0\u6807\u8bb0\u7684\u72b6\u6001\u3002\n\n\u8d34\u4e00\u4e2a\u4e11\u964b\u81f3\u6781\u7684\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\ntemplate<typename zqw>void qr(zqw &x){\n\tbool f=x=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\tx=f?~(x-1):x;\n\treturn ;\n}\nint n,opt[800005],l[800005],r[800005],flag[800005],top,tot;\nstruct node{\n\tint l,r,lc,rc,sum,tag;\n}tr[10000005];\nvoid build(int l,int r,int p){\n\ttr[p].lc=p<<1,tr[p].rc=p<<1|1;\n\ttr[p].l=l,tr[p].r=r;\n\tif(l==r){\n\t\ttr[p].tag=-1;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tbuild(l,mid,p<<1);\n\tbuild(mid+1,r,p<<1|1);\n}\nvoid pushup(int p){\n\ttr[p].sum=tr[tr[p].lc].sum+tr[tr[p].rc].sum;\n}\nvoid pushdown(int p){\n\tif(tr[p].tag==2){\n\t\ttr[tr[p].lc].sum=tr[tr[p].lc].r-tr[tr[p].lc].l+1-tr[tr[p].lc].sum;\n\t\ttr[tr[p].rc].sum=tr[tr[p].rc].r-tr[tr[p].rc].l+1-tr[tr[p].rc].sum;\n\t\t\n\t\tif(tr[tr[p].lc].tag==1||tr[tr[p].lc].tag==0) tr[tr[p].lc].tag^=1;\n\t\telse if(tr[tr[p].lc].tag==2) tr[tr[p].lc].tag=-1;\n\t\telse tr[tr[p].lc].tag=2;\n\t\t\n\t\tif(tr[tr[p].rc].tag==1||tr[tr[p].rc].tag==0) tr[tr[p].rc].tag^=1;\n\t\telse if(tr[tr[p].rc].tag==2) tr[tr[p].rc].tag=-1;\n\t\telse tr[tr[p].rc].tag=2;\n\t}else if(tr[p].tag==1){\n\t\ttr[tr[p].lc].sum=tr[tr[p].lc].r-tr[tr[p].lc].l+1;\n\t\ttr[tr[p].rc].sum=tr[tr[p].rc].r-tr[tr[p].rc].l+1;\n\t\ttr[tr[p].lc].tag=tr[tr[p].rc].tag=1;\n\t}else if(tr[p].tag==0){\n\t\ttr[tr[p].lc].sum=tr[tr[p].rc].sum=0;\n\t\ttr[tr[p].lc].tag=tr[tr[p].rc].tag=0;\n\t}\n\ttr[p].tag=-1;\n}\nvoid update(int l,int r,int x,int p){\n//\tcout << tr[p].l << \" \" << tr[p].r << \" \" << l << \" \" << r << \" \" << p << endl;\n\tif(l<=tr[p].l&&r>=tr[p].r){\n\t\ttr[p].sum=(tr[p].r-tr[p].l+1)*x;\n\t\ttr[p].tag=x;\n\t\treturn ;\n\t}\n\tint mid=tr[p].l+tr[p].r>>1;\n\tpushdown(p);\n\tif(l<=mid) update(l,r,x,tr[p].lc);\n\tif(r>mid) update(l,r,x,tr[p].rc);\n\tpushup(p);\n//\tcout << p << \" \" << tr[p].l << \" \" << tr[p].r << \" \" << tr[p].lc << \" \" << tr[p].rc << \" \" << tr[p].sum << endl;\n}\nvoid Flip(int l,int r,int p){\n\tif(l<=tr[p].l&&r>=tr[p].r){\n\t\ttr[p].sum=(tr[p].r-tr[p].l+1)-tr[p].sum;\n\t\tif(tr[p].tag==1||tr[p].tag==0) tr[p].tag^=1;\n\t\telse if(tr[p].tag==-1) tr[p].tag=2;\n\t\telse tr[p].tag=-1;\n//\t\tcout << tr[p].sum << endl;\n\t\treturn;\n\t}\n\tint mid=tr[p].l+tr[p].r>>1;\n\tpushdown(p);\n\tif(l<=mid) Flip(l,r,tr[p].lc);\n\tif(r>mid) Flip(l,r,tr[p].rc);\n\tpushup(p);\n}\nint getsum(int p){\n\tif(tr[p].sum==0)return tr[p].l;\n\tif(tr[p].sum==tr[p].r-tr[p].l+1)return 0;\n\tpushdown(p);\n\tint l=getsum(p<<1);\n\tif(l)return l;\n\tl=getsum(p<<1|1);\n\treturn l;\n}\nsigned main() {\n//\tfreopen(\"minimum.in\",\"r\",stdin);\n//\tfreopen(\"minimum.out\",\"w\",stdout);\n\tqr(n);\n\tfor(int i=1;i<=n;i++){\n\t\tqr(opt[i]),qr(l[i]),qr(r[i]);\n\t\tflag[++top]=l[i],flag[++top]=r[i];\n\t\tif(l[i]!=1)flag[++top]=l[i]-1;\n\t\tflag[++top]=r[i]+1;\n\t}\n\tflag[++top]=1;\n \tsort(flag+1,flag+top+1);\n \ttop=unique(flag+1,flag+top+1)-flag-1;\n \tbuild(1,top,1);\n \tfor(int i=1;i<=n;i++) {\n \t\tl[i]=lower_bound(flag+1,flag+top+1,l[i])-flag,r[i]=lower_bound(flag+1,flag+top+1,r[i])-flag;\n \t}\n \tfor(int i=1;i<=n;i++) {\n \t\tif(opt[i]==1){\n \t\t\tupdate(l[i],r[i],1,1);\n \t\t}else if(opt[i]==2){\n \t\t\tupdate(l[i],r[i],0,1);\n \t\t}else{\n \t\t\tFlip(l[i],r[i],1);\n \t\t}\n \t\tprintf(\"%lld\\n\",flag[getsum(1)]);\n \t}\n\treturn 0;\n}\n\n```",
        "postTime": 1641629029,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "CF817F \u9898\u89e3"
    },
    {
        "content": "**\u524d\u8a00**\n\n------------\n\n\u672c\u9898\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n**\u601d\u8def**\n\n------------\n\n\u663e\u7136\uff0c\u6570\u636e\u9700\u8981\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\u3002\u628a\u51fa\u73b0\u7684\u5220\u9664\u548c\u628a\u6ca1\u6709\u7684\u6dfb\u52a0\u5c31\u662f\u5168\u90e8\u63a8\u5e73\uff0c\u53ef\u4ee5\u4f7f\u7528\u61d2\u6807\u8bb0\u3002\n\n\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u53d6\u53cd\u65f6\u9700\u8981\u6ce8\u610f\uff0c\u82e5\u6b64\u65f6\u5b50\u8282\u70b9\u4e5f\u6709\u61d2\u6807\u8bb0\u7684\u8bdd\u9700\u8981\u5148\u4e0b\u4f20\u3002\n\n\u540c\u65f6\uff0c\u5982\u679c\u5728\u64cd\u4f5c\u8d4b\u503c\u7684\u540c\u65f6\u4e5f\u9700\u8981\u8003\u8651\u8be5\u8282\u70b9\u662f\u5426\u6709\u61d2\u6807\u8bb0\uff0c\u82e5\u6709\u63a8\u5e73\u64cd\u4f5c\uff0c\u53d6\u53cd\u5373\u53ef\u3002\u82e5\u6709\u53d6\u53cd\u64cd\u4f5c\uff0c\u8d1f\u8d1f\u5f97\u6b63\u53ef\u4ee5\u62b5\u6d88\u3002\n\n\u6ce8\u610f\uff0c\u5982\u679c\u6240\u6709\u64cd\u4f5c\u90fd\u6ca1\u6709\u51fa\u73b0 $1$ \u7684\u8bdd $1$ \u8fd8\u662f\u53ef\u4ee5\u7684\uff0c\u6240\u4ee5\u9700\u8981\u7279\u6b8a\u5730\u52a0\u4e00\u4e2a $1$\u3002\n\n**code**\n\n------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int MAXN=10e5+5;\nint d[MAXN*4];\nint lazy[MAXN*4];\nvoid pushdown(int p,int dl,int dr) {\n\tif(dl==dr) return;\n\tint mid=(dl+dr)>>1;\n\tif(lazy[p]) {\n\t\tif(lazy[p]==1) {\n\t\t\td[(p<<1)]=mid-dl+1;\n\t\t\td[(p<<1)+1]=dr-mid;\n\t\t\tlazy[(p<<1)]=lazy[(p<<1)+1]=1;\n\t\t}\n\t\tif(lazy[p]==2) {\n\t\t\td[(p<<1)]=d[(p<<1)+1]=0;\n\t\t\tlazy[(p<<1)]=lazy[(p<<1)+1]=2;\n\t\t}\n\t\tif(lazy[p]==3) {\n\t\t\tpushdown((p<<1),dl,mid);\n\t\t\tpushdown((p<<1)+1,mid+1,dr);\n\t\t\td[(p<<1)]=mid-dl+1-d[(p<<1)];\n\t\t\td[(p<<1)+1]=dr-mid-d[(p<<1)+1];\n\t\t\tlazy[(p<<1)]=lazy[(p<<1)+1]=3;\n\t\t}\n\t\tlazy[p]=0;\n\t}\n}\nvoid query(int l,int r,int dl,int dr,int p,int c) {\n\tif(dl>=l&&dr<=r) {\n\t\tif(c==1) d[p]=dr-dl+1;\n\t\tif(c==2) d[p]=0;\n\t\tif(c==3) d[p]=dr-dl+1-d[p];\n\t\tif(c==3) {\n\t\t\tif(lazy[p]==1) lazy[p]=2;\n\t\t\telse if(lazy[p]==2) lazy[p]=1;\n\t\t\telse if(lazy[p]==3) lazy[p]=0;\n\t\t\telse lazy[p]=3;\n\t\t}\n\t\telse lazy[p]=c;\n\t\treturn;\n\t}\n\tint mid=(dl+dr)>>1;\n\tpushdown(p,dl,dr);\n\tif(l<=mid) query(l,r,dl,mid,(p<<1),c);\n\tif(r>mid) query(l,r,mid+1,dr,(p<<1)+1,c);\n\td[p]=d[(p<<1)]+d[(p<<1)+1];\n}\nint ask(int dl,int dr,int p) {\n\tif(dl==dr) return dl;\n\tint mid=(dl+dr)>>1;\n\tpushdown(p,dl,dr);\n\tif(d[(p<<1)]!=mid-dl+1) return ask(dl,mid,(p<<1));\n\treturn ask(mid+1,dr,(p<<1)+1);\n}\nvoid build(int l,int r,int p) {\n\td[p]=0;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,(p<<1));\n\tbuild(mid+1,r,(p<<1)+1);\n}\nlong long l[MAXN],r[MAXN],dir[MAXN];\nint op[MAXN];\nint n;\nsigned main() {\n//\tfreopen(\"minimum.in\",\"r\",stdin);\n//\tfreopen(\"minimum.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) {\n\t\tscanf(\"%d %lld %lld\",&op[i],&l[i],&r[i]);\n\t\tdir[i*3-1]=l[i],dir[i*3-2]=r[i],dir[i*3]=r[i]+1;\n\t}\n\tdir[3*n+1]=1;\n\tsort(dir+1,dir+2+3*n);\n\tint cnt=unique(dir+1,dir+2+3*n)-dir-1;\n\tbuild(1,cnt,1);\n\tfor(int i=1;i<=n;++i) {\n\t\tl[i]=lower_bound(dir+1,dir+1+cnt,l[i])-dir;\n\t\tr[i]=lower_bound(dir+1,dir+1+cnt,r[i])-dir;\n\t\tquery(l[i],r[i],1,cnt,1,op[i]);\n\t\tprintf(\"%lld\\n\",dir[ask(1,cnt,1)]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1641627479,
        "uid": 271260,
        "name": "PosVII",
        "ccfLevel": 7,
        "title": "CF817F MEX Queries"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/CF817F)\n\n## \u9898\u610f\n\n>- \u7ef4\u62a4\u4e00\u4e2a $01$ \u5e8f\u5217 $a_{1\\sim10^{18}+1}$\uff0c\u521d\u59cb\u5747\u4e3a $0$\u3002\n>- \u6709 $n$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u8f93\u5165\u4e09\u4e2a\u6570 $t,l,r$\uff1a\n>- - $t=1$\uff1a\u628a $a_{l\\sim r}$ \u8d4b\u503c\u4e3a $1$\u3002\n>- - $t=2$\uff1a\u628a $a_{l\\sim r}$ \u8d4b\u503c\u4e3a $0$\u3002\n>- - $t=3$\uff1a\u628a $a_{l\\sim r}$ \u53d6\u53cd\u3002\n>- \u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u4e00\u4e2a\u6570 $x$\uff0c\u6ee1\u8db3 $a_x=0$ \u4e14 $x$ \u6700\u5c0f\u3002\n\n## \u5206\u6790\n\n\u770b\u5230\u533a\u95f4\u64cd\u4f5c\uff0c\u663e\u7136\u7b2c\u4e00\u65f6\u95f4\u53ef\u4ee5\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e $t=1,2$ \u7684\u64cd\u4f5c\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0 $tag1\\in\\{-1,0,1\\}$\uff0c\u8868\u793a $0$ \u548c $1$ \u8868\u793a\u628a\u8be5\u533a\u95f4\u590d\u5236\u4e3a $tag1$\uff0c$tag1=-1$ \u8868\u793a\u6ca1\u6709\u6807\u8bb0\uff0c\u5bf9\u4e8e $t=3$ \u7684\u64cd\u4f5c\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0 $tag2\\in\\{0,1\\}$ \u8868\u793a\u662f\u5426\u6709\u7ffb\u8f6c\u3002\n\n\u7136\u800c\u9898\u76ee\u6c42\u7684\u662f\u603b\u4f53\u7684 $\\text{MEX}$\uff0c\u6211\u4eec\u8981\u627e\u5230\u6700\u5c0f\u7684\u503c\u4e3a $0$ \u7684\u4f4d\u7f6e\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u503c $full\\in\\{0,1\\}$ \u8868\u793a\u8be5\u533a\u95f4\u662f\u5426\u5168\u4e3a $1$\uff0c\u67e5\u8be2\u7b54\u6848\u662f\u4ece\u6839\u8282\u70b9\u5f80\u4e0b\u627e\uff0c\u5982\u679c\u5de6\u5b50\u6811\u5168\u4e3a $1$ \u90a3\u4e48\u7b54\u6848\u5c31\u5728\u53f3\u5b50\u6811\uff0c\u5426\u5219\u5728\u5de6\u5b50\u6811\u3002\n\n\u7136\u800c\u8fd9\u6837\u5e76\u4e0d\u597d\u7ef4\u62a4\uff0c\u7ecf\u8fc7\u7ffb\u8f6c\u64cd\u4f5c\u540e\u65e0\u6cd5\u786e\u5b9a $full$ \u7684\u503c\uff0c\u4f60\u4e0d\u77e5\u9053\u7ffb\u8f6c\u524d\u8be5\u533a\u95f4\u662f\u5168\u4e3a $0$ \u8fd8\u662f\u6709\u4e00\u70b9 $1$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u518d\u7ef4\u62a4\u4e00\u4e2a\u503c $any\\in\\{0,1\\}$ \u8868\u793a\u533a\u95f4\u4e2d\u662f\u5426\u81f3\u5c11\u6709\u4e00\u4e2a $1$\uff0c\u8fd9\u6837\u7ffb\u8f6c\u67d0\u4e2a\u533a\u95f4\u7684\u51fd\u6570\u5c31\u5f88\u597d\u5199\u4e86\uff1a\n\n```cpp\nvoid rev(int p){//\u7ffb\u8f6cp\u8282\u70b9\n\ta[p].tag2^=1;//\u7ffb\u8f6c\u6807\u8bb0\n\tif(a[p].full)\n\t\ta[p].full=a[p].any=0;//\u4e4b\u524d\u5168\u662f1\uff0c\u7ffb\u8f6c\u540e\u5168\u662f0\n\telse{\n\t\ta[p].full=!a[p].any;//\u4e4b\u524d\u6ca1\u6709\u6ee1\uff0c\u7ffb\u8f6c\u540e\u7684\u7ed3\u679c\u968fany\u53d6\u503c\u800c\u5b9a \n\t\ta[p].any=1;//\u7531\u4e8e\u7ffb\u8f6c\u524d\u6ca1\u6709\u6ee1\uff0c\u6240\u4ee5\u7ffb\u8f6c\u540e\u4e00\u5b9a\u67091 \n\t}\n}\n```\n\n\u8d4b\u503c\u65f6\uff0c\u628a $full$ \u548c $any$ \u90fd\u6539\u6210\u8d4b\u7684\u503c\u5c31\u597d\u4e86\u3002\n\n```cpp\nvoid fuz(int p,int v){//\u8d4b\u503c \n\ta[p].any=a[p].full=a[p].tag1=v;\n\ta[p].tag2=0;//\u8d4b\u503c\u540e\u65e0\u6240\u8c13\u7ffb\u8f6c \n}\n```\n\n\u76f8\u5e94\u7684 $\\text{pushup}$\uff1a\n\n```cpp\nvoid pushup(int p){\n    a[p].full=a[pl].full&&a[pr].full;\n    a[p].any=a[pl].any||a[pr].any;\n}\n```\n\n\u7531\u4e8e $l,r$ \u8303\u56f4\u8fc7\u5927\uff0c\u6211\u4e00\u5f00\u59cb\u4f7f\u7528\u7684\u662f\u52a8\u6001\u5f00\u70b9\u7684\u7ebf\u6bb5\u6811\uff0c\u7136\u800c\u7531\u4e8e\u6811\u592a\u6df1\uff0c\u5f00\u70b9\u64cd\u4f5c\u592a\u591a\u5bfc\u81f4 TLE \u4e86\uff0c\u4e8e\u662f\u53c8\u52a0\u4e0a\u4e86\u79bb\u6563\u5316\u624d\u8fc7\uff0c\u53ef\u52a8\u6001\u5f00\u70b9\u52a0\u4e0a\u79bb\u6563\u5316\u540e\u5c31\u6ca1\u592a\u5927\u7528\u5904\u4e86\u3002\n\n**\u5173\u4e8e\u79bb\u6563\u5316\u7684\u63d0\u793a\uff1a\u4e00\u5b9a\u8981\u6709 $1$\uff01\u5b9a\u8981\u6709 $1$\uff01\u8981\u6709 $1$\uff01\u6709 $1$\uff01$1$\uff01\uff01**~~\uff08\u624b\u52a8\u56de\u58f0~~\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nlong long read(){\n    long long x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nvoid write(long long x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nconst int N=5e5+10;\n#define pl a[p].tl\n#define pr a[p].tr\n#define DOP_S_T_T bool\nstruct DOP_Segment_Tree{\n    int root,tot;\n    struct Tree{\n        ll l,r;\n        int tl,tr;//\u5de6\u53f3\u5b50\u6811 \n        int tag1,tag2;\n        DOP_S_T_T full,any;\n    }a[N*4];\n\tvoid fuz(int p,int v){//\u8d4b\u503c \n\t\ta[p].any=a[p].full=a[p].tag1=v;\n\t\ta[p].tag2=0;//\u8d4b\u503c\u540e\u65e0\u6240\u8c13\u7ffb\u8f6c \n\t}\n\tvoid rev(int p){//\u7ffb\u8f6cp\u8282\u70b9\n\t\ta[p].tag2^=1;//\u7ffb\u8f6c\u6807\u8bb0\n\t\tif(a[p].full)\n\t\t\ta[p].full=a[p].any=0;//\u4e4b\u524d\u5168\u662f1\uff0c\u7ffb\u8f6c\u540e\u5168\u662f0\n\t\telse{\n\t\t\ta[p].full=!a[p].any;//\u4e4b\u524d\u6ca1\u6709\u6ee1\uff0c\u7ffb\u8f6c\u540e\u7684\u7ed3\u679c\u968fany\u53d6\u503c\u800c\u5b9a \n\t\t\ta[p].any=1;//\u7531\u4e8e\u7ffb\u8f6c\u524d\u6ca1\u6709\u6ee1\uff0c\u6240\u4ee5\u7ffb\u8f6c\u540e\u4e00\u5b9a\u67091 \n\t\t}\n\t}\n\tvoid pushup(int p){\n\t    a[p].full=a[pl].full&&a[pr].full;\n\t    a[p].any=a[pl].any||a[pr].any;\n\t}\n    void pushdown(int p){\n        if(a[p].tag1!=-1){\n        \tfuz(pl,a[p].tag1);\n        \tfuz(pr,a[p].tag1);\n        \ta[p].tag1=-1;\n\t\t}\n\t\telse if(a[p].tag2){\n\t\t\tif(a[pl].tag1==-1)\n\t\t\t\trev(pl);\n\t\t\telse\n\t\t\t\tfuz(pl,!a[pl].tag1);\n\t\t\tif(a[pr].tag1==-1)\n\t\t\t\trev(pr);\n\t\t\telse\n\t\t\t\tfuz(pr,!a[pr].tag1);\n\t\t\ta[p].tag2=0;\n\t\t}\n    }\n    void make(int p){//\u5f00\u70b9 \n        if(!pl){\n            ll mid=(a[p].l+a[p].r)>>1;\n            a[pl=++tot].l=a[p].l;\n            a[pl].r=mid;\n            fuz(pl,0);\n            a[pr=++tot].l=mid+1;\n            a[pr].r=a[p].r;\n            fuz(pr,0);\n        }\n    }\n    void build(ll l,ll r){//\u5efa\u6811 \n        root=tot=1;\n        a[root].l=l;\n        a[root].r=r;\n        fuz(root,0);\n    }\n    void change1(int p,ll l,ll r,DOP_S_T_T v){//\u8d4b\u503c \n        if(l<=a[p].l&&a[p].r<=r){\n            fuz(p,v);\n            return;\n        }\n        make(p);\n        pushdown(p);\n        ll mid=(a[p].l+a[p].r)>>1;\n        if(l<=mid)\n            change1(pl,l,r,v);\n        if(r>mid)\n            change1(pr,l,r,v);\n        pushup(p);\n    }\n    void change2(int p,ll l,ll r){//\u7ffb\u8f6c \n        if(l<=a[p].l&&a[p].r<=r){\n        \tif(a[p].tag1!=-1) fuz(p,!a[p].tag1);\n        \telse rev(p);\n            return;\n        }\n        make(p);\n        pushdown(p);\n        ll mid=(a[p].l+a[p].r)>>1;\n        if(l<=mid)\n            change2(pl,l,r);\n        if(r>mid)\n            change2(pr,l,r);\n        pushup(p);\n    }\n    ll ask(int p){//\u67e5\u8be2 \n        if(a[p].l==a[p].r)\n            return a[p].l;\n        make(p);\n        pushdown(p);\n        if(a[pl].full)\n        \treturn ask(pr);\n        return ask(pl);\n    }\n}tree;\nint n,m;\nll t[N],l[N],r[N],a[4*N];\nint main(){\n\tn=read();\n\ta[++m]=1;\n\tfor(int i=1;i<=n;i++){\n\t\tt[i]=read();l[i]=read();r[i]=read();\n\t\ta[++m]=max(l[i]-1,1ll);a[++m]=l[i];\n\t\ta[++m]=r[i];a[++m]=r[i]+1;\n\t}\n\tsort(a+1,a+m+1);\n\tint tot=unique(a+1,a+m+1)-(a+1);\n\ttree.build(1,tot+10);\n\tfor(int i=1;i<=n;i++){\n\t\tl[i]=lower_bound(a+1,a+tot+1,l[i])-a;\n\t\tr[i]=lower_bound(a+1,a+tot+1,r[i])-a;\n\t\tif(t[i]==1) tree.change1(1,l[i],r[i],1);\n\t\tif(t[i]==2) tree.change1(1,l[i],r[i],0);\n\t\tif(t[i]==3) tree.change2(1,l[i],r[i]);\n\t\twrite(a[tree.ask(1)]);\n\t\tputchar('\\n');\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1638173623,
        "uid": 419144,
        "name": "chenjunxiu",
        "ccfLevel": 7,
        "title": "CF817F MEX Queries"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://registergen.github.io/post/ti-jie-cf817f-mex-queries/)\n\n# Solution\n\n\u9996\u5148\u8981\u60f3\u5230\u7684\u662f\u8fd9\u4e2a\u9898\u7684\u4e00\u4e2a\u7b49\u4ef7\u9898\u9762\uff1a\n\n> \u7ef4\u62a4\u4e00\u4e2a\u957f\u4e3a $10^{18}$ \u7684 $01$ \u5e8f\u5217\uff0c\u521d\u59cb\u503c\u5747\u4e3a $0$\u3002\n> \u4e09\u79cd\u64cd\u4f5c\uff1a\n> 1. \u628a $[l,r]$ \u53d8\u6210 $1$\u3002\n> 2. \u628a $[l,r]$ \u53d8\u6210 $0$\u3002\n> 3. \u628a $[l,r]$ \u4e2d\u7684 $0$ \u53d8 $1$\uff0c$1$ \u53d8 $0$\u3002\n> \u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u5e8f\u5217\u7684\u6700\u5de6\u8fb9\u7684 $0$ \u7684\u4f4d\u7f6e\u3002\n> \u64cd\u4f5c\u6570 $\\le 10^5$\n\n\u7136\u540e\u770b\u5230\u533a\u95f4\u8d4b\u503c\uff0c\u5c31\u60f3\u5230\u53ef\u7231\u7684 Chtholly \u5566\uff01\n\n\u64cd\u4f5c $1$\uff0c\u64cd\u4f5c $2$ \u4e0d\u7528\u591a\u8bf4\u3002\n\n\u795e\u5947\u7684\u662f\uff0c\u533a\u95f4\u53cd\u8f6c\uff08\u64cd\u4f5c $3$\uff09\u548c\u67e5\u8be2\u7684\u4ee3\u7801\u771f\u7684\u53ef\u4ee5\u8fd9\u6837\u66b4\u529b\uff1a\n\n```cpp\ninline void reverse(ll l,ll r)\n{\n\tIter itr=split(r+1),itl=split(l);\n\tfor(Iter it=itl;it!=itr;it++)\n\t\tit->v^=1;\n}\n\ninline ll query()\n{\n\tfor(Iter it=s.begin();it!=s.end();it++)\n\t\tif(it->v==0)return it->l;\n\treturn -1;\n}\n```\n\n\u6ce8\u610f\u5f00 `long long`\u3002\n\n# Code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<set>\n\n#define Iter std::set<Node>::iterator\n\ntypedef long long ll;\n\nconst int N=1e5;\n\nstruct Node\n{\n\tll l,r;\n\tmutable bool v;\n\n\tNode(ll _l,ll _r=0,bool _v=0):l(_l),r(_r),v(_v){}\n};\n\ninline bool operator<(const Node& x,const Node& y)\n{\n\treturn x.l<y.l;\n}\n\nstd::set<Node> s;\nll n;\n\ninline void read(ll& x)\n{\n\tx=0;char c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')x=x*10+c-48,c=getchar();\n}\n\ninline Iter split(ll pos)\n{\n\tIter it=s.lower_bound(Node(pos));\n\tif(it->l==pos&&it!=s.end())return it;\n\tit--;\n\tll l=it->l,r=it->r;\n\tbool v=it->v;\n\ts.erase(it);\n\ts.insert(Node(l,pos-1,v));\n\treturn s.insert(Node(pos,r,v)).first;\n}\n\ninline void assign(ll l,ll r,bool v)\n{\n\tIter itr=split(r+1),itl=split(l);\n\ts.erase(itl,itr);\n\ts.insert(Node(l,r,v));\n}\n\ninline void reverse(ll l,ll r)\n{\n\tIter itr=split(r+1),itl=split(l);\n\tfor(Iter it=itl;it!=itr;it++)\n\t\tit->v^=1;\n}\n\ninline ll query()\n{\n\tfor(Iter it=s.begin();it!=s.end();it++)\n\t\tif(it->v==0)return it->l;\n\treturn -1;\n}\n\nint main()\n{\n\tread(n);\n\ts.insert(Node(1,1e18,0)); // \u5148\u63d2\u5165\u4e00\u4e2a 1e18 \u7684\u533a\u95f4\n\twhile(n--)\n\t{\n\t\tll opt,l,r;\n\t\tread(opt),read(l),read(r);\n\t\tif(opt==1)assign(l,r,1);\n\t\tif(opt==2)assign(l,r,0);\n\t\tif(opt==3)reverse(l,r);\n\t\tprintf(\"%lld\\n\",query());\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1592392960,
        "uid": 242702,
        "name": "registerGen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\n\n\u4ee3\u7801\u4e2dv0\u8868\u793a0\u7684\u6700\u5de6\u4f4d\u7f6e v1\u8868\u793a1\u7684\u6700\u5de6\u4f4d\u7f6e\n\n\u4e8b\u5148\u5b58\u4e0b\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u5de6\u53f3\u533a\u95f4[l,r]\n\n\u64cd\u4f5c1:\u533a\u95f4\u6539\u4e3a1 \u76f4\u63a5\u5c06v0\u8d4b\u503c\u4e3aINF v1\u8d4b\u503c\u4e3al\n\n\u64cd\u4f5c2:\u540c\u7406\n\n\u64cd\u4f5c3:\u4ea4\u6362v0 v1\u7684\u503c\u5373\u53ef\n\n\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9:\n\n1.\u79bb\u6563\u5316\u65f6\u9664\u4e86\u52a0\u5165\u8be2\u95ee\u7684Li,Ri\u5916,\u7531\u4e8e1 Li-1 Ri+1\u4e5f\u53ef\u80fd\u6210\u4e3a\u7b54\u6848 \u4e5f\u8981\u52a0\u5165\n\n2.\u6ce8\u610f\u64cd\u4f5c\u7684\u5148\u540e \u5148\u8986\u76d6 \u518d\u5f02\u6216 \u6211\u7684\u505a\u6cd5\u662f\u5f00\u4e24\u4e2alaz\u6807\u8bb0 \u8003\u8651\u597d\u5148\u540e\u987a\u5e8f\u53ca\u64cd\u4f5c\u7684\u5f71\u54cd\u5c31\u884c\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f,N=1e5+5;\nstruct node{\n\tint laz,v0,v1,l,r,tag;\n\tnode*ch[2];\n\tnode(int a=0,int b=0){\n\t\tch[0]=ch[1]=NULL;\n\t\tl=a;r=b;laz=-1;tag=0;\n\t\tv0=l;v1=INF;\n\t}\n\tvoid turn0(){v0=l;v1=INF;}\n\tvoid turn1(){v0=INF;v1=l;}\n\tvoid _xor(){swap(v0,v1);}\n\tvoid maintain(){\n\t\tv0=min(ch[0]->v0,ch[1]->v0);\n\t\tv1=min(ch[0]->v1,ch[1]->v1);\n\t}\n\tvoid pushdown(){\n\t\tif(laz==0){\n\t\t\tch[0]->turn0();\n\t\t\tch[1]->turn0();\n\t\t\tch[0]->tag=ch[1]->tag=0;\n\t\t\tch[0]->laz=ch[1]->laz=0;\n\t\t}\n\t\tif(laz==1){\n\t\t\tch[0]->turn1();\n\t\t\tch[1]->turn1();\n\t\t\tch[0]->tag=ch[1]->tag=0;\n\t\t\tch[0]->laz=ch[1]->laz=1;\n\t\t}\n\t\tif(tag){\n\t\t\tch[0]->_xor();\n\t\t\tch[1]->_xor();\n\t\t\tch[0]->tag^=1;\n\t\t\tch[1]->tag^=1;\n\t\t}\n\t\tlaz=-1;tag=0;\n\t}\n}*rt,pool[N<<4];\ninline node*new_node(int a=0,int b=0){\n\tstatic int cc=0;\n\tpool[cc]=node(a,b);\n\treturn &pool[cc++];\n}\nint query(){return rt->v0;}\nvoid build(node*&u,int l,int r){\n\tu=new_node(l,r);\n\tif(l!=r){\n\t\tint mid=(l+r)>>1;\n\t\tbuild(u->ch[0],l,mid);\n\t\tbuild(u->ch[1],mid+1,r);\n\t}\n}\nvoid turn0(node*u,int L,int R){\n\tconst int&l=u->l,&r=u->r;\n\tif(r<L||l>R) return;\n\tif(L<=l&&r<=R){\n\t\tu->tag=0;\n\t\tu->laz=0;\n\t\treturn u->turn0();\n\t}\n\tu->pushdown();\n\tturn0(u->ch[0],L,R);turn0(u->ch[1],L,R);\n\treturn u->maintain();\n}\nvoid turn1(node*u,int L,int R){\n\tconst int&l=u->l,&r=u->r;\n\tif(r<L||l>R) return;\n\tif(L<=l&&r<=R){\n\t\tu->tag=0;\n\t\tu->laz=1;\n\t\treturn u->turn1();\n\t}\n\tu->pushdown();\n\tturn1(u->ch[0],L,R);turn1(u->ch[1],L,R);\n\treturn u->maintain();\n}\nvoid _xor(node*u,int L,int R){\n\tconst int&l=u->l,&r=u->r;\n\tif(r<L||l>R) return;\n\tif(L<=l&&r<=R){\n\t\tu->tag^=1;\n\t\treturn u->_xor();\n\t}\n\tu->pushdown();\n\t_xor(u->ch[0],L,R);_xor(u->ch[1],L,R);\n\treturn u->maintain();\n}\nint n,opt[N],cn;ll le[N],ri[N],B[N<<2];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%lld%lld\",opt+i,le+i,ri+i);\n\t\tB[++cn]=le[i];\n\t\tif(le[i]-1>0) B[++cn]=le[i]-1;\n\t\tB[++cn]=ri[i];\n\t\tB[++cn]=ri[i]+1;\n\t}\n\tB[++cn]=1;\n\tsort(B+1,B+cn+1);\n\tcn=unique(B+1,B+cn+1)-B-1;\n\tbuild(rt,1,cn);\n\tfor(int i=1;i<=n;i++){\n\t\tle[i]=lower_bound(B+1,B+cn+1,le[i])-B;\n\t\tri[i]=lower_bound(B+1,B+cn+1,ri[i])-B;\n\t\tif(opt[i]==1) turn1(rt,le[i],ri[i]);\n\t\telse if(opt[i]==2) turn0(rt,le[i],ri[i]);\n\t\telse _xor(rt,le[i],ri[i]);\n\t\tprintf(\"%lld\\n\",B[query()]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1539939268,
        "uid": 51597,
        "name": "Qing_\u55b5\u4e56\u4e56\u55b5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    },
    {
        "content": "$\\text{Codeforces}$ \u7684 $\\text{tag}$ \u771f\u51c6\u786e\u554a\uff0c\u8fd9\u79cd\u9898\u88ab\u5212\u5206\u6210\u4e86 $\\text{Trees-tag}$\uff0c\u6211\u4e5f\u662f\u670d\u4e86\n\n---\n\n\u9898\u76ee\u8981\u6c42\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a\n\n$1.$ \u628a\u533a\u95f4 $[l,r]$ \u7684\u6240\u6709\u6570\u5168\u90e8\u53d8\u6210 $1$\n\n$2.$ \u628a\u533a\u95f4 $[l,r]$ \u7684\u6240\u6709\u6570\u5168\u90e8\u53d8\u6210 $0$\n\n$3.$ \u628a\u533a\u95f4 $[l,r]$ \u4e2d\u7684 $0$ \u53d8\u6210 $1$\uff0c$1$ \u53d8\u6210 $0$\n\n\u6bcf\u6b21\u64cd\u4f5c\u540e\u8be2\u95ee\u6700\u5de6\u8fb9\u7684 $0$ \u7684\u4f4d\u7f6e\n\n\u5176\u4e2d\u64cd\u4f5c\u6b21\u6570 $\\leq 100000$\uff0c$l,r \\leq 1e18$\n\n\u56e0\u4e3a $l,r$ \u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\u7136\u540e\u79bb\u6563\u5316\n\n$3$ \u64cd\u4f5c\u548c[\u8fd9\u9898]( https://www.luogu.org/problem/P2574 )\u4e2d\u7684\u64cd\u4f5c\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\n\n\u533a\u95f4\u5f02\u6216\u5c31\u76f8\u5f53\u4e8e $sum=len-sum$\uff0c\u5176\u4e2d $sum$ \u8868\u793a\u8fd9\u6bb5\u533a\u95f4\u7684\u548c\uff0c$len$ \u8868\u793a\u8fd9\u6bb5\u533a\u95f4\u7684\u957f\u5ea6\n\n\u6bcf\u6b21\u64cd\u4f5c\u8be2\u95ee\u6700\u5de6\u8fb9 $0$ \u7684\u4f4d\u7f6e\uff0c\u6709\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u5c31\u662f\u4e8c\u5206\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\n\n\u7136\u540e\u6839\u636e\u8d77\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u4f4d\u7f6e\u8fd9\u4e00\u6bb5\u7684\u533a\u95f4\u548c\u8fdb\u884c\u5224\u65ad\uff1a\n\n\u5982\u679c\u8fd9\u4e00\u6bb5\u7684\u533a\u95f4\u548c\u7b49\u4e8e\u8fd9\u6bb5\u533a\u95f4\u7684\u957f\u5ea6 \uff0c\u5f80\u5927\u7684\u4e8c\u5206\n\n\u5426\u5219\u5f80\u5c0f\u7684\u4e8c\u5206\uff0c\u8bb0\u5f55\u7b54\u6848\n\n\u8d34\u4e2a\u90e8\u5206\u7684 $\\text{Code}:$\n\n```cpp\nwhile(l<=r)\n{\n    int mid=(l+r)>>1;\n    if(query(1,1,mid)==mid)l=mid+1;\n    else ans=mid,r=mid-1;\n}\n```\n\n\u4f46\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5355\u6b21\u64cd\u4f5c\u662f $log^2{n}$ \u7684\uff0c\u6211\u4eec\u6709\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\n\n\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u4ece\u6839\u8282\u70b9\u5f80\u4e0b\u8df3\uff0c\n\n\u5982\u679c\u5de6\u513f\u5b50\u533a\u95f4\u548c\u5c0f\u4e8e\u5f53\u524d\u533a\u95f4\u957f\u5ea6\uff0c\u90a3\u7b54\u6848\u5c31\u5728\u5de6\u513f\u5b50\uff0c\u5426\u5219\u5c31\u5728\u53f3\u513f\u5b50\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $logn$ \u7684\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nlogn)$",
        "postTime": 1574387492,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF817F \u3010MEX Queries\u3011"
    }
]