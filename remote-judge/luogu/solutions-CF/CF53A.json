[
    {
        "content": "\u5bf9\u4e8e\u8fd9\u79cd\u5b57\u7b26\u4e32\u67e5\u627e\u5339\u914d\u4e32\u7684\u9898...\n\n\u600e\u4e48\u5c11\u5f97\u4e86C++\u4e2d\u7684string\u7c7b\u5462.\n\n\u4ecb\u7ecd\u4e00\u4e0bstring.find()\u51fd\u6570\u7684\u91cd\u8f7d\u7248\u672c:\n\n```\nsize_t find (const string& str, size_t pos = 0) const noexcept;\nsize_t find (const char* s, size_t pos = 0) const;\nsize_t find (const char* s, size_t pos, size_type n) const;\nsize_t find (char c, size_t pos = 0) const noexcept;\n```\n\n\u65e2\u53ef\u4ee5\u7528\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u62e5\u6709\u67d0\u4e2a\u5b57\u7b26,\u4e5f\u53ef\u4ee5\u7528\u6765\u67e5\u627e\u5b50\u4e32,\u627e\u5230\u4e86\u8fd4\u56de\u5b57\u7b26\u6216\u5b50\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u4e0b\u6807.\u6ca1\u6709\u5219\u8fd4\u56de\n```\nstring::npos\n```\n\u7279\u6b8a\u503c.\n\n\u9644\u4e0a\u4ee3\u7801:\n\n```\n#include<bits/stdc++.h>                  //C++\u4e07\u80fd\u5e93 \nusing namespace std;\nint main()\n{\n\tstring *str,var;                     //string\u7c7b\u6307\u9488\u53cavar\u53d8\u91cf \n\tint n;                               //\u7528\u6765\u8bfb\u53d6\u8f93\u5165 \n\tcin>>var>>n;                         //\u8f93\u5165\u8981\u627e\u7684\u5b50\u4e32\u548c\u6709\u51e0\u4e2a\u7528\u4e8e\u5339\u914d\u7684\u4e32 \n\tstr=new string[n];                   //\u4e3a\u8981\u8f93\u5165\u7684\u5339\u914d\u4e32\u7533\u8bf7\u5185\u5b58 \n\tfor(int i=0;i<n;i++)                 //\u5faa\u73af\u8f93\u5165\u4e32 \n\t\tcin>>str[i];\n\tsort(str,str+n);                     //\u5b57\u5178\u5e8f\u5347\u5e8f\u5feb\u6392,\u6807\u51c6\u5e93\u4e2d\u5305\u62ec\u5bf9string\u7c7b\u7684\u5feb\u6392\u51fd\u6570\u91cd\u8f7d \n\tfor(int i=0;i<n;i++)                 \n\t{\n\t\tif(str[i].find(var)==0)          //\u5982\u679c\u5728\u5339\u914d\u4e32\u4e2d\u627e\u5230\u4e86\u8fd9\u4e2a\u5b50\u4e32,\u4e14\u662f\u4ee5\u5b50\u4e32\u5f00\u5934 \n\t\t{\n\t\t\tcout<<str[i]<<endl;          //\u8f93\u51fa\u5339\u914d\u4e32\n\t\t\treturn 0;                    //\u76f4\u63a5return 0 \n\t\t}\n\t}\n\tcout<<var<<endl;                     //\u5982\u679c\u627e\u5b8c\u4e86\u5339\u914d\u4e32\u8fd8\u6ca1\u627e\u5230\u5c31\u8f93\u51fa\u539f\u4e32\n\treturn 0;                         \n}\n```",
        "postTime": 1526471081,
        "uid": 52603,
        "name": "\u6e29\u60c5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF53A \u3010Autocomplete\u3011"
    },
    {
        "content": "# [\u672c\u4eba\u535a\u5ba2](https://blog.likecoding.ooo/2019/05/25/%E6%B4%9B%E8%B0%B7cf53a%E9%A2%98%E8%A7%A3/)\n## ~~\u6211\u592a\u5f31\u4e86\u6240\u4ee5\u4f7f\u7528\u4e86set~~  \n\u6211\u9996\u5148\u60f3\u5230set\u7684\u539f\u56e0\u662f\u4ed6\u662f\u81ea\u52a8\u6392\u5e8f\u7684\uff08\u4e5f\u5c31\u662fstring\u7c7b\u578b\u81ea\u52a8\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff09  \n\u90a3\u4e48\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6\uff0c\u628a\u4ed6\u52a0\u5165set\u4e2d\uff0c\u8fd9\u6837\u7b2c\u4e00\u4e2a\u5c31\u662f\u7b26\u5408\u6761\u4ef6\u7684\u3002\uff08\u5982\u679cset\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\uff0c\u5c31\u4ee3\u8868\u7740\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstring s;\nint n;\nstring st[110];\nset<string> se;\nset<string>::iterator it;\nbool k;\nint main() {\n    cin>>s;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>st[i];\n    //\u5f00\u59cb\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n    for(int j=1;j<=n;j++) {\n        k=false;\n        for(int i=0;i<s.size();i++)\n            if(s[i]!=st[j][i]) {\n                k=true;break;\n            }\n        //\u82e5\u6ee1\u8db3\u6761\u4ef6\u5219\u6dfb\u52a0\u5230set\u4e2d\n        if(!k) se.insert(st[j]);\n    }\n    //\u5982\u679cset\u4e2d\u6ca1\u6709\u4efb\u4f55\u5185\u5bb9\uff0c\u5c31\u4ee3\u8868\u7740\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\n    if(se.empty()) {\n        cout<<s;\n        exit(0);\n    }\n    //\u5982\u679c\u6709\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u5c31\u662f\u7b54\u6848\uff08\u81ea\u52a8\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff09\n    it=se.begin();\n    cout<<*it;\n    return 0;\n}\n```",
        "postTime": 1558756615,
        "uid": 119065,
        "name": "Kizuna_AI",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF53A \u3010Autocomplete\u3011"
    },
    {
        "content": "**p\u515a\u798f\u5229**\n\n\u8fd9\u4e00\u9898\u7684\u610f\u601d\u5341\u5206\u7b80\u5355,\u5224\u65ad\u5b57\u7b26\u4e32s\u662f\u5426\u5728a[1]~a[n]\u5b57\u7b26\u4e32\u7684**\u5f00\u5934**\n\n\u4ee3\u7801\u5982\u4e0b:\n```pascal\nvar\n  n,i,j,l:longint;\n  t,s:string;\n  p:boolean;\n  a:array[0..100000] of string;\nbegin\n  readln(s);//\u5b57\u7b26\u4e32s\n  readln(n);//n\u4e2a\u5b57\u7b26\u4e32\n  for i:=1 to n do readln(a[i]);//\u8bfb\u5165\n  for i:=1 to n-1 do//\u8fd9\u8fb9\u8fd0\u7528\u4e86\u4e00\u4e2a\u6392\u5e8f,\u5c06\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u653e\u5728\u524d\u9762\n    for j:=i+1 to n do\n    if (length(a[i])>length(a[i])) or (a[i]>a[j]) then\n    begin\n      t:=a[i];a[i]:=a[j];a[j]:=t;\n    end;\n  for i:=1 to n do//\u4ece\u5b57\u7b26\u4e32\u6700\u5c0f\u7684\u5f00\u59cb\u5224\u65ad\n  begin\n    p:=false;\n    for j:=1 to length(s) do//\u5224\u65ad\u7b2ci\u4e2a\u5b57\u7b26\u7684\u524d(s\u7684\u957f\u5ea6)\u4e2a\u662f\u5426\u4e0es\u76f8\u540c\n      if s[j]<>a[i][j] then begin p:=true;break;end;//\u5982\u679c\u4e0d\u540cp=true \u9000\u51fa\n    if p=false then begin writeln(a[i]);exit;end;//\u5982\u679c\u5168\u90e8\u76f8\u540cp\u5c31\u662ffalse,\u8f93\u51faa[i]\n  end;\n  writeln(s);//\u5426\u5219\u5c31\u662f\u6ca1\u6709\u76f8\u540c\u7684,\u8f93\u51fas\nend.\n```\n\u671b\u901a\u8fc7,\u8c22\u8c22\u4e86!!!",
        "postTime": 1551273369,
        "uid": 97653,
        "name": "ACE_ZY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF53A \u3010Autocomplete\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u6a21\u62df\n```\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[1000],b[1000],c[1000];\nint s,d;\nint main()\n{\n    scanf(\"%s%d\",a,&s); //\u8f93\u5165\u521d\u59cb\u5b57\u7b26\u4e32\u548c\u5339\u914d\u5b57\u7b26\u4e32\u4e2a\u6570 \n    d=strlen(a);   //\u6c42\u51fa\u521d\u59cb\u5b57\u7b26\u4e32\u957f\u5ea6 \n    while(s--){\n    \tscanf(\"%s\",b);    //\u8bfb\u5165\u5339\u914d\u5b57\u7b26\u4e32 \n    \tif(!strncmp(a,b,d)){    //\u82e5\u524dd\u4e2a\u5b57\u7b26\u5339\u914d\u6210\u529f \n    \t\tif(!c[0]) strcpy(c,b);    //\u82e5\u8fd8\u6ca1\u6709\u7b54\u6848\uff0c\u4fdd\u5b58 \n    \t\tif(strcmp(b,c)<=0) strcpy(c,b);   //\u82e5\u524d\u9762\u5df2\u7ecf\u6709\u7b54\u6848\uff0c\u6bd4\u8f83\u5b57\u5178\u5e8f\u5e76\u5b58\u4e0b \n\t\t}\n\t}if(c[0]) printf(\"%s\",c);    //\u82e5\u6709\u7b54\u6848\uff0c\u8f93\u51fa \n\telse printf(\"%s\",a);   //\u82e5\u65e0\u7b54\u6848\uff0c\u8f93\u51fa\u521d\u59cb\u5b57\u7b26\u4e32 \n    return 0;\n}\n```",
        "postTime": 1521244663,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF53A \u3010Autocomplete\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5b8c\u5168\u4e0d\u7528\u5199\u90a3\u4e48\u591a\u5947\u5947\u602a\u602a\u7684\u51fd\u6570\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u6574\u9f50\u4e00\u4e9b\u4f46\u7a0d\u663e\u5197\u957f\n\n~~\u8bf7\u5ffd\u7565\u90a3\u4e9b\u5947\u5947\u602a\u602a\u7684\u5934\u6587\u4ef6\uff08\u597d\u770b\u7684\uff09~~ \n\n```cpp\n#include<map>\n#include<list>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint la,lb,lc,n;\nchar a[10001],b[10001],c[10001];\nbool x;\nvoid ll(){\n\tif(!x){//\u7b2c\u4e00\u6b21\u6709\u89e3\u76f4\u63a5\u8d4b\u4e0a\u5c31\u53ef\u4ee5 \n\t\tx=true;\n\t\tfor(int i=1;i<=la;i++)\n\t\t\tc[i]=a[i];\n\t\t\treturn;\n\t}\n\tif(strcmp(a+1,c+1)<0){//\u5982\u679c\u5b57\u5178\u5e8f\u66f4\u5c0f \n\t\tmemset(c,0,sizeof(c));//\u5fd8\u8bb0\u8fd9\u4e2a\u88ab\u5751\u6570\u6b21\u5426\u5219\u8bf7\u770b\u6837\u4f8b1\u7684\u8f93\u51fa \n\t\tfor(int i=1;i<=la;i++)//\u6539\u53d8c \n\t\tc[i]=a[i];\n\t}\n}\nvoid gg(){\n\tbool y=true;\n\tmemset(a,0,sizeof(a));\n\tscanf(\"%s\",a+1);\n\tla=strlen(a+1);\n\tif(la<lb) return;//\u76f4\u63a5\u4e0d\u591f\u957f\uff0c\u6839\u672c\u4e0d\u53ef\u80fd\u5339\u914d \n\tfor(int i=1;i<lb;i++){\n\t\tif(a[i]!=b[i]){//\u65e0\u6cd5\u5339\u914d \n\t\t\ty=false;\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i]>c[i]){//\u6700\u4f18\u5316\u526a\u679d\uff0ca\u7684\u5b57\u5178\u5e8f\u4e00\u5b9a\u5927\u4e8ec \n\t\t\ty=false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(y) ll();//\u6539\u53d8c \n}\nint main(){\n\tscanf(\"%s\",b+1);\n\tlb=strlen(b+1);//\u6c42b\u7684\u957f\u5ea6\uff0c\u4e0b\u540c \n\tfor(int i=1;i<=lb;i++)//\u5982\u679c\u5230\u6700\u540e\u90fd\u6ca1\u6709\u53d8\u5316\u5c31\u662f\u65e0\u89e3\uff0c\u76f4\u63a5\u8f93\u51fab\uff08\u76f8\u5f53\u4e8e\uff09 \n\t\tc[i]=b[i];\n\tlc=lb;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tgg();\n\tprintf(\"%s\",c+1);//\u8f93\u51fac\u5b57\u7b26\u4e32 \n\treturn ~~(0-0);\n}\n```",
        "postTime": 1533799822,
        "uid": 90610,
        "name": "\u4faf\u4f73\u660a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF53A \u3010Autocomplete\u3011"
    },
    {
        "content": "# \u2014\u5f88\u591a\u4eba\u770b\u4e0d\u61c2\u5b57\u7b26\u4e32\u51fd\u6570\u2014\n$\\color{blue}\\texttt{\u56e0\u6b64\u8ba9\u849f\u84bb\u4e3a\u5e7f\u5927\u6d1b\u8c37\u670b\u53cb\u4ee5\u6700\u539f\u59cb\u7684\u4ee3\u7801\u6765\u89e3\u6790\u5427\u3002}$\n$\\color{red}\\texttt{\u6c42\u6b23\u8d4f}$\n~~~\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    string a,b,c;\n    cin>>a;\n    c=a;\n    int n,p=1;\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>b;\n        int k=1;\n        for(int j=0;j<a.size();j++){\n            if(a[j]!=b[j]) k=0;\n        }\n        if(k){\n            if(p) c=b,p=0;\n            else{\n                int kk=0;\n                for(int j=0;j<min(c.size(),b.size());j++){\n                    if(c[j]>b[j]){\n                        c=b;\n                        kk=1;\n                        break;\n                    }\n                    if(c[j]<b[j]){\n                        kk=1;\n                        break;\n                    }\n                }\n                if(kk==0){\n                    if(c.size()>b.size()) c=b;\n                }\n            }\n        }\n    }\n    cout<<c;\n    return 0;\n}\n~~~",
        "postTime": 1529411773,
        "uid": 95346,
        "name": "OdtreePrince",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF53A \u3010Autocomplete\u3011"
    },
    {
        "content": "### P\u515a\u798f\u5229\n\u505a\u8fd9\u9053\u9898\u4f7f\u7528$pos$\u51fd\u6570\u662f\u518d\u597d\u4e0d\u8fc7\u7684\u4e86\u3002\n\n$pos(s,x)=1$\u8868\u793a\u5b57\u7b26\u4e32$s$\u662f\u5b57\u7b26\u4e32$x$\u7684\u5b50\u4e32\uff0c\u5e76\u4e14\u5b83\u5c31\u5728$x$\u7684\u5f00\u5934\u3002\n\n```pascal\nvar\n    min,s,x:string;\n    n,i:longint;\nbegin\n    readln(s);\n    min:='|'; //|\u7684ASCII\u7801\u503c\u6bd4'z'\u7684\u66f4\u5927\uff0c\u53ef\u4ee5\u4f5c\u4e3amin\u7684\u521d\u503c\n    readln(n);\n    for i:=1 to n do\n    begin\n        readln(x);\n        if pos(s,x)=1 then //\u524d\u6587\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\n            if x<min then min:=x; //\u6bd4\u5f53\u524d\u6700\u4f18\u89e3\u7684\u5b57\u5178\u5e8f\u66f4\u5c0f\u624d\u80fd\u66f4\u65b0\u6700\u4f18\u89e3\n    end;\n    if min<>'|' then writeln(min) //\u5982\u679c\u627e\u5230\u4e86\u7b54\u6848\n    else writeln(s); //\u6ca1\u6709\u5b57\u7b26\u4e32\u6ee1\u8db3\u8981\u6c42\nend.\n```",
        "postTime": 1527306423,
        "uid": 38785,
        "name": "icyM3tra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF53A \u3010Autocomplete\u3011"
    }
]