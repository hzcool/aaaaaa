[
    {
        "content": "## [\u539f\u9898\u94fe\u63a5](http://codeforces.com/problemset/problem/678/F)\n\n## \u9898\u76ee\u5927\u610f\n$n$ \u6b21\u64cd\u4f5c\uff0c\u652f\u6301\uff1a\n1. \u63d2\u5165\u4e00\u4e2a\u70b9 $(a_i,b_i)$\u3002\n2. \u5220\u9664\u4e00\u4e2a\u70b9 $i$\u3002\n3. \u5f53\u524d\u96c6\u5408\u4e2d $a_ix+b_i$ \u6700\u5927\u503c\u662f\u591a\u5c11\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n$$a_1x+b_1\\leq a_2x+b_2(a_1<a_2)$$\n$$\\Leftrightarrow (a_1-a_2)x\\leq b_2-b_1$$\n$$\\Leftrightarrow -x\\leq \\frac{b_1-b_2}{a_1-a_2}$$\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u7b49\u4ef7\u4e8e\u4e24\u70b9\u4e4b\u95f4\u7684\u659c\u7387\uff08\u7684\u76f8\u53cd\u6570\uff09\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u968f\u7740 $x$ \u7684\u589e\u957f\u53ef\u4ee5\u770b\u6210\u4e00\u6761\u659c\u7387\u4e3a $-x$ \u7684\u76f4\u7ebf\u53bb\u5207\u8fd9\u4e2a\u51f8\u5305\u3002\n\n\u4e00\u79cd\u5f88\u660e\u663e\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u7ef4\u62a4\u4e0a\u51f8\u5305\uff0c\u4e8c\u5206\u659c\u7387\u3002\n\n\u4f46\u662f\u8fd9\u6837\u9700\u8981\u5e73\u8861\u6811\uff0c\u800c\u4e14\u5f88\u96be\u5199\u3002\n\n\u6309\u7167\u5957\u8def\uff0c\u6211\u4eec\u628a\u64cd\u4f5c\u79bb\u7ebf\uff0c\u7136\u540e\u4f7f\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u628a\u6bcf\u4e2a\u70b9\u6709\u6548\u7684\u533a\u95f4\u63d2\u5165\u5230\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u4e0a\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u6240\u6709\u7ebf\u6bb5\u6811\u4e0a\u7684\u70b9\u5efa\u51fa\u5bf9\u5e94\u7684\u51f8\u5305\u3002\u76f4\u63a5\u66b4\u529b\u4e8c\u5206\u659c\u7387\u5c31\u53ef\u4ee5\u505a\u5230 $O(n\\log^2 n)$\u3002\n\n\u8003\u8651\u4f18\u5316\u3002\u9996\u5148\u5efa\u51f8\u5305\u7684\u90e8\u5206\u74f6\u9888\u5728\u4e8e\u6392\u5e8f\u3002\u800c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u6c42\u4e00\u904d\u6392\u5e8f\uff0c\u590d\u6742\u5ea6\u4f1a\u53d8\u6210 $O(n\\log^2 n)$\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u63d2\u5165 $O(n)$ \u79cd\u4e0d\u540c\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u628a\u8fd9\u4e9b\u70b9\u79bb\u7ebf\u6392\u597d\u5e8f\uff0c\u518d\u4f9d\u6b21\u63d2\u5165\u3002\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log n)$ \u7684\u3002\n\n\u7136\u540e\u8003\u8651\u5904\u7406\u4e8c\u5206\u90e8\u5206\u7684\u74f6\u9888\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b9e\u9645\u4e0a\u968f\u7740 $x$ \u7684\u589e\u5927\uff0c\u51f8\u5305\u4e0a\u5173\u952e\u70b9\u7684\u79fb\u52a8\u4e00\u5b9a\u662f\u5355\u8c03\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u7136\u540e\u6309 $x$ \u9012\u589e\u987a\u5e8f\u5904\u7406\uff0c\u6bcf\u6b21\u8d2a\u5fc3\u627e\u5230\u5cf0\u503c\uff0c\u8fd9\u6837\u51f8\u5305\u4e0a\u6bcf\u4e2a\u70b9\u6700\u591a\u8bbf\u95ee\u4e00\u6b21\uff0c\u590d\u6742\u5ea6 $O(\\text{\u51f8\u5305\u4e0a\u70b9\u6570}+n\\log n)=O(n\\log n)$\u3002\n\n\u8fd9\u6837\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u4f46\u4f17\u6240\u5468\u77e5\u8fd0\u884c\u6548\u7387\u4e0e\u7406\u8bba\u590d\u6742\u5ea6\u6ca1\u6709\u5173\u7cfb\uff0c\u4e0a\u8ff0\u5b9e\u73b0\u65b9\u5f0f\u5e38\u6570\u5de8\u5927\uff0c\u76f4\u63a5\u88ab $O(n\\log^2 n)$ \u540a\u6253\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\n#define N 300010\n#define inf 2000000000000000000\n#define ll long long\n#pragma GCC optimize(2,3)\nusing namespace std;\nstruct node{\n    ll x,y;\n    node(ll X=0,ll Y=0):x(X),y(Y){}\n    node operator +(node a){return node(x+a.x,y+a.y);}\n    node operator -(node a){return node(x-a.x,y-a.y);}\n    ll operator *(node a){return x*a.y-y*a.x;}\n    bool operator <(const node a)const{return x==a.x?y<a.y:x<a.x;}\n};\nll cross(node a,node o,node b){return (a-o)*(b-o);}\nnode tmp[N];\nll calc(node a,ll k){return a.x*k+a.y;}\nstruct convex{\n    vector<node>v;\n    int pos;\n    void push(node a){v.push_back(a);}\n    void init()\n    {\n        int t=0;pos=0;\n        for(node u:v)\n        {\n            while(t>1 && cross(tmp[t-1],tmp[t],u)<=0) --t;\n            tmp[++t]=u;\n        }\n        v.clear();\n        for(int i=1;i<=t;i++) v.push_back(tmp[i]);\n    }\n    ll answer(ll k)\n    {\n        if(v.empty()) return -inf;\n        if(pos+1==v.size()) return calc(v[pos],k);\n        while(pos+1<v.size() && calc(v[pos],k)<=calc(v[pos+1],k)) pos++;\n        return calc(v[pos],k);\n    }\n}t[N<<2];\nvoid insert(int u,int l,int r,int L,int R,node v)\n{\n    if(L<=l && r<=R){t[u].push(v);return;}\n    int mid=(l+r)>>1;\n    if(L<=mid) insert(u<<1,l,mid,L,R,v);\n    if(R>mid) insert(u<<1|1,mid+1,r,L,R,v);\n}\nll answer(int u,int l,int r,int p,ll v)\n{\n    ll ans=t[u].answer(v);\n    if(l==r) return ans;\n    int mid=(l+r)>>1;\n    if(p<=mid) return max(ans,answer(u<<1,l,mid,p,v));\n    else return max(ans,answer(u<<1|1,mid+1,r,p,v));\n}\nstruct ques{\n    int p;ll k,ans;\n    bool operator <(const ques a)const{return k<a.k;}\n}q[N];\nbool cmp(ques a,ques b){return a.p<b.p;}\nint qt=0;\nstruct nodes{\n    node p;int l,r;\n    bool operator <(const nodes a)const{return p<a.p;}\n}rem[N];\nbool has[N];\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        int opt;ll x,y;\n        scanf(\"%d%lld\",&opt,&x);\n        if(opt==1)\n        {\n            scanf(\"%lld\",&y);\n            rem[i].p=node(x,y);has[i]=true;\n            rem[i].l=i;\n        }\n        else if(opt==2) rem[x].r=i,has[x]=false;\n        else q[++qt]=(ques){i,x};\n    }\n    for(int i=1;i<=n;i++) if(has[i]) rem[i].r=n;\n    sort(rem+1,rem+n+1);\n    for(int i=1;i<=n;i++)\n    if(rem[i].r) insert(1,1,n,rem[i].l,rem[i].r,rem[i].p);\n    for(int i=1;i<=2*n-1;i++) t[i].init();\n    sort(q+1,q+qt+1);\n    for(int i=1;i<=qt;i++) q[i].ans=answer(1,1,n,q[i].p,q[i].k);\n    sort(q+1,q+qt+1,cmp);\n    for(int i=1;i<=qt;i++)\n    if(q[i].ans<=-inf) puts(\"EMPTY SET\");\n    else printf(\"%lld\\n\",q[i].ans);\n    return 0;\n}\n```",
        "postTime": 1605529311,
        "uid": 52902,
        "name": "Flying2018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF678F \u3010Lena and Queries\u3011"
    },
    {
        "content": "\u5982\u679c\u6ca1\u6709\u5220\u9664\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u70b9\u5bf9\u770b\u4f5c\u7ebf\u6bb5\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u662f[\u674e\u8d85\u6811](https://oi-wiki.org/ds/li-chao-tree/)\u677f\u5b50\uff0c\u4f46\u662f\u674e\u8d85\u6811\u4e0d\u652f\u6301\u5220\u9664\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\n\n\u6309\u65f6\u95f4\u5f00\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u674e\u8d85\u6811\uff0c\u540c\u65f6\u8bb0\u5f55\u6bcf\u6761\u7ebf\u6bb5\u5b58\u5728\u7684\u65f6\u95f4\uff0c\u82e5\u5b58\u5728\u65f6\u95f4\u4e3a $[l_i,r_i]$\uff0c\u5c31\u7ed9 $[l_i,r_i]$ \u8fd9\u6bb5\u65f6\u95f4\u6240\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u533a\u95f4\u4e0a\u7684\u6240\u6709\u674e\u8d85\u6811\u63d2\u5165\u8fd9\u6761\u7ebf\u6bb5\u3002\n\n\u67e5\u8be2\u65f6\u53ea\u9700\u8981\u67e5\u8be2\u7ebf\u6bb5\u6811\u4ece\u6839\u5230\u5f53\u524d\u65f6\u95f4\u5bf9\u5e94\u7684\u53f6\u5b50\u8fd9\u6761\u94fe\u4e0a\u7684\u6240\u6709\u674e\u8d85\u6811\uff0c\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6bcf\u6b21\u63d2\u5165\u6700\u591a\u53ea\u4f1a\u5f71\u54cd\u5230\u7ebf\u6bb5\u6811\u4e0a $O(\\log n)$ \u4e2a\u8282\u70b9\uff0c\u4e00\u9897\u674e\u8d85\u6811\u6bcf\u63d2\u5165\u4e00\u6761\u7ebf\u6bb5\u6700\u591a\u53ea\u4f1a\u65b0\u589e\u4e00\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n\\log V)$\uff0c\u5176\u4e2d $V$ \u4e3a\u503c\u57df\u5927\u5c0f\u3002\n\n```cpp\nconst int N=3e5+10;\nint n,op[N],k[N],b[N],l[N],r[N],ans[N],rt[N<<2],tot,pos[N];\nstruct node{\n    int ls,rs,id;\n}tr[N*40];\n\ninline ll at(int i,int x){return (ll)k[i]*x+b[i];}\n\n#define mid ((l+r)>>1)\nvoid chg(int &x,int l,int r,int p){\n    if(!x) x=++tot;\n    if(!tr[x].id) return tr[x].id=p,void();\n    if(at(p,mid)>at(tr[x].id,mid)) swap(p,tr[x].id);\n    if(at(p,l)>at(tr[x].id,l)) chg(tr[x].ls,l,mid,p);\n    if(at(p,r)>at(tr[x].id,r)) chg(tr[x].rs,mid+1,r,p);\n}\nll que(int x,int l,int r,int p){\n    if(!x) return LLONG_MIN; if(l==r) return at(tr[x].id,p);\n    return max(p<=mid?que(tr[x].ls,l,mid,p):que(tr[x].rs,mid+1,r,p),at(tr[x].id,p));\n}\n\n#define ls (x<<1)\n#define rs (x<<1|1)\nvoid build(int x,int l,int r){\n    if(l==r) return pos[l]=x,void(); build(ls,l,mid),build(rs,mid+1,r);\n}\nvoid chg(int x,int l,int r,int p,int q,int k){\n    if(l==p&&r==q) return chg(rt[x],-1e9,1e9,k);\n    if(q<=mid) chg(ls,l,mid,p,q,k);\n    else if(p>mid) chg(rs,mid+1,r,p,q,k);\n    else chg(ls,l,mid,p,mid,k),chg(rs,mid+1,r,mid+1,q,k);\n}\n\nsigned main(){\n    n=read(),build(1,1,n);\n    for(int i=1;i<=n;++i){\n        op[i]=read();\n        if(op[i]==1) k[i]=read(),b[i]=read(),l[i]=i,r[i]=n;\n        else if(op[i]==2) r[read()]=i; else k[i]=read();\n    }\n    for(int i=1;i<=n;++i) if(op[i]==1) chg(1,1,n,l[i],r[i],i);\n    for(int i=1;i<=n;++i) if(op[i]==3){\n        ll ans=LLONG_MIN;\n        for(int x=pos[i];x;x>>=1) ans=max(ans,que(rt[x],-1e9,1e9,k[i]));\n        ans==LLONG_MIN?puts(\"EMPTY SET\"):printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1660006983,
        "uid": 336653,
        "name": "include_BM",
        "ccfLevel": 0,
        "title": "CF678F Lena and Queries"
    },
    {
        "content": "\u672c\u9898\u7684\u4e09\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u5206\u522b\u770b\u4f5c\uff1a\n- $1$\uff1a\u5728\u96c6\u5408\u4e2d\u52a0\u5165\u4e00\u6761\u659c\u7387\u4e3a $x$\uff0c\u7eb5\u622a\u8ddd\u4e3a $y$ \u7684\u76f4\u7ebf\u3002\n- $2$\uff1a\u5220\u9664\u96c6\u5408\u4e2d\u7684\u4e00\u6761\u76f4\u7ebf\u3002\n- $3$\uff1a\u6c42\u6b64\u65f6\u6240\u6709\u96c6\u5408\u4e2d\u6240\u6709\u76f4\u7ebf\u5728 $k$ \u5904\u7684\u6700\u5927\u503c\u3002  \n\n\u64cd\u4f5c $1,3$ \u5747\u5bb9\u6613\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4f46\u674e\u8d85\u7ebf\u6bb5\u6811\u96be\u4ee5\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u56e0\u4e3a\u672c\u9898\u6ca1\u6709\u8981\u6c42\u5f3a\u5236\u5728\u7ebf\uff0c\u8003\u8651\u79bb\u7ebf\u4e71\u641e\u3002  \n\u53d1\u73b0\u5728 $t1$ \u65f6\u523b\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\u4e0e\u5728 $t2$ \u65f6\u523b\u5220\u9664\u4e00\u6761\u7ebf\u6bb5\u53ef\u4ee5\u770b\u6210\u5728 $[t1,t2]$ \u65f6\u95f4\u5185\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5927\u529b\u6811\u5957\u6811\uff0c\u5916\u5c42\u4ee5\u65f6\u95f4\u4e3a\u4e0b\u6807\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u5904\u5efa\u4e00\u68f5\u52a8\u6001\u5f00\u70b9\u674e\u8d85\u6811\uff0c\u5148\u5c06\u6240\u6709\u7ebf\u6bb5\u6302\u5728\u7ebf\u6bb5\u6811\u4e0a\uff0c\u518d\u4f9d\u6b21\u67e5\u8be2\u5373\u53ef\u3002  \n\u56e0\u4e3a\u52a8\u6001\u5f00\u70b9\u674e\u8d85\u6811\u7684\u8282\u70b9\u6570\u4e0e\u63d2\u5165\u7684\u7ebf\u6bb5\u6570\u76f8\u7b49\uff0c\u6b64\u65f6\u7684\u7a7a\u95f4\u4e3a $O(n \\log n)$ \u7ea7\u522b\uff0c\u5df2\u7ecf\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002  \n\u4f46\u5982\u679c\u6211\u4eec\u91c7\u7528\u4e00\u4e9b\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u6b64\u65f6\u8fd8\u53ef\u4ee5\u5c06\u7a7a\u95f4\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\u5c06\u67d0\u4e00\u533a\u95f4\u5185\u7684\u6240\u6709\u8be2\u95ee\u4e00\u6b21\u5904\u7406\u5b8c\uff0c\u6b64\u65f6\u8be5\u533a\u95f4\u53ca\u5176\u5b50\u533a\u95f4\u5185\u7684\u674e\u8d85\u6811\u5747\u6ca1\u6709\u673a\u4f1a\u518d\u7528\u5230\u4e86\uff0c\u4fbf\u53ef\u4ee5\u5c06\u8282\u70b9\u56de\u6536\u3002\u6b64\u65f6\u53ea\u6709\u7ebf\u6bb5\u6811\u4e0a\u7684\u67d0\u4e00\u53f6\u5b50\u5230\u6839\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u5206\u522b\u5b58\u6709\u4e00\u68f5\u674e\u8d85\u6811\uff0c\u6839\u636e\u7ebf\u6bb5\u6811\u7684\u6027\u8d28\u53ef\u77e5\u4e00\u6761\u7ebf\u6bb5\u81f3\u591a\u5728\u8fd9\u4e9b $ \\log n $ \u4e2a\u8282\u70b9\u4e2d\u7684\u4e00\u4e2a\u4e0a\u7684\u674e\u8d85\u6811\u6240\u63d2\u5165\uff0c\u6b64\u65f6\u7a7a\u95f4\u662f\u975e\u5e38\u4f18\u79c0\u7684 $O(n)$ \u7ea7\u522b\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n \\log V)$\uff0c$V$ \u4e3a\u503c\u57df\u3002  \n\n## code\n```cpp\n//by xyloph0nex17\n#include<bits/stdc++.h>\n#define ri int\n#define db double\n#define mid ((l + r) >> 1)\n#define pb push_back\n#define pii pair<int,int>\n#define ll long long\n#define int long long\nconst int N = 3e5 + 10 ;\nconst int M = 1e6 + 10 ;\nconst ll inf = 9e18 ;\nconst int mod = 998244353 ;\nusing namespace std ;\ntemplate <typename T>\ninline void read(T&x){\n\tx = 0 ; bool flg = 1 ; char c = getchar() ;\n\twhile(c > '9' || c < '0'){\n\t\tif(c == '-')\n\t\tflg = 0 ;\n\t\tc = getchar() ;\n\t}\n\twhile(c >= '0' && c <= '9'){\n\t\tx = (x << 1) + (x << 3) + (c ^ 48) ;\n\t\tc = getchar() ;\n\t}\n\tx = flg ? x : -x ;\n}\nint rt[N<<2],n ;\nll ans[N] ;\nvector<int>vc[N<<2] ;\nstruct qs{int pos,k;};\nvector<qs>q[N<<2] ;\nstruct node{\n\tint id,ls,rs ;\n\tinline void clear(){id=ls=rs=0;}\n}tr[N*10] ;\nint trn,stk[N],top ;\nint newnode(){if(top)return tr[stk[top]].clear(),stk[top] ; else return ++trn ;}\nstruct line{\n\tll k,b,l,r ;\n\tll val(int x){return k * x + b ;}\n}L[N] ;\nvoid chg2(int &x,int l,int r,int id){\n\tif(!x)x = ++trn , tr[x].clear() ;\n\tif(!tr[x].id)return tr[x].id=id,void() ;\n\telse{\n\t\tint pid = tr[x].id ;\n\t\tif(L[pid].val(mid) < L[id].val(mid)){\n\t\t\ttr[x].id = id ;\n\t\t\tif(L[pid].val(l) > L[id].val(l))chg2(tr[x].ls,l,mid,pid) ;\n\t\t\tif(L[pid].val(r) > L[id].val(r))chg2(tr[x].rs,mid+1,r,pid) ;\n\t\t}\n\t\telse{\n\t\t\tif(L[id].val(l) > L[pid].val(l))chg2(tr[x].ls,l,mid,id) ;\n\t\t\tif(L[id].val(r) > L[pid].val(r))chg2(tr[x].rs,mid+1,r,id) ;\n\t\t}\n\t}\n}\nll qry2(int x,int l,int r,int pos){\n\tif(!tr[x].id)return -inf ;\n\tif(pos <= mid)return max(L[tr[x].id].val(pos),qry2(tr[x].ls,l,mid,pos)) ;\n\telse return max(L[tr[x].id].val(pos),qry2(tr[x].rs,mid+1,r,pos)) ; \n}\n#define ls x << 1\n#define rs x << 1 | 1\nvoid chg1(int x,int l,int r,int L,int R,int k){\n\tif(L <= l && r <= R)return vc[x].pb(k),void() ;\n\tif(L <= mid)chg1(ls,l,mid,L,R,k) ;\n\tif(mid < R)chg1(rs,mid+1,r,L,R,k) ;\n}\nvoid add(int x,int l,int r,int pos,int k){\n\tq[x].pb({pos,k}) ;\n\tif(l == r)return ;\n\tif(pos <= mid)add(ls,l,mid,pos,k) ;\n\telse add(rs,mid+1,r,pos,k) ;\n}\nvoid qry1(int x,int l,int r){\n\tif(!q[x].size())return ;\n\tint tmp = trn ;\n\tfor(ri i = 0 ; i < (int)vc[x].size() ; i++)chg2(rt[x],-1e9,1e9,vc[x][i]) ;\n\tfor(ri i = 0 ; i < (int)q[x].size() ; i++)ans[q[x][i].pos] = max(ans[q[x][i].pos],qry2(rt[x],-1e9,1e9,q[x][i].k)) ;\n\tif(l == r){if(ans[l]==-inf)puts(\"EMPTY SET\");else printf(\"%lld\\n\",ans[l]); return;}\n\tqry1(ls,l,mid),qry1(rs,mid+1,r) ;\n\ttrn = tmp ;\n}\n#undef ls\n#undef rs\nsigned main(){\n\tread(n) ;\n\tfor(ri i = 1 , opt , k , b ; i <= n ; i++){\n\t\tread(opt) ;\n\t\tif(opt == 1)read(k),read(b),L[i].k = k,L[i].b=b,L[i].l=i,L[i].r=n ;\n\t\telse if(opt == 2)read(k),L[k].r = i - 1 ;\n\t\telse read(k),add(1,1,n,i,k),ans[i]=-inf ;\n\t}\n\tfor(ri i = 1 ; i <= n ; i++)if(L[i].l==i)chg1(1,1,n,L[i].l,L[i].r,i) ;\n\tqry1(1,1,n) ;\n\treturn 0 ;\n}\n```",
        "postTime": 1659972825,
        "uid": 519204,
        "name": "xyloph0nex17",
        "ccfLevel": 7,
        "title": "CF678F"
    },
    {
        "content": "\u9996\u5148\u9898\u610f\u4e2d\u7684\u6709\u64a4\u9500\u64cd\u4f5c\uff0c\u76f4\u63a5\u674e\u8d85\u6811\u80af\u5b9a\u4e0d\u884c\uff0c\u9898\u76ee\u5141\u8bb8\u79bb\u7ebf\uff0c\u6240\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u5206\u6cbb\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6c42\u4e00\u6b21\u51fd\u6570\u6700\u5927\u503c\n\n\u8fd9\u4e0d\u662f\u674e\u8d85\u6811\u677f\u5b50\u5417\uff1f\uff1f\uff1f\n\n\u7136\u540e\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u8282\u70b9\u90fd\u5efa\u7acb\u52a8\u6001\u5f00\u70b9\u674e\u8d85\u6811\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u4ece\u53f6\u5b50\u8282\u70b9\u8df3\u5230\u6839\u8282\u70b9\u5c31\u597d\u4e86\n\n\u4f46\u662f\u76f4\u63a5\u8fd9\u6837\u505a\u7684\u8bdd\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u662f $ O(n\\log n\\log V) $ \u7684\uff0c\u7a7a\u964d\u5c06\u8fd1 1.2GB\uff0c\u4f1a\u88ab\u76f4\u63a5\u5361\u6389\n\n\u4f18\u5316\u5c31\u662f\uff0c\u53ea\u4fdd\u7559\u76ee\u524d\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8282\u70b9\u7684\u674e\u8d85\u6811\uff08\u56e0\u4e3a\u53ea\u6709\u8fd9\u4e9b\u7528\u5f97\u4e0a\uff09\uff0c\u7136\u540e\u5728 $ O(\\log n) $ \u4e2a\u674e\u8d85\u6811\u4e2d\u67e5\u8be2\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86 $ O(n\\log V) $\u3002\u5982\u679c\u60f3\u8dd1\u5f97\u5feb\u4e00\u70b9\u513f\u7684\u8bdd\u53ef\u4ee5\u628a\u674e\u8d85\u6811\u53ef\u6301\u4e45\u5316\uff0c\u867d\u7136\u8bf4\u590d\u6742\u5ea6\u4ecd\u7136\u662f $ O(n\\log n\\log V) $ \u7684\u3002\n\n\u4e0d\u8fc7\u6211\u5012\u662f\u53ef\u6301\u4e45\u5316\u4e86\uff0c\u611f\u89c9\u7801\u91cf\u90fd\u5dee\u4e0d\u591a\uff08\n\n\u5410\u69fd\u4e00\u4e0b\uff0c\u4e3a\u5565\u674e\u8d85\u6811\u7684\u6548\u7387\u548c\u7ef4\u62a4\u51f8\u5305\u7684\u6548\u7387\u5dee\u4e0d\u591a\u554a\uff08\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<vector>\ntypedef long long ll;\nconst int M=3e5+5,V=1e9;\nconst ll INF=0x7fffffffffffffff;\nint n,tot,root,k[M],opt[M],t[M*50],chi[M*50][2];ll ans[M];\nstd::vector<int>id[M<<2];\nstruct line{\n\tint k,b;\n\tline(const int&x=0,const int&y=0):k(k),b(b){}\n\tinline ll get(const int&x)const{\n\t\treturn 1ll*k*x+b;\n\t}\n}p[M];\ninline void swap(int&a,int&b){\n\tint c=a;a=b;b=c;\n}\ninline ll max(const ll&a,const ll&b){\n\treturn a>b?a:b;\n}\nint Modify(int u,int id,int L=0,int R=V*2){\n\tif(!u)return t[++tot]=id,tot;\n\tint mid=(1ll*L+R)*.5,now=++tot;\n\tt[now]=t[u];chi[now][0]=chi[u][0];chi[now][1]=chi[u][1];\n\tif(p[id].get(mid-V)>p[t[now]].get(mid-V))swap(id,t[now]);\n\tif(p[t[now]].get(L-V)>p[id].get(L-V)&&p[t[now]].get(R-V)>p[id].get(R-V))return now;\n\tif(p[id].get(L-V)>p[t[now]].get(L-V))return chi[now][0]=Modify(chi[u][0],id,L,mid),now;\n\telse return chi[now][1]=Modify(chi[u][1],id,mid+1,R),now;\n}\nll Query(int u,int x,int L=0,int R=V*2){\n\tif(!u)return-INF;\n\tif(L==R)return p[t[u]].get(x-V);\n\tint mid=(1ll*L+R)*.5;\n\tif(x<=mid)return max(p[t[u]].get(x-V),Query(chi[u][0],x,L,mid));\n\telse return max(p[t[u]].get(x-V),Query(chi[u][1],x,mid+1,R));\n}\nvoid modify(int u,int d,int l,int r,int L=1,int R=n){\n\tif(l>R||L>r)return;\n\tif(l<=L&&R<=r)return id[u].push_back(d);\n\tint mid=L+R>>1;\n\tmodify(u<<1,d,l,r,L,mid);modify(u<<1|1,d,l,r,mid+1,R);\n}\nvoid Solve(int u=1,int L=1,int R=n){\n\tint lroot=root,ltot=tot;\n\tfor(int&L:id[u])root=Modify(root,L);\n\tif(L<R){\n\t\tint mid=L+R>>1;\n\t\tSolve(u<<1,L,mid);Solve(u<<1|1,mid+1,R);\n\t}\n\telse if(opt[L]==3)ans[L]=root?Query(root,k[L]+V):-INF;\n\twhile(tot>ltot)chi[tot][0]=chi[tot][1]=t[tot]=0,--tot;root=lroot;\n}\nsigned main(){\n\tregister int i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;++i){\n\t\tscanf(\"%d\",opt+i);\n\t\tif(opt[i]==1)scanf(\"%d%d\",&p[i].k,&p[i].b),k[i]=n;\n\t\tif(opt[i]==2)scanf(\"%d\",k+i),k[k[i]]=i;\n\t\tif(opt[i]==3)scanf(\"%d\",k+i);\n\t}\n\tfor(i=1;i<=n;++i)if(opt[i]==1)modify(1,i,i,k[i]);\n\tSolve();\n\tfor(i=1;i<=n;++i){\n\t\tif(opt[i]==3){\n\t\t\tif(ans[i]==-INF)printf(\"EMPTY SET\\n\");\n\t\t\telse printf(\"%lld\\n\",ans[i]);\n\t\t}\n\t}\n}\n```",
        "postTime": 1625644177,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u636e\u7ed3\u6784+\u5206\u6cbb \u674e\u8d85\u7ebf\u6bb5\u6811+\u7ebf\u6bb5\u6811\u5206\u6cbb CF678F\u9898\u89e3"
    },
    {
        "content": "# Lena and Queries\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF678F)\n## \u9898\u76ee\u5927\u610f\n$n$\u4e2a\u64cd\u4f5c:\n\n1. \u6dfb\u52a0\u4e00\u5bf9$(x,y)$\u8fdb\u5165\u96c6\u5408\n\n2. \u5220\u9664\u7b2c$k$\u4e2a\u64cd\u4f5c\u6240\u6dfb\u52a0\u7684\u6570\u5bf9\uff0c\u4fdd\u8bc1\u7b2c$k$\u4e2a\u64cd\u4f5c\u662f\u64cd\u4f5c1\u4e14\u5bf9\u5e94\u7684\u6570\u5bf9\u672a\u88ab\u5220\u9664\n\n3. \u7ed9\u5b9a\u53c2\u6570$k$\u6c42\u96c6\u5408\u4e2d$kx+y$\u7684\u6700\u5927\u503c\n\n## \u601d\u8def\n\u6211\u8fd9\u9053\u9898\u56e0\u4e3a$\\text {static int}$\u7684\u4e00\u4e2a\u7ec6\u8282\u95ee\u9898$\\text {WA}$ $n^+$\u6b21\uff0c\u5dee\u70b9\u81ea\u95ed\u4e86\uff0c\u53ea\u597d\u628a\u7f51\u4e0a\u7684\u9898\u89e3\u9b54\u6539\u6210\u81ea\u5df1\u7684\u4ee3\u7801\u7684\u6837\u5b50\uff0c\u5728\u9519\u4e86$12$\u6b21\u7ec8\u4e8e\u53d1\u73b0\u9505\u4e86\u3002\u3002\u3002\n\n\u5f00\u59cb\u6b63\u8a00\u5427\u3002\u9996\u5148\u4e0d\u96be\u60f3\u5230\u7684\u5c31\u662f\u659c\u7387\u4f18\u5316\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u8fd9\u4e2a\u4e1c\u897f\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e2a\u51f8\u5305\u5c31\u597d\u4e86\u3002\n\n\u597d\u4e86\uff0c\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u5982\u4f55\u7ef4\u62a4\u5462\uff1f\u4e00\u5f00\u59cb\u6211sx\u5730\u4ee5\u4e3a\u76f4\u63a5\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u659c\u7387\u5c31\u597d\u4e86\u3002\u7ed3\u679c\uff0c\u53d1\u73b0\u52a0\u5165\u70b9\u7684\u65f6\u5019\u5c31\u4e0d\u597d\u7ef4\u62a4\u4e86\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u4e0b\u6765\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u89e3\u51b3\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u5f88\u597d\u7ef4\u62a4\u51f8\u5305\u4e86\u3002\n\n\u90a3\u5982\u4f55\u67e5\u8be2\u7b54\u6848\u5462\uff1f\u56e0\u4e3a\u8fd9\u662f\u51f8\u5305\uff0c\u6240\u4ee5\u6211\u4eec\u5982\u679c\u8981\u7b97\u4e00\u4e2a\u65f6\u95f4\u6bb5\u7684\u7b54\u6848\u5c31\u76f4\u63a5\u4e09\u5206\u5c31\u597d\u4e86\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u7b54\u6848\u5b9e\u9645\u4e0a\u7b97$[1,x]$\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5c31\u597d\u4e86\uff0c\u5e38\u6570\u4f1a\u5c11\u4e00\u4e9b\u3002\u7ed3\u679c\u65f6\u95f4\u8fd8\u662f\u88ab\u4e00\u5806\u5de8\u4f6c\u540a\u6253\u3002\u3002\u3002\n\n\u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta(n\\log^2 n)$\uff08\u5047\u8bbe$n,m$\u540c\u9636\uff09\u3002\n## $\\text {Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define int long long\n#define MAXN 300010\n#define INF 2e18 \n\ntemplate <typename T> inline void read (T &t){t = 0;char c = getchar();int f = 1;while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}while (c >= '0' && c <= '9'){t = (t << 3) + (t << 1) + c - '0';c = getchar();} t *= f;}\ntemplate <typename T,typename ... Args> inline void read (T &t,Args&... args){read (t);read (args...);}\ntemplate <typename T> inline void write (T x){if (x < 0){x = -x;putchar ('-');}if (x > 9) write (x / 10);putchar (x % 10 + '0');}\n\nstruct Node{\n\tint x,y;\n\tint f (int k){\n\t\treturn x * k + y;\n\t}\n\tbool operator < (const Node &p)const{\n\t\treturn x != p.x ? x < p.x : y < p.y;\n\t}\n};\n\nint n,cnt;\nint q[MAXN][3],opt[MAXN][3];\n\nvector <Node> Tree[MAXN << 1];\n\nvoid update (int l,int r,int tl,int tr,Node oo){\n\tint p = (l + r) | (l != r);\n\tif (l >= tl && r <= tr)\treturn Tree[p].push_back (oo);\n\tint mid = (l + r) >> 1;\n\tif (tl <= mid) update (l,mid,tl,tr,oo);\n\tif (tr > mid) update (mid + 1,r,tl,tr,oo);\n} \n\nbool check (vector <Node> &t,int i,int j,int k){\n\treturn ((t[i].y - t[j].y) * (t[k].x - t[i].x) >= (t[i].y - t[k].y) * (t[j].x - t[i].x));\n}\n\nvoid maintain (vector <Node> &t){\n\tstatic int S[MAXN],size;vector <Node> tmp;\n\tsort (t.begin(),t.end());\n\tsize = 0;\n\tfor (Int i = 0;i < t.size();++ i){\n\t\twhile ((size && t[S[size]].x == t[i].x) || (size > 1 && check (t,S[size - 1],S[size],i))) size --;\n\t\tS[++ size] = i;\n\t}\n\tfor (Int i = 1;i <= size;++ i) tmp.push_back (t[S[i]]);\n\tt = tmp;\n}\n\nint get (int k,int id){\n\tif (!Tree[id].size()) return -INF;\n\tint l = 0,r = Tree[id].size() - 1;\n\twhile (l < r){\n\t\tint mid = (l + r) >> 1;\n\t\tif (Tree[id][mid].f (k) > Tree[id][mid + 1].f (k)) r = mid;\n\t\telse l = mid + 1;\n\t}\n\treturn Tree[id][l].f (k);\n}\n\nint calc (int l,int r,int k,int pos){\n\tint res = -INF;\n\twhile (l < r){\n\t\tint p = (l + r) | (l != r),mid = (l + r) >> 1;\n\t\tres = max (res,get (k,p));\n\t\tif (pos <= mid) r = mid;\n\t\telse l = mid + 1;\n\t}\n\treturn res = max (res,get (k,(l + r) | (l != r)));\n}\n\nsigned main(){\n\tread (n);\n\tfor (Int i = 1,op;i <= n;++ i){\n\t\tread (op,opt[i][1]);\n\t\tif (op == 1) read (opt[i][2]);\n\t\telse if (op == 2){\n\t\t\tint x = opt[i][1];\n\t\t\tupdate (1,n,x,i,Node {opt[x][1],opt[x][2]});\n\t\t\topt[x][1] = opt[i][1] = INF;\n\t\t}\n\t\telse{\n\t\t\tq[++ cnt][1] = opt[i][1];\n\t\t\tq[cnt][2] = i,opt[i][1] = INF;\n\t\t}\n\t}\n\tfor (Int i = 1;i <= n;++ i) if (opt[i][1] != INF) update (1,n,i,n,Node {opt[i][1],opt[i][2]});\n\tfor (Int i = 1;i <= (n << 1);++ i)  if (Tree[i].size()) maintain (Tree[i]);\n\tfor (Int i = 1;i <= cnt;++ i){\n\t\tint res = calc (1,n,q[i][1],q[i][2]);\n\t\tif (res == -INF) puts (\"EMPTY SET\");\n\t\telse write (res),putchar ('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1587392552,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF678F \u3010Lena and Queries\u3011"
    },
    {
        "content": "## CF678F\n\n### \u9898\u610f\u7b80\u8ff0\n\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\uff1a\n- \u63d2\u5165\u4e8c\u5143\u7ec4 $(x,y)$\u3002\n\n- \u5220\u9664\u4e00\u4e2a\u4e8c\u5143\u7ec4\u3002\n\n- \u7ed9\u5b9a $q$\uff0c\u6c42 $\\max\\{qx+y\\}$\u3002\n\n\u64cd\u4f5c\u6b21\u6570 $n\\leq 3\\times 10^5$\u3002\n\n### \u9898\u76ee\u5206\u6790\n\u8be2\u95ee\u5206\u5757\u3002\u8003\u8651\u5c06\u4e00\u4e2a\u4e8c\u5143\u7ec4\u52a0\u5165\u5230\u5b83\u7684\u4f5c\u7528\u533a\u95f4\u3002\n\n\u76f8\u5f53\u4e8e\u662f\u5bf9\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u52a0\u5165\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u90a3\u4e48\u6563\u5757\u66b4\u529b\u66f4\u65b0\u7b54\u6848\uff0c\u6574\u5757\u4e0a\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7ef4\u62a4\u51f8\u58f3\uff0c\u6700\u540e\u66f4\u65b0\u6574\u5757\u7684\u7b54\u6848\u3002\n\n\u7ef4\u62a4\u51f8\u58f3\u8981\u6392\u5e8f\u548c\u4e8c\u5206\uff0c\u5e73\u8861\u4e00\u4e0b\u590d\u6742\u5ea6\u662f $O(n\\sqrt{n\\log n})$ \u7684\u3002\u8003\u8651\u5230\u4ed6\u4e0d\u53ef\u80fd\u6bcf\u6b21\u90fd\u662f\u52a0\u5165\uff0c\u624b\u52a8\u8c03\u4e00\u4e0b\u5757\u957f\u53ef\u4ee5\u53d1\u73b0 $3000\\sim 4000$ \u6700\u4f18\u3002\n\nCode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define pll pair<long long,long long>\n#define fi first\n#define se second\nusing namespace std;\nconst int N=3e5+10;\nint n,del[N];\nstruct query\n{\n\tint t,a,b;\n}q[N];\nstruct ConvexHull\n{\n\tvector<pll>v;\n\tll f(pll p,ll x){return p.fi*x+p.se;}\n\tint check(pll A,pll B,pll C)\n\t{\n\t\treturn (B.se-C.se)*(B.fi-A.fi)>(A.se-B.se)*(C.fi-B.fi);\n\t}\n\tvoid ins(int k,int b)\n\t{\n\t\tv.push_back({k,b});\n\t\tint i;\n\t\twhile((i=v.size())>=3&&check(v[i-3],v[i-2],v[i-1]))v[i-2]=v[i-1],v.pop_back();\n\t}\n\tvoid ins(vector<pll>nv)\n\t{\n\t\tsort(nv.begin(),nv.end());\n\t\treverse(nv.begin(),nv.end());\n\t\tfor(auto p:nv)ins(p.fi,p.se);\n\t}\n\tll ask(ll x)\n\t{\n\t\tint l=-1,r=v.size()-1,mid;\n\t\twhile(l+1<r)\n\t\t{\n\t\t\tmid=(l+r)>>1;\n\t\t\tif(f(v[mid],x)<=f(v[mid+1],x))l=mid;\n\t\t\telse r=mid;\n\t\t}\n\t\treturn f(v[r],x);\n\t}\n};\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&q[i].t);\n\t\tif(q[i].t==1)scanf(\"%d%d\",&q[i].a,&q[i].b);\n\t\telse scanf(\"%d\",&q[i].a);\n\t}\n\tint sz=4000;\n\tvector<int>tmp,cur;\n\tfor(int i=1;i<=n;i+=sz)\n\t{\n\t\ttmp.resize(0);ConvexHull ch;\n\t\tfor(int j=i;j<=min(n,i+sz-1);j++)\n\t\t\tif(q[j].t==2&&q[j].a<i)tmp.push_back(q[j].a),del[q[j].a]=2;\n\t\tvector<pll>v;\n\t\tfor(int i:cur)if(!del[i])v.push_back({q[i].a,q[i].b});\n\t\tch.ins(v);\n\t\tfor(int j=i;j<=min(n,i+sz-1);j++)\n\t\t\tif(q[j].t==1)tmp.push_back(j);\n\t\t\telse if(q[j].t==2)del[q[j].a]=1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tll ans=-9e18;\n\t\t\t\tfor(int i:tmp)if(del[i]!=1)ans=max(ans,1ll*q[i].a*q[j].a+q[i].b);\n\t\t\t\tif(v.size())ans=max(ans,ch.ask(q[j].a));\n\t\t\t\tif(ans==-9e18)puts(\"EMPTY SET\");\n\t\t\t\telse printf(\"%lld\\n\",ans);\n\t\t\t}\n\t\tfor(int i:tmp)if(!del[i])cur.push_back(i);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1647513718,
        "uid": 333574,
        "name": "Tyyyyyy",
        "ccfLevel": 7,
        "title": "CF678F\u9898\u89e3"
    },
    {
        "content": "\u597d\u9898\u3002\n\n\u5927\u81f4\u9898\u9762\uff1a\n\n\u52a8\u6001\u52a0\u5165\u5220\u9664\u76f4\u7ebf $kx+b$\uff0c\u67e5\u8be2\u6240\u6709\u76f4\u7ebf\u8fc7\u67d0\u6761\u7ad6\u7ebf $x=p$ \u7684\u6700\u9ad8\u70b9\u3002\n\n\u8fd9\u4e2a\u4e0d\u5e26\u5220\u9664\u663e\u7136\u662f\u674e\u8d85\u6811\u6a21\u677f\u9898\uff0c\u4f46\u662f\u674e\u8d85\u6811\u4e0d\u53ef\u4ee5\u8fdb\u884c\u5220\u9664\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u5206\u6cbb\u6765\u89e3\u51b3\u8fd9\u4e00\u7c7b\u96be\u4ee5\u5220\u9664\u7684\u95ee\u9898\u3002\n\n\u4e00\u4e2a\u4e0d\u6210\u719f\u7684\u60f3\u6cd5\u662f\u628a\u674e\u8d85\u6811\u4ea4\u6362\u8282\u70b9\u7684\u4fe1\u606f\u5b58\u50a8\u5230\u4e86\u6808\u91cc\uff0c\u7136\u540e\u4ea4\u6362\uff0c\u8fd9\u4e2a\u662f\u53ef\u4ee5\u505a\u7684\u3002\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4fdd\u7559\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u60f3\u6cd5\u3002\u56e0\u4e3a\u52a8\u6001\u5f00\u70b9\u674e\u8d85\u6811\u7684\u7a7a\u95f4\u662f $O(n)$ \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u5957\u52a8\u6001\u5f00\u70b9\u674e\u8d85\u6811\uff0c\u7136\u540e\u628a\u5176\u6bcf\u4e00\u6761\u76f4\u7ebf\u5b58\u5728\u7684\u65f6\u95f4\u6bb5\u82e5\u5e72 $[l_i, r_i]$ \u63d2\u5165\u8fd9\u4e00\u6761\u76f4\u7ebf\u3002\n\n\u67e5\u8be2\u5c31\u76f4\u63a5\u67e5\u8be2\u4ece\u8be5\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u5957\u7684\u6240\u6709\u674e\u8d85\u6811\u7684\u8fc7\u8be5\u7ad6\u7ebf\u7684\u6700\u5927\u503c\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u65f6\u95f4 $O(n\\log n \\log v)$\uff0c\u7a7a\u95f4 $O(n\\log n)$ \u6765\u89e3\u51b3\u8fd9\u4e00\u4e2a\u95ee\u9898\uff0c\u4ee3\u7801\u5b9e\u73b0\u662f\u7b80\u6613\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 3e5 + 5, MOD = 998244353;\n\nint n, op[N], k[N], b[N], lp[N], rp[N], rt[N << 2], tot, pos[N];\nint lc[N << 5], rc[N << 5], id[N << 5];\n\ninline long long val (int x, int i) { return 1ll * k[i] * x + b[i]; }\ninline void insert (int & u, int l, int r, int p) {\n\tif (! u) u = ++ tot;\n\tif (! id[u]) return id[u] = p, void();\n\tint mid = (l + r) >> 1;\n\tif (val(mid, p) > val(mid, id[u])) swap(id[u], p);\n\tif (val(l, p) > val(l, id[u])) insert(lc[u], l, mid, p);\n\tif (val(r, p) > val(r, id[u])) insert(rc[u], mid + 1, r, p);\n}\ninline long long query (int u, int l, int r, int p) {\n\tif (! u) return LLONG_MIN;\n\tlong long res = val(p, id[u]);\n\tif (l == r) return res;\n\tint mid = (l + r) >> 1;;\n\tif (p <= mid) return max(res, query(lc[u], l, mid, p));\n\telse return max(res, query(rc[u], mid + 1, r, p));\n}\n\n#define ls u << 1\n#define rs u << 1 | 1\n\ninline void build (int u, int l, int r) { \n\tif (l == r) return pos[l] = u, void(); \n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n}\ninline void assign (int u, int l, int r, int ql, int qr, int x) {\n\tif (ql <= l && r <= qr) insert(rt[u], -1e9, 1e9, x);\n    else {\n\t    int mid = (l + r) >> 1;\n\t    if (ql <= mid) assign(ls, l, mid, ql, qr, x);\n\t    if (qr > mid) assign(rs, mid + 1, r, ql, qr, x);\n    }\n}\nint main () {\n\tios :: sync_with_stdio(0);\n\tcin >> n, build(1, 1, n);\n\tfor (int i = 1, idx; i <= n; i ++) {\n\t\tcin >> op[i];\n\t\tif (op[i] == 1)\tcin >> k[i] >> b[i], lp[i] = i, rp[i] = n;\n\t\telse if (op[i] == 2) cin >> idx, rp[idx] = i;\n\t\telse cin >> k[i];\n\t}\n\tfor (int i = 1; i <= n; i ++) if (op[i] == 1) assign(1, 1, n, lp[i], rp[i], i);\n\tfor (int i = 1; i <= n; i ++)\n\t\tif (op[i] == 3) {\n\t\t\tlong long ans = LLONG_MIN;\n\t\t\tfor (int u = pos[i]; u; u >>= 1) ans = max(ans, query(rt[u], -1e9, 1e9, k[i]));\n\t\t\tif (ans == LLONG_MIN) puts(\"EMPTY SET\");\n\t\t\telse printf(\"%lld\\n\", ans);\n\t\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1683639985,
        "uid": 307535,
        "name": "Cust10",
        "ccfLevel": 6,
        "title": "\u3010CF678F\u3011Lena and Queries"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c\u6709 $x\\times q+y=ans$\u3002\n\n\u53ef\u4ee5\u63a8\u51fa\uff1a $y=-q\\times x+y$\uff0c\u90a3\u4e48\u4e0d\u96be\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u76f4\u7ebf\u89e3\u6790\u5f0f\uff0c\u800c $x,y$ \u5219\u662f\u96c6\u5408\u4e2d\u7684\u70b9\uff0c\u6240\u4ee5\u662f\u56fa\u5b9a\u7684\uff0c\u659c\u7387 $-q$ \u5df2\u7ed9\u51fa\uff0c\u8981\u4f7f $ans$ \u6700\u5927\uff0c\u90a3\u4e48\u622a\u8ddd\uff0c\u5373\u76f4\u7ebf\u4e0e $y$ \u8f74\u4ea4\u70b9\u8d8a\u9ad8\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u60f3\u5230\u7ef4\u62a4\u51f8\u5305\uff0c\u7ef4\u62a4\u51f8\u5305\u65b9\u6cd5\u633a\u591a\uff0c\u5e73\u8861\u6811\u3001\u674e\u8d85\u7ebf\u6bb5\u6811\u6216\u662f cdq \u5176\u5b9e\u90fd\u53ef\u4ee5\uff0c\u4f46\u7531\u4e8e\u5e26\u589e\u52a0\u4e0e\u5220\u9664\uff0c\u6240\u4ee5 cdq \u4e0d\u597d\u5904\u7406\u3002\u770b\u5230\u5220\u9664\u53ef\u4ee5\u9009\u62e9\u5e73\u8861\u6811\uff0c\u4f46\u589e\u52a0\u4e0d\u597d\u7ef4\u62a4\u3002\u770b\u5230\u589e\u52a0\u60f3\u5230\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u4f46\u53c8\u4e0d\u597d\u5220\u9664\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u8f6e\u5230\u6211\u4eec\u4e3b\u89d2\u51fa\u573a\uff1a\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\n\n\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u8fd9\u4e2a\u65f6\u95f4\u5b58\u5728\u7684\u8282\u70b9\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u79bb\u7ebf\u9884\u5904\u7406\u51fa\u6765\u6bcf\u4e2a\u8282\u70b9\u7684\u8fdb\u6765\u548c\u51fa\u53bb\u7684\u65f6\u95f4\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u3002\n\n\u6ce8\u610f\uff1a\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e0d\u4f1a\u8fdb\u884c\u4e0a\u4f20\u4e0e\u4e0b\u653e\u64cd\u4f5c\uff0c\u8282\u70b9\u95f4\u662f\u72ec\u7acb\u7684\u3002\n\n\u90a3\u4e48\u6bcf\u653e\u5165\u4e00\u4e2a\u70b9\uff0c\u7ef4\u62a4\u4e0a\u51f8\u5305\u7684\u6027\u8d28\uff0c\u4fdd\u8bc1\u659c\u7387\u662f\u9012\u51cf\u7684\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u5f39\u51fa\u4e4b\u524d\u7684\u70b9\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u627e\u5230\u8be2\u95ee\u7684\u65f6\u95f4\uff0c\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4ece\u4e0a\u5f80\u4e0b\u627e\uff0c\u7ecf\u8fc7\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5bf9\u8fd9\u4e2a\u8282\u70b9\u4e2d\u7684\u96c6\u5408\u6c42\u4e00\u6b21\u672c\u8be2\u95ee\u7684\u6700\u4f73\u7b54\u6848\uff0c\u5373\u659c\u7387\u6bd4\u524d\u9762\u5c0f\u4e14\u6bd4\u540e\u9762\u5927\u7684\u90a3\u4e2a\u70b9\uff0c\u7136\u540e\u66f4\u65b0\u6240\u6709\u96c6\u5408\u7684\u6700\u5927\u503c\uff0c\u6c42\u8be2\u95ee\u53ef\u4ee5\u5229\u7528\u4e8c\u5206\u6765\u89e3\u51b3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\times\\log_2^2(n))$\u3002\n\n\u4e0d\u591f\u4f18\u79c0\uff0c\u7ee7\u7eed\u4f18\u5316\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6309\u7167\u659c\u7387\u9012\u51cf\u6392\u5e8f\uff0c\u7136\u540e\u5229\u7528\u6bcf\u4e2a\u96c6\u5408\u7684\u5355\u8c03\u6027\uff0c\u5bfb\u627e\u51fa\u7b2c\u4e00\u4e2a\u6700\u4f73\u7b54\u6848\uff0c\u5373\u659c\u7387\u6bd4\u524d\u9762\u5c0f\u6bd4\u540e\u9762\u5927\u7684\u70b9\u3002\u4e0b\u6b21\u66f4\u65b0\u65f6\u5c31\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u5f80\u4e0b\u627e\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\times \\log(n))$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#define int long long\nusing namespace std;\nconst int N=3e5+5;\nint n,id[N],cnt,cnt2,nl,nr,k,lent[4*N],ans[N];\nint num;\nvector<int>f[4*N];\nint t[4*N];\nstruct node\n{\n\tint from,to,x,y;\n}a[N];\nstruct ask\n{\n\tint name,tim,a;\n}q[N];\nint cmp(node fi,node se)\n{\n\tif(fi.x==se.x)return fi.y<se.y;\n\treturn fi.x<se.x;\n}\nint cmp2(ask fi,ask se)\n{\n\treturn -fi.a>-se.a;\n}\ninline int ls(int x)\n{\n\treturn x<<1;\n}\ninline int rs(int x)\n{\n\treturn x<<1|1;\n}\ndouble clac(int x1,int y1,int x2,int y2)\n{\n\tif(x1<=-1e17||x2<=-1e17)return 1e18;\n\tif(x1==x2)return 1e18; \n\treturn 1.0*(y1-y2)/(1.0*(x1-x2));\n}\nvoid build(int x,int l,int r)\n{\n\tf[x].push_back(0);\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(ls(x),l,mid);\n\tbuild(rs(x),mid+1,r);\n}\nvoid update(int x,int l,int r)\n{\n\tif(l>=nl&&r<=nr)\n\t{\n\t\twhile(lent[x]>1&&clac(a[f[x][lent[x]]].x,a[f[x][lent[x]]].y,a[f[x][lent[x]-1]].x,a[f[x][lent[x]-1]].y)<=clac(a[k].x,a[k].y,a[f[x][lent[x]]].x,a[f[x][lent[x]]].y))lent[x]--;\n\t\tint len=f[x].size();\n\t\tif(len-1==lent[x])f[x].push_back(k),lent[x]++;\n\t\telse f[x][++lent[x]]=k;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=nl)update(ls(x),l,mid);\n\tif(mid<nr)update(rs(x),mid+1,r);\n}\nvoid search(int x,int l,int r)\n{\n\tint len=lent[x]+1;\n\tfor(;t[x]<len-1;t[x]++)\n\t{\n\t\tif(clac(a[f[x][t[x]]].x,a[f[x][t[x]]].y,a[f[x][t[x]+1]].x,a[f[x][t[x]+1]].y)<=-1.0*q[k].a)break;\n\t}\n\tif(t[x]!=0)\n\t{\n\t\tif(q[k].a*a[f[x][t[x]]].x+a[f[x][t[x]]].y>num)\n\t\t{\n\t\t\tnum=q[k].a*a[f[x][t[x]]].x+a[f[x][t[x]]].y;\n\t\t}\n\t}\n\telse if(len>1)num=max(num,q[k].a*a[f[x][1]].x+a[f[x][1]].y);\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tif(mid>=nl)search(ls(x),l,mid);\n\telse search(rs(x),mid+1,r);\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint opt;\n\t\tscanf(\"%lld\",&opt);\n\t\tif(opt==1)\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%lld%lld\",&x,&y);\n\t\t\ta[++cnt]={i,n,x,y};\n\t\t\tid[i]=cnt;\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tint k;\n\t\t\tscanf(\"%lld\",&k);\n\t\t\ta[id[k]].to=min(a[id[k]].to,i-1);\n\t\t}\n\t\tif(opt==3)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%lld\",&x);\n\t\t\tq[++cnt2]={cnt2,i,x};\n\t\t}\n\t}\n\ta[0].x=a[0].y=-1e18;\n\tbuild(1,1,n);\n\tsort(a+1,a+1+cnt,cmp);\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tnl=a[i].from,nr=a[i].to,k=i;\t\n\t\tupdate(1,1,n);\n\t}\n\tsort(q+1,q+1+cnt2,cmp2);\n\tfor(int i=1;i<=cnt2;i++)\n\t{\n\t\tnl=q[i].tim,k=i;\n\t\tnum=-9e18;\n\t\tsearch(1,1,n);\n\t\tans[q[i].name]=num;\n\t}\n\tfor(int i=1;i<=cnt2;i++)\n\t{\n\t\tif(ans[i]<=-9e18+5)printf(\"EMPTY SET\\n\");\n\t\telse printf(\"%lld\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1666183703,
        "uid": 275793,
        "name": "Gmt\u4e36FFF",
        "ccfLevel": 5,
        "title": "CF678F Lena and Queries \u9898\u89e3"
    },
    {
        "content": "\u600e\u4e48\u56de\u4e8b\uff0c\u7ebf\u6bb5\u6811\u5206\u6cbb\u677f\u5b50\u9898\u5c45\u7136\u6ca1\u6709\u5355 log \u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u9898\u89e3\u3002\n\n\u90a3\u5c31\u8ba9\u6211\u6765\u6c34\u4e00\u53d1\u5427\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\n\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u659c\u7387\u4f18\u5316\u3002\n## \u89e3\u6cd5\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u5982\u679c\u6ca1\u6709\u5220\u9664\uff0c\u90a3\u5f88\u663e\u7136\u53ef\u4ee5\u7528**\u674e\u8d85\u7ebf\u6bb5\u6811** $O(n \\log V)$ \u7ef4\u62a4\uff0c\u4f46\u52a0\u5165\u4e86\u5220\u9664\u64cd\u4f5c\u540e\uff0c**\u65f6\u95f4**\u7ef4\u5ea6\u5c31\u4f1a\u53d8\u5f97\u590d\u6742\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u8003\u8651\u79bb\u7ebf\u7528**\u7ebf\u6bb5\u6811\u5206\u6cbb**\u89e3\u51b3\u65f6\u95f4\u7ef4\u5ea6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u674e\u8d85\u6811\u7ef4\u62a4\u4e86\u3002\uff08\u6709\u4e00\u7bc7\u9898\u89e3\u5c31\u662f\u8fd9\u4e48\u5199\u7684\uff09\n\n\u5173\u4e8e\u7ebf\u6bb5\u6811\u5206\u6cbb\uff1a\u4e00\u4e2a\u6570\u5bf9 $(x,y)$ \u5728\u65f6\u95f4 $l$ \u52a0\u5165\uff0c\u65f6\u95f4 $r$ \u5220\u9664\uff08\u5982\u679c\u6ca1\u6709\u5220\u9664\u5c31\u89c6 $r=n+1$\uff09\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u5728\u65f6\u95f4 $[l,r-1]$ \u5185\u63d2\u5165\u4e86 $(x,y)$\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u548c[\u7ebf\u6bb5\u6811\u5206\u6cbb\u6a21\u677f](https://www.luogu.com.cn/problem/P5787)\u4e00\u6837\u4e86\n\n\u4f46\u662f\uff0c\u6211\u4eec\u7528\u4e86\u7ebf\u6bb5\u6811\u5206\u6cbb\u540e\uff0c\u95ee\u9898\u4e0d\u5c31\u5df2\u7ecf\u53d8\u6210\u4e86**\u9759\u6001\u95ee\u9898**\u4e86\u5417\u3002\n\n\u8fd9\u9898\u4e2d\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u6211\u4eec\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u8003\u8651\u64a4\u9500\uff0c\u56e0\u4e3a\u6240\u6709\u52a0\u5165\u6570\u5bf9\u7684\u64cd\u4f5c\u90fd\u662f\u72ec\u7acb\u7684,\u800c\u4e0d\u662f\u548c\u677f\u5b50\u4e2d\u7684\u5e76\u67e5\u96c6\u4e00\u6837\u4f1a\u4e92\u76f8\u5f71\u54cd\u7684\u3002\n\n\u5f53\u6211\u4eec\u5728\u65f6\u95f4 $t$ \u8fdb\u884c\u67e5\u8be2\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u7ebf\u6bb5\u6811\u4e0a\u6240\u6709\u5305\u542b $t$ \u7684\u533a\u95f4\u90fd\u52a0\u5165\u67e5\u8be2\u5373\u53ef\u3002\n\n\u65e2\u7136\u662f\u9759\u6001\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528 $O(n)$ \u7684**\u659c\u7387\u4f18\u5316**\u5462\uff1f\n\n\u6211\u4eec\u5bf9\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u64cd\u4f5c\u6309 $x$ \u6392\u5e8f\uff0c\u67e5\u8be2\u6309 $k$ \u6392\u5e8f\uff0c\u8003\u8651\u6570\u5bf9 $(x_1,y_1)$ \u6bd4\u6570\u5bf9 $(x_2,y_2)(x_1>x_2)$ \u5bf9\u4e8e\u67e5\u8be2 $k$ \u66f4\u4f18\u7684\u6761\u4ef6\u3002\n\n$$x_1\\times k+y_1 > x_2\\times k + y_2$$\n\n$$(x_1-x_2)\\times k > y_2-y_1$$\n\n$$k > \\frac{y_2-y_1}{x_1-x_2}$$\n\n\u8fd9\u5c31\u662f\u5f88\u660e\u663e\u7684\u659c\u7387\u4f18\u5316\u7684\u5f62\u5f0f\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u4e8e\u662f\u5c31\u5355 log \u4e86\u3002\n\n**tip**\uff1a\u7ebf\u6bb5\u6811\u5206\u6cbb\u5343\u4e07\u4e0d\u8981\u63d2\u5165\u540e\u518d\u6392\u5e8f\uff0c\u800c\u8981\u5148\u6392\u5e8f\u540e\u63d2\u5165\uff0c\u4e0d\u7136\u590d\u6742\u5ea6\u4f1a\u56e0\u4e3a\u6392\u5e8f\u5047\u6389\u3002\n\n\u53ef\u60dc\u7684\u662f\u8fd9\u6837\u5199\u5e38\u6570\u592a\u5927\u4e86\uff0c\u65f6\u95f4\u6548\u7387\u53ef\u80fd\u8fd8\u4e0d\u5982\u5b9e\u73b0\u7684\u597d\u7684\u53cc log\u3002\n\n\u60b2\u54c0\n\n## \u4ee3\u7801\n\n\u53d8\u91cf\u540d\u6bd4\u8f83\u968f\u610f\uff0c\u51d1\u5408\u7740\u770b\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#pragma optimize(3)\n#pragma optimize(2)\n#define INF 0x3f3f3f3f\n#define LINF 0x3f3f3f3f3f3f3f3f\n#define zsj return\n#define akioi 0\nint read()\n{\n\tint x;scanf(\"%d\",&x);\n\treturn x;\n}\nll lread()\n{\n\tll x;scanf(\"%lld\",&x);\n\treturn x;\n}\n//file head over\n#define MaxN 300005\n#define pb push_back\n#define lc c<<1\n#define rc c<<1|1\n#define mid (l+r>>1) \nstruct Node{\n\tll k,b;\n\tint l,r;\n};\nstruct Ask{\n\tint pos;\n\tll x;\n\tint id;\n};\nvector<Node>a[MaxN*4];\nvector<Ask>b[MaxN*4];\nvector<Ask>e;\nvector<Node>d;\nint n,to[MaxN],qr;\nll ans[MaxN];\nbool cmp1(Node i,Node j)\n{ \n\tif(i.k == j.k) return i.b < j.b; \n\treturn i.k < j.k;\n}\nbool cmp2(Ask i,Ask j){return i.x < j.x;} \nvoid InsertAsk(int c,int l,int r,int x,Ask y)\n{\n\tb[c].pb(y);\n\tif(l == r) return ;\n\tif(x > mid) InsertAsk(rc,mid+1,r,x,y);\n\telse InsertAsk(lc,l,mid,x,y);\n}\nvoid InsertOp(int c,int l,int r,int ql,int qr,Node x)\n{\n\tif(l == ql && r == qr) return a[c].pb(x),void();\n\tif(ql > mid) InsertOp(rc,mid+1,r,ql,qr,x);\n\telse if(qr <= mid) InsertOp(lc,l,mid,ql,qr,x);\n\telse InsertOp(lc,l,mid,ql,mid,x),InsertOp(rc,mid+1,r,mid+1,qr,x);\n}\nNode q[MaxN];\nint h,t;\nvoid Solve(int c,int l,int r)\n{\n\tif(l != r) Solve(lc,l,mid),Solve(rc,mid+1,r);\n\tif(a[c].empty() || b[c].empty()) return ;\n\th = 1,t = 0;\n\tfor(auto p:a[c])\n\t{\n\t\twhile(h <= t-1 && (q[t].b-p.b)*(q[t].k-q[t-1].k) <= (q[t-1].b-q[t].b)*(p.k-q[t].k)) t--;\n\t\tq[++t] = p;\n\t}\n\tfor(auto p:b[c])\n\t{\n\t\twhile(h+1 <= t && q[h].k*p.x+q[h].b <= q[h+1].k*p.x+q[h+1].b) h++;\n\t\tif(h <= t) ans[p.id] = max(ans[p.id],q[h].k*p.x+q[h].b);\n\t}\n}\nint main()\n{\n\tn = read();\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tint op = read();\n\t\tif(op == 1)\n\t\t{\n\t\t\tint x = read(),y = read();\n\t\t\td.pb(Node{x,y,i,n}),to[i] = d.size()-1;\n\t\t}\n\t\tif(op == 2)\n\t\t{\n\t\t\tint x = read();\n\t\t\td[to[x]].r = i;\t\n\t\t}\n\t\tif(op == 3)\n\t\t{\n\t\t\tint x = read();\n\t\t\te.pb(Ask{i,x,++qr}),ans[qr] = -LINF;\n\t\t}\n\t}\n\tsort(d.begin(),d.end(),cmp1);\n\tsort(e.begin(),e.end(),cmp2);\n\tfor(auto p:d) InsertOp(1,1,n,p.l,p.r,p);\n\tfor(auto p:e) InsertAsk(1,1,n,p.pos,p);\n\tSolve(1,1,n);\n\tfor(int i = 1;i <= qr;i++)\n\t{\n\t\tif(ans[i] != -LINF)printf(\"%lld\\n\",ans[i]);\n\t\telse puts(\"EMPTY SET\");\n\t}\n\tzsj akioi;\n}\n\n```",
        "postTime": 1664328718,
        "uid": 310317,
        "name": "lzytag",
        "ccfLevel": 7,
        "title": "\u3010CF678F\u3011 Lena and Queries \u9898\u89e3"
    }
]