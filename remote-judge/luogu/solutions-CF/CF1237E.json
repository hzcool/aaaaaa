[
    {
        "content": "\u6807\u7b7e\uff1a\u6784\u9020\u3002\n\n\u795e\u4ed9\u9898\u3002\n\n\u624b\u73a9\u4e00\u4e0b\u5c0f\u6570\u636e\uff0c\u53ef\u4ee5\u53d1\u73b0\u6df1\u5ea6\u5c0f\u4e8e\u7b49\u4e8e $3$ \u7684\u53ea\u6709\u6811\u5927\u5c0f\u4e3a $1,2,4,5$ \u56db\u79cd\u60c5\u51b5\uff0c\u5e76\u4e14\u65b9\u6848\u6570\u90fd\u662f $1$\u3002\n\n\u663e\u7136\uff0c\u7531\u4e8e\u662f\u5e73\u8861\u6811\uff0c\u90a3\u4e48 $n$ \u663e\u7136\u662f\u6839\u4e00\u76f4\u5411\u53f3\u8d70\u5230\u7684\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0\u5fc5\u7136\u4e0e\u6839\u8282\u70b9\u5947\u5076\u6027\u76f8\u540c\uff0c\u6240\u4ee5\u53f3\u5b50\u6811\u5927\u5c0f\u662f\u5076\u6570\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u68f5\u6ee1\u8db3\u6761\u4ef6\u7684\u6811\uff0c\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u4e5f\u90fd\u5fc5\u7136\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u4ece\u6df1\u5ea6\u5c0f\u7684\u5411\u6df1\u5ea6\u5927\u7684\u9012\u63a8\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u6df1\u5ea6\u4e3a $i$ \u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5e73\u8861\u6811\u7684\u6700\u5c0f\u5927\u5c0f\u3002\n\n\u7528\u5f52\u7eb3\u6cd5\u8bc1\u660e\u53ea\u6709\u5927\u5c0f\u4e3a $f_i,f_i+1$ \u7684\u6811\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u9996\u5148\u5bf9 $i=1,2$ \u663e\u7136\u6210\u7acb\u3002\n\n\u5047\u8bbe\u5bf9\u4e8e $i$ \u6210\u7acb\uff0c\u90a3\u4e48\u6df1\u5ea6\u4e3a $i+1$ \u7684\u6811\u5fc5\u7136\u662f\u4e00\u4e2a\u6839\u518d\u52a0\u4e0a\u4e24\u4e2a\u6df1\u5ea6\u4e3a $i$ \u7684\u6811\u3002\n\n\u6df1\u5ea6\u4e3a $i$ \u7684\u6811\u53ea\u6709 $f_i,f_i+1$ \u4e24\u79cd\u3002\n\n\u8bbe\u5de6\u53f3\u4e24\u5b50\u6811\u5927\u5c0f\u4e3a $L,R$\uff0c\u90a3\u4e48\u9700\u8981\u6ee1\u8db3 $L+1$ \u548c $L+R+1$ \u5947\u5076\u6027\u76f8\u540c\u3002\n\n\u6240\u4ee5 $R$ \u5fc5\u7136\u662f\u5076\u6570\uff0c$L$ \u53ef\u4ee5\u53d6 $f_i$ \u548c $f_i+1$\u3002\n\n\u8fd9\u6837\u8bc1\u660e\u4e86\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u4e5f\u8bc1\u660e\u4e86\u65b9\u6848\u6570\u53ea\u53ef\u80fd\u662f $0,1$\u3002\n\n\u9012\u63a8\u5f0f\u4e5f\u5f88\u7b80\u5355\uff1a\n\n$$\nf_{i+1}=\\begin{cases}2f_i+2&x\\mod 2=1\\\\2f_i+1&x\\mod 2=2\\end{cases}\n$$\n\n[code](https://codeforces.com/contest/1237/submission/149885688)\u3002",
        "postTime": 1647501927,
        "uid": 98490,
        "name": "houzhiyuan",
        "ccfLevel": 7,
        "title": "CF1237E"
    },
    {
        "content": "~~\u795e\u4ed9\u9898~~\n\n$CF1237E ~Balanced~ Binary ~Search ~Trees$\n\n**\u9898\u610f\uff1a**\n\n\u9700\u8981\u6c42\u51fa\u6709\u591a\u5c11\u68f5\u70b9\u6570\u4e3a$n(n\\le 10^6)$\u70b9\u6743\u4e3a${1,2,...,n}$\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u6ee1\u8db3\uff1a\n\n$1):$ \u9664\u4e86\u6700\u4e0b\u9762\u4e00\u5c42\u5916\uff0c\u6240\u6709\u5c42\u90fd\u662f\u6ee1\u7684\uff1b\n\n$2):$ \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5982\u679c\u5b83\u6709\u5de6\u513f\u5b50\uff0c\u90a3\u4e48\u5de6\u513f\u5b50\u7684\u70b9\u6743\u548c\u5b83\u7684\u5947\u5076\u6027\u4e0d\u540c\uff1b\u5982\u679c\u5b83\u6709\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u53f3\u513f\u5b50\u7684\u70b9\u6743\u548c\u5b83\u7684\u5947\u5076\u6027\u76f8\u540c\u3002\n\n\u7b54\u6848\u5bf9$998244353$\u53d6\u6a21\n\n------\n\n$\\rm Sol:$\n\n~~\u4e0b\u9762\u5bf9\u4e8e\u6ee1\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49\u6709\u95ee\u9898\uff0c\u5927\u5bb6\u51d1\u5408\u7740\u770b\u5427...\u8fd9\u91cc\u6ee1\u4e8c\u53c9\u6811\u662f\u6307\u6ee1\u8db3\u5b9a\u4e49$1$\u7684\u6811~~\n\n\u53ef\u4ee5\u53d1\u73b0\u5b9a\u4e49$1$\u5373\u8fd9\u68f5\u6811\u662f\u4e00\u4e2a\u6ee1\u4e8c\u53c9\u6811\uff0c\u4e8e\u662f\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u6709\u9664\u53bb\u5176\u4e4b\u540e\u4ecd\u7136\u6709\u5176\u4e3a\u4e00\u9897\u6ee1\u4e8c\u53c9\u6811\n\n\u8bbe\u6ee1\u8db3\u5b9a\u4e49$2$\u7684\u6ee1\u4e8c\u53c9\u6811\u4e3a\u5b8c\u7f8e\u6811\uff0c\u5219\u53ef\u4ee5\u53d1\u73b0\u7531\u4e8e\u539f\u6811\u4e3a\u4e00\u68f5\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u4e8e\u662f\u5176\u6700\u53f3\u8fb9\u7684\u70b9\u4e00\u5b9a\u4e3a$n$\uff0c\u6240\u4ee5\u6709\u6839\u7684\u5947\u5076\u6027\u4e0e$n$\u7684\u5947\u5076\u6027\u76f8\u540c\n\n\u4e0d\u96be\u770b\u51fa\u4e24\u4e2a\u6027\u8d28\uff1a\n\n$1):$ \u4e00\u68f5\u5b8c\u7f8e\u6811\u7684\u5b50\u6811\u4ecd\u7136\u662f\u5b8c\u7f8e\u6811\n\n$2):$ \u7531\u4e8e\u6743\u503c\u4e3a$1-n$\uff0c\u6240\u4ee5\u8fd9\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u4e3a$1-n$\uff0c\u6bcf\u68f5\u5b50\u6811\u5219\u53ef\u4ee5\u5bf9\u5e94\u6210\u4e3a\u4e00\u4e2a\u533a\u95f4\n\n\u8003\u8651\u5047\u8bbe\u67d0\u4e00\u4e2a\u6570$x$\u4f5c\u4e3a\u6839\uff0c\u6b64\u65f6\u6709$x$\u7684\u5947\u5076\u6027\u4e0e$n$\u76f8\u540c\uff0c\u5219\u5176\u5de6\u5b50\u6811\u7684\u533a\u95f4\u53ef\u4ee5\u8868\u793a\u4e3a$[1,x-1]$\uff0c\u53f3\u5b50\u6811\u533a\u95f4\u5219\u53ef\u4ee5\u8868\u793a\u4e3a$[x+1,n]$\uff0c\u4e14\u6709\u5de6\u5b50\u6811\u5927\u5c0f\u4e3a$x-1$\uff0c\u53f3\u5b50\u6811\u5927\u5c0f\u4e3a$n-x$\uff0c\u56e0\u4e3a$n$\u7684\u5947\u5076\u6027\u548c$x$\u76f8\u540c\uff0c\u6240\u4ee5$n-x$\u5fc5\u7136\u4e3a\u5076\u6570\uff0c\u4e14$x-1$\u7684\u5947\u5076\u6027\u4e0e$x$\u76f8\u53cd\uff0c\u7531\u4e8e\u5de6\u5b50\u6811\u4ecd\u7136\u662f\u4e00\u68f5\u5b8c\u7f8e\u6811\uff0c\u6240\u4ee5\u518d\u4f7f\u7528\u4e0a\u8ff0\u7ed3\u8bba\u53ef\u4ee5\u5f97\u5230\uff1a\n\n**\u4e00\u9897\u5b8c\u7f8e\u6811\u6ee1\u8db3\u5176\u5de6\u5b50\u6811\u6839\u7684\u5947\u5076\u6027\u4e0e\u5b50\u6811\u5927\u5c0f\u76f8\u540c\uff0c\u800c\u53f3\u5b50\u6811\u5927\u5c0f\u4e3a\u5076\u6570**\n\n\u63a5\u4e0b\u6765\u7531\u4e8e\u4e8c\u53c9\u641c\u7d22\u6811\u53ea\u5173\u5fc3\u76f8\u5bf9\u7684\u5927\u5c0f\u5173\u7cfb\u4e14\u5176\u67d0\u4e00\u4e2a\u5b50\u6811\u53ef\u4ee5\u88ab\u8868\u793a\u6210\u4e3a\u4e00\u4e2a\u533a\u95f4$[l,r]$\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528$[1,r-l+1]$\u5bf9\u5e94\u66ff\u6362\u6b64\u6811\u6240\u6709\u8282\u70b9\u5bf9\u4e8e\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u5bb9\u6613\u53d1\u73b0\u5047\u8bbe\u5176\u539f\u5148\u4e3a\u4e00\u68f5\u5b8c\u7f8e\u6811\u5219\u66ff\u6362\u540e\u4ecd\u7136\u662f\u4e00\u9897\u5b8c\u7f8e\u6811\n\n\u6240\u4ee5\u95ee\u9898\u4e0e\u539f\u6811\u5bf9\u5e94\u7684\u533a\u95f4\u7f16\u53f7\u65e0\u5173\u800c\u4e4b\u548c\u6b64\u6811\u5927\u5c0f\u6709\u5173\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5c06\u4e24\u9897\u5b8c\u7f8e\u6811\u5408\u5e76\u6210\u4e3a\u4e00\u9897\u5927\u5b8c\u7f8e\u6811\u4ee5\u53ca\u5176\u5408\u6cd5\u6027\uff0c\u6309\u7167\u524d\u9762\u7684\u6761\u4ef6\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5408\u5e76\u4e4b\u540e\u7684\u6811\u4e3a\u5b8c\u7f8e\u6811\u5f53\u4e14\u4ec5\u5f53\uff1a$1.$\u5408\u5e76\u4e4b\u540e\u6ee1\u8db3\u539f\u6811\u4e3a\u6ee1\u4e8c\u53c9\u6811\uff0c$2.$\u53f3\u5b50\u6811\u5927\u5c0f\u4e3a\u5076\u6570\n\n\u6211\u4eec\u53ef\u4ee5\u624b\u73a9\u5f97\u5230\uff1a\u5927\u5c0f\u4e3a$1,2,3,4,5$\u7684\u5b8c\u7f8e\u6811\u5f62\u6001\u5982\u4e0b\uff1a\n\n$size=1:\\quad 1$\n\n$size=2:\\quad 2.left\\to 1$\n\n$size=3:$ \u4e0d\u5b58\u5728\u5408\u6cd5\n\n$size=4:$\u4e3a\u6837\u4f8b\n\n$size=5:$\u4ec5\u5b58\u5728\u4e00\u4e2a\uff0c\u4e3a\uff1a\n\n$3.left\\to 2,2.left\\to1,3.right\\to 5,5.left \\to 4$\n\n\u53ef\u4ee5\u89c2\u5bdf\u5230\u9664\u53bb$size=1$\u4e4b\u5916\u7684\u6240\u6709\u5b8c\u7f8e\u6811\u9ad8\u5ea6\u5747$>1$\u4e14\u4e0d\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811(\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u6307\u5168\u90e8\u90fd\u662f\u6ee1\u7684\uff0c\u8fd9\u79cd\u5b9a\u4e49\u771f\u7684\u8bb0\u4e0d\u5f97...\u51d1\u5408\u770b\u5427QAQ)\n\n\u7531\u4e8e **\u6027\u8d28$1$** \u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u4e00\u4e2a\u5927\u5c0f$>5$\u7684\u5b8c\u7f8e\u6811\uff0c\u6709\u5176\u6700\u5e95\u5c42\u4ecd\u7136\u662f\u4e00\u68f5\u5b8c\u7f8e\u6811\uff0c\u6362\u800c\u8a00\u4e4b\u5176\u9664\u53bb\u6839\u4e4b\u540e\u5fc5\u7136\u662f\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u53ef\u6015\u7684\u7ed3\u8bba\uff1a\n\n\u5c06\u4e24\u9897\u5b8c\u7f8e\u6811\u5408\u5e76\u6210\u4e00\u68f5\u5927\u5c0f$>5$\u7684\u5b8c\u7f8e\u6811\u5f53\u4e14\u4ec5\u5f53$1.):$ \u5176\u5de6\u53f3\u5b50\u6811\u4e3a\u5b8c\u7f8e\u6811\u4e14\u9ad8\u5ea6\u76f8\u540c\uff0c$2):$\u53f3\u5b50\u6811\u5927\u5c0f\u4e3a\u5076\u6570\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u975e\u5e38\u7c97\u7565\u7684$dp$\u4e86\uff0c\u4ee4$dp_{i,j}$\u8868\u793a\u5927\u5c0f\u4e3a$i$\u7684\u5b8c\u7f8e\u6811\u9ad8\u5ea6\u4e3a$j$\u7684\u65f6\u5019\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u5229\u7528\u8fd9\u4e2a\u4e1c\u897f\u8f6c\u79fb\uff0c\u8f6c\u79fb\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u662f$O(n\\log^2 n)$\u7684\u505a\u6cd5\n\n\u4ed4\u7ec6\u601d\u8003\u4f1a\u53d1\u73b0\u4e00\u4e2a\u66f4\u53ef\u6015\u7684\u4e1c\u897f\n\n\u6211\u4eec\u77e5\u9053\u524d$5$\u9879\u7684\u9ad8\u5ea6\u548c\u65b9\u6848\u6570(\u524d\u4e3a\u9ad8\u5ea6\uff0c\u540e\u4e3a\u65b9\u6848\u6570)\u5927\u81f4\u5982\u6b64\uff1a\n\n$(1,1),(2,1),(-,-),(3,1),(3,1)$\n\n\u6ce8\u610f\u5230\u53f3\u5b50\u6811\u7684\u5927\u5c0f\u4ec5\u80fd\u662f$2$\u548c$4$\n\n\u5bf9\u4e8e\u53f3\u5b50\u6811$2$\u800c\u8a00\u552f\u4e00\u7684\u5408\u5e76\u662f\u5de6$2$\u53f3$2$\uff0c\u5408\u5e76\u5f97\u5230$5$\n\n\u5bf9\u4e8e\u53f3\u5b50\u6811$4$\u800c\u8a00\u552f\u4e00\u7684\u5408\u5e76\u662f\u5de6$4/5$\u53f3$4$\uff0c\u5408\u5e76\u5f97\u5230\u5927\u5c0f\u4e3a$9/10$\u7684\u5b8c\u7f8e\u6811\uff0c\u9ad8\u5ea6\u4e3a$4$\n\n\u90a3\u4e48\u8fd9\u6837\u5bf9\u4e8e\u5927\u5c0f\u4e3a$6-8$\u7684\u6811\u5176\u5747\u4e0d\u5177\u6709\u5b8c\u7f8e\u6811\uff0c\u4e8e\u662f\u63a5\u4e0b\u6765\u53ef\u4ee5\u7528\u7684\u5927\u5c0f\u4ec5\u6709$9/10$\n\n\u7c7b\u4f3c\u5408\u5e76\u53ef\u4ee5\u53d1\u73b0$9/10$\u4ec5\u80fd\u901a\u8fc7\u5408\u5e76\u5f97\u5230$20/21$\uff0c\u7136\u540e\u53ef\u884c\u7684\u4e3a$41/42$...\u53ef\u4ee5\u53d1\u73b0\u5408\u6cd5\u7684\u6811\u5747\u53ea\u6709$1$\u79cd\n\n\u4e8e\u662f\u53ea\u9700\u8981\u62ff$4/5$\u4f5c\u4e3a\u521d\u503c\u9012\u63a8\u4e0b\u53bb\u5373\u53ef\uff0c\u590d\u6742\u5ea6$O(\\log n)$\n\n~~\u65f6\u95f4$3s$\u548c$n$\u53ea\u6709$10^6$\u5e94\u8be5\u662f\u4e3a\u4e86\u653e\u5176\u4ed6\u5927\u5e38\u6570\u975e\u6b63\u89e3\u505a\u6cd5\u8fc7...~~\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nint n ; \nsigned main()\n{\n    n = gi() ; \n    if( n == 1 || n == 2 ) puts(\"1\") ;\n    else {\n        int x = 4, y = 5 ; \n        while( max( x, y ) < n ) {\n            int ux = x, uy = y ;\n            if( ux & 1 ) x = ux + uy + 1, y = uy + uy + 1 ;\n            else x = ux + uy + 1, y = ux + ux + 1 ; \n            if( x > y ) swap( x, y ) ;\n        }\n        if( x == n || y == n ) puts(\"1\") ;\n        else puts(\"0\") ;\n    }\n\treturn 0 ;\n}\n```",
        "postTime": 1571383798,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1237E \u3010Balanced Binary Search Trees\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e2a\u900a\u4e00\u70b9\u7684 $O(n)$ \u505a\u6cd5\u3002\n\n\u5148\u4e0d\u8003\u8651\u6700\u540e\u4e00\u5c42\uff0c\u4e5f\u5c31\u662f\u8bf4\u73b0\u5728\u6709\u4e00\u68f5 $d$ \u5c42\u7684 $n=2^d-1$ \u7684\u4e8c\u53c9\u6811\u3002\u5e76\u4e14\u6211\u4eec\u9009\u62e9\u4e0d\u8003\u8651\u8282\u70b9\u7684\u6807\u53f7\uff0c\u53ea\u8003\u8651\u5176\u5947\u5076\u6027 $0/1$\uff0c\u7136\u540e\u6211\u4eec\u663e\u7136\u8981\u662f\u8981\u5728 $d+1$ \u5c42\u4e0a\u52a0\u70b9\u4f7f\u5f97\u5b83\u6ee1\u8db3\u5176\u4e2d\u5e8f\u904d\u5386\u6ee1\u8db3 $10101010\u2026\u2026$ \u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u586b\u4e0a $1\\sim n$ \u7684\u6bcf\u4e2a\u6570\u3002\n\n\u6211\u4eec\u518d\u6b21\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u4e2d\u5e8f\u904d\u5386\u4e0a\u76f8\u90bb\u4f4d\u7f6e\u503c\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u540e\u9762\u7684\u5fc5\u7136\u662f\u53f6\u5b50\u3002\n\n\u8bc1\u660e\u8003\u8651\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5b83\u4e0b\u4e00\u6b65\u5f80\u53f3\u5b50\u6811\u8df3\u4e00\u5b9a\u8df3\u5230\u4e86\u4e00\u4e2a\u53f6\u5b50\uff0c\u5e76\u4e14\u8fd9\u4e2a\u53f6\u5b50\u5982\u679c\u7f16\u53f7\u5947\u5076\u6027\u4e0e\u5f53\u524d\u70b9\u76f8\u540c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5728\u90a3\u4e2a\u53f6\u5b50\u7684\u5de6\u513f\u5b50\u5904\u52a0\u4e00\u4e2a\u70b9\u6765\u4f7f\u5f97\u5176\u5408\u6cd5\u3002\n\n\u5426\u5219\u4e00\u4e2a\u70b9\u80af\u5b9a\u662f\u5f80\u4e0a\u8df3\uff0c\u5e76\u4e14\u5411\u5de6\u4e0a\u65b9\u8df3\u5b8c\u4e00\u6761\u7f16\u53f7\u5947\u5076\u6027\u76f8\u540c\u7684\u94fe\u540e\u518d\u5f80\u53f3\u4e0a\u65b9\u8df3\u4e00\u4e2a\uff0c\u8fd9\u65f6\u5019\u5947\u5076\u6027\u663e\u7136\u4e0d\u540c\uff0c\u4e0d\u7528\u7ba1\u3002\n\n\u8fd9\u6837\u5c31\u5f88\u597d\u505a\u4e86\uff0c\u5148\u679a\u4e3e\u6839\u7684\u6807\u53f7\u5947\u5076\u6027\uff0c\u76f4\u63a5\u628a\u8fd9\u68f5\u6ee1\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u6c42\u51fa\u6765\uff0c\u518d\u5728\u4e2d\u95f4\u52a0\u70b9\u76f4\u5230\u6ee1\u8db3\u4e2d\u5e8f\u904d\u5386\u6ee1\u8db3 $10101010\u2026\u2026$ \u7684\u5f62\u5f0f\uff0c\u5224\u4e00\u4e0b\u603b\u8282\u70b9\u4e2a\u6570\u662f\u4e0d\u662f $=n$ \u5373\u53ef\u3002\n\n$n=2$ \u9700\u8981\u7279\u5224\u3002\n\n```c++\n//QwQcOrZ yyds!!!\n#include<bits/stdc++.h>\n#define IOS ios::sync_with_stdio(false)\n#define ll long long\n#define mp make_pair\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define inf 1e18\n#define mod 998244353\n//#define int ll\n#define N 2000005\nusing namespace std;\ninline char gc(){static char buf[1000000],*p1=buf,*p2=buf;return p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++;}\n#define gc getchar\ninline ll read(){char c=gc();ll su=0,f=1;for (;c<'0'||c>'9';c=gc()) if (c=='-') f=-1;for (;c>='0'&&c<='9';c=gc()) su=su*10+c-'0';return su*f;}\ninline void write(ll x){if (x<0){putchar('-');write(-x);return;}if (x>=10) write(x/10);putchar(x%10+'0');}\ninline void writesp(ll x){write(x),putchar(' ');}\ninline void writeln(ll x){write(x);putchar('\\n');}\nint n,cnt,now,del,a[N];\nint ans;\nvoid dfs(int k,int w)\n{\n\tif (k*2<=now)\n\t{\n\t\tdfs(k*2,w^1);\n\t}\n\ta[++cnt]=w;\n\tif (k*2+1<=now)\n\t{\n\t\tdfs(k*2+1,w);\n\t}\n}\nsigned main()\n{\n\tn=read();\n\tif (n==2) return puts(\"1\"),0;\n\tnow=1;\n\tfor (int i=1;i;i++)\n\t{\n\t\tif (now*2-1>n)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tnow=now*2;\n\t}\n\tnow-=1;\n\tcnt=0;del=0;\n\tdfs(1,0);\n\tif (a[1]==0) del++;\n\tfor (int i=1;i<cnt;i++)\n\t{\n\t\tif (a[i]==a[i+1])\n\t\t{\n\t\t\tdel++;\n\t\t}\n\t}\n\tif (now+del==n) ans++;\n\tcnt=0;del=0;\n\tdfs(1,1);\n\tif (a[1]==0) del++;\n\tfor (int i=1;i<cnt;i++)\n\t{\n\t\tif (a[i]==a[i+1])\n\t\t{\n\t\t\tdel++;\n\t\t}\n\t}\n\tif (now+del==n) ans++;\n\twriteln(ans);\n\t\n}\n/*\n\n*/\n\n\n",
        "postTime": 1635838131,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1237E Balanced Binary Search Trees"
    },
    {
        "content": "~~\u7ed9\u5927\u5bb6\u5e26\u6765\u6307\u5b9a\u653e\u8fc7\u7684$nlogn$\u7684\u505a\u6cd5~~\n\n\u600e\u4e48\u8bf4\uff0c\u5176\u5b9e\u611f\u89c9\u8003\u573a\u4e0a\u591a\u534a\u60f3\u5230\u7684\u5e94\u8be5\u8fd8\u662f\u8fd9\u79cd\u89e3\u6cd5\u5427\uff08\u81f3\u5c11\u5bf9\u6211\u8fd9\u79cd\u849f\u84bb\u6765\u8bf4\u662f\u8fd9\u6837\u7684\uff09\uff0c\u6bd5\u7adf\u53c8\u662f\u5bf9$998244353$\u53d6\u6a21\uff0c$n$\u53c8\u662f$10^6$\u7684\uff0c\u8fd9\u79cd\u7b97\u6cd5\u4e5f\u88ab\u653e\u8fc7\u4e86\uff0c\u53ea\u662f\u7801\u91cf\u5927\u4ebf\u70b9\u70b9\u800c\u5df2\u3002~~\uff08\u7136\u800cvp\u65f6\u6211\u8fd8\u662f\u6ca1\u8c03\u51fa\u6765\uff09~~\n\n\u9996\u5148\u5bfb\u627e\u6027\u8d28\uff0c\u8bbe\u5f53\u524d\u6839\u8282\u70b9\u4e3a$u$\uff0c\u5de6\u513f\u5b50\u4e3a$x$\uff0c\u53f3\u513f\u5b50\u4e3a$y$\u3002\u5e76\u8bbe$l_x$\u8868\u793a$x$\u7684\u5de6\u513f\u5b50\uff0c$r_x$\u8868\u793a$x$\u7684\u53f3\u513f\u5b50\uff0c$sz_x$\u8868\u793a$x$\u5b50\u6811\u7684\u5927\u5c0f\uff0c$d_x$\u8868\u793a$x$\u4e2d\u5e8f\u904d\u5386\u7684\u5e8f\u53f7\uff0c\u90a3\u4e48\u6709\uff1a\n\n$d_u \\ mod \\ 2 \\ne \\ d_x \\ mod\\ 2$\n\n\u53c8\u56e0\u4e3a$d_x=sz_{l_x}+1$\uff0c\u6240\u4ee5\u6709\uff1a\n\n$sz_x\\ mod \\ 2 \\ne sz_{l_x} \\ mod \\ 2$\n\n\u53c8\u56e0\u4e3a$sz_x=sz_{l_x}+sz_{r_x}+1$\n\n\u6240\u4ee5$sz_{r_x}\\ mod \\ 2 \\ =0$\n\n\u540c\u7406\uff0c\u7531$d_u \\ mod \\ 2 = \\ d_y \\ mod \\ 2$\uff0c\u53ef\u4ee5\u63a8\u5f97\uff1a\n\n$sz_{l_y}\\ mod \\ 2\\ =\\ 1$\n\n\u53d1\u73b0\u6ee1\u8db3\u6761\u4ef6\u53ea\u8ddf$x,y$\u7684\u5de6\u5b50\u6811/\u53f3\u5b50\u6811\u7684\u5947\u5076\u6709\u5173\uff0c\u6240\u4ee5\u5047\u8bbe$f_{d,x,0/1,0/1}$\u8868\u793a\u7531\u6df1\u5ea6\u4e3a$d$\u7684\u6ee1\u4e8c\u53c9\u6811\u518d\u52a0\u4e0a$x$\u4e2a\u6df1\u5ea6\u4e3a$d+1$\u7684\u70b9\u7ec4\u6210\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6839\u8282\u70b9\u7684\u5de6\u5b50\u6811\u5927\u5c0f\u4e3a\u5947/\u5076\uff0c\u53f3\u5b50\u6811\u5927\u5c0f\u4e3a\u5947/\u5076\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u8f83\u4e3a\u7b80\u5355\uff0c\u4e0d\u518d\u8d58\u8ff0\uff08\u53ef\u4ee5\u770b\u4ee3\u7801\uff09\uff0c\u7136\u540e\u56e0\u4e3a\u662f\u4e2a\u5377\u79ef\u5f62\u5f0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651NTT\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\u3002\n\n\uff08\u6211\u7684\u4ee3\u7801\u5b9e\u73b0\u662f\u628a\u4e24\u4e2a$0/1$\u5408\u6210\u4e86\u4e00\u4e2a$0/1/2/3$\u6765\u8868\u793a\u7684\uff0c\u5e76\u4e14\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u4e86\u4e00\u4e0b\uff09\n\n```cpp\n//W4P3R\n#include<bits/stdc++.h>\n#define inf 1e9\n#define eps 1e-6\n#define mp make_pair\n#define pb push_back\n#define re register int\n#define fr first\n#define sd second\n#define pa pair<int,int>\n#define FOR(i,a,b) for(re i=a;i<=b;i++)\n#define REP(i,a,b) for(re i=a;i>=b;i--)\n#define MEM(a) memset(a,0,sizeof(a))\n#define N 4000010\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ninline ll read()\n{\n\tchar ch=getchar();\n\tll s=0,w=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\ninline int lowbit(int x){return x&(-x);}\nint A[N],B[N],limit,l=1,C[N];\nint r[N],n;\nconst int mod=998244353;\ninline int Z(int x){return x>=mod?x-mod:x;}\nint f[4][N],g[4][N];\ninline int ksm(int a,int b)\n{\n\tint ans=1;\n\twhile(b){if(b&1)ans=1LL*ans*a%mod;b>>=1;a=1LL*a*a%mod;}\n\treturn ans;\n}\ninline void NTT(int a[],int type)\n{\n\tFOR(i,0,limit-1)if(i<r[i])swap(a[i],a[r[i]]);\n\tfor(re mid=1;mid<limit;mid<<=1)\n\t{\n\t\tint wn=ksm(3,(mod-1)/(mid<<1));if(type<0)wn=ksm(wn,mod-2);\n\t\tfor(re R=(mid<<1),j=0;j<limit;j+=R)\n\t\t{\n\t\t\tint w=1;\n\t\t\tfor(re k=0;k<mid;k++,w=1LL*w*wn%mod)\n\t\t\t{\n\t\t\t\tint x=a[j+k],y=1LL*a[j+k+mid]*w%mod;\n\t\t\t\ta[j+k]=Z(x+y);a[j+k+mid]=Z(x+mod-y);\n\t\t\t}\n\t\t}\n\t}\n\tif(type<0){int inv=ksm(limit,mod-2);FOR(i,0,limit-1){a[i]=1LL*a[i]*inv%mod;}}\n}\nint main()\n{\n\t//ios::sync_with_stdio(false);\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read();int Max=3;\n\tf[0][0]=1;f[1][1]=1;\n\twhile(Max<n)//n\u4e2a\u70b9\u7684dp\u503c\u5e94\u8be5\u662ff[log2(n)][n-2^log2(n)][0/1][0/1] \n\t{\n\t\tlimit=1,l=0;\n\t\twhile(limit<=Max*2+1)limit<<=1,l++;\n\t\tFOR(i,0,limit-1)r[i]=(r[i>>1]>>1)|((i&1)<<(l-1));\n\t\tFOR(j,Max+1,limit-1)FOR(i,0,3)f[i][j]=0;\n\t\tFOR(i,0,3)NTT(f[i],1);//\u5148\u628a\u6240\u6709\u6570\u7ec4DFT\u4e86\u6765\uff0c\u4e0d\u7136\u5e38\u6570\u7206\u70b8 \n\t\tFOR(i,0,Max*2+1)g[1][i]=Z(g[1][i]+1LL*f[0][i]*f[1][i]%mod);\n\t\tFOR(i,0,Max*2+1)g[3][i]=Z(g[3][i]+1LL*f[0][i]*f[3][i]%mod);\n\t\tFOR(i,0,Max*2+1)g[0][i]=Z(g[0][i]+1LL*f[1][i]*f[1][i]%mod);\n\t\tFOR(i,0,Max*2+1)g[2][i]=Z(g[2][i]+1LL*f[1][i]*f[3][i]%mod);\n\t\tFOR(i,0,3)NTT(g[i],-1);\n\t\tFOR(i,0,Max*2+1)FOR(j,0,3){f[j][i]=g[j][i];}\n\t\tFOR(j,0,limit-1)FOR(i,0,3)g[i][j]=0;\n\t\tMax=Max*2+1;\n\t}\n\tint t=1;\n\twhile(t<n){t=t*2+1;}t=(t-1)/2;\n\tint ans=0;\n\tFOR(j,0,3)ans=Z(ans+f[j][n-t]);cout<<ans<<'\\n';\n\treturn 0;\n}\n//gl\n```\n\n\n**\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u90a3\u4f60\u53ef\u4ee5\u70b9\u4e2a\u8d5e\u652f\u6301\u6211\u4e00\u4e0bqwq\u3002\u5982\u679c\u4f60\u5bf9\u9898\u89e3\u6709\u4efb\u4f55\u95ee\u9898/\u8ba4\u4e3a\u6211\u7684\u9898\u89e3\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u53ef\u4ee5\u79c1\u4fe1/\u5728\u8bc4\u8bba\u533a\u53d1\u51fa\u6765\uff0c\u5f53\u7136\u5982\u679c\u4f60\u5bf9\u6211\u7684\u9898\u89e3\u6709\u4efb\u4f55\u610f\u89c1/\u5efa\u8bae\u4e5f\u6b22\u8fce\u6307\u51fa\u3002\u6211\u4f1a\u5c3d\u6211\u5168\u529b\u628a\u6211\u9898\u89e3\u5199\u5230\u6700\u597d\u7684qwq**\n\n",
        "postTime": 1611473075,
        "uid": 72419,
        "name": "WAPER4EVER",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1237E \u3010Balanced Binary Search Trees\u3011"
    },
    {
        "content": "\u53d1\u73b0\u8fd9\u4e2a `balanced` \u662f\u4e2a\u5f88\u5f3a\u7684\u7ea6\u675f\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\u5728\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e0b\u6839\u8282\u70b9\u53ea\u80fd\u662f $\\left\\lceil\\dfrac{n}{2} \\right\\rceil$ \u6216\u8005 $\\left\\lfloor\\dfrac{n}{2} \\right\\rfloor$ \u3002\u7136\u540e\u7d27\u63a5\u7740\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u5b50\u6811\u5728\u7b2c\u4e00\u4e2a\u7ea6\u675f\u4e0b\u90fd\u53ea\u80fd\u662f\u7c7b\u4f3c\u72b6\u6001\u3002\u7136\u540e\u8003\u8651\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff0c\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u4e8b\u5b9e\u5728\u4e8e\uff0c\u53ef\u4ee5\u53d1\u73b0\u952e\u503c $n$ \u6c38\u8fdc\u662f\u5728\u6700\u53f3\u4fa7\u7684\u94fe\uff0c\u6240\u4ee5\u53ef\u4ee5\u77e5\u9053 $n$ \u4e00\u5b9a\u548c $root$ \u7684\u952e\u503c\u5947\u5076\u6027\u76f8\u540c\u3002\u63a5\u7740\uff0c\u7531\u4e8e\u53f3\u5b50\u6811\u7684\u70b9\u96c6\u662f $[root,n]$ \uff0c\u90a3\u4e48\u4e0d\u96be\u77e5\u9053**\u6bcf\u4e2a\u6839\u7684\u53f3\u5b50\u6811 $size$ \u90fd\u5fc5\u7136\u662f\u5076\u6570** \u3002\n\n\u6709\u4e86\u8fd9\u4e9b\u6027\u8d28\uff0c\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a $n$ \uff0c\u7b54\u6848\u81f3\u591a\u4e3a $1$ \u3002\n\n\u8bc1\u660e\u53ef\u4ee5\u8003\u8651\u5047\u8bbe\u6709\u4e24\u4e2a\u5747\u6ee1\u8db3\u6761\u4ef6\u7684\u6811 $T_1,T_2$ \uff0c\u90a3\u4e48\u4ed6\u4eec\u4e00\u5b9a\u6709\u67d0\u90e8\u5206\u540c\u6784\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u4e0d\u540c\u6784\u3002\u8003\u8651\u4e0d\u540c\u6784\u7684\u90a3\u90e8\u5206\uff0c\u7531\u4e8e\u8981\u6ee1\u8db3 `perfect balanced` \uff0c\u6240\u4ee5\u53ef\u4ee5\u77e5\u9053\u300c\u4e0d\u540c\u6784\u300d\u53ea\u80fd\u662f\u628a\u67d0\u4e2a\u70b9\u7684\u67d0\u4e2a\u5b50\u6811\u7684\u4e00\u4e2a\u70b9\u79fb\u5230\u53e6\u4e00\u9897\u5b50\u6811\u91cc\uff0c\u8fd9\u8981\u6ee1\u8db3\u4e24\u4e2a\u5b50\u6811 size \u4e4b\u524d\u76f8\u5dee $1$ \uff0c\u6240\u4ee5 $T_1,T_2$ \u4e2d\u5fc5\u7136\u6709\u4e00\u68f5\u6811\u6ee1\u8db3\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u5176\u53f3\u5b50\u6811\u7684 size \u662f\u5947\u6570\u3002\u6240\u4ee5\u53ef\u77e5\u7b54\u6848\u81f3\u591a\u4e3a $1$ \u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece $size=1$ \u5f00\u59cb\u6784\u9020\u4e86\u3002\u590d\u6742\u5ea6 $\\log n$ \u3002\n\n```cpp\n#include <cstdio>\n\nint n ;\nint ans ;\n\nint main(){\n    ans = 1 ;\n    scanf(\"%d\", &n) ;\n    while (ans <= n){\n        if (ans == n || ans == n - 1) return puts(\"1\"), 0 ;\n        if (ans & 1) (ans <<= 1) += 2 ; else (ans <<= 1) += 1 ;\n    }\n    return puts(\"0\"), 0 ;\n}\n```\n",
        "postTime": 1591313438,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u300c\u6709\u8da3\u7684(\u7eaf)\u627e\u6027\u8d28\u9898\u300d[Global Round #5] Balanced Binary Search Trees"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u8981\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u7531\u4e8e\u6839\u4e0e\u53f3\u5b50\u6811\u7684\u6839\u5947\u5076\u6027\u76f8\u540c\uff0c\u90a3\u4e48\u6839\u7684\u5947\u5076\u6027\u4e0e$N$\u76f8\u540c\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u5b8c\u7f8e\u6811\uff0c\u4ed6\u7684\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u90fd\u662f\u5b8c\u7f8e\u6811\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u9897\u5b8c\u7f8e\u6811\u662f\u7531\u4e24\u68f5\u5b8c\u7f8e\u6811\u62fc\u6210\u7684\n\n\u6ce8\u610f\u5230\u53e6\u4e00\u4e2a\u6027\u8d28\uff1a\u7531\u4e8e\u6743\u503c\u662f\u4e00\u4e2a\u6392\u5217\uff0c\u5047\u8bbe\u6839\u8282\u70b9\u4e3a$x$\uff0c\u90a3\u4e48\u5de6\u5b50\u6811\u7684\u8303\u56f4\u662f$[1, x - 1]$\uff0c\u53f3\u5b50\u6811\u4e3a$[x + 1, n]$\n\n\u7531\u4e8e\u6839\u8282\u70b9\u548c$N$\u5947\u5076\u6027\u76f8\u540c\uff0c\u90a3\u4e48\u5de6\u5b50\u6811\u7684\u5927\u5c0f\u4e0e$N$\u7684\u5947\u5076\u6027\u76f8\u53cd\uff0c\u6240\u4ee5\u53f3\u5b50\u6811\u5927\u5c0f\u4e3a\u5076\u6570\n\n\u5982\u679c\u5b50\u6811\u533a\u95f4\u4e3a$[l, r]$\uff0c\u90a3\u4e48\u5176\u5b9e\u53ef\u4ee5\u628a\u5b83\u770b\u6210$[1, r - l + 1]$\uff0c\u6240\u4ee5\u53ea\u548c\u5b50\u6811\u5927\u5c0f\u6709\u5173\uff0c\u548c\u5b50\u6811\u6743\u503c\u65e0\u5173\n\n\u624b\u73a9\u4e00\u6ce2\u5c0f\u6570\u636e\uff1a\n\n\u5f53$N=1$\u65f6\uff0c\u5c31\u662f\u4e00\u4e2a\u70b9\n\n\u5f53$N=2$\u65f6\uff0c\u4e8c\u4e3a\u6839\uff0c\u4e00\u4e3a\u6839\u7684\u5de6\u5b50\u6811\n\n\u5f53$N=3/4$\u65f6\u4e3a\u6837\u4f8b\n\n\u5f53$N=5$\u65f6\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a2\u7684\u5b50\u6811\u62fc\u6210\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u80fd\u4f5c\u4e3a\u53f3\u5b50\u6811\u7684\u53ea\u6709$2/4$\uff0c\u524d\u4e94\u4e2a\u90fd\u4e0d\u662f\u6ee1\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5408\u5e76\u4e24\u9897\u6811\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u4e8c\u53c9\u6811\u9ad8\u5ea6\u76f8\u540c\n\n\u53d1\u73b02\u7684\u9ad8\u5ea6\u4e3a2\uff0c\u6ca1\u6709\u4e0e\u4e4b\u76f8\u540c\u6811\u9ad8\u7684\u6811\uff0c\u6240\u4ee5\u80fd\u4f5c\u4e3a\u53f3\u5b50\u6811\u7684\u53ea\u6709$4$\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u6709\uff1a\u7528$4/5$\u53ef\u4ee5\u51d1\u51fa$9/10$\uff0c$9/10$\u53c8\u53ef\u4ee5\u62fc\u51fa$19/20$\u2026\u2026\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528$4/5$\u4e00\u8def\u9012\u63a8\u4e0b\u53bb\uff0c\u53d1\u73b0\u6bcf\u6b21\u90fd*\u4e86$2$\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a$O(logN)$\n## $Code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main() {\n\tint n, x = 4, y = 5;\n\tscanf(\"%d\", &n);\n\tif(n == 1 || n == 2) return puts(\"1\"), 0;\n\twhile(y < n) {\n\t\tif(x & 1) x = 2 * y, y = x + 1;\n\t\telse x = 2 * y - 1, y = x + 1;\n\t}\n\treturn printf(\"%d\", (x == n || y == n)), 0;\n}\n\n```",
        "postTime": 1571390763,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1237E \u3010Balanced Binary Search Trees\u3011"
    },
    {
        "content": "$n$ \u4e00\u5b9a\u5728\u6839\u4e0d\u505c\u5411\u53f3\u8d70\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u5219 $n$ \u4e0e\u6839\u8282\u70b9\u5947\u5076\u6027\u76f8\u540c\n\n\u7531\u4e8e\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5 $root=\\lfloor\\dfrac n2\\rfloor\\text{\u6216}\\lceil \\dfrac n2\\rceil$\n\n\u5219\u53ef\u4ee5\u77e5\u9053\u5bf9\u4e8e\u4e00\u4e2a $n$ \u53ea\u6709\u4e00\u79cd\u5408\u6cd5\u7684\u6839\u8282\u70b9\uff0c\u7531\u4e8e $root$ \u548c $n$ \u5947\u5076\u6027\u76f8\u540c\uff0c\u6240\u4ee5\u5b83\u7684\u53f3\u5b50\u6811\u7684\u5927\u5c0f\u4e3a\u5076\u6570\n\n\u5bb9\u6613\u53d1\u73b0\uff0c$root$ \u7684\u5de6\u53f3\u5b50\u6811\u4e3a\u4e24\u4e2a\u9ad8\u5ea6\u76f8\u540c\u7684\u5408\u6cd5\u6811\uff0c\u6216\u4e3a\u4e24\u4e2a\u9ad8\u5ea6\u76f8\u5dee\u4e3a $1$ \u4e14\u9ad8\u5ea6\u8f83\u5c0f\u7684\u5b50\u6811\u662f\u5b8c\u7f8e\u4e8c\u53c9\u6811\n\n\u8003\u8651\u4f7f\u7528\u5927\u5c0f\u4e3a $1$ \u548c $2$ \u7684\u5408\u6cd5\u6811\u6784\u9020\u5176\u4ed6\u7684\u5408\u6cd5\u6811\n\n\u7531\u4e8e\u53f3\u5b50\u6811\u4e00\u5b9a\u662f\u5076\u6570\uff0c\u6240\u4ee5\u53ea\u6709 $2$ \u53ef\u4ee5\u4f5c\u4e3a\u53f3\u5b50\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u6784\u9020\u51fa\u7684\u6811\u5927\u5c0f\u4e3a $4$ \u548c $5$\n\n\u6211\u4eec\u63a5\u7740\u6784\u9020\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u867d\u7136\u5927\u5c0f\u4e3a $2$ \u548c $4$ \u7684\u5b50\u6811\u9ad8\u5ea6\u76f8\u5dee\u4e3a $1$\uff0c\u4f46 $2$ \u8fd9\u4e2a\u6811\u4e0d\u662f\u5b8c\u7f8e\u4e8c\u53c9\u6811\uff0c\u540c\u7406\uff0c\u5176\u4ed6\u7528 $1,2$ \u548c $4,5$ \u7ec4\u5408\u7684\u60c5\u51b5\u4e5f\u662f\u4e0d\u5408\u6cd5\u7684\n\n\u6240\u4ee5\u53ea\u80fd $4,5$ \u7ec4\u5408\uff0c$4$ \u662f\u5076\u6570\u653e\u5728\u53f3\u5b50\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u6784\u9020\u51fa\u7684\u6811\u4e3a $9,10$\n\n\u4ee5\u6b64\u7c7b\u63a8\n\n\u518d\u8bc1\u660e\u552f\u4e00\u6027\uff0c\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u5373\u53ef\uff0c\u5927\u5c0f\u4e3a $1,2$ \u7684\u6811\u662f\u552f\u4e00\u7684\uff0c\u5bf9\u4e8e\u4e00\u68f5\u5408\u6cd5\u7684\u6811\uff0c\u901a\u8fc7\u4e0a\u9762\u7684\u6784\u9020\u65b9\u6cd5\u53ef\u77e5\uff0c\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u8981\u4e48\u5168\u662f\u5076\u6570\u4e14\u76f8\u540c\uff0c\u8981\u4e48\u4e00\u4e2a\u5076\u6570\u4e00\u4e2a\u5947\u6570\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e00\u79cd\u4ea4\u6362\u540e\u6811\u4e0d\u53d8\uff0c\u4e00\u79cd\u65e0\u6cd5\u4ea4\u6362\uff0c\u800c\u6839\u636e\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u8fd9\u68f5\u6811\u662f\u552f\u4e00\u7684\n\n```cpp\nint n,now;\nint main()\n{\n\tnow = 1,n = read();\n\twhile(now <= n)\n\t{\n\t\tif(now == n || now == n - 1) { puts(\"1\");return 0; }\n\t\tnow = now * 2 + 1 + (now & 1);\n\t}puts(\"0\");\n}\n```",
        "postTime": 1593997988,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1237E \u3010Balanced Binary Search Trees\u3011"
    }
]