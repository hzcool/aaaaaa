[
    {
        "content": "[**CF56E \u3010Domino Principle\u3011**](https://www.luogu.com.cn/problem/CF56E)        \n$ $     \n#### \u9898\u76ee\u7ffb\u8bd1\uff1a\n>\u6709 $n$ ( $n \\le 10^5$ ) \u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u7ed9\u5b9a\u4ed6\u4eec\u7684\u5750\u6807 $x$\u548c\u9ad8\u5ea6 $h$  ( $x$ \u8d8a\u5927\u5219\u8d8a\u9760\u53f3) \uff0c\u6c42\u51fa\u5f53\u7b2c $i$ \u4e2a\u9aa8\u724c\u5411\u53f3\u5012\u4e0b\u65f6\u4f1a\u6709\u51e0\u4e2a\u9aa8\u724c\u5012\u4e0b\u3002\u7b2c $i$ \u5757\u9aa8\u724c\u80fd\u538b\u5012\u7684\u8303\u56f4\u5728 $[x_i+1,x_i+h_i-1]$ \u4e4b\u95f4\u3002     \n\n  \n#### \u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n- \u8f93\u5165\u4e2d\u9aa8\u724c\u7684 $x$ \u503c\u4e0d\u4e00\u5b9a\u6709\u5e8f\n- \u88ab\u538b\u5012\u9aa8\u724c\u53ef\u80fd\u4e5f\u4f1a\u538b\u5012\u5176\u4ed6\u9aa8\u724c\n\n\n#### \u601d\u8def\uff1a\n\u76f4\u63a5\u66b4\u529b\u7b97\u80af\u5b9a\u4f1aT\uff0c\u4e8c\u5206\u7684\u8bdd\u56e0\u4e3a\u4f1a\u6709\u91cd\u590d\u90e8\u5206\u6240\u4ee5\u4e5f\u4e0d\u597d\u505a\uff0c\u56e0\u6b64\u8003\u8651\u52a8\u6001\u89c4\u5212\u3002     \n1. \u5148\u6309\u7167 $x$ \u5750\u6807\u6392\u6b63\u5e8f\uff0c\u4f46\u679a\u4e3e\u65f6\u8981\u4ece\u540e\u5411\u524d\u679a\u4e3e (\u56e0\u4e3a\u540e\u9762\u9aa8\u724c\u7684\u4e0d\u4f1a\u5f71\u54cd\u524d\u9762\uff0c\u56e0\u6b64\u5148\u4ece\u540e\u9762\u7b97\n1. \u6bcf\u6b21\u8ba1\u7b97 $ans_i$ \u65f6\u5148\u8003\u8651 $i$ \u80fd\u5426\u538b\u5012 $i+1$\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u52a0\u4e0a $ans_{i+1}$  \uff0c\u7136\u540e\u518d\u770b $i$ \u80fd\u5426\u538b\u5012 $i+1$ \u4e0d\u80fd\u538b\u5012\u7684\u7b2c\u4e00\u5757\u9aa8\u724c\uff0c\u53ef\u4ee5\u7b54\u6848\u5c31\u518d\u52a0\u4e0a\u90a3\u5757\u9aa8\u724c\u7684\u7b54\u6848\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n#### \u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<bitset>\n#include<cmath>\n#include<queue>\n#include<map>\n#include<set>\n\nusing namespace std;\n\nint read()\n{\n\tint ans=0,f=1;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){ans=ans*10+c-'0';c=getchar();}\n\treturn ans*f;\n}\n\nconst int N=1e5+5;\nint n,ans[N],last[N];\n// last \u5b58\u50a8\u6392\u5e8f\u540e\u7684\u7b2c i \u5757\u9aa8\u724c\u538b\u4e0d\u5012\u7684\u7b2c\u4e00\u5757\u9aa8\u724c\u7684\u4f4d\u7f6e\n\nstruct Node\n{\n\tint x,h,p;  // p \u7528\u6765\u6807\u8bb0\u95ee\u9898\u7f16\u53f7\n\tbool operator < (const Node &t)const\n\t{  // \u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u6392\u5e8f\u65f6\u6309\u7167 x \u6b63\u5e8f\u6392\u5217\n\t\treturn t.x>x;\n\t}\n}a[N];\n\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ta[i].x=read();\n\t\ta[i].h=read();\n\t\ta[i].p=i;\n\t}  // \u8bfb\u5165\n\tsort(a+1,a+1+n); / / \u6392\u5e8f\n\tfor(int i=1;i<=n;++i)\n\t\tans[i]=1; // \u56e0\u4e3a\u538b\u5012\u4e00\u5757\u9aa8\u724c\u65f6\u5b83\u81ea\u5df1\u4e00\u5b9a\u4f1a\u5012(\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u5417...)\uff0c\u6240\u4ee5\u7b54\u6848\u81f3\u5c11\u662f 1\n\tfor(int i=n-1;i>=1;--i)\n    // \u56e0\u4e3a\u6700\u540e\u9762\u7684\u9aa8\u724c\u8c01\u90fd\u538b\u4e0d\u5230\uff0c\u6240\u4ee5\u76f4\u63a5\u4ece n-1 \u5f00\u59cb\u7b97\n\t{\n\t\tint now=i+1;  // now \u5b58\u50a8\u4e0b\u4e00\u6b21\u9700\u8981\u6bd4\u8f83\u7684\u9aa8\u724c\u4e0b\u6807\uff0c\u6700\u5f00\u59cb\u4e3a i+1\n\t\twhile(now&&a[i].x+a[i].h>a[now].x)\n        // \u5982\u679c\u540e\u9762\u8fd8\u6709\u9aa8\u724c \u5e76\u4e14 \u8fd9\u5757\u9aa8\u724c\u80fd\u538b\u5012\u4e0b\u4e00\u4e2a\u9700\u8981\u538b\u5012\u9aa8\u724c\n\t\t{\n\t\t\tans[a[i].p]+=ans[a[now].p];\n            // \u5c31\u628a\u7b54\u6848\u52a0\u4e0a\u4e0b\u4e00\u5757\u9700\u8981\u538b\u5012\u7684\u9aa8\u724c\u7684\u7b54\u6848\n\t\t\tnow=last[now];\n            // \u5e76\u66f4\u65b0 now \u4e3a \u521a\u538b\u5012\u7684\u8fd9\u5757\u9aa8\u724c \u7684\u9996\u4e2a\u65e0\u6cd5\u538b\u5012\u7684\u9aa8\u724c\u7684\u4e0b\u6807\n\t\t}\n\t\tlast[i]=now;  // \u7ef4\u62a4 last \uff0c\u56e0\u4e3a\u4e0b\u6807\u4e3a now \u7684\u9aa8\u724c\u5df2\u7ecf\u65e0\u6cd5\u88ab\u538b\u5012\uff0c\u4e14\u5b83\u524d\u9762\u7684\u9aa8\u724c\u90fd\u53ef\u4ee5\u88ab\u538b\u5012\uff0c\u6240\u4ee5 now \u5c31\u662f\u8fd9\u5757\u9aa8\u724c\u7684\u9996\u4e2a\u65e0\u6cd5\u88ab\u538b\u5012\u7684\u9aa8\u724c\n\t}\n\tfor(int i=1;i<=n;++i)\n    //\u8f93\u51fa\u65f6\u6ce8\u610f\u6309\u7167\u539f\u8f93\u5165\u987a\u5e8f\u6765\u8f93\u51fa\n\t\tprintf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1583146715,
        "uid": 157462,
        "name": "H6_6Q",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF56E \u3010Domino Principle\u3011"
    },
    {
        "content": "\u770b\u5b8c\u9898\u5e72\u6709\u79cd\u83ab\u540d\u7684\u719f\u6089\u611f\u3002\n\n**\u601d\u8def**\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u4e00\u4e2a $O(n \\log n)$ \u7684\u65b9\u6cd5\u3002\u74f6\u9888\u5728\u6392\u5e8f\u4e0a\uff0c\u6838\u5fc3\u4ee3\u7801\u662f\u7ebf\u6027\u7684\u3002\n\n\u9996\u5148\u5c06\u6574\u4e2a\u5e8f\u5217\u6309\u7167\u4f4d\u7f6e\u6392\u597d\u5e8f\u3002\n\n\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u9aa8\u724c\u53ea\u80fd\u538b\u5012\u4ed6\u53f3\u4fa7\u7684\u9aa8\u724c\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u53bb\u8003\u8651\u4ed6\u5de6\u4fa7\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u53f3\u5f80\u5de6\u4e00\u6b21\u679a\u4e3e\uff0c\u770b\u770b\u4ed6\u662f\u5426\u80fd\u538b\u5012\u4ed6\u53f3\u4fa7\u7684\u9aa8\u724c\u3002\n\n\u5982\u679c\u4e00\u4e2a\u9aa8\u724c\u80fd\u591f\u538b\u5012\u4ed6\u53f3\u9762\u7684\u9aa8\u724c\uff0c\u90a3\u4e5f\u4e00\u5b9a\u80fd\u538b\u5012\u4ed6\u53f3\u9762\u7684\u9aa8\u724c\u80fd\u538b\u5012\u7684\u6240\u6709\u9aa8\u724c\uff0c\u800c\u4e14\u8fd8\u53ef\u80fd\u538b\u5012\u66f4\u591a\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5df2\u7ecf\u5224\u65ad\u8fc7\u7684\u9aa8\u724c\uff0c\u6211\u4eec\u5206\u522b\u8bb0\u5f55\u4e0b\u4ed6\u80fd\u591f\u538b\u5012\u7684\u6700\u9760\u53f3\u7684\u9aa8\u724c\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u5f53\u524d\u7684\u9aa8\u724c\u5982\u679c\u53ef\u4ee5\u538b\u5012\u4ed6\u53f3\u9762\u7684\u9aa8\u724c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u53f3\u4fa7\u80fd\u591f\u538b\u5012\u6700\u591a\u7684\u9aa8\u724c\u8f6c\u79fb\u3002\u7136\u540e\u518d\u63a5\u7740\u5224\u65ad\u80fd\u5426\u538b\u5012\uff0c\u80fd\u7684\u8bdd\u5c31\u7ee7\u7eed\uff0c\u76f4\u5230\u538b\u4e0d\u5012\u4e3a\u6b62\u3002\n\n\u7136\u540e\u518d\u7b80\u5355\u7684\u8bc1\u660e\u4e00\u4e0b\u6838\u5fc3\u4ee3\u7801\u7684\u7ebf\u6027\u590d\u6742\u5ea6\u3002\n\n\u6838\u5fc3\u4ee3\u7801\u957f\u4e0b\u9762\u8fd9\u6837\n\n```cpp\n\nfor(int i=n-1;i;i--)\n\twhile(Dom[i].r<n&&Dom[Dom[i].r+1].pos-Dom[i].pos<Dom[i].range)\n    \t\tDom[i].r=Dom[Dom[i].r+1].r;\n\n```\n\n\u5916\u5c42\u7684\u5faa\u73af\u663e\u7136\u662f\u7ebf\u6027\u7684\uff0c\u5185\u5c42\u5faa\u73af\u770b\u4f3c\u8981\u5faa\u73af\u5f88\u591a\u6b21\u4f46\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\u3002\n\n\u82e5\u6709\u4e00\u4e2a\u9aa8\u724c\u4e00\u6b21\u6027\u7684\u538b\u5012\u4e86\u5f88\u591a\u5e76\u6ca1\u6709\u88ab\u4e4b\u524d\u7684\u9aa8\u724c\u538b\u5012\u8fc7\u7684\uff0c\u82e5\u538b\u5012\u4e86\u4e4b\u524d\u5c31\u88ab\u538b\u5012\u4e86\u7684\u90a3\u4e48\u4ed6\u81ea\u7136\u4e5f\u5c31\u8df3\u8fc7\u8fd9\u4e9b\u5224\u65ad\u4e86\uff0c\u90a3\u4e48\u5176\u4ed6\u6ca1\u88ab\u4e4b\u524d\u538b\u5012\u7684\u9aa8\u724c\u5c31\u90fd\u88ab\u7b97\u5728\u5f53\u524d\u7684\u9aa8\u724c\u8eab\u4e0a\u4e86\uff0c\u4e4b\u540e\u518d\u7b97\u8fc7\u6765\u5c31\u53ea\u9700\u8981\u5224\u65ad\u80fd\u4e0d\u80fd\u538b\u5012\u5f53\u524d\u7684\u9aa8\u724c\uff0c\u5982\u679c\u80fd\u7684\u8bdd\u540e\u9762\u7684\u4e00\u4e32\u4e5f\u81ea\u7136\u53ef\u4ee5\uff0c\u5982\u679c\u4e0d\u884c\u90a3\u4e48\u663e\u7136\u518d\u5f80\u540e\u7684\u9aa8\u724c\u4e5f\u90fd\u4e0d\u80fd\u88ab\u538b\u5012\uff0c\u8fd9\u6837\u5c31\u80fd\u5927\u5927\u51cf\u5c11\u6bcf\u6b21\u5224\u65ad\u7684\u64cd\u4f5c\u4e86\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u9aa8\u724c\u81f3\u591a\u88ab\u5224\u65ad\u4e00\u6b21\uff0c\u56e0\u6b64\u8fd9\u4e24\u5c42\u5faa\u73af\u7684\u590d\u6742\u5ea6\u5c31\u662f\u7ebf\u6027\u7684\u4e86\u3002\n\n\u7136\u540e\u53c8\u56e0\u4e3a\u4e8b\u5148\u6392\u4e86\u4e00\u904d\u5e8f\uff0c\u6240\u4ee5\u603b\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(n \\log n)$ \u4e86\u3002\n\n**\u6ce8\u610f\uff1a**\n\n\u9898\u76ee\u91cc\u89c4\u5b9a\u80fd\u538b\u5012\u7684\u8303\u56f4\u662f $[x+1,x+h-1]$ \uff0c\u8981\u6ce8\u610f\u4e0d\u80fd\u538b\u5012 $x+h$ \u7684\u4f4d\u7f6e\n\n\u518d\u4e0a\u4e2a\u4ee3\u7801\u3002\n\n```cpp\n\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\ninline void write(int x){\n\tstatic int sta[35];int top=0;\n\tif(x<0) putchar('-'),x=-x;\n\tdo{sta[++top]=x%10,x/=10;}while(x);\n\twhile(top) putchar(sta[top--]+'0');\n\tputchar(' ');return;\n}\ninline void chkmax(int &x,int y){return x=(x>y)?x:y,void();}\ninline void chkmin(int &x,int y){return x=(x<y)?x:y,void();}\nint n,ans[100010];\nstruct domino{\n\tint pos,range,r,id;\n\tbool operator< (const domino &a)const{//\u6839\u636e\u4f4d\u7f6e\u8fdb\u884c\u6392\u5e8f\u3002\n\t\treturn pos<a.pos;\n\t}\n}Dom[100010];\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++) Dom[i].pos=read(),Dom[i].range=read(),Dom[i].id=i;//\u8bb0\u5f55\u4e0b\u6765\u4f4d\u7f6e\u548c\u8303\u56f4\uff0c\u56e0\u4e3a\u8981\u6392\u5e8f\u6240\u4ee5\u8981\u8bb0\u5f55\u4e0b id\u3002\n\tsort(Dom+1,Dom+1+n);\n\tfor(int i=1;i<=n;i++) Dom[i].r=i;//\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u6bcf\u4e2a\u9aa8\u724c\u4e00\u5f00\u59cb\u53ea\u80fd\u538b\u5012\u81ea\u5df1\u3002\n\tfor(int i=n-1;i;i--) while(Dom[i].r<n&&Dom[Dom[i].r+1].pos-Dom[i].pos<Dom[i].range) Dom[i].r=Dom[Dom[i].r+1].r;//\u6ee1\u8db3\u6761\u4ef6\uff0c\u76f4\u63a5\u8f6c\u79fb\u3002\u56e0\u4e3a\u4e0d\u80fd\u538b\u5012x+h\u7684\u4f4d\u7f6e\u6240\u4ee5\u7528<\u3002\n\tfor(int i=1;i<=n;i++) ans[Dom[i].id]=Dom[i].r-i+1;//\u81ea\u5df1\u7684\u4f4d\u7f6e\u662f i \u4e24\u4e2a\u4e00\u51cf\u5c31\u662f\u4e2a\u6570\u3002\n\tfor(int i=1;i<=n;i++) write(ans[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1625560538,
        "uid": 113507,
        "name": "Max_QAQ",
        "ccfLevel": 8,
        "title": "CF56E Domino Principle"
    },
    {
        "content": "[Domino Principle](https://www.luogu.com.cn/problem/CF56E)\n\n\u8fd9\u9053\u9898\u662f\u771f\u7684~~\u6c34~~\u96be\uff0c\u8fde\u672c\u849f\u84bb\u90fd\u80fd\u505a\u51fa\u6765\u3002\n\n## \u601d\u8def\uff1a\n\n1. \u5148\u5c06\u6574\u4e2a\u5e8f\u5217\u6392\u597d\u5e8f\u3002\n\n2. \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4ece\u53f3\u5f80\u5de6\u4f9d\u6b21\u679a\u4e3e\uff0c\u770b\u5b83\u662f\u5426\u80fd\u538b\u5012\u5b83\u53f3\u4fa7\u7684\u9aa8\u724c\u3002\n\n3. \u5982\u679c\u4e00\u4e2a\u9aa8\u724c\u80fd\u591f\u538b\u5012\u5b83\u53f3\u8fb9\u7684\u9aa8\u724c\uff0c\u90a3\u4e5f\u4e00\u5b9a\u80fd\u538b\u5012\u5b83\u53f3\u8fb9\u7684\u9aa8\u724c\u80fd\u538b\u5012\u7684\u6240\u6709\u9aa8\u724c\u3002\n\n4. \u5206\u522b\u8bb0\u5f55\u4e0b\u6bcf\u4e00\u4e2a\u5df2\u7ecf\u5224\u65ad\u8fc7\u7684\u9aa8\u724c\u80fd\u591f\u538b\u5012\u7684\u6700\u9760\u53f3\u7684\u9aa8\u724c\u3002\n\n5. \u5f53\u524d\u9aa8\u724c\u5982\u679c\u80fd\u538b\u5012\u5b83\u53f3\u8fb9\u7684\u9aa8\u724c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e0a\u5b83\u53f3\u8fb9\u80fd\u591f\u538b\u5012\u7684\u6700\u591a\u9aa8\u724c\u6570\u3002\u518d\u63a5\u7740\u5224\u65ad\u80fd\u5426\u538b\u5012\uff0c\u80fd\u7684\u8bdd\u5c31\u7ee7\u7eed\u3002\n\n### CODE:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct domino\n{\n\tint x,h,bh;//\u5206\u522b\u5b58\u50a8\u9aa8\u724c\u7684\u4f4d\u7f6e\u3001\u9ad8\u5ea6\u548c\u7f16\u53f7\n}a[100001];\ninline bool cmp(domino x,domino y)\n{\n\treturn x.x<y.x;//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n}\nint ans[100001],b[100001];//b\u5b58\u50a8\u7b2ci\u5757\u9aa8\u724c\u538b\u4e0d\u5012\u7684\u7b2c\u4e00\u5757\u9aa8\u724c\u7684\u4f4d\u7f6e\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i].x>>a[i].h;\n\t\ta[i].bh=i;\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tfor(register int i=1;i<=n;i++)\n\tans[i]=1;//\u56e0\u4e3a\u65e0\u8bba\u538b\u6ca1\u538b\u5012\u9aa8\u724c\u5b83\u81ea\u5df1\u4e00\u5b9a\u4f1a\u5012\uff0c\u6240\u4ee5\u7b54\u6848\u81f3\u5c11\u4e3a1\n\tfor(register int i=n-1;i>0;i--)\n\t{\n\t\tint c=i+1;//\u5b58\u50a8\u4e0b\u4e00\u6b21\u9700\u8981\u6bd4\u8f83\u7684\u9aa8\u724c\u7f16\u53f7\n\t\twhile(c!=0&&a[i].x+a[i].h>a[c].x)//\u5982\u679c\u540e\u9762\u8fd8\u6709\u9aa8\u724c\u4e14\u80fd\u538b\u5012\u4e0b\u4e00\u4e2a\uff08\u56e0\u4e3a\u4e0d\u80fd\u538b\u5012x+h\u7684\u4f4d\u7f6e\u6240\u4ee5\u8fd9\u91cc\u7528<\uff09\n\t\t{\n\t\t\tans[a[i].bh]+=ans[a[c].bh];//\u628a\u7b54\u6848\u52a0\u4e0a\u4e0b\u4e00\u5757\u538b\u5012\u7684\u9aa8\u724c\u80fd\u538b\u5012\u7684\u6570\u91cf\n\t\t\tc=b[c];//c\u4e3a\u521a\u538b\u5012\u7684\u9aa8\u724c\u7684\u9996\u4e2a\u65e0\u6cd5\u538b\u5012\u7684\u9aa8\u724c\u7684\u7f16\u53f7\n\t\t}\n\t\tb[i]=c;//\u66f4\u65b0b\n\t}\n\tfor(register int i=1;i<=n;i++)\n\tcout<<ans[i]<<\" \";\n\treturn 0;\n}\n```",
        "postTime": 1635601108,
        "uid": 545692,
        "name": "mzyc_jx",
        "ccfLevel": 0,
        "title": "Domino Principle \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\u4f30\u8ba1\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\u5427\n\n\u5927\u4f6c\u4eec\u7684 $O(n log n)$ \u5199\u6cd5\u849f\u84bb\u8868\u793a\u5199\u4e0d\u51fa\u6765\uff0c\u4e8e\u662f\u5c31\u5199\u4e86\u4e2a\u975e\u5e38\u66b4\u529b\u7684 $O(n (logn+\\sqrt{n}))$ \u5206\u5757\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u7684DP\u3002\n\n\u6ce8\u610f\uff1a\n\n1.\u8f93\u5165\u4e2d\u7684 $x$ \u4e0d\u4e00\u5b9a\u6709\u5e8f\n\n2.\u9aa8\u724c\u5012\u4e86\u8fd8\u4f1a\u538b\u5012\u66f4\u591a\u7684\n\n\u663e\u800c\u6613\u89c1\u7684\uff0c\u6211\u4eec\u4ee4 $f[i]$ \u8868\u793a\u7b2ci\u4e2a\u9aa8\u724c\u80fd\u591f\u7838\u5012\u7684\u9aa8\u724c\u6570\u91cf\u3002\n\n\u6211\u4eec\u5e94\u8be5\u5148\u6309\u7167x\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u4e00\u904d\u5e8f\uff0c\u7136\u540e\u4ece\u53f3\u5f80\u5de6\u679a\u4e3e\uff0c\u56e0\u4e3a\u4ece\u53f3\u5411\u5de6\u65b9\u4fbf\u6211\u4eec\u7edf\u8ba1\u7b54\u6848\uff0c\u8fd9\u79cd\u66b4\u529b\u7684\u679a\u4e3e\u5199\u6cd5 $O(n^2)$ \u4f1aT\u7206\u3002\n\n\u601d\u80031\uff1a\u74f6\u9888\u5728\u4e8e\u7edf\u8ba1\u6700\u5927\u503c\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6392\u8fc7\u5e8f\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u73c2\u4ee5\u76f4\u63a5\u4e8c\u5206\u67e5\u627e\u80fd\u591f\u7838\u5230\u7684\u6700\u8fdc\u7684\u4e00\u4e2a\u9aa8\u724c\u3002\u63d0\u4f9b\u4e00\u4e0b\u8fd9\u90e8\u5206\u4ee3\u7801\uff1a\n\n```cpp\nint L=i,R=n,mid;\nwhile (L<R) {\n\tmid=(L+R)>>1;mid++;\n\tif (a[mid].x>=a[i].x+a[i].y) R=mid-1; //x\u8868\u793ax\u5750\u6807\uff0cy\u8868\u793a\u9aa8\u724c\u9ad8\u5ea6\u3002\n\telse L=mid;\n}\n```\n\n\u5176\u4e2d $i$ \u8868\u793a\u5f53\u524d\u8be5\u7edf\u8ba1\u7b2c $i$ \u4e2a\u9aa8\u724c\u7684\u7b54\u6848\uff0c\u7136\u540e\u4e8c\u5206\u679a\u4e3e\u5f88\u7b80\u5355\u5c31\u4e0d\u89e3\u91ca\u4e86\u7f62\u3002\n\n\u601d\u80032\uff1a\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u600e\u6837\u7edf\u8ba1\u7b54\u6848\u3002\u4e8c\u5206\u540e\u7684\u7ed3\u679c\u5982\u56fe\u6240\u793a\uff1a\n\n![\u770b\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/4wtq3hsl.png)\n\n\u90a3\u4e48\u663e\u800c\u6613\u89c1\u7684\uff0c\u6211\u4eec\u7684\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u73c2\u4ee5\u5217\u4e3a\uff1a\n\n$$f[i]=max{f[j]+(j-i)},(i<=j<=L)$$\n\n\u663e\u800c\u6613\u89c1\u7684\uff0c\u6211\u4eec\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 $f[j]+j$ \u7684\u6700\u5927\u503c\u3002\n\n\u6574\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define re register\nusing namespace std;\nconst int N=1e5+5;\nint n,f[N],block,belong[N],maxx[N],l[N],r[N],num,maxpos[N],ans[N];\nstruct node {\n\tint x,y,id;\n}a[N];\nil int R () {\n\tint s=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)) {if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)) {s=(s<<3)+(s<<1)+(ch^48);ch=getchar();}\n\treturn s*f;\n}\nil void build () { //\u5efa\u5757\u5927\u5bb6\u90fd\u4f1a\u5427\n\tblock=sqrt(n);\n\tnum=n%block;if (n/block) num++;\n\tfor (re int i=1;i<=n;i++) belong[i]=(i-1)/block+1;\n\tfor (re int i=1;i<=num;i++) l[i]=(i-1)*block+1,r[i]=i*block,maxx[i]=0;\n\tr[num]=n;\n\treturn ;\n}\nil bool cmp (node x,node y) {\n\treturn x.x<y.x;\n}\nil int query (int x,int y) {\n\tint ans=0;\n\tif (belong[x]==belong[y]) {\n\t\tfor (re int i=x;i<=y;i++) ans=max(ans,f[i]+i);\n\t\treturn ans;\n\t}\n\tfor (re int i=x;i<=r[belong[x]];i++) ans=max(ans,f[i]+i);\n\tfor (re int i=belong[x]+1;i<belong[y];i++) ans=max(ans,maxx[i]+maxpos[i]);\n\tfor (re int i=l[belong[y]];i<=y;i++) ans=max(ans,f[i]+i);\n\treturn ans;\n}\nint main () {\n\tn=R();\n\tfor (re int i=1;i<=n;i++) a[i].x=R(),a[i].y=R(),a[i].id=i;\n\tsort(a+1,a+1+n,cmp);\n\tbuild();\n\tf[n]=1,maxx[num]=1,maxpos[num]=n,ans[a[n].id]=1;\n\tfor (re int i=n-1;i>=1;i--) {\n\t\tint L=i,R=n,mid;\n\t\twhile (L<R) {\n\t\t\tmid=(L+R)>>1;mid++;\n\t\t\tif (a[mid].x>=a[i].x+a[i].y) R=mid-1;\n\t\t\telse L=mid;\n\t\t}\n\t\tif (i==L) {f[i]=1,ans[a[i].id]=1;continue;}\n\t\tf[i]=query(i,L)-i; //\u67e5\u8be2\n\t\tif (maxx[belong[i]]+maxpos[belong[i]]<f[i]+i) maxx[belong[i]]=f[i],maxpos[belong[i]]=i; //\u52a8\u6001\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\n\t\tans[a[i].id]=f[i];\n\t}\n\tfor (int i=1;i<=n;i++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n\n\u5176\u4e2d\u6211\u5b9a\u4e49\u4e86 $maxx[i]$ \u4e3a\u5757 $i$ \u7684\u6700\u5927\u503c\uff0c $maxpos[i]$ \u4e3a\u5757 $i$ \u7684\u6700\u5927\u503c\u6240\u5728\u5904\uff0c\u4ee5\u4fbf\u4e8e\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u3002\u4f46\u662f\u5176\u4e2d $maxx[i]$ \u548c $maxpos[i]$ \u7684\u66f4\u65b0\u9700\u8981\u4e92\u76f8\u914d\u5408\uff0c\u53ea\u6709\u6ee1\u8db3 $f[j]+j$ \u6700\u5927\u624d\u4f1a\u66f4\u65b0\u3002\n",
        "postTime": 1630171876,
        "uid": 371278,
        "name": "herselfqwq",
        "ccfLevel": 4,
        "title": "Solution to CF56E"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u9aa8\u724c\u5e76\u4e0d\u662f\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f\u7684\uff0c\u8003\u8651\u5148\u5c06\u5176\u6309\u7167\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u540e\u5f80\u524d\u8003\u8651\u6bcf\u4e00\u4e2a\u9aa8\u724c\u3002\n\n\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u9aa8\u724c\u80fd\u591f\u538b\u5230\u540e\u9762\u7684\u67d0\u4e00\u4e2a\u9aa8\u724c\uff0c\u90a3\u4e48\u4e5f\u5c31\u4e00\u5b9a\u80fd\u538b\u5230\u53f3\u8fb9\u90a3\u4e2a\u9aa8\u724c\u80fd\u538b\u5012\u7684\u6240\u6709\u7684\u9aa8\u724c\uff0c\u9996\u5148\u60f3\u5230\u4e00\u79cd\u4e8c\u5206\u5411\u53f3\u76f4\u63a5\u538b\u5230\u7684\u9aa8\u724c\u4f4d\u7f6e\uff0c\u7136\u540e\u6839\u636e\u76f4\u63a5\u80fd\u538b\u5230\u7684\u5176\u4e2d\u7684\u6700\u5927\u503c\u6765\u5224\u5b9a\u5f53\u524d\u9aa8\u724c\u80fd\u538b\u5012\u7684\u9aa8\u724c\u6570\u91cf\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(nlogn)$ \u7684\uff0c\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u4e86\uff0c\u4f46\u8fd9\u6837\u8fd8\u4e0d\u591f\u4f18\u79c0\uff0c\u5176\u5b9e\u8fd9\u4e2a\u540e\u9762\u7684\u5224\u5b9a\u7b97\u6cd5\u662f\u53ef\u4ee5\u505a\u5230 $O(n)$ \u7684\u3002\n\n-----\n\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c06\u539f\u5148\u7684\u4e8c\u5206\u6cd5\u6539\u4e3a\u5411\u53f3\u76f4\u63a5\u641c\u7d22\u4f4d\u7f6e\uff0c\u6bcf\u4e00\u6b21\u76f4\u63a5\u8df3\u5230\u5f53\u671f\u6240\u5728\u9aa8\u724c\u6240\u80fd\u538b\u5012\u7684\u4f4d\u7f6e\uff0c\u80fd\u538b\u5012\u7684\u6700\u53f3\u8fb9\u7684\u4f4d\u7f6e\u76f4\u63a5\u5c31\u662f\u8df3\u5230\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u6b63\u786e\u6027\u884c\u4e0a\u3002\u7531\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u80fd\u538b\u5012\u7684\u4f4d\u7f6e\u4e00\u5b9a\u5728\u5176\u53f3\u8fb9\uff0c\u6240\u4ee5\u5355\u4e2a\u4f4d\u7f6e\u6700\u52a3\u60c5\u51b5\u5c31\u662f\u76f4\u63a5\u679a\u4e3e\u8fc7\u53bb\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5373\u4f7f\u539f\u4f4d\u7f6e\u4e0d\u80fd\u538b\u5230\uff0c\u901a\u8fc7\u4e00\u5f00\u59cb\u7684\u5206\u6790\u4e5f\u5e94\u5f53\u662f\u53ef\u884c\u7684\u89e3\uff0c\u6240\u4ee5\u4e5f\u4e0d\u5b58\u5728\u76f4\u63a5\u8df3\u8fc7\u4e86\u5e94\u5f53\u5b58\u5728\u7684\u4f4d\u7f6e\u3002\n\n\u590d\u6742\u5ea6\u4e0a\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u5982\u679c\u88ab\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u538b\u5230\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u8fd9\u4e2a\u4f4d\u7f6e\u88ab\u90a3\u4e2a\u4f4d\u7f6e\u8986\u76d6\u4e86\uff0c\n\n----\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct node{\n\tint nxt,id,h,x,ans;\n}p[100005];\nbool cmp1(node a,node b){\n\treturn a.x<b.x;\n}\nbool cmp2(node a,node b){\n\treturn a.id<b.id;\n}\nint n;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d%d\",&p[i].x,&p[i].h),p[i].id=i,p[i].ans=1;;\n\tsort(p+1,p+n+1,cmp1);\n\tfor(int i=1;i<=n;i++)\n\tp[i].nxt=i;\n\tp[n+1].x=2147483647;\n\tfor(int i=n;i>=1;i--){\n\t\twhile(p[i].nxt<n&&p[p[i].nxt+1].x-p[i].x<p[i].h)\n\t\tp[i].ans+=p[p[i].nxt+1].ans,p[i].nxt=p[p[i].nxt+1].nxt;\n\t}\n\tsort(p+1,p+n+1,cmp2);\n\tfor(int i=1;i<=n;i++)\n\tprintf(\"%d \",p[i].ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1629814902,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF56E Domino Principle"
    },
    {
        "content": "## \u6811\u72b6\u6570\u7ec4\u5927\u6cd5\u597d\uff01\n\n\u6bd4\u8f83\u660e\u663e\u7684 dp \u65b9\u7a0b\uff1a\n\n$$f[i]=\\max\\{f[j]+j-i\\},(pos[j]-pos[i]<len[i],j>i)$$\n\n\u4ece\u53f3\u5f80\u5de6\u626b\uff0c$pos$ \u662f\u9aa8\u724c\u7684\u4f4d\u7f6e\uff0c $len$ \u662f\u9aa8\u724c\u7684\u957f\u5ea6\u3002\n\n\u66b4\u529b\u663e\u7136\u662f $O(n^2)$ \u7684\uff0c\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 $f[j]+j$ \u3002\n\n\u522b\u7684\u9898\u89e3\u90fd\u8bb2\u7684\u6bd4\u8f83\u6e05\u695a\u4e86\uff0c\u4f46\u57fa\u672c\u4e0a\u90fd\u7528\u4e86\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff0c\u800c\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u4ee3\u66ff\u7ebf\u6bb5\u6811 ~~\uff08\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u53d8\uff0c\u4f46\u591a\u597d\u6253\u554a\uff09~~\u3002\n\n\u4e00\u822c\u7684\u6811\u72b6\u6570\u7ec4\u53ea\u80fd\u7528\u6765\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u4f46\u8003\u8651\u5230\u90a3\u65f6\u8be2\u95ee\u7684\u662f\u533a\u95f4\uff0c\u4e3a\u4e86\u6c42 $sum[i]-sum[j]$ ,\u7ef4\u62a4\u7684\u4fe1\u606f\u5fc5\u987b\u6ee1\u8db3\u53ef\u51cf\u6027\u3002\n\n\u533a\u95f4 $\\max$ \u4e0d\u6ee1\u8db3\u53ef\u51cf\u6027\uff0c\u4f46\u6ca1\u5173\u7cfb\uff0c\u5bf9\u4e8e\u8fd9\u9898\u6211\u4eec\u4e0d\u9700\u8981\u51cf\u3002\u56e0\u4e3a\u4ece\u53f3\u5f80\u5de6 dp \u65f6 $i$ \u4e4b\u524d\u7684\u503c\u80af\u5b9a\u6ca1\u66f4\u65b0\u5230\uff0c\u90fd\u662f $0$ \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u524d\u7f00 $\\max$ \u5c31\u53ef\u4ee5\u4e86\uff08\u8fd8\u6709\u4e8c\u5206\u6c42\u6700\u53f3\u8fb9\u80fd\u538b\u5012\u7684\u9aa8\u724c\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n\\log n)$ \u3002\n\ncode ~~\uff08\u8f7b\u5fae\u538b\u884c\uff09~~\uff1a\n```\n#include<bits/stdc++.h>\ntemplate<class T>inline void read(T &x)\n{\n\tx=0;int f=0;char ch=getchar();\n\twhile(!isdigit(ch))\tf=ch=='-',ch=getchar();\n\twhile(isdigit(ch))\tx=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\tx=f?-x:x;\n}\nusing namespace std;\nconst int N=1e5+5;\nint n,f[N],pos[N],ans[N],pos2[N],tree[N];\nstruct node{\n\tint len,id;\n\tbool operator < (const node x) const {return pos[id]<pos[x.id];}\n}a[N];\ninline void add(int x,int v)\t{for(int i=x;i<=n;i+=i&-i)\ttree[i]=max(v,tree[i]);}\ninline int query(int x)\n{\n\tint res=0;\n\tfor(int i=x;i>=1;i-=i&-i)\tres=max(res,tree[i]);\n\treturn res;\n}\nint main()\n{\n\tread(n);\n\tfor(int i=1;i<=n;i++)\tread(pos[i]),read(a[i].len),a[i].id=i,a[i].len--,pos2[i]=pos[i];\n\tsort(a+1,a+n+1),sort(pos2+1,pos2+n+1);\n\tfor(int i=n,p;i;i--)\n\t{\n\t\tp=upper_bound(pos2+1,pos2+n+1,pos[a[i].id]+a[i].len)-pos2-1;\n\t\tf[i]=max(query(p)-i,1),add(i,f[i]+i);\n\t\tans[a[i].id]=f[i];\n\t}\n\tfor(int i=1;i<=n;i++)\tprintf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1591937116,
        "uid": 304995,
        "name": "PanH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF56E Domino Principle"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u7684\u601d\u60f3\u662f\u628a\u8fd9\u4e9b\u591a\u7c73\u8bfa\u9aa8\u724c\u53d8\u6210\u4e00\u9897\u6570\uff0c\u4f7f\u5f97\u8282\u70b9 i \u662f\u8282\u70b9 j \u7684\u4e00\u4e2a\u524d\u8f88\u5f53\u4e14\u4ec5\u5f53\u9aa8\u724c i \u5012\u4e86\u4f1a\u5bfc\u81f4 j \u5012\u3002\u8fd9\u6837\u8fd9\u4e9b\u9aa8\u724c\u5c31\u9000\u5316\u6210\u4e00\u4e2a\u68ee\u6797\uff0c\u4e00\u4e2a\u9aa8\u724c\u7684\u7b54\u6848\u5c31\u662f\u5b83\u5bf9\u5e94\u5b50\u6811\u7684\u5927\u5c0f\u3002\n\n\u5982\u4f55\u9000\u5316\u6210\u4e00\u4e2a\u68ee\u6797\u5c31\u4e0d\u591a\u8bb2\u4e86\uff0c\u5e94\u4e3a\u66f4 AT5369 \u4e00\u6a21\u4e00\u6837\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\uff1a[\u535a\u5ba2\u94fe\u63a5](https://b3s23life.blog.luogu.org/solution-at5369)\n\n\u4ee3\u7801\uff0c\u53bb\u6389\u7279\u957f\u7684template\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\nvector<pair<int, pii>> domino;\npriority_queue<pair<int, pii>, vector<pair<int, pii>>, greater<pair<int, pii>>> pq;\nvector<int> elist[100005];\nint sz[100005];\n\nint dfs(int u) {\n\tsz[u] = 1;\n\tfor(int& v:elist[u]) sz[u] += dfs(v);\n\treturn sz[u];\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n; gi(n);\n\trep(i, n) {\n\t\tint x, h; gi(x); gi(h);\n\t\tdomino.pb({x, {h, i}});\n\t}\n\tsort(all(domino));\n\tfor(int i=n-1; i>=0; i--) {\n\t\twhile(pq.size() && pq.top().fi < domino[i].fi+domino[i].se.fi) {\n\t\t\telist[domino[i].se.se].pb(pq.top().se.se);\n\t\t\tpq.pop();\n\t\t}\n\t\tpq.push(domino[i]);\n\t}\n\twhile(pq.size()) {\n\t\tdfs(pq.top().se.se);\n\t\tpq.pop();\n\t}\n\trep(i, n) {\n\t\tif(i) pc(' ');\n\t\tprint(sz[i]);\n\t}\n}\n\n```\n",
        "postTime": 1583896545,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF56E"
    },
    {
        "content": "~~\u597d\u5947\u602a\u554a,\u8ddf\u5176\u5b83\u9898\u89e3\u4e0d\u4e00\u6837~~\n\n\u8003\u8651$i$\u5012\u4e0b\u540e,\u6ee1\u8db3$x_i<x_j\\le x_i+h_i-1$\u7684$j$\u90fd\u4f1a\u5012\u4e0b,\u800c$j$\u5012\u4e0b\u53c8\u4f1a\u5bfc\u81f4\u4e4b\u540e\u7684\u9aa8\u724c\u5012\u4e0b,\u5373$i$\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e$j$\u7684\u8ba1\u7b97.\n\n\u56e0\u6b64,\u5c06\u9aa8\u724c\u6309$x$\u9012\u589e\u6392\u5e8f,\u5e76\u4ece\u5927\u5230\u5c0f\u5904\u7406(\u53ef\u4ee5\u987a\u4fbf\u79bb\u6563\u5316\u4e00\u4e0b).  \n\u8bb0$f(i)$\u8868\u793a(\u6392\u5e8f\u540e)\u9aa8\u724c$i$\u5012\u4e0b\u540e\u80fd\u538b\u5230\u7684\u6700\u8fdc\u6a2a\u5750\u6807.\u6ce8\u610f\u5230\u5bf9\u4e8e$j>i$\u7684$f(j)$\u5df2\u7ecf\u7b97\u597d,\u90a3\u4e48\u6709\n$$f(i)=\\max\\{x_i+h_i-1,\\max_{x_i<x_j\\le x_i+h_i-1} f(j)\\}$$\n\n\u8fd9\u73a9\u610f\u5c31\u662f\u4e2a\u5355\u70b9\u4fee\u6539,,\u533a\u95f4max.\u7ebf\u6bb5\u6811\u5373\u53ef\u7ef4\u62a4.  \n\u6709\u8da3\u7684\u662f,\u5bf9\u4e8e$k< i,f(k)$\u8fd8\u6ca1\u6709\u88ab\u8ba1\u7b97,\u5982\u679c\u5c06\u5176\u521d\u59cb\u5316\u4e3a-INF,\u5219\u6709\n$$\\max_{x_j\\le x_i+h_i-1} f(j)=\\max_{x_i<x_j\\le x_i+h_i-1} f(j)$$\n\n\u53d8\u6210\u4e86\u5355\u70b9\u4fee\u6539,\u524d\u7f00max.\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u7ef4\u62a4.  \n\u65f6\u95f4\u590d\u6742\u5ea6$\\mathcal O(n \\log n)$\n\n\u901a\u8fc7$f$\u63a8\u51fa\u539f\u7b54\u6848,\u4e0d\u7528\u6211\u591a\u8bf4\u4e86\u5427.\n```cpp\n#define MAXN 200011\nll n;\nstruct BIT\n{\n    ll t[MAXN];\n    void build(ll n)//\u521d\u59cb\u5316\u4e3a-INF\n    {\n    \tfor(ll i=1;i<=n;++i)t[i]=-INF;\n\t}\n    #define lowb (i&-i)\n    void modify(ll i,ll k)\n    {\n        while(i<=n)umax(t[i],k),i+=lowb;\n    }\n    ll Qmax(ll i)\n    {\n        ll res=-INF;\n        while(i)umax(res,t[i]),i-=lowb;\n        return res;\n    }\n}t;\nstruct one\n{\n    ll x,h,dex;\n    bool operator <(const one& t)\n    const\n    {\n        return x<t.x;\n    }\n}a[MAXN];\nll fx[MAXN],ans[MAXN];\nll place(ll val)\n{\n    return std::upper_bound(fx+1,fx+n+1,val)-fx;\n}\n\nint main()\n{\n    n=read();\n    t.build(n);\n    for(ll i=1;i<=n;++i)a[i].x=fx[i]=read(),a[i].h=read(),a[i].dex=i;\n    std::sort(fx+1,fx+n+1),std::sort(a+1,a+n+1);\n    for(ll i=n;i;--i)\n    {\n    \tll x=max(t.Qmax(place(a[i].x+a[i].h-1)-1),a[i].x+a[i].h-1);//\u6c42f(i)\n    \tans[a[i].dex]=place(x)-i;\n    \tt.modify(i,x);\n    }\n    for(ll i=1;i<=n;++i)printf(\"%lld \",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1585631118,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF56E \u3010Domino Principle\u3011"
    },
    {
        "content": "> [link](https://codeforces.com/problemset/problem/56/E)\n>\n> \u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u4f60\u4e00\u4e9b\u591a\u7c73\u8bfa\u9aa8\u724c\uff0c\u5728 $x$ \u8f74\u4e0a\u4ece\u5de6\u5230\u53f3\u6392\u5217\u5728\u4e00\u8d77\uff0c\u95ee\u6bcf\u4e00\u4e2a\u5012\u5411\u53f3\u8fb9\u7684\u65f6\u5019\u4f1a\u538b\u5012\u591a\u5c11\u4e2a\u9aa8\u724c\uff1f\n\n\u9996\u5148\u6309\u5750\u6807\u5347\u5e8f\u6392\u5e8f\n\n\u4ece\u540e\u5f80\u524d\u7ef4\u62a4 $to_i$\uff0c\u8868\u793a\u7b2c $i$ \u4e2a\u9aa8\u724c\u80fd\u63a8\u5230\u7684\u6700\u8fdc\u7684\u9aa8\u724c\u7684\u7f16\u53f7\u3002\n\n\u4e8c\u5206\u8fd9\u4e2a\u9aa8\u724c**\u81ea\u5df1**\u80fd\u63a8\u5230\u7684\u6700\u8fdc\u7684\u9aa8\u724c\uff0c\u8bbe\u8fd9\u4e2a\u9aa8\u724c\u4e3a $j$ \uff0c\u5219 $to_i=\\max(\\forall i\\le k\\le j:to_k)$ \uff0c\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u770b\u8d77\u6765\u6bd4\u5176\u4ed6\u9898\u89e3\u83dc\u5f88\u591a\u4f46\u662f **\u53c8 \u4e0d \u662f \u4e0d \u80fd A**\n\n```c++\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=100005;\nint n;\nstruct point{\n\tint pos,h,id;\n\tbool operator<(point b){\n\t\treturn pos<b.pos;\n\t}\n}tmp[MAXN];\nint a[MAXN],h[MAXN];\nint to[MAXN];\nint ans[MAXN];\n\nstruct Segment_Tree{\n\t// const int INF=0x3f3f3f3f;\n\tstruct node{\n\t\tint l,r,len;\n\t\tint add,v,mx;\n\t}st[MAXN*4];\n\t\n\tvoid build(int p,int l,int r){\n\t\tst[p].l=l;st[p].r=r;\n\t\tst[p].len=r-l+1;\n\t\tif (l==r){\n\t\t\t// st[p].v=a[l];\n\t\t\tst[p].mx=0;\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tbuild(p<<1,l,mid);\n\t\tbuild(p<<1|1,mid+1,r);\n\t\tst[p].v=st[p<<1].v+st[p<<1|1].v;\n\t\tst[p].mx=max(st[p<<1].mx,st[p<<1|1].mx);\n\t}\n\n\tvoid spread(int p){\n\t\t// st[p<<1].v+=st[p].add*st[p<<1].len;\n\t\t// st[p<<1|1].v+=st[p].add*st[p<<1|1].len;\n\t\tst[p<<1].add+=st[p].add;\n\t\tst[p<<1|1].add+=st[p].add;\n\t\tst[p<<1].mx+=st[p].add;\n\t\tst[p<<1|1].mx+=st[p].add;\n\t\tst[p].add=0;\n\t}\n\n\tvoid change(int p,int l,int r,int c){\n\t\tif (l<=st[p].l&&st[p].r<=r){\n\t\t\t// st[p].v+=c*st[p].len;\n\t\t\tst[p].add+=c;\n\t\t\tst[p].mx+=c;\n\t\t\treturn;\n\t\t}\n\t\tspread(p);\n\t\tint mid=st[p].l+st[p].r>>1;\n\t\tif (l<=mid) change(p<<1,l,r,c);\n\t\tif (r>mid) change(p<<1|1,l,r,c);\n\t\t// st[p].v=st[p<<1].v+st[p<<1|1].v;\n\t\tst[p].mx=max(st[p<<1].mx,st[p<<1|1].mx);\n\t}\n\n\tint query_max(int p,int l,int r){\n\t\tif (l<=st[p].l && st[p].r<=r)\n\t\t\treturn st[p].mx;\n\t\tspread(p);\n\t\tint mid=st[p].l+st[p].r>>1,ans=0;\n\t\tif (l<=mid) ans=query_max(p<<1,l,r);\n\t\tif (r>mid) ans=max(ans,query_max(p<<1|1,l,r));\n\t\treturn ans;\n\t}\n}seg;\n\nint main()\n\n{\n\tcin>>n;\n\tfor (int i=1;i<=n;i++){\n\t\tcin>>tmp[i].pos>>tmp[i].h;\n\t\ttmp[i].id=i;\n\t}\n\n\tsort(tmp+1,tmp+1+n);\n\n\tfor (int i=1;i<=n;i++){\n\t\ta[i]=tmp[i].pos;\n\t\th[i]=tmp[i].h;\n\t}\n\n\tseg.build(1,1,n);\n\tto[n]=n;\n\tans[tmp[n].id]=1;\n\tseg.change(1,n,n,n);\n\tfor (int i=n-1;i>=1;i--){\n\t\tint l=i,r=n,goal=a[i]+h[i]-1;\n\t\twhile (l<=r){\n\t\t\tint mid=l+r>>1;\n\t\t\tif (a[mid]<=goal) l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tto[i]=max(i,seg.query_max(1,i,r));\n\t\tseg.change(1,i,i,to[i]);\n\t\tans[tmp[i].id]=to[i]-i+1;\n\t}\n\n\tfor (int i=1;i<=n;i++)\n\t\tcout<<ans[i]<<\" \";\n\tcout<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1583928001,
        "uid": 48981,
        "name": "LTb_",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 CF56E Domino Principle"
    }
]