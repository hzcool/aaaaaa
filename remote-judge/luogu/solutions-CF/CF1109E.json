[
    {
        "content": "## \u9898\u610f\n\n\u8ba9\u4f60\u5728\u6a21\u610f\u4e49\u4e0b\u7ef4\u62a4\u533a\u95f4\u548c,\u652f\u6301\u533a\u95f4\u4e58\u6cd5,\u5355\u70b9\u9664\u6cd5.\n\n## solution\n\n\u6a21\u610f\u4e49\u4e0b\u7684\u533a\u95f4\u548c\u548c\u533a\u95f4\u4e58\u6cd5\u662f\u7ecf\u5178\u7684\u7ebf\u6bb5\u6811\u64cd\u4f5c,\u6211\u4eec\u8003\u8651\u600e\u4e48\u5728\u7ebf\u6bb5\u6811\u4e0a\u540c\u65f6\u652f\u6301\u5355\u70b9\u9664\u6cd5.\n\n\u8fd9\u8fb9\u6ca1\u6709\u4fdd\u8bc1\u9664\u6570\u548c\u6a21\u6570\u4e92\u8d28,\u6240\u4ee5\u76f4\u63a5\u9006\u5143\u662f\u5b8c\u5168\u4e0d\u884c\u7684.\n\n\u7531\u4e8e\u6ca1\u6709\u7b97\u6cd5\u53ef\u4ee5\u5904\u7406\u4e0d\u4e92\u8d28\u60c5\u51b5\u7684\u6a21\u610f\u4e49\u4e0b\u7684\u9664\u6cd5,\u8fd9\u63d0\u793a\u4e86\u6211\u4eec\u628a\u4e92\u8d28\u90e8\u5206\u548c\u4e0d\u4e92\u8d28\u90e8\u5206\u5206\u5f00\u5b58\u7684\u601d\u8def.\n\n\u4e92\u8d28\u90e8\u5206\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e58\u6cd5\u9006\u5143,\u4f46\u662f\u4e0d\u4e92\u8d28\u7684\u90e8\u5206\u6211\u4eec\u53ea\u80fd\u76f4\u63a5\u9664\u4e86.\n\n\u663e\u7136\u6570\u5f88\u5927,\u6211\u4eec\u4e0d\u80fd\u5b58\u4e0b\u4e0d\u4e92\u8d28\u7684\u6570\u4e0d\u53d6\u6a21\u65f6\u7684\u6570,\u6240\u4ee5\u8003\u8651\u53d8\u6210\u552f\u4e00\u5206\u89e3\u7684\u5f62\u5f0f\u5b58.\n\n\u8fd9\u91cc\u6709\u4e2a\u5c0ftips:\n\n>  \u5bf9\u4e8e\u5206\u6210\u552f\u4e00\u5206\u89e3\u5f62\u5f0f,\u6211\u4eec\u53ea\u9700\u8981\u5355\u70b9\u4e0a\u7684\u503c,\u800c\u533a\u95f4\u4e0a\u7684\u503c\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u7528\u5230,\u800c\u7ebf\u6bb5\u6811\u7684\u5355\u70b9\u7684 lazytag \u662f\u4e0d\u4f1a\u88ab\u4e0b\u4f20\u7684,\u6240\u4ee5\u628a\u8fd9\u4e2a\u76f4\u63a5\u6253\u5728 lazytag \u4e0a\u4e0b\u4f20\u5230\u5355\u70b9\u65f6\u76f4\u63a5\u5904\u7406 lazytag \u5c31\u53ef\u4ee5\u4e86,\u6211\u4eec pushup \u7ef4\u62a4\u7684\u53ea\u6709\u533a\u95f4\u548c\u4e00\u4e2a,\u800c\u4e0d\u9700\u8981\u7ef4\u62a4\u5176\u4ed6\u7684\u4fe1\u606f.\u5bf9\u4e8e\u4e92\u8d28\u90e8\u5206\u540c\u7406\n\n\u8fd9\u9898\u7684\u7801\u91cf\u5bf9\u4e8ecf\u8fd9\u79cd\u77ed\u65f6\u8d5b\u6765\u8bf4\u5b8c\u5168\u53d7\u4e0d\u4e86\u554a\uff08\n\n```cpp\n#include <bits/stdc++.h>\n#define N 100005\nusing namespace std;\n\ntemplate <typename T>\n\nvoid read(T &a)\n{\n\tT x = 0,f = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9')\n\t{\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\ta = x * f;\n}\n\ntemplate <typename T,typename... Args> void read(T &t,Args &... args) {read(t); read(args...); }\n\nint n,q,mod,a[N],cnt = 0;\nmap<int,int> mp,hxb;\n\nint gcd(int x,int y)\n{\n\treturn y ? gcd(y,x % y) : x;\n}\n\nvoid exgcd(int a,int b,int &x,int &y)\n{\n\tif (!b)\n\t{\n\t\tx = 1;\n\t\ty = 0;\n\t\treturn ;\n\t}\n\texgcd(b,a % b,y,x);\n\ty -= 1ll * a / b * x;\n}\n\nint inv(int x)\n{\n\tint a,b;\n\texgcd(x,mod,a,b);\n\treturn (a % mod + mod) % mod;\n}\n\nint ksm(int a,int b)\n{\n\tint res = 1;\n\twhile (b)\n\t{\n\t\tif (b & 1) res = 1ll * res * a % mod;\n\t\ta = 1ll * a * a % mod;\n\t\tb >>= 1;\n\t}\n\treturn res;\n}\n\nstruct Segment_Tree\n{\n\tint sum[N << 2],lazy[N << 2],fac[N << 2][15],tr[N << 2];\n\tvoid pushup(int now)\n\t{\n\t\tsum[now] = (sum[now << 1] + sum[now << 1 | 1]) % mod;\n\t}\n\tvoid pushdown(int now)\n\t{\n\t\tsum[now << 1] = 1ll * sum[now << 1] * lazy[now] % mod;\n\t\tlazy[now << 1] = 1ll * lazy[now << 1] * lazy[now] % mod;\n\t\ttr[now << 1] = 1ll * tr[now << 1] * tr[now] % mod;\n\t\tsum[now << 1 | 1] = 1ll * sum[now << 1 | 1] * lazy[now] % mod;\n\t\tlazy[now << 1 | 1] = 1ll * lazy[now << 1 | 1] * lazy[now] % mod;\n\t\ttr[now << 1 | 1] = 1ll * tr[now << 1 | 1] * tr[now] % mod;\n\t\ttr[now] = 1; \n\t\tlazy[now] = 1;\n\t\tfor (int i = 1; i <= cnt; i++)\n\t\t{\n\t\t\tfac[now << 1][i] += fac[now][i];\n\t\t\tfac[now << 1 | 1][i] += fac[now][i];\n\t\t\tfac[now][i] = 0;\n\t\t}\n\t}\n\tvoid build(int now,int l,int r)\n\t{\n\t\tlazy[now] = 1;\n\t\ttr[now] = 1;\n\t\t\tif (l == r)\n\t\t{\n\t\t\tsum[now] = a[l] % mod;\n\t\t\tint x = a[l];\n\t\t\tfor (int i = 1; i <= cnt; i++)\n\t\t\t\twhile (!(x % hxb[i])) fac[now][i]++,x /= hxb[i];\n\t\t\ttr[now] = x % mod;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(now << 1,l,mid);\n\t\tbuild(now << 1 | 1,mid + 1,r);\n\t\tpushup(now);\n\t}\n\tvoid update(int now,int l,int r,int p,int x)\n\t{\n\t\tif (l == r)\n\t\t{\n\t\t\tfor (int i = 1; i <= cnt; i++)\n\t\t\t\twhile (!(x % hxb[i])) fac[now][i]--,x /= hxb[i];\n\t\t\ttr[now] = 1ll * tr[now] * inv(x) % mod;\n\t\t\tsum[now] = tr[now];\n\t\t\tfor (int i = 1; i <= cnt; i++)\n\t\t\t\tsum[now] = 1ll * sum[now] * ksm(hxb[i],fac[now][i]) % mod;\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(now);\n\t\tint mid = (l + r) >> 1;\n\t\tif (p <= mid) update(now << 1,l,mid,p,x);\n\t\tif (p > mid) update(now << 1 | 1,mid + 1,r,p,x);\n\t\tpushup(now);\n\t}\n\tvoid update(int now,int l,int r,int ll,int rr,int x)\n\t{\n\t\tif (ll <= l && rr >= r)\n\t\t{\n\t\t\tsum[now] = 1ll * sum[now] * x % mod;\n\t\t\tlazy[now] = 1ll * lazy[now] * x % mod;\n\t\t\tfor (int i = 1; i <= cnt; i++)\n\t\t\t\twhile (!(x % hxb[i])) fac[now][i]++,x /= hxb[i];\n\t\t\ttr[now] = 1ll * tr[now] * x % mod;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tpushdown(now);\n\t\tif (ll <= mid) update(now << 1,l,mid,ll,rr,x);\n\t\tif (rr > mid) update(now << 1 | 1,mid + 1,r,ll,rr,x);\n\t\tpushup(now);\n\t}\n\tint query(int now,int l,int r,int ll,int rr)\n\t{\n\t\tif (ll <= l && rr >= r)\n\t\t{\n\t\t\treturn sum[now];\n\t\t}\n\t\tpushdown(now);\n\t\tint mid = (l + r) >> 1,ans = 0;\n\t\tif (ll <= mid) ans = (ans + query(now << 1,l,mid,ll,rr)) % mod;\n\t\tif (rr > mid) ans = (ans + query(now << 1 | 1,mid + 1,r,ll,rr)) % mod;\n\t\treturn ans;\n\t}\n}T;\n\nsigned main()\n{\n\tread(n,mod);\n\tint _mod = mod;\n\tfor (int i = 2; i * i <= _mod; i++)\n\t{\n\t\tif (_mod % i) continue;\n\t\tmp[i] = ++cnt;\n\t\thxb[cnt] = i;\n\t\twhile (!(_mod % i)) _mod /= i;\n\t}\n\tif (_mod != 1) mp[_mod] = ++cnt,hxb[cnt] = _mod;\n\tfor (int i = 1; i <= n; i++)\n\t\tread(a[i]);\n\tT.build(1,1,n);\n\tread(q);\n\twhile (q--)\n\t{\n\t\tint opt;\n\t\tread(opt);\n\t\tif (opt == 1)\n\t\t{\n\t\t\tint l,r,x;\n\t\t\tread(l,r,x);\n\t\t\tT.update(1,1,n,l,r,x);\n\t\t}\n\t\tif (opt == 2)\n\t\t{\n\t\t\tint p,x;\n\t\t\tread(p,x);\n\t\t\tT.update(1,1,n,p,x);\n\t\t}\n\t\tif (opt == 3)\n\t\t{\n\t\t\tint l,r;\n\t\t\tread(l,r);\n\t\t\tint ans = T.query(1,1,n,l,r);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1603172942,
        "uid": 68030,
        "name": "serverkiller",
        "ccfLevel": 0,
        "title": "CF1109E \u3010Sasha and a Very Easy Test\u3011"
    },
    {
        "content": "[$\\Large\\texttt{CF1109E}$](https://www.luogu.com.cn/problem/CF1109E)\n\n[$\\small\\texttt{In my cnblogs}$](https://www.cnblogs.com/RedreamMer/p/14068198.html)\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6b27\u62c9\u5b9a\u7406\uff08\u6269\u5c55\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff09\uff0c\u57fa\u672c\u7ebf\u6bb5\u6811\u64cd\u4f5c\n\n## \u9898\u610f\n\n\u5341\u5206\u7b80\u6d01\uff0c\u4e0d\u591a\u8d58\u8ff0\u3002\n\n\u6ce8\u610f $mod$ \u53ef\u4ee5\u4e0d\u4e3a\u8d28\u6570\uff0c\u6bcf\u4e2a\u5355\u70b9\u9664\u64cd\u4f5c\u4fdd\u8bc1\u80fd\u6574\u9664\u3002\n\n## \u601d\u8def\n\n\u82e5 $mod$ \u662f\u8d28\u6570\u5c31\u597d\u505a\u4e86\uff08\u4e0d\u7136\u600e\u4e48\u4f1a\u662f\u9ed1\u9898\uff09\uff0c\u4f46 $mod$ \u4e0d\u662f\u8d28\u6570\u4ee3\u8868\u5728\u5355\u70b9\u9664\u65f6\u4e0d\u80fd\u76f4\u63a5\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u8fb9\u4e58\u8fb9\u6a21\u3002\n\n\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u6269\u5c55\u8d39\u9a6c\u5b9a\u7406\uff1a\n\n$$a^{\\varphi(p)}=1\\mod p ~~(\\gcd(a,p)=1)$$\n\n\u53d1\u73b0\u5c0f\u4e8e $1e9$ \u7684\u6bcf\u4e2a\u6570\u8d28\u56e0\u6570\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7 $9$ \u4e2a\uff0c\u53ef\u4ee5\u60f3\u5230\u5c06\u6240\u6709\u8981\u8fdb\u884c\u64cd\u4f5c\u7684\u6570\u5206\u6210\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u8d28\u56e0\u5b50\u5168\u662f $mod$ \u7684\u8d28\u56e0\u5b50\uff0c\u5f00\u4e00\u4e2a\u5927\u5c0f\u4e3a $10$ \u7684\u6570\u7ec4\u66b4\u529b\u64cd\u4f5c\uff0c\u82e5\u9664\u5c31\u5728\u8fd9\u4e2a\u6570\u7ec4\u91cc\u9762\u51cf\u53bb\u8981\u51cf\u7684\u8d28\u56e0\u5b50\uff0c\u5269\u4e0b\u90e8\u5206\u7684\u80af\u5b9a\u4e0e $mod$ \u4e92\u8d28\uff0c\u9664\u4e00\u4e2a\u6570\u5c31\u4e58 $x^{\\varphi(mod)-1}$ \u5e76\u53d6\u6a21\u5c31\u597d\u4e86\u3002\n\n\u6ce8\u610f\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n\u53e6\u9644\u4e0a $\\varphi(n)$ \u7684\u6c42\u6cd5\uff1a\n\n$$\\varphi(n)=n\\times\\prod^{x}_{i=1}\\frac{p_i}{p_i-1}$$\n\n~~\u4e0d\u8981\u50cf\u6211 $\\varphi(n)$ \u6c42\u9519\u4e86\u8c031h~~\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\texttt{O(10NlogN)}$ (\u8fdc\u8fdc\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u4e0a\u9650)\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n #define ls n << 1\n #define rs n << 1 | 1\n #define int long long\n const int N = 1e5;\ninline int read()\n{\n    int s = 0;\n    register bool neg = 0;\n    register char c = getchar();\n    for (; c < '0' || c > '9'; c = getchar())\n        neg |= (c == '-');\n    for (; c >= '0' && c <= '9'; s = s * 10 + (c ^ 48), c = getchar())\n        ;\n    s = (neg ? -s : s);\n    return s;\n}\n\nint a,mod,b,p[10],top,q[N+10],t[N+10][10],add[10],pp;\nstruct segment {\n\tint l,r,val,lazy1[10],lazy2,lazy3;\n} s[N*4+10];\n\ninline int get_phi(int n) {\n\tint ans = n;\n\tfor (int i = 2; i*i <= n; i++) {\n\t\tif (!(n%i)) {\n\t\t\tans = 1ll * ans * (i - 1) / i;\n\t\t\twhile (!(n%i))n /= i;\n\t\t}\n\t}\n\tif (n > 1)ans = 1ll * ans * (n - 1) / n;\n\treturn ans;\n}\n\ninline void get(int n) {\n\tint qq=sqrt(n);\n\tfor(int i=2;i<=qq;i++) {\n\t\tif(n%i==0) {\n\t\t\tp[++top]=i;\n\t\t\twhile(n%i==0) n/=i;\n\t\t}\n\t}\n\tif(n!=1) p[++top]=n;\n}\n\ninline int qpow(int n,int m) {\n\tint res=1;\n\tfor(;m;m>>=1) {\n\t\tif(m&1) res=res*n%mod;\n\t\tn=n*n%mod;\n\t}\n\treturn res;\n}\n\ninline int calc(int n) {\n\tint res=1;\n\tfor(int i=1;i<=top;i++) res=(res*qpow(p[i],t[n][i]))%mod;\n\treturn res;\n}\n\ninline void up(int n) {\n\ts[n].val=(s[ls].val+s[rs].val)%mod;\n}\n\ninline void down(int n) {\n\ts[ls].val=s[ls].val*s[n].lazy2%mod;\n\ts[rs].val=s[rs].val*s[n].lazy2%mod;\n\ts[ls].lazy2=s[ls].lazy2*s[n].lazy2%mod;\n\ts[rs].lazy2=s[rs].lazy2*s[n].lazy2%mod;\n\ts[ls].lazy3=s[ls].lazy3*s[n].lazy3%mod;\n\ts[rs].lazy3=s[rs].lazy3*s[n].lazy3%mod;\n\ts[n].lazy2=s[n].lazy3=1;\n\tfor(int i=1;i<=top;i++) {\n\t\ts[ls].lazy1[i]+=s[n].lazy1[i];\n\t\ts[rs].lazy1[i]+=s[n].lazy1[i];\n\t\ts[n].lazy1[i]=0;\n\t}\n\treturn;\n}\n\ninline void build(int n,int l,int r) {\n\ts[n].l=l;\n\ts[n].r=r;\n\ts[n].lazy2=s[n].lazy3=1;\n\tmemset(s[n].lazy1,0,sizeof(s[n].lazy1));\n\tif(l==r) {\n\t\ts[n].val=q[l]*calc(l)%mod;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tup(n);\n}\n\ninline void div(int n,int m,int k) {\n\tif(s[n].l==s[n].r) {\n\t\tq[m]=q[m]*s[n].lazy3%mod;\n\t\ts[n].lazy3=1;\n\t\tfor(int i=1;i<=top;i++) {\n\t\t\tt[m][i]+=s[n].lazy1[i];\n\t\t\ts[n].lazy1[i]=0;\n\t\t\twhile(k%p[i]==0) t[m][i]--,k/=p[i];\n\t\t}\n\t\tq[m]=q[m]*qpow(k,pp-1)%mod;\n\t\ts[n].val=q[m]*calc(m)%mod;\n\t\treturn;\n\t}\n\tdown(n);\n\tint mid=(s[n].l+s[n].r)>>1;\n\tif(m<=mid) div(ls,m,k);\n\telse div(rs,m,k);\n\tup(n);\n}\n\ninline void times(int n,int l,int r,int k,int _k) {\n\tif(s[n].l>=l&&s[n].r<=r) {\n\t\ts[n].val=s[n].val*k%mod;\n\t\ts[n].lazy2=s[n].lazy2*k%mod;\n\t\ts[n].lazy3=s[n].lazy3*_k%mod;\n\t\tfor(int i=1;i<=top;i++) s[n].lazy1[i]+=add[i];\n\t\treturn;\n\t}\n\tdown(n);\n\tint mid=(s[n].l+s[n].r)>>1;\n\tif(l<=mid) times(ls,l,r,k,_k);\n\tif(mid<r) times(rs,l,r,k,_k);\n\tup(n);\n}\n\ninline int query(int n,int l,int r) {\n\tif(s[n].l>=l&&s[n].r<=r) return s[n].val;\n\tdown(n);\n\tint mid=(s[n].l+s[n].r)>>1,res=0;\n\tif(l<=mid) res=(res+query(ls,l,r))%mod;\n\tif(mid<r) res=(res+query(rs,l,r))%mod;\n\treturn res;\n}\n\nsigned main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\ta=read();\n\tmod=read();\n\tpp=get_phi(mod);\n\tint opt,x,y,z;\n\tget(mod);\n\tfor(int i=1;i<=a;i++) {\n\t\tq[i]=read();\n\t\tfor(int j=1;j<=top;j++) {\n\t\t\twhile(q[i]%p[j]==0) {\n\t\t\t\tq[i]/=p[j];\n\t\t\t\tt[i][j]++;\n\t\t\t}\n\t\t}\n\t}\n\tbuild(1,1,a);\n\tb=read();\n\tfor(int i=1;i<=b;i++) {\n\t\topt=read();\n\t\tx=read();\n\t\ty=read();\n\t\tif(opt==1) {\n\t\t\tz=read();\n\t\t\tif(z==1) continue;\n\t\t\tint _z=z;\n\t\t\tfor(int j=1;j<=top;j++) {\n\t\t\t\tadd[j]=0;\n\t\t\t\twhile(_z%p[j]==0) _z/=p[j],add[j]++;\n\t\t\t}\n\t\t\ttimes(1,x,y,z,_z);\n\t\t}\n\t\telse if(opt==2) div(1,x,y);\n\t\telse printf(\"%lld\\n\",query(1,x,y));\n\t}\n    return 0;\n}\n```",
        "postTime": 1606806718,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1109E \u3010Sasha and a Very Easy Test\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/CF1109E)\n## \u9898\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$ \u548c\u4e00\u4e2a\u6570 $p$\uff0c\u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6709 $3$ \u79cd\uff0c\u5206\u522b\u662f\uff1a\n1. `1 l r x`\uff0c\u5bf9 $\\forall i\\in[l,r],a_i\\gets a_i\\times x$\uff1b\n2. `2 c x`\uff0c\u4ee4 $a_c\\gets \\dfrac{a_c}{x}$\uff0c\u4fdd\u8bc1 $x\\mid a_c$\uff1b\n3. `3 l r `\uff0c\u67e5\u8be2 $\\displaystyle\\left(\\sum_{i=l}^ra_i\\right) \\bmod p$\u3002\n\n\u65f6\u9650 2.5s\uff0c$1\\le n,q\\le 10^5$\uff0c$1\\le a_i,x\\le 10^5$\uff0c$2\\le p\\le 10^9+9$\u3002\n\n## \u601d\u8def\n\u770b\u5230\u8fd9\u4e2a\u9664\u6cd5\u64cd\u4f5c\u662f\u975e\u5e38\u96be\u76f4\u63a5\u7ef4\u62a4\u7684\uff0c\u6a21\u6570 $p$ \u4e5f\u4e0d\u662f\u8d28\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5411\u7ef4\u62a4\u8d28\u56e0\u5b50\u6b21\u6570\u7684\u65b9\u9762\u60f3\u3002\n\n\u8d28\u6570\u6709\u5f88\u591a\uff0c\u4e0d\u53ef\u80fd\u6bcf\u4e00\u4e2a\u90fd\u76f4\u63a5\u7ef4\u62a4\uff0c\u8003\u8651\u7ef4\u62a4\u8d28\u6570\u7684\u539f\u56e0\u662f $p$ \u4e0d\u4fdd\u8bc1\u662f\u8d28\u6570\uff0c$x$ \u4e0d\u4e00\u5b9a\u6709\u9006\u5143\u3002\u800c $x$ \u5728\u6a21 $p$ \u610f\u4e49\u4e0b\u6709\u9006\u5143\u5f53\u4e14\u4ec5\u5f53 $\\gcd(x,p)=1$\u3002\u8003\u8651\u5c06 $x,p$ \u5206\u522b\u5206\u89e3\u8d28\u56e0\u6570\uff0c$x$ \u4e2d\u4e0d\u662f $p$ \u7684\u56e0\u6570\u7684\u8d28\u56e0\u6570\u53ef\u4ee5\u76f4\u63a5\u7528 $x^{\u03c6(p)-1}$ \u8ba1\u7b97\u9006\u5143\uff0c\u53ea\u6709 $p$ \u7684\u8d28\u56e0\u5b50\u9700\u8981\u7279\u6b8a\u7ef4\u62a4\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8e $p\\le 10^9+9$\uff0c$p$ \u7684\u4e0d\u540c\u56e0\u6570\u6700\u591a\u53ea\u6709 $k=9$ \u4e2a\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u3002\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u6807\u8bb0\u5b58\u4e0b\u8fd9\u4e9b\u4fe1\u606f\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(kn\\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=5e5+10;\nint n,q,p,phi,cnt,sp[15];\ninline int qpow(int x,int y){\n\tint res=1;\n\twhile(y){\n\t\tif(y&1) res=1ll*res*x%p;\n\t\tx=1ll*x*x%p;\n\t\ty>>=1; \n\t}\n\treturn res;\n}\nstruct node{\n\tint ep,op[15];\n\tinline void init(int x){\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\top[i]=0;\n\t\t\twhile(x%sp[i]==0)\n\t\t\t\top[i]++,x/=sp[i];\n\t\t}\n\t\tep=x;\n\t}\n\tinline int getv(){\n\t\tint res=ep;\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tres=1ll*res*qpow(sp[i],op[i])%p;\n\t\treturn res;\n\t}\n\tinline void set(){\n\t\tep=1;\n\t\tmemset(op,0,sizeof(op));\n\t}\n\tinline friend node operator*(const node &a,const node &b){\n\t\tnode c;\n\t\tc.ep=1ll*a.ep*b.ep%p;\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tc.op[i]=a.op[i]+b.op[i];\n\t\treturn c; \n\t}\n}s[N];\nstruct Segment_Tree{\n\tstruct Node{\n\t\tint sum,tagm;\n\t\tnode tagd;\n\t}a[N<<2];\n\t#define ls (rt<<1)\n\t#define rs (rt<<1|1)\n\tinline void pushdown(int rt){\n\t\ta[ls].sum=1ll*a[ls].sum*a[rt].tagm%p;\n\t\ta[rs].sum=1ll*a[rs].sum*a[rt].tagm%p;\n\t\ta[ls].tagm=1ll*a[ls].tagm*a[rt].tagm%p;\n\t\ta[rs].tagm=1ll*a[rs].tagm*a[rt].tagm%p;\n\t\ta[ls].tagd=a[ls].tagd*a[rt].tagd;\n\t\ta[rs].tagd=a[rs].tagd*a[rt].tagd;\n\t\ta[rt].tagm=1,a[rt].tagd.set();\n\t}\n\tinline void pushup(int rt){\n\t\ta[rt].sum=(a[ls].sum+a[rs].sum)%p;\n\t}\n\tinline void build(int rt,int l,int r){\n\t\ta[rt].tagm=1,a[rt].tagd.set();\n\t\tif(l==r){\n\t\t\ta[rt].sum=s[l].getv();\n\t\t\treturn ;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tbuild(ls,l,mid),build(rs,mid+1,r);\n\t\tpushup(rt);\n\t}\n\tinline void multi(int rt,int l,int r,int L,int R,node v){\n\t\tif(L<=l&&r<=R){\n\t\t\ta[rt].sum=1ll*a[rt].sum*v.getv()%p;\n\t\t\ta[rt].tagm=1ll*a[rt].tagm*v.getv()%p;\n\t\t\ta[rt].tagd=a[rt].tagd*v;\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(rt);\n\t\tint mid=l+r>>1;\n\t\tif(L<=mid) multi(ls,l,mid,L,R,v);\n\t\tif(R>mid) multi(rs,mid+1,r,L,R,v);\n\t\tpushup(rt);\n\t}\n\tinline void dived(int rt,int l,int r,int p,int v){\n\t\tif(l==r){\n\t\t\ts[p]=s[p]*a[rt].tagd;\n\t\t\ta[rt].tagd.set();\n\t\t\tfor(int i=1;i<=cnt;i++)\n\t\t\t\twhile(v%sp[i]==0)\n\t\t\t\t\ts[p].op[i]--,v/=sp[i];\n\t\t\ts[p].ep=1ll*s[p].ep*qpow(v,phi-1)%(::p);\n\t\t\ta[rt].sum=s[p].getv();\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(rt);\n\t\tint mid=l+r>>1;\n\t\tif(p<=mid) dived(ls,l,mid,p,v);\n\t\telse dived(rs,mid+1,r,p,v);\n\t\tpushup(rt);\n\t}\n\tinline int query(int rt,int l,int r,int L,int R){\n\t\tif(L<=l&&r<=R) return a[rt].sum;\n\t\tpushdown(rt);\n\t\tint mid=l+r>>1,res=0;\n\t\tif(L<=mid) res=(res+query(ls,l,mid,L,R))%p;\n\t\tif(R>mid) res=(res+query(rs,mid+1,r,L,R))%p;\n\t\treturn res;\n\t}\n}T;\nint main(){\n\tn=read(),p=read();\n\tint tmp;tmp=phi=p;\n\tfor(int i=2;i*i<=p;i++){\n\t\tif(tmp%i==0){\n\t\t\tsp[++cnt]=i;\n\t\t\tphi=phi/i*(i-1);\n\t\t\twhile(tmp%i==0) tmp/=i;\n\t\t}\n\t}\n\tif(tmp!=1){\n\t\tsp[++cnt]=tmp;\n\t\tphi=phi/tmp*(tmp-1);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\ts[i].init(read());\n\tq=read();\n\tT.build(1,1,n);\n\twhile(q--){\n\t\tint opt=read(),l=read(),r=read();\n\t\tif(opt==1){\n\t\t\tint x=read();\n\t\t\tnode tmp;tmp.init(x);\n\t\t\tT.multi(1,1,n,l,r,tmp);\n\t\t}else if(opt==2){\n\t\t\tT.dived(1,1,n,l,r);\n\t\t}else{\n\t\t\twrite(T.query(1,1,n,l,r)),putc('\\n');\n\t\t}\n\t}\n\tflush();\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1659076899,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1109E\u3010Sasha and a Very Easy Test\u3011"
    },
    {
        "content": "[CF1109E in luogu](https://www.luogu.com.cn/problem/CF1109E)\n\n[\u66f4\u5dee\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/muel-imj/p/16025443.html)\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u7ed9\u5b9a\u4e09\u79cd\u64cd\u4f5c\uff1a\u533a\u95f4\u4e58\uff0c\u5355\u70b9\u9664\uff0c\u533a\u95f4\u6c42\u548c\u3002**\u4efb\u610f\u6a21\u6570**\u3002\n\n---\n### \u601d\u8def\uff1a\n\n\u64cd\u4f5c\u5c31\u8fd9\u4e48\u4e2a\u64cd\u4f5c\uff0c\u7ebf\u6bb5\u6811\u5957\u4e0a\u5c31\u6ca1\u4e86\uff0c\u91cd\u70b9\u5728\u4e8e\u4efb\u610f\u6a21\u6570\u7684\u9664\u6cd5\uff0c\u4e0d\u7136\u8fd9\u4e5f\u4e0d\u4f1a\u662f\u9ed1\u9898\u4e86\u3002\n\n\u9664\u6570\u4e0e\u6a21\u6570\u4e0d\u4e00\u5b9a\u4e92\u8d28\u90a3\u5c31\u6ca1\u6cd5\u6c42\u9006\u5143\u4e86\u3002\u65e2\u7136\u5982\u6b64\u90a3\u5c31\u628a\u6570\u5206\u4e3a\u4e92\u8d28\u7684\u90e8\u5206\u548c\u4e0d\u4e92\u8d28\u7684\u90e8\u5206\uff0c\u4e0d\u5c31\u89e3\u51b3\u4e86\u561b\uff1f\n\n\u5177\u4f53\u7684\u55e6\uff0c\u5c06\u6a21\u6570\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u4e00\u4e2a\u6570\u4e5f\u53ef\u4ee5\u62c6\u5206\u5206\u4e3a\u5305\u542b\u8fd9\u4e9b\u8d28\u56e0\u6570\u7684\u90e8\u5206\u4e0e\u4e0d\u5305\u542b\u7684\u90e8\u5206\uff0c\u5305\u542b\u7684\u90a3\u90e8\u5206\u7279\u6b8a\u5904\u7406\uff0c\u4e0d\u5305\u542b\u7684\u5c31\u4e92\u8d28\u4e86\uff0c\u53ef\u4ee5\u7528\u9006\u5143\u3002\u5373\uff1a\n\n$$mod=p_1^{c_1}\u00d7p_2^{c_2}\u00d7\\cdots\u00d7p_{cnt}^{c_{cnt}}$$\n$$x=a\u00d7p_1^{t_1}\u00d7p_2^{t_2}\u00d7\\cdots\u00d7p_{cnt}^{t_{cnt}},\\gcd(a,mod)=1$$\n\n\u5176\u4e2d $mod$ \u6bcf\u4e2a\u8d28\u56e0\u5b50\u7684\u6b21\u6570\u6ca1\u5fc5\u8981\u77e5\u9053\uff0c\u800c\u5176\u4ed6\u6570\u662f\u9700\u8981\u7684\u3002\n\n\u5728\u5904\u7406\u65f6\uff0c\u5bf9\u4e8e\u4e92\u8d28\u7684\u90e8\u5206 $a$\uff0c\u53ef\u4ee5\u76f4\u63a5\u7b97\uff0c\u9664\u6cd5\u5c31\u7528\u9006\u5143\uff08exgcd \u6216\u6b27\u62c9\u5b9a\u7406\uff09\u3002\u5bf9\u4e8e\u4e0d\u4e92\u8d28\u7684\u90e8\u5206 $p$\uff0c\u5c31\u7528\u6b21\u6570\u76f8\u52a0\u51cf\uff0c\u5728\u67e5\u8be2\u65f6\u518d\u7528\u5feb\u901f\u5e42\u7b97\u4e00\u904d\u3002\n\n\u5173\u4e8e\u7ebf\u6bb5\u6811\uff0c\u7531\u4e8e\u9664\u6cd5\u662f\u5355\u70b9\u7684\uff0c\u6240\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u6211\u4eec\u6ca1\u5fc5\u8981\u5bf9\u6bcf\u4e00\u5904\u6743\u503c\u90fd\u8fd9\u4e48\u5904\u7406\uff0c\u53ea\u5904\u7406\u5355\u70b9\u5373\u53ef\u3002\n\n\u5177\u4f53\u7684\u5904\u7406\uff0cpushup \u4e0e\u6b63\u5e38\u65e0\u5f02\uff0c\u4f46\u662f lazy \u4e0e pushdown \u9700\u8981\u7279\u6b8a\u5904\u7406\u3002\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u70b9\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528 lazy \u50a8\u5b58\uff0c\u4e5f\u53ea\u9700\u8981\u5728\u505a\u9664\u6cd5\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u5355\u70b9\u5c06 lazy \u7528\u6389\uff0c\u66f4\u65b0\u6743\u503c\u3002\u6240\u4ee5\u4e3a\u4e86\u63d0\u5347\u6548\u7387\uff0clazy \u9700\u8981\u672a\u7ecf\u62c6\u5206\u7684\uff0c\u5e94\u5bf9\u533a\u95f4\u4e58\u64cd\u4f5c\uff0c\u4e0e\u62c6\u5206\u8fc7\u7684\uff0c\u5e94\u5bf9\u5355\u70b9\u9664\u64cd\u4f5c\u3002\n\n---\n\u65e2\u7136\u90fd\u8981\u5206\u89e3\u8d28\u56e0\u6570\u4e86\uff0c\u90a3\u5c31\u987a\u4fbf\u6c42\u4e2a\u6b27\u62c9\u51fd\u6570\uff0c\u7528\u6b27\u62c9\u5b9a\u7406\u6c42\u9006\u5143\u5c82\u4e0d\u7f8e\u54c9\uff1f\u5173\u4e8e\u6b27\u62c9\u51fd\u6570\u4e0e\u6b27\u62c9\u5b9a\u7406\uff1a\n\n$$\\varphi(n)=n\u00d7\\prod_{i=1}^{cnt}\\frac{p_i-1}{p_i}$$\n$$a^{\\varphi(p)}\\equiv 1 \\mod p (\\gcd(a,p)=1)$$\n$$a^{\\varphi(p)-1}\\equiv a^{-1} \\mod p (\\gcd(a,p)=1)$$\n\n\u987a\u4fbf\uff0c\u5bf9\u4e8e\u9006\u5143\u53ef\u4ee5\u6574\u4e2a\u5c0f\u8bb0\u5fc6\u5316...\u4e0d\u8fc7\u8be2\u95ee\u5e76\u6ca1\u6709\u90a3\u4e48\u591a\u6240\u4ee5\u4f18\u5316\u4e0d\u5927\n\n\u4ee3\u7801 qwq\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ttT template <typename T>\n#define EL puts(\"Elaina\")\n#define reg register int\n#define qwq 0\nusing namespace std;\ninline char gc(){\n    static char buf[1<<21],*p1,*p2;\n    if(p1==p2){p1=buf,p2=buf+fread(buf,1,1<<21,stdin);if(p1==p2)return EOF;}\n    return *p1++;\n}\nttT inline void read(T &x){\n    x=0;int f=1;char ch=gc();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=gc();}\n    x*=f;\n}\ntypedef long long ll;\nconst int maxn=1e5+3;\nint n,mod,phi,p[11],pcnt,invv[maxn];\ninline int qpow(int a,int b){\n    int ans=1;a%=mod;\n    for(;b;b>>=1,a=1ll*a*a%mod)\n        if(b&1)ans=1ll*ans*a%mod;\n    return ans;\n}\ninline int inv(int x){\n    return invv[x]?invv[x]:invv[x]=qpow(x,phi-1);\n}\nstruct num{\n    int x,np[11];\n    num(){};\n    num(int n){\n        x=0,memset(np,0,sizeof(np));\n        if(n==1){x=1;return;}\n        for(reg i=1;i<=pcnt;++i)\n            while(n%p[i]==0)np[i]++,n/=p[i];\n        x=n;\n    }\n    inline int calc(){\n        int ans=x;\n        for(reg i=1;i<=pcnt;++i)ans=1ll*ans*qpow(p[i],np[i])%mod;\n        return ans;\n    }\n};\n#define lt (k<<1)\n#define rt (k<<1|1)\nnum a[maxn];\nstruct node{\n    int l,r,x,lzy;\n    num lazy;\n}t[maxn<<2];\ninline void pushup(int k){\n    t[k].x=(t[lt].x+t[rt].x)%mod;\n}\ninline void pushdown(int k){\n    t[lt].x=1ll*t[lt].x*t[k].lzy%mod,t[rt].x=1ll*t[rt].x*t[k].lzy%mod;\n    t[lt].lzy=1ll*t[lt].lzy*t[k].lzy%mod,t[rt].lzy=1ll*t[rt].lzy*t[k].lzy%mod;\n    t[lt].lazy.x=1ll*t[lt].lazy.x*t[k].lazy.x%mod;\n    t[rt].lazy.x=1ll*t[rt].lazy.x*t[k].lazy.x%mod;\n    for(reg i=1;i<=pcnt;++i){\n        t[lt].lazy.np[i]+=t[k].lazy.np[i];\n        t[rt].lazy.np[i]+=t[k].lazy.np[i];\n        t[k].lazy.np[i]=0;\n    }\n    t[k].lzy=t[k].lazy.x=1;\n}\ninline void build(int k,int l,int r){\n    t[k].l=l,t[k].r=r,t[k].lzy=1,t[k].lazy=num(1);\n    if(l==r)t[k].x=a[l].calc();\n    else{\n        int mid=(l+r)>>1;\n        build(lt,l,mid);\n        build(rt,mid+1,r);\n        pushup(k);\n    }\n}\ninline void updata(int k,int L,int R,int x,num xx){\n    if(L<=t[k].l&&t[k].r<=R){\n        t[k].x=1ll*t[k].x*x%mod;\n        t[k].lzy=1ll*t[k].lzy*x%mod;\n        t[k].lazy.x=1ll*t[k].lazy.x*xx.x%mod;\n        for(reg i=1;i<=pcnt;++i)t[k].lazy.np[i]+=xx.np[i];\n    }\n    else{\n        int mid=(t[k].l+t[k].r)>>1;\n        pushdown(k);\n        if(L<=mid)updata(lt,L,R,x,xx);\n        if(R>mid)updata(rt,L,R,x,xx);\n        pushup(k);\n    }\n}\ninline void updata(int k,int pi,int x){\n    if(t[k].l==t[k].r){\n        a[pi].x=1ll*a[pi].x*t[k].lazy.x%mod,t[k].lazy.x=1;\n        for(reg i=1;i<=pcnt;++i){\n            a[pi].np[i]+=t[k].lazy.np[i];\n            while(x%p[i]==0)a[pi].np[i]--,x/=p[i];\n            t[k].lazy.np[i]=0;\n        }\n        a[pi].x=1ll*a[pi].x*inv(x)%mod;\n        t[k].x=a[pi].calc();\n    }\n    else{\n        int mid=(t[k].l+t[k].r)>>1;\n        pushdown(k);\n        if(pi<=mid)updata(lt,pi,x);\n        else updata(rt,pi,x);\n        pushup(k);\n    }\n}\ninline int query(int k,int L,int R){\n    if(L<=t[k].l&&t[k].r<=R)return t[k].x;\n    else{\n        int mid=(t[k].l+t[k].r)>>1,ans=0;\n        pushdown(k);\n        if(L<=mid)ans=(1ll*ans+query(lt,L,R))%mod;\n        if(R>mid)ans=(1ll*ans+query(rt,L,R))%mod;\n        return ans;\n    }\n}\nvoid solve(){\n    read(n),read(mod);\n    int dom=phi=mod;\n    for(reg i=2;i*i<=mod;++i)\n        if(dom%i==0){\n            p[++pcnt]=i;\n            phi=phi/i*(i-1);\n            while(dom%i==0)dom/=i;\n        }\n    if(dom^1)p[++pcnt]=dom,phi=phi/dom*(dom-1);\n    for(reg i=1,x;i<=n;++i)\n        read(x),a[i]=num(x);\n    build(1,1,n);\n    int q,opt,l,r,x;\n    read(q);\n    while(q--){\n        read(opt);\n        if(opt==1){\n            read(l),read(r),read(x);\n            updata(1,l,r,x,num(x));\n        }\n        else if(opt==2){\n            read(l),read(x);\n            updata(1,l,x);\n        }\n        else{\n            read(l),read(r);\n            printf(\"%d\\n\",query(1,l,r));\n        }\n    }\n}\nint main(){\n    solve();\n    return qwq;\n}\n```\n",
        "postTime": 1647652500,
        "uid": 280633,
        "name": "Muel_imj",
        "ccfLevel": 7,
        "title": "CF1109E Sasha and a Very Easy Test \u9898\u89e3"
    },
    {
        "content": "\u7531\u4e8e\u6a21\u6570\u4e0e$x$\u4e0d\u4e00\u5b9a\u4e92\u8d28\uff0c\u6240\u4ee5\u65e0\u6cd5\u76f4\u63a5\u628a\u5355\u70b9\u9664\u6cd5\u53d8\u6210\u4e58\u6cd5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5982\u4f55\u8ba9\u5b83\u4eec\u4e92\u8d28\uff0c\u5982\u679c\u628a\u5171\u540c\u7684\u8d28\u56e0\u5b50\u9664\u53bb\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u662f\u4e92\u8d28\u7684\u4e24\u4e2a\u6570\uff0c\u76f4\u63a5\u7528\u6b27\u62c9\u5b9a\u7406\u6c42\u4e58\u6cd5\u9006\u5143\u5373\u53ef\u3002\n\n\u6b27\u62c9\u5b9a\u7406\uff1a$a^{\\phi(p)}\\equiv 1(\\bmod p)$\n\n\u5373\uff1a$a^{\\phi(p)-1}\\equiv a^{-1}(\\bmod p)$\uff0c$\\phi(p)$\u53ef\u4ee5\u5728$\\sqrt p$\u7684\u65f6\u95f4\u5185\u6c42\u51fa\uff1b\n\n\u7531$\\phi$\u7684\u5b9a\u4e49\u5f97\uff1a$\\phi(n)=n*\\prod\\limits_{d|n \\And\\And d\\in prime} \\dfrac{d-1}{d}$\uff0c\u5176\u4e2d$d$\u4e3a$n$\u7684\u8d28\u56e0\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5728\u6bcf\u4e2a\u70b9\u7ef4\u62a4$3$\u79cd\u6807\u8bb0\uff0c\u5206\u522b\u8bb0\u4e3a$mul$\uff0c$rem$\uff0c$fac$\uff0c\u5206\u522b\u4ee3\u8868\u5f53\u524d\u7684\u4e58\u79ef\uff0c\u5f53\u524d\u4e58\u79ef\u9664\u53bb\u516c\u5171\u8d28\u56e0\u5b50\u540e\u5269\u4f59\u7684\u503c\u548c\u6bcf\u4e2a\u5171\u540c\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\u3002\u8fd8\u8981\u540c\u65f6\u7ef4\u62a4\u8981\u6c42\u7684\u7b54\u6848\uff0c\u5373\u533a\u95f4\u548c\uff0c\u8bb0\u4e3a$sum$\u3002\n\n\u6bcf\u6b21\u5728\u505a\u4e58\u6cd5\u65f6\uff0c\u628a$sum$\u3001$mul$\u90fd\u4e58\u4e0a\u7ed9\u51fa\u7684$x$\uff0c\u7136\u540e\u5c06$rem$\u4e58\u4e0a$x$\u5206\u89e3\u540e\u5269\u4f59\u7684\u503c\uff0c\u5c06\u5bf9\u5e94\u7684\u8d28\u56e0\u6570\u4e2a\u6570\u7d2f\u52a0\u5373\u53ef\u3002\n\n\u5728\u505a\u9664\u6cd5\u65f6\uff0c\u5bf9\u4e8e\u5269\u4f59\u7684$rem$\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e58\u4e0a$x$\u5206\u89e3\u540e\u5269\u4f59\u503c\u7684\u9006\u5143\uff0c$fac$\u5bf9\u5e94\u76f8\u51cf\uff0c\u7136\u540e\u901a\u8fc7$rem$\u548c$fac$\u91cd\u65b0\u8ba1\u7b97$sum$\u3002\u7531\u4e8e\u662f\u5355\u70b9\u9664\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u5728\u4e4e\u53f6\u8282\u70b9\u7684\u4e58\u6cd5\u6807\u8bb0$mul$\uff0c\u6240\u4ee5\u5efa\u6811\u65f6\u76f4\u63a5\u7f6e\u4e3a$0$\u5373\u53ef\u3002$rem$\u6807\u8bb0\u521d\u59cb\u65f6\u5747\u4e3a$1$\uff0c$mul$\u6807\u8bb0\u9664\u53f6\u8282\u70b9\u5916\u5747\u4e3a$1$\u3002\n\n\u7531\u4e8e$mod\\le1e9+9$\uff0c\u5219\u5b83\u7684\u8d28\u56e0\u5b50\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7$9$\uff08\u6700\u5c0f$10$\u4e2a\u8d28\u6570\u7684\u4e58\u79ef= $2 *3* 5* 7* 11* 13 *17* 19* 23* 29 =6469693230=6.4e9>1e9+9$\uff09\u3002\n\n\u90a3\u4e48\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a$\\Theta(n\\log n)$\u7ea7\u522b\u3002\n\n$\\large Code:$\n\n```cpp\nint n, m, p, fac[30], cnt, tmp[30], top, phi;\ninl int getphi(int n) {\n\tre ans = n;\n\tfor (re i = 2; i*i <= n; i++) {\n\t\tif (!(n%i)) {\n\t\t\tans = 1ll * ans * (i - 1) / i;\n\t\t\twhile (!(n%i))n /= i;\n\t\t}\n\t}\n\tif (n > 1)ans = 1ll * ans * (n - 1) / n;\n\treturn ans;\n}\ninl void div(int n) {\n\tfor (re i = 2; i*i <= n; i++) {\n\t\tif (n%i == 0) {\n\t\t\tfac[++cnt] = i;\n\t\t\twhile (n%i == 0)n /= i;\n\t\t}\n\t}\n\tif (n > 1)fac[++cnt] = n;\n}\ninl int work(int w) {\n\ttop = 0;\n\tfor (re i = 1; i <= cnt; i++) {\n\t\ttmp[i] = 0;\n\t\twhile (w%fac[i] == 0) tmp[i]++, w /= fac[i];\n\t}\n\treturn w % p;\n}\nstruct node {\n\tint sum, fac[22], mul, rem;\n}t[400005];\ninl void upd(int k) { t[k].sum = (t[k << 1].sum + t[k << 1 | 1].sum) % p; }\ninl void mul(int k, int w, int rem, int *tmp) {\n\tt[k].rem = 1ll * t[k].rem*rem%p;\n\tfor (re i = 1; i <= cnt; i++) t[k].fac[i] += tmp[i];\n\tt[k].mul = 1ll * t[k].mul*w%p, t[k].sum = 1ll * t[k].sum*w%p;\n}\ninl int qpow(int x, int y = phi - 1) {\n\tre ret = 1;\n\tfor (; y; y >>= 1, x = 1ll * x * x % p) if (y & 1)ret = 1ll * ret*x%p;\n\treturn ret;\n}\ninl void divide(int k, int rem) {\n\tt[k].rem = 1ll * t[k].rem*qpow(rem) % p;\n\tre x = t[k].rem;\n\tfor (re i = 1; i <= cnt; i++) {\n\t\tt[k].fac[i] -= tmp[i];\n\t\tx = 1ll * x * qpow(fac[i], t[k].fac[i]) % p;\n\t}\n\tt[k].sum = x;\n}\ninl void pushdown(int k) {\n\tif (t[k].mul != 1 || t[k].rem != 1) {\n\t\tmul(k << 1, t[k].mul, t[k].rem, t[k].fac), mul(k << 1 | 1, t[k].mul, t[k].rem, t[k].fac);\n\t\tt[k].mul = t[k].rem = 1;\n\t\tfor (re i = 1; i <= cnt; i++)t[k].fac[i] = 0;\n\t}\n}\ninl void mul(int k, int l, int r, int x, int y, int w, int rem) {\n\tif (l >= x && r <= y) return mul(k, w, rem, tmp);\n\tre mid = l + r >> 1;\n\tpushdown(k);\n\tif (x <= mid)mul(k << 1, l, mid, x, y, w, rem);\n\tif (y > mid)mul(k << 1 | 1, mid + 1, r, x, y, w, rem);\n\tupd(k);\n}\ninl void divide(int k, int l, int r, int p, int w) {\n\tif (l == r)return divide(k, w);\n\tre mid = l + r >> 1;\n\tpushdown(k);\n\tp <= mid ? divide(k << 1, l, mid, p, w) : divide(k << 1 | 1, mid + 1, r, p, w);\n\tupd(k);\n}\ninl int query(int k, int l, int r, int x, int y) {\n\tif (l >= x && r <= y)return t[k].sum;\n\tre mid = l + r >> 1, ret = 0;\n\tpushdown(k);\n\tif (x <= mid)ret = query(k << 1, l, mid, x, y);\n\tif (y > mid)ret = (ret + query(k << 1 | 1, mid + 1, r, x, y)) % p;\n\treturn ret;\n}\ninl void build(int k, int l, int r) {\n\tif (l == r) {\n\t\tt[k].sum = read<int>();\n\t\tt[k].rem = work(t[k].sum), t[k].sum %= p;\n\t\tfor (re i = 1; i <= cnt; i++)t[k].fac[i] = tmp[i];\n\t\treturn;\n\t}\n\tt[k].mul = t[k].rem = 1;\n\tre mid = l + r >> 1;\n\tbuild(k << 1, l, mid), build(k << 1 | 1, mid + 1, r), upd(k);\n}\nsigned main() {\n\tn = read<int>(), p = read<int>(), phi = getphi(p), div(p);\n\tbuild(1, 1, n), m = read<int>();\n\tre op, x, y, w;\n\twhile (m--) {\n\t\top = read<int>(), x = read<int>(), y = read<int>();\n\t\tif (op == 1) w = read<int>(), mul(1, 1, n, x, y, w, work(w));\n\t\telse if (op == 2) divide(1, 1, n, x, work(y));\n\t\telse printf(\"%d\\n\", query(1, 1, n, x, y));\n\t}\n}\n```\n\n",
        "postTime": 1578970652,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "CF1109E"
    },
    {
        "content": "\n>>codeforce\u9898\u76ee\u94fe\u63a5\uff1a[\nCodeForces 1109E E. Sasha and a Very Easy Test](https://codeforces.com/problemset/problem/1109/E)\n\n>>\u6d1b\u8c37\u9898\u76ee\u94fe\u63a5\uff1a[CF1109E Sasha and a Very Easy Test](https://www.luogu.org/problem/CF1109E)\n\n\u9898\u89e3\u539f\u53d1\u4e8e[\u6211\u7684blog](https://wangjunrui.netlify.com/2019/10/27/cf1109e-sasha-and-a-very-easy-test/)\n\n\u8fd9\u662f\u672c\u849f\u84bb\u53d1\u7684\u7b2c\u4e09\u7bc7\u9ed1\u9898\u7684\u9898\u89e3\uff0c\u5f88\u5f00\u5fc3\u3002\n\n\u4e00\u9053\u5f88\u6bd2\u7624\u7684\u7ebf\u6bb5\u6811\u9898\n\n\u672c\u6765\u849f\u84bb\u5174\u9ad8\u91c7\u70c8\u7684\u5237\u7ebf\u6bb5\u6811\u7684\u9898\uff0c\u770b\u5230\u8fd9\u9053\u9ed1\u9898\uff0c~~\u89c9\u5f97\u5f88\u6c34~~\u51b3\u5b9a\u521a\u4e00\u521a\n\n\u8fd9\u4e0d\u662f\u4e00\u9053\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\u9898\n\n## \u8003\u8651\u76f4\u63a5\u76f8\u9664\uff0c\n\u7ed3\u679c$WA$\u4e86\uff0c\u8fd9\u6b63\u662f\u6b64\u9898\u7684\u96be\u5904\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/utud29xg.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n## \u8003\u8651\u4f7f\u7528\u4e58\u6cd5\u9006\u5143\n\u4f46\u662f\u6837\u4f8b\u4e8c\u76f4\u63a5\u5426\u5b9a\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u9664\u6570\u53ef\u80fd\u4e0d\u4e0e\u6a21\u6570\u4e92\u8d28\u3002\n\n## \u8003\u8651\u5c06\u6a21\u6570\u5206\u89e3\u8d28\u56e0\u6570\u3002\n\u5728\u61d2\u6807\u8bb0\u4e2d\u6807\u8bb0\u6a21\u6570\u7684\u6bcf\u4e2a\u8d28\u56e0\u5b50\u4e2a\u6570\n\n\u76f8\u4e58\u65f6\u76f8\u52a0\u8d28\u56e0\u5b50\uff0c\u76f8\u9664\u65f6\u76f8\u51cf\u8d28\u56e0\u5b50\n\n\u4e58\u6570\u4e2d\u9664\u6a21\u6570\u8d28\u56e0\u5b50\u4ee5\u5916\u7684\u6570\u5f97\u7d2f\u4e58\u6807\u8bb0\n\n\u9664\u6570\u9664\u6a21\u6570\u8d28\u56e0\u5b50\u4ee5\u5916\u7684\u6570\u53ef\u4ee5\u76f4\u63a5\u4e58\u6cd5\u9006\u5143\u8ba1\u7b97\n\n\n\u8bb0\u4f4f\u5f97\u4f7f\u7528\u6b27\u62c9\u5b9a\u7406\u4e0d\u80fd\u4f7f\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u56e0\u4e3a\u6a21\u6570\u4e0d\u4e00\u5b9a\u662f\u8d28\u6570\n\n### \u8d39\u9a6c\u5c0f\u5b9a\u7406\u5bf9\u4e8e\u4e58\u6cd5\u9006\u5143\u63a8\u5bfc(a\u548cp\u4e92\u8d28\uff0cp\u4e3a\u8d28\u6570):\n$$a^{p-2}\\equiv a^{-1}(mod\\ p)$$\n\n### \u6b27\u62c9\u5b9a\u7406\u5bf9\u4e8e\u4e58\u6cd5\u9006\u5143\u63a8\u5bfc(a\u548cp\u4e92\u8d28):\n$$a^{\\varphi(p)-1}\\equiv a^{-1}(mod\\ p)$$\n\u5176\u4e2d\n$$\\varphi(x)=\\prod_{i=1}^{n}\\frac{p_i-1}{p_i}$$\n\n$p_1, p_2\u2026\u2026p_n$\u4e3a$x$\u7684\u6240\u6709\u8d28\u56e0\u6570\uff0c$x$\u662f\u4e0d\u4e3a$0$\u7684\u6574\u6570\u3002\n\n## \u6700\u7ec8\u5728\u7ed9\u51e0\u4e2a\u6807\u8bb0\u7684\u6027\u8d28\n1. \u6a21\u6570\u4e0d\u4f1a\u8d85\u8fc7\u6709$9$\u4e2a\u4e0d\u540c\u7684\u8d28\u56e0\u5b50\uff08\u628a\u524d\u4e5d\u4e2a\u8d28\u6570\u7d2f\u4e58\u8bd5\u4e00\u8bd5\uff09\u3002\n2. \u6a21\u6570\u7684\u5355\u4e2a\u8d28\u56e0\u5b50\u4e0d\u4f1a\u8d85\u8fc7$20$\u4e2a\uff08$2^{20}>10^5$\uff09\n3. \u9664\u6a21\u6570\u8d28\u56e0\u5b50\u5916\u7684\u6570\u53ef\u4ee5\u76f4\u63a5\u53d6\u6a21\uff08\u53cd\u6b63\u4e58\u6cd5\u9006\u5143\u884c\u5f97\u901a\uff09\n\n~~\u5047\u9ed1\u9898~~\n\n\u76f4\u63a5\u8fd0\u7b97\u5373\u53ef\uff0c\u4e00\u4e0b\u662f\u849f\u84bb\u7684\u8bc4\u6d4b\u8bb0\u5f55\n![](https://cdn.luogu.com.cn/upload/image_hosting/zfz5bp2b.png)\n\n\n~~\u8fd9\u4e48\u7b80\u5355\u7684\u4ee3\u7801\u6211\u90fd\u8c03\u4e86\u8fd9\u4e48\u4e45\u4e00\u5b9a\u662f\u6211\u592a\u83dc\u4e86~~\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <cstring>\n#include <cctype>\n\nusing namespace std;\n\ntemplate <typename T>\ninline void read(T &x)\n{\n\tx = 0;\n\tchar s = getchar();\n\tbool f = false;\n\twhile (!(s >= '0' && s <= '9'))\n\t{\n\t\tif (s == '-')\n\t\t\tf = true;\n\t\ts = getchar();\n\t}\n\twhile (s >= '0' && s <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + s - '0';\n\t\ts = getchar();\n\t}\n\tif (f)\n\t\tx = (~x) + 1;\n}\n\nnamespace OUT\n{\n\n\tchar Out[1 << 25], *fe = Out, ch[25];\n\tint num = 0;\n\n\ttemplate <typename T>\n\tinline void write(T x)\n\t{\n\t\tif (!x)\n\t\t\t*fe++ = '0';\n\t\tif (x < 0)\n\t\t{\n\t\t\t*fe++ = '-';\n\t\t\tx = -x;\n\t\t}\n\t\twhile (x)\n\t\t{\n\t\t\tch[++num] = x % 10 + '0';\n\t\t\tx /= 10;\n\t\t}\n\t\twhile (num) *fe++ = ch[num--];\n\t\t*fe++ = '\\n';\n\t}\n\n\tinline void flush()\n\t{\n\t\tfwrite(Out, 1, fe - Out, stdout);\n\t\tfe = Out;\n\t}\n}  // namespace OUT\nusing namespace OUT;\n\n#define re register\n#define ll long long\n#define ls (k << 1)\n#define rs (k << 1 | 1)\n#define node vector<int>\n\nconst int N = 1e5 + 10, S = 40;\n\nint n, q, mod, phi, pcnt, a[N];\n\nvector<int> pm;\n\nstruct Tree\n{\n\tint c[S], sum, mul, high;  // high\u662f\u5269\u4f59\u7684\u6570\n} tree[N << 2];\n\ninline node dec(int n)  //\u8d28\u56e0\u6570\u5206\u89e3\n{\n\tnode res;\n\tres.clear();\n\tfor (re int i = 2; i * i <= n; i++)\n\t\twhile (n % i == 0)\n\t\t{\n\t\t\tn /= i;\n\t\t\tres.push_back(i);\n\t\t}\n\tif (n > 1)\n\t\tres.push_back(n);\n\treturn res;\n}\n\ninline void Unique(node &res)  //\u8d28\u56e0\u6570\u53bb\u91cd(\u8840\u7684\u6559\u8bad)\n{\n\tsort(res.begin(), res.end());\n\tint u = unique(res.begin(), res.end()) - res.begin();\n\twhile (res.size() > u) res.pop_back();\n}\n\ninline int getphi(int n)  //\u6b27\u62c9\u51fd\u6570\n{\n\tint ans = n;\n\tfor (re int i = 2; i * i <= n; i++)\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tans = ans / i * (i - 1);\n\t\t\twhile (n % i == 0) n /= i;\n\t\t}\n\tif (n > 1)\n\t\tans = ans / n * (n - 1);\n\treturn ans;\n}\n\ninline int pow(int a, int b, int mod = ::mod)\n{\n\tint ans = 1;\n\tfor (; b; b >>= 1, a = (ll)a * a % mod)\n\t\tif (b & 1)\n\t\t\tans = (ll)ans * a % mod;\n\treturn ans;\n}\n\ninline int inv(int x)\n{\n\treturn pow(x, phi - 1);\n}\n\ninline void get(int res, int &ans, int *c)\n{\n\tfor (re int i = 1; i <= pcnt; i++)\n\t\twhile (res % pm[i - 1] == 0)\n\t\t{\n\t\t\tres /= pm[i - 1];\n\t\t\tc[i]++;\n\t\t}\n\tans = res % mod;\n}\n\ninline int calc(int v, int *dev)\n{\n\tfor (re int i = 1; i <= pcnt; i++) v = (ll)v * pow(pm[i - 1], dev[i]) % mod;\n\treturn v;\n}\n\ninline void pushdown(int k)\n{\n\tfor (re int i = 1; i <= pcnt; i++)\n\t{\n\t\ttree[ls].c[i] += tree[k].c[i];\n\t\ttree[rs].c[i] += tree[k].c[i];\n\t\ttree[k].c[i] = 0;\n\t}\n\ttree[ls].sum = (ll)tree[ls].sum * tree[k].mul % mod;\n\ttree[rs].sum = (ll)tree[rs].sum * tree[k].mul % mod;\n\ttree[ls].mul = (ll)tree[ls].mul * tree[k].mul % mod;\n\ttree[rs].mul = (ll)tree[rs].mul * tree[k].mul % mod;\n\ttree[ls].high = (ll)tree[ls].high * tree[k].high % mod;\n\ttree[rs].high = (ll)tree[rs].high * tree[k].high % mod;\n\ttree[k].mul = tree[k].high = 1;\n}\n\ninline void pushup(int k)\n{\n\ttree[k].sum = (tree[ls].sum + tree[rs].sum) % mod;\n}\n\ninline void build(int k, int l, int r)\n{\n\ttree[k].mul = tree[k].high = 1;\n\tmemset(tree[k].c, 0, sizeof(tree[k].c));\n\tif (l == r)\n\t{\n\t\ttree[k].sum = a[l] % mod;\n\t\tget(a[l], tree[k].high, tree[k].c);\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(ls, l, mid);\n\tbuild(rs, mid + 1, r);\n\tpushup(k);\n}\n\ninline void update1(int k, int l, int r, int x, int y, int v, int *dev, int high)\n{\n\tif (r < x || l > y)\n\t\treturn;\n\tif (x <= l && r <= y)\n\t{\n\t\tfor (re int i = 1; i <= pcnt; i++) tree[k].c[i] += dev[i];\n\t\ttree[k].sum = (ll)tree[k].sum * v % mod;\n\t\ttree[k].mul = (ll)tree[k].mul * v % mod;\n\t\ttree[k].high = (ll)tree[k].high * high % mod;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tint mid = l + r >> 1;\n\tupdate1(ls, l, mid, x, y, v, dev, high);\n\tupdate1(rs, mid + 1, r, x, y, v, dev, high);\n\tpushup(k);\n}\n\ninline void update2(int k, int l, int r, int pos, int v, int *dev, int high)\n{\n\tif (l == r)\n\t{\n\t\ttree[k].high = (ll)tree[k].high * inv(high) % mod;\n\t\tfor (re int i = 1; i <= pcnt; i++) tree[k].c[i] -= dev[i];\n\t\ttree[k].sum = calc(tree[k].high, tree[k].c);\n\t\treturn;\n\t}\n\tpushdown(k);\n\tint mid = l + r >> 1;\n\tif (pos <= mid)\n\t\tupdate2(ls, l, mid, pos, v, dev, high);\n\telse\n\t\tupdate2(rs, mid + 1, r, pos, v, dev, high);\n\tpushup(k);\n}\n\ninline int query(int k, int l, int r, int x, int y)\n{\n\tif (r < x || l > y)\n\t\treturn 0;\n\tif (x <= l && r <= y)\n\t\treturn tree[k].sum;\n\tpushdown(k);\n\tint mid = l + r >> 1;\n\treturn (query(ls, l, mid, x, y) + query(rs, mid + 1, r, x, y)) % mod;\n}\n\nint main()\n{\n\tread(n), read(mod), phi = getphi(mod);\n\tfor (re int i = 1; i <= n; i++) read(a[i]);\n\tpm = dec(mod);\n\tUnique(pm);\n\tpcnt = pm.size();\n\tbuild(1, 1, n);\n\tread(q);\n\tfor (re int i = 1, c[S], opt, a, b, x, v; i <= q; i++)\n\t{\n\t\tread(opt), read(a), read(b);\n\t\tmemset(c, 0, sizeof(c));\n\t\tif (opt == 1)\n\t\t{\n\t\t\tread(x);\n\t\t\tget(x, v, c);\n\t\t\tupdate1(1, 1, n, a, b, x, c, v);\n\t\t}\n\t\telse if (opt == 2)\n\t\t{\n\t\t\tget(b, v, c);\n\t\t\tupdate2(1, 1, n, a, b, c, v);\n\t\t}\n\t\telse if (opt == 3)\n\t\t\twrite(query(1, 1, n, a, b));\n\t}\n\tflush();\n\treturn 0;\n}\n```\n~~\u9a6c\u8702\u5dee\u8bc4~~\n",
        "postTime": 1572185272,
        "uid": 133322,
        "name": "QwQ\u849f\u84bbwjr",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1109E \u3010Sasha and a Very Easy Test\u3011"
    }
]