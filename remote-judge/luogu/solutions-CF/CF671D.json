[
    {
        "content": "# [Codeforces671D]Roads in Yusland\n[\u4f60\u771f\u7684\u4e0d\u60f3\u8fdb\u6765\u770b\u4e00\u770b\u5417](https://www.cnblogs.com/xzyxzy/p/10478869.html)\n\n---\n## \u9898\u610f\n[luogu](https://www.luogu.org/problemnew/show/CF671D)\n\n\u7ed9\u5b9a\u4ee51\u4e3a\u6839\u7684\u4e00\u68f5\u6811\uff0c\u6709$m$\u6761\u76f4\u4e0a\u76f4\u4e0b\u7684\u6709\u4ee3\u4ef7\u7684\u94fe\uff0c\u6c42\u9009\u4e00\u4e9b\u94fe\u628a\u6240\u6709\u8fb9\u8986\u76d6\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u82e5\u65e0\u89e3\u8f93\u51fa`-1`\n\n$n\\le 3*10^5$\n\n## \u9898\u89e3\n\n\u8fd9\u9898\u6709\u4e00\u4e9bDP\u505a\u6cd5\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n\n\u9996\u5148\u4f60\u5f97\u77e5\u9053[\u7ebf\u6027\u89c4\u5212\u7684\u5bf9\u5076](https://www.cnblogs.com/xzyxzy/p/10478865.html)\u3002\n\n\u5f0f\u5b50\u662f\u8fd9\u6837\u7684$max\\{c^Tx|Ax\\le b\\}=min\\{b^Ty|A^Ty\\ge c\\}$\n\n\u5f3a\u884c\u5f80\u4e0a\u9762\u5957\uff08\u53f3\u5f0f\uff09\uff1a\n\n- $c$\u4e3a\u51681\u5217\u5411\u91cf\uff0c\u957f\u5ea6\u4e3a$m$\n- $y$\u4e3a01\u5217\u5411\u91cf\uff0c\u957f\u5ea6\u4e3a$m$\uff0c\u8868\u793a\u6bcf\u6761\u94fe\u9009\u6216\u4e0d\u9009\n- $A^T$\u4e3a\u957f$n-1$\u3001\u5bbd$m$\u768401\u77e9\u9635\uff0c$A[i][j]$\u8868\u793a$i$\u8fd9\u6761\u8fb9\u5728\u4e0d\u5728\u7b2c$j$\u6761\u94fe\u4e2d\n- $b^T$\u4e3a\u957f\u4e3a$m$\u7684\u884c\u5411\u91cf\uff0c\u8868\u793a\u9009\u6bcf\u6761\u94fe\u7684\u4ee3\u4ef7\n\n\u6240\u4ee5\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u8981\u6784\u9020\u4e00\u4e2a$x$\u4f7f\u5f97\u5de6\u5f0f\u6700\u5927\u3002\n\n\u90a3\u6211\u4eec\u5bfb\u627e\u5de6\u5f0f\u7684\u5b9e\u9645\u610f\u4e49\uff1a\u7ed9\u6bcf\u6761\u8fb9\u6807\u8bb0\u4e00\u4e2a\u6743\u503c$x$\uff0c\u4f7f\u5f97\u6bcf\u6761\u94fe\u4e0a\u7684\u8fb9\u7684\u6743\u503c\u548c\u4e0d\u8d85\u8fc7\u5176\u4ee3\u4ef7\u3002\n\n\u611f\u89c9\u5b8c\u5168\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\u4e86\u5bf9\u5427\uff0c\u4f46\u662f\u786e\u5b9e\u4ed6\u4eec\u7b54\u6848\u76f8\u540c\u3002\n\n\u4e3a\u65b9\u4fbf\u8868\u8ff0\uff0c\u8fd9\u6761\u8fb9\u6807\u8bb0\u6743\u503c$x$\u8bb0\u4e3a\u8fd9\u6761\u8fb9\u9009\u4e86$x$\u6b21\u3002\n\n\u7136\u540e\u8fd9\u662f\u4e00\u4e2a\u8f83\u4e3a\u663e\u7136\u7684\u8d2a\u5fc3\uff0c\u4ece\u6df1\u5230\u6d45\u80fd\u9009\u5219\u9009\uff0c\u7528\u53ef\u5e76\u5806\u7ef4\u62a4\u5f53\u524d\u70b9\u5230\u7236\u4eb2\u8fd9\u6761\u8fb9\u80fd\u9009\u7684\u6700\u591a\u6b21\u6570\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<vector>\n#define pb push_back\n#define lc t[x].ch[0]\n#define rc t[x].ch[1]\nusing namespace std;\nconst int N=3e5+10;\nint n,m,cf[N],rt[N],dep[N],nod;\nlong long Ans;\nvector<int> E[N],St[N];\nstruct mmp{int x,y,c;}A[N];\nstruct Heap{int ch[2],val,id,dis,tag;}t[N];\nvoid Put(int x,int k) {t[x].tag+=k;t[x].val+=k;}\nvoid pushdown(int x) {int &v=t[x].tag;if(v) Put(lc,v),Put(rc,v),v=0;}\nint Merge(int x,int y)\n{\n\tif(!x||!y) return x+y;\n\tpushdown(x);pushdown(y);\n\tif(t[x].val>t[y].val) swap(x,y);\n\trc=Merge(rc,y);\n\tif(t[lc].dis<t[rc].dis) swap(lc,rc);\n\tt[x].dis=t[lc].dis+1;\n\treturn x;\n}\nint Del(int x) {return Merge(lc,rc);}\nvoid dfs(int x,int fr)\n{\n\tdep[x]=dep[fr]+1;\n\tfor(auto R:E[x])\n\t\tif(R!=fr) dfs(R,x),rt[x]=Merge(rt[x],rt[R]),cf[x]+=cf[R];\n\tif(!cf[x]&&x>1) puts(\"-1\"),exit(0);\n\tfor(auto P:St[x])\n\t\tt[++nod].val=A[P].c,t[nod].id=P,rt[x]=Merge(rt[x],nod);\n\twhile(dep[A[t[rt[x]].id].y]>=dep[x]) rt[x]=Del(rt[x]);\n\tif(rt[x]) Ans+=t[rt[x]].val,Put(rt[x],-t[rt[x]].val);\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1,x,y;i<n;i++)\n\t\tscanf(\"%d%d\",&x,&y),E[x].pb(y),E[y].pb(x);\n\tfor(int i=1,x,y,c;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&c);\n\t\tSt[x].pb(i);cf[x]++;cf[y]--;\n\t\tA[i]=(mmp){x,y,c};\n\t}\n\tdfs(1,0);\n\tcout<<Ans<<endl;\n}\n```",
        "postTime": 1551784463,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    },
    {
        "content": "> [CF671D Roads in Yusland](https://codeforces.com/contest/671/problem/D)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u4ee5 $1$ \u4e3a\u6839\u7684\u6811\u3002\n- \u6709 $m$ \u6761\u8def\u5f84 $(x,y)$\uff0c\u4fdd\u8bc1 $y$ \u662f $x$ \u7684\u7956\u5148\uff0c\u6bcf\u6761\u8def\u5f84\u6709\u4e00\u4e2a\u6743\u503c\u3002\n- \u4f60\u8981\u5728\u8fd9\u4e9b\u8def\u5f84\u4e2d\u9009\u62e9\u82e5\u5e72\u6761\u8def\u5f84\uff0c\u4f7f\u5b83\u4eec\u80fd\u8986\u76d6\u6bcf\u6761\u8fb9\uff0c\u540c\u65f6\u6743\u503c\u548c\u6700\u5c0f\u3002\n- $n,m \\le 3 \\times 10^5$\u3002\n\n## \u9898\u89e3\n\n\u8bbe $f_i$ \u8868\u793a**\u8986\u76d6 $i$ \u5b50\u6811\u5185\u7684\u6240\u6709\u8fb9\u548c $i$ \u4e0e\u5176\u7236\u4eb2\u7684\u8fb9**\u7684\u6700\u5c0f\u6743\u503c\uff0c\u5219\u7b54\u6848\u5c31\u662f $\\sum_{x \\in \\operatorname{son}(1)} f_x$\u3002\n\n\u7136\u800c\u5e76\u4e0d\u662f\u6240\u6709 $f$ \u90fd\u662f\u6700\u4f18\u7684\uff0c\u5bf9\u4e8e\u4e00\u79cd**\u8986\u76d6 $i$ \u5b50\u6811\u5185\u7684\u6240\u6709\u8fb9\u548c $i$ \u4e0e\u5176\u7236\u4eb2\u7684\u8fb9**\u7684\u65b9\u6848\uff0c\u53ef\u80fd\u5b83\u5e76\u4e0d\u662f\u6700\u5c0f\u6743\u503c\uff0c\u4f46\u662f\u5b83\u5411\u4e0a\u5ef6\u4f38\u5f97\u66f4\u957f\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8981\u4fdd\u7559\u4f4f\u6240\u6709\u53ef\u80fd\u6700\u4f18\u7684\u65b9\u6848\uff0c\u540c\u65f6\u8981\u8ba1\u7b97\u5176\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u8003\u8651\u5c0f\u6839\u5806\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u8282\u70b9 $i$\uff0c$i$ \u4e0a\u7684\u5c0f\u6839\u5806\u5185\u5b58\u50a8\u4e86**\u8986\u76d6 $i$ \u5b50\u6811\u5185\u7684\u6240\u6709\u8fb9\u548c $i$ \u4e0e\u5176\u7236\u4eb2\u7684\u8fb9**\u7684\u6240\u6709\u53ef\u80fd\u6700\u4f18\u7684\u65b9\u6848\u3002\n\n\u8003\u8651\u5982\u4f55\u8f6c\u79fb\uff0c\u5373\u5f53 $x \\in \\operatorname{son}(y)$ \u65f6\uff0c\u5982\u4f55\u5c06 $x$ \u4e0a\u7684\u65b9\u6848\u8f6c\u79fb\u5230 $y$ \u4e0a\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6743\u503c\u4e3a $k$ \u7684\u65b9\u6848\uff1a\n\n- \u5982\u679c\u5411\u4e0a\u5ef6\u4f38\u8d85\u8fc7\u4e86 $y$\uff0c\u5219\u8fd9\u79cd\u65b9\u6848\u5728 $y$ \u7684\u5c0f\u6839\u5806\u91cc\u6743\u503c\u5e94\u8be5\u4e3a $k + \\sum_{z \\in \\operatorname{son}(y)} f_z - f_x$\u3002\n- \u5982\u679c\u6b63\u597d\u5411\u4e0a\u5ef6\u4f38\u5230 $y$\uff0c\u5219\u8fd9\u79cd\u65b9\u6848\u4e0d\u5e94\u8be5\u51fa\u73b0\u5728 $y$ \u4e0a\uff0c\u9700\u8981\u88ab\u6254\u6389\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u70b9\u6709\u6765\u81ea\u591a\u4e2a\u513f\u5b50\u7684\u5c0f\u6839\u5806\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u5408\u5e76\u8d77\u6765\uff0c\u4e8e\u662f\u5c06\u5c0f\u6839\u5806\u6539\u4e3a\u5de6\u504f\u6811\u5373\u53ef\u3002\n\n\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u652f\u6301\u6574\u68f5\u5de6\u504f\u6811\u52a0\u4e0a\u4e00\u4e2a\u5b9a\u503c\uff0c\u6253\u4e2a\u6807\u8bb0\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u9700\u8981\u6254\u6389\u7684\u65b9\u6848\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u9700\u8981\u5b9e\u65f6\u5220\u9664\uff0c\u56e0\u6b64\u8003\u8651\u6211\u4eec\u6682\u65f6\u5148\u4fdd\u7559\u5b83\u4eec\uff0c\u5f53\u5b83\u4eec\u6210\u4e3a\u6839\u65f6\u518d\u5f39\u51fa\u5373\u53ef\u3002\n\n\u8bbe $n,m$ \u540c\u9636\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#define Fail print(-1), exit(0)\nconst int N = 3e5 + 7;\nint n, m, d[N], tot, rt[N];\nll f[N], ans;\nvi e[N];\nvector<pi> p[N];\nstruct T {\n\tpair<ll, int> x;\n\tll z;\n\tint l, r, f, d;\n} t[N];\n\ninline void add(int x, ll k) {\n\tif (x) t[x].x.fi += k, t[x].z += k;\n}\n\ninline void spd(int x) {\n\tif (t[x].z) add(t[x].l, t[x].z), add(t[x].r, t[x].z), t[x].z = 0;\n}\n\nint merge(int x, int y) {\n\tif (!x || !y) return x | y;\n\tif (t[x].x > t[y].x) swap(x, y);\n\tspd(x);\n\tt[t[x].r=merge(t[x].r,y)].f = x;\n\tif (t[t[x].r].d > t[t[x].l].d) swap(t[x].l, t[x].r);\n\tt[x].d = t[t[x].r].d + 1;\n\treturn x;\n}\n\nvoid dfs(int x, int fa) {\n\td[x] = d[fa] + 1;\n\tfor (pi o : p[x])\n\t\tt[++tot].x = o, t[tot].d = 1, rt[x] = merge(rt[x], tot);\n\tll s = 0;\n\tfor (int y : e[x])\n\t\tif (y != fa) {\n\t\t\tdfs(y, x), s += f[y];\n\t\t\tadd(rt[y], -f[y]), rt[x] = merge(rt[x], rt[y]);\n\t\t}\n\tadd(rt[x], s);\n\twhile (rt[x] && d[t[rt[x]].x.se] >= d[x])\n\t\tspd(rt[x]), rt[x] = merge(t[rt[x]].l, t[rt[x]].r);\n\tif (!rt[x]) Fail;\n\tf[x] = t[rt[x]].x.fi;\n}\n\nint main() {\n\trd(n), rd(m);\n\tfor (int i = 1, x, y; i < n; i++)\n\t\trd(x), rd(y), e[x].pb(y), e[y].pb(x);\n\tfor (int i = 1, x, y, z; i <= m; i++)\n\t\trd(x), rd(y), rd(z), p[x].pb(mp(z, y));\n\td[1] = 1;\n\tfor (int x : e[1]) dfs(x, 1), ans += f[x];\n\tprint(ans);\n\treturn 0;\n}\n```",
        "postTime": 1582995855,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/dysyn1314/p/14226410.html)\n\n\n# CF671D Roads in Yusland\n\n## \u9898\u76ee\u5927\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/contest/671/problem/D)\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u3001\u4ee5 $1$ \u4e3a\u6839\u7684\u6709\u6839\u6811\u3002\n\n\u6709 $m$ \u6761\u8def\u5f84 $(u_i, v_i)$\uff0c\u4fdd\u8bc1 $v_i$ \u662f $u_i$ \u7684\u7956\u5148\uff08\u7956\u5148\u5305\u62ec\u8fd9\u4e2a\u70b9\u81ea\u5df1\uff09\u3002\u6bcf\u6761\u8def\u5f84\u6709\u4e00\u4e2a\u4ef7\u683c\u3002\n\n\u8bf7\u9009\u62e9\u82e5\u5e72\u6761\u8def\u5f84\uff0c\u5c06\u6811\u4e0a\u6240\u6709\u8fb9\u8986\u76d6\uff08\u4e00\u6761\u8fb9\u53ef\u4ee5\u88ab\u591a\u6b21\u8986\u76d6\uff09\u3002\u6c42\u6240\u9009\u8def\u5f84\u4ef7\u683c\u4e4b\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leq n,m\\leq 3\\times 10^5$\u3002\n\n## \u672c\u9898\u9898\u89e3\n\n\u5b9a\u4e49\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $1$\uff0c\u5176\u4ed6\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u662f\u5b83\u7236\u4eb2\u7684\u6df1\u5ea6 $+1$\u3002\u8bb0\u70b9 $u$ \u7684\u6df1\u5ea6\u4e3a $\\text{dep}(u)$\u3002\n\n\u5bf9\u4e8e\u7ed9\u51fa\u7684\u8def\u5f84 $(u_i, v_i)$\uff08$v_i$ \u662f $u_i$ \u7684\u7956\u5148\uff09\uff0c\u6211\u4eec\u5728\u8282\u70b9 $u_i$ \u5904\u8003\u8651\u662f\u5426\u9009\u62e9\u5b83\u3002\u4ee5\u4e0b\u79f0 $u_i$ \u4e3a\u201c\u8d77\u70b9\u201d\uff0c$v_i$ \u4e3a\u201c\u7ec8\u70b9\u201d\u3002\n\n\u6734\u7d20\u7684\u6811\u5f62 DP\u3002\u8bbe $\\text{dp}(u,j)$ \u8868\u793a\u9009\u62e9\u4e86\u82e5\u5e72\u6761\u8d77\u70b9\u5728 $u$ \u7684\u5b50\u6811\u5185\u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u8def\u5f84\u8986\u76d6\u4e86 $u$ \u5b50\u6811\u5185\u7684\u6240\u6709\u8fb9\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u7ec8\u70b9\u7684\u6df1\u5ea6\u7684\u6700\u5c0f\u503c\u4e3a $j$\uff08$j\\leq\\text{dep}(u)$\uff09\uff0c\u8fbe\u5230\u8fd9\u79cd\u60c5\u51b5\u6240\u9700\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u611f\u6027\u7406\u89e3\uff0c\u5c31\u662f\u6240\u9009\u8def\u5f84\uff0c\u5728 $u$ \u7684\u5b50\u6811\u5916\uff0c\u6700\u8fdc\u8986\u76d6\u5230\u6df1\u5ea6\u4e3a $j$ \u7684\u7956\u5148\u3002\n\n\u540c\u65f6\u8bbe $f(u) = \\min_{j = 1}^{\\text{dep}(u) - 1} \\text{dp}(u, j)$\uff0c\u4e5f\u5c31\u662f\u81f3\u5c11\u8986\u76d6\u5230 $u$ \u548c\u7236\u4eb2\u4e4b\u95f4\u7684\u8fb9\uff0c\u6240\u9700\u7684\u82b1\u8d39\u3002\n\n\u8f6c\u79fb\u3002\u5148\u4e0d\u8003\u8651\u4ee5 $u$ \u4e3a\u8d77\u70b9\u7684\u8def\u5f84\uff0c\u5219\u6709\uff1a\n$$\n\\text{dp}(u, j) = \\min_{v\\in\\text{son}(u)}\\left\\{ \\text{dp}(v, j) + \\sum_{w\\in\\text{son}(u), w\\neq v}f(w)\\right\\}\n$$\n\u4e5f\u5c31\u662f\u679a\u4e3e\u4e00\u4e2a\u513f\u5b50 $v$\uff0c\u8ba9\u5b83\u91cc\u9762\u7684\u8def\u5f84\uff0c\u6700\u5c0f\u6df1\u5ea6\u8fbe\u5230\u4e86 $j$\u3002\u7136\u540e\u5176\u4ed6\u513f\u5b50 $w$ \u5c31\u53ef\u4ee5\u968f\u4fbf\u9009\u4e86\u3002\u7ec6\u5fc3\u7684\u8bfb\u8005\u6216\u8bb8\u53d1\u73b0\uff0c$f(w)$ \u4e2d\u53ef\u80fd\u5305\u542b\uff0c\u8986\u76d6\u5230\u7684\u6700\u5c0f\u6df1\u5ea6\u6bd4 $j$ \u66f4\u5c0f\u7684\u60c5\u51b5\uff0c\u4f46\u8fd9\u663e\u7136\u662f\u4e0d\u5f71\u54cd\u7b54\u6848\u7684\u3002\n\n\u4e0a\u8ff0\u8f6c\u79fb\u8981\u679a\u4e3e $v$ \u548c $w$\uff0c\u662f\u4e00\u4e2a\u53cc\u91cd\u5faa\u73af\uff0c\u6bd4\u8f83\u4e11\u3002\u628a\u5b83\u6539\u5199\u4e00\u4e0b\uff1a\n$$\n\\text{dp}(u, j) = \\sum_{v \\in\\text{son}(u)} f(v) + \\min_{v\\in\\text{son}(u)}\\{\\text{dp}(v,j) - f(v)\\}\n$$\n\u63a5\u4e0b\u6765\u8003\u8651\u4ee5 $u$ \u4e3a\u8d77\u70b9\u7684\u8def\u5f84\uff0c\u8bbe\u7ec8\u70b9\u7684\u6df1\u5ea6\u4e3a $j$\uff0c\u4ef7\u683c\u4e3a $c$\uff0c\u5219\u8f6c\u79fb\u4e5f\u662f\u7c7b\u4f3c\u7684\uff1a\n$$\n\\text{dp}(u,j) = \\sum_{v \\in\\text{son}(u)} f(v) + c\n$$\n\u7b54\u6848\u5c31\u662f $\\text{dp}(1, 1)$\u3002\u8fd9\u4e2a\u6734\u7d20 DP \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n^2)$\u3002\n\n---\n\n\u8003\u8651\u4f18\u5316\u3002\u5bb9\u6613\u60f3\u5230\uff0c\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 DP \u7684\u7b2c\u4e8c\u7ef4\u3002\u9700\u8981\u652f\u6301\uff1a\n\n- \u533a\u95f4\u52a0\uff1a\u8f6c\u79fb\u524d\u628a\u6240\u6709 $\\text{dp}(v,j)$ \u52a0\u4e0a $-f(v)$\uff1b\u4ee5\u53ca\u6700\u540e\u628a\u6240\u6709 $\\text{dp}(u,j)$ \u52a0\u4e0a $\\sum_{v \\in\\text{son}(u)} f(v)$\u3002\n- \u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c\uff1a\u4e5f\u5c31\u662f\u6c42\u51fa $f(v)$\u3002\n- \u7ebf\u6bb5\u6811\u5408\u5e76\u3002\u5408\u5e76\u65f6\uff0c\u5bf9\u5e94\u4f4d\u7f6e\u53d6 $\\min$\u3002\u53d1\u73b0\u8fd9\u76f8\u5f53\u4e8e\u8981\u652f\u6301**\u533a\u95f4\u53d6 $\\min$**\u3002\n- \u5355\u70b9\u5bf9\u4e00\u4e2a\u6570\u53d6 $\\min$\uff1a\u5728\u8003\u8651\u4ee5 $u$ \u4e3a\u8d77\u70b9\u7684\u8def\u5f84\u65f6\uff0c\u5355\u70b9\u5bf9 $c$ \u53d6 $\\min$\u3002\u53d1\u73b0\u8fd9\u5df2\u7ecf\u88ab\u4e0a\u4e00\u6761\uff08\u533a\u95f4\u53d6 $\\min$\uff09\u5305\u542b\u3002\n\n\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e24\u4e2a\u61d2\u6807\u8bb0\uff1a\u533a\u95f4\u52a0\u6cd5\uff0c\u548c\u533a\u95f4\u5bf9\u4e00\u4e2a\u6570\u53d6 $\\min$\uff0c\u540c\u65f6\u8bb0\u5f55\u533a\u95f4\u6700\u5c0f\u503c\u3002\u5c31\u80fd\u652f\u6301\u4e0a\u8ff0\u7684\u64cd\u4f5c\u4e86\u3002\u5173\u4e8e\u53cc\u6807\u8bb0\u7684\u987a\u5e8f\u95ee\u9898\uff1a\u4e0b\u653e\u61d2\u6807\u8bb0\u65f6\uff0c\u5148\u4e0b\u653e\u533a\u95f4\u52a0\u6cd5\uff0c\u518d\u4e0b\u653e\u533a\u95f4\u53d6 $\\min$\u3002\u505a\u533a\u95f4\u52a0\u65f6\uff0c\u8981\u540c\u65f6\u66f4\u65b0\u533a\u95f4\u53d6 $\\min$ \u7684\u61d2\u6807\u8bb0\u3002\n\n\u65f6\u95f4\u3001\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n + m) \\log n)$\u3002\u56e0\u4e3a\u672c\u9898\u7a7a\u95f4\u9650\u5236\u8f83\u5c0f\uff0c\u96be\u4ee5\u901a\u8fc7\u3002\n\n---\n\n\u7ee7\u7eed\u4f18\u5316\u3002\u8003\u8651\u5bf9\u6bcf\u4e2a\u70b9\uff0c\u7ef4\u62a4\u4e00\u4e2a $\\texttt{std::set}$\u3002\u91cc\u9762\u5b58\u4e8c\u5143\u7ec4\uff1a$(j, \\text{dp}(v, j))$\u3002\u4ee5 $j$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u3002\u8fd9\u4e2a $\\texttt{set}$ \u91cc\uff0c\u5176\u5b9e\u5c31\u662f\u539f\u6765\u7684 DP \u6570\u7ec4\u4e2d\u6240\u6709\u4e0d\u4e3a $\\infty$ \u7684\u5143\u7d20\u3002\n\n\u8003\u8651\u8f6c\u79fb\u65f6\u7684\u64cd\u4f5c\u3002\n\n- \u533a\u95f4\u52a0\u6cd5\u3002\u53d1\u73b0\u53ea\u8981\u6211\u4eec\u628a $j > \\text{dep}(u)$ \u7684\u5143\u7d20\u53ca\u65f6\u5f39\u51fa\uff0c\u533a\u95f4\u52a0\u5c31\u53d8\u4e3a\u4e86\u5168\u5c40\u52a0\u3002\u56e0\u6b64\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u5168\u5c40\u7684\u6807\u8bb0\u5373\u53ef\u3002\n- \u5408\u5e76\u53ef\u4ee5\u91c7\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u4e5f\u5c31\u662f\u628a\u5c0f\u7684\u4e00\u4e2a\u4e00\u4e2a\u201c\u63d2\u5165\u201d\u5230\u5927\u7684\u91cc\u9762\u3002\n- \u5355\u70b9\u53d6 $\\min$ \u4e5f\u76f8\u5f53\u4e8e\u201c\u63d2\u5165\u201d\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u201c\u63d2\u5165\u201d\u4e0d\u662f\u76f4\u63a5\u63d2\u5165\uff0c\u5982\u679c $\\texttt{set}$ \u91cc\u5df2\u7ecf\u5b58\u5728\u76f8\u540c\u7684 $j$\uff0c\u5219\u9700\u8981\u628a\u7b2c\u4e8c\u5143\u62ff\u51fa\u6765\u6bd4\u5927\u5c0f\u3002\u6700\u7ec8\u6bcf\u4e2a $j$ \u53ea\u4f1a\u5728 $\\texttt{set}$ \u91cc\u51fa\u73b0\u4e00\u6b21\u3002\n\n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u662f\u67e5\u8be2\u6700\u5c0f\u503c\uff08\u548c\u533a\u95f4\u52a0\u7c7b\u4f3c\uff0c\u5728\u652f\u6301\u5f39\u51fa\u540e\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u67e5\u8be2\u5c31\u53d8\u6210\u4e86\u5168\u5c40\u6700\u5c0f\u503c\u67e5\u8be2\uff09\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u4e8c\u5143\u7ec4\uff0c\u5728 $\\texttt{set}$ \u91cc\u662f\u6309\u7b2c\u4e00\u5143 $j$ \u6392\u5e8f\u7684\uff0c\u6545\u96be\u4ee5\u540c\u65f6\u7ef4\u62a4\u51fa\u7b2c\u4e8c\u5143\u7684\u6700\u5c0f\u503c\u3002\u6570\u636e\u7ed3\u6784\u7684\u80fd\u529b\u5df2\u7ecf\u7528\u5230\u6781\u9650\u4e86\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u56de\u8fc7\u5934\u6765\u7ee7\u7eed\u6316\u6398\u9898\u76ee\u7684\u6027\u8d28\u3002\u53d1\u73b0\u5bf9\u4e8e $j_1 < j_2$\uff0c\u82e5 $\\text{dp}(u, j_1) < \\text{dp}(u, j_2)$\uff0c\u5219 $\\text{dp}(u, j_2)$ \u4e0d\u4f1a\u5bf9\u7b54\u6848\u6709\u4efb\u4f55\u8d21\u732e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6b64\u65f6\u6211\u4eec\u628a $\\text{dp}(u, j_2)$ \u89c6\u4e3a $\\infty$\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u628a $\\text{dp}(u, j_2)$ \u4ece $\\texttt{set}$ \u91cc\u5220\u6389\u3002\u4e8e\u662f\u8fd9\u6837\u7ef4\u62a4\u51fa\u7684 $\\texttt{set}$\uff0c\u6240\u6709\u5143\u7d20\u7b2c\u4e8c\u5143\u4e00\u5b9a\u5355\u8c03\u9012\u51cf\u3002\u76f4\u63a5\u53d6\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5c31\u662f\u7b2c\u4e8c\u5143\u6700\u5c0f\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n + m)\\log^2 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n + m)$\u3002\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n[\u8fdb\u6765\u5c31\u7ed9\u4f60\u770b\uff01](https://www.cnblogs.com/dysyn1314/p/14226410.html)",
        "postTime": 1609668891,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u79cd\u6811\u5f62 $\\text{DP}$\uff0c\u4e00\u822c\u90fd\u8bbe $f_x$ \u4e3a\u5b50\u6811\u5185\u6ee1\u8db3\u67d0\u4e2a\u7ea6\u675f\u7684\u6700\u503c $/$ \u65b9\u6848\u6570\u3002\u5982\u679c\u8fd9\u9898\u4e5f\u8fd9\u4e48\u505a\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u72b6\u6001\u5e76\u4e0d\u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u3002\u56e0\u4e3a\u53ef\u80fd\u4e00\u79cd\u65b9\u6848\u5728\u5b50\u6811 $y$ \u5185\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u4f46\u5b83\u5411\u5916\u5ef6\u4f38\u4e86\u5f88\u957f\u7684\u4e00\u6761\u94fe\uff0c\u4ece\u6574\u68f5\u6811\u7684\u89d2\u5ea6\u6765\u770b\u53ef\u80fd\u662f\u66f4\u4f18\u7684\u3002\u8fd9\u63d0\u9192\u6211\u4eec\u9700\u8981\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u4e8e\u662f\u66f4\u6539\u72b6\u6001\u5b9a\u4e49\uff1a $f_x$ \u4e3a\u8986\u76d6 $x$ \u7684\u5b50\u6811\u5185\u7684\u8fb9\u53ca\u8fb9 $x\\to fa_x$ \u7684\u4e00\u7ec4\u65b9\u6848\u7684\u6700\u5c0f\u503c\u3002\u663e\u7136\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u904d\u5386 $x$ \u7684\u6574\u68f5\u5b50\u6811\u627e\u5230\u4e00\u79cd\u65b9\u6848\uff0c\u4f46\u8fd9\u6837\u505a\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u80fd\u627f\u53d7\u3002\n\n\u8bbe $x\\to y$ \u7684\u65b9\u6848\u6700\u5c0f\u503c\u4e3a $cost(x,y)$\uff0c\u5199\u51fa $\\text{DP}$ \u65b9\u7a0b\uff1a\n\n$$\nf_x=\\sum_{y\\in son_x} f_y+\\min\\{cost(x,b)\\}(b\\notin Subtree(x))\n$$\n\n$$\nf_x=\\sum_{y\\in son_x} f_y\n$$\n\n\u7b2c\u4e8c\u4e2a\u67ff\u5b50\u5b58\u5728\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b50\u6811 $y$ \u4e2d\u5305\u542b\u7684\u4e00\u4e2a\u65b9\u6848\u5df2\u7ecf\u8986\u76d6\u4e86 $x\\to fa_x$ \u8fd9\u6761\u8fb9\u3002\u4e0d\u59a8\u5c06\u4e0a\u5f0f\u6539\u4e3a\u8d21\u732e\u5f0f\uff0c\u6839\u636e\u7b2c\u4e00\u4e2a\u5f0f\u5b50\uff0c\u5bf9\u4e8e $x$ \u70b9\u65b0\u589e\u7684\u65b9\u6848\uff0c\u9700\u52a0\u4e0a $\\sum \\limits_{z\\in son_x}f_z$\u3002\u5728\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u4e2d\uff0c\u5bf9\u4e8e\u5b50\u6811 $y$ \u7684\u6743\u503c\u4e3a $k$ \u7684\u65b9\u6848\uff0c\u9700\u52a0\u4e0a $\\sum\\limits_{z\\in son_x}f_z-f_y+k$\u3002\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c\u6211\u4eec\u53d6\u8fd9\u4e9b\u65b9\u6848\u7684\u6700\u5c0f\u503c\u5bf9\u4e8e\u5f53\u524d $f_x$ \u662f\u6700\u4f18\u7684\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u652f\u6301\u53d6 $\\min$\uff0c\u5408\u5e76\u4e24\u4e2a\u5806\u7684\u6570\u636e\u7ed3\u6784\u3002 \n\n\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u7684\u6570\u636e\u7ed3\u6784\u6709\u5f88\u591a\uff0c\u8fd9\u91cc\u9009\u7528\u5de6\u504f\u6811\uff0c\u652f\u6301\u67e5\u8be2\u4e00\u4e2a\u5806\u4e2d\u7684\u6700\u5c0f\u503c\u548c\u5408\u5e76\u4e24\u4e2a\u5806\u3002\u90a3\u4e48\uff0c\u5728 $\\text{dfs}$ \u904d\u5386\u5230 $x$ \u65f6\uff0c\u5148\u5408\u5e76 $x$ \u513f\u5b50\u7684\u5806\uff0c\u518d\u4ece\u5806\u4e2d\u53bb\u6389\u4e0d\u5408\u6cd5\u7684\u503c\uff0c\u6700\u540e\u53d6\u6700\u5c0f\u503c\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u5c06 $m$ \u4e2a\u65b9\u6848 $(x,y,k)$ \u6309 $x$ \u5206\u7c7b\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u3002\n\n```cpp\n#include<cstdio>\n#include<functional>\n#include<cstdlib>\n#include<vector>\ntypedef long long ll;\nint tot=0,cnt=0;\nstd::pair<ll,int> a[600005];\nstd::vector<std::pair<ll,int> > vec[300005];\nint h[300005],to[600005],ver[600005];\nint rt[300005],dep[300005],dis[600005],lson[600005],rson[600005];\nll f[300005],tag[600005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y) {to[++cnt]=y;ver[cnt]=h[x];h[x]=cnt;}\ninline void swap(int &x,int &y) {int tmp=y;y=x;x=tmp;}\ninline void work(int p,ll val) {tag[p]+=val; a[p].first+=val;}\ninline int spread(int p) {if(tag[p]) {work(lson[p],tag[p]); work(rson[p],tag[p]); tag[p]=0;}}\ninline int merge(int x,int y) {\n\tif(!x||!y) return x+y;\n\tif(a[x].first>a[y].first) swap(x,y);//a[x]<=a[y]\n\tspread(x);\n\trson[x]=merge(rson[x],y);\n\tif(dis[rson[x]]>dis[lson[x]]) swap(lson[x],rson[x]);\n\tdis[x]=dis[rson[x]]+1;\n\treturn x;\n}\ninline void dfs(int x,int fa) {\n\tdep[x]=dep[fa]+1;\n\tfor(register int i=0;i<vec[x].size();++i) {\n\t\ta[++tot]=std::make_pair(vec[x][i].first,vec[x][i].second);\n\t\tdis[tot]=1; rt[x]=merge(rt[x],tot);\n\t}\n\tll sum=0;\n\tfor(register int i=h[x];i;i=ver[i]) {\n\t\tint y=to[i]; if(y==fa) continue; \n\t\tdfs(y,x); work(rt[y],-f[y]); \n\t\trt[x]=merge(rt[x],rt[y]); sum+=f[y];\n\t}\n\twork(rt[x],sum);\n\twhile(rt[x]&&dep[x]<=dep[a[rt[x]].second]) {spread(rt[x]); rt[x]=merge(lson[rt[x]],rson[rt[x]]);}\n\tif(!rt[x]) {printf(\"-1\\n\");exit(0);}\n\tf[x]=a[rt[x]].first;\n}\nint main() {\n\tint n=read(),m=read(); tot=n; dep[1]=1;\n\tfor(register int i=1;i<n;++i) {\n\t\tint x=read(),y=read();\n\t\tadd(x,y); add(y,x);\n\t}\t\n\tfor(register int i=1;i<=m;++i) {\n\t\tint x=read(),y=read(),k=read();\n\t\tvec[x].push_back(std::make_pair(k,y));\n\t}\t\n\tll ans=0;\n\tfor(register int i=h[1];i;i=ver[i]) {int y=to[i]; dfs(y,1); ans+=f[y];}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1606051609,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u7ed9 $m$ \u6761\u65e0\u62d0\u70b9\u7684\u8def\u5f84\uff0c\u6bcf\u6761\u8def\u5f84\u6709\u6743\u503c\uff0c\u9009\u62e9\u4e00\u4e2a\u8def\u5f84\u96c6\u5408\u53ef\u4ee5\u8986\u76d6\u6574\u68f5\u6811\uff0c\u4e14\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u3002\n\n$n,m \\leq 3\\times 10^5$\n\n---\n\n$\\textrm{Solution}$\uff1a\n\n\u6784\u9020\u4e00\u4e2a\u77e9\u9635 $A_{i,j}=0/1$ \u8868\u793a\u7f16\u53f7\u4e3a $i$ \u7684\u8282\u70b9\u662f\u5426\u88ab\u7b2c $j$ \u6761\u8def\u5f84\u5305\u542b\uff0c\u7136\u540e\u4ee4 $x_i=0/1$ \u8868\u793a\u662f\u5426\u9009\u62e9\u7b2c $i$ \u6761\u8def\u5f84\u3002\n\n$$\\begin{aligned}\n\\textrm{min }Z=\\sum x_iw_i\\\\\ns.t.\\begin{cases}\n\\forall i,\\sum\\limits_{j=1}^m A_{i,j}x_j \\ge 1\\\\\n\\forall i,x_i \\ge 0\n\\end{cases}\n\\end{aligned}$$\n\n\u5957\u7528\u5bf9\u5076\u539f\u7406\uff1a\n\n$$\\begin{aligned}\n\\textrm{min }Z=c^Tx\\\\\ns.t.\\begin{cases}\nAx\\ge b\\\\\nx \\ge 0\n\\end{cases}\n\\end{aligned}\n\\Longrightarrow\n\\begin{aligned}\n\\textrm{max }W=b^Ty\\\\\ns.t.\\begin{cases}\nA^Ty\\ge c\\\\\ny \\ge 0\n\\end{cases}\n\\end{aligned}\n$$\n\n\u5f97\u5230\uff1a\n\n$$\\begin{aligned}\n\\textrm{max }W=\\sum y_i\\\\\ns.t.\\begin{cases}\n\\forall i,\\sum\\limits_{j=1}^n A^T_{i,j}y_j \\leq w_i\\\\\n\\forall i,y_i \\ge 0\n\\end{cases}\n\\end{aligned}$$\n\n\u63a5\u4e0b\u6765\u628a\u5bf9\u5076\u540e\u7684\u5f0f\u5b50\u7ffb\u8bd1\u6210\u4eba\u8bdd\uff1a$A^T_{i,j}$ \u5c31\u662f\u7b2c $i$ \u6761\u8def\u5f84\u662f\u5426\u5305\u542b\u7b2c $j$ \u4e2a\u70b9\uff0c\u53d8\u91cf $y_i$ \u7406\u89e3\u4e3a\u7b2c $i$ \u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u90a3\u4e48\u539f\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\uff1a$m$ \u6761\u65e0\u62d0\u70b9\u7684\u8def\u5f84\uff0c\u6bcf\u6761\u8def\u5f84\u6709\u6743\u503c\uff0c\u9700\u8981\u7ed9\u6bcf\u6761\u8fb9\u4e00\u4e2a\u975e\u8d1f\u8fb9\u6743\uff0c\u4f7f\u5f97\u7b2c $i$ \u6761\u8def\u5f84\u4e0a\u8fb9\u6743\u603b\u548c\u4e0d\u8d85\u8fc7 $w_i$\uff0c\u6c42\u6700\u5927\u8fb9\u6743\u548c\u3002\n\n~~\u73b0\u5728\u4f60\u53d1\u73b0\u4f60\u5df2\u7ecf\u628a\u4e00\u4e2a\u4e0d\u53ef\u505a\u9898\uff08\u5927\u5618\uff09\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u66f4\u52a0\u4e0d\u53ef\u505a\u7684\u9898\uff01\u8ba9\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u6027\u8d28\uff1a~~\n\n\u7531\u4e8e\u8def\u5f84\u65e0\u62d0\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u6309\u7167\u6df1\u5ea6\u4ece\u5927\u5f80\u5c0f\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u586b\u4e0a\u80fd\u4f7f\u5f97\u5f53\u524d\u72b6\u6001\u5408\u6cd5\u7684\u6700\u5927\u7684\u6570\uff0c\u4e0d\u80fd\u5c31\u586b 0\uff0c\u8fd9\u4e48\u8d2a\u7684\u7406\u7531\u662f\uff1a\u5982\u679c\u8d2a\u5f53\u524d\u70b9\u4f1a\u5f71\u54cd\u5230\u5176\u7956\u5148\u8def\u5f84\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u88ab\u5f71\u54cd\u7684\u8def\u5f84\u4e00\u5b9a\u4e0e\u5176\u76f8\u4ea4\uff0c\u800c\u5c06\u8fb9\u6743\u52a0\u5728\u76f8\u4ea4\u5904\u4e00\u5b9a\u4e0d\u5982\u52a0\u5728\u5f53\u524d\u70b9\u8981\u4f18\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5c06\u8fb9\u6743\u52a0\u4e0a $c$ \u7b49\u4ef7\u4e8e\u5c06\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u9650\u5236\u90fd\u51cf\u53bb $c$\uff0c\u5e76\u4fdd\u8bc1\u9650\u5236 $\\ge 0$\uff0c\u90a3\u4e48\u679a\u4e3e\u5230\u8fb9 $e$ \u65f6\uff0c\u4ee4\u7ecf\u8fc7\u8fb9 $e$ \u7684\u9650\u5236\u7684\u6700\u5c0f\u503c\u4e3a $w$\uff0c\u5c31\u5c06\u8fb9 $e$ \u586b\u4e0a $w$\u3002\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n^2)$ \u7684\u8d2a\u5fc3\uff0c\u73b0\u5728\u8981\u5c1d\u8bd5\u4f18\u5316\u5b83\u3002\n\n\u8003\u8651\u5728 dfs \u7684\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a $s_u$ \u8868\u793a\u7ecf\u8fc7 $u$ \u7684\u9650\u5236\u96c6\u5408\uff0c\u5177\u4f53\u800c\u8a00\u5c31\u662f\u679a\u4e3e $u$ \u7684\u6bcf\u4e2a\u513f\u5b50 $to$\uff0c\u5c06 $s_{to}$ \u52a0\u5165 $s_u$\uff0c\u5e76\u52a0\u5165\u4e0b\u7aef\u70b9\u5728 $u$ \u7684\u9650\u5236\uff0c\u518d\u5220\u9664\u4e0a\u7aef\u70b9\u5728 $u$ \u7684\u9650\u5236\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u7ef4\u62a4\u3002\u540c\u65f6\u9700\u8981\u652f\u6301\uff0c\u5c06\u96c6\u5408\u5185\u5143\u7d20\u5168\u4f53\u51cf $w$\uff0c\u67e5\u8be2\u96c6\u5408\u5185\u6700\u5c0f\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 set \u914d\u5408\u51cf\u6cd5\u6807\u8bb0\u6765\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rgi register int\n#define pbk push_back\ntypedef long long ll;\nusing namespace std;\nconst int N=300010;\nint n,m,u,v,sz[N];\nll w[N],ad[N],ans;\nvector<int>a[N],b[N];\nstruct cmp{bool operator()(int x,int y)const{return w[x]==w[y]?x<y:w[x]<w[y];}};\nset<int,cmp>s[N];\nvoid dfs(int x,int f){\n\tsz[x]=1;\n\trgi t=0;\n\tfor(rgi to:a[x])if(to!=f){\n\t\tdfs(to,x),sz[x]+=sz[to];\n\t\tif(sz[to]>sz[t])t=to;\n\t}\n\tswap(ad[x],ad[t]),swap(s[x],s[t]);\n\tfor(rgi to:a[x])if(to!=f){\n\t\tfor(rgi k:s[to])w[k]-=ad[to]-ad[x],s[x].insert(k);\n\t}\t\n\tfor(rgi k:b[x])if(k<0)s[x].erase(-k);\n\telse w[k]+=ad[x],s[x].insert(k);\n\tif(s[x].empty())printf(\"%lld\",x==1?ans:-1),exit(0);\t\n\trgi k=*s[x].begin();\n\tans+=w[k]-ad[x],ad[x]=w[k];\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(rgi i=1;i<n;++i)scanf(\"%d%d\",&u,&v),a[u].pbk(v),a[v].pbk(u);\n\tfor(rgi i=1;i<=m;++i)scanf(\"%d%d%lld\",&u,&v,w+i),b[u].pbk(i),b[v].pbk(-i);\n\tdfs(1,0);\n}\n```\n\n\u628a\u542f\u53d1\u5f0f\u5408\u5e76\u6362\u6210\u53ef\u5e76\u5806\u53ef\u4ee5\u505a\u5230 $O(n \\log n)$\uff0c~~\u6709\u6ca1\u6709\u8001\u54e5\u6559\u6559\u6211\u554a~~\u3002\n",
        "postTime": 1636290542,
        "uid": 78372,
        "name": "M4_SOPMODII_JR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF671D Roads in Yusland"
    },
    {
        "content": "\u4ee4 $dp_{i,j}$ \u8868\u793a i \u7684\u5b50\u6811\u9009\u5b8c\uff0c\u9009\u4e86\u4e00\u6761\u5230\u6df1\u5ea6 j \u7684\u94fe\u65f6\u7684\u6700\u5c0f\u6743\u503c\u3002\n\ndfs\u65f6\u5148\u9ed8\u8ba4\u6700\u5927\u513f\u5b50\u4f38\u51fa\u90a3\u6761\u5230\u6df1\u5ea6 j \u7684\u94fe\uff0c\u8fd9\u662f\u533a\u95f4\u52a0\u6cd5\u3002\u7136\u540e\u5408\u5e76\u5176\u4ed6\u513f\u5b50\uff0c\u5176\u5b9e\u5c31\u662f\u82e5\u5e72\u5355\u70b9\u4fee\u6539\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u7ef4\u62a4\u3002\n\n\u4f46\u6211\u4eec\u6ce8\u610f\u5230\u7a7a\u95f4\u662f $O(n\\log^2 n)$ \u800c\u9650\u5236\u662f $256M$ \uff0c\u6ca1\u5173\u7cfb\uff0c\u52a0\u4e0a\u5783\u573e\u56de\u6536\u518d\u5361\u4e00\u5361\u5c31\u8fc7\u53bb\u4e86\u3002\n\n\u6ce8\u610f\u5230\u65f6\u95f4\u4e5f\u5361\u7684\u5f88\u7d27\uff0c\u6ca1\u5173\u7cfb\uff0cCF \u8bc4\u6d4b\u673a\u53ef\u5feb\u4e86\u3002\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 300005\n#define M 24\n#define inf 1e16 \n#define ll long long\n#define mid (l+r>>1)\nvector<int>son[N],D[N],v[N];\nint dep[N],hd,node_cnt,size[N],rt[N],MX,gg[N];\nll ans,mn[N*M],tg[N*M];\nint ls[N*M],rs[N*M],rub[N*M];\nint neww(){if(hd)return rub[hd--];return ++node_cnt;}\nvoid dfs(int now,int fat){\n\tdep[now]=dep[fat]+1;MX=max(MX,dep[now]);\n\tfor(int T,i=0;i<son[now].size();++i)if((T=son[now][i])!=fat)dfs(T,now);\n}\nvoid dfs0(int now,int fat){\n\tfor(int T,i=0;i<son[now].size();++i)if((T=son[now][i])!=fat)dfs0(T,now),size[now]+=size[T],gg[now]+=gg[T];\n\tif(gg[now]<=0&&now!=1)cout<<\"-1\",exit(0);\n}\nvoid up(int k){mn[k]=min(mn[ls[k]],mn[rs[k]]);}\nvoid down(int k){\n\tif(tg[k]){\n\t\tmn[ls[k]]+=tg[k];mn[rs[k]]+=tg[k];\n\t\ttg[ls[k]]+=tg[k];tg[rs[k]]+=tg[k];\n\t\ttg[k]=0;\n\t}\n}\nvoid add(int k,int l,int r,int x,int y,ll v){\n\tif(!k)return;\n\tif(x<=l&&r<=y){mn[k]+=v,tg[k]+=v;return ;}\n\tif(x>r||y<l)return;down(k);\n\tadd(ls[k],l,mid,x,y,v);add(rs[k],mid+1,r,x,y,v);up(k);\n}\nvoid modify(int&k,int l,int r,int x,ll y){\n\tif(!k)k=neww();if(l==r){mn[k]=min(mn[k],y);return ;}\n\tdown(k);if(x<=mid)modify(ls[k],l,mid,x,y);\n\telse modify(rs[k],mid+1,r,x,y);up(k);\n}\nvoid F(int node,ll val,int k,int l,int r){\n\tif(!k)return ;\n\tif(l==r){if(l<dep[node])modify(rt[node],1,MX,l,val+mn[k]);}\n\telse down(k),F(node,val,ls[k],l,mid),F(node,val,rs[k],mid+1,r);\n\tmn[k]=inf;tg[k]=ls[k]=rs[k]=0;rub[++hd]=k;\n}\nvoid del(int k,int l,int r,int x){\n\tif(!k)return ;\n\tif(l==r){mn[k]=inf,tg[k]=ls[k]=rs[k]=0;rub[++hd]=k;return ;}\n\tif(x<=mid){del(ls[k],l,mid,x);if(mn[ls[k]]>=inf)ls[k]=0;}\n\telse{del(rs[k],mid+1,r,x);if(mn[rs[k]]>=inf)rs[k]=0;}up(k);\n\tif(mn[k]>=inf)mn[k]=inf,tg[k]=ls[k]=rs[k]=0,rub[++hd]=k;\n}\nvoid Dfs(int now,int fat){\n\tint T,i,E=-1;\n\tfor(i=0;i<son[now].size();++i)if((T=son[now][i])!=fat)if(E==-1||size[T=son[now][i]]>size[E])E=T;\n\tif(E==-1){for(i=0;i<D[now].size();++i)modify(rt[now],1,MX,D[now][i],v[now][i]);return ;}\n\telse{\n\t\tll S=0;\n\t\tfor(i=0;i<son[now].size();++i)\n\t\t\tif((T=son[now][i])!=fat)Dfs(T,now),S+=mn[rt[T]];\n\t\tif(now==1){cout<<S;return ;} \n\t\trt[now]=rt[E];\n\t\tadd(rt[now],1,MX,1,dep[now]-1,S-mn[rt[E]]);del(rt[now],1,MX,dep[now]);\n\t\tfor(i=0;i<son[now].size();++i)\n\t\t\tif((T=son[now][i])!=fat&&T!=E)F(now,S-mn[rt[T]],rt[T],1,MX);\n\t\tfor(i=0;i<D[now].size();++i){\n\t\t\tmodify(rt[now],1,MX,D[now][i],S+v[now][i]);\n\t\t}\n\t}\n}int x,y,z,n,m,i;main(){\n\tcin>>n>>m;\n\tfor(i=1;i<n;++i)cin>>x>>y,son[x].push_back(y),son[y].push_back(x);\n\tdfs(1,0);\n\tfor(i=1;i<=m;++i){\n\t\tcin>>x>>y>>z;if(x==y)continue;if(dep[x]>dep[y])swap(x,y);\n\t\tD[y].push_back(dep[x]),v[y].push_back(z);++size[y];\n\t\t++gg[y];--gg[x];\n\t}dfs0(1,0);for(i=0;i<N*M;++i)mn[i]=inf;\n\tDfs(1,0);\n}\n```",
        "postTime": 1608200465,
        "uid": 126321,
        "name": "eexyz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    },
    {
        "content": "\u8003\u8651 dp \uff0c\u8bbe $dp[u]$ \u8868\u793a\u8986\u76d6\u5b8c $u$ \u5411\u4e0a\u7684\u8fb9\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u8fd9\u4e2a\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u5f53\u524d dfs \u5230\u4e86 $u$ \u8fd9\u4e2a\u70b9\uff0c\u7ef4\u62a4\u6240\u6709\u5305\u542b $u$ \u8fd9\u4e2a\u70b9\u7684\u8def\u5f84\u5728\u94a6\u5b9a\u88ab\u9009\u62e9\u65f6\uff0c\u8986\u76d6\u5b8c\u6574\u4e2a $u$ \u7684\u5b50\u6811\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u5982\u679c\u7ef4\u62a4\u4e86\u8fd9\u4e2a\uff0c\u7b54\u6848\u5c31\u662f\u6240\u6709\u5728 $u$ \u5b50\u6811\u5185\u8d77\u59cb\u7684\u8def\u5f84\u7684\u6700\u5c0f\u503c\u3002\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 \u5b50\u6811\u5185\u8d77\u59cb\u7684\uff0c\u5305\u542b\u8fd9\u4e2a\u70b9\u7684\u6700\u5c0f\u503c \u8fd9\u4e2a\u4e1c\u897f\u3002\u5bf9\u4e8e\u4ece\u8fd9\u4e2a\u70b9\u79bb\u5f00\u7684\u8def\u5f84\uff0c\u5c06\u5b83\u7684\u8fd9\u4e2a\u4ee3\u4ef7\u8bbe\u4e3a $\\infin$ \u5373\u53ef\u3002\n\n\u8bbe $S = \\sum_{v\\in son[u]} dp[v]$ \uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u600e\u4e48\u5c06\u4e00\u4e2a\u8def\u5f84\u4ece \u8986\u76d6 $v$ \u7684\u5b50\u6811\u53d8\u6210\u8986\u76d6 $u$ \u7684\u5b50\u6811\uff08\u5176\u4e2d $v$ \u662f $u$ \u7684\u513f\u5b50\uff09\u3002\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u628a\u8986\u76d6 $v$ \u7684\u6240\u6709\u8def\u5f84\u4ee3\u4ef7\u52a0\u4e0a $S - dp[v]$ \uff0c\u76f8\u5f53\u4e8e\u4ece\u5176\u4ed6\u8282\u70b9\u9009\u62e9\u6700\u4f18\u60c5\u51b5\uff0c\u8fd9\u4e2a\u5b50\u6811\u5185\u94a6\u5b9a\u9009\u62e9\u4e86\u5b83\u3002\n\n\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u3002\u53ea\u9700\u8981\u5199\u4e00\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u53d6 $\\min$ \u3002\n\n```cpp\n#include \"iostream\"\n#include \"algorithm\"\n#include \"cstring\"\n#include \"cstdio\"\n#include \"cmath\"\n#include \"vector\"\n#include \"map\"\n#include \"set\"\n#include \"queue\"\nusing namespace std;\n#define MAXN 300006\n//#define int long long\n#define rep(i, a, b) for (int i = (a), i##end = (b); i <= i##end; ++i)\n#define per(i, a, b) for (int i = (a), i##end = (b); i >= i##end; --i)\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n#define vi vector<int>\n#define all(x) (x).begin() , (x).end()\n#define mem( a ) memset( a , 0 , sizeof a )\ntypedef long long ll;\nint n , m;\nconst ll inf = 1e18;\nvi G[MAXN];\nll dp[MAXN];\nvi in[MAXN] , ot[MAXN];\nint w[MAXN] , P[MAXN];\nint L[MAXN] , R[MAXN] , cnt;\nvoid afs( int u , int fa ) {\n\tL[u] = cnt + 1;\n\tfor( auto& t : in[u] ) P[t] = ++ cnt;\n\tfor( auto& v : G[u] ) if( v != fa ) afs( v , u );\n\tR[u] = cnt; \n}\n\nll T[MAXN << 2] , lz[MAXN << 2];\ninline void pu( int rt ) {\n\tT[rt] = min( T[rt << 1] , T[rt << 1 | 1] );\n}\ninline void addit( int rt , ll c ) {\n\tT[rt] = min( T[rt] + c , inf ) , lz[rt] += c;\n}\ninline void pd( int rt ) {\n\tif( lz[rt] ) {\n\t\taddit( rt << 1 , lz[rt] ) , addit( rt << 1 | 1 , lz[rt] );\n\t\tlz[rt] = 0;\n\t}\n}\nvoid add( int rt , int l , int r , int L , int R , ll c ) {\n\tif( L <= l && R >= r ) { addit( rt , c ); return; }\n\tpd( rt );\n\tint m = l + r >> 1;\n\tif( L <= m ) add( rt << 1 , l , m , L , R , c );\n\tif( R > m ) add( rt << 1 | 1 , m + 1 , r , L , R , c );\n\tpu( rt );\n}\nvoid mdfy( int rt , int l , int r , int p , ll c ) {\n\tif( l == r ) { T[rt] = c; return; }\n\tpd( rt );\n\tint m = l + r >> 1;\n\tif( p <= m ) mdfy( rt << 1 , l , m , p , c );\n\telse mdfy( rt << 1 | 1 , m + 1 , r , p , c );\n\tpu( rt );\n}\nll que( int rt , int l , int r , int L , int R ) {\n\tif( L <= l && R >= r ) return T[rt];\n\tpd( rt );\n\tint m = l + r >> 1; ll mn = inf;\n\tif( L <= m ) mn = min( mn , que( rt << 1 , l , m , L , R ) );\n\tif( R > m ) mn = min( mn , que( rt << 1 | 1 , m + 1 , r , L , R ) );\n\treturn mn;\n}\n\nvoid dfs( int u , int fa ) {\n\tll S = 0;\n\tfor( auto& v : G[u] ) if( v != fa ) {\n\t\tdfs( v , u );\n\t\tS = min( S + dp[v] , inf );\n\t}\n\tif( u == fa ) {\n\t\tdp[u] = S; return;\n\t}\n\tfor( auto& x : in[u] ) \n\tmdfy( 1 , 1 , m , P[x] , w[x] + S );\n\tfor( auto& x : ot[u] ) \n\tmdfy( 1 , 1 , m , P[x] , inf );\n\tfor( auto& v : G[u] ) if( v != fa && L[v] <= R[v] ) add( 1 , 1 , m , L[v] , R[v] , S - dp[v] );\n\tif( L[u] <= R[u] ) \n\t\tdp[u] = que( 1 , 1 , m , L[u] , R[u] );\n\telse dp[u] = inf;\n}\nvoid solve() {\n\tcin >> n >> m;\n\tint u , v;\n\trep( i , 2 , n ) scanf(\"%d%d\",&u,&v) , G[u].pb( v ) , G[v].pb( u );\n\trep( i , 1 , m ) scanf(\"%d%d%d\",&u,&v,w + i) , in[u].pb( i ) , ot[v].pb( i );\n\tafs( 1 , 1 );\n\trep( i , 0 , 4 * m ) T[i] = inf;\n\tdfs( 1 , 1 );\n\tcout << ( dp[1] >= inf ? -1 : dp[1] ) << endl;\n}\n\nsigned main() {\n//    int T;cin >> T;while( T-- ) solve();\n    solve();\n}\n\n\n```\n\n",
        "postTime": 1587385414,
        "uid": 63398,
        "name": "yijan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    },
    {
        "content": "[$$\\large \\color{purple} My \\; Blog$$](https://www.cnblogs.com/p-b-p-b/p/10497677.html)\n\n-----------------------\n\n\u8fd9\u662f\u4e00\u4e2a\u975e\u6b63\u89e3\uff0c\u88ab\u6b63\u89e3\u66b4\u8e29\uff0c\u4f46\u5b83\u8fd8\u662f\u8fc7\u4e86\u3002\n\n------------------------------\n\n## \u601d\u8def\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230DP\u3002\n\n\u8bbe$dp_{x,i}$\u8868\u793a$x$\u5b50\u6811\u5168\u90e8\u88ab\u8986\u76d6\uff0c\u800c\u4e14\u5411\u4e0a\u6070\u597d\u5ef6\u4f38\u5230$dep=i$\u7684\u4f4d\u7f6e\uff0c\u7684\u6700\u5c0f\u8d39\u7528\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u975e\u5e38\u663e\u7136\uff1a\u6bcf\u6b21\u628a$dp_x$\u548c$dp_v$\u5408\u5e76\u65f6$dp_{x,i}+=\\min\\{dp_v\\},dp_{v,i}+=\\min\\{dp_x\\}$\uff0c\u7136\u540e\u5bf9\u5e94\u4f4d\u7f6e\u53d6$\\min$\u5373\u53ef\u3002\n\n\u663e\u7136\u8fd9\u4e1c\u897f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\uff0c\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u7136\u800c\u8fd9\u9898\u5361\u7a7a\u95f4\uff0c\u9700\u8981\u5783\u573e\u56de\u6536\u3002\n\n**\u7ebf\u6bb5\u6811\u5408\u5e76\u8bb0\u5f97\u542f\u53d1\u5f0f\u5408\u5e76\uff01**\n\n\u6211\u4e00\u5b9a\u662f\u592a\u4e45\u6ca1\u5199\u7ebf\u6bb5\u6811\u5408\u5e76\u4e86\u2026\u2026\n\n\u4e0d\u8fc7\u6700\u540e\u51e0\u7ec4\u6570\u636e\uff08\u591a\u534a\u662fhack\u6570\u636e\uff09\u628a\u6211hack\u6389\u4e86\uff0c\u6211\u5728\u8f93\u51fa\u65f6\u7279\u5224\u624d\u8fc7\u3002\u4e5f\u8bb8\u662f\u70b8long long\u7684\u9505\uff0c\u4f46\u7a7a\u95f4\u4e0d\u5141\u8bb8\u6211\u5f00__int128\u3002\n\n-----------------------------\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nclock_t t=clock();\nnamespace my_std{\n    using namespace std;\n    #define pil pair<int,ll>\n    #define fir first\n    #define sec second\n    #define MP make_pair\n    #define rep(i,x,y) for (int i=(x);i<=(y);i++)\n    #define drep(i,x,y) for (int i=(x);i>=(y);i--)\n    #define go(x) for (int i=head[x];i;i=edge[i].nxt)\n    #define templ template<typename T>\n    #define sz 303030\n    typedef long long ll;\n    typedef double db;\n    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n    templ inline T rnd(T l,T r) {return uniform_int_distribution<T>(l,r)(rng);}\n    templ inline bool chkmax(T &x,T y){return x<y?x=y,1:0;}\n    templ inline bool chkmin(T &x,T y){return x>y?x=y,1:0;}\n    templ inline void read(T& t)\n    {\n        t=0;char f=0,ch=getchar();double d=0.1;\n        while(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n        while(ch<='9'&&ch>='0') t=t*10+ch-48,ch=getchar();\n        if(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n        t=(f?-t:t);\n    }\n    template<typename T,typename... Args>inline void read(T& t,Args&... args){read(t); read(args...);}\n    char sr[1<<21],z[20];int C=-1,Z=0;\n    inline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\n    inline void print(register int x)\n    {\n    \tif(C>1<<20)Ot();if(x<0)sr[++C]='-',x=-x;\n    \twhile(z[++Z]=x%10+48,x/=10);\n    \twhile(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n    }\n    void file()\n    {\n        #ifndef ONLINE_JUDGE\n        freopen(\"a.txt\",\"r\",stdin);\n        #endif\n    }\n    inline void chktime()\n    {\n        #ifndef ONLINE_JUDGE\n        cout<<(clock()-t)/1000.0<<'\\n';\n        #endif\n    }\n    #ifdef mod\n    ll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x%mod) if (y&1) ret=ret*x%mod;return ret;}\n    ll inv(ll x){return ksm(x,mod-2);}\n    #else\n    ll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x) if (y&1) ret=ret*x;return ret;}\n    #endif\n//\tinline ll mul(ll a,ll b){ll d=(ll)(a*(double)b/mod+0.5);ll ret=a*b-d*mod;if (ret<0) ret+=mod;return ret;}\n}\nusing namespace my_std;\n\nint n,m;\nstruct hh{int t,nxt;}edge[sz<<1];\nint head[sz],ecnt;\nvoid make_edge(int f,int t)\n{\n    edge[++ecnt]=(hh){t,head[f]};\n    head[f]=ecnt;\n    edge[++ecnt]=(hh){f,head[t]};\n    head[t]=ecnt;\n}\n\n#define Tree (sz*20)\nll tr[Tree],tag[Tree];\nint ls[Tree],rs[Tree],size[Tree],cnt;\nint bin[Tree],top;\nvoid del(int k){tr[k]=1e17;tag[k]=ls[k]=rs[k]=0;if (top<Tree-1) bin[++top]=k;}\nint newnode(){int k=(top?bin[top--]:++cnt);tr[k]=1e17;return k;}\n#define lson ls[k],l,mid\n#define rson rs[k],mid+1,r\nvoid Add(int k,ll w){if (!k) return;tr[k]+=w;tag[k]+=w;}\nvoid pushdown(int k){Add(ls[k],tag[k]);Add(rs[k],tag[k]);tag[k]=0;}\nvoid ins(int &k,int l,int r,int x,ll y)\n{\n    if (!k) size[k=newnode()]=1;\n    chkmin(tr[k],y);\n    if (l==r) return;\n    pushdown(k);\n    int mid=(l+r)>>1;\n    if (x<=mid) ins(lson,x,y);\n    else ins(rson,x,y);\n    size[k]=size[ls[k]]+size[rs[k]];\n}\nll query(int k,int l,int r,int x,int y)\n{\n    if (!k) return 1e17;\n    if (x<=l&&r<=y) return tr[k];\n    int mid=(l+r)>>1;ll ret=1e17;\n    pushdown(k);\n    if (x<=mid) chkmin(ret,query(lson,x,y));\n    if (y>mid) chkmin(ret,query(rson,x,y));\n    return ret;\n}\nint root[sz];\nvoid merge(int &k,int l,int r,int &k2)\n{\n    if (!k2) return;\n    if (!k) size[k=newnode()]=1;\n    if (size[k]<size[k2]) swap(k,k2);\n    chkmin(tr[k],tr[k2]);\n    if (l==r) return del(k2);\n    int mid=(l+r)>>1;\n    pushdown(k);pushdown(k2);\n    merge(lson,ls[k2]);\n    merge(rson,rs[k2]);\n    del(k2);\n    size[k]=size[ls[k]]+size[rs[k]];\n}\n\nvector<pil>V[sz];\nint dep[sz];\n\nvoid dfs(int x,int fa)\n{\n    dep[x]=dep[fa]+1;\n    ins(root[x],1,n,dep[x],0);\n    #define v edge[i].t\n    go(x) if (v!=fa)\n    {\n        dfs(v,x);\n        ll w1=query(root[x],1,n,1,dep[x]),w2=query(root[v],1,n,1,dep[x]);\n        Add(root[x],w2);Add(root[v],w1);\n        merge(root[x],1,n,root[v]);\n    }\n    #undef v\n    ll w;\n    for (auto v:V[x]) \n        w=query(root[x],1,n,1,dep[x]),ins(root[x],1,n,dep[v.fir],w+v.sec);\n}\n\nint main()\n{\n    file();\n    int x,y,z;\n    read(n,m);\n    rep(i,1,n-1) read(x,y),make_edge(x,y);\n    rep(i,1,m) read(x,y,z),V[x].push_back(MP(y,z));\n    dfs(1,0);\n    ll ans=query(root[1],1,n,1,1);\n    printf(\"%lld\",ans>=1e16||ans<0?-1ll:ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1552043016,
        "uid": 76481,
        "name": "p_b_p_b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    },
    {
        "content": "> [CF671D Roads in Yusland](https://www.luogu.com.cn/problem/CF671D)\n\n\u76f8\u5f53\u4e00\u9053\u88f8\u7684\u9898\u76ee\u3002\n\n\u8003\u8651\u6811\u5f62 DP\uff0c\u8bbe $f_i$ \u8868\u793a\u8986\u76d6 $i$ \u7684\u5b50\u6811\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u4e0d\u5173\u5fc3\u5177\u4f53\u8986\u76d6\u65b9\u6848\uff0c\u53ea\u6709\u6700\u6d45\u8def\u5f84\u7684\u9876\u90e8\u6df1\u5ea6\u6709\u5f71\u54cd\uff0c\u56e0\u6b64\u518d\u8bb0\u5f55\u4e00\u7ef4 $j$ \u8868\u793a\u4e4b\u3002\n\n\u8003\u8651\u5408\u5e76 $i$ \u53ca\u5176\u5b50\u8282\u70b9 $u$\uff0c\u6839\u636e\u5b9e\u9645\u610f\u4e49\u5bb9\u6613\u5f97\u5230 DP \u8f6c\u79fb\u5f0f\n$$\nf'_{i, j} = \\min(f_{i, j} + \\min\\limits_{k\\geq j} f_{u, k}, f_{u, j} + \\min\\limits_{k\\geq j} f_{i, k})\n$$\n\u7279\u522b\u5730\uff0c\u82e5 $j > dep_i$\uff0c\u5219 $f_{i, j} = +\\infty$\u3002\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $f_i$ \u6240\u6709\u6709\u503c\u7684\u4f4d\u7f6e\uff0c\u65f6\u523b\u8bb0\u5f55 $mn_i$ \u8868\u793a\u5f53\u524d $\\min\\limits_{k\\geq j} f_{i, k}$\uff0c$mn_u$ \u540c\u7406\uff0c\u5e76\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u8f6c\u79fb\uff1a\n\n- \u82e5 $f_i$ \u5728\u5f53\u524d\u533a\u95f4\u6709\u503c\uff0c$f_u$ \u6ca1\u6709\u503c\uff0c\u90a3\u4e48 $mn_i$ **\u5148** \u66f4\u65b0\u4e3a $\\min(mn_i, f_i)$\uff0c$f_i$ **\u518d** \u52a0\u4e0a $mn_u$\u3002\u6ce8\u610f\u5148\u540e\u987a\u5e8f\uff0c\u56e0\u4e3a $f_i + mn_u$ \u5b9e\u9645\u4e0a\u4e3a $f'_i$\u3002\n- \u82e5 $f_u$ \u5728\u5f53\u524d\u533a\u95f4\u6709\u503c\uff0c$f_i$ \u6ca1\u6709\u503c\uff0c\u540c\u4e0a\u3002\n- \u82e5 $f_i$ \u548c $f_u$ \u5728\u5f53\u524d\u533a\u95f4\u5747\u6709\u503c\uff0c\u6839\u636e\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u6027\u8d28\uff0c\u53ea\u9700\u8003\u8651\u53f6\u5b50\u8282\u70b9\uff08\u975e\u53f6\u5b50\u8282\u70b9\u4f1a\u7ee7\u7eed\u9012\u5f52\u5408\u5e76\uff09\uff0c\u56e0\u6b64 $mn_i$ \u66f4\u65b0\u4e3a $\\min(mn_i, f_i)$\uff0c$mn_u$ \u540c\u7406\uff0c\u7136\u540e $f_i$ \u66f4\u65b0\u4e3a $\\min(f_i + mn_u, f_u + mn_i)$\u3002\n\n- \u6ce8\u610f\uff0c\u6839\u636e\u8f6c\u79fb\u5f0f\uff0c\u9700\u8981\u5148\u9012\u5f52\u53f3\u513f\u5b50\u518d\u9012\u5f52\u5de6\u513f\u5b50\uff0c\u5426\u5219 $mn_i$ \u548c $mn_u$ \u9519\u8bef\u3002\n- \u6ce8\u610f\uff0c$mn_u$ \u5bf9\u5e94\u7684 $k$ \u5fc5\u987b\u4e0d\u5927\u4e8e $dep_i$\uff0c\u5426\u5219 $(i, u)$ \u8fd9\u6761\u8fb9\u672a\u88ab\u8986\u76d6\uff0c\u4e0d\u5408\u6cd5\u3002\u56e0\u6b64\u7ebf\u6bb5\u6811\u5408\u5e76\u65f6\u8fd8\u8981\u8003\u8651\u5f53\u524d\u533a\u95f4\u4e0e $dep_i$ \u7684\u5173\u7cfb\u3002\u82e5 $dep_i < l$ \u5219\u76f4\u63a5\u8fd4\u56de\uff0c\u82e5 $l\\leq dep_i < r$ \u5219\u5c31\u7b97 $f_i$ \u5728\u5f53\u524d\u533a\u95f4\u6ca1\u6709\u503c\uff0c\u4e5f\u4e0d\u80fd\u7528 $f_u$ \u66f4\u65b0 $mn_u$\uff0c\u800c\u662f\u7ee7\u7eed\u5411\u4e0b\u9012\u5f52\uff0c\u5426\u5219 $mn_u$ \u9519\u8bef\u3002\n\n\u5408\u5e76\u5b8c\u6bd5\u540e\u8003\u8651\u6240\u6709\u4ee5 $i$ \u4e3a\u8f83\u6df1\u4e00\u6bb5\u7684\u8def\u5f84 $(a, i, w)$\uff0c\u663e\u7136\u7528 $w + \\min\\limits_{p = dep_a} ^ {dep_i} f_{i, p}$ \u66f4\u65b0 $f_{i, dep_a}$\u3002\u6700\u7ec8\u82e5 $f_{1, dep_1} \\neq +\\infty$ \u5219\u6709\u89e3\uff0c\u7b54\u6848\u4e3a $f_{1, dep_1}$\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u7efc\u4e0a\uff0c\u53ea\u9700\u533a\u95f4\u6c42\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u52a0\u6cd5\uff0c\u5355\u70b9\u53d6\u6700\u5c0f\u503c\uff0c\u7528\u5e26\u61d2\u6807\u8bb0\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log n)$\u3002\n\n\u8fdb\u4e00\u6b65\u5730\uff0c\u53d1\u73b0\u53ef\u4ee5\u4e22\u6389 $k\\geq j$ \u7684\u9650\u5236\uff0c\u8fd9\u6837\u5408\u5e76\u5c31\u4e0d\u7528\u8003\u8651 $k \\leq dep_i$ \u7684\u9650\u5236\uff0c\u800c\u662f\u4e00\u5f00\u59cb\u6c42\u51fa $mn_i$ \u4e3a $f_i$ \u533a\u95f4 $[dep_1, dep_i]$ \u6700\u503c\uff0c$mn_u$ \u540c\u7406\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u5904\u7406\u6389 $k\\leq dep_i$\uff0c\u4f1a\u597d\u5199\u5f88\u591a\u3002\n\n\u4e0d\u5199\u5783\u573e\u56de\u6536\u4f1a MLE\uff0c\u4f46\u662f\u5c06\u6570\u7ec4\u5927\u5c0f\u5f00\u5230\u4e0d\u6b63\u786e\u7684 $26n$ \u800c\u975e $2\\log n$ \u53ef\u4ee5\u901a\u8fc7\uff0c\u6240\u4ee5\u61d2\u5f97\u5199\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nbool Mbe;\nconstexpr int N = 3e5 + 5;\nconstexpr int K = N * 26;\nconstexpr ll inf = 0x3f3f3f3f3f3f3f3f;\nint node, R[N], ls[K], rs[K];\nll val[K], laz[K];\nint n, m, dep[N];\nvector<int> e[N];\nvector<pair<int, int>> buc[N];\nvoid add(ll &x, ll y) {x = min(x + y, inf);}\nvoid pushdown(int x) {\n  if(laz[x]) {\n    if(ls[x]) add(laz[ls[x]], laz[x]), add(val[ls[x]], laz[x]);\n    if(rs[x]) add(laz[rs[x]], laz[x]), add(val[rs[x]], laz[x]);\n    laz[x] = 0;\n  }\n}\nvoid modify(int l, int r, int p, int &x, ll v) {\n  if(!x) val[x = ++node] = inf;\n  if(l == r) return val[x] = min(val[x], v), void();\n  int m = l + r >> 1;\n  pushdown(x);\n  if(p <= m) modify(l, m, p, ls[x], v);\n  else modify(m + 1, r, p, rs[x], v);\n  val[x] = min(val[ls[x]], val[rs[x]]);\n}\nll query(int l, int r, int ql, int qr, int x) {\n  if(!x || ql <= l && r <= qr) return val[x];\n  int m = l + r >> 1;\n  ll ans = inf;\n  pushdown(x);\n  if(ql <= m) ans = query(l, m, ql, qr, ls[x]);\n  if(m < qr) ans = min(ans, query(m + 1, r, ql, qr, rs[x]));\n  return ans;\n}\nint merge(int l, int r, int x, int y, ll vx, ll vy) {\n  pushdown(x), pushdown(y);\n  if(!x && !y) return 0;\n  if(!x) return add(val[y], vx), laz[y] = vx, y;\n  if(!y) return add(val[x], vy), laz[x] = vy, x;\n  if(l == r) {\n    val[x] = min(inf, min(val[x] + vy, val[y] + vx));\n    return x;\n  }\n  int m = l + r >> 1;\n  ls[x] = merge(l, m, ls[x], ls[y], vx, vy);\n  rs[x] = merge(m + 1, r, rs[x], rs[y], vx, vy);\n  return val[x] = min(val[ls[x]], val[rs[x]]), x;\n}\nvoid dfs(int id, int ff) {\n  // cerr << \"dfs \" << id << \" \" << ff << \"\\n\";\n  dep[id] = dep[ff] + 1;\n  bool isleaf = 1;\n  for(int it : e[id]) {\n    if(it == ff) continue;\n    dfs(it, id);\n    if(isleaf) R[id] = R[it];\n    else {\n      ll vid = query(1, n, 1, dep[id], R[id]);\n      ll vit = query(1, n, 1, dep[id], R[it]);\n      R[id] = merge(1, n, R[id], R[it], vid, vit);\n    }\n    isleaf = 0;\n  }\n  if(isleaf) {\n    // cout << \"------------- isleaf \" << id << \" \" << dep[id] << \"\\n\";\n    modify(1, n, dep[id], R[id], 0);\n  }\n  for(auto it : buc[id]) {\n    ll v = query(1, n, 1, dep[id], R[id]);\n    // cout << \"------------- chk \" << id << \" \" << dep[it.first] << \" \" << v << \" \" << it.second << \"\\n\";\n    modify(1, n, dep[it.first], R[id], min(inf, v + it.second));\n  }\n}\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    freopen(\"1.in\", \"r\", stdin);\n    freopen(\"1.out\", \"w\", stdout);\n  #endif\n  ios::sync_with_stdio(0);\n  cin >> n >> m;\n  val[0] = inf;\n  for(int i = 1; i < n; i++) {\n    int u, v;\n    cin >> u >> v;\n    e[u].push_back(v);\n    e[v].push_back(u);\n  }\n  for(int i = 1; i <= m; i++) {\n    int u, v, c;\n    cin >> u >> v >> c;\n    buc[u].push_back({v, c});\n  }\n  dfs(1, 0);\n  ll ans = query(1, n, 1, 1, R[1]);\n  if(ans == inf) ans = -1;\n  cout << ans << \"\\n\";\n  cerr << TIME << \" ms\\n\";\n  return 0;\n}\n/*\n2022/8/11\nAuthor: Alex_Wei\nstart coding at 20:15\nfinish debugging at 22:00\n*/\n```",
        "postTime": 1660305882,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF671D Roads in Yusland"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/CF671D)\n\n\u8bbe$dp_{i,j}$\u8868\u793a$i$\u5b50\u6811\u4e2d\u7684\u8fb9\u5df2\u7ecf\u5168\u90e8\u88ab\u8986\u76d6\uff0c\u4e14\u5b50\u6811\u5185\u90e8\u9009\u62e9\u7684\u8def\u5f84\u6700\u8fdc\u53ef\u4ee5\u8986\u76d6\u5230\u6df1\u5ea6\u4e3a$j$\u7684\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u8f6c\u79fb\u7684\u65f6\u5019\u5927\u6982\u7c7b\u4f3c\u4e00\u4e2a\u6811\u4e0a\u80cc\u5305\uff1a\n\n$$dp_{i,j}=\\min_{v\\in son(i),\\min k_v=j}\\{\\sum_{v\\in son(i)}dp_{v,k_v}\\}$$\n\n\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff0c\u5bf9\u4e8e$dp_{i,j_1},dp_{i,j_2}$\uff0c\u5982\u679c\u5b58\u5728$j_1< j_2$\uff0c\u4e14$dp_{i,j_1}\\leq dp_{i,j_2}$\uff0c\u5373\u8986\u76d6\u7684\u4e0d\u5982\u4f60\u8fdc\u4ee3\u4ef7\u5374\u6bd4\u8f83\u5927\uff0c\u8fd9\u6837\u7684$dp_{i,j_2}$\u663e\u7136\u662f\u6ca1\u4ec0\u4e48\u7528\u7684\uff0c\u4e00\u5b9a\u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u4f18\u7b54\u6848\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u53ea\u7ef4\u62a4\u6709\u7528\u7684$dp$\u72b6\u6001\uff0c\u6211\u4eec\u6309\u7167\u6700\u8fdc\u6df1\u5ea6\u4ece\u5c0f\u5230\u5927\u628a$dp$\u72b6\u6001\u5b58\u4e0b\u6765\uff0c\u663e\u7136\u8fd9\u6837$dp$\u503c\u5c31\u662f\u5355\u51cf\u7684\u3002\n\n\u8003\u8651\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u9996\u5148\u662f\u5927\u96c6\u5408\u5bf9\u5c0f\u96c6\u5408\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u679a\u4e3e\u5c0f\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6df1\u5ea6$j$\uff0c\u4ee4\u5176\u4f5c\u4e3a\u6700\u5c0f\u503c\u3002\u9700\u8981\u5728\u5927\u96c6\u5408\u4e2d\u627e\u5230\u4e00\u4e2a$k>j$\u4e14$dp_k$\u6700\u5c0f\u7684\u72b6\u6001\u6765\uff0c\u7531\u4e8e$dp$\u503c\u662f\u5355\u51cf\u7684\uff0c\u6240\u4ee5\u6700\u5c0f\u503c\u4e00\u5b9a\u6765\u81ea\u4e8e\u6df1\u5ea6\u6700\u5927\u7684\u72b6\u6001\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u5927\u96c6\u5408\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u72b6\u6001\u662f\u5426$>j$\u4e86\u3002\u5f53\u628a\u72b6\u6001\u63d2\u5165\u5230\u5927\u96c6\u5408\u7684\u65f6\u5019\u9700\u8981\u7ef4\u62a4dp\u503c\u7684\u5355\u8c03\u6027\u3002\n\n\u518d\u6765\u8003\u8651\u5927\u96c6\u5408\u5bf9\u5c0f\u96c6\u5408\u7684\u5f71\u54cd\uff0c\u663e\u7136\u4e5f\u5e94\u8be5\u7531**\u5c0f\u96c6\u5408\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u72b6\u6001**\u6765\u8fdb\u884c\u8f6c\u79fb\uff0c\u800c\u4e14\u8f6c\u79fb\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u5927\u96c6\u5408\u6574\u4f53\u52a0\u4e00\u4e2a\u503c\u3002\u4e8e\u662f\u7ef4\u62a4\u4e00\u4e2a\u6574\u4f53\u52a0\u6807\u8bb0\u5373\u53ef\u3002\u6ce8\u610f\u5927\u96c6\u5408\u4e2d\u6709\u4e00\u4e9b\u72b6\u6001\u7684\u6df1\u5ea6\u5c0f\u4e8e**\u5c0f\u96c6\u5408\u6700\u5927\u6df1\u5ea6\u7684\u72b6\u6001**\uff0c\u7531\u4e8e\u8f6c\u79fb\u672c\u8d28\u4e0b\u4e0b\u6807\u53d6$\\min$\uff0c\u6240\u4ee5\u8f6c\u79fb\u540e\u8fd9\u4e9b\u72b6\u6001\u80af\u5b9a\u5c31\u4e0d\u5b58\u5728\u4e86\uff0c\u76f4\u63a5\u66b4\u529b\u5220\u9664\u5373\u53ef\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528set\u6765\u5b9e\u73b0\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u4e8e\u662f\u590d\u6742\u5ea6\u662f$O(n\\log^2n)$\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\ninline int read() {\n\tchar c=getchar();int x=0;while(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nconst int maxn=300005;\nstruct E{int v,nxt;}e[maxn<<1];\nstruct node{int d;LL w;}bl[maxn],del[maxn];\nstd::vector<node> r[maxn];\nstruct cmp {\n\tinline bool operator() (const node &A,const node &B) {\n\t\treturn A.d==B.d?A.w<B.w:A.d<B.d;\n\t}\n};\ninline int cop(const node &A,const node &B) {\n\treturn A.d==B.d?A.w<B.w:A.d<B.d;\n}\nstd::set<node,cmp> s[maxn];\nstd::set<node>::iterator it;\nint n,m,head[maxn],dep[maxn],rt[maxn],num,tot;LL va[maxn];\ninline void add(int x,int y) {\n\te[++num].v=y;e[num].nxt=head[x];head[x]=num;\n\te[++num].v=x;e[num].nxt=head[y];head[y]=num;\n}\nvoid dfs(int x) {\n\tfor(re int i=head[x];i;i=e[i].nxt) {\n\t\tif(dep[e[i].v])continue;\n\t\tdep[e[i].v]=dep[x]+1;dfs(e[i].v);\n\t}\n}\ninline void kill() {puts(\"-1\");exit(0);}\ninline void ins(int a,node c) {\n\tc.w-=va[a];\n\tit=s[a].lower_bound((node){c.d,-1});\n\tif(c.d==(*it).d&&c.w>=(*it).w) return;\n\tif(it!=s[a].begin()) {\n\t\t--it;if(c.w>=(*it).w)return;++it;\n\t}\n\tint cnt=0;\n\tfor(;it!=s[a].end();++it) {\n\t\tnode t=*it;\n\t\tif(t.w>=c.w) del[++cnt]=t;else break;\n\t}\n\twhile(cnt)s[a].erase(del[cnt--]);\n\ts[a].insert(c);\n}\ninline void merge(int a,int b) {\n\tit=s[a].end();--it;node t=*it;tot=0;\n\tfor(it=s[b].begin();it!=s[b].end();++it) {\n\t\tbl[++tot]=*it;bl[tot].w+=va[b];\n\t\tif(bl[tot].d<=t.d) bl[tot].w+=va[a]+t.w;\n\t\telse {--tot;break;}\n\t}\n\tit=s[b].end();--it;t=*it;\n\twhile(!s[a].empty()) {\n\t\tit=s[a].end();--it;node k=*it;\n\t\tif(k.d>t.d) s[a].erase(k);\n\t\telse break;\n\t}\n\tva[a]+=va[b]+t.w;\n\tfor(re int i=1;i<=tot;++i)\n\t\tins(a,bl[i]);\n}\ninline void out(int a) {\n\tfor(it=s[a].begin();it!=s[a].end();++it) {\n\t\tprintf(\"%d %lld\\n\",(*it).d,(*it).w+va[a]);\n\t}\n\tputs(\"\");\n}\nvoid Dfs(int x) {\n\tint fl=0;\n\tfor(re int i=head[x];i;i=e[i].nxt) {\n\t\tif(dep[e[i].v]<dep[x]) continue;\n\t\tDfs(e[i].v);fl|=1;\n\t\tif(!rt[x]) {rt[x]=rt[e[i].v];continue;}\n\t\tif(s[rt[x]].size()<s[e[i].v].size()) std::swap(rt[x],rt[e[i].v]);\n\t\tmerge(rt[x],rt[e[i].v]);\n\t}\n\tif(!fl) {\n\t\trt[x]=x;\n\t\tstd::sort(r[x].begin(),r[x].end(),cop);\n\t\tint lst=1e9+7;\n\t\tfor(re int i=0;i<r[x].size();++i) {\n\t\t\tif(r[x][i].w>=lst) continue;\n\t\t\tlst=r[x][i].w;\n\t\t\ts[x].insert(r[x][i]);\n\t\t}\n\t\tif(x!=1&&s[x].empty()) kill();\n\t\treturn; \n\t}\n\tif(s[rt[x]].empty()) kill();\n\tfor(re int i=0;i<r[x].size();++i) {\n\t\tit=s[rt[x]].end();--it;node t=*it;\n\t\tif(r[x][i].d>=t.d) continue;\n\t\tLL v=t.w+r[x][i].w+va[rt[x]];\n\t\tins(rt[x],(node){r[x][i].d,v});\n\t}\n\twhile(x!=1&&!s[rt[x]].empty()) {\n\t\tit=s[rt[x]].end();--it;node t=*it;\n\t\tif(t.d>=dep[x]) s[rt[x]].erase(t);\n\t\telse break;\n\t}\n\tif(s[rt[x]].empty()) kill();\n\t//printf(\"%d:\\n\",x);out(rt[x]);\n}\nint main() {\n\tn=read(),m=read();\n\tfor(re int i=1;i<n;i++)add(read(),read());\n\tdep[1]=1;dfs(1);\n\tfor(re int x,y,w,i=1;i<=m;i++){\n\t\tx=read(),y=read(),w=read();\n\t\tif(x!=y)r[x].push_back((node){dep[y],w});\n\t}\n\tDfs(1);it=s[rt[1]].begin();\n\tprintf(\"%lld\\n\",(*it).w+va[rt[1]]);\n\treturn 0;\n}\n```",
        "postTime": 1590924971,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    },
    {
        "content": "~~\u6211\u611f\u89c9\u4e0d\u5361\u7a7a\u95f4\u4e0d\u5361\u5e38\u4e5f\u4e0d\u5361long long\u554a~~\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684 dp\uff0c\u8bbe$f_{i,j}$\u8868\u793a$i$\u7684\u5b50\u6811\u8fb9\u5168\u90fd\u8986\u76d6\uff0c\u4e14\u5b50\u6811\u5185\u90e8\u9009\u62e9\u7684\u8def\u5f84\u53ef\u4ee5\u8986\u76d6\u5230\u6df1\u5ea6$j$\u7684\u65b9\u6848\u3002\n\n\u8f6c\u79fb\u5c31\u662f\u5b50\u6811\u5168\u90e8\u90fd\u8981\u5b8c\u6210\uff0c\u56e0\u6b64\u505a\u4e00\u4e2a\u7c7b\u4f3c\u80cc\u5305\u7684\u8f6c\u79fb\uff1a\n\n$$f_{u,j}=\\min\\{\\sum_{v\\in\\text{son}_u}f_{v,j_x}[\\min_{v\\in\\text{son}_u}j_x\\ =j]\\}$$\n\n\u66b4\u529b\u505a\u590d\u6742\u5ea6\u662f$O(n^2)$\uff0c\u600e\u4e48\u4f18\u5316\u5462\uff1f\u6ce8\u610f\u5230\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u6709\u95ee\u9898\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86\u6574\u4f53 dp\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4 dp \u72b6\u6001\uff0c\u5229\u7528\u61d2\u6807\u8bb0\u6574\u4f53\u6279\u5904\u7406\u8f6c\u79fb\uff0c\u590d\u6742\u5ea6$O(n\\log_2n)$\u3002\n\n\u5177\u4f53\u7684\uff0c\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9$u$\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65f6\u5019\u8bb0\u5f55\u6700\u5c0f\u503c\u7136\u540e\u6253\u61d2\u6807\u8bb0\u66f4\u65b0\u533a\u95f4\u6700\u5c0f\u503c\u3002\u4e0d\u592a\u597d\u8bb2\uff0c\u5177\u4f53\u770b\u4ee3\u7801\uff0c\u5199\u5f97\u633a\u4e11...\n\n```cpp\nint Merge(int rto,int rtn,int lb,int rb,ll MIO,ll MIN){\n\tif (lb==rb&&rto&&rtn){\n\t\tseg[rto].x=min(seg[rto].x+min(seg[rtn].x,MIN),seg[rtn].x+min(seg[rto].x,MIO));\n\t\treturn rto;\n\t}else if (rto==0&&rtn){\n\t\tseg[rtn].x=seg[rtn].x+MIO;\n\t\tseg[rtn].tag+=MIO;\n\t\treturn rtn;\n\t}else if (rto&&rtn==0){  \n\t\tseg[rto].x=seg[rto].x+MIN;\n\t\tseg[rto].tag+=MIN;\n\t\treturn rto;\n\t}else if (rto==0&&rtn==0) return 0;\n\tpushdown(rto);pushdown(rtn);\n\tseg[rto].l=Merge(seg[rto].l,seg[rtn].l,lb,mid,min(MIO,seg[seg[rto].r].x),min(MIN,seg[seg[rtn].r].x));\n\tseg[rto].r=Merge(seg[rto].r,seg[rtn].r,mid+1,rb,MIO,MIN);\n\tpushup(rto);\n\treturn rto;\n}\n```\n\n\n\u7136\u540e\u5c31\u662f\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5355\u70b9\u4fee\u6539\u3002\u5408\u5e76\u7ed3\u675f\u540e\u4e0d\u8981\u5fd8\u8bb0\u628a\u7aef\u70b9\u4e3a$u$\u7684\u8def\u5f84\u7ed9\u66f4\u65b0\u5230\u7ebf\u6bb5\u6811\u91cc\u3002\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u53ef\u60dc\u8c03\u4e86$2$\u4e2a\u591a\u5c0f\u65f6...\n\n\u6ce8\u610f\u6bcf\u4e00\u6b21\u975e\u6839\u8282\u70b9\u8981\u6e05\u7a7a$f_{u,\\text{dep}_u}$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n#define gc getchar\ninline ll read(){\n    register ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\nstruct node{\n\tint l,r;\n\tll tag,x;\n}seg[303030*30];\nint root[303030],n,m,cnt,head[303030],tot;\nstruct edge{\n\tint to,nxt;\n}g[1010101];\ninline void made(int from,int to){\n\tg[++tot].to=to;g[tot].nxt=head[from];head[from]=tot;\n}\nvector<pair<int,ll> > Q[303030];\n#define mid ((lb+rb)>>1)\n#define inf (1e14)\ninline void pushup(int rt){\n\tseg[rt].x=min(seg[seg[rt].l].x,seg[seg[rt].r].x);\n}\ninline void pushdown(int rt){\n\tif (seg[rt].tag){\n\t\tif (seg[rt].l) seg[seg[rt].l].tag+=seg[rt].tag,seg[seg[rt].l].x+=seg[rt].tag;\n\t\tif (seg[rt].r) seg[seg[rt].r].tag+=seg[rt].tag,seg[seg[rt].r].x+=seg[rt].tag;\n\t\tseg[rt].tag=0;\n\t}\n}\nvoid update(int &rt,int lb,int rb,int pos,ll x){\n\tif (!rt) rt=++cnt,seg[rt]=seg[0];\n\tif (lb==rb) return (void)(seg[rt].x=min(seg[rt].x,x));\n\tpushdown(rt);\n\t(mid>=pos?update(seg[rt].l,lb,mid,pos,x):update(seg[rt].r,mid+1,rb,pos,x));\n\tpushup(rt);\n}\nll ANS;\nvoid clear(int &rt,int lb,int rb,int pos){\n\tif (!rt) return;\n\tif (lb==rb) return (void)(ANS=seg[rt].x,seg[rt].x=inf);\n\tpushdown(rt);\n\t(mid>=pos?clear(seg[rt].l,lb,mid,pos):clear(seg[rt].r,mid+1,rb,pos));\n\tpushup(rt);\n}\nint Merge(int rto,int rtn,int lb,int rb,ll MIO,ll MIN){\n\tif (lb==rb&&rto&&rtn){\n\t\tseg[rto].x=min(seg[rto].x+min(seg[rtn].x,MIN),seg[rtn].x+min(seg[rto].x,MIO));\n\t\treturn rto;\n\t}else if (rto==0&&rtn){\n\t\tseg[rtn].x=seg[rtn].x+MIO;\n\t\tseg[rtn].tag+=MIO;\n\t\treturn rtn;\n\t}else if (rto&&rtn==0){  \n\t\tseg[rto].x=seg[rto].x+MIN;\n\t\tseg[rto].tag+=MIN;\n\t\treturn rto;\n\t}else if (rto==0&&rtn==0) return 0;\n\tpushdown(rto);pushdown(rtn);\n\tseg[rto].l=Merge(seg[rto].l,seg[rtn].l,lb,mid,min(MIO,seg[seg[rto].r].x),min(MIN,seg[seg[rtn].r].x));\n\tseg[rto].r=Merge(seg[rto].r,seg[rtn].r,mid+1,rb,MIO,MIN);\n\tpushup(rto);\n\treturn rto;\n}\nll query(int rt,int lb,int rb,int l,int r){\n\tif (!rt||lb>r||rb<l) return inf;\n\tif (lb>=l&&rb<=r) return seg[rt].x;\n\tpushdown(rt);\n\treturn min(query(seg[rt].l,lb,mid,l,r),query(seg[rt].r,mid+1,rb,l,r));\n}\nint dep[303030];\nvoid dfs2(int u,int faa){\n\tdep[u]=dep[faa]+1;\n\tif (g[head[u]].nxt==0&&faa){\n\t\tfor (auto x:Q[u]) update(root[u],1,n,dep[x.first],x.second);\n\t\treturn;\n\t}\n\tfor (int i=head[u];i;i=g[i].nxt){\n\t\tint v=g[i].to;\n\t\tif (v==faa) continue;\n\t\tdfs2(v,u);\n\t\tif (!root[u]) root[u]=root[v];\n\t\telse root[u]=Merge(root[u],root[v],1,n,inf,inf);\n\t}\n\tfor (auto x:Q[u]) update(root[u],1,n,dep[x.first],x.second+query(root[u],1,n,dep[x.first],dep[u]));\n\tclear(root[u],1,n,dep[u]);\n}\ninline void init(){\n\tn=read(),m=read();\n\tfor (int i=1;i<n;i++){\n\t\tint x=read(),y=read();\n\t\tmade(x,y);made(y,x);\n\t}\n\tfor (int i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tll z=read();\n\t\tif (y!=x) Q[x].push_back(make_pair(y,z));\n\t}\n}\ninline void doit(){\t\n\tANS=seg[0].x=inf;\n\tdfs2(1,0);\n}\ninline void outit(){\n\tif (n==1) puts(\"0\");\n\telse cout<<(ANS>=inf-100000?-1:ANS);\n}\nsigned main(){\n\tinit();\n\tdoit();\n\toutit();\n\treturn 0;\n} \n```\n",
        "postTime": 1590142103,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF671D \u3010Roads in Yusland\u3011"
    }
]