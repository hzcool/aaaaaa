[
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/1076/problem/G) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1076G)\n\n\u4e00\u9053 hot tea\u2026\u2026\u542c\u8bb2\u89e3\u65f6\u534a\u61c2\u4e0d\u61c2~~\u56e0\u4e3a\u4e0d\u77e5\u9053\u9898\u76ee\u610f\u601d~~\uff0c\u6700\u540e\u7ec8\u7a76\u8fd8\u662f\u7422\u78e8\u51fa\u6765\u4e86\uff08\n\n\u9996\u5148\u6ce8\u610f\u5230\u5bf9\u4e8e\u6bcf\u4e2a $a_i$\uff0c\u5b83\u5177\u4f53\u662f\u4ec0\u4e48\u5e76\u4e0d\u91cd\u8981\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5b83\u7684**\u5947\u5076\u6027**\uff0c\u56e0\u4e3a\u6bcf\u6b21\u5230\u8fbe\u4e00\u4e2a\u70b9\u540e\uff0c\u5982\u679c\u540e\u624b\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u90a3\u4e48\u5982\u679c\u5148\u624b\u539f\u5730\u8e0f\u6b65\uff0c\u90a3\u4e48\u540e\u624b\u5b8c\u5168\u53ef\u4ee5\u91cd\u590d\u5148\u624b\u7684\u64cd\u4f5c\u76f4\u5230 $a_i\\lt 2$ \u4e3a\u6b62\uff0c\u5982\u679c\u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565\u5219\u53cd\u8fc7\u6765\u3002\u7531\u4e8e\u6bcf\u6b21\u8d70\u5230\u4e00\u4e2a\u70b9\u65f6\u5019\u90fd\u8981\u4ee4 $a_i$ \u51cf $1$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ee4 $a_i\\leftarrow (a_i-1)\\bmod 2$\uff0c\u8fd9\u6837\u6e38\u620f\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff0c\u6709 $n$ \u4e2a $[0,1]$ \u4e2d\u7684\u6574\u6570 $a_1,a_2,\\cdots,a_n$\uff0c\u521d\u59cb\u6709\u4e00\u4e2a\u68cb\u5b50\u5728 $a_1$ \u5904\uff0c\u4e24\u4e2a\u4eba\u8f6e\u6d41\u64cd\u4f5c\uff0c\u6bcf\u6b21\u4e00\u4e2a\u4eba\u53ef\u4ee5\u5c06\u68cb\u5b50\u79fb\u5230 $[i+1,\\min(i+m,n)]$ \u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u6216\u8005\u5982\u679c $a_i=1$\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u68cb\u5b50\u505c\u7559\u5728\u539f\u5730\u5e76\u4ee4 $a_i=0$\uff0c\u4e0d\u53ef\u4ee5\u64cd\u4f5c\u8005\u8f93\uff0c\u95ee\u6700\u7ec8\u8c01 win\u3002\n\n\u8003\u8651\u66b4\u529b $dp$\uff0c$dp_{i,j}$ \u4e3a\u5f53\u524d\u68cb\u5b50\u5728 $i$\uff0c$a_i=j$ \u7684\u8f93\u8d62\u72b6\u6001\uff0c$0$ \u8868\u793a\u5148\u624b\u5fc5\u8f93\uff0c$1$ \u8868\u793a\u5148\u624b\u5fc5\u80dc\uff0c\u90a3\u4e48\u663e\u7136 $dp_{i,j}=1$ \u5f53\u4e14\u4ec5\u5f53 $\\exists k\\in[i+1,\\min(i+m,n)]$ \u6ee1\u8db3 $dp_{k,a_k}=0$\uff0c\u6216\u8005 $j=1$ \u4e14 $dp_{i,0}=0$\uff0c\u5426\u5219 $dp_{i,j}=0$\u3002\n\n\u8fd9\u6837\u66b4\u529b\u505a\u662f $\\mathcal O(nq)$ \u7684\uff0c\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u66b4\u529b\uff0c\u4ee5\u4e0b\u7b80\u8bb0 $dp_i=dp_{i,a_i}$\uff0c\u624b\u73a9\u4e00\u4e0b\u6837\u4f8b\u5c31\u4f1a\u53d1\u73b0\u4e00\u4e2a observation\uff0c\u90a3\u5c31\u662f\u5982\u679c $a_i=1$\uff0c\u90a3\u4e48\u5fc5\u6709 $dp_i=1$\uff0c\u56e0\u4e3a\u5982\u679c $[i+1,i+m]$ \u4e2d\u5b58\u5728\u5fc5\u8f93\u70b9\u90a3\u4e48\u79fb\u5230\u90a3\u4e2a\u5fc5\u8f93\u70b9\u5373\u53ef\uff0c\u5426\u5219 $dp_{i,0}=0$\uff0c\u539f\u5730\u8e0f\u6b65\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u7528\u5bf9\u4e8e $a_i=0$ \u68c0\u9a8c $[i+1,i+m]$ \u4e2d\u662f\u5426\u5b58\u5728\u5fc5\u8f93\u70b9\u5373\u53ef\u3002\u90a3\u4e48\u600e\u4e48\u68c0\u9a8c\u5462\uff1f\u6ce8\u610f\u5230\u8fd9\u9898\u7684 $m$ \u4ee4\u4eba\u51fa\u4e4e\u610f\u6599\u5730\u5c0f\uff0c$2^m$ \u4e0d\u8fc7 $32$\uff0c\u5e76\u4e14\u6d89\u53ca\u533a\u95f4\u64cd\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u60f3\u5230\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e2a\u4ec0\u4e48\u4e1c\u897f\u3002\u6211\u4eec\u8003\u8651\u5bf9\u5e8f\u5217 $a$ **\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u533a\u95f4 $[l,r]$ \u5f00\u4e00\u4e2a $2^m$ \u7684\u6570\u7ec4 $to$**\uff0c\u5176\u4e2d $to_S$ \u8868\u793a\u5982\u679c $r+1,r+2,\\cdots,r+m$ \u662f\u5426\u4e3a\u5fc5\u80dc\u70b9\u7684\u72b6\u6001\u4e3a $S$\uff08$0$\uff1a\u5fc5\u8f93\u70b9\uff1b$1$\uff1a\u5fc5\u80dc\u70b9\uff09\uff0c\u90a3\u4e48 $l,l+1,\\cdots,l+m-1$ \u662f\u5426\u4e3a\u5fc5\u8f93\u70b9\u7684\u72b6\u6001\u662f\u591a\u5c11\u3002\u8fd9\u6837\u663e\u7136\u53ef\u4ee5\u5728 $\\mathcal O(2^m)$ \u7684\u65f6\u95f4\u5185\u5408\u5e76 $[l,mid],[mid+1,r]$ \u4e24\u4e2a\u8282\u70b9\u4e0a\u7684\u4fe1\u606f\uff0c\u521d\u59cb\u72b6\u6001\uff1a\u82e5 $a_i=1$\uff0c\u90a3\u4e48 $to_S=(2S+1)\\&(2^m-1)$\uff0c\u5176\u4e2d $\\&$ \u4e3a\u6309\u4f4d\u4e0e\uff0c\u5426\u5219\u5982\u679c $S=2^m-1$ \u90a3\u4e48 $to_S=2^m-2$\uff0c\u5426\u5219 $to_S$ \u4e5f\u7b49\u4e8e $(2S+1)\\&(2^m-1)$\u3002\u6700\u7ec8\u6c42\u7b54\u6848\u5c31\u5c06\u67e5\u8be2\u533a\u95f4\u62c6\u5206\u4e00\u4e0b\u3001\u5408\u5e76\u4e00\u4e0b\uff0c\u5982\u679c\u67e5\u8be2\u5f97\u5230\u7684 $to_0$ \u7684\u7b2c\u4e00\u4f4d\u4e3a $0$\uff0c\u90a3\u4e48\u7b54\u6848\u662f $2$\uff0c\u5426\u5219\u7b54\u6848\u662f $1$\u3002\u81f3\u4e8e\u90a3\u4e2a\u533a\u95f4\u52a0\u2026\u2026\u663e\u7136\u5982\u679c $x$ \u662f\u5076\u6570\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u4e0d\u7528\u5173\u5b83\uff0c\u5426\u5219\u76f8\u5f53\u4e8e\u7ffb\u8f6c\u4e00\u4e2a\u533a\u95f4\u7684 $a$\uff08$0\\to 1,1\\to 0$\uff09\uff0c\u6211\u4eec\u5c31\u8bb0 $b_i=2-a_i$\uff0c\u989d\u5916\u7ef4\u62a4\u4e00\u4e0b $b$ \u6570\u7ec4\u7684\u80dc\u8d1f\u60c5\u51b5\uff0c\u8bb0\u4f5c $to'$\uff0c\u7ffb\u8f6c\u4e00\u6574\u4e2a\u533a\u95f4\u65f6\u5c31\u76f4\u63a5\u4ea4\u6362\u5b83\u7684 $to$ \u548c $to'$ \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $2^mn\\log n$\uff0c\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u5f53\u7136\u8fd8\u6709\u6bd4\u6b63\u89e3\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\uff0c\u5176\u5b9e\u53ea\u8981\u52a0\u4e00\u4e2a\u975e\u5e38 simple \u7684 optimization \u5373\u53ef\uff0c\u6ce8\u610f\u5230\u4e0a\u9762\u7684\u505a\u6cd5\u4e2d\u8bb0\u5f55\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u72b6\u6001\uff0c\u8d39\u65f6\u8d39\u529b\uff0c\u800c\u5176\u5b9e\u6211\u4eec\u53ea\u5173\u5fc3\u5b83\u7b2c\u4e00\u4e2a $0$ \u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06 $to_i$ \u7684\u5b9a\u4e49\u4fee\u6539\u4e3a\uff1a\u5982\u679c\u5728 $r$ \u53f3\u8fb9\u79bb $r$ \u6700\u8fd1\u7684\u5fc5\u8f93\u70b9\u4f4d\u7f6e\u4e3a $r+i$\uff0c\u90a3\u4e48\u5728 $l-1$ \u53f3\u8fb9\u79bb $l-1$ \u6700\u8fd1\u7684\u5fc5\u8f93\u70b9\u4f4d\u7f6e\u4e3a $l-1+to_i$\uff0c\u5982\u679c\u8be5\u4f4d\u7f6e $>l-1+m$ \u90a3\u4e48 $to_i=m+1$\uff0c\u663e\u7136\u5728\u8fd9\u79cd\u5b9a\u4e49\u4e0b\u6211\u4eec\u53ef\u4ee5 $\\mathcal O(m)$ \u5730\u5408\u5e76\u5e8f\u5217\u4fe1\u606f\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86 $mn\\log n$\u3002\n\n```cpp\nconst int MAXN=2e5;\nconst int MAXM=5;\nint n,m,qu;ll a[MAXN+5];\nstruct data{\n\tint a[MAXM+3];\n\tdata(){memset(a,0,sizeof(a));}\n\tfriend data operator +(data x,data y){\n\t\tdata res;\n\t\tfor(int i=1;i<=m+1;i++) res.a[i]=y.a[x.a[i]];\n\t\treturn res;\n\t}\n};\nstruct node{int l,r,rev;data v[2];} s[MAXN*4+5];\nvoid pushup(int k){\n\ts[k].v[0]=s[k<<1|1].v[0]+s[k<<1].v[0];\n\ts[k].v[1]=s[k<<1|1].v[1]+s[k<<1].v[1];\n}\nvoid build(int k,int l,int r){\n\ts[k].l=l;s[k].r=r;\n\tif(l==r){\n\t\tfor(int i=1;i<=m;i++){\n\t\t\ts[k].v[a[l]].a[i]=s[k].v[a[l]^1].a[i]=i+1;\n\t\t} s[k].v[a[l]].a[m+1]=1;s[k].v[a[l]^1].a[m+1]=m+1;return;\n\t} int mid=l+r>>1;\n\tbuild(k<<1,l,mid);build(k<<1|1,mid+1,r);\n\tpushup(k);\n}\nvoid pushdown(int k){\n\tif(s[k].rev){\n\t\tswap(s[k<<1].v[0],s[k<<1].v[1]);s[k<<1].rev^=1;\n\t\tswap(s[k<<1|1].v[0],s[k<<1|1].v[1]);s[k<<1|1].rev^=1;\n\t\ts[k].rev=0;\n\t}\n}\nvoid flip(int k,int l,int r){\n\tif(l<=s[k].l&&s[k].r<=r) return swap(s[k].v[0],s[k].v[1]),s[k].rev^=1,void();\n\tint mid=(pushdown(k),s[k].l+s[k].r>>1);\n\tif(r<=mid) flip(k<<1,l,r);else if(l>mid) flip(k<<1|1,l,r);\n\telse flip(k<<1,l,mid),flip(k<<1|1,mid+1,r);pushup(k);\n}\ndata query(int k,int l,int r){\n\tif(l<=s[k].l&&s[k].r<=r) return s[k].v[0];\n\tint mid=(pushdown(k),s[k].l+s[k].r>>1);\n\tif(r<=mid) return query(k<<1,l,r);\n\telse if(l>mid) return query(k<<1|1,l,r);\n\telse return query(k<<1|1,mid+1,r)+query(k<<1,l,mid);\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&qu);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]),a[i]=(~a[i])&1;\n\tbuild(1,1,n);\n\twhile(qu--){\n\t\tint opt;scanf(\"%d\",&opt);\n\t\tif(opt==1){\n\t\t\tint l,r;ll x;scanf(\"%d%d%lld\",&l,&r,&x);\n\t\t\tif(x&1) flip(1,l,r);\n\t\t} else {\n\t\t\tint l,r;scanf(\"%d%d\",&l,&r);data t=query(1,l,r);\n\t\t\tprintf(\"%d\\n\",1+(t.a[m+1]==1));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1626446801,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1076G Array Game"
    },
    {
        "content": "~~\u964d\u667a\u597d\u9898\u2026\u2026~~\n\n\u9996\u5148\u8981\u6ce8\u610f\u5230\u8fd9\u4e2a\u6e38\u620f\u7684\u5173\u952e\u662f\u5b83\u53ef\u4ee5\u539f\u5730\u8df3\uff0c\u4f46\u662f\u4e00\u65e6\u8df3\u51fa\u53bb\u4e4b\u540e\u5c31\u4e0d\u80fd\u518d\u56de\u6765\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u7b2c\u4e00\u6b21\u8df3\u5230\u67d0\u4e2a\u683c\u5b50\u7684\u65f6\u5019\u5148\u624b\u5fc5\u8d25\u8fd8\u662f\u5fc5\u80dc\u5373\u53ef\u3002\u8fd9\u4e2a\u5012\u7740$dp$\uff0c\u5982\u679c$[i+1,i+m]$\u91cc\u9762\u6709\u7684\u4f4d\u7f6e\u662f\u5148\u624b\u5fc5\u8d25\u7684\u8bdd\u90a3\u4e48\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u5148\u624b\u7684\u4eba\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u90a3\u4e2a\u4f4d\u7f6e\u8ba9\u540e\u624b\u8d25\u6389\uff0c\u5426\u5219\u9700\u8981\u5728\u5f53\u524d\u4f4d\u7f6e\u6d88\u8017\u6b65\u6570\uff0c\u4f46\u662f\u5982\u679c\u5bf9\u65b9\u8fd8\u80fd\u8d70\u7684\u8bdd\u5bf9\u65b9\u4e5f\u5fc5\u987b\u5728\u8fd9\u91cc\u6d88\u8017\u6b65\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u53ea\u4e0e\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5947\u5076\u6027\u6709\u5173\u3002\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u5f53\u524d\u662f\u5947\u7684\uff0c\u90a3\u4e48\u5148\u624b\u7684\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u8017\u5230\u53ea\u5269\u4e00\u6b65\u7684\u60c5\u51b5\uff0c\u518d\u8017\u4e00\u6b65\u540e\u624b\u5c31\u5fc5\u8d25\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u77e5\u9053\u4e86\uff0c\uff08\u6ce8\u610f\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u4f1a\u628a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e-1\u6240\u4ee5\u8981\u628a\u5947\u5076\u6027\u53cd\u8fc7\u6765\uff09\u5982\u679c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5076\u6570\u7684\u8bdd\u90a3\u4e48\u5148\u624b\u5fc5\u80dc\uff0c\u5426\u5219\u9664\u975e\u540e\u9762$m$\u6b65\u5185\u6709\u5148\u624b\u5fc5\u8d25\u90a3\u4e48\u5fc5\u80dc\uff0c\u5426\u5219\u5fc5\u8d25\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u7ef4\u62a4\uff0c\u8fd9\u663e\u7136\u5f97$O(2^m)$\u8bb0\u5f55\u540e\u9762$m$\u6b65\u7684\u8f93\u8d62\u72b6\u6001\uff0c\u6211\u5f00\u59cb\u7684\u65f6\u5019sb\u4e86\u8fd8\u4ee5\u4e3a\u662f\u8981\u7ef4\u62a4\u4e00\u4e2a$2^m*2^m$\u7684\u77e9\u9635\u6765$ddp$\uff0c\u5176\u5b9e\u8fd9\u4e0d\u662f\u77e9\u9635\u2026\u2026\u8fd9\u662f\u4e00\u4e2a\u53d8\u6362\uff0c\u5c31\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u76f8\u5f53\u4e8e\u4e00\u4e2a\u53d8\u6362$f(S)$\u8868\u793a\u5f53$[i+1,i+m]$\u7684\u72b6\u6001\u662f$S$\u7684\u65f6\u5019$[i,i-1+m]$\u7684\u72b6\u6001\uff0c\u8fd9\u4e1c\u897f\u663e\u7136\u6709\u7ed3\u5408\u5f8b\uff0c\u8fd0\u7b97\u662f$O(2^m)$\u7684\uff0c\u90a3\u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u533a\u95f4\u7684\u53d8\u6362\u5373\u53ef\u3002\u533a\u95f4\u52a0\u7684\u65f6\u5019\u5076\u6570\u6ca1\u7528\uff0c\u5947\u6570\u76f8\u5f53\u4e8e\u533a\u95f4\u53cd\u8f6c\u5947\u5076\u6027\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u53cd\u7684\u53d8\u6362\u7136\u540e\u4fee\u6539\u7684\u65f6\u5019\u4ea4\u6362\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u53e6\u5916\u6211\u4eec\u6c42\u7684\u76ee\u6807\u5e94\u8be5\u662f$f(11111111\\cdots)$\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u8df3\u51fa\u8fd9\u4e2a\u533a\u95f4\uff0c\u800c\u53ea\u6709\u5f53\u540e\u9762\u67090\u7684\u65f6\u5019\u624d\u80fd\u8df3\u51fa\u53bb\uff0c\u6240\u4ee5\u628a\u533a\u95f4\u5916\u7684\u90e8\u5206\u90fd\u8bbe\u4e3a1\u5c31\u884c\u4e86\u3002~~\u6211\u8fd8\u88ab\u8fd9\u4e2a\u5751\u4e86\u2026\u2026~~\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define ll long long\n#define ls(_o) (_o << 1)\n#define rs(_o) ((_o << 1) | 1)\nusing namespace std;\nnamespace ywy {\n\tinline ll get() {\n\t    ll n = 0;\n\t    char c;\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            break;\n\t        if (c == '-')\n\t            goto s;\n\t    }\n\t    n = c - '0';\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 + c - '0';\n\t        else\n\t            return (n);\n\t    }\n\ts:\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 - c + '0';\n\t        else\n\t            return (n);\n\t    }\n\t}\n\tint m;\n\ttypedef struct _n {\n\t    int f[33];\n\t    _n() { memset(f, 0, sizeof(f)); }\n\t    friend _n operator*(const _n &a, const _n &b) {\n\t        _n c;\n\t        for (register int i = 0; i < (1 << m); i++) c.f[i] = b.f[a.f[i]];\n\t        return (c);\n\t    }\n\t} node;\n\tnode data[1000001], fan[1000001];\n\tll ints[200001];\n\tunsigned char bj[1000001];\n\tnode dk0, dk1;\n\tinline void up(int tree) {\n\t    data[tree] = data[rs(tree)] * data[ls(tree)];\n\t    fan[tree] = fan[rs(tree)] * fan[ls(tree)];\n\t}\n\tinline void down(int tree) {\n\t    if (!bj[tree])\n\t        return;\n\t    bj[tree] = 0;\n\t    bj[ls(tree)] ^= 1;\n\t    bj[rs(tree)] ^= 1;\n\t    swap(data[ls(tree)], fan[ls(tree)]);\n\t    swap(data[rs(tree)], fan[rs(tree)]);\n\t}\n\tvoid build(int l, int r, int tree) {\n\t    if (l == r) {\n\t        if (ints[l] & 1)\n\t            data[tree] = dk1, fan[tree] = dk0;\n\t        else\n\t            data[tree] = dk0, fan[tree] = dk1;\n\t        return;\n\t    }\n\t    int mid = (l + r) >> 1;\n\t    build(l, mid, ls(tree));\n\t    build(mid + 1, r, rs(tree));\n\t    up(tree);\n\t}\n\tvoid fz(int rl, int rr, int l, int r, int tree) {\n\t    if (rl == l && rr == r) {\n\t        swap(fan[tree], data[tree]);\n\t        bj[tree] ^= 1;\n\t        return;\n\t    }\n\t    int mid = (l + r) >> 1;\n\t    down(tree);\n\t    if (rl > mid)\n\t        fz(rl, rr, mid + 1, r, rs(tree));\n\t    else {\n\t        if (rr <= mid)\n\t            fz(rl, rr, l, mid, ls(tree));\n\t        else {\n\t            fz(rl, mid, l, mid, ls(tree));\n\t            fz(mid + 1, rr, mid + 1, r, rs(tree));\n\t        }\n\t    }\n\t    up(tree);\n\t}\n\tnode query(int rl, int rr, int l, int r, int tree) {\n\t    if (rl == l && rr == r)\n\t        return (data[tree]);\n\t    int mid = (l + r) >> 1;\n\t    down(tree);\n\t    if (rl > mid)\n\t        return (query(rl, rr, mid + 1, r, rs(tree)));\n\t    if (rr <= mid)\n\t        return (query(rl, rr, l, mid, ls(tree)));\n\t    return (query(mid + 1, rr, mid + 1, r, rs(tree)) * query(rl, mid, l, mid, ls(tree)));\n\t}\n\tvoid ywymain() {\n\t    int n = get();\n\t    m = get();\n\t    int q = get();\n\t    for (register int i = 0; i < (1 << m); i++) {\n\t        dk0.f[i] = (i >> 1) | (1 << (m - 1));\n\t        if (i == (1 << m) - 1)\n\t            dk1.f[i] = i >> 1;\n\t        else\n\t            dk1.f[i] = (i >> 1) | (1 << (m - 1));\n\t    }\n\t    for (register int i = 1; i <= n; i++) ints[i] = get();\n\t    build(1, n, 1);\n\t    while (q) {\n\t        q--;\n\t        int op = get();\n\t        if (op == 1) {\n\t            int l = get(), r = get();\n\t            ll d = get();\n\t            if (!(d & 1))\n\t                continue;\n\t            fz(l, r, 1, n, 1);\n\t        }\n\t        if (op == 2) {\n\t            int l = get(), r = get();\n\t            node cjr = query(l, r, 1, n, 1);\n\t            if (cjr.f[(1 << m) - 1] & (1 << (m - 1)))\n\t                printf(\"1\\n\");\n\t            else\n\t                printf(\"2\\n\");\n\t        }\n\t    }\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1558518577,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1076G \u3010Array Game\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1076G)\n\n\u5148\u601d\u8003\u5982\u679c\u6211\u4eec\u53ea\u67e5\u8be2 $[1,n]$ \u600e\u4e48\u505a\uff1f\n\n\u5bb9\u6613\u60f3\u5230 $dp_i$ \u8868\u793a\u8df3\u5230\u7b2c $i$ \u4e2a\u683c\u5b50\uff0c\u662f\u5148\u624b\u5fc5\u80dc\u8fd8\u662f\u5148\u624b\u5fc5\u8d25\u7684\u3002\n\n\u663e\u7136\u53ef\u4ee5\u5012\u8fc7\u6765 ```dp```\uff1a\n- \u5f53 $a_i\\equiv1\\pmod 2$ \u65f6\uff0c$dp_i=1$\n\n\u56e0\u4e3a\u5982\u679c\u8df3\u5230\u540e\u9762 $m$ \u4e2a\u683c\u5b50\u90fd\u662f\u5148\u624b\u5fc5\u80dc\u7684\u8bdd\uff0c\u90a3\u4e48\u8c01\u8df3\u51fa\u53bb\u8c01\u8f93\uff0c\u5148\u624b\u53ef\u4ee5\u9009\u62e9\u5728 $i$ \u8fd9\u4e2a\u683c\u5b50\u4e00\u76f4\u8df3\uff0c\u6700\u7ec8\u540e\u624b\u4e00\u5b9a\u8981\u8df3\u51fa\u53bb\n  \n\u5982\u679c\u6709\u4e00\u4e2a\u5148\u624b\u5fc5\u8d25\uff0c\u90a3\u76f4\u63a5\u8df3\u8fc7\u53bb\u5373\u53ef\u3002\n\n- \u5f53 $a_i\\equiv0\\pmod 2$ \u65f6\uff0c$dp_i$ \u53d6\u51b3\u4e8e\u4e4b\u540e\u7684 $m$ \u4e2a\u683c\u5b50\u4e2d\u6709\u6ca1\u6709\u5148\u624b\u5fc5\u8d25\u6001\uff0c\u6709 $=1$\uff0c\u6ca1\u6709 $=2$\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\times m\\times q)$ \u7684\u4f18\u79c0\u505a\u6cd5\uff0c\u800c\u4e14\u6211\u4eec\u53d1\u73b0\uff0c$dp_i$ \u81f3\u4e8e $a_i$ \u7684\u5947\u5076\u6027\u6709\u5173\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u7531\u4e8e\u672c\u9898\u5e26\u533a\u95f4\u4fee\u6539\uff0c\u4e0d\u96be\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u53d1\u73b0\u672c\u9898\u7684 $m$ \u975e\u5e38\u5c0f\uff0c\u8003\u8651\u5728\u8fd9\u4e0a\u9762\u4e0b\u529f\u592b\u3002\n\n\u7531\u4e8e $dp_i$ \u7684\u503c\u53ea\u53ef\u80fd\u662f $1$ \u6216 $0$\uff0c$m$ \u53c8\u5f88\u5c0f\uff0c\u8003\u8651\u628a\u5bf9\u533a\u95f4\u6709\u7528\u7684 $dp$ \u503c\u72b6\u6001\u538b\u7f29\u4e0b\u6765\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u533a\u95f4\uff0c\u8bb0\u5f55\u5982\u679c $[r+1,r+m]$ \u7684 $dp$ \u503c\u72b6\u6001\u4e3a $S$\uff0c\u90a3\u4e48\u6211\u4eec\u8fd9\u4e2a\u533a\u95f4\u7684 $[l,l+m-1]$ \u7684 $dp$ \u503c\u7684\u72b6\u6001\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\n\n\u8fd9\u662f\u5f88\u597d\u5408\u5e76\u7684\uff0c\u5177\u4f53\u89c1\u4e4b\u540e\u7684\u4ee3\u7801\u3002\n\n\u7136\u540e\u8003\u8651\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u533a\u95f4\u52a0\u5076\u6570\u80af\u5b9a\u662f\u6ca1\u6709\u7528\u7684\uff0c\u4e0d\u6539\u53d8 $a_i$ \u7684\u5947\u5076\u6027\uff0c\u7136\u800c\u52a0\u5947\u6570\u5c31\u6709\u7528\u4e86\uff0c\u7b49\u4ef7\u4e8e\u533a\u95f4\u7ffb\u8f6c\u5947\u5076\u6027\uff0c\u4e8e\u662f\u6211\u4eec\u518d\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5904\u7406\u5982\u679c\u533a\u95f4\u5947\u5076\u6027\u7ffb\u8f6c\u4e86\u7684\u4e0a\u8ff0\u5185\u5bb9\u3002\n\n\u7ee7\u7eed\u601d\u8003\uff0c\u53d1\u73b0\u8bb8\u591a\u7684 $S$ \u662f\u6ca1\u6709\u7528\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 $S$ \u4e2d\u7684\u7b2c\u4e00\u4e2a $0$ \u5728\u54ea\u5373\u53ef\uff08\u6700\u4f18\u80af\u5b9a\u8df3\u5230\u4ed6\uff09\uff0c\u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(qm\\log n)$\u3002\n\n$\\texttt{AC CODE}$\n\n```cpp\n#include<bits/stdc++.h>\nconst int N=200010;\ninline int read()\n{\n\tint x=0,y=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') y=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn x*y;\n}\nint TMPS[N],CNT;\ninline int write(int x)\n{\n\tCNT=0;\n\tif(x<0) x=-x,putchar('-');\n\twhile(x) TMPS[++CNT]=x%10+'0',x/=10;\n\tfor(int i=CNT;i>=1;i--) putchar(TMPS[i]);\n}\nint n,m,q,a[N];\nstruct node{\n\tint f[10];//\u8bb0\u5f55[r+1,r+m]\u7b2c\u4e00\u4e2a0\u5728i\u65f6\uff0c[l,l+m-1]\u7b2c\u4e00\u4e2a0\u5728\u54ea\u3002 \n\tnode operator +(const node &b)const{\n\t\tnode res;\n\t\tfor(int i=1;i<=m+1;i++) res.f[i]=f[b.f[i]];\n\t\treturn res;\n\t}\n};\nstruct Segment{\n\tint tag;//\u533a\u95f4\u7ffb\u8f6ctag \n\tnode dp[2];//\u4e24\u4e2a\u7248\u672c\uff0cdp[0]\u4e3a\u7ffb\u8f6c\u540e\u7248\u672c\uff0cdp[1]\u4e3a\u8981\u67e5\u8be2\u7684\u7248\u672c\n}tr[N<<2];\ninline void pushup(int o)\n{\n\ttr[o].dp[1]=tr[o<<1].dp[1]+tr[o<<1|1].dp[1];\n\ttr[o].dp[0]=tr[o<<1].dp[0]+tr[o<<1|1].dp[0];\n}\ninline void pushdown(int o)\n{\n\tif(tr[o].tag)\n\t{\n\t\tstd::swap(tr[o<<1].dp[1],tr[o<<1].dp[0]);\n\t\tstd::swap(tr[o<<1|1].dp[1],tr[o<<1|1].dp[0]);\n\t\ttr[o<<1].tag^=1,tr[o<<1|1].tag^=1;\n\t\ttr[o].tag=0;\n\t}\n}\nvoid build(int o,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tfor(int i=1;i<=m;i++) tr[o].dp[1].f[i]=tr[o].dp[0].f[i]=i+1;\n\t\t//[r+1,r+m]\u6ca1\u6709\u5fc5\u8d25\u6001\uff0c\u5982\u679ca[i]-1\u4e3a\u5947\u6570\u5fc5\u80dc\uff0c\u5426\u5219\u5fc5\u8d25\u3002 \n\t\tif(a[l]==1) tr[o].dp[1].f[m+1]=m+1,tr[o].dp[0].f[m+1]=1; \n\t\telse tr[o].dp[1].f[m+1]=1,tr[o].dp[0].f[m+1]=m+1;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(o<<1,l,mid),build(o<<1|1,mid+1,r),pushup(o); \n}\nint L,R;\nvoid update(int o,int l,int r)\n{\n\tif(L<=l&&r<=R) {tr[o].tag^=1,std::swap(tr[o].dp[0],tr[o].dp[1]);return;}\n\tint mid=l+r>>1;pushdown(o);\n\tif(mid>=L) update(o<<1,l,mid);\n\tif(mid<R) update(o<<1|1,mid+1,r);\n\tpushup(o); \n}\nnode query(int o,int l,int r)\n{\n\tif(L<=l&&r<=R) return tr[o].dp[1];\n\tint mid=l+r>>1;pushdown(o);\n\tif(mid<L) return query(o<<1|1,mid+1,r);\n\telse if(mid>=R) return query(o<<1,l,mid);\n\telse return query(o<<1,l,mid)+query(o<<1|1,mid+1,r);\n}\nsigned main()\n{\n\tn=read(),m=read(),q=read();\n\tfor(int i=1;i<=n;i++) a[i]=read(),a[i]=(a[i]&1)^1;//a[i]\u5373\u4e3a[i,i]\u7684\u80dc\u8d1f\n\tbuild(1,1,n);\n\tfor(int op,k;q--;)\n\t{\n\t\top=read(),L=read(),R=read();\n\t\tif(op==1)\n\t\t{\n\t\t\tk=read();\n\t\t\tif(k&1) update(1,1,n);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode tmp=query(1,1,n);\n\t\t\tprintf(\"%d\\n\",1+(tmp.f[m+1]==1));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1646136870,
        "uid": 254305,
        "name": "Marsrayd",
        "ccfLevel": 0,
        "title": "CF1076G \u9898\u89e3"
    },
    {
        "content": "\u867d\u7136\u662f\u4e2a *3000 \u7684\u9898\uff0c\u4f46\u611f\u89c9\u4e5f\u4e0d\u662f\u5f88 nb \u7684\u4e9a\u5b50\u55f7\uff08\n\n\u9996\u5148\u53d1\u73b0\u8fd9\u5b57\u91cc\u884c\u95f4\u90fd\u5199\u7740 ICG \u4e09\u4e2a\u5927\u5b57\uff0c\u611f\u89c9\u5f88\u8212\u670d\u3002\n\n\u53ef\u80fd\u7684\u72b6\u6001\u53ea\u6709\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a\u67d0\u4e2a\u540e\u7f00\u539f\u5c01\u4e0d\u52a8\uff0c\u7136\u540e\u8fd9\u4e2a\u540e\u7f00\u7684\u4e0a\u4e00\u4e2a\u4f4d\u7f6e $i$ \u7684\u503c\u968f\u4fbf\uff08$j\\in[0,a_i)$\uff09\uff0c\u8bbe\u5176 SG \u503c\u4e3a $s_{i,j}$\u3002\u8fd9\u4e2a\u9898\u4e0d\u6d89\u53ca ICG \u7684\u548c\uff0c\u53ea\u9700\u8981\u8003\u8651\u975e\u96f6\u6027\u3002\u8003\u8651\u8f6c\u79fb\uff0c\u663e\u7136 $s_{i,j}=\\bigvee\\limits_{k=i+1}^{i+m}\\lnot s_{k,a_k-1}\\lor\\lnot s_{i,j-1}$\uff0c\u540e\u9762\u4e00\u9879\u5982\u679c\u6ee1\u8db3 $j>0$ \u7684\u8bdd\u3002\u5bb9\u6613\u53d1\u73b0\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u628a $i$ \u4f5c\u9636\u6bb5\u7684\u8bdd\uff0c\u6bcf\u4e2a\u9636\u6bb5\u8fc7\u540e\u53ea\u53ef\u80fd\u5173\u5fc3 $s_{i,a_i-1}$\u3002\u8003\u8651\u53ea\u7b97\u8fd9\u4e2a\u4e1c\u897f\u3002\u5bb9\u6613\u53d1\u73b0\u9488\u5bf9\u67d0\u4e2a\u9636\u6bb5\uff0c\u82e5\u90a3\u4e2a bigvee \u91cc\u9762\u6709 1 \u7684\u8bdd\u80af\u5b9a\u662f 1 \u4e86\uff1b\u5426\u5219 $j=0\\sim a_i-1$ \u662f 0 1 0 1 \u8fd9\u6837\u6709\u5468\u671f\u6027\u7684\uff0c$s_{i,a_i-1}=1$ \u5f53\u4e14\u4ec5\u5f53 $a_i$ \u662f\u5076\u6570\u3002\u90a3\u4e48 $a_i$ \u53ea\u5173\u5fc3\u5947\u5076\u6027~~\uff0c\u597d\u5bb6\u4f19\u8fd9\u5e4c\u5b50\u6253\u5f97\u6f02\u4eae~~\u3002\n\n\u90a3\u8003\u8651\u66b4\u529b\u7b97\u6cd5\uff1a\u5c31\u4ece\u53f3\u5f80\u5de6\u5bf9 $t_i=s_{i,a_i-1}$ \u9012\u63a8\u5c31\u884c\u4e86\u3002\n\n\u5f88\u81ea\u7136\u7684\u60f3\u5230\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6700\u8fd1 $m$ \u4e2a\u4f4d\u7f6e\u7684 $t$ \u503c\u7684\u5411\u91cf\uff0c\u5982\u679c\u8fd9\u4e2a\u9012\u63a8\u5173\u7cfb\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u6709\u7ed3\u5408\u5f8b\u7684\u53d8\u6362\u90a3\u5c31\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u590d\u5408\u4e86\u3002\u9996\u5148\u60f3\u5230\u7684\u662f\u7ebf\u6027\u53d8\u6362\uff0c\u90a3\u8003\u8651\u80fd\u4e0d\u80fd\u5b9e\u73b0\u903b\u8f91\u6216\u7684\u8868\u8fbe\uff1f\u8fd9\u73a9\u610f $\\bmod 2$ \u610f\u4e49\u4e0b\uff0c\u53ea\u80fd\u8868\u793a\u5f02\u6216\uff0c\u90a3\u4e48\u6216\u80fd\u4e0d\u80fd\u7528\u5f02\u6216\u8868\u8fbe\u51fa\u6765\uff1f\u5f88\u9057\u61be\uff0c\u4e0d\u80fd\u3002\u4e00\u4e2a\u7b80\u77ed\u7684\u8bc1\u660e\u662f\uff0c\u5f02\u6216\u6ee1\u8db3\u4ea4\u6362\u5f8b\u7ed3\u5408\u5f8b\u6d88\u53bb\u5f8b\uff0c\u518d\u600e\u4e48\u7ec4\u5408\u90fd\u53ea\u80fd\u662f\u4e00\u5806\u4eba\u7684\u5f02\u6216\u518d\u9009\u62e9\u6027\u5730\u53d6\u53cd\u3002\n\n\u518d\u60f3\u60f3\u5c31\u53d1\u73b0 wsbl\u3002\u8fd9\u4e2a\u72b6\u6001\u6570\u8fd9\u4e48\u5c11\uff0c\u53ea\u6709 $2^m$\uff0c\u53ef\u4ee5\u66b4\u529b\u5b58\u554a\uff0c\u8fd9\u662f\u6700\u539f\u59cb\u7684\u53d8\u6362\u2014\u2014\u6570\u7ec4\u6620\u5c04\u554a\u3002\u3002\u3002\u3002\u3002\u90a3\u590d\u5408\u5c31\u53ef\u4ee5 trivial \u5730 $\\mathrm O(2^m)$\u3002\u7136\u540e\u533a\u95f4\u67e5\u8be2\u53ef\u4ee5\u7684\uff0c\u533a\u95f4\u4fee\u6539\u5c31\u6253\u61d2\u6807\u8bb0\u7684\u8bdd\u600e\u4e48\u8fc5\u901f\u533a\u95f4\u53d6\u53cd\u5462\uff0c\u5b9e\u65f6\u7ef4\u62a4\u4e00\u4e2a\u53cd\u7684\u590d\u5408\u505a\u5907\u7528\u7136\u540e\u53d6\u53cd\u7684\u65f6\u5019 swap \u5373\u53ef\u3002\u590d\u6742\u5ea6 $\\mathrm O(q2^m\\log n)$\uff0c\u6709\u70b9\u5371\u3002\u518d\u7a0d\u5fae\u60f3\u4e00\u4e0b\u53d1\u73b0\u5408\u6cd5\u72b6\u6001\u7684\u5411\u91cf\u91cc\u9762\u6700\u591a\u6709\u4e00\u4e2a $0$\uff0c\u90a3\u53ea\u6709 $m+1$ \u79cd\uff0c\u590d\u6742\u5ea6 $\\mathrm O(qm\\log n)$~~\uff08\u65e9\u5c31\u9884\u6599\u5230\u662f\u8fd9\u4e2a\u590d\u6742\u5ea6\uff09~~\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200010;\nint n,m,qu;\nbool a[N];\nstruct trans{\n\tint to[6];\n\tint &operator[](int x){return to[x];}\n\ttrans(){for(int i=0;i<6;i++)to[i]=i;}\n\tfriend trans operator*(trans x,trans y){\n\t\ttrans z;\n\t\tfor(int i=0;i<6;i++)z[i]=x[y[i]];\n\t\treturn z;\n\t}\n};\nstruct segtree{\n\tstruct node{trans t,t0;bool lz;}nd[N<<2];\n\t#define t(p) nd[p].t\n\t#define t0(p) nd[p].t0\n\t#define lz(p) nd[p].lz\n\tvoid sprup(int p){\n\t\tt(p)=t(p<<1)*t(p<<1|1);\n\t\tt0(p)=t0(p<<1)*t0(p<<1|1);\n\t}\n\tvoid bld(int l=1,int r=n,int p=1){\n\t\tlz(p)=0;\n\t\tif(l==r){\n\t\t\ttrans &t=t(p),&t0=t0(p);\n\t\t\tfor(int i=1;i<m;i++)t[i]=t0[i]=i+1;t[m]=t0[m]=0;\n\t\t\tt[0]=0,t0[0]=1;\n\t\t\tif(a[l])swap(t,t0);\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tbld(l,mid,p<<1),bld(mid+1,r,p<<1|1);\n\t\tsprup(p);\n\t}\n\tvoid init(){\n\t\tbld();\n\t}\n\tvoid sprdwn(int p){\n\t\tif(lz(p)){\n\t\t\tswap(t(p<<1),t0(p<<1)),lz(p<<1)^=1;\n\t\t\tswap(t(p<<1|1),t0(p<<1|1)),lz(p<<1|1)^=1;\n\t\t\tlz(p)=0;\n\t\t}\n\t}\n\tvoid flip(int l,int r,int p=1,int tl=1,int tr=n){\n\t\tif(l<=tl&&r>=tr)return swap(t(p),t0(p)),lz(p)^=1,void();\n\t\tsprdwn(p);\n\t\tint mid=tl+tr>>1;\n\t\tif(l<=mid)flip(l,r,p<<1,tl,mid);\n\t\tif(r>mid)flip(l,r,p<<1|1,mid+1,tr);\n\t\tsprup(p);\n\t}\n\ttrans ask(int l,int r,int p=1,int tl=1,int tr=n){\n\t\tif(l<=tl&&r>=tr)return t(p);\n\t\tsprdwn(p);\n\t\tint mid=tl+tr>>1;trans res;\n\t\tif(l<=mid)res=res*ask(l,r,p<<1,tl,mid);\n\t\tif(r>mid)res=res*ask(l,r,p<<1|1,mid+1,tr);\n\t\treturn res;\n\t}\n}segt;\nint main(){\n\tcin>>n>>m>>qu;\n\tfor(int i=1;i<=n;i++){\n\t\tlong long x;\n\t\tscanf(\"%lld\",&x);\n\t\ta[i]=x&1;\n\t}\n\tsegt.init();\n\twhile(qu--){\n\t\tint tp,l,r;\n\t\tscanf(\"%d%d%d\",&tp,&l,&r);\n\t\tif(tp==1){\n\t\t\tlong long x;\n\t\t\tscanf(\"%lld\",&x);\n\t\t\tif(!(x&1))continue;\n\t\t\tsegt.flip(l,r);\n\t\t}\n\t\telse printf(\"%d\\n\",segt.ask(l,r)[0]==1?2:1);\n\t}\n\treturn 0;\n}\n```\n\n# ",
        "postTime": 1627995141,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "cf1076g"
    },
    {
        "content": "### CF1076G Array Game\n\n\u624b\u63a8\u51fa\u5927\u534a\uff0c\u4e0d\u4f1a\u5b9e\u73b0\u3002\n\n\u8bb0\u5fc5\u80dc\u70b9\u8868\u793a\u8d70\u5230\u6b64\u70b9\u65f6\uff0c\u4e0b\u4e00\u624b\u5fc5\u80dc\uff1b\u5fc5\u8d25\u70b9\u540c\u7406\u3002\n\n\u6bcf\u4eba\u90fd\u60f3\u8981\u5bf9\u65b9\u8d70\u5230\u5fc5\u80dc\u70b9\u81ea\u5df1\u8d70\u5230\u5fc5\u8d25\u70b9\u3002\n\n\u6709\u4e00\u79cd\u60f3\u6cd5\u3002\n\n\u8bb0 $pre_i$ \u8868\u793a $[1,i]$ \u540e\u7f00\u7b2c\u4e00\u4e2a\u5947\u6570\u7684\u4f4d\u7f6e\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8be2\u95ee $[l,r]$\uff0c$pre_r$ \u4e3a\u5fc5\u8d25\u70b9\uff0c$[pre_r+1,r]$ \u4e3a\u5fc5\u80dc\u70b9\u3002\n\n\u7531\u4e8e\u6700\u591a\u53ef\u524d\u8fdb $m$ \u683c\uff0c\u90a3\u4e48 $[pre_r-1,pre_r-m]$ \u4e3a\u5fc5\u80dc\u70b9\u3002\n\n\u90a3\u4e48\u8f6c\u5316\u4e3a\u8c01\u5148\u8ba9 $a_{pre_r-m-1}$ \u4e3a $0$ \u8c01\u8d62\uff0c\u5373\u5982\u679c $pre_r-m-1$ \u4e3a\u5076\u683c\uff0c\u4e3a\u5fc5\u80dc\u70b9\uff0c\u5426\u5219\u4e3a\u5fc5\u8d25\u70b9\u3002\n\n\u5c31\u662f\u64cd\u4f5c $[l, pre_r-m-1]$ \u8c01\u5fc5\u80dc\u3002\n\n\u4f46\u662f\u8fd9\u6837\u6781\u5176\u96be\u4fee\u6539\uff0c\u8003\u8651\u6839\u636e\u4e0a\u8ff0\u542f\u53d1\u5fc5\u80dc\u6001\u5230\u5fc5\u8d25\u6001\u6216\u8005\u53cd\u8fc7\u6765\u7684\u8f6c\u79fb\u3002\n\n\u5076\u683c\u5fc5\u4e3a\u5fc5\u80dc\u70b9\uff0c\u56e0\u4e3a\u5982\u679c\u540e\u9762 $m$ \u683c\u6709\u5fc5\u8d25\u70b9\u53ef\u76f4\u63a5\u8fc7\u53bb\uff0c\u5426\u5219\u5168\u4e3a\u5fc5\u80dc\u70b9\u5c31\u5728\u539f\u5730\u4e0d\u52a8\uff0c\u8ba9\u5bf9\u624b\u5230\u5c06\u68cb\u79fb\u5230\u5fc5\u80dc\u70b9\u3002\n\n\u5947\u683c\u5fc5\u80dc\uff0c\u5f53\u4e14\u4ec5\u5f53\u53ef\u79fb\u5230\u5fc5\u8d25\uff0c\u663e\u7136\u6b64\u65f6\u4e0d\u52a8\u4e0d\u662f\u6700\u4f18\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5947\u5076\u6027\u53d8\u4e86\u3002\n\n\u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u70b9\u53ef\u79fb\u5230\u7684\u7b2c\u4e00\u4e2a\u5fc5\u8d25\u70b9\u7684\u4f4d\u7f6e\uff0c\u53ea\u6709 $m+1$ \u79cd\u4e0d\u540c\u53d6\u503c\u3002\n\n\u7136\u540e\u8003\u8651\u5206\u5757\uff0c\u8bb0\u5f55\u5728\u5757\u7684\u53f3\u7aef\u70b9\u7684\u9996\u4e2a\u5fc5\u8d25\u70b9\u8ddd\u79bb\u786e\u5b9a\u65f6\uff0c\u8d70\u5230\u5757\u7684\u5de6\u7aef\u70b9\u7684\u9996\u4e2a\u5fc5\u8d25\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u9884\u5904\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u503c\uff0c\u5904\u7406 $m+1$ \u79cd\u4e0d\u540c\u53d6\u503c\u5373\u53ef\u3002\n\n\u8003\u8651\u4fee\u6539\uff0c\u52a0\u5076\u6570\u4e0d\u6539\u53d8\u5947\u5076\u6027\uff0c\u52a0\u5947\u6570\u5219\u4e3a\u533a\u95f4\u7ffb\u8f6c\u3002\n\n\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e0b\u533a\u95f4\u7ffb\u8f6c\u540e\u7684\u7b54\u6848\u8986\u76d6\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u81f4\u662f $\\mathcal O(n\\sqrt n)$\uff0c\u5e26\u4e2a $m$ \u7684\u5c0f\u5e38\u6570\u3002\n\n```cpp\n#include <cstdio>\n\ntypedef long long ll;\n\n#define ha putchar(' ')\n#define he putchar('\\n')\n\ninline int read() {\n\tint x = 0;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9')\n\t\tc = getchar();\n\twhile (c >= '0' && c <= '9')\n\t\tx = (x << 3) + (x << 1) + (c ^ 48), c = getchar();\n\treturn x;\n}\n\n#define js(l, r, fail, tg, fl) for (int j = r; j >= l; --j) if ((fl ^ (!(a[j] ^ tg))) || fail <= m) fail++; else fail = 1;\n\ninline int min(int x, int y)\n{\n\treturn x < y ? x : y;\n}\n\nconst int _ = 2e5 + 10, BL = 50, S = _ / BL + 10;;\n\nint n, m, q, a[_], bel[_], L[S], R[S], f[2][S][7];\n\nbool rev[S];\n\nvoid build(int id) {\n\tfor (int i = 1; i <= m + 1; ++i) {\n\t\tf[0][id][i] = f[1][id][i] = i;\n\t\tjs(L[id], R[id], f[0][id][i], 0, 0);\n\t\tjs(L[id], R[id], f[1][id][i], 0, 1);\n\t\tf[0][id][i] = min(f[0][id][i], m + 1), f[1][id][i] = min(f[1][id][i], m + 1);\n\t}\n}\n\nsigned main() {\n\tn = read(), m = read(), q = read();\n\tfor (int i = 1; i <= n; ++i) a[i] = read() & 1ll, bel[i] = (i - 1) / BL + 1;\n\tfor (int i = 1; i <= bel[n]; ++i) L[i] = R[i - 1] + 1, R[i] = i * BL;\n\tR[bel[n]] = n;\n\tfor (int i = 1; i <= bel[n]; ++i) build(i);\n\tint opt, l, r, c;\n\twhile (q--) {\n\t\topt = read(), l = read(), r = read();\n\t\tif (opt == 1) {\n\t\t\tc = read() & 1ll;\n\t\t\tif (!c) continue;\n\t\t\tif (bel[l] == bel[r]) {\n\t\t\t\tfor (int i = l; i <= r; ++i) a[i] ^= 1;\n\t\t\t\tbuild(bel[l]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (int i = l; i <= R[bel[l]]; ++i) a[i] ^= 1;\n\t\t\tbuild(bel[l]);\n\t\t\tfor (int i = bel[l] + 1; i <= bel[r] - 1; ++i) rev[i] ^= 1;\n\t\t\tfor (int i = L[bel[r]]; i <= r; ++i) a[i] ^= 1;\n\t\t\tbuild(bel[r]);\n\t\t} else {\n\t\t\tint fail = m + 1;\n\t\t\tif (bel[l] == bel[r]) {\n\t\t\t\tjs(l, r, fail, rev[bel[l]], 0);\n\t\t\t\tputchar(fail == 1 ? '2' : '1'), he;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tjs(L[bel[r]], r, fail, rev[bel[r]], 0);\n\t\t\tfail = min(fail, m + 1);\n\t\t\tfor (int i = bel[r] - 1; i >= bel[l] + 1; --i)\n\t\t\t\tfail = f[rev[i]][i][fail];\n\t\t\tjs(l, R[bel[l]], fail, rev[bel[l]], 0);\n\t\t\tfail = min(fail, m + 1);\n\t\t\tputchar(fail == 1 ? '2' : '1'), he;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1660224259,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF1076G Array Game"
    },
    {
        "content": "\u5927\u5bb6\u5199\u7684\u90fd\u662f\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u6211\u4e2a\u4eba\u89c9\u5f97\u5b83\u6ca1\u6709\u5206\u5757\u597d\u5199\uff08\n\n> Observation 1.\u4e00\u4e2a\u683c\u5b50\u552f\u4e00\u6709\u7528\u7684\u4fe1\u606f\u5c31\u662f\u5176\u5947\u5076\u6027\u3002\n\n\u8fd9\u5f88\u663e\u7136\uff0c\u56e0\u4e3a\u65e0\u8bba\u54ea\u4e2a\u683c\u5b50\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u53cc\u65b9\u6765\u56de\u4e0b\u68cb\u6765\u4e0d\u65ad $-2$\u3002\n\n> Definition 1.\n>\n> \u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u683c\u5b50\u201c\u5fc5\u80dc\u201d\uff0c\u610f\u5473\u7740\u5728\u5bf9\u624b\u5c06\u68cb\u5b50\u79fb\u5230\u8be5\u683c\u5b50\u540e\uff0c\u73b0\u5728\u4e0b\u68cb\u7684\u4eba\u6709\u5fc5\u80dc\u7b56\u7565\u3002\n>\n> \u540c\u7406\u53ef\u4ee5\u5b9a\u4e49\u201d\u5fc5\u8d25\u201c\u3002\n>\n> \u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u683c\u5b50\u4e3a\u201d\u5076\u683c\u201c\uff0c\u610f\u5473\u7740\u5728\u5c06\u68cb\u5b50\u79fb\u5230\u8be5\u683c\u5b50\u524d\uff0c\u8be5\u683c\u5b50\u91cc\u9762\u7684\u6570\u662f\u5076\u6570\u3002\n>\n> \u540c\u7406\u53ef\u4ee5\u5b9a\u4e49\u201d\u5947\u683c\u201c\u3002\n\n> Observation 2.\n>\n> \u5076\u683c\u90fd\u4e3a\u5fc5\u80dc\u683c\uff0c\u5947\u683c\u5fc5\u80dc\u5f53\u4e14\u4ec5\u5f53\u5176\u4e4b\u540e $m$ \u683c\u4e2d\u5b58\u5728\u5fc5\u8d25\u683c\u3002\n\n\u5076\u683c\u5fc5\u80dc\uff0c\u56e0\u4e3a\u5982\u679c\u63a5\u4e0b\u6765 $m$ \u683c\u6709\u5fc5\u8d25\u6001\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u79fb\u8fc7\u53bb\uff0c\u800c\u5982\u679c\u63a5\u4e0b\u6765 $m$ \u683c\u5168\u4e3a\u5fc5\u80dc\u6001\u5219\u53ef\u4ee5\u7559\u5728\u539f\u5730\u4e0d\u52a8\uff08\u663e\u7136\uff0c\u8fd9\u603b\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a\u8fd9\u683c\u662f\u5076\u683c\uff09\uff0c\u8ba9\u5bf9\u624b\u628a\u68cb\u79fb\u5230\u5fc5\u80dc\u6001\u53bb\u3002\n\n\u5947\u683c\u5fc5\u80dc\u5f53\u4e14\u4ec5\u5f53\u53ef\u79fb\u5230\u5fc5\u8d25\uff0c\u56e0\u4e3a\u663e\u7136\u7559\u7740\u539f\u5730\u4e0d\u52a8\u4e0d\u662f\u5408\u9002\u7684\u9009\u62e9\uff08\u5bf9\u624b\u5b8c\u5168\u53ef\u4ee5\u7ee7\u7eed\u4e0d\u52a8\uff09\uff0c\u800c\u5982\u679c\u5f80\u540e\u79fb\u7684\u8bdd\u4e0d\u79fb\u5230\u5fc5\u8d25\u6001\u662f\u8d62\u4e0d\u4e86\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u5173\u5fc3\u8be5\u683c\u4e4b\u540e\u9996\u4e2a\u5fc5\u8d25\u683c\u7684\u4f4d\u7f6e\uff0c\u800c\u8fd9\u4e2a\u503c\u53ea\u6709 $m+1$ \u79cd\u4e0d\u540c\u53d6\u503c\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\u6bd4\u5982\u8bf4\u5c31\u7528\u5206\u5757\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\uff0c\u5982\u679c\u5728\u5757\u7684\u53f3\u7aef\u70b9\u5904\u9996\u4e2a\u5fc5\u8d25\u683c\u7684\u8ddd\u79bb\u786e\u5b9a\u7684\u8bdd\uff0c\u8d70\u5230\u5de6\u7aef\u70b9\u5904\u65f6\u9996\u4e2a\u5fc5\u8d25\u683c\u7684\u8ddd\u79bb\u662f\u4ec0\u4e48\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e $m+1$ \u79cd\u4e0d\u540c\u503c\u5168\u90e8\u5904\u7406\u4e00\u904d\u5373\u53ef\u3002\n\n\u73b0\u5728\u8003\u8651\u533a\u95f4\u52a0\u3002\u663e\u7136\u5982\u679c\u52a0\u5076\u6570\u4e0d\u4f1a\u6539\u53d8\u5947\u5076\u6027\uff0c\u52a0\u5947\u6570\u5219\u662f\u533a\u95f4\u53cd\u8f6c\u3002\n\n\u90a3\u4e48\u5c31\u5bf9\u6bcf\u4e2a\u5757\u5904\u7406\u51fa\u5176\u53cd\u8f6c\u4e0e\u5426\u65f6\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u5757\u957f\u53d6 $\\sqrt{\\dfrac{N}{4M}}=100$ \u53d6\u5f97\u6700\u4f18\u590d\u6742\u5ea6\u3002\n\n\u8dd1\u5f97\u98de\u5feb\uff0c2s\u4e0d\u5230\u5c31\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int BBB=100;\nint n,m,q,BLK[200100],lp[2010];\nint a[200100];\nint f[2][2010][12];//1-m+1:the first block that fails is i;\nbool rev[2010];\nint tmp[200100];\nvoid rebuild(int ip){\n\tfor(int i=1;i<=m+1;i++){\n\t\tf[0][ip][i]=i;\n\t\tfor(int j=lp[ip+1]-1;j>=lp[ip];j--){\n\t\t\tif(!a[j]||f[0][ip][i]<=m)f[0][ip][i]++;\n\t\t\telse f[0][ip][i]=1;\n\t\t}\n\t\tf[0][ip][i]=min(f[0][ip][i],m+1);\n\t\tf[1][ip][i]=i;\n\t\tfor(int j=lp[ip+1]-1;j>=lp[ip];j--){\n\t\t\tif(a[j]||f[1][ip][i]<=m)f[1][ip][i]++;\n\t\t\telse f[1][ip][i]=1;\n\t\t}\n\t\tf[1][ip][i]=min(f[1][ip][i],m+1);\n\t}\n}\nvoid read(int&x){\n\tx=0;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n}\nint main(){\n\tread(n),read(m),read(q);\n\tfor(int i=0;i<n;i++)read(a[i]),a[i]&=1,BLK[i]=i/BBB;\n\tlp[BLK[n]=BLK[n-1]+1]=n;\n\tfor(int i=0;i<BLK[n];i++)lp[i]=i*BBB;\n\tfor(int i=0;i<BLK[n];i++)rebuild(i); \n\tfor(int i=1,tp,l,r,x;i<=q;i++){\n\t\tread(tp),read(l),read(r),l--,r--;\n\t\tif(tp==1){\n\t\t\tread(x),x&=1;\n\t\t\tif(!x)continue;\n//\t\t\tprintf(\"TURN[%d,%d]\\n\",l,r);\n\t\t\tif(BLK[l]==BLK[r]){for(int j=l;j<=r;j++)a[j]^=1;rebuild(BLK[l]);continue;}\n\t\t\tfor(int j=BLK[l]+1;j<=BLK[r]-1;j++)rev[j]^=1;\n\t\t\tfor(int j=l;j<lp[BLK[l]+1];j++)a[j]^=1;rebuild(BLK[l]);\n\t\t\tfor(int j=lp[BLK[r]];j<=r;j++)a[j]^=1;rebuild(BLK[r]);\n\t\t}else{\n//\t\t\tprintf(\"ASK[%d,%d]\\n\",l,r);\n\t\t\tint fail=m+1;\n\t\t\tif(BLK[l]==BLK[r]){\n\t\t\t\tfor(int j=r;j>=l;j--){\n\t\t\t\t\tif(!(a[j]^rev[BLK[r]])||fail<=m)fail++;\n\t\t\t\t\telse fail=1;\n\t\t\t\t}\n\t\t\t\tputchar(fail==1?'2':'1'),putchar('\\n');\n\t\t\t\tcontinue;\n\t\t\t}\n//\t\t\tputs(\"IN\");\n\t\t\tfor(int j=r;j>=lp[BLK[r]];j--){\n\t\t\t\tif(!(a[j]^rev[BLK[r]])||fail<=m)fail++;\n\t\t\t\telse fail=1;\n\t\t\t}\n\t\t\tfail=min(fail,m+1);\n\t\t\tfor(int j=BLK[r]-1;j>=BLK[l]+1;j--)fail=f[rev[j]][j][fail];\n\t\t\tfor(int j=lp[BLK[l]+1]-1;j>=l;j--){\n\t\t\t\tif(!(a[j]^rev[BLK[l]])||fail<=m)fail++;\n\t\t\t\telse fail=1;\n\t\t\t}\n\t\t\tfail=min(fail,m+1);\n\t\t\tputchar(fail==1?'2':'1'),putchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n/*\n5 2 4\n1 2 3 4 5\n1 3 5 6\n2 2 5\n1 1 2 3\n2 1 5\n*/\n```\n\n",
        "postTime": 1626415928,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1076G\u3010Array Game\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u5230\u5f53\u524d\u6240\u5904\u7684\u4f4d\u7f6e\u68cb\u5b50\u6570\u4e3a\u5947\u6570\u65f6\u5148\u624b\u5fc5\u80dc\uff0c\u56e0\u4e3a\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u4e3a\u5148\u624b\u5fc5\u8d25\u65f6\uff0c\u5148\u624b\u53ef\u4ee5\u539f\u5730\u4e0d\u52a8\u8feb\u4f7f\u540e\u624b\u8df3\u51fa\u3002\u6240\u4ee5\u7b54\u6848\u53ea\u4e0e$[l,r]$\u533a\u95f4\u4e2d\u6570\u7684\u5947\u5076\u6027\u6709\u5173\u3002$1$\u64cd\u4f5c\u53ef\u4ee5\u770b\u6210\u533a\u95f4\u7ffb\u8f6c\u3002\n\n$ans[s]$\u8868\u793a$[r+1,r+m]$\u533a\u95f4\u80dc\u8d1f\u6001\u4e3a$s$\u65f6\uff0c$[l,l+m-1]$\u533a\u95f4\u7684\u80dc\u8d1f\u6001\u3002\u7528\u7ebf\u6bb5\u6811\u5206\u522b\u7ef4\u62a4\u5f53\u524d\u7684$ans$\u6570\u7ec4\u548c\u6574\u6bb5\u533a\u95f4\u7ffb\u8f6c\u540e\u7684$ans$\u6570\u7ec4\u3002\u89c2\u5bdf\u5230\u53ef\u80fd\u7684\u72b6\u6001$s$\u6700\u591a\u6709$m+1$\u79cd\uff08\u957f\u5ea6\u4e3a$m$\u7684\u533a\u95f4\u91cc\u6700\u591a\u6709\u4e00\u4e2a\u5148\u624b\u5fc5\u8d25\u6001\uff09\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\u4ee3\u7801\uff1a\n```\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cmath>\n#include<cstring>\n#define ll long long\n#define maxn 300005\n#define p 1000000007\n#define re(i,a,b) for(int i=a;i<=b;i++)\n#define for_edge(x) for(int i=head[x];i;i=e[i].nxt)\nusing namespace std;\ninline int read(){char c=getchar();int f=1;int ans = 0;while(c>'9'||c<'0'){if(c=='-')f=-f;c=getchar();}while(c<='9'&&c>='0'){ans =ans*10+c-'0';c=getchar();}return ans*f;}\n//______________________________________________________________________________________\nint n,m,q,N;\ninline int get_pre(int s1,int t)\n{\n\tre(w1,0,m-1)\n\t\tif( (s1&(1<<w1)) && ( w1+1>t  )  )\n\t\t\t\t\treturn w1+1;\n\treturn 0;\n}\nstruct ANS\n{\n\tint ans[6];\n\tint operator[](int x){return ans[x];}\n\tinline ANS merge(ANS x)\n\t{\n\t\tANS a;\n\t\tre(i,0,m)\n\t\t\ta.ans [i] =ans[x[i]];\n\t\treturn a;\n\t}\n}e;\nANS to[32];\nint s[maxn],ch[maxn];\ninline int get_type(int x)\n{\n\tint ans = 0;\n\tfor(;x;x-=x&-x)\n\t\tans ^= s[x];\n\treturn ans;\n}\ninline void flip_type(int x)\n{\n\tfor(;x<=n;x+=x&-x)\n\t\ts[x]^= 1;\n}\ninline int get_s(int l,int r,int L,int R)\n{\n\tint x = 0;\n\tre(i,l,r)\n\t\tx |= ( i>=L && i<=R && get_type(i)  )<< r-i;\n\t//printf(\"%d %d %d\\n\",L,R,x);\n\treturn x;\n}\nstruct node\n{\n\tint son[2],flip;ANS ans[2];\n}a[maxn*2];\ninline void rever(int x)\n{\n\tif(x)\n\t{\n\t\ta[x].flip ^=1;\n\t\tswap(a[x].ans [0],a[x].ans [1]);\n\t}\n}\ninline void pushdown(int x)\n{\n\tif(a[x].flip )\n\t{\n\t\trever(a[x].son [0]);\n\t\trever(a[x].son [1]);\n\t\ta[x].flip = 0;\n\t}\n}\ninline void pushup(int x)\n{\n\ta[x].ans [0] = a[ a[x].son [0] ].ans[0].merge( a[ a[x].son [1] ].ans[0]  );\n\ta[x].ans [1] = a[ a[x].son [0] ].ans[1].merge( a[ a[x].son [1] ].ans[1]  );\n}\n#define MID(l,r) ( (l-1)/m+1+r/m ) /2 *m\nint tot;\nvoid build(int&x,int l,int r)\n{\n\tx = ++tot;\n\t//printf(\"%d %d\\n\",l,r);\n\tif(r-l+1==m)\n\t{\n\t\tint s = get_s(l,r,l,r);\n\t\ta[x].ans[0] = to[s];\n\t\ta[x].ans[1] = to[N^s];\n\t\treturn;\n\t}\n\tint mid = MID(l,r)  ;\n\tbuild(a[x].son [0],l,mid);\n\tbuild(a[x].son [1],mid+1,r);\n\tpushup(x);\n}\nANS query(int x,int l,int r,int L,int R)\n{\n\tif(l>R||L>r) return e;\n\tif(l>=L&&r<=R) \n\t\treturn a[x].ans [0];\n\tif(r-l+1==m)\n\t\treturn to[ get_s(l,r,L,R) ];\n\tint mid = MID(l,r)  ;\n\tpushdown(x);\n\tANS ans = query(a[x].son [0],l,mid,L,R).merge( query(a[x].son [1],mid+1,r,L,R)  );\n\tpushup(x);\n\treturn ans;\n}\nvoid flip(int x,int l,int r,int L,int R)\n{\n\tif(l>R||L>r)\n\t\treturn ;\n\tif(l>=L&&r<=R)\n\t{\n\t\trever(x);\n\t\treturn ;\n\t} \n\tif(r-l+1==m)\n\t{\n\t\tint s = get_s(l,r,l,r);\n\t\ta[x].ans[0] = to[s];\n\t\ta[x].ans[1] = to[N^s];\n\t\treturn;\n\t}\n\tint mid = MID(l,r)  ;\n\tpushdown(x);\n\tflip(a[x].son [0],l,mid,L,R);\n\tflip(a[x].son [1],mid+1,r,L,R);\n\tpushup(x);\n}\ninline void debug()\n{\n//\tre(i,1,n)printf(\"%d \",get_type(i));printf(\"\\n\");\n\t/*re(i,0,N)\n\t\tre(j,0,m)\n\t\tprintf(\"%d %d %d\\n\",i,j,to[i][j])\t;*/\n}\nint main()\n{\n//\tfreopen(\"0.in\",\"r\",stdin);\n    n=read();m = read();q = read();N = (1<<m)-1;\n    re(i,1,n)\n    \tch[i] = read() &1;\n    n += m - n%m;\n    for(int i=n;i;i--)\n    \tch[i]^=ch[i-1];\n    \t\n    re(i,1,n)\n    {\n    \tif(ch[i])\n    \t\tflip_type(i);\n    }\n    re(i,0,N)\n    \tre(j,0,m)\n    \t\tto[i].ans [j] = get_pre(i,j);\n    re(i,0,m)\n    \te.ans [i] = i;\n    a[0].ans [0] = a[0].ans [1] = e;\n    int root ;\n    build(root,1,n);\n\twhile(q--)\n\t{\n\t\tint opt = read(), l = read() , r = read();\n\t\tif(opt==1 )\n\t\t{\n\t\t\tif(read()&1)\n\t\t\t{\n\t\t\t\tflip_type(l);flip_type(r+1);\n\t\t\t\tflip(root,1,n,l,r);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t printf(\"%d\\n\", 1+ (query(root,1,n,l,r)[0] -1 == (n-l)%m)   );\n\t}\n//\tdebug();\n    return 0;\n}\n\n```\n",
        "postTime": 1565339059,
        "uid": 118037,
        "name": "Yajnun",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1076G \u3010Array Game\u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u6ce8\u610f\u5230\u53ea\u9700\u8981\u5173\u6ce8\u5947\u5076\u6027\u3002\u53c8\u56e0\u4e3a\u6bcf\u5230\u4e00\u4e2a\u70b9\u90fd\u4f1a\u51cf\u53bb $1$\uff0c\u6240\u4ee5\u628a $a_i$ \u53d8\u6210 $(a_i - 1) \\mod 2$\n\n\u4ee4 $f_{i, j}$ \u8868\u793a\u5f53\u524d\u68cb\u5b50\u5728 $i$\uff0c$a_i = j$ \u65f6\u7684\u5148\u624b\u5fc5\u80dc\u7b56\u7565\u7684\u5b58\u5728\u72b6\u6001\n\n\u663e\u7136 $f_{i, j} = 1$ \u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u5728 $i + 1$ \u5230 $\\min(i + m, n)$ \u7684 $k$ \u6ee1\u8db3 $f_{k, a_k} = 0$ \u6216 $j = 1$ \u4e14 $f_{i, 0} = 0$\n\n\u8fd9\u4e2a\u66b4\u529b\u662f $O(nq)$ \u7684\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u8bb0 $f_i = f_{i, a_i}$\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c $a_i = 1$\uff0c\u5219 $f_i = 1$\u3002\n\n\u800c\u5f53 $a_i = 0$ \u65f6\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4ee5\u540e $m$ \u4e2a\u4f4d\u7f6e\u7684\u5fc5\u80dc\u72b6\u6001\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u6574\u6570\n\n\u7b2c $i$ \u4f4d\u8868\u793a\u4ee5\u540e $m$ \u4f4d\u72b6\u6001\u4e3a $i$ \u7684\u65f6\u5019\u7684\u5fc5\u80dc\u72b6\u6001\u3002\n\n\u81f3\u4e8e\u4fee\u6539\uff0c\u9664\u4e86\u7ef4\u62a4\u5f53\u524d\u72b6\u6001\u4e4b\u5916\u518d\u7ef4\u62a4\u4e00\u4e2a\u76f8\u53cd\u72b6\u6001\u7684\u5fc5\u80dc\u72b6\u6001\uff0c\u5982\u679c\u4e00\u4fee\u6539\u5c31\u76f4\u63a5\u4ea4\u6362\u5373\u53ef\n\n## \u4ee3\u7801\n\n```cpp\n\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#define lld long long\nusing namespace std;\nconst int N = 200010;\nconst int M = 8;\nint n, m, q;\nlld a[N];\nstruct _node {\n    int a[M];\n    _node() { memset(a, 0, sizeof(a)); }\n};\n_node operator + (const _node &x, const _node &y) {\n    _node ret;\n    for (int i = 1; i <= m + 1; ++ i)\n        ret.a[i] = y.a[x.a[i]];\n    return ret;\n}\nstruct node {\n    int l, r;\n    int rev;\n    _node v[2];\n} tr[N << 2];\ninline void pushup(int k) {\n    tr[k].v[0] = tr[k << 1 | 1].v[0] + tr[k << 1].v[0];\n    tr[k].v[1] = tr[k << 1 | 1].v[1] + tr[k << 1].v[1];\n}\ninline void build(int k, int l, int r) {\n    tr[k].l = l, tr[k].r = r;\n    if (l == r) {\n        for (int i = 1; i <= m; ++ i)\n            tr[k].v[a[l]].a[i] = tr[k].v[a[l] ^ 1].a[i] = i + 1;\n        tr[k].v[a[l]].a[m + 1] = 1;\n        tr[k].v[a[l] ^ 1].a[m + 1] = m + 1;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(k << 1, l, mid);\n    build(k << 1 | 1, mid + 1, r);\n    pushup(k);\n}\nvoid pushdown(int k){\n    if (tr[k].rev) {\n        swap(tr[k << 1].v[0], tr[k << 1].v[1]);\n        tr[k << 1].rev ^= 1;\n        swap(tr[k << 1 | 1].v[0], tr[k << 1 | 1].v[1]);\n        tr[k << 1 | 1].rev ^= 1;\n        tr[k].rev = 0;\n    }\n}\nvoid modify(int k, int l, int r) {\n//  printf(\"%d(%d %d) %d %d\\n\", k, tr[k].l, tr[k].r, l, r);\n    if (l <= tr[k].l && tr[k].r <= r) {\n        swap(tr[k].v[0], tr[k].v[1]);\n        tr[k].rev ^= 1;\n        return;\n    }\n    pushdown(k);\n    int mid = (tr[k].l + tr[k].r) >> 1;\n    if (l <= mid) modify(k << 1, l, r);\n    if (mid < r) modify(k << 1 | 1, l, r);\n    pushup(k);\n}\n_node query(int k, int l, int r) {\n//  printf(\"%d(%d %d) %d %d\\n\", k, tr[k].l, tr[k].r, l, r);\n    if (l <= tr[k].l && tr[k].r <= r) return tr[k].v[0];\n    pushdown(k);\n    int mid = (tr[k].l + tr[k].r) >> 1;\n    if (r <= mid) return query(k << 1, l, r);\n    if (l > mid) return query(k << 1 | 1, l, r);\n    return query(k << 1 | 1, mid + 1, r) + query(k << 1, l, mid);\n}\nint main() {\n//  freopen(\"C_test.in\", \"r\", stdin);\n    scanf(\"%d%d%d\", &n, &m, &q);\n    for (int i = 1; i <= n; ++ i) scanf(\"%d\", a + i), a[i] = ((a[i] - 1) & 1);\n    build(1, 1, n);\n    int op, l, r;\n    lld x;\n    for (; q --; ) {\n        scanf(\"%d%d%d\", &op, &l, &r);\n//      printf(\"%d %d %d\\n\", op, l, r);\n        if (op == 1) {\n            scanf(\"%lld\", &x);\n            if (x & 1) modify(1, l, r);\n        } else printf(\"%d\\n\", query(1, l, r).a[m + 1] == 1 ? 2 : 1);\n    }\n}\n```\n",
        "postTime": 1660791727,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "CF1076G Array Game \u9898\u89e3"
    }
]