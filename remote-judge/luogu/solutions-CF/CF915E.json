[
    {
        "content": "## [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/9775249.html)\n\n#### \u539f\u9898\u4f20\u9001\u95e8\uff1a[CF915E Physical Education Lessons](https://www.luogu.org/problemnew/show/CF915E)\n\n## \u524d\u7f6e\u829d\u58eb\uff1a\u73c2\u6735\u8389\u6811\n\n### [\u7a9d\u535a\u5ba2\u91cc\u5bf9\u73c2\u6735\u8389\u6811\u7684\u4ecb\u7ecd](https://www.cnblogs.com/yzhang-rp-inf/p/9443659.html )\n\n#### \u8fd9\u9053\u9898\u5f88\u7b80\u5355\u554a\n\n#### \u6bcf\u4e2a\u64cd\u4f5c\u5c31\u662f\u533a\u95f4\u8d4b\u503c0\u62161\uff0c\u987a\u5e26\u628a\u603b\u548c\u4fee\u6539\u4e00\u4e0b\uff0c\u8dd1\u7684\u98de\u5feb\n\n```cpp\n#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\n#define IT set<node>::iterator\nusing namespace std;\ninline int read() //io\u4f18\u5316\n{\n    register int x=0,f=1;register char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nstruct node\n{\n    int l,r;\n    mutable bool v;\n    node(int L, int R=-1, bool V=0):l(L), r(R), v(V) {}\n    bool operator<(const node& o) const\n    {\n        return l < o.l;\n    }\n};\nset<node> s;\nint sum=0;\nIT split(int pos)\n{\n    IT it = s.lower_bound(node(pos));\n    if (it != s.end() && it->l == pos) \n        return it;\n    --it;\n    int L = it->l, R = it->r;\n    bool V = it->v;\n    s.erase(it);\n    s.insert(node(L, pos-1, V));\n    return s.insert(node(pos, R, V)).first;\n}\nvoid assign_val(int l,int r,bool val)\n{\n    IT itr = split(r+1), itl = split(l), it = itl;\n    for( ;itl != itr; ++itl)\n        sum-=itl->v*(itl->r-itl->l+1); //\u8fc7\u7a0b\u4e2d\u987a\u5e26\u8ba1\u7b97\n    s.erase(it,itr);\n    s.insert(node(l,r,val));\n    sum+=val*(r-l+1); //\u8fc7\u7a0b\u4e2d\u987a\u5e26\u8ba1\u7b97\n}\nint main()\n{\n\tint n=read(),m=read();\n\ts.insert(node(1,n,1));\n\tsum=n;\n\twhile(m--)\n\t{\n\t\tint l=read(),r=read(),op=read();\n\t\tif(op==1) //\u4fee\u6539\n\t\t\tassign_val(l,r,0);\n\t\telse\n\t\t\tassign_val(l,r,1);\n\t\tprintf(\"%d\\n\",sum); //\u8f93\u51fa\u603b\u548c\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1539265312,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u4e4d\u4e00\u770b\u80af\u5b9a\u662f\u7528\u7ebf\u6bb5\u6811\u505a\u7684\uff0c\u4f46\u662f\u53d1\u73b0$n\\leq 10^9$\uff08\u5495\u5495\u5495\u3002\u3002\u3002\n\n\u4f46\u662f\u8be2\u95ee\u6570\u91cf\u662f\u6b63\u5e38\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5f53``l<=L<=R<=r``\u65f6\u5c31\u76f4\u63a5\u4fee\u6539\u3002\u5982\u679c\u5f53\u524d\u662f$null$\u70b9\u5c31\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u81f3\u4e8e\u7a7a\u95f4\u3002\u3002\u3002\u7a7a\u95f4\u9650\u5236\u6709\u591a\u5927\u5c31\u5f00\u591a\u5927\u3002\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define Rint register int\nusing namespace std;\nconst int N = 15001000;\nint n, q, root, seg[N], lazy[N], li[N], ri[N], cnt;\ninline void pushup(int x){seg[x] = seg[li[x]] + seg[ri[x]];}\ninline void pushdown(int x, int L, int R){\n    if(~lazy[x]){\n        int mid = L + R >> 1;\n        if(!li[x]) li[x] = ++ cnt;\n        seg[li[x]] = lazy[x] * (mid - L + 1); lazy[li[x]] = lazy[x];\n        if(!ri[x]) ri[x] = ++ cnt;\n        seg[ri[x]] = lazy[x] * (R - mid); lazy[ri[x]] = lazy[x];\n        lazy[x] = -1;\n    }\n}\ninline void change(int &x, int L, int R, int l, int r, int v){\n    if(!x) x = ++ cnt;\n    if(l <= L && R <= r){\n        seg[x] = (R - L + 1) * v;\n        lazy[x] = v;\n        return;\n    }\n    pushdown(x, L, R);\n    int mid = L + R >> 1;\n    if(l <= mid) change(li[x], L, mid, l, r, v);\n    if(mid < r) change(ri[x], mid + 1, R, l, r, v);\n    pushup(x);\n}\nint main(){\n    scanf(\"%d%d\", &n, &q);\n    memset(lazy, -1, sizeof lazy);\n    change(root, 1, n, 1, n, 0);\n    while(q --){\n        int l, r, k;\n        scanf(\"%d%d%d\", &l, &r, &k);\n        change(root, 1, n, l, r, 2 - k);\n        printf(\"%d\\n\", n - seg[1]);\n    }\n}\n```",
        "postTime": 1544595402,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "\u6700\u8fd1\u5728\u5b66ODT\uff0c\u8bb2\u4e00\u4e0b\u8fd9\u9898ODT\u89e3\u6cd5\u3002\n\n[\u4e0d\u4f1aODT?](http://baidu.apphb.com/?q=%E7%8F%82%E6%9C%B5%E8%8E%89%E6%A0%91)\n\n\u8fd9\u9898\u5c31\u662f\u4e00\u9053ODT\u7684\u677f\u5b50\uff0c\u64cd\u4f5c\u662f\u63a8\u5e73\uff0c\u67e5\u8be2\u662f\u6c42\u548c\n\nQ\uff1a\u8fd9\u9898\u4e0d\u4fdd\u8bc1\u6570\u636e\u968f\u673a\u4e3a\u4ec0\u4e48\u8fd8\u80fd\u7528ODT?\n\nA\uff1ahackODT\u7684\u65b9\u6cd5\u662f\u6ca1\u6709\u63a8\u5e73\u64cd\u4f5c\uff0c\u4f46\u8fd9\u9898\u4fee\u6539\u64cd\u4f5c\u5168\u662f\u63a8\u5e73\u64cd\u4f5c\u3002\n\n\u4e8e\u662f\u66b4\u529b\u5f88\u597d\u5199\uff0c\u4f46CF\u7684\u6bd2\u7624\u4eec\u4e0d\u4f1a\u8ba9\u4f60\u8fc7\u7684\uff0c\u6545\u8003\u8651\u4f18\u5316\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\u533a\u95f4\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u5c31\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf $sum$ \u8868\u793a $1 \\rightarrow n$ \u7684\u548c\uff0c\u518d\u63a8\u5e73\u65f6\u7edf\u8ba1\uff0c\u63a8\u5e73\u533a\u95f4\u91cc\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u503c\u4f1a\u53d8\u5316\uff0c\u518d\u6839\u636e\u53d8\u6210\u4ec0\u4e48\u4fee\u6539 $sum$\n\ncode:\n\n```\n#include<bits/stdc++.h>\n#define SIT set<node>::iterator\nusing namespace std;\nint read()\n{\n    register int x=0,f=1;register char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nstruct node\n{\n\tint l,r;\n\tmutable long long v;\n\tnode(int L, int R=-1, long long V=0):l(L), r(R), v(V) {}\n\tbool operator<(const node& o) const{return l < o.l;}\n};\nset<node>odt;\nlong long sum;\nSIT spilt(int mid)\n{\n\tSIT it=odt.lower_bound(node(mid));\n\tif(it!=odt.end()&&it->l==mid) return it;\n\tit--;\n\tnode temp=*it;\n\todt.erase(it);\n\todt.insert(node(temp.l,mid-1,temp.v));\n\treturn odt.insert(node(mid,temp.r,temp.v)).first;\n}\nvoid assign(int l,int r,long long val)\n{\n\tSIT it2=spilt(r+1),it1=spilt(l);\n\tlong long res=0;\n\tfor(SIT it=it1;it!=it2;it++)\n\t{\n\t\tif(it->v!=val)res+=it->r-it->l+1;//\u4e00\u5171\u6709\u591a\u5c11\u503c\u4f1a\u53d8\n\t}\n\todt.erase(it1,it2);\n\todt.insert(node(l,r,val));\n\tsum+=((val==0)?-res:res);//\u662f\u52a0\u8fd8\u662f\u51cf\n}\nint n,q;\nint main()\n{\n\tn=read();q=read();\n\todt.insert(node(1,n,1));\n\tsum=n;\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint l=read(),r=read();\n\t\tshort opt=read();\n\t\tif(opt==1)\n\t\t{\n\t\t\tassign(l,r,0);\n\t\t\tprintf(\"%d\\n\",sum);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tassign(l,r,1);\n\t\t\tprintf(\"%d\\n\",sum);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n$$\\text{That~is~all.~Thanks~fo~reading.}$$\n\n\u2193\u70b9\u4e2a\u8d5e\u5427\n",
        "postTime": 1593233842,
        "uid": 242524,
        "name": "JRzyh",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u5e94\u8be5\u90fd\u5199\u7684\u7ebf\u6bb5\u6811\u3002\u6211\u56e0\u4e3a\u79bb\u6563\u5316\u603b\u5199\u70b8\uff0c\u52a8\u6001\u5f00\u70b9\u628a\u63e1\u4e0d\u597d\u65e2\u4e0dMLE\u4e5f\u4e0dRE\u7684\u6570\u7ec4\u5927\u5c0f\uff0c\u53ea\u597d\u5199\u4e86\u4e00\u4e2aSplay\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n~~\u719f\u7ec3\u8fd0(mo)\u7528(gai)Splay~~\n\n\u5176\u5b9e\u53ea\u8981\u4f1a\u57fa\u672c\u7684Splay\uff0c\u4f1a\u63a8\u6807\u8bb0\uff0c\u7a0d\u52a0\u601d\u8003\u5c31\u53ef\u4ee5\u9b54\u6539\u51fa\u6765\n\n## \u672c\u9898\u89e3\u6cd5\n\n**~~\u6211\u4eec\u77e5\u9053\uff0cSplay\u662f\u4e00\u79cd\u975e\u5e38\u4e07\u80fd\u7684\u6570\u636e\u7ed3\u6784\u3002~~**\n\n\u8fd9\u9053\u9898\u7684Splay\u89e3\u6cd5\u662f\u6e90\u81ea[NOIP2017D2T3\u5217\u961f](https://www.luogu.com.cn/problem/P3960)\u7684\u601d\u8def\u3002\u7531\u4e8e$10 ^ 9$\u7684\u503c\u57df\u8ba9\u6211\u4eec\u65e0\u6cd5\u628a\u6240\u6709\u8282\u70b9\u5f00\u51fa\u6765\uff0c\u8003\u8651\u5230\u64cd\u4f5c\u6570\u53ea\u6709$3 \\times 10 ^ 5$\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u4e2a\u8282\u70b9\u5b58\u50a8\u4e00\u6574\u6bb5\u7684\u4fe1\u606f\uff0c\u5f53\u9700\u8981\u5272\u88c2\u8282\u70b9\u65f6\u5c31\u5272\u88c2\u5f00\uff0c\u6700\u540e\u8282\u70b9\u6570\u662f\u548c\u64cd\u4f5c\u6570\u540c\u6570\u91cf\u7ea7\u7684\u3002\n\n\u6bcf\u4e00\u4e2a\u8282\u70b9\u5b58\u50a8\u4e00\u4e0b\u5b83\u7684\u5de6\u53f3\u7aef\u70b9\u3001\u8fd9\u4e00\u6bb5\u7684\u503c\u3001\u5b50\u6811\u7684\u603b\u548c\u3001\u8d4b\u503c\u61d2\u6807\u8bb0\uff0c\u518d\u5199\u4e00\u4e2a\u5272\u88c2\u51fd\u6570\uff0c\u5269\u7684\u5c31\u662fSplay\u7684\u57fa\u672c\u5957\u8def\u4e86\u3002\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n1. \u4f7f\u7528\u5272\u88c2\u51fd\u6570\u4f7f$l$\u6210\u4e3a\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u7aef\u70b9\uff0c\u4f7f$r$\u6210\u4e3a\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u7aef\u70b9\u3002\n\n2. \u628a$l - 1$ `Splay`\u5230\u6839\uff0c\u628a$r + 1$ `Splay`\u5230\u6839\u7684\u53f3\u513f\u5b50\u3002\u8fd9\u6837\u5f97\u5230\u7684\uff0c\u4ee5`ch[ch[rt][1]][0]`\u4e3a\u6839\u7684\u5b50\u6811\u5c31\u662f\u6211\u4eec\u9700\u8981\u64cd\u4f5c\u7684\u533a\u95f4\u3002\n\n3. \u628a\u8fd9\u4e2a\u8282\u70b9\u6253\u4e0a\u8d4b\u503c\u6807\u8bb0\u5c31OK\u4e86\n\n\u5177\u4f53\u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\nconst int MAXN = 4e6;\n\nstruct Node{\n\tNode *fa, *ch[2];\n\tint l, r, sum, val, asi, len;\n\tNode() {}\n\t\n\tNode(Node *fa, int l, int r, int val) : fa(fa), l(l), r(r), val(val) {\n\t\tch[0] = ch[1] = NULL;\n\t\tasi = -1;\n\t\tlen = r - l + 1;\n\t\tsum = val * len;\n\t}\n}npool[MAXN];\n\nNode *rt;\nint n, m;\nint ncnt;\n\nNode *New(Node *fa, int l, int r, int val) {\n\tnpool[ncnt] = Node(fa, l, r, val);\n\treturn &npool[ncnt++];\n}\n\nvoid PushDown(Node *now) {\n\tif (now->asi != -1) {\n\t\tif (now->ch[0]) {\n\t\t\tnow->ch[0]->val = now->asi;\n\t\t\tnow->ch[0]->asi = now->asi;\n\t\t\tnow->ch[0]->sum = now->asi * now->ch[0]->len;\n\t\t}\n\t\tif (now->ch[1]) {\n\t\t\tnow->ch[1]->val = now->asi;\n\t\t\tnow->ch[1]->asi = now->asi;\n\t\t\tnow->ch[1]->sum = now->asi * now->ch[1]->len;\n\t\t}\n\t\tnow->asi = -1;\n\t}\n}\n\nvoid PushAll(Node *now) {\n\tif (now->fa) PushAll(now->fa);\n\tPushDown(now);\n}\n\nvoid Update(Node *now) {\n\tint l = now->l, r = now->r, v = now->val;\n\tnow->len = r - l + 1 + (now->ch[0] ? now->ch[0]->len : 0) + (now->ch[1] ? now->ch[1]->len : 0);\n\tnow->sum = v * (r - l + 1) + (now->ch[0] ? now->ch[0]->sum : 0) + (now->ch[1] ? now->ch[1]->sum : 0);\n}\n\nvoid Rotate(Node *now) {\n\tNode *fa = now->fa, *anc = fa->fa;\n\tint d = (now == fa->ch[1]);\n\tif (anc) anc->ch[fa == anc->ch[1]] = now;\n\tnow->fa = anc;\n\tfa->fa = now;\n\tfa->ch[d] = now->ch[!d];\n\tnow->ch[!d] = fa;\n\tif (fa->ch[d]) fa->ch[d]->fa = fa;\n\tUpdate(fa); Update(now);\n\tif (!now->fa) rt = now;\n}\n\nvoid Splay(Node *now, Node *t) {\n\tif (!now || now == t) return;\n\tPushAll(now);\n\twhile (now->fa != t) {\n\t\tNode *fa = now->fa, *anc = fa->fa;\n\t\tif (anc != t) {\n\t\t\tif ((fa == anc->ch[1]) ^ (now == fa->ch[1])) Rotate(now);\n\t\t\telse Rotate(fa);\n\t\t}\n\t\tRotate(now);\n\t}\n}\n\nNode *Find(Node *now, int pos) {\n\tPushDown(now);\n\tif (pos < now->l) return Find(now->ch[0], pos);\n\telse if (pos <= now->r) return now;\n\telse return Find(now->ch[1], pos);\n}\n\nvoid Split(Node *now, int pos) {//[l, pos) [pos, r]\n\tPushDown(now);\n\tint l = now->l, r = now->r, v = now->val;\n\tNode *lc = now->ch[0];\n\tif (l == pos) return;\n\tnow->l = pos;\n\tnow->ch[0] = New(now, l, pos - 1, v);\n\tnow->ch[0]->ch[0] = lc;\n\tif (lc) lc->fa = now->ch[0];\n\tUpdate(now->ch[0]); Update(now);\n}\n\nvoid Assign(int l, int r, int v) {\n\tSplit(Find(rt, l), l);\n\tSplit(Find(rt, r + 1), r + 1);\n\tSplay(Find(rt, l - 1), NULL);\n\tSplay(Find(rt, r + 1), rt);\n\trt->ch[1]->ch[0]->val = v;\n\trt->ch[1]->ch[0]->asi = v;\n\trt->ch[1]->ch[0]->sum = v * rt->ch[1]->ch[0]->len;\n\tUpdate(rt->ch[1]);\n\tUpdate(rt);\n}\n\nint main() {\n\tios::sync_with_stdio(false); cin.tie(NULL);\n\tcin >> n >> m;\n\trt = New(NULL, 1, n, 1);\n\trt->ch[0] = New(rt, 0, 0, 0);\n\trt->ch[1] = New(rt, n + 1, n + 1, 0);\n\tUpdate(rt);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint op, l, r;\n\t\tcin >> l >> r >> op;\n\t\tif (op == 1) Assign(l, r, 0);\n\t\telse Assign(l, r, 1);\n\t\tcout << rt->sum << '\\n';\n\t}\n\treturn 0;\n}\n/*\n4\n6\n1 2 1\n3 4 1\n2 3 2\n1 3 2\n2 4 1\n1 4 2\n*/\n```\n\n~~\u80af\u5b9a\u6709\u94c1\u61a8\u61a8\u62f7\u4e0a\u9762\u7684\u4ee3\u7801\u4ea4\u4e0a\u53bb\uff01~~\n\n\u8fd9\u6837\u5199\u7684\u8bdd\uff0c\u5373\u4f7f\u5f00\u4e86`Ofast`\u4e5f\u662f\u4f1aTLE\u7684\u3002\u867d\u7136\u590d\u6742\u5ea6\u662f\u5341\u5206\u7a33\u5b9a\u7684$O(n \\log n)$\uff0c\u4f46\u662f$Splay$\u7684\u5e38\u6570\u662f\u4e00\u4e2a\u9876\u4fe9\u8fd8\u8981\u591a\u7684\u3002\u53ea\u8981\u505a\u8fc7\u4e00\u4e9b\u9898\uff0c\u5927\u5bb6\u90fd\u77e5\u9053\uff0c$Splay$\u548c$LCT$\u7684$\\log n$\u7ecf\u5e38\u88ab\u4e00\u4e9b\u5c0f\u5e38\u6570\u7684$\\log ^ 2 n$\u540a\u8d77\u6765\u9524\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u6bd2\u7624\u7684\u5361\u5e38\u6280\u5de7\u5417\uff1f\u5176\u5b9e\u4e0d\u7528\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u6570\u636e\u7ed3\u6784\u5e38\u6570\u7684\u51b3\u5b9a\u56e0\u7d20\u3002\n\n1. \u5de5\u4f5c\u539f\u7406\n\n2. \u8282\u70b9\u4e2a\u6570\n\n3. \u662f\u5426\u6709\u6807\u8bb0\u7684\u4e0b\u653e\n\n\u663e\u7136$1$\u662f\u53ef\u4ee5\u653e\u5f03\u6cbb\u7597\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5728$2$\u548c$3$\u4e0a\u4e0b\u6587\u7ae0\u3002\u6211\u4eec\u901a\u8fc7\u65cb\u8f6c\u5f97\u5230\u4e86\u4e00\u4e2a\u5b50\u6811\u4ee3\u8868\u4e00\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u8981\u628a\u5b83\u8d4b\u503c\u3002\u663e\u7136\u53ef\u4ee5\u628a\u5b83\u6574\u4e2a\u6254\u6389\uff0c\u538b\u6210\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u4f18\u5316$Splay$\u5728\u672c\u9898\u7684\u6548\u7387\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\nconst int MAXN = 4e6;\n\nstruct Node{\n\tNode *fa, *ch[2];\n\tint l, r, sum, val, len;\n\tNode() {}\n\t\n\tNode(Node *fa, int l, int r, int val) : fa(fa), l(l), r(r), val(val) {\n\t\tch[0] = ch[1] = NULL;\n\t\tlen = r - l + 1;\n\t\tsum = val * len;\n\t}\n}npool[MAXN];\n\nNode *rt;\nint n, m;\nint ncnt;\n\nNode *New(Node *fa, int l, int r, int val) {\n\tnpool[ncnt] = Node(fa, l, r, val);\n\treturn &npool[ncnt++];\n}\n\nvoid Update(Node *now) {\n\tint l = now->l, r = now->r, v = now->val;\n\tnow->len = r - l + 1 + (now->ch[0] ? now->ch[0]->len : 0) + (now->ch[1] ? now->ch[1]->len : 0);\n\tnow->sum = v * (r - l + 1) + (now->ch[0] ? now->ch[0]->sum : 0) + (now->ch[1] ? now->ch[1]->sum : 0);\n}\n\nvoid Rotate(Node *now) {\n\tNode *fa = now->fa, *anc = fa->fa;\n\tint d = (now == fa->ch[1]);\n\tif (anc) anc->ch[fa == anc->ch[1]] = now;\n\tnow->fa = anc;\n\tfa->fa = now;\n\tfa->ch[d] = now->ch[!d];\n\tnow->ch[!d] = fa;\n\tif (fa->ch[d]) fa->ch[d]->fa = fa;\n\tUpdate(fa); Update(now);\n\tif (!now->fa) rt = now;\n}\n\nvoid Splay(Node *now, Node *t) {\n\tif (!now || now == t) return;\n\twhile (now->fa != t) {\n\t\tNode *fa = now->fa, *anc = fa->fa;\n\t\tif (anc != t) {\n\t\t\tif ((fa == anc->ch[1]) ^ (now == fa->ch[1])) Rotate(now);\n\t\t\telse Rotate(fa);\n\t\t}\n\t\tRotate(now);\n\t}\n}\n\nNode *Find(Node *now, int pos) {\n\tif (pos < now->l) return Find(now->ch[0], pos);\n\telse if (pos <= now->r) return now;\n\telse return Find(now->ch[1], pos);\n}\n\nvoid Split(Node *now, int pos) {//[l, pos) [pos, r]\n\tint l = now->l, r = now->r, v = now->val;\n\tNode *lc = now->ch[0];\n\tif (l == pos) return;\n\tnow->l = pos;\n\tnow->ch[0] = New(now, l, pos - 1, v);\n\tnow->ch[0]->ch[0] = lc;\n\tif (lc) lc->fa = now->ch[0];\n\tUpdate(now->ch[0]); Update(now);\n}\n\nvoid Assign(int l, int r, int v) {\n\tSplay(Find(rt, l), NULL);\n\tSplit(rt, l);\n\tSplay(Find(rt, r + 1), NULL);\n\tSplit(rt, r + 1);\n\tSplay(Find(rt, l - 1), NULL);\n\tSplay(Find(rt, r + 1), rt);\n\trt->ch[1]->ch[0] = New(rt->ch[1], l, r, v);//throw away the whole tree\n\tUpdate(rt->ch[1]);\n\tUpdate(rt);\n}\n\nint main() {\n\tios::sync_with_stdio(false); cin.tie(NULL);\n\tcin >> n >> m;\n\trt = New(NULL, 1, n, 1);\n\trt->ch[0] = New(rt, 0, 0, 0);\n\trt->ch[1] = New(rt, n + 1, n + 1, 0);\n\tUpdate(rt);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint op, l, r;\n\t\tcin >> l >> r >> op;\n\t\tif (op == 1) Assign(l, r, 0);\n\t\telse Assign(l, r, 1);\n\t\tcout << rt->sum << '\\n';\n\t}\n\treturn 0;\n}\n/*\n4\n6\n1 2 1\n3 4 1\n2 3 2\n1 3 2\n2 4 1\n1 4 2\n*/\n```",
        "postTime": 1579591835,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u5927\u4f6c\u4eec\u90fd\u592a\u5de8\u8fa3\uff01\uff01\n\n\u9898\u89e3\u91cc\u9762\u90fd\u662f\u7528\u7684 $ODT$ \u548c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u8fd9\u4e9b\u6211\u90fd\u4e0d\u4f1a\u554a $qwq$ \uff0c\u6240\u4ee5\u6211\u9009\u62e9\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u6765\u505a\u8fd9\u9053\u9898\u3002\n\n# \u9898\u9762\n\n[CF915E Physical Education Lessons](https://www.luogu.org/problem/CF915E)\n\n# Solution\n\n\u770b\u5230\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u8986\u76d6\u64cd\u4f5c\uff0c\u7136\u540e\u770b\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u662f $10^9$ \uff0c\u5f53\u573a\u61f5\u903c\u3002\n\n\u60f3\u60f3\u600e\u4e48\u529e\u3002\n\n\u7a81\u7136\u53d1\u73b0 $q\\leq 3\\cdot10^5$ \uff0c\u90a3\u4e48\u6d89\u53ca\u5230\u7684\u7aef\u70b9\u6700\u591a\u53ea\u6709 $6\\cdot10^5$ \u4e2a\uff0c\u8fd9\u4e2a\u8c8c\u4f3c\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u3002\n\n\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e24\u4e2a\u76f8\u90bb\u7684\u7aef\u70b9\u4e4b\u95f4\u5f62\u6210\u7684\u533a\u95f4\uff0c\u540c\u65f6\u7ef4\u62a4\u533a\u95f4\u548c\u5373\u53ef\u3002\n\n\u7136\u540e\u53d1\u73b0\u5982\u679c\u76f4\u63a5\u79bb\u6563\u5316\u7ed9\u51fa\u7684\u7aef\u70b9\uff0c\u5728 $l=r$ \u7684\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0 $l>r$ \u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u53f3\u7aef\u70b9\u52a0 $1$ \uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u7684\u957f\u5ea6\u76f4\u63a5\u7528\u53f3\u7aef\u70b9\u51cf\u5de6\u7aef\u70b9\u5373\u53ef\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6ca1\u6709\u6d89\u53ca\u5230\u7684\u6211\u4eec\u76f4\u63a5\u5b58\u4e0b\u6765\uff0c\u5728\u8f93\u51fa\u7b54\u6848\u65f6\u52a0\u4e0a\u5c31\u597d\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il _print(T x){\n\tif(x/10) _print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class T>il print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\t_print(x);\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 6e5+5;\nint n,m,s[MAXN],sz,ans;\nstruct Node{\n\tint l,r,k;\n}node[MAXN>>1];\n#define lc (cur<<1)\n#define rc (cur<<1|1)\nstruct Seg_Tree{\n\tint sum,val,tag;\n}T[MAXN<<2];\nil pushup(int cur){T[cur].sum=T[lc].sum+T[rc].sum;}\nil pushdown(int cur,int l,int r){\n\tif(T[cur].tag==-1) return ;\n\tT[lc].tag=T[rc].tag=T[cur].tag;\n\tif(T[cur].tag==1) T[lc].sum=T[rc].sum=0;\n\telse T[lc].sum=T[lc].val,T[rc].sum=T[rc].val;\n\tT[cur].tag=-1;\n}\nil build_tree(int cur,int l,int r){\n\tT[cur].tag=-1;\n\tif(l==r) return T[cur].sum=T[cur].val=s[l+1]-s[l],void();\n\tbuild_tree(lc,l,mid),build_tree(rc,mid+1,r);\n\tpushup(cur),T[cur].val=T[lc].val+T[rc].val;\n}\nil updata(int cur,int l,int r,int L,int R,int k){\n\tif(l>=L&&r<=R){\n\t\tT[cur].tag=k;\n\t\tif(k==1) T[cur].sum=0;\n\t\telse T[cur].sum=T[cur].val;\n\t\treturn ;\n\t}\n\tpushdown(cur,l,r);\n\tif(mid>=L) updata(lc,l,mid,L,R,k);\n\tif(R>mid) updata(rc,mid+1,r,L,R,k);\n\tpushup(cur);\n}\nit id(int x){return lower_bound(s+1,s+1+sz,x)-s;}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(m);\n\tfor(ri i=1;i<=m;++i){\n\t\tread(node[i].l),read(node[i].r),read(node[i].k);\n\t\t++node[i].r;\n\t\ts[++sz]=node[i].l,s[++sz]=node[i].r;\n\t}\n\tsort(s+1,s+1+sz),sz=unique(s+1,s+1+sz)-s-1;\n\tans=s[1]-1+n-s[sz]+1;\n\tbuild_tree(1,1,sz-1);\n\tfor(ri i=1;i<=m;++i){\n\t\tri x=id(node[i].l),y=id(node[i].r)-1;\n\t\tupdata(1,1,sz-1,x,y,node[i].k);\n\t\tprint(T[1].sum+ans),puts(\"\");\n\t}\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u4e00\u9053\u633a\u88f8\u7684\u7ebf\u6bb5\u6811\u7684\u9898\uff0c\u53ea\u662f\u9700\u8981\u7a0d\u5fae\u8f6c\u6362\u4e00\u4e0b\u3002",
        "postTime": 1571473913,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "CF915E Physical Education Lessons \u9898\u89e3"
    },
    {
        "content": "\u73c2\u6735\u8389\u6811\u7684\u5c0f\u4f18\u5316\n\n\u9996\u5148\u88f8\u7684\u73c2\u6735\u8389\u6811\u4f1a\u4e00\u76f4TLE on \\#30\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u9898\u53ea\u6709assign\u548cgetsum\u4e24\u79cd\u64cd\u4f5c\uff0c\u800c\u4e14getsum\u7684\u533a\u95f4\u4e00\u5b9a$[1,n]$\u3002\u90a3\u4e48\u6211\u4eec\u80fd\u5426\u628agetsum\u5408\u5e76\u8fdbassign\u91cc\u9762\u5462\uff1f\n\n\u663e\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u6211\u4eec\u7528sum\u8bb0\u4e0b\u5f53\u524d\u7684\u548c\uff0c\u5728\u6bcf\u6b21assign\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u4fee\u6539sum\u7684\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nint n,m,sum;\n\nnamespace ODT{\n\tstruct node{\n\t\tint l,r;\n\t\tmutable int val;\n\t\tnode(int L,int R=-1,int Val=0):l(L),r(R),val(Val){}\n\t\tinline bool operator <(const node &x)const{\n\t\t\treturn l<x.l;\n\t\t}\n\t\t#define set_node_it set<node>::iterator\n\t};\n\tset<node> s;\n\tinline set_node_it split(int x){\n\t\tset_node_it i=s.lower_bound(node(x));\n\t\tif(i!=s.end()&&i->l==x) return i;\n\t\ti--;\n\t\tint l=i->l,r=i->r,val=i->val;\n\t\ts.erase(i);\n\t\ts.insert(node(l,x-1,val));\n\t\treturn s.insert(node(x,r,val)).first;\n\t}\n\tinline void assign(int l,int r,int val){\n\t\tset_node_it R=split(r+1),L=split(l);\n\t\tfor(set_node_it i=L; i!=R; i++) sum-=i->val*(i->r-i->l+1);\n\t\ts.erase(L,R);\n\t\ts.insert(node(l,r,val));\n\t\tsum+=val*(r-l+1);\n\t}\n}\n\nint main(){\n\tscanf(\"%d %d\",&n,&m); sum=n;\n\tODT::s.insert(ODT::node(1,n,1));\n\twhile(m--){\n\t\tint l,r,op; scanf(\"%d %d %d\",&l,&r,&op);\n\t\tif(op==1) ODT::assign(l,r,0);\n\t\tif(op==2) ODT::assign(l,r,1);\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573025081,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u771f\u7684\u6bd2\u7624\u3002\u3002\u6570\u7ec4\u5f00\u5c0f\u4e86RE\uff0c\u5f00\u5927\u4e86\u5c31MLE,\u6211\u5927\u6982\u5f00\u5230$1.5\\times 10^7$\u624d\u5361\u8fc7\u53bb\u3002\u3002\u5f53\u7136\u5982\u679c\u9009\u62e9\u795e\u5947\u7684\u79bb\u6563\u5316\u5c31\u6ca1\u6709\u4e0a\u9762\u7684\u95ee\u9898\u4e86\uff0c\u4f46\u662f\u79bb\u6563\u5316\u6211\u4e0d\u60f3\u5199\u554a\u3002\u3002\u53ea\u597d\u9009\u62e9\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4e86\n\n\u5982\u679c\u4e0d\u8003\u8651\u7a7a\u95f4\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7684\u95ee\u9898\u5b9e\u9645\u4e0a\u662f\u7ef4\u62a4\u4e00\u4e2a$01$\u5e8f\u5217\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f1a\u9009\u62e9\u4e00\u6bb5\u533a\u95f4\u5c06\u5176\u8d4b\u503c\u4e3a$0/1$\uff0c\u6c42\u6bcf\u6b21\u64cd\u4f5c\u5b8c\u540e\u533a\u95f4$[1,n]$\u4e2d$1$\u7684\u4e2a\u6570\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053$[l,mid]$\u4e0e$[mid+1,r]$\u4e2d$1$\u7684\u4e2a\u6570\uff0c\u90a3\u4e48$[l,r]$\u4e2d$1$\u7684\u4e2a\u6570\u5c31\u53ef\u4ee5$O(1)$\u5730\u5f97\u51fa\u3002\u518d\u770b\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff0c\u5982\u679c\u8981\u66f4\u65b0\u4e00\u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u5c31\u662f\u5c06\u8be5\u533a\u95f4\u4e2d$1$\u7684\u4e2a\u6570\u53d8\u6210$V\\times(r-l+1)$\uff0c$V$\u8868\u793a\u8d4b\u7684\u503c\uff0c$l,r$\u8868\u793a\u8be5\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u4e8e\u662f$\\text{Lazy Tag}$\u662f\u53ef\u4ee5\u5e94\u7528\u5728\u4e0a\u9762\u7684\u3002\u7efc\u4e0a\uff0c\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4$1$\u7684\u4e2a\u6570\u3002\u5728\u6211\u5947\u5947\u602a\u602a\u7684\u5b9e\u73b0\u4e2d\uff0c\u6211\u662f\u7ef4\u62a4$0$\u7684\u4e2a\u6570\uff0c\u7136\u540e\u7528$n$\u51cf\u53bb\u533a\u95f4\u4e2d$0$\u7684\u4e2a\u6570\uff0c\u5927\u6982\u662f\u56e0\u4e3a\u5982\u679c\u8981\u7ef4\u62a4$1$\u7684\u4e2a\u6570\u7684\u8bdd\uff0c\u4e00\u5f00\u59cb\u6bd4\u8f83\u96be\u5904\u7406~~\u5b9e\u9645\u4e0a\u662f\u56e0\u4e3a\u6211\u592a\u83dc\u4e86~~\uff0c\u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define REG register\n#define MAXN 300005\nusing namespace std;\ninline int read(){\n\tREG int x(0);\n\tREG char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) x=(x*10)+(c^48),c=getchar();\n\treturn x;\n}\n\nint n,q,rt;\n\nstruct Segment{\n\t#define Ls(now) (t[now].ls)\n\t#define Rs(now) (t[now].rs)\n\t#define mid ((l+r)>>1)\n\tint tot;\n\tstruct Tree{\n\t\tint val,tag,ls,rs;\n\t}t[15000005];\n\tinline void Push_up(int now){t[now].val=t[Ls(now)].val+t[Rs(now)].val;}\n\tinline void Push_down(int now,int l,int r){\n\t\tif(!Ls(now)) Ls(now)=++tot;\n\t\tif(!Rs(now)) Rs(now)=++tot;\n\t\tt[Ls(now)].val=(t[now].tag-1)*(mid-l+1),t[Ls(now)].tag=t[now].tag;\n\t\tt[Rs(now)].val=(t[now].tag-1)*(r-mid),t[Rs(now)].tag=t[now].tag;\n\t\tt[now].tag=0;\n\t}\n\tvoid Upd(int& now,int l,int r,int x,int y,int state){\n\t\tif(!now) now=++tot;\n\t\tif(l>=x&&r<=y) t[now].val=(state-1)*(r-l+1),t[now].tag=state;\n\t\telse{\n\t\t\tif(t[now].tag) Push_down(now,l,r);\n\t\t\tif(mid>=x) Upd(Ls(now),l,mid,x,y,state);\n\t\t\tif(mid<y) Upd(Rs(now),mid+1,r,x,y,state);\n\t\t\tPush_up(now);\n\t\t}\n\t}\n\tint Ask(int now,int l,int r,int x,int y){\n\t\tif(!now) return 0;\n\t\tif(l>=x&&r<=y) return t[now].val;\n\t\tif(t[now].tag) Push_down(now,l,r);\n\t\tint ans=0;\n\t\tif(mid>=x) ans+=Ask(Ls(now),l,mid,x,y);\n\t\tif(mid<y) ans+=Ask(Rs(now),mid+1,r,x,y);\n\t\treturn ans;\n\t}\n}tree;\n\nint main(){\n\tn=read(),q=read();\n\twhile(q--){\n\t\tint l=read(),r=read(),opt=read();\n\t\tif(opt==1){\n\t\t\ttree.Upd(rt,1,n,l,r,2);\n\t\t\tprintf(\"%d\\n\",n-tree.t[rt].val);\n\t\t}\n\t\telse{\n\t\t\ttree.Upd(rt,1,n,l,r,1);\n\t\t\tprintf(\"%d\\n\",n-tree.t[rt].val);\n\t\t}\n\t}\n}\n```",
        "postTime": 1574686558,
        "uid": 83547,
        "name": "LCuter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\n\n\u56e0\u4e3a\u5929\u6570\u8fc7\u591a\uff08Alex\u8840\u6761\u771f\u7684\u539a\uff09\u663e\u7136\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4f1aGG\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u52a8\u6001\u5f00\u70b9\n\n\u4f55\u4e3a\u52a8\u6001\u5f00\u70b9\uff1f\uff1f\n\n\u770b\u4e00\u4e0b\u8be2\u95ee\u6b21\u6570\u4e0e\u5929\u6570\u7684\u5173\u7cfb\uff0c\u4f1a\u53d1\u73b0\uff1a\n### \u5982\u679c\u7528\u5806\u7684\u65b9\u5f0f\u5b58\u7ebf\u6bb5\u6811\uff0c\u4f1a\u6709\u975e\u5e38\u591a\u7684\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u800c\u5360\u4e86\u7a7a\u95f4\n\n\u6240\u4ee5\u52a8\u6001\u5f00\u70b9\uff0c\u8981\u5728\u70b9\u91cc\u5b58\u50a8\u4fe1\u606f\u624d\u5f00\uff0c\u5426\u5219\u4e0d\u5f00\n\n\u6709Q\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6700\u591a\u6d89\u53calogN\uff08\u4e5f\u5c31\u662f\u4e00\u6761\u6811\u94fe\u8dd1\u5b8c\uff0c\u53ca\u64cd\u4f5c\u53f6\u5b50\u8282\u70b9\uff09\u6240\u4ee5**\u6700\u591a**\u4f1a\u7528\u5230Q*logN\u4e2a\u8282\u70b9\n\n\u6240\u4ee5\u7406\u8bba\u4e0a\u53ea\u9700\u8981\u5f009*10^6+10\u4e2a\u8282\u70b9\u5c31\u597d\u4e86......\n\n\u7136\u800c......\u6570\u636e\u4f3c\u4e4e\u6709\u70b9\u9505\uff1f\uff1f\uff1f\n\n......\u6211\u5f00\u4e861.6\u500d\u624d\u8fc7\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint l,r,val;\n}T[300005*55];\nint root,size,N,Q,lazy[300005*55];\nvoid pushdown(int l,int r,int cur){\n\tif(lazy[cur]!=-1){\n\t\tint m=l+r>>1;\n\t\tif(!T[cur].l)T[cur].l=++size;\n\t\tif(!T[cur].r)T[cur].r=++size;\n\t\tlazy[T[cur].l]=lazy[T[cur].r]=lazy[cur];\n\t\tT[T[cur].l].val=lazy[cur]*(m-l+1);\n\t\tT[T[cur].r].val=lazy[cur]*(r-m);\n\t\tlazy[cur]=-1;\n\t}\n}\nvoid insert(int&cur,int x,int y,int l,int r,int k){\n\tif(!cur)cur=++size;\n\tif(x<=l&&r<=y){\n\t\tT[cur].val=k*(r-l+1);\n\t\tlazy[cur]=k;\n\t\treturn;\n\t}\n\tpushdown(l,r,cur);int m=(l+r)>>1;\n\tif(x<=m)insert(T[cur].l,x,y,l,m,k);\n\tif(y>m)insert(T[cur].r,x,y,m+1,r,k);\n\tT[cur].val=T[T[cur].l].val+T[T[cur].r].val;\n}\nint main(){\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tmemset(lazy,-1,sizeof(lazy));\n\tscanf(\"%d%d\",&N,&Q);\n\tfor(int i=1,l,r,opt;i<=Q;i++){\n\t\tscanf(\"%d%d%d\",&l,&r,&opt);\n\t\tif(opt==1)insert(root,l,r,1,N,opt);\n\t\telse insert(root,l,r,1,N,opt-2);\n\t\tprintf(\"%d\\n\",N-T[root].val);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1556877343,
        "uid": 109396,
        "name": "Uniecho1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "# CF915E Physical Education Lessons\n#### [_\u4f20\u9001\u95e8_](https://www.luogu.com.cn/problem/CF915E)\n\u4e00\u9053\u7b80\u5355\u7684\u73c2\u6735\u8389\u6811\u6a21\u677f\u9898\u3002\n## \u601d\u8def\n\n\u73c2\u6735\u8389\u6811\uff08$ODT$\uff09\u662f\u4e00\u79cd\u7528 $std::set$ \u7ef4\u62a4\u7684\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u4e09\u4e2a\u503c\uff1a$l$\u3001$r$\u3001$v$\uff0c\u8868\u793a $l$ \u3001$r$ \u533a\u95f4\u7684\u503c\u90fd\u4e3a $v$ \uff0c\u6709**\u533a\u95f4\u63a8\u5e73**\u64cd\u4f5c\u548c**\u6570\u636e\u968f\u673a**\u65f6\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u3002\n\n\u9664\u533a\u95f4\u63a8\u5e73\uff0c\u5b83\u8fd8\u53ef\u4ee5\u652f\u6301\u8bb8\u591a\u5176\u5b83\u7684\u64cd\u4f5c\uff0c\u5982\u533a\u95f4\u52a0\u3001\u533a\u95f4 $k$ \u5927\u503c\u3001\u533a\u95f4 $k$ \u6b21\u6c42\u548c\u7b49\u3002\n\n\u56de\u5230\u8fd9\u9053\u9898\uff0c\u5b83\u53ea\u9700\u8981\u533a\u95f4\u63a8\u5e73\u4e0e\u533a\u95f4\u6c42\u548c\uff0c\u53ef\u4ee5\u4f7f\u7528\u73c2\u6735\u8389\u6811\u3002\n\n\u5982\u679c\u60f3\u66f4\u597d\u5730\u7406\u89e3\u73c2\u6735\u8389\u6811\uff0c\u5efa\u8bae\u53bb\u505a\u4e00\u4e0b[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/CF896C)\uff0c\u4e5f\u53ef\u4ee5\u770b\u770b\u5176\u5b83 $dalao$ \u7684\u9898\u89e3\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u533a\u95f4\u6c42\u548c\u6c42\u6bcf\u6b21\u4fee\u6539\u540e\u7684\u503c\u662f\u4e0d\u884c\u7684\uff0c#$30$ \u4f1a $\\textcolor{#052242}{TLE}$\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u6c42\u6574\u6bb5\uff0c\u76f4\u63a5\u6c42\u4fee\u6539\u7684\u4e00\u6bb5\u589e\u51cf\u4e86\u591a\u5c11\uff0c\u8f93\u51fa\u5373\u53ef\uff0c\u52a0\u4e2a\u5feb\u8bfb\u5feb\u8f93\u5c31\u8dd1\u5f97\u98de\u5feb\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pnt pair<int,int>\n#define sit set<node>::iterator\nstruct node{\n\tint l,r;\n\tmutable int v;\n\tnode(int L,int R=-1,int V=0):l(L),r(R),v(V){}\n\tfriend bool operator<(const node& a,const node &b){\n\t\treturn a.l<b.l;\n\t}\n};\nset<node>a;\nint n,m,l,r,op,ans;\ninline int read(){\n\tchar ch=getchar();\n\tint x=0;\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=x*10+(ch^48),ch=getchar();\n\treturn x;\n}\ninline void write(int x){\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)write(x/10);\n    putchar(x%10^48);\n}\ninline sit split(int p){\n\tsit it=a.lower_bound(node(p));\n\tif(it!=a.end()&&it->l==p){\n\t\treturn it;\n\t}\n\tit--;\n\tint l=it->l,r=it->r,v=it->v;\n\ta.erase(it);\n\ta.insert(node(l,p-1,v));\n\treturn a.insert(node(p,r,v)).first;\n}\ninline void assign(int l,int r,int val){\n\tsit itr=split(r+1),itl=split(l);\n\tfor(sit it=itl;it!=itr;it++){\n\t\tans-=(it->r-it->l+1)*it->v;\n\t}\n\tans+=(r-l+1)*val;\n\ta.erase(itl,itr);\n\ta.insert(node(l,r,val));\n}\nsigned main(){\n\tn=read(),m=read();\n\ta.insert(node(1,n,1));\n\tans=n;\n\tfor(int i=1;i<=m;i++){\n\t\tl=read(),r=read();\n\t\tassign(l,r,read()-1);\n\t\twrite(ans);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n/*\nTime:5.78s\nMemory:23.01MB\n*/\n```\n\u518d\u89c1qwq~",
        "postTime": 1603449991,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "$$\\color{cornflowerblue}{\\mathcal{Treaker}}$$\n# \u73c2\u6735\u8389\u6811\n\u5176\u5b9e\u6700\u5f00\u59cb\u5b66\u73c2\u6735\u8389\u6811\uff0c\u6211\u662f\u62d2\u7edd\u7684\uff0c~~\u56e0\u4e3a\u4ed6\u770b\u8d77\u6765\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e0d\u6b63\u786e~~\uff0c\u4f46\u662f\u5b83\u5b9e\u5728\u662f\u592a\u597d\u7528\u4e86\u3002\n\n\u6240\u4ee5\u5b66\u4e86\u4e00\u53d1\u3002\n\n\u611f\u89c9\u7b80\u76f4\u5c31\u662f\u533a\u95f4\u8986\u76d6\u7684\u795e\u5668\u554a\uff08\u968f\u673a\u6570\u636e\u4e0b\uff09\n\n\u60f3\u5b66\u7684\u8bdd\u53ef\u4ee5\u770b\u4e00\u4e0b[\u8fd9\u4e2a\u535a\u5ba2](https://www.cnblogs.com/yzhang-rp-inf/p/9443659.html)\n\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <set>\n#define IT set<node>::iterator\nusing namespace std;\ninline int read()\n{\n\tint x = 0 , f = 1;\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n\treturn x * f;\n}\nint n , Q , ans;\nstruct node\n{\n\tint l , r;\n\tmutable int val;\n\tnode(int l = 0,int r = -1,int val = 0) : l(l) , r(r) , val(val) {}\n\tfriend bool operator < (const node &a,const node &b) {return a.l < b.l;}\n};\nset<node> s;\ninline IT split(int pos)\n{\n\tIT it = s.lower_bound(node(pos));\n\tif(it != s.end() && it -> l == pos) return it;\n\tit --;\n\tint l = it -> l , r = it -> r;int  val = it -> val;\n\ts.erase(it);\n\ts.insert(node(l,pos-1,val));\n\treturn s.insert(node(pos,r,val)).first;\n}\ninline void assign(int l,int r,int val)\n{\n\tIT itr = split(r+1) , itl = split(l) , it = itl;\n\tfor(;it != itr;it ++) ans -= (it -> r - it -> l + 1) * it -> val;\n\ts.erase(itl,itr);\n\ts.insert(node(l,r,val));\n\tans += (r - l + 1) * val;\n}\nint main()\n{\n\tn = read(); Q = read();\n\ts.insert(node(1,n,1)); s.insert(node(n+1,n+1,0)); ans = n;\n\tfor(int i = 1 , opt , l , r;i <= Q;i ++)\n\t{\n\t\tl = read(); r = read(); opt = read();\n\t\tif(opt & 1) assign(l,r,0);\n\t\telse assign(l,r,1);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1569753266,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff0c\u539f\u9898\u4f20\u9001\u95e8\uff1a[CF915E Physical Education Lessons](https://www.luogu.org/problemnew/show/CF915E)\n\n\u56e0\u4e3a\u539f\u9898\u4e2d\u7684\u64cd\u4f5c\u4e00\u5171\u53ea\u67093\u79cd\uff0c\u4e24\u79cd\u662f\u533a\u95f4\u8d4b\u503c\uff0c\u5269\u4e0b\u7684\u662f\u533a\u95f4\u548c\u3002\n\n\u5e8f\u5217\u7684\u533a\u522b\uff1a\u5de5\u4f5c\u65e5\uff0c\u975e\u5de5\u4f5c\u65e5\uff0c\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\n\n\u6ca1\u9519\uff0101\u5e8f\u5217\uff0c\u533a\u95f401\u8d4b\u503c\u64cd\u4f5c\uff0c\u53c8\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\n\n\u6ca1\u9519\uff01\u73c2\u6735\u8389\u6811\uff08ODT\uff09\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u5f88\u597d\u7684\u6ee1\u8db3\u6211\u4eec\u533a\u95f4\u8d4b\u503c\u9898\u7684\u8981\u6c42\uff0c\u7531\u4e8e\u73c2\u6735\u8389\u6811\u57fa\u4e8eset\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u6570\u636e\u968f\u673a\u60c5\u51b5\u4e0b\u4e3aO\uff08mlogn\uff09\uff0cm\u4e3a\u64cd\u4f5c\u6570\uff0cn\u4e3a\u5e8f\u5217\u957f\u5ea6\u3002\u73c2\u6735\u8389\u6811\u7684\u539f\u7406\u53ca\u5176\u5e94\u7528\u767e\u5ea6\u4e0a\u53ef\u4ee5\u5f88\u5bb9\u6613\u641c\u7d22\u5230\u3002\n\n\u5728\u533a\u95f4\u8d4b\u503c\u7684\u65f6\u95f4\u4f18\u5316\u540e\uff0c\u533a\u95f4\u548c\u4fbf\u662f\u66b4\u529b\u7684\u7edf\u8ba1\u4e86\uff0c\u4f46\u662f\u9700\u8981\u5728\u8d4b\u503c\u524d\u5148\u7edf\u8ba1\uff0c\u7edf\u8ba1\u975e\u5de5\u4f5c\u65e5\u518d\u7528\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u975e\u5de5\u4f5c\u65e5\uff0c\u4e0d\u7136\u4f1a\u56e0\u4e3a\u5e38\u6570\u539f\u56e0\u88ab\u5361\u3002\u8fd9\u4e2a\u53ef\u4ee5\u53c2\u8003\u7b14\u8005\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define IT set<node>::iterator\n#define LL long long\nusing namespace std;\ninline int read(){\n    char c=0;\n    int x=0,f=1;\n    for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n    for(;isdigit(c);c=getchar())x=(x<<3)+(x<<1)+c-'0';\n    x*=f;\n    return x;\n}\nstruct node{\n    int l,r;\n    mutable bool v;\n    node(int L,int R=-1,bool V=0):l(L),r(R),v(V) {}\n    bool operator<(const node& o) const\n    {\n        return l<o.l;\n    }\n};\nset<node> s;\nIT split(int pos){\n    IT it=s.lower_bound(node(pos));\n    if(it!=s.end()&&it->l==pos) return it;\n    --it;\n    int L=it->l,R=it->r;\n    bool V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V));\n    return s.insert(node(pos,R,V)).first;\n}\nint ans;\nvoid assign_val(int l,int r,bool val){\n    IT itr=split(r+1),itl=split(l),it=itl;\n    while(itl!=itr){\n    \tans=ans-itl->v*(itl->r-itl->l+1);\n    \t++itl;\n    }\n    s.erase(it,itr);\n    s.insert(node(l,r,val));\n    ans=ans+val*(r-l+1);   \n}\nint n,q,l,r,k;\nint main(){\n    n=read();\n    q=read();\n    ans=n;\n    s.insert(node(1,n,1));\n    s.insert(node(n+1,n+1,0));\n    for(register int i=1;i<=q;++i){\n    \tl=read(),r=read(),k=read();\n    \tassign_val(l,r,k-1);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1556462246,
        "uid": 85514,
        "name": "\u4e07\u4e07\u6ca1\u60f3\u5230",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF915E Physical Education Lessons"
    },
    {
        "content": "\u6700\u8fd1\u505a\u4e86\u5f88\u591a\u73c2\u6735\u8389\u6811\u7684\u9898\uff0c\u4e00\u770b\u8fd9\u9898\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff0c\u76f4\u63a5\u4e0a\u73c2\u6735\u8389\u6811\u3002\u533a\u95f4\u8d4b\u503c\u62100\u548c\u8d4b\u503c\u62101\u90fd\u662f\u73c2\u6735\u8389\u6811\u6700\u7b80\u5355\u7684\u64cd\u4f5c\u3002\n\n```\n#include<cstdio>\n#include<cctype>\n#include<set>\n\nint Read()\n{\n    int x=0;char c=getchar();\n    while(!isdigit(c))\n    {\n        c=getchar();\n    }\n    while(isdigit(c))\n    {\n        x=x*10+(c^48);\n        c=getchar();\n    }\n    return x;\n}\n\nstruct node\n{\n    int l,r;\n    mutable int v;\n    node(int L,int R=-1,int V=0):l(L),r(R),v(V) {}\n    bool operator <(const node& o) const\n    {\n        return l<o.l;\n    }\n};\n\nusing std::set;\nset<node> s;\n\nint sum;\n\n#define IT set<node>::iterator\nIT split(int pos)\n{\n    IT it=s.lower_bound(node(pos));\n    if (it!=s.end()&&it->l==pos)\n        return it;\n    --it;\n    int L=it->l,R=it->r;\n    int V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V?pos-L:0));\n    return s.insert(node(pos,R,V?R-pos+1:0)).first;\n}\n\nvoid assign(int l,int r,int val)\n{\n    IT itr=split(r+1),itl=split(l);\n    for(IT it=itl;it!=itr;++it)\n    {\n        sum-=it->v;\n    }\n    s.erase(itl,itr);\n    s.insert(node(l,r,val*(r-l+1)));\n    sum+=val*(r-l+1);\n}\n\nint main()\n{\n    register int n=Read(),q=Read();\n    s.insert(node(1,n,1));\n    sum=n;\n    int l,r;\n    while(q--)\n    {\n        l=Read(),r=Read();\n        assign(l,r,Read()-1);\n        printf(\"%d\\n\",sum);\n    }\n    return 0;\n}\n```",
        "postTime": 1538559060,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "# \u73c2\u6735\u8389\u6811\u677f\u5b50\u9898\n### \u4e0d\u4f1a\u73c2\u6735\u8389\u6811\u7684\u770b[yzhang\u5927\u4f6c\u7684\u535a\u5ba2](https://www.cnblogs.com/yzhang-rp-inf/p/9443659.html)\n#### \u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\u76f4\u63a5\u533a\u95f4\u63a8\u5e73\u5c31\u597d\u4e86\n\n\u6ce8\u610f\u4e00\u5b9a\u8981\u5728\u76f4\u63a5\u5728\u533a\u95f4\u8d4b\u503c\u65f6\u7edf\u8ba1\u7b54\u6848\uff0c\u4e0d\u7136\u4f1aTLE30\uff08~~\u8c03\u4e86\u5f88\u4e45~~\uff09\n\n#### AC\u7684\u7a0b\u5e8f:\n```cpp\n/*\nProblem : CF 915E\nAlgorithm : \u73c2\u6735\u8389\u6811 \nStatus : AC\n*/\n#include <bits/stdc++.h>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\nusing namespace std;\ntypedef long long ll;\n\nconst int INF = 0x3f3f3f3f;\n\nvoid read(int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\n\nvoid print(int x)\n{\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)print(x/10);\n    putchar(x%10+'0');\n}\n\nint n,q,sum;\n\nstruct Node{\n\tint l,r; //\u5de6\u53f3\u7aef\u70b9\n\tmutable int v;//\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\n\tNode(int x,int y = -1,int val = 0) : l(x),r(y),v(val) {}\n\tfriend bool operator < (const Node &x,const Node &y){\n\t\treturn x.l < y.l; //\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\n\t}\n};\n\nset<Node> s;\n\nauto split(int pos){ //\u5206\u88c2\u64cd\u4f5c\uff0c\u6211\u5077\u61d2\u7528\u4e86auto\n\tauto it = s.lower_bound(Node(pos));\n\tif(it != s.end() && it->l == pos)\n\t    return it;\n\tit--;\n\tint l = it->l,r = it->r,v = it->v;\n\ts.erase(it);\n\ts.insert(Node(l,pos - 1,v));\n\treturn s.insert(Node(pos,r,v)).first;\n}\n\nvoid assignVal(int l,int r,int val){ //\u533a\u95f4\u8d4b\u503c\n\tauto itr = split(r + 1),itl = split(l),it = itl; //\u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u8981\u5148split\u53f3\u7aef\u70b9\uff0c\u518dsplit\u5de6\u7aef\u70b9\uff0c\u4e0d\u7136\u4e0b\u6807\u4f1a\u51fa\u9519\n\tfor(;itl != itr;itl++)\n\t    sum -= itl->v * (itl->r - itl->l + 1); //\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\n\ts.erase(it,itr);\n\ts.insert(Node(l,r,val));\n\tsum += val * (r - l + 1); //\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\n}\n\nint main(){\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tread(n);\n\tread(q);\n\tsum = n;\n   \t//0\u8868\u793a\u975e\u5de5\u4f5c\u65e5\uff0c1\u8868\u793a\u5de5\u4f5c\u65e5\n\ts.insert(Node(1,n,1)); //\u5f00\u59cb\u5168\u4e3a\u5de5\u4f5c\u65e5\n\twhile(q--){\n\t\tint l,r,op;\n\t\tread(l);\n\t\tread(r);\n\t\tread(op);\n\t\tif(op == 1) \n\t\t    assignVal(l,r,0); //\u5c06l-r\u53d8\u4e3a\u975e\u5de5\u4f5c\u65e5\n\t\telse\n\t\t    assignVal(l,r,1); //\u5c06l-r\u53d8\u4e3a\u5de5\u4f5c\u65e5\n\t\tprint(sum);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1559376726,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    },
    {
        "content": "### \u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\n\u9898\u76ee\u6697\u793a\u4e86\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u60f3\u5230\u4e86\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4**\u975e\u5de5\u4f5c\u65e5**\u7684\u5929\u6570\u3002\n\n\u7136\u800c\u6211\u4eec\u518d\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u5929\u6570n\u7684\u8303\u56f4\u662f$1 \\le n \\le 10^9$\uff0c\u50cf\u666e\u901a\u7ebf\u6bb5\u6811\u4e00\u6837\u9884\u5904\u7406\u663e\u7136\u4f1a\u7206\u7a7a\u95f4\u3002\n\n\u5929\u65e0\u7edd\u4eba\u4e4b\u8def\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u4fee\u6539\u4e2a\u6570\uff0c$1\\le q \\le 3 \\cdot 10^5  $\uff0c \u6bd4\u5929\u6570\u5c11\u5f88\u591a\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\uff0c\u6211\u4eec\u9884\u5148\u5904\u7406\u597d\u7684\u7ebf\u6bb5\u6811**\u6709\u4e9b\u8282\u70b9\u5e76\u6ca1\u6709\u7528**\n\n\u80fd\u5426\u4f18\u5316\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u8fd9\u5c31\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6211\u4eec\u53ea\u8981\u5230\u7528\u67d0\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u624d\u5206\u914d\u4e00\u4e2a\u70b9\u7ed9\u5b83\uff0c\u8fd9\u6837\u4f7f\u5f97\u6211\u4eec\u4f7f\u7528\u7684\u7a7a\u95f4\u5927\u5927\u51cf\u5c11\u3002\u5176\u4f59\u7684\u4e0e\u666e\u901a\u7ebf\u6bb5\u6811\u5927\u81f4\u662f\u76f8\u540c\u7684\u3002\n\n\u6700\u540e\u518d\u8bf4\u4e00\u4e0b\uff0c\u672c\u9898\u7684\u6570\u7ec4\u8981\u5f00\u5927\u4e00\u4e9b\uff0c\u5426\u5219\u4f1a\u75af\u72c2$RE$\n\n\u4ee3\u7801\u5949\u4e0a~\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint tree[15001000],lson[15001000],rson[15001000],tag[15001000],d;\nlong long n,q,l,r,k;\nvoid freelazy(int x,int l,int r)\n{\n\tint mid=(l+r)/2;\n    if (tree[x])\n    {\n\t  tree[lson[x]]=(mid-l+1);\n\t  tree[rson[x]]=(r-(mid+1)+1);\n    }\n\telse\n\t{\n\t  tree[lson[x]]=0;\n\t  tree[rson[x]]=0;\n    }\n\ttag[lson[x]]=1;\n    tag[rson[x]]=1;\n    tag[x]=0;\n    //\u6b63\u5e38\u7684\u61d2\u6807\u8bb0\u4e0b\u653e\u64cd\u4f5c\n}\nvoid add(int x,int l,int r,int ql,int qr,int sd)\n{\n\t\n    if (ql<=l&&qr>=r)\n    {\n        tree[x]=(r-l+1)*sd;tag[x]=1;\n        return ;\n    }\t\n    if (!lson[x]) \n    {\n        d++;\n        lson[x]=d;\n    }\n    if (!rson[x]) \n    {\n        d++;\n        rson[x]=d;\n    }//\u8981\u7528\u5c31\u5f00\u70b9\n    //\u4e0a\u9762\u8981\u8bb0\u5f97\u8bb0\u5f55\u5de6\u53f3\u513f\u5b50\n\tif (tag[x]) freelazy(x,l,r);\n    int mid=(l+r)/2;\n    if (ql>mid)\n    {\n        add(rson[x],mid+1,r,ql,qr,sd);\n    }\n    else\n    if (qr<=mid)\n    {\n        add(lson[x],l,mid,ql,qr,sd);\n    }\n    else\n    {\n        add(lson[x],l,mid,ql,mid,sd);\n        add(rson[x],mid+1,r,mid+1,qr,sd);\n    }\n    tree[x]=tree[lson[x]]+tree[rson[x]];\n    //\u6b63\u5e38\u7684\u7ebf\u6bb5\u6811\u64cd\u4f5c\n}\nint main()\n{\n    cin>>n>>q;d=1;\n    for (int i=1;i<=q;i++)\n    {\n        scanf(\"%d%d%d\",&l,&r,&k);//\u672c\u9898\u7528cin\u3001cout\u4f1a\u6709\u8d85\u65f6\u98ce\u9669\n        if (l>r) swap(l,r);\n        if (k==1)\n        {\n            add(1,1,n,l,r,k);\n        }\n        else\n        {\n            add(1,1,n,l,r,0);\n        }\n        printf(\"%d\\n\",n-tree[1]);\n    }\n    return 0;\n}\n```",
        "postTime": 1542952883,
        "uid": 73990,
        "name": "fmj_123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF915E \u3010Physical Education Lessons\u3011"
    }
]