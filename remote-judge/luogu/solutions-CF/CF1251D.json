[
    {
        "content": "\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O\\left(Tn \\ log  \\ n+Tn  \\ log \\ s\\right)$\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u4e8c\u5206\u7b54\u6848+\u8d2a\u5fc3\n\n\u8bfb\u5b8c\u9898\u76ee\uff0c\u4e0d\u96be\u60f3\u5230\u4e8c\u5206\u7b54\u6848\u3002\u5927\u6982\u601d\u8def\uff1a\u4e8c\u5206\u4e2d\u4f4d\u6570\uff0c\u8d2a\u5fc3\u5224\u65ad\u3002\u95ee\u9898\u4e3b\u8981\u662f\u5982\u4f55\u8d2a\u5fc3\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u3002\n\n\u6211\u4eec\u628a\u7b2c$i$\u4e2a\u5458\u5de5\u7684\u85aa\u6c34\u8303\u56f4\u8868\u793a\u4e3a$num\\left[i\\right].l,num\\left[i\\right].r$\uff0c\u628a\u5f53\u524d\u4e2d\u4f4d\u6570\u8868\u793a\u4e3a$mid$\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5458\u5de5\u7684\u85aa\u6c34\u5206\u4e3a\u4e09\u7c7b\uff1a\n\n\u7b2c\u4e00\u7c7b\uff1a\u85aa\u6c34\u4e0a\u754c\u5c0f\u4e8e\u4e2d\u4f4d\u6570\uff0c\u5373$num\\left[i\\right].r<mid$\n\n\u7b2c\u4e8c\u7c7b\uff1a\u85aa\u6c34\u4e0b\u754c\u5927\u4e8e\u4e2d\u4f4d\u6570\uff0c\u5373$num\\left[i\\right].l>mid$\n\n\u7b2c\u4e09\u7c7b\uff1a\u85aa\u6c34\u4e0b\u754c\u5c0f\u4e8e\u7b49\u4e8e\u4e2d\u4f4d\u6570\uff0c\u4e0a\u754c\u5927\u4e8e\u7b49\u4e8e\u4e2d\u4f4d\u6570\uff0c\u5373$num\\left[i\\right].l<=mid$\u4e14$num\\left[i\\right].r>=mid$\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\uff0c\u85aa\u6c34\u4e00\u5b9a\u5c0f\u4e8e\u4e2d\u4f4d\u6570\uff0c\u4e3a\u4e86\u8282\u7701\u94b1\uff0c\u6211\u4eec\u652f\u4ed8$num\\left[i\\right].l$\u7684\u85aa\u6c34\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\uff0c\u85aa\u6c34\u4e00\u5b9a\u5927\u4e8e\u4e2d\u4f4d\u6570\uff0c\u4e3a\u4e86\u8282\u7701\u94b1\uff0c\u6211\u4eec\u652f\u4ed8$num\\left[i\\right].l$\u7684\u85aa\u6c34\n\n\u7136\u540e\u6211\u4eec\u901a\u8fc7\u7b2c\u4e09\u7c7b\u6765\u8c03\u8282\u5927\u4e8e\u7b49\u4e8e\u4e2d\u4f4d\u6570\u7684\u85aa\u6c34\u6570\u548c\u5c0f\u4e8e\u4e2d\u4f4d\u6570\u7684\u85aa\u6c34\u6570\uff0c\u8ba9\u5927\u4e8e\u7b49\u4e8e\u4e2d\u4f4d\u6570\u7684\u85aa\u6c34\u6570$>$\u5c0f\u4e8e\u4e2d\u4f4d\u6570\u7684\u85aa\u6c34\u6570\n\n\u4e8e\u662f\uff0c\u5bf9\u4e8e\u7b2c\u4e09\u7c7b\uff0c\u6211\u4eec\u8fd8\u9700\u652f\u4ed8\u85aa\u6c34\u5c0f\u4e8e\u4e2d\u4f4d\u6570\u7684\u6570\u91cf\u548c\u652f\u4ed8\u85aa\u6c34\u5927\u4e8e\u4e2d\u4f4d\u6570\u7684\u6570\u91cf\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u94b1\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e0b\u754c\u5c0f\u7684\u4e00\u90e8\u5206\uff0c\u652f\u4ed8\u4e0b\u754c$num\\left[i\\right].l$\uff0c\u5bf9\u4e8e\u5176\u4ed6\u90e8\u5206\uff0c\u652f\u4ed8\u4e2d\u4f4d\u6570$mid$\u3002\n\n\u5177\u4f53\u89e3\u91ca\u53ef\u770b\u4ee3\u7801\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\nusing namespace std;\nconst int N=2e5+5;\nstruct node{\n\tint l,r;\n}num[N];\nstruct cmp{\n\tinline bool operator () (const node&a,const node&b){\n\t\treturn a.l<b.l;\n\t}\n};\nint T,n,tot[N];\nlong long s;\ninline int check(long long mid){\n\tint cnt=0,cnt1=0,cnt2=0;//cnt\u4e3a\u7b2c\u4e09\u7c7b\u85aa\u6c34\u6570\uff0ccnt1\u4e3a\u7b2c\u4e00\u7c7b\u85aa\u6c34\u6570\uff0ccnt2\u4f4d\u7b2c\u4e8c\u7c7b\u85aa\u6c34\u6570\n\tlong long sum=0;\n\tfor (register int i=1;i<=n;++i)\n\t\tif (num[i].r<mid) sum+=num[i].l,++cnt1;//\u7b2c\u4e00\u7c7b\n\t\telse if (num[i].l>mid) sum+=num[i].l,++cnt2;//\u7b2c\u4e8c\u7c7b\n\t\telse tot[++cnt]=i;//\u7b2c\u4e09\u7c7b\u85aa\u6c34\u7f16\u53f7\u8bb0\u5f55\n\tif (cnt1>(n>>1)||cnt2>(n>>1)) return 0;//\u5982\u679c\u7b2c\u4e00\u7c7b\u6216\u7b2c\u4e8c\u7c7b\u85aa\u6c34\u6570\u5927\u4e8e\u6240\u6709\u85aa\u6c34\u6570\u7684\u4e00\u534a\uff0c\u5373\u5927\u4e8e\u6216\u5c0f\u4e8e\u4e2d\u4f4d\u6570\u7684\u6570\u5927\u4e8e\u4e00\u534a\uff0c\u80af\u5b9a\u4e0d\u6ee1\u8db3\n\tfor (register int i=1;i<=(n>>1)-cnt1;++i) sum+=num[tot[i]].l;//\u5bf9\u4e8enum[i].l\u5c0f\u7684\u90e8\u5206\n\tsum+=1ll*mid*((n>>1)+1-cnt2);//\u5176\u4ed6\u90e8\u5206\n\treturn sum<=s;\n}\nint main(){\n\tscanf(\"%d\",&T);\n\twhile (T--){\n\t\tscanf(\"%d%lld\",&n,&s);\n\t\tfor (register int i=1;i<=n;++i) scanf(\"%d%d\",&num[i].l,&num[i].r);\n\t\tsort(num+1,num+n+1,cmp());//\u5c06num[i].l\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\t\tlong long l=num[(n>>1)+1].l,r=1ll*s/((n>>1)+1);//\u4e8c\u5206\u4e0a\u4e0b\u754c\u81ea\u5df1\u6781\u7aef\u4f30\u8ba1\u4e00\u4e0b\n\t\twhile (l<=r){\n\t\t\tlong long mid=l+r>>1;\n\t\t\tcheck(mid)?l=mid+1:r=mid-1;\n\t\t}\n\t\tprintf(\"%lld\\n\",l-1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1578831277,
        "uid": 110420,
        "name": "Weakest_Konjac",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1251D \u3010Salary Changing\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u5b98\u65b9\u9898\u89e3\u8fd8\u7b80\u6d01\u7684\u4e8c\u5206\u601d\u8def\u3002\n\n\u89c2\u5bdf\u53d1\u73b0\u4e2d\u4f4d\u6570\u8d8a\u5927\uff0c\u53d1\u51fa\u7684\u5de5\u8d44\u8d8a\u591a\uff0c\u8fd9\u6ee1\u8db3\u4e8c\u5206\u6761\u4ef6\u3002\n\n\u5148\u9884\u5904\u7406\uff0c\u5c06\u6570\u636e\u6309\u7167 $l$ **\u4ece\u5927\u5230\u5c0f**\u6392\u5e8f\u3002\n\n\u7136\u540e\u4e8c\u5206\u4e2d\u4f4d\u6570 $x$\uff0c\u8d2a\u5fc3\u5730\u8ba1\u7b97\u6240\u53d1\u5de5\u8d44\u662f\u5426\u4e0d\u8d85\u8fc7 $s$\uff1a\n\n\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u6392\u5e8f\u540e\u7684\u6570\u636e\uff0c\u628a $r\\geq x$ \u7684\u627e\u51fa\u6765\u8ba1\u7b97\u989d\u5916\u53d1\u51fa\u7684\u5de5\u8d44 $max(0,x-l)$\uff0c\u76f4\u5230\u627e\u5230 $\\frac{n}{2}$ \u4e2a\u3002\u8fd9\u6837\u4fdd\u8bc1\u627e\u5230\u7684\u6570\u52a0\u4e0a\u989d\u5916\u53d1\u51fa\u7684\u5de5\u8d44\u90fd\u662f\u4e0d\u5c0f\u4e8e $x$ \u7684\uff0c\u540c\u65f6\u989d\u5916\u53d1\u51fa\u7684\u5de5\u8d44\u5c3d\u53ef\u80fd\u5730\u5c0f\u3002\n\n\u5bf9\u4e8e $r<x$ \u7684\u6570\u636e\uff0c\u6709 $l\\leq r<x$\uff0c\u6240\u4ee5\u8fd9\u4e9b\u6570\u636e\u5168\u90e8\u4f4d\u4e8e\u4e2d\u4f4d\u6570\u7684\u4e00\u4fa7\uff0c\u989d\u5916\u53d1\u5de5\u8d44\u4e0d\u4f1a\u5f71\u54cd\u4e2d\u4f4d\u6570\uff0c\u6545\u4e0d\u5904\u7406\u3002\n\nAC \u4ee3\u7801\u5982\u4e0b\uff1a\uff08Golang\uff09\n\n```go\npackage main\n\nimport (\n    \"bufio\"\n    . \"fmt\"\n    \"io\"\n    \"os\"\n    \"sort\"\n)\n\nfunc search(n int64, f func(int64) bool) int64 {\n    i, j := int64(0), n\n    for i < j {\n        h := (i + j) >> 1\n        if f(h) {\n            j = h\n        } else {\n            i = h + 1\n        }\n    }\n    return i\n}\n\nfunc solve(reader io.Reader, writer io.Writer) {\n    type pair struct{ l, r int64 }\n    in := bufio.NewReader(reader)\n    out := bufio.NewWriter(writer)\n    defer out.Flush()\n\n    var q, n int\n    for Fscan(in, &q); q > 0; q-- {\n        var money, baseCost int64\n        Fscan(in, &n, &money)\n        ps := make([]pair, n)\n        for i := range ps {\n            Fscan(in, &ps[i].l, &ps[i].r)\n            // \u9884\u5904\u7406\uff1a\u57fa\u7840\u5de5\u8d44\u4e4b\u548c\n            baseCost += ps[i].l\n        }\n        \n        // \u9884\u5904\u7406\uff1a\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n        sort.Slice(ps, func(i, j int) bool { return ps[i].l > ps[j].l })\n        \n        ans := search(money+1e9+1, func(x int64) bool {\n            cnt := 0\n            cost := baseCost\n            for _, p := range ps {\n            \t// \u628a r >= x \u7684\u627e\u51fa\u6765\uff08n/2 \u4e2a\uff09\n                if p.r >= x {\n                    cnt++\n                    if p.l < x {\n                    \t// \u8ba1\u7b97\u989d\u5916\u53d1\u51fa\u7684\u5de5\u8d44\n                        cost += x - p.l\n                    }\n                    if 2*cnt-1 == n {\n                        // \u80fd\u5426\u53d1\u51fa\u5de5\u8d44\n                        return !(cost <= money)\n                    }\n                }\n            }\n            // x \u53d6\u5927\u4e86\n            return !false\n        })\n        Fprintln(out, ans-1)\n    }\n}\n\nfunc main() {\n    solve(os.Stdin, os.Stdout)\n}\n```\n",
        "postTime": 1572254650,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1251D \u3010Salary Changing\u3011"
    },
    {
        "content": "### **\u672c\u9898\u505a\u6cd5\u4e3a\u4e8c\u5206+\u8d2a\u5fc3**\n\n\u9898\u610f\u4e3a\u5bfb\u627e\u4e00\u4e2a\u6700\u5927\u7684\u4e2d\u4f4d\u6570\uff08\u7ffb\u8bd1\u5df2\u6709\u5c31\u4e0d\u7ec6\u8bf4\u4e86\uff09\n\n\u505a\u6cd5\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u5458\u5de5\u7684\u5de5\u8d44\u533a\u95f4\uff0c\u6309\u7167\u5176\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f\uff08\u65b9\u4fbf\u4e8c\u5206\u67e5\u627e\u7b54\u6848\uff09\n\n\u663e\u7136\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\u540e$a[n/2+1].left$\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u4e00\u5b9a\u53ef\u4ee5\u6709$n/2$\u4e2a\u4eba\u53d1\u7684\u5de5\u8d44\u53ef\u4ee5\u6bd4\u8fd9\u4e2a\u4eba\u591a\uff0c\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u6709$n/2$\u4e2a\u4eba\u53d1\u7684\u5de5\u8d44\u6bd4\u8fd9\u4e2a\u4eba\u5c11\uff08\u4e00\u5f8b\u53d6$left$\uff09\u5c31\u53ef\u4ee5\u4e86\n\n\u7136\u540e\u5bf9\u4e8e\u53ef\u80fd\u7684\u7b54\u6848\u533a\u95f4$[a[n/2+1].left,s]$\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u9a8c\u8bc1\u5f53\u524d\u67e5\u627e\u5230\u7684\u503c\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\uff08\u5373\u4f7f\u5b83\u4e3a\u4e2d\u4f4d\u6570\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u627e\u5230$n/2$\u4e2a\u6bd4\u5b83\u5927\u6216\u8005\u4e0e\u5b83\u76f8\u7b49\u7684\u503c\uff09\uff0c\u81f3\u4e8e\u5982\u4f55\u9a8c\u8bc1\u8fd9\u4e2a\u503c\u662f\u5426\u7b26\u5408\u6761\u4ef6\u89c1\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\n#define mfor(i,a,b) for(register int i=(a);i<=(b);i++)\n#define mrep(i,a,b) for(register int i=(a);i>=(b);i--)\n#define Re register\ntypedef pair<int, int> intpair;\ntypedef pair<long long int, long long int> llpair;\ntypedef long long int LL;\n\nconst int maxn = 1000010;\n\nLL n;\nLL s;\nLL ans;\nint T;\nllpair a[maxn];\n\nbool operator >(llpair a, llpair b)\n{\n    return a.first > b.first;\n}\n\nbool check(LL x)\t//\u68c0\u67e5\u662f\u5426\u7b26\u5408\u6761\u4ef6\u7684\n{\n    LL t = (n >> 1) + 1;    //\u9700\u8981\u6ee1\u8db3\u6709t\u4e2a\u5de5\u8d44\u5927\u4e8e\u7b49\u4e8ex\n    LL sum = 0;\n    mfor(i, 1, n)\n    {\n        if (t && a[i].first <= x && x <= a[i].second)\n        {\n            //\u8fd9\u4e2a\u5de5\u4eba\u53ef\u4ee5\u88ab\u53d1x\u7684\u5de5\u8d44\n            //\u8d2a\u5fc3\u7b56\u7565\uff0c\u4e00\u5f8b\u53d6\u7b49\u4e8e\n            sum += x;\n            t--;\n        }//\u5982\u679ct\u5df2\u7ecf\u5f52\u96f6\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u66f4\u591a\u7684\u6bd4x\u5927\u7684\u503c\n        else\n        {\n            //\u8d2a\u5fc3\u7b56\u7565\uff0c\u4e0d\u80fd\u88ab\u53d1x\u7684\u5de5\u8d44\uff0c\u90a3\u5c31\u7ed9\u4ed6\u53d1\u80fd\u7ed9\u7684\u6700\u5c11\u5de5\u8d44\n            sum += a[i].first;\n            if (a[i].first >= x && t) t--;//\u5982\u679c\u8fd9\u4e2a\u6700\u5c11\u5de5\u8d44\u6bd4x\u5927\n            //\u56e0\u4e3a\u4e8c\u5206\u533a\u95f4\u5de6\u7aef\u4e00\u5b9a\u662f\u4e00\u4e2a\u53ef\u884c\u89e3\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u6709\u5c11\u4e8en/2\u4e2a\u4eba\u5de5\u8d44\u53ef\u4ee5\u6bd4x\u5c0f\u7684\u60c5\u51b5\n            }\n    }\n    if (t) return 0;    //\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0cx\u4e0d\u80fd\u662f\u4e2d\u4f4d\u6570\n    return sum <= s;    //\u5224\u65ad\u94b1\u662f\u5426\u8db3\u591f\n}\n\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    cin >> T;\n    while (T--)\n    {\n        ans = 0;\n        cin >> n >> s;\n        mfor(i, 1, n) cin >> a[i].first >> a[i].second;\n        sort(a + 1, a + n + 1, greater<llpair>());\n        LL l = a[(n >> 1) + 1].first, r = s;\n        ans = a[(n >> 1) + 1].first;\n        while (l <= r)\n        {\n            LL mid = (l + r) >> 1;\n            if (check(mid))\n            {\n                ans = mid;\n                l = mid + 1;\n                //\u6ee1\u8db3\u6761\u4ef6\uff0c\u7ee7\u7eed\u67e5\u8be2\u80fd\u4e0d\u80fd\u6709\u66f4\u5927\u7684ans\n            }\n            else r = mid - 1;\t//\u6ce8\u610f\u4e0d\u80fd\u5199while(l<r) \u8fd9\u91cc\u5199r=mid\uff0c\u4f1aWA\uff0c\u539f\u56e0\u8bf7\u81ea\u884c\u601d\u8003\n            //\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c0f\u4e00\u4e9b\u770b\u80fd\u5426\u7b26\u5408\u6761\u4ef6\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}",
        "postTime": 1572010904,
        "uid": 205228,
        "name": "thjkhdf12",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1251D \u3010Salary Changing\u3011"
    },
    {
        "content": "\u5f53\u65f6\u6bd4\u8f83\u665a\uff0c\u6240\u4ee5\u7761\u4e86\u3002\u3002\u3002\n\n\u7136\u800c\u5173\u6389\u7535\u8111\uff0c\u7a81\u7136\u60f3\u5230\uff1a\u8fd9\u9898\u4e0d\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u4e8c\u5206\u561b\u2026\u2026\n\n\u6211\u7684\u4e8c\u5206\u601d\u8def\uff1a\n\n\u9996\u5148\u6309\u53f3\u7aef\u70b9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u53d6\u51fa\u4e2d\u95f4\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9$y$\uff0c\u518d\u6309\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u53d6\u51fa\u4e2d\u95f4\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9$x$\u3002\u90a3\u4e48\uff0c\u5728\u533a\u95f4$[x,y]$\u5185\u7684\u4e2d\u4f4d\u6570\u4e00\u5b9a\u53ef\u884c\uff08\u4e0d\u8003\u8651\u94b1\u6570\uff09\u3002\n\n\u6b64\u65f6\u5bf9\u4e8e\u4e00\u4e2a\u4e2d\u4f4d\u6570\u6211\u4eec\u53ea\u9700\u5224\u65ad\u6700\u5c0f\u94b1\u6570$<=s$\u5373\u53ef\u3002\u90a3\u4e48\u5bf9\u4e8e\u53f3\u7aef\u70b9\u5c0f\u4e8e\u4e2d\u4f4d\u6570\u7684\u65e0\u8bba\u600e\u4e48\u53d6\u90fd\u53ea\u4f1a\u6bd4\u4e2d\u4f4d\u6570\u5c0f\uff0c\u80af\u5b9a\u53ea\u53d6\u5de6\u7aef\u70b9\uff08\u817e\u51fa\u66f4\u591a\u7684\u94b1\u7ed9\u5176\u4ed6\uff09\uff1b\u5de6\u7aef\u70b9\u6bd4\u4e2d\u4f4d\u6570\u6253\u7684\u540c\u7406\uff0c\u53ea\u53d6\u5de6\u7aef\u70b9\u3002\n\n\u5bf9\u4e8e\u8de8\u8d8a\u4e2d\u4f4d\u6570\u7684\uff0c\u6211\u4eec\u4e00\u90e8\u5206\u53bb\u5de6\u7aef\u70b9\uff0c\u4e00\u90e8\u5206\u53d6\u4e2d\u4f4d\u6570\uff0c\u53ea\u8981\u4fdd\u8bc1\u53d6\u5f97\u6700\u5c0f\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long ll;\ntemplate <typename T> inline void read (T& s) {\n\ts = 0;\n\tstatic char c = getchar ();\n\twhile (c < '0' || c > '9') c = getchar ();\n\twhile (c >= '0' && c <= '9') s = (s << 3) + (s << 1) + (c ^ 48), c = getchar ();\n\treturn ;\n}\n\nconst int N = 200003;\nint Q, n; ll m;\nstruct stu {\n\tint x, y;\n}s[N];\nint a[N];\n\ninline int cmp1 (const stu& p, const stu& q) {\n\treturn p.x < q.x;\n}\n\ninline int cmp2 (const stu& p, const stu& q) {\n\treturn p.y > q.y;\n}\n\ninline int pd (const int mid) {\n\tint i, gr = 0, lo = 0, xd = 0;\n\tll tot = 0;\n\tfor (i = 1; i <= n; ++i) {\n\t\tif (s[i].y < mid) tot += s[i].x, ++lo;\n\t\telse if (s[i].x > mid) tot += s[i].x, ++gr;\n\t\telse a[++xd] = i;\n\t} //\u8de8\u8d8a\u4e2d\u4f4d\u6570\u7684\u5b58\u5728a\u6570\u7ec4\u91cc\n\tint j = xd;\n\ti = 1;\n\twhile (i < j) {\n\t\tif (lo < gr) tot += s[a[i++]].x, ++lo; //\u5982\u679c\u5f53\u524d\u6bd4\u4e2d\u4f4d\u6570\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u66f4\u5c0f\uff0c\u5c31\u53bb\u5de6\u7aef\u70b9\u8f83\u5c0f\u7684\u8de8\u8d8a\u4e2d\u4f4d\u6570\u7684\n\t\telse tot += mid, --j, ++gr;\n\t}\n\treturn tot + mid <= m;\n}\n\nint main () {\n\tread (Q); while (Q--) {\n\t\tread (n), read (m);\n\t\tint i; for (i = 1; i <= n; ++i) read (s[i].x), read (s[i].y);\n\t\tint L, R, mid;\n\t\tsort (s + 1, s + n + 1, cmp2); R = s[n + 1 >> 1].y;\n\t\tsort (s + 1, s + n + 1, cmp1); L = s[n + 1 >> 1].x;\n\t\twhile (L <= R) { //\u4e8c\u5206\n\t\t\tmid = L + R >> 1;\n\t\t\tif (pd (mid)) L = mid + 1;\n\t\t\telse R = mid - 1;\n\t\t}\n\t\tprintf (\"%d\\n\", L - 1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1572003518,
        "uid": 31193,
        "name": "\u68a7\u6850\u706f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1251D \u3010Salary Changing\u3011"
    }
]