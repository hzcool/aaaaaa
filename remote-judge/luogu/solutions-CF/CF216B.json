[
    {
        "content": "# Solution\n\n\u770b\u5230\u795e\u7287\u4eec\u90fd\u7528 **dfs** \uff0c\u90a3\u6211\u5c31\u5199\u4e00\u7bc7\u5e76\u67e5\u96c6\u7684\u9898\u89e3\u5427\u3002\n\n\u6211\u4eec\u5c06\u4e92\u76f8\u4ec7\u89c6\u7684\u4eba\u8fde\u8fb9\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u5b66\u751f\u6700\u591a\u4ec7\u89c6\u4e24\u4e2a\u4eba\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0\u4e09\u79cd\u60c5\u51b5\u3002\n\n- \u70b9\n\n- \u94fe\n\n- \u73af\n\n\u7531\u4e8e\u8981\u5206\u6210\u4e24\u961f\u4eba\u6570\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u5c06\u4e00\u79cd\u60c5\u51b5\u62c6\u6210\u4e24\u534a\u5c31\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\n\n- \u5b64\u70b9\u7684\u4e2a\u6570\u4e3a\u5947\u6570\n\n- \u94fe\u957f\u4e3a\u5947\u6570\n\n- \u73af\u957f\u4e3a\u5947\u6570\n\n\u5f88\u663e\u7136\u70b9\u548c\u94fe\u7684\u60c5\u51b5\u53ef\u4ee5\u5408\u5e76\u8003\u8651\uff08\u94fe\u62c6\u6210\u4e24\u534a\uff0c\u4e00\u534a\u4e3a\u5947\u6570\uff0c\u4e00\u534a\u4e3a\u5076\u6570\uff0c\u5c06\u5b64\u70b9\u63d2\u5165\u5947\u6570\u90a3\u4e00\u534a\uff09\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\uff0c\n\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5224\u73af\uff0c\u6700\u540e\u7279\u5224\u94fe\u548c\u70b9\uff0c\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u9644\u4e0a\u4e8c\u5341\u884c\u6781\u7b80\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,fa[110],ans,siz[110];\ninline int find(int x){\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)fa[i]=i,siz[i]=1;//\u5e76\u67e5\u96c6\u9884\u5904\u7406\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tint fx=find(x);\n\t\tint fy=find(y);\n\t\tif(fx!=fy)fa[fy]=fx,siz[fx]+=siz[fy];//\u5408\u5e76\u96c6\u5408\n\t\telse if(siz[fx]&1)ans++;//\u5982\u679c\u51fa\u73b0\u73af\u7684\u60c5\u51b5\n\t}\n\tif((n-ans)&1)ans++;//\u7279\u5224\u94fe\u548c\u70b9\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1624588431,
        "uid": 120010,
        "name": "CaiXY06",
        "ccfLevel": 6,
        "title": "solution-cf216b"
    },
    {
        "content": "## Problem\n\n[CF216B Forming Teams](https://www.luogu.com.cn/problem/CF216B)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n$n$ \u4e2a\u4eba\u6709 $m$ \u6761\u5173\u7cfb\uff0c\u6bcf\u6761\u5173\u7cfb\u8868\u793a\u4e24\u4e2a\u4eba\u4e92\u4e3a\u654c\u5bf9\u3002\u6bcf\u4e2a\u4eba\u6700\u591a\u6709\u4e24\u4e2a\u654c\u5bf9\u7684\u4eba\u3002\u95ee\u6700\u591a\u6709\u591a\u5c11\u4eba\u4f7f\u5f97\u8fd9\u4e9b\u4eba\u53ef\u4ee5\u5206\u6210**\u4eba\u6570\u76f8\u7b49**\u4e24\u7ec4\u4e14\u6bcf\u7ec4\u7684\u4eba\u4e92\u76f8\u4e0d\u4e3a\u654c\u5bf9\u5173\u7cfb\u3002\n\n**\u8f93\u51fa\u4e0d\u80fd\u5206\u7ec4\u7684\u4eba\u6570\u3002**\n\n## Solution\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u4eba\u5f53\u505a\u70b9\uff0c\u5173\u7cfb\u5f53\u505a\u8fb9\u3002\u90a3\u4e48\u70b9\u7684\u5ea6\u6570\u6700\u591a\u662f $2$\u3002  \n\u6240\u4ee5\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u90fd\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff0c\u5206\u522b\u662f\u70b9\u3001\u94fe\u3001\u73af\u3002\n\n\u5bf9\u4e8e\u70b9\uff1a\u663e\u7136\u53ef\u4ee5\u4efb\u610f\u5206\u7ec4\u3002  \n\u5bf9\u4e8e\u94fe\uff1a\u4ea4\u53c9\u5206\u7ec4\uff0c\u5373\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\u5206\u5230\u4e0d\u540c\u7684\u7ec4\u3002  \n\u5bf9\u4e8e\u73af\uff1a\u5076\u73af\u4e0e\u94fe\u76f8\u540c\u3002\u5947\u73af\u5fc5\u5b9a\u4f1a\u6709\u4e00\u4eba\u65e0\u6cd5\u53c2\u4e0e\u5206\u7ec4\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u5e26\u6743\u5e76\u67e5\u96c6\u8bb0\u5f55\u96c6\u5408\u5927\u5c0f\uff0c\u5408\u5e76\u8fc7\u7a0b\u4e2d\u9047\u5230\u73af\u5224\u65ad\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0c\u7531\u4e8e\u8981\u6c42\u4eba\u6570\u76f8\u7b49\uff0c\u6240\u4ee5\u6700\u7ec8\u8fd8\u8981\u5224\u65ad\u5269\u4f59\u4eba\u7684\u5947\u5076\u6027\u3002\n\n## Code\n\n```cpp\n//Think twice,code once.\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,m,ans;\nstruct bin\n{\n\tint f[105],sz[105];\n\tbin(){for(int i=1;i<=100;i++) f[i]=i,sz[i]=1;return ;}\n\tint find(int x){return f[x]==x?x:f[x]=find(f[x]);}\n\tint query(int x,int y){return find(x)==find(y);}\n\tvoid merge(int x,int y)\n\t{\n\t\tif(query(x,y)&&sz[find(x)]%2) ans++;\n\t\tsz[find(y)]+=sz[find(x)];f[find(x)]=find(y);\n\t\treturn ;\n\t}\n}b;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tb.merge(u,v);\n\t}\n\tif((n-ans)%2) ans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1644066904,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF216B \u3010Forming Teams\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF216B)\n\n\u8fd9\u9053\u9898\u6211\u7684\u601d\u8def\u662f\u5e76\u67e5\u96c6\u3002\u6211\u4eec\u77e5\u9053\u5728\u52a0\u5165\u8def\u5f84\u538b\u7f29\u4f18\u5316\u540e\u5e76\u67e5\u96c6\u7684\u590d\u6742\u5ea6\u5927\u6982\u4e3a $O(\\log^* n)$\u3002\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n> \u5bf9\u4e8e $\\log^* x$ \u7684\u5b9a\u4e49\uff0c\u5982\u4e0b\uff1a\n> >- $x \\le 1:0$\n> > - $x > 1:1+\\log^*(\\log x)$\n\n\u6211\u4eec\u5c06\u4e92\u76f8\u4ec7\u89c6\u7684\u4eba\u8fde\u8fb9\u3002\u6839\u636e\u9898\u76ee\u6240\u8ff0\uff0c\u6bcf\u4e2a\u5b66\u751f\u4ec7\u89c6\u7684\u654c\u4eba\u6700\u591a\u6709\u4e24\u4e2a\uff0c\u6bcf\u4e2a\u8054\u901a\u5b50\u5757\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff0c\u53c8\u7531\u4e8e\u8981\u5206\u6210\u4eba\u6570\u4e00\u6837\u7684\u4e24\u961f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u6bcf\u4e00\u79cd\u60c5\u51b5\u62c6\u6210\u4e24\u534a\uff0c\u6211\u4eec\u8fdb\u884c\u5206\u8ba8\uff1a\n\n- \u70b9\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u957f\u4e3a $1$ \u7684\u94fe\u3002\n- \u94fe\uff0c\u94fe\u957f\u4e3a\u5076\u6570\u662f\u53ef\u4ee5\u81ea\u7136\u5730\u62c6\u6210\u4e24\u961f\uff0c\u4e3a\u5947\u6570\u65f6\u5c06\u4e00\u4e2a\u70b9\u5f52\u5230\u5c11\u4e00\u4eba\u7684\u90a3\u961f\u5373\u53ef\u3002\n- \u73af\uff0c\u5f53\u73af\u957f\u4e3a\u5076\u6570\u65f6\u7c7b\u4f3c\u4e8e\u94fe\uff0c\u4e5f\u5f88\u7b80\u5355\u3002\n\n\u63a5\u4e0b\u6765\u8ba8\u8bba\u73af\u957f\u4e3a\u5947\u6570\u7684\u60c5\u51b5\u3002\u5728\u6b64\u65f6\uff0c\u603b\u6709\u4e00\u4eba\u4f1a\u8981\u201c\u5750\u677f\u51f3\u201d\uff0c\u6240\u4ee5\u6b64\u65f6\u5c06\u7b54\u6848\u52a0\u4e00\u5373\u53ef\u3002\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nnamespace QIO\n{\n    // ...\n}\nusing QIO::fixed;\nusing QIO::setPrecision;\nusing QIO::endline;\n\nusing ll=long long;\n\n#define rep(i, a, n) for(int i=(a); i<=(n); ++i)\n#define per(i, a, n) for(int i=(n); i>=(a); --i)\n\nconst int inf=0x3f3f3f3f;\nconst long long infll = 0x3f3f3f3f3f3f3f3f;\n\n#define pb push_back\n#define mp make_pair\nusing pii = pair<int, int>;\nusing VI = vector<int>;\n\n#define fi first\n#define se second\n\n#define all(x) x.begin(), x.end()\n#define sz(x) ((int)x.size())\n\nQIO::InputStream lym;\nQIO::OutputStream hmz;\n\nint n, m, fa[107], ans, siz[107], a, b;\n\nint find(int x)\n{\n    return fa[x]==x ? x : fa[x]=find(fa[x]);\n}\n\ninline void merge(int a, int b)\n{\n    int fx=find(a), fy=find(b);\n    if(fx != fy) fa[fy]=fx, siz[fx]+=siz[fy];\n    else if(siz[fx]%2==1) ++ans;// \u6211\u4eec\u7528\u8fd9\u884c\u6765\u5224\u5947\u73af\n}\n\nsigned main()\n{\n    const char endl='\\n';\n\n    cin >> n >> m;\n    for(int i=1; i<=n; ++i) fa[i]=i, siz[i]=1;\n\n    for(int i=1; i<=m; ++i)\n    {\n        cin>> a >> b;\n        merge(a, b);\n    }\n\n    if((n-ans)&1) ++ans;// \u6700\u540e\u8fd8\u5269\u5947\u6570\u4e2a\u4eba\uff0c\u6709\u4e00\u4e2a\u4eba\u8981\u201c\u5750\u677f\u51f3\u201d\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1639473017,
        "uid": 344700,
        "name": "calabash_love_hmz",
        "ccfLevel": 6,
        "title": "CF216B Forming Teams \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u7ffb\u8bd1\u4e0d\u5168\uff0c\u5c11\u4e86\u4e00\u4e2a\u6761\u4ef6\uff1a\u6bcf\u4e2a\u5b66\u751f**\u6700\u591a\u53ea\u67092\u4e2a**\u654c\u4eba\u3002\n\n\u628a\u6bcf\u4e2a\u5b66\u751f\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u6bcf\u6761\u4ec7\u89c6\u5173\u7cfb\u770b\u505a\u8fb9\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5b66\u751f\u6700\u591a\u53ea\u67092\u4e2a\u654c\u4eba\uff0c\u5373\u6bcf\u4e2a\u70b9\u6700\u591a\u6709\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u654c\u5bf9\u5173\u7cfb\u53ea\u80fd\u662f**\u73af\u5f62**\u6216**\u94fe\u5f62**\u3002\n\n\n---\n\u6240\u4ee5\u6240\u6709\u5b66\u751f\u5206\u62103\u7c7b\uff1a\n\n1. \u6ca1\u6709\u654c\u4eba\u7684\n\n2. \u5728\u94fe\u5f62\u654c\u5bf9\u5173\u7cfb\u7684\n\n3. \u5728\u73af\u5f62\u654c\u5bf9\u5173\u7cfb\u7684\n\n---\n- **\u6ca1\u6709\u654c\u4eba\u7684**\n\n\u8bbe\u8fd9\u7c7b\u5b66\u751f\u7684\u4eba\u6570\u4e3a$num_1$\n\n\uff081\uff09\u5f53$num_1$\u4e3a\u5076\u6570\u65f6,\u5219\u6b63\u597d\u5206\u6210\u4e24\u961f\n\n\uff082\uff09\u5f53$num_1$\u4e3a\u5947\u6570\u65f6\uff0c\u6709\u4e00\u540d\u5b66\u751f\u5750\u677f\u51f3\uff08\u56e0\u4e3a\u4e24\u961f\u4eba\u6570\u8981\u76f8\u7b49\uff09\n\n---\n- **\u5728\u94fe\u5f62\u654c\u5bf9\u5173\u7cfb\u7684**\n\n\u8bbe\u94fe\u957f\u4e3a$num_2$\n\n\uff081\uff09\u5f53$num_2$\u4e3a\u5076\u6570\u65f6\uff1a\u5982$(1-2-3-4)$,\u5219 1\u30013\u53bbA\u961f\uff0c2\u30014\u53bbB\u961f\uff0c\u6ca1\u6709\u4eba\u5750\u677f\u51f3\u3002\n\n\uff082\uff09\u5f53$num_2$\u4e3a\u5947\u6570\u65f6\uff1a\u5982$(1-2-3)$\uff0c\u5219 1\u30013\u53f7\u53bbA\u961f\uff0c\u5f53$num_1$\u4e3a\u5947\u6570\u65f6\uff0c2\u53f7\u4e0e\u6ca1\u6709\u654c\u4eba\u7684\u90a3\u4e00\u4e2a\u53ef\u4ee5\u5230B\u961f\uff0c\u5f53$num_1$\u4e3a\u5076\u6570\u65f6\uff0c2\u53f7\u53ea\u80fd\u5750\u677f\u51f3\u3002\n\n\u603b\u7ed3\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6ca1\u6709\u654c\u4eba\u7684\u548c\u5728\u94fe\u5f62\u654c\u5bf9\u5173\u7cfb\u7684\u5b66\u751f\u4e00\u8d77\u8003\u8651\uff08**\u5373\u5f53$num_1+num_2\\%=0$\u65f6\u6709\u4e00\u4f4d\u5b66\u751f\u5750\u677f\u51f3\uff0c\u5426\u5219\u6ca1\u6709**\uff09\n\n---\n\u6700\u540e\n- **\u5728\u73af\u5f62\u654c\u5bf9\u5173\u7cfb\u7684**\n\n\u8bbe\u73af\u957f\u4e3a$num_3$\n\n\uff081\uff09\u5f53$num_3$\u4e3a\u5076\u6570\u65f6\uff1a\u5982$(1-2-3-4-1)$,\u52191\u30013\u53bbA\u961f\uff0c2\u30014\u53bbB\u961f\n\n\uff082\uff09\u5f53$num_3$\u4e3a\u5947\u6570\u65f6\uff1a\u5982$(1-2-3)$,\u52191\u53bbA\u961f\uff0c2\u53bbB\u961f\uff0c3\u7531\u4e8e\u548c1\u30012\u90fd\u4e3a\u654c\u5bf9\u5173\u7cfb\uff0c\u6240\u4ee5\u53ea\u80fd\u5750\u677f\u51f3\n\n\u6240\u4ee5**\u6bcf\u51fa\u73b0\u4e00\u4e2a\u73af\u957f\u4e3a\u5947\u6570\u7684\u5c31\u591a\u4e00\u4e2a\u5750\u677f\u51f3\u7684**\n\n----\n\u6240\u4ee5\u5750\u677f\u51f3\u7684\u5b66\u751f\u6570\u5c31\u7b49\u4e8e**\u5947\u73af\u7684\u4e2a\u6570**\uff0c\u5982\u679c**\u4e0d\u5728\u73af\u4e2d\u7684\u5b66\u751f\u4e2a\u6570\u4e3a\u5947\u6570**\u5219\u5750\u677f\u51f3\u7684\u5b66\u751f\u5c31**\u518d\u591a1\u4e2a**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e3 + 10;\nint n, m, cnt, root, sum, res;\nint head[MAXN];\nbool vis[MAXN];\nstruct node {\n\tint prev, v;\n} e[MAXN << 1];\nvoid add (int u, int v)\n{\n\te[++cnt].v = v;\n\te[cnt].prev = head[u];\n\thead[u] = cnt;\n}\nbool dfs (int u, int fa)\n{\n\tif (u == root && fa != -1) return true;\n\tvis[u] = 1;\n\tfor (int i = head[u]; i; i = e[i].prev)\n\t{\n\t\tint v = e[i].v;\n\t\tif (v == fa) continue;\n\t\tsum++; // \u7edf\u8ba1\u73af\u957f\n\t\tif (dfs (v, u)) return true;\n\t}\n\treturn false;\n}\nint main ()\n{\n\tios :: sync_with_stdio (0), cin.tie (0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tadd (u, v);\n\t\tadd (v, u);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (!vis[i])\n\t\t{\n\t\t\troot = i, sum = 0;\n\t\t\tif (dfs (i, -1)) // \u5224\u65ad\u662f\u5426\u4e3a\u73af\n\t            if (sum & 1) // \u5224\u65ad\u73af\u957f\u662f\u5426\u4e3a\u5947\u6570\n\t\t\t\t\tres++;\n\t\t}\n\t}\n\tif ((n - res) & 1) // \u5224\u65ad\u4e0d\u5728\u73af\u4e2d\u7684\u5b66\u751f\u6570\u662f\u5426\u4e3a\u5947\u6570\n    \tres++;\n\tcout << res << endl;\n\treturn 0;\n}\n```",
        "postTime": 1619680772,
        "uid": 390254,
        "name": "Z_M__",
        "ccfLevel": 6,
        "title": "CF216B\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053dfs\u7684\u9898\u76ee\u3002                        \n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u601d\u8def\u5206\u6790\u4e00\u4e0b  \n\u601d\u8def:  \n\u6211\u4eec\u53d1\u73b0\u53ea\u6709\u5947\u6570\u73af\u548c\u4eba\u6570\u7684\u5947\u5076\u624d\u4f1a\u5f71\u54cd\u5230\u7ed3\u679c\u7684\u4eba\u6570\uff0c\u56e0\u4e3a\u5728\u5947\u6570\u73af\u4e2d\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u6536\u5230\u53cc\u65b9\u7684~~\u6b67\u89c6~~\uff0c\u5c31\u5fc5\u987b\u505a\u677f\u51f3\uff0c\u7136\u800c\u4e00\u6761\u5947\u6570\u94fe\u7684\u8bdd\u6ca1\u6709\u4eba\u4f1a\u53d7\u5230~~\u6b67\u89c6~~\u4f46\u4f1a\u56e0\u4eba\u6570\u7684\u5947\u5076\u5f71\u54cd\u5230\u7ed3\u679c\u3002\t\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff1a\t\n```cpp\n#include<bits/stdc++.h>\n#define vi vector<int>\n#define pb push_back\n#define op pop_back\nusing namespace std;\nconst int N=105;\nvi v[N],c;\nset<vi>s;\nbool visit[N];\nint n,m;\ninline void dfs(int now,int root,bool begin,bool check)\n{\n\tif(now==root&&!begin&&check)\n\t{\n\t\tvi c2=c;\n\t\tsort(c2.begin(),c2.end());\n\t\ts.insert(c2);\n\t\treturn;\n\t}\n\tfor(int i=0;i<v[now].size();i++)\n\t{\n\t\tif(!visit[v[now][i]])\n\t\t{\n\t\t\tc.pb(v[now][i]);\n\t\t\tvisit[v[now][i]]=true;\n\t\t\tdfs(v[now][i],root,0,!check);\n\t\t\tc.op();\n\t\t\tvisit[v[now][i]]=false;\n\t\t}\n\t}\n}\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\ta--,b--;\n\t\tv[a].pb(b);\n\t\tv[b].pb(a);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tmemset(visit,false,sizeof(visit));\n\t\tc.clear(),dfs(i,i,1,0);\n\t}\n\tcout<<s.size()+((n-s.size())%2==1);\n}\n```",
        "postTime": 1545230631,
        "uid": 108875,
        "name": "CHENRUIJIE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF216B \u3010Forming Teams\u3011"
    },
    {
        "content": "```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint t[111],s[111],a,b,c,d,x,y;\nint n=0;\n\nint f(int p)\n{\n\treturn p==t[p] ? p : f(t[p]);\n}\n\nint main()\n{\n\tcin>>a>>b;\n\tfor(int i=0;i<=a;i++)\n\t{\n\t\tt[i]=i,s[i]=1;\n\t}\n\n\twhile(b--)\n\t{\n\t\tcin>>c>>d;\n\t\tx=f(c),y=f(d);\n\t\tif(x==y&&(s[x]&1))\n\t\t\tn++;\n\t\tt[y]=t[x],s[x]+=s[y];\n\t}\n\n\tif((a-n) & 1)\n\t{\n\t\tn++;\n\t}\n\tcout<<n;\n\treturn 0;\n}\n\n```",
        "postTime": 1544352483,
        "uid": 43664,
        "name": "Oscar12345",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF216B \u3010Forming Teams\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u539f\u6765\u7684\u7ffb\u8bd1\u6f0f\u4e86\u5f88\u91cd\u8981\u7684\u6761\u4ef6\u3002\u5dee\u8bc4\u3002\n\n### \u6b63\u6587\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ed9\u5b9a\u4e00\u4e2a**\u7531\u94fe\u548c\u73af\u7ec4\u6210\u7684**\u65e0\u5411\u56fe\uff0c\u6d82\u4e0a\u7ea2\u84dd\u4e24\u8272\uff0c\u76f8\u90bb\u7684\u4e0d\u80fd\u6d82\u540c\u6837\u7684\u989c\u8272\uff0c\u7ea2\u8272\u84dd\u8272\u6570\u76ee\u9700\u8981\u76f8\u540c\uff0c\u6c42\u6700\u5c11\u5269\u4e0b\u51e0\u4e2a\u4e0d\u6d82\u8272\u3002\uff08\u5355\u72ec\u7684\u4e00\u4e2a\u7ed3\u70b9\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u94fe\uff09\n\n\u53ef\u4ee5\u8fd9\u6837\u601d\u8003\uff1a\n\n\u5c06\u8fde\u901a\u5757\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u628a\u6240\u6709\u7684\u94fe\u9996\u5c3e\u76f8\u8fde\uff0c\u5047\u8bbe\u8fd9\u4e2a\u94fe\u7684\u957f\u5ea6\u4e3a $L$ \uff0c\u663e\u7136\u53ef\u4ee5\u9009\u4e2d $2\\times\\lfloor\\frac{L}{2}\\rfloor=L-(L\\mod 2)$ \u4e2a\u6d82\u8272\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u5076\u73af\u53ef\u4ee5\u5168\u90e8\u6d82\u8272\uff0c\u5947\u73af\u53ef\u4ee5\u53ea\u5269\u4e0b\u4e00\u4e2a\u4e0d\u6d82\u8272\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sk12ym7m.png)\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u662f\u7ed3\u8bba\u9898\u3002\n\n### Code\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#include<vector>\nusing namespace std;\n#define rei register int\n#define il inline\nvoid readln(int&I){\n    int f=1;I=0;char C=getchar();\n    while(!isdigit(C))(C=='-')?(f=-1):0,C=getchar();\n    while (isdigit(C))I=I*10+C-'0',C=getchar();I*=f;\n}\nbool czh;\nstruct graph{//\u56fe\n    int n,m;\n    struct edge{\n        int fr,to,nxt;\n        edge(int rf,int ot,int nx){fr=rf,to=ot,nxt=nx;}\n        edge(){}\n    };\n    vector<edge>e;vector<int>fir;\n    void add(int u,int v){\n        e.push_back(edge(u,v,fir[u])),fir[u]=e.size()-1;}\n    void read(){read(0);}\n    void read(bool b){\n        readln(n),readln(m);int iu,iv;\n        for(rei ei=0;ei<=n;ei++)fir.push_back(-1);\n        for(rei ei=1;ei<=m;ei++)readln(iu),readln(iv),add(iu,iv)\n        ,(b?add(iv,iu):(void)0);\n    }//\u94fe\u5f0f\u524d\u5411\u661f\u6a21\u677f\n    vector<int>v;\n    void dfsinit(){for(rei i=0;i<=n;i++)v.push_back(0);}\n    int dfscount(int root,int x,int fa){\n        int res=1;if(v[x])return 0;else v[x]=1;\n        for(rei i=fir[x];i!=-1;i=e[i].nxt){\n            if(e[i].to==root)czh|=(fa!=root);\n            else if(e[i].to!=fa)res+=dfscount(root,e[i].to,x);\n        }\n        return res;\n    }\n    int dfscount(int root){czh=0;return dfscount(root,root,-1);}//\u83b7\u5f97\u8fde\u901a\u5757\u7684\u5927\u5c0f\n    //dfs\u6a21\u677f\n    graph(){}graph(int xn,int xm){n=xn,m=xm;}\n};int cnt;\nint main(){\n    graph g;g.read(1),g.dfsinit();int ans=0,nh=0;\n    for(rei i=1;i<=g.n;i++)\n        (g.v[i])?0:(cnt=g.dfscount(i),czh?(ans+=(cnt&1)):(nh+=cnt));\n    //\u5982\u679c\u662f\u73af\uff0c\u90a3\u4e48\u7b54\u6848\u52a0\u4e0a(\u5927\u5c0f&1)\uff0c\u5982\u679c\u662f\u94fe\uff0c(\u603b\u957f\u5ea6+=\u957f\u5ea6)\n    printf(\"%d\\n\",ans+(nh&1));\n}\n```",
        "postTime": 1621655771,
        "uid": 217300,
        "name": "Error_Eric",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF216B \u3010Forming Teams\u3011"
    }
]