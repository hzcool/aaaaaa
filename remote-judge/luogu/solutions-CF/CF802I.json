[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n $T$ \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \uff0c\u6c42 $\\sum_p cnt(s,p)^2$ \uff0c\u5176\u4e2d $cnt(s,p)$ \u8868\u793a $p$ \u5728 $s$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u5bf9 $s$ \u8fdb\u884c\u540e\u7f00\u6392\u5e8f\u3002\u5bf9\u5b57\u7b26\u4e32 $s$ \u6765\u8bf4\uff0c\u5176\u4efb\u610f\u540e\u7f00\u7684\u524d\u7f00\u90fd\u662f\u5176\u5b50\u4e32\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u4e32\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $2\\times ($ \u5728\u8fd9\u4e4b\u524d\u5176\u51fa\u73b0\u7684\u6b21\u6570 $)+1$ \u3002\n\n\u6211\u4eec\u6240\u6c42\u7684\u7b54\u6848\u4e3a\n\n$Ans=\\sum_{i=1}^n \\sum_{pre(sa_i)} 2\\times($ \u5728\u8fd9\u4e4b\u524d\u8be5\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570 $)+1$\n\n$=\\sum_{i=1}^n \\sum_{pre(sa_i)} 1+2\\times \\sum_{i=1}^n \\sum_{pre(sa_i)} ($ \u5728\u8fd9\u4e4b\u524d\u8be5\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570 $)$\n\n$=\\frac {n\\times(n+1)} 2+2\\times \\sum_{i=1}^n \\sum_{pre(sa_i)} ($ \u5728\u8fd9\u4e4b\u524d\u8be5\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570 $)$\n\n\u89c2\u5bdf\u6700\u540e\u8fd9\u4e2a\u7ed3\u6784\uff0c\u5982\u679c\u6211\u4eec\u80fd\u6c42\u51fa\u5bf9\u540e\u7f00\u6392\u5e8f\u4e2d\u7684\u4e00\u4e2a\u540e\u7f00\u4e2d\u4e00\u4e2a\u524d\u7f00 $p$ \u7684\u7b54\u6848\uff0c\u6211\u4eec\u5c31\u80fd\u6c42\u51fa\u8fd9\u4e2a\u7b54\u6848\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u8fd9\u4e4b\u524d $p$ \u51fa\u73b0\u7684\u6b21\u6570\u5373\u4e3a\u4e4b\u524d\u8fde\u7eed\u7684 $h$ \u6570\u7ec4\u7684\u503c\u5927\u4e8e\u7b49\u4e8e $|p|$ \u7684\u957f\u5ea6\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u6240\u6c42\u7b54\u6848\u4e3a\n\n$Ans=\\frac {n\\times(n+1)} 2+2\\times \\sum_{i=2}^n \\sum_{j=2}^{i-1} rmqmin(j,i)$\n\n$rmqmin(i,j)$ \u5373\u4e3a $\\min\\{h_i,h_{i+1},...,h_j\\}$ \u3002\n\n\u66b4\u529b\u8ba1\u7b97\u663e\u7136\u592a\u6162\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u5341\u5206\u6709\u6280\u5de7\u7684\u5355\u8c03\u6808\u7ef4\u62a4\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5355\u8c03\u6808\u4e2d\u5b58\u7684\u662f\u53f3\u7aef\u70b9\u5230\u5f53\u524d\u503c\u7684\u8fde\u7eed\u6700\u5c0f\u503c\u4e92\u4e0d\u76f8\u540c\u7684\u51e0\u5757\u3002\u6808\u4e2d\u7684\u5143\u7d20\u5b58\u50a8\u4e24\u4e2a\u503c\uff0c\u8fde\u7eed\u6700\u5c0f\u503c\u548c\u8fd9\u4e2a\u8fde\u7eed\u6700\u5c0f\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u5f53\u6211\u4eec\u8981\u5c06\u5f53\u524d\u53f3\u7aef\u70b9\u53f3\u79fb\u4e00\u4f4d\uff08\u5f53\u7136\u4e0d\u662f\u4f4d\u8fd0\u7b97\uff09\u65f6\uff0c\u5f39\u51fa\u6808\u4e2d\u6240\u6709\u503c ** \u5927\u4e8e\u7b49\u4e8e ** $h_i$ \u7684\u503c\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u8fde\u7eed\u53d6 $\\min$ \u7684\u8fc7\u7a0b\u4e2d\u7b54\u6848\u603b\u662f\u4f1a\u53d8\u6210 $h_i$ \uff0c\u7136\u540e\u7edf\u8ba1\u5b83\u4eec\u51fa\u73b0\u7684\u6b21\u6570\u548c\uff0c ** \u5c06\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u52a0\u5165\u6808\u4e2d\uff0c\u5176\u6700\u5c0f\u503c\u4e3a\u5f53\u524d $h_i$ \uff0c\u51fa\u73b0\u6b21\u6570\u4e3a\u7edf\u8ba1\u7684\u6b21\u6570\u548c $+1$ ** \u3002\n\n\u5728\u540c\u65f6\u7ef4\u62a4\u6808\u4e2d\u5143\u7d20\u7684\u603b\u548c\uff0c\u5373\u6240\u6709\u5143\u7d20\u8fde\u7eed\u6700\u5c0f\u503c\u548c\u51fa\u73b0\u6b21\u6570\u7684\u4e58\u79ef\u7684\u548c\u3002\u5c06\u65b0\u5143\u7d20\u52a0\u5165\u6808\u4e2d\u540e\uff0c\u6808\u4e2d\u5143\u7d20\u7684\u548c\u5373\u4e3a\u5f53\u524d\u4f4d\u7f6e\u7684\u7b54\u6848\u3002\n\n\u7531\u4e8e\u6bcf\u6b21\u6808\u4e2d\u6700\u591a\u538b\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\uff0c\u5f39\u51fa\u65f6\u53ea\u4f1a\u5f39\u51fa\u539f\u6765\u5df2\u7ecf\u538b\u5165\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u4fdd\u8bc1\u662f $O(n)$ \u7684\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5728 $O(n\\log_2 n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42\u51fa\u8fd9\u9053\u9898\u4e86\u3002\u5982\u679c\u4f7f\u7528 DC3 \u6cd5\u6c42\u540e\u7f00\u6570\u7ec4\uff0c\u53ef\u4ee5\u5728 $O(n)$ \u5185\u89e3\u51b3\u6b64\u9898\u3002\n\n\u8bb0\u5f97\u5f00 ```long long``` \u3002\n\n\u7528\u7c7b\u4f3c\u7684\u5355\u8c03\u6808\u6280\u5de7\uff0c\u4e5f\u53ef\u4ee5\u89e3\u51b3 [P4248 \\[AHOI2013\\]\u5dee\u5f02](https://www.luogu.org/problemnew/show/P4248) \uff0c [P3181 \\[HAOI2016\\]\u627e\u76f8\u540c\u5b57\u7b26](https://www.luogu.org/problemnew/show/P3181) \u4e24\u4e2a\u95ee\u9898\u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<stack>\nusing namespace std;\nconst int maxn=100010;\nconst int maxsiz=130;\ntypedef long long ll;\nll T,n,m,sa[maxn],x[maxn],y[maxn],c[maxn],rnk[maxn],h[maxn],ans,tot,cnt;\nchar s[maxn];\nstruct node{ll v,cnt;};\nstack<node>st;\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n    \tscanf(\"%s\",s+1);\n    \tn=strlen(s+1);m=maxsiz-1;\n    \tfor(int i=1;i<=n;i++)x[i]=s[i];\n    \tfor(int i=0;i<=m;i++)c[i]=0;\n    \tfor(int i=1;i<=n;i++)c[x[i]]++;\n    \tfor(int i=1;i<=m;i++)c[i]+=c[i-1];\n    \tfor(int i=n;i>=1;i--)sa[c[x[i]]--]=i;\n    \tfor(int k=1,cur;k<=n;k<<=1)\n    \t{\n        \tcur=0;\n        \tfor(int i=n;i>n-k;i--)y[++cur]=i;\n        \tfor(int i=1;i<=n;i++)if(sa[i]>k)y[++cur]=sa[i]-k;\n        \tfor(int i=0;i<=m;i++)c[i]=0;\n        \tfor(int i=1;i<=n;i++)c[x[i]]++;\n        \tfor(int i=1;i<=m;i++)c[i]+=c[i-1];\n        \tfor(int i=n;i>=1;i--)sa[c[x[y[i]]]--]=y[i];\n        \tcur=y[sa[1]]=1;\n        \tfor(int i=2;i<=n;i++)\n        \t{\n        \t    int a,b;\n        \t    a=sa[i]+k>n?-1:x[sa[i]+k];\n\t\t\t\tb=sa[i-1]+k>n?-1:x[sa[i-1]+k];\n\t\t\t\ty[sa[i]]=(x[sa[i]]==x[sa[i-1]])&&(a==b)?cur:(++cur);\n        \t}\n        \tswap(x,y);\n        \tif(cur>=n)break;\n        \tm=cur;\n    \t}\n    \tfor(int i=1;i<=n;i++)rnk[sa[i]]=i;\n    \tint nww=0;\n    \tfor(int i=1;i<=n;i++)\n    \t{\n        \tif(rnk[i]==1)continue;\n        \tif(nww)nww--;\n        \twhile(i+nww<=n&&sa[rnk[i]-1]+nww<=n&&s[i+nww]==s[sa[rnk[i]-1]+nww])nww++;\n        \th[rnk[i]]=nww;\n    \t}\n    \tans=n*(n+1)/2;\n\t\tfor(int i=1;i<=n;i++)\n    \t{\n        \tcnt=0;\n        \twhile(!st.empty()&&st.top().v>=h[i])\n        \tcnt+=st.top().cnt,\n        \ttot-=st.top().v*st.top().cnt,\n    \t    st.pop();\n\t        st.push({h[i],cnt+1});tot+=h[i]*(cnt+1);\n    \t    ans+=2*tot; \n    \t}\n    \tprintf(\"%lld\\n\",ans);\n\t}\n    return 0;\n}\n```",
        "postTime": 1550469016,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF802I \u3010Fake News (hard)\u3011"
    },
    {
        "content": "> XIV. [CF802I Fake News (hard)](https://www.luogu.com.cn/problem/CF802I)\n\n> \u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u51fa $s$\uff0c\u6c42\u6240\u6709 $s$ \u7684\u5b50\u4e32 $p$ \u5728 $s$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u5e73\u65b9\u548c\uff0c\u91cd\u590d\u7684\u5b50\u4e32\u53ea\u7b97\u4e00\u6b21\u3002\n\n\u672c\u6587\u8282\u9009\u81ea [\u6211\u7684 SAM \u5237\u9898\u7b14\u8bb0](https://www.cnblogs.com/alex-wei/p/Suffix_Automaton_Involution.html)\uff0c\u7f16\u53f7\u4e3a XIV\u3002\n\n---\n\n\u8fd9\u662f\u4ec0\u4e48\u677f\u5b50\u9898\uff1f\n\n\u5bf9 $s$ \u5efa\u51fa SAM \u53ef\u4ee5\u81ea\u52a8\u53bb\u91cd\uff0c\u8003\u8651\u6bcf\u4e2a\u72b6\u6001 $p$\uff0c\u5b83\u6240\u8868\u793a\u7684\u5b57\u4e32\u4e2a\u6570\u4e3a $len(p)-len(link(p))$\uff0c\u51fa\u73b0\u6b21\u6570\u4e3a $p$ \u5728 $link$ \u6811\u4e0a\u7684\u5b50\u6811\u6240\u5305\u542b\u7684\u7ec8\u6b62\u8282\u70b9\u4e2a\u6570\uff08\u7ec8\u6b62\u8282\u70b9\u662f $s$ \u6240\u6709\u524d\u7f00\u5728 SAM \u4e0a\u8868\u793a\u7684\u72b6\u6001\uff09\uff0c\u8bb0\u4e3a $ed_p$\u3002\u90a3\u4e48\u7b54\u6848\u4e3a $\\sum_{i=1}^{cnt} ed^2_p\\times (len(p)-len(link(p)))$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n```cpp\n/*\n\tPowered by C++11.\n\tAuthor : Alex_Wei.\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define mem(x,v) memset(x,v,sizeof(x))\n\nconst int N=2e5+5;\nconst int S=26;\n\nint cnt,las,son[N][S],ed[N],fa[N],len[N],buc[N],id[N];\nvoid clear(){\n\tmem(son,0),mem(ed,0),mem(fa,0),mem(len,0),mem(buc,0);\n\tcnt=las=1;\n} void ins(char s){\n\tint p=las,cur=++cnt,it=s-'a';\n\tlen[cur]=len[p]+1,las=cur,ed[cur]=1;\n\twhile(!son[p][it])son[p][it]=cur,p=fa[p];\n\tif(!p)return fa[cur]=1,void();\n\tint q=son[p][it];\n\tif(len[p]+1==len[q])return fa[cur]=q,void();\n\tint cl=++cnt;\n\tfa[cl]=fa[q],fa[q]=fa[cur]=cl,len[cl]=len[p]+1;\n\tmemcpy(son[cl],son[q],sizeof(son[q]));\n\twhile(son[p][it]==q)son[p][it]=cl,p=fa[p];\n} ll build(char *s){\n\tint n=strlen(s+1); clear();\n\tfor(int i=1;i<=n;i++)ins(s[i]);\n\tfor(int i=1;i<=cnt;i++)buc[len[i]]++;\n\tfor(int i=1;i<=n;i++)buc[i]+=buc[i-1];\n\tfor(int i=cnt;i;i--)id[buc[len[i]]--]=i;\n\tfor(int i=cnt;i;i--)ed[fa[id[i]]]+=ed[id[i]];\n\tll ans=0;\n\tfor(int i=1;i<=cnt;i++)ans+=1ll*ed[i]*ed[i]*(len[i]-len[fa[i]]);\n\treturn ans;\n}\n\nint n;\nchar s[N];\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)scanf(\"%s\",s+1),cout<<build(s)<<endl; \n\treturn 0;\n}\n```",
        "postTime": 1615037055,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF802I Fake News (hard)"
    },
    {
        "content": "\u9898\u76ee\u5728\u8fd9\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF802I)\u3002\n\n\u9898\u89e3\u533a\u4e00\u5927\u5806\u795e\u5947\u7684 $\\text {SA}$ \u505a\u6cd5\uff0c\u53ef\u60dc\u6211\u4e0d\u4f1a\u2026\n\n\u4e8e\u662f\u6211\u7528\u7684\u662f $\\text {SAM}$\u3002\n\n\u9996\u5148\u6211\u4eec\u5efa\u51fa\u6765 $\\text {parent tree}$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c$\\text {parent tree}$ \u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4ee3\u8868\u4e86\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u3002\n\n\u6211\u4eec\u8bbe $maxlen_x$ \u662f $x$ \u7b49\u4ef7\u7c7b\u7684\u6700\u957f\u5b50\u4e32\uff0c$maxlen_x$ \u662f $x$ \u7b49\u4ef7\u7c7b\u7684\u6700\u77ed\u5b50\u4e32\uff0c\u663e\u7136\u70b9 $u$ \u7b49\u4ef7\u7c7b\u5b50\u4e32\u7684\u6570\u91cf\u662f $maxlen_u-minlen_u+1$\u3002\u56e0\u4e3a\u81ea\u52a8\u673a\u4e00\u822c\u53ea\u5b58 $maxlen$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a $minlen_u$ \u8f6c\u6362\u6210\u4e3a $maxlen_{fa_u}+1$\u3002\u90a3\u4e48\u5f0f\u5b50\u5c31\u53ef\u4ee5\u7b49\u4ef7\u7c7b\u5b50\u4e32\u6570\u91cf\u7684\u5f0f\u5b50\u5c31\u53ef\u4ee5\u8f6c\u6362\u6210\u4e3a $maxlen_u-(maxlen_{fa_u}+1)+1=maxlen_u-maxlen{fa_u}$\n\n\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u4e1c\u662f\u5e72\u751a\u4e48\u7684\uff1f\n\n\u6211\u4eec\u5eb7\u5eb7\u8981\u6c42\u4e9b\u751a\u4e48\u4e1c\u897f\u3002\n\n$\\sum_p cnt(s,p)^2$\u3002\n\n\u6211\u4eec\u5148\u628a\u8303\u56f4\u7f29\u5c0f\u5230\u4e00\u4e2a\u7b49\u4ef7\u7c7b $x$ \u4e2d\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u6539\u53d8\u4e00\u4e0b\uff0c\u53d8\u6210 \u7b49\u4ef7\u7c7b $x$ \u7684\u5b50\u4e32\u6570\u91cf $\\times$ \u7b49\u4ef7\u7c7b $x$ \u7684\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u7b49\u4ef7\u7c7b $x$ \u7684\u5b50\u4e32\u6570\u91cf \u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\uff0c\u90a3\u600e\u4e48\u8ba1\u7b97 \u7b49\u4ef7\u7c7b $x$ \u7684\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u4e2a\u7b49\u4ef7\u7c7b $x$ \u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f $x$ \u7684 $\\text {endpos}$ \u7684\u6570\u91cf\u3002\n\n\u90a3\u4e48\u600e\u4e48\u6c42 $\\text {endpos}$ \u7684\u6570\u91cf\u5462\uff1f\n\n\u901a\u8fc7\u5927\u773c\u89c2\u5bdf\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u5728 $\\text {parent tree}$ \u4e0a\uff0c\u4e00\u4e2a\u8282\u70b9\u7684 $\\text {endpos}$ \u6570\u91cf\u5176\u5b9e\u5c31\u662f\u5b83\u7684\u513f\u5b50\u7684 $\\text {endpos}$ \u6570\u91cf\u7684\u603b\u548c\u3002\u53f6\u8282\u70b9\u7684 $\\text {endpos}$ \u6570\u91cf\u4e3a1\u3002\n\n\u90a3\u4e48\u5c31\u53ea\u7528\u5efa\u51fa $\\text {parent tree}$ \u540e\u5728\u4e0a\u8fb9 dfs \u4e00\u4e0b\u5c31\u9614\u4ee5\u4e86\u3002\n\n\u8bb0\u5f97\u8981\u5f00 long long \u54e6\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=1e6+10;\nstruct suffix_automaton{\n\tint last,tot;\n\tint ch[N][26];\n\tint size[N];\n\tint len[N];\n\tint fa[N];\n\tsuffix_automaton(){\n\t\tlast=tot=1;\n\t}\n\tvoid add(int c){\n\t\tint p=last;\n\t\tint np=last=++tot;\n\t\tsize[np]=1;//\u5728\u8fd9\u91cc\u65b0\u589e\u7684\u8282\u70b9\u4e3a\u53f6\u8282\u70b9\uff0csize\u4e3a1\n\t\tlen[np]=len[p]+1;\n\t\twhile(p&&!ch[p][c]){\n\t\t\tch[p][c]=np;\n\t\t\tp=fa[p];\n\t\t}\n\t\tif(!p)\n\t\t\tfa[np]=1;\n\t\telse{\n\t\t\tint q=ch[p][c];\n\t\t\tif(len[q]==len[p]+1)\n\t\t\t\tfa[np]=q;\n\t\t\telse{\n\t\t\t\tint nq=++tot;\n\t\t\t\tfa[nq]=fa[q];\n\t\t\t\tfor(int i=0;i<26;i++)\n\t\t\t\t\tch[nq][i]=ch[q][i];\n\t\t\t\tlen[nq]=len[p]+1;\n\t\t\t\tfa[q]=fa[np]=nq;\n\t\t\t\twhile(p&&ch[p][c]==q){\n\t\t\t\t\tch[p][c]=nq;\n\t\t\t\t\tp=fa[p];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinline void clear(){\n\t\tmemset(size,0,sizeof size);\n\t\tmemset(ch,0,sizeof ch);\n\t\tmemset(len,0,sizeof len);\n\t\tmemset(fa,0,sizeof fa);\n\t\tlast=tot=1;\n\t}\n};\nstruct edge{\n\tint from,to;\n\tint nxt;\n};\nsuffix_automaton sam;\nedge e[N];\nstring s;\nint last[N];\nint tot;\nlong long ans;//\u4e0d\u5f00long long\u89c1\u7956\u5b97\nvoid clear(){\n\tsam.clear();\n\tmemset(e,0,sizeof e);\n\tmemset(last,0,sizeof last);\n\ttot=ans=0;\n}\ninline void add(int from,int to){\n\ttot++;\n\te[tot].from=from;\n\te[tot].to=to;\n\te[tot].nxt=last[from];\n\tlast[from]=tot;\n}\nvoid dfs(int u){\n\tfor(int i=last[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tdfs(v);\n\t\tsam.size[u]+=sam.size[v];\n\t}\n\tans+=(long long)(sam.len[u]-sam.len[sam.fa[u]])*sam.size[u]*sam.size[u];\n}\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tclear();//\u6bcf\u4e00\u6b21\u91cd\u65b0\u8ba1\u7b97\u90fd\u8981\u8981\u6e05\u7a7a\n\t\tcin>>s;\n\t\tint l=s.size();\n\t\tfor(int i=0;i<l;i++)\n\t\t\tsam.add(s[i]-'a');\n\t\tfor(int i=2;i<=sam.tot;i++)\n\t\t\tadd(sam.fa[i],i);//\u5efa\u51faparent tree\n\t\tdfs(1);//dfs\u8ba1\u7b97\u7b54\u6848\n\t\tcout<<ans<<'\\n';\n\t}\n}\n```",
        "postTime": 1612105473,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF802I \u3010Fake News (hard)\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u6c34\u7684SAM\u9898\u76ee\uff0c\u9898\u76ee\u8981\u6c42\u6240\u6709\u4e0d\u540c\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u7684\u5e73\u65b9\u548c\n\n\u5219SAM\u4e0a\u6bcf\u4e2a\u70b9\u7684ans\u4e3a(cnt)^2*(r-l),for\u5faa\u73af\u8dd1\u4e00\u904d\u5c31\u597d\uff0c\u5199\u8d77\u6765\u6bd4\u540e\u7f00\u6570\u7ec4\u7684\u4ee3\u7801\u4f18\u96c5\u591a\u4e86~\n```java\nimport java.math.BigInteger;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n    public static InputReader in = new InputReader(System.in);\n    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\n    public static void main(String[] args)\n    {\n        int a;\n        String s;\n        SAM part=new SAM();\n        a=in.nextInt();\n        while (a--!=0)\n        {\n            s=in.next();\n            part.init(2*s.length()+2,26);\n            for(int i=0;i<s.length();++i)\n                part.insert(s.charAt(i)-'a');\n            long ans=0;\n            part.topo();\n            SAM_node part2=part.root;\n            for(int i=0;i<s.length();++i)\n            {\n                part2=part2.next[s.charAt(i)-'a'];\n                part2.cnt=1;\n            }\n            for(int i=part.cur-1;i>0;--i)\n                part.pool[i].pre.cnt+=part.pool[i].cnt;\n            for(int i=part.cur-1;i>0;--i)\n                ans+=(long)part.pool[i].cnt*(long)part.pool[i].cnt*((long)part.pool[i].step-(long)part.pool[i].pre.step);\n            out.println(ans);\n        }\n        out.flush();\n        out.close();\n    }\n}\nclass SAM_node\n{\n    SAM_node pre,next[];\n    int step,cnt;\n    SAM_node(int sigma)\n    {\n        next=new SAM_node[sigma];\n        Arrays.fill(next,null);\n        step=0;\n        cnt=0;\n        pre=null;\n    }\n}\nclass SAM\n{\n    SAM_node SAM_pool[],root,last;\n    int d[];\n    SAM_node pool[];\n    int cur;\n    int sigma;\n    void topo() {\n        int cnt = cur;\n        int maxVal = 0;\n        Arrays.fill(d, 0);\n        for (int i = 1; i < cnt; i++) {\n            maxVal = Math.max(maxVal, SAM_pool[i].step);\n\n        d[SAM_pool[i].step]++;\n    }\n        for (int i = 1; i <= maxVal; i++)\n            d[i] += d[i - 1];\n        for (int i = 1; i < cnt; i++)\n            pool[d[SAM_pool[i].step]--] = SAM_pool[i];\n        pool[0] = root;\n    }\n    void init(int a,int b)\n    {\n        d=new int[a];\n        pool=new SAM_node[a];\n        SAM_pool=new SAM_node[a];\n        SAM_pool[0]=new SAM_node(b);\n        sigma=b;\n        root=last=SAM_pool[0];\n        cur=1;\n    }\n    void insert(int w)\n    {\n        SAM_node p=last;\n        SAM_pool[cur]=new SAM_node(sigma);\n        SAM_node np=SAM_pool[cur];\n        last=np;\n        cur++;\n        np.step=p.step+1;\n        while (p!=null && p.next[w]==null)\n        {\n            p.next[w]=np;\n            p = p.pre;\n        }\n        if(p==null)\n        {\n            np.pre=root;\n        }\n        else\n        {\n            SAM_node q=p.next[w];\n            if(p.step+1==q.step)\n                np.pre=q;\n            else {\n                SAM_node nq = SAM_pool[cur++] = new SAM_node(sigma);\n                nq.next = Arrays.copyOf(q.next, sigma);\n                nq.cnt = q.cnt;\n                nq.step = p.step + 1;\n                nq.pre = q.pre;\n                q.pre = nq;\n                np.pre = nq;\n                while (p != null && p.next[w]==(q)) {\n                    p.next[w] = nq;\n                    p = p.pre;\n                }\n            }\n        }\n    }\n}\nclass InputReader{\n    private final static int BUF_SZ = 65536;\n    BufferedReader in;\n    StringTokenizer tokenizer;\n    public InputReader(InputStream in) {\n        super();\n        this.in = new BufferedReader(new InputStreamReader(in),BUF_SZ);\n        tokenizer = new StringTokenizer(\"\");\n    }\n    public String next() {\n        while (!tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(in.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n    public long nextLong()\n    {\n        return Long.parseLong(next());\n    }\n}\n```\n",
        "postTime": 1558067709,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF802I \u3010Fake News (hard)\u3011"
    },
    {
        "content": "\u4ec0\u4e48\u677f\u5b50\u80fd\u8bc4 $2300$\u3002\n\n\u5efa\u5b8c SAM\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5176\u8868\u793a\u5b57\u7b26\u4e32\u4e2a\u6570\u4e3a $len_u - len_{fa_u}$\uff0c\u51fa\u73b0\u6b21\u6570\u53ef\u4ee5\u901a\u8fc7 $\\operatorname{link}$ \u8fb9\uff0c\u5373\u540e\u7f00\u94fe\u63a5\u7ebf\u6027\u6c42\u51fa\uff0c\u4e5f\u662f\u5957\u8def\u4e86\u3002\n\n\u7136\u540e\u7b97\u8d21\u732e\u5c31\u6ca1\u4e86\uff0c\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\nusing namespace std;\n\nconst int N = 2e5 + 5;\n\nint tot, last;\nint f[N];\nlong long ans = 0;\nint q;\nvector<int> G[N];\n\nstruct Node\n{\n\tint son[26], len, fa;\n}g[N];\n\nvoid extend(int c)\n{\n\tint p = last;\n\tint np = last = ++tot;\n\tg[np].len = g[p].len + 1;\n\tf[np] = 1;\n\tfor (; p && g[p].son[c] == 0; p = g[p].fa) g[p].son[c] = np;\n\tif (!p) g[np].fa = 1;\n\telse\n\t{\n\t\tint q = g[p].son[c];\n\t\tif (g[q].len == g[p].len + 1) g[np].fa = q;\n\t\telse\n\t\t{\n\t\t\tint nq = ++tot;\n\t\t\tg[nq] = g[q];\n\t\t\tg[nq].len = g[p].len + 1;\n\t\t\tg[q].fa = g[np].fa = nq;\n\t\t\tfor (; p && g[p].son[c] == q; p = g[p].fa) g[p].son[c] = nq;\n\t\t}\n\t}\n}\n\nvoid dfs1(int u)\n{\n\tfor (int j : G[u])\n\t{\n\t\tdfs1(j);\n\t\tf[u] += f[j];\n\t}\n}\n\nint main()\n{\n\tios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\n\tcin >> q;\n\twhile (q--)\n\t{\n\t\tfor (int i = 1; i <= tot; i++) \n\t\t{\n\t\t\tf[i] = 0;\n\t\t\tg[i].len = g[i].fa = 0;\n\t\t\tfor (int j = 0; j < 26; j++) g[i].son[j] = 0;\n\t\t\tG[i].clear();\n\t\t}\n\t\ttot = last = 1;\n\t\tstring s;\n\t\tcin >> s;\n\t\tfor (auto i : s)\n\t\t{\n\t\t\textend(i - 'a');\n\t\t}\n\t\tfor (int i = 2; i <= tot; i++) G[g[i].fa].emplace_back(i);\n\t\tans = 0;\n\t\tdfs1(1);\n\t\tfor (int i = 2; i <= tot; i++)\n\t\t{\n\t\t\tans += f[i] * 1LL * f[i] * (g[i].len * 1LL - g[g[i].fa].len);\n\t\t}\n\t\tcout << ans << \"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1678279442,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "Fake News (hard)"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF802I)\n\n## \u601d\u8def\n\n\u8fd9\u4e2a\u9898\u5176\u5b9e\u662f $\\rm SA$ \u677f\u5b50\u3002\n\n\u521d\u770b\u4f3c\u4e4e\u6ca1\u4ec0\u4e48\u601d\u8def\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u62c6\u4e00\u4e0b\u67ff\u5b50\u3002\n\n\u5047\u8bbe\u6211\u4eec\u679a\u4e3e\u5230\u7684\u4e32\u662f $(i,j)$\uff0c$(i,j)$ \u5df2\u7ecf\u51fa\u73b0\u8fc7 $x$ \u6b21\uff0c\u90a3\u4e48\u663e\u7136\u73b0\u5728\u7684\u6b21\u6570\u53d8\u6210\u4e86 $x+1$ \u6b21\uff0c\u90a3\u4e48\u4e32 $(i,j)$ \u7684\u8d21\u732e\u5c31\u662f $(x+1)^2-x^2=2x+1$\u3002\n\n\u540e\u9762\u7684\u8fd9\u4e2a $1$ \u7684\u8d21\u732e\u663e\u7136\u662f\u6570\u5bf9 $(i,j)$ \u7684\u603b\u6570\uff0c\u663e\u7136\u7b49\u4e8e $\\dfrac{(n+1) \\times n}{2}$\u3002\n\n\u800c\u5bf9\u4e8e\u524d\u9762\u7684\u8fd9\u4e2a $2x$ \u7684\u8d21\u732e\u6211\u4eec\u53ef\u4ee5\u628a $2$ \u63d0\u51fa\uff0c\u73b0\u5728\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u8ba1\u7b97 $x$ \u7684\u603b\u548c\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u679a\u4e3e\u7684\u540e\u7f00\u7684\u6392\u540d\u662f $i$\uff0c\u5982\u4f55\u8ba1\u7b97\u5b83\u4e0e\u524d\u9762\u7684 $j$ \u7684\u8d21\u732e\u5462\uff1f\n\n\u8bbe\u603b\u8d21\u732e\u8868\u793a\u5f53\u524d $i$ \u7684\u603b\u8d21\u732e\u3002\n\n\u82e5\u8fd9\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\u4e3a $l$\uff0c\u5219\u5b83\u4f1a\u4ee4\u4e32 $(i,i+1)...(i,i+l)$ \u7684\u8d21\u732e\u52a0 $1$\uff0c\u4e5f\u5c31\u662f\u4f1a\u4ee4\u603b\u8d21\u732e\u52a0 $l$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6240\u6709 $l$ \u503c\u7684\u548c\u5373\u53ef\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u7ecf\u5178\u5957\u8def\uff0c\u76f4\u63a5\u5355\u8c03\u6808\u3002\n\n## \u4ee3\u7801\n\n```cpp\n//A tree without skin will surely die.\n//A man without face will be alive\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint const N=1e5+10;\nint rk[N],oldrk[N],sa[N],height[N],n,w=1;\nchar k[N];string s;\ninline bool cmp(int x,int y){return rk[x]==rk[y]?rk[x+w]<rk[y+w]:rk[x]<rk[y];}\ninline void SA(){\n\tfor (int i=1;i<=n;++i) k[i]=s[i];sort(k+1,k+n+1);\n\tsort(k+1,k+n+1);\n\tfor (int i=1;i<=n;++i) rk[i]=lower_bound(k+1,k+n+1,s[i])-k,sa[i]=i;\n\tfor (w=1;w<n;w<<=1){\n\t\tsort(sa+1,sa+n+1,cmp);\n\t\tmemcpy(oldrk,rk,sizeof(oldrk));\n\t\tfor (int p=0,i=1;i<=n;++i)\n\t\t\tif (oldrk[sa[i]]==oldrk[sa[i-1]] && oldrk[sa[i]+w]==oldrk[sa[i-1]+w]) rk[sa[i]]=p;\n\t\t\telse rk[sa[i]]=++p;\n\t}\n\tfor (int i=1;i<=n;++i) rk[sa[i]]=i;\n\tint k=0;\n\tfor (int i=1;i<=n;++i){\n\t\tif (k) --k;int j=sa[rk[i]-1];\n\t\twhile (j+k<=n && i+k<=n && s[i+k]==s[j+k]) ++k;\n\t\theight[rk[i]]=k;\n\t}\n}\ninline void solve(){\n\tcin>>s;n=s.length();\n\ts=\" \"+s;SA();int ans=n*(n+1)/2;\n\tstack< pair<int,int> >s;\n\ts.push({0,0});\n\tfor (int i=1;i<=n;++i){\n\t\twhile (height[i]<height[s.top().first]) s.pop();\n\t\ts.push({i,s.top().second+(i-s.top().first)*height[i]});\n\t\tans+=2*s.top().second;\n\t}\n\tcout<<ans<<'\\n';\n}\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tint t;cin>>t;\n\twhile (t--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1670221010,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF802I Fake News (hard)"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u548c CF123D \u5f88\u50cf\uff0c\u4ee3\u7801\u53ea\u6709\u4e00\u70b9\u70b9\u4e0d\u540c\u3002\n\n\u9996\u5148\u770b\u5230\u5b50\u4e32\u7684\u95ee\u9898\u5bb9\u6613\u60f3\u5230\u540e\u7f00\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u5b57\u7b26\u4e32\u6c42\u4e00\u904d\u540e\u7f00\u6570\u7ec4\u4ee5\u53ca `height` \u6570\u7ec4\u3002\n\n\u63a5\u4e0b\u6765\u600e\u4e48\u505a\uff1f\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u60f3\u5f97\u5230\u5355\u8c03\u6808\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e `height` \u6570\u7ec4\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u6808\u3002\u4e00\u65e6\u6211\u4eec\u8981\u5f39\u51fa\u6808\u9876\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u4ed6\u4e00\u5b9a\u4f1a\u5bf9\u7b54\u6848\u505a\u51fa\u65b0\u8d21\u732e\uff0c\u5373 $cnt(s,p)>1$\u3002\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e9b\u6709\u65b0\u8d21\u732e\u7684\u4e32\u7684\u4e2a\u6570\u7b97\u51fa\u6765\uff0c\u7136\u540e\u628a\u5176\u4ed6\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u4e32\u7684\u6570\u91cf\u7edf\u8ba1\u51fa\u6765\uff0c\u7b54\u6848\u5c31\u7b97\u51fa\u6765\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+n)$\u3002\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int MAXN=1e5+10; \n\nint n,m;\nint sa[MAXN],rnk[MAXN],height[MAXN],tmp[MAXN],a[MAXN],b[MAXN],cnt[MAXN],calc[MAXN];\nchar s[MAXN];\n\nvoid bucket_sort(int v[]) {\n\tfill(cnt,cnt+m+1,0);\n\tfor(int i=1;i<=n;i++) {\n\t\tcnt[v[i]+1]++;\n\t}\n\tfor(int i=1;i<=m;i++) {\n\t\tcnt[i]+=cnt[i-1];\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\ttmp[++cnt[v[sa[i]]]]=sa[i];\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tsa[i]=tmp[i];\n\t}\n}\n\nvoid get_sa() {\n\tfor(int i=1;i<=n;i++) {\n\t\trnk[i]=tmp[i]=s[i];\n\t\tsa[i]=i;\n\t}\n\tsort(tmp+1,tmp+n+1);\n\tm=unique(tmp+1,tmp+n+1)-tmp-1;\n\tfor(int i=1;i<=n;i++) {\n\t\trnk[i]=lower_bound(tmp+1,tmp+m+1,rnk[i])-tmp;\n\t}\n\t\n\tfor(int l=1;l<n;l<<=1) {\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\ta[i]=rnk[i];\n\t\t\tb[i]=(i+l<=n? rnk[i+l]:0);\n\t\t}\n\t\tbucket_sort(b);\n\t\tbucket_sort(a);\n\t\t\n\t\tm=0;\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\tif(a[sa[i]]!=a[sa[i-1]]||b[sa[i]]!=b[sa[i-1]]) {\n\t\t\t\tm++;\n\t\t\t}\n\t\t\trnk[sa[i]]=m;\n\t\t}\n\t}\n}\n\nvoid get_height() {\n\tint h=0;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(h) {\n\t\t\th--;\n\t\t}\n\t\tif(rnk[i]==1) {\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tint p=i+h;\n\t\tint q=sa[rnk[i]-1]+h;\n\t\t\n\t\twhile(p<=n&&q<=n&&s[p]==s[q]) {\n\t\t\tp++;\n\t\t\tq++;\n\t\t\th++;\n\t\t}\n\t\theight[rnk[i]]=h;\n\t}\n}\n\nint solve() {\n\tint ans=n*(n+1)/2;\n\tstack<int> stk;\n\tfor(int i=2;i<=n+1;i++) {\n\t\twhile(!stk.empty()&&height[stk.top()]>height[i]) {\n\t\t\tint y=height[stk.top()];\n\t\t\tint x=height[i];\n\t\t\tstk.pop();\n\t\t\tint z=(stk.empty()? 0:height[stk.top()]);\n\t\t\tint len=i-(stk.empty()? 1:stk.top());\n\t\t\tans+=(y-max(x,z))*(len*len-len);\n\t\t}\n\t\tstk.push(i);\n\t}\n\treturn ans;\n}\n\nsigned main() {\n\tint t=read();\n\t\n\twhile(t--) {\n\t\tscanf(\"%s\",s+1);\n\t\tn=strlen(s+1);\n\t\t\n\t\tget_sa();\n\t\tget_height();\n\t\t\n\t\tprintf(\"%lld\\n\",solve());\n\t} \n\treturn 0;\n}\n\n```\n\n**\u5bf9\u4e8e\u5355\u8c03\u6808\u7684\u601d\u8003\uff0c\u6211\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u53ef\u4ee5\u901a\u8fc7\u753b\u67f1\u5f62\u56fe\u6765\u5e2e\u52a9\u601d\u8003\uff0c\u8fd9\u6837\u4f1a\u5f88\u76f4\u89c2**",
        "postTime": 1613310325,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF802I \u3010Fake News (hard)\u3011"
    },
    {
        "content": "# Sulotion - CF802I\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF802I)\n\n## \u9898\u610f\n\n$T$ \u7ec4\u6570\u636e\uff0c\u6bcf\u6b21\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$ \uff0c\u8bf7\u4f60\u8f93\u51fa\u5176\u6240\u6709\u5b50\u4e32\u51fa\u73b0\u6b21\u6570\u7684\u5e73\u65b9\u548c\u3002\n\n## \u9898\u89e3\n\n\u770b\u5230\u9898\u89e3\u533a\u90fd\u662f\u7528 SA+\u5355\u8c03\u6808\u7684\u505a\u6cd5\uff0c\u8fd9\u91cc\u5206\u4eab\u4e00\u79cd SA+\u5e76\u67e5\u96c6\u7684\u505a\u6cd5\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n\n\u5b50\u4e32\u76f8\u5173\uff0c\u6211\u4eec\u5148SA\u4e00\u904d\u5e76\u6c42\u51faheight\u6570\u7ec4\u3002\n\n\u8003\u8651\u5230\u6bcf\u4e2a\u540e\u7f00\u7684\u524d\u7f00\u5c31\u662f\u5b50\u4e32\uff0c\u800cheight\u6570\u7ec4\u7684\u610f\u4e49\u662f\u4e24\u4e2a\u540e\u7f00\u7684LCP\uff0c\u5982\u679c\u6211\u4eec\u6309\u7167height**\u4ece\u5927\u5230\u5c0f**\u6392\u5e8f\uff0c\u5e76\u4e14**\u4ece\u5927\u5230\u5c0f**\u679a\u4e3e\u91cd\u590d\u51fa\u73b0\u7684\u5b50\u4e32\u7684\u957f\u5ea6\u3002\u7136\u540e\u7528\u4e00\u4e2a\u6307\u9488\uff0c\u5982\u679c\u5f53\u524d\u7684height $\\ge$ \u679a\u4e3e\u7684\u957f\u5ea6\uff0c\u5c31\u628a\u4e24\u4e2a\u76f8\u90bb\u7684\u540e\u7f00\u5408\u5e76\u3002\u7528 $sum$ \u7ef4\u62a4\u5f53\u524d\u957f\u5ea6\u7684\u5b50\u4e32\u51fa\u73b0\u6b21\u6570\u7684\u5e73\u65b9\u548c\u3002\n\n\u663e\u7136\uff0c\u524d\u9762\u5408\u5e76\u7684\u4e24\u4e2a\u540e\u7f00\u4e0d\u4f1a\u5206\u5f00\u6765\uff0c\u6240\u4ee5\u5c31\u8ba1\u7b97\u5f97\u5230\u4e86\u7b54\u6848\u3002\n\n\u6700\u540e\u4e0d\u8981\u5fd8\u8bb0\u7edf\u8ba1\u53ea\u51fa\u73b0\u4e86 $1$ \u6b21\u7684\u5b50\u4e32\uff01\n\n## \u4ee3\u7801\n\n```cpp\nconst int N=1e5+5;\nchar s[N];\nint n,m,sa[N],rnk[N],tax[N],tp[N],hei[N];\nvoid Sort()\n{\n\tfor(int i=1;i<=m;++i) tax[i]=0;\n\tfor(int i=1;i<=n;++i) tax[rnk[i]]++;\n\tfor(int i=1;i<=m;++i) tax[i] += tax[i-1];\n\tfor(int i=n;i>=1;--i) sa[tax[rnk[tp[i]]]--] = tp[i];\n}\nvoid SuffixSort()\n{\n\tm = 128;\n\tfor(int i=1;i<=n;++i) rnk[i]=s[i]-'0'+1,tp[i]=i;\n\tSort();\n\tfor(int p=0,w=1; p<n; w<<=1,m=p)\n\t{\n\t\tp = 0;\n\t\tfor(int i=1;i<=w;++i) tp[++p] = n-w+i;\n\t\tfor(int i=1;i<=n;++i) if(sa[i] > w) tp[++p] = sa[i]-w;\n\t\tSort();\n\t\tmemcpy(tp,rnk,sizeof(rnk));\n\t\tp = rnk[sa[1]] = 1;\n\t\tfor(int i=2;i<=n;++i) \n\t\t\trnk[sa[i]] = (tp[sa[i]]==tp[sa[i-1]]&&tp[sa[i]+w]==tp[sa[i-1]+w])? p: ++p;\n\t}\n\tint j,k=0;\n\tfor(int i=1;i<=n;++i) {\n\t\tif(k) --k;\n\t\tj = sa[rnk[i]-1];\n\t\twhile(s[i+k] == s[j+k]) ++k;\n\t\thei[rnk[i]] = k;\n\t}\n}\nint siz[N],far[N],t[N],lsth[N];\nbool cmp(int x,int y) {return hei[x]>hei[y];}\nint getf(int x) {return far[x]==x? x: far[x]=getf(far[x]); }\nsigned main()\n{\n\tint T;\n\tcin >> T;\n\twhile(T --> 0)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tn = strlen(s+1);\n\t\tSuffixSort();\n\n\t\tmemset(lsth,0,sizeof(lsth));\n\t\tfor(int i=1;i<=n;++i) \n\t\t{\n\t\t\tsiz[i] = 1;\n\t\t\tt[i] = far[i] = i;\n\t\t}\n\t\tsort(t+1,t+n+1,cmp);\n\n\t\tll sum = 0, ans = 0;\n\t\tfor(int u,v,pos=1,h=n;h>=1;--h)\n\t\t{\n\t\t\tsum++;\n\t\t\twhile(pos<=n && hei[t[pos]] >= h)\n\t\t\t{\n\t\t\t\tu = sa[t[pos]];\n\t\t\t\tv = sa[t[pos]-1];\n\t\t\t\tu = getf(u); v = getf(v);\n\t\t\t\tsum -= 1ll*siz[u]*siz[u];\n\t\t\t\tsum -= 1ll*siz[v]*siz[v];\n\t\t\t\tsiz[v] += siz[u];\n\t\t\t\tfar[u] = v;\n\t\t\t\tsum += 1ll*siz[v]*siz[v];\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tans += sum;\n\t\t}\n\t\tcout << ans <<\"\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1609664064,
        "uid": 95246,
        "name": "MoonPie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF802I \u3010Fake News (hard)\u3011"
    },
    {
        "content": "\u5148\u7528SA\u6c42\u51fa $height$\u3002\n\n\u8fd9\u4e2a\u7684\u8bdd\u5c31\u662f\u6a21\u677f\u3002\n\n\u4e0d\u77e5\u9053\u4f60\u4eec\u90a3\u4e9b\u5355\u8c03\u6808\u7684\u6280\u5de7\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u540e\u6839\u636e\u6392\u540d\uff0c\u5bf9\u4e8e\u8fd8\u5b58\u5728\u7684\u5b50\u4e32\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u5e73\u65b9\u548c\uff0c\u533a\u95f4\u548c\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u5b50\u4e32\u5728\u4e4b\u540e\u4e0d\u5b58\u5728\u4e86\uff0c\u5c31\u76f4\u63a5\u52a0\u8fdb\u7b54\u6848\u3002\n\n\u8fd9\u79cd\u5199\u6cd5\u601d\u7ef4\u96be\u5ea6\u5c31\u4e3a0\u4e86\uff0c\u5b9e\u73b0\u8d77\u6765\u6ca1\u7ec6\u8282\u3002\n\n```cpp\n/*\n * Author: ylx\n * Lang: c++\n * Prog: 802I\n */\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nvoid qmax(int &x, int y)\n{\n    if (x < y)\n        x = y;\n}\nvoid qmin(int &x, int y)\n{\n    if (x > y)\n        x = y;\n}\ninline ll read()\n{\n    char s;\n    ll k = 0, base = 1;\n    while ((s = getchar()) != '-' && s != EOF && !(isdigit(s)))\n        ;\n    if (s == EOF)\n        exit(0);\n    if (s == '-')\n        base = -1, s = getchar();\n    while (isdigit(s))\n        k = k * 10 + (s ^ '0'), s = getchar();\n    return k * base;\n}\ninline void write(ll x)\n{\n    static char cnt, num[20];\n    cnt = 0;\n    if (!x)\n    {\n        putchar('0');\n        return;\n    }\n    for (; x; x /= 10)\n        num[++cnt] = x % 10;\n    for (; cnt; putchar(num[cnt--] + 48))\n        ;\n}\nconst int maxn = 1e5 + 10;\nint n;\nchar ch[maxn];\nnamespace ST\n{\nll t[maxn << 2], s[maxn << 2], tag[maxn << 2], f[maxn << 2];\nvoid update(int d)\n{\n    t[d] = t[d << 1] + t[d << 1 | 1];\n    s[d] = s[d << 1] + s[d << 1 | 1];\n}\nvoid pushdown(int d, int l, int r)\n{\n    int mid = (l + r) >> 1;\n    if (f[d] == 2)\n    {\n        s[d << 1] = t[d << 1] = 0;\n        s[d << 1 | 1] = t[d << 1 | 1] = 0;\n        f[d << 1] = f[d << 1 | 1] = 2;\n        tag[d << 1] = tag[d << 1 | 1] = 0;\n        f[d] = 0;\n    }\n    if (tag[d])\n    {\n        t[d << 1] = t[d << 1] + 2 * tag[d] * s[d << 1] + (mid - l + 1) * tag[d] * tag[d];\n        t[d << 1 | 1] = t[d << 1 | 1] + 2 * tag[d] * s[d << 1 | 1] + (r - mid) * tag[d] * tag[d];\n        s[d << 1] += tag[d] * (mid - l + 1);\n        s[d << 1 | 1] += tag[d] * (r - mid);\n        tag[d << 1] += tag[d];\n        tag[d << 1 | 1] += tag[d];\n        tag[d] = 0;\n    }\n}\nvoid add(int x, int y, int d, int l, int r)\n{\n    if (l <= x && y <= r)\n    {\n        t[d] = t[d] + 2 * s[d] + (y - x + 1);\n        s[d] += y - x + 1;\n        tag[d]++;\n        return;\n    }\n    int mid = (x + y) >> 1;\n    pushdown(d, x, y);\n    if (l <= mid)\n        add(x, mid, d << 1, l, r);\n    if (r > mid)\n        add(mid + 1, y, d << 1 | 1, l, r);\n    update(d);\n}\nll query(int x, int y, int d, int l, int r)\n{\n    if (l <= x && y <= r)\n    {\n        ll z = t[d];\n        t[d] = s[d] = tag[d] = 0;\n        f[d] = 2;\n        return z;\n    }\n    ll sum = 0;\n    int mid = (x + y) >> 1;\n    pushdown(d, x, y);\n    if (l <= mid)\n        sum += query(x, mid, d << 1, l, r);\n    if (r > mid)\n        sum += query(mid + 1, y, d << 1 | 1, l, r);\n    update(d);\n    return sum;\n}\n} // namespace ST\nnamespace SA\n{\nint m;\nint x[maxn + maxn], y[maxn + maxn], s[maxn], c[maxn], rk[maxn], h[maxn];\nvoid init()\n{\n    memset(c, 0, sizeof(c));\n    m = 0;\n    for (int i = 1; i <= n; i++)\n        c[x[i] = ch[i] - 'a' + 1]++, qmax(m, x[i]);\n    for (int i = 2; i <= m; i++)\n        c[i] += c[i - 1];\n    for (int i = 1; i <= n; i++)\n        s[c[x[i]]--] = i;\n    for (int k = 1, p; k < n; k <<= 1)\n    {\n        p = 0;\n        for (int i = n - k + 1; i <= n; i++)\n            y[++p] = i;\n        for (int i = 1; i <= n; i++)\n            if (s[i] > k)\n                y[++p] = s[i] - k;\n        for (int i = 1; i <= m; i++)\n            c[i] = 0;\n        for (int i = 1; i <= n; i++)\n            c[x[y[i]]]++;\n        for (int i = 2; i <= m; i++)\n            c[i] += c[i - 1];\n        for (int i = n; i >= 1; i--)\n        {\n            s[c[x[y[i]]]--] = y[i];\n        }\n        memcpy(y, x, sizeof(y));\n        x[s[1]] = p = 1;\n        ++p;\n        for (int i = 2; i <= n; i++)\n            x[s[i]] = (y[s[i]] == y[s[i - 1]] && y[s[i] + k] == y[s[i - 1] + k]) ? p - 1 : p++;\n        m = p;\n    }\n    for (int i = 1; i <= n; i++)\n        rk[s[i]] = i;\n    for (int i = 1, k = 0, j; i <= n; i++)\n    {\n        if (k)\n            k--;\n        j = s[rk[i] - 1];\n        while (ch[i + k] == ch[j + k])\n            k++;\n        h[rk[i]] = k;\n    }\n}\nvoid work()\n{\n    ll ans = 0,L=0;\n    m = 0;\n    int lst = 0;\n    for (int i = 1, x; i <= n; i++)\n    {\n        if (h[i] < m)\n            ans += ST::query(1, n, 1, h[i] + 1, m);\n        x = s[i];\n        ST::add(1, n, 1, 1, n - x + 1);\n        lst = n - x + 1;\n        m = n - x + 1;\n        L=ans;\n    }\n    ans += ST::query(1, n, 1, 1, m);\n    ST::query(1, n, 1, 1, n);\n    printf(\"%lld\\n\", ans);\n}\n} // namespace SA\nint main()\n{\n#ifdef ylx\n    freopen(\"802I.in\", \"r\", stdin);\n    freopen(\"802I.out\", \"w\", stdout);\n#endif\n    int T = read();\n    while (T--)\n    {\n        scanf(\"%s\", ch + 1);\n        n = strlen(ch + 1);\n        SA::init();\n        SA::work();\n    }\n    return 0;\n}\n//2019\u5e74 06\u6708 19\u65e5 \u661f\u671f\u4e09 19:02:44 CST\n```",
        "postTime": 1560952340,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF802I \u3010Fake News (hard)\u3011"
    }
]