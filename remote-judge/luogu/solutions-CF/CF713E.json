[
    {
        "content": "\u8fd9\u7bc7\u9898\u89e3\u505a\u6cd5\u4e0a\u4e0e\u53e6\u4e00\u7bc7\u91cd\u590d\u4e86\uff0c\u4f46\u6211\u4f1a\u5c3d\u53ef\u80fd\u8bb2\u7684\u8be6\u7ec6\u4e00\u4e9b\u7684\u3002\uff08\u636e\u8bf4\u89e3\u91ca\u201c\u8be6\u5c3d\u800c\u6df1\u5165\u201d\u53ef\u4ee5\u901a\u8fc7\uff09\n\n## \u3010\u9898\u610f\u3011\n\u6709$n$\u4e2a\u4eba\u7ad9\u5728\u4e00\u4e2a\u6709$m$\u4e2a\u70b9\u7684\u73af\u4e0a\uff0c\u6bcf\u4e2a\u4eba\u6bcf\u4e00\u5355\u4f4d\u65f6\u95f4\u53ef\u4ee5\u8d70\u5230\u53e6\u4e00\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u6c42\u6bcf\u4e2a\u70b9\u90fd\u88ab\u81f3\u5c11\u4e00\u4e2a\u4eba\u7ecf\u8fc7\u8fc7\u6240\u9700\u8981\u7684\u6700\u77ed\u65f6\u95f4\u3002\n\n## \u3010\u5206\u6790\u3011\n\u8003\u8651\u5230\u8981\u6c42\u6700\u77ed\u65f6\u95f4\uff0c\u800c\u4e14\u663e\u7136\u65f6\u95f4\u8d8a\u957f\u4efb\u52a1\u8d8a\u53ef\u80fd\u5b8c\u6210\uff0c\u7b26\u5408\u5355\u8c03\u6027\u3002\u8003\u8651\u4e8c\u5206\u3002\n\n\u90a3\u4e48$check$\u51fd\u6570\u9700\u8981\u7684\u590d\u6742\u5ea6\u4e3a$O(n)$\u3002\n\n\u56e0\u6b64\u8003\u8651\u73af\u5f62DP\u3002\n\n## \u3010\u601d\u8def\u3011\n\u9996\u5148\u8981\u601d\u8003\u5982\u4f55\u7834\u73af\u4e3a\u94fe\uff0c\u4f46\u663e\u7136\u6211\u4eec\u76ee\u524d\u6ca1\u6709\u4efb\u4f55\u53ef\u4ee5\u7834\u73af\u4e3a\u94fe\u7684\u4f9d\u636e\uff0c\u6b64\u65f6\u6211\u4eec\u5148\u8003\u8651\u72b6\u6001\u7684\u8bbe\u8ba1\u3002\n\n\u6211\u4eec\u5148\u770b\u770b\u8fd9\u9053\u9898\u6709\u4ec0\u4e48\u6027\u8d28\u3002\n\n### \u6027\u8d281\n--------------\n\u9898\u76ee\u91cc\u8bf4\u4e86\uff0c\u6bcf\u4e00\u4e2a\u4eba\u4e00\u65e6\u8d70\u4e86\uff0c\u90fd\u53ea\u4f1a\u6c38\u8fdc\u671d\u7740\u4e00\u4e2a\u65b9\u5411\u8d70\u3002\n\n---------------\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u8fdb\u884c$check$\u65f6\uff0c\u6240\u9700\u7684$mid$\u8bbe\u5b9a\u4e3a**\u6bcf\u4e2a\u4eba\u6240\u80fd\u8986\u76d6\u7684\u70b9\u6570**\uff0c\u7531\u6b64\u628a\u4eba\u8d70\u8def\u7684\u8fc7\u7a0b\u62bd\u8c61\u6210\u7ebf\u6bb5\u8986\u76d6\u7684\u8fc7\u7a0b\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u72b6\u6001\u4e86\u3002\n\n### \u3010\u72b6\u6001\u8bbe\u8ba1\u3011\n\n\u6211\u4eec\u5148\u5047\u8bbe\u9996\u5c3e\u65ad\u5f00\uff0c\u91c7\u53d6\u4e4b\u540e\u518d\u5f3a\u5236\u8fde\u63a5\u7684\u505a\u6cd5\u3002\n\n\u8bbe$dp[i]$\u8868\u793a\u7b2c$i$\u4e2a\u4eba\u6240\u80fd\u8986\u76d6\u5230\u7684\u6700\u8fdc\u70b9\u6570\uff0c\u8bbe\u672c\u6b21$check$\u4e2d\u4e00\u4e2a\u4eba\u80fd\u8986\u76d6\u7684\u70b9\u6570\u4e3a$x$\uff0c\u8bbe\u7b2c$i$\u4e2a\u4eba\u7684\u4f4d\u7f6e\u4e3a$b[i]$\uff0c\u4e0b\u9762\u8003\u8651\u72b6\u6001\u8f6c\u79fb\uff0c\u8fd9\u91cc\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u3002\n\n1\u3001\u5982\u679c\u4e0a\u4e00\u4e2a\u4eba\u80fd\u591f\u8986\u76d6\u5230\u5f53\u524d\u8fd9\u4e2a\u4eba\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5373$dp[i-1]\\geq b[i]-1$\n\n\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u4eba\u5230\u4e0a\u4e00\u4e2a\u4eba\u8fd9\u6bb5\u533a\u95f4\u5df2\u7ecf\u5b8c\u5168\u88ab\u8986\u76d6\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u5f80\u66f4\u8fdc\u7684\u5730\u65b9\u8986\u76d6\n$dp[i]=b[i] + x$\n\n2\u3001\u5982\u679c\u4e0a\u4e00\u4e2a\u4eba\u4e0d\u80fd\u591f\u8986\u76d6\u5230\u5f53\u524d\u8fd9\u4e2a\u4eba\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5373$dp[i-1]\\geq b[i]-x-1$\u5f53\u524d\u8fd9\u4e2a\u4eba\u5c31\u5f97\u56de\u53bb\u5e2e\u4e0a\u4e00\u4e2a\u4eba\uff0c\u7531\u4e8e\u300e\u6027\u8d281\u300f\u7684\u7ea6\u675f\uff0c\u4ed6\u80fd\u8d70\u5230\u7684\u6700\u8fdc\u7684\u70b9\u4fbf\u6c38\u8fdc\u53d8\u6210\u4e86\u4ed6\u73b0\u5728\u6240\u5728\u7684\u4f4d\u7f6e\u3002$dp[i]=b[i]$\n\n3\u3001\u8fd8\u6709\u4e00\u79cd\u53ef\u80fd\u6027\uff0c\u4e5f\u8bb8\u4e0a\u4e00\u4e2a\u4eba\u7684\u4e0a\u4e00\u4e2a\u4eba\u7684\u8986\u76d6\u6211\u4eec\u5f80\u56de\u8d70\u5c31\u53ef\u4ee5\u628a\u5751\u586b\u4e0a\uff0c\u5373$dp[i-2]\\geq b[i]-x-1$\uff0c\u90a3\u4e48\u4e0a\u4e00\u4e2a\u4eba\u5c31\u6ca1\u4e8b\u5e72\u4e86$dp[i]=b[i-1]+x$\n\n\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee\u8fd9\u7b2c3\u79cd\u60c5\u51b5\u6709\u4ec0\u4e48\u7528\uff0c\u5176\u5b9e\u662f\u6709\u7528\u7684\u3002\n\n\u5982\uff1a\n```\n1----2-3\n```\n\u5047\u8bbe\u957f\u5ea6\u4e3a$3$\uff0c\u90a3\u4e48\u70b9$1$\u53ea\u80fd\u8986\u76d6\u5230\u4e0b\u56fe\u4e2d\u7684$o$\u70b9\uff1a\n```\n1ooo-2-3\n```\n\u7136\u800c\u6b64\u65f6$2$\u5fc5\u987b\u53bb\u586b\u5751\uff0c\u5982\u4e0b\u56fe\u7684$x$\uff1a\n```\n1oxxx2-3\n```\n\u90a3\u4e48$3$\u4e5f\u5f97\u56de\u6765\u586b\u5751\uff0c\u5982\u4e0b\u56fe@\uff1a\n```\n1oxxx2@3\n```\n\u4f46\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8fd9\u6837\uff1a\n```\n1ooo@2@3\n```\n\u6211\u4eec\u7684$2$\u8282\u70b9\u5c31\u53ef\u4ee5\u7701\u51fa\u6765\u5411\u53f3\u6269\u5c55\u4e86\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u51b5\u662f\u5fc5\u8981\u8ba8\u8bba\u7684\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u8003\u8651**\u4e0a\u4e00\u4e2a\u4eba\u7684\u4e0a\u4e00\u4e2a\u4eba\u7684\u4e0a\u4e00\u4e2a\u4eba**\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u901a\u8fc7\u4e0a\u8ff0\u65b9\u6cd5\u8282\u7701\u7a7a\u95f4\uff0c\u6700\u4f18\u7684\u65b9\u6848\u5c31\u5df2\u7ecf\u662f\u8282\u7701\u51fa**\u4e0a\u4e00\u4e2a\u4eba**\u5411\u53f3\u6269\u5c55\u4e86\uff0c\u6240\u4ee5\u4e0d\u5fc5\u8ba8\u8bba\u3002\n\n### \u3010\u5f97\u51fa\u7ed3\u8bba\u3011\n\u7136\u540e\u6211\u4eec\u5c31\u53d1\u73b0\uff0c\u6211\u4eec\u4e0a\u8ff0\u7684\u5206\u7c7b\u8ba8\u8bba\u90fd\u662f\u57fa\u4e8e**\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb**\u7684\uff0c\u51ed\u501f\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u73af\u4e0a\u8ddd\u79bb\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u7edd\u5bf9\u4e0d\u5b58\u5728\u4e92\u76f8\u8986\u76d6\u7684\u5173\u7cfb\uff0c\u5373\u5982\u679c\u628a\u73af\u4e0a\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\u8bbe\u4e3a$1$\u4e0e$n$\uff0c\u4e0d\u7528\u8003\u8651$1$\u548c$n$\u4e92\u76f8\u8986\u76d6\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u6211\u4eec\u4ece\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\u5904\u76f4\u63a5\u7834\u73af\u4e3a\u94fe\u5373\u53ef\u3002\n\n### \u3010\u521d\u59cb\u72b6\u6001\u8bbe\u8ba1\u3011\n\u521a\u624d\u53ea\u8bbe\u8ba1\u5b8c\u4e86\u72b6\u6001\u8f6c\u79fb\uff0c\u73b0\u5728\u8bbe\u8ba1\u521d\u59cb\u72b6\u6001\u3002\n\n\u7531\u4e8e\u5df2\u7ecf\u7834\u73af\u4e3a\u94fe\uff0c\u6211\u4eec\u8003\u8651\u5206\u6790\u7b2c\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\u3002\n\n\u53d1\u73b0\u7b2c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u9009\u62e9\u5411\u53f3\uff082\uff09\u6216\u8005\u5411\u5de6\uff08n\uff09\u8d70\u3002\n\n\u56e0\u6b64\u6211\u4eec\u518d\u6b21\u5206\u7c7b\u8ba8\u8bba\u3002\n\n1\u3001\u5411\u5de6\u8d70\uff0c$dp[1]=0$\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u6700\u540e\u8981\u6c42$dp[n]\\geq m-x-1$\n\n2\u3001\u5411\u53f3\u8d70\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u53c8\u6709\u4e24\u79cd\u60c5\u51b5\n\n2.a.\u5411\u53f3\u8d70\uff0c\u6ca1\u8d70\u5230$2$\uff0c$x\\leq b[2]$\u90a3\u4e48\u53ef\u601c\u7684$2$\u53f7\u5c31\u8981\u7ed9$1$\u53f7\u586b\u5751\u5411\u5de6\u8d70\u4e86\u3002$dp[2]=b[2]$\uff0c\u6700\u540e\u8981\u6c42$dp[n]\\geq m-1$\uff08\u56e0\u4e3a$2$\u4e5f\u8d70\u4e0d\u5230\u3002\u3002\u3002\uff09\n\n2.b.\u5411\u53f3\u8d70\uff0c\u8d70\u8fc7$2$\u4e86\uff0c$x\\geq b[2]$\u90a3\u4e48\u5176\u5b9e\u8fd8\u5e94\u8be5\u8ba9$2$\u5f80\u5de6\u8d70\uff0c$dp[2]=x$\uff0c\u6700\u540e\u8981\u6c42$dp[n]\\geq m + b[2] - x - 1$\uff0c\u4e0d\u5411\u53f3\u8d70\u7684\u539f\u56e0\u5728\u4e8e\uff0c$n$~$1$\u8fd9\u6bb5\u533a\u95f4\u4e00\u5b9a\u662f\u6700\u957f\u7684\uff08\u6216\u4e4b\u4e00\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u586b\u8fd9\u6bb5\u533a\u95f4\u663e\u7136\u66f4\u597d\uff0c\u56e0\u4e3a\u5982\u679c$1$\u5411\u5de6\u8d70\uff0c\u586b\u7684\u662f$n$~$1$\u4e0e$1$~$2$\uff0c\u800c$1,2$\u90fd\u5411\u53f3\u8d70\u586b\u7684\u662f$2$~$3$\u4e0e$1$~$2$\uff0c\u800c\u586b$2$~$3$\u663e\u7136\u4e0d\u5982\u586b\u6700\u957f\u7684\u533a\u95f4\u597d\uff08\u54ea\u6015\u76f8\u7b49\u4e5f\u662f\u4e00\u6837\u597d\uff09\n\n\u90a3\u4e48\u5c31\u8fd9\u6837\u8dd1\u4e24\u6b21DP\u5c31\u505a\u5b8c\u4e86\uff0c\u8be6\u7ec6\u770b\u4ee3\u7801\u3002\n\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nLL n, m;\nLL a[200010], b[200010], l, r, ans;\ninline void init(){//\u521d\u59cb\u5316\uff0c\u7834\u73af\u4e3a\u94fe\n    int it = 1;\n    for (register int i = 2;i <= n;i ++) if(a[i + 1] - a[i] > a[it + 1] - a[it]) it = i;\n    r = a[it + 1] - a[it] - 1;//\u5c06\u6700\u957f\u533a\u95f4\u7684\u957f\u5ea6\u8bbe\u4e3a\u4e8c\u5206\u7684\u4e0a\u754c\n    for (register int i = 1;i <= n;i ++) b[i] = a[i + it];\n    LL tmp = b[1];\n    for (register int i = 1;i <= n;i ++) b[i] -= tmp;\n}\n\nLL dp[200010];\ninline bool ck(LL x){\n    dp[1] = 0;//\u5411\u5de6\u8d70\n    for (register int i = 2;i <= n;i ++){\n        dp[i] = dp[i - 1];\n        if(dp[i - 1] >= b[i] - 1) dp[i] = max(dp[i], b[i] + x);\n        if(dp[i - 1] >= b[i] - x - 1) dp[i] = max(dp[i], b[i]);\n        if(i > 2 && dp[i - 2] >= b[i] - x - 1) dp[i] = max(dp[i], b[i - 1] + x); \n    }\n    if(dp[n] >= m - x - 1) return 1;\n    dp[2] = max(b[2], x);//\u5411\u53f3\u8d70\u7684\u4e24\u79cd\u60c5\u51b5\n    for (register int i = 3;i <= n;i ++){\n        dp[i] = dp[i - 1];\n        if(dp[i - 1] >= b[i] - 1) dp[i] = max(dp[i], b[i] + x);\n        if(dp[i - 1] >= b[i] - x - 1) dp[i] = max(dp[i], b[i]);\n        if(dp[i - 2] >= b[i] - x - 1) dp[i] = max(dp[i], b[i - 1] + x); \n    }\n    if(dp[n] >= min(m - 1, m + b[2] - x - 1)) return 1;\n    return 0;\n}\n\nint main(){\n    scanf(\"%lld%lld\", &m, &n);\n    for (register int i = 1;i <= n;i ++){\n        scanf(\"%lld\", &a[i]);\n        a[i + n] = a[i] + m;//\u5148\u6682\u65f6\u500d\u957f\n    }\n    if(n == 1) {//\u7279\u5224\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\n        printf(\"%lld\", m - 1);\n        return 0;\n    }\n    sort(a + 1, a + (n << 1) + 1);//\u6392\u4e2a\u5e8f\n    init();\n    while(l <= r){\n        LL mid = (l + r) >> 1;\n        if(ck(mid)) ans = mid, r = mid - 1;\n        else l = mid + 1;\n    }\n    printf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1595654176,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF713E \u3010Sonya Partymaker\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF713E)\t[CF\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/713/E)\n\n\u90e8\u5206\u53c2\u8003\u4e0a\u9762\u7684\u9898\u89e3=\uffe3\u03c9\uffe3=\n\n### Description\n\n\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u73af\u4e0a\u6709\u6307\u5b9a\u7684 $n$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u9009\u4e00\u4e2a\u65b9\u5411\uff08\u5de6\u6216\u53f3\uff09\u5ef6\u4f38\u51fa\u4e00\u6761\u957f\u5ea6\u4e3a $x$ \u7684\u7ebf\u6bb5\uff0c\u95ee\u8986\u76d6\u8fd9\u4e2a\u73af\u7684\u6700\u5c0f $x$ \n\n### Solution\n\n\u56e0\u4e3a\u8981\u6c42\u6700\u5c0f\u7684 $x$ \uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48 $\\operatorname{check}$ \u5462\uff1f\n\n\u56e0\u4e3a\u662f\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\u6240\u4ee5\u7528\u719f\u6089\u7684\u65b9\u6cd5\uff0c\u5148\u62c6\u73af\u6210\u94fe\uff0c\u7136\u540e\u518d\u8fd4\u8fc7\u6765\u770b\u73af\u3002\n\n\u5982\u679c\u5728\u4e00\u4e2a\u94fe\u4e0a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528DP\u4e86\u3002\n\n\u8bbe $f_i$ \u4e3a\u7b2c $i$ \u4e2a\u70b9\u80fd\u8986\u76d6\u7684\u6700\u8fdc\u4f4d\u7f6e\uff0c $p_i$ \u4e3a\u7b2c $i$ \u4e2a\u70b9\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf_i=\\max\\begin{cases}p_i+x &(p_i-1\\leq f_{i-1})\\\\p_i&(p_i-x+1\\leq f_{i-1}<p_i-1)\\end{cases}\n$$\n\n\u7b2c\u4e00\u4e2a\u4ee3\u8868 $i-1$ \u80fd\u8986\u76d6\u5230 $i$ \u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5 $i$ \u53ef\u4ee5\u5f80\u53f3\u8d70\uff1b\u7b2c\u4e8c\u4e2a\u662f $i-1$ \u8986\u76d6\u4e0d\u5230 $i$ \u4f46\u662f $i$ \u5f80\u5de6\u8d70\u80fd\u4f7f\u5f97 $i$ \u4e4b\u524d\u88ab\u90fd\u88ab\u8986\u76d6\uff0c\u6240\u4ee5 $i$ \u8d70\u7684\u6700\u8fdc\u7684\u4f4d\u7f6e\u5c31\u662f\u539f\u6765\u7684\u4f4d\u7f6e\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u6709\u4e2a\u95ee\u9898\uff0c $i-1$ \u548c $i$ \u4e4b\u95f4\u7684\u4f4d\u7f6e\u5982\u679c\u53ef\u4ee5\u7528 $i-2$ \u5f80\u5de6\u8d70\u6765\u8986\u76d6\uff0c\u6211\u4eec\u6ca1\u6709\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u3002\u90a3\u4e48\u6b64\u65f6 $i-1$ \u5c31\u53ef\u4ee5\u5f80\u53f3\u8d70\uff0c\u72b6\u6001\u65b9\u7a0b\u5c31\u4f1a\u53d8\u6210\uff1a\n$$\nf_{i}=\\max(f_i,p_{i-1}+x) (p_{i}-x+1\\leq f_{i-2})\n$$\n\u72b6\u6001\u8f6c\u79fb\u5c31\u5b8c\u4e86\u3002\n\n\u55ef\uff1f $i-1$ \u548c $i$ \u4e4b\u95f4\u7684\u4f4d\u7f6e\u80fd\u88ab $i+1$ \u8986\u76d6\uff0c\u600e\u4e48\u529e\u3002\n\n\u90a3\u4ec0\u4e48\u60c5\u51b5 $i+1$ \u4f1a\u5f80\u5de6\u8986\u76d6\u5462\uff1f\u5c31\u662f $f_{i}<p_{i+1}-1$ \uff0c\u6240\u4ee5\u5982\u679c $i$ \u80fd\u5f80\u53f3\uff0c\u90a3 $i-1$ \u5f80\u53f3\u663e\u7136\u66f4\u4f18\uff0c\u6240\u4ee5\u662f\u5305\u542b\u5728\u4e0a\u9762\u7684\u65b9\u7a0b\u4e2d\u7684(\uffe3\u25bd\uffe3)\"\n\n\u90a3\u4e48\u56de\u8fc7\u6765\u8003\u8651\u73af\u600e\u4e48\u529e\u2014\u2014\u53d1\u73b0\u53ef\u80fd $1$ \u548c $2$ \u4e4b\u95f4\u7684\u8fd9\u4e00\u6bb5\u662f\u7531 $n$ \u6765\u8986\u76d6\u7684\uff0c\u90a3\u8fd9\u6837\u5c31\u4e0d\u80fd\u8f6c\u79fb\u4e86\u3002\n\n\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u5c06\u6700\u957f\u7684\u90a3\u4e00\u6761\u8fb9\u7834\u5f00\uff0c\u5e76\u8fd9\u6761\u8fb9\u4f5c\u4e3a\u4e8c\u5206\u7684\u4e0a\u754c\uff0c\u90a3\u4e48\u73b0\u5728\u7684 $n$ \u5c31\u4e0d\u80fd\u5f80\u53f3\u8986\u76d6 $1$ \u4e86\u3002\n\n\u7136\u540e\u5c06 $1$ \u5f80\u5de6\u548c\u5f80\u53f3\u90fdDP\u4e00\u6b21\u5373\u53ef\u3002\n\n### Code\n\n```c++\n#include<bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\nconst int N=200010;\nll n,m,a[N],p[N],f[N],l,r,ans;\n\ninline ll read(){\n    ll x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\n    return x*f;\n}\n\ninline void init(){\n    int now=1;\n    for(int i=2;i<=n;i++)\n        if(a[i+1]-a[i]>a[now+1]-a[now]) now=i;\n    r=a[now+1]-a[now]-1;\n    for(int i=1;i<=n;i++) p[i]=a[i+now];\n    ll tmp=p[1];\n    for(int i=1;i<=n;i++) p[i]-=tmp;\n}\n\ninline bool check(ll x){\n    f[1]=0;\n    for(int i=2;i<=n;i++){\n        f[i]=f[i-1];\n        if(f[i-1]>=p[i]-1) f[i]=max(f[i],p[i]+x);\n        if(f[i-1]>=p[i]-x-1) f[i]=max(f[i],p[i]);\n        if(i>2&&f[i-2]>=p[i]-x-1) f[i]=max(f[i],p[i-1]+x);\n    }\n    if(f[n]>=m-x-1) return 1;\n    f[2]=max(p[2],x);\n    for(int i=3;i<=n;i++){\n        f[i]=f[i-1];\n        if(f[i-1]>=p[i]-1) f[i]=max(f[i],p[i]+x);\n        else if(f[i-1]>=p[i]-x-1) f[i]=max(f[i],p[i]);\n        if(f[i-2]>=p[i]-x-1) f[i]=max(f[i],p[i-1]+x);\n    }\n    if(f[n]>=min(m-1,m+p[2]-x-1)) return 1;\n    return 0;\n}\n\nint main(){\n    m=read(); n=read();\n    for(int i=1;i<=n;i++){\n        a[i]=read();\n        a[i+n]=a[i]+m;\n    }\n    if(n==1){\n        printf(\"%lld\\n\",m-1);\n        return 0;\n    }\n    init();\n    while(l<=r){\n        ll mid=(l+r)>>1;\n        if(check(mid)) ans=mid,r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1604543470,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "CF713E Sonya Partymaker"
    },
    {
        "content": "\u7ea6\u5b9a\u4f4d\u7f6e\u5e8f\u53f7\u4e3a $0\\sim m-1$\u3002\n\n\u9996\u5148\u8003\u8651\u4e8c\u5206\u7b54\u6848 $k$\u3002\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u4ece\u521d\u59cb\u4f4d\u7f6e\u5f00\u59cb\u5f80\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u65b9\u5411\u53d1\u51fa\u4e00\u6761\u957f\u5ea6\u4e3a $k+1$ \u7684\u73af\u5f62\u533a\u95f4\uff0c\u95ee\u662f\u5426\u6709\u4e00\u79cd\u65b9\u6848\u80fd\u8986\u76d6\u6240\u6709\u70b9\u3002\n\n\u73af\u5f62\u95ee\u9898\uff0c\u8003\u8651\u7684\u81ea\u7136\u662f\u5728\u67d0\u4e2a\u5730\u65b9\u65ad\u5f00\uff0c\u53d8\u6210\u5e8f\u5217\uff0c\u518d\u9644\u52a0\u5730\u8003\u8651\u5934\u5c3e\u4e92\u76f8\u7684\u5f71\u54cd\u3002\u4e8e\u662f\u6211\u4eec\u5148\u8003\u8651\u5e8f\u5217\u600e\u4e48\u505a\uff08\u4e0d\u80fd\u8de8\u5934\u5c3e\uff0c\u533a\u95f4\u9876\u5230\u5934\u5c3e\u5c31\u4e0d\u4f1a\u7ee7\u7eed\u5ef6\u4f38\uff09\uff0c\u8fd9\u51e0\u4e4e\u662f\u5fc5\u8981\u7684\u3002\n\n\u8003\u8651\u4ece\u6700\u540e\u4e00\u4e2a\u6709\u4eba\u7684\u4f4d\u7f6e\u5207\u5165\u3002\n\n- \u5982\u679c\u8be5\u4f4d\u7f6e\u6070\u597d\u4e3a $m-1$\uff0c\u90a3\u663e\u7136\u5c31\u8d2a\u5fc3\u5730\u5f80\u5de6\u8986\u76d6\u3002\n\n- \u5426\u5219\uff0c\u5176\u53f3\u8fb9\u6709\u4e00\u6bb5\u7a7a\u4f4d\uff0c\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u4eba\u53bb\u5f80\u53f3\u8986\u76d6\u3002\u800c\u80fd\u80dc\u4efb\u8fd9\u9879\u4efb\u52a1\u7684\u4eba\uff0c\u80af\u5b9a\u662f\u4e00\u4e2a\u540e\u7f00\u3002\n\n  \u4e00\u4e2a\u663e\u7136\u7684\u89c2\u5bdf\u662f\uff0c\u5982\u679c\u8be5\u540e\u7f00\u4e2d\u6709\u8d85\u8fc7\u4e00\u4e2a\u4eba\u53bb\u5f80\u53f3\u8986\u76d6\uff0c\u90a3\u5176\u5b9e\u9664\u4e86\u6700\u5de6\u8fb9\u7684\u8fd9\u4f4d\uff0c\u5176\u4ed6\u4eba\u90fd\u6ca1\u7528\uff0c\u8fd8\u4e0d\u5982\u5f80\u5de6\u3002\n\n  \u90a3\u6211\u4eec\u8003\u8651\u679a\u4e3e\u8fd9\u4e2a\u552f\u4e00\u7684\u4eba\u662f\u8c01\uff0c\u7136\u540e\u4ee4\u5176\u540e\u9762\u7684\u4eba\u5168\u90e8\u5f80\u5de6\uff0c\u4e5f\u5f52\u7ea6\u5230\u4e86\u4e00\u4e2a\u89c4\u6a21\u66f4\u5c0f\u7684\u60c5\u51b5\u3002\n\n\u8fd9\u6837\u5c31\u6709\u4e86\u4e00\u4e2a\u5f88\u52a3\u7684\u57fa\u4e8e\u503c\u57df\u7684 DP\uff1a$f_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u70b9\uff0c\u60f3\u8981\u8986\u76d6\u7f16\u53f7\u4e3a $0\\sim j$ \u7684\u70b9\uff0c\u662f\u5426\u80fd\u6210\u529f\u3002\u8f6c\u79fb\u5c31\u5206\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u5457\u3002\n\n\u7531\u4e8e DP \u503c\u662f `bool`\uff0c\u800c\u4e14\u663e\u7136\u5173\u4e8e $j$ \u6709\u5355\u8c03\u6027\uff0c\u5bb9\u6613\u60f3\u5230\u4ea4\u6362\u503c\u57df\u5b9a\u4e49\u57df\uff1a\u91cd\u65b0\u4ee4 $f_i$ \u8868\u793a\u524d $i$ \u4e2a\u70b9\u6700\u957f\u80fd\u8986\u76d6\u591a\u8fdc\u7684\u524d\u7f00\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u590d\u6742\u5ea6\u81f3\u5c11\u662f\u591a\u9879\u5f0f\u7ea7\u522b\u7684\u4e86\u3002\u5177\u4f53\u5730\uff0c\u5e94\u8be5\u662f $\\mathrm O(n^2)$\u3002\n\n\u8fdb\u4e00\u6b65\u5730\uff0c\u8003\u8651\u53e6\u4e00\u4e2a\u89c2\u5bdf\uff1a\u5b9e\u9645\u4e0a\uff0c\u5728\u7b2c\u4e8c\u79cd\u8f6c\u79fb\u4e2d\u6211\u4eec\u679a\u4e3e\u8c01\u662f\u6700\u540e\u4e00\u4e2a\u5f80\u53f3\u8986\u76d6\u7684\u4eba\u65f6\uff0c\u5047\u8bbe\u679a\u4e3e\u7684\u662f $x$\uff0c\u90a3\u4e48 $x+1\\sim i$ \u8fd9\u4e9b\u5f80\u5de6\u7684\u4eba\u91cc\u9762\uff0c\u5176\u5b9e\u53ea\u6709 $x+1$ \u662f\u771f\u6b63\u6709\u7528\u7684\u3002\u56e0\u4e3a\u65e2\u7136 $x$ \u80fd\u8986\u76d6\u5230\u6700\u53f3\u8fb9\uff0c$x+1\\sim i$ \u8fd9\u7fa4\u5f80\u5de6\u7684\u4eba\u7684\u552f\u4e00\u4efb\u52a1\u5c31\u662f\u5f80 $a_x$ \u5de6\u8fb9\u591a\u8986\u76d6\u4e00\u70b9\uff0c\u800c\u8fd9\u663e\u7136\u662f\u5355\u8c03\u7684\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c$x+2\\sim i$ \u53ef\u4ee5\u968f\u610f\u5206\u914d\u65b9\u5411\u3002\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4ee4 $i$ \u5f80\u53f3\u8986\u76d6\u5462\uff1f\u77a7\uff0c\u73b0\u5728\u679a\u4e3e\u91cf\u76f4\u63a5\u53d8\u6210\u4e86 $\\mathrm O(1)$\uff0c\u53ea\u8981\u8003\u8651 $i$ \u548c $i-1$ \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm O(n)$\u3002\n\n\u56de\u5230\u539f\u95ee\u9898\u4e0a\u6765\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u73af\u4e24\u7aef\u7684\u5f71\u54cd\u3002\n\n\u9996\u5148\u5176\u5b9e\u5bb9\u6613\u60f3\u5230\uff0c\u628a\u5934\u5bf9\u5c3e\u7684\u8d21\u732e\u548c\u5c3e\u5bf9\u5934\u7684\u8d21\u732e\u4e4b\u4e00\u7ed9\u5220\u6389\u3002\u6ce8\u610f\u5230\u5982\u679c $k$ \u4e0d\u4f4e\u4e8e\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u95f4\u9694\u7684\u8bdd\uff0c\u90a3\u5168\u90e8\u4ee4\u4e3a\u4e00\u4e2a\u65b9\u5411\u76f4\u63a5\u6709\u89e3\u3002\u6240\u4ee5\u5b58\u5728\u4e00\u4e2a\u95f4\u9694\u662f\u5927\u4e8e $k$ \u7684\u3002\u6211\u4eec\u628a\u5750\u6807\u65cb\u8f6c\u4e00\u4e0b\uff0c\u4f7f\u5f97\u4f4d\u7f6e $0$ \u6709\u4eba\uff0c\u4e14\u6700\u540e\u4e00\u4e2a\u6709\u4eba\u7684\u4f4d\u7f6e\u8ddd\u79bb\u672b\u5c3e\u6700\u8fdc\u3002\u8fd9\u6837\u672b\u5c3e\u5c31\u4e0d\u4f1a\u5bf9\u5f00\u5934\u6709\u8d21\u732e\u4e86\u3002\n\n\u8003\u8651\u679a\u4e3e\u5f00\u5934\u7b2c\u4e00\u4e2a\u5f80\u5de6\u8986\u76d6\uff08\u5e76\u4e14\u8de8\u8fc7\u5f00\u5934\u8986\u76d6\u5230\u672b\u5c3e\uff09\u7684\u4eba $x$\u3002\u90a3\u4e48\u7c7b\u4f3c\u5730\uff0c\u4f9d\u7136\u6709\u7ed3\u8bba\uff1a\u5982\u679c $x>2$\uff0c\u90a3\u4e48 $1\\sim x-2$ \u90fd\u6ca1\u7528\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ee4\u7b2c\u4e00\u4e2a\u4eba\u5f80\u5de6\u8986\u76d6\u3002\u6240\u4ee5\u53ea\u53ef\u80fd\u662f\u7b2c\u4e00\u4e2a\u4eba\u5f80\u5de6\u3001\u7b2c\u4e8c\u4e2a\u4eba\u5f80\u5de6\u3001\u5934\u5bf9\u5c3e\u6ca1\u6709\u8d21\u732e\uff0c\u8fd9\u4e09\u79cd\u60c5\u51b5\u3002\u5206\u522b DP \u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm O(n\\log m)$\u3002\u601d\u8def\u975e\u5e38\u6e05\u6670\u963f\uff0c\u4e3a\u6211\u81ea\u5df1\u70b9\u8d5e\uff01\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n#define int ll\nusing pii = pair<int, int>;\n#define mr make_pair\n#define fi first\n#define se second\nusing vi = vector<int>; using vii = vector<pii>;\n#define pb emplace_back\n#define sz(x) ((int)(x).size())\ntemplate<class T, class U> inline void cmn(T &x, const U &y) { if(y < x) x = y; }\ntemplate<class T, class U> inline void cmx(T &x, const U &y) { if(y > x) x = y; }\nconst char nl = '\\n', nk = ' ';\nconst int so = sizeof(int), inf = so == 4 ? 0x3f3f3f3f : 0x3f3f3f3f3f3f3f3f;\n\nconst int N = 1e5 + 10;\n\nint n, m;\nint a[N];\n\nint f[N];\nvoid calc(int st, int t) {\n  for(int i = st; i <= n; ++i) {\n    f[i] = f[i - 1];\n    if(f[i - 1] >= a[i] - 1) cmx(f[i], a[i] + t);\n    if(i > st) {\n      int l = min(a[i - 1], a[i] - t), r = max(a[i], a[i - 1] + t);\n      if(f[i - 2] >= l - 1) cmx(f[i], r);\n    }\n    if(f[i - 1] >= a[i] - t - 1) cmx(f[i], a[i]);\n  }\n}\n\nbool chk(int t) {\n  f[1] = t, calc(2, t);\n  if(f[n] >= m - 1) return true;\n  f[1] = 0, calc(2, t);\n  if(f[n] >= m - t - 1) return true;\n  if(n >= 2 && a[2] < t) {\n    f[2] = t, calc(3, t);\n    if(f[n] >= m - (t - a[2]) - 1) return true;\n  }\n  return false;\n}\n\nvoid mian() {\n  cin >> m >> n;\n  for(int i = 1; i <= n; ++i) cin >> a[i];\n  pii mx(0, 0);\n  for(int i = 1; i < n; ++i) cmx(mx, mr(a[i + 1] - a[i], i + 1));\n  cmx(mx, mr(a[1] + m - a[n], 1ll));\n  int sub = a[mx.se];\n  for(int i = 1; i <= n; ++i) a[i] = (a[i] + m - sub) % m;\n  sort(a + 1, a + n + 1);\n//  for(int i = 1; i <= n; ++i) cerr << a[i] << (i == n ? nl : nk);\n  int ans = m - a[n] - 1;\n  for(int i = 30; ~i; --i) if(ans - (1 << i) >= (m - a[n]) / 2 && chk(ans - (1 << i))) ans -= 1 << i;\n  cout << ans << nl;\n}\n\nsigned main() {\n  cin.tie(nullptr)->sync_with_stdio(false);\n  int t = 1;\n//  cin >> t;\n  while(t--) mian();\n  return 0;\n}\n\n```\n\n",
        "postTime": 1679996587,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CF713E - Sonya Partymaker \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u4e8c\u5206\uff0c\u73b0\u5728\u6211\u4eec\u6709 $n$ \u4e2a\u51b3\u7b56\u70b9\uff0c\u9700\u8981\u4ece\u6bcf\u4e2a\u70b9\u5411\u67d0\u4e00\u8fb9\u5ef6\u4f38\u51fa\u4e00\u4e2a\u8986\u76d6 $k+1$ \u4e2a\u70b9\u7684\u7ebf\u6bb5\uff0c\u95ee\u80fd\u4e0d\u80fd\u8986\u76d6\u6574\u4e2a\u73af\u3002\u73af\u4e0a\u9762\u6ca1\u6709\u592a\u591a\u597d\u7684\u6027\u8d28\uff0c\u6211\u4eec\u5c1d\u8bd5\u65ad\u73af\u4e3a\u94fe\u3002\n\n\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u7b2c\u4e00\u4e2a\u5411\u5de6\u5ef6\u4f38\u5e76\u8d85\u8fc7\u5de6\u8fb9\u754c\u7684\u7ebf\u6bb5\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u7ba1\u4e4b\u540e\u5411\u5de6\u5ef6\u4f38\u7684\u7ebf\u6bb5\u6709\u6ca1\u6709\u8d85\u8fc7\u5de6\u8fb9\u754c\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6c42\u7684\u4ec5\u4ec5\u662f\u5411\u53f3\u53ef\u4ee5\u8986\u76d6\u591a\u8fdc\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u5728\u6c42\u51fa\u8fd9\u4e2a\u4e4b\u524d\u65e0\u6cd5\u63d0\u524d\u5f97\u77e5\u5411\u53f3\u5ef6\u4f38\u7684\u7ebf\u6bb5\u4f1a\u8d85\u8fc7\u53f3\u8fb9\u754c\u591a\u8fdc\uff0c\u4e0d\u77e5\u9053\u8fd9\u4e2a\u65e0\u8bba\u662f\u8d2a\u5fc3\u8fd8\u662f dp \u90fd\u4e0d\u597d\u8fdb\u884c\uff0c\u53c8\u4e0d\u592a\u53ef\u80fd\u679a\u4e3e\u8fd9\u4e2a\u503c\u3002\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u65ad\u73af\u4e3a\u94fe\u65f6\u8981\u6ee1\u8db3\uff1a\u4e0d\u80fd\u6709\u7ebf\u6bb5\u5f80\u53f3\u5ef6\u4f38\u8d85\u8fc7\u53f3\u8fb9\u754c\u3002\n\n\u76f4\u63a5\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u60f3\u8ba9\u6700\u540e\u4e00\u4e2a\u51b3\u7b56\u70b9\u5230\u53f3\u8fb9\u754c\u7684\u8ddd\u79bb\u5927\u4e8e $k$\u3002\u4f46\u662f $k$ \u662f\u4e8c\u5206\u51fa\u6765\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8d77\u7801\u5e0c\u671b\u6700\u540e\u4e00\u4e2a\u51b3\u7b56\u70b9\u5230\u53f3\u8fb9\u754c\u7684\u8ddd\u79bb\u5c3d\u91cf\u5927\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53d6\u8ddd\u79bb\u6700\u5927\u7684\u76f8\u90bb\u4e24\u4e2a\u51b3\u7b56\u70b9\uff0c\u628a\u53f3\u8fb9\u90a3\u4e2a\u4f5c\u4e3a\u65ad\u73af\u4e3a\u94fe\u540e\u7684\u7b2c\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c $k$ \u5927\u4e8e\u8fd9\u4e2a\u8ddd\u79bb\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u89e3\u3002\u6240\u4ee5\u8fd9\u6837\u65ad\u73af\u4e3a\u94fe\u6ee1\u8db3\u6211\u4eec\u4e0a\u9762\u8bf4\u7684\u8981\u6c42\u3002\n\n\u5148\u5fd8\u8bb0\u6211\u4eec\u8fd8\u6ca1\u6709\u786e\u5b9a\u7b2c\u4e00\u4e2a\u5f80\u5de6\u7684\u51b3\u7b56\u70b9\uff0c\u6211\u4eec\u5148\u8003\u8651\u600e\u4e48\u5728\u4e0d\u8003\u8651\u7ebf\u6bb5\u8d85\u4e0d\u8d85\u8fc7\u5de6\u8fb9\u754c\u7684\u60c5\u51b5\u4e0b\u6c42\u51fa\u53f3\u8fb9\u6700\u8fdc\u80fd\u8986\u76d6\u5230\u54ea\u91cc\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e00\u6b65\u4e5f\u53ef\u4ee5\u653e\u5728\u540e\u9762\uff0c\u5982\u679c\u4f60\u60f3\u8fd9\u4e48\u505a\u53ef\u4ee5\u5148\u5f80\u540e\u8df3\u8dc3\u51e0\u6bb5\u3002\n\n\u6211\u4eec\u8003\u8651 dp\u3002\u8bbe\u8ba1\u72b6\u6001\u65f6\u4e00\u5b9a\u5f97\u8ba9\u88ab\u8986\u76d6\u7684\u70b9\u662f\u4e2a\u524d\u7f00\uff0c\u4e0d\u7136\u6ca1\u6cd5\u8003\u8651\u3002$f_i$ \u8868\u793a\u4ec5\u8003\u8651\u524d $i$ \u4e2a\u51b3\u7b56\u70b9\uff08\u6309\u7167\u65ad\u73af\u4e3a\u94fe\u4ee5\u540e\u7684\u987a\u5e8f\uff09\uff0c\u8981\u6c42\u7b2c $i$ \u4e2a\u51b3\u7b56\u70b9\u4e4b\u524d\u7684\u6bcf\u4e2a\u70b9\u90fd\u88ab\u8986\u76d6\uff0c\u6b64\u65f6\u5f80\u53f3\u6700\u8fdc\u80fd\u8986\u76d6\u5230\u54ea\u4e2a\u70b9\uff08\u4e5f\u662f\u65ad\u73af\u4e3a\u94fe\u4e4b\u540e\u7684\u5750\u6807\uff09\uff0c\u5982\u679c\u6ee1\u8db3\u4e0d\u4e86\u6761\u4ef6\u5373\u4e3a $-\\infty$\u3002\n\n\u8003\u8651\u7b2c $i$ \u4e2a\u51b3\u7b56\u70b9\u7684\u51b3\u7b56\uff1a\n- \u82e5\u5b83\u5f80\u53f3\u5ef6\u4f38\uff0c\u90a3\u4e48\u524d $i-1$ \u4e2a\u70b9\u9700\u8981\u6ee1\u8db3\u7684\u662f $f_{i-1}\\ge a_i-1$\u3002\n- \u82e5\u5b83\u5f80\u5de6\u5ef6\u4f38\uff0c\u4e14\u5de6\u8fb9\u67d0\u4e2a\u51b3\u7b56\u70b9\u5411\u53f3\u8d85\u8fc7\u4e86 $a_i$\uff0c\u90a3\u4e48\u6b64\u65f6\u7b2c $i-1$ \u4e2a\u51b3\u7b56\u70b9\u4e00\u5b9a\u5f80\u53f3\u5ef6\u4f38\uff0c\u5426\u5219\u628a\u5b83\u53d8\u5f97\u5f80\u53f3\u4f9d\u7136\u5408\u6cd5\u3002\u5e76\u4e14\uff0c\u4ec5\u8003\u8651\u524d $i-2$ \u4e2a\u51b3\u7b56\u70b9\u65f6\uff0c\u7b2c $i-2$ \u4e2a\u51b3\u7b56\u70b9\u4e4b\u524d\u7684\u6bcf\u4e2a\u70b9\u90fd\u88ab\u8986\u76d6\uff0c\u5426\u5219\u628a\u7b2c $i-2$ \u4e2a\u51b3\u7b56\u70b9\u53d8\u5f97\u5411\u5de6\u4f9d\u7136\u5408\u6cd5\u3002\u90a3\u4e48\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u662f $f_{i-2}\\ge a_i-k-1$\u3002\n- \u82e5\u5b83\u5f80\u5de6\u5ef6\u4f38\uff0c\u4e14\u5de6\u8fb9\u6ca1\u6709\u51b3\u7b56\u70b9\u5411\u53f3\u8d85\u8fc7 $a_i$\uff0c\u90a3\u4e48\u4ec5\u8003\u8651\u524d $i-1$ \u4e2a\u51b3\u7b56\u70b9\u65f6\uff0c\u7b2c $i-1$ \u4e2a\u51b3\u7b56\u70b9\u4e4b\u524d\u7684\u6bcf\u4e2a\u70b9\u90fd\u88ab\u8986\u76d6\uff0c\u5426\u5219\u53ef\u4ee5\u628a\u7b2c $i-1$ \u4e2a\u51b3\u7b56\u70b9\u53d8\u6210\u5411\u5de6\u3002\u6b64\u65f6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u662f $f_{i-1}\\ge a_i-k-1$\u3002\n\n\u8fd9\u53ea\u9002\u7528\u4e8e $i\\ge3$\u3002\u5177\u4f53\u7684 dp \u5f0f\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u51b3\u5b9a\u7b2c\u4e00\u4e2a\u5f80\u5de6\u7684\u51b3\u7b56\u70b9\u3002\u6839\u636e\u4e0a\u9762 dp \u7684\u542f\u53d1\uff0c\u6211\u4eec\u76f4\u89c2\u611f\u53d7\u5230\u53ef\u80fd\u53ea\u9700\u8981\u8003\u8651\u5c11\u6570\u51e0\u4e2a\u51b3\u7b56\u70b9\u3002\u6211\u4eec\u65ad\u8a00\uff1a\u5982\u679c\u7b2c\u4e00\u4e2a\u51b3\u7b56\u70b9\u5f80\u53f3\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u51b3\u7b56\u70b9\u5fc5\u7136\u5f80\u5de6\u3002\u5426\u5219\uff0c\u82e5\u6ca1\u6709\u51b3\u7b56\u70b9\u8d85\u8fc7\u5de6\u8fb9\u754c\u5219\u65e0\u89e3\uff0c\u82e5\u6709\u51b3\u7b56\u70b9\u8d85\u8fc7\u5de6\u8fb9\u754c\u90a3\u628a\u7b2c\u4e8c\u4e2a\u51b3\u7b56\u70b9\u6539\u4e3a\u5f80\u5de6\u4f9d\u7136\u5408\u6cd5\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u505a\u4e24\u6b21 dp \u5373\u53ef\uff0c\u524d\u4e24\u4e2a dp \u503c\u53ef\u4ee5\u7b80\u5355\u8ba8\u8bba\u6c42\u51fa\u3002\u5e26\u4e0a\u4e8c\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log m)$\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\ninline ll read(){\n\tll x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=1e5+5;\nint n,m,a[maxn],a2[maxn],f[maxn];\nconst int inf=2e9;\nint main(){\n#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n#endif\n\tm=read();\n\tn=read();\n\tif(n==1){\n\t\tprintf(\"%d\\n\",m-1);\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<n;i++) a2[i]=read()-1;\n\tint mx=1;\n\tfor(int i=2;i<n;i++)\n\t\tif(a2[i]-a2[i-1]>a2[mx]-a2[mx-1]) mx=i;\n\tif(a2[0]-a2[n-1]+m>a2[mx]-a2[mx-1]) mx=0;\n\tfor(int i=mx;i<n;i++) a[i-mx]=a2[i]-a2[mx];\n\tfor(int i=0;i<mx;i++) a[i+n-mx]=a2[i]-a2[mx]+m;\n\tint l=(m-a[n-1])/2,r=m-a[n-1]-1;\n\twhile(l<r){\n\t\tint mid=l+(r-l)/2;\n\t\tauto dp=[mid](){\n\t\t\tfor(int i=2;i<n;i++)\n\t\t\t\tif(f[i-1]>=a[i]-1) f[i]=a[i]+mid;\n\t\t\t\telse if(f[i-2]>=a[i]-mid-1)\n\t\t\t\t\tf[i]=max(a[i-1]+mid,a[i]);\n\t\t\t\telse if(f[i-1]>=a[i]-mid-1) f[i]=a[i];\n\t\t\t\telse f[i]=-inf;\n\t\t};\n\t\tf[0]=0;\n\t\tif(a[1]==1) f[1]=mid+1;\n\t\telse if(a[1]<=mid+1) f[1]=a[1];\n\t\telse f[1]=-inf;\n\t\tdp();\n\t\tbool flag=f[n-1]>=m-mid-1;\n\t\tf[0]=mid;\n\t\tf[1]=max(a[1],mid);\n\t\tdp();\n\t\tflag|=f[n-1]>=min(a[1]+m-mid,m)-1;\n\t\tif(flag) r=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",r);\n#ifdef LOCAL\n\tfprintf(stderr,\"%f\\n\",1.0*clock()/CLOCKS_PER_SEC);\n#endif\n\treturn 0;\n}\n```",
        "postTime": 1662384563,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF713E Sonya Partymaker"
    },
    {
        "content": "\u663e\u7136\u4e00\u4e2a\u4eba\u53ea\u4f1a\u5f80\u4e00\u4e2a\u65b9\u5411\u8d70.\n\t\n\u4e8c\u5206\u7b54\u6848.\n\n\u8003\u8651\u5728\u5e8f\u5217\u4e0a$check$,\u8bbe$dp[i]$\u8868\u793a\u8986\u76d6\u4e86\u524d$i$\u4e2a\u5173\u952e\u70b9,\u6700\u591a\u80fd\u5f80\u540e\u5ef6\u4f38\u7684\u957f\u5ea6.\n\t\n\u5f53$i$\u4e0e$i-1$\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7$dp[i-1]$\u65f6,\u663e\u7136$i$\u8981\u5f80\u540e\u8986\u76d6,\u5426\u5219\u5f80\u524d.\n\t\n\u6ce8\u610f\u5f53$i$\u53ef\u4ee5\u8986\u76d6\u4f4f$i-2$\u548c$i-1$\u4e2d\u95f4\u7684\u4f4d\u7f6e\u7684\u65f6\u5019,$i-1$\u53ef\u4ee5\u5f80\u540e.\n\t\n\u8003\u8651\u628a\u73af\u65ad\u6210$1$\u5230$n$\u7684\u94fe,\u6b64\u65f6$1$\u53ef\u80fd\u88ab$n$\u8986\u76d6,\u65e0\u6cd5\u8f6c\u79fb.\n\t\n\u53d1\u73b0\u628a\u8ddd\u79bb\u6700\u5927\u7684\u4e24\u4e2a\u5173\u952e\u70b9\u65ad\u5f00,\u4e0d\u53ef\u80fd\u51fa\u73b0$1$\u88ab$n$\u8986\u76d6\u7684\u60c5\u51b5.\u8ba8\u8bba$1$\u5f80\u54ea\u4e2a\u65b9\u5411\u5ef6\u4f38,\u548c\u5e8f\u5217\u4e0a\u4e00\u6837\u505a$dp$\u5373\u53ef.\n    \n```cpp\n#include<bits/stdc++.h>\n#define read() Read<int>()\nnamespace pb_ds{   \n    namespace io{\n        const int MaxBuff=1<<15;\n        const int Output=1<<23;\n        char B[MaxBuff],*S=B,*T=B;\n\t\t#define getc() ((S==T)&&(T=(S=B)+fread(B,1,MaxBuff,stdin),S==T)?0:*S++)\n        char Out[Output],*iter=Out;\n        inline void flush(){\n            fwrite(Out,1,iter-Out,stdout);\n            iter=Out;\n        }\n    }\n    template<class Type> inline Type Read(){\n        using namespace io;\n        register char ch;\n        register Type ans=0; \n        register bool neg=0;\n        while(ch=getc(),(ch<'0' || ch>'9') && ch!='-');\n        ch=='-'?neg=1:ans=ch-'0';\n        while(ch=getc(),'0'<= ch && ch<='9') ans=ans*10+ch-'0';\n        return neg?-ans:ans;\n    }\n    template<class Type> inline void Print(register Type x,register char ch='\\n'){\n        using namespace io;\n        if(!x) *iter++='0';\n        else{\n            if(x<0) *iter++='-',x=-x;\n            static int s[100]; \n            register int t=0;\n            while(x) s[++t]=x%10,x/=10;\n            while(t) *iter++='0'+s[t--];\n        }\n        *iter++=ch;\n    }\n}\nusing namespace pb_ds;\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+5;\nconst int inf=1e9;\nint n,m,l,r,ans;\nint a[N],p[N],dp[N];\ninline void init(){\n\tfor (int i=1;i<=n;++i)\n\t\tr=max(r,a[i+1]-a[i]-1);\n\tfor (int i=1;i<=n;++i)\n\t\tif (a[i+1]-a[i]-1==r){\n\t\t\tfor (int j=1;j<=n;++j) p[j]=a[i+j];\n\t\t\tfor (int j=n;j;--j) p[j]-=p[1];\n\t\t\treturn;\n\t\t}\n}\ninline bool chk(int x){\n\tfor (int st=1;st<=2;++st){\n\t\tdp[st]=(st==1)?0:max(p[st],x);\n\t\tfor (int i=st+1;i<=n;++i){\n\t\t\tdp[i]=dp[i-1];\n\t\t\tif (dp[i-1]>=p[i]-1) dp[i]=p[i]+x;\n\t\t\tif (dp[i-1]>=p[i]-x-1) dp[i]=max(dp[i],p[i]);\n\t\t\tif (i!=st+1 && dp[i-2]>=p[i]-x-1) dp[i]=max(dp[i],p[i-1]+x);\n\t\t}\n\t\tif (dp[n]>=min(m-1,m+p[st]-x-1)) return 1;\n\t}\n\treturn 0;\n}\nint main(){\n\tm=read(),n=read();\n\tif (n==1) return printf(\"%d\\n\",m-1),0;\n\tfor (int i=1;i<=n;++i) \n\t\ta[i+n]=(a[i]=read())+m;\n\tsort(a+1,a+(n<<1)+1),init();\n\twhile (l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif (chk(mid)) ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n    ",
        "postTime": 1567301254,
        "uid": 8601,
        "name": "disposrestfully",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF713E \u3010Sonya Partymaker\u3011"
    }
]