[
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u9053\u9898\u5927\u4f53\u7684\u601d\u8def\u662f\u79bb\u7ebf\u6811\u72b6\u6570\u7ec4+\u5355\u6307\u9488\uff0c\u4f46\u672c\u4f53\u91cd\u70b9\u662f\u601d\u7ef4\u3002\u6700\u91cd\u8981\u7684\u662f\u77e5\u9053**\u6211\u4eec\u8981\u6c42\u4ec0\u4e48\uff0c\u600e\u4e48\u6c42**\u3002\u77e5\u9053\u8fd9\u4e24\u4e2a\u4e1c\u897f\uff0c\u8fd9\u9053\u9898\u5c31\u89e3\u51fa\u4e86\u4e00\u534a\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u53ef\u4ee5\u628a $p_i$ \u4e0e\u5176\u500d\u6570\u770b\u4f5c\u70b9\u5bf9\uff0c\u8981\u6c42\u7684\u503c\u770b\u4f5c\u6ee1\u8db3 $p_j=p_i\\times k(l\\le i,j\\le r,k\\in N^*)$ \u7684\u6570\u91cf\n\n**\u8fd9\u9898\u7684\u672c\u8d28\u662f\u6c42 $p_i,p_j(i,j\\in[l,r])$ \u4e4b\u95f4\u7684\u70b9\u5bf9\u6570**\u3002\n\n\u4f46\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u597d\u6c42\uff0c\u8003\u8651\u8f6c\u5316\u4e00\u4e0b\u3002\n\n\u8fb9\u6709\u5982\u4e0b\u51e0\u79cd\u79cd\u60c5\u51b5\uff1a\n\n1. $i\\in [1,l)$ \u5bf9\u7b54\u6848\u65e0\u5f71\u54cd\u3002\n\n2. $i\\in [l,r]$ \u5728 $j\\in [l,r]$ \u65f6\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\uff0c\u5728 $j\\in [1,l)$ \u65f6\u5bf9\u7b54\u6848\u65e0\u5f71\u54cd\u3002\n\n3. $i\\in (r,n]$ \u5bf9\u7b54\u6848\u65e0\u5f71\u54cd\u3002\n\n\n\n\u5176\u4e2d\uff0c\u7b2c\u4e09\u79cd\u60c5\u51b5\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u53ef\u4ee5\u8fd9\u6837\u53bb\u9664\uff1a\n\n1. \u9884\u5904\u7406\u6bcf\u4e2a\u6570\u7684\u500d\u6570\uff0c\u5e76\u8bb0\u5f55\u8f83\u524d\u7684\u70b9\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n2. \u8003\u8651\u628a\u8be2\u95ee\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u5e76\u7528\u5355\u6307\u9488 $i$ \u679a\u4e3e $1$~$n$\uff0c\u6bcf\u6b21\u7edf\u8ba1\u52a0\u5165 $p_i$ \u4ea7\u751f\u7684\u8d21\u732e\uff0c\u5728\u533a\u95f4\u53f3\u7aef\u70b9\u7b49\u4e8e $i$ \u65f6\u8bb0\u5f55\u7b54\u6848\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7b2c\u4e00\u3001\u4e8c\u4e24\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u3002\u7531\u8fde\u8fb9\u65b9\u5f0f\u5f97\uff0c\u7b2c\u4e00\u79cd\u8981\u6d88\u53bb\u7684\u70b9\u5bf9\u6ee1\u8db3 $j\\in [1,l)$\u3002\u800c\u7b2c\u4e8c\u79cd\u8981\u6d88\u53bb\u7684\u70b9\u5bf9\u4e5f\u6ee1\u8db3 $j\\in [1,l)$\u3002\n\n**\u7efc\u4e0a\uff0c\u8003\u8651\u6d88\u53bb $j\\in [1,l)$ \u7684\u70b9\u5bf9\u5bf9\u7b54\u6848\u5f71\u54cd\u3002**\n\n\u7531\u4e8e\u5b58\u56fe\u65f6\u4fdd\u5b58\u4e86 $j$\uff0c\u6240\u4ee5\u5c31\u628a $j$ \u6254\u8fdb\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4\u533a\u95f4\u548c\uff08\u524d\u7f00\u548c\uff09\uff0c\u7136\u540e\u628a\u4e00\u3001\u4e8c\u4e24\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u51cf\u53bb $j\\in [1,l)$ \u7684\u7b54\u6848\uff0c\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3na0eu4c.png)\n\n**\u6ce8\uff1a\u672c\u56fe\u4e2d\u7684\u201c\u6709\u5411\u8fb9\u201d\u7684\u201c\u8d77\u70b9\u201d\u4e3a\u679a\u4e3e\u7684\u6307\u9488 $i$\uff0c\u201c\u7ec8\u70b9\u201d\u4e3a\u70b9\u5bf9\u7684\u53e6\u4e00\u7aef $j$\uff0c\u753b\u6210\u8fb9\u4ec5\u662f\u4ee3\u8868\u8fd9\u662f\u6709\u5e8f\u70b9\u5bf9\uff0c\u4e0d\u662f\u56fe\u8bba\u4e2d\u7684\u8fb9\uff0c\u8fd9\u9898\u4e0e\u8fb9\u6ca1\u6709\u5173\u7cfb\uff01**\n\n\u5982\u679c\u4e0d\u7406\u89e3\u8bd5\u7740\u770b\u56fe\uff0c\u5e76\u624b\u73a9\u4ee3\u7801\uff0c\u52a0\u6df1\u7406\u89e3\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n\nchar buf[4300005],*p1=buf;\n#define gc() *p1++\ninline void read(int &x)\n{\n\tchar ch=gc();\n\twhile(!isdigit(ch)) ch=gc();\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=gc();\n}\nconst int N=200005;\n\nstruct Query{\n\tint l,r;\n\tint* ans;\n\tbool operator < (Query p) const {return r<p.r;}\n}q[N];\nvector<int>ver[N];\nint n,m,tre[N],id[N],a[N],ans[N],sum;\n//sum\uff1a\u7b2c\u4e00\u3001\u4e8c\u79cd\u8fb9\u7684\u603b\u548c\n//tre\uff1a\u6811\u72b6\u6570\u7ec4\uff0c\u8bb0\u5f55\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\nvoid add(int x) {for(;x<=n;x+= x&-x) tre[x]++;}\nint query(int x)\n{\n\tint res=0;\n\tfor(;x;x-= x&-x) res+=tre[x];\n\treturn res;\n}\nint main()\n{\n\tfread(buf,1,4300000,stdin);\n\tios::sync_with_stdio(0);\n\tcout.tie(nullptr);\n\t\n\tread(n); read(m);\n\trep(i,1,n)\n\t{\n\t\tread(a[i]);\n\t\tid[a[i]]=i;\n\t}\n\trep(i,1,n)\n\t\tfor(int j=a[i];j<=n;j+=a[i])\n\t\t\tif(i>id[j]) ver[i].push_back(id[j]);\n\t\t\telse ver[id[j]].push_back(i);//\u4ece\u540e\u5f80\u524d\u8fde\u8fb9\n\n\trep(i,1,m)\n\t{\n\t\tread(q[i].l),read(q[i].r);\n\t\tq[i].ans=&ans[i];\n\t}\n\tsort(q+1,q+m+1);\n\tint p=1;\n\trep(i,1,m)\n\t{\n\t\tfor(;p<=q[i].r;p++)\n\t\t\tfor(int j:ver[p])\n\t\t\t\tadd(j),sum++;\n\t\t*q[i].ans=sum-query(q[i].l-1);\n\t}\n\trep(i,1,m) cout<<ans[i]<<'\\n';\n\treturn 0;\n}\n```\n## \u540e\u8bb0\n\n\u4e00\u4e2a\u4e0b\u5348\u5c31\u5199\u4e86\u8fd9\u4e48\u4e00\u7bc7\u9898\u89e3\u3002\u8fd9\u4e5f\u662f\u6211\u5199\u7684\u6700\u8ba4\u771f\u7684\u3002\u770b\u5728\u6211\u8fd9\u4e48\u52aa\u529b\u7684\u4efd\u4e0a\uff0c\u80fd\u4e0d\u80fd\u7ed9\u6211\u4e00\u4e2a\u8d5eqwq\uff1f",
        "postTime": 1647590945,
        "uid": 231704,
        "name": "\u9f99\u6c34\u6d41\u6df1",
        "ccfLevel": 0,
        "title": "CF301D\u9898\u89e3\u2014\u2014\u6811\u72b6\u6570\u7ec4\u7684\u79bb\u7ebf\u64cd\u4f5c"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a**\u6392\u5217**,\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u4e2d\u6ee1\u8db3\u4e00\u4e2a\u6570\u4e3a\u53e6\u4e00\u4e2a\u6570\u500d\u6570\u7684\u6570\u5bf9\u4e2a\u6570.\n\n# \u5206\u6790\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u6574\u4e2a\u6392\u5217\u7684\u5408\u6cd5\u6570\u5bf9\u6570\u4e3a $\\mathcal{O}(n\\log n)$ \u7ea7\u522b,\u6240\u4ee5\u53ef\u4ee5\u60f3\u5230\u76f4\u63a5\u53bb\u7ef4\u62a4\u8fd9\u4e9b\u6570\u5bf9.\u4e00\u4e2a\u6570\u5bf9\u7531\u4e24\u4e2a\u6570\u7ec4\u6210,\u8fd9\u5c31\u4e0d\u5bb9\u6613\u5904\u7406,\u53ef\u4ee5\u60f3\u5230\u79bb\u7ebf\u53bb\u5904\u7406.\u5bf9\u67e5\u8be2\u7684\u53f3\u7aef\u70b9\u6392\u5e8f.\u663e\u7136\u53ef\u4ee5\u5728\u53f3\u7aef\u70b9\u79fb\u52a8\u65f6\u5c06\u65b0\u52a0\u5165\u7684\u6570\u7684\u8d21\u732e\u52a0\u5165.\u90a3\u4e48\u73b0\u5728\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u540e\u7f00\u67e5\u8be2\u7684\u5f62\u5f0f,\u65e2\u7136\u662f\u540e\u7f00,\u4e0d\u59a8\u5c06\u4e00\u4e2a\u6570\u5bf9\u7684\u8d21\u732e\u653e\u5728\u9760\u524d\u7684\u6570\u4e2d,\u8fd9\u6837\u5728\u67e5\u8be2\u4e2d\u53ea\u6709\u5f53\u4e24\u4e2a\u6570\u90fd\u5728\u8fd9\u4e2a\u540e\u7f00\u4e2d\u7684\u65f6\u5019\u624d\u4f1a\u4ea7\u751f\u8d21\u732e.\u4e8e\u662f\u95ee\u9898\u53d8\u6210\u4e86\u5355\u70b9\u52a0,\u533a\u95f4\u67e5\u8be2,\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u8f7b\u677e\u7ef4\u62a4.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log^2n)$.\u5982\u679c\u60a8\u6709\u4f4e\u4e8e\u8fd9\u4e2a\u590d\u6742\u5ea6\u7684\u505a\u6cd5\u53ef\u4ee5\u79c1\u4fe1\u6211/kel.\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define REP(i,first,last) for(register int i=(first);i<=(last);++i)\n#define DOW(i,first,last) for(register int i=(first);(last)<=i;--i)\n#define LL long long\n#define UI unsigned int\n#define ULL unsigned long long\n#define PII pair<int,int>\n#define PIL pair<int,long long>\n#define PLI pair<long long,int>\n#define PLL pair<long long,long long>\n#define MPR(a,b) make_pair(a,b)\nnamespace IO\n//\u5feb\u8bfb\u6a21\u677f\nusing namespace IO;\nusing namespace std;\nconst int MAXN=2e5+5;\nint n,m;\nint arr[MAXN];\nint id[MAXN];\nvector<int>link[MAXN];\nclass Query\n{\npublic:\n\tint left,right,id;\n\tinline bool operator <(const Query &a)const\n\t{\n\t\treturn right<a.right;\n\t}\n}q[MAXN];\nint answer[MAXN];\nnamespace BIT//\u5355\u70b9\u4fee\u6539+\u533a\u95f4\u67e5\u8be2\u7684\u6811\u72b6\u6570\u7ec4\n{\n\tint tree[MAXN];\n\tinline int Lowbit(const int now)\n\t{\n\t\treturn now&-now;\n\t}\n\tinline void Updata(const int place)\n\t{\n\t\tfor(register int now=place;now<=n;now+=Lowbit(now))\n\t\t{\n\t\t\t++tree[now];\n\t\t}\n\t}\n\tinline int Query(const int left,const int right)\n\t{\n\t\tregister int result=0;\n\t\tfor(register int now=right;now;now-=Lowbit(now))\n\t\t{\n\t\t\tresult+=tree[now];\n\t\t}\n\t\tfor(register int now=left-1;now;now-=Lowbit(now))\n\t\t{\n\t\t\tresult-=tree[now];\n\t\t}\n\t\treturn result+right-left+1;\n\t}\n}\nint main()\n{\n\tRead(n,m);\n\tREP(i,1,n)\n\t{\n\t\tRead(arr[i]);\n\t\tid[arr[i]]=i;\n\t}\n\tREP(i,1,n)//\u5c06\u6570\u5bf9\u7684\u8d21\u732e\u653e\u5728\u9760\u524d\u7684\u6570\u4e2d\n\t{\n\t\tint top=n/arr[i];\n\t\tREP(j,2,top)\n\t\t{\n\t\t\tif(id[arr[i]*j]<i)\n\t\t\t{\n\t\t\t\tlink[i].push_back(id[arr[i]*j]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlink[id[arr[i]*j]].push_back(i);\n\t\t\t}\n\t\t}\n\t}\n\tREP(i,1,m)\n\t{\n\t\tRead(q[i].left,q[i].right);\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+1+m);\n\tint now=1;\n\tREP(i,1,n)\n\t{\n\t\tif(link[i].size())\n\t\t{\n\t\t\tREP(j,0,link[i].size()-1)//\u5c06\u65b0\u52a0\u5165\u7684\u6570\u7684\u8d21\u732e\u653e\u5165\n\t\t\t{\n\t\t\t\tBIT::Updata(link[i][j]);\n\t\t\t}\n\t\t}\n\t\twhile(q[now].right==i)\n\t\t{\n\t\t\tanswer[q[now].id]=BIT::Query(q[now].left,q[now].right);\n\t\t\t++now;\n\t\t}\n\t}\n\tREP(i,1,m)\n\t{\n\t\tWriteln(answer[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1606826945,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF301D \u3010Yaroslav and Divisors\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF301D)\n## \u601d\u8def\n\u5957\u8def\u9898\uff0c\u53ef\u4ee5\u60f3\u5230\u9664\u4e86 $1$ \u4ee5\u5916\uff0c\u5176\u5b83\u6570\u5728 $n$ \u4ee5\u5185\u500d\u6570\u6700\u591a\u53ea\u6709 $\\log n$ \u4e2a\uff0c\u800c $1$ \u5728\u533a\u95f4 $l$ \u81f3 $r$ \u4e2d\u6709 $r-l+1$ \u4e2a\u500d\u6570\uff0c\u6240\u4ee5\u5bf9\u4e8e $1$ \u7684\u60c5\u51b5\u76f4\u63a5\u4e00\u4e2a\u524d\u7f00\u548c\u641e\u6389\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u53e6\u5916\u7684\u6570\uff0c\u8bb0\u5f55\u4e0b\u662f\u8fd9\u4e9b\u6570\u500d\u6570\u7684\u6570\uff0c\u7136\u540e\u8bb0\u5f55\u4e0b\u70b9\u5bf9 ${i,j}$ \u8868\u793a\u6807\u53f7\u4e3a $i$ \u7684\u6570\u662f\u6807\u53f7\u4e3a $j$ \u7684\u6570\u7684\u500d\u6570\uff0c\u7136\u540e\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u5927\u5c0f\u6392\u5e8f\uff0c\u6bcf\u6b21\u5728\u5de6\u7aef\u70b9\u5904 $\\verb!update!$ \u4e00\u4e2a $1$ \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6 $O(n \\log^2 n)$\uff0c\u5b9e\u9645\u8fdc\u8fdc\u8dd1\u4e0d\u6ee1\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint const N=2e5+10;\nint p[N],sum[N],n,ans[N];\nvector<int>vis[N];\nvector< pair<int,int> >d;\nstruct Tree_Array{\n\tint c[N];\n\tinline int lowbit(int x){return x&-x;}\n\tinline void update(int x,int v){while (x<=n) c[x]+=v,x+=lowbit(x);}\n\tinline int query(int x){int res=0;while (x) res+=c[x],x-=lowbit(x);return res;}\n}T;//\u6811\u72b6\u6570\u7ec4\u677f\u5b50\nstruct node{int l,r,id;}a[N];\ninline bool cmp(node x,node y){return x.r<y.r;}\nsigned main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    int m;cin>>n>>m;\n    for (int i=1;i<=n;++i) cin>>p[i],sum[i]=sum[i-1]+(p[i]==1),vis[p[i]].push_back(i);\n\tfor (int i=1;i<=n;++i){\n\t\tif (p[i]==1) continue;//\u662f 1 \u5c31\u8df3\u8fc7\uff0c\u4e0d\u7136\u4f1a\u88ab\u5168\u662f 1 \u7684\u6570\u636e\u5361\u6210 n \u65b9\n\t\tfor (int j=1;j*p[i]<=n;++j)\n\t\t    for (auto v:vis[j*p[i]])\n\t\t        d.push_back({max(i,v),min(i,v)});\n\t}\n\tsort(d.begin(),d.end());\n\tfor (int i=1;i<=m;++i) cin>>a[i].l>>a[i].r,a[i].id=i;\n    sort(a+1,a+m+1,cmp);\n    int tail=-1;\n    for (int i=1;i<=m;++i){\n    \twhile (tail+1<d.size() && d[tail+1].first<=a[i].r) ++tail,T.update(d[tail].second,1);\n\t\tans[a[i].id]=(tail+1-T.query(a[i].l-1))+(sum[a[i].r]-sum[a[i].l-1])*(a[i].r-a[i].l+1);//\u533a\u95f4\u5185\u4e0d\u4e3a 1 \u7684\u6570\u4e0e 1 \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e4b\u548c\n\t}\n\tfor (int i=1;i<=m;++i) cout<<ans[i]<<'\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1663566683,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF301D Yaroslav and Divisors"
    },
    {
        "content": "## \u9898\u610f\u7b80\u5316\n\u7ed9\u5b9a\u4e00\u4e2a $1\\sim n$ \u7684\u6392\u5217 $a$\uff0c\u6bcf\u6b21\u7ed9\u5b9a $\\lbrack l,r\\rbrack$\uff0c\u95ee\u8be5\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570\u5bf9 $(x,y)$\uff0c\u4f7f\u5f97 $a_x$ \u662f $a_y$ \u7684\u6b63\u6574\u6570\u500d\uff08\u4e0b\u6587\u7b80\u79f0\u500d\u6570\u6570\u5bf9\uff09\u3002\n\n## \u505a\u6cd5\n~~\u901a\u8fc7\u770b\u6807\u7b7e~~\u5bb9\u6613\u77e5\u9053\uff0c\u8fd9\u662f\u4e00\u9053\u6811\u72b6\u6570\u7ec4\u7684\u9898\u3002\u8fd9\u786e\u5b9e\u662f\u4e00\u9053\u597d\u9898\uff0c\u601d\u7ef4\u96be\u5ea6\u4e0d\u5c0f\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u5b8c\u524d\u534a\u90e8\u5206\u7684\u601d\u8def\u540e\u8bd5\u7740\u81ea\u5df1\u6253\u6253\u4ee3\u7801\u3002\n\n\u9996\u5148\uff0c\u8fd9\u4e2a\u4e1c\u897f\u6211\u4eec\u80af\u5b9a\u662f\u65e0\u6cd5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u3002\u4f46\u662f\uff0c\u4e00\u4e2a\u6570\u7684\u56e0\u6570\u4e2a\u6570\u662f $\\log n$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u6574\u4e2a\u5e8f\u5217\u7684\u7b54\u6848\u4e0d\u4f1a\u8d85\u8fc7 $n\\log n$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a**\u6240\u6709\u500d\u6570\u6570\u5bf9**\u5b58\u4e0b\u6765\u3002\n\n\n\u5b58\u4e0b\u6765\u4e4b\u540e\u5982\u4f55\u6c42\u7b54\u6848\u5462\uff1f\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u4e0e\u5176\u4ed6\u9898\u89e3\u6709\u70b9\u7c7b\u4f3c\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u601d\u8def\u3002\n\n\u4ee5\u67d0\u4e2a\u8be2\u95ee $\\lbrack l,r\\rbrack$ \u4e3a\u4f8b\u3002\u6211\u4eec\u7684\u7b54\u6848\u5176\u5b9e\u662f $\\lbrack 1,r\\rbrack$ \u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\uff0c\u51cf\u53bb $\\lbrack 1,l-1\\rbrack$ \u7684\u7b54\u6848\uff0c\u518d\u51cf\u53bb\u6240\u6709\u5de6\u7aef\u70b9\u5728 $\\lbrack 1,l-1\\rbrack$\uff0c\u53f3\u7aef\u70b9\u5728 $\\lbrack l,r\\rbrack$ \u7684\u500d\u6570\u6570\u5bf9\u3002\n\n\u6ce8\u610f\u5230\u4e0a\u9762\u51fa\u73b0\u4e86\u4e00\u4e9b\u524d\u7f00\u7b54\u6848\uff0c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u7b54\u6848\u3002\u73b0\u5728\u6700\u5173\u952e\u7684\u95ee\u9898\u662f\uff0c\u5de6\u7aef\u70b9\u5728 $\\lbrack 1,l-1\\rbrack$ \u65f6\u7b54\u6848\u662f\u591a\u4f59\u7684\uff0c\u4e0d\u53ef\u4ee5\u8ba1\u7b97\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5012\u5e8f\u679a\u4e3e $n$ \u4e2a\u6570\uff0c\u4ece\u5927\u5230\u5c0f\u5730\u63d2\u5165\u6bcf\u4e2a\u6570\u7684\u500d\u6570\uff0c\u518d\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309\u5de6\u7aef\u70b9\u4ece\u5927\u5230\u5c0f\u5728\u63d2\u5165\u6570\u7684\u8fc7\u7a0b\u4e2d\u6c42\u7b54\u6848\u3002\n\n\u8fd9\u6837\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u5f53\u524d\u63d2\u5165\u7684\u6570 $i$ \u4e0d\u4f1a\u5c0f\u4e8e\u5f85\u6c42\u7b54\u6848\u7684\u5de6\u7aef\u70b9\uff08\u8fd9\u4e2a\u662f\u53ef\u4ee5\u63a7\u5236\u7684\uff09\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u76f4\u63a5\u67e5\u8be2 $\\lbrack 1,r\\rbrack$\uff0c\u56e0\u4e3a $a_1\\sim a_{i-1}$ \u53ca\u5176\u500d\u6570\u90fd\u8fd8\u6ca1\u88ab\u63d2\u5165\uff0c\u81ea\u7136\u7b54\u6848\u4e5f\u4e0d\u542b\u5b83\u4eec\uff0c\u67e5\u51fa\u6765\u7684\u76f4\u63a5\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nconst int N = 2e5 + 10;\nint n, m, a[N], id[N];\nll ans[N], sum[N];\nstruct query{\n\tint l, r, id;\n\tbool operator < (const query &p) const {return l > p.l;}//\u5de6\u7aef\u70b9\u4ece\u5927\u5230\u5c0f \n} q[N];\nvector<int> g[N];\n\nvoid update(int i, int x){for(;i<=n;i+=i&-i)\tsum[i] += x;}\n\nll query(int i){\n\tll res = 0;\n\tfor(;i;i-=i&-i)\tres += sum[i];\n\treturn res;\n}\n\nint main(){\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i=1;i<=n;i++)\tscanf(\"%d\", &a[i]), id[a[i]] = i;\n\tfor(int i=1;i<=m;i++)\tscanf(\"%d%d\", &q[i].l, &q[i].r), q[i].id = i;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=a[i];j<=n;j+=a[i]){\n\t\t\tg[min(i, id[j])].push_back(max(i, id[j]));\n\t\t\t//\u5728\u7f16\u53f7\u5c0f\u7684\u63d2\u5165\u7f16\u53f7\u5927\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u540e\u9762\u63d2\u5165\u7684\u6570\u7f16\u53f7\u4e0d\u4f1a\u5c0f\u4e8e i \n\t\t}\n\t}\n\tsort(q + 1, q + 1 + m);\n\tint p = 1;\n\tfor(int i=n;i;i--){\n\t\tfor(int v: g[i])\tupdate(v, 1);//\u5c06\u8fd9\u4e2a\u6570\u53ca\u5176\u500d\u6570\u63d2\u5165 \n\t\twhile(q[p].l == i)\tans[q[p].id] = query(q[p].r), p++;//\u67e5\u8be2\u7b54\u6848 \n\t}\n\tfor(int i=1;i<=m;i++)\tprintf(\"%lld\\n\", ans[i]);\n\treturn 0;\n} \n```\n",
        "postTime": 1662379926,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "CF301D Yaroslav and Divisors"
    },
    {
        "content": "[CF301D Yaroslav and Divisors](https://www.luogu.com.cn/problem/CF301D)\n\n\u672c\u9898\u89e3\u53c2\u8003\u4e8e[\u8fd9\u4f4d\u5927\u4f6c](https://www.luogu.com.cn/blog/hugocaicai/solution-cf301d)\u7684\u9898\u89e3\uff0c\u7531\u4e8e\u89c9\u5f97\u6709\u4e9b\u5730\u65b9\u6ca1\u6709\u8bf4\u7684\u592a\u660e\u767d\uff0c\u5c06\u8fd9\u4e9b\u5730\u65b9\u8be6\u7ec6\u8bf4\u4e86\u4e00\u4e0b\u3002\n\n**\u9898\u610f\uff1a**\n\n\u627e\u51fa $[l,r]$ \u4e2d\u6ee1\u8db3 $a_i$ \u4e0e $a_j$ \u662f\u500d\u6570\u5173\u7cfb\u7684 $(i,j)$ \u5bf9\u6570\u3002\n\n\u5c0f\u7ec6\u8282\uff1a\u7531\u4e8e\u6bcf\u4e2a\u6570\u4e92\u4e0d\u76f8\u540c\u5e76\u90fd\u4e0d\u8d85\u8fc7 $n$\uff0c\u56e0\u6b64\u4e00\u5b9a\u662f $1\\dots n$ \u7684\u4e00\u79cd\u6392\u5217\uff0c\u65e0\u9700\u8003\u8651\u91cd\u590d\u3002\n\n**\u601d\u8def\uff1a**\n\n\u4e00\u3001\u8bb0\u5f55\u6bcf\u4e2a\u6570**\u540e\u9762**\u548c\u4ed6\u80fd\u7ec4\u6210\u500d\u6570\u5173\u7cfb\u7684\u6570\u3002\n\n\u679a\u4e3e $1\\dots n$\uff0c\u66b4\u529b\u7b97\u51fa $a_i$ \u7684\u6240\u6709\u500d\u6570\uff0c\u5e76\u5f00\u6876\u5224\u65ad\u662f\u5426\u6709\u8fd9\u4e2a\u6570\u3002\n\n```cpp\nif(id[j]!=0) g[min(i,id[j])].push_back(max(i,id[j]));\n```\n\n\u8fd9\u53e5\u5f88\u7ed5\uff0c\u9700\u8981\u4ed4\u7ec6\u60f3\u60f3\u3002\u6bcf\u6b21\u90fd\u662f\u7ed9\u7f16\u53f7\u5c0f\u7684\u6570\u6dfb\u52a0\u7f16\u53f7\u6bd4\u4ed6\u5927\u7684\u6570\uff0c\u6240\u4ee5 $g$ \u5b9e\u9645\u4e0a\u8bb0\u5f55\u7684\u662f\u5bf9\u4e8e\u6570 $x$\uff0c\u5b83\u7684**\u540e\u9762**\u548c\u4ed6\u80fd\u7ec4\u6210\u500d\u6570\u5173\u7cfb\u7684\u6570\u7684\u7f16\u53f7\u3002\u8fd9\u6837\u505a\u6765\u9632\u6b62\u91cd\u590d\u8ba1\u7b97\u3002\n\n\u4e8c\u3001\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u662f\u8bb0\u5f55\u4e86\u6bcf\u4e00\u4e2a\u6570\u540e\u9762\u548c\u4ed6\u80fd\u7ec4\u6210\u500d\u6570\u5173\u7cfb\u7684\u6570\u7684\u7f16\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u8be2\u95ee\u4ee5 $l$ \u4ece\u5927\u5230\u5c0f\u9006\u5e8f\u5904\u7406\uff0c\u624d\u80fd\u8ba9 $\\operatorname{add}$ \u65f6\u4e0d\u91cd\u590d\u8ba1\u7b97\uff0c\u5e76\u4e14\u6700\u540e\u7684\u5faa\u73af\u4e5f\u8981\u9006\u5e8f\u3002\n\n```cpp\nfor(int j=0;j<g[i].size();++j) add(g[i][j],1);\n```\n\n\u9996\u5148\u5c06\u7b2c $i$ \u4e2a\u6570\u540e\u7684\u6240\u6709\u548c\u4ed6\u80fd\u7ec4\u6210\u500d\u6570\u5173\u7cfb\u7684\u6570\u8ba1\u5165\u6811\u72b6\u6570\u7ec4\u3002\u8fd9\u6837\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u8bb0\u5f55 $[i,n]$ \u7684\u6ee1\u8db3\u5173\u7cfb\u7684 $(i,j)$ \u5bf9\u6570\u3002\n\n```cpp\nwhile(q[p].l==i) ans[q[p].id]=sum(q[p].r),p++;\n```\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $l=i$ \u7684\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 $\\operatorname{sum}(r)$ \u56de\u7b54\uff0c\u53bb\u6389 $[r+1,n]$ \u7684\u90e8\u5206\uff0c\u56e0\u4e3a\u5728\u4e0a\u4e00\u6b65\u7684\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u8ba1\u5165\u6811\u72b6\u6570\u7ec4\u7684\u662f $i\\dots n$ **\u540e\u9762**\u548c\u4ed6\u80fd\u7ec4\u6210\u500d\u6570\u5173\u7cfb\u7684\u6570\uff0c\u56e0\u6b64 $i$ \u524d\u7684\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u65f6\u662f\u6ca1\u6709\u4efb\u4f55\u503c\u7684\uff0c\u53ef\u4ee5\u653e\u5fc3\u7528\u3002\n\n**\u4ee3\u7801\uff1a**\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=2e5+10;\nint n,m,id[N],a[N];\nll ans[N],t[N];\nint lowbit(int x){return x&-x;}\nvoid add(int x,int k){for(int i=x;i<=n;i+=lowbit(i)) t[i]+=k;}\nll sum(int x){ll res=0;for(int i=x;i;i-=lowbit(i)) res+=t[i];return res;}\nstruct node{\n\tint l,r,id;\n}q[N];\nbool cmp(node a,node b){\n\treturn a.l>b.l;\n}\nvector<int> g[N]; \nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&a[i]),id[a[i]]=i;\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&q[i].l,&q[i].r);\n\t\tq[i].id=i;\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=a[i];j<=n;j+=a[i]){\n\t\t\tif(id[j]!=0) g[min(i,id[j])].push_back(max(i,id[j]));\n\t\t}\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tint p=1;\n\tfor(int i=n;i>=1;--i){\n\t\tfor(int j=0;j<g[i].size();++j) add(g[i][j],1);\n\t\twhile(q[p].l==i) ans[q[p].id]=sum(q[p].r),p++;\n\t}\n\tfor(int i=1;i<=m;++i) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n} \n```\n\n\u6709\u4efb\u4f55\u95ee\u9898\u6b22\u8fce\u63d0\u51fa\u3002\n",
        "postTime": 1684849968,
        "uid": 565684,
        "name": "SamHJD",
        "ccfLevel": 0,
        "title": "CF301d"
    },
    {
        "content": "\u53ef\u4ee5\u5148 $O(n\\log n)$ \u9884\u5904\u7406\u51fa\u6240\u6709\u6ee1\u8db3\u6574\u9664\u5173\u7cfb\u7684\u6709\u5e8f\u6570\u5bf9\u3002\n\n\u53ef\u4ee5\u83ab\u961f $O(n\\sqrt{n}\\log n)$ \u505a\uff0c\u592a\u5927\u8003\u8651 polylog \u505a\u6cd5\u3002\n\n\u8003\u8651\u8be2\u95ee\u7684\u672c\u8d28\u5c31\u662f\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u9884\u5904\u7406\u7684\u533a\u95f4\u88ab $[l_i,r_i]$ \u5b8c\u5168\u5305\u542b\uff0c\u7c7b\u4f3c\u4e8c\u4f4d\u504f\u5e8f\uff0c\u7528\u6392\u5e8f\u5904\u7406\u4e00\u7ef4\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u5904\u7406\u4e00\u7ef4\u3002\n\n\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u548c\u539f\u6765\u9884\u5904\u7406\u7684\u533a\u95f4\u5408\u5728\u4e00\u8d77\uff0c\u6807\u597d\u8bb0\u53f7\uff0c\u6309\u7167\uff1a\u533a\u95f4\u5de6\u7aef\u70b9\uff0c\u662f\u5426\u4e3a\u8be2\u95ee\uff0c\u533a\u95f4\u53f3\u7aef\u70b9\uff0c\u4e3a\u7b2c\u4e00\u4e8c\u4e09\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u628a\u8d21\u732e\u653e\u5728\u53f3\u7aef\u70b9\uff0c\u6211\u4eec\u904d\u5386\u5230\u8be2\u95ee\u533a\u95f4 $[l_i,r_i]$ \u65f6\u9700\u8981\u6ee1\u8db3\u5de6\u7aef\u70b9\u5c0f\u4e8e $l_i$ \u7684\u533a\u95f4\u8d21\u732e\u6d88\u5931\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u67e5\u8be2 $r_i$ \u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0'){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\n\nvoid print(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)print(x/10);\n\tputchar(x%10^48);\n}\n\nconst int N=2e5+5;\nint n,m,p[N],pos[N],num,ans[N];\nstruct node{\n\tint l,r,id;\n\tbool operator<(const node &p)const{\n\t\tif(l!=p.l)return l<p.l;\n\t\tif(id!=p.id)return id>p.id;\n\t\treturn r<p.r;\n\t}\n}a[N*22];\n\nstruct BIT{\n\tint c[N];\n\t\n\tvoid add(int x,int k){\n\t\tfor(int i=x;i<=n;i+=i&-i)c[i]+=k;\n\t}\n\t\n\tint qry(int x){\n\t\tint sum=0;\n\t\tfor(int i=x;i>=1;i-=i&-i)sum+=c[i];\n\t\treturn sum;\n\t}\n}T;\n\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;++i)p[i]=read(),pos[p[i]]=i;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=p[i];j<=n;j+=p[i]){\n\t\t\tif(pos[j]<i)a[++num]=(node){pos[j],i,0};\n\t\t\telse a[++num]=(node){i,pos[j],0};\n\t\t\tT.add(a[num].r,1);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tint l=read(),r=read();\n\t\ta[++num]=(node){l,r,i};\n\t}\n\tsort(a+1,a+num+1);\n\tfor(int i=1;i<=num;++i){\n\t\tif(a[i].id)ans[a[i].id]=T.qry(a[i].r);\n\t\telse T.add(a[i].r,-1);\n\t}\n\tfor(int i=1;i<=m;++i)print(ans[i]),putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1672972763,
        "uid": 271736,
        "name": "Daidly",
        "ccfLevel": 6,
        "title": "CF301D Yaroslav and Divisors \u9898\u89e3"
    },
    {
        "content": "~~\u4e00\u5f00\u59cb\u9898\u610f\u770b\u9519\uff0c\u95ee\u4e86\u4e00\u4e0b DPair \u53d1\u73b0\u662f[\u7b2c\u5341\u56db\u5206\u5757](https://www.luogu.com.cn/problem/P5398)\u3002\u5b9e\u9645\u4e0a\u4ed6\u662f\u7b2c\u5341\u56db\u5206\u5757\u7684\u4e25\u683c\u5f31\u5316\u7248\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u7528\u7b2c\u5341\u56db\u5206\u5757\u8fc7\u53bb\u3002~~  \n\u56e0\u4e3a\u4fdd\u8bc1\u4e86 $\\{p_i\\}$ \u662f\u4e00\u4e2a\u6392\u5217\uff0c\u6240\u4ee5\u603b\u5171\u7684\u7b54\u6848\u53ea\u6709 $O(n \\ln n)$ \u79cd\u3002\u8003\u8651\u6bcf\u4e00\u5bf9 $(i,k \\times i)$ \u7684\u8d21\u732e\u3002\u4e0d\u653e\u8bbe\u5b83\u4eec\u5728 $l_i,r_i(l_i \\leq r_i)$ \u4e24\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u5219\u4f1a\u5bf9\u6240\u6709\u6ee1\u8db3 $L_i \\leq l_i,r_i \\leq R_i$ \u7684\u67e5\u8be2 $L_i,R_i$ \u4ea7\u751f\u8d21\u732e\u3002\u56e0\u6b64\u5c06\u67e5\u8be2\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7b54\u6848\u5373\u53ef\u3002\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <numeric>\n#include <vector>\nchar Gc() {\n  static char now[1 << 20], *S, *T;\n  if (T == S) {\n    T = (S = now) + std::fread(now, 1, 1 << 20, stdin);\n    if (T == S) return EOF;\n  }\n  return *S++;\n}\ntemplate <typename T>\nvoid Read(T &x) {\n  x = 0;\n  int f = 1;\n  char c;\n  while ((c = Gc()) < '0' || c > '9')\n    if (c == '-') f = -1;\n  x = c - '0';\n  while ((c = Gc()) >= '0' && c <= '9') x = x * 10 + c - '0';\n  x *= f;\n}\ntemplate <typename T, typename... Args>\nvoid Read(T &x, Args &...args) {\n  Read(x);\n  Read(args...);\n}\ntemplate <typename T>\nvoid checkmax(T &x, T y) {\n  if (x < y) x = y;\n}\ntemplate <typename T>\nvoid checkmin(T &x, T y) {\n  if (x > y) x = y;\n}\nstruct Query {\n  int l, r, id;\n} b[200001];\nint n, m, a[200001], pos[200001], ans[200001];\nstd::vector<int> v[200001];\nclass FenwickTree {\n public:\n  FenwickTree() {}\n  void Add(int x) {\n    while (x <= n) {\n      t_[x]++;\n      x += x & -x;\n    }\n  }\n  int Query(int x) {\n    int s = 0;\n    while (x) {\n      s += t_[x];\n      x -= x & -x;\n    }\n    return s;\n  }\n  ~FenwickTree() {}\n\n private:\n  int t_[200001];\n} T;\nint main(int argc, char const *argv[]) {\n  Read(n, m);\n  for (int i = 1; i <= n; i++) {\n    Read(a[i]);\n    pos[a[i]] = i;\n  }\n  for (int i = 1; i <= n; i++)\n    for (int j = i; j <= n; j += i) {\n      int l = pos[i], r = pos[j];\n      if (l > r) std::swap(l, r);\n      v[r].emplace_back(l);\n    }\n  for (int i = 1; i <= m; i++) {\n    Read(b[i].l, b[i].r);\n    b[i].id = i;\n  }\n  std::sort(b + 1, b + m + 1, [](const Query &lhs, const Query &rhs) -> bool {\n    return lhs.r < rhs.r;\n  });\n  int p = 1;\n  for (int i = 1; i <= m; i++) {\n    while (p <= b[i].r) {\n      for (auto &&j : v[p]) T.Add(j);\n      p++;\n    }\n    ans[b[i].id] = T.Query(b[i].r) - T.Query(b[i].l - 1);\n  }\n  for (int i = 1; i <= m; i++) std::printf(\"%d\\n\", ans[i]);\n  return 0;\n}\n```",
        "postTime": 1619577130,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF301D \u3010Yaroslav and Divisors\u3011"
    },
    {
        "content": "\u9996\u5148\u8bb0 $sum_i$ \u8868\u793a $[1,i]$ \u4e2d\u6574\u9664\u5bf9\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f $sum_r-sum_l-$ \u5de6\u7aef\u70b9\u5728 $[1,l]$\uff0c\u53f3\u7aef\u70b9\u5728 $[l,r]$ \u7684\u6574\u9664\u5bf9\u3002\u90a3\u4e48\u8003\u8651\u79bb\u7ebf\u5904\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee $[l,r]$\uff0c\u5f53 $l=i$\uff0c$sum_r-sum_{l-1}=$ \u5de6\u7aef\u70b9\u5728 $[1,l]$\uff0c\u53f3\u7aef\u70b9\u5728 $[l,r]$ \u7684\u6574\u9664\u5bf9\uff0c\u7136\u540e\u66f4\u65b0\u4e00\u4e0b $sum_i$\u3002$sum_i$ \u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define reg register\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define pi pair<int, int>\n#define pl pair<ll, ll>\n#define vi vector<int>\n#define vl vector<ll>\n#define vpi vector<pi>\n#define vpl vector<pl>\n#define pb push_back\n#define er erase\n#define SZ(x) (int) x.size()\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define mkp make_pair\nusing namespace std;\nchar ch, B[1 << 20], *S = B, *T = B;\n#define getc() (S == T && (T = (S = B) + fread(B, 1, 1 << 20, stdin), S == T) ? 0 : *S++)\n#define isd(c) (c >= '0' && c <= '9')\nint aa, bb;\nint rd() {\n  while(ch = getc(), !isd(ch) && ch != '-');\n  ch == '-' ? aa = bb = 0 : (aa = ch - '0', bb = 1);\n  while(ch = getc(), isd(ch))\n    aa = aa * 10 + ch - '0';\n  return bb ? aa : -aa;\n}\nconst int MAXN = 2e5 + 10;\nint n, m, p[MAXN], tr[MAXN], ans[MAXN], pos[MAXN];\nstruct Node {\n  int l, r, id;\n} a[MAXN], b[MAXN];\nbool cmp1(Node a, Node b) {\n  return a.l == b.l ? a.r < b.r : a.l < b.l;\n}\nbool cmp2(Node a, Node b) {\n  return a.r == b.r ? a.l < b.l : a.r < b.r;\n}\ninline void add(int x, int c) {\n  while(x <= n) {\n    tr[x] += c;\n    x += (x & (-x));\n  }\n}\nint sum(int x) {\n  int ret = 0;\n  while(x) {\n    ret += tr[x];\n    x -= (x & (-x));\n  }\n  return ret;\n}\ninline void work() {\n  n = rd();\n  m = rd();\n  for(reg int i = 1; i <= n; ++i) {\n    p[i] = rd();\n    pos[p[i]] = i;\n  }\n  for(reg int i = 1; i <= m; ++i) {\n    int l = rd(), r = rd();\n    a[i].l = l;\n    a[i].r = r;\n    a[i].id = i;\n    b[i] = a[i];\n  }\n  sort(a + 1, a + m + 1, cmp1);\n  sort(b + 1, b + m + 1, cmp2);\n  int j = 1, k = 1;\n  for(reg int i = 1; i <= n; ++i) {\n    while(a[j].l == i && j <= m) {\n      ans[a[j].id] -= sum(a[j].r) - sum(a[j].l - 1);\n      ++j;\n    }\n    for(reg int l = 1; l * p[i] <= n; ++l)\n      add(pos[l * p[i]], 1);\n    while(b[k].r == i && k <= m) {\n      ans[b[k].id] += sum(b[k].r) - sum(b[k].l - 1);\n      ++k;\n    }\n  }\n  for(reg int i = 1; i <= m; ++i)\n    // printf(\"%d %d\\n\", ans[i], tr[i]);\n    printf(\"%d\\n\", ans[i]);\n}\nint main() {\n  // freopen(\"input.txt\", \"r\", stdin);\n  work();\n  return 0;\n}\n```",
        "postTime": 1584105784,
        "uid": 157411,
        "name": "Nylch",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF301D \u3010Yaroslav and Divisors\u3011"
    }
]