[
    {
        "content": "> ## \u8fd9\u9898\u8bc4\u5206\u662f **\u7701\u9009/NOI-**\uff1f\u660e\u660e\u662f **\u666e\u53ca+/\u63d0\u9ad8** \u7684\u88f8\u9898\uff01\n\n## \u672c\u9898\u601d\u8def\uff1a\n1. \u5f88\u660e\u663e\uff0c\u8fd9\u662f\u4e00\u9053 **\u7ebf\u6bb5\u6811** \u88f8\u9898\u3002\u56e0\u6b64\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u5c31\u4e0d\u8bb2\u4e86\u5427\u3002\u3002\u3002\n2. \u7ec6\u8282\u65b9\u9762\u7684\u95ee\u9898\uff1a\u56e0\u4e3a\u662f\u4e00\u4e2a **\u73af\u5f62\u6570\u5217**\uff0c\u6bcf\u6b21\u8bfb\u5165\u540e\u9700\u8981\u5224\u65ad$\\ l$\u548c$\\ r$\u7684\u5927\u5c0f\uff01\n- \u5982\u679c$\\ l<=r$\uff08\u6ee1\u8db3\u4e00\u822c\u5173\u7cfb\uff09\uff1a\u5219\u76f4\u63a5$\\ update(l,r)$\u5373\u53ef\u3002\n- \u5982\u679c$\\ l>r$\uff08\u4e3a\u4e00\u4e2a\u73af\u5f62\u5173\u7cfb\uff09\uff1a\u5219\u9700\u8981$\\ update(l,n)\\ +\\ update(1,r)$\u3002\n3. \u4ee3\u7801\u4e2d\u6709\u4e00\u4e9b **\u7ec6\u8282\u5b9e\u73b0**\uff0c\u53ef\u4ee5\u7565\u4f5c\u53c2\u8003\uff08\u5982\u53d8\u91cf$\\ space$\u5904\u7406\u53c2\u6570\u6570\u91cf\u7b49\uff09\u3002\n\n### \u4ee3\u7801\u5949\u4e0a\uff1a\nPS\uff1a\u5173\u4e8e\u7ebf\u6bb5\u6811\u7684\u5177\u4f53\u5b9e\u73b0\u548c\u5199\u6cd5\uff0c\u8be6\u89c1 [\u6d1b\u8c37 - P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1](https://www.luogu.org/problemnew/show/P3372)\n\n```\n#include<cstdio>\n#define C const\n#define ls rt<<1\n#define rs rt<<1|1\n#define ll long long\n#define INF 0x7f7f7f7f7f7f7f7f\nusing namespace std;\n\nconst int MAXN=200000+5;\nint n,m;\nbool space;\nll a[MAXN],tree[MAXN<<2],tag[MAXN<<2];\n\ninline ll read_long()\n{\n\tspace=0;\n\tregister ll s=0,w=1;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')s=(s<<1)+(s<<3)+c-48,c=getchar();\n\tif(c==' ')  space=1;\n\treturn s*w;\n}\ninline int read_int()\n{\n\tspace=0;\n\tregister int s=0,w=1;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')s=(s<<1)+(s<<3)+c-48,c=getchar();\n\tif(c==' ')  space=1;\n\treturn s*w;\n}\ninline ll min(C ll &a,C ll &b){return(a<b?a:b);}\n\ninline void build(C int &rt,C int &l,C int &r)\n{\n\tif(l==r){tree[rt]=a[l];return;}\n\tC int mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\ttree[rt]=min(tree[ls],tree[rs]);\n}\ninline void update(C int &nl,C int &nr,C int &rt,C int &l,C int &r,C ll &v)\n{\n\tif(nl<=l&&r<=nr)\n\t{\n\t\ttag[rt]+=v;\n\t\treturn;\n\t}\n\tC int mid=(l+r)>>1;\n\tif(nl<=mid)  update(nl,nr,ls,l,mid,v);\n\tif(mid<nr)  update(nl,nr,rs,mid+1,r,v);\n\ttree[rt]=min(tree[ls]+tag[ls],tree[rs]+tag[rs]);\n}\n\ninline ll query(C int &nl,C int &nr,C int &rt,C int &l,C int &r)\n{\n\tif(nl<=l&&r<=nr)  return tree[rt]+tag[rt];\n\tC int mid=(l+r)>>1;\n\tregister ll left=INF,right=INF;\n\tif(nl<=mid)  left=query(nl,nr,ls,l,mid);\n\tif(mid<nr)  right=query(nl,nr,rs,mid+1,r);\n\treturn min(left,right)+tag[rt];\n}\n\nint main()\n{\n\tn=read_int();\n\tfor(register int i=1;i<=n;i++)  a[i]=read_long();\n\tbuild(1,1,n);\n\tm=read_int();\n\tregister int l,r;\n\tregister ll v;\n\twhile(m--)\n\t{\n\t\tl=read_int();  r=read_int();\n\t\tl++;  r++;\n\t\tif(space)\n\t\t{\n\t\t\tv=read_long();\n\t\t\tif(l>r)  update(l,n,1,1,n,v),update(1,r,1,1,n,v);\n\t\t\telse  update(l,r,1,1,n,v);\n\t\t}else{\n\t\t\tif(l>r)  printf(\"%lld\\n\",min(query(l,n,1,1,n),query(1,r,1,1,n)));\n\t\t\telse  printf(\"%lld\\n\",query(l,r,1,1,n));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1524838075,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "## Segment Tree\n\n\u8fd9\u5c31\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u9898\uff08\u5e9f\u8bdd\uff0c \u9898\u76ee\u4e0d\u662f\u5728\u90a3\u91cc\u6446\u7740\u5417\uff1f\uff09\u3002 \u76f8\u4fe1\u6709\u5f88\u591a\u5c0f\u76c6\u53cb\u8fd8\u4e0d\u4f1a\u7ebf\u6bb5\u6811\uff08\u4f1a\u4e86\u8fd8\u7528\u6211\u5199\u9898\u89e3\u5417\uff1f\uff09\u3002 \u90a3\u4e48\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u7ebf\u6bb5\u6811\u3002\n\n\u7ebf\u6bb5\u6811\uff0c \u987e\u540d\u601d\u4e49\uff0c \u5c31\u662f\u4e00\u68f5\u4fdd\u5b58\u7ebf\u6bb5\u7684\u6811\u3002 \u90a3\u4e48\u4fdd\u5b58\u7684\u5185\u5bb9\u6709\u5f88\u591a\u79cd\u5f62\u5f0f\uff0c \u6bd4\u5982\u6700\u5c0f\u503c\uff0c \u6700\u5927\u503c\uff0c \u533a\u95f4\u548c\u7b49\u7b49\u3002\n\n### \u4e00\u3001\t\u5efa\u6811\n\n\u5047\u8bbe\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u6807\u4e3a $\\texttt{x}$\uff0c \u90a3\u4e48\u5b83\u7684\u5de6\u513f\u5b50\u7684\u4e0b\u6807\u5c31\u662f $\\texttt{2x}$\uff0c \u5b83\u7684\u53f3\u513f\u5b50\u7684\u4e0b\u6807\u5c31\u662f $\\texttt{2x+1}$\u3002 \u90a3\u4e48\u6211\u4eec\u4ece\u4e0b\u6807 $\\texttt{1}$ \u5f00\u59cb\uff0c \u4e00\u76f4\u9012\u5f52\uff0c \u5efa\u6811\u5c31\u5b8c\u6210\u4e86\u3002\n\n#### NOTICE:\n\n\u8bb0\u5f97\u6700\u540e\u8981\u66f4\u65b0\u7236\u8282\u70b9\u3002\n    \n### \u4ee3\u7801\u541b\uff1a\n```cpp\nvoid build(ll p,ll l,ll r) {\n\tt[p].l=l; t[p].r=r; t[p].add=0;\n\tif (l==r) {\n\t\tt[p].data=a[l];\n\t\tt[p].Min=a[l];\n\t\treturn ;\n\t}\n\tll mid=(l+r)/2;\n\tbuild(p*2,l,mid);\n\tbuild(p*2+1,mid+1,r);\n\tt[p].data=t[p*2].data+t[p*2+1].data;\n\tt[p].Min=min(t[p*2].Min,t[p*2+1].Min);\n}\n```\n\n### \u4e8c\u3001\t\u533a\u95f4\u4fee\u6539\n\n  \u5047\u5982\u4f60\u66f4\u65b0\u4e86\u7ebf\u6bb5 $\\texttt{1}$ ~ $\\texttt{4}$\uff0c \u90a3\u4e48\u7ebf\u6bb5 $\\texttt{1}$ ~ $\\texttt{2}$ \u4e5f\u5f97\u66f4\u65b0\uff0c \u5047\u5982\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u8981\u52a0 $\\texttt{k}$\uff0c\u90a3\u4e48\u5b83\u7684\u513f\u5b50\u8282\u70b9\u90fd\u8981\u52a0 $\\texttt{k}$\uff0c\u53ef\u662f\u4e00\u4e2a\u4e00\u4e2a\u66f4\u65b0\u592a\u6162\u4e86\uff0c \u80fd\u4e0d\u80fd\u4e00\u8d77\u66f4\u65b0\u5462\uff1f $\\texttt{Of course, why not?}$ \u8fd9\u91cc\u5c31\u9700\u8981\u52a0\u5165\u4e00\u4e2a $\\texttt{pushdown}$ \u7684\u6982\u5ff5\u4e86\u3002\n\n\u9996\u5148\uff0c \u6211\u4eec\u53ef\u4ee5\u52a0\u4e00\u4e2a $\\texttt{add}$\uff0c \u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u7528\u4e4b\u524d $\\texttt{pushdown}$ \u4e00\u4e0b\u5c31\u884c\u8fa3\u3002\n\n### \u4ee3\u7801\u541b\uff1a\n\n```cpp\nvoid pushdown(ll p) {\n\tt[p*2].data+=(t[p*2].r-t[p*2].l+1)*t[p].add;\n\tt[p*2].Min+=t[p].add;\n\tt[p*2].add+=t[p].add;\n\tt[p*2+1].data+=(t[p*2+1].r-t[p*2+1].l+1)*t[p].add;\n\tt[p*2+1].Min+=t[p].add;\n\tt[p*2+1].add+=t[p].add;\n\tt[p].add=0;\n}\n```\n\n\u5047\u5982\u5b83\u5c31\u5728\u6240\u8981\u6c42\u7684\u533a\u95f4\u4e4b\u5185\uff0c \u5c31\u53ef\u4ee5\u76f4\u63a5\u66f4\u65b0\uff0c \u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0a $\\texttt{k}$\uff0c \u76f8\u5f53\u4e8e\u4e00\u5171\u52a0\u4e0a $\\texttt{(r-l+1)}$ $\\times$ $\\texttt{k}$\u3002 $\\texttt{add}$ \u4e5f\u8981\u52a0\u4e0a $\\texttt{k}$\u3002\u6bcf\u4e00\u4e2a\u6570\u90fd\u52a0\u4e0a $\\texttt{k}$\uff0c \u533a\u95f4\u5185\u7684\u5927\u5c0f\u5173\u7cfb\u4e0d\u53d8\uff0c \u6700\u5c0f\u503c\u4e5f\u8981\u52a0\u4e0a $\\texttt{k}$\u3002 \u5176\u5b9e\u601d\u8def\u4e0e\u4e0a\u9762\u7684 $\\texttt{pushdown}$ \u662f\u5dee\u4e0d\u591a\u7684\u3002\n\n\u533a\u95f4\u4fee\u6539\u7684\u4ee3\u7801\u4e5f\u5f88\u5feb\u5c31\u80fd\u5199\u51fa\u6765\u8fa3\u3002\n\n#### NOTICE:\n\u6700\u540e\u8bb0\u5f97\u66f4\u65b0\u4e00\u4e0b\u3002\n\n### \u4ee3\u7801\u541b\uff1a\n```cpp\nvoid change(ll p,ll x,ll y,ll k) {\n\tif (t[p].l>=x&&t[p].r<=y) {\n\t\tt[p].data+=(t[p].r-t[p].l+1)*k;\n\t\tt[p].Min+=k;\n\t\tt[p].add+=k;\n\t\treturn ;\n\t}\n\tpushdown(p);\n\tll mid=(t[p].l+t[p].r)/2;\n\tif (x<=mid) change(p*2,x,y,k);\n\tif (mid<y) change(p*2+1,x,y,k);\n\tt[p].data=t[p*2].data+t[p*2+1].data;\n\tt[p].Min=min(t[p*2].Min,t[p*2+1].Min);\n}\n```\n\n### \u4e09\u3001\t\u533a\u95f4\u67e5\u8be2\n\n\u53ea\u8981\u5b83\u5c31\u5728\u6240\u8981\u6c42\u7684\u533a\u95f4\u5185\uff0c \u76f4\u63a5\u8fd4\u56de\u503c\uff0c \u522b\u5fd8\u4e86\u5728\u6c42\u6700\u5c0f\u503c\u4e4b\u524d $\\texttt{pushdown}$ \u4e00\u4e0b\u3002 $\\texttt{ans}$ \u521a\u5f00\u59cb\u8981\u521d\u59cb\u5316\u3002\n\n### \u4ee3\u7801\u541b\uff1a\n```cpp\nll query(ll p,ll x,ll y) {\n\tif (t[p].l>=x&&t[p].r<=y) return t[p].Min;\n\tpushdown(p);\n\tll ans=1e16,mid=(t[p].l+t[p].r)/2;\n\tif (x<=mid) ans=min(ans,query(p*2,x,y));\n\tif (mid<y) ans=min(ans,query(p*2+1,x,y));\n\treturn ans;\n}\n```\n\n\u5c31\u8fd9\u6837\uff0c\u6211\u4eec\u5b8c\u6210\u4e86\u7ebf\u6bb5\u6811\u7684\u4e00\u6ce2\u64cd\u4f5c\u3002\n\n#### \u73af\u5f62\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a\n\n\u5982\u679c $\\texttt{l}$ <= $\\texttt{r}$ \uff0c \uff08$\\texttt{l}$ \uff0c $\\texttt{r}$\uff09\u3002\n\n\u5982\u679c $\\texttt{l}$ >= $\\texttt{r}$ \uff0c \uff08$\\texttt{l}$ \uff0c $\\texttt{n}$\uff09 \uff1b \uff08$\\texttt{1}$ \uff0c $\\texttt{r}$\uff09\u3002\n\n#### \u8f93\u5165\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a\n\n\u7528\u4e00\u4e2a\u5feb\u8bfb\u5224\u65ad\u8f93\u5165\u7a7a\u683c\u7684\u4e2a\u6570\uff08\u65e0\u5948\u554a\uff01\uff09\u3002\n\n### \u4ee3\u7801\u541b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define Maxn 1000001\ntypedef long long ll;\nstruct node {\n\tll data,l,r,Min,add;\n}t[4*Maxn]; //\u8bb0\u5f97\u8981\u5f004\u500d\u7684\u7a7a\u95f4\nll a[Maxn],n,m,len,b[10],space=0;\nll read() {\n\tll res=0,f=1;\n\tchar c=getchar();\n\twhile (!isdigit(c)) {if (c=='-') f=-1;c=getchar();}\n\twhile (isdigit(c)) res=res*10+c-48,c=getchar();\n\tif (c==' ') ++space; //\u7a7a\u683c\u7684\u4e2a\u6570\n\treturn res*f;\n}\nvoid build(ll p,ll l,ll r) {\n\tt[p].l=l; t[p].r=r; t[p].add=0;\n\tif (l==r) {\n\t\tt[p].data=a[l];\n\t\tt[p].Min=a[l];\n\t\treturn ;\n\t}\n\tll mid=(l+r)/2;\n\tbuild(p*2,l,mid);\n\tbuild(p*2+1,mid+1,r);\n\tt[p].data=t[p*2].data+t[p*2+1].data;\n\tt[p].Min=min(t[p*2].Min,t[p*2+1].Min);\n}\nvoid pushdown(ll p) {\n\tt[p*2].data+=(t[p*2].r-t[p*2].l+1)*t[p].add;\n\tt[p*2].Min+=t[p].add;\n\tt[p*2].add+=t[p].add;\n\tt[p*2+1].data+=(t[p*2+1].r-t[p*2+1].l+1)*t[p].add;\n\tt[p*2+1].Min+=t[p].add;\n\tt[p*2+1].add+=t[p].add;\n\tt[p].add=0;\n}\nvoid change(ll p,ll x,ll y,ll k) {\n\tif (t[p].l>=x&&t[p].r<=y) {\n\t\tt[p].data+=(t[p].r-t[p].l+1)*k;\n\t\tt[p].Min+=k;\n\t\tt[p].add+=k;\n\t\treturn ;\n\t}\n\tpushdown(p);\n\tll mid=(t[p].l+t[p].r)/2;\n\tif (x<=mid) change(p*2,x,y,k);\n\tif (mid<y) change(p*2+1,x,y,k);\n\tt[p].data=t[p*2].data+t[p*2+1].data;\n\tt[p].Min=min(t[p*2].Min,t[p*2+1].Min);\n}\nll query(ll p,ll x,ll y) {\n\tif (t[p].l>=x&&t[p].r<=y) return t[p].Min;\n\tpushdown(p);\n\tll ans=1e16,mid=(t[p].l+t[p].r)/2;\n\tif (x<=mid) ans=min(ans,query(p*2,x,y));\n\tif (mid<y) ans=min(ans,query(p*2+1,x,y));\n\treturn ans;\n}\nint main() {\n\tcin>>n;\n\tfor(ll i=1;i<=n;i++) cin>>a[i];\n\tbuild(1,1,n);\n\tcin>>m;\n\tfor(ll i=1;i<=m;i++) {\n\t\tll l,r,k;\n\t\tspace=0; //\u8bb0\u5f97\u6bcf\u6b21\u8981\u6e05\u7a7a\n\t\tl=read();r=read();++l;++r; //\u7531\u4e8e\u5b83\u7684\u4e0b\u6807\u662f0\u5230n-1\uff0c \u6240\u4ee5\u8981\u5148\u628a\u4e0b\u6807+1\n\t\tif (space==2) {\n\t\t\tk=read();\n\t\t\tif (l<=r) change(1,l,r,k);else {change(1,l,n,k);change(1,1,r,k);}\n\t\t}\n\t\telse {\n\t\t\tif (l<=r) cout<<query(1,l,r)<<endl;else cout<<min(query(1,l,n),query(1,1,r))<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1\uff01\uff01\n",
        "postTime": 1604153113,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "CF52C Circular RMQ"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u88f8\u9898\u4e00\u4e2a\u3002\u5199\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u53d6 $\\min$ \u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u5904\u7406\u73af\u5f62\u7684\u65b9\u6cd5\u3002\u5176\u5b9e\u4e5f\u4e0d\u662f\u90a3\u4e48\u96be\u60f3\u5566qwq\u3002\n\n- \u5982\u679c $l\\le r$\uff0c\u90a3\u4e48\u5c31\u662f\u6b63\u5e38\u533a\u95f4\uff0c\u76f4\u63a5\u5904\u7406\u5373\u53ef\u3002\n- \u5982\u679c $l>r$\uff0c\u5219\u533a\u95f4\u6210\u73af\u5f62\uff0c\u5904\u7406\u4e00\u4e0b $[l,n]$ \u548c $[1,r]$ \u5373\u53ef\u3002\u5e76\u4e0d\u9700\u8981\u4ec0\u4e48\u9ad8\u79d1\u6280\u3002\n\n\u987a\u4fbf\u63d0\u4e00\u53e5\uff0c\u5224\u65ad\u662f $\\operatorname{rmq}$ \u8fd8\u662f $\\operatorname{inc}$ \u7684\u65f6\u5019\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u52a0\u5feb\u8bfb\uff0c\u5728 `read()` \u91cc\u9762\u52a0\u4e0a\u4e00\u4e2a `space` \u7684\u5224\u65ad\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u7528\u7c7b\u4f3c `while(cin>>x);` \u4e4b\u7c7b\u7684\u5199\u6cd5\u4e5f\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\nPS\uff1a\u5982\u679c\u4e0d\u4f1a\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u5de6\u8f6c [P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1](https://www.luogu.com.cn/problem/P3372)\uff0c\u9898\u89e3\u533a\u5927\u4f6c\u8bb2\u7684\u5341\u5206\u6e05\u695a\uff0c\u5305\u6559\u5305\u4f1a\uff08\n\n------------\n\n\u4e0b\u9762\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n#define lson(o) (o<<1)\n#define rson(o) (o<<1|1)\n#define MAXN 200005\n\nusing namespace std;\n\nint a[MAXN],n;\n\nstruct SMT{//\u7ebf\u6bb5\u6811 \n\t\n\tint m[MAXN<<2],plz[MAXN<<2];\n\t//m\u8868\u793a\u533a\u95f4\u6700\u5c0f\u503c\uff0cplz\u662f\u61d2\u6807\u8bb0 \n\t\n\tinline void pushup(int o){\n\t\tm[o]=min(m[lson(o)],m[rson(o)]);\n\t}\n\t\n\tinline void build(int l,int r,int o){\n\t\tplz[o]=0;\n\t\tif(l==r){\n\t\t\tm[o]=a[l];\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(l,mid,lson(o));\n\t\tbuild(mid+1,r,rson(o));\n\t\tpushup(o);\n\t}\n\t//\u5efa\u6811 \n\t\n\tinline void pushdown(int ql,int qr,int o){\n\t\tint mid=(ql+qr)>>1;\n\t\tif(plz[o]){\n\t\t\tm[lson(o)]+=plz[o];\n\t\t\tm[rson(o)]+=plz[o];\n\t\t\tplz[lson(o)]+=plz[o];\n\t\t\tplz[rson(o)]+=plz[o];\n\t\t\tplz[o]=0;\n\t\t}\n\t}\n\t\n\tinline int querymin(int l,int r,int ql,int qr,int o){\n\t\tif(l<=ql&&qr<=r)return m[o];\n\t\tpushdown(ql,qr,o);\n\t\tint mid=(ql+qr)>>1,ans=0x7fffffff;\n\t\tif(l<=mid)ans=min(ans,querymin(l,r,ql,mid,lson(o)));\n\t\tif(r>mid)ans=min(ans,querymin(l,r,mid+1,qr,rson(o)));\n\t\treturn ans;\n\t}\n\t//\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c \n\t\n\tinline void add(int l,int r,int k,int ql,int qr,int o){\n\t\tif(l<=ql&&qr<=r){\n\t\t\tm[o]+=k;\n\t\t\tplz[o]+=k;\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(ql,qr,o);\n\t\tint mid=(ql+qr)>>1;\n\t\tif(l<=mid)add(l,r,k,ql,mid,lson(o));\n\t\tif(r>mid)add(l,r,k,mid+1,qr,rson(o));\n\t\tpushup(o);\n\t}\n\t//\u533a\u95f4\u52a0\n\t \n};\n//\u90fd\u662f\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002 \n\nSMT tree;\n\nint spc=0;//\u7528\u4e8e\u5224\u65ad\u662f\u5426\u8fd8\u6709\u4e0b\u4e00\u4e2a\u6570 \ninline int read(){\n\tspc=0;//\u6bcf\u6b21\u5feb\u8bfb\u65f6\u8bb0\u5f97\u521d\u59cb\u5316\uff0c\u6211\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u5341\u51e0\u5206\u949f=_= \n\tint w=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c))if(c=='-')f=-1,c=getchar();\n\twhile(isdigit(c))w=(w<<1)+(w<<3)+(c^48),c=getchar();\n\tif(c==' ')spc=1;\n\t//\u539f\u7406\u5176\u5b9e\u5927\u6982\u662f\u8bfb\u5165\u5b8c\u4e00\u4e2a\u6570\u4e4b\u540e\n\t//\u7531\u4e8e while \u7684\u7279\u6027\u4f1a\u591a\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\n\t//\u5982\u679c\u8fd9\u4e2a\u662f\u7a7a\u683c\u5219\u8bf4\u660e\u540e\u9762\u8fd8\u6709\u6570\u3002 \n\treturn w*f;\n}\n\nsigned main(void){\n\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t}\n\ttree.build(1,n,1);\n\t\n\tint m=read();\n\twhile(m--){\n\t\tint l=0,r=0,v=0;\n\t\tl=read(),r=read();\n\t\tl++,r++;\n\t\tif(spc){//spc \u5c31\u662f\u5feb\u8bfb\u91cc\u9762\u7684\u90a3\u4e2a \n\t\t\tv=read();\n\t\t\tif(l>r)tree.add(l,n,v,1,n,1),tree.add(1,r,v,1,n,1);\n\t\t\t//\u6210\u73af\u5f62 \n\t\t\telse tree.add(l,r,v,1,n,1);\n\t\t\t//\u666e\u901a\u7684\u7ebf\u5f62 \n\t\t}\n\t\telse{\n\t\t\tif(l>r)printf(\"%lld\\n\",min(tree.querymin(l,n,1,n,1),tree.querymin(1,r,1,n,1)));\n\t\t\telse printf(\"%lld\\n\",tree.querymin(l,r,1,n,1));\n\t\t\t//\u540c\u4e0a \n\t\t}\n\t}\n\n\treturn 0;\n}\n\n```\n",
        "postTime": 1600679236,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "\u5148\u8003\u8651\u5c06\u73af\u5f62\u62c6\u6210\u7ebf\u6027\u3002\n\n\u8bfb\u5165 $l,r$ \u540e\u5148\u5c06 $l \u2190 l+1,r \u2190 r+1$\uff08\u6211\u4eec\u8fd9\u91cc\u4ece $1 \\sim n$ \u7f16\u53f7 \uff09\uff0c\u7136\u540e\u5c31\u5f00\u59cb\u62c6\u3002\n\n\u5047\u8bbe\u8fd9\u6b21\u7684\u64cd\u4f5c\u662f $inc(l,r)$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5206\u6210\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- $l \\le r$\uff0c\u90a3\u4e48\u64cd\u4f5c\u5c31\u662f $inc(l,r)$\u3002\n\n- $l > r$\uff0c\u90a3\u4e48\u5c31\u64cd\u4f5c\u62c6\u6210 $inc(l,n)$ \u4e0e $inc(1,r)$\u3002\n\n\u540c\u7406\uff0c$rmq$ \u64cd\u4f5c\u4e5f\u662f\u5982\u6b64\u3002\n\n\u7136\u540e\u5c31\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u677f\u9898\u4e86\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define l(x) t[x].l\n#define r(x) t[x].r\n#define dat(x) t[x].dat\n#define add(x) t[x].add\n#define LL long long\nconst int MAXN = 2e5 + 5;\nstruct tree {\n    int l, r;\n    LL dat, add;\n} t[MAXN << 2];\nvoid build(int p, int l, int r) {\n    l(p) = l, r(p) = r;\n    if (l == r) {\n        scanf(\"%lld\",&dat(p));\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(p << 1, l, mid);\n    build(p << 1 | 1, mid + 1, r);\n    dat(p) = min(dat(p << 1), dat(p << 1 | 1));\n}\nvoid Updata(int p) {\n    if (add(p)) {\n        add(p << 1) += add(p);\n        add(p << 1 | 1) += add(p);\n        dat(p << 1) += add(p);\n        dat(p << 1 | 1) += add(p);\n        add(p) = 0;\n    }\n}\nvoid Change(int p, int l, int r, LL d) {\n    if (l <= l(p) && r >= r(p)) {\n        add(p) += d;\n        dat(p) += d;\n        return;\n    }\n    Updata(p);\n    int mid = (l(p) + r(p)) >> 1;\n    if (l <= mid)\n        Change(p << 1, l, r, d);\n    if (r > mid)\n        Change(p << 1 | 1, l, r, d);\n    dat(p) = min(dat(p << 1), dat(p << 1 | 1));\n}\nLL Query(int p, int l, int r) {\n    if (l <= l(p) && r >= r(p))\n        return dat(p);\n    Updata(p);\n    int mid = (l(p) + r(p)) >> 1;\n    LL val = 1e18;\n    if (l <= mid)\n        val = min(val, Query(p << 1, l, r));\n    if (r > mid)\n        val = min(val, Query(p << 1 | 1, l, r));\n    return val;\n}\nint n,m;\nint main() {\n\tscanf(\"%d\",&n);\n\tbuild(1,1,n);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint l,r;\n\t\tLL c;\n\t\tscanf(\"%d %d\",&l,&r),l++,r++;\n\t\tchar ch;\n\t\tch=getchar();\n\t\tif(ch=='\\n'){\n\t\t\tif(l<=r)printf(\"%lld\\n\",Query(1,l,r));\n\t\t\telse printf(\"%lld\\n\",min(Query(1,l,n),Query(1,1,r)));\n\t\t}else{\n\t\t\tscanf(\"%lld\",&c);\n\t\t\tif(l<=r)Change(1,l,r,c);\n\t\t\telse Change(1,l,n,c),Change(1,1,r,c);\n\t\t}\n\t}\n    return 0;\n}\n```",
        "postTime": 1583417204,
        "uid": 154560,
        "name": "Silver187",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://xiaohuang888.github.io/2019/12/11/%E3%80%8CCF52C%E3%80%8DCircular%20RMQ/)\n\n### Solution\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u89e3\u51b3\u533a\u95f4`RMQ`\u95ee\u9898\uff0c\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u503c\u4e0e\u61d2\u6807\u8bb0\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u8bfb\u5165\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u540e\u9762\u4e00\u4e2a\u5b57\u7b26\u662f\u4e0d\u662f\u7a7a\u683c\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u5feb\u901f\u8bfb\u5165\u91cc\u5224\u65ad\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5224\u65ad\u51fa\u4e00\u884c\u6709\u4e09\u4e2a\u6570\u8fd8\u662f\u4e24\u4e2a\u6570\u3002\n\n### Code\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\nconst int MAXN = 200005;\nint n, m, l, r, val, a[MAXN];\nbool opt;\nnamespace Segtree {\n    #define ls rt << 1\n    #define rs rt << 1 | 1\n    typedef long long LL;\n    const LL Seg_INF = 1e18;\n    const int Seg_MAXN = 1000005;\n    struct SMT {\n        LL Min, tag;\n    } tree[Seg_MAXN];\n    inline void build(int rt, int l, int r) {//\u5efa\u7acb\u7ebf\u6bb5\u6811\n        if (l == r) {\n            tree[rt].Min = a[l];\n            return ;\n        }\n        int mid = l + r >> 1;\n        build(ls, l, mid);\n        build(rs, mid + 1, r);\n        tree[rt].Min = min(tree[ls].Min, tree[rs].Min);\n    }\n    inline void update(int rt, int l, int r, int ansl, int ansr, int val) {//\u7ebf\u6bb5\u6811\u4fee\u6539\n        if (ansl <= l && r <= ansr) {\n            tree[rt].tag += val;\n            return ;\n        }\n        int mid = l + r >> 1;\n        if (ansl <= mid) update(ls, l, mid, ansl, ansr, val);\n        if (mid < ansr) update(rs, mid + 1, r, ansl, ansr, val);\n        tree[rt].Min = min(tree[ls].Min + tree[ls].tag, tree[rs].Min + tree[rs].tag);\n    }\n    inline LL query(int rt, int l, int r, int ansl, int ansr) {//\u7ebf\u6bb5\u6811\u67e5\u8be2\n        if (ansl <= l && r <= ansr) return tree[rt].Min + tree[rt].tag;\n        int mid = l + r >> 1;\n        LL ret = Seg_INF;\n        if (ansl <= mid) ret = min(ret, query(ls, l, mid, ansl, ansr));\n        if (mid < ansr) ret = min(ret, query(rs, mid + 1, r, ansl, ansr));\n        return ret + tree[rt].tag;\n    }\n}\n\nusing namespace Segtree;\n\ninline int read() {\n    opt = 0;\n    char ch = getchar();\n    int x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-') f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = (x << 1) + (x << 3) + ch - '0';\n        ch = getchar();\n    }\n    if (ch == ' ') opt = 1;//\u5224\u65ad\u7a7a\u683c\n    return x * f;\n}\nint main() {\n    n = read();\n    for (int i = 1; i <= n; i++)\n        a[i] = read();\n    build(1, 1, n);\n    m = read();\n    for (int i = 1; i <= m; i++) {\n        l = read(); r = read(); l++; r++;\n        if (!opt) {\n            if (l <= r) printf(\"%lld\\n\", query(1, 1, n, l, r)); else printf(\"%lld\\n\", min(query(1, 1, n, l, n), query(1, 1, n, 1, r)));\n        } else {\n            val = read();\n            if (l <= r) update(1, 1, n, l, r, val); else {\n                update(1, 1, n, l, n, val);\n                update(1, 1, n, 1, r, val);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1570190558,
        "uid": 19729,
        "name": "xiaohuang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "# \u53c8\u6765\u6c34\u4e00\u53d1\u9898\u89e3\n\n\u9898\u76ee\uff1a\u7ed9\u4f60\u4e00\u4e2a**\u73af\u5f62**\uff0c\u8ba9\u4f60\u505a\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u4e00\u6bb5\n\n\u533a\u95f4\u7684**\u6700\u5c0f\u503c**\n\n\u5343\u4e07\u4e0d\u8981\u88ab**\u73af\u5f62**\u4e8c\u5b57\u5413\u574f\u4e86\uff0c\u5176\u5b9e\u5f88\u597d\u5904\u7406\n\n\u5728 ${7,2,3,5,5,8,7,2}$ \u4e2d\uff0c\u6c42\u4ece$3$\u53f7\u5230$6$\u53f7\u7684\u6700\u5c0f\u503c\n\n\u76f4\u63a5\u7ebf\u6bb5\u6811\u6c42\u89e3\u3002\u3002\u3002\n\n\u5982\u679c\u4ece$6$\u53f7\u7ed5\u4e00\u5708\u5230$3$\u53f7\u5462\n\n\u5176\u4e2d\u7ecf\u5386\u4e86$6$\u53f7\uff0c$7$\u53f7\uff0c$8$\u53f7\uff0c$1$\u53f7,$2$\u53f7\uff0c$3$\u53f7\uff0c\n\u6700\u5c0f\u503c\u4e3a$2$\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c\u7b54\u6848\u662f\u4ece\u533a\u95f4$[6,8]$\u548c\u533a\u95f4$[1,3]$\u5408\u5e76\u800c\u6765\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u5904\u7406\u4e24\u7aef\u60c5\u51b5\n\n\u6362\u8a00\u4e4b\uff0c\u82e5\u7ed9\u51fa\u5de6\u7aef\u70b9$l>$\u53f3\u7aef\u70b9$r$\uff0c\u7b54\u6848\u4ece$[l,n]$\u548c$[1,r]$\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n\u8fd8\u6709\uff0c\n\n**1**.\u8f93\u5165\u6ca1\u544a\u8bc9\u4f60\u64cd\u4f5c\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u8f93\u5165\u5b8c\u540e\u770b\n\n\u770b\u8be5\u6570\u540e\u6709\u51e0\u4e2a\u7a7a\u683c\uff0c\u6709\u4e24\u4e2a\u5373\u4e3a\u4fee\u6539\uff08\u67e5\u8be2\u662f$1$\u4e2a\u7a7a\u683c+$1$\u4e2a\n\n\u6362\u884c\uff09\n \n**2**.\u7531\u4e8e\u4ece$0$~$n-1$,\u6240\u4ee5\u8f93\u5165\u65f6$l$\u548c$r$\u5404\u52a01\n\n**\u4ee5\u4e0a**\n\n```\n#include<bits/stdc++.h>\n#define LL long long\n#define inf LONG_LONG_MAX\n#define re register\n#define he(x) for(register int i=head[x];i;i=e[i].nxt)\nusing namespace std;\nLL n,m,opt;\nstruct CCF{\n\tLL l,r,mi,add;\n}t[800010];\ntemplate <class frd> inline void read(frd &a)\n{\n    bool f=0;a=0;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')a=(a<<1)+(a<<3)+(ch^48),ch=getchar();\n    if(ch==' ')opt++;//\u6709\u51e0\u4e2a\u7a7a\u683c\n    if(f)a=-a;\n}\ntemplate<typename T>inline void readc(T &x){\n    while(x=getchar(),!islower(x)&&!isupper(x));\n}\ninline string read1()\n{\n\tchar ch=getchar();\n\tstring st1=\"\";\n\twhile(!((ch>='a')&&(ch<='z')||(ch>='A')&&(ch<='Z')))\n\t  ch=getchar();\n\twhile((ch>='a')&&(ch<='z')||(ch>='A')&&(ch<='Z'))\n\t  st1+=ch,ch=getchar();\n\treturn st1;\n}\ntemplate<typename T>inline void print(T x,char c='\\n'){\n    static int buf[40];\n    if(x==0){\n        putchar('0');\n        putchar(c);\n        return;\n    }\n    if(x<0)putchar('-'),x=-x;\n    for(buf[0]=0;x;x/=10)buf[++buf[0]]=x%10+48;\n    while(buf[0])putchar((char)buf[buf[0]--]);\n    putchar(c);\n}\ninline void pushdown(LL x){\n\tt[x<<1].add+=t[x].add;\n\tt[x<<1|1].add+=t[x].add;\n\tt[x<<1].mi+=t[x].add;\n\tt[x<<1|1].mi+=t[x].add;\n\tt[x].add=0;\n}//\u61d2\u4eba\u6807\u8bb0\ninline void build(LL x,LL l,LL r){\n\tt[x].l=l;t[x].r=r;\n\tif(l==r){\n\t\tread(t[x].mi);\n\t\treturn;\n\t}\n\tLL mid=(l+r)>>1;\n\tbuild(x<<1,l,mid);\n\tbuild(x<<1|1,mid+1,r);\n\tt[x].mi=min(t[x<<1].mi,t[x<<1|1].mi);\n}\ninline void update(LL x,LL l,LL r,LL k){\n\tif(t[x].l>=l&&t[x].r<=r){\n\t\tt[x].add+=k;\n\t\tt[x].mi+=k;\n\t\treturn;\n\t}\n\tif(t[x].add)pushdown(x);\n\tLL mid=(t[x].l+t[x].r)>>1;\n\tif(mid>=l)update(x<<1,l,r,k);\n\tif(mid<r)update(x<<1|1,l,r,k);\n\tt[x].mi=min(t[x<<1].mi,t[x<<1|1].mi);\n}\ninline LL query(LL x,LL l,LL r){\n\tif(t[x].l>=l&&t[x].r<=r)return t[x].mi;\n\tif(t[x].add)pushdown(x);\n\tLL mi=INT_MAX,mid=(t[x].l+t[x].r)>>1;\n\tif(mid>=l)mi=min(mi,query(x<<1,l,r));\n\tif(mid<r)mi=min(mi,query(x<<1|1,l,r));\n\treturn mi;\n}\nint main()\n{\n\tread(n);\n\tbuild(1,1,n);\n\tread(m);\n\twhile(m--){\n\t\topt=0;\n\t\tLL l,r,k;\n\t\tread(l),read(r);l++;r++;//\u7531\u4e8e\u4ece0~n-1,l\u548cr++\n\t\tif(opt==2){\n\t\t\tread(k);\n\t\t\tif(l<=r)update(1,l,r,k);\n\t\t\telse {\n\t\t\t\tupdate(1,l,n,k);\n\t\t\t\tupdate(1,1,r,k);\n  \t\t\t\t//\u66f4\u65b0l>r\u7684\u60c5\u51b5\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(l<=r)print(query(1,l,r));\n\t\t\telse {\n\t\t\t\tprint(min(query(1,l,n),query(1,1,r)));\n                                       //\u67e5\u8be2l>r\u7684\u60c5\u51b5\n\t\t\t}\n\t\t}\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1566396046,
        "uid": 128882,
        "name": "cyy233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u662f\u4e2a\u7ebf\u6bb5\u6811\u6a21\u677f\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u5206\u6210\u4e24\u79cd\u60c5\u51b5\uff1a\n\n$i\\le j$ \u548c $j< i$ \u3002\n\n\u7b2c\u4e00\u79cd $i\\le j$ \u7684\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u533a\u95f4\u4fee\u6539\uff0c\u4f7f\u7528\u6807\u8bb0\u6c38\u4e45\u5316/\u61d2\u6807\u8bb0\u4e0b\u4f20\u89e3\u51b3\u95ee\u9898\uff1b\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5c31\u8981\u628a\u8981\u4fee\u6539\u7684\u533a\u95f4\u65ad\u6210\u4e24\u6bb5\uff0c\u4e00\u6bb5\u662f $[i,n]$ \uff0c\u4e00\u6bb5\u662f $[1,j]$ \uff0c\u5728\u4e0a\u9762\u7ee7\u7eed\u533a\u95f4\u4fee\u6539\u3002\n\n\n\u533a\u95f4\u67e5\u8be2\u4e5f\u662f\u5982\u6cd5\u70ae\u5236\uff0c\u5982\u679c $j<i$\uff0c\u7b54\u6848\u5c31\u662f$\\max(rmq(1,j),rmq(i,n))$ \u3002\uff08`rmq`\u662f\u6c42\u533a\u95f4\u6700\u503c\u51fd\u6570\uff09\n\n\u4e0d\u7136\u76f4\u63a5\u8fd4\u56de $rmq(l,r)$ \u3002\n\n\u7136\u540e\u6ce8\u610f\u9898\u76ee\u7ed9\u51fa\u7684\u533a\u95f4\u7aef\u70b9 $l,r$ \u662f\u8981\u989d\u5916\u52a0\u4e0a $1$ \u7684\u3002\n\n\u6ce8\u610f\u4e00\u4e9b\u7ebf\u6bb5\u6811\u5b9e\u73b0\u7684\u7ec6\u8282\u3002",
        "postTime": 1595748221,
        "uid": 121995,
        "name": "SmallTualatin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u4e2a\u533a\u95f4\u64cd\u4f5c\u95ee\u9898\u3002\n\n\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\uff0c\u4f46\u6211\u559c\u6b22\u7528**\u5206\u5757**\u2014\u4f18\u96c5\u7684\u66b4\u529b\n\n**\u5206\u5757\u662f\u4e00\u79cd\u5f88\u5bb9\u6613\u7406\u89e3\u6570\u636e\u7ed3\u6784\uff0c\u4ed6\u53ef\u4ee5\u7ef4\u62a4\u5f88\u591a\u7684\u4e1c\u897f**~~\u5f53\u7136\u6211\u90fd\u4e0d\u4f1a~~\uff0c\u672c\u9898\u89e3\u65e8\u5728\u8ba9\u53ea\u80fd\u5f97\u66b4\u529b\u5206\u7684\u540c\u5b66AC\u672c\u9898\uff01\u5b66\u4f1a\u5206\u5757\u7684\u601d\u60f3\u4ee5\u53ca\u65b9\u6cd5\uff0c\u4f1a\u6bd4\u8f83\u8be6\u7ec6\u3002\n\n- \u5206\u5757\u7684\u601d\u60f3\n\n\t\u6240\u8c13\u5206\u5757\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u628a\u4e00\u7ec4\u6570\u636e\u5206\u4e3a\u82e5\u5e72\u5757\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u3002\n    \n    \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6765\u770b\u4e00\u7ec4\u6570\u636e1,5,6,4,5\u3002\n    \u6211\u4eec\u628a\u4ed6\u5206\u6210$\\sqrt{n}$\u4e2a\u5757\uff08\u4e0d\u540c\u7684\u60c5\u51b5\u5757\u7684\u6570\u91cf\u4e0d\u540c\uff0c\u5c31\u662f\u8fd9\u6837)\n \n| \u7f16\u53f7 | \u6570\u503c | \u5757\u7684\u7f16\u53f7 |\n| ----------- | ----------- | ----------- |\n| 1 | 1 | 1 |\n| 2 | 5 | 1 |\n| 3 | 6 | 2 |\n| 4 | 4 | 2 |\n| 5 | 5 | 3 |\n\n\u5982\u679c\u6211\u4eec\u8981\u8ba9\u7f16\u53f7\u4e00\u5230\u4e94\u52a01\uff0c\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n\t\n    1. \u628a\u7b2c\u4e00\u5757\uff081\uff09\u7684\u503c \u66b4\u529b \u52a01\n    \n    2. \u628a\u4e2d\u95f4\u5757\uff082\uff09\u7684\u6bcf\u4e2a\u5757\u7684\u6807\u8bb0+1\n    \uff08\u5982\u4f55\u6253\u6807\u8bb0\uff1f\u53ea\u8981\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e00\u5757\u7684\u7edf\u4e00\u52a0\u7684\u503c\u5373\u53ef\uff0c\u76f8\u4fe1\u5b66\u8fc7\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u4e00\u5b9a\u5f88\u719f\u6089\uff09\n    \n    3. \u628a\u6700\u540e\u4e00\u5757\uff083\uff09\u7684\u6570\u503c \u66b4\u529b \u52a01\n\n\u7136\u540e\u5c31\u662f\u8fd9\u6837\n\n\n\n\n|\u7f16\u53f7 | \u6570\u503c | \u5757\u7684\u7f16\u53f7 |\n| ----------- | ----------- | ----------- | ----------- |\n| 1 | 2\uff081+1\uff09 |1  | \n| 2 | 6 \uff085+1\uff09| 1 | \n| 3 | 6 | 2 |  |\n| 4 | 4 | 2 |  |\n| 5 | 6 \uff085+1\uff09|3  |\n\n|\u7b2c\u51e0\u5757  | \u6807\u8bb0 |\n| ----------- | ----------- |\n| 1 | 0 |\n| 2 | 1\uff080+1\uff09 |\n| 3 | 0 |\n\n\n\u533a\u95f4\u67e5\u8be2\u540c\u7406\uff0c\u53ea\u662f\u66b4\u529b\u52a0 val \u7684\u65f6\u5019\u8981\u628a\u6bcf\u4e2a\u5757\u7684\u6807\u8bb0\u4e5f\u52a0 val\u3002\n\n\u5355\u70b9\u67e5\u8be2\u5c31\u662f\u628a\u6807\u8bb0 \u548c \u6570\u503c\u52a0\u8d77\u6765\u5c31OK\u3002\n\n- \u5177\u4f53\u5b9e\u73b0\n\t\n    \u5b9e\u73b0\u65f6\u6211\u4eec\u8981\u8003\u8651\u4e00\u4e9b\u7ec6\u8282\u3002\n    \u5047\u8bbe\u6211\u4eec\u8981\u7ef4\u62a4 x1 \u5230 x2 \u7684\u5e8f\u5217\n    1. \u5148\u7ef4\u62a4\u4e24\u8fb9\u7684\u4e0d\u5b8c\u6574\u5757\u3002\u6211\u4eec\u8981\u4ece\u8d77\u59cb\u70b9 x1 \u5230 x1 \u6240\u5728\u5757\u7684\u672b\u5c3e\uff0c\u624b\u7b97\u53ef\u5f97\uff0c\u6bcf\u4e2a\u5757\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a$L \\times [rank(x1)-1]$\uff0c\u5176\u4e2d L \u4e3a\u5757\u7684\u5927\u5c0f\uff0crank(x1) \u4e3a\u5f53\u524d\u5757\u7684\u7f16\u53f7\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u66b4\u529b\u7684\u7ef4\u62a4\u4e86\u4e0d\u5b8c\u6574\u5757\u3002\n    2. \u518d\u7ef4\u62a4\u4e2d\u95f4\u6574\u5757\uff0c\u6ce8\u610f\u5757\u7684\u7f16\u53f7\u4e3a$~~randk(x1)+1~~~to~~~rank(x2-1) $\u3002 \u56e0\u4e3a\u4e24\u8fb9\u7684\u6563\u5757\u90fd\u88ab\u5904\u7406\u8fc7\u4e86\n    3. \u8981\u6ce8\u610f\u64cd\u4f5c\u7684\u5e8f\u5217\u5728\u4e00\u4e2a\u5757\u5185\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u7ef4\u62a4\u5de6\u8fb9\u7684\u5757\uff0c\u7279\u5224\u4e00\u4e0b\uff0c\u5c31\u5b8c\u4e86\u3002\n    4. \u5bf9\u4e8e\u6b64\u9898\u3002\u5982\u679c $x1 > x2$\uff0c\u6211\u4eec\u53ef\u4ee5\u5904\u7406 x1 \u5230 N\uff0c\u518d\u5904\u7406 1 \u5230x2\u3002\n    5. \u7531\u4e8e\u6b64\u9898\u7684\u6bd2\u7624\u8f93\u5165\uff0c\u6211\u6ca1\u60f3\u51fa\u600e\u4e48\u641e\u3002\u5f88\u62b1\u6b49\u3002\n    \n [\u53c2\u8003\u4ee3\u7801](https://www.luogu.com.cn/paste/ugvnm4uw)\n \n \n",
        "postTime": 1588220549,
        "uid": 226148,
        "name": "Suuon_Kanderu",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u7c7b\u4f3c\u6a21\u677f\u9898\u3002\n\n\u9996\u5148\u6765\u8bb2\u4e00\u4e0b\u7ebf\u6bb5\u6811\u3002\n\n1. \u5efa\u6811\uff1a\n\n\u5148\u6765\u770b\u4e00\u4e0b\u7ebf\u6bb5\u6811\u957f\u5565\u6837\n\n![](https://bkimg.cdn.bcebos.com/pic/0e2442a7d933c895d47476f7db1373f082020037?x-bce-process=image/crop,x_120,y_37,w_1504,h_992/watermark,g_7,image_d2F0ZXIvYmFpa2UxODA=,xp_5,yp_5)\n\n\uff08\u6ce8\uff1a\u56fe\u7247\u6765\u81ea\u767e\u5ea6\u767e\u79d1\uff09\n\n\u6700\u4e0b\u9762\u4e00\u5c42\u662f\u6211\u4eec\u8981\u8bfb\u5165\u7684\u6570\u7ec4a[i]\u3002\n\n\u6211\u4eec\u4ece\u9876\u7aef\u5f00\u59cb\u5efa\u6811\uff0c\u6839\u636e\u4e8c\u53c9\u6811\u7684\u6027\u8d28\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u4e00\u68f5\u6811\u7684\u5de6\u513f\u5b50\u7684\u5e8f\u53f7\u4e3a\u7236\u4eb2\u7684\u5e8f\u53f7\u4e58\u4e8c\uff0c\u53f3\u513f\u5b50\u4e3a\u4e58\u4e8c\u52a0\u4e00\u3002\n\n\u6211\u4eec\u4e00\u76f4\u5f80\u4e0b\u9012\u63a8\uff0c\u77e5\u9053\u5de6\u7aef\u70b9\u7b49\u4e8e\u53f3\u7aef\u70b9\uff0c\u53ca\u4e00\u4e2a\u533a\u95f4\u53ea\u5305\u542b\u4e00\u4e2a\u6570\u3002\u53ca\u641c\u5230\u6700\u540e\u4e00\u5c42\uff0c\u6211\u4eec\u4fbf\u5c06a\u6570\u7ec4\u7684\u53ea\u8d4b\u7ed9\u7ebf\u6bb5\u6811\uff0c\u5f53\u56de\u5230\u7236\u8282\u70b9\u662f\u5728\u6839\u636e\u9700\u8981\u5224\u65ad\u3002\n\n\u4f8b\u5982\u8fd9\u9053\u9898\u8981\u6c42\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u4f7f\u7236\u4eb2\u8282\u70b9\u53d6\u5b57\u8282\u70b9\u7684\u6700\u5c0f\u503c\uff08\u5982\u679c\u6c42\u548c\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u503c\u52a0\u8d77\u6765\uff09\u3002\n\n\u5efa\u6811\u4ee3\u7801\uff1a\n\n```\nvoid build(int k,int l,int r)//k\u4e3a\u7ed3\u70b9\u7f16\u53f7\uff0cl\u4e3a\u533a\u95f4\u7684\u5de6\u7aef\uff0cr\u4e3a\u53f3\u7aef\n{\n\tlazy[k]=0;\n\tif(l==r)\n\t{\n\t\tsum[k]=a[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(k*2,l,mid);\n\tbuild(k*2+1,mid+1,r);\n\tsum[k]=min(sum[k*2],sum[k*2+1]);\n}\n```\n\n2. \u52a0\u51cf\u6807\u8bb0\uff1a\n\n\u4e00\u822c\u6765\u8bf4\u52a0\u51cf\u5c31\u4e00\u76f4\u641c\uff0c\u5c06\u6240\u6709\u70b9\u90fd\u6539\u4e00\u904d\u3002\u7136\u800c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5341\u5206\u9ad8\uff0c\u5341\u5206\u5bb9\u6613\u8d85\u65f6\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5f15\u5165\u4e86\u61d2\u60f0\u6807\u8bb0\uff0clazy\u3002\n\nlazy\u5c31\u662f\u5c06\u6211\u4eec\u8981\u66f4\u6539\u7684\u53ea\u5b58\u50a8\u8d77\u6765\uff0c\u4e0d\u5411\u4e0b\u4f20\uff0c\u7b49\u5230\u4ec0\u4e48\u65f6\u5019\u8981\u6c42\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\u65f6\uff0c\u518d\u5c06\u503c\u66f4\u6539\u3002\n\n\u4ee3\u7801\uff1a\n\n```\nvoid pushdown(int k)\n{\n\tlazy[k*2]+=lazy[k];//\u5c06lazy\u4f20\u7ed9\u5de6\u513f\u5b50\n\tlazy[k*2+1]+=lazy[k];//\u5c06lazy\u4f20\u7ed9\u53f3\u513f\u5b50\n\tsum[k*2]+=lazy[k];//\u5de6\u513f\u5b50\u52a0\u4e0alazy\n\tsum[k*2+1]+=lazy[k];//\u53f3\u513f\u5b50\u52a0\u4e0alazy\n\tlazy[k]=0;//\u5c06\u7236\u4eb2\u8282\u70b9\u7684lazy\u6e05\u96f6\n}\n\n\nvoid gx(int L,int R,int e,int l,int r,int k)\n{\n\tif(L<=l&&R>=r)//\u5982\u679c\u5f53\u524d\u67e5\u8be2\u7684\u533a\u95f4\u5b8c\u5168\u5305\u542b\u5728\u5185\n\t{\n\t\tlazy[k]+=e;//lazy\u8bb0\u5f55\n\t\tsum[k]+=e;//\u5f53\u524d\u8282\u70b9\u52a0e\n\t\treturn ; \n\t}\n\tpushdown(k);//\u5c06lazy\u4f20\u7ed9\u5b50\u8282\u70b9\n\tint mid=(l+r)/2;\n\tif(L<=mid)//\u5982\u679c\u5de6\u8282\u70b9\u6709\u8981\u67e5\u8be2\u7684\u503c\n\t{\n\t\tgx(L,R,e,l,mid,k*2);//\u67e5\u8be2\u5de6\u8fb9\n\t}\n\tif(mid<R)//\u5982\u679c\u53f3\u8282\u70b9\u6709\u8981\u67e5\u8be2\u7684\u503c\n\t{\n\t\tgx(L,R,e,mid+1,r,k*2+1);//\u67e5\u8be2\u53f3\u8fb9\u7684\u503c\n\t}\n\tsum[k]=min(sum[k*2],sum[k*2+1]);\n}\n```\n2. \u6700\u5c0f\u503c\u67e5\u8be2\uff1a\n```\nlong long qh(long k,int l,int r,int L,int R)//\u6ce8\u610f\uff0c\u672c\u4ee3\u7801\u4e2dsum\u6c42\u7684\u662f\u6700\u5c0f\u503c\n{\n\tif(L<=l&&R>=r)//\u5982\u679c\u5305\u542b\u5728\u5185\uff0c\u76f4\u63a5\u8fd4\u56de\u6700\u5c0f\u503c\n\t{\n\t\treturn sum[k];\n\t}\n\telse \n\t{\n\t\tpushdown(k);//\u66f4\u65b0\u5b50\u8282\u70b9\uff0c\u5c06lazy\u4e0b\u4f20\n\t\tlong long re=2147483647485;\n\t\tint mid=(l+r)/2;\n\t\tif(L<=mid)//\u5982\u679c\u5728\u5de6\u534a\u53ea\n\t\tre=min(re,qh(k*2,l,mid,L,R));\n\t\tif(R>mid)//\u5982\u679c\u5728\u53f3\u534a\u53ea\n\t\tre=min(re,qh(k*2+1,mid+1,r,L,R));\n\t\treturn re;\n\t}\n}\n```\n\n\u6709\u5173\u7ebf\u6bb5\u6811\u5176\u4ed6\u64cd\u4f5c\uff0c[\u770b\u8fd9\u7bc7\u6587\u7ae0](https://www.luogu.com.cn/blog/Hakurei-Reimu/seg-beats)\n\n\u6e29\u99a8\u63d0\u793a\uff1a\n\n _**long long**_ \n \n \u6700\u540e\u8d34\u4e0a\u4ee3\u7801\uff1a\n \n ```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long a[200005],sum[200005<<2],lazy[200005<<2];\nlong long q,w,e;\nint n,m;\nvoid build(int k,int l,int r)\n{\n\tlazy[k]=0;\n\tif(l==r)\n\t{\n\t\tsum[k]=a[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(k*2,l,mid);\n\tbuild(k*2+1,mid+1,r);\n\tsum[k]=min(sum[k*2],sum[k*2+1]);\n}\nvoid pushdown(int k)\n{\n\tlazy[k*2]+=lazy[k];\n\tlazy[k*2+1]+=lazy[k];\n\tsum[k*2]+=lazy[k];\n\tsum[k*2+1]+=lazy[k];\n\tlazy[k]=0;\n}\nlong long qh(long k,int l,int r,int L,int R)\n{\n\tif(L<=l&&R>=r)\n\t{\n\t\treturn sum[k];\n\t}\n\telse \n\t{\n\t\tpushdown(k);\n\t\tlong long re=2147483647485;\n\t\tint mid=(l+r)/2;\n\t\tif(L<=mid)\n\t\tre=min(re,qh(k*2,l,mid,L,R));\n\t\tif(R>mid)\n\t\tre=min(re,qh(k*2+1,mid+1,r,L,R));\n\t\treturn re;\n\t}\n}\nvoid gx(int L,int R,int e,int l,int r,int k)\n{\n\tif(L<=l&&R>=r)\n\t{\n\t\tlazy[k]+=e;\n\t\tsum[k]+=e;\n\t\treturn ; \n\t}\n\tpushdown(k);\n\tint mid=(l+r)/2;\n\tif(L<=mid)\n\t{\n\t\tgx(L,R,e,l,mid,k*2);\n\t}\n\tif(mid<R)\n\t{\n\t\tgx(L,R,e,mid+1,r,k*2+1);\n\t}\n\tsum[k]=min(sum[k*2],sum[k*2+1]);\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\tcin>>a[i];\n\tbuild(1,1,n);\n\tcin>>m;\n\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>q>>w;\n\t\tchar ew=getchar();\n\t\tif(ew=='\\n')\n\t    {\n\t    \tif(q<=w)\n\t    \tcout<<qh(1,1,n,q+1,w+1)<<endl;\n\t    \telse \n\t    \t{\n\t    \t\tcout<<min(qh(1,1,n,q+1,n),qh(1,1,n,1,w+1))<<endl;\n\t\t\t}\n\t\t}\n        else \n\t\t{\n\t\t\tcin>>e;\n\t\t\tif(q<=w)\n\t\t\t{\n\t\t\t\tgx(q+1,w+1,e,1,n,1);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tgx(q+1,n,e,1,n,1);\n\t\t\t\tgx(1,w+1,e,1,n,1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1585961180,
        "uid": 183473,
        "name": "PrincessYR\u2728\uff5e",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u770b\u5927\u5bb6\u90fd\u7528\u9012\u5f52\u7ebf\u6bb5\u6811\n\n\u6211\u5c31\u6765\u4e00\u53d1$zkw$\u7ebf\u6bb5\u6811\u628a\n\n\u8fd9\u9053\u9898\u8bfb\u5165\u662f\u771f\u7684\u6076\u5fc3\uff0c~~\u5361\u4e86\u6211\u534a\u5929~~\n\n[\u5e7f\u544a](https://www.avg.cx)\n\n\n$zkw$\u662f\u771f\u7684\u5feb\uff0c\u9664\u4e86\u699c\u4e00\u5927\u4f6c\u90a3\u4e2a\u53ef\u80fd\u6709$Bug$\u5916\uff0c~~\u5e94\u8be5\u662f\u7b2c\u4e8c\u5feb\u4e86\u5427~~\n\n\n------------\n\u5229\u7528\u5dee\u5206\u7684\u601d\u60f3\u6765\u7ef4\u62a4\uff1a\n\n\u73b0\u5728\uff0c\u6211\u4eec\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\u5c06\u4e0d\u518d\u5b58\u5bf9\u5e94\u533a\u95f4\u7684\u5173\u952e\u503c\u4e86\u3002\u6211\u4eec\u9700\u8981\u7528$zkw$\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u539f\u5173\u952e\u503c\u7684\u5dee\u5206\u503c\uff0c\u82e5\u539f\u6765\u7684$a[i]$\u4ee3\u8868\u8282\u70b9i\u6240\u4ee3\u8868\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u5219\u73b0\u5728\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684$a[i]=a[i]-a[i<<1]$\uff0c\u7279\u6b8a\u5730\uff0c$a[1]$\u4ecd\u4ee3\u8868\u6574\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\n\n\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a$a[i]$\u4ee3\u8868i\u8282\u70b9\u6240\u5728\u533a\u95f4\u7684\u6700\u5927\u503c\u6bd4\u5176\u7236\u4eb2\u8282\u70b9\u6240\u5728\u533a\u95f4\u6700\u5927\u503c\u5927\u591a\u5c11(\u53ef\u80fd\u8d1f\u6570)\u3002\n\n\u6240\u4ee5\u5269\u4e0b\u7684\u76f4\u63a5\u4e0a\u5446\u7801\u628a\n\n```\n\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\n#define LL long long \n#define rg register\n\nusing namespace std;\n\ntemplate<class T>\ninline void read(T &o) {\n\t\to=0;\n\t\tint w=1;\n\t\tchar c=getchar();\n\t\twhile(c<'0'||c>'9') {\n\t\t\tif(c=='-')w*=-1;\n\t\t\tc=getchar();\n\t\t}\n\t\twhile(c>='0'&&c<='9') {\n\t\t\to=(o<<3)+(o<<1)+(c^48);c=getchar();\n\t\t}\n\t\to*=w;\n\t}\n\n\nconst int MAXN=550000;\n\nint n,m,l,r,k;\n\nstruct SegTree\n{\n    LL tree[MAXN];\n    int N;\n\n    inline void Built()\n    {\n    \tN=1;\n        memset(tree,0,sizeof tree);\n        for(;N<=n+1;N<<=1);\n        for(rg int i=N+1;i<=N+n;i++)\n            read(tree[i]);\n        for(rg int i=N-1;i>=1;i--)\n            tree[i]=min(tree[i<<1],tree[i<<1|1]);\n        for(rg int i=n+N;i>=1;i--)\n            tree[i]=tree[i]-tree[i>>1];\n    }\n\n    inline void Update(int l,int r,int val)\n    {\n        LL tmp;\n        for(l+=N-1,r+=N+1;l^r^1;l>>=1,r>>=1)\n        {\n            if(~l&1)\n                tree[l^1]+=val;\n            if(r&1)\n                tree[r^1]+=val;\n\n            tmp=min(tree[l],tree[l^1]);\n            tree[l]-=tmp;\n            tree[l^1]-=tmp;\n            tree[l>>1]+=tmp;\n\n            tmp=min(tree[r],tree[r^1]);\n            tree[r]-=tmp;\n            tree[r^1]-=tmp;\n            tree[r>>1]+=tmp;\n        }\n        for(;l!=1;l>>=1)\n        {\n            tmp=min(tree[l],tree[l^1]);\n            tree[l]-=tmp;\n            tree[l^1]-=tmp;\n            tree[l>>1]+=tmp;\n        }\n    }\n\n    inline LL query(int l,int r)\n    {\n        LL lnum=0,rnum=0;\n        l+=N,r+=N;\n        if(l!=r)\n        {\n            for(;l^r^1;l>>=1,r>>=1)\n            {\n                lnum+=tree[l],rnum+=tree[r];\n                if(~l&1)\n                    lnum=min(lnum,tree[l^1]);\n                if(r&1)\n                    rnum=min(rnum,tree[r^1]);\n            }\n        }\n        LL ans=min(lnum+tree[l],rnum+tree[r]);\n        while(l>1)\n            ans+=tree[l>>=1];\n        return ans;\n    }\n}a;\n\n//char str;\n\nint main()\n{\n    read(n);\n    a.Built();\n    read(m);\n    while(m--)\n    {\n//        gets(str);\n      \tscanf(\"%d%d\",&l,&r);\n      \tchar str=getchar();\n        if(str=='\\n')\n        {\n\t\t\tif(l>r)\n                printf(\"%lld\\n\",min(a.query(l+1,n),a.query(1,r+1)));\n            else\n                printf(\"%lld\\n\",a.query(l+1,r+1));\n        }\n        else\n        {\n            read(k);\n            if(l>r)\n            {\n\t\t\t\ta.Update(l+1,n,k);\n\t\t\t\ta.Update(1,r+1,k);\n\t\t\t}\t\n            else\n                a.Update(l+1,r+1,k);   \n        }\n    }\n}",
        "postTime": 1571989973,
        "uid": 48439,
        "name": "YuRuiH_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u6700\u5c0f\u503c\u80af\u5b9a\u7528\u7ebf\u6bb5\u6811\u505a\u3002\n\n\u7ebf\u6bb5\u6811\u90e8\u5206\u548c\u677f\u5b50\u6ca1\u4ec0\u4e48\u533a\u522b\uff0cmina\u8bb0\u5f55\u6700\u5c0f\u503c\uff0c\u4e0a\u79fb\u6539\u6210\u53d6\u6700\u5c0f\u503c\uff0c\u67e5\u8be2\u53d6\u5de6\u53f3\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u8fd8\u6709\u5c31\u662f\u7834\u73af\u4e3a\u94fe\uff0c\u67e5\u8be2\u3001\u4fee\u6539\u662f\u5224\u65ad\u4e00\u4e0b\u533a\u95f4\u662f\u5426\u5728\u4e24\u8fb9\uff0c\u4e0d\u662f\u5c31\u76f4\u63a5\u4fee\u6539\uff0c\u662f\u5219\u4fee\u6539\u4e24\u6b21\u3002\n\n\u8f93\u5165\u5199\u4e00\u4e2a\u5feb\u8bfb\uff0c\u987a\u4fbf\u770b\u63a5\u4e0b\u6765\u662f\u7a7a\u683c\u8fd8\u662f\u6362\u884c\uff0c\u4ee5\u6b64\u5224\u65ad\u64cd\u4f5c\u7c7b\u578b\u3002\n\n\u8d34\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\n\ntypedef long long ll;//\u5f00long long\nconst int MAXN=200005;\nstruct tree{\n\tll left,right;\n\tll mina,lazy;\n}t[MAXN<<2];//\u6570\u7ec4\u5f004\u500d\nll a[MAXN],n,m;\nbool s;\n\nll read(){\n\tll res=0,x=1;\n\tchar c;\n\tc=getchar();\n\twhile(c>'9'||c<'0'){\n\t\tif(c=='-'){\n\t\t\tx=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0'){\n\t\tres=res*10+c-'0';\n\t\tc=getchar();\n\t}\n\tif(c==' '){\n\t\ts=1;\n\t}//\u5224\u7a7a\u683c\n\telse{\n\t\ts=0;\n\t}//\u5224\u6362\u884c\n\treturn res*x;\n}//\u5feb\u8bfb\n\nvoid buildtree(ll id,ll l,ll r){\n\tt[id].left=l;t[id].right=r;\n\tt[id].lazy=0;\n\tif(l==r){\n\t\tt[id].mina=a[r];\n\t\treturn;\n\t}//\u5224\u65ad\u53f6\u5b50\u7ed3\u70b9\n\tll mid=(l+r)>>1;\n\tbuildtree(id<<1,l,mid);\n\tbuildtree(id<<1|1,mid+1,r);\n\tt[id].mina=min(t[id<<1].mina,t[id<<1|1].mina);//\u4e0a\u79fb\n}\u5efa\u6811\n\nvoid change(ll id,ll l,ll r,ll c){\n\tif(t[id].left==l&&t[id].right==r){\n\t\tt[id].lazy+=c;\n\t\treturn;\n\t}//\u5224\u65ad\u76ee\u6807\u548c\u7ed3\u70b9\u662f\u5426\u5bf9\u5e94\n\tif(t[id].lazy){\n\t\tt[id<<1].lazy+=t[id].lazy;\n\t\tt[id<<1|1].lazy+=t[id].lazy;\n\t\tt[id].lazy=0;\n\t}//\u4e0b\u79fb\n\tif(r<=t[id<<1].right){\n\t\tchange(id<<1,l,r,c);\n\t}//\u53ea\u6709\u5de6\u534a\u90e8\u5206\n\telse if(l>=t[id<<1|1].left){\n\t    change(id<<1|1,l,r,c);\n\t}//\u53ea\u6709\u53f3\u534a\u90e8\u5206\n\telse{\n\t\tchange(id<<1,l,t[id<<1].right,c);\n\t\tchange(id<<1|1,t[id<<1|1].left,r,c);\n\t}//\u5de6\u53f3\u90fd\u6709\n\tt[id].mina=min(t[id<<1].mina+t[id<<1].lazy,t[id<<1|1].mina+t[id<<1|1].lazy);//\u4e0a\u79fb\n}\n\nll query(ll id,ll l,ll r){\n\tif(t[id].left==l&&t[id].right==r){\n\t\treturn t[id].mina+t[id].lazy;\n\t}//\u5224\u65ad\u76ee\u6807\u548c\u7ed3\u70b9\u662f\u5426\u5bf9\u5e94\n\tif(t[id].lazy){\n\t\tt[id].mina+=t[id].lazy;\n        //\u6b64\u5904\u6ce8\u610fchange\u4e2d\u7531\u4e8e\u6709\u4e0a\u79fb\u64cd\u4f5c\u6ca1\u6709\u52a0\u8fd9\u4e00\u884c\uff0c\u800c\u6b64\u5904\u6ca1\u6709\uff0c\u6240\u4ee5\u8981\u52a0\n\t\tt[id<<1].lazy+=t[id].lazy;\n\t\tt[id<<1|1].lazy+=t[id].lazy;\n\t\tt[id].lazy=0;\n\t}//\u4e0b\u79fb\n\tif(r<=t[id<<1].right){\n\t\treturn query(id<<1,l,r);\n\t}//\u53ea\u6709\u5de6\u534a\u90e8\u5206\n\telse if(l>=t[id<<1|1].left){\n\t    return query(id<<1|1,l,r);\n\t}//\u53ea\u6709\u53f3\u534a\u90e8\u5206\n\telse{\n\t\treturn min(query(id<<1,l,t[id<<1].right),query(id<<1|1,t[id<<1|1].left,r));\n\t}//\u5de6\u53f3\u90fd\u6709\n}\n\nint main(){\n\tn=read();\n\tfor(ll i=1;i<=n;i++){\n\t\ta[i]=read();\n\t}\n\tbuildtree(1,1,n);\n\tm=read();\n\twhile(m--){\n\t\tll l,r,v;\n\t\tl=read();r=read();\n\t\tl++;r++;\n\t\tif(s==1){\n\t\t\tv=read();\n\t\t\tif(r<l){\n\t\t\t\tchange(1,l,n,v);\n\t\t\t\tchange(1,1,r,v);\n\t\t\t}//\u4e24\u6bb5\n\t\t\telse{\n\t\t\t\tchange(1,l,r,v);\n\t\t\t}//\u4e00\u6bb5\n\t\t}\n\t\telse{\n\t\t\tif(r<l){\n\t\t\t\tprintf(\"%lld\\n\",min(query(1,l,n),query(1,1,r)));\n\t\t\t}\u4e24\u6bb5\n\t\t\telse{\n\t\t\t\tprintf(\"%lld\\n\",query(1,l,r));\n\t\t\t}\u4e00\u6bb5\n\t\t}\n\t}\n\treturn 10211314334486875731;\n}\n```\n",
        "postTime": 1565617783,
        "uid": 89929,
        "name": "wanghanjun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    },
    {
        "content": "\u6211jio\u697c\u4e0adalao\u8bf4\u7684\u6ca1\u9519\uff0c\u8fd9\u5c31\u662f\u4e00\u9053\n#### \u7ebf\u6bb5\u6811\u88f8\u9898\n\n\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u6a21\u677f\u4e00\u7684\n\n~~\u6211\u592a\u61d2\u4e86~~\n\n### so\u6211\u4e0d\u60f3\u591a\u89e3\u91ca\u4e86\u653e\u4e00\u4e0b\u4ee3\u7801\u4f9b\u53c2\u8003\n\n#### \u6ce8\u610f\uff1a\u6211\u7684\u64cd\u4f5c \u90fd\u662f [l ,  r) \u7684\n\n```cpp\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX_N = 2e5 + 233;\nconst ll INF = 0x3f3f3f3f3f3f3f3f;\n\nll n, m;\nll a[MAX_N];\n\nstruct rmq {\n    // dat1 \u662f\u61d2\u6807\n\tll dat0[MAX_N * 4], dat1[MAX_N * 4];\n    \n    // \u5efa\u6811\n\tvoid build(int k, int l, int r) {\n\t\tif (r - l == 1) {\n\t\t\tdat0[k] = a[l];\n\t\t\treturn ;\n\t\t}\n\t\tbuild(k * 2 + 1, l, (l + r) / 2);\n\t\tbuild(k * 2 + 2, (l + r) / 2, r);\n\t\tdat0[k] = min(dat0[k * 2 + 1], dat0[k * 2 + 2]);\n\t}\n\t// \u67e5\u8be2 [a, b) \u4e4b\u95f4\u7684\u6700\u5c0f\u503c\n\tll query(int a, int b, int k, int l, int r) {\n\t\tif (b <= l || r <= a) { // [l, r) \u4e0e [a, b) \u6ca1\u6709\u76f8\u4ea4\u7684\u90e8\u5206\n\t\t\treturn INF;\n\t\t} else if (a <= l && r <= b) {\n\t\t// [a, b) \u5b8c\u5168\u5305\u542b [l, r)\n\t\t\treturn dat0[k] + dat1[k];\n\t\t} else {\n\t\t// [a, b) \u548c [l, r) \u6709\u4ea4\u96c6\u5c31\u5206\u6cbb\u67e5\u8be2\u5de6\u53f3\u513f\u5b50\n\t\t\tint ma = query(a, b, k * 2 + 1, l, (l + r) / 2);\n\t\t\tint mb = query(a, b, k * 2 + 2, (l + r) / 2, r);\n\t\t\treturn min(ma, mb) + dat1[k];\n\t\t}\n\t}\n\t// \u5bf9 [a, b) \u52a0 x\n\tvoid add(int a, int b, int k, ll x, int l, int r) {\n\t\tif (a <= l && r <= b) { // [a, b) \u5b8c\u5168\u5305\u542b [l, r)\n\t\t\tdat1[k] += x;\n\t\t\treturn ;\n\t\t} else if (b <= l || r <= a) {\n\t\t\treturn ;\n\t\t} else {\n\t\t\tadd(a, b, k * 2 + 1, x, l, (l + r) / 2);\n\t\t\tadd(a, b, k * 2 + 2, x, (l + r) / 2, r);\n\t\t}\n\t\tdat0[k] = min(dat0[k * 2 + 1] + dat1[k * 2 + 1], dat0[k * 2 + 2] + dat1[k * 2 + 2]);\n\t}\t\n} tree;\n\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\ttree.build(0, 0, n);\n\tcin >> m;\n\tll l, r, x, ans;\n\tchar ch;\n\tfor (int i = 0; i < m; i++) {\n\t\tcin >> l >> r;\n\t\tch = getchar();\n\t\tif (ch == '\\n') {\n\t\t\tif (l <= r) {\n\t\t\t\tans = tree.query(l, r + 1, 0, 0, n);\n\t\t\t} else {\n\t\t\t\tans = min(tree.query(0, r + 1, 0, 0, n), tree.query(l, n, 0, 0, n));\n\t\t\t}\n\t\t\tcout << ans << endl;\n\t\t} else {\n\t\t\tcin >> x;\n\t\t\tif (l <= r) {\n\t\t\t\ttree.add(l, r + 1, 0, x, 0, n);\n\t\t\t} else {\n\t\t\t\ttree.add(l, n, 0, x, 0, n);\n\t\t\t\ttree.add(0, r + 1, 0, x, 0, n);\n\t\t\t}\n\t\t}\n\t} \n\treturn 0;\n} \n```\n\n\u521a\u5f00\u59cb\u63d0\u4ea4\u603b\u662fwa\u4e86\u7b2c23\u4e2a\u70b9\uff0c\u5c31\u662f\u5fd8\u52a0\u4e86\u4e2a long long\n\n\u8fd9\u79cd\u7ec6\u8282\u8fd8\u662f\u8981\u6ce8\u610f\u4e00\u4e0b",
        "postTime": 1551851787,
        "uid": 149545,
        "name": "NotaKoala",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF52C \u3010Circular RMQ\u3011"
    }
]