[
    {
        "content": "\u4e00\u6b21\u5728\u6821\u5185\u6a21\u62df\u8d5b\u4e2d\u505a\u8fc7\u52a0\u5f3a\u7248\uff0c\u4e8e\u662f\u4e4e\u6765\u8865\u9898\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u4e00\u773c\u770b\u51fa\u9898\u76ee\u662f\u4e00\u4e2a\u88f8\u7684\u659c45\u5ea6\u6b63\u65b9\u5f62\u4ea4\u96c6\u6700\u5927\u503c\uff0c\u53ef\u662f\u6211\u4eec\u5e76\u4e0d\u4f1a\u7ef4\u62a4\uff0c\u4e8e\u662f\u6211\u8003\u573a\u4e0a\u5c31\u6302\u90a3\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u66fc\u54c8\u987f\u8ddd\u79bb\u8f6c\u6362\u4e3a\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff0c\u53ea\u8981\u5c06 $p(x,y)$ \u53d8\u4e3a $q(x - y,x + y)$ \u5c31\u53ef\u4ee5\u8ba9\u90a3\u4e2a\u659c\u7684\u6b63\u65b9\u5f62\u53d8\u4e3a\u6b63\u8fc7\u6765\u8fb9\u957f\u4e3a $2r$ \u7684\u6b63\u65b9\u5f62\u3002\n\n\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u77e5\u9053 $|x_1 - x_2| + |y_1 - y_2|$ \u662f\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u800c $\\max(|x_1 - x_2|, |y_1 - y_2|)$ \u662f\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u7b49\u8170\u76f4\u89d2\u4e09\u89d2\u5f62\u6784\u9020 $K$ \u578b\u5168\u7b49\u914d\u5408\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff0c\u6765\u89e3\u51b3\u65cb\u8f6c45\u5ea6(\u8bbe\u76f4\u89d2\u9876\u70b9\u5750\u6807\u4e3a $(x, y)$ \uff0c\u5219\u4e0a\u8170\u9876\u70b9\u5750\u6807\u4e3a $(x - y, x + y)$ )\u3002\n\n\u4e8e\u662f\u4e4e\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u626b\u63cf\u7ebf\u677f\u5b50\u4e86\u3002\n\n```cpp\n// Program written by Liu Zhaozhou ~~~\n#include <bits/stdc++.h>\n#include <tr1/unordered_map>\n#define lowbit(x) (x & -x)\n\nusing namespace std;\n\ninline char gc(void) {\n\tstatic char buf[100000], *p1 = buf, *p2 = buf;\n\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;\n}\n\n#define gc() getchar()\n\ntemplate <class T> inline void read(T &x) {\n\tT f = 1; x = 0; static char c = gc();\n\tfor (; !isdigit(c); c = gc()) if (c == '-') f = -f;\n\tfor (; isdigit(c); c = gc()) x = (x << 1) + (x << 3) + (c & 15);\n\tx *= f;\n}\n\ntemplate <class T> inline void write(T x) {\n\tif (x < 0) x = -x, putchar('-');\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + 48);\n}\n\ntemplate <class T> inline void writeln(T x, char c = '\\n') { write(x); putchar(c); }\ntemplate <class T> inline void chkmax(T &x, const T y) { x > y ? x = x : x = y; }\ntemplate <class T> inline void chkmin(T &x, const T y) { x < y ? x = x : x = y; }\n\n#define Ms(arr, opt) memset(arr, opt, sizeof(arr))\n#define Mp(x, y) make_pair(x, y)\n\ntypedef long long ll;\ntypedef pair <int, int> pii;\n\nconst int Maxn = 3e5 + 5, Maxm = 3e6 + 5;\nint n, d, cnt = 0, ans = 0, b[Maxn]; pii p[Maxn];\nstruct SegmentTree {\n\tint tmx[Maxm << 3], tag[Maxm << 3];\n\tinline void pushup(int pos) { tmx[pos] = max(tmx[pos << 1], tmx[pos << 1 | 1]); }\n\tinline void addtag(int pos, int val) { tmx[pos] += val; tag[pos] += val; }\n\tinline void pushdown(int pos) {\n\t\tif (tag[pos]) {\n\t\t\taddtag(pos << 1, tag[pos]),\n\t\t\taddtag(pos << 1 | 1, tag[pos]);\n\t\t\ttag[pos] = 0;\n\t\t}\n\t}\n\t\n\tinline void modify(int pos, int l, int r, int L, int R, int val) {\n\t\tif (L <= l && R >= r) return addtag(pos, val);\n\t\tint mid = l + r >> 1; pushdown(pos);\n\t\tif (L <= mid) modify(pos << 1, l, mid, L, R, val);\n\t\tif (R > mid) modify(pos << 1 | 1, mid + 1, r, L, R, val);\n\t\tpushup(pos);\n\t}\n} T;\n\nsigned main(void) {\n\tread(n), read(d);\n\tfor (int i = 1, x, y; i <= n; i++) {\n\t\tread(x), read(y);\n\t\tp[i] = Mp(x - y, x + y);\n\t} sort(p + 1, p + n + 1);\n\t\n\tfor (int i = 1, j = 1; i <= n; i++) {\n\t\tT.modify(1, -3e6, 3e6, p[i].second - d, p[i].second + d, 1);\n\t\twhile (j <= n && p[i].first - p[j].first > 2 * d) T.modify(1, -3e6, 3e6, p[j].second - d, p[j].second + d, -1), ++j;\n\t\tchkmax(ans, T.tmx[1]);\n\t} writeln(ans);\n\treturn 0;\n}\n\n/**/\n\n\n\n```\n",
        "postTime": 1601615816,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1184C2 \u3010Heidi and the Turing Test (Medium)\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u534a\u5f84\u4e3a $r$ \u7684\u5706\u4e2d\u6240\u6709\u70b9\u90fd\u5bf9\u8fd9\u4e2a\u5706\u5fc3\u6709 $1$ \u7684\u8d21\u732e\uff1b\u540c\u6837\u5730\uff0c\u4e00\u4e2a\u70b9\u5bf9\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5706\u5fc3\uff0c\u534a\u5f84\u4e3a $r$ \u7684\u5706\u4e2d\u6240\u6709\u7684\u5706\u5fc3\u90fd\u6709 $1$ \u7684\u8d21\u732e\u3002\n\n\u8003\u8651\u66fc\u54c8\u987f\u8ddd\u79bb\u8f6c\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff0c\u8fd9\u6837\u4e4b\u540e\u4e00\u4e2a\u534a\u5f84\u4e3a $r$ \u7684\u201c\u5706\u201d\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u8fb9\u957f $2r+1$ \u7684\u6b63\u65b9\u5f62\u3002\n\n\u628a\u70b9\u6309\u6a2a\u5750\u6807\u5347\u5e8f\u6392\u5e8f\uff0c\u679a\u4e3e\u5706\u5fc3\u7684\u6a2a\u5750\u6807\uff0c\u5bf9\u7eb5\u5750\u6807\u5efa\u7ebf\u6bb5\u6811\u5373\u53ef\u52a8\u6001\u7ef4\u62a4\u8fd9\u65f6\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\n\n```c++\n// 2020.09.29\n// Code by LTb\n// #pragma GCC optimize(2)\n#include <bits/stdc++.h>\nusing namespace std;\n// #define int long long\n#define fi first\n#define se second\ninline int read(){\n    int x=0,f=1;\n    char ch;\n    while(ch<'0'||ch>'9')  {if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return f*x;\n}\n\nconst int MAXN=300005;\nconst int MAX=2e6+5000;\nint n,rad;\nint ans=1;\npair<int,int> a[MAXN];\n\nstruct Segment_Tree{\n\tconst int INF=0x3f3f3f3f;\n\tstruct node{\n\t\tint l,r;\n\t\tint add,mx;\n\t}st[MAX*8];\n\t\n\tvoid build(int p,int l,int r){\n\t\tst[p].l=l;st[p].r=r;\n\t\tif (l==r){\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tbuild(p<<1,l,mid);\n\t\tbuild(p<<1|1,mid+1,r);\n\t\tst[p].mx=max(st[p<<1].mx,st[p<<1|1].mx);\n\t}\n\n\tvoid spread(int p){\n\t\tst[p<<1].add+=st[p].add;\n\t\tst[p<<1|1].add+=st[p].add;\n\t\tst[p<<1].mx+=st[p].add;\n\t\tst[p<<1|1].mx+=st[p].add;\n\t\tst[p].add=0;\n\t}\n\n\tvoid change(int p,int l,int r,int c){\n\t\tif (l<=st[p].l&&st[p].r<=r){\n\t\t\tst[p].add+=c;\n\t\t\tst[p].mx+=c;\n\t\t\treturn;\n\t\t}\n\t\tspread(p);\n\t\tint mid=st[p].l+st[p].r>>1;\n\t\tif (l<=mid) change(p<<1,l,r,c);\n\t\tif (r>mid) change(p<<1|1,l,r,c);\n\t\tst[p].mx=max(st[p<<1].mx,st[p<<1|1].mx);\n\t}\n\n\tint query_max(int p,int l,int r){\n\t\tif (l<=st[p].l && st[p].r<=r)\n\t\t\treturn st[p].mx;\n\t\tspread(p);\n\t\tint mid=st[p].l+st[p].r>>1,ans=-INF;\n\t\tif (l<=mid) ans=query_max(p<<1,l,r);\n\t\tif (r>mid) ans=max(ans,query_max(p<<1|1,l,r));\n\t\treturn ans;\n\t}\n}seg;\n\nsigned main()\n\n{\n\tn=read();rad=read();\n\tint mx=0;\n\tfor (int i=1;i<=n;i++){\n\t\tint x=read(),y=read();\n\t\tint tmp=x;\n\t\ta[i].fi=x+y+MAX;\n\t\ta[i].se=x-y+MAX;\n\t\tmx=max(mx,a[i].fi);\n\t}\n\n\tsort(a+1,a+1+n);\n\n\tseg.build(1,1,MAX*2);\n\tint l=1,r=1;\n\n\tfor (int i=a[1].fi;i<=mx;i++){\n\t\twhile (r<=n && a[r].fi<=i+rad){\n\t\t\tseg.change(1,a[r].se-rad,a[r].se+rad,1);\n\t\t\tr++;\n\t\t}\n\t\twhile (l<=n && a[l].fi<i-rad){\n\t\t\tseg.change(1,a[l].se-rad,a[l].se+rad,-1);\n\t\t\tl++;\n\t\t}\n\n\t\tans=max(ans,seg.query_max(1,1,MAX*2));\n\t}\n\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\u5c0f\u58f0bb\uff1a\u503c\u57df\u5f00\u5230 $10^9$ \u7684\u8bdd\u5176\u5b9e\u4e5f\u53ef\u505a\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u6a2a\u5750\u6807\u4e3a $x$ \u7684\u70b9\uff0c\u5b83\u5bf9\u7ebf\u6bb5\u6811\u505a\u7684\u4fee\u6539\u53ea\u6709\u53ef\u80fd\u5728 $x-r,x+r+1$ \u8fd9\u4e24\u4e2a\u5730\u65b9\u53d1\u751f\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u4e9b\u70b9\uff0c\u539f\u65b9\u6cd5\u4e2d\u201c\u679a\u4e3e\u5706\u5fc3\u6a2a\u5750\u6807\u201d\u8fd9\u4e00\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u964d\u81f3 $2n$\u3002\u7ebf\u6bb5\u6811\u52a0\u4e0a\u52a8\u6001\u5f00\u70b9\uff0c\u603b\u590d\u6742\u5ea6\u5373\u53ef\u4f18\u5316\u5230 $\\mathcal{O(n \\log W)}$\uff0c\u5176\u4e2d $\\mathcal{W}$ \u4e3a\u503c\u57df\u3002",
        "postTime": 1601471041,
        "uid": 48981,
        "name": "LTb_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1184C2 \u3010Heidi and the Turing Test (Medium)\u3011"
    }
]