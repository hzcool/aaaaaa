[
    {
        "content": "## \u7ffb\u8bd1\n\n\u7ed9\u5b9a\u4e00\u6761\u6709 $2n$ \u4e2a\u70b9\u7684\u76f4\u7ebf\uff0c\u5c06\u4e0a\u9762\u7684\u70b9\u4e24\u4e24\u914d\u5bf9\u5f62\u6210\u5706\u5f27\uff0c\u8981\u6c42\u4efb\u610f\u4e0d\u7b49\u5927\u7684\u5706\u5f27\u5fc5\u7136\u4e3a\u5305\u542b\u5173\u7cfb\u3002\u95ee\u5408\u6cd5\u7684\u72b6\u6001\u603b\u6570\u6a21 $998244353$\u3002\n\n$n\\leq 10^6$\u3002\n\n## \u9898\u89e3\n\n\u8003\u8651\u5982\u4f55\u8ba9\u4e0d\u7b49\u5927\u7684\u5706\u5f27\u90fd\u5305\u542b\uff0c\u53d1\u73b0\u5fc5\u7136\u662f\u8fd9\u6837\u7684\uff1a   \n![](https://cdn.luogu.com.cn/upload/image_hosting/jc19h19i.png)\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u7ba1\u8fd9\u4e2a\u5f27\u957f\u5ea6\u4e3a\u591a\u5c11\uff0c\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u65b9\u6cd5\u4f7f\u5f97\u4e2d\u95f4\u7a7a\u51fa\u7a7a\u95f4\u3002\n\n\u4f46\u8fd9\u6837\u4e0d\u5bf9\u554a\uff0c\u624b\u73a9\u6837\u4f8b\u53d1\u73b0\u8fd8\u53ef\u4ee5\u8fd9\u6837\uff1a   \n![](https://cdn.luogu.com.cn/upload/image_hosting/fcphsst4.png)\n\n\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u56e0\u4e3a\u5206\u6210\u4e86\u5f88\u591a\u5757\uff0c\u6240\u4ee5\u6839\u636e\u9898\u610f\uff0c\u5185\u90e8\u4e0d\u80fd\u518d\u653e\u4e1c\u897f\u4e86\uff0c\u8981\u586b\u6ee1\u3002\n\n\u6240\u4ee5\u4e00\u4e2a\u5757\u7684\u5927\u5c0f\u4e00\u5b9a\u6574\u9664 $n$\u3002\n\n\u8bf4\u4e86\u600e\u4e48\u591a\uff0c\u518d\u60f3\u60f3\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\u95f4\u5269\u4e0b\u7684\u4e1c\u897f\u597d\u50cf\u4e0e\u6211\u65e0\u5173\uff08\u957f\u5ea6\u4e00\u5b9a\u5c0f\u4e8e\u6211\uff09\uff0c\u4f3c\u4e4e\u6ca1\u6709\u540e\u6548\u6027\uff1f\u8003\u8651 Dp\u3002\n\n\u8bbe $f_i$ \u8868\u793a $2i$ \u4e2a\u70b9\u7684\u7b54\u6848\uff0c\u90a3\u4e48\uff1a\n\n$$f_i=\\sigma_i+\\sum^{i-1}_{j=1}f_j$$\n\n\u5176\u4e2d\uff0c$\\sigma_i$ \u8868\u793a $i$ \u7684\u7ea6\u6570\u4e2a\u6570\uff0c\u521d\u59cb $f_1=1$\u3002\n\n\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log n)$ \u6216 $\\mathcal{O}(n)$\u3002\n\n\u70b9\u4e2a\u8d5e\u5427\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n//\u4f1f\u5927\u7684\u5bfc\u5e08\uff0c\u4f1f\u5927\u7684\u9886\u8896\uff0c\u4f1f\u5927\u7684\u7edf\u5e05\uff0c\u4f1f\u5927\u7684\u8235\u624b\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nchar __buf[1<<20],*__p1,*__p2;\n#define getchar() (__p1==__p2?(__p2=__buf+fread(__p1=__buf,1,1<<20,stdin),__p1==__p2?EOF:*__p1++):*__p1++)\nint read() {\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nconst int maxn = 1e6+10, mod = 998244353;\nint n,f[maxn];\nsigned main() {\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i;j<=n;j+=i) ++f[j];\n\tf[1]=1;for(int i=2;i<=n;i++) f[i]=(1ll*(f[i-1]<<1)+f[i])%mod;\n\tcout<<(f[n]-f[n-1]+mod)%mod<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1621994947,
        "uid": 106182,
        "name": "KaisuoShutong",
        "ccfLevel": 0,
        "title": "CF1528B Kavi on Pairing Duty \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u6761\u6709 $2n$ \u4e2a\u70b9\u7684\u76f4\u7ebf\uff0c\u5c06\u4e0a\u9762\u7684\u70b9\u4e24\u4e24\u914d\u5bf9\u5f62\u6210\u5706\u5f27\uff0c\u8981\u6c42\u4efb\u610f\u4e0d\u7b49\u5927\u7684\u5706\u5f27\u5fc5\u7136\u4e3a\u5305\u542b\u5173\u7cfb\uff0c\u6c42\u5408\u6cd5\u7684\u72b6\u6001\u603b\u6570\u3002\n\n### \u601d\u8def\n\n\u8bbe $f_i$ \u8868\u793a $n=i$ \u65f6\u7684\u7b54\u6848\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e $k|i$ \u6211\u4eec\u53ef\u4ee5\u628a $i$ \u4e2a\u5339\u914d\u6bcf $k$ \u4e2a\u5206\u6210\u4e00\u5806\uff0c\u8fd9\u79cd\u60c5\u51b5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $\\sigma_0(i)$\uff0c\u4e0b\u56fe\u662f $i=8,k=4$ \u7684\u6837\u5b50\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gdzyhu16.png)\n\n\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u5148\u5c06 $k$ \u4e2a\u957f $2i-k+1$ \u7684\u5339\u914d\u653e\u5728\u6700\u5916\u9762\uff0c\u4e2d\u95f4\u7684\u90e8\u5206\u5c31\u662f $f_{i-k}$ \u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u8d21\u732e\u662f $\\sum\\limits_{0<k<i}f_{i-k}$ \u4e0b\u56fe\u662f $k=3$ \u7684\u6837\u5b50\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6ablnx24.png)\n\n\u603b\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f $f_i=\\sigma_0(i)+\\sum\\limits_{0<j<i}f_j$\uff0c\u8fb9\u754c $f_1=1$\u3002\n\n[\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/o5mfaml1)",
        "postTime": 1622031464,
        "uid": 176569,
        "name": "iMya_nlgau",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1528B \u3010Kavi on Pairing Duty\u3011"
    },
    {
        "content": "# \u300cCF1528B\u300d Kavi on Pairing Duty\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1528B)\n\n\u6211\u4eec\u5c06\u76f8\u4ea4\u7684\u5706\u5f27\u79f0\u4e3a\u4e00\u7ec4\u3002\u663e\u7136\u53ea\u6709\u4e00\u79cd\u5408\u6cd5\u7684\u76f8\u4ea4\u65b9\u6848\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u4e00\u4e2a\u5408\u6cd5\u7684\u8fde\u63a5\u65b9\u6848\u4e00\u5b9a\u662f\uff1a\u82e5\u5e72\u4e2a\u7ec4\u5c42\u5c42\u5305\u542b\uff0c\u6700\u5185\u5c42\u53ef\u4ee5\u5b58\u5728\u591a\u4e2a\u76f8\u540c\u7684\u7ec4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u6700\u5185\u5c42\u6bcf\u7ec4\u6709 $x$ \u6761\u5706\u5f27\uff0c\u6709 $y$ \u4e2a\u7ec4\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u5c31\u76f8\u5f53\u4e8e\u8fd8\u5269\u4e0b $n-xy$ \u6761\u5706\u5f27\u9700\u8981\u6309\u987a\u5e8f\u653e\u5728\u5916\u9762\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5c06\u5176\u5212\u5206\u6210\u82e5\u5e72\u7ec4\uff0c\u8fd9\u76f8\u5f53\u4e8e\u505a\u4e00\u4e2a\u6709\u987a\u5e8f\u7684\u81ea\u7136\u6570\u62c6\u5206\uff0c\u65b9\u6848\u6570\u4e3a $2^{\\max(n-xy-1,0)}$ \u79cd\uff0c\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u53ef\u4ee5 $O(1)$ \u7b97\u3002\n\n\u603b\u65f6\u95f4\u5373\u4e3a\u679a\u4e3e\u6700\u5185\u5c42\u60c5\u51b5\u7684\u590d\u6742\u5ea6\uff0c\u4e3a $O(n\\log n)$\u3002\n\n```cpp\n/*---Author:HenryHuang---*/\n/*---Never Settle---*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll p=998244353;\nconst ll maxn=1e6+5;\nll ksm(ll a,ll b,ll p){\n\tll ans=1;\n\twhile(b){\n\t\tif(b&1) ans=1ll*ans*a%p;\n\t\tb>>=1,a=1ll*a*a%p;\n\t}\n\treturn ans;\n}\nll pw[maxn];\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tll n; cin>>n;\n\tll ans=0;\n\tpw[0]=1;\n\tfor(ll i=1;i<=n;++i) pw[i]=1ll*pw[i-1]*2%p;\n\tfor(ll k=1;k<=n;++k){\n\t\tfor(ll i=1;i<=n;++i){\n\t\t\tll owo=i*k;\n\t\t\tif(n-owo==0) ans+=1;\n\t\t\telse if(n-owo>0) ans+=pw[n-owo-1];\n\t\t\telse break;\n\t\t\tans%=p;\n\t\t}\n\t}\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1622014845,
        "uid": 43957,
        "name": "HenryHuang",
        "ccfLevel": 9,
        "title": "\u300cCF1528B\u300d Kavi on Pairing Duty"
    },
    {
        "content": "\u6c38\u8fdc\u94ed\u8bb0\u8ba9\u6211\u8eab\u8d25\u540d\u88c2\u5e76\u4e14\u963b\u6b62\u6211\u4e0a\u5927\u5206\u7684\u4e00\u9053\u9898\u3002               \n\n\u9996\u5148\u5f88\u663e\u7136\u7684\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 $DP$ \u5f97\u5230\u7b54\u6848\u3002         \n        \n\u8bbe $DP_i$ \u8868\u793a\u6709 $2i$ \u4e2a\u70b9\u65f6\u7684\u7b54\u6848\u3002        \n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8fde\u63a5\u9996\u5c3e\u70b9\uff0c\u90a3\u4e48\u4e2d\u95f4\u7684\u6240\u6709\u7ebf\u6bb5\u90fd\u88ab\u5305\u542b\u4e86\uff0c\u6b64\u65f6\u5c31\u6709\u4e00\u4e2a $dp_{i - 1}$ \u7684\u8d21\u732e\u3002            \n\n\u8fd9\u4e48\u5904\u7406\u4e00\u6b21\u8fc7\u540e\u6211\u4eec\u5269\u4e0b\u5c31\u53ea\u7528\u8003\u8651\u9996\u5c3e\u4e0d\u8fde\u7684\u60c5\u51b5\uff0c\u5728\u9996\u6ca1\u8fde\u8d85\u8fc7 $n$ \u4e4b\u524d\u7684\u70b9\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u9996\u8fde\u63a5\u7684\u7ebf\u6bb5\u90fd\u4e0d\u80fd\u88ab\u5305\u542b\u4e86\uff0c\u6211\u4eec\u53ea\u80fd\u53bb\u628a\u6240\u6709\u7ebf\u6bb5\u8fde\u4e00\u6837\u957f\uff0c\u5373 $n$ \u5fc5\u987b\u88ab\u7ebf\u6bb5\u957f\u5ea6\u6574\u9664\uff0c\u8fd9\u7c7b\u60c5\u51b5\u7684\u8d21\u732e\u5c31\u662f $n$ \u7684\u56e0\u5b50\u4e2a\u6570\u9664\u53bb $n$ \u672c\u8eab\u3002           \n\n\u5f53\u9996\u8fde\u63a5\u8d85\u8fc7 $n$ \u4ee5\u540e\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd8\u662f\u5148\u628a\u524d\u9762\u7684\u70b9\u90fd\u5f80\u540e\u9762\u8fde\u7ed9\u8fde\u6210\u957f\u5ea6\u4e00\u6837\u7684\u70b9\u76f4\u5230\u8fde\u4e0d\u52a8\u4e3a\u6b62\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5269\u4e0b\u6ca1\u6709\u88ab\u8fde\u63a5\u7684\u70b9\u90fd\u88ab\u5305\u542b\u5728\u4e86\u5f53\u524d\u6240\u8fde\u7684\u6240\u6709\u7ebf\u6bb5\u5185\uff0c\u6240\u4ee5\u53ea\u8981\u5185\u90e8\u5408\u6cd5\u5c31\u597d\u4e86\uff08\u8fd9\u91cc\u5efa\u8bae\u81ea\u5df1\u753b\u4e00\u4e0b\u56fe\uff09\u3002\u8fd9\u7c7b\u7b54\u6848\u7684\u8d21\u732e\u662f $dp_1 \\sim dp_{i - 2}$ \u7684\u548c\u3002     \n\n\u8fd9\u91cc\u5f97\u7528\u5230 $O(n \\log n)$ \u7ebf\u6027\u7b5b\uff0c\u56e0\u4e3a\u6253CF\u81ea\u5df1\u6ca1\u6709\u8c03\u51fa\u6765\u2026\u2026\u6240\u4ee5\u7ebf\u6027\u7b5b\u90e8\u5206\u662f\u8d3a\u7684\uff0c\u5927\u5bb6\u5c06\u5c31\u770b\u4e00\u4e0b\u4ee3\u7801\u5427\u3002   \n\n~~\u5176\u5b9e\u6211\u4e2d\u95f4\u6253\u4e86\u8868\u7684\u4f46\u662f\u88ab\u5236\u88c1\u4e86\u3002~~\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\n#define int long long\nconst int max_n = 1e6 + 5;\nconst long long mod = 998244353;\nlong long n,m,dp[1000005],sum[1000005],num[1000005];\nint prime[max_n + 5] = {0};  //\u7d20\u6570\u8868\uff0c\u5b58\u50a8\u627e\u5230\u7684\u7d20\u6570\nint f[max_n + 5] = {0};             //f[i]\u8868\u793a\u6570\u5b57i\u7684\u56e0\u6570\u7684\u4e2a\u6570\nint cnt[max_n + 5] = {0};        //cnt[i]\u8868\u793a\u6570\u5b57i \u6700\u5c0f\u8d28\u56e0\u6570\u7684\u5e42\u6b21\n \nvoid init() {\n    for (int i = 2; i <= max_n; i++) {\n        if (!prime[i]) {                             //\u82e5\u6570\u5b57i\u662f\u7d20\u6570\n            prime[++prime[0]] = i;      //\u5b58\u653e\u5728prime\u6570\u7ec4\u4e2d\n            f[i] = 2;                                     //\u7d20\u6570\u7684\u56e0\u6570\u53ea\u67091\u548c\u672c\u8eab,\u6240\u4ee5f[i] = 2\n            cnt[i] = 1;                                //i = 1 * i\uff0c\u6240\u4ee5\u6700\u5c0f\u8d28\u56e0\u6570\u7684\u5e42\u6b21\u4e3a1\n        }\n         //\u904d\u5386\u4e4b\u524d\u627e\u5230\u7684\u7d20\u6570\uff0c\u82e5prime[j] \u5c0f\u4e8e\u6570\u5b57i\u7684\u6700\u5c0f\u8d28\u56e0\u6570\uff0c\u5219\u6211\u4eec\u6807\u8bb0prime[i * prime[j]] = 1\n        for (int j = 1; j <= prime[0]; j++) { \n            if (i * prime[j] >  max_n) break;  //\u6211\u4eec\u53ea\u8981\u57282\u5230max_n\u8303\u56f4\u5185\u7684\u7d20\u6570\uff0c\u82e5\u8d85\u8fc7max_n\uff0c\u6b64\u65f6\u76f4\u63a5\u8df3\u51fa\n            prime[i * prime[j]] = 1;\n            if (i % prime[j] == 0) {\n                //\u8fd9\u90e8\u5206\u89e3\u91ca\u89c1\u4e0b\u6587\n                f[i * prime[j]] = f[i] / (cnt[i] + 1) * (cnt[i] + 2);\n                cnt[i * prime[j]] = cnt[i] + 1;\n                break;\n            } else {  //prime[j]\u662f\u7d20\u6570\uff0c\u56e0\u6b64i\u548cprime[j]\u7684\u56e0\u6570\u6700\u591a\u662f1\u548cprime[j]\uff0c\u53c8i % prime[j] != 0\uff0c\u6240\u4ee5i\u548cprime[j]\u4e92\u7d20\n                f[i * prime[j]] = f[i] * f[prime[j]]; \n                //\u4e24\u5143\u7d20\u4e92\u7d20\uff0c\u56e0\u6b64\u4ed6\u4eec\u7684\u56e0\u6570\u96641\u5916\u6ca1\u6709\u4ea4\u96c6\uff0c\u6240\u4ee5i * prime[j]\u7684\u56e0\u6570\u4e2a\u6570 = i\u7684\u56e0\u6570\u4e2a\u6570 * prime[j]\u7684\u56e0\u6570\u4e2a\u6570\n \n                cnt[i * prime[j]] = 1;\n                //\u56e0\u4e3a\u4eceprime\u6570\u7ec41\u53f7\u4f4d\u5f00\u59cb\u5411\u540e\u904d\u5386\u7d20\u6570\u5e76\u4e14i % prime[j] != 0\uff0c\u6240\u4ee5prime[j]\u59cb\u7ec8\u5c0f\u4e8ei\u7684\u6700\u5c0f\u8d28\u56e0\u6570\uff0c\n                //\u6240\u4ee5i * prime[j]\u6700\u5c0f\u8d28\u56e0\u6570\u7684\u5e42\u6b21\u4e3aprime[j]\u7684\u5e42\u6b21\uff0c\u5373\u4e3a1\n            }\n        }\n    }\n    return ;\n}\nlong long Sum(long long x)\n{\n\tlong long res = 0;\n\tfor(int i = 1 ; i < x ; i ++) if(x % i == 0) res ++;\n\treturn res;\n}\nlong long Pre(long long x)\n{\n\treturn sum[x];\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tinit();\n\t//printf(\"%lld\\n\",f[2]);\n\tdp[0] = sum[0] = 1;\n\tdp[1] = 1 , sum[1] = 2;\n\tfor(int i = 2 ; i <= n ; i ++) \n\t{\n\t\tdp[i] = dp[i - 1] + f[i] - 1 + Pre(i - 2) , dp[i] %= mod;\n\t\tsum[i] = sum[i - 1] + dp[i] , sum[i] %= mod;\n\t}\n\tprintf(\"%lld\\n\",dp[n]);\n\treturn 0;\n}\n```",
        "postTime": 1621956159,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "CF1528B Kavi on Pairing Duty"
    },
    {
        "content": "[\u5728\u6211\u7684\u535a\u5ba2\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/mk-oi/p/CF1528B.html)\n\n## Problem\n\n[CF1528B Kavi on Pairing Duty](https://www.luogu.com.cn/problem/CF1528B)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u5728\u6570\u8f74\u4e0a\u6709 $2n$ \u4e2a\u70b9\uff0c\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u4e3a $1$\u3002\u73b0\u5728\u8981\u5c06\u8fd9\u4e9b\u70b9\u4e24\u4e24\u5339\u914d\u6210 $n$ \u4e2a\u5706\u5f27\uff0c\u8981\u6c42\u4efb\u610f\u4e24\u4e2a\u5706\u5f27\u8981\u4e48\u7b49\u957f\uff0c\u8981\u4e48\u5176\u4e2d\u4e00\u4e2a\u5305\u542b\u53e6\u4e00\u4e2a\uff0c\u95ee\u65b9\u6848\u6570\u3002\n\n## Solution\n\n\u9996\u5148\u89c2\u5bdf\u53d1\u73b0\u597d\u50cf\u5408\u6cd5\u7684\u5339\u914d\u4e00\u5b9a\u662f\u82e5\u5e72\u5c42\u5305\u542b\uff0c\u91cc\u9762\u4e00\u5c42\u5e76\u5217\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://pic.img.ski/1668404946.png)\n\n\u4e2d\u95f4\u4e09\u4e2a\u53e5\u53f7\u8868\u793a\u5269\u4e0b\u7684\u70b9\u7ec4\u6210\u7684\u5706\u5f27\u90fd\u662f\u7b49\u957f\u7684\u3002\n\n\u7136\u540e\u53d1\u73b0\u88ab\u6837\u4f8b Hack \u4e86\uff1a\n\n![](https://pic.img.ski/1668405161.png)\n\n\u89c2\u5bdf\u53d1\u73b0\u88ab Hack \u7684\u539f\u56e0\u662f\u53ef\u80fd\u6709\u82e5\u5e72\u4e2a\u7b49\u957f\u7684\u5706\u5f27\u76f8\u4ea4\uff0c\u5269\u4e0b\u6bd4\u4ed6\u4eec\u5c0f\u7684\u5706\u5f27\u5728\u4ed6\u4eec\u76f8\u4ea4\u7684\u90e8\u5206\u4e2d\u3002\n\n\u4e8e\u662f\u5c1d\u8bd5\u4fee\u6539\u7ed3\u8bba\uff1a\u5408\u6cd5\u7684\u5339\u914d\u4e00\u5b9a\u662f\u5916\u9762\u82e5\u5e72\u5c42\uff0c\u6bcf\u4e00\u5c42\u90fd\u662f\u82e5\u5e72\u4e2a\u7b49\u957f\u7684\u5706\u5f27\uff0c\u6700\u91cc\u9762\u4e00\u5c42\u4e3a\u82e5\u5e72\u4e2a\u7b49\u957f\u7684\u5706\u5f27\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u7edf\u8ba1\u7b54\u6848\uff0c\u53ef\u4ee5\u628a\u5916\u9762\u7684\u51e0\u5c42\u4e0e\u6700\u5185\u5c42\u5206\u5f00\u7edf\u8ba1\u3002\n\n\u9996\u5148\u8003\u8651\u5916\u9762\u51e0\u5c42\u3002  \n\u5bf9\u4e8e\u6bcf\u4e00\u5c42\uff0c\u53d1\u73b0\u552f\u4e00\u5408\u6cd5\u7684\u5339\u914d\u957f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://pic.img.ski/1668405502.png)\n\n\u6240\u4ee5\u5047\u8bbe\u5916\u9762\u51e0\u5c42\u603b\u5171\u6709 $k$ \u5c42\uff0c\u5219\u5916\u9762\u51e0\u5c42\u7684\u65b9\u6848\u6570\u76f8\u5f53\u4e8e\u5c06 $k$ \u4e2a\u6570\u5206\u6210\u82e5\u5e72\u4e2a\u533a\u95f4\u7684\u65b9\u6848\u3002  \n\u8fd9\u4e2a\u4e1c\u897f\u76f8\u5f53\u4e8e\u8981\u5728 $k-1$ \u4e2a\u7a7a\u9699\u4e2d\u63d2\u5165\u82e5\u5e72\u4e2a\u9694\u677f\u7684\u65b9\u6848\u6570\u3002\u53d1\u73b0\u6bcf\u4e2a\u7a7a\u9699\u90fd\u6709\u63d2\u6216\u4e0d\u63d2\u4e24\u79cd\u9009\u9879\uff0c\u6240\u4ee5\u65b9\u6848\u6570\u4e3a $2^{k-1}$\u3002\n\n\u7136\u540e\u8003\u8651\u6700\u5185\u5c42\u3002  \n\u7531\u4e8e\u6bcf\u4e2a\u5706\u5f27\u8981\u7b49\u957f\uff0c\u6240\u4ee5\u5047\u8bbe\u8981\u5339\u914d $l$ \u4e2a\u5706\u5f27\uff0c\u5219\u6bcf\u4e2a\u5706\u5f27\u7684\u957f\u5ea6\u5fc5\u987b\u662f $l$ \u7684\u56e0\u6570\u3002\u800c\u5bf9\u4e8e\u6bcf\u4e00\u786e\u5b9a\u7684\u957f\u5ea6\uff0c\u5219\u6709\u552f\u4e00\u5bf9\u5e94\u7684\u4e00\u79cd\u5339\u914d\u7684\u65b9\u6848\u3002\u6240\u4ee5\u5185\u5c42\u7684\u65b9\u6848\u6570\u4e3a $\\operatorname{d}(l)$\u3002\n\n\u6240\u4ee5\u6574\u4e2a\u9898\u76ee\u7684\u7b54\u6848\u5c31\u662f\uff1a\n$$\n\\sum\\limits_{i=1}^n (\\operatorname{d}(i) \\times 2^{n-i-1})\n$$\n\n\n## Code\n\n```cpp\n//Think twice,code once.\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int mod=998244353;\n\nint n,f[1000005],pw[1000005];\nlong long ans;\n\nint main() {\n\tscanf(\"%d\",&n);\n\tpw[0]=1;\n\tfor (int i=1;i<=n;i++) pw[i]=2*pw[i-1]%mod;//pw[i] \u8868\u793a 2^i\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=i;j<=n;j+=i) f[j]++;//f[j] \u8868\u793a j \u7684\u56e0\u6570\u4e2a\u6570\u3002\n\tfor (int i=1;i<=n;i++) ans=(ans+(long long)pw[max(n-i-1,0)]*f[i]%mod)%mod;//\u7edf\u8ba1\u7b54\u6848\u3002\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1668406331,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1528B \u3010Kavi on Pairing Duty\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\u8bbe $dp_i$ \u4e3a\u7b2c $(n-i+1)$~$(n+i)$ \u4e2a\u70b9\u4e24\u4e24\u914d\u5bf9\u7684\u65b9\u6848\u6570\uff0c\u5982\u679c\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u5b58\u5728\u4e86\u6709\u70b9\u914d\u5bf9\u7684\u60c5\u51b5\uff08\u5047\u8bbe\u5339\u914d\u4e86\u7b2c $(n-j+1)$~$(n+j)$ \u4e2a\u70b9\uff09\u7531\u4e8e\u4e0d\u77e5\u9053\u5b83\u662f\u600e\u4e48\u914d\u5bf9\u7684\uff0c\u6211\u4eec\u53ea\u597d\u5148\u5c06 $(n-i+k+1)$ \u53f7\u70b9\u548c $(n+j+k+1)$ \u53f7\u70b9\u914d\u5bf9 $(0\\le k<i-j)$\uff08\u5373\u8ba9\u5b83\u4eec\u6ee1\u8db3**\u6761\u4ef6\u4e00**\uff09\uff0c\u4ed6\u4eec\u4f1a\u7ed9 $dp_i$ \u589e\u52a0 $sum_{i-1}$\uff0c\uff08\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5c06 $sum$ \u6570\u7ec4\u8868\u793a\u4e3a $dp$ \u6570\u7ec4\u7684**\u524d\u7f00\u548c**\uff09\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\u5982\u679c\u914d\u5bf9\u7684\u70b9\u5bf9**\u5168\u90e8\u6ee1\u8db3\u6761\u4ef6\u4e8c**\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u914d\u5bf9\u6ee1\u8db3\u6761\u4ef6\u4e8c\u7684\u4e24\u4e2a\u70b9\uff0c\u5047\u8bbe\u914d\u5bf9\u7684\u70b9\u5bf9\u4e3a $(a,b)$\uff0c\u5219\u5fc5\u987b\u6ee1\u8db3 $b-a\\mid n$\u3002\u56e0\u4e3a**\u6700\u5c11**\u9700\u8981\u524d $2(b-a)$ \u4e2a\u70b9\u5168\u90e8\u914d\u5bf9\u540e\u624d\u4f1a\u5f62\u6210\u5df2\u914d\u5bf9\u7684\u70b9\u624d\u4f1a\u5f62\u6210\u4e00\u4e2a**\u533a\u95f4**\u3002\u8fd9\u6837\u6bcf $2(b-a)$ \u4e2a\u70b9\u4e0d\u65ad\u5faa\u73af\u4e0b\u53bb\u6700\u7ec8\u521a\u597d\u6ee1 $2n$ \u4e2a\u70b9\u624d\u80fd\u7b97\u5408\u6cd5\u65b9\u6848\u3002\u7531\u6b64\uff0c\u8fd9\u4e2a\u7279\u6b8a\u60c5\u51b5\u4f1a\u591a\u7ed9 $dp_i$ \u589e\u52a0 $\\sigma_i-1$ \u7684\u8d21\u732e\uff0c\n\n\u7efc\u4e0a\uff0c\u53ef\u4ee5\u5f97\u51fa\u9012\u63a8\u5f0f\uff1a$dp_i=sum_{i-1}+\\sigma_i-1$\n\n$\\sigma_i$ \u5e76\u4e0d\u9700\u8981 O($\\sqrt n$) \u5206\u89e3\u8d28\u56e0\u6570\uff0c\u53ea\u9700\u8981\u679a\u4e3e $i$ \u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a $\\sigma_{i\\times j}$ $(1\\le j\\le \n\\left\\lfloor\\dfrac{n}{i}\\right\\rfloor)$ \u589e\u52a0 $1$ \u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\ln n)$\n# AC code\n```cpp\n#include<cstdio>\nusing namespace std;\ntypedef long long ll;\ninline int read(){\n\tint x=0;\n\tbool f=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-'){\n\t\t\tf=1;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\tif(f){\n\t\treturn -x;\n\t}\n\treturn x;\n}\nconst int mod=998244353;\nll dp[1000005],summ[1000005];\nint main(){\n\tint n=read(),i,j;\n\tll sum=0;\n\tsum=dp[1]=1;\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j*i<=n;j++){\n\t\t\tsumm[i*j]++;\n\t\t}\n\t}\n\tfor(i=2;i<=n;i++){\n\t\tdp[i]=sum+summ[i];\n\t\tdp[i]%=mod;\n\t\tsum+=dp[i];\n\t\tsum%=mod;\n\t}\n\tprintf(\"%lld\",dp[n]);\n\treturn 0;\n}\n```",
        "postTime": 1622031406,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "CF1528B Kavi on Pairing Duty"
    }
]