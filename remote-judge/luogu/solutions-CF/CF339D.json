[
    {
        "content": "\u8bfb\u61c2\u9898\u76ee\u5176\u5b9e\u5c31\u662f\u4e00\u9897\u7ebf\u6bb5\u6811\u800c\u5df2\n\n\u7b2c\u4e00\u6b21\u8fd0\u7b97\u5c06$a_1$\u548c$a_2$\uff0c$a_3$\u548c$a_4\u2026\u2026$\uff0c$a_{n - 1}$\u548c$a_n$\u4e24\u4e24 \u6216 $|$\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u5e8f\u5217\u4ece$a_1$\u5230$a_{n/2}$\n\n\u7b2c\u4e8c\u6b21\u8fd0\u7b97\u5c06$a_1$\u548c$a_2$\uff0c$a_3$\u548c$a_4\u2026\u2026$\uff0c$a_{n/2 - 1}$\u548c$a_{n/2}$\u4e24\u4e24 \u5f02\u6216$xor$ \uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u5e8f\u5217\u4ece$a_1$\u5230$a_{n/4}$\n\n\u7b2c\u4e09\u6b21\u8fd0\u7b97\u5c06$a_1$\u548c$a_2$\uff0c$a_3$\u548c$a_4\u2026\u2026$\uff0c$a_{n/4 - 1}$\u548c$a_{n/4}$\u4e24\u4e24 \u6216 $|$ \uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u5e8f\u5217\u4ece$a_1$\u5230$a_{n/8}$\n\n\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u663e\u7136\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u5411\u4e0a\u8ba1\u7b97\u7684\u8fc7\u7a0b\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n\n\u6ce8\u610f\u6df1\u5ea6\u662f\u5012\u7740\u7684\uff01\n\n```cpp\n#define mid ((l+r)>>1)\n#define lson (o<<1)\n#define rson (o<<1|1)\n\nconst int N = 2e5 + 10;\n\nint n, m, a[N];\nint tree[N << 2], deep[N << 2];\n\ninline void build(int o, int l, int r)\n{\n\tif(l == r)\n\t{\n\t\ttree[o] = a[l];\n\t\treturn;\n\t}\n\tbuild(lson, l, mid);\n\tbuild(rson, mid + 1, r);\n\tdeep[o] = deep[lson] + 1;\n\tif(deep[o] & 1) tree[o] = tree[lson] | tree[rson];\n\telse tree[o] = tree[lson] ^ tree[rson];\n}\n\ninline void update(int o, int l, int r, int pos, int k)\n{\n\tif(l == r)\n\t{\n\t\ttree[o] = k;\n\t\treturn;\n\t}\n\tif(pos <= mid) update(lson, l, mid, pos, k);\n\telse update(rson, mid + 1, r, pos, k);\n\tif(deep[o] & 1) tree[o] = tree[lson] | tree[rson];\n\telse tree[o] = tree[lson] ^ tree[rson];\n}\n\nint x, y;\n\nsigned main()\n{\n\tinto();\n\tread(n); read(m);\n\tn = (1 << n);\n\tfor(R int i = 1; i <= n; i++) read(a[i]);\n\tbuild(1, 1, n);\n\twhile(m--)\n\t{\n\t\tread(x); read(y);\n\t\tupdate(1, 1, n, x, y);\n\t\twriteln(tree[1]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605188673,
        "uid": 103023,
        "name": "AvA_sleeper",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF339D \u3010Xenia and Bit Operations\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u5c45\u7136\u662f\u7d2b\u9898\uff0c\u597d\u723d~~\n\n\u5176\u5b9e\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u53ea\u6709\u4e24\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a1. \u7ebf\u6bb5\u6811\u7684\u5355\u70b9\u4fee\u6539\u64cd\u4f5c 2.\u5982\u4f55\u5bf9\u9898\u76ee\u6761\u4ef6\u8fdb\u884c\u8f6c\u6362\n\n\u5982\u679c\u60f3\u4e0d\u51fa\u6765\u7684\u8bdd\uff0c\u53ef\u4ee5\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\u3002\u8fd9\u4e2a\u56fe\u957f\u5f97\u8ddf\u4e8c\u53c9\u6811\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u5c31\u5229\u7528\u4e24\u4e2a\u513f\u5b50\u6765\u8ddf\u65b0\u7236\u8282\u70b9\u3002\u8bbe\u76ee\u524d\u8fd9\u4e2a\u8282\u70b9\u4e3a$p$,\u5e76\u89e3\u5f97\u5b83\u4e8c\u8fdb\u5236\u7684\u4f4d\u6570$k$,\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c$N + 1 - k$\u4e3a\u5947\u6570\uff0c\u5c31\u7528$|$\u66f4\u65b0\uff0c\u5426\u5219\u7528^ \u66f4\u65b0\u3002\n\n\u6839\u636e\u7ebf\u6bb5\u6811\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e0b\u7684\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 19;\n\nint d[1 << maxn], a[(1 << (maxn - 2)) + 5], N, M;\n\nint convert(int x) { //\u5982\u524d\u9762\u6240\u8ff0\uff0c\u627e\u51fap\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\n\tint digit = 0;\n\tfor (digit = 0; x > 0; x >>= 1) digit++;\n\treturn digit;\n}\n\nvoid build(int s, int t, int p) { //\u5efa\u7acb\u7ebf\u6bb5\u6811\n\tif (s == t) { \n\t\td[p] = a[s];\n\t\treturn ;\n\t}\n\tint m = (s + t) >> 1;\n\tbuild(s, m, p << 1), build(m + 1, t, p << 1 | 1);\n\tint num = convert(p);\n\tif ((N + 1 - num) & 1) d[p] = d[p << 1] | d[p << 1 | 1];\n\telse d[p] = d[p << 1] ^ d[p << 1 | 1]; //\u6839\u636e\u6211\u4eec\u524d\u9762\u6240\u89c2\u5bdf\u5230\u7684\u6027\u8d28\uff0c\u56de\u6eaf\u66f4\u65b0\u8282\u70b9\n}\n\nvoid update(int c, int x, int s, int t, int p) { //\u540c\u7406\uff0c\u53ea\u662f\u6362\u6210\u4e86\u66f4\u65b0\n\tif (s == t) {\n\t\td[p] = x;\n\t\treturn ;\n\t}\n\tint m = (s + t) >> 1;\n\tif (c <= m) update(c, x, s, m, p << 1);\n\telse update(c, x, m + 1, t, p << 1 | 1);\n\tint num = convert(p);\n\tif ((N + 1 - num) & 1) d[p] = d[p << 1] | d[p << 1 | 1];\n\telse d[p] = d[p << 1] ^ d[p << 1 | 1];\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n    cin.tie(0);\n    cin >> N >> M;\n    for (int i = 1; i <= (1 << N); i++) \n    \tcin >> a[i];\n    build(1, 1 << N, 1);\n    int c, k;\n    while (M--) {\n    \tcin >> c >> k;\n    \tupdate(c, k, 1, 1 << N, 1);\n    \tcout << d[1] << endl; //\u8f93\u51fad[1]\u5373\u53ef\n    }\n\treturn 0;\n}\n```",
        "postTime": 1596171394,
        "uid": 306962,
        "name": "MVP_Harry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF339D \u3010Xenia and Bit Operations\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $2^n$ \u7684\u5e8f\u5217 $a$\uff0c\u5e76\u8fdb\u884c $n$ \u6b21\u66f4\u65b0\u64cd\u4f5c  \n\u5728\u7b2c\u5947\u6570\u6b21\u64cd\u4f5c\u65f6\uff0c\u5c06\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u6570 \u6309\u4f4d\u6216\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5f97\u5230\u7684\u503c\u7ec4\u6210\u7684\u5e8f\u5217\u4ee3\u66ff\u5e8f\u5217 $a$  \n\u5728\u7b2c\u5076\u6570\u6570\u6b21\u64cd\u4f5c\u65f6\uff0c\u5c06\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u6570 \u6309\u4f4d\u5f02\u6216\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5f97\u5230\u7684\u503c\u7ec4\u6210\u7684\u5e8f\u5217\u4ee3\u66ff\u5e8f\u5217 $a$\n\n\u5728 $n$ \u6b21\u64cd\u4f5c\u540e\uff0c$a$ \u5e8f\u5217\u4e2d\u53ea\u5269\u4e0b\u4e86\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6570\u4e3a\u5e8f\u5217 $a$ \u7684\u952e\u503c  \n\u7ed9\u51fa $m$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5305\u542b\u4e24\u4e2a\u6570 $p,b$\uff0c\u8868\u793a\u6c42\u5f53 $a_p=b$ \uff08\u5176\u4ed6\u6570\u4e0d\u53d8\uff09\u65f6\u5e8f\u5217 $a$ \u7684\u952e\u503c\n\n### \u89e3\u9898\u601d\u8def\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u601d\u8003\u5982\u4f55\u6c42\u51fa\u5e8f\u5217 $a$ \u7684\u952e\u503c\uff08\u5148\u4e0d\u8003\u8651\u591a\u7ec4\u8be2\u95ee\uff09\n\n\u65b9\u6cd51\uff1a\u76f4\u63a5\u6a21\u62df  \n\u8fd9\u4e2a\u5c31\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0c\u6309\u7167\u9898\u610f \u5f02\u6216/\u6309\u4f4d\u6216 \u76f8\u90bb\u5143\u7d20\u5c31\u597d\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\operatorname{O}(2^{n+1}-1)$\n\n\u65b9\u6cd52\uff1a\u6811\u5f62DP/dfs  \n\u8ba9 $n$ \u6b21\u66f4\u65b0\u64cd\u4f5c\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u6570\u7ec4\u6210\u4e00\u4e2a\u8282\u70b9\u6570\u4e3a $2^{n+1}-1$ \u7684\u6ee1\u4e8c\u53c9\u6811\u3002\u5176\u4e2d\uff0c\u4ece\u4e0b\u5f80\u4e0a\u6570\u7b2c $i$ \u5c42\u7684\u8282\u70b9\u4ee3\u8868\u7b2c $i$ \u6b21\u64cd\u4f5c\u524d\u5e8f\u5217 $a$ \u7684\u72b6\u6001\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u6839\u8282\u70b9\u7684\u503c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\operatorname{O}(2^{n+1}-1)$\n\n\u867d\u7136\u4e24\u4e2a\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u4f46\u65b9\u6cd52\u5728\u591a\u7ec4\u8be2\u95ee\u4e2d\u66f4\u80dc\u4e00\u7b79\n\n\u6700\u5f00\u59cb\uff0c\u6211\u4eec\u628a\u521d\u59cb\u5e8f\u5217 $a$ \u5bf9\u5e94\u7684\u6ee1\u4e8c\u53c9\u6811\u9884\u5904\u7406\u51fa\u6765  \n\u5728\u6bcf\u6b21\u8be2\u95ee\u524d\u4fee\u6539\u5143\u7d20\u540e\uff08\u5047\u5982\u4fee\u6539\u7684\u5143\u7d20\u4f4d\u7f6e\u4e3a $x$\uff09\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u53d8\u5316\u7684\u8282\u70b9\u90fd\u5728 $x$ \u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\uff0c\u5e76\u4e14\u8fd9\u4e9b\u8282\u70b9\u7684\u603b\u6570\u4e0d\u8d85\u8fc7 $n$  \n\u8fd9\u6837\uff0c\u6bcf\u6b21\u8be2\u95ee\u65f6\u53ea\u9700 $\\operatorname{O}(n)$ \u4fee\u6539\u4e8c\u53c9\u6811\uff0c $\\operatorname{O}(1)$ \u67e5\u8be2\u7b54\u6848\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\operatorname{O}((2^{n+1}-1)+(nm))$\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst long long Maxn=3000000+10;\nlong long a[Maxn],d[Maxn];\nlong long n,m;\nvoid dfs(long long x) // dfs \u9884\u5904\u7406\n{\n\tif(x>=(1<<(n+1)))return; // \u6ce8\u610f\uff1a\u8fd9\u79cd\u5199\u6cd5\u4e00\u5b9a\u8981\u5224\u65ad\u8fb9\u754c\uff0c\u4e0d\u7136\u5c31\u65e0\u9650\u9012\u5f52\u4e86\n\td[x]=d[x>>1]+1; // \u8ba1\u7b97\u6df1\u5ea6\uff0c\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a 1\n\tdfs(x<<1);\n\tdfs(x<<1|1);\n\tif(a[x]!=-1)return; // \u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u4e0d\u9700\u8981\u5408\u5e76\u5b50\u6811\u4fe1\u606f\n\tif((n-d[x]) & 1)a[x]=(a[x<<1]^a[x<<1|1]); // \u5224\u65ad\u662f\u5f02\u6216\u8fd8\u662f\u6309\u4f4d\u6216\n\telse a[x]=(a[x<<1]|a[x<<1|1]);\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(long long i=1;i<(1<<(n+1));++i)\n\ta[i]=-1;\n\tfor(long long i=(1<<(n+1))-(1<<n);i<(1<<(n+1));++i)\n\tscanf(\"%lld\",a+i); // \u7ed9\u53f6\u5b50\u8282\u70b9\u8d4b\u503c\n\tdfs(1);\n\twhile(m--)\n\t{\n\t\tlong long x,val;\n\t\tscanf(\"%lld%lld\",&x,&val);\n\t\tx=(1<<(n+1))-(1<<n)+x-1; // \u627e\u5230\u5728\u6811\u4e2d\u5bf9\u5e94\u7684\u4f4d\u7f6e\n\t\ta[x]=val;\n\t\twhile(x>1) // \u66f4\u65b0\u7956\u5148\n\t\t{\n\t\t\tx>>=1;\n\t\t\tif((n-d[x]) & 1)a[x]=(a[x<<1]^a[x<<1|1]);\n\t\t\telse a[x]=(a[x<<1]|a[x<<1|1]);\n\t\t}\n\t\tprintf(\"%lld\\n\",a[1]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1587105490,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF339D \u3010Xenia and Bit Operations\u3011"
    },
    {
        "content": "\u8003\u8651\u7ebf\u6bb5\u6570\uff0c\u4fdd\u5b58\u8282\u70b9\u6df1\u5ea6\uff08\u5982\u679c\u8282\u70b9\u5bf9\u5e94\u533a\u95f4\u8986\u76d6\u6070\u597d\u4e00\u4e2a\u5143\u7d20\uff0c\u5b9a\u4e49\u6df1\u5ea6\u4e3a0\uff0c\u5426\u5219\u6df1\u5ea6\u4e3a\u5de6\u5b69\u5b50\u6df1\u5ea6\u52a01\uff09\n\n\u66f4\u65b0\u4e00\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u4ece\u5c0f\u533a\u95f4\u5f00\u59cb\u66f4\u65b0\u3002\u5982\u679c\u6df1\u5ea6\u4e3a0\uff0c\u5219\u8bbe\u533a\u95f4\u503c\u4e3a\u66f4\u884c\u503c\u3002\u5426\u5219\uff1a\n\n 1. \u5982\u679c\u6df1\u5ea6\u4e3a\u5076\u6570\uff0c\u533a\u95f4\u503c\u7b49\u4e8e\u5de6\u5b69\u5b50\u533a\u95f4\u503c\u5f02\u6216\u53f3\u5b69\u5b50\u533a\u95f4\u503c\uff1b\n 2. \u5982\u679c\u6df1\u5ea6\u4e3a\u5947\u6570\uff0c\u533a\u95f4\u503c\u7b49\u4e8e\u5de6\u5b69\u5b50\u533a\u95f4\u503c\u4e8c\u8fdb\u5236\u6216\u53f3\u5b69\u5b50\u533a\u95f4\u503c\u3002\n\n\u9012\u5f52\u5f62\u5f0f\u66f4\u65b0\uff0c\u5148\u5224\u65ad\u66f4\u65b0\u4f4d\u7f6e\u5728\u5de6\u5b69\u5b50\u533a\u95f4\u91cc\u8fd8\u662f\u5728\u53f3\u5b69\u5b50\u533a\u95f4\u91cc\uff0c\u66f4\u65b0\u90a3\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u66f4\u65b0\u6b64\u533a\u95f4\u3002\n\n\u6211\u7528\u4e86\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u6df1\u5ea618\u7684\u7ebf\u6bb5\u6570\u3002\n\n```c++\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n\nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nconst int MOD = 1000000007;\n\nclass SST {\npublic:\n    int d, v;\n    SST* ch[2];\n    SST(int d) : d(d), v(0) {\n        if(d) {\n            ch[0] = new SST(d-1);\n            ch[1] = new SST(d-1);\n        }\n    }\n    void inc(int i, int v0) {\n        if(!d) {\n            v = v0;\n            return;\n        }\n        bool cv = i&(1<<(d-1));\n        ch[cv]->inc(i, v0);\n        if(d%2) v = ch[0]->v | ch[1]->v;\n        else v = ch[0]->v ^ ch[1]->v;\n    }\n};\n\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n, m; cin >> n >> m;\n    int sz = 1<<n; SST* s = new SST(18);\n    rep(i, sz) {\n        int v; cin >> v;\n        s->inc(i, v);\n    }\n    while(m--) {\n        int i, v; cin >> i >> v;\n        s->inc(i-1, v);\n        cout << s->v << endl;\n    }\n}\n```",
        "postTime": 1579590394,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF339D"
    },
    {
        "content": "~~\u4e0d\u5f00ll\u89c1\u7956\u5b97~~      \n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6df1\u5ea6d\uff0cd%2==1\u65f6\u6216\uff0c$0$\u65f6\u4ea6\u6216      \n\u4e0a\u4ee3\u7801       \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define inf 0x3f3f3f3f\n#define ll long long \n#define N 1<<17+2\nusing namespace std;\nll n,m,a[N]; \nstruct STree{\n\tll v,l,r,d;\n\t#define v(x) tree[x].v\n\t#define l(x) tree[x].l\n\t#define r(x) tree[x].r\n\t#define d(x) tree[x].d\n}tree[N<<2];\ninline ll read(){\n\tll x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return x*f;\n}\ninline void upd(int p){d(p)=d(p<<1)+1;if(d(p)%2)v(p)=v(p<<1)|v(p<<1|1);else v(p)=v(p<<1)^v(p<<1|1);}\nvoid build(int p,int l,int r){\n\tl(p)=l,r(p)=r;if(l==r){v(p)=a[l];return;\n\t}int mid=(l+r)>>1;build(p<<1,l,mid);build(p<<1|1,mid+1,r);upd(p);\n}\nvoid change(int p,int x,ll y){\n\tif(l(p)==r(p)){v(p)=y;return;\n\t}int mid=(l(p)+r(p))>>1;if(x<=mid)change(p<<1,x,y);else change(p<<1|1,x,y);upd(p);\n}\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=(1<<n);i++)a[i]=read();\n\tbuild(1,1,1<<n);\n\tfor(int i=1;i<=m;i++){\n\t\tll x=read();\n\t\tll y=read();\n\t\tchange(1,x,y);\n\t\tprintf(\"%lld\\n\",v(1));\n\t} \n\treturn 0;\n}\n\n```\n",
        "postTime": 1563341916,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF339D \u3010Xenia and Bit Operations\u3011"
    },
    {
        "content": "[CF339D Xenia and Bit Operations](https://www.luogu.com.cn/problem/CF339D)\n\n\u6709\u610f\u601d.\n\n\u6709$2^n$\u4e2a\u6570\uff0c\u7136\u540e\u8981\u7ef4\u62a4\u90a3\u4e2a\u957f\u957f\u7684\uff0c\u590d\u6742\u7684\uff0c\u4e00\u5c42\u4e00\u5c42\u5957\u4e0b\u53bb\u7684\u5f0f\u5b50.\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u9664\u6700\u5185\u5c42\u5916\u6bcf\u4e2a\u62ec\u53f7\u5185\u7684\u4e24\u4e2a\u62ec\u53f7\u6240\u62ec\u4f4f\u7684\u6570\u5b57\u4e2a\u6570\u76f8\u7b49\uff0c\u4e8e\u662f\u53ef\u4ee5\u60f3\u5230\u5206\u6cbb.\n\n\u5206\u6cbb+\u5355\u70b9\u4fee\u6539+\u6574\u4f53\u67e5\u8be2\uff0c\u8fd9\u80fd\u60f3\u5230\u4ec0\u4e48\uff1f\u6ca1\u9519\uff0c\u7ebf\u6bb5\u6811.\n\n\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5bf9\u6bcf\u4e00\u5c42\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a$tag$\u8868\u793a\u8be5\u5c42\u8fdb\u884c\u4f55\u79cd\u8fd0\u7b97\uff0c\u7136\u540e\u5c31\u5f88\u7b80\u5355\u5566.\n\n$O(n \\log n)$\n\n```cpp\nll v[N];\nnamespace seg{\n\tll dat[N<<2];\n\tbool tag[N<<2];\n\t//tag\u4e3atrue\u8868\u793a\u8be5\u5c42\u8fdb\u884c\u6309\u4f4d\u6216\uff0cfalse\u8868\u793a\u8fdb\u884c\u6309\u4f4d\u5f02\u6216.\n\tinline void build(ll p, ll l, ll r){\n\t\tif (l==r) return (void)(dat[p]=v[l], tag[p]=false);\n\t\tll mid=l+r>>1;\n\t\tbuild(p<<1, l, mid); build(p<<1|1, mid+1, r);\n\t\ttag[p]=tag[p<<1]^1;\n\t\tif (tag[p]) dat[p]=(dat[p<<1]|dat[p<<1|1]);\n\t\telse dat[p]=(dat[p<<1]^dat[p<<1|1]);\n\t}\n\t\n\tinline void update(ll p, ll l, ll r, ll k, ll val){\n\t\tif(l==r) return (void)(dat[p]=val);\n\t\tll mid=l+r>>1;\n\t\tif(k<=mid) update(p<<1, l, mid, k, val);\n\t\telse update(p<<1|1, mid+1, r, k, val);\n\t\tif (tag[p]) dat[p]=(dat[p<<1]|dat[p<<1|1]);\n\t\telse dat[p]=(dat[p<<1]^dat[p<<1|1]);\t\t\n\t}\n\t\n\tinline ll query(){\n\t\treturn dat[1];\n\t}\n}\n\nll n, m;\nint main(){\n\tread(n); read(m);\n\tn=(1ull<<n);\n\tfor (R ll i=1; i<=n; i++) read(v[i]);\n\tseg::build(1, 1, n);\n\tll x, y;\n\twhile(m--){\n\t\tread(x); read(y);\n\t\tseg::update(1, 1, n, x, y);\n\t\twriteln(seg::query());\n\t}\n} \n\n```\n",
        "postTime": 1605190424,
        "uid": 220285,
        "name": "Saber_Master",
        "ccfLevel": 7,
        "title": "CF339D \u3010Xenia and Bit Operations\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u70b9\u4fee\u6539\u6743\u503c\uff0c\u7136\u540e\u6c42\u51fa\u5168\u5e8f\u5217\u7684\u503c\u3002\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5c31\u597d\u4e86\uff1a\n\n#### \u5c31\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\n\n\u540c\u65f6\uff0c\u5728\u5efa\u6811\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6c42\u51fa\u6bcf\u4e00\u6bb5\u7684\u6df1\u5ea6\u3002pushup\u65f6\uff0c\u6839\u636e\u5355\u53cc\u6570\u6765\u5224\u65ad\u662f\u6309\u4f4d\u6216\u8fd8\u662f\u4ea6\u6216\u8fd0\u7b97\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 1000010\n#define QAQ 0\n\ninline int read(){\n\tint x = 0, s = 1;\n\tchar c = getchar();\n\twhile(!isdigit(c)){\n\t\tif(c == '-')s = -1;\n\t\tc = getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx = x * 10 + (c ^ '0');\n\t\tc = getchar();\n\t}\n\treturn x * s;\n}\n\nint a[N];\nstruct tree{\n\tint w, deth;\n} t[N];\n\ninline void pushup(int o){   /*\u66f4\u65b0*/\n\tif(t[o].deth % 2) t[o].w = t[o << 1].w | t[o << 1 | 1].w;\n\telse t[o].w = t[o << 1].w ^ t[o << 1 | 1].w;\n\treturn ;\n}\n\nvoid build(int o, int l, int r){\n\tif(l == r){\n\t\tt[o].w = a[r];\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(o << 1, l, mid);\n\tbuild(o << 1 | 1, mid + 1, r);\n\tt[o].deth = t[o << 1].deth + 1;  /*\u8bb0\u5f55\u6df1\u5ea6*/\n\tpushup(o);\n\treturn ;\n}\n\nvoid update(int o, int l, int r, int x, int k){ /*\u7ecf\u5178\u64cd\u4f5c\uff1a \u5355\u70b9\u4fee\u6539*/\n\tif(l > x || r < x) return ;\n\tif(l == x && r == x){\n\t\tt[o].w = k;  \n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tupdate(o << 1, l, mid, x, k);\n\tupdate(o << 1 | 1, mid + 1, r, x, k);\n\tpushup(o);\n\treturn ;\n}\n\nint main(){\n\tint n = read(), m = read();\n\tfor(int i = 1;i <= (1 << n); i++){\n\t\ta[i] = read();\n\t}\n\tbuild(1, 1, 1 << n);  /*\u5343\u4e07\u4e0d\u8981\u5fd8\u4e86\u5148\u5efa\u6811\u554a\uff01\uff01  QAQ*/\n\twhile(m--){\n\t\tint x = read(), y = read();\n\t\tupdate(1, 1, 1 << n, x, y);\n\t\tprintf(\"%d\\n\", t[1].w);\n\t}\n\treturn QAQ;\n}\n```\n",
        "postTime": 1593009368,
        "uid": 234224,
        "name": "\u9752\u9e1f_Blue_Bird",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF339D \u3010Xenia and Bit Operations\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problemnew/show/CF339D)\n\n\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\n\nt[p].step\u8bb0\u5f55log2( len )( len=t[p].r-t[p].l+1 )\n\n\u82e5step\u4e3a\u5947\u6570\u5219push_up\u65f6\u8fd0\u7b97\u7b26\u4e3a\u6216\n\n\u53cd\u4e4b\u4e3a\u5f02\u6216\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int MAXN=(1<<17) + 3;\n\nint read()\n{\n    int x=0,w=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+c-48;c=getchar();}\n    return x*w;\n}\n\nstruct Segment_Tree\n{\n    int l,r;\n    int step,sum;\n}t[MAXN<<2];\nint a[MAXN];\n\ninline void Push_up(int p)\n{\n    if(t[p].step%2) t[p].sum=t[p<<1|1].sum|t[p<<1].sum;\n    else t[p].sum=t[p<<1].sum^t[p<<1|1].sum;\n}\n\nvoid Build(int p,int l,int r,int step)\n{\n    t[p].l=l,t[p].r=r,t[p].step=step;\n    if(l==r)\n    {\n        t[p].sum=a[l];\n        return ;\n    }\n    int mid=(l+r)>>1;\n    Build(p<<1,l,mid,step-1);\n    Build(p<<1|1,mid+1,r,step-1);\n    Push_up(p);\n}\n\nvoid Upd(int p,int l,int r,int x,int y)\n{\n    if(l==r)\n    {\n        t[p].sum=y;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    if(x<=mid) Upd(p<<1,l,mid,x,y);\n    else Upd(p<<1|1,mid+1,r,x,y);\n    Push_up(p);\n}\nint main()\n{\n    int len,n=read(),m=read();\n    len=1<<n;\n    for(int i=1;i<=len;i++) a[i]=read();\n    Build(1,1,len,n);\n    while(m--)\n    {\n        int x=read(),y=read();\n        Upd(1,1,len,x,y);\n        printf(\"%d\\n\",t[1].sum);\n    }\n    return 0;\n}\n\n```\n~~\u5176\u5b9elong long \u662f\u4e0d\u5fc5\u5f00\u7684\uff08\u624b\u52a8@Zerom\u5927\u4f6c\uff09~~",
        "postTime": 1563694974,
        "uid": 88736,
        "name": "Sober_Clever",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF339D \u3010Xenia and Bit Operations\u3011"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u56e0\u4e3a\u4fdd\u8bc1\u6709$2^n$\u4e2a\u6570\u5b57\u3002\u3002\u3002\n\n```\n#include<cstdio>\nconst int N=1050000;\nint n,m,x,y,q;\nint tre[N];\nvoid jia(int now,int ls,int rs,int mb,int val,int t){\n\t//t\u4e3a\u5f53\u524d\u5728\u7b2c\u51e0\u5c42\n\tif(ls>mb||rs<mb)return;\n\tif(ls==rs){\n    \t//\u6b64\u65f6t=0\n\t\ttre[now]=val;\n\t\treturn;\n\t}\n\tint noww=now<<1,nrs=ls+rs>>1;\n\tjia(noww,ls,nrs,mb,val,t-1);\n\tjia(noww|1,nrs+1,rs,mb,val,t-1);\n\tif(t&1)tre[now]=tre[noww]|tre[noww|1];\n\telse tre[now]=tre[noww]^tre[noww|1];\n    //\u7b2c1\u5c42\u4e3a|\uff0c\u7136\u540e\u4ea4\u66ff\n    //\u6545t\u4e3a\u5947\u6570\u65f6or\uff0c\u5076\u6570\u65f6xor\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tq=n;n=1<<n;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&x);\n\t\tjia(1,1,n,i,x,q);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tjia(1,1,n,x,y,q);\n\t\tprintf(\"%d\\n\",tre[1]);\n\t}\n}\n```",
        "postTime": 1540377385,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF339D \u3010Xenia and Bit Operations\u3011"
    }
]