[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n$\\ \\ \\ \\ \\ \\ \\,$\u7ed9\u4f60\u4e00\u4e2a $n$ \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u56fe\uff0c\u7b2c $i$ \u4e2a\u70b9\u7684\u6743\u503c\u4e3a $a_i$ \uff0c\u4e24\u70b9\u7684\u4e4b\u95f4\u8fb9\u6743\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u6743\u503c\u7684\u5f02\u6216\u503c\uff0c\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u3002\n\n## \u60f3\u6cd5\n\n$\\ \\ \\ \\ \\ \\ \\,$\u5176\u5b9e\u8fd9\u9053\u9898\u6ca1\u6709\u90a3\u4e48\u590d\u6742\uff0c\u8fd8\u662f\u597d\u60f3\u7684\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u6700\u5c0f\u751f\u6210\u6811\u7684\u8bdd\uff0c\u6211\u4eec\u663e\u7136\u6709\u4e00\u4e2a\u57fa\u4e8e\u8d2a\u5fc3\u7684$Kruskal$ \u7b97\u6cd5\uff0c\u590d\u6742\u5ea6 $O(n^2\\log n)$\uff0c\u60f3\u60f3\u8fd8\u662f\u7b97\u4e86\u5427\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u800c\u9047\u5230\u5173\u4e8e\u5f02\u6216\u7684\u9898\u5462\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u6709\u4e24\u79cd\u60f3\u6cd5\uff1a\u6574\u5f62\u5f02\u6216\u7ebf\u6027\u57fa\uff0c$Trie$ \u6811\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u5bb9\u6613\u60f3\u5230\u7684\uff0c\u8fd9\u9053\u9898\u5f53\u7136\u548c\u7ebf\u6027\u57fa\u6ca1\u6709\u5173\u7cfb\u4e86\uff0c\u6211\u4eec\u601d\u8003\u4e00\u4e0b $Trie$ \u6811\uff0c\u9996\u5148\uff0c\u6211\u4eec\u5148\u628a\u7b2c\u4e00\u4e2a\u6837\u4f8b\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u63d2\u5165\u7ebf\u6027\u57fa\u770b\u770b\uff1a\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190226084314824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk3Mzk2Ng==,size_16,color_FFFFFF,t_70)\n\n$\\ \\ \\ \\ \\ \\ \\,$\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u65e2\u6bcf\u4e2a\u70b9\u503c\u4e4b\u95f4\uff0c\u8981\u662f\u9700\u8981\u4e92\u76f8\u8fde\u8fb9\uff0c\u90a3\u4e48\u6c42 **\u4ed6\u4eec $Lca$ \u4ee5\u540e\u7684\u8fb9\u7684\u4ea6\u6216\u503c** \u5373\u53ef\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u7531\u6b64\u53ef\u5f97\uff0c\u82e5\u662f $Lca$ \u7684\u6df1\u5ea6\u8d8a\u6df1\uff0c\u4fbf\u7ea6\u4f18\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u63d2\u5165\u7684\uff0c\u6240\u4ee5\u6d45\u7684\u70b9\u6743\u503c\u8f83\u5927\uff0c\u8981\u5c3d\u91cf\u907f\u514d\u9009\u62e9\u6d45\u7684\u70b9\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u6211\u4eec\u4e0d\u59a8\u628a\u53ef\u80fd\u662f $Lca$ \u7684\u70b9\u62c9\u51fa\u6765\u7785\u7785\uff1a\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190226085043371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk3Mzk2Ng==,size_16,color_FFFFFF,t_70)\n$\\ \\ \\ \\ \\ \\ \\,$\u60ca\u559c\u5730\u53d1\u73b0\uff0c\u521a\u597d\u6709 $4$ \u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u62e5\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u70b9\u4e00\u5171\u6709 $4$ \u4e2a\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c $a_i$ \u4e24\u4e24\u4e0d\u7b49\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u79cd\u70b9\u4e00\u5171\u6709 $n-1$ \u4e2a\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\uff1a\n\n$\\ \\ \\ \\ \\ \\ \\,$\u6211\u4eec\u6bcf\u627e\u5230\u8fd9\u6837\u7684\u70b9\uff0c\u5c31\u66b4\u529b\u8d2a\u5fc3 $DFS$ \u4e0b\u53bb\uff1a\n- \u6bcf\u6b21\u5c3d\u91cf\u540c\u65f6\u8d70\u5de6\u513f\u5b50\u6216\u53f3\u513f\u5b50\uff1b\n- \u5982\u679c\u4e24\u4e2a\u90fd\u6709\uff0c\u5c31\u4e24\u4e2a\u90fd\u8d70\uff0c\u7136\u540e\u8fd4\u56de\u503c\u53d6 $min$ \u3002\n- \u5982\u679c\u4e24\u4e2a\u53ea\u6709\u4e0d\u4e00\u6837\u7684\u513f\u5b50\uff0c\u5c31\u5728\u8fd4\u56de\u503c\u52a0\u4e0a\u8fd9\u4e00\u6df1\u5ea6$bit$\u7684\u503c\uff0c\u7136\u540e\u7ee7\u7eed\u8d70\n\n$\\ \\ \\ \\ \\ \\ \\,$\u6700\u7ec8\u7b54\u6848\u5c31\u662f\u4ed6\u4eec\u7684 $DFS$ \u503c\u7684\u548c\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u90a3\u5982\u679c $a_i$ \u4e0d\u662f\u4e24\u4e24\u4e0d\u7b49\u7684\u8bdd\u600e\u4e48\u529e\u5462\uff0c\u5982\u679c $a_u=a_v$ \u7684\u8bdd\uff0c\u6211\u4eec\u5f53\u7136\u9996\u5148\u5efa\u4e00\u6761\u8fb9\u8fde\u63a5 $u$\uff0c$v$\uff0c\u6743\u503c\u4e3a $0$\uff0c\u5bf9\u7b54\u6848\u5b8c\u5168\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u6b63\u5e38\u5efa\uff0c\u6b63\u5e38\u641c\uff0c\u662f\u4e0d\u4f1a\u6709\u95ee\u9898\u7684\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<cctype>\n#include<cstdio>\n#include<vector>\n#include<string>\n#include<queue>\n#include<stack>\n#include<cmath>\n#include<map>\n#include<set>\nusing namespace std;\nconst int inf=0x7fffffff;\nconst double eps=1e-10;\nconst double pi=acos(-1.0);\n//char buf[1<<15],*S=buf,*T=buf;\n//char getch(){return S==T&&(T=(S=buf)+fread(buf,1,1<<15,stdin),S==T)?0:*S++;}\ninline int read(){\n\tint x=0,f=1;char ch;ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=0;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch&15);ch=getchar();}\n\tif(f)return x;else return -x;\n}\nstruct Trie{\n\tint son[2][200000*30+10],tot;\n\tvoid Insert(int a){\n\t\tint now=0,id;\n\t\tfor(int i=30;i>=0;i--){\n\t    \tid=(a>>i)&1;\n\t    \tif(!son[id][now])son[id][now]=++tot;\n\t    \tnow=son[id][now];\n\t\t}\n\t}\n\tint Find(int r1,int r2,int b){\n\t\tif(b<0) return 0;\n\t\tint a1=-1,a2=-1;\n\t\tif(son[0][r1]&&son[0][r2]) a1=Find(son[0][r1],son[0][r2],b-1);\n\t\tif(son[1][r1]&&son[1][r2]) a2=Find(son[1][r1],son[1][r2],b-1);\n\t\tif(~a1&&~a2) return min(a1,a2);\n\t\tif(~a1) return a1;if(~a2) return a2;\n\t\tif(son[1][r1]&&son[0][r2]) a1=Find(son[1][r1],son[0][r2],b-1)+(1<<b);\n\t\tif(son[0][r1]&&son[1][r2]) a2=Find(son[0][r1],son[1][r2],b-1)+(1<<b);\n\t\tif(~a1&&~a2) return min(a1,a2);\n\t\tif(~a1) return a1;if(~a2) return a2;\n\t}\n}T;\nlong long ans;\nvoid dfs(int a,int b){\n\tif(b<0) return;\n\tif(T.son[0][a]&&T.son[1][a]) ans+=1ll*T.Find(T.son[0][a],T.son[1][a],b-1)+(1ll<<b);\n\tif(T.son[0][a]) dfs(T.son[0][a],b-1);\n\tif(T.son[1][a]) dfs(T.son[1][a],b-1);\n}\nint n,v;\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)T.Insert(read());\n\tdfs(0,30);\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1551143158,
        "uid": 62758,
        "name": "\u5468\u9053_Althen",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF888G \u3010Xor-MST\u3011"
    },
    {
        "content": "\u5999\u5999\u9898\u2026\u2026\n\n~~\u770b\u5230$MST$\uff0c\u60f3\u5230$Kruskal$\uff0c\u770b\u5230\u5f02\u6216\uff0c\u60f3\u5230$Trie$~~\n\n\u9996\u5148\u6211\u4eec\u6a21\u62df\u4e00\u4e0b$Kruskal$\u7684\u6d41\u7a0b\uff1a\u627e\u5230\u6700\u5c0f\u8fb9\uff0c\u5982\u679c\u8054\u901a\u5c31\u5ffd\u7565\uff0c\u672a\u8054\u901a\u5c31\u52a0\u8fb9\n\n\u6211\u4eec\u628a\u6240\u6709\u70b9\u6743\u503c\u52a0\u5165$0-1\\ Trie$\u4e2d\uff0c\u7136\u540e\u753b\u5f20\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\u6709$n-1$\u4e2a\u70b9\u662f\u6709\u4e24\u4e2a\u513f\u5b50\u7684\uff0c\u800c\u5176\u4ed6\u70b9\u90fd\u662f\u53ea\u6709$0/1$\u4e2a\u513f\u5b50\n\n\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u5e94\u8be5\u662f$Trie$\u4e2d\uff0c$LCA$\u6df1\u5ea6\u6700\u5927\u7684\u4e24\u4e2a\u6570\n\n\u800c\u4e14\u8fd9$n-1$\u4e2a\u8282\u70b9\u662f\u4e00\u4e9b\u5728$Trie$\u4e2d\u7ed3\u5c3e\u8282\u70b9\u7684$LCA$\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u6574\u9897$Trie$\uff0c\u7136\u540e\u5bf9\u6240\u6709\u53ef\u80fd\u4e3a$LCA$\u7684\u70b9\uff0c\u627e\u5230\u4e00\u6761\u6700\u5c0f\u7684\u8fb9\uff0c\u628a\u5b83\u7684\u4e24\u9897\u5b50\u6811\u5408\u5e76\u8d77\u6765\u5373\u53ef\n\n\u4e00\u4e2a\u5c0f$trick:$\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u5143\u7d20\u6392\u597d\u5e8f\uff0c\u56e0\u4e3a$Trie$\u4e0a\u7684\u70b9\u4ece\u5de6\u5f80\u53f3\u770b\u662f\u9012\u589e\u7684\uff0c\u4e8e\u662f$Trie$\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u5c31\u4f1a\u5bf9\u5e94\u6392\u597d\u5e8f\u7684\u6570\u5217\u4e2d\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u542f\u53d1\u5f0f\u5408\u5e76\u4e4b\u7c7b\u7684\u590d\u6742\u64cd\u4f5c\u4e86\n## $Code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define inf (1 << 30)\n#define rep(i, s, t) for(int i = s; i <= t; ++ i)\n#define maxn 200005\nint n, m, a[maxn], L[maxn * 32], R[maxn * 32], ch[2][maxn * 32], rt, cnt;\nvoid insert(int&k, int id, int dep) {\n\tif(!k) k = ++ cnt;\n\tif(!L[k]) L[k] = id; R[k] = id;\n\tif(dep == -1) return;\n\tinsert(ch[(a[id] >> dep) & 1][k], id, dep - 1);\n}\nint query(int k, int x, int dep) {\n\tif(dep == -1) return 0;\n\tint v = (x >> dep) & 1;\n\tif(ch[v][k]) return query(ch[v][k], x, dep - 1);\n\treturn query(ch[v ^ 1][k], x, dep - 1) + (1 << dep);\n}\nint dfs(int k, int dep) {\n\tif(dep == -1) return 0;\n\tif(ch[0][k] && ch[1][k]) {\n\t\tint ans = inf;\n\t\trep(i, L[ch[0][k]], R[ch[0][k]]) {\n\t\t\tans = min(ans, query(ch[1][k], a[i], dep - 1) + (1 << dep));\n\t\t}\n\t\treturn dfs(ch[0][k], dep - 1) + dfs(ch[1][k], dep - 1) + ans;\n\t}\n\telse if(ch[0][k]) return dfs(ch[0][k], dep - 1);\n\telse if(ch[1][k]) return dfs(ch[1][k], dep - 1);\n\treturn 0;\n}\nsigned main() {\n\tscanf(\"%lld\", &n);\n\trep(i, 1, n) scanf(\"%lld\", &a[i]);\n\tsort(a + 1, a + n + 1);\n\trep(i, 1, n) insert(rt, i, 30);\n\tprintf(\"%lld\", dfs(rt, 30));\n\treturn 0;\n}\n```",
        "postTime": 1571066738,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF888G \u3010Xor-MST\u3011"
    },
    {
        "content": "\u6709\u4e00\u79cdB\u5f00\u5934\u7684MST\u7b97\u6cd5\n\n\u5927\u81f4\u6d41\u7a0b\u662f\u8fd9\u6837\u7684\n\n\u5f53\u524d\u6bcf\u4e2a\u96c6\u5408\u4f38\u51fa\u53bb\u4e00\u6761\u6700\u77ed\u7684\u8fb9\uff0c\u7136\u540e\u628a\u8054\u901a\u5757\u7f29\u6210\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\uff0c\u56e0\u4e3a\u6bcf\u6b21\u7f29\u96c6\u5408\u4e2a\u6570\u51cf\u534a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5bf9\u3002\n\n\u4e8b\u5b9e\u4e0a\u57fa\u672c\u4e0d\u4f1a\u8ba9\u6211\u4eec\u771f\u53bb\u5199\u5b83\uff0c\u6709\u65f6\u5019\u9700\u8981\u7528\u8fd9\u79cd\u65b9\u6cd5\u6216\u8005\u601d\u60f3\u5904\u7406\u5904MST\u3002\n\n\u6bd4\u5982\u8fd9\u4e2a\u9898\u5c31\u53ef\u4ee5\u8fd9\u4e48\u505a\uff0c\u6bcf\u6b21\u5408\u5e76\u5b9e\u9645\u4e0a\u5bf9trie\u6811\u505a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u7136\u540e\u5728\u91cc\u9762\u67e5\u4e00\u4e0b\u6700\u5c0f\u503c\u3002\n\n\u7136\u540e\u6709\u4e00\u79cd\u795e\u5947\u7684\u601d\u8def\uff0c\u8fd9\u91ccsto attack\u5de8\u4f6c\n\n\u53d1\u73b0\u6bcf\u6b21\u5408\u5e76\u7684\u96c6\u5408\u90fd\u662f\u6700\u9ad8\u4f4d\u76841\u4e0d\u540c\u7684\u4e24\u4e2a\u96c6\u5408\u8fdb\u884c\u5408\u5e76\uff0c\u4e8e\u662f\u53ef\u4ee5\u4ece\u4e0a\u5f80\u4e0b\u505a\uff0c\u4ece\u6700\u9ad8\u4f4d\u628a\u96c6\u5408\u5206\u5f00\uff0c\u7136\u540e\u67e5\u8be2\u4e24\u4e2a\u96c6\u5408\u7684\u6700\u5c0f\u8fde\u8fb9\u3002\n\n\u5982\u679c\u6211\u4eec\u628a\u6240\u6709\u5143\u7d20\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u52a0\u5165trie\uff0c\u90a3\u4e48\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u5143\u7d20\u5c31\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u91cc\u5566\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u76f4\u63a5\u904d\u5386\u4e00\u904d\u5b57\u5178\u6811\u7edf\u8ba1\u51fa\u7b54\u6848\u4e86\uff0c\u5177\u4f53\u8fc7\u7a0b\u53ef\u4ee5\u770b\u770b\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing std::min;\nusing std::max;\nconst int N=2e5+10;\nconst int inf=0x3f3f3f3f;\n#define ls ch[now][0]\n#define rs ch[now][1]\nint L[N*40],R[N*40],ch[N*40][2],tot;\nint n,a[N],root;\nvoid Insert(int &now,int x,int dep)\n{\n    if(!now) now=++tot;\n    L[now]=min(L[now],x),R[now]=max(R[now],x);\n    if(dep<0) return;\n    int bit=a[x]>>dep&1;\n    Insert(ch[now][bit],x,dep-1);\n}\nint query(int now,int val,int dep)\n{\n    if(dep<0) return 0;\n    int bit=val>>dep&1;\n    if(ch[now][bit]) return query(ch[now][bit],val,dep-1);\n    else return query(ch[now][bit^1],val,dep-1)+(1<<dep);\n}\nll dfs(int now,int dep)\n{\n    if(dep<0) return 0;\n    if(R[ls]&&R[rs])\n    {\n        int mi=inf;\n        for(int i=L[ls];i<=R[ls];i++) mi=min(mi,query(rs,a[i],dep-1));\n        return dfs(ls,dep-1)+dfs(rs,dep-1)+mi+(1<<dep);\n    }\n    if(R[ls]) return dfs(ls,dep-1);\n    if(R[rs]) return dfs(rs,dep-1);\n    return 0;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",a+i);\n    std::sort(a+1,a+1+n);\n    memset(L,0x3f,sizeof(L));\n    for(int i=1;i<=n;i++) Insert(root,i,30);\n    printf(\"%lld\\n\",dfs(root,30));\n    return 0;\n}\n```",
        "postTime": 1546579798,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF888G \u3010Xor-MST\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u5b8c\u5168\u56fe\u7684$MST$\u95ee\u9898\uff0c\u4e00\u822c\u8003\u8651\u4f7f\u7528$Boruvka$\u7b97\u6cd5\uff0c\u6211\u4eec\u8981\u5728$nlogn$\u6216$nlog^2n$\u65f6\u95f4\u5185\u6c42\u51fa\u6bcf\u4e2a\u8fde\u901a\u5757\u6700\u5c0f\u7684\u8fde\u63a5\u7684\u8fb9\uff0c\u800c\u8fd9\u4e2a\u8fb9\u6743\u4e00\u822c\u53ef\u901a\u8fc7\u70b9\u6743\u4ee5\u4e00\u5b9a\u65b9\u5f0f\u6c42\u51fa\u3002\n\n\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0c\u8981\u6c42\u7684\u5c31\u53ea\u662f\u70b9\u6743\u5f02\u6216\u6700\u5c0f\u503c\uff0c\u8003\u8651\u7528$01trie$\u7ef4\u62a4\uff0c\u5bf9\u5168\u5c40\u5efa\u4e00\u68f5$trie$\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\u5efa\u4e00\u68f5$trie$\uff0c\u6bcf\u6b21$Boruvka$\u7b97\u6cd5\u5408\u5e76\u4e24\u4e2a\u8054\u901a\u5757\u65f6\uff0c\u5408\u5e76\u76f8\u5e94\u7684$trie$\uff0c\u5728$trie$\u4e0a\u7ef4\u62a4\u5b50\u6811$size$\uff0c\u70b9\u6743\u5f02\u6216\u6700\u5c0f\u503c\u5c31\u76f4\u63a5\u5728\u5168\u5c40$trie$\u4e0e\u5f53\u524d\u8fde\u901a\u5757\u7684$trie$\u7684$size$\u4f5c\u5dee\u5f97\u5230\u7684\u6811\u4e0a\u8d2a\u5fc3\u5373\u53ef\u3002\u603b\u5171\u4f1a\u8fed\u4ee3$logn$\u6b21\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta(nlog_nlog_{size})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta(nlog_{size})$\n\n$\\large Code:$\n\n```cpp\nint a[200001], cnt, ch[200001 * 50][2], siz[200001 * 50], minn[200001], nxt[200001], fa[200001], tail[200001 * 50], tmp[200001], st[200001], top, root[200005];\ninl int find(int x) { return fa[x] ? fa[x] = find(fa[x]) : x; }\ninl void insert(int &x, int dep, int i, int w) {\n\tif (!x)x = ++cnt;\n\tif (dep < 0)return (void)(tail[x] = i, siz[x] = 1);\n\tbool c = w >> dep & 1;\n\tinsert(ch[x][c], dep - 1, i, w), siz[x]++;\n}\ninl void merge(int &p, int q) {\n\tif (!p || !q)return (void)(p = p + q);\n\tmerge(ch[p][0], ch[q][0]), merge(ch[p][1], ch[q][1]);\n\tsiz[p] = siz[ch[p][0]] + siz[ch[p][1]], tail[p] = tail[q];\n}\ninl pair<int, int> query(int x, int pre, int w) {\n\tint ans = 0;\n\tfor (re i = 30; ~i; i--) {\n\t\tbool c = w >> i & 1;\n\t\tif (ch[x][c] && siz[ch[x][c]] - siz[ch[pre][c]] > 0)x = ch[x][c], pre = ch[pre][c];\n\t\telse ans = ans | 1 << i, x = ch[x][c ^ 1], pre = ch[pre][c ^ 1];\n\t}\n\treturn make_pair(ans, tail[x]);\n}\nsigned main() {\n\tre n = read<int>(), flag;\n\tll ans = 0;\n\tfor (re i = 1; i <= n; i++)a[i] = read<int>();\n\tsort(a + 1, a + 1 + n), n = unique(a + 1, a + 1 + n) - a - 1;\n\tfor (re i = 1; i <= n; i++) insert(root[0], 30, i, a[i]), insert(root[i], 30, i, a[i]);\n\twhile (1) {\n\t\tmemset(minn, 0x3f, sizeof(minn)), flag = 0;\n\t\tfor (re i = 1; i <= n; i++) {\n\t\t\tre x = find(i), y, w;\n\t\t\tpair<int, int> ret = query(root[0], root[x], a[i]);\n\t\t\ty = find(ret.second), w = ret.first;\n\t\t\tif (x != y) {\n\t\t\t\tif (w < minn[x])minn[x] = w, nxt[x] = y;\n\t\t\t\tif (w < minn[y])minn[y] = w, nxt[y] = x;\n\t\t\t}\n\t\t}\n\t\tfor (re i = 1; i <= n; i++) {\n\t\t\tif (minn[i] < inf&&find(i) != find(nxt[i])) {\n\t\t\t\tans += minn[i], flag = 1, merge(root[find(i)], root[find(nxt[i])]), fa[find(nxt[i])] = find(i);\n\t\t\t}\n\t\t}\n\t\tif (!flag)break;\n\t}\n\twriteln(ans);\n}\n```\n\n",
        "postTime": 1571293453,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "CF888G Xor-MST"
    },
    {
        "content": "# \u9898\u89e3 - $\\mathrm{CF888G}$\n\n## \u9898\u76ee\u610f\u601d\n\n* [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF888G)\n\n* \u7ed9\u4f60\u4e00\u5f20\u5b8c\u5168\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e2a\u6743\u503c $a_i$\uff0c\u5bf9\u4e8e\u4e00\u6761 $(u,v)$ \u8fb9\u7684\u6743\u503c $W_{(u,v)}=a_u\\oplus a_v$\u3002\u6c42\u8fd9\u5f20\u5b8c\u5168\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n* $n\\leq 2\\times 10^5$\n\n## $\\mathrm{Sol}$\n\n* \u6211\u4eec\u8003\u8651\u5230\u5f02\u6216\u6700\u5c0f\u5c31\u60f3\u5230\u8ba9\u9ad8\u4f4d\u5c3d\u91cf\u4fdd\u6301\u76f8\u7b49\u3002\u5177\u4f53\u5730\uff0c\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a $a_i$ \u5efa\u4e00\u9897 $\\mathrm{Trie}$ \u6811\uff0c\u8981\u4f7f\u5f97\u5f02\u6216\u503c\u6700\u5c0f\u663e\u7136\u5c31\u662f\u5c3d\u91cf\u8d70\u540c\u4e00\u6761\u8def\u5f84\u3002\n\n* \u4e8e\u662f\u6211\u4eec\u8981\u8ba1\u7b97\u6bcf\u4e00\u9897\u5b50\u6811\u7684\u8d21\u732e\uff0c\u4e8e\u662f\u8003\u8651\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u6bcf\u6b21\u6211\u4eec\u505a $siz$ \u5c0f\u7684\u4e00\u8fb9\u5728\u5b57\u5178\u6811\u4e0a\u53bb\u8ba1\u7b97 $siz$ \u5927\u7684\u4e00\u8fb9\u7684\u8d21\u732e\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002\n\n* \u6700\u540e\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log^2 n)$\u3002\u6ce8\u610f $\\mathrm{long\\ long}$ \u4e0d\u80fd\u90fd\u5f00\u8981\u4e0d\u7136\u8981\u4fdd\u5185\u5b58\u7684\u3002\n\n## $\\mathrm{Code}$\n\n```cpp\n#include <bits/stdc++.h>\n#define For(i,a,b) for ( int i=(a);i<=(b);i++ )\n#define Dow(i,b,a) for ( int i=(b);i>=(a);i-- )\n#define GO(i,x) for ( int i=head[x];i;i=e[i].nex )\n#define mem(x,s) memset(x,s,sizeof(x))\n#define cpy(x,s) memcpy(x,s,sizeof(x))\n#define YES return puts(\"YES\"),0\n#define NO return puts(\"NO\"),0\n#define GG return puts(\"-1\"),0\n#define pb push_back\nusing namespace std;\n\nstruct IO\n{\n\t#define MAXSIZE (1 << 20)\n\t#define isdigit(x) (x >= '0' && x <= '9')\n  \tchar buf[MAXSIZE],*p1,*p2;\n  \tchar pbuf[MAXSIZE],*pp;\n  \tIO():p1(buf),p2(buf),pp(pbuf){}\n  \tinline char gc() {\n  \t\treturn getchar();\n    \tif (p1==p2) p2=(p1=buf)+fread(buf,1,MAXSIZE,stdin);\n    \treturn p1==p2?' ':*p1++;\n  \t}\n\tinline bool blank(char ch) {return ch==' '||ch =='\\n'||ch == '\\r'||ch == '\\t';}\n  \ttemplate <class T>\n  \tinline void read(T &x)\n\t{\n\t    register double tmp=1;register bool sign=0; x=0;\n\t    register char ch=gc();\n\t    for (;!isdigit(ch);ch=gc()) if(ch=='-') sign=1;\n\t    for (;isdigit(ch);ch=gc()) x=x*10+(ch-'0');\n\t    if (ch=='.') for (ch=gc();isdigit(ch);ch=gc()) tmp/=10.0,x+=tmp*(ch-'0');\n\t    if (sign) x=-x;\n  \t}\n  \tinline void read(char *s)\n\t{\n    \tregister char ch=gc();\n\t\tfor (;blank(ch);ch=gc());\n\t\tfor (;!blank(ch);ch=gc()) *s++=ch;\n    \t*s=0;\n  \t}\n  \tinline void read(char &c) {for(c=gc();blank(c);c=gc());}\n  \ttemplate<class t> inline void write(t x){\n\t\tif(x<0) putchar('-'),write(-x);\n\t\telse{if(x>9) write(x/10);putchar('0'+x%10);}\n\t}\n} io;\n\nconst int mod=1e9+7;\nconst int mo=998244353;\nconst int N=2e5+5;\nconst int M=35;\n\nint n,m,a[N],A[M],ch[N*M][2],bit[N*M],tot;\nlong long fac[M],ans;\nvector<int> vec[N*M];\n\ninline void insert(int s)\n{\n\tint u=0;\n\tvec[u].pb(s);\n\tDow(i,33,0) \n\t{\n\t\tif(!ch[u][A[i]]) ch[u][A[i]]=++tot;\n\t\tu=ch[u][A[i]];\n\t\ts-=fac[i]*A[i];\n\t\tvec[u].pb(s);\n\t\tbit[u]=i;\n\t}\n}\n\ninline long long ask(int u,int s)\n{\n\tlong long ans=0;\n\tFor(i,0,bit[u]-1) A[i]=s&1,s>>=1;\n\tDow(i,bit[u]-1,0) \n\t{\n\t\tif(ch[u][A[i]]) u=ch[u][A[i]];\n\t\telse u=ch[u][A[i]^1],ans+=fac[bit[u]];\n\t}\n\treturn ans;\n}\n\ninline long long Ask(int u)\n{\n\tif(vec[u].size()==1) return 0;\n\tif(ch[u][0]) ans+=Ask(ch[u][0]);\n\tif(ch[u][1]) ans+=Ask(ch[u][1]);\n\tif(!ch[u][0]||!ch[u][1]) return 0;\n\tlong long Mi=1e12;\n\tint flg=((int)vec[ch[u][0]].size())>(int)(vec[ch[u][1]].size());\n\tint siz=(int)vec[ch[u][flg]].size()-1;\n\tFor(i,0,siz) Mi=min(Mi,ask(ch[u][flg^1],vec[ch[u][flg]][i]));\n\tMi+=fac[bit[u]-1];\n\treturn Mi;\n}\n\nsigned main()\n{\n\tio.read(n);\n\tfac[0]=1;\n\tFor(i,1,33) fac[i]=fac[i-1]*2ll;\n\tFor(i,1,n) io.read(a[i]);\n\tsort(a+1,a+n+1);\n\tn=unique(a+1,a+n+1)-a-1;\n\tFor(i,1,n) \n\t{\n\t\tint x=a[i];\n\t\tFor(j,0,33) A[j]=x&1,x>>=1;\n\t\tinsert(a[i]);\n\t}\n\tans+=Ask(0);\n\tio.write(ans);\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1596594285,
        "uid": 308464,
        "name": "\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF888G \u3010Xor-MST\u3011"
    },
    {
        "content": "\u8003\u8651\u6bcf\u4e00\u6b21\u9009\u62e9\u6700\u5c0f\u7684\u8fb9\uff0c\u8fde\u63a5\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u8fd9\u6837\u505a\u4e00\u5b9a\u662f\u5bf9\u7684\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u8981\u4f7f\u5f97\u5f02\u6216\u548c\u6700\u5c0f\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u60f3\u5230$01Trie$\uff0c\u8003\u8651\u5c06\u6bcf\u4e00\u4e2a\u70b9\u6309\u7167\u6743\u503c\u63d2\u5230$Trie$\u4e2d\uff0c\u8fd9\u6837\u6211\u4eec\u8003\u8651\u53f6\u5b50\u8282\u70b9\u5c31\u662f\u5b9e\u9645\u5b58\u5728\u7684\u70b9\uff0c\u800c\u975e\u53f6\u5b50\u8282\u70b9\u4e00\u5b9a\u65f6\u82e5\u5e72\u5bf9\u53f6\u5b50\u8282\u70b9\u7684$lca$\u3002\n\n\u6839\u636e\u4e8c\u8fdb\u5236\u7684\u6027\u8d28\uff0c\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u5148\u5408\u5e76$lca$\u6df1\u5ea6\u5927\u7684\u70b9\u5bf9\u66f4\u4f18\uff0c\u8fd9\u6837\u6211\u4eec\u8003\u8651$dfs$\u6574\u4e2a$Trie$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u679a\u4e3e\u4ed6\u7684$0/1$\u5b50\u6811\u7684\u6240\u6709\u513f\u5b50\uff0c\u7136\u540e\u5728$1/0$\u5b50\u6811\u4e2d\u627e\u5230\u8fb9\u6743\u6700\u5c0f\u7684\u6765\u5408\u5e76\uff0c\u5982\u679c\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u63d2\u5165\uff0c\u90a3\u4e48\u7f16\u53f7\u5c31\u662f\u8fde\u7eed\u7684\uff0c\u7136\u540e\u542f\u53d1\u5f0f\u5408\u5e76\u5373\u53ef\u3002\n\n```cpp\nconst int N=2e5+5;\nconst int S=35;\n\nint n,rt,tot;\nint a[N],l[N*S],r[N*S],ch[N*S][2];\n\nvoid insert(int &o,int id,int dep)\n{\n    if(!o) o=++tot;\n    if(!l[o]) l[o]=id;\n    r[o]=id;\n    if(dep<0) return;\n    insert(ch[o][(a[id]>>dep)&1],id,dep-1);\n}\nll query(int o,ll x,int dep)\n{\n    if(dep<0) return 0;\n    ll v=(x>>dep)&1;\n    if(ch[o][v]) return query(ch[o][v],x,dep-1);\n    return query(ch[o][v^1],x,dep-1)+(1<<dep);\n}\nll dfs(int o,int dep)\n{\n    if(dep<0) return 0;\n    if(ch[o][0]&&ch[o][1])\n    {\n        ll ans=LINF;\n        if(r[ch[o][0]]-l[ch[o][0]]<r[ch[o][1]]-l[ch[o][1]])\n            for(int i=l[ch[o][0]];i<=r[ch[o][0]];++i) ans=min(ans,query(ch[o][1],a[i],dep-1)+(1<<dep));\n        else\n            for(int i=l[ch[o][1]];i<=r[ch[o][1]];++i) ans=min(ans,query(ch[o][0],a[i],dep-1)+(1<<dep));\n        return dfs(ch[o][0],dep-1)+dfs(ch[o][1],dep-1)+ans;\n    }\n    else if(ch[o][0]) return dfs(ch[o][0],dep-1);\n    else if(ch[o][1]) return dfs(ch[o][1],dep-1);\n    return 0;\n}\nint main()\n{\n    fio();\n    gi(n);\n    for(int i=1;i<=n;++i) gi(a[i]);\n    sort(a+1,a+n+1);\n    for(int i=1;i<=n;++i) insert(rt,i,30);\n    print(dfs(rt,30));\n    end();\n}\n```",
        "postTime": 1583737937,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF888G \u3010Xor-MST\u3011"
    },
    {
        "content": "$Bor\u016fvka$\u7b97\u6cd5\u3002\n\n[\u7b97\u6cd5\u4ecb\u7ecd](https://www.luogu.org/blog/Tweetuzki/solution-p3366)\n\n\u8003\u8651\u7b97\u6cd5\u6d41\u7a0b\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u679a\u4e3e\u5176\u51fa\u8fb9\u3002\u53d6\u5176\u6700\u5c0f\u51fa\u8fb9\uff0c\u5408\u5e76\u4e24\u4e2a\u8fde\u901a\u5757\u3002\n\n\u663e\u7136\u8fd9\u6837\u6bcf\u4e00\u6b21\u8fde\u901a\u5757\u7684\u4e2a\u6570$/2$\uff08\u5747\u644a\uff09\uff0c\u6240\u4ee5\u662f$O(nlog_2n)$\u7684\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u8fd9\u9053\u9898\uff1a\n\n\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u52a0\u5165$\\texttt{01 trie}$\u4e2d\uff0c\u4e00\u5f00\u59cb\u6240\u6709\u8fde\u901a\u5757\u8981\u53bb\u627e\u6700\u5c0f\u51fa\u8fb9\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$\\texttt{01 trie}$\u4e0a\u7684\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5176\u4e24\u4e2a\u513f\u5b50\uff08\u4e00\u8fb9$0$,\u4e00\u8fb9$1$\uff09 \u4e00\u5b9a\u6ca1\u6709\u8fde\u901a\u3002\n\n\u8bc1\u660e\uff1f\u6839\u636e$Bor\u016fvka$\u7b97\u6cd5+\u4e8c\u8fdb\u5236\u6765\u8bc1\u660e\uff0c$2^a>2^{a-1}+...+1$\u3002\n\u5176\u8fde\u901a\u5757\u4e00\u5b9a\u4f1a\u627e\u66f4\u5c0f\u7684\u8fb9\u8fde\u901a\uff0c\u800c\u4e0d\u662f\u4e0e\u53e6\u4e00\u4e2a\u513f\u5b50\u8fde\u901a\u5757\u8fde\u901a\u3002\n\n\u4e0b\u4e00\u6b65\uff0c\u5c31\u662f\u8fde\u901a\u6b64\u8282\u70b9\u7684$01$\u513f\u5b50\u8fde\u901a\u5757\u3002\n\n\u53ef\u4ee5\u53d1\u73b0$\\texttt{01 trie}$\u5c31\u6210\u4e3a\u4e86\u8fd9\u4e2a\u5b8c\u5168\u56fe\u5bf9\u4e8e$B$\u7b97\u6cd5\u7684\u5206\u6cbb\u6811\u3002 \n\n\u8003\u8651\u4e00\u4e2a\u5206\u6cbb\u7b97\u6cd5\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u663e\u7136\u6839\u636e$Bor\u016fvka$\u7b97\u6cd5\u6d41\u7a0b\uff0c$0,1$\u513f\u5b50\u8981\u8fde\u901a\u3002\n\n\u6240\u4ee5\u7528$1$\u513f\u5b50\u5185\u7684\u6240\u6709\u5b50\u8282\u70b9\u6c42\u4e0e$0$\u513f\u5b50\u5185\u7684\u6240\u6709\u5b50\u8282\u70b9\u6700\u5c0f\u5f02\u6216\u503c\uff0c\u4f5c\u4e3a\u8fb9\u8fde\u8d77\u6765\u3002\n\n\u7b54\u6848\u5c31\u662f\u8fd9\u4e9b\u8fb9\u7684\u548c\u4e86\u3002 \n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define int long long\nusing namespace std;\n#ifdef Fading\n#define gc getchar\n#endif\n#ifndef Fading\ninline char gc(){\n\tstatic char now[1<<16],*S,*T;\n\tif (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n\treturn *S++;\n}\n#endif\ninline ll read(){\n    register ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\nstruct node{\n\tint son[2];\n}g[6200001];\nint cnt;\nvoid insert(int T,int &rt,int w){\n\tif (!rt) rt=++cnt;\n\tif (T==-1) return;\n\tint op=(w>>T)&1LL;\n\tinsert(T-1,g[rt].son[op],w);\n}\nint query(int T,int rt,int w){\n\tif (T==-1) return 0;\n\tint op=(w>>T)&1LL;\n\tif (g[rt].son[op]) return query(T-1,g[rt].son[op],w);\n\telse return query(T-1,g[rt].son[op^1],w)+(1<<T);\n}\t\nint solve(const vector<int> &now,int rt,int T){\n\tif (!rt) return 0;\n\tint len=now.size();\n\tvector<int> D[2];\n\tfor (int i=0;i<len;i++){\n\t\tD[(now[i]>>T)&1].push_back(now[i]);\n\t}\n\tif ((int)D[0].size()==0) return solve(D[1],g[rt].son[1],T-1);\n\tif ((int)D[1].size()==0) return solve(D[0],g[rt].son[0],T-1);\n\tlen=D[1].size();\n\tll rem=(1LL<<31LL);\n\tfor (int i=0;i<len;i++)\n\t\trem=min(rem,(1LL<<T)+query(T-1,g[rt].son[0],D[1][i]));\n\treturn rem+solve(D[0],g[rt].son[0],T-1)+solve(D[1],g[rt].son[1],T-1);\t\n}\nsigned main(){\n\tvector<int> sb;sb.clear();\n\tint n=read(),root=0;\n\tfor (int i=1;i<=n;i++) sb.push_back(read());\n\tfor (int i=0;i<n;i++) \n\t\tinsert(31,root,sb[i]);\n\t//printf(\"%lld\\n\",query(31,root,6));\n\tprintf(\"%lld\\n\",solve(sb,root,31));\n\treturn 0;\n}\n\n```\n",
        "postTime": 1562651944,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF888G \u3010Xor-MST\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u5f20n\u4e2a\u70b9\u7684\u5b8c\u5168\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u70b9\u6743\uff0c\u70b9i\u548c\u70b9j\u7684\u8fb9\u7684\u6743\u503c\u4e3a$a_i\\;\\mathrm{xor}\\;a_j$,\u6c42\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u89e3\u6cd5\uff1a\u5904\u7406\u5f02\u6216\uff0c\u8003\u8651\u4f7f\u7528Trie\u6811\uff0c\u628a\u70b9\u6309\u6743\u503c\u63d2\u5165Trie\u3002\u800c\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219\u8003\u8651\u4f7f\u7528Kruskal\u7b97\u6cd5\u3002\u6ce8\u610f\u5230\uff0cTrie\u6811\u4e2d\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u7684LCA\u8d8a\u6df1\uff0c\u5219\u5f02\u6216\u503c\u8d8a\u5c0f(LCA\u76f8\u7b49\u7684\u60c5\u51b5\u4e0d\u4e00\u5b9a)\u3002\u7531\u4e8eKruskal\u7b97\u6cd5\u662f\u4ece\u5c0f\u5230\u5927\u52a0\u8fb9\uff0c\u6240\u4ee5\u4e00\u5b9a\u662fLCA\u6df1\u7684\u70b9\u5148\u88ab\u8fde\u8d77\u6765\uff0c\u6362\u53e5\u8bdd\uff0c\u53ef\u4ee5dfs Trie\u6811\uff0c\u9012\u5f52\u5730\u628a\u540c\u4e00\u68f5\u5b50\u6811\u5185\u7684\u70b9\u8fde\u901a\u3002\u4e0d\u96be\u770b\u51fa\uff0cTrie\u6811\u6070\u597d\u6709n-1\u4e2a\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u8282\u70b9\uff0c\u5b83\u4eec\u7ec4\u6210\u7684\u5b50\u6811\u5c31\u662fKruskal\u91cd\u6784\u6811\u3002\n\n  \u8003\u8651dfs\u5230\u4e00\u4e2a\u70b9x\uff0c\u5982\u679c\u5b83\u6709\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\uff0c\u6ce8\u610f\u5de6\u53f3\u4e24\u5b50\u6811\u5df2\u7ecf\u9012\u5f52\u5730\u88ab\u8fde\u901a\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u4e86\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u4e00\u6761\u8fb9\u8fde\u63a5\u5b83\u7684\u5de6\u53f3\u4e24\u68f5\u5b50\u6811\u5bf9\u5e94\u7684\u8fde\u901a\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5730\u627e\u8fd9\u6761\u8fb9\uff0c\u540c\u65f6\u4ece\u5de6\u53f3\u4e24\u8fb9\u8d70\u4e0b\u53bb\uff0c\u5982\u679c\u80fd\u540c\u65f6\u8d70\u5de6\u8fb9\u5c31\u540c\u65f6\u8d70\u5de6\u8fb9\uff0c\u80fd\u540c\u65f6\u8d70\u53f3\u8fb9\u5c31\u540c\u65f6\u8d70\u53f3\u8fb9\uff0c\u90fd\u80fd\u5c31\u90fd\u8d70(\u8981\u56de\u6eaf\uff0c\u53d6\u6700\u5c0f\u7684)\u3002\u8fd9\u6837\u7684\u8bdd\u65f6\u95f4\u4f3c\u4e4e\u4f1a\u8d85\u65f6\uff0c\u4f46\u6839\u636e\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u601d\u60f3\uff0c\u6bcf\u6b21\u8fde\u8fb9\u7684\u590d\u6742\u5ea6\u7b49\u4e8e \u6811\u7684\u6df1\u5ea6$\\times$\u5c0f\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u6545DFS+\u8fde\u8fb9\u603b\u65f6\u95f4\u4e0d\u8d85\u8fc7$O(n\\log^2 n)$.\n  \n  ```cpp\n#include <iostream>\nusing namespace std;\nint const N=30,M=2e5+1;\nstruct tree{\n\tint son[2],d;\n}t[N*M]; \nint n;\nlong long ans,pow[N],a[M],root,tot,r;\nvoid connect(int x, int y,long long now){\n\tif (t[x].d==N){\n\t\tif (now<r) r=now;\n\t\treturn;\n\t}\n\tbool flag=false;\n\tfor (int i=0;i<=1;i++)\n\t\tif (t[x].son[i] && t[y].son[i]){\n\t\t\tconnect(t[x].son[i],t[y].son[i],now);\n\t\t\tflag=true;\n\t\t}\n\tif (!flag){\n\t\tif (t[x].son[0] && t[y].son[1]) connect(t[x].son[0],t[y].son[1],now+pow[N-t[x].d-1]);\n\t\telse connect(t[x].son[1],t[y].son[0],now+pow[N-t[x].d-1]);\n\t}\n}\nvoid dfs(int x){\n\tif (!x || t[x].d==N) return;\n\tfor (int i=0;i<=1;i++) dfs(t[x].son[i]);\n\tif (t[x].son[0] && t[x].son[1]){\n\t\tr=2e9;\n\t\tconnect(t[x].son[0],t[x].son[1],pow[N-t[x].d-1]);\n\t\tans=ans+r;\n\t}\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tpow[0]=1;\n\tfor (int i=1;i<N;i++) pow[i]=pow[i-1]+pow[i-1];\n\tcin>>n;\n\troot=tot=1;\n\tfor (int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t\tint x=root; \n\t\tfor (int j=0;j<N;j++){\n\t\t\tint r=((pow[N-j-1] & a[i])>0);\n\t\t\tif (!t[x].son[r]){\n\t\t\t\tt[x].son[r]=++tot;\n\t\t\t\tt[tot].d=t[x].d+1;\n\t\t\t}\n\t\t\tx=t[x].son[r];\n\t\t} \n\t}\n\tdfs(1);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1559272939,
        "uid": 95804,
        "name": "wu3412790",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF888G \u3010Xor-MST\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF888G)\n\n\u63d0\u4f9b\u4e00\u4e2a\u6613 (luan) \u61c2 (gao) \u7684\u5206\u6cbb\u7b97\u6cd5\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u5c06\u5e8f\u5217\u6bcf\u6b21\u5206\u6210\u4e24\u534a\uff0c\u6bcf\u4e00\u534a\u90fd\u5f97\u5230\u4e86\u6700\u4f18\u65b9\u6848\uff0c\n\n\u6b64\u65f6\u8981\u505a\u7684\u5c31\u662f\u5728\u4e24\u5757\u4e2d\u5206\u522b\u627e\u51fa\u4e00\u4e2a\u6570\u8ba9\u5176\u5f02\u6216\u548c\u6700\u5c0f\uff0c\u8fd9\u53ef\u4ee5\u7528 $\\text{01trie}$ \u8f7b\u677e\u5b9e\u73b0\u3002\n\n\u4f46\u4e0d\u8fc7\u6b64\u9898\u4e2d\u5206\u7684\u65b9\u6cd5\u5f88\u6709\u8bb2\u7a76\uff0c\u5e76\u4e0d\u80fd\u76f4\u63a5\u53d6\u4e24\u7aef\u70b9\u7684\u4e2d\u70b9\u3002\n\n\u901a\u8fc7\u51e0\u6b21\u89c2\u5bdf\u53ef\u4ee5\u5f97\u51fa\u8fd9\u6837\u7684\u7ed3\u8bba\uff1a\n\n- \u5c06\u539f\u5e8f\u5217\u53bb\u91cd\u6392\u597d\u5e8f\u540e\uff0c\u5728\u6bcf\u6b21\u5206\u6cbb\u65f6\u4f20\u4e00\u4e2a\u53c2\u6570 d (\u6700\u5f00\u59cb $ d=30 $ ) \uff0c\n\u6bcf\u6b21\u6309\u4e8c\u8fdb\u5236\u4e0b\u6309\u7b2c d \u4f4d\u662f 0 \u8fd8\u662f 1 \u5206\u6210\u4e24\u534a\uff0c\n- \u63a5\u4e0b\u6765\u5bf9\u4e24\u8fb9\u7ee7\u7eed\u5206\u6cbb\u65f6 $ d\\leftarrow d-1 $ \uff0c\u5c31\u80fd\u5f97\u5230\u6700\u4f18\u65b9\u6848\u3002\n\n\n\u8bc1\u660e\uff1a\n\u8bbe\u8fd9\u6837\u5f97\u5230\u7684\u7b54\u6848\u4e3a x \uff0c\u5728\u7b2c d \u4f4d\u4e0a\u5c06\u4e00\u4e2a\u6570\u4ece\u53e6\u4e00\u534a\u4e2d\u653e\u5165\u8fd9\u4e00\u534a\u6240\u5f97\u7b54\u6848\u4e3a y \uff0c\n\n\u6b64\u65f6\u7b2c d \u4f4d\u4e0a\u81f3\u5c11\u4f1a\u8d21\u732e $ 2\\cdot 2^d $ \u3002\n\n\u5219 $ y\\geq 2\\cdot2^d $ , $x \\leq 1+2+\\dots +2^{d-1}+2^d$ \n\n$y-x\\geq 2^d-(1+2+\\dots +2^{d-1})=1>0$\n\n\u6545 $y>x$ \uff0c\u8bc1\u6bd5\u3002\n\n\u518d\u8003\u8651 $ \\text{01trie} $ \u5982\u4f55\u5b9e\u73b0\u3002\n\n\u8fd9\u53ea\u9700\u8ba9\u6bcf\u6b21\u9012\u5f52\u5b8c\u540e\u533a\u95f4\u5185\u7684\u70b9\u90fd\u63d2\u5165\u5373\u53ef\uff0c\n\n\u5148\u9012\u5f52\u5de6\u8fb9\uff0c\u518d\u5728\u53f3\u8fb9\u67e5\u4e0e\u5de6\u8fb9\u5404\u9009\u4e24\u6570\u7684\u6700\u5c0f\u5f02\u6216\u548c\uff0c\u518d\u9012\u5f52\u53f3\u8fb9\uff0c\u9012\u5f52\u5230\u53ea\u6709\u4e00\u4e2a\u6570\u65f6\u63d2\u5165\u540e\u8fd4\u56de\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $ O(n\\log(n)) $ \u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u5b9e\u9645\u4e0a\u4e5f\u65e0\u5f62\u5730\u5efa\u4e86\u4e00\u4e2a $ \\text{01trie} $ \u51fa\u6765\uff0c\u975e\u8981\u6709\u4e2a\u540d\u5b57\u4e0d\u59a8\u79f0\u4e3a $ \\text{01trie} $ \u5206\u6cbb\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+10,K=30,NN=5e6+10;\nint n,nn,x,y,rt,res,tot,cnt,tmp;\nlong long ans;int a[N];char ch;\ninline void read(int &x){\n\tx=0;ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n}\nstruct trie{int s[2],sz;}t[N*K];\nvoid insert(int &k,int x,int d,int v){\n\tif(!k)k=++tot;t[k].sz+=v;if(d<0)return;\n\tbool b=x&(1<<d);insert(t[k].s[b],x,d-1,v);\n}\nvoid inquiry(int k,int x,int d){\n\tif(d<0)return;bool b=x&(1<<d);\n\tif(t[t[k].s[b]].sz)inquiry(t[k].s[b],x,d-1);\n\telse res+=1<<d,inquiry(t[k].s[b^1],x,d-1);\n}\nvoid solve(int l,int r,int d){\n\tif(l==r)return insert(rt,a[l],K,1);\n\tregister int pos=r+1,i;\n\tfor(i=r;i>=l;--i)if((a[i]>>d)&1)pos=i;\n\tif(pos==r+1||pos==l)return solve(l,r,d-1);\n\tsolve(l,pos-1,d-1);\n\ttmp=1<<30;\n\tfor(i=pos;i<=r;++i){\n\t\tres=0;inquiry(rt,a[i],K);\n\t\ttmp=min(tmp,res);\n\t}\n\tans+=tmp;\n\tsolve(pos,r,d-1);\n}\nmain(){\n\tread(n);register int i;\n\tfor(i=1;i<=n;++i)read(a[i]);\n\tsort(a+1,a+n+1);n=unique(a+1,a+n+1)-a-1;\n\tsolve(1,n,K);\n\tprintf(\"%lld\",ans);\n}\n```\n",
        "postTime": 1629257660,
        "uid": 334380,
        "name": "Y_B_X",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[CF888G]"
    },
    {
        "content": "\u6821\u5185\u6a21\u62df\u8d5b\u7adf\u7136\u8003\u5230\u8fd9\u9898\u795e\u9898\uff0c\u592a\u795e\u5947\u4e86\u3002\n~~\u53ea\u4e0d\u8fc7\u6570\u636e\u8303\u56f4\u51cf\u534a\u5c31\u5f31\u5f88\u591a~~\n\n\u4e3b\u8981\u65b9\u6cd5\u662fTrie+DFS\uff08\u5927\u4f6c\u7684\u6700\u77ed\u8def\u592a\u5de8\u4e86\u6839\u672c\u6ca1\u5b66\u8fc7\n\n\u7531\u4e8e\u5f02\u6216\u7684\u7279\u6027\uff0c\u5f02\u6216\u503c\u5927\u5c0f\u53d6\u51b3\u4e8e\u4e8c\u8fdb\u5236\u4e0b\u76f8\u540c\u4f4d\u7f6e01\u503c\u76f8\u540c\u7684\u6570\u91cf\uff0c\u6700\u5c0f\u4ee3\u4ef7\u5c31\u662f\u76f8\u540c\u7684\u591a\uff0c\u6240\u4ee5\u53ef\u4ee5\u770b\u6210\u4e24\u9897\u5b50\u6811\u7684\u5408\u5e76\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2asize\u6570\u7ec4\uff0c\u82e5\u6839\u7684\u4e24\u7aef\u90fd\u6709\u8282\u70b9\u5c31\u8fdb\u884c\u5408\u5e76\uff1a\u679a\u4e3e\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u6240\u6709\u6811\uff0c\u5230\u53e6\u4e00\u4e2a\u5b50\u6811\u4e2d\u67e5\u627e\u6700\u5c0f\u5f02\u6216\u548c\uff0c\u66f4\u65b0\u7b54\u6848\u3002\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=200010,INF=0x3f3f3f3f;\nint n,tot=1;\nlong long cost,ans;\nint ch[N<<5][2],si[N<<5],val[N<<5],num[N<<5];\ninline int read()//\u517b\u6210\u51fd\u6570\u52a0inline\uff0c\u5927\u6570\u636e\u5199\u5feb\u8bfb\u7684\u597d\u4e60\u60ef\uff08\u4e0d\n{\n\tint f=1,ret=0;char c=getchar();\n\twhile(c>'9'||c<'0')\n\t{\n\t\tif(c=='-')\n\t\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0')\n\t{\n\t\tret=ret*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f*ret;\n}\ninline void insert(int a)\n{\n\tint u=0;\n\tfor(int i=1<<30;i;i>>=1)\n\t{\n\t\tint c=(a&i)?1:0;\n\t\tif(!ch[u][c])\n\t\t{\n\t\t\tmemset(ch[tot],0,sizeof(ch[tot]));\n\t\t\tnum[tot]=val[tot]=0;\n\t\t\tch[u][c]=tot++;\n\t\t}\n\t\tu=ch[u][c];\n\t\tnum[u]++;\n\t}\n\tval[u]=a;\n}//trie\u6811\u8bfb\u5165\ninline int gets(int x)\n{\n\tif(!ch[x][0]&&!ch[x][1])\n\t\treturn si[x]=1;\n\tif(ch[x][0]) si[x]+=gets(ch[x][0]);\n\tif(ch[x][1]) si[x]+=gets(ch[x][1]);\n\treturn si[x];\n}//\u521d\u59cb\u5316size\ninline int query(int x,int p)\n{\n\tint u=0;\n\tfor(int i=1<<30;i;i>>=1)\n\t{\n\t\tint c=(x&i)?1:0;\n\t\tif(!ch[u][c])\n\t\t\tc=1-c;\n\t\tif(p==u) c=1-c;\n\t\tu=ch[u][c];\n\t}\n\treturn u;\n}\ninline void calc(int x,int u)\n{\n\tif(ch[x][0]) calc(ch[x][0],u);\n\tif(ch[x][1]) calc(ch[x][1],u);\n\tif(!ch[x][0]&&!ch[x][1])\n\t{\n\t\tint c=query(val[x],u);\n\t\tcost=min(cost,(long long)val[c]^val[x]);\n\t}\n}\ninline void dfs(int x)\n{\n\tif(ch[x][0]) dfs(ch[x][0]);\n\tif(ch[x][1]) dfs(ch[x][1]);\n\tif(ch[x][0]&&ch[x][1])\n\t{\n\t\tcost=INF;\n\t\tint lson=ch[x][0],rson=ch[x][1];\n\t\tif(si[lson]<si[rson]) calc(lson,x);\n\t\telse calc(rson,x);//\u6839\u636e\u6df1\u5ea6\u5927\u5c0f\u5224\u65ad\n\t\tans+=cost;\n\t}\n}//dfs\u90e8\u5206\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint a;\n\t\ta=read();\n\t\tinsert(a);\n\t}\n\tgets(0);\n\tdfs(0);\n\tcout<<ans;//\u9707\u60ca\uff01\u7528scanf\u7adf\u7136\u4f1a\u6ea2\u51fa\uff01\n\treturn 0;\n}\n```",
        "postTime": 1540954162,
        "uid": 26676,
        "name": "tonylin1026",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF888G \u3010Xor-MST\u3011"
    },
    {
        "content": "\u672c\u9898\u5728 Trie \u4e0a\u7206\u641c\u7684\u590d\u6742\u5ea6\u4e5f\u662f $O(n\\log n\\log\\omega)$\u3002\uff08\u4ee3\u7801\u9644\u540e\uff09\r\n\r\n\u4ee3\u7801\u4e2d `qry()` \u7684\u590d\u6742\u5ea6\uff0c\u770b\u4f3c\u662f $O(n^2\\log\\omega)$ \u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u53ea\u6709 $O(n\\log n\\log\\omega)$\u3002\r\n\r\n\u4ee4 $size_x$ \u8868\u793a\u5b50\u6811 $x$ \u4e2d\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\uff0c\u6bcf\u6b21\u8fdb\u5165 `qry(x, y, d)` \u53ea\u4f1a\u904d\u5386 $\\min(size_x,size_y)$ \u4e2a\u53f6\u5b50\u8282\u70b9\u3002\r\n\r\n\u8bc1\u660e\u5982\u4e0b\uff1a\r\n\r\n$\\min(size_x,size_y)=1$ \u65f6\u663e\u7136\u3002\r\n\r\n$\\min(size_x,size_y)=k>1$ \u65f6\uff0c\u4f7f\u7528\u5f52\u7eb3\u6cd5\u3002\u8003\u8651\u7b2c\u4e00\u4e2a\u5206\u53c9\u70b9\uff0c$x$ \u5206\u6210 $a$\u3001$b$\uff0c$y$ \u5206\u6210 $c$\u3001$d$\u3002\r\n\r\n\u4e0d\u59a8\u8bbe $size_a\\ge size_b$\uff0c$size_c\\ge size_d$\uff0c$size_a\\ge size_c$\uff0c$\\max(size_b,size_d)>0$\u3002\r\n\r\n\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86 $\\min(size_x,size_y)<k$ \u65f6\u53ea\u4f1a\u904d\u5386 $\\min(size_x,size_y)$ \u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u56e0\u6b64 `qry(a, c, d - 1)` \u53ea\u4f1a\u904d\u5386 $\\min(size_a,size_c)=size_c$ \u4e2a\u53f6\u5b50\u8282\u70b9\u3002\u8981\u4f7f\u53e6\u4e00\u4fa7\u7684\u590d\u6742\u5ea6\u6700\u52a3\uff08\u5373\u4f7f $size_b$ \u5c3d\u91cf\u5927\uff09\uff0c\u5c31\u8981\u8ba9 $size_a=size_c$\u3002\r\n\r\n\u6b64\u65f6\u904d\u5386\u7684\u53f6\u5b50\u8282\u70b9\u6570 $=\\min(size_a,size_c)+\\min(size_b,size_d)=\\min(size_x,size_y)$\uff0c\u5f97\u8bc1\u3002\r\n\r\n\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u6ce8\u91ca\u90e8\u5206\u7684\u526a\u679d\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\u3002\r\n\r\nps: \u5176\u5b9e\u4e0d\u526a\u679d\u8282\u70b9\u4e2a\u6570\u4e5f\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u6bcf\u4e00\u4e2a\u5206\u53c9\u5e38\u6570\u4f1a $\\times 2$\uff0c\u867d\u7136 $n=2\\times{10}^5$ \u5361\u4e0d\u6ee1 $\\omega$\uff0c\u4f46\u662f\u7528\u65f6\u4f1a\u5927\u5f88\u591a\u3002\r\n\r\n\u53c8\u7531\u4e8e `dfs()` \u672c\u8d28\u4e0a\u662f\u5728\u5408\u5e76 Trie \u7684\u4e24\u9897\u5b50\u6811\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u5c31\u662f\u542f\u53d1\u5f0f\u5408\u5e76\u7684 $O(n\\log n)$\uff0c\u518d\u4e58\u4e0a\u6811\u9ad8\u5c31\u662f $O(n\\log n\\log\\omega)$\u3002\r\n\r\n```cpp\r\nint n, a[maxn]; ll A;\r\n\r\nstruct Trie {\r\n    int s[maxm][2], tt;\r\n    void ins(int x) {\r\n        for (int i = 30, u = 0, p; i--; ) {\r\n            if (!s[u][p = (x >> i) & 1]) s[u][p] = ++tt;\r\n            u = s[u][p];\r\n        }\r\n    }\r\n    int qry(int x, int y, int d) {\r\n        if (d < 0) return 0;\r\n        int A = inf;\r\n        for (int i = 0; i < 2; ++i) if (s[x][i] && s[y][i])\r\n            A = min(A, qry(s[x][i], s[y][i], d - 1));\r\n        if (A != inf) return A; // \u526a\u679d\r\n        for (int i = 0; i < 2; ++i) if (s[x][i] && s[y][!i])\r\n            A = min(A, qry(s[x][i], s[y][!i], d - 1) + (1 << d));\r\n        return A;\r\n    }\r\n    void dfs(int u, int d) {\r\n        if (d < 0) return;\r\n        if (s[u][0] && s[u][1]) A += qry(s[u][0], s[u][1], d - 1) + (1 << d);\r\n        if (s[u][0]) dfs(s[u][0], d - 1);\r\n        if (s[u][1]) dfs(s[u][1], d - 1);\r\n    }\r\n} tr;\r\n\r\nint main() {\r\n    rd(n);\r\n    for (int i = 1; i <= n; ++i) rd(a[i]);\r\n    sort(a + 1, a + n + 1), n = unique(a + 1, a + n + 1) - a - 1;\r\n    for (int i = 1; i <= n; ++i) tr.ins(a[i]);\r\n    tr.dfs(0, 30 - 1);\r\n    printf(\"%lld\", A);\r\n    return 0;\r\n}\r\n```",
        "postTime": 1667051049,
        "uid": 151589,
        "name": "_\u2062\u3000",
        "ccfLevel": 0,
        "title": "CF888G \u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/CF888G)\n\n\u6700\u5c0f\u751f\u6210\u6811\u662f+Trie\u3002\n\n\u8fd9\u9898\u597d\u795e\u554a\uff0c\u5b8c\u5168\u4e0d\u4f1a\uff0c\u770b\u4e86\u9898\u89e3\u624d\u77e5\u9053\u8fd9\u9898\u9700\u8981\u7b2c\u4e09\u79cd\u6700\u5c0f\u751f\u6210\u6811\u7684\u505a\u6cd5\u554a\uff0c\u90a3\u4e2a\u597d\u50cf\u53ebSollin(Boruvka)\u7b97\u6cd5\uff0c\u5177\u4f53\u539f\u7406\u770b\u8fd9\u7bc7\u535a\u5ba2\uff1a[\u8fd9\u91cc](https://blog.csdn.net/djs_k_d/article/details/48131303)\u3002\u90a3\u4e2a\u7b97\u6cd5\u5c31\u662f\u6162\u6162\u51cf\u534a\u8fde\u901a\u5757\u6570\u91cf\uff0c\u90a3\u5728\u8fd9\u9898\u91cc\u5728\u51cf\u5c11\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u68f5Trie\u6811\u5c31\u597d\u4e86\u3002\n\ncode:\n```\n//2018.9.16 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=2e5+10;\nnamespace MAIN{\n    namespace Trie{\n        struct Trie{\n            int son[2];\n        }tr[N<<5];\n        int cnt;\n        inline void clean(const res &x){\n            memset(tr[x].son,0,sizeof(tr[x].son));\n        }\n        void insert(res &x,const res &w,const res &p){\n            if(!x)x=++cnt,clean(cnt);\n            if(p==-1)return;\n            insert(tr[x].son[(w>>p)&1],w,p-1);\n        }\n        int query(const res &x,const res &w,const res &p) {\n            if(p==-1)return 0;\n            res c=(w>>p)&1;\n            return tr[x].son[c]?query(tr[x].son[c],w,p-1):query(tr[x].son[c^1],w,p-1)^(1<<p);\n        }\n    }\n#define pb push_back\n    int n;\n    LL solve(vector<int> qaq,const res &p){\n        if(!qaq.size()||p==-1)return 0;\n        vector<int> vec[2];\n        for(res i=0,siz=qaq.size();i<siz;i++)vec[(qaq[i]>>p)&1].pb(qaq[i]);\n        res ret=0,rt;\n        if(vec[0].size()&&vec[1].size()){\n            ret=1<<(p+1);\n            rt=0;\n            Trie::cnt=0;\n            for(res i=0,siz=vec[0].size();i<siz;i++)Trie::insert(rt,vec[0][i],30);\n            for(res i=0,siz=vec[1].size();i<siz;i++)ret=_min(ret,Trie::query(rt,vec[1][i],30));\n        }\n        return ret+solve(vec[0],p-1)+solve(vec[1],p-1);\n    }\n    inline void MAIN(){\n        n=read();\n        vector<int> a;\n        for(res i=1;i<=n;i++)a.pb(read());\n        printf(\"%lld\\n\",solve(a,30));\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1537086151,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF888G\u3011Xor-MST"
    }
]