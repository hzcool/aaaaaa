[
    {
        "content": "\u672c\u6765\u53ea\u662f\u60f3\u53d1\u5e03\u4e00\u7bc7\u9898\u89e3\uff0c\u7ed3\u679c\u5199\u5230\u4e00\u534a\u628a\u6211\u4e4b\u524d\u7684AC\u4ee3\u7801\u53c9\u6389\u4e86\u2026\u202623333\u2026\u2026\n\n\u9898\u76ee\u5927\u610f\uff1a\u65e0\u5411\u56fe\u6700\u5c11\u52a0\u591a\u5c11\u6761\u8fb9\uff0c\u4f7f\u5f97\u56fe\u4e2d\u5b58\u5728\u4e00\u6761\u4ece$1$\u53f7\u70b9\u51fa\u53d1\u7684\u6b27\u62c9\u56de\u8def\u3002\n\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u8fde\u901a\u56fe\u4e2d\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u5145\u8981\u6761\u4ef6\uff1a**\u6240\u6709\u8282\u70b9\u7684\u5ea6\u6570\u5747\u4e3a\u5076\u6570**\u3002\n\n\u6240\u4ee5\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u60f3\u6cd5\u5c31\u662f\uff1a\u6211\u4eec\u627e\u51fa\u6765\u6240\u6709\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u70b9\u4e24\u4e24\u76f8\u8fde\uff0c\u5f97\u5230\u7684\u56fe\u7684\u5ea6\u6570\u5c31\u5168\u90e8\u662f\u5076\u6570\u4e86\uff01\n\n\u4f46\u662f\u8fd9\u6837\u5e76\u4e0d\u5bf9\u3002\u539f\u56e0\u5f88\u7b80\u5355\uff1a\u5b58\u5728\u6b27\u62c9\u56de\u8def\u9700\u8981\u5148\u4fdd\u8bc1\u539f\u56fe\u662f\u4e00\u4e2a**\u8fde\u901a\u56fe**\uff01\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5728\u8fde\u8fb9\u7684\u8fc7\u7a0b\u4e2d\u8fd8\u9700\u8981\u4fdd\u8bc1\u65b0\u56fe\u8fde\u901a\u3002\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u8fde\u901a\u5757\u6240\u6709\u8282\u70b9\u7684\u5ea6\u6570\u5747\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4ece\u8fd9\u4e2a\u8fde\u901a\u5757\u5411\u522b\u7684\u8fde\u901a\u5757\u989d\u5916\u8fde\u4e24\u6761\u8fb9\uff08\u4e3a\u4ec0\u4e48\u662f\u4e24\u6761\u8fb9\uff1f\u56e0\u4e3a\u4e00\u6761\u8fb9\u7684\u8bdd\u5c31\u51fa\u73b0\u5947\u6570\u70b9\u4e86\uff09\u3002\u8fd9\u6837\u4f1a\u5bfc\u81f4\u603b\u7b54\u6848\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a+1\uff08\u56e0\u4e3a\u4e00\u6761\u8fb9\u88ab\u7b97\u4e86\u4e24\u6b21\uff09\n\n\u5982\u679c\u8fd9\u4e2a\u8fde\u901a\u5757\u5b58\u5728\u5947\u6570\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u7559\u4e24\u4e2a\u5947\u6570\u70b9\uff0c\u4ece\u8fd9\u4e24\u4e2a\u5947\u6570\u70b9\u51fa\u53d1\u5411\u5916\u8fde\u63a5\u4e24\u6761\u8fb9\u3002\u8fd9\u6837\u5e76\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u6700\u540e\u8fd8\u6709\u4e00\u4e2a\u5751\uff1a\u8fd9\u9053\u9898\u8981\u6c42\u7684\u662f\u4ece$1$\u53f7\u70b9\u51fa\u53d1\u7684\u6b27\u62c9\u56de\u8def\u3002\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u90e8\uff08\u6ce8\u610f\u4e0d\u80fd\u662f$1$\u53f7\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\uff01\uff09\u6ca1\u6709\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7ba1\u8fd9\u4e2a\u8fde\u901a\u5757\uff0c\u56e0\u4e3a\u6ca1\u5fc5\u8981\u5230\u8fbe\u8fd9\u4e2a\u70b9\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n1\u3001\u7edf\u8ba1\u6240\u6709\u8282\u70b9\u7684\u5ea6\u6570\uff0c\u5e76\u4e14\u6c42\u51fa\u5185\u90e8\u6709\u8fb9\u7684\u6216\u8005\u5305\u542b$1$\u7684\u8fde\u901a\u5757\u6570\u91cf\u3002\n\n2\u3001\u5982\u679c\u56fe\u4e2d\u4ec5\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa\u5947\u6570\u70b9\u4e2a\u6570$/2$\u3002\n\n3\u3001\u5426\u5219\uff0c\u4f9d\u6b21\u67e5\u770b\u6bcf\u4e00\u4e2a\u6709\u8fb9\u7684\u6216\u5305\u542b$1$\u7684\u8fde\u901a\u5757\u3002\u5148\u8ba9$ans+=num/2$\uff0c$num$\u8868\u793a\u5947\u6570\u70b9\u4e2a\u6570\u3002\u518d\u67e5\u770b\u8fd9\u4e2a\u8fde\u901a\u5757\u5185\u90e8\u662f\u5426\u5b58\u5728\u5947\u6570\u70b9\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219$ans++$\u3002\n\n4\u3001\u8f93\u51fa\u3002\n\n\u5949\u4e0a\u6539\u540e\u7684\u4ee3\u7801\uff08\u5982\u8fd8\u6709BUG\uff0c\u6b22\u8fceHack\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,m,pa[1000005],num[1000005],size[1000005];\nbool d[1000005],flag[1000005];\nint find(int x)\n{\n\treturn x==pa[x]?x:pa[x]=find(pa[x]);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t  pa[i]=i,size[i]=1;\n\tflag[1]=1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tint x=find(u),y=find(v);\n\t\td[u]^=1;\n\t\td[v]^=1;\n\t\tif(x!=y)\n\t\t{\n\t\t\tif(size[x]>size[y])swap(x,y);\n\t\t\tpa[x]=y;\n\t\t}\n\t\tflag[y]=1;\n\t}\n\tint rest=0;\n\tfor(int i=1;i<=n;i++)\n\t  if(i==find(i)&&flag[find(i)])\n\t    rest++;\n\tif(!flag[find(1)])rest++;\n\tfor(int i=1;i<=n;i++)\n\t  if(d[i])num[find(i)]++;\n\tif(rest==1)\n\t{\n\t\tprintf(\"%d\\n\",num[find(1)]/2);\n\t\treturn 0;\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(find(i)==i&&flag[i])\n\t\t{\n\t\t\tans+=num[i]>>1;\n\t\t\tif(num[i]==0)ans++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1552612524,
        "uid": 54214,
        "name": "wucstdio",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF209C \u3010Trails and Glades\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u770b\u7740\u9053\u9898\uff0c\u4ee5\u4e3a\u662f\u9053\u6c34\u7d2b\u9898\uff0c\u7136\u540e\u88ab\u673a\u623f\u5927\u4f6c\u4e00\u773c\u8bc6\u7834\uff1a\u56fe\u4e0d\u8054\u901a\u3002\u4f46\u5176\u5b9e\u505a\u597d\u5206\u7c7b\u8ba8\u8bba\uff0c\u95ee\u9898\u4e5f\u80fd\u8fce\u5203\u800c\u89e3\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u6b27\u62c9\u8def\u5f84](https://www.luogu.com.cn/blog/20080316xzh/ou-la-lu-jing)\n\n\u56e0\u4e3a\u56fe\u4e0d\u8054\u901a\uff0c\u6240\u4ee5\u5728\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u5ea6\u6570\u4e3a\u5076\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd8\u8981\u8003\u8651\u5c06\u5404\u4e2a\u8fde\u901a\u5757\u4e32\u8d77\u6765\u64cd\u4f5c\u6700\u5c0f\uff0c\u8ba9\u6211\u4eec\u5206\u4ee5\u4e0b\u60c5\u51b5\u3002\n\n## Solution\n\u6211\u4eec\u9996\u5148\u8bb0 $odd$ \u4e3a\u5947\u70b9\u6570\uff0c$even$ \u4e3a\u5076\u6570\u8054\u901a\u5757\u6570\u3002 \n\n1.  \u4ec5\u6709\u5947\u6570\u8fde\u901a\u5757\u3002\n\n\u8fd9\u4e2a\u662f\u6700\u597d\u8ba8\u8bba\u7684\uff0c\u56e0\u4e3a\u5947\u6570\u8282\u70b9\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u4e24\u4e24\u914d\u5bf9\uff0c\u7b54\u6848\u4e3a $odd/2$\u3002\n\n2. \u4ec5\u6709\u5076\u6570\u8054\u901a\u5757\u3002\n\n\u8fd9\u4e2a\u6bd4\u8f83\u96be\u60f3\uff0c\u591a\u753b\u56fe\u8fd8\u662f\u53ef\u4ee5\u641e\u51fa\u6765\u7684\uff0c\u770b\u4e0b\u9762\u7684\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fnlzt3cs.png)\n\n\u6709\u4e09\u4e2a\u8fde\u901a\u5757\uff0c\u4e14\u90fd\u4e3a\u5076\u6570\u8fde\u901a\u5757\uff0c\u7531\u4e8e\u6bcf\u4e2a\u5076\u70b9\u8981\u591a\u8fde\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u5c31\u4f1a\u60f3\u5230\u5c06\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u6b27\u70b9\u62a0\u51fa\u6765\u5e76\u4e14\u8fde\u6210\u73af\uff0c\u8fd9\u5c31\u662f\u6700\u4f18\u65b9\u6848\uff0c\u7b54\u6848\u4e3a $even$\u3002\n\n3. \u4e24\u79cd\u8fde\u901a\u5757\u90fd\u6709\u3002\n\n\u7ee7\u7eed\u753b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zgzfgg4f.png)\n\n\u4f1a\u53d1\u73b0\u8fd9\u4e00\u60c5\u51b5\u7684\u5904\u7406\u65b9\u5f0f\u4e0e\u64cd\u4f5c 2 \u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u5c06\u5076\u6570\u8fde\u901a\u5757\u8fde\u6210\u73af\uff0c\u53ea\u4e0d\u8fc7\u56e0\u4e3a\u6709\u5947\u70b9\uff0c\u6240\u4ee5\u4f1a\u4f18\u5148\u9009\u62e9\u5176\u4e2d\u4e24\u4e2a\u5947\u70b9\u5171\u540c\u4e32\u6210\u73af\uff0c\u6240\u4ee5\u8d21\u732e\u4e3a $even+1$\uff0c\u4f46\u522b\u5fd8\u8bb0\u5269\u4e0b\u7684 $odd-2$ \u4e2a\u5947\u70b9\uff0c\u4ed6\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c\u64cd\u4f5c 1 \uff0c\n\u8d21\u732e\u4e3a $even+1+(odd-2)/2=even+odd/2$\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u64cd\u4f5c 1 \u65f6 $even$ \u4e3a 0\uff0c\u64cd\u4f5c 2 \u65f6 $odd$ \u4e3a 0\uff0c\u8d21\u732e\u90fd\u4e3a $even+odd/2$\uff0c\u6240\u4ee5\u4e5f\u4e0d\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u4e86\uff0c\u6210\u529f\u628a\u8fd9\u4e2a\u9898\u8f6c\u5316\u6210\u4e86\u7ed3\u8bba\u9898\u3002\u770b\u522b\u7684\u9898\u89e3\u6ca1\u6709\u8fd9\u4e48\u5199\u7684\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u591a\u591a\u70b9\u8d5e\u3002\n\n## Detail\n\u5f53\u6574\u4e2a\u56fe\u4e3a\u4e00\u4e2a\u5076\u6570\u8fde\u901a\u5757\u65f6\uff0c\u7b54\u6848\u4e3a $0$\uff0c\u800c\u6309\u7167\u4e0a\u9762\u5199\u4f1a\u8f93\u51fa $1$\uff0c\u9700\u7279\u5224\u4e00\u4e0b\u3002\n\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+100;\nint n,m,f[N],in[N],odd,even;\nvector<int>G[N];\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        G[u].push_back(v);\n        G[v].push_back(u);\n        in[u]++;in[v]++;\n    }\n    for(int i=1;i<=n;i++){\n        if(f[i]||(i!=1&&G[i].empty()))continue;\n        queue<int>q;\n        bool flag=false;\n        f[i]=i;\n        q.push(i);\n        while(!q.empty()){\n            int now=q.front();\n            q.pop();            \n            if(in[now]%2){\n                odd++;flag=true;\n            }\n            for(int j=0;j<G[now].size();j++){\n                int v=G[now][j];\n                if(f[v])continue;\n                f[v]=i;\n                q.push(v);\n            }\n        }\n        if(!flag)even++;\n    }\n    int ans=even+odd/2;\n    if(even==1&&!odd)ans--;\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1667349770,
        "uid": 327295,
        "name": "GalwayGirl",
        "ccfLevel": 6,
        "title": "Trails and Glades\u6b27\u62c9\u56de\u8def"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF209C)\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u95ee\u81f3\u5c11\u52a0\u591a\u5c11\u6761\u8fb9\u80fd\u4f7f\u56fe\u4e2d\u5b58\u5728\u6709\u4e00\u6761\u4ece 1 \u5f00\u59cb\u7684\u6b27\u62c9\u56de\u8def\u3002\n\n##### \u6211\u4eec\u8003\u8651\uff0c\u56e0\u4e3a\u662f\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u90fd\u662f\u5076\u70b9\n\n\n\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u628a\u5947\u70b9\u4e24\u4e24\u76f8\u8fde\u5c31\u53ef\u4ee5\u4e86\uff1f\n\n\u4f46\u8fd9\u6837\u5e76\u4e0d\u5bf9\uff0c\u56e0\u4e3a\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u56fe\u662f\u5426\u5b58\u5728\u6b27\u62c9\u8def\u5f84\u6216\u6b27\u62c9\u56de\u8def\u65f6\uff0c\u9996\u5148\u8fd9\u4e2a\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n\n\u7b2c\u4e00\u79cd\uff1a\u8fd9\u4e2a\u8fde\u901a\u5757\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u5076\u70b9\uff0c\u90a3\u4e48\u53ea\u8981\u989d\u5916\u5411\u5176\u4ed6\u8fde\u901a\u5757\u8fde\u4e24\u6761\u8fb9\uff0c\n\u56e0\u4e3a\u5982\u679c\u53ea\u8fde\u4e00\u6761\u5c31\u4f1a\u51fa\u73b0\u5947\u70b9\u4e86\u3002\n\n\u7b2c\u4e8c\u79cd\uff1a\u8fd9\u4e2a\u8fde\u901a\u5757\u5b58\u5728\u5947\u70b9\uff0c\u6bcf\u4e2a\u5947\u6570\u70b9\u9700\u8981\u5411\u5916\u8fde\u4e00\u6761\u8fb9\uff0c\u8bb0\u5f97\u9664\u4ee5\u4e8c\n\u56e0\u4e3a\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u53ea\u9700\u8981\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u5b8c\u4e86\u5417\uff0c\u8fd9\u8fd8\u6709\u4e2a\u5751\uff1a\uff08\u6211\u5c31\u88ab\u5751\u4e86\u2026\u2026\n\n\u8fd9\u9053\u9898\u5f3a\u5236\u4ece\u7ed3\u70b9 1 \u51fa\u53d1\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u5427\n\n1. \u5efa\u56fe\u3002\n\n2. \u626b\u56fe\u7edf\u8ba1\u7b54\u6848\uff0c\u4e2d\u95f4\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\u3002\n\n\n\u518d\u6765\u8c08\u51e0\u4e2a\u9898\u76ee\u7684\u5751\uff08\u6211\u5c31\u4e2d\u4e86\uff0c\u522b\u5b66\u6211\n\n\u9996\u5148\uff0c\u9898\u76ee\u8bf4\u7684\u662f\u8fb9\u7684\u6b27\u62c9\u56de\u8def\uff0c\u5982\u679c 1 \u6240\u5728\u7684\u8fde\u901a\u5757\u4e4b\u5916\u8fd8\u5b58\u5728\u4e00\u4e2a\u5b64\u7acb\u70b9\uff0c\u90a3\u6211\u4eec\u662f\u4e0d\u7528\u989d\u5916\u518d\u8fde\u4e00\u6761\u8fb9\u7684\uff0c\u56e0\u4e3a\u90a3\u4e2a\u5b64\u7acb\u70b9\u6ca1\u6709\u8fde\u8fb9\uff0c\u9519\u7b2c 7 \u4e2a\u70b9\u7684\u540c\u5b66\u6ce8\u610f\u4e86\u3002\n\n\u8fd8\u6709\u4e00\u70b9\uff0c\u5982\u679c\u90a3\u4e2a\u5b64\u7acb\u70b9\u5b58\u5728\u81ea\u73af\u6211\u4eec\u8981\u683c\u5916\u8fde\u8fb9\uff0c\u56e0\u4e3a\u5b83\u6709\u8fb9\u554a\uff0c\u9519\u7b2c 12 \u4e2a\u70b9 \u7684\u540c\u5b66\u6ce8\u610f\u4e86\u3002\n\n _~~**reader\uff1aTalk is cheap,show me the code!!!**~~_ \n \n \u8be6\u7ec6\u6ce8\u91ca\u653e\u4ee3\u7801\u91cc\u4e86\u2026\u2026\n \n \n \n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+10;\nint n,m;\nint s,cnt;\nint flag;\nint p[N];\t\t\nint degree[N];\nint vis[N];\nvector<int>G[N];\nint ans;\n\nvoid DFS(int x){\n\tvis[x]=1;\n\tif(degree[x]&1) flag=1;\t\t\t\t\t//\u8fd9\u4e2a\u8fde\u901a\u5757\u91cc\u6709\u5947\u70b9\n\tfor(int i=0;i<G[x].size();i++){\n\t\tif(!vis[G[x][i]]) DFS(G[x][i]);\t\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tint u,v;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\t//\u6ce8\u610f\u65e0\u5411\u56fe\uff0c\u8981\u53cc\u5411\u5b58\u50a8\n\t\tp[u]=1; p[v]=1;\t\n\t\tif(u==v) continue;\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t\tdegree[u]++; degree[v]++;\n\t}\n\tp[1]=1;\t\t\t\t\t\t\t//1\u5fc5\u987b\u8bbf\u95ee\uff0c\u6240\u4ee5\u8bbe\u4e3a1\n\tfor(int i=1;i<=n;i++){\n\t\tif(degree[i]&1){\t\t\t//\u5982\u679c\u662f\u5947\u70b9\uff0cans++\uff0cs\u8bb0\u5f55\u56fe\u91cc\u6709\u6ca1\u6709\u5947\u70b9\n\t\t\tans++; s=1;\t\t\t\t\n\t\t}\n\t\telse if(!vis[i] && p[i]){\t//\u5982\u679c\u662f\u5076\u70b9\uff0c\u672a\u66fe\u8bbf\u95ee\u8fc7\uff0c\u8fd8\u6709\u8fb9\u4e0e\u5b83\u76f8\u8fde\uff0c\u5c31\u662f\u9047\u5230\u4e86\u65b0\u7684\u8fde\u901a\u5757\n\t\t\tcnt++;\n\t\t\tflag=0;\t\t\t\t\t//\u5224\u65ad\u8fd9\u4e2a\u8fde\u901a\u5757\u662f\u4e0d\u662f\u90fd\u662f\u5076\u70b9\n\t\t\tDFS(i);\n\t\t\tif(!flag) ans+=2;\t\t//\u5982\u679c\u90fd\u662f\u5076\u70b9\uff0cans+=2\uff0c\u56e0\u4e3a\u540e\u9762\u8981\u9664\u4ee52\uff0c\u6240\u4ee5\u52a02\n\t\t}\n\t}\n\tif(!s && cnt==1) ans=0;\t\t\t//\u5982\u679c\u8fd9\u4e2a\u56fe\u91cc\u6ca1\u6709\u5947\u70b9\uff08\u90fd\u662f\u5076\u70b9\uff09\uff0c\u800c\u4e14\u53ea\u6709\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u8bf4\u660e\u8fd9\u4e2a\u56fe\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\n\tprintf(\"%d\",ans/2);\n\treturn 0;\n}\n```\n\n \n[\u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01](https://www.luogu.com.cn/record/73206264)\n\n ",
        "postTime": 1651213034,
        "uid": 585962,
        "name": "Deamer",
        "ccfLevel": 4,
        "title": "CF209C\u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u6700\u5c11\u6dfb\u52a0\u591a\u5c11\u6761\u8fb9\uff0c\u4f7f\u65e0\u5411\u56fe\u6709\u6b27\u62c9\u56de\u8def\n\n## \u65b9\u6cd5\n\n\u8fd9\u4e2a\u9898\u770b\u7740\u7b80\u5355\uff0c\u5176\u5b9e\u5f88\u5751\uff1b\n\n~~4\u5206\u949f\u4ee3\u7801\uff0c20\u5206\u949f\u8c03~~\n\n\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\n\n\u5947\u5ea6\u6570\u70b9\u9700\u8981\u8fde\u4e00\u6761\u65b0\u8fb9\n\n\u4ec5\u6709\u5076\u5ea6\u6570\u70b9\u7684\u8fde\u901a\u5757\u9700\u8981\u8fde\u4e24\u6761\u65b0\u8fb9\n\n\u7b54\u6848\u4e3a\u4e0a\u9762\u7edf\u8ba1\u7684\u65b0\u8fb9\u6570 / 2 \uff08\u4e00\u6761\u8fb9\u53ef\u4ee5\u6ee1\u8db3\u4e24\u4e2a\u9700\u6c42\uff09\n\n## \u6613\u9519\uff01\uff01\uff01\n\n1.\u8fd9\u4e2a\u9898\u5f3a\u5236\u4ece1\u51fa\u53d1\uff1b\n\n2.\u8bb0\u5f97\u7edf\u8ba1\u8054\u901a\u5757\u4e2a\u6570\uff1b\n\n3.\u91cd\u8fb9\u4e5f\u5fc5\u987b\u8d70\uff01\uff01\uff01\n\n## \u4ee3\u7801\n\n```\n//#pragma GCC optimize(2)\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<deque>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof (x))\n#define mem1(x) memset((x),0x3f,sizeof (x))\n#define gc getchar\ntemplate<class T>void in(T &x)\n{\n    x = 0; bool f = 0; char c = gc();\n    while (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n    while ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n    if (f) x = -x;\n}\n#undef gc\n// ST 21:38\n#define N 1000010\n#define M N<<1\nint v[M], u[M], nx[M];\nint cnt, head[N];\nint n, m;\nil void add(int uu, int vv) {\n    u[++cnt] = uu, v[cnt] = vv, nx[cnt] = head[uu];\n    head[uu] = cnt;\n}\nint du[N];\nint ans;\nbool vis[N];\nint hvj;\nvoid dfs(int x) {\n    vis[x] = 1;\n    hvj|=(du[x]&1);\n    for (ri i = head[x]; i; i = nx[i]) {\n        if (vis[v[i]]) continue;\n        dfs(v[i]);\n    }\n}\nbool exi[N];\nsigned main() {\n    in(n), in(m);\n    for (ri i = 1, a, b; i <= m; ++i) {\n        in(a), in(b);\n        exi[a]=1,exi[b]=1;\n        if (a == b) continue;\n        add(a, b);\n        add(b, a);\n        du[a]++, du[b]++;\n    }\n    exi[1]=1;\n    bool has=0;\n    int cnt=0;\n    for (ri i = 1; i <= n; ++i) {\n        if (du[i] & 1) {\n            ans++;\n            has=1;\n            //printf(\"A %d\\n\", i);\n        }\n        if(!vis[i]&&exi[i]){\n        \tcnt++;\n        \thvj=0;\n        \tdfs(i);\n        \tif(!hvj) ans+=2;\n\t\t}\n    }\n    if(cnt==1&&has==0) ans-=2;\n    printf(\"%d\\n\", ans / 2);\n    return 0;\n}\n//EN 21:\n```\n",
        "postTime": 1531061455,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a-CF209C"
    },
    {
        "content": "[in Blog](//milk-lemon.blog.luogu.org/notes-EulerPath) & [Problem](//www.luogu.com.cn/problem/CF209C)\n\n## \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6dfb\u52a0\u82e5\u5e72\u6761\u65e0\u5411\u8fb9\uff0c\u4f7f\u5f97\u56fe\u5b58\u5728\u4ece $1$ \u53f7\u70b9\u51fa\u53d1\u53c8\u56de\u5230 $1$ \u53f7\u70b9\uff0c\u4e14\u8986\u76d6\u56fe\u4e2d\u6bcf\u4e00\u6761\u8fb9\u4ec5\u4e00\u6b21\u7684\u8def\u5f84\uff0c\u6c42\u6dfb\u52a0\u8fb9\u7684\u6570\u91cf\u7684\u6700\u5c0f\u503c\u3002\n\n- $1\\leq n,\\ m\\leq 10^6$\n\n## \u89e3\u9898\u601d\u8def\n\n\u56fe\u4e2d\u5b58\u5728\u82e5\u5e72\u5947\u70b9\uff0c\u5bb9\u6613\u60f3\u5230\u5947\u70b9\u4e4b\u95f4\u4e24\u4e24\u914d\u5bf9\u8fde\u8fb9\u3002\n\n\u9898\u76ee\u8981\u6c42\u5b58\u5728\u6574\u4e2a\u56fe\u7684\u6b27\u62c9\u56de\u8def\uff0c\u800c\u56fe\u53ef\u80fd\u5206\u4e3a\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u3002\n\n\u8bbe\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u6709 $t$ \u4e2a\u5947\u70b9\u3002\n\n\u82e5 $t>0$\uff0c\u5219\u53ea\u9700\u4e0e\u5176\u5b83\u8fde\u901a\u5757\u7684\u5947\u70b9\u8fde\u7ebf\uff0c\u4e5f\u5c31\u662f $t$ \u4e2a\u5947\u70b9\u53c2\u4e0e\u4e24\u4e24\u914d\u5bf9\u8fde\u8fb9\u3002\n\n\u82e5 $t=0$\uff0c\u4e3a\u4e86\u4f7f\u56fe\u8fde\u901a\uff0c\u5219\u5fc5\u987b\u4ece\u8be5\u8fde\u901a\u5757\u8fde\u51fa\u53bb\u4e00\u6761\u8fb9\uff0c\u6b64\u65f6\u4ea7\u751f\u4e00\u4e2a\u5947\u70b9\uff0c\u4e3a\u4e86\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u5fc5\u5b9a\u53c8\u8981\u8fde\u4e00\u6761\u8fb9\u3002\u6b64\u65f6\u76f8\u5f53\u4e8e\u589e\u52a0\u4e24\u4e2a\u70b9\u8fdb\u884c\u914d\u5bf9\u3002\n\n\u6545\u7b54\u6848\u4e3a\n\n$$\\frac{\\sum\\max(2,\\ t)}2=\\sum\\max(1,\\ \\frac t2).$$\n\n\u6ce8\u610f\u5230\u5f53\u53ea\u6709 $1$ \u4e2a\u8fde\u901a\u5757\u4e14\u6ca1\u6709\u5947\u70b9\u65f6\uff0c\u4e0d\u9700\u8981\u8fde\u51fa\u53bb\u8fb9\uff0c\u6240\u4ee5\u4e0a\u8ff0\u516c\u5f0f\u4f1a\u5f97\u51fa\u9519\u8bef\u7684\u7b54\u6848\uff0c\u53ea\u9700\u5728\u8f93\u51fa\u65f6\u7279\u5224\u5373\u53ef\u3002\n\n**\u8bf4\u660e** \u7531\u4e8e\u9898\u76ee\u8981\u6c42\u4ece $1$ \u5f00\u59cb\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u5728 $1$ \u53f7\u70b9\u6ca1\u6709\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u628a $1$ \u53f7\u70b9\u4e5f\u89c6\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u8fde\u901a\u5757\u4ee5\u907f\u514d $1$ \u53f7\u70b9\u6ca1\u6709\u8fde\u8fb9\u7684\u60c5\u51b5\u7684\u9519\u8bef\u3002\n\n## AC \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,deg[1000001];\nint oddcnt[1000001],f[1000001];\nbool p[1000001];\n\nint get(int id){\n\treturn f[id]==id?id:f[id]=get(f[id]);\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)f[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v; scanf(\"%d%d\",&u,&v);\n\t\tdeg[u]++,deg[v]++;\n\t\tf[get(u)]=get(v); // \u5408\u5e76\u8fde\u901a\u5757\n\t}\n\tint total=0,block=0;\n    // \u7edf\u8ba1\u5947\u70b9\n\tfor(int i=1;i<=n;i++)\n\t\tif(deg[i]&1)oddcnt[get(i)]++,total++;\n\tint answer=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint tmp=get(i);\n\t\tif(!p[tmp]&&(i==1||deg[i])){\n            // \u9047\u5230\u4e00\u4e2a\u65b0\u7684\u8fde\u901a\u5757\uff0c\u8ba1\u7b97\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\t\t\tp[tmp]=true,block++;\n\t\t\tif(oddcnt[tmp]==0)answer++;\n\t\t\telse answer+=oddcnt[tmp]>>1;\n\t\t}\n\t}\n\tif(block==1&&total==0)answer=0; // \u7279\u5224\n\tprintf(\"%d\\n\",answer);\n\treturn 0;\n} \n```",
        "postTime": 1654157970,
        "uid": 234641,
        "name": "Milmon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF209C - Trails and Glades"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8868\u9762\u5f88\u7b80\u5355\uff0c\u80cc\u5730\u91cc\u4eba\u5fc3\u9669\u6076\u3002\n\n\u9996\u5148\u6b27\u62c9\u56de\u8def\u770b\u89c1\u6027\u8d28\u90fd\u4f1a\u641e\u4e86\u3002\n\n\u6700\u5f00\u59cb\u4ee5\u4e3a\u662f\u53ea\u6709\u4e00\u4e2a\u8054\u901a\u5757\uff1a\n\n\u5947\u5ea6\u70b9\u5411\u53e6\u4e00\u4e2a\u5947\u5ea6\u70b9\u8fde\u7ebf\uff0c\u7b54\u6848\u4e3a\u5947\u5ea6\u70b9\u6570/2\n\n\u7136\u540e\u662f\u60e8\u75db\u7206\u70b8\u3002\n\u53d1\u73b0\u6709\u591a\u4e2a\u8fde\u901a\u56fe\uff1a\n\n\u5947\u5ea6\u70b9\u5411\u5916\u8fde\u8fb9\uff0c\u548c\u539f\u6765\u4e00\u6837\n\n\u4f46\u662f\u6ca1\u6709\u5947\u5ea6\u70b9\u7684\u8054\u901a\u5757\u53ea\u8981\u6709\u4e00\u4e2a\u5757\u8fde\u51fa\u53bb\u4e24\u4e2a\u5c31\u884c\u4e86\uff0c\u5176\u4ed6\u7684\u8fde\u4e00\u4e2a\u5c31\u597d\u3002\uff0c\u7b54\u6848\u4e3a\u5947\u5ea6\u70b9\u6570/2+\u6ca1\u6709\u5947\u5ea6\u70b9\u7684\u8054\u901a\u5757\u6570\u3002\n\n\u53ef\u8fd8\u662f\u4e0d\u591f\uff1a\n\n\u4f60\u4f1a\u53d1\u73b0\uff0c\u6709\u4e9b\u56fe\u6ca1\u67091\u70b9\uff0c\u6240\u4ee5\u4f60\u5f97\u7279\u5224\uff0c\u6709\u4e9b\u56fe\u6ca1\u6709\u8fb9\uff0c\u7279\u5224\uff0c\u6709\u4e9b\u56fe\u70b9\u4e0d\u5168\uff0c\u7279\u5224\uff0c\u53ea\u505a\u51fa\u73b0\u7684\u4ee5\u53ca1\u3002\ncode\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <stack>\n#include <cstring>\n#include <vector>\n#include <cmath>\nusing namespace std;\n#define LL long long\n#define M 1000005\n#define N 2005\n#define Mod 1000000007\nvoid read(LL &x) {\n    x = 0;\n    LL f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9') {\n        if (c == '-')\n            f = -f;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9') {\n        x = (x << 1) + (x << 3) + c - '0';\n        c = getchar();\n    }\n    x *= f;\n    return;\n}\nvector<LL>G[M];\nLL n,m,d[M];\nbool f=0,vis[M],p[M];\nvoid dfs(LL u){\n\tvis[u]=1;\n\tif(d[u]&1)\n\t\tf=1;\n\tfor(int i=0;i<G[u].size();i++){\n\t\tLL v=G[u][i];\n\t\tif(!vis[v]){\n\t\t\tdfs(v);\n\t\t}\n\t}\n\treturn ;\n}\nint main(){\n\tread(n),read(m);\n\tif(!m){\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tLL u,v;\n\t\tread(u),read(v);\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t\tp[u]=1,p[v]=1;\n\t\td[u]++;\n\t\td[v]++;\n\t}\n\tp[1]=1;\n\tLL t=0;\n\tLL s=0,ans=0;\n\tfor(int i=1;i<=n;i++)\n\tif(p[i]){\n\t\tif(!vis[i]){\n\t\t\tf=0;\n\t\t\tdfs(i);\n\t\t\tt++;\n\t\t\tif(!f)\n\t\t\t\ts++;\n\t\t}\n\t\tif(d[i]&1)\n\t\t\tans++;\n\t}\n\tif(t>=2)\n\t\tprintf(\"%I64d\\n\",ans/2+s);\n\telse\n\t\tprintf(\"%I64d\\n\",ans/2);\n}\n\n```\n",
        "postTime": 1567402422,
        "uid": 105090,
        "name": "wyl_AC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF209C \u3010Trails and Glades\u3011"
    },
    {
        "content": "> [**CF209C Trails and Glades**](https://www.luogu.com.cn/problem/CF209C)\n\n> \u89e3\u9898\u62a5\u544a\n\n> [**\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.cnblogs.com/UperFicial/p/16730678.html)\u3002\n\n\u56fe\u8bba\u57fa\u7840\u9898\u3002\n\n\u8003\u8651\u4e00\u5f20\u65e0\u5411\u8054\u901a\u56fe\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff1a\n\n> \u6bcf\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u5747\u4e3a\u5076\u6570\u3002\n\n\u4f46\u8fd9\u4e2a\u6761\u4ef6\u7684\u524d\u63d0\u662f\u8fde\u901a\u56fe\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u82e5\u8fd9\u4e2a\u8fde\u901a\u5757\u6240\u6709\u70b9\u5ea6\u6570\u5747\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u8fde\u901a\u5757\u5f80\u5916\u8fde\u4e24\u6761\u8fb9\uff0c\u4e0e\u5176\u5b83\u8fde\u901a\u5757\u5408\u5e76\uff0c\u8d21\u732e\u4e3a $1$\u3002\n\n\u82e5\u6709 $k$ \u4e2a\u70b9\u7684\u5ea6\u6570\u662f\u5947\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u4fdd\u7559\u4e24\u4e2a\u8fd9\u6837\u5947\u6570\u70b9\u6765\u5f80\u5916\u8fde\u8fb9\u5373\u53ef\uff0c\u5176\u4f59\u70b9\u76f8\u4e92\u8fde\uff0c\u8d21\u732e\u662f $\\frac{k}{2}+1$\u3002\n\n\u6ce8\u610f\u8d21\u732e\u4e3a $1$ \u7684\u610f\u601d\u662f\uff0c\u539f\u672c\u662f\u8981\u8fde\u4e24\u6761\u8fb9\u7684\uff0c\u4f46\u7531\u4e8e\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u76f8\u4e92\u8fde\u7684\u8bdd\uff0c\u6bcf\u4e00\u6761\u8fb9\u4f1a\u88ab\u7b97\u4e24\u6b21\uff0c\u6240\u4ee5\u8fde\u4e24\u6761\u8fb9\u53ea\u7b97\u4e00\u6761\u8fb9\u7684\u8d21\u732e\u3002\n\n\u6ce8\u610f\u5751\u70b9\uff1a\n\n\u82e5\u4e00\u4e2a\u8fde\u901a\u5757\u53ea\u6709\u4e00\u4e2a\u70b9\u8fd9\u4e2a\u8fde\u901a\u5757\u662f\u4e0d\u7528\u8003\u8651\u7684\uff0c\u4f46\u5982\u679c\u6709\u81ea\u73af\u662f\u9700\u8981\u8003\u8651\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nconst int MAXN(1e6+10);\n\nint n,m;\nstruct E{int to,nxt;};\nE edge[MAXN<<1];\n\nint head[MAXN],tot;\n\ninline void add_edge(int u,int v)\n{\n\tedge[++tot].nxt=head[u];\n\thead[u]=tot;\n\tedge[tot].to=v;\n\treturn;\n}\n\nint cnt,deg[MAXN];\nbool vis[MAXN];\nvector<int>G[MAXN];\n\ninline void dfs(int u)\n{\n\tvis[u]=true;\n\tG[cnt].push_back(u);\n\tgra(i,u)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(!vis[v]) dfs(v);\n\t}\n\treturn;\n}\n\nint ans;\n\ninline int Count(int i)\n{\n\tint num=0;\n\trep(j,0,(int)G[i].size()-1) if(deg[G[i][j]]&1) ++num;\n\treturn num;\n}\n\nint main()\n{\n    n=read(),m=read();\n    while(m--)\n    {\n    \tint u=read(),v=read();\n    \tadd_edge(u,v),add_edge(v,u);\n    \t++deg[u],++deg[v];\n    }\n    rep(i,1,n) if(!vis[i])\n    {\n    \t++cnt;\n    \tdfs(i);\n    \tif(G[cnt].size()==1&&G[cnt][0]!=1&&deg[i]==0) G[cnt--].pop_back();\n    }\n    if(cnt==1)\n    {\n    \tprintf(\"%d\\n\",Count(1)>>1);\n    \treturn 0;\n    }\n    rep(i,1,cnt)\n    {\n    \tint num=Count(i);\n    \tif(!num) ++ans;\n    \telse ans=ans+(num>>1);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1664171833,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010CF209C Trails and Glades\u3011"
    },
    {
        "content": "# \u9898\u610f\n$n$\u4e2a\u70b9$m$\u6761\u65e0\u5411\u8fb9\uff0c\u95ee\u52a0\u51e0\u6761\u65e0\u5411\u8fb9\u53ef\u4ee5\u4f7f\u56fe\u5b58\u5728\u4ece$1$\u53f7\u70b9\u5f00\u59cb\u5230$1$\u53f7\u70b9\u7ed3\u675f\u6709\u6b27\u62c9\u56de\u8def\uff1b\n# \u601d\u8def \n$1.$\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570.\n\n$2.$\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u9700\u8981\u52a0\u4e00\u6761\u8fb9.\n\n$3.$\u5ea6\u6570\u5168\u4e3a\u5076\u6570\u7684\u8fde\u901a\u5757\u9700\u8981\u52a0\u4e24\u6761\u8fb9.\n\n$4.$\u7279\u5224\u5ea6\u6570\u5168\u4e3a\u5076\u6570\uff0c\u8fde\u901a\u5757\u53ea\u6709\u4e00\u4e2a\u7684\u60c5\u51b5\uff0c\u4e0d\u9700\u8981\u52a0\u8fb9.\n\n$5.$\u6700\u7ec8\u7b54\u6848\u4e3a $ans/2$.\n\n###### \u3010\u4ee3\u7801\u4e2d\u6709\u6bd4\u8f83\u8be6\u7ec6\u7684\u89e3\u91ca\u3011\n\n# \u6ce8\u610f\n$1.$\u6ca1\u6709\u8fb9\u7684\u70b9\u4e0d\u8bbf\u95ee,\u4f46\u662f$1$\u5fc5\u987b\u8bbf\u95ee.\n\n$2.$\u81ea\u73af\u8981\u8bbf\u95ee.\n\n# \u4ee3\u7801\n```\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<vector>\nusing namespace std;\n\nconst int maxn = 1000500;\nint n, m, vis[maxn], flag, du[maxn], point[maxn], cnt, ans;   //n, m\u4e3a\u70b9\u548c\u8fb9\uff0cvis\u7528\u6765\u8bb0\u5f55\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u8fb9\u662f\u5426\u8d70\u5b8c\uff0cdu\u8bb0\u5f55\u70b9\u7684\u5ea6\u6570\uff0cpoint\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u5426\u6709\u8fb9\u76f8\u8fde\uff0ccnt\u8bb0\u5f55\u8fde\u901a\u5757\u7684\u4e2a\u6570\uff0cans\u4e3a\u7b54\u6848\uff1b \nvector<int> e[maxn];\n\nvoid dfs(int u) {   //dfs\u6c42\u8fde\u901a\u5757 \n\tvis[u] = 1;\n\tif (du[u] & 1) flag = 1;\n\tfor (int i = 0; i < e[u].size(); i++) {\n\t\tif (vis[e[u][i]] == 0) dfs(e[u][i]);\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint u, v;\n\t\tscanf (\"%d%d\", &u, &v);\n\t\tpoint[u] = point[v] = 1;     //u, v\u4e24\u4e2a\u70b9\u6709\u8fb9\u76f8\u8fde \n\t\tif (u == v) continue;\n\t\te[u].push_back(v);     //vector\u5b58\u8fb9 \n\t\te[v].push_back(u);\n\t\tdu[u]++, du[v]++;      //\u8bb0\u5f55\u5ea6\u6570 \n\t}\n\tpoint[1] = 1;          //\u56e0\u4e3a1\u5fc5\u987b\u8bbf\u95ee\uff0c\u6240\u4ee5\u8bbe\u4e3a1 \n\tint jidian = 0;      \n\tfor (int i = 1; i <= n; i++) {\n\t\tif (du[i] & 1) {     //\u5982\u679c\u5ea6\u6570\u4e3a\u5947\u6570\uff0cans++ \uff0cjidian\u8bb0\u5f55\u6240\u6709\u70b9\u4e2d\u5ea6\u6570\u6709\u6ca1\u6709\u5947\u6570 \n\t\t\tans++;\n\t\t\tjidian = 1;\n\t\t}\n\t\telse if (vis[i] == 0 && point[i] == 1) {  //\u5982\u679c\u5ea6\u6570\u4e3a\u5076\u6570 && \u8fd8\u672a\u88ab\u6807\u8bb0 && \u6709\u8fb9\u4e0e\u5b83\u76f8\u8fde \n\t\t\tcnt++;\n\t\t\tflag = 0;\n\t\t\tdfs(i);\n\t\t\tif (flag == 0) ans += 2;   //\u5982\u679c\u4e0ei\u53f7\u70b9\u76f8\u8fde\u7684\u70b9\u4e2d\u6ca1\u6709\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9 ans+=2\uff1b \n\t\t}\n\t}\n\tif (jidian == 0 && cnt == 1) ans = 0;   //\u7279\u5224\u5982\u679c\u8fde\u901a\u5757\u4e3a1\u4e2a\u4e14\u70b9\u7684\u5ea6\u6570\u5168\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u52a0\u8fb9 ans = 0\uff1b \n\tprintf(\"%d\", ans/2);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1602989402,
        "uid": 371178,
        "name": "Fan_Tuan",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF209C \u3010Trails and Glades\u3011"
    }
]