[
    {
        "content": "### CF1271D Portals\n\n\u8fd9\u662f\u4e00\u9053\u6709\u975e\u5e38\u591a\u505a\u6cd5\u7684\u9898\u76ee\uff0c\u503c\u5f97\u4e00\u505a\u3002\n\n#### \u57fa\u7840\u8d2a\u5fc3\u601d\u60f3\n\n\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u8d2a\u5fc3\u601d\u60f3\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u57ce\u5821\uff0c\u6211\u4eec\u90fd\u5c3d\u53ef\u80fd\u5728\u6700\u665a\u7684\u65f6\u95f4\u63a7\u5236\uff0c\u4e5f\u5c31\u662f\u65e9\u63a7\u5236\u4e0d\u5982\u665a\u63a7\u5236\u3002\u8fd9\u4e00\u70b9\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u56e0\u4e3a\u5982\u679c\u65e9\u63a7\u5236\uff0c\u58eb\u5175\u5230\u4e86\u57ce\u5821\u4e5f\u662f\u95f2\u7740\uff0c\u4e0d\u5982\u7559\u5728\u519b\u961f\u91cc\u51d1\u6570\uff0c\u5230\u4e86\u65f6\u95f4\u518d\u524d\u5f80\u76ee\u6807\u57ce\u5821\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u57ce\u5821\u7684\u6700\u665a\u63a7\u5236\u65f6\u95f4\uff0c\u5728\u6700\u665a\u63a7\u5236\u65f6\u95f4\u624d\u6d3e\u51fa\u58eb\u5175\u63a7\u5236\u3002\n\n#### \u52a8\u6001\u89c4\u5212\u7b97\u6cd5\n\n\u770b\u5230\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u5c45\u7136\u53ea\u6709 $5000$\uff0c\u90a3\u5c31\u4e00\u5b9a\u53ef\u4ee5\u52a8\u6001\u89c4\u5212\u4e86\u3002\n\n\u8bbe $f[i][j]$ \u8868\u793a\u653b\u4e0b\u4e86\u524d $i$ \u4e2a\u57ce\u5821\u4e14\u624b\u4e0a\u8fd8\u5269 $j$ \u4e2a\u58eb\u5175\u65f6\uff0c\u88ab\u63a7\u5236\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u7c7b\u4f3c\u4e00\u4e2a\u80cc\u5305\uff0c\u76f4\u63a5\u8f6c\u79fb\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002\u53ea\u8981\u6ce8\u610f\u8fb9\u754c\u2014\u2014\u6253\u7b2c $i$ \u4e2a\u57ce\u5821\u524d\u624b\u4e0a\u5fc5\u987b\u6709\u81f3\u5c11 $a[i]$ \u4e2a\u58eb\u5175\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \u91cf\u7ea7\u3002\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#include <functional>\n#include <algorithm>\n#define MAXIOLG 25\n#define FILENAME(x)\\\nfreopen(x\".in\",\"r\",stdin);\\\nfreopen(x\".out\",\"w\",stdout);\n#define LOWBIT(x) ((x)&(-(x)))\n#define MAXN 5005\n#define INF 19260817\nusing namespace std;\n\ntypedef long double ld;\ntypedef long long ll;\ntypedef ll io_t;\nio_t shin[MAXIOLG];\nio_t seto(void); //\u5feb\u8bfb\uff0c\u5b9e\u73b0\u7565\u53bb\nvoid ayano(io_t x,char spliter='\\n'); //\u5feb\u5199\uff0c\u5b9e\u73b0\u7565\u53bb\n\nint n;\nint a[MAXN],b[MAXN],c[MAXN];\nint f[MAXN][MAXN];\nint tcont[MAXN];  //\u6bcf\u4e2a\u57ce\u5821\u63a7\u5236\u7684\u6700\u665a\u65f6\u95f4\npair<int,int> prs[MAXN]; //\u628a\u53ef\u63a7\u5236\u7684\u57ce\u5821\u548c\u5b83\u7684\u4ef7\u503c\u653e\u5728 pair \u4e2d\n\nint main(void){\n    int m,k;\n    n=seto(),m=seto(),k=seto();\n    for (int i=1;i<=n;i++)\n        a[i]=seto(),b[i]=seto(),c[i]=seto(),tcont[i]=i;\n    while (m--){\n        int u,v;\n        u=seto(),v=seto();\n        tcont[v]=max(tcont[v],u);\n    }\n    for (int i=1;i<=n;i++)\n        prs[i]=make_pair(tcont[i],c[i]);\n    sort(prs+1,prs+n+1);\n    for (int t=0;t<=k;t++)\n        f[0][t]=0;\n    for (int t=k+1;t<=5000;t++)\n        f[0][t]=-INF;\n    int tpoint=1; //\u5f53\u524d\u53ef\u63a7\u5236\u7684\u57ce\u5821\u6307\u9488\n    for (int i=1;i<=n;i++){\n        for (int t=0;t<=5000;t++)\n            f[i][t]=-INF;\n        for (int t=a[i];t<=5000;t++)\n            f[i][t+b[i]]=max(f[i][t+b[i]],f[i-1][t]);\n        while (tpoint<=n && prs[tpoint].first==i){\n            for (int t=0;t<5000;t++)\n                f[i][t]=max(f[i][t],f[i][t+1]+prs[tpoint].second);\n            tpoint++;\n        }\n    }\n    int ans=-1;\n    for (int t=0;t<=5000;t++)\n        ans=max(ans,f[n][t]);\n    ayano(ans);\n    return 0;\n}\n```\n\n#### \u6570\u636e\u7ed3\u6784\u4f18\u5316\u8d2a\u5fc3\u7b97\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u8d2a\u5fc3\uff1a\u5148\u4e0d\u63a7\u5236\u4efb\u4f55\u4e00\u4e2a\u57ce\u5821\uff0c\u5b8c\u6210\u6e38\u620f\u540e\u518d\u6309\u7167\u4ef7\u503c\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u5c3d\u53ef\u80fd\u5730\u63a7\u5236\u57ce\u5821\u3002\n\n\u8fd9\u4e2a\u8d2a\u5fc3\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u5462\uff1f\u4e3b\u8981\u539f\u56e0\u8fd8\u662f\uff0c\u63a7\u5236\u4efb\u4f55\u4e00\u4e2a\u57ce\u5821\u9700\u8981\u7684\u58eb\u5175\u90fd\u662f $1$ \u4eba\u3002\u5982\u679c\u7559\u7740\u8fd9\u4e2a\u4ef7\u503c\u8f83\u5927\u7684\u57ce\u5821\u4e0d\u63a7\u5236\uff0c\u5bf9\u540e\u7eed\u7684\u5f71\u54cd\u6700\u591a\u4e5f\u5c31\u662f\u201c\u80fd\u591a\u63a7\u5236\u4e00\u4e2a\u4ef7\u503c\u8f83\u5c0f\u7684\u57ce\u5821\u201d\uff0c\u8fd9\u4e00\u5b9a\u662f\u4e0d\u5212\u7b97\u7684\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u201c\u80fd\u5426\u63a7\u5236\u8fd9\u4e2a\u57ce\u5821\u201d\u5462\uff1f\n\n\u8003\u8651\u63a7\u5236\u8fd9\u4e2a\u57ce\u5821\u5bf9\u540e\u7eed\u7684\u5f71\u54cd\u2014\u2014\u63a7\u5236\u4e86\u8fd9\u4e2a\u57ce\u5821\uff0c\u4eca\u540e\u653b\u6253\u57ce\u5821\u65f6\u53ef\u7528\u7684\u58eb\u5175\u5c31\u4f1a\u5c11\u4e00\u4eba\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u201c\u653b\u6253\u8fd9\u4e2a\u57ce\u5821\u65f6\uff0c\u53ef\u7528\u58eb\u5175\u6bd4\u5fc5\u9700\u58eb\u5175\uff08$a[i]$\uff09\u591a\u591a\u5c11\u201d\u3002\u5047\u8bbe\u6211\u4eec\u60f3\u8981\u5728 $t$ \u65f6\u523b\u63a7\u5236\u4e00\u4e2a\u57ce\u5821\uff0c\u90a3\u4e48 $t$ \u65f6\u523b\u4ee5\u540e\u7684\u53ef\u7528\u58eb\u5175\u5c31\u4f1a\u5c11\u4e00\u4eba\uff0c\u6211\u4eec\u5c31\u8981\u68c0\u67e5\uff0c$t$ \u65f6\u523b\u4ee5\u540e\u7684\u201c\u76c8\u4f59\u58eb\u5175\u201d\u662f\u5426\u90fd\u5927\u4e8e $0$\u3002\u5982\u679c\u786e\u5b9e\u5927\u4e8e $0$\uff0c\u8868\u793a\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u8fd9\u4e2a\u57ce\u5821\uff0c\u6211\u4eec\u5c31\u9700\u8981\u66f4\u65b0\u201c\u76c8\u4f59\u58eb\u5175\u201d\u2014\u2014$t$ \u65f6\u523b\u4ee5\u540e\u7684\u76c8\u4f59\u58eb\u5175\u90fd\u5c11\u4e00\u4eba\u3002\n\n\u533a\u95f4\u51cf\u548c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u91cf\u7ea7\u3002\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#include <functional>\n#include <algorithm>\n#define MAXIOLG 25\n#define FILENAME(x)\\\nfreopen(x\".in\",\"r\",stdin);\\\nfreopen(x\".out\",\"w\",stdout);\n#define LOWBIT(x) ((x)&(-(x)))\n#define MAXN 5005\n#define MAX4N 20005\n#define INF 19260817\nusing namespace std;\n\ntypedef long double ld;\ntypedef long long ll;\ntypedef ll io_t;\nio_t shin[MAXIOLG];\nio_t seto(void);\nvoid ayano(io_t x,char spliter='\\n');\n\nstruct Ene{\n    int l,r,val,addv;\n    #define L(x) ((stree[(x)]).l)\n    #define R(x) ((stree[(x)]).r)\n    #define X(x) ((stree[(x)]).val)\n    #define ADD(x) ((stree[(x)]).addv)\n    #define LC(x) (((x)<<1))\n    #define RC(x) (((x)<<1)^1)\n};\n\nint n;\nint a[MAXN],b[MAXN],c[MAXN];\nint rst[MAXN];\nint tcont[MAXN];\npair<int,int> prs[MAXN];\nEne stree[MAX4N];\n\nvoid build_tree(int root,int l,int r);\nvoid add(int root,int l,int r,int v);\nint query(int root,int l,int r);\nvoid pushdown(int root);\n\nint main(void){\n    int m,k;\n    n=seto(),m=seto(),k=seto();\n    for (int i=1;i<=n;i++)\n        a[i]=seto(),b[i]=seto(),c[i]=seto(),tcont[i]=i;\n    while (m--){\n        int u,v;\n        u=seto(),v=seto();\n        tcont[v]=max(tcont[v],u);\n    }\n    for (int i=1;i<=n;i++)\n        prs[i]=make_pair(c[i],tcont[i]);\n    sort(prs+1,prs+n+1);\n    for (int i=1;i<=n;i++){\n        if (k<a[i]){\n            ayano(-1);\n            return 0;\n        }\n        rst[i-1]=k-a[i];\n        k+=b[i];\n    }\n    rst[n]=k;\n    int troot=1;\n    build_tree(troot,1,n);\n    ll ans=0;\n    for (int i=n;i;i--){\n        int ucont=prs[i].second;\n        int tw=prs[i].first;\n        if (query(troot,ucont,n)>0)\n            add(troot,ucont,n,-1),ans+=tw;\n    }\n    ayano(ans);\n    return 0;\n}\n\nvoid build_tree(int root,int l,int r){\n    L(root)=l,R(root)=r,ADD(root)=0;\n    if (l==r){\n        X(root)=rst[l];\n        return;\n    }\n    int mid=(L(root)+R(root))>>1;\n    build_tree(LC(root),l,mid);\n    build_tree(RC(root),mid+1,r);\n    X(root)=min(X(LC(root)),X(RC(root)));\n}\n\nvoid add(int root,int l,int r,int v){\n    if (l<=L(root) && r>=R(root)){\n        X(root)+=v,ADD(root)+=v;\n        return;\n    }\n    pushdown(root);\n    int mid=(L(root)+R(root))>>1;\n    (l<=mid)?(add(LC(root),l,r,v)):(void());\n    (r> mid)?(add(RC(root),l,r,v)):(void());\n    X(root)=min(X(LC(root)),X(RC(root)));\n}\n\nint query(int root,int l,int r){\n    if (l<=L(root) && r>=R(root))\n        return X(root);\n    pushdown(root);\n    int mid=(L(root)+R(root))>>1;\n    int ans=INF;\n    (l<=mid)?(ans=min(ans,query(LC(root),l,r))):(0);\n    (r> mid)?(ans=min(ans,query(RC(root),l,r))):(0);\n    return ans;\n}\n\nvoid pushdown(int root){\n    int tadd=ADD(root);\n    ADD(root)=0;\n    if ((!tadd) || (L(root)==R(root)))\n        return;\n    ADD(LC(root))+=tadd,X(LC(root))+=tadd;\n    ADD(RC(root))+=tadd,X(RC(root))+=tadd;\n}\n//\u7565\u53bb\u8bfb\u5165\u8f93\u51fa\u4f18\u5316\u7684\u5b9e\u73b0\n```\n\n#### \u53cd\u6094\u578b\u8d2a\u5fc3\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9898\u8fd8\u6709\u975e\u5e38\u5bb9\u6613\u5b9e\u73b0\u7684\u53cd\u6094\u578b\u8d2a\u5fc3\u505a\u6cd5\u3002\n\n\u53cd\u6094\u578b\u8d2a\u5fc3\u540c\u6837\u57fa\u4e8e\u201c\u63a7\u5236\u4efb\u4f55\u4e00\u4e2a\u57ce\u5821\u9700\u8981\u7684\u58eb\u5175\u90fd\u662f $1$ \u4eba\u201d\u7684\u6761\u4ef6\u3002\u5b83\u7684\u601d\u8def\u662f\uff1a\u5728\u6bcf\u4e2a\u57ce\u5821\u7684\u201c\u6700\u665a\u63a7\u5236\u70b9\u201d\uff0c\u5148\u8d2a\u5fc3\u5730\u628a\u57ce\u5821\u63a7\u5236\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u4f1a\u5b58\u5728\u95ee\u9898\uff1a\u540e\u9762\u58eb\u5175\u53ef\u80fd\u5c31\u4e0d\u591f\u4e86\uff0c\u6e38\u620f\u5931\u8d25\u4e86\u554a\u3002\u90a3\u6211\u4eec\u5c31\u4f1a\u540e\u6094\uff0c\u201c\u8981\u662f\u90a3\u65f6\u6ca1\u6709\u63a7\u5236\u67d0\u4e00\u4e2a\u57ce\u5821\u5c31\u597d\u4e86\u201d\uff1b\u800c\u7a0b\u5e8f\u53ef\u4ee5\u5b9e\u73b0\u201c\u65f6\u5149\u5012\u6d41\u201d\uff0c\u628a\u5f53\u65f6\u7684\u64cd\u4f5c\u53cd\u6094\u6389\uff0c\u4e5f\u5c31\u662f\u51cf\u5c11 $c[i]$ \u4e2a\u91cd\u8981\u70b9\u6570\uff0c\u589e\u52a0\u4e00\u540d\u58eb\u5175\u3002\u8d2a\u5fc3\u5730\u60f3\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u57ce\u5821\u90fd\u662f\u8d21\u732e $1$ \u540d\u58eb\u5175\uff0c\u6240\u4ee5\u6211\u4eec\u80af\u5b9a\u4f1a\u9009\u62e9\u53cd\u6094\u201c\u6700\u4e0d\u91cd\u8981\u201d\u7684\u3001\u4e5f\u5c31\u662f $c[i]$ \u6700\u5c0f\u7684\u57ce\u5821\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u63a7\u5236\u57ce\u5821\u7684\u65f6\u5019\uff0c\u628a\u57ce\u5821\u653e\u8fdb\u4e00\u4e2a\u5806\u91cc\uff0c\u6bcf\u6b21\u9700\u8981\u53cd\u6094\u65f6\u53d6\u5806\u4e2d\u6700\u4e0d\u91cd\u8981\u7684\u57ce\u5821\u8fdb\u884c\u53cd\u6094\u5373\u53ef\uff1b\u5982\u679c\u9700\u8981\u53cd\u6094\u65f6\u5806\u5df2\u7ecf\u4e3a\u7a7a\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u6e38\u620f\u4e0d\u53ef\u80fd\u5b8c\u6210\uff0c\u8f93\u51fa $-1$ \u5373\u53ef\u3002\n\n\u6ce8\u610f\u4e00\u4e2a\u6613\u9519\u70b9\uff1a\u6e38\u620f\u7ed3\u675f\u65f6\uff0c\u5982\u679c\u58eb\u5175\u4eba\u6570\u662f\u8d1f\u503c\uff0c\u81ea\u7136\u662f\u4e0d\u53ef\u884c\u7684\u3002\u56e0\u6b64\u6700\u540e\u5982\u679c\u4eba\u6570\u4e3a\u8d1f\uff0c\u5219\u8fd8\u8981\u8fdb\u884c\u53cd\u6094\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u91cf\u7ea7\u3002\n\n\u8fd9\u9053\u9898\u4f53\u73b0\u4e86\u53cd\u6094\u578b\u8d2a\u5fc3\u7684\u57fa\u672c\u601d\u8def\uff08\u4e4b\u4e00\uff09\uff0c\u975e\u5e38\u9002\u5408\u4f5c\u4e3a\u53cd\u6094\u8d2a\u5fc3\u7684\u5165\u95e8\u4f8b\u9898\u3002\n\n\u7c7b\u4f3c\u7684\u53cd\u6094\u578b\u8d2a\u5fc3\u8fd8\u6709\u8fd9\u9053\u9898\uff1a[SP348 EXPEDI - Expedition](https://www.luogu.com.cn/problem/SP348)\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4f8b\u9898\u7684\u914d\u5957\u7ec3\u4e60\u3002\u5b83\u4eec\u6709\u4e00\u4e2a\u5171\u540c\u7279\u70b9\uff0c\u90a3\u5c31\u662f\u90fd\u6709\u4e00\u4e2a\u7ef4\u5ea6\u662f $1$\u2014\u2014\u6bcf\u4e2a\u57ce\u5821\u6240\u9700\u58eb\u5175\u90fd\u662f $1$ \u4eba\uff1b\u6bcf\u4e2a\u52a0\u6cb9\u7ad9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u90fd\u662f $1$\u2014\u2014\u8fd9\u4e5f\u8bb8\u662f\u8fd9\u7c7b\u53cd\u6094\u578b\u8d2a\u5fc3\u6210\u7acb\u7684\u6761\u4ef6\u3002\n\n\u4e0b\u9762\u662f\u672c\u9898\u4ee3\u7801\u3002\n\n\u5947\u602a\u7684\u662f\uff0cdp \u7684\u4ee3\u7801\u53ea\u7528\u65f6 $109 \\text{ms}$\uff0c\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801\u7528\u65f6 $156 \\text{ms}$\uff0c\u5806\u7684\u4ee3\u7801\u7528\u65f6\u7adf\u8fbe\u5230 $171 \\text{ms}$\uff01\u7406\u8bba\u4e0a\u5feb\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u53cd\u800c\u6162\uff0c\u786e\u5b9e\u6709\u4e9b\u5947\u602a\u3002\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <functional>\n#include <algorithm>\n#define MAXIOLG 25\n#define FILENAME(x)\\\nfreopen(x\".in\",\"r\",stdin);\\\nfreopen(x\".out\",\"w\",stdout);\n#define LOWBIT(x) ((x)&(-(x)))\n#define MAXN 5005\nusing namespace std;\n\ntypedef long double ld;\ntypedef long long ll;\ntypedef ll io_t;\nio_t shin[MAXIOLG];\nio_t seto(void);\nvoid ayano(io_t x,char spliter='\\n');\n\nint n;\nint a[MAXN],b[MAXN],c[MAXN];\nint rst[MAXN];\nint tcont[MAXN];\npair<int,int> prs[MAXN];\nint que[MAXN];\n\nint main(void){\n    int m,k;\n    n=seto(),m=seto(),k=seto();\n    for (int i=1;i<=n;i++)\n        a[i]=seto(),b[i]=seto(),c[i]=seto(),tcont[i]=i;\n    while (m--){\n        int u,v;\n        u=seto(),v=seto();\n        tcont[v]=max(tcont[v],u);\n    }\n    for (int i=1;i<=n;i++)\n        prs[i]=make_pair(tcont[i],c[i]);\n    sort(prs+1,prs+n+1);\n    int qtail=0,tpoint=1;\n    ll ans=0;\n    for (int i=1;i<=n;i++){\n        while (k<a[i] && qtail){\n            k++;\n            ans+=que[0];\n            pop_heap(que,que+qtail);\n            qtail--;\n        }\n        if (k<a[i]){\n            ayano(-1);\n            return 0;\n        }\n        k+=b[i];\n        while (tpoint<=n && prs[tpoint].first==i){\n            k--,ans+=prs[tpoint].second;\n            que[qtail++]=-prs[tpoint].second;\n            push_heap(que,que+qtail);\n            tpoint++;\n        }\n    }\n    while (k<0 && qtail){\n        k++;\n        ans+=que[0];\n        pop_heap(que,que+qtail);\n        qtail--;\n    }\n    ayano(ans);\n    return 0;\n}\n//\u7565\u53bb\u8bfb\u5165\u8f93\u51fa\u4f18\u5316\u7684\u5b9e\u73b0\n```",
        "postTime": 1576634264,
        "uid": 25008,
        "name": "Sweetlemon",
        "ccfLevel": 9,
        "title": "\u53cd\u6094\u578b\u8d2a\u5fc3\u597d\u4f8b\u9898\u2014\u2014CF1271D Portals"
    },
    {
        "content": "\u5f88\u677f\u5b50\u7684\u4e00\u4e2a\u53cd\u6094\u8d2a\u5fc3\u3002\n\n### Problem\n\n\u9898\u76ee\u5927\u610f\uff1a\u6309\u7167\u4ece 1 \u5230 n \u7684\u987a\u5e8f\u4f9d\u6b21\u653b\u6253\uff0c\u653b\u6253\u7b2c i \u4e2a\u9700 $a_i$ \u4e2a\u4eba\uff0c\u6253\u5b8c\u540e\u53ef\u4ee5\u83b7\u5f97 $b_i$ \u4e2a\u4eba\uff0c\u5360\u9886\u4e00\u4e2a\u57ce\u6c60\u9700 1 \u4e2a\u4eba\uff0c\u4ef7\u503c\u662f $c_i$\uff0c\u5360\u9886\u65b9\u6cd5\u53ef\u4ee5\u653b\u6253\u5b8c\u540e\u76f4\u63a5\u5360\u9886\uff0c\u6216\u8005\u4ece u \u8d70\u4e00\u6761\u9053\u8def\u5230 v \u5360\u9886\uff0c\u4e14\u5728 i \u70b9\u53ea\u80fd\u8d70 i \u7684\u6240\u6709\u8def\u5f84\uff0c\u6c42\u4fdd\u8bc1\u5168\u90e8\u4f9d\u6b21\u653b\u6253\u4e0b\u6765\u7684\u6700\u5927\u7684\u4ef7\u503c\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a $n \\leq 5000,m \\leq 3 \\times 10^5$\uff0c\u603b\u4eba\u6570 $\\leq 5000$\u3002\n\n### Solution\n\n\u770b\u5230\u8fd9\u79cd\u9898\uff0c\u800c\u4e14 $n \\leq 5000$\uff0c\u7279\u522b\u5bb9\u6613\u60f3\u5230 dp\uff0c\u4f46\u662f\u6211\u8fd9\u4e2a\u849f\u84bb\u53ea\u60f3\u5230\u4e86\u53cd\u6094\u8d2a\u5fc3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6c42\u5f97\u6bcf\u4e00\u4e2a\u70b9\u8981\u5360\u9886\u7684\u6700\u5927\u5360\u9886\u70b9\uff0ci \u7684\u6700\u5927\u5360\u9886\u70b9 j \u8868\u793a j \u6709\u4e00\u6761\u9053\u8def\u6216\u8005 $i=j$ \u4f7f\u5f97\u653b\u6253\u5b8c j \u540e\u53ef\u4ee5\u5360\u9886 i\uff0c\u4e14 $[j+1,n]$ \u65e0\u6cd5\u5360\u9886 i\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u7684\u5728\u6bcf\u4e2a\u70b9\u7684\u6700\u5927\u5360\u9886\u70b9\u5360\u9886\u6b64\u70b9\uff0c\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u663e\u7136\uff0c\u6211\u4eec\u5728 $[i,j-1]$ \u7684\u4efb\u4f55\u4e00\u4e2a\u5730\u65b9\u5360\u9886 i\uff0c\u90fd\u4f1a\u4f7f\u5f97\u63a5\u4e0b\u6765\u7684\u8def\u9014\u4e2d\u6211\u4eec\u4f1a\u5c11 1 \u4e2a\u4eba\uff0c\u53ea\u6709\u5728 j \u5360\u9886\u65f6\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5360\u9886\u4e86 i\u3002\n\n\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u6bcf\u4e00\u4e2a\u5360\u9886\u7684\u57ce\u6c60\u9700\u8981\u7684\u4ee3\u4ef7\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f 1 \u4e2a\u4eba\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u53d1\u73b0\u56e0\u4e3a\u524d\u9762\u7684\u5360\u9886\u4e86\u592a\u591a\uff0c\u5bfc\u81f4\u540e\u9762\u65e0\u6cd5\u653b\u6253\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5360\u9886\u8fc7\u7684\u70b9\u4e2d\u9009\u62e9\u4e00\u4e2a\u6700\u5c0f\u4ef7\u503c\u7684\u70b9\u53cd\u6094\uff0c\u4f7f\u4eba\u6570\u52a0 1\uff0c\u76f4\u5230\u4eba\u591f\u4e86\u53ef\u4ee5\u653b\u5360\u4e3a\u6b62\u3002\n\n\u5f53\u7136\u82e5\u7b2c n \u4e2a\u70b9\u66f4\u65b0\u5b8c\u540e\uff0c\u4eba\u6570\u4e3a\u8d1f\uff0c\u90a3\u4e48\u4e5f\u8981\u627e\u70b9\u51fa\u6765\u4f7f\u5f97\u4eba\u6570\u53d8\u6210 0\uff0c\u66f4\u65b0\u65b9\u6cd5\u540c\u4e0a\u3002\n\n### Code\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=7232,M=3e5+7232;\nint n,m,k,x,y;\nint a[N],b[N],c[N],t[N];\nlong long ans;\nint vis[N];\nstruct hl{\n    int v,nxt;\n}e[M];\nint h[N],cnt;\nvoid add(int u,int v)\n{\n    e[++cnt].v=v;e[cnt].nxt=h[u];h[u]=cnt;\n}\nstruct len{\n    int id,d;\n    bool operator < (const len&x) const {\n        return id>x.id;\n    }\n}tmp;\npriority_queue<len> q;\npriority_queue<int ,vector<int> ,greater<int> > p;\nint mx(int x,int y)\n{\n    return x>y?x:y;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=n;i++) scanf(\"%d%d%d\",&a[i],&b[i],&c[i]),t[i]=i;//\u81ea\u5df1\u5f53\u7136\u53ef\u4ee5\u5360\u9886\u81ea\u5df1\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n        t[y]=mx(t[y],x);//\u6c42\u6700\u5927\u5360\u9886\u70b9\n    }\n    for(int i=1;i<=n;i++) q.push((len){t[i],c[i]});\n    for(int i=1;i<=n;i++)\n    {\n        while(k<a[i])\n        {\n            if(p.empty()) \n            {\n                printf(\"-1\\n\");\n                return 0;\n            }\n            ans-=p.top();k++;//\u53d6\u6700\u5c0f\u7684\u4ef7\u503c\u6765\u6362\u4eba\n            p.pop();\n        }\n        k+=b[i];\n        while(!q.empty()&&q.top().id==i)\n        {\n            tmp=q.top();q.pop();\n            p.push(tmp.d);\n            k--;ans+=tmp.d;\n        }\n    }\n    while(k<0) \n    {\n        if(p.empty()) \n        {\n            printf(\"-1\\n\");\n            return 0;\n        }\n        ans-=p.top();k++;\n        p.pop();\n    }\n    printf(\"%lld\\n\",ans);\n}\n```\n\n",
        "postTime": 1667528460,
        "uid": 478885,
        "name": "lenlen",
        "ccfLevel": 6,
        "title": "CF1271D Portals \u9898\u89e3"
    },
    {
        "content": "# \u3010\u5e26\u6094\u8d2a\u5fc3\u3011\u3010CF1271D\u3011 Portals\n\n## Solution\n\n\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff1a\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u57ce\u5821 $u$\uff0c\u5982\u679c\u8981\u5f80 $u$ \u9a7b\u519b\uff0c\u5219\u5728\u653b\u5360\u7f16\u53f7\u6700\u5927\u7684\u80fd\u5411 $u$ \u884c\u519b\u7684\u57ce\u5821\u540e\u518d\u9a7b\u519b\uff0c\u7b54\u6848\u4e0d\u4f1a\u53d8\u52a3\u3002\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u57ce\u5821\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u5b58\u7f16\u53f7\u6700\u5927\u7684\u57ce\u5821\u5230\u4ed6\u7684\u884c\u519b\u8def\u7ebf\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $u$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u5b58\u5b83\u80fd\u5230\u8fbe\u7684\u57ce\u5821 $v$ \u4e2d\uff0c$u$ \u662f\u7f16\u53f7\u6700\u5927\u7684\u80fd\u5230\u8fbe $v$ \u7684\u57ce\u5821\u7684\u6240\u6709\u57ce\u5821 $v$\u3002\n\n### Algorithm 1\uff1aDP\n\n\u8bbe $f_{i , j}$ \u662f\u8003\u8651\u524d $i$ \u5ea7\u57ce\u5821\uff0c\u5f53\u524d\u519b\u961f\u6709 $j$ \u4e2a\u4eba\u7684\u6700\u5927\u5f97\u5206\u60c5\u51b5\uff0c\u5219\u6709\uff1a\n\n$$f_{i, j} = f_{i - 1, j - b_i}~~(j \\geq a_i)$$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5821\uff0c\u679a\u4e3e\u5b83\u5411\u7f16\u53f7\u66f4\u5c0f\u7684\u57ce\u5821\u7684\u884c\u519b\u8def\u7ebf\uff0c\u8bbe\u5f53\u524d\u8003\u8651\u5411\u57ce\u5821 $u$ \u884c\u519b\uff1a\n\n$$f_{i, j} = \\max(f_{i, j}, f_{i, j + 1} + c_u)$$\n\n\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u8ba4\u4e3a\u6700\u7ec8\u4eba\u6570\u4e0e $n$ \u540c\u9636\uff09\uff1a\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u7684\u8f6c\u79fb\u662f $O(1)$ \u7684\uff0c\u5171\u6709 $O(n^2)$ \u4e2a\u72b6\u6001\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O(n^2)$\uff1b\u800c\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\u53ea\u4f1a\u53d1\u751f $O(n)$ \u6b21\uff0c\u6bcf\u6b21\u5728\u7f16\u53f7\u6700\u5927\u7684\u53ef\u4ee5\u5230\u8fbe $u$ \u7684\u57ce\u5821\u5904\u53d1\u751f\uff0c\u8f6c\u79fb\u662f $O(1)$ \u7684\uff0c\u679a\u4e3e\u7b2c\u4e8c\u7ef4\u9700\u8981 $O(n)$ \u7684\u590d\u6742\u5ea6\uff0c\u56e0\u6b64\u590d\u6742\u5ea6 $O(n^2)$\u3002\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n### Algorithm 2\uff1a\u5e26\u6094\u8d2a\u5fc3\n\n\u8003\u8651\u6bcf\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u90fd\u8d2a\u5fc3\u7684\u5411\u8fd9\u4e2a\u8282\u70b9\u4fdd\u5b58\u7684\u7684\u884c\u519b\u8def\u7ebf\u6240\u6307\u5411\u7684\u8282\u70b9\u9a7b\u519b\u3002\u8003\u8651\u67d0\u4e00\u65f6\u523b\u5982\u679c\u4eba\u6570\u4e0d\u8db3\uff08\u5305\u62ec\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u9a7b\u519b\u65f6\u4eba\u6570\u4e0d\u8db3\uff0c\u4e00\u79cd\u662f\u653b\u57ce\u65f6\u4eba\u6570\u4e0d\u8db3\uff09\uff0c\u90a3\u4e48\u8003\u8651\u628a\u524d\u9762\u7684\u67d0\u4e9b\u8282\u70b9\u9a7b\u519b\u6536\u56de\u3002\u65e0\u8bba\u6536\u56de\u54ea\u4e2a\u8282\u70b9\u7684\u9a7b\u519b\uff0c\u90fd\u53ea\u4f1a\u7ed9\u603b\u4eba\u6570\u589e\u52a0 $1$\uff0c\u56e0\u6b64\u663e\u7136\u6536\u56de $c$ \u503c\u6700\u5c0f\u7684\u8282\u70b9\u662f\u6700\u4f18\u7684\u3002\u56e0\u6b64\u7528\u5806\u4ee5 $c$ \u4e3a\u5173\u952e\u5b57\u7ef4\u62a4\u6240\u6709\u5df2\u88ab\u9a7b\u519b\u7684\u8282\u70b9\uff0c\u53cd\u6094\u65f6\u628a\u6700\u5c0f\u7684 pop \u51fa\u6765\u5373\u53ef\u3002\n\n\u5982\u679c\u653b\u57ce\u65f6\u4eba\u6570\u4e0d\u591f\u7528\u4e14\u5806\u5df2\u7a7a\uff0c\u90a3\u4e48\u663e\u7136\u65e0\u89e3\u3002\n\n\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u4e2a\u57ce\u5821\u90fd\u53ea\u4f1a\u88ab push \u548c pop $O(1)$ \u6b21\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n## Code\n\n### Algorithm 1\n\n```cpp\nnamespace Fusu {\n\nconst int maxn = 5005;\nconst int INF = 0x3f3f3f3f;\n\nvoid Init();\nvoid Solve();\n\nvoid Main() {\n  Init();\n  Solve();\n}\n\nint n, m, t;\nint a[maxn], b[maxn], c[maxn], pro[maxn];\nstd::vector<int> e[maxn];\n\nvoid Init() {\n  qr(n); qr(m); qr(t);\n  for (int i = 1; i <= n; ++i) {\n    qr(a[i]); qr(b[i]); qr(c[i]);\n    pro[i] = i;\n  }\n  for (int u, v; m; --m) {\n    qr(u); qr(v);\n    pro[v] = std::max(pro[v], u);\n  }\n  for (int i = 1; i <= n; ++i) {\n    e[pro[i]].push_back(i);\n  }\n}\n\nint f[maxn];\n\nvoid Solve() {\n  std::fill(f, f + maxn, -INF);\n  f[t] = 0;\n  int ans = -INF;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = (t += b[i]); (j - b[i]) >= a[i]; --j) {\n      f[j] = f[j - b[i]];\n    }\n    std::fill(f, f + a[i], -INF);\n    for (auto u : e[i]) {\n      for (int j = 0, dj = j + 1; j < t; j = dj++) {\n        f[j] = std::max(f[j], f[dj] + c[u]);\n      }\n    }\n  }\n  for (int i = 0; i <= t; ++i) {\n    ans = std::max(ans, f[i]);\n  }\n  qw((ans < 0) ? -1 : ans, '\\n');\n}\n\n} // namespace Fusu\n```\n\n### Algorithm 2\n\n```cpp\nnamespace Fusu {\n\nconst int maxn = 5005;\n\nvoid Init();\nvoid Solve();\n\nvoid Main() {\n  Init();\n  Solve();\n}\n\nint n, m, t;\nint a[maxn], b[maxn], c[maxn], pro[maxn];\nstd::vector<int> e[maxn];\n\nvoid Init() {\n  qr(n); qr(m); qr(t);\n  for (int i = 1; i <= n; ++i) {\n    qr(a[i]); qr(b[i]); qr(c[i]);\n    pro[i] = i;\n  }\n  for (int u, v; m; --m) {\n    qr(u); qr(v);\n    pro[v] = std::max(pro[v], u);\n  }\n  for (int i = 1; i <= n; ++i) {\n    e[pro[i]].push_back(i);\n  }\n}\n\nstruct Cmp {\n  inline bool operator()(const int &x, const int &y) {\n    return c[x] > c[y];\n  }\n};\n\nstd::priority_queue<int, std::vector<int>, Cmp> Q;\nvoid Solve() {\n  ll ans = 0;\n  for (int i = 1; i <= n; ++i) {\n    while ((t < a[i]) && (!Q.empty())) {\n      int x = Q.top(); Q.pop();\n      ans -= c[x];\n      ++t;\n    }\n    if (t < a[i]) {\n      ans = -1;\n      break;\n    }\n    t += b[i];\n    for (auto u : e[i]) {\n      if (t == 0) {\n        if ((!Q.empty()) && (c[Q.top()] < c[u])) {\n          int x = Q.top(); Q.pop();\n          ans -= c[x];\n          ++t;\n        } else {\n          continue;\n        }\n      }\n      --t;\n      Q.push(u);\n      ans += c[u];\n    }\n  }\n  qw(ans, '\\n');\n}\n\n} // namespace Fusu\n```",
        "postTime": 1588156021,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1271D \u3010Portals\u3011"
    },
    {
        "content": "[CF1271D Portals](https://www.luogu.com.cn/problem/CF1271D) \u89e3\u9898\u62a5\u544a\n\n\u672c\u9898\u65b9\u6cd5\u5f88\u591a\uff0c\u672c\u9898\u89e3\u8bb2\u89e3DP\u89e3\u6cd5\u3002\n\n\u76f8\u6bd4\u4e8e\u6211\u4eec\u66f4\u719f\u6089\u7684\u586b\u8868\u6cd5\uff08\u5f53\u524d\u70b9\u7684\u72b6\u6001\u6839\u636e\u4e4b\u524d\u70b9\u7684\u72b6\u6001\u63a8\u5bfc\u51fa\u6765\uff09\uff0c\u8fd9\u9053\u9898\u66f4\u9002\u5408\u4f7f\u7528\u5237\u8868\u6cd5\uff08\u7531\u5f53\u524d\u70b9\u7684\u72b6\u6001\uff0c\u66f4\u65b0\u5176\u4ed6\u70b9\u7684\u72b6\u6001\uff09\u3002\u5bf9\u4e8e\u672c\u9898\uff0c\u5237\u8868\u6cd5\u6bd4\u586b\u8868\u6cd5\u5728\u5904\u7406\u8fb9\u754c\u4e0a\u66f4\u4e3a\u4fbf\u6377\uff0c\u4e14\u66f4\u5bb9\u6613\u7406\u89e3\u3002~~\u8fd9\u4e5f\u662f\u672c\u4eba\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u5237\u8868\u6cd5\u3002~~\n\n\u4ee5\u4e0a\u4e3a\u672c\u4eba\u5173\u4e8e\u672c\u9898\u505a\u6cd5\u7684\u4e00\u4e9b\u770b\u6cd5\u3002\u4e0b\u6587\u7ed9\u51fa\u7684\u4ee3\u7801\u4e2a\u4eba\u8ba4\u4e3a\u53ef\u4ee5\u770b\u505a\u662f\u5237\u8868\u6cd5\u3002\n\n------------\n\n\u5148\u8bb2\u8bb2\u5efa\u56fe\uff1a\n\n\u672c\u9898\u9700\u8981\u5728\u56fe\u4e0a\u8dd1DP\uff0c\u4f46\u56fe\u4e0a\u9519\u7efc\u590d\u6742\u7684\u8fb9\u4eff\u4f5b\u4f7f\u8f6c\u79fb\u5341\u5206\u590d\u6742\uff0c\u5e76\u4e14\u8fd8\u53ef\u80fd\u51fa\u73b0\u91cd\u590d\u8ba1\u7b97 \u9a7b\u5b88\u67d0\u4e2a\u57ce\u5821\u7684\u8d21\u732e\u3002~~\u800c\u4e14\u5b9e\u9645\u4e0a\u7a7a\u95f4\u53ef\u80fd\u5f00\u4e0d\u4e0b\u3002~~ \u6240\u4ee5\u8003\u8651\u5220\u53bb\u65e0\u7528\u7684\u8fb9\u3002\n\n\u8003\u8651\u8d2a\u5fc3\uff1a\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u4e00\u4e2a\u57ce\u5821\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5c3d\u53ef\u80fd\u8fdf\u7684\u63a7\u5236\u8fd9\u4e2a\u57ce\u5821\u3002\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u8fc7\u65e9\u63a7\u5236\u4e86\u8fd9\u4e2a\u57ce\u5821\uff0c\u6bd4\u8d77\u4e0d\u63a7\u5236\uff0c\u5c06\u4f1a\u6d88\u8017\u66f4\u591a\u58eb\u5175\uff0c\u66f4\u5bb9\u6613\u51fa\u73b0\u58eb\u5175\u4e0d\u591f\u7684\u60c5\u51b5\uff0c\u800c\u8d8a\u8fdf\uff08\u653b\u4e0b\u57ce\u5821\u8d8a\u591a\uff09\uff0c\u58eb\u5175\u6570\u91cf\u8d8a\u591a\uff0c\u663e\u7136\u66f4\u4f18\u3002\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5821 $i$ \uff0c\u5728\u6240\u6709\u53ef\u4ee5\u5230\u8fbe\u5b83\u7684\u57ce\u5821\u7ec4\u6210\u7684\u96c6\u5408\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u4fdd\u7559\u7f16\u53f7\u6700\u5927\u57ce\u5821\uff0c\u5e76\u5728\u679a\u4e3e\u5230\u8fd9\u4e2a\u6700\u5927\u57ce\u5821\u65f6\u8003\u8651 $i$ \u53d6\u6216\u4e0d\u53d6\u3002\n\n\u540c\u65f6\uff0c\u9898\u76ee\u4e2d\u63d0\u5230 \u201c\u4f60\u521a\u5360\u9886\u8fd9\u4e2a\u57ce\u5821\uff0c\u53ef\u4ee5\u7acb\u9a6c\u6d3e\u5175\u9a7b\u5b88\u3002\u201d \u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u6d3e\u5175\u65b9\u5f0f\u5e76\u4e0d\u610f\u5473\u7740\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u70b9\u52a0\u5165\u4e0a\u6587\u6240\u8ff0\u7684 \u201c\u5230\u8fbe\u5b83\u7684\u57ce\u5821\u7ec4\u6210\u7684\u96c6\u5408\u201d \uff08\u5373\u5efa\u7acb\u81ea\u73af\uff09\u5e76\u8fdb\u884c\u5904\u7406\uff08\u4fdd\u7559\u6700\u5927\u7f16\u53f7\u7684\u57ce\u5821\uff09\u3002\u901a\u8fc7\u8fd9\u6837\u5904\u7406\uff0c\u539f\u56fe\u5df2\u88ab\u6211\u4eec\u5316\u7b80\u6210\u8bb8\u591a\u6811\uff08\u4e00\u5ea7\u68ee\u6797\uff09\uff0c\u6070\u597d\u80fd\u591f\u505a\u5230\u4e0d\u91cd\u4e0d\u6f0f\u7684\u8003\u8651\u6bcf\u4e00\u5ea7\u57ce\u5821\u7684\u53d6\u6216\u4e0d\u53d6\u3002\n\n\u518d\u8bb2\u8bb2DP\uff1a\n\n\u5176\u5b9e\u672c\u4eba\u6700\u521d\u60f3\u5199\u586b\u8868\u6cd5\uff0c\u4f46\u56e0\u4e3a\u8fb9\u754c\u4e0d\u597d\u5904\u7406\u800c\u6539\u5199\u5237\u8868\u6cd5\uff0c\u6240\u4ee5\u6700\u7ec8\u4ee3\u7801\u91cc\u5e26\u6709\u4e00\u4e9b\u586b\u8868\u6cd5\u7684\u7ec6\u8282\n\n\u8bbe $dp[i][j]$ \u8868\u793a \u8fdb\u653b\u5230\u7b2c $i$ \u4e2a\u57ce\u5821\uff0c\u4e14\u5f53\u524d\u53ef\u7528 $j$  \u4e2a\u58eb\u5175\u7684\u6700\u9ad8\u5206\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u53ef\u4ee5 \u9884\u5904\u7406 \u51fa \u5b83\u53ef\u4ee5\u5230\u8fbe\u7684\u6240\u6709\u57ce\u5821\uff08\u6b64\u65f6\u5df2\u5904\u7406\u6389\u6240\u6709\u65e0\u7528\u7684\u8fb9\uff09 \u6309\u6743\u503c\u6392\u5e8f\uff08\u964d\u5e8f\uff0c\u56e0\u4e3a\u4f18\u5148\u9a7b\u5b88\u66f4\u5927\u6743\u503c\u7684\u57ce\u5821\uff09\u540e\u7684\u6743\u503c\u5e8f\u5217\uff0c\u5e76\u505a\u4e00\u4e2a\u524d\u7f00\u548c\u3002\u672c\u4eba\u91c7\u7528\u4f18\u5148\u961f\u5217\u6765\u5b9e\u73b0\u6392\u5e8f\u7b49\u9884\u5904\u7406\u3002\n\n\u4e0b\u6587\uff08\u4e3a\u4e86\u914d\u5408\u4ee3\u7801\uff09\uff0c\u6211\u5c06\u4f7f\u7528 $dp[i-1][j]$ \u6765\u63a8\u5bfc\u540e\u9762\u7684\u7ed3\u679c\u3002\n\n\u56e0\u4e3a\u653b\u5360\u7b2c $i$ \u5ea7\u57ce\u5821\uff0c\u58eb\u5175\u5c06\u591a $b[i]$ \u4e2a\uff0c\u6240\u4ee5 $dp[i][j+b[i]]$  \u53ef\u4ee5\u7531 $dp[i-1][j]$ \u76f4\u63a5\u63a8\u5bfc\u8fc7\u6765\u3002\u5373 $dp[i][j+b[i]]=max(dp[i][j+b[i]],dp[i-1][j])$ \n\n\u800c\u8003\u8651\u6d3e\u5175\u53bb\u9a7b\u5b88\u5176\u4ed6\u57ce\u5821\uff1a\u8bbe\u7b2c $i$ \u5ea7\u57ce\u5821\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5821\uff08\u8bbe\u5176\u4e00\u5171 $num$ \u4e2a\uff09\u6309\u6743\u503c\u6392\u5e8f\u540e\u7684\u6743\u503c\u5e8f\u5217\u524d\u7f00\u548c\u6570\u7ec4\u4e3a $su[i]$ \u3002\u7528\u53d8\u91cf $l$ \u679a\u4e3e $1$ \u81f3 $num$ \uff0c\u5219 $dp[i][j+b[i]-l]=max(dp[i][j+b[i]-l],dp[i-1][j]+su[l])$ \uff0c\u542b\u4e49\u5c31\u662f\u5728\u7b2c $i$ \u4e2a\u57ce\u5821\uff0c\u6d3e\u51fa $l$ \u4e2a\u58eb\u5175\uff0c\u53bb\u9a7b\u5b88\u4e86 $su[l]$ \u4ee3\u8868\u7684\u90a3\u4e9b\u57ce\u5821\u3002\n\n\u7531\u4e8e\u9700\u8981 $a[i]$ \u4e2a\u58eb\u5175\u624d\u80fd\u653b\u4e0b\u57ce\u5821 $i$ \u6240\u4ee5\u4e0a\u6587\u6240\u8ff0\u7684\u8f6c\u79fb\u65b9\u7a0b\u4e2d\u7684 $j$ \u5fc5\u987b\u4ece $a[i]$ \u5f00\u59cb\u679a\u4e3e\u3002(\u8fd9\u91cc\u5c31\u4f53\u73b0\u4e86\u5bf9\u4e8e\u672c\u9898\uff0c\u5237\u8868\u6cd5\u5904\u7406\u8fb9\u754c\u6bd4\u8f83\u7b80\u5355)\n\n\u6700\u540e,\u8bbe $b[i]$ \u7684\u603b\u548c\u4e3a $sum$ \uff0c\u7b54\u6848\u5c31\u662f $dp[n][j] \\ (\\forall j \\in \\{ 0,1,2,...sum+k\\})$ \u4e2d\u7684\u6700\u5927\u503c\u3002(\u5373\u4e00\u904d $for$ \u5faa\u73af\u904d\u5386  $dp[n][j]$ )\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int e=1e3*6+100;\nint dp[e][e];\nint c[e],a[e],b[e];\nint n,k,m;\nint maxx[e];//\u4fdd\u5b58\u53ef\u4ee5\u5230\u8fbe\u67d0\u4e2a\u57ce\u5821\u7684\u5176\u4ed6\u57ce\u5821\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u3002\nstruct nod\n{\n\tint nxt,to; \n} s[e*2];\nint head[e],cnt=0;\ninline void add(int aa,int bb)\n{\n\tcnt++;\n\ts[cnt].nxt=head[aa];\n\ts[cnt].to=bb;\n\thead[aa]=cnt;\n}\npriority_queue<int >q;\nint sum[e];\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m>>k;\n\tmemset(dp,-0x3f,sizeof(dp));//\u521d\u503c\u4e3a -inf \u610f\u5473\u7740\u67d0\u4e2a\u72b6\u6001\u4e0d\u5408\u6cd5\u3002\n\tdp[0][k]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i]>>b[i]>>c[i];\n\t\tsum[i]=sum[i-1]+b[i];//\u4e3a\u53ef\u4ee5\u5f97\u5230\u7684\u58eb\u5175\u6570 \u505a\u524d\u7f00\u548c\n\t\tmaxx[i]=i;//\u81ea\u73af\n\t\tif(sum[i-1]+k<a[i])//\u5224\u65ad\u6e38\u620f\u80fd\u5426\u80dc\u5229 \n\t\t{\n\t\t\tcout<<-1;return 0;\n\t\t}\n\t}\n\tint u,v;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>u>>v;\n\t\tmaxx[v]=max(maxx[v],u);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd(maxx[i],i);//\u5efa\u56fe \n\t}\n\tint num;int su[e];\n\tmemset(su,0,sizeof(su));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(!q.empty())q.pop();\n\t\tnum=0;\n\t\tfor(int l=head[i];l;l=s[l].nxt)\n\t\t{\n\t\t\tq.push(c[s[l].to]);\n\t\t}\n\t\tsu[0]=0;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tnum++;\n\t\t\tif(num!=0)su[num]=su[num-1]+q.top();\n\t\t\telse su[num]=q.top();//\u9884\u5904\u7406\u524d\u7f00\u548c\n\t\t\tq.pop();\n\t\t}\n\t\tfor(int j=a[i];j+b[i]<=k+sum[i];j++)\n\t\t{\n\t\t\tif(dp[i-1][j]<0) continue;//\u5982\u679c dp[i-1][j] \u8fd9\u4e2a\u72b6\u6001\u4e0d\u5408\u6cd5\uff0c\u81ea\u7136\u65e0\u6cd5\u8f6c\u79fb\u3002\n\t\t\tdp[i][j+b[i]]=max(dp[i][j+b[i]],dp[i-1][j]);\n\t\t\tfor(int bj=1;bj<=num;bj++) \n\t\t\t{\n\t\t\t\tdp[i][j+b[i]-bj]=max(dp[i][j+b[i]-bj],dp[i-1][j]+su[bj]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=-0x3f3f3f3f;\n\tfor(int i=0;i<=k+sum[n];i++)\n\t{\n\t\tans=max(ans,dp[n][i]);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\n\u4ee3\u7801\u770b\u4f3c\u4e09\u91cd\u5faa\u73af\uff0c\u5b9e\u5219\u5747\u644a\u4e00\u4e0b\uff0c\u53d1\u73b0\u8f6c\u79fb\u662f $O(1)$ \u7684\uff0c\u9884\u5904\u7406\u603b\u5171\u662f$O(n \\ log \\ n)$\u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6 $O(n^2)$ \u3002\n\n\u5728\u89e3\u9898\u65f6\uff0c\u5176\u5b9e\u4e5f\u4e0d\u5fc5\u62d8\u6ce5\u4e8e\u5237\u8868\u6cd5\u548c\u586b\u8868\u6cd5\uff0c\u6211\u53ea\u662f\u60f3\u63d0\u9192\u5927\u5bb6\uff0c\u5bf9\u4e8e\u72b6\u6001\u8f6c\u79fb\uff0c\u5e76\u4e0d\u53ea\u6709\u6211\u4eec\u6240\u719f\u6089\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u7279\u6b8a\u7684\u9898\u76ee\uff0c\u7279\u6b8a\u7684\u89e3\u6cd5\u6216\u8bb8\u66f4\u4f18\u3002\n\n\u4ee5\u4e0a\u662f\u672c\u4eba\u7684\u9898\u89e3\uff0c\u5982\u6709\u9519\u8bef\u8bf7\u60a8\u6307\u51fa\u3002\n\n",
        "postTime": 1597483960,
        "uid": 173580,
        "name": "vijone",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1271D \u3010Portals\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u5f88\u4e2d\u89c4\u4e2d\u8ddd\u7684\u8d2a\u5fc3\u52a0 $\\text{DP}$ \u9898\uff0c$\\text{RMJ}$ \u574f\u4e86\u6240\u4ee5\u5728 $\\text{CF}$ \u4e0a\u4ea4\u7684\u3002\n\n### \u6b63\u6587\n\n\u9996\u5148\uff0c\u8fd9\u4e2a\u9898\u610f\u6709\u4e9b\u626d\u66f2\uff0c\u8bbe\u8ba1\u72b6\u6001\u65f6\u6700\u96be\u7684\u90e8\u5206\u5728\u4e8e\u8f6c\u79fb\u65f6\u600e\u4e48\u8bb0\u5f55\u54ea\u4e9b\u57ce\u5821\u5df2\u7ecf\u88ab\u9a7b\u5b88\u4e86\uff0c\u540e\u6765\u53d1\u73b0\u4e0d\u7528\u8bb0\u5f55\uff0c\u76f4\u63a5\u8d2a\u5c31\u884c\uff0c\u56e0\u4e3a\u8d8a\u540e\u9762\u9a7b\u5b88\u57ce\u5821\u8d8a\u8d5a\uff0c\u6240\u4ee5\u76f4\u63a5\u8bbe\u8ba1\u72b6\u6001 $f_{i,j}$ \u8868\u793a\u5f53\u524d\u5728\u7b2c $i$ \u4e2a\u57ce\u5821\uff0c\u519b\u961f\u6709 $j$ \u4e2a\u5175\u65f6\u7684\u6700\u5927\u5f97\u5206\uff0c\u7b49\u4e8e $-1$ \u8868\u793a\u72b6\u6001\u4e0d\u53ef\u8fbe\u3002\n\n\u9996\u5148\u8fdb\u653b\u4e0b\u4e00\u4e2a\u57ce\u5821\u7684\u8f6c\u79fb\u5c31\u662f $f_{i,j}=f_{i - 1,j - b_i}$\uff0c\u8fd8\u6709\u4e00\u79cd\u8f6c\u79fb\u662f\u9a7b\u5b88\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u5148\u9884\u5904\u7406\u4e00\u4e0b\u80fd\u5230\u8fbe\u6bcf\u4e2a\u57ce\u5821\u7684\u6700\u540e\u4e00\u4e2a\u57ce\u5821\uff0c\u518d\u5bf9\u6bcf\u4e2a\u57ce\u5821\u652f\u914d\u7684\u57ce\u5821\u6392\u5e8f\u518d\u505a\u524d\u7f00\u548c\u3002\u8bbe\u7b2c $i$ \u4e2a\u57ce\u5821\u7684\u652f\u914d\u96c6\u5927\u5c0f $len_i$\uff0c\u9a7b\u5b88\u8fd9\u4e00\u90e8\u5206\u7684\u8f6c\u79fb\u5c31\u662f $f_{i,j} = \\max_{k=0}^{len_i}f_{i,j+k} + sum_{i,k}$\u3002\n\n\u6240\u6709\u652f\u914d\u96c6\u603b\u5927\u5c0f\u662f $n$\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O(n^2)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 5005;\nint n,m,k,V,a[N],b[N],c[N],v[N],f[N][N];\nvector<int>e[N];\nvector<int>o[N];\nbool cmp(int x,int y){return x > y;}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tV = k;\n\tfor(int i = 1;i <= n;++i) scanf(\"%d%d%d\",&a[i],&b[i],&c[i]),V += b[i];\n\tfor(int i = 1,x,y;i <= m;++i){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\te[x].push_back(y);\n\t}\n\t//printf(\"QwQ\\n\");\n\tfor(int i = 1;i <= n;++i){\n\t\tv[i] = i;\n\t\tfor(int j:e[i]) v[j] = i;\n\t}\n\tfor(int i = 1;i <= n;++i) o[v[i]].push_back(c[i]);\n\t//printf(\"QwQ\\n\");\n\tfor(int i = 1;i <= n;++i){\n\t\tsort(o[i].begin(),o[i].end(),cmp);\n\t\tint len = o[i].size();\n\t\tfor(int j = 1;j < len;++j) o[i][j] += o[i][j - 1];\n\t} \n\t//printf(\"QwQ\\n\");\n\tmemset(f,-1,sizeof(f));\n\tf[0][k] = 0;\n\tfor(int i = 1;i <= n;++i){\n\t\tfor(int j = a[i] + b[i];j <= V;++j) f[i][j] = f[i - 1][j - b[i]];\n\t\tfor(int j = 0;j <= V;++j){\n\t\t\tint len = o[i].size();\n\t\t\tfor(int k = 1;k <= min(len,V - j);++k) if(f[i][j + k] != -1) f[i][j] = max(f[i][j],f[i][j + k] + o[i][k - 1]);\n\t\t}\n\t}\n\tint ans = -1;\n\tfor(int i = 0;i <= V;++i) ans = max(ans,f[n][i]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1681893207,
        "uid": 239433,
        "name": "WZKQWQ",
        "ccfLevel": 7,
        "title": "CF1271D[Portals]\u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1271D)\u3002\n\n\u672c\u9898\u65b9\u6cd5\u5f88\u591a\uff0c\u8fd9\u91cc\u8bb2\u89e3 DP \u89e3\u6cd5\u3002~~\uff08\u6211\u4e0d\u4f1a\u5176\u4ed6\u7684\uff09~~  \n\u5148\u770b\u6570\u636e\u8303\u56f4\uff0c$n\u22645000$\uff0c\u8003\u8651 DP\u3002  \n\u601d\u8def\u5982\u4e0b\uff08\u95eb\u5f0f DP \u4e07\u5c81\uff09\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/9jpsi7d3.png)\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$ \u91cf\u7ea7\u3002(\u540c 01 \u80cc\u5305)\n\n\n------------\n\n\u4ee3\u7801\u653e\u9001~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M(5e3+1);\nconst int D(0x3f3f3f3f);\nint n, a[M],b[M],c[M];\nint f[M][M],t[M],m,k;\nstruct node{\n\tint t,c;\n};node l[M];\ninline bool cmp(node x,node y){\n\treturn x.t<y.t;\n}\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);cout.tie(0);\n\tcin>>n>>m>>k;\n\tfor(register int i(1);i<=n;++i) {\n\t\tcin>>a[i]>>b[i]>>c[i];t[i]=i;//\u521d\u59cb\u5316\u6700\u665a\u63a7\u5236\u65f6\u95f4\n\t}\n\twhile(m--){int u,v;cin>>u>>v;t[v]=max(t[v],u);}//\u66f4\u6539\u6700\u665a\u63a7\u5236\u65f6\u95f4\n\tfor(register int i(1);i<=n;++i){\n\t\tnode pos;pos.c=c[i];pos.t=t[i];\n\t\tl[i]=pos;\n\t}\n\tsort(l+1,l+n+1,cmp);//\u6309\u7167\u6700\u665a\u63a7\u5236\u65f6\u95f4\u6392\u5e8f\n\tfor(register int j(0);j<=k;++j) f[0][j]=0;//\u521d\u59cb\u5316\n    for(register int j(k+1);j<M;++j) f[0][j]=-D;//\u53c8\u662f\u521d\u59cb\u5316\u6210\u6781\u5c0f\u503c\n\tint tim(1);//\u6307\u5411\u5f53\u524d\u53ef\u63a7\u5236\u7684\u57ce\u5821\n\tfor(register int i(1);i<=n;++i){//\u6b63\u5e38\u8f6c\u79fb\n\t\tfor(register int j(0);j<M;++j) f[i][j]=-D;\n\t\tfor(register int j(a[i]);j<M;++j)\n\t\tf[i][j+b[i]]=max(f[i][j+b[i]],f[i-1][j]);\n\t\twhile(tim<=n&&l[tim].t==i){\n\t\t\tfor(register int j(0);j<M-1;++j)\n\t\t\tf[i][j]=max(f[i][j],f[i][j+1]+l[tim].c);\n\t\t\t++tim;\n\t\t}\n\t}\n\tregister int ans(-1);\n\tfor(register int j(0);j<M;++j)ans=max(ans,f[n][j]);//\u627e\u51fa\u6700\u7ec8\u7b54\u6848\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1626574412,
        "uid": 192615,
        "name": "_Yoimiya_",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 CF1271D Portals"
    },
    {
        "content": "\u65e9\u63a7\u5236\u4e0d\u5982\u665a\u63a7\u5236.\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$u$,\u7ef4\u62a4$maxv(u)$\u8868\u793a\u6700\u665a\u7684\u80fd\u5230\u8fbe$u$\u7684\u70b9(\u6ce8\u610f\u8fd9\u91cc\u8ba4\u4e3a$u$\u80fd\u5230$u$),\u7136\u540e\u53ea\u8fde$maxv(u)->u$\u7684\u8fb9\n\n\u5047\u8bbe\u73b0\u5728\u5728\u8003\u8651$u$,\u5df2\u7ecf\u63a7\u5236\u7684\u70b9\u96c6\u4e3a$S$.\u82e5\u73b0\u6709\u5175\u529b\u4e0d\u8db3$a(u)$,\u90a3\u4e48\u653e\u5f03\u4ef7\u503c\u6700\u5c0f\u7684\u70b9,\u76f4\u5230\u5175\u529b\u4e0d\u5c11\u4e8e$a(u)$.(\u82e5\u65e0\u6cd5\u505a\u5230\u5c31\u662f-1).\u7136\u540e\u5c31\u63a7\u5236\u4e86$u$,\u83b7\u5f97$b(u)$\u5175\u529b.\u8003\u8651$u$\u7684\u6bcf\u6761\u51fa\u8fb9,\u628a\u80fd\u63a7\u5236\u7684\u70b9\u90fd\u63a7\u5236\u4e86(\u52a0\u5165$S$),\u5148\u4e0d\u7ba1\u5175\u529b\u662f\u5426\u591f\u4e0b\u4e00\u4e2a\u70b9,\u56e0\u4e3a$u+1$\u7684\u65f6\u5019\u4f1a\u8003\u8651\u7684.\n\n\u6700\u540e\u82e5\u5175\u529b\u4e0d\u8db30,\u653e\u5f03\u4ef7\u503c\u6700\u5c0f\u7684\u70b9\u76f4\u5230$k\\ge 0$.\u6700\u540e$S$\u4e2d\u7684\u70b9\u4ef7\u503c\u548c\u5c31\u662f\u7b54\u6848.  \n\u663e\u7136$S$\u53ef\u4ee5\u7528\u5806\u7ef4\u62a4.\u65f6\u95f4\u590d\u6742\u5ea6$O(m\\log n)$\n```cpp\n\n#define MAXN 5011\n#define MAXM 300011\nstruct edge\n{\n    ll v,nxt;\n}e[MAXM];\nll cnt=0,last[MAXN];\nvoid adde(ll u,ll v)\n{\n    e[++cnt].v=v;\n    e[cnt].nxt=last[u],last[u]=cnt;\n}\nstd::priority_queue<ll,std::vector<ll>,std::greater<ll> >q;\nll maxv[MAXN],a[MAXN],b[MAXN],c[MAXN];\nint main()\n{\n    ll n=read(),m=read(),k=read();\n    for(ll u=1;u<=n;++u)\n    {\n        a[u]=read(),b[u]=read(),c[u]=read();\n        maxv[u]=u;\n    }\n    for(ll i=1;i<=m;++i)\n    {\n        ll u=read(),v=read();\n        umax(maxv[v],u);\n    }\n    for(ll i=1;i<=n;++i)adde(maxv[i],i);\n    for(ll u=1;u<=n;++u)\n    {\n        while(k<a[u]&&!q.empty())++k,q.pop();\n        if(k<a[u]){puts(\"-1\");return 0;}\n        k+=b[u];\n        for(ll i=last[u];i;i=e[i].nxt)q.push(c[e[i].v]),--k;\n    }\n    while(k<0&&!q.empty())++k,q.pop();\n    if(k<0){puts(\"-1\");return 0;}\n    ll ans=0;\n    while(!q.empty())ans+=q.top(),q.pop();\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1585833055,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1271D \u3010Portals\u3011"
    },
    {
        "content": "\u6bd4\u8d5b\u65f6\u81ea\u5df1\u5361\u5728\u4e86\u8fd9\u9898\u4e0a\uff0c\u73b0\u5728\u7279\u6765\u5199\u7bc7\u6bd4\u8f83\u7b26\u5408\u73b0\u573a\u601d\u8def\u7684\u9898\u89e3\n\n---\n\n### \u9898\u89e3\uff1a\n\ndp\u5f88\u597d\u60f3\uff0c\u72b6\u6001\u4e5f\u5341\u5206\u7ecf\u5178\uff1a\u8bbe$f[i][j]$\u8868\u793a\u524d$i$\u4e2a\u57ce\u5821\uff0c\u624b\u5934\u5269\u4e0b$j$\u4e2a\u58eb\u5175\u7684\u6700\u5927\u6536\u76ca\n\n\u521d\u59cb\u5316$f[0][k]=0$\uff0c\u5176\u5b83\u8d4b\u4e3a\u8d1f\u65e0\u7a77\n\n\u4ece\u540e\u5f80\u524d\u7ee7\u627f\u72b6\u6001\u65f6\u8981\u4ece$a_i$\u5f00\u59cb\u679a\u4e3e\uff08\u80fd\u6210\u529f\u5360\u9886\u7684\u6761\u4ef6\uff09\uff0c\u58eb\u5175\u6570\u8981\u51cf$b_i$\uff08\u53ef\u4ee5\u52a0\u5175\u7684\u6761\u4ef6\uff09\n\n\u8f6c\u79fb\u9700\u8981\u7a0d\u5fae\u601d\u8003\u4e0b\n\n\u662f\u8003\u8651\u4ece\u6bcf\u6761\u8def\u8f6c\u79fb\u5417\uff1f\u8fd9\u6837\u7684\u8bdd\u5c31\u4f1a\u53d8\u5f97\u76f8\u5f53\u590d\u6742\uff0c\u4e8c\u7ef4\u72b6\u6001\u4e5f\u4e0d\u591f\u7528\u4e86\n\n\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u6ce8\u610f\u5230\u4e00\u6761\u5f88\u5173\u952e\u7684\u6027\u8d28\uff1a**\u5047\u8bbe\u5f53\u524d\u8981\u4ece$u$\u8d70\u8def\u5f84$<u,v>$\u5230$v$\uff0c\u90a3\u4e48\u5728\u5408\u6cd5\u7684\u524d\u63d0\u4e0b\uff0c$u$\u80af\u5b9a\u662f\u8d8a\u5927\u8d8a\u597d**\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u9898\u76ee\u6709\u4e00\u6761\u5f88\u91cd\u8981\u7684\u9650\u5236\uff0c\u5c31\u662f$n$\u5ea7\u57ce\u5821\u90fd\u8981\u88ab\u5360\u9886\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e2\u7136\u8fd9\u6761\u8def\u8f6c\u79fb\u7684\u6536\u76ca\u662f\u76f8\u540c\u7684\uff0c\u800c\u591a\u4e00\u4e2a\u58eb\u5175\u4e5f\u8bb8\u80fd\u8ba9\u4f60\u5360\u9886\u66f4\u591a\u57ce\u5821\uff0c\u90a3\u4e48\u8d2a\u5fc3\u5730\u80af\u5b9a\u662f\u8981\u628a\u8fd9\u4e2a\u58eb\u5175\u7559\u7684\u65f6\u95f4\u8d8a\u957f\u8d8a\u597d\n\n\u4f9d\u7167\u8fd9\u6837\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u51fa$v_{u,i}$\uff0c\u6ee1\u8db3\u5b58\u5728\u8fb9$<u,v>$\uff0c\u4e14$u$\u662f\u8fde\u5411$v$\u7684\u6700\u8fdc\u7684\u4e00\u4e2a\u57ce\u5821\n\n\u7531\u4e8e$v_{u,i}$\u90fd\u662f\u4e92\u4e0d\u5e72\u6270\u7684\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u6536\u76ca\u7684\u4ece\u5927\u5230\u5c0f\uff0c\u8d2a\u5fc3\u5730\u5728$v_{u,i}$\u4e2d\u505a\u9009\u62e9\uff0c\u6ce8\u610f\u6240\u505a\u7684\u9009\u62e9\u5fc5\u987b\u662f\u6210\u524d\u7f00\u5f0f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u9009\u6b21\u4f18\u7684\u524d\u63d0\u6761\u4ef6\u662f\u66f4\u4f18\u7684\u90fd\u9009\u4e86\n\n\u53e6\u5916\uff0c\u9898\u76ee\u8fd8\u8bf4\u53ef\u4ee5\u539f\u5730\u7559\u5175\uff0c\u8fd9\u600e\u4e48\u641e\u5462\uff1f\n\n\u6211\u4eec\u4e0d\u59a8\u770b\u6210\u6bcf\u4e2a\u57ce\u5821\u4e0a\u90fd\u6709\u4e00\u6761\u81ea\u73af\uff0c\u4e0e\u5176\u5b83\u6709\u7740\u76f8\u540c\u7ec8\u70b9\u7684\u8def\u4e00\u8d77\u6bd4\u8f83\u8d77\u70b9\u7684\u8fdc\u8fd1\u5373\u53ef\n\n---\n\n\u8f6c\u79fb\u90e8\u5206\u5177\u4f53\u53ef\u4ee5\u770b\u770b\u4ee3\u7801\n\n---\n\n\u4ee3\u7801\u4e2d\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6700\u5927\u58eb\u5175\u4eba\u6570\u6211\u7528\u7684\u90fd\u662f\u5e38\u65705000\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u628a\u5b83\u6362\u6210\u58eb\u5175\u6570\u7684\u524d\u7f00\u548c\u6765\u51cf\u5c0f\u5e38\u6570\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n\tx=0;char c=getchar();bool f=0;\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f) x=-x;return  x;\n}\ntemplate<class t> inline void write(t x){\n\tif(x<0){putchar('-'),write(-x);}\n\telse{if(x>9)write(x/10);putchar('0'+x%10);}\n}\n\nconst int N=5005;\nint ans=-1,a[N],b[N],c[N],link[N],f[N][N],n,m,k,g[N];\nvector<int> nxt[N];\n\ninline bool cmp(const int &x,const int &y){\n\treturn c[x]>c[y];\n}\n\nsigned main(){\n\tread(n);read(m);read(k);\n\tfor(int i=1;i<=n;i++){\n\t\tread(a[i]);\n\t\tread(b[i]);\n\t\tread(c[i]);\n\t\tlink[i]=i; //\u5efa\u7acb\u81ea\u73af\n\t}\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tread(x);read(y);\n\t\tlink[y]=max(link[y],x); //\u5904\u7406\u51fa\u6700\u8fdc\u8d77\u70b9\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tnxt[link[i]].push_back(i); //\u679a\u4e3e\u7ec8\u70b9\uff0c\u4ece\u8be5\u70b9\u7684\u6700\u8fdc\u8d77\u70b9\u8fde\u8fb9\n\tfor(int i=1;i<=n;i++)\n\t\tsort(nxt[i].begin(),nxt[i].end(),cmp); //\u6309\u7167\u6536\u76ca\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\tmemset(f,~0x3f,sizeof f);\n\tf[0][k]=0; //\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=a[i];j+b[i]<=5000;j++) //\u7ee7\u627f\u4e0a\u4e2a\u57ce\u5821\u7684\u72b6\u6001\uff0c\u6ce8\u610fa[i]\u548cb[i]\n\t\t\tf[i][j+b[i]]=f[i-1][j];\n\t\tint cnt=nxt[i].size();\n\t\tfor(int j=0;j<=5000;j++){\n\t\t\tint sum=0;\n\t\t\tg[j]=f[i][j]; //\u53e6\u5916\u5f00\u4e2a\u4e34\u65f6\u6570\u7ec4g[]\uff0c\u4ee5\u514d\u8986\u76d6\u539f\u6570\u7ec4\n\t\t\tfor(int k=0;k<cnt;k++) if(j+k+1<=5000){\n\t\t\t\tsum+=c[nxt[i][k]]; //\u51e0\u4e2a\u524d\u7f00\u548c\n\t\t\t\tg[j]=max(g[j],f[i][j+k+1]+sum); //k+1\u662f\u56e0\u4e3ak\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5176\u5b9e\u662f\u8868\u793a\u5728\u524d\u7f00\u4e0a\u9009\u62e9\u7684\u57ce\u5821\u7684\u6570\u91cf\uff08\u5373\u8981\u82b1\u8d39\u7684\u58eb\u5175\u7684\u6570\u91cf\uff09\n\t\t\t}\n\t\t}\n\t\tmemcpy(f[i],g,sizeof g); //\u8d4b\u56de\u53bb\n\t}\n\tfor(int i=0;i<=5000;i++)\n\t\tans=max(ans,f[n][i]);\n\twrite(ans);\n}\n```",
        "postTime": 1576569505,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1271D \u3010Portals\u3011"
    },
    {
        "content": "# Solution\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8d2a\u5fc3\u7684\u60f3\u6cd5\uff1a**\u5bf9\u4e8e\u57ce\u5821 $u$ \uff0c\u6211\u4eec\u4e00\u5b9a\u662f\u5728\u6700\u540e\u4e00\u4e2a\u80fd\u5411\u5b83\u6d3e\u5175\u7684\u5730\u65b9\u9009\u62e9\u6d3e\u5175**\u3002\n\n\u8003\u8651\u6b63\u786e\u6027\uff1a\u5982\u679c\u5728\u524d\u9762\u6d3e\u5175\uff0c\u53ef\u80fd\u5bfc\u81f4\u540e\u9762\u7684\u58eb\u5175\u4e0d\u591f\uff0c\u800c\u5728\u6700\u540e\u7684\u5730\u65b9\u6d3e\u5175\uff0c\u5bf9\u4e4b\u540e\u7684\u5f71\u54cd\u4e0e\u5728\u524d\u9762\u6d3e\u5175\u76f8\u540c\u3002\n\n\u6240\u4ee5\u9009\u62e9\u5728\u6700\u540e\u6d3e\u5175\u5f71\u54cd\u662f\u6700\u5c0f\u7684\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u7528\u5176\u4e2d\u7684 $n$ \u6761\u8fb9\u5373\u53ef\u3002\n\n\u8003\u8651 $dp$ \u3002\n\n\u8bbe $dp_{i,j}$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u57ce\u5821\uff0c\u8fd8\u5269 $j$ \u4e2a\u58eb\u5175\u7684\u6700\u5927\u6536\u76ca\u3002\n\n\u8fd9\u663e\u7136\u662f\u4e00\u4e2a $01$ \u80cc\u5305\uff0c\u76f4\u63a5\u8f6c\u79fb\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \u3002\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u9053\u9898\u53ef\u4ee5\u505a\u5230 $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u8fd8\u662f\u8003\u8651\u8d2a\u5fc3\u3002\n\n\u6211\u4eec\u6bcf\u653b\u5360\u4e00\u5ea7\u57ce\u5821\uff0c\u5c31\u628a\u6240\u6709\u7684\u5175\u5168\u90e8\u6d3e\u51fa\u3002\n\n\u7136\u540e\u8003\u8651\u8c03\u6574\u3002\n\n\u5982\u679c\u5f53\u524d\u5269\u4f59\u58eb\u5175 $S$ \u4e0d\u5c0f\u4e8e $a_{i+1}$ \uff0c\u90a3\u4e48\u76f4\u63a5\u5411\u540e\u8d70\u3002\n\n\u5426\u5219\u6211\u4eec\u4ece\u6536\u76ca\u5c0f\u7684\u5f00\u59cb\u4f9d\u6b21\u6536\u56de\u58eb\u5175\uff0c\u76f4\u5230 $S\\geq a_{i+1}$ \u4e3a\u6b62\u3002\n\n\u5982\u679c\u5168\u90e8\u6536\u5b8c\u4e5f\u4e0d\u80fd\u653b\u5360\u4e0b\u4e00\u4e2a\uff0c\u5c31\u8f93\u4e86\u3002\n\n# Code\n\n```cpp\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il _print(T x){\n\tif(x/10) _print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class T>il print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\t_print(x);\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res;\n}\nconst int MAXN = 5e3+5;\nint n,m,k,u,v,val[MAXN];\nstruct Node{\n\tint a,b,c;\n}node[MAXN];\nvector<int> G[MAXN];\nit max(int x,int y){return x>y?x:y;}\npriority_queue<int> q;\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(m),read(k);\n\tfor(ri i=1;i<=n;++i)\n\t\tread(node[i].a),read(node[i].b),read(node[i].c),val[i]=i;\n\tfor(ri i=1;i<=m;++i)\n\t\tread(u),read(v),val[v]=max(val[v],u);\n\tfor(ri i=1;i<=n;++i)\n\t\tG[val[i]].push_back(i);\n\tfor(ri i=0,S=k;i<=n;++i){\n\t\tS+=node[i].b;\n\t\tfor(ri j=0;j<(int)G[i].size();++j){\n\t\t\tint v=G[i][j];\n\t\t\tq.push(-node[v].c),--S;\n\t\t}\n\t\twhile(S<node[i+1].a&&!q.empty())\n\t\t\tq.pop(),++S;\n\t\tif(S<node[i+1].a)\n\t\t\treturn puts(\"-1\"),0;\n\t}\n\tint res=0;\n\twhile(!q.empty())\n\t\tres+=-q.top(),q.pop();\n\tprint(res);\n\treturn 0;\n}\n```\n",
        "postTime": 1576468717,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "CF1271D Portals \u9898\u89e3"
    },
    {
        "content": "## \u95f2\u8bdd\n\n\u611f\u89c9\u5e94\u8be5\u51fa\u4e00\u4e2a $n \\leq 10^6$ \u5e76\u4e14 $k,b_i \\leq 10^9$ \u7684 Hard Version \u7248\u672c\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u79cd\u662f $O(n(k+\\sum b_i))$ \u7684 dp\uff0c\u4e00\u79cd\u662f $O(n \\log n)$ \u7684\u8d2a\u5fc3\u3002\n\n## \u601d\u8def\n\n\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u60f3\u7684\u8d2a\u5fc3\u601d\u8def\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u9898\u76ee\u96be\u5ea6\uff0c\u90a3\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5821\u6211\u4eec\u90fd\u5c3d\u91cf\u62d6\u5230\u6700\u540e\u518d\u63a7\u5236\uff0c\u56e0\u4e3a\u63a7\u5236\u57ce\u5821\u9700\u8981\u6d88\u8017\u58eb\u5175\uff0c\u7559\u7740\u58eb\u5175\u5e76\u4e0d\u4f1a\u4f7f\u7b54\u6848\u66f4\u52a3\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5148\u6c42\u51fa\u6bcf\u4e2a\u57ce\u5821\u6700\u665a\u6700\u665a\u4ec0\u4e48\u65f6\u5019\u5fc5\u987b\u5360\u9886\u3002\u8fd9\u4e2a\u5f88\u597d\u6c42\uff0c\u56e0\u4e3a\u8f93\u5165\u7684 $u,v$ \u4fdd\u8bc1 $u>v$ \u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u7528 $u$ \u66f4\u65b0 $v$ \u6700\u665a\u7684\u65f6\u95f4 $lst_v$ \u5373\u53ef\u3002\u4e3a\u4ec0\u4e48\u4e0d\u7528 $lst_u$ \u66f4\u65b0\u5462\uff1f\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u4e86 **\u5982\u679c\u8d70\u5230\u4e86 $i+1$ \u90a3\u4e48 $i$ \u8fd9\u91cc\u7684\u5c0f\u8def\u5c31\u4e0d\u80fd\u7528\u4e86**\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a $lst$ \u6570\u7ec4\u4e0d\u5177\u6709\u53ef\u8f6c\u79fb\u6027\u3002\n\n### \u4e00\u3001dp \u505a\u6cd5\n\n\u60f3\u5230\u8fd9\u91cc\u9898\u76ee\u96be\u5ea6\u5df2\u7ecf\u51e0\u4e4e\u6ca1\u6709\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u80cc\u5305\u95ee\u9898\u3002\u6211\u4eec\u8bbe $dp_{i,j}$ \u8868\u793a\u5f53\u524d\u5230\u4e86 $i$ \u8282\u70b9\uff0c\u62e5\u6709 $j$ \u4e2a\u58eb\u5175\u7684\u65f6\u5019\uff0c\u524d $i$ \u4e2a\u8282\u70b9\u80fd\u53d6\u5f97\u7684\u6700\u5927\u503c\u3002\n\n\u7b2c\u4e00\u4e2a\u8f6c\u79fb\u5c31\u662f\u6211\u4eec\u653b\u6253 $i$ \u8fd9\u91cc\u3002\u90a3\u4e48\u6211\u4eec\u7684\u58eb\u5175\u4f1a\u9700\u8981 $a_i$ \u4e2a\uff0c\u6240\u4ee5 $j \\geq a_i$\uff1b\u53e6\u5916\u6211\u4eec\u4f1a\u83b7\u5f97 $b_i$ \u4e2a\u58eb\u5175\uff0c\u6240\u4ee5\u8981\u4ece $j-b_i$ \u8f6c\u79fb\u8fc7\u6765\uff0c\u56e0\u6b64 $j \\geq a_i+b_i$\uff1b\u6ce8\u610f\u6211\u4eec\u5e76\u6ca1\u6709\u5360\u9886\uff0c\u6240\u4ee5\u8fd9\u4e2a $c_i$ \u4e0d\u80fd\u52a0\u4e0a\u3002\n\n\u90a3\u4e48\u7b2c\u4e00\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u5c31\u51fa\u6765\u4e86\uff1a\n\n$$dp_{i,j}=\\max(dp_{i-1,j-b_i},dp_{i,j})[j \\geq a_i]$$\n\n\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\u5c31\u662f\u6211\u4eec\u5360\u9886\u6240\u6709\u5f53\u524d\u5fc5\u987b\u5360\u9886\u7684\u5730\u65b9\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f1a\u635f\u5931 $1$ \u7684\u5175\u529b\uff0c\u83b7\u5f97 $c_i$ \u7684\u4ef7\u503c\u3002\n\n\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$dp_{i,j}=\\max_{lst_k=i}(dp_{i,j},dp_{i,j+1}+c_k)$$\n\n\u4e0a\u9762\u867d\u7136\u679a\u4e3e\u4e86 $k$\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u53cc\u6307\u9488\uff0c\u56e0\u4e3a\u8981\u66f4\u65b0\u7684\u57ce\u5821\u4e00\u5171\u5c31 $n$ \u4e2a\uff0c\u5747\u644a\u4e0b\u6765\u5e76\u4e0d\u4f1a\u5347\u9ad8\u590d\u6742\u5ea6\u3002\n\n\u6700\u540e\u8f93\u51fa $\\max\\limits_{j=0}^{k+\\sum b_i} dp_{n,j}$ \u5373\u53ef\u3002\u65f6\u95f4\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $O(n(k+\\sum b_i))$\u3002\n\n### Code 1\n\n```cpp\n#include <bits/stdc++.h>\ninline int qr(){\n\tchar ch=getchar(); bool f=1; int w=0;\n\tfor(;ch<'0' || ch>'9';ch=getchar()) if(ch=='-')f=0;\n\tfor(;ch>='0' && ch<='9';ch=getchar()) w=w*10+ch-'0';\n\treturn f?w:-w;\n}\nusing namespace std;\nconst int MAXN=5005;\n\nint a[MAXN],b[MAXN],c[MAXN];\nint lst[MAXN],dp[MAXN][MAXN];\npair<int,int> occ[MAXN]; // \u95f2\u8bdd\uff1aocc, short of occupy = \u5360\u9886\uff08\nint main(){\n\tint n=qr(),m=qr(),k=qr(),M=k;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=qr(); b[i]=qr();\n\t\tc[i]=qr(); lst[i]=i;\n\t\tM+=b[i]; // \u8ba1\u7b97\u80cc\u5305\u5bb9\u91cf\uff08\u8fd9\u4e2a\u76f8\u6bd4\u4e8e 5000\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c0f\u5e38\u6570\uff09 \n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint u=qr(),v=qr();\n\t\tlst[v]=max(lst[v],u); // \u8ba1\u7b97 lst \n\t}\n\tfor(int i=1;i<=n;i++) occ[i]=make_pair(lst[i],c[i]); // \u6309\u7167 lst \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u987a\u4fbf\u8bb0\u5f55 c \n\tsort(occ+1,occ+1+n);\n\tint cur=1,maxn=-1;\n\tmemset(dp,-0x3f,sizeof(dp));\n\tfor(int i=0;i<=k;i++) dp[0][i]=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=a[i]+b[i];j<=M;j++)\n\t\t\tdp[i][j]=max(dp[i][j],dp[i-1][j-b[i]]); // \u8f6c\u79fb 1 \n\t\twhile(occ[cur].first==i && cur<=n){\n\t\t\tfor(int j=0;j<=M;j++)\n\t\t\t\tdp[i][j]=max(dp[i][j],dp[i][j+1]+occ[cur].second); // \u8f6c\u79fb 2 \n\t\t\tcur++;\n\t\t}\n//\t\tfor(int j=0;j<=M;j++){\n//\t\t\tcout<<\"dp[\"<<i<<\"][\"<<j<<\"]=\"<<dp[i][j]<<endl;\n//\t\t}\n\t}\n\tfor(int j=0;j<=M;j++) maxn=max(maxn,dp[n][j]);\n\tcout<<maxn<<endl; \n\treturn 0;\n}\n\n```\n\n\u6839\u636e\u5b9e\u7528\u4e3b\u4e49\uff0c\u80fd\u505a\u51fa\u6765\u5c31\u884c\uff0c\u5e94\u8be5\u5230\u6b64\u4e3a\u6b62\u3002~~\u4f46\u662f\u7531\u4e8e\u6211\u6bd4\u8f83\u61d2\uff0c\u61d2\u5f97\u5230\u6b64\u4e3a\u6b62\uff0c\u6240\u4ee5\u5c31\u53e3\u80e1\u4e86\u4e00\u4e2a\u5947\u5947\u602a\u602a\u7684\u8d2a\u5fc3~~\u3002\n\n$$\\text{----------------------------------------- \u5b9e\u800c\u4e0d\u534e\u7684\u5206\u5272\u7ebf -----------------------------------------}$$\n\n### \u4e8c\u3001\u8d2a\u5fc3\u505a\u6cd5\n\n\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u8003\u8651\uff0c\u5148\u628a\u8fd9\u4e2a\u6e38\u620f\u6253\u5b8c\u770b\u80fd\u4e0d\u80fd\u901a\u5173\uff0c\u901a\u5173\u4e4b\u540e\u518d\u6bcf\u6b21\u8003\u8651\u5360\u9886\u4ef7\u503c\u66f4\u5927\u7684\u57ce\u5821\u5462\uff1f\n\n\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a $d_i$ \u8868\u793a\u5230\u4e86 $i$ \u8fd9\u4e2a\u4f4d\u7f6e\u5269\u4f59\u7684\u58eb\u5175\u6570\u91cf\u3002\u7136\u540e\uff0c\u6211\u4eec\u628a\u6240\u6709\u7684\u57ce\u5821\u6309\u4ef7\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u5982\u679c\u6211\u4eec\u8981\u5728 $lst_i$ \u65f6\u523b\u5360\u9886\u8fd9\u4e2a\u57ce\u5821\uff0c\u6211\u4eec\u5fc5\u987b\u8ba9 $lst_i$ \u53ca\u4e4b\u540e\u7684\u65f6\u523b\uff0c\u81f3\u5c11\u90fd\u5269\u4e0b\u4e00\u4e2a\u58eb\u5175\uff0c\u6240\u4ee5\u6211\u4eec\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\u5373\u53ef\u3002\u7136\u540e\uff0c\u6211\u4eec\u5bf9 $[lst_i,n]$ \u8fd9\u4e2a\u533a\u95f4\u8fdb\u884c\u533a\u95f4\u51cf\u4e00\u3002\n\n\u66b4\u529b\u505a\u7684\u590d\u6742\u5ea6\u662f $O(n^2)$\u3002\u6240\u4ee5\u53ef\u4ee5\u518d\u51fa\u4e00\u4e2a $n \\leq 5000$ \u7136\u540e $b_i,k \\leq 10^{9}$ \u7684\uff08\u72d7\u5934\n\n\u4e0d\u8fc7\u8fd9\u4e2a\u590d\u6742\u5ea6\u5f88\u597d\u4f18\u5316\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\u5173\u952e\u662f\u7801\u91cf\u4e5f\u633a\u77ed\uff0c\u4f60\u8bf4 dp \u6c14\u4e0d\u6c14\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/w2yd8qup.png)\n\n\u6b63\u786e\u6027\u7684\u8bdd\uff0c\u5982\u679c\u6211\u4eec\u5927\u7684\u80fd\u653e\u4e0d\u653e\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u653e\u4e00\u4e2a\u66f4\u5c0f\u7684\u57ce\u5821\uff0c\u7b54\u6848\u4e0d\u4f1a\u66f4\u4f18\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8d2a\u5fc3\u5e94\u8be5\u6ca1\u5565\u95ee\u9898\u3002\n\n### Code 2\n\n```cpp\n#include <bits/stdc++.h>\ninline int qr(){\n\tchar ch=getchar(); bool f=1; int w=0;\n\tfor(;ch<'0' || ch>'9';ch=getchar()) if(ch=='-')f=0;\n\tfor(;ch>='0' && ch<='9';ch=getchar()) w=w*10+ch-'0';\n\treturn f?w:-w;\n}\n\nusing namespace std;\nconst int MAXN=5005;\n\nint a[MAXN],b[MAXN],c[MAXN];\nint d[MAXN],lst[MAXN];\npair<int,int> occ[MAXN];\n\nnamespace Seg_tree{ // \u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u652f\u6301\u533a\u95f4 -1 \n\tint tr[MAXN<<2],tag[MAXN<<2];\n\tvoid push_down(int p,int l,int r){\n\t\tif(!tag[p]) return;\n\t\ttr[p<<1]+=tag[p];\n\t\ttr[p<<1|1]+=tag[p];\n\t\ttag[p<<1]+=tag[p];\n\t\ttag[p<<1|1]+=tag[p];\n\t\ttag[p]=0;\n\t}\n\tvoid build(int p,int l,int r){\n\t\tif(l==r){\n\t\t\ttr[p]=d[l];\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p<<1,l,mid);\n\t\tbuild(p<<1|1,mid+1,r);\n\t\ttr[p]=min(tr[p<<1],tr[p<<1|1]);\n\t}\n\tvoid upd(int p,int l,int r,int st,int en){\n\t\tif(l>en || r<st) return;\n\t\tif(st<=l && r<=en){\n\t\t\ttr[p]--;\n\t\t\ttag[p]--;\n\t\t\treturn;\n\t\t}\n\t\tpush_down(p,l,r);\n\t\tint mid=(l+r)>>1;\n\t\tupd(p<<1,l,mid,st,en);\n\t\tupd(p<<1|1,mid+1,r,st,en);\n\t\ttr[p]=min(tr[p<<1],tr[p<<1|1]);\n\t}\n\tint query(int p,int l,int r,int st,int en){\n\t\tif(l>en || r<st) return 1e9;\n\t\tif(st<=l && r<=en) return tr[p];\n\t\tpush_down(p,l,r);\n\t\tint mid=(l+r)>>1;\n\t\treturn min(query(p<<1,l,mid,st,en),query(p<<1|1,mid+1,r,st,en)); \n\t}\n}\nusing namespace Seg_tree;\nint main(){\n\tint n=qr(),m=qr(),k=qr();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=qr(); b[i]=qr();\n\t\tc[i]=qr(); lst[i]=i;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint u=qr(),v=qr();\n\t\tlst[v]=max(lst[v],u); // \u548c dp \u7684\u7248\u672c\u540c\u7406\uff0c\u8ba1\u7b97 lst \n\t}\n\tint now=k;\n\tfor(int i=1;i<=n;i++){\n\t\tif(now<a[i]) return puts(\"-1\"),0; // \u5982\u679c\u5175\u4e0d\u591f\u4e86\u90a3\u5c31 GG \u4e86 \n\t\tnow=now+b[i]; // \u5426\u5219\u66f4\u65b0\u5175\u529b \n\t\td[i]=now-a[i+1]; // \u8ba1\u7b97\u5f53\u524d\u5bcc\u88d5\u5175\u529b \n\t}\n\tbuild(1,1,n); // \u5efa\u6811 \n\tfor(int i=1;i<=n;i++) occ[i]=make_pair(c[i],lst[i]); // \u6309\u7167 c \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u548c dp \u4e0d\u540c \n\tsort(occ+1,occ+1+n,greater<pair<int,int> >()); // \u4ece\u5927\u5230\u5c0f \n\tint ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint val=occ[i].first,x=occ[i].second;\n\t\tif(query(1,1,n,x,n)>0){ // \u5982\u679c\u80fd\u653e\u5c31\u653e \n\t\t\tans+=val; // \u8bb0\u5f55\u4ef7\u503c\n\t\t\tupd(1,1,n,x,n); // \u533a\u95f4 -1 \n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1661663449,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "CF1271D \u9898\u89e3"
    },
    {
        "content": "\u8d2a\u5fc3+DP\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u540e\u9009\u663e\u7136\u6bd4\u5148\u9009\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u70b9\u90fd\u5bf9\u5e94\u4e86\u552f\u4e00\u4e00\u4e2a\u6765\u6e90\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u70b9\u6240\u80fd\u56de\u6eaf\u5230\u7684\u70b9\u7684\u6536\u76ca\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8d2a\u5fc3\u5730\u9009\u524d\u7f00\u3002\n\n\u5b9a\u4e49 $f_{i,j}$ \u8868\u793a\u8003\u8651\u4e86\u524d $i$ \u4e2a\u70b9\uff0c\u5269\u4e0b $j$ \u4e2a\u4eba\uff0c\u6700\u5927\u6536\u76ca\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u548c $01$ \u80cc\u5305\u7684\u4e00\u6837\u3002\n\n$$f_{i,j}=f_{i-1,j-b_i}$$\n\n$$f_{i,j}=\\max\\limits_{t}(f_{i-1,j+t-b_i}+\\sum\\limits_{k=1}^{t}c_{vec_{i,k}})$$\n\n\u6ce8\u610f\u8fb9\u754c,\u6211\u56e0\u4e3a RE \u8c03\u4e86\u534a\u5929....\n\n\u590d\u6742\u5ea6 $O(n^2)$\u3002\u4ee3\u7801\u5f88\u77ed\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5000+5,inf=INT_MAX>>1;\nint n,m,k,a[N],b[N],c[N],l[N],f[N][N];\nvector<int>vec[N];\nbool cmp(int x,int y){return c[x]>c[y];}\nint main(){\n  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>a[i]>>b[i]>>c[i];\n\t\tl[i]=i;\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tint u,v;cin>>u>>v;\n\t\tl[v]=max(l[v],u);\n\t}\n\tfor(int i=1;i<=n;++i)vec[l[i]].push_back(i);\n\tfor(int i=1;i<=n;++i)sort(vec[i].begin(),vec[i].end(),cmp);\n\tmemset(f,~0x3f,sizeof(f));f[0][k]=0;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=0;j<=5000;++j){\n\t\t\tint v=0,w=0;\n\t\t\tif(j-b[i]>=a[i])f[i][j]=f[i-1][j-b[i]];\n\t\t\tfor(int t=0;t<vec[i].size();++t){\n\t\t\t\t++v;w+=c[vec[i][t]];\n\t\t\t\tint p=j+v-b[i];\n\t\t\t\tif(p>=a[i]&&p<=5000)f[i][j]=max(f[i][j],f[i-1][p]+w);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=-1;\n\tfor(int j=0;j<=5000;++j)ans=max(ans,f[n][j]);\n\tcout<<ans<<endl;\n  return 0;\n}\n\n```\n",
        "postTime": 1684371978,
        "uid": 173864,
        "name": "EstasTonne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1271D"
    },
    {
        "content": "~~\u7701\u9009\u524d\u968f\u4fbf\u5199\u70b9\u4e1c\u897f~~\n\n\u5bb9\u6613\u53d1\u73b0\u5175\u7684\u6570\u91cf\u4e0d\u964d\uff0c\u6545\u6bcf\u4e2a\u70b9\u8d8a\u665a\u5360\u9886\u80af\u5b9a\u8d8a\u4f18\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6bcf\u4e2a $c_i$ \u7ed1\u5728\u80fd\u591f\u5360\u9886 $i$ \u53f7\u70b9\uff08\u5373\u5b58\u5728 $j\\to i$\uff09\u7684\u4e0b\u6807\u6700\u5927\u7684\u70b9 $j$ \u4e0a\u3002\u82e5\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u70b9 $j$\uff0c\u76f4\u63a5\u7ed1\u5728 $i$ \u4e0a\u3002\n\n\u6ce8\u610f\u5230 $k+\\sum b\\leq 5000$\uff0c\u6545\u53ef\u4ee5\u76f4\u63a5 dp\u3002\u8bbe $f_{i,j}$ \u8868\u793a\u8003\u8651\u524d $i$ \u4e2a\u70b9\uff0c\u6709 $j$ \u4e2a\u5175\u7684\u6700\u5927\u6536\u76ca\uff0c\u65b9\u7a0b\uff1a\n\n$$f_{i,j+b_i-k}=\\max\\{f_{i-1,j}+c_{i,k}\\}$$\n\n\u5176\u4e2d $c_{i,k}$ \u8868\u793a\u7ed1\u5728 $i$ \u53f7\u70b9\u4e0a\u7684\u524d $k$ \u5927 $c$ \u7684\u548c\u3002\n\n\u6ce8\u610f\u8fb9\u754c\uff1a\u80fd\u591f\u8f6c\u79fb\u5f53\u4e14\u4ec5\u5f53 $j-a_i\\geq0,j+b_i-k\\geq0$\u3002\n\n\u521d\u59cb\u6761\u4ef6 $f_{0,i}=0,0\\leq i\\leq k$\uff0c\u5176\u4ed6\u4f4d\u7f6e\u5747\u4e3a $-\\inf$\u3002\n\n```cpp\n//CF1271D\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 5010;\nint n, m, k, a[N], b[N], vis[N], f[N][N];\nvector<int> c[N], g[N];\n\nint main(){\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tfor(int i = 1; i <= n; ++ i){\n\t\tint tmp;\n\t\tscanf(\"%d%d%d\", &a[i], &b[i], &tmp);\n\t\tc[i].push_back(tmp);\n\t}\n\tfor(int i = 1; i <= m; ++ i){\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tg[u].push_back(v);\n\t}\n\tfor(int i = n; i >= 1; -- i){\n\t\tfor(int y : g[i]){\n\t\t\tif(vis[y]){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvis[y] = 1;\n\t\t\tc[i].push_back(c[y][0]);\n\t\t\tc[y].clear();\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++ i){\n\t\tsort(c[i].begin(), c[i].end());\n\t\tc[i].push_back(0);\n\t\treverse(c[i].begin(), c[i].end());\n\t\tfor(int j = 1; j < c[i].size(); ++ j){\n\t\t\tc[i][j] += c[i][j-1];\n\t\t}\n\t}\n\tmemset(f, 0xcf, sizeof(f));\n\tfor(int i = 0; i <= k; ++ i){\n\t\tf[0][i] = 0;\n\t}\n\tfor(int i = 1; i <= n; ++ i){\n\t\tfor(int j = 0; j <= 5000; ++ j){\n\t\t\tfor(int k = 0; k < c[i].size(); ++ k){\n\t\t\t\tif(j >= a[i] && j+b[i]-k >= 0 && f[i-1][j] >= 0){\n\t\t\t\t\tf[i][j+b[i]-k] = max(f[i][j+b[i]-k], f[i-1][j] + c[i][k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0xcfcfcfcf;\n\tfor(int i = 0; i <= 5000; ++ i){\n\t\tans = max(ans, f[n][i]);\n\t}\n\tprintf(\"%d\\n\", ans < 0 ? -1 : ans);\n}\n```",
        "postTime": 1679896199,
        "uid": 390770,
        "name": "AiRC0S",
        "ccfLevel": 0,
        "title": "\u95e8\u6237\u7f51\u7ad9 \u661f\u53f7 \u4e24\u5343\u4e00"
    },
    {
        "content": "\u867d\u7136\u7ed9\u51fa\u4e86\u56fe\uff0c\u4f46\u662f\u548c\u56fe\u6ca1\u6709\u592a\u5927\u5173\u7cfb\u3002\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u975e\u5e38\u6734\u7d20\u7684 DP\u3002\n\n\u8bbe $dp_{i,j}$ \u8868\u793a\u5f53\u524d\u5360\u9886\u5230 $i$\uff0c\u62e5\u6709 $j$ \u4e2a\u58eb\u5175\u7684\u6700\u5927 $\\sum c$\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u5c31\u5f88\u663e\u7136\u4e86\u3002\n\n$\\begin{cases}dp_{i,j+b_i}\\leftarrow dp_{i-1,j}\\space(j\\ge a_i)\\\\dp_{i,j}\\leftarrow dp_{i,j+1}+c_{to}\\space(i-to\\text{ is connected})\\end{cases}$\n\n\u679a\u4e3e $i,j,to$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2m)$\uff0c\u4e0d\u80fd\u627f\u53d7\u3002\n\n\u8003\u8651\u8fdb\u884c\u4f18\u5316\u3002\u7531\u4e8e $to$ \u662f\u552f\u4e00\u4e00\u4e2a\u72b6\u6001\u5185\u6ca1\u51fa\u73b0\u7684\u679a\u4e3e\u91cf\uff0c\u4ece $to$ \u65b9\u9762\u4f18\u5316\u3002\n\n\u60f3\u5230\u4e00\u4e2a\u8d2a\u5fc3\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $to$\uff0c\u663e\u7136\u662f\u5230\u6700\u540e\u80fd\u8d70\u7684\u65f6\u5019\u518d\u8d70\u6700\u4f18\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6bcf\u4e00\u6b21\u5360\u9886\u4e0d\u6d88\u8017\u58eb\u5175\uff0c\u800c\u6709\u9650\u5236 $a_i$\uff0c\u6240\u4ee5\u5f53\u524d\u58eb\u5175\u8d8a\u591a\u8d8a\u597d\u3002\n\n\u4e5f\u5c31\u662f\uff0c\u4e0d\u59a8\u8ba9\u58eb\u5175\u518d\u8d70\u4e00\u6bb5\uff0c\u6765\u83b7\u5f97 $b_i$ \u4e2a\u58eb\u5175\uff0c\u6700\u540e\u518d\u8d70\u5230 $to$ \u53bb\u3002\n\n\u6240\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u70b9\u6700\u540e\u7531\u54ea\u4e2a\u70b9\u5230\u8fbe\uff0c\u518d\u8d70\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 5e3 + 10, MAX = 5e3, inf = 1e9;\nint n, m, k, lt[N], a[N], b[N], c[N], dp[N][N];\npair <int, int> fk[N];\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(0), cout.tie(0);\n    cin >> n >> m >> k; for (int i = 1; i <= n; ++i)\n        cin >> a[i] >> b[i] >> c[i], lt[i] = i;\n    for (int i = 1, u, v; i <= m; ++i)\n        cin >> u >> v, lt[v] = max(lt[v], u);\n    for (int i = 1; i <= n; ++i) fk[i] = {lt[i], c[i]};\n    sort(fk + 1, fk + 1 + n);\n    for (int i = k + 1; i <= MAX; ++i) dp[0][i] = -inf;\n    int prev = 1;\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 0; j <= MAX; ++j) dp[i][j] = -inf;\n        for (int j = a[i]; j <= MAX; ++j)\n            dp[i][j + b[i]] = max(dp[i][j + b[i]], dp[i - 1][j]);\n        while (prev <= n && fk[prev].first == i) {\n            for (int j = 0; j < MAX; ++j)\n                dp[i][j] = max(dp[i][j], dp[i][j + 1] + fk[prev].second);\n            ++prev;\n        }\n    }\n    int res = -1;\n    for (int i = 0; i <= MAX; ++i) res = max(res, dp[n][i]);\n    cout << res << endl;\n    return 0;\n}\n```",
        "postTime": 1669170170,
        "uid": 487752,
        "name": "MistZero",
        "ccfLevel": 0,
        "title": "\u8d2a\u5fc3\u7b56\u7565\u4f18\u5316 DP\u3002"
    },
    {
        "content": "\u5982\u679c\u76f4\u63a5\u6309\u56fe\u4e2d\u7684\u5173\u7cfb\u8fdb\u884c\u8f6c\u79fb\uff0c\u5219\u4f1a\u51fa\u73b0\u91cd\u590d\u6d3e\u5175\u7684\u60c5\u51b5\u3002\n\n**\u591a\u4e2a\u96be\u4ee5\u5904\u7406\uff0c\u8003\u8651\u4fdd\u7559\u5176\u4e2d\u4e00\u4e2a**\u3002\u4e00\u4e2a\u8d2a\u5fc3\u7684\u505a\u6cd5\u662f\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u80fd\u88ab\u63a7\u5236\u7684\u6700\u5927\u65f6\u95f4\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5e26\u7740\u653b\u57ce\u7684\u519b\u961f\u6700\u591a\u3002\n\n```cpp\nconst int N = 5005;\nint n, m, k, a[N], b[N], c[N];\nBS<int> g[N], t[N];\nint postCont[N]; // \u4e00\u4e2a\u70b9\u6700\u665a\u80fd\u88ab\u54ea\u4e2a\u70b9\u6d3e\u5175\u5360\u636e\n\nint f[N][N]; // \u5df2\u653b\u5360 i, \u73b0\u6709 j \u4e2a\u58eb\u5175\nint main() {\n    rd(n, m, k);\n    U (i, 1, n) rd(a[i], b[i], c[i]), postCont[i] = i;\n\n    U (i, 1, m) {\n        int u, v; rd(u, v);\n        g[u] += v;\n        postCont[v] = max(postCont[v], u);\n    }\n    U (i, 1, n) t[postCont[i]] += i;\n\n    ms(f, 0xc0);\n    f[0][k] = 0;\n    U (i, 1, n) {\n        U (j, a[i], 5000 - b[i])\n            f[i][j + b[i]] = f[i - 1][j];\n        for (int v : t[i])\n            U (j, 1, 5000)\n                f[i][j - 1] = max(f[i][j] + c[v], f[i][j - 1]);\n    }\n\n    int ans = f[n][0];\n    U (j, 1, 5000)\n        ans = max(ans, f[n][j]);\n    printf(\"%d\\n\", (ans < 0) ? -1 : ans);\n}\n```",
        "postTime": 1661571761,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] CF1271D Portals"
    },
    {
        "content": "- [CF1271D Portals](https://www.luogu.com.cn/problem/CF1271D)\n\n\u6613\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u53ea\u6709\u9a7b\u5175\u64cd\u4f5c\u624d\u4f1a\u4f7f\u5175\u529b\u51cf\u5c11\uff0c\u5f71\u54cd\u6700\u7ec8\u662f\u5426\u80fd\u80dc\u5229\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u57ce\u5821 $i$\uff0c\u5982\u679c\u8981\u5728 $i$ \u5904\u9a7b\u5175\uff0c\u6211\u4eec\u4e00\u5b9a\u662f\u5728\u6700\u540e\u4e00\u4e2a\u80fd\u5230\u8fbe $i$ \u7684\u5730\u65b9\u5411 $i$ \u9a7b\u5175\uff0c\u8fd9\u6837\u624d\u80fd\u5c3d\u53ef\u80fd\u7684\u51cf\u5c11\u9a7b\u5175\u64cd\u4f5c\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u3002\n\n\u8bbe\uff1a\n\n$$s_i= \\sum_{k=1}^i b_i+k$$\n\n\u5373\u4e3a\u5982\u679c\u5728\u524d $i$ \u4f4d\u4e0d\u9a7b\u5175\u6b64\u65f6\u7684\u5175\u529b\uff0c\u90a3\u663e\u7136\u5728\u524d $i$ \u4f4d\u6211\u4eec\u6700\u591a\u8fdb\u884c\u9a7b\u5175 $lim_i=\\min_{k=i+1}^n(s_{k-1}-a_k)$ \u6b21\uff0c\u7279\u522b\u7684\uff0c$lim_n =s_n$\uff0c\u90a3\u4e48\u6211\u4eec\u5373\u53ef\u4ee5\u5728\u8fd9\u4e2a\u9650\u5236\u4e0b\u505a\u80cc\u5305\uff1a\n\n> $f_{i,j}$ \u4e3a\u7ecf\u8fc7\u524d $i$ \u4e2a\u57ce\u5821\uff0c\u9a7b\u519b\u4e86 $j$ \u4e2a\u57ce\u5821\u7684\u6700\u5927\u503c\uff0c\u5176\u4e2d $j\\leq lim_i$\uff0c\u90a3\u4e48\u7b54\u6848\u5373\u4e3a $f_{n,s_n}$\n\n**Code**\n\n```cpp\n#include <bits/stdc++.h>\n#define Nep(i, l, r) for(int i = l; i != r; ++ i)\n#define Rep(i, l, r) for(int i = l; i <= r; ++ i)\n#define rep(i, l, r) for(int i = l; i < r; ++ i)\n#define Lep(i, l, r) for(int i = l; i >= r; -- i)\n#define lep(i, l, r) for(int i = l; i > r; -- i)\n#define ll long long\n#define ull unsigned long long\n#define int long long\n#define Maxn 5005\n#define Min(a, b) a = std :: min(a, b)\n#define Max(a, b) a = std :: max(a, b)\n\nint n, m, k, dp[Maxn], minn = 0, lim[Maxn];\nstd :: vector <int> g[Maxn];\nint a[Maxn], b[Maxn], c[Maxn];\nint las[Maxn], s[Maxn];\n\nsigned main() {\n\tscanf(\"%lld%lld%lld\", &n, &m, &s[0]); int u, v; int ans = 0; \n    Rep(i, 1, n) scanf(\"%lld%lld%lld\", &a[i], &b[i], &c[i]), las[i] = i, s[i] = s[i - 1] + b[i];\n    Rep(i, 1, n) Min(minn, lim[i] = s[i - 1] - a[i]); if(minn) return printf(\"-1\"), 0; lim[n + 1] = s[n];\n    Lep(i, n, 1) Min(lim[i], lim[i + 1]); Rep(i, 1, m) scanf(\"%lld%lld\", &u, &v), Max(las[v], u);\n    Rep(i, 1, n) g[las[i]].push_back(i);  Rep(i, 1, n)  for(int j : g[i]) Lep(k, lim[i + 1], 1) Max(dp[k], dp[k - 1] + c[j]);\n    Rep(i, 0, s[n]) Max(ans, dp[i]); return printf(\"%lld\", ans), 0;\n}\n```",
        "postTime": 1661245835,
        "uid": 486187,
        "name": "2000VOLT",
        "ccfLevel": 0,
        "title": "CF1271D \u9898\u89e3"
    },
    {
        "content": "\u6bd4\u8f83\u7ecf\u5178\u7684\u8d2a\u5fc3\u9898\u4e86\u3002\n\n\u9700\u8981\u660e\u786e\u7684\u4e00\u70b9\u662f\u6bcf\u5ea7\u57ce\u5821\u80fd\u591f\u7a7a\u4f59\u7684\u58eb\u5175\u6570\u5355\u8c03\u4e0d\u51cf\u3002\n\n\u90a3\u663e\u7136\u7684\u4e00\u4e2a\u8d2a\u5fc3\u662f\u5bf9\u4e8e\u8fd9\u5ea7\u57ce\u5821\uff0c\uff08\u5982\u679c\u8981\u63a7\u5236\u7684\u8bdd\uff09\u9009\u53d6\u6700\u540e\u80fd\u5012\u56de\u6765\u63a7\u5236\u8fd9\u4e2a\u57ce\u5821\u7684\u4f4d\u7f6e\u6d3e\u5175\u662f\u6700\u4f18\u7684\u3002\n\n\u7136\u540e\u8d2a\u5fc3\u5730\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u2018\u503c\u5f97\u2019\u5012\u56de\u53bb\u9a7b\u5175\u7684\u6709\u54ea\u4e9b\u4f4d\u7f6e\uff08\u90bb\u63a5\u8868\u6216\u8005\u52a8\u6001\u6570\u7ec4\uff09\uff0c\u663e\u7136\u6bcf\u4e2a\u57ce\u5821\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u56de\u6eaf\u70b9\u3002\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u5012\u56de\u53bb\u7684\u4f4d\u7f6e\u7684\u4ef7\u503c\u9ad8\u4e8e\u6211\u5df2\u7ecf\u9009\u8fc7\u7684\u67d0\u4e9b\u4f4d\u7f6e\u7684\u4ef7\u503c\uff0c\u90a3\u4e48\u6211\u53ef\u4ee5\u8003\u8651\u53cd\u6094\u505a\u51fa\u7684\u9009\u62e9\uff0c\u8f6c\u800c\u9009\u62e9\u5728\u4ef7\u503c\u66f4\u9ad8\u7684\u4f4d\u7f6e\u9a7b\u5175\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u5c31\u662f\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u5b58\u50a8\u4e0b\u5df2\u505a\u51fa\u7684\u9009\u62e9\u7684\u4ef7\u503c\uff0c\u7136\u540e\u63d2\u5165\u5f53\u524d\u80fd\u505a\u51fa\u7684\u9009\u62e9\uff0c\u518d\u5f39\u51fa\u4e00\u5b9a\u6570\u91cf\u7684\u4ef7\u503c\uff08\u4fdd\u8bc1\u80fd\u5f81\u670d\u4e0b\u4e00\u4e2a\u57ce\u5821\uff09\u3002\n\n\u6ce8\u610f ```priority_queue``` \u9ed8\u8ba4\u662f\u5927\u6839\u5806\uff0c\u4ef7\u503c\u53d6\u76f8\u53cd\u6570\u540e\u5806\u9876\u5c31\u662f\u6700\u5c0f\u503c\uff08\u53d6\u51fa\u7684\u65f6\u5019\u9700\u8981\u4e58\u4e0a -1\uff09\u3002\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\ninline void read(int &x)\n{\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x * 10 + ch - 48;\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define N 5005\nint n, k, a[N], b[N], c[N];\nint m, last[N];\nvector<int> fr[N];\nbool cmp(int &aa, int &bb)\n{\n\treturn c[aa] > c[bb];\n}\npriority_queue<int> q;\nsigned main()\n{\n\tread(n), read(m), read(k);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tlast[i] = i;//\u81ea\u5df1\u7684\u4f4d\u7f6e\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u9a7b\u519b\n\t\tread(a[i]), read(b[i]), read(c[i]);\n\t}\n\tint u, v;\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tread(u), read(v);\n\t\tlast[v] = max(last[v], u);//\u6bd4\u8f83\u53d6\u6700\u540e\u7684\u90a3\u4e2a\u4f4d\u7f6e\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tfr[last[i]].emplace_back(i);\n\t}\n\tint ans = 0;\n\tif(k < a[1])//\u73b0\u6709\u5175\u529b\u65e0\u6cd5\u5f81\u670d 1 \u53f7\u57ce\u5821\uff0c\u65e0\u89e3\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tk += b[i];\n\t\tsort(fr[i].begin(), fr[i].end(), cmp);//\u8d2a\u5fc3\u5730\u5c06\u5f53\u524d\u4f4d\u7f6e\u80fd\u56de\u6eaf\u7684\u4f4d\u7f6e\u6309\u4ef7\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\t\tfor(int j = 0; j < fr[i].size(); j++)\n\t\t{\n\t\t\tans += c[fr[i][j]];\n\t\t\tq.push(-c[fr[i][j]]);\n\t\t\tk--;\n\t\t}\n\t\twhile(k < a[i + 1])//\u8d2a\u5fc3\u5730\u5f39\u51fa\u90e8\u5206\u51b3\u7b56\uff0c\u4fdd\u8bc1\u80fd\u5f81\u670d\u4e0b\u4e00\u4e2a\u57ce\u5821\n\t\t{\n\t\t\tif(q.empty())\n\t\t\t{\n\t\t\t\tprintf(\"-1\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tans += q.top();\t\n\t\t\tq.pop();\n\t\t\tk++;\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1637590677,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "CF1271D Portals \u9898\u89e3"
    },
    {
        "content": "\u57281:43\u65f6A\u6389\u4e86\u8fd9\u4e00\u9898\uff0c\u6210\u529f\u7ffb\u76d8\uff0crank34\n\n---\n\n\u9898\u89e3\uff1a\n\n\u8d2a\u5fc3+dp\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u57ce\u5821\u662f\u53ef\u4ee5\u88ab\u5b88\u536b\u7684\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u4f1a\u5c3d\u53ef\u80fd\u7684\u8ba9\u4ed6\u5f80\u540e\u88ab\u5b88\u536b\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\uff0c\u5982\u679c\u5728\u524d\u9762\u5c31\u5b88\u536b\u4e86\uff0c\u4e5f\u8bb8\u5c31\u4f1a\u5f71\u54cd\u5230\u540e\u9762\u7684\u5173\u5361\u8fc7\u4e0d\u53bb\u3002\u800c\u5230\u4e86\u6700\u540e\uff0c\u5982\u679c\u4f60\u518d\u4e0d\u5b88\u536b\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u673a\u4f1a\u4e86\u3002\u4f46\u662f\u5982\u679c\u5230\u6700\u540e\u518d\u5b88\u536b\uff0c\u9020\u6210\u7684\u4ee3\u4ef7\u4e0e\u4e4b\u524d\u4e00\u6837\uff0c\u4f46\u662f\u53ef\u4ee5\u8ba9\u4ed6\u6709\u66f4\u591a\u7684\u673a\u4f1a\u53bb\u8fdb\u653b\u3002\n\ndp:\n\n\u4ee4dp[i][j]\u8868\u793a\u8003\u8651\u5230\u7b2ci\u4e2a\u57ce\u5821\u65f6\uff0c\u5269\u4f59\u4e86j\u4e2a\u4eba\u65f6\u7684\u6700\u5927\u6210\u679c\u3002\n\n```cpp\ninline void solve(){\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=n;++i)cin>>a[i]>>b[i]>>c[i];  //\u8bfb\u5165\n\tcheckbad();                       //\u7279\u5224-1\n\tfor(int i=1;i<=m;++i){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tlst[v]=max(lst[v],u);             //\u627e\u6700\u540e\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tlst[i]=max(lst[i],i);\n\t\tv[lst[i]].push_back(i);\n\t}\n\tfor(int i=1;i<=n;++i)sort(v[i].begin(),v[i].end(),cmp);  //\u8d2a\u5fc3\n\tfor(int i=1;i<=n;++i)for(int j=0;j<=5000;++j)dp[i][j]=-INf; //\u521d\u59cb\u5316\n\tdp[1][k]=0;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=a[i];j<=5000;++j){\n\t\t\tdp[i+1][j+b[i]]=max(dp[i+1][j+b[i]],dp[i][j]);  //\u4e0d\u9009\n\t\t\tint sum=0,cnt=0;\n\t\t\tfor(int f:v[i]){  //\u8d2a\u5fc3\u7684\u9009\n\t\t\t\tsum+=c[f];\n\t\t\t\t++cnt;\n\t\t\t\tif(j+b[i]-cnt>=0)dp[i+1][j+b[i]-cnt]=max(dp[i+1][j+b[i]-cnt],dp[i][j]+sum);\n\t\t\t\telse break;   //\u4f18\u5316\n\t\t\t}\n\t\t}\n\t}\n    \n```",
        "postTime": 1576501110,
        "uid": 226760,
        "name": "RedLycoris",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1271D \u3010Portals\u3011"
    }
]