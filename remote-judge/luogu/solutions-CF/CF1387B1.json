[
    {
        "content": "## CF1387B1 \u9898\u89e3\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u4f60\u53ef\u4ee5\u628a\u6240\u6709\u8282\u70b9\u91cd\u6392\uff0c\u4e0d\u80fd\u56de\u5230\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u79fb\u52a8\u4e00\u4e2a\u70b9\u4ece $a$ \u5230 $b$ \u7684\u4ee3\u4ef7\u662f $2$ \u70b9\u4e4b\u95f4\u7684\u8fb9\u6570\u3002\n\n### \u9898\u89e3\n\n\u8d2a\u5fc3\u7684\u601d\u8def\u5f88\u663e\u7136\uff0c\u56e0\u4e3a\u8981\u603b\u79fb\u52a8\u6700\u5c0f\uff0c\u90a3\u4e48\u4e00\u4e2a\u70b9\u80af\u5b9a\u53ea\u4f1a\u548c\u81ea\u5df1\u76f8\u90bb\u6216\u8005\u96942\u4e2a\u70b9\u7684\u70b9\u8fde\u8fb9\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u4ed6\u6709\u82e5\u5e72\u7684\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u4ed6\u4f1a\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u548c\u4ed6\u4e92\u6362\uff0c\u5176\u4ed6\u7684\u5b50\u8282\u70b9\u76f8\u4e92\u4e92\u6362\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u7684\u5947\u5076\u4e4b\u7c7b\u7684\u7ec6\u8282\u5f88\u96be\u5904\u7406\u3002\u9ebb\u70e6\u7684\u6b7b\u3002\n\n\u90a3\u53ef\u4ee5\u6362\u4e00\u79cd\u601d\u8def\u53bb\u8003\u8651\uff0c\u4f60\u8003\u8651\u5148\u628a\u6bcf\u4e2a\u8282\u70b9\u7b2c\u4e00\u6b21\u904d\u5386\u7684\u5b50\u8282\u70b9\u548c\u4ed6\u4e92\u6362\uff0c\u5e76\u7528 $flag[]$ \u6807\u8bb0\u4e0a\u3002\n\n\u6700\u540e\u4ece $1 \\to n$ \u8dd1\u4e00\u904d\uff0c\u8ba9\u6240\u6709\u7684\u5b50\u8282\u70b9\u56f4\u6210\u4e00\u4e2a\u73af\uff0c\u4e0d\u8ba9\u4ed6\u4eec\u5f7c\u6b64\u4e92\u6362\uff0c\u628a\u4ed6\u4eec\u56f4\u6210\u4e00\u4e2a\u73af\u5c31\u5f88\u597d\u5904\u7406\u7684\uff0c\u8fd9\u4e2a\u5730\u65b9\u4e00\u770b\u4ee3\u7801\u5c31\u61c2\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n// #define int long long\n#define Rep(x, a, b) for(int x = a; x <= b; ++ x)\n#define Dep(x, a, b) for(int x = a; x >= b; -- x)\n#define Next(i, x) for(int i = head[x]; i; i = e[i].nxt)\nint read() {\n    char c = getchar(); int f = 1, x = 0;\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar(); }\n    return x * f;\n}\nconst int maxn = 1e5 + 10;\nint head[maxn], cnt, flag[maxn];\nstruct node { int to, nxt; } e[maxn << 1];\nvoid add(int x, int y) { e[++ cnt] = (node) {y, head[x]}; head[x] = cnt; }\nvoid Dfs(int x, int fa) {\n    Next(i, x) {\n        int v = e[i].to;\n        if(v == fa) continue ;\n        Dfs(v, x);\n        if(!flag[x] && !flag[v]) { flag[x] = v, flag[v] = x;}\n    }\n}\nint main() {\n    int n = read(), ans = 0;\n    Rep(i, 2, n) { int u = read(), v = read(); add(u, v), add(v, u); }\n    Dfs(1, 0);\n    Rep(i, 1, n) {\n        if(flag[i]) { ++ ans; continue; }\n        int tmp = e[head[i]].to;\n        flag[i] = flag[tmp];\n        flag[tmp] = i; ans += 2;\n    }\n    printf(\"%d\\n\", ans);\n    Rep(i, 1, n) printf(\"%d \", flag[i]);\n    return 0;\n}\n```",
        "postTime": 1604593535,
        "uid": 155767,
        "name": "Tarsal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1387B1 \u3010Village (Minimum)\u3011"
    },
    {
        "content": "### \u9996\u5148\u8bf4\u660e\n\u672c\u6587\u8f6c\u8f7d\u4e8e[\u6b64](https://blog.csdn.net/qq_31805591/article/details/107768770)\n### \u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a\u6751\u5e84\uff0c\u6bcf\u4e2a\u623f\u5b50\u90fd\u6709\u7f16\u53f7\uff0c\u6bcf\u4e2a\u6751\u6c11\u4e5f\u6709\u4e2a\u7f16\u53f7\u4e14\u4f4f\u5728\u5bf9\u5e94\u7684\u623f\u5b50\u4e2d\uff0c\u73b0\u5728\u8981\u6c42\u6bcf\u4e2a\u6751\u6c11\u642c\u5230\u5176\u4ed6\u623f\u5b50\uff0c\u4f7f\u5f97\u6ca1\u6709\u4e00\u4e2a\u6751\u6751\u6c11\u4f4f\u5728\u539f\u6765\u7684\u5730\u65b9\u3002\u8f93\u51fa\u8def\u9014\u548c\uff0c\u4ee5\u53ca\u642c\u5bb6\u540e\u6bcf\u4e2a\u623f\u5b50\u4f4f\u7684\u6751\u6c11\u3002\n### \u9898\u89e3\u601d\u8def\n\u5176\u5b9e\u8fd9\u4e2a\u95ee\u9898\u4e2d\u7684\u6751\u5e84\u53ef\u4ee5\u8f6c\u5316\u6210\uff1a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u6811\uff0c$n-1$ \u6761\u8fb9\uff0c\u6bcf\u6761\u8fb9\u8fb9\u6743\u4e3a $1$\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4f1a\u4ee5\u6811\u7684\u601d\u8def\u6765\u8bb2\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u904d\u5386\u4e8c\u53c9\u6811\u662f\u9700\u8981\u901a\u8fc7\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u6765\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u679a\u4e3e\u6bcf\u4e2a\u6751\u5e84\u3002\u8fd9\u4e2a\u6751\u5e84\u80fd\u53bb\u7684\u5730\u65b9\u6211\u4eec\u79f0\u4e4b\u4e3a\u5b50\u8282\u70b9\uff0c\u80fd\u642c\u5230\u8fd9\u4e2a\u6751\u5e84\u7684\uff0c\u662f\u6751\u5e84\u7684\u7236\u8282\u70b9\u3002\n- \u8003\u8651\u6bcf\u4e2a\u6751\u6c11\u90fd\u9700\u8981\u642c\u5bb6\uff0c\u6700\u4f18\u7684\u642c\u5bb6\u65b9\u5f0f\u4e00\u5b9a\u662f\u4e0e\u5f53\u524d\u65f6\u523b\u4e0b\u6700\u8fd1\u623f\u5b50\u91cc\u9762\u7684\u4eba\u6362\u5bb6\u3002\n\n- \u6545\u53ef\u4ee5\u5c06\u6240\u6709\u5b50\u8282\u70b9\u6570\u91cf\u4e3a $1$\uff08\u53ea\u80fd\u5411\u4e00\u4e2a\u5730\u65b9\u642c\u5bb6\uff09\u7684\u4eba\u52a0\u5165\u4e00\u4e2a\u961f\u5217\uff0c\u5e76\u4e0e\u5176\u7236\u8282\u70b9\u623f\u5b50\u91cc\u7684\u7684\u4eba\u8fdb\u884c\u4ea4\u6362\u3002\n\u2003\n \n\u8ba1\u7b97\u5b8c\u6210\u540e\u51fa\u961f\uff0c\u5e76\u4f7f\u5f97\u6b64\u7236\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570\u91cf\u51cf $1$\u3002\n\n\u5982\u679c\u5f53\u524d\u7684\u7236\u8282\u70b9\u88ab\u4ea4\u6362\u8fc7\u4e14\u5b50\u8282\u70b9\u6570\u91cf\u4e3a $1$\uff0c\u5219\u4e0d\u8fdb\u961f\u5217\uff0c\u5e76\u4f7f\u5176\u7236\u4eb2\u7684\u5b50\u8282\u70b9\u6570\u91cf\u51cf $1$\u3002\n### \u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\nvoid dfs(int ii, int fx, vector<vector<int>>&vec, int *fa, int *du, int *qq, int &qq_id)\n{\n\tfa[ii] = fx;\n\tfor (int i = 0; i < vec[ii].size(); i++)\n\t{\n\t\tint e = vec[ii][i];\n\n\t\tif (e == fx)\n\t\t\tcontinue;\n\t\tdu[ii]++;\n\t\tdfs(e, ii, vec, fa, du, qq, qq_id);\n\t}\n\tif (!du[ii])\n\t\tqq[++qq_id] = ii;\n}\n\nvoid delFF(int ii, int *du, int *fa, bool* done, int *qq, int &qq_id)\n{\n\tint ff = fa[ii];\n\n\tif (du[ii] == 0)\n\t{\n\t\tif (done[ii])\n\t\t\tdu[ff]--,\n\t\t\tdelFF(ff, du, fa, done, qq , qq_id);\n\t\telse\n\t\t\tqq[++qq_id] = ii;\n\t}\n}\n\nint main()\n{\n\tint *fa = new int[maxn]();\n\tint *du = new int[maxn]();\n\tint *qq = new int[maxn]();\n\tint *rs = new int[maxn]();\n\tbool *done = new bool[maxn]();\n\tint special = 0;\n\tint qq_id = 0;\n\n\tint n;\n\tvector<vector<int>>&vec = *(new vector<vector<int>>(maxn));\n\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n - 1; i++)\n\t{\n\t\tint x, y;\n\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tvec[x].push_back(y);\n\t\tvec[y].push_back(x);\n\t\tif (x == 1)\n\t\t\tspecial = y;\n\t\tif (y == 1)\n\t\t\tspecial = x;\n\t\trs[i] = i;\n\t}\n\trs[n] = n;\n\tdfs(1, 1, vec, fa, du, qq, qq_id);\n\tint res = 0;\n\n#if _dd_\n\tprintf(\"special=%d\\n\", special);\n#endif\n\tfor (int i = 1; i <= qq_id; i++)\n\t{\n\t\tint ii = qq[i];\n\t\tint ff = fa[ii];\n\n\t\tif (ii == 1)\n\t\t\tff = special;\n\t\tdone[ff] = 1;\n\t\tdone[ii] = 1;\n\t\tdu[ff]--;\n\t\tdelFF(ff, du, fa, done, qq, qq_id);\n\t\tres += 2;\n\n\t\tswap(rs[ii], rs[ff]);\n#if _dd_\n\t\tprintf(\"ii=%d ff=%d\\n\", ii, ff);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tprintf(\"-%d-%c\", rs[i], i == n ? '\\n' : ' ');\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tprintf(\"=%d=%c\", du[i], i == n ? '\\n' : ' ');\n#endif\n\t}\n\tprintf(\"%d\\n\", res);\n\tfor (int i = 1; i <= n; i++)\n\t\tprintf(\"%d%c\", rs[i], i == n ? '\\n' : ' ');\n\treturn 0;\n}\n\n```",
        "postTime": 1670192709,
        "uid": 662413,
        "name": "lmy_2011",
        "ccfLevel": 0,
        "title": "CF1387B1"
    }
]