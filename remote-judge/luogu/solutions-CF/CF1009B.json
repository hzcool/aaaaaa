[
    {
        "content": "\n\u53ea\u6a21\u62df\u53ef\u80fd\u662f\u4f1a\u8d85\u65f6\u7684\u3002\n\n\u901a\u8fc7\u4ed4\u7ec6\u5730\u8bfb\u9898\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c``0`` \u548c ``1`` \u53ef\u4ee5\u4ea4\u6362\uff0c``1`` \u548c ``2`` \u53ef\u4ee5\u4ea4\u6362\uff0c\u800c ``0`` \u548c ``2`` \u4e0d\u53ef\u4ee5\u4ea4\u6362\u3002\n\n\u4e5f\u5c31\u662f\u8bf4 ``1`` \u53ef\u4ee5\u4ea4\u6362\u5230\u6574\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684 ``1`` \u53d6\u51fa\uff0c\u53ea\u5269\u4e0b\u7531 ``0`` \u548c ``2`` \u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002\n\n\u7531\u4e8e ``0`` \u548c ``2`` \u4e0d\u80fd\u4ea4\u6362\uff0c\u4e14\u8981\u5f97\u5230\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u8981\u628a\u6240\u6709\u7684 ``1`` \u653e\u5728\u7b2c\u4e00\u4e2a ``2`` \u524d\u3002\n\n\u7136\u540e\u8981\u8bb0\u5f97\u7279\u5224\u4e00\u4e0b\u6ca1\u6709 ``2`` \u7684\u5b57\u7b26\u4e32\u3002\n\n```\n\n#include <bits/stdc++.h>\n\n#define loop(i, to)  for (num i = 0; i < to; ++i)\n\nusing namespace std;\n\nint n, cnt, pos;\nstring dat, ans;\n\nint main() {\n    cin >> dat;\n    loop (i, dat.size()) {\n        if (dat[i] == '1') {\n            ++cnt;\n            continue;\n        }\n        ans += dat[i];\n    }\n    pos = ans.size();\n    loop (i, ans.size()) {\n        if (ans[i] == '2') {\n            pos = i;\n            break;\n        }\n    }\n    loop (j, cnt) {\n        ans.insert(ans.begin() + pos, '1');\n    }\n    cout << ans << endl;\n}\n\n```\n\n\u4ee5\u4e0a\u3002\n",
        "postTime": 1531635820,
        "uid": 64329,
        "name": "shurongwang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009B \u3010Minimum Ternary String\u3011"
    },
    {
        "content": "### \u3010\u9898\u610f\u63cf\u8ff0\u3011\n\u7ed9\u51fa\u4e00\u4e32\u7531 0, 1, 2 \u7ec4\u6210\u7684\u6570\u5b57\u4e32\uff0c\u73b0\u5728\u8981\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4f7f\u5f97\u4ed6\u4eec\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\u4f46\u53ea\u6709\u4e24\u79cd\u53ef\u4ee5\u9009\u62e9\u7684\u64cd\u4f5c\uff0c\u4e00\u662f\u4ea4\u6362\u76f8\u90bb\u7684 0 \u4e0e 1\uff0c\u4e8c\u662f\u4ea4\u6362\u76f8\u90bb\u7684 \"'1 \u4e0e 2\u3002\u6c42\u51fa\u64cd\u4f5c\u5b8c\u6210\u540e\u7684\u5e8f\u5217\u3002\n\n### \u3010\u5206\u6790\u3011\n\u8fd9\u9053 B \u9898\u6574\u6574\u60f3\u4e86\u534a\u4e2a\u5c0f\u65f6\u624d\u60f3\u51fa\u6765\uff01\uff01\uff01\n\n~~\uff08\u662f\u4e0d\u662f\u6050\u6016\u81f3\u6781\uff09~~\n\n~~\uff08\u662f\u4e0d\u662f\u6211\u592a\u83dc\u4e86\uff09~~\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u8fd9\u4e32\u6570\u5b57\u53ea\u6709 0\uff0c 1\uff0c 2\uff0c \u800c\u4e14 1 \u53ef\u4ee5\u4efb\u610f\u4ea4\u6362\u3002\u90a3\u4e48\u6211\u4eec\u5148\u5c06 1 \u63d0\u51fa\u6765\uff0c\u7136\u540e\u53c8\u56e0\u4e3a 0 \u7684\u5b57\u5178\u5e8f\u662f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u5728\u63d0\u51fa 1 \u540e\u7684\u6570\u5b57\u4e32\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a 2\uff0c\u5728\u5176\u524d\u9762\u63d2\u5165\u4e00\u4e32\u7684 1\uff0c\u90a3\u4e48\u5b57\u5178\u5e8f\u80af\u5b9a\u662f\u6700\u5c0f\u7684\u3002\u5f53\u7136\u4e86\uff0c\u5bf9\u4e8e\u53ea\u6709 1 \u6216 0 \u6216 2 \u7684\u60c5\u51b5\u9700\u8981\u7279\u5224\uff08\u53ef\u80fd\u6ca1\u4ec0\u4e48\u7528\uff0c\u8282\u7701\u51e0\u4e2a\u70b9\u7684\u65f6\u95f4\uff0c~~\u6bd5\u7adf CF \u7684\u6570\u636e\u5927\u5bb6\u61c2\u7684~~~\uff09\n\n### \u3010\u6838\u5fc3\u4ee3\u7801\u3011\n1\u3001\u5148\u63d0\u53d6\u51fa 1\uff0c\u6211\u662f\u5c06 0 \u548c 2 \u5b58\u8fdb\u6570\u7ec4\u4e2d\uff0c\u8fd9\u6837\u65b9\u4fbf\u627e\n```cpp\nfor(int i = 0; i < len; i++)\n{\n\ta[i + 1] = s[i] - '0';\n\tif(a[i + 1] != 1)\n\t\tb[++t] = a[i + 1];\n}\n\n```\n\n2\u3001\u5c0f\u7279\u5224\uff0c\u5982\u679c\u53ea\u6709 0 \u548c 2 \u4e0d\u80fd\u6539\u53d8\uff0c\u76f4\u63a5\u8f93\u51fa\uff1b\u5982\u679c\u90fd\u662f 1\uff0c\u4e5f\u4e0d\u7528\u53d8\uff0c\u8f93\u51fa\u539f\u5b57\u4e32\n```cpp\nif(t == len)\n{\n\tcout << s;\n\treturn 0;\n}\nelse if(t == 0)\n{\n\tcout << s;\n\treturn 0;\n}\n```\n\n3\u3001\u5148\u627e\u5230\u7b2c\u4e00\u4e2a 2\uff0c\uff08\u672c\u6765\u6211\u7528 upper_bound \u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e 1 \u7684\uff0c\u7ed3\u679c\u70b8\u4e86QwQ\uff09\uff0c\u7136\u540e\u5982\u679c\u6ca1\u6709 2\uff0c\u5c31\u662f pos \u672a\u627e\u5230\uff0c\u5148\u8f93\u51fa\u63d0\u53d6\u51fa\u7684 t \u4e2a 0\uff0c\u518d\u8f93\u51fa\u5269\u4e0b\u7684 1\uff1b\n```cpp\nfor(int i = 1; i <= t; i++)\n\tif(b[i] == 2)\n\t{\n\t\tpos = i;\n\t\tbreak;\n\t}\nif(b[pos] < 1)\n{\n\tfor(int i = 1; i <= t; i++)\n\t\tprintf(\"0\");\n\tfor(int i = 1; i <= len - t; i++)\n\t\tprintf(\"1\");\n\treturn 0;\n}\n```\n\n4\u30010\uff0c 1\uff0c 2 \u90fd\u6709\u7684\u60c5\u51b5\uff1a\u5148\u524d pos - 1 \u4e2a 0\uff0c\u518d\u8f93\u51fa\u5269\u4f59\u7684 1\uff0c\u6700\u540e\u8f93\u51fa pos \u5230 t \u7684\u5269\u4f59\u6570\u5b57\u3002\n```cpp\nelse\n{\n\tfor(int i = 1; i <= pos - 1; i++)\n\t\tprintf(\"0\");\n\tfor(int i = 1; i <= len - t; i++)\n\t\tprintf(\"1\");\n\tfor(int i = pos; i <= t; i++)\n\t\tprintf(\"%d\", b[i]);\n}\n```\n\n### \u3010\u6b63\u89e3\u3011\n```cpp\n#include <bits/stdc++.h>\n#define N 1000010\nusing namespace std;\n\nint len, pos, t;\nint a[N], b[N];\nstring s;\n\nint main()\n{\n// \tfreopen(\"2335.in\", \"r\", stdin);\n// \tfreopen(\"2335.out\", \"w\", stdout);\n\tcin >> s;\n\tlen = s.size();\n\tfor(int i = 0; i < len; i++)\n\t{\n\t\ta[i + 1] = s[i] - '0';\n\t\tif(a[i + 1] != 1)\n\t\t\tb[++t] = a[i + 1];\n\t}\n\tif(t == len)\n\t{\n\t\tcout << s;\n\t\treturn 0;\n\t}\n\telse if(t == 0)\n\t{\n\t\tcout << s;\n\t\treturn 0;\n\t}\n\tfor(int i = 1; i <= t; i++)\n\t\tif(b[i] == 2)\n\t\t{\n\t\t\tpos = i;\n\t\t\tbreak;\n\t\t}\n\tif(b[pos] < 1)\n\t{\n\t\tfor(int i = 1; i <= t; i++)\n\t\t\tprintf(\"0\");\n\t\tfor(int i = 1; i <= len - t; i++)\n\t\t\tprintf(\"1\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor(int i = 1; i <= pos - 1; i++)\n\t\t\tprintf(\"0\");\n\t\tfor(int i = 1; i <= len - t; i++)\n\t\t\tprintf(\"1\");\n\t\tfor(int i = pos; i <= t; i++)\n\t\t\tprintf(\"%d\", b[i]);\n\t}\n\t\n}\n```",
        "postTime": 1532091342,
        "uid": 71084,
        "name": "\u5e05\u5230\u62a5\u8b66",
        "ccfLevel": 0,
        "title": "CF1009B    Minimum Ternary String"
    },
    {
        "content": "\u6839\u636e\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\u4ee5\u4e0b\u4e24\u70b9\uff1a\n\n+ `0` \u548c `2` \u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u4e3a\u53ea\u80fd\u4ea4\u6362 `1` \u548c `0` \u6216\u8005\u662f `1` \u548c `2`\u3002\n\n+ `1` \u7684\u4f4d\u7f6e\u53ef\u4ee5\u968f\u610f\u632a\u52a8\u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u6784\u9020\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5e8f\u5217\u5462\uff1f\n\n\u56e0\u4e3a `0` \u548c `2` \u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u770b\u4ed6\u4eec\uff0c\u53c8\u56e0\u4e3a `1` \u53ef\u4ee5\u968f\u610f\u632a\u52a8\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb2\u6240\u6709\u7684 `1` \u5806\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a `2` \u524d\u9762\uff0c\u8ba9\u5927\u7684\u6570\u5c3d\u53ef\u80fd\u5f80\u540e\u632a\uff0c\u4ee5\u786e\u4fdd\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u7279\u522b\u7684\uff0c\u5982\u679c\u6574\u4e2a\u6570\u5217\u4e2d\u6ca1\u6709 `2` \u90a3\u4e48\u5c06\u6240\u6709\u7684 `1` \u653e\u5230\u6700\u540e\u5373\u53ef\u3002\n\n\u4ee3\u7801\u90e8\u5206\uff1a\n\n\u8fd9\u5e94\u8be5\u662f\u6700\u77ed\u5c0f\u7cbe\u608d\u7684\u4ee3\u7801\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring c; bool flag=1; //flag\u7528\u6765\u8bb0\u5f55\u662f\u5426\u662f\u7b2c\u4e00\u4e2a\"2\"\nint main()\n{\n\tcin>>c; int len=c.length(),cnt1=0;\n\tfor(int i=0;i<len;i++) if(c[i]=='1') cnt1++;\n\tfor(int i=0;i<len;i++){\n\t\tif(c[i]=='1') continue; //\u5982\u679c\u4e3a\"1\"\uff0c\u76f4\u63a5\u8df3\u8fc7\n\t\tif(c[i]=='2'&&flag){ for(int j=1;j<=cnt1;j++) cout<<\"1\"; cout<<\"2\"; flag=0;} //\u5728\u7b2c\u4e00\u4e2a\"2\"\u4e4b\u524d\u5c06\u6240\u6709\u7684\"1\"\u8f93\u51fa\n\t\telse cout<<c[i];\n\t}\n\tif(flag) for(int j=1;j<=cnt1;j++) cout<<\"1\"; //\u7279\u6b8a\u60c5\u51b5\uff1a\u6ca1\u6709\"2\"\n}\n```\n",
        "postTime": 1643036577,
        "uid": 326452,
        "name": "Fearliciz",
        "ccfLevel": 0,
        "title": "CF1009B Minimum Ternary String"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u6700\u91cd\u8981\u7684\u662f\u660e\u786e\u4f60\u7684\u89e3\u9898\u65b9\u6cd5\n#### \u601d\u8def\uff1a\n\u8fd9\u9053\u9898\u5c31\u662f\u8ba9\u4f60\u628a\u4e00\u7a9c\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u9898\u76ee\u7ed9\u51fa\u7684\u662f\u53ea\u6709\u4e09\u4e2a\u6570\u5b57\u6210\u7684\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u5148\u601d\u8003\u4e00\u4e0b\uff0c\u60f3\u8981\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u8ba9Ascll\u987a\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5c0f\u7684\u6570\u5c3d\u91cf\u653e\u524d\u9762\uff0c\u5927\u7684\u5c3d\u91cf\u653e\u540e\u9762\u3002\u6211\u4eec\u5148\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u91cc\u9762\u7684$1$\u7684\u4e2a\u6570\u5148\u627e\u51fa\u6765\uff0c\u8ba9$2$\u4e4b\u524d\u7684$0$\u90fd\u5148\u8f93\u51fa\uff0c\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee\uff0c2\u4e4b\u540e\u7684$0$\u600e\u4e48\u529e\u5462\uff0c\u56e0\u4e3a$2$\u4e0d\u80fd\u548c$0$\u8c03\u6362\uff0c\u6240\u4ee5$2$\u4e4b\u540e\u7684$0$\u53ea\u80fd\u539f\u5730\u4e0d\u52a8\u3002\u5728\u524d\u9762\u4f9d\u6b21\u8f93\u51fa$0$\u540e\u9047\u5230\u4e86$2$\u540e\uff0c\u8981\u4f7f\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u628a\u6240\u6709\u7684$1$\u4f9d\u6b21\u8f93\u51fa\u6765\uff0c\u518d\u6765\u8f93\u51fa$2$\uff0c\u5982\u679c$2$\u540e\u9762\u6709$0$\uff0c\u4f9d\u7136\u8f93\u51fa\u3002\n\n\u6a21\u62df\u4ee5\u4e0a\u505a\u6cd5\uff0c\u8fd9\u9053\u9898\u5c31\u8fce\u5203\u800c\u89e3\u5566\uff01\n#### \u63d0\u793a\n\u8fd4\u56de\u5b57\u7b26\u4e32\u957f\u5ea6\u5c5e\u6027\uff08\u6574\u6570\uff09\uff1a $s.length()$\n\n\u8fdb\u5165\u4e0b\u4e00\u91cd\u5faa\u73af\uff1a $continue$\n\n\u4e0aAC\u4ee3\u7801\uff08 c++ \uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\nint ans ;\nint k ;\nint main()\n{\n\tstring s ;  \n\tcin >> s ; //\u8f93\u5165\u5b57\u7b26\u4e32 \n\tfor ( int i = 0 ; i < s.length() ; i++ )\n\t{\n\t\tif ( s[i] == '1' ) //\u7edf\u8ba1\u5b57\u7b26\u4e32\u51851\u7684\u4e2a\u6570 \n\t    {\n            ans++ ;\n        }\n     }  \n\tfor ( int i = 0 ; i < s.length() ; i++ )\n    {\t\t\t\n\t\tif ( s[i] == '0' ) //\u5982\u679c\u662f0\u76f4\u63a5\u8f93\u51fa \n        {\n        \tcout << 0 ;\n        \tcontinue ; //\u4e0d\u5fc5\u5f80\u4e0b\u8d70\u4e86 \n \t\t} \n        if ( s[i] == '1' ) //\u5982\u679c\u662f1\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u91cd\u5faa\u73af \n        {\n            continue ;\n        }\n        if( s[i] == '2' ) //\u5224\u65ad\u662f\u5426\u662f2 \n        {\n             if ( k == false ) //\u518d\u5224\u65ad\u662f\u5426\u662f\u7b2c\u4e00\u4e2a2 \n            {\n                for ( int j = 1 ; j <= ans ; j++ ) //\u5982\u679c\u662f\u7684\u8bdd\u5c31\u628a\u6240\u6709\u76841\u8f93\u51fa\u6765 \n                {\n                \tcout << 1 ;\n                }\n                k = true ; //\u8bb0\u5f55\u4e0b\u6765 \n            }\n            cout << 2 ; //\u7136\u540e\u518d\u76f4\u63a5\u8f93\u51fa2 \n        }\n    }\n    if ( k == false ) //\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6ca1\u67092\uff0c\u90a3\u5c31\u76f4\u63a5\u628a\u6240\u6709\u76841\u8f93\u51fa\u6765\uff0c\u4e0d\u8981\u6f0f\u6389\u8fd9\u4e00\u6b65 \n    {\n        for ( int i = 1 ; i<=ans ; i++ )\n        {\n\t\t\tcout << 1 ;\n        }\n\t}\n\treturn 0 ; //\u597d\u4e60\u60ef \n}\n```\n\u771f\u5fc3\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1598577483,
        "uid": 307934,
        "name": "zengzhijie54188",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009B \u3010Minimum Ternary String\u3011"
    },
    {
        "content": "**[\u9898\u89e3 \u3010CF1009B Minimum Ternary String\u3011](https://www.luogu.com.cn/problem/CF1009B)**    \n# Solution  \n\n\u9996\u5148\u660e\u786e\u9898\u76ee\u8981\u4f60\u5e72\u4ec0\u4e48\uff1a**\u539f\u5b57\u7b26\u4e32\u7ecf\u8fc7\u4efb\u610f\u8f6c\u6362\u540e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32**\uff0c\u90a3\u4e48\u5c31\u662f\u8ba9\u5c0f\u7684\u5c3d\u91cf\u6392\u5728\u524d\u9762\uff0c\u89c2\u5bdf\u53ef\u884c\u7684\u4ea4\u6362\u65b9\u5f0f\uff0c\u53d1\u73b0\u53ea\u6709 ``0`` \u4e0d\u80fd\u548c ``2`` \u4ea4\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e24\u4e2a\u6570\u5b57\u4e4b\u95f4\u7684**\u76f8\u5bf9\u4f4d\u7f6e\u548c\u987a\u5e8f**\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8003\u8651\u6570\u5b57 ``1`` \u7684\u4f4d\u7f6e\uff0c\u663e\u7136\uff0c``1``\u5e94\u5f53\u653e\u5728``2``\u7684\u524d\u9762``0``\u7684\u540e\u9762\u3002\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002  \n\u4f46\u662f\u5982\u679c\u4f60\u8fd9\u6837\u505a\uff0c\u4f1a WA #6\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u5982\u679c\u4f60\u8fd9\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709 ``2``\uff0c\u90a3\u4e48\u4f60\u7684 ``1`` \u5c31\u4e0d\u4f1a\u88ab\u8f93\u51fa\u6765\uff0c\u7279\u5224\u4e00\u4e0b\u5c31\u53ef\u901a\u8fc7\u3002\n\n# Code  \n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\nusing namespace std;\n\nconst int N = 1e5 + 9;\n\nchar ch[N],bt[N];\nint len,p,flag;\n\nint main() {\n\tscanf(\"%s\",ch + 1); len = strlen(ch + 1);\n\tfor(int i = 1;i <= len;i++) {\n\t\tif(ch[i] == '0' || ch[i] == '2') {\n\t\t\tbt[++p] = ch[i];\n\t\t}\n\t}\n\tfor(int i = 1;i <= p;i++) {\n\t\tif(bt[i] == '2' && !flag) {\n\t\t\tfor(int j = 1;j <= len - p;j++) putchar('1');\n\t\t\tflag = 1;\n\t\t}\n\t\tputchar(bt[i]);\n\t}\n\tfor(int i = 1;i <= len;i++) {\n\t\tif(ch[i] == '2') flag = 114514;\n\t}\n\tif(flag != 114514) for(int i = 1;i <= len - p;i++) putchar('1');\n\treturn 0;\n}\n```",
        "postTime": 1621844497,
        "uid": 86971,
        "name": "TRZ_2007",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 \u3010CF1009B Minimum Ternary String\u3011"
    },
    {
        "content": "\u601d\u8def\u597d\u50cf\u548c\u5927\u5bb6\u7684\u4e0d\u4e00\u6837\uff0c\u6211\u5148\u8bf4\u6211\u7684\u7ed3\u8bba\uff1a\n\n1.\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u6ca1\u6709\u540c\u65f6\u51fa\u73b0 $0$ \u4e0e $2$ \u90a3\u5c31\u76f4\u63a5\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\n\n2.\u5426\u5219\uff0c\u6211\u4eec\u8bb0\u7b2c\u4e00\u4e2a $2$ \u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $k$  \u5728\u8fd9\u4e4b\u524d\u53ef\u4ee5\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u5728\u8fd9\u4e4b\u540e\u4e00\u5b9a\u662f\u5f62\u5982 `111112....2...2` ( `.` \u8868\u793a\u7684\u662f $0$ )\n\n\u9996\u5148\u8bc1\u660e $1$ \uff0c\u8fd9\u4e2a\u662f\u663e\u7136\u7684\u4e00\u5b9a\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8d2a\u5fc3\n\n\u7136\u540e\u6211\u4eec\u8bc1\u660e $2$ \uff0c\u56e0\u4e3a\u5e8f\u5217\u51fa\u73b0\u4e86 $2$ \uff0c\u56e0\u6b64\u5c06\u5b83\u653e\u5728\u6700\u540e\u624d\u662f\u6700\u4f18\u7684\uff0c\u53e6\u5916 $1$ \u662f\u53ef\u4ee5\u548c $0,2$ \u81ea\u7531\u4ea4\u6362\uff0c\u56e0\u6b64\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u628a $2$\u4e0e$0$ \u653e\u5728\u6700\u540e\n\n```cpp\n#include<headfile.h>\n\nusing namespace std;\n\nconst int maxn=100100;\n\nchar s[maxn];\nint ans[maxn];\nint n,m,bj=0,lk=0;\n\nint main()\n{\n\tregister int i,j;\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tmemset(ans,-1,sizeof(ans));\n\tfor(i=1;i<=n;i++) \n\t{\n\t\tif(s[i]=='2'&&!bj) \n\t\t{\n\t\t\tbj=i; \n\t\t}\n\t\tif(s[i]=='0'&&bj)\n\t\t{\n\t\t\tlk=i;\n\t\t}\n\t}\n\tint target=n;\n\tfor(i=n;i>=bj;i--) \n\t{\n\t\tif(s[i]=='0'||s[i]=='2') ans[target--]=s[i]-'0';\n\t}\n\tif(bj&&lk)\n\t{\n\t\tsort(s+1,s+bj);\n\t\tfor(i=1;i<bj;i++) printf(\"%c\",s[i]);\n\t\tfor(i=bj;i<=n;i++) if(ans[i]==-1) printf(\"1\"); else printf(\"%d\",ans[i]);\n\t\treturn 0;\n\t}\n\telse if(!(bj&&lk))\n\t{\n\t\tsort(s+1,s+n+1);\n\t\tfor(i=1;i<=n;i++) printf(\"%c\",s[i]);\n\t\treturn 0;\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1601457288,
        "uid": 158089,
        "name": "zxqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009B \u3010Minimum Ternary String\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u6765\u770b\u4e00\u4e2a**\u8d2a\u5fc3**\u7684\u601d\u8def\uff1a\u53ea\u8981\u4ea4\u6362\u540e\u80fd\u4f7f\u539f\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u66f4\u5c0f\uff0c\u6211\u4eec\u5c31\u4ea4\u6362\uff0c\u76f4\u5230\u4e0d\u80fd\u4ea4\u6362\u4e3a\u6b62\uff0c\u6bd4\u5982\u8fd9\u6837\uff1a\n\n```cpp\nconst int N=1e5+100;\nchar s[N];int n;bool flag;\nint main(){\n// \tfreopen(\"t1.in\",\"r\",stdin);\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tdo{\n\t\tflag=false;\n\t\tfor(int i=1;i<n;i++)\n\t\t\tif (s[i]-s[i+1]==1){\n\t\t\t\tswap(s[i],s[i+1]);\n\t\t\t\tflag=true;\n\t\t\t}\n\t}while(flag);\n\tprintf(\"%s\",s+1);\n\treturn 0;\n}\n```\n\n\u7136\u800c\u8fd9\u6837\u505a\u662f\u6709\u53cd\u4f8b\u7684\uff1a\n\n\u6bd4\u5982\u539f\u5b57\u7b26\u4e32\u662f`201`\uff0c\u6211\u4eec\u901a\u8fc7\u8089\u773c\u7684\u6a21\u62df\u53ef\u4ee5\u77e5\u9053\u7b54\u6848\u5e94\u8be5\u662f`120`\uff0c\u4f46\u662f\u5728\u7b2c\u4e00\u6b65\u4ea4\u6362`1`\u548c`0`\u65f6\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u8ba4\u4e3a\u5b83\u4f7f\u5f97\u539f\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u53d8\u5927\u4e86\uff0c\u4ee5\u81f3\u4e8e\u6ca1\u6709\u4ea4\u6362\u800c\u9000\u51fa\u4e86\u7a0b\u5e8f\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u80fd\u53e6\u5bfb\u601d\u8def\u3002\u6211\u4eec\u53d1\u73b0`1`\u662f\u53ef\u4ee5\u5230\u8fbe\u5929\u6daf\u6d77\u89d2\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a`1`\u5168\u90e8\u63d0\u51fa\u6765\uff0c\u5269\u4e0b\u4e00\u4e2a\u53ea\u6709`0`\u548c`2`\u7684\u5b57\u7b26\u4e32\uff0c\u5b83\u662f\u4e0d\u53ef\u4ee5\u4ea4\u6362\u7684\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684`1`\u5168\u90e8\u63d2\u5165\u7b2c\u4e00\u4e2a`2`\u4ee5\u524d\uff0c\u8fd9\u6837\u5f97\u51fa\u6765\u7684\u7b54\u6848\u4e00\u5b9a\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002\n\n```cpp\nstring s,s1,r;int l,n;\nint main(){\n\tfreopen(\"t1.in\",\"r\",stdin);\n\tcin>>r;n=r.size();\n\tfor(int i=0;i<n;i++)\n\t\tif (r[i]=='1') s1+=r[i];\n\t\telse s+=r[i];\n\tl=s.find('2');\n\tif (l==s.npos) cout<<s+s1<<endl;\n\telse{\n\t\ts.insert(l,s1);\n\t\tcout<<s<<endl;\n\t}\n\treturn 0;\n}\n```\n\n\u5728\u6211\u7684\u7b2c\u4e8c\u4e2a\u4ee3\u7801\u4e2d\u7528\u5230\u4e86$STL$\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u4e00\u4e9b\u51fd\u6570\uff0c\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u7c7b\u6bd4\u7684\u601d\u60f3\u77e5\u9053\u5b83\u4eec\u7684\u7528\u9014\uff1a\n\n- `s.find('2')`\uff1a\u5728\u5b57\u7b26\u4e32$s$\u4e2d\u5bfb\u627e\u7b2c\u4e00\u4e2a`2`\u7684\u4f4d\u7f6e\uff0c\u82e5\u6ca1\u6709\uff0c\u5219\u8fd4\u56de`string::npos`\uff0c\u5373`s.npos`\u3002\n\n- `s.insert(l,s1)`\uff1a\u5728$s$\u7684\u7b2c$l$\u4e2a\u5b57\u7b26\u524d\u63d2\u5165$s1$\u3002\n\n- `s+s1,s+r[i]`\uff1a\u7b2c\u4e00\u4e2a\u8bed\u53e5\u76f8\u5f53\u4e8e\u628a$s1$\u63d2\u5165\u5728$s$\u7684\u672b\u5c3e\uff0c\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u76f8\u5f53\u4e8e\u628a$r[i]$\u63d2\u5165\u5728$s$\u7684\u672b\u5c3e\uff0c\u7531\u6b64\u53ef\u89c1\uff0c\u5982\u679c\u8981\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u5b57\u7b26\u63d2\u5165\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7684\u52a0\u6cd5\u8fd0\u7b97\u3002\u4f46\u8bf7\u6ce8\u610f\uff0c\u5355\u5355\u5199`s+s1`\u5e76\u6ca1\u6709\u5b8c\u6210\u771f\u6b63\u7684\u63d2\u5165\u64cd\u4f5c\uff0c`s=s+s1`\u624d\u5b8c\u6210\u4e86\u63d2\u5165\u7684\u64cd\u4f5c\u3002\n\n\u6700\u540e\uff0c\u6211\u7ed9\u5927\u5bb6\u4e00\u4e2a\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u65e0\u6cd5\u901a\u8fc7\u4f46\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u7684\u6837\u4f8b\uff1a\n\n\u8f93\u5165\uff1a`2010`\uff0c\u8f93\u51fa\uff1a`1200`",
        "postTime": 1579322353,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1009B \u3010Minimum Ternary String\u3011"
    },
    {
        "content": "```cpp\n// \u672c\u9898\u5c31\u662f\u7528\u7684\u8d2a\u5fc3\uff0c\u9053\u7406\u8ddf\u697c\u4e0a\u51e0\u4f4ddalao\u8bf4\u7684\u4e00\u6837\uff0c\u56e0\u4e3a'1'\u53ef\u4ee5\u968f\u610f\u52a8\uff0c\u6240\u4ee5'1'\u662f\u4e00\u4e2a\u53ef\u4ee5\u88ab\u653e\u5230\u4efb\u610f\u5730\u65b9\u7684\u5b57\u7b26\n// \u6211\u4eec\u9996\u5148\u5bf9\u8be5\u5b57\u7b26\u4e32\u904d\u5386\u4e00\u904d\uff0c\u8fd9\u4e00\u904d\u4e3b\u8981\u7edf\u8ba1\u5b57\u7b26'1'\u7684\u4e2a\u6570\u4ee5\u53ca\u8be5\u5b57\u7b26\u4e32\u5185\u662f\u5426\u5b58\u5728'2'\n// \u7136\u540e\u6211\u4eec\u9075\u5faa\u5982\u4e0b\u7684\u8d2a\u5fc3\u7b56\u7565\uff1a\n// \u5bf9\u8be5\u5b57\u7b26\u4e32\u8fdb\u884c\u904d\u5386\uff0c\u9047\u5230'0'\u5c31\u8f93\u51fa'0'\uff0c\u9047\u5230'1'\u5c31\u8df3\u8fc7\uff0c\u76f4\u5230\u9047\u5230\u7b2c\u4e00\u4e2a'2'\uff0c\u6211\u4eec\u5c31\u5c06\u6240\u6709\u7684'1'\u8f93\u51fa\uff0c\u7136\u540e\u518d\u8f93\u51fa\u4e00\u4e2a'2'\n// \u518d\u63a5\u7740\uff08\u5148\u524d\u5df2\u7ecf\u628a\u6240\u6709\u7684'1'\u90fd\u8f93\u51fa\u4e86\uff09\uff0c\u9047\u5230'0'\u5c31\u8f93\u51fa'0'\uff0c\u9047\u5230'1'\u5c31\u8df3\u8fc7\uff0c\u9047\u5230'2'\u5c31\u8f93\u51fa'2'\n#include <iostream>\n#include <string>\n\nint main()\n{\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    std::cout.tie(nullptr);\n\n    std::string Str;\n    std::cin >> Str;\n\n    int One = 0, Zero = 0;\n    bool HasTwo = false;\n    for (const auto &c : Str)\n    {\n        if (c == '0')   // \u7edf\u8ba1'0'\u7684\u4e2a\u6570\n        {\n            ++Zero;\n        }\n        else if (c == '1')   // \u7edf\u8ba1'1'\u7684\u4e2a\u6570\n        {\n            ++One;\n        }\n        else if (c == '2')  // \u7edf\u8ba1\u662f\u5426\u6709'2'\n        {\n            HasTwo = true;\n        }\n    }\n\n    if (!HasTwo)    // \u5982\u679c\u6ca1\u6709'2'\uff0c\u90a3\u4e48\u5c31\u5148\u8f93\u51fa\u6240\u6709\u7684'0'\uff0c\u518d\u8f93\u51fa\u6240\u6709\u7684'1'\uff0c\u7136\u540e\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f\n    {\n        for (int i = 0; i < Zero; ++i)\n        {\n            std::cout << 0;\n        }\n        for (int i = 0; i < One; ++i)\n        {\n            std::cout << 1;\n        }\n        std::cout << std::endl;\n\n        return 0;\n    }\n\n    bool Met = false;   // \u6807\u8bb0\u662f\u5426\u7b2c\u4e00\u6b21\u9047\u89c1'2'\n    for (const auto &c : Str)\n    {\n        if (c == '0')   // \u9047\u5230'0'\u5219\u8f93\u51fa\n        {\n            std::cout << 0;\n        }\n        else if (c == '1')  // \u9047\u5230'1'\u5219\u8df3\u8fc7\n        {\n            continue;\n        }\n        else if (c == '2')\n        {\n            if (!Met)   // \u7b2c\u4e00\u6b21\u9047\u5230'2'\uff0c\u5219\u8f93\u51fa\u6240\u6709\u7684'1'\uff0c\u518d\u8f93\u51fa\u4e00\u4e2a'2'\n            {\n                Met = true;\n\n                for (int i = 0; i < One; ++i)\n                {\n                    std::cout << 1;\n                }\n                std::cout << 2;\n            }\n            else       // \u4e0d\u662f\u7b2c\u4e00\u6b21\u9047\u5230'2'\uff0c\u5219\u76f4\u63a5\u8f93\u51fa'2'\n            {\n                std::cout << 2;\n            }\n        }\n    }\n    std::cout << std::endl;\n\n    return 0;\n}\n```",
        "postTime": 1532595620,
        "uid": 59062,
        "name": "\u5c0f\u95f8\u87f9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009B \u3010Minimum Ternary String\u3011"
    }
]