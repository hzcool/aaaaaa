[
    {
        "content": "\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u8fd9\u9898\u975e\u5e38\u660e\u663e\u8981\u7528BFS\uff0c\u4f46\u662f\u7531\u4e8e\u7279\u6b8a\u70b9\u7684\u5b58\u5728\uff0c\u4f7f\u5f97\u8fd9\u9053\u9898\u5904\u7406\u8d77\u6765\u975e\u5e38\u68d8\u624b\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u8981\u8bf7\u51fa\u6211\u4eec\u7684\u795e\u5668\u4e86\uff1a\n\n### \u5806\uff01\n\n\u5806\u5728\u8fd9\u9898\u91cc\u7528\u6765\u5904\u7406\u7279\u6b8a\u70b9\u65f6\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u8981\u5904\u7406\u5230\u7279\u6b8a\u70b9\u65f6\uff0c\u5c06\u7279\u6b8a\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u8d4b\u503c\u4e3a$0$\u5c31\u884c\u4e86\uff0c\u975e\u5e38\u65b9\u4fbf\u3002\u7b54\u6848\u5c31\u5728\u6bcf\u6b21\u53d6\u51fa\u65f6\u7528\u53d6\u51fa\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u4e0e$ans$\u6bd4\u8f83\u5e76\u53d6\u6700\u5927\u7684\u5c31\u884c\u4e86\u3002\uff08\u770b\u8d77\u6765\u975e\u5e38\u50cfdijkstra\uff0c\u4f46\u8ddfdijkstra\u76f8\u6bd4\u5c11\u4e86vis\u6570\u7ec4\uff09\n\n\u6709\u4e00\u4e9b\u5730\u65b9\u8981\u6ce8\u610f\uff1a\n\n\u5f53\u5faa\u73af\u5230\u7ed3\u675f\u70b9\u65f6\u5c31\u53ef\u4ee5\u505c\u6b62\u4e86\uff0c\u6ca1\u5fc5\u8981\u7ee7\u7eed\u4e0b\u53bb\uff1b\n\n\u5f53\u5faa\u73af\u65f6\u53d1\u73b0\u5faa\u73af\u5230\u7684\u70b9\u6743\u503c\u6bd4\u76ee\u524d\u7684\u503c\u5c0f\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u4e86\uff08\u5426\u5219\u4f1aWA\uff09\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct dd{\n\tint to,next;\n}a[500001];\nint q,head[100001],dis[100001],start,over,n,m,sn,ans;\nbool spe[100001];\nvoid add(int xx,int yy)\n{\n\ta[++q].to=yy;\n\ta[q].next=head[xx];\n\thead[xx]=q;\n}\nstruct ss{\n\tint dis;\n\tint pos;\n\tbool operator <(const ss &t)const\n\t{\n\t\treturn t.dis<dis;\n\t}\n}u,ert;\npriority_queue<ss> que;\nvoid bfs()\n{\n\tdis[start]=0;\n\tu.dis=0;\n\tu.pos=start;\n\tque.push(u);\n\twhile(!que.empty())\n\t{\n\t\tu=que.top();\n\t\tque.pop();\n\t\tif(u.dis>dis[u.pos])continue;\n\t\tans=max(ans,u.dis);\n\t\tif(u.pos==over)return;\n\t\tif(spe[u.pos])dis[u.pos]=0;\n\t\tfor(int i=head[u.pos];i;i=a[i].next)\n\t\t\tif(dis[a[i].to]>dis[u.pos]+1)\n\t\t\t{\n\t\t\t\tdis[a[i].to]=dis[u.pos]+1;\n\t\t\t\tert.dis=dis[a[i].to];\n\t\t\t\tert.pos=a[i].to;\n\t\t\t\tque.push(ert);\n\t\t\t}\n\t}\n}\nint main()\n{\n\tint x,y,z;\t\n\tfor(int i=1;i<=100000;i++) dis[i]=1073741824;\n\tcin>>n>>m>>sn;\n\tfor(int i=1;i<=sn;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tspe[x]=1;\t\t\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tcin>>start>>over;\n\tbfs();\n\tif(dis[over]!=1073741824)cout<<ans;\n\telse cout<<-1;\n}\n```\n",
        "postTime": 1585224741,
        "uid": 239358,
        "name": "Velix",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF187C \u3010Weak Memory\u3011"
    },
    {
        "content": "### CF187C Weak Memory\n\n\u8fd9\u9898\u663e\u7136\u6ca1\u7d2b\u9898\u96be\u5ea6\uff0c\u6700\u591a\u7eff\n\n\u65e2\u7136\u8ba9\u80fd\u91cf\u6700\u5c0f\u53ef\u4ee5\u8003\u8651\u4e8c\u5206\u7b54\u6848\u53d8\u6210\u53ef\u884c\u6027\u95ee\u9898\n\n\u56e0\u4e3a\u64cd\u4f5c\u53ea\u4f1a$-1$\u6216\u8005\u8865\u6ee1\uff0c\u6240\u4ee5\u67d0\u4e2a\u70b9\u5f53\u524d\u80fd\u91cf\u6700\u5927\u4e00\u5b9a\u201c\u6709\u5229\u4e8e\u201d\u63a5\u4e0b\u6765\u70b9\u7684\u8f6c\u79fb(\u4e0d\u4f1a\u66f4\u52a3)\n\n\u90a3\u5c31\u4e8c\u5206\u6700\u5c0f\u80fd\u91cf\u8dd1$bfs$\u5373\u53ef\n\n```cpp\n#include <cstring>\n#include <iostream>\n#include <queue>\nusing namespace std;\nconst int N = 100010;\nstruct Edge {\n    int v;\n    int nxt;\n} edge[N * 4];\nint head[N], ecnt;\nvoid add(int u, int v) {\n    edge[++ecnt].v = v;\n    edge[ecnt].nxt = head[u];\n    head[u]        = ecnt;\n}\nint pos[N];\nint dis[N];\nint n, m, k, s, t;\nstruct Data {\n    int x, w;\n    bool operator<(const Data &b) const {\n        return w < b.w;\n    }\n};\npriority_queue<Data> q;\nbool check(int x) {\n    while (!q.empty())\n        q.pop();\n    memset(dis, -1, sizeof(dis));\n    dis[s] = x;\n    q.push({s, x});\n    while (!q.empty()) {\n        Data now = q.top();\n        q.pop();\n        if (now.w == 0) {\n            continue;\n        }\n        for (int i = head[now.x]; i; i = edge[i].nxt) {\n            int v = edge[i].v;\n            int w = now.w - 1;\n            if (v == t)\n                return true;\n            if (pos[v]) {\n                w = x;\n            }\n            if (dis[v] < w) {\n                dis[v] = w;\n                q.push({v, w});\n            }\n        }\n    }\n    return false;\n}\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cin >> n >> m >> k;\n    for (int i = 1; i <= k; i++) {\n        int tmp;\n        cin >> tmp;\n        pos[tmp] = 1;\n    }\n    for (int i = 1; i <= m; i++) {\n        int a, b;\n        cin >> a >> b;\n        add(a, b);\n        add(b, a);\n    }\n    cin >> s >> t;\n    int l = 1, r = n, ans = -1;\n    while (l <= r) {\n        int mid = (l + r) / 2;\n        if (check(mid)) {\n            r   = mid - 1;\n            ans = mid;\n        } else {\n            l = mid + 1;\n        }\n    }\n    cout << ans;\n}\n```\n\n",
        "postTime": 1610367014,
        "uid": 46099,
        "name": "YCS_GG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF187C \u3010Weak Memory\u3011"
    }
]