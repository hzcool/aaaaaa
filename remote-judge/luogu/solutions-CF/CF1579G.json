[
    {
        "content": "\u5206\u4eab\u4e00\u4e2a\u975e\u5e38\u667a\u6167\u7684\u505a\u6cd5\uff0c\u4ece tutorial \u8bc4\u8bba\u533a\u770b\u5230\u7684\n\n\u53d1\u73b0\u7b54\u6848\u957f\u5ea6\u8d8a\u5927\uff0c\u7559\u7ed9\u8fd9\u5806\u7ebf\u6bb5\u65bd\u5c55\u7684\u7a7a\u95f4\u5c31\u8d8a\u5927\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u66f4\u5bb9\u6613\u5408\u6cd5\u3002\u4e8e\u662f\u8003\u8651\u4e8c\u5206\u7b54\u6848 $t$\u3002\n\n\u5982\u4f55 `check`\uff1f\n\n\u5f53\u65f6\u60f3\u4e86\u534a\u5929\u5982\u4f55\u8d2a\u5fc3\uff0c\u603b\u662f\u60f3\u4e0d\u51fa\u6b63\u786e\u7684\u7b56\u7565\uff0c\u9042\u653e\u5f03\u3002\n\n\u4f46\u662f\u8d2a\u5fc3 `check` \u7684\u672c\u8d28\u8fd8\u662f\u9010\u6761\u63d2\u5165\u7ebf\u6bb5\uff0c\u9a8c\u8bc1\u6bcf\u6761\u7ebf\u6bb5\u7684\u7ed3\u5c3e\u7aef\u70b9\u80fd\u5426\u843d\u5230\u8fd9\u4e2a\u957f\u5ea6\u4e3a $t$ \u7684\u533a\u95f4\u91cc\u3002\n\n**\u4e8e\u662f\u6211\u4eec\u8003\u8651\u76f4\u63a5\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff01\uff01**\n\n\u8bbe $01$ \u6570\u7ec4 $b_{j, i}$ \u8868\u793a\u8003\u8651\u524d $j$ \u6761\u7ebf\u6bb5\uff0c\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u80fd\uff08$1$\uff09\u5426\uff08$0$\uff09\u6210\u4e3a\u7b2c $j$ \u6761\u7ebf\u6bb5\u7ed3\u5c3e\u4f4d\u7f6e\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u80fd\u5426\u6210\u4e3a\u7b2c $j + 1$ \u6761\u7ebf\u6bb5\u5f00\u59cb\u4f4d\u7f6e\u3002\n\n> Tips: `b[j][i]` \u8868\u793a\u7b2c i \u4f4d\u80fd\u5426\u6210\u4e3a\u7b2c j + 1 \u6761\u7ebf\u6bb5\u7684\u8d77\u59cb\u70b9\u3002\u6ce8\u610f\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u8003\u8651\u7b2c j + 1 \u6761\u7ebf\u6bb5\u7684\u80fd\u5426\u201c\u6210\u529f\u5730\u201d\u653e\u5728\u8fd9\u91cc\uff08\u56e0\u4e3a\u5b9a\u4e49 1 \u53ea\u201c\u8003\u8651\u4e86\u524d j \u6761\u7ebf\u6bb5\u201d\u80fd\u5426\u201c\u6210\u529f\u201d\u653e\u4e0b\uff09\uff0c\u53ea\u662f\u8003\u8651\u4e86\u7b2c i \u4f4d\u201c\u6709\u6ca1\u6709\u53ef\u80fd\u201d\u6210\u4e3a\u5b83\u7684\u8d77\u59cb\u70b9\uff0c\u6240\u4ee5\u7b2c 1 \u6761\u7ebf\u6bb5\u662f\u201c\u53ef\u80fd\u201d\u53ef\u4ee5\u653e\u5728\u4efb\u4f55\u8d77\u59cb\u70b9\u7684\u3002\u63a5\u4e0b\u6765\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u624d\u5f00\u59cb\u8003\u8651\u8fd9\u6761\u5c06\u8981\u653e\u4e0b\u7684\u7ebf\u6bb5\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u80fd\u5426\u201c\u6210\u529f\u5730\u201d\u653e\u5728\u8fd9\u91cc\u3002\n\n\u8003\u8651\u65b0\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\u957f\u5ea6\u4e3a $d$\uff0c\u5bf9\u6240\u6709\uff08\u7b54\u6848\u4e0d\u4f1a\u8d8a\u754c\u7684\uff09\u4f4d\u7f6e $i$\uff0c\u5b83\u80fd\u6210\u4e3a\u7ed3\u5c3e\u5f53\u4e14\u4ec5\u5f53\u4f4d\u7f6e $i \\pm d$ \u81f3\u5c11\u6709\u4e00\u4e2a\u80fd\u6210\u4e3a\u5f00\u5934\uff0c\u4e5f\u5c31\u662f\uff1a\n\n$$b_{j, i} = b_{j - 1, i - d} \\text{ or } b_{j - 1, i + d}$$\n\n\u5f53\u524d\u7684\u7b54\u6848\u6ee1\u8db3\u6761\u4ef6\u610f\u5473\u7740 $b_{n}$ \u81f3\u5c11\u6709\u4e00\u4e2a\u4f4d\u7f6e\u4e3a $1$\u3002\n\n\u5feb\u901f\u7ef4\u62a4\u8fd9\u4e2a $01$ \u6570\u7ec4\u53ef\u4ee5\u901a\u8fc7 `std::bitset` \u5b9e\u73b0\u3002\u53ef\u4ee5\u76f4\u63a5\u6eda\u52a8\u6570\u7ec4\u628a\u7b2c\u4e00\u7ef4\u4f18\u5316\u6389\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u6ce8\u91ca\u5199\u7684\u82f1\u6587\u662f\u56e0\u4e3a\u6211\u540c\u65f6\u5728\u7528 Dev-C++ \u548c VSCode\uff0c\u4e3a\u4e86\u9632\u6b62\u7f16\u7801\u6df7\u4e71\u624d\u5199\u6210\u82f1\u6587\u7684\u3002\n\n\u5173\u4e8e\u90a3\u4e2a\u795e\u5947\u7684\u5f0f\u5b50\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe\uff08\u7ebf\u662f 1\uff0c\u5b9e\u5fc3\u5757\u662f 0\uff09\uff1a\n\n[![47LOb9.png](https://z3.ax1x.com/2021/10/01/47LOb9.png)](https://imgtu.com/i/47LOb9)\n\n```cpp\nconst int MAXN = 10000 + 10;\n\nint n, aa[MAXN];\n\nstd::bitset<MAXN> s, t; \n// (after j loops) s[i] means (after considering the first j segs) \n// whether the jth seg's end can be placed on pos i\n// in other words, (before the (j + 1)th loop) s[i] means (after considering the first j segs)\n// whether it's possible to place the (j + 1)th seg's start on pos i\n\n// jth seg's end can be placed on pos i if and only if its start can be placed on pos (i - len) or (i + len)\n// that is, forall i, new_s[i] = s[i - len] | s[i + len]\n\n\nbool check(int mid) {\n    s = 0; t = 0;\n    for (int i = 0; i <= std::min(mid, MAXN - 1); ++i) t.set(i);\n    s = t;\n    for (int i = 1; i <= n; ++i) {\n        s = ((s >> aa[i]) | (s << aa[i])) & t;\n        // this magic thing equals to:\n        // for (int j = 1; j <= n; ++j) {\n        //     new_s[j] = s[j - aa[i]] | s[j + aa[i]];\n        // }\n    } return s.count();\n}\n\nint main() {\n    std::ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    int T; cin >> T;\n    while (T --> 0) {\n        cin >> n;\n        for (int i = 1; i <= n; ++i) cin >> aa[i];\n        int l = 1, r = 2e7, ans = 0;\n        while (l <= r) {\n            int mid = (l + r) >> 1;\n            if (check(mid)) r = mid - 1, ans = mid;\n            else l = mid + 1;\n        } cout << ans << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1633095832,
        "uid": 56626,
        "name": "HDWR",
        "ccfLevel": 6,
        "title": "CF1579G \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\u7b80\u6790\n\u6709\u591a\u7ec4\u6570\u636e\n- \u7ed9\u4f60 $n$ \u6761\u7ebf\u6bb5\uff0c\u544a\u8bc9\u4f60\u6bcf\u6761\u7ebf\u6bb5\u7684**\u957f\u5ea6**\u3002\n- \u4f60\u9700\u8981\u628a\u5b83\u4eec\u653e\u5728\u4e00\u6761**\u65e0\u9650\u957f\u7684\u6570\u8f74**\u4e0a\u3002\n- \u653e\u7f6e\u9700\u6ee1\u8db3**\u5f53\u524d\u7ebf\u6bb5\u7684\u8d77\u70b9**\u662f**\u524d\u4e00\u4e2a\u7ebf\u6bb5\u7684\u7ec8\u70b9**\uff0c\u7279\u522b\u7684\u7b2c\u4e00\u4e2a\u7ebf\u6bb5\u7684\u8d77\u70b9\u4e3a $0$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u82e5\u524d\u4e00\u4e2a\u7ebf\u6bb5\u7684\u7ec8\u70b9\u662f $x$,\u5f53\u524d\u957f\u5ea6\u4e3a $d$, \u90a3\u4e48\u8fd9\u4e2a\u7ebf\u6bb5\u5fc5\u987b\u653e\u5728 $[x-d,x]$ \u7ec8\u70b9\u53d8\u4e3a $x-d$\uff0c\u6216 $[x, x + d]$ \u7ec8\u70b9\u53d8\u4e3a $x + d$\u3002\n- \u8bf7\u95ee\u653e\u7f6e\u5b8c\u540e\u6240\u6709\u7ebf\u6bb5\u7684\u6700\u5c0f\u8986\u76d6\u957f\u5ea6\u662f\u591a\u5c11\uff1f\n- $1\\le t\\le 10^4, 1\\le n\\le 10^4$\n\n## \u5206\u6790\n~~\u597d\u8036\uff0c\u5c45\u7136\u662fDP\u9898~~\n\n\u6211\u4eec\u628a\u8986\u76d6\u770b\u6210\u8df3\u8dc3\uff0c\u4e00\u6761\u6761\u8df3\u8fdb\u884c\u51b3\u7b56\u663e\u7136\u4e0d\u73b0\u5b9e~~\u8d2a\u5fc3\u5199\u6302\u4e86~~\u3002\u901a\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u8bc1\u660e\uff0c\u6700\u540e\u7684\u7b54\u6848\u80af\u5b9a\u4e0d\u8d85\u8fc7 $2\\times l_{\\max}$\u3002\u56e0\u4e3a\u6240\u6709\u7684\u7ebf\u6bb5\u90fd\u53ef\u4ee5\u5728\u91cc\u9762\u5de6\u53f3\u8df3\uff0c\u800c\u4e0d\u51fa\u53bb\uff08\u4e5f\u53ef\u53c2\u89c1\u4e0b\u9762\u7684\u89e3\u91ca\uff09\u3002\n\n\u7531\u4e8e\u6570\u8f74\u662f\u65e0\u9650\u957f\u7684\uff0c\u4ece\u54ea\u91cc\u5f00\u59cb\u6ca1\u6709\u5f71\u54cd\u3002\u6211\u4eec\u53ef\u4ee5\u89c4\u5b9a\u6240\u6709\u7ebf\u6bb5\u5728 $[-l_{\\max},l_{\\max}]$ \u4e4b\u95f4\uff0c\u5982\u679c\u5f53\u524d\u4e0a\u4e00\u4e2a\u7ed3\u675f\u4f4d\u7f6e\u5927\u4e8e $0$\uff0c\u5c31\u5411\u5de6\u8df3\uff0c\u5426\u5219\uff0c\u5c31\u5411\u53f3\u8df3\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8df3\u51fa\u8fb9\u754c\u3002\n\n\u89e3\u51b3\u4e86\u5982\u4f55\u64cd\u4f5c\u7684\u95ee\u9898\uff0c\u63a5\u4e0b\u6765\u9996\u5148\u662fdp\u7684\u72b6\u6001\uff1a$dp_{i,l}$ \u7528\u6765\u8868\u793a\u5f53\u524d $i$ \u7684\u7ed3\u675f\u70b9\u5230\u6700\u5de6\u8fb9\u7684\u8ddd\u79bb\u662f $l$ \u65f6\uff0c\u5230\u6700\u53f3\u8fb9\u7684\u8ddd\u79bb\u6700\u5c0f\u503c\u3002\u4e8e\u662f\u5f53\u524d\u8986\u76d6\u7684\u957f\u5ea6\u5373\u4e3a $l+dp_{i,l}$\u3002\u6700\u540e\u7684\u7b54\u6848\u5373\u4e3a $\\min(l+dp_{n,l})(0\\le l\\le 2\\times l_{\\max})$\n\n\u7136\u540e\u662f\u8f6c\u79fb\uff1a\n- \u9884\u5904\u7406\uff1a$dp_{i,j}=inf,dp_{0,0}=0$ \u5982\u679c\u7b49\u4e8e $inf$\uff0c\u8bf4\u660e\u65e0\u6cd5\u8df3\u5230\uff0c\u76f4\u63a5\u8df3\u51fa\u3002\n- \u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u8003\u8651\u5411\u5de6\u653e\u8fd8\u662f\u5411\u53f3\u653e\uff1a\n\t- \u5176\u4e2d $0\\le l\\le 2\\times l_{\\max},0\\le i< n$\n\t- \u5bf9\u4e8e $a_{i+1}$, \u5982\u679c\u8003\u8651\u5411\u5de6\u653e\uff0c\u90a3\u4e48\u5230\u5de6\u8fb9\u754c\u7684\u8ddd\u79bb\u53d8\u4e3a $\\max(l-a_{i+1},0)$\uff08\u5982\u679c\u6ca1\u6709\u8d85\u8fc7\u8303\u56f4\uff0c\u5c31\u51cf\u4e00\u4e0b\uff0c\u5426\u5219\u5b83\u5c31\u662f\u73b0\u5728\u7684\u6700\u5de6\u8fb9\uff09\uff0c\u5230\u53f3\u8fb9\u754c\u7684\u8ddd\u79bb\u4e3a $dp_{i,l}+a_{i+1}$\uff08\u56e0\u4e3a\u5411\u5de6\u8df3\u4e86\u90a3\u4e48\u591a\uff09\u3002\u6240\u4ee5\u6709\n    $$dp_{i+1,\\max(0,l-a_{i+1})} = min(dp_{i+1,\\max(0,l-a_{i+1})},dp_{i,l}+a_{i+1})$$\n   - \u5982\u679c\u8003\u8651\u5411\u53f3\u653e\uff0c\u90a3\u4e48\u5230\u53f3\u8fb9\u754c\u7684\u8ddd\u79bb\u53d8\u4e3a $\\max(dp_{i,l}-a_{i+1},0)$\uff0c\u5230\u5de6\u8fb9\u754c\u7684\u8ddd\u79bb\u4e3a $l+a_{i+1}$\uff0c\u6240\u4ee5\u6709\n   $$dp_{i+1,l+a_{i+1}}=min(dp_{i+1,l+a_{i+1}},\\max(dp_{i,l}-a_{i+1},0))$$\n\u7136\u540e\u6211\u4eec\u5c31\u6109\u5feb\u5730\u89e3\u51b3\u4e86\uff0c \u590d\u6742\u5ea6 $O(n\\times l_{\\max})$\n\n## \u603b\u7ed3\n\u60f3\u5bf9\u72b6\u6001\u8fd8\u662f\u3002\u3002\u55ef\u4e0d\u96be\u60f3\u7684\n~~\u603b\u4e4b\u4e5f\u662f\u9053\u795e\u4ed9\u9898~~\n\n```cpp\nconst int INF = 1000000000;\n\nint main() {\n    int T = read();\n    while (T --) {\n        int n = read();\n        int maxx = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = read();\n            maxx = max(maxx, a[i]);\n        }\n        vector<vector<int>> dp(n + 1, vector<int>(2 * maxx + 1, INF));\n        dp[0][0] = 0;\n        for (int i = 0; i < n; i++) {\n            for (int left = 0; left <= 2 * maxx; left++) {\n                if (dp[i][left] == INF)\n                    continue;\n                dp[i + 1][max(left - a[i], 0)] = min(dp[i + 1][max(left - a[i], 0)], dp[i][left] + a[i]);\n                if (left + a[i] < dp[i + 1].size()) {\n                    dp[i + 1][left + a[i]] = min(dp[i + 1][left + a[i]], max(dp[i][left] - a[i], 0));\n                }\n            }\n        }\n        int ans = 2 * maxx + 1;\n        for (int left = 0; left <= 2 * maxx; left++)\n            ans = min(ans, left + dp[n][left]);\n        write(ans), puts(\"\");\n    }\n}\n```\n",
        "postTime": 1633318943,
        "uid": 119204,
        "name": "\u4f3c\u5ae9",
        "ccfLevel": 5,
        "title": "\u9898\u89e3\uff1aCF1579G Minimal Coverage"
    },
    {
        "content": "### [CF1579G](https://codeforces.com/contest/1579/problem/G)\n\n\u9996\u5148\u80af\u5b9a\u53ef\u4ee5\u4e8c\u5206\u957f\u5ea6 $len$\u3002\n\n\u8bbe $dp_{i,j}$ \u8868\u793a\u8003\u8651\u4e86\u524d $i$ \u6761\u7ebf\u6bb5\uff0c\u7ec8\u70b9\u53ef\u4e0d\u53ef\u80fd\u5728 $j$\u3002\n\n\u56e0\u4e3a\u5750\u6807\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u6240\u4ee5\u4e0d\u65b9\u4fbf\u5904\u7406\uff0c\u6240\u4ee5 $j$ \u4e0d\u662f\u5750\u6807\u4f4d\u7f6e\u3002\n\n\u5b9e\u9645\u4e0a\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5728\u610f $j$ \u8868\u793a\u4ec0\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u63a7\u5236 $j\\in[0,len]$\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u4ece\u8d77\u70b9\u5230\u4efb\u610f\u4e00\u4e2a\u8f6c\u79fb\u5230\u7684\u7ec8\u70b9\u7684\u8ddd\u79bb\u90fd\u4e0d\u8d85\u8fc7 $len$\u3002\n\n\u521d\u59cb\u5bf9\u4e8e $j\\in[0,len]$\uff0c$dp_{0,j}=1$\u3002\n\n\u8f6c\u79fb\uff1a\u5bf9\u4e8e $j$ \u6ee1\u8db3 $dp_{i-1,j}=1$\uff0c\u5982\u679c $j+a_i\\le len$\uff0c$dp_{i,j+a_i}=1$\uff1b\u5982\u679c $j-a_i\\ge 0$\uff0c$dp_{i,j-a_i}=1$\u3002\n\n\u5982\u679c $\\exists\\space i\\le len$ \u6ee1\u8db3 $dp_{n,i}=1$\uff0c\u5219 $len$ \u53ef\u4ee5\u53d6\u5f97\u5230\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n\n#define rep(x,y,z) for(int x=y;x<=z;x++)\n#define LL long long\n\nusing namespace std;\nconst int N=1e4+10;\n\nint a[N],n;\nbool dp[2][N];\n\ninline bool pd(int len)\n{\n\tint cur=0;\n\trep(i,0,len) dp[0][i]=1;\n\trep(i,1,n)\n\t{\n\t\tcur^=1;\n\t\trep(j,0,len) dp[cur][j]=0;\n\t\trep(j,0,len)\n\t\t\tif(dp[cur^1][j])\n\t\t\t{\n\t\t\t\tif(j+a[i]<=len) dp[cur][j+a[i]]=1;\n\t\t\t\tif(j-a[i]>=0) dp[cur][j-a[i]]=1;\n\t\t\t}\n\t}\n\trep(i,0,len) if(dp[cur][i]) return 1;\n\treturn 0;\n}\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\trep(i,1,n) scanf(\"%d\",&a[i]);\n\t\tint l=0,r=2000,ans;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=l+r>>1;\n\t\t\tif(pd(mid)) ans=mid,r=mid-1;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1664093288,
        "uid": 571634,
        "name": "hgzxwzf",
        "ccfLevel": 7,
        "title": "CF1579G"
    },
    {
        "content": "\u55b5\u55b5\u7684 dp \u9898\u3002\n\n## \u9898\u76ee\u7b80\u8ff0\n\n- \u7ed9\u4f60 $n$ \u6761\u7ebf\u6bb5\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u6709\u957f\u5ea6 $a_i$\u3002\n- \u8981\u6c42\u628a\u8fd9 $n$ \u6761\u7ebf\u6bb5\u8fde\u5728\u4e00\u6761\u6570\u8f74\u4e0a\u3002\n- \u8fd9\u4e9b\u7ebf\u6bb5\u7684\u6700\u77ed\u8986\u76d6\u957f\u5ea6\u3002\n- $\\sum n\\leq 10^4,a_i\\leq10^3$\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u6709\u4e2a\u663e\u7136\u9519\u8bef\u7684\u8d2a\u5fc3\uff1a\n\n> \u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\uff0c\u5982\u679c\u56fa\u5b9a\u7aef\u70b9\u5728\u5de6\u8fb9\u90a3\u5c31\u5f80\u53f3\u8fb9\u653e\uff1b\u53cd\u4e4b\u5f80\u5de6\u8fb9\u653e\u3002\n\n\u8fd9\u4e2a\u8d2a\u5fc3\u662f\u663e\u7136\u9519\u8bef\u7684\u3002\u4ece\u6570\u636e\u7684\u8303\u56f4\u5c31\u53ef\u4ee5\u770b\u51fa\u3002\u4f46\u662f\u8fd9\u4e2a\u8d2a\u5fc3\u8fd8\u662f\u7ed9\u6211\u4eec\u4e00\u70b9\u63d0\u793a\uff0c\u90a3\u5c31\u662f\uff1a\u7b54\u6848\u4e0d\u4f1a\u8d85\u8fc7 $a_{\\max}$\u3002\n\n\u6211\u4eec\u731c\u8fd9\u4e2a\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(na_{\\max})$\u3002\u7136\u540e\u6211\u4eec\u60f3\u60f3\u600e\u4e48\u505a\uff1f\n\n\u8003\u8651 $\\text{dp}$\u3002\u8fd9\u4e2a $\\text{dp}$ \u65e2\u8981\u63cf\u8ff0\u5f53\u524d\u7684\u957f\u5ea6\u53c8\u8981\u63cf\u8ff0\u5f53\u524d\u9876\u70b9\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\u5c31\u6709\u4e86\u8fd9\u6837\u7684\u63cf\u8ff0\uff1a$f_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u7ebf\u6bb5\u5230\u8fbe\u5f53\u524d\u7684\u6781\u53f3\u7aef\u70b9\u7684\u503c\u4e3a $j$ \u65f6\u5230\u6781\u5de6\u7aef\u70b9\u7684**\u6700\u5c0f\u503c**\u4e3a $f_{i,j}$\u3002\u90a3\u4e48\u6700\u7ec8\u7684\u7b54\u6848\u662f $\\min(f_{n,i}+i)$\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f\u5f88\u597d\u60f3\u7684\uff0c\u4f46\u662f\u6bd4\u8f83\u590d\u6742\uff1a\n\n```cpp\nf[i+1][max(0,j-a[i+1])]=min(f[i+1][max(0,j-a[i+1])],f[i][j]+a[i+1]); \nf[i+1][j+a[i+1]]=min(f[i+1][j+a[i+1]],max(f[i][j]-a[i+1],0));\n```\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<iostream>\nusing namespace std;\nconst int MAXN=1e4+5;\nconst int MR=1e3+5;\nint f[MAXN][2*MR];int n;\nint a[MAXN];\nvoid solve(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tfor(int i=0;i<=n;i++)\n\t\tfor(int j=0;j<2*MR;j++)\n\t\t\tf[i][j]=1e9;\n\tf[0][0]=0;\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<2*MR;j++)\n\t\t\tif(f[i][j]<114514){//\u5982\u679c\u5408\u6cd5 \n\t\t\t\tf[i+1][max(0,j-a[i+1])]=min(f[i+1][max(0,j-a[i+1])],f[i][j]+a[i+1]); \n\t\t\t\tif(j+a[i+1]<2*MR) f[i+1][j+a[i+1]]=min(f[i+1][j+a[i+1]],max(f[i][j]-a[i+1],0));\n\t\t\t}\n\tint ans=114514;\n\tfor(int i=0;i<2*MR;i++)\n\t\tans=min(ans,f[n][i]+i);\n\tcout<<ans<<endl;\n}\nint main(){\n\tint _;cin>>_;\n\twhile(_--) solve();\n}\n```",
        "postTime": 1657161493,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "CF1579G Minimal Coverage \u9898\u89e3"
    },
    {
        "content": "~~\u7ed9\u4e00\u4e2a\u81ea\u8ba4\u4e3a\u5999\u597d\u5199\u7684dp\u505a\u6cd5~~\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u8003\u8651dp\uff0c\u5bb9\u6613\u60f3\u5230\u6700\u957f\u8ddd\u79bb\u53ef\u80fd\u8fbe\u52301e7, \u8fd9\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\u3002\n\n\u5148\u7ed9\u4e00\u4e2a\u7ed3\u8bba\u5427\uff0c\u6211\u4eec\u5047\u8bbe\u7ebf\u6bb5\u7684\u6700\u957f\u957f\u5ea6\u4e3aM\uff0c\u90a3\u4e48\u6700\u957f\u8986\u76d6\u4e0d\u8d85\u8fc7$2M$\uff08\u5411\u5de6M\uff0c\u5411\u53f3M\uff09\u3002\n\n![image](https://cdn.luogu.com.cn/upload/image_hosting/qnqypuuc.png)\u3002\n\n\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u8d2a\u5fc3\u7b56\u7565\uff1a\u5982\u679c\u5355\u524d\u7ed3\u675f\u4f4d\u7f6e\u79bbL\u7684\u8ddd\u79bb\u6bd4R\u8981\u8fdc\uff0c\u90a3\u4e48\u4e0b\u4e00\u6761\u7ebf\u6bb5\u5411\u5de6\uff0c\u53cd\u4e4b\u5411\u53f3\u3002\u8bc1\u660e\uff1a\u5982\u679c\u8981\u8d85\u8fc7R\uff0c\u90a3\u4e48\u8d77\u70b9\u81f3\u5c11\u8981\u5728\u539f\u70b9\u53f3\u8fb9\uff0c\u6b64\u65f6\u4e00\u5b9a\u5411\u5de6\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u6b64\u65f6\u5bb9\u6613\u60f3\u5230\u7684\u4e00\u4e2a\u72b6\u6001\u662f\u8bbe $f_{i,j,k}$ \u524di\u6761\u7ebf\u6bb5\u8868\u793a\u4ee5j\u4e3a\u5de6\u7aef\u70b9(\u5411\u5de6\u8986\u76d6\u7684\u6700\u8fdc\u70b9)\uff0ck\u4e3a\u7ed3\u675f\u4f4d\u7f6e\u7684\u6700\u77ed\u8986\u76d6\u8ddd\u79bb\uff0c \u663e\u7136\u8d2a\u5fc3\u6765\u8bf4\u8fd9\u4e2a\u8ddd\u79bb\u8d8a\u77ed\u8d8a\u4f18\u3002 \n\n\u6b64\u65f6\u5bf9\u4e8e $f_i$ \u7684\u6bcf\u4e2a\u72b6\u6001\uff0c\u7ed3\u675f\u4f4d\u7f6e\u786e\u5b9a\uff0c\u8003\u8651\u52a0\u5165\u7b2ci+1\u6761\u7ebf\u6bb5\uff0c\u53ef\u80fd\u7684\u7ed3\u675f\u4f4d\u7f6e\u548c\u5de6\u7aef\u70b9\u53ea\u6709\u4e24\u4e2a\uff0c \u6240\u4ee5\u8f6c\u79fb\u662fO(1)\u7684\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u7684\u5de6\u53f3\u7aef\u70b9\u4f4d\u7f6e\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u4e0d\u597d\u5904\u7406\uff0c\u800c\u4e14\u590d\u6742\u5ea6\u8fc7\u5927\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u4f18\u5316\u72b6\u6001\u8bbe\u8ba1\u3002\n\n\u4ed4\u7ec6\u601d\u8003\uff0c\u6211\u4eec\u8bb0\u5f55\u5de6\u7aef\u70b9\u548c\u7ed3\u675f\u4f4d\u7f6e\uff0c\u53c8\u77e5\u9053\u8986\u76d6\u957f\u5ea6\u6765\u6c42\u51fa\u53f3\u7aef\u70b9\uff0c\u8fd9\u4e9b\u8fd9\u7684\u6709\u7528\u5417\uff1f\n\n\u6211\u4eec\u5176\u5b9e\u53ea\u662f\u60f3\u77e5\u9053\u7ed3\u675f\u4f4d\u7f6e\u4e0e\u5de6\u53f3\u7aef\u70b9\u7684\u8ddd\u79bb\u5373\u53ef\uff0c\u4ed6\u4eec\u7684\u4f4d\u7f6e\u5177\u4f53\u5728\u54ea\u91cc\u5e76\u4e0d\u91cd\u8981\uff0c\u60a8\u628a\u4ed6\u5e73\u79fb\u4e00\u4e0b\u8fd8\u662f\u4e00\u6837\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8bbe $f_{i, j}$\uff0c\u524di\u7ebf\u6bb5\uff0c\u7ed3\u675f\u4f4d\u7f6e\u79bb\u5de6\u7aef\u70b9\u7684\u8ddd\u79bb\u4e3aj\u65f6\u7684\u6700\u77ed\u8986\u76d6\uff0c\u77e5\u9053\u6700\u77ed\u8986\u76d6\u5373\u53ef\u7b97\u51fa\u53f3\u7aef\u70b9\u8ddd\u79bb\u3002\n\n\u8f6c\u79fb\u5f88\u597d\u5199\uff0c \u5177\u4f53\u53c2\u8003\u4ee3\u7801\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n \nint read(){\n\tint num=0, flag=1; char c=getchar();\n\twhile(!isdigit(c) && c!='-') c=getchar();\n\tif(c=='-') flag=-1, c=getchar();\n\twhile(isdigit(c)) num=num*10+c-'0', c=getchar();\n\treturn num; \n}\n \nconst int N = 1050;\nconst int inf = 0x3f3f3f3f;\nint T, n;\nint a[N*10];\nint f[N*10][N*4];\n \nvoid clear(int x){\n\tfor(int i=0; i<N*2+10; i++) f[x][i] = inf;\n}\n \nint main(){\n\tT = read();\n\twhile(T--){\n\t\tn = read();\n\t\tfor(int i=1; i<=n; i++) a[i] = read();\n\t\t\n\t\tclear(1); f[1][a[1]] = a[1];\n\t\tfor(int i=2; i<=n; i++){ \n\t\t\tclear(i);\n\t\t\t\n\t\t\tfor(int j=0; j<=N*2; j++){\n\t\t\t\tf[i][j+a[i]] = min(f[i][j+a[i]], j+max(f[i-1][j]-j, a[i]));\n\t\t\t\tf[i][max(j-a[i], 0)] = min(f[i][max(j-a[i], 0)], f[i-1][j]-j+max(j, a[i]));\n\t\t\t}\n\t\t}\n\t\tint ans = inf;\n\t\tfor(int i=0; i<=N*2; i++) ans = min(f[n][i], ans);\n\t\tcout << ans << endl;\n \t}\n\treturn 0;\n}\n```",
        "postTime": 1633567770,
        "uid": 159375,
        "name": "ltdj",
        "ccfLevel": 7,
        "title": "CF1579G Minimal Coverage"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u9759\u4e0b\u5fc3\u6765\u505a\u9898\uff0c\u624b\u611f\u8d8a\u6765\u8d8a\u5dee\u3002\u4eca\u5929\u8fd8\u662f\u9759\u4e0b\u5fc3\u6765\u597d\u597d\u60f3\u4e86\u8fd9\u9053\u9898\uff0c\u89c9\u5f97\u4f5c\u4e3a *2200 \u96be\u5ea6\u7565\u900a\uff0c\u4f46\u662f\u8fd9\u4e2a\u601d\u7ef4\u8fd8\u662f\u6709\u70b9\u6df1\u5ea6\u7684\u3002\n\n-----\n\n\u770b\u5230\u8fd9\u9898\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u5230 dp\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u7ef4\u62a4\u5565\u3002\u7ef4\u62a4\u5f53\u524d\u7aef\u70b9\u5750\u6807\uff1f\u8fd9\u91cc\u6211\u4eec\u786e\u5b9a\u4e00\u4e0b\u7b54\u6848\u7684\u8303\u56f4\uff0c\u4ee5\u4fdd\u8bc1 dp \u7684\u590d\u6742\u5ea6\u3002\n\n\u7b54\u6848\u7684\u8303\u56f4\uff1a$[\\max\\{a\\} , 2\\max\\{a\\}]$\n\n\u4e0b\u9650\u6613\u8bc1\uff0c\u5173\u4e8e\u4e0a\u9650\uff0c\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u957f\u5ea6\u4e3a $2\\max\\{a\\}$ \u7684\u7ebf\u6bb5\u3002\u53d1\u73b0\u65e0\u8bba\u5f53\u524d\u7684\u7ebf\u6bb5\u7ffb\u6298\u5230\u4e86\u8fd9\u4e2a\u7ebf\u6bb5\u4e0a\u7684\u54ea\u4e2a\u70b9\uff0c\u5de6\u53f3\u4e24\u8fb9\u5fc5\u7136\u6709\u4e00\u6bb5\u957f\u5ea6 $\\le \\max\\{a\\}$\u3002\u8fd9\u6837\u5f52\u7eb3\u4e00\u4e0b\uff0c\u6bcf\u4e00\u6b65\u90fd\u53ef\u884c\u3002\u8bc1\u6bd5\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u4e0d\u96be\u53d1\u73b0\u76f4\u63a5 dp \u4e5f\u4e0d\u597d\u7ef4\u62a4\u8fd9\u4e2a\u8986\u76d6\u957f\u5ea6\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec**\u786e\u5b9a\u4e86\u8986\u76d6\u957f\u5ea6**\uff0c\u5c82\u4e0d\u662f\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u7aef\u70b9\u5750\u6807\u8fdb\u884c dp\uff1f\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u5730\u601d\u8def\u3002\n\n**\u8003\u8651\u4e8c\u5206**\uff0c\u7531\u4e8e\u521a\u624d\u7684\u8bc1\u660e\uff0c\u4ec5\u4ec5\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u662f $\\log_2 \\max\\{a\\}$ \u7684\u3002\u5173\u4e8e $\\text{check}(\\texttt{mid})$\uff0c\u8bbe\u8ba1\u4e00\u4e2a $f(i,j)=0/1$ \u8868\u793a\u7b2c $i$ \u6761\u7ebf\u6bb5\u7ffb\u6298\u540e\u662f\u5426\u80fd\u843d\u5230\u70b9 $j$ \u4e0a\u3002\u521d\u59cb\u6211\u4eec\u9650\u5236\u7684\u7aef\u70b9\u8303\u56f4\u662f $0 \\sim \\texttt{mid}$ \u7684\uff0c\u8d77\u70b9\u5728\u54ea\u91cc\u4e0d\u9650\u3002\u90a3\u4e48\u8fd9\u4e2a dp \u7684\u590d\u6742\u5ea6\u662f $\\mathcal O (n \\max\\{a\\}) $ \u7684\u3002\u4e8b\u5b9e\u4e0a\u7531\u4e8e CF \u673a\u5b50\u8f83\u5feb\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u603b\u590d\u6742\u5ea6\uff1a\u8bbe $t = \\max\\{a\\}$\uff0c\u5219\u4e3a $\\mathcal O (n t \\log t ) $ \uff08\u6709\u70b9\u52c9\u5f3a\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(3)\nusing namespace std;\ntypedef short ll;\n\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\n/*--------------head------------------*/\n\nll n,d[10005];\nbool f[2][2001];\ninline bool check(ll mid){\n\tfor(ll i=0;i<=mid;i++) f[0][i]=1;\n\tfor(ll i=0;i<n;i++){\n\t\tll lft=i&1; ll rht=lft^1;\n\t\tmemset(f[rht], 0, sizeof(f[rht]));\n\t\tfor(ll j=0;j<=mid;j++){\n\t\t\tif(f[lft][j]){\n\t\t\t\tif(j>=d[i+1]) f[rht][j-d[i+1]]=1;\n\t\t\t\tif(j+d[i+1]<=mid) f[rht][j+d[i+1]]=1;// cout<<\"from \"<<j<<\" to \"<<j+d[i+1]<<endl;\n\t\t\t}\n\t\t}\n\t}\n\tfor(ll j=0;j<=mid;j++)\n\t\tif(f[n&1][j]) return 1;\n\treturn 0;\n}\nvoid solve(){\n\tn=read();\n\tll mx = 0;\n\tfor(ll i=1;i<=n;i++) d[i]=read(), mx = (d[i]>mx?d[i]:mx);\n\tll lft=mx, rht=2*mx, ans=0;\n\twhile(lft<=rht){\n\t\tll mid=lft+rht>>1;\n\t\tif(check(mid)) ans=mid, rht=mid-1;\n\t\telse lft=mid+1;\n\t}\n\tcout<<ans<<endl;\n}\nint main(){\n    ll T=read();\n    while(T--) solve();\n    return 0;\n}\n\n```",
        "postTime": 1669300773,
        "uid": 334727,
        "name": "BreakPlus",
        "ccfLevel": 0,
        "title": "Solution CF1579G"
    },
    {
        "content": "\u89c2\u5bdf\u53d1\u73b0\uff0c\u5bf9\u4e8e\u7b2c $i$ \u6b65\u64cd\u4f5c\uff0c\u6bd4\u8f83\"\u4f60\u8d70\u5230\u4e86 $3$ \u5e76\u4e14\u6b64\u65f6\u5df2\u7ecf\u89e6\u78b0\u7684\u533a\u95f4 $[0,5]$ \"\u548c\"\u4f60\u8d70\u5230\u4e86 $1$ \u5e76\u4e14\u6b64\u65f6\u5df2\u7ecf\u89e6\u78b0\u7684\u533a\u95f4\u4e3a $[-2,3]$ \"\u4e24\u8005\uff0c\u4f60\u4f1a\u53d1\u73b0\u5176\u5b9e\u5bf9\u540e\u7eed\u5f71\u54cd\u662f\u76f8\u540c\u7684\uff0c\u4e5f\u5c31\u662f\u4e24\u8005\u5176\u5b9e\u662f\u7b49\u4ef7\u7684\u3002\n\n\u8fd9\u63d0\u793a\u4e86\u6211\u4eec\uff0c\u6211\u4eec\u5173\u6ce8\u7684\u5176\u5b9e\u53ea\u6709\n\n1.\u8d70\u5230\u54ea( $pos$ )\n\n2.\u5de6\u53f3\u8fb9\u754c\n\n\u4f46\u663e\u7136\u76f4\u63a5\u7ef4\u62a4\u8fd9\u4e9b\u4fe1\u606f\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u590d\u6742\u5ea6\u70b8\u98de\u4e86\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u5dee\u503c DP \uff0c\u8bbe $R$ \u4e3a\u53f3\u8fb9\u754c\u5230 $pos$ \u7684\u8ddd\u79bb\uff0c $L$ \u4e3a\u5de6\u8fb9\u754c\u5230pos\u7684\u8ddd\u79bb\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4 $R-L$ \u8fd9\u4e00\u4e2a\u4fe1\u606f\u5c31\u80fd\u5f97\u5230\u5de6\u53f3\u8fb9\u754c\u3002\n\n\u4f46\u6b64\u65f6\u6211\u4eec\u8fd8\u662f\u9700\u8981\u7ef4\u62a4 $pos$ \u548c $R-L$ \u8fd9\u4e24\u4e2a\u4fe1\u606f\uff0c\u8fd8\u662f\u4f1a\u70b8\u3002\n\n\u4f46\u5b9e\u9645\u4e0a\u901a\u8fc7\u6211\u4eec\u4e0a\u9762\u7684\u7b2c\u4e00\u6bb5\u8bdd\uff0c\u6211\u4eec\u80fd\u591f\u77e5\u9053\u5176\u5b9e\u5728\u540c\u4e00\u6b65\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u5230\u5e95 $pos$ \u5728\u54ea\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5728 $R-L$ \u7684\u9650\u5236\u4e0b\u7684\u6700\u77ed\u533a\u95f4\u957f\u5ea6\u5373\u53ef\u3002\n\n\u8fd9\u90e8\u5206\u7684\u8f6c\u79fb\u8fd8\u7b97\u86ee\u7b80\u5355\u7684\u3002\n\n\u7531\u4e8e\u5de6\u53f3\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u5c31\u5217\u51fa\u5411\u53f3\u653e\u7ebf\u6bb5\u7684\u8f6c\u79fb\u3002\n\n $f[i]$ \u8868\u793a $R-L$ \u4e3a $i$ \u65f6\u7684\u6700\u77ed\u533a\u95f4\u957f\u5ea6\n\n $g$ \u6570\u7ec4\u662f\u6bcf\u4e00\u6b65\u7684\u4e34\u65f6\u6570\u7ec4\n\n\u5f53 $R>=a[i]$ \u65f6\uff0c\u663e\u7136\u533a\u95f4\u957f\u5ea6\u4e0d\u4f1a\u53d8\n\n\u56e0\u6b64 $g[j-2*a[i]]=min(g[j-2*a[i]],f[j])$ \n\n\u5f53 $R<a[i]$ \u65f6\uff0c\u533a\u95f4\u957f\u5ea6\u53d8\u5316\n\n $g[j-2*R-(a[i]-R)]=min(g[j-2*R-(a[i]-R)],f[j]+(a[i]-R))$\n\n\u600e\u4e48\u77e5\u9053 $L$ \u548c $R$ \u7684\u503c\uff1f\n\n $f[i]$ \u4e0d\u5c31\u662f $L+R$ \u561b\n\n\u6240\u4ee5 $L*2=f[i]-i$\n\n$R*2=f[i]+i$\n\n\u4f46\u662f $f$ \u6570\u7ec4\u5f00\u591a\u5927\u5462\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u590d\u6742\u5ea6\u591a\u5c11\uff09\n\n\u5bb9\u6613\u53d1\u73b0\u663e\u7136\u4e0d\u53ef\u80fd\u51b2\u51fa $max_{a_i}$\n\u56e0\u6b64\u5f00 $2*2000$ \u5373\u53ef\uff08\u56e0\u4e3a\u6709\u8d1f\u6570\u57df\uff09\n\n\u5177\u4f53\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<iomanip>\n#include<algorithm>\nusing namespace std;\nconst int len=2000;\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=x*10+(c-'0');\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\nint t;\nint a[10050];\nint f[4050],g[4050];\nint main()\n{\n\tt=read();\n\twhile(t--)\n\t{\n\t\tint n=read();\n\t\tfor(int i=1;i<=n;i++) a[i]=read();\n\t\tmemset(f,63,sizeof(f));\n\t\tf[len+a[1]]=f[len-a[1]]=a[1];\n\t\tfor(int i=2;i<=n;i++)\n\t\t{\n\t\t\tmemset(g,63,sizeof(g));\n\t\t\tfor(int j=0;j<=2*len;j++)\n\t\t\t{\n\t\t\t\tif(f[j]<=1e7)\n\t\t\t\t{\n\t\t\t\t\tint k=j-len;\n\t\t\t\t\tint L=(f[j]-k)/2,R=(f[j]+k)/2;\n\t\t\t\t\tif(R>=a[i]&&(j-2*a[i])>=0) g[j-2*a[i]]=min(g[j-2*a[i]],f[j]);\n\t\t\t\t\tif(L>=a[i]&&(j+2CF1579G Minimal Coverage*a[i]<=2*len)) g[j+2*a[i]]=min(g[j+2*a[i]],f[j]);\n\t\t\t\t\tif(R<a[i]&&(j-2*R-(a[i]-R))>=0) g[j-2*R-(a[i]-R)]=min(g[j-2*R-(a[i]-R)],f[j]+(a[i]-R));\n\t\t\t\t\tif(L<a[i]&&(j+2*L+(a[i]-L)<=2*len)) g[j+2*L+(a[i]-L)]=min(g[j+2*L+(a[i]-L)],f[j]+(a[i]-L));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=0;j<=2*len;j++) f[j]=g[j];\n\t\t}\n\t\tint minn=1e9;\n\t\tfor(int i=0;i<=2*len;i++) minn=min(minn,f[i]);\n\t\tcout<<minn<<endl; \n\t}\n}\n```",
        "postTime": 1633061380,
        "uid": 182738,
        "name": "ZBHRuaRua",
        "ccfLevel": 6,
        "title": "CF1579G Minimal Coverage"
    }
]