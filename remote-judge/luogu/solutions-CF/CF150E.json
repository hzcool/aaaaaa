[
    {
        "content": "\u5927\u529b\u70b9\u5206\u6cbb\u2026\u2026\n\n\u4eba\u50bb\u5e38\u6570\u5927\uff0c\u4e24\u4e2alog\u8dd1\u4e0d\u8fc73\u4e2alog\u2026\u2026\n\n(\u53e6\u5916\u8fd9\u9898\u662fcf\u8001\u9898\uff0c\u610f\u5473\u7740\u4f60\u7684\u8fd0\u884c\u65f6\u95f4\u8981\u88ab\u4e582\uff0c\u6240\u4ee5\u65f6\u9650\u53ea\u67093500ms)\n_________________\n\n### \u524d\u7f6e\u829d\u58eb\uff1a\u70b9\u5206\u6cbb\n\n~~\u4e0d\u4f1a\u70b9\u5206\u6cbb\u7684\u8bdd\u51fa\u95e8\u5de6\u8f6c\u4f60\u7ad9\u6a21\u677f\u533a\uff0c\u5305\u6559\u5305\u4f1a~~\n\n## \u672c\u9898\u9898\u89e3\n\n\u4e00\u53e5\u8bdd\u9898\u610f:\u8bbe\u6811\u4e0a\u4e00\u6761\u8def\u5f84\u7684\u6743\u503c\u4e3a\u8def\u5f84\u4e0a\u8fb9\u7684\u4e2d\u4f4d\u6570\uff0c\u6c42\u8fb9\u6570\u5728(L,R)\u8fd9\u4e2a\u533a\u95f4\u91cc\u5e76\u4e14\u6743\u503c\u6700\u5927\u7684\u8def\u5f84\uff0c\u968f\u610f\u8f93\u51fa\u4e00\u79cd\u65b9\u6848\u5373\u53ef\n\n\u90a3\u4e48\u9898\u76ee\u5df2\u7ecf\u5341\u5206\u7b80\u5355\u6613\u61c2\u4e86\uff0c\u5bf9\u4e8e\u6700\u5927\u5316\u4e2d\u4f4d\u6570\u7684\u9898\u76ee\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u901a\u7528\u5957\u8def\u53eb\u4e8c\u5206\u7b54\u6848\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u6211\u4eec\u5c06\u6700\u5927\u5316\u4e2d\u4f4d\u6570\u95ee\u9898\u8f6c\u5316\u4e3a\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5927\u4e8emid\u7684\u4e2d\u4f4d\u6570\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u5224\u5b9a\u5462\uff1f\u8fd9\u53c8\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u5947\u6280\u6deb\u5de7\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5c0f\u4e8e\u7684mid\u7684\u8fb9\u7684\u8fb9\u6743\u770b\u6210-1,\u5c06\u6240\u6709\u5927\u4e8e\u7b49\u4e8emid\u7684\u8fb9\u7684\u8fb9\u6743\u770b\u62101\uff0c\u6b64\u65f6\u5982\u679c\u6709\u4e00\u6761\u8def\u5f84\u7684\u8fb9\u6743\u548c\u5927\u4e8e\u7b49\u4e8e0\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u7684\u4e2d\u4f4d\u6570\u5c31\u5927\u4e8emid\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u8bc1\u660e\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8fd9\u6761\u8def\u5f84\u7684\u6743\u503c\u548c\u5927\u4e8e\u7b49\u4e8e0\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u8fd9\u6761\u8def\u5f84\u4e2d\u5927\u4e8e\u7b49\u4e8emid\u7684\u6570\u6bd4\u5c0f\u4e8emid\u7684\u6570\u591a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5e8f\u5217\u7684\u4e2d\u4f4d\u6570\u81ea\u7136\u5c31\u5927\u4e8e\u7b49\u4e8emid\u4e86\n\n\u6240\u4ee5\u73b0\u5728\u7684\u95ee\u9898\u8f6c\u5316\u6210\u4e86\uff0c\u5982\u4f55\u5728\u6811\u4e0a\u627e\u4e00\u4e2a\u8fb9\u6570\u5728(L,R)\u8fd9\u4e2a\u533a\u95f4\u91cc\u5e76\u4e14\u6743\u503c\u548c\u5927\u4e8e\u7b49\u4e8e0\u7684\u8def\u5f84\u4e86\uff0c\u5f53\u7136\uff0c\u8fd8\u8981\u8f93\u51fa\u8fd9\u4e2a\u8def\u5f84\n\n\u8fd9\u4e2a\u95ee\u9898\u5176\u5b9e\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u70b9\u5206\u6cbb\u95ee\u9898\uff0c\u6211\u4eec\u5bf9\u6574\u68f5\u6811\u8fdb\u884c\u70b9\u5206\u6cbb\uff0c\u73b0\u5728\u8003\u8651\u8fc7\u4e2d\u5fc3G\u7684\u6240\u6709\u8def\u5f84\uff0c\u6839\u636e\u70b9\u5206\u6cbb\u7684\u4e00\u822c\u5957\u8def\uff0c\u6211\u4eec\u628aG\u5230\u5176\u4ed6\u8054\u901a\u5757\u91cc\u7684\u70b9\u7684\u8def\u5f84\u5168\u90e8dfs/bfs\u51fa\u6765\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u505a\u7684\u4e8b\u5c31\u662f\u679a\u4e3e\u6bcf\u4e00\u6761\u8def\u5f84\uff0c\u627e\u5230\u4e00\u6761\u548c\u5b83\u6240\u201c\u5339\u914d\u201d\u7684\u6700\u4f18\u8def\u5f84\u4e86\n(\u8fd9\u91cc\u7684\u5339\u914d\u7684\u610f\u601d\u5c31\u662f\u8fd9\u6761\u4eceG\u51fa\u53d1\u7684\u8def\u5f84\u53ef\u4ee5\u548c\u53e6\u4e00\u6761\u4eceG\u51fa\u53d1\u7684\u8def\u5f84\u62fc\u6210\u4e00\u6761\u8fc7G\u7684\u8def\u5f84)\n\n\u90a3\u4e48\u6211\u4eec\u5f53\u7136\u9700\u8981\u6ee1\u8db3\u4e00\u4e9b\u9650\u5236\u6761\u4ef6\uff0c\u5047\u8bbe\u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\u4e3a$x$\u7684\u8bdd,\u90a3\u4e48\u548c\u4ed6\u5339\u914d\u7684\u8def\u5f84\u7684\u957f\u5ea6\u5e94\u8be5\u5728$(L-x,R-x)$\u4e4b\u95f4\uff0c\u540c\u65f6\u6211\u4eec\u5e94\u8be5\u8ba9\u8fd9\u6761\u548c\u4ed6\u5339\u914d\u7684\u8def\u5f84\u6743\u503c\u5c3d\u53ef\u80fd\u7684\u5927\n\n\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u503c\u95ee\u9898\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u6765\u4e00\u4e2a\u611a\u8822\u7684$O(nlogn^3)$\u505a\u6cd5\uff0c\u90a3\u5c31\u662fdfsG\u7684\u6bcf\u4e00\u4e2a\u5b50\u6811\uff0c\u6bcf\u6b21d\u51fa\u4e00\u6761\u8def\u5f84\u6211\u4eec\u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u4e00\u4e0b\u533a\u95f4\u6700\u5927\u503c\u548c\u8fd9\u4e2a\u8def\u5f84\u5339\u914d\u4e00\u4e0b\uff0c\u7136\u540e\u5728dfs\u5b8c\u6574\u68f5\u5b50\u6811\u4e4b\u540e\u628a\u8fd9\u4e9bd\u51fa\u6765\u7684\u8def\u5f84\u5168\u90e8\u63d2\u5165\u5230\u7ebf\u6bb5\u6811\u5f53\u4e2d\u5c31\u884c\u4e86\n\n\u7136\u540e\u6211\u4eec\u70b9\u5206\u6cbb\u6bcf\u4e00\u5c42\u7684\u590d\u6742\u5ea6\u90fd\u662fO(nlogn)\u603b\u590d\u6742\u5ea6\u5c31\u662f$O(nlog^3)$\u4e86\n\n\u6709\u70b9\u8822\u554a\uff0c\u770b\u770b\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u780d\u6389\u4e00\u4e2alog\u5462?\n\n\u8fd9\u662f\u70b9\u5206\u6cbb\u4e2d\u7684\u53e6\u4e00\u4e2a\u5957\u8def\uff0c\u540d\u5b57\u53eb\u505a\u5355\u8c03\u961f\u5217\u6309\u79e9\u5408\u5e76\n\n### \u5355\u8c03\u961f\u5217\u6309\u79e9\u5408\u5e76\n\n\u521a\u624d\u7684\u505a\u6cd5\u4e4b\u6240\u4ee5\u591a\u4e86\u4e00\u4e2alog\u662f\u56e0\u4e3a\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u53bb\u67e5\u533a\u95f4\u6700\u5927\u503c\u4e86\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u6709\u6ca1\u6709\u4e00\u4e9b\u673a\u667a\u70b9\u7684\u65b9\u6cd5\n\n\u7b54\u6848\u662f\u6709\u7684\uff0c\u6211\u4eec\u73b0\u5728BFSG\u7684\u6bcf\u4e00\u4e2a\u5b50\u6811\uff0c\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u627e\u51fa\u6765\u7684\u8def\u5f84\u4f1a\u6709\u4e00\u4e2a\u76f8\u5f53\u4f18\u96c5\u7684\u6027\u8d28\uff0c\u5c31\u662f\u957f\u5ea6\u662f\u4e25\u683c\u9012\u589e\u7684\uff0c\u5047\u8bbe\u73b0\u5728\u7684\u8def\u5f84\u957f\u5ea6\u662fx\uff0c\u90a3\u4e48\u4e4b\u540e\u627e\u51fa\u6765\u7684\u8def\u5f84\u957f\u5ea6\u4e0d\u53ef\u80fd\u6bd4x\u5c0f\uff0c\u6362\u53e5\u8bdd\u8bf4\u5408\u6cd5\u7684\u5339\u914d\u8def\u5f84\u7684\u957f\u5ea6\u9700\u8981\u6ee1\u8db3\u7684\u533a\u95f4$[L-x,R-x]$\u53ea\u4f1a\u4e00\u76f4\u5411\u5de6\u79fb\u52a8\n\n\u8fd9\u597d\u50cf\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6ed1\u52a8\u7a97\u53e3\u53d6\u6700\u5927\u503c\u95ee\u9898\u554a\u2026\u2026\n\n\u6240\u4ee5\u6211\u4eec\u4f3c\u4e4e\u53ea\u9700\u8981\u4f7f\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u63d2\u5165\u8def\u5f84\u7684\u65f6\u5019\u5c06\u8def\u5f84\u63d2\u5165\u5230\u4e00\u4e2a\u6743\u503c\u6570\u7ec4\u91cc\u4f3c\u4e4e\u5c31\u53ef\u4ee5\u4e86\uff1f\n\n\u9057\u61be\u7684\u662f\u8fd9\u4e2a\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2)$\u4f1a\u88ab\u76f4\u63a5\u53c9\u6389\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u5355\u8c03\u961f\u5217\u7684\u590d\u6742\u5ea6\u4e0d\u662f\u5747\u644aO(1)\u7684\u561b\uff1f\n\n\u7684\u786e\u5355\u8c03\u961f\u5217\u5728\u91c7\u7528\u6ed1\u52a8\u7a97\u53e3\u6cd5\u5904\u7406\u533a\u95f4\u6700\u5c0f\u503c\u7684\u65f6\u5019\u7684\u786e\u4e0d\u4f1a\u4f7f\u590d\u6742\u5ea6\u53d8\u4e3a$O(n^2)$\n\n\u4e0d\u8fc7\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5728\u4f7f\u7528\u5355\u8c03\u961f\u5217\u89e3\u51b3\u6ed1\u52a8\u7a97\u53e3\u95ee\u9898\u65f6\uff0c\u5355\u8c03\u961f\u5217\u7684\u521d\u59cb\u8bdd\u4e5f\u662f\u8981\u8017\u8d39\u65f6\u95f4\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\u6211\u4eec\u53ef\u80fd\u9700\u8981\u628a$(L,R)$\u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u5168\u90e8\u5143\u7d20\u90fd\u585e\u5230\u5355\u8c03\u961f\u5217\u91cc\uff0c\u800c\u8fd9\u4e2a\u5355\u8c03\u961f\u5217\u7684\u521d\u59cb\u8bdd\u6211\u4eec\u5374\u9700\u8981\u505aO(\u70b9\u5ea6)\u6b21\n\n\u4e8e\u662f\u4e00\u4e2a\u626b\u628a\u5c31\u53ef\u4ee5\u8f7b\u677e\u53c9\u6389\u6211\u4eec\u7684\u7b97\u6cd5\u4e86\n\n\u90a3\u600e\u4e48\u529e\u5462?\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4ef6\u4e8b\u60c5\u662f\u6bcf\u6b21\u521d\u59cb\u5316\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4e0d\u521d\u59cb\u5316\u5230R\u800c\u662f\u4ec5\u4ec5\u521d\u59cb\u5316\u5230\u5f53\u524d\u6743\u503c\u6570\u7ec4\u4e2d\u6700\u957f\u7684\u8def\u5f84\uff0c\u4f3c\u4e4e\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u526a\u679d\n\n\u4e0d\u8fc7\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u626b\u628a\u5c31\u53ef\u4ee5\u63a5\u7740\u53c9\u6389\u8fd9\u4e2a\u7b97\u6cd5\n\n\u7136\u540e\u5c31\u662f\u8fd9\u4e2a\u505a\u6cd5\u4e3a\u4ec0\u4e48\u53eb\u5355\u8c03\u961f\u5217\u6309\u79e9\u5408\u5e76\u7684\u539f\u56e0\u4e86\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u7684\u6bcf\u4e00\u4e2a\u5b50\u6811\u6309\u7167siz(\u6216\u8005\u6700\u5927\u6df1\u5ea6)\u4e3a\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6b64\u65f6\u4f9d\u6b21bfs\u6bcf\u4e00\u4e2a\u5b50\u6811\u8fdb\u884c\u904d\u5386\u7684\u521d\u59cb\u5316\u590d\u6742\u5ea6\u5c31\u662f\u5bf9\u7684\u4e86\n\n\u539f\u7406\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff0c\u7531\u4e8e\u6bcf\u6b21\u521d\u59cb\u5316\u7684\u590d\u6742\u5ea6\u662f\u5728\u8fd9\u4e2a\u5b50\u6811\u4e4b\u524d\u51fa\u73b0\u7684\u8def\u5f84\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u7531\u4e8e\u6240\u6709\u5b50\u6811\u5df2\u7ecf\u6392\u597d\u5e8f\uff0c\u56e0\u6b64\u6700\u5927\u6df1\u5ea6\u5c31\u662f\u8fd9\u4e2a\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u90a3\u4e48\u521d\u59cb\u5316\u7684\u603b\u590d\u6742\u5ea6\u5c31\u662f$O(\\sum{mxdep})=O(\\sum{siz})=O(n)$\u7684\u4e86\n\n\u81f3\u6b64\u6211\u4eec\u6210\u529f\u5c06\u70b9\u5206\u6cbb\u7684\u590d\u6742\u5ea6\u964d\u81f3$O(nlogn)$\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5$O(nlog^2n)$\u7684\u590d\u6742\u5ea6\u6109\u5feb\u7684A\u6389\u672c\u9898\u4e86\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\u8bf7\u6ce8\u610f\u50a8\u5b58\u6bcf\u6b21\u70b9\u5206\u6cbb\u65f6\u7684\u4e2d\u5fc3\uff0c\u4e0d\u8981\u6bcf\u6b21\u4e8c\u5206\u7684\u65f6\u5019\u73b0\u573a\u8ba1\u7b97\uff0c\u4e0d\u7136\u4f1a\u70b8\uff0c\u53e6\u4e00\u70b9\u662f\u8fd9\u9053\u9898\u6570\u636e\u8fc7\u6c34\uff0c\u6240\u6709\u8fb9\u7684\u771f\u5b9e\u503c\u57df\u8303\u56f4\u662f$0-32767$(\u51fa\u9898\u4ebawindows\u9020\u6570\u636e)\u800c\u4e0d\u662f$0-10^9$\u6240\u4ee5\u5982\u679c\u83ab\u540dtle\u53ef\u4ee5\u51cf\u5c11\u4e8c\u5206\u4e0a\u754c\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#define VEI vector <ed> :: iterator \n#define BG v[u].begin()\n#define ED v[u].end()\nusing namespace std;const int N=1e5+10;int n;int L;int R;\nstruct data{int u;int f;int dis;int dep;};queue <data> q1,q2;\nstruct ed//\u5b58\u8fb9\u7684\u7ed3\u6784\u4f53 \n{\n\tint v;int val;int siz;int ori;\n\tfriend bool operator <(ed a,ed b){return a.siz<b.siz;}\n};vector <ed> v[N];int ng[N];int tim;int nsiz[N];\nint w[N];int nu[N];int siz[N];bool cut[N];int ans1;int ans2;\nstruct dq//\u53cc\u7aef\u961f\u5217 \n{\n\tint q[3*N];int hd;int tl;\n\tinline void clr(){hd=1;tl=0;} \t   inline bool emp(){return hd<=tl;}\n\tinline void ins(int j){while(hd<=tl&&w[j]>=w[q[tl]])tl--;q[++tl]=j;}\n\tinline void del(int k){while(hd<=tl&&q[hd]>k)hd++;}\n\tinline int qmx(){return q[hd];}\n}q;\ninline void clear(queue <data>& q){queue <data> emp;swap(q,emp);}\ninline int dfs1(int u,int f)//\u5904\u7406siz \n{siz[u]=1;for(VEI it=BG;it!=ED;++it)if(it->v!=f&&!cut[it->v])siz[u]+=dfs1(it->v,u);return siz[u];}\ninline int find(int u,int f,const int& tot)//\u5904\u7406\u91cd\u5fc3 \n{\n\tfor(VEI it=BG;it!=ED;++it)\n\t\tif(it->v!=f&&!cut[it->v]&&2*siz[it->v]>=tot)return find(it->v,u,tot);return u;\n}\ninline int dfs3(int u,int f)//\u5904\u7406\u6700\u5927\u6df1\u5ea6 \n{int mx=0;for(VEI it=BG;it!=ED;++it)if(it->v!=f&&!cut[it->v])mx=max(mx,dfs3(it->v,u));return mx+1;}\ninline bool bfs(data st,int mxsiz)//bfs \n{\n\tq.clr();clear(q1);clear(q2);int j=min(R,mxsiz);for(;j>=L;j--)q.ins(j);\n\tfor(q1.push(st);!q1.empty();)\n\t{\n\t\tdata nw=q1.front();q2.push(nw);q1.pop();if(nw.dep>R)continue;\n\t\tint dl=max(L-nw.dep,0);int dr=min(R-nw.dep,mxsiz);for(;j>=dl;j--)q.ins(j);q.del(dr);\n\t\tif(q.emp()){int p=q.qmx();if(nw.dis+w[p]>=0){ans1=nu[p];ans2=nw.u;return true;}}\n\t\tfor(VEI it=v[nw.u].begin();it!=v[nw.u].end();++it)\n\t\t\tif(it->v!=nw.f&&!cut[it->v])q1.push((data){it->v,nw.u,nw.dis+it->val,nw.dep+1});\n\t}\n\tfor(;!q2.empty();q2.pop()){data a=q2.front();if(w[a.dep]<a.dis)w[a.dep]=a.dis,nu[a.dep]=a.u;}\n\treturn false;\n}\ninline bool solve(int u)\n{\n\t++tim;int g;\n\tif(ng[tim]==-1)//\u5bf9\u70b9\u5206\u6cbb\u8fdb\u884c\u8bb0\u5fc6\u5316 \n\t{\n\t\tdfs1(u,0);g=find(u,0,siz[u]);cut[g]=true;ng[tim]=g;nsiz[tim]=siz[u];\n\t\tif(siz[u]==1)return false;\n\t\tfor(int i=1;i<=siz[u];i++)w[i]=-0x3f3f3f3f,nu[i]=0;\n\t\tfor(VEI it=v[g].begin();it!=v[g].end();++it)if(!cut[it->v])it->siz=dfs3(it->v,g);\n\t\tsort(v[g].begin(),v[g].end());w[0]=0;nu[0]=g;\n\t}\n\telse \n\t{\n\t\tg=ng[tim];cut[g]=true;if(nsiz[tim]==1)return false;\n\t\tfor(int i=1;i<=nsiz[tim];i++)w[i]=-0x3f3f3f3f,nu[i]=0;w[0]=0;nu[0]=g;\n\t}\n\tfor(VEI it=v[g].begin();it!=v[g].end();++it)//bfs\u5224\u65ad \n\t\tif(!cut[it->v])if(bfs((data){it->v,g,it->val,1},it->siz))return true;\n\tfor(VEI it=v[g].begin();it!=v[g].end();++it)if(!cut[it->v])if(solve(it->v))return true;\n\treturn false;\n}\ninline bool jud(int mid)\n{\n\ttim=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(VEI it=v[i].begin();it!=v[i].end();++it)it->val=(it->ori>=mid)?1:-1;\n\tfor(int i=1;i<=n;i++)cut[i]=false;\n\treturn solve(1);\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&L,&R);int l=0;int r=0;\n\tfor(int i=1;i<=n;i++)ng[i]=-1;\n\tfor(int i=1,u,V,va;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&V,&va);r=max(r,va);\n\t\tv[u].push_back((ed){V,0,0,va});v[V].push_back((ed){u,0,0,va});\n\t}//\u5927\u529b\u4e8c\u5206\u5c31\u884c\u4e86 \n\twhile(l!=r){int mid=(l+r+1)/2;if(jud(mid))l=mid;else r=mid-1;}\n\tjud(l);printf(\"%d %d\",ans1,ans2);return 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1537331831,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF150E \u3010Freezing with Style\u3011"
    },
    {
        "content": "### 2019-08-03 \u8865\u6863\n\n\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/CF150E.html](https://www.cnblogs.com/PinkRabbit/p/CF150E.html)\u3002\n\n\u636e\u8bf4\u8fd9\u4e2a\u50bb\u903c\u9898\u8fd8\u6709\u4e00\u4e2a $\\log$ \u7684\u505a\u6cd5\uff0c\u4f46\u662f\u6211\u8fd8\u4e0d\u4f1a\u3002\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$\uff08$2\\le n\\le 10^5$\uff09\u4e2a\u70b9\u7684\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\u3002\n\n\u5b9a\u4e49\u4e00\u6761\u8def\u5f84\u7684\u6743\u503c\u4e3a\u8def\u5f84\u7ecf\u8fc7\u7684\u8fb9\u7684\u8fb9\u6743\u7684\u4e2d\u4f4d\u6570\uff0c\u82e5\u7ecf\u8fc7\u5076\u6570\u6761\u8fb9\u5219\u53d6\u4e24\u4e2a\u4e2d\u4f4d\u6570\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\u3002\n\n\u6c42\u957f\u5ea6\u4ecb\u4e8e $l$ \u5230 $r$\uff08$1\\le l\\le r<n$\uff09\u4e4b\u95f4\u7684\u8def\u5f84\u7684\u6700\u5927\u6743\u503c\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u8def\u5f84\u7684\u4e24\u7aef\u70b9\u3002\n\n### \u9898\u89e3\uff1a\n\n\u770b\u5230\u4e2d\u4f4d\u6570\u7684\u5b9a\u4e49\uff0c\u9996\u5148\u60f3\u5230\u4e8c\u5206\u7b54\u6848\uff0c\u5047\u8bbe\u4e8c\u5206\u7684\u503c\u4e3a $\\mathrm{mid}$\uff0c\u5c06\u8fb9\u6743 $\\ge\\mathrm{mid}$ \u7684\u8fb9\u770b\u4f5c $+1$\uff0c\u5c06\u8fb9\u6743 $<\\mathrm{mid}$ \u7684\u8fb9\u770b\u4f5c $-1$\uff0c\u5219\u4e00\u6761\u8def\u5f84\u7684\u6743\u503c\u5927\u4e8e\u7b49\u4e8e $\\mathrm{mid}$ \u5f53\u4e14\u4ec5\u5f53\u5176\u7ecf\u8fc7\u7684\u8fb9\u7684\u548c\u5927\u4e8e\u7b49\u4e8e $0$\u3002\n\n\u4e8c\u5206\u4e86\u4e00\u4e2a\u503c\u540e\uff0c\u8003\u8651\u4f7f\u7528\u70b9\u5206\u6cbb\u7edf\u8ba1\u8def\u5f84\u3002\n\n\u5408\u5e76\u5b50\u6811\u65f6\u76f8\u5f53\u4e8e\u67e5\u8be2\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\u5185\u7684\u6700\u5927\u503c\uff0c\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5373\u53ef\u3002  \n\u5bf9\u5f53\u524d\u5206\u6cbb\u5757\u5185\u7edf\u8ba1\u65f6\u8981\u6ce8\u610f\u9700\u8981\u5148\u5904\u7406\u8f83\u5c0f\u7684\u5b50\u6811\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log^2 n)$\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\nconst int Inf = 0x3f3f3f3f;\nconst int MN = 100005;\n\nint N, L, R, Ans = -1, AnsU, AnsV;\nint uv[MN], w[MN];\nstd::vector<int> G[MN];\nint dw[MN], M;\n\nint vis[MN], siz[MN], tsiz, rsiz, Root;\nvoid GetRoot(int u, int fz) {\n\tsiz[u] = 1;\n\tint nsiz = 0;\n\tfor (auto i : G[u]) {\n\t\tint v = uv[i] ^ u;\n\t\tif (v == fz || vis[v]) continue;\n\t\tGetRoot(v, u), siz[u] += siz[v];\n\t\tif (nsiz < siz[v]) nsiz = siz[v];\n\t}\n\tif (nsiz < tsiz - siz[u]) nsiz = tsiz - siz[u];\n\tif (rsiz > nsiz) rsiz = nsiz, Root = u;\n}\nint stk[MN], tp, _U;\ninline bool cmp(int i, int j) {\n\treturn siz[uv[i] ^ _U] < siz[uv[j] ^ _U];\n}\nint seq[MN], sequ[MN], odep, tmp[MN], tmpu[MN], ndep;\nvoid DFS(int u, int fz, int d, int x, int y) {\n\tif (tmp[d] < x) tmp[d] = x, tmpu[d] = u;\n\tif (ndep < d) ndep = d;\n\tfor (auto i : G[u]) {\n\t\tint v = uv[i] ^ u;\n\t\tif (v == fz || vis[v]) continue;\n\t\tDFS(v, u, d + 1, x + (w[i] >= y ? 1 : -1), y);\n\t}\n}\nint ucal, vcal;\nbool Calc(int u, int x) {\n\tstatic int que[MN];\n\tseq[odep = 0] = 0, sequ[0] = u;\n\tfor (int i = 1; i <= tp; ++i) {\n\t\tint v = uv[stk[i]] ^ u;\n\t\tfor (int j = 1; j <= siz[v]; ++j) tmp[j] = -Inf;\n\t\tndep = 0, DFS(v, u, 1, w[stk[i]] >= x ? 1 : -1, x);\n\t\tint l = 1, r = 0, lb = odep, rb = odep + 1;\n\t\tfor (int j = 1; j <= ndep; ++j) {\n\t\t\twhile (rb > 0 && rb > L - j) {\n\t\t\t\t--rb;\n\t\t\t\twhile (l <= r && seq[que[r]] < seq[rb]) --r;\n\t\t\t\tque[++r] = rb;\n\t\t\t}\n\t\t\twhile (lb >= 0 && lb > R - j) {\n\t\t\t\t--lb;\n\t\t\t\twhile (l <= r && que[l] > lb) ++l;\n\t\t\t}\n\t\t\tif (l <= r && seq[que[l]] + tmp[j] >= 0) {\n\t\t\t\tucal = sequ[que[l]], vcal = tmpu[j];\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\twhile (odep < ndep) seq[++odep] = -Inf;\n\t\tfor (int j = 1; j <= ndep; ++j)\n\t\t\tif (seq[j] < tmp[j])\n\t\t\t\tseq[j] = tmp[j], sequ[j] = tmpu[j];\n\t}\n\treturn 0;\n}\nvoid Solve(int u) {\n\tint nsiz = tsiz;\n\ttp = 0;\n\tfor (auto i : G[u]) {\n\t\tint v = uv[i] ^ u;\n\t\tif (vis[v]) continue;\n\t\tsiz[v] = siz[v] > siz[u] ? nsiz - siz[u] : siz[v];\n\t\tstk[++tp] = i;\n\t}\n\t_U = u, std::sort(stk + 1, stk + tp + 1, cmp);\n\tint lb = 1, rb = M, mid, ans = 0, ansu = 0, ansv = 0;\n\twhile (lb <= rb) {\n\t\tmid = (lb + rb) >> 1;\n\t\tif (Calc(u, dw[mid])) {\n\t\t\tans = mid;\n\t\t\tansu = ucal, ansv = vcal;\n\t\t\tlb = mid + 1;\n\t\t}\n\t\telse rb = mid - 1;\n\t}\n\tif (Ans < dw[ans]) {\n\t\tAns = dw[ans];\n\t\tAnsU = ansu, AnsV = ansv;\n\t}\n\tvis[u] = 1;\n\tfor (auto i : G[u]) {\n\t\tint v = uv[i] ^ u;\n\t\tif (vis[v]) continue;\n\t\trsiz = tsiz = siz[v], GetRoot(v, 0), Solve(Root);\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d\", &N, &L, &R);\n\tfor (int i = 1; i < N; ++i) {\n\t\tint x, y;\n\t\tscanf(\"%d%d%d\", &x, &y, &w[i]);\n\t\tuv[i] = x ^ y;\n\t\tG[x].push_back(i);\n\t\tG[y].push_back(i);\n\t\tdw[i] = w[i];\n\t}\n\tstd::sort(dw + 1, dw + N);\n\tM = std::unique(dw + 1, dw + N) - dw - 1;\n\trsiz = tsiz = N, GetRoot(1, 0), Solve(Root);\n\tprintf(\"%d %d\\n\", AnsU, AnsV);\n\treturn 0;\n}\n```",
        "postTime": 1589313631,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF150E \u3010Freezing with Style\u3011"
    },
    {
        "content": "\uff08\u5047\u4e86\u9a82\u6211\u54c8\u54c8\uff09\n\n\u542c\u95fb\u6709 1log \u505a\u6cd5\uff0c\u5927\u53d7\u9707\u64bc\u3002\n\n\u60f3\u4e86\u4e00\u4e0b\u53d1\u73b0\u597d\u50cf\u53ef\u884c\u3002\n\n\u4e8c\u5206\u7b54\u6848 $O(n)$ \u540e\u6c42\u6811\u4e0a\u94fe\u957f\u5728 $[l,r]$ \u5185\u7684\u94fe\u7684\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u8003\u8651\u957f\u94fe\u5256\u5206\u3002\u6bcf\u6b21\u4ece\u4e0b\u5f80\u4e0a\u626b\u4e00\u6761\u957f\u94fe\uff0c\u6bcf\u6b21\u628a\u77ed\u94fe\u6c42\u7b54\u6848\u4e4b\u540e\u5408\u5e76\u4e0a\u6765\u3002\n\n\u90a3\u4e48\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\uff1a\n\n* \u5168\u5c40\u52a0\n* \u5b9a\u957f\u533a\u95f4\u6700\u5927\u503c\n* \u5f80\u524d\u6bb5\u52a0\u4e00\u4e2a\u6570\n* \u5c06\u524d\u7f00\u7684\u82e5\u5e72\u4e2a\u6570\u53d8\u5927\uff0c\u201c\u82e5\u5e72\u4e2a\u6570\u201d\u6570\u91cf\u603b\u548c $O(n)$\n\n\u663e\u7136\u5168\u5c40\u52a0\u6ca1\u7528\u3002\u5b9a\u957f\u533a\u95f4\u6700\u5927\u503c\u5c31\u76f4\u63a5\u6309\u5b9a\u957f\u5206\u5757\uff0c\u6bcf\u6b21\u67e5\u8be2\u5206\u6210\u5757\u7684\u524d\u7f00\u548c\u540e\u7f00\u3002\u524d\u9762\u5728\u66f4\u65b0\u7684\u975e\u6574\u5757\u663e\u7136\u5e73\u51e1\u3002\u6bcf\u6b21\u5c06\u524d\u7f00\u7684\u82e5\u5e72\u4e2a\u6570\u53d8\u5927\u53ef\u4ee5\u8bf4\u662f\u5bf9\u67d0\u4e2a\u5757\u7684\u524d\u7f00\u64cd\u4f5c\u3002\n\n\u53d1\u73b0\u5bf9\u6bcf\u4e2a\u5757\u7684\u540e\u7f00\u7ef4\u62a4\u4e5f\u5e73\u51e1\u3002\u5b9e\u9645\u4e0a\u53ea\u5269\u4e0b\uff1a\n\n* \u5c06\u524d\u7f00\u7684\u82e5\u5e72\u4e2a\u6570\u53d8\u5927\n* \u6c42\u524d\u7f00\u6700\u5927\u503c\n\n\u6309 $\\log n$ \u5206\u5757\u3002\u5bf9 $2\\sim k$ \u5757\u7ef4\u62a4 ST \u8868\u3002\u90a3\u4e48\u5bf9 $2\\sim k$ \u5757\u7684\u7ef4\u62a4\u76f4\u63a5\u91cd\u6784\u3001\u5728 ST \u8868\u4e0a $O(\\log n)$ \u4fee\u6539\u5747\u644a\u590d\u6742\u5ea6\u663e\u7136\u662f\u5bf9\u7684\u3002\n\n\u8003\u8651\u7b2c\u4e00\u5757\uff0c\u7ef4\u62a4\u6240\u6709\u524d\u7f00\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u3002\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\u52a0\u5165\u4e00\u4e9b\u524d\u7f00\u6700\u5927\u503c\uff0c\u5220\u6389\u4e00\u4e9b\u503c\uff0c\u5747\u644a\u590d\u6742\u5ea6\u5bf9\u7684\u3002\u7136\u540e\u7528\u4e00\u4e2a word \u7ef4\u62a4\u6240\u6709\u524d\u7f00\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u67e5\u8be2\u6c42\u51fa\u8fd9\u4e2a\u524d\u7f00\u6700\u540e\u4e00\u4e2a\u524d\u7f00\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002",
        "postTime": 1665496051,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF150E Freezing with Style"
    },
    {
        "content": "\u6765\u4e00\u7bc7\u4ee3\u7801\u597d\u770b\u4e00\u70b9\u7684\u3002\n\n\u9996\u5148\uff0c\u505a\u8fd9\u4e2a\u9898\u76ee\u9700\u8981\u5b66\u4f1a\u4e00\u4e2a\u4e1c\u897f\uff1a**\u70b9\u5206\u6cbb**\n\n\u70b9\u5206\u6cbb\u8fd9\u91cc\u4e0d\u591a\u8bb2\uff0c\u53ea\u8bf4\u4e00\u4e0b\u5927\u6982\u6b65\u9aa4\uff1a\n\n1. \u5728\u4e00\u68f5\u65e0\u6839\u6811\u4e2d\u9009\u51fa\u4e00\u4e2a\u70b9 $p$ \u4f5c\u4e3a\u6811\u6839 \n\n2. \u770b\u770b\u6709\u6ca1\u6709\u7ecf\u8fc7 $p$ \u7684\u5408\u6cd5\u8def\u5f84\n\n3. \u5c06 $p$ \u5220\u9664\n\n4. \u5bf9 $p$ \u7684\u6bcf\u68f5\u5b50\u6811\u9012\u5f52\u6267\u884c 1~3 \u6b65\n\n\u7ec6\u8282\u8bf7\u53bb\u6a21\u677f\u9898\uff0c\u5305\u6559\u5305\u4f1a\u3002\n\n\u5982\u679c\u7b2c\u4e8c\u6b65\u7684\u590d\u6742\u5ea6\u662f $O(siz)$ (\u6b64\u5904\u53ca\u4ee5\u540e\u7684$siz$ \u90fd\u6307\u65e0\u6839\u6811\u5927\u5c0f)\uff0c\u90a3\u4e48\u5355\u6b21\u70b9\u5206\u6cbb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\n\n**\u6b63\u9898**\n\n\u9047\u5230\u4e2d\u4f4d\u6570\uff0c\u611f\u89c9\u76f4\u63a5\u7edf\u8ba1\u4e0d\u597d\u7b97\uff0c\u60f3\u5230\u4e8c\u5206\u7b54\u6848\n\n\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u4e2d\u4f4d\u6570\u662f\u5f80\u5927\u4e86\u53d6\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e8c\u5206\u7b54\u6848$mid$\uff0c\u5c06$\\ge mid$ \u7684\u8fb9\u7684\u6743\u8bbe\u4e3a $1$ \uff0c\u5426\u5219\u8bbe\u4e3a $-1$,\u5224\u65ad\u6811\u4e0a\u6709\u6ca1\u6709\u4e00\u6761\u5927\u4e8e\u7b49\u4e8e $0$ \u7684\u8def\u5f84\u5373\u53ef\u3002\n\n\u8fd9\u786e\u5b9e\u662f\u53ef\u4ee5\u7528\u70b9\u5206\u6cbb\u89e3\u51b3\u7684\uff0c\u770b\u8fd9\u4e2a\u5224\u65ad\u6761\u4ef6\u3002\n\n\u6211\u4eec\u4e3b\u8981\u770b\u770b\u7b2c\u4e8c\u6b65\u600e\u4e48\u529e\u3002\n\n\u521a\u5f00\u59cb\u770b\u5230\u65f6\uff0c\u6211\u662f\u60f3\u5230\u4e86 CF293E \u7684\u601d\u8def\uff0c\u5bf9\u5230\u6839\u7ed3\u70b9 $p$ \u6df1\u5ea6 $dep$ \u5efa\u7acb\u6811\u72b6\u6570\u7ec4\uff0c\u7136\u540e\u5c06\u6839\u7ed3\u70b9 $p$ \u7684\u6240\u6709\u540e\u4ee3\u6309\u7167\u5230\u6839\u7684\u8fb9\u6743\u548c $dis$ \u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u626b\u63cf\u7edf\u8ba1\uff0c\u770b\u6700\u540e\u8def\u5f84\u6761\u6570\u662f\u5426\u5927\u4e8e0\n\n\n\u4f46\u662f \u8fd9\u4e00\u6b65\u590d\u6742\u5ea6\u662f $O(siz\\log siz)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2 n \\log w)$ ($w$ \u4e3a\u503c\u57df\u5927\u5c0f) \uff0c\u8fc7\u4e0d\u4e86\n\n\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u780d\u6389\u4e00\u4e2a $log$\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u6df1\u5ea6\u76f8\u540c\u7684\u94fe\uff0c\u6211\u4eec\u53ea\u4fdd\u7559\u8fb9\u6743\u548c\u6700\u5927\u7684\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5f00\u4e24\u4e2a\u6570\u7ec4 $f,g$ ,\u5904\u7406\u5230\u4e00\u4e2a\u5b50\u6811\u65f6\uff0c\u4ee4 $f[i]$ \u4e3a **\u4e4b\u524d\u7684\u6240\u6709\u5b50\u6811**\u4e2d\u6df1\u5ea6\u4e3a $i$ \u7684\u94fe\u7684\u8fb9\u6743\u548c\u6700\u5927\u503c\uff0c $g[i]$ \u4e3a**\u5f53\u524d\u5b50\u6811**\u4e2d\u6df1\u5ea6\u4e3a $i$ \u7684\u94fe\u7684\u8fb9\u6743\u548c\u6700\u5927\u503c\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811\uff0c\u6211\u4eec\u8981\u5224\u65ad\u7684\u4e1c\u897f\u5c31\u662f\n$$\\max\\{f[i]+g[j]|L\\le i+j \\le U\\}\\ge 0$$\n\n\u662f\u5426\u6210\u7acb\n\n\u6ce8\u610f\u5230\uff0c\u968f\u7740 $j$ \u7684\u9012\u51cf\uff0c\u6211\u4eec$f[i]$ \u7684\u53ef\u9009\u533a\u95f4 $[L-j,U-j]$ \u662f\u5728\u4ee5\u56fa\u5b9a\u901f\u5ea6\u5411\u53f3\u6ed1\u52a8\u7684\u3002\n\n\u8fd9\u5c31\u50cf\u6ed1\u52a8\u7a97\u53e3\u4e86\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6765\u505a\u3002\n\n\n\u4f46\u662f\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5355\u8c03\u961f\u5217\u8981\u5904\u7406\u7684\u503c\u57df\u53ef\u4ee5\u8fbe\u5230 $[1,n-1]$ \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811\u90fd\u8fd9\u4e48\u5e72\uff0c\u663e\u7136\u662f\u8fc7\u4e0d\u4e86\u7684\n\n\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u5355\u8c03\u961f\u5217\u8981\u7ef4\u62a4\u8fd9\u4e48\u591a\u6570\u636e\uff1f\u6709\u4e9b\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\u660e\u660e\u6ca1\u6709\u8fd9\u4e48\u5927\uff0c\u6709\u5f88\u591a\u4fe1\u606f\u663e\u7136\u662f\u65e0\u7528\u7684\u3002\n\n\u8bbe\u5f53\u524d\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\u4e3a $mxd$ \uff0c\u524d\u9762\u6240\u6709\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\u4e3a $pre$\n\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ea\u8981\u7edf\u8ba1\u5728 $[1,pre]$ \u4e4b\u95f4\u7684\u4fe1\u606f\u3002\n\n\u5982\u679c $pre\\le mxd$ \u7684\u8bdd\uff0c\u6211\u4eec\u5bf9\u4e8e\u5355\u4e2a\u5b50\u6811\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(mxd)$ \u4e86\uff0c\u4e0d\u662f\u5417?\n\n\u7531\u4e8e\u5b50\u6811\u4e4b\u95f4\u7684\u987a\u5e8f\u662f\u53ef\u4ee5\u4ea4\u6362\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5c06\u6240\u6709\u5b50\u6811\u6309\u6700\u5927\u6df1\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u8fdb\u884c\u7edf\u8ba1\u3002\n\n\n\u8fd9\u6837\u5bf9\u4e8e\u4e00\u6b21\u70b9\u5206\u6cbb\uff0c\u590d\u6742\u5ea6\u4ece $O(siz \\log siz)$ \u964d\u4e3a $O(siz)$ \uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log n \\log w)$\n\n\n\u6709\u5fc5\u8981\u6307\u51fa\u7684\u662f\uff0c\u7531\u4e8e\u65b0\u52a0\u4e86\u4e2a\u6392\u5e8f\u64cd\u4f5c\uff0c\u6240\u4ee5\u5bf9\u5176\u590d\u6742\u5ea6\u5355\u72ec\u5206\u6790\u4e00\u4e0b\uff1a\n\n\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u5206\u6cbb\u4e2d\u7684\u6839\u7ed3\u70b9\uff0c\u4ed6\u6709 $p$ \u4e2a\u5b50\u6811\uff0c\u5219\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u4e3a $O(p\\log p)$\n\n\u800c\u8fd9 $p$ \u4e2a\u5b50\u6811\u5bf9\u5e94\u7740 \u8fde\u5411\u6839\u7ed3\u70b9\u7684 $p$ \u6761\u8fb9\n\n\u7531\u4e8e\u603b\u5171\u53ea\u6709 $n-1$ \u6761\u8fb9\uff0c\u6240\u4ee5\u5b50\u6811\u603b\u4e2a\u6570\u5e94\u8be5\u662f\u4e0e $n$ \u540c\u9636\u7684\u3002\n\n\u6240\u4ee5\u6392\u5e8f\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n \\log w)$\n\n\n\u4e24\u76f8\u5408\u5e76\uff0c\u6574\u4e2a\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n \\log w)$\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nvoid read(T &a)\n{\n \tchar ch;int sign=1;\n \tfor(ch=getchar();!isdigit(ch);ch=getchar())\n \tif(ch=='-') sign=-1;\n \ta=ch&15;\n \tfor(ch=getchar();isdigit(ch);ch=getchar())\n \ta=(a<<3)+(a<<1)+(ch&15);\n \ta*=sign;\n}\ntemplate<typename T>inline bool ckmax(T &x,const T &y) {    if(x<y) return x=y,true;return false;}\nconst int N=1e5+5,M=2e5+5;\nint fir[N],nxt[M],to[M],w[M],ect=0;\ninline void addedge(int u1,int v1,int w1)\n{\n\tnxt[++ect]=fir[u1];fir[u1]=ect;to[ect]=v1;w[ect]=w1;\n}\nint n,L,U;\nint f[N],g[N];\n#define wei(z) (z>=val?1:-1)\nint que[N];\nint head,tail;\nint dis[N],dep[N],maxd[N];\nbool sgn[N];\nint sz[N],maxx,pos;\n#define Edge(x) for(int i=fir[x],y,z;y=to[i],z=w[i],i;i=nxt[i])\ninline void getroot(int x,int S,int fa)\n{\n\tsz[x]=1;\n\tint res(0);\n\tEdge(x)\n\t{\n\t\tif(y==fa||sgn[y]) continue;\n\t\tgetroot(y,S,x);\n\t\tsz[x]+=sz[y];\n\t\tres=max(res,sz[y]);\n\t}\n\tres=max(res,S-sz[x]);\n\tif(res<maxx) maxx=res,pos=x;\n}\nint pf[N],pg[N];\ninline void dfs(int st,int p,int dep1,int len1,int val,int fa,int rt)\n{\n\tckmax(maxd[st],dep[p]=dep1);\n\tif((dis[p]=len1)>g[dep[p]])\n\t{\n\t\tg[dep[p]]=dis[p],pg[dep[p]]=p;\n\t//\tif(rt==15) printf(\"points:%d,%d,%d,%d\\n\",st,p,dep[p],dis[p]);\n\t}\n\t\n\tEdge(p)\n\t{\n\t\tif(y==fa||sgn[y]) continue;\n\t\tdfs(st,y,dep1+1,len1+wei(z),val,p,rt);\n\t}\n}\nint srt[N],weight[N],ans1,ans2;\ninline bool cmp(int x,int y) { return maxd[x]<maxd[y];}\ninline bool calc(int x,int val)\n{\n\tint total=0,maxdepp=0;\n\tEdge(x) if(!sgn[y]) srt[++total]=y,maxd[y]=0,weight[y]=z;\n\tEdge(x) if(!sgn[y]) dfs(y,y,1,wei(z),val,x,x),ckmax(maxdepp,maxd[y]);\n\tsort(srt+1,srt+total+1,cmp);\n\tfor(int i=0;i<=maxdepp;++i) g[i]=f[i]=-1e9,pf[i]=pg[i]=0;\n//\tif(x==15)\n//\t{\n//\t\tprintf(\"maxdepp=%d\\n\",maxdepp);\n//\t\tfor(int i=1;i<=total;i++) printf(\"srt[%d]=%d\\n\",i,srt[i]);\n//\t}\n\tf[0]=0;pf[0]=x;\n\tfor(int i=1;i<=total;++i)\n\t{\n\t\tint y=srt[i],z=weight[y];\n\t\tif(sgn[y]) continue;\n\t\tmaxd[y]=0;\n\t\tdfs(y,y,1,wei(z),val,x,x);\n\t\n\t\tint now=0;head=tail=1;\n\t\tfor(int j=min(U,maxd[y]);j>=0;j--)\n\t\t{\n\t\t\twhile(now<=maxd[srt[i-1]]&&now+j<=U)\n\t\t\t{\n\t\t\t\twhile(head<tail&&f[que[tail-1]]<f[now]) tail--;\n\t\t\t\tque[tail++]=now;now++;\n\t\t\t\n\t\t\t}\n\t\t\twhile(head<tail&&que[head]+j<L) head++;\n\t\t\tif(head<tail&&que[head]+j<=U&&f[que[head]]+g[j]>=0) return (ans1=pf[que[head]],ans2=pg[j]),true;\n\t\t}\n\t\tfor(int j=0;j<=maxd[y];j++)\n\t\t{\n\t\t\tif(g[j]>f[j])\n\t\t\tpf[j]=pg[j],f[j]=g[j];\n\t\t\tg[j]=-1e9;pg[j]=0;\n\t\t}\n\t}\n\treturn false;\n}\nint ans,minedge=1e9,maxedge;\ninline bool Divide(int root,int val)\n{\n//\tprintf(\"root=%d\\n\",root);\n\tif(calc(root,val)) return true;\n\tsgn[root]=1;\n\tEdge(root)\n\t{\n\t\tif(sgn[y]) continue;\n\t\tmaxx=INT_MAX;pos=0;\n\t\tgetroot(y,sz[y],0);\n\t\tif(Divide(pos,val)) return true;\n\t}\n\treturn false;\n}\ninline bool Judge(int val)\n{\n\tfor(int i=1;i<=n;i++) sgn[i]=0;\n\tans1=ans2=0;\n\tmaxx=INT_MAX;pos=0;\n\tgetroot(1,n,0);\n\treturn Divide(pos,val);\n}\nint main()\n{\n//\tfreopen(\"test.in\",\"r\",stdin);\n\tscanf(\"%d%d%d\",&n,&L,&U);\n\tfor(int i=1,u,v,w;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\taddedge(u,v,w);addedge(v,u,w);\n\t\tminedge=min(minedge,w);\n\t\tmaxedge=max(maxedge,w);\n\t}\n\tint lef=minedge,righ=maxedge,mid,ans=lef;\n\twhile(lef<=righ)\n\t{\n\t\tmid=lef+righ>>1;\n\t\tif(Judge(mid)) ans=mid,lef=mid+1;\n\t\telse righ=mid-1;\n\t}\n\tJudge(ans);\n\tprintf(\"%d %d\\n\",ans1,ans2);\n//\tcout<<Judge(832);\n}\n\n```\n\n\n\u540e\u671f\u5c06\u4f1a\u5411\u4ee3\u7801\u4e2d\u6dfb\u52a0\u66f4\u5b8c\u5907\u7684\u6ce8\u91ca\uff0c\u73b0\u5728\u5148\u5495\u7740.\n",
        "postTime": 1609582888,
        "uid": 226435,
        "name": "\u5929\u547d\u4e4b\u8def",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF150E \u3010Freezing with Style\u3011"
    },
    {
        "content": "> \u8fd9\u662f\u4e00\u4efd**\u6709\u4ee3\u7801**\u7684\u5355 log \u505a\u6cd5\u3002\n\n\u4e8c\u5206\u7b54\u6848 $x$\uff0c\u628a\u8fb9\u6743\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u8fb9\u7684\u8fb9\u6743\u89c6\u4e3a $+1$\uff0c\u5176\u4f59\u89c6\u4e3a $-1$\u3002\u7136\u540e\u8003\u8651\u957f\u5256\uff0c\u56e0\u4e3a\u5904\u7406\u62d0\u70b9\u4e3a $i$ \u7684\u8def\u5f84\u65f6\uff0c$i$ \u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\u540c\u6837\u6df1\u5ea6\u7684\u94fe\u80af\u5b9a\u548c\u8d8a\u5927\u8d8a\u597d\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u679a\u4e3e\u6bcf\u6761\u77ed\u94fe\u7684\u6df1\u5ea6 $i$\uff0c\u7136\u540e\u53bb\u770b\u770b\u4f20\u4e0a\u6765\u7684\u957f\u94fe\u91cc\u6df1\u5ea6\u4ecb\u4e8e $[l-i,r-i]$ \u7684\u70b9\u7684\u6743\u503c\u6700\u5927\u662f\u591a\u5c11\uff0c\u5982\u679c\u52a0\u8d77\u6765\u5927\u4e8e\u7b49\u4e8e $0$ \u5c31\u80fd\u5224\u5b9a\u53ef\u884c\u3002\u5728\u679a\u4e3e\u5b8c\u4e4b\u540e\u8fd8\u9700\u8981\u628a\u5f53\u524d\u77ed\u94fe\u7684\u4fe1\u606f\u4e0e\u957f\u94fe\u5408\u5e76\uff0c\u5373\u53d6\u6700\u5927\u503c\u3002\u5982\u679c\u5077\u61d2\u5199\u68f5\u7ebf\u6bb5\u6811\u80af\u5b9a\u80fd\u505a\uff0c\u4e0d\u8fc7\u8fd9\u6837\u4f1a\u591a\u4e00\u4e2a log\u3002\u4ed4\u7ec6\u8003\u91cf\u6211\u4eec\u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\uff1a\n\n* \u524d\u7aef\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u662f\u957f\u5256\u8981\u6c42\u652f\u6301\u7684\u3002\n\n* \u5b9a\u957f\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\uff0c\u5b9a\u957f\u533a\u95f4\u53ef\u80fd\u9000\u5316\u4e3a\u524d\u7f00\u6216\u540e\u7f00\u3002\u8fd9\u662f\u5224\u5b9a\u8981\u6c42\u652f\u6301\u7684\u3002\n* \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u6570\u7ec4 $a$\uff0c\u4ee4\u7b2c $i$ \u4e2a\u5143\u7d20\u7684\u503c\u4e0e $a_i$ \u53d6 $\\max$\u3002$\\sum m\\le n$\u3002\u8fd9\u662f\u5408\u5e76\u5b50\u6811\u8981\u6c42\u652f\u6301\u7684\u3002\n\n\u5b9a\u957f\u533a\u95f4\u662f\u4e00\u4e2a\u7a81\u7834\u53e3\uff0c\u8003\u8651**\u6309\u5b9a\u957f\u5206\u5757**\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u6bcf\u5757\u5757\u5185\u7684\u524d\u7f00\u6700\u5927\u503c\u548c\u540e\u7f00\u6700\u5927\u503c\u5c31\u80fd\u62fc\u51fa\u4efb\u610f\u4e00\u4e2a\u5b9a\u957f\u533a\u95f4\uff08\u5305\u62ec\u9000\u5316\u4e3a\u524d\u540e\u7f00\u65f6\u7684\u60c5\u51b5\uff09\u3002\u6211\u4eec\u6682\u65f6\u4e0d\u7ba1\u524d\u7aef\u63d2\u5165\uff0c\u5148\u770b\u770b\u5757\u5185\u7ed3\u6784\u5177\u4f53\u957f\u5565\u6837\u3002\n\n\u8003\u8651\u524d\u7f00\u4fee\u6539\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7684\u4fe1\u606f\u7684\u5f71\u54cd\uff0c\u540e\u7f00\u6700\u5927\u503c\u53ef\u4ee5\u76f4\u63a5 $O(m)$ \u66b4\u529b\u4fee\u6539\u3002\u524d\u7f00\u6700\u5927\u503c\u5462\uff1f\u5bf9\u4e8e\u8986\u76d6\u5230\u7684\u6574\u5757\u76f4\u63a5\u91cd\u6784\uff0c\u95ee\u9898\u53ea\u5269\u4e0b\u5904\u7406\u63a2\u51fa\u6765\u7684\u90a3\u4e00\u6bb5\u96f6\u6563\u70b9\u3002\u5148\u628a\u5bf9\u5e94\u5757\u5355\u62ce\u51fa\u6765\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u5199\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\uff1a\u524d\u7f00\u5bf9 $a$ \u53d6 $\\max$\uff0c\u67e5\u8be2\u524d\u7f00\u6700\u5c0f\u503c\u3002\u8fd9\u4e2a\u5c31\u5e95\u5c42 $\\log(r-l+1)$ \u5206\u5757\uff0c\u5757\u95f4\u7ef4\u62a4 st \u8868\u3002\u4fee\u6539\u524d\u7f00 $[1,m]$ \u65f6\uff0c\u5bf9\u4e8e\u8986\u76d6\u5230\u7684\u6574\u5757\uff0c\u76f4\u63a5\u91cd\u6784\u4ee5\u8fd9\u4e2a\u5757\u4e3a\u8d77\u70b9\u7684 st \u8868\uff0c\u590d\u6742\u5ea6\u662f $O(\\lfloor{\\frac{m}{\\log(r-l+1)}\\rfloor\\log (r-l+1)})=O(m)$\u3002\u5728\u91cd\u6784\u6574\u5757\u5bf9\u5e94 st \u8868\u4e4b\u524d\u5148\u8981\u66f4\u65b0\u96f6\u6563\u70b9\uff0c\u8003\u8651\u5bf9\u6bcf\u4e2a\u5c0f\u5757\u7ef4\u62a4\u4e00\u4e2a**\u538b\u4f4d\u5355\u8c03\u6808**\uff0c\u5373\u72b6\u538b\u6240\u6709\u524d\u7f00\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u3002\u67d0\u4e2a\u4f4d\u7f6e\u53d8\u5927\u65f6\uff0c\u5148\u770b\u770b\u5b83\u81ea\u5df1\u662f\u4e0d\u662f\u524d\u7f00\u6700\u5927\u503c\uff0c\u7136\u540e\u628a\u5b83\u540e\u9762\u7684\u67d0\u4e9b\u524d\u7f00\u6700\u5927\u503c\u5f39\u6389\u3002\u6bcf\u4fee\u6539\u4e00\u4e2a\u4f4d\u7f6e\u6700\u591a\u4f7f\u5355\u8c03\u6808\u7684\u5927\u5c0f $+1$\uff0c\u90a3\u4e48\u5220\u9664\u7684\u603b\u590d\u6742\u5ea6\u5747\u644a $O(1)$\u3002\u67e5\u8be2\u5757\u5185\u524d\u7f00\u6700\u5927\u503c\u53ea\u9700\u8981\u501f\u52a9\u4f4d\u8fd0\u7b97\u5b9a\u4f4d\u5230\u6700\u9760\u53f3\u7684\u524d\u7f00\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u3002\n\n\u56de\u5934\u770b\u770b\u524d\u7aef\u63d2\u5165\uff1a\u5916\u5c42\u5206\u5757\u548c\u5e95\u5c42\u5206\u5757\u6539\u4e3a\u4ece\u53f3\u5f80\u5de6\uff0c\u9884\u7559\u51fa\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684\u5757\u653e\u5728\u9996\u4f4d\uff0c\u7528\u4e8e\u63a5\u6536\u524d\u7aef\u63d2\u5165\u7684\u5143\u7d20\u3002\u5bf9\u4e8e\u5927\u5757\u5185\u7684\u524d\u4e24\u4e2a\u5c0f\u5757\uff0c\u4e0d\u7ef4\u62a4 st \u8868\uff0c\u67e5\u8be2\u548c\u4fee\u6539\u65f6\u7279\u6b8a\u5904\u7406\uff0c\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1\u91cd\u6784 st \u8868\u7684\u590d\u6742\u5ea6\u80fd\u644a\u5230 $m$ \u91cc\u3002\u5982\u679c\u968f\u7740\u8fd9\u6b21\u524d\u7aef\u63d2\u5165\u8fd9\u4e00\u5757\u53d8\u5b8c\u6574\u4e86\u5c31 $O(\\log(r-l+1))$ \u5efa\u51fa st \u8868\uff0c\u5728\u524d\u9762\u65b0\u5f00\u4e00\u4e2a\u7a7a\u7684\u5757\uff0c\u90a3\u4e48\u8fd9\u4e2a\u590d\u6742\u5ea6\u53ef\u4ee5\u644a\u5230\u524d\u7aef\u63d2\u5165\u91cc\uff0c\u56e0\u4e3a\u6bcf\u63d2\u5165 $\\log(r-l+1)$ \u6b21\u624d\u4f1a\u5efa\u4e00\u4e2a st \u8868\u3002\u800c\u5982\u679c\u8bf4\u968f\u7740\u8fd9\u6b21\u524d\u7aef\u63d2\u5165\u6574\u4e2a\u5927\u5757\u90fd\u53d8\u5b8c\u6574\u4e86\uff0c\u5c31\u5728\u5927\u5757\u7684\u524d\u9762\u65b0\u5f00\u4e00\u4e2a\u5927\u5757\u3002\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u628a\u5206\u5757\u6240\u9700\u8981\u7684\u6240\u6709\u6570\u7ec4\u6309\u7167\u957f\u5256\u5185\u5b58\u6c60\u90a3\u6837\u5f00\u51fa\u6765\uff0c\u5728\u4e8c\u5206\u524d\u5148\u5904\u7406\u51fa\u5206\u5757\u7ed3\u6784\u3002\n\n\u4ee3\u7801\u592a\u957f\u4e86\uff0c\u53ef\u4ee5\u53bb [CF](https://codeforces.com/problemset/submission/150/187112684) \u4e0a\u770b\u3002\u5e95\u5c42\u5206\u5757\u7684\u90e8\u5206\u548c[\u8fd9\u91cc](https://www.cnblogs.com/vectorwyx/p/15382823.html)\u5dee\u4e0d\u591a\u3002\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8dd1\u5f97\u8fd9\u4e48\u6162\uff0c\u8def\u8fc7\u7684\u5361\u5e38\u5927\u624b\u5b50\u80fd\u5426\u6307\u70b9\u4e00\u4e0bQAQ\u3002",
        "postTime": 1672301238,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF150E Freezing with Style"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF150E)\n\n## \u524d\u8a00\n\n~~\u670d\u4e86\uff0c\u6302\u4e86\u4e00\u4e0b\u5348\u3002~~\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u6761\u8fb9\u6709\u8fb9\u6743 $w_i$\uff0c\u7ed9\u5b9a $L$ \u548c $R$\uff0c\u627e\u51fa\u4e00\u6761\u7b80\u5355\u8def\u5f84\u6ee1\u8db3\uff1a\n\n1. \u8fb9\u6570 $\\in[L,R]$\u3002\n2. \u8fb9\u6743\u4e2d\u4f4d\u6570\u5c3d\u91cf\u5927\u3002\n\n\u627e\u51fa\u4efb\u610f\u4e00\u6761\u8def\u5f84\u8f93\u51fa\u4e24\u4e2a\u7aef\u70b9\u3002\n\n$1\\le L\\le R<n\\le 10^5$\uff0c$1\\le w_i\\le 10^9$\u3002\n\n## \u9898\u89e3\n\n\u770b\u5230\u7edf\u8ba1\u8def\u5f84\uff0c\u5bb9\u6613\u60f3\u5230\u70b9\u5206\u6cbb\uff1b\u770b\u5230\u4e2d\u4f4d\u6570\uff0c\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u3002\n\n\u7ed3\u5408\u4e24\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5168\u5c40\u4e8c\u5206\u4e2d\u4f4d\u6570 $middle$\uff0c\u8fb9\u6743\u5c0f\u4e8e $middle$ \u7684\u8d4b\u4e3a $-1$\uff0c\u5927\u4e8e $middle$ \u8d4b\u4e3a $1$\u3002\u63a5\u4e0b\u6765\u518d\u5229\u7528\u70b9\u5206\u6cbb\u6c42\u51fa\u662f\u5426\u6709\u6ee1\u8db3\u6761\u4ef6 $1$ \u4e14\u8fb9\u6743\u548c $\\ge 0$ \u7684\u8def\u5f84\u3002\n\n\u8003\u8651\u540e\u8005\u7684\u6c42\u6cd5\uff1a\n\n1. \u7ebf\u6bb5\u6811\uff1a\u7528\u7ebf\u6bb5\u6811\u50a8\u5b58\u8fb9\u6570\u4e3a\u4e0b\u6807\u7684\u6700\u5927\u8fb9\u6743\u548c\uff0c\u7136\u800c\u590d\u6742\u5ea6\u4e3a $O(n\\log_2^3n)$\uff0c\u660e\u663e\u8fc7\u4e0d\u4e86\u3002\n2. \u5355\u8c03\u961f\u5217\uff1a\u679a\u4e3e\u6bcf\u4e2a\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\uff0c\u5047\u8bbe\u8fb9\u6570\u4e3a $x$\uff0c\u5219\u76f8\u5f53\u4e8e\u8981\u5728\u5176\u4ed6\u5b50\u6811\u4e2d\u627e\u5230\u8fb9\u6570\u5728 $[L-x,R-x]$ \u4e2d\u7684\u6700\u5927\u8fb9\u6743\u548c\uff0c\u5982\u679c $x$ \u662f\u5355\u8c03\u7684\uff0c\u8fd9\u4e2a\u95ee\u9898\u76f8\u5f53\u4e8e\u6ed1\u52a8\u7a97\u53e3\uff0c\u800c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $\\text{BFS}$ \u4f7f\u5176\u5355\u8c03\u3002\n\n\u4f46\u662f\u5355\u8c03\u961f\u5217\u7684\u590d\u6742\u5ea6\u4e3a\u5355\u6b21\u5747\u644a $O(n)$\uff0c\u653e\u5728\u4e00\u8d77\u4f1a\u88ab\u5361\u6210 $O(n^2)$\uff0c\u6240\u4ee5\u8fd9\u91cc\u8fd8\u8981\u52a0\u4e00\u4e9b\u4f18\u5316\uff1a\n\n1. \u5355\u8c03\u961f\u5217\u7684\u521d\u59cb\u5316\u53ea\u4ece\u5f53\u524d\u7684 $maxdep$ \u5f00\u59cb\u5904\u7406\uff0c\u8fd9\u6837\u5355\u6b21\u590d\u6742\u5ea6 $O(dep)$\u3002\n2. \u4f7f\u7528\u6309\u79e9\u5408\u5e76\uff0c\u5c06\u5b50\u6811\u6309\u7167 $maxdep$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5bb9\u6613\u8bc1\u660e $maxdep\\le size$\uff0c\u6240\u4ee5\u5355\u8c03\u961f\u5217\u590d\u6742\u5ea6\u4e3a $O(\\sum maxdep)\\le O(\\sum size)=O(n)$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log_2^2n)$\u3002\n\n## \u4ee3\u7801\n\n~~\u545c\u545c\u545c\u6211\u5e38\u6570\u592a\u5927\u4e86\u88ab\u5361\u4e86\uff08\u53ea\u6709\u7528 C++17 \u6211\u624d\u80fd\u8fc7\uff09\u3002~~\n\n```cpp\n// Problem: E. Freezing with Style\n// Contest: Codeforces - Codeforces Round #107 (Div. 1)\n// URL: https://codeforces.com/problemset/problem/150/E\n// Memory Limit: 256 MB\n// Time Limit: 7000 ms\n//\n// Powered by CP Editor (https://cpeditor.org)\n\n#include<bits/stdc++.h>\n#define mem(x,y) memset(x,y,sizeof(x))\n#define mk make_pair\n#define pb push_back\n#define ff first\n#define ss second\n#define _inf 0xc3c3c3c3\nusing namespace std;\nnamespace Std{\n    void read(int &x){\n        x=0;\n        int y=1;\n        char c=getchar();\n        while(c<'0'||c>'9'){\n            if(c=='-')y=-1;\n            c=getchar();\n        }\n        while(c>='0'&&c<='9'){\n            x=(x<<1)+(x<<3)+(c&15);\n            c=getchar();\n        }\n        x*=y;\n    }\n    int n,L,R;\n    int sz[300010],dep[300010],mx[300010],dis[300010],root,rt,ans,tld,trd,ld,rd;\n    vector<pair<int,int> >to[300010],re[300010];\n    vector<int>son[300010];\n    int ma[300010],sta[300010],top,fa[300010],q[300010],ls,rs;\n    bool vis[300010];\n    void findroot(int x,int y,int z){\n        sz[x]=1;\n        mx[x]=0;\n        for(auto i:to[x]){\n            if(i.ff==y||vis[i.ff])continue;\n            findroot(i.ff,x,z);\n            sz[x]+=sz[i.ff];\n            mx[x]=max(mx[x],sz[i.ff]);\n        }\n        mx[x]=max(mx[x],z-sz[x]);\n        if((!root)||mx[x]<mx[root])root=x;\n    }\n    void dfs(int x,int y){\n        mx[x]=dep[x];\n        sz[x]=1;\n        for(auto i:to[x]){\n            if(i.ff==y||vis[i.ff])continue;\n            dep[i.ff]=dep[x]+1;\n            dfs(i.ff,x);\n            mx[x]=max(mx[x],mx[i.ff]);\n            sz[x]+=sz[i.ff];\n        }\n    }\n    void bfs(int x){\n        queue<int>q;\n        q.push(x);\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            sta[++top]=u;\n            for(auto i:re[u]){\n                if(i.ff==fa[u]||vis[i.ff])continue;\n                dis[i.ff]=dis[u]+i.ss;\n                dep[i.ff]=dep[u]+1;\n                fa[i.ff]=u;\n                q.push(i.ff);\n            }\n        }\n    }\n    void init(int x){\n        if(x==1){\n            ++x,--x;\n        }\n        vis[x]=true;\n        for(auto i:to[x]){\n            if(vis[i.ff])continue;\n            dep[i.ff]=1;\n            dfs(i.ff,x);\n        }\n        sort(to[x].begin(),to[x].end(),[&](pair<int,int>x,pair<int,int>y){return sz[x.ff]<sz[y.ff];});\n        for(auto i:to[x]){\n            if(vis[i.ff])continue;\n            root=0;\n            findroot(i.ff,x,sz[i.ff]);\n            son[x].pb(root);\n            init(root);\n        }\n    }\n    void solve(int x){\n        vis[x]=true;\n        ma[0]=x;\n        dis[x]=0;\n        int now=1,mxx=0;\n        top=0;\n        for(auto i:re[x]){\n            if(vis[i.ff])continue;\n            dep[i.ff]=1;\n            dis[i.ff]=i.ss;\n            fa[i.ff]=x;\n            bfs(i.ff);\n            int nowl=min(mxx+1,L),nowr=min(mxx,R);rs=0,ls=1;\n            for(int j=nowr;j>=nowl;--j){\n                while(ls<=rs&&dis[ma[j]]>=dis[ma[q[rs]]])--rs;\n                q[++rs]=j;\n            }\n            int tmp=now;\n            while(now<=top){\n                int aiml=max(0,L-dep[sta[now]]),aimr=min(mxx,R-dep[sta[now]]);\n                while(nowl>aiml){\n                    --nowl;\n                    while(ls<=rs&&dis[ma[nowl]]>=dis[ma[q[rs]]])--rs;\n                    q[++rs]=nowl;\n                }\n                nowr=aimr;\n                while(ls<=rs&&q[ls]>aimr)++ls;\n                if(ls<=rs&&dis[ma[q[ls]]]+dis[sta[now]]>ans)ans=max(ans,dis[ma[q[ls]]]+dis[sta[now]]),tld=ma[q[ls]],trd=sta[now];\n                ++now;\n            }\n            now=tmp;\n            while(now<=top){\n                if(dis[sta[now]]>dis[ma[dep[sta[now]]]])ma[dep[sta[now]]]=sta[now];\n                mxx=max(mxx,dep[sta[now]]);\n                ++now;\n            }\n        }\n        for(int i=1;i<=top;++i)ma[dep[sta[i]]]=0;\n        for(auto i:son[x])solve(i);\n    }\n    bool work(int x){\n        dis[0]=_inf;\n        for(int i=1;i<=n;++i){\n            re[i].clear();\n            for(auto j:to[i]){\n                if(j.ss>=x)re[i].pb(mk(j.ff,1));\n                else re[i].pb(mk(j.ff,-1));\n            }\n        }\n        mem(vis,0);\n        ans=_inf,tld=0,trd=0;\n        solve(rt);\n        return (ans>=0);\n    }\n    void main(){\n        read(n);read(L);read(R);\n        ma[0]=0;\n        int u,v,w;\n        for(int i=1;i<n;++i){\n            read(u);read(v);read(w);\n            to[u].pb(mk(v,w));\n            to[v].pb(mk(u,w));\n        }\n        findroot(1,1,n);\n        rt=root;\n        init(root);\n        int l=0,r=1000000;\n        while(l<r){\n            int mid=((l+r+1)>>1);\n            if(work(mid))l=mid,ld=tld,rd=trd;\n            else r=mid-1;\n        }\n        work(l);ld=tld,rd=trd;\n        printf(\"%d %d\\n\",ld,rd);\n    }\n}\nint main(){\n    return Std::main(),0;\n}\n```\n",
        "postTime": 1662386165,
        "uid": 576737,
        "name": "Wilson_Inversion",
        "ccfLevel": 7,
        "title": "CF150E Freezing with Style \u9898\u89e3"
    },
    {
        "content": "### $sol:$\n\n\u7ed9\u4e00\u79cd\u5927\u5e38\u6570 $n \\log^2 n$ \u7684\u505a\u6cd5\n\n\u8003\u8651\u4e8c\u5206\uff0c\u7531\u4e8e\u662f\u4e2d\u4f4d\u6570\uff0c\u6211\u4eec\u5c31\u4e8c\u5206\u8fd9\u4e2a\u4e2d\u4f4d\u6570\uff0c$x>=mid$\u5219\u8bbe\u4e3a $1$\uff0c\u5426\u5219\u4e3a $-1$ \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u6761 $sum >= 0$ \u7684\u8def\u5f84\uff0c\u8fd9\u6837\u5c31\u6709\u89e3\u4e86\uff0c\u6613\u8bc1\u3002\n\n\u957f\u94fe\u5256\u5206\uff0c\u8ba9\u957f\u94fe\u53d8\u6210\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4 $[dfn_u,dfn_u+len_u-1]$\uff0c\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u70b9\u662f\u5bf9\u4e8e\u5f53\u524d\u7684 $u$ \n\n\u7136\u540e\u8003\u8651\u5230\u5bf9\u4e8e\u6bcf\u4e2a $u$ \u53ea\u9700\u8981\u627e\u5230\u957f\u5ea6\u5728 $[L,R]$ \u7684\u8fb9\uff0c\u4e14\u7ecf\u8fc7 $u$\uff0c\u5f88\u663e\u7136\u662f\u4ece $u$ \u7684\u5b50\u6811\u91cc\u9762\u627e\uff0c\u663e\u7136\u4f60\u53ea\u9700\u8981\u7b97\u51fa\u6765\u5148\u524d\u6bcf\u5c42\u7684$\\max$\u5b58\u5728\u7ebf\u6bb5\u6811\u4e0a\u9762\uff0c\u8868\u793a $dep_v$ \u7684\u4e00\u5806\u70b9\uff0c\u5230 $u$ \u7684\u6700\u5927\u8def\u5f84\uff0c\u7136\u540e\u7528 $dfs$+\u7ebf\u6bb5\u6811\uff0c\u4ece\u4e0b\u5230\u4e0a\u66f4\u65b0\uff0c\u6bcf\u6b21\u628a $\\max$ \u66f4\u65b0\u5230\u957f\u94fe\u76f8\u5bf9\u7684\u7ebf\u6bb5\u6811\u533a\u95f4 $[dfn_u,dfn_u+len_u-1]$ \u4e0a\u9762\u3002\n\n\u8003\u8651\u5230\u66f4\u65b0\u7b54\u6848\u4ec0\u4e48\u7684\uff0c\u76f4\u63a5\u66b4\u529b\u66f4\u65b0\u957f\u94fe\u4e0a\u7684\u4fe1\u606f\uff08\u590d\u6742\u5ea6\u8bc1\u660e\u5728\u4e0b\u9762\uff09\n\u5373\u679a\u4e3e\u4e00\u4e2a\u957f\u5ea6 $j$\uff0c\u7136\u540e\u4f60\u53e6\u4e00\u6761\u8fb9\u7684\u957f\u5ea6\u533a\u95f4\u662f\u9650\u5b9a\u7684\uff0c\u4e8e\u662f\u4f60\u53ef\u4ee5\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\uff0c\u6240\u4ee5\u6bcf\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u90fd\u662f $\\log n$\n\n\u6bcf\u6b21\u67e5\u8be2\u5b8c\u4e4b\u540e\u66f4\u65b0\u76f8\u540c\u6df1\u5ea6\u7684\u7b54\u6848\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u91cd\u590d\u4e86\uff0c\u590d\u6742\u5ea6\u4ecd\u7136\u662f\u4f18\u7f8e\u7684\u4e00\u4e2a $\\log$\u3002\n\n### \u590d\u6742\u5ea6\u5206\u6790\n\n\u8003\u8651\u5230\u5b83\u7684 $dfs$ \u662f\u679a\u4e3e\u975e\u513f\u5b50\u70b9\u7684\u6700\u6df1\u6df1\u5ea6\uff0c\u800c\u4f60\u975e\u513f\u5b50\u70b9\u7684\u4e00\u5b9a\u662f\u67d0\u4e2a\u957f\u94fe\u7684 $top$\uff0c\u90a3\u4e48\u4f60\u4fdd\u8bc1\u4e86\u53ea\u4f1a\u904d\u5386\u4e00\u4e2a\u70b9\u4e00\u904d\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\uff0c\u4f46\u662f\u7531\u4e8e\u4f60\u5fc5\u987b\u8981\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u6240\u4ee5\u5355\u6b21\u7684\u590d\u6742\u5ea6\u5c31\u5230\u8fbe\u4e86 $O(n \\log n)$\uff0c\u5916\u8fb9\u8fd8\u9700\u8981\u4e00\u4e2a\u4e8c\u5206\uff0c\u590d\u6742\u5ea6\u662f $O(n \\log^2 n)$ \n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nint read() {\n  int x = 0;\n  char c = getchar();\n  while (c < 48) c = getchar();\n  while (c > 47) x = x * 10 + (c - 48), c = getchar();\n  return x;\n}\n\nint min(int x, int y) { return x < y ? x : y; }\nint max(int x, int y) { return x > y ? x : y; }\n\nint n, L, R;\n// edge-list\nconst int maxn = 2e5 + 52;\nstruct edge {\n  int v, nxt, w;\n} e[maxn << 1];\nint head[maxn], cnt = 0, val[maxn];\nvoid add(int u, int v, int w) {\n  e[++cnt] = { v, head[u], w }, head[u] = cnt;\n  e[++cnt] = { u, head[v], w }, head[v] = cnt;\n}\n\n// dfs\nint len[maxn], son[maxn], wt[maxn];\nvoid dfs(int u, int fa) {\n  for (int i = head[u]; i; i = e[i].nxt) {\n    int v = e[i].v;\n    if (v == fa) continue;\n    dfs(v, u);\n    if (len[v] > len[son[u]]) {\n      son[u] = v, wt[u] = e[i].w;\n    }\n  }\n  len[u] = len[son[u]] + 1;\n}\n\nint dfn[maxn], idx = 0;\nvoid dfs(int u) {\n  dfn[u] = ++idx;\n  if (son[u]) dfs(son[u]);\n  for (int i = head[u]; i; i = e[i].nxt)\n    if (!dfn[e[i].v]) dfs(e[i].v);\n}\n// smt\nstruct node {\n  int mx, t;\n} sum[maxn << 2];\nint tag[maxn << 2];\nnode merge(const node& x, const node& y) { return x.mx > y.mx ? x : y; }\n\nvoid clr(int l, int r, int rt) {\n  tag[rt] = sum[rt].t = 0, sum[rt].mx = -n;\n  if (l == r) return;\n  int mid = l + r >> 1;\n  clr(l, mid, rt << 1);\n  clr(mid + 1, r, rt << 1 | 1);\n}\n\nvoid pushtag(int rt, int v) { tag[rt] += v, sum[rt].mx += v; }\nvoid pushd(int rt) {\n  if (!tag[rt]) return;\n  pushtag(rt << 1, tag[rt]);\n  pushtag(rt << 1 | 1, tag[rt]);\n  tag[rt] = 0;\n}\n\nnode qry(int a, int b, int l, int r, int rt) {\n  if (a <= l && r <= b) return sum[rt];\n  pushd(rt);\n  int mid = l + r >> 1;\n  if (b <= mid) return qry(a, b, l, mid, rt << 1);\n  if (a > mid) return qry(a, b, mid + 1, r, rt << 1 | 1);\n  return merge(qry(a, b, l, mid, rt << 1), qry(a, b, mid + 1, r, rt << 1 | 1));\n}\n\nvoid change(int a, int b, int l, int r, int rt, int v) {\n  if (a <= l && r <= b) {\n    pushtag(rt, v);\n    return;\n  }\n  pushd(rt);\n  int mid = l + r >> 1;\n  if (a <= mid) change(a, b, l, mid, rt << 1, v);\n  if (b > mid) change(a, b, mid + 1, r, rt << 1 | 1, v);\n  sum[rt] = merge(sum[rt << 1], sum[rt << 1 | 1]);\n}\n\nvoid modify(int l, int r, int rt, int x, node v) {\n  if (l == r) {\n    sum[rt] = merge(sum[rt], v);\n    return;\n  }\n  pushd(rt);\n  int mid = l + r >> 1;\n  if (x <= mid)\n    modify(l, mid, rt << 1, x, v);\n  else\n    modify(mid + 1, r, rt << 1 | 1, x, v);\n  sum[rt] = merge(sum[rt << 1], sum[rt << 1 | 1]);\n}\n\nint flag = 0, xx = 0, yy = 0;\nvoid dfs(int u, int fa, int mid) {\n  if (flag) return;\n  modify(1, n, 1, dfn[u], { 0, u });\n  if (!son[u]) return;\n  dfs(son[u], u, mid);\n  change(dfn[u] + 1, dfn[u] + len[u] - 1, 1, n, 1, wt[u] >= mid ? 1 : -1);\n  if (L < len[u]) {\n    node ask = qry(dfn[u] + L, dfn[u] + min(len[u] - 1, R), 1, n, 1);\n    if (ask.mx >= 0) {\n      flag = 1;\n      xx = u, yy = ask.t;\n      return;\n    }\n  }\n  for (int i = head[u]; i; i = e[i].nxt) {\n    int v = e[i].v;\n    if (v == fa || v == son[u]) continue;\n    dfs(v, u, mid);\n    int w = e[i].w >= mid ? 1 : -1;\n    for (int j = 1; j <= len[v]; j++) {\n      node c = qry(dfn[v] + j - 1, dfn[v] + j - 1, 1, n, 1);\n      c.mx += w;\n      if (L - j >= len[u] || j > R) continue;\n      node ask = qry(dfn[u] + max(0, L - j), dfn[u] + min(len[u] - 1, R - j), 1, n, 1);\n      if (c.mx + ask.mx >= 0) {\n        xx = c.t, yy = ask.t;\n        flag = 1;\n        break;\n      }\n    }\n    for (int j = 1; j <= len[v]; j++) {\n      node c = qry(dfn[v] + j - 1, dfn[v] + j - 1, 1, n, 1);\n      c.mx += w, modify(1, n, 1, dfn[u] + j, c);\n    }\n  }\n}\nbool chk(int mid) {\n  clr(1, n, 1);\n  flag = 0, dfs(1, 0, mid);\n  return flag;\n}\nint main() {\n  // freopen(\"testdata.in\", \"r\", stdin);\n  n = read(), L = read(), R = read();\n  for (int i = 1; i < n; i++) {\n    int u = read(), v = read(), w = read();\n    add(u, v, w), val[i] = w;\n  }\n  dfs(1, 0), dfs(1), std ::sort(val + 1, val + n);\n  int le = 1, ri = std ::unique(val + 1, val + n) - val - 1;\n  int ansx = 0, ansy = 0;\n  while (le <= ri) {\n    int mid = le + ri >> 1;\n    if (chk(val[mid])) {\n      le = mid + 1;\n      ansx = xx, ansy = yy;\n    } else\n      ri = mid - 1;\n  }\n  printf(\"%d %d\\n\", ansx, ansy);\n  return 0;\n}\n```",
        "postTime": 1582164207,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF150E \u3010Freezing with Style\u3011"
    },
    {
        "content": "### \u9898\u76ee\u4f20\u9001\u95e8\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF150E)\n\n[CF](https://codeforces.com/problemset/problem/150/E)\n\n### \u5199\u5728\u524d\u9762\n\n\u4e00\u9053\u5408\u683c\u7684\u7d2b\u9898\uff0c\u6709\u96be\u5ea6\uff0c\u6709\u7ec6\u8282\u3002\n\n### \u5206\u6790\n\n\u70b9\u5206\u6cbb\u662f\u5e73\u51e1\u7684\u3002\n\n\u6211\u4eec\u53d6 $rt$ \u4e3a\u6811\u7684\u91cd\u5fc3\uff0c\u628a\u94fe\u5206\u4e3a\u4e24\u7c7b\u3002\n\n1. \u7ecf\u8fc7 $rt$ \u7684\u94fe\u3002\n\n1. \u4e0d\u7ecf\u8fc7 $rt$ \u7684\u94fe\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\u53ef\u4ee5\u9012\u5f52\u5904\u7406\uff0c\u56e0\u6b64\u53ea\u8003\u8651\u7b2c\u4e00\u7c7b\u3002\n\n\u8981\u6c42\u4e2d\u4f4d\u6570\u6700\u5927\uff0c\u53ef\u4ee5\u4e8c\u5206\u4e2d\u4f4d\u6570\uff0c\u8fb9\u6743\u5927\u4e8e\u7b49\u4e8e\u4e8c\u5206\u503c\u7684\u4ee4\u8fb9\u6743\u4e3a $1$\uff0c\u5c0f\u4e8e\u4e8c\u5206\u503c\u7684\u4ee4\u8fb9\u6743\u4e3a $-1$\uff0c\u5982\u679c\u94fe\u7684\u8fb9\u6743\u5927\u4e8e\u7b49\u4e8e $0$ \u5373\u8be5\u4e8c\u5206\u503c\u89c6\u4e3a\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u6211\u4eec\u5728\u4e00\u6761\u94fe\uff0c\u5047\u8bbe\u5176\u94fe\u957f\u4e3a $len$\uff0c\u5c31\u8981\u5728\u524d\u9762\u5bfb\u627e\u94fe\u957f\u4e3a $[L-len,R-len]$ \u7684\u6700\u5927\u503c\u3002\n\n\u6240\u4ee5\u52a0\u4e0a\u533a\u95f4\u6c42\u6700\u5927\u503c\uff0c\u5c31\u6709\u4e00\u4e2a\u663e\u7136\u7684 $O(n\\log^{3}{n})$ \u7684\u505a\u6cd5\u3002\n\n\u7136\u800c\u53ef\u4ee5\u4f18\u5316\u3002\n\n\u6ce8\u610f\u5230 $[L-len,R-len]$ \u53ef\u4ee5\u89c6\u4e3a\u4e00\u6bb5\u201c\u6ed1\u52a8\u7a97\u53e3\u201d\uff0c\u60f3\u5230\u5355\u8c03\u961f\u5217\u4f18\u5316\u3002\n\n\u4e3a\u4e86\u4fdd\u8bc1 $len$ \u5355\u8c03\u9012\u589e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002\n\n\u4f46\u5f53 $len = 0$ \u65f6\uff0c\u521d\u59cb\u5316\u533a\u95f4 $[L,R]$ \u4e5f\u8bb8\u4f1a\u8d85\u65f6\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u6700\u591a\u53ea\u9700\u8981\u521d\u59cb\u5316\u533a\u95f4\u53f3\u7aef\u70b9\u5230 $dep_{max}$ \u5373\u53ef\uff0c\u6211\u4eec\u53ea\u8981\u628a $dep$ \u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5219\u521d\u59cb\u5316\u533a\u95f4\u53ea\u8981\u521d\u59cb\u5316\u5230 $dep$ \u5373\u53ef\uff0c\u800c $\\sum{dep}$ \u5c0f\u4e8e\u7b49\u4e8e $size$\u3002\n\n\u90a3\u52a0\u4e0a\u6392\u5e8f\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u8fd8\u662f $O(n\\log^{3}{n})$ \u5417\uff1f\u7531\u4e8e $dep$ \u7684\u8303\u56f4\u8f83\u5c0f\uff0c\u5176\u5b9e\u53ea\u8981\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u5373\u53ef\u3002\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ea\u6709 $O(n\\log^2{n})$ \u4e86\u3002\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(register T &x)\n{\n\tregister T p = 1;\n\tx = 0;\n\tchar c = getchar();\n\twhile(c < '0'||c > '9')\n\t{\n\t\tif(c == '-') p = -p;\n\t\tc = getchar();\n\t}\n\twhile('0' <= c&&c <= '9')\n\t{\n\t\tx = (x<<3)+(x<<1)+(c^48);\n\t\tc = getchar();\n\t}\n\tx *= p;\n}\ntemplate<typename T>inline void write(register T x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) write(x/10);\n\tputchar(x%10+48);\n}\n#define D(i,a,b) for(register int i=a;i>=b;--i)\n#define F(i,a,b) for(register int i=a;i<=b;++i)\n#define ll long long\n#define pii pair<int,int>\n#define N 100010\nint Mx[N],dep[N],leng[N],val[N],a[N],sz[N],n,L,R,now,rt,tot;\nbitset<N> vis,found;\npii Ans,ans,mx[N];\npair<int,pii> tp[N];\nvector<pii> g[N],Sort[N];\nvoid get_rt(int u,int fa)\n{\n\tsz[u] = 1,Mx[u] = 0;\n\tfor(auto p:g[u])\n\t{\n\t\tint v = p.first;\n\t\tif(v == fa||vis[v]) continue;\n\t\tget_rt(v,u);\n\t\tsz[u] += sz[v];\n\t\tMx[u] = max(Mx[u],sz[v]);\t\n\t}\t\n\tMx[u] = max(Mx[u],tot - sz[u]);\n\tif(Mx[u] < Mx[rt]) rt = u;\n}\nvoid get_dep(int u,int fa,int deep)\n{\n\tfound[u] = 0;\n\tdep[u] = deep;\n\tfor(auto p:g[u])\n\t{\n\t\tint v = p.first;\n\t\tif(v == fa||vis[v]) continue;\n\t\tget_dep(v,u,deep+1);\n\t\tdep[u] = max(dep[u],dep[v]);\n\t}\n}\nqueue<int> q;\ndeque<int> Q;\nvoid solve(int u)\n{\n\tif(ans != (pii){0,0}) return;\n\tvis[u] = 1;\n\tget_dep(u,0,0);\n\tF(i,0,dep[u]) Sort[i].clear(),mx[i] = (pii){-1e9,0};\n\tmx[0] = (pii){0,u};\n\tfor(auto p:g[u])\n\t{\n\t\tif(vis[p.first]) continue;\n\t\tSort[dep[p.first]].push_back(p); \n\t}\n\tF(c,0,dep[u])\n\t\tfor(auto p:Sort[c])\n\t\t{\n\t\t\twhile(Q.size()) Q.pop_back();\n\t\t\tint v = p.first,w = p.second,cnt = 0,nt = 0;\n\t\t\tif(w >= now) val[v] = 1;\n\t\t\telse val[v] = -1;\n\t\t\tleng[v] = 1;\n\t\t\tD(i,dep[v],L)\n\t\t\t{\n\t\t\t\twhile(Q.size()&&mx[i].first >= mx[Q.back()].first) Q.pop_back();\n\t\t\t\tQ.push_back(i);\n\t\t\t}\n\t\t\tq.push(v);\n\t\t\tfound[v] = 1;\n\t\t\twhile(q.size())\n\t\t\t{\n\t\t\t\tint x = q.front();\n\t\t\t\tq.pop();\n\t\t\t\twhile(nt < leng[x])\n\t\t\t\t{\n\t\t\t\t\t++nt;\n\t\t\t\t\twhile(Q.size()&&Q.front() > R-nt) Q.pop_front();\n\t\t\t\t\tif(0 <= L-nt&&L-nt <= dep[v])\n\t\t\t\t\t{\n\t\t\t\t\t\twhile(Q.size()&&mx[L-nt].first >= mx[Q.back()].first) Q.pop_back();\n\t\t\t\t\t\tQ.push_back(L-nt); \t\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\tif(Q.size()&&mx[Q.front()].first + val[x] >= 0)\n\t\t\t\t{\n\t\t\t\t\tans = (pii){mx[Q.front()].second,x};\t\n\t\t\t\t\twhile(q.size()) q.pop();\n\t\t\t\t\treturn;\t\n\t\t\t\t} \n\t\t\t\ttp[++cnt] = (pair<int,pii>){leng[x],(pii){val[x],x}};  \n\t\t\t\tfor(auto pp:g[x])\n\t\t\t\t{\n\t\t\t\t\tint y = pp.first,ww = pp.second;\n\t\t\t\t\tif(vis[y]||found[y]) continue;\n\t\t\t\t\tfound[y] = 1;\n\t\t\t\t\tleng[y] = leng[x] + 1;\n\t\t\t\t\tif(ww >= now) val[y] = val[x] + 1;\n\t\t\t\t\telse val[y] = val[x] - 1;\n\t\t\t\t\tq.push(y);\t\n\t\t\t\t}\t\n\t\t\t}\t\n\t\t\tF(i,1,cnt) mx[tp[i].first] = max(mx[tp[i].first],tp[i].second);\n\t\t}\n\tint T = tot;\n\tfor(auto p:g[u])\n\t{\n\t\tint v = p.first;\n\t\tif(vis[v]) continue;\n\t\ttot = sz[v];\n\t\tif(sz[v] > sz[u]) tot = T - sz[u];\n\t\trt = 0;\n\t\tget_rt(v,0);\n\t\tsolve(rt);\n\t} \n}\ninline bool check(int x)\n{\n\tnow = a[x];\n\tvis = 0;\n\ttot = n;\n\trt = 0;\n\tMx[0] = 1e9;\n\tans = (pii){0,0};\n\tget_rt(1,0);\n\tsolve(rt);\n\tif(ans == (pii){0,0}) return 0;\n\tAns = ans;\n\treturn 1;\n}\nint main()\n{\n\tread(n),read(L),read(R);\n\tF(i,1,n-1)\n\t{\n\t\tint u,v;\n\t\tread(u),read(v),read(a[i]);\n\t\tg[u].push_back((pii){v,a[i]});\n\t\tg[v].push_back((pii){u,a[i]});\n\t}\n\tsort(&a[1],&a[n]);\n\tint m = unique(&a[1],&a[n]) - &a[1];\n\tint l = 1,r = m,mid;\n\twhile(l <= r)\n\t{\n\t\tmid = (l + r) >> 1;\n\t\tif(check(mid)) l = mid + 1;\n\t\telse r = mid - 1;\n\t}\t\n\twrite(Ans.first),putchar(' '),write(Ans.second);\n\treturn 0;\n}\n```",
        "postTime": 1681632686,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF150E \u9898\u89e3"
    },
    {
        "content": "\u4e09\u53ea $\\log$ \u76f4\u63a5\u51b2\u8fc7\u53bb\u4e86\uff0c6\u3002\n\n\n\u4e2d\u4f4d\u6570\u4e00\u773c\u4e8c\u5206\uff0c\u5148\u8003\u8651\u5982\u679c\u6ca1\u6709\u8def\u5f84\u957f\u5ea6\u7684\u9650\u5236\u600e\u4e48\u505a\uff0c\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u76f4\u63a5 dfs \u4e00\u904d\u627e\u51fa\u6765\u6743\u503c\u6700\u5927\u7684\u8def\u5f84\u5373\u53ef\u3002\n\n\u73b0\u5728\u6709\u957f\u5ea6\u7684\u9650\u5236\uff0c\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5b50\u6811\u5185\u6bcf\u4e00\u4e2a\u6df1\u5ea6\u7684\u8def\u5f84\u6700\u5927\u503c\uff0c\u8fd9\u6837\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u65f6\u5019\u6bcf\u4e2a\u70b9\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\u4e00\u6bb5\u533a\u95f4\u7684\u8def\u5f84\u6700\u503c\u5c31\u80fd\u5f97\u5230\u7b54\u6848\uff0c\u5408\u5e76\u4e24\u4e2a\u5b50\u6811\u7684\u8def\u5f84\u4e5f\u53ef\u4ee5\u7b80\u5355\u5730\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u5b8c\u6210\u3002\n\n\u76f4\u63a5\u5199\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n\\log V)$\uff0c\u4f1a\u88ab\u5361\u5e38\uff0c\u4f60\u628a\u6743\u503c\u79bb\u6563\u5316\u4e00\u4e0b\u590d\u6742\u5ea6\u53d8\u6210 $O(n\\log^3 n)$ \u5c31\u76f4\u63a5\u8fc7\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint n,L,R,w,tot,node[100001],cnt,d[100001],s[100001],son[100001],dep[100001],root[100001],ls[100001*20],rs[100001*20],tag[100001*20];\nvector<pair<int,int> > v[100001];\npair<int,int> maxn[100001*20]={make_pair(-1e9,0)},ans,tmp;\ninline void init()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n}\ninline int read()\n{\n    int x;\n    cin>>x;\n    return x;\n}\ninline void clear()\n{\n    for(int i=1;i<=n;++i)\n        root[i]=0;\n    for(int i=1;i<=tot;++i)\n    {\n        ls[i]=rs[i]=0;\n        maxn[i]={-1e9,0};\n    }\n    tot=0;\n}\ninline void push_up(int k)\n{\n    maxn[k]=max(maxn[ls[k]],maxn[rs[k]]);\n}\ninline void push_down(int k)\n{\n    if(tag[k])\n    {\n        if(ls[k])\n        {\n            maxn[ls[k]].first+=tag[k];\n            tag[ls[k]]+=tag[k];\n        }\n        if(rs[k])\n        {\n            maxn[rs[k]].first+=tag[k];\n            tag[rs[k]]+=tag[k];\n        }\n        tag[k]=0;\n    }\n}\ninline int merge(int l,int r,int x,int y)\n{\n    if(!x||!y)\n        return x|y;\n    if(l==r)\n    {\n        maxn[x]=max(maxn[x],maxn[y]);\n        return x;\n    }\n    push_down(x);\n    push_down(y);\n    int mid=(l+r)>>1;\n    ls[x]=merge(l,mid,ls[x],ls[y]);\n    rs[x]=merge(mid+1,r,rs[x],rs[y]);\n    push_up(x);\n    return x;\n}\ninline void update(int node,int l,int r,int &k,int p)\n{\n    if(!k)\n        k=++tot;\n    if(l==r)\n    {\n        maxn[k]=max(maxn[k],{0,p});\n        return;\n    }\n    push_down(k);\n    int mid=(l+r)>>1;\n    if(node<=mid)\n        update(node,l,mid,ls[k],p);\n    else\n        update(node,mid+1,r,rs[k],p);\n    push_up(k);\n}\ninline pair<int,int> query(int nl,int nr,int l,int r,int k)\n{\n    if(!k)\n        return {-1e9,0};\n    if(l>=nl&&r<=nr)\n        return maxn[k];\n    push_down(k);\n    int mid=(l+r)>>1;\n    pair<int,int> res={-1e9,0};\n    if(nl<=mid)\n        res=max(res,query(nl,nr,l,mid,ls[k]));\n    if(nr>mid)\n        res=max(res,query(nl,nr,mid+1,r,rs[k]));\n    return res;\n}\ninline void dfs1(int k,int f,int deep)\n{\n    s[k]=1;\n    dep[k]=deep;\n    for(auto i:v[k])\n    {\n        if(i.first==f)\n            continue;\n        dfs1(i.first,k,deep+1);\n        s[k]+=s[i.first];\n        if(s[i.first]>s[son[k]])\n            son[k]=i.first;\n    }\n}\ninline void solve(int k,int f,int mid,int val,int rt)\n{\n    int l=max(1,dep[rt]+L-(dep[k]-dep[rt])),r=min(n,dep[rt]+R-(dep[k]-dep[rt]));\n    if(l>r)\n        return;\n    pair<int,int> now=query(l,r,1,n,root[rt]);\n    if(val+now.first>w)\n    {\n        w=val+now.first;\n        tmp={k,now.second};\n    }\n    for(auto i:v[k])\n    {\n        if(i.first==f)\n            continue;\n        solve(i.first,k,mid,val+(i.second>=mid? 1:-1),rt);\n    }\n}\ninline void dfs2(int k,int f,int mid)\n{\n    for(auto i:v[k])\n        if(i.first==son[k])\n        {\n            dfs2(i.first,k,mid);\n            maxn[root[i.first]].first+=i.second>=mid? 1:-1;\n            tag[root[i.first]]+=i.second>=mid? 1:-1;\n            root[k]=merge(1,n,root[k],root[i.first]);\n        }\n    for(auto i:v[k])\n    {\n        if(i.first==son[k]||i.first==f)\n            continue;\n        solve(i.first,k,mid,i.second>=mid? 1:-1,k);\n        dfs2(i.first,k,mid);\n        maxn[root[i.first]].first+=i.second>=mid? 1:-1;\n        tag[root[i.first]]+=i.second>=mid? 1:-1;\n        root[k]=merge(1,n,root[k],root[i.first]);\n    }\n    update(dep[k],1,n,root[k],k);\n    int l=max(1,dep[k]+L),r=min(n,dep[k]+R);\n    if(l<=r)\n    {\n        pair<int,int> now=query(l,r,1,n,root[k]);\n        if(now.first>w)\n        {\n            w=now.first;\n            tmp={k,now.second};\n        }\n    }\n}\ninline bool check(int mid)\n{\n    clear();\n    w=-1e9;\n    tmp={0,0};\n    dfs2(1,0,mid);\n    return w>=0;\n}\nint main()\n{\n    init();\n    n=read(),L=read(),R=read();\n    for(int i=1;i<n;++i)\n    {\n        int x=read(),y=read(),w=read();\n        node[++cnt]=w;\n        v[x].emplace_back(y,w);\n        v[y].emplace_back(x,w);\n    }\n    dfs1(1,0,1);\n    sort(node+1,node+cnt+1);\n    cnt=unique(node+1,node+cnt+1)-node-1;\n    int l=1,r=cnt,mid;\n    while(l<=r)\n    {\n        mid=(l+r)>>1;\n        if(check(node[mid]))\n        {\n            ans=tmp;\n            l=mid+1;\n        }\n        else\n            r=mid-1;\n    }\n    cout<<ans.first<<\" \"<<ans.second<<'\\n';\n    cout.flush();\n    return 0;\n}\n```",
        "postTime": 1670833045,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "CF150E Freezing with Style \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u89c2\u5bdf\u9898\u76ee\u53d1\u73b0\u4e2d\u4f4d\u6570\u96be\u4ee5\u5904\u7406\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u4ee4 $w\\ge mid$ \u7684\u8fb9\u8fb9\u6743\u4e3a $1$ \uff0c$w<mid$ \u7684\u8fb9\u8fb9\u6743\u4e3a $-1$\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6761\u6743\u503c\u4e0d\u5c0f\u4e8e $0$ \u7684\u8def\u5f84\u6ee1\u8db3\u957f\u5ea6\uff08\u8fb9\u6570\uff09\u5728 $[L,R]$ \u4e4b\u95f4\u5c31\u8bf4\u660e\u7b54\u6848\u4e0d\u5c0f\u4e8e $mid$\u3002\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6c42\u6811\u4e0a\u957f\u5ea6\u5728 $[L,R]$ \u4e4b\u95f4\u7684\u6700\u5927\u6743\u503c\u8def\u5f84\u7684\u6743\u503c\u662f\u5426\u4e0d\u5c0f\u4e8e $0$\u3002\n\n\u6811\u4e0a\u8def\u5f84\u95ee\u9898\u9996\u5148\u8003\u8651\u70b9\u5206\u6cbb\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5404\u4e2a\u957f\u5ea6\u8def\u5f84\u7684\u6743\u503c $\\max$\uff0c\u4e0d\u540c\u5b50\u6811\u4e4b\u95f4\u76f4\u63a5\u533a\u95f4\u67e5\u8be2\u5355\u70b9\u4fee\u6539\u3002\u8fd9\u6837\u5355\u6b21\u70b9\u5206\u6cbb\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log ^2n\\log V)$\uff0c\u4e0d\u591f\u4f18\u79c0\u3002\n\n\u6ce8\u610f\u5230\u4e00\u68f5\u4ee5 $v$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u5230\u70b9\u5206\u6cbb\u7684\u6839 $u$ \u7684\u8def\u5f84\u957f\u5ea6\u4e00\u5b9a\u4ecb\u4e8e $[1,mxd_v]$ \u4e4b\u95f4\uff0c\u5176\u4e2d $mxd_v$ \u4e3a\u8be5\u5b50\u6811\u7684\u6df1\u5ea6\u3002\u800c\u7edf\u8ba1\u5b50\u6811 $v$ \u548c\u4e4b\u524d\u904d\u5386\u5230\u7684\u5b50\u6811\u4e4b\u95f4\u7684\u7b54\u6848\u65f6\uff0c$v$ \u5b50\u6811\u5185\u6df1\u5ea6\u4e3a $j$ \u7684\u8def\u5f84\u4e00\u5b9a\u662f\u5728\u4e4b\u524d\u5b50\u6811\u5185\u6df1\u5ea6\u4e3a $[L-j,R-j]$ \u7684\u8def\u5f84\u4e2d\u627e\u5339\u914d\uff0c\u4e3a\u7ecf\u5178\u7684\u6ed1\u52a8\u7a97\u53e3\u5f62\u5f0f\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u5355\u6b21\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\min(mxd_v,\\max\\{mxd_{v'}\\}))$\uff0c\u5176\u4e2d $\\max\\{mxd_{v'}\\}$ \u4e3a\u4e4b\u524d\u5b50\u6811 $mxd$ \u7684\u6700\u5927\u503c\u3002\u6309\u4efb\u610f\u987a\u5e8f\u5408\u5e76\u5b50\u6811\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u9519\u7684\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u6309 $mxd$ \u5347\u5e8f\u6392\u5e8f $u$ \u7684\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5408\u5e76 $u$ \u7684\u6240\u6709\u5b50\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(\\sum mxd_v)$\uff0c\u800c\u8fd9\u4e2a\u590d\u6742\u5ea6\u5728\u6700\u52a3\u60c5\u51b5\u4e0b\u662f $O(siz_u)$\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u5355\u6b21\u70b9\u5206\u6cbb\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n\\log V)$\u3002\n\n\u81f3\u4e8e\u65b9\u6848\uff0c\u5728\u6c42\u8def\u5f84\u6743\u503c\u65f6\u8bb0\u5f55\u4e00\u4e0b\u7aef\u70b9\uff0c\u5728\u627e\u5230\u4e0d\u5c0f\u4e8e $0$ \u7684\u8def\u5f84\u65f6\u66f4\u65b0\u65b9\u6848\u5373\u53ef\u3002\n\n### code\n\n```cpp\n//written_by_FTL\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<stack>\n#include<vector>\n#include<queue>\n#include<map>\n#define ll long long\n#define LD long double\n#define i7 __int128\n#define re return\n#define con continue\nusing namespace std;\ninline void ckmin(auto &a,auto b){if(a>b)a=b;}\ninline void ckmax(auto &a,auto b){if(a<b)a=b;}\nconst int N=1e5+5;\ninline int rd(){\n\tint ans=0,f=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')f^=(ch=='-'),ch=getchar();\n\twhile(ch>='0'&&ch<='9')ans=(ans<<3)+(ans<<1)+(ch^48),ch=getchar();\n\tre f?-ans:ans;\n}\nint n,L,R,l,r,mid,ans,U,V,ansU,ansV;\nint nd[N],tt=1;\nstruct edge{\n\tint v,w,nxt;\n}e[N<<1];\nvoid add(int u,int v,int w){\n\te[++tt]={v,w,nd[u]};\n\tnd[u]=tt;\n}\nint hd,tl,w[N];\nstruct xxs{//\u8bb0\u5f55\u7aef\u70b9\u548c\u8def\u5f84\u6743\u503c \n\tint u,dis;\n\tbool operator <(const xxs &x)const{re dis<x.dis;}\n}d[N],c[N];\nint q[N];\nnamespace DOV{\n\tint S,rt,mx[N],bk[N],siz[N];\n\tint mxd[N],sn[N],cnt;\n\tbool cmp(int a,int b){re mxd[a]<mxd[b];}\n\tvoid dfs1(int u,int fa){//\u627e\u91cd\u5fc3 \n\t\tsiz[u]=1,mx[u]=0;\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tif(v==fa||bk[v])con;\n\t\t\tdfs1(v,u),siz[u]+=siz[v];\n\t\t\tckmax(mx[u],siz[v]);\n\t\t}ckmax(mx[u],S-siz[u]);\n\t\tif(mx[u]<mx[rt])rt=u;\n\t}\n\tvoid dfs2(int u,int fa){//\u8ba1\u7b97mxd \n\t\tmxd[u]=0;\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tif(v==fa||bk[v])con;\n\t\t\tdfs2(v,u),ckmax(mxd[u],mxd[v]);\n\t\t}mxd[u]++;\n\t}\n\tvoid dfs3(int u,int fa,int dep,int dis){//\u8ba1\u7b97\u8def\u5f84\u6743\u503c \n\t\tif(dep>R)re;\n\t\tif(dep>=L)if(dis>ans){ans=0,U=rt,V=u;re;}\n\t\tif(dep<R)ckmax(d[dep],(xxs){u,dis});\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tif(v==fa||bk[v])con;\n\t\t\tdfs3(v,u,dep+1,dis+(e[i].w>=mid?1:-1));\n\t\t}\t\n\t}\n\tvoid sol(int u){\n\t\trt=0,dfs1(u,0);\n\t\tbk[u=rt]=1;\n\t\tcnt=0;\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tif(bk[v])con;\n\t\t\tdfs2(v,u);\n\t\t\tsn[++cnt]=v,w[v]=e[i].w>=mid?1:-1;\n\t\t}\n\t\tsort(sn+1,sn+cnt+1,cmp); \n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tmemset(d,0xc3,(sizeof d[0])*(mxd[sn[i]]+1));\n\t\t\tdfs3(sn[i],u,1,w[sn[i]]);\n\t\t\tif(ans>=0)re;\n\t\t\thd=tl=0;\n\t\t\tfor(int j=max(1,L-mxd[sn[i]]);j<=R-mxd[sn[i]]&&j<=mxd[sn[i-1]];j++){\n\t\t\t\twhile(hd<tl&&c[q[tl-1]]<c[j])tl--;\n\t\t\t\tq[tl++]=j;\n\t\t\t}\n\t\t\tfor(int j=mxd[sn[i]];j;j--){//\u5355\u8c03\u961f\u5217 \n\t\t\t\twhile(hd<tl&&q[hd]+j<L)hd++;\n\t\t\t\tif(R-j<=mxd[sn[i-1]]){\n\t\t\t\t\twhile(hd<tl&&c[q[tl-1]]<c[R-j])tl--;\n\t\t\t\t\tq[tl++]=R-j;\n\t\t\t\t}\n\t\t\t\tif((int)(hd<tl?c[q[hd]].dis:0xc3c3c3c3)+d[j].dis>ans){\n\t\t\t\t\tans=d[j].dis+(hd<tl?c[q[hd]].dis:0xc3c3c3c3);\n\t\t\t\t\tU=d[j].u,V=c[q[hd]].u;\n\t\t\t\t\tmemset(c,0xc3,(mxd[sn[cnt]]+1)*(sizeof d[0]));re;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=mxd[sn[i]];j;j--)ckmax(c[j],d[j]);\n\t\t}\n\t\tmemset(c,0xc3,(mxd[sn[cnt]]+1)*(sizeof d[0]));\n\t\tint tmp=S;\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tif(!bk[v])S=siz[v]<siz[u]?siz[v]:tmp-siz[u],sol(v);\n\t\t\tif(ans>=0)re;\n\t\t}\n\t}\n\tvoid init(){\n\t\tmemset(bk,0,sizeof bk);\n\t\tmemset(c,0xc3,sizeof c);\n\t\tmx[0]=0x3f3f3f3f,S=n;\n\t}\n}\nint half(){\n\tr++;\n\twhile(l<r){\n\t\tmid=(l+r)>>1,ans=-1;\n\t\tDOV::init();\n\t\tDOV::sol(1);\n\t\tif(ans>=0)l=mid+1,ansU=U,ansV=V;\n\t\telse r=mid;\n\t}\n\tprintf(\"%d %d\\n\",ansU,ansV);\n\tre l-1;\n}\nint main(){\n\tn=rd(),L=rd(),R=rd();\n\tfor(int i=1;i<n;i++){\n\t\tint u=rd(),v=rd(),w=rd();\n\t\tckmax(r,w),ckmin(l,w);\n\t\tadd(u,v,w),add(v,u,w);\n\t}\n\thalf();\n\tre 0;\n}\n/*\n\n*/\n```\n\n### $\\text{The End.}$\n",
        "postTime": 1662735832,
        "uid": 346440,
        "name": "FreeTimeLove",
        "ccfLevel": 7,
        "title": "CF150E Freezing with Style"
    },
    {
        "content": "\u4e0e[[WC2010]\u91cd\u5efa\u8ba1\u5212](https://www.luogu.com.cn/problem/P4292)\u633a\u76f8\u4f3c\u7684\u4e00\u9053\u9898\u76ee.\n\n\u524d\u8005\u53ef\u4ee5\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u5047\u8bbe\u4e8c\u5206\u7684\u503c\u4e3a$mid$,\u5c06\u6bcf\u6761\u8fb9\u8fb9\u6743$-mid$\uff0c\u5224\u65ad\u6709\u6ca1\u6709\u957f\u5ea6\u5728$\\left[L,R\\right]$\u4e4b\u95f4\u4e14\u8fb9\u6743\u548c$\\geq 0$\u7684\u8def\u5f84.\n\n\u800c\u672c\u9898\u6839\u636e\u4e2d\u4f4d\u6570\u7684\u5b9a\u4e49\u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\uff0c\u5047\u8bbe\u4e8c\u5206\u7684\u503c\u4e3a$mid$,\u5c06\u8fb9\u6743$\\geq mid$\u7684\u8fb9\u770b\u4f5c$+1$,\u5c06\u8fb9\u6743$<mid$\u7684\u8fb9\u770b\u4f5c$-1$,\u5224\u65ad\u6709\u6ca1\u6709\u957f\u5ea6\u5728$\\left[L,R\\right]$\u4e4b\u95f4\u4e14\u8fb9\u6743\u548c$\\geq 0$\u7684\u8def\u5f84.\n\n\u8003\u8651\u70b9\u5206\u6cbb\uff0c\u679a\u4e3e\u8def\u5f84\u7684\u4e00\u7aef\uff0c\u7136\u540e\u5728\u5b83\u524d\u9762\u7684\u5b50\u6811\u4e2d\u5bfb\u627e\u6709\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u53e6\u4e00\u7aef,\u5047\u8bbe\u5f53\u524d\u8fd9\u4e2a\u70b9\u7684\u6df1\u5ea6\u4e3a$x$,\u5728\u5b83\u524d\u9762\u7684\u5b50\u6811\u7684\u53e6\u4e00\u7aef\u6df1\u5ea6\u9700\u8981\u5728$[L-x,R-x]$\u4e4b\u95f4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6df1\u5ea6\u4fdd\u5b58\u6700\u5927\u503c\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217.\n\n\u4e4b\u540e\u679a\u4e3e\u5b8c\u4e00\u4e2a\u5b50\u6811\u5c06\u5b83\u4eec\u52a0\u5165\u5907\u9009\u7ec8\u70b9.\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\times log^2 n)$\n\n```cpp\nint n,_n,L,R,ansu,ansv;\nint val[N];\nint siz[N];\nint vis[N],cxy=50;\nint dis[N],dep[N],que[N],fa[N],cnt[N],rev[N],ljt[N];\nint M;\nint g[N],gg[N];\nvector<pii>e[N];\nint bfs(int G)\n{\n\tint st=1,en=0;que[++en]=G;fa[G]=0;\n\tfor(;st<=en;st++) \n\t{\n\t\tint u=que[st];\n\t\tfor(auto qwq:e[u]) \n\t\t{\n\t\t\tint v=qwq.fi;\n\t\t\tif(vis[v]==cxy) continue;\n\t\t\tif(v!=fa[u]) \n\t\t\t\tfa[v]=u,que[++en]=v,dep[v]=dep[u]+1,cnt[v]=cnt[u]+(qwq.se<val[M]?-1:1);\n\t\t}\n\t}\n\treturn en;\n}\nint find_gra(int G)\n{\n\tint Mn=inf,Mnpos;\n\tint en=bfs(G);\n\tL(t,1,en)\n\t{\n\t\tint u=que[t];\n\t\tint mx=0;siz[u]=1;\n\t\tfor(auto qwq:e[u])\n\t\t{\n\t\t\tint v=qwq.fi;\n\t\t\tif(vis[v]==cxy||v==fa[u]) continue;\n\t\t\tsiz[u]+=siz[v];\n\t\t\tckmax(mx,siz[v]);\n\t\t}\n\t\tckmax(mx,en-siz[u]);\n\t\tif(mx<Mn) Mn=mx,Mnpos=u;\n\t}\n\treturn Mnpos;\n}\nint calc(int u) \n{\n\tint en=bfs(u);\n\tR(i,1,en) if(rev[dep[que[i]]]<cnt[que[i]]) rev[dep[que[i]]]=cnt[que[i]],gg[dep[que[i]]]=que[i];\n\tint ok=0,bg=1,ed=0;\n\tfor(int i=en,j=0;i;i--) \n\t{\n\t\tint ql=L-i,qr=R-i;if(ql>_n) break; \n\t\tckmax(j,ql);\n\t\tfor(;j<=qr&&j<=_n;j++) {for(;bg<=ed&&dis[j]>dis[ljt[ed]];ed--);ljt[++ed]=j;}\n\t\tfor(;bg<=ed&&ljt[bg]<ql;bg++);\n\t\tif(bg<=ed&&dis[ljt[bg]]+rev[i]>=0) {ansu=g[ljt[bg]],ansv=gg[i],ok=1;break;}\n\t}\n\t_n=max(_n,en);\n\tR(i,1,en) {if(rev[i]>dis[i])dis[i]=rev[i],g[i]=gg[i];rev[i]=-inf;}\n\treturn ok;\n}\n\nint solve(int u)\n{\n\tint G=find_gra(u);\n\tdep[G]=cnt[G]=0;\n\tint en=bfs(G);\n\tvis[G]=cxy;dis[0]=_n=0;g[0]=G;\n\tR(i,1,en) dis[i]=rev[i]=-inf;\n\tfor(auto qwq:e[G]) \n\t{\n\t\tint v=qwq.fi;\n\t\tif(vis[v]==cxy) continue; \n\t\tif(calc(v)) return 1;\n\t}\n\tfor(auto qwq:e[G]) \n\t{\n\t\tint v=qwq.fi;\n\t\tif(vis[v]==cxy) continue;\n\t\tif(solve(v)) return 1;\n\t}\n\treturn 0;\n}\ninline int check() {return solve(1);}\nsigned main()\n{\n\tn=read(),L=read(),R=read();\n\tR(i,1,n-1) \n\t{\n\t\tint u=read(),v=read();val[i]=read();\n\t\te[u].pb(mkp(v,val[i])),e[v].pb(mkp(u,val[i]));\n\t}\n\tsort(val+1,val+n);\n\tint l=1,r=n-1;\n\twhile(l<=r) \n\t{\n\t\tM=(l+r)>>1;cxy--;\n\t\tif(check()) l=M+1;else r=M-1;\n\t}\n\tM=r;cxy--;check();\n\tprintf(\"%lld %lld\\n\",ansu,ansv);\n}\n```\n",
        "postTime": 1614856269,
        "uid": 115779,
        "name": "\u6781\u5bd2\u795e\u51b0",
        "ccfLevel": 0,
        "title": "FreezingwithStyle"
    }
]