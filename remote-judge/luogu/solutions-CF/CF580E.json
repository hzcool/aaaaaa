[
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u5176\u5b9e\u5f88\u7b80\u5355\u554a\u2026\u2026\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\u57fa\u672c\u4e0a\u90fd\u505a\u70e6\u4e86\uff0c\u4e00\u4e2amemcmp\u7684\u6c34\u9898\uff0c\u600e\u4e48\u8fd8\u7528\u5230\u4e86\u4ec0\u4e48\u7ebf\u6bb5\u6811\u7ef4\u62a4\u54c8\u5e0c\uff1f\u5f00\u73a9\u7b11\u3002\u3002\u3002\n\n\u6ce8\u610f\u5230\u6240\u6709\u6570\u5b57\u90fd\u57280~9\u4e4b\u95f4\uff0c\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u628a\u653e\u5728\u5b57\u7b26\u6570\u7ec4\u91cc\uff0c\u7136\u540e\u6bcf\u6b21\u66f4\u65b0\u76f4\u63a5memcpy\uff0c\u67e5\u8be2memcmp\u3002\n\n\u7136\u540e\u5c31\u7ed3\u675f\u4e86\uff1f\n\n\u4e0a\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nchar s[100100];\nint main(){\n    int n,m,k,l,r,c,i,f;\n    scanf(\"%d%d%d%s\",&n,&m,&k,s+1);//\u8bfb\u5165\u521d\u59cb\u5e8f\u5217\uff1a\u76f4\u63a5\u8f6c\u6210char\n    m+=k;\n    for(i=0;i<m;i++){\n        scanf(\"%d%d%d%d\",&f,&l,&r,&c);\n        if(f==1) memset(s+l,c+'0',r-l+1);//\u4fee\u6539\n        else puts(memcmp(s+l,s+l+c,r-l-c+1)?\"NO\":\"YES\");//\u67e5\u8be2\n        //\u54ea\u6709\u90a3\u4e48\u70e6\uff1f\n    }\n}\n```",
        "postTime": 1563085592,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF580E \u3010Kefa and Watch\u3011"
    },
    {
        "content": "## \u7ebf\u6bb5\u6811+Hash\n\u542c\u8bf4\u8fd9\u65b9\u6cd5\u6bd4\u4e0d\u8fc7\u66b4\u529b\uff1f\uff08\u96fe\uff09\n### \u89e3\u9898\u8fc7\u7a0b\n#### \u9996\u5148\u8003\u8651\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5feb\u901f\u6c42\u89e3\u4e00\u4e2a\u5b50\u4e32\u662f\u4e0d\u662f\u53e6\u4e00\u4e2a\u4e32\u7684\u5faa\u73af\u8282\u3002  \n\u6b64\u5904\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a    \n\u5047\u8bbe S \u4e3a \u7684\u957f\u5ea6\u4e3a n \u3002\n\u53ea\u8981\u5224\u65ad S[1\u2026n-d+1] \u548c S[d+1\u2026n] \u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002  \n\u7b80\u5355\u7684\u60f3\uff0c\u5047\u8bbe\u5f53\u524d\u5faa\u73af\u8282\u662f$k$\uff0c\u90a3\u4e48\u5c31\u6709\uff1a  \n$a$  \n$a*ch+b$  \n$a*ch^2+b*ch+c$  \n$a*ch^3+b*ch^2+c*ch+d$  \n$a*ch^4+b*ch^3+c*ch^2+d*ch+e$  \n$a*ch^5+b*ch^4+c*ch^3+d*ch^2+e*ch+f$  \n\u5fc5\u4ece$k$\u4e2a\u5b57\u6bcd\u5faa\u73af\uff0c\u5047\u8bbe$k=2$.\u90a3\u4e48\u5c31\u6709:  \n$a$  \n$a*ch+b$  \n$a*ch^2+b*ch+a$  \n$a*ch^3+b*ch^2+a*ch+b$  \n$a*ch^4+b*ch^3+a*ch^2+b*ch+a$  \n$a*ch^5+b*ch^4+a*ch^3+b*ch^2+a*ch+b$  \n\u53d1\u73b0\u524d\u9762\u4e24\u4e2a\u548c\u540e\u9762\u4e24\u4e2aHash\u503c\u76f8\u7b49\uff0c\u518d\u901a\u8fc7\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u53ef\u4ee5\u8bc1\u660e\u3002  \n\u5176\u5b9e\u4e5f\u5f88\u597d\u60f3\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u901a\u8fc7Hash[n]-Hash[n-d]\u76f8\u51cf\u6765\u5224\u65ad\u662f\u4e0d\u662fs[0]-s[d]\u7684\u591a\u5c11$ch$\u500d\uff0c\u5fc5\u987b\u6ee1\u8db3\u540e\u9762\u51e0\u4e2a\u76f8\u7b49\uff0c\u56e0\u4e3a\u53ea\u6709\u662f\u5faa\u73af\u8282\uff0c\u624d\u80fd\u5c06\u524d\u9762\u7684\u62b5\u6d88\u6389\u3002  \n#### \u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5904\u7406\u8d4b\u503c\u4e0eHash\u503c\u4e4b\u95f4\u7684\u5173\u7cfb\n\u4e00\u6bb5\u7684\u4e00\u6bb5\u7684\u8d4b\u503c\uff0c\u67e5\u627e\u4e5f\u662f\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u4e00\u4e2aHash\u503c\u3002  \n\u6bcf\u4e2a\u70b9\u5b58\u5f53\u524d\u7684Hash\u503c\uff0c\u4f46\u662f\u8fd9\u91cc\u5c31\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u662f\u5b58\u7684\u4ece$ch^0$\u5f00\u59cb\u7684\uff0c\u90a3\u4e48\u600e\u4e48\u624d\u80fd\u8f6c\u79fb\u5230\u7236\u4eb2\u8282\u70b9\u5462\uff1f  \n```\nkano[x].h=((kano[x<<1].h*Pow[kano[x<<1|1].rkano[x<<1|1].l+1]+kano[x<<1|1].h)%mod+mod)%mod;\n\n```\n\u5de6\u513f\u5b50\u91cc\u7684\u503c\u548c\u4ed6\u5728\u7236\u4eb2\u8282\u70b9\u5e94\u5f53\u662f\u7684\u503c\u5dee\u4e86\u4ec0\u4e48\u5462\uff1f  \n\u6839\u636eHash\u51fd\u6570\u7684\u5b9a\u4e49\uff1a$Hash(l,r)=Hash[r]-Hash[l-1]*p^{r-l+1}$\n\u6240\u4ee5\u8bf4\uff0c\u5de6\u513f\u5b50\u91cc\u7684\u503c\u5c31\u5dee\u4e86\u4e58\u4e0a\u4e00\u4e2a$ch^{sizeof(rightson)}$  \n\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u90a3$pushdown$\u53c8\u8be5\u5982\u4f55\u5462\uff1f  \n```\nvoid pushdown(int x){\n\tif(kano[x].lazy+1){\n\t\tkano[x<<1].lazy=kano[x<<1|1].lazy=kano[x].lazy;\n\t\tkano[x<<1].h=Pow2[kano[x<<1].r-kano[x<<1].l]*kano[x].lazy%mod;\n\t\tkano[x<<1|1].h=Pow2[kano[x<<1|1].r-kano[x<<1|1].l]*kano[x].lazy%mod;\n\t\tkano[x].lazy=-1;\n\t}\n\treturn ;\n}\n```\n$lazy$\u91cc\u5b58\u7684\u662f\u5c06\u8981\u53d8\u6210\u7684\u503c\uff0c\u90a3\u4e48\u5982\u4f55\u5c06\u8fd9\u4e9b\u503c\u8d4b\u5230\u513f\u5b50\u4e2d\u5462\uff1f  \n\u53ef\u4ee5\u770b\uff0c\u5728\u6ca1\u6709\u8d4b\u503c\u524d\u5047\u8bbe\u5de6\u513f\u5b50\u7684\u503c\u662f:\n$x*ch^3+y*ch^2+z*ch$\uff0c  \n\u90a3\u4e48\u8d4b\u503c\u4e4b\u540e\u5c31\u5e94\u8be5\u662f:$k*ch^3+k*ch^2+k*ch$.\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5c31\u662f\u5728$k$\u7684\u57fa\u7840\u4e0a$*$\u4e86\u4e00\u4e2a$ch^3+ch^2+ch$,\u56e0\u6b64\u5c31\u53ef\u4ee5\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a$ch^x+xh^{x-1}+ch^{x-2}+\u2026\u2026ch$\u7684\u4e00\u4e2a\u4e1c\u897f\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u5730$pushdown$\u3002\n#### \u6ce8\u610f\u4e8b\u9879\n1.\u6709\u9012\u5f52\u64cd\u4f5c\u65f6\uff0c\u4e00\u5b9a\u90fd\u4e0b\u4f20$lazy$\u3002  \n2.\u6ce8\u610f\u8fb9\u754c\u3002  \n3.\u6211\u6bcf\u6b21\u4fee\u6539\u65f6\u90fd\u5c06k\u52a0\u4e861\uff0c\u9632\u6b620\uff0c$lazy$\u4e3a-1\uff0c\u9632\u6b620\u7684\u51fa\u73b0\u3002\n#### \u53c2\u8003\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int b=17;\nconst int N=1e5+50;\nconst int mod=1e9+9;\ntypedef unsigned long long ULL;\nchar s[N];\nint n,m,opt,k,l,r;\nULL Pow[N],Pow2[N];\nstruct Kano{\n\tint l,r,lazy;\n\tULL h;\n}kano[N*6];\nvoid pushup(int x){\n\tkano[x].h=((kano[x<<1].h*Pow[kano[x<<1|1].r-kano[x<<1|1].l+1]+kano[x<<1|1].h)%mod+mod)%mod;\n}\nvoid pushdown(int x){\n\tif(kano[x].lazy+1){\n\t\tkano[x<<1].lazy=kano[x<<1|1].lazy=kano[x].lazy;\n\t\tkano[x<<1].h=Pow2[kano[x<<1].r-kano[x<<1].l]*kano[x].lazy%mod;\n\t\tkano[x<<1|1].h=Pow2[kano[x<<1|1].r-kano[x<<1|1].l]*kano[x].lazy%mod;\n\t\tkano[x].lazy=-1;\n\t}\n\treturn ;\n}\nvoid build(int x,int l,int r){\n\tkano[x].l=l;kano[x].r=r;kano[x].lazy=-1;\n\tif(l==r){\n\t\tkano[x].h=s[l]-'0'+1;\n\t\treturn;\n\t}\n\tint mid=(kano[x].l+kano[x].r)>>1;\n\tbuild(x<<1,l,mid),build(x<<1|1,mid+1,r);\n\tpushup(x);\n}\nvoid add(int x,int l,int r,int a){\n\tif(kano[x].l==l&&kano[x].r==r){\n\t\tkano[x].lazy=a;\n\t\tkano[x].h=Pow2[kano[x].r-kano[x].l]*a%mod;\n\t\treturn;\n\t}\n\tpushdown(x);\n\tint mid=(kano[x].l+kano[x].r)>>1;\n\tif(mid>=r) add(x<<1,l,r,a);\n\telse if(mid<l) add(x<<1|1,l,r,a);\n\telse add(x<<1,l,mid,a),add(x<<1|1,mid+1,r,a);\n\tpushup(x);\n}\nULL query(int x,int l,int r){\n\tif(l>r) return 0;\n\tif(kano[x].l==l&&kano[x].r==r)\n\t\treturn kano[x].h;\n\tpushdown(x);\n\tint mid=(kano[x].l+kano[x].r)>>1;\n\tif(mid>=r) return query(x<<1,l,r);\n\telse if(mid<l) return query(x<<1|1,l,r);\n\telse return (query(x<<1,l,mid)*Pow[r-mid]+query(x<<1|1,mid+1,r))%mod;\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tm+=k;\n\tscanf(\"%s\",s+1);\n\tPow[0]=Pow2[0]=1;\n\tfor(int i=1;i<=n;i++) Pow[i]=Pow[i-1]*b%mod,Pow2[i]=(Pow2[i-1]*b+1)%mod;\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d%d\",&opt,&l,&r,&k);\n\t\tif(opt==1) add(1,l,r,k+1);\n\t\telse printf(\"%s\\n\",query(1,l,r-k)==query(1,l+k,r)?\"YES\":\"NO\");\n\t}\n}\n```\n\n\u542c\u8bf4\u8fd9\u4e1c\u897f\u6253\u8d77\u6765\u5f88\u723d\uff0c\u8c03\u8d77\u6765\u66f4\u723d.(\u96fe)",
        "postTime": 1575335949,
        "uid": 170518,
        "name": "\u5b50\u5f52",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF580E \u3010Kefa and Watch\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762](https://www.luogu.com.cn/problem/CF580E)\n\n[\u539f\u9898\u94fe\u63a5](https://codeforces.com/problemset/problem/580/E)\n\n\u849f\u84bb\u592a\u7b28\u770b\u4e0d\u61c2\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u81ea\u5df1\u6765\u5199\u4e00\u53d1\u3002\n\n## \u9898\u610f\u5206\u6790\n\u9996\u5148\uff0c\u95ee\u9898\u7684\u5bfc\u5411\u6027\u975e\u5e38\u660e\u663e\uff0c\u65e2\u8981\u5224\u65ad\u5faa\u73af\u8282\u7684\u5b58\u5728\u6027\uff0c\u53c8\u8981\u652f\u6301\u533a\u95f4\u64cd\u4f5c\uff0c\u5bb9\u6613\u60f3\u5230\u7528**\u7ebf\u6bb5\u6811\u7ef4\u62a4\u54c8\u5e0c\u503c**\u3002\n\n\u73b0\u5728\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\uff0c\u7a76\u7adf\u600e\u6837\u7ef4\u62a4\u533a\u95f4\u7684\u54c8\u5e0c\u503c\uff0c\u4ee5\u53ca\u652f\u6301\u533a\u95f4\u8986\u76d6\u64cd\u4f5c\u3002\n\n## \u54c8\u5e0c\u503c\u7684\u5904\u7406\n### \u7ef4\u62a4\n\u9996\u5148\uff0c\u65e2\u7136\u6211\u4eec\u8981\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u5f53\u7136\u662f\u7ef4\u62a4\u5bf9\u5e94\u533a\u95f4\u7684\u54c8\u5e0c\u503c\uff0c\n\n\u4f46\u662f\uff0c\u5b50\u8282\u70b9\u66f4\u65b0\u7236\u8282\u70b9\u4fe1\u606f\u7684\u65b9\u5f0f\u4e0d\u518d\u662f\u7b80\u5355\u7684\u52a0\u548c\u3002\n\n\u8ba9\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e0b\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u8fc7\u7a0b\uff1a\n\n```cpp\null hassh(char* s)\n{\n\tull ans=0;\n\tfor(int i=1;i<=len;++i)\n\t\tans=ans*p+s[i];\n\treturn ans;\n}\n```\n\n\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u6837\uff0c\u5176\u4e2d $p$ \u4e3a\u67d0\u4e2a\u57fa\u6570\u3002\n\n\u6211\u4eec\u901a\u5e38\u54c8\u5e0c\u7684\u8fc7\u7a0b\uff0c\u662f**\u4ece\u5de6\u5f80\u53f3**\u54c8\u5e0c\uff0c\u5728\u904d\u5386\u5230\u6bcf\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u65f6\uff0c\u5148\u5c06\u524d\u7f00\u7684\u54c8\u5e0c\u503c\u4e58\u4e0a\u57fa\u6570\uff0c\u518d\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\u81ea\u8eab\u7684\u6743\u503c\u3002\n\n\u5982\u679c\u628a\u67d0\u4e2a\u524d\u7f00\u7684\u54c8\u5e0c\u503c\u5c55\u5f00\u6765\u770b\uff0c\u5927\u81f4\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u5f0f\u5b50\uff1a\n\n$p^{i-1}\\cdot s[1]+p^{i-2}\\cdot s[2]+\\dots +s[i]$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u5173\u4e8e $p$ \u7684\u591a\u9879\u5f0f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5176\u4e58\u4e0a\u7684 $p$ \u7684\u5e42\u7684\u5927\u5c0f\uff0c\u5373\u7cfb\u6570\uff0c\u4e0e\u5176\u5728\u5b57\u7b26\u4e32\u4e2d\u7684**\u4f4d\u7f6e**\u5bc6\u5207\u76f8\u5173\u3002\n\n\u8fd9\u542f\u793a\u6211\u4eec\uff0c\u5c06\u4e24\u6bb5\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c**\u7b80\u5355\u76f8\u52a0**\u7edd**\u4e0d\u7b49\u4e8e**\u4e8c\u8005**\u62fc\u63a5**\u800c\u6210\u7684\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\uff0c\n\n\u56e0\u4e3a\u5728\u62fc\u63a5\u6210\u7684\u65b0\u4e32\u4e4b\u4e2d\uff0c**\u539f\u6765\u4e24\u4e32\u4e2d\u5b57\u6bcd\u7684\u76f8\u5bf9\u4f4d\u7f6e\u7684\u6539\u53d8\uff0c\u4f1a\u5f15\u8d77\u5176\u5728\u65b0\u4e32\u7684\u54c8\u5e0c\u503c\u8868\u8fbe\u5f0f\u4e2d\u5bf9\u5e94\u7cfb\u6570\u7684\u6539\u53d8**\u3002\n\n\u90a3\u4e48\uff0c\u82e5\u6211\u4eec\u8981\u5c06\u5de6\u53f3\u533a\u95f4\u7684\u54c8\u5e0c\u503c\u5408\u5e76\u8be5\u600e\u4e48\u505a\u5462\uff1f\n\n\u9996\u5148\uff0c\u5de6\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26**\u5408\u5e76\u540e**\u5bf9\u5e94\u7684\u7cfb\u6570\u4e00\u5b9a\u5927\u4e8e\u53f3\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\n\n\u56e0\u4e3a\u6b63\u5e38\u7684\u54c8\u5e0c\u987a\u5e8f\u4ece\u5de6\u5f80\u53f3\uff0c\u8d8a\u5148\u5904\u7406\u7684\u5b57\u6bcd\u5728\u5f80\u540e\u7684\u8fc7\u7a0b\u4e2d\u4e58\u4e0a\u57fa\u6570\u7684\u6b21\u6570\u5c31\u8d8a\u591a\uff0c\u4ece\u5148\u524d\u7684\u8868\u8fbe\u5f0f\u4e2d\u4e5f\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e00\u70b9\u3002\n\n\u5de6\u53f3\u533a\u95f4\u5408\u5e76\u4e4b\u540e\uff0c\u5bf9\u4e8e\u5de6\u533a\u95f4\uff0c\u76f8\u5f53\u4e8e\u5728\u5176\u540e\u6dfb\u52a0\u4e86\u4e00\u4e2a**\u53f3\u533a\u95f4\u957f\u5ea6**\uff08\u8bb0\u4e3a $len$\uff09\u7684**\u540e\u7f00**\uff0c\n\n\u90a3\u4e48\u5047\u5982\u6211\u4eec\u4ece\u5de6\u533a\u95f4\u672b\u7aef\u5f00\u59cb\uff0c\u7ee7\u7eed\u8fdb\u884c\u54c8\u5e0c\u7684\u8fc7\u7a0b\uff0c\u5de6\u533a\u95f4\u7684\u5b57\u7b26\u6bcf\u6b21\u90fd\u4f1a\u591a\u4e58\u4e00\u4e2a\u57fa\u6570\uff0c\n\n\u4e0d\u96be\u8bc1\u660e\uff0c\u5de6\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u603b\u5171\u4f1a\u518d**\u4e58\u4e0a** $p^{len}$\uff0c\u800c\u53f3\u533a\u95f4\u7684\u5b57\u7b26\u7b49\u6548\u4e8e\u76f8\u5bf9\u4f4d\u7f6e**\u4e0d\u53d8**\uff0c\u7cfb\u6570\u81ea\u7136\u4e0d\u53d8\u3002\n\n\u56e0\u6b64\uff0c\u7ebf\u6bb5\u6811 `pushup` \u7684\u64cd\u4f5c\u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n```cpp\nvoid pushup(int p)\n{\n    h(p)=(h(p<<1)*pw[r(p<<1|1)-l(p<<1|1)+1]%mod+h(p<<1|1))%mod;\n}\n```\n### \u66f4\u65b0\n\u7ef4\u62a4\u7684\u95ee\u9898\u7ec8\u4e8e\u89e3\u51b3\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8986\u76d6\u64cd\u4f5c\u5462\uff1f\n\n\u8fd8\u662f\u518d\u56de\u770b\u54c8\u5e0c\u7684\u8868\u8fbe\u5f0f\uff0c\n\n$p^{i-1}\\cdot s[1]+p^{i-2}\\cdot s[2]+\\dots +s[i]$\n\n\u533a\u95f4\u8986\u76d6\u76f8\u5f53\u4e8e\u628a\u67d0\u90e8\u5206\u7684\u6240\u6709\u5b57\u7b26\u66ff\u6362\u4e3a\u540c\u4e00\u5b57\u7b26\uff0c\u5373\uff1a\n\n$p^{i-1}\\cdot ch+p^{i-2}\\cdot ch+\\dots +ch$\n\n\u8ba1\u7b97\u548c\u539f\u54c8\u5e0c\u503c\u7684\u5dee\u91cf\u6765\u66f4\u65b0\u663e\u7136\u4e0d\u73b0\u5b9e\uff0c\u4f46\u662f\u65b0\u7684\u8fd9\u6bb5\u54c8\u5e0c\u503c\u5c31\u7b49\u4e8e $ch$ \u4e58\u4e0a $p$ \u7684**\u5e42\u7684\u524d\u7f00\u548c**\uff0c\u5728\u9884\u5904\u7406 $p$ \u7684\u5e42\u65f6\u987a\u4fbf\u5904\u7406\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u800c\u8ba1\u7b97\u65f6\u5177\u4f53\u53d6\u957f\u5ea6\u4e3a\u591a\u5c11\u7684\u524d\u7f00\u548c\u663e\u7136\u4e5f\u4e0e\u533a\u95f4\u957f\u5ea6\u6709\u5173\uff0c\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $len$ \u7684\u533a\u95f4\uff0c\u6211\u4eec\u8981\u53d6\u7684\u524d\u7f00\u548c\u4e3a $p^{len-1}+p^{len-2}+\\dots+1$\u3002\n\n### \u67e5\u8be2\n\u5728\u67e5\u8be2\u6bcf\u4e00\u6bb5\u54c8\u5e0c\u503c\u65f6\u8fd8\u8981\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\uff0c\u5728\u7ebf\u6bb5\u6811\u7684\u5199\u6cd5\u4e0a\uff0c\u6211\u4eec\u8981\u628a\u67e5\u8be2\u533a\u95f4\u662f\u5426\u628a\u5de6\u53f3\u8282\u70b9**\u5355\u72ec\u8986\u76d6**\u5206\u5f00\u8ba8\u8bba\uff0c\n\n\u5047\u5982\u5e76\u4e0d\u662f\u5355\u72ec\u8986\u76d6\uff0c\u800c\u662f\u8986\u76d6\u90e8\u5206\u5b58\u5728**\u76f8\u4ea4**\uff0c\u6b64\u65f6\u5c31\u8981\u76f8\u5f53\u4e8e\u8981\u628a\u5de6\u53f3\u533a\u95f4\u7684\u54c8\u5e0c\u503c**\u5408\u5e76**\u4e86\uff0c\u4e8e\u662f\u8981\u7ed9\u5de6\u8282\u70b9\u7684\u67e5\u8be2\u7ed3\u679c\u4e58\u4e0a\u65b0\u7684\u7cfb\u6570\u3002\n\n\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n```cpp\null ask(int p,int l,int r)\n{\n    if(l>r)return 0;\n    if(l<=l(p)&&r>=r(p))return h(p);\n    spread(p);\n    int mid=(l(p)+r(p))>>1;\n    if(mid>=r)return ask(p<<1,l,r)%mod;\n    else if(mid<l)return ask(p<<1|1,l,r)%mod;\n    else return (ask(p<<1,l,mid)*pw[r-(mid+1)+1]%mod+ask(p<<1|1,mid+1,r))%mod;\n}\n```\n\n\u4e5f\u53ef\u4ee5\u662f\u8fd9\u6837\uff1a\n\n```cpp\null ask(int p,int l,int r)\n{\n    if(l>r)return 0;\n    if(l<=l(p)&&r>=r(p))return h(p);\n    spread(p);\n    int mid=(l(p)+r(p))>>1;\n    if(l<=mid&&r>mid)return (ask(p<<1,l,mid)*pw[r-(mid+1)+1]%mod+ask(p<<1|1,mid+1,r))%mod;\n    else\n    {\n        if(l<=mid)return ask(p<<1,l,r)%mod;\n        else if(r>mid)return ask(p<<1|1,l,r)%mod;\n    }\n}\n```\n\n## \u5faa\u73af\u8282\u7684\u67e5\u8be2\n\u7ec8\u4e8e\u5230\u4e86\u6700\u540e\u7684\u95ee\u9898\uff0c\u5982\u4f55\u67e5\u8be2\u5faa\u73af\u8282\u3002\n\n\u8bb8\u591a\u9898\u89e3\u90fd\u63d0\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n\u82e5\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$ \u5b58\u5728\u957f\u4e3a $k$ \u7684\u5faa\u73af\u8282\uff0c\u5219\u6709 $s[1+k,n]=s[1,n-k]$\u3002\n\n\u73b0\u7528\u76f4\u89c2\u800c\u7b80\u5355\u7684\u65b9\u6cd5\u8bc1\u660e\u8fd9\u70b9\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u4e2d\u5bf9\u4e8e\u5b58\u5728\u957f\u5ea6\u4e3a $k$ \u7684\u5faa\u73af\u8282\u7684\u5b9a\u4e49\u662f\uff1a$\\forall i\\in [1,n-k],s_i=s_{i+k}$\u3002\n\n\uff08ps\uff1a\u7ffb\u8bd1\u4e2d\u6ca1\u6709\uff0c\u8bf7\u770b\u539f\u9898\u9762\u3002\uff09\n\n\u73b0\u5728\u6211\u4eec\u628a\u4e24\u4efd**\u76f8\u540c\u5b57\u7b26\u4e32** $s$ \u9519\u5f00 $k$ \u4e2a\u5355\u4f4d**\u5bf9\u9f50**\uff0c\u90a3\u4e8c\u8005\u7684**\u4ea4\u96c6**\u5c31\u5206\u522b\u4e3a $s[1+k,n]$ \u548c $s[n-k,n]$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bh4o9x50.png)\n\n\n\u5982\u56fe\uff0c\u6211\u4eec\u7528**\u4e0b\u6807\u4ee3\u66ff\u5b57\u6bcd**\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u8bb0\u4e0a\u9762\u7684\u5b57\u7b26\u4e32\u4e3a $s_1$\uff0c\u4e0b\u9762\u7684\u4e3a$s_2$\uff0c\u5176\u5b9e\u672c\u8d28\u662f**\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32**\u3002\n\n\u4ee5 $k=2$ $n=8$ \u4e3a\u4f8b\uff0c$s_1[3,8]$ \u5373 $s[1+k,n]$\uff0c$s_2[1,6]$ \u5373 $s[1,n-k]$\u3002\n\n\u6839\u636e\u5faa\u73af\u8282\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u6709 $s_1[1,2]=s_1[3,4]$\uff0c\u53c8 $s_1[1,2]=s_2[1,2]$\uff0c\u5219 $s_1[3,4]=s_2[1,2]$\u3002\n\n\u540c\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u8bc1\u660e $s_1[5,6]=s_2[3,4]$ \uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u7ec8\u4f1a\u8bc1\u660e $s[1+k,n]=s[1,n-k]$\u3002\n\n\u63a8\u5e7f\u5230\u4e00\u822c\u7684\u60c5\u51b5\uff0c\u4e0d\u96be\u53d1\u73b0 $s[1,k]=s[k+1,2k]=s[2k+1,3k]=\\dots =s[n-2k+1,n-k]$\uff0c\n\n\n\u4e5f\u5c31\u662f\u4ece $1$ \u5f00\u59cb\u7684\u76f8\u90bb $k$ \u957f\u6bb5\u90fd\u76f8\u7b49\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u540c\u6837\u53ea\u9700\u8981\u5c06\u4e24\u4e2a $s$ \u9519\u5f00 $k$ \u4f4d\u5bf9\u9f50\uff0c\n\n**\u7531\u4e8e\u76f8\u90bb $k$ \u957f\u6bb5\u76f8\u7b49\uff0c\u9519\u4f4d\u4e4b\u540e\u539f\u5148\u76f8\u90bb\u6bb5\u5c31\u53d8\u6210\u4e0a\u4e0b\u5bf9\u9f50\uff0c\u4e0a\u4e0b\u5bf9\u9f50\u7684\u90e8\u5206\u90fd\u76f8\u7b49\uff0c\u81ea\u7136\u6709 $s[1+k,n]=s[1,n-k]$ \u6210\u7acb**\u3002\n\n\u8fd9\u4e2a\u8bc1\u660e\u601d\u8def\u548c KMP \u7b97\u6cd5\u6c42\u5b57\u7b26\u4e32\u5faa\u73af\u5143\u7b97\u6cd5\u7684\u8bc1\u660e\u601d\u8def\u57fa\u672c\u4e00\u81f4\uff0c\u53ef\u4ee5\u53c2\u9605\u84dd\u4e66\u3002\n\n\u4e86\u89e3\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u4e4b\u540e\uff0c\u6bcf\u6b21\u8be2\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u8981\u67e5\u8be2\u533a\u95f4 $[l,r-d]$ \u548c $[l+d,r]$ \u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\n\n## \u9644\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define maxn 100010\nusing namespace std;\ntypedef unsigned long long ull;\nconst int mod=1e9+9;\nconst int p=1331;\nint n,m,k;\nchar a[maxn];\null pw[maxn],pre[maxn];//pw\u5b58\u50a8p\u7684\u5e42\uff0cpre\u4e3apw\u7684\u524d\u7f00\u548c\nstruct seg_tree{\n    int l,r,tag;//tag\u7684\u610f\u4e49\u662f\u6807\u8bb0\u533a\u95f4\u8986\u76d6\u64cd\u4f5c\u7684\u8986\u76d6\u503c\n    ull h;\n    #define l(x) tree[x].l\n    #define r(x) tree[x].r\n    #define tag(x) tree[x].tag\n    #define h(x) tree[x].h\n}tree[maxn<<2];\nvoid pushup(int p)\n{\n    h(p)=(h(p<<1)*pw[r(p<<1|1)-l(p<<1|1)+1]%mod+h(p<<1|1))%mod;\n}\nvoid build(int p,int l,int r)\n{\n    l(p)=l,r(p)=r,h(p)=0,tag(p)=-1;\n    if(l==r){h(p)=a[l]-'0';return;}//\u8bb0\u5f97\u8f6c\u6210\u6570\u5b57\u5927\u5c0f\uff0c\u56e0\u4e3atag\u662f\u6570\u5b57\n    int mid=(l+r)>>1;\n    build(p<<1,l,mid);\n    build(p<<1|1,mid+1,r);\n    pushup(p);\n}\nvoid spread(int p)\n{\n    if(tag(p)!=-1)\n    {\n        tag(p<<1)=tag(p<<1|1)=tag(p);\n        h(p<<1)=tag(p)*pre[r(p<<1)-l(p<<1)]%mod;\n        h(p<<1|1)=tag(p)*pre[r(p<<1|1)-l(p<<1|1)]%mod;\n        tag(p)=-1;\n    }\n}\nvoid change(int p,int l,int r,int d)\n{\n    if(l<=l(p)&&r>=r(p))\n    {\n        h(p)=d*pre[r(p)-l(p)]%mod;\n        tag(p)=d;\n        return;\n    }\n    spread(p);\n    int mid=(l(p)+r(p))>>1;\n    if(l<=mid)change(p<<1,l,r,d);\n    if(r>mid)change(p<<1|1,l,r,d);\n    pushup(p);\n}\null ask(int p,int l,int r)\n{\n    if(l>r)return 0;\n    if(l<=l(p)&&r>=r(p))return h(p);\n    spread(p);\n    int mid=(l(p)+r(p))>>1;\n    if(l<=mid&&r>mid)return (ask(p<<1,l,mid)*pw[r-(mid+1)+1]%mod+ask(p<<1|1,mid+1,r))%mod;\n    else\n    {\n        if(l<=mid)return ask(p<<1,l,r)%mod;\n        else if(r>mid)return ask(p<<1|1,l,r)%mod;\n    }\n}\nsigned main()\n{\n    cin>>n>>m>>k>>a+1;\n    pw[0]=pre[0]=1;\n    for(int i=1;i<=n;++i)\n    {\n        pw[i]=pw[i-1]*p%mod;\n        pre[i]=(pre[i-1]+pw[i])%mod;\n    }\n    build(1,1,n);\n    int t=m+k;\n    while(t--)\n    {\n        int op,l,r,x;\n        cin>>op>>l>>r>>x;\n        if(op==1)change(1,l,r,x);\n        else\n        {\n            if(ask(1,l,r-x)==ask(1,l+x,r))puts(\"YES\");\n            else puts(\"NO\");\n        }\n    }\n\treturn 0;\n}\n\n```\n\n## \u5176\u4ed6\u7ec6\u8282\n- \u7531\u4e8e\u8986\u76d6\u64cd\u4f5c\u7684\u8986\u76d6\u503c\u5b58\u5728 $0$\uff0c\u6240\u4ee5\u61d2\u6807\u8bb0\u521d\u59cb\u5316\u4e3a $-1$\u3002\n\n- \u521d\u59cb\u5316\u53f6\u8282\u70b9\u54c8\u5e0c\u503c\u65f6\u9700\u8981\u5c06\u5b57\u7b26\u8f6c\u6210\u5176\u6570\u5b57\u5927\u5c0f\uff0c\u56e0\u4e3a\u61d2\u6807\u8bb0\u5b58\u50a8\u7684\u503c\u662f\u6570\u5b57\u800c\u4e0d\u662f\u5b57\u7b26\uff0c\u5426\u5219\u6bcf\u6b21\u90fd\u9700\u8981\u5c06\u5b57\u7b26\u8f6c\u6210\u6570\u5b57\uff0c\u5341\u5206\u4e0d\u4fbf\u3002\n\n- \u672c\u4eba\u4eb2\u6d4b\u8fd9\u9898\u786e\u5b9e\u5361\u81ea\u7136\u6ea2\u51fa\uff0c\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u6700\u597d\u9009\u62e9\u4e00\u4e2a\u6a21\u6570 $mod$\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1668004440,
        "uid": 625380,
        "name": "FriedrichC",
        "ccfLevel": 0,
        "title": "CF580E Kefa and Watch \u9898\u89e3"
    },
    {
        "content": "> ### Description\n>\n> $n$\u4e2a\u6570\u7684\u5b57\u7b26\u4e32\uff0c$m + k$\u4e2a\u64cd\u4f5c\n>\n> `1 l r k`\u628a$l - r$\u8d4b\u503c\u4e3a$k$\n>\n> `2 l r d`\u8be2\u95ee$l - r$\u662f\u5426\u6709\u957f\u5ea6\u4e3a$d$\u7684\u5faa\u73af\u8282\n>\n> $n \\leq 10^5, m + k \\leq 10^5, d \\leq 10$\n>\n> ### Input\n>\n> \u7b2c\u4e00\u884c\u4e3a\u4e09\u4e2a\u6574\u6570$n,m,k$\n>\n> \u7b2c\u4e8c\u884c\u4e3a\u4e00\u4e2a$n$\u4e2a\u6570\u7684\u5b57\u7b26\u4e32\u3002\n>\n> \u63a5\u4e0b\u6765$m+k$\u884c\u6bcf\u884c\u5bf9\u5e94\u4e00\u79cd\u64cd\u4f5c\u3002\n>\n> ### Output\n>\n> \u5bf9\u4e8e\u6bcf\u4e00\u4e2a$2$\u64cd\u4f5c,\u5982\u679c\u5b58\u5728,\u8f93\u51fa\u4e00\u884c$YES$\uff0c\u5426\u5219\u8f93\u51fa$NO$\n\n**\u7ebf\u6bb5\u6811\u7ef4\u62a4\u54c8\u5e0c**\n\n~~\u5199\u8d77\u6765\u723d,\u8c03\u8d77\u6765\u66f4\u723d~~\n\n\u6211\u4eec\u9996\u5148**\u9884\u5904\u7406\u51fa$po$\u6570\u7ec4\u8bb0\u5f55$base^i$(\u8fd9\u4e2a\u8981\u7528\u6765\u4fee\u6539\u53ca\u67e5\u8be2\u7684\u3002)**\n\n**\u8fd8\u8981\u9884\u5904\u7406\u51fa\u6765$val[i][j]$\u4ee3\u8868\u957f\u5ea6\u4e3a$j$\u7684\u5168\u90e8\u4e3a\u6570\u5b57$i$\u7684\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u3002**\n\n\u7136\u540e\u6bcf\u6b21\u533a\u95f4\u5408\u5e76\u7684\u65f6\u5019.\n\n$$len=tr[rs].r-tr[rs].l+1$$\n\n$$tr[o].va=(tr[ls].va\\times po[len] \\% mod +tr[rs].va) \\% mod$$\n\n\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u662f\u5f88\u96be\u7406\u89e3\u5427\u3002(\u5c31\u7c7b\u4f3c\u4e8e\u4f60$hash$\u5339\u914d\u7684\u505a\u6cd5\u3002)\n\n\u4fee\u6539\u65f6\u5019,\u6211\u4eec\u76f4\u63a5\u8d4b\u503c$tr[o].va=val[k][len]$\u5373\u53ef\u3002\n\n\u9700\u8981**\u6ce8\u610f**\u7684\u6709\u4e24\u70b9\uff1a\n\n1. $lazy$\u6807\u8bb0\u521d\u503c\u8981\u4e3a$1$,\u56e0\u4e3a\u4f1a\u5b58\u5728\u8d4b\u503c\u4e3a$0$\u7684\u60c5\u51b5\n2. \u67e5\u8be2\u64cd\u4f5c\u4e2d,\u5f53\u524d\u533a\u95f4\u5206\u522b\u5728\u5de6\u53f3\u4e24\u4fa7\u7684\u65f6\u5019$tr[ls].va \\times po[r-mid]$\uff01\uff01\n\n\u56e0\u6b64\u76f4\u63a5\u7801\u4ee3\u7801\u5c31\u597d\u4e86\n\n\u8fd8\u6709\u4e00\u4e2a**\u795e\u4ed9\u7ed3\u8bba**\u662f\u505a\u9898\u7684\u6839\u636e\u3002\n\n> **\u5982\u679c\u8be2\u95ee\u4e3a$(l,r,d)$,\u5219\u53ea\u9700\u8981\u5224\u65ad$(l+d,r)$\u548c$(l,r-d)$\u5373\u53ef\u3002**\n\n\u8bc1\u660e\u7684\u8bdd,\u6211\u4e0d\u592a\u4f1a.\u4f46\u662f\u8fd9\u662f\u6b63\u786e\u7684\u3002\n\n\u5982\u679c\u8fd9\u9898\u5361\u5355$hash$\u7684\u8bdd\u53ef\u4ee5\u5199\u53cc$hash$\u3002\u7a0d\u4f5c\u4fee\u6539\u5373\u53ef\u3002\u4e0d\u591a$BB$\u4e86.\n\n``\u4ee3\u7801``\n\n```c++\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#define lo long long\n#define base 31\n#define mod 20020303\n#define R register\n\nusing namespace std;\n\nconst int gz=1e5+8;\n\ninline void in(R int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n    while(isdigit(s)){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\n\nint n,m,K,po[gz]={1},val[10][gz];\n\nchar s[gz];\n\nstruct wc\n{\n    int l,r,tg;\n    lo va;\n}tr[gz<<2];\n\ninline void pre()\n{\n    for(R int i=1;i<gz;i++)\n        po[i]=po[i-1]*base%mod;\n    for(R int i=0;i<10;i++)\n        for(R int j=1;j<gz;j++)\n            val[i][j]=(val[i][j-1]*base%mod+i)%mod;\n}\n\n#define ls o<<1\n#define rs o<<1|1\n\ninline void up(R int o)\n{\n    tr[o].va=(tr[ls].va*po[tr[rs].r-tr[rs].l+1]%mod+tr[rs].va%mod)%mod;\n}\n\nvoid build(R int o,R int l,R int r)\n{\n    tr[o].l=l,tr[o].r=r;tr[o].tg=-1;\n    if(l==r)\n    {\n        tr[o].va=s[l]-'0';\n        return;\n    }\n    R int mid=(l+r)>>1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    up(o);\n}\n\ninline void down(R int o)\n{\n    if(tr[o].tg==-1)return;\n    R int k=tr[o].tg;\n    tr[ls].va=val[k][tr[ls].r-tr[ls].l+1];\n    tr[rs].va=val[k][tr[rs].r-tr[rs].l+1];\n    tr[ls].tg=tr[rs].tg=k;\n    tr[o].tg=-1;\n}\n\nvoid change(R int o,R int l,R int r,R int k)\n{\n    if(tr[o].l==l and tr[o].r==r)\n    {\n        tr[o].tg=k;\n        tr[o].va=val[k][tr[o].r-tr[o].l+1];\n        return ;\n    }\n    down(o);\n    R int mid=(tr[o].l+tr[o].r)>>1;\n    if(r<=mid)change(ls,l,r,k);\n    else if(l>mid)change(rs,l,r,k);\n    else change(ls,l,mid,k),change(rs,mid+1,r,k);\n    up(o);\n}\n\nlo query(R int o,R int l,R int r)\n{\n    if(tr[o].l==l and tr[o].r==r)return tr[o].va;\n    down(o);\n    R int mid=(tr[o].l+tr[o].r)>>1;\n    if(r<=mid)return query(ls,l,r);\n    else if(l>mid) return query(rs,l,r);\n    else\n        return ((query(ls,l,mid)%mod)*po[r-mid]%mod+query(rs,mid+1,r)%mod)%mod;//\u6ce8\u610f\u8fd9\u91cc\uff01\uff01\n}\n\nint main()\n{\n    pre();\n    in(n),in(m),in(K);\n    R int tt=m+K;\n    scanf(\"%s\",s+1);\n    build(1,1,n);\n    for(R int opt,l,r,k;tt;tt--)\n    {\n        in(opt),in(l),in(r),in(k);\n        switch(opt)\n        {\n            case 1:change(1,l,r,k);break;\n            case 2:\n            {\n                if(r-l+1==k)\n                {\n                    puts(\"YES\");\n                    continue;\n                }\n                puts(query(1,l,r-k)==query(1,l+k,r) ? \"YES\":\"NO\");\n                break;\n            }\n        }\n    }\n}\n```\n\n",
        "postTime": 1541417467,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF580E \u3010Kefa and Watch\u3011"
    },
    {
        "content": "\u9996\u5148\u6709\u4e2a\u795e\u4ed9\u7ed3\u8bba\uff1a\u82e5\u8be2\u95ee\u533a\u95f4\u4e3a$(l, r, d)$\uff0c\u5219\u53ea\u9700\u5224\u65ad$(l + d, r)$\u548c$(l, r - d )$\u662f\u5426\u76f8\u540c\n\n\u8bc1\u660e\u53ef\u4ee5\u7528\u5f52\u7eb3\u6cd5\u3002\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5b57\u7b26\u4e32hash\u503c\uff0c\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\u7684\u6807\u8bb0\u5c31\u597d\u4e86\n\n\u6ce8\u610f\u8d4b\u503c\u7684\u65f6\u5019\u6709$0$\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u5f00\u59cb\u7684\u6807\u8bb0\u4e0d\u80fd\u4e3a$0$\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define int long long \n#define LL long long \n#define ull long long \nusing namespace std;\nconst int MAXN = 1e6 + 10;\nconst double eps = 1e-9;\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    while(c < '0' || c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\nint N, M, K;\nchar s[MAXN];\nstruct Segment {\n\tull sum[MAXN], po[MAXN], seed, mod;\n\t#define ls k << 1\n\t#define rs k << 1 | 1\n\tstruct Node {\n\t\tint l, r, siz;\n\t\tull ha, f;\n\t}T[MAXN];\n\tvoid update(int k) {\n\t\tT[k].ha = (T[ls].ha % mod + po[T[ls].siz] * T[rs].ha % mod) % mod;\n\t}\n\tvoid ps(int k, int son) {\n\t\tT[son].f = T[k].f;\n\t\tT[son].ha = sum[T[son].siz - 1] * T[son].f % mod;\n\t}\n\tvoid pushdown(int k) {\n\t\tif(T[k].f == -1) return ;\n\t\tps(k, ls); ps(k, rs);\n\t\tT[k].f = -1;\n\t}\n\tvoid Build(int k, int ll, int rr) {\n\t\tT[k] = (Node) {ll, rr, rr - ll + 1, 0, -1};\n\t\tif(ll == rr) {\n\t\t\tT[k].ha = s[ll] - '0'; \n\t\t\treturn ;\n\t\t}\n\t\tint mid = T[k].l + T[k].r >> 1;\n\t\tBuild(ls, ll, mid); Build(rs, mid + 1, rr);\n\t\tupdate(k);\n\t}\n\tvoid IntervalChange(int k, int ll, int rr, ull val) {\n\t\tif(ll <= T[k].l && T[k].r <= rr) {\n\t\t\tT[k].f = val % mod; \n\t\t\tT[k].ha = sum[T[k].siz - 1] * val % mod;\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(k);\n\t\tint mid = T[k].l + T[k].r >> 1;\n\t\tif(ll <= mid) IntervalChange(ls, ll, rr, val);\n\t\tif(rr >  mid) IntervalChange(rs, ll, rr, val);\n\t\tupdate(k);\n\t}\n\tull IntervalQuery(int k, int ll, int rr) {\n\t\tif(ll > rr) return 0;\n\t\tif(ll <= T[k].l && T[k].r <= rr) return T[k].ha % mod;\n\t\tpushdown(k);\n\t\tint mid = T[k].l + T[k].r >> 1;\n\t\tif(ll > mid) return IntervalQuery(rs, ll, rr) % mod;\n\t\telse if(rr <= mid) return IntervalQuery(ls, ll, rr) % mod;\n\t\telse return (IntervalQuery(ls, ll, rr) % mod + po[mid - max(T[k].l, ll) + 1] * IntervalQuery(rs, ll, rr) % mod) % mod;\n\t}\n\tvoid work() {\n\t\tpo[0] = 1; sum[0] = 1;\n\t\tfor(int i = 1; i <= N; i++) po[i] = po[i - 1] * seed % mod, sum[i] = (sum[i - 1] + po[i]) % mod;\t\n\t\tBuild(1, 1, N);\n\t}\n\tint Query(int l, int r, int k) {\n\t\treturn IntervalQuery(1, l, r - k) == IntervalQuery(1, l + k, r);\n\t}\n}Se[2];\n\nmain() {\n\tSe[0].seed = 27; Se[0].mod = 1e9 + 7;\n\tSe[1].seed = 233; Se[1].mod = 1e9 + 9;\n\tN = read(); M = read(); K = read();\n\tscanf(\"%s\", s + 1);\n\tSe[0].work(); Se[1].work();\n\tfor(int i = 1; i <= M + K; i++) {\n\t\tint opt = read(), l = read(), r  = read(), k = read();\n\t\tif(opt == 1) Se[0].IntervalChange(1, l, r, k), Se[1].IntervalChange(1, l, r, k);\n\t\telse {\n\t\t\tif((r - l + 1) == k) {\n\t\t\t\tputs(\"YES\"); \n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tputs((Se[0].Query(l, r, k) && Se[1].Query(l, r, k))? \"YES\" : \"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1535719942,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF580E \u3010Kefa and Watch\u3011"
    },
    {
        "content": "## Solution\n\n\u64cd\u4f5c $1$ \u4f7f\u7528 memset \u51fd\u6570\uff0c\u5f88\u7b80\u5355\u3002\n\n\u64cd\u4f5c $2$ \u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u6bd4\u8f83 $s_{l...r-d}$ \u548c $s_{l+d,r}$ \u5373\u53ef\u3002\n\n\u6613\u8bc1\uff0c\u6b64\u5904\u7565\u3002\n\n\u53ef\u4ee5\u4f7f\u7528 memcmp \u51fd\u6570\u3002\n\nmemcmp \u51fd\u6570\u539f\u578b\uff1a\n\n```cpp\nint memcmp(const void *str1, const void *str2, size_t n);\n```\n\n\u529f\u80fd\uff1a\u7528\u4e8e\u6bd4\u8f83 $str1$ \u7684\u524d $n$ \u4f4d\u548c $str2$ \u7684\u524d $n$ \u4f4d\u3002\n\n\u8fd4\u56de\u503c\uff1a\u82e5\u524d\u8005\u5c0f\uff0c\u8fd4\u56de\u503c $<0$\uff1b\u82e5\u4e24\u8005\u76f8\u7b49\uff0c\u8fd4\u56de\u503c $=0$\uff1b\u82e5\u524d\u8005\u5927\uff0c\u8fd4\u56de\u503c $>0$\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,Q1,Q2,op,l,r,x;\nchar c,s[100005];\nsigned main(){\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n>>Q1>>Q2>>s+1;\n\tfor (int T=Q1+Q2; T--;){\n\t\tcin>>op>>l>>r;\n\t\tif (op==1) cin>>c,memset(s+l,c,r-l+1);\n\t\telse cin>>x,cout<<(memcmp(s+l,s+l+x,(r-l+1)-x)?\"NO\\n\":\"YES\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1672105575,
        "uid": 562686,
        "name": "yeshubo_qwq",
        "ccfLevel": 5,
        "title": "CF580E Kefa and Watch \u9898\u89e3"
    },
    {
        "content": "\u5199\u4e86\u597d\u4e45\u7ebf\u6bb5\u6811+\u54c8\u5e0c\uff0c\u7ed3\u679c\u53d1\u73b0\u8fd8\u4e0d\u5982\u66b4\u529b\uff1f\n\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5143\u7d20\u5747\u4e3a\u6570\u5b57\uff0c\u7136\u540e\u6709 $m+k$ \u6b21\u64cd\u4f5c\uff0c\u652f\u6301\u5c06\u533a\u95f4 $[l, r]$ \u6574\u4f53\u8d4b\u503c\uff0c\u4ee5\u53ca\u67e5\u8be2\u533a\u95f4 $[l, r]$ \u662f\u5426\u6709\u957f\u5ea6\u4e3a $d$ \u7684\u5faa\u73af\u8282\u3002\n\n## \u5927\u4f53\u601d\u8def\n\u5f88\u5bb9\u6613\u60f3\u5230\u5b57\u7b26\u4e32\u54c8\u5e0c + \u7ebf\u6bb5\u6811\u3002\n\n\u8bbe\u54c8\u5e0c\u7684\u8fdb\u5236\u6570\u4e3a $base$\uff0c\u6a21\u6570\u4e3a $M$\uff0c\u5219\u524d\u7f00\u54c8\u5e0c\u503c\n$H_i=H_{i-1}\\times base+s_i\\pmod M$\u3002\u63a5\u4e0b\u6765\u4f5c\u4e3a\u54c8\u5e0c\u57fa\u672c\u529f\uff0c\u9884\u5904\u7406\u51fa $p_i=base^i$\u3002\u8fd9\u6837\u533a\u95f4 $[l, r]$ \u7684\u54c8\u5e0c\u503c\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u54c8\u5e0c\u503c\u7528\u4ee5\u4e0b\u65b9\u6cd5\u6c42\u51fa\uff1a\n$$Hash(l, r)=H_r-H_{l-1}\\times p_{r-l+1}$$\n\n\u7531\u4e8e\u6574\u4f53\u8d4b\u503c\u65f6\u5c06\u533a\u95f4 $[l,r]$ \u8d4b\u503c\u4e3a $v$ \u76f8\u5f53\u4e8e\u8fd9\u4e00\u6bb5\u7684\u54c8\u5e0c\u503c\u53d8\u4e3a\n$$\\sum_{i=0}^{r-l}v\\times base^i=v\\times \\sum_{i=0}^{r-l}p_i$$\n\u8003\u8651\u9884\u5904\u7406\u51fa\u6570\u7ec4 $sp_i=\\sum_{j=0}^{i-1}base^j=sp_{i-1}+p_{i-1}$ \u7528\u4ee5\u8bb0\u5f55\u4e0a\u5f0f\u4e2d $\\Sigma$ \u7684\u90e8\u5206\uff0c\u8fd9\u6837\u533a\u95f4\u4fee\u6539\u53ef\u4ee5\u7531\u61d2\u6807\u8bb0\u5b8c\u6210\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4efd\u6709\u5173\u4e0a\u8ff0\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u4f46\u4ee3\u7801\u4e2d\u4f7f\u7528 `ull` \u4ee3\u66ff\u6a21\u6570\u7684\u65b9\u5f0f\u4f1a\u88ab\u5361\uff0c\u56e0\u6b64\u5b9e\u9645\u63d0\u4ea4\u65f6\u9700\u8981\u4fee\u6539\u3002\n\n```cpp\n\tstruct node {\n\t\tint ls, rs, l, r, len, tag; // \u5de6\u53f3\u513f\u5b50\uff0c\u7ef4\u62a4\u533a\u95f4\u53ca\u957f\u5ea6\uff0c\u61d2\u6807\u8bb0\n\t\tull h1, h2; // \u53cc\u54c8\u5e0c\uff0c\u5077\u61d2\u7528ull\u505a\u6a21\u6570\uff0c\u4f46\u4f1a\u88ab\u5361\n\t\t#define ls(u) tr[u].ls\n\t\t#define rs(u) tr[u].rs\n\t\t#define L(u) tr[u].l\n\t\t#define R(u) tr[u].r\n\t} tr[maxn * 2];\n\tinline void init() {\n\t\ttr[1] = {0, 0, 1, n, n, 0, 0, 0};\n\t\tsp[0] = 0, p[0] = p2[0] = 1ull;\n\t\trep(i, 1, n) p[i] = p[i - 1] * base, p2[i] = p2[i - 1] * base2;\n\t\trep(i, 1, n) sp[i] = sp[i - 1] + p[i - 1], sp2[i] = sp2[i - 1] + p2[i - 1];\n\t}\n\tinline void pushup(int u) { // \u6709\u5b50\u6811\u8ba1\u7b97\u7236\u8282\u70b9\n\t\ttr[u].h1 = tr[rs(u)].h1 + tr[ls(u)].h1 * p[tr[rs(u)].len];\n\t\ttr[u].h2 = tr[rs(u)].h2 + tr[ls(u)].h2 * p2[tr[rs(u)].len];\n\t}\n\tinline void Upd(int u, int v) { // \u4fee\u6539\n\t\ttr[u].tag = v;\n\t\ttr[u].h1 = v * sp[tr[u].len];\n\t\ttr[u].h2 = v * sp2[tr[u].len];\n\t}\n\tinline void pushdown(int u) { // \u6807\u8bb0\u4e0b\u653e\n\t\tif(tr[u].tag == 0) return;\n\t\tUpd(ls(u), tr[u].tag);\n\t\tUpd(rs(u), tr[u].tag);\n\t\ttr[u].tag = 0;\n\t}\n\tinline void build(int u, int l, int r) { // \u5efa\u6811\n\t\tif(l == r) {\n\t\t\ttr[u] = {0, 0, l, r, 1, 0, (ull)(a[l] ^ 48), (ull)(a[l] ^ 48)};\n\t\t\treturn;\n\t\t}\n\t\ttr[u] = {0, 0, l, r, r - l + 1, 0, 0, 0};\n\t\tls(u) = ++nSeg; rs(u) = ++nSeg;\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(ls(u), l, mid);\n\t\tbuild(rs(u), mid + 1, r);\n\t\tpushup(u);\n\t}\n\tinline ull H1(int u, int l, int r) { // \u54c8\u5e0c1\n\t\tif(l > R(u) || r < L(u)) return 0;\n\t\tpushdown(u);\n\t\tif(l <= L(u) && r >= R(u))\t\n\t\t\treturn tr[u].h1 * p[r - R(u)]; // \u6839\u636e\u4f4d\u503c\u539f\u7406\u6c42\u51fa\u8fd9\u4e00\u6bb5\u54c8\u5e0c\u503c\u5bf9\u6574\u4f53\u7684\u8d21\u732e\n\t\treturn H1(ls(u), l, r) + H1(rs(u), l, r);\n\t}\n\tinline ull H2(int u, int l, int r) { // \u54c8\u5e0c2\n\t\tif(l > R(u) || r < L(u)) return 0;\n\t\tpushdown(u);\n\t\tif(l <= L(u) && r >= R(u))\t\n\t\t\treturn tr[u].h2 * p2[r- R(u)];\n\t\treturn H2(ls(u), l, r) + H2(rs(u), l, r);\n\t}\n\tinline void change(int u, int l, int r, int v) {\n\t\tif(l > R(u) || r < L(u)) return;\n\t\tif(l <= L(u) && r >= R(u)) {\n\t\t\tUpd(u, v);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(u);\n\t\tchange(ls(u), l, r, v);\n\t\tchange(rs(u), l, r, v);\n\t\tpushup(u);\n\t}\n```\n\u7136\u540e\uff0c\u6211\u4eec\u80fd\u5728\u5355\u6b21 $O(\\log n)$ \u7684\u590d\u6742\u5ea6\u5185\u5b9e\u73b0\u533a\u95f4\u8d4b\u503c\u3001\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c\u3002\u5bf9\u4e8e\u5224\u65ad $[l, r]$ \u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a $d$ \u7684\u5faa\u73af\u8282\uff0c\u8003\u8651\u5b66\u4e60 KMP \u65f6\u5bf9\u4e8e\u5c06 $n-p_n$ \u4f5c\u4e3a\u6700\u77ed\u5faa\u73af\u8282\u7684\u8bc1\u660e\u65b9\u5f0f\uff0c\u8fd9\u91cc\u53ea\u9700\u5224\u65ad $[l+d, r]$ \u4e0e $[l, r-d]$ \u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\u82e5\u8fd9\u4e24\u6bb5\u9519\u4f4d\u76f8\u7b49\uff0c\u5219\u53ef\u5f52\u7eb3\u8bc1\u660e\u957f\u5ea6\u4e3a $d$ \u7684\u5faa\u73af\u8282\u5b58\u5728\u3002\u5224\u65ad\u76f8\u7b49\u53ef\u5229\u7528\u54c8\u5e0c\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n\n```cpp\n\tif(op == 1) change(1, l, r, d);\n\telse{\n\t\tif(d == r - l + 1) puts(\"YES\");\n\t\telse (H1(1, l + d, r) == H1(1, l, r - d) && H2(1, l + d, r) == H2(1, l, r - d) ? puts(\"YES\") : puts(\"NO\"));\n\t} \n```\n\n\u5176\u5b9e\uff0c\u672c\u9898\u8fd8\u6709\u4e00\u79cd\u66f4\u4e3a\u76f4\u63a5\u66b4\u529b\u4e14\u540a\u6253\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\u3002\u5229\u7528\u5b57\u7b26\u4e32\u51fd\u6570 `memset` \u548c `memcmp` \u7684\u6781\u9ad8\u6548\u7387\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0\u533a\u95f4\u8d4b\u503c\u548c\u533a\u95f4\u67e5\u8be2\u3002\n\n```cpp\n\tif(op == 1) memset(s + l, d + '0', r - l + 1);\n\telse puts(memcmp(s + l, s + l + d, r - l + 1 - d) ? \"NO\" : \"YES\");\n```",
        "postTime": 1637932218,
        "uid": 279197,
        "name": "Mars_Dingdang",
        "ccfLevel": 6,
        "title": "CF580E"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF580E)\n\n## \u524d\u7f6e\u77e5\u8bc6\n- \u7ebf\u6bb5\u6811\n- \u54c8\u5e0c\n\n## \u9898\u76ee\u5206\u6790\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u54c8\u5e0c\u7ecf\u5178\u9898\uff0c\u5176\u5b9e\u4e5f\u53ea\u662f\u6362\u6c64\u4e0d\u6362\u836f\u7684\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\u7f62\u4e86\u3002\n\n\u5b9a\u4e49 $v_k$ \u8868\u793a\u533a\u95f4 $k$ \u7684\u54c8\u5e0c\u503c\uff0c$len_k$ \u8868\u793a\u533a\u95f4 $k$ \u7684\u957f\u5ea6\u3002\n\n\u5b9a\u4e49\u57fa\u6570\u4e3a $bas$\uff0c\u5148\u9884\u5904\u7406 $pw_i$ \u4e3a $bas^i$\u3002\n\n\u9898\u76ee\u4e2d\u64cd\u4f5c\u4e8c\u4e3a\u533a\u95f4\u7edf\u4e00\u8d4b\u503c\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e2d\u533a\u95f4 $k$\uff0c\u7aef\u70b9\u4e3a $l,r$\uff0c\u66b4\u529b\u4fee\u6539\u54c8\u5e0c\u503c\uff0c\u5b9e\u73b0\u5982\u4e0b\uff0c\u590d\u6742\u5ea6\u4e3a\u7ebf\u6027\uff1a\n\n```cpp\nfor (rei i = l; i <= r; i++)\n\tv[k] = (v[k] * bas + num) % mod;\n```\n\n\u800c\u6211\u4eec\u9884\u5904\u7406 $pw2_i$ \u4e3a $bas^i$ \u5728 $bas$ \u8fdb\u5236\u4e2d\u6bcf\u4e00\u4f4d\u90fd\u4e3a $1$ \u7684\u503c\u3002\n\n\u5219\u663e\u7136\u4fee\u6539\u53ef\u4f18\u5316\u4e3a $O(1)$\uff1a\n\n```cpp\nv[k] = pw2[r - l] * num % mod;\n```\n\n\u90a3\u5df2\u77e5\u5de6\u53f3\u513f\u5b50\uff08$ls,rs$\uff09\u7684\u54c8\u5e0c\u503c\uff0c\u53c8\u5982\u4f55\u8f6c\u6362\u4e3a\u7236\u4eb2\u7684\u54c8\u5e0c\u503c\u5462\uff08\u4e0a\u4f20\u64cd\u4f5c\uff09\uff1f\u8fd9\u91cc\u7ed9\u51fa\u516c\u5f0f\uff1a\n\n$$ v_k=v_{ls}\\times pw_{len_{rs}}+v_{rs} $$\n\n\u610f\u4e49\u4e3a\u5728 $bas$ \u8fdb\u5236\u4e0b\uff0c$v_{ls}$ \u5411\u5de6\u79fb\u52a8 $len_{rs}$ \u4f4d\uff0c\u518d\u52a0\u4e0a $v_{rs}$\u3002\n\n\u4e0b\u4f20\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4f7f\u7528\u4e0a\u8ff0\u7684 $O(1)$ \u4fee\u6539\u65b9\u6cd5\u5373\u53ef\u3002\n\n\u5efa\u8bae\u7528\u7ed3\u6784\u4f53\u6346\u7ed1 $v,len$\uff0c\u4f46\u4e0d\u8981\u6346\u7ed1 $l,r$\uff0c\u65b9\u4fbf\u8c03\u8bd5\u3002\n\n\u6700\u540e\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u82e5 $v_{i...j-d}=v_{i+d...j}$\uff0c\u5219 $l-r$ \u6709\u957f\u5ea6\u4e3a $d$ \u7684\u5faa\u73af\u8282\u3002\n\n\u6570\u5b66\u5f52\u7eb3\u6cd5\u6613\u8bc1\u3002\n\n\u7ed9\u51fa\u4e00\u4e2a\u9700\u8981\u8f6c\u5316\uff0c\u4f46\u672c\u8d28\u76f8\u540c\u7684\u9898\uff1a[CF452F](https://www.luogu.com.cn/problem/CF452F)\n## code\n\n\u622a\u6b62\u53d1\u6587\u65f6\uff0c\u5728\u4e3a\u6570\u4e0d\u591a\u7684\u63d0\u4ea4\u4e2d\u4f4d\u5c45\u6700\u4f18\u89e3\u7b2c\u4e00\u9875~~QwQ~~\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rei register int\n#define N 200010\n#define ls k<<1\n#define rs k<<1|1\nusing namespace std;\ntypedef long long ll;\nconst ll bas = 23, mod = 1e9 + 7;\n\ntemplate <typename T> inline void read(T &x)\n{\n\tx = 0; T f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -f; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\n\tx *= f;\n}\n\nstruct Tree {ll v, len;} T[N << 2];\nll n, m1, m2, pw[N], len[N], v[N], f[N], pw2[N], str[N];\n\ninline Tree merge(Tree l, Tree r)\n{\n\tTree ret;\n\tret.v = (l.v * pw[r.len] % mod + r.v) % mod;\n\tret.len = l.len + r.len;\n\treturn ret;\n}\n\ninline void Pushup(ll k) {T[k] = merge(T[ls], T[rs]);}\n\ninline void Pushdown(ll k)\n{\n\tif (f[k] == -1) return;\n\tT[ls].v = pw2[T[ls].len - 1] * f[k] % mod;\n\tT[rs].v = pw2[T[rs].len - 1] * f[k] % mod;\n\tf[ls] = f[rs] = f[k];\n\tf[k] = -1;\n}\n \ninline void Build(ll k, ll l, ll r)\n{\n\tT[k].len = r - l + 1; T[k].v = 0;\n\tif (l == r) \n\t{\n\t\tT[k].v = str[l] % mod;\n\t\treturn;\n\t}\n\tll mid = l + r >> 1;\n\tBuild(ls, l, mid);\n\tBuild(rs, mid + 1, r);\n\tPushup(k);\n}\n\ninline void Update(ll k, ll l, ll r, ll x, ll y, ll d)\n{\n\tif (x <= l && r <= y)\n\t{\n\t\tf[k] = d;\n\t\tT[k].v = pw2[r - l] * d % mod;\n\t\treturn;\n\t}\n\tPushdown(k); ll mid = l + r >> 1;\n\tif (x <= mid) Update(ls, l, mid, x, y, d);\n\tif (mid < y) Update(rs, mid + 1, r, x, y, d);\n\tPushup(k);\n}\n\ninline Tree Query(ll k, ll l, ll r, ll x, ll y)\n{\n\tif (x <= l && r <= y) return T[k];\n\tPushdown(k); ll mid = l + r >> 1;\n\tif (x <= mid && mid < y) return merge(Query(ls, l, mid, x, y), Query(rs, mid + 1, r, x, y));\n\tif (x <= mid) return Query(ls, l, mid, x, y);\n\tif (mid < y) return Query(rs, mid + 1, r, x, y);\n}\n\nint main()\n{\n\tread(n); read(m1); read(m2);\n\tfor (rei i = 1; i <= n; i++)\n\t{\n\t\tchar c; scanf(\"%c\", &c);\n\t\tstr[i] = c - '0';\n\t}\n\tpw[0] = pw2[0] = 1;\n\tfor (rei i = 1; i <= 2e5; i++) pw[i] = pw[i - 1] * bas % mod, pw2[i] = (pw2[i - 1] * bas % mod + 1) % mod;\n\tBuild(1, 1, n); memset(f, -1, sizeof(f));\n\tfor (rei i = 1; i <= m1 + m2; i++)\n\t{\n\t\tll opt, x, y, d; read(opt); read(x); read(y); read(d);\n\t\tif (opt == 1) Update(1, 1, n, x, y, d);\n\t\telse \n\t\t{\n\t\t\tif (d >= y - x + 1) printf(\"YES\\n\");\n\t\t\telse printf(\"%s\\n\", Query(1, 1, n, x, y - d).v == Query(1, 1, n, x + d, y).v ? \"YES\" : \"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1637933991,
        "uid": 200930,
        "name": "\u30d9\u72d0\u4ed9\u59d0\u59d0\u3054",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF580E \u3010Kefa and Watch\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF580E)\u3002\n\n[\u5728\u535a\u5ba2\u5185\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.luogu.com.cn/blog/lihangyu-749988/solution-cf580e)\uff01\n\n## \u9898\u76ee\u5206\u6790\n\n\u849f\u84bb\u770b\u5230\u5927\u4f6c\u4eec\u7684\u7ebf\u6bb5\u6811+\u54c8\u5e0c\uff0c\u5b8c\u5168\u770b\u4e0d\u61c2\u2026\u2026\u4f46\u662f\u56de\u5934\u518d\u770b\u4e00\u773c\u9898\u9762\uff0c\u6211\u60ca\u559c\u5730\u53d1\u73b0\uff0c\u5b8c\u5168\u4e0d\u7528\u90a3\u4e48\u590d\u6742\uff01\u8fd9\u91cc\u6211\u5c06\u7ed9\u4f60\u8bb2\u89e3\u9898\u76ee\u4e2d\u7684\u4e24\u79cd\u64cd\u4f5c\u5982\u4f55\u5b9e\u73b0\u3002\n\n### \u7b2c\u4e00\u79cd\u64cd\u4f5c\n\n\u4e00\u770b\u5230\u201c\u8d4b\u503c\u201d\u4e24\u4e2a\u5b57\uff0c\u6211\u5c31\u60f3\u8d77\u4e86C++\u4e2d\u7684\u81ea\u5e26\u51fd\u6570--- `memset` \u3002\n\n`memset` \u4ecb\u7ecd :\n\n\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u5c06\u4e00\u4e2a\u503c\u8d4b\u503c\u7ed9\u6570\u7ec4\u6216\u5b57\u7b26\u4e32\u4e2d\u4e00\u90e8\u5206\u8fde\u7eed\u7684\u53d8\u91cf\u3002\n\n\u8fd9\u4e2a\u51fd\u6570\u5728\u5934\u6587\u4ef6 `#include<cstring>` \u91cc\u9762\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\u4e0e\u683c\u5f0f\u5982\u4e0b\uff1a\n\n`memset(` \u5f00\u5934 `\uff0c` \u7ed3\u5c3e `\uff0c` \u8981\u8d4b\u7684\u503c `)`\n\n\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```cpp\nint a[105];\nmemset(a,a+100,1);\n```\n\n\u8fd9\u6bb5\u4ee3\u7801\u5c06 `a[0],a[1],`\u2026\u2026`,a[99]` \u8d4b\u503c\u4e3a\u4e861\u3002\n\n### \u7b2c\u4e8c\u79cd\u64cd\u4f5c\n\n\u9898\u76ee\u8981\u6c42\u627e\u5230\u5b57\u7b26\u4e32\u4e2d\u7684\u5faa\u73af\u8282\uff0c\u4e8e\u662f\u6211\u4eec\u77e5\u9053\u80af\u5b9a\u8981\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5bf9\u6bd4\uff0c\u624d\u80fd\u5f97\u5230\u7ed3\u679c\u3002\n\n\u8fd9\u65f6\u5019\uff0c C++ \u5e2e\u4e86\u6211\u4eec\u4e00\u4e2a\u5927\u5fd9\u3002 C++ \u4e2d\u6709\u4e00\u4e2a\u81ea\u5e26\u51fd\u6570--- `memcmp` \u3002\n\n`memcmp` \u4ecb\u7ecd\uff1a\n\n\u8fd9\u4e2a\u51fd\u6570\u662f\u7528\u6765\u5bf9\u6bd4\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u51e0\u4f4d\u7684\u5927\u5c0f\u7684\uff0c\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5f88\u5feb\u5730\u5b9e\u73b0\u4e00\u4e9b\u770b\u4f3c\u5f88\u590d\u6742\u7684\u95ee\u9898\u3002\n\n\u8fd9\u4e2a\u51fd\u6570\u4e5f\u5728\u5934\u6587\u4ef6 `#include<cstring>` \u91cc\u9762\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\u4e0e\u683c\u5f0f\u5982\u4e0b\uff1a\n\n`memcmp(` \u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 `,` \u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32 `,` \u4e00\u4e2a\u957f\u5ea6 `)`\n\n\u8fd4\u56de\u503c\uff1a\u82e5\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d `n` \u4f4d\u5c0f\u4e8e\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d `n` \u4f4d\uff0c\u5219\u8fd4\u56de\u503c $<0$ \uff0c\u82e5\u4e24\u6bb5\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u8fd4\u56de $0$ \uff0c\u82e5\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d `n` \u4f4d\u5927\u4e8e\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d `n` \u4f4d\uff0c\u5219\u8fd4\u56de\u503c $>0$ \u3002\n\n\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```cpp\nstring s1=\"I love luogu\";\nstring s2=\"I love c++\";\ncout<<memcmp(s1,s2,8);\n```\n\n\u8fd9\u6bb5\u4ee3\u7801\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u524d $8$ \u4f4d\u8fdb\u884c\u4e86\u5927\u5c0f\u6bd4\u8f83\uff0c\u5373\u6bd4\u8f83\u4e86 `I love l` \u548c`I love c` \u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u3002\u8fd4\u56de\u503c $>0$ \u3002\n\n\u6309\u7167\u8fd9\u6837\u7684\u601d\u8def\uff0c\u6574\u4e2a\u4ee3\u7801\u5f88\u5feb\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<iostream>\n#include<string.h>\nusing namespace std;\nconst int N=114514;\nint n,m,k,l,r,c,flag;\nchar ch[N];\nint main(){\n    cin>>n>>m>>k>>ch+1;\n    for(int i=1;i<=m+k;i++){\n        cin>>flag>>l>>r>>c;\n        if(flag==1)\n\t\t\tmemset(ch+l,c+48,r-l+1);\n        else\n        \tif(memcmp(ch+l,ch+l+c,r-l-c+1))\n        \t\tcout<<\"NO\"<<endl;\n        \telse\n        \t\tcout<<\"YES\"<<endl;\n    }\n    return 0;\n}\n```\n\n\u9898\u89e3\u5236\u4f5c\u4e0d\u6613\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1672212094,
        "uid": 749988,
        "name": "IOI_AK_LHY",
        "ccfLevel": 0,
        "title": "CF580E Kefa and Watch \u9898\u89e3"
    }
]