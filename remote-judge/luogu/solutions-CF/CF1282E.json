[
    {
        "content": "\u5148\u89e3\u51b3\u7b2c\u4e00\u95ee\uff1a\u70b9\u7684\u987a\u5e8f\u3002\n\n\u6ce8\u610f\u5230\u539f\u6765\u591a\u8fb9\u5f62\u4e0a\u7684\u8fb9\u5728 $n-2$ \u4e2a\u4e09\u89d2\u5f62\u91cc\u9762\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\uff0c\u56e0\u4e3a\u5207\u5272\u800c\u51fa\u6765\u7684\u8fb9\u5219\u4f1a\u51fa\u73b0\u4e24\u6b21\u3002\u56e0\u6b64\u62ff `std::map` \u8bb0\u5f55\u4e00\u4e0b\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u8fde\u8fb9 dfs \u5c31\u89e3\u51b3\u4e86\u3002\n\n\u7b2c\u4e8c\u95ee\uff1a\u5272\u4e09\u89d2\u5f62\u7684\u987a\u5e8f\u3002\n\n\u8003\u8651\u627e\u7279\u6b8a\u70b9\u3002\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u6b21\u5272\u4e0b\u6765\u7684\u4e00\u5b9a\u662f\u8fde\u7eed\u4e09\u4e2a\u9876\u70b9\uff0c\u5e76\u4e14\u4e2d\u95f4\u7684\u9876\u70b9\u4ec5\u51fa\u73b0\u4e00\u6b21\uff08\u56e0\u4e3a\u5272\u5b8c\u5c31\u6ca1\u4e86\uff0c\u5f88\u597d\u7406\u89e3\uff09\u3002\u6b64\u65f6\u5c31\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a $n-1$ \u8fb9\u5f62\u7684\u5b50\u95ee\u9898\u3002\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u53bb\u4e00\u4e2a\u4e2a\u5220\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u74f6\u9888\u5728\u4e8e\u7b2c\u4e00\u95ee\u627e\u91cd\u8fb9\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/1282/submission/181273829)",
        "postTime": 1668669306,
        "uid": 121275,
        "name": "Silviac",
        "ccfLevel": 0,
        "title": "Sol CF1282E"
    },
    {
        "content": "\n\u66f4\u6728\u68d2\u7684\u4f53\u9a8c $\\to $ [`George1123`](https://www.cnblogs.com/George1123/p/13695150.html)\n\n---\n## \u9898\u9762\n\n> [CF1282E The Cake Is a Lie](https://www.luogu.com.cn/problem/CF1282E)\n\n> $T$ \u7ec4\u6d4b\u8bd5\u6570\u636e\u3002\u6bcf\u6b21\u7ed9\u4e00\u4e2a $n$ \u8fb9\u5f62\u7684\u4e09\u89d2\u5256\u5206\uff0c\u6c42\u8282\u70b9\u987a\u5e8f\u548c\u5256\u5206\u987a\u5e8f\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$3\\le n\\le 10^5$\uff0c$\\sum n\\le 10^5$\u3002\n\n---\n## \u849f\u84bb\u89e3\n\n\u8fd9\u9898\u5728\u70ab\u9177\u7684\u4ee3\u7801\u548c\u5916\u8868\u4e0b\u662f\u4e00\u4e2a\u5927\u6c34\u9898\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5256\u4e0b\u6765\u7684\u4e09\u89d2\u5f62\u7684\u8fb9\uff0c\u8981\u4e48\u662f\u539f\u591a\u8fb9\u5f62\u7684\u8fb9\uff0c\u8981\u4e48\u662f\u5272\u7684\u8fb9\u3002\n\n\u591a\u8fb9\u5f62\u7684\u8fb9\u5728\u6240\u6709\u4e09\u89d2\u5f62\u7684\u8fb9\u4e2d\u51fa\u73b0 $1$ \u6b21\uff0c\u5272\u8fb9\u5728\u6240\u6709\u4e09\u89d2\u5f62\u4e2d\u51fa\u73b0 $2$ \u6b21\u3002\n\n\u6240\u4ee5\u7528 `map` \u8bb0\u5f55\u6bcf\u6761\u8fb9\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u7136\u540e\u4ece\u4e00\u4e2a\u4e09\u89d2\u5f62\u51fa\u53d1\uff0c\u7136\u540e\u7528 `dfs` \u5408\u5e76\u4e0a\u51fa\u73b0 $2$ \u6b21\u7684\u8fb9\u7684\u4e09\u89d2\u5f62\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u8be2\u95ee\u53ef\u4ee5\u7528\u4e00\u4e2a\u73af\u72b6\u94fe\u8868\uff0c\u7b2c\u4e8c\u4e2a\u53ef\u4ee5\u56de\u6eaf\u52a0 `vector`\u3002\n\n\u4e3a\u4e86~~\u4e0d~~\u65b9\u4fbf\uff0c\u4ee3\u7801\u4e2d\u4ece\u4e00\u4e2a\u6709\u4e24\u6761\u539f\u591a\u8fb9\u5f62\u7684\u8fb9\u7684\u4e09\u89d2\u5f62\u5f00\u59cb\uff0c\u8fd9\u6837\u6bcf\u6b21\u5c31\u6700\u591a\u6709\u4e24\u8fb9\u8981\u5408\u5e76\u4e09\u89d2\u5f62\u4e86\u3002\n\n---\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair((a),(b))\n#define x first\n#define y second\n#define be(a) (a).begin()\n#define en(a) (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define R(i,a,b) for(int i=(a),I=(b);i<I;i++)\n#define L(i,a,b) for(int i=(b)-1,I=(a)-1;i>I;i--)\nconst int iinf=0x3f3f3f3f;\nconst ll linf=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=1e5;\nint n,nex[N],ea[N-2],eb[N-2],ec[N-2];\nbool vis[N]; vector<int> ans;\nmap<pair<int,int>,vector<pair<int,int>>> mp;\n#define pa(x,y) mp(min(x,y),max(x,y))\n#define an(x,y) mp[pa(x,y)]\n\n//Main\nvoid solve(pair<int,int> e){\n\tif(nex[e.y]==e.x) swap(e.x,e.y); \n\tvector<pair<int,int>> tv=an(e.x,e.y);\n\tint ez=vis[tv[0].x]?tv[1].x:tv[0].x; \n\tint et=vis[tv[0].x]?tv[1].y:tv[0].y;\n\tvis[ez]=true,nex[e.x]=ez,nex[ez]=e.y;\n\tif(sz(an(e.x,ez))>=2) solve(mp(e.x,ez));\n\tif(sz(an(e.y,ez))>=2) solve(mp(e.y,ez));\n\tans.pb(et);\n}\nvoid Main(){\n\tcin>>n,ans.clear();\n\tfill(nex,nex+n,-1);\n\tfill(vis,vis+n,false);\n\tif(n==3){\n\t\tcin>>ea[0]>>eb[0]>>ec[0];\n\t\tcout<<\"1 2 3\\n1\\n\";\n\t\treturn;\n\t}\n\tmp.clear();\n\tR(i,0,n-2){\n\t\tcin>>ea[i]>>eb[i]>>ec[i];\n\t\t--ea[i],--eb[i],--ec[i];\n\t\tan(ea[i],eb[i]).pb(mp(ec[i],i));\n\t\tan(ea[i],ec[i]).pb(mp(eb[i],i));\n\t\tan(eb[i],ec[i]).pb(mp(ea[i],i));\n\t}\n\tint s=-1; pair<int,int> e(-1,-1);\n\tR(i,0,n-2){\n\t\tint cnt=0;\n\t\tif(sz(an(ea[i],eb[i]))==2) cnt++,e=pa(ea[i],eb[i]);\n\t\tif(sz(an(ea[i],ec[i]))==2) cnt++,e=pa(ea[i],ec[i]);\n\t\tif(sz(an(eb[i],ec[i]))==2) cnt++,e=pa(eb[i],ec[i]);\n\t\tif(cnt==1){s=i;break;}\n\t}\n\tnex[ea[s]]=eb[s],nex[eb[s]]=ec[s],nex[ec[s]]=ea[s];\n\tvis[ea[s]]=vis[eb[s]]=vis[ec[s]]=true,ans.pb(s);\n\tsolve(e);\n\tint now=0;\n\tR(i,0,n) cout<<now+1<<' ',now=nex[now];cout<<'\\n';\n\tfor(int x:ans) cout<<x+1<<' ';cout<<'\\n';\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tint tn; cin>>tn;\n\tR(ta,0,tn) Main();\n\treturn 0;\n}\n```\n\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1600481313,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1282E \u3010The Cake Is a Lie\u3011"
    },
    {
        "content": "$\\color{blue}{\\texttt{[Solution]}}$\n\n\u6211\u4eec\u628a\u4e09\u89d2\u5f62\u7684\u8fb9\u5206\u6210\u4e24\u79cd\uff1a\u4e00\u79cd\u662f\u539f\u6765\u7684\u591a\u8fb9\u5f62\u7684\u8fb9\uff08\u79f0\u4e3a\u539f\u8fb9\uff09\uff0c\u4e00\u79cd\u662f\u56e0\u4e3a\u5206\u5272\u800c\u591a\u51fa\u6765\u7684\u65b0\u8fb9\uff08\u79f0\u4e3a\u65b0\u8fb9\uff09\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u4e09\u89d2\u5f62\u7684\u6240\u6709\u7684\u8fb9\u4e2d\uff0c\u539f\u8fb9\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\uff0c\u65b0\u8fb9\u4f1a\u4e14\u53ea\u4f1a\u51fa\u73b0\u4e24\u6b21\u3002\u8fd9\u662f\u89e3\u9898\u7684\u5173\u952e\u4e4b\u4e00\u3002\n\n\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u6613\u5730\u6c42\u51fa $p$\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fb9\u51fa\u73b0\u7684\u6b21\u6570\u8f7b\u6613\u5730\u786e\u5b9a\u54ea\u4e9b\u8fb9\u662f\u539f\u8fb9\u3002\u539f\u8fb9\u786e\u5b9a\u4e86\uff0c\u6574\u4e2a\u56fe\u5f62\u4e0d\u5c31\u786e\u5b9a\u4e86\u5417\uff1f\u6309\u7167\u4f60\u559c\u6b22\u7684\u987a\u5e8f\uff0c\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u561b\u3002\n\n\u89e3\u9898\u7684\u5173\u952e\u4e4b\u4e8c\u662f\uff0c\u4e09\u89d2\u5f62\u7684\u6240\u6709\u9876\u70b9\u91cc\uff0c\u4e00\u5b9a\u6709\u4e14\u53ea\u6709\u4e24\u4e2a\u70b9\uff0c\u5b83\u4eec\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u3002\u5b83\u4eec\u4e2d\u5fc5\u7136\u4f1a\u6709\u4e00\u4e2a\u662f\u7b2c\u4e00\u6b21\u5272\u7684\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u4e4b\u4e00\u3002\n\n\u6240\u4ee5\u6c42 $q$ \u5c31\u5f88\u7b80\u5355\u4e86\u3002\u6211\u4eec\u628a\u4ece\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u9876\u70b9\u5f00\u59cb\uff0c\u4e0d\u65ad\u786e\u5b9a\u4e09\u89d2\u5f62\u7684\u5207\u5272\u987a\u5e8f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5f88\u50cf\u62d3\u6251\u6392\u5e8f\uff08\u5176\u5b9e\u8ddf\u62d3\u6251\u6392\u5e8f\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u770b\u4ee3\u7801\u5c31\u604d\u7136\u5927\u609f\u4e86\uff0c\u8bed\u8a00\u53cd\u800c\u4e0d\u597d\u8bb2\u6e05\u695a\uff09\u3002\n\n\u4f46\u662f\u8fd8\u662f\u90a3\u53e5\u8bdd\uff0c\u53e3\u5934 AC \u4e0d\u7b49\u4e8e\u4ee3\u7801 AC\u3002\u8fd9\u9053\u9898\u8fd8\u662f\u6709\u5f88\u591a\u7ec6\u8282\u7684\u3002\u5177\u4f53\u5730\uff0c\u770b\u4ee3\u7801\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\u8fd8\u662f\u6709\u4e00\u70b9\u8981\u8bf4\u7684\uff0c\u50cf CF \u8fd9\u79cd\u6781\u591a\u6d4b\u7684\u9898\u76ee\uff0c\u6700\u597d\u4e0d\u8981\u7528 `memset` \u6e05\u7a7a\uff0c\u5426\u5219\u5bb9\u6613 T\u3002\n\n$\\color{blue}{\\texttt{[code]}}$\n\n```cpp\nconst int N=1e5+100;\n\nvector<int> tarnum[N];\nint n,ans[N],connect[N][2];\npair<int,int> edge[N*3];\nint cnt,k[N],ind[N],a[N],b[N],c[N];\nbool vis[N],out[N];\n\nvoid outputp(int u){\n\tprintf(\"%d \",u);\n\tout[u]=false;\n\tif (out[connect[u][0]])\n\t\toutputp(connect[u][0]);\n\tif (out[connect[u][1]])\n\t\toutputp(connect[u][1]);\n}//\u8f93\u51fa p \u6570\u7ec4\n\nvoid outputq(){\n\tfor(int i=1;i<n-2;i++)\n\t\tprintf(\"%d \",ans[i]);\n\tfor(int i=1;i<=n-2;i++)\n\t\tif (vis[i]) printf(\"%d\",i);\n}//\u8f93\u51fa q \u6570\u7ec4\n\nint main(){\n\tfor(int T=1,Q=read();T<=Q;T++){\n\t\tn=read();cnt=0;\n\t\t\n\t\tfor(int i=1;i<=n;i++)\n\t\t\ttarnum[i].clear();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tind[i]=ans[i]=0;\n\t\t\n\t\tfor(int i=1;i<=n-2;i++){\n\t\t\tint x=read(),y=read(),z=read();\n\t\t\t\n\t\t\tif (x>y) swap(x,y);\n\t\t\tif (x>z) swap(x,z);\n\t\t\tif (y>z) swap(y,z);//\u65b9\u4fbf\u786e\u5b9a\u662f\u5426\u662f\u4e00\u6837\u7684\u8fb9\n\t\t\t\n\t\t\ttarnum[x].push_back(i);\n\t\t\ttarnum[y].push_back(i);\n\t\t\ttarnum[z].push_back(i);\n\t\t\t\n\t\t\tedge[++cnt]=make_pair(x,y);\n\t\t\tedge[++cnt]=make_pair(x,z);\n\t\t\tedge[++cnt]=make_pair(y,z);\n\t\t\t\n\t\t\t++ind[x];++ind[y];++ind[z];\n\t\t\t\n\t\t\ta[i]=x;b[i]=y;c[i]=z;\n\t\t}\n\t\t\n\t\tsort(edge+1,edge+cnt+1);\n\t\tedge[0]=edge[cnt+1]=make_pair(0,0);//\u6ce8\u610f\u8fd9\u91cc\uff0c\u5426\u5219\u4f60\u4f1a\u5728 Test 2 WA\n\t\t\n\t\tmemset(k,0,sizeof(k));\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tif (edge[i]!=edge[i-1]&&edge[i]!=edge[i+1]){\n\t\t\t\tint u=edge[i].first,v=edge[i].second;\n\t\t\t\tconnect[u][k[u]++]=v;\n\t\t\t\tconnect[v][k[v]++]=u;\n\t\t\t}\n\t\t\n\t\tregister int tot=0;\n\t\t\n\t\tqueue<int> q;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif (ind[i]==1) q.push(i);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tvis[i]=out[i]=true;\n\t\tfor(int i=1;i<n-2;i++){\n\t\t\tint u=q.front();q.pop();\n\t\t\tfor(int i=0;i<(int)tarnum[u].size();i++)\n\t\t\t\tif (vis[tarnum[u][i]]){\n\t\t\t\t\tint t=tarnum[u][i];\n\t\t\t\t\tans[++tot]=t;vis[t]=false;\n\t\t\t\t\t\n\t\t\t\t\tif (a[t]!=u&&(--ind[a[t]])==1) q.push(a[t]);\n\t\t\t\t\tif (b[t]!=u&&(--ind[b[t]])==1) q.push(b[t]);\n\t\t\t\t\tif (c[t]!=u&&(--ind[c[t]])==1) q.push(c[t]);\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}//\u62d3\u6251\u6392\u5e8f\uff0c\u5e94\u8be5\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\n\t\t\n\t\toutputp(1);\n\t\tprintf(\"\\n\");\n\t\toutputq();\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}\n```\n\n>> \u6253\u4ee3\u7801\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u7ec6\u8282\u3002\n>> \n>> \u53e3\u5934 AC \u771f\u7684\u4e0d\u7b49\u4e8e\u4ee3\u7801 AC\uff01",
        "postTime": 1641127610,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "the Solution to the Problem CF1282E"
    },
    {
        "content": "\u5728\u673a\u623f\u548c Alex_Wei \u65e0\u804a\u505a 2500 \u7684\u9898\uff0c\u505a\u4e0d\u52a8\u7136\u540e\u505a\u8fd9\u4e2a 2400 \u7684\u9898\u3002\u7136\u540e\u540a\u6253\u4ed6\u4e86\uff0c\u4ed6\u5230 8:00 \u4e0b\u8bfe\u8fd8\u6ca1\u505a\u51fa\u6765\uff0c\u800c\u6211\u5219\u5728 8:01 AC \u4e86\u3002\u540a\u6253 2512 GM\uff0c\u723d\uff08\n\n\u5b66\u6821 407 \u673a\u623f\u7535\u8111\u4e0a\u7adf\u7136\u6ca1\u6709 devc++\uff0c\u4e8e\u662f\u4ee3\u7801\u662f\u5728 CF \u4e0a\u7684 custom test \u91cc\u5199\u7684/kk\n\n---\n\n**[Portal](https://www.luogu.com.cn/problem/CF1282E)**\n\n\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u79cd\u4e09\u89d2\u5256\u5206\u65b9\u6cd5\uff0c\u4e00\u5b9a\u6709\u4e00\u4e2a\u4e09\u89d2\u5f62\u662f\u8fde\u63a5\u76f8\u90bb\u4e09\u4e2a\u9876\u70b9\u7684\uff0c\u8fd9\u662f\u5f02\u5e38\u663e\u7136\u7684\u3002\u8003\u8651\u4ece\u8fd9\u4e2a\u4e09\u89d2\u5f62\u5165\u624b\uff0c\u663e\u7136\u8fd9\u4e2a\u4e09\u89d2\u5f62\u8fde\u63a5\u7684\u4e09\u4e2a\u70b9\u4e2d\u95f4\u90a3\u4e2a\u53ea\u4f1a\u5728\u5171 $3(n-2)$ \u4e2a\u6570\u4e2d\u51fa\u73b0\u4e00\u904d\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a\u51fa\u73b0\u4e00\u904d\u7684\u70b9\uff08\u5982\u679c\u6709\u591a\u4e2a\u5219\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\uff09\uff0c\u5c06\u8fd9\u4e2a\u4e09\u89d2\u5f62\u5220\u6389\uff0c\u8fd9\u6837\u5f97\u5230\u4e86\u4e00\u4e2a\u5927\u5c0f\u4e3a $n-1$ \u7684\u591a\u8fb9\u5f62\uff0c\u54a6\uff0c\u53ef\u4ee5\u987a\u7740\u8fd9\u4e2a\u601d\u8def\u5f52\u7eb3\u4e0b\u53bb\u4e86\u3002\n\n\u5c31\u4e00\u76f4\u5220\u76f4\u5230\u5927\u5c0f\u4e3a $3$ \u4e3a\u6b62\u3002\u90a3\u4e48\u5256\u5206\u987a\u5e8f\u663e\u7136\u5c31\u662f\u5220\u9664\u987a\u5e8f\u3002\u81f3\u4e8e\u9876\u70b9\u987a\u5e8f\uff0c\u8003\u8651\u82e5 $n-1$ \u7684\u7b54\u6848\u662f\u5e8f\u5217 $a$\uff0c\u7136\u540e\u5220\u6389\u7684\u90a3\u4e2a\u4e09\u89d2\u5f62\u4ece\u5de6\u5230\u53f3\u5206\u522b\u662f $x,y,z$\u3002\u90a3\u4e48\u663e\u7136\u5728 $a$ \u4e2d $x,z$ \u662f\uff08\u73af\u5f62\uff09\u76f8\u90bb\u7684\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5c06 $y$ \u63d2\u5165\u5b83\u4eec\u4e24\u4e2a\u4e4b\u95f4\u5c31\u53ef\u4ee5\u5f97\u5230 $n$ \u7684\u9876\u70b9\u987a\u5e8f\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5b9e\u73b0\u3002\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u6bcf\u6b21\u5feb\u901f\u627e\u5230\u4ec5\u51fa\u73b0\u4e00\u6b21\u7684\u70b9\uff0c\u548c\u5982\u4f55\u5feb\u901f\u5728\u4e24\u4e2a\u6570\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u6570\u3002\n\n- \u5982\u4f55\u6bcf\u6b21\u5feb\u901f\u627e\u5230\u4ec5\u51fa\u73b0\u4e00\u6b21\u7684\u70b9\uff1a\u8003\u8651\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u6d41\u7a0b\uff0c\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u91cc\u9762\u88c5\u5f53\u524d\u6ca1\u88ab\u5904\u7406\u8fc7\u7684\u4ec5\u51fa\u73b0\u4e00\u6b21\u7684\u70b9\u3002\u7136\u540e\u7528\u5f53\u524d\u70b9\u53bb\u66f4\u65b0\u522b\u4eba\u51fa\u73b0\u6b21\u6570\uff0c\u5982\u679c\u6709\u88ab\u51cf\u6210 $1$ \u7684\u5c31\u538b\u5165\u3002\u7531\u4e8e\u4fdd\u8bc1\u6709\u89e3\uff0c\u6240\u4ee5\u80af\u5b9a\u80fd\u8fdb\u884c\u5230\u6700\u540e\u3002\n- \u5982\u4f55\u5feb\u901f\u5728\u4e24\u4e2a\u6570\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u6570\uff1a\u8003\u8651\u66b4\u529b\u5e73\u8861\u6811\uff08\u5927\u96fe\uff09\u3002\u8003\u8651\u94fe\u8868\u3002\u4f46\u662f\u94fe\u8868\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\u554a\uff0c\u6ca1\u5173\u7cfb\uff0c\u4f60\u4f1a\u53d1\u73b0\u5c31\u7b97\u652f\u6301\u968f\u673a\u8bbf\u95ee\u4f60\u4e5f\u4e0d\u4f1a\u505a\u3002\u6ce8\u610f\u5230\u4f60\u4e0d\u9700\u8981\u6839\u636e\u4e0b\u6807\u8bbf\u95ee\uff0c\u4f60\u53ea\u9700\u8981\u6839\u636e\u503c\u6765\u8bbf\u95ee\uff08\u4f60\u9700\u8981\u627e\u5230 $x$ \u548c $z$\uff09\uff0c\u800c\u503c\u6240\u5bf9\u5e94\u5730\u5740\u663e\u7136\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u4e8e\u662f\u6bcf\u63d2\u5165\u4e00\u4e2a\u503c\u5c31\u5b58\u4e0b\u5b83\u7684\u5730\u5740\u5c31\u597d\u4e86\u3002\n\n\u7ebf\u6027\u3002\n\n\uff08\u53d1\u73b0\u7f29\u8fdb\u662f\u7a7a\u9e3d\u54e6\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\n#define X first\n#define Y second\n#define pb push_back\nconst int N=100000;\nint n;\nint a[N+1],b[N+1],c[N+1];\nvector<int> hav[N+1];\nbool del[N+1];\nint cnt[N+1];\nvector<pair<int,pair<int,int> > > v;\nlist<int>::iterator it[N+1];\nlist<int>::iterator operator+(list<int>::iterator x,int){return ++x;}\nvoid mian(){\n    cin>>n;\n    //clear\n    for(int i=1;i<=n;i++)hav[i].clear();\n    memset(del,0,sizeof(del)),memset(cnt,0,sizeof(cnt));\n    v.clear();\n    for(int i=1;i<=n-2;i++)\n        scanf(\"%d%d%d\",a+i,b+i,c+i),\n        cnt[a[i]]++,cnt[b[i]]++,cnt[c[i]]++,\n        hav[a[i]].pb(i),hav[b[i]].pb(i),hav[c[i]].pb(i);\n    queue<int> q;\n    for(int i=1;i<=n;i++)if(cnt[i]==1)q.push(i);\n    vector<int> ans2;\n    for(int i=1;i<n-2;i++){\n        int x=q.front();\n        q.pop();\n        for(int i=0;i<hav[x].size();i++)if(!del[hav[x][i]]){\n            int fd=hav[x][i];\n            ans2.pb(fd);\n            if(b[fd]==x)swap(a[fd],b[fd]);\n            else if(c[fd]==x)swap(a[fd],c[fd]);\n            v.pb(mp(x,mp(b[fd],c[fd])));\n            del[fd]=true;\n            if(--cnt[b[fd]]==1)q.push(b[fd]);\n            if(--cnt[c[fd]]==1)q.push(c[fd]);\n            break;\n        }\n    }\n    list<int> lis;\n    for(int i=1;i<=n-2;i++)if(!del[i]){\n        ans2.pb(i);\n        lis.pb(a[i]),it[a[i]]=--lis.end();\n        lis.pb(b[i]),it[b[i]]=--lis.end();\n        lis.pb(c[i]),it[c[i]]=--lis.end();\n    }\n    for(int i=n-4;~i;i--){\n        int x=v[i].X,l=v[i].Y.X,r=v[i].Y.Y;\n        if(it[l]+1==it[r]||it[l]==--lis.end()&&it[r]==lis.begin())\n            lis.insert(it[l]+1,x),it[x]=it[l]+1;\n        else lis.insert(it[r]+1,x),it[x]=it[r]+1;\n    }\n    for(list<int>::iterator i=lis.begin();i!=lis.end();i++)printf(\"%d \",*i);puts(\"\");\n    for(int i=0;i<ans2.size();i++)printf(\"%d \",ans2[i]);puts(\"\");\n}\nint main(){\n    int testnum;\n    cin>>testnum;\n    while(testnum--)mian();\n    return 0;\n}\n```",
        "postTime": 1602595473,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1282E \u3010The Cake Is a Lie\u3011"
    }
]