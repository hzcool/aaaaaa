[
    {
        "content": "\u9898\u89e3\u533a\u7ebf\u6bb5\u6811\u5237\u5c4f/fad\n\n\u6240\u4ee5\u6211\u8981\u5199\u7684\u662f\u4f7f\u7528 st+\u4e8c\u5206\uff0c\u840c\u65b0\u90fd\u80fd\u8f7b\u677e\u770b\u61c2\u7684\u9898\u89e3/kel\n\n- \u524d\u7f6e\u77e5\u8bc6\n\nst \u8868\uff0cstl \u5e93\u51fd\u6570\n\n- \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u770b\u5230\u9898\u76ee\uff0c\u6211\u4eec\u53d1\u73b0\u5f97\u5230\u6ee1\u5206\u7b49\u4ef7\u4e8e\u540c\u65f6\u662f\u6240\u6709\u6570\u7684\u56e0\u5b50\u3002\n\n\u9898\u89e3\u533a\u90fd\u8bf4\u663e\u7136\u662f\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u6570\u662f\u533a\u95f4 $\\gcd$ \u624d\u5f97\u5230\u6ee1\u5206/fad\n\n\u5bf9\u4e8e\u6211\u8fd9\u79cd MnZn \u5f88\u4e0d\u53cb\u597d\uff0c\u6240\u4ee5\u6211\u8981\u7a0d\u5fae\u8bc1\u4e00\u4e0b\n\n\u5982\u679c\u6211\u4eec\u628a\u533a\u95f4\u5212\u5206\u6210\u4e24\u90e8\u5206\uff1a\n\n\u4e00\u90e8\u5206\u662f\u6211\u4eec\u9a8c\u8bc1\u662f\u5426\u4e3a\u6ee1\u5206\u7684\u8fd9\u4e2a\u6570\uff1b\n\n\u53e6\u5916\u4e00\u90e8\u5206\u662f\u5176\u4ed6\u6240\u6709\u6570\u3002\n\n\u6211\u4eec\u8bbe\u5176\u4ed6\u6570\u7684 $\\gcd$ \u4e3a $u$\uff0c\u8fd9\u4e2a\u6570\u4e3a $v$\uff0c\u5047\u8bbe $v$ \u662f\u533a\u95f4 $\\gcd$\u3002\n\n\u56e0\u4e3a $\\gcd$ \u6709\u7ed3\u5408\u5f8b\uff0c\u5f53\u4e14\u4ec5\u5f53 $\\gcd(u,v)=v$ \u65f6 $v$ \u662f\u6ee1\u5206\uff0c\u6b64\u65f6\u533a\u95f4 $\\gcd$ \u4e3a $\\gcd(u,v)$\uff0c\u6b64\u65f6 $v$ \u662f $u$ \u7684\u56e0\u5b50\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u628a**\u6b64\u65f6\u7684** $v$ \u8c03\u6210**\u521a\u624d\u7684**\u533a\u95f4 $\\gcd$ \u7684\u56e0\u5b50\uff0c\u90a3\u4e48\u533a\u95f4\u7684 $\\gcd$ \u4e5f\u4f1a\u8ddf\u7740\u53d8\u4e3a $v$\uff0c\u6b64\u65f6\u4f9d\u7136\u6210\u7acb\uff1a$v$ \u662f\u533a\u95f4 $\\gcd$\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5f97\u51fa\uff0c\u4e00\u4e2a\u6570\u5f97\u5230\u6ee1\u5206\u7b49\u4ef7\u4e8e\u5b83\u662f\u533a\u95f4 $\\gcd$\u3002\n\n\u8fd9\u9053\u9898\u5c31\u7b49\u4ef7\u4e8e\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217\uff0c\u591a\u6b21\u8be2\u95ee\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570**\u4e0d\u662f**\u533a\u95f4 $\\gcd$\u3002\n\n\u800c\u533a\u95f4 $\\gcd$\uff0c\u7531\u4e8e\u5b83\u7684\u53ef\u8986\u76d6\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528 st \u8868\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u6b63\u96be\u5219\u53cd\uff0c\u52a0\u5f3a\u95ee\u9898\uff0c\u5c31\u5f97\u5230\u4e86\u65b0\u7684\u9898\u76ee\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217\uff0c\u591a\u6b21\u8be2\u95ee\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570\u4e0e\u7ed9\u5b9a\u6570\u76f8\u540c\u3002\n\n\u800c\u6211\u4eec\u77e5\u9053\uff0c\u533a\u95f4\u7684 $\\gcd$ \u6709\u4e00\u4e2a\u7279\u70b9\uff1a\u5b83\u5c0f\u4e8e\u7b49\u4e8e\u533a\u95f4\u7684\u4efb\u4f55\u4e00\u4e2a\u6570\u3002\n\n\u6240\u4ee5\u95ee\u9898\u53c8\u53c8\u53c8\u8f6c\u5316\u4e3a\u533a\u95f4\u6700\u5c0f\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u5c31\u662f\u53e6\u4e00\u9053\u9898\u4e86\u3002\n\n- \u7ec6\u8282\u89e3\u6790\n\n\u6211\u4eec\u8f93\u5165\u540e\uff0c\u9664\u4e86\u505a\u533a\u95f4 $\\gcd$ \u7684 st \u8868\uff0c\u6211\u4eec\u8981\u518d\u7528\u53e6\u4e00\u4e2a\u5404\u4e2a\u5143\u7d20\u4e0e\u539f\u6765\u7684\u6570\u7ec4\u5143\u7d20\u76f8\u540c\u7684\u6570\u7ec4\uff0c\u6392\u5e8f\u53bb\u91cd\u540e\u6211\u4eec\u7528\u4e00\u4e2a `vector` \u6570\u7ec4\u548c\u4e00\u4e2a `map`\u3002\n\n\u4e0b\u9762\u628a\u7b2c\u4e00\u4e2a\u6570\u7ec4\u53eb\u505a\u65e7\u6570\u7ec4\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u53eb\u505a\u65b0\u6570\u7ec4\u3002\n\n`vector` \u662f\u4ece\u65b0\u6570\u7ec4\u63a8\u5230\u65e7\u6570\u7ec4\uff0c\u7528\u6765**\u987a\u5e8f**\u5b58\u50a8\u6bcf\u4e00\u4e2a\u5728\u65b0\u6570\u7ec4\u7684\u6307\u5b9a**\u4f4d\u7f6e**\u5bf9\u5e94\u7684\u65e7\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u4e0b\u6807\uff0c\u800c `map` \u662f\u7531\u65e7\u6570\u7ec4\u63a8\u5230\u65b0\u6570\u7ec4\uff0c\u7528\u6765\u5b58\u50a8\u6bcf\u4e00\u4e2a\u65e7\u6570\u7ec4\u7684**\u5143\u7d20\u503c**\u5bf9\u5e94\u7684\u65b0\u6570\u7ec4\u7684\u5143\u7d20\u4e0b\u6807\u3002\n\n\u5bf9\u6bcf\u4e00\u7ec4\u8be2\u95ee\uff0c\u5148\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u7684 $\\gcd$\uff0c\u7136\u540e\u901a\u8fc7 `map` \u6c42\u51fa\u4e0b\u6807\u3002\n\n\u7531\u4e8e `vector` \u6570\u7ec4\u662f\u65b0\u6570\u7ec4\u4e0b\u6807\u63a8\u5411\u65e7\u6570\u7ec4\u4e0b\u6807\uff0c\u6240\u4ee5\u5bf9\u8fd9\u4e2a\u4e0b\u6807\uff0c\u6211\u4eec\u653e\u5230\u5bf9\u5e94\u7684 `vector` \u91cc\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6c42\u7684\uff0c\u662f\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u8303\u56f4\u5728 `l~r` \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u901a\u8fc7\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u53ea\u8981\u6c42 `1~r` \u7684\u6570\u7684\u4e2a\u6570\u51cf\u53bb `1~l-1` \u7684\u6570\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u800c\u8fd9\u4e24\u4e2a\u503c\u6211\u4eec\u90fd\u53ef\u4ee5\u7528 `vector` \u4e2d\u7684 `upper_bound` \u6765\u5b9e\u73b0\u3002\n\n\u5230\u6b64\uff0c\u6211\u4eec\u7ec8\u4e8e\uff0c\u505a\u5b8c\u4e86\u672c\u9898\u3002\n\n- \u8be6\u89e3\u4ee3\u7801\n\n\u53d8\u91cf\u5b9a\u4e49\uff1a\n\n```cpp\nint n,t,l,r/*\u8f93\u5165*/,a[100005]/*\u65b0\u6570\u7ec4*/,f[100005][32]/*st \u8868\u7684\u6570\u7ec4*/;\nvector<int> e[100005];//vector \u6570\u7ec4\nmap<int,int> b;//map\n```\n\n\u9884\u5904\u7406\uff1a\n\n```cpp\ncin>>n;\nfor(int i=1;i<=n;i++)\n{\n    cin>>f[i][0];//\u8fd9\u91cc\u76f4\u63a5\u8f93\u5165\u6210 st \u8868\u4e86\uff08\u65e7\u6570\u7ec4\uff09\n    a[i]=f[i][0];//\u8fd9\u662f\u65b0\u6570\u7ec4\n}\nsort(a+1,a+n+1);//\u6392\u5e8f\nint l=unique(a+1,a+n+1)-a-1;//\u53bb\u91cd\nfor(int i=1;i<=n;i++)\n{\n\tint poi=lower_bound(a+1,a+1+l,f[i][0])-a;//\u627e\u5bf9\u5e94\u4f4d\u7f6e\n\te[poi].push_back(i),//\u8fd9\u4e2a\u662f\u987a\u5e8f\u6392\u7684\uff0c\u4e0b\u9762\u624d\u80fd\u4e8c\u5206\n   b[f[i][0]]=poi;//\u8bbe\u7f6e\u4f4d\u7f6e\n}\n//\u4e0b\u9762\u662f st \u8868\nfor(int j=1;(1<<j)<=n;j++)\n    for(int i=1;i+(1<<j)-1<=n;j++)\n        f[i][j]=__gcd(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n```\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8be2\u95ee\uff1a\n\n```cpp\ncin>>l>>r;\nint len=r-l+1,//\u533a\u95f4\u7684\u957f\u5ea6\nk=(int)log2(len);\nint poi=b[__gcd(f[l][k],f[r-(1<<k)+1][k])];//\u533a\u95f4 gcd \u5bf9\u5e94\u7684\u539f\u6570\u7ec4\u4f4d\u7f6e\nint lef=upper_bound(e[poi].begin(),e[poi].end(),l-1)-e[poi].begin();//\u5de6\u7aef\u70b9\nint rig=upper_bound(e[poi].begin(),e[poi].end(),r)-e[poi].begin();//\u53f3\u7aef\u70b9\nint cnt=rig-lef;//\u533a\u95f4\u5185\u90fd\u662f\ncout<<len-cnt;\n```\n\n\u52a0\u4e86\u4e24\u4e2a\u4e0d\u5f71\u54cd\u4ee3\u7801\u539f\u610f\u7684\u5c0f\u5f69\u86cb/cy\n\n\u5199\u9898\u89e3\u5f88\u6162\uff0c\u7403\u7403\u70b9\u4e2a\u8d5e/kel",
        "postTime": 1648447766,
        "uid": 342767,
        "name": "\u57f9\u6dc72021",
        "ccfLevel": 4,
        "title": "CF474F \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u6570\u7ec4$s_i$\uff0c\u6709$q$\u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a\u533a\u95f4$[l,r]$\uff0c\u95ee$[l,r]$\u91cc\u6709\u591a\u5c11\u4e2a\u6570\u80fd\u6574\u9664\u5176\u4ed6\u6570\n\n### Solution\n\n\u663e\u7136\u9898\u76ee\u95ee\u7684\u5c31\u662f$[l,r]$\u5185$gcd(s_{l},s_{l+1},\\cdots,s_{r})$\u7684\u4e2a\u6570\u3002\n\n\u800c\u5728$[l,r]$\u5185,$gcd(s_{l},s_{l+1},\\cdots,s_{r})=gcd(gcd(s_{l},s_{l+1},\\cdots,s_k),gcd(s_{k+1},s_{k+2},\\cdots,s_r))$\n\u53ef\u4ee5\u770b\u51fa\u662f\u6ee1\u8db3\u533a\u95f4\u52a0\u6cd5\u7684,\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u641e\n\n\u533a\u95f4$gcd$\u7684\u4e2a\u6570\u76f4\u63a5\u8bb0\u5f55\u5728\u533a\u95f4\u5185\uff0c\u5408\u5e76\u4e5f\u76f4\u63a5\u5408\u5e76\uff0c\u5957\u4e0a\u7ebf\u6bb5\u6811\u677f\u5b50\u5373\u53ef\n\n### Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;//\nint n,m;\nint val[200002*4],l[200002*4],r[200002*4],num[200002*4],a[200002];\nint gcd(int a,int b){\n\treturn __gcd(a,b);\n}\nvoid build(int left,int right,int rt){\n\tl[rt]=left;\n\tr[rt]=right;\n\tif(left==right){\n\t\tval[rt]=a[left];\n\t\tnum[rt]=1;\n\t\treturn ;\n\t}\n\tbuild(left,(left+right)/2,rt*2);\n\tbuild((left+right)/2+1,right,rt*2+1);\n\tval[rt]=gcd(val[rt*2],val[rt*2+1]);\n\tnum[rt]=(val[rt]==val[rt*2]?num[rt*2]:0)+(val[rt]==val[rt*2+1]?num[rt*2+1]:0);\n}\nint getGcd(int rt,int left,int right){\n\tif(l[rt]>=left&&r[rt]<=right)\n\t\treturn val[rt];\n\tif(right<=(l[rt]+r[rt])/2)\n\t\treturn getGcd(rt*2,left,right);\n\telse if(left>(l[rt]+r[rt])/2)\n\t\treturn getGcd(rt*2+1,left,right);\n\telse\n\t\treturn gcd(getGcd(rt*2,left,right),getGcd(rt*2+1,left,right));\n}\nint query(int rt,int left,int right,int t){\n\tif(l[rt]>=left&&r[rt]<=right)\n\t\treturn val[rt]==t?num[rt]:0;\n\tif(right<=(l[rt]+r[rt])/2)\n\t\treturn query(rt*2,left,right,t);\n\telse if(left>(l[rt]+r[rt])/2)\n\t\treturn query(rt*2+1,left,right,t);\n\telse\n\t\treturn query(rt*2,left,right,t)+query(rt*2+1,left,right,t);\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t}\n\tbuild(1,n,1);\n\tcin>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tint l,r;\n\t\tcin>>l>>r;\n\t\tcout<<r-l-query(1,l,r,getGcd(1,l,r))+1<<endl;\n\t}\n}\n```",
        "postTime": 1531306837,
        "uid": 46099,
        "name": "YCS_GG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    },
    {
        "content": "**[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/MnZnOIerLzy/articles/17367131.html)**\n\n# $\\texttt{Description}$\n\n**[CF474F](https://codeforces.com/problemset/problem/474/F \"CF474F\")**\n\n**[\u6d1b\u8c37 CF474F](https://www.luogu.com.cn/problem/CF474F \"\u6d1b\u8c37 CF474F\")**\n\n> - \u7ed9\u5b9a $a_1\\sim a_n$ \u548c $q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee $a_l\\sim a_r$ \u4e4b\u95f4\uff0c\u4e0d\u80fd\u6574\u9664\u533a\u95f4\u5185\u6240\u6709\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002\n>\n> - $n,q\\le 10^5$\uff0c$a_i\\le 10^9$\u3002\n\n# $\\texttt{Solution}$\n\n\u9996\u5148\u8865\u96c6\u8f6c\u5316\u4e3a**\u80fd\u6574\u9664\u533a\u95f4\u5185\u6240\u6709\u6570\u7684\u6570\u7684\u4e2a\u6570**\u3002\u8003\u8651\u600e\u6837\u7684\u6570\u6ee1\u8db3\u6027\u8d28\u3002\n\n\u5982\u679c\u4e00\u4e2a\u6570 $x$ **\u4e0d\u5728\u533a\u95f4\u5185**\u5e76\u4e14\u80fd\u6574\u9664\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\uff0c\u8bf4\u660e $x|\\gcd\\limits_{i=l}^ra_i$\u3002\u73b0\u5728\u8fd9\u4e2a\u6570\u5728\u533a\u95f4\u5185\uff0c\u8bf4\u660e\u5b83\u65e2\u662f $\\gcd$ \u7684\u500d\u6570\uff0c\u53c8\u662f $\\gcd$ \u7684\u7ea6\u6570\uff0c\u663e\u7136 $x=\\gcd\\limits_{i=l}^ra_i$\u3002\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u533a\u95f4\u5185 $\\gcd$ \u7684\u4e2a\u6570\u3002\u7528 **ST \u8868**\u7ef4\u62a4 $\\gcd$\uff0c\u7528**\u6811\u72b6\u6570\u7ec4\u5957 `unordered_map`** \u7ef4\u62a4\u533a\u95f4\u5185\u67d0\u4e2a\u6570\u7684\u4e2a\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log n)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n# $\\texttt{Code}$\n\n**[Submission](https://codeforces.com/contest/474/submission/204122778 \"Submission\")**\n\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint n,m,g[20][N],lg[N];\nunordered_map<int,int>bit[N];\nint gcd(int l,int r){\n\tint k=lg[r-l+1];\n\treturn __gcd(g[k][l],g[k][r-(1<<k)+1]);\n}\nvoid modify(int x,int k){\n\tfor(int i=x;i<=n;i+=i&(-i)){\n\t\t++bit[i][k];\n\t}\n}\nint query(int x,int k){\n\tint ret=0;\n\tfor(int i=x;i;i-=i&(-i)){\n\t\tif(bit[i].find(k)!=bit[i].end()){\n\t\t\tret+=bit[i][k];\n\t\t}\n\t}\n\treturn ret;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tlg[i]=log2(i);\n\t\tscanf(\"%d\",&g[0][i]);\n\t\tmodify(i,g[0][i]);\n\t}\n\tfor(int i=1;i<=lg[n];++i){\n\t\tfor(int j=1;j+(1<<i)-1<=n;++j){\n\t\t\tg[i][j]=__gcd(g[i-1][j],g[i-1][j+(1<<(i-1))]);\n\t\t}\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1,l,r;i<=m;++i){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tprintf(\"%d\\n\",r-l+1-(query(r,gcd(l,r))-query(l-1,gcd(l,r))));\n\t}\n}\n```",
        "postTime": 1682951585,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "CF474F Ant colony"
    },
    {
        "content": "## Solution\n\n\u5982\u679c\u4e00\u4e2a\u6570\u8981\u5f97\u5230\u6ee1\u5206\uff0c\u8bf4\u660e\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u90fd\u662f\u4ed6\u7684\u500d\u6570\u3002\n\n\u90a3\u8fd9\u4e2a\u6570\u4e00\u5b9a\u662f\u533a\u95f4\u7684\u6700\u5c0f\u516c\u7ea6\u6570\u3002\n\n\u53c8\u56e0\u4e3a\u4ed6\u4e00\u5b9a\u662f\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\n\n\u7528\u53cd\u8bc1\u6cd5\u6765\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u5982\u679c\u4ed6\u4e0d\u662f\u6700\u5c0f\u503c\uff0c\u90a3\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u66f4\u5c0f\u7684\u6570\uff0c\u800c\u66f4\u5c0f\u7684\u6570\u4e00\u5b9a\u4e0d\u53ef\u80fd\u662f\u4ed6\u7684\u500d\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u516c\u7ea6\u6570\uff0c\u6700\u5c0f\u503c\u7684\u4e2a\u6570\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd9\u662f\u91c7\u7528\u7684\u662f\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u5728\u4e00\u4e9b\u9898\u76ee\u4e2d\uff0c\u5999\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26\u80fd\u8282\u7701\u592a\u591a\u7684\u7801\u91cf\u3002\n\n\n```cpp\n/**\n *\tauthor: TLE_Automation\n *\tcreater: 2022.7.27\n**/\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<bitset>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define gc getchar \nusing namespace std;\ntypedef long long ll;\n//#define int long long\nconst int N = 1e6 + 10;\nconst int MAXN = 2e5 + 10;\nconst int mod = 998244353;\nconst int INF = 0x3f3f3f3f;\nconst ll inf = 0x3f3f3f3f3f3f3f3f;\ninline int gcd(int a, int b) {return !b ? a : gcd(b, a % b);}\ninline void print(int x) {if (x < 0) putchar('-'), x = -x; if(x > 9) print(x / 10); putchar(x % 10 + '0');}\ninline int ksm(int a, int b) {int base = a % mod, res = 1; while(b){if(b & 1) res = (res * base) % mod; base = (base * base) % mod, b >>= 1;}return res % mod;}\ninline int mul(int a, int b) {int base = a % mod, res = 0; while(b){if(b & 1) res = (res + base) % mod; base = (base + base) % mod, b >>= 1;}return res % mod;}\ninline char readchar() {static char buf[100000], *p1 = buf, *p2 = buf; return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;}\ninline int read() { int res = 0, f = 0; char ch = gc();for (; !isdigit(ch); ch = gc()) f |= (ch == '-'); for (; isdigit(ch); ch = gc()) res = (res << 1) + (res << 3) + (ch ^ '0'); return f ? -res : res;}\n\nnamespace Seg {\n\t#define lson rt << 1\n\t#define rson rt << 1 | 1\n\tstruct Node {\n\t\tint l, r, min, num, gcd; \n\t} tree[N << 2];\n\tNode operator + (const Node &a, const Node &b)  {\n\t\tNode res; \n\t\tres.min = std::min(a.min, b.min);\n\t\tres.gcd = gcd(a.gcd, b.gcd);\n\t\tif(a.min == b.min) res.num = a.num + b.num;\n\t\telse if(a.min < b.min) res.num = a.num;\n\t\telse if(b.min < a.min) res.num = b.num;\n\t\treturn res;\n\t}\n\tvoid pushup(int rt) {\n\t\ttree[rt].min = std::min(tree[lson].min, tree[rson].min);\n\t\ttree[rt].gcd = gcd(tree[lson].gcd, tree[rson].gcd);\n\t\tif(tree[lson].min == tree[rson].min) tree[rt].num = tree[lson].num + tree[rson].num;\n\t\telse if(tree[lson].min > tree[rson].min) tree[rt].num = tree[rson].num;\n\t\telse if(tree[rson].min > tree[lson].min) tree[rt].num = tree[lson].num;\n\t}\n\tvoid build(int rt, int l, int r) {\n\t\ttree[rt].l = l, tree[rt].r = r;\n\t\tif(l == r) {\n\t\t\ttree[rt].min = read();\n\t\t\ttree[rt].gcd = tree[rt].min;\t\t\n\t\t\ttree[rt].num = 1; return;\n\t\t} int mid = (l + r) >> 1;\n\t\tbuild(lson, l, mid), build(rson, mid + 1, r);\n\t\tpushup(rt);\n\t}\n\tNode Query(int rt, int l, int r) {\n\t\tif(tree[rt].l > r || tree[rt].r < l) return tree[0];\n\t\tif(tree[rt].l >= l && tree[rt].r <= r) return tree[rt];\n\t\treturn Query(lson, l, r) + Query(rson, l, r);\n\t}\n}\nusing namespace Seg;\n\nsigned main() \n{\n\tint n = read();\n\ttree[0].min = INF, tree[0].gcd = 0;\n\tbuild(1, 1, n);\n\tint Q = read();\n\tfor(int i = 1; i <= Q; i++) {\n\t\tint l = read(), r = read();\n\t\tNode ans = Query(1, l, r);\n\t\tint num = 0;\n\t\tif(ans.min == ans.gcd) num = ans.num;\n\t\tprintf(\"%d\\n\", r - l + 1 - num);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1659306665,
        "uid": 396974,
        "name": "Buried_Dream",
        "ccfLevel": 4,
        "title": "CF474F Ant colony \u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u6bd4\u8f83\u65e0\u8111\u7684\u505a\u6cd5\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u6570\u6ee1\u5206\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u662f\u8fd9\u4e2a\u533a\u95f4\u5185\u6bcf\u4e2a\u6570\u7684\u516c\u7ea6\u6570\uff0c\u4f46\u7531\u4e8e\u5b83\u540c\u65f6\u8981\u662f\u81ea\u5df1\u7684\u516c\u7ea6\u6570\uff0c\u4e8e\u662f\u5b83\u4e00\u5b9a\u662f\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002\n\n\u95ee\u9898\u53d8\u6210\u4e86\u7ed9\u5b9a\u533a\u95f4 $[l,r]$ \uff0c\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570\u4e0d\u7b49\u4e8e $\\gcd(a_l,a_{l+1},...,a_r)$ \u3002\n\n\u533a\u95f4\u6700\u5927\u516c\u7ea6\u6570\u53ef\u4ee5\u901a\u8fc7 ST \u8868 $\\mathcal{O}(n\\log^2 n)$ \u9884\u5904\u7406 $\\mathcal{O}(\\log n)$ \u67e5\u8be2\u6765\u7ef4\u62a4\uff0c\u533a\u95f4\u5185\u4e00\u4e2a\u6570\u7684\u4e2a\u6570\u53ef\u4ee5\u901a\u8fc7\u4e3b\u5e2d\u6570\u7ef4\u62a4\u3002\u7531\u4e8e $1\\leqslant s_i \\leqslant 10^9$ \uff0c\u9700\u8981\u79bb\u6563\u5316\u3002\n\n\u540c\u65f6\u9700\u8981\u7279\u5224\u5982\u679c\u533a\u95f4\u5185\u4e0d\u5b58\u5728 $\\gcd(a_l,a_{l+1},...,a_r)$ \uff0c\u8bf4\u660e $\\min(a_l,...,a_r)\\neq\\gcd(a_l,...,a_r)$ \uff0c\u518d\u5f00\u4e2a ST \u8868\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define maxn 100001\nusing namespace std;\n\nll n;\nll s[maxn];\nll q;\nll f[maxn][25];\nll g[maxn][25];\n\ninline ll read(){\n    ll x=0,f=0;char c=getchar();\n    while(!isdigit(c)) f|=c=='-',c=getchar();\n    while(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    return f?-x:x;\n}\n\ninline ll Gcd(ll x,ll y){return !y?x:Gcd(y,x%y);}\n\nll rt[maxn];\nll b[maxn];\nll ln;\n\nstruct T_Tree{\n    ll sm[maxn*40];\n    ll lc[maxn*40];\n    ll rc[maxn*40];\n    ll cnt=0;\n\n    T_Tree(){cnt=0;}\n\n    inline void build(ll &id,ll l,ll r){\n        id=++cnt;\n        sm[id]=lc[id]=rc[id]=0;\n        if(l==r) return;\n        ll mid=(l+r)>>1;\n        build(lc[id],l,mid),build(rc[id],mid+1,r);\n    }\n\n    inline void ins(ll &id,ll o,ll l,ll r,ll vl){\n        id=++cnt;\n        lc[id]=lc[o],rc[id]=rc[o],sm[id]=sm[o]+1;\n        if(l==r) return;\n        ll mid=(l+r)>>1;\n        if(vl<=mid) ins(lc[id],lc[o],l,mid,vl);\n        else ins(rc[id],rc[o],mid+1,r,vl);\n    }\n\n    inline ll qry(ll id,ll o,ll l,ll r,ll vl){\n        if(l==r) return abs(sm[o]-sm[id]);\n        ll mid=(l+r)>>1;\n        if(vl<=mid) return qry(lc[id],lc[o],l,mid,vl);\n        else return qry(rc[id],rc[o],mid+1,r,vl);\n    }\n}tr;\n\ninline ll qy(ll l,ll r){\n    ll lg=log2(r-l+1);\n    return Gcd(f[l][lg],f[r-(1<<lg)+1][lg]);\n}\n\ninline ll qym(ll l,ll r){\n    ll lg=log2(r-l+1);\n    return min(g[l][lg],g[r-(1<<lg)+1][lg]);\n}\n\nint main(){\n    n=read();\n    for(register int i=1;i<=n;++i) s[i]=f[i][0]=g[i][0]=read(),b[++ln]=s[i];\n    sort(b+1,b+ln+1),ln=unique(b+1,b+ln+1)-b-1;\n    for(register ll i=1;i<=25;++i)\n        for(register ll j=1;j+(1<<i)-1<=n;++j)\n            f[j][i]=Gcd(f[j][i-1],f[j+(1<<(i-1))][i-1]);\n    for(register ll i=1;i<=25;++i)\n        for(register ll j=1;j+(1<<i)-1<=n;++j)\n            g[j][i]=min(g[j][i-1],g[j+(1<<(i-1))][i-1]);\n    q=read();\n    tr.build(rt[0],1,ln);\n    for(register int i=1;i<=n;++i){\n        ll ap=lower_bound(b+1,b+ln+1,s[i])-b;\n        tr.ins(rt[i],rt[i-1],1,ln,ap);\n    }\n    for(register int i=1;i<=q;++i){\n        ll L,R;\n        L=read(),R=read();\n        ll gd=qy(L,R);\n        ll mn=qym(L,R);\n        if(gd!=mn) {printf(\"%lld\\n\",R-L+1);continue;}\n        gd=lower_bound(b+1,b+ln+1,gd)-b;\n        printf(\"%lld\\n\",R-L+1-tr.qry(rt[L-1],rt[R],1,ln,gd));\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1648371194,
        "uid": 104163,
        "name": "XeniaF",
        "ccfLevel": 7,
        "title": "CF474F"
    },
    {
        "content": "### P.S.\n@[serverkiller](https://www.luogu.com.cn/user/68030 \"\u53e3\u80e1\u5e26\u5e08\") \u63d0\u51fa\u4e86\u4e00\u4e2a\u5e8f\u5217\u5206\u5757\u5957\u503c\u57df\u5206\u5757\u7684\u505a\u6cd5\uff0c\u8be6\u60c5\u8bf7\u8be2\u95ee\u672c\u4eba\u3002  \n\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u505a\u6cd5\u662f\u7ebf\u6bb5\u6811\uff0c\u4e0e\u5176\u4ed6\u9898\u89e3\u601d\u8def\u7565\u6709\u4e0d\u540c\u3002  \n\n### Description.\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u591a\u6b21\u533a\u95f4\u8be2\u95ee\u3002  \n\u5bf9\u4e8e\u533a\u95f4\u4e2d\u7684\u4e24\u4e2a\u6570 $a,b$\uff0c\u82e5\u5b58\u5728 $b\\ |\\ a$\uff0c\u5219\u7ed9 $b$ \u52a0\u4e00\u5206\u3002  \n\u6bcf\u6b21\u8be2\u95ee $[L,R]$ \u4e2d\u6709\u591a\u5c11\u4e2a\u5f97\u4e86 $R-L+1$ \u5206\u3002\uff08\u6ee1\u5206  \n\n### Solution.\n\u6211\u4eec\u5bf9\u6bcf\u4e2a\u533a\u95f4\u4e2d\u6ee1\u5206\u7684\u6570\uff0c\u89c2\u5bdf\u4e00\u4e0b\u5b83\u7684\u6027\u8d28\u3002  \n\u56e0\u4e3a\u5b83\u6ee1\u5206\u4e86\uff0c\u6240\u4ee5\u5b83\u80af\u5b9a\u662f\u533a\u95f4\u5185\u6bcf\u4e2a\u6570\u7684\u516c\u7ea6\u6570\u3002  \n\u6839\u636e\u6700\u5927\u516c\u7ea6\u6570\u7684\u6027\u8d28\u53ef\u5f97\uff0c\u516c\u7ea6\u6570\u80af\u5b9a\u662f\u6700\u5927\u516c\u7ea6\u6570\u7684\u56e0\u6570\u3002  \n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u5176\u4e2d\u6240\u6709\u6ee1\u5206\u7684\u6570\u80af\u5b9a\u662f\u6240\u6709\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u7684\u56e0\u6570\u3002  \n\u56e0\u4e3a\u6ee1\u5206\u7684\u6570\u662f\u5c5e\u4e8e\u8fd9\u4e2a\u533a\u95f4\u7684\uff0c\u800c\u4e14 $\\gcd(a,b)\\le a$\u3002  \n\u6240\u4ee5\u6211\u4eec\u80fd\u53d1\u73b0\u6240\u6709\u6ee1\u5206\u7684\u6570\u80af\u5b9a\u6ee1\u8db3\u5b83\u7b49\u4e8e\u533a\u95f4 $\\gcd$\uff0c\u540c\u65f6\u5b83\u8fd8\u662f\u533a\u95f4\u6700\u5c0f\u503c\u3002  \n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4 $gcd$\uff0c\u4ee5\u53ca\u533a\u95f4\u7b49\u4e8e\u6700\u5c0f\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002  \n\u5177\u4f53\u89c1\u4ee3\u7801\u3002  \n\n### Code.\n```cpp\n//\u55ef\uff0c\u90a3\u6837\u7684\u8bdd\uff0c\u4f60\u5c31\u518d\u52aa\u529b\u4e00\u6b21\u8bd5\u8bd5\u5427\uff01\u522b\u5728\u8fd9\u79cd\u5730\u65b9\u754f\u754f\u7f29\u7f29\u7684\uff01\u522b\u5bf9\u81ea\u5df1\u8bf4\u8c0e\uff01\u518d\u52aa\u529b\u4e00\u6b21\u5427\u3002\n//\u6211\u8bf4\u8fc7\u4e86\uff0c\u82e5\u662f\u6709\u60f3\u8981\u62ef\u6551\u4e4b\u7269\uff0c\u5c31\u679c\u65ad\u5730\u51fa\u624b\u5168\u529b\u53bb\u5b88\u62a4!\n//\u62dc\u6258\u4e86\uff0c\u8bf7\u628a\u529b\u91cf\u501f\u7ed9\u8f6f\u5f31\u7684\u6211\uff0c\u7ed9\u6211\u4ece\u8fd9\u91cc\u518d\u5ea6\u8d77\u8eab\u8fc8\u6b65\u7684\u529b\u91cf\uff01\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{int min,mnn,gcd;}t[400005];//\u7ebf\u6bb5\u6811\nint n,q,a[100005];//min\u662f\u533a\u95f4\u6700\u5c0f\u503c\uff0cmnn\u662f\u533a\u95f4\u7b49\u4e8e\u6700\u5c0f\u503c\u7684\u6570\u7684\u4e2a\u6570\uff0cgcd\u662f\u533a\u95f4gcd\ninline int gcd(int a,int b) {return b?gcd(b,a%b):a;}//gcd\ninline node up(node a,node b)\n{//up\u51fd\u6570\uff0c\u7b80\u5355\u6613\u61c2\u4e86\u5427\uff08\n\tnode r;r.min=min(a.min,b.min),r.gcd=gcd(a.gcd,b.gcd);\n\tr.mnn=(a.min==r.min?a.mnn:0)+(b.min==r.min?b.mnn:0);return r;\n}\ninline void build(int x,int l,int r)\n{//\u7ebf\u6bb5\u6811\u6a21\u677f\uff0cbuild\u51fd\u6570\n\tif(l==r) t[x].gcd=t[x].min=a[l],t[x].mnn=1;\n\telse build(x<<1,l,(l+r)>>1),build(x<<1|1,((l+r)>>1)+1,r),t[x]=up(t[x<<1],t[x<<1|1]);\n}\ninline node query(int x,int l,int r,int dl,int dr)\n{//\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\uff0c\u6a21\u677f\n\tif(l>dr||dl>r) return (node){(int)1e9,0,0};else if(dl<=l&&r<=dr) return t[x];\n\treturn up(query(x<<1,l,(l+r)>>1,dl,dr),query(x<<1|1,((l+r)>>1)+1,r,dl,dr));\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",a+i);\n\tfor(build(1,1,n),scanf(\"%d\",&q);q--;)\n\t{\n\t\tint l,r;scanf(\"%d%d\",&l,&r);\n\t\tnode t=query(1,1,n,l,r);//\u67e5\u8be2\u7ed3\u679c\u8bb0\u5f55\uff0c\u9632\u6b62\u5e38\u6570\u7206\u70b8\n\t\t// printf(\"%d , %d : %d\\n\",t.gcd,t.min,t.mnn);\n\t\tprintf(\"%d\\n\",r-l+1-(t.gcd==t.min?t.mnn:0));//\u5982\u679c\u533a\u95f4\u6700\u5c0f\u503c=\u533a\u95f4gcd\uff0c\u90a3\u4e48\u5c31\u51cf\u53bb\u6700\u5c0f\u503c\u7684\u6570\u91cf\n\t}\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\u3002",
        "postTime": 1599113062,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF474F Ant colony\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u7b80\u5355\u9898\u3002\n\n\u663e\u7136\u53ef\u4ee5\u8f6c\u5316\u4e3a\u67e5\u8be2\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570\u6574\u9664\u533a\u95f4\u6240\u6709\u6570\u3002\n\n\u5982\u679c $A$ \u6574\u9664 $B$\uff0c\u90a3\u4e48 $A$ \u4e00\u5b9a\u4e0d\u5927\u4e8e $B$\uff0c\u6240\u4ee5\u533a\u95f4\u6240\u6709\u6570\u7684\u6700\u5927\u516c\u56e0\u6570\u4e00\u5b9a\u4e0d\u5927\u4e8e\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u53ea\u6709\u533a\u95f4\u6700\u5c0f\u503c\u53ef\u80fd\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\n\n\u5982\u679c\u4e00\u4e2a\u6570\u80fd\u6574\u9664\u533a\u95f4\u6240\u6709\u6570\uff0c\u4ee4 $C$ \u662f\u533a\u95f4\u6240\u6709\u6570\u7684\u6700\u5927\u516c\u56e0\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5fc5\u5b9a\u662f $C$ \u7684\u4e00\u4e2a\u56e0\u6570\uff0c\u5176\u4e2d $C$ \u4e0d\u5927\u4e8e\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n\u5bf9\u4e8e $C$ \u7684\u56e0\u6570\u4e2d\u5c0f\u4e8e $C$ \u7684\u6570\uff0c\u4e00\u5b9a\u4e0d\u53ef\u80fd\u51fa\u73b0\u5728\u5e8f\u5217\u4e2d\uff0c\u90a3\u4e48\u53ea\u6709 $C$ \u672c\u8eab\u53ef\u80fd\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u5224\u65ad $C$ \u662f\u5426\u7b49\u4e8e\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u5982\u679c\u662f\u4f1a\u4ea7\u751f\u6700\u5c0f\u503c\u51fa\u73b0\u6b21\u6570\u7684\u8d21\u732e\u3002\n\n\u4f7f\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\uff0c\u9700\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u6709\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u51fa\u73b0\u6b21\u6570\u548c\u533a\u95f4\u6700\u5927\u516c\u56e0\u6570\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n#include<set>\n#include<bitset>\n#define ls (p<<1)\n#define rs (p<<1|1)\n#define mid ((l+r)>>1)\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int N=1e5+10;\nint n,q,a[N];\nstruct point{\n\tint minn,sum,g;\n}T[N<<2];\npoint pushup(point x,point y){\n\tpoint ret;\n\tret.g=__gcd(x.g,y.g);\n\tif(x.minn<y.minn){\n\t\tret.minn=x.minn;\n\t\tret.sum=x.sum;\n\t\treturn ret;\n\t}\n\tif(x.minn>y.minn){\n\t\tret.minn=y.minn;\n\t\tret.sum=y.sum;\n\t\treturn ret;\n\t}\n\tret.minn=x.minn;\n\tret.sum=x.sum+y.sum;\n\treturn ret;\n}\nvoid build(int p,int l,int r){\n\tif(l==r){\n\t\tT[p].g=a[l];\n\t\tT[p].minn=a[l];\n\t\tT[p].sum=1;\n\t\treturn;\n\t}\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tT[p]=pushup(T[ls],T[rs]);\n}\npoint query(int L,int R,int p,int l,int r){\n\tif(L<=l&&r<=R)\n\t\treturn T[p];\n\tif(L<=mid&&R<=mid)\n\t\treturn query(L,R,ls,l,mid);\n\tif(L>mid&&R>mid)\n\t\treturn query(L,R,rs,mid+1,r);\n\treturn pushup(query(L,R,ls,l,mid),query(L,R,rs,mid+1,r));\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read();\n\tbuild(1,1,n);\n\tq=read();\n\twhile(q--){\n\t\tint l=read(),r=read(),ans=r-l+1;\n\t\tpoint ret=query(l,r,1,1,n);\n\t\tif(ret.minn==ret.g)\n\t\t\tans-=ret.sum;\n\t\tprintf(\"%d\",ans);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1682922131,
        "uid": 253738,
        "name": "\u542c\u53d6MLE\u58f0\u4e00\u7247",
        "ccfLevel": 7,
        "title": "CF474F \u9898\u89e3"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u3002\n\n\u82e5 $i$ \u5f97\u5230\u6ee1\u5206\uff0c\u5219 $\\forall j\\in[l,r],s_i|s_j$\uff0c\u5373 $s_i=\\gcd\\limits_{j=l}^r s_j$\u3002\n\n\u5373\u6c42\u533a\u95f4 $\\gcd$ \u51fa\u73b0\u6b21\u6570\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u533a\u95f4 $\\min$ \u51fa\u73b0\u6b21\u6570\u5199\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint n, m, g[100050 << 2], v[100050 << 2];\nvoid B(int s, int t, int p)\n{\n\tif(s == t) return (void)(scanf(\"%d\", g + p), v[p] = 1);\n\tint m = s + t >> 1;B(s, m, p << 1);B(m + 1, t, p << 1 | 1);\n\tg[p] = __gcd(g[p << 1], g[p << 1 | 1]);\n\tif(g[p] == g[p << 1]) v[p] += v[p << 1];\n\tif(g[p] == g[p << 1 | 1]) v[p] += v[p << 1 | 1];\n}\nint G(int l, int r, int s, int t, int p)\n{\n\tif(l <= s && t <= r) return g[p];int m = s + t >> 1;\n\tif(l <= m && r > m) return __gcd(G(l, r, s, m, p << 1), G(l, r, m + 1, t, p << 1 | 1));\n\tif(l <= m) return G(l, r, s, m, p << 1);if(r > m) return G(l, r, m + 1, t, p << 1 | 1);\n}\nint Q(int l, int r, int k, int s, int t, int p)\n{\n\tif(l <= s && t <= r) return v[p] * (g[p] == k);int m = s + t >> 1, q = 0;\n\tif(l <= m) q += Q(l, r, k, s, m, p << 1);if(r > m) q += Q(l, r, k, m + 1, t, p << 1 | 1);return q;\n}\nint main()\n{\n\tscanf(\"%d\", &n);B(1, n, 1);scanf(\"%d\", &m);\n\tfor(int i = 0, x, y;i < m;++i)\n\t\tscanf(\"%d%d\", &x, &y), printf(\"%d\\n\", y - x + 1 - Q(x, y, G(x, y, 1, n, 1), 1, n, 1));\n\treturn 0;\n}\n```\n",
        "postTime": 1680510206,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "CF474F Ant colony \u9898\u89e3"
    },
    {
        "content": "[$\\tt Link$](/problem/CF474F \"CF474F Ant colony\")\u3002\n\n\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u6837\u7684\u6570\u624d\u80fd\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u9996\u5148\u5b83\u5f97\u662f\u8fd9\u4e2a\u533a\u95f4\u6240\u6709\u6570\u7684\u56e0\u6570\uff0c\u5373 $a_i\\mid\\gcd(a_l,\\cdots,a_r)$\u3002\n\n\u4f46\u662f\u6211\u4eec\u77e5\u9053\u4e24\u4e2a\u6570\u7684 $\\gcd$ \u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e24\u4e2a\u6570\uff0c\u6240\u4ee5 $\\gcd(a_l,\\cdots,a_r)\\le\\min(a_l,\\cdots,a_r)\\le a_i$\u3002\n\n\u6240\u4ee5 $a_i=\\gcd(a_l,\\cdots,a_r)$\u3002\n\n\u7136\u540e\u5c31\u662f\u533a\u95f4\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u53ef\u4ee5\u503c\u57df `vector` \u5b58\u6bcf\u4e2a\u6570\u7684\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u6570\u7684 `vector` \u91cc\u9762\u4e8c\u5206\u7b97\uff08\u8fd9\u4e2a $\\tt trick$ \u6765\u81ea [P5048](/problem/P5048 \"P5048 [Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III\")\uff09\u3002\n\n```cpp\n#define rep(i,a,b) for(int i = (a);i <= (b);++i)\n#define range(_) begin(_),end(_)\n\nconst int N = 1e5 + 5;\n\nint n,m,a[N],b[N],cnt,st[20][N],lg2[N];\nunordered_map<int,int> M;\nvector<int> P[N];\n\nint main(){\n\tscanf(\"%d\",&n);\n\trep(i,1,n) scanf(\"%d\",a + i),st[0][i] = a[i];\n\trep(i,1,n) if(!M[a[i]]) M[a[i]] = ++cnt;\n\trep(i,1,n) P[M[a[i]]].push_back(i);\n\trep(i,2,n) lg2[i] = lg2[i >> 1] + 1;\n\trep(j,1,19) rep(i,1,n - (1 << j) + 1)\n\t\tst[j][i] = __gcd(st[j - 1][i],st[j - 1][i + (1 << j - 1)]);\n\tscanf(\"%d\",&m);\n\tfor(int l,r,i;m--;){\n\t\tscanf(\"%d%d\",&l,&r),i = lg2[r - l + 1];\n\t\tint v = M[__gcd(st[i][l],st[i][r - (1 << i) + 1])];\n\t\tprintf(\"%d\\n\",(r - l + 1) - (upper_bound(range(P[v]),r) - lower_bound(range(P[v]),l)));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1663980651,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF474F ST \u8868+vector\u4e0a\u4e8c\u5206"
    },
    {
        "content": "\u5982\u679c\u4e00\u4e2a\u6570\u5f97\u5230\u4e86\u6ee1\u5206\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u4e00\u5b9a\u662f\u6240\u6709\u6570\u7684\u516c\u56e0\u6570\uff0c\u4e8e\u662f\u8fd9\u4e2a\u6570\u4e00\u5b9a\u662f\u6240\u6709\u6570\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u8fd9\u4e2a\u6570\u4e00\u5b9a\u662f\u6240\u6709\u6570\u7684**\u6700\u5927\u516c\u56e0\u6570**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u628a\u8be2\u95ee\u8f6c\u5316\u4e3a\u533a\u95f4 $\\gcd$ \u7684\u4e2a\u6570\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528 `st` \u8868\u8ba1\u7b97\u533a\u95f4 $\\gcd$\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e86\u8be2\u95ee\u533a\u95f4\u67d0\u79cd\u6570\u7684\u4e2a\u6570\u3002\n\n\u8fd9\u4e1c\u897f\u53ef\u4ee5\u79bb\u6563\u5316\u540e\u5efa\u6876\uff0c\u7136\u540e\u518d\u6876\u5185\u5b58\u50a8\u6bcf\u4e2a\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u4e0b\u6807\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u4e8c\u5206\u5373\u53ef\u3002\n\n\u4f46\u4f60\u4f1a\u53d1\u73b0\u8fd9\u6837\u505a\u592a\u9ebb\u70e6\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u4e3b\u5e2d\u6811\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n\\log w+q(\\log w+\\log n))$\uff0c\u74f6\u9888\u5728\u4e8e `st` \u8868\u9884\u5904\u7406\uff0c\u5982\u679c\u6362\u6210\u7ebf\u6bb5\u6811\u7684\u8bdd\u53ef\u4ee5\u8fbe\u5230\u5355 $\\log$\uff0c\u4f46\u4e0d\u60f3\u5199\u3002\n\n```cpp\n#include <bits/stdc++.h>\nnamespace mystd {\n\tinline int read() {\n\t    char c = getchar();\n\t    int x = 0, f = 1;\n\t    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n\t    while (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + c - '0', c = getchar();\n\t    return x * f;\n\t}\n\tinline void write(int x) {\n\t    if (x < 0) x = ~(x - 1), putchar('-');\n\t    if (x > 9) write(x / 10);\n\t    putchar(x % 10 + '0');\n\t}\n}\nusing namespace std;\nusing namespace mystd;\n\nconst int maxn = 1e5 + 100;\nconst int maxs = 25;\nstruct hjtree { int lc, rc, sum; } tr[maxn << 7];\nint n, m, tot, a[maxn], rt[maxn], f[maxn][maxs];\n\n#define ls tr[x].lc\n#define rs tr[x].rc\n#define mid ((l + r) >> 1)\nvoid update(int l, int r, int p, int rt, int &x) {\n\tx = ++tot, tr[x] = tr[rt], tr[x].sum++;\n\tif (l == r) return;\n\tif (p <= mid) update(l, mid, p, tr[rt].lc, ls);\n\telse update(mid + 1, r, p, tr[rt].rc, rs);\n}\n\nint query(int l, int r, int p, int x) {\n\tif (!x) return 0;\n\tif (l == r) return tr[x].sum;\n\tif (p <= mid) return query(l, mid, p, ls);\n\telse return query(mid + 1, r, p, rs);\n}\n\nint gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }\nint gcds(int l, int r) {\n\tint len = log2(r - l + 1);\n\treturn gcd(f[l][len], f[r - (1 << len) + 1][len]);\n}\n\nsigned main() {\n\tn = read();\n\tfor (int i = 1; i <= n; i++) f[i][0] = a[i] = read(), update(1, 1e9, a[i], rt[i - 1], rt[i]);\n\tfor (int j = 1; (1 << j) <= n; j++) {\n\t\tfor (int i = 1; i + (1 << j) - 1 <= n; i++) {\n\t\t\tf[i][j] = gcd(f[i][j - 1], f[i + (1 << (j - 1))][j - 1]);\n\t\t}\n\t}\n\tm = read();\n\tfor (int i = 1, l, r; i <= m; i++) {\n\t\tl = read(), r = read();\n\t\tint g = gcds(l, r);\n\t\twrite(r - l + 1 - query(1, 1e9, g, rt[r]) + query(1, 1e9, g, rt[l - 1]));\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1663240898,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF474F Ant colony \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\uff1a\n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6574\u6570\u5e8f\u5217\uff0c\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u6c42\u51fa\u6240\u6709**\u4e0d\u80fd**\u88ab\u533a\u95f4\u6240\u6709\u6570\u6574\u9664\u7684\u6570\u91cf\u3002\n\n### \u9898\u89e3\uff1a\n\n\u8003\u8651\u8be2\u95ee\u533a\u95f4\u4e2d**\u80fd**\u88ab\u533a\u95f4\u6240\u6709\u6570\u7684\u6570\u91cf\u3002\n\n\u9996\u5148\u8fd9\u7c7b\u6570\u4e00\u5b9a\u662f\u8be2\u95ee\u533a\u95f4\u4e2d\u6700\u5c0f\u7684\u6570\uff0c\u4e14\u5fc5\u5b9a\u4e3a\u8fd9\u6bb5\u533a\u95f4\u6700\u5927\u516c\u56e0\u6570\u7684\u56e0\u6570\uff0c\u4f46\u53c8\u56e0\u4e3a\u8fd9\u7c7b\u6570\u662f\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u4e14\u533a\u95f4 $\\gcd$ \u5fc5\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u6545\u8fd9\u7c7b\u6570\u4e00\u5b9a\u4e3a\u533a\u95f4 $\\gcd$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7edf\u8ba1\u51fa\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u4e2a\u6570\uff0c\u4ee5\u53ca\u533a\u95f4 $\\gcd$.\n\n\u5728\u6bcf\u6b21\u8be2\u95ee\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u82e5\u533a\u95f4\u6700\u5c0f\u503c\u4e3a\u533a\u95f4 $\\gcd$\uff0c\u5219\u7b54\u6848\u7d2f\u52a0\u533a\u95f4\u6700\u5c0f\u503c\u6700\u5c0f\u503c\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u7ebf\u6bb5\u6811\u6bcf\u6b21\u67e5\u8be2\u4ee5\u53ca\u5efa\u6811\u90fd\u662f $O(\\log n)$ \u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a $O(q \\log n)$.\n\n### \u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tint f = 1, x = 0; char ch = getchar();\n\twhile((ch < '0' || ch > '9') && ch != '-') ch = getchar();\n\tif(ch == '-') f = -1, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();\n\treturn x * f;\n}\nconst int N = 1e5 + 10;\nstruct Segment {\n\tint g, cnt, minn;\n}t[N << 2]; \nint n, q, a[N];\nvoid pushup(int p) { //\u66f4\u65b0\u8282\u70b9\u7684\u503c\n\tt[p].minn = min(t[p << 1].minn, t[p << 1 | 1].minn);\n\tt[p].g = __gcd(t[p << 1].g, t[p << 1 | 1].g);\n\tif(t[p << 1].minn == t[p << 1 | 1].minn) t[p].cnt = t[p << 1].cnt + t[p << 1 | 1].cnt;\n\telse if(t[p << 1].minn < t[p << 1 | 1].minn) t[p].cnt = t[p << 1].cnt;\n\telse if(t[p << 1 | 1].minn < t[p << 1].minn) t[p].cnt = t[p << 1 | 1].cnt; \n}\nvoid build(int p, int l, int r) { //\u5efa\u6811\n\tint mid = l + r >> 1;\n\tif(l == r) {\n\t\tt[p].cnt = 1;\n\t\tt[p].g = a[l];\n\t\tt[p].minn = a[l]; \n\t}\n\telse {\n\t\tbuild(p << 1, l, mid);\n\t\tbuild(p << 1 | 1, mid + 1, r);\n\t\tpushup(p);\t\n\t}\n}\nSegment query(int p, int l, int r, int x, int y) { // \u67e5\u8be2\n\tif(l > y || r < x) return (Segment){0, 0, 1000000000};\n\tif(x <= l && r <= y) return t[p];\n\tint mid = l + r >> 1;\n\tSegment lc = query(p << 1, l, mid, x, y);\n\tSegment rc = query(p << 1 | 1, mid + 1, r, x, y);\n\tSegment tmp;\n\ttmp.minn = min(lc.minn, rc.minn);\n\ttmp.g = __gcd(lc.g, rc.g);\n\tif(lc.minn == rc.minn) tmp.cnt = lc.cnt + rc.cnt;\n\telse if(lc.minn < rc.minn) tmp.cnt = lc.cnt;\n\telse if(rc.minn < lc.minn) tmp.cnt = rc.cnt; \n\treturn tmp;\n}\nint main() {\n\tn = read();\n\tfor(int i = 1; i <= n; ++i) a[i] = read();\n\tbuild(1, 1, n);\n\tq = read();\n\twhile(q --) {\n\t\tint l, r;\n\t\tl = read(), r = read();\n\t\tSegment answer = query(1, 1, n, l, r);\n\t\tint ans = 0;\n\t\tif(answer.minn == answer.g) ans = answer.cnt; //\u5904\u7406\u7b54\u6848\n\t\tcout << r - l + 1 - ans << endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1653823639,
        "uid": 482642,
        "name": "hank0402",
        "ccfLevel": 0,
        "title": "CF474F Ant colony \u9898\u89e3"
    },
    {
        "content": "[in Blog](//milk-lemon.blog.luogu.org/solution-CF474F) & [Problem](//www.luogu.com.cn/problem/CF474F)\n\n## \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $s$\u3002\n- \u6709 $t$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $l,\\ r$\uff0c\u6c42\u51fa\u5bf9\u4e8e $l\\leq i\\leq r$\uff0c\u5b58\u5728\u4e00\u4e2a $l\\leq k\\leq r$\uff0c\u4f7f\u5f97 $s_i\\nmid s_k$ \u7684 $i$ \u7684\u4e2a\u6570\u3002\n- $1\\leq n,\\ t\\leq 10^5$\uff0c$1\\leq s_i\\leq 10^9$\n\n## \u89e3\u9898\u601d\u8def\n\n\u8003\u8651\u6c42\u51fa\u53d6 $l\\leq i\\leq r$\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 $l\\leq k\\leq r$\uff0c\u90fd\u6ee1\u8db3 $s_i\\mid s_k$ \u7684 $i$ \u7684\u4e2a\u6570\uff0c\u518d\u7528 $r-l+1$ \u51cf\u53bb\u6c42\u51fa\u7684\u6570\u91cf\u5373\u53ef\u3002\n\n\u6839\u636e\u6761\u4ef6\uff0c$s_i\\mid s_l,\\ s_i\\mid s_{l+1},\\ \\cdots,\\ s_i\\mid s_r$\uff0c\u5219 $s_i\\mid\\gcd_{k=l}^rs_k$\uff0c\u53c8\u56e0\u4e3a $s_i$ \u4e5f\u5728 $\\{s_l,\\ s_{l+1},\\ \\cdots,\\ s_r\\}$ \u4e2d\uff0c\u5219 $s_i=\\gcd_{k=l}^rs_k=\\min_{k=l}^rs_k$\u3002\n\n\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u516c\u56e0\u6570\uff0c\u4ee5\u53ca\u533a\u95f4\u4e2d\u7b49\u4e8e\u6700\u5c0f\u503c\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6545\u8fd8\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u8be2\u95ee\uff0c\u5224\u65ad\u533a\u95f4\u6700\u5c0f\u503c\u662f\u5426\u7b49\u4e8e\u533a\u95f4\u6700\u5927\u516c\u56e0\u6570\uff0c\u5982\u679c\u7b49\u4e8e\uff0c\u8bbe $t$ \u4e3a\u533a\u95f4\u4e2d\u7b49\u4e8e\u6700\u5c0f\u503c\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5219\u7b54\u6848\u4e3a $r-l+1-t$\uff0c\u5426\u5219\uff0c\u533a\u95f4\u4e2d\u4e0d\u5b58\u5728\u65e2\u4e3a\u6700\u5c0f\u503c\u53c8\u4e3a\u6700\u5927\u516c\u56e0\u6570\u7684\u6570\uff0c\u7b54\u6848\u4e3a $r-l+1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(t\\log n)$\u3002\n\n## AC \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\ninline int Gcd(int x,int y){\n    if(y==0)return x;\n    else return Gcd(y,x%y);\n}\nint n,s[100001];\nstruct node{\n    int gcd,minval,mintot;\n    inline node operator+(node x)const{\n        // \u5408\u5e76\u4e24\u6bb5\u6570\u7684\u4fe1\u606f \n        node tmp; tmp.mintot=0;\n        // \u6c42\u51fa\u533a\u95f4\u6700\u5927\u516c\u56e0\u6570\u548c\u6700\u5c0f\u503c\n        tmp.gcd=Gcd(gcd,x.gcd);\n        tmp.minval=min(minval,x.minval);\n        // \u82e5\u533a\u95f4\u6700\u5c0f\u503c\u7b49\u4e8e\u6700\u7ec8\u6700\u5c0f\u503c\uff0c\u5c31\u628a\u6570\u91cf\u52a0\u5165\u603b\u533a\u95f4\u6700\u5c0f\u503c\u4e2a\u6570\n        if(tmp.minval==minval)tmp.mintot+=mintot;\n        if(tmp.minval==x.minval)tmp.mintot+=x.mintot;\n        return tmp;\n    }\n}tree[400001];\nvoid work(int id,int l,int r){\n    if(l==r){\n        tree[id]={s[l],s[l],1};\n        return;\n    }\n    int mid=l+r>>1;\n    work(id<<1,l,mid); work((id<<1)+1,mid+1,r);\n    // \u5408\u5e76\u533a\u95f4\n    tree[id]=tree[id<<1]+tree[(id<<1)+1];\n}\nnode query(int id,int L,int R,int l,int r){\n    if(l==L&&r==R)return tree[id];\n    int mid=L+R>>1;\n    if(l<=mid&&r<=mid)return query(id<<1,L,mid,l,r);\n    if(l>mid&&r>mid)return query((id<<1)+1,mid+1,R,l,r);\n    return query(id<<1,L,mid,l,mid)+query((id<<1)+1,mid+1,R,mid+1,r);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",s+i);\n    work(1,1,n);\n    int t; scanf(\"%d\",&t);\n    while(t--){\n        int l,r; scanf(\"%d%d\",&l,&r);\n        node tmp=query(1,1,n,l,r);\n        if(tmp.gcd!=tmp.minval)printf(\"%d\\n\",r-l+1);\n        else printf(\"%d\\n\",r-l+1-tmp.mintot);\n    }\n    return 0;\n}\n```",
        "postTime": 1653219749,
        "uid": 234641,
        "name": "Milmon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF474F - Ant colony"
    },
    {
        "content": "## \u7b80\u7565\u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u5143\u7d20\u7684\u5e8f\u5217 $a$\uff0c\u5e76\u4e14\u7ed9\u5b9a $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u8bbe $g = \\gcd(a_l,a_{l+1}, a_{l+2}, \\cdots, a_r)$\uff0c\u8be2\u95ee $\\sum_{i=l}^r \\begin{cases} 1 & a_i \\neq g \\\\ 0 & \\text{otherwise} \\end{cases} $\uff0c\u5373\u6c42 $(r-l+1) - (\\sum_{i=l}^r \\begin{cases} 1 & a_i=g \\\\ 0 & \\text{otherwise} \\end{cases})$\u3002\n\n## \u89e3\u6cd5\n\n\u7ed9\u4e00\u4e2a\u79bb\u7ebf\u89e3\u6cd5\u3002\n\n\u7b2c\u4e00\u6b65\uff0c$a_i \\le 10^9$\uff0c\u8003\u8651\u5148\u79bb\u6563\u5316\u3002\n\n\u9996\u5148\u8003\u8651 $\\gcd(a_l,a_{l+1}, a_{l+2}, \\cdots, a_r)$\uff0c\u660e\u663e\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u7ef4\u62a4\u7684\u590d\u6742\u5ea6 $O(n \\cdot (\\log n + \\log v))$\uff0c\u56e0\u4e3a\u8ba1\u7b97 $\\gcd$ \u7684\u590d\u6742\u5ea6\u662f $\\log n$ \u7684\uff0c$v$ \u662f\u503c\u57df\u3002\n\n\u7ef4\u62a4\u5b8c\u4e4b\u540e\u660e\u663e\u8981\u6c42 $\\gcd(a_l,a_{l+1}, a_{l+2}, \\cdots, a_r)$ \u5728 $[l,r]$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5927\u5bb6\u90fd\u662f\u4ec0\u4e48 ST \u8868\u6216\u8005\u5176\u4ed6\u89e3\u6cd5\uff0c\u4f46\u662f\u51fa\u73b0\u6b21\u6570\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u83ab\u961f\u89e3\u51b3\u3002\n\n\u603b\u7ed3\u8d77\u6765\uff0c\u6211\u4eec\u5bf9\u6bcf\u6b21\u8be2\u95ee\u8ba1\u7b97 $\\gcd$\uff0c\u7136\u540e\u83ab\u961f\u7ef4\u62a4\u533a\u95f4 $[l,r]$ \u4e2d\u8fd9\u4e2a $\\gcd$ \u51fa\u73b0\u6b21\u6570\u3002\n\n\u63a5\u7740\u5206\u6790\u590d\u6742\u5ea6\uff1a\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u590d\u6742\u5ea6\u662f $O(n \\cdot (\\log n + \\log v))$\uff0c\u800c\u83ab\u961f\u590d\u6742\u5ea6 $O(n \\sqrt{n})$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6 $O(n \\cdot (\\log n + \\log v) + n \\sqrt{n})$\uff08\u5e94\u8be5\u6ca1\u9519\u5427\uff0c\u56e0\u4e3a $n,m \\le 10^5$\uff0c\u6240\u4ee5\u6211\u4eec\u7b97\u590d\u6742\u5ea6\u65f6\u5047\u8bbe $n,m$ \u540c\u9636\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053 $n \\cdot (\\log n + \\log v)$ \u548c $n \\sqrt{n}$ \u8c01\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u76f8\u52a0\u3002\u5982\u679c\u6709\u9519\u8bf7\u6307\u51fa\uff09\u3002\n\n\u590d\u6742\u5ea6\u597d\u50cf\u5f88\u5927\uff0c\u4f46\u662f\u6700\u6162\u7684\u70b9\u4e5f\u5c31\u4e09\u767e\u591a\u6beb\u79d2\uff0c\u8f7b\u677e\u901a\u8fc7\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4\u6709\u7d2b\u9898\u7684\u96be\u5ea6\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(2) \n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <utility>\n#include <unordered_map>\nusing namespace std;\n\nconst int N = 1e5 + 5;\n\ninline int gcd(int a, int b)\n{\n\treturn (b == 0 ? a : gcd(b, a % b));\n}\n\nint ans[N], a[N], b[N], n, m, len, cntk[N], real[N];\nunordered_map<int, bool> mp;\n\nstruct Node\n{\n\tint l, r, gcdn;\n}tree[N << 2];\n\ninline void push_up(int u)\n{\n\ttree[u].gcdn = gcd(tree[u << 1].gcdn, tree[u << 1 | 1].gcdn);\n}\n\ninline void build(int u, int l, int r)\n{\n\ttree[u] = { l, r };\n\tif (l == r) tree[u].gcdn = real[a[r]];\n\telse\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(u << 1, l, mid);\n\t\tbuild(u << 1 | 1, mid + 1, r);\n\t\tpush_up(u);\n\t}\n}\n\ninline int query(int u, int l, int r)\n{\n\tif (tree[u].l >= l && tree[u].r <= r) return tree[u].gcdn;\n\tint mid = (tree[u].l + tree[u].r) >> 1;\n\tint k = 0;\n\tif (l <= mid)\n\t{\n\t\tk = query(u << 1, l, r);\n\t}\n\tif (r > mid)\n\t{\n\t\tk = gcd(k, query(u << 1 | 1, l, r));\n\t}\n\treturn k;\n}\n\nstruct Nodeq\n{\n\tint rid, l, r, gcdn;\n\tbool operator<(const Nodeq& g) const\n\t{\n\t\tint i = l / len, j = g.l / len;\n\t\treturn (i ^ j ? i < j : i & 1 ? r < g.r : r > g.r);\n\t}\n}q[N];\n\ninline void add(int x)\n{\n\t++cntk[a[x]];\n}\n\ninline void del(int x)\n{\n\t--cntk[a[x]];\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tb[i] = a[i];\n\t\tmp[a[i]] = true;\n\t}\n\tsort(b + 1, b + n + 1);\n\tint place = unique(b + 1, b + n + 1) - b - 1;\n\tfor (register int i = 1; i <= n; ++i)\n\t{\n\t\tint k = a[i];\n\t\ta[i] = lower_bound(b + 1, b + place + 1, a[i]) - b + 1;\n\t\treal[a[i]] = k;\n\t}\n\tbuild(1, 1, n);\n\tscanf(\"%d\", &m);\n\tfor (register int i = 1; i <= m; ++i)\n\t{\n\t\tregister int l, r;\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tint qp = query(1, l, r);\n\t\tq[i] = { i, l, r, qp };\n\t}\n\tlen = sqrt(m);\n\tsort(q + 1, q + m + 1);\n\tregister int nl = 1, nr = 0;\n\tfor (register int i = 1; i <= m; ++i)\n\t{\n\t\tint l = q[i].l, r = q[i].r;\n\t\twhile (nl < l) del(nl++);\n\t\twhile (nl > l) add(--nl);\n\t\twhile (nr < r) add(++nr);\n\t\twhile (nr > r) del(nr--);\n\t\tif (!mp[q[i].gcdn]) ans[q[i].rid] = r - l + 1;\n\t\telse ans[q[i].rid] = (r - l + 1) - cntk[lower_bound(b + 1, b + place + 1, q[i].gcdn) - b + 1];\n\t}\n\tfor (register int i = 1; i <= m; ++i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1645338614,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF474F Ant colony"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u51fa\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4 $[L,R]$ \u4e2d\uff0c\u6709\u591a\u5c11\u6570\u4e0d\u80fd\u6574\u9664\u533a\u95f4 $[L,R]$\u3002\n### \u9898\u89e3\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u6574\u9664 $[L,R]$\uff0c\u8fd9\u4e2a\u6570\u5fc5\u7136\u662f $[L,R]$ \u7684\u6700\u5927\u516c\u7ea6\u6570\u3002\u82e5 $[L,R]$ \u4e2d\u6709 $num$ \u4e2a $\\gcd_{[L,R]}$\uff0c\u5219 $ans=R-L+1-num$\u3002\n\n\u56e0\u4e3a $\\gcd$ \u6ee1\u8db3\u7ed3\u5408\u5f8b\u4e0e\u4ea4\u6362\u5f8b\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u5feb\u901f\u8ba1\u7b97\u533a\u95f4 $\\gcd$\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8ba1\u7b97\u533a\u95f4 $\\gcd$ \u7684\u540c\u65f6\u8bb0\u5f55\u7b54\u6848\u3002\n\n\u8003\u8651\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u7ed3\u679c\uff1a\u533a\u95f4 $[L,k],[k+1,R]$ \u7684 $\\gcd$ \u4e0e $num$ \u5df2\u77e5 \uff0c\u6c42\u533a\u95f4 $[L,R]$ \u7684 $\\gcd$ \u4e0e $num$ \uff1f\n\n\u663e\u7136 $\\gcd_{[L,R]}=\\gcd(\\gcd_{[L,k]},\\gcd_{[k+1,R]})$\uff0c\u82e5 $\\gcd_{[L,R]}$ \u4e0e\u4e00\u4e2a\u5c0f\u533a\u95f4\u7684 $\\gcd$ \u76f8\u7b49\uff0c\u90a3\u5c31\u52a0\u4e0a\u8be5\u5c0f\u533a\u95f4\u7684 $num$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)-O(\\log^2n)$\n\n### \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define ls(pos) (pos<<1)\n#define rs(pos) (pos<<1|1)\n#define mid ((l+r)>>1)\nusing namespace std;\nint n,m,a[100005],seg[100005<<2],sum[100005<<2];\nvoid build(int pos=1,int l=1,int r=n)\n{\n\tif(l==r)\n\t{\n\t\tseg[pos]=a[l];\n\t\tsum[pos]=1;\n\t\treturn;\n\t}\n\tbuild(ls(pos),l,mid);\n\tbuild(rs(pos),mid+1,r);\n\tseg[pos]=__gcd(seg[ls(pos)],seg[rs(pos)]);\n\tif(seg[pos]==seg[ls(pos)])sum[pos]+=sum[ls(pos)];\n\tif(seg[pos]==seg[rs(pos)])sum[pos]+=sum[rs(pos)];\n}\nstruct node\n{\n\tint a,b;\n\tnode(){a=b=0;}\n\tnode(int x,int y){a=x,b=y;}\n\tnode operator +(node x)\n\t{\n\t\tnode ans;\n\t\tans.a=__gcd(a,x.a);\n\t\tif(ans.a==a)ans.b+=b;\n\t\tif(ans.a==x.a)ans.b+=x.b;\n\t\treturn ans;\n\t}\n};\nnode query(int lx,int rx,int pos=1,int l=1,int r=n)\n{\n\tif(lx<=l&&r<=rx)\n\t\treturn (node){seg[pos],sum[pos]};\n\tnode ans;\n\tif(lx<=mid)\n\t\tans=ans+query(lx,rx,ls(pos),l,mid);\n\tif(rx>mid)\n\t\tans=ans+query(lx,rx,rs(pos),mid+1,r);\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tbuild();\n\tscanf(\"%d\",&m);\n\tfor(int i=1,l,r;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tprintf(\"%d\\n\",r-l+1-query(l,r).b);\n\t}\n}\n```",
        "postTime": 1622849641,
        "uid": 87434,
        "name": "_Life_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    },
    {
        "content": "\u7b80\u5316\u4e00\u4e0b\u9898\u610f\uff1a\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u4e2d\u6240\u6709\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f\u5426\u7b49\u4e8e\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5982\u679c\u662f\u5219\u7b54\u6848\u4e3a\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u6700\u5c0f\u503c\u7684\u4e2a\u6570\uff0c\u5426\u5219\u5373\u4e3a\u533a\u95f4\u957f\u5ea6\u3002\n\n\u90a3\u4e48\u8fd9\u5c31\u53d8\u6210\u4e00\u9053\u6570\u636e\u7ed3\u6784\u9898\u4e86\u3002\n\n\u6700\u5c0f\u503c\u53ca\u4e2a\u6570\u53ea\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\uff0c\u5728 $query$ \u548c $pushup$ \u65f6\u6ce8\u610f\u5224\u65ad\uff0c\u5982\u679c\u513f\u5b50\u6700\u5c0f\u503c\u4e0e\u603b\u533a\u95f4\u6700\u5c0f\u503c\u76f8\u540c\uff0c\u5c31\u52a0\u513f\u5b50\u7684\u8d21\u732e\u3002\n\n\u81f3\u4e8e $querygcd(l, r)$ \u53ea\u8981\u7528 $st$ \u8868\u7ef4\u62a4\uff0c\u56e0\u4e3a\u4e0d\u5e26\u4fee\u6539\uff0c\u5426\u5219\u8fd8\u8981\u7528\u5dee\u5206\u7684\u7ebf\u6bb5\u6811\u505a\uff0c\u8f83\u4e3a\u9ebb\u70e6\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u9884\u5904\u7406\u4e24\u53ea $log$ \uff0c\u5355\u6b21\u67e5\u8be2\u4e00\u4e2a $log$ \u7684\u505a\u6cd5\u4e86\uff0c\u5199\u8d77\u6765\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684\u3002\n\n```cpp\ninline int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }\nconst int Maxn = 1e5 + 5, INF = 1e9;\nint n, q, lg[Maxn], st[Maxn][19];\nstruct SegmentTree {\n\tint tsm[Maxn << 2], tmn[Maxn << 2];\n\tinline void pushup(int pos) {\n\t\ttmn[pos] = min(tmn[pos << 1], tmn[pos << 1 | 1]);\n\t\tif (tmn[pos] == tmn[pos << 1]) tsm[pos] += tsm[pos << 1];\n\t\tif (tmn[pos] == tmn[pos << 1 | 1]) tsm[pos] += tsm[pos << 1 | 1];\n\t}\n\t\n\tinline void build(int pos, int l, int r) {\n\t\tif (l == r) { tsm[pos] = 1; tmn[pos] = st[l][0]; return; }\n\t\tint mid = l + r >> 1;\n\t\tbuild(pos << 1, l, mid),\n\t\tbuild(pos << 1 | 1, mid + 1, r);\n\t\tpushup(pos);\n\t}\n\t\n\tinline pair <int, int> query(int pos, int l, int r, int L, int R) {\n\t\tif (L <= l && R >= r) return Mp(tmn[pos], tsm[pos]);\n\t\tint mid = l + r >> 1; pair <int, int> ret, retl, retr;\n\t\tret = retl = retr = Mp(INF, 0);\n\t\tif (L <= mid) retl = query(pos << 1, l, mid, L, R);\n\t\tif (R > mid) retr = query(pos << 1 | 1, mid + 1, r, L, R);\n\t\tret.first = min(retl.first, retr.first);\n\t\tif (ret.first == retl.first) ret.second += retl.second;\n\t\tif (ret.first == retr.first) ret.second += retr.second;\n\t\treturn ret;\n\t}\n} T;\n\ninline int querygcd(int l, int r) {\n\tint k = lg[r - l + 1];\n\treturn gcd(st[l][k], st[r - (1 << k) + 1][k]);\n}\n\nsigned main(void) {\n\tread(n); lg[0] = -1;\n\tfor (int i = 1; i <= n; i++)\n\t\tread(st[i][0]), lg[i] = lg[i >> 1] + 1;\n\tT.build(1, 1, n);\n\tfor (int j = 1; j <= 18; j++)\n\tfor (int i = 1; i + (1 << j) - 1 <= n; i++)\n\t\tst[i][j] = gcd(st[i][j - 1], st[i + (1 << j - 1)][j - 1]);\n\tfor (read(q); q; q--) {\n\t\tint l, r, d;\n\t\tread(l), read(r);\n\t\td = querygcd(l, r);\n\t\tpair <int, int> ret = T.query(1, 1, n, l, r);\n\t\tif (ret.first == d) writeln(r - l + 1 - ret.second);\n\t\telse writeln(r - l + 1);\n\t}\n//\tfwrite(pf, 1, o1 - pf, stdout);\n\treturn 0;\n}\n```\n",
        "postTime": 1603602851,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u597d\u61c2\u4f46\u4e0d\u4f18\u7684\u89e3\u6cd5\u3002\n\n## \u3010\u601d\u8def\u3011\n\u9996\u5148\u5206\u6790\u67e5\u8be2\u7684\u672c\u8d28\u3002\n\n\u5176\u5b9e\u53ef\u8f6c\u5316\u4e3a\u95ee **\u8981\u6c42\u95ee\u4e00\u4e2a\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570\u662f\u5176\u4ed6\u6240\u6709\u6570\u7684\u56e0\u6570** \u3002\n\n\u663e\u7136\u8fd9\u4e2a\u6570\u662f\u533a\u95f4 $gcd$ \uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5c31\u9700\u8981\u77e5\u9053 **\u4e00\u4e2a\u533a\u95f4\u4e2d\u51fa\u73b0\u67d0\u4e2a\u6570\u7684\u6b21\u6570** \u3002\n\n\u672c\u849f\u84bb\u8868\u793a\u4e0d\u4f1a\u3002\n\n\u90a3\u6211\u4eec\u770b\u4e00\u770b\u8fd9\u4e2a\u6570\u6709\u4ec0\u4e48\u6027\u8d28\uff1a\n\n\u663e\u7136 $gcd(x,y)\\le x,y$ \u3002\n\n\u56e0\u6b64\u4e00\u4e2a\u533a\u95f4\u7684 $gcd$ \u82e5\u5b58\u5728\u4e8e\u8be5\u533a\u95f4\u5185\uff0c\u5fc5\u4e3a\u8be5\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\n\n\u6700\u5c0f\u503c\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u4e2a\u597d\u7edf\u8ba1\uff0c\u4e5f\u7528\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c\u67e5\u8be2\u5176\u533a\u95f4\u6700\u5c0f\u503c\u53ca\u5176\u51fa\u73b0\u6b21\u6570\uff0c\u4e0e\u533a\u95f4 $gcd$ \u5373\u53ef\u3002\n\n\u5224\u65ad\u533a\u95f4 $gcd$ \u662f\u5426\u4e0e\u6700\u5c0f\u503c\u76f8\u540c\uff0c\u82e5\u4e0d\u540c\uff0c\u8fd9\u8bf4\u660e\u533a\u95f4 $gcd$ \u4e0d\u5b58\u5728\u4e8e\u8be5\u533a\u95f4\u4e2d\uff0c\u8f93\u51fa $r-l+1$ \uff0c\u5426\u5219\u6709\u8981\u51cf\u53bb\u4e00\u4e2a\u7b49\u4e8e **\u6700\u5c0f\u503c\u5373gcd\u51fa\u73b0\u6b21\u6570\u7684** \u7684\u503c\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u800c\u4e14\u6ca1\u6709\u4fee\u6539\u53ea\u6709\u8be2\u95ee\uff0c\u5f88\u597d\u5b9e\u73b0\u3002\n\n## \u3010\u4ee3\u7801\u3011\n\uff08~~\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u53d8\u91cf\u540d\u662f bruh \u548c dude~~\uff09\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <typename T>\ninline void read(T &x){\n    x = 0;int fu = 1;\n    char c = getchar();\n    while(c > 57 || c < 48){\n        if(c == 45) fu = -1;\n        c = getchar();\n    }\n    while(c <= 57 && c >= 48){\n        x = (x << 3) + (x << 1) + c - 48;\n        c = getchar();\n    }\n    x *= fu;\n}\ntemplate <typename T>\ninline void fprint(T x){\n    if(x < 0) putchar(45), x = -x;\n    if(x > 9) fprint(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T>\ninline void fprint(T x, char ch){\n    fprint(x);putchar(ch);\n}\n\ntemplate <typename T>\ninline T mn(T x, T y) {return x < y ? x : y;}\ntemplate <typename T>\ninline T mx(T x, T y) {return x > y ? x : y;}\ntemplate <typename T>\ninline void chmin(T &x, T y) {(x > y) && (x = y);}\ntemplate <typename T>\ninline void chmax(T &x, T y) {(x < y) && (x = y);}\n\nLL gcd(LL x, LL y){return !y ? x : gcd(y, x % y);}\ninline LL lcm(LL x, LL y){return x / gcd(x, y) * y;}\ntypedef pair <LL, int> pi;\nint n;\nLL a[100005];\nstruct SegTree{//\u7ebf\u6bb5\u6811\n    pi num[400005];\n    LL sig[400005];\n    inline void pushup(int rt){\n        sig[rt] = gcd(sig[rt << 1], sig[rt << 1 | 1]);\n        if(num[rt << 1].first == num[rt << 1 | 1].first) num[rt] = make_pair(num[rt << 1].first, num[rt << 1].second + num[rt << 1 | 1].second);\n        else{\n            if(num[rt << 1].first < num[rt << 1 | 1].first) num[rt] = num[rt << 1];\n            else num[rt] = num[rt << 1 | 1];\n        }\n    }\n    #define LSON rt << 1, l, mid\n    #define RSON rt << 1 | 1, mid + 1, r\n    void build(int rt, int l, int r){\n        if(l == r){\n            num[rt] = make_pair(a[l], 1);\n            sig[rt] = a[l];\n            return ;\n        }\n        int mid = (l + r) >> 1;\n        build(LSON);build(RSON);\n        pushup(rt);\n    }\n    pi query_mn(int rt, int l, int r, int x, int y){\n        if(x <= l && r <= y) return num[rt];\n        int mid = (l + r) >> 1;\n        if(x <= mid && y > mid){\n            pi q1 = query_mn(LSON, x, y), q2 = query_mn(RSON, x, y);\n            if(q1.first == q2.first) return make_pair(q1.first, q1.second + q2.second);\n            else {\n                if(q1.first < q2.first) return q1;\n                else return q2;\n            }\n        }\n        if(x <= mid) return query_mn(LSON, x, y);\n        if(y > mid) return query_mn(RSON, x, y);\n        return make_pair(0ll, 0);\n    }\n    LL query_sig(int rt, int l, int r, int x, int y){\n        if(x <= l && r <= y) return sig[rt];\n        int mid = (l + r) >> 1;LL ret = 0;\n        if(x <= mid) ret = gcd(ret, query_sig(LSON, x, y));\n        if(y > mid) ret = gcd(ret, query_sig(RSON, x, y));\n        return ret;\n    }\n}t;\n\nint main(){\n    read(n);\n    for (register int i = 1;i <= n;i ++) read(a[i]);\n    t.build(1, 1, n);\n    int Q;read(Q);\n    while(Q --){\n        int l, r;read(l);read(r);\n        LL bruh = t.query_sig(1, 1, n, l, r);\n        pi dude = t.query_mn(1, 1, n, l, r);\n        if(bruh ^ dude.first) fprint(r - l + 1, 10);\n        else fprint(r - l + 1 - dude.second, 10);\n    }\n}\n```",
        "postTime": 1601279633,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    },
    {
        "content": "\u5c0f\u849f\u84bb\u6765\u6c34\u4e00\u53d1\u9898\u89e3 Q\u03c9Q\n\n# \u9898\u610f\n\u7ed9\u51fa\u533a\u95f4\uff0c\u6709\u591a\u5c11\u4e2a\u6570\u662f\u5176\u4ed6\u6240\u6709\u6570\u7684\u7ea6\u6570\uff1f\n\n\u663e\u7136\u81ea\u5df1\u662f\u81ea\u5df1\u7684\u7ea6\u6570\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u6539\u6210\n\n$$\\sum_{i=l}^{r}[a_i=\\gcd]$$\n\n# \u601d\u8def\n$\\gcd$ \u6211\u5c31\u5e72\u8106\u76f4\u63a5\u7528\u4e86 $\\tt st$ \u8868\u7ef4\u62a4\u3002\u9884\u5904\u7406\u5c31\u662f $\\mathcal O(n\\log^2n)$ \u4e86\uff0c\u771f\u7cdf\u7cd5\u2026\u2026\u4f46\u662f $\\gcd$ \u7684 $\\mathcal O(\\log n)$ \u590d\u6742\u5ea6\u86ee\u7c97\u7565\u7684\uff0c\u6240\u4ee5\u5e94\u8be5\u5b9e\u9645\u4e0a\u4e0d\u662f\u5f88\u5927\u3002\n\n\u63a5\u4e0b\u6765\u67e5\u8be2\u6570\u91cf\u5462\uff1f\u6211\u6709\u4e2a\u4e0d\u592a\u81ea\u7136\u7684\u60f3\u6cd5\uff0c\u5c06\u6811\u4e0a\u500d\u589e $\\tt lca$ \u7684\u601d\u60f3\u62ff\u8fc7\u6765\u7528\u4e00\u7528\u3002\u6211\u628a\u5927\u533a\u95f4\u62c6\u6210 $\\mathcal O(\\log n)$ \u4e2a\u5c0f\u533a\u95f4\u884c\u4e0d\u884c\uff1f\n\n\u6211\u4eec\u7528 $\\gcd[l_0,r_0]=\\gcd[l,r]$ \u4f5c\u4e3a\u552f\u4e00\u5224\u65ad\u4f9d\u636e\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u5219\u7d2f\u52a0 $[l_0,r_0]$ \u4e2d\u4e0e $\\gcd[l_0,r_0]$ \u76f8\u7b49\u7684\u6570\u5b57\u7684\u6570\u91cf\u3002\u56e0\u4e3a $\\gcd[l_0,r_0]>\\gcd[l,r]$ \u65f6\u4e00\u5b9a\u662f\u4e00\u4e2a\u90fd\u6ca1\u6709\u7684\u3002\u7531\u4e8e $[l_0,r_0]$ \u662f $[l,r]$ \u7684\u5b50\u533a\u95f4\uff0c\u4e0d\u53ef\u80fd $\\gcd[l_0,r_0]<\\gcd[l,r]$ \u6ef4\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u518d\u641e\u4e00\u4e2a $\\text{cnt}$ \u4e0e $\\tt st$ \u8868\u914d\u5408\uff0c\u5b58\u50a8\u4e00\u4e0b\u8be5\u533a\u95f4\u5185\uff0c\u6709\u591a\u5c11\u4e2a\u6570\u7b49\u4e8e $\\tt gcd$ \u3002\u663e\u7136\u8ddf $\\tt gcd$ \u9884\u5904\u7406\u65f6\u95f4\u76f8\u6bd4\u5fae\u4e0d\u8db3\u9053\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\mathcal O(n\\log^2n+q\\log n)$ \uff0c\u5e38\u6570\u6781\u5c0f\uff0c\u672c\u4eba\u9760\u5b83\u6682\u65f6\u6df7\u4e86\u4e00\u4e2a\u6700\u4f18\u89e3\u3002\u73b0\u5728\u662f $\\tt 2020/08/13$ \u4e0b\u5348 $4:50$ \uff0c\u7559\u4f5c\u7eaa\u5ff5\u3002\n\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\ntypedef long long int_;\ninline int readint(){\n\tint a = 0; char c = getchar(), f = 1;\n\tfor(; c<'0'||c>'9'; c=getchar())\n\t\tif(c == '-') f = -f;\n\tfor(; '0'<=c&&c<='9'; c=getchar())\n\t\ta = (a<<3)+(a<<1)+(c^48);\n\treturn a*f;\n}\ninline void writeint(int x){\n\tif(x > 9) writeint(x/10);\n\tputchar((x%10)^48);\n}\ninline int __gcd(int a,int b){\n\twhile(b) a %= b, swap(a,b); return a;\n}\n\nconst int MaxN = 100005, infty = (1<<30)-1;\nint st[20][MaxN], cnt[20][MaxN], lg2[MaxN];\n\nint main(){\n\tint n = readint(); lg2[0] = -1;\n\tfor(int i=1; i<=n; ++i){\n\t\tst[0][i] = readint();\n\t\tcnt[0][i] = 1; // itself\n\t\tlg2[i] = lg2[i>>1]+1;\n\t}\n\tfor(int j=0; (2<<j)<=n; ++j)\n\tfor(int i=1; i+(2<<j)-1<=n; ++i){\n\t\tst[j+1][i] = __gcd(st[j][i],st[j][i+(1<<j)]);\n\t\tif(st[j][i] == st[j+1][i])\n\t\t\tcnt[j+1][i] += cnt[j][i];\n\t\tif(st[j][i+(1<<j)] == st[j+1][i])\n\t\t\tcnt[j+1][i] += cnt[j][i+(1<<j)];\n\t}\n\tint q = readint();\n\twhile(q --){\n\t\tint l = readint(), r = readint();\n\t\tint g = lg2[r-l+1], ans = 0;\n\t\tg = __gcd(st[g][l],st[g][r-(1<<g)+1]);\n\t\tfor(int j,i=l; i<=r; ){\n\t\t\tj = (r+1-i)&(i-r-1); // lowbit\n\t\t\tj = lg2[j]; // log \u6570\u7ec4\u6d3e\u4e0a\u7528\u573a\uff01\n\t\t\tif(st[j][i] == g)\n\t\t\t\tans += cnt[j][i];\n\t\t\ti += (1<<j);\n\t\t}\n\t\twriteint(r-l+1-ans), putchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597308756,
        "uid": 123796,
        "name": "Damo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    },
    {
        "content": "[$\\Large\\color{violet}{Bl}\\color{pink}{og}$](http://geiz-revive.github.io/)\n\n\u8fd9\u9898\u7684\u9898\u610f\u662f\u8981\u6c42\u51fa\u4e0d\u80fd\u6574\u9664\u533a\u95f4\u5185\u6240\u6709\u6570\u7684\u4e2a\u6570\uff0c\u6b63\u96be\u5219\u53cd\u4e00\u4e0b\u5c31\u53d8\u6210\u4e86\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u80fd\u6574\u9664\u533a\u95f4\u5185\u6240\u6709\u6570\u7684\u4e2a\u6570\uff0c\u663e\u7136\u8fd9\u4e2a\u6570\u5c31\u662f\u533a\u95f4\u7684$gcd$\uff08\u7a9d\u592a\u83dc\u4e86\u4e00\u5f00\u59cb\u8fd8\u4ee5\u4e3a\u53ef\u4ee5\u662f$gcd$\u7684\u7ea6\u6570\uff0c\u540e\u6765\u53d1\u73b0\u662f\u7a9d\u50bb\u4e86\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a$sum$\u8ddf$gcd$\u662f\u5177\u6709\u53ef\u52a0\u6027\u7684\uff0c\u4e4b\u540e\u5c31\u5927\u529b\u4e0a\u7ebf\u6bb5\u6811\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u76ee\u524d\u662f\u672c\u9898\u6700\u4f18\u89e3\uff0c\u6b22\u8fce\u8d85\u8d8a\u3002\n\n\u7ef4\u62a4\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```cpp\nnode operator +(node a, node b) {\n\tnode c;\n\tc.gcd = gcd(a.gcd, b.gcd);\n\tc.sum = (a.gcd == c.gcd)*a.sum + (b.gcd == c.gcd)*b.sum;\n\treturn c;\n}\n```\n\n$\\large Code:$\n\n```cpp\n#pragma region revive\n#include <set>\n#include <map>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <cstdio>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <unordered_map>\n#define inl inline\n#define re register int\n#define fa(x) t[x].fa\n#define son(x,y) t[x].child[y]\n#define ls(x) t[x].child[0]\n#define rs(x) t[x].child[1]\n#define ll long long\nconst int inf = 0x3f3f3f3f;\n#define lowbit(x) ((x) & (-x))\nusing namespace std;\n#ifndef _DEBUG\n#define getchar() (*(IOB.in.p++))\n#define putchar(c) (*(IOB.out.p++)=(c))\n#define io_eof() (IOB.in.p>=IOB.in.pend)\nstruct IOBUF { struct { char buff[1 << 26], *p, *pend; }in; struct { char buff[1 << 26], *p; }out; IOBUF() { in.p = in.buff; out.p = out.buff; in.pend = in.buff + fread(in.buff, 1, 1 << 26, stdin); }~IOBUF() { fwrite(out.buff, 1, out.p - out.buff, stdout); } }IOB;\n#endif\ntemplate<typename IO>\ninl void write(IO x) {\n\tif (x == 0) return (void)putchar('0');\n\tif (x < 0)putchar('-'), x = -x;\n\tstatic char buf[30];\n\tchar* p = buf;\n\twhile (x) {\n\t\t*(p++) = x % 10 + '0';\n\t\tx /= 10;\n\t}\n\twhile (p > buf)putchar(*(--p));\n}\ninl void writestr(const char *s) { while (*s != 0)putchar(*(s++)); }\ntemplate<typename IO>inl void writeln(IO x) { write(x), putchar('\\n'); }\ntemplate<typename IO>inl void writesp(IO x) { write(x), putchar(' '); }\ninl int readstr(char *s) {\n\tchar *begin = s, c = getchar();\n\twhile (c < 33 || c>127) {\n\t\tc = getchar();\n\t}\n\twhile (c >= 33 && c <= 127) {\n\t\t*(s++) = c;\n\t\tc = getchar();\n\t}\n\t*s = 0;\n\treturn s - begin;\n}\ntemplate<typename IO>\ninl IO read() {\n\tIO x = 0;\n\tregister bool w = 0;\n\tregister char c = getchar();\n\twhile (c > '9' || c < '0') {\n\t\tif (c == '-') w = 1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn w ? -x : x;\n}\n#pragma endregion\ninl int gcd(int x, int y) { if (x < y)swap(x, y); return y ? gcd(y, x%y) : x; }\nstruct node {\n\tint gcd, sum;\n}t[500001];\nnode operator +(node a, node b) {\n\tnode c;\n\tc.gcd = gcd(a.gcd, b.gcd);\n\tc.sum = (a.gcd == c.gcd)*a.sum + (b.gcd == c.gcd)*b.sum;\n\treturn c;\n}\nint a[100001];\ninl void maintain(int x) { t[x] = t[x << 1] + t[x << 1 | 1]; }\ninl void build(int k, int l, int r) {\n\tif (l == r) { return (void)(t[k].gcd = a[l], t[k].sum = 1); }\n\tre mid = l + r >> 1;\n\tbuild(k << 1, l, mid), build(k << 1 | 1, mid + 1, r);\n\tmaintain(k);\n}\ninl node query(int k, int l, int r, int x, int y) {\n\tif (l >= x && r <= y)return t[k];\n\tre mid = l + r >> 1;\n\tnode ans = { 0,0 };\n\tif (x <= mid)ans = ans + query(k << 1, l, mid, x, y);\n\tif (y > mid)ans = ans + query(k << 1 | 1, mid + 1, r, x, y);\n\treturn ans;\n}\nsigned main() {\n\tre n = read<int>(), m;\n\tfor (re i = 1; i <= n; i++)a[i] = read<int>();\n\tbuild(1, 1, n);\n\tm = read<int>();\n\twhile (m--) {\n\t\tre x = read<int>(), y = read<int>();\n\t\twriteln(y - x + 1 - query(1, 1, n, x, y).sum);\n\t}\n}\n```\n\n",
        "postTime": 1561020546,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "CF474F Ant colony"
    },
    {
        "content": "\u53d1\u73b0\u5168\u7f51\u7adf\u6ca1\u6709\u4e00\u7bc7\u5206\u5757\u9898\u89e3\u3002\u3002\u3002\n\n\u770b\u6570\u636e\u8303\u56f4\uff0c\u6709\u6ca1\u6709\u4fee\u6539\uff0c\u611f\u89c9\u5206\u5757\u5e94\u8be5\u80fd\u8fc7\u3002\u3002\u3002\n\n\u663e\u7136\u7b54\u6848\u5c31\u662f\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u8fd9\u4e2a\u533a\u95f4\u5185\u503c\u4e3a $\\gcd$ \u7684\u6570\u7684\u4e2a\u6570\n\n\u6839\u636e $\\mathsf{BZOJ~2821}$ \u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u5f88\u5feb\u80fd\u591f\u60f3\u5230\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff1a\n\n\u9996\u5148\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u5757\u7684 $\\gcd$\uff0c\u67e5\u8be2\u65f6\u6bcf\u4e2a\u5757 $\\gcd$ \u540e\u518d\u548c\u4e0d\u5b8c\u6574\u5757\u5408\u5e76\u5373\u53ef\u5f97\u5230\u533a\u95f4 $\\gcd$\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u67e5\u8be2\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570\u7b49\u4e8e\u67d0\u4e2a\u786e\u5b9a\u7684\u6570\u4e86\u3002\n\n\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u6570\u79bb\u6563\u5316\uff0c\u7136\u540e\u4ee4 $f[i][j]$ \u8868\u793a\u524d $i$ \u4e2a\u5757\u4e2d\u79bb\u6563\u540e\u7684 $j$ \u51fa\u73b0\u4e86\u51e0\u6b21\n\n\u8fd9\u6837\u5c31\u5b8c\u4e8b\u4e86\n\n\u4e0d\u7b97 $map$ \u548c\u6c42 $\\gcd$ \u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(q\\sqrt n)$\uff0c\u4eb2\u6d4b\u80fd\u8fc7\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\n//#define int long long\n#define rep(i, a, b) for (int i = (a); i <= (b); i++)\n#define per(i, a, b) for (int i = (a); i >= (b); i--)\n#define loop(s, v, it) for (s::iterator it = v.begin(); it != v.end(); it++)\n#define cont(i, x) for (int i = head[x]; i; i = e[i].nxt)\n#define clr(a) memset(a, 0, sizeof(a))\n#define ass(a, sum) memset(a, sum, sizeof(a))\n#define lowbit(x) (x & -x)\n#define all(x) x.begin(), x.end()\n#define ub upper_bound\n#define lb lower_bound\n#define pq priority_queue\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define iv inline void\n#define enter cout << endl\n#define siz(x) ((int)x.size())\n#define file(x) freopen(#x\".in\", \"r\", stdin),freopen(#x\".out\", \"w\", stdout)\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef pair <int, int> pii ;\ntypedef vector <int> vi ;\ntypedef vector <pii> vii ;\ntypedef queue <int> qi ;\ntypedef queue <pii> qii ;\ntypedef set <int> si ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\nconst int N = 100010 ;\nconst int M = 320 ;\nconst int INF = 0x3f3f3f3f ;\nconst int iinf = 1 << 30 ;\nconst ll linf = 2e18 ;\nconst int MOD = 1000000007 ;\nconst double eps = 1e-7 ;\nvoid print(int x) { cout << x << endl ; exit(0) ; }\nvoid PRINT(string x) { cout << x << endl ; exit(0) ; }\nvoid douout(double x){ printf(\"%lf\\n\", x + 0.0000000001) ; }\n\nint n, nn, q, len, num ;\nint tmp[N], a[N], bl[N], l[M], r[M], f[M][N], g[M][M] ;\n// f[i][j] \u8868\u793a\u524di\u4e2a\u5757j\u51fa\u73b0\u7684\u6b21\u6570\uff08\u79bb\u6563\uff09\uff0cg[i][j] \u8868\u793a\u5757i\u5230j\u7684gcd\u4e3a\u591a\u5c11\nmii m, mm ;\n\nvoid lsh() {\n\trep(i, 1, n) tmp[i] = a[i] ;\n\tsort(tmp + 1, tmp + n + 1) ;\n\tnn = unique(tmp + 1, tmp + n + 1) - (tmp + 1) ;\n\trep(i, 1, n) m[a[i]] = lb(tmp + 1, tmp + nn + 1, a[i]) - tmp, mm[m[a[i]]] = a[i] ;\n}\n\nvoid build() {\n\tlen = sqrt(n), num = (n - 1) / len + 1 ;\n\trep(i, 1, n) bl[i] = (i - 1) / len + 1 ;\n\trep(i, 1, num) l[i] = (i - 1) * len + 1, r[i] = i * len ; r[num] = n ;\n\tlsh() ;\n\trep(i, 1, num) {\n        rep(j, 1, nn) f[i][j] = f[i - 1][j] ;\n        rep(j, l[i], r[i]) f[i][m[a[j]]]++ ;\n\t}\n\trep(i, 1, num) {\n\t\tg[i][i] = a[l[i]] ;\n\t\trep(j, l[i] + 1, r[i]) g[i][i] = __gcd(g[i][i], a[j]) ;\n\t}\n\trep(i, 1, num) {\n\t\trep(j, i + 1, num) g[i][j] = __gcd(g[i][j - 1], g[j][j]) ;\n\t}\n}\n\nint query(int x, int y) {\n\tint ans = 0, gc ;\n    if (bl[x] == bl[y]) {\n\t\tgc = a[x] ;\n\t\trep(i, x + 1, y) gc = __gcd(gc, a[i]) ;\n\t\trep(i, x, y) ans += (a[i] == gc) ;\n\t} else {\n\t\tgc = g[bl[x] + 1][bl[y] - 1] ;\n\t\trep(i, x, r[bl[x]]) gc = __gcd(gc, a[i]) ;\n\t\trep(i, l[bl[y]], y) gc = __gcd(gc, a[i]) ;\n\t\tans = f[bl[y] - 1][m[gc]] - f[bl[x]][m[gc]] ;\n\t\trep(i, x, r[bl[x]]) ans += (a[i] == gc) ;\n\t\trep(i, l[bl[y]], y) ans += (a[i] == gc) ;\n\t}\n\treturn (y - x + 1) - ans ;\n}\n\nsigned main(){\n\tscanf(\"%d\", &n) ;\n\trep(i, 1, n) scanf(\"%d\", &a[i]) ;\n\tbuild() ;\n\tscanf(\"%d\", &q) ;\n\twhile (q--) {\n\t\tint l, r ; scanf(\"%d%d\", &l, &r) ;\n\t\tprintf(\"%d\\n\", query(l, r)) ;\n\t}\n\treturn 0 ;\n}\n\n\n```",
        "postTime": 1550724675,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    },
    {
        "content": "\u90a3\u4efd\u9898\u89e3\u592a\u5de8\u4e86\u849f\u84bb\u770b\u4e0d\u61c2\u3002\u3002\u3002\n\u6211\u7684\u505a\u6cd5\u662f\u533a\u95f4gcd\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u7136\u540evector\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u96c6\u5408\uff0c\u4e8c\u5206\u4e00\u4e0b\u5373\u53ef\u627e\u5230\u533a\u95f4\u5185\u7684\u6570\u7684\u4e2a\u6570\u3002\u3002\n~~\u6ce8\u610f\u8303\u56f4\u6700\u5927\u662fll\uff0c\u4e0d\u79bb\u6563\u5316\u8fc7\u4e0d\u4e86~~\n```\n\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 200020;\n#define ll long long \nstruct node{\n    int gcd;\n    node *ls,*rs;\n}pool[MAXN * 2];\nnode *NewNode(){\n    static int cnt = 0;\n    pool[cnt].gcd = 0,pool[cnt].ls = pool[cnt].rs = NULL;\n    return &pool[cnt++];\n}\nvector<int> v[MAXN];\nmap<ll,int>f;\nint gcd(int x,int y){return y == 0 ? x : gcd(y, x % y);}\nint n,m;\nll a[MAXN],b[MAXN];\nnode *build(int l,int r){\n    if(l > r)return NULL;\n    node *rt = NewNode();\n    if(l == r){\n        rt->gcd = a[l];\n        return rt;\n    }\n    int mid = l + r >> 1;\n    rt->ls = build(l,mid);\n    rt->rs = build(mid + 1,r);\n    rt->gcd = gcd(rt->ls->gcd,rt->rs->gcd);  \n    return rt;\n}\nint query(node *rt,int l,int r,int L,int R){\n     if(l > R || r < L || l > r)return 0;\n     if(L <= l && r <= R){\n         return rt->gcd;\n     }\n    int ans = 0;\n    int mid = l + r >> 1;\n    ans = gcd(ans,query(rt->ls,l,mid,L,R));\n    ans = gcd(ans,query(rt->rs,mid + 1,r,L,R));\n    return ans;\n}\ninline void solve(int x,int l,int r){\n    x = f[x];\n    int ans = upper_bound(v[x].begin(),v[x].end(),r) - upper_bound(v[x].begin(),v[x].end(),l - 1);\n    printf(\"%d\\n\",r - l + 1 - ans);\n    return ;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i = 1; i <= n; ++i){\n        scanf(\"%lld\",&a[i]);\n        b[i] = a[i];\n    }\n    sort(b + 1,b + 1 + n);\n    int siz = unique(b + 1,b + 1 + n) - (b + 1);\n    for(int i = 1; i <= n; ++i){\n        int x = lower_bound(b + 1,b + 1 + siz,a[i]) - b;\n        f[a[i]] = x;\n        v[x].push_back(i); \n    }\n    node *rt = build(1,n);\n    scanf(\"%d\",&m);\n    for(int i = 1; i <= m; ++i){\n        int l,r;\n        scanf(\"%d %d\",&l,&r);\n        int g = query(rt,1,n,l,r);\n        solve(g,l,r);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1532681035,
        "uid": 52576,
        "name": "moye\u5230\u7897\u91cc\u6765",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    },
    {
        "content": "## \u9898\u76ee\u7b80\u8ff0\n\n- \u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $a_i$\u3002\n- \u7ed9\u51fa $q$ \u6b21\u8be2\u95ee\u6bcf\u6b21\u7ed9\u51fa $l,r$\uff0c\u95ee\u6709\u591a\u5c11\u4e2a $i\\in [l,r],\\exists j\\in[l,r]$ \u4f7f\u5f97 $a_i\\not | a_j$\u3002\n- $n,q\\leq 10^5$\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u53cd\u9762\u8003\u8651\uff0c\u5982\u679c $\\exists i\\in[l,r],\\forall j\\in[l,r],a_i|a_j$ \u90a3\u4e48\u663e\u7136 $a_i$ \u662f $i\\in[l,r]$ \u5f53\u4e2d\u6700\u5c0f\u7684\u3002\u5e76\u4e14\u8fd8\u6709 $\\gcd_l^r=a_i$\u3002\n\n\u8003\u8651\u7528 ST \u8868\u5b8c\u6210\uff0c\u7ef4\u62a4\u4e00\u4e2a $2^i$ \u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u7684\u4e2a\u6570\uff0c\u533a\u95f4 gcd\u3002\u8fd9\u90fd\u662f\u53ef\u4ee5\u7528 ST \u8868\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(q\\log n)$\u3002\u5b8c\u7ed3\u6492\u82b1\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int MAXN=1e5+5;\nstruct node{\n\tint minn,cnt,gcd;\n}f[20][MAXN];\nint n,m;\nint a[MAXN];\nint l,r;\nint gcd(int x,int y){\n\treturn (x%y==0)?y:gcd(y,x%y);\n}\nnode add(node x,node y){\n\tif(x.minn<y.minn) return node{x.minn,x.cnt,gcd(x.gcd,y.gcd)};\n\tif(x.minn==y.minn) return node{x.minn,y.cnt+x.cnt,gcd(x.gcd,y.gcd)};\n\treturn node{y.minn,y.cnt,gcd(x.gcd,y.gcd)};\n}\nvoid init(){\n\tfor(int i=1;i<=n;i++)\n\t\tf[0][i]=node{a[i],1,a[i]};\n\tfor(int i=1;(1<<i)<=n;i++)\n\t\tfor(int j=1;(1<<i)+j-1<=n;j++)\n\t\t\tf[i][j]=add(f[i-1][j],f[i-1][j+(1<<i-1)]);\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tinit(); \n\tcin>>m;\n\twhile(m--){\n\t\tnode x=node{0,0,0};\n\t\tcin>>l>>r;\n\t\tint L=l;\n\t\tfor(int i=19;i>=0;i--)\n\t\t\tif(l+(1<<i)<=r+1){\n\t\t\t\tif(x.gcd==0)\n\t\t\t\t\tx=f[i][l];\n\t\t\t\telse\n\t\t\t\t\tx=add(x,f[i][l]);\n\t\t\t\tl+=(1<<i);\n\t\t\t}\n\t\tif(x.gcd==x.minn) cout<<r-L+1-x.cnt<<endl;\n\t\telse cout<<r-L+1<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1646053651,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "CF474F Ant colony \u9898\u89e3"
    },
    {
        "content": "\u770b\u4e86\u770b\u9898\u89e3\u533a\u6ca1\u6709ST\u8868\u7684\uff0c\u6211\u6765\u5199\u4e00\u4e2a\u3002\n\n### \u9898\u610f\n\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u6ce8\u610f\u6587\u4e2d $|$ \u7b26\u53f7\u6307\u7684\u662f\u6574\u9664\u3002\n\n## \u9898\u89e3\n\u663e\u7136\uff0c\u9898\u610f\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42 $[l, r]$ \u5185\u6709\u51e0\u4e2a\u6570\u4e3a $\\gcd(a_l, a_{l+1},\\dots,a_r)$ \u3002\n\n\u8003\u8651\u53ef\u4ee5\u7ef4\u62a4$\\gcd$\u7684\u6570\u636e\u7ed3\u6784\uff0c\u56e0\u4e3a $\\gcd(a, b, c)=\\gcd(\\gcd(a,b),\\gcd(b,c))$ \uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528ST\u8868\u7ef4\u62a4\uff0c\u4e0d\u4f1a\u7684\u8bf7\u53f3\u8f6c[P3865 \u3010\u6a21\u677f\u3011ST\u8868](https://www.luogu.com.cn/problem/P3865)\u3002\u4e5f\u53ef\u4ee5\u5728[P1890 gcd\u533a\u95f4](https://www.luogu.com.cn/problem/P1890)\u9a8c\u8bc1\u4e00\u4e0b\u7b97\u6cd5\u6b63\u786e\u6027\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u5f88\u5feb\u7684\u5728 $O(n\\log n\\log a+q)$ \u7684\u590d\u6742\u5ea6\u4e2d\u6c42\u5f97\u533a\u95f4\u6700\u5927\u516c\u7ea6\u6570\uff0c\u6240\u4ee5\u95ee\u9898\u5c31\u5728\u4e8e\u6c42\u5b9a\u533a\u95f4\u5185\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u7528 `lower_bound` \u548c `upper_bound` \u6765\u6c42\u3002\u5148\u5c06\u539f\u6570\u7ec4\u6309\u7167\u5927\u5c0f\u6392\u5e8f\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a\u4e0b\u6807\u5927\u5c0f\uff0c\u5c31\u80fd\u5728 $O(2\\times\\log n)$ \u4e2d\u627e\u5230\u539f\u6570\u7ec4\u4e2d\u503c\u4e3a\u67d0\u6570\u7684\u8303\u56f4\u3002\u518d\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u627e\u4e0b\u6807\u5728 $[l,r]$ \u533a\u95f4\u5185\u7684\uff0c\u6700\u574f\u4ecd\u4e3a $O(2\\times\\log n)$ \u3002\n\n\u8fd9\u91cc\u7528\u5230\u4e86\u52a0\u4e86 cmp \u6bd4\u8f83\u51fd\u6570\u7684\u4e8c\u5206\u67e5\u627e\uff0c\u4e0d\u4e86\u89e3\u7684\u53ef\u4ee5\u767e\u5ea6\u4e00\u4e0b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n\\log a+q\\log n)$ \u3002\n\n### \u4ee3\u7801\n~~\u4e0d\u8981\u5728\u610f`__gcd`\u5566~~\n\n~~\u81ea\u52a8C++11~~\n```cpp\n#define MAXN 100005\nint n;\nint a[MAXN];\nint st[MAXN][20];\nint lg2[MAXN];\ninline int query(int l, int r) {\n    int k = lg2[r - l + 1];\n    return __gcd(st[l][k], st[r - (1 << k) + 1][k]);\n}\nstruct node {\n    int val, id;\n    inline bool operator < (const node& rhs) const { return val == rhs.val ? id < rhs.id : val < rhs.val; }\n    inline node() { }\n    inline node(int val, int id) : val(val), id(id) { }\n} s[MAXN];\nsigned main() {\n    read(n);\n    int q;\n    for(int i = 1; i <= n; i++) {\n        read(s[i].val), s[i].id = i;\n        st[i][0] = s[i].val;\n    }\n    for(int j = 1; (1 << j) <= n; j++)\n        for(int i = 1; i + (1 << j) - 1 <= n; i++)\n            st[i][j] = __gcd(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);\n    for(int i = 1, x = 0, p2 = 1; i <= n; i++) {\n        if((p2 << 1) == i) x++, p2 <<= 1;\n        lg2[i] = x;\n    }\n    sort(s + 1, s + n + 1);\n    read(q);\n    while(q--) {\n        int l, r; read(l, r);\n        int d = query(l, r);\n        int le = lower_bound(s + 1, s + n + 1, node(d, 0), [](node a, node b) { return a.val < b.val; } ) - s;\n        int ri = upper_bound(s + 1, s + n + 1, node(d, 0), [](node a, node b) { return a.val < b.val; } ) - s;\n        int idr = upper_bound(s + le, s + ri, node(d, r), [](node a, node b) { return a.id < b.id; } ) - s;\n        int idl = lower_bound(s + le, s + ri, node(d, l), [](node a, node b) { return a.id < b.id; } ) - s;\n        write(r - l + 1 - (idr - idl), '\\n');\n    }\n}\n```",
        "postTime": 1597312065,
        "uid": 104241,
        "name": "Sora\u9171",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    },
    {
        "content": "\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6709\u4e00\u4e9b$define$\u9700\u8981\u4e86\u89e3(\u4e0d\u7136\u770b\u4e0d\u61c2)\n\n```cpp\n#define ri register int\n#define ll long long\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n#define leaf (l==r)\n```\n\n\u867d\u7136\u9898\u76ee\u5df2\u7ecf\u7b80\u5316\uff0c\u8fd8\u662f\u6765\u7ffb\u8bd1\u4e0b\u9898\u610f\u5427\uff1a\n\n>\u7ed9\u4f60\u4e00\u4e2a\u533a\u95f4\uff0c\u6bcf\u6b21\u95ee\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6570\u5b57`\u4e0d\u7b49\u4e8e`\u533a\u95f4 $gcd$ \u7684\u6709\u591a\u5c11\u4e2a\u3002\n\n\u600e\u6837\uff1f\u6709\u601d\u8def\u4e86\uff1f\u4e00\u4e2a\u88f8\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4$gcd$\n\n\u663e\u7136\uff0c$gcd$\u548c\u9898\u76ee\u6240\u6c42\u7684\u6570\u7684\u4e2a\u6570\u90fd\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u6027\uff0c\u6240\u4ee5\u8bf4\u7ebf\u6bb5\u6811\u641e\u5b9a\u3002\n\n\u6bcf\u6b21\u7ef4\u62a4\u7684\u65f6\u5019\uff0c$gcd$\u76f4\u63a5\u52a0\uff0c\u800c\u4e2a\u6570$sum$\u5982\u679c\u5224\u65ad\u51fa\u7236\u5b50\u533a\u95f4\u7ed3\u70b9\u7684$gcd$\u76f8\u540c\uff0c\u6211\u4eec\u5c31\u628a\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u52a0\u5165\u5230\u7236\u8282\u70b9\u7684\u4e2a\u6570\u91cc\u3002\n\n\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u7684$gcd$\u540c\u5176\u7236\u7ed3\u70b9\u7684\u533a\u95f4$gcd$\u76f8\u540c\uff0c\u90a3\u4e48\u6ee1\u8db3\u7b49\u4e8e\u533a\u95f4$gcd$\u7684\u6570\u7684\u4e2a\u6570\u4e00\u5b9a\u53ef\u4e0a\u4f20\u3002\n\n\u5148\u628a\u7ef4\u62a4\u5199\u597d\uff1a\n\n```cpp\nvoid pushup(ll nd)\n{\n\tseg[nd].gcd=__gcd(seg[ls(nd)].gcd,seg[rs(nd)].gcd);\n   \t//\u4e00\u53e5\u8bdd\u7ef4\u62a4gcd\n\tseg[nd].sum=0;//\u4e2a\u6570\u5f52\u96f6\n\tif(seg[nd].gcd==seg[ls(nd)].gcd)\n\t{\n\t\tseg[nd].sum+=seg[ls(nd)].sum;\n\t}\n\tif(seg[nd].gcd==seg[rs(nd)].gcd)\n\t{\n\t\tseg[nd].sum+=seg[rs(nd)].sum;\n\t}//\u5206\u522b\u52a0\n}\n```\n\n\u5efa\u6811\u8fc7\u7a0b\u8fc7\u4e8e\u7b80\u5355\uff0c\u6b64\u5904\u4e0d\u8be6\u8bb2\u3002`\uff08\u63d0\u95ee\u8bf7\u79c1\u4fe1\u6211\uff09`\n\n\n```cpp\nvoid build(ll nd,ll l,ll r)\n{\n\tseg[nd].l=l;\n\tseg[nd].r=r;\n\tif(leaf)\n\t{\n\t\tseg[nd].gcd=read();\n\t\tseg[nd].sum=1;\n        \t//\u7b49\u4e8e\u533a\u95f4gcd\u7684\u4e2a\u6570\uff0c\u53f6\u5b50\u7ed3\u70b9\u5373\u5176\u672c\u8eab\n\t\treturn ;\n\t}//\u8fb9\u8bfb\u8fb9\u5efa\n\tll mid=(l+r)>>1;\n\tbuild(ls(nd),l,mid);\n\tbuild(rs(nd),mid+1,r);//\u9012\u5f52\n\tpushup(nd);\n}\n```\n\n\u4e0b\u9762\u662f\u7ebf\u6bb5\u6811\u627e\u533a\u95f4$gcd$\u6a21\u677f\uff1a\n\n```cpp\nll interval_gcd(ll nd,ll l,ll r)\n{\n\tif(seg[nd].l==l&&seg[nd].r==r)\n\t{\n\t\treturn seg[nd].gcd;\n\t}//\u6070\u597d\u585e\u4e0b\n\tll mid=(seg[nd].l+seg[nd].r)>>1;\n\tif(l>mid)\n\t{\n\t\treturn interval_gcd(rs(nd),l,r);\n\t}//\u533a\u95f4\u5728\u53f3\u8fb9\n\telse if(r<=mid)\n\t{\n\t\treturn interval_gcd(ls(nd),l,r);\n\t}//\u533a\u95f4\u5728\u5de6\u8fb9\n\telse\n\t{\n\t\treturn __gcd(interval_gcd(ls(nd),l,mid),interval_gcd(rs(nd),mid+1,r));//\u62c6\u5206\u533a\u95f4\uff08\u533a\u95f4\u8de8\u8d8amid\u65f6\uff09\n\t}\n}\n```\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u662f\u8be2\u95ee\u73af\u8282\u4e86\uff0c\u51e0\u4e4e\u662f\u88f8\u7684`\u7ebf\u6bb5\u68111`\u6a21\u677f\uff0c\u53ea\u4e0d\u8fc7\u7ef4\u62a4\u5bf9\u8c61\u53d8\u6210$gcd$\u800c\u5df2\u3002\n\n```cpp\nll query(ll nd,ll l,ll r)\n{\n\tif(seg[nd].l==l&&seg[nd].r==r)\n\t{\n\t\treturn gcd==seg[nd].gcd?seg[nd].sum:0;\n\t}//\u6070\n\tll mid=(seg[nd].l+seg[nd].r)>>1;\n\tif(l>mid)\n\t{\n\t\treturn query(rs(nd),l,r);\n\t}//\u2192\n\telse if(r<=mid)\n\t{\n\t\treturn query(ls(nd),l,r);\n\t}//\u2190\n\telse\n\t{\n\t\treturn query(ls(nd),l,mid)+query(rs(nd),mid+1,r);\n\t}//\u8de8\n}\n```\n\n\u90a3\u4e48\u7406\u4e0b\u601d\u8def\uff0c\u6211\u4eec\u5148\u9012\u5f52\u5efa\u6811\u987a\u4fbf\u7ef4\u62a4\uff0c\u518d\u5bf9\u4e8e\u8be2\u95ee\u7684\u6bcf\u4e2a\u533a\u95f4\u67e5\u8be2\u533a\u95f4$gcd$\u5e76\u66f4\u65b0$sum$\uff0c\u8fd4\u56de\u8f93\u51fa$sum$\u5373\u53ef\u3002\n\n`\u4e0d\u5f97\u4e0d\u63d0\u7684\u4e00\u70b9\u662f`\u6211\u4eec\u6c42\u51fa\u6765\u7684\u6070\u597d\u662f\u9898\u76ee\u6240\u6c42\u6570\u7684\u8865\u96c6\uff0c\u9898\u76ee\u95ee\u7684\u662f\u975e$gcd$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u533a\u95f4\u957f\u51cf\u53bb\u6240\u5f97$sum$\n\n\u4e0b\u9762\u662f\u6574\u4efd\u65e0\u6ce8\u4ee3\u7801\uff0c\u6b22\u8fce\u5404\u4f4d\u4f18\u5316\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ri register ll\n#define ll long long\nusing namespace std;\n#define leaf (l==r)\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\nll read()\n{\n\tll num=0;\n\tll flg=1;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')\n\t\t{\n\t\t\tflg=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\tnum=(num<<1)+(num<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn num*flg;\n}\nstruct segment_tree\n{\n\tll l,r;\n\tll gcd;\n\tll sum;\n}seg[2003125];\n\nll n,m,gcd;\n\nvoid pushup(ll nd)\n{\n\tseg[nd].gcd=__gcd(seg[ls(nd)].gcd,seg[rs(nd)].gcd);\n\tseg[nd].sum=0;\n\tif(seg[nd].gcd==seg[ls(nd)].gcd)\n\t{\n\t\tseg[nd].sum+=seg[ls(nd)].sum;\n\t}\n\tif(seg[nd].gcd==seg[rs(nd)].gcd)\n\t{\n\t\tseg[nd].sum+=seg[rs(nd)].sum;\n\t}\n}\n\nvoid build(ll nd,ll l,ll r)\n{\n\tseg[nd].l=l;\n\tseg[nd].r=r;\n\tif(leaf)\n\t{\n\t\tseg[nd].gcd=read();\n\t\tseg[nd].sum=1;\n\t\treturn ;\n\t}\n\tll mid=(l+r)>>1;\n\tbuild(ls(nd),l,mid);\n\tbuild(rs(nd),mid+1,r);\n\tpushup(nd);\n}\n\nll interval_gcd(ll nd,ll l,ll r)\n{\n\tif(seg[nd].l==l&&seg[nd].r==r)\n\t{\n\t\treturn seg[nd].gcd;\n\t}\n\tll mid=(seg[nd].l+seg[nd].r)>>1;\n\tif(l>mid)\n\t{\n\t\treturn interval_gcd(rs(nd),l,r);\n\t}\n\telse if(r<=mid)\n\t{\n\t\treturn interval_gcd(ls(nd),l,r);\n\t}\n\telse\n\t{\n\t\treturn __gcd(interval_gcd(ls(nd),l,mid),interval_gcd(rs(nd),mid+1,r));\n\t}\n}\n\nll query(ll nd,ll l,ll r)\n{\n\tif(seg[nd].l==l&&seg[nd].r==r)\n\t{\n\t\treturn gcd==seg[nd].gcd?seg[nd].sum:0;\n\t}\n\tll mid=(seg[nd].l+seg[nd].r)>>1;\n\tif(l>mid)\n\t{\n\t\treturn query(rs(nd),l,r);\n\t}\n\telse if(r<=mid)\n\t{\n\t\treturn query(ls(nd),l,r);\n\t}\n\telse\n\t{\n\t\treturn query(ls(nd),l,mid)+query(rs(nd),mid+1,r);\n\t}\n}\n\nint main()\n{\n\tn=read();\n\tbuild(1,1,n);\n\tm=read();\n\twhile(m--)\n\t{\n\t\tll l=read();\n\t\tll r=read();\n\t\tgcd=interval_gcd(1,l,r);\n\t\tprintf(\"%lld\\n\",r+1-l-query(1,l,r));\n\t}\n}\n```\n\n* \u5173\u4e8e\u7ebf\u6bb5\u6811\u533a\u95f4$gcd$\n\n* \u6a21\u677f\uff1a[LuoGu1890 gcd\u533a\u95f4](https://www.luogu.org/problemnew/show/P1890)\n\n* $hdu5726$\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bd5\u8bd5\uff0c\u7c7b\u6a21\u677f\n\n* \u6311\u6218\uff1a[LuoGu2086 [NOI2012]\u9b54\u5e7b\u68cb\u76d8](https://www.luogu.org/problemnew/show/P2086)\n\n$\\tiny\\text{\u8fd9\u662f\u4e2a\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u533a\u95f4gcd\u7684\u9898\uff0c\u53ef\u4ee5\u82b1\u4e9b\u65f6\u95f4\u60f3\u60f3\u3002}$",
        "postTime": 1556197188,
        "uid": 126484,
        "name": "first_fan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF474F \u3010Ant colony\u3011"
    }
]