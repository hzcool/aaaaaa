[
    {
        "content": "# \u6784\u9020\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $h$ \u6761\u957f\u5ea6\u5206\u522b\u4e3a $l_1,l_2,\u2026\u2026,l_h$ \u7684\u6c34\u5e73\u7ebf\u6bb5\u4ee5\u53ca $v$ \u6761\u957f\u5ea6\u5206\u522b\u4e3a $p_1,p_2,\u2026\u2026.p_v$ \u7684\u7ad6\u76f4\u7ebf\u6bb5\uff0c\u5c06\u8fd9\u4e9b\u7ebf\u6bb5**\u6c34\u5e73\u7ad6\u76f4\u4ea4\u66ff**\u5730**\u9996\u5c3e\u76f8\u8fde**\u7ec4\u6210\u4e00\u4e2a\u591a\u8fb9\u5f62\uff0c\u6ee1\u8db3\u4efb\u610f\u4e24\u6761\u7ebf\u6bb5**\u4e0d\u76f8\u4ea4**\u6216\u4ea4\u70b9\u4e3a\u5404\u81ea\u7684\u7aef\u70b9\u3002**\u53ef\u80fd\u65e0\u89e3**\u3002\n\n## \u9898\u610f\u5206\u6790\n\n### \u662f\u5426\u6709\u89e3\n\n\u9996\u5148\u8003\u8651\u6709\u89e3\u7684\u5fc5\u8981\u6761\u4ef6\u3002\n\n\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u7ebf\u6bb5\u8981\u4ea4\u66ff\u6446\u653e\uff0c\u6240\u4ee5\u7ebf\u6bb5\u7684\u6570\u91cf\u80af\u5b9a\u6ee1\u8db3 $h=v$ \uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u5176\u6b21\uff0c\u7531\u4e8e\u6700\u540e\u8981**\u9996\u5c3e\u76f8\u8fde**\uff0c\u8bbe\u96c6\u5408 $X$ \u4e3a\u6c34\u5e73\u7ebf\u6bb5\u7684\u96c6\u5408\uff0c\u96c6\u5408 $Y$ \u4e3a\u7ad6\u76f4\u7ebf\u6bb5\u7684\u96c6\u5408\uff0c\u518d\u8bbe $X+ \\subsetneqq X$ \uff0c $X- \\subsetneqq X$ \uff0c $Y+ \\subsetneqq Y$ \uff0c $Y- \\subsetneqq Y$ \u3002\n\n\u5047\u8bbe\u6211\u4eec\u4ece $(0,0)$ \u5f00\u59cb\u6446\u653e\u7ebf\u6bb5\uff0c\u5219\u7ebf\u6bb5\u7684\u6446\u653e\u662f\u6709\u65b9\u5411\u7684\uff0c\u8bbe $X+$ \u8868\u793a\u6c34\u5e73\u7ebf\u6bb5\u6446\u653e\u7684\u65b9\u5411\u4e3a\u6b63\uff0c $X-$ \u8868\u793a\uff0c $Y+$ \u4e0e $Y-$ \u540c\u7406\u3002  \n\n\u8bbe $X+$ \u4e2d\u7ebf\u6bb5\u7684\u957f\u5ea6\u548c\u4e3a $sumx+$ \uff0c $X-$ \u4e2d\u7ebf\u6bb5\u7684\u6570\u91cf\u4e3a $sumx-$ \u3002\u5219\u8981\u505a\u5230\u9996\u5c3e\u76f8\u8fde\uff0c\u5219\u5fc5\u6709 $sumx+=sumx-$ \u3002\u4e14\u8bbe $Y+$ \u4e2d\u7ebf\u6bb5\u7684\u957f\u5ea6\u548c\u4e3a $sumy+$ \uff0c $Y-$ \u4e2d\u7ebf\u6bb5\u7684\u6570\u91cf\u4e3a $sumy-$ \u3002\u5219\u8981\u505a\u5230\u9996\u5c3e\u76f8\u8fde\uff0c\u5219\u5fc5\u6709 $sumy+=sumy-$ \u3002\n\n\u8bc1\u660e\u6613\u5f97\uff0c\u4e0b\u4e0d\u8d58\u8ff0\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u8fd9\u4e9b\u6761\u4ef6\u662f\u5426\u5145\u5206\uff1f\u5373\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\uff0c\u662f\u5426\u4e00\u5b9a\u6709\u89e3\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u5b83\u786e\u5b9e\u662f\u5145\u5206\u7684\uff0c\u4e0b\u7ed9\u51fa\u8bc1\u660e\u3002\n\n### \u5982\u4f55\u653e\u7f6e\n\n\u5047\u8bbe $|X+|\\leq |Y+|$ \uff0c\u5219\u6211\u4eec\u7684\u6784\u9020\u53ef\u4ee5\u5206\u6210\u4e09\u6bb5\uff0c\u7b2c\u4e00\u6bb5\u662f $X+$ \u4e0e $Y+$ \uff0c\u7b2c\u4e8c\u6bb5\u662f $X-$ \u4e0e $Y+$ \uff0c\u7b2c\u4e09\u6bb5\u662f $X-$ \u4e0e $Y-$ \u3002\n\n\u5219\u6211\u4eec\u6700\u540e\u5f97\u5230\u7684\u56fe\u50cf\u5927\u81f4\u5982\u4e0b\u56fe\u4e2d\u7684\u9ed1\u8272\u4e09\u89d2\u5f62\uff0c\u4e14\u6211\u4eec\u5e0c\u671b\u8fd9\u4e09\u6bb5\u7684\u7ebf\u6bb5\u88ab\u6846\u5728\u7ea2\u8272\u7ebf\u6bb5\u4e0e\u9ed1\u8272\u4e09\u89d2\u5f62\u7684\u8fb9\u6846\u5f62\u6210\u7684\u9ec4\u8272\u8303\u56f4\u5185\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q36oy5r0.png)\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5b50\u95ee\u9898\uff0c\u6211\u4eec\u60f3\u8ba9\u5f62\u6210\u7684\u56fe\u50cf\u5c3d\u53ef\u80fd\u9760\u53f3\u4e0b\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u8ba9 $X+$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8ba9 $Y-$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u8fd9\u6837\u505a\u4e3a\u4ec0\u4e48\u6b63\u786e\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/v5ekr5zh.png)\n\n\u5982\u56fe\uff0c\u7b2c\u4e00\u9636\u6bb5\u6211\u4eec\u884c\u8d70\u7684\u8def\u5f84\u5c06\u7c7b\u4f3c\u4e8e\u7eff\u8272\u7ebf\u6bb5\uff0c\u8bbe\u5230\u8fbe\u70b9\u7684\u5750\u6807\u4e3a $(sumx1,sumy1)$ \uff0c\u8bbe\u6211\u4eec\u73b0\u5728\u8d70\u5230\u7b2c\u4e00\u9636\u6bb5\u4e2d\u7684\u7b2c $k$ \u6b65\uff0c\u4e14\u4e00\u5171\u6709 $n$ \u6b65\uff0c\u7531\u4e8e\u6211\u4eec\u53d6\u7684 $x$ \u662f\u524d $k$ \u5927\uff0c\u5219\u6211\u4eec\u76ee\u524d\u7684 $sumxnow \\ge \\frac {k}{n}sumx1$ \uff0c\u540c\u7406\uff0c\u7531\u4e8e\u6211\u4eec\u53d6\u7684 $y$ \u662f\u524d $k$ \u5c0f\uff0c\u5219 $sumynow \\leq \\frac {k}{n}sumy1$ ,\u6240\u4ee5 $\\frac {sumynow}{sumxnow} \\leq \\frac {sumy1}{sumx1}$ ,\u5373\u5f53\u524d\u7684\u659c\u7387\u81f3\u5c11\u6bd4\u7ea2\u7ebf\u7684\u659c\u7387\u5c0f\uff0c\u6240\u4ee5\u662f\u4e00\u5b9a\u5904\u4e8e\u7ea2\u7ebf\u4e0b\u65b9\u7684\u3002\n\n\u800c\u5bf9\u4e8e\u53e6\u5916\u7684\u4e24\u6bb5\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u540c\u6837\u7684\u65b9\u6cd5\u8fdb\u884c\u6784\u9020\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ecd55g7n.png)\n\n\u5982\u4e0b\u56fe\uff0c\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u53d1\u73b0\uff0c$X+$ \u4e0e $X-$ \u90fd\u5e94\u8be5\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c $Y+$ \u4e0e $Y-$ \u90fd\u5e94\u8be5\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u6ee1\u8db3\u4e0d\u76f8\u4ea4\u7684\u6027\u8d28\u3002\n\n\u6ce8\u610f\u6211\u4eec\u8fd9\u6837\u505a\u7684\u524d\u63d0\uff0c $|X+|\\leq|Y+|$ \uff0c\u5982\u679c\u60c5\u51b5\u6070\u597d\u76f8\u53cd\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u8c03\u6362 $X$ \u4e0e $Y$ \uff0c\u5230\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u518d\u53cd\u8f6c\u8f93\u51fa\u5373\u53ef\u3002\n\n### $X+,X-,Y+,Y-$ \u5982\u4f55\u6c42\u5f97\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $bitset$ \uff0c\u5efa\u7acb\u6570\u7ec4 $dp[i]$ \uff0c\u8868\u793a\u524d $i$ \u6761\u7ebf\u6bb5\u4e2d\u53d6\u4efb\u610f\u7ebf\u6bb5\u957f\u5ea6\u76f8\u52a0\u7684\u6240\u6709\u60c5\u51b5\u3002\n\n$dp[i]$ \u4e2d\u7b2c $j$ \u4e3a $0$ \u5219\u8868\u793a\u76ee\u524d\u4e0d\u80fd\u53d6\u5230\u8be5\u503c\uff0c\u4e3a $1$ \u5219\u8868\u793a\u53ef\u4ee5\u53d6\u5230\u8be5\u503c\u3002\n\n\u5982\u4f55\u8f6c\u79fb\uff1f\n\n$dp[i]=dp[i-1]|(dp[i-1]<<a[i])$ \uff0c\u89e3\u8bfb\u8fd9\u4e2a\u5f0f\u5b50\u5176\u5b9e\u5c31\u662f\u5c06 $dp[i-1]$ \u4e2d\u6bcf\u4e2a $1$ \u5411\u53f3\u79fb\u52a8 $a[i]$ \u4f4d\uff0c\u5176\u5b9e\u542b\u4e49\u662f\u52a0\u4e0a\u4e86 $a[i]$ \uff0c\u5728\u548c\u539f\u6765\u7684\u72b6\u6001\u6216\u8fd0\u7b97\uff0c\u5373\u53ef\u5f97\u5230\u73b0\u5728\u7684\u72b6\u6001\u3002\n\n\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```cpp\ninline void initial()\n{\n\tflag=true;\n\t//\u5148\u89e3\u51b3x\u6570\u7ec4\n\tint s1=sum1/2,s2=sum2/2; \n\tfor(register int i=1;i<=n;i++) dp[i]=dp[i-1]|(dp[i-1]<<a[i]);\n\tif(dp[n][s1]){ //\u6709\u53ef\u80fd\u5230\u8fbesum1/2 \n\t\tfor(register int i=n;i>=1;i--){\n        //\u8be5\u5224\u65ad\u7684\u542b\u4e49\u662f\u770b\u82e5\u53d6\u4e86\u8fd9\u4e2a\u6570\uff0c\u4e0a\u4e00\u4e2a\u72b6\u6001\u662f\u5426\u80fd\u591f\u7686\u8fd9\u53d6\u5230\u5269\u4e0b\u9700\u8981\u53d6\u7684\u957f\u5ea6\uff0c\u82e5\u80fd\uff0c\u624d\u53ef\u4ee5\u53d6\n\t\t\tif(s1>=a[i]&&dp[i-1][s1-a[i]]) s1-=a[i],x[1][++totx[1]]=a[i];\n\t\t\telse x[0][++totx[0]]=a[i];\n\t\t}\n\t}\n\telse { flag=false; return; }\n\t\n\t//\u518d\u89e3\u51b3y\u6570\u7ec4 \n\tfor(register int i=1;i<=m;i++) dp[i]=dp[i-1]|(dp[i-1]<<b[i]);\n\tif(dp[m][s2]){ //\u6709\u53ef\u80fd\u5230\u8fbesum1/2 \n\t\tfor(register int i=m;i>=1;i--){\n\t\t\tif(s2>=b[i]&&dp[i-1][s2-b[i]]) s2-=b[i],y[1][++toty[1]]=b[i];\n\t\t\telse y[0][++toty[0]]=b[i];\n\t\t}\n\t}\n\telse { flag=false; return; }\n}\n```\n\n### \u7ed3\u8bed\n\n\u5230\u8fd9\u513f\u8fd9\u9053\u9898\u5c31\u7ed3\u675f\u4e86\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u4e0d\u9519\u7684\u597d\u9898\uff0c\u6ca1\u6709\u4efb\u4f55\u9ad8\u6df1\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u8fd8\u662f\u975e\u5e38\u96be\uff0c~~\u51e0\u4e4e\u548c\u8fd9\u9053\u9898\u6b7b\u78d5\u4e86\u534a\u5929~~\u3002\n\n## CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e3+10;\nstruct node{ int x,y; };\nint T,n,m,sum1,sum2;\nint a[N],b[N];\n//x[0][i]\u8868\u793a\u6c34\u5e73\u76f4\u7ebfi\u88ab\u5206\u5728x-\u7ec4\u4e2d\uff0c\u8bb0\u5f55\u76f4\u7ebfi\u7684\u957f\u5ea6\n//x[1][i]\u8868\u793a\u6c34\u5e73\u76f4\u7ebfi\u88ab\u5206\u5728x+\u7ec4\u4e2d\uff0c\u8bb0\u5f55\u76f4\u7ebfi\u7684\u957f\u5ea6\n//y[0][i]\u8868\u793a\u7ad6\u76f4\u76f4\u7ebfi\u88ab\u5206\u5728y-\u7ec4\u4e2d\uff0c\u8bb0\u5f55\u76f4\u7ebfi\u7684\u957f\u5ea6 \n//y[1][i]\u8868\u793a\u7ad6\u76f4\u76f4\u7ebfi\u88ab\u5206\u5728y+\u7ec4\u4e2d\uff0c\u8bb0\u5f55\u76f4\u7ebfi\u7684\u957f\u5ea6\nint totx[2],toty[2]; \nint x[2][N],y[2][N];\nint tot; node ans[N];\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\nbitset<N*N> dp[N];\nbool flag=true;\ninline void initial()\n{\n\tflag=true;\n\t//\u5148\u89e3\u51b3x\u6570\u7ec4\n\tint s1=sum1/2,s2=sum2/2; \n\tfor(register int i=1;i<=n;i++) dp[i]=dp[i-1]|(dp[i-1]<<a[i]);\n\tif(dp[n][s1]){ //\u6709\u53ef\u80fd\u5230\u8fbesum1/2 \n\t\tfor(register int i=n;i>=1;i--){\n\t\t\tif(s1>=a[i]&&dp[i-1][s1-a[i]]) s1-=a[i],x[1][++totx[1]]=a[i];\n\t\t\telse x[0][++totx[0]]=a[i];\n\t\t}\n\t}\n\telse { flag=false; return; }\n\t\n\t//\u518d\u89e3\u51b3y\u6570\u7ec4 \n\tfor(register int i=1;i<=m;i++) dp[i]=dp[i-1]|(dp[i-1]<<b[i]);\n\tif(dp[m][s2]){ //\u6709\u53ef\u80fd\u5230\u8fbesum1/2 \n\t\tfor(register int i=m;i>=1;i--){\n\t\t\tif(s2>=b[i]&&dp[i-1][s2-b[i]]) s2-=b[i],y[1][++toty[1]]=b[i];\n\t\t\telse y[0][++toty[0]]=b[i];\n\t\t}\n\t}\n\telse { flag=false; return; }\n}\ninline bool cmp(int p,int q) { return p>q; }\ninline void sol()\n{\n\tbool Judge=false;\n\tif(totx[1]<=toty[1]){\n\t\t//x\u4ece\u5927\u5230\u5c0f\uff0cy\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\t\tsort(y[1]+1,y[1]+toty[1]+1); \n\t\tsort(y[0]+1,y[0]+toty[0]+1);\n\t\tsort(x[1]+1,x[1]+totx[1]+1,cmp);\n\t\tsort(x[0]+1,x[0]+totx[0]+1,cmp);\n\t\tnode now={0,0};\n\t\tint i[2]={1,1},j[2]={1,1};\n\t\twhile(n--){\n\t\t\tif(i[1]<=totx[1]) now.x+=x[1][i[1]++],ans[++tot]=now;\n\t\t\telse now.x-=x[0][i[0]++],ans[++tot]=now;\n\t\t\tif(j[1]<=toty[1]) now.y+=y[1][j[1]++],ans[++tot]=now;\n\t\t\telse now.y-=y[0][j[0]++],ans[++tot]=now;\n\t\t}\n\t}\n\telse{\n\t\t//\u53cd\u8fc7\u6765\uff0cy\u4ece\u5927\u5230\u5c0f\uff0cx\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\t\tsort(x[1]+1,x[1]+totx[1]+1);\n\t\tsort(x[0]+1,x[0]+totx[0]+1);\n\t\tsort(y[1]+1,y[1]+toty[1]+1,cmp);\n\t\tsort(y[0]+1,y[0]+toty[0]+1,cmp);\n\t\tnode now={0,0};\n\t\tint i[2]={1,1},j[2]={1,1};\n\t\twhile(n--){\n\t\t\tif(j[1]<=toty[1]) now.y+=y[1][j[1]++],ans[++tot]=now;\n\t\t\telse now.y-=y[0][j[0]++],ans[++tot]=now;\n\t\t\tif(i[1]<=totx[1]) now.x+=x[1][i[1]++],ans[++tot]=now;\n\t\t\telse now.x-=x[0][i[0]++],ans[++tot]=now;\n\t\t}\n\t}\n}\nint main()\n{\n\tT=read();\n\tdp[0][0]=1;\n\twhile(T--){\n\t\ttotx[1]=totx[0]=toty[1]=toty[0]=0;\n\t\ttot=0;\n\t\tsum1=0,sum2=0;\n\t\tn=read();\n\t\tfor(register int i=1;i<=n;i++) a[i]=read(),sum1+=a[i];\n\t\tm=read();\n\t\tfor(register int i=1;i<=m;i++) b[i]=read(),sum2+=b[i];\n\t\tif(n!=m||sum1&1||sum2&1) { printf(\"No\\n\"); continue; }\n\t\tinitial(); //\u9884\u5904\u7406\u51fax,y\u6570\u7ec4\n\t\tif(!flag) { printf(\"No\\n\"); continue; }\n\t\tsol();\n\t\tprintf(\"Yes\\n\");\n\t\tfor(register int i=1;i<=tot;i++) printf(\"%d %d\\n\",ans[i].x,ans[i].y); //\u8f93\u51fa\u65b9\u6848 \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1613825327,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "CF1444D Rectangular Polyline[\u9898\u89e3]"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n> $T$ \u7ec4\u6570\u636e\u3002\n>\n> \u6bcf\u7ec4\u6570\u636e\u4e2d\u7ed9\u5b9a\u957f\u5ea6\u4f9d\u6b21\u4e3a $l_1,l_2,\\dots,l_h$ \u7684 $h$ \u6761\u6c34\u5e73\u7ebf\u6bb5\u548c\u957f\u5ea6\u4f9d\u6b21\u4e3a $p_1,p2,\\dots,p_v$ \u7684\u7ad6\u76f4\u7ebf\u6bb5\u3002\n>\n> \u8981\u6c42\u6c42\u51fa\u4e00\u79cd\u65b9\u6848\u4f7f\u7ad6\u76f4\u7ebf\u6bb5\u548c\u6c34\u5e73\u7ebf\u6bb5\u4ea4\u66ff\u9996\u5c3e\u76f8\u63a5\uff0c\u4e14\u4e0d\u5728\u9664\u7aef\u70b9\u5916\u7684\u5176\u5b83\u5730\u65b9\u6709\u4ea4\u70b9\u3002\n>\n> \u82e5\u6709\u89e3\uff0c\u8f93\u51fa `Yes` \u5e76\u8f93\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u82e5\u65e0\u89e3\uff0c\u8f93\u51fa `No`\u3002\n>\n> $1 \\le T \\le 200$\uff0c$1 \\le \\sum h,\\sum v,l_i,p_i \\le 10^3$\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u5f53\u7ad6\u76f4\u7ebf\u6bb5\u548c\u6c34\u5e73\u7ebf\u6bb5\u7684\u6761\u6570\u4e0d\u4e00\u6837\u65f6\uff0c\u4e00\u5b9a\u65e0\u89e3\uff08\u9898\u76ee\u4e2d\u8981\u6c42\u4ea4\u66ff\u8fde\u63a5\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8981\u6784\u9020\u51fa\u4e00\u4e2a\u9996\u5c3e\u76f8\u63a5\u7684\u5c01\u95ed\u56fe\u5f62\uff0c\u53ef\u4ee5\u89c6\u4f5c\u4e00\u4e2a\u70b9\u5728\u5e73\u9762\u4e0a\u79fb\u52a8\uff0c\u6700\u540e\u56de\u5230\u539f\u70b9\u7684\u8f68\u8ff9\u3002\u90a3\u4e48\u6c34\u5e73\u65b9\u5411\u4e0a\u5411\u53f3\u4e0e\u5411\u5de6\u79fb\u52a8\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u7ad6\u76f4\u65b9\u5411\u4e0a\u5411\u4e0a\u4e0e\u5411\u4e0b\u79fb\u52a8\u7684\u8ddd\u79bb\u4e5f\u76f8\u7b49\u3002\n\n\u4e5f\u5c31\u76f8\u5f53\u4e8e\uff0c\u6211\u4eec\u8981\u5bf9\u9898\u76ee\u7ed9\u51fa\u7684\u4e24\u7ec4\u7ebf\u6bb5\u90fd\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u9009\u51fa\u4e00\u4e9b\u7ebf\u6bb5\uff0c\u4f7f\u5f97\u88ab\u9009\u51fa\u7684\u7ebf\u6bb5\u548c\u5269\u4e0b\u7684\u7ebf\u6bb5\u957f\u5ea6\u76f8\u7b49\u3002\u5982\u679c\u6ca1\u6cd5\u9009\u51fa\u8fd9\u6837\u4e00\u4e9b\u7ebf\u6bb5\uff0c\u90a3\u4e48\u4e5f\u65e0\u89e3\u3002\n\n\u8fd9\u73a9\u610f\u513f\u663e\u7136\u53ef\u4ee5\u7528\u7b80\u5355\u80cc\u5305 $dp$ \u89e3\u51b3\u3002$f_{i,j}$ \u8868\u793a $i$ \u6761\u7ebf\u6bb5\uff0c\u603b\u957f\u4e3a $j$ \u7684\u65b9\u6848\u5b58\u4e0d\u5b58\u5728\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a $dp$ \u7684\u4e24\u7ef4\u5206\u522b\u662f\u7ebf\u6bb5\u6570\u91cf\uff08\u8bbe\u4e3a $n$\uff09\u548c\u7ebf\u6bb5\u603b\u957f\u5ea6\uff08\u8bbe\u4e3a $C$\uff09\u3002 \u53d1\u73b0\u9898\u76ee\u4e2d $n \\le 10^3$\uff0c$C \\le 10^6$\uff0c\u6211\u4eec\u76f4\u63a5\u8fdb\u884c\u80cc\u5305\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\times C)$ \u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u6211\u4eec $f$ \u6570\u7ec4\u90fd\u662f `bool` \u7c7b\u578b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 `bitset` \u4f18\u5316\u8f6c\u79fb\u3002\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u6210\u4e86 $O(\\frac{n \\times C}{w})$\uff0c\u8fd9\u73a9\u610f\u513f\u5927\u6982\u662f $10^7$ \u5de6\u53f3\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u4e00\u4e2a\u72b6\u6001\u53ef\u4e0d\u53ef\u4ee5\u88ab\u8f6c\u79fb\u3002\u4f46\u662f\u600e\u4e48\u901a\u8fc7\u8fd9\u4e2a $f$ \u6570\u7ec4\u6c42\u51fa\u4e24\u90e8\u5206\u5206\u522b\u662f\u90a3\u4e9b\u7ebf\u6bb5\u5462\uff1f\n\n\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u76ee\u6807\u503c $target$\uff0c\u8868\u793a\u6211\u4eec\u9700\u8981\u53d6\u51fa\u4e00\u4e9b\u6570\uff0c\u8ba9\u5b83\u4eec\u7684\u548c\u4e3a $target$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4ece\u540e\u5f80\u524d\u626b\u8fc7\u6bcf\u4e2a\u7269\u54c1\uff0c\u5982\u679c\u5728\u52a0\u5165\u8fd9\u4e2a\u503c\u4e3a $val$ \u7684\u524d\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5230\u8fbe $target-val$ \u7684\u72b6\u6001\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u4e2a\u7269\u54c1\u4e4b\u540e\u5c31\u53ef\u4ee5\u5230\u8fbe $target$ \u7684\u72b6\u6001\uff0c\u4e5f\u5373\u8fd9\u4ef6\u7269\u54c1\u662f\u5230\u8fbe $target$ \u72b6\u6001\u7684\u4e00\u90e8\u5206\u3002\n\n\u5927\u6982\u5c31\u662f\u4e00\u4e2a\u4ece\u540e\u5f80\u524d\uff0c\u4ece\u7ed3\u679c\u72b6\u6001\u5012\u7740\u62c6\u51fa\u7269\u54c1\u7684\u8fc7\u7a0b\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u628a\u4e24\u5806\u7ebf\u6bb5\u5206\u522b\u62c6\u6210\u4e86\u603b\u957f\u5ea6\u76f8\u7b49\u7684\u4e24\u90e8\u5206\u3002\n\n\u6211\u4eec\u624b\u52a8\u73a9\u51e0\u4e2a\u6837\u4f8b\uff0c\u53d1\u73b0\u8fd9\u4e2a\u8def\u5f84\u53ef\u4ee5\u5206\u6210\u4e09\u90e8\u5206\u3002\n\n![pic1.png](https://img-kysic-1258722770.file.myqcloud.com/a033ed720fe5cf3090e7edb52045d462/8bba283d66cb4.png)\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8981\u5c3d\u91cf\u8ba9\u8def\u5f84\u4e0d\u76f8\u4ea4\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u662f\u5728 $OA$ \u6bb5\u4e2d\uff0c**\u6c34\u5e73\u65b9\u5411\u5148\u8d70\u957f\u7684\u540e\u8d70\u77ed\u7684\uff0c\u7ad6\u76f4\u65b9\u5411\u5148\u8d70\u77ed\u7684\u540e\u8d70\u957f\u7684**\uff0c\u5f62\u6210\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u51f8\u5305\u7684\u4e1c\u897f\uff08\u89c1\u56fe\u4e2d\u94c5\u7b14\u7ebf\uff09\uff0c\u6216\u8005\u8bf4\uff0c\u4e0b\u51f8\u7684\u5f62\u72b6\u3002\n\n\u540c\u6837\uff0c\u5728 $BO$ \u6bb5\u4e2d\u6211\u4eec**\u6c34\u5e73\u65b9\u5411\u5148\u8d70\u957f\u7684\u540e\u8d70\u77ed\u7684\uff0c\u7ad6\u76f4\u65b9\u5411\u5148\u8d70\u77ed\u7684\u540e\u8d70\u957f\u7684**\uff0c\u5f62\u6210\u4e00\u4e2a\u4e0a\u51f8\u5f62\u72b6\u3002\n\n\u90a3 $AB$ \u6bb5\u5462\uff1f\u53d1\u73b0\u5728\u8fd9\u6bb5\u4e0a\u6211\u4eec\u53ea\u80fd\u5411\u5de6\u548c\u5411\u4e0a\u8d70\uff0c\u4e14\u603b\u957f\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u8bf4\u5728\u8fd9\u4e00\u6bb5\u4e2d\u6211\u4eec\u662f\u6ca1\u6cd5\u8d70\u51fa\u56fe\u4e2d\u90a3\u4e2a\u6846\u7684\uff0c\u4e5f\u5c31**\u4e0d\u53ef\u80fd\u4e0e\u5176\u4ed6\u7ebf\u6bb5\u76f8\u4ea4**\u3002\u6240\u4ee5\u8fd9\u4e00\u6bb5\u5176\u5b9e**\u600e\u4e48\u8d70\u90fd\u53ef\u4ee5**\u3002\n\n\u90a3\u4e48\u8fd9\u4e48\u6784\u9020\u4e00\u5b9a\u662f\u5bf9\u7684\u4e48\uff1f\n\n$AB$ \u6bb5\u6211\u4eec\u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\uff0c\u662f\u4e0d\u53ef\u80fd\u4e0e\u5176\u4ed6\u7ebf\u6bb5\u76f8\u4ea4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5269\u4e0b\u7684 $OA$ \u6bb5\u4e0e $OB$ \u6bb5\u76f8\u4ea4\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u8003\u8651 $OA$ \u4e0e $OB$ \u4e24\u6761\u7ebf\u6bb5\uff0c\u663e\u7136\u53ea\u5728\u7aef\u70b9\u5904\u76f8\u4ea4\u3002$OA$ \u6bb5\u6a2a\u5411\u548c\u7ad6\u5411\u7ebf\u6bb5\u7684\u6bb5\u6570\u76f8\u7b49\uff0c\u8bbe\u4e3a $k$\uff0c\u518d\u8bbe\u7ebf\u6bb5\u957f\u5ea6\u7684\u524d\u7f00\u548c\u4e3a $sum_{x1} \\sim sum_{xk}$\uff0c\u7ebf\u6bb5\u957f\u5ea6\u7684\u524d\u7f00\u548c\u4e3a $sum_{y1} \\sim sum_{yk}$\u5219\u7ebf\u6bb5 $OA$ \u7684\u659c\u7387 $\\frac{sum_{yk}}{sum_{xk}}$\uff0c\u800c\u6211\u4eec\u8003\u8651\u56fe\u4e2d\u51f8\u5305\u7684\u7b2c $i$ \u4e2a\u9876\u70b9 $X$\uff08\u7b2c $i$ \u4e2a\u9876\u70b9\u5373 $i$ \u6b21\u4e00\u6a2a\u4e00\u7ad6\u540e\u7684\u4f4d\u7f6e\uff09\uff0c\u53d1\u73b0\u7ebf\u6bb5 $OX$ \u7684\u659c\u7387\u4e3a $\\frac {sum_{yi}}{sum_{xi}}$\u3002\u800c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u662f\u4ece\u957f\u5230\u77ed\u9009\u6a2a\u5411\u7ebf\u6bb5\uff0c\u4ece\u77ed\u5230\u957f\u9009\u7eb5\u5411\u7ebf\u6bb5\uff0c\u6240\u4ee5\u6709 $sum_{xi} \\ge \\frac{i}{k}sum_{xk}$\uff0c$sum_{yi} \\ge \\frac{i}{k}sum_{yk}$\uff0c\u90a3\u4e48\u5c31\u6709 $k_{OX}=\\frac{sum_{yi}}{sum_{xi}} \\le \\frac{\\frac{i}{k}sum_{yk}}{\\frac{i}{k}sum_{xk}}=\\frac{sum_{xk}}{sum_{yk}}=k_{OA}$\uff0c\u4e5f\u5373 $k_{OX} \\le k_{OA}$\u3002\n\n\u6216\u8005\u5982\u679c\u4f60\u4e0d\u60f3\u770b\u8fd9\u4e00\u6bb5\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u96be\u7684\u6570\u5b66\u63a8\u5bfc\uff0c\u4f60\u4e5f\u53ef\u4ee5\u611f\u6027\u7406\u89e3\uff1a\u659c\u7387\u662f\u7eb5\u6bd4\u6a2a\u7684\u7ed3\u679c\uff0c\u800c\u6211\u4eec\u6a2a\u5411\u4ece\u957f\u5230\u77ed\u9009\uff0c\u7eb5\u5411\u4ece\u77ed\u5230\u957f\u9009\uff0c\u4fdd\u8bc1\u4e86\u7eb5\u662f\u6700\u5c0f\u524d\u7f00\uff0c\u6a2a\u662f\u6700\u5927\u524d\u7f00\uff0c\u6240\u4ee5\u659c\u7387\u5c0f\u4e8e\u628a\u6240\u6709\u7ebf\u6bb5\u90fd\u9009\u4e0a\u7684\u7eb5\u6bd4\u6a2a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0e $O$ \u8fde\u7ebf\u7684\u659c\u7387\u90fd\u6bd4 $OA$ \u5c0f\uff08\u5f53\u7136\uff0c\u9664\u4e86 $O$ \u548c $A$ \u8fd9\u4e24\u4e2a\u70b9\u672c\u8eab\uff09\uff0c\u4e5f\u5373 $OA$ \u6bb5\u90fd\u5728 $OA$ \u4e0b\u65b9\u3002\n\n$OB$ \u6bb5\u540c\u7406\uff0c\u53ef\u4ee5\u5f97\u5230 $OB$ \u6bb5\u90fd\u5728\u7ebf\u6bb5 $OB$ \u4e0a\u65b9\u3002\u800c \u7ebf\u6bb5 $OA$ \u548c\u7ebf\u6bb5 $OB$ \u9664\u4e86\u9876\u70b9\u5916\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5 $OA$ \u6bb5\u548c $OB$ \u6bb5\u9664\u4e86\u9876\u70b9\u5916\u4e0d\u76f8\u4ea4\u3002\n\n\u8bc1\u6bd5\u3002\n\n### Code\n\n\u611f\u89c9\u8fd8\u662f\u633a\u7b80\u6d01\u7684\u5199\u6cd5\u3002\n\n\u4ee3\u7801\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\u628a\u6a2a\u3001\u7ad6\u5206\u6210\u4e24\u4efd\uff0c\u6392\u5e8f\u540e\u628a\u7ebf\u6bb5\u5c11\u4e00\u4efd\u7684\u4f5c\u4e3a $OA$ \u6bb5\u7684\u6a2a\u5411\u7ebf\u6bb5\uff0c\u7ebf\u6bb5\u591a\u4e00\u4efd\u7684\u4f5c\u4e3a $OB$ \u6bb5\u7684\u6a2a\u5411\u7ebf\u6bb5\u3002\u7136\u540e\u76f4\u63a5\u62fc\u5230\u4e00\u8d77\u6a21\u62df\u4ece\u96f6\u70b9\u5f00\u59cb\u79fb\u52a8\u7684\u8fc7\u7a0b\u3002\n\n\u7531\u4e8e\u6a2a\u7ad6\u7ebf\u6bb5\u603b\u6570\u76f8\u7b49\uff0c\u6240\u4ee5\u8fd9\u4e48\u505a\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u4e0a\u9762\u8bb2\u5230\u7684\u4e09\u6bb5\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1; char ch=getchar();\n\twhile (!isdigit(ch)){ if (ch=='-') f=-1; ch=getchar(); }\n\twhile (isdigit(ch)){ x=x*10+ch-'0'; ch=getchar(); }\n\treturn x*f;\n}\nconst int N=1005,M=1000005;\n\nint n,m,suma,sumb;\nint a[N],b[N];\nbool Nosol=false;\nbitset <M> f[N];\nvector <int> a1,a2,b1,b2,A,B;\n\nvoid Dp(){\n\tfor (int i=1;i<=n;++i) f[i].reset(); f[0][0]=true;\n\tfor (int i=1;i<=n;++i) f[i]=f[i-1]|(f[i-1]<<a[i]);\n\tint tar=suma/2; a1.clear(),a2.clear();\n\tif ((suma%2) || (!f[n][tar])){ Nosol=true; return void(); }\n\tfor (int i=n;i>=1;--i){\n\t\tif ((tar>=a[i]) && (f[i-1][tar-a[i]])){ a1.push_back(a[i]); tar-=a[i]; }\n\t\telse a2.push_back(-a[i]);\n\t}\n\tfor (int i=1;i<=m;++i) f[i].reset(); f[0][0]=true;\n\tfor (int i=1;i<=m;++i) f[i]=f[i-1]|(f[i-1]<<b[i]);\n\ttar=sumb/2; b1.clear(),b2.clear();\n\tif ((sumb%2) || (!f[m][tar])){ Nosol=true; return void(); }\n\tfor (int i=m;i>=1;--i){\n\t\tif ((tar>=b[i]) && (f[i-1][tar-b[i]])){ b1.push_back(b[i]); tar-=b[i]; }\n\t\telse b2.push_back(-b[i]);\n\t}\n}\n\nint main(){\n\t//freopen(\"CF1444D.in\",\"r\",stdin);\n\t//freopen(\"CF1444D.out\",\"w\",stdout);\n\tint T=read();\n\twhile (T--){\n\t\tn=read();\n\t\tsuma=0,sumb=0;\n\t\tfor (int i=1;i<=n;++i)\n\t\t\ta[i]=read(),suma+=a[i];\n\t\tm=read();\n\t\tfor (int i=1;i<=m;++i)\n\t\t\tb[i]=read(),sumb+=b[i];\n\t\tif (n!=m){ printf(\"No\\n\"); continue; }\n\t\tNosol=false;\n\t\tDp(); if (Nosol){ printf(\"No\\n\"); continue; }\n\t\tif (a1.size()>a2.size()){ swap(a1,a2); for (auto& it : a1) it=-it; for (auto& it : a2) it=-it; }\n\t\tif (b1.size()<b2.size()){ swap(b1,b2); for (auto& it : b1) it=-it; for (auto& it : b2) it=-it; }\n\t\tsort(a1.begin(),a1.end(),greater<int>()); sort(b1.begin(),b1.end());\t// +\n\t\tsort(a2.begin(),a2.end()); sort(b2.begin(),b2.end(),greater<int>());\t// -\n\t\tA.clear(),B.clear();\n\t\tfor (auto it : a1) A.push_back(it); for (auto it : a2) A.push_back(it);\n\t\tfor (auto it : b1) B.push_back(it); for (auto it : b2) B.push_back(it);\n\t\tprintf(\"Yes\\n\"); int x=0,y=0;\n\t\tfor (int i=0;i<A.size();++i){\n\t\t\tx+=A[i]; printf(\"%d %d\\n\",x,y);\n\t\t\ty+=B[i]; printf(\"%d %d\\n\",x,y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1635557113,
        "uid": 119264,
        "name": "Alkaid_Star",
        "ccfLevel": 0,
        "title": "CF1444D Rectangular Polyline\uff08dp&\u6784\u9020\uff09\u9898\u89e3"
    },
    {
        "content": "Solution: \n\n\u8003\u8651\u65e0\u89e3\u662f\u4ec0\u4e48\u60c5\u51b5 \u2460 $h!=v$ \u2461 $\\sum l_i$ \u4e0e $\\sum p_i$ \u65e0\u6cd5\u88ab\u5206\u4e3a\u76f8\u7b49\u7684\u4e24\u90e8\u5206 \u611f\u89c9\u8fd9\u4e24\u4e2a\u6761\u4ef6\u5f88\u5bf9\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u6784\u9020\u4e00\u4e2a\u591a\u8fb9\u5f62\uff0c\u56e0\u4e3a\u6a2a\u7740\u7684\u548c\u7ad6\u7740\u7684\u90fd\u88ab\u5206\u6210\u4e86\u4e24\u76f8\u7b49\u90e8\u5206\uff0c\u73b0\u5728\u4e00\u5171\u6709\u56db\u5757\uff0c\u8003\u8651\u600e\u4e48\u914d\u5bf9\u624d\u53ef\u4ee5\u6784\u9020\u3002\u6bd4\u8f83\u76f4\u89c2\u7684\u662f\u60f3\u5230\u914d\u5bf9\u6210\u4e00\u4e2a\u7c7b\u4f3c\u4e09\u4e2a\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u5f62\u72b6!\n\n![\u5c4f\u5e55\u622a\u56fe 2021-02-22 154535.png](https://i.loli.net/2021/02/22/xvyZMoE5ejR8gzm.png)\n\n\n\n\u53ea\u4e3e\u4e00\u5757\u7684\u4f8b\u5b50\uff0c\u5176\u4f59\u4e09\u5757\u540c\u7406\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u5757\u800c\u8a00\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u8fb9\u6570\u5c11\u7684 $x$ \u8fb9\u914d\u4e0a\u4e00\u4e2a\u8fb9\u6570\u591a\u7684 $y$ \u8fb9\u7684\u5f62\u72b6\uff0c\u81f3\u5c11\u4e0d\u80fd\u8ba9\u6784\u9020\u51fa\u6765\u7684\u7ebf\u8d85\u8fc7\u56fe\u4e2d\u7684\u659c\u7ebf\uff08\u8fd9\u70b9\u771f\u662f\u592a\u5999\u4e86\uff0c\u7528\u4e0d\u8d85\u8fc7\u4e00\u6bb5\u659c\u7ebf\u7684\u65b9\u6cd5\u4fdd\u8bc1\u4e86\u4e0d\u76f8\u4ea4\uff09\u3002\u7136\u540e\u8003\u8651\u6784\u9020\u4e0d\u8d85\u8fc7\u659c\u7ebf\u7684\u591a\u8fb9\u5f62\u3002\u53ea\u8981\u4e00\u5f00\u59cb\u7684\u65f6\u5019 $x$ \u8fb9\u5f88\u5927 $y$ \u8fb9\u5f88\u5c0f\u5c31\u53ef\u4ee5\u4fdd\u8bc1\uff0c\uff08\u56e0\u4e3a\u76ee\u6807\u70b9\u662f $(\\sum x,\\sum y)$\uff09 \u6240\u4ee5\u53ea\u9700\u5c06 $x$  \u4ece\u5927\u5230\u5c0f\u6392\u4e00\u904d\uff0c$y$ \u4ece\u5c0f\u5230\u5927\u6392\u4e00\u904d\u5373\u53ef\u3002\uff08\u4ece\u659c\u7387\u4e0a\u4fdd\u8bc1\u4e0d\u8d85\u8fc7\u659c\u7ebf\uff09\u3002\n\n\u4ee3\u7801QAQ:\n[Code](https://www.luogu.com.cn/paste/wofit6d9)",
        "postTime": 1613980182,
        "uid": 114181,
        "name": "ChasingAft",
        "ccfLevel": 7,
        "title": "\u9898\u89e3"
    },
    {
        "content": "\u4eba\u7c7b\u667a\u6167\uff0c\u76f4\u89c9\u5927\u6cd5\u597d\u3002\n\n\u4ece\u611f\u6027\u5165\u624b\uff0c\u8fd9\u4e2a\u4e1c\u897f\u80af\u5b9a\u5f97\u8ba9\u5b83\u5c3d\u91cf\u5f80\u5916\u51f8\u3002\n\n\u95ee\u9898\u6765\u4e86\uff1a\u201c\u51f8\u201d\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49\uff0c\u56e0\u4e3a\u4efb\u610f\u6784\u9020\u65b9\u5f0f\u90fd\u9700\u8981\u6ee1\u8db3\u6a2a\u7ad6\u4ea4\u66ff\uff0c\u6240\u4ee5\u8fd9\u4e1c\u897f\u4e0d\u53ef\u80fd\u662f\u51f8\u7684\u3002\n\n\u90a3\u4e48\u5c31\u968f\u4fbf\u753b\u4e00\u4e2a\u4e1c\u897f\u5e76\u8c03\u6574\u6765\u5c1d\u8bd5\u5177\u8c61\u5316\u8fd9\u4e2a\u201c\u51f8\u201d\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u4e1c\u897f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rib4a5wf.png?x-oss-process=image/resize,m_lfit,h_350,w_400)\n\n\u7136\u540e\u8003\u8651\u4e00\u4e2a\u8c03\u6574\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nmmyl32x.png?x-oss-process=image/resize,m_lfit,h_400,w_400)\n\n\u53ef\u4ee5\u53d1\u73b0\u4e0b\u9762\u7684\u8fd9\u4e2a\u4e1c\u897f\u770b\u8d77\u6765\u6bd4\u4e0a\u9762\u66f4\u201c\u51f8\u201d\u4e86\u3002\n\n\u591a\u8bd5\u51e0\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u63a8\u5e7f\u5230\u4efb\u610f\u60c5\u51b5\uff1a\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6298\u7ebf\u5206\u4e3a 4 \u6bb5\uff0c\u6bcf\u6bb5\u5206\u522b\u4ec5\u5305\u542b\u5de6\u4e0a\u3001\u53f3\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0b\uff0c\u800c\u4e14\u63a5\u8d77\u6765\u9700\u8981\u56de\u5230\u539f\u70b9\u3002\n\n\u8003\u8651\u5982\u679c\u5df2\u7ecf\u77e5\u9053\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u96c6\u5408\uff0c\u5982\u4f55\u628a\u5b83\u8fdb\u884c\u4e00\u4e2a\u9002\u5f53\u7684\u6392\u5217\u4f7f\u5f97\u5b83\u80fd\u591f\u5c3d\u91cf\u7684\u51f8\u3002\u53d1\u73b0\u8fd9\u73a9\u610f\u53c8\u6ca1\u6cd5\u5b9a\u4e49\u4e86\u3002\n\n\u5c1d\u8bd5\u628a\u5411\u91cc\u9762\u51f8\u7684\u70b9\u8fde\u8d77\u6765\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8fd9\u4e9b\u70b9\u5f62\u6210\u7684\u6298\u7ebf\u5c3d\u91cf\u51f8\u5c31\u53ef\u4ee5\u5c3d\u91cf\u4e0d\u548c\u522b\u7684\u4e1c\u897f\u4ea4\u4e0a\u3002\u90a3\u4e48\u76f4\u63a5\u628a\u7ad6\u7740\u7684\u964d\u5e8f\uff0c\u6a2a\u7740\u7684\u5347\u5e8f\uff08\u6216\u8005\u53cd\u8fc7\u6765\uff09\u5c31\u53ef\u4ee5\u8ba9\u5411\u91cc\u9762\u51f8\u7684\u70b9\u5f62\u6210\u51f8\u5305\u4e86\u3002\n\n\u800c\u4e14\u4e5f\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u8ba9 4 \u6bb5\u6298\u7ebf\u90fd\u8fd9\u4e48\u6784\u9020\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u4f1a\u4ea4\u5230\u4e00\u8d77\u3002\n\n\u6240\u4ee5\u53ea\u8981\u80fd\u5212\u5206\u5c31\u6709\u89e3\uff0c\u8003\u8651\u5982\u4f55\u5212\u5206\u3002\n\n\u9996\u5148\u5bb9\u6613\u628a\u6a2a\u3001\u7ad6\u7ebf\u5206\u522b\u5288\u6210\u4e24\u90e8\u5206\u8ba9\u957f\u5ea6\u548c\u76f8\u540c\uff0c\u4f46\u662f\u8fd9\u4e24\u90e8\u5206\u7684\u5927\u5c0f\u4e0d\u4e00\u5b9a\u4e00\u6837\u3002\n\n\u4f46\u662f\u6ca1\u6709\u5173\u7cfb\uff01\u4ece\u6a2a\u3001\u7ad6\u7684\u5212\u5206\u91cc\u9762\u5206\u522b\u4efb\u610f\u62ff\u51fa\u4e00\u7ec4\uff0c\u5982\u679c\u4e00\u4e2a\u5927\u4e00\u4e2a\u5c0f\uff0c\u6211\u4eec\u8003\u8651\u5c0f\u7684\u4e00\u4e2a\uff0c\u5176\u5b9e\u53ef\u4ee5\u4ece\u5b83\u5bf9\u5e94\u7684\u65b9\u5411\u7684\u53e6\u5916\u4e00\u7ec4\u91cc\u9762\u62ff\u51e0\u4e2a\u8fdb\u6765\uff0c\u7136\u540e\u628a\u5927\u7684\u4e00\u4e2a\u4efb\u610f\u5212\u5206\u51fa\u4e00\u4e2a\u5927\u5c0f\u7b49\u4e8e \u5c0f\u7684\u4e00\u4e2a\u7684\u539f\u672c\u5927\u5c0f \u7684\u5b50\u96c6\uff0c\u7136\u540e\u628a\u8fd9\u4e00\u90e8\u5206\u548c\u539f\u672c\u5c0f\u7684\u90e8\u5206\u6309\u7167\u4e0a\u9762\u7684\u6392\u5e8f\u65b9\u5f0f\u63a5\u8d77\u6765\uff0c\u628a\u5927\u7684\u4e00\u4e2a\u5269\u4e0b\u7684\u4e0e\u65b0\u62ff\u8fdb\u6765\u7684\u90a3\u4e9b\u63a5\u8d77\u6765\uff0c\u5269\u4e0b\u7684\u4e24\u7ec4\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u4e09\u6bb5\u7ebf\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5212\u5206\u4f7f\u7528 bitset \u4f18\u5316\u80cc\u5305\uff0c\u603b\u590d\u6742\u5ea6 $O((h+v)^3/\\omega)$\u3002\n\n```cpp\nconst int N = 1005;\nint nh, nv, hl[N], vl[N];\nvector <int> hs[2], vs[2];\nbitset <N * 1000> dph[N], dpv[N];\n\ninline void Read() {\n    nh = qread();\n    for (int i = 1;i <= nh;i++) hl[i] = qread();\n    nv = qread();\n    for (int i = 1;i <= nv;i++) vl[i] = qread();\n}\n\ninline void Solve() {\n    if (nh != nv) {\n        cout << \"No\\n\";\n        return;\n    }\n    dph[0].reset();\n    dph[0][500002] = 1;\n    for (int i = 1;i <= nh;i++) dph[i] = (dph[i - 1] << hl[i]) | (dph[i - 1] >> hl[i]);\n    dpv[0].reset();\n    dpv[0][500002] = 1;\n    for (int i = 1;i <= nv;i++) dpv[i] = (dpv[i - 1] << vl[i]) | (dpv[i - 1] >> vl[i]);\n    if (!dph[nh][500002]) {\n        cout << \"No\\n\";\n        return;\n    }\n    if (!dpv[nv][500002]) {\n        cout << \"No\\n\";\n        return;\n    }\n    int curidx = 500002;\n    vs[0].clear(); hs[0].clear();\n    vs[1].clear(); hs[1].clear();\n    for (int i = nh;i >= 1;i--) {\n        if (dph[i - 1][curidx - hl[i]]) {\n            hs[0].push_back(hl[i]);\n            curidx -= hl[i];\n        } else {\n            hs[1].push_back(hl[i]);\n            curidx += hl[i];\n        }\n    }\n    curidx = 500002;\n    for (int i = nv;i >= 1;i--) {\n        if (dpv[i - 1][curidx - vl[i]]) {\n            vs[0].push_back(vl[i]);\n            curidx -= vl[i];\n        } else {\n            vs[1].push_back(vl[i]);\n            curidx += vl[i];\n        }\n    }\n    if (vs[0].size() < hs[0].size()) {\n        while (vs[0].size() < hs[0].size()) {\n            vs[0].push_back(-vs[1].back());\n            vs[1].pop_back();\n        }\n        sort(vs[0].begin(), vs[0].end(), greater <int>());\n        int cx = 0, cy = 0;\n        int idx = 0;\n        for (int i = 0;i < vs[0].size();i++) {\n            if (vs[0][i] < 0) {\n                idx = i;\n                break;\n            }\n        }\n        sort(hs[0].begin(), hs[0].begin() + idx);\n        sort(hs[0].begin() + idx, hs[0].end(), greater<int>());\n        sort(vs[1].begin(), vs[1].end(), greater<int>());\n        sort(hs[1].begin(), hs[1].end());\n        cout << \"Yes\\n\";\n        for (int i = 0;i < hs[0].size();i++) {\n            cy += vs[0][i];\n            cout << cx << \" \" << cy << \"\\n\";\n            cx += hs[0][i];\n            cout << cx << \" \" << cy << \"\\n\";\n        }\n        for (int i = 0;i < hs[1].size();i++) {\n            cy -= vs[1][i];\n            cout << cx << \" \" << cy << \"\\n\";\n            cx -= hs[1][i];\n            cout << cx << \" \" << cy << \"\\n\";\n        }\n    } else {\n        while (hs[0].size() < vs[0].size()) {\n            hs[0].push_back(-hs[1].back());\n            hs[1].pop_back();\n        }\n        sort(hs[0].begin(), hs[0].end(), greater <int>());\n        int cx = 0, cy = 0;\n        int idx = 0;\n        for (int i = 0;i < hs[0].size();i++) {\n            if (hs[0][i] < 0) {\n                idx = i;\n                break;\n            }\n        }\n        sort(vs[0].begin(), vs[0].begin() + idx);\n        sort(vs[0].begin() + idx, vs[0].end(), greater<int>());\n        sort(hs[1].begin(), hs[1].end(), greater<int>());\n        sort(vs[1].begin(), vs[1].end());\n        cout << \"Yes\\n\";\n        for (int i = 0;i < hs[0].size();i++) {\n            cx += hs[0][i];\n            cout << cx << \" \" << cy << \"\\n\";\n            cy += vs[0][i];\n            cout << cx << \" \" << cy << \"\\n\";\n        }\n        for (int i = 0;i < hs[1].size();i++) {\n            cx -= hs[1][i];\n            cout << cx << \" \" << cy << \"\\n\";\n            cy -= vs[1][i];\n            cout << cx << \" \" << cy << \"\\n\";\n        }\n    }\n}\n```",
        "postTime": 1648716519,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1444D \u3010Rectangular Polyline\u3011"
    }
]