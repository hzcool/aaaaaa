[
    {
        "content": "\u8be6\u89c1 https://img-blog.csdn.net/20180828144742579?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Zsb3JhNzE1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70 qwq\n\n\uff081\uff09\u9996\u5148\uff0c\u8fde\u7eed\u7684\u76f8\u540c\u5b57\u7b26\u663e\u7136\u53ef\u4ee5\u5408\u5e76\uff0c\u76f4\u63a5\u51cf\u5230\u53ea\u5269\u4e00\u4e2a\u3002\n\n1.\u4e24\u4e32\u5f00\u5934\u76f8\u540c\u3002\u5206\u522b\u53d6\u5076\u6570\u957f\u5ea6\u524d\u7f00\u548c\u5947\u6570\u957f\u5ea6\u524d\u7f00\u4ea4\u6362\u3002\u5b57\u7b26\u4e32\u957f\u5ea6\u7f29\u51cf\uff1a2 \u3002\n\n2.\u4e24\u4e32\u5f00\u5934\u4e0d\u540c\u3002\u5404\u53d6\u4e00\u4e2a\u5947\u6570\u957f\u5ea6\u524d\u7f00\u5e76\u4ea4\u6362\u3002\u5b57\u7b26\u4e32\u957f\u5ea6\u7f29\u51cf\uff1a2 \u3002\n\n\uff082\uff09\u4ec0\u4e48\u65f6\u5019\u4f1a\u4f7f\u5b57\u7b26\u4e32\u957f\u5ea6\u7f29\u51cf\u901f\u5ea6\u4e0b\u964d\uff1f\n\n\u5c06S \u3001T\u4e2d\u8f83\u957f\u7684\u79f0\u4e3aA\uff0c\u8f83\u77ed\u7684\u79f0\u4e3aB\uff0c\u5c06 A \u7684\u5f00\u5934\u5b57\u7b26\u8bbe\u4e3a 0\uff0c\u53e6\u4e00\u79cd\u5b57\u7b26\u8bbe\u4e3a 1 \u3002\n\n\u5217\u4e3e\u7f29\u51cf\u901f\u7387\u53d8\u6162\u7684\u60c5\u51b5\uff08\u9700\u8981\u5c3d\u91cf\u907f\u514d\uff09\uff1a\n\n1.\nA = 010101\u2026\u2026\nB = 0\n\n\u65b9\u6cd5\uff1a\u2460 \u5728 A \u4e2d\u9009\u53d6\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u524d\u7f00\uff0c\u63a5\u5230 B \u4e0a\u3002\n\n\u2461 \u628a B \u63a5\u5230 A \u4e0a\u3002 \u7f29\u51cf\uff1a 1\u3002\n\n2.\n\nA = 01    \nB = 01\n \n \u7f29\u51cf\uff1a 1\u3002\n\n3.\n\nA = 010101\u2026\u2026\n\nB = 1\n\n\u65b9\u6cd5\uff1a\u2460 \u5728 A \u4e2d\u9009\u5076\u6570\u957f\u5ea6\u7684\u524d\u7f00\uff0c\u63a5\u5230 B \u4e0a\u3002\n\n\u2461 \u5728 A \u4e2d\u53d6\u5947\u6570\u957f\u5ea6\u7684\u524d\u7f00\uff0c\u4e0e B \u4ea4\u6362\u3002\n\u7f29\u51cf\uff1a 1\u3002\n\n\uff08 \" \u5c06 X \u7684\u67d0\u67d0\u524d\u7f00 \u63a5\u5230 Y \u4e0a \" \u8868\u793a\u5c06 X \u7684\u67d0\u67d0\u524d\u7f00\u4e0e Y \u7684\u957f\u5ea6\u4e3a 0 \u7684\u524d\u7f00\u4ea4\u6362\u3002\uff09\n\n\u907f\u514d\u7f29\u51cf\u901f\u7387\u51cf\u7f13\u3001\u7c97\u7565\u7684\u65b9\u6cd5\uff1a \n\n\u6bcf\u6b21\u64cd\u4f5c\u5c3d\u91cf\u4f7f\u5f97\u64cd\u4f5c\u5b8c\u6bd5\u540e\u4e24\u4e2a\u4e32\u7684\u957f\u5ea6\u8fd1\u4f3c\u3002\n\n\uff08\u8fd9\u6837\u4f7f\u5f97\u4e32\u7684\u957f\u5ea6\u5c3d\u91cf\u4e0d\u4f1a\u5230 1 \uff09\n\n\u5bf9\u4e8e \u7b2c 1\u30012 \u79cd\u60c5\u51b5\uff0c\u5c06 B \u7684\u5f00\u5934\u4e0e A \u7684\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u524d\u7f00\u4ea4\u6362\uff0c\u5e76\u4f7f\u5f97\u4ea4\u6362\u540e\u957f\u5ea6\u8fd1\u4f3c\u3002\n\n\u5bf9\u4e8e \u7b2c 3 \u79cd\u60c5\u51b5\uff0c\u91c7\u7528 \u4efb\u610f\u4e00\u79cd\u65b9\u6cd5\uff0c\u5e76\u4f7f\u5f97\u4ea4\u6362\u540e\u957f\u5ea6\u8fd1\u4f3c\u3002\u4e24\u79cd\u65b9\u6cd5\u6548\u679c\u76f8\u540c\u3002\n\n\u5bf9\u4e8e\u4e24\u79cd\u57fa\u672c\u60c5\u51b5\uff0c\u53ef\u4ee5\u5728\u77ed\u4e32\u53ea\u53d6\u5f00\u5934\u4e00\u4e2a\uff0c\u957f\u4e32\u51b3\u7b56\u4e00\u4e0b\u622a\u53d6\u524d\u7f00\u7684\u957f\u5ea6\uff0c\u4f7f\u5f97\u4ea4\u6362\u540e\u957f\u5ea6\u8fd1\u4f3c\u3002\n\n\u4e8e\u662f\u5269\u4e0b\u7684\u4e1c\u897f\u53ea\u9700\u8981\u8bfb\u5165\u7684\u65f6\u5019\u538b\u7f29\u4e00\u4e0b\uff0c\u4ee5\u53ca\u7528\u94fe\u8868\u7ef4\u62a4\u4e00\u4e0b\u5b57\u7b26\u4e32\uff0c\u5206\u7c7b\u8ba8\u8bba\u505a\u51b3\u7b56\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;            \n\n/*\u3010F.AB-Strings\u3011\n\u6709\u4e24\u4e2a\u53ea\u542b\u5b57\u7b26'a'\u3001'b'\u7684\u5b57\u7b26\u4e32\u3002\u4e00\u6b21\u64cd\u4f5c\u662f\u6307\u4ea4\u6362\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u53ef\u7a7a\u524d\u7f00\u3002\n\u95ee\uff1a\u4f7f\u5f97\u6bcf\u4e2a\u4e32\u5185\u53ea\u5305\u542b\u4e00\u79cd\u5b57\u7b26\u6700\u5c11\u7684\u64cd\u4f5c\u6570\u3002\u8981\u6c42\u8f93\u51fa\u65b9\u6848\u3002 */\n\nconst int N=1000005;\nint c[N],v[N],Next[N],cnt_node=0;\nint L=0,R=1,len[2],head[2],n=0,ans[N][2];\nchar s1[N],s2[N];\n\nint new_node(int color,int tot,int nxt){\n    cnt_node++,c[cnt_node]=color;\n    v[cnt_node]=tot,Next[cnt_node]=nxt;\n    return cnt_node;\n}\n\nvoid build(int f,char s[]){\n    int n=strlen(s+1),p=new_node(s[1]-'a',1,0);\n    head[f]=p,len[f]=1;\n    for(int i=2;i<=n;i++)\n        if(s[i]==s[i-1]) v[p]++;\n        else p=Next[p]=new_node(s[i]-'a',1,0),len[f]++;\n}\n\nint func0(int x,int a,int b){\n    return abs((a-2*x-1)-(b+2*x));\n}\n\nint func1(int x,int a,int b){\n    return abs((a-2*x)-(b+2*x-2));\n}\n\nint func2(int x,int a,int b){\n    return abs((a-2*x-1)-(b+2*x-1));\n}\n\nint Get_len(int f){\n    int cnt=0;\n    for (int p=head[f];p;p=Next[p])\n        cnt++;\n    return cnt;\n}\n\nvoid New_ans(int Lv,int Rv){\n    n++;\n    ans[n][L]=Lv,ans[n][R]=Rv;\n}\n\nint main(){\n    scanf(\"%s%s\",s1+1,s2+1);\n    build(0,s1),build(1,s2);\n    while (max(len[L],len[R])>1){\n        if (len[L]<len[R])\n            swap(L,R);\n        if (c[head[L]]==c[head[R]]&&len[R]>1&&len[L]>2){\n            int a=len[L],b=len[R],x1=(a-b+2)/4,x2=x1+1;\n            int x=max(1,min(func1(x1,a,b)<=func1(x2,a,b)?x1:x2,a/2));\n            int tot=v[head[L]],p=head[L];\n            for (int i=1;i<=x*2-1;i++)\n                p=Next[p],tot+=v[p];\n            New_ans(tot,v[head[R]]);\n            int hL=head[L],hR=head[R];\n            v[head[L]=Next[p]]+=v[hR];\n            head[R]=hL;\n            Next[p]=Next[Next[hR]];\n            v[p]+=v[Next[hR]];\n            len[L]-=x*2,len[R]+=x*2-2;\n            continue;\n        }\n        else if (c[head[L]]==c[head[R]]){\n            int a=len[L],b=len[R],x1=(a-b-1)/4,x2=x1+1;\n            int x=min(func0(x1,a,b)<=func0(x2,a,b)?x1:x2,(a-1)/2);\n            int tot=v[head[L]],p=head[L];\n            for (int i=1;i<=x*2;i++)\n                p=Next[p],tot+=v[p];\n            New_ans(tot,0);\n            swap(head[R],head[L]);\n            swap(Next[p],head[L]);\n            v[p]+=v[Next[p]];\n            Next[p]=Next[Next[p]];\n            len[L]=(len[L]<3)?(Get_len(L)):(len[L]-(x*2+1));\n            len[R]=(len[R]<3)?(Get_len(R)):(len[R]+(x*2));\n        }\n        else {\n            int a=len[L],b=len[R],x1=(a-b-1)/4,x2=x1+1;\n            int x=min(func2(x1,a,b)<=func2(x2,a,b)?x1:x2,(a-1)/2);\n            int tot=v[head[L]],p=head[L];\n            for (int i=1;i<=x*2;i++)\n                p=Next[p],tot+=v[p];\n            New_ans(tot,v[head[R]]);\n            v[head[R]]+=v[Next[p]];\n            v[p]+=v[Next[head[R]]];\n            swap(Next[head[R]],Next[p]);\n            Next[head[R]]=Next[Next[head[R]]];\n            Next[p]=Next[Next[p]];\n            swap(head[L],head[R]);\n            len[L]=(len[L]<3)?(Get_len(L)):(len[L]-(x*2+1));\n            len[R]=(len[R]<3)?(Get_len(R)):(len[R]+(x*2-1));\n        }\n    }\n    printf(\"%d\\n\",n);\n    for (int i=1;i<=n;i++)\n        printf(\"%d %d\\n\",ans[i][0],ans[i][1]);\n    return 0;\n}\n```",
        "postTime": 1535440123,
        "uid": 69404,
        "name": "flora715",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1012D \u3010AB-Strings\u3011"
    }
]