[
    {
        "content": "#### Description \n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684**\u6709\u5411\u5f3a\u8fde\u901a\u56fe**\u3002\u79f0\u4e00\u4e2a\u70b9\u662f**\u597d\u7684**\u5f53\u4e14\u4ec5\u5f53\u5b83\u5230\u5176\u4ed6\u70b9\u90fd\u6709\u4e14\u53ea\u6709\u4e00\u6761**\u7b80\u5355\u8def\u5f84**\u3002\u5982\u679c\u597d\u7684\u70b9\u81f3\u5c11\u6709 $20\\%$ \u5219\u8f93\u51fa\u6240\u6709\u597d\u7684\u70b9\uff0c\u5426\u5219\u8f93\u51fa `-1`\u3002\n\n$\\sum n\\leq 10^5,\\sum m\\leq 2\\times 10^5$\u3002\n\n#### Solution\n\n\u8003\u8651\u7ed9\u4f60\u4e00\u4e2a\u70b9 $u$\uff0c\u5982\u4f55\u5224\u65ad\u5176\u662f\u5426\u662f\u597d\u7684\u3002\n\n\u90a3\u5f88\u7b80\u5355\u662f\u5427\uff0c\u53ea\u8981\u4ee5 $u$ \u4e3a\u6839\u5efa\u51fa `dfs` \u6811\uff0c\u6ca1\u6709**\u6a2a\u53c9\u8fb9**\u6216\u8005**\u524d\u5411\u8fb9**\u7684\u8bdd $u$ \u5373\u4e3a\u597d\u8282\u70b9\u3002\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5 $O(n)$ \u5224\u65ad\u4e86\u3002\n\n\u5982\u679c\u6211\u4eec\u73b0\u5728\u77e5\u9053\u4e00\u4e2a\u70b9 $u$ \u662f\u597d\u7684\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u6c42\u51fa\u6240\u6709\u7684\u597d\u8282\u70b9\u3002\n\n\u8fd8\u662f\u4ee5 $u$ \u4e3a\u6839\u5efa\u51fa `dfs tree`\uff0c\u8003\u8651\u67d0\u4e2a $v$ \u7684\u5b50\u6811\uff0c\u7531\u4e8e\u6574\u4e2a\u56fe\u7684\u5f3a\u8fde\u901a\u6027\uff0c $v$ \u7684\u5b50\u6811\u4e2d\u6709\u8fde\u5411\u5176\u7956\u5148\u7684\u8fd4\u7956\u8fb9\u3002\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u7684\u8fb9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\uff0c\u5426\u5219 $v$ \u6709\u4e24\u6761\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe $fa_v$ \u5373 $v$ \u7684\u7236\u4eb2\u8282\u70b9\u3002\n\n\u90a3\u6211\u4eec\u5148\u628a\u6240\u6709\u5b50\u6811 $v$ \u5185\u8fd4\u7956\u5230\u6839\u7684\u7956\u5148\u7684\u8fb9\u7684\u4e2a\u6570\u8bb0\u4e0b\u6765\uff0c\u5982\u679c\u8fd9\u4e2a\u4e2a\u6570 $\\ge 2$\uff0c\u6392\u9664 $v$ \u662f\u597d\u70b9\u7684\u53ef\u80fd\uff0c\u5426\u5219\u5c31\u987a\u4fbf\u8bb0\u4e0b\u6bcf\u4e2a $v$ \u5b50\u6811\u7684\u90a3\u6761\u8fd4\u7956\u8fb9\u6307\u5411\u7684\u70b9\u3002\n\n\u5047\u8bbe $v$ \u7684\u5b50\u6811\u8fd9\u6761\u8fd4\u7956\u8fb9\u6307\u5411\u4e86 $w$\uff0c\u90a3\u4e48 $v$ \u662f\u597d\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53 $w$ \u662f\u597d\u70b9\u3002\u8003\u8651\u8bc1\u660e\uff1a\n\n- \u5982\u679c $w$ \u662f\u597d\u70b9\uff0c\u90a3\u4e48 $w$ \u5230\u6240\u6709\u70b9\u8def\u5f84\u552f\u4e00\uff0c\u53c8\u7531\u4e8e $v$ \u8fc7 $w$ \u51fa\u5b50\u6811\u7684\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5 $v$ \u5230\u6240\u6709\u70b9\u7684\u7b80\u5355\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u5373 $v$ \u662f\u597d\u70b9\u3002\n- \u5982\u679c $v$ \u662f\u597d\u70b9\uff0c\u90a3\u4e48 $v$ \u5230\u6240\u6709\u70b9\u8def\u5f84\u552f\u4e00\uff0c\u7531\u4e8e $v$ \u51fa\u5b50\u6811\u5fc5\u987b\u8981\u7ecf\u8fc7 $w$\uff0c\u6240\u4ee5 $w$ \u5230 $v$ \u5b50\u6811\u5916\u6240\u6709\u70b9\u7684\u8def\u5f84\u4e5f\u662f\u552f\u4e00\u7684\uff0c\u7136\u540e $w$ \u5230 $v$ \u7684\u5b50\u6811\u5185\u7684\u7b80\u5355\u8def\u5f84\u4e5f\u662f\u552f\u4e00\u7684\uff08\u6ca1\u6709\u524d\u5411\u8fb9\u4e0e\u6a2a\u53c9\u8fb9\uff09\uff0c\u6240\u4ee5 $w$ \u662f\u597d\u70b9\u3002\n\n\u6240\u4ee5\u7efc\u5408\u6240\u6709\u7684\u7ed3\u8bba\uff1a\n\n\u4e00\u4e2a\u70b9 $v$ \u662f\u597d\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53 $v$ \u7684\u5b50\u6811\u5185\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8fde\u5411 $v$ \u7684\u7956\u5148\u7684\u8fd4\u7956\u8fb9\uff0c\u5e76\u4e14\u8fd9\u6761\u8fb9\u6240\u8fde\u5411\u7684\u70b9\u662f\u597d\u70b9\u3002\n\n\u7b2c\u4e00\u4e2a\u6761\u4ef6\u53ef\u4ee5\u8003\u8651\u6240\u6709\u8fd4\u7956\u8fb9 $(a,b)$\uff0c\u5b83\u5bf9\u54ea\u4e9b $v$ \u7684\u5b50\u6811\u5185\u8fd4\u5411 $v$ \u7956\u5148\u7684\u8fb9\u7684\u6570\u91cf\u7684\u6709\u8d21\u732e\u3002\u663e\u7136\u8fd9\u6837\u7684 $v$ \u5206\u5e03\u5728 $a\\to fa_a\\to...\\to son_b$ \u4e0a\uff0c\u8fd9\u91cc\u7684 $son_b$ \u4e3a $b$ \u7684\u513f\u5b50\u8282\u70b9\u4e2d\u9760\u8fd1 $a$ \u4fa7\u7684\u90a3\u4e2a\uff0c\u6811\u4e0a\u5dee\u5206\u5373\u53ef\u548c\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u4e00\u8d77\u89e3\u51b3\u3002\n\n\u4ee5\u4e0a\u524d\u63d0\u4e3a `dfs tree` \u7684\u6839\u8282\u70b9\u4e3a\u597d\u70b9\u3002\n\n\u90a3\u6211\u4eec\u53ea\u8981\u627e\u5230\u4e00\u4e2a\u597d\u70b9\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u80fd\u5728 $O(n)$ \u7684\u8303\u56f4\u5185\u6c42\u89e3\u3002\n\n\u7531\u4e8e\u9898\u76ee\u53ea\u8981\u6c42\u597d\u70b9\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e $20\\%$ \u65f6\u8f93\u51fa\uff0c\u6240\u4ee5\u6211\u4eec\u968f\u673a\u53d6 $100$ \u4e2a\u70b9\u8dd1 $O(n)$ \u5224\u65ad\u3002\n\n\u5982\u679c\u597d\u70b9\u6570\u91cf\u4e0d\u5c0f\u4e8e $20\\%$\uff0c\u4f60\u5224\u65ad\u4e0d\u51fa\u6765\u7684\u6982\u7387\u4e3a $\\Big(\\dfrac{4}{5}\\Big)^{100}$ \u8d8b\u8fd1\u4e8e $0$\u3002\n\n\u6240\u4ee5\u968f\u673a\u8dd1 $100$ \u6b21\u4e4b\u540e\u5f97\u4e0d\u5230\u4e00\u4e2a\u597d\u70b9\u7684\u8bdd\u5c31\u76f4\u63a5\u8f93\u51fa $-1$\uff0c\u5982\u679c\u9519\u4e86\u5c31\u662f\u5b87\u5b99\u5c04\u7ebf\u5f71\u54cd\u3002\n\n\u5426\u5219\u4ee5\u627e\u5230\u7684\u597d\u70b9\u4e3a\u6839 $O(n)$ \u6c42\u7b54\u6848\u5373\u53ef\u3002\n\n\u6ce8\u610f\u968f\u673a\u53d6\u70b9\u4e0d\u80fd\u53d6\u91cd\uff0c\u7406\u7531\u53ef\u89c1\u751f\u65e5\u6096\u8bba\u3002\n\n[\u8bc4\u6d4b\u94fe\u63a5\u3002](https://codeforces.com/contest/1361/submission/179062861)",
        "postTime": 1667481574,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF1361E James and the Chase \u9898\u89e3"
    },
    {
        "content": "\u5bb9\u6613\u53d1\u73b0\u4e00\u4e2a\u70b9\u662f interesting \u7684\u5f53\u4e14\u4ec5\u5f53\u4ee5\u5b83\u4e3a\u6839\u7684 dfs \u6811\u53ea\u6709\u6811\u8fb9\u548c\u8fd4\u7956\u8fb9\uff0c\u6ca1\u6709\u6a2a\u53c9\u8fb9\u3002\u4e8e\u662f\u5c31\u6709\u4e00\u4e2a $O(n)$ \u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u4e0d\u662f interesting \u7684\u505a\u6cd5\u3002\n\n\u968f\u673a\u9009\u62e9 $\\min(n,100)$ \u4e2a\u70b9\u68c0\u67e5\u8fd9\u4e9b\u70b9\u662f\u4e0d\u662f interesting \u7684\uff0c\u5982\u679c\u6ca1\u6709 interesting \u7684\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa $-1$\uff0c\u6b63\u786e\u7387\u9ad8\u8fbe $1-0.8^{100}$\u3002\u5426\u5219\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a interesting \u7684\u70b9 $x$\uff0c\u5efa\u51fa\u4ee5 $x$ \u4e3a\u6839\u7684 dfs \u6811\u3002\n\n\u8003\u8651\u5224\u65ad\u4e00\u4e2a\u975e\u6839\u8282\u70b9 $y$ \u662f\u5426 interesting\uff0c\u4e00\u4e2a\u5fc5\u8981\u7684\u6761\u4ef6\u662f\uff1a\u5b83\u7684\u5b50\u6811\u5185\u7684\u70b9\u5fc5\u987b\u603b\u5171\u53ea\u5f15\u51fa\u4e00\u6761\u5230 $y$ \u7684\u7956\u5148\u8282\u70b9\u7684\u8fd4\u7956\u8fb9\uff08\u4e00\u5b9a\u4f1a\u6709\u4e00\u6761\u56e0\u4e3a\u6574\u5f20\u56fe\u662f\u5f3a\u8fde\u901a\u7684\uff09\uff0c\u56e0\u4e3a\u5982\u679c\u6709\u591a\u6761\u7684\u8bdd\uff0c\u5c31\u5b58\u5728\u4e86\u4e24\u6761\u4ece $y$ \u8d70\u5411 $y$ \u7684\u7236\u4eb2\u7684\u8def\u5f84\u3002\u7136\u540e\u8003\u8651\u53ea\u6709\u4e00\u6761\u7684\u60c5\u51b5\uff0c\u8bbe\u8fd9\u6761\u8fd4\u7956\u8fb9\u6307\u5411 $z$\uff0c\u90a3\u4e48 $y$ \u662f interesting \u7684\u5f53\u4e14\u4ec5\u5f53 $z$ \u662f interesting \u7684\u3002\n\n\u5fc5\u8981\u6027\uff1a\u5982\u679c $z$\u200b \u4e0d\u662f intersting \u7684\u8bdd\uff0c\u5047\u5982 $z$ \u5230\u67d0\u4e00\u4e2a\u70b9 $x$ \u6709\u4e24\u79cd\u8def\u5f84\uff0c\u90a3\u4e48 $y$ \u5230 $x$ \u4e5f\u4e00\u5b9a\u6709\u4e24\u79cd\u8def\u5f84\u3002\n\n\u5145\u5206\u6027\uff1a$z$ \u5230\u6240\u6709\u70b9\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u800c $y$ \u5230\u5b83\u5b50\u6811\u5185\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u800c $y$ \u51fa\u5b50\u6811\u7684\u9014\u5f84\u90fd\u8981\u901a\u8fc7 $z$ \uff0c\u56e0\u6b64 $y$ \u5230\u6240\u6709\u70b9\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\u3002\n\n\u56e0\u4e3a $z$ \u662f $y$ \u7684\u7956\u5148\uff0c\u4e8e\u662f\u4ece\u6839\u5f80\u53f6\u5b50\u9012\u63a8\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u51fa\u8fb9\u53ef\u4ee5\u7528 `multiset` \u7ef4\u62a4\uff0c\u5408\u5e76\u76f4\u63a5\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u6ce8\u610f\u6bcf\u6b21\u5408\u5e76\u5b8c\u4e4b\u540e\u8981\u628a\u6240\u6709\u5230 $y$ \u200b\u7684\u51fa\u8fb9\u5220\u6389\u3002\n\n\n```cpp\nunsigned seed = std::chrono::system_clock::now().time_since_epoch().count();\nmt19937 rand_num(seed);  \nuniform_int_distribution<long long> dist(0,1223344556616251);  // \u00b8\u00f8\u00b6\u00a8\u00b7\u00b6\u00ce\u00a7\nint n,m,rt;\nvector<int>e[111111],g[111111],fz[111111],ans;\nmultiset<int>st[111111];\nint fa[111111],bg[111111],en[111111],tim;\nint dp[111111],ffa[111111];\nint hson[111111];\n\nvoid dfs1(int u)\n{\n    bg[u]=++tim;\n    for(int v:e[u]) if(!bg[v]) fa[v]=u,dfs1(v);\n    en[u]=tim;\n}\nint check(int rt)\n{\n    tim=fa[rt]=0;\n    R(i,1,n) bg[i]=0;\n    dfs1(rt);\n    R(u,1,n) \n    {\n        for(int v:e[u]) if(fa[v]^u) if(bg[v]>bg[u]||en[v]<en[u]) return 0;\n    }\n    return 1;\n}\nvoid dfs2(int u)\n{\n    hson[u]=-1;\n    for(int v:g[u]) \n    {\n        dfs2(v);\n        if(!~hson[u]||st[v].size()>st[hson[u]].size()) hson[u]=v;\n    }\n    if(~hson[u]) swap(st[u],st[hson[u]]);\n    for(int v:g[u]) if(v^hson[u])\n    {\n        for(auto it=st[v].begin();it!=st[v].end();it++) st[u].insert(*it);\n    }\n    for(int v:fz[u]) st[u].insert(v);\n    while(st[u].find(u)!=st[u].end()) st[u].erase(st[u].find(u));\n    if((int)st[u].size()>1) ffa[u]=0;\n    else if((int)st[u].size()==1) ffa[u]=*st[u].begin();  \n}\nvoid dfs3(int u)\n{\n    if(ffa[u]==-1) dp[u]=1,ans.pb(u);\n    else if(!ffa[u]) dp[u]=0;\n    else {dp[u]=dp[ffa[u]];if(dp[u])ans.pb(u);}\n    for(int v:g[u]) dfs3(v); \n}\nsigned main()\n{\n    for(int _=read();_;_--)\n    {\n        n=read(),m=read();\n        R(i,1,n) e[i].clear();\n        int u,v;\n        R(i,1,m) u=read(),v=read(),e[u].pb(v);\n        rt=0;\n        for(int i=1;i<=100&&(!rt);i++) \n        {\n            static int u;\n            u=dist(rand_num)%n+1;\n            if(check(u)) rt=u;\n        }\n        //printf(\"rt:%lld\\n\",rt);\n        if(!rt) {puts(\"-1\");continue;}\n        ans.clear();\n        R(i,1,n) g[i].clear(),fz[i].clear(),st[i].clear(),ffa[i]=-1,dp[i]=0;\n        R(u,1,n) \n        {\n            if(u^rt) g[fa[u]].pb(u);\n            for(int v:e[u]) if(fa[v]^u) fz[u].pb(v); \n        }\n        dfs2(rt);\n        dfs3(rt);\n        if((int)ans.size()*5<n) {puts(\"-1\");continue;}\n        sort(ans.begin(),ans.end());\n        for(int x:ans) writesp(x);puts(\"\");\n    }\n}\n```\n\n",
        "postTime": 1624491317,
        "uid": 115779,
        "name": "\u6781\u5bd2\u795e\u51b0",
        "ccfLevel": 0,
        "title": "cf1361e"
    },
    {
        "content": "\u8003\u8bd5\u7684\u65f6\u5019\u6709\u4e2a\u90e8\u5206\u5206\uff1a\u4fdd\u8bc1 $1$ \u4e00\u5b9a\u5408\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u6709\u4ec0\u4e48\u7528\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8fd9\u90e8\u5206\u5206\uff0c\u5982\u679c\u53ef\u4ee5\u4ece\u5408\u6cd5\u7684 $1$ \u53f7\u70b9\u5f00\u59cb\u627e\u5230\u6240\u6709\u7684\u5408\u6cd5\u70b9\u7684\u8bdd\u3002\u90a3\u4e48\u6ee1\u5206\u505a\u6cd5\u5c31\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u70b9\uff0c\u7136\u540e\u5f97\u5230\u5176\u4ed6\u7684\u5408\u6cd5\u70b9\u5373\u53ef\u3002\n\n$\\frac{1}{5}$ \u8fd9\u4e2a\u6570\u5b57\u663e\u7136\u5728\u6697\u793a\u6211\u4eec\u8dd1\u968f\u673a\u5316\uff0c\u4e0d\u59a8\u8003\u8651\u968f\u673a $k$ \u6b21\uff0c\u6bcf\u6b21\u66b4\u529b\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u5408\u6cd5\u3002\u5982\u679c $k$ \u6b21\u90fd\u4e0d\u5408\u6cd5\u7684\u8bdd\u76f4\u63a5\u8f93\u51fa $-1$ \u5373\u53ef\u3002\u9519\u8bef\u7684\u6982\u7387\u4e3a $(\\frac{4}{5})^{k}$ \u3002\n\n\u9996\u5148\u8003\u8651\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5408\u6cd5\u3002\u5341\u5206\u663e\u800c\u6613\u89c1\u7684\u662f\uff0c\u5f53\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\uff0c\u8dd1\u51fa\u4e00\u4e2a\u751f\u6210\u6811\u540e\uff0c\u5fc5\u987b\u6ee1\u8db3\u5269\u4e0b\u7684\u975e\u6811\u8fb9\u4e00\u5b9a\u90fd\u662f\u8fd4\u7956\u8fb9\u3002\n\n\uff08\u8fd9\u4e2a\u5224\u8fd4\u7956\u8fb9\u7684\u65f6\u5019\u5199\u6025\u4e86\u5199\u4e86\u4e2a\u5e26 $\\log$ \u7684\u505a\u6cd5 /kk\n\n\u7136\u540e\u63a5\u4e0b\u6765\u5c31\u662f\u600e\u4e48\u7740\u5176\u4ed6\u7684\u5408\u6cd5\u70b9\u3002\n\n\u4e00\u4e2a\u70b9 $u$ \u5408\u6cd5\u5fc5\u987b\u6ee1\u8db3\uff0c$u$ \u7684\u5b50\u6811\u91cc\u6ca1\u6709\u4e24\u6761\u4ee5\u4e0a\u8fde\u51fa\u53bb\u7684\u8fb9\u3002\u663e\u7136\u5982\u679c\u6709\u4e24\u6761\u8fb9\u7684\u8bdd\uff0c\u90a3\u4e48\u8def\u5f84\u6570\u5fc5\u7136\u5927\u4e8e $1$ \uff0c\u56e0\u6b64\u4e0d\u5408\u6cd5\u3002\u63a5\u7740\uff0c$u$ \u5bf9\u4e8e\u5b50\u6811\u5185\u90e8\u7684\u70b9\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\u90a3\u4e48\u5b50\u6811\u5916\u90e8\u7684\u70b9\u600e\u4e48\u5224\u5462\uff1f\n\n\u663e\u7136\u662f\u5fc5\u987b\u8981\u6ee1\u8db3\uff0c$u$ \u5b50\u6811\u5185\u90e8\u7684\u8d8a\u8fc7 $u$ \u7684\u8fb9\uff0c\u8df3\u51fa\u6765\u540e\uff0c\u662f\u53ef\u4ee5\u4e00\u8def\u8df3\u5230\u6839\u7684\u3002\n\n\u4ee4\u8fd9\u6761\u8fb9\u8df3\u5230\u7684\u70b9\u662f $v$ \uff0c**\u90a3\u4e48\u8fd9\u4e2a $v$ \u5fc5\u987b\u5408\u6cd5**_\uff08\u8003\u573a\u4e0a\u683d\u8fd9\u91cc\u4e86\uff0c\u5f97\u6ce8\u610f\uff09_\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u4ece $u$ \u5f00\u59cb\uff0c\u6cbf\u7740\u8fd9\u6761\u552f\u4e00\u7684\u8df3\u51fa\u53bb\u7684\u8fb9\uff0c\u8d70\u5230 $v$ \u70b9\u540e\uff0c\u8981\u4e48\u5230\u4e0d\u4e86\u6574\u68f5\u6811\uff0c\u8981\u4e48\u5c06\u5b58\u5728\u591a\u6761\u8def\u5f84\u3002\n\n\u4e8e\u662f\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u7684\u8fd9\u6761\u8df3\u51fa\u53bb\u7684\u8fb9\u5373\u53ef\uff0c\u56e0\u4e3a\u6700\u591a\u4e00\u6761\u624d\u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u7ef4\u62a4\u8d77\u6765\u5341\u5206\u65b9\u4fbf\u3002\n\n\u968f\u673a\u7684\u8bdd\u4e0d\u5efa\u8bae\u76f4\u63a5 `rand` \uff0c\u4ea4\u4e86\u51e0\u6b21\u90fd\u6ca1\u8fc7\u53bb\u3002\u5efa\u8bae\u76f4\u63a5\u5bf9\u7740 $id$ \u6570\u7ec4 `random_shuffle` \u3002\n\n```cpp\nconst int N=4e5+5;\nconst int LogN=19;\n\nint n,m;\n\nint cnt,head[N];\nstruct Edge {int nxt,to;} G[N];\ninline void addedge(int u,int v) {\n\tif(u==v) return ;\n\tG[++cnt]=(Edge){head[u],v},head[u]=cnt;\n}\ninline void clear_edge() {\n\tmemset(head,0,sizeof(head)),cnt=0;\n}\n\nbool tree_edge[N],vis[N];\nint dep[N],fa[N][LogN];\n\nvoid dfs(int u,int pre) {\n\tvis[u]=true,fa[u][0]=pre,dep[u]=dep[pre]+1;\n\tlep(i,1,18) fa[u][i]=fa[fa[u][i-1]][i-1];\n\t\n\tfor(int i=head[u],v;i;i=G[i].nxt)\n\t\tif(v=G[i].to,!vis[v]) tree_edge[i]=true,dfs(v,u);\n}\n\ninline int kth(int u,int k) {\n\tlep(i,0,18) if((k>>i)&1) u=fa[u][i];\n\treturn u;\n}\ninline bool check(int rt) {\n\tlep(i,1,m) tree_edge[i]=false;\n\tlep(i,1,n) vis[i]=false;\n\tdfs(rt,0);\n\tlep(i,1,n) if(!vis[i]) return false;\n\n\tlep(u,1,n) for(int i=head[u],v;i;i=G[i].nxt) if(!tree_edge[i]) {\n\t\tv=G[i].to;\t\t\n\t\tif(dep[v]>=dep[u]) return false;\n\t\tif(kth(u,dep[u]-dep[v])!=v) return false; // \u663e\u7136\u8fd9\u91cc\u5199\u7684\u5f88\u4e11 /wq\n\t}\n\treturn true;\n}\n\nbool able[N];\nint top,sta[N];\nstd::vector <int> god[N];\n\nvoid init(int u) {\n\tgod[u].clear(),able[u]=true;\n\tfor(int i=head[u],v;i;i=G[i].nxt) if(v=G[i].to,tree_edge[i]) {\n\t\tif(dep[v]<dep[u]) continue;\n\t\tinit(v);\n\t\tfor(int t:god[v]) if(t!=u) god[u].pb(t);\n\t} else god[u].pb(v);\n\tif(god[u].size()>1) able[u]=false;\n}\nvoid solve(int u) {\n\tfor(int t:god[u]) able[u]&=able[t];\t\n\tfor(int i=head[u],v;i;i=G[i].nxt) if(v=G[i].to,tree_edge[i]) {\n\t\tif(dep[v]<dep[u]) continue;\n\t\tsolve(v);\n\t}\n\tif(able[u]) sta[++top]=u;\n}\n\nint u,v,id[N];\ninline void solve() {\n\tclear_edge();\n\t\n\tIN(n),IN(m);\n\tlep(i,1,m) IN(u),IN(v),addedge(u,v);\n\n\tlep(i,1,n) id[i]=i;\n\tstd::random_shuffle(id+1,id+1+n);\n\n\tlep(t,1,99) {\n\t\tint u=id[t];\n\t\tif(check(u)) {\n\t\t\ttop=0,init(u),solve(u);\n\t\t\tstd::sort(sta+1,sta+1+top);\n\t\t\tif(top*5>=n) {lep(i,1,top) printf(\"%d \",sta[i]); puts(\"\");}\n\t\t\telse puts(\"-1\");\n\t\t\treturn ;\n\t\t}\n\t}\n\treturn puts(\"-1\"),void();\n}\n\nint main() {\n\tsrand(time(0)),srand(rand());\n\tint T; IN(T);\n\twhile(T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1606526013,
        "uid": 194220,
        "name": "Moonlights",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1361E \u3010James and the Chase\u3011"
    }
]