[
    {
        "content": "\u770b\u5230\u6807\u7b7e\u91cc\u7684 `implementation` \u5c31\u77e5\u9053\u8fd9\u9898\u4e0d\u592a\u597d\u5199\uff08\u771f\u7684\u662f\u7ec6\u8282\u4e00\u5927\u5806\u3002\u3002\u3002\n\n\u7b2c\u4e00\u6b65\u4e0a\u6765\u80af\u5b9a\u662f\u628a\u76f8\u90bb\u7684\u683c\u5b50\u7528\u5e76\u67e5\u96c6\u5e76\u8d77\u6765\u3002\n\n\u7528\u811a\u6307\u5934\u60f3\u4e00\u60f3\uff0c\u5f62\u6210\u7684\u6700\u5927\u8fde\u901a\u5757\u80af\u5b9a\u5168\u5305\u4e86\u4f60\u6307\u5b9a\u6846\u7684\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u80af\u5b9a\u8981 $O(n^2)$ \u4e00\u4e2a\u4e00\u4e2a\u679a\u4e3e\u6846\u7684\u4f4d\u7f6e\u3002\n\n\u73b0\u5728\u6211\u4eec\u56fa\u5b9a\u4e86\u6846\u7684\u4f4d\u7f6e\uff0c\u8981\u6c42\u51fa\u5f62\u6210\u7684\u8fde\u901a\u5757\u5927\u5c0f\u3002\n\n\u56e0\u4e3a\u6c42\u7684\u662f\u6574\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u6846\u5468\u56f4\u7684\u4e00\u5708\u70b9\u7684\u8fde\u901a\u5757\u80af\u5b9a\u5f97\u7b97\u5230\u7b54\u6848\u91cc\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u8fde\u901a\u5757\u6709\u6ca1\u6709\u88ab\u7edf\u8ba1\u8fc7\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5 $O(k)$ \u505a\u3002\n\n\u6846\u91cc\u7684\u6709\u4e00\u4e9b\u683c\u5b50\u53ef\u80fd\u5728\u6846\u5916\u9762\u7684\u8fde\u901a\u5757\u90a3\u4e00\u90e8\u5206\u7edf\u8ba1\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u628a\u8fd9\u4e00\u90e8\u5206\u8d21\u732e\u53bb\u6389\u3002\n\n\u4f46\u662f\u5f88\u660e\u663e\u6c42\u4e00\u4e2a\u8fde\u901a\u5757\u4e0d\u5728\u67d0\u4e00\u4e2a\u77e9\u5f62\u6846\u4e2d\u7684\u90e8\u5206\u975e\u5e38\u4e0d\u597d\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8865\u96c6\u8f6c\u5316\uff1a\u8003\u8651\u6c42\u51fa\u4e00\u4e2a\u6846\u5185\u4e0d\u4e0e\u6846\u5916\u4efb\u4f55\u4e00\u4e2a\u683c\u5b50\u8054\u901a\u7684\u683c\u5b50\u4e2a\u6570\u3002\n\n\u5982\u679c\u8981\u6c42\u8fd9\u4e2a\u4e1c\u897f\uff0c\u90a3\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u70b9\u8981\u4e48\u5bf9\u4e00\u4e2a\u6846\u90fd\u6709\u8d21\u732e\uff0c\u8981\u4e48\u90fd\u6ca1\u8d21\u732e\uff1b\u6240\u4ee5\u6211\u4eec\u5206\u8fde\u901a\u5757\u8003\u8651\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u6211\u4eec\u5728\u5e76\u67e5\u96c6\u5408\u5e76\u8fde\u901a\u5757\u7684\u65f6\u5019\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u8fde\u901a\u5757\u6700\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3\u7684\u4f4d\u7f6e\u5206\u522b\u5728\u54ea\u91cc\u3002\n\n\u8fd9\u6837\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff1a\n\n* \u5982\u679c\u5de6\u53f3\u6216\u8005\u4e0a\u4e0b\u8de8\u5ea6\u8d85\u8fc7\u4e86 $k$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fde\u901a\u5757\u663e\u7136\u4e0d\u80fd\u88ab\u4efb\u4f55\u4e00\u4e2a\u6846\u5b8c\u6574\u7684\u5305\u8fdb\u53bb\u3002\n\n* \u5426\u5219\uff0c\u53ef\u4ee5\u5b8c\u6574\u5305\u4f4f\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u6846\u7684\u4f4d\u7f6e\u662f\u53ef\u4ee5\u786e\u5b9a\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe\u8fde\u901a\u5757\u6700\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3\u7684\u4f4d\u7f6e\u5206\u522b\u662f $y1,y2,x1,x2$\uff0c\u90a3\u4e48\u80fd\u5305\u4f4f\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u6846\u7684\u5de6\u4e0a\u89d2\u4e00\u5b9a\u5728 $(x2-k+1,y2-k+1)$ \u548c $(x1,y1)$ \u56f4\u6210\u7684\u77e9\u5f62\u4e2d\u3002\n\n\u8fd9\u6837\u6211\u4eec\u626b\u4e00\u904d\u6240\u6709\u8fde\u901a\u5757\uff0c\u63a5\u7740\u8dd1\u4e00\u904d\u4e8c\u7ef4\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u4e2a\u601d\u8def\u5f88\u81ea\u7136\uff0c\u4f46\u662f\u4ee3\u7801\u6781\u4e0d\u53cb\u597d\u3002\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=1e3+10;\nint n,k,ans,fa[NR*NR],size[NR*NR],sum[NR][NR],cnt[NR][NR],vis[NR*NR];\nint maxx[NR*NR],maxy[NR*NR],minx[NR*NR],miny[NR*NR];\nconst int dx[]={1,-1,0,0};\nconst int dy[]={0,0,1,-1};\nchar s[NR][NR];\nbool exist(int x,int y){\n\tif(x<1||x>n||y<1||y>n)return 0;\n\treturn 1;\n}\nvoid chkmax(int &x,int y){x=x>y?x:y;}\nvoid chkmin(int &x,int y){x=x<y?x:y;}\n\ninline int calc(int x,int y){return (x-1)*n+y;}\nvoid init(){\n\tfor(int i=1;i<=n*n;i++)fa[i]=i,size[i]=1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tmaxx[calc(i,j)]=minx[calc(i,j)]=i,miny[calc(i,j)]=maxy[calc(i,j)]=j;\n}\ninline int get(int x){\n\tif(fa[x]==x)return x;\n\treturn fa[x]=get(fa[x]);\n}\nvoid merge(int x,int y){\n\tx=get(x);y=get(y);\n\tif(x==y)return;\n\tfa[x]=y;size[y]+=size[x];\n\tchkmax(maxx[y],maxx[x]);chkmax(maxy[y],maxy[x]);\n\tchkmin(minx[y],minx[x]);chkmin(miny[y],miny[x]);\n}\n\nint main(){\n\tcin>>n>>k;init();\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\" %s\",s[i]+1);\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tcnt[i][j]=cnt[i-1][j]+cnt[i][j-1]-cnt[i-1][j-1]+(s[i][j]=='.');\n\t\t\tif(s[i][j]=='.')\n\t\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\t\tif(s[i+dx[k]][j+dy[k]]=='.')merge(calc(i,j),calc(i+dx[k],j+dy[k]));\n\t\t}\n\t\t\t\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(s[i][j]=='.'&&get(calc(i,j))==calc(i,j))\n\t\t\t\tif(maxx[calc(i,j)]-minx[calc(i,j)]<k&&maxy[calc(i,j)]-miny[calc(i,j)]<k){\n\t\t\t\t\tsum[max(maxx[calc(i,j)]-k+1,1)][max(maxy[calc(i,j)]-k+1,1)]+=size[calc(i,j)];\n\t\t\t\t\tsum[minx[calc(i,j)]+1][max(maxy[calc(i,j)]-k+1,1)]-=size[calc(i,j)];\n\t\t\t\t\tsum[max(maxx[calc(i,j)]-k+1,1)][miny[calc(i,j)]+1]-=size[calc(i,j)];\n\t\t\t\t\tsum[minx[calc(i,j)]+1][miny[calc(i,j)]+1]+=size[calc(i,j)];\n\t\t\t\t}\n\tfor(int x=1;x+k<=n+1;x++)\n\t\tfor(int y=1;y+k<=n+1;y++){\n\t\t\tsum[x][y]+=sum[x-1][y]+sum[x][y-1]-sum[x-1][y-1];\n\t\t\tint res=k*k-cnt[x+k-1][y+k-1]-cnt[x-1][y-1]+cnt[x+k-1][y-1]+cnt[x-1][y+k-1]+sum[x][y];\n\t\t\tif(x>1)\n\t\t\t\tfor(int i=y;i<y+k;i++)\n\t\t\t\t\tif(s[x-1][i]=='.'&&!vis[get(calc(x-1,i))])\n\t\t\t\t\t\tvis[get(calc(x-1,i))]=1,res+=size[get(calc(x-1,i))];\n\t\t\tif(x+k<=n)\n\t\t\t\tfor(int i=y;i<y+k;i++)\n\t\t\t\t\tif(s[x+k][i]=='.'&&!vis[get(calc(x+k,i))])\n\t\t\t\t\t\tvis[get(calc(x+k,i))]=1,res+=size[get(calc(x+k,i))];\n\t\t\tif(y>1)\n\t\t\t\tfor(int i=x;i<x+k;i++)\n\t\t\t\t\tif(s[i][y-1]=='.'&&!vis[get(calc(i,y-1))])\n\t\t\t\t\t\tvis[get(calc(i,y-1))]=1,res+=size[get(calc(i,y-1))];\n\t\t\tif(y+k<=n)\n\t\t\t\tfor(int i=x;i<x+k;i++)\n\t\t\t\t\tif(s[i][y+k]=='.'&&!vis[get(calc(i,y+k))])\n\t\t\t\t\t\tvis[get(calc(i,y+k))]=1,res+=size[get(calc(i,y+k))];\n\t\t\tans=max(ans,res);\n\t\t\tif(x>1)\n\t\t\t\tfor(int i=y;i<y+k;i++)\n\t\t\t\t\tif(s[x-1][i]=='.')vis[get(calc(x-1,i))]=0;\n\t\t\tif(x+k<=n)\n\t\t\t\tfor(int i=y;i<y+k;i++)\n\t\t\t\t\tif(s[x+k][i]=='.')vis[get(calc(x+k,i))]=0;\n\t\t\tif(y>1)\n\t\t\t\tfor(int i=x;i<x+k;i++)\n\t\t\t\t\tif(s[i][y-1]=='.')vis[get(calc(i,y-1))]=0;\n\t\t\tif(y+k<=n)\n\t\t\t\tfor(int i=x;i<x+k;i++)\n\t\t\t\t\tif(s[i][y+k]=='.')vis[get(calc(i,y+k))]=0;\n\t\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n*/\n```",
        "postTime": 1655127007,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF679C"
    },
    {
        "content": "\u6587\u7ae0\u7ffb\u8bd1\uff08\u7531\u4e8e\u6211\u88ab\u7981\u8a00\uff0c\u53ea\u80fd\u5728\u6b64\u7ffb\u8bd1 \u6b64\u7ffb\u8bd1\u7531\u6211\u7684\u6559\u7ec3\u7ffb\u8bd1\uff0c\u8bf7\u4e0d\u8981\u5bf9\u6211\u52a0\u8d21\u732e\uff09\n\n\u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2an\u884cn\u5217\u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u683c\u5b50\u91cc\u662f\u7a7a\u7684\u6216\u8005\u662f\u5c01\u95ed\u7684\u3002\u5f53\u76f8\u90bb\u7684\u683c\u5b50\u90fd\u662f\u7a7a\u7684\uff0c\u8fd9\u4e24\u4e2a\u683c\u5b50\u5c31\u662f\u8054\u901a\u7684\uff0c\u591a\u4e2a\u8fde\u901a\u683c\u5b50\u7ec4\u6210\u4e00\u4e2a\u8fde\u901a\u5feb\u3002\n\n\u73b0\u5728\u4f60\u6709\u4e00\u4e2ak\u00d7k\u7684\u6846\uff0c\u4f7f\u7528\u8fd9\u4e2a\u6846\u53ef\u4ee5\u5c06\u5305\u542b\u7684\u5c01\u95ed\u683c\u5b50\u53d8\u6210\u662f\u7a7a\u7684\u3002\u4f7f\u7528\u6846\u7684\u65f6\u5019\uff0c\u6574\u4e2a\u6846\u5fc5\u987b\u5168\u90e8\u5728\u77e9\u9635\u5185\u3002\n\n\u8bf7\u95ee\u8fd9\u4e2a\u77e9\u9635\u7684\u6700\u5927\u8fde\u901a\u5757\u5305\u542b\u7684\u683c\u5b50\u7684\u6570\u91cf\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f:\n\n\u8f93\u5165\u683c\u5f0f:\n\n\u7b2c\u4e00\u884c\uff0c\u4e24\u4e2a\u6574\u6570n\u548ck\u3002(1\u2264k\u2264n\u2264500)\n\n\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u5305\u542bn\u4e2a\u5b57\u7b26'.' \u6216\u8005 'X'\uff0c\u5176\u4e2d'.'\u8868\u793a\u8be5\u683c\u5b50\u662f\u7a7a\u7684\uff0c'X'\u8868\u793a\u8be5\u683c\u5b50\u662f\u5c01\u95ed\u7684\u3002\n\n\u8f93\u51fa\u683c\u5f0f:\n\n\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u8fde\u901a\u5757\u5305\u542b\u7684\u683c\u5b50\u7684\u6570\u91cf\u3002\n\n\u8f93\u5165\u6837\u4f8b#1\uff1a \n```pascal\n5 2\n..XXX\nXX.XX\nX.XXX\nX...X\nXXXX.\n```\n\n\u8f93\u51fa\u6837\u4f8b#1:\n\n10\n\n\u8f93\u5165\u6837\u4f8b#2:\n\n```pascal\n5 3\n.....\n.XXX.\n.XXX.\n.XXX.\n.....\n```\n\n\u8f93\u51fa\u6837\u4f8b#2\uff1a \n\n25\n\n\n\u63d0\u793a\uff1a\n\n\u6837\u4f8b1\u89e3\u91ca\u5982\u56fe\uff1a\n![](http://www.syoj.top/assets/images/problems/syoj1963.png)\n\n--------------------------------------------------\n\n\u9898\u89e3\u6b63\u6587\uff1a\n\n\u641c\u7d22DFS+\u8054\u901a\u5feb\n\n\u5148\u7b97\u51fa\u539f\u59cb\u56fe\u8054\u901a\u5feb\u7684\u6570\u91cf\uff0c\u518d\u7a77\u4e3e\u6846\u7684\u4f4d\u7f6e\uff0c\n\n### \u4f18\u5316\u79fb\u52a8\u6846\u65f6\u5220\u6389\u6700\u5de6\u8fb9\u7684\u4e00\u5217\uff0c\u52a0\u4e0a\u6700\u53f3\u8fb9\u7684\u4e00\u5217\u5c31\u662f\u8981\u6c42\u7684\u6570\u91cf,O(n^4)\u53d8\u6210O(n^3);\n\n\u9884\u5904\u7406\uff1a\n\n1.\u77e9\u9635\u524d\u7f00\u548c\uff08sum\uff09\n\n2.\u539f\u59cb\u56fe\u4e2d\u7684\u8054\u901a\u5757\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<string> \n#define ll long long\nusing namespace std;\n\nll n,k,ans,all,cnt,tmp;\nchar a[505][505];\nll f[505][505],colour[250050],sum[505][505],vi[250050];\n\nvoid dfs(ll x,ll y){//dfs\u6c42\u8054\u901a\u5757\n    tmp++;//\u6570\u91cf\u589e\u52a0\n    f[x][y]=cnt;\n    //\u56db\u4e2a\u65b9\u5411\u7684\u9012\u5f52\n    if(a[x-1][y]=='.'&&!f[x-1][y]) dfs(x-1,y);\n    if(a[x+1][y]=='.'&&!f[x+1][y]) dfs(x+1,y);\n    if(a[x][y-1]=='.'&&!f[x][y-1]) dfs(x,y-1);\n    if(a[x][y+1]=='.'&&!f[x][y+1]) dfs(x,y+1);\n}\n\ninline void Delete(ll x,ll y){//\u5220\u9664\u70b9\n    if(!f[x][y]) return;\n    ll t=f[x][y];\n    --vi[t];\n    if(!vi[t]) all-=colour[t];\n}\n\ninline void insert(ll x,ll y){//\u52a0\u5165\u70b9\n    if(!f[x][y]) return;\n    ll t=f[x][y];\n    if(!vi[t]) all+=colour[t];\n    vi[t]++;\n}\n\ninline ll calc(ll x,ll y){//\u533a\u95f4\u5185\u70b9'.'\u7684\u6570\u91cf\n    return sum[x+k-1][y+k-1]-sum[x+k-1][y-1]-sum[x-1][y+k-1]+sum[x-1][y-1];\n}\n\nint main(){\n    ll i,j;\n    cin>>n>>k;\n    for(i=1; i<=n; ++i){\n        scanf(\"%s\",a[i]+1);//\u5b57\u7b26\u6570\u7ec4\u53ef\u4ee5\u5f53\u5b57\u7b26\u4e32\u4f7f\u7528\n        for(j=1; j<=n; ++j){\n            sum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1];\n            if(a[i][j]=='.') sum[i][j]++;\n        } \n    }\n    \n    for(i=1; i<=n; ++i){\n\t    for(j=1; j<=n; ++j){\n\t\t\tif(a[i][j]=='.'&&!f[i][j]){\n            //\u8fc7a[i][j]\u7684\u8054\u901a\u5757\u6570\u91cf\n\t\t    \tcnt++;\n\t\t\t    tmp=0;\n\t\t\t    dfs(i,j);\n\t\t\t    colour[cnt]=tmp;\n\t\t\t} \n\t\t} \n\t}\n\t\n    for(i=1; i<=n-k+1; ++i){\n        all=0;\n\t\tmemset(vi,0,sizeof(vi));\n        for(j=i-1; j<=k+i; ++j){\n            for(ll l=1; l<=k; ++l)\n                insert(j,l);//\u52a0\u70b9\n        }\n        \n        for(j=i; j<i+k; ++j) insert(j,k+1);//\u52a0\u70b9\n        ans=max(ans,all+k*k-calc(i,1));\n        for(j=2; j<=n-k+1; ++j){\n            for(ll l=i;l<i+k;++l){\n                Delete(l,j-2);//\u5220\u70b9\n                insert(l,j+k);//\u52a0\u70b9\n            }\n            Delete(i-1,j-1);//\u5220\u70b9\n\t\t\tDelete(i+k,j-1);//\u5220\u70b9\n            insert(i-1,j+k-1);//\u52a0\u70b9\n\t\t\tinsert(i+k,j+k-1);//\u52a0\u70b9\n            ans=max(ans,all+k*k-calc(i,j));//ans\u53d6\u8f83\u5927\u503c\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1531378610,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF679C \u3010Bear and Square Grid\u3011"
    }
]