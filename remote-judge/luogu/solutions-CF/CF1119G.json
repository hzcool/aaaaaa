[
    {
        "content": "**Description**\n\n\u7ed9\u5b9a $n, m$ \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u5e8f\u5217 $a$\u3002\u4f60\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u975e\u8d1f\u6574\u6570\u5e8f\u5217 $s$\uff0c\u6ee1\u8db3 $\\sum_{i = 1} ^ m s_i = n$\u3002\u5b9a\u4e49\u4e00\u6b21\u64cd\u4f5c\u4e3a\u6307\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u5e8f\u5217 $p$ \u6ee1\u8db3 $p_i \\in [1, m]$\uff0c\u7136\u540e\u5bf9\u4e8e $i \\in [1, m]$ \u4ee4 $a_{p_i} \\leftarrow a_{p_i} - s_i$\u3002\u6c42\u6240\u6709\u53ef\u80fd\u60c5\u51b5\u4e2d\u4f7f\u5f97\u6700\u540e $a_i \\le 0$ \u6240\u9700\u8981\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u53ca\u5176\u5bf9\u5e94\u7684\u65b9\u6848\u3002\n\n$m \\le n \\le 10^6, \\sum a_i \\le 10^6$\u3002\n\n**Solution**\n\n\u9996\u5148\u7b54\u6848\u7684\u4e0b\u754c\u662f $\\left\\lceil \\frac{\\sum_i a_i}{n} \\right\\rceil$\uff0c\u6211\u4eec\u8003\u8651\u80fd\u5426\u8fbe\u5230\u8fd9\u4e2a\u4e0b\u754c\u3002\u4e00\u4e2a\u60f3\u6cd5\u662f\u5927\u81f4\u6309\u7167 $a$ \u7684\u6bd4\u4f8b\u5206\u914d\uff0c\u4f46\u662f\u5269\u4f59\u7684\u4e0d\u597d\u5904\u7406\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u4e3b\u8981\u5728\u4e00\u6216\u4e24\u4e2a\u6570\u4e0a\u96c6\u4e2d\u706b\u529b\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u6700\u591a\u80fd\u591f\u8ba9\u4e00\u4e2a\u6570\u51cf\u5c11 $n$\uff0c\u4e3a\u4e86\u4e0d\u9020\u6210\u6d6a\u8d39\uff0c\u6211\u4eec\u5c1d\u8bd5\u4fdd\u8bc1\u5bf9\u4e8e $i < m$ \u5728\u653e\u5b8c\u67d0\u4e9b\u4eba\uff08\u4e0d\u4e00\u5b9a\u662f $m$ \u7684\u500d\u6570\u4e4b\u540e\uff09\u4e4b\u540e\u7b2c $i$ \u4e2a\u6570\u6070\u597d\u4e3a $0$\u3002\u8bbe $sum_i = \\sum_{j = 1} ^ i a_j$\uff0c\u4e0d\u59a8\u94a6\u5b9a\u6bcf\u6b21\u90fd\u662f\u6309\u4ece $1$ \u5230 $m$ \u7684\u987a\u5e8f\u653e\uff0c\u8fd9\u7b49\u4ef7\u4e8e $s$ \u5b58\u5728\u4e00\u4e2a\u524d\u7f00\u548c\u4e3a $sum_i$ \u6a21 $n$\u3002\u5bf9\u4e8e $i = m$\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u540e\u4e00\u4e2a\uff0c\u6240\u4ee5\u96be\u514d\u6709\u5269\u4f59\uff0c\u6240\u4ee5 $sum_m$ \u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u53c8\u56e0\u4e3a\u8981\u4fdd\u8bc1 $\\sum_i s_i = n$\uff0c\u4e0d\u59a8\u8bbe $sum_m = n$\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ee4 $sum_m = n$ \u4e4b\u540e\u628a\u6240\u6709\u7684 $sum_i(i < m)$ \u5bf9 $n$ \u53d6\u6a21\u7684\u7ed3\u679c\u6392\u5e8f\uff0c\u7ed3\u679c\u8bbe\u4e3a $r$\uff0c\u7136\u540e\u4ee4 $s_i = r_i - r_{i - 1}(i \\le m)$ \u5373\u53ef\u3002\n\n\u8fd9\u6837\u6211\u4eec\u8f93\u51fa\u65b9\u6848\u53ea\u9700\u8981\u65e0\u8111\u653e\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define il inline\n#define re register\n#define rep(i, s, e) for (re int i = s; i <= e; ++i)\n#define drep(i, s, e) for (re int i = s; i >= e; --i)\n#define file(a) freopen(#a\".in\", \"r\", stdin), freopen(#a\".out\", \"w\", stdout)\n\nconst int N = 1000000 + 10;\n\nil int read() {\n    int x = 0; bool f = true; char c = getchar();\n    while (!isdigit(c)) {if (c == '-') f = false; c = getchar();}\n    while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n    return f ? x : -x;\n}\n\nint n, m, a[N], r[N], sum, s[N], pos = 1;\n\nint main() {\n    n = read(), m = read();\n    rep(i, 1, m) a[i] = read(), sum += a[i], r[i] = sum % n;\n    r[m] = n, sort(r + 1, r + m + 1);\n    rep(i, 1, m) s[i] = r[i] - r[i - 1];\n    printf(\"%d\\n\", (sum + n - 1) / n);\n    rep(i, 1, m) printf(\"%d \", s[i]);\n    puts(\"\");\n    rep(i, 1, m) while (a[i] > 0) a[i] -= s[pos], printf(\"%d%c\", i, \" \\n\"[pos == m]), pos = pos % m + 1;\n    if (pos > 1) while (pos <= m) printf(\"%d%c\", m, \" \\n\"[pos == m]), ++pos;\n    return 0;\n}\n```",
        "postTime": 1624923695,
        "uid": 126582,
        "name": "Scintilla",
        "ccfLevel": 9,
        "title": "CF1119G Get Ready for the Battle"
    },
    {
        "content": "\u642c\u8fd0\u4e00\u4e0b[CF\u5b98\u65b9\u9898\u89e3](https://codeforces.com/blog/entry/66411)\n\n\u6700\u597d\u7684\u60c5\u51b5\u662f\u9664\u6700\u540e\u4e00\u6b21\u5916\u90fd\u4e0d\u6d6a\u8d39\u58eb\u5175\uff0c\u56e0\u6b64\u6b21\u6570\u4e3a$\\lceil \\frac{\\sum\\nolimits_{i=1}^n{hp}_{i}}{n} \\rceil$\n\n\u8003\u8651\u6784\u9020\u3002\u9996\u5148\u4e00\u5f00\u59cb\u8ba9\u6240\u6709\u4eba\u6253\u7b2c\u4e00\u4e2a\u654c\u4eba\uff0c\u53ea\u8981\u4ed6\u7684\u8840\u91cf$<n$\u4e86\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e9b\u5175\u56e2\u7684\u58eb\u5175\u6570\u91cf\u603b\u548c\u521a\u597d\u4e3a\u654c\u4eba\u5269\u4f59\u8840\u91cf$k_1$,\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9\u8fd9\u4e9b\u58eb\u5175\u53bb\u6253\u654c\u4eba1\uff0c\u5176\u4f59\u4eba\u5728\u540c\u4e00\u56de\u5408\u5185\u53bb\u6253\u654c\u4eba2.\u7136\u540e\u6240\u6709\u4eba\u518d\u53bb\u6253\u654c\u4eba2. \u5f53\u654c\u4eba2\u8840\u91cf$<n$\u65f6\uff0c\u5047\u8bbe\u6211\u4eec\u53c8\u6709\u4e00\u4e9b\u5175\u56e2\u7684\u58eb\u5175\u6570\u91cf\u603b\u548c\u521a\u597d\u4e3a\u654c\u4eba\u5269\u4f59\u8840\u91cf$k_2$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9\u8fd9\u4e9b\u58eb\u5175\u53bb\u6253\u654c\u4eba2\uff0c\u5176\u4f59\u4eba\u5728\u540c\u4e00\u56de\u5408\u53bb\u6253\u654c\u4eba3......\n\n\u91cd\u590d\u6b64\u6b65\u9aa4\u76f4\u5230\u5f04\u6b7b\u654c\u4eba\u4e3a\u6b62\u3002\u53ea\u5269\u6700\u540e\u4e00\u4e2a\u654c\u4eba\u65f6\u53ef\u4ee5\u8ba9\u6240\u6709\u4eba\u90fd\u53bb\u6253\u4ed6\u3002\u8fd9\u6837\u6211\u4eec\u7684\u56de\u5408\u6570\u5c31\u662f$\\lceil \\frac{\\sum\\nolimits_{i=1}^n{hp}_{i}}{n} \\rceil$\n\n\u5bf9\u4e8e$k_1 ... k_n$,\u4f7f\u7528\u5dee\u5206\u6784\u9020\u3002\u5c06$k$\u6392\u5e8f\u540e\uff0c\u4ee4\u7b2c$1$\u7ec4\u7684\u58eb\u5175\u6570\u91cf\u4e3a$k_1$,\u7b2c$i$\u7ec4$(i\\neq1)$\u58eb\u5175\u6570\u91cf\u4e3a$k_i-k_{i-1}$\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,hp[1000005],num[1000005];\nint main ()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i = 1;i <= m;i++)\n\t\tscanf(\"%d\",&hp[i]);\n\tvector<int> last = {0,n};\n\tint sum = 0;\n\tfor (int i = 1;i < m;i++)\n\t{\n\t\tsum += hp[i];\n\t\tlast.push_back(sum % n);\n\t}\n\tsort(last.begin(),last.end());\n\tvector<int> sizes;\n\tfor (int i = 1;i < last.size();i++)\n\t\tsizes.push_back(last[i] - last[i - 1]);\n\tprintf(\"%d\\n\",(sum + hp[m] + n - 1) / n);\n\tfor (int i = 0;i < sizes.size();i++) printf(\"%d \",sizes[i]);\n\tputs(\"\");\n\tint ptr = 0;\n\tfor (int i = 1;i <= m;i++)\n\t{\n\t\twhile (hp[i] > 0)\n\t\t{\n\t\t\thp[i] -= sizes[ptr++];\n\t\t\tprintf(\"%d \",i);\n\t\t\tif (ptr == m)\n\t\t\t{\n\t\t\t\tptr = 0;puts(\"\");\n\t\t\t}\n\t\t}\n\t}\n\twhile (ptr && ptr++ != m) printf(\"%d \",m);\n\treturn 0;\n} \n```\n\n\u5bf9\u7740Rank2\u7684\u4ee3\u7801\u5199\u7684",
        "postTime": 1559353572,
        "uid": 92602,
        "name": "SIGSEGV",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1119G \u3010Get Ready for the Battle\u3011"
    }
]