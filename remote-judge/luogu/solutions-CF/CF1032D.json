[
    {
        "content": "\u7b97\u662f\u81ea\u5df1\u5207\u7684\u7b2c\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u4e86\uff0c\u5199\u7bc7\u9898\u89e3\u8bb0\u5f55\u4e00\u4e0b\u3002\n\n### Solution\n\n\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c $(x_1,y_1)$ \u5230 $(x_2,y_2)$ \u662f\u7ecf\u8fc7 $ax+by+c=0$ \u7684\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u4ece $x=x_1$ \u6216 $y=y_1$ \u5230 $x=x_2$ \u6216 $y=y_2$ \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u56db\u79cd\u8def\u5f84\u548c\u4e0d\u7ecf\u8fc7 $ax+by+c=0$ \u7684\u8def\u5f84\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u7136\u540e\u53ef\u4ee5\u7528\u521d\u4e2d\u5b66\u8fc7\u7684\u65b9\u6cd5\u6c42\u51fa $ax+by+c=0$ \u548c\u90a3\u56db\u6761\u76f4\u7ebf\u7684\u4ea4\u70b9\uff1a $(x_3,y_3)=(x_1,\\frac {-a\\times x_1-c}b),(x_4,y_4)=(\\frac {-b\\times y_1-c}a,y_1),(x_5,y_5)=(x_2,\\frac {-a\\times x_2-c}b),(x_6,y_6)=(\\frac {-b\\times y_2-c}a,y_2)$ \n\n\u7136\u540e\u518d\u7528\u521d\u4e2d\u5b66\u8fc7\u7684\u52fe\u80a1\u5b9a\u7406\u7b97\u51fa\u8def\u5f84\u957f\n\n\u7136\u540e\u7b97\u5c31\u5b8c\u4e86\uff01~~\u5965\u529b\u7ed9~~\n\n\u5c0f\u7ec6\u8282\uff1a\u8bb0\u5f97\u7528 $fabs$ \uff0c\u4e0d\u7136\u6837\u4f8b\u90fd\u8fc7\u4e0d\u53bb\u3002\n\n### \u4ee3\u7801\n\n```c++\n#include<cmath>\n#include<cstdio>\n#include<iomanip>\n#include<cstring>\n#include<iostream>\n\nusing namespace std;\ndouble a,b,c,x[10],y[10],ans;\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>a>>b>>c>>x[1]>>y[1]>>x[2]>>y[2];\n    ans=fabs(x[1]-x[2])+fabs(y[1]-y[2]);\n    x[3]=x[1];\n    y[3]=(-a*x[1]-c)/b;\n    x[4]=(-b*y[1]-c)/a;\n    y[4]=y[1];\n    x[5]=x[2];\n    y[5]=(-a*x[2]-c)/b;\n    x[6]=(-b*y[2]-c)/a;\n    y[6]=y[2];\n    for(int i=3;i<=4;i++)\n        for(int j=5;j<=6;j++){\n            ans=min(ans,fabs(x[1]-x[i])+fabs(y[1]-y[i])+\n                    sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]))+\n                    fabs(x[2]-x[j])+fabs(y[2]-y[j]));\n        }\n    cout<<setprecision(12)<<ans<<endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1602572235,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "CF1032D Barcelonian Distance"
    },
    {
        "content": "## Solution 1\n\n\u8fd9\u662f\u4e00\u9053\u66b4\u529b\u5206\u8ba8\u9898\u3002\u4f46\u662f\u73b0\u6709\u9898\u89e3\u90fd\u6ca1\u6709\u6bd4\u8f83\u8be6\u7ec6\u7684\u8bb2\u5b9e\u73b0\u3002\n\n\u4e0d\u59a8\u4ee4 $A$ \u5728 $B$ \u5de6\u3002\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019 $A$ \u5728 $B$ \u4e0a\u8fd8\u662f\u4e0b\u4ecd\u7136\u4e0d\u77e5\u9053\u3002\u6211\u7684\u5b9e\u73b0\u662f\uff0c\u5982\u679c $B$ \u5728 $A$ \u4e0a\uff0c\u4f60\u53ef\u4ee5\u628a\u6574\u4e2a\u56fe\u5173\u4e8e $y=y_A$ \u5bf9\u79f0\u4e00\u4e0b\uff0c\u7136\u540e $B$ \u5c31\u5728 $A$ \u4e0b\u9762\u4e86\u3002\u6ce8\u610f\u5230\u8fd9\u6761\u76f4\u7ebf\u4e5f\u8981\u53d8\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gbx0l757.png)\n\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u753b\u51fa\u8fd9\u4e9b\u60c5\u51b5\uff1a\u5982\u679c $a=0$ \u6216\u8005 $b=0$\uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u8fd8\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\uff08\u5982\u5de6\u4e0b\u4e24\u5f20\u56fe\uff09\u3002\u5982\u679c\u659c\u7387 $k>0$\uff0c\u7b54\u6848\u4e5f\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u56e0\u4e3a\u8fd9\u6761\u76f4\u7ebf\u65b9\u5411\u90fd\u662f\u53cd\u7684\u6211\u4eec\u4e0d\u4f1a\u7528\u5230\u3002\n\n\u6211\u7684\u5b9e\u73b0\u6ca1\u6709\u7279\u5224\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u60c5\u51b5\u7b97\u51fa\u6765\u7684\u4e00\u5b9a\u5927\u4e8e\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u6240\u4ee5\u53d6\u4e2a $\\min$ \u5c31\u597d\u4e86\u3002\n\n\u7b2c\u4e00\u6392\u4e09\u79cd\u60c5\u51b5\u53ea\u9700\u8981\u7528\u52fe\u80a1\u5b9a\u7406\u7b97\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u9898\u6709\u7684\u70b9\u8fd8\u662f\u6709\u70b9\u5361\u7cbe\u5ea6\u7684\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\u5efa\u8bae\uff1a\n\n- `double` \u53d8\u6210 `long double`\u3002\n- \u8fd9\u4e2a\u9898\u7528\u9664\u6cd5\u5c31\u884c\u4e86\uff0c\u7528\u4e58\u6cd5\u53cd\u800c\u4f1a\u6389\u7cbe\u5ea6\u3002\n\n### Implementation\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define double long double\nusing namespace std;\nstruct line { double a, b, c; };\nstruct point { double x, y; }; point A, B;\ndouble solvex(line l, double y) { return -(l.b * y / l.a + l.c / l.a); }\ndouble solvey(line l, double x) { return -(l.a * x / l.b + l.c / l.b); }//\u8ba1\u7b97\u4ea4\u70b9\ndouble manhattan(point A, point B) { return fabs(A.x - B.x) + fabs(A.y - B.y); }\ndouble sq(double x) { return x * x; }\ndouble dist(point A, point B) { return sqrtl(sq(A.x - B.x) + sq(A.y - B.y)); }\nint printt(double x) { cout << fixed << setprecision(10) << min(x, manhattan(A, B)) << endl; return 0; } //\u53d6 min \u5b9e\u73b0\nint solve() {\n    line l; cin >> l.a >> l.b >> l.c;\n    cin >> A.x >> A.y >> B.x >> B.y;\n    if(l.a == 0 || l.b == 0) return printt(manhattan(A, B));\n    if(A.x > B.x) swap(A, B);\n    if(A.y < B.y) {\n        B.y = 2 * A.y - B.y;\n        l.c = l.c + 2 * A.y * l.b;\n        l.b *= -1;\n        //\u5bf9\u79f0\u5b9e\u73b0\n    }\n    if(A.x == B.x || A.y == B.y) {return printt(manhattan(A, B));}\n    double dx = solvex(l, A.y), dy = solvey(l, A.x);\n    if(dx >= A.x) {\n        double res = 0, ddy = solvey(l, B.x);\n        res += dx - A.x;\n        if(ddy <= B.y) {\n            double ddx = solvex(l, B.y);\n            res += B.x - ddx;\n            res += dist({dx, A.y}, {ddx, B.y});\n            return printt(res);\n        }\n        res += ddy - B.y;\n        res += dist({dx, A.y}, {B.x, ddy});\n        return printt(res);\n    } else {\n        double res = 0, ddx = solvex(l, B.y);\n        res += A.y - dy;\n        if(ddx >= B.x) {\n            double ddy = solvey(l, B.x);\n            res += ddy - B.y;\n            res += dist({A.x, dy}, {B.x, ddy});\n            return printt(res);\n        }\n        res += fabs(ddx - B.x);\n        res += dist({A.x, dy}, {ddx, B.y});\n        return printt(res);\n    }\n    return 0;\n}\nsigned main() { solve(); system(\"pause\"); return 0; }\n// Sample 11:\n// -89307 44256 -726011368\n// -1 16403 -8128 3\n```\n\n### Solution 2\n\n\u66b4\u529b\u628a $6$ \u4e2a\u70b9\u8dd1\u51fa\u6765\u4e4b\u540e\u8fde\u8fb9\u6700\u77ed\u8def\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u9898\u89e3\u533a\u5df2\u7ecf\u6709\u8fd9\u79cd\u505a\u6cd5\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8bb2\u3002",
        "postTime": 1680314486,
        "uid": 482112,
        "name": "Black_destiny",
        "ccfLevel": 5,
        "title": "CF1032D Barcelonian Distance"
    },
    {
        "content": "### \u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u8ba1\u7b97\u66fc\u54c8\u987f\u8ddd\u79bb\n~~\u4e5f\u53ef\u4ee5\u5f53\u4f5c\u7eaf\u66b4\u529b\u6570\u5b66\u8ba1\u7b97~~\n\n\u76f4\u63a5\u4ea4\u4ee3\u7801\uff0c\u5e76\u4e0d\u6253\u7b97\u89e3\u91ca\uff08\u5199\u51fa\u6765\u6d88\u8017\u4e86\u6211\u4e00\u5e74\u7684\u8111\u7ec6\u80de\uff09\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ndouble dis(double a,double b,double c,double d)\n{\n    return sqrt((a-c)*(a-c)+(b-d)*(b-d));\n}\nint main()\n{\n    ll a,b,c,x_1,y_1,x_2,y_2;\n    scanf(\"%lld%lld%lld\",&a,&b,&c);\n    scanf(\"%lld%lld%lld%lld\",&x_1,&y_1,&x_2,&y_2);\n    double ans,ans1,xx1,yy1,xx2,yy2;//\u66fc\u54c8\u987f\u8ddd\u79bb\n    ans=1.0*(abs(x_2-x_1)+abs(y_2-y_1));\n    //x 1 y 1\n    ans1=0;\n    xx1=1.0*x_1;\n    yy1=-1.0*(1.0*a*x_1+c)*(1.0/b);\n    xx2=1.0*x_2;\n    yy2=-1.0*(1.0*a*x_2+c)*(1.0/b);\n    ans1+=fabs(yy1-y_1)+fabs(yy2-y_2);//fabs--\u5c0f\u6570\u7684\u7edd\u5bf9\u503c \n    ans1+=dis(xx1,yy1,xx2,yy2);\n    ans=min(ans,ans1);\n    //x 1 y 0\n    ans1=0;\n    xx1=1.0*x_1;\n    yy1=-1.0*(1.0*a*x_1+c)*(1.0/b);\n    xx2=-1.0*(1.0*b*y_2+c)*(1.0/a);\n    yy2=1.0*y_2;\n    ans1+=fabs(yy1-y_1)+fabs(xx2-x_2);\n    ans1+=dis(xx1,yy1,xx2,yy2);\n    ans=min(ans,ans1);\n    //x 0 y 0\n    ans1=0;\n    xx1=-1.0*(1.0*b*y_1+c)*(1.0/a);\n    yy1=1.0*y_1;\n    xx2=-1.0*(1.0*b*y_2+c)*(1.0/a);\n    yy2=1.0*y_2;\n    ans1+=fabs(xx1-x_1)+fabs(xx2-x_2);\n    ans1+=dis(xx1,yy1,xx2,yy2);\n    ans=min(ans,ans1);\n    //x 0 y 1\n    ans1=0;\n    xx1=-1.0*(1.0*b*y_1+c)*(1.0/a);\n    yy1=1.0*y_1;\n    xx2=1.0*x_2;\n    yy2=-1.0*(1.0*a*x_2+c)*(1.0/b);\n    ans1+=fabs(xx1-x_1)+fabs(yy2-y_2);\n    ans1+=dis(xx1,yy1,xx2,yy2);\n    ans=min(ans,ans1);\n    printf(\"%.10f\\n\",ans);//\u8fd0\u7b974\u6b21\uff0c\u8f93\u51fa\u7ed3\u679c \n    return 0;//\u5b8c\u7ed3\u6492\u82b1 \n}\n```",
        "postTime": 1544617860,
        "uid": 118376,
        "name": "WLR__jr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1032D \u3010Barcelonian Distance\u3011"
    }
]