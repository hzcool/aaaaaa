[
    {
        "content": "> ### Description\n>\n> \u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u4e00\u5f00\u59cb\u4f60\u5728\u70b9 $1$\uff0c\u4e14\u4ef7\u503c\u4e3a $0$\n>\n> \u6bcf\u6b21\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u7136\u540e\u8d70\u8fc7\u53bb\uff0c\u5e76\u5c06\u4ef7\u503c\u5f02\u6216\u4e0a\u8be5\u8fb9\u6743\n>\n> \u5982\u679c\u5728\u70b9 $n$\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u7ed3\u675f\u6e38\u620f\n>\n> \u6c42\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u7ed3\u675f\u6e38\u620f\u540e\u4ef7\u503c\u6700\u5c0f\n>\n> $n,m \\le 10^5$\n>\n> ### Input\n>\n> \u7b2c\u4e00\u884c\u4e3a\u4e24\u4e2a\u6574\u6570$n,m$\u4ee3\u8868\u6709$n$\u4e2a\u70b9$m$\u6761\u8fb9\u3002\n>\n> \u63a5\u4e0b\u6765$m$\u884c,\u63cf\u8ff0\u4e00\u6761\u4ece$x$\u5230$y$\u957f\u5ea6\u4e3a$z$\u7684\u65e0\u5411\u8fb9\u3002\n>\n> ### Output\n>\n> \u4e00\u4e2a\u6574\u6570,\u4ee3\u8868\u6700\u5c0f\u4ef7\u503c\u3002\n\n\u9996\u5148,\u5f88\u660e\u786e\u7684\u4e00\u70b9,\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6c42\u51fa\u5f88\u591a\u6761\u8fb9\u7684\u6700\u5c0f\u5f02\u6216\u548c\u3002\n\n\u7531\u6b64,\u6211\u4eec\u53ef\u4ee5\u60f3\u5230**\u7ebf\u6027\u57fa**\n\n\u7531\u4e8e\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\u4e00\u4e9b\u8fb9,\u90a3\u4e48\u6839\u636e\u5f02\u6216\u6027\u8d28,\u5f53\u8fd9\u6761\u8fb9\u88ab\u91cd\u590d\u8d70\u8fc7\u4e24\u6b21,\u90a3\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f$0$\u3002\u4f46\u662f\u5373\u4f7f\u8fd9\u6837,\u5b83\u8fd8\u53ef\u80fd\u8fde\u5411\u5176\u4ed6\u7684\u70b9\u3002\n\n\u867d\u7136\u6211\u4eec\u6ca1\u529e\u6cd5\u679a\u4e3e\u8fb9,\u4f46\u662f\u53ef\u4ee5\u8003\u8651\u5c06\u8fd9\u4e9b\u8fb9\u6240\u5728\u5206\u4e3a\u4e24\u79cd\u3002\n\n1. \u73af\u4e0a\u7684\u8fb9\n2. \u94fe\u4e0a\u7684\u8fb9\n\n\u4f46\u662f\u6211\u4eec**\u901a\u5411\u4e00\u4e2a\u73af\u7684\u65f6\u5019\u4f1a\u7ecf\u8fc7\u4e00\u6761\u8fde\u5411\u8fd9\u4e2a\u73af\u7684\u8fb9\u4e24\u6b21**\u3002(\u4e00\u8fdb\u4e00\u51fa)\u3002\n\n\u56e0\u6b64,\u6211\u4eec\u8003\u8651**\u7ef4\u62a4\u6bcf\u4e2a\u73af\u7684\u5f02\u6216\u548c,\u585e\u5165\u7ebf\u6027\u57fa\u4e2d**\u3002\n\n\u518d\u627e\u4e00\u6761\u94fe,\u53bb\u548c\u5176\u5f02\u6216\u8d77\u6765\u6700\u5c0f\u3002\u5373\u53ef\u3002\n\n**\u8fd9\u6761\u94fe\u53ef\u4ee5\u968f\u4fbf\u9009\u62e9**\u3002\n\n\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b;\n\n> \u5047\u8bbe\u5b58\u5728\u4e24\u6761\u94fe$A,B$\uff0c\u6211\u4eec\u73b0\u5728\u9009\u62e9\u4e86\u4e0d\u4f18\u7684$A$\u94fe,\u4f46\u662f\u5728\u6c42\u89e3\u7b54\u6848\u7684\u65f6\u5019(\u5229\u7528\u7ebf\u6027\u57fa)\n>\n> \u6211\u4eec\u4f1a\u5f02\u6216\u5230\u4e00\u4e2a\u73af($A,B$\u94fe\u56f4\u6210\u7684\u73af),\u8fd9\u65f6,\u5c31\u597d\u6bd4\u6211\u4eec\u539f\u8def\u8fd4\u56de,\u53c8\u9009\u62e9\u4e86\u8f83\u4f18\u7684$B$\u94fe\u3002\n\n\u56e0\u6b64,\u8fd9\u4e2a\u9898\u5c31\u89e3\u51b3\u4e86.\n\n``\u4ee3\u7801``\n\n```c++\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#define R register\n#define lo long long \n\nusing namespace std;\n\nconst int gz=1e5+8;\n\ninline void in(R int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n    while(isdigit(s)){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\n\nint head[gz<<1],tot;\n\nstruct cod{int u,v;lo w;}edge[gz<<2];\n\nlo p[64],dis[gz];\n\ninline void add(R int x,R int y,R lo z)\n{\n    edge[++tot].u=head[x];\n    edge[tot].v=y;\n    edge[tot].w=z;\n    head[x]=tot;\n}\n\nint n,m;\n\nbool vis[gz];\n\ninline void ins(R lo x)\n{\n    for(R int i=63;i>=0;i--)\n    {\n        if((x>>i)&1LL)\n        {\n            if(p[i])\n                x^=p[i];\n            else \n            {\n                p[i]=x;\n                break;\n            }\n        }\n    }\n}\n\ninline lo query(R lo o)\n{\n    R lo res=o;\n    for(R int i=63;i>=0;i--)\n        if((res^p[i])<res)res^=p[i];\n    return res;\n}\n\nvoid dfs(R int u,R lo now)\n{\n    vis[u]=true;dis[u]=now;\n    for(R int i=head[u];i;i=edge[i].u)\n    {\n        if(!vis[edge[i].v])\n            dfs(edge[i].v,now^edge[i].w);\n        else ins(now^edge[i].w^dis[edge[i].v]);\n    }\n}\n\nint main()\n{\n    in(n);in(m);\n    for(R int i=1,x,y;i<=m;i++)\n    {\n        R lo z;\n        in(x),in(y);\n        scanf(\"%lld\",&z);\n        add(x,y,z),add(y,x,z);\n    }\n    \n    dfs(1,0);\n    \n    printf(\"%lld\\n\",query(dis[n]));\n}\n```\n\n",
        "postTime": 1541420989,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF845G \u3010Shortest Path Problem?\u3011"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff08\u53ef\u80fd\u6709\u73af\uff09\uff0c\u6c42 $1$ \u5230 $n$ \u5f02\u6216\u548c\u6700\u5c0f\u7684\u4e00\u6761\u8def\u5f84\u3002\n\n### \u601d\u8def\n\u770b\u5230\u6c42\u4e00\u6761\u8def\u5f84\u7684\u5f02\u6216\u503c\uff0c\u60f3\u5230\u7ebf\u6027\u57fa\u3002\n\n\u56e0\u4e3a\u6c42\u7684\u662f\u5f02\u6216\u548c\uff0c\u6240\u4ee5\u5f80\u5916\u8d70\u518d\u539f\u8def\u8fd4\u56de\u7684\u7b54\u6848\u4e0d\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u73af\u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u73af\u5f53\u6210\u4e00\u4e2a\u70b9\uff0c\u5c06\u5176\u5f02\u6216\u548c\u63d2\u5165\u7ebf\u6027\u57fa\uff0c\u6700\u540e\u518d\u627e\u51fa\u7ebf\u6027\u57fa\u4e2d\u53ef\u8868\u51fa\u7684\u6700\u5c0f\u7684\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<cstdio>\nusing namespace std;\ntypedef long long LL;\nconst int N=100005,M=200005,B=60;\nstruct edge{int y;LL c;int pre;}a[M];int alen,last[N];\ninline void ins(int x,int y,LL c){a[++alen]={y,c,last[x]};last[x]=alen;}\nint n,m,cnt;\nLL p[B+1],d[N];\nbool zero,v[N];\nvoid ins(LL x){\n\tfor(int i=B;~i;--i)\n\t\tif(x>>i&1){\n\t\t\tif(!p[i])return p[i]=x,void();\n\t\t\telse x^=p[i];\n\t\t}\n\tzero=1;\n}\nLL findmin(){\n\tLL res=d[n];\n\tfor(int i=B;~i;--i)if(res>(res^p[i]))res^=p[i];\n\treturn res;\n}\nvoid dfs(int x){\n\tv[x]=1;\n\tfor(int k=last[x],y;k;k=a[k].pre){\n\t\tif(!v[y=a[k].y])d[y]=d[x]^a[k].c,dfs(y);\n\t\telse ins(d[y]^d[x]^a[k].c);\n\t}\n}\nint main(){\n\tLL c;scanf(\"%d%d\",&n,&m);\n\tfor(int i=1,x,y;i<=m;++i){\n\t\tscanf(\"%d%d%lld\",&x,&y,&c);\n\t\tins(x,y,c);ins(y,x,c);\n\t}\n\tdfs(1);\n\tprintf(\"%lld\",findmin());\n\treturn 0;\n}\n```",
        "postTime": 1685021638,
        "uid": 573096,
        "name": "splendore",
        "ccfLevel": 5,
        "title": "CF845G\u9898\u89e3"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a\n- $a\u2295b=c$ \u5219 $a\u2295c=b$\n- \u7ebf\u6027\u57fa\n\n\u663e\u7136\u6211\u4eec\u8981\u6c42\u4e00\u5806\u8fb9\u7684\u8fb9\u6743\u5f02\u6216\u6700\u5c0f\u503c\uff0c\u9a6c\u4e0a\u8054\u60f3\u5230\u7ebf\u6027\u57fa\u3002\n\n\u4f46\u662f\u6211\u4eec\u663e\u7136\u662f\u4e0d\u80fd\u76f4\u63a5\u4e0a\u7ebf\u6027\u57fa\u7684\uff0c\u4e0d\u7136\u4f60\u4fdd\u8bc1\u4e0d\u4e86\u8fde\u901a\u6027\u3002\n\n\u9996\u5148\u6211\u4eec\u60f3\u5230\u73af\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u4e00\u65e6\u8fdb\u5165\uff0c\u5c31 **\u5fc5\u987b\u628a\u73af\u91cc\u7684\u8fb9\u5168\u90e8\u8d70\u5b8c** \u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u73af\u5f80\u7ebf\u6027\u57fa\u91cc\u585e\u3002\n\n\u7136\u540e\u9898\u76ee\u5c31\u53ef\u4ee5\u7b80\u5316\u4e3a\u4e00\u6761\u94fe\u52a0\u4e0a\u82e5\u5e72\u73af\u7684\u5f02\u6216\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u63d0\u51fa\u7ed3\u8bba\uff1a\u8fb9\u53ef\u4ee5\u4efb\u9009\u3002\n\n\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u4ece $1$ \u5230 $n$ \u7684\u8fb9\u7684\u96c6\u5408 $A,B$\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5 $A$ \u548c $B$ \u4e00\u5b9a\u6784\u6210\u73af\uff0c\u7136\u540e\u8fd9\u4e2a\u73af\u4e00\u5b9a\u5728\u7ebf\u6027\u57fa\u91cc\uff0c\u6240\u4ee5\u4efb\u610f\u9009\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nstruct node{\n\tint v,w;\n};\nvector<node>nbr[100005];\nint n,p[64],dis[100005],m;\nbool wypafo(int x){\n\tfor(register int j=63;j>=0;j--){\n\t\tif(1ll*x>>j){\n\t\t\tif(!p[j]){ \n\t\t\t\tp[j]=x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse x^=p[j];\n\t\t}\n\t}\n}\nbool vis[100005];\nvoid dfs(int cur,int sum){\n\tvis[cur]=1;\n\tdis[cur]=sum;\n\tfor(register int i=0;i<nbr[cur].size();++i){\n\t\tint nxt=nbr[cur][i].v;\n\t\tif(!vis[nxt])dfs(nxt,sum^nbr[cur][i].w);//\u5982\u679c\u91cd\u590d\u5230\u8fbe\u4e24\u6b21\u5c31\u662f\u73af\n\t\telse wypafo(sum^nbr[cur][i].w^dis[nxt]);\n\t}\n}\nsigned main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;++i){\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\tnbr[u].push_back((node){v,w});\n\t\tnbr[v].push_back((node){u,w});\n\t}\n\tdfs(1,0);\n\tint ans=dis[n];\n\tfor(int i=63;i>=0;i--)ans=min(ans,ans^p[i]);\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1639311578,
        "uid": 359614,
        "name": "Forever1507",
        "ccfLevel": 6,
        "title": "CF845G Shortest Path Problem? \u9898\u89e3"
    },
    {
        "content": "\u5982\u679c\u662f\u6811\u5219\u7b54\u6848\u552f\u4e00\u2014\u2014**\u5f80\u5916\u8d70\u4efb\u610f\u8def\u5f84\u518d\u8d70\u56de\u7b80\u5355\u8def\u5f84\u7b54\u6848\u4e0d\u53d8**\u3002\u8003\u8651\u56fe\u6bd4\u6811\u591a\u4ec0\u4e48\uff1a\u5f80\u6811\u4e0a\u52a0\u8fb9\u5219\u5f62\u6210\u4e00\u4e2a\u73af\u3002\u6839\u636e\u4e0a\u65b9\u7ed3\u8bba\uff0c\u53ef\u4ee5**\u4efb\u610f\u8d70\u5230\u4e00\u4e2a\u73af**\uff0c\u8d70\u5b8c\u8fd9\u4e2a\u73af\u518d\u8d70\u7b80\u5355\u8def\u5f84\u3002\n\n\u4e8e\u662f\u5c31\u663e\u800c\u6613\u89c1\uff1a\u628a\u6bcf\u4e2a\u73af\u7684\u6743\u503c\u52a0\u5165\u7ebf\u6027\u57fa\u67e5\u8be2\u5373\u53ef\u3002\n\n```cpp\nstruct LB {\n\tll p[63];\n\tvoid insert(ll v) {\n\t\tD (i, 62, 0) if ((v >> i) & 1) {\n\t\t\tif (!p[i]) { p[i] = v; break; }\n\t\t\tv ^= p[i];\n\t\t}\n\t}\n\tll ask(ll v) {\n\t\tD (i, 62, 0) if ((v ^ p[i]) < v)\n\t\t\tv ^= p[i];\n\t\treturn v;\n\t}\n} lb;\n\nconst int N = 100004;\nint n, m; vector<pair<int, ll>> g[N];\nint vis[N]; ll sum[N];\nvoid dfs(int u) {\n\tvis[u] = 1;\n\tfor (auto [v, w] : g[u])\n\t\tif (vis[v])\n\t\t\tlb.insert(sum[v] ^ sum[u] ^ w);\n\t\telse {\n\t\t\tsum[v] = sum[u] ^ w;\n\t\t\tdfs(v);\n\t\t}\n}\n\nint main() {\n\trd(n, m);\n\tU (i, 1, m) {\n\t\tint u, v; ll w; rd(u, v, w);\n\t\tg[u].push_back({v, w});\n\t\tg[v].push_back({u, w});\n\t}\n\tdfs(1);\n\tprintf(\"%lld\", lb.ask(sum[n]));\n}\n```",
        "postTime": 1670770581,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] CF845G \u5f02\u6216\u6700\u77ed\u8def"
    },
    {
        "content": "\u5ba3\u4f20\u535a\u5ba2 $\\to$ [link](https://blog.csdn.net/BWzhuzehao/article/details/118765815)\n\n\u9996\u5148\u770b\u5230\u9898\u76ee\u7684\u65f6\u5019\uff0c\u770b\u89c1\u5f02\u6216\u6700\u5c0f\u503c\uff0c\u5c31\u9700\u8981\u60f3\u5230\u53ef\u80fd\u662f\u7ebf\u6027\u57fa\uff0c\u800c\u8fd9\u9898\u6b63\u9700\u8981\u7ebf\u6027\u57fa\u3002\n\n\u8fd9\u91cc\u63a8\u51e0\u4e2a\u7ebf\u6027\u57fa\u7684\u5199\u7684\u597d\u7684\u6587\u7ae0\uff1a\n\n- [\u7ebf\u6027\u57fa - OI Wiki](https://oi-wiki.org/math/basis/)\n- ~~[\u6570\u5b66/\u6570\u8bba\u4e13\u9898-\u5b66\u4e60\u7b14\u8bb0\uff1a\u7ebf\u6027\u57fa - By Plozia](https://blog.csdn.net/BWzhuzehao/article/details/118388282)~~\n\n\u597d\uff0c\u73b0\u5728\u6211\u8ba4\u4e3a\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86\u7ebf\u6027\u57fa\u3002\n\n\u5bf9\u4e8e $1 \\to n$ \u7684\u8def\u5f84\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u6761\u8def\u5f84\u62c6\u6210 2 \u90e8\u5206\uff1a\u4e00\u6761\u94fe + \u4e00\u4e9b\u73af\u3002\n\n\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u6c42\u94fe\u7684\u8def\u5f84\u957f\u5ea6\u5f02\u6216\u4e0a\u6240\u6709\u73af\u957f\u5ea6\u7684\u6700\u5c0f\u503c\u3002\n\n\u5148\u770b\u6240\u6709\u73af\u957f\u5ea6\u7684\u5f02\u6216\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u4e00\u904d DFS \u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u73af\uff0c\u5c06\u8fd9\u4e9b\u73af\u7684\u957f\u5ea6\u4e22\u5230\u7ebf\u6027\u57fa\u91cc\u9762\uff0c\u90a3\u4e48\u8fd9\u6837\u7ebf\u6027\u57fa\u80fd\u5f02\u6216\u51fa\u6765\u7684\u6700\u5c0f\u503c\u5c31\u662f\u6240\u6709\u73af\u957f\u5ea6\u7684\u6700\u5c0f\u503c\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u6761\u94fe\u554a\uff1f\n\n\u5b9e\u9645\u4e0a\u8fd9\u6761\u94fe\u53ef\u4ee5\u968f\u4fbf\u9009\uff01\n\n\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u5047\u8bbe\u6211\u4eec\u4e0d\u80fd\u968f\u4fbf\u9009\u94fe\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5fc5\u987b\u9009\u62e9\u957f\u5ea6\u4e3a $A$ \u7684\u94fe\u624d\u80fd\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002\n\n\u8bbe\u6240\u6709\u73af\u80fd\u5f02\u6216\u51fa\u7684\u6700\u5c0f\u503c\u4e3a $x$\uff0c\u6211\u4eec\u9009\u51fa\u7684\u8def\u5f84\u957f\u5ea6\u4e3a $B$\uff0c\u5b9e\u9645\u4e0a\u7684\u6700\u4f18\u957f\u5ea6\u4e3a $A$\uff0c\u90a3\u4e48\u6309\u7167\u5047\u8bbe\u6211\u4eec\u6709 $B \\oplus x > A \\oplus x$\u3002\n\n\u4f46\u662f\u6ce8\u610f\u5230\u8fd9\u662f\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u56e0\u6b64\u8def\u5f84 $A$ \u548c\u8def\u5f84 $B$ \u5171\u540c\u7ec4\u6210\u4e86\u4e00\u4e2a\u73af\u3002\n\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u6c42\u7684\u662f\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u5f53\u6211\u4eec\u904d\u5386\u7ebf\u6027\u57fa\u6c42\u6700\u5c0f\u503c\u7684\u65f6\u5019\u7531\u4e8e $A \\oplus x$ \u66f4\u4f18\uff0c\u5c06\u4f1a\u5bfc\u81f4 $B \\gets B \\oplus A$\u3002\n\n\u56e0\u6b64\u5b9e\u9645\u4e0a $A,B$ \u4e24\u6761\u8def\u5f84\u662f\u540c\u7b49\u4f18\u79c0\u7684\uff0c\u4e0d\u5b58\u5728\u54ea\u6761\u66f4\u52a0\u4f18\u79c0\u7684\u94fe\u3002\n\n\u8bc1\u6bd5\u3002\n\nCode\uff1a[GitHub CodeBase-of-Plozia CF845G Shortest Path Problem.cpp](https://github.com/Plozia/CodeBase-of-Plozia/blob/main/Codeforces%20%E5%88%B7%E9%A2%98%E5%90%88%E9%9B%86/CF845G%20Shortest%20Path%20Problem.cpp)\n\n```cpp\n/*\n========= Plozia =========\n    Author:Plozia\n    Problem:CF845G Shortest Path Problem?\n    Date:2021/7/15\n========= Plozia =========\n*/\n\n#include <bits/stdc++.h>\n\ntypedef long long LL;\nconst int MAXN = 100000 + 5, MAXM = 100000 + 5;\nint n, m, Head[MAXN], cnt_Edge = 1;\nLL ans, dis[MAXN], d[70];\nbool book[MAXN];\nstruct node { int to; LL val; int Next; } Edge[MAXM << 1];\n\nLL Read()\n{\n    LL sum = 0, fh = 1; char ch = getchar();\n    for (; ch < '0' || ch > '9'; ch = getchar()) fh -= (ch == '-') << 1;\n    for (; ch >= '0' && ch <= '9'; ch = getchar()) sum = sum * 10 + (ch ^ 48);\n    return sum * fh;\n}\nLL Max(LL fir, LL sec) { return (fir > sec) ? fir : sec; }\nLL Min(LL fir, LL sec) { return (fir < sec) ? fir : sec; }\nvoid add_Edge(int x, int y, LL z) { ++cnt_Edge; Edge[cnt_Edge] = (node){y, z, Head[x]}; Head[x] = cnt_Edge; }\n\nvoid Add(LL x)\n{\n    for (int i = 63; i >= 0; --i)\n    {\n        if (x & (1ll << i))\n        {\n            if (d[i] & x) x ^= d[i];\n            else { d[i] = x; return ; }\n        }\n    }\n}\n\nvoid dfs(int now, LL sum)\n{\n    book[now] = 1; dis[now] = sum;\n    for (int i = Head[now]; i; i = Edge[i].Next)\n    {\n        int u = Edge[i].to;\n        if (!book[u]) dfs(u, sum ^ Edge[i].val);\n        else Add(sum ^ Edge[i].val ^ dis[u]);\n    }\n}\n\nint main()\n{\n    n = Read(), m = Read();\n    for (int i = 1; i <= m; ++i)\n    {\n        int x = Read(), y = Read(); LL z = Read();\n        add_Edge(x, y, z); add_Edge(y, x, z);\n    }\n    dfs(1, 0); ans = dis[n];\n    for (int i = 63; i >= 0; --i) ans = Min(ans, ans ^ d[i]);\n    printf(\"%lld\\n\", ans); return 0;\n}\n```",
        "postTime": 1626345502,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "CF845G Shortest Path Problem? \u9898\u89e3"
    },
    {
        "content": "\u88f8\u7684\u7ebf\u6027\u57fa\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u4e00\u4e9b\u53d8\u5316\u3002\n\n\u6211\u4eec\u9996\u5148\u9700\u8981\u5bf9\u56fe\u6784\u5efa\u4e00\u9897\u968f\u610f\u7684\u751f\u6210\u6811\u3002\u53ea\u8981\u662f\u9897\u6811\u5373\u53ef\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u6784\u9020\u51fa\u4e86\u5982\u4e0b\u7684\u4e00\u5f20\u56fe\uff08\u5176\u4e2d\u8fb9\u6743\u4e3a `....` \u7684\u4ee3\u8868\u8fd9\u4e4b\u95f4\u53ef\u80fd\u7701\u7565\u4e86\u4e00\u4e9b\u8fb9\uff09\uff1a\n\n![1](http://image.qingtengbc.com/2021/03/07/5349fa2d65311.png)\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21 DFS \u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9\uff0c\u5373 $2$ \u53f7\u70b9\uff0c\u7684\u8ddd\u79bb $dis_i$\u3002**\u6ce8\u610f\u6839\u8282\u70b9\u4e0d\u4e00\u5b9a\u662f $2$\uff0c\u6700\u597d\u4e0d\u8981\u662f $1$ \u6216 $n$\uff0c\u6ca1\u8bd5\u8fc7\u662f\u5426\u53ef\u4ee5\u3002**\n\n\u663e\u7136\u6211\u4eec\u8fd8\u6709\u4e00\u4e9b\u4e0d\u5728\u751f\u6210\u6811\u91cc\u7684\u8fb9\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u8fb9\uff0c\u6709\u4e00\u4e2a\u5e9f\u8bdd\u4e00\u6837\u7684\u6027\u8d28\uff0c\u5c31\u662f\u4ed6\u4eec\u52a0\u8fdb\u56fe\u53bb\u540e\uff0c\u81f3\u5c11\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u73af\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u52a0\u5165\u4e00\u6761\u8fb9 $(k_2,k_3)$\uff0c\u5f97\u5230\u56fe\uff1a\n\n![2](http://image.qingtengbc.com/2021/03/07/c490d61115da2.png)\n\n\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u73af $k_1,k_2,k_3,\\cdots,k_n$\uff0c\u73af\u7684\u6743\u503c\u662f $val_c=val_1 \\operatorname{xor} val_2\\operatorname{xor} val_3\\cdots\\operatorname{xor} val_n$\u3002\u6211\u4eec\u7684 $1->n$ \u7684\u8def\u5f84\u4e0a\u5982\u679c\u8981\u7ecf\u8fc7\u8fd9\u4e2a\u73af\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u5176\u5b9e\u6211\u4eec\u904d\u5386\u4e00\u4e0b\u8fd9\u4e2a\u73af\u5f97\u5230\u7684\u6743\u503c\u662f $dis_1 \\operatorname{xor} dis_{k_1} \\operatorname{xor} val_c \\operatorname{xor} dis_{k_1} \\operatorname{xor} dis_1=val_c$\u3002\u56e0\u6b64\u53ea\u662f\u628a\u8fd9\u4e2a\u73af\u7684\u6743\u503c\u52a0\u4e86\u8fdb\u53bb\u3002\n\n\u7531\u4e8e\u4efb\u610f\u4e00\u4e2a\u73af\u90fd\u53ef\u4ee5\u7528\u51e0\u4e2a\u73af\u5f02\u6216\u51fa\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6bcf\u6761\u65b0\u52a0\u5165\u7684\u8fb9\u5f62\u6210\u7684\u73af\u52a0\u5230\u7ebf\u6027\u57fa\u91cc\uff0c\u6c42\u51fa**\u6700\u5c0f**\u503c\u540e\uff0c\u518d\u5f02\u6216\u4e0a\u5fc5\u987b\u8981\u6709\u7684 $dis_1$ \u548c $dis_n$\uff0c\u5c31\u662f\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int MAXN=2e5+10;\n\nint n,m,cnt;\nint p[100],h[MAXN],father[MAXN],dis[MAXN];\n\nint find(int x) {\n\tif(x!=father[x]) {\n\t\treturn father[x]=find(father[x]);\n\t}\n\treturn father[x];\n}\n\nvoid insert(int x) {\n\tfor(int i=63;i>=0;i--) {\n\t\tif(!(x&(1ll<<i))) {\n\t\t\tcontinue;\n\t\t}\n\t\tif(!p[i]) {\n\t\t\tp[i]=x;\n\t\t\tbreak;\n\t\t}\n\t\tx=p[i]^x;\n\t}\n}\n\nstruct edge {\n\tint u,v,w,next;\n\tbool tree;\n}e[MAXN<<2];\n\nvoid addedge(int u,int v,int w) {\n\te[++cnt].u=u;\n\te[cnt].v=v;\n\te[cnt].w=w;\n\te[cnt].next=h[u];\n\th[u]=cnt;\n}\n\nvoid generate_tree() {\n\tfor(int i=1;i<=m;i++) {\n\t\tif(find(e[i].u)!=find(e[i].v)) {\n\t\t\tfather[find(e[i].u)]=find(e[i].v);\n\t\t\te[i].tree=1;\n\t\t\te[i+1].tree=1;\n\t\t}\n\t}\n}\nvoid dfs(int u,int fa) {\n\tfor(int i=h[u];i;i=e[i].next) {\n\t\tif(!e[i].tree) {\n\t\t\tcontinue;\n\t\t}\n\t\tint v=e[i].v;\n\t\t\n\t\tif(v!=fa) {\n\t\t\tdis[v]=dis[u]^e[i].w;\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n}\n\nsigned main() {\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) {\n\t\tfather[i]=i;\n\t}\n\tfor(int i=1;i<=m;i++) {\n\t\tint u,v,w;\n\t\tu=read();\n\t\tv=read();\n\t\tw=read();\n\t\taddedge(u,v,w);\n\t\taddedge(v,u,w);\n\t}\n\tm<<=1;\n\t\n\tgenerate_tree();\n\tdfs(2,0);\n\t\n\tfor(int i=1;i<=m;i++) {\n\t\tif(!e[i].tree) {\n\t\t\tinsert(dis[e[i].u]^dis[e[i].v]^e[i].w);\n\t\t}\n\t}\n\t\n\tint ans=dis[1]^dis[n];\n\tfor(int i=63;i>=0;i--) {\n\t\tans=min(ans,ans^p[i]);\n\t}\n\t\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1615083056,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "CF845G Shortest Path Problem?"
    },
    {
        "content": "## \u9898\u610f\n\u4ece\u4e00\u53f7\u8282\u70b9\u51fa\u53d1\uff0c\u4f7f\u5f97\u5230\u8fbe $n$ \u53f7\u8282\u70b9\u540e\u603b\u4ef7\u503c\u6700\u5c0f\u3002\u603b\u4ef7\u503c\u662f\u628a\u8def\u5f84\u4ef7\u503c\u5f02\u6216\u8d77\u6765\u5f97\u5230\u7684\u503c\u3002[$QWQ$](https://www.luogu.com.cn/blog/xzc/solution-cf845g)\n## \u5206\u6790\n\u5c31\u50cf\u6700\u5927XOR\u548c\u8def\u5f84 [\u4e00\u6837](https://www.luogu.com.cn/problem/P4151) \n\u3002\u8fd9\u9053\u9898\u4e5f\u8981\u5206\u6790\u5f02\u6216\u7684\u7279\u6b8a\u6027\u8d28 \n$$\na \\oplus b \\oplus b = a\n$$ \n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u73af\u7684\u8d21\u732e\uff0c\u5c31\u50cf\u4e0b\u56fe\u3002\u5982\u679c\u8fdb\u5165\u8fd9\u4e2a\u73af\uff0c\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u8003\u8651\u5f02\u6216\u8fd9\u4e2a\u73af\u53ef\u4ee5\u8d21\u732e\u7684\u503c\uff0c\u56e0\u4e3a\u6765\u56de\u4e24\u6b21\uff0c\u8fdb\u5165\u73af\u7684\u90a3\u6761\u8fb9\u7684\u8d21\u732e\u5c31\u88ab\u62b5\u6d88\u6389\u4e86\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/lh7jbiq3.png)\n\n- \u90a3\u73b0\u5728\u5c31\u662f\u6c42\u95ee\u5230\u5e95\u5f02\u6216\u54ea\u4e9b\u73af\u53ef\u4ee5\u4f7f\u5f02\u6216\u548c\u6700\u5c0f\u3002\n\n- \u7ebf\u6027\u57fa\u53ef\u4ee5\u5904\u7406\u5b50\u96c6\u5f02\u6216\u548c\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u6bcf\u4e2a\u73af\u7684\u503c\u63d2\u5165\u7ebf\u6027\u57fa\u3002\n\n- \u7136\u540e\u968f\u610f\u627e\u4e00\u6761 $1$ \u53f7\u8282\u70b9\u5230 $n$ \u53f7\u8282\u70b9\u7684\u8def\u5f84\uff0c\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\u3002\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u662f\u968f\u610f\uff1f\u56e0\u4e3a\u4efb\u610f\u4e0d\u540c\u7684\u4e24\u6761 $1$ \u5230 $n$ \u7684\u8def\u5f84\u4e00\u5b9a\u6784\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u8fd9\u6837\u4e24\u6761\u8def\u5f84\u5176\u5b9e\u5c31\u7b49\u4ef7\u4e86\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+100;\nint read(){\n\tint x = 0,f = 0;char ch=getchar();\n\twhile(!isdigit(ch)) {if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)) {x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\nstruct Edge{int to,nxt,w;}e[N<<1];\nint head[N],vis[N],dis[N],p[70],cnt = 1,n,m;\nvoid addedge(int x,int y,int z){\n\te[++cnt].to = y;e[cnt].nxt = head[x];e[cnt].w = z;head[x] = cnt;\n\te[++cnt].to = x;e[cnt].nxt = head[y];e[cnt].w = z;head[y] = cnt;\n}\nvoid insert(int x){\n\tfor(int i = 30;i >= 0;i--) {\n\t\tif((x>>i)&1){\n\t\t\tif(!p[i]){\n\t\t\t\tp[i] = x;return;\n\t\t\t}\n\t\t\tx ^= p[i];\n\t\t}\n\t}\n}\nvoid dfs(int x,int val)\n{\n\tdis[x] = val;\n\tfor(int i = head[x];i;i = e[i].nxt){\n\t\tint y = e[i].to;\n\t\tif(!vis[y]){\n\t\t\tvis[y] = 1;\n\t\t\tdfs(y,val ^ e[i].w);\n\t\t}\n\t\telse insert(val ^ e[i].w ^ dis[e[i].to]);\n\t}\n}\nint main()\n{\n\tn = read();m = read();\n\tfor(int i = 1;i <= m;i++) {\n\t\tint a = read(),b = read(),c = read();\n\t\taddedge(a,b,c);\n\t}\n\tvis[1] = 1;\n\tdfs(1,0);\n\tfor(int i = 30;i >= 0;i--){\n\t\tif((dis[n]^p[i]) < dis[n]){\n\t\t\tdis[n] ^= p[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dis[n]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1596974396,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF845G \u3010Shortest Path Problem?\u3011"
    },
    {
        "content": "\u53cc\u500d\u7ecf\u9a8c\uff1a[[WC2011]\u6700\u5927XOR\u548c\u8def\u5f84](https://www.luogu.com.cn/problem/P4151)\n\n\u770b\u5230\u201c\u5f02\u6216\u201d\uff0c\u201c\u6700\u201d\u7b49\u5b57\u773c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u662f\u9053\u7ebf\u6027\u57fa\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u79cd\u505a\u6cd5\u662f\u627e\u5230\u4e00\u6761\u8def\u5f84\u4e4b\u540e\u7528\u4efb\u610f\u73af\u5c06\u5176\u589e\u5e7f\uff0c\u56e0\u4e3a $p\\operatorname{xor}p=0$\uff0c\u6240\u4ee5\u6b63\u786e\u6027\u662f\u4fdd\u8bc1\u7684\uff08\u8dd1\u5230\u67d0\u4e2a\u73af\u518d\u8dd1\u56de\u6765\u65e0\u5f71\u54cd\u3002\n\n\u4f46\u662f\u6709\u51e0\u4e2a\u95ee\u9898\n\n- \u627e\u54ea\u6761\u8def\u5f84\uff1f\u5176\u5b9e\u54ea\u6761\u90fd\u53ef\u4ee5\u3002\u56e0\u4e3a $p_1:1\\rightarrow n$ \u4e0e $p_2:1\\rightarrow n$ \u5fc5\u4f1a\u7ec4\u6210\u4e00\u6761\u73af\u3002\n\n- \u73af\u6709\u5f88\u591a\u600e\u4e48\u529e\uff1f\u6c42\u51fa\u4efb\u610f\u751f\u6210\u6811\uff0c\u5219\u6240\u6709\u975e\u6811\u8fb9\u5747\u4f1a\u62c9\u51fa\u4e00\u4e2a\u73af\uff0c\u800c\u5b83\u4eec\u53ef\u4ee5\u51d1\u51fa\u6240\u6709\u7684\u73af\u3002\n\n- \u600e\u4e48\u7edf\u8ba1\u7b54\u6848\uff1f\u628a\u73af\u7684\u5f02\u6216\u548c\u90fd\u52a0\u5165\u7ebf\u6027\u57fa\u91cc\uff0c\u7136\u540e\u4ee5\u90a3\u6761\u8def\u5f84\u7684\u8fb9\u6743\u4e3a\u8d77\u59cb\u503c\uff0c\u8dd1\u6700\u5c0f\u5f02\u6216\u5373\u53ef\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint p[64],d[64],zero;\ninline void insert(int x){\n\twhile(x&&p[__lg(x)]) x^=p[__lg(x)];\n\tif(x) p[__lg(x)]=x;\n\telse ++zero;\n}\ninline int qmin(int x){\n\tint r=LLONG_MAX;\n\tfor(int i=63;i>=0;--i){\n\t\tx=min(x,p[i]^x);\n\t}\n\tif(zero) r=min(r,x);\n\treturn x;\n}\nint a[100005],n;\nint hd[200005],nxt[200005],ww[200005],to[200005],cnt,val[100005],tot;\nbool tag[200005],vis[100005];\nbool dfs(int x){\n\tvis[x]=1;\n\tbool flag=0,f;\n\tfor(int i=hd[x];~i;i=nxt[i]){\n\t\tconst int y=to[i],w=ww[i];\n\t\tif(!vis[y]){\n\t\t\ttag[i]=tag[i^1]=1;\n\t\t\tval[y]=val[x]^w;\n\t\t\tif(f=dfs(y)) tot^=w;\n\t\t\tflag|=f;\n\t\t}\n\t}\n\tif(x==n||flag) return 1;\n\treturn 0;\n}\nsigned main(){\n\tmemset(hd,-1,sizeof hd);\n\tint m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;++i){\n\t\tint x,y,w;\n\t\tcin>>x>>y>>w;\n\t\tnxt[cnt]=hd[x];\n\t\thd[x]=cnt;\n\t\tto[cnt]=y;\n\t\tww[cnt]=w;\n\t\t++cnt;\n\t\tnxt[cnt]=hd[y];\n\t\thd[y]=cnt;\n\t\tto[cnt]=x;\n\t\tww[cnt]=w;\n\t\t++cnt;\n\t}\n\tdfs(1);\n\tfor(int x=1;x<=n;++x){\n\t\tfor(int i=hd[x];~i;i=nxt[i]){\n\t\t\tconst int y=to[i],w=ww[i];\n\t\t\tif(!tag[i]&&(i&1)){\n\t\t\t\tinsert(w^val[x]^val[y]);\n\t\t\t}\n\t\t}\n\t}\n\tcout<<qmin(tot);\n}\n```",
        "postTime": 1657715053,
        "uid": 383785,
        "name": "Hagasei",
        "ccfLevel": 6,
        "title": "CF845G \u9898\u89e3"
    }
]