[
    {
        "content": "\u82f1\u6587\u7248\u7684\u9898\u9762\u5f88\u957f\u5f88\u957f\uff0c\u4f46\u4e2d\u6587\u7248\u7684\u7ffb\u8bd1\u5c31\u663e\u5f97\u5341\u5206\u5e72\u51c0\u660e\u4e86\u4e86\uff1a\n\n#### \u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6c42\u4e24\u9897\u4e0d\u76f8\u4ea4\u7684\u5b50\u6811\u4f7f\u5b83\u4eec\u7684\u70b9\u6743\u603b\u548c\u6700\u5927\uff0c\u8f93\u51fa\u6700\u5927\u7684\u70b9\u6743\u548c\u3002\u70b9\u6743\u53ef\u80fd\u4e3a\u8d1f\u3002\n\n\u8fd9\u5c31\u597d\u529e\u4e86\uff0c\u59a5\u59a5\u7684\u6811\u5f62DP\u3002\u518d\u4e00\u770b\u6570\u636e\u89c4\u6a21$1\\le n\\le 2\\times10^5$\uff0c\u57fa\u672c\u53ef\u4ee5\u65ad\u5b9a\u6b64\u9898\u8981\u6c42\u5728$O(N)$\u7684\u590d\u6742\u5ea6\u4e0b\u6c42\u89e3\u7b54\u6848\u3002\n\n\u6240\u4ee5\uff0c\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u5148\u628adp\u6570\u7ec4\u5199\u51fa\u6765\uff0c\u56e0\u4e3a\u662f$O(N)$\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u5b9a\u4e49\u51fa\u6765\u7684\u6570\u7ec4\u5e94\u8be5\u662f\u4e2a\u4e00\u7ef4\u7684\uff1a\n```\nint dp[200005]\n```\n\u6570\u7ec4\u662f\u5199\u51fa\u6765\u4e86\uff0c\u4f46$dp[i]$\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u96be\u4e0d\u6210\u662f\u4ee5\u8282\u70b9$i$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6240\u6709\u5b50\u6811\u7684\u6700\u5927\u503c\uff1f\n\n\u62b1\u7740\u8bd5\u4e00\u8bd5\u7684\u60f3\u6cd5\uff0c\u8ba9\u6211\u4eec\u7ee7\u7eed\u5411\u4e0b\u63a8\u3002\n\n\u5047\u5982\u8fd9\u4e2a\u8282\u70b9\u662f$u$\uff0c\u5b83\u7684\u5b69\u5b50\u6211\u4eec\u8bbe\u4e3a$v$\uff0c\u4ee5\u8282\u70b9$u$\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u70b9\u6743\u548c\u4e3a$sum[u]$\uff0c\u90a3\u4e48$dp[i]=\\max(\\max(dp[v]),sum[v])$\uff0c\u539f\u56e0\u5f88\u663e\u7136\u3002\n\n\u90a3\u6211\u4eec\u5fc3\u5fc3\u5ff5\u5ff5\u7684\u6700\u5927\u503c\u5462\uff1f\u8fd9\u9053\u9898\u95ee\u7684\u53ef\u662f\u4e0d\u76f8\u4ea4\u7684\u4e24\u68f5\u5b50\u6811\u7684\u6700\u5927\u503c\u3002\n\n\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9$u$\uff0c\u679a\u4e3e\u6240\u6709\u7684$dp[v]$\uff0c\uff08$u$\u3001$v$\u7684\u542b\u4e49\u540c\u4e0a)\uff0c\u53d6\u5176\u4e2d\u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u3002\u5982\u679c\u53ea\u627e\u5230\u4e86\u4e00\u4e2a\u6700\u5927\u503c\u800c\u6ca1\u6709\u6b21\u5927\u503c\uff08\u5373\u662f\u8fd9\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\uff09\uff0c\u5c31\u4e0d\u8ba1\u5165\u7b54\u6848\uff1b\u5426\u5219\uff0c\u5c31\u7528\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u4e4b\u548c\u66f4\u65b0\u7b54\u6848\uff0c\u53d6\u4e24\u8005\u7684\u6700\u5927\u503c\u3002\n\n\u6700\u540e\uff0c\u6f02\u4eae\u6ef4\u8f93\u51fa\u5b83\u3002\n\n\u4ee3\u7801\u5927\u6982\u5982\u4e0b\uff08\u9644[AC\u7ed3\u679c](https://www.luogu.com.cn/record/45601519)\uff09\uff1a\n\n```\n#include<cstdio>\n#define N 200005\n#define int long long\nconst int minn=-1e18;\n\ninline int max(int s1,int s2){\n\treturn s1<s2?s2:s1;\n}//\u5185\u8054\u51fd\u6570\u7a0d\u5fae\u51cf\u5c11\u70b9\u65f6\u95f4 \n\nint c[N],dp[N],sum[N];//c[i]\u662f\u6bcf\u4e2a\u8282\u70b9\u7684\u70b9\u6743\n                      //dp[]\u548csum[]\u90fd\u4e0e\u4e0a\u6587\u6240\u8ff0\u76f8\u540c\n \nint head[N],m,sum_;\nstruct edge{\n\tint to,next;\n}e[N*2];\nvoid add(int f,int t){\n\tsum_++;\n\te[sum_].to=t;\n\te[sum_].next=head[f];\n\thead[f]=sum_;\n}//\u90bb\u63a5\u8868\u5b58\u8fb9\u6a21\u677f\uff0c\u628a\u6811\u5f53\u6709\u5411\u56fe\u5b58 \n\nint f[N];//f[i]\u4ee3\u8868\u8282\u70b9i\u7684\u7236\u4eb2 \nvoid dfs(int wh,int fa){//wh\u4ee3\u8868\u5f53\u524d\u9700\u8981\u5904\u7406\u7684\u8282\u70b9\n                        //fa\u4ee3\u8868\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2 \n                        //dfs\u5c31\u662f\u4e3a\u4e86\u5904\u7406\u51fadp\u6570\u7ec4 \n\tf[wh]=fa;\n\tsum[wh]=c[wh];\n\tfor(int i=head[wh];i!=0;i=e[i].next){//\u904d\u5386\u6bcf\u4e00\u6761\u8fb9 \n\t\tif(e[i].to==fa)continue;//\u4e0d\u53ef\u641c\u56de\u7236\u4eb2\u8282\u70b9 \n\t\tdfs(e[i].to,wh);\n\t\tsum[wh]+=sum[e[i].to];\n\t}\n\t//\u4e0a\u9762\u8fd9\u4e2afor\u662f\u4e3a\u4e86\u5904\u7406\u51fasum\u6570\u7ec4 \n\tdp[wh]=sum[wh];\n\tfor(int i=head[wh];i!=0;i=e[i].next){\n\t\tif(e[i].to==fa)continue;\n\t\tdp[wh]=max(dp[wh],dp[e[i].to]);\n\t}\n\t//\u4e0a\u9762\u8fd9\u4e2afor\u662f\u4e3a\u4e86\u5904\u7406\u51fadp\u6570\u7ec4 \n}\n\nsigned main(){\n\t\n\tscanf(\"%lld\",&m);\n\tfor(int i=1;i<=m;i++)scanf(\"%lld\",c+i);\n\tfor(int i=1;i<m;i++){\n\t\tint s1,s2;\n\t\tscanf(\"%lld%lld\",&s1,&s2);\n\t\tadd(s1,s2);\n\t\tadd(s2,s1);\n\t}//\u8f93\u5165 \n\tdfs(1,0);//\u8fdb\u884cdfs \n\tint ans=minn;\n\tfor(int i=1;i<=m;i++){//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 \n\t\tint b1=minn,b2=minn;//b1\u3001b2\u5206\u522b\u4e3a\u6700\u5927\u503c\u548c\u6b21\u5927\u503c \n\t\tfor(int j=head[i];j!=0;j=e[j].next){\n\t\t\tif(e[j].to==f[i])continue;\n\t\t\tif(dp[e[j].to]>b1){\n\t\t\t\t//\u6bd4\u6700\u5927\u503c\u5927\u65f6 \n\t\t\t\tb2=b1;\n\t\t\t\tb1=dp[e[j].to];\n\t\t\t}\n\t\t\telse if(dp[e[j].to]>b2){\n\t\t\t\t//\u6bd4\u6700\u5927\u503c\u5c0f\u4f46\u6bd4\u6b21\u5c0f\u503c\u5927\u65f6 \n\t\t\t\tb2=dp[e[j].to];\n\t\t\t}\n\t\t}\n\t\tif(b2==minn)continue;//\u5982\u679c\u8fde\u6b21\u5c0f\u503c\u90fd\u6ca1\u6709\uff0c\u4ee3\u8868\u8fd9\u4e2a\u8282\u70b9\u7684\u5b69\u5b50\u4e0d\u8d85\u8fc7\u4e00\u4e2a \n\t\tans=max(ans,b1+b2);\n\t}\n\tif(ans==minn)printf(\"Impossible\");//\u4ee3\u8868\u7b54\u6848\u4e00\u76f4\u90fd\u6ca1\u6709\u88ab\u66f4\u65b0\u8fc7 \n\telse printf(\"%lld\",ans);\n\t\n\treturn 0;\n}\n```\n## \u540e\u8bb0\n\u770b\u4e86\u4e00\u773c\u9898\u89e3\uff0c\u8bb8\u591a\u9898\u89e3\u90fd\u7528\u5230\u4e86\u4e00\u4e9b\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff0c\u672c\u849f\u84bb\u5c31\u7b97\u4f1a\u5199\uff0c\u4e5f\u61d2\u5f97\u5199\u3002\u80fd\u7528\u57fa\u7840dp\u505a\u51fa\u4e86\u7684\u9898\u4e3a\u4ec0\u4e48\u8981\u7528\u90a3\u4e9b\u82b1\u91cc\u80e1\u54e8\u7684\u65b9\u6cd5\u5462\u3002\u6211\u6709\u4e00\u4e2a\u89c2\u70b9\u54c8\uff0c\u5c31\u662f\u5982\u679c\u4f60\u80fd\u7528\u7b80\u5355\u7684\u65b9\u6cd5\u89e3\u51b3\u6389\u4e00\u4e2a\u590d\u6742\u7684\u9898\u76ee\uff0c\u4e5f\u662f\u8bc1\u660e\u4e86\u4f60\u7684\u80fd\u529b\u3002\u6709\u7684\u65f6\u5019\uff0c\u7528\u7684\u65b9\u6cd5\u8d8a\u590d\u6742\uff0c\u53cd\u800c\u663e\u5f97\u601d\u7ef4\u5c40\u9650\u3002~~\u4e2a\u4eba\u89c2\u70b9\uff0c\u4ec5\u4f9b\u53c2\u8003~~\u3002",
        "postTime": 1611733242,
        "uid": 302383,
        "name": "Feyn",
        "ccfLevel": 0,
        "title": "CF743D\u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u4e0d\u662f\u5f88\u96be\u7684$DP$\u3002\n\n\u5f62\u5f0f\u4e0a\uff0c\u672c\u6587\u5bf9\u201c\u5b50\u6811\u201d\u548c\u201c\u8fde\u901a\u5757\u201d\u4e0d\u505a\u533a\u5206\u3002\n\n\u6211\u4eec\u601d\u8003\uff0c\u6211\u4eec\u968f\u4fbf\u6307\u5b9a\u4e00\u4e2a\u5f53\u6839\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8f6c\u79fb\u7684\u65f6\u5019\u662f\u5426\u9700\u8981\u8de8\u51fa\u5b50\u6811\u2014\u2014\u5176\u7136\u662f\u4e0d\u9700\u8981\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u7684\u7ed3\u679c\u4e00\u5b9a\u4f1a\u662f\u4e24\u68f5\u4e0d\u76f8\u4ea4\u7684\u6700\u5927\u7684\u5b50\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4ee4$1$\u4e3a\u6839\u3002\n\n\u90a3\u4e48\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a$u$\u627e\u51fa\u5176\u5b50\u6811\u5185\u6700\u5927\u548c\u6b21\u5927\u7684\u8fde\u901a\u5757\uff0c\u8f6c\u79fb\u5c31\u597d\u3002\u6211\u4eec\u4ee4$dp[0]$\u4f5c\u4e3a\u6700\u7ec8\u7b54\u6848\uff0c$dp[u]$\u8bb0\u5f55\u5b50\u6811\u5185\u7684\u6700\u5927\u8fde\u901a\u5757\u6743\u503c\u3002\u90a3\u4e48\u5f53\u6211\u4eec\u53ea\u8bbf\u95ee\u4e86$u$\u7684\u65f6\u5019\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6211\u4eec\u662f\u5426\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e00\u9897\u5b50\u6811\uff0c\u5982\u679c\u662f\u5c31\u679a\u4e3e\u53e6\u4e00\u9897\u5b50\u6811\u5e76\u4e14\u4e0d\u65ad\u66f4\u65b0\u5f53\u524d\u7684\u6700\u5927\u5b50\u6811\u5373\u53ef\u3002\n\n\u6b64\u5904\u6709\u4e00\u4e2a\u5c0f$trick$\uff0c\u5373\u5148\u66f4\u65b0$ans$\u540e\u66f4\u65b0$dp[u]$\uff0c\u5176\u4f5c\u7528\u662f\u4e0d\u8a00\u800c\u55bb\u7684\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n\n#define MAXN 300020\n#define to(k) E[k].to\n#define Fuck -23333666623336LL\n\nusing namespace std ;\nstruct Edge{\n    int to, next ;\n}E[MAXN] ; int head[MAXN], cnt ;\nlong long N, base[MAXN], S[MAXN], dp[MAXN], A, B, i ;\n\ninline void Add(int u, int v){\n    E[++ cnt].to = v, E[cnt].next = head[u], head[u] = cnt ;\n    E[++ cnt].to = u, E[cnt].next = head[v], head[v] = cnt ;\n}\nvoid work_on_dp(int now, int f){\n    S[now] = base[now] ;\n    for (int k = head[now] ; k ; k = E[k].next){\n        if (f == E[k].to) continue ;work_on_dp(to(k), now) ; \n        if (dp[now] > Fuck) dp[0] = max(dp[0], dp[now] + dp[to(k)]) ;\n        S[now] += S[to(k)], dp[now] = max(dp[now], dp[to(k)]) ; \n    }\t\n    if (now != 1) dp[now] = max(dp[now], S[now]) ;//dp[now]\u8868\u793a\u6700\u5927\u5b50\u6811\u548c\uff08\u5373\u53ea\u9009\u53d6\u4e00\u9897\u5b50\u6811\uff0c\u9009\u53d6\u54ea\u4e00\u68f5\uff09 \n}\nint main(){\n    cin >> N ; fill(dp, dp + N + 2, Fuck) ; \n    for (i = 1 ; i <= N ; ++ i) scanf(\"%lld\", &base[i]) ;\n    for (i = 1 ; i < N ; ++ i) scanf(\"%d%d\", &A, &B), Add(A, B) ;\n    work_on_dp(1, 0) ;  (dp[0] > Fuck ? cout << dp[0] << endl : cout << \"Impossible\" << endl) ; return 0 ;\n}\n```\n\n",
        "postTime": 1551006569,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF743D \u3010Chloe and pleasant prizes\u3011"
    },
    {
        "content": "## CF743D \u9898\u89e3\n\n+ ### \u9898\u610f\n\n  \u7ed9\u51fa\u4e00\u9897\u4ee5$1$\u4e3a\u6839\uff0c\u6709$n$\u4e2a\u70b9\u7684\u6811\uff0c\u7b2c$i$\u4e2a\u70b9\u7684\u70b9\u6743\u4e3a$a_i$\uff0c\u8981\u6c42\u4e24\u9897\u4e0d\u76f8\u4ea4\u7684\u5b50\u6811\u7684\u6700\u5927\u70b9\u6743\u548c\uff0c\u82e5\u65e0\u89e3\uff0c\u8f93\u51fa `Impossible`\u3002\n\n+ ### \u601d\u8def\n\n  \u5148\u8003\u8651\u5565\u662f\u65e0\u89e3\u7684\u60c5\u51b5\u3002\n\n  \u663e\u7136\uff0c\u5f53\u6811\u7684\u5f62\u6001\u662f\u4e00\u6761\u94fe\u7684\u65f6\u5019\u65e0\u89e3\uff08\u5176\u4ed6\u60c5\u51b5\u4f60\u81f3\u5c11\u53ef\u4ee5\u9009\u4e24\u4e2a\u53f6\u8282\u70b9\uff09\u3002\n\n  \u7136\u540e\u8fd9\u9898\u6211\u4e00\u5f00\u59cb\u6ca1\u770b\u5230\u6709\u8d1f\u70b9\u6743\uff0c\u4e8e\u662f\u6253\u7b97\u76f4\u63a5\u8d2a\u5fc3\u5728\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u9009\u4e24\u68f5\u6743\u503c\u548c\u6700\u5927\u7684\u3002\n\n  ~~\u7ed3\u679c\u53d1\u73b0\u8fde\u65e0\u89e3\u7684\u60c5\u51b5\u90fd\u8fc7\u4e0d\u4e86~~\n\n  \u554a\uff0c\u6709\u8d1f\u70b9\u6743\uff0c\u6240\u4ee5\u53ea\u80fd\u8001\u8001\u5b9e\u5b9edp\u4e86\u3002\n\n  \u8bbe $dp[i][1/0]$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u5df2\u7ecf\u9009\u4e86 $2/1$ \u68f5\u5b50\u6811\u7684\u6700\u5927\u70b9\u6743\u548c\u3002\n\n  \u6240\u4ee5 $dp[i][0]$ \u5c31\u4ece\u513f\u5b50\u4e2d\u9009\u4e00\u4e2a $dp[][0]$ \u503c\u6700\u5927\u7684\uff0c\u6216\u8005\u5168\u90e8\u9009\u53d6\u3002\n\n  $dp[i][1]$ \u53ef\u4ee5\u4ece\u513f\u5b50\u4e2d\u9009\u4e00\u4e2a $dp[][1]$ \u503c\u6700\u5927\u7684\uff0c\u6216\u8005\u4ece\u513f\u5b50\u4e2d\u9009 $dp[][0]$ \u6700\u5927\u548c\u6b21\u5927\u7684\u4e24\u4e2a\uff08\u524d\u63d0\u662f\u81f3\u5c11\u5f97\u6709\u4e24\u4e2a\u513f\u5b50\uff09\n\n  \u53ef\u80fd\u5b9e\u73b0\u8d77\u6765\u6709\u4e00\u70b9\u5c0f\u7ec6\u8282\uff0c\u4f46\u662f\u5bf9\u5404\u4f4d\u7237\u7237\u6765\u8bf4\u8fd9\u4e0d\u662f\u6709\u624b\u5c31\u884c\uff08\n\n+ ### \u90e8\u5206\u4ee3\u7801\n\n  ```cpp\n  void dfs1(int u,int fa){s[u]=a[u];\n  \tfor(int i=head[u];i;i=e[i].next){\n  \t\tint v=e[i].to;if(v==fa)continue;\n  \t\tdfs1(v,u);s[u]+=s[v];\n  \t}\n  }\n  \n  void dfs2(int u,int fa){\n  \tdp[u][0]=max(dp[u][0],s[u]);\n  \tll mx1=-1e18,mx2=-1e18;\n  \tfor(int i=head[u];i;i=e[i].next){\n  \t\tint v=e[i].to;if(v==fa)continue;\n  \t\tdfs2(v,u);\n  \t\tdp[u][0]=max(dp[u][0],dp[v][0]);\n  \t\tdp[u][1]=max(dp[v][1],dp[u][1]);\n  \t\tif(mx1<=-1e18||dp[v][0]>mx1)mx2=mx1,mx1=dp[v][0];\n  \t\telse if(mx2<=-1e18||dp[v][0]>mx2)mx2=dp[v][0];\n  \t}\n  \tif(mx2>-1e18)dp[u][1]=max(dp[u][1],mx1+mx2);\n  }\n  \n  int main(){\n  \tscanf(\"%d\",&n);\n  \tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),dp[i][0]=dp[i][1]=-1e18;\n  \tfor(int i=1,u,v;i<n;i++)scanf(\"%d%d\",&u,&v),adde(u,v),adde(v,u);\n  \tdfs1(1,0);dfs2(1,0);\n  \tif(dp[1][1]<=-1e18)return printf(\"Impossible\\n\"),0;\n  \tcout<<dp[1][1];\n  \treturn 0;\n  }\n  ```\n\n  ",
        "postTime": 1610358106,
        "uid": 65502,
        "name": "Crab_Dave",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF743D \u3010Chloe and pleasant prizes\u3011"
    },
    {
        "content": "#### \u524d\u8a00\n\n\u601d\u60f3\uff1a\u6811\u94fe\u5256\u5206\n\n\u7b97\u6cd5\uff1a\u4e00\u9053\u4e0d\u592a\u96be\u7684\u6362\u6839(\u6362\u6839$dp$?\u611f\u89c9\u4e0d\u7b97\u662f)+\u7ebf\u6bb5\u6811\n\n\u9996\u5148\u6211\u4eec\u660e\u786e\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u4e8b\u60c5\uff1a\n\n\u4e00\u4e2a\u5b50\u6811\u7684$Dfn$(\u4e0d\u662f\u6b27\u62c9\u5e8f\uff01)\u5e8f\u662f\u8fde\u7eed\u7684\uff0c\u5b50\u6811\u7684\u6839\u8282\u70b9\u7684$Dfn$\u5e8f\u662f\u6700\u5c0f\u7684\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u5b50\u6811\u4e2d\u6700\u5927\u7684$Dfn$\u5e8f\u4e3a$Dfn[root] + siz[root] - 1$\n\n(\u5199\u8fc7\u6811\u94fe\u5256\u5206\u7684\u90fd\u77e5\u9053\u5427\u3002)\n\n#### \u601d\u8def\n\n\u56e0\u4e3a\u53ea\u9700\u8981\u9009\u62e9\u51fa\u4e24\u4e2a\uff0c\u6240\u4ee5\u8003\u8651\u679a\u4e3e\u5176\u4e2d\u4e00\u68f5\u5b50\u6811\uff0c\u7136\u540e\u6c42\u6700\u5927\u7684\u548c\u5f53\u524d\u5b57\u6811\u6ca1\u6709\u91cd\u590d\u8282\u70b9\u7684\u4e00\u68f5\u5b50\u6811\u3002\n\n\u8003\u8651\u6bcf\u6b21\u6211\u4eec\u5411\u513f\u5b50\u6362\u6839\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u6362\u6839\u540e\uff0c\u6211\u4eec\u80fd\u591f\u9009\u62e9\u7684\u5b50\u6811\u7684\u6570\u91cf\u76f8\u5bf9\u4e0e\u6ca1\u6362\u4e4b\u524d\u662f\u4e0d\u65ad\u5728\u589e\u52a0\u7684\uff0c\u8fd9\u6837\u5b50\u6bd4\u8f83\u597d\u7ef4\u62a4\u72b6\u6001\u3002\n\n**\u65b0\u7684\u53ef\u4ee5\u9009\u62e9\u7684\u5b50\u6811\u6709\u54ea\u4e9b**\uff1f\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u65b0\u7684 \u53ef\u4ee5\u9009\u62e9\u7684\u5b50\u6811 \u5373:\n\n```plain\n\n\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5185\uff0c\n\n\u9664\u4e86\u5f53\u524d\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u4ee5\u53ca\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u4ee5\u5916\u7684\u6240\u6709\u8282\u70b9\u3002\n```\n\n\u4f60\u53ef\u4ee5\u753b\u4e00\u4e2a\u56fe\u8fdb\u884c\u7406\u89e3\u8fd9\u53e5\u8bdd\u3002**\u8fd9\u4e00\u53e5\u8bdd\u81f3\u5173\u91cd\u8981\uff0c\u662f\u8fd9\u4e2a\u505a\u6cd5\u7684\u6838\u5fc3\uff01**\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u9700\u8981\u6c42\u6700\u5927\u503c\u7684\u533a\u95f4\u88ab\u5206\u4e3a\u4e86\u4e24\u6bb5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/e8jb5bx8.png)\n\n\u6bcf\u6b21\u80fd\u9009\u62e9\u7684\u5b50\u6811\u53ea\u4f1a\u52a0\u5165\u4e00\u4e9b\u65b0\u7684\u5b50\u6811\u800c\u4e0d\u9700\u8981\u5220\u9664\u4e00\u4e9b\u5b50\u6811\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6bd4\u8f83\u73b0\u5728\u80fd\u591f\u9009\u62e9\u7684\u6700\u5927\u503c\u4e0e\u65b0\u52a0\u5165\u7684\u4e00\u4e9b\u5b50\u6811\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u91c7\u7528DFS\u7684\u65b9\u5f0f\uff0c\u5c06\u76ee\u524d\u6700\u5927\u503c\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\uff0c\u8fd9\u6837\u5b50\u65b9\u4fbf\u66f4\u65b0\uff0c\u4e5f\u4e0d\u9700\u8981\u56de\u6eaf\u3002\n\n\u6ce8\u610f\u8981\u9884\u5904\u7406\u4e00\u4e0b\u6bcf\u4e00\u68f5\u5b50\u6811\u7684\u6743\u503c\u548c\uff0c\u5728\u9884\u5904\u7406DFS\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e00\u68f5\u5b50\u6811\u6709\u591a\u5c11\u4e2a\u5b50\u8282\u70b9\u4ee5\u53ca\u5b50\u6811\u7684\u6743\u503c\u548c\u3002\n\n\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\n\n\u5177\u4f53\u53ef\u4ee5\u770b\u4e00\u770b\u4ee3\u7801:\n\n### Code\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long \nconst int MAXN = 200005,INF = 1000000000000000000;\nint n;\nint a[MAXN],dfn[MAXN],sum[MAXN],now = 0;\nint start[MAXN],cnt = 0,dfn_id[MAXN],siz[MAXN],Ans = -INF;\n\n//sum[x]\u8868\u793a\u70b9x\u7684\u5b50\u6811\u6743\u503c\u548c\n//dfn[x]\u8868\u793a\u70b9x\u7684dfn\u5e8f\n//a[x]\u8868\u793a\u70b9x\u4e00\u5f00\u59cb\u7684\u6743\u503c\n//siz[x]\u8868\u793a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u5185\u4e00\u5171\u591a\u5c11\u4e2a\u70b9\n//dfn_id[x]\u8868\u793adfn\u5e8f\u4e3ax\u7684\u70b9\u662f\u54ea\u4e00\u4e2a\n\nstruct Edge {\n\tint next,to;\n} edge[MAXN * 2];\n\nstruct Segment {\n\tint l,r,Max;\t//\u666e\u901a\u7ebf\u6bb5\u6811\n} T[MAXN * 4];\n\ninline int read()\n{\n\tint x = 0 , flag = 1;\n\tchar ch = getchar();\n\tfor( ; ch > '9' || ch < '0' ; ch = getchar())if(ch == '-')flag = -1;\n\tfor( ; ch >= '0' && ch <= '9' ; ch = getchar())x = (x << 3) + (x << 1) + ch - '0';\n\treturn x * flag;\n}\n\nvoid add(int from,int to)\n{\n\tcnt ++;\n\tedge[cnt].to = to;\n\tedge[cnt].next = start[from];\n\tstart[from] = cnt;\n\treturn ;\n}\n\nint DFS(int x,int from)\n{\n\tsiz[x] = 1;\n\tnow ++;\n\tdfn[x] = now;\n\tdfn_id[now] = x;\n\tfor(int i = start[x] ; i ; i = edge[i].next)\n\t{\n\t\tint to = edge[i].to;\n\t\tif(to != from && dfn[to] == 0)siz[x] += DFS(to,x);\n\t}\n\treturn siz[x];\n}\n\nint DFS2(int x,int from)\n{\n\tsum[x] = a[x];\n\tfor(int i = start[x] ; i ; i = edge[i].next)\n\t{\n\t\tint to = edge[i].to;\n\t\tif(to != from)sum[x] += DFS2(to,x);\n\t}\n\treturn sum[x];\n}\n\nvoid build(int x,int l,int r)\n{\n\tT[x].l = l , T[x].r = r ;\n\tif(l == r){T[x].Max = sum[dfn_id[l]] ; return ;}\n\tint mid = ( l + r ) >> 1;\n\tbuild(x << 1 , l, mid);\n\tbuild(x << 1 | 1 , mid + 1 , r);\n\tT[x].Max = max(T[x << 1].Max , T[x << 1 | 1].Max);\n\treturn ;\n}\n\nint GetMax(int x,int l,int r)\n{\n\tif(l > r)return -INF;\n\tint Max = -INF;\n\tif(T[x].l >= l && T[x].r <= r)return T[x].Max;\n\tint mid = (T[x].l + T[x].r) >> 1;\n\tif(l <= mid)Max = max(Max,GetMax(x << 1 , l, r));\n\tif(r  > mid)Max = max(Max,GetMax(x << 1 | 1 , l , r));\n\treturn Max;\n}//\u7ebf\u6bb5\u6811\u627e\u6700\u5927\u503c\u7684\u677f\u5b50\n\nvoid Get_Ans(int x,int from,int Max)\n{\n\tif(x != 1)\n\t{\n\t\tint l = dfn[from],r = dfn[from] + siz[from] - 1;\n\t\tint L = dfn[x] , R = dfn[x] + siz[x] - 1;\n\t\tMax = max((GetMax(1,l + 1,L - 1),GetMax(1,R + 1 , r)),Max);\n        //\u66f4\u65b0\u6700\u5927\u503c\uff0c\u5f53\u524d\u70b9\u7684\u513f\u5b50\u8282\u70b9\u90fd\u4f1a\u7528\u8fd9\u4e2a\u6700\u5927\u503c\n        //l+1\u662f\u56e0\u4e3a\u5f53\u524d\u70b9\u7684\u6839\u8282\u70b9\u4e0d\u80fd\u9009,L-1\u662f\u56e0\u4e3a\u5b50\u6811\uff58\u5185\u7684\u70b9\u4e0d\u80fd\u9009\n        //R + 1\u662f\u56e0\u4e3a\uff32\u4ecd\u7136\u662f\u5b50\u6811x\u5185\u7684\u6700\u5927dfn\u5e8f\uff0c\u88ab\u5b50\u6811x\u5305\u542b\u4e86\n\t\tif(Max != -INF)\n\t\tAns = max(sum[x] + Max,Ans);\n\t}\n\tfor(int i = start[x] ; i ; i = edge[i].next)\n\t{\n\t\tint to = edge[i].to;\n\t\tif(to != from)Get_Ans(to,x,Max);//\u6362\u6839\u4e3a\u81ea\u5df1\u7684\u513f\u5b50\u8282\u70b9\n\t}\n\treturn ;\n}\n\nsigned main()\n{\n\tn = read();\n\tfor(int i = 1 ; i <= n ; i ++)a[i] = read();\n\tfor(int i = 1 ; i <= n - 1 ; i ++)\n\t{\n\t\tint u = read(), v = read();\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tDFS(1,0);//\u9884\u5904\u7406dfn\u6570\u7ec4,dfn_id\u6570\u7ec4\u4ee5\u53casiz\u6570\u7ec4\n\tDFS2(1,0);//\u9884\u5904\u7406sum\u6570\u7ec4\n\tbuild(1, 1 , n);\n\tGet_Ans(1,0,-INF);//\u6362\u6839\u83b7\u5f97\u7b54\u6848\n\tif(Ans >= -1e14)cout << Ans;\n    else cout << \"Impossible\";//\u5982\u679c\u7b54\u6848\u8fc7\u5c0f\u663e\u7136\u4e0d\u5408\u6cd5\uff0c\n\treturn 0;\n}\n```\n",
        "postTime": 1605700638,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF743D \u3010Chloe and pleasant prizes\u3011"
    },
    {
        "content": "\u6211\u6765\u5206\u4eab\u4e00\u4e2a\u65e0\u8111\u7684\u7b97\u6cd5~~ ~~\uff08\u5176\u5b9e\u662f\u6211\u61d2\u5f97\u60f3\uff09~~\n\n## dfs\u5e8f + \u7ebf\u6bb5\u6811\n\n\u6211\u7b2c\u4e00\u4e2a\u60f3\u5230\u7684\u662f\u679a\u4e3e\u6240\u6709\u70b9\uff0c\u7136\u540e\u518d\u679a\u4e3e\u4e00\u6b21\u6240\u6709\u975e\u7236\u8282\u70b9/\u5b50\u8282\u70b9\u7684**\u5b50\u6811\u7684\u548c**\n\n\u6734\u7d20\u7b97\u6cd5\u4e0d\u7528\u5199\u4e86\u5427\u3002\u3002\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u8003\u8651\u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\u518ddfs\u5e8f\u4e0b\u5f53R[u]<L[v]\u65f6\uff08u\u548cv\u65f6\u679a\u4e3e\u7684\u4e24\u4e2a\u70b9\uff09v\u80af\u5b9a\u4e0d\u662fu\u7684\u7236\u8282\u70b9/\u5b50\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u628a\u6bcf\u4e00\u4e2a\u70b9\u7684**\u5b50\u6811\u7684\u548c**\u6254\u5230dfs\u5e8f\u6784\u9020\u6210\u7684\u6570\u7ec4\uff08u\u70b9\u7684\u5b50\u6811\u7684\u548c\u7684\u5b58\u50a8\u4f4d\u7f6e\u5c31\u662fL[u]\uff0c \u53cd\u4e4b\uff0c\u7b2ci\u4e2a\u4f4d\u7f6e\u5b58\u7684\u662fdfs\u5e8f\u7684\u7b2ci\u4e2a\u70b9\uff09\n\n\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811build\u7684\u65f6\u5019\u5c31\u64cd\u4f5c\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 200005;\nint n, w[N];\nll sum[N], ans=-0x3f3f3f3f3f3f3f3f;\nll a[N*4];//\u7ebf\u6bb5\u6811\nint tot=0, c[N], L[N], R[N];\nvector<int> e[N];\nvoid up(int now){\n\ta[now] = max(a[now<<1], a[now<<1|1]);\n}\nvoid build(int l, int r, int now){\n\tif (l == r){\n\t\ta[now] = sum[c[l]];//c\u5c31\u662fdfs\u5e8f\u5b58\u50a8\u7684\u8282\u70b9\u7f16\u53f7\n\t\treturn;\n\t}\n\tint mid = (l+r)>>1;\n\tbuild(l, mid, now<<1);\n\tbuild(mid+1, r, now<<1|1);\n\tup(now);\n}\nll ask(int l, int r, int now, int s, int t){\n\tif (s <= l && r <= t) return a[now];\n\tint mid = (l+r)>>1;\n\tll res = -0x3f3f3f3f3f3f3f3f;\n\tif (s <= mid) res = max(ask(l, mid, now<<1, s, t), res);\n\tif (t > mid) res = max(ask(mid+1, r, now<<1|1, s, t), res);\n\treturn res;\n}\nvoid dfs1(int u, int fa){\n\tsum[u] = w[u];\n\tc[++tot] = u;\n\tL[u] = tot;\n\tfor (int i = 0; i < e[u].size(); i++){\n\t\tint v = e[u][i];\n\t\tif (v == fa) continue;\n\t\tdfs1(v, u);\n\t\tsum[u] += sum[v];\n\t}\n\tR[u] = tot;\n}\nint main(){\n\tstd::ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> w[i];\n\tfor (int i = 1; i < n; i++){\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t}\n\tdfs1(1, 0);\n\tbuild(1, n, 1);\n\tfor (int i = 1; i <= n; i++){\n\t\tif (R[i]+1 > n) continue;\n\t\tans = max(ask(1, n, 1, R[i]+1, n)+sum[i], ans);\n\t}\n\tif (ans >= -1e15) cout << ans;\n\telse cout << \"Impossible\";\n\treturn 0;\n\u73cd\u7231\u751f\u547d\uff0c\u8fdc\u79bb\u6284\u88ad\n} \n```\n\n## \u6700\u540e\u6c42\u7ba1\u7406\u5458\u5927\u5927\u901a\u8fc7\uff01\uff01QWQ",
        "postTime": 1583927036,
        "uid": 171288,
        "name": "Tony2",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF743D \u3010Chloe and pleasant prizes\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6811\u72b6DP\u7684\u5165\u95e8\u9898\uff0c\u800c\u4e14\u6ce8\u610f\u4e00\u4e0b\u6bd2\u7624\u6570\u636e\uff0c\u6211\u770b\u5230\u4e86\u4e0d\u4e0b20\u7ec420w\u7684\u6570\u636eqwq\u3002\n\n\u4e00\u5b9a\u8981\u5f00long long\uff01\n\n\u4e0b\u9762\u5f00\u59cb\u89e3\u6790\uff1a\n\n\u8fd9\u4e2a\u9898\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u6811\u72b6DP\uff1b\n\n\u4f46\u662f\u8fd9\u4e2a\u9898\u7684\u5b9e\u73b0\u7684\u601d\u60f3\u5c31\u662f\u4ece\u4e0b\u5230\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684dp\u503c\u662f\u4ee5\u8be5\u8282\u70b9\u4e3a\u539f\u59cb\u8282\u70b9\u7684\u6700\u5927\u503c\n\n\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u4ece\u4e0b\u5230\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u548c\u90fd\u8981\u6c42\u51fa\u6765\uff0c\u7136\u540e\u6211\u4eec\u518d\u5728\u8fd9\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e0e\u8fd9\u4e2a\u70b9\u8fdb\u884c\u4e00\u6b21\u53d6\u6700\u5927\u503c\n\n\u8fd9\u6837\u6211\u4eec\u5efa\u7acb\u7684\u4e00\u4e2a f[] \u6570\u7ec4\u5c31\u6ee1\u8db3\u4e86\u5bf9\u4e8e\u8be5\u70b9\u6c42\u6700\u5927\u503c\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u4e0b\u5230\u4e0a\u6765\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\u5c31\u6ee1\u8db3\u4e86\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u5b50\u6811\u548c\u5747\u5df2\u7ecf\u88ab\u66f4\u65b0\u4e86(\u8bc1\u660e\u4e86\u8be5\u65b9\u6cd5\u7684\u6b63\u786e\u6027)\uff0c\u6700\u540e\u6211\u4eec\u9488\u5bf9\u4e8e\u6839\u8282\u70b9\u6c42\u6700\u5927\u503c\u5c31\u884c\uff1b\n\n\u6700\u540e\uff0c\u522b\u5fd8\u4e86\u521d\u59cb\u5316\u3002\n\nPS.\u6700\u540e\u522b\u5fd8\u4e86\u5bf9\u4e8e\u4e00\u79cd\u957f\u94fe\u7684\u60c5\u51b5\u8f93\u51faImpossible(\u4e0d\u8fc7\u6211\u5728\u4ee3\u7801\u4e2d\u6ca1\u6709\u76f4\u63a5\u5730\u5224\u65ad\uff0c\u800c\u662f\u6700\u540e\u5728\u66f4\u65b0ans\u503c\u7684\u65f6\u5019\u8fdb\u884c\u7684\u5224\u65ad)\n\n\u4e0b\u9762\u4e0a\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n(\u8fd9\u4e2a\u9898dalao\u8bf4\u53ef\u4ee5\u6709\u4e00\u79cd\u8dd1\u5f97\u66f4\u5feb\u7684\u5b9e\u73b0\uff0c\u4e0d\u8fc7\u672c\u849f\u84bb\u61d2\uff0c\u5c31\u6ca1\u6709\u518d\u5199\u4e00\u904d\uff0c\u51d1\u6d3b\u7740\u770b\u5427qwq)\n\n    #include<iostream>\n    #include<cstdio>\n    #include<vector>\n    #include<cmath>\n    #include<algorithm>\n    #include<set>\n    #include<map>\n    #define inf 2147483647888888\n    #define ll long long\n    using namespace std;\n    vector<ll> a[200866];  //\u4f7f\u7528vector\u6570\u7ec4\u6765\u50a8\u5b58\u8282\u70b9\uff0c\u66f4\u65b9\u4fbf\u4e8e\u8868\u8fbe \n    ll b[200866];\n    ll f[200866];  //\u4e2d\u8f6c \n    ll g[200866],x,y,n,ans=-inf;  //\u6700\u5f00\u59cb\u4e0d\u8981\u5fd8\u4e86\u8981\u5c06ans\u91cd\u7f6e\u4e3a-inf \n    void dfs(ll fa,ll n)\n    {\n        if(a[n].size()==1&&n!=1)  //\u5982\u679c\u9012\u5f52\u5230\u4e86\u8fb9\u754c\u5c31\u9000\u51fa\u9012\u5f52 \n        {\n            g[n]=b[n];  //\u4e0d\u8981\u5fd8\u4e86\u8fd9\u4e00\u6b65qwq \n            return ;\n        }\n        ll sum=b[n];  //\u9009\u53d6\u8fd9\u4e2a\u70b9 \n        for(ll i=0;i<a[n].size();i++)  //\u904d\u5386\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u5b69\u5b50\uff0c\u5728\u8fd9\u4e00\u4e9b\u64cd\u4f5c\u4e2d\u9009\u53d6 \n        {\n            ll pos=a[n][i]; \n            if(pos==fa)\n            continue;\n            dfs(n,pos);\n            sum+=g[pos];  //sum \u548cg\u8d77\u5230\u4e86\u4e00\u79cd\u4e2d\u8f6c\u540c\u65f6\u4e5f\u4fdd\u8bc1\u4e86\u539f\u56fe\u4e2d\u7684\u53d8\u91cf\u4e0d\u53d1\u751f\u53d8\u5316 \n        }\n        g[n]=sum;\n    }\n    void GetDeep(ll fa,ll n)\n    {\n        if(a[n].size()==1&&n!=1)  //\u5982\u679c\u9012\u5f52\u5230\u4e86\u8fb9\u754c\u5c31\u9000\u51fa \n        {\n            f[n]=g[n];\n            return ;\n        }\n        f[n]=g[n]; \n        ll maxn1=-inf,maxn2=-inf,sum=0;  //\u8fd9\u4e4b\u95f4maxn2\u5176\u5b9e\u662f\u8d77\u5230\u4e86\u4e00\u4e2a\u4e2d\u8f6c\u7684\u4f5c\u7528\uff0c\u4e0d\u8981\u5fd8\u4e86\u521d\u59cb\u5316 \n        for(ll i=0;i<a[n].size();i++)\n        {\n            ll pos=a[n][i];\n            if(pos==fa)  //\u5047\u5982\u5df2\u7ecf\u5230\u8fbe\uff0c\u5c31\u9000\u51fa \n            continue;\n            GetDeep(n,pos);  //\u9488\u5bf9\u4e8e\u4e0b\u4e00\u5c42\u8fdb\u884c\u64cd\u4f5c \n            if(f[pos]>maxn1)  //\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a \n            {\n                maxn2=maxn1;  // \u8fd9\u4e2a\u5730\u65b9\u6211\u8c03\u4e86\u534a\u5c0f\u65f6 \n                maxn1=f[pos];\n            }\n            else\n            maxn2=max(maxn2,f[pos]);\n            f[n]=max(f[n],f[pos]);\n        }\n        ans=max(ans,maxn1+maxn2);  //\u8fd9\u4e2a\u5730\u65b9\u5c31\u662f\u4e00\u4e2a\u6c42\u6700\u5927\u503c \n    }\n    int main()\n    {\n        scanf(\"%lld\",&n);\n        for(ll i=1;i<=n;i++)\n        scanf(\"%lld\",&b[i]);\n        for(ll i=0;i<n-1;i++)\n        {\n            scanf(\"%lld%lld\",&x,&y); //\u8fd9\u91cc\u6211\u7528\u4e86\u4e00\u4e2avector\u6765\u50a8\u5b58\u53d8\u91cf\uff0c\u8fd9\u6837\u4fbf\u53ef\u4ee5\u66f4\u597d\u5730\u5b9e\u73b0\u50a8\u5b58 \n            a[y].push_back(x);  //\u4e24\u4e2apush\u7684\u64cd\u4f5c \n            a[x].push_back(y);\n        }\n        dfs(0,1);\n        GetDeep(0,1);\n        if(ans<-2147483647)\n        //\u8fd9\u4e2a\u5730\u65b9\u5176\u5b9e\u662f\u4e00\u4e2a\u5f88\u7384\u5b66\u7684\u4f18\u5316\uff0c\u56e0\u4e3a\u6211\u521d\u59cb\u7f6eans==-inf\u7684\u65f6\u5019\u4f1a\u53d1\u73b0\u5b83\u8fd9\u4e2a\u70b9\u7684\u521d\u59cb\u503c\u5047\u5982\u5728\u6ca1\u6709\u66f4\u6539\u7684\u5730\u65b9\u4e5f\u4f1a\u6709\u4e00\u5b9a\u7684\u66f4\u6539 \n        //\u4f46\u662f\u5b83\u7684\u521d\u59cb\u503c\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u6539\u5730\u5f88\u5927 \n        {\n            printf(\"Impossible\");\n            return 0;\n        }\n        printf(\"%lld\",ans);\n        return 0;\n    }\n \n\u5b8c\u7ed3\u6492\u82b1",
        "postTime": 1551355037,
        "uid": 144139,
        "name": "6954717a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF743D \u3010Chloe and pleasant prizes\u3011"
    }
]