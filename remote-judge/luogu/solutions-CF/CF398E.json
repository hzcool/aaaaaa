[
    {
        "content": "[link](https://codeforces.com/contest/398/problem/E)\n\n\u51fa\u9898\u4eba\u7684\u9898\u89e3\u5495\u4e86 7 \u5e74\u6ca1\u5199\u5b8c\uff0c\u81f3\u4eca\u4ecd\u662f draft solution\u3002![fad](https://cdn.luogu.com.cn/upload/pic/62250.png)\n\n\u628a\u6bcf\u4e2a\u70b9\u5411\u5979\u5e94\u8be5\u53bb\u5411\u7684\u4f4d\u7f6e\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u5c31\u4f1a\u5f62\u6210\u82e5\u5e72\u4e2a\u73af\u548c $k$ \u6761\u94fe\u3002\u6bcf\u6b21\u64cd\u4f5c\u9009\u53d6\u4e0d\u4ea4\u7684\u70b9\u5bf9\u96c6\u5408\uff0c\u6bcf\u4e2a\u70b9\u5bf9\u4ea4\u6362\u51fa\u8fb9\u3002\u6211\u4eec\u8981\u901a\u8fc7\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u4f7f\u5f97\u6574\u5f20\u56fe\u5f62\u6210 $n$ \u4e2a\u81ea\u73af\u3002\n\n\u4e00\u4e2a\u7ed3\u8bba\u662f\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u4e00\u5b9a\u4e0d\u8d85\u8fc7\u4e24\u6b21\u3002\n\n\u624b\u73a9\u4e00\u4e9b\u4f8b\u5b50\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e8c\u5143\u73af\u53ef\u4ee5\u4e00\u6b21\u5b8c\u6210\uff0c\u73af\u957f\u5927\u4e8e\u4e8c\u7684\u6700\u4f18\u7684\u65b9\u6848\u662f\u901a\u8fc7\u4e00\u8f6e\u4ea4\u6362\u628a\u6240\u6709\u73af\u90fd\u53d8\u6210\u82e5\u5e72\u4e2a\u4e8c\u5143\u73af\uff0c\u6700\u540e\u518d\u6765\u4e00\u8f6e\u4ea4\u6362\u6765\u5b8c\u6210\u3002\n\n\u6211\u4eec\u731c\u6d4b\u8fd9\u4e1c\u897f\u662f\u5947\u5076\u6027\u76f8\u5173\u7684\uff0c\u5177\u4f53\u7684\uff0c\u6bd4\u5982\u4e00\u4e2a\u5947\u73af\u53ef\u4ee5\u8fd9\u6837\u6784\u9020\uff08\u7c89\u8272\u8fb9\u4ee3\u8868\u4ea4\u6362\u7684\u70b9\u5bf9\uff09\uff1a\n\n![](https://z3.ax1x.com/2021/07/05/Rhf0JA.png)\n\n\u65b9\u6848\u6570\u4e3a $\\text{\u73af\u957f}$\u3002\n\n\u5076\u73af\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u4f46\u662f\u4f1a\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\n\n![](https://z3.ax1x.com/2021/07/05/Rhfwid.png)\n\n\u65b9\u6848\u6570\u4e3a $\\text{\u73af\u957f}/2+\\text{\u73af\u957f}/2$\uff0c\u4e5f\u662f $\\text{\u73af\u957f}$ \u79cd\u3002\n\n\u4f46\u662f\u6ca1\u6709\u5b8c\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u8003\u8651\u4e86\u6bcf\u4e2a\u73af\u672c\u8eab\uff0c\u4e24\u4e2a\u7b49\u957f\u7684\u73af\u4e5f\u53ef\u4ee5\u5f62\u6210\u4e00\u7c7b\u65b9\u6848\uff1a\n\n![](https://z3.ax1x.com/2021/07/05/RhfaIH.png)\n\n\u65b9\u6848\u6570\u4e3a $\\text{\u73af\u957f}$\u3002\n\n\u5176\u5b83\u7684\u60c5\u51b5\u6211\u6784\u9020\u4e0d\u51fa\u6765\uff0c\u4e5f\u786e\u5b9e\u6ca1\u6709\u3002\u5982\u679c\u6709\u4f1a\u7406\u6027\u8bc1\u660e\u7684\u5927\u4f6c\uff0c\u6073\u8bf7\u6765 educate \u6211\u4e00\u987f\u3002\n\n\u6839\u636e\u8fd9\u4e9b\u6211\u4eec\u53ef\u4ee5 DP \u51fa\u6765 $f(i,j)$ \u8868\u793a\u73af\u957f\u4e3a $i$ \u7684\u73af\u6709 $j$ \u4e2a\u7684\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u4e3a\n$$\nf(i,j)\\leftarrow f(i,j-1)\\times i+f(i,j-2)\\times i\\times(j-1)\n$$\n\uff0c\u53ef\u4ee5 $\\mathcal O(n\\log n)$ \u9884\u5904\u7406\u6240\u6709\u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u5173\u6ce8\u5269\u4e0b\u7684 $k$ \u6761\u94fe\u3002\u8fd9\u4e9b\u94fe\u4e5f\u662f\u8981\u5f62\u6210\u73af\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u529b\u679a\u4e3e\u54ea\u4e9b\u94fe\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u4e5f\u5c31\u662f dfs \u679a\u4e3e\u96c6\u5408\u5212\u5206\u65b9\u6848\uff0c\u65b9\u6848\u6570\u4e0a\u754c\u4e3a\u8d1d\u5c14\u6570 $B_{12}=4213597$\uff0c\u7136\u540e $\\mathcal O(k)$ \u8ba1\u7b97\u6700\u7ec8\u7b54\u6848\u5e76\u6c42\u548c\u3002\u6ce8\u610f\u6bcf\u4e2a\u96c6\u5408\u5185\u5f62\u6210\u73af\u7684\u987a\u5e8f\u6240\u8d21\u732e\u7684\u7cfb\u6570\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\mathcal O(n\\log n+B_kk)$\u3002\n\n\u4e0d\u8fc7\u8fd8\u9700\u8981\u6ce8\u610f\u4e00\u5143\u73af\u548c\u4e8c\u5143\u73af\u7684\u95ee\u9898\u3002\n\n- \u5982\u679c\u5b89\u6392\u5b8c\u6240\u6709\u94fe\u540e\uff0c\u6574\u5f20\u56fe\u4e2d\u6700\u5927\u73af\u957f\u5927\u4e8e\u7b49\u4e8e $3$\uff0c\u4e5f\u5c31\u662f\u64cd\u4f5c\u6b21\u6570\u4e3a $2$\uff0c\u90a3\u4e48\u4e00\u4e8c\u5143\u73af\u662f\u53ef\u4ee5\u4e0d\u6309\u7167\u6700\u4f18\u65b9\u6848\u5904\u7406\u7684\uff0c\u53ea\u8981\u6b65\u6570\u5728\u4e24\u6b21\u4e4b\u5185\u5373\u53ef\uff0c\u4ed4\u7ec6\u60f3\u60f3\u53d1\u73b0\u65b9\u6848\u6570 DP \u65b9\u6cd5\u548c\u5176\u5b83\u73af\u662f\u4e00\u6837\u7684\uff0c\u76f4\u63a5\u7528 $f$ \u503c\u5373\u53ef\uff1b\n\n- \u5982\u679c\u5927\u73af\u957f\u5c0f\u4e8e $3$\uff0c\u90a3\u4e48\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u4e3a $1$\uff0c\u90a3\u4e48\u65b9\u6848\u662f\u56fa\u5b9a\u7684\u4e00\u79cd\u3002\n\n\n**code**\n\n```cpp\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\nusing i64 = long long;\n\nconst int P = 1e9 + 7;\n\nint power(int a, int b) {\n    int res = 1;\n    while (b) {\n        if (b & 1)\n            res = (i64) res * a % P;\n        a = (i64) a * a % P;\n        b >>= 1;\n    }\n    return res;\n}\n\nint inverse(int x) {\n    return power(x, P - 2);\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n\n    int n, m;\n    std::cin >> n >> m;\n\n    std::vector<std::vector<int>> f(n + 1), inv_f(n + 1);\n    for (int i = 1; i <= n; ++i) {\n        f[i].resize(n / i + 1);\n        inv_f[i].resize(n / i + 1);\n        f[i][0] = inv_f[i][0] = 1;\n        for (int j = 1; j <= n / i; ++j) {\n            f[i][j] = (i64) i * f[i][j - 1] % P;\n            if (j >= 2)\n                f[i][j] = (f[i][j] + (i64) i * (j - 1) % P * f[i][j - 2] % P) % P;\n            inv_f[i][j] = inverse(f[i][j]);\n        }\n    }\n\n    std::vector<int> to(n), deg(n);\n    for (int i = 0; i < n; ++i) {\n        std::cin >> to[i];\n        --to[i];\n        if (~to[i])\n            ++deg[to[i]];\n    }\n    std::vector<int> chain, circle;\n    std::vector<int> vis(n);\n    int three_more = 0;\n    for (int i = 0; i < n; ++i) {\n        if (!deg[i]) {\n            int len = 0;\n            for (int j = i; ~j; j = to[j]) {\n                vis[j] = true;\n                ++len;\n            }\n            chain.push_back(len);\n        }\n    }\n    for (int i = 0; i < n; ++i) {\n        if (!vis[i]) {\n            int len = 0;\n            for (int j = i; !vis[j]; j = to[j]) {\n                vis[j] = true;\n                ++len;\n            }\n            circle.push_back(len);\n            three_more += len >= 3;\n        }\n    }\n    std::vector<int> cnt(n + 1);\n    for (int i : circle)\n        ++cnt[i];\n    int pre_ans = 1;\n    for (int i = 1; i <= n; ++i)\n        pre_ans = (i64) pre_ans * f[i][cnt[i]] % P;\n\n    int ans = 0;\n    std::vector<int> div, cnt_ch;\n    std::function<void(int, int)> dfs = [&](int x, int base) {\n        if (x == m) {\n            int now_ans = pre_ans;\n            for (int i : div) {\n                now_ans = (i64) now_ans * inv_f[i][cnt[i]] % P;\n                ++cnt[i];\n                now_ans = (i64) now_ans * f[i][cnt[i]] % P;\n                three_more += i >= 3;\n            }\n            if (three_more)\n                ans = (ans + (i64) now_ans * base) % P;\n            else \n                ans = (ans + base) % P;\n            for (int i : div) {\n                --cnt[i];\n                three_more -= i >= 3;\n            }\n            return;\n        }\n        div.push_back(chain[x]);\n        cnt_ch.push_back(1);\n        dfs(x + 1, base);\n        div.pop_back();\n        cnt_ch.pop_back();\n        for (int i = 0; i < int(div.size()); ++i) {\n            div[i] += chain[x];\n            ++cnt_ch[i];\n            dfs(x + 1, (i64) base * (cnt_ch[i] - 1) % P);\n            div[i] -= chain[x];\n            --cnt_ch[i];\n        }\n    };\n    dfs(0, 1);\n    std::cout << ans << '\\n';\n    \n    return 0;\n}\n```",
        "postTime": 1625461530,
        "uid": 52243,
        "name": "RenaMoe",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF398E. Sorting Permutations"
    }
]