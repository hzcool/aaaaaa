[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u4e2a $n$\uff0c\u9700\u8981\u628a $n$ \u7528\u82e5\u5e72\u4e2a\u7528 $1$ \u7ec4\u6210\u7684\u6570\u901a\u8fc7\u52a0\u548c\u51cf\u8868\u793a\u51fa\u6765\uff0c\u6c42\u6700\u5c11\u9700\u8981\u7528\u7684 $1$ \u7684\u4e2a\u6570\u3002\n\n\u4f8b\uff1a$121=111+11-1$\n\n\u6240\u4ee5\u7528\u4e86 $6$ \u4e2a $1$ $(n \\leq 10^{15})$\u3002\n\n## \u5177\u4f53\u601d\u8def\n\u8fd9\u9053\u9898\u8868\u9762\u770b\u4e0a\u53bb\u633a\u96be\uff08\u56e0\u4e3a $n \\leq 10^{15}$)\uff0c\u4f46\u4ed4\u7ec6\u601d\u8003\u5c31\u4f1a\u53d1\u73b0\uff0c**\u5728 $10^{15}$ \u5185\uff0c\u4ec5\u5305\u542b $1$\u3001$11$\u3001$111$\u3001$1111$ \u7b49 $15$ \u4e2a\u6570**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230**\u6df1\u641c**\uff01\u7531\u4e8e\u8fd9\u9898\u7684\u6027\u8d28\uff0c\u6bcf\u6b21\u641c\u80af\u5b9a\u80fd\u5f97\u5230\u4e00\u4e2a\u89e3\uff0c\u7136\u540e\u4e4b\u540e\u641c\u7684\u65f6\u5019**\u5982\u679c $1$ \u7684\u6570\u91cf\u5927\u4e8e\u8fd9\u4e2a\u89e3\uff0c\u5c31\u53ef\u4ee5\u8df3\u51fa**\uff0c\u6012\u526a\u4e86\u4e00\u5927\u6ce2\u679d\u3002\uff08\u6700\u4f18\u6027\u526a\u679d\uff09\n\n\u4e5f\u5c31\u662f\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\uff0c\u6162\u6162**\u628a\u4f4d\u6570\u524a\u6210 $0$**\u3002\u56e0\u4e3a\u628a\u7b2c $i$ \u4f4d\u6d88\u9664\u6210 $0$ \u540e\uff0c\u53ef\u4ee5\u9009\u62e9\u6570\u4fdd\u8bc1**\u8fd9\u4e00\u4f4d\u4e0d\u4f1a\u518d\u53d8\u56de $1$**\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u4f4d\u4e00\u4f4d\u524a\u4e0b\u53bb\u3002\n\n\u6df1\u641c\u53ea\u6709\u4e24\u79cd\u65b9\u5411\uff0c\u4f8b\u5982\u7b2c $i$ \u4f4d\u662f $x$\uff0c\n1. \u7b2c\u4e00\u79cd\u65b9\u5411\u662f\u5c31\u662f**\u641e $x$ \u4e2a $1$ \u628a\u5b83\u524a\u4e86**\uff1b\n\n2. \u53e6\u4e00\u79cd\u662f**\u641e\u4e00\u5806 $1$ \u628a\u5b83\u52a0\u4e0a\u53bb\uff0c\u7136\u540e\u641e\u4e00\u4e2a\u6bd4\u524d\u9762\u90a3\u4e2a\u4f4d\u6570\u591a\u4e00\u4f4d\u7684 $1$ \u628a\u5b83\u518d\u524a\u6389**\u3002\n\n\u8fd9\u4e24\u79cd\u90fd\u6709\u53ef\u80fd\uff0c\u800c\u5176\u4ed6\u7684\u65b9\u6cd5\u90fd\u4e0d\u5982\u8fd9\u4e24\u79cd\u3002\n\n\u6240\u4ee5\u54d0\u54d0\u54d0\u5c31\u662f\u641c\u5566\uff01\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint ans,len;\nll one[17]={0,1,11,111,1111,11111,111111,1111111,11111111,111111111,1111111111,11111111111,111111111111,1111111111111,11111111111111,111111111111111,1111111111111111};\nvoid dfs(ll x,int sum)\n{\n    int a,b;\n    if(sum>=ans) \n\t\treturn;//\u5982\u679c1\u7684\u6570\u91cf\u5927\u4e8e\u8fd9\u4e2a\u89e3\uff0c\u5c31\u53ef\u4ee5\u8df3\u51fa\n    if(x==0)//\u641c\u7d22\u5230\u8fb9\u754c \n    {\n        ans=sum;\n        return;\n    }\n    if(x<0) \n\t\tx=-x;\n\t//\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\uff0c\u6162\u6162\u628a\u4f4d\u6570\u524a\u62100\n    ll y=x;\n    int t=0;\n    while(y) \n    {\n    \tt++;\n\t\ty/=10;\n\t}\n    ll reta=x;\n\tll retb=one[t+1]-x;\n    ll h=pow(10,t-1);\n    int sa=0,sb=t+1;\n    while(reta>=h) \n\t\treta-=one[t],sa+=t;\n    while(retb>=h) \n\t\tretb-=one[t],sb+=t;\n\t//\u4e24\u79cd\u65b9\u5411\uff0c\u4e00\u79cd\u52a0\uff0c\u4e00\u79cd\u51cf \n    dfs(reta,sum+sa);\n    dfs(retb,sum+sb);\n    return;\n}\n\nint main()\n{\n    ll x;\n    while(scanf(\"%lld\",&x)!=EOF)//\u5982\u679c\u6ca1\u6709\u8f93\u5165\u5b8c\u6bd5\uff0c\u5c31\u7ee7\u7eed\u8f93\u5165\n    {\n        ans=1e9;//\u5c06ans\u521d\u59cb\u5316\u4e3a\u6781\u5927\u503c \n        dfs(x,0);//\u5f00\u59cb\u641c\u7d22\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1683026680,
        "uid": 552610,
        "name": "__Shine__",
        "ccfLevel": 0,
        "title": "CF440C \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\uff1a One-Based Arithmetic\n\ncodeforce\u7684\u9898\uff0c\u633a\u6709\u610f\u601d\u7684\n\n\u9898\u76ee\u94fe\u63a5\uff1ahttp://codeforces.com/problemset/problem/440/C\n\n\u9898\u76ee\u5927\u610f\u662f\uff1a\u7ed9\u4f60\u4e00\u4e2an\uff0c\u4f60\u9700\u8981\u628an\u7528\u82e5\u5e72\u4e2a1\u7ec4\u6210\u6570\u901a\u8fc7\u52a0\u52a0\u51cf\u51cf\u8868\u793a\u51fa\u6765\uff0c\u6c42\u6700\u5c11\u7528\u76841\u7684\u4e2a\u6570\u3002\n\u4f8b\uff1a121=111+11-1 \u7528\u4e866\u4e2a1\u3002\n![](https://cdn.luogu.com.cn/upload/pic/14091.png)\n\n\n------------\n\n\u7b2c\u4e00\u770bn\u7684\u8303\u56f4\uff0c\u89c9\u5f97\u7206\u641c\u6ca1\u620f\uff0c\u80af\u5b9a\u662f\u6570\u5b66\u9898\uff0c\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3\uff0c\u6ca1\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u5c0f\u4e8e1e15\u7684\u6570\u4e2d\uff0c\u4ec5\u75311\u7ec4\u6210\u7684\u6570\u5f88\u5c11\uff1a\n\n1\n\n11\n\n111\n\n1111 \n\n11111 \n\n111111 \n\n1111111\n\n11111111\n\n111111111\n\n1111111111\n\n11111111111\n\n111111111111\n\n1111111111111 \n\n11111111111111\n\n111111111111111\n\n\u53ea\u6709\u8fd9\u5341\u4e94\u4e2a\uff0c\u6240\u4ee5\u679a\u4e3e\u5c31\u597d\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u60f3\u679a\u4e3e\u65b9\u6cd5\u4e86\u3002\n\n\u9996\u5148\u8003\u8651\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5047\u8bbe\u5b83\u6709x\u4f4d\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u662f\u7528\u5c0f\u4e8e\u7b49\u4e8ex\u4f4d\u76841\u53bb\u52a0\uff0c\u6216\u8005\u4e0a\u6765\u52a0\u4e2ax+1\u4f4d\u76841\uff0c\u518d\u7528\u5c0f\u4e8e\u7b49\u4e8ex\u4f4d\u76841\u53bb\u51cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0a\u6765\u5c31\u679a\u4e3e\u6700\u9ad8\u4f4d\u6570\u76841\uff0c\u518d\u4e00\u70b9\u70b9\u964d\u4f4e\u679a\u4e3e\u7684\u4f4d\u6570\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2ai\u4f4d\u76841\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u52a0\u5b83\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u51cf\u5b83\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u8981\u8fdb\u884c\u4e24\u4e2a\u51b3\u7b56\uff0c\u9012\u5f52\u6c42\u89e3\uff0c\u6700\u540e\u4f20\u9012\u56de\u6765\u9700\u8981\u7684\u6700\u5c11\u4f4d\u6570\u76841\u3002\u4f46\u662f\u5176\u5b9e\u5f88\u4e0d\u597d\u5199\uff0c\u81f3\u5c11\u6211\u662f\u8fd9\u4e48\u89c9\u5f97\u7684\uff0c\u53cd\u6b63\u6211\u5199\u4e86\u597d\u4e45\uff0c\u8111\u5b50\u90fd\u6210\u6d46\u7cca\u4e86\uff0c\u4f30\u8ba1\u662f\u6211\u6bd4\u8f83\u7b28\u3002\n\n\u5177\u4f53\u5199\u7684\u601d\u8def\u662f\uff1a\n\u6211\u4eec\u679a\u4e3ei\u4f4d\u76841\uff0c\u53bb\u4e00\u70b9\u70b9\u51d1\u6210x\uff0c\u521a\u5f00\u59cb\u5728\u9012\u5f52\u51fd\u6570\u91cc\u5b58x\u548cx\u7684\u4f4d\u6570+1\uff08\u540e\u9762\u7528dig\u4ee3\u66ff\uff09\uff0c\u8868\u793a\u6211\u4eec\u73b0\u5728\u8981\u7528dig\u4f4d\u76841\u53bb\u62fcx\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u8981\u52a0dig\u4f4d\u76841\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u6027\u52a0\u6ee1\uff0c\u50cf\u8fd9\u6837\uff1a55->11\u00d75\u6216\u8005\u662f64=11\u00d75+...\uff0c\u4e00\u6b21\u6027\u628adig\u4f4d\u76841\u4e00\u76f4\u52a0\u5230\u4e0d\u80fd\u52a0\u4e3a\u6b62\uff0c\u7136\u540e\u518d\u7528dig-1\u4f4d\u76841\u53bb\u586b\u8865\u5269\u4e0b\u7684\u3002\u90a3\u4e48\u5982\u679c\u662f\u51cf\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528dig\u4f4d\u76841\u51cf\u53bbx\uff0c\u7136\u540e\u5269\u4e0b\u7684\u90a3\u4e2a\u6570\u4e0d\u5c31\u662f\u6211\u4eec\u9700\u8981\u518d\u4e00\u70b9\u70b9\u52a0\u56de\u6765\u7684\u90a3\u4e2a\u4e48\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u51cf\u6cd5\u53d8\u6210\u4e86\u52a0\u6cd5\uff0c\u4f8b\uff1a999=1111-111-1\uff0c\u5f53\u6211\u4eec\u679a\u4e3e4\u4f4d\u76841\u65f6\uff0c\u6211\u4eec\u9009\u62e9\u51cf\u6cd5\uff0c\u5c31\u6210\u4e86\u6211\u4eec\u8981\u75283\u4f4d\u4e00\u4e0b\u76841\u53bb\u62fc1111-999\u4e86\uff0c\u540e\u9762\u5982\u679c\u518d\u9047\u5230\u51cf\u6cd5\uff0c\u4e00\u6837\u7684\u9053\u7406\u53bb\u8f6c\u5316\u3002\n\n\n------------\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nll A[20];\nll n;\ninline ll read()//\u8bfb\u5165\u4f18\u5316\n{\n    ll fl=1ll,rt=0ll; char ch=getchar();\n    while(ch<'0'||ch>'9'){ if(ch=='-') fl=-1ll; ch=getchar(); }\n    while(ch>='0'&&ch<='9'){ rt=rt*10ll+ch-'0'; ch=getchar(); }\n    return fl*rt;\n}\nint Get_n(ll x)//\u83b7\u5f97n\u7684\u6570\u5b57\u4f4d\u6570\uff0c\u597d\u50cf\u53ef\u4ee5\u5728\u8bfb\u4f18\u4e2d\u5b8c\u6210\u54ce\n{\n    int ret=0ll;\n    while(x!=0)\n    {\n        x/=10;\n        ret++;\n    }\n    return ret;\n}\nll dfs(ll x,ll dig)//\u73b0\u5728\u6211\u4eec\u8981\u6d88\u9664\u7684\u6570\u4e3ax\uff0c\u6211\u4eec\u7528\u4f4d\u6570\u4e3adig\u76841\u6765\u6d88\u9664\n{\n    ll use=x/A[dig]; x=x%A[dig];//\u4e00\u6b21\u6027\u5427dig\u4f4d\u76841\u90fd\u52a0\u4e0a\n    if(x==0) return dig*use;\n    //dig+dfs(A[dig]-x,dig-1)\u7528\u6765\u8ba1\u7b97\u591a\u52a0\u4e00\u70b9\u518d\u53bb\u51cf\u7684\u60c5\u51b5\n    //dfs(x,dig-1)\u7528\u6765\u8ba1\u7b97\u7ee7\u7eed\u52a0\u7684\u60c5\u51b5\n    else return dig*use+min(dig+dfs(A[dig]-x,dig-1),dfs(x,dig-1));\n}\nint main()\n{\n\t//\u6253\u51fa\u4e0a\u9762\u5217\u4e3e\u76841111...\u7684\u90a3\u4e2a\u8868\n    for(int i=1;i<=17;i++) A[i]=A[i-1]*10ll+1ll;\n    n=read();\n    int Q=Get_n(n);\n    printf(\"%I64d\\n\",dfs(n,Q+2ll));\n    return 0;\n}\n```",
        "postTime": 1514987054,
        "uid": 21596,
        "name": "Forever\u4e36CIL",
        "ccfLevel": 6,
        "title": "CF One-Based Arithmetic"
    }
]