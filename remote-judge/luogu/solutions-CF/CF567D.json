[
    {
        "content": "\u770b\u5230\u9898\u89e3\u6ca1\u4eba\u5199 $multiset$ \u4e8e\u662f\u6765\u5199\u4e00\u53d1\u9898\u89e3\u3002\n\n\u9996\u5148\u8003\u8651\u6bcf\u4e2a\u70ae\u5f39\u4f1a\u628a\u600e\u6837\u4e00\u4e2a\u533a\u95f4\u62c6\u5f00\uff0c\u5047\u8bbe\u73b0\u5728\u70ae\u5f39\u5c04\u5411 $x$ \uff0c\u663e\u7136\u6211\u4eec\u7ef4\u62a4\u6240\u6709\u7684\u65e0\u6cd5\u653e\u7f6e\u7684\u70b9\uff0c\u5728\u8fd9\u4e2a\u96c6\u5408\u4e2d\u627e $x$ \u7684\u524d\u9a71\u548c\u540e\u7ee7\u8bb0\u4e3a $l,r$ \u3002\u90a3\u4e48\u6211\u4eec\u76f8\u5f53\u4e8e\u628a\u539f\u6765\u4e00\u4e2a $r-l-1$ \u957f\u5ea6\u7684\u533a\u95f4\u62c6\u6210\u4e86\u957f\u5ea6\u5206\u522b\u4e3a $x-l-1,r-x-1$ \u7684\u4e24\u4e2a\u533a\u95f4\u3002\u6211\u4eec\u518d\u8003\u8651\u6bcf\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u4e00\u4e2a\u957f\u5ea6\u4e3a $y$ \u7684\u533a\u95f4\uff0c\u80fd\u653e\u4e0b $(y+1)/a$ \u4e2a\u5c0f\u533a\u95f4\uff08\u8fd9\u5e94\u8be5\u5f88\u663e\u7136\uff09\u3002\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u8003\u8651\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u65f6\u51cf\u53bb\u5927\u533a\u95f4\u7684\u8d21\u732e\u518d\u52a0\u4e0a\u4e24\u4e2a\u5c0f\u533a\u95f4\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n```c++\n//QwQcOrZ yyds!!!\n#include<bits/stdc++.h>\nint n,k,a,m,x,p,p1,ans;\nmultiset<int>S;\nsigned main()\n{\n\tn=read(),k=read(),a=read();\n\tm=read();\n\tS.insert(0);\n\tS.insert(n+1);\n\tans+=n/(a+1)+(n%(a+1)==a);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tx=read();\n\t\tp=*(S.lower_bound(x));\n\t\tp1=*(--S.lower_bound(x));\n\t\tans-=(p-p1)/(a+1);\n\t\tans+=(p-x)/(a+1);\n\t\tans+=(x-p1)/(a+1);\n\t\tif (ans<k)\n\t\t{\n\t\t\twriteln(i);\n\t\t\treturn 0;\n\t\t}\n\t\tS.insert(x);\n\t}\n\twriteln(-1);\n}\n/*\n\n*/\n",
        "postTime": 1612443751,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF567D \u3010One-Dimensional Battle Ships\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n**upd on 220809\uff1a\u4ee3\u7801\u7c98\u9519\u4e86\uff0c\u6211\u81ea\u88c1\u2026\u2026**\n\n\u8fd9\u662f\u9898\u89e3\u533a\u4e2d\u7b2c\u4e00\u4e2a\u7406\u8bba\u6700\u52a3 $\\mathcal O(n)$ \u7684\u89e3\u6cd5\u3002\n\n### \u601d\u8def\n\n\u56e0\u4e3a\u300c\u67d0\u4e00\u65f6\u523b\u662f\u5426\u4e00\u5b9a\u88ab\u51fb\u4e2d\u8fc7\u300d\u5177\u6709\u5355\u8c03\u6027\uff0c\u5e94\u7528\u4e00\u79cd\u7ecf\u5178\u7684\u601d\u60f3\uff1a\u5148\u63d0\u524d\u53d1\u5c04\u6240\u6709\u70ae\u5f39\uff0c\u5012\u5e8f\u679a\u4e3e\u70ae\u5f39\uff0c\u4e0d\u65ad\u300c\u64a4\u9500\u300d\u5f53\u524d\u6700\u540e\u4e00\u53d1\u70ae\u5f39\u7684\u53d1\u5c04\uff0c\u5982\u679c\u5728\u300c\u64a4\u9500\u300d\u8fd9\u53d1\u70ae\u5f39\u540e\uff0c\u5b58\u5728\u4efb\u610f\u4e00\u79cd\u653e\u4e0b $k$ \u8258\u5b8c\u6574\u7684\u6218\u8230\u7684\u65b9\u6848\uff0c\u8bf4\u660e\u5728\u53d1\u5c04\u8fd9\u4e00\u53d1\u70ae\u5f39\u4e4b\u540e\u7edd\u5bf9\u80fd\u591f\u51fb\u4e2d\u3002\n\n\u5982\u679c\u53d1\u5c04\u6240\u6709\u70ae\u5f39\u540e\uff0c\u4f9d\u7136\u5b58\u5728\u4e00\u79cd\u653e\u4e0b $k$ \u8258\u5b8c\u6574\u7684\u6218\u8230\u7684\u65b9\u6848\uff0c\u5219\u65e0\u89e3\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\u5927\u5c0f\uff0c\u6bcf\u300c\u64a4\u9500\u300d\u4e00\u53d1\u70ae\u5f39\u7684\u53d1\u5c04\u76f8\u5f53\u4e8e\u5408\u5e76\u4e09\u4e2a\u8fde\u901a\u5757\uff1a\u70ae\u5f39\u7684\u843d\u70b9\u3001\u843d\u70b9\u7684\u524d\u4e00\u4e2a\u5143\u7d20\uff08\u82e5\u4e0d\u5b58\u5728\u6216\u5df2\u88ab\u70ae\u5f39\u6467\u6bc1\u5219\u5ffd\u7565\uff09\u3001\u843d\u70b9\u7684\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u82e5\u4e0d\u5b58\u5728\u6216\u5df2\u88ab\u70ae\u5f39\u6467\u6bc1\u5219\u5ffd\u7565\uff09\u3002\n\n\u8bbe\u67d0\u8fde\u901a\u5757\u5927\u5c0f\u4e3a $x$\uff0c\u53ef\u5bb9\u7eb3\u6218\u8230\u6570\u4e3a $res$\uff0c\u663e\u7136\u6709 $res = \\lfloor (x + 1) \\div (p + 1) \\rfloor$\u3002\n\n\u8bb0\u7edf\u8ba1\u5f53\u524d\u53ef\u5bb9\u7eb3\u6218\u8230\u7684\u6570\u91cf\u4e3a $ans$\uff0c\u5728\u5e76\u67e5\u96c6\u5408\u5e76\u65f6\uff0c$ans$ \u5206\u522b\u51cf\u53bb\u4e24\u4e2a\u5f85\u5408\u5e76\u8fde\u901a\u5757\u7684\u53ef\u5bb9\u7eb3\u6218\u8230\u7684\u6570\u91cf\uff0c\u518d\u52a0\u4e0a\u65b0\u8fde\u901a\u5757\u53ef\u5bb9\u7eb3\u6218\u8230\u7684\u6570\u91cf\u3002\u6700\u9760\u540e\u7684 $ans\\ge k$ \u7684\u65f6\u523b\u5373\u4e3a\u6240\u6c42\u3002\n\n### \u4ee3\u7801\n\n\u540c\u65f6\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $\\mathcal O(n)$\u3002\n\n\u603b\u7528\u65f6\u5b8c\u7206\u975e\u5b8c\u9690\u699c\u4e8c\u3002\n\n```cpp\nnamespace XSC062 {\nusing namespace fastIO;const int maxn = 2e5 + 15;\nbool vis[maxn];\nint n, k, p, m, x, ans;\nint a[maxn], f[maxn], siz[maxn];\ninline void swap(int &x, int &y){\n    x ^= y ^= x ^= y;\n    return;\n}\ninline int calc(int x) {\n    return (x + 1) / (p + 1);\n}\ninline void Init(int n) {\n    for (int i = 1; i <= n; ++i) {\n        f[i] = i;\n        siz[i] = 1;\n    }\n    return;\n}\nint find(int x) {\n    return x == f[x] ? x : f[x] = find(f[x]);\n}\ninline void merge(int x, int y) {\n    int fx = find(x);\n    int fy = find(y);\n    if (fx == fy)\n        return;\n    ans -= calc(siz[fx]);\n    ans -= calc(siz[fy]);\n    if (siz[fy] < siz[fx])\n        swap(fx, fy);\n\tsiz[fy] += siz[fx];\n    ans += calc(siz[fy]);\n    f[fx] = fy;\n    return;\n}\nint main() {\n\tread(n);\n\tread(k);\n\tread(p);\n\tread(m);\n\tInit(n + 5);\n\tans = (n - m) * (2 / (p + 1));\n\tfor (int i = 1; i <= m; ++i) {\n\t\tread(a[i]);\n\t\tvis[a[i]] = 1;\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (vis[i] || vis[i - 1])\n\t\t\tcontinue;\n\t\tmerge(i, i - 1);\n\t} \n\tif (ans >= k) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tfor (int i = m; i; --i) {\n\t\tvis[a[i]] = 0;\n\t\tans += 2 / (p + 1);\n\t\tif (a[i] - 1 && !vis[a[i] - 1])\n\t\t\tmerge(a[i], a[i] - 1);\n\t\tif (a[i] + 1 <= n && !vis[a[i] + 1])\n\t\t\tmerge(a[i], a[i] + 1);\n\t\tif (ans >= k) {\n\t\t\tprintf(\"%d\", i);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"-1\");\n\treturn 0;\n}\n} // namespace XSC062\n```",
        "postTime": 1659965667,
        "uid": 245052,
        "name": "ollll62",
        "ccfLevel": 7,
        "title": "CF567D One-Dimensional Battle Ships"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u8003\u8651\u7528 `multiset` \u5b58\u50a8\u3002\n\n`multiset` \u91cc\u9762\u7ef4\u62a4\u7684\u662f\u6240\u6709\u65e0\u6cd5\u653e\u7f6e\u7684\u70b9\u3002\n\n\u56e0\u6b64\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8003\u8651\u70ae\u5f39\u5c04\u4e2d\u4e86\u70b9 $t$ \u3002 \u5219\u8fd9\u4e2a\u70b9\u5728\u8fd9\u4e2a `multiset` \u91cc\u9762\u7684\u524d\u9a71\u548c\u540e\u7ee7\u6211\u4eec\u8bb0\u4e3a $l$ \u548c $r$ \u3002\u90a3\u4e48\u539f\u6765\u90a3\u4e2a\u957f\u5ea6\u4e3a `r-l-1` \u7684\u533a\u95f4\u81ea\u7136\u5c31\u53ef\u4ee5\u62c6\u6210\u957f\u5ea6\u4e3a `t-l-1` \u548c `r-x-1` \u7684\u4e24\u4e2a\u533a\u95f4\u3002\u81ea\u7136\u8fd9\u4e2a\u533a\u95f4\u957f\u5ea6\u4e3a $x$ \u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u662f $\\frac{y+1}{a}$ \u3002\u5219\u6700\u7ec8\u7684\u8d21\u732e\u4e3a\u539f\u6765\u7684\u8d21\u732e\u51cf\u53bb\u5927\u533a\u95f4\u7684\u8d21\u732e\u52a0\u4e0a\u88ab\u5206\u51fa\u6765\u7684\u4e24\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint s=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\ts=s*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn s*f;\n}\nint n,k;\nint a,m;\nint x;\nint tmp,tmp2;\nint flag=0;\nint ans=0;\nmultiset<int> s;\nint main()\n{\n\tn=read();\n\tk=read();\n\ta=read();\n\tm=read();\n\ts.insert(0);\n\ts.insert(n+1);\n\tans+=(n/(a+1)+(n%(a+1)==a));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tx=read();\n\t\ttmp=*(s.lower_bound(x));\n\t\ttmp2=*(--s.lower_bound(x));\n\t\tans-=(tmp-tmp2)/(a+1);\n\t\tans+=(tmp-x)/(a+1);\n\t\tans+=(x-tmp2)/(a+1);\n\t\tif(ans<k)\n\t\t{\n\t\t\tflag=1;\n\t\t\tprintf(\"%d\",i);;\n\t\t\tbreak;\n\t\t}\n\t\ts.insert(x);\n\t}\n\tif(flag==0) puts(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1627001756,
        "uid": 369904,
        "name": "zplqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF567D One-Dimensional Battle Ships"
    },
    {
        "content": "[\u539f\u9898\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/567/D)\n\n\u76f4\u63a5\u6a21\u62df\u7684\u8bdd\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u80fd\u9700\u8981\u7528\u4e0a\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u4e4b\u7c7b\u7684\n\n\u4f46\u662f\u8fd9\u9053\u9898\u76ee\u4e0d\u9700\u8981\u6570\u636e\u7ed3\u6784\uff0c\u76f4\u63a5\u4e8c\u5206\u5373\u53ef\n\n\u5148\u628a\u5750\u6807\u6392\u5e8f\uff0c\u4e8c\u5206\u7b54\u6848\uff0c$check$\u91cc\u9762\u8ba1\u7b97\u53ef\u4ee5\u653e\u591a\u5c11\u8239\n\n$id$\u5c0f\u4e8e$mid$\u7684\u65ad\u70b9\u662f\u5408\u7406\u7684\n\n\u5bf9\u4e8e\u4e00\u6bb5\u533a\u95f4$[l,r]$\uff0c\u53ef\u4ee5\u653e$[\\frac{r-l+1}{a+1}]$\u6761\u8239\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 200010\nusing namespace std;\nstruct data{\n\tint x, id;\n}x[maxn];\nint n, k, a, m;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nbool cmp(data x, data y){ return x.x < y.x; }\n\nbool check(int mid){\n\tint cnt = 0, l = 0;\n\tfor (int i = 1; i <= m; ++i)\n\t\tif (x[i].id <= mid) cnt += (x[i].x - l) / (a + 1), l = x[i].x;\n\tcnt += (n - l + 1) / (a + 1);\n\treturn cnt < k;\n}\n\nint main(){\n\tn = read(), k = read(), a = read(), m = read();\n\tfor (int i = 1; i <= m; ++i) x[i] = (data){read(), i};\n\tsort(x + 1, x + 1 + m, cmp);\t\n\tint l = 1, r = m, ans = -1;\n\twhile (l <= r){\n\t\tint mid = (l + r) >> 1;\n\t\tif (check(mid)) ans = mid, r = mid - 1; else l = mid + 1;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1569120332,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF567D \u3010One-Dimensional Battle Ships\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u54c7\u84dd\u9898\n\n### \u6b63\u6587\n\n\u9898\u76ee\u7ffb\u8bd1\u6210\u4eba\u8bdd\u5c31\u662f\uff1a\n\nBob \u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u6709\u4e00\u4e2a\u4f4d\u7f6e $x$\u3002\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u5c06 $x$ \u539f\u6765\u7684\u533a\u95f4 $[L,R]$($L< x< R$)\u5206\u5272\u6210 $[L,x-1],[x+1,R]$\uff0c\u8981\u6c42\u6c42\u51fa\u5728\u7b2c\u51e0\u6b21\u64cd\u4f5c\u5b8c\u6210\u540e\u4e0d\u5b58\u5728 $k$ \u4e2a\u53ea\u4e92\u76f8\u4e0d\u91cd\u53e0\uff0c\u6ca1\u6709\u5171\u9876\u70b9\u7684\u7ebf\u6bb5\uff0c\u6ee1\u8db3\u6240\u6709\u7ebf\u6bb5\u53ea\u5b58\u5728\u4e8e\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u957f\u5ea6\u4e3a $a$\u3002\n\n\u601d\u8def\uff1a\n\n\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u7ecf\u5206\u597d\u7684\u533a\u95f4 $[l,r]$,\u6709 $l-r-1$ \u7684\u957f\u5ea6\u3002\u5176\u4e2d\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\u6218\u8230\u7684\u957f\u5ea6\u662f $a$,\u540e\u9762\u7684\u957f\u5ea6\u90fd\u662f $a+1$ \uff08\u8fd9\u65f6\u5b83\u4eec\u9996\u5c3e\u76f8\u8fde\uff09\uff0c\u663e\u7136\u6700\u591a\u6709 $\\lfloor\\dfrac{(l-r-1)-a}{a+1}\\rfloor+1=\\lfloor\\dfrac{l-r}{a+1}\\rfloor$ \u4e2a\u6218\u8230\u3002\u6ce8\u610f\uff0c\u7b2c\u4e00\u4e2a\u533a\u95f4\u662f $[0,x_1]$ \u6700\u540e\u4e00\u4e2a\u533a\u95f4\u662f $[x_m,n+1]$\n\n\u5982\u679c $p$ \u4e2a\u70b8\u5f39\u6ca1\u6cd5\u6210\u529f\uff0c\u90a3\u4e48 $p-1$ \u4e2a\u4e5f\u4e0d\u53ef\u4ee5\uff0c\u7b26\u5408\u51fd\u6570\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u4e8c\u5206\u3002\n\n\u6570\u636e\u8303\u56f4\u63d0\u793a\u7740\u6211\u4eec\u5c31\u662f\u4e8c\u5206\uff08\u679a\u4e3e\u70b8\u5f39\u6570\u76ee\uff09\u3002\n\n### code\n\n```cpp\n#include<iostream> \n#include<algorithm>\n#include<stdio.h>\nusing namespace std;\nconst int maxn=200000+50;\nstruct op{int xi,id;}u[maxn];//Bob \u7684\u64cd\u4f5c\nint n,k,a,m;                 //\u5982\u9898\u76ee\u6240\u8bf4\nbool cmp(op x,op y){return x.xi<y.xi;}//\u628a\u64cd\u4f5c\u6309\u4f4d\u7f6e\u6392\u5e8f\nbool check(int fx){//\u4e8c\u5206\u7684check\u51fd\u6570\n\tint cnt=0,p=0;//cnt\u6218\u8230\u6570\u91cfp\u4e0a\u4e00\u4e2a\u70b8\u5f39\u7684\u4f4d\u7f6e\n\tfor(int i=1;i<=m;i++)//\u679a\u4e3e\u70b8\u5f39\n\t\tif(u[i].id<=fx)//\u5982\u679c\u8fd9\u4e2a\u70b8\u5f39\u5df2\u7ecf\u7206\u70b8\n        cnt+=(u[i].xi-p)/(a+1),p=u[i].xi;\n        //\u7edf\u8ba1\u8fd9\u4e2a\u70b8\u5f39\u548c\u4e0a\u4e00\u4e2a\u70b8\u5f39\u4e4b\u95f4\u6700\u591a\u6709\u591a\u5c11\u6218\u8230\n        //\u73b0\u5728\u7684\u70b8\u5f39\u6210\u4e3a\u4e86\u4e0b\u4e00\u4e2a\u70b8\u5f39\u7684\u201c\u4e0a\u4e00\u4e2a\u70b8\u5f39\u201d\n\treturn cnt+(n-p+1)/(a+1)<k;//\u5f53\u7136\u6700\u540e\u7684\u90a3\u4e2a\u533a\u95f4\u4e0d\u8981\u5fd8\u8bb0\u3002\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&k,&a,&m);//\u8f93\u5165\n\tfor(int i=1;i<=m;++i)scanf(\"%d\",&u[i].xi),u[i].id=i;//\u8f93\u5165\n\tsort(u+1,u+1+m,cmp);//\u628a\u70b8\u5f39\u6309\u7206\u70b8\u7684\u4f4d\u7f6e\u6392\u5e8f\n\tint l=0,r=m+1;//\u51c6\u5907\u4e8c\u5206\n\twhile(l<r){//\u5de6\u95ed\u53f3\u5f00\n\t\tint mid=l+((r-l)/2);//\u9632\u7206int\n\t\tif(check(mid))r=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",(l==m+1)?(-1):(l));//\u5982\u679cm\u6b21\u90fd\u89e3\u51b3\u4e0d\u4e86,\u90a3\u4e48\u8f93\u51fa-1\uff0c\u4e0d\u7136\u8f93\u51fal;\n\treturn 0;\n}\n```\n\n\u4e8c\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\log m)$ \u3002\n\n``check()`` \u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(m)$ \u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(m \\log m)$ \u3002",
        "postTime": 1601605206,
        "uid": 217300,
        "name": "Error_Eric",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF567D \u3010One-Dimensional Battle Ships\u3011"
    },
    {
        "content": "\u9898\u76ee\uff1a[CF567D One-Dimensional Battle Ships](https://www.luogu.org/problem/CF567D)\n\n****\n\n### \u9898\u610f\u7ffb\u8bd1\u7684\u4fee\u6b63\n\n> \u63a5\u4e0b\u6765\uff0cBob\u4f1a\u7528$m$\u9897\u70ae\u5f39\u5c1d\u8bd5\u6253\u4e2dAlice\u7684\u6218\u8230\uff0c\u6bcf\u9897\u70ae\u5f39\u4f1a\u9009\u62e9\u4e00\u4e2a\u683c\u5b50\u6253\u51fb\u3002\u4f46\u7531\u4e8eAlice\u559c\u6b22\u4f5c\u5f0a\uff0c\u6240\u4ee5\u5979\u4e0d\u4f1a\u544a\u8bc9Bob\u4ec0\u4e48\u65f6\u5019\u51fb\u4e2d\u4e86\u6218\u8230\u3002\u8bf7\u4f60\u5e2e\u52a9Bob\u5224\u65ad\uff0c\u5728\u7b2c\u51e0\u6b21\u53d1\u5c04\u70ae\u5f39\u540e\uff0cAlice\u4e00\u5b9a\u4f1a\u6709\u4e00\u8258\u6218\u8230\u88ab\u51fb\u4e2d\u3002\n\n\u5e94\u8be5\u7406\u89e3\u6210\n\n\u63a5\u4e0b\u6765\uff0cBob\u4f1a\u7528$m$\u9897\u70ae\u5f39\u5c1d\u8bd5\u6253\u4e2dAlice\u7684\u6218\u8230\uff0c\u6bcf\u9897\u70ae\u5f39\u4f1a\u9009\u62e9\u4e00\u4e2a\u683c\u5b50\u6253\u51fb\u3002\u4f46\u7531\u4e8eAlice\u559c\u6b22\u4f5c\u5f0a\uff0c\u6240\u4ee5\u5979\u4e0d\u4f1a\u544a\u8bc9Bob\u4ec0\u4e48\u65f6\u5019\u51fb\u4e2d\u4e86\u6218\u8230\u3002\u8bf7\u4f60\u5e2e\u52a9Bob\u5224\u65ad\uff0c\u5728\u7b2c\u51e0\u6b21\u53d1\u5c04\u70ae\u5f39\u540e\uff0c\u4ed6\u5c31\u80fd\u5224\u5b9aAlice\u4e00\u5b9a\u5728\u4f5c\u5f0a\uff08\u5e76\u62c6\u7a7f\u5979\uff09\u3002\n\n\u5e76\u4e14\uff0c\u6b64\u9898\u4e2dAlice\u5b9e\u9645\u4e0a\u662f\u4e00\u76f4\u5728\u7528\u201c\u672a\u51fb\u4e2d\u201d\u56de\u5e94Bob\u53d1\u5c04\u70ae\u5f39\u7684\u64cd\u4f5c\u3002\n\n****\n\n### \u89e3\u9898\u601d\u8def\n\n\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5730\u56fe\u770b\u505a\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\u3002\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e2a\u533a\u95f4\u88ab\u67d3\u6210\u4e86\u989c\u8272$1$\u3002~~\u5229\u7528\u5c0f\u5b66\u6570\u5b66\u529f\u5e95\uff0c~~ \u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a$sz$\u7684\u533a\u95f4\uff0c\u6700\u591a\u53ef\u4ee5\u653e\u7f6e$floor(\\frac{sz+1}{len+1})$\u4e2a\u6218\u8230\uff08\u9898\u76ee\u8981\u6c42\u6218\u8230\u4e0d\u80fd\u4e92\u76f8\u8fde\u63a5\uff0c\u4e5f\u4e0d\u80fd\u91cd\u53e0\uff09\u3002\n\n\u663e\u7136\uff0cBob\u6bcf\u6254\u51fa\u4e00\u9897\u70ae\u5f39\uff0c\u90fd\u4f1a\u5c06\u70ae\u5f39\u6253\u4e2d\u7684\u533a\u95f4\u5206\u6210\u4e24\u5757\uff08\u6b64\u5904\u6211\u4eec\u5141\u8bb8\u5176\u4e2d\u4e00\u5757\u6216\u8005\u4e24\u5757\u957f\u5ea6\u662f$0$\uff09\u3002\n\n\u6309\u7167\u6734\u7d20\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u6253\u51fb\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u8ba1\u7b97\u51fa\u80fd\u653e\u7f6e\u7684\u6218\u8230\u6570\u91cf\uff0c\u6700\u540e\u76f8\u52a0\u3002\u5982\u679c\u53d1\u73b0\uff0c\u8fd9\u4e9b\u533a\u95f4\u5df2\u7ecf\u4e0d\u80fd\u5bb9\u7eb3\u9898\u76ee\u4e2d\u7684$k$\u8258\u6218\u8230\uff0c\u90a3\u4e48\u663e\u7136Alice\u5c31\u4f5c\u5f0a\u4e86\u3002\uff08\u663e\u7136\u4e5f\u6ca1\u6709\u522b\u7684\u60c5\u51b5\u4e86\uff09\n\n### \u5b9e\u73b0\u7ec6\u8282\n\n\u6211\u4eec\u7528\u4e00\u4e2a`\u6811\u72b6\u6570\u7ec42`\uff08\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff09\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u6240\u5c5e\u7684\u533a\u95f4\uff08\u540e\u79f0\u989c\u8272\uff09\uff0c\u5e76\u7ef4\u62a4\u6bcf\u79cd\u989c\u8272\u7684\u5de6\u53f3\u7aef\u70b9\u3002\n\n\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u6811\u72b6\u6570\u7ec4\u7684\u503c\u5168\u90e8\u8d4b\u503c\u4e3a$1$\uff0c\u5e76\u5c06$1$\u7684\u8303\u56f4\u8bbe\u5b9a\u4e3a$[1,n]$\n\uff0c\u4ee3\u8868\u6574\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u3002\n\n\u968f\u540e\uff0c\u5982\u679c\u4e00\u9897\u5b50\u5f39\u843d\u5728$pos$\u4f4d\u7f6e\uff0c\u8303\u56f4\u4e3a$[l,r]$\u7684\u533a\u95f4\u4e0a\uff0c\u90a3\u4e48\u533a\u95f4\u88ab\u62c6\u6210\u4e24\u4e2a\uff0c\u5206\u522b\u662f$[l,pos-1]$\u548c$[pos+1,r]$\uff08\u6b64\u5904\u65e0\u9700\u8003\u8651\u8fb9\u754c\uff0c\u56e0\u4e3a\u5982\u679c\u67d0\u533a\u95f4\u7684\u5927\u5c0f\u53d8\u6210\u4e86$0$\uff0c\u8fd9\u4e2a\u533a\u95f4\u5728\u4ee5\u540e\u5c31\u6ca1\u6709\u5b58\u5728\u611f\u4e86\uff0c\u56e0\u4e3a\u5979\u4e0d\u4f1a\u518d\u88ab\u6253\u4e2d\uff09\u3002\u6211\u4eec\u5c06\u533a\u95f4$[l,pos-1]$\u4fdd\u6301\u539f\u6709\u7684\u989c\u8272\uff0c\u7136\u540e\u5c06\u533a\u95f4$[pos,pos]$\u989c\u8272\u53d8\u6210$-1$\uff0c\u6700\u540e\u5c06$[pos+1,r]$\u53d8\u6210\u4e00\u4e2a\u65b0\u7684\u989c\u8272\uff08\u7531\u4e8e\u8fd9\u4e2a\u533a\u95f4\u539f\u672c\u5c31\u662f\u6e05\u4e00\u8272\u7684\uff0c\u518d\u67d3\u6210\u4e00\u79cd\u989c\u8272\u53ef\u4ee5\u901a\u8fc7\u6811\u72b6\u6570\u7ec42\u5b8c\u6210\uff09\u3002\n\n\u81f3\u4e8e\u7edf\u8ba1\uff0c\u5c06\u53d8\u91cf$cnt$\u521d\u59cb\u5316\u4e3a\u539f\u6765\u6574\u4e2a\u533a\u95f4\u7684\u5bb9\u7eb3\u91cf\u3002\u6bcf\u6b21\u533a\u95f4\u62c6\u5206\u65f6\uff0c\u5148\u51cf\u53bb\u539f\u6709\u533a\u95f4\u7684\u5bb9\u91cf\uff0c\u5728\u52a0\u4e0a\u5f97\u5230\u7684\u4e24\u4e2a\u533a\u95f4\u7684\u5bb9\u91cf\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n****\n\n### \u4ee3\u7801\u4e0e\u8bc4\u6d4b\u8bb0\u5f55\n\n\n```cpp\n// status: [Accepted]\n// oj:     [luogu]\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 300001;\nint n,m,len;\nint ct = 0;\nint lcolor[MAXN];\nint rcolor[MAXN];\nint cnt = 0;\n\n//\u6811\u72b6\u6570\u7ec4\uff08\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff09\ntemplate<class T,int len>\nstruct CycOkIai{\n    //\u6570\u636e\u8868\uff08\u65e0\u5fc5\u8981\u65f6\u8bf7\u52ff\u4ece\u5916\u90e8\u8bbf\u95ee\uff09\n    int data[len+1];\n\n    //\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff08\u521d\u59cb\u5316\u65f6\u65e0\u9700\u8c03\u7528\uff09\n    void clear() {\n        for(int i=1;i<=len;i++) {\n            data[i]=0;\n        }\n    }\n\n    //\u8fd4\u56de\u6b63\u6574\u6570\u5220\u9664\u6240\u6709\u975e\u6700\u540e\u4e00\u4e2a1\u7684\u7ed3\u679c\n    int lowbit(int x) {return x&(-x);}\n\n    //\u66f4\u65b0\u6570\u636e\uff0c\u5c06idx-n\u52a0\u4e0a\u4e00\u4e2a\u6570\n    void delta(int idx,int val=0) {\n        while(idx<=n) {\n            data[idx]+=val;\n            idx+=lowbit(idx);\n        }\n    }\n\n    //\u66f4\u65b0\u6570\u636e\uff0c\u5c06l-r\u52a0\u4e0a\u4e00\u4e2a\u6570\n    void update(int l,int r,int val=0) {\n        delta(l,val);\n        delta(r+1,-val);\n    }\n\n    //\u67e5\u8be2\u4f4d\u4e8eidx\u7684\u6570\u636e\n    int at(int idx) {\n        int ret=0;\n        while(idx) {\n            ret+=data[idx];\n            idx-=lowbit(idx);\n        }\n        return ret;\n    }\n};\n\nCycOkIai<int,MAXN> col;\n\ninline int capacity(int id) {\n    int sz = rcolor[id] - lcolor[id] + 1;\n    return (sz+1)/(len+1);\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin>>n>>m>>len;\n    ++ct;\n    col.update(1,n,ct);\n    lcolor[ct] = 1;\n    rcolor[ct] = n;\n\n    cnt = capacity(1);\n\n    if(cnt < m) {cout<<\"0\"<<endl;return 0;}\n\n    int T;\n    cin>>T;\n    for(int t=1;t<=T;t++) {\n        int pos;\n        cin>>pos;\n        if(col.at(pos)==-1) continue;\n        int cc = col.at(pos);\n        cnt -= capacity(cc);\n        ++ct;\n        rcolor[ct] = rcolor[cc];\n        rcolor[cc] = pos - 1;\n        lcolor[ct] = pos + 1;\n        col.update(lcolor[ct],rcolor[ct],ct-cc);\n        col.update(pos,pos,-1-cc);\n        cnt += capacity(cc) + capacity(ct);\n        if(cnt < m) {cout<<t<<endl;return 0;}\n    }\n\n    cout<<-1<<endl;\n}\n```\n\n\u8bc4\u6d4b\u8bb0\u5f55\uff1a[rid24052403 / 139ms / 2.75s / 3.45MB](https://www.luogu.org/record/24052403)\n",
        "postTime": 1568726047,
        "uid": 49067,
        "name": "\u53f6ID",
        "ccfLevel": 7,
        "title": "\u3010\u6d1b\u8c37\u9898\u89e3\u3011CF567D One-Dimensional Battle Ships"
    }
]