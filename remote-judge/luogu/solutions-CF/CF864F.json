[
    {
        "content": "\u611f\u89c9 @Sali\u0435ri \u7684\u9898\u89e3\u4ece\u4ec0\u4e48\u610f\u4e49\u4e0a\u6765\u8bf4\u90fd\u5f88\u9ebb\u70e6\uff0c\u6211\u7684\u5b9e\u73b0\u5e94\u8be5\u7b80\u5355\u4e00\u4e9b\uff1f\n\n## \u9898\u610f\n\u6c42\u4e00\u5f20\u6709\u5411\u56fe\u4e0a\u4e24\u70b9\u95f4\u5b57\u5178\u5e8f\u6700\u5c0f\u8def\u5f84\u7684\u7b2c k \u4e2a\uff0c\u6216\u5224\u5b9a\u5176\u4e0d\u5b58\u5728\u5b57\u5178\u5e8f\u6700\u5c0f\u8def\u5f84/\u65e0\u6cd5\u5230\u8fbe\u3002  \n$n,m\\le 3000, q\\le400000$\u3002\n\n## \u9898\u89e3\n\u6ce8\u610f\u5230 $n$ \u53ea\u6709 $3000$\uff0c\u5141\u8bb8\u6211\u4eec\u679a\u4e3e\u8def\u5f84\u7ec8\u70b9 $T$\u3002  \n\u6b64\u65f6\u5efa\u51fa\u53cd\u56fe\uff0c\u90a3\u4e48\u4ece $T$ \u505a\u4e00\u904d dfs \u5373\u53ef\u627e\u5230\u6240\u6709\u80fd\u5230\u8fbe $T$ \u7684\u70b9\uff0c\u4e0d\u7ba1\u5b57\u5178\u5e8f\u95ee\u9898\u3002  \n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u4ee5\u5230\u8fbe $T$ \u7684\u70b9\uff0c\u5176\u5728\u5230 $T$ \u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u8def\u5f84\u4e0a\u7684\u540e\u7ee7\u8282\u70b9\u90fd\u662f\u552f\u4e00\u7684\uff0c\u5373\u4e3a\u53ef\u4ee5\u5230\u8fbe $T$ \u7684\u70b9\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002  \n\u6211\u4eec\u5c06\u6bcf\u4e2a\u70b9\u8fde\u8fb9\u5176\u540e\u7ee7\u8282\u70b9\uff0c\u90a3\u4e48\u4f1a\u5f62\u6210\u4e00\u9897\u65b0\u7684\u6811\uff0c\u6ce8\u610f\u5230\u5176\u4e3a\u5185\u5411\u3002  \n\u518d\u5c06\u65b0\u6811\u4e2d\u7684\u8fb9\u53cd\u5411\uff0c\u6b64\u65f6\u5f62\u6210\u4e00\u9897\u5916\u5411\u6811\u5417\uff0c\u6b64\u65f6\u518d\u4ece $T$ \u70b9 dfs\uff0c\u80fd\u591f\u8bbf\u95ee\u5230\u7684\u70b9\u5373\u4e3a\u5408\u6cd5\u7684\u8d77\u70b9 $S$\u3002\n\n\u6700\u540e\uff0c\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u5728\u7b2c\u4e8c\u4e2a dfs \u65f6\u5f00\u4e2a\u6808\u7edf\u8ba1\u4e00\u4e0b\u5c31\u641e\u5b9a\u4e86\u3002\n\n\u70b9\u4e2a\u8d5e\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nconst int maxn = 3010;\nvector<int>g[maxn],z[maxn],G[maxn];char v[maxn];int Q[maxn],pr[400010],n,m,q;\nvoid add(int x,int y) {g[y].push_back(x),z[x].push_back(y);}\nvoid ADD(int x,int y) {G[x].push_back(y);}\nvoid dfs(int x) {v[x]=1;for(auto y:g[x]) if(!v[y]) dfs(y);}\nstruct E {int s,t,k,n;};vector<E>ve[maxn],w[maxn];\nvoid _dfs(int x) {\n\tQ[++Q[0]]=x;\n\tfor(auto y:w[x]) if(Q[0]>=y.k) pr[y.n]=Q[Q[0]-y.k+1];\n\tfor(auto y:G[x]) _dfs(y);--Q[0];\n}\nsigned main() {\n\tn=read(),m=read(),q=read();\n\tfor(int i=1,x;i<=m;i++) x=read(),add(x,read());\n\tfor(int i=1;i<=n;i++) sort(z[i].begin(),z[i].end());\n\tfor(int i=1,x,y;i<=q;i++) x=read(),y=read(),ve[y].push_back((E){x,y,read(),i}),pr[i]=-1;\n\tfor(int t=1;t<=n;t++) {\n\t\tfor(int i=1;i<=n;i++) G[i].clear(),w[i].clear(),v[i]=0;\n\t\tv[t]=1,dfs(t);\n\t\tfor(int i=1;i<=n;i++) if(v[i]&&i^t)\n\t\t\tfor(auto y:z[i]) if(v[y]) {ADD(y,i);break;}\n\t\tfor(auto y:ve[t]) w[y.s].push_back(y);\n\t\t_dfs(t);\n\t}\n\tfor(int i=1;i<=q;i++) cout<<pr[i]<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1631752163,
        "uid": 106182,
        "name": "KaisuoShutong",
        "ccfLevel": 0,
        "title": "CF864F Cities Excursions \u9898\u89e3"
    },
    {
        "content": "#### Solution\uff1a\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u53d1\u73b0\u70b9\u6570\u548c\u8fb9\u6570\u6bd4\u8f83\u5c0f\uff0c$n, m\\leq 3000$\uff0c\u4f46\u662f\u8be2\u95ee\u6570\u6bd4\u8f83\u591a\u3002\n\u6240\u4ee5\u8003\u8651\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c$O(nm)$ \u53bb\u66f4\u65b0\u7b54\u6848\u3002\n##### \u6570\u7ec4\u542b\u4e49\uff1a\n\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u6b63\u5728\u66f4\u65b0\u4ece $root$ \u8fd9\u4e2a\u70b9\u5f00\u59cb\u7684\u7b54\u6848\uff1a\n\n$q[root][y][i][\\{k, id\\}]$\uff1a\u8868\u793a $x$ \u5230 $y$ \u7684\u8def\u5f84\u4e0a\u7684\u7b2c $i$ \u4e2a\u95ee\u9898\u95ee $x$ \u5230 $y$ \u7684\u7b2c $k$ \u4e2a\u70b9\u662f\u5565\uff0c$id$ \u4e3a\u79bb\u7ebf\u540e\u539f\u8be2\u95ee\u7684\u4e0b\u6807\n\n$ans[i]$\uff1a\u8868\u793a\u7b2c $i$ \u4e2a\u8be2\u95ee\u7684\u7b54\u6848\n\n$vis2[i]$\uff1a\u8868\u793a\u8fd9\u4e2a\u70b9\u7684\u662f\u5426\u6709\u88ab\u66f4\u65b0\u8fc7\u7b54\u6848\uff0c\u5982\u679c\u88ab\u66f4\u65b0\u8fc7\uff0c\u5219\u4e0d\u80fd\u518d\u6b21\u66f4\u65b0\uff08\u5b57\u5178\u5e8f\u6700\u5c0f\uff09\n\n$vis1[i]$\uff1a\u8868\u793a\u8fd9\u4e2a\u70b9\u662f\u5426\u5728\u641c\u7d22\u6811\u4e0a\uff08\u662f\u5426\u88ab\u8d70\u8fc7\uff09\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u8bf4\u660e\u5f62\u6210\u4e86\u73af\uff0c\u53cd\u4e4b\u4e0d\u6210\u73af\u3002\n\n$cnt[i]$\uff1a\u8868\u793a $i$ \u662f\u591a\u5c11\u4e2a\u73af\u7684\u8d77\u59cb\u70b9\n\n\u7279\u522b\u7684\uff0c $tmp$ \u8868\u793a\u5f53\u524d\u73af\u7684\u4e2a\u6570\u3002\n\n##### \u7b97\u6cd5\u8fc7\u7a0b\uff1a\n\u679a\u4e3e\u8def\u5f84\u521d\u59cb\u70b9 $root$ \uff0c\u505a\u4e00\u904d $dfs$\n\u5047\u8bbe\u5f53\u524d\u6211\u4eec\u641c\u7d22\u5230\u8282\u70b9 $y$ , \u6709\u5982\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a\n*  $vis2[y] = 1$ , \u8bf4\u660e\u5f53\u524d\u8282\u70b9\u6709\u5b57\u5178\u5e8f\u66f4\u5c0f\u7684\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe\u8fd9\u4e2a\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u8df3\u8fc7\u5373\u53ef\n*  $vis2[y] = 0$ && $vis1[y] = 0$\uff0c \u8bf4\u660e\u5f53\u524d\u70b9 $y$ \u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u7ee7\u7eed$dfs$\n* $vis2[y] = 0$ && $vis1[y] = 1$\uff0c  **\u91cd\u70b9\u6765\u4e86**\uff0c \u56e0\u4e3a$vis1[y]=1$, \u8bf4\u660e\u5f62\u6210\u4e86\u73af\uff0c\u56e0\u6b64\u9700\u8981\u5c06\u73af\u4e0a\u7684\u70b9\u4ee5\u53ca\u73af\u6240\u80fd\u5230\u8fbe\u7684\u70b9\u90fd\u8d4b\u6210 $-1$ ,\u5982\u679c\u66b4\u529b\u53bb\u679a\u4e3e\u73af\u4e0a\u7684\u70b9\u5e76\u6807\u8bb0 $-1$\uff0c \u5176\u5b9e\u6bd4\u8f83\u96be\u5199\u3002\u8fd9\u91cc\u6211\u8bb0\u5f55\u73af\u7684\u4e2a\u6570$(tmp)$\u4ee5\u53ca\u73af\u7684\u8d77\u59cb\u70b9\uff0c \u5728 $dfs$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c $tmp>0$ \uff0c\u90a3\u4e48\u8bf4\u660e\u5f53\u524d\u70b9\u662f\u5728\u73af\u4e0a\uff0c\u5728\u679a\u4e3e\u51fa\u8fb9\u7684\u65f6\u5019\u76f4\u63a5\u8bb2\u7b54\u6848\u8d4b\u6210 $-1$\uff0c\u53cd\u4e4b\u5c31\u76f4\u63a5\u66f4\u65b0\u7b54\u6848 \n\n##### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 3001, M = 4e5 + 7;\nint n, m, k;\nint ans[M] = {};\nvector < pair <int , int> > q[N][N];\nvector < int > a[N];\nint qq[N], top = 0;\nint tmp = 0;\nbool vis1[N], vis2[N] = {};\nint root = 0;\nint cnt[N] = {};\n\nvoid dfs(int x) {\n\tqq[++ top] = x;\n\tif (!tmp) {\n\t\tfor (int i = 0; i < q[root][x].size(); i ++) {\n\t\t\tint kk = q[root][x][i].first;\n\t\t\tint id = q[root][x][i].second;\n\t\t\tif (kk <= top) ans[id] = qq[kk];\n\t\t}\n\t}\n\tfor (int i = 0; i < a[x].size(); i ++) {\n\t\tint y = a[x][i];\n\t\tif (vis2[y]) continue;\n\t\tif (!vis1[y]) vis1[y] = 1, dfs(y);\n\t\t\telse ++ tmp, cnt[y] ++;\n\t}\n\t-- top;\n\ttmp -= cnt[x]; //\u63a5\u4e0b\u6765\u56de\u6eaf\uff0c\u56e0\u6b64\u4e0d\u5728\u4ee5x\u4e3a\u8d77\u59cb\u7684\u73af\u4e0a\u4e86\uff0c\u6240\u4ee5\u8981\u51cf\u53bbcnt[x]\n\tcnt[x] = 0;\n\tvis2[x] = 1;\n}\n\nint main() {\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tfor (int i = 1; i <= m; i ++) {\n\t\tint x, y;\n\t\tscanf(\"%d %d\", &x, &y);\n\t\ta[x].push_back(y);\n\t}\n\tfor (int i = 1; i <= n; i ++) sort(a[i].begin(), a[i].end());\n\tfor (int i = 1; i <= k; i ++) {\n\t\tint x, y, z;\n\t\tscanf(\"%d %d %d\", &x, &y, &z);\n\t\tq[x][y].push_back(pair <int, int>{z, i});\n\t\tans[i] = -1;\n\t}\n\tfor (int i = 1; i <= n; i ++) {\n\t\ttmp = 0, root = i, top = 0;\n\t\tfor (int j = 1; j <= n; j ++) vis1[j] = vis2[j] = 0;\n\t\tdfs(i);\n\t}\n\tfor (int i = 1; i <= k; i ++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n ",
        "postTime": 1599399486,
        "uid": 38103,
        "name": "Spikeweed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF864F \u3010Cities Excursions\u3011"
    },
    {
        "content": "\u6211\u4eec\u9996\u5148\u5047\u8bbe\u7ec8\u70b9\u786e\u5b9a\u4e3a $t$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c $s$ \u53ef\u4ee5\u5230\u8fbe $t$\uff0c\u90a3\u4e48 $s$ \u8fc7\u540e\u4e0b\u4e00\u4e2a\u70b9\u662f\u56fa\u5b9a\u7684\u3002\n\n\u5373\uff0c\u5728\u5b57\u5178\u5e8f\u6700\u5c0f\u7684 $s\\rightarrow t$ \u8def\u5f84\u4e0a $s$ \u7684\u540e\u7ee7\u4e00\u5b9a\u662f $s$ \u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u4e2d\u80fd\u5230\u8fbe $t$ \u7684\u70b9\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5982\u679c\u5c06 $s$ \u4e0e $s'$ \u7684\u540e\u7ee7\u8fde\u8fb9\uff0c\u90a3\u4e48\u6784\u6210\u7684\u56fe\u4e0a $t$ \u6ca1\u6709\u51fa\u8fb9\uff0c\u5176\u4ed6\u70b9\u5747\u6709\u4e00\u6761\u51fa\u8fb9\u3002\u6362\u8a00\u4e4b\uff0c\u8fd9\u5f20\u56fe\u662f **\u82e5\u5e72\u4e2a\u73af+\u4e00\u68f5\u6811**\u3002\n\n\u5bf9\u4e8e\u73af\u4e2d\u7684\u70b9\u548c\u4e0e $t $ \u4e0d\u8fde\u901a\u7684\u70b9\uff0c\u7b54\u6848\u663e\u7136\u662f -1\u3002\u5426\u5219\uff0c\u6c42\u7b54\u6848\u7b49\u4ef7\u4e8e\u5728**\u6811\u4e0a\u6c42 $k$ \u7ea7\u7956\u5148**\u3002\n\n\u56e0\u4e3a\u53ef\u4ee5\u79bb\u7ebf\uff0c\u5728 DFS \u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u6808\u5373\u53ef $O(1)$ \u56de\u7b54\u3002\n\n\u6211\u4eec\u7559\u4e0b\u7684\u95ee\u9898\u662f\uff0c\u6ca1\u6709\u6c42\u51fa\u4e24\u4e24\u70b9\u95f4\u7684\u8fde\u901a\u6027\uff0c\u4ee5\u53ca\u6ca1\u6709\u5224\u65ad\u54ea\u4e9b\u70b9\u5728\u73af\u4e2d\u3002\n\n- \u5176\u4e00\uff0cTarjan \u7f29\u70b9 + DAG \u4e0a DP\uff0c\u53ef\u4ee5\u505a\u5230 $O(nm)$\u3002\u6216\u8005\u4f60\u8fd8\u53ef\u4ee5\u5728 DP \u65f6\u91c7\u7528 bitset \u4f18\u5316\u3002\n\n- \u5176\u4e8c\uff0c\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u679a\u4e3e $t$\uff0c\u5efa\u56fe\u540e\u79bb\u7ebf\u56de\u7b54\u8be2\u95ee\u5373\u53ef\u505a\u5230 $O(nm+(n^2+q)\\log n)$\u3002$\\log$ \u662f\u7ed9\u5e76\u67e5\u96c6\u7684\uff0c\u5e76\u67e5\u96c6\u5e38\u6570\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u8fc7\u3002\n\n___\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u4efd\u4ee3\u7801\u4e00\u6253\u5b8c\u5c31\u8fc7\u4e86\uff0c\u53ef\u559c\u53ef\u8d3a\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <bitset>\n#include <vector>\nconst int maxn = 3e3+5,maxq = 4e5+5;\ninline int min(int a,int b){return a<b?a:b;}\nint n,m,q,ans[maxq];\nstruct Query{int s,k,id;};\nstruct Query2{~Query2(){};int k,id;};\nstd :: vector <Query> qry[maxn];\nstd :: vector <Query2> qry2[maxn];\nstd :: bitset <maxn> vis[maxn],ond[maxn];\nstd :: vector <int> G[maxn],DAG[maxn],SCC[maxn],T[maxn];\nint dfn[maxn],low[maxn],b[maxn],inst[maxn],st[maxn],rd[maxn],top,tim,cnt;\nvoid Tarjan(int u){\n\tdfn[u] = low[u] = ++tim,inst[u] = 1,st[++top] = u;\n\tfor(int v:G[u]){\n\t\tif(!dfn[v])Tarjan(v),low[u] = min(low[u],low[v]);\n\t\telse if(inst[v])low[u] = min(low[u],dfn[v]);\n\t}\n\tif(low[u] == dfn[u]){\n\t\tint now;++cnt;ond[cnt][cnt] = 1;\n\t\tdo{now = st[top--],b[now] = cnt,inst[now] = 0,SCC[cnt].push_back(now);}while(now^u);\n\t}\n}\nvoid getvis(){\n\tfor(int i=1;i<=n;++i)if(!dfn[i])Tarjan(i);\n\tfor(int u=1;u<=n;++u)\n\t\tfor(int v:G[u])\n\t\t\tif(b[u] != b[v])DAG[b[v]].push_back(b[u]),++rd[b[u]];\n\tstd :: queue <int> q;\n\tfor(int i=1;i<=cnt;++i)if(!rd[i])q.push(i);\n\twhile(!q.empty()){\n\t\tint u = q.front();q.pop();\n\t\tfor(int v:DAG[u])--rd[v],ond[v] |= ond[u],(!rd[v]?q.push(v):void());\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=cnt;++j)\n\t\t\tif(ond[b[i]][j])\n\t\t\t\tfor(int v:SCC[j])vis[i][v] = 1;\n}\nstruct DSU{\n\tint fa[maxn];\n\tvoid clr(){for(int i=1;i<=n;++i)fa[i] = i;}\n\tint getfa(int x){return fa[x] == x ? x : fa[x] = getfa(fa[x]);}\n\tvoid merge(int x,int y){\n\t\tint fx = getfa(x),fy = getfa(y);\n\t\tif(fx != fy)fa[fx] = fy;\n\t}\n}dsu;\nvoid getans(int u){\n\tst[++top] = u;\n\tfor(auto Q:qry2[u])ans[Q.id] = Q.k<=top?st[top-Q.k+1]:-1;\n\tfor(int v:T[u])getans(v);--top;\n}\nint main(){\n\tscanf(\"%d %d %d\",&n,&m,&q);\n\tfor(int i=1,x,y;i<=m;++i)\n\t\tscanf(\"%d %d\",&x,&y),G[x].push_back(y);\n\tgetvis();\n\tfor(int i=1,s,t,k;i<=q;++i)\n\t\tscanf(\"%d %d %d\",&s,&t,&k),qry[t].push_back((Query){s,k,i});\n\tfor(int t=1;t<=n;++t){\n\t\tdsu.clr();\n\t\tfor(int i=1;i<=n;++i)T[i].clear(),qry2[i].clear();\n\t\tfor(int u=1;u<=n;++u)\n\t\t\tif(u != t){\n\t\t\t\tif(!vis[u][t])continue;\n\t\t\t\tint minid = 0x3f3f3f3f;\n\t\t\t\tfor(int v:G[u])if(vis[v][t])minid = min(minid,v);\n\t\t\t\tT[minid].push_back(u),dsu.merge(minid,u);\n\t\t\t}\n\t\tfor(auto Q:qry[t]){\n\t\t\tif(!vis[Q.s][t] || dsu.getfa(Q.s) != dsu.getfa(t))ans[Q.id] = -1;\n\t\t\telse qry2[Q.s].push_back((Query2){Q.k,Q.id});\n\t\t}\n\t\tgetans(t);\n\t}\n\tfor(int i=1;i<=q;++i)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1631710852,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "CF864F \u9898\u89e3"
    }
]