[
    {
        "content": "\u4e0d\u540c\u4e8e\u9898\u89e3\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u9047\u5230\u8fd9\u79cd\u5220\u8fb9\u6c42\u8fde\u901a\u5757\u7684\u9898\uff0c\u6211\u4eec\u5f88\u96be\u53bb\u7ef4\u62a4\u7531\u8fd9\u6b21\u5220\u8fb9\u5206\u5f00\u7684\u8fde\u901a\u5757\u7684\u4e00\u4e9b\u5177\u4f53\u6570\u636e\uff0c\u6240\u4ee5\u8003\u8651\u5c06\u5220\u8fb9\u64cd\u4f5c\u5012\u7740\u6765\u770b\uff0c\u76f8\u5f53\u4e8e\u4e0d\u65ad\u5f80\u539f\u56fe\u91cc\u52a0\u8fb9\uff0c\u8fd9\u6837\u4e00\u4e9b\u666e\u901a\u6570\u636e\u7ed3\u6784\u5c31\u80fd\u7ef4\u62a4\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u6027\u8d28\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u56fe $G_k$\uff0c\u8bbe\u5176\u6709 $x$ \u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u5176\u4e2d $x - 1$ \u4e2a\u8fde\u901a\u5757\u5185\u90fd\u53ea\u5305\u542b\u4e00\u4e2a\u70b9\uff0c\u5269\u4e0b\u90a3\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u5305\u542b $n - x + 1$ \u4e2a\u70b9\u3002\n\n\u8bc1\u660e\uff1a\u6709\u4e00\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9 $u$\uff0c\u9996\u5148\u6211\u4eec\u80fd\u5f97\u77e5\u8ddd\u79bb\u5b83\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9 $v$\uff0c\u90a3\u4e48\u5c06\u5176\u4e0e $v$ \u8fde\u8fb9\u540e\u4f1a\u53d1\u73b0\uff0c$u$ \u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u7ed3\u70b9\uff08\u4e0d\u542b $u$\uff09\u5230 $v$ \u7684\u8ddd\u79bb\u90fd\u5927\u4e8e $u$ \u5230 $v$ \u7684\u8ddd\u79bb\uff0c\u6240\u4ee5 $u$ \u4e0e $u$ \u5b50\u6811\u5185\u7684\u6240\u6709\u7ed3\u70b9\u5904\u4e8e\u540c\u4e00\u8fde\u901a\u5757\u5185\u3002\u6211\u4eec\u5c31\u540c\u6837\u53ef\u4ee5\u5f97\u5230\uff1a\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\u662f\u90fd\u4e00\u5b9a\u662f\u52a0\u5165\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u3002\u5f97\u8bc1\u3002\n\n\u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u6c42\u6bcf\u4e2a\u7ed3\u70b9\u8ddd\u79bb\u6700\u8fdc\u7684\u7ed3\u70b9\u4e0e\u5176\u7684\u8ddd\u79bb\u3002\n\n\u663e\u7136 dp \u5b9e\u73b0\uff0c\u8bbe $f_u$ \u4e3a\u8ddd\u79bb $u$ \u6700\u8fdc\u7684\u7ed3\u70b9\u4e0e $u$ \u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a($mxdep_u$ \u4e3a $u$ \u7684\u5b50\u6811\u4e2d\u7684\u6700\u5927\u6df1\u5ea6\uff0c$dep_u$ \u4e3a $u$ \u7684\u6df1\u5ea6\uff0c$v$ \u4e3a $u$ \u7684\u513f\u5b50)\n\n$$\\begin{cases}\nf_u = \\max(f_u,mxdep_u - dep_u) \\\\\nf_v = \\max(f_v,f_u+1) \\\\\n\\end{cases}$$\n\n\u53d1\u73b0\u8fd9\u4e2a dp \u505a\u6cd5\u5bf9\u4e8e\u5411 $u$ \u8fde\u8fb9\u987a\u5e8f\u5728 $v$ \u4e4b\u540e\u7684\u7ed3\u70b9\u6ca1\u6cd5\u8f6c\u79fb\u5230 $f_v$ \u4e0a\uff0c\u4e8e\u662f\u5c31 dfs \u4e24\u904d\uff0c\u7b2c\u4e8c\u6b21\u628a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6df1\u5ea6\u6240\u6709\u8fb9\u904d\u5386\u7684\u987a\u5e8f\u7ffb\u8f6c\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u6700\u540e\u4e24\u6b21\u53d6 $\\max$\u3002\n\n\u8fd9\u4e2a\u90e8\u5206\u5176\u5b9e\u662f [HDU 2196](http://acm.hdu.edu.cn/showproblem.php?pid=2196)\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\u3002",
        "postTime": 1680532821,
        "uid": 570066,
        "name": "Fatal_Cactus",
        "ccfLevel": 6,
        "title": "CF1805D \u6811\u5f62 dp + \u63a8\u6027\u8d28 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n- \u7ed9\u4f60\u4e00\u68f5\u6709 $n$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u5b9a\u4e49 $G_k$ \u4e3a\u5c06\u5728\u539f\u6811\u4e2d\u6240\u6709\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e $k$ \u7684\u70b9\u5bf9\u95f4\u8fde\u4e00\u6761\u65e0\u5411\u8fb9\u6240\u6784\u6210\u7684\u65e0\u5411\u56fe\uff08\u8ddd\u79bb\u5b9a\u4e49\u4e3a\u7b80\u5355\u8def\u5f84\u4e2d\u8fb9\u7684\u6570\u91cf\uff09\u3002\n- \u5bf9\u4e8e\u6240\u6709 $1 \\le k \\le n$\uff0c\u6c42 $G_k$ \u4e2d\u8fde\u901a\u5757\u7684\u6570\u91cf\u3002\n- $2 \\le n \\le 10^5$\n\n## \u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u82e5 $G_k$ \u662f\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6700\u5927\u7684 $k$ \u662f\u591a\u5c11\u3002\n\n\u7531\u4e8e\u8fd9\u9053\u9898\u9700\u8981\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e $k$\uff0c\u6211\u4eec\u8003\u8651\u5f80\u76f4\u5f84\u65b9\u9762\u60f3\u3002\n\n![\u56fe\u793a](https://cdn.luogu.com.cn/upload/image_hosting/fbluj03j.png)\n\n\u4ee5\u8fd9\u5f20\u56fe\u4e3e\u4f8b\uff08\u5728\u6b64\u56fe\u4e2d\u52a0\u7c97\u7684\u90a3\u6761\u5c31\u662f\u76f4\u5f84\uff09\uff0c\u4ee4\u76f4\u5f84\u957f\u5ea6\u4e3a $d$\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c$G_k$ \u4e3a\u8fde\u901a\u5757\u5f53\u4e14\u4ec5\u5f53 $k \\le \\left\\lceil\\frac{d}{2}\\right\\rceil$ \u81ea\u5df1\u63a8\u4e00\u4e0b $d$ \u4e3a\u5947\u6570\u7684\u60c5\u51b5\u5c31\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0a\u53d6\u6574\u4e86\uff09\u3002\n\n\u9057\u61be\u7684\u662f\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u672c\u8eab\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u4f46\u6211\u4eec\u518d\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48 $k \\le \\left\\lceil\\frac{d}{2}\\right\\rceil$ \u65f6\u5b83\u5c31\u662f\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u6240\u6709\u70b9\u548c\u76f4\u5f84\u4e24\u7aef\u70b9\u4e2d\u67d0\u4e00\u4e2a\u7684\u8ddd\u79bb\u90fd\u5927\u4e8e\u7b49\u4e8e $k$\uff08\u5305\u62ec\u4e00\u4e2a\u7aef\u70b9\u4e0e\u53e6\u4e00\u4e2a\u7684\u8ddd\u79bb\uff09\u3002\u4e3a\u65b9\u4fbf\u53d9\u8ff0\uff0c\u6211\u4eec\u6682\u5b9a\u70b9 $i$ \u4e0e\u76f4\u5f84\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\u4e2d\u8f83\u5927\u7684\u4e00\u4e2a\u4e3a $D_i$\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u6240\u6709 $D_i \\le k$ \u7684\u70b9\u90fd\u5728 $G_{k+1}$ \u4e2d\u4e0d\u4e0e\u5176\u4ed6\u70b9\u8fde\u901a\u3002\u53e6\u5916\uff0c\u6839\u636e\u76f4\u5f84\u7684\u6027\u8d28\u53ef\u77e5\uff0c$D_i$ \u5e94\u662f\u7531 $i$ \u5f00\u59cb\u7684\u6700\u957f\u7684\u4e00\u6761\u8def\u5f84\uff0c\u4e5f\u80fd\u8bc1\u660e\u8fd9\u4e2a\u7ed3\u8bba\u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u5c31\u5f88\u6709\u7528\u4e86\uff0c\u663e\u7136\uff0c$G_1=1$\uff0c\u800c\u6211\u4eec\u4fbf\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6027\u8d28\u7531 $G_k$ \u5728 $O(1)$ \u7684\u65f6\u95f4\u5185\u7b97\u51fa $G_{k+1}$\uff08\u9884\u5904\u7406\u6bcf\u4e2a $D$ \u5bf9\u5e94\u7684\u8282\u70b9\u6570\uff09\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u9884\u5904\u7406\u76f4\u5f84\u4e0e\u8ddd\u79bb\u590d\u6742\u5ea6 $O(n)$\uff0c\u6700\u540e\u63a8\u7b54\u6848\u590d\u6742\u5ea6\u4e5f\u662f $O(n)$\uff0c\u5b8c\u5168\u80fd\u901a\u8fc7\u6b64\u9898\u3002\n\n## code\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<string.h>\n#include<stack>\n#define mem(a,b) memset(a,b,sizeof(a))\n#include<vector>\n#define pbk(a) emplace_back(a)\n#define forup(i,s,e) for(register int i=(s);i<=(e);i++)\n#define fordown(i,s,e) for(register int i=(s);i>=(e);i--)\nusing namespace std;\n#define gc getchar()\ninline int read(){//\u5feb\u8bfb\n    int x=0,f=1;char c;\n    while(!isdigit(c=gc)) if(c=='-') f=-1;\n    while(isdigit(c)){x=(x<<3)+(x<<1)+(c^48);c=gc;}\n    return x*f;\n}\n#undef gc\nconst int N=1e5+5,inf=0x3f3f3f3f;\nint n,cntt[N],rt,dpt[N],dpt1[N];\nvector<int> e[N];\nvoid dfs(int x,int fa){//\u7528\u6765\u6c42\u76f4\u5f84\u7684 dfs\u3002\n\tdpt[x]=dpt[fa]+1;\n\tif(dpt[x]>dpt[rt]) rt=x;\n\tfor(auto i:e[x]){\n\t\tif(i==fa) continue;\n\t\tdfs(i,x);\n\t}\n}\nvoid dfs1(int x,int fa){//\u7528\u6765\u6c42\u548c\u53e6\u4e00\u4e2a\u7aef\u70b9\u7684\u8ddd\u79bb\u7684 dfs\u3002\n\tdpt1[x]=dpt1[fa]+1;\n\tfor(auto i:e[x]){\n\t\tif(i==fa) continue;\n\t\tdfs1(i,x);\n\t}\n}\nsigned main(){\n\tn=read();\n\tforup(i,1,n-1){\n\t\tint u=read(),v=read();\n\t\te[u].pbk(v);e[v].pbk(u);\n\t}\n\tdfs(1,0);\n\tdfs(rt,0);//\u4e24\u6b21 dfs \u6c42\u76f4\u5f84\u3002\n\tdfs1(rt,0);//\u6b64\u65f6 rt \u662f\u53e6\u4e00\u4e2a\u7aef\u70b9\u3002\n\tforup(i,1,n){//\u9884\u5904\u7406\u6570\u91cf\u3002\n\t\tif(i!=rt) cntt[max(dpt[i],dpt1[i])-1]++;\n\t}\n\tint ans=1;\n\tforup(i,1,n){\n\t\tans+=cntt[i-1];\n\t\tprintf(\"%d \",ans);//\u8f93\u51fa\u7b54\u6848\u3002\n\t}\n}\n\n\n```\n",
        "postTime": 1680751758,
        "uid": 537230,
        "name": "\u516d\u697c\u6e9c\u5218",
        "ccfLevel": 5,
        "title": "CF1805D A Wide, Wide Graph \u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u663e\u7136\u7684\u8bc8\u9a97\u9898\u3002\n\n\u8fb9\u6570\u4e00\u5b9a\u4f1a\u5f88\u591a\uff0c\u6211\u4eec\u8981\u51cf\u5c11\u8fd9\u4e2a\u6570\u91cf\u3002\n\n\u6bcf\u4e2a\u70b9\u4e4b\u548c\u79bb\u4ed6\u6700\u8fdc\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\u5c31\u884c\u4e86\uff0c\u5982\u679c\u6709\u4e00\u6761\u8fb9\u4f4e\u4e8e\u9600\u503c\u4e86\uff0c\u90a3\u4e48\u7b54\u6848\u51cf\u4e00\u3002\n\n\u6709\u4e00\u4e2a OI \u5e38\u7528\u7ed3\u8bba\uff1a\u6811\u4e0a\u4efb\u610f\u4e00\u70b9\uff0c\u79bb\u4ed6\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f\u76f4\u5f84\u4e24\u7aef\u7684\u70b9\u4e4b\u4e00\u3002\u6240\u4ee5\u500d\u589e\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u6572\u4e86\u5de8\u957f\u65f6\u95f4\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n```cpp\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, ret, ma;\nint a, b, f[100005][17], dep[100005];\nvector <int> v[100005];\nint tt[100005];\nvoid dfs (int x, int y, int f){\n\tif (y > ma) {\n\t\tret = x;\n\t\tma = y;\n\t}\n\tfor (int i = 0; i < v[x].size (); i ++) {\n\t\tif (v[x][i] != f) dfs (v[x][i], y + 1, x);\n\t}\n}\nvoid dfs1 (int x, int y) {\n\tdep[x] = dep[y] + 1;\n\tf[x][0] = y;\n\tfor (int i = 0; i < v[x].size (); i ++) {\n\t\tif (v[x][i] != y) dfs1 (v[x][i], x);\n\t}\n}\nint dis (int x, int y) {\n\tint tx = x, ty = y;\n\tif (dep[x] < dep[y]) swap (x, y);\n\tif (dep[x] != dep[y]) {\n\t\tfor (int i = 16; i >= 0; i --) {\n\t\t\tif (dep[f[x][i] ] >= dep[y]) x = f[x][i];\n\t\t}\n\t}\n\tif (x == y) return dep[tx] + dep[ty] - 2 * dep[x];\n\tfor (int i = 16; i >= 0; i --) {\n\t\tif (f[x][i] != f[y][i]) {\n\t\t\tx = f[x][i];\n\t\t\ty = f[y][i];\n\t\t}\n\t}\n\treturn dep[tx] + dep[ty] - 2 * dep[f[x][0] ];\n}\nvoid query (int x) {\n\tif (dis (x, a) >= dis (x, b) ) tt[x] = dis (x, a);\n\telse tt[x] = dis (x, b);\n}\nint main () {\n\tcin >> n;\n\tint x, y;\n\tfor (int i = 1; i < n; i ++) {\n\t\tcin >> x >> y;\n\t\tv[x].push_back (y);\n\t\tv[y].push_back (x);\n\t}\n\tdfs (1, 0, 0);\n\ta = ret, ma = 0;\n\tdfs (ret, 0, 0);\n\tb = ret;\n\tdfs1 (1, 0);\n\tfor (int j = 1; j <= 16; j ++) {\n\t\tfor (int i = 1; i <= n; i ++) f[i][j] = f[f[i][j - 1] ][j - 1];\n\t}\n\tfor (int i = 1; i <= n; i ++) query (i);\n\tsort (tt + 1, tt + n + 1);\n\tint l = 1;\n\tfor (int i = 1; i <= n; i ++) {\n\t\twhile (l < n && tt[l] < i) ++ l;\n\t\tcout << l << \" \";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1683812658,
        "uid": 637796,
        "name": "Xy_top",
        "ccfLevel": 0,
        "title": "CF1805D \u9898\u89e3"
    }
]