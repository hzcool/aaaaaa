[
    {
        "content": "\u4e00\u9053\u975e\u5e38duliu\u7684dp\u9898\u3002\n\n\u9898\u610f\u8981\u6c42\u6211\u4eec\u6c42\u51fa\u9009\u62e9\u6700\u591a$m$\u4e2a\u65f6\u95f4\u70b9\u6253\u6270Bob\uff08\u5f3a\u5236\u8ba9\u4ed6\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u4e0d\u80fd\u884c\u52a8\uff09\u540e\uff0cBob\u6309\u7167\u4ed6\u7684\u7b56\u7565\u6361\u53d6\u7ea2\u5305\uff0c\u80fd\u591f\u5f97\u5230\u7684\u91d1\u5e01\u6700\u5c0f\u503c\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u4e0d\u8003\u8651$m$\u6b21\u64cd\u4f5c\u548cBob\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u7684\u7b56\u7565\u3002\n\n\u8003\u8651\u5728\u67d0\u4e00\u4e2a\u65f6\u95f4\u70b9$x$\uff0c\u5982\u679cBob\u80fd\u591f\u884c\u52a8\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u65f6\u95f4\u5b58\u5728\u7684\u7ea2\u5305\uff08\u5373$x \\in [s_i, t_i]$\uff09\u4e00\u5b9a\u6ca1\u6709\u88ab\u9009\u53d6\u3002\u8fd9\u662f\u56e0\u4e3a$s_i \\le t_i \\le d_i$\uff0c\u4e5f\u5c31\u662f\u5982\u679cBob\u6536\u96c6\u4e86\u67d0\u4e2a\u7ea2\u5305\uff0c\u4ed6\u6062\u590d\u884c\u52a8\u7684\u65f6\u95f4\u4e00\u5b9a\u5728\u8fd9\u4e2a\u7ea2\u5305\u6d88\u5931\u4e4b\u540e\u3002\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u4ed6\u5728\u8fd9\u4e2a\u65f6\u95f4\u70b9\u80fd\u884c\u52a8\uff0c\u8fd9\u4e2a\u7ea2\u5305\u4e00\u5b9a\u8fd8\u6ca1\u6709\u88ab\u9009\u53d6\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\u5982\u679cBob\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u80fd\u884c\u52a8\uff0c\u4ed6\u80fd\u591f\u5f97\u5230\u7684\u91d1\u5e01\u6570\u91cf\u548c\u4ed6\u4e0b\u4e00\u6b65\u884c\u52a8\u7684\u65f6\u95f4\u4f4d\u7f6e\u3002\n\n\u8bbe$g[i]$\u4e3a\u4e0b\u4e00\u6b65\u884c\u52a8\u7684\u65f6\u95f4\uff0c$h[i]$\u4e3a\u8fd9\u4e00\u6b65\u884c\u52a8\u80fd\u591f\u5f97\u5230\u7684\u91d1\u5e01\uff0c\u6211\u4eec\u5148\u628a\u6240\u6709\u7ea2\u5305\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u4ece$1$\u5230$n$\u628a\u6240\u6709\u65f6\u95f4\u70b9\u626b\u4e00\u904d\uff0c\u6309\u7167Bob\u7684\u7b56\u7565\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6a21\u62df\u5373\u53ef\u3002\u6ce8\u610f\u961f\u5217\u4e3a\u7a7a\u7684\u60c5\u51b5\uff0c\u6b64\u65f6$g[i] = i+1, h[i] = 0$\uff08\u56e0\u4e3aBob\u4ec0\u4e48\u4e5f\u5e72\u4e0d\u4e86\uff09\u3002\n\n\u7136\u540e\u8003\u8651dp\u3002\u8bbe$f[i][j]$\u4e3a\u5728\u7b2c$i$\u4e2a\u65f6\u95f4\u70b9\uff0c\u5df2\u7ecf\u7528\u4e86$j$\u6b21\u673a\u4f1a\u7684\u65b9\u6848\u6570\uff08\u56e0\u4e3a\u72b6\u6001\u53ea\u4e0e\u65f6\u95f4\u548c\u9009\u62e9\u6253\u6270Bob\u7684\u6b21\u6570\u6709\u5173\uff09\u3002\n\n\u6ce8\u610f\u5230\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u53ea\u6709\u9009\u548c\u4e0d\u9009\u5728\u8fd9\u4e2a\u65f6\u95f4\u70b9\u6253\u6270Bob\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u524d\u9762\u7684\u72b6\u6001\u63a8\u5230\u540e\u9762\u7684\u72b6\u6001\u3002\u5982\u679c\u9009\u7684\u8bdd\uff0c\u90a3\u4e48$f[i+1][j+1] = f[i][j]$\u3002\u5426\u5219\uff0c$f[g[i]][j] = f[i][j] + h[i]$\u3002\u6700\u540e\u7684\u72b6\u6001\u4f1a\u63a8\u5230\u65f6\u95f4\u70b9$n+1$\u3002\n\n\u56e0\u4e3a$m$\u6b21\u673a\u4f1a\u4e0d\u4e00\u5b9a\u4f1a\u7528\u5b8c\uff08\u800c\u4e14\u9898\u9762\u6ca1\u6709\u4fdd\u8bc1$m \\le n$\uff0c \u6240\u4ee5$m$\u6709\u53ef\u80fd\u65e0\u6cd5\u7528\u5b8c\uff09\uff0c\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u4e3a$\\min_{0 \\le j \\le m} \\{f[n+1][j]\\}$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#define maxn 100005\n#define int long long\n\nint n, m, k;\nstruct node {\n    int s, t, d, w;\n    bool operator<(const node &x)const {\n    \t// \u5728\u4f18\u5148\u961f\u5217\u91cc\u7684\u6392\u5e8f\u65b9\u5f0f\n    \t// \u6ce8\u610f std::priority_queue \u662f\u5927\u6839\u5806\uff0c\u6240\u4ee5\u6392\u5e8f\u8981\u53cd\u8fc7\u6765qwq\n        if(w == x.w) return d < x.d;\n        return w < x.w;\n    }\n}e[maxn];\n\nbool cmp(node x, node y) {\n\t// \u4e3a\u4e86\u65b9\u4fbf\u9884\u5904\u7406\uff0c\u5148\u628a\u6240\u6709\u7ea2\u5305\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\n    return x.s < y.s;\n}\n\nstd::priority_queue<node> q;\nint g[maxn], h[maxn];\nint f[maxn][205];\n\nsigned main() {\n    scanf(\"%I64d%I64d%I64d\", &n, &m, &k);\n    for(int i = 1; i <= k; ++i)\n        scanf(\"%I64d%I64d%I64d%I64d\", &e[i].s, &e[i].t, &e[i].d, &e[i].w);\n    \n    std::sort(e+1, e+k+1, cmp);\n    int cur = 1;\n    g[0] = 1;\n    for(int i = 1; i <= n; ++i) {\n        while(cur <= k && e[cur].s <= i)\n            q.push(e[cur++]);\n        if(q.empty()) g[i] = i+1;\n        else {\n            node u = q.top();\n            if(u.t < i) {\n            \t// \u5f53\u524d\u5143\u7d20\u5df2\u7ecf\u8fc7\u65f6\n                --i;\n                q.pop();\n                continue;\n            }\n            g[i] = u.d+1;\n            h[i] = u.w;\n        }\n    }\n\n    memset(f, 0x3f, sizeof(f));\n    f[0][0] = 0; // \u72b6\u6001\u8fb9\u754c\n    for(int i = 0; i <= n; ++i)\n    for(int j = 0; j <= m; ++j) {\n        f[i+1][j+1] = std::min(f[i+1][j+1], f[i][j]);\n        f[g[i]][j] = std::min(f[g[i]][j], f[i][j] + h[i]);\n    }\n\n    int ans = 0x3f3f3f3f3f3f3f3fll;\n    for(int i = 0; i <= m; ++i)\n        ans = std::min(ans, f[n+1][i]);\n    printf(\"%I64d\", ans);\n    return 0;\n}\n```",
        "postTime": 1549031124,
        "uid": 79017,
        "name": "\u82b1\u91cc\u5fc3\u7231",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106E \u3010Lunar New Year and Red Envelopes\u3011"
    },
    {
        "content": "\u6b63\u5e8fdp\u3002\u3002\u3002\u5176\u5b9e\u4e5f\u4e0d\u662f\u7279\u522b\u96be\uff08~~\u867d\u7136\u8003\u8bd5\u65f6\u8c03\u4e862h+~~\uff09\n\n\u4ed4\u7ec6\u60f3\u60f3\u5c31\u4f1a\u53d1\u73b0\u6bcf\u4e00\u4e2a\u65f6\u95f4\u8981\u62ff\u7684\u7ea2\u5305\u662f\u56fa\u5b9a\u7684\u3002\u53ea\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u65f6\u95f4\u8981\u62ff\u7684\u7ea2\u5305\uff0cdp\u90e8\u5206\u4e5f\u4e0d\u662f\u7279\u522b\u96be\uff0c\u8003\u8651\u5f53\u524d\u65f6\u95f4\u6363\u4e71\u6216\u4e0d\u6363\u4e71\u4e24\u79cd\u60c5\u51b5\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\n#define ll long long\nusing namespace std;\nconst ll INF=(1LL<<62);\nstruct node\n{\n\tint s,t,d;\n\tll w;\n\tnode()\n\t{\n\t}\n\tbool operator <(node x)const\n\t{\n\t\tif(w!=x.w)return w>x.w;\n\t\treturn d>x.d;\n\t}//\u91cd\u8f7d\u5c0f\u4e8e\u53f7\uff0c\u4f7f\u5f97multiset\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u5f53\u524d\u8981\u62ff\u7684\u7ea2\u5305\n}a[100029];\nll f[100029][205];//f[i][j]\uff1a\u5230\u4e86\u7b2ci\u79d2\uff0c\u7528\u4e86j\u6b21\u6363\u4e71\u673a\u4f1a\u7684\u6700\u5c11\u94b1\u6570 \nvector<node>bg[100029],en[100029];//\u5b58\u8fdb\u961f\u51fa\u961f\u7684\u65f6\u95f4 \nmultiset<node>q;//\u627e\u5f53\u524d\u65f6\u95f4\u5e94\u8be5\u62ff\u7684\u7ea2\u5305 \nint n,m,k;\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tmemset(f,127,sizeof(f));\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tscanf(\"%d%d%d%lld\",&a[i].s,&a[i].t,&a[i].d,&a[i].w);\n\t\tbg[a[i].s].push_back(a[i]);\n\t\ten[a[i].t+1].push_back(a[i]);\n\t}\n\tfor(int i=0;i<=m;++i)\n\t{\n\t\tf[i][i]=0;\n\t}\n\tf[1][0]=0;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=0;j<(int)bg[i].size();++j)\n\t\t{\n\t\t\tq.insert(bg[i][j]);\n\t\t}\n\t\tfor(int j=0;j<(int)en[i].size();++j)\n\t\t{\n\t\t\tq.erase(q.find(en[i][j]));\n\t\t}\n\t\tnode temp;\n\t\tif(q.empty())\n\t\t{\n\t\t\ttemp.d=i;\n\t\t\ttemp.w=0;\n\t\t}//\u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u62ff\u7684\u7ea2\u5305\uff0c\u5c31\u8df3\u8fc7 \n\t\telse\n\t\t{\n\t\t\ttemp=*q.begin();\n\t\t}//\u6709\u53ef\u4ee5\u62ff\u7684\u7ea2\u5305\uff0c\u5c31\u62ff \n\t\tfor(int j=0;j<min(m,i);++j)\n\t\t{\n\t\t\tf[i+1][j+1]=min(f[i+1][j+1],f[i][j]);//\u4f7f\u7528\u4e00\u6b21\u6363\u4e71\u673a\u4f1a\uff0c\u62ff\u4e0d\u5230\u8be5\u7ea2\u5305\n\t\t}\n\t\tfor(int j=0;j<=min(m,i);++j)\n\t\t{\n\t\t\tf[temp.d+1][j]=min(f[temp.d+1][j],f[i][j]+temp.w);//\u62ff\u5230\u8be5\u7ea2\u5305 \n\t\t}\n\t}\n\tll ans=INF;\n\tfor(int j=0;j<=m;++j)\n\t{\n\t\tans=min(ans,f[n+1][j]);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1563966307,
        "uid": 34217,
        "name": "Katsura_Hinagiku",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106E \u3010Lunar New Year and Red Envelopes\u3011"
    },
    {
        "content": "\u4e00\u9053\u4e0d\u662f\u5f88\u96be\u7684 dp \u9898\u3002\n\n\u9996\u5148\u7b2c $x$ \u79d2\u65f6\u62ff\u4ec0\u4e48\u6837\u7684\u7ea2\u5305\u662f\u786e\u5b9a\u7684\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5f97\u51fa\u6240\u6709\u65f6\u523b\u8981\u62ff\u7684\u7ea2\u5305\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u5c31\u5f88\u8f7b\u677e\u6709\u4e86\u5982\u4e0b dp \u65b9\u7a0b\u5f0f\u3002\n\n\u8bbe $dp_{i,j}$ \u4e3a Alice \u4f7f\u7528 $i$ \u6b21\u5e72\u6270\u540e\u5728\u7b2c $j$ \u79d2 Bob \u80fd\u62ff\u6700\u5c0f\u7684\u94b1\u6570\u3002\n\n\u5982\u679c\u7b2c $j$ \u79d2\u6709\u7ea2\u5305\u53ef\u62ff\uff0c\u5047\u8bbe\u62ff\u5b8c\u8fd9\u4e2a\u7ea2\u5305\u4e4b\u540e\u5230\u7b2c $d+1$ \u79d2\u624d\u80fd\u7ee7\u7eed\u62ff\u7ea2\u5305\u4e14\u8fd9\u4e2a\u7ea2\u5305\u6709 $w$ \u5143\u3002\u5219\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u8f6c\u79fb\uff1a\n\n$dp_{i,d+1}=\\min(dp_{i,d+1},dp_{i,j}+w)$\n\n\u4e5f\u53ef\u4ee5\u9009\u62e9\u5e72\u6270\uff0c\u4f46\u53ea\u80fd\u5e72\u6270\u7b2c $j$ \u79d2\uff0c\u5230\u4e86\u7b2c $j+1$ \u79d2\u5c31\u6062\u590d\u4e86\u539f\u6837\u3002\u5219\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u8f6c\u79fb\uff1a\n\n$dp_{i+1,j+1}=\\min(dp_{i+1,j+1},dp_{i,j})$\n\n\u5426\u5219\uff0c\u53ea\u9700\u8981\u8fdb\u884c\u8fd9\u4e00\u4e2a\u8f6c\u79fb\u5c31\u884c\u3002\n\n$dp_{i,j+1}=\\min(dp_{i,j+1},dp_{i,j})$\n\n\u8fd9\u4e00\u79d2\u4e0d\u9700\u8981\u8fdb\u884c\u5e72\u6270\u3002\n\n\u521d\u59cb\u5316\u7684\u65f6\u5019\u9664\u4e86 $dp_{0,1}$ \u8bbe\u6210 $0$ \u4ee5\u5916\uff0c\u5176\u4ed6\u7684\u5168\u90e8\u8bbe\u6210 $inf$\u3002\n\n\u7b54\u6848\u4e3a $\\min\\{dp_{i,n+1}\\}$\uff08$0\\le i\\le m$\uff09\n\n\u81f3\u4e8e\u7b2c $x$ \u79d2\u8be5\u62ff\u4ec0\u4e48\u6837\u7684\u7ea2\u5305\uff0c\u53ea\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5c31\u884c\uff08\u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(k\\log n+nm)$",
        "postTime": 1629277032,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106E"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u5199\u6cd5\u3002\n\n~~\u53cd\u6b63\u8bb0\u641c\u672c\u8d28\u4e0a\u4e5f\u5c31\u662fdp\u3002~~\n\n~~\u4e3b\u8981\u662f\u8bb0\u641c\u597d\u61c2\u597d\u5199\u3002~~\n\n## \u3010\u601d\u8def\u3011\n\u9996\u5148\u7531\u4e8e $s_i \\leq t_i \\leq d_i$ \u3002\u6211\u4eec\u4e0d\u7528\u8003\u8651 **\u4e00\u4e2a\u7269\u54c1\u88ab\u9009\u4e4b\u540e\u4e0d\u80fd\u518d\u88ab\u9009** \u7684\u60c5\u51b5\uff08\u5982\u679c\u8fd9\u662f\u4f60\u770b\u9898\u89e3\u7684\u539f\u56e0\u4f60\u5c31\u53ef\u4ee5\u56de\u53bb\u4e86\uff09\u3002\n\n\u7136\u540e\u90a3\u4e48\u6bcf\u4e2a\u70b9 **\u5982\u679c\u80fd\u9009** \uff0c\u90a3\u4e48\u88ab\u9009\u7684\u7ea2\u5305\u5c31\u4e00\u5b9a\u662f\u56fa\u5b9a\u7684\uff08\u56e0\u4e3a\u4e0d\u53d7\u5f71\u54cd\uff09\u3002\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u70b9\u5982\u679c\u88ab\u9009\uff0c\u4f1a\u9009\u54ea\u4e00\u4e2a\u7ea2\u5305\u3002\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u63a8\u5e73\uff0c\u5148\u4ee5 $w$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c $d$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u5373\u53ef\u3002\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 $ODT$ \u4ec0\u4e48\u7684\uff0c\u53cd\u6b63\u6211\u7528\u7684\u662f\u7ebf\u6bb5\u6811\uff09\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8003\u8651\u8bb0\u641c\u4e86\u3002\n\n\u8ba9 $dp[i][j]$ \u8868\u793a\u7b2c $i$ \u79d2\u53ef\u4ee5\u62ff\u7ea2\u5305\uff0c\u4e14\u8fd8\u6709 $j$  \u6b21\u64cd\u4f5c\u7684\u673a\u4f1a\uff0c\u80fd\u591f\u62ff\u5230\u7684\u6700\u5c11\u4ef7\u503c\u3002\n\n\u90a3\u4e48\u8ba8\u8bba\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u8fd9\u4e2a\u8282\u70b9\u4e0d\u8ba9\u62ff\uff0c\u6d88\u8017\u4e00\u6b21\u673a\u4f1a\u5230\u4e0b\u4e00\u79d2\uff0c\u53e6\u4e00\u79cd\u662f\u62ff\uff0c\u4e0d\u6d88\u8017\u673a\u4f1a\u5230\u7b2c $d+1$ \u79d2\u3002\n\n\u5f97\u5230\u65b9\u7a0b\uff1a\n\n$$\ndp[i][j]=min(dp[i+1][j-1],dp[d_i+1][j]+w_i)\n$$\n\n\u8003\u8651\u641c\u7d22\u7684\u8fb9\u754c\u6761\u4ef6\u3002\n\n\u9996\u5148\u673a\u4f1a\u4e0d\u80fd\u6d88\u8017\u6210\u8d1f\u6570\uff0c\u6240\u4ee5 $j<0$ \u65f6\u8fd4\u56de\u4e00\u4e2a\u6781\u5927\u503c\u3002\n\n\u5176\u6b21\u7b2c $n$ \u79d2\u4ee5\u540e\u663e\u7136\u6536\u83b7\u4e0d\u5230\u4efb\u4f55\u7ea2\u5305\uff0c\u6240\u4ee5 $i>n$ \u65f6\u8fd4\u56de $0$ \u3002\n\n\u7136\u540e\u5982\u679c\u8fd9\u4e00\u79d2\u6ca1\u6709\u7ea2\u5305\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u5230\u4e0b\u4e00\u79d2\uff0c\u5373 $w_i=0$ \u65f6 $dp[i][j]=dp[i+1][j]$\n\n\u505a\u5b8c\u4e86\u3002\n\n## \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ntypedef pair <int, int> pi;\n//\u4ee5\u4e0b\u662f\u5feb\u8bfb\u53ef\u4ee5\u4e0d\u770b\ntemplate <typename T>\ninline void read(T &x){\n    x = 0;int fu = 1;\n    char c = getchar();\n    while(c > 57 || c < 48){\n        if(c == 45) fu = -1;\n        c = getchar();\n    }\n    while(c <= 57 && c >= 48){\n        x = (x << 3) + (x << 1) + c - 48;\n        c = getchar();\n    }\n    x *= fu;\n}\ntemplate <typename T>\ninline void fprint(T x){\n    if(x < 0) putchar(45), x = -x;\n    if(x > 9) fprint(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T>\ninline void fprint(T x, char ch){\n    fprint(x);putchar(ch);\n}\n\nint n, m, k;\n\n//\u4ee5\u4e0b\u662f\u7ea2\u5305\nstruct Redbag{\n    int l, r;\n    int val, d;\n    inline bool operator < (const Redbag &tmp) const{\n        return val < tmp.val || (val == tmp.val && d < tmp.d);\n    }\n}q[100005];\n\n//\u4ee5\u4e0b\u662f\u7ebf\u6bb5\u6811\npi t[400005], lazy[400005], a[100005];\n\ninline void pushup(int rt){\n    if(t[rt << 1] != t[rt << 1 | 1]) t[rt] = make_pair(0, 0);\n    else t[rt] = t[rt << 1];\n}\n\ninline void update(int rt, pi z){\n    t[rt] = z;\n    lazy[rt] = z;\n}\n\ninline void pushdown(int rt){\n    if(lazy[rt].first){\n        update(rt << 1, lazy[rt]);\n        update(rt << 1 | 1, lazy[rt]);\n        lazy[rt] = make_pair(0, 0);\n    }\n}\n\n#define LSON rt << 1, l, mid\n#define RSON rt << 1 | 1, mid + 1, r\n\nvoid modify(int rt, int l, int r, int x, int y, pi z){\n    if(x <= l && r <= y) return update(rt, z);\n    pushdown(rt);\n    int mid = (l + r) >> 1;\n    if(x <= mid) modify(LSON, x, y, z);\n    if(y > mid) modify(RSON, x, y, z);\n    pushup(rt); \n}\n\npi query(int rt, int l, int r, int x){\n    if(t[rt].first) return t[rt];\n    if(l == r && l == x) return t[rt];\n    pushdown(rt);\n    int mid = (l + r) >> 1;\n    if(x <= mid) return query(LSON, x);\n    else return query(RSON, x);\n}\n\n//\u4ee5\u4e0b\u662f\u77ed\u5230\u6781\u81f4\u7684\u8bb0\u641c\n\nLL dp[100005][205];\n\nLL dfs(int x, int y){\n    if(y < 0) return 0x3f3f3f3f3f3f3f3f;\n    if(x > n) return 0;\n    if(~dp[x][y]) return dp[x][y];\n    if(!a[x].first) return dp[x][y] = dfs(x + 1, y);\n    return dp[x][y] = min(dfs(x + 1, y - 1), dfs(a[x].second + 1, y) + a[x].first);\n}\n\n\nint main(){\n    read(n);read(m);read(k);\n    for (register int i = 1;i <= k;i ++){\n        read(q[i].l);read(q[i].r);\n        read(q[i].d);read(q[i].val);\n    }\n    //\u4ee5\u4e0b\u662f\u533a\u95f4\u63a8\u5e73\u64cd\u4f5c\n    sort(q + 1, q + k + 1);\n    for (register int i = 1;i <= k;i ++) modify(1, 1, n, q[i].l, q[i].r, make_pair(q[i].val, q[i].d));\n    for (register int i = 1;i <= n;i ++) a[i] = query(1, 1, n, i);\n    //\u4ee5\u4e0b\u662f\u8bb0\u641c\n    memset(dp, -1, sizeof(dp));\n    fprint(dfs(1, m), 10);\n    return 0;\n}\n```",
        "postTime": 1600687532,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106E \u3010Lunar New Year and Red Envelopes\u3011"
    },
    {
        "content": "\u7531\u4e8e $s_i \\le t_i \\le d_i$\uff0c\u6240\u4ee5\u5f53 Bob \u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u53ef\u4ee5\u884c\u52a8\u65f6\uff0c\u8be5\u65f6\u95f4\u53ef\u53d6\u7684\u6240\u6709\u7ea2\u5305\u4e00\u5b9a\u6ca1\u6709\u88ab\u9009\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u6bcf\u4e2a\u65f6\u95f4\u70b9\u82e5\u80fd\u884c\u52a8\uff0c\u53ef\u4ee5\u5f97\u5230\u7684\u94b1\u6570 $c_i$ \u548c\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u884c\u52a8\u7684\u65f6\u95f4 $to_i$\u3002\n\n\u7136\u540e\u6211\u4eec\u76f4\u63a5 DP\u3002\u8bbe $f[i][j]$ \u8868\u793a\u5f53\u524d\u5230\u4e86\u65f6\u95f4 $i$\uff08 \u8fd8\u6ca1\u884c\u52a8\uff09\uff0c\u5df2\u7ecf\u7528\u4e86 $j$ \u6b21\u5e72\u6270\u3002\u56e0\u4e3a\u5e72\u6270\u7684\u6b21\u6570\u4e0d\u4e00\u5b9a\u8981\u7528\u5b8c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7edf\u8ba1\u6240\u6709 $f[n+1][j]$\uff0c\u627e\u5230\u6700\u5c0f\u503c\uff0c\u5c31\u662f\u7b54\u6848\u3002\n\n# Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read() \n{\n\tchar c=getchar();\n\tint x=0;\n\twhile(c<'0'||c>'9') \n\t{\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9') \n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x;\n}\nint n,m,k;\nstruct red_bag{\n\tint s,e;\n\tint w;\n\tint d;\n}a[100005];\nint c[100005];\nint to[100005];\nlong long f[100005][205];\ninline bool cmp(red_bag a,red_bag b)\n{\n\treturn a.s<b.s;\n}\nstruct com{\n\tbool operator()(const int x,const int y)\n\t{\n\t\tif(a[x].w==a[y].w)\n\t\t{\n\t\t\treturn a[x].d<a[y].d;\n\t\t}\n\t\treturn a[x].w<a[y].w;\n\t}\n};\npriority_queue<int,vector<int>,com>q;\nint main()\n{\n\tn=read();\n\tm=read();\n\tk=read();\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\ta[i].s=read();\n\t\ta[i].e=read();\n\t\ta[i].d=read()+1;\n\t\ta[i].w=read();\n\t}\n\tsort(a+1,a+k+1,cmp);\n\tfor(int i=1,j=1;i<=n;i++)\n\t{\n\t\twhile(j<=k&&i==a[j].s)\n\t\t{\n\t\t\tq.push(j++);\n\t\t}\n\t\twhile((!q.empty())&&a[q.top()].e<i)\n\t\t{\n\t\t\tq.pop();\n\t\t}\n\t\tif(q.empty())\n\t\t{\n\t\t\tto[i]=i+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint t=q.top();\n\t\t\tc[i]=a[t].w;\n\t\t\tto[i]=a[t].d;\n\t\t}\n\t}\n\tmemset(f,127/3,sizeof(f));\n\tf[0][0]=0;\n\tto[0]=1;\n\tfor(int i=0;i<=n;i++)\n\t{\n\t\tfor(int j=0;j<=m;j++)\n\t\t{\n\t\t\tf[to[i]][j]=min(f[to[i]][j],f[i][j]+c[i]);\n\t\t\tf[i+1][j+1]=min(f[i+1][j+1],f[i][j]);\n\t\t}\n\t}\n\tlong long mins=1e18;\n\tfor(int i=0;i<=m;i++)\n\t{\n\t\tmins=min(f[n+1][i],mins);\n\t}\n\tcout<<mins<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1627530265,
        "uid": 73711,
        "name": "HC20050615",
        "ccfLevel": 6,
        "title": "CF 1106E \u9898\u89e3"
    },
    {
        "content": "~~\u672c\u4ee5\u4e3a\u8fd9\u573aDiv.2\u633a\u6c34\u7684\uff0c\u662f\u4e2a\u6da8\u5206\u7684\u597d\u673a\u4f1a\uff0c\u7ed3\u679c\u7adf\u7136\u56e0\u4e3a\u8bc4\u6d4b\u673a\u5361\u7206\u53d8\u6210\u4e86unrated\u7684,\u7136\u540e\u5c31\u6ca1\u6709\u52a8\u529b\u505a\u9898\u4e86\uff0c\u5bfc\u81f4\u6211\u8fd9\u9898\u7adf\u7136\u8c03\u4e86\u597d\u4e45\u3002\u3002~~\n\n\u56e0\u4e3a$s_i>=t_i>=d_i$\uff0c\u5bfc\u81f4\u8fd9\u4e2a\u4e00\u65e6\u9009\u4e86\uff0c\u6240\u4ee5\u4e0d\u7ba1\u8fd9\u4e2a\u9009\u4e0d\u9009\u90fd\u662f\u4e0d\u4f1a\u5e72\u6270\u540e\u9762\u7684\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u8003\u8651\u628a$Bob$\u5728\u67d0\u4e00\u4e2a\u65f6\u523b\u8981\u9009\u7684\u5168\u90e8\u9884\u5904\u7406\u51fa\u6765\uff0c\u8dd1\u4e00\u4e2adp\u597d\u4e86\u3002\n\n\u9884\u5904\u7406\u4e00\u5f00\u59cb\u5199\u4e86$O(nk)$\u7684\uff0c\u679c\u7136\u5149\u8363\u7684\u8d85\u65f6\u4e86(\u8003\u7684\u662f\u4e00\u76f4\u4ee5\u4e3a\u662f\u5e38\u6570\u4e0d\u591f\u4f18\u79c0\u7684\u7f18\u6545\uff0c\u5199\u9898\u89e3\u7684\u65f6\u5019\u624d\u53d1\u73b0k\u662f\u548cn\u4e00\u4e2a\u89c4\u6a21\u7684\uff0c\u4e0d\u662f\u548cm\u4e00\u4e2a\u89c4\u6a21\u3002\u3002)\uff0c\u7136\u540e\u5c31\u6539\u6210\u4e86$O(klogn)$\u7684\u7ebf\u6bb5\u6811\u3002\u56e0\u4e3a\u4e0d\u4f1a\u6253\u53d6$Min$\u7684\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u8981\u5148\u628a\u7ea2\u5305\u6309\u7167\u4f18\u5148\u7ea7\u6392\u597d\u5e8f\uff0c\u7136\u540e\u4ece\u4f4e\u5230\u9ad8\u76f4\u63a5\u8986\u76d6$s_i$\u5230$t_i$\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u7ebf\u6bb5\u6811\u53ea\u8981\u652f\u6301\u533a\u95f4\u8986\u76d6\uff0c\u5355\u70b9\u67e5\u8be2\u5c31\u597d\u4e86\u3002\n\n$dp$\u5e94\u8be5\u662f\u7b97\u662f\u6bd4\u8f83\u6c34\u7684\u3002\u6211\u662f\u5012\u7740\u8dd1\u7684\uff0c$f[i][j]$\u8868\u793a\u4ece\u7b2c$i$\u4e2a\u65f6\u523b\u5f00\u59cb\uff0c\u518d\u4f7f\u7528$j$\u6b21\u5e72\u6270\uff0c\u80fd\u83b7\u5f97\u7684\u6700\u5c0f\u94b1\u6570\u3002$(f[i][j]=min(f[i+1][j-1],f[d[i]+1][j]+w[i]))$\n\n\u7136\u540e\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\n\n#define ll long long\n#define Max 100005\n\nusing namespace std;\n\ninline char gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define gc getchar\ninline ll read(){\n    ll x=0;char ch=gc();bool positive=1;\n    for(;!isdigit(ch);ch=gc())if(ch=='-')positive=0;\n    for(;isdigit(ch);ch=gc())x=x*10+ch-'0';\n    return positive?x:-x;\n}\n\ninline void write(ll x){\n    if(x<0)x=-x,putchar('-');\n    if(x>9)write(x/10);putchar(x%10+'0');\n}\n\ninline void writeln(ll x){\n    write(x);puts(\"\");\n}\n//\u4ee5\u4e0a\u662f\u5728\u8fd9\u9898\u4e2d\u6beb\u65e0\u7528\u5904\u7684\u5feb\u8bfb\u5feb\u8f93\nstruct Node{\n    ll s,t,d,w;\n}a[Max];\n//a\u7528\u6765\u5b58\u7ea2\u5305\nstruct Segment{\n    ll l,r,w,d,id;\n    inline bool operator<(const Segment x)const{\n        if(w!=x.w)return w<x.w;\n        return d<x.d;\n    }\n}b[Max];\n\nstruct Tree{\n    ll l,r,id,lazy;\n}st[Max*4];\n\nll n,m,k,size,num[Max],f[Max][205];\n\ninline void build(ll node,ll l,ll r){\n    st[node].l=l;st[node].r=r;\n    if(l==r){\n        st[node].id=0;\n        return;\n    }\n    ll mid=(l+r)>>1;\n    build(node<<1,l,mid);\n    build(node<<1|1,mid+1,r);\n    return;\n}\n\ninline void push(ll node){\n    if(!st[node].lazy)return;\n    st[node<<1].id=st[node<<1|1].id=st[node<<1].lazy=st[node<<1|1].lazy=st[node].lazy;\n    st[node].lazy=0;\n    return;\n}\n\ninline void change(ll node,ll l,ll r,ll x){\n    if(st[node].l>r||st[node].r<l)return;\n    if(st[node].l>=l&&st[node].r<=r){\n        st[node].lazy=x;\n        st[node].id=x;\n        return;\n    }\n    push(node);\n    change(node<<1,l,r,x);\n    change(node<<1|1,l,r,x);\n    return;\n}\n\ninline ll query(ll node,ll x){\n    if(st[node].l==st[node].r)return st[node].id;\n    ll mid=(st[node].l+st[node].r)>>1;\n    push(node);\n    if(x<=mid)return query(node<<1,x);\n    return query(node<<1|1,x);\n}\n//\u7565\u663e\u9b3c\u755c\u7684\u7ebf\u6bb5\u6811\nint main(){\n    n=read();m=read();k=read();\n    build(1,1,n);\n    for(int i=1;i<=k;i++){\n        a[i].s=read();a[i].t=read();a[i].d=read();a[i].w=read();\n        b[i].l=a[i].s;b[i].r=a[i].t;b[i].d=a[i].d;b[i].w=a[i].w;b[i].id=i;\n    }\n    sort(b+1,b+k+1);\n    for(int i=1;i<=k;i++){\n        change(1,b[i].l,b[i].r,b[i].id);\n    }//\u6392\u5e8f\u4e4b\u540e\u76f4\u63a5\u7528\u533a\u95f4\u8986\u76d6\u5355\u70b9\u67e5\u8be2\u7684\u7ebf\u6bb5\u6811\n    for(int i=1;i<=n;i++){\n        num[i]=query(1,i);\n    }//num[i]\u5b58\u65f6\u523bi\u9009\u4ec0\u4e48(\u5176\u5b9e\u5b8c\u5168\u4e0d\u7528\u5b58)\n    for(int i=n;i>=1;i--){\n        if(!num[i]){\n            for(int j=0;j<=m;j++){\n                f[i][j]=f[i+1][j];\n            }\n            continue;\n        }\n        f[i][0]=f[a[num[i]].d+1][0]+a[num[i]].w;\n        for(int j=1;j<=m;j++){\n            f[i][j]=min(f[i+1][j-1],f[a[num[i]].d+1][j]+a[num[i]].w);\n        }\n    }//\u7b80\u5355\u7684dp\n    writeln(f[1][m]);\n    // f[i][j]=min(f[i+1][j-1],f[d[i]+1][j]+w[i]);\n    return 0;\n}\n\n\n```",
        "postTime": 1549033970,
        "uid": 27884,
        "name": "zhaotiensn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106E \u3010Lunar New Year and Red Envelopes\u3011"
    },
    {
        "content": "\u5c0f\u6e05\u65b0 DP \u9898\u3002\n\n\u5b9a\u4e49 $f_{i,j}$ \u8868\u793a\u5728\u65f6\u523b $i$\uff0c\u5e72\u6270\u4e86 $j$ \u6b21\uff0c\u6700\u5c0f\u8d21\u732e\u3002\n\n\u5b9a\u4e49 $nex_i$ \u8868\u793a\u5728\u65f6\u523b $i$ \u4f1a\u6536\u96c6\u54ea\u4e2a\u7ea2\u5305\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$$f_{d_{nex_i}+1,j}=\\min(f_{i,j}+w_{nex_i})$$\n\n$$f_{i+1,j+1}=\\min(f_{i,j})$$\n\n\u5176\u4e2d\uff0c$f_{1,0}=0$\uff0c$ans=\\min\\limits_{j=0}^{m}f_{n+1,j}$\u3002$d_{nex_i}+1$ \u4e3a\u9009\u5b8c\u7f16\u53f7\u4e3a $w_{nex_i}$ \u7684\u7ea2\u5305\u540e\u4f1a\u8df3\u5230\u90a3\u4e2a\u4f4d\u7f6e\u3002\n\n\u73b0\u5728\u8003\u8651\u5982\u4f55\u9884\u5904\u7406\u51fa $nex_i$\u3002\n\n\u53ef\u4ee5\u5148\u4ee5 $w$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$d$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n\n\u7136\u540e\u5c06\u533a\u95f4 $[s,t]$ \u4e2d\u7684 $nex$ \u5168\u90e8\u6807\u8bb0\u4e3a\u5f53\u524d\u7f16\u53f7\uff0c\u4e4b\u540e\u4e0d\u518d\u8bbf\u95ee\u3002\n\n\u8fd9\u91cc\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u533a\u95f4\uff0c\u9047\u5230\u8bbf\u95ee\u8fc7\u7684\u76f4\u63a5\u67e5\u8be2\u5e76\u67e5\u96c6\u8df3\u8fc7\u53bb\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(nm+n\\log n)$\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=1e5+5,N2=200+5,inf=LLONG_MAX>>1;\nint n,m,k,vis[N],nex[N],fa[N];\nll f[N][N2];\nstruct node{int s,t,d;ll w;}a[N];\nbool cmp(node x,node y){return x.w!=y.w?x.w>y.w:x.d>y.d;}\nint ff(int x){return fa[x]==x?x:fa[x]=ff(fa[x]);}\nint main(){\n  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n  cin>>n>>m>>k;\n  for(int i=1;i<=k;++i)cin>>a[i].s>>a[i].t>>a[i].d>>a[i].w;\n  sort(a+1,a+k+1,cmp);\n  for(int i=1;i<=n+1;++i)fa[i]=i;\n  for(int i=1;i<=k;++i){\n    int j=a[i].s;\n    while(j<=a[i].t){\n      if(vis[j])j=ff(j);\n      else {\n        vis[j]=1;\n        nex[j]=i;\n        fa[ff(j)]=ff(j+1);\n        ++j;\n      }\n    }\n  }\n  for(int i=1;i<=n+1;++i)for(int j=0;j<=m;++j)f[i][j]=inf;\n  f[1][0]=0;\n  for(int i=1;i<=n;++i){\n    for(int j=0;j<=m;++j){\n      f[i+1][j+1]=min(f[i+1][j+1],f[i][j]);\n      if(nex[i])f[a[nex[i]].d+1][j]=min(f[a[nex[i]].d+1][j],f[i][j]+a[nex[i]].w);\n      else f[i+1][j]=min(f[i+1][j],f[i][j]);\n    }\n  }\n  ll ans=inf;\n  for(int j=0;j<=m;++j)ans=min(ans,f[n+1][j]);\n  cout<<ans<<endl;\n  return 0;\n}\n\n```\n",
        "postTime": 1684469081,
        "uid": 173864,
        "name": "EstasTonne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106E"
    },
    {
        "content": "\u4e0d\u96be\u53d1\u73b0\u6309\u7167\u8d2a\u5fc3\u7b56\u7565\uff0c\u6bcf\u4e2a\u65f6\u95f4\u70b9\u62ff\u7684\u7ea2\u5305\u662f\u56fa\u5b9a\u7684\u3002\n\n\u53ef\u4ee5\u8003\u8651\u7528\u6743\u503c\u7ebf\u6bb5\u6811 + \u626b\u63cf\u7ebf\u9884\u5904\u7406\u51fa\u6765\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u5047\u8bbe\u7b2c $i$ \u79d2\u5e94\u8be5\u53d6 $(W_i,D_i)$ \u8fd9\u4e2a\u7269\u54c1\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8bbe $dp_{i,j}$ \u8868\u793a\u524d $i$ \u79d2\u6270\u4e71 $j$ \u6b21\u7684\u6700\u5c0f\u503c\u3002\u90a3\u4e48\u6bcf\u6b21\u8003\u8651\u662f\u5426\u6270\u4e71\uff0c\u6709\u8f6c\u79fb\uff1a\n\n$$\\begin{cases}dp_{i+D_i,j}=\\min\\{dp_{i+D_i,j},dp_{i,j}+W_i\\}\\\\dp_{i+1,j+1}=\\min\\{dp_{i+1,j+1},dp_{i,j}\\}\\end{cases}$$\n\n\u6700\u540e\u8f93\u51fa $\\min\\limits_{i=n+1}^{2n}\\min\\limits_{j=0}^{m}dp_{i,j}$ \u5373\u53ef\u3002\n\n\u4e5f\u53ef\u4ee5\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u628a $i+D_i$ \u5bf9 $n+1$ \u53d6 $\\min$\uff0c\u7b54\u6848\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a $\\min\\limits_{i=0}^{m}dp_{n+1,i}$\u3002\n\n\u590d\u6742\u5ea6 $O(n \\log n+nk)$\u3002",
        "postTime": 1681896059,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "CF1106E"
    },
    {
        "content": "### [Lunar New Year and Red Envelopes](https://www.luogu.com.cn/problem/CF1106E)\n\nmd\uff0c\u88ab\u8bc8\u9a97\u4e86\u3002\n\n\u6ce8\u610f\u6761\u4ef6 $s_i\\le t_i\\le d_i$\uff0c\u8fd9\u8bf4\u660e\u6bcf\u4e2a\u65f6\u95f4\u70b9\u53ea\u6709\u4e00\u79cd\u6289\u62e9\uff0c\u800c\u4e0d\u4f1a\u56e0\u4e3a\u91cd\u53e0\u7684\u7ea2\u5305\u5bfc\u81f4\u6289\u62e9\u51fa\u73b0\u5176\u4ed6\u60c5\u51b5\u3002\n\n\u51c6\u786e\u7684\u6765\u8bf4\uff0c\u5982\u679c\u5728 $i$ \u65f6\u523b\uff0c`Bob`\u53ef\u4ee5\u9009\u62e9\u7ea2\u5305\u4e86\u3002\n\n\u90a3\u4e48 $i$ \u53f7\u65f6\u95f4\u70b9\u7684\u6700\u4f18\u7ea2\u5305\u4e00\u5b9a\u8fd8\u6ca1\u6709\u88ab\u62a2\uff0c\u56e0\u4e3a\u5982\u679c\u88ab\u62a2\u4e86\uff0c`Bob`\u4f1a\u88ab\u9001\u5230\u5927\u4e8e $t_i$ \u7684\u65f6\u95f4\u70b9\uff0c\u800c\u6b64\u65f6\u8fd9\u4e2a\u7ea2\u5305\u5df2\u7ecf\u6d88\u5931\u4e86\uff0c\u6240\u4ee5\u6bcf\u4e2a\u65f6\u95f4\u70b9\u53ea\u4f1a\u6709\u4e00\u79cd\u6289\u62e9\uff0c\u5e76\u4e14\u4e0d\u4f1a\u53d7\u5230`Alice`\u7684\u5f71\u54cd\u3002\n\n\u8003\u8651\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u51fa\u6bcf\u4e2a\u65f6\u95f4\u70b9\u7684\u6289\u62e9 $nxt_i$ \u8868\u793a\u6289\u62e9\u4e4b\u540e\u7684\u4e0b\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c$c_i$ \u8868\u793a\u6289\u62e9\u7684\u4ef7\u503c\u3002\n\n$dp_{i,j}$ \u8868\u793a\u5728 $i$ \u53f7\u65f6\u95f4\u70b9\u65f6\uff0c\u963b\u62e6 $j$ \u6b21\u7684\u6700\u5c0f\u6743\u503c\u3002\n\n\u8f6c\u79fb\u4e5f\u5f88\u7b80\u5355\n\n```cpp\ndp[nxt[i]][j]=min(dp[nxt[i]][j],dp[i][j]+c[i]);\ndp[i+1][j+1]=min(dp[i][j],dp[i+1][j+1]);\n```\n\n",
        "postTime": 1681345862,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "CF1106E Lunar New Year and Red Envelopes \u9898\u89e3"
    },
    {
        "content": "\u8bbe $f_{i,j}$ \u8868\u793a\u524d $i$ \u79d2\uff0c\u5e72\u6270\u4e86 $j$ \u6b21\uff0cBob \u80fd\u6536\u96c6\u5230\u7684\u6700\u5c11\u94b1\u6570\u3002\n\n\u90a3\u4e48\u679a\u4e3e $f_{i,j}$\uff1a\n\n- \u5982\u679c\u4e0d\u9009\u62e9\u5e72\u6270\uff0c\u5982\u679c\u5f53\u524d\u65f6\u95f4\u6ca1\u6709\u7ea2\u5305\uff0c\u5219\u8f6c\u79fb\u5230 $f_{i+1,j}$\uff0c\u7cfb\u6570\u4e3a 0\uff0c\u5982\u679c\u6709\u7ea2\u5305\uff0c\u8bbe\u53d6\u7684\u662f\u7b2c $x$ \u4e2a\uff0c\u5219\u8f6c\u79fb\u5230 $f_{d_{x} + 1, j}$\uff0c\u7cfb\u6570\u4e3a $w_x$\u3002\n\n- \u5982\u679c\u9009\u62e9\u5e72\u6270\uff0c\u5219\u8f6c\u79fb\u5230 $f_{i+1,j+1}$\uff0c\u7cfb\u6570\u4e3a 0\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u7ef4\u62a4\u5f53\u524d\u65f6\u95f4\u9009\u7684\u7ea2\u5305\uff0c\u5f00\u4e00\u4e2a multiset\uff0c\u6bcf\u6b21\u53d6\u96c6\u5408\u4e2d\u6700\u4f18\u7684\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6307\u9488 $pos$ \u8868\u793a\u968f\u65f6\u95f4\u589e\u52a0\u7b2c\u4e00\u4e2a\u53ef\u80fd\u52a0\u8fdb\u6765\u7684\u5143\u7d20\u4e0b\u6807\uff0c\u4e00\u4e2a\u4f18\u5148\u961f\u5217 $q$ \u7ef4\u62a4\u5f53\u524d\u5728 multiset \u4e2d\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u5143\u7d20\uff0c\u6bcf\u6b21\u65f6\u95f4\u589e\u52a0\u65f6\u5224\u65ad\u662f\u5426\u9700\u8981\u4ece multiset \u4e2d\u5220\u9664\uff0c\u6216\u8005\u52a0\u5165\u65b0\u7684\u5143\u7d20\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm + n \\log n)$\u3002\n\n\u8bb0\u5f97\u5f00 ```long long```\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\ninline void read(int &x)\n{\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x * 10 + ch - 48;\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define inf 0x3f3f3f3f3f3f3f3f\n#define N 100005\nstruct node\n{\n\tint s, t, d, w;\n};\nbool cmp1(const node &a, const node &b)\n{\n\treturn a.s < b.s;\n}\nstruct cmp2\n{\n\tbool operator () (const node &a, const node &b)\n\t{\n\t\tif(a.w != b.w)\n\t\t{\n\t\t\treturn a.w < b.w;\n\t\t}\n\t\treturn a.d < b.d;\n\t}\n};\nstruct cmp3\n{\n\tbool operator () (const node &a, const node &b)\n\t{\n\t\treturn a.t > b.t;\n\t}\n};\nint V, m, n;\nnode a[N];\nint f[N][205];\nmultiset<node, cmp2> s;\npriority_queue<node, vector<node>, cmp3> q;\nsigned main()\n{\n\tread(V), read(m), read(n);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tread(a[i].s), read(a[i].t), read(a[i].d), read(a[i].w);\n\t}\n\tsort(a + 1, a + n + 1, cmp1);\n\tmemset(f, 0x3f, sizeof(f));\n\tmemset(f[0], 0, sizeof(f[0]));\n\tint pos = 0;\n\tfor(int i = 0; i <= V; i++)\n\t{\n\t\twhile(a[pos + 1].s == i)\n\t\t{\n\t\t\ts.insert(a[++pos]);\n\t\t\tq.push(a[pos]);\n\t\t}\n\t\twhile(!q.empty() && q.top().t == i - 1)\n\t\t{\n\t\t\ts.erase(s.find(q.top()));\n\t\t\tq.pop();\n\t\t}\n\t\tfor(int j = 0; j <= m; j++)\n\t\t{\n\t\t\tif(j < m)\n\t\t\t{\n\t\t\t\tf[i + 1][j + 1] = min(f[i + 1][j + 1], f[i][j]);\n\t\t\t}\n\t\t\tif(s.empty())\n\t\t\t{\n\t\t\t\tf[i + 1][j] = min(f[i + 1][j], f[i][j]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tf[(*--s.end()).d + 1][j] = min(f[(*--s.end()).d + 1][j], f[i][j] + (*--s.end()).w);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = inf;\n\tfor(int i = 0; i <= m; i++)\n\t{\n\t\tans = min(ans, f[V + 1][i]);\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1638025919,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "CF1106E Lunar New Year and Red Envelopes \u9898\u89e3"
    },
    {
        "content": "> [CF1106E Lunar New Year and Red Envelopes](https://www.luogu.com.cn/problem/CF1106E)\n\n\u9996\u5148\u6839\u636e\u9898\u9762\u53ef\u4ee5\u77e5\u9053\uff0c\u6bcf\u4e00\u79d2\u949f\u5982\u679c Bob \u6709\u7ea2\u5305\u53ef\u4ee5\u6536\u96c6\uff0c\u90a3\u4e48 Bob \u6240\u6536\u96c6\u7684\u7ea2\u5305\u7684 $d$ \u548c $w$ \u662f\u56fa\u5b9a\u7684\u3002\u6240\u4ee5\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u79d2 Bob \u4f1a\u9009\u53d6\u7684\u7ea2\u5305\uff0c\u8fd9\u4e2a\u4e1c\u897f\u597d\u50cf\u6709\u5404\u79cd\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\u641e\uff0c\u8fd9\u91cc\u7528\u7684\u662f\u5806\u3002\n\n\u7136\u540e\u8003\u8651 dp\u3002\u8bbe $f_{i,j}$ \u4e3a\u73b0\u5728\u5728\u7b2c $i$ \u79d2\uff0cAlice \u5e72\u6270\u4e86 $j$ \u6b21\u4e4b\u540e Bob \u6240\u80fd\u83b7\u5f97\u7684\u6700\u5c0f\u94b1\u6570\u3002\u6839\u636e\u5b9a\u4e49\u6709\u8f6c\u79fb\u5982\u4e0b\uff1a\n\n- \u5e72\u6270\uff1a$f_{i,j} \\to f_{i+1,j+1}$\uff1b\n- \u4e0d\u5e72\u6270\uff1a $f_{i,j} + w_i \\to f_{d_i+1, j}$\uff1b\n\n\u8fd8\u8981\u7279\u5224\u4e00\u79cd\u60c5\u51b5\uff0c\u5373\u867d\u7136 Alice \u8fd9\u4e00\u79d2\u6ca1\u6709\u5e72\u6270\uff0c\u4f46\u8fd9\u4e00\u79d2\u4e5f\u6ca1\u6709\u7ea2\u5305\u53ef\u4f9b Bob \u6536\u96c6\u3002\u8f6c\u79fb\u4e3a\uff1a $f_{i,j} \\to f_{i+1,j}$\u3002\u8fb9\u754c\u4e3a $f_{0,0}=0$\uff0c\u7b54\u6848\u4e3a $\\max\\{f_{n+1,i}\\}$\u3002\n\n```cpp\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define ll long long\nusing namespace std;\n\ninline int read() {\n\tint x = 0, w = 1;char ch = getchar();\n\twhile (ch > '9' || ch < '0') { if (ch == '-')w = -1;ch = getchar(); }\n\twhile (ch >= '0' && ch <= '9')x = x * 10 + ch - '0', ch = getchar();\n\treturn x * w;\n}\n\nconst int maxn = 1e5 + 5;\nconst int maxm = 200 + 5;\n\nstruct redbag { \n\tint s, t, d, w; \n} a[maxn];\nbool operator <(redbag a, redbag b) {\n\treturn a.w > b.w || (a.w == b.w && a.d > b.d);\n}\nbool operator >(redbag a, redbag b) { return b < a; }\ninline ll min(ll x, ll y) { return x < y ? x : y; }\ninline ll max(ll x, ll y) { return x > y ? x : y; }\ninline bool cmp(redbag a, redbag b) { return a.s < b.s; }\npriority_queue<redbag, vector<redbag>, greater<redbag>> q;\nint n, m, k; ll ans;\nint d[maxn], w[maxn];ll f[maxn][maxm];\n\nint main(void) {\n\tn = read(), m = read(), k = read();\n\tfor (int i = 1;i <= k;i++) {\n\t\ta[i].s = read(), a[i].t = read(), a[i].d = read(), a[i].w = read();\n\t}\n\tsort(a + 1, a + k + 1, cmp);\n\tfor (int i = 1, j = 0;i <= n;i++) {\n\t\twhile (j < k && a[j + 1].s <= i) q.push(a[++j]);\n\t\twhile (!q.empty() && q.top().t < i) q.pop();\n\t\tif (!q.empty()) d[i] = q.top().d, w[i] = q.top().w;\n\t}\n\tmemset(f, 0x3f, sizeof(f)), f[0][0] = 0;\n\tfor (int i = 0;i <= n;i++) {\n\t\tfor (int j = 0;j <= m;j++) {\n\t\t\tf[i + 1][j + 1] = min(f[i + 1][j + 1], f[i][j]);\n\t\t\tif (d[i]) f[d[i] + 1][j] = min(f[d[i] + 1][j], f[i][j] + w[i]);\n\t\t\telse f[i + 1][j] = min(f[i + 1][j], f[i][j]);\n\t\t}\n\t}\n\tans = 2e18;\n\tfor (int i = 0;i <= m;i++) ans = min(ans, f[n + 1][i]);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1602163190,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1106E \u3010Lunar New Year and Red Envelopes\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10345347.html)\n\n### \u9898\u76ee\u5927\u610f\n\n\u6709$n(n\\leqslant10^5)$\u4e2a\u65f6\u95f4\u70b9\uff0c\u5206\u522b\u4e3a$1\\sim n$\uff0c\u6709$k(k\\leqslant10^5)$\u4e2a\u7ea2\u5305\uff0c\u7b2c$i$\u4e2a\u7ea2\u5305\u53ef\u4ee5\u5728$[s_i,t_i]$\u5185\u9886\u53d6\uff0c\u6709\u94b1$w_i$\uff0c\u9886\u4e86\u8fd9\u4e2a\u7ea2\u5305\uff0c\u76f4\u5230$d_i$\u65f6\u95f4\u70b9\u4e4b\u540e\uff08\u4e0d\u5305\u542b$d_i$\uff09\u624d\u53ef\u4ee5\u9886\u53d6\u4e0b\u4e00\u4e2a\u7ea2\u5305\u3002\n\n$Bob$\u6309\u5982\u4e0b\u89c4\u5219\u9886\u7ea2\u5305\uff1a\n\n1. \u9886\u5f53\u524d\u53ef\u4ee5\u9886\u7684\u6700\u5927\u7684\u7ea2\u5305\n2. \u82e5\u6709\u591a\u4e2a\uff0c\u9886$d$\u6700\u5927\u7684\u7ea2\u5305\n3. \u82e5\u8fd8\u6709\u591a\u4e2a\uff0c\u968f\u673a\u9886\u4e00\u4e2a\n\n$Alice$\u5e0c\u671b$Bob$\u9886\u7684\u6700\u5c11\uff0c\u5979\u53ef\u4ee5\u5728\u6700\u591a$m(m\\leqslant200)$\u4e2a\u65f6\u95f4\u70b9\u6253\u6270$Bob$\uff0c\u4f7f\u5f97\u4ed6\u4e0d\u80fd\u9886\u7ea2\u5305\uff0c\u95ee$Bob$\u6700\u5c11\u9886\u5230\u591a\u5c11\u94b1\n\n\u8c01\u53ef\u4ee5\u544a\u8bc9\u6211\u4e3a\u4ec0\u4e48\u6211\u4ea4\u7ffb\u8bd1\u7684\u65f6\u5019LATEX\u5168\u90e8\u51fa\u9505\u4e86\uff1f\n\n### \u9898\u89e3\n\n\u53d1\u73b0\u6bcf\u4e2a\u65f6\u95f4\u70b9$Bob$\u9886\u7684\u7ea2\u5305\u662f\u4e00\u5b9a\u7684\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\uff0c\u7528$set,map$\u4ec0\u4e48\u7684\uff0c\u6ce8\u610f\u6709\u91cd\u590d\u5143\u7d20\uff0c\u8bbe\u7b2c$i$\u4e2a\u65f6\u95f4\u70b9\u9886\u7684\u7ea2\u5305\u4e3a$s_i$\u3002\n\n$f_{i,j}$\u8868\u793a\u6253\u65ad\u4e86$i$\u6b21\uff0c\u73b0\u5728\u5728\u7b2c$j$\u4e2a\u65f6\u95f4\u70b9$Bob$\u9886\u7684\u6700\u5c11\u94b1\u6570\uff0c\u8f6c\u79fb\u4e3a$f_{i.j}\\to f_{i+1,j+1}$\uff0c$f_{i,j}+w_{s_j}\\to f_{i,d_{s_j}}$\u3002\n\n\n\n### C++ Code\uff1a\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <vector>\n#define maxn 100010\ntypedef std::pair<int, int> PII;\nconst long long inf = 0x3f3f3f3f3f3f3f3f;\ninline void chkmin(long long &a, long long b) { if (a > b) a = b; }\n\nint n, m, k, now = 1, nxt;\nlong long f[2][maxn], ans = inf;\nstd::vector<PII> Add[maxn], Del[maxn];\nPII Max[maxn];\nstd::map<PII, int> mp;\n\n\nint main() {\n\tstd::ios::sync_with_stdio(false), std::cin.tie(0), std::cout.tie(0);\n\tstd::cin >> n >> m >> k;\n\tfor (int i = 0, s, t, d, w; i < k; ++i) {\n\t\tstd::cin >> s >> t >> d >> w;\n\t\tAdd[s].push_back(std::make_pair(w, d));\n\t\tDel[t + 1].push_back(std::make_pair(w, d));\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (PII V : Add[i]) {\n\t\t\tif (mp.count(V)) ++mp[V];\n\t\t\telse mp[V] = 1;\n\t\t}\n\t\tfor (PII V : Del[i]) {\n\t\t\tif (!--mp[V]) mp.erase(V);\n\t\t}\n\t\tif (mp.size()) Max[i] = (*mp.rbegin()).first;\n\t\telse Max[i] = std::make_pair(0, i);\n\t}\n\n\tconst int SZ = sizeof f[now];\n\t__builtin_memset(f[nxt], 0x3f, SZ);\n\tf[nxt][1] = 0;\n\tfor (int i = 0; i <= m; ++i) {\n\t\tstd::swap(now, nxt);\n\t\t__builtin_memset(f[nxt], 0x3f, SZ);\n\t\tf[nxt][1] = 0;\n\t\tfor (int j = 1; j <= n; ++j) {\n\t\t\tchkmin(f[nxt][j + 1], f[now][j]);\n\t\t\tchkmin(f[now][Max[j].second + 1], f[now][j] + Max[j].first);\n\t\t}\n\t\tchkmin(ans, f[now][n + 1]);\n\t}\n\tstd::cout << ans << std::endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1549022810,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106E \u3010Lunar New Year and Red Envelopes\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709$k$\u4e2a\u533a\u95f4 $[s_j, t_j]$ \u8868\u793a\u4e00\u6bb5\u65f6\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u6709 $t_j, w_j$ \u8868\u793a\u82e5\u9009\u62e9\u8fd9\u4e2a\u533a\u95f4\u5219 $t_j$ \u540e\u624d\u80fd\u9009\u5176\u4ed6\u7684\u533a\u95f4\uff0c\u9009\u62e9\u533a\u95f4\u7684\u6743\u4e3a $w_j$ \u3002\u73b0\u5728\u6709\u4e00\u4e2a\u4eba\u4ece $1$ \u65f6\u523b\u5f00\u59cb\u9009\u533a\u95f4\uff0c\u4ed6\u4f1a\u9009\u5f53\u524d\u80fd\u9009\u7684\u6700\u5927\u6743\u7684\u533a\u95f4\uff0c\u82e5\u5b58\u5728\u591a\u4e2a\uff0c\u9009 $d_j$ \u5927\u7684\u533a\u95f4\u3002\u73b0\u5728\u6709 $m$ \u6b21\u673a\u4f1a\uff0c\u6bcf\u6b21\u53ef\u4ee5\u4f7f\u5f97\u8fd9\u4e2a\u4eba\u5728\u67d0\u4e00\u79d2\u4e0d\u80fd\u9009\u533a\u95f4\u3002\u6c42\u5f53\u8fd9 $m$ \u6b21\u673a\u4f1a\u4f7f\u7528\u5f97\u6700\u4f18\u65f6\uff0c\u8fd9\u4e2a\u4eba\u6700\u5c0f\u80fd\u9009\u62e9\u533a\u95f4\u6743\u548c\u3002\n\n\u6b63\u5e8fDP\u4e0d\u592a\u597d\u505a\u3002\n\n\u8003\u8651\u5012\u5e8fDP\uff0c\u8bbe$dp(i,j)$\u4e3a$[i,n]$\u7528\u4e86$j$\u6b21\u673a\u4f1a\u7684\u6700\u5c0f\u6743\u548c\u3002\n\u5219\n\n$$dp(i,j)=\\min\\{dp(i+1,j-1),dp(i+1,j),dp(g, j)\\}$$\n\n\u5176\u4e2d$g=\\max\\limits_{i \\in {[s_j, t_j]}, j\\in[1,k]}\\{d_j\\}$\n\n\u8fd9\u4e2a$g$\u53ef\u4ee5\u7528`set`\u7ef4\u62a4\u3002\n\u5177\u4f53\u5c31\u662f\u5c06\u533a\u95f4\u7aef\u70b9\u5b58\u8d77\u6765\uff0c\u7136\u540e\u679a\u4e3e\u65f6\u95f4\u7ebf\u65f6\u770b\u662f\u5426\u8d85\u51fa\u4e86\uff0c\u8d85\u51fa\u5373\u5220\u6389\uff0c\u5982\u679c\u6709\u65b0\u7684\u52a0\u5165\uff0c\u5c31\u52a0\u5165\u3002\n\n```c++\n#include<cstdio> \n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<vector>\n#include<set>\n#include<string>\n#define ms(i, j) memset(i, j, sizeof i)\n#define LL long long\n#define db long double\n#define fir first\n#define sec second\n#define mp make_pair\nusing namespace std;\n\nnamespace flyinthesky {\n\n\tLL n, m, k;\n\tvector<pair<LL, LL > > st[100000 + 5], ed[100000 + 5];\n\tLL dp[100000 + 5][200 + 5];\n\tmultiset<pair<LL, LL > > S;\n\n    void clean() {\n    \tms(dp, 0);\n\t}\n    int solve() {\n    \t\n    \tclean();\n    \tcin >> n >> m >> k;\n    \tfor (LL s, t, d, w, i = 1; i <= k; ++i) {\n    \t\tscanf(\"%lld%lld%lld%lld\", &s, &t, &d, &w);\n    \t\tst[t].push_back(make_pair(-w, -d));\n    \t\ted[s].push_back(make_pair(-w, -d));\n\t\t}\n\n\t\tfor (LL i = n; i >= 1; --i) {\n\t\t\tfor (LL o = 0; o < (LL)st[i].size(); ++o) S.insert(st[i][o]);\n\t\t\t\n\t\t\tpair<LL, LL > whw = make_pair(0, 0);\n\t\t\tif (!S.empty()) whw = *S.begin();\n\t\t\t\n\t\t\tfor (LL j = 0; j <= m; ++j) {\n\t\t\t\tLL hh = i + 1;\n\t\t\t\tif (whw.first) hh = -whw.second + 1;\n\t\t\t\tdp[i][j] = dp[hh][j] + (-whw.first);\n\t\t\t\tif (j) dp[i][j] = min(dp[i + 1][j - 1], dp[i][j]);\n\t\t\t}\n\t\t\t\n\t\t\tfor (LL o = 0; o < (LL)ed[i].size(); ++o) S.erase(S.lower_bound(ed[i][o]));\n\t\t}\n\n\t\tcout << dp[1][m];\n\n        return 0;\n    }\n}\nint main() {\n    flyinthesky::solve();\n    return 0;\n}\n```",
        "postTime": 1548992556,
        "uid": 12943,
        "name": "FlyInTheSky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106E \u3010Lunar New Year and Red Envelopes\u3011"
    }
]