[
    {
        "content": "****\u63d0\u4f9b\u4e00\u79cdO\uff08nlogn\uff09\u7684\u505a\u6cd5\uff0c\u65e0\u9700\u5404\u79cd\u795e\u5947\u7684\u6570\u636e\u7ed3\u6784\uff08\u7ebf\u6bb5\u6811\u3001\u6811\u72b6\u6570\u7ec4\u90fd\u4e0d\u9700\u8981****\uff09\n\n****\u5927\u6982\u662f\u57fa\u4e8e\u5206\u6cbb\u601d\u60f3\uff08\u4e5f\u5e26\u70b9\u8d2a\u5fc3\uff09****\n\n------------\n\u7528\u6570\u7ec4b\u8bb0\u5f55\u8f93\u5165\u7684\u6570\u7ec4a\u4e2d\u7684\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2aAi\uff0c\u5728Ai+1~An\u4e2d\u8fdb\u884c\u5206\u6cbb\uff0c\u6bcf\u6b21\u4f18\u5148\u53d6\u53f3\u8fb9\u7684\u6700\u5c0f\u503c\n\n\u5177\u4f53\u89c1\u4ee3\u7801\n\n```cpp\n#include<cstdio>\nint a[100005],b[100005],n,i,v;\ninline void in(int &x)\n{\n    x=0;\n    char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n}//\u5feb\u8bfb\ninline void go(int l,int r)\n{\n    if(l==r){printf(\"%d \",l-i-1);return;}\n    int mid=l+r>>1;\n    if(b[mid+1]<v)go(mid+1,r);\n    else go(l,mid);\n}//\u8d2a\u5fc3&\u5206\u6cbb\nint main()\n{\n    in(n);\n    for(i=1;i<=n;i++)in(a[i]);\n    b[n]=a[n];\n    for(i=n-1;i;i--)b[i]=b[i+1]>a[i]?a[i]:b[i+1];//\u9884\u5904\u7406\u540e\u7f00\u6700\u5c0f\u503c\u6570\u7ec4\n    for(i=1;i<n;i++)\n    {\n        v=a[i];\n        if(b[i+1]>=v)printf(\"-1 \");//\u8bf4\u660eAi\u53f3\u8fb9\u6ca1\u6709\u6bd4\u5b83\u8fd8\u5c0f\u7684\u6570\n        else go(i+1,n);\n    }\n    puts(\"-1\");//\u7279\u5224An\n    return 0;\n} \n```\n**\u65b9\u6cd5\u633a\u5feb\u7684\uff0c~~\uff08\u76ee\u524d\u6d1b\u8c37\u901f\u5ea6\u7b2c\u4e00\uff09~~**\n\n**\u5e0c\u671b\u80fd\u5e2e\u5230\u5927\u5bb6**\n\n",
        "postTime": 1554564610,
        "uid": 50010,
        "name": "mcqueen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "### **\u8fd9\u9898\u5927\u4f6c\u4eec\u5df2\u7ecf\u8bf4\u8fc7\u67e5\u8be2\u53f3\u5b50\u6811\u4f18\u5148\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u7ed9\u51fa\u5b8c\u6574\u7684\u4ee3\u7801\u3002\u5176\u4ed6\u5c0f\u53ef\u7231\u4eec\u53d1\u5e03\u7684\u9898\u89e3\u4e5f\u4e0d\u662f\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801\uff0c\u8fd9\u4e48\u597d\u7684\u673a\u4f1a\u6211\u53ef\u4e0d\u80fd\u653e\u8fc7\uff0c\u6211\u6765\u8865\u5145\u4e00\u4e0b\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801\u5427\u3002**\n\n\u53ea\u8981\u8bfb\u8005\u77e5\u9053\u8fd9\u9898\u662f\u67e5\u8be2\u53f3\u5b50\u6811\u4f18\u5148\uff0c\u5e94\u8be5\u7acb\u523b\u5c31\u80fd\u770b\u61c2\u6211\u7684\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#define lc root*2\n#define rc root*2+1\n\nusing namespace std;\nconst int maxn=100005;\n\nstruct SegTreeNoed{\n\tint val;\n}str[4*maxn];\nint a[maxn];\nint n,m,ans;\n\ninline void push_up(int root)\n{\n\tstr[root].val=min(str[lc].val,str[rc].val);\n}\n\ninline void build(int root,int a[],int is,int ie)\n{\n\tif(is==ie)\n\t{\n\t\tstr[root].val=a[is];\n\t\treturn;\n\t}\n\telse\n\t{\n\t\tint mid=(is+ie)>>1;\n\t\tbuild(lc,a,is,mid);\n\t\tbuild(rc,a,mid+1,ie);\n\t\tpush_up(root);\n\t}\n}\n\ninline int query(int root,int is,int ie,int qs,int qe,int judge)\n{\n\tif(is>qe||ie<qs) return -1;\n\tif(str[root].val>=judge) return -1;\n\telse\n\t{\n\t\tif(is==ie) return is;\n\t\tint k,mid=(is+ie)>>1;\n\t\tk=query(rc,mid+1,ie,qs,qe,judge);\n\t\tif(k!=-1) return k;\n\t\telse return query(lc,is,mid,qs,qe,judge);\n\t}\n}\n\nint main ()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t  scanf(\"%d\",&a[i]);\n\tbuild(1,a,1,n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans=query(1,1,n,i,n,a[i]);\n\t\tif(ans==-1) printf(\"-1 \");\n\t\telse printf(\"%d \",ans-i-1);\n\t} \n\treturn 0;\n}\n```\n\n\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u671b\u7ba1\u7406\u5927\u5927\u7ed9\u8fc7\u2026\u2026",
        "postTime": 1560352736,
        "uid": 147042,
        "name": "\u4e00\u6c34\u6e05\u6d45",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "\u975e\u5e38\u7b80\u5355\u7684\u9898\u76ee\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u9700\u8981\u627e\u5230\u6bd4\u81ea\u5df1\u5c0f\u7684\u4e0b\u6807\u6700\u5927\u7684\u6570\uff0c\u76f4\u63a5\u79bb\u6563\u5316\u7136\u540e\u5f00\u4e2a\u4ee5\u6743\u503c\u4e3a\u4e0b\u6807\u7684\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5b9e\u9645\u4e0b\u6807\u6700\u5927\u503c\u5c31\u5b8c\u4e8b\u4e86\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 100010\n#define _ 0 \nusing namespace std;\nstruct data{\n\tint x, id;\n}b[maxn];\nint n, a[maxn], ans[maxn], tree[maxn], p;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nbool cmp(data x, data y){ return x.x < y.x; }\nvoid update(int x, int y){ for (; x <= p; x += x & -x) tree[x] = max(tree[x], y); }\nint query(int x){ int sum = 0; for (; x; x -= x & -x) sum = max(sum, tree[x]); return sum; }\n\nint main(){\n\tn = read();\n\tfor (int i = 1; i <= n; ++i) b[i] = (data){read(), i};\n\tsort(b + 1, b + 1 + n, cmp);\n\tb[0].x = b[1].x + 1;\n\tfor (int i = 1; i <= n; ++i) a[b[i].id] = b[i].x == b[i - 1].x ? p : ++p;\n\tfor (int i = n; i; --i){\n\t\tans[i] = max(-1, query(a[i] - 1) - i - 1);\n\t\tupdate(a[i], i);\n\t}\n\tfor (int i = 1; i <= n; ++i) printf(\"%d \", ans[i]);\n\treturn 0 ^ _ ^ 0;\n}\n```\n",
        "postTime": 1566898935,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "## \u601d\u8def\r\n\r\n\u8fd9\u9898\u5927\u5bb6\u53ef\u80fd\u90fd\u60f3\u590d\u6742\u4e86\u3002\r\n\r\n\u5bf9\u4e8e\u8fd9\u79cd\u8ddf $a$ \u91cc\u5177\u4f53\u7684\u6570\u6ca1\u6709\u5173\u7cfb\uff0c\u53ea\u6709\u5927\u5c0f\u5173\u7cfb\u7684\u9898\uff0c\u53ef\u4ee5\u5148\u628a $a$ \u6570\u7ec4\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u8fd9\u6837\u503c\u57df\u5c31\u53d8\u6210\u4e86 $[1,n]$\u3002\r\n\r\n\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4 $ax$\uff0c$ax_i$ \u8868\u793a\u5c0f\u4e8e\u7b49\u4e8e $i$ \u7684\u6570\u4e2d\u7684**\u6700\u5927\u4e0b\u6807**\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u7b49\u4e8e $i$ \u7684\u6570\u66f4\u65b0\uff0c\u5373 $ax_{a_i}=\\max(ax_{a_i},i)$\u3002\r\n\r\n\u4e4b\u540e\uff0c\u5bf9\u4e8e $i \\in [2,n]$\uff0c\u90fd\u4e0e $ax_{i-1}$ \u66f4\u65b0\uff0c\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u601d\u60f3\u3002\r\n\r\n\u67e5\u8be2\u7684\u65f6\u5019\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u8f93\u51fa $ax_{a_i-1}$ \u5c31\u597d\u4e86\u3002\r\n\r\n## \u53c2\u8003\u4ee3\u7801\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint a[100010],b[100010];\r\n\r\nint ax[100010];\r\n\r\nint main()\r\n{\r\n\tmemset(ax,-0x3f,sizeof(ax));\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1; i<=n; ++i) scanf(\"%d\",&a[i]),b[i]=a[i];\r\n\tsort(b+1,b+n+1);\r\n\tint tot=unique(b+1,b+n+1)-b-1;\r\n\tfor(int i=1; i<=n; ++i) a[i]=lower_bound(b+1,b+n+1,a[i])-b;\r\n\tfor(int i=1; i<=n; ++i) ax[a[i]]=max(ax[a[i]],i);\r\n\tfor(int i=2; i<=n; ++i) ax[i]=max(ax[i],ax[i-1]);\r\n\tfor(int i=1; i<=n; ++i) printf(\"%d \",max(ax[a[i]-1]-i-1,-1));\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1639892968,
        "uid": 353688,
        "name": "\u738b\u7199\u6587",
        "ccfLevel": 0,
        "title": "CF91B \u9898\u89e3"
    },
    {
        "content": "~~\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4\uff1ftql \u672c\u849f\u84bb\u600e\u4e48\u53ef\u80fd\u60f3\u51fa\u6765\uff1f~~\n\n~~\u7ebf\u6bb5\u6811\uff1f\u4e3b\u5e2d\u6811\uff1forz \u672c\u849f\u84bb\u538b\u6839\u4e0d\u4f1a\u3002~~\n\n\n------------\n### \u6570\u636e\u8303\u56f4\uff1a\n\n- $N \\le 10^5 $\n\n\u4e00\u773c\u770b\u8fd9\u4e2a\u8303\u56f4\uff0c\u6b63\u89e3\u4e00\u822c\u53ea\u80fd\u662f $ \\Theta(NlogN) $ \u4e86\u3002\n\n~~\u5f88\u663e\u7136\uff0c\u672c\u849f\u84bb\u4e0d\u4f1a\u6b63\u89e3\u3002~~\n\n \u6ca1\u5173\u7cfb\uff0c $N \\le 10^5 $ \uff0c \u5f53\u7136\u7528~~\u66b4\u529b~~**\u5206\u5757**\u5566\uff01\n\n\n \n## \u6b63\u7247\u5f00\u59cb\uff1a\n\n### **\u57fa\u672c\u601d\u8def\uff1a**\n\n- \u5b9a\u4e00\u4e2a\u6570\u7ec4 $mi_i$ \uff0c\u8868\u793a\u7b2c $i$ \u5757\u91cc\u306e\u6700\u5c0f\u503c\u3002\n\n- \u4ece 1 \u5230 $n$ \uff0c\u6bcf\u6b21\u4ece\u6700\u540e\u4e00\u5757\u5f00\u59cb\uff0cfor \u5faa\u73af\u4e00\u76f4\u5230 $i$ \u6240\u5728\u5757\u306e\u4e0b\u4e00\u5757\u3002\n\n- \u82e5 $mi_j < a_i $ \uff0c\u5219for \u5faa\u73af\u66b4\u529b\u904d\u5386\u7b2c $j$ \u5757\uff0c\u4ece\u540e\u5f80\u524d\u7b2c\u4e00\u4e2a $< a_i$ \u306e\u6570\u306e\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\u3002\n\n- \u82e5 $i$ \u540e\u9762\u306e\u5757\u91cc\u306e\u6570\u90fd\u4e0d\u5c0f\u4e8e $a_i$ \uff0c\u5c31for \u5faa\u73af\u66b4\u529b\u4ece $i$ \u6240\u5728\u5757\u53f3\u7aef\u66b4\u529b\u904d\u5386\u5230 $i+1$ \uff0c\u4ece\u540e\u5f80\u524d\u7b2c\u4e00\u4e2a $< a_i$ \u306e\u6570\u306e\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\u3002\n\n- \u82e5\u8fd8\u6ca1\u627e\u5230\uff0c\u76f4\u63a5\u8f93\u51fa $-1$\n\n- \u770b\u4ee3\u7801\u53ef\u80fd\u66f4\u597d\u7406\u89e3\u3002\n\n- \u7531\u4e8e\u6c42\u95f4\u8ddd\uff0c\u7b54\u6848\u8bb0\u5f97 -1 \n\n- \u8fd8\u6709\u6700\u540e\u4e00\u5757\u306e\u53f3\u7aef\u70b9\u8981\u8bbe\u6210 $n$ \n\n### \u65f6\u95f4\u590d\u6742\u5ea6\uff1a $ \\Theta(N \\sqrt{N} ) $ \n\n**\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n\n------------\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\n#define G() Cr=getchar()\nint Xr;char Cr;\ninline int rd(){   //\u8bfb\u5165\u4f18\u5316\n\tXr=0,G();\n\twhile(Cr<'0'||Cr>'9')G();\n\twhile(Cr>='0'&&Cr<='9')Xr=(Xr<<3)+(Xr<<1)+Cr-'0',G();\n\treturn Xr;\n}\n#define MAX_N 100002\nint n;\nint block,num;\nint pos[MAX_N],va[MAX_N];\nint r[2000],mi[2000];  // l \u7528\u4e0d\u7740 \u3002 \n\nint solve(int t){\n\tfor(int i=num;i>pos[t];i--) //\u6700\u540e\u4e00\u5757\u5f00\u59cb\n\t\tif(mi[i]<va[t])      //\u7b26\u5408\u6761\u4ef6\n\t\t\tfor(int j=r[i];;j--)\n\t\t\t\tif(va[j]<va[t])return j-t-1;  //\u627e\u5230\u7b54\u6848\u3002 \n\t\t\t\t\n\tfor(int i=r[pos[t]];i>t;i--) //\u5f53\u524d\u5757\u53f3\u7aef\u5f00\u59cb\n\t\tif(va[i]<va[t])return i-t-1;  //\u627e\u5230\u7b54\u6848\u3002 \n\t\t\n\treturn -1;  //\u65e0\u7b54\u6848\u3002 \n}\nint main(){\n\tn=rd();\n\tblock=(int)sqrt(n); //\u5feb\u5927\u5c0f\u3002 \n\tnum=(n-1)/block+1;  //\u603b\u5757\u6570 \u3002 \n\tfor(int i=1;i<=n;i++)va[i]=rd(), pos[i]=(i-1)/block+1;\n\tfor(int i=1;i<=num;i++)r[i]=i*block, mi[i]=2147483647;\n\tr[num]=n;  // \u8fd9\u91cc\u7ec6\u8282\u4e00\u5b9a\u8981\u6ce8\u610f\u3002 \n\tfor(int i=1;i<=n;i++)mi[ pos[i]]=min(mi[ pos[i]], va[i]); //\u9884\u5904\u7406\u6bcf\u5757min \n\tfor(int i=1;i<=n;i++)printf(\"%d \",solve(i)); //\u7528\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5return\u66f4\u65b9\u4fbf\u3002 \n}\n```\n\n\n------------\n\n### ps:\n\n\u7801\u5b8c\u540e\u5341\u5206\u5f00\u5fc3\u5730\u4ea4\u4e86\uff08\u6211\u5148\u7528\u6811\u72b6\u6570\u7ec4\u5199\u7684\uff09\u3002\n\n\u7ed3\u679c3.62s \uff0c\u4e00\u770b\u6211\u7528\u6811\u72b6\u6570\u7ec4\u306e\uff0c3.67s \uff1f\n\n~~\u679c\u7136\u66b4\u529b\u5373\u6b63\u89e3\uff01\u66b4\u529b\u51fa\u5947\u8ff9\uff01~~",
        "postTime": 1584615036,
        "uid": 250469,
        "name": "\u541b\u306eNOIP\u3002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF91B)\r\n## \u601d\u8def\r\n\u7ffb\u904d\u4e86\u6240\u6709\u9898\u89e3\u53d1\u73b0\u6ca1\u6709\u50cf\u6211\u8fd9\u6837\u7684\u5728\u5355\u8c03\u961f\u5217\u4e0a\u4e8c\u5206\u7684\u601d\u8def\u3002\r\n\r\n\u8003\u8651\u4ece\u53f3\u5f80\u5de6\u628a\u6570\u52a0\u5165\u5355\u8c03\u961f\u5217\uff0c\u5982\u679c\u5f53\u524d\u7684\u6570\u6bd4\u5355\u8c03\u961f\u5217\u7684\u961f\u5c3e\u8981\u5927\uff0c\u663e\u7136\u4e0d\u53ef\u80fd\u4f5c\u4e3a\u7b54\u6848\uff0c\u56e0\u4e3a\u660e\u660e\u6709\u66f4\u53f3\u8fb9\u4e14\u6bd4\u5b83\u66f4\u5c0f\u7684\u6570\u5b58\u5728\uff0c\u6240\u4ee5\u4e0d\u80fd\u52a0\u5165\u5355\u8c03\u961f\u5217\u3002\u800c\u5982\u679c\u5f53\u524d\u7684\u6570\u6bd4\u5355\u8c03\u961f\u5217\u7684\u961f\u5c3e\u8981\u5c0f\uff0c\u663e\u7136\u53ef\u4ee5\u52a0\u5165\u5355\u8c03\u961f\u5217\uff0c\u4f46\u662f\u6b64\u65f6\u7684\u7b54\u6848\u662f $-1$\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u6570\u6bd4\u5b83\u5c0f\u3002\r\n\r\n\u627e\u7b54\u6848\u7684\u8fc7\u7a0b\u53ef\u4ee5\u89c6\u4e3a\u5728\u5355\u8c03\u961f\u5217\u4e0a\u4e8c\u5206\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u5b83\u7684\u6570\u5373\u53ef\u3002\r\n## \u4ee3\u7801\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint const N=1e5+10;\r\nint a[N],ans[N];\r\nstruct node{int val,id;}q[N];\r\ninline int find(int l,int r,int x){\r\n\twhile (l<r){\r\n\t\tint mid=(l+r)>>1;\r\n\t\tif (q[mid].val<x) r=mid;\r\n\t\telse l=mid+1;\r\n\t}\r\n\treturn q[l].id;\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0),cout.tie(0);\r\n\tint n;cin>>n;\r\n\tfor (int i=1;i<=n;++i) cin>>a[i];\r\n\tint top=0;\r\n\tfor (int i=n;i>=1;--i)\r\n\t\tif (!top || a[i]<=q[top].val) ans[i]=-1,q[++top].val=a[i],q[top].id=i;\r\n\t\telse ans[i]=find(1,top,a[i])-i-1;\r\n\tfor (int i=1;i<=n;++i) cout<<ans[i]<<' ';\r\n\tcout<<'\\n';\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1663804453,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF91B Queue"
    },
    {
        "content": "## \u9006\u5e8f\u5bf9\u95ee\u9898\n\n[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF91B)\n\n[\u535a\u5ba2\u98df\u7528](https://www.luogu.com.cn/blog/368107/solution-cf91b)\n\n\n\n------------\n\n\n _**\u89e3\u6cd5**_ \n\nPart 1.\u503c\u57df\u7ebf\u6bb5\u6811\u4ecb\u7ecd\n\n\u5f52\u5e76\u6392\u5e8f\u53ef\u4ee5\u89e3\u51b3\u7edf\u8ba1\u9006\u5e8f\u5bf9\u603b\u6570\u7684\u9898\u76ee\uff0c\u4f46\u662f\u5982\u679c\u8981\u6c42\u7b2c\u4e00\u4e2a\u70b9\u662f $i$ \u7684\u9006\u5e8f\u5bf9\uff0c\u5c31\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\n\n\u4ee5\u7ebf\u6bb5\u6811\u4e3a\u4f8b ~~\u5176\u5b9e\u6211\u53ea\u4f1a\u7ebf\u6bb5\u6811~~\n\n\u6c42\u9006\u5e8f\u5bf9\u7684\u7ebf\u6bb5\u6811\u53eb\u505a**\u503c\u57df\u7ebf\u6bb5\u6811**\n\n\u666e\u901a\u7684\u7ebf\u6bb5\u6811\uff0c\u7b2c $i$ \u9879\u5728\u6811\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4f46\u503c\u57df\u7ebf\u6bb5\u6811\u4e2d\uff0c\u7b2c $x$ \u9879\u5728\u6811\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7edf\u8ba1\u7684\u662f\u503c\u4e3a $x$ \u9879\u5728\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\n\n\u56e0\u4e3a\u9006\u5e8f\u5bf9\u5fc5\u987b\u662f\u7f16\u53f7\u6bd4\u5f53\u524d\u7f16\u53f7\u5927\u800c\u503c\u6bd4\u5f53\u524d\u503c\u5c0f\uff0c\u6240\u4ee5\u6c42\u7b2c\u4e00\u4e2a\u70b9\u662f $i$ \u7684\u9006\u5e8f\u5bf9\u603b\u6570\u7b49\u4e8e\n\n$$query(i+1,n)$$\n\n\u800c\u5c06\u503c\u4e3a $x$ \u7684\u6570\u7684\u603b\u6570\u52a0\u4e00\u5c31\u662f\n\n$$update(x,1)$$\n\nPart 2.\u503c\u57df\u7ebf\u6bb5\u6811\u5b9e\u73b0\n\n\u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u503c\u57df\u7ebf\u6bb5\u6811\u9700\u5f00\u5230 $4\\times a_i$ \u5927\u5c0f\n\n\u5047\u5982 $a_i \\lt 10^9$ \u5c31\u76f4\u63a5MLE\n\n\u8fd9\u65f6\u5c31\u7528\u5230\u4e00\u79cd\u795e\u5947\u7684\u65b9\u6cd5\u2014\u2014**\u79bb\u6563\u5316**\n\n\u79bb\u6563\u5316\u7684\u5927\u610f\u5c31\u662f\uff1a\u5982\u679c\u7b2c $i$ \u4e2a\u6570\u662f\u6570\u7ec4\u4e2d\u7b2c $j$ \u5c0f\u7684\uff0c\u5219\u820d\u5f03 $i$ \uff0c\u7528 $j$ \u6765\u4ee3\u66ff\n\n\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u6570\u7684\u5927\u5c0f\uff0c\u4e0d\u5173\u5fc3\u503c\u662f\u591a\u5c11\uff0c\u6240\u4ee5\u8fd9\u6837OK\u4e14\u7701\u4e0b\u4e86\u7a7a\u95f4\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4 $q$ \uff0c$q_i$ \u8868\u793a\u8f93\u5165\u7b2c $i$ \u4e2a\u6570\u7684\u503c\u4e0e \u7f16\u53f7( $i$ )\n\n\u63a5\u7740\u6309\u503c\u5bf9 $q$ \u6392\u5e8f\uff08\u5982\u679c\u503c\u76f8\u540c\uff0c\u5219\u6309\u7f16\u53f7\u5927\u5c0f\u6392\u5e8f\uff09\n\n\u6700\u540e\u904d\u5386 $q$ \uff0c\u6b64\u65f6 \u7b2c $i$ \u9879\u7684\u7f16\u53f7\u5c31\u662f\u6211\u4eec\u4e0a\u6587\u8bf4\u5230\u7684\u4ee3\u66ff $i$ \u7684 $j$\n\n\u53ef\u662fmain\u51fd\u6570\u600e\u4e48\u5199\u5462\uff1f\n\nmain\u51fd\u6570\u6d41\u7a0b\u56fe\uff1a\n\n1. \u8f93\u5165 $n$ \u4e0e $n$ \u4e2a\u6570\uff0c\u5e76\u4fdd\u5b58\u81f3 $q$ \u4e2d\n2. \u6309\u6570\u503c\u7ed9 $q$ \u6392\u5e8f\n3. \u904d\u5386 $q$ \uff1a\n\t+ \u628a\u503c\u57df\u7ebf\u6bb5\u6811\u4e2d\u7b2c $q[i].id$ \u9879\u7684\u4f4d\u7f6e\u52a0\u4e00\n\t+ \u8f93\u51fa $query(q[i].id + 1,n)$ \n    \nPart 3.\u503c\u57df\u7ebf\u6bb5\u6811\u4ee3\u7801\uff1a\n\n\u6c42\u9006\u5e8f\u5bf9\u603b\u6570\uff1a\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#define int long long\n#define lc (i << 1)\n#define rc (i << 1 | 1)\n#define mid (L + R >> 1)\nconst int maxn = 100001;\nint T[maxn << 2],n,ans = 0;\nvoid push_up(int i){\n\tT[i] = T[lc] + T[rc];\n}\nvoid update(int p,int i = 1,int L = 1,int R = n){\n\tif(L == R){\n\t\t++T[i];\n\t\treturn;\n\t}\n\tif(p <= mid) update(p,lc,L,mid);\n\telse update(p,rc,mid + 1,R);\n\tpush_up(i);\n}\nint query(int l,int r,int i = 1,int L = 1,int R = n){\n\tif(l <= L && R <= r) return T[i];\n\tint res = 0;\n\tif(l <= mid) res += query(l,r,lc,L,mid);\n\tif(r > mid) res += query(l,r,rc,mid + 1,R);\n\treturn res;\n}\nstruct Query{\n\tint x,id;\n\tbool operator<(const Query& Q) const{\n\t\treturn x != Q.x ? x < Q.x : id < Q.id;\n\t}\n} q[maxn];\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i = 1;i <= n;++i) scanf(\"%lld\",&q[i].x),q[i].id = i;\n\tstd::sort(q + 1,q + n + 1);\n\tfor(int i = 1;i <= n;++i){\n\t\tint id = q[i].id;\n\t\tupdate(id);\n\t\tans += i - query(1,id);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\nPart 4.\u672c\u9898\u7684\u601d\u8def\n\n~~\u7136\u9e45\u4ee5\u4e0a\u5e76\u4e0d\u662fAC\u4ee3\u7801\u3002\u3002\u3002~~\n\n\u8fd9\u9898\u8981\u6c42\u7684\u662f\u5bf9\u4e8e\u6bcf\u4e2a $i$ \uff0c\u9006\u5e8f\u5bf9 $(i,j)$ \u4e2d $j$ \u53d6\u6700\u5927\u65f6 $j-i-1$ \u7684\u503c\n\n\u7531\u4e8e\u5e76\u4e0d\u662f\u7edf\u8ba1\u6570\u91cf\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u4e5f\u4e0d\u662f\u6570\u91cf\uff0c**\u800c\u662f\u6700\u5927\u503c**\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6bd4\u5982\u7b2c $i$ \u53f7\u70b9\u5728\u6811\u4e2d\u7684\u4f4d\u7f6e\u7684\u503c\u8868\u793a\u7684\u662f **\u4e0e $i$ \u6210\u9006\u5e8f\u5bf9\u7684\u6700\u5927 $j$**\n\n\u4f46\u4e5f\u662f\u503c\u57df\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\n\n**_\u4ee3\u7801_**\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#define lc (i << 1)\n#define rc (i << 1 | 1)\n#define mid (L + R >> 1)\n#define Max(a,b) ((a) > (b) ? (a) : (b))\nint T[400001],n;\nvoid update(int p,int i = 1,int L = 1,int R = n){\n\tif(L == R){\n\t\tT[i] = p;\n\t\treturn;\n\t}\n\tif(p <= mid) update(p,lc,L,mid);\n\telse update(p,rc,mid + 1,R);\n\tT[i] = Max(T[lc],T[rc]);\n}\nint query(int l,int r,int i = 1,int L = 1,int R = n){\n\tif(l <= L && R <= r) return T[i];\n\tint res = -1;\n\tif(l <= mid) res = Max(res,query(l,r,lc,L,mid));\n\tif(r > mid) res = Max(res,query(l,r,rc,mid + 1,R));\n\treturn res;\n}\nstruct Query{\n\tint x,id;\n\tbool operator<(const Query& Q) const{\n\t\treturn x != Q.x ? x < Q.x : id < Q.id;\n\t}\n} q[100001];\nint ans[100001];\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i = 1;i <= n;++i) scanf(\"%lld\",&q[i].x),q[i].id = i;\n\tfor(int i = 0;i <= (n << 2);++i) T[i] = -1;\n\tstd::sort(q + 1,q + n + 1);\n\tfor(int i = 1;i <= n;++i){\n\t\tint id = q[i].id;\n\t\tupdate(id);\n\t\tint res = query(id + 1,n);\n\t\tif(res >= 0) ans[id] = res - id - 1;\n\t\telse ans[id] = -1;\n\t}\n\tfor(int i = 1;i <= n;++i) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1618656350,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3-CF91B"
    },
    {
        "content": "\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bf4\u4e86\u666e\u901a\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u4e86\uff0c\n\n\u4f46\u662f\u8fd9\u9053\u9898\u8fd8\u6709\u7528\u4e3b\u5e2d\u6811\u505a\u7684\u65b9\u6cd5\n\n\uff08\u5176\u5b9e\u662f\u6211\u4e0d\u4f1a\u666e\u901a\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff09\n\n\u5bf9\u4e8e\u7b2c$i$\u4e2a\u4eba\uff0c\u5efa\u7acb\u4e00\u68f5\u7b2c$i$\u4e2a\u4eba\u5230\u7b2c$n$\u4e2a\u4eba\u7684\u4e3b\u5e2d\u6811\n\n\u4e3b\u5e2d\u6811\u91cc\u7684\u8282\u70b9$[l, r]$\u5b58\uff1a\u8eab\u9ad8\u5728$[l, r]$\u4e14\u7ad9\u5728\u6700\u524d\u9762\u7684\u4eba\n\n\u6bcf\u4e2a\u4eba\u7684\u4e0d\u9ad8\u5174\u5ea6\uff1a\u4ee5\u8fd9\u4e2a\u4eba\u5efa\u7acb\u7684\u4e3b\u5e2d\u6811\u4e2d\uff0c\u8eab\u9ad8\u5728$[1, a_i-1]$\u8303\u56f4\u5185\u7ad9\u5728\u6700\u524d\u9762\u7684\u4eba\n\n\u5f53\u7136\uff0c\u672c\u9898\u8fd8\u9700\u8981\u79bb\u6563\u5316\n\n\u79bb\u6563\u5316\u590d\u6742\u5ea6\uff1a$O(n \\log n)$\n\n\u5efa\u521d\u59cb\u6811\u590d\u6742\u5ea6\uff1a$O(n \\log n)$\n\n\u7ed9\u4e00\u4e2a\u4eba\u5efa\u6811\u590d\u6742\u5ea6\uff1a$O(\\log n)$\n\n\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6\uff1a$O(\\log n)$\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n \\log n)$\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, a[100010], b[100010], cnt[100010], root[100010], tree[2000010], L[2000010], R[2000010], qwq;\nmap < int , int > mp;\n\nvoid build(int &rt, int l, int r) {\n\trt = ++qwq;\n\tif(l == r) return ;\n\tint mid = (l + r) >> 1;\n\tbuild(L[rt], l, mid);\n\tbuild(R[rt], mid + 1, r);\n}\n\nvoid update(int &rt, int rt1, int l, int r, int val, int pos) {\n\trt = ++qwq;\n\tL[rt] = L[rt1], R[rt] = R[rt1], tree[rt] = tree[rt1];\n\tif(l == r) {\n\t\tif(!tree[rt]) tree[rt] = pos;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(val <= mid) update(L[rt], L[rt1], l, mid, val, pos);\n\telse update(R[rt], R[rt1], mid + 1, r, val, pos);\n\ttree[rt] = max(tree[L[rt]], tree[R[rt]]);\n}\n\nint query(int rt, int l, int r, int val) {\n\tif(val < l) return -1;\n\tif(r <= val) {\n\t\tif(!tree[rt]) return -1;\n\t\treturn tree[rt];\n\t}\n\tint mid = (l + r) >> 1;\n\tint res = -1;\n\tres = query(L[rt], l, mid, val);\n\tif(val > mid) res = max(res, query(R[rt], mid + 1, r, val));\n\treturn res;\n}\n\nint main() {\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tb[i] = a[i];\n\t}\n\tsort(b + 1, b + n + 1);\n\tb[0] = 0x7fffffff;\n\tint cnt = 0;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(b[i] != b[i - 1]) cnt++, mp[b[i]] = cnt;\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\ta[i] = mp[a[i]];\n\t}\n\tbuild(root[n + 1], 1, cnt);\n\tfor(int i = n; i; i--) {\n\t\tupdate(root[i], root[i + 1], 1, cnt, a[i], i);\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tint qwq = query(root[i], 1, cnt, a[i] - 1);\n\t\tif(qwq == -1) cout << -1 << \" \";\n\t\telse cout << qwq - i - 1 << \" \";\n\t}\n\tcout << endl;\n\treturn 0;\n} \n```",
        "postTime": 1566916625,
        "uid": 108185,
        "name": "Acanthe",
        "ccfLevel": 6,
        "title": "CF91B\u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF91B)\n\n[\u66f4\u597d\u7684\u89c2\u8d4f\u6548\u679c](https://www.luogu.com.cn/blog/305532/solution-cf91b)\n\n---\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n- \u7ed9\u5b9a $n$ \u4e2a\u6b63\u6574\u6570 \u3002\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570 $a_i$\uff0c\u9700\u8981\u8f93\u51fa\u4e00\u4e2a\u7b54\u6848\uff1a\n\t\n    - \u8bbe $a_j > a_i$ \u4e14 $j > i$\uff1b\n    - \u5728\u6ee1\u8db3\u7b2c\u4e00\u6761\u7684\u57fa\u7840\u4e0a\u4f7f $j-i-1$ \u5c3d\u53ef\u80fd\u5927\uff0c\u6b64\u65f6 $j-i-1$ \u5373\u4e3a\u7b54\u6848\u3002\n\t- \u82e5\u6ca1\u6709\u627e\u5230 $j$ \u4f7f\u5f97 $a_j > a_i$ \u4e14 $j > i$\uff0c\u8f93\u51fa $-1$\u3002\n    \n---\n\n**\u672c\u9898\u601d\u8def**\n\n\u7531 $a_j > a_i$ \u4e14 $j > i$ \u53ef\u4ee5\u60f3\u5230\u9006\u5e8f\u5bf9\uff0c\u65e2\u7136\u521a\u5b66\u4e86\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u90a3\u5c31\u7528\u503c\u57df\u7ebf\u6bb5\u6811\u5427\u3002\n\n[\u4e0d\u4f1a\u503c\u57df\u7ebf\u6bb5\u6811\u7684\u5148\u505a\u8fd9\u9898](https://www.luogu.com.cn/problem/P1908)\n\n\u4f46\u6ce8\u610f\u6570\u636e\u8303\u56f4\uff1a$a_i \\le 10^9$\uff0c\u76f4\u63a5\u5f00\u6570\u7ec4\u4f1a\u7206\uff0c\u6545\u9700**\u79bb\u6563\u5316**\u4e00\u4e0b\u3002\n\n\u79bb\u6563\u5316\u5f88\u7b80\u5355\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n$1\\quad-100\\quad5\\quad-10^9$\n\n\u79bb\u6563\u5316\u5927\u6982\u5c31\u662f\uff1a**\u5982\u679c\u4e00\u4e2a\u6570 $i$ \u662f\u6570\u7ec4\u4e2d\u7b2c $j$ \u5927\uff08\u6216\u5c0f\uff09\u7684\uff0c\u90a3\u4e48\u5c31\u7528 $j$ \u6765\u4ee3\u66ff $i$\u3002**\n\n\u4e0a\u9762\u7684\u6570\u7ec4\u79bb\u6563\u5316\u5c31\u53d8\u6210\u4e86\uff08\u4ece\u5927\u5230\u5c0f\uff09\n\n$2\\quad3\\quad1\\quad4$\n\n\u672c\u9898\u53e6\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f\uff1a\u7b54\u6848\u6c42\u7684\u662f\u6700\u5927\u503c\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u4fdd\u5b58\u7684\u662f\u6700\u5927\u503c\u3002\n\n---\n\n**[$\\color{black}\\texttt{AC}$](https://www.luogu.com.cn/record/49796052) $\\color{black}\\texttt{CODE}$**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define lpos pos << 1\n#define rpos pos << 1 | 1\nusing namespace std;\n\nconst int MAXN = 1e5 + 5;\n\nint n;\nint ans[MAXN];\n\nstruct num\n{\n\tint val, id;\n\tbool operator <(const num &x)const\n\t{\n\t\tif (x.val == val)\n\t\t{\n\t\t\treturn x.id > id;\n\t\t}\n\t\treturn x.val > val;\n\t}\n}a[MAXN];\n\nstruct tree\n{\n\tint l, r, val;\n}t[MAXN << 2];\n\nvoid pushup(int pos)\n{\n\tt[pos].val = max(t[lpos].val, t[rpos].val);\n}\n\ninline void build(int pos, int l, int r)\n{\n\tt[pos].l = l, t[pos].r = r;\n\tif (l == r)\n\t{\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(lpos, l, mid);\n\tbuild(rpos, mid + 1, r);\n}\n\ninline void update(int pos, int dis)\n{\n\tint l = t[pos].l, r = t[pos].r;\n\tif (l == r)\n\t{\n\t\tt[pos].val = dis;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (dis <= mid)\n\t{\n\t\tupdate(lpos, dis);\n\t}\n\telse\n\t{\n\t\tupdate(rpos, dis);\n\t}\n\tpushup(pos);\n}\n\ninline int query(int pos, int L, int R)\n{\n\tint l = t[pos].l, r = t[pos].r;\n\tif (l >= L && r <= R)\n\t{\n\t\treturn t[pos].val;\n\t}\n\tint mid = (l + r) >> 1, res = -1;\n\tif (L <= mid)\n\t{\n\t\tres = query(lpos, L, R);\n\t}\n\tif (R > mid)\n\t{\n\t\tres = max(res, query(rpos, L, R));\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tbuild(1, 1, n);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i].val);\n\t\ta[i].id = i;\n\t}\n\tsort(a + 1, a + n + 1);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint id = a[i].id;\n\t\tupdate(1, id);\n\t\tint res = query(1, 1, n);\n\t\tif (res >= 0)\n\t\t{\n\t\t\tans[id] = res - id - 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans[id] = -1;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tprintf(\"%d \", ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1619002773,
        "uid": 305532,
        "name": "mango09",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF91B"
    },
    {
        "content": "\u5f00\u59cb\u8fd8\u770b\u4e0d\u51fa\u6765\u4ec0\u4e48\uff0c\u7136\u540e\u53d1\u73b0\u56e0\u8be5\u662f $O(n \\log n)$ \u7684\uff0c\u7136\u540e\u53d1\u73b0\u4e8c\u5206\u53ef\u505a\u3002\n\n\u91cd\u70b9\u5728\u4e8e\u5982\u4f55\u4e8c\u5206\u3002\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\uff0c\u60f3\u8981\u8ba9 $j-i-1$ \u5927\uff0c\u90a3\u4e48 $j$ \u5c31\u9700\u8981\u5c3d\u91cf\u5927\u3002\u4e8c\u5206\u7684\u65f6\u5019\u6211\u4eec\u8981\u5c3d\u91cf\u5f80\u53f3\uff0c\u5982\u679c\u4e0d\u80fd\u5f80\u53f3\u5219\u201c\u9000\u800c\u6c42\u5176\u6b21\u201d\u5f80\u5de6\u3002\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5f80\u53f3\u3002\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u9897\u7ebf\u6bb5\u6811/\u4e00\u4e2aST\u8868\u5b58\u50a8\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\u5982\u679c\u53f3\u533a\u95f4\u7684\u6700\u5c0f\u503c\u5c0f\u4e8e $a_i$ \uff0c\u90a3\u4e48\u53ef\u4ee5\u5f80\u53f3\u533a\u95f4\uff0c\u5426\u5219\u5982\u679c\u5de6\u533a\u95f4\u7684\u6700\u5c0f\u503c\u5c0f\u4e8e $a_i$\uff0c\u90a3\u4e48\u53ef\u4ee5\u671b\u5de6\u533a\u95f4\uff0c\u518d\u5426\u5219\u8f93\u51fa $-1$ \u8dd1\u8def\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $n \\log n$ \u4e58\u4ee5\u4e00\u4e2a\u4e8c\u5206\u7684\u590d\u6742\u5ea6 $\\log n$ \u7b49\u4e8e $O(n \\log^2 n)$\u3002\n\n\u4e0b\u9762\u63d0\u4f9b\u672c\u9898\u4ee3\u7801\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<windows.h>\nusing namespace std;\ntypedef long long ll;\n#define maxn 100010\ninline ll rd(){\n    ll x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') f=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=x*10+ch-'0'; ch=getchar();}\n    return 1ll*x*f;\n}\nll maxx(ll a,ll b){return a>b?a:b;}\nll minn(ll a,ll b){return a<b?a:b;}\nvoid wr(ll x,char ch){\n    printf(\"%lld%c\",x,ch);\n}\nll n,a[maxn],val[maxn<<2],ls[maxn<<2],rs[maxn<<2];\nvoid pushup(ll pos){\n    val[pos]=minn(val[pos<<1],val[pos<<1|1]);\n}\nvoid build(ll l,ll r,ll pos){\n    ls[pos]=l,rs[pos]=r;\n    if(l==r) {val[pos]=a[l]; return;}\n    ll mid=l+r>>1ll;\n    if(l<=mid) build(l,mid,pos<<1);\n    if(mid<r) build(mid+1,r,pos<<1|1);\n    pushup(pos);\n}\nll query(ll l,ll r,ll pos){\n    if(l<=ls[pos]&&rs[pos]<=r) return val[pos];\n    ll mid=(ls[pos]+rs[pos])/2ll,ans=1e18;\n    if(l<=mid) ans=query(l,r,pos<<1);\n    if(mid<r) ans=minn(ans,query(l,r,pos<<1|1));\n    return ans;\n}\nint main(){\n    n=rd();\n    for(ll i=1;i<=n;i++) a[i]=rd();\n    build(1,n,1);\n    for(ll i=1;i<n;i++){\n        ll lft=i+1,rit=n,ansl,ansr1;\n        bool _1=false;\n        if(lft==rit){\n            if(a[i]>a[n]) wr(0,' ');\n            else wr(-1,' ');\n            continue;\n        }\n        while(lft<rit){\n            ll mid=lft+rit>>1;\n            if(a[i]>query(mid+1,rit,1)){\n                ansl=mid+1,ansr1=rit;\n                lft=mid+1;\n            }else if(a[i]>query(lft,mid,1)){\n                ansl=lft,ansr1=mid;\n                rit=mid;\n            }else{\n                _1=true;\n                break;\n            }\n        }\n        if(_1) wr(-1,' ');\n        else wr(ansl-i-1,' ');\n    }\n    wr(-1,'\\n');\n    return 0;\n}\n```",
        "postTime": 1612766492,
        "uid": 334727,
        "name": "BreakPlus",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u9996\u5148\u6982\u62ec\u9898\u610f\uff1a\u8981\u6c42\u4e00\u4e2a\u5e8f\u5217\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6700\u53f3\u4fa7\u7684\u6bd4\u81ea\u5df1\u5c0f\u7684\u6570\u662f\u8c01\u3002\u6ca1\u6709\u8f93\u51fa-1.\n\n\u53d1\u73b0\u5b8c\u5168\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5904\u7406\uff0c\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u8fd4\u56de\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u4f18\u5148\u67e5\u8be2\u53f3\u9762\u3002\n\n\u6709\u4eba\u8bf4\u8fd9\u53eb\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u6211\u89c9\u5f97\u7ebf\u6bb5\u6811\u672c\u8eab\u5c31\u662f\u4e8c\u5206\u7684\u4e00\u4e2a\u7ed3\u6784\uff0c\u6240\u4ee5\u4e0d\u592a\u7b97\u5427\u3002\n\n\u90a3\u4e48\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define lson pos<<1\n#define rson pos<<1|1\nusing namespace std;\nconst int maxn=1e5+5;\nint n;\nint a[maxn];\nint mn[maxn<<2];\nvoid build(int pos,int l,int r)\n{\n    int mid=(l+r)>>1;\n    if(l==r)\n    {\n        mn[pos]=a[l];\n        return;\n    }\n    build(lson,l,mid);\n    build(rson,mid+1,r);\n    mn[pos]=min(mn[lson],mn[rson]);\n}\nint query(int pos,int l,int r,int x,int y,int k)//\u67e5\u8be2x-y\u533a\u95f4\u4e2d\u4e0b\u6807\u6700\u5927\u7684\u5c0f\u4e8ek\u7684\u6570\u7684\u4e0b\u6807\n{\n    int mid=(l+r)>>1;\n    int ret=0;\n    if(mn[pos]>=k)\n        return -1;\n    if(l==r)\n        return l;\n    if(y>mid)\n    {\n        ret=query(rson,mid+1,r,x,y,k);\n        if(ret!=-1)\n            return ret;\n    }\n    if(x<=mid)\n        ret=query(lson,l,mid,x,y,k);\n    return ret;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    build(1,1,n);\n    for(int i=1;i<n;i++)\n    {\n        int ans=query(1,1,n,i+1,n,a[i]);\n        if(ans==-1)\n            printf(\"%d \",ans);\n        else \n            printf(\"%d \",ans-i-1);\n    }\n    printf(\"-1\");\n    return 0;\n}\n```\n\n",
        "postTime": 1605941796,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://registergen.github.io/post/solution-cf91b/)\n\n# Solution\n\n\u6807\u51c6\u7684\u7ebf\u6bb5\u6811\u4e0a\u8dd1\u4e8c\u5206\u3002\n\n\u5efa\u51fa\u4e00\u68f5\u7ef4\u62a4 $a$ \u7684 $\\min$ \u7684\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u6211\u4eec\u4e00\u5b9a\u662f\u5c3d\u53ef\u80fd\u5f80\u53f3\u5b50\u6811\u8dd1\u3002\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n# Code\n\n\u6838\u5fc3\u90e8\u5206\uff1a\n\n```cpp\nint query(int i,int l,int r,int ql,int qr,int x){\n\tif(t[i].minn>=x)return -1; // \u8bf4\u660e\u6574\u4e2a\u533a\u95f4\u90fd\u6ca1\u6709\u5c0f\u4e8e x \u7684\u6570\uff0c\u8fd4\u56de -1\n\tif(l==r)return l;\n\tint mid=(l+r)>>1;\n\tint res;\n\tif(qr>mid){ // \u4f18\u5148\u5f80\u53f3\u5b50\u6811\u8dd1\n\t\tres=query(rs(i),mid+1,r,ql,qr,x);\n\t\tif(res!=-1)return res; // \u5982\u679c\u6709\u7b54\u6848\uff0c\u5219\u8fd4\u56de\u5b83\n\t}\n\tif(ql<=mid)return query(ls(i),l,mid,ql,qr,x); // \u5982\u679c\u53f3\u5b50\u6811\u6ca1\u6709\u7b54\u6848\uff0c\u5219\u5f80\u5de6\u5b50\u6811\u8dd1\n\treturn res;\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n\nconst int N=1e5;\n\nstruct Node{\n\tint minn;\n};\n\nint n,a[N+10];\nNode t[N*4+10];\n\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\ninline void pushUp(int i){t[i].minn=std::min(t[ls(i)].minn,t[rs(i)].minn);}\nvoid build(int i,int l,int r){\n\tif(l==r)return t[i].minn=a[l],void();\n\tint mid=(l+r)>>1;\n\tbuild(ls(i),l,mid);\n\tbuild(rs(i),mid+1,r);\n\tpushUp(i);\n}\n\nint query(int i,int l,int r,int ql,int qr,int x){\n\tif(t[i].minn>=x)return -1;\n\tif(l==r)return l;\n\tint mid=(l+r)>>1;\n\tint res;\n\tif(qr>mid){\n\t\tres=query(rs(i),mid+1,r,ql,qr,x);\n\t\tif(res!=-1)return res;\n\t}\n\tif(ql<=mid)return query(ls(i),l,mid,ql,qr,x);\n\treturn res;\n}\n\n#undef ls\n#undef rs\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",a+i);\n\tbuild(1,1,n);\n\tfor(int i=1;i<n;i++){\n\t\tint res=query(1,1,n,i+1,n,a[i]);\n\t\tif(res==-1)printf(\"-1 \");\n\t\telse printf(\"%d \",res-i-1);\n\t}\n\tputs(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1603017810,
        "uid": 242702,
        "name": "registerGen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217\uff0c\u6c42\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0e\u4f4d\u4e8e\u5b83\u53f3\u4fa7\u7684\u79bb\u5b83\u6700\u8fdc\u7684\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e4b\u95f4\u7684\u6570\u7684\u4e2a\u6570\u3002\uff08~~\u6211\u575a\u4fe1\u6211\u8bed\u6587\u5f88\u597d~~\uff09\n# \u601d\u8def\n\u7ebf\u6bb5\u6811\uff0c\u8282\u70b9\u4fdd\u5b58\u533a\u95f4\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u5c06\u5f53\u524d\u7684\u6570\u66f4\u65b0\u4e3aINF\uff0c\u7136\u540e\u67e5\u627e\u6574\u4e2a\u533a\u95f4\u5185\u6700\u53f3\u8fb9\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u5750\u6807\u3002\n# \u4ee3\u7801\n```\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<queue>\n#include<iostream>\n#define int long long\n#define INF 1000000005\nusing namespace std;\n\nconst int maxn = 200005;\nint n, a[maxn], s[maxn];\n\nstruct node{\n\tint l, r, minn;\n}tree[maxn << 2];\n\nvoid pushup(int rt) {\n\ttree[rt].minn = min(tree[rt << 1].minn, tree[rt << 1 | 1].minn); \n}\n\nvoid build(int rt, int l, int r) {\n\ttree[rt].l = l;\n\ttree[rt].r = r;\n\tif (l == r) {\n\t\ts[l] = tree[rt].minn = a[l];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(rt << 1, l, mid);\n\tbuild(rt << 1 | 1, mid + 1, r);\n\tpushup(rt);\n}\n\nint query(int rt, int l, int r, int x) {\n\tif (l == r) \n\t\treturn l;\n\tint mid = (l + r) >> 1;\n\tif (tree[rt << 1 | 1].minn < x) return query(rt << 1 | 1, mid + 1, r, x);\n\telse return query(rt << 1, l, mid, x);\n}\n\nvoid change(int rt, int l , int r, int x) {\n\tif (l == r) {\n\t\ttree[rt].minn = INF;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (x <= mid) change(rt << 1, l, mid, x);\n\telse change(rt << 1 | 1, mid + 1, r, x);\n\tpushup(rt);\n}\n\nsigned main() {\n\tscanf(\"%lld\", &n);\n\tfor (int i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\n\tbuild(1, 1, n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tchange(1, 1, n, i);\n\t\tif (tree[1].minn >= s[i]) printf(\"-1 \");\n\t\telse printf(\"%lld \", query(1, 1, n, s[i]) - i - 1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1602666795,
        "uid": 371178,
        "name": "Fan_Tuan",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u4e00\u4e0b\u5927\u4f6c\u4eec\u7684\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709\u4eba\u548c\u6211\u7684\u601d\u8def\u76f8\u540c\u3002\u3002\u3002\n\n\u4e00\u79cd\u6bd4\u8f83\u597d\u4e9b\u7684nlogn\u505a\u6cd5\uff0c\u6ca1\u6709\u7528\u4efb\u4f55\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\n\na[i]\u8868\u793a\u5e74\u9f84\uff0cf[]\u8868\u793a\u7b54\u6848\n\n\u6574\u4e2a\u5e8f\u5217\uff0c\u628a\u6240\u6709\u5e74\u9f84\u6254\u8fdb\u5927\u6839\u5806\u3002\n\n\u518d\u4ece\u53f3\u5f80\u5de6\u626b\u63cf\u5e8f\u5217\uff0c\u6bcf\u6b21\u4ece\u5806\u4e2d\u5f39\u51fa\u5927\u4e8e\u5f53\u5148a[]\u7684\u6240\u6709\u4eba\uff0c\u5e76\u7edf\u8ba1f\n\u53ef\u4ee5\u8bc1\u660e\u8fd9\u662f\u6700\u8fdc\u7684\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff0c\u5177\u4f53\u770b\u6ce8\u91ca\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define fir(a, b, c) for(register int a = b; a <= c; a ++)\n#define ll long long\nusing namespace std;\n\ninline int read() {\n\tint x = 0; bool flag = 1; char c = getchar();\n\tfor(; !isdigit(c); c = getchar())  if(c == '-') flag = 0;\n\tfor(; isdigit(c); c = getchar()) x = x * 10 + c - '0';\n\treturn flag ? x : -x;\n}\n\ntypedef pair<int ,int> pl;\nconst int N = 1e5+10;\nint n, a[N], f[N];\npriority_queue<pl> q;\n\nint main() {\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn = read();\n\tfir (i, 1, n) {\n\t\ta[i] = read();\n\t\tq.push(make_pair(a[i], i));\n\t}\n\tfir (i, 1, n) f[i] = -2;//\u8d4b\u521d\u503c\uff1a-2\u8868\u793a\u8fd8\u672a\u5904\u7406\n\tfor (int i = n; i >= 1; -- i) {\n\t\tif (f[i] != -2) continue;//\u5982\u679c\u5df2\u7ecf\u6807\u8bb0\u8fc7\u7b54\u6848\uff0c\u8bf4\u660e\u6bd4\u524d\u9762\u7684\u5e74\u9f84\u5927\uff0c\u5bf9\u5176\u4ed6\u7b54\u6848\u5c31\u65e0\u8d21\u732e\n\t\tf[i] = -1;\n\t\twhile (!q.empty() && q.top().first > a[i]) {\n\t\t\tif (f[q.top().second] != -2) {\n\t\t\t\tq.pop();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tf[q.top().second] = i-q.top().second-1;\n\t\t\tq.pop();\n\t\t}\n\t}\n\tfir (i, 1, n) printf(\"%d \", f[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\n\n\n```\n\n",
        "postTime": 1573269296,
        "uid": 51871,
        "name": "\u795e\u4e4b\u849f\u84bbxyk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "## \u65e0\u9700\u7ebf\u6bb5\u6811\u7684\u795e\u5947\u505a\u6cd5\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\n\n\u5bf9\u4e8e\u5c0f\u6570\u636e\u5176\u5b9e\u53ef\u4ee5$O(n)$\n\n\u9898\u610f\u5927\u6982\u662f\u6709\u4e00\u4e32\u6570\uff0c\u6c42\u51fa\u6bcf\u4e2a\u6570\u548c\u5728\u5176\u524d\u9762\u7684\u6bd4\u4ed6\u5c0f\u7684\u6700\u524d\u9762\u7684\u6570\u7684\u8ddd\u79bb\n\n\u5bf9\u4e8e\u6c42\u4e24\u8005\u8ddd\u79bb\u7684\u5e38\u7528\u601d\u60f3\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u4e24\u8005\u5230\u961f\u9996\u7684\u8ddd\u79bb\u7136\u540e\u4f5c\u5dee\n\n\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49 f \u6570\u7ec4\uff0cf [ i ] \u8868\u793a\u5728\u5e74\u9f84\u4e3a i \u7684\u4eba\u524d\u9762\u7684\u6700\u9760\u524d\u7684\u6bd4\u4ed6\u5e74\u8f7b\u7684\u4eba\u8ddd\u79bb\u961f\u9996\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7f16\u53f7\u4e3a i \uff0c\u5e74\u9f84\u4e3a a [ i ] \u7684\u4eba\uff0c\u5176\u4e0d\u9ad8\u5174\u7a0b\u5ea6\u5c31\u662f ( n - i ) - f [ a [ i ] ] - 1 \uff0c\u5176\u4e2d n - i \u4e3a\u5176\u81ea\u8eab\u4e0e\u961f\u9996\u7684\u8ddd\u79bb\uff08\u6ce8\u610f\u8f93\u5165\u7684\u961f\u5217\u987a\u5e8f\u662f\u5012\u5e8f\u7684\uff09\uff0c\u5e76\u4e14\u56e0\u4e3a\u6c42\u7684\u662f\u95f4\u9694\uff0c\u6240\u4ee5\u9700\u8981\u591a\u51cf1\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ece\u961f\u9996\u5f80\u961f\u5c3e\u904d\u5386\uff0c\u4e00\u8fb9\u6c42\u7b54\u6848\u4e00\u8fb9\u66f4\u65b0 f \u6570\u7ec4\u3002\u7531\u4e8e\u6392\u5728\u540e\u9762\u7684\u4eba\u5373\u4f7f\u5e74\u9f84\u518d\u5c0f\uff0c\u4e5f\u4e0d\u4f1a\u8986\u76d6\u524d\u9762\u4eba\u7684 f \uff0c\u6240\u4ee5 f \u7684\u6bcf\u4e2a\u5143\u7d20\u81f3\u591a\u88ab\u66f4\u65b0\u4e00\u6b21\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$O ( n )$\n\n\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\u5417\uff1f\u5e76\u6ca1\u6709\u3002\u6211\u4eec\u6ce8\u610f\u5230\u5e74\u9f84\u6700\u5927\u662f$ 10^9 $\uff0c\u56e0\u6b64 f \u6570\u7ec4\u5982\u679c\u5f00\u8fd9\u4e48\u5927\u4f1a\u76f4\u63a5\u7206\u7a7a\u95f4\uff08\u4e8b\u5b9e\u4e0a\u7f16\u8bd1\u90fd\u8fc7\u4e0d\u4e86\uff09\n\n\u8003\u8651\u5230\u4eba\u6570\u6700\u591a\u53ea\u6709$ 10^5$\u4e2a\uff0c\u90a3\u4e48\u5e74\u9f84\u6700\u591a\u4e5f\u53ea\u6709$ 10^5$\u79cd\uff0c\u9898\u76ee\u53ea\u8003\u8651\u5e74\u9f84\u7684\u5927\u5c0f\u800c\u4e0d\u8003\u8651\u76f8\u5bf9\u5dee\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u79bb\u6563\u5316\u5904\u7406\u3002\u79bb\u6563\u5316\u590d\u6742\u5ea6$ O(nlogn) $\n\nAC\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int inf = 0x3f3f3f3f;\n//\u5feb\u901f\u8bfb\u5165\nll rd(){register ll r=0,fh=1;register char c=getchar();while((c<'0'||c>'9')&&c!='-')c=getchar();if(c=='-')fh=-1,c=getchar();while(c>='0'&&c<='9')r=r*10+c-'0',c=getchar();return r*fh;}\n\n#define MAXN 100005\n\nint n;\nint a[MAXN],b[MAXN];\nint f[MAXN];\nint ans[MAXN];\n\nint main()\n{\n\tmemset(f,inf,sizeof(f));\n\tn = rd();\n\t//\u8bfb\u5165 + \u79bb\u6563\u5316 \n\tfor(int i = 1; i <= n; ++i)//\u7f16\u53f7\u5c0f\u7684\u4e3a\u961f\u5c3e \n\t\tb[i] = a[i] = rd();\n\tsort(b+1,b+1+n);\n\tint cnt=1;\n\tfor(int i = 2; i <= n; ++i)\n\t\tif(b[i] != b[cnt])b[++cnt] = b[i];\n\tfor(int i = 1; i <= n; ++i)\n\t\ta[i] = lower_bound(b + 1, b + 1 + cnt, a[i]) - b;\n\t//\u5904\u7406\u6570\u7ec4f\n\t//f[i] \u5e74\u9f84\u5c0f\u4e8ei\u7684\u7b2c\u4e00\u4e2a\u4eba\u4e0e\u961f\u9996\u7684\u8ddd\u79bb \n\tint j = cnt;\n    \t//j\u5b9a\u4e49\u5728\u524d\u9762\uff0c\u9632\u6b62\u7b97\u6cd5\u9000\u5316\u6210O(n^2)\n\tfor(int i = n; i >= 1; --i){//\u4ece\u961f\u9996\u5f00\u59cb\u5904\u7406 \n\t\tint dis = n - i;//\u5230\u961f\u9996\u7684\u8ddd\u79bb \n\t\tans[i] = dis - f[a[i]] - 1;//\u6c42\u7684\u662f\u95f4\u9694\u8ddd\u79bb\uff0c\u6240\u4ee5\u8981 -1 \n\t\tif(ans[i] < 0)ans[i] = -1; \n\t\t//\u52a0\u5165f\u6570\u7ec4 \n\t\tfor(; j >= a[i] + 1 && dis < f[j]; --j){\n\t\t\tf[j] = dis;\n\t\t}\n\t}\n\t//\u8f93\u51fa\u7b54\u6848 \n\tfor(int i = 1; i <= n; ++i)\n\t\tprintf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1566036478,
        "uid": 73832,
        "name": "tiaotiao",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "\u4e00\u9053CF~~\u5927\u6c34~~\u9898......\n\n\u5982\u6709\u4e0d\u8db3\u6216\u9519\u8bef\uff0c\u8bf7\u5728\u8bc4\u8bba\u4e2d\u6307\u51fa\u6216\u79c1\u4fe1\u544a\u8bc9\u6211 ~~\u80fd\u618b\u7740\u6700\u597d\u618b\u7740~~\n\n## \u8bdd\u4e0d\u591a\u8bf4\uff0c\u8fdb\u5165\u6b63\u9898\n\n---------------------------------------------\u6211\u662f\u5206\u5272\u7ebf---------------------------------------------\n\n\n\u5047\u8bbe\u6211\u4eec\u8981\u6c42A\u7684 \u201c \u4e0d\u9ad8\u5174\u5ea6 \u201d\uff0c\u90a3\u4e48\u6839\u636e\u9898\u610f\uff0c\u5c31\u662f\u8981\u627e\u5230\u4e00\u4e2a\u4ebaB\uff0c\u4f7f\u5f97\uff1a\n1. B\u7684\u5e74\u9f84\u6bd4A\u5c0f\uff1b\n1. \u5728\u6240\u6709\u5e74\u9f84\u6bd4A\u5c0f\u7684\u4eba\u4e2d\uff0cB\u79bbA\u6700\u8fdc\uff1b\n\n\u90a3\u4e48B\u4e0eA\u7684\u8ddd\u79bb\u5c31\u662fA\u7684 \u201c \u4e0d\u9ad8\u5174\u5ea6 \u201d\u3002\n\n\u5176\u5b9e\u5927\u5bb6\u4e5f\u5e94\u8be5\u53d1\u73b0\u4e86\uff0c\u4e0a\u8ff0B\u6240\u8981\u6ee1\u8db3\u7684\u8fd9\u4e24\u4e2a\u5173\u7cfb\uff0c\u662f\u5b58\u5728\u4e00\u79cd _\u9012\u8fdb\u5173\u7cfb_ \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c**\u6211\u4eec\u5728\u5bfb\u627eB\u65f6\uff0c\u53ef\u4ee5\u73b0\u5c06\u6240\u6709\u6bd4A\u5c0f\u7684\u4eba\u627e\u51fa\u6765\uff0c\u518d\u53bb\u627e\u5176\u4e2d\u79bbA\u6700\u8fdc\u7684\u90a3\u4e2a**\uff0c\u90a3\u4e2a\u4eba\u5c31\u662fB\u3002\n\n\u627e\u6bd4A\u5e74\u9f84\u5c0f\u7684\u4eba\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528 **sort\u6392\u5e8f** \u628a\u6bd4A\u5e74\u9f84\u5c0f\u7684\u90fd\u5f04\u5230\u4e00\u4e2a\u533a\u95f4\u4e2d\uff0c\u518d\u5728\u5176\u4e2d\u7528 **\u7ebf\u6bb5\u6811** \u7ef4\u62a4\u533a\u95f4\uff08\u8ddd\u79bb\uff09\u6700\u5927\u503c\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u5c31\u662f **sort\u6392\u5e8f\uff0b\u7ebf\u6bb5\u6811**\uff08~~\u6211\u4e5f\u4e0d\u77e5\u9053\u6211\u4e3a\u5565\u8981\u518d\u8bf4\u4e00\u904d~~\uff09\n\n\u9644\u4e0a\uff21\uff23\u4ee3\u7801\uff1a\n```cpp\n//\u7801\u98ce\u6e05\u5947\u8bf7\u89c1\u8c05 \n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+2;\nint n,v,maxn[4*N],idn[N];//maxn\u8868\u793a\u533a\u95f4\u5e74\u9f84\u6700\u5927\u503c \nstruct syzs{\n    int id,num,ans;\n} a[N];\nbool cmp(syzs a,syzs b){\n    return a.num<b.num;\n}//\u6309\u7167\u5e74\u9f84\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \nvoid build(int x,int y,int k){\n    if(x==y){\n    \tmaxn[k]=a[x].id;\n    \treturn;\n    } \n    int mid=x+y>>1,op=k<<1;\n    build(x,mid,op);\n    build(mid+1,y,op+1);\n    maxn[k]=max(maxn[op],maxn[op+1]);\n}\nvoid ser(int x,int y,int k,int l,int r){\n    if(x>=l&&y<=r){\n    \tv=max(v,maxn[k]);\n    \treturn;\n    }\t\n    int mid=x+y>>1,op=k<<1;\n    if(mid>=l) ser(x,mid,op,l,r);\n    if(mid<r) ser(mid+1,y,op+1,l,r);\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i].num);//\u8f93\u5165\u5e74\u9f84 \n        a[i].id=i;\n\t\t//\u8fd9\u91cc\u7684id\u6709\u4e24\u4e2a\u542b\u4e49\uff1a\u4e00\u4e2a\u662fi\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u50a8\u5b58\u4e0b\u6765\u65b9\u4fbf\u8ba1\u7b97\u8ddd\u79bb\uff0c\u53e6\u4e00\u4e2a\u542b\u4e49\u662f\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u4eba\u5728\u961f\u5217\u4e2d\u7684\u987a\u5e8f\uff0c\u65b9\u4fbf\u8f93\u51fa\u7b54\u6848\u3002 \n    }\n    sort(a+1,a+n+1,cmp);\n    build(1,n,1);//\u521d\u59cb\u5316 \n    for(int i=1;i<=n;i++){\n        if(a[i].num==a[i-1].num) idn[i]=idn[i-1];\n        else idn[i]=i-1;\n\t\t//\u7531\u4e8e\u961f\u5217\u4e2d\u6709\u53ef\u80fd\u6709\u4e0eA\u5e74\u9f84\u76f8\u540c\u7684\u4eba\uff0c\u800c\u8fd9\u4e9b\u4eba\u4e0d\u80fd\u88ab\u8003\u8651\uff0c\u6240\u4ee5\u8981\u7ef4\u62a4\u4e00\u4e2aidn\u6570\u7ec4\u50a8\u5b58\u4e0eA\u5e74\u9f84\u6700\u63a5\u8fd1\uff08\u4e14\u6bd4A\u5c0f\uff09\u7684\u4eba\u5728\u73b0\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002 \n        v=-1;//v \u8868\u793aB\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e \n        if(idn[i]>=1) ser(1,n,1,1,idn[i]);//\u5bfb\u627eB \n        a[a[i].id].ans=max(-1,v-a[i].id-1);//\u8981\u6ce8\u610f\u672c\u9053\u9898\u8ba1\u7b97\u8ddd\u79bb\u7684\u65b9\u5f0f\uff1b\u5982\u679c\u5728\u6bd4A\u5e74\u9f84\u5c0f\u7684\u4eba\u4e2d\uff0c\u6ca1\u6709\u4e00\u4e2a\u7ad9\u5728A\u524d\u9762\uff0c\u6839\u636e\u9898\u610f\uff0c\u7b54\u6848\u4e3a-1.\t\t\n    }\n    for(int i=1;i<=n;i++) printf(\"%d \",a[i].ans);//\u6309\u7167\u539f\u672c\u5728\u961f\u5217\u4e2d\u7684\u987a\u5e8f\u8f93\u51fa\u7b54\u6848 \n}\n```\n### \u5c31\u8fd9\u6837\u5427......",
        "postTime": 1552122874,
        "uid": 99174,
        "name": "\u6d1b\u5bb9MX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    },
    {
        "content": "\u4e00\u9053\u88f8\u88f8\u7684\u7ebf\u6bb5\u6811\u677f\u5b50\n\n\u5efa\u4e2a\u4fdd\u5b58\u7740\u533a\u95f4\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u67e5\u8be2\u53f3\u5b50\u6811\u4f18\u5148\n\n\u9644\u4e0a\u67e5\u8be2\u7684\u5b50\u51fd\u6570\uff1a\n\n```\ninline int cx(int num ,int pos, int l, int r, int id){\n    if(l == r)return a[l]<num?l:-1;\n    int m=(l+r)>>1,ans=-1;\n    if(minn[id<<1|1]<num)\n        ans =cx(num,pos,l,m,id<<1);\n    else if(m > pos &&minn[id<<1] < num)//mid\u6bd4\u6240\u5728\u4f4d\u7f6e\u5927\uff0c\u624d\u6267\u884c\u5de6\u5b50\u6811\u3002\n        ans =cx(num,pos,m+1,r,id<<1|1);\n    return ans;\n}\n\n```",
        "postTime": 1533192876,
        "uid": 47269,
        "name": "yzx72424",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF91B \u3010Queue\u3011"
    }
]