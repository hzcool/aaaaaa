[
    {
        "content": "\u4e60\u60ef\u6027\u7684\u628a\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u7edd\u5bf9\u503c\u62c6\u51fa\u6765\uff0c\u7528\u4e8c\u8fdb\u5236\u8868\u793a\n\n$ 31 $ \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f $ 11111 $\uff0c\u8868\u793a $ 5 $ \u7ef4\u7684\u4e00\u4e2a\u70b9\u7684\u5750\u6807\u52a0\u5165\u7684\u6b63\u8d1f\u60c5\u51b5\u90fd\u4e3a\u6b63\uff08\u5373 $ x[1] - y[1] + x[2] - y[2] + x[3] - y[3] + x[4] - y[4] + x[5] - y[5] $\n\n$ 29 $ \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f $ 11101 $\uff0c\u8868\u793a $ x[1] - y[1] + x[2] - y[2] + x[3] - y[3] - x[4] + y[4] + x[5] - y[5] $ \uff08\u6ce8\u610f $ x[4] $ \u548c $ y[4] $ \u7684\u7b26\u53f7\u53d8\u5316\n\n\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f $ max\\ \\{f[0] + f[31], f[1] + f[30], f[2] + f[29]...\\} $\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\n#define Fast_cin ios::sync_with_stdio(false), cin.tie();\n#define rep(i, a, b) for(register int i = a; i <= b; i++)\n#define per(i, a, b) for(register int i = a; i >= b; i--)\n#define DEBUG(x) cerr << \"DEBUG\" << x << \" >>> \" << endl;\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long ll;\n\ntemplate <typename _T>\ninline void read(_T &f) {\n    f = 0; _T fu = 1; char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') fu = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { f = (f << 3) + (f << 1) + (c & 15); c = getchar(); }\n    f *= fu;\n}\n\ntemplate <typename T>\nvoid print(T x) {\n    if(x < 0) putchar('-'), x = -x;\n    if(x < 10) putchar(x + 48);\n    else print(x / 10), putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid print(T x, char t) {\n   print(x); putchar(t);\n}\n\nconst int N = 2e5 + 5;\n\nstruct ele { int f[32]; };\n\nstruct Node {\n    int l, r; ele val;\n}p[N << 2];\n\nint t[N][5];\nint n, m, k;\n\nele merge(ele a, ele b) {\n    for(register int i = 0; i < (1 << k); i++) a.f[i] = max(a.f[i], b.f[i]);\n    return a;\n}\n\nvoid build(int u, int l, int r) {\n    p[u].l = l; p[u].r = r;\n    if(l == r) {\n        for(register int i = 0; i < (1 << k); i++) {\n            p[u].val.f[i] = 0;\n            for(register int j = 0; j < k; j++) {\n                if(i & (1 << j)) p[u].val.f[i] += t[l][j];\n                else p[u].val.f[i] -= t[l][j];\n            }\n        }\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(u << 1, l, mid); build(u << 1 | 1, mid + 1, r);\n    p[u].val = merge(p[u << 1].val, p[u << 1 | 1].val);\n}\n\nvoid change(int u, int l) {\n    if(p[u].l == p[u].r) {\n        for(register int i = 0; i < (1 << k); i++) {\n            p[u].val.f[i] = 0;\n            for(register int j = 0; j < k; j++) {\n                if(i & (1 << j)) p[u].val.f[i] += t[l][j];\n                else p[u].val.f[i] -= t[l][j];\n            }\n        }\n        return;\n    }\n    int mid = (p[u].l + p[u].r) >> 1;\n    if(mid >= l) change(u << 1, l); else change(u << 1 | 1, l);\n    p[u].val = merge(p[u << 1].val, p[u << 1 | 1].val);\n}\n\nele query(int u, int l, int r) {\n    if(p[u].l >= l && p[u].r <= r) return p[u].val;\n    int mid = (p[u].l + p[u].r) >> 1;\n    if(mid >= l && mid + 1 <= r) return merge(query(u << 1, l, r), query(u << 1 | 1, l, r));\n    else if(mid >= l) return query(u << 1, l, r); return query(u << 1 | 1, l, r);\n}\n\nint main() {\n    read(n); read(k);\n    for(register int i = 1; i <= n; i++) {\n        for(register int j = 0; j < k; j++) {\n            read(t[i][j]);\n        }\n    }\n    build(1, 1, n); read(m);\n    while(m--) {\n        int opt; read(opt);\n        if(opt == 1) {\n            int i; read(i);\n//\t\t\tcout << i << \" \" << k << endl;\n            for(register int j = 0; j < k; j++) read(t[i][j]);\n            change(1, i);\n        }\n        if(opt == 2) {\n            int l, r; read(l); read(r);\n            ele res = query(1, l, r); int ans = 0;\n            for(register int i = 0; i < (1 << (k - 1)); i++) ans = max(ans, res.f[i] + res.f[(1 << k) - 1 - i]);\n            print(ans, '\\n');\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1545048377,
        "uid": 51815,
        "name": "LJC00118",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1093G \u3010Multidimensional Queries\u3011"
    },
    {
        "content": "### \u524d\u8a00\n**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**:>[\u849f\u84bb\u535a\u5ba2\u7684\u4f20\u9001\u95e8](https://www.cnblogs.com/linzhengmin/p/11351470.html)<  \n\u5982\u679c\u4e00\u4e2a\u70b9\u8bb0\u4e3a$a$\uff0c\u90a3\u4e48\u5728\u672c\u6587\u4e2d$a_x$\u8868\u793a$a$\u5728\u7b2c$x$\u7ef4\u7a7a\u95f4\u4e0a\u7684\u5750\u6807\u503c\n### \u9898\u89e3\n\u8fd9\u9898\u7684\u601d\u8def\u73c2\u4ee5\u8bf4\u975e\u5e38\u5de7\u5999(\u539f\u8c05\u6211\u53c8\u7528\u4e86\u8fd9\u4e2a\"\u73c2\")\uff0c  \n\u6211\u4eec\u77e5\u9053\u66fc\u54c8\u987f\u8ddd\u79bb\u662f$\\sum|a_i-b_i|$\uff0c$|a_i-b_i|$\u5176\u5b9e\u4e5f\u73c2\u4ee5\u770b\u4f5c\u662f$(a_i-b_i)$\u548c$(b_i-a_i)$\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\u3002  \n\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\u66fc\u54c8\u987f\u8ddd\u79bb\u73c2\u4ee5\u770b\u4f5c\u662f$\\sum max(a_i-b_i,b_i-a_i)$\uff0c\n\u7ee7\u7eed\u5206\u6790\u73c2\u4ee5\u5f97\u51fa\uff0c\u6bcf\u4e2a\u70b9\u5728\u6bcf\u4e00\u7ef4\u5ea6\u4e0a\u8981\u5e94\u7528\u7684\u65e0\u975e\u53ea\u6709\u4e24\u79cd\u60c5\u51b5$a_i$\uff0c$-a_i$\u3002  \n\u7531\u4e8e\u533a\u95f4\u5185\u53d6\u4e24\u70b9\u6c42\u6700\u5c0f\u503c\u8981\u6c42\u6bcf\u4e2a\u70b9\u90fd\u662f\u5b8c\u6574\u7684(\u5c31\u662f\u8bf4\u4e00\u65e6\u9009\u53d6\u4e86\u8be5\u70b9\u90a3\u4e48\u5fc5\u5b9a\u4f1a\u7528\u5230\u8be5\u70b9\u6240\u6709\u7ef4\u5ea6\u4e0a\u7684\u5750\u6807)\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5b83\u6700\u591a\u53ef\u80fd(\u4ec5\u4e3a\u53ef\u80fd)\u7528\u5230\u7684\u72b6\u6001\u4f1a\u662f$2^k$\u6b21\u65b9\u4e2a\u3002  \n\u672c\u9898\u5750\u6807\u53ea\u67095\u7ef4\uff0c\u7535\u8111\u4e0d\u662f\u4eba\u8111\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u73c2\u4ee5\u679a\u4e3e\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\u3002\n\u90a3\u4e48\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u65f6\u5019\u4fbf\u5229\u6240\u6709$a_i$\u7684\u6b63\u8d1f\u6027\uff0c\u663e\u7136\u82e5$a_i$\u4e3a\u6b63\uff0c$b_i$\u5373\u8d1f\uff1ba_i\u4e3a\u8d1f\uff0c$b_i$\u4e3a\u6b63\u3002\n\u5982\u679c\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u72b6\u6001\u6765\u538b\u7f29\uff0c1\u8868\u793a$a_i$\u4e3a\u6b63\uff0c0\u8868\u793a$a_i$\u4e3a\u8d1f\uff0c\u663e\u7136\u4efb\u610f\u4e00\u7ec4\u5173\u4e8e$a$\u7684\u72b6\u6001\uff0c\u8bb0\u4e3a$sta$\uff0c  \n\u5bf9\u5e94\u7684$b$\u7684\u88c5\u6001\u8868\u793a\u4e3a$(((2^k) - 1) - sta)$\u4e5f\u73c2\u4ee5\u8bb0\u4f5c$(((2^k) - 1)\\ \\textbf{xor}\\ sta)$\u3002  \n\u90a3\u4e48\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u5bf9\u5e94\u7684\u533a\u95f4$[l,r]$\u5185\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u6700\u5927\u503c\u3002  \n\u4e0a\u4f20\u6807\u8bb0\u975e\u5e38\u7b80\u5355\u5c31\u662f\u66b4\u529b\u53d6\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u7136\u540e\u53d6\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u6b63\u8d1f\u6027\u7684\u73c2\u80fd\uff0c\u90fd\u53d6max\u5373\u53ef\u3002  \n```cpp\ninline void pushUp(int pos){\n\tfor (int i = 0; i < max_sta; ++i)\n\t\tseg[pos].f[i] = max(seg[pos << 1].f[i], seg[pos << 1 | 1].f[i]);\n}\n```\n\u540c\u7406\u5e94\u7528\u4e8e\u5408\u5e76query\u65f6\u7684\u5de6\u53f3\u5b50\u6811\u7684\u7ed3\u679c\u3002\n#### \u4f8b\u5b50\n\u5982\u679c\u60a8\u6ca1\u6709\u770b\u61c2\u4e0a\u9762\u7684\u6587\u5b57\uff0c\u6211\u4eec\u4e0d\u59a8\u6765\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u3002  \n\u82e5$k=3$\u65f6\u6709\u4e24\u4e2a\u70b9$a,b$\u5750\u6807\u5206\u522b\u8bb0\u4e3a$(1,2,3),(-1,2,4)$  \n\u90a3\u4e48\u5bf9\u4e8e\u70b9a\u6765\u8bf4\u6709$2^3=8$\u79cd\u72b6\u6001\uff0c  \n\u5373$(1,2,3),(1,2,-3),(1,-2,3),(1,-2,-3),$  \n&ensp;&ensp;$(-1,2,3),(-1,2,-3),(-1,-2,3),(-1,-2,-3)$  \n\u540c\u7406b\u4e5f\u6709$2^3=8$\u79cd\u72b6\u6001\uff0c\u5bf9\u4e8e\u8fd9$a,b$\u7684$8$\u79cd\u72b6\u6001\u4e24\u4e24\u5bf9\u5e94\uff0c\u4e5f\u5c31\u662f  \n$(1,2,3)$\u5bf9\u5e94$(-(-1),-2,-4)\\dots$\u8fd9\u4e9b\u4e92\u76f8\u5bf9\u5e94\u7684\u72b6\u6001\u53d6max\u4ee5\u540e\u4e5f\u5c31\u662f $\\sum|a_i-b_i|$\u5566QAQ     \n\n### \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Pos{\n\tint f[32];\n} seg[800005];\n\nint n, k, max_sta;\n\ninline void pushUp(int pos){\n\tfor (int i = 0; i < max_sta; ++i)\n\t\tseg[pos].f[i] = max(seg[pos << 1].f[i], seg[pos << 1 | 1].f[i]);\n}\n\nint tmppos[5];\n\nvoid build(int pos, int l, int r){\n\tif (l == r){\n\t\tfor (int i = 0; i < k; ++i) scanf(\"%d\", &tmppos[i]);\n\t\tfor (int i = 0; i < max_sta; ++i){\n\t\t\tseg[pos].f[i] = 0;\n\t\t\tfor (int j = 0; j < k; ++j)\n\t\t\t\tif (i & (1 << j))\n\t\t\t\t\tseg[pos].f[i] += tmppos[j];\n\t\t\t\telse\n\t\t\t\t\tseg[pos].f[i] -= tmppos[j];\n\t\t}\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(pos << 1, l, mid), build(pos << 1 | 1, mid + 1, r);\n\tpushUp(pos);\n}\n\ninline void mrg(Pos &a, Pos b){\n\tfor (int i = 0; i < max_sta; ++i)\n\t\ta.f[i] = max(a.f[i], b.f[i]);\n}\n\nPos query(int pos, int l, int r, int x, int y){\n\tif (x <= l && r <= y) return seg[pos];\n\tint mid = (l + r) >> 1;\n\tPos res;\n\tif (x <= mid)\n\t\tres = query(pos << 1, l, mid, x, y);\n\tif (y > mid){\n\t\tif (x <= mid)\n\t\t\tmrg(res, query(pos << 1 | 1, mid + 1, r, x, y));\n\t\telse\n\t\t\tres = query(pos << 1 | 1, mid + 1, r, x, y);\n\t}\n\treturn res;\n}\n\nvoid modify(int pos, int l, int r, int x){\n\tif (l == r){\n\t\tfor (int i = 0; i < max_sta; ++i){\n\t\t\tseg[pos].f[i] = 0;\n\t\t\tfor (int j = 0; j < k; ++j)\n\t\t\t\tif (i & (1 << j))\n\t\t\t\t\tseg[pos].f[i] += tmppos[j];\n\t\t\t\telse\n\t\t\t\t\tseg[pos].f[i] -= tmppos[j];\n\t\t}\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (x <= mid) modify(pos << 1, l, mid, x);\n\telse modify(pos << 1 | 1, mid + 1, r, x);\n\tpushUp(pos);\n}\n\nint main(){\n\tscanf(\"%d %d\", &n, &k); max_sta = 1 << k;\n\tbuild(1, 1, n);\n\tint q; scanf(\"%d\", &q);\n\twhile (q--){\n\t\tint op; scanf(\"%d\", &op);\n\t\tint i;\n\t\tif (op == 1){\n\t\t\tscanf(\"%d\", &i);\n\t\t\tfor (int j = 0; j < k; ++j)\n\t\t\t\tscanf(\"%d\", &tmppos[j]);\n\t\t\tmodify(1, 1, n, i);\n\t\t}\n\t\telse if (op == 2){\n\t\t\tint l, r; scanf(\"%d %d\", &l, &r);\n\t\t\tPos res = query(1, 1, n, l, r);\n\t\t\tint ans = 0;\n\t\t\tfor (int i = 0; i < (1 << (k - 1)); ++i)\n\t\t\t\tans = max(ans, res.f[i] + res.f[(max_sta - 1) ^ i]);\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1565765088,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1093G \u3010Multidimensional Queries\u3011"
    },
    {
        "content": "> \u4e3a\u4e86\u4fbf\u4e8e\u6269\u5c55\u5230\u9ad8\u7ef4\uff0c\u672c\u6587\u4e2d\u70b9\u7684\u5750\u6807\u7edf\u4e00\u7528 $(x_1,x_2,\\cdots,x_k)$ \u8868\u793a\uff0c\u5373\u4f7f\u4e8c\u7ef4\u4e5f\u4e00\u6837\u3002\n\n$\\begin{aligned}&\\text{\u4e24\u4e2a\u4e8c\u7ef4\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb}\\\\=&|x_1-y_1|+|x_2-y_2|\\\\=&\\max(x_1-y_1,y_1-x_1)+\\max(x_2-y_2,y_2-x_2)\\\\=&\\max(x_1-y_1+x_2-y_2,x_1-y_1+y_2-x_2,y_1-x_1+x_2-y_2,y_1-x_1+y_2-x_2)\\end{aligned}$\n\n\u7528 $s[x][0]$ \u8868\u793a $-x_1-x_2$\uff0c$s[x][1]$ \u8868\u793a $-x_1+x_2$\uff0c$s[x][2]$ \u8868\u793a $x_1-x_2$\uff0c$s[x][3]$ \u8868\u793a $x_1+x_2$\uff0c\u90a3\u4e48 $\\text{\u4e24\u4e2a\u4e8c\u7ef4\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb}=\\max\\{s[x][j]-s[y][j]\\}(j\\in[0,3])$ \u3002\n\n\u8f6c\u6362\u6210\u8fd9\u6837\u4e4b\u540e\uff0c\u4e8c\u7ef4\u5e73\u9762\u4e0a\u4e00\u4e9b\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u66fc\u54c8\u987f\u8ddd\u79bb\u5c31\u53ef\u4ee5\u6c42\u4e86\uff1a$\\max\\{\\max\\{s[a_i][j]\\}-\\min\\{s[a_i][j]\\}\\}$\n\n\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\u7684\u610f\u601d\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $j$ \u628a $s[a_{1..n}][j]$ \u6c42\u51fa\u6765\uff0c\u5e76\u53d6\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u51cf\uff0c\u628a\u4e0d\u540c\u7684 $j$ \u7684\u201c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u51cf\u201d\u53d6 $\\max$ \u3002\n\n\u81f3\u4e8e\u9ad8\u7ef4\uff0c\u4e8c\u8fdb\u5236\u679a\u4e3e $x_i$ \u7684\u6b63\u8d1f\uff0c\u4e5f\u5c31\u662f\u8bf4 $s[x][j]=\\sum_{i=1}^kx_i\\times(j\\text{ and } 2^{i-1}?1:-1)$\uff0c\u7136\u540e\u6309\u4e00\u6837\u7684\u505a\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c\u5230\u8fd9\u91cc\u4e3a\u6b62\u4f60\u770b\u61c2\u4e86\uff0c\u4f60\u5c31\u53ef\u4ee5 AC [P1648 \u770b\u5b88](https://www.luogu.org/problemnew/show/P1648) \u4e86\u3002\n\n\u81f3\u4e8e\u672c\u9898\uff0c\u9700\u8981\u652f\u6301\u533a\u95f4\u67e5\u8be2\u3001\u5355\u70b9\u4fee\u6539\uff0c\u5957\u4e0a\u4efb\u4f55\u4e00\u79cd\u652f\u6301\u4fee\u6539\u7684 RMQ\uff08\u6bd4\u5982\u7ebf\u6bb5\u6811\uff09\u5373\u53ef\u3002\n\n\u4f46\u662f\u5957\u6709\u4e0d\u540c\u7684\u5957\u6cd5\uff0c\u76f4\u63a5\u653e\u5728\u4e00\u68f5\u7ebf\u6bb5\u6811\u91cc\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58 $2^k$ \u4e2a\u6700\u5927/\u6700\u5c0f\u503c\uff0c\u4fee\u6539/\u8be2\u95ee\u65f6\u5c31\u53ea\u7528\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u627e\u4e00\u6b21\uff1b\u5982\u679c\u62c6\u6210 $32$ \u68f5\u7ebf\u6bb5\u6811\uff0c\u5e38\u6570\u5c31\u4f1a\u975e\u5e38\u5927\u3002\n\n\u4e00\u68f5\u7ebf\u6bb5\u6811\u7684 $1.1s$ \u89e3\u6cd5\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\n\ninline int read()\n{\n    char c;int out=0,f=1;\n    for (c=getchar();(c<'0'||c>'9')&&c!='-';c=getchar());if (c=='-'){f=-1;c=getchar();}\n    for (;c>='0'&&c<='9';c=getchar()){out=(out<<3)+(out<<1)+c-'0';}return out*f;\n}\nvoid write(int x)\n{\n\tif (x<0){putchar('-');write(-x);return;}\n    if (x>9){write(x/10);}putchar(x%10+'0');\n}\n\n#define now t[cur]\n#define ls t[cur<<1]\n#define rs t[cur<<1|1]\n\nconst int N=200010;\n\nint n,k,q,a[N][5];\n\nstruct Val\n{\n\tint maxx[32],minn[32];\n\tVal()\n\t{\n\t\tint i;\n\t\tfor (i=0;i<(1<<k);++i)\n\t\t{\n\t\t\tmaxx[i]=-INF;\n\t\t\tminn[i]=INF;\n\t\t}\n\t}\n};\n\nstruct Node\n{\n\tint left,right;\n\tVal val;\n} t[N<<2];\n\nvoid build(int cur,int l,int r);\nvoid mnode(int cur);\nvoid modify(int cur,int p);\nVal query(int cur,int l,int r);\nVal merge(Val x,Val y);\n\nint main()\n{\n\tint i,j,pos,l,r,ans;\n\tVal v;\n\t\n\tn=read();\n\tk=read();\n\t\n\tfor (i=1;i<=n;++i)\n\t{\n\t\tfor (j=0;j<k;++j)\n\t\t{\n\t\t\ta[i][j]=read();\n\t\t}\n\t}\n\t\n\tbuild(1,1,n+1);\n\t\n\tq=read();\n\t\n\twhile (q--)\n\t{\n\t\tif (read()==1)\n\t\t{\n\t\t\tpos=read();\n\t\t\tfor (i=0;i<k;++i)\n\t\t\t{\n\t\t\t\ta[pos][i]=read();\n\t\t\t}\n\t\t\tmodify(1,pos);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=0;\n\t\t\tl=read();\n\t\t\tr=read();\n\t\t\tv=query(1,l,r+1);\n\t\t\tfor (i=0;i<(1<<k);++i)\n\t\t\t{\n\t\t\t\tans=max(ans,v.maxx[i]-v.minn[i]);\n\t\t\t}\n\t\t\twrite(ans);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\nvoid mnode(int cur)\n{\n\tint i,j;\n\tfor (i=0;i<(1<<k);++i)\n\t{\n\t\tnow.val.maxx[i]=0;\n\t\tfor (j=0;j<k;++j)\n\t\t{\n\t\t\tnow.val.maxx[i]+=((i&(1<<j))?1:-1)*a[now.left][j];\n\t\t}\n\t\tnow.val.minn[i]=now.val.maxx[i];\n\t}\n}\n\nvoid build(int cur,int l,int r)\n{\n\tnow.left=l;\n\tnow.right=r;\n\tif (l==r-1)\n\t{\n\t\tmnode(cur);\n\t}\n\telse\n\t{\n\t\tbuild(cur<<1,l,(l+r)>>1);\n\t\tbuild(cur<<1|1,(l+r)>>1,r);\n\t\tnow.val=merge(ls.val,rs.val);\n\t}\n}\n\nvoid modify(int cur,int p)\n{\n\tif (now.left==p&&now.right==p+1)\n\t{\n\t\tmnode(cur);\n\t}\n\telse\n\t{\n\t\tif (p<ls.right)\n\t\t{\n\t\t\tmodify(cur<<1,p);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmodify(cur<<1|1,p);\n\t\t}\n\t\tnow.val=merge(ls.val,rs.val);\n\t}\n}\n\nVal query(int cur,int l,int r)\n{\n\tif (l>=now.right||r<=now.left)\n\t{\n\t\treturn Val();\n\t}\n\tif (l<=now.left&&r>=now.right)\n\t{\n\t\treturn now.val;\n\t}\n\telse\n\t{\n\t\treturn merge(query(cur<<1,l,r),query(cur<<1|1,l,r));\n\t}\n}\n\nVal merge(Val x,Val y)\n{\n\tVal out;\n\tint i;\n\tfor (i=0;i<(1<<k);++i)\n\t{\n\t\tout.minn[i]=min(x.minn[i],y.minn[i]);\n\t\tout.maxx[i]=max(x.maxx[i],y.maxx[i]);\n\t}\n\treturn out;\n}\n```\n\n\u62c6\u6210 $32$ \u68f5\u7ebf\u6bb5\u6811\u7684 $4.2s$ \u89e3\u6cd5\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\n\ninline int read()\n{\n    char c;int out=0,f=1;\n    for (c=getchar();(c<'0'||c>'9')&&c!='-';c=getchar());if (c=='-'){f=-1;c=getchar();}\n    for (;c>='0'&&c<='9';c=getchar()){out=(out<<3)+(out<<1)+c-'0';}return out*f;\n}\nvoid write(int x)\n{\n\tif (x<0){putchar('-');write(-x);return;}\n    if (x>9){write(x/10);}putchar(x%10+'0');\n}\n\n#define now t[cur]\n#define ls t[cur<<1]\n#define rs t[cur<<1|1]\n\nconst int N=200010;\n\nstruct Node\n{\n\tint left,right,maxx,minn;\n};\n\nint n,k,q,a[N][5];\n\nstruct segTree\n{\n\tint b[N];\n\tNode t[N<<2];\n\tvoid build(int cur,int l,int r)\n\t{\n\t\tnow.left=l;\n\t\tnow.right=r;\n\t\tif (l==r-1)\n\t\t{\n\t\t\tnow.maxx=now.minn=b[l];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbuild(cur<<1,l,(l+r)>>1);\n\t\t\tbuild(cur<<1|1,(l+r)>>1,r);\n\t\t\tpushup(cur);\n\t\t}\n\t}\n\tvoid modify(int cur,int p,int x)\n\t{\n\t\tif (p==now.left&&p==now.right-1)\n\t\t{\n\t\t\tnow.minn=now.maxx=x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (p<ls.right)\n\t\t\t{\n\t\t\t\tmodify(cur<<1,p,x);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmodify(cur<<1|1,p,x);\n\t\t\t}\n\t\t\tpushup(cur);\n\t\t}\n\t}\n\tint qmax(int cur,int l,int r)\n\t{\n\t\tif (l>=now.right||r<=now.left)\n\t\t{\n\t\t\treturn -INF;\n\t\t}\n\t\tif (l<=now.left&&r>=now.right)\n\t\t{\n\t\t\treturn now.maxx;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn max(qmax(cur<<1,l,r),qmax(cur<<1|1,l,r));\n\t\t}\n\t}\n\tint qmin(int cur,int l,int r)\n\t{\n\t\tif (l>=now.right||r<=now.left)\n\t\t{\n\t\t\treturn INF;\n\t\t}\n\t\tif (l<=now.left&&r>=now.right)\n\t\t{\n\t\t\treturn now.minn;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn min(qmin(cur<<1,l,r),qmin(cur<<1|1,l,r));\n\t\t}\n\t}\n\tvoid pushup(int cur)\n\t{\n\t\tnow.minn=min(ls.minn,rs.minn);\n\t\tnow.maxx=max(ls.maxx,rs.maxx);\n\t}\n} s[32];\n\nint main()\n{\n\tint i,j,l,r,ans;\n\t\n\tn=read();\n\tk=read();\n\t\n\tfor (i=1;i<=n;++i)\n\t{\n\t\tfor (j=0;j<k;++j)\n\t\t{\n\t\t\ta[i][j]=read();\n\t\t}\n\t\tfor (j=0;j<(1<<k);++j)\n\t\t{\n\t\t\tfor (l=0;l<k;++l)\n\t\t\t{\n\t\t\t\tif (j&(1<<l))\n\t\t\t\t{\n\t\t\t\t\ts[j].b[i]+=a[i][l];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ts[j].b[i]-=a[i][l];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i=0;i<(1<<k);++i)\n\t{\n\t\ts[i].build(1,1,n+1);\n\t}\n\t\n\tq=read();\n\t\n\twhile (q--)\n\t{\n\t\tif (read()==1)\n\t\t{\n\t\t\ti=read();\n\t\t\tfor (j=0;j<k;++j)\n\t\t\t{\n\t\t\t\ta[i][j]=read();\n\t\t\t}\n\t\t\tfor (j=0;j<(1<<k);++j)\n\t\t\t{\n\t\t\t\ts[j].b[i]=0;\n\t\t\t\tfor (l=0;l<k;++l)\n\t\t\t\t{\n\t\t\t\t\tif (j&(1<<l))\n\t\t\t\t\t{\n\t\t\t\t\t\ts[j].b[i]+=a[i][l];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ts[j].b[i]-=a[i][l];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts[j].modify(1,i,s[j].b[i]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl=read();\n\t\t\tr=read()+1;\n\t\t\tans=0;\n\t\t\tfor (i=0;i<(1<<k);++i)\n\t\t\t{\n\t\t\t\tans=max(ans,s[i].qmax(1,l,r)-s[i].qmin(1,l,r));\n\t\t\t}\n\t\t\twrite(ans);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1545019231,
        "uid": 49742,
        "name": "ouuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1093G \u3010Multidimensional Queries\u3011"
    },
    {
        "content": "\u8003\u8651\u6734\u7d20\u7b97\u6cd5\u3002\n\n\u8003\u8651\u4e24\u4e2a\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb $dis(x,y)=\\sum\\limits_{i=1}^{k}|x_i-y_i|$\uff0c\u663e\u7136\u53ef\u4ee5\u6c42\u51fa\u67d0\u4e2a $a$ \u5e8f\u5217\uff0c\u5c06\u5176\u8868\u793a\u6210 $\\sum\\limits_{i=1}^{k}(-1)^{a_i}(x_i-y_i)$ \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d $a_i\\in \\{0,1\\}$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6709\u4e2a\u6027\u8d28\uff0c\u5373\u66fc\u54c8\u987f\u8ddd\u79bb\u4e00\u5b9a\u662f $a$ \u5e8f\u5217 $2^k$ \u79cd\u65b9\u6848\u4e2d\u6700\u5927\u7684\uff0c\u56e0\u4e3a\u662f\u7edd\u5bf9\u503c\u76f8\u52a0\u3002\n\n\u6240\u4ee5 $\\sum\\limits_{i=1}^{k}|x_i-y_i|=\\max\\limits_{\\forall i,a_i\\in \\{0,1\\}}\\{\\sum\\limits_{i=1}^{k}(-1)^{a_i}(x_i-y_i)\\}$\u3002\n\n\u6211\u4eec\u53d1\u73b0 $2^k$ \u53ea\u6709 $32$\uff0c\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a$\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u8ba1\u7b97\u51fa $f(a,x)=\\sum\\limits_{i=1}^{k}(-1)^{a_i}x_i$\uff0c\u7136\u540e\u4e24\u4e2a\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u5c31\u662f $\\max\\limits_{\\forall i,a_i\\in \\{0,1\\}}\\{f(a,x)-f(a,y)\\}$\u3002\n\n\u8bb0 $a$ \u7684\u8865\u96c6\uff08\u6bcf\u4f4d\u53d6\u53cd\uff09\u4e3a $\\overline a$\uff0c\u5219 $dis(x,y)=\\max\\limits_{\\forall i,a_i\\in \\{0,1\\}}\\{f(a,x)+f(\\overline a,y)\\}$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7b97\u51fa $f(a,x)$ \u540e\uff0c\u5bf9\u6bcf\u4e2a $x$ \u90fd\u53d6\u5176\u6700\u5927\u503c $g(a)=\\max\\limits_{i=l}^{r}\\{f(a,i)\\}$\uff0c\u7136\u540e\u7b54\u6848\u5373\u4e3a $\\max\\limits_{\\forall i,a_i\\in \\{0,1\\}}\\{g(a)+g(\\overline a)\\}$\u3002\n\n\u7136\u540e\u4e0d\u96be\u53d1\u73b0\u4e0a\u8ff0\u8fc7\u7a0b\u5373**\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c**\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(2^kn\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nnamespace mystd {\n\tinline int read() {\n\t    char c = getchar();\n\t    int x = 0, f = 1;\n\t    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n\t    while (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + c - '0', c = getchar();\n\t    return x * f;\n\t}\n\tinline void write(int x) {\n\t    if (x < 0) x = ~(x - 1), putchar('-');\n\t    if (x > 9) write(x / 10);\n\t    putchar(x % 10 + '0');\n\t}\n}\nusing namespace std;\nusing namespace mystd;\n\nconst int maxn = 2e5 + 200;\nint n, k, q, tr[maxn << 2][32], t[32];\n\n#define ls x << 1\n#define rs x << 1 | 1\n#define mid ((l + r) >> 1)\nvoid pushup(int x) { for (int s = 0; s <= (1 << k) - 1; s++) tr[x][s] = max(tr[ls][s], tr[rs][s]); }\nvoid update(int l, int r, int p, int x) {\n\tif (l == r) {\n\t\tmemset(tr[x], 0, sizeof(tr[x]));\n\t\tfor (int s = 0; s <= (1 << k) - 1; s++) {\n\t\t\tfor (int i = 1; i <= k; i++) {\n\t\t\t\tif ((s >> (i - 1)) & 1) tr[x][s] += t[i];\n\t\t\t\telse tr[x][s] -= t[i];\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tif (p <= mid) update(l, mid, p, ls);\n\telse update(mid + 1, r, p, rs);\n\tpushup(x);\n}\n\nvoid query(int l, int r, int st, int tt, int x) {\n\tif (st <= l && r <= tt) {\n\t\tfor (int s = 0; s <= (1 << k) - 1; s++) t[s] = max(t[s], tr[x][s]);\n\t\treturn;\n\t}\n\tif (st <= mid) query(l, mid, st, tt, ls);\n\tif (tt > mid) query(mid + 1, r, st, tt, rs);\n}\n\nint main() {\n\tn = read(), k = read();\n\tfor (int i = 1; i <= n << 2; i++) {\n\t\tfor (int j = 0; j <= (1 << k) - 1; j++) {\n\t\t\ttr[i][j] = t[j] = -2e9;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= k; j++) t[j] = read();\n\t\tupdate(1, n, i, 1);\n\t}\n\tq = read();\n\twhile (q--) {\n\t\tint op = read();\n\t\tif (op == 1) {\n\t\t\tint p = read();\n\t\t\tfor (int i = 1; i <= k; i++) t[i] = read();\n\t\t\tupdate(1, n, p, 1);\n\t\t} else {\n\t\t\tint l = read(), r = read();\n\t\t\tmemset(t, -0x3f, (1 << k) * sizeof(int));\n\t\t\tquery(1, n, l, r, 1);\n\t\t\tint res = 0;\n\t\t\tfor (int s = 0; s <= (1 << k) - 1; s++) {\n\t\t\t\tres = max(res, t[s] + t[((1 << k) - 1) ^ s]);\n\t\t\t}\n\t\t\twrite(res);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1663329642,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF1093G Multidimensional Queries \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n\u53ef\u662f\u5982\u4f55\u5904\u7406\u533a\u95f4\u66fc\u54c8\u987f\u8ddd\u79bb\u6700\u5927\u503c\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u628a\u6bcf\u4e00\u7ef4\u5750\u6807\u62c6\u5f00\u8003\u8651\u3002\u56e0\u4e3a\u53d6\u7edd\u5bf9\u503c\uff0c\u6240\u4ee5\u6bcf\u4e00\u7ef4\u7684\u8d21\u732e\u53ea\u53ef\u80fd\u662f\u6b63\u6216\u8d1f\uff0c\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u4e32\u6765\u8868\u793a\u5f53\u524d\u8fd9\u79cd\u53d6\u6cd5\u3002\n\n\u90a3\u4e48\u76f8\u5339\u914d\u7684\uff0c\u5982\u679c\u6311\u4e86\u4e24\u4e2a\u70b9\uff0c\u4ed6\u4eec\u6bcf\u4e00\u7ef4\u7684\u5750\u6807\u72b6\u6001\u90fd\u662f\u76f8\u53cd\u53e0\u52a0\u7684\u3002\u6362\u8a00\u4e4b\u5bf9\u4e8e\u5728\u72b6\u6001 $S$ \u4e0b\u7684\u70b9\uff0c \u53ea\u80fd\u4e0e $S$ $xor$ $2^k-1$ \u53e0\u52a0\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u7528\u7ebf\u6bb5\u6811\u5206\u522b\u7ef4\u62a4\u6bcf\u4e00\u79cd\u72b6\u6001\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u8d2a\u5fc3\u5730\u5339\u914d\u53e0\u52a0\u5373\u53ef\u3002\n\ncode\uff1a\n\n```cpp\nconst int Maxn = 2e5 + 5;\nint n, m, k, s, b[Maxn][5];\nstruct Node {\n\tint val[32];\n\tNode(void) { Ms(val, 0); }\n\tinline Node operator + (const Node&rhs) const {\n\t\tNode ret;\n\t\tfor (int i = 0; i < s; i++)\n\t\t\tret.val[i] = max(val[i], rhs.val[i]);\n\t\treturn ret;\n\t}\n} t[Maxn << 2], qry;\n\nstruct SegmentTree {\n\tinline void pushup(int pos) { t[pos] = t[pos << 1] + t[pos << 1 | 1]; }\n\tinline void build(int pos, int l, int r) {\n\t\tif (l == r) {\n\t\t\tfor (int i = 0; i < s; i++)\n\t\t\tfor (int j = 0; j < k; j++)\n\t\t\t\tif (i & (1 << j)) t[pos].val[i] += b[l][j];\n\t\t\t\telse t[pos].val[i] -= b[l][j];\n\t\t\treturn;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tbuild(pos << 1, l, mid);\n\t\tbuild(pos << 1 | 1, mid + 1, r);\n\t\tpushup(pos);\n\t}\n\t\n\tinline void update(int pos, int l, int r, int idx) {\n\t\tif (l == r) {\n\t\t\tMs(t[pos].val, 0);\n\t\t\tfor (int i = 0; i < s; i++)\n\t\t\tfor (int j = 0; j < k; j++)\n\t\t\t\tif (i & (1 << j)) t[pos].val[i] += b[l][j];\n\t\t\t\telse t[pos].val[i] -= b[l][j];\n\t\t\treturn;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tif (idx <= mid) update(pos << 1, l, mid, idx);\n\t\telse update(pos << 1 | 1, mid + 1, r, idx);\n\t\tpushup(pos);\n\t}\n\t\n\tinline Node query(int pos, int l, int r, int L, int R) {\n\t\tif (L <= l && R >= r) return t[pos];\n\t\tint mid = l + r >> 1;\n\t\tif (L <= mid && R > mid) return query(pos << 1, l, mid, L, R) + query(pos << 1 | 1, mid + 1, r, L, R);\n\t\tif (L <= mid) return query(pos << 1, l, mid, L, R);\n\t\tif (R > mid) return query(pos << 1 | 1, mid + 1, r, L, R);\n\t}\n} T;\n\nsigned main(void) {\n\tread(n), read(k); s = 1 << k;\n\tfor (int i = 1; i <= n; i++)\n\tfor (int j = 0; j < k; j++) read(b[i][j]);\n\tT.build(1, 1, n);\n\t\n\tread(m);\n\tfor (int opt, l, r; m; m--) {\n\t\tread(opt);\n\t\tif (opt == 1) {\n\t\t\tread(l);\n\t\t\tfor (int i = 0; i < k; i++) read(b[l][i]);\n\t\t\tT.update(1, 1, n, l);\n\t\t} else {\n\t\t\tread(l), read(r);\n\t\t\tint ret = 0; qry = T.query(1, 1, n, l, r);\n\t\t\tfor (int i = 0; i < s; i++)\n\t\t\t\tchkmax(ret, qry.val[i] + qry.val[i ^ (s - 1)]);\n\t\t\twriteln(ret);\n\t\t}\n\t}\n//\tfwrite(pf, 1, o1 - pf, stdout);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1615104501,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "CF1093G Multidimensional Queries"
    },
    {
        "content": "\u6c42\u7684\u662f\u6700\u5927\u4e24\u70b9\u8ddd\u79bb\u3002\n\n$|x - y|$ \u7684\u6b63\u8d1f\u8003\u8651\uff0c\u5982\u679c\u6700\u5927\u7684\u8bdd\uff0c\u4e00\u5b9a\u90fd\u662f\u6b63\u6570\uff0c\u6240\u4ee5\u62c6\u5f00\u6765 $2^k$ \u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u53d6\u6700\u5927\u7684\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u533a\u95f4\u8868\u793a\u6210\u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\uff0c\u66f4\u65b0\u7684\u8bdd\u8003\u8651\u53d6\u6700\u5927\u503c\u3002\n\n\u4ee3\u7801\u5728\u8def\u4e0a\uff08",
        "postTime": 1601184031,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1093G \u3010Multidimensional Queries\u3011"
    },
    {
        "content": "\u9996\u53d1\u4e8e [\u4e2a\u4eba\u535a\u5ba2](https://zepto.page/post/codeforces-1093g)\u3002\n\n### \u601d\u8def\n\n$i,j$ \u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u88ab\u5b9a\u4e49\u4e3a $\\sum |a_{i,k}-a_{j,k}|$\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5f0f\u5b50\u62c6\u5f00\uff0c\u6bcf\u4e00\u7ef4\u4e0a $a_i$ \u548c $a_j$ \u53d6\u503c\u7684\u6b63\u8d1f\u6027\u4e00\u5b9a\u662f\u76f8\u53cd\u7684\u3002\n\n\u8003\u8651\u5230 $k$ \u6bd4\u8f83\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u7b2c $i$ \u7ef4\u5728\u8ddd\u79bb\u8ba1\u7b97\u516c\u5f0f\u4e2d\u7684\u6b63\u8d1f\u6027\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u7528\u96c6\u5408 $S$ \u8868\u793a\u4e00\u4e2a\u70b9\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u6b63\u8d1f\u6027\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u5185\u6bcf\u79cd\u53ef\u80fd\u96c6\u5408 $S$ \u7684\u6700\u5927\u503c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5bf9\u4e0d\u540c\u7684\u96c6\u5408 $S$ \u7684\u8d21\u732e\u3002\u5408\u6cd5\u7b54\u6848\u662f\u6240\u6709\u4e92\u8865\u96c6\u5408\u5bf9\u8d21\u732e\u548c\u7684\u6700\u5927\u503c\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ls (p<<1)\n#define rs (p<<1|1)\n#define maxn 800010\nusing namespace std;\ninline int read(){\n\tint x=0,flag=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)&&ch!='-') ch=getchar();\n\tif (ch=='-') flag=-1,ch=getchar();\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+(ch-'0'),ch=getchar();\n\treturn x*flag;\n}\nstruct Seg{\n\tint t[maxn];\n\tinline void update(int l,int r,int x,int v,int p){\n\t\tif (l==r) {t[p]=v;return;}\n\t\tint mid=((l+r)>>1);\n\t\tif (mid>=x) update(l,mid,x,v,ls);\n\t\telse update(mid+1,r,x,v,rs);\n\t\tt[p]=max(t[ls],t[rs]);\n\t}\n\tinline int query(int l,int r,int L,int R,int p){\n\t\tif (L<=l&&r<=R) return t[p];\n\t\tint mid=((l+r)>>1);\n\t\tif (R<=mid) return query(l,mid,L,R,ls);\n  \t\tif (L>=mid+1) return query(mid+1,r,L,R,rs);\n\t\treturn max(query(l,mid,L,R,ls),query(mid+1,r,L,R,rs));\n\t}\n}mk[32];\nint n,k,m,a[6],b[32];\ninline void update(int pos){\n\tfor (int j=1;j<=k;++j)\n\t\t\ta[j]=read();\n\tfor (int S=0;S<1<<k;++S){\n\t\tint sum=0;\n\t\tfor (int j=1;j<=k;++j)\n\t\t\tif ((S>>(j-1))&1) sum-=a[j];\n\t\t\telse sum+=a[j];\n\t\tmk[S].update(1,n,pos,sum,1);\n\t}\n}\ninline void query(int l,int r){\n\tint res=-INT_MAX;\n\tfor (int S=0;S<1<<k;++S)\n\t\tb[S]=mk[S].query(1,n,l,r,1);\n\tfor (int S=0;S<1<<k;++S)\n\t\tres=max(res,b[S]+b[((1<<k)-1)-S]);\n\tprintf(\"%d\\n\",res);\n}\nint main(){\n\tn=read(),k=read();\n\tfor (int S=0;S<1<<k;++S)\n\t\tmemset(mk[S].t,0x3f,sizeof(mk[S].t));\n\tfor (int i=1;i<=n;++i) update(i);\n\tm=read();\n\tfor (int i=1,op,pos,l,r;i<=m;++i){\n\t\top=read();\n\t\tif (op==1) pos=read(),update(pos);\n\t\tif (op==2) l=read(),r=read(),query(l,r);\n\t}\n}\n```",
        "postTime": 1545135235,
        "uid": 37158,
        "name": "XG_Zepto",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1093G \u3010Multidimensional Queries\u3011"
    },
    {
        "content": "   [\u4e00\u5200999](https://www.cnblogs.com/HN-wrp/p/12901331.html)  \n\u8fd9\u9898\u5999\u554a\u3002  \n\u5b66\u4f1a\u4e86\u4e00\u4e2a\u65b0$trick$\u3002  \n### \u9898\u89e3\n$$|x_1 - x_2|+|y_1 - y_2| = \\\\ max (x_1-x_2+y_1-y_2,x_1-x_2-y_1+y_2,-x_1+x_2+y_1-y2,-x_1+x_2-y_1+y_2) = \\\\max((x_1+y_1)-(x_2+y_2),(x_1-y_1)-(x_2-y_2),(-x_1+x_2)-(-y_1+y_2),(-x_1-y_1)-(-x_2-y_2))$$\n\u5f97\u5230\u4e24\u4e2a\u4fe1\u606f\u3002\n+ \u4e24\u4e2a\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb$|x_1-x_2|+|y_1-y_2|+|z_1-z_2|+\\dots = \\sum^{...}_{x,y,z...}max(x_1-x_2,x_2-x_1)$\n+ \u5f53$x_1$\u524d\u4e3a$+$\u53f7\uff0c$x_2$\u524d\u5fc5\u5b9a\u662f$-$\u53f7\u3002\n\n\u7531\u4e8e\u8fd9\u4e2a\u9898\u76ee\u91cc$k <= 5$\uff0c\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u7684$x,y,z\\dots$\u5750\u6807\u7ed9\u7b54\u6848\u8d21\u732e\u65f6\u524d\u9762\u7684\u7b26\u53f7\uff0c\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u6765\u72b6\u538b\u3002\u90a3\u4e48\u5bf9\u5e94\u7684\uff0c\u53e6\u4e00\u4e2a\u53d6\u5f97\u7684\u70b9\u7684\u72b6\u6001\u5c31\u662f\u8fd9\u4e2a\u70b9\u53d6\u53cd\u3002\uff08\u7531\u7b2c\u4e8c\u4e2a\u6027\u8d28\u77e5\u9053\uff09\u3002\u6240\u4ee5\u5bf9\u6bcf\u4e2a\u70b9\u5206\u522b\u7ef4\u62a4$2^k$\u4e2a\u72b6\u6001\u4e0b\u7684\u6570\u503c\u548c\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u628a\u8be2\u95ee\u533a\u95f4\u7684\u72b6\u6001\u53d6\u51fa\u6765\uff0c\u679a\u4e3e\u6bcf\u4e2a\u72b6\u6001\u4e0b\u6700\u5927\u548c\u518d\u52a0\u4e0a\u5b83\u53d6\u53cd\u7684\u72b6\u6001\u4e0b\u6700\u5927\u548c\u5c31\u662f\u6700\u5927\u7684\u7b54\u6848\u4e86\u3002\n### \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\n#define R register\n#define LL long long\nconst int inf = 0x3f3f3f3f;\nconst int MAXN = 2e5 + 10;\n\ninline int read() {\n\tchar a = getchar(); int x = 0,f = 1;\n\tfor(; a > '9' || a < '0'; a = getchar()) if(a == '-') f = -1;\n\tfor(; a >= '0' && a <= '9' ;a = getchar()) x = x * 10 + a - '0';\n\treturn x * f;\n}\n\nint n, k;\nint a[MAXN][5];\nint mx[MAXN << 2][32];\n\nstruct Node { \n\tNode() { memset(s, 0, sizeof(s)); }\n\tint s[32]; \n};\n\ninline int ls(int x) { return x << 1; }\ninline int rs(int x) { return x << 1 | 1; }\n\ninline void update(int x) {\n\tfor(R int S = (1 << k) - 1; S >= 0 ; S --) mx[x][S] = max(mx[ls(x)][S], mx[rs(x)][S]);\n}\n\ninline void build(int x, int l, int r) {\n\tif(l == r) {\n\t\tfor(R int S = (1 << k) - 1; S >= 0 ; S --) {\n\t\t\tmx[x][S] = 0;\n\t\t\tfor(R int i = 0; i < k; i ++)\n\t\t\t\tif((1 << i) & S) mx[x][S] += a[l][i];\n\t\t\t\telse mx[x][S] -= a[l][i];\n\t\t}\n\t\treturn ;\n\t}\t\n\tint mid = l + r; mid >>= 1;\n\tbuild(ls(x), l, mid); build(rs(x), mid + 1, r);\n\tupdate(x);\n}\n\nint st[5];\n\ninline void modify(int x, int l, int r, int ad) {\n\tif(l == r) {\n\t\tfor(R int i = 0; i < k; i ++) st[i] = read();\n\t\tfor(R int S = (1 << k) - 1; S >= 0 ; S --) {\n\t\t\tmx[x][S] = 0;\n\t\t\tfor(R int i = 0; i < k; i ++)\n\t\t\t\tif((1 << i) & S) mx[x][S] += st[i];\n\t\t\t\telse mx[x][S] -= st[i];\n\t\t}\n\t\treturn ;\n\t}\n\tint mid = l + r; mid >>= 1;\n\tif(ad <= mid) modify(ls(x), l, mid, ad);\n\telse modify(rs(x), mid + 1, r, ad);\n\tupdate(x);\n}\n\ninline Node ask(int x, int l, int r, int Le, int Ri) {\n\tif( Le <= l && r <= Ri ) {\n\t\tNode ans;\n\t\tfor(R int S = (1 << k) - 1; S >= 0 ; S --) {\n\t\t\tans.s[S]= mx[x][S];\n\t\t}\n\t\treturn ans;\n\t}\n\tint mid = l + r; mid >>= 1;\n\t/*if(Le <= mid) ans = max(ans, ask(ls(x), l, mid, Le, Ri));\n\tif(Ri > mid) ans = max(ans, ask(rs(x), mid + 1, r, Le, Ri));*/\n\tif(Ri <= mid) return ask(ls(x), l, mid, Le, Ri);\n\tif(Le > mid) return ask(rs(x), mid + 1, r, Le, Ri);\n\tNode la = ask(ls(x), l, mid, Le, Ri);\n\tNode ra = ask(rs(x), mid + 1, r, Le, Ri);\n\tfor(R int S = ( 1 << k ) - 1; S >= 0; S --) {\n\t\tla. s[S] = max(la. s[S], ra. s[S]);\n\t}\n\treturn la; \n}\n\nint main() {\n\t//freopen(\"a.in\",\"r\",stdin);\n\t//freopen(\"a.out\",\"w\",stdout);\n\tn = read(); k = read();\n\tfor(R int i = 1; i <= n; i ++) {\n\t\tfor(R int j = 0; j < k; j ++)\n\t\t\ta[i][j] = read();\n\t}\n\tbuild(1, 1, n);\n\tint q = read();\n\twhile(q --) {\n\t\tif(read() == 1) {\n\t\t\tint i = read();\n\t\t\tmodify(1, 1, n, i);\n\t\t}\n\t\telse {\n\t\t\tint l = read(), r = read();\n\t\t\tNode ans = ask(1, 1, n, l, r);\n\t\t\tint res = 0;\n\t\t\tfor(R int S = ( 1 << k ) - 1; S >= 0; S --)\n\t\t\t\tres = max( res, ans.s[S] + ans.s[((1 << k) - 1) ^ S]);\n\t\t\tprintf(\"%d\\n\",res);\n\t\t}\n\t}\n\treturn 0;\t\n}\n```",
        "postTime": 1589620837,
        "uid": 139012,
        "name": "______OvO______",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1093G \u3010Multidimensional Queries\u3011"
    }
]