[
    {
        "content": "\u6ca1\u4eba\u6765\u53d1\u9898\u89e3\uff1f\u90a3\u6211\u6765\u8bf4\u4e00\u4e0b\u6211\u7684\u505a\u6cd5\u3002\n\n\u5176\u5b9e\u6211\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u6709\u70b9\u60f3\u4e8c\u5206\u56fe\u4e0a\u5339\u914d\u4e4b\u7c7b\u7684\uff0c\u4f46\u662f\u597d\u50cf\u65f6\u7a7a\u4f1a\u53cc\u7206\uff0c\u8dd1\u6bd4\u8f83\u5feb\u7684\u7f51\u7edc\u6d41\u53ef\u80fd\u4e5f\u4e0d\u592a\u884c\u3002\n\n~~\u7136\u540e\u6211\u5c31\u770b\u4e86\u4e00\u773c\u6807\u7b7e\uff0c\u8d2a\u5fc3\uff1f\uff1f\uff1f\uff1f~~\n\n\u7136\u540e\u6211\u5c31\u5f80\u8d2a\u5fc3\u53bb\u60f3\uff0c\u53d1\u73b0\u5982\u679c\u6211\u4eec\u628a\u7535\u8111\u8981\u7684\u7535\u6e90\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u63d2\u5ea7\u7684\u4e5f\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5982\u679c\u5f53\u524d\u5927\u7684\u7535\u8111\u7535\u6e90\u80fd\u5339\u914d\u90a3\u80af\u5b9a\u5c31\u5339\u914d\u6389\u662f\u6700\u4f18\u7684\u3002\n\n\u8fd9\u4e2a\u5f88\u660e\u663e\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u4e0d\u5339\u914d\uff0c\u7b49\u5230\u540e\u9762\u8d21\u732e\u4e5f\u53ea\u80fd\u662f $1$\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5982\u679c\u8bf4\u4ed6\u7684\u6700\u5927\u63d2\u5ea7\u7535\u6e90\u5df2\u7ecf\u8d85\u8fc7\u4e86\u5f53\u524d\u7684\u7535\u6e90\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u8ba4\u4e3a\u5b83\u5df2\u7ecf\u6ca1\u6709\u8d21\u732e\u4e86\uff1f\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u6211\u4eec\u9700\u8981\u628a\u5b83\u9664\u4ee5\u4e8c\u4e4b\u540e\u624d\u80fd\u4ea7\u751f\u8d21\u732e\uff0c\u8fd9\u662f\u5355\u8c03\u6027\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7684\u57fa\u672c\u6d41\u7a0b\u5c31\u662f\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7535\u8111\u7535\u6e90\uff0c\u7136\u540e\u628a\u63d2\u5ea7\u90fd\u4ece\u5927\u5230\u5c0f\u641e\u4e00\u641e\uff0c\u7136\u540e\u5982\u679c\u5f53\u524d\u63d2\u5ea7\u7535\u6e90\u5927\u4e8e\u7535\u8111\u7535\u6e90\u90a3\u5c31\u9664\u4ee5\u4e8c\uff0c\u5426\u5219\u5982\u679c\u5c0f\u4e86\uff0c\u90a3\u5c31\u6ca1\u5f97\u7528\u4e86\u3002\n\n\u4ee5\u4e0a\u7684\u53ef\u4ee5\u6570\u636e\u7ed3\u6784\uff0cset \u5806\u90fd\u53ef\u4ee5\u7ef4\u62a4\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nconst int INF=5e5+5;\nstruct _node_queue {\n\tint v,x,id;\n\tbool operator < (const _node_queue &xx) const {\n\t\tif (xx.v!=v) return xx.v>v;\n\t\telse return xx.x<x;\n\t}\n}p[INF];\nint n,m,b[INF],a[INF],s[INF],ans,ans1;\npriority_queue <_node_queue> q; \nbool cmp(_node_queue xx,_node_queue yy) {\n\treturn xx.v<yy.v;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++) cin>>p[i].v,p[i].id=i;\n\tfor (int i=1;i<=m;i++) \n\t\tcin>>s[i],q.push((_node_queue){s[i],0,i});\n\tsort(p+1,p+1+n,cmp);\n\tfor (int i=n;i>=1;i--) {\n\t\twhile (q.size()) {\n\t\t\t_node_queue xx=q.top();q.pop(); \n//\t\t\tcout<<xx.v<<\" ????\\n\";\n\t\t\tif (xx.v==p[i].v) {\n\t\t\t\tb[p[i].id]=xx.id;a[xx.id]=xx.x;\n\t\t\t\tans++;ans1+=xx.x;\n\t\t\t\tbreak;\n\t\t\t} \n\t\t\telse if (xx.v<p[i].v) {q.push(xx);break;}\n\t\t\telse {\n\t\t\t\txx.v++;xx.v/=2;\n\t\t\t\txx.x++;\n\t\t\t\tq.push(xx);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcout<<ans<<\" \"<<ans1<<\"\\n\";\n\tfor (int i=1;i<=m;i++) cout<<a[i]<<\" \";cout<<\"\\n\";\n\tfor (int i=1;i<=n;i++) cout<<b[i]<<\" \";cout<<\"\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1660129812,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF732E"
    }
]