[
    {
        "content": "\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 $nxt$\uff0c\u4f60\u9700\u8981\u6784\u9020\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u6392\u5217 $p$\uff0c\u4f7f\u5f97\u5bf9\u4efb\u610f $i$\uff0c$p$ \u4e2d\u5176\u540e\u9762\u7b2c\u4e00\u4e2a\u6bd4 $p_i$ \u5927\u7684\u6570\u7684\u4f4d\u7f6e\u662f $nxt_i$\uff0c\u5982\u679c $nxt_i=n+1$ \u5219\u6ca1\u6709\uff0c\u5982\u679c $nxt_i=-1$ \u5219\u8fd9\u4e2a\u4f4d\u7f6e\u6ca1\u6709\u9650\u5236\u3002$n\\leqslant 500000$\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u6784\u9020\u505a\u6cd5\u3002 \n\n\u5148\u4e0d\u8003\u8651 $-1$\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e0d\u5b58\u5728\u4e24\u4e2a\u4f4d\u7f6e $i,j$ \u4f7f\u5f97 $i<j<nxt_i<nxt_j$ \u5219\u4e00\u5b9a\u6709\u89e3\uff0c\u4e0b\u9762\u6211\u4eec\u7ed9\u51fa\u6784\u9020\u65b9\u6cd5\uff1a\n\n\u8bbe `dfs(l,r,x)` \u8868\u793a\u5f53\u524d\u786e\u5b9a $p_l\\dots p_r$ \u7684\u503c\uff0c\u8003\u8651\u8fd9\u4e2d\u95f4\u6240\u6709 $nxt_i=r+1$ \u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u4eec\u5f62\u6210\u4e86\u82e5\u5e72\u201c\u6321\u677f\u201d\uff0c\u6211\u4eec\u7ee7\u7eed\u9012\u5f52 `dfs(l,i-1,x-1)` \u8fd9\u6837\u505a\u4e0b\u53bb\u5373\u53ef\u3002\u7528\u4e00\u4e2a\u90bb\u63a5\u8868\u7ef4\u62a4\u6240\u6709 $nxt_j=i$ \u7684 $j$\uff0c\u603b\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u81f3\u4e8e $nxt_i=-1$ \u7684\u60c5\u51b5\uff0c\u6839\u636e\u6211\u4eec\u521a\u624d\u8bf4\u7684\u6027\u8d28\uff0c\u5c06\u5176\u7f6e\u4e3a $i+1$ \u5373\u53ef\u3002\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://codeforces.com/problemset/submission/1158/119721157)\n",
        "postTime": 1623940600,
        "uid": 96912,
        "name": "AzusaCat",
        "ccfLevel": 9,
        "title": "CF1158C - Permutation recovery"
    },
    {
        "content": "$O(n)$ \u89e3\u6cd5\uff1a\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e2a\u4e3a $-1$ \u7684 $nxt_i$\uff0c\u5c06\u5176\u7f6e\u4e3a $i+1$\uff0c\u7136\u540e\u4ece\u6700\u5c0f\u7684 $nxt_i$ \u5f00\u59cb\u8fd8\u539f\u8fd9\u4e2a\u6392\u5217\uff0c\u5bf9\u6240\u6709\u7b49\u4e8e $nxt_i$ \u7684\u4f4d\u7f6e\u4ece\u53f3\u5f80\u5de6\u586b\u5199\u6392\u5217\u5143\u7d20\u3002\n\n\u6700\u540e\u7528\u5355\u8c03\u6808\u5224\u65ad\u751f\u6210\u7684\u6392\u5217\u662f\u5426\u7b26\u5408 $nxt$\u3002\n\nAC \u4ee3\u7801\uff08Golang\uff09:\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t. \"fmt\"\n\t\"os\"\n)\n\nfunc main() {\n\tin := bufio.NewReader(os.Stdin)\n\tout := bufio.NewWriter(os.Stdout)\n\tdefer out.Flush()\n\n\tvar T, n int\no:\n\tfor Fscan(in, &T); T > 0; T-- {\n\t\tFscan(in, &n)\n\t\tpos := make([][]int, n+2)\n\t\tnxt := make([]int, n)\n\t\tfor i := range nxt {\n\t\t\tFscan(in, &nxt[i])\n\t\t\tif nxt[i] == -1 {\n\t\t\t\tnxt[i] = i + 2\n\t\t\t}\n\t\t\tpos[nxt[i]] = append(pos[nxt[i]], i)\n\t\t}\n\n\t\tans := make([]int, n)\n\t\tv := 1\n\t\tfor _, p := range pos {\n\t\t\tfor i := len(p) - 1; i >= 0; i-- {\n\t\t\t\tans[p[i]] = v\n\t\t\t\tv++\n\t\t\t}\n\t\t}\n\n\t\ttype pair struct{ v, i int }\n\t\ts := []pair{{1e9, n}}\n\t\tfor i := n - 1; i >= 0; i-- {\n\t\t\tv := ans[i]\n\t\t\tfor {\n\t\t\t\tif top := s[len(s)-1]; top.v > v {\n\t\t\t\t\tif top.i+1 != nxt[i] {\n\t\t\t\t\t\tFprintln(out, -1)\n\t\t\t\t\t\tcontinue o\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\ts = s[:len(s)-1]\n\t\t\t}\n\t\t\ts = append(s, pair{v, i})\n\t\t}\n\t\tfor _, v := range ans {\n\t\t\tFprint(out, v, \" \")\n\t\t}\n\t\tFprintln(out)\n\t}\n}\n```\n",
        "postTime": 1600843410,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1158C \u3010Permutation recovery\u3011"
    },
    {
        "content": "# \u9898\u9762\n\n[CF1158C Permutation recovery](https://www.luogu.org/problem/CF1158C)\n\n# Solution\n\n\u6211\u4eec\u8003\u8651\u7ed9\u51fa\u7684\u9650\u5236\u6761\u4ef6\u6709\u4ec0\u4e48\u7528\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u662f $-1$ \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u6389\u3002\n\n\u5982\u679c $nxt_i\\not=-1$ \uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n1.  $val_i<val_{nxt_i}$ \u3002\n2.  $val_i>val_j,j\\in[i+1,nxt_i-1]$ \u3002\n\n\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5e8f\u5217\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u9650\u5236\u6761\u4ef6\u770b\u4f5c\u662f\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u5927\u7684\u8fde\u5411\u5c0f\u7684\uff0c\n\n\u90a3\u4e48\u6211\u4eec\u76f8\u5f53\u4e8e\u662f\u6c42\u56fe\u4e2d\u7684\u4e00\u4e2a\u62d3\u6251\u5e8f\uff0c\u5176\u4e2d\u62d3\u6251\u5e8f\u8d8a\u5c0f\u7684\uff0c\u5bf9\u5e94\u7684\u503c\u5c31\u8d8a\u5927\u3002\n\n\u4f46\u662f\u76f4\u63a5\u8fde\u8fb9\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u65e0\u6cd5\u63a5\u53d7\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u70b9\u90fd\u662f\u8fde\u5411\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u9ed1\u79d1\u6280\uff1a**\u7ebf\u6bb5\u6811\u4f18\u5316\u8fde\u8fb9**\u3002\n\n\u6211\u4eec\u5c06\u8981\u8fde\u5411\u7684\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e0a\u5212\u5206\u6210\u4e00\u4e2a\u4e2a\u5c0f\u533a\u95f4\uff0c\u7531\u7ebf\u6bb5\u6811\u53ef\u77e5\uff0c\u8fd9\u6837\u7684\u533a\u95f4\u6700\u591a $\\log$ \u4e2a\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u53d8\u6210\u4e86 $O(n\\log n)$ \uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u505a\u8fd9\u9053\u9898\u4e86\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il _print(T x){\n\tif(x/10) _print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class T>il print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\t_print(x);\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 5e5+5;\nint T,n,nxt[MAXN],head[MAXN<<2],num_edge,ru[MAXN<<2],val[MAXN],pos[MAXN],id[MAXN<<2];\nstruct Edge{\n\tint next,to;\n\tEdge(){}\n\tEdge(int next,int to):next(next),to(to){}\n}edge[MAXN*40];\n#define lc (cur<<1)\n#define rc (cur<<1|1)\nil build_tree(int cur,int l,int r){\n\thead[cur]=0,id[cur]=0,ru[cur]=1;\n\tif(l==r) return pos[l]=cur,id[cur]=l,void();\n\tedge[++num_edge]=Edge(head[cur],lc),head[cur]=num_edge,++ru[lc];\n\tedge[++num_edge]=Edge(head[cur],rc),head[cur]=num_edge,++ru[rc];\n\tbuild_tree(lc,l,mid),build_tree(rc,mid+1,r);\n}\nil updata(int cur,int l,int r,int L,int R,int pos){\n\tif(l>=L&&r<=R) return edge[++num_edge]=Edge(head[pos],cur),head[pos]=num_edge,++ru[cur],void();\n\tif(mid>=L) updata(lc,l,mid,L,R,pos);\n\tif(R>mid) updata(rc,mid+1,r,L,R,pos);\n}\nil solve(){\n\tread(n),num_edge=0;\n\tbuild_tree(1,1,n);\n\tfor(ri i=1;i<=n;++i){\n\t\tread(nxt[i]);\n\t\tif(nxt[i]==-1) continue;\n\t\tif(nxt[i]!=n+1) edge[++num_edge]=Edge(head[pos[nxt[i]]],pos[i]),head[pos[nxt[i]]]=num_edge,++ru[pos[i]];\n\t\tif(i+1<=nxt[i]-1) updata(1,1,n,i+1,nxt[i]-1,pos[i]);\n\t}\n\tqueue<int> q;q.push(1);ri cnt=n;\n\twhile(!q.empty()){\n\t\tri p=q.front();q.pop();\n\t\tif(id[p]) val[id[p]]=cnt--;\n\t\tfor(ri i=head[p];i;i=edge[i].next){\n\t\t\t--ru[edge[i].to];\n\t\t\tif(!ru[edge[i].to]) q.push(edge[i].to);\n\t\t}\n\t}\n\tif(cnt) return puts(\"-1\"),void();\n\tfor(ri i=1;i<=n;++i) printf(\"%d \",val[i]);puts(\"\");\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(T);\n\tfor(ri i=1;i<=T;++i) solve();\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u4e00\u9053\u6bd4\u8f83\u5957\u8def\u7684\u9898\uff0c\u611f\u89c9\u96be\u5ea6\u5176\u5b9e\u6ca1\u6709\u8fd9\u4e48\u5927\u3002",
        "postTime": 1570538478,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "CF1158C Permutation recovery \u9898\u89e3"
    },
    {
        "content": "~~\u8fd9\u9898\u600e\u4e48\u5c31\u9ed1\u4e86...~~\n\n\u8fd9\u91cc\u7ed9\u4e00\u4e2a\u4e0d\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe/\u62d3\u6251\u6392\u5e8f\u7684\u505a\u6cd5...\n\n\u53ea\u9700\u8981\u4e00\u4e2asort...\n\n---\n\n\u6211\u4eec\u4ee4$p_i$\u8868\u793a\u7b2c$i$\u4e2a\u4f4d\u7f6e\u540e\u9762\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u4f4d\u7f6e.\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u65b9\u6848\u662f\u5426\u5408\u6cd5.\n\n\u5982\u679c\u6211\u4eec\u5c06$i$\u548c$p_i$\u7528\u4e00\u6761\u5f27\u7ebf\u8fde\u63a5\u8d77\u6765, \u5bb9\u6613\u53d1\u73b0\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u53ea\u53ef\u80fd\u662f\u4e24\u6761\u5f27\u7ebf\u4e92\u76f8\u5305\u542b\u4e86\u4e00\u4e2a\u7aef\u70b9(\u53bb\u6389\u5171\u7528\u4e00\u4e2a\u7aef\u70b9\u7684\u60c5\u51b5). \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u5224\u65ad\u65b9\u6848\u662f\u5426\u5408\u6cd5.\n\n\u7136\u540e\u518d\u8003\u8651\u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u89e3.\n\n\u9996\u5148, \u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u975e\u5e38naive\u7684\u60f3\u6cd5: \u628a\u6240\u6709\u4f4d\u7f6e\u6309\u7167$p_i$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57(\u4ece\u5927\u5230\u5c0f), $i$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57(\u4ece\u5c0f\u5230\u5927)\u6392\u5e8f, \u7136\u540e\u6309\u7167\u6392\u5e8f\u7684\u7ed3\u679c, \u7b2c\u4e00\u4e2a\u8d4b\u503c\u4e3a$n$, \u7b2c\u4e8c\u4e2a\u8d4b\u503c\u4e3a$n-1$...\u7136\u540e\u5c31\u884c\u4e86? \n\n\u5bf9\u4e8e\u6ca1\u6709-1\u7684\u60c5\u51b5, \u8fd9\u6837\u5b50\u662f\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u7ec4\u5408\u6cd5\u89e3\u7684. \u4f46\u662f\u5982\u679c\u5b58\u5728\u4e86-1, \u6211\u4eec\u5e94\u8be5\u600e\u4e48\u529e\u5462?\n\n\u4e5f\u5f88\u7b80\u5355, \u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u4f4d\u7f6e\u7684$p_i$\u662f\u5b83, \u90a3\u4e48\u8fd9\u4e2a\u6570\u53ea\u9700\u8981\u6210\u4e3a\u6700\u5c0f\u7684\u6570\u5c31\u6ca1\u6709\u5f71\u54cd\u4e86. \u4f46\u662f\u5982\u679c\u6709\u81f3\u5c11\u4e00\u4e2a\u4f4d\u7f6e\u7684$p_i$\u662f\u5b83, \u90a3\u4e48\u5b83\u5c31\u81f3\u5c11\u8981\u5927\u4e8e$p_i$\u7b49\u4e8e\u5b83\u7684\u90a3\u4e00\u4e9b$i$. \u53ea\u9700\u8981\u8ba9\u8fd9\u79cd\u4f4d\u7f6e\u7684$p_i$\u7b49\u4e8e$i+1$\u5c31\u89e3\u51b3\u95ee\u9898\u4e86. (\u8fd9\u79cd\u505a\u6cd5\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5, \u7a0d\u52a0\u601d\u7d22\u5c31\u80fd\u660e\u767d)\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u7528\u5199\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u4e86...\u4e0b\u9762\u629b\u51fa\u4e11\u964b\u7684\u4ee3\u7801.QwQ\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ge getchar()\n#define Re read()\n\ninline int read() {\n\tint t = 0, x = 0, ch;\n\twhile(!isdigit(ch = ge)) t |= ch == '-';\n\twhile(isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = ge;\n\treturn t ? -x : x;\n}\n\nconst int MAXN = 500000;\n\nstruct Node {\n\tint id, v;\n\n\tfriend bool operator < (Node a, Node b) {\n\t\treturn a.v == b.v ? a.id < b.id : a.v > b.v;\n\t}\n}St[MAXN + 1];\n\nint p[MAXN + 1];\nint S[MAXN + 1];\nint res[MAXN + 1];\nint top;\nint n;\nint P;\n\nint main() {\n\tint T = Re, Err = 0;\n\twhile(T--) { Err = 0;\n\t\tn = Re; S[top = 1] = n + 1;\n\t\tfor(int i = 1; i <= n; i++) {\n\t\t\tp[i] = Re;\n\t\t\twhile(S[top] <= i) top--;\n\t\t\tif(!Err && p[i] > S[top]) Err = 1;\n\t\t\tS[++top] = p[i];\n\t\t\twhile(S[top] <= i) top--;\n\t\t\tSt[i] = (Node){i, p[i]};\n\t\t}\n\t\tif(Err) { puts(\"-1\"); continue; }\n\t\tfor(int i = 1; i <= n; i++) if(p[i] != -1 && p[p[i]] == -1) St[p[i]].v = p[i] + 1;\n\t\tsort(St + 1, St + 1 + n);\n\t\tfor(int i = 1; i <= n; i++) res[St[i].id] = n - i + 1;\n\t\tfor(int i = 1; i <= n; i++) printf(\"%d%c\", res[i], \" \\n\"[i == n]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1559461604,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1158C \u3010Permutation recovery\u3011"
    },
    {
        "content": "$O(n)$ \u5355\u8c03\u6808+\u9012\u5f52\u6784\u9020\u5373\u53ef\uff0c\u5b8c\u5168\u4e0d\u9700\u8981\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u8dd1\u62d3\u6251\u3002\n\n\u9996\u5148\u53d1\u73b0\u7531\u4e8e $nxt_i=\\min\\{j|j>i,p_j>p_j\\}$\uff0c\u6240\u4ee5 $a_{[i,nxt_i-1]}$ \u90fd\u8981\u6bd4 $a_{nxt_i}$ \u5c0f\uff0c$nxt_{[i,nxt_i-1]}$ \u4e5f\u90fd\u8981\u5c0f\u4e8e\u7b49\u4e8e $nxt_i$\u3002\u8bbe $fir_i=\\min\\{j|nxt_j=i\\}$\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0 $fir_i,i$ \u6784\u6210\u4e86\u7c7b\u4f3c\u62ec\u53f7\u5339\u914d\u7684\u5173\u7cfb\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7rj4kf3m.png)\n\n\u90a3\u4e48\u626b\u4e00\u904d\u5e8f\u5217\uff0c\u7528\u5355\u8c03\u6808\u627e\u5230\u6700\u5185\u5c42\u7684\u201c\u53f3\u62ec\u53f7\u201d\u7684\u4f4d\u7f6e $pos$\uff0c\u521a\u5f00\u59cb\u5355\u8c03\u6808\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20 $n+1$\u3002\u626b\u5230\u4f4d\u7f6e $i$ \u65f6\uff1a\n\n- \u5148\u5c06\u5355\u8c03\u6808\u9876\u5c0f\u4e8e\u7b49\u4e8e $i$ \u7684\u5143\u7d20\u5f39\u51fa\uff1b\n- \u82e5 $nxt_i=-1$\uff0c\u90a3\u4e48\u8ba9 $nxt_i\\to pos$\uff1b\n- \u5426\u5219\uff1a\n  - \u82e5 $nxt_i>pos$\uff0c\u90a3\u4e48\u65e0\u89e3\uff1b\n  - \u5426\u5219\u82e5 $nxt_i\\not= pos$ \u90a3\u4e48\u628a $nxt_i$ \u52a0\u5165\u5355\u8c03\u6808\uff1b\n\n\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u6784\u9020 $p$ \u5e8f\u5217\u7684\u65b9\u6cd5\u8bc1\u660e\u8fd9\u6837\u6784\u9020 $nxt$ \u662f\u6b63\u786e\u7684\uff1a\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7531\u4e8e\u62ec\u53f7\u7684\u5d4c\u5957\u5173\u7cfb\uff0c\u6240\u4ee5\u5185\u5c42\u5c0f\u6bb5\u7684\u6784\u9020\u65b9\u6cd5\u548c\u5916\u5c42\u5927\u6bb5\u7684\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u9700\u8981\u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf\u5373\u53ef\uff0c\u6240\u4ee5\u8003\u8651\u9012\u5f52\u6784\u9020\u3002\n\n\u8bbe $dfs(l,r,mov)$ \u8868\u793a\u6784\u9020\u5728\u62ec\u53f7 $lft_{nxt_r},nxt_r$ \u4e2d\u7684 $p_{[l,r]}$ \u8fd9\u4e00\u6bb5\uff0c\u5e76\u4e14\u6574\u4e00\u6bb5\u7684\u504f\u79fb\u91cf\u4e3a $mov$\u3002\n\n\u663e\u7136\u8fb9\u754c\u6761\u4ef6\u662f $nxt_{[l,r]}=nxt_r$\uff0c\u8fd9\u65f6\u53ea\u8981\u6784\u9020 $\\{r-l+1+mov,r-l+mov,r-l-1+mov,\\dots,2+mov,1+mov\\}$ \u8fd9\u6837\u5012\u7740\u7684\u5e8f\u5217\u5373\u53ef\u3002\n\n\u7531\u4e8e\u67d0\u4e2a \u201c\u53f3\u62ec\u53f7\u201d \u4e5f\u6709\u53ef\u80fd\u662f\u5de6\u62ec\u53f7\uff0c\u8fd9\u65f6\u8fd9\u4e24\u6bb5\u8981\u770b\u4f5c\u4e00\u6bb5\u5904\u7406\u3002\u6240\u4ee5\u5148\u9884\u5904\u7406\u51fa $lb_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u53f3\u7aef\u70b9\u7684\u201c\u8fde\u901a\u5757\u201d\u7684\u5de6\u7aef\u70b9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/naguo7r4.png)\n\n\u6ce8\u610f\u82e5 $i$ \u4e0d\u4e3a\u201c\u5de6\u62ec\u53f7\u201d\u6216\u8005\u201c\u53f3\u62ec\u53f7\u201d\uff0c\u90a3\u4e48 $lb_i=i$\u3002\n\n\u5728 $dfs(l,r,mov)$ \u4e2d\uff1a\n\n1. \u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u961f\u5217 $vec$\uff0c\u4ee4 $pmov=mov$\uff1b\n2. \u4ece\u53f3\u5f80\u5de6\u626b\u8fc7\u533a\u95f4\uff0c\u626b\u5230 $i$ \u65f6\uff1a\n   - \u82e5 $nxt_i=nxt_r$\uff0c\u8bf4\u660e $p_i$ \u5c5e\u4e8e\u6700\u5916\u5c42\u7684\u62ec\u53f7\uff0c\u90a3\u4e48\u628a $i$ \u653e\u5165\u961f\u5217 $vec$ \u7684\u672b\u5c3e\uff0c\u6700\u540e\u518d\u5904\u7406\uff1b\n   - \u82e5 $nxt_i\\not=nxt_r$\uff0c\u8bf4\u660e $p_i$ \u5c5e\u4e8e\u5185\u5c42\u7684\u67d0\u4e2a\u62ec\u53f7\u4e2d\uff0c\u90a3\u4e48\u9012\u5f52\u5904\u7406 $dfs(lb_i,i,pmov)$\uff0c\u4ee4 $i\\to lb_i-1$\uff0c$pmov\\to pmov+i-lb_i+1$\uff1b\n3. \u961f\u5217 $vec$ \u4e2d\u7684\u5143\u7d20 $i$ \u90fd\u6ee1\u8db3 $nxt_i=nxt_r$\uff0c\u5e76\u4e14\u961f\u5217\u4e2d\u5143\u7d20\u662f\u4ece\u5927\u5230\u5c0f\u6392\u5217\u7684\u3002\u90a3\u4e48\u53c2\u7167 $nxt_{[l,r]}=nxt_r$ \u60c5\u51b5\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u65ad\u4ece\u961f\u5934\u53d6\u51fa\u5143\u7d20 $i$\uff0c\u4ee4 $p_i\\to pmov$\uff0c$pmov\\to pmov+1$ \u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n\nusing namespace std;\n\nconst int S=500005;\n\nint n,nxt[S];\nint sta[S];\nint lb[S],a[S];\n\nvoid dfs(int l,int r,int mov)\n{\n\tint len=r-l+1,nxmov=mov;\n\tvector<int> vec;\n\tfor(int i=r;i>=l;i--)\n\t{\n\t\tif(nxt[i]!=nxt[r]) dfs(lb[i],i,nxmov),nxmov+=i-lb[i]+1,i=lb[i];\n\t\telse vec.push_back(i);\n\t}\n\tfor(int u:vec) a[u]=++nxmov;\n}\n\ninline void slove()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&nxt[i]);\n\tint top=1;\n\tsta[1]=n+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(sta[top]<=i) top--;\n\t\tif(nxt[i]==-1) nxt[i]=sta[top];\n\t\telse\n\t\t{\n\t\t\tif(nxt[i]>sta[top])\n\t\t\t{\n\t\t\t\tputs(\"-1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if(nxt[i]<sta[top]) sta[++top]=nxt[i];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) lb[i]=i;\n\tfor(int i=1;i<=n;i++) lb[nxt[i]]=min(lb[nxt[i]],lb[i]);\n\tdfs(1,n,0);\n\tfor(int i=1;i<=n;i++) printf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T-->0) slove();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1661742217,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "CF1158C Permutation recovery \u505a\u9898\u8bb0\u5f55 & \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6392\u5217 $a_1...a_n$ ,  $next_i$ \u8868\u793a\u6392\u5217\u4e2d$i$\u540e\u9762\u7b2c\u4e00\u4e2a\u6bd4 $a_i$ \u5927\u7684\u4f4d\u7f6e.\u73b0\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5217\u7684\u4e00\u90e8\u5206 $next_i$ \u6570\u7ec4,\u8bd5\u636e\u6b64\u6784\u9020\u4e00\u4e2a\u6392\u5217\u3002\n\u82e5 $next_i=n+1$ \u8868\u793a $i$ \u540e\u9762\u6ca1\u6709\u6bd4\u5b83\u66f4\u5927\u7684\u6570, $next_i=-1$ \u8868\u793a\u4e0d\u786e\u5b9a,$n \\leq 5*10^5$ .\n\n### \u6cd51:   $O(nlogn)$\n\n\u8003\u8651\u5b9a\u4e49,\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a $nexti$ \u4e0d\u7b49\u4e8e $-1$ \u7684\u4f4d\u7f6e $i$ ,\u6709$a_i>a_j(i+1\\leq j \\leq nexti-1) , a_{next_i} > a_i$ \u6210\u7acb,\u663e\u7136\u8fde\u8fb9+\u62d3\u6251\u6392\u5e8f,\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u8fde\u8fb9\u505a\u5230 $O(nlogn)$ \u5373\u53ef\u3002\n\n### \u6cd52:   $O(n)$\n\n- **Step1** \u8003\u8651\u6ca1\u6709 $-1$  ,\u4e14 $next$ \u4e92\u4e0d\u76f8\u540c\u600e\u4e48\u505a.\u7531\u4e8e\u4ea4\u53c9\u5fc5\u7136\u65e0\u89e3,\u6240\u4ee5\u5f62\u6210\u7684\u533a\u95f4\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7g8l6oph.png)\n\n\u5bb9\u6613\u53d1\u73b0,**\u5982\u679c $next$ \u4e92\u4e0d\u76f8\u540c**,\u6211\u4eec\u6309\u7167 $next$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u4f9d\u6b21\u586b\u6570,\u65b9\u6848\u5fc5\u5b9a\u662f\u5408\u6cd5\u7684,\u539f\u56e0\u5728\u4e8e,\u4e00\u4e2a\u4f4d\u7f6e\u6709\u6bd4\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u5c0f\u7684\u9650\u5236,\u5f53\u4e14\u4ec5\u5f53\u88ab\u4e00\u4e2a $(i,next_i)$ \u7684\u533a\u95f4\u8986\u76d6,\u6392\u5e8f\u540e\u5c31\u4fdd\u8bc1\u4e86\u53f3\u8fb9\u7684\u6bd4\u5de6\u8fb9\u5c0f,\u6240\u4ee5\u5fc5\u7136\u5408\u6cd5\u3002\n\n- **Step2** \u8003\u8651\u6709 $next$ \u76f8\u540c\u600e\u4e48\u505a.\u663e\u7136,\u5bf9\u4e8e $next$ \u76f8\u7b49\u7684\u4f4d\u7f6e,\u8d8a\u9760\u524d,\u6570\u8d8a\u5927,\u5bf9\u4e8e\u8fd9\u4e9b\u4f4d\u7f6e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5373\u53ef\u3002\n\n- **Step3** \u8003\u8651\u6709 $-1$ \u600e\u4e48\u505a.\u76f8\u5f53\u4e8e\u5728\u4e0d\u8003\u8651 $-1$ \u5f62\u6210\u7684\u533a\u95f4\u4e2d\u52a0\u5165\u8bb8\u591a\u65b0\u533a\u95f4,\u4f7f\u5176\u5408\u6cd5,\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/85f8io39.png)\n\n\u5bb9\u6613\u53d1\u73b0,\u53ea\u8981\u8ba9 $i$ \u76f4\u63a5\u6307\u5411 $i+1$ \u5c31\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u4ea4\u53c9\u533a\u95f4.\u5982\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bn0q0vpt.png)\n\n\u7528\u4e00\u4e2a vector \u5b58\u50a8\u67d0\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a $next$ \u88ab\u54ea\u4e9b\u70b9\u6307\u5411,\u626b\u4e00\u904d,\u4f9d\u6b21\u586b\u6570,\u5c31\u662f\u4e00\u79cd\u5408\u6cd5\u65b9\u6848.",
        "postTime": 1636078570,
        "uid": 34940,
        "name": "Minuit",
        "ccfLevel": 0,
        "title": "CF1158C Permutation recovery \u9898\u89e3"
    },
    {
        "content": "\u6ca1\u6709 $-1$ \u65f6\u7684\u9650\u5236\u6bd4\u6709 $-1$ \u7684\u9650\u5236\u4e25\u683c\uff0c\u6240\u4ee5\u5148\u8003\u8651\u6ca1\u6709 $-1$ \u7684\u60c5\u51b5\u3002$nxt_i=j$ \u610f\u5473\u7740 $p_i>p_{[i+1,j)}\\&p_i<p_j$\u3002\u56fe\u8bba\u89c6\u89d2\uff0c\u5982\u679c $p_i>p_j$ \u5c31\u8fde\u4e00\u6761 $i\\rightarrow j$ \u7684\u6709\u5411\u8fb9\uff0c\u7136\u540e\u62d3\u6251\u6392\u5e8f\u3002\u6709\u73af\u5219\u65e0\u89e3\uff0c\u5426\u5219\u6309\u62d3\u6251\u5e8f\u6784\u9020\u7b54\u6848\u5fc5\u7136\u5408\u6cd5\u3002\u76f4\u63a5\u4e0a\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\uff0c\u641e\u5b9a\u4e86\uff01\uff011\n\n\u7136\u800c\u8fd9\u662f\u7ec3\u4e60\uff0c\u4e0d\u662f\u6bd4\u8d5b\uff0c\u6211\u4eec\u4e0d\u80fd\u6ee1\u8db3\u4e8e\u6b64\u3002\u6ce8\u610f\u5230\u4ea7\u751f\u73af\u7684\u5173\u952e\u5728\u4e8e $nxt_i\\rightarrow i$ \u8fd9\u6761\u201d\u8fd4\u7956\u8fb9\u201c\u3002\u8003\u8651\u5148\u8d70\u4e00\u6761\u8fd4\u7956\u8fb9\uff0c\u518d\u987a\u6d41\u800c\u4e0b\u770b\u770b\u80fd\u4e0d\u80fd\u8d70\u56de\u8d77\u70b9\u3002\u5047\u5982\u6211\u4eec\u4ece $s$ \u51fa\u53d1\u8d70\u4e86\u4e00\u6761\u8fd4\u7956\u8fb9\u5230 $t$\uff0c\u7136\u540e\u4e0d\u65ad\u5f80\u53f3\u8d70\u3002\u6211\u4eec\u80fd\u8d70\u56de $s$\uff0c\u5f53\u4e14\u4ec5\u5f53\u6211\u4eec\u53ef\u4ee5\u8d70\u5230\u4e00\u4e2a\u70b9 $i$ \u4f7f\u5f97 $nxt_i>s$\u3002\u6362\u8a00\u4e4b\uff0c\u5b58\u5728 $i<t,nxt_i>s$\u3002\u8fd9\u662f\u5565\uff1f\u533a\u95f4\u76f8\u4ea4\uff08\u5305\u542b\u4e0d\u7b97\u76f8\u4ea4\uff09\uff01\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u533a\u95f4 $[i,nxt_i),[j,nxt_j)$ \u6ee1\u8db3 $i<j<nxt_i<nxt_j$ \u5219\u65e0\u89e3\uff0c\u5426\u5219\u4e00\u5b9a\u6709\u89e3\u3002\u8fd9\u4e5f\u8868\u660e\u4e86\u6211\u4eec\u8be5\u5982\u4f55\u5904\u7406 $-1$ \u7684\u4f4d\u7f6e\u2014\u2014\u533a\u95f4\u8d8a\u77ed\u8d8a\u4e0d\u5bb9\u6613\u548c\u5176\u4ed6\u533a\u95f4\u76f8\u4ea4\uff0c\u56e0\u6b64\u628a\u6240\u6709 $nxt_i=-1$ \u7684 $nxt$ \u8d4b\u4e3a $i+1$ \u662f\u6700\u4f18\u7684\u3002\n\n\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u533a\u95f4\u76f8\u4ea4\u53ef\u4ee5\u4ece\u53f3\u5411\u5de6\u626b\uff0c\u7528\u5355\u8c03\u6808\u5b58\u50a8\u4e92\u4e0d\u76f8\u4ea4\u7684\u82e5\u5e72\u4e2a\u533a\u95f4\uff0c\u6bcf\u6b21\u628a\u5f53\u524d\u533a\u95f4\u5305\u542b\u5230\u7684\u533a\u95f4\u5f39\u51fa\uff0c\u7136\u540e\u5224\u65ad\u5b83\u548c\u6808\u9876\u533a\u95f4\u662f\u5426\u76f8\u4ea4\u3002\u95ee\u9898\u8f6c\u4e3a\u5df2\u77e5 $nxt$ \u6570\u7ec4\u5982\u4f55\u6784\u9020\u89e3\u3002\u4ee5\u533a\u95f4 $[1,n]$ \u4e3a\u4f8b\uff0c\u627e\u51fa\u6240\u6709 $nxt$ \u7b49\u4e8e $n+1$ \u7684\u4f4d\u7f6e\uff08\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\uff09\uff0c\u628a\u5b83\u4eec\u7684 $p$ \u4f9d\u6b21\u8d4b\u4e3a $n,n-1,\u2026$ \u540e\u9012\u5f52\u6c42\u89e3\u5373\u53ef\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n//author:\u671b\u8fdc\u661f\n#include<bits/stdc++.h>\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define pb push_back\n#define mk make_pair\n#define sml(x,y) (x=min(x,y))\n#define big(x,y) (x=max(x,y))\n#define ll long long\n#define db double\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){int x=0,fh=1; char ch=getchar(); while(!isdigit(ch)){if(ch=='-') fh=-1; ch=getchar();} while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0'; ch=getchar();} return x*fh;}\ninline void out(int *a,int l,int r){fo(i,l,r) printf(\"%d \",*(a+i));puts(\"\");}\n\nconst int N=1e6;\nint a[N],stk[N],top,ans[N],id;\nvector<int> g[N];\n\nvoid solve(int l,int r){\n\t//printf(\"solve(%d,%d),%d\\n\",l,r,id);\n\tif(l>r) return;\n\tint lst=l;\n\t//\u8fd9\u4e24\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\uff0c\u53ea\u9700\u8981\u8ba9\u5b50\u95ee\u9898\u91cc\u7684\u503c\u5c0f\u4e8e\u53f3\u7aef\u70b9\u7684\u503c\u5373\u53ef \n\tfor(auto i:g[r+1]){\n\t\tans[i]=id--;\n\t\tsolve(lst,i-1);\n\t\tlst=i+1;\n\t}\n\t/*for(auto i:g[r+1]) ans[i]=id--;\n\tfor(auto i:g[r+1]){\n\t\tsolve(lst,i-1);\n\t\tlst=i+1;\n\t}*/\n\tsolve(lst,r);\n}\n\nsigned main(){int T=read();while(T--){\n\tint n=read();g[n+1].clear();top=0;id=n;\n\tfo(i,1,n) a[i]=read(),g[i].clear();\n\tfo(i,1,n){\n\t\tif(a[i]==-1) a[i]=i+1;\n\t\tg[a[i]].pb(i);\n\t}\n\tgo(i,n,1){\n\t\twhile(top&&a[i]>=a[stk[top]]) top--;\n\t\tif(top&&a[i]>stk[top]) goto H;\n\t\tstk[++top]=i;\n\t}\n\tsolve(1,n);\n\tout(ans,1,n);\n\tcontinue;\n\tH:puts(\"-1\");\n}\n\treturn 0;\n}\n```\n",
        "postTime": 1635853858,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1158C Permutation recovery"
    },
    {
        "content": "# CF1158C Permutation recovery\n\n\u8003\u8651\u6700\u5927\u503c\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5b83\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u4e24\u4e2a\u90e8\u5206\u4e00\u5b9a\u4e92\u4e0d\u5f71\u54cd\uff08\u5982\u679c\u5de6\u8fb9\u6709\u70b9\u7684 $\\text{next}_i$ \u6307\u5411\u53f3\u8fb9\uff0c\u5219\u65e0\u89e3\uff09\u3002\u5982\u6b64\u6bcf\u6b21\u627e\u6700\u5927\u503c\uff0c\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u9012\u5f52\u7684\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u201c\u7b1b\u5361\u5c14\u6811\u201d\u3002\n\n\u4e0d\u8fc7\u73b0\u5728\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u6700\u5927\u503c\u662f\u8c01\u3002\u8003\u8651\u54ea\u4e9b\u70b9**\u4e0d\u80fd**\u6210\u4e3a\u6700\u5927\u503c\u3002\u5bf9\u4e8e\u6bcf\u4e2a $\\text{next}_i\\neq -1$ \u7684 $i$\uff0c$[i,\\text{next}_i)$ \u91cc\u7684\u6570\u663e\u7136\u90fd\u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u5927\u503c\uff08\u9664\u975e $\\text{next}_i$ \u7b49\u4e8e\u5f53\u524d\u53f3\u7aef\u70b9\u52a0 $1$\uff0c\u6211\u4eec\u7279\u5224\uff09\u3002\u90a3\u4e48\u53ef\u80fd\u6210\u4e3a\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u5c31\u662f\u672a\u88ab\u4efb\u4f55 $[i,\\text{next}_i)$ \u8986\u76d6\u7684\u4f4d\u7f6e\u3002\u5047\u8bbe\u8fd9\u6837\u7684\u4f4d\u7f6e\u6709\u591a\u4e2a\uff0c\u6211\u4eec\u53d6\u4e0b\u6807\u6700\u5c0f\u7684\u90a3\u4e2a\u3002\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u6700\u53ef\u80fd\u6784\u9020\u51fa\u89e3\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e9b\u8986\u76d6\u3002\u652f\u6301\u533a\u95f4\u52a0\uff08\u6216\u51cf\uff09\uff0c\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n// problem: CF1158C\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\n\ntemplate<typename T> inline void ckmax(T& x, T y) { x = (y > x ? y : x); }\ntemplate<typename T> inline void ckmin(T& x, T y) { x = (y < x ? y : x); }\n\nconst int MAXN = 5e5, INF = 1e9;\nint n, f[MAXN + 5], ans[MAXN + 5];\nvector<int> vec[MAXN + 5];\n\nstruct SegmentTree {\n\tint mn[MAXN * 4 + 5], mn_pos[MAXN * 4 + 5], tag[MAXN * 4 + 5];\n\tvoid push_up(int p) {\n\t\tif(mn[p << 1] <= mn[p << 1 | 1]) {\n\t\t\tmn[p] = mn[p << 1];\n\t\t\tmn_pos[p] = mn_pos[p << 1];\n\t\t} else {\n\t\t\tmn[p] = mn[p << 1 | 1];\n\t\t\tmn_pos[p] = mn_pos[p << 1 | 1];\n\t\t}\n\t}\n\tvoid build(int p, int l, int r) {\n\t\ttag[p] = 0;\n\t\tif(l == r) {\n\t\t\tmn[p] = 0;\n\t\t\tmn_pos[p] = l;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(p << 1, l, mid);\n\t\tbuild(p << 1 | 1, mid + 1, r);\n\t\tpush_up(p);\n\t}\n\tvoid push_down(int p) {\n\t\tif(tag[p] != 0) {\n\t\t\tmn[p << 1] += tag[p];\n\t\t\ttag[p << 1] += tag[p];\n\t\t\tmn[p << 1 | 1] += tag[p];\n\t\t\ttag[p << 1 | 1] += tag[p];\n\t\t\ttag[p] = 0;\n\t\t}\n\t}\n\tvoid range_add(int p, int l, int r, int ql, int qr, int v) {\n\t\tif(ql <= l && qr >= r) {\n\t\t\tmn[p] += v;\n\t\t\ttag[p] += v;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tpush_down(p);\n\t\tif(ql <= mid) {\n\t\t\trange_add(p << 1, l, mid, ql, qr, v);\n\t\t}\n\t\tif(qr > mid) {\n\t\t\trange_add(p << 1 | 1, mid + 1, r, ql, qr, v);\n\t\t}\n\t\tpush_up(p);\n\t}\n\tpii query_min(int p, int l, int r, int ql, int qr) {\n\t\tif(ql <= l && qr >= r) {\n\t\t\treturn mk(mn[p], mn_pos[p]);\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tpush_down(p);\n\t\tpii res = mk(INF, INF);\n\t\tif(ql <= mid) {\n\t\t\tres = query_min(p << 1, l, mid, ql, qr);\n\t\t}\n\t\tif(qr > mid) {\n\t\t\tckmin(res, query_min(p << 1 | 1, mid + 1, r, ql, qr));\n\t\t}\n\t\tpush_up(p);\n\t\treturn res;\n\t}\n\tSegmentTree() {}\n}T;\n\nbool fail;\nvoid solve(int l, int r, int vl, int vr) {\n\tassert(r - l + 1 == vr - vl + 1);\n\tif(SZ(vec[r + 1])) {\n\t\tT.range_add(1, 1, n, vec[r + 1].back(), r, -1);\n\t}\n\tpii tmp = T.query_min(1, 1, n, l, r);\n\tif(tmp.fi != 0) { fail = 1; return; }\n\tans[tmp.se] = vr;\n\tif(SZ(vec[r + 1])) {\n\t\tif(tmp.se == vec[r + 1].back()) {\n\t\t\tvec[r + 1].pop_back();\n\t\t} else {\n\t\t\tT.range_add(1, 1, n, vec[r + 1].back(), r, 1);\n\t\t}\n\t}\n\t\n\tif(tmp.se > l) {\n\t\tsolve(l, tmp.se - 1, vl, vl + tmp.se - l - 1);\n\t\tif(fail) return;\n\t}\n\tif(tmp.se < r) {\n\t\tsolve(tmp.se + 1, r, vl + tmp.se - l, vr - 1);\n\t\tif(fail) return;\n\t}\n}\nvoid solve_case() {\n\tcin >> n;\n\tT.build(1, 1, n);\n\tfor(int i = 2; i <= n + 1; ++i) {\n\t\tvector<int>().swap(vec[i]);\n\t}\n\tfor(int i = 1; i <= n; ++i) {\n\t\tcin >> f[i];\n\t\tif(f[i] == -1) continue;\n\t\tT.range_add(1, 1, n, i, f[i] - 1, 1);\n\t\tvec[f[i]].pb(i);\n\t}\n\tfor(int i = 2; i <= n + 1; ++i) {\n\t\treverse(vec[i].begin(), vec[i].end());\n\t}\n\tfail = 0;\n\tsolve(1, n, 1, n);\n\tif(fail) {\n\t\tcout << -1 << endl;\n\t\treturn;\n\t}\n\tfor(int i = 1; i <= n; ++i) {\n\t\tcout << ans[i] << \" \\n\"[i == n];\n\t}\n}\nint main() {\n\tint T; cin >> T; while(T--) {\n\t\tsolve_case();\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1601397197,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1158C \u3010Permutation recovery\u3011"
    }
]