[
    {
        "content": "\u9996\u5148\u770b\u5230\u8fd9\u79cd\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u5230\u53f6\u8282\u70b9\u4e0a\u7684\u6700\u5927\u8ddd\u79bb\u503c\u6700\u5c0f\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u6362\u6839\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u4ed6\u4ec0\u4e48\u65f6\u5019\u5728\u56fe\u4e0a\u53ef\u4ee5\u4f7f\u5f97\u53f6\u8282\u70b9\u4e0e\u5b83\u7684\u8ddd\u79bb\u6700\u5c0f\u3002\n\n\u5f88\u660e\u663e\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9\uff0c\u5b83\u5230\u5176\u4ed6\u8282\u70b9\u7684\u6700\u77ed\u8def\u662f\u4e0d\u51b2\u7a81\u7684\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u56fe\u4e0a\u5efa\u51fa\u5b83\u7684 bfs \u6811\u65f6\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u5728\u8fd9\u4e2a\u56fe\u4e0a\u518d\u5230\u8fd9\u4e2a\u70b9\u5230\u5176\u4ed6\u6240\u6709\u70b9\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\u3002\n\n\u7531\u4e8e\u8fd9\u56fe\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u4e14\u4ec5\u5c5e\u4e8e\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u5b83\u5927\u6982\u662f\u957f\u8fd9\u6837\u7684:\n\n![image](https://img-blog.csdnimg.cn/20210716111804104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1Rhbl90YW5fdGFubg==,size_16,color_FFFFFF,t_70)\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u4ee5\u67d0\u4e2a\u70b9\u4e3a\u6839\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u5b83\u73af\u5916\u7684\u5b50\u6811 (\u5176\u5b9e\u5c31\u662f\u518d\u5f80\u4e0b\u7684\u90e8\u5206) \u4e0a\u7684\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u503c\u3002\n\n\u518d\u5bf9\u539f\u6811\u8fdb\u884c\u7f29\u70b9\uff0c\u5c06\u4e00\u4e2a\u73af\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u8fdb\u884c\u6362\u6839\u3002\n\n\u5f53\u6362\u6839\u5230\u67d0\u4e2a\u70b9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u6240\u5c5e\u73af\u4e0a\u7684\u6240\u6709\u70b9\u7684\u7b54\u6848\u4e00\u5e76\u6c42\u51fa\u3002\n\u5bf9\u4e8e\u8fd9\u73af\u4e0a\u7684\u6bcf\u4e2a\u70b9\uff0c\u5148\u66b4\u529b\u679a\u4e3e\u5176\u513f\u5b50\uff0c\u6c42\u51fa\u5176\u5230\u5b83\u7684\u73af\u5916\u5b50\u6811\u4e2d\u53f6\u8282\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u503c\uff0c\u518d\u8003\u8651\u73af\u4e0a\u70b9\u7684\u8d21\u732e\u3002\n\n\u8bb0 $g_{i}$ \u8868\u793a\u70b9 $i$ \u7684\u73af\u5916\u5b50\u6811\u4e2d\u53f6\u8282\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u503c\uff0c\u5f88\u660e\u663e\u6709\uff0c\n\n $$ans_{i}=\\max_{j\\in V}\\left(g_{v}+dist_{i,j}\\right)$$\n\n\u7531\u4e8e $dist$ \u5728\u73af\u4e0a\u5206\u4e3a\u4e24\u6bb5\u9012\u589e\uff0c\u5f80\u5de6\u5f80\u53f3\u90fd\u662f\u9012\u589e\uff0c\u76f4\u5230\u73af\u7684\u53e6\u4e00\u4fa7\u4e0e\u5176\u76f8\u5bf9\u5e94\u7684\u70b9\u4e3a\u6b62\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u73af\u4e0a\u7684\u70b9\u7684\u7b54\u6848\u8f6c\u79fb\u3002\n\n\u4ece\u4e00\u4e2a\u73af\u6362\u5230\u53e6\u4e00\u4e2a\u73af\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e24\u73af\u4e4b\u95f4\u6865\u4e0a\u5728\u539f\u73af\u4e0a\u7684\u5bf9\u5e94\u70b9\u6c42\u51fa\u6700\u5927\u503c\u4e0e\u6b21\u5927\u503c\uff0c\u770b\u5e94\u8be5\u53bb\u54ea\u4e00\u4e2a\u5373\u53ef\u3002\n\n\u6ce8\u610f\u4e0d\u80fd\u5149\u6c42\u5b50\u6811\u4e0a\u7684\u8ddd\u79bb\uff0c\u8fd8\u8981\u6ce8\u610f\u73af\u4e0a\u7684\u8ddd\u79bb\uff0c\u901a\u8fc7\u4e4b\u524d\u6c42\u7684 $ans$ \u4e5f\u5c31\u53ef\u4ee5\u5f97\u77e5\u73af\u4e0a\u7684\u6700\u5927\u503c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O\\left(n+m\\right)$ \u3002\n\u4e0d\u8fc7\u7b14\u8005\u6c42\u73af\u4e0a\u70b9\u65f6\u662f\u8ddf\u636edfs\u5e8f\u6392\u5e8f\u5f97\u5230\u7684\uff0c\u6240\u4ee5\u8fd8\u8981\u52a0\u4e0a\u4e00\u4e2a $\\log$\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u6876\u6392\u3002\n\n\u867d\u7136\u9898\u76ee\u5e76\u6ca1\u6709\u7ed9 $m$ \u7684\u8303\u56f4\uff0c\u4f46\u7531\u4e8e\u4e00\u4e2a\u70b9\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u73af\u53ef\u77e5 $m\\leqslant \\frac{3}{2}n$\uff0c\u4e5f\u5c31\u662f $\\frac{n}{2}$ \u4e2a\u4e8c\u5143\u73af\u6784\u6210\u94fe\u65f6\u53d6\u6700\u5927\u503c\u3002\n\n## \u6e90\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 500005\n#define lowbit(x) (x&-x)\n#define reg register\n#define pb push_back\n#define mkpr make_pair\n#define fir first\n#define sec second\n#define lson (rt<<1)\n#define rson (rt<<1|1)\ntypedef long long LL;\ntypedef unsigned long long uLL;\nconst int INF=0x3f3f3f3f;\nconst int mo=998244353;\nconst int inv2=499122177;\nconst int jzm=2333;\nconst int orG=3,invG=332748118;\nconst int lim=300000;\nconst double Pi=acos(-1.0);\ntypedef pair<int,int> pii;\nconst double PI=acos(-1.0);\ntemplate<typename _T>\n_T Fabs(_T x){return x<0?-x:x;}\ntemplate<typename _T>\nvoid read(_T &x){\n\t_T f=1;x=0;char s=getchar();\n\twhile(s>'9'||s<'0'){if(s=='-')f=-1;s=getchar();}\n\twhile('0'<=s&&s<='9'){x=(x<<3)+(x<<1)+(s^48);s=getchar();}\n\tx*=f;\n}\ntemplate<typename _T>\nvoid print(_T x){if(x<0){x=(~x)+1;putchar('-');}if(x>9)print(x/10);putchar(x%10+'0');}\nint gcd(int a,int b){return !b?a:gcd(b,a%b);}\nint add(int x,int y){return x+y<mo?x+y:x+y-mo;}\nint qkpow(int a,int s){int t=1;while(s){if(s&1)t=1ll*a*t%mo;a=1ll*a*a%mo;s>>=1;}return t;}\nint n,m,head[MAXN],tot,dp[MAXN],g[MAXN],dfn[MAXN],low[MAXN],belong[MAXN];\nint sta[MAXN],stak,idx,cnt,q[2][MAXN<<1],Head[2],Tail[2],ans[MAXN];\nint dis[MAXN],ord[MAXN],tid,mxd[MAXN];\nbool vis[MAXN];\nvector<int>cir[MAXN]; \nqueue<int>Q;\nstruct edge{int to,nxt;}e[MAXN*3];\nvoid addEdge(int u,int v){e[++tot]=(edge){v,head[u]};head[u]=tot;}\nvoid bfs(int s){\n\twhile(!Q.empty())Q.pop();Q.push(s);dis[s]=1;vis[s]=1;\n\twhile(!Q.empty()){\n\t\tint t=Q.front();Q.pop();ord[++tid]=t;\n\t\tfor(int i=head[t];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;if(vis[v])continue;\n\t\t\tQ.push(v);vis[v]=1;dis[v]=dis[t]+1;\n\t\t}\n\t}\n\tfor(int i=tid;i>0;i--){\n\t\tint u=ord[i];mxd[u]=dis[u];\n\t\tfor(int j=head[u];j;j=e[j].nxt)\n\t\t\tmxd[u]=max(mxd[e[j].to],mxd[u]);\n\t\tdp[u]=mxd[u]-dis[u]+1;\n\t}\n}\nvoid tarjan(int u,int fa){\n\tdfn[u]=low[u]=++idx;sta[++stak]=u;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(!dfn[v])tarjan(v,u),low[u]=min(low[u],low[v]);\n\t\telse if(v!=fa)low[u]=min(low[u],dfn[v]);\n\t}\n\tif(low[u]==dfn[u]){++cnt;int v;do{v=sta[stak--];belong[v]=cnt;}while(v!=u);}\n} \nvoid dosaka(int u,int fa){\n\tint id=belong[u],siz=cir[id].size();Head[0]=Tail[0]=Head[1]=Tail[1]=1;\n\tfor(int i=0;i<siz;i++){\n\t\tg[i]=1;\n\t\tfor(int j=head[cir[id][i]];j;j=e[j].nxt)\n\t\t\tif(belong[e[j].to]!=id)g[i]=max(dp[e[j].to]+1,g[i]);\n\t}\n\tfor(int i=1;i+i<=siz;i++){\n\t\twhile(Head[0]<Tail[0]&&g[i]+i>=g[q[0][Tail[0]-1]]+q[0][Tail[0]-1])Tail[0]--;\n\t\tq[0][Tail[0]++]=i;\n\t}\n\tfor(int i=(siz+1)/2;i<siz;i++){\n\t\twhile(Head[1]<Tail[1]&&g[i]-i>=g[q[1][Tail[1]-1]]-q[1][Tail[1]-1])Tail[1]--;\n\t\tq[1][Tail[1]++]=i;\n\t}\n\tif(Head[0]<Tail[0])ans[u]=max(ans[u],g[q[0][Head[0]]]+q[0][Head[0]]);\n\tif(Head[1]<Tail[1])ans[u]=max(ans[u],g[q[1][Head[1]]]+siz-q[1][Head[1]]);\n\tfor(int i=1;i<siz;i++){\n\t\tint stp=cir[id][i],las=i-1,lst=(i+(siz+1)/2-1+siz)%siz;\n\t\twhile(Head[1]<Tail[1]&&q[1][Head[1]]==lst)Head[1]++;\n\t\twhile(Head[0]<Tail[0]&&q[0][Head[0]]==i)Head[0]++;\n\t\twhile(Head[1]<Tail[1]&&g[q[1][Tail[1]-1]]+(i+siz-q[1][Tail[1]-1])%siz<=g[las]+(i+siz-las)%siz)Tail[1]--;q[1][Tail[1]++]=las;\n\t\twhile(Head[0]<Tail[0]&&g[q[0][Tail[0]-1]]+(q[0][Tail[0]-1]+siz-i)%siz<=g[lst]+(lst+siz-i)%siz)Tail[0]--;q[0][Tail[0]++]=lst;\n\t\tif(Head[0]<Tail[0])ans[stp]=max(ans[stp],g[q[0][Head[0]]]+(q[0][Head[0]]-i+siz)%siz);\n\t\tif(Head[1]<Tail[1])ans[stp]=max(ans[stp],g[q[1][Head[1]]]+(i+siz-q[1][Head[1]])%siz);\t\n\t}\n\tfor(int i=0;i<siz;i++){\n\t\tu=cir[id][i];int f1=1,f2=1;\n\t\tfor(int j=head[u];j;j=e[j].nxt){\n\t\t\tint v=e[j].to;if(belong[v]==id)continue;\n\t\t\tif(dp[v]+1>f1)f2=f1,f1=dp[v]+1;\n\t\t\telse if(dp[v]+1>f2)f2=dp[v]+1; \n\t\t}\n\t\tf1=max(ans[u],f1);f2=max(ans[u],f2);ans[u]=max(f1,ans[u]);\n\t\tfor(int j=head[u];j;j=e[j].nxt){\n\t\t\tint v=e[j].to;if(belong[v]==id||v==fa)continue;\n\t\t\tint tmpu=dp[u];if(dp[v]+1==f1)dp[u]=f2;else dp[u]=f1;\n\t\t\tdosaka(v,u);dp[u]=tmpu;\n\t\t}\n\t}\n}\nbool cmp(int x,int y){return dfn[x]<dfn[y];}\nsigned main(){\n\tread(n);read(m);\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;read(u);read(v);\n\t\taddEdge(u,v);addEdge(v,u);\n\t}\n\tbfs(1);for(int i=1;i<=n;i++)if(!dfn[i])tarjan(i,0);\n\tfor(int i=1;i<=n;i++)cir[belong[i]].push_back(i);\n\tfor(int i=1;i<=cnt;i++)sort(cir[i].begin(),cir[i].end(),cmp);\n\tdosaka(1,0);for(int i=1;i<=n;i++)printf(\"%d \",ans[i]-1);puts(\"\");\n\treturn 0; \n} \n\n```\n\n## \u8c22\u8c22\uff01\uff01\uff01",
        "postTime": 1626406978,
        "uid": 105141,
        "name": "StaroForgin",
        "ccfLevel": 9,
        "title": "\u9898\u89e3[CF980F]Cactus to Tree"
    },
    {
        "content": "\u770b\u6ca1\u6709\u9898\u89e3\u5c31\u6765\u6c34\u4e00\u7bc7\u3002\n\n\u9996\u5148\u8fd9\u9898\u662f\u5047\u7684\u4ed9\u4eba\u638c\uff0c**\u6bcf\u4e2a\u70b9\u6700\u591a\u5c5e\u4e8e\u4e00\u4e2a\u73af**\uff0c\u6211\u4e00\u5f00\u59cb\u8bfb\u9519\u4e86\u3002\u3002\u6240\u4ee5\u8fd9\u9898\u6bd4\u4e00\u822c\u7684\u4ed9\u4eba\u638c\u9898\u8981\u53cb\u597d\u5f88\u591a\uff0c\u6bd5\u7adf\u548c\u6811\u957f\u5f97\u66f4\u50cf\u4e00\u4e9b\u3002\u6839\u636e\u6811\u5f62dp\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u8981\u5bf9\u6bcf\u4e2a\u70b9\u5206\u522b\u6c42\u51fa\u5411\u4e0a\u548c\u5411\u4e0b\u7684\u6700\u957f\u94fe\u3002\n\n\u5148\u8dd1\u4e00\u4e0b tarjan \u627e\u5230\u6240\u6709\u7684\u73af\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u73af\u5728 dfs \u4e2d\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u5230\u7684\u70b9\u79f0\u4e3a**\u73af\u6839**\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bbf\u95ee\u5230\u73af\u6839\u7684\u65f6\u5019\u904d\u5386\u6574\u4e2a\u73af\u3002\u7b2c\u4e00\u904d dfs \u6c42\u51fa\u5411\u4e0b\u7684\u6700\u957f\u94fe\uff0c\u73af\u6839\u53ef\u4ee5\u8d70\u73af\uff0c\u522b\u7684\u70b9\u4e0d\u80fd\u8d70\u5230\u540c\u73af\u7684\u70b9\u3002\u7136\u540e\u518d dfs \u4e00\u904d\u6c42\u51fa\u5411\u4e0a\u7684\u6700\u957f\u94fe\uff0c\u8fd8\u662f\u5728\u73af\u6839\u7684\u4f4d\u7f6e\u66f4\u65b0\u6574\u4e2a\u73af\u3002\n\n\u6709\u4e00\u4e2a\u6bd4\u8f83\u96be\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u73b0\u5728\u6211\u6709\u4e00\u4e2a\u73af\uff0c\u6bcf\u4e2a\u70b9\u5411\u73af\u5916\u7684\u6700\u957f\u94fe\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\uff0c\u6211\u60f3\u77e5\u9053\u5bf9\u6bcf\u4e2a\u70b9\uff0c\u6700\u4f18\u7684\u7b54\u6848\u662f\u591a\u5c11\u3002\u9996\u5148\u662f\u65ad\u8fb9\uff0c\u6211\u4eec\u65ad\u6389\u7684\u80af\u5b9a\u662f\u8fd9\u4e2a\u70b9**\u6b63\u5bf9**\u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6cbf\u7740\u8fd1\u8def\u8d70\u5230\u6bcf\u4e2a\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4 $ans_i=\\max(d_j+dis(i,j))$ \uff0c\u660e\u663e\u7528\u5355\u8c03\u961f\u5217\u6c42\u89e3\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6b63\u53cd\u8dd1\u4e24\u904d\u5355\u8c03\u961f\u5217\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee5\u4e0a\u5185\u5bb9\u90fd\u4e0d\u96be\u7406\u89e3\uff0c\u8fd9\u9898\u6700\u70e6\u4eba\u7684\u662f\u7ec6\u8282\u3002\u6211\u4e5f\u61d2\u5f97\u5177\u4f53\u8bf4\u4e86\u770b\u4ee3\u7801\u5427\u3002\u633a\u77ed\u7684\uff0c\u5c31\u662f\u4e0d\u592a\u597d\u5199\uff0c\u5f88\u591a\u5730\u65b9\u60f3\u7701\u4f46\u662f\u7701\u4e0d\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define forg(i,x) for(register int i=fir[x];i;i=nxt[i])\n#define uu unsigned\n#define scanf a14=scanf\n#define rint register int\n#define fre(x) freopen(#x\".in\",\"r\",stdin),freopen(#x\".out\",\"w\",stdout)\ntypedef long long ll;\ntypedef uu long long ull;\ntypedef pair<int,int> pii;\nint a14;\ninline int rd(int l,int r){return rand()%(r-l+1)+l;}\n\nconst int mxn=5e5+3;\nint n,m,to[mxn*4],nxt[mxn*4],fir[mxn],gn=1;\nvoid gadd(int x,int y){to[++gn]=y,nxt[gn]=fir[x],fir[x]=gn;}\nint dfn[mxn],low[mxn],dn,stk[mxn],sn,bn;\nvector<int>hd[mxn];\nbool ah[mxn],ro[mxn];\nvoid tar(int x,int f){\n//\u6b64tarjan\u53ea\u5bf9\u672c\u9898\u6709\u6548\n    dfn[x]=low[x]=++dn,stk[++sn]=x;\n    forg(i,x)if(!dfn[to[i]])tar(to[i],x),low[x]=min(low[x],low[to[i]]);\n    else if(to[i]!=f)low[x]=min(low[x],dfn[to[i]]);\n    if(dfn[x]==low[x]){\n        int y;do y=stk[sn--],hd[x].push_back(y),ah[y]=1;while(y!=x);\n        ah[x]=0,ro[x]=hd[x].size()>1;\n        //ro\u73af\u6839 ah\u5728\u73af\u4e0a\u4e14\u4e0d\u662f\u73af\u6839\n    }\n}\nint d1[mxn],d2[mxn],d3[mxn],v1[mxn],da[mxn];\nvoid upd(int x,int v){if(v>d1[x])v1[x]=d1[x],d1[x]=v;else if(v>v1[x])v1[x]=v;}\n//d1\u662f\u6700\u5927\u503c v1\u662f\u6b21\u5927\u503c \u4e3a\u5565\u8981\u8bb0\u4e24\u4e2a\u503c\u5462\u4f60\u81ea\u5df1\u5199\u5199\u5c31\u77e5\u9053\u4e86\n//da\u5411\u4e0b\u6700\u957f\u94fe da=max(d1,d3) d2\u5411\u4e0a\u6700\u957f\u94fe \nvoid dfs1(int x,int f){\n    forg(i,x)if(to[i]!=f&&!ah[to[i]])dfs1(to[i],x),upd(x,1+da[to[i]]);\n    if(ro[x]){\n        int sz=hd[x].size(),y; --sz;\n        for(int i=0;i<sz;++i)y=hd[x][i],dfs1(y,x),d3[x]=max(d3[x],d1[y]+min(sz-i,i+1));\n    }\n    da[x]=max(d1[x],d3[x]);\n}\n\nint vl[mxn*2],q[mxn*2];\nvoid dfs2(int x,int f){\n    if(!ah[x]&&x>1){\n        if(1+da[x]!=da[f])d2[x]=da[f]+1;\n        else d2[x]=max(d3[f],v1[f])+1;\n        d2[x]=max(d2[x],d2[f]+1);\n    }\n    if(ro[x]){\n        int sz=hd[x].size(),y;\n        for(int i=0,y;i<sz;++i)y=hd[x][i],vl[i]=vl[i+sz]=y==x?max(d1[x],d2[x]):d1[y];\n        int qh=1,qt=0,K=sz>>1;\n        for(int i=2*sz-1;~i;--i){\n            if(qh<=qt&&q[qh]-i>K)++qh;\n            if(qh<=qt)y=hd[x][i%sz],d2[y]=max(d2[y],vl[q[qh]]+q[qh]-i);\n            while(qh<=qt&&vl[i]+i>=vl[q[qt]]+q[qt])--qt;\n            q[++qt]=i;\n        }\n        qh=1,qt=0;\n        for(int i=0;i<2*sz;++i){\n            if(qh<=qt&&i-q[qh]>K)++qh;\n            if(qh<=qt)y=hd[x][i%sz],d2[y]=max(d2[y],vl[q[qh]]+i-q[qh]);\n            while(qh<=qt&&vl[i]-i>=vl[q[qt]]-q[qt])--qt;\n            q[++qt]=i;\n        }\n        for(int i=0;i<sz-1;++i)dfs2(hd[x][i],x);\n    }\n    forg(i,x)if(to[i]!=f&&!ah[to[i]])dfs2(to[i],x);\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);for(int i=1,u,v;i<=m;++i)scanf(\"%d%d\",&u,&v),gadd(u,v),gadd(v,u);\n    tar(1,0);\n    dfs1(1,0),dfs2(1,0);\n    for(int i=1;i<=n;++i)printf(\"%d \",max(da[i],d2[i]));puts(\"\");\n    return 0;\n}\n\n```",
        "postTime": 1620385267,
        "uid": 152497,
        "name": "\u7cbe\u795e\u5c0f\u706b",
        "ccfLevel": 0,
        "title": "cf980f"
    }
]