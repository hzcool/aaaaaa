[
    {
        "content": "\u4e00\u4e2a\u60f3\u6cd5\u662f\u4e8c\u5206\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u96f6\u4f4d\u7f6e\uff0c\u4f46\u8fd9\u5e76\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a\u975e\u96f6\u4f4d\u7f6e\u4e0d\u6ee1\u8db3\u53ef\u4e8c\u5206\u6027\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u627e\u5230\u4e00\u4e2a\u975e\u96f6\u7684\u4f4d\u7f6e $p$\uff0c\u901a\u8fc7\u5b83\u7684\u90bb\u57df\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u786e\u5b9a $n$\u3002\u56e0\u6b64\uff0c\u5982\u679c\u95ee\u5230\u4e00\u4e2a\u975e\u96f6\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u51e0\u4e4e\u8ba4\u4e3a\u731c\u4e2d\u4e86 $n$\u3002\n\n\u7b2c $i$ \u6b21\u8be2\u95ee\u5728\u5f53\u524d\u8303\u56f4 $R_i$ \u4e0b\u975e\u96f6\u503c\u6700\u591a\u7684\u4f4d $p_i$\uff0c\u7136\u540e\u5c06\u7b2c $p_i$ \u4f4d\u975e\u96f6\u7684\u6240\u6709\u6570\u4ece\u8303\u56f4\u4e2d\u5220\u53bb\uff0c\u8fdb\u884c\u4e0b\u4e00\u8f6e\u731c\u6d4b\u3002\u6211\u4eec\u53d1\u73b0\u8be2\u95ee $10$ \u540e\u6070\u5269\u4f59\u4e00\u4e2a\u6570\uff0c\u5373 $|R_{11}| = 1$\u3002\u521d\u59cb $R_1 = [1, 5982]$\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u7b2c\u4e00\u6b21\u5f97\u5230\u975e\u96f6\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u53ea\u5269\u4e0b $10 - i$ \u6b21\u8be2\u95ee\u673a\u4f1a\u3002\u4f46\u7531\u4e8e\u5f53 $i$ \u8f83\u5927\u65f6 $R_i$ \u8f83\u5c0f\uff0c\u6240\u4ee5\u4f9d\u7136\u53ef\u4ee5\u786e\u5b9a\u6240\u6709 $n\\in [1, 5982]$\u3002\n\n```cpp\n// LUOGU_RID: 97218557\n#include <bits/stdc++.h>\nusing namespace std;\nconstexpr int N = 5982;\nint n, zero[N + 5];\nvector<int> fc[N + 5], de, rem[15];\nvector<pair<int, int>> info;\nint get(int i, int j) {return j < fc[i].size() ? fc[i][j] : 0;}\nint query(int k) {\n  cout << \"? \" << k << endl;\n  int res;\n  cin >> res;\n  info.push_back({k, res});\n  return res;\n}\nvoid answer(int n) {\n  cout << \"! \" << n << endl;\n  string str; cin >> str;\n}\nvoid solve() {\n  info.clear();\n  for(int i = 1; i <= 10; i++) {\n    int c = de[i - 1], res = query(c);\n    if(res) {\n      for(int j = 1; j <= 10 - i && c + j < 20000; j++) query(c + j);\n      vector<int> arr = rem[i - 1];\n      for(int ans : arr) {\n        bool match = 1;\n        for(auto it : info) match &= get(ans, it.first) == it.second;\n        if(match) return answer(ans);\n      }\n    }\n  }\n  answer(rem[10][0]);\n}\nint main() {\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  fc[0].resize(1), fc[0][0] = 1;\n  for(int i = 1; i <= N; i++) {\n    fc[i] = fc[i - 1];\n    for(int &it : fc[i]) it *= i;\n    for(int j = 0; j + 1 < fc[i].size(); j++)\n      fc[i][j + 1] += fc[i][j] / 10, fc[i][j] %= 10;\n    while(fc[i].back() >= 10) {\n      int v = fc[i].back() / 10;\n      fc[i][fc[i].size() - 1] %= 10;\n      fc[i].push_back(v);\n    }\n    while(!fc[i][zero[i]]) zero[i]++;\n  }\n  for(int i = 1; i <= N; i++) rem[0].push_back(i);\n  for(int _ = 1; _ <= 10; _++) {\n    vector<int> nw, buc(N << 2, 0), dig;\n    for(int c : rem[_ - 1]) for(int i = 0; i < fc[c].size(); i++) buc[i] += fc[c][i] > 0;\n    for(int i = 0; i < N << 2; i++) dig.push_back(i);\n    sort(dig.begin(), dig.end(), [&](int u, int v) {return buc[u] > buc[v];});\n    int pick = dig[0];\n    de.push_back(pick);\n    for(int c : rem[_ - 1]) if(!get(c, pick)) rem[_].push_back(c);\n  }\n  int T;\n  cin >> T;\n  while(T--) solve();\n  cerr << 1e3 * clock() / CLOCKS_PER_SEC << \" ms\\n\";\n  return 0;\n}\n/*\ng++ I.cpp -o I -std=c++14 -O2 -DALEX_WEI\n*/\n```",
        "postTime": 1670904921,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1773I Interactive Factorial Guessing"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u6709\u4e00\u4e2a\u6570 $n\\in[1,5982]$\uff0c\u4f60\u53ef\u4ee5\u8be2\u95ee $n!$ \u7684\u7b2c $x$ \u4f4d $10$ \u6b21\uff0c\u731c\u51fa\u8fd9\u4e2a $n$\u3002\n\n\u5148\u9884\u5904\u7406\u51fa $1\\sim5982$ \u7684\u6240\u6709\u9636\u4e58\u3002\n\n\u8003\u8651\u7b2c\u4e00\u6b21\u8981\u95ee\u54ea\u4e00\u4f4d\u3002\u6211\u4eec\u60f3\u8ba9\u5f53\u524d\u53ef\u884c\u89e3\u7684\u96c6\u5408\u5927\u5c0f\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u8d8a\u5c0f\u8d8a\u597d\uff0c\u90a3\u4e48\u53ef\u4ee5\u626b\u63cf\u6bcf\u4e00\u4f4d\uff0c\u7edf\u8ba1\u51fa\u6bcf\u4e00\u4f4d\u6570\u5b57\u51fa\u73b0\u7684\u4e2a\u6570 $cnt$\uff0c\u53d6 $\\max(cnt)$ \u6700\u5c0f\u7684\u5373\u53ef\u3002\u8fd9\u6837\u6839\u636e\u56de\u7b54\u7684\u4e0d\u540c\uff0c\u53ef\u4ee5\u5c06\u89e3\u96c6\u5927\u5c0f\u5feb\u901f\u51cf\u5c11\uff0c\u800c\u540e\u53ef\u4ee5\u9012\u5f52\u53bb\u505a\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u6784\u5efa\u51fa\u4e00\u9897\u51b3\u7b56\u6811\uff0c\u53d1\u73b0\u6811\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7 $10$\uff0c\u4e8e\u662f\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u76f4\u63a5\u66b4\u529b\u505a\u5bb9\u6613 T\uff0c\u53ef\u4ee5\u53ea\u5efa\u51fa\u9700\u8981\u7528\u5230\u7684\u51b3\u7b56\u6811\u5e76\u628a\u6839\u8282\u70b9\u7684\u51b3\u7b56\u6253\u8868\u3002\n\n\u8fd8\u6709\u8fd9\u9898\u4e0b\u6807\u4ece $0$ \u5f00\u59cb\u7684\uff0c~~\u6211\u6ca1\u770b\u5230\u559c\u63d0\u4e24\u53d1\u7f5a\u65f6~~\u3002\n\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nbigint a[6009];\nvector < int > nw, tmp;\nint pos, minn, maxn, cnt[10], res; ll cur; unordered_map < ll, int > mem;\ninline void init() { mem[0] = 1518, a[0][1] = 1; For(i, 1, 5982) a[i] = a[i - 1] * i; }\ninline void work()\n{\n\tnw.clear(), cur = 0;\n\tFor(i, 1, 10) // \u5728\u51b3\u7b56\u6811\u4e0a\u8dd1\n\t{\n\t\tif ( i == 1 ) For(j, 1, 5982) nw.push_back(j);\n\t\tif ( mem.count(cur) ) pos = mem[cur]; // \u5df2\u7ecf\u5efa\u8fc7\u51b3\u7b56\u6811\n\t\telse\n\t\t{\n\t\t\tminn = INT_MAX;\n\t\t\tFor(p, 1, 20000) // \u627e\u5230 max(cnt) \u6700\u5c0f\u7684\u4e00\u4f4d\n\t\t\t{\n\t\t\t\tmaxn = 0, memset(cnt, 0, sizeof(cnt));\n\t\t\t\tfor ( int j : nw ) cnt[a[j][p]]++;\n\t\t\t\tFor(j, 0, 9) maxn = max(maxn, cnt[j]);\n\t\t\t\tif ( maxn < minn ) minn = maxn, pos = p;\n\t\t\t}\n\t\t\tmem[cur] = pos;\n\t\t}\n\t\tprintf(\"? %d\\n\", pos - 1), fflush(stdout), read(res);\n\t\ttmp = move(nw), cur = cur * 11 + res + 1;\n\t\tfor ( int j : tmp ) if ( a[j][pos] == res ) nw.push_back(j); // \u66f4\u65b0\u89e3\u96c6\n\t}\n\tchar qwq[9]; printf(\"! %d\\n\", nw[0]), fflush(stdout), scanf(\"%s\", qwq);\n}\nint main() { int t; init(), read(t); For(tt, 1, t) work(); return 0; }\n```",
        "postTime": 1670458289,
        "uid": 127949,
        "name": "cmk666",
        "ccfLevel": 7,
        "title": "CF1773I \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230 $n$ \u4e0d\u5927\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u975e\u5e38\u66b4\u529b\u7684\u601d\u8def\uff0c\u5148\u628a\u6240\u6709\u9636\u4e58\u7528\u9ad8\u7cbe\u5ea6\u7b97\u51fa\u6765\uff0c\u7cbe\u7ec6\u5b9e\u73b0\u7684\u8bdd\u53ea\u9700\u8981\u51e0\u6beb\u79d2\u3002\n\n\u7136\u540e\u679a\u4e3e\u4e00\u4e2a\u4f4d\u7f6e\u95ee\u4ed6\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u96c6\u5408\u5206\u6210 $10$ \u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u53d6\u6700\u5927\u7684\u90e8\u5206\u6700\u5c0f\u7684\u90a3\u4e2a\u4f4d\u7f6e\u95ee\uff0c\u5c31\u7c7b\u4f3c\u70b9\u5206\u6cbb\uff0c\u9012\u5f52\u4e0b\u53bb\u5efa\u6811\u5373\u53ef\u3002\n\n\u6211\u4eec\u5b9e\u64cd\u53d1\u73b0\u8fd9\u6837\u6df1\u5ea6\u6700\u5927\u521a\u597d\u662f $10$\u3002\u8003\u573a\u6211\u7c97\u7565\u5b9e\u73b0\u4e00\u4e0b\uff0c\u521a\u597d\u5361\u65f6\u9650\u8fc7\u53bb\u4e86\u3002\n\n\u8003\u5b8c\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u53d1\u73b0\u8fd9\u4e2a\u4f4d\u7f6e\u5728\u540e $2000$ \u4f4d\u91cc\u9762\u9009\u53d6\u5373\u53ef\uff0c\u8fd9\u4e0b\u65f6\u9650\u5c31\u5f88\u5145\u88d5\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define vi vector<int>\nusing namespace std;\nvi operator * (vi a, int b)\n{\n\tvi c;\n\tc.resize(a.size() + 5);\n\tfor (int i = 0; i < (int)c.size(); i++) c[i] = 0;\n\tfor (int i = 0; i < (int)a.size(); i++) c[i] = a[i] * b;\n\tfor (int i = 0; i < (int)c.size() - 1; i++)\n\t{\n\t\tc[i + 1] += c[i] / 100000;\n\t\tc[i] %= 100000;\n\t}\n\twhile ((int)c.size() > 1 && c.back() == 0) c.pop_back();\n\treturn c;\n}\nint N = 5982, rt;\nvi fac[6000], temp[6000];\nint vec[20005][10], tot, id[20005];\nbool mark[20005];\nint solve(vi &now)\n{\n\tint tmp = ++tot;\n\tif (now.size() == 1)\n\t{\n\t\tmark[tot] = 1;\n\t\tid[tot] = now[0];\n\t\treturn tot;\n\t}\n\tint cnt[10], pos = -1, mn = 0x3f3f3f3f;\n\tfor (int i = 0; i < min((int)fac[now.back()].size(), 2000); i++)\n\t{\n\t\tfor (int j = 0; j < 10; j++) cnt[j] = 0;\n\t\tfor (int j = 0; j < now.size(); j++) cnt[((int)fac[now[j]].size() > i) ? fac[now[j]][i] : 0]++;\n\t\tint mx = 0;\n\t\tfor (int j = 0; j < 10; j++) mx = max(mx, cnt[j]);\n\t\tif (mx < mn) pos = i, mn = mx;\n\t}\n\tvi nxt[10];\n\tfor (int i = 0; i < 10; i++) nxt[i].clear();\n\tfor (int i = 0; i < now.size(); i++) nxt[((int)fac[now[i]].size() > pos) ? fac[now[i]][pos] : 0].push_back(now[i]);\n\tfor (int i = 0; i < 10; i++) if (nxt[i].size()) vec[tmp][i] = solve(nxt[i]);\n\tid[tmp] = pos;\n\treturn tmp;\n}\nvoid init()\n{\n\ttemp[1].resize(1); temp[1][0] = 1;\n\tfor (int i = 2; i <= N; i++) temp[i] = temp[i - 1] * i;\n\tfor (int i = 1; i <= N; i++)\n\t{\n\t\tfor (int j = 0; j < temp[i].size(); j++)\n\t\t{\n\t\t\tint x = temp[i][j], zz = 0;\n\t\t\twhile (x || (j != temp[i].size() - 1 && zz < 5))\n\t\t\t{\n\t\t\t\tfac[i].push_back(x % 10);\n\t\t\t\tx /= 10;\n\t\t\t\tzz++;\n\t\t\t}\n\t\t}\n\t}\n\tvi now;\n\tnow.resize(N);\n\tfor (int i = 1; i <= N; i++) now[i - 1] = i;\n\trt = solve(now);\n}\nchar s[10];\nvoid MAIN()\n{\n\tint p = rt;\n\tfor (int i = 1, x; i <= 10; i++)\n\t{\n\t\tprintf(\"? %d\\n\", id[p]);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &x);\n\t\tp = vec[p][x];\n\t\tif (mark[p]) break;\n\t}\n\tprintf(\"! %d\\n\", id[p]);\n\tfflush(stdout);\n\tscanf(\"%s\", s + 1);\n}\nint main()\n{\n\tinit();\n\tint T; scanf(\"%d\", &T);\n\twhile (T--) MAIN();\n\treturn 0;\n}\n```",
        "postTime": 1671181172,
        "uid": 328405,
        "name": "Gemini7X",
        "ccfLevel": 9,
        "title": "CF1773I Interactive Factorial Guessing"
    }
]