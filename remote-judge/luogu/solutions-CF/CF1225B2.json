[
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u8fde\u7eed\u7684\u957f\u5ea6\u4e3a $d$ \u7684\u6bb5\u5305\u542b\u4e86\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u76f4\u63a5\u7edf\u8ba1\u7684\u590d\u6742\u5ea6\u662f $O(nd)$ \u7684\u3002\u5f88\u660e\u663e\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u8003\u8651\u8fdb\u884c\u4f18\u5316\u3002\u6211\u4eec\u7528 $cnt[i]$ \u8868\u793a\u5143\u7d20 $i$ \u5728\u5f53\u524d\u533a\u95f4\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c$sum$ \u8868\u793a\u5f53\u524d\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002\n\n\u5728\u52a0\u5165\u4e00\u4e2a\u5143\u7d20 $i$ \u7684\u65f6\u5019\uff0c\u5c06 $cnt[i]$ \u8d4b\u503c\u4e3a $cnt[i]+1$\u3002\u5982\u679c\u5728\u64cd\u4f5c\u524d $cnt[i]=0$\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u5143\u7d20\u4ece\u672a\u51fa\u73b0\u8fc7\uff0c$sum$ \u9700\u8981 $+1$\u3002\n\n\u5728\u5220\u9664\u4e00\u4e2a\u5143\u7d20 $i$ \u7684\u65f6\u5019\uff0c\u5c06 $cnt[i]$ \u8d4b\u503c\u4e3a $cnt[i]-1$\u3002\u5982\u679c\u5728\u64cd\u4f5c\u540e $cnt[i]=0$\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u5143\u7d20\u5df2\u7ecf\u88ab\u5168\u90e8\u5220\u9664\uff0c$sum$ \u9700\u8981 $-1$\u3002\n\n\u4e8e\u662f\u5c31\u53d8\u5f97\u5f88\u7b80\u5355\u4e86\u3002\u9996\u5148\u5904\u7406\u51fa\u533a\u95f4 $[1,d]$ \u7684\u503c\u3002\u5bf9\u4e8e\u540e\u9762\u7684\u533a\u95f4 $[i,i+d-1](2\\leq i \\leq n-d+1)$\uff0c\u5220\u9664 $a[i-1]$\uff0c\u52a0\u5165 $a[i+d-1]$ \u5373\u53ef\u3002\u6ce8\u610f\u4e00\u5b9a\u8981\u5148\u5220\u9664\u540e\u52a0\u5165\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48...\u53ef\u4ee5\u53bb\u770b\u770b\u6837\u4f8b\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8bf4\u660e\u3002\n\n```cpp\n# include <bits/stdc++.h>\n# define rr register\nconst int N=200010,M=1000010;\nint a[N];\nint n,k,d;\nint sum[M],cnt;\nint T;\nint ans;\ninline void add(int x){\n\tif(!sum[a[x]])\n\t\t++cnt;\n\t++sum[a[x]];\t\n\treturn;\n}\ninline void del(int x){\n\t--sum[a[x]];\n\tif(!sum[a[x]])\n\t\t--cnt;\n\treturn;\t\n}\nint main(void){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tmemset(sum,0,sizeof(sum));\n\t\tcnt=0;\n\t\tscanf(\"%d%d%d\",&n,&k,&d);\n\t\tfor(rr int i=1;i<=n;++i){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tfor(rr int i=1;i<=d;++i)\n\t\t\tadd(i);\n\t\tans=cnt;\n\t\tfor(rr int i=d+1;i<=n;++i){\n\t\t\tdel(i-d);\n\t\t\tadd(i);\t\t\n\t\t\tans=std::min(ans,cnt);\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1572148829,
        "uid": 108949,
        "name": "Meatherm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1225B2 \u3010TV Subscriptions (Hard Version)\u3011"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n\u6ed1\u52a8\u7a97\u53e3\u9898\u76ee\u7684\u6570\u636e\u52a0\u5f3a\u7248\uff08\u5bf9\u6bd4$Easy\\,\\,\\, Version$\uff09\n\n\u5176\u5b9e\u6700\u521d\u8ba4\u8bc6\u6ed1\u52a8\u7a97\u53e3\u8fd9\u79cd\u9898\u7684\u65f6\u5019\u662f\u5b66\u5355\u8c03\u961f\u5217\u7684\u65f6\u5019\u3002\u4f46\u662f\u663e\u7136\u8fd9\u9053\u9898\u4e0d\u80fd\u7528\u6570\u636e\u7ed3\u6784\u6765\u505a\u3002\u90a3\u4e48\u6211\u4eec\u56de\u5f52\u6ed1\u52a8\u7a97\u53e3\u7684\u672c\u8d28\u6765\u5c1d\u8bd5\u7740\u505a\u8fd9\u9053\u9898\u3002\n\n\u6ed1\u52a8\u7a97\u53e3\u7684\u672c\u8d28\u662f\u5565\uff1f~~\u6ed1\u52a8\u554a\uff01~~\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u6a21\u62df\uff1a\u5148\u624b\u52a8\u8dd1\u7b2c\u4e00\u4e2a\u7ebf\u6bb5\uff08\u521d\u59cb\u7a97\u53e3\uff09\uff0c\u7edf\u8ba1\u989c\u8272\u51fa\u73b0\u7684\u6b21\u6570\uff08\u5b58\u5230$cnt[i]$\u6570\u7ec4\uff0c\u6ce8\u610f\u8fd9\u4e2a\u6570\u7ec4\u4e00\u5b9a\u8981\u5f00\u6210$10^6$.\u5982\u679c\u8fd9\u4e2a\u989c\u8272\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff08\u5373$cnt[i]=0$\uff09\uff0c\u90a3\u4e48\u5c31\u628a\u989c\u8272\u6570\uff08$sum$\u53d8\u91cf\uff09++\uff09\n\n\u7136\u540e\u5f00\u6ed1\u3002\u6bcf\u5230\u4e00\u4e2a\u65b0\u5143\u7d20\uff0c\u5148\u5220\u9664\u6ed1\u52a8\u4e4b\u524d\u6700\u53e4\u8001\u7684\u90a3\u4e2a\u5143\u7d20\u3002\u7136\u540e\u518d\u628a\u6700\u65b0\u7684\u5143\u7d20\u52a0\u8fdb\u6765\uff0c\u7136\u540e\u770b\u4e00\u770b\u8fd9\u4e2a$cnt[i]$\u662f\u5426\u9700\u8981\u628a$sum$\u4e5f\u968f\u7740\u6539\u52a8\u3002\u7136\u540e\u5c31\u53ef\u4ee5AC\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=2*1e5+10;\nconst int maxk=1e6+10;\nint n,k,d;\nint a[maxn];\nint cnt[maxk],sum,ans;\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        memset(cnt,0,sizeof(cnt));\n        sum=0;\n        scanf(\"%d%d%d\",&n,&k,&d);\n        for(int i=1;i<=n;i++)\n            scanf(\"%d\",&a[i]);\n        for(int i=1;i<=d;i++)\n        {\n            if(!cnt[a[i]])\n                sum++;\n            cnt[a[i]]++;\n        }\n        ans=sum;\n        for(int i=d+1;i<=n;i++)\n        {\n            cnt[a[i-d]]--;\n            if(!cnt[a[i-d]])\n                sum--;\n            if(!cnt[a[i]])\n                sum++;\n            cnt[a[i]]++;\n            ans=min(ans,sum);\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1572243378,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225B2 \u3010TV Subscriptions (Hard Version)\u3011"
    },
    {
        "content": "\u601d\u8def\u5f88\u7b80\u5355\uff1a\n\n\u7c7b\u4f3c\u6ed1\u52a8\u7a97\u53e3\uff0c$O(n)$\u626b\u63cf\u7684\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6876\u548c\u4e00\u4e2a\u961f\u5217\n\u5f53\u961f\u5217\u957f\u5ea6\u8d85\u8fc7d\u7684\u65f6\u5019\u5f39\u961f\u5934\uff0c\u6ee1\u8db3\u6761\u4ef6\u65f6\u66f4\u65b0\u7b54\u6848\u5c31\u597d\u4e86\n\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\n```cpp\n//Code by : Y-k-y\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <vector>\n#include <set>\n#include <map>\n#define ll long long\nconst int N=1000010;\nusing namespace std;\ninline int rnd(){\n\tint res=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){res=res*10+ch-'0';ch=getchar();}\n\treturn res*f;\n}\ninline void wr(int x){\n\tif(x<0){putchar('-');x=-x;}if(x>9) wr(x/10);putchar(x%10+'0');\n}\nint n,k,d,T,ans;\nint a[N],t[N],q[N];\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\tn=rnd();k=rnd();d=rnd();\n\t\tmemset(t,0,sizeof(t));\n\t\tfor(int i=1;i<=n;i++)a[i]=rnd();\n\t\tans=1e9;\n\t\tint head=1,tail=0,sum=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tt[a[i]]++;\n\t\t\tq[++tail]=i;\n\t\t\tif(t[a[i]]==1)sum++;\n\t\t\twhile(head<=tail&&i-q[head]>=d){\n\t\t\t\tt[a[q[head]]]--;if(t[a[q[head]]]==0)sum--;head++;\n\t\t\t}\n\t\t\tif(i-q[head]+1>=d)ans=min(ans,sum);\n\t\t}\n\t\twr(ans);puts(\"\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1572148859,
        "uid": 71844,
        "name": "\u6768\u94e0\u8fdc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225B2 \u3010TV Subscriptions (Hard Version)\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u5143\u7d20\u7684\u5e8f\u5217 $a$\uff0c\u53e6\u5916\u8fd8\u7ed9\u5b9a $k, d$\uff0c\u5176\u4e2d $a_i \\leq k$\uff0c\u73b0\u5728\u8981\u6c42\u7684\u662f\u6240\u6709 $[l, l + d - 1]$ \u533a\u95f4\u4e2d\u51fa\u73b0\u7684\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\u6700\u5c0f\u662f\u591a\u5c11\uff0c\u5176\u4e2d $l \\geq 1, l + d - 1 \\leq n$\u3002\n\n## \u89e3\u6cd5\n\n~~\u9996\u5148\u5e0c\u671b\u5ba1\u6838\u8be5\u9898\u89e3\u7684\u7ba1\u7406\u5458\u7ed9\u8fd9\u9053\u9898\u8bc4\u4e2a\u96be\u5ea6\u3002~~\n\n\u6211\u63d0\u4f9b\u4e00\u4e2a\u672c\u9898\u6700\u5dee\u89e3\u6cd5\uff0c\u9650\u65f6 $2s$\uff0c\u8fd9\u4efd\u9898\u89e3\u6700\u574f\u7684\u6570\u636e\u70b9\u8dd1\u4e86 $1.138ms$\uff0c\u8fd8\u5f00\u4e86\u90e8\u5206\u7684\u6307\u4ee4\u96c6\uff0c\u4e0d\u8fc7\u7528\u8fd9\u4efd\u4ee3\u7801\u4ea4\u5230\u672c\u9898\u7684[\u5f31\u5316\u7248](https://www.luogu.com.cn/problem/CF1225B1)\u4e0a\u5374\u8dd1\u5f97\u5f88\u5feb\uff0c\u6700\u574f\u7684\u70b9\u53ea\u8dd1\u4e86 $15ms$\uff0c\u5728\u6d1b\u8c37\u8f7b\u677e Rank1\u3002\n\n\u8fd9\u4efd\u9898\u89e3\u7528\u7684\u662f\u83ab\u961f\uff0c\u56e0\u4e3a\u8003\u8651\u8981\u6c42\u7684\u662f\u533a\u95f4\u4e2d\u51fa\u73b0\u7684\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\uff0c\u662f\u83ab\u961f\u7ecf\u5178\u5199\u6cd5\u3002\n\n\u4f46\u662f\u666e\u901a\u83ab\u961f\u52a0\u4e0a\u90e8\u5206\u6307\u4ee4\u96c6\u548c\u5feb\u8bfb\u867d\u7136\u80fd\u8fc7\uff0c\u4f46\u662f\u65f6\u95f4\u5f88\u79bb\u8c31\uff0c\u82b1\u4e86 $1809ms$\n\uff0c\u5e76\u4e14\u53ea\u80fd\u7528 GNU C++14 \u624d\u80fd\u8fc7\uff0cGNU C++17 (64) \u8fc7\u4e0d\u53bb\u3002\n\n\u6211\u4eec\u77e5\u9053\u83ab\u961f\u6709\u4e00\u4e2a\u5730\u65b9\u53ef\u4ee5\u4f18\u5316\uff0c\u90a3\u5c31\u662f\u6392\u5e8f\u3002\u4f46\u6211\u6307\u7684\u4f18\u5316\u5e76\u4e0d\u662f\u5947\u5076\u6392\u5e8f\uff0c\u800c\u662f\u6839\u672c\u4e0d\u7528\u6392\u5e8f\u3002\n\n\u660e\u663e\u6211\u4eec\u7684\u6392\u5e8f\u662f\u6309 $l$ \u5206\u5757\uff0c$r$ \u9012\u589e\u7684\u6392\u5e8f\u3002\u4f46\u662f\u8fd9\u9053\u9898\u4e2d\u663e\u7136 $l, r$ \u4e00\u5f00\u59cb\u90fd\u662f\u9012\u589e\u7684\uff0c\u6839\u672c\u4e0d\u7528\u6392\u5e8f\uff0c\u8fd9\u6837\u5373\u53ef\u8fc7\u6b64\u9898\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(\"-Ofast\")\n#pragma GCC target(\"avx,sse,sse2,sse3,sse4\")\n#pragma unroll 10\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\nconst int N = 1e6 + 5;\n\nint t, n, k, d, cnt[N], a[N], tcnt = 0, len, res = 0;\n\ninline int read()\n{\n\tregister char ch = getchar();\n\tregister int x = 0;\n\twhile (ch < '0' || ch > '9') ch = getchar();\n\twhile (ch >= '0' and ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn x;\n}\n\nstruct Node\n{\n\tint l, r;\n\tbool operator<(const Node& g) const\n\t{\n\t\tint i = l / len, j = g.l / len;\n\t\treturn (i ^ j ? i < j : i & 1 ? r < g.r : r > g.r);\n\t}\n}q[N];\n\nvoid add(int x)\n{\n\tif (++cnt[a[x]] == 1) ++res;\n}\n\nvoid del(int x)\n{\n\tif (--cnt[a[x]] == 0) --res;\n}\n\nint main()\n{\n\tt = read();\n\tfor (int i = 1; i <= t; i++)\n\t{\n\t\tres = 0;\n\t\ttcnt = 0;\n\t\tn = read(), k = read(), d = read();\n\t\tlen = sqrt(n);\n\t\tmemset(cnt, 0, sizeof(cnt));\n\t\tfor (int j = 1; j <= n; j++) a[j] = read();\n\t\tfor (int j = 1; j + d - 1 <= n; j++)\n\t\t{\n\t\t\t++tcnt;\n\t\t\tq[tcnt].l = j;\n\t\t\tq[tcnt].r = j + d - 1;\n\t\t}\n\t\t//sort(q + 1, q + tcnt + 1);\n\t\tint nl(1), nr(0), ans = 1e9;\n\t\tfor (int j = 1; j <= tcnt; j++)\n\t\t{\n\t\t\tint l(q[j].l), r(q[j].r);\n\t\t\twhile (nl < l) del(nl++);\n\t\t\twhile (nl > l) add(--nl);\n\t\t\twhile (nr < r) add(++nr);\n\t\t\twhile (nr > r) del(nr--);\n\t\t\tans = min(ans, res);\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1646304873,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF1225B2 TV Subscriptions (Hard Version)"
    },
    {
        "content": "\u9898\u610f\u7b80\u8ff0:\n\n\u7ed9\u5b9a\u4e00\u6bb5\u5e8f\u5217, \u5728\u5176\u4e2d\u53d6\u51fa\u4e00\u6bb5\u8fde\u7eed\u7684, \u4e14\u957f\u5ea6\u4e3a $d$ \u7684\u4e00\u6bb5, \u4f7f\u5176\u5305\u542b\u7684\u4e0d\u540c\u6570\u5b57\u4e2a\u6570\u6700\u5c0f\n\n\u5176\u4e2d $n \\leq 2 \\times 10^5$\n\n-----\n\n\u7b2c\u4e00\u773c\u770b\u53bb\u60f3\u8d77\u6765\u4e86 [HH \u7684\u9879\u94fe](https://www.luogu.org/problem/P1972), \u4ece $1$ \u5f00\u59cb\u7edf\u8ba1 $[i,\\ i+d-1]$ \u5185\u4e0d\u540c\u6570\u5b57\u4e2a\u6570\u5c31\u597d\u4e86, \u8fd9\u91cc\u6211\u4f7f\u7528\u4e86\u6811\u72b6\u6570\u7ec4\u7684\u89e3\u6cd5, \u65f6\u95f4\u590d\u6742\u5ea6 $O(T \\cdot n \\log n)$.\n\n\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9, \u6709\u8fd9\u9898\u591a\u7ec4\u6570\u636e\u4e14\u6570\u636e\u7ec4\u6570 $T \\leq 2 \\times 10^5$, \u6e05\u7a7a\u7684\u65f6\u5019\u9700\u8981\u6709\u70b9\u6280\u5de7, \u4e0d\u80fd\u65e0\u8111 ``memset`` \u4e0a\u53bb, CF \u8ba8\u8bba\u8d34\u91cc\u5c31\u6709\u4eba\u56e0\u4e3a\u8fd9\u4e2a TLE \u4e86 = =\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u6709 $O(Tn)$ \u7684\u505a\u6cd5, \u8bb0 ``cnt[i]`` \u8868\u793a\u5f53\u524d\u533a\u95f4\u5185\u6570\u5b57 ``i`` \u51fa\u73b0\u6b21\u6570, \u7528\u7c7b\u4f3c\u83ab\u961f\u7684\u7ef4\u62a4\u65b9\u6cd5\u7ef4\u62a4\u5c31\u597d\u4e86.\n\n-----\n\n\u6811\u72b6\u6570\u7ec4\u5199\u6cd5\u4ee3\u7801\n\n```cpp\n// CF B\n// DeP\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n \nnamespace IO {\n    const int MAXSIZE = 1 << 18 | 1;\n    char buf[MAXSIZE], *p1, *p2;\n \n    inline int Gc() { return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, MAXSIZE, stdin), p1 == p2)? EOF: *p1++; }\n    template<class T> void read(T& x) {\n        x = 0; int f = 0, ch = Gc();\n        while (!isdigit(ch)) f |= ch == '-', ch = Gc();\n        while (isdigit(ch)) x = x * 10 + ch - '0', ch = Gc();\n        if (f) x = -x;\n    }\n}\nusing IO::read;\n \nconst int MAXN = 2e5+5, MAXK = 1e6+5;\n\nint n, k, d;\nint A[MAXN], numPos[MAXK];\n \nnamespace BIT {\n    int C[MAXN];\n \n    inline int lowbit(int x) { return x & -x; }\n \n    void add(int pos, int val) {\n        for (int i = pos; i <= n; i += lowbit(i)) C[i] += val;\n    }\n \n    int sum(int pos) {\n        int ret = 0;\n        for (int i = pos; i; i -= lowbit(i)) ret += C[i];\n        return ret;\n    }\n}\n \nint main() {\n    int T; read(T);\n    while (T--) {\n        // input\n        read(n); read(k); read(d);\n        for (int i = 1; i <= n; ++i) read(A[i]);\n        // init\n        memset(numPos, 0, sizeof numPos);\n        // \u8fd9\u91cc\u6ca1\u6709 TLE \u5c31\u662f\u4e2a\u5947\u8ff9...\n        for (int i = 1; i <= n; ++i) {\n            int res = BIT::sum(i);\n            if (res) BIT::add(i, -res);\n        }\n        // solve\n        int ans = k, ptr = 1;\n        for (int i = 1; i+d-1 <= n; ++i) {\n            int L = i, R = i+d-1;\n            for (int j = ptr; j <= R; ++j) {\n                if (numPos[A[j]] != 0) BIT::add(numPos[A[j]], -1);\n                BIT::add(j, 1);\n                numPos[A[j]] = j;\n            }\n            ptr = R + 1;\n            ans = min(ans, BIT::sum(R) - BIT::sum(L-1));\n        }\n        // output\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1572155468,
        "uid": 109751,
        "name": "DepletedPrism",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225B2 \u3010TV Subscriptions (Hard Version)\u3011"
    },
    {
        "content": "\u533a\u95f4\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5f00\u4e00\u4e2a\u6876\uff0c\u7ef4\u62a4\u4e00\u4e0b\u5728\u67d0\u6bb5\u533a\u95f4\u5185\u6709\u90a3\u4e9b\u5143\u7d20\u3002\n\n\u8003\u8651\u4ece\u4e00\u4e2a\u533a\u95f4\u6ed1\u52a8\u5230\u53e6\u4e00\u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u533a\u95f4\u5185\u5143\u7d20\u4e2a\u6570\u662f\u53ef\u4ee5 O(1) \u7ef4\u62a4\u7684\uff0c\u7136\u540e\u5c31\u6ca1\u4ec0\u4e48\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\n\nconst int CN = 1e6+6;\nconst int INF = 0x3f3f3f3f;\n\nint read(){\n    int s=0,ne=1; char c=getchar();\n    for(;c<'0'||c>'9';c=getchar()) if(c=='-') ne=-1;\n    for(;c>='0'&&c<='9';c=getchar()) s=(s<<1)+(s<<3)+c-'0';\n    return s*ne;\n}\n\nint t,n,k,d,a[CN];\nint tot[CN];\n\nint main()\n{\n    t = read();\n    while(t--){\n        memset(tot,0,sizeof(tot));\n        \n        n = read(); k = read(); d = read();\n        for(int i=1;i<=n;i++) a[i] = read();\n        \n        int ans = INF,cnt = 0;\n        for(int i=1;i<d;i++) {if(!tot[ a[i] ]) cnt++; tot[ a[i] ]++;}\n        for(int i=d;i<=n;i++){\n            if(!tot[ a[i] ]) cnt++; tot[ a[i] ]++;\n            tot[ a[i-d] ]--; if(!tot[ a[i-d] ]) cnt--;\n            ans = min(ans, cnt); \n        }\n        \n        printf(\"%d\\n\",ans);\n    }\n    \n    return 0;\n}\n```",
        "postTime": 1572140472,
        "uid": 70177,
        "name": "big_news",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1225B2 \u3010TV Subscriptions (Hard Version)\u3011"
    }
]