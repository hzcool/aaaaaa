[
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u9898\n\n---\n\n\u9898\u610f\u662f\u6c42\u5305\u542b\u7ed9\u5b9a\u4e09\u70b9\u7684\u6b63\u591a\u8fb9\u5f62\u6700\u5c0f\u9762\u79ef\u3002\n\n\n\u5982\u679c\u8981\u6c42\u6b63\u591a\u8fb9\u5f62\u9762\u79ef\u6700\u5c0f\uff0c\u660e\u663e\u6b63\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u90fd\u5728\u7ed9\u5b9a\u4e09\u70b9\u6784\u6210\u7684\u4e09\u89d2\u5f62\u5916\u63a5\u5706\u4e0a\uff0c\u5982\u56fe\n\n\n\n![13722](https://cdn.luogu.com.cn/upload/pic/13722.png)\n\n\u5df2\u77e5\u7684\u662f\u4e09\u89d2\u5f62\u4e09\u70b9\u5750\u6807\uff0c\u501f\u6b64\u53ef\u4ee5\u6c42\u51fa\u4e09\u89d2\u5f62\u4e09\u8fb9\u957f\uff0c\u7ed3\u5408\u6d77\u4f26\u516c\u5f0f$S_{\\Delta ABC}=\\sqrt{p(p-a)(p-b)(p-c)}\\ (p=\\frac{a+b+c}{2})$\u53ef\u4ee5\u6c42\u5f97\u4e09\u89d2\u5f62\u9762\u79ef\u3002\n\n\n\u53ef\u4ee5\u8bc1\u660e$S_{\\Delta ABC}=\\frac{ah_{a}}{2}=\\frac{ab\\sin C}{2}$\uff0c\u7ed3\u5408\u6b63\u5f26\u5b9a\u7406$\\frac{a}{\\sin A}=\\frac{b}{\\sin B}=\\frac{c}{\\sin C}=2R$\u5373\u53ef\u5f97\u51fa\u4e09\u89d2\u5f62\u5916\u63a5\u5706\u534a\u5f84$R=\\frac{abc}{4S_{\\Delta ABC}}$\u3002\n\n\n\u6839\u636e\u4f59\u5f26\u5b9a\u7406\u5206\u522b\u6c42\u51fa\u4e09\u89d2\u5f62\u4e09\u8fb9\u4f5c\u4e3a\u5f26\u6240\u5bf9\u7684\u5706\u5fc3\u89d2\u7684\u4e09\u89d2\u51fd\u6570\u503c\uff0c\u4f7f\u7528\u53cd\u4e09\u89d2\u51fd\u6570\u6c42\u51fa\u5706\u5fc3\u89d2\u7684\u5ea6\u6570\uff0c\u7531\u4e8e\u5706\u5fc3\u89d2\u7684\u5ea6\u6570\u7686\u4e3a\u6b63\u591a\u8fb9\u5f62\u4e2d\u5fc3\u89d2\u5ea6\u6570\u7684\u500d\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u6c42\u5706\u5fc3\u89d2\u5ea6\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u6c42\u51fa\u6b63\u591a\u8fb9\u5f62\u7684\u4e2d\u5fc3\u89d2\u5ea6\u6570$t$\uff0c\u5df2\u77e5\u7ec4\u6210\u6b63\u591a\u8fb9\u5f62\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u4e3a$S_{\\Delta}=\\frac{R^{2}\\sin t}{2}$\uff0c\u800c\u8fd9\u6837\u7684\u4e09\u89d2\u5f62\u6709$\\frac{2\\pi}{t}$\u4e2a\uff0c\u4e8e\u662f\u6b63\u591a\u8fb9\u5f62\u9762\u79ef\u4e3a$\\frac{\\pi R^{2}\\sin t}{t}$\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cmath>\nconst double Pi=acos(-1.0);        //\u03c0\u7684\u503c\nconst double EPS=1E-2;            //\u63a7\u5236\u7cbe\u5ea6\nstruct Point {\n    double x,y;\n}P[3];\ndouble len[3],a[3];        //len\u4e3a\u8fb9\u957f\uff0ca\u4e3a\u5706\u5fc3\u89d2\u89d2\u5ea6\u3002\ndouble Get(int i,int j) {    //\u6c42\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\n    return sqrt((P[i].x-P[j].x)*(P[i].x-P[j].x)+(P[i].y-P[j].y)*(P[i].y-P[j].y));\n}\ndouble gcd(double a,double b) {    //double\u7c7b\u578b\u7684\u6700\u5927\u516c\u7ea6\u6570\n    if(fabs(b)<EPS)\n        return a;\n    if(fabs(a)<EPS)\n        return b;\n    return gcd(b,fmod(a,b));    //fmod(a,b), double\u7c7b\u578b\u7684\u53d6\u6a21\n}\nint main() {\n    double t=0.0,A,r;\n    for(int i=0;i<3;++i)\n        scanf(\"%lf%lf\",&P[i].x,&P[i].y);\n    for(int i=0;i<3;t+=len[i],++i)\n        len[i]=Get(i,(i+1)%3);\n    t/=2;\n    A=sqrt(t*(t-len[0])*(t-len[1])*(t-len[2]));    //\u6c42\u4e09\u89d2\u5f62\u9762\u79ef\n    r=len[0]*len[1]*len[2]/(4*A);                //\u6c42\u4e09\u89d2\u5f62\u5916\u63a5\u5706\u534a\u5f84\n    for(int i=0;i<2;++i)\n        a[i]=acos(1-len[i]*len[i]/(2*r*r));        //\u6c42\u5706\u5fc3\u89d2\u5ea6\u6570\n    a[2]=2*Pi-a[0]-a[1];                        //\u4e3a\u9632\u6b62\u8bef\u5dee\uff0c\u6700\u540e\u4e00\u4e2a\u5706\u5fc3\u89d2\u6839\u636e\u4e09\u89d2\u5f62\u4e09\u8fb9\u4f5c\u4e3a\u5f26\u6240\u5bf9\u7684\u4e09\u4e2a\u5706\u5fc3\u89d2\u4e4b\u548c\u4e3a360\u00b0\u6c42\u51fa\n    t=gcd(a[0],gcd(a[1],a[2]));                    //\u6c42\u5706\u5fc3\u89d2\u7684\u6700\u5927\u516c\u7ea6\u6570\n    printf(\"%.6lf\",(Pi*r*r*sin(t))/t);            //\u6c42\u6b63\u591a\u8fb9\u5f62\u9762\u79ef\n    return 0;\n}\n```\n\n---",
        "postTime": 1517299959,
        "uid": 78044,
        "name": "Loner_Knowledge",
        "ccfLevel": 0,
        "title": "CF1C Ancient Berland Circus"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u662f\u672c\u4eba\u7b2c\u4e00\u6b21\u5199\u8ba1\u7b97\u51e0\u4f55\u7684\u9898\u89e3\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u4e0d\u80fd\u7406\u89e3\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u63d0\u95ee\u3002\uff08\u9000\u5f79\u524d\u5e94\u8be5\u4f1a\u56de\u7b54\uff09\n\n\u8bf7\u52a1\u5fc5\u4e0d\u8981\u5728\u8bc4\u8bba\u533a\u4e2d\u53d1\u5e03\u4e0e\u9898\u76ee\u65e0\u5173\u7684\u8ba8\u8bba\u4fe1\u606f\u4ee5\u5f71\u54cd\u4ed6\u4eba\u7684\u89c2\u770b\u4f53\u9a8c\u3002\n\n## \u6b63\u6587\n\n### \u4e3b\u8981\u601d\u60f3\n\n**\u8ba1\u7b97\u51e0\u4f55** \uff0c\u672c\u9898\u7684\u5b9e\u8d28\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42\u4e00\u4e2a\u4ee5\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4e09\u89d2\u5f62\u4e3a\u5176\u4e2d\u4e09\u4e2a\u9876\u70b9\u7684\u6b63\u591a\u8fb9\u5f62\u7684\u9762\u79ef\uff0c\u5e76\u4e14\u4f7f\u8fd9\u4e2a\u9762\u79ef\u6700\u5c0f\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n\u9ad8\u4e2d\u6570\u5b66\u5fc5\u4fee\u4e8c\uff1a\u6b63\u5f26\u5b9a\u7406\u548c\u4f59\u5f26\u5b9a\u7406\uff0c `cmath` \u5e93\u51fd\u6570\u3002\n\n### \u89e3\u9898\u8fc7\u7a0b\n\n\u5c06\u4e3b\u8981\u601d\u60f3\u4e2d\u7684\u6570\u5b66\u6a21\u578b\u62bd\u8c61\u51fa\u6765\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ea\u7528\u8003\u8651\u600e\u4e48\u5904\u7406\u5c31\u53ef\u4ee5\u4e86\uff0c\u9996\u5148\u9700\u8981\u5904\u7406\u51fa\u4e09\u89d2\u5f62\u7684\u4e09\u6761\u8fb9\uff0c\u5bf9\u4e8e\u4e09\u4e2a\u5b9a\u70b9\u800c\u8a00\uff0c\u53ea\u8981\u7528\u5750\u6807\u4e0a\u6c42\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n~~~cpp\ninline db calc(const db x1,const db y1,const db x2,const db y2) {return sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));}\n~~~\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u591a\u8fb9\u5f62\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u5916\u63a5\u5706\u548c\u8fd9\u4e2a\u6b63\u591a\u8fb9\u5f62\u7684\u5916\u63a5\u5706\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u7528\u5f88\u591a\u65b9\u6cd5\u8bc1\u660e\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u5145\u5206\u6027\u548c\u5fc5\u8981\u6027\u7684\u8bc1\u660e\u65b9\u5f0f\u3002\n\n**\u5145\u5206\u6027**\uff1a  \n\n\u5229\u7528\u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u5916\u63a5\u5706\u800c\u8a00\uff0c\u5176\u4e2d\u4e00\u4e2a\u6b63\u591a\u8fb9\u5f62\u6709\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u4f5c\u4e3a\u9876\u70b9\u7684\u8bdd\uff0c\u5176\u4e0d\u4e2d\u6709\u4e2a\u70b9\u4e0d\u5728\u8fd9\u4e2a\u5706\u4e0a\u3002  \n\n\u56e0\u4e3a\u4e00\u4e2a\u6b63\u591a\u8fb9\u5f62\u53ef\u4ee5\u5206\u89e3\u6210\u82e5\u5e72\u4e2a\u4e09\u89d2\u5f62\uff0c\u6240\u4ee5\u6211\u4eec\u6839\u636e\u6bcf\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6b63\u591a\u8fb9\u5f62\u5206\u89e3\u6210\u82e5\u5e72\u4e2a\u4e0e\u539f\u4e09\u89d2\u5f62\u5168\u7b49\u7684\u4e09\u89d2\u5f62\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u8bc1\u660e\u8fd9\u4e9b\u4e09\u89d2\u5f62\u7684\u5916\u5fc3\u90fd\u5728\u540c\u4e00\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u4e09\u89d2\u5f62\u7684\u5916\u63a5\u5706\u90fd\u662f\u539f\u4e09\u89d2\u5f62\u7684\u5916\u63a5\u5706\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u7684\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u90fd\u5728\u8fd9\u4e2a\u5706\u4e0a\uff0c\u5f88\u660e\u663e\u4e0e\u6240\u8bbe\u4e0d\u7b26\uff0c\u5219\u5047\u8bbe\u4e0d\u6210\u7acb\u3002  \n\n\u5373\u8bc1\u660e\u4e86\u8fd9\u4e2a\u6b63\u591a\u8fb9\u5f62\u7684\u5404\u4e2a\u9876\u70b9\u90fd\u5728\u8fd9\u4e2a\u5706\u4e0a\u3002\n\n**\u5fc5\u8981\u6027**\uff1a\n\u6839\u636e\u8bc1\u660e\u5145\u5206\u6027\u7684\u65b9\u6cd5\uff0c\u5c06\u4e00\u4e2a\u6b63\u591a\u8fb9\u5f62\u5206\u6210\u82e5\u5e72\u4e2a\u4e09\u89d2\u5f62\uff0c\u7136\u540e\u8fd9\u4e9b\u4e09\u89d2\u5f62\u4e2d\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u4e0e\u539f\u4e09\u89d2\u5f62\u5168\u7b49\u7684\u4e09\u89d2\u5f62\uff0c\u7136\u540e\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u5916\u63a5\u5706\u4e00\u5b9a\u4e0e\u539f\u6b63\u591a\u8fb9\u5f62\u7684\u5916\u63a5\u5706\u76f8\u7b49\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9ad8\u4e2d\u6240\u5b66\u7684\u6b63\u5f26\u5b9a\u7406\u6765\u7b97\u51fa\u8fd9\u4e2a\u5916\u63a5\u5706\u7684\u534a\u5f84\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u516c\u5f0f\u5982\u4e0b\uff1a\n$$\n\\frac{a}{\\sin A} = \\frac{b}{\\sin B} = \\frac{c}{\\sin C} = 2R \n$$\n$$\nS =\\frac{1}{2} ab\\sin C  =\\frac{1}{2}ac\\sin B =\\frac{1}{2}bc\\sin A \n$$\n\u7531\u6d77\u4f26\u516c\u5f0f\u6c42\u9762\u79ef\u4e3a\uff1a\n$$\np=\\frac{a+b+c}{2}\n$$\n$$\nS=\\sqrt{p(p-a)(p-b)(p-c)}\n$$\n\u8054\u7acb\u89e3\u5f97\uff1a\n$$\nR = \\frac{abc}{4S}\n$$\n\u7d27\u8ddf\u7740\u7528\u4f59\u5f26\u5b9a\u7406\u7b97\u51fa\u5404\u4e2a\u8fb9\u6240\u5bf9\u7684\u5706\u5fc3\u89d2\u7684\u5ea6\u6570\u3002\n$$\n\\cos A = \\frac{R^2+R^2 -a^2}{2R^2}=1-\\frac{a^2}{2R^2}\n$$\n$$\nA = \\arccos (1-\\frac{a^2}{2R^2})\n$$\n\n$B,C$ \u540c\u7406\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u7b97\u51fa\u4e09\u6761\u8fb9\u5bf9\u5e94\u7684\u4e09\u6761\u5f26\u5728\u5706\u4e2d\u7684\u5706\u5fc3\u89d2\u6765\u8ba1\u7b97\u4e09\u4e2a\u5f26\u6240\u80fd\u5f97\u5230\u7684\u6700\u5c0f\u7684\u6b63\u591a\u8fb9\u5f62\u6240\u9700\u8981\u7684\u6bcf\u4e2a\u8fb9\u7684\u5706\u5fc3\u89d2\u3002\n\n\u8bbe $T$ \u4e3a\u8fd9\u4e2a\u89d2\u7684\u5ea6\u6570\u3002\n$$\nT = \\gcd (A,B,C)\n$$\n\u6700\u7ec8\u7b54\u6848\u5c31\u662f\uff1a\n$$\n\\frac {\\pi R^2 \\sin T} {T}\n$$\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n~~~cpp\n#include<bits/stdc++.h>\n#define db double\nusing namespace std;\nconst db pi = acos(-1.0);//\u83b7\u5f97\u03c0\u7684\u503c\nconst db EPS = 1E-2;\ndb pos[4][2];//\u8868\u793a\u4e09\u4e2a\u7684\u4f4d\u7f6e\ninline db calc(const db x1,const db y1,const db x2,const db y2) {return sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));}\ninline db get_s(const db a,const db b,const db c) {\n    db p = (a + b + c) / 2.0;\n    return sqrt( p * (p - a) * (p - b) * (p - c));\n}//\u6d77\u4f26\u516c\u5f0f\u6c42\u9762\u79ef\ndb gcd(db a,db b) {\n    if(fabs(b)<EPS)return a;\n    if(fabs(a)<EPS)return b;\n    return gcd(b,fmod(a,b)); \n}//\u6d6e\u70b9\u6570\u6c42gcd\ndb a,b,c,A,B,C,S,R;\nint main() {\n    for(int i = 1; i <= 3; i++) cin >> pos[i][0] >> pos[i][1];\n    a = calc(pos[1][0],pos[1][1],pos[2][0],pos[2][1]);\n    b = calc(pos[2][0],pos[2][1],pos[3][0],pos[3][1]);\n    c = calc(pos[1][0],pos[1][1],pos[3][0],pos[3][1]);//\u8ba1\u7b97\u51fa\u4e09\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n    S = get_s(a,b,c);//\u6c42\u5f97\u9762\u79ef\n    R = a * b * c / (4.0 * S);//\u6839\u636e\u4e0a\u5f0f\u6c42\u5f97\u534a\u5f84\n    A = acos(1 - (a * a) / (2 * R * R));\n    B = acos(1 - (b * b) / (2 * R * R));\n    C = acos(1 - (c * c) / (2 * R * R));//\u6c42\u51fa\u4e09\u6761\u8fb9\u6240\u5bf9\u7684\u5706\u5fc3\u89d2\u7684\u5927\u5c0f\n    db T = gcd(A,gcd(B,C));//\u83b7\u5f97\u6700\u7ec8\u6b63\u591a\u8fb9\u5f62\u7684\u5404\u4e2a\u5c0f\u4e09\u89d2\u5f62\u7684\u5706\u5fc3\u89d2\u7684\u5927\u5c0f\n    cout << fixed << setprecision(6) << pi * R * R * sin(T) / T << endl;//\u6700\u7ec8\u6c42\u89e3\n    return 0;\n}\n~~~\n\n\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\u547d\u540d\u4e0e\u516c\u5f0f\u51e0\u4e4e\u4e00\u81f4\uff0c\u5e94\u8be5\u4e0d\u4f1a\u6709\u5bf9\u6bd4\u4e0a\u7684\u533a\u522b\u3002\n\n\n",
        "postTime": 1618983913,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1C Ancient Berland Circus"
    },
    {
        "content": "\u5176\u5b9e\u662f\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u3002\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\uff0c\u5bf9\u4e8e\u7ed9\u51fa\u7684\u4e09\u4e2a\u6b63\u591a\u8fb9\u5f62\u9876\u70b9\uff0c\u4e24\u4e24\u8fde\u8fb9\u4e4b\u540e\uff0c\u4e2d\u5782\u7ebf\u4ea4\u4e8e\u6b63\u591a\u8fb9\u5f62\u6240\u5728\u5706\u5fc3\u7684\u4e2d\u70b9\u2014\u2014\u663e\u7136\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u51ed\u6b64\u6c42\u51fa\u5706\u5fc3\u548c\u534a\u5f84\u3002\n\n\u4e4b\u540e\u5bf9\u4e8e\u8be5\u591a\u8fb9\u5f62\uff0c\u6211\u4eec\u8003\u8651\uff0c\u7531\u4e8e\u5176\u8ba9\u6c42\u7684\u6b63\u591a\u8fb9\u5f62\u9700\u8981**\u9762\u79ef\u6700\u5c0f**\uff0c\u5e76\u4e14\u5bf9\u4e8e\u7ed9\u51fa\u7684\u4e09\u4e2a\u70b9\uff0c\u7531\u4e8e\u5728\u6b63\u591a\u8fb9\u5f62\u4e0a\u7684\u539f\u56e0\uff0c\u6240\u4ee5\u90fd\u5e94\u8be5\u662f**\u8be5\u6b63\u591a\u8fb9\u5f62\u76f8\u90bb\u4e24\u4e2a\u9876\u70b9\u5728\u5916\u63a5\u5706\u4e0a\u6240\u5bf9\u7684\u5706\u5fc3\u89d2\u7684\u6574\u6570\u500d**\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u505a\u4e00\u4e2a`double`\u7c7b\u578b\u7684$gcd$\u5c31\u597d\u4e86\u2014\u2014\u56e0\u4e3a\u5728\u5916\u63a5\u5706\u5927\u5c0f\u4e00\u5b9a\u65f6\uff08\u4e09\u70b9\u5df2\u786e\u5b9a\u4e00\u4e2a\u5706\uff09\uff0c\u5bf9\u4e8e\u6b63$n$\u8fb9\u5f62\uff0c\u5176\u9762\u79ef\u4e0e$n$\u6210\u6b63\u76f8\u5173\u3002\u6240\u4ee5\u53d6$gcd$\u4e00\u5b9a\u662f\u4e2a\u6700\u597d\u7684\u9009\u62e9\u3002\n\n\u6700\u540e\u7684\u9762\u79ef\u561b\u2026\u5927\u6982\u53ea\u9700\u8981\u4f59\u5f26\u5b9a\u7406\u4e00\u4e0b\u5c31\u597d\u3002\u6b64\u5904\u501f\u9274\u7684\u662f\u7b2c\u4e00\u7bc7\u9898\u89e3\u91cc\u9762\u6c42\u9762\u79ef\u7684\u65b9\u6cd5\u2014\u2014\u63d0\u9192\u4e00\u53e5\uff1a\u7b2c\u4e09\u4e2a\u89d2\u5fc5\u987byong$2\\pi$\u51cf\u53bb\u53e6\u5916\u4e24\u4e2a\u89d2\u5f97\u5230\uff0c\u5982\u679c\u4e0d\u8fd9\u6837\u8bef\u5dee\u4f1a\u76f8\u5f53\u7684\u5927\u2026\u2026\u5c24\u5176\u662f\u4e58\u4e0a\u4e00\u5806\u4e4b\u540e\uff0c\u9762\u79ef\u4f1a\u5f88\u4e0d\u7cbe\u786e$qaq$\n\n$\\color{red}{C}\\color{cyan}{o}\\color{gold}{d}\\color{green}{e}$1\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n\nusing namespace std ;\nconst double Eps = 1e-4 ;\nconst double Pi = acos(-1.00000) ;\nstruct Node{\n    bool mark ; // 0 = exist, 1 = inexist ;\n    double x, y ;\n}A, B, C, O, m1, m2, m3 ;\nstruct Line{\n    int mark ;//0 : // x-axis, 1: // y-axis, 2: // normal ;\n    double k, b ; double x, y ; // y = kx + b, x = k, y = k ;\n}L[12] ; double Len[4], agl[4], R, angle ; int i ;\n\ndouble get_x(Line A, Line B){ return A.mark == 0 ? A.x : B.x ; } //which is x = k ;\ndouble get_y(Line A, Line B){ return A.mark == 1 ? A.y : B.y ; } //which is y = k ;\ndouble dis(Node A, Node B){ return sqrt((A.x - B.x) * (A.x - B.x) + (A.y - B.y) * (A.y - B.y)) ; }\ninline Node get_Mid(Node A, Node B){ return (Node){0, (A.x + B.x) / 2, (A.y + B.y) / 2 } ; }\ninline Line get_verti(Node n, Line a){\n    if (!a.mark) return (Line) {1, 0, 0, 0, n.y} ;\n    if (a.mark == 1) return (Line) {0, 0, 0, n.x, 0} ;\n    double kk = -1.0 / a.k, bb = n.y - n.x * kk ; return (Line){2, kk, bb, 0, 0 } ;\n}\ninline Line get_Line(Node A, Node B){\n    if (A. y == B. y) return (Line){1, 0, 0, 0, B.y} ;\n    if (A. x == B. x) return (Line){0, 0, 0, A.x, 0} ;\n    double kk = (A.y - B.y) / (A.x - B.x), bb = A.y - A.x * kk ; return (Line){2, kk, bb, 0, 0} ;\n}\ninline Node get_inter(Line A, Line B){\n    if (A.mark == B.mark && (A.mark == 1 || A.mark == 0) ) return (Node){1, 0, 0 } ;\n    if ((A.mark == 1 && B.mark == 0) || (A.mark == 0 && B.mark == 1)) return (Node){0, get_x(A, B), get_y(A, B)} ;\n    if (A.mark == 1 && B.mark == 2) return (Node){0, (A.y - B.b) / B.k, A.y} ;\n    if (A.mark == 2 && B.mark == 1) return (Node){0, (B.y - A.b) / A.k, B.y} ;\n    if (A.mark == 2 && B.mark == 0) return (Node){0, B.x, B.x * A.k + A.b} ;\n    if (A.mark == 0 && B.mark == 2) return (Node){0, A.x, A.x * B.k + B.b} ;\n    return (Node){0, (A.b - B.b) / (B.k - A.k), (A.b - B.b) / (B.k - A.k) * A.k + A.b} ;  \n}\ninline double gcd(double a,double b) {  if (fabs(b) < Eps) return a ; if (fabs(a) < Eps) return b ; return gcd(b, fmod(a, b)) ; }\nint main(){\n    cin >> A.x >> A.y >> B.x >> B.y >> C.x >> C.y ; A.mark = B.mark = C.mark = 0 ;\n    L[1] = get_Line(A, B), L[2] = get_Line(B, C), L[3] = get_Line(A, C), m1 = get_Mid(A, B), m2 = get_Mid(B, C), m3 = get_Mid(A, C) ;\n    L[4] = get_verti(m1, L[1]), L[5] = get_verti(m2, L[2]), O = get_inter(L[4], L[5]), R = (dis(O, A) + dis(O, B) + dis(O, C)) / 3.0 ;\n    Len[1] = dis(A, B), Len[2] = dis(B, C), Len[3] = dis(A, C) ; for (i = 1 ; i <= 3 ; ++ i) agl[i] = acos(1 - Len[i] * Len[i] / (2 * R * R) ); \n    agl[3] = 2 * Pi - agl[1] - agl[2], angle = gcd(agl[3], gcd(agl[1], agl[2])), printf(\"%.6lf\\n\", (Pi * R * R * sin(angle)) / angle) ; return 0 ;\n}\n```\n\n\u5410\u69fd\uff1a\n* \u6211\u7528\u7684\u662f\u659c\u622a\u5f0f\u76f4\u7ebf\u65b9\u7a0b\u2026\u2026\u8fd9\u5c31\u9700\u8981\u8003\u8651$k$\u662f\u5426\u5b58\u5728\uff0c\u4e8e\u662f\u6211\u5c31\u5206\u4e86\u597d\u51e0\u79cd\u60c5\u51b5ORZ\n* \u8fd9\u5176\u5b9e\u662f\u6211\u7b2c\u4e00\u6b21\u5199\u8ba1\u7b97\u51e0\u4f55qaq\u611f\u89c9\u4e0d\u662f\u5f88\u597d\u2026\u2026\u4e00\u5f00\u59cb\u6ca1\u8003\u8651\u659c\u7387\u662f\u5426\u662finf\u2026\u2026\u5bfc\u81f4\u4e00\u5806nan\u2026\u2026qaq",
        "postTime": 1549937374,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    },
    {
        "content": "\u6211\u7684\u7b2c\u4e00\u7bc7CF\u6570\u8bba\u9898\u89e3\u5440QAQ\uff0c\u8fd9\u9898\u8fd8\u662f\u8003\u9a8c\u5bf9\u9898\u76ee\u7684\u7406\u89e3\u548c\u5bf9\u4e09\u89d2\u51fd\u6570\u7684\u8fd0\u7528\u5440QAQ\n```cpp\n//\u8fd9\u4e2a\u6b63\u591a\u8fb9\u5f62\u53ef\u4ee5\u7406\u89e3\u4e3a\u5f88\u591a\u4e2a\u7b49\u8170\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\uff0c\u7b97\u51fa\u6bcf\u4e2a\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u548c\u4e09\u89d2\u5f62\u4e2a\u6570\uff0c\u76f8\u4e58\u4fbf\u662f\u603b\u9762\u79ef\n#include<iostream>\n#include<iomanip>\n#include<cstdio>\n#include<cmath>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\nconst double pi=3.1415926;//\u03c0\ndouble mod(double a,double b)//\u5c0f\u6570\u53d6\u6a21\n{\n  return a-(int)(a/b)*b;\n}\ndouble gcd(double x,double y)//\u5c0f\u6570gcd\n{\n  if(y<=0.0001)return x;\n  return gcd(y,mod(x,y));\n}\ndouble x,y,x2,y2,x3,y3;\nint main()\n{\n  cin>>x>>y>>x2>>y2>>x3>>y3;\n  //\u8ba1\u7b97\u4e09\u89d2\u5f62\u4e09\u6761\u8fb9\u957f\n  double a=sqrt((x-x2)*(x-x2)+(y-y2)*(y-y2));\n  double b=sqrt((x-x3)*(x-x3)+(y-y3)*(y-y3));\n  double c=sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));\n  double p=(a+b+c)/2;\n  double r=(a*b*c)/(4*sqrt(p*(p-a)*(p-b)*(p-c)));//\u901a\u8fc7r=(abc)/(4s)\u5f97\u51fa\u5916\u63a5\u5706\u534a\u5f84\n  //\u5206\u522b\u6c42\u51fa\u4ee5\u4e09\u6761\u8fb9\u4e3a\u4f4e\uff0c\u5916\u63a5\u5706\u534a\u5f84\u4e3a\u8170\u7684\u4e09\u89d2\u5f62\u7684\u9876\u89d2\u89d2\u5ea6\n  double angle1=acos(1-(a*a)/(2*r*r));\n  double angle2=acos(1-(b*b)/(2*r*r));\n  double angle3=2*pi-angle1-angle2;\n  double angle=gcd(angle1,gcd(angle2,angle3))/pi*180;//\u9898\u76ee\u6240\u793a\u7684\u4ee5\u6b63\u591a\u8fb9\u5f62\u8fb9\u957f\u4e3a\u4f4e\u63a5\u5706\u534a\u5f84\u4e3a\u8170\u7684\u4e09\u89d2\u5f62\u7684\u9876\u89d2\u89d2\u5ea6\n  double side=sqrt(2*r*r-2*r*r*cos(angle/180*pi));//\u6c42\u51fa\u6b63\u591a\u8fb9\u5f62\u7684\u8fb9\u957f\n  double P=(r*2+side)/2;\n  double s=sqrt(P*(P-r)*(P-r)*(P-side))/*\u4e09\u89d2\u5f62\u9762\u79ef*/*(360/angle)/*\u4e09\u89d2\u5f62\u4e2a\u6570*/;//\u8ba1\u7b97\u9762\u79ef\n  cout<<fixed<<setprecision(6)<<s;//\u4fdd\u75596\u4f4d\u5c0f\u6570\u8f93\u51fa\n  return 0;\n}\n```\n",
        "postTime": 1548813296,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    },
    {
        "content": "\u8ba1\u7b97\u51e0\u4f55\u3002\n\n\u6211\u7ec8\u4e8e\u53ef\u4ee5\u505a\u8fd9\u79cd\u9898\u4e86\u554a\u3002\n\n\n------------\n\n\n\u9996\u5148\u6211\u4eec\u65ad\u8a00\uff1a\u7ed9\u5b9a\u4e09\u70b9\u7684\u6b63\u591a\u8fb9\u5f62\u9762\u79ef\u6700\u5c0f\u5f53\u4e14\u4ec5\u5f53\u6b63\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u90fd\u5728\u7ed9\u5b9a\u4e09\u70b9\u6784\u6210\u7684\u4e09\u89d2\u5f62\u5916\u63a5\u5706\u4e0a\u3002\n\n\u9898\u76ee\u7ed9\u4e86\u4e09\u70b9\u5750\u6807\uff0c\u90a3\u4e48\u53ef\u4ee5\u6c42\u51fa\u4e09\u8fb9\u957f\uff0c\u4e4b\u540e\u4e0d\u96be\u60f3\u5230\u8981\u7528\u6d77\u4f26\u516c\u5f0f\u3002\n\n$$ p=\\frac{1}{2}(a+b+c) $$\n\n$$ S_{\\Delta ABC}=\\sqrt{p(p-a)(p-b)(p-c)} $$\n\n\u63a5\u7740\u7528\u5916\u63a5\u5706\u534a\u5f84\u516c\u5f0f\u3002\n\n$$ R= \n4S_{\\Delta\nabc} $$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6c42\u51fa\u5706\u5fc3\u89d2\u5ea6\u6570\uff0c\u53d6\u4e00\u4e2a\u6700\u5c0f\u516c\u500d\u6570\uff0c\u8bbe\u4e3a $k$\uff0c\u90a3\u4e48\u6700\u540e\u7b54\u6848\u662f $\\frac{\n\\pi R^2\n sin k}{k}$ \u3002\n \n \u6700\u540e\u6ce8\u610f\u63a7\u5236\u4e00\u4e0b\u7cbe\u5ea6\uff0c\u53d6 `1e-2` \u5176\u4ed6\u7684\u7cbe\u5ea6\u4f1a\u51fa\u95ee\u9898\u3002\n \n \u653e\u4e00\u4e0b\u4e3b\u51fd\u6570\u7684\u4ee3\u7801\u3002\n \n ```cpp\n    for(int i=0;i<3;ans+=len[i],i++)\n\t{\n\t\tlen[i]=dist(i,(i+1)%3);//dist\u6c42\u8ddd\u79bb\n\t}\n\tans/=2;\n\tret=sqrt(ans*(ans-len[0])*(ans-len[1])*(ans-len[2]));\n\tkawaii=len[0]*len[1]*len[2]/(4*ret);\n\ta[0]=acos(1-len[0]*len[0]/(2*kawaii*kawaii));\n\ta[1]=acos(1-len[1]*len[1]/(2*kawaii*kawaii));\n\ta[2]=2*pi-a[0]-a[1];\n\tans=gcd(a[0],gcd(a[1],a[2]));\n\tprintf(\"%.6lf\",(pi*kawaii*kawaii*sin(ans))/ans);\n ```\n \n \n ",
        "postTime": 1629460571,
        "uid": 369904,
        "name": "zplqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1C Ancient Berland Circus"
    },
    {
        "content": "\u6211\u89c9\u5f97\u524d\u9762\u7684\u5927\u591a\u6570\u9898\u89e3\u5e94\u8be5\u6709\u95ee\u9898\uff0c\u5982\u679c\u6211\u7684\u601d\u8def\u4e0d\u5bf9\u8bf7\u6307\u6b63\uff0c\u8c22\u8c22\u3002  \n\u524d\u8fb9\u9898\u89e3\u91cc\u8bf4\u4e4b\u6240\u4ee5\u7528$2\\pi$\u51cf\u53bb\u4e24\u4e2a\u89d2\u5f97\u5230\u7b2c\u4e09\u4e2a\u89d2\uff0c\u662f\u56e0\u4e3a\u8bef\u5dee\u3002\u4f46\u5176\u5b9e\u4e0d\u662f\u8fd9\u6837\u7684\u3002\u5bf9\u4e8e\u7b2c13\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u6211\u628a\u56fe\u753b\u51fa\u6765\u91cf\u51fa\u4e09\u4e2a\u89d2\u5927\u5c0f\u5e76\u8ba1\u7b97\u6b63\u5f26\u503c\uff0c\u4e0e\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u76f8\u5dee\u65e0\u51e0\uff0c\u4f46\u662f\u505a\u9898\u7684\u65f6\u5019\u76f4\u63a5\u7b97\u786e\u5b9e\u4e0d\u884c\uff0c\u6211\u4eec\u7528\u4e0b\u56fe\uff08\u6d4b\u8bd5\u70b913\uff09\u4e3e\u4f8b\uff1a  \n![\u6d4b\u8bd5\u70b913\u5bf9\u5e94\u7684\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/crlrzmwo.png)  \n\u5728\u7b97\u51fa$\u2220AOB$\u548c$\u2220AOC$\u4e4b\u540e\uff0c\u4e4b\u524d\u7684\u9898\u89e3\u7528$2\\pi-\u2220AOB-\u2220AOC$\u6765\u8ba1\u7b97$\u2220BOC$\u7684\u503c\u3002\u4f46\u8fd9\u6837\u5f97\u5230\u7684\u5e76\u4e0d\u662f\u771f\u6b63\u7684$\u2220BOC$\u7684\u503c\uff0c\u800c\u662f\u5c06$C$\u5173\u4e8e$OA$\u5bf9\u79f0\u4e4b\u540e\u5f97\u5230$C'$\uff08\u56e0\u4e3a\u662f\u6b63\u591a\u8fb9\u5f62\uff0c\u6240\u4ee5\u8fd9\u4e2a$C'$\u5fc5\u7136\u5b58\u5728\uff09\uff0c\u5f97\u5230\u7684\u662f$\u2220BOC'$\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u660e\u663e\u6bd4\u539f\u5148\u7684$\u2220BOC$\u66f4\u5927\uff0c\u6c42\u51fa\u6765\u4e09\u4e2a\u89d2\u7684$gcd$\u4e5f\u66f4\u5927\uff08\u8fd9\u91cc\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u7f51\u4e0a\u4e5f\u641c\u4e0d\u5230\u76f8\u5173\u7684\u89e3\u91ca\uff09\u3002  \n\u56e0\u6b64\u672c\u9898\u6b63\u89e3\u8fd8\u662f\u539f\u5148\u7684\u5199\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u6211\u89c9\u5f97\u524d\u9762\u7684\u9898\u89e3\u89e3\u91ca\u7684\u4e0d\u592a\u5bf9\u3002\u4ee5\u53ca\u6700\u540e$gcd$\u4e3a\u4ec0\u4e48\u66f4\u5927\u7684\u95ee\u9898\uff0c\u9ebb\u70e6\u54ea\u4f4d\u5927\u4f6c\u5e2e\u5fd9\u8bb2\u4e00\u4e0b\uff0c\u8c22\u8c22\u3002\n",
        "postTime": 1609597708,
        "uid": 128961,
        "name": "CHUAN02162",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    },
    {
        "content": "~~\u4e3a\u4ec0\u4e48 CF \u7684\u9898\u9762\u90fd\u8fd9\u4e48\u78e8\u53fd \u4e00\u53e5\u8bdd\u4e86\u4e8b\u554a~~\n\n\u8fd9\u9898\u9762\u7ffb\u8bd1\u6210\u4eba\u8bdd\u5c31\u662f\u201c\u6c42\u4e00\u4e2a\u9762\u79ef\u6700\u5c0f\u7684\u6b63\u591a\u8fb9\u5f62\u6765\u6db5\u76d6\u7ed9\u5b9a\u7684\u4e09\u4e2a\u70b9\u201d\u3002\u7ecf\u8fc7\u5206\u6790\uff0c\u8fd9\u4e2a\u6b63\u591a\u8fb9\u5f62\u7684**\u5916\u63a5\u5706**\u4e00\u5b9a\u5c31\u662f\u7ed9\u5b9a\u7684\u4e09\u70b9\u6784\u6210\u7684\u4e09\u89d2\u5f62\u7684\u5916\u63a5\u5706\u3002\n\n\u6d77\u4f26\u516c\u5f0f\u662f\u51e0\u4f55\u91cc\u6700\u57fa\u7840\u7684\u516c\u5f0f\u4e86\uff0c\u4ee4 $p$ \u4e3a $\\triangle ABC$ \u7684\u534a\u5468\u957f\uff0c\u4e09\u89d2\u5f62\u4e09\u8fb9\u957f\u5206\u522b\u4e3a $a,b,c$\uff0c\u90a3\u4e48\u6709\uff1a\n\n$$S_{\\triangle ABC}=\\sqrt{p(p-a)(p-b)(p-c)}$$\n\n[\u6d77\u4f26\u516c\u5f0f\u63a8\u5bfc\u8fc7\u7a0b\u6233\u8fd9\u91cc](https://wenku.baidu.com/view/76777692e3bd960590c69ec3d5bbfd0a7856d50b.html#)\uff0c\u7531\u4e8e\u4e0d\u662f\u672c\u9898\u89e3\u7684\u4e3b\u8981\u5185\u5bb9\uff0c\u6545\u6b64\u4e0d\u653e\u5177\u4f53\u63a8\u5bfc\u3002\n\n\u6613\u77e5\u82e5\u4e09\u89d2\u5f62\u4e09\u8fb9\u957f\u5206\u522b\u4e3a $a,b,c$\uff0c\u90a3\u4e48 $S_{\\triangle ABC}=\\dfrac 1 2 ab\\sin C$\uff0c\u63a8\u5bfc\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n$$\\text{\u4ee4} \\triangle ABC\\ a\\ \\text{\u8fb9\u4e0a\u7684\u9ad8}\\ AD\\  \\text{\u4e3a}\\ h, $$\n$$S_{\\triangle ABC}=\\dfrac 1 2ah$$\n$$\\because Rt_{\\triangle ADC}$$\n$$\\therefore h=b\\ \\cdot\\ \\sin\\angle C$$\n$$\\therefore S_{\\triangle ABC}=\\dfrac 1 2ab\\sin C$$\n\n\u53c8\u6709\u6b63\u5f26\u5b9a\u7406\uff1a\n$$\\dfrac a {\\sin A}=\\dfrac b {\\sin B}=\\dfrac c {\\sin C}=2R$$\n\u53ef\u5f97\uff1a\n$$R=\\dfrac{abc}{4S_{\\triangle ABC}}$$\n\u63a8\u5bfc\u8fc7\u7a0b\uff1a\n$$\\because\\dfrac{c}{\\sin C}=2R$$\n$$\\therefore S_{\\triangle ABC}=\\dfrac 1 2ab\\sin C=\\dfrac {abc}{4R}$$\n$$\\therefore R=\\dfrac{abc}{4S_{\\triangle ABC}}$$\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4f59\u5f26\u5b9a\u7406\u548c\u53cd\u4e09\u89d2\u51fd\u6570\u8ba1\u7b97\u51fa\u4e09\u89d2\u5f62\u7684\u4e09\u6761\u5f26\u6240\u5bf9\u7684\u5706\u5fc3\u89d2\u7684\u5ea6\u6570\u3002\n\n\u663e\u800c\u6613\u89c1\u7684\u7ed3\u8bba\u662f\uff0c\u4e09\u6761\u5f26\u6240\u5bf9\u7684\u5706\u5fc3\u89d2\u5ea6\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570 $\\alpha$ \u5c31\u662f**\u6b63\u591a\u8fb9\u5f62\u7684\u4e2d\u5fc3\u89d2**\u3002\n\n\u4e2d\u5fc3\u89d2\u6307\u7684\u662f\u6b63\u591a\u8fb9\u5f62\u76f8\u90bb\u4e24\u9876\u70b9\u4e0e\u5176\u4e2d\u5fc3\u8fde\u7ebf\u7684\u5939\u89d2\u3002\u6b63 $n$ \u8fb9\u5f62\u4e2d\u5fc3\u89d2\u7684\u5ea6\u6570\u662f\n$$\\alpha=\\dfrac{360\\degree}{n}$$\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u80fd\u63a8\u5bfc\u51fa\u6b63\u591a\u8fb9\u5f62\u7684\u9762\u79ef\uff1a\n$$S=\\dfrac{\\pi R^2\\sin \\alpha}{\\alpha}$$\n\u63a8\u5bfc\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u8ba4\u771f\u6d88\u5316\u3002\u540c\u65f6\uff0c\u4e09\u89d2\u51fd\u6570\u4e00\u5b9a\u8981\u5b66\u660e\u767d\u3002\n\n\u8be6\u7ec6\u4ee3\u7801\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u51fa\u4e86\uff0c\u53ea\u662f\u7ed9\u4e00\u4e2a\u5bf9 `double` \u7c7b\u578b\u505a $\\gcd$ \u7684\u6a21\u677f\u51fd\u6570\uff1a\n\n```cpp\ndouble gcd(double x, double y) {\n    while (fabs(x) > eps && fabs(y) > eps) {\n        if (x > y)\n                x -= floor(x / y) * y;\n        else\n                y -= floor(y / x) * x;\n    }\n    return x + y;\n}\n```\n\n\u540c\u65f6\u4e5f\u6709 $\\gcd_{a,b,c}=\\gcd_{\\gcd_{a,b},c}$\n\n## \u5b8c\u7ed3\u6492\u82b1~ \u6c42\u8d5e\u6c42\u4e92\u5173QAQ",
        "postTime": 1601270109,
        "uid": 372299,
        "name": "\u8d85\u7ea7\u739b\u4e3d\u738b\u5b50",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    },
    {
        "content": "# \u8fd9\u662f\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u9898\uff08~~\u5e9f\u8bdd~~\uff09\n### \u9996\u5148\u6211\u4eec%\u4e00\u4e0b\u7b1b\u5361\u5c14\u3001\u6b27\u51e0\u91cc\u5f97\u3001\u6d77\u4f26\u3001\u79e6\u4e5d\u97f6\u7b49\u4e3a\u6b64\u9898\u6253\u4e0b\u575a\u5b9e\u7684\u77e5\u8bc6\u57fa\u7840\u7684\u4f1f\u5927\u6570\u5b66\u5bb6\n\u8fd9\u9053\u9898\u8981\u7528\u5230\u7684\u77e5\u8bc6\u70b9\uff1a\u76f4\u7ebf\u65b9\u7a0b\u548c\u76f4\u7ebf\u95f4\u5939\u89d2\u3001\u4e09\u89d2\u5f62\u9762\u79ef\u516c\u5f0f\uff08\u6240\u6709\uff09\uff0c\u4e09\u89d2\u5f62\u5916\u5fc3\u6027\u8d28\u3002\n##### \u6211\u7684\u65b9\u6cd5\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u4f46~~\u6211\u61d2~~\u4ee3\u7801\u592a\u4e11\uff0c\u6240\u4ee5\u5c31\u4e0d\u53d1\u4ee3\u7801\u4e86\uff08\u9003\uff09\n\u4e0b\u9762\u662f\u8ba1\u7b97\u601d\u8def\u53ca\u8fc7\u7a0b\uff1a    \n- 1,\u5229\u7528\u4e24\u70b9\u95f4\u8ddd\u79bb\u516c\u5f0fdis=$\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}$ \u6c42\u51fa\u25b3ABC\u7684a,b,c;\n- 2\uff0c\u5229\u7528\u659c\u7387\u516c\u5f0fK=$\\frac{x_1-x_2}{y_1-y_2}$\u6c42\u51fa\u25b3ABC\u7684\u4e09\u8fb9\u659c\u7387\uff1b\n- 3\uff0c\u8fd9\u662f\u6700\u91cd\u8981\uff0c\u4e5f\u662f\u6211\u65b9\u6cd5\u4e0d\u4e00\u6837\u7684\u70b9\uff1atan\u03b8=abs($\\frac{k_1-k_2}{1+k_1\\!k_2}$),\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u6c42\u51faA,B,C\u4e86\uff0c\u4f46\u662f\uff01\uff0c$k_1\\!k_2$\u2260-1\u624d\u884c\uff0c\u800c\u5f53$k_1\\!k_2$=-1\u65f6\uff0c\u5939\u89d2\u5df2\u7ecf\u6210\u4e8690\u00b0\uff0ctan90\u00b0=$\\frac{k_1-k_2}{1+k_1\\!k_2}$=$\\frac{k_1-k_2}{0}$=\u00b1\u221e\uff08\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\u5427\uff09\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u5176\u5b9e\u5728\u7b2c2\u6b65\u5c31\u53ef\u4ee5\u5224\u4e86\uff0c\u4f46\u7b2c2\u6b65\u5224\u6709\u4e00\u5b9a\u5c40\u9650\u6027\uff0c\u6240\u4ee5\u5c31\u5728\u8fd9\u4e00\u6b65\u52a0\u7279\u5224$k_1\\!k_2$=-1\u7684\u60c5\u51b5\u3002\n- 4\uff0cS\u25b3ABC=$\\frac{a\\!bsinC}{2}$\uff0cR=$\\frac{S}{p}$,p=$\\frac{a+b+c}{2}$\uff0c\u6bd4\u6b63\u4f59\u5f26\u5b9a\u7406\u65b9\u4fbf\u5f97\u591a\u3002\n- 5\uff0c\u6839\u636e\u4e09\u89d2\u5f62\u5916\u5fc3\u7684\u6027\u8d28\uff0c\u6c42\u51fa\u4e09\u4e2a\u5706\u5fc3\u89d2\u03b1\u3001\u03b2\u3001\u03b3\uff0c\u4e3a\u51cf\u5c0f\u8bef\u5dee\uff0c\u03b3\u7531360\u00b0-\u03b1-\u03b2\u6c42\u51fa\u3002\n- 6\uff0c\u6c42\u03b8=gcd(\u03b1,\u03b2,\u03b3)=gcd(gcd(\u03b1,\u03b2),\u03b3)\uff0c\u6b64\u65f6\u03b8\u6700\u5927\uff0c\u5bf9\u5e94\u6b63n\u8fb9\u5f62\u9762\u79ef\u6700\u5c0f,n=$\\frac{360}{\u03b8}$\uff0c\u6545S_min=$\\frac{\u03c0r^2sin\u03b8}{\u03b8}$,\u5373\u53ef\u6c42\u89e3\u3002\n### \u6ce8\uff1a\u7b2c\u516d\u6b65gcd\u624b\u5199\u65f6\u6709\u4e00\u4e2afmod\u51fd\u6570\uff0c\u53ef\u6c42\u6d6e\u70b9\u6570\u9664\u6cd5\u7684\u4f59\u6570\u3002\u03c0=Arccos(1.0)\u3002\n\u8fd9\u79cd\u7c7b\u578b\u7684\u8ba1\u7b97\u51e0\u4f55\u5c31\u662f\u624b\u7b97\u51e0\u4f55\uff0c\u53ea\u8981\u4f60\u5e73\u9762\u51e0\u4f55\uff0c\u89e3\u6790\u51e0\u4f55\u77e5\u8bc6\u8fc7\u786c\uff0c\u4ee3\u7801\u90fd\u4e0d\u662f\u95ee\u9898\u3002\u518d\u89c1\uff01",
        "postTime": 1567820867,
        "uid": 228551,
        "name": "AKOI\u81ea\u52a8\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    },
    {
        "content": "### $$\\text{Cf1c\\ Ancient Berland Circus}$$\n#### Solution\n\u3000\u30004:17\u65e5:\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u9053\u9898\u8fd8\u662f\u5f88\u6709\u60f3\u6cd5\u7684: \u627e\u51fa\u4efb\u610f\u4e24\u4e2a\u70b9\u8fde\u7ebf\u7684\u5782\u76f4\u5e73\u5206\u7ebf, \u591a\u8fb9\u5f62\u7684\u4e2d\u5fc3\u5c31\u5b58\u5728\u5728\u8fd9\u6761\u7ebf\u4e0a, \u627e\u5230\u4e2d\u5fc3\u540e\u6839\u636e\u4e24\u4e2a\u67f1\u5b50\u5230\u4e2d\u5fc3\u7684\u89d2\u5ea6$\\alpha$, \u591a\u8fb9\u5f62\u76f8\u90bb\u4e24\u9876\u70b9\u5230\u4e2d\u5fc3\u7684\u89d2\u5ea6$\\beta$, \u6ee1\u8db3$\\beta|\\alpha$.\n\n \u3000\u30004:27\u65e5: \u505a\u4e86\u8fd9\u9053\u9898, \u5229\u7528\u7684\u5c31\u662f\u4e0a\u9762\u8fd9\u4e2a\u601d\u8def.\u7136\u540e\u5199\u4e86\u597d\u957f\u65f6\u95f4, \u7801\u529b\u597d\u5f31, \u52a0\u4e0a\u81ea\u5df1\u975e\u5e38\u96f6\u788e\u7684\u4e00\u70b9\u8ba1\u7b97\u51e0\u4f55\u548c\u89e3\u6790\u51e0\u4f55\u7684\u77e5\u8bc6, \u6700\u7ec8\u8fd8\u662f\u5199\u5b8c\u4e86, \u7136\u540e\u5199\u4e86\u5f88\u591a\u51fd\u6570, \u5176\u5b9e\u6839\u672c\u7528\u4e0d\u5230\u8fd9\u4e48\u591a.\u5177\u4f53\u7684\u4ecb\u7ecd\u4e00\u4e0b\u5404\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u5427.\n\n\u3000\u3000\u8fd9\u9053\u9898\u7ec6\u8282\u6709\u70b9\u591a.\u6240\u4ee5\u6211\u662f\u5206\u5e03\u5199\u7684, \u6bcf\u5199\u5b8c\u4e00\u4e2a\u51fd\u6570\u5c31\u7528\u6570\u636e\u68c0\u67e5, \u56e0\u6b64\u82b1\u5728\u8c03\u8bd5\u4e0a\u7684\u7cbe\u529b\u53cd\u800c\u4e0d\u591a.\n\n- gcd(), \u6c42\u4e24\u4e2a\u6d6e\u70b9\u6570\u7684\u6700\u5c0f\u516c\u7ea6\u6570\n- Point::***\u7528x,y\u4e24\u4e2a\u503c\u8868\u793a\u4e00\u4e2a\u70b9(\u77e2\u91cf)***\n\t- input(), \u8f93\u5165\u70b9\u7684\u5750\u6807\n\t- print(), \u6253\u5370\u70b9\u7684\u5750\u6807(x,y)\n\t- operator+(Point), \u77e2\u91cf\u7684\u52a0\u6cd5\n\t- operator-(Point), \u77e2\u91cf\u7684\u51cf\u6cd5\n\t- operator*(int), \u77e2\u91cf\u7684\u653e\u5927\u4e0e\u7f29\u5c0f\n\t- operator*(Point), \u77e2\u91cf\u7684\u6570\u91cf\u79ef(\u70b9\u4e58)\n- Line::***\u7528\u4e24\u4e2a\u70b9(Point)\u8868\u793a\u4e00\u6761\u76f4\u7ebf/\u7ebf\u6bb5/\u77e2\u91cf***\n\t- print(), \u540cPoint\n\t- Length(), \u77e2\u91cf\u7684\u6a21\u957f\n- Lineo::***\u7528\u76f4\u7ebf\u7684\u4e00\u822c\u5f0f\u8868\u793a\u4e00\u6761\u76f4\u7ebf***\n\t- Convert(Line), \u5c06\u4e24\u70b9\u5f0f\u7684\u76f4\u7ebf\u8f6c\u5316\u4e3a\u4e00\u822c\u5f0f\n- angle(Line), \u4e00\u6761\u76f4\u7ebf\u7684\u659c\u7387(\u76f4\u7ebf\u4e0ex\u8f74\u7684\u5939\u89d2\u7684tan\u503c)\n- MidPoint(Line), \u7ebf\u6bb5\u7684\u4e2d\u70b9\n- MidPlumd(Line), \u4e00\u6761\u76f4\u7ebf\u7684\u5782\u76f4\u5e73\u5206\u7ebf\n- InterPoint(Line,Line), \u4e24\u76f4\u7ebf\u7684\u4ea4\u70b9\n- CenterPoint(Point,Point,Point), \u4e09\u4e2a\u70b9\u5f62\u6210\u7684\u591a\u8fb9\u5f62\u7684\u51e0\u4f55\u4e2d\u5fc3\n- TanLine(Point a,Point b,Point c), a\u4e0eb\u5f62\u6210\u76f4\u7ebf\u4e0eb\u4e0ec\u5f62\u6210\u76f4\u7ebf\u7684\u5939\u89d2\u7684\u4f59\u5207\u503c.\n- Angle(Point a,Point b,Point c), a\u4e0eb\u5f62\u6210\u76f4\u7ebf\u4e0eb\u4e0ec\u5f62\u6210\u76f4\u7ebf\u7684\u5939\u89d2.\n\n#### Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#define Phi 3.141592653589793\n#define eps 1E-2\nusing namespace std;\n\ndouble gcd(double a,double b){\n    if(fabs(b)<eps)return a;\n    if(fabs(a)<eps)return b;\n    return gcd(b,fmod(a,b));\n}\n\nstruct Point{\n\tdouble x,y;\n\tvoid input(){cin>>x>>y;}\n\tvoid print(){cout<<x<<' '<<y<<'\\n';}\n\tPoint operator+(const Point &a)const{\n\t\treturn (Point){x+a.x,y+a.y};\n\t}\n\tPoint operator-(const Point &a)const{\n\t\treturn (Point){x-a.x,y-a.y};\n\t}\n\tPoint operator*(const double& a)const{\n\t\treturn (Point){x*a,y*a};\n\t}\n\tdouble operator*(const Point &a)const{\n\t\treturn x*a.x+y*a.y;\n\t}\n};\ntypedef Point Vector;\nstruct Line{\n\tPoint a,b;\n\tvoid print(){a.print();b.print();}\n\tdouble Length(){\n\t\tVector c=b-a;\n\t\treturn sqrt(c.x*c.x+c.y*c.y);\n\t}\n};\nstruct Lineo{\n\tdouble a,b,c;\n\tvoid Convert(Line s){\n\t\ta=s.b.y-s.a.y,b=s.a.x-s.b.x,c=-a*s.a.x-b*s.a.y;\n\t}\n};\n\ndouble angle(Line a){\n\tLineo s;s.Convert(a);\n\treturn s.a/s.b;\n}\nPoint MidPoint(Line l){\n\tPoint ans;ans=l.a+l.b,ans=ans*0.5;\n\treturn ans;\n}\n\nLine MidPlumd(Line l){\n\tPoint mid=MidPoint(l);\n\tVector delta=l.b-l.a;\n\tPoint z=(Point){mid.x+delta.y,mid.y-delta.x};\n\treturn (Line){mid,z};\n}\n\nPoint InterPoint(Line a,Line b){\n\tLineo l1,l2;l1.Convert(a),l2.Convert(b);\n\treturn (Point){(l1.b*l2.c-l2.b*l1.c)/(l1.a*l2.b-l2.a*l1.b),(l2.a*l1.c-l1.a*l2.c)/(l1.a*l2.b-l2.a*l1.b)};\n}\n\nPoint CenterPoint(Point a,Point b,Point c){\n\tLine l1=(Line){a,b};Line l2=(Line){b,c};\n\tLine l3=MidPlumd(l1),l4=MidPlumd(l2);\n\treturn InterPoint(l3,l4);\n}\n\ndouble TanLine(Point a,Point b,Point c){\n\tLine l1=(Line){a,b},l2=(Line){b,c};\n\tdouble a1=angle(l1),a2=angle(l2);\n\treturn abs((a1-a2)/(1+a1*a2));\n}\n\n\ndouble Angle(Point a,Point b,Point c){\n\tdouble as=TanLine(a,b,c);\n\tas=atan(as);Vector aa=a-b,bb=c-b;\n\tif(aa*bb<0)as=3.1415926-as;\n\treturn as;\n}\n\nPoint a,b,c;\nPoint root;\ndouble lon;\n\nint main(){\n\ta.input(),b.input(),c.input();\n\troot=CenterPoint(a,b,c);\n\tdouble a1=Angle(a,root,c),a2=Angle(a,root,b),a3;\n\ta3=2*Phi-a1-a2;\n\tdouble ans=gcd(a1,gcd(a2,a3));\n\tans=2*Phi/ans;\n\tLine bian=(Line){a,root};\n\tlon=bian.Length();\n\tprintf(\"%.7f\",ans*cos(Phi/ans)*sin(Phi/ans)*lon*lon);\n\treturn 0;\n}\n```",
        "postTime": 1524820804,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u51fa\u4e09\u4e2a\u70b9\uff0c\u6c42\u51fa\u4ee5\u8fd9\u4e09\u4e2a\u70b9\u4e3a\u5b9a\u70b9\u7684\u6700\u5c0f\u6b63\u591a\u8fb9\u5f62\u3002\n\u6c42\u6700\u5c0f\u6b63\u591a\u8fb9\u5f62\uff0c\u8fb9\u6570\u8d8a\u591a\uff0c\u9762\u79ef\u8d8a\u5927\uff0c\u6240\u4ee5\u8981\u662f\u6c42\u5f97\u7684\u591a\u8fb9\u5f62\u7684\u8fb9\u5c3d\u91cf\u7684\u5c0f\u3002\n\u7531\u4e09\u4e2a\u70b9\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\uff0c\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5916\u63a5\u5706\uff0c\u90a3\u4e48\u6b63\u591a\u8fb9\u5f62\u7684\u6240\u6709\u7684\u5b9a\u70b9\u5e94\u8be5\u90fd\u5728\u5706\u4e0a\uff0c\u6c42\u51fa\u4e09\u8fb9\u5bf9\u5e94\u7684\u5706\u5fc3\u89d2\uff0c\u627e\u51fa\u5706\u5fc3\u89d2\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u4e5f\u5c31\u5f97\u5230\u4e86\u591a\u8fb9\u5f62\u7684\u6700\u5c0f\u7684\u8fb9\u6570\u3002\n\u9632\u6b62\u949d\u89d2\u7684\u60c5\u51b5\uff0c\u8fb9\u957f\u6700\u957f\u7684\u5bf9\u5e94\u7684\u5706\u5fc3\u89d2 = 2*PI - \u5176\u4ed6\u4e24\u4e2a\u5706\u5fc3\u89d2\u3002\n\u76f4\u63a5\u8d34\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <cstring>\n#include <math.h>\n#include <algorithm>\nusing namespace std ;\n#define PI acos(-1)\n#define eqs 0.01\ndouble gcd(double a,double b)\n{\n    return a < eqs ? b : gcd(fmod(b,a),a);\n}\nint main()\n{\n    double x1 , y1 , x2 , y2 , x3 , y3 ;\n    double a , b , c , p , s , r , k ;\n    double A , B , C ;\n    scanf(\"%lf %lf %lf %lf %lf %lf\", &x1, &y1, &x2, &y2, &x3, &y3) ;\n    a = sqrt( (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2) ) ;\n    b = sqrt( (x2-x3)*(x2-x3) + (y2-y3)*(y2-y3) ) ;\n    c = sqrt( (x1-x3)*(x1-x3) + (y1-y3)*(y1-y3) ) ;\n    p = ( a + b + c ) / 2.0 ;\n    s = sqrt( p * (p-a) * (p-b) * (p-c) ) ;\n    r = a * b * c / ( 4 * s ) ;\n    if( a > c )\n    {\n        k = a ; a = c ; c = k ;\n    }\n    if( b > c )\n    {\n        k = b ; b = c ; c = k ;\n    }\n    A = 2 * asin(a/(2*r)) ;\n    B = 2 * asin(b/(2*r)) ;\n    C = 2 * PI - A - B ;\n    //printf(\"%lf %lf %lf\\n\", A, B, C) ;\n    p = gcd(A,B);\n    p = gcd(p,C) ;\n    //printf(\"%lf %lf\\n\", r, p) ;\n    printf(\"%.6lf\\n\", (PI*r*r*sin(p))/p ) ;\n    return 0;\n}\n```",
        "postTime": 1517497594,
        "uid": 55377,
        "name": "\u6211\u5f88\u8fa3ji\u770b\u7b7e\u540d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    },
    {
        "content": "### [blog](https://www.luogu.org/blog/cmine/)\u5185\u98df\u7528\u66f4\u4f73\n---\n### \u7b97\u6cd5:\n~~\u9ad8\u4e2d\u7684~~ \u89e3\u6790\u51e0\u4f55(\u89e3\u4e09\u89d2\u5f62) & \u679a\u4e3e\n\n---\n~~\u4ee5\u4e0b\u5185\u5bb9\u5e76\u6ca1\u6709\u56fe\u7247\uff0c\u8bf7\u81ea\u884c\u8111\u8865~~\n\n### \u524d\u7f6e\u829d\u58eb\uff1a\n\n<math.h>\u5934\u6587\u4ef6\u4e2d\u6709\u8bb8\u591a\u6709\u7528\u7684\u51fd\u6570 ~~(\u5e9f\u8bdd)~~\n\n\u5305\u62ec acos(),\u5bf9\u4e00\u4e2a\u7ed9\u5b9acos\u503c\u8fd4\u56de$[0,\\pi]$\u5185\u7684\u5f27\u5ea6\u89d2\n\n```cpp\ndouble Pi=acos(-1);//\u4e00\u4e2a\u7cbe\u5ea6\u4e0d\u9ad8\u7684pi\n```\n\u4ee5\u53cafmod()\u53ef\u4ee5\u5bf9\u6d6e\u70b9\u6570\u53d6\u6a21\n\n```\ndouble a,b;\nb=fmod(b,a);//b\u5bf9a\u53d6\u6a21\n```\n\n### \u6570\u5b66\u63a8\u8bba:\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u7ed9\u5b9a\u4e09\u89d2\u5f62\u7528\u5b83\u7684\u4e09\u6761\u8fb9\u8868\u793a,\u6bd4\u5982$\\{A,B,C\\}$\n\n\u6bcf\u6761\u8fb9\u5bf9\u5e94\u7684\u89d2\u662f\u5b83\u76f8\u5bf9\u5e94\u7684\u5c0f\u5199\u5b57\u6bcd\n\n\u6839\u636e\u4f59\u5f26\u5b9a\u7406\n\n$\\cos(a)=\\frac{-a^2+b^2+c^2}{2bc}$\n\n\u6240\u4ee5\u6709\u7ed9\u5b9a\u4e09\u89d2\u5f62\u7684\u89d2\u7684cos\u96c6\u5408\n\n$\\{\\cos(a)=\\frac{-a^2+b^2+c^2}{2bc},\\cos(b)=\\frac{a^2-b^2+c^2}{2ac},\\cos(c)=\\frac{a^2+b^2-c^2}{2ab}\\}$\n\n\u901a\u8fc7$acos()$\u51fd\u6570\n\n\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u89d2\u7684\u96c6\u5408\n\n$\\{a,b,c\\}$\n\n\u6211\u4eec\u8bbe\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u5916\u63a5\u5706\u7684\u5706\u5fc3\u662f\u70b9$R$,\u534a\u5f84\u662f$r$\n\n\u663e\u7136\u6709\u4e24\u4e2a\u7ed3\u8bba\n\n$\u2220ARB=2c,\u2220ARC=2b,\u2220BRC=2a$\n\n$r=\\frac{A}{\\sin(a)}=\\frac{A}{1-\\cos(a)^2}$\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a\u8986\u76d6\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u6b63\u591a\u8fb9\u5f62\n\n\u663e\u7136\u5728$r$\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u6b63\u591a\u8fb9\u5f62\u7684\u8fb9\u6570\u8d8a\u5c0f\uff0c\u5b83\u7684\u9762\u79ef\u5c31\u8d8a\u5c0f\n\n\u6211\u4eec\u5047\u8bbe\u5f97\u5230\u7684\u6b63\u591a\u8fb9\u5f62\u7684\u8fb9\u6570\u662f$s$\n\n\u8003\u8651\u6bcf\u4e2a\u9876\u70b9\u4e0e\u8fd9\u4e2a\u6b63\u591a\u8fb9\u5f62\u91cd\u5fc3\u8fde\u7ebf\u6240\u5f97\u5230\u4e00\u5806\u5168\u7b49\u7684\u4e09\u89d2\u5f62\n\n\u5bf9\u4e8e\u4efb\u610f\u7684\u4e09\u89d2\u5f62\u6709\u9762\u79ef\u516c\u5f0f\n\n$S=AB\\sin(c)$\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e2a\u5c0f\u4e09\u89d2\u5f62\u7684\u9762\u79ef\n\n$S=r^2\\sin(\\frac{\\pi}{s})$ \n\n\u6240\u4ee5\u6700\u540e\u7684\u6b63\u5927\u591a\u8fb9\u5f62\u7684\u9762\u79ef\u4e3a\n\n$r^2n\\sin(\\frac{\\pi}{s})$\n\n---\n\n### code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst double eps=1e-3;\n#define PI acos(-1)\nint main()\n{\n\tdouble x1,y1,x2,y2,x3,y3;\n\tcin>>x1>>y1>>x2>>y2>>x3>>y3;\n\tdouble A=sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)),B=sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3)),C=sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));\n\tdouble cosA=(C*C+B*B-A*A)/(2*B*C),cosB=(C*C+A*A-B*B)/(2*A*C),cosC=(A*A+B*B-C*C)/(2*A*B);\n\tdouble r=A/sqrt(1-cosA*cosA)/2.0;\n\tdouble degreeARC=2*acos(cosB)/PI*180,degreeARB=2*acos(cosC)/PI*180,degreeBRC=2*acos(cosA)/PI*180;\n\tint side;\n\tfor(int i=3;i<=100;i++)\n\t{\n\t\tdouble deg=360/(i*1.0);\n\t\tdouble moda=fmod(degreeARC,deg),modb=fmod(degreeBRC,deg),modc=fmod(degreeARB,deg);\n\t\tif(moda>3)\n\t\t\tmoda-=deg;\n\t\telse if(moda<-3)\n\t\t\tmoda+=deg;\n\t\tif(modb>3)\n\t\t\tmodb-=deg;\n\t\telse if(modb<-3)\n\t\t\tmodb+=deg;\n\t\tif(modc>3)\n\t\t\tmodc-=deg;\n\t\telse if(modc<-3)\n\t\t\tmodc+=deg;\n\t\tif(abs(moda)<=eps&&abs(modb)<=eps&&abs(modc)<=eps)\n\t\t{\n\t\t\tside=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%.6lf\\n\",0.5*sin(2*acos(-1)/side)*side*r*r);\n\treturn 0;\n}\n```\n\n---\n\n#### \u540e\u8bdd\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u6d6e\u70b9\u8bef\u5dee\u6781\u5927\uff0c\u6700\u5927\u53ef\u4e3a0.003\uff0c\u8fd8\u597dCF\u5224\u7684\u662f\u76f8\u5bf9\u8bef\u5dee",
        "postTime": 1571060257,
        "uid": 91013,
        "name": "hgoicjl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    },
    {
        "content": "Codeforces\u5237\u9898\u7b2c\u4e8c\u5929\u3002\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u9898\uff0c\u5927\u81f4\u9898\u610f\u4e3a\uff1a\u7ed9\u51fa\u591a\u8fb9\u5f62\n\n\u4e09\u4e2a\u9876\u70b9\uff0c\u6c42\u591a\u8fb9\u5f62\u6700\u5c0f\u9762\u79ef\u3002\u6211\u662f\u8fd9\u6837\u601d\u8003\u7684\uff1a\u9996\u5148\uff0c\u7531\u4e09\u4e2a\u70b9\u786e\u5b9a\u591a\u8fb9\u5f62\u5916\u63a5\n\n\u5706\uff0c\u518d\u6c42\u51fa\u5916\u63a5\u5706\u534a\u5f84\u3002\u7b2c\u4e8c\u6b65\uff0c\u6839\u636e\u4f59\u5f26\u5b9a\u7406\u6c42\u51fa\u4e09\u4e2a\u89d2\uff0c\u518d\u6c42\u51fa\u4e09\u8fb9\u5bf9\u5e94\u5706\u5fc3\n\n\u89d2\u3002\u7b2c\u4e09\u6b65\uff0c\u6839\u636e\u9898\u610f\uff1a\u591a\u8fb9\u5f62\u8fb9\u6570\u4e0d\u8d85\u8fc7100\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e3~100\u591a\u8fb9\u5f62\u7684\u4e2d\n\n\u5fc3\u89d2\uff0c\u4f5c\u9664\u6cd5\uff0c\u82e5\u4e09\u6761\u8fb9\u5bf9\u5e94\u5706\u5fc3\u89d2\u7686\u53ef\u6574\u9664\u4e2d\u5fc3\u89d2\uff0c\u5373\u53ef\u627e\u5230\u591a\u8fb9\u5f62\u7684\u6700\u5c0f\u8fb9\u957f\n\n\uff0c\u7ee7\u800c\u6c42\u5f97\u591a\u8fb9\u5f62\u6700\u5c0f\u9762\u79ef\u3002\n\n### \u6d77\u4f26\u516c\u5f0f\uff1a![](http://latex.codecogs.com/gif.latex?%5Cinline%20%5Cdpi%7B120%7D%20S%3D%5Csqrt%7Bp%5Cleft%20%28%20p-a%20%5Cright%20%29%5Cleft%20%28%20p-b%20%5Cright%20%29%5Cleft%20%28%20p-c%20%5Cright%20%29%7D%20%5Cleft%20%28%20p%3D%5Cfrac%7Ba&plus;b&plus;c%7D%7B2%7D%20%5Cright%20%29)\n\n### \u591a\u8fb9\u5f62\u9762\u79ef\u516c\u5f0f\uff1a![](http://latex.codecogs.com/gif.latex?%5Cinline%20%5Cdpi%7B120%7D%20S%3D%5Cfrac%7BnR%5E%7B2%7DsinA%7D%7B2%7D) \n\n\u6700\u540e\u505a\u4e86\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u8bbe\u4e09\u89d2\u5f62\u4e00\u4e2a\u5185\u89d2\u4e3a\u03b1,\u5219\u7531\u9898\u610f\u4e3a\uff1a![](http://latex.codecogs.com/gif.latex?%5Cdpi%7B120%7D%20%5Calpha%20%5Ccdot%202%5Cdiv%20%5Cleft%20%28%202%5Ccdot%20%5Cpi%20%5Cdiv%20i%20%5Cright%20%29%3D%5Calpha%20%5Cdiv%20%5Cpi%20%5Ccdot%20i)\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n------------\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#define pi 3.1415926\n#define eps 1e-4\nusing namespace std;\n\nstruct point\n{\n    double x,y;\n}Ti[3];\n\ndouble distance(point p1,point p2)        //\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\n{\n    return sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y));\n}\n\ndouble cosine(double a,double b,double c)     //\u4e09\u89d2\u5f62\u4f59\u5f26\u516c\u5f0f\n{\n    return acos((a*a+b*b-c*c)/(2*a*b));\n}\n\ndouble area(double a,double b,double c)     //\u8ba1\u7b97\u4e09\u89d2\u5f62\u5916\u63a5\u5706\u534a\u5f84\n{\n    double p=(a+b+c)/2;\n    double k=a*b*c/4;                      //R=abc/(4S);\n    return k/sqrt(p*(p-a)*(p-b)*(p-c));    //\u6d77\u4f26\u516c\u5f0f\u6c42\u4e09\u89d2\u5f62\u9762\u79ef\n}\n\nbool ok(double x)     //\u5224\u65adx\u662f\u5426\u4e3a\u6574\u5b9e\u6570(\u6ce8\u610f\u7cbe\u5ea6\uff09\n{\n    return fabs(x-(int)(x+0.05))<eps;  //\u52a00.05\u907f\u514d\u51fa\u73b00.9999\u7c7b\u578b\u8f6c\u5316\u4e3aint\u578b\u4e3a0\n}\n\nint main()\n{\n    int i,n;\n    double f[3],angle[3],quarter,r,s;\n    for(i=0;i<3;i++)\n        scanf(\"%lf %lf\",&Ti[i].x,&Ti[i].y);\n    f[0]=distance(Ti[0],Ti[1]);\n    f[1]=distance(Ti[0],Ti[2]);\n    f[2]=distance(Ti[1],Ti[2]);   //\u4e09\u89d2\u5f62\u4e09\u8fb9\n    angle[0]=cosine(f[1],f[2],f[0])/pi;\n    angle[1]=cosine(f[0],f[2],f[1])/pi;\n    angle[2]=cosine(f[0],f[1],f[2])/pi;     //\u4e09\u89d2\u5f62\u4e09\u4e2a\u89d2\uff08\u52a0\u4f18\u5316\uff09\n    r=area(f[0],f[1],f[2]);\n    for(i=3;i<=100;i++)\n    {\n        if(ok(angle[0]*i)&&ok(angle[1]*i)&&ok(angle[2]*i))     //\u679a\u4e3e\n        {\n            n=i;             //\u4f9d\u6b21\u53bb\u96643~100\u7684\u591a\u8fb9\u5f62\u5bf9\u5e94\u5706\u5fc3\u89d2\uff0c\u82e5\u53ef\u4ee5\u6574\u9664\uff0c\u5f97\u5230\u591a\u8fb9\u5f62\u8fb9\u6570\n            break;\n        }\n    }\n    quarter=2*pi/n;\n    s=n*r*r*sin(quarter)/2;       //\u516c\u5f0f\n    printf(\"%.6lf\\n\",s);\n    return 0;\n}\n\n```",
        "postTime": 1534741473,
        "uid": 103402,
        "name": "blackzoo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1C \u3010Ancient Berland Circus\u3011"
    }
]