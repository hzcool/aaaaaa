[
    {
        "content": "# CF786D Rap God\n## \u6c42\u8d5e\n\u4f5c\u4e3aRick and Morty\u591a\u5e74\u8111\u6b8b\u7c89\uff0c\u770b\u5230\u56fe\u7247\u5c31\u809d\u9898\u4e86    \n\u8fd9\u9053\u9898\u6076\u5fc3\u7684\u79bb\u8c31    \n\u636e\u8c03\u67e5\uff1a   \n```\n\u6b63\u5f0f\u6bd4\u8d5b\u4e2d\uff0c\u53ea\u6709MiFaFaOvO\u8fc7\u4e86\uff0c\u4e14(\u662f\u66b4\u529b?)    \nCF\u4e0a\u8fd9\u9053\u9898\u7684\u6b63\u5f0f\u8bc4\u5206\u662f*3400\uff0c\u6781\u96be   \n``` \n\u6211\u53d1\u73b0\u9898\u89e3\u552f\u4e00\u4e00\u7bc7\u662f\u4e2a\u66b4\u529b\uff0c\u5c31\u6765\u53d1\u4e2a\u590d\u6742\u5ea6\u4e25\u683c\u7684\u505a\u6cd5      \n\u6211\u662f\u53bb\u7ffb\u4e86\u5b98\u65b9\u9898\u89e3\u7684\uff0c\u6240\u4ee5\u4e0d\u662f\u6284   \n## \u63d0\u793a\uff1a\u6253\u6b63\u89e3\u8981\u505a\u597d\u62535kb\u53ca\u4ee5\u4e0a\u7684\u51c6\u5907     \n\u5982\u679c\u4e0d\u60f3\u6253\u90a3\u4e48\u591a\u8fd8\u662f\u53bb\u6253\u66b4\u529b\u5427(     \n\u53cd\u6b63\u76ee\u524d\u6211\u8dd1\u5230\u6700\u4f18\u89e3   \n\uff08\u8bdd\u8bf4\u4e0d\u662f\u603b\u5171\u624d5\u4e2a\u4eba\u505a\u4e86\u8fd9\u9053\u9898\uff09    \n# 1.\u9898\u76ee\u5927\u610f    \nRick Sanchez\u7ed9\u4f60\u4e00\u9897\u6811\uff0c\u6811\u8fb9\u4e0a\u6709\u5c0f\u5199\u5b57\u6bcd    \n\u6bcf\u6b21\u8be2\u95ee\u4e00\u5bf9$(x,y)$    \n\u8868\u793a\u95ee\u6709\u591a\u5c11\u4e2a\u70b9\u5bf9$(x,z)$\u6ee1\u8db3\uff1a   \n$$z\\neq x \\; z\\neq y$$      \n\u5e76\u4e14$(x,y)$\u7684\u5b57\u5178\u5e8f**\u5927\u4e8e**$(x,z)$\u7684\u5b57\u5178\u5e8f     \n$$n,q \\leq 2\\times 10^4$$    \n# 2.\u524d\u671f\u94fa\u57ab    \n## (1)\u70b9\u5206\u6cbb  \n\u9996\u5148\uff0c\u8981\u628a\u6574\u68f5\u6811\u70b9\u5206\u6cbb    \n\u4e0d\u4ec5\u8981\u70b9\u5206\u6cbb\uff0c\u8fd8\u8981\u8bb0\u5f55\u8bb8\u591a\u4fe1\u606f    \n\u4e3b\u8981\u7684\u63a5\u4e0b\u6765\u518d\u8bf4    \n\u4f60\u5148\u53ea\u8981\u76f4\u5230\u8bb0\u5f55\uff1a   \n```\n\u6bcf\u4e00\u5c42\u91cd\u5fc3   \n\u6bcf\u4e00\u4e2a\u70b9\u5728\u6bcf\u4e00\u5c42\u6240\u5c5e\u91cd\u5fc3  \n```\n## (2)\u500d\u589e\u79d1\u6280   \n\u4e0d\u4f1a\u5176\u5b9e\u5f88\u6709\u5173\u7cfb\u2014\u2014\u4e0d\u7136\u4f60\u600e\u4e48\u6c42LCA\uff1f    \n\uff08\u4e0d\u63a5\u53d7\u6811\u94fe\u5256\u5206\u515a\u53cd\u9a73\uff09    \n## (3)\u54c8\u5e0c\u79d1\u6280    \n\u8fd9\u9053\u9898\u6700\u6bd2\u7624\u7684\u5730\u65b9\u4e4b\u4e00    \n\u4f60\u9700\u8981\u4f1a\uff1a    \n\u6c42\u54c8\u5e0c\u6b21\u65b9\u9884\u5904\u7406    \n\u5408\u5e76\u54c8\u5e0c\u503c    \n## (4)Trie    \n\u666e\u901a\u7684Trie\u5373\u53ef    \n# 3.\u6b63\u7247\u5f00\u59cb   \n## (1)\u5206\u6cbb   \n\u6211\u4eec\u53ef\u4ee5\u753b\u56fe   \n![](https://cdn.luogu.com.cn/upload/image_hosting/bu8jqsmb.png)   \n\u8fd9\u662f\u6837\u4f8b\u4e8c\u7684\u56fe\u7247    \n\u6211\u4eec\u4ee5**\u7b2c\u4e00\u4e2a**\u8be2\u95ee\u4e3e\u4f8b    \n![](https://cdn.luogu.com.cn/upload/image_hosting/dzkcvcwe.png)    \n$8$\u662f\u8d77\u70b9    \n$6$\u662f\u7ec8\u70b9    \n\u4f60\u80af\u5b9a\u4f1a\u95ee\u95ee\u4ec0\u4e48\u4e2d\u95f4\u7684$3$\u4e00\u526f\u52a0\u5195\u4e3a\u738b\u7684\u6837\u5b50    \n\u90a3\u5f53\u7136\u662f\u56e0\u4e3a\u5979\u662f\u91cd\u5fc3\u4e86    \n\u5bb9\u6613\u53d1\u73b0\uff0c$3$\u5373\u4e3a\u539f\u56fe\u7684\u91cd\u5fc3    \n\u6211\u4eec\u601d\u8003\u91cd\u5fc3\u7684\u6027\u8d28\uff1a\u6700\u5927\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7\u4e00\u534a    \n\u8fd9\u4ee3\u8868\u7740\u6211\u4eec\u9012\u5f52\u505a\u590d\u6742\u5ea6\u662f\u6709\u4fdd\u8bc1\u7684    \n\u4e0d\u59a8\u628a\u56fe\u62bd\u8c61\u6210\u8fd9\u6837\uff1a    \n![](https://cdn.luogu.com.cn/upload/image_hosting/mtes0m96.png)   \n\u8bbe\u5f53\u524d\u91cd\u5fc3\u4e3aC    \n\u6211\u4eec\u628a\u70b9\u5206\u4e3a\u4e24\u7c7b\uff1a   \n```\n1.\u4e0d\u5728u\u6240\u5904\u5b50\u6811\u4e2d    \n2.\u5728u\u6240\u5904\u5b50\u6811\u4e2d    \n```\nPS\uff1a$V$\u6211\u4eec\u9e1f\u90fd\u4e0d\u9e1f\u5979     \n\u90a3\u4e48\u7b2c\u4e8c\u7c7b\u70b9\u662f\u53ef\u4ee5\u7ee7\u7eed\u9012\u5f52$u$\u6240\u5728\u5b50\u6811\u6765\u505a\u7684    \n\u6709\u56e0\u4e3a\u91cd\u5fc3\u6027\u8d28\uff0c\u8fd9\u6837\u9012\u5f52\u662f$O(logn)$\u7684     \n\u73b0\u5728\u8981\u89e3\u51b3\u7684\u662f\u7b2c\u4e00\u7c7b\u70b9\u7684\u7b54\u6848    \n\u518d\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u7684\u6761\u4ef6\uff1a   \n$(x,y)$\u7684\u5b57\u5178\u5e8f**\u5927\u4e8e**$(x,z)$\u7684\u5b57\u5178\u5e8f     \n\u90a3\u4e48\u4f60\u4ece$u$\u51fa\u53bb\u4e00\u5b9a\u5f97\u5148\u5230$C$\uff0c\u5bf9\u4e0d\u5bf9\uff1f   \n\u53ef\u4ee5\u5148\u505a\u4e00\u4e0b$(u,v)$\u4ee5\u53ca$(u,c)$\u7684$lcp$\uff0c\u7136\u540e\u5224\u65ad\u4e0b\u4e00\u4f4d    \n\u81f3\u4e8e\u6811\u4e0a\u7684$lcp$\u600e\u4e48\u6c42\uff0c\u8fd9\u91cc\u7b80\u8ff0\u4e00\u4e0b    \n\u5982\u679c\u662f\u5e8f\u5217\u7684\u8bdd\u76f4\u63a5$hush$+\u4e8c\u5206\u5373\u53ef    \n\u5176\u5b9e\u6811\u4e0a\u7c7b\u4f3c    \n\u4e5f\u53ef\u4ee5\u5148\u4e8c\u5206$lcp$\uff0c\u7136\u540e\u6211\u4eec\u5728\u4e24\u6761\u6811\u94fe\u4e0a\u8df3\u6765\u8df3\u53bb    \n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u4f60\u8981\u8bb0\u5f55\u5979\uff1a   \n```\n\u5411\u4e0a\u8df32^i\u6b21\u7684hush   \n\u5411\u4e0a\u8df32^i\u6b21\u7684\u53cd\u5411hush   \n```\n\u53cd\u5411\u662f\u4e3a\u4e86\u5411\u4e0b\u8df3\u65b9\u4fbf    \n\u8fd9\u6837\u5b50\u53ef\u4ee5\u89e3\u51b3\u6811\u4e0a$lcp$    \n\u63a5\u7740\u56de\u5230\u6211\u4eec\u7684\u95ee\u9898    \n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u5224\u65ad\u51fa$(u,v)$\u548c$(u,C)$\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\u6bd4\u8f83    \n\u6309\u7167\u5b98\u65b9\u7ed9\u51fa\u7684\u89e3\u91ca\u53ef\u4ee5\u7ed9\u51fa\u4e09\u7c7b    \n### 1.(u,v)\u66f4\u5c0f   \n\u8fd9\u6837\u5b50\u6211\u5df2\u7ecf\u6bd4(u,v)\u5927\u4e86\uff0c\u600e\u6837\u90fd\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e   \n### 2.(u,v)\u66f4\u5927\u4e14(u,C)\u4e0d\u662f(u,v)\u7684\u524d\u7f00   \n\u8fd9\u4e2a\u610f\u601d\u5c31\u662f$(u,C)$\u540e\u9762\u52a0\u4ec0\u4e48\u90fd\u4e00\u5b9a\u6bd4$(u,v)$\u5c0f    \n\u90a3\u4e48\u9664\u4e86$u$\u6240\u5728\u5b50\u6811\u7684\u5176\u4f59\u8282\u70b9\u90fd\u53ef\u4ee5\u4ea7\u751f\u8d21\u732e    \n### 3.\u5269\u4f59\u60c5\u51b5    \n\u8fd9\u4e2a\u662f\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u70e6\u7684\u60c5\u51b5  \n\u6211\u4eec\u8981\u8fd0\u7528\u5230\u4e0a\u8ff0\u4e00\u5207\u77e5\u8bc6    \n\u6211\u4eec\u8981\uff08\u5316\u7b80\uff1f\uff09    \n\u56e0\u4e3a$(u,v)$\u548c$(u,C)$\u662f\u6709$lcp$\u7684     \n\u90a3\u4e48\u53ef\u4ee5\u8bbe\u4e00\u4e2a$w$\u4f7f\u5f97$(u,w)=(u,C)$    \n\u6839\u636e\u5b57\u7b26\u4e32\u52a0\u6cd5\uff0c$(u,v)=(u,w)+(w,v)$    \n\u5927\u5bb6\u53ef\u4ee5\u4e00\u8d77\u6d88\u6389$lcp$   \n\n\u73b0\u5728\u7684\u95ee\u9898\u53c8\u53cc\u53d2\u53d5\u53d8\u6210\uff1a    \n------------------------\n\u5bf9\u4e8e\u91cd\u5fc3$C$\u5f62\u6210\u7684\u5b50\u6811\uff0c\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u6ee1\u8db3\uff1a    \n1.\u4e0d\u5728$u$\u6240\u5728\u5b50\u6811    \n2.\u4ece$C$\u5230\u70b9\u7684\u5b57\u7b26\u4e32\u5b57\u5178\u5e8f\u6bd4$(w,v)$\u5c0f    \n\u8fd9\u6837\u7684\u70b9\u8ba1\u6570    \n\u8fd9\u53c8\u662f\u4e00\u4e2a\u795e\u70e6\u7684\u95ee\u9898   \n\u53ef\u4ee5\u5bf9\u4e8e\u70b9$C$\u5efa\u51faTrie\u6811    \n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u5b57\u7b26\u4e32\u57fa\u4e8e\u7236\u4eb2\uff0c\u6240\u4ee5\u603b\u70b9\u6570\u662f$nlogn$    \n\u679c\u7136\u6ca1\u6709\u56fe\u8fd8\u662f\u592a\u62bd\u8c61    \n![](https://cdn.luogu.com.cn/upload/image_hosting/p3xq90zc.png)   \n\u8fd9\u5c31\u662f$3$\u4e3a\u6839\uff0c\u6837\u4f8b2\u7684trie    \n\u6700\u53f3\u8fb9\u9519\u4e86\uff0c\u4e0d\u7ba1\u5979    \n\u603b\u4e4b\u6211\u4eec\u73b0\u5728\u60f3\u8981\u5728trie\u4e0a\u627e\u6bd4$(w,v)$\u5c0f\u7684   \n\u53ef\u4ee5\u4e00\u8defdfs\u4e0b\u53bb   \n\u7136\u540e\u5c31\u4f1aTLE    \n## \u6709\u4e09\u79cd\u89e3\u51b3\u65b9\u6cd5\uff1a  \n### 1.\u4e0d\u8981\u770b\u9898\u89e3\u4e86\uff0c\u6572\u66b4\u529b\u53bb\u5427    \n### 2.O(nlog^4n)\u8fa3\u9e21\u505a\u6cd5    \n\u8fd9\u662f\u6211\u81ea\u5df1\u641e\u7684   \n\u5927\u6982\u5c31\u662f\u5efa\u51fatrie\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u91cd\u5fc3\u5c06\u7236\u4eb2\u5230\u513f\u5b50\u7684\u5b57\u7b26\u4e32\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f     \n\u6392\u5e8f\u8fc7\u540e\u751f\u6210\u4e00\u4e32pos    \n\u8868\u793a\u6392\u540d\u7b2c$i$\u7684\u5b57\u7b26\u4e32\u7ed3\u5c3e    \n\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u4e8c\u5206\u6392\u5b8c\u5e8f\u7684pos\u5e8f\u5217    \n\u5bf9\u4e8e\u4e8c\u5206\u5230\u7684\u548c$(w,v)$\u7528$hush$+\u4e8c\u5206+\u500d\u589e\u6bd4\u8f83\u4e00\u4e0b    \n\u6bd4\u8f83\uff1a$O(log^2n)$   \n\u5728\u5408\u4e0a\u4e8c\u5206\u548c\u70b9\u5206\u6cbb\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a   \n$O(qlog^4n)$   \n\u8dd1\u5f97\u4e0d\u5982\u66b4\u529b    \nTLE on test 12    \n### 3.O(nlog^3n)\u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u786e\u505a\u6cd5   \n\u5b98\u65b9\u9898\u89e3\u91cc\u8fd9\u4e00\u90e8\u5206\u539f\u8bdd\u662f\uff1a   \n```\n\u4f7f\u7528\u4e00\u4e2aDFS\u6784\u9020\u6240\u6709str\uff08c\uff0c\u2009z\uff09\u7684trie \n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\u67e5\u627estr\uff08w\uff0c\u2009y\uff09\u5728trie\u4e2d\u7684\u4f4d\u7f6e\n\uff08\u4f7f\u7528\u54c8\u5e0c\u548c\u4e8c\u8fdb\u5236\u641c\u7d22\uff09\n\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u60a8\u9700\u8981\u627e\u5230trie\u4e2dstr\uff08w\uff0c\u2009y\uff09\u548c\u5b57\u7b26\u4e32\u7684LCP\n\u4ee5\u786e\u5b9atrie\u4e2d\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u5c0f\u4e8estr\uff08w\uff0c\u2009y\uff09\u3002\n``` \n\u6211\u662f\u4e0d\u592a\u660e\u767d   \n\u5c31\u6309\u7167\u81ea\u5df1\u7684\u7406\u89e3\u6253\u4e86   \n\u6211\u60f3\u7684\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u91cd\u5fc3   \n\u6bcf\u4e00\u4e2a\u8282\u70b9\u5047\u8bbe\u6709\u4e09\u4e2a\u5173\u952e\u5b57\uff1a   \n```\n1.\u6df1\u5ea6\n2.hush\u503c\n3.trie\u4e2d\u6392\u540d\n```\n\u7136\u540e\u6211\u91c7\u7528\u4e86\u4e8c\u5206\u5957\u4e8c\u5206    \n\u51c6\u786e\u6765\u8bf4\u5c31\u662f\u7b2c\u4e00\u5c42\u4e8c\u5206\u6df1\u5ea6\uff08\u5373$(w,v)$\u4e0etrie\u7684lcp\uff09    \n\u7b2c\u4e8c\u5c42\u4e8c\u5206hush\u503c   \n\u627e\u5230\u6709\u6ca1\u6709\u548c$(w,v)$\u524d$mid$\u4e2a\u7684$hush$\u4e00\u6837\u7684$hush$   \n\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u6c42\u51fa$(w,v)$\u548c$trie$\u7684$lcp$    \n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a   \n\u4e24\u4e2a\u4e8c\u5206\uff0c\u662f$O(log^2n)$\u7684   \n\u800c\u4e14\u5176\u5b9e\u6240\u6709\u5143\u7d20\u52a0\u5728\u4e00\u8d77\u624d\u662f$n$    \n\u6240\u4ee5\u8c8c\u4f3c\u662f$O(log^2\\sqrt{n})$\u7684    \n\u6240\u4ee5\u8fd8\u662f\u86ee\u5feb\u7684   \n\u4f46\u662f\u6211\u4eec\u5ffd\u7565\u4e86$u$\u6240\u5728\u5b50\u6811    \n\u8981\u7528\u5bb9\u65a5\u51cf\u6389    \n\u8fd9\u4e2a\u51cf\u6cd5...\u6211\u8fd8\u662f\u7528\u4e86\u4e8c\u5206    \n\u6211\u4eec\u76f4\u5230\u524d$ans$\u7684$C$\u7684\u513f\u5b50\u94fe\u90fd\u662f\u5408\u6cd5\u7684   \n\u90a3\u4e48\u53ea\u8981\u6570\u524d$ans$\u7684\u94fe\u5f53\u4e2d\u591a\u5c11\u70b9\u4f4d\u4e8e$u$\u6240\u5728\u5b50\u6811   \n\u6211\u7684\u505a\u6cd5\u662f\u628a$u$\u6240\u5728\u5b50\u6811\u6240\u6709\u6392\u540d\u62ff\u51fa\uff0c\u518d\u6392\u5e8f    \n\u8fd9\u6837\u5b50\u518d\u4e8c\u5206   \n\u662f\u4e00\u652f$log$\u7684   \n### \u8fb9\u754c\u6761\u4ef6\uff1a   \n\u5982\u679c$u$\u5df2\u7ecf\u4e0d\u5728\u8fd9\u4e2a\u91cd\u5fc3\u7684\u5b50\u6811\u4e2d\uff0c\u5c31\u4e0d\u9700\u8981\u505a\u4e86    \n\u56e0\u4e3a\u5f53$u$\u81ea\u5df1\u662f\u91cd\u5fc3\u7684\u65f6\u5019\u5c31\u4f1a\u505a\u5230\u4e86    \n### \u4e00\u4e9b\u5386\u7a0b\uff1a   \n\u4e00\u5f00\u59cb\u6253\u4e86\u90a3\u4e2a$O(nlog^4n)$\u7684\u505a\u6cd5     \n\u5c31\u82b1\u4e86\u4e00\u6574\u5929    \n\u8fd8\u5361\u4e0d\u8fc7\u53bb    \n\u53cd\u6b63\u5c31\u662f\u4e0d\u505c\u7684WA    \n\u8fd8\u6709\u5c31\u662f\u6700\u8ba9\u4eba\u7206\u70b8\u7684\u4e8b\u60c5    \n\u4e00\u76f4\u8fc7\u4e0d\u53bb$TEST 43$   \n\u6211\u5148\u628a\u90a3\u4e00\u4f4d\u7279\u5224\u6389\u4e86   \n\u7ed3\u679c\u5c31\u662f\u9762\u5411\u6570\u636e\u8fc7\u4e86    \n\u4e5f\u5c31\u662f\u8fd9$55$\u4e2a\u6d4b\u8bd5\u70b9\u53ea\u6709\u4e00\u4e2a\u67e5\u8be2\u51fa\u4e86\u5c0f\u95ee\u9898    \n\u7136\u540e\u53c8\u662f\u4e00\u4e2a\u4e0b\u5348    \n\u6700\u540e\u624d\u60f3\u5230\u53c8\u53ef\u80fd$hush$\u51b2\u7a81\u4e86    \n\u539f\u6765\u7684\u6a21\u6570\u662f$1234567891$   \n\u76f8\u4fe1\u5e94\u8be5\u6ca1\u4ec0\u4e48\u4eba\u77e5\u9053    \n\u7ed3\u679c\u6539\u6210$998244353$\u5c31\u8fc7\u4e86    \n\u5979\u7adf\u7136\u76f4\u63a5\u628a\u6211$hush$\u5361\u4e86\uff1f   \n\u6211\u5bfb\u601d\u8fd9\u4e2a\u6a21\u6570\u4e5f\u4e0d\u662f\u5f88\u7279\u6b8a\u554a   \n\u53cd\u6b63\u5c31\u662f\u9634\u5dee\u9633\u9519    \n\u5199\u4e00\u6b65\u8c03\u4e00\u6b65   \n\u6700\u540e\u52a0\u4e0a\u8c03\u8bd5\u90fd\u4e0a600\u884c\u4e86   \n\u8fd9\u53ef\u80fd\u662f\u6211\u6253\u8fc7\u6700\u957f\u3001\u6700\u67af\u71e5\u7684\u4ee3\u7801\u4e86   \n\u6211...\u4eba\u50bb   \n\u559c\u6b22\u7528\u65e0\u7528\u52b3\u52a8\u66ff\u4ee3\u52a8\u8111   \n\u6700\u540e\u5c31**17kb**\u4e86     \n\u4ee3\u7801\uff1a   \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=21005;\ntypedef long long ll;\n#define il inline \nll mod=998244353ll;\nll base=70134ll;\nstruct node{\n\tll hush;\n\tint nody;//????????? \n}; \nint n,q;\nint hed[N],tal[N<<1],nxt[N<<1],cnt=0;\nchar val[N<<1];//\u00b7???????? \nchar c[2];\nint dep[N];//??? \nint father[N];//??????????? \nll hush_rt[N],hush_po[N];//????????????????????????? \nll hus[N];//????????? \nint isrt[N];//????????\u03bb???????????? \nvector<int> rtt[20];//????????????\u0429?????????? \nint son[N],size[N];//?????/??????\u0421 \nbool used[N];//?????????\u0435??????? \nint pointy;\nint maxn;\nvector<int> trie[N][30];//????trie \nvector<vector<int> > va[N];//trie????? \nint nod[N]={0};//???????????????????\u0421 \nvector<int> final[N];//????????????? \nvector<int> init;\nvector<vector<node> > discont[N];//????????????????????????????????????????? \nbool operator <(node x,node y){\n\treturn x.hush<y.hush; \n}\nint jump[N][20];//???????? \nll hush1[N][20];//???\nll hush2[N][20]; \nint QX,QY,QLCA,QCAL,QLEN;//????? \nint bel[N][20];//bel[i][j]???i?????j?????????????\nint b[N][20];//be[i][j]???i????j????????? \nvector<int> nexty[N];//nexty[i]???i??????????????????? \nvector<int> str[N];//str[i][j]?????i??????j???trie???????? \nint SIZE[N];//SIZE[i]?????i??????????\u0421 \nint Count=0; \nint ANS=0;\nint id[N]; \nint dis[N];\nint indexy[N];\nint zzzzz=0;\nint maxnnnn;\nvector<node> inint; \nvector<int> maxn_sub[N];//maxn_sub[i][j]?????i????????\u0423?trie??j????????????????? \nvector<vector<int> > noe[N];//noe[i][j]?????i??????\u0423?j???????\u03b3???????????vector \nil void addege(int x,int y,char z){\n\tcnt++;\n\ttal[cnt]=y;\n\tval[cnt]=z;\n\tnxt[cnt]=hed[x];\n\thed[x]=cnt;\n}\nil void dfs(int u,int fa){\n\tjump[u][0]=fa;\n\tfor(int i=hed[u];i;i=nxt[i]){\n\t\tint v=tal[i];\n\t\tif(v==fa)  continue;\n\t\tdep[v]=dep[u]+1;\n\t\tll va=(val[i]-'a'+1);\n\t\thush1[v][0]=va;\n\t\thush2[v][0]=va;\n\t\thush_rt[v]=(hush_rt[u]*base+va)%mod;\n\t\thush_po[v]=(hush_po[u]+(va*hus[dep[v]-2]%mod))%mod;\n\t\tdfs(v,u);\n\t}\n} \nil void find(int u,int fa){\n\tsize[u]=1;\n\tmaxn++;\n\tfor(int i=hed[u];i;i=nxt[i]){\n\t\tint v=tal[i];\n\t\tif(v==fa||used[v]) continue;\n\t\tfind(v,u);\n\t\tsize[u]+=size[v];\n\t\tson[u]=max(son[u],size[v]);\n\t}\t\n} \nil void add(int u,int fa){\n\tson[u]=max(son[u],maxn-size[u]);\n\tif(son[u]<son[pointy]) pointy=u;\n\tfor(int i=hed[u];i;i=nxt[i]){\n\t\tint v=tal[i];\n\t\tif(v==fa||used[v]) continue;\n\t\tadd(v,u);\n\t}\t\n} \nil void clear(int u,int fa){\n\tsize[u]=0;\n\tson[u]=0;\n\tfor(int i=hed[u];i;i=nxt[i]){\n\t\tint v=tal[i];\n\t\tif(v==fa||used[v]) continue;\n\t\tclear(v,u);\n\t}\n}\nil void findp(int v){//?????? \n\tpointy=0;\n\tclear(v,v);//???size??son \n\tmaxn=0;\n\tpointy=0;\n\tfind(v,v);\n\tadd(v,v);\n} \nil void dfs_modify1(int step,int u,int fa,int val,int noddd){\n\t//cout<<u<<\" *** \"<<step<<\" *** \"<<noddd<<endl;\n\tbel[u][step]=val;\n\tb[u][step]=noddd;\n\tfor(int i=hed[u];i;i=nxt[i]){\n\t\tint v=tal[i];\n\t\tif(v==fa||used[v]) continue;\n\t\tdfs_modify1(step,v,u,val,noddd);\n\t}\n}\nil void dfs_modify2(int step,int u,int fa,int val){\n\t//cout<<u<<\" *** \"<<step<<\" *** \"<<noddd<<endl;\n\tbel[u][step]=val;\n\tfor(int i=hed[u];i;i=nxt[i]){\n\t\tint v=tal[i];\n\t\tif(v==fa||used[v]) continue;\n\t\tdfs_modify2(step,v,u,val);\n\t}\n}\nil void split(int exroot,int depth){\n\tclear(exroot,exroot);\n\tfindp(exroot);\n\tint rt=pointy;\n\tisrt[rt]=depth;\n\trtt[depth].push_back(rt);\n\tint dd=pointy;\n\tSIZE[rt]=maxn; \n\tb[rt][depth]=rt;\n\tint ppt=0;\n\tdfs_modify1(depth,exroot,exroot,0,dd);\n\tused[rt]=1;\n\tbel[rt][depth]=0;\n\tnoe[rt].push_back(init);\n\tfor(int i=hed[rt];i;i=nxt[i]){\n\t\tint v=tal[i];\n\t\tif(used[v]) continue;\n\t\tfindp(v);\n\t\tnexty[dd].push_back(pointy);\n\t\t++ppt;\n\t\tid[pointy]=ppt;\n\t\tdis[pointy]=val[i]-'a'+1;\n\t\tindexy[pointy]=v; \n\t\tdfs_modify2(depth,v,v,ppt);\n\t\tnoe[rt].push_back(init);\n\t\tsplit(v,depth+1);\n\t}\n}\nil void dfs_str(int u,int fa,int RT,int pos){\n\tfor(int i=hed[u];i;i=nxt[i]){\n\t\tint v=tal[i];\n\t\tif(v==fa||used[v]) continue;\n\t\tif(!trie[RT][val[i]-'a'][pos-1]){\n\t\t\tnod[RT]++;\n\t\t\tva[RT].push_back(init);\n\t\t\tva[RT][nod[RT]-1].push_back(v);\n\t\t\ttrie[RT][val[i]-'a'][pos-1]=nod[RT];\n\t\t\tfor(int k=0;k<=25;k++) trie[RT][k].push_back(0);\n\t\t\tstr[RT].push_back(0);\n\t\t\tmaxn_sub[RT].push_back(0);\n\t\t\tdfs_str(v,u,RT,nod[RT]);\n\t\t}\n\t\telse{\n\t\t\tva[RT][trie[RT][val[i]-'a'][pos-1]-1].push_back(v);\n\t\t\tdfs_str(v,u,RT,trie[RT][val[i]-'a'][pos-1]);\n\t\t}\n\t}\n}\nil void make_Trie(){\n\tfor(int i=1;i<=16;i++){\n\t\tfor(int j=0;j<rtt[i].size();j++){\n\t\t\tint RT=rtt[i][j];\n\t\t\tnod[RT]=1;\n\t\t\t\n\t\t\tva[RT].push_back(init);\n\t\t\tstr[RT].push_back(0);\n\t\t\tmaxn_sub[RT].push_back(0);\n\t\t\tva[RT][0].push_back(RT); \n\t\t\tfor(int k=0;k<=25;k++) trie[RT][k].push_back(0);\n\t\t\tdfs_str(RT,RT,RT,1);\n\t\t\tused[RT]=1;\n\t\t}\n\t}\n}\nil void dfs_first(int RT,int u,int depth){\n\t\n\tmaxnnnn=max(maxnnnn,depth);\n\tfor(int i=0;i<=25;i++){\n\t\tif(!trie[RT][i][u-1]) continue;\n\t\tdfs_first(RT,trie[RT][i][u-1],depth+1);\n\t}\n}\nil void dfs_cal(int RT,int u,int depth,ll hushi,int len){\n\tzzzzz=max(zzzzz,len);\n\tfor(int i=0;i<va[RT][u-1].size();i++){\n\t\tfinal[RT].push_back(va[RT][u-1][i]);\n\t\tnoe[RT][bel[va[RT][u-1][i]][depth]].push_back(final[RT].size());\n\t\tCount++;\n\t\tdiscont[RT][len].push_back((node){hushi,u});\n\t}\n\tstr[RT][u-1]=Count;\n\tmaxn_sub[RT][u-1]=Count;\n\tfor(int i=0;i<=25;i++){ \n\t\tif(!trie[RT][i][u-1]) continue;\n\t\tdfs_cal(RT,trie[RT][i][u-1],depth,(hushi*base%mod)+(i+1)%mod,len+1); \n\t\tmaxn_sub[RT][u-1]=max(maxn_sub[RT][u-1],maxn_sub[RT][trie[RT][i][u-1]-1]);\n\t}\n} \nil void dfs_second(int RT,int u,int value){\n\tint sum=0;\n\tfor(int i=0;i<=25;i++){\n\t\tif(!trie[RT][i][u-1]) continue;\n\t\tdfs_second(RT,trie[RT][i][u-1],sum);\n\t}\n}\nil void sorty(){\n\tfor(int i=1;i<=16;i++){\n\t\tfor(int j=0;j<rtt[i].size();j++){\n\t\t\t\n\t\t\tint RT=rtt[i][j];\n\t\t//\tcout<<RT<<\"  *******************\"<<endl;\n\t\t//\tcout<<RT<<\" \"<<maxnnnn<<\" \"<<zzzzz<<endl;\n\t\t\tmaxnnnn=0;\n\t\t\tdfs_first(RT,1,0);\n\t\t\tfor(int k=0;k<=maxnnnn;k++) discont[RT].push_back(inint);\n\t\t\t\n\t\t\t//final[RT].push_back(RT);\n\t\t\tCount=0;\n\t\t\tzzzzz=0;\n\t\t\tdfs_cal(RT,1,i,0ll,0);\n\t\t\t\n\t\t\tfor(int k=0;k<=zzzzz;k++){\n\t\t\t\tsort(discont[RT][k].begin(),discont[RT][k].end());\n\t\t\t}\n\t\t\tdfs_second(RT,1,0);\n\t\t\t\n\t\t}\n\t}\n}\nil int LCA(int x,int y){//????LCA\n\tif(dep[x]>dep[y]) swap(x,y);\n\tfor(int i=16;i>=0;i--) if(dep[jump[y][i]]>=dep[x]) y=jump[y][i];\n\tif(x==y) return x;\n\tfor(int i=16;i>=0;i--) if(jump[x][i]!=jump[y][i]) x=jump[x][i],y=jump[y][i];\n\tx=jump[x][0];\n\treturn x;\n}\nil ll hushjump1(int x,int y){\n\tif(x==y) return 0;\n\tll sum=0ll;\n\tfor(int i=16;i>=0;i--) if(dep[jump[x][i]]>dep[y]) sum=((sum*hus[1<<i]%mod)+hush1[x][i])%mod,x=jump[x][i];\n\tsum=((sum*hus[1<<0]%mod)+hush1[x][0])%mod;\n\treturn sum;\n}\nil ll hushjump2(int x,int y){\n\tif(x==y) return 0;\n\tll sum=0ll,cont=0;\n\tfor(int i=16;i>=0;i--) if(dep[jump[y][i]]>dep[x]) sum=((hush2[y][i]*hus[cont]%mod)+sum)%mod,cont+=1ll<<i,y=jump[y][i];\n\tsum=((hush2[y][0]*hus[cont]%mod)+sum)%mod,cont+=1ll<<0,y=jump[y][0];\n\treturn sum;\n}\nil int calcnum(int x,int y){\n\tif(x==y) return 0;\n\tint sum=0;\n\tfor(int i=16;i>=0;i--){\n\t\tif(dep[jump[x][i]]>dep[y]){\n\t\t\tsum+=(1<<i);\n\t\t\tx=jump[x][i];\n\t\t}\n\t}\n\tsum++;\n\treturn sum;\n} \nil ll hushit(int x,int y){//??????x->y????? \n\tif(x==y) return 0;\n\tll sum=0;\n\tint lca=LCA(x,y);\n\t//??x->LCA\n\tsum=hushjump1(x,lca);\n\tsum=((sum*hus[calcnum(y,lca)]%mod)+hushjump2(lca,y))%mod;\n\treturn sum;\n}\nil int que(int x,int y,int l){\n\tif(l==0) return x;\n\tl--;\n\tfor(int i=16;i>=0;i--) if(l&(1<<i)) x=jump[x][i];\n\treturn jump[x][0];\n} \nil int jump_it(int x,int y,int lca,int l,int len,int cal){\n\tif(l>len) return y;\n\tif(cal>=l) return que(x,lca,l);\n\telse return que(y,lca,len-l);\n} \nil int lcp(int x_1,int y_1,int x_2,int y_2,int LCA1,int LCA2,int len1,int len2,int cal1,int cal2){\n\tint l=1,r=min(len1,len2),ans=0;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tint d_1=jump_it(x_1,y_1,LCA1,mid,len1,cal1);\n\t\tint d_2=jump_it(x_2,y_2,LCA2,mid,len2,cal2);\n\t\tif(hushit(x_1,d_1)==hushit(x_2,d_2)) ans=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\treturn ans;\n}\nil int query1(int x,int y,int l){\n\tl--;\n\tfor(int i=16;i>=0;i--) if(l&(1<<i)) x=jump[x][i];\n\treturn hush1[x][0];\n} \nil int ask(int x,int y,int l,int lca,int len){\n\tif(calcnum(x,lca)>=l) return query1(x,lca,l);\n\telse return query1(y,lca,len-l+1); \n} \nil int fc(int x_1,int y_1,int x_2,int y_2){//???????\u00b7????????\u0421 \n\tint LCA1=LCA(x_1,y_1),LCA2=LCA(x_2,y_2);\n\tint len1=calcnum(x_1,LCA1)+calcnum(y_1,LCA1); \n\tint len2=calcnum(x_2,LCA2)+calcnum(y_2,LCA2);\n\tint l=lcp(x_1,y_1,x_2,y_2,LCA1,LCA2,len1,len2,calcnum(x_1,LCA1),calcnum(x_2,LCA2));\n\tint aa,bb;\n\tif(len1==l) aa=-1;\n\telse aa=ask(x_1,y_1,l+1,LCA1,len1);//ask(x,y,l)?????xy\u00b7?????l????? \n\tif(len2==l) bb=-1;\n\telse bb=ask(x_2,y_2,l+1,LCA2,len2);\n\tif(l==len2&&len1==len2) return 3;//???????????\n\telse if(l==len2) return 2;//??????????????? \n\telse if(aa>bb) return 1;//????????????\n\telse return -1;//????????????\n}\nil void dfs_ans(int step){//??????\n\t//cout<<\"***\"<<endl;\n\tif(!b[QX][step]) return;\n\t//?????????? \n\tint C=b[QX][step];\n\tint flag=fc(QX,QY,QX,C);//?\u0436?QX->QY ??QX->C\n\tint delta=0;\n\t//cout<<\"***\"<<\" \"<<QX<<\" \"<<QY<<\" \"<<C<<\" \"<<flag<<endl;\n\t//cout<<QX<<\" \"<<QY<<\" \"<<QX<<\" \"<<C<<\" \"<<step<<\" ^^^ \"<<flag<<endl;\n\tif(flag==-1){//???????????????????????\u0421?? \n\t\tdelta=0;\n\t}\n\telse if(flag==1&&QX!=C){//???????????\u0423?????????????QX->QY\u0421 \n\t//\tcout<<C<<\" \"<<b[QX][step+1]<<endl;\n\t\t//cout<<SIZE[C]<<\" ### \"<<SIZE[b[QX][step+1]]<<endl;\n\t\tdelta=SIZE[C];\n\t\tif(b[QX][step+1]) delta-=SIZE[b[QX][step+1]];//??? \n\t}\n\telse{//?????????????????????????????????????????\u6dbc???????\u00f3? \n\t\t//?????W???QX->W=QX->C\n\t\t//cout<<\"****\"<<endl;\n\t\tint T=LCA(QX,C);\n\t\tint len=calcnum(QX,T)+calcnum(C,T);//???QX->C?\u043c?????\n\t\tint W=jump_it(QX,QY,QLCA,len,QLEN,QCAL);\n\t\tint EXW=jump_it(QX,QY,QLCA,len+1,QLEN,QCAL);\n\t\tint EEXW=jump_it(QX,QY,QLCA,len+2,QLEN,QCAL);\n\t\t//????C?????????????\u0436????z????W->Y > C->z \n\t\t//??????\u03b3???????????\u00f3? \n\t\t/*\n\t\tint l=1,r=SIZE[C],ans=SIZE[C]+1;\n\t\twhile(l<=r){//????W->Y?????????lcp \n\t\t\tint mid=(l+r)>>1;\n\t\t\tint s=fc(W,QY,C,final[C][mid-1]);\n\t\t\tif(s<=0||s==3){\n\t\t\t\tans=mid,r=mid-1;\n\t\t\t}\n\t\t\telse l=mid+1;\n\t\t}\n\t\t*/\n\t\tint l=0,r=discont[C].size()-1,ans=0,hhh=0;//ans?lcp \n\t\twhile(l<=r){//????W->Y?????????lcp \n\t\t\tint mid=(l+r)>>1;\n\t\t\t//?\u0436?mid?lcp???????\n\t\t\tint RL=jump_it(QX,QY,QLCA,len+mid,QLEN,QCAL);//???\u03bb??\n\t\t\tll HUSH=hushit(W,RL);//???hush???logn?? \n\t\t\tint exhus=0;\n\t\t\tint L=0,R=discont[C][mid].size()-1,AS=-1;//AS?????\u03bb?? \n\t\t\twhile(L<=R){//?????????????mid???W->???hash???????? \n\t\t\t\tint MID=(L+R)>>1;\n\t\t\t\tif(discont[C][mid][MID].hush>HUSH) R=MID-1;\n\t\t\t\telse if(discont[C][mid][MID].hush<HUSH) L=MID+1;\n\t\t\t\telse{\n\t\t\t\t\tAS=discont[C][mid][MID].nody,exhus=discont[C][mid][MID].nody,L=MID+1;\n\t\t\t\t}\n\t\t\t} \n\t\t\tif(AS==-1) r=mid-1;\n\t\t\telse{\n\t\t\t\tans=mid,hhh=exhus,l=mid+1;\n\t\t\t}\n\t\t}\n\t//\tif(QX==8&&QY==17) cout<<C<<\" \"<<ans<<\" \"<<QLEN<<\" \"<<hhh<<\" \"<<len<<\" *** \"<<str[C][hhh-1]<<endl;\n\t\tint ddd=0;\n\t\tif(ans==QLEN-len){\n\t\t\tif(hhh<=str[C].size()) ddd=str[C][hhh-1];\n\t\t\tddd-=va[C][hhh-1].size();\n\t\t}\n\t\telse{\n\t\t\tint DDA=jump_it(QX,QY,QLCA,len+ans,QLEN,QCAL);\n\t\t\tint DDB=jump_it(QX,QY,QLCA,len+ans+1,QLEN,QCAL);\n\t\t\tint s=hushit(DDA,DDB);\n\t\t\t//ans???lcp  \n\t\t\t//???????????????????????\n\t\t\tif(hhh<=str[C].size()) ddd=str[C][hhh-1];\n\t\t\tfor(int i=0;i<26;i++){\n\t\t\t\t//cout<<trie[C][i][hhh-1]<<endl;\n\t\t\t\tif(hhh>trie[C][i].size()) continue;\n\t\t\t\tif(trie[C][i][hhh-1]<=0) continue;\n\t\t\t\tif(i+1>=s) break;\n\t\t\t\tint p=trie[C][i][hhh-1];\n\t\t\t\tif(trie[C][i][hhh-1]<=maxn_sub[C].size()){\n\t\t\t\t\tif(maxn_sub[C][trie[C][i][hhh-1]-1]>ddd){\n\t\t\t\t\t\tddd=maxn_sub[C][trie[C][i][hhh-1]-1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//ddd?????<W->Y?????val???? \n\t\t//cout<<W<<\" \"<<QY<<\" \"<<C<<\" @@@@\"<<endl;\n\t\t//ans??????W->Y <= C-z??z\n\t\t//cout<<delta<<\" ^^^\"<<endl;\n\t\t//cout<<ddd<<\" ^^^\"<<endl;\n\t\tdelta+=ddd;//????\u0421?????????? \n\t\t///if(QX==8&&QY==17) cout<<step<<\" ** \"<<ddd<<endl;\n\t\t//?????\u03bc??????x?????????????????\n\t\tif(b[QX][step+1]!=0){\n\t\t\tint zdelta=0;\n\t\t\tint da=hushit(W,EXW);\n\t\t\tint db=dis[b[QX][step+1]];\n\t\t\t//cout<<W<<\" \"<<EXW<<\" \"<<da<<\" &&&&& \"<<db<<endl;\n\t\t\t//cout<<SIZE[b[QX][step+1]]<<endl;\n\t\t\tif(da<db) zdelta+=0;\n\t\t\telse if(da>db){\n\t\t\t//\tif(QX==8&&QY==17) cout<<\"***********\"<<endl;\n\t\t\t\tzdelta+=SIZE[b[QX][step+1]];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint ctt=ddd;//ctt????????...\n\t\t\t\tint col=bel[QX][step];//???????? \n\t\t\t\tl=1,r=noe[C][col].size(),ans=r+1;\n\t\t\t//\tcout<<ans<<\"  $$$\"<<endl;\n\t\t\t\twhile(l<=r){\n\t\t\t\t\tint mid=(l+r)>>1;\t\n\t\t\t\t//\tcout<<l<<\" \"<<r<<\" **\"<<mid<<endl;\n\t\t\t\t\tif(noe[C][col][mid-1]>ctt) ans=mid,r=mid-1;\n\t\t\t\t\telse l=mid+1;\n\t\t\t\t}\n\t\t\t\tzdelta+=ans-1;\n\t\t\t}\n\t\t\t//if(QX==8&&QY==17) cout<<zdelta<<\" &&&&&&&&&&&&&&&&&&\"<<endl;\n\t\t\tdelta-=zdelta;\n\t\t}\t\n\t\t//if(flag==3) delta--;\n\t\t//???? \n\t}\n\t\n\tANS+=delta;\n\tdfs_ans(step+1);\n}\nvoid Check1(){\n\tfor(int i=1;i<=n;i++) cout<<hush_rt[i]<<\" \"<<hush_po[i]<<endl;\n}\nvoid Check2(){\n\tfor(int i=1;i<=3;i++){\n\t\tcout<<\"depth: \"<<i<<\",roots:\";\n\t\tfor(int j=0;j<rtt[i].size();j++){\n\t\t\tcout<<rtt[i][j]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}\n}\nvoid Check3(){\n\tfor(int i=1;i<=16;i++){\n\t\tfor(int j=0;j<rtt[i].size();j++){\n\t\t\tint RT=rtt[i][j];\n\t\t\tcout<<\"Now the root is: \"<<RT<<endl;\n\t\t\tcout<<nod[RT]<<endl;\n\t\t}\n\t}\n}\nvoid Check4(){\n\tfor(int i=1;i<=16;i++){\n\t\tfor(int j=0;j<rtt[i].size();j++){\n\t\t\tint RT=rtt[i][j];\n\t\t\tcout<<\"Now the root is: \"<<RT<<endl;\n\t\t\tfor(int k=0;k<final[RT].size();k++) cout<<final[RT][k]<<\" \";\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}\nvoid Check5(){\n\tcout<<hushit(3,8)<<endl;\n\tcout<<hushit(1,4)<<endl;\n}\nvoid Check6(){\n\tfor(int i=1;i<=n;i++){\n\t\tcout<<SIZE[i]<<endl;\n\t\tfor(int j=0;j<nexty[i].size();j++) cout<<nexty[i][j]<<\" *\";\n\t\tcout<<endl;\n\t}\n\tcout<<endl;\n\tfor(int i=1;i<=n;i++) cout<<bel[i][1]<<\" && \";\n\tcout<<endl;\n}\nvoid Check7(){\n//\tcout<<calcnum(6,1)<<endl;\n//\tcout<<ask(8,6,2,LCA(8,6),4)<<endl;\n//\tcout<<LCA(6,8)<<endl;\n//\tcout<<jump_it(8,6,LCA(6,8),3,4,calcnum(8,LCA(6,8)))<<\" OOO\"<<endl;\n\tcout<<hushit(4,1)<<\" QYJ\"<<endl;\n\tcout<<hushit(8,3)<<\" YZH\"<<endl;\n\tcout<<lcp(4,1,8,2,1,3,2,3,2,2)<<\" &#@*&\"<<endl;\n\tcout<<fc(6,7,4,1)<<\"   2018070134\"<<endl; \n}\nvoid WholeCheck(){\n\t/*\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<final[i].size();j++) cout<<final[i][j]<<\" \";\n\t\tcout<<endl;\n\t}\n\t*/\n\t/*\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=3;j++){\n\t\t \tcout<<\"i: \"<<i<<\"j: \"<<j<<\" ij:\"<<b[i][j]<<endl; \n\t\t}\n\t}\n\t*/\n\tfor(int i=1;i<=3;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tprintf(\"depth:%d,i:%d,val:%d\\n\",i,j,bel[j][i]);\n\t\t}\n\t}\n}\nvoid Check8(){\n\tfor(int i=1;i<=n;i++) cout<<discont[i].size()<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<discont[i].size();j++){\n\t\t\tfor(int k=0;k<discont[i][j].size();k++){\n\t\t\t\tprintf(\"RT:%d,depth:%d,value:%lld\\n\",i,j,discont[i][j][k].hush);\n\t\t\t} \n\t\t}\n\t}\n}\nvoid Check9(){\n\tfor(int i=1;i<=n;i++) cout<<discont[i].size()<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<str[i].size();j++) cout<<i<<\" ** \"<<j<<\" ** \"<<str[i][j]<<endl;\n\t}\n}\nint main(){\n\t//freopen(\"Rap God.in\",\"r\",stdin);\n\tmemset(b,0,sizeof(b));\n\tinint.clear();\n\tinit.clear();\n\tson[0]=2147483647;\n\tmemset(used,0,sizeof(used));\n\tscanf(\"%d%d\",&n,&q);\n\thus[0]=1ll;\n\tfor(int i=1;i<=n;i++) hus[i]=(hus[i-1]*base)%mod;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tscanf(\"%s\",c);\n\t\taddege(x,y,c[0]);\n\t\taddege(y,x,c[0]); \n\t}\n\thush_po[1]=0ll;\n\thush_rt[1]=0ll;\n\tdep[1]=1;\n\tdfs(1,1);\n\tfor(int i=1;i<=16;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tjump[j][i]=jump[jump[j][i-1]][i-1];\n\t\t\thush1[j][i]=((hush1[j][i-1]*hus[1<<(i-1)]%mod)+(hush1[jump[j][i-1]][i-1]))%mod;\n\t\t\thush2[j][i]=((hush2[jump[j][i-1]][i-1]*hus[1<<(i-1)]%mod)+(hush2[j][i-1]))%mod;\n\t\t}\n\t}\n\t//Check1(); \n\tmemset(used,0,sizeof(used));\n\tsplit(1,1);//????? \n\t//Check2();\n\tmemset(used,0,sizeof(used));\n\t//cout<<\"***\"<<endl;\n\t//cout<<\"***\"<<endl;\n\tmake_Trie();//????trie \n\t\n\t//cout<<\"***\"<<endl;\n\t//Check3();\n\t//WholeCheck();\n\t//for(int i=1;i<=n;i++) cout<<noe[i].size()<<endl;\n\t//cout<<\" &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\"<<endl;\n\t\n\tsorty();//????????????? \n\t//Check4();\n\t//Check5();//hush check\n\t//Check6();\n\t//Check7();//ask???? ?? \n\t//cout<<\"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\"<<endl;\n\t//Check8();//hush???? \n\t//cout<<\"***\"<<endl;\n//\tCheck9();\n\tint lx,ly,lans;\n\tfor(int PPP=1;PPP<=q;PPP++){//\n\t\tscanf(\"%d%d\",&QX,&QY);\n\t\tQLCA=LCA(QX,QY);\n\t\tQCAL=calcnum(QX,QLCA);\n\t\tQLEN=calcnum(QX,QLCA)+calcnum(QY,QLCA);\n\t\tANS=0;\n\t\tdfs_ans(1);\n\t\tlx=QX,ly=QY,lans=ANS-1;\n\t\tANS--;\n\t\tprintf(\"%d\\n\",ANS);//??????? PS:??????? \n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1598002571,
        "uid": 61757,
        "name": "Seanq",
        "ccfLevel": 0,
        "title": "\u96f6\u70b9\u8ba1\u521236-CF786D Rap God"
    }
]