[
    {
        "content": "### \u524d\u8a00\n\u82b1\u4e86\u5f88\u4e45\u8c03\u4ee3\u7801\uff0c\u6539\u4e86\u4e00\u5806\u7ec6\u8282\uff0c\u4e00\u5ea6\u4ee5\u4e3a\u65b9\u6cd5\u9519\u4e86\u2026\u2026\n\n\u7ed3\u679c KMP \u5199\u9519\u4e86\uff01\n\n\u4e00\u6012\u4e4b\u4e0b\u6765\u5199\u4e00\u7bc7\u9898\u89e3\u533a\u8fd8\u6ca1\u6709\u7684\u7ebf\u6027 KMP \u505a\u6cd5\u3002\n\n### \u5206\u6790\n\u7531\u4e8e\u4e32 $t$ \u662f\u4e32 $s$ \u4e24\u4e0d\u4ea4\u5b50\u4e32\u62fc\u63a5\u5f97\u5230\u7684\u5b50\u4e32\u3002\u81ea\u7136\u6709\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a$t$ \u88ab $s$ \u5206\u51fa\u7684\u4e00\u4e2a\u5b50\u4e32\u5305\u542b\uff0c\u6216 $t$ \u5904\u4e8e $s$ \u4e24\u5b50\u4e32\u7684\u62fc\u63a5\u5904\u3002\n\n\u524d\u4e00\u60c5\u51b5\u53ea\u9700\u505a\u4e00\u904d\u666e\u901a KMP\uff0c\u6bcf\u6b21\u5728 $s$ \u4e2d\u5339\u914d\u5230\u5b8c\u6574\u7684 $t$ \u6240\u5728\u4f4d\u7f6e $i$\uff0c\u5219\u5224\u65ad\u4e24\u7ec4\u533a\u95f4 $[\\max(i,k)-k+1,\\max(i,k)],[\\max(i,k)+1,\\max(i,k)+k]$ \u4e0e $[\\min(n-k+1,i)-k,\\min(n-k+1,i)-1],[\\min(n-k+1,i),\\min(n-k+1,i)+k-1]$ \u4e2d\u662f\u5426\u5b58\u5728\u4e00\u7ec4\u5408\u6cd5\u89e3\u3002\u8fd9\u4e24\u7ec4\u533a\u95f4\u5206\u522b\u662f\u4f7f\u5f97\u5305\u542b\u4e32 $t$ \u7684\u5b50\u4e32\u5c3d\u91cf\u9760\u5de6\u4e0e\u9760\u53f3\u7684\u60c5\u51b5\uff0c\u6b63\u786e\u6027\u6613\u5f97\u3002\u6ce8\u610f\u6b64\u60c5\u51b5 $k\\ge m$\u3002\n\n\u8003\u8651\u540e\u4e00\u79cd\u60c5\u51b5\u3002\u53d1\u73b0\u7b49\u4ef7\u4e8e\u5c06 $t$ \u6cbf\u67d0\u4e00\u4f4d\u7f6e\u62c6\u6210\u5de6\u53f3\u4e24\u534a\uff0c\u5e76\u5728 $s$ \u4e2d\u5206\u522b\u5339\u914d\u4e24\u534a\u540e\u62fc\u8d77\u6765\u3002\u8fd0\u7528\u8d2a\u5fc3\u601d\u60f3\uff0c\u5de6\u534a\u51fa\u73b0\u7684\u4f4d\u7f6e\u5e94\u5c3d\u91cf\u9760\u5de6\uff0c\u53f3\u534a\u51fa\u73b0\u7684\u4f4d\u7f6e\u5e94\u5c3d\u91cf\u9760\u53f3\u3002\u4e8e\u662f\u8bbe $f_{0,i}$ \u4e3a $t$ \u4ee5 $i$ \u7ed3\u5c3e\u7684\u524d\u7f00\u5728 $s$ \u4e2d\u5b8c\u5168\u51fa\u73b0\u7684\u7ed3\u5c3e\u70b9\u6700\u524d\u4f4d\u7f6e\uff0c$f_{1,i}$ \u4e3a $t$ \u4ee5 $i$ \u5f00\u59cb\u7684\u540e\u7f00\u5728 $s$ \u4e2d\u5b8c\u5168\u51fa\u73b0\u7684\u8d77\u59cb\u70b9\u6700\u540e\u4f4d\u7f6e\uff0c\u4e24\u8005\u53ef\u4ee5\u5206\u522b\u6b63\u5411\u4e0e\u53cd\u5411\u8fd0\u7528 KMP \u7b97\u6cd5\u7ebf\u6027\u6c42\u51fa\u3002\u4e00\u7ec4\u5408\u6cd5\u89e3\u53ef\u901a\u8fc7\u6ee1\u8db3 $f_{0,i}$ \u5b58\u5728\uff0c$f_{1,i+1}$ \u5b58\u5728\uff0c\u4e14 $f_{0,i}<f_{1,i+1}$ \u7684 $i$ \u5f97\u5230\u3002\n\n\u8003\u8651\u4e00\u4e9b\u7ec6\u8282\u3002\u7531\u4e8e\u780d\u4e0b\u7684\u5b50\u4e32\u957f\u5ea6\u4e3a $k$\uff0c$t$ \u4e2d\u62c6\u5206\u51fa\u7684\u4e24\u5b50\u4e32\u957f\u5ea6\u4e0d\u5e94\u8d85\u8fc7 $k$\u3002\u540c\u65f6\uff0c\u8bb0\u5f55\u7684 $f_0,f_1$ \u5747\u5e94\u6ee1\u8db3\u5230\u5de6/\u53f3\u8fb9\u754c\u7684\u8ddd\u79bb\u4e0d\u5c0f\u4e8e $k$\uff0c\u5426\u5219\u65e0\u6cd5\u6784\u9020\u51fa\u89e3\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u53ef\u80fd\u51fa\u73b0\u957f\u5ea6\u8f83\u5c0f\u7684\u524d\u540e\u7f00\u7531\u4e8e\u4f4d\u7f6e\u51fa\u73b0\u8fc7\u65e9\u89e3\u88ab\u820d\u53bb\u4ece\u800c $f_{0/1}$ \u672a\u80fd\u88ab\u6c42\u51fa\u7684\u60c5\u51b5\u3002\u4e8e\u662f\u9700\u8981\u4f7f\u7528 $f_{0/1,i}$ \u7684\u503c\u53bb\u66f4\u65b0 $f_{0/1,KMP(i)}$\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define loop(i,from,to) for(int i=(from);i<=(to);++i)\n#define rloop(i,from,to) for(int i=(from);i>=(to);--i)\nusing namespace std;\nconst int maxn=1e6;\nint n,m,k,j,f[2][maxn+1],KMP[maxn+1];\nchar s1[maxn+1],s2[maxn+1];\nint main(){\n\tscanf(\"%d%d%d%s%s\",&n,&m,&k,s1+1,s2+1),j=0;\n\tloop(i,2,m){\n\t\twhile(j&&s2[i]!=s2[j+1])j=KMP[j];\n\t\tif(s2[i]==s2[j+1])++j;\n\t\tKMP[i]=j;\n\t}\n\tj=0;\n\tloop(i,1,n){\n\t\twhile(j&&s1[i]!=s2[j+1])j=KMP[j];\n\t\tif(s1[i]==s2[j+1])++j;\n\t\tif(i>=k&&!f[0][j])f[0][j]=i;\n\t\tif(j==m){\n\t\t\tif(max(i,k)+k<=n&&k>=m){\n\t\t\t\tprintf(\"Yes\\n%d %d\\n\",max(i,k)-k+1,max(i,k)+1);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif(min(n-k+1,i)-k>=1&&k>=m){\n\t\t\t\tprintf(\"Yes\\n%d %d\\n\",min(n-k+1,i)-k,min(n-k+1,i));\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tj=KMP[j];\n\t\t}\n\t}\n\trloop(i,m,1)if(f[0][i])f[0][KMP[i]]=(f[0][KMP[i]]?min(f[0][KMP[i]],f[0][i]):f[0][i]);\n\tfill(KMP+1,KMP+m+1,m+1),fill(f[1]+1,f[1]+m+1,n+1),j=m+1;\n\trloop(i,m-1,1){\n\t\twhile(j<=m&&s2[i]!=s2[j-1])j=KMP[j];\n\t\tif(s2[i]==s2[j-1])--j;\n\t\tKMP[i]=j;\n\t}\n\tj=m+1;\n\trloop(i,n,1){\n\t\twhile(j<=m&&s1[i]!=s2[j-1])j=KMP[j];\n\t\tif(s1[i]==s2[j-1])--j;\n\t\tif(n-i+1>=k&&f[1][j]==n+1)f[1][j]=i;\n\t\tif(j==1)j=KMP[j];\n\t}\n\tloop(i,1,m)if(f[1][i]!=n+1)f[1][KMP[i]]=(f[1][KMP[i]]!=n+1?max(f[1][KMP[i]],f[1][i]):f[1][i]);\n\tloop(i,1,m-1)if(i<=k&&m-i<=k&&f[0][i]&&f[1][i+1]!=n+1&&f[0][i]<f[1][i+1]){\n\t\tprintf(\"Yes\\n%d %d\\n\",f[0][i]-k+1,f[1][i+1]);\n\t\treturn 0;\n\t}\n\tputs(\"No\");\n\treturn 0;\n}\n```",
        "postTime": 1630069565,
        "uid": 67952,
        "name": "\u767d\u9c9f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF955D Scissors"
    },
    {
        "content": "[\u565c\u5566\u565c\u5566\u54a7 \u565c\u5566\u565c\u5566\u54a7 \u7684\u9605\u8bfb\u4f53\u9a8c \uff01\uff01\uff01\uff01](https://www.cnblogs.com/dysyn1314/p/14146557.html)\n\n\n# CF955D Scissors\n\n## \u9898\u76ee\u5927\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/problemset/problem/955/D)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u4e32 $s$ \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u4e32 $t$\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 $k$\u3002\n\n\u8bf7\u627e\u51fa $s$ \u7684\u4e24\u4e2a\u4e92\u4e0d\u91cd\u53e0\u7684\u3001\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u4e32\uff0c\u6ee1\u8db3\uff1a\u5c06\u5b83\u4eec\u6309\u539f\u6709\u987a\u5e8f\u62fc\u63a5\u540e\uff0c\u5f97\u5230\u7684\u4e32\u4e2d\u5305\u542b $t$\uff08$t$ \u662f\u4e00\u4e2a\u5b50\u4e32\uff09\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$2\\leq m\\leq 2\\cdot k\\leq n\\leq 5\\times 10^5$\u3002\n\n## \u672c\u9898\u9898\u89e3\n\n\u8003\u8651 $s$ \u91cc\uff0c\u88ab\u9009\u51fa\u7684\u4e24\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u4e32\uff0c\u79f0\u4e3a\u5173\u952e\u5b50\u4e32 1\u3001\u5173\u952e\u5b50\u4e32 2\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $t$ \u88ab\u5b8c\u6574\u5730\u5305\u542b\u5728\u67d0\u4e2a\u5173\u952e\u5b50\u4e32\u4e2d\uff1b\n2. $t$ \u5728\u4e24\u4e2a\u5173\u952e\u5b50\u4e32\u7684\u62fc\u63a5\u5904\u3002\n\n\u5bf9\u4e8e\u60c5\u51b5 1\uff0c\u505a\u4e00\u904d\u666e\u901a\u7684 KMP \u5373\u53ef\u5224\u65ad\u3002\u56e0\u6b64\u4ee5\u4e0b\u53ea\u8ba8\u8bba\u60c5\u51b5 2\u3002\n\n\u679a\u4e3e\u5173\u952e\u5b50\u4e32 1 \u7684\u7ed3\u5c3e\u4f4d\u7f6e $i$\uff0c\u7528 KMP \u53ef\u4ee5\u6c42\u51fa\u4e00\u4e2a\u6700\u5927\u7684 $f_i$\uff0c\u6ee1\u8db3 $s[i - f_i + 1, i] = t[1,f_i]$\u3002\u540c\u7406\uff0c\u679a\u4e3e\u5173\u952e\u5b50\u4e32 2 \u7684\u5f00\u5934\u4f4d\u7f6e $j$\uff0c\u53ef\u4ee5\u6c42\u51fa\u4e00\u4e2a\u6700\u5927\u7684 $g_j$\uff0c\u6ee1\u8db3 $s[j,j + g_j - 1] = t[m - g_j + 1, m]$\u3002\n\n\u5982\u679c\u5b58\u5728\u4e00\u5bf9 $k\\leq i < j\\leq n - k + 1$\uff0c\u6ee1\u8db3 $f_i + g_j = m$\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u7ecf\u627e\u51fa\u4e86\u7b54\u6848\u3002\n\n\u7136\u800c\uff0c\u5982\u679c\u6ca1\u627e\u5230\u8fd9\u6837\u7684 $i,j$\uff0c\u5e76\u4e0d\u4e00\u5b9a\u4ee3\u8868\u65e0\u89e3\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u8ff0\u505a\u6cd5\u7684\u8bef\u533a\u662f\uff0c\u6570\u503c\u5927\u7684 $f_i$, $g_j$\uff0c\u5e76\u4e0d\u4e00\u5b9a\u6700\u4f18\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53 $k\\leq i < 2k$ \u65f6\uff0c\u53ef\u80fd\u5b58\u5728 $s[i - f_i +i]$ \u7684\u4e00\u4e2a border\uff0c\u7531\u5b83\u4f5c\u4e3a $t$ \u7684\u524d\u7f00\uff0c\u53bb\u548c\u540e\u9762\u62fc\u63a5\uff0c\u80fd\u5f97\u5230\u7b54\u6848\u3002\u5bf9\u4e8e $g$ \u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u5982\u679c\u679a\u4e3e $i$\uff0c\u518d\u66b4\u529b\u679a\u4e3e border\uff0c\u7531\u4e8e border \u7684\u6570\u91cf\u6700\u5927\u6709 $\\mathcal{O}(\\text{\u4e32\u957f})$ \u4e2a\uff08\u4f8b\u5982\u4e32 $\\texttt{aaa...a}$\uff09\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u4e3a $\\mathcal{O}(km)$\uff0c\u65e0\u6cd5\u901a\u8fc7\u672c\u9898\u3002\n\n\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u201c\u66b4\u529b\u8df3 border\u201d\u7684\u8fc7\u7a0b\u3002\u8bbe $t[1,x]$ \u7684 border \u957f\u5ea6\u4e3a $\\text{fail}(x)$\uff08\u4e0e KMP \u7b97\u6cd5\u91cc\u7684\u5b9a\u4e49\u662f\u4e00\u6837\u7684\uff09\uff0c\u5bf9\u4e8e\u6240\u6709 $1\\leq x\\leq m$ \u5982\u679c $\\text{fail}(x)\\neq 0$\uff0c\u6211\u4eec\u4ece $\\text{fail}(x)$ \u5411 $x$ \u8fde\u4e00\u6761\u8fb9\uff0c\u53d1\u73b0\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6709\u6839\u6811\u68ee\u6797\u3002\u201c\u66b4\u529b\u8df3 border\u201d\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728\u679a\u4e3e\u4e00\u4e2a\u8282\u70b9 $x$ \u7684\u6240\u6709\u7956\u5148\u3002\u56e0\u6b64\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206\u4f18\u5316\u3002\u66f4\u5177\u4f53\u5730\uff0c\u7531\u4e8e\u4e00\u524d\u4e00\u540e\u5404\u505a\u4e00\u6b21 KMP\uff0c\u5b9e\u9645\u4e0a\u9700\u8981\u5efa\u51fa\u4e24\u4e2a\u68ee\u6797\u3002\n\n\u8003\u8651\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $j$\uff0c\u6bcf\u6b21 $i = j - 1$ \u4f1a\u6210\u4e3a\u4e00\u4e2a\u65b0\u51fa\u73b0\u7684\u3001\u53ef\u80fd\u7684 $i$\uff0c\u6211\u4eec\u628a $f_i$ \u5728\u6811\u4e0a\u7684\u6240\u6709\u7956\u5148\u6253\u4e0a\u6807\u8bb0\u3002\u7136\u540e\u8981\u5bf9 $g_j$ \u7684\u6240\u6709\u7956\u5148\u8fdb\u884c\u67e5\u8be2\u3002\u901a\u8fc7\u6811\u94fe\u5256\u5206\u548c dfs \u5e8f\uff0c\u628a\u6811\u4e0a\u95ee\u9898\u8f6c\u5316\u4e3a\u5e8f\u5217\u95ee\u9898\u540e\uff0c\u95ee\u9898\u53ef\u4ee5\u5f62\u5f0f\u5316\u5730\u63cf\u8ff0\u4e3a\uff1a\n\n\u6709\u4e24\u4e2a\u6392\u5217 $p_{1\\dots m}, q_{1\\dots m}$\uff08\u4e5f\u5c31\u662f\u4e24\u68f5\u6811\u7684 dfs \u5e8f\u5e8f\u5217\uff09\uff0c\u9700\u8981\u652f\u6301\u82e5\u5e72\u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u5206\u4e3a\u5982\u4e0b\u4e24\u79cd\uff1a\n\n1. \u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u628a $p_{l\\dots r}$ \u91cc\u6240\u6709**\u6570\u503c**\u6253\u4e0a\u6807\u8bb0\u3002\n2. \u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u67e5\u8be2 $q_{l\\dots r}$ \u91cc\u662f\u5426\u5b58\u5728\u88ab\u6807\u8bb0\u8fc7\u7684\u6570\u503c\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u5e76\u4e0d\u96be\u3002\u8003\u8651\u79bb\u7ebf\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e2a**\u6570\u503c**\u7b2c\u4e00\u6b21\u88ab\u6807\u8bb0\u7684\u65f6\u95f4\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5012\u5e8f\u904d\u5386\u64cd\u4f5c\uff0c\u8f6c\u5316\u4e3a\u533a\u95f4\u8986\u76d6\u95ee\u9898\u3002\u7136\u540e\u67e5\u8be2\u5c31\u53d8\u6210\u4e86\u533a\u95f4\u6700\u5c0f\u503c\u67e5\u8be2\uff0c\u53ef\u4ee5\u7528 ST \u8868\u5b9e\u73b0\u3002\n\n\u5982\u679c\u7528\u7ebf\u6bb5\u6811\u505a\u533a\u95f4\u8986\u76d6\uff0c\u56e0\u4e3a\u5916\u5c42\u8fd8\u8981\u8df3 $\\mathcal{O}(\\log n)$ \u6761\u91cd\u94fe\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n\\log^2 n)$\uff08$n,m,k$ \u540c\u9636\uff09\u3002\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\uff0c\u4f46\u4e0d\u591f\u4f18\u79c0\u3002\u8fdb\u4e00\u6b65\u89c2\u5bdf\u53d1\u73b0\uff0c\u533a\u95f4\u8986\u76d6\u64cd\u4f5c\u662f\u9759\u6001\u7684\uff08\u6240\u6709\u4fee\u6539\u53d1\u751f\u5728\u8be2\u95ee\u4e4b\u524d\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e3a $\\mathcal{O}(n\\log n)$\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n[\u52c7\u6562\u5411\u524d\u8fdb\uff0c\u524d\u8fdb\u6709\u5956\u54c1\uff01\uff01\uff01\uff01\uff01](https://www.cnblogs.com/dysyn1314/p/14146557.html)",
        "postTime": 1608127834,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF955D \u3010Scissors\u3011"
    },
    {
        "content": "\uff08upd\uff1a\u66f4\u65b0\u4e86\u4e2a\u7ebf\u6027\uff08$\\Theta(\\alpha(n)+n$\uff09\u505a\u6cd5\uff09\n\n\u7ed9\u51fa\u4e00\u4e2a\u7528 kmp \u505a\u7684\u5947\u602a\u505a\u6cd5\n\n\u521a\u770b\u5230\u8fd9\u9898\u65f6\u76f4\u63a5\u5c31\u7cca\u51fa\u4e00\u4e2a $O(n)$ \u7684 kmp \u505a\u6cd5\uff08\u5927\u6982\u5c31\u662f\u8ba1\u7b97 $s$ \u7684\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u5c3e\u90e8\u548c\u5934\u90e8\u4e0e $t$ \u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\uff0c\u7136\u540e\u626b\u4e00\u904d\u628a\u4e24\u4e2a**\u6700\u5927**\u7684\u7b54\u6848\u62fc\u8d77\u6765\uff1b\u4f46\u6ce8\u610f\u5230\u7b54\u6848\u7684\u62fc\u6cd5\u4e0d\u4e00\u5b9a\u62fc\u7684\u662f\u4e24\u4e2a\u6700\u5927\u503c\uff09\uff0c\u7ed3\u679c\u53d1\u73b0\u5404\u79cd\u5047\uff1b\u8d5b\u540e\u8bd5\u7740\u628a\u81ea\u5df1\u7684\u505a\u6cd5\u9b54\u6539\u4e86\u4e0b\uff0c\u53d1\u73b0\u8fd8\u53ef\u505a\uff0c\u6b63\u786e\u6027\u5e94\u8be5\u6ca1\u4ec0\u4e48\u95ee\u9898\n\n\u4e0d\u8fc7\u9274\u4e8e\u6211\u4e4b\u524d\u7684 $O(n)$ \u5047\u505a\u6cd5\u90fd\u80fd\u8dd1\u8fc7\u524d 77 \u4e2a\u70b9\uff0c\u4e0d\u6e05\u695a\u9898\u76ee\u6570\u636e\u662f\u5426\u8db3\u591f\u5f3aX\uff08\u540c\u65f6\u6211\u4e5f\u4e0d\u592a\u4f1a\u9020... \\fad\uff09\n\n## \u89e3\u6790\n\n### Part 0\n\n\u6211\u4eec\u5148\u7528 kmp \u8ba1\u7b97\u51fa\uff1a\n\n1. \u5bf9\u6bcf\u4e2a $s$ \u7684\u524d\u7f00 $s[1..i]$\uff0c\u6c42\u51fa\u6ee1\u8db3 $s[1..i]$ \u7684\u540e\u7f00\u4e0e $t$ \u7684\u524d\u7f00\u76f8\u540c\u7684\u6700\u5927\u957f\u5ea6\uff0c\u8bbe\u4e3a $\\texttt{suf[i]}$\n2. \u5bf9\u6bcf\u4e2a $s$ \u7684\u540e\u7f00 $s[j..n]$\uff0c\u6c42\u51fa\u6ee1\u8db3 $s[j..n]$ \u7684\u524d\u7f00\u4e0e $t$ \u7684\u540e\u7f00\u76f8\u540c\u7684\u6700\u5927\u957f\u5ea6\uff0c\u8bbe\u4e3a $\\texttt{pre[j]}$\n\n\uff08\u5176\u4e2d $2.$ \u53ef\u4ee5\u5c06 $s, t$ \u90fd\u5012\u8fc7\u6765\u505a\u4e00\u6b21 kmp\uff09\n\n\u4e00\u4e2a\u76f4\u89c2\u7684\u60f3\u6cd5\u662f\uff0c\u5c06 $\\texttt{suf[i]}+\\texttt{pre[j]}=m$ \u7684\u4e24\u6bb5\u5b50\u4e32\u62fc\u8d77\u6765\uff0c\u5c31\u80fd\u5f97\u5230\u7b54\u6848\uff08\u5f53\u7136\u8fd8\u8981\u8003\u8651\u4e00\u4e9b\u8fb9\u754c\u60c5\u51b5\uff09\n\n\u4e0d\u8fc7\u6709\u4e00\u79cd\u76f4\u63a5\u80fd\u60f3\u5230\u7684\u4f8b\u5916\u662f\uff0c$t$ \u6574\u4e2a\u5728\u67d0\u4e2a\u5b50\u4e32\u5185\uff1b\u8bbe\u8be5\u60c5\u51b5\u4e3a $\\texttt{Case 1}$\u3002\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ea\u9700\u68c0\u67e5 $n$ \u4e2d\u662f\u5426\u51fa\u73b0 $m$\uff0c\u7136\u540e\u5c1d\u8bd5\uff08\u8d2a\u5fc3\u5730\uff09\u6784\u9020\u65b9\u6848\u5373\u53ef\n\n\u8fd9\u6837\u4e3b\u8981\u90e8\u5206\u53ea\u9700\u8bb0\u5f55\u6bcf\u4e2a $\\texttt{suf}$ \u7684\u503c\u7684\u51fa\u73b0\u6b21\u6570\uff1b\u5148\u6b63\u7740\u626b\u4e00\u904d\u90fd\u6dfb\u52a0\u8fdb\u53bb\uff0c\u518d\u5012\u7740\u626b\u4e00\u904d\uff0c\u9010\u6b65\u5220\u9664 $\\texttt{suf[i]}$ \u5e76\u987a\u4fbf\u68c0\u67e5\u6bcf\u4e2a $\\texttt{pre[j]}$ \u662f\u5426\u6709\u5bf9\u5e94\u7684 $\\texttt{suf[i]}$ \u503c\u5339\u914d\u3002\u4ee3\u7801\u5dee\u4e0d\u591a\u50cf\u8fd9\u6837\uff1a\n\n```cpp\nfor(int i =k; i <= n-k; ++i)\n\t++cnt[suf[i]];\nfor(int i =n-k+1; i > k; --i){\n\tif(pre[i] <= k && m-pre[i] <= k && m-pre[i] >= 0)\n\t\tif(cnt[m-pre[i]]){\n\t\t\tint start_L =-1;\n\t\t\tfor(int j =k; j < i; ++j)\n\t\t\t\tif(suf[j] == m-pre[i]){\n\t\t\t\t\tstart_L =j-k+1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tprintf(\"Yes\\n%d %d\", start_L, i);\n\t\t\treturn 0;\n\t\t}\n\t--cnt[suf[i-1]];\n}\n```\n\n\u4e8e\u662f\u5c31\uff1a\n\n![WA](https://cdn.luogu.com.cn/upload/image_hosting/oaoveudt.png)\n\n### Part 1\n\n\uff08\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u7684\u8ba8\u8bba\uff0c\u8fd9\u91cc\u89c4\u5b9a $\\texttt{suf[i]}, \\texttt{pre[j]}$ \u7684\u503c\u53d6**\u4e0d\u8d85\u8fc7 $k$ \u7684**\u6700\u5927\u7684 $\\{\\texttt{suf[i]}, \\pi[\\texttt{suf[i]}], \\pi[\\pi[\\texttt{suf[i]}]], \\cdots\\}$ / $\\{\\texttt{pre[j]}, \\pi[\\texttt{pre[j]}], \\pi[\\pi[\\texttt{pre[j]}]], \\cdots\\}$\uff08\u5176\u4e2d $\\pi$ \u5373 \u524d\u7f00\u51fd\u6570/kmp \u7684 next \u6570\u7ec4\uff09\uff09\n\n\u6ce8\u610f\u5230\uff0c\u8fd9\u91cc\u6211\u4eec\u90fd\u5047\u8bbe\u53d6\u51fa\u7684\u4e24\u4e2a\u5b50\u4e32 $s_1=s[l_1..r_1], s_2=s[l_2..r_2]$ \u62fc\u8d77\u6765\u540e\uff0c\u9700\u8981\u7684 $t$ \u5747\u4e3a $s_1[(|s_1|-\\texttt{suf[}r_1\\texttt{]}+1)..(|s_1|)]+s_2[1..(\\texttt{pre[}l_2\\texttt{]})]$\uff08\u5373\u5c3d\u53ef\u80fd\u5927\u5730\u5339\u914d $s_1, s_2$ \u7684\u540e\u7f00\uff0c\u524d\u7f00\uff09\uff1b\u4f46\u5b9e\u9645\u4e0a\u5176\u7528\u5230\u7684 $s_1$ \u540e\u7f00\u6216 $s_2$ \u524d\u7f00\u4e0d\u4e00\u5b9a\u90fd\u662f\u5c3d\u53ef\u80fd\u957f\u7684\n\n\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c$s_1, s_2$ \u603b\u6709\u4e00\u4e2a\u7684\u7528\u5230\u7684 \u540e\u7f00/\u524d\u7f00 \u662f\u5c3d\u53ef\u80fd\u957f\u7684\n\n\u8003\u8651\u7b54\u6848\u4e2d $t$ \u4e3a $s_1[(|s_1|-a+1)..(|s_1|)]+s_2[1..b]$\uff0c\u82e5 $l_1>1$ \u6216 $r_2<n$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 $l_1, r_1$ \u51cf $1$ \u6216\u5c06 $l_2, r_2$ \u52a0 $1$\uff08\u5f62\u8c61\u5730\u8bb2\uff0c\u53ef\u4ee5\u5c06 $s_1, s_2$ \u89c6\u4e3a\u5728 $s$ \u4e2d\u7684\u5bbd\u4e3a $k$ \u7684\u6846\u9009\uff0c\u8fd9\u91cc\u5c31\u76f8\u5f53\u4e8e\u5728\u79fb\u52a8\u6846\uff09\uff0c\u8fd9\u6837 $a, b$ \u7684\u5176\u4e2d\u4e00\u4e2a\u5c31\u4f1a\u51cf\u5c11 $1$\uff0c\u53e6\u4e00\u4e2a\u5c31\u9700\u8981\u589e\u52a0 $1$\uff1b\u91cd\u590d\u8fd9\u6837\u7684\u8fc7\u7a0b\uff0c\u76f4\u5230 $s_1, s_2$ \u4e2d\u6709\u4e00\u4e2a\u7684 \u540e\u7f00/\u524d\u7f00 \u5339\u914d\u662f\u5c3d\u53ef\u80fd\u957f\u7684\n\n\u4f46\u6ce8\u610f\u5230\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u5373 $l_1=1$ **\u4e14** $r_2=n$ \u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u63a5\u7740\u64cd\u4f5c\u3002\u8bbe\u8be5\u60c5\u51b5\u4e3a $\\texttt{Case 2}$\uff0c\u6211\u4eec\u540e\u9762\u518d\u8ba8\u8bba\u600e\u4e48\u505a\uff1b\n\n\u4e8e\u662f\u6211\u4eec\u77e5\u9053\u4e86\uff1a\n\n- \u9664 $\\texttt{Case 2}$ \u5916\uff0c$s_1, s_2$ \u603b\u6709\u4e00\u4e2a\u7684\u7528\u5230\u7684 \u540e\u7f00/\u524d\u7f00 \u662f\u5c3d\u53ef\u80fd\u957f\u7684\n\n\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u600e\u4e48\u505a\u3002\u53d1\u73b0\u96be\u70b9\u5728\u4e8e\u4e00\u4e2a\u4f4d\u7f6e $i$ \u53ef\u80fd\u63d0\u4f9b\u7684\u540e\u7f00\u957f\u5ea6\u4e3a $\\{\\texttt{suf[i]}, \\pi[\\texttt{suf[i]}], \\pi[\\pi[\\texttt{suf[i]}]], \\cdots\\}$\uff08\u5176\u4e2d $\\pi$ \u5373 \u524d\u7f00\u51fd\u6570/kmp \u7684 next \u6570\u7ec4\uff09\uff0c\u5bf9\u4e8e\u524d\u7f00\u4e5f\u540c\uff0c\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\u5bf9\u6bcf\u4e2a $i$ \u662f $O(m)$ \u7684\n\n\u4e0d\u59a8\u8bbe $s_2$ \u7528\u5230\u7684\u524d\u7f00\u662f\u5c3d\u53ef\u80fd\u957f\u7684\uff0c\u5e76\u679a\u4e3e $s_2$ \u7684 $l_2$\uff0c\u5c1d\u8bd5\u5bfb\u627e\u5408\u6cd5\u7684 $s_1$\uff08\u5373\u627e\u5230 $\\{\\texttt{suf[}r_1\\texttt{]}, \\pi[\\texttt{suf[}r_1\\texttt{]}], \\cdots\\}$ \u4e2d\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\u7b49\u4e8e $m-\\texttt{pre[}l_2\\texttt{]}$ \u7684 $r_1, k\\leq r_1<l_2$\uff09\u3002\u6ce8\u610f\u5230\u6839\u636e $\\pi[.]$ \u63cf\u8ff0\u7684\u5173\u7cfb\u5efa\u56fe\uff0c\u5f97\u5230\u7684\u56fe\u662f\u4e00\u68f5**\u6811**\uff1b\u800c\u6bcf\u4e2a $r_1$ \u4ea7\u751f\u7684\u8d21\u732e\u5c31\u4e3a\uff0c$\\texttt{suf[}r_1\\texttt{]}$ \u5230\u6839 $0$ \u7684\u8fd9\u4e9b\u7ed3\u70b9\uff0c\u5b83\u4eec\u7684\u6743\uff08\u503c\u7684\u51fa\u73b0\u6b21\u6570\uff09\u90fd\u52a0\u4e00\uff1b\u8fd9\u4e2a\u7528\u6811\u5256\u4ec0\u4e48\u7ef4\u62a4\u4e0b\u5c31\u884c\u4e86\uff08\u94fe\u4fee\u6539\uff0c\u5355\u7ed3\u70b9\u67e5\u8be2\uff09\u3002\u5b9e\u73b0\u7684\u5927\u81f4\u6846\u67b6\u548c $\\texttt{Part 1}$ \u4e2d\u7684\u76f8\u540c\uff1b\u4e0d\u8fc7\u5728\u786e\u5b9a\u5b58\u5728\u7b54\u6848\u540e\uff0c\u5bfb\u627e\u7b54\u6848\u4f4d\u7f6e\u65f6\uff0c\u662f\u4ece\u533a\u95f4\u8fb9\u754c\u9010\u4e2a\u5220\u9664\u8d21\u732e\uff0c\u76f4\u5230 $m-\\texttt{pre[}l_2\\texttt{]}$ \u7684\u4e2a\u6570\u51fa\u73b0\u53d8\u5316\u65f6\uff0c\u5373\u627e\u5230\u4e86\u7b54\u6848\u4f4d\u7f6e\uff1b\u5177\u4f53\u53ef\u89c1\u4ee3\u7801\n\n\u6700\u540e\u5bf9\u4e8e $\\texttt{Case 2}$\uff0c\u6ce8\u610f\u5230\u6b64\u65f6\u4e00\u5b9a\u6709 $r_1=k, l_2=n-k+1$\uff0c\u6211\u4eec\u989d\u5916\u5224\u65ad\u4e0b\u8fd9\u4e24\u4e2a\u5b50\u4e32\u62fc\u5728\u4e00\u8d77\u662f\u5426\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u5373\u53ef\uff08\u968f\u4fbf\u600e\u4e48\u641e\uff0c\u5dee\u4e0d\u591a\u505a\u5230 $O(m)$ \u5c31\u884c\uff1b\u5177\u4f53\u4e5f\u89c1\u4ee3\u7801X\uff09\n\n## CODE\n\n\u89e3\u6790\u53ef\u80fd\u5199\u5f97\u5f88\u4e71qaq\uff0c\u5b9e\u5728\u770b\u4e0d\u61c2\u7684\u8bdd\u76f4\u63a5\u770b\u4ee3\u7801\u53ef\u80fd\u597d\u4e9b \\fad\n\n\u6ce8\u610f\u4ee3\u7801\u4e2d\u8bb8\u591a\u8fb9\u754c\u60c5\u51b5\u7684\u5224\u65ad\u548c\u7ec6\u8282\u7684\u5904\u7406\u3002\u4f8b\u5982\u4e3a\u4e86\u5904\u7406\u65b9\u4fbf\u800c \u201c\u4ee4\u201d $\\texttt{suf}, \\texttt{pre}$ \u7684\u4e0a\u9650\u4e0d\u8d85\u8fc7 $k$\uff08\u4e5f\u5373\u4e0a\u9762\u63d0\u5230\u7684\uff09\uff0c\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u6b63\u786e\u6027\n\n\u53e6\u5916\u8fd9\u91cc\u6bd4\u8f83\u61d2\u5c31\u6ca1\u6253\u6811\u5256...\u76f4\u63a5\u62c9\u4e86\u4e2a Lct \u8fc7\u6765\u7ef4\u62a4\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing std::reverse;\nusing std::max;\nusing std::min;\n\nconst int MAXN =5e5+20;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar(); bool f =0;\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\nvoid write(const int &x){\n\tif(x/10)\n\t\twrite(x/10);\n\tputchar('0'+x%10);\n}\n\nvoid read_string(char *s){\n\tchar ch =getchar();\n\twhile(ch < 'a' && ch > 'z')\n\t\tch =getchar();\n\tint tot =1;\n\twhile(ch >= 'a' && ch <= 'z')\n\t\ts[tot++] =ch, ch =getchar();\n}\n\n/*------------------------------Lct------------------------------*/\n\nnamespace Lct{\n\tbool rev[MAXN];\n\tint val[MAXN];\n\tint tag[MAXN];\n\t\n\tnamespace Splay{\n\t\tint ch[2][MAXN], fa[MAXN];\n\t\t\n\t\tinline void pushdown(const int &x){\n\t\t\tif(rev[x]){\n\t\t\t\trev[ch[0][x]] ^=1, rev[ch[1][x]] ^=1;\n\t\t\t\tch[0][x] ^=ch[1][x] ^=ch[0][x] ^=ch[1][x];\n\t\t\t\trev[x] =0;\n\t\t\t}\n\t\t\tif(tag[x]){\n\t\t\t\tif(ch[0][x])\n\t\t\t\t\tval[ch[0][x]] +=tag[x], tag[ch[0][x]] +=tag[x];\n\t\t\t\tif(ch[1][x])\n\t\t\t\t\tval[ch[1][x]] +=tag[x], tag[ch[1][x]] +=tag[x];\n\t\t\t\ttag[x] =0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tinline bool is_top(const int &x){ return (fa[x] == 0 || (ch[0][fa[x]] != x && ch[1][fa[x]] != x)); }\n\t\t\n\t\tinline bool get_type(const int &x){ return ch[1][fa[x]] == x; }\n\t\t\n\t\tinline void rotate(const int &x){\n\t\t\tbool typ_x =get_type(x);\n\t\t\tint y =fa[x], z =fa[y], a =ch[!typ_x][x];\n\t\t\tfa[x] =z; if(!is_top(y)) ch[get_type(y)][z] =x;\n\t\t\tfa[y] =x, ch[!typ_x][x] =y;\n\t\t\tfa[a] =y, ch[typ_x][y] =a;\n\t\t}\n\t\t\n\t\tvoid pushall(const int &x){\n\t\t\tif(!is_top(x))\n\t\t\t\tpushall(fa[x]);\n\t\t\tpushdown(x);\n\t\t}\n\t\t\n\t\tvoid splay(const int &x){\n\t\t\tpushall(x);\n\t\t\tfor(; !is_top(x); rotate(x))\n\t\t\t\tif(!is_top(fa[x])){\n\t\t\t\t\tif(get_type(fa[x]) == get_type(x))\n\t\t\t\t\t\trotate(fa[x]);\n\t\t\t\t\telse\n\t\t\t\t\t\trotate(x);\n\t\t\t\t}\n\t\t}\n\t}\n\tusing namespace Splay;\n\t\n\tvoid access(const int &x){\n\t\tfor(int pre =0, top =x; top; pre =top, top =fa[top]){\n\t\t\tsplay(top);\n\t\t\tch[1][top] =pre;\n\t\t}\n\t}\n\t\n\tinline void setroot(const int &x){\n\t\taccess(x), splay(x);\n\t\trev[x] =1;\n\t}\n\t\n\tinline void link(int x, int y){\n\t\t++x, ++y;\n\t\tsetroot(x);\n\t\tfa[x] =y;\n\t}\n\t\n\tinline int query(int x){\n\t\t++x;\n\t\tsplay(x);\n\t\treturn val[x];\n\t}\n\t\n\tinline void modify(int x, const int &typ){\n\t\t++x;\n\t\tsetroot(1);\n\t\taccess(x), splay(x);\n\t\tval[x] +=typ, tag[x] +=typ;\n\t}\n}\nusing Lct::link;\nusing Lct::query;\nusing Lct::modify;\n\n/*------------------------------Kmp------------------------------*/\n\nint pi[MAXN], pi_backup[MAXN]/*suf \u7684 pi*/;\n\nvoid Kmp(const int &n, const int &m, const int &k, const char *s, const char *t, int *rem){\n\tpi[1] =0;\n\tfor(int i =2; i <= m; ++i){\n\t\tint j =pi[i-1];\n\t\twhile(j && t[j+1] != t[i])\n\t\t\tj =pi[j];\n\t\tpi[i] =(t[j+1] == t[i]) ? j+1 : 0;\n\t}\n\tfor(int i =1, j =0; i <= n; ++i){\n\t\twhile(j && t[j+1] != s[i])\n\t\t\tj =pi[j];\n\t\tif(t[j+1] == s[i])\n\t\t\t++j;\n\t\tif(j > k)/*\u4e3a\u4e86\u540e\u9762\u65b9\u4fbf\u800c\u505a\u7684\u5904\u7406*/\n\t\t\tj =pi[j];\n\t\trem[i] =j;\n\t\tif(j == m)\n\t\t\tj =pi[j];\n\t}\n}\n\nvoid Build(const int &m){\n\tfor(int i =1; i <= m; ++i)\n\t\tlink(i, pi[i]);\n}\n\nvoid Backup(const int &m){\n\tfor(int i =1; i <= m; ++i)\n\t\tpi_backup[i] =pi[i];\n}\n\n/*------------------------------Main------------------------------*/\n\nchar s[MAXN], t[MAXN];\nint pre[MAXN], suf[MAXN];\n\nint cnt[MAXN];\n\nint main(){\n\tint n =read(), m =read(), k =read();\n\tread_string(s), read_string(t);\n\t\n\tKmp(n, m, k, s, t, suf);\n\tBuild(m);\n\treverse(s+1, s+1+n), reverse(t+1, t+1+m);\n\tKmp(n, m, k, s, t, pre);\n\treverse(pre+1, pre+1+n);\n\t\n\t/*Case 1*/\n\t/*t \u662f\u4e24\u4e2a\u5b50\u4e32\u4e2d\u67d0\u4e2a\u5b50\u4e32\u5185\u90e8\u7684\u5b50\u4e32*/\n\tif(m <= k)\n\t\tfor(int i =m; i <= n; ++i)\n\t\t\tif(suf[i] == m){\n\t\t\t\t/*\u5728 s_1 \u5185\uff0c\u5728 s_2 \u5185*/\n\t\t\t\tint start_L =max(1, i-k+1), start_R =start_L+k;\n\t\t\t\tint start_R2 =min(i-m+1, n-k+1), start_L2 =start_R2-1-k+1;\n\t\t\t\tif(start_R+k-1 > n && start_L2 < 1)\n\t\t\t\t\tcontinue;\n\t\t\t\telse{\n\t\t\t\t\tputchar('Y'), putchar('e'), putchar('s'), putchar('\\n');\n\t\t\t\t\tif(start_R+k-1 > n)\n\t\t\t\t\t\twrite(start_L2), putchar(' '), write(start_R2);\n\t\t\t\t\telse\n\t\t\t\t\t\twrite(start_L), putchar(' '), write(start_R);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t/*Case 2*/\n\t/*\u56e0\u5230\u8fbe\u8fb9\u754c\u65e0\u6cd5\u79fb\u52a8 \" \u6846 \" ( \u8bc1\u660e\u4e2d\u7684 \" \u65e0\u6cd5\u63a5\u7740\u64cd\u4f5c \" )*/\n\tif(n-k+1 > k){\n\t\tpi[0] =pi_backup[0] =-1;\n\t\tfor(int i =pre[n-k+1]; i != -1; i =pi[i])\n\t\t\t++cnt[i];\n\t\tfor(int i =suf[k]; i != -1; i =pi_backup[i])\n\t\t\tif(cnt[m-i] > 0){\n\t\t\t\tputchar('Y'), putchar('e'), putchar('s'), putchar('\\n');\n\t\t\t\twrite(1), putchar(' '), write(n-k+1);\n\t\t\t\treturn 0;\n\t\t\t}\n\t}\n\t\n\tfor(int i =k; i <= n-k; ++i)\n\t\tmodify(suf[i], 1);\n\tfor(int i =n-k+1; i > k; --i){\n\t\tif(m-pre[i] <= k && query(m-pre[i]) > 0){\n\t\t\tint start_L =-1, Rem =query(m-pre[i]);\n\t\t\tfor(int j =i-1; j >= k; --j){\n\t\t\t\tmodify(suf[j], -1);\n\t\t\t\tif(query(m-pre[i]) != Rem){\n\t\t\t\t\tstart_L =j-k+1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tputchar('Y'), putchar('e'), putchar('s'), putchar('\\n');\n\t\t\twrite(start_L), putchar(' '), write(i);\n\t\t\treturn 0;\n\t\t}\n\t\tmodify(suf[i-1], -1);\n\t}\n\t\n\tputchar('N'), putchar('o');\n}\n```\n\n## \u7ebf\u6027\u505a\u6cd5\n\n\uff08\u770b\u5b8c z-algorithm \u60f3\u627e\u51e0\u9053\u9898\u505a\uff0c\u60f3\u5230\u4e4b\u524d\u505a\u7684\u8fd9\u9053\u9898**\u4f3c\u4e4e**\u6709 z-algorithm \u7684\u7ebf\u6027\u505a\u6cd5\u5c31\u8bd5\u7740\u60f3\u4e86\u4e0b\uff1b\u5f04\u4e86\u534a\u5929\u641e\u5b8c\u4e86\u5c31\u53bb\u9898\u89e3\u533a\u53ca\u793e\u8bba\u6bd4\u5bf9\u4e0b\u505a\u6cd5\u7684\u5dee\u5f02\uff0c\u7ed3\u679c\u53d1\u73b0\u53ea\u80fd\u627e\u5230 z-algorithm \u7684 $\\log$ \u505a\u6cd5 \\shake\uff09\n\n\u7531\u4e8e kmp \u7684\u524d\u7f00\u51fd\u6570\u7ed9\u51fa\u7684\u4fe1\u606f\u4e0d\u592a\u597d\u7ef4\u62a4\uff0c\u6211\u4eec\u8003\u8651\u6362 z-algorithm \u8bd5\u8bd5\uff08\u76f8\u6bd4\u4e4b\u4e0b\u540e\u8005\u7684 `z[.]` \u7ed9\u51fa\u7684 \u201c\u4fe1\u606f\u201d \u76f4\u63a5\u662f\u4e00\u4e2a\u533a\u95f4\uff09\n\n\u8bbe $\\texttt{z\\_pre}[i]$ \u7684\u503c\u4e3a\u6700\u957f\u7684\u4ece $s[i]$ \u5f00\u59cb\u7684\u4e0e $t$ \u7684\u524d\u7f00\u7684\u516c\u5171\u5b50\u4e32\uff0c$\\texttt{z\\_suf}[i]$ \u7684\u503c\u4e3a\u6700\u957f\u7684\u5728 $s[i]$ \u7ed3\u675f\u7684\u4e0e $t$ \u7684\u540e\u7f00\u7684\u516c\u5171\u5b50\u4e32\uff08\u8fd9\u91cc\u4e0b\u6807\u4ece $0$ \u5f00\u59cb\uff09\n\n\u6211\u4eec\u5047\u8bbe\u6700\u540e\u62fc\u63a5\u51fa\u7684\u7b54\u6848\u4e32\u7684 $t$ \u5b50\u4e32\u662f\u4ece $s[i]$ \u5f00\u59cb\u7684\u957f\u5ea6\u4e3a $a$ \u7684\u5b50\u4e32\u52a0\u4e0a\u5728 $s[j]$ \u7ed3\u675f\u7684\u957f\u5ea6\u4e3a $b$ \u7684\u5b50\u4e32\u3002\u663e\u7136\u6709 $a\\leq \\texttt{z\\_pre}[i], b\\leq \\texttt{z\\_suf}[j]$\uff0c\u5e76\u4e14\u8981\u6c42\u8fd9\u6837\u9009\u53d6\u7684\u7528\u6765\u62fc\u63a5\u7684\u4e24\u4e2a\u4e32\u662f\u5408\u6cd5\u7684\n\n\u5bf9\u4e8e $\\texttt{Case 1}$ \u7684\u5904\u7406\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\n\n\u5bf9\u4e8e $\\texttt{Case 2}$\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u5728 $a$ \u6216 $b$ \u4e0d\u53d6\u5230 `z[.]` \u7684\u4e0a\u754c\u65f6\uff0c\u9650\u5236\u9009\u53d6\u7684\u7528\u6765\u62fc\u63a5\u7684\u4e32\u5fc5\u987b\u662f \u201c\u7d27\u8d34\u201d \u8fb9\u7f18\u7684\u3002\u4f46\u4e0d\u540c\u4e8e kmp\uff0c\u6211\u4eec\u4ec5\u80fd\u5bf9\u5176\u4e2d\u4e00\u4e2a\u62fc\u63a5\u4e32\u7684\u4f4d\u7f6e\u505a\u51fa\u4fdd\u8bc1\uff1b\u5373\u5728 $a$ \u6216 $b$ \u4e0d\u53d6\u5230 `z[.]` \u7ed9\u51fa\u7684\u4e0a\u754c\u65f6\uff0c\u4e00\u5b9a\u6709\u5de6\u4fa7\u62fc\u63a5\u4e32\u662f\u4ece $s[0]$ \u5f00\u59cb\u7684\uff0c\u6216\u53f3\u4fa7\u62fc\u63a5\u4e32\u662f\u5728 $s[n-1]$ \u7ed3\u675f\u7684\u3002\u8fd9\u4e2a\u4e0d\u50cf kmp \u505a\u6cd5\u90a3\u6837\u80fd\u5f88\u8f7b\u677e\u7684 $O(n)$ \u5904\u7406\u51fa\u6765\uff0c\u4f46\u662f\u4e5f\u4e0d\u662f\u6ca1\u6709\u529e\u6cd5\uff0c\u5e76\u4e14\u5176\u53ef\u4ee5\u5f52\u7c7b\u5230 $\\texttt{Case 3}$\uff1b\u4e8e\u662f\u6211\u4eec\u5148\u8ba8\u8bba  $\\texttt{Case 3}$ \u7684\u505a\u6cd5\n\n\u5bf9\u4e8e $\\texttt{Case 3}$\u3002\u9996\u5148\u6211\u4eec\u56de\u987e\u4e0b\u73b0\u5728\u6240\u62e5\u6709\u7684\u9650\u5236/\u6761\u4ef6\uff1a\n\n- \u82e5\u7b54\u6848 $t$ \u7684\u7b2c\u4e00\u6bb5\uff08\u5de6\u4fa7\u90a3\u6bb5\uff09\u662f\u4ece $i$ \u5f00\u59cb\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u6709 $a=\\texttt{z\\_pre}[i]$\uff0c\u5373\u5de6\u4fa7\u62fc\u63a5\u4e32\u4e00\u5b9a\u5728 $s[i+\\texttt{z\\_pre}[i]-1]$ \u7ed3\u675f\n\n\uff08\u5f53\u7136\u8fd9\u4e5f\u53ef\u4ee5\u662f\u5173\u4e8e $\\texttt{z\\_suf}[i]$ \u7684\uff0c\u7136\u540e\u4e0b\u9762\u7684\u505a\u6cd5\u90fd\u662f\u5bf9\u79f0\u7684\uff09\n\n\u8fd9\u6837 $a$ \u5c31\u56fa\u5b9a\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u627e\u5230\u5408\u6cd5\u7684 $j$ \u4e14\u5176 $b=m-a$ \u5373\u53ef\uff08\u5f53\u7136\u8fd8\u6709 $a\\leq k$ \u4ec0\u4e48\u7684\u9650\u5236\uff0c\u8fd9\u4e2a\u5728\u6c42 `z[.]` \u65f6\u5904\u7406\u4e0b\u53ca\u52a0\u4e00\u4e9b\u5224\u65ad\u5c31\u884c\u4e86\uff09\u3002\u8d2a\u5fc3\u5730\u53ef\u4ee5\u60f3\u5230\u4e3a\u6bcf\u79cd $b$ \u4fdd\u7559**\u6700\u53f3\u7684**\uff08\u5408\u6cd5\u7684\uff09$j$ \u4e00\u5b9a\u662f\u66f4\u4f18\u7684\uff1b\u7136\u540e\u8be2\u95ee\u65f6\u53ea\u9700\u68c0\u67e5\u6700\u53f3\uff08\u5927\uff09\u7684\u6ee1\u8db3\u5b58\u5728 $b=m-a$ \u7684 $j$ \u662f\u5426\u5408\u6cd5\u5373\u53ef\n\n\u518d\u8003\u8651\u6bcf\u4e2a $j$\uff0c\u4f1a\u88ab\u8fd9\u4e2a $j$ \u4f5c\u51fa\u8d21\u732e\u7684 $b$ \u4e00\u5b9a\u662f\u4e00\u6bb5\u533a\u95f4 $[l, \\texttt{z\\_suf}[j]]$\uff1b\u5176\u4e2d $l$ \u4e0d\u4e00\u5b9a\u4e3a $1$\uff08\u53e6\u5916\u5bf9\u4e8e $b=0$\uff0c\u4e8b\u5b9e\u4e0a\u5c31\u76f8\u5f53\u4e8e $\\texttt{Case 1}$\uff0c\u5e76\u4e14\u8ba8\u8bba\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u91cc\u5c31\u5ffd\u7565\u4e86\uff09\u662f\u56e0\u4e3a\u6709\u5f3a\u5236\u53d6 $k$ \u4e2a\u7684\u9650\u5236\uff0c\u8d77\u59cb\u4e0b\u6807\u8fc7\u5927\u53ef\u80fd\u5bfc\u81f4\u8d85\u51fa\u8303\u56f4\u3002\u4e8e\u662f\u8fd9\u5c31\u76f8\u5f53\u4e8e\u533a\u95f4\u53d6 $\\max$\uff0c\u5355\u70b9\u67e5\u8be2\u4e14\u67e5\u8be2\u4ec5\u5728\u6240\u6709\u7684\u4fee\u6539\u64cd\u4f5c\u5b8c\u6210\u540e\n\n\u4e0d\u96be\u60f3\u5230\u5c06\u64cd\u4f5c\u79bb\u7ebf\uff0c\u6309\u4fee\u6539\uff08\u53d6 $\\max$\uff09\u7684\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u53ef\u4ee5\u7ebf\u6027\u6876\u6392\uff09\uff0c\u8fd9\u6837\u533a\u95f4\u53d6 $\\max$ \u5c31\u53d8\u6210\u4e86\u533a\u95f4\u67d3\u8272\u3002\u8fdb\u4e00\u6b65\u53c8\u53ef\u4ee5\u60f3\u5230\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u505a\uff0c\u8fd9\u6837\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6700\u7ec8\u53d6\u503c\u5c31\u662f\u6392\u5e8f\u540e\u7b2c\u4e00\u6b21\u88ab\u4fee\u6539\u65f6\u7684\u503c\uff0c\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u7528\u5e76\u67e5\u96c6\u5c06\u4fee\u6539\u8fc7\u7684\u5143\u7d20\u90fd\u7f29\u8d77\u6765\u8df3\u8fc7\u3002\u8fd9\u6837\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u5c31\u88ab\u4f18\u5316\u5230\u4e86 $\\Theta(\\alpha(n))$\n\n\u4e8e\u662f $\\texttt{Case 3}$ \u5269\u4e0b\u90e8\u5206\u5c31\u53ea\u9700\u5bf9\u6bcf\u4e2a $i$\uff08\u8fd9\u65f6 $a=\\texttt{z\\_pre}[i]$\uff09\u8be2\u95ee\u4e00\u6b21\uff08\u6700\u53f3\u7684\u6ee1\u8db3\u5b58\u5728 $b=m-a$ \u7684 $j$\uff09\u5c31\u884c\u4e86\uff0c\u590d\u6742\u5ea6\u7ebf\u6027\u3002\u521a\u624d\u88ab\u6401\u7f6e\u7684 $\\texttt{Case 2}$ \u6b64\u65f6\u4e5f\u5f88\u663e\u7136\u4e86\uff0c\u540c\u6837\u5bf9\u6bcf\u4e2a\u6ee1\u8db3 $i+a-1=k-1$ \u7684 $i, a$\uff08\u5373\u5de6\u4fa7\u62fc\u63a5\u4e32\u4ece $0$ \u5f00\u59cb\uff0c\u9009\u53d6\u7684\u662f $s[0..(k-1)]$ \u8fd9\u4e00\u6bb5\uff09\u8be2\u95ee\u4e00\u6b21\u5373\u53ef\n\n\u8fd9\u91cc\u8bb2\u5f97\u53ef\u80fd\u4e0d\u662f\u5f88\u6e05\u6670\uff08\u5199\u5b8c\u540e\u6ca1\u505a\u591a\u5c11\u6b21\u4fee\u6539 \\kk\uff09\uff0c\u4ec5\u4ec5\u662f\u7b80\u6d01\u5730\u8bb2\u4e86\u4e0b\u601d\u8def\uff1b\u5982\u679c\u771f\u7684\u6709\u4eba\u770b\u5230\u8fd9\u7bc7\u9898\u89e3\u5e76\u4e14\u611f\u5230\u7591\u60d1\u7684\u8bdd\u53ef\u4ee5\u544a\u8bc9\u6211\uff0c\u7136\u540e\u6211\u518d\u5c3d\u53ef\u80fd\u4fee\u7f2e\u4e0bqaq\n\n## CODE\uff08\u7ebf\u6027\u505a\u6cd5\uff09\n\n\u633a\u6c14\u4eba\u7684\u662f\u7531\u4e8e\u5e38\u6570\u4ee5\u53ca\u6570\u636e\u4e0d\u5f3a\u7684\u539f\u56e0\u8dd1\u5f97\u6bd4\u4e09\u500d\u5e38\u6570\uff08Splay\uff09\u7684 $\\Theta(n\\log n)$ \u505a\u6cd5\u8fd8\u6162\uff08\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\nusing std::reverse;\nusing std::max;\nusing std::min;\nusing std::vector;\nusing std::pair;\ntypedef pair<int, int> pad;\n\nconst int MAXN =5e5+20;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar(); bool f =0;\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\nvoid write(const int &x){\n\tif(x/10)\n\t\twrite(x/10);\n\tputchar('0'+x%10);\n}\n\nstruct string{\n\tchar data[MAXN];\n\tint len;\n\t\n\tint size() const{\n\t\treturn len;\n\t}\n\tvoid reverse(){\n\t\tstd::reverse(data, data+len);\n\t}\n\t\n\tchar & operator [] (const int &index){\n\t\treturn data[index];\n\t}\n\tchar operator [] (const int &index) const{\n\t\treturn data[index];\n\t}\n};\n\nvoid read_string(string &s){\n\tchar ch =getchar();\n\twhile(ch < 'a' && ch > 'z')\n\t\tch =getchar();\n\ts.len =0;\n\twhile(ch >= 'a' && ch <= 'z')\n\t\ts[s.len++] =ch, ch =getchar();\n}\n\n/*------------------------------Z-algorithm------------------------------*/\n\nvoid z_algorithm(const string &s1, const string &s2, vector<int> &z, const vector<int> &z_s2, const int &z_limit){\n\tconst int n1 =s1.size(), n2 =min((int)s2.size(), z_limit);\n\twhile(z[0] < n2 && s1[z[0]] == s2[z[0]])\n\t\t++z[0];\n\tfor(int i =1, l =0, r =0; i < n1; ++i){\n\t\tif(i < r)\n\t\t\tz[i] =min(r-i, z_s2[i-l]);\n\t\twhile(z[i] < n2 && i+z[i] < n1 && s1[i+z[i]] == s2[z[i]])\n\t\t\t++z[i];\n\t\tif(r < i+z[i])\n\t\t\tl =i, r =i+z[i];\n\t}\n}\n\n/*------------------------------Disjoint_Set------------------------------*/\n\nstruct disjoint_set{\n\tvector<int> fa;\n\t\n\tdisjoint_set(const int &n){\n\t\tfa.resize(n);\n\t\tfor(int i =0; i < n; ++i)\n\t\t\tfa[i] =i;\n\t}\n\t\n\tint get_fa(const int &x){\n\t\tif(fa[x] == x)\n\t\t\treturn x;\n\t\telse\n\t\t\treturn fa[x] =get_fa(fa[x]);\n\t}\n\t// merge <x> to <y> //\n\tvoid merge(int x, int y){/* \u8fd9\u91cc\u61d2\u5f97\u5e26\u79e9\u4e86 qaq\uff0c\u60f3\u5199\u4e5f\u5b8c\u5168\u53ef\u4ee5 */\n\t\tx =get_fa(x), y =get_fa(y);\n\t\tfa[x] =y;\n\t}\n};\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tint n =read(), m =read(), k =read();\n\tstring s, t;\n\tread_string(s), read_string(t);\n\t\n\tvector<int> z_pre(n, 0), z_suf(n, 0), z_t(m, 0);\n\tz_algorithm(t, t, z_t, z_t, k);\n\tz_algorithm(s, t, z_pre, z_t, k);\n\ts.reverse(), t.reverse();\n\tz_t.assign(m, 0);\n\tz_algorithm(t, t, z_t, z_t, k);\n\tz_algorithm(s, t, z_suf, z_t, k);\n\treverse(z_suf.begin(), z_suf.end());\n\t\n\tauto Ans =[&](const int &t1, const int &s2){\n\t\tif(t1 == -1)\n\t\t\tputchar('N'), putchar('o');\n\t\telse{\n\t\t\tputchar('Y'), putchar('e'), putchar('s'), putchar('\\n');\n\t\t\twrite(t1-k+1 +1), putchar(' '), write(s2 +1);\n\t\t}\n\t\treturn 0;\n\t};\n\t\n\t// Case 1 //\n\tif(m <= k)\n\t\tfor(int i =0; i < n; ++i)\n\t\t\tif(z_pre[i] == m){\n\t\t\t\tint start_L =max(0, (i+z_pre[i]-1) -k+1), start_R =start_L+k;\n\t\t\t\tint start_R2 =min(i, (n-1)-k+1), start_L2 =(start_R2-1)-k+1;\n\t\t\t\t/* \u6ce8\u610f\u9664\u4e86\u5728\u5de6\u5b50\u4e32\u5185\u8fd8\u6709\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5728\u53f3\u5b50\u4e32\u5185 */\n\t\t\t\tif(start_R+k-1 <= n-1)\n\t\t\t\t\treturn Ans(start_L+k-1, start_R);\n\t\t\t\telse if(start_L2 >= 0)\n\t\t\t\t\treturn Ans(start_L2+k-1, start_R2);\n\t\t\t}\n\t\n\tvector<vector<pad> > oper(n);/* \u5bf9\u4e8e x\uff0c\u6240\u6709\u4f7f\u533a\u95f4 ( mx[.] \u7684\u533a\u95f4 ) \u5bf9 x \u53d6 max ( \u6700\u53f3 ) \u7684\u64cd\u4f5c */\n\tfor(int i =0; i < n; ++i){\n\t\t/* [l, r] \u4f5c\u4e3a\u53f3\u4fa7\u62fc\u63a5\u4e32\u80fd\u5f71\u54cd\u7684\u7b54\u6848 ( \u80fd\u591f\u63d0\u4f9b\u8fd9\u4e9b\u957f\u5ea6\u7684 t \u540e\u7f00 ) */\n\t\t/* z_suf[i] == 0 \u7684\u5ffd\u7565\u4e0d\u8ba1 ( \u5176\u5b9e\u4e5f\u7b49\u4ef7 Case 1 )\uff0c\u540c\u65f6\u8ba8\u8bba\u4e5f\u6bd4\u8f83\u9ebb\u70e6 */\n\t\tint l =max(1, i-min(i, (n-1)-k+1)+1), r =z_suf[i];\n\t\tif(l <= r)\n\t\t\toper[i].push_back(pad(l, r));\n\t}\n\tvector<int> mx(n+1, -1);/* \u6bcf\u79cd z_suf \u6700\u53f3\u7684\u8d77\u70b9\u4f4d\u7f6e */\n\tdisjoint_set DS(n+1);\n\tauto modify =[&](const int &l, const int &r, const int &val){\n\t\tfor(int i =DS.get_fa(l); i <= r; DS.merge(i, i+1), i =DS.get_fa(i)){\n\t\t\tif(mx[i] == -1)\n\t\t\t\tmx[i] =val;\n\t\t}\n\t};\n\tfor(int x =n-1; x >= 0; --x)\n\t\tfor(pad i:oper[x])\n\t\t\tmodify(i.first, i.second, x);\n\t\n\t// Case 3 //\n\tvector<int> arr;/* list for Case 2 */\n\tarr.reserve(n);\n\tfor(int i =0; i < n; ++i){\n\t\tif((i+z_pre[i]-1) /*-> t1*/ >= k && z_pre[i] <= k && m-z_pre[i] <= k)\n\t\t\tif(mx[m-z_pre[i]] != -1 && mx[m-z_pre[i]]-(m-z_pre[i])+1 > i+z_pre[i]-1)\n\t\t\t\treturn Ans(i+z_pre[i]-1, mx[m-z_pre[i]]-(m-z_pre[i])+1);\n\t\t\n\t\tif(i <= k-1 && i+z_pre[i]-1 >= k-1)\n\t\t\tarr.push_back(k-1-i+1);\n\t}\n\t\n\t// Case 2 //\n\tfor(int z:arr)\n\t\tif(z <= k && m-z <= k)\n\t\t\tif(mx[m-z] != -1 && mx[m-z]-(m-z)+1 > k-1)\n\t\t\t\treturn Ans(k-1, mx[m-z]-(m-z)+1);\n\t\n\treturn Ans(-1, -1);\n}\n```",
        "postTime": 1606094979,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF955D \u3010Scissors\u3011"
    },
    {
        "content": "~~\u6628\u665a[CF\u6bd4\u8d5b](https://codeforces.com/contest/1206/standings/participant/27233501#p27233501)\u6bd4\u8f83\u9893\uff0c\u4eca\u5929\u6709\u5fc3\u60c5\u5199\u9898\u89e3\u5c31\u4e0d\u9519\u4e86QWQ~~\n\n>### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF955D) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/955/problem/D)\n\n>\u7ed9\u5b9a\u5b57\u7b26\u4e32$a,b,|a|=n,|b|=m$\uff0c\u6c42\u662f\u5426\u53ef\u4ee5\u5728$a$\u4e2d\u9009$2$\u4e2a\u957f\u5ea6\u4e3a$s$\u7684\u4e0d\u76f8\u4ea4\u5b50\u4e32\uff0c\u4f7f\u5f97$b$\u662f\u8fd9$2$\u4e2a\u4e32\u6309\u5728$a$\u4e2d\u7684\u987a\u5e8f\u8fde\u8d77\u6765\u540e\u5f97\u5230\u7684\u4e32\u7684\u5b50\u4e32\uff0c\u82e5\u53ef\u4ee5\uff0c\u8f93\u51fa\u4efb\u4e00\u9009\u6cd5\u3002\n\n>$2\\le m\\le 2s\\le n\\le 5\\times 10^5$\u3002\n\n\u8bbe\u4ece$a$\u4e2d\u9009\u51fa\u7684$2$\u4e2a\u5b50\u4e32\u4e3a$a1,a2$\u3002\u5206$2$\u79cd\u60c5\u51b5\uff1a\n\n1. $a1$\u6216$a2$\u5b8c\u5168\u5305\u542b$b$\uff1b\n2. $a1$\u7684\u4e00\u4e2a\u540e\u7f00\u4e0e$a2$\u7684\u4e00\u4e2a\u524d\u7f00\u7ec4\u6210$b$\u3002\n\n\u7b2c$1$\u79cd\u60c5\u51b5\u6bd4\u8f83\u5bb9\u6613\uff0c\u76f4\u63a5\u5c06$b$\u4f5c\u4e3a\u6a21\u5f0f\u4e32\u5339\u914d$a$\uff08\u8fd9\u91cc\u6211\u7528\u7684\u662fZ\u7b97\u6cd5\uff08\u5982\u679c\u806a\u660e\u7684\u8bfb\u8005\u8fd8\u4e0d\u77e5\u9053Z\u7b97\u6cd5\u662f\u4ec0\u4e48\uff0cplease\u70b9\u51fb[\u8fd9\u4e2a](https://www.luogu.org/blog/Chenxiao-Yan/Z-algorithm)\uff09\uff09\uff0c\u5339\u914d\u6210\u529f\u7684\u4f4d\u7f6e\u518d\u5206$2$\u79cd\u60c5\u51b5\uff1a$a1$\u5305\u542b$b$\u548c$a2$\u5305\u542b$b$\u3002$a1$\u5305\u542b$b$\u7684\u60c5\u51b5\u8003\u8651\u8d2a\u5fc3\u5730\u5c06$a1$\u6700\u5de6\u5316\uff0c\u597d\u7ed9$a2$\u7559\u4f4d\u7f6e\uff0c\u6700\u540e\u5982\u679c\u653e\u5f97\u4e0b\u76f4\u63a5\u8f93\u51fa\u7b54\u6848`return 0;`\uff1b$a2$\u5305\u542b$b$\u7c7b\u4f3c\u3002\n\n\u7b2c$2$\u79cd\u60c5\u51b5\uff0c\u8bbe$lft_i$\u8868\u793a\u6ee1\u8db3$a_{j\\sim j+s-1}$\u7684\u957f\u5ea6\u4e3a$i$\u7684\u540e\u7f00\u5339\u914d$b$\u7684\u957f\u5ea6\u4e3a$i$\u7684\u524d\u7f00\u7684\u6700\u5c0f\u7684$j$\uff0c$rit_i$\u8868\u793a\u6ee1\u8db3$a_{j\\sim j+s-1}$\u7684\u957f\u5ea6\u4e3a$i$\u7684\u524d\u7f00\u5339\u914d$b$\u7684\u957f\u5ea6\u4e3a$i$\u7684\u540e\u7f00\u7684\u6700\u5927\u7684$j$\uff0c\u82e5\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684$j$\u5219\u5206\u522b\u4e3a$\\infty,-\\infty$\u3002\u201c\u6700\u5c0f\u201d\u548c\u201c\u6700\u5927\u201d\u662f\u57fa\u4e8e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u4e0e\u7b2c$1$\u79cd\u60c5\u51b5\u7c7b\u4f3c\uff0c\u4e3a\u7684\u662f\u5c3d\u53ef\u80fd\u7ed9\u53e6\u4e00\u4e2a\u5b50\u4e32\u7559\u4f4d\u7f6e\u3002\u8fd9\u6837\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e$i\\in[0,s]$\uff0c\u82e5$m-i\\in[0,s]$\u4e14$lft_i+s-1<rit_{m-i}$\uff0c\u5219\u5b58\u5728\u7b54\u6848$(lft_i,rit_{m-i})$\u3002\n\n\u4e0b\u9762\u8003\u8651$lft$\u548c$rit$\u6570\u7ec4\u600e\u4e48\u6c42\u3002\u4ee5$lft$\u4e3a~~\u6817~~\u4f8b\uff0c\u6211\u4eec\u4ee4$c=b+\\texttt{!}+a$\uff0c\u5bf9$c$\u8dd1\u4e00\u904dZ\u7b97\u6cd5\u3002$\\forall i\\in[1,n]$\uff0c\u8003\u8651\u82e5$a1$\u7684\u540e\u7f00\u4ece\u7b2c$i$\u4f4d\u5f00\u59cb\uff0c\u80fd\u5f71\u54cd\u5230\u54ea\u4e9b$lft_j$\u3002\u663e\u7136$j_{\\max}=z_{c,m+1+j}$\uff0c\u56e0\u4e3a\u6700\u591a\u80fd\u5f80\u540e\u62d3\u5c55$z_{c,m+1+j}$\u4e2a\u5b57\u7b26\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u540e\u7f00\u4e0e$b$\u7684\u524d\u7f00\u5339\u914d\u3002$j_{\\min}$\u5462\uff1f$j$\u8d8a\u5c0f\uff0c\u5373$a1$\u5728\u7b2c$i$\u4f4d\u540e\u9762\u7684\u5b57\u7b26\u8d8a\u5c11\uff0c\u90a3\u4e48$a1$\u5728\u7b2c$i$\u4f4d\u524d\u9762\u7684\u5b57\u7b26\u5c31\u8d8a\u591a\uff0c\u591a\u5230\u4e00\u5b9a\u7a0b\u5ea6\u5c31\u4f1a\u62b5\u5230\u4f4d\u7f6e$1$\uff0c\u6240\u4ee5$j_{\\min}$\u662f\u521a\u597d\u62b5\u5230\u7684\u60c5\u51b5\uff0c\u5982\u679c\u4e0d\u4f1a\u62b5\u5230\u5c31\u662f$1$\u3002\u4e8e\u662f$j_{\\min}=\\max(s-(i-1),1)$\u3002\u7b97\u51fa\u5f71\u54cd\u8303\u56f4\u540e\uff0c\u6211\u4eec\u8981\u53bb\u201c\u5f71\u54cd\u201d\u554a\uff0c\u5373\u4ee4$\\forall j\\in[j_{\\min},j_{\\max}],lft_j=\\min(lft_j,i+j\\cancel{-1}-s\\cancel{+1})$\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5dee\u5206\u4e5f\u53ef\u4ee5\uff0c\u867d\u7136\u90fd\u662f$\\mathrm O(n\\log_2n)$\uff0c\u4f46\u5dee\u5206\u597d\u5199\u4e00\u70b9\u3002\n\n\u4e0b\u9762\u8bb2\u5177\u4f53\u600e\u4e48\u5dee\u5206\uff1a$\\forall k\\in[0,m]$\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6dfb\u52a0\u5e8f\u5217$add_k$\u548c\u5220\u9664\u5e8f\u5217$del_k$\u3002\u5bf9\u4e8e\u6bcf\u6b21\u5f71\u54cd\uff0c\u5728$add_{j_{\\min}}$\u548c$del_{j_{\\max}+1}$\u91cc\u63d2\u5165$i-s$\u3002\u6700\u540e\u7ef4\u62a4\u4e00\u4e2a`multiset`$st$\uff08\u521d\u59cb\u4e3a$\\{\\infty\\}$\uff09\uff0c\u4ece$i=1$\u5230$i=m$\u9012\u63a8\uff0c\u6bcf\u6b21\u5c06$add_i$\u91cc\u7684\u5143\u7d20`insert`\u8fdb\u53bb\uff0c\u5c06$del_i$\u91cc\u7684\u5143\u7d20`erase`\u6389\uff08\u6ce8\u610f\u5982\u679c\u5199`st.erase(x)`\u4f1a\u628a\u6240\u6709\u7684$x$\u90fd\u5220\u6389\uff0c\u5e94\u8be5\u5199`st.erase(st.find(x))`\uff09\uff0c`*st.begin()+i`\u5c31\u662f$lft_i$\u3002\n\n$rit$\u6570\u7ec4\u7684\u6c42\u6cd5\u7c7b\u4f3c\uff0c\u4e0d\u540c\u5728\u4e8e$c=b^\\mathrm r+\\texttt!+a^\\mathrm r$\uff0c\u8bbf\u95ee$z$\u6570\u7ec4\u65f6\u8981\u8bbf\u95ee\u5728\u5012\u4e32\u4e2d\u7684\u4f4d\u7f6e\uff0c$j_{\\min}=\\max(s-(n-i),1),j_{\\max}=z_{c,m+1+(n+1-i)}$\uff0c\u5f71\u54cd\u4e3a$\\forall j\\in[j_{\\min},j_{\\max}],rit_j=\\min(rit_j,i-j+1)$\uff0c$st$\u521d\u59cb\u4e3a$\\{-\\infty\\}$\uff0c\u6bcf\u6b21\u63d2\u5165$i+1$\uff0c$rit_i$\u4e3a`*--st.end()-i`\u3002\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\u5427\uff1a\uff08\u5199\u4e0d\u52a8\u4e86\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\nconst int inf=0x3f3f3f3f;\nconst int N=500000,M=500000;\nint n/*|a|*/,m/*|b|*/,s/*\u8981\u9009\u7684\u5b57\u4e32\u7684\u957f\u5ea6*/,t/*|c|*/;\nint rev_pos(int pos){return n+1-pos;}//\u5728\u5012\u4e32\u4e2d\u7684\u4f4d\u7f6e \nchar a[N+5],b[M+5],ra[N+5]/*rev(a)*/,rb[M+5]/*rev(b)*/,c[N+1+M+5]/*b+'!'+a\u6216rb+'!'+ra*/;\nvoid con(char str1[],char str2[]){//\u4ee4c=str1+'!'+str2 \n\tt=0;\n\tfor(int i=1;i<=m;i++)c[++t]=str1[i];\n\tc[++t]='!';\n\tfor(int i=1;i<=n;i++)c[++t]=str2[i]; \n}\nint z1[N+1+M+1]/*a,b\u6b63\u7740\u7684z\u6570\u7ec4*/,z2[N+1+M+1]/*a,b\u5012\u7740\u7684z\u6570\u7ec4*/;\nvoid z_init(int z[]){//Z\u7b97\u6cd5 \n\tint zl=0,zr=0;\n\tfor(int i=2;i<=t;i++)\n\t\tif(zr<i){\n\t\t\twhile(i+z[i]<=t&&c[i+z[i]]==c[1+z[i]])z[i]++;\n\t\t\tif(z[i])zl=i,zr=i+z[i]-1;\n\t\t}\n\t\telse if(i+z[i-zl+1]<=zr)z[i]=z[i-zl+1];\n\t\telse{\n\t\t\tz[i]=zr-i+1;\n\t\t\twhile(i+z[i]<=t&&c[i+z[i]]==c[1+z[i]])z[i]++;\n\t\t\tzl=i;zr=i+z[i]-1;\n\t\t}\n}\nint lft[M+1],rit[M+1];\nvector<int> dadd[M+1],ddel[N+1];//\u5dee\u5206 \nmultiset<int> st;\nint main(){\n\tcin>>n>>m>>s>>a+1>>b+1;\n\tmemcpy(ra+1,a+1,n+1);reverse(ra+1,ra+n+1);\n\tmemcpy(rb+1,b+1,m+1);reverse(rb+1,rb+m+1);\n\tcon(b,a);z_init(z1);\n\tcon(rb,ra);z_init(z2);\n\tif(s>=m)//\u7b2c1\u79cd\u60c5\u51b5 \n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(z1[m+1+i]==m){\n\t\t\t\tint l=max(1,i-(s-m)),r=l+s;\n\t\t\t\tif(r+s-1<=n)return cout<<\"Yes\\n\"<<l<<\" \"<<r,0;\n\t\t\t\tr=min(n,i+s-1)-s+1;l=r-s;\n\t\t\t\tif(l>=1)return cout<<\"Yes\\n\"<<l<<\" \"<<r,0;\n\t\t\t}\n\t//\u7b2c2\u79cd\u60c5\u51b5 \n\tfor(int i=1;i<=n;i++){//\u5bf9lft\u5f71\u54cd \n\t\tint l=max(s-(i-1),1),r=z1[m+1+i];\n\t\tif(l>r)continue;\n\t\tdadd[l].pb(i-s);if(r<m)ddel[r+1].pb(i-s);\n\t}\n\tst.insert(inf);//\u521d\u59cb\u5316 \n\tfor(int i=1;i<=m;i++){//\u9012\u63a8\u5dee\u5206\u6c42lft \n\t\tfor(int j=0;j<dadd[i].size();j++)st.insert(dadd[i][j]);\n\t\tfor(int j=0;j<ddel[i].size();j++)st.erase(st.find(ddel[i][j]));\n\t\tlft[i]=*st.begin()+i;\n\t}\n\tfor(int i=1;i<=m;i++)dadd[i].clear(),ddel[i].clear();//\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea \n\tfor(int i=1;i<=n;i++){//\u5bf9rit\u5f71\u54cd \n\t\tint l=max(s-(n-i),1),r=z2[m+1+rev_pos(i)];\n\t\tif(l>r)continue;\n\t\tdadd[l].pb(i+1);if(r<m)ddel[r+1].pb(i+1);\n\t}\n\tst.clear();st.insert(-inf);//\u521d\u59cb\u5316 \n\tfor(int i=1;i<=m;i++){//\u9012\u63a8\u5dee\u5206\u6c42rit \n\t\tfor(int j=0;j<dadd[i].size();j++)st.insert(dadd[i][j]);\n\t\tfor(int j=0;j<ddel[i].size();j++)st.erase(st.find(ddel[i][j]));\n\t\trit[i]=*--st.end()-i;\n\t}\n//\tfor(int i=1;i<=m;i++)printf(\"lft[%d]=%d rit[%d]=%d\\n\",i,lft[i],i,rit[i]);\n\tfor(int i=0;i<=s;i++)if(0<=m-i&&m-i<=s)\n\t\tif(lft[i]+s-1<rit[m-i])//\u4e0d\u76f8\u4ea4 \n\t\t\treturn cout<<\"Yes\\n\"<<lft[i]<<\" \"<<rit[m-i],0;\n\tputs(\"No\");\n\treturn 0;\n}\n```",
        "postTime": 1566220568,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 955D - Scissors"
    },
    {
        "content": "\u9898\u5916\u8bdd\uff1a\u5bc4\u4e86\uff0c\u59dc\u5e03\u7f6e\u7684\u524d\u9762\u51e0\u9053\u7ea2\u9898\u4e00\u4e2a\u4e0d\u4f1a\uff0c\u552f\u72ec\u8fd9\u9053\u9ec4\u9898\u60f3\u51fa\u6765\u4e86\u3002  \n\u9996\u5148\u6211\u4eec\u770b\u5230\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u81ea\u7136\u60f3\u5230\u9700\u8981 KMP\u3002\u901a\u8fc7 KMP\uff0c\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u7684\u5904\u7406 $t$ \u88ab $s$ \u526a\u4e0b\u7684\u4e24\u4e2a\u4e32\u4e2d\u4e00\u4e2a\u5b8c\u5168\u5305\u542b\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u8003\u8651 $t$ \u88ab\u5206\u6210\u4e24\u4efd\u7684\u60c5\u51b5\u3002  \n\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u526a\u51fa\u6765\u7684\u4e24\u4e2a\u4e32\u80fd\u4f7f\u5176\u5408\u6cd5\u3002\u8bbe\u524d\u9762\u7684\u4e32\u4e3a $s1$\uff0c\u540e\u9762\u7684\u4e32\u4e3a $s2$\u3002\u5408\u6cd5\u7684\u60c5\u51b5\u5373\u4e3a\u5b58\u5728\u4e00\u4e2a $p$ \u4f7f\u5f97 $s1$ \u957f\u4e3a $p$ \u7684\u540e\u7f00\u4e0e $t$ \u957f\u4e3a $p$ \u7684\u524d\u7f00\u76f8\u7b49\uff1b\u5e76\u4e14 $s2$ \u957f\u4e3a $m-p$ \u7684\u524d\u7f00\u4e0e $t$ \u957f\u4e3a $m-p$ \u7684\u540e\u7f00\u76f8\u7b49\u3002  \n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u679a\u4e3e $p$\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a $x(x\\ge k)$ \u4f7f\u5f97 $s_{1\\sim x}$ \u4e0e $t$ \u5339\u914d\u957f\u5ea6\u53ef\u4ee5\u4e3a $p$\uff1b\u4e14\u5b58\u5728\u4e00\u4e2a $y(y>x,y\\le n-k+1)$ \u4f7f\u5f97 $s_{y\\sim n}$ \u4e0e $t$ \u7684\u53cd\u4e32\u5339\u914d\u957f\u5ea6\u4e3a $m-p$\u3002\u6211\u4eec\u73b0\u5728\u9700\u8981\u89e3\u51b3\u7684\uff0c\u5373\u4e3a\u8fd9\u4e2a $p$ \u6240\u80fd\u627e\u5230\u7684\u6700\u5c0f\u7684 $x$\uff0c\u6700\u5927\u7684 $y$\u3002  \n\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a\u524d\u7f00 $s_{1\\sim i}$ \u5047\u8bbe\u5339\u914d\u4e86 $w$ \u957f\u5ea6\uff0c\u90a3\u4e48\u5fc5\u5b9a\u4e5f\u80fd\u5339\u914d $nxt_w,nxt_{nxt_w},\\cdots$\u3002\u7531\u4e8e\u6211\u4eec\u77e5\u9053 $nxt$ \u8fd9\u4e2a\u5173\u7cfb\u5f62\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u6811\u4e0a\u6253\u4e2a\u6807\u8bb0\uff0c\u7136\u540e\u6c42\u5b50\u6811 $\\min$ \u548c $\\max$\u3002  \n\u6ce8\u610f\u4ed6\u526a\u7684\u662f\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u4e32\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u5339\u914d\u957f\u5ea6 $>k$ \u8981\u4e00\u76f4\u8df3 $nxt$ \u76f4\u5230\u5339\u914d\u957f\u5ea6\u5728 $k$ \u4ee5\u5185\u3002  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=5e5+5;\nstruct edge {\n\tint next,to;\n} e[maxn*4];\nchar s[maxn],t[maxn];\nint n,m,k,nxt[maxn],h[maxn],g[maxn],cnt,mn[maxn],mx[maxn];\nvoid addedge1(int x,int y) {\n\te[++cnt].next=h[x],e[cnt].to=y,h[x]=cnt;\n}\nvoid addedge2(int x,int y) {\n\te[++cnt].next=g[x],e[cnt].to=y,g[x]=cnt;\n}\nvoid dfs1(int u) {\n\tfor(register int i=h[u]; i; i=e[i].next) {\n\t\tint j=e[i].to;\n\t\tdfs1(j);\n\t\tmn[u]=min(mn[u],mn[j]);\n\t}\n}\nvoid dfs2(int u) {\n\tfor(register int i=g[u]; i; i=e[i].next) {\n\t\tint j=e[i].to;\n\t\tdfs2(j);\n\t\tmx[u]=max(mx[u],mx[j]);\n\t}\n}\nint main() {\n\tscanf(\"%d%d%d%s%s\",&n,&m,&k,s+1,t+1);\n\tif(n<2*k)return puts(\"No\"),0;\n\tmemset(mn,0x3f,sizeof(mn));\n\taddedge1(0,1);\n\tfor(register int i=2,j=0; i<=m; i++) {\n\t\twhile(j&&t[i]!=t[j+1])j=nxt[j];\n\t\tif(t[i]==t[j+1])j++;\n\t\tnxt[i]=j,addedge1(j,i);\n\t}\n\tfor(register int i=1,j=0; i<=n; i++) {\n\t\twhile(j&&s[i]!=t[j+1])j=nxt[j];\n\t\tif(s[i]==t[j+1])j++;\n\t\twhile(j>k)j=nxt[j];\n//\t\tcout<<i<<' '<<j<<endl;\n\t\tif(j==m&&(i<=k||i+k<=n)) {\n\t\t\tputs(\"Yes\");\n\t\t\tif(i>=k)printf(\"%d %d\",i-k+1,i+1);\n\t\t\telse printf(\"%d %d\",1,k+1);\n\t\t\treturn 0;\n\t\t}\n\t\tif(i>=k)mn[j]=min(mn[j],i);\n\t}\n\tdfs1(0);\n\tmemset(nxt,0,sizeof(nxt));\n\tnxt[m]=m+1,addedge2(m+1,m);\n\tfor(register int i=m-1,j=m+1; i; i--) {\n\t\twhile(j!=m+1&&t[i]!=t[j-1])j=nxt[j];\n\t\tif(t[i]==t[j-1])j--;\n\t\tnxt[i]=j,addedge2(j,i);\n\t}\n\tfor(register int i=n,j=m+1; i; i--) {\n\t\twhile(j!=m+1&&s[i]!=t[j-1])j=nxt[j];\n\t\tif(s[i]==t[j-1])j--;\n\t\twhile(m-j+1>k)j=nxt[j];\n\t\tif(j==1&&(i>=n-k+1||i-k>=1)) {\n\t\t\tputs(\"Yes\");\n\t\t\tif(i<=n-k+1)printf(\"%d %d\",i-k,i);\n\t\t\telse printf(\"%d %d\",n-2*k+1,n-k+1);\n\t\t\treturn 0;\n\t\t}\n\t\tif(i<=n-k+1)mx[j]=max(mx[j],i);\n\t}\n\tdfs2(m+1);\n\tfor(register int i=0; i<=m; i++)\n\t\tif(mn[i]<mx[i+1]) {\n\t\t\tputs(\"Yes\");\n\t\t\tprintf(\"%d %d\",mn[i]-k+1,mx[i+1]);\n\t\t\treturn 0;\n\t\t}\n\tputs(\"No\");\n\treturn 0;\n}\n```",
        "postTime": 1635244772,
        "uid": 104324,
        "name": "abruce",
        "ccfLevel": 7,
        "title": "\u9898\u89e3--CF955D Scissors"
    },
    {
        "content": "\u5443 \uff0c \u5176\u5b9e\u672c\u9898\u4e5f\u53ef\u4ee5\u7528 SAM \u505a\u7684 \uff0c \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(26n+m)$ \u3002\n\nt \u7684\u7ec4\u6210\u6709\u4e24\u79cd \uff1a\u662f\u5176\u4e2d\u4e00\u4e2a\u53d6\u51fa\u7684\u4e32\u7684\u5b50\u4e32 \uff0c \u6216\u662f\u524d\u4e00\u4e2a\u5b50\u4e32\u7684\u540e\u7f00\u4e0e\u540e\u4e00\u4e2a\u5b50\u4e32\u7684\u524d\u7f00\u7ec4\u5408\u800c\u6210 \u3002\n\nSAM \u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u627e\u51fa\u4e00\u4e2a\u4e32\u4e2d\u67d0\u4e2a\u5b50\u4e32\u7684\u6bcf\u4e2a\u7ed3\u5c3e\u4f4d\u7f6e\uff0c\u5373 $endpos$ \u96c6\u5408 \u3002\n\n\u5219\u5bf9\u4e8e\u7b2c\u4e00\u79cd \uff0c\u627e\u51fa\u5b83\u6700\u524d\u9762\u548c\u6700\u540e\u9762\u51fa\u73b0\u7684\u4f4d\u7f6e \uff0c \u5224\u65ad\u4e00\u4e0b\u5373\u53ef \u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd \uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6570\u7ec4 p1 \uff0c $p1_i$ \u8868\u793a t \u7684\u524d i \u4f4d\u5728 s \u4e2d\u53ef\u884c\u7684\u53d6\u4e32\u7684\u6700\u524d\u9762\u7684\u4f4d\u7f6e \u3002\u5177\u4f53\u5730\u8bf4 \uff0c\u5728 $s$ \u4e2d\u53d6 $p_i$ \u4e3a\u5f00\u5934\u7684\u5b50\u4e32 \uff0c\u5176\u672b\u5c3e\u5c31\u662f t \u7684\u524d i \u4f4d \uff0c \u4e14 $p1_i$ \u662f\u6700\u5c0f\u7684 \u3002 \u5219\u6211\u4eec\u53ea\u8981\u518d\u5012\u5e8f\u6c42\u4e00\u904d $p2_i$ \uff0c\u679a\u4e3e\u524d\u4e00\u4e2a\u53d6\u51fa\u7684\u4e32\u7ec4\u6210\u524d\u7f00\u957f\u5ea6\u5e76\u5224\u65ad\u5373\u53ef \u3002\n\n\u6ce8\u610f\u672c\u9898\u5bf9\u4e8e SAM \u4e0d\u592a\u53cb\u597d \uff0c \u53ea\u80fd\u5efa\u4e00\u4e2a SAM \uff0c \u4e0d\u7136\u5185\u5b58\u4f1a\u70b8 \u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[1000005],s1[1000005];\nint n,m,k,p1[1000005],p2[1000005];\nstruct sam_point\n{\n\tint fa,len,p,mi,ma,son[26];\n\tvoid clear()\n\t{\n\t\tfa=len=p=mi=ma=0;\n\t\tfor(int i=0;i<26;i++) son[i]=0;\n\t}\n};\nstruct SAM\n{\n\tint n=1,last=1,len,hea[1000005],nex[1000005],wen[1000005];\n\tsam_point a[1000005];\n\tvoid add(int x,int y)\n\t{\n\t\t++len;\n\t\tnex[len]=hea[x];\n\t\twen[len]=y;\n\t\thea[x]=len;\n\t}\n\tvoid insert(int x,int p)\n\t{\n\t\tint p1=last,p2=++n;\n\t\tlast=n;\n\t\ta[p2].p=a[p2].mi=a[p2].ma=p;\n\t\ta[p2].len=a[p1].len+1;\n\t\tfor(;p1&&!a[p1].son[x];p1=a[p1].fa) a[p1].son[x]=p2;\n\t\tif(!p1) a[p2].fa=1;\n\t\telse\n\t\t{\n\t\t\tint q1=a[p1].son[x];\n\t\t\tif(a[p1].len+1==a[q1].len) a[p2].fa=q1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint q2=++n;\n\t\t\t\ta[q2]=a[q1];\n\t\t\t\ta[q2].p=a[q2].mi=n+1;\n\t\t\t\ta[q2].ma=0;\n\t\t\t\ta[q2].len=a[p1].len+1;\n\t\t\t\ta[q1].fa=a[p2].fa=q2;\n\t\t\t\tfor(;p1&&a[p1].son[x]==q1;p1=a[p1].fa) a[p1].son[x]=q2;\n\t\t\t}\n\t\t}\n\t}\n\tvoid build()\n\t{\n\t\tfor(int i=2;i<=n;i++) add(a[i].fa,i);\n\t}\n\tvoid dfs(int x)\n\t{\n\t\tif(a[x].p<k) a[x].p=n+1;\n\t\tfor(int i=hea[x];i;i=nex[i])\n\t\t{\n\t\t\tdfs(wen[i]);\n\t\t\ta[x].p=min(a[x].p,a[wen[i]].p);\n\t\t\ta[x].mi=min(a[x].mi,a[wen[i]].mi);\n\t\t\ta[x].ma=max(a[x].ma,a[wen[i]].ma);\n\t\t}\n\t}\n\tvoid clear()\n\t{\n\t\tfor(int i=1;i<=n;i++) a[i].clear();\n\t\tfor(int i=1;i<=n;i++) hea[i]=0;\n\t\tlen=0;\n\t\tn=last=1;\n\t}\n}sam;\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tscanf(\"%s\",s1+1);\n\tfor(int i=1;i<=n;i++) sam.insert(s1[i]-97,i);\n\tsam.build();\n\tsam.dfs(1);\n\tscanf(\"%s\",s+1);\n\tint p=1,ma=0,mi=n+1;\n\tfor(int i=1;i<=m;i++)\n\t\tif(!sam.a[p].son[s[i]-97])\n\t\t{\n\t\t\tp=0;\n\t\t\tbreak;\n\t\t}\n\t\telse p=sam.a[p].son[s[i]-97];\n\tif(p&&m<=k)\n\t{\n\t\tma=sam.a[p].ma,mi=sam.a[p].mi;\n\t\tif(ma-m>=k&&ma-m+k-1<=n)\n\t\t{\n\t\t\tputs(\"Yes\");\n\t\t\tprintf(\"1 %d\",ma-m);\n\t\t\treturn 0;\n\t\t}\n\t\tif(ma-m>=k&&ma-m>=n-k+1)\n\t\t{\n\t\t\tputs(\"Yes\");\n\t\t\tprintf(\"1 %d\",n-k+1);\n\t\t\treturn 0;\n\t\t}\n\t\tif(mi+k<=n&&mi>=k)\n\t\t{\n\t\t\tputs(\"Yes\");\n\t\t\tprintf(\"%d %d\",mi-k+1,n-k+1);\n\t\t\treturn 0;\n\t\t}\n\t\tif(mi+k<=n&&mi<k)\n\t\t{\n\t\t\tputs(\"Yes\");\n\t\t\tprintf(\"%d %d\",1,n-k+1);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tp=1;\n\tfor(int i=1;i<=min(m,k);i++)\n\t\tif(!sam.a[p].son[s[i]-97])\n\t\t{\n\t\t\twhile(i<=min(m,k)) p1[i++]=n+1;\n\t\t}\n\t\telse p1[i]=sam.a[p=sam.a[p].son[s[i]-97]].p;\n\tfor(int i=1;i<=(m>>1);i++) swap(s[i],s[m-i+1]);\n\tsam.clear();\n\tfor(int i=1;i<=n;i++) sam.insert(s1[n-i+1]-97,i);\n\tsam.build();\n\tsam.dfs(1);\n\tp=1;\n\tfor(int i=1;i<=min(m,k);i++)\n\t\tif(!sam.a[p].son[s[i]-97])\n\t\t{\n\t\t\twhile(i<=min(m,k)) p2[i++]=n+1;\n\t\t}\n\t\telse p2[i]=sam.a[p=sam.a[p].son[s[i]-97]].p;\n\tfor(int i=max(0,m-k);i<=min(m,k);i++)\n\t\tif(p1[i]+p2[m-i]<=n)\n\t\t{\n\t\t\tif(!p1[i])\n\t\t\t{\n\t\t\t\tif(p2[m-i]+k>n) continue; else p1[i]=k;\n\t\t\t}\n\t\t\tif(!p2[m-i])\n\t\t\t{\n\t\t\t\tif(p1[i]+k>n) continue; else p2[m-i]=k;\n\t\t\t}\n\t\t\tputs(\"Yes\");\n\t\t\tprintf(\"%d %d\",p1[i]-k+1,n-p2[m-i]+1);\n\t\t\treturn 0;\n\t\t}\n\tputs(\"No\");\n}\n```\n",
        "postTime": 1622634879,
        "uid": 112921,
        "name": "zhimao",
        "ccfLevel": 0,
        "title": "CF955D Scissors\u9898\u89e3"
    }
]