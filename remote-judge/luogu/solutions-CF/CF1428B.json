[
    {
        "content": "# CF1428B \u3010Belted Rooms\u3011\n[$\\color{pink}{\\text{\u5ba3\u4f20Blog}}$](https://chen-jia-liang.gitee.io/blog/2020/10/18/%E9%A2%98%E8%A7%A3-CF1428B-%E3%80%90Belted-Rooms%E3%80%91/)\n## \u9898\u610f\n\u6709$0\\to n-1$\u4e2a\u70b9\u987a\u65f6\u9488\u5730\u5206\u5e03\u5728\u5706\u4e0a\uff0c\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u4f20\u9001\u5e26\u3002\n\n- \u5982\u679c\u662f`'>'`\uff0c\u90a3\u4e48\u53ea\u80fd\u987a\u65f6\u9488\u8d70\n- \u5982\u679c\u662f`'<'`\uff0c\u90a3\u4e48\u53ea\u80fd\u9006\u65f6\u9488\u8d70\n- \u5982\u679c\u662f`'-'`\uff0c\u90a3\u4e48\u4e24\u79cd\u65b9\u5411\u90fd\u53ef\u4ee5\n\n\u5728\u4e00\u4e9b\u623f\u95f4\u91cc\u6709\u86c7\uff0c\u95ee\u6709\u591a\u5c11\u86c7\u53ef\u4ee5\u51fa\u4e86\u623f\u95f4\u518d\u56de\u6765\n\n## \u9898\u89e3\n\n\u5f88\u663e\u7136\uff0c\u5f53\u6ca1\u6709`'<'`\u6216\u6ca1\u6709`'>'`\u65f6\uff0c\u6240\u6709\u7684\u86c7\u90fd\u53ef\u4ee5\u51fa\u53bb\u518d\u56de\u6765\u3002\n\n\u5426\u5219\uff0c\u53ea\u6709`'-'`\u4e24\u8fb9\u7684\u86c7\u80fd\u591f\u56de\u6765\uff0c\u5982\u679c\u4e0d\u5728`'-'`\u4e24\u8fb9\uff0c\u8981\u4e48\u51fa\u4e0d\u53bb\uff0c\u8981\u4e48\u56de\u4e0d\u6765\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n;char str[300000+100];\nsigned main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%s\",str+1);\n\t\tint n1=0,n2=0,n3=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(str[i]=='<')n1++;\n\t\t\telse if(str[i]=='-')n2++;\n\t\t\telse if(str[i]=='>')n3++;\n\t\tif(n1==0||n3==0)printf(\"%d\\n\",n);\n\t\telse{\n\t\t\tvector<bool>can(n,false);\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\tif(str[i]=='-')\n\t\t\t\t\tcan[i-1]=true,can[i%n]=true;\n\t\t\tint cnt=0;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tcnt+=can[i];\n\t\t\tprintf(\"%d\\n\",cnt);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1602980782,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1428B \u3010Belted Rooms\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u5206\u7c7b\u8ba8\u8bba\uff0c\u96be\u5ea6\u4e0d\u5927\u3002\n\n\u5bf9\u4e8e\u4e09\u79cd\u9053\u8def\uff1a\n\n- \u5982\u679c\u5b58\u5728`-`\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u623f\u95f4\u91cc\u53cd\u590d\u6a2a\u8df3\uff0c\u81ea\u7136\u76f8\u90bb\u7684\u623f\u95f4\u90fd\u7b26\u5408\u6761\u4ef6\u3002\n\n- \u5982\u679c\u5b58\u5728`<`\uff0c\u90a3\u4e48\u4ece\u4e0e\u4e4b\u76f8\u90bb\u623f\u95f4\u7ecf\u8fc7\u8fd9\u6761\u9053\u8def\u51fa\u53d1\u53ea\u80fd\u4e00\u6761\u8def\u8d70\u5230\u9ed1\uff0c\u4e0d\u80fd\u56de\u5934\uff0c\u5373\u5176\u4ed6\u9053\u8def\u5fc5\u987b\u90fd\u662f`-`\u6216`<`\u8be5\u623f\u95f4\u624d\u80fd\u7b26\u5408\u6761\u4ef6\u3002\u7528 $m1$ \u6807\u8bb0\u8be5\u7c7b\u578b\u662f\u5426\u5b58\u5728\u3002\n\n- `>`\u540c\u7406\uff0c\u5bf9\u4e8e\u4ece\u4e0e\u4e4b\u76f8\u90bb\u7ecf\u8fc7\u8be5\u9053\u8def\u7684\u623f\u95f4\uff0c\u5176\u4ed6\u9053\u8def\u5fc5\u987b\u90fd\u662f`-`\u6216`>`\u8be5\u623f\u95f4\u624d\u80fd\u7b26\u5408\u6761\u4ef6\u3002\u7528 $m2$ \u6807\u8bb0\u8be5\u7c7b\u578b\u662f\u5426\u5b58\u5728\u3002\n\n\n\n\u623f\u95f4\u7c7b\u578b\uff1a\n\n1. \u82e5\u4e00\u4e2a\u623f\u95f4\u5de6\u8fb9\u6216\u53f3\u8fb9\u662f`-`\uff0c\u5219\u5176\u5fc5\u7b26\u5408\u6761\u4ef6\uff0c\u7528 $cnt1$\u6765\u7edf\u8ba1\u3002\n\n2. \u82e5\u4e00\u4e2a\u623f\u95f4\u5de6\u53f3\u90fd\u662f`<`,\u7528 $cnt2$\u7edf\u8ba1\u3002\n\n3. \u82e5\u4e00\u4e2a\u623f\u95f4\u5de6\u53f3\u90fd\u662f`>`\uff0c\u7528 $cnt3$\u7edf\u8ba1\u3002\n\n\u56e0\u4e3a\u662f\u73af\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6761\u9053\u8def\u53ea\u7edf\u8ba1\u5176\u4e4b\u540e\u7684\u623f\u95f4\u3002\n\n\u7b54\u6848\uff1a\n\n\u5f53`>`\u548c`<`\u90fd\u5b58\u5728\u65f6\uff0c$2$ \u548c $3$ \u7c7b\u623f\u95f4\u90fd\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u7b54\u6848\u4e3a $cnt1$\u3002\n\n\u5f53`<`\u5b58\u5728\u4e14`>`\u4e0d\u5b58\u5728\u65f6\uff0c$2$\u7c7b\u623f\u95f4\u7b26\u5408\u6761\u4ef6\uff0c\u7b54\u6848\u4e3a $cnt1+cnt2$\u3002\n\n\u5f53`>`\u5b58\u5728\u4e14`<`\u4e0d\u5b58\u5728\u65f6\uff0c$3$\u7c7b\u623f\u95f4\u7b26\u5408\u6761\u4ef6\uff0c\u7b54\u6848\u4e3a $cnt1+cnt3$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<string>\nusing namespace std;\nconst int maxn=312345;\nint t,n;\nchar x[maxn];\nint main(){\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%s\",x);\n\t\tint m1=0,m2=0;\n\t\tint cnt1=0,cnt2=0,cnt3=0;\n\t\tint len=strlen(x);\n\t\tfor(int i=0;i<len;i++)\n\t\t{\n\t\t\tif(x[i]=='<')\n\t\t\tm1=1;\n\t\t\tif(x[i]=='>')\n\t\t\tm2=1;\n\t\t\tif(x[i]=='-'||x[(i+1)%len]=='-')\n\t\t\t{\n\t\t\t\tcnt1++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(x[i]==x[(i+1)%len]&&x[i]=='>')\n\t\t\tcnt3++;\n\t\t\t\n\t\t\tif(x[i]==x[(i+1)%len]&&x[i]=='<')\n\t\t\tcnt2++;\n\t\t}\n\t\tif(m1==1&&m2==0)\n\t\t{\n\t\t\tcnt1+=cnt2;\n\t\t}\n\t\tif(m1==0&&m2==1)\n\t\t{\n\t\t\tcnt1+=cnt3;\n\t\t}\n\t\tprintf(\"%d\\n\",cnt1);\n\t}\n\treturn 0;\n} \n\n```",
        "postTime": 1603672904,
        "uid": 114012,
        "name": "chichichichi",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1428B Belted Rooms"
    },
    {
        "content": "\u6253\u6bd4\u8d5b\u7684\u65f6\u5019sb\u4e86\uff0c\u7528\u4e86\u4e00\u4e2a\u4f3c\u4e4e\u539f\u672c\u53ef\u4ee5\u4e0d\u7528\u7684\u4e1c\u897f\u6765\u627e\u73af\u3002\u3002\u3002\n\n\u9996\u5148\uff0c\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u8fde\u6210\u4e00\u5f20\u56fe\uff0c\u800c\u86c7\u80fd\u4e0d\u80fd\u56de\u5230\u81ea\u5df1\u7684\u5bb6\uff0c \u53ea\u9700\u8981\u5728\u4e00\u4e2a\u73af\u4e0a\u5c31\u884c\u4e86\u3002\n\n\u95ee\u9898\u662f\u600e\u4e48\u627e\u73af\uff0c\u6211\u7528\u4e86 Tarjan\u3002\u3002\u3002\n\n\u5177\u4f53\u505a\u6cd5\u662f\u6bcf\u4e2a\u5f3a\u8fde\u901a\u7684\u5927\u5c0f\u5982\u679c\u4e0d\u4e3a $ 1 $\uff0c\u5c31\u628a\u8fd9\u4e2a\u5f3a\u8fde\u901a\u7684\u5927\u5c0f\u8ba1\u5165\u7b54\u6848\u3002\n\n\u8fd8\u6709\u5c31\u662f\u8bb0\u5f97\u6e05\u7a7a\u3002\n\ncode:\n```cpp\n#include<cstdio>\nconst int M=3e5+5;\nstruct Edge{\n    int to;Edge*nx;\n}e[M<<1],*h[M],*cnt=e;\nint n,ans,dfc,top,is[M],stk[M],low[M],dfn[M];\ninline void Add(const int&u,const int&v){\n    *cnt=(Edge){v,h[u]};h[u]=cnt++;\n}\ninline int min(const int&a,const int&b){\n    return a>b?b:a;\n}\nvoid Tarjan(int u){\n    is[stk[++top]=u]=true;\n    low[u]=dfn[u]=++dfc;\n    for(Edge*E=h[u];E;E=E->nx){\n        int v=E->to;\n        if(!dfn[v]){\n            Tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(is[v])low[u]=min(low[u],dfn[v]);\n    }\n    if(low[u]==dfn[u]){\n        int v,siz=0;\n        do is[v=stk[top--]]=0,++siz; while(v!=u);\n        if(siz>1)ans+=siz;\n    }\n}\nsigned main(){\n    int T,i;char s;\n    scanf(\"%d\",&T);\n    while(T--){\n        scanf(\"%d\",&n);getchar();\n        for(i=1;i<=n;++i){\n            h[i]=NULL;\n            low[i]=dfn[i]=0;\n        }\n        top=dfc=ans=0;\n        for(i=1;i<=n;++i){\n            s=getchar();\n            if(s=='<')Add(i%n+1,i);\n            else if(s=='>')Add(i,i%n+1);\n            else Add(i,i%n+1),Add(i%n+1,i);\n        }\n        getchar();\n        for(i=1;i<=n;++i)if(!dfn[i])Tarjan(i);\n        printf(\"%d\\n\",ans);\n    }\n}\n```",
        "postTime": 1602983689,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u56fe\u8bba \u8fde\u901a\u6027 CF1428B"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\uff0c\u80fd\u51fa\u53d1\u518d\u56de\u53bb\u7684\u8981\u4e0d\u7136\u662f '-' \u8981\u4e0d\u7136\u662f\u6574\u4e2a\u56fe\u7247\u90fd\u662f\u8054\u901a\u7684\uff08\u5373\u5168\u56fe\u9664\u4e86'-'\u5269\u4e0b\u7684\u5168\u90fd\u662f\u4e00\u4e2a\u7b26\u53f7\uff09\u3002\u5bf9\u4e8e\u6574\u4e2a\u56fe\u4e0d\u662f\u8054\u901a\u7684\uff0c\u6709\u4e9b\u70b9\u662f '-' \u7684\u60c5\u51b5\u4e0b\u3002\uff08\u5373\u5168\u56fe\u9664\u4e86'-'\u5269\u4e0b\u7684\u5b58\u5728\u4e24\u4e2a\u7b26\u53f7\uff09\u90a3\u5c31\u7edf\u8ba1 '-' \u7684\u5f71\u54cd\u3002\u6bcf\u6b21 '-' \u5f71\u54cd\u5de6\u53f3\u4e24\u8fb9\u3002\u5982\u679c\u4e0a\u6b21\u7684\u7b26\u53f7\u662f '-' \u90a3\u6211\u4eec\u53ea\u80fd\u52a0\u4e00\uff08\u5de6\u8fb9\u7684\u8ba1\u7b97\u8fc7\u4e86\uff09\u3002\u5bf9\u4e8e\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u8981\u6ce8\u610f\u4e00\u4e0b\u7b2c\u4e00\u4e2a\u70b9\u662f\u5426\u5df2\u7ecf\u88ab\u8ba1\u7b97\u8fc7\u4e86\u3002\u4e00\u5f00\u59cb\u65f6\u6ce8\u610f\u4e00\u5b9a\u8981\u8bb0\u5f55\u4e00\u4e0b\u7b2c\u4e00\u4e2a\u70b9\u662f\u5426\u662f '-' \u3002\u4ee3\u7801\u91cc\u5199\u7684\u4e5f\u6bd4\u8f83\u5168\u3002\n\n\nCode:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 3e5 + 5;\n\nbool a[N];\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tint t;\n\tcin >> t;\n\twhile (t -- )\n\t{\n\t\tint n;\n\t\tcin >> n;\n\t\tbool flag = false, flag2 = false, l = false, first = false;\n\t\tint res = 0;\n\t\tfor (int i = 0; i < n; i ++ )\n\t\t{\n\t\t\tchar op;\n\t\t\tcin >> op;\n\t\t\tif (op == '-')\n\t\t\t{\n\t\t\t\tif (i == 0)\n\t\t\t\t{\n\t\t\t\t\tfirst = true;\n\t\t\t\t}\n\t\t\t\tif (i == n - 1)\n\t\t\t\t{\n\t\t\t\t\tres -= first;\n\t\t\t\t}\n\t\t\t\tif (l == false)\n\t\t\t\t{\n\t\t\t\t\tres += 2;\n\t\t\t\t\tl = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tres ++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (op == '>')\n\t\t\t{\n\t\t\t\tflag = true;\n\t\t\t\tl = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tflag2 = true;\n\t\t\t\tl = false;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif ((flag xor flag2) == true)\n\t\t{\n\t\t\tcout << n << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << res << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1602979999,
        "uid": 99640,
        "name": "smallfang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1428B \u3010Belted Rooms\u3011"
    },
    {
        "content": "## \u672c\u9898\u6a21\u62df\u5373\u53ef\n\n\u6709**3**\u79cd\u4f20\u9001\u5e26:**\u53cc\u5411**\u7684\uff0c**\u987a\u65f6\u9488**\u7684\u548c**\u9006\u65f6\u9488**\u7684\n\n### \u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\uff1a\n\n1. **\u53cc\u5411** \uff1a \n\n\t\u5f53\u4e00\u4e2a\u70b9\u5de6\u53f3\u6709\u81f3\u5c11\u4e00\u4e2a**\u53cc\u5411**\u7684\u4f20\u9001\u5e26\u65f6\u3002\n    \n    \u663e\u7136\u5b83\u662f\u53ef\u4ee5\u56de\u5230\u81ea\u5df1\u623f\u95f4\u7684\uff08\u53ea\u9700\u8981\u6765\u56de\u4e00\u8d9f\uff09\u3002\n\n2. **\u5355\u5411** \uff1a\n\n\t\u8fd9\u4e2a\u8981\u590d\u6742\u4e00\u70b9\u3002\n\n\t\u4f46\u662f\u4ed6\u4ece**\u5355\u5411**\u7684\u4f20\u9001\u5e26\u51fa\u53bb\u5c31\u5fc5\u7136**\u4e0d\u80fd\u539f\u8def\u8fd4\u56de**\uff0c\u5fc5\u987b\u8981\u7ed5\u4e00\u5708\uff0c**\u4ece\u53e6\u5916\u4e00\u8fb9\u56de\u6765**\u3002\n   \n   \u53ef\u4ee5\u60f3\u5230 \uff1a\u53ea\u8981\u4e2d\u95f4\u6709\u4e00\u4e2a**\u65b9\u5411\u76f8\u53cd**\u7684\u4f20\u9001\u5e26\uff0c\u5c31\u4e0d\u80fd**\u7ed5\u4e00\u5708**\u8fd4\u56de\u539f\u672c\u7684\u623f\u95f4\n   \n   \u6240\u4ee5 \uff1a \u53ea\u6709\u5728**\u6240\u6709\u7684\u4f20\u9001\u5e26\u65b9\u5411\u76f8\u540c\u65f6**\uff08\u5f53\u7136\u662f**\u9664\u53bb\u4e86\u53cc\u5411\u4f20\u9001\u5e26**\u7684\uff09\uff0c\u5de6\u53f3**\u90fd\u662f\u5355\u5411\u4f20\u9001\u5e26\u7684\u623f\u95f4**\u624d\u80fd\u56de\u5230\u81ea\u5df1\u7684\u623f\u95f4\u3002\n   \n\t\u4e8e\u662f\u6211\u4eec\u53ea\u7528**\u5224\u65ad\u5168\u5c40\u7684\u4f20\u9001\u5e26\u662f\u5426\u65b9\u5411\u76f8\u540c**\u5c31\u53ef\u4ee5\u77e5\u9053\u80fd\u4e0d\u80fd\u56de\u5230\u539f\u672c\u7684\u623f\u95f4\u4e86\n    \n\u9644\u4e0aAC\u4ee3\u7801 \uff1a \n```cpp\n#include<bits/stdc++.h>\n#define RT register\nusing namespace std;\nconst int MAXN=3e5+5;\nint t;\nint len;\nchar s[MAXN];\nint main(){\n    cin>>t;\n    for(RT int ti=1;ti<=t;ti++){\n        scanf(\"%d%s\",&len,s);\n        char op=' ';//op\u662f\u65b9\u5411\n        bool ju=1;\n        for(RT int i=0;i<len;i++){\n            if(op!=s[i]&&s[i]!='-'){//\u5f53\u524d\u4f20\u9001\u5e26\u4e0d\u4e3a\u53cc\u5411\u7684\uff0c\u4e14\u4e0e\u5f53\u524d\u4e0d\u540c\n                if(op!=' '){\n                    ju=0;\n                    //ju\u662f\u5224\u65ad\u5168\u90e8\u7684\u4f20\u9001\u5e26\u65b9\u5411\u662f\u5426\u76f8\u540c\n                    break;\n                }\n                else op=s[i];//\u5168\u90e8\u7684\u65b9\u5411\n            }\n        }\n        int ans=0;\n        for(RT int i=0;i<len;i++){\n            int l=(i-1+len)%len;\n            if(s[i]=='-'||s[l]=='-')    ans++;\n            else ans+=ju;//\u76f8\u540c\u5c31\u52a0\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1603103042,
        "uid": 67618,
        "name": "haooo",
        "ccfLevel": 6,
        "title": "CF1428B Belted Rooms"
    },
    {
        "content": "\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u7b2c\u4e00\u9053FST\u7684B\u9898\uff08\n\n\n------------\n\u9996\u5148\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u6709\u4e00\u6761 '-' \u5f62\u7684\u4f20\u9001\u5e26\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u662f\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u56e0\u4e3a\u86c7\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6761\u8fb9\u5148\u5411\u5916\u8d70\u4e00\u6b65\u518d\u5411\u91cc\u8d70\u4e00\u6b65\u56de\u6765\u3002\n\n\u5176\u6b21\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u6ca1\u6709 '-' \u5f62\u7684\u4f20\u9001\u5e26\uff0c\u90a3\u4e48\u86c7\u5982\u679c\u60f3\u8981\u5728\u51fa\u53d1\u540e\u56de\u5230\u539f\u70b9\u5fc5\u987b\u8981\u7ed5\u4e00\u6574\u5708\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u5f20\u56fe\u5fc5\u987b\u662f\u8fde\u901a\u7684\u3002\u56fe\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\u53ea\u53ef\u80fd\u662f '>' \u548c '<' \u5f62\u4f20\u9001\u5e26\u540c\u65f6\u5b58\u5728\uff0c\u5224\u65ad\u4e00\u4e0b\u5c31\u884c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define fo(i,x,y) for(register int i=x;i<=y;++i)\n#define go(i,x,y) for(register int i=x;i>=y;--i)\nusing namespace std;\n\ninline int read(){\n\tint x=0,fh=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*fh;\n}\n\nconst int maxn=3e5+5;\nchar a[maxn];\nint b[maxn];\n\nvoid work(){\n\tint n=read(),flag1=1,flag2=1,ans=0;\n\tfo(i,0,n-1) a[i]=getchar(),b[i]=0;\n\tfo(i,0,n-1){\n\t\tif(a[i]=='<') flag1=0;\n\t\tif(a[i]=='>') flag2=0;\n\t}\n\tfo(i,0,n-1){\n\t\tif(a[i]=='-'||a[(i+n-1)%n]=='-') b[i]=1;\n\t\telse b[i]=flag1|flag2;\n\t} \n\tfo(i,0,n-1) ans+=b[i];\n\tprintf(\"%d\\n\",ans); \n\t//puts(\"\");\n}\nint main(){\n\tint T=read();\n\twhile(T--){\n\t\twork();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1603066673,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1428B \u3010Belted Rooms\u3011"
    },
    {
        "content": "~~B\u9898\u901a\u5e38\u4e0d\u4f1a\u5f88\u96be~~\n\n\u770b\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u50cf\u56fe\u8bba\uff0c\u6240\u4ee5\u7814\u7a76\u4e00\u4e0b\u6027\u8d28\n\n1. \u5f53\u5168\u4e3a - \u65f6\uff0c\u5168\u56fe\u8054\u901a\n2. \u5f53\u5168\u4e3a **>\u548c -** \u6216\u8005\u5168\u4e3a **< \u548c -** \u65f6\uff0c\u5168\u56fe\u8054\u901a\n3. \u5f53 **- > <** \u5168\u6709\u65f6\uff0c\u56fe\u4e0d\u8054\u901a\n\n\u5168\u56fe\u8054\u901a\u65f6\uff0c\u7b54\u6848\u4e00\u5b9a\u662f\u8282\u70b9\u6570\uff0c\u6240\u4ee5\u91cd\u70b9\u770b\u7b2c\u4e09\u79cd\u60c5\u51b5\n\n\u5f53\u4e24\u70b9\u4e4b\u95f4\u4e3a - \uff0c\u5219\u8fd9\u4e24\u70b9\u5747\u6ee1\u8db3\u6761\u4ef6\uff0c\u7edf\u8ba1\u4e24\u4e2a\u70b9\u3002\n\u4f46\u82e5\u4e24\u4e2a - \u76f8\u8fde\uff0c\u53ea\u80fd\u7edf\u8ba1\u4e09\u4e2a\u70b9\u3002\u6240\u4ee5\u5904\u7406\u65f6\u8981\u6ce8\u610f i-1 \u662f\u5426\u4e3a - \u3002\n\n\u4e0d\u8fc7\u7ec6\u5fc3\u70b9\u53d1\u73b0\uff0c\u82e5i\u4e3a0\u65f6\u5224\u65adi-1\u4f1a\u7206\u70b8\uff0c\u56e0\u5176\u4e3a\u73af\uff0c\u6240\u4ee5\u53ef\u5224\u65ad\uff08i+n-1)%n \u662f\u5426\u4e3a - \u5373\u53ef\u3002\n\n\u4ee3\u7801\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nint T,n,num;\nstring s;\nbool r,l;\n\nint main(void)\n{\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tcin >> n >> s;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(s[i]=='>')\tr=1; \n\t\t\telse if(s[i]=='<')\tl=1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(s[(i+n-1)%n]=='-')\tnum+=1;\n\t\t\t\telse\tnum+=2;\n\t\t\t}\t\n\t\t}\n\t\tif(!r||!l)\tcout << n << endl;\n\t\telse\tcout << num << endl; \n\t\tr=l=num=0;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1603000058,
        "uid": 63423,
        "name": "ycf_remake",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1428B \u3010Belted Rooms\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u5982\u679c\u6574\u4e2a\u56fe\u662f\u4e00\u4e2a\u73af\uff0c\u5373\u4e0d\u540c\u65f6\u5b58\u5728 $>$ \u548c $<$\uff0c\u90a3\u4e48\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u51fa\u53d1\u90fd\u53ef\u4ee5\u7ed5\u4e00\u5708\u56de\u5230\u81ea\u5df1\u3002\n\n\u5426\u5219\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u8fde\u63a5\u4e86\u4e00\u4e2a $-$\uff0c\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u8fc7\u53bb\u7136\u540e\u56de\u6765\uff0c\u5426\u5219\u4e0d\u53ef\u80fd\u56de\u5230\u81ea\u5df1\uff0c\u6bd4\u5982\u5f53\u524d\u6cbf\u4e00\u4e2a $>$ \u79bb\u5f00\uff0c\u80af\u5b9a\u6ca1\u6cd5\u6cbf\u540c\u4e00\u8fb9\u56de\u6765\uff0c\u80af\u5b9a\u8981\u7ed5\u4e00\u5708\uff0c\u7136\u800c\u56fe\u4e0d\u662f\u73af\uff0c\u6240\u4ee5\u4e00\u5b9a\u7ed5\u4e0d\u56de\u6765\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\ninline int read(){\n\tre int t=0;re char v=getchar();\n\twhile(v<'0')v=getchar();\n\twhile(v>='0')t=(t<<3)+(t<<1)+v-48,v=getchar();\n\treturn t;\n}\nint n,m,t,a[1002],b,c,d,p[1002];\nchar s[300002];\ninline int check(re int x){\n\tif(s[x]=='-')return 1;\n\tif(s[x]=='<'&&(!a[p['>']]))return 1;\n\tif(s[x]=='>'&&(!a[p['<']]))return 1;\n\treturn 0;\n}\nint main(){\n\tt=read();\n\tp['>']=2,p['<']=1;\n\twhile(t--){\n\t\tn=read();\n\t\tscanf(\"%s\",s+1);\n\t\ts[0]=s[n];\n\t\tmemset(a,0,sizeof(a));\n\t\tfor(re int i=1;i<=n;++i)++a[p[s[i]]];\n\t\tre int ans=0;\n\t\tfor(re int i=1;i<=n;++i)if(check(i)||check(i-1))++ans;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```\n",
        "postTime": 1602998304,
        "uid": 335422,
        "name": "\u9493\u9c7c\u738b\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1428B \u3010Belted Rooms\u3011"
    },
    {
        "content": "$\\text{upd:}$ \u4fee\u6b63\u4e86\u4e00\u5904\u89e3\u6cd5\u4e0a\u7684\u9519\u8bef\uff0c\u4f46\u662f\u4ee3\u7801\u662f\u6b63\u786e\u7684\u3002\n\n----\n### \u9898\u610f\uff1a\n\u6709 $n$ \u4e2a\u623f\u95f4\uff0c\u4f9d\u6b21\u6807\u53f7 $1,2,3,\\dots,n$\u3002\u6bcf\u4e2a\u623f\u95f4\u6709\u4e00\u6761\u86c7\u3002\n\n\u623f\u95f4\u5448\u73af\u72b6\u8fde\u63a5\uff0c\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u623f\u95f4\uff08\u5305\u62ec$\\{n,1\\}$\uff09\u90fd\u6709\u4e00\u6761\u901a\u9053\u8fde\u63a5\u3002\n\n\u6709\u4e09\u949f\u901a\u9053\uff1a\n1. \u53ea\u80fd\u987a\u65f6\u9488\u8d70\uff08\u5373\u53ea\u80fd\u4ece $i$ \u8d70\u5230 $i+1\\bmod n$\uff09\n2. \u53ea\u80fd\u9006\u65f6\u9488\u8d70\uff08\u5373\u53ea\u80fd\u4ece $i+1\\bmod n$ \u8d70\u5230 $i$\uff09\n3. \u4e24\u4e2a\u65b9\u5411\u90fd\u53ef\u4ee5\u8d70\n\n\u6bcf\u4e00\u6761\u86c7\u5e0c\u671b\u4ece\u6240\u5904\u7684\u623f\u95f4\u8d70\u51fa\u53bb\u4e4b\u540e\u518d\u56de\u6765\u3002\u5b83\u4eec\u79f0\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u623f\u95f4\u4e3a`\u53ef\u8fd4\u56de\u7684`\u3002\n\n\u6c42`\u53ef\u8fd4\u56de\u7684`\u623f\u95f4\u4e2a\u6570\u3002\n\n---\n### \u89e3\u6cd5\uff1a\n\u8fd8\u662f\u7b80\u5355\u601d\u7ef4\u9898\u3002\n\n\u53d1\u73b0\u82e5 $i\\to(i+1)\\bmod n$ \u7684\u901a\u9053\u662f\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u7684\uff0c\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\u662f`\u53ef\u8fd4\u56de\u7684`\uff0c\u5c31\u662f\u5168\u662f\u987a\u65f6\u9488\u7684/\u5168\u662f\u9006\u65f6\u9488\u7684\uff08`upd`\uff1a\u82e5\u4e2d\u95f4\u5939\u6742\u7740\u53cc\u5411\u7684\u901a\u9053\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\u3002\u4e14\u8fd9\u4e24\u79cd\u60c5\u51b5\u5168\u90e8\u623f\u95f4\u90fd\u662f`\u53ef\u8fd4\u56de\u7684`\u3002\u8fd9\u79cd\u60c5\u51b5\u53ea\u8981\u7279\u5224\u5373\u53ef\u3002\n\n\u82e5\u51fa\u73b0`\u4e24\u4e2a\u65b9\u5411\u90fd\u53ef\u4ee5\u8d70`\u7684\u901a\u9053\uff0c\u5373\u4e24\u8fb9\u7684\u623f\u95f4\u90fd\u53ef\u4ee5\u8d70\u5411\u53e6\u4e00\u4e2a\u623f\u95f4\u518d\u56de\u6765\uff0c\u6240\u4ee5\u4e24\u8fb9\u90fd\u662f`\u53ef\u8fd4\u56de\u7684`\u3002\n\n---\n### \u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tbool allcl,allac;\n\t\tint offcnt=0;\n\t\tchar ch,first,lst;\n\t\tallcl=allac=true;\n\t\tch=getchar();\n\t\twhile(ch!='>'&&ch!='<'&&ch!='-') ch=getchar();\n\t\tif(ch=='>') allac=false;\n\t\telse if(ch=='<') allcl=false;\n\t\telse offcnt+=2;\n\t\tfirst=ch;\n\t\tlst=ch;\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tch=getchar();\n\t\t\twhile(ch!='>'&&ch!='<'&&ch!='-') ch=getchar();\n\t\t\tif(ch=='>') allac=false;\n\t\t\telse if(ch=='<') allcl=false;\n\t\t\telse{\n\t\t\t\tif(lst=='-') offcnt++;\n\t\t\t\telse offcnt+=2;\n\t\t\t}\n\t\t\tlst=ch;\n\t\t}\n\t\tif(ch=='-'&&first=='-') offcnt--;\n\t\tif(allcl||allac) printf(\"%d\\n\",n);\n\t\telse printf(\"%d\\n\",offcnt);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1602990372,
        "uid": 258085,
        "name": "\u6c5f\u6237\u5ddd\u00b7\u841d\u535c",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1428B \u3010Belted Rooms\u3011"
    },
    {
        "content": "\u6211\u4e00\u62ff\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u89c9\u5f97\uff1a\u8fd9\u4ec0\u4e48\u4e1c\u897f\u554a\uff1f\u6709\u5411\u8fb9\u65e0\u5411\u8fb9\u90fd\u6709\uff1f\uff1f\uff1f\n\n\u5176\u5b9e\uff0c\u8fd9\u9053\u9898\u505a\u6cd5\u5f88\u7b80\u5355\u2026\u2026\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u4f20\u9001\u5e26\u8bf4\u6210\u901a\u9053\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c**\u4e00\u4e2a\u623f\u95f4\u5982\u679c\u76f4\u63a5\u8fde\u7740\u4e00\u6761\u53cc\u5411\u7684\u901a\u9053\uff0c\u5c31\u80af\u5b9a\u80fd\u51fa\u4e86\u518d\u56de\u6765**\uff0c\u4ece\u8fd9\u6761\u53cc\u5411\u901a\u9053\u8d70\u5230\u76f8\u90bb\u7684\u623f\u95f4\u518d\u4ece\u8fd9\u6761\u901a\u9053\u56de\u6765\u5c31\u5f97\u4e86\u3002\n\n\u53ef\u662f\uff0c\u5982\u679c\u4e24\u6761\u8fb9\u90fd\u662f\u5355\u5411\u7684\uff0c\u90a3\u4e48\u5c31**\u4e0d\u80fd\u6cbf\u7740\u4e00\u4e2a\u901a\u9053\u8d70\u5230\u67d0\u4e2a\u623f\u95f4\u518d\u539f\u8def\u8fd4\u56de**\uff0c\u6bd5\u7adf\u6709\u5355\u5411\u901a\u9053\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u597d\u7ed5\u7740\u6574\u4e2a\u5706\u8d70\u4e00\u5708\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c**\u518d\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u6709\u4e24\u6761\u5355\u5411\u7684\u901a\u9053\u65b9\u5411\u4e0d\u4e00\uff0c\u5c31\u4e00\u5b9a\u4e0d\u80fd\u7ed5\u7740\u8fd9\u4e2a\u4e2a\u5706\u8d70\u4e00\u5708**\u3002\n\n# AC Code:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint zh(char c){\n    if(c == '-'){\n        return 0;\n    }\n    else if(c == '<'){\n        return 1;\n    }\n    else{\n        return 2;\n    }\n}\nbool search(string s){ \n    //\u5224\u65ad\u6709\u6ca1\u6709\u76f8\u53cd\u65b9\u5411\u7684\u901a\u9053\n    bool b = false;\n    bool bb = false;\n    for(int i = 0;i < s.length();i++){\n        if(s[i] == '<' && bb){\n            return true;\n        }\n        else if(s[i] == '>' && b){\n            return true;\n        }\n        else if(s[i] == '>'){\n            bb = true;\n        }\n        else if(s[i] == '<'){\n            b = true;\n        }\n    }\n    return false;\n}\nint main(){\n    int t;\n    cin >> t;\n    while(t--){\n        int w;\n        cin >> w;\n        int d[w][2];\n        string k;\n        cin >> k;\n        for(int i = 0;i < k.length();i++){\n            if(i == k.length() - 1){\n                d[i][0] = zh(k[i]);\n                d[i][1] = zh(k[0]);\n            }\n            else{\n                d[i][0] = zh(k[i]);\n                d[i][1] = zh(k[i + 1]);\n            }\n        }\n        int ans = 0;\n        bool bl = search(k);\n        //\u679a\u4e3e\u6bcf\u4e2a\u623f\u95f4\n        for(int i = 0;i < w;i++){\n            if(d[i][0] && d[i][1]){ \n                //\u5224\u65ad\u76f4\u63a5\u8fde\u7740\u7684\u4e24\u4e2a\u901a\u9053\u662f\u4e0d\u662f\u90fd\u662f\u5355\u5411\u8fb9\n                if(!bl){\n                    ans++;\n                }\n            }\n            else{\n                ans++;\n            }\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1609578260,
        "uid": 302356,
        "name": "Eric_Cui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1428B \u3010Belted Rooms\u3011"
    }
]