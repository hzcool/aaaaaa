[
    {
        "content": "## \u9996\u5148\u53ef\u4ee5\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u641c\u7d22\u9898\uff08\u6211\u7528\u4e86bfs\uff09\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u706b\u8f66\u5f80\u5de6 \u89c6\u4e3a\u4eba\u7269\u5f80\u53f3 \u56e0\u4e3a\u6240\u6709\u7684\u706b\u8f66\u90fd\u662f\u540c\u4e00\u901f\u5ea6\u540c\u65f6\u52a8\u7684\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u89c6\u4e3a\u4e00\u56de\u5408\u5185\u4eba\u7269\u5148\u5f80\u53f3\u8d70\u4e00\u683c \u518d\u6362\u884c\u6216\u4e0d\u52a8 \u518d\u5f80\u524d\u8d70\u4e00\u683c \u7136\u540e\u518d\u5f80\u524d\u8d70\u4e00\u683c \u5f80\u524d\u8d70\u7684\u4e24\u683c\u8981**\u5206\u5f00\u5224\u65ad**\n```cpp\ns.A.\n..B.\n..C.\n```\n\u5982\u679c\u9047\u5230\u8fd9\u79cd\u76f4\u63a5+1\u4e0d\u6362\u884c+2\u5c31\u9519\u4e86\n\n\u5982\u679c\u4eba\u7269\u8d70\u5230\u7b2cn\u5217\u4e14\u5f53\u524d\u4f4d\u7f6e\u4e0d\u662f\u969c\u788d\u7269 \u6216\u5230\u8fbe>n\u7684\u5217 \u5c31\u76f4\u63a5**\u6e05\u7a7a\u961f\u5217\u9000\u51fa\u641c\u7d22**\n\n\u6b64\u5916 \u4e0d\u96be\u53d1\u73b0k\u5176\u5b9e\u662f\u5e9f\u7684 \u53ea\u8981\u628a\u6240\u6709\u5927\u5199\u5b57\u6bcd\u6240\u5728\u683c\u5168\u90e8\u8bbe\u7f6e\u4e3a\u969c\u788d\u7269\u5c31\u53ef\u4ee5\u4e86\n\n\u5177\u4f53\u641c\u7d22\u8fc7\u7a0b\u89c1\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\nusing namespace std;\nstruct node {\n\tint lin; //lin\u8bb0\u5f55\u4eba\u7269\u5728\u7b2c\u51e0\u5217\n\tint col; //col\u8bb0\u5f55\u4eba\u7269\u5728\u7b2c\u51e0\u884c\n} aa,bb; //\u4e0d\u8981\u5728\u610f\u53d8\u91cf\u540d...\nqueue <node> q;\nint t,n,k;\nchar c;\nint mp[1005][5] = {0};\nint vis[1005][5] = {0}; \nint dirx[3] = {-1,0,1}; //\u4ece\u4e0a\u8d70\uff0c\u4e0d\u52a8\uff0c\u5f80\u4e0a\u8d70 \nint sx,sy,tx,ty,flag;\nint main() {\n\tcin >> t;\n\twhile(t --) {\n\t\tmemset(mp,0,sizeof(mp));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tflag = 0; //flag\u7528\u6765\u5b58\u662f\u5426\u80fd\u8fbe\u5230\u7ec8\u70b9 \u591a\u7ec4\u6570\u636e\u8bb0\u5f97\u628a\u8be5\u6e05\u96f6\u7684\u90fd\u6e05\u96f6 \n\t\tscanf(\"%d %d\",&n,&k);\n\t\tfor(int i = 1; i <= 3; i ++) {\n\t\t\tfor(int j = 1; j <= n; j ++) {\n\t\t\t\tcin >> c;\n\t\t\t\tif(c == 's') {\n\t\t\t\t\tsx = j;\n\t\t\t\t\tsy = i; // \u8d77\u59cb\u4f4d\u7f6e \n\t\t\t\t}\n\t\t\t\tif(c >= 'A' && c <= 'Z') {\n\t\t\t\t\tmp[j][i] = 1; //\u6807\u8bb0\u706b\u8f66 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\taa.lin = sx;\n\t\taa.col = sy;\n\t\tq.push(aa);\n\t\twhile(!q.empty()) {\n\t\t\taa = q.front();\n\t\t\tif(aa.lin >= n) { //\u5f53\u524d\u6240\u5728\u884c\u5728\u6700\u53f3\u8fb9\u6216\u66f4\u9760\u53f3\u5373\u9000\u51fa \n\t\t\t\tflag = 1;\n\t\t\t\twhile(!q.empty()) q.pop(); //\u4e00\u5b9a\u8981\u628a\u961f\u5217\u6e05\u7a7a\u518d\u9000\u51fa\uff01 \n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(mp[aa.lin + 1][aa.col] == 1 || mp[aa.lin][aa.col] == 1) {\n\t\t\t\tq.pop();\n\t\t\t\tcontinue;\n\t\t\t} //\u5982\u679c\u524d\u65b9\u4e00\u683c\u662f\u969c\u788d\u7269\u5c31\u4e0d\u9700\u8981\u518d\u5224\u65ad\u4e0b\u9762\u7684\u4e86 \u56e0\u4e3a\u662f\u5148\u524d\u8d70\u4e00\u683c\u518d\u4e0a\u4e0b\u8d70\uff08\u6362\u884c\uff09 \n\t\t\tfor(int i = 0; i < 3; i ++) {\n\t\t\t\ttx = aa.lin + 1;\n\t\t\t\tty = aa.col + dirx[i]; //\u6362\u884c\n\t\t\t\tif(ty < 1 || ty > 3) continue;\n\t\t\t\tif(mp[tx][ty] == 1) continue;\n\t\t\t\ttx = aa.lin + 2; //\u5f80\u524d\u8d70\u4e00\u683c \n\t\t\t\tif(mp[tx][ty] == 1) continue; \n\t\t\t\ttx = aa.lin + 3; //\u5f80\u524d\u8d70\u4e24\u683c \u8fd9\u91cc\u8fd8\u662f\u8981\u5224 \u4f1a\u9047\u5230\u706b\u8f66\u53ea\u6709\u4e00\u683c\u957f \n\t\t\t\tif(mp[tx][ty] == 1) continue;  \n\t\t\t\tif(vis[tx][ty] == 1) continue; //\u867d\u7136\u6bcf\u4e00\u6b65\u90fd\u8981\u5224\u65ad\u969c\u788d\u7269\u4f46\u662fvis\u53ea\u6709\u8d70\u5230\u5e95\u624d\u5224\u65ad\u548c\u6807\u8bb0 \n\t\t\t\tvis[tx][ty] = 1;\n\t\t\t\tbb.lin = tx;\n\t\t\t\tbb.col = ty;\n\t\t\t\tq.push(bb); //\u53ea\u8981\u78b0\u5230\u969c\u788d\u7269\u5c31continue \u4e00\u8def\u4e0a\u90fd\u6ca1\u969c\u788d\u5c31\u5165\u961f \n\t\t\t}\n\t\t\tq.pop();\n\t\t}\n\t\tif(flag == 1) printf(\"YES\\n\");\n\t\tif(flag == 0) printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541467673,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF585B \u3010Phillip and Trains\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u5bb9\u6613\u60f3\u5230\u901a\u8fc7\u641c\u7d22\uff08\u4e8b\u5b9e\u4e0a\u6df1\u641c\uff0c\u5e7f\u641c\u90fd\u884c\uff09\u6765\u5224\u65ad\u4ece\u8d77\u70b9\u51fa\u53d1\u662f\u5426\u80fd\u5230\u8fbe\u7ec8\u70b9\uff0c\u5982\u679c\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u904d\u5386\u5230\u4e86\u7b2c $n+1$ \u5217\u5c31\u53ef\u4ee5\uff0c\u5426\u5219\u4e0d\u80fd\u3002\n\n\u8fd9\u9898\u6709\u51e0\u4e2a\u5c0f\u6280\u5de7\u548c\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n1. \u6839\u636e\u8fd0\u52a8\u4e0e\u9759\u6b62\u7684\u76f8\u5bf9\u6027\uff0c\u706b\u8f66\u5411\u5de6\u8d70\u4e24\u683c\u53ef\u4ee5\u770b\u505a\u4eba\u5411\u53f3\u8d70\u4e24\u683c\uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u964d\u4f4e\u4ee3\u7801\u590d\u6742\u5ea6\n2. \u6ce8\u610f\u526a\u679d\uff08\u7528 vis \u6570\u7ec4\u6807\u8bb0\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u5982\u679c\u8bbf\u95ee\u8fc7\u5c31\u4e0d\u518d\u8bbf\u95ee\uff1b\u53ea\u8981\u627e\u5230\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u5c31\u76f4\u63a5 return \uff09\uff0c\u5426\u5219\u4f1a TLE \u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <cstdio>\nusing std::scanf;\nusing std::printf;\n// \u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u9632\u6b62\u91cd\u540d\u51b2\u7a81\uff0c\u4e0d\u4e86\u89e3\u7684\u540c\u5b66\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 using namespace std;\n\nconst int MAXL=100+10;\nint len;\nbool can_arrive;\n// \u8bb0\u5f55\u662f\u5426\u80fd\u5230\u8fbe\nbool map[5][MAXL];\n// \u8bb0\u5f55\u5730\u56fe\uff0c1\u8868\u793a\u53ef\u4ee5\u8d70\uff0c0\u8868\u793a\u4e0d\u80fd\u8d70\nbool vis[5][MAXL];\n// \u8bb0\u5f55\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff0c1\u8868\u793a\u8bbf\u95ee\u8fc7\u4e86\n\ninline void reset( );\ninline void dfs ( int nowx, int nowy );\n\nint main( )\n{\n\tint T;\n\tscanf( \"%d\", &T );\n\twhile ( T-- )\n\t{\n\t\treset( ); // \u91cd\u7f6e\u6570\u7ec4\n\t\tint train;\n\t\tscanf( \"%d %d\", &len, &train );\n\t\tint sx, sy;\n\t\tfor ( int i=1; i<=3; i++ )\n\t\t{\n\t\t\tchar line[MAXL];\n\t\t\tscanf( \"%s\", line );\n\t\t\tfor ( int j=0; j<len; j++ )\n\t\t\t\tif ( line[j]>='A' && line[j]<='Z' )\t\n\t\t\t\t\tmap[i][j]=0;\n\t\t\t\telse if ( line[j]=='s' )\n\t\t\t\t\tsx=i, sy=j;\n\t\t} //\u8bfb\u5165\n\t\tdfs( sx, sy );\n\t\tprintf( \"%s\\n\", can_arrive?\"YES\":\"NO\" ); // \u4f7f\u7528\u4e09\u76ee\u8868\u8fbe\u5f0f\u538b\u957f\u5ea6(?)\n\t}\n\treturn 0;\n}\n\t\t\n\n\ninline void reset( )\n{\n\tfor ( register int i=0; i<MAXL; i++ )\n\t{\n\t\tmap[1][i]=map[2][i]=map[3][i]=1;\n\t\tmap[0][i]=map[4][i]=0;\n\t\tvis[1][i]=vis[2][i]=vis[3][i]=0;\n\t\tvis[0][i]=vis[4][i]=1;\n\t}\n// \u521d\u59cb\u5316\u7684\u65f6\u5019\u5c06\u8fb9\u754c\u4e5f\u8bbe\u7f6e\u4e3a\u4e0d\u80fd\u8d70\uff0c\u9632\u6b62\u641c\u7d22\u7684\u65f6\u5019\u8d8a\u754c\uff1b\n// \u6211\u91c7\u7528\u7684\u662f\u5148\u5047\u8bbe\u5168\u90e8\u90fd\u53ef\u4ee5\u8d70\uff0c\u8bfb\u5230\u969c\u788d\u7684\u65f6\u5019\u518d\u8bbe\u7f6e\u4e3a\u4e0d\u80fd\u8d70\n\tcan_arrive=0;\n\treturn;\n}\n\ninline void dfs( int nowx, int nowy )\n{\n\tif ( nowy>=len ) //\u8d70\u5230\u4e86\u96a7\u9053\u5c3d\u5934 \n\t\tcan_arrive=1;\n\tif ( can_arrive ) // \u5df2\u7ecf\u6709\u5408\u6cd5\u8def\u5f84 \n\t\treturn;\n\tif ( map[nowx][nowy]==0 ) // \u8d70\u5230\u4e86\u4e0d\u80fd\u8d70\u7684\u683c\u5b50 \n\t\treturn;\n\tif ( vis[nowx][nowy] ) // \u5f53\u524d\u683c\u5b50\u88ab\u8bbf\u95ee\u8fc7 \n\t\treturn;\n\tvis[nowx][nowy]=1; // \u8bb0\u5f55\u8bbf\u95ee \n\tfor ( int i=-1; i<=1; i++ )\n\t\tif ( map[nowx][nowy+1] && map[nowx+i][nowy+1] \n\t\t&& map[nowx+i][nowy+2] && map[nowx+i][nowy+3] )\n\t\t// \u5224\u65ad\u8def\u5f84\u4e0a\u662f\u5426\u90fd\u662f\u7a7a\u683c\u5b50\uff0c\u662f\u518d\u7ee7\u7eed\u641c\u7d22 \n\t\t\tdfs( nowx+i, nowy+3 );\n\treturn;\n}\n```\n\n[\u63d0\u4ea4\u8bb0\u5f55 \u7528\u65f6: 511ms / \u5185\u5b58: 3248KB](https://www.luogu.org/record/show?rid=6784349)\n\n## \u5e7f\u544a\uff1a\u52a0\u5165\u4ee3\u7801\u516c\u5f00\u8ba1\u5212 \u4e92\u52a9\u5171\u5efa\u548c\u8c10\u6d1b\u8c37\n~~\u9003~~",
        "postTime": 1523666124,
        "uid": 54160,
        "name": "Prurite",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF585B \u3010Phillip and Trains\u3011"
    },
    {
        "content": "\u4e00\u9053\u633a\u6c34\u7684\u641c\u7d22\u9898\u3002\n\n\n\n------------\n## \u601d\u8def\uff1aDFS\u3002\n\n\u5982\u679c\u6309\u9898\u610f\u7684\u706b\u8f66\u79fb\u52a8\u4f1a\u5f88\u9ebb\u70e6\uff0c~~\u6839\u636e\u76f8\u5bf9\u8bba~~\u6211\u4eec\u53ef\u4ee5\u5c06\u706b\u8f66\u5411\u5de6\u79fb\u52a8\u6b65\u6539\u4e3a\u8fd9\u4e2a\u4eba\u5411\u53f3\u79fb\u52a8\uff0c\u52a0\u4e0a\u4e4b\u524d\u7684\u5411\u524d\u8d70\u4e00\u6b65\u5c31\u662f\u5411\u53f3\u8d70\u4e09\u6b65\u3002\n### \u65b9\u6cd5:\u6bcf\u6b21\u5728\u4e0a\u4e0b\u4ee5\u53ca\u672c\u884c\u8fdb\u884c\u641c\u7d22\uff0c\u4e0d\u9700\u8981\u52a0\u4ec0\u4e48\u526a\u679d\uff0c\u518d\u62ff\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u6807\u8bb0\uff0c\u5982\u679c\u524d\u65b9\u6709\u706b\u8f66\u5219\u4e0d\u80fd\u8d70\u4e86\uff0c\u8fbe\u5230\u7ec8\u70b9\u8fdb\u884c\u6807\u8bb0\u3002\u6bcf\u6b21\u679a\u4e3e\u4e0d\u8d8a\u754c\u7684\u4e0a\u672c\u4e0b\u884c\uff0c\u5224\u65ad\u8be5\u884c\u7684\u524d\u9762\u4e09\u683c\u662f\u5426\u6709\u706b\u8f66\uff0c\u82e5\u524d\u9762\u4e09\u683c\u90fd\u6ca1\u6709\u706b\u8f66\u5c31\u4ece\u8fd9\u884c\u7ee7\u7eed\u641c\u7d22\u3002\n\n\n\n------------\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f,n,k,t,i,j,a[4][105],fx,vis[4][105];\nchar b;\nvoid dfs(int x,int y)\n{\n   if(y>=n){//\u8fbe\u5230\u7ec8\u70b9\n      f=1;\n      return;\n   }\n   if(vis[x][y]||f)return;//\u5df2\u8d70\u8fc7\u6216\u5df2\u7ecf\u5230\u4e86\u3002\n   vis[x][y]=1;//\u6253\u6807\u8bb0\u3002\n   if(a[x][y+1])return;//\u5982\u679c\u524d\u9762\u6709\u706b\u8f66\uff0c\u7ed3\u675f\u3002\n   for(int i=x-1;i<=x+1;i++)//\u4e09\u884c\u3002\n   {\n      if(i<1||i>3)continue;//\u8d8a\u754c\u4e86\u3002\n      if(!a[i][y+1]&&!a[i][y+2]&&!a[i][y+3])dfs(i,y+3);//\u524d\u9762\u6ca1\u706b\u8f66\u3002\n   }\n}\nint main()\n{\n   cin>>t;\n   while(t--)\n   {\n      f=0;\n      memset(a,0,sizeof a);\n      memset(vis,0,sizeof vis);//\u521d\u59cb\u5316\u3002\n      cin>>n>>i;\n      for(i=1;i<=3;i++)\n         for(j=1;j<=n;j++)\n         {\n            cin>>b;//\u8f93\u5165\u3002\n            if(b!='.'){\n               if(b=='s')fx=i;//\u8d77\u59cb\u4f4d\u7f6e\u3002\n               else a[i][j]=1;\n            }\n            else a[i][j]=0;\n            vis[i][j]=0; //\u6709\u70b9\u591a\u4f59\uff0c\u8bf7\u4e0d\u8981\u5728\u610f\u3002\n         }\n      dfs(fx,1);//\u641c\u7d22\u3002\n      if(f)puts(\"YES\");//\u8f93\u51fa\u3002\n      else puts(\"NO\");\n   }\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n```\n",
        "postTime": 1673011684,
        "uid": 824865,
        "name": "Algae",
        "ccfLevel": 0,
        "title": "CF585B\tPhillip and Trains\u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF585B)\n\n\u7ed9\u4f60\u4e00\u4e2a $3\\times n$ \uff08 $3$ \u884c $n$ \u5217\uff09\u7684\u4e8c\u7ef4\u5b57\u7b26\u6570\u7ec4\uff0c\u5176\u4e2d $\\texttt{s}$ \u8868\u793a\u4f60\u7684\u521d\u59cb\u4f4d\u7f6e\uff0c$\\texttt{A}$~ $\\texttt{Z}$ \u8868\u793a\u5217\u8f66\u3002\n\n\u5bf9\u4e8e\u6bcf\u56de\u5408\uff0c\u4f60\u8981\u5148\u5f80\u53f3\u4e00\u683c\uff0c\u518d\u9009\u62e9\u5f80\u4e0a\u3001\u4e0d\u52a8\u3001\u6216\u8005\u5f80\u4e0b\u8d70\u4e00\u683c\uff08\u4e0d\u80fd\u8d85\u51fa\u683c\u5b50\uff09\u3002\u7136\u540e\u6bcf\u8f86\u5217\u8f66\u90fd\u4f1a\u5f80\u5de6\u8d70\u4e24\u683c\uff0c\u82e5\u8d85\u51fa\u8fb9\u754c\u5219\u4f1a\u6d88\u5931\u4e00\u4e9b\u3002\u82e5\u5728\u4efb\u4f55\u65f6\u5019\u5217\u8f66\u649e\u5230\u4e86\u4f60\uff0c\u90a3\u4e48\u5c31\u4f1a\u7ed3\u675f\u6e38\u620f\u3002\u5982\u679c\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u4f60\u53ef\u4ee5\u5230\u8fbe\u7ec8\u70b9\uff08\u5373\u6700\u540e\u4e00\u5217\uff09\uff0c\u5219\u8f93\u51fa $\\texttt{YES}$\uff0c\u5426\u5219\u8f93\u51fa $\\texttt{NO}$\u3002\n\n## \u601d\u8def\n\u6211\u4eec\u8003\u8651\u4f7f\u7528 `dfs`\u3002\n\n\u4f46\u662f\u6bcf\u6b64\u79fb\u52a8\u540e\u90fd\u6539\u53d8\u8f66\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613 $\\texttt{TLE}$ \uff08~~\u672c\u849f\u84bb~~\u6211\u7b2c\u4e00\u6b21\u7684\u505a\u6cd5)\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u6362\u4e00\u79cd\u601d\u8def\uff1a\n\n\u6bcf\u6b21\u8f66\u79fb\u52a8\u4e24\u683c\u65f6\uff0c\u4f60\u662f\u4e0d\u52a8\u7684\uff0c\u8fd9\u53ef\u4ee5\u8f6c\u6362\u4e3a\uff1a\u8f66\u4e0d\u52a8\uff0c\u4f60\u5f80\u524d\u79fb\u52a8\u4e24\u56de\u5408\u3002\u4e14\u79fb\u52a8\u7684\u4e24\u56de\u5408\u4e2d\u90fd\u4e0d\u80fd\u78b0\u5230\u8f66\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u7701\u53bb\u79fb\u52a8\u8f66\u7684\u65f6\u95f4\uff0c\u4ee3\u7801\u4e5f\u53d8\u5f97\u66f4\u7b80\u5355\u4e86\u3002\n\n\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u8f6c\u6362\u6210\u4e86\uff1a\u6bcf\u56de\u5408\uff0c\u4f60\u5148\u5f80\u53f3\u79fb\u52a8\u4e24\u683c\uff0c\u518d\u9009\u62e9\u5f80\u4e0a\u3001\u4e0d\u52a8\u3001\u6216\u8005\u5f80\u4e0b\u8d70\u4e00\u683c\uff08\u4e0d\u80fd\u8d85\u51fa\u683c\u5b50\uff09\uff0c\u7136\u540e\u5f80\u524d\u79fb\u52a8\u4e24\u683c\uff0c\u4e14\u4efb\u610f\u65f6\u523b\u90fd\u4e0d\u80fd\u78b0\u5230\u8f66\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u4ee3\u7801\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002\n\n## CODE\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=170,mod=1e9+7;\nint T;\nbool b[4][N];\nint n,m;\nbool as;\nchar s[N];\nbool vis[4][N];\nvoid dfs(int u,int x){//u\u8868\u793a\u5f53\u524d\u8d70\u5230\u7b2cu\u5217\uff0cx\u8868\u793a\u5f53\u524d\u4e3a\u7b2cx\u884c \n\tif(u>=n){\n\t\tas=1;//\u6807\u8bb0\u6210\u529f\u6807\u8bb0 \n\t\treturn;\n\t}\n\tif(vis[x][u]||as)return;//\u5982\u679c\u5df2\u7ecf\u8d70\u8fc7\u4e86\u6216\u8005\u5f53\u524d\u5df2\u7ecf\u6210\u529f\uff0c\u5c31\u8fd4\u56de \n\tvis[x][u]=1;//\u6807\u8bb0\u4e3a\u5df2\u7ecf\u8d70\u8fc7 \n\tif(b[x][u+1])return;\n\tfor(int i=x-1;i<=x+1;i++){\n\t\tif(i<1||i>3)continue;//\u8d85\u51fa\u683c\u5b50\uff0c\u8df3\u8fc7 \n\t\tif(!b[i][u+1]&&!b[i][u+2]&&!b[i][u+3]){//\u5982\u679c\u90fd\u6ca1\u6709\u8f66 \n\t\t\tdfs(u+3,i);//\u7ee7\u7eeddfs \n\t\t}\n\t}\n\treturn;\n}\nvoid solve(){\n\tas=0;\n\tcin>>n>>m; \n\tmemset(b,0,sizeof(b));\n\tmemset(vis,0,sizeof(vis));\n\tint dq;\n\tfor(int i=1;i<=3;i++){\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='s')dq=i;\n\t\tfor(int j=0;j<n;j++){\n\t\t\tif(s[j]>='A'&&s[j]<='Z')b[i][j+1]=1;\n\t\t}\n\t}\n\tdfs(1,dq);\n\tif(as){\n\t\tcout<<\"YES\\n\";\n\t}\n\telse{\n\t\tcout<<\"NO\\n\";\n\t}\n\treturn;\n}\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1656852434,
        "uid": 541916,
        "name": "yaoyanfeng",
        "ccfLevel": 5,
        "title": "CF585B"
    },
    {
        "content": "### [$CF585B$ $Phillip$ $and$ $Trains$](https://www.luogu.com.cn/problem/CF585B)\n\n~~\u4e00\u9053\u96be\u5ea6\u4f4e\u4e8e\u84dd\u9898\u7684\u641c\u7d22\u9898\u3002~~\n\n**\u9898\u76ee**\uff1a\u6e38\u620f\u4eba\u7269\u5411\u53f3\u4e00\u6b65\uff0c\u9009\u62e9\u5411\u4e0a\u6216\u8005\u5411\u4e0b\u4e00\u6b65\u6216\u8005\u505c\u5728\u539f\u5730\u3002\u7136\u540e\u6240\u6709\u706b\u8f66\u540c\u65f6\u5411\u5de6\u5f00\u4e24\u683c\u3002\u5728\u4efb\u4f55\u65f6\u5019\u706b\u8f66\u649e\u5230\u6e38\u620f\u4eba\u7269\uff0c\u6e38\u620f\u4eba\u7269\u4e5f\u6b7b\u4e86\u3002\u706b\u8f66\u4f1a\u4e00\u76f4\u5411\u5de6\u5f00\uff0c\u76f4\u5230\u5b8c\u5168\u6d88\u5931\u3002\n\n\u7269\u7406\u5b66\u544a\u8bc9\u6211\u4eec\uff0c\u53ef\u4ee5\u5c06\u706b\u8f66\u76f8\u5bf9\u4eba\u5411\u5de6\u8fd0\u52a8\u770b\u4f5c**\u4eba\u76f8\u5bf9\u706b\u8f66\u5411\u53f3\u8fd0\u52a8**\u3002\n\n\u6240\u4ee5\u9898\u76ee\u8f6c\u4e3a\uff1a\u706b\u8f66\u4e0d\u52a8\uff0c\u6bcf\u6b21\u4eba\u5411\u53f3\u4e00\u6b65\uff0c\u9009\u62e9\u6362\u884c\u6216\u8005\u4e0d\u6362\u884c\uff0c\u518d\u5411\u53f3\u8d70\u4e24\u6b65\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a\uff08\u5728\u7b2c\u4e00\u884c\u548c\u7b2c\u4e09\u884c\u53ef\u80fd\u56e0\u4e3a\u78b0\u58c1\u800c\u65e0\u6cd5\u6362\u884c\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tfhyry94.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/s4lwduwd.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/m4jhz0kh.png)\n\n\u63a5\u4e0b\u6765\u53ea\u7528$BFS$\uff0c\u6216$DFS$\u5373\u53ef\u641c\u7d22\u5f97\u51fa\u7ed3\u679c\u3002\n\n(\u5728\u641c\u7d22\u65f6\u9700\u8981\u7528\u6570\u7ec4\u8bb0\u5f55\u662f\u5426\u641c\u8fc7\u4e0d\u7136\u53ef\u80fd$TLE$)\n\n$DFS$\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define N 105\n#define reg register\nusing namespace std;\ninline int read(){\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\nint t,n,k,x1,pd;\nint ma[5][N],pd1[5][N];\nstring s;\nvoid solve(int x,int y){ //dfs\n\tif(y>=n||pd==1){ //\u5df2\u7ecf\u641c\u5230\u5408\u6cd5\u89e3\n\t\tpd=1;\n\t\treturn;\n\t}\n\tpd1[x][y]=1;\n\tfor(reg int i=-1;i<=1;i++){ //\u4e09\u79cd\u60c5\u51b5\n\t\tint nx=x+i;\n\t\tif(pd1[nx][y+3]==0&&ma[x][y+1]==0&&ma[nx][y+1]==0&&ma[nx][y+2]==0&&ma[nx][y+3]==0&&nx>=1&&nx<=3)//\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u79fb\u52a8\n\t\t\tsolve(nx,y+3);\n\t}\n}\nint main(){\n\tt=read();\n\tfor(reg int z=1;z<=t;z++){\n\t\tn=read(),k=read();\n\t\tmemset(ma,0,sizeof(ma));\n\t\tmemset(pd1,0,sizeof(pd1));\n\t\tpd=0;\n\t\tfor(reg int i=1;i<=3;i++){ \n\t\t\tcin>>s;\n\t\t\tfor(reg int j=0;j<s.size();j++){\n\t\t\t\tif(s[j]=='s')x1=i,pd1[i][1]=1;//\u8d77\u70b9\n\t\t\t\telse if(s[j]>='A'&&s[j]<='Z') ma[i][j+1]=1;//\u706b\u8f66\n\t\t\t}\n\t\t}\n\t\tsolve(x1,1);\n\t\tif(pd==1) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1604061898,
        "uid": 116172,
        "name": "\u661f\u7a7a\u8bb0\u9038",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF585B \u3010Phillip and Trains\u3011"
    },
    {
        "content": "\u5443DFS\nPascal\u4ee3\u7801\n\n```pascal\nvar xx,yy,num,n1,i,j,n,m:longint;\n    a:array[0..4,0..105]of char;\n    bo:array[0..4,0..105]of boolean;\nfunction canon(x:longint):boolean;\nbegin\n  if (x>=1)and(x<=3) then exit(true);\n   exit(false);\nend;\n\nfunction search(x,y:longint):boolean;\nvar bool:boolean;\nbegin\n  bo[x,y]:=true;\n  bool:=false;\n  if (y+1<=n)and(not(a[x,y+1]='.'))  then exit(false);\n  if canon(x-1) then\n  begin\n  if y+1>n then exit(true)\n           else if (a[x-1,y+1]='.')and(y+2>n) then exit(true)\n                                              else\n                            if (a[x-1,y+1]='.')and(a[x-1,y+2]='.')and(y+3>n) then exit(true);\n                   if (a[x-1,y+3]='.')and(a[x-1,y+1]='.')and(a[x-1,y+2]='.') then\n                            if not bo[x-1,y+3] then bool:=search(x-1,y+3);\n                            if bool then exit(true);\n                          end;\n          bool:=false;\n          if canon(x+1) then begin\n                             if y+1>n then exit(true)\n                            else\n                            if (a[x+1,y+1]='.')and(y+2>n) then exit(true)\n                            else\n                            if (a[x+1,y+1]='.')and(a[x+1,y+2]='.')and(y+3>n) then exit(true);\n\n                   if (a[x+1,y+3]='.')and(a[x+1,y+1]='.')and(a[x+1,y+2]='.') then\n                            if not bo[x+1,y+3] then bool:=search(x+1,y+3);\n                            if bool then exit(true);\n                          end;\n          bool:=false;\n                          begin\n                             if y+1>n then exit(true)\n                            else\n                            if (a[x,y+1]='.')and(y+2>n) then exit(true)\n                            else\n                            if (a[x,y+1]='.')and(a[x,y+2]='.')and(y+3>n) then exit(true);\n                   if (a[x,y+3]='.')and(a[x,y+1]='.')and(a[x,y+2]='.') then\n                            if not bo[x,y+3] then bool:=search(x,y+3);\n                            if bool then exit(true);\n                          end;\n          exit(false);\n        end;\n\n\nbegin\n  readln(num);\n  for n1:=1 to num do\n  begin\n      readln(n,m); fillchar(bo,sizeof(bo),0);\n      for i:=1 to 3 do\n      begin\n        for j:=1 to n do\n        begin\n          read(a[i,j]);\n          if a[i,j]='s' then begin xx:=i; yy:=j; end;\n        end;\n        readln;\n      end;\n      if search(xx,yy) then writeln('YES')\n                      else writeln('NO');\n  end;\nend.\n\n```",
        "postTime": 1541384228,
        "uid": 114263,
        "name": "Janat_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF585B \u3010Phillip and Trains\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6df1\u641c\u7684\u597d\u9898\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u8fd9\u79cd\u4eba\u548c\u706b\u8f66\u90fd\u80fd\u79fb\u52a8\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u8d70\u591a\u4e2a\u683c\u5b50\u7684\u65b9\u5f0f\u6a21\u62df\u51fa\u4e24\u4e2a\u7269\u4f53\u4e00\u8d77\u79fb\u52a8\u7684\u72b6\u6001\u3002\u63a5\u7740\u6df1\u641c\u6b64\u65f6\u4eba\u7684 $x$ \u548c $y$ \u5750\u6807\uff0c\u4e00\u76f4\u641c\u7d22\u76f4\u5230\u4eba\u5230\u8fbe\u6700\u53f3\u8fb9\u3002\n\n\u5927\u6982\u6846\u67b6\u627e\u5230\u4e86\uff0c\u6211\u4eec\u5c31\u8fdb\u884c\u8be6\u7ec6\u5256\u6790\u3002\u5bf9\u4e8e\u641c\u7d22\uff0c\u6211\u4eec\u8981\u6ce8\u610f\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\u4e00\u79cd\u662f\u7b80\u7b80\u5355\u5355\u7684\u5411\u524d\u79fb\u52a8\uff0c\u8003\u8651\u5230\u4e24\u4e2a\u7269\u4f53\u4e00\u8d77\u8fd0\u52a8\uff0c\u90a3\u4e48 $y$ \u7684\u5750\u6807\u5c31\u8981\u79fb\u52a8 $3$ \u683c\uff0c\u5f53\u7136\u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\u5230\u8fbe\u7ec8\u70b9\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u5728\u63a5\u4e0b\u6765\u7684\u79fb\u52a8\u5f53\u4e2d\u4f1a\u4e0d\u4f1a\u649e\u5230\u706b\u8f66\u3002\u6ce8\u610f\u4e00\u4e2a\u70b9\u5728\u6062\u590d\u5f53\u524d\u8282\u70b9\u65f6\uff0c\u8bb0\u5f55\u5df2\u8bbf\u95ee\u8282\u70b9\u7684\u6570\u7ec4\u8981\u63d0\u524d\u4e00\u4e2a\u683c\u5b50\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u706b\u8f66\u548c\u4eba\u90fd\u662f\u4e00\u8d77\u8fd0\u52a8\u7684\u3002\u7b2c\u4e8c\u79cd\u662f\u5411\u5de6\u79fb\u52a8\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ea\u6709\u5728\u6700\u53f3\u8fb9\u4e24\u6761\u8def\u624d\u53ef\u4ee5\u8fd0\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u8fdb\u884c\u4e00\u4e2a\u5224\u65ad\uff0c\u63a5\u7740\u540c\u4e0a\uff0c\u5224\u65ad\u662f\u5426\u5b89\u5168\u3002\u7b2c\u4e09\u79cd\u60f3\u5fc5\u5927\u5bb6\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u5c31\u662f\u5411\u53f3\u79fb\u52a8\uff0c\u8fd9\u4e2a\u5c31\u4e0d\u505a\u89e3\u91ca\u4e86\u3002\n\n\u6700\u540e\u662f\u7ec8\u6b62\u6761\u4ef6\uff0c\u5982\u679c\u5230\u8fbe\u4e86\u6700\u53f3\u5904\u5c31\u662f\u53ef\u884c\u7684\uff0c\u540c\u65f6\u4e3a\u4e86\u907f\u514d\u8d85\u65f6\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u53d8\u91cf\u5224\u65ad\u662f\u5426\u627e\u5230\u4e86\u4e00\u79cd\u89e3\u6cd5\uff0c\u5982\u679c\u627e\u5230\u4e86\u5c31\u4e0d\u518d\u8fdb\u884c\u5176\u5b83\u8282\u70b9\u7684\u4e0b\u4e00\u6b65\u8bbf\u95ee\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u70b9\u6bd4\u8f83\u91cd\u8981\uff0c\u7531\u4e8e\u662f\u591a\u7ec4\u6570\u636e\uff0c\u521d\u59cb\u5316\u662f\u4e0d\u53ef\u7f3a\u5c11\u7684\uff0c\u6211\u76f8\u4fe1\u4e00\u5b9a\u4f1a\u6709\u4eba\u5fd8\u4e86\u8bb2\u8bb0\u5f55\u5730\u56fe\u7684\u6570\u7ec4\u521d\u59cb\u5316\uff0c\u8fd9\u6837\u7684\u8bdd\u6709\u53ef\u80fd\u903b\u8f91\u6df7\u4e71\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u70b9\uff0c\u5373\u5168\u90e8\u53ef\u4ee5\u884c\u8d70\uff0c\u5230\u4e86\u8f93\u5165\u7684\u65f6\u5019\u518d\u628a\u5176\u5b83\u7684\u4e1c\u897f\u52a0\u8fdb\u6765\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\nvoid dfs(int x,int y)\n{\n    if(y>n||flag)\n    {\n        flag=1;\n        return;\n    }\n    if(check(x,y+1)&&check(x,y+2)&&check(x,y+3)&&!vis[x][y+3])\n    {\n        vis[x][y+3]=1;\n        dfs(x,y+3);\n        vis[x][y+2]=0;\n    }\n    if(x<=2&&check(x,y+1)&&check(x+1,y+1)&&check(x+1,y+2)&&check(x+1,y+3)&&!vis[x+1][y+3])\n    {\n        vis[x+1][y+3]=1;\n        dfs(x+1,y+3);\n        vis[x+1][y+3]=0;\n    }\n    if(x>=2&&check(x,y+1)&&check(x-1,y+1)&&check(x-1,y+2)&&check(x-1,y+3)&&!vis[x-1][y+3])\n    {\n        vis[x-1][y+3]=1;\n        dfs(x-1,y+3);\n        vis[x-1][y+3]=0;\n    }\n}\n```",
        "postTime": 1646060030,
        "uid": 439177,
        "name": "Super_Sheep",
        "ccfLevel": 0,
        "title": "CF585B\u9898\u89e3"
    },
    {
        "content": "# \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a $3$ \u884c $n$ \u5217\u7684\u5730\u56fe\uff0c\u5730\u56fe\u4e2d\u6709\u4e00\u4e9b\u706b\u8f66\u3002\u6bcf\u5217\u706b\u8f66\u90fd\u662f\u4e00\u4e2a\u5728\u4efb\u610f\u4e00\u884c\u4e14\u81f3\u5c11\u957f\u4e24\u4e2a\u683c\u7684\u4e00\u4e9b\u8fde\u7eed\u65b9\u683c\u3002\u540c\u4e00\u5217\u706b\u8f66\u7528\u76f8\u540c\u5b57\u6bcd\u8868\u793a\uff0c\u7a7a\u5730\u8868\u793a\u4e3a `.`\u3002\u73b0\u5728\u6709\u4e00\u4e2a\u8d77\u70b9\uff0c\u5b57\u7b26\u8868\u793a\u4e3a `s`\uff0c\u6bcf\u6b21 `s` \u5148\u5411\u53f3\u8d70\u4e00\u683c\uff0c\u7136\u540e\u53ef\u4ee5\u9009\u62e9\u5411\u4e0a\u5411\u4e0b\u6216\u4e0d\u53d8\u4f4d\u7f6e\u3002\u4e4b\u540e\u6bcf\u4e00\u5217\u706b\u8f66\u4f1a\u5411\u5de6\u884c\u9a76\u4e24\u683c\u3002\u95ee\u6709\u6ca1\u6709\u65b9\u6cd5\u4f7f\u5f97\u4ece\u8d77\u70b9\u5f00\u59cb\u4e0d\u88ab\u706b\u8f66\u649e\u6b7b\u5230\u8fbe\u4efb\u610f\u4e00\u884c\u6700\u540e\u4e00\u5217\u3002\n\n# \u89e3\u6cd5\uff1a\n\n\u8fd9\u9898\u7528\u641c\u7d22\u89e3\u51b3\u3002\u56e0\u4e3a\u95ee\u9898\u662f\u8fde\u901a\u6027\u800c\u975e\u6700\u5c0f\u6b65\u6570\u7b49\u95ee\u9898\uff0c\u5e7f\u641c\u6df1\u641c\u5747\u53ef\u89e3\u51b3\u3002\u4f46\u662f\u7279\u522b\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f\u5b58\u50a8\u706b\u8f66\u4ee5\u53ca\u706b\u8f66\u5411\u5de6\u884c\u9a76\u4e24\u6b65\u7684\u6a21\u62df\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u50a8\u4e00\u5217\u706b\u8f66\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5b58\u50a8\u7684\u662f\u8fd9\u5217\u706b\u8f66\u6240\u5728\u7684\u884c\uff0c\u706b\u8f66\u6700\u5de6\u7aef\u4e0e\u6700\u53f3\u7aef\u6240\u5728\u7684\u5217\uff0c\u603b\u5171 $3$ \u4e2a\u4fe1\u606f\u3002\u6211\u662f\u8fd9\u6837\u5199\u7684\uff1a\n\n```cpp\nstruct Node\n{\n\tint l, r, x; // \u5de6\u7aef\u70b9\u6240\u5728\u7684\u5217\u3001\u53f3\u7aef\u70b9\u6240\u5728\u7684\u5217\u3001\u706b\u8f66\u6240\u5728\u7684\u884c\n\tNode(int a, int b, int c): l(a), r(b), x(c){} // \u6784\u9020\u51fd\u6570\n\tNode()\n\t{\n\t\tl = r = x = 0;\n\t} // \u6784\u9020\u51fd\u6570\n};\n```\n\n\u5904\u7406\u5b57\u7b26\u4e32\u65f6\u6211\u4eec\u53ef\u4ee5\u7528 `vector` \u5b58\u50a8\u6bcf\u5217\u706b\u8f66\uff0c\u7528 `unordered_map` \u8bb0\u5f55\u6bcf\u5217\u706b\u8f66\u662f\u5426\u4ee5\u53ca\u5b58\u50a8\uff0c\u56e0\u4e3a\u9898\u9762\u8bf4\u76f8\u540c\u7684\u706b\u8f66\u5b57\u7b26\u76f8\u540c\u3002\n\n\u5269\u4e0b\u7684\u95ee\u9898\u5728\u4e8e\u706b\u8f66\u884c\u9a76\u7684\u6a21\u62df\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u4f8b\u5982\u4ee5\u4e0b\u4f8b\u5b50\uff1a\n\n```cpp\n1\n6 1\ns...AA\n....BB\n....CC\n```\n\u90a3\u4e48\u5176\u4e2d\u4e00\u79cd\u65b9\u6848\u7684\u4e0b\u4e00\u6b65\u662f\uff1a\n\n```cpp\n..AA..\n.sBB..\n..CC..\n```\n\u7d27\u63a5\u7740\u662f\uff1a\n\n```cpp\nAA....\nBBs...\nCC....\n```\n\n\u4f46\u662f\u5f88\u660e\u663e\u6700\u540e\u8fd9\u4e2a\u72b6\u6001\u65e0\u6cd5\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5728 `s` \u8f6c\u79fb\u65f6\u4f1a\u88ab\u706b\u8f66\u649e\u5230\u3002\u4f46\u662f\u5982\u679c\u76f4\u63a5\u6a21\u62df\u90a3\u4e48\u8f6c\u79fb\u540e\u5176\u5b9e\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u8f6c\u79fb\u8fc7\u7a0b\u4e0d\u5408\u6cd5\u3002\u6240\u4ee5\u4e00\u5b9a\u8981\u5bf9\u8f6c\u79fb\u8fc7\u7a0b\u7279\u5224\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <utility>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\nconst int N = 105;\nstring s[N];\nint t, n, k;\nbool f[N][N];\n\nstruct Node\n{\n\tint l, r, x;\n\tNode(int a, int b, int c): l(a), r(b), x(c){}\n\tNode()\n\t{\n\t\tl = r = x = 0;\n\t}\n};\n\nvector<Node> train; // \u4fdd\u5b58\u706b\u8f66\nunordered_map<char, bool> mp;\n\ninline bool check(int x, int y)\n{\n\tfor (int i = 0; i < train.size(); i++)\n\t{\n\t\tif (train[i].x == x && train[i].l <= y && train[i].r >= y)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\ninline bool work_next(int x, int y)\n{\n\tfor (int i = 0; i < train.size(); i++)\n\t{\n\t\tif (train[i].x == x && train[i].l <= y && train[i].r >= y) return true;\n\t\tif (train[i].x == x && train[i].l - 2 <= y && train[i].r >= y) return true;\n\t}\n\tfor (int i = 0; i < train.size(); i++)\n\t{\n\t\ttrain[i].l -= 2;\n\t\ttrain[i].r -= 2;\n\t}\n\treturn false;\n}\n\ninline void work_pre()\n{\n\tfor (int i = 0; i < train.size(); i++)\n\t{\n\t\ttrain[i].l += 2;\n\t\ttrain[i].r += 2;\n\t}\n}\n\ninline bool dfs(int x, int y)\n{\n\tif (x < 1 || x > 3 || y < 0 || y >= n || f[x][y] || check(x, y)) return false;\n\tf[x][y] = true;\n\tif (y == n - 1)\n\t{\n\t\t//cout << x << \" \" << y << endl;\n\t\tputs(\"YES\");\n\t\treturn true;\n\t}\n\ty++;\n\tif (check(x, y)) return false;\n\tif (!work_next(x, y))\n\t{\n\t\tif (dfs(x, y)) return true;\n\t\twork_pre();\n\t}\n\tif (!work_next(x - 1, y))\n\t{\n\t\tif (dfs(x - 1, y)) return true;\n\t\twork_pre();\n\t}\n\tif (!work_next(x + 1, y))\n\t{\n\t\tif (dfs(x + 1, y)) return true;\n\t\twork_pre();\n\t}\n\treturn false;\n}\n\n\nint main()\n{\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tmemset(f, false, sizeof(f));\n\t\tscanf(\"%d %d\", &n, &k);\n\t\ttrain.clear();\n\t\tmp.clear();\n\t\tint sx = 0, sy = 0;\n\t\tfor (int i = 1; i <= 3; i++)\n\t\t{\n\t\t\tcin >> s[i];\n\t\t}\n\t\tfor (register int i = 1; i <= 3; i++)\n\t\t{\n\t\t\tfor (register int j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tif (s[i][j] == 's')\n\t\t\t\t{\n\t\t\t\t\tsx = i;\n\t\t\t\t\tsy = j;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (s[i][j] == '.' || mp.count(s[i][j])) continue;\n\t\t\t\t\tmp[s[i][j]] = true;\n\t\t\t\t\tNode p;\n\t\t\t\t\tp.x = i;\n\t\t\t\t\tp.l = j;\n\t\t\t\t\tp.r = j;\n\t\t\t\t\tfor (register int k = j + 1; k < n; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (s[i][k] != s[i][j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tp.r = k - 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttrain.push_back(p);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!dfs(sx, sy))\n\t\t{\n\t\t\tputs(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1643719061,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF585B Phillip and Trains"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF585B)\n## \u9898\u610f\n\u4e00\u4e2a\u8dd1\u9177\u6e38\u620f\uff0c\u6bcf\u4e00\u56de\u5408\u73a9\u5bb6\u5148\u5411\u524d\u8dd1\u4e00\u6b65\uff0c\u7136\u540e\u5141\u8bb8\u5411\u4e0a\u4e00\u683c\u3001\u5411\u4e0b\u4e00\u683c\u548c\u4e0d\u52a8\uff0c\u7136\u540e\u706b\u8f66\u524d\u8fdb\u4e24\u6b65\u3002\u5982\u679c\u649e\u5230\u706b\u8f66\u5219\u6e38\u620f\u5931\u8d25\uff0c\u5982\u679c\u73a9\u5bb6\u6210\u529f\u8dd1\u5230\u4e86\u5730\u56fe\u7684\u6700\u53f3\u8fb9\uff0c\u5219\u6e38\u620f\u80dc\u5229\u3002\u73b0\u5728\u544a\u8bc9\u4f60\u573a\u4e0a\u7684\u60c5\u51b5\uff0c\u95ee\u4f60\u73a9\u5bb6\u662f\u5426\u53ef\u4ee5\u6210\u529f\u3002\n\n## \u5206\u6790\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\u4f7f\u7528bfs\uff0c\u56e0\u4e3a\u5728\u8fd9\u91cc\u6709\u62d0\u5f2f\u8fd9\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u4e00\u5904\u4f1a\u4f7f\u5f97\u53ef\u80fd\u7684\u65b9\u6848\u6570\u4e0d\u6b62\u4e00\u79cd\uff0c\u4e3a\u4e86\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u65b9\u6848\u6211\u4eec\u4f7f\u7528bfs\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u706b\u8f66\u5411\u5de6\u79fb\u4e24\u6b65\u548c\u73a9\u5bb6\u518d\u5411\u53f3\u79fb\u4e24\u6b65\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u8ba9\u706b\u8f66\u4e0d\u79fb\u52a8\uff0c\u6bd5\u7adf\u73a9\u5bb6\u79fb\u52a8\u6bd4\u706b\u8f66\u79fb\u52a8\u8981\u7b80\u5355\u5f88\u591a\u3002\u73a9\u5bb6\u5728\u6b64\u65f6\u989d\u5916\u5411\u524d\u8dd1\u4e24\u6b65\u800c\u4e0d\u662f\u706b\u8f66\u79fb\u52a8\u3002\u5219\u6574\u4e2a\u56de\u5408\u5185\u73a9\u5bb6\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n1. \u524d\u8fdb\u4e00\u6b65\n2. \u5411\u4e0a\u4e00\u6b65\uff0c\u5411\u4e0b\u4e00\u6b65\uff0c\u6216\u4e0d\u52a8\n3. \u524d\u8fdb\u4e24\u6b65\n\n\u671f\u95f4\u4efb\u4f55\u4e00\u6b65\u64cd\u4f5c\u4e2d\u82e5\u73a9\u5bb6\u79fb\u52a8\u8def\u5f84\u4e0a\u7684\u65b9\u5757\u4e0a\u6709\u706b\u8f66\uff0c\u5219\u6b64\u65b9\u6848\u4e0d\u5408\u6cd5\u3002\n\n\u8be6\u60c5\u89c1\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> node;\n\nint train[3][105];\nbool visit[3][105];\nint n, k;\nqueue<node> que;\n\nbool bfs(int tx, int ty) {\n    memset(visit, 0, sizeof(visit));\n    while (!que.empty())\n        que.pop();\n    que.push((node){tx, ty});  //\u8d77\u70b9\n    while (!que.empty()) {\n        node cac = que.front();\n        que.pop();\n        int &x = cac.first, &y = cac.second;\n        if (visit[x][y])\n            continue;\n        visit[x][y] = true;\n        if (y >= n - 1)  //\u8dd1\u51fa\u5730\u56fe\uff0c\u5373\u6210\u529f\n            return true;\n        if (train[x][++y])  //1.\u524d\u8fdb\u4e00\u683c\n            continue;\n        if (y == n - 1)  //\u8dd1\u51fa\u5730\u56fe\uff0c\u5373\u6210\u529f\n            return true;\n        for (int i = -1; i < 2; i++) {  //2.\u5c1d\u8bd5\u8f6c\u5411\n            int tx = x + i;\n            if (tx < 0 || tx > 2)\n                continue;\n            if (train[tx][y] || train[tx][y + 1] || train[tx][y + 2])\n                continue;  //3.\u524d\u8fdb\u4e24\u683c\n            que.push((node){tx, y + 2});\n        }\n    }\n    return false;\n}\n\nint main() {\n    int T;\n    scanf(\"%d\", &T);\n    while (T--) {\n        memset(train, 0, sizeof(train));\n        scanf(\"%d%d\", &n, &k);\n        int start_x = 1, start_y = 0;  //\u8d77\u59cb\u4f4d\u7f6e\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < n; j++) {\n                char c = getchar();\n                while (c == ' ' || c == '\\n' || c == '\\r')\n                    c = getchar();\n                train[i][j] = c != '.';\n                if (c == 's')\n                    start_x = i, start_y = j;\n            }\n        }\n        if (bfs(start_x, start_y))\n            puts(\"YES\");\n        else\n            puts(\"NO\");\n    }\n    return 0;\n}\n```",
        "postTime": 1597583223,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "CF585B"
    },
    {
        "content": "#### \u6b63\u89e3\uff1a\n## ~~\u6df1\u641c~~\n\u79d1\u5b66\u8001\u5e08\u8868\u793a\u8fd0\u52a8\u662f\u76f8\u5bf9\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u706b\u8f66\u5411\u53f3\u4e24\u683c\u770b\u505a\u4eba\u5411\u5de6\u8d70\u4e24\u683c\uff0c\u5373\u4e00\u56de\u5408\u6e38\u620f\u4eba\u7269\u5411\u53f3\u4e00\u6b65(\u5982\u679c\u6b64\u65f6\u649e\u5230\u706b\u8f66\u5c31\u6b7b\u4e86)\u3002\u63a5\u7740\uff0c\u53ef\u4ee5\u9009\u62e9\u5411\u4e0a\u6216\u8005\u5411\u4e0b\u4e00\u6b65\u6216\u8005\u505c\u5728\u539f\u5730\uff08\u4e0d\u80fd\u78b0\u5230\u706b\u8f66\uff09\uff0c\u518d\u5411\u53f32\u683c\u3002\u7136\u540e \n### ~~\u6df1\u641c~~\n```pascal\nvar\n  xx,yy,num,n1,i,j,n,m:longint;\n  a:array[0..4,0..105]of char;\n  vis:array[0..4,0..105]of boolean;\nfunction ok(x:longint):boolean;\nbegin\n  if (x>=1)and(x<=3) then\n                       exit(true)\n                     else\n                       exit(false);\n\nend;\nfunction check(x,y:longint):boolean;\nvar\n  t1:boolean;\nbegin\n  vis[x,y]:=true;\n  t1:=false;\n  if (y+1<=n)and(not(a[x,y+1]='.')) then\n    exit(false);\n  if ok(x-1) then\n    begin\n      if y+1>n then\n        exit(true)\n      else\n        if (a[x-1,y+1]='.')and(y+2>n) then\n          exit(true)\n        else\n          if (a[x-1,y+1]='.')and(a[x-1,y+2]='.')and(y+3>n) then\n            exit(true);\n      if (a[x-1,y+3]='.')and(a[x-1,y+1]='.')and(a[x-1,y+2]='.') then\n        if not vis[x-1,y+3] then\n          t1:=check(x-1,y+3);\n      if t1 then exit(true);\n    end;\n  t1:=false;\n  if ok(x+1) then\n    begin\n      if y+1>n then\n        exit(true)\n      else\n      if (a[x+1,y+1]='.')and(y+2>n) then\n        exit(true)\n      else\n      if (a[x+1,y+1]='.')and(a[x+1,y+2]='.')and(y+3>n) then\n        exit(true);\n      if (a[x+1,y+3]='.')and(a[x+1,y+1]='.')and(a[x+1,y+2]='.') then\n        if not vis[x+1,y+3] then\n          t1:=check(x+1,y+3);\n      if t1 then\n      exit(true);\n    end;\n    t1:=false;\n    begin\n      if y+1>n then\n        exit(true)\n      else\n        if (a[x,y+1]='.')and(y+2>n) then\n          exit(true)\n        else\n          if (a[x,y+1]='.')and(a[x,y+2]='.')and(y+3>n) then\n            exit(true);\n       if (a[x,y+3]='.')and(a[x,y+1]='.')and(a[x,y+2]='.') then\n         if not vis[x,y+3] then\n           t1:=check(x,y+3);\n       if t1 then\n         exit(true);\n    end;\n  exit(false);\nend;\nprocedure I_Can_;\nbegin\n  readln(num);\nend;\nprocedure AK_NOI;\nbegin\n  for n1:=1 to num do\n    begin\n      readln(n,m);\n      fillchar(vis,sizeof(vis),0);\n      for i:=1 to 3 do\n        begin\n          for j:=1 to n do\n            begin\n              read(a[i,j]);\n              if a[i,j]='s' then\n                              begin\n                                xx:=i;\n                                yy:=j;\n                              end;\n            end;\n          readln;\n        end;\n      if check(xx,yy) then\n                        writeln('YES')\n                      else\n                        writeln('NO');\n    end;\nend;\nbegin\n  I_Can_;AK_NOI;//\u871c\u6c41\u4ee3\u7801QAQ\nend.\n\n\n\n```",
        "postTime": 1541675606,
        "uid": 66204,
        "name": "\u88d8\u5c0f\u5c0f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF585B \u3010Phillip and Trains\u3011"
    }
]