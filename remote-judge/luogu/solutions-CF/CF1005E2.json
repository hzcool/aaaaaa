[
    {
        "content": "\u53ea\u7b97\u4e00\u4e2a\u6570\u4e3a\u4e2d\u4f4d\u6570\u4e0d\u597d\u505a\n\n\u6211\u4eec\u60f3\u5230 m\u4e3a\u4e2d\u4f4d\u6570\u7684\u65b9\u6848\u6570=\u5927\u4e8e\u7b49\u4e8em\u4e3a\u4e2d\u4f4d\u6570\u7684\u65b9\u6848\u6570-\u5927\u4e8em\u4e3a\u4e2d\u4f4d\u6570\u7684\u65b9\u6848\u6570\n\n\u800c\u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u662f\u5927\u4e8e\u7b49\u4e8em\u4e3a\u4e2d\u4f4d\u6570\u662f\u7b80\u5355\n\n\u5f53\u4e14\u4ec5\u5f53\u5927\u4e8e\u7b49\u4e8em\u7684\u6570\u5927\u4e8e\u5c0f\u4e8em\u7684\u6570\n\n\u7531\u4e8e\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u5927\u4e8e\u7b49\u4e8e\u6216\u5c0f\u4e8em\u7684\u6570\u7684\u6570\u91cf\n\n\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u505a\u5dee\n\n\u7528map\u5b58\uff08\u5927\u4e8e\u7b49\u4e8em-\u5c0f\u4e8em\uff09\u65b9\u6848\u6570\n\n\u7ef4\u62a4\u524d\u7f00\u548c\u65f6\u6709\u70b9\u5c0f\u6280\u5de7\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427\n\n```cpp\nconst int N=2e5+10;\nmap<int,int>mp;\nint n,m,ans,cur,pre,a[N];\ninline int work(int k){\n\tmp.clear();cur=n,pre=0,ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tmp[cur]++;\n\t\tif(a[i]>=k)pre+=mp[cur],cur++;\n\t\telse cur--,pre-=mp[cur];\n        \t//\u5c0f\u6280\u5de7 -\u65f6\u9000\u6389 +\u65f6\u52a0\u4e0a\n\t\tans+=pre;\n\t}\n\treturn ans;\n}\nsigned main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tcout<<work(m)-work(m+1);\n}\n```\n",
        "postTime": 1606480673,
        "uid": 235657,
        "name": "hwx12233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1005E2 \u3010Median on Segments (General Case Edition)\u3011"
    },
    {
        "content": "\u8fd9\u4e0d\u662f\u767d\u7ed9\u7684 $O(n\\log n)$ \u4e48\uff1f\n\n\u6240\u4ee5\u60f3\u60f3\u6709\u4ec0\u4e48\u7b97\u6cd5\u662f $O(\\log n)$ \u7684\uff1f\n\u4e8c\u5206\uff1f\u7ebf\u6bb5\u6811\uff1f~~\u5feb\u901f\u5e42\uff1f~~\n\u4e8c\u5206\u83ab\u5f97\u5355\u8c03\u6027\uff0c\u7ebf\u6bb5\u6811\u592a\u957f\u4e86\u6211\u61d2\u5f97\u5199\uff0c\u90a3\u5c31\u5199**\u6811\u72b6\u6570\u7ec4**\u5427\uff01\n\n\u5f53\u7136\uff0c\u505a\u8fd9\u9053\u9898\u9700\u8981\u4e00\u5b9a\u7684\u57fa\u7840\uff0c\u6ca1\u505a\u8fc7\u672c\u573a\u6bd4\u8d5b E1 \u7684\u51fa\u95e8[\u5de6\u62d0](https://www.luogu.com.cn/problem/CF1005E1)\n\n\u7ecf\u8fc7 E1 \u7684\u6298\u78e8\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u8fd9\u9898\u53ef\u4ee5\u4f7f\u7528**\u524d\u7f00\u548c**\u6765\u89e3\u51b3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4ee5 $m$ \u4e3a\u4e2d\u4f4d\u6570\u7684\u60c5\u51b5 $=$ \u4ee5 $\\le m$ \u7684\u6570\u4e3a\u4e2d\u4f4d\u6570 $-$ \u4ee5 $\\lt m$ \u7684\u6570\u5b57\u4e3a\u4e2d\u4f4d\u6570\uff0c\u8fd9\u6837\u5c31\u597d\u524d\u7f00\u548c\u4e86\n\n\u7136\u540e\u6811\u72b6\u6570\u7ec4\u7684\u521d\u59cb\u5316\u8981\u5f00 $2n+1$\uff01\uff01\uff01\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u4e0d\u80fd\u5904\u7406\u8d1f\u6570\uff01\uff01\uff01\u60e8\u75db\u7684\u6559\u80b2\uff01\uff01\uff01\n\n\u7136\u540e\u63d0\u524d\u5b58\u5165 $n+1$ \u4e5f\u5c31\u662f\u524d\u7f00\u548c\u7684 $0$\u3002\u63a5\u4e0b\u6765\u6bcf\u4e00\u6b21\u90fd\u67e5\u627e\u4e00\u4e0b $1-sum_i$\uff0c\u52a0\u5230 $ans_1$ \u91cc\u9762\n\u7136\u540e\u628a $1-sum_i$ \u52a0\u5230 $ans_2$ \u91cc\uff0c\u8f93\u51fa\u4e00\u4e0b $ans_1-ans_2$ \u5c31\u5b8c\u7ed3\u6492\u82b1\u4e86\uff01\n\n\u4ee3\u7801\u5c31\u653e\u8fd9\u91cc\u4e86!\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\nconst int kMaxN = 2e5 + 5;\n\nint arr[kMaxN], sum[kMaxN], n, m;\nll ans1, ans2;\nclass TreeArray {\nprivate :\n  int tree[kMaxN << 1], size;\n  int lowbit (int sum) {\n    return sum & -sum;\n  }\npublic : \n  void init (int n) {\n    size = n;\n    fill (tree + 1, tree + size + 1, 0);\n  }\n  \n  void update (int now) {\n    for (int i = now; i <= size; i += lowbit (i)) {\n      tree[i]++;\n    }\n  }\n  int query (int now) {\n    int tot = 0;\n    for (int i = now; i > 0; i -= lowbit (i)) {\n      tot += tree[i];\n    }\n    return tot;\n  }\n} tree;\n\nint main () {\n  ios :: sync_with_stdio (false);\n  cin.tie (0), cout.tie (0);\n\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++) {\n    cin >> arr[i];\n  }\n\n  for (int i = 1; i <= n; i++) {\n    sum[i] = (arr[i] <= m ? 1 : -1) + sum[i - 1];\n  }\n  tree.init (n << 1 | 1);\n  tree.update (n + 1);\n  for (int i = 1; i <= n; i++) {\n    ans1 += tree.query (sum[i] + n + 1);\n    tree.update (sum[i] + n + 1);\n  }\n\n  for (int i = 1; i <= n; i++) {\n    sum[i] = (arr[i] < m ? 1 : -1) + sum[i - 1];\n  }\n  tree.init (n << 1 | 1);\n  tree.update (n + 1);\n  for (int i = 1; i <= n; i++) {\n    ans2 += tree.query (sum[i] + n + 1);\n    tree.update (sum[i] + n + 1);\n  }\n\n  cout << ans1 - ans2 << '\\n';\n  return 0;\n}\n```\n",
        "postTime": 1640426066,
        "uid": 355510,
        "name": "Lightwhite",
        "ccfLevel": 4,
        "title": "CF1005E2"
    },
    {
        "content": "\u5efa\u8bae\u5148\u79fb\u6b65 [E1](https://www.luogu.com.cn/problem/CF1005E1)\u3002\n\n\u7531\u4e0a\u4e00\u95ee\u6211\u4eec\u5f97\u5230\u4e86\u63a8\u5f0f\u5b50\u5f00 map \u52a8\u6001\u7ef4\u62a4\u7684\u601d\u8def\uff0c\u770b\u770b\u672c\u9898\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u672c\u9898\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u5373\u4e0d\u4fdd\u8bc1\u65e0\u91cd\u590d\uff0c\u90a3\u4e48\u6309\u7167\u4e0a\u4e00\u63d0\u7684\u505a\u6cd5\uff0c\u4f1a\u51fa\u73b0\u5b58\u5728\u591a\u4e2a $m$ \u7684\u5b50\u6bb5\u88ab\u591a\u6b21\u8ba1\u7b97\uff0c\u53bb\u91cd\u4e5f\u4e0d\u597d\u53bb\u3002\n\n\u90a3\u4e48\u4ee5 $m$ \u4e3a\u4e2d\u4f4d\u6570\u7684\u5b50\u6bb5\u6570\uff0c\u5176\u5b9e\u662f\u4ee5\u5927\u4e8e\u7b49\u4e8e $m$ \u4e3a\u4e2d\u4f4d\u6570\u7684\u5b50\u6bb5\u6570\u51cf\u53bb\u4ee5\u5927\u4e8e\u7b49\u4e8e $m+1$ \u4e3a\u4e2d\u4f4d\u6570\u7684\u5b50\u6bb5\u6570\uff0c\u53d1\u73b0\u4e24\u4e2a\u8981\u6c42\u7684\u91cf\u201c\u53e5\u5f0f\u201d\u76f8\u540c\uff0c\u6765\u770b\u770b\u600e\u4e48\u6c42\u3002\n\n\u4e0a\u4e00\u9898\u8ba8\u8bba\u4e86\u5b50\u6bb5\u957f\u5947\u5076\uff0c\u672c\u9898\u65e0\u9700\uff0c\u53d1\u73b0\u4ee5\u5927\u4e8e\u7b49\u4e8e $m$ \u4e3a\u4e2d\u4f4d\u6570\u7684\u5b50\u6bb5\uff0c\u5927\u4e8e\u7b49\u4e8e $m$ \u7684\u4e2a\u6570\u4e00\u5b9a\u5927\u4e8e\u5c0f\u4e8e $m$ \u7684\u4e2a\u6570\u3002\u5947\u6570\u60c5\u51b5\u975e\u5e38\u597d\u7406\u89e3\uff0c\u6bd5\u7adf\u6700\u52a3\u7684\u60c5\u51b5\u90fd\u5dee $1$\uff0c\u800c\u5076\u6570\u60c5\u51b5\u4e2d\u7531\u4e8e\u4e2d\u4f4d\u6570\u5b9a\u4e49\u6210\u9760\u5de6\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u52a3\u60c5\u51b5\u4f1a\u5dee $2$\uff0c\u7ed3\u8bba\u6210\u7acb\u3002\n\n\u4f9d\u65e7\u662f\u6c42 $cnt1,cnt2$\uff0c\u5206\u522b\u7ef4\u62a4\u4e0a\u8ff0\u4fe1\u606f\u3002\n\n\u5bf9\u4e8e\u5b57\u6bb5 $[l,r]$\uff0c\u6709\uff1a\n$$cnt2(r)-cnt2(l-1)>cnt1(r)-cnt1(l-1)$$\n\u5373\uff1a\n$$cnt2(r)-cnt1(r)>cnt2(l-1)-cnt1(l-1)$$\n\u8fd9\u6837\u5c31\u662f\u6c42\u5f53\u524d $[-n,cnt2(r)-cnt1(r)-1]$ \u7684\u4e2a\u6570\uff0c\u533a\u95f4\u6c42\u524d\u7f00\u548c\u9700\u8981\u6811\u72b6\u6570\u7ec4\u3002\u4e0d\u8981\u5fd8\u4e86\u6709\u8d1f\u6570\u60c5\u51b5\uff0c\u8981\u5f00\u6210 $2n+1$\uff0c\u4ee5\u53ca $0$ \u4e0a\u6570\u636e\u521d\u59cb\u4e3a $1$\u3002\n\n```cpp\nint n,m;\nint a[maxn];\nint cnt1[maxn],cnt2[maxn];\nstruct BianryTree{\n    ll siz[maxn<<1];\n    inline int lowbit(int x){return x&-x;}\n    inline void update(int x){\n        while(x<=2*n+1){\n            ++siz[x];\n            x+=lowbit(x);\n        }\n    }\n    inline ll query(int x){\n        ll res=0;\n        while(x){\n            res+=siz[x];\n            x-=lowbit(x);\n        }\n        return res;\n    }\n}B;\ninline ll solve(int x){\n    cnt1[0]=cnt2[0]=0;\n    memset(B.siz,0,sizeof(B.siz));\n    for(int i=1;i<=n;++i){\n        cnt1[i]=cnt1[i-1],cnt2[i]=cnt2[i-1];\n        if(a[i]<x) ++cnt1[i];\n        else ++cnt2[i];\n    }\n    B.update(n+1);//0\n    ll res=0;\n    for(int i=1;i<=n;++i){\n        int tmp=cnt2[i]-cnt1[i];\n        res+=B.query(tmp+n);\n        B.update(tmp+n+1);\n    }\n    return res;\n}\nint main(){\n    n=read(),m=read();\n    for(int i=1;i<=n;++i) a[i]=read();\n    printf(\"%lld\\n\",solve(m)-solve(m+1));\n    return 0;\n}\n```",
        "postTime": 1656843148,
        "uid": 321177,
        "name": "SoyTony",
        "ccfLevel": 6,
        "title": "CF\u9898\u89e3\u2014\u2014CF1005E2 Median on Segments (General Case Edition)"
    }
]