[
    {
        "content": "### \u9898\u610f\uff1a\n\u6709 $n$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u559c\u6b22\u4e00\u4e2a\u5e78\u8fd0\u6570\u5b57 $f_i(1 \\le i \\le n)$\u3002\u6bcf\u6b21\u4ed6\u4eec\u53ef\u4ee5\u9009\u62e9 $k$ \u4e2a\u6570\uff0c\u5f53\u4ed6\u4eec\u9009\u62e9\u4e86 $j(1 \\le j \\le k)$  \u4e2a\u5e78\u8fd0\u6570\u5b57\u540e\uff0c\u5e78\u798f\u503c\u662f $h_j$\u3002\u73b0\u5728\u7ed9\u5b9a $n \\times k$ \u4e2a\u6570\u5b57 $c_x(1 \\le x \\le n \\times k)$\uff0c\u6c42\u6700\u591a\u80fd\u5f97\u5230\u591a\u5c11\u5e78\u798f\u503c\u3002\n### \u5bfc\u5165\uff1a\n\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u66b4\u641c\u524d $i$ \u4e2a\u4eba\u9009\u4e86\u54ea\u4e9b\u6570\u8bbe\u72b6\u6001\u4e3a $i,j,v$\uff0c\u8868\u793a\u524d $i-1$ \u4e2a\u4eba\u6709\u4e86 $v$ \u7684\u5e78\u798f\u503c\u65f6\u7b2c $i$ \u4e2a\u4eba\u9009\u62e9\u4e86 $j$ \u4e2a\u6570\u3002\u5f53 $j \\le k$\uff0c\u5c31\u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u88ab\u9009\u62e9\u7684\u6570\uff0c\u5f53\u9009\u4e86\u81ea\u5df1\u7684\u5e78\u8fd0\u6570\u5b57\u65f6\u5c31\u5c06\u8ba1\u6570\u5668 $sum$ \u52a0\u4e00\uff0c\u7136\u540e\u8f6c\u79fb\u5230 $i,j+1,v$\uff0c\u5426\u5219\u8f6c\u79fb\u5230 $i+1,1,v+h_{sum}$\u3002\u5f53 $i > n$ \u65f6\uff0c\u5219\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a[TLE \u306e \u8bb0\u5f55](https://codeforc.es/contest/999/submission/201623363)\n\n\u663e\u800c\u6613\u89c1\uff0c\u80af\u5b9a\u8d85\u65f6\u3002\u8fd9\u65f6\u5019\uff0c\u5c31\u8981\u8003\u8651\u4f18\u5316\u4e86\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u76f8\u540c\u7684 $i,j,v$\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5b8c\u5168\u4e00\u81f4\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4fdd\u7559\u4e00\u4e2a\u5c31\u884c\u4e86\u3002\u8fd9\u4e2a\u526a\u679d\u867d\u7136\u53ef\u80fd\u4f18\u5316\u65f6\u95f4\uff0c\u5374\u4e0d\u4f1a\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5e76\u4e14\u5b83\u4e3a\u4e86\u4fdd\u8bc1\u7b54\u6848\u7684\u6b63\u786e\u6027\uff0c\u5c31\u53ea\u80fd\u4f18\u5316 $i$ \u8fd9\u4e00\u7ef4\uff0c$j$ \u662f\u5b8c\u5168\u4f18\u5316\u4e0d\u4e86\uff0c\u56e0\u6b64\u6ca1\u6709\u4efb\u4f55\u7528\u3002\n### \u5206\u6790\uff1a\n\u4e3a\u4e86\u771f\u6b63\u7684\u4f18\u5316\u65f6\u95f4\uff0c\u5c31\u53ea\u80fd\u4f18\u5316\u72b6\u6001\u548c\u6539\u53d8\u5904\u7406\u65b9\u5f0f\u4e86\u3002\u9996\u5148\uff0c\u8981\u660e\u767d\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u6027\u8d28\uff1a**\u5047\u8bbe\u5f53\u524d\u662f\u7b2c $i$ \u4e2a\u4eba\uff0c\u90a3\u4e48 $c$ \u4e2d\u4e0d\u662f $f_i$ \u7684\u6570\u5bf9\u7b54\u6848\u5c31\u6ca1\u6709\u5f71\u54cd\u3002\u800c\u5f53\u82e5\u5e72\u4e2a\u4eba\u7684\u5e78\u8fd0\u6570\u5b57\u76f8\u540c\u65f6\uff0c\u4ed6\u4eec\u672c\u8d28\u4e0a\u6ca1\u6709\u4efb\u4f55\u533a\u522b**\u3002\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u76f8\u540c\u5e78\u8fd0\u6570\u5b57\u7684\u4eba\uff0c\u5c06\u4ed6\u4eec\u5206\u6210\u4e00\u7ec4\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u7ec4\uff0c\u8ba1\u7b97\u6700\u5927\u7684\u5e78\u798f\u503c\uff0c\u5728\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u9700\u8981\u8003\u8651 $c$ \u4e2d\u4e0e $f_i$ \u76f8\u540c\u7684\u6570\u7684\u5206\u914d\u5c31\u884c\u4e86\u3002\u6700\u540e\uff0c\u5c06\u5e78\u798f\u503c\u76f8\u52a0\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n\n\u6839\u636e\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u5c31\u4f1a\u5ef6\u4f38\u51fa\u4e00\u4e2a\u95ee\u9898\uff1a**\u5982\u4f55\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u90fd\u9009\u4e86 $k$ \u4e2a\u6570\u5b57**\uff1f\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u662f\u53ef\u4ee5\u4ee4\u6bcf\u4e2a\u4eba\u9009\u7684\u6570\u91cf\u90fd $\\le k$\u3002\u63a5\u7740\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9009\u62e9\u6570\u91cf $<  k$ \u7684\u4eba\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7528\u4e0d\u5230\u7684\u6570\u6765\u586b\u6ee1\u5b83\u3002\u6ce8\u610f\uff1a**\u90a3\u4e9b\u53ef\u4ee5\u7528\u5230\u4f46\u591a\u51fa\u6765\u7684\u6570\u4e5f\u662f\u53ef\u4ee5\u7528\u6765\u586b\u7684**\u3002\u4e0a\u8ff0\u601d\u8def\u53ea\u662f\u4e00\u4e2a\u7406\u89e3\uff0c\u5e76\u4e0d\u9700\u8981\u5b9e\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b8c\u6210\u586b\u8865\u524d\u7684\u64cd\u4f5c\u5c31\u884c\u4e86\u3002\n\n\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7684\u7406\u89e3\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651\u5176\u4e2d\u4e00\u7ec4\u6700\u591a\u80fd\u8fbe\u5230\u7684\u5e78\u798f\u503c\uff0c\u7136\u540e\u518d\u5c06\u6bcf\u4e2a\u7ec4\u7684\u7b54\u6848\u76f8\u52a0\u3002\u4e3a\u4e86\u80fd\u66f4\u6e05\u695a\u7684\u8868\u73b0\u51fa\u5f53\u524d\u7684\u5c40\u9762\uff0c\u56e0\u6b64\u4e0d\u59a8\u8003\u8651\u72b6\u6001\u4e3a $i,j,v$\uff0c\u5206\u522b\u8868\u793a\u524d $i$ \u4e2a\u4eba\u5df2\u7ecf\u9009\u4e86 $j$ \u4e2a\u5e78\u8fd0\u6570\u5b57\u4e4b\u540e\u6709 $v$ \u7684\u5e78\u798f\u503c\u3002\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u9009\u62e9 $x(1 \\le \\min(j,k))$ \u4e2a\u5e78\u8fd0\u6570\u5b57\uff0c\u56e0\u6b64\u8f6c\u79fb\u5c31\u662f\uff1a\n$$i,j,v \\rightarrow i-1,j-x,v+h_x$$\n\u6bcf\u6b21\u8f6c\u79fb\u5c31\u662f\u5f53\u524d\u8fd9\u4e2a\u4eba\u9009\u62e9\u4e86 $x$ \u4e2a\u5e78\u8fd0\u6570\u5b57\u540e\u7684\u72b6\u6001\uff0c\u7b54\u6848\u5c31\u662f\u5e78\u798f\u503c\u6700\u591a\u7684\u4e00\u6761\u8def\u5f84\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u76f8\u540c\u7684 $i,j,v$\uff0c\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u6709\u9009\u62e9\u7684\u65b9\u6848\u4e0d\u540c\uff0c\u56e0\u6b64\u53ef\u4ee5\u53ea\u4fdd\u7559\u4e00\u4e2a\u3002\u5bf9\u4e8e\u7b54\u6848\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u5b83\u6bcf\u6b21\u9009\u62e9\u7684\u65b9\u6848\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5b83\u7684\u4ee3\u4ef7\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u7559\u5355\u4e2a\u72b6\u6001\u5c31\u884c\u4e86\u3002\n\n\u7b97\u6cd5\uff1a\u641c\u7d22\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\operatorname{O}(n \\times k^2)$\n\n\u4e0d\u4f1a\u53bb\u91cd\u5bfc\u81f4\u51e0\u4e4e\u5168\u90e8\u8d85\u65f6\uff1a[TLE \u306e \u8bb0\u5f55](https://codeforc.es/contest/999/submission/200972364)\n\n### \u601d\u8def\uff1a\n\u8fd9\u9898\u7684\u72b6\u6001\u56fe\u4e00\u770b\u5c31\u662f\u6709\u62d3\u6251\u5e8f\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u52a8\u6001\u89c4\u5212\u3002\u9996\u5148\u4f18\u5316\u4e00\u4e0b\u72b6\u6001\uff0c\u8003\u8651\u72b6\u6001\u5206\u7ec4\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i,j$\uff0c\u53ea\u8981\u5b83\u7684 $v$ \u6700\u4f18\uff0c\u90a3\u4e48\u5b83\u4f5c\u6700\u4f18\u7684\u8f6c\u79fb\u4e4b\u540e\u5c31\u4e0d\u4f1a\u6bd4\u5176\u4ed6\u72b6\u6001\u4f5c\u6700\u4f18\u7684\u8f6c\u79fb\u540e\u66f4\u52a3\u3002\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 $i,j$ \u5206\u5728\u4e00\u8d77\uff0c$v$ \u4f5c\u4e3a\u9644\u5e26\u5c5e\u6027\u3002\u5bf9\u4e8e\u6bcf\u4e2a $i,j$ \u76f8\u7b49\u7684\u72b6\u6001\uff0c\u53ea\u9700\u8981\u4fdd\u7559 $v$ \u6700\u4f18\u7684\u90a3\u4e2a\u5c31\u884c\u4e86\u3002\n\n\u7531\u4e8e\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u6bcf\u6b21\u8f6c\u79fb\u662f\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u56e0\u6b64\u8f6c\u79fb\u662f\u65e0\u6cd5\u4f18\u5316\u7684\u3002\n\n\u72b6\u6001\u6570\u91cf\u4f9d\u65e7\u662f $n \\times k$\uff0c\u8f6c\u79fb\u4e0d\u53d8\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e0d\u53d8\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a \t\n$$dp_{i,j}=\\max(dp_{i,j},dp_{i-1,j-x}+h_x)$$\n\n#### \u4ee3\u7801\uff1a\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <unordered_map>\nusing namespace std;\nconst int MAXN = 5005;\nint n, k, v[MAXN], ans, dp[MAXN][MAXN];\nunordered_map<int, int> a, b;\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n >> k;\n  for (int i = 1, x; i <= n * k; i++) {\n    cin >> x, a[x]++;  // \u503c\u4e3ax\u7684\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\n  }\n  for (int i = 1, x; i <= n; i++) {\n    cin >> x, b[x]++;  // \u5e78\u8fd0\u6570\u5b57\u4e3ax\u7684\u4eba\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b49\u540c\u4e8e\u5206\u7ec4\n  }\n  for (int i = 1; i <= k; i++) {\n    cin >> v[i];\n  }\n  for (auto i : b) {                            // \u5bf9\u4e8e\u6bcf\u4e2a\u7ec4\n    for (int j = 1; j <= i.second; j++) {       // \u679a\u4e3e\u4eba\n      for (int x = 1; x <= a[i.first]; x++) {   // \u679a\u4e3e\u6570\u5b57\n        for (int y = 1; y <= min(x, k); y++) {  // \u679a\u4e3e\u9009\u4e86\u591a\u5c11\u6570\u5b57\n          dp[j][x] = max(dp[j][x], dp[j - 1][x - y] + v[y]);\n        }\n      }\n    }\n    ans += dp[i.second][a[i.first]];\n    fill(dp[0], dp[n] + k + 1, 0);\n  }\n  cout << ans;\n  return 0;\n}\n```\n\n### \u62d3\u5c55\u5ef6\u4f38\n\u5b9e\u9645\u4e0a\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u7ec4\u90fd\u8fdb\u884c\u8003\u8651\uff0c\u56e0\u4e3a\u771f\u6b63\u5f71\u54cd\u7b54\u6848\u7684\u662f\u6570\u51fa\u73b0\u7684\u6b21\u6570\u800c\u4e0d\u662f\u503c\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u524d $i$ \u4e2a\u4eba\u9009\u4e86 $j$ \u4e2a\u6570\u5b57\u7684\u6700\u5927\u5e78\u798f\u503c\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u7ec4\u90fd\u4f9d\u6b21\u7d2f\u52a0\u7b54\u6848\u5c31\u884c\u4e86\u3002\n\n#### \u4ee3\u7801\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <unordered_map>\nusing namespace std;\nconst int MAXN = 5005;\nint n, k, v[MAXN], ans, dp[MAXN][MAXN];\nunordered_map<int, int> a, b;\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n >> k;\n  for (int i = 1, x; i <= n * k; i++) {\n    cin >> x, a[x]++;\n  }\n  for (int i = 1, x; i <= n; i++) {\n    cin >> x, b[x]++;\n  }\n  for (int i = 1; i <= k; i++) {\n    cin >> v[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n * k; j++) {\n      for (int x = 1; x <= min(j, k); x++) {\n        dp[i][j] = max(dp[i][j], dp[i - 1][j - x] + v[x]);\n      }\n    }\n  }\n  for (auto i : b) {\n    ans += dp[i.second][a[i.first]];\n  }\n  cout << ans;\n  return 0;\n}\n```\n",
        "postTime": 1680773567,
        "uid": 713285,
        "name": "guanyf",
        "ccfLevel": 3,
        "title": "Cards and Joy \u9898\u89e3"
    },
    {
        "content": "\u6ce8\u610f\u5230 $f_i$ \u4e0d\u540c\u7684\u4eba\u4e4b\u95f4\u6ca1\u6709\u5173\u8054\uff0c\u5219\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u5982\u4e0b\u95ee\u9898\uff1a\n\n> \u5c06 $n$ \u5f20\u724c\u5206\u7ed9 $m$ \u4e2a\u4eba\uff0c\u4e00\u4e2a\u4eba\u5982\u679c\u62ff\u5230\u4e86 $i$ \u5f20\u724c\u559c\u60a6\u503c\u5c31\u662f $h_i$\uff0c\u6c42\u6700\u5927\u7684\u559c\u60a6\u503c\u3002\n\n\u4e0d\u96be\u770b\u51fa\u72b6\u6001\u4e3a $f_{i,j}$\uff0c\u5373\u5c06 $i$ \u5f20\u724c\u5206\u7ed9 $j$ \u4e2a\u4eba\u7684\u6700\u5927\u559c\u60a6\u503c\uff0c\u53ef\u4ee5\u63a8\u51fa\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$$ f_{i,j}=\\max_{k=0}^{i} f_{i-k,j-1}+h_k $$\n\n\u7136\u540e\u76f4\u63a5\u66b4\u529b\u7b97\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nconst int kN = 502, kK = 11;\n\nint n, k, c[kN * kK], f[kN], h[kK], dp[kN * kK][kN], ans;\n\nint main() {\n  cin >> n >> k;\n  for (int i = 1; i <= n * k; ++i) {\n    cin >> c[i];\n  }\n  for (int i = 1; i <= n; ++i) {\n    cin >> f[i];\n  }\n  for (int i = 1; i <= k; ++i) {\n    cin >> h[i];\n  }\n  for (int j = 1; j <= n; ++j) {\n    for (int i = 1; i <= n * k; ++i) {\n      for (int u = 0; u <= min(i, k); ++u) {\n        dp[i][j] = max(dp[i][j], dp[i - u][j - 1] + h[u]);\n      }\n    }\n  }\n  sort(f + 1, f + n + 1);\n  for (int i = 1, j = 0; i <= n + 1; ++i, ++j) {\n    if (f[i] != f[i - 1]) {\n      ans += dp[count(c + 1, c + n * k + 1, f[i - 1])][j], j = 0;\n    }\n  }\n  printf(\"%d\", ans);\n  return 0;\n}\n```",
        "postTime": 1639655904,
        "uid": 376161,
        "name": "wsfxk",
        "ccfLevel": 6,
        "title": "CF999F Cards and Joy \u9898\u89e3"
    },
    {
        "content": "\u4f20\u9001\u95e8 [CF999F Cards and Joy](https://www.luogu.com.cn/problem/CF999F)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u53ea\u6709\u62ff\u5230\u81ea\u5df1\u559c\u6b22\u7684\u6570\u5b57\u624d\u6709\u7528\uff0c\u62ff\u5230\u5176\u4ed6\u6570\u5b57\u90fd\u6ca1\u7528\u3002\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u53ea\u6709\u4e00\u4e2a\u559c\u6b22\u7684\u6570\u5b57\uff0c\u5982\u679c\u5f97\u5230\u4e00\u5f20\u6ca1\u6709\u4ed6\u559c\u6b22\u7684\u6570\u5b57\u7684\u5361\u7247\uff0c\u4ed6\u7684\u5feb\u4e50\u503c\u4e0d\u4f1a\u53d8\u5316\u3002\u56e0\u6b64\u53ef\u4ee5\u53ea\u8003\u8651\u6bcf\u4e2a\u4eba\u53ea\u62ff\u5230\u81ea\u5df1\u559c\u6b22\u7684\u6570\u5b57\uff0c\u4f7f\u5feb\u4e50\u503c\u6700\u5927\uff0c\u663e\u7136\u53ef\u4ee5\u7528 dp \u89e3\u51b3\u3002\n\n### \u72b6\u6001\n\n\u8bbe $dp_{i,j}$ \u8868\u793a\u6709 $i$ \u4e2a\u4eba\u559c\u6b22\u540c\u6837\u7684\u6570\u5b57\uff0c\u8fd9\u79cd\u6570\u5b57\u7684\u724c\u6709 $j$ \u4e2a\uff0c\u6700\u591a\u80fd\u83b7\u5f97\u591a\u5c11\u5206\u3002\n\n\u6211\u4eec\u7528\u4e24\u4e2a\u6570\u7ec4 $p$ \u548c $num$ \u5206\u522b\u8868\u793a\u559c\u6b22 $i$ \u8fd9\u4e2a\u6570\u5b57\u6709\u591a\u5c11\u4eba\u548c\u6709\u591a\u5c11\u4e2a\u6570\u5b57 $i$\u3002\n\n### \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n $$dp_{i,j}=max(dp_{i-1,j-x}+h_x)$$\n \n $$ans=\\sum_{i=1}^{10^5}dp_{p_i,num_i}$$\n \n \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2k^2)$\u3002\n \n\n### AC\u4ee3\u7801\n \n ```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define forr(i, a, n) for (int i = a; i <= n; i++)\n#define rep(i, n) forr(i, 0, n - 1)\n#define repp(i, n) forr(i, 1, n)\n#define pb push_back\n#define mp make_pair\n#define init(a, i) memset(a, i, sizeof(a))\n#define fi first\n#define se second\n#define mod 1000000007\n#define MOD 998244353\n#define MAXN 0x3f3f3f3f\nint T, case_;\nint n, k, c, f, h[11], p[100005], num[100005];\nint dp[510][5100], ans = 0;\nvoid solve()\n{\n    cin >> n >> k;\n    rep(i, n * k)\n    {\n        cin >> c;\n        num[c]++;\n    }\n    rep(i, n)\n    {\n        cin >> f;\n        p[f]++;\n    }\n    repp(i, k) cin >> h[i];\n    repp(i, n)\n    {\n        rep(j, n * k + 1)\n        {\n            rep(l, min(k, j) + 1)\n            {\n                dp[i][j] = max(dp[i][j], dp[i - 1][j - l] + h[l]);\n            }\n        }\n    }\n    repp(i, 100000) ans += dp[p[i]][num[i]];\n    cout << ans;\n}\nint main()\n{\n    T = 1;\n    //cin>>T;\n    for (case_ = 1; case_ <= T; case_++)\n        solve();\n    return 0;\n}\n```\n",
        "postTime": 1628388662,
        "uid": 407564,
        "name": "Rushroom",
        "ccfLevel": 7,
        "title": "CF999F Cards and Joy"
    },
    {
        "content": "[CF999F Cards and Joy](https://www.luogu.com.cn/problem/CF999F)\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u9898\u76ee\u7684\u672c\u8d28\uff0c\u5bf9\u4e8e\u7b54\u6848\u4ea7\u751f\u4e86\u8d21\u732e\u7684\u53ea\u6709\u4e00\u4e2a\u4eba\u62ff\u5230\u4e86\u81ea\u5df1\u559c\u6b22\u7684\u724c\u3002\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e00\u79cd\u724c\u5206\u5f00\u8fdb\u884c\u8003\u8651\uff0c\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u724c\uff0c\u5176\u4ea7\u751f\u8d21\u732e\u7684\u65b9\u5f0f\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u724c\u5206\u5f00\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u6211\u4eec\u8003\u8651\u600e\u4e48\u8ba1\u7b97\uff0c\u9996\u5148\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u724c\u559c\u6b22\u7684\u4eba\u6570\uff0c\u7136\u540e\u8981\u5c06\u8fd9\u4e48\u591a\u724c\u5206\u7ed9\u5f88\u591a\u4eba\u3002\u8fd9\u5176\u5b9e\u5c31\u548c\u80cc\u5305\u7c7b\u4f3c\uff0c\u6bcf\u4e00\u5f20\u724c\u7684\u5bb9\u91cf\u4e3a 1\u3002\u6211\u4eec\u8bbe $dp[i][j]$ \u8868\u793a\u6709 i \u4e2a\u4eba\uff0cj \u5f20\u724c\u7684\u6700\u5927\u8d21\u732e\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u6700\u540e\u4e00\u4e2a\u4eba\u62ff\u4e86\u51e0\u5f20\u724c\u8fdb\u884c\u8f6c\u79fb\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//#define Fread\n\n#ifdef Fread\n#define getchar() ((p1 == p2 && p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin)) ? EOF : *p1 ++)\nchar buf[1 << 21], *p1, *p2;\n#endif // Fread\n\ntemplate <typename T>\nvoid r1(T &x) {\n\tx = 0;\n\tchar c(getchar());\n\tint f(1);\n\tfor(; !isdigit(c); c = getchar()) if(c == '-') f = -1;\n\tfor(; isdigit(c);c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\tx *= f;\n}\n#define int long long\nconst int maxn = 5e3 + 100;\nconst int maxm = maxn << 1;\n\ntypedef int room[maxn];\n\nint n, k;\nint ctr[maxn * 2], ctp[maxn * 2];\nint c[maxn * 2], a[maxn * 2], tot(0), h[maxn * 2], f[maxn * 2];\nint dp[505][maxn], vis[maxn * 2];\nsigned main() {\n//    freopen(\".in\", \"r\", stdin);\n//    freopen(\".out\", \"w\", stdout);\n\tint i, j;\n    r1(n), r1(k);\n    for(i = 1; i <= n * k; ++ i) r1(a[i]), c[i] = a[i];\n    tot = n * k;\n    for(i = 1; i <= n; ++ i) r1(f[i]), c[++ tot] = f[i];\n    sort(c + 1, c + tot + 1); int len = unique(c + 1, c + tot + 1) - c - 1;\n    for(i = 1; i <= n * k; ++ i) a[i] = lower_bound(c + 1, c + len + 1, a[i]) - c, ctp[a[i]] ++;\n    for(i = 1; i <= n; ++ i) f[i] = lower_bound(c + 1, c + len + 1, f[i]) - c, ctr[f[i]] ++;\n    for(i = 1; i <= k; ++ i) r1(h[i]);\n    for(i = 1; i <= n; ++ i) {\n        for(j = 1; j <= n * k; ++ j) {\n            for(int z = 1; z <= min(k, j); ++ z) {\n                dp[i][j] = max(dp[i][j], dp[i - 1][j - z] + h[z]);\n            }\n        }\n    }\n    int ans(0);\n    for(i = 1; i <= n; ++ i) if(!vis[f[i]]) ans += dp[ctr[f[i]]][ctp[f[i]]], vis[f[i]] = 1;\n    printf(\"%lld\\n\", ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1618190369,
        "uid": 151723,
        "name": "legendgod",
        "ccfLevel": 7,
        "title": "CF999F Cards and Joy \u9898\u89e3"
    },
    {
        "content": "**\u9898\u76ee\u5927\u610f\uff1a\u6709$n$\u4e2a\u73a9\u5bb6\u5750\u5728\u4e00\u5f20\u684c\u5b50\u524d\u9762\uff0c\u6bcf\u4e00\u4e2a\u73a9\u5bb6\u90fd\u6709\u81ea\u5df1\u559c\u6b22\u7684\u6570\u5b57\uff0c\u7b2c$j$\u4e2a\u4eba\u7684\u559c\u6b22\u6570\u5b57\u4e3a$f_j$\n\u4e00\u5171\u6709$k\\times n$\u5f20\u5361\u724c\u5728\u684c\u5b50\u4e0a\uff0c\u6bcf\u4e00\u5f20\u724c\u90fd\u6709\u4e00\u4e2a\u6570\u5b57$c_i$\uff0c\u7136\u540e\u628a\u5361\u724c\u5206\u53d1\u7ed9\u6240\u6709\u4eba\uff0c\u6bcf\u4eba\u90fd\u8981\u83b7\u5f97$k$\u5f20\u5361\u724c\u3002**\n\n**\u73b0\u5728\u7ed9\u4f60\u4e00\u4e2a\u6570\u5217$h_1,h_2...h_k$\uff0c\u8868\u793a\u6bcf\u4e2a\u4eba\u62ff\u5230$i$\u5f20\u5370\u7740\u81ea\u5df1\u559c\u6b22\u6570\u5b57\u7684\u5361\u724c\u65f6\u80fd\u83b7\u5f97\u7684\u5feb\u4e50\u503c\uff0c\u73b0\u5728\u95ee\u6700\u5927\u5feb\u4e50\u503c\u4e4b\u548c\u662f\u591a\u5c11**\n\n------------\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u9898\u4e2d\u53ea\u6709\u73a9\u5bb6\u559c\u6b22\u7684\u724c\u662f\u6709\u610f\u4e49\u7684\n\n\u56e0\u6b64\u50a8\u5b58\u7684\u65f6\u5019\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e00\u79cd\u724c\u559c\u6b22\u7684\u4eba\u6570\u5c31\u884c\u4e86\n\n\u8fd9\u91cc\u4ee5\u9632\u4e07\u4e00\u7528\u4e86\u79bb\u6563\u5316\uff0c\u4f46\u597d\u50cf\u4e0d\u7528\u79bb\u6563\u5316\u4e5f\u884c\n\n------------\n\u7136\u540e\u5c31\u662f\u7b54\u6848\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u770b\u51fa\u6765\u662f\u80cc\u5305\n\n\u6211\u4eec\u8bbe$do[i][j]$\u4e3a\u6709$i$\u4e2a\u4eba\uff0c$j$\u5f20\u724c\u7684\u60c5\u51b5\u4e0b\u6700\u5927\u7684\u5feb\u4e50\u503c\u4e4b\u548c\n\n$dp$\u65b9\u7a0b\u5c31\u662f$dp[i][j]=max(dp[i-1][j-l]+h[l])$\n\n\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u724c(\u6709$a$\u4e2a\u4eba\u559c\u6b22\uff0c\u5171\u6709$b$\u5f20\uff0c\u53ef\u4ee5\u5206\u5f97\u7684\u6700\u5927\u5feb\u4e50\u4e4b\u548c\u5c31\u662f$dp[a][b]$\n\n\n\u4ee3\u7801\n```ccp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 510\n#define MAXM 20\nvector<int>vc;\nvector<int>cnt;\nint val[MAXN];\nint ha[MAXN];\nint cnt1[MAXN*MAXM];\nint dp[MAXN][MAXM*MAXN];\nint main()\n{\n\tint n,k;\n\tcin>>n>>k;\n\tfor(int i=1;i<=n*k;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(vc.empty())\n\t\t{\n\t\t\tvc.push_back(x);\n\t\t\tcnt.push_back(1);\n\t\t\tcontinue;\n\t\t}\n\t\tint pl=lower_bound(vc.begin(),vc.end(),x)-vc.begin();\n\t\tif(vc[pl]==x)\n\t\t{\n\t\t\tcnt[pl]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvc.insert(vc.begin()+pl,x);\n\t\t\tcnt.insert(cnt.begin()+pl,1);\n\t\t}\n\t}//\u79bb\u6563\u5316\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&val[i]);\n\t\tint pl=lower_bound(vc.begin(),vc.end(),val[i])-vc.begin();\n\t\tif(vc[pl]==val[i])\n\t\t{\n\t\t\tcnt1[pl]++;\n\t\t}\n\t}//\u7edf\u8ba1\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d\",&ha[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n*k;j++)\n\t\t{\n\t\t\tfor(int l=1;l<=j&&l<=k;l++)\n\t\t\t{\n\t\t\t\tdp[i][j]=max(dp[i-1][j-l]+ha[l],dp[i][j]);\n\t\t\t}\n\t\t}\n\t}//dp\n\tint ans=0;\n\tfor(int i=0;i<vc.size();i++)\n\t{\n\t\tint p=cnt[i];\n\t\tans+=dp[cnt1[i]][cnt[i]];\n\t}\n\tcout<<ans;\n}\n```\n\t2.33s /  23.74MB /  1.03KB C++",
        "postTime": 1595315564,
        "uid": 53854,
        "name": "Outlow\u2122",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF999F \u3010Cards and Joy\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5230\u6bcf\u4e2a\u4eba\u662f\u540c\u8d28\u7684\u3002\n\ndp[i][j]\u8868\u793a\u9009j\u4e2a\u4eba\u7528i\u5f20\u724c\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u3002\u968f\u4fbf\u8f6c\u79fb\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=100005;\ntypedef long long ll;\nint n,K,w[11],cnt[N],ton[N];\ninline void init(){\n\tscanf(\"%d%d\",&n,&K);\n\tfor (int i=1;i<=n*K;i++){\n\t\tint x; scanf(\"%d\",&x);\n\t\tcnt[x]++;\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tint x; scanf(\"%d\",&x);\n\t\tton[x]++;\n\t}\n\tfor (int i=1;i<=K;i++){\n\t\tscanf(\"%d\",&w[i]);\n\t}\n} \nint dp[5005][505];\nll ans;\ninline void solve(){\n\tfor (int i=1;i<=n*K;i++){\n\t\tdp[i][1]=w[min(i,K)];\n\t\tfor (int j=2;j<=n;j++){\n\t\t\tfor (int k=1;k<=min(i,K);k++){\n\t\t\t\tdp[i][j]=max(dp[i][j],dp[i-k][j-1]+w[k]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=0;i<=1e5;i++){\n\t\tans+=dp[cnt[i]][ton[i]];\n\t}\n\tprintf(\"%I64d\\n\",ans); \n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n} \n```",
        "postTime": 1532910119,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF999F \u3010Cards and Joy\u3011"
    },
    {
        "content": "   \u9898\u610f\uff1a\n   \n   \u6709n\u4e2a\u73a9\u5bb6\u5750\u5728\u4e00\u5f20\u684c\u5b50\u524d\u9762\uff0c\u6bcf\u4e00\u4e2a\u73a9\u5bb6\u90fd\u6709\u81ea\u5df1\u559c\u6b22\u7684\u6570\u5b57\uff0c\u7b2cj\u4e2a\u4eba\u7684\u559c\u6b22\u6570\u5b57\u4e3afj\u4e00\u5171\u6709k*n\u5f20\u5361\u724c\u5728\u684c\u5b50\u4e0a\uff0c\u6bcf\u4e00\u5f20\u724c\u90fd\u6709\u4e00\u4e2a\u6570\u5b57ci\uff0c\u7136\u540e\u628a\u5361\u724c\u5206\u53d1\u7ed9\u6240\u6709\u4eba\uff0c\u6bcf\u4eba\u90fd\u8981\u83b7\u5f97k\u5f20\u5361\u724c\u3002\u73b0\u5728\u7ed9\u4f60\u4e00\u4e2a\u6570\u5217h1,h2...hk\uff0c\u8868\u793a\u6bcf\u4e2a\u4eba\u62ff\u5230i\u5f20\u5370\u7740\u81ea\u5df1\u559c\u6b22\u6570\u5b57\u7684\u5361\u724c\u65f6\u80fd\u83b7\u5f97\u7684\u5feb\u4e50\u503c\uff0c\u73b0\u5728\u95ee\u6700\u5927\u5feb\u4e50\u503c\u4e4b\u548c\u662f\u591a\u5c11\n    \n\u6240\u4ee5\u4e0d\u5728h\u6570\u7ec4\u91cc\u7684ci\u65e0\u7528 \n\n\u5148\u7528o\uff08n\uff09\u6392\u6389\u65e0\u7528\u5361\n\n\u6ce8\u610f\uff0cdp\u7684\u662f\u7b2cj\u4eba\u6301t\u5f20\u5361\uff08\u585e\u4eba\u8fdb\u53bb\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\tlong long n,k,c[5100],f[510],h[11],dp[5100][510],hash1[300001],hash2[300001];\n\tlong long ans;\nint main(){\n\tscanf(\"%lld%lld\",&n,&k);\n\tfor(long long i=1;i<=n*k;i++)scanf(\"%lld\",&c[i]),hash1[c[i]]++;\n\tfor(long long i=1;i<=n;i++)scanf(\"%lld\",&f[i]),hash2[f[i]]++;\n\tfor(long long i=1;i<=k;i++)scanf(\"%lld\",&h[i]);\n\tsort(f+1,f+n+1); long long tmp=f[1]-1;\n\tfor(long long i=1;i<=n*k;i++){\n\t\tlong long mn=min(i,k);\n\t\tdp[i][1]=h[mn]; \n\t\tfor(long long j=2;j<=n;j++)for(long long t=1;t<=mn;t++)dp[i][j]=max(dp[i][j],dp[i-t][j-1]+h[t]);\n\t}\n\tfor(long long i=1;i<=n;){\n\t\ttmp=f[i];\n\t\ti+=hash2[tmp];\n\t\tans+=dp[hash1[tmp]][hash2[tmp]];\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n    \n```\n    \n\n",
        "postTime": 1532078404,
        "uid": 49447,
        "name": "\u6c38\u4e0d\u590d\u884c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF999F \u3010Cards and Joy\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u6709 $n$ \u4e2a\u4eba\u5747\u5206 $k\\times n$ \u4e2a\u6570\u5b57\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u559c\u6b22\u7684\u6570\u5b57\uff0c\u5f53\u5206\u5230 $i$ \u4e2a\u81ea\u5df1\u559c\u6b22\u7684\u6570\u5b57\u65f6\u5c31\u4f1a\u83b7\u5f97 $h_i$ \u7684\u5f97\u5206\uff0c\u6c42\u6700\u5927\u5f97\u5206\u3002\n\n\u56e0\u4e3a\u6700\u540e\u7684\u5f97\u5206\u53d6\u51b3\u4e8e\u6bcf\u4e2a\u4eba\u83b7\u5f97\u559c\u6b22\u6570\u5b57\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u724c\u7684\u5206\u914d\uff0c\u90fd\u62bd\u8c61\u4e3a $i$ \u4e2a\u4eba\u5206 $j$ \u5f20\u7eb8\u724c\u65f6\u7684\u6700\u5927\u5f00\u5fc3\u503c\uff0c\u7528 $dp_{i,j}$ \u8868\u793a\u3002\u4e0d\u59a8\u5047\u8bbe\u8fd9 $i$ \u4e2a\u4eba\u559c\u6b22\u540c\u4e00\u79cd\u6570\u5b57\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u65b9\u7a0b\uff1a\n\n$$dp_{i,j}=\\max\\limits_{k=0}^j (dp_{i-1,k}+h_{j-k})$$ \n\n\u8fd9\u6837\uff0c\u6211\u4eec\u7edf\u8ba1\u7b54\u6848\u65f6\u5c31\u53ea\u5173\u5fc3\u6bcf\u79cd\u724c\u6709\u591a\u5c11\u5f20\uff0c\u6709\u591a\u5c11\u4eba\u559c\u6b22\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe\u7b2c $i$ \u79cd\u724c\u559c\u6b22\u7684\u4eba\u6709 $num_i$\uff0c\u8fd9\u79cd\u724c\u6709 $cnt_i$ \u5f20\u3002\u6700\u540e\u7b54\u6848\u5c31\u662f\uff1a\n\n$$\\sum\\limits_{i}dp_{num_i,cnt_i}$$\n\n\u63d0\u524d\u9884\u5904\u7406\u51fa $dp$ \u6570\u7ec4\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u6876\u6765\u8f85\u52a9\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002",
        "postTime": 1659535404,
        "uid": 347839,
        "name": "Daniel_001",
        "ccfLevel": 0,
        "title": "CF999F"
    }
]