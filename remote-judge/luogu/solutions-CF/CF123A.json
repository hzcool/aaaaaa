[
    {
        "content": "\u9700\u8981\u70b9\u601d\u8def\uff0c\u4f46\u5e76\u4e0d\u7b97\u96be\u7684\u9898\u76ee\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5982\u679c\u6211\u4eec\u5728$2$\u53f7\u4f4d\u7f6e\u586b\u5165\u5b57\u7b26$c$\uff0c\u90a3\u4e48$4,6,8,\\dots,2n$\u53f7\u4f4d\u7f6e\u4e5f\u5fc5\u987b\u586b\u5165\u5b57\u7b26$c$\u3002\u5982\u679c\u5728$6$\u53f7\u4f4d\u7f6e\u586b\u5165$c$\uff0c\u90a3\u4e48$3$\u53f7\u4f4d\u7f6e\u4e5f\u8981\u586b\u5165$c$\uff0c\u8fdb\u800c$6,9,12,15,\\dots, 3n$\u4e5f\u8981\u586b\u5165$c$\uff0c\u8fdb\u800c\u5728$5,10,15,\\dots, 5n$\u4e5f\u8981\u586b\u5165$c$\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u4efb\u610f$1\\le i \\le |S|$\uff0c\u5982\u679c\u5b58\u5728\u8d28\u6570$p$\u548c$k \\ge 2$\u4f7f\u5f97$kp=i$\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u5fc5\u987b\u586b\u5165\u76f8\u540c\u7684\u5b57\u7b26\u3002\u8fd9\u6837\u6574\u4e2a\u5b57\u7b26\u4e32\u5c31\u88ab\u5206\u6210\u4e86\u4e00\u4e2a\u5927\u96c6\u5408\u548c\u82e5\u5e72\u5c0f\u96c6\u5408\uff0c\u5927\u96c6\u5408\u4e2d\u5fc5\u987b\u586b\u5165\u76f8\u540c\u5b57\u7b26\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u672c\u9898\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n#define pb push_back\n#define mp make_pair\n#define lsh(i) (1 << (i))\n#define lshll(i) (1LL << (i))\n#define repn(i, n) for (int (i) = 1; (i) <= n; (i)++)\n#define rep(i, n) for (int (i) = 0; (i) < n; (i)++)\nconst int INF = 0x3f3f3f3f;\nconst long double EPS = 1e-6;\nlong long qread() {\n\tchar c;\n\tint neg = 1;\n\tlong long val = 0;\n\twhile (c != '-' && !isdigit(c)) c = getchar();\n\tif (c == '-') c = getchar(), neg = -1;\n\twhile (isdigit(c)) val = (val << 3) + (val << 1) + c - '0', c = getchar();\n\treturn neg * val;\n}\nchar s[1200], ans[1200];\nint mark[1200];\nint cnt, sz[1200], chr[1200];\nvector <int> pos;\nint main() {\n\tscanf(\"%s\", s + 1); int n = strlen(s + 1);\n\tfor (int i = 2; i <= n; i++){\n\t\tif (i == 1) continue;\n\t\tif (!mark[i]) {\n\t\t\tmark[i] = true;\n\t\t\tif (n / i <= 1) continue;\t\t\t\n \t\t\tpos.pb(i);\n\t\t\tfor (int j = i; j <= n; j += i) {\n\t\t\t\tif (!mark[j]) {\n\t\t\t\t\tmark[j] = true;\n\t\t\t\t\tpos.pb(j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tsort(s + 1, s + n + 1);\n\trepn(i, n) {\n\t\tif (s[i] != s[i - 1]) cnt++;\n\t\tchr[cnt] = s[i];\n\t\tsz[cnt]++;\n\t}\n\tint maxv, maxi = 0;\n\tmaxv = -INF;\n\trepn(i, cnt) {\n\t\tif (sz[i] > maxv) {\n\t\t\tmaxv = sz[i];\n\t\t\tmaxi = i;\n\t\t}\n\t}\n\tif (maxv < (int)pos.size()) {\n\t\tcout << \"NO\" << endl;\n\t\treturn 0;\n\t}\n\telse {\n\t\tputs(\"YES\");\n\t\tfor (auto i:pos) ans[i] = chr[maxi], sz[maxi]--;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (ans[i]) continue;\n\t\t\tfor (int j = 1; j <= cnt; j++) {\n\t\t\t\tif (sz[j]) {\n\t\t\t\t\tans[i] = chr[j];\n\t\t\t\t\tsz[j]--;\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\\n\", ans + 1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1572515071,
        "uid": 87696,
        "name": "Lily_White",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF123A \u3010Prime Permutation\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f:\n\n\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u95ee\u80fd\u5426\u901a\u8fc7\u6253\u4e71\u5b83\u7684\u987a\u5e8f\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6ee1\u8db3\u6240\u6709\u7684\u8d28\u6570\u4f4d\u548c\u4f4d\u6570\u662f\u8fd9\u4e2a\u8d28\u6570\u7684\u500d\u6570\u7684\u4f4d\u6570\u4e0a\u7684\u5b57\u6bcd\u76f8\u540c\uff0c\u8f93\u51fa\u80fd\u5426\uff0c\u5982\u679c\u80fd\uff0c\u6784\u9020\u4e00\u7ec4\u89e3.\n\n\u9898\u76ee\u5206\u6790\uff1a\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u6bcd\u7684\u987a\u5e8f\u65e0\u6240\u8c13\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e0d\u7ba1n\u662f\u591a\u5c11\uff0c\u96c6\u5408\u7684\u5f62\u5f0f\u4e00\u5b9a\u662f\u4e00\u4e2a\u5927\u96c6\u5408\uff0c\u548c\u4e00\u4e9b\u89c4\u6a21\u4e3a1\u7684\u5c0f\u96c6\u5408\uff0c\u4e14\u8fd9\u4e9b\u96c6\u5408\u7684\u5143\u7d20\u662f\u8d28\u6570\uff0c\u4e14\u5927\u96c6\u5408\u4e0d\u5b58\u5728\u8fd9\u4e2a\u8d28\u6570\u7684\u500d\u6570\u3002\u8fd9\u4e2a\u5f88\u663e\u7136\u3002\n\u5229\u7528\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u5927\u96c6\u5408\u7684\u89c4\u6a21\uff0c\u7136\u540e\u770b\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5b57\u6bcd\u7684\u6570\u91cf\u4e0d\u5c0f\u4e8e\u8fd9\u4e2a\u5927\u96c6\u5408\u7684\u89c4\u6a21\uff0c\u5982\u679c\u5b58\u5728\uff0c\u90a3\u4e48\u663e\u7136\u6709\u89e3\u3002\u5426\u5219\u65e0\u89e3\u3002\n\u6784\u9020\u6700\u7ec8\u7684\u89e3\uff0c\u53ea\u9700\u8981\u7528\u627e\u51fa\u7684\u5b57\u6bcd\u6784\u9020\u5927\u96c6\u5408\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5b57\u6bcd\uff0c\u5176\u4ed6\u7684\u968f\u610f\u5373\u53ef\u3002 \n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#define MAX 1007\n\nusing namespace std;\nchar s[MAX];\nint maxPrime[MAX];\nint mark[MAX];\nint num[30];\n\nvoid init ()\n{\n    memset ( maxPrime , -1 , sizeof ( maxPrime ) );\n    for ( int i = 2 ; i < MAX ; i++ )\n    {\n        if (~maxPrime[i]) continue;\n        for ( int j = i*2 ; j < MAX ; j += i )\n            maxPrime[j] = i;\n    }\n}\n\nint main ( )\n{\n    init ();\n    while (~scanf ( \"%s\" , s ) )\n    {\n        int n = strlen ( s );\n        memset ( mark , 0 , sizeof ( mark ) );\n        if ( n < 4 )\n        {\n            puts ( \"YES\" );\n            puts ( s );\n            continue;\n        }\n        int cnt = 2;\n        for ( int i = n ; i >= 2; i-- )\n        {\n            if ( mark[i] && maxPrime[i] == -1 ) continue;\n            if ( ~maxPrime[i] )\n            {\n                mark[i] = true;\n                for ( int j = 2 ; j*j <= i ; j++ )\n                {\n                    if ( i%j ) continue;\n                    mark[j] = mark[i/j] = true;\n                }\n            }\n            else cnt++;\n        }\n        memset ( num , 0 , sizeof ( num ));\n        for ( int i = 0 ; i < n ; i++ )\n            num[s[i]-97]++;\n        int id = -1;\n        for ( int i = 0 ; i < 26 ; i++ )\n            if ( n-cnt+1 <= num[i] )\n            {\n                id = i;\n                num[i] -= (n-cnt+1);\n                break;\n            }\n        if ( id == -1 )\n        {\n            puts ( \"NO\" );\n            continue;\n        }\n        for ( int i = 0 ; i < n ; i++ )\n        {\n            if ( mark[i+1] ) s[i] =(char)(id+97);\n            else\n            for ( int j = 0 ; j < 26 ; j++ )\n                if ( num[j] )\n                {\n                    num[j]--;\n                    s[i] = (char)(j+97);\n                    break;\n                }\n        }\n        puts ( \"YES\");\n        puts ( s );\n    }\n}\n```\n\n\u5750\u7b49\u62cd\u7816...",
        "postTime": 1524992884,
        "uid": 43664,
        "name": "Oscar12345",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF123A \u3010Prime Permutation\u3011"
    }
]