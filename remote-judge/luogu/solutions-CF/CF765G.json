[
    {
        "content": "\u8bf7\u5728\u535a\u5ba2\u91cc\u67e5\u770b\u3002\n\n\u9996\u5148\uff0c\u4e0d\u8981\u770b\u5230\u6807\u7b7e\u91cc\u7684 `*3200` \u5c31\u4ee5\u4e3a\u8fd9\u662f\u4e00\u9053\u6c34\u9898\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u9053\u9898\u7684\u6545\u4e8b\u662f\u8fd9\u6837\u7684\uff1a\u8d5b\u65f6 $3$ \u4eba\u901a\u8fc7\u3002\u5c18\u57c3\u843d\u5b9a\u4e4b\u540e\uff0cKAN \u53c9\u6389\u4e86 std \u4e0e\u4e09\u4eba\uff08\u5b9e\u9645\u4e0a\uff0c\u6709\u4e00\u4e2a\u4eba\u662f\u6b63\u786e\u7684\u505a\u6cd5\u88ab\u5361\u5e38\uff09\u3002\u4e4b\u540e KAN \u548c\u51fa\u9898\u4eba\u5728\u9898\u89e3\u4e2d\u7ed9\u51fa\u4e86\u6b63\u786e\u89e3\u6cd5\uff0c\u4f46\u662f\u8d5b\u65f6\u7684\u7ed3\u679c\u548c\u9898\u76ee\u8bc4\u5206\u5df2\u7ecf\u65e0\u6cd5\u6539\u53d8\u4e86\u3002\n\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a $p_i$\uff0c\u786e\u5b9a\u4e86 $k \\bmod p_i$ \u7684\u503c\uff0c\u90a3\u4e48 $s$ \u7684\u503c\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\uff0c\u4e3a\n\n$$\\begin{cases}1 & \\exists i,s.t. p_i|(k+i) \\\\ 0 & \\textrm{otherwise} \\end{cases}$$\n\n\u7531\u6b64\u53ef\u4ee5\u5f97\u51fa\uff0c$\\alpha$ \u662f\u6ca1\u7528\u5b9e\u9645\u4f5c\u7528\u7684\uff0c\u6211\u4eec\u6700\u540e\u5c06\u7b54\u6848\u4e58 $\\prod p_i^{\\alpha_i-1}$ \u5373\u53ef\u3002\n\n\u6211\u4eec\u6b64\u65f6\u4ea7\u751f\u4e86\u4e00\u4e2a\u5e7c\u7a1a\u7684\u60f3\u6cd5\uff1a\u8bbe $f_{i, t}$ \u8868\u793a\u524d $i$ \u4e2a\u8d28\u6570\uff0c\u5b57\u7b26\u4e32\u72b6\u6001\u4e3a $t$ \u7684\u65b9\u6848\u6570\u3002\u6bcf\u6b21\u679a\u4e3e $k\\bmod p_i$ \u7684\u503c\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u90a3\u4e9b $p_i \\geq m$ \u7684\u6570\uff0c\u6700\u591a\u4f1a\u5728\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u4e00\u6b21\u3002\u5982\u679c\u6211\u4eec\u5148\u7b97\u597d\u4e86 $p_i < m$\uff0c\u5f97\u5230\u4e86\u4e00\u4e9b\u72b6\u6001\u3002\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001\u6211\u4eec\u53ea\u7528\u8003\u8651\u6bcf\u4e2a\u8d28\u6570\u5728\u54ea\u4e2a\u4f4d\u7f6e\u4e0a\u51fa\u73b0\u5373\u53ef\uff0c\u4e0d\u7528\u8003\u8651\u5177\u4f53\u653e\u7f6e\u7684\u4f4d\u7f6e\u3002\n\n\u6bd4\u5982\u5f53\u524d\u7684\u72b6\u6001\u4e3a `111111111`\uff0c\u76ee\u6807\u72b6\u6001\u4e3a `100101100`\u3002\u6211\u4eec\u53ea\u7528\u8003\u8651\u6709 $5$ \u4e2a `1` \u53d8\u6210\u4e86 `0`\uff0c\u4e0d\u7528\u8003\u8651\u5b83\u4eec\u7684\u4f4d\u7f6e\u548c\u987a\u5e8f\u5173\u7cfb\u3002\n\n\u6211\u4eec\u8bbe $f_{i, j}$ \u8868\u793a\u76ee\u524d\u8fd8\u6709 $i$ \u4e2a `0` \u9700\u8981\u88ab\u586b\uff0c$j$ \u4e2a `0` \u5df2\u7ecf\u88ab\u586b\uff0c\u73b0\u5728\u53ef\u4ee5\u518d\u586b\u3002\u5219\u6709\u8f6c\u79fb\uff1a\n\n$f'_{i, j}=\\begin{cases}j\\times f_{i, j} \\\\ i\\times f_{i+1, j-1} & j\\neq 0\\end{cases}$\n\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u53ef\u4ee5\u8f7b\u677e\u5730\u4f18\u5316\u5230\u7ebf\u6027\u3002\n\n\u90a3\u5bf9\u4e8e $p_i < m$ \u7684\u90e8\u5206\uff0c\u6700\u591a\u53ea\u6709 $2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37$ \u8fd9 $12$ \u4e2a\u8d28\u6570\u3002\u6211\u4eec\u731c\u6d4b\u72b6\u6001\u6570\u4e0d\u4f1a\u592a\u591a\u3002\u7b80\u5355\u6253\u8868\u53ef\u4ee5\u53d1\u73b0\uff0c$2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37$ \u5168\u90e8\u5305\u542b\uff0c\u72b6\u6001\u6570\u662f\u5f88\u5c11\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u4f3c\u4e4e\u5f88\u4f18\u79c0\u7684\u505a\u6cd5\u3002\u8fd9\u4e5f\u662f\u6700\u521d\u7684 std \u6240\u505a\u7684\u5168\u90e8\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u8003\u8651\u771f\u7684\u6b63\u786e\u5417\uff1f\n\n\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u6211\u4eec\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u628a\u6240\u6709\u72b6\u6001\u76f8\u540c\u5b58\u50a8\u5728\u4e00\u8d77\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u72b6\u6001\u8fc7\u4e8e\u7a20\u5bc6\uff0c\u96c6\u4e2d\u5728\u5168 $1$ \u6216\u8005\u51e0\u4e4e\u5168 $1$ \u5468\u56f4\uff0c\u90a3\u4e48\u8fd9\u5e76\u4e0d\u662f\u6700\u6781\u7aef\u7684\u60c5\u51b5\u3002\u6211\u4eec\u628a $2, 3$ \u4e24\u4e2a\u8d21\u732e\u6b21\u6570\u8fc7\u591a\u7684\u6570\u5b57\u53bb\u6389\uff0c\u53d1\u73b0\u72b6\u6001\u7206\u70b8\u6027\u5730\u589e\u957f\uff0c\u5b8c\u5168\u4e0d\u80fd\u63a5\u53d7\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8003\u8651\u7ee7\u7eed\u5206\u79bb $p_i < m$ \u7684\u8d28\u6570\u3002\n\n\u6211\u4eec\u4ece\u5c0f\u5f80\u5927\u4e0d\u65ad\u52a0\u6570\uff08\u9664\u53bb $2, 3$\uff09\uff0c\u5230 $23$\uff0c\u72b6\u6001\u6570\u8fbe\u5230 $10^7$ \u7ea7\u522b\u3002\u4e8e\u662f\u6211\u4eec\u628a $\\leq 23$ \u7684\u8d28\u6570\u5206\u4e3a\u4e00\u5806\uff0c\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f\u5904\u7406\uff0c$29, 31, 37$ \u91cd\u65b0\u8003\u8651\u4e00\u79cd\u65b9\u5f0f\u3002\n\n\u9996\u5148\u6211\u4eec\u80fd\u8003\u8651\u5230\uff0c$29 \\geq \\frac m2$\u3002\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e09\u4e2a\u8d28\u6570\u53ea\u4f1a\u5728\u5b57\u7b26\u4e32\u91cc\u51fa\u73b0\u81f3\u591a\u4e24\u6b21\u3002\u6211\u4eec\u8003\u8651\u80fd\u4e0d\u80fd\u628a\u4e24\u6b21\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u5904\u7406\u5462\uff1f\n\n\u5176\u5b9e\u8fd9\u4e00\u6b65\u662f\u5f88\u81ea\u7136\u7684\uff0c\u6211\u4eec\u5c06\u524d\u4e24\u79cd\u65b9\u5f0f\u878d\u5408\u8d77\u6765\uff08\u5b98\u65b9\u9898\u89e3\uff1a\u201c\u6742\u79cd dp\u201d\uff09\u3002\u56e0\u4e3a $29$ \u5df2\u7ecf\u79bb $40$ \u4e0d\u8fdc\u4e86\u3002\u6211\u4eec\u76f4\u63a5\u5b58\u4e0b\u5b57\u7b26\u4e32\u524d $11$ \u4f4d\uff0c\u540e $11$ \u4f4d\u7684\u72b6\u6001\uff0c\u800c\u4e2d\u95f4\u7684 $18$ \u4f4d\uff0c\u7531\u4e8e\u6700\u591a\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u6211\u4eec\u518d\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u5904\u7406\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u628a\u5f88\u591a\u4e0d\u540c\u7684\u72b6\u6001\u5316\u89e3\u6210\u76f8\u540c\u7684\u72b6\u6001\uff0c\u7ecf\u8fc7\u5b9e\u9a8c\uff0c\u7ee7\u627f\u6765\u81ea $\\leq 23$ \u7684\u72b6\u6001\uff0c\u8f6c\u79fb\u4e09\u4e2a\u6570\uff0c\u6700\u7ec8\u7684\u72b6\u6001\u6570\u6ca1\u6709\u8d85\u8fc7 $10^7$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5927\u81f4\u770b\u6e05\u4e86\u8fd9\u9053\u9898\u7684\u8f6e\u5ed3\u3002\u63a5\u4e0b\u6765\u662f\u5f88\u591a\u7684\u7ec6\u8282\u3002\n\n\u9996\u5148\uff0c`std::map` \u663e\u7136\u4e0d\u80fd\u8fdb\u884c $10^7$ \u91cf\u7ea7\u7684\u8fd0\u7b97\uff0c`unordered_map` \u7684\u7a7a\u95f4\u5e38\u6570\u4e5f\u5341\u5206\u5de8\u5927\uff08\u5927\u6982\u6570\u5341\u500d\uff09\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u5b9e\u73b0 $\\textrm{hashtable}$\u3002\n\n\u5f53\u7136\u4e86\uff0c\u7b2c\u4e00\u90e8\u5206\u53ef\u4ee5\u7528 `map`\uff0c\u53ea\u8981\u5728\u505a $23$ \u7684\u65f6\u5019\uff0c\u4e0d\u8981\u53bb\u91cd\uff0c\u76f4\u63a5\u63d2\u5230 $\\textrm{hashtable}$ \u5c31\u597d\u3002\u6211\u5b9e\u73b0\u7684\u65f6\u5019\u628a $19$ \u4e5f\u8df3\u4e86\uff0c\u4f3c\u4e4e\u5feb\u4e86\u5fae\u4e0d\u8db3\u9053\u4e00\u70b9\u70b9\u3002\n\n\u5176\u6b21\uff0c\u4ec5\u4ec5\u6309\u7167\u4e0a\u9762\u7684\u5199\u6cd5\u6bd4\u8f83\u96be\u901a\u8fc7\uff08\u6211\u6700\u540e\u5230\u4e86 $9$ \u79d2\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u7b97\u5b8c $29$ \u7b97 $31$ \u7684\u65f6\u5019\u628a\u4e24\u8fb9\u8fb9\u7f18\u5404\u4e24\u4f4d\u653e\u5230\u81ea\u7531\u7684\u90e8\u5206\u91cc\uff0c$37$ \u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u8fc7\u6211\u7684 $\\textrm{hash}$ \u7528\u7684\u662f `unsigned int` \u6240\u4ee5\u5b58 $37$ \u7684\u65f6\u5019\u4f1a\u51fa\u95ee\u9898\uff0c\u5c31\u6ca1\u6709\u518d\u6539 $37$ \u4e86\uff08\u56e0\u4e3a\u968f\u4fbf\u6539\u6539\u5c31\u5f88\u5feb\u4e86\uff09\u3002\n\n\u4ee3\u7801\u5199\u5f97\u5f88\u9ebb\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u7ec6\u8282\u90fd\u662f\u5199\u5b8c\u4e86\u53c8\u91cd\u6784\u5199\u5b8c\u4e86\u53c8\u91cd\u6784\u603b\u7ed3\u51fa\u6765\u7684...\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n \nconst int Maxn = 500005, p = 1e9 + 7;\nint n, m, ct, cntS, mini, maxi, maxi23, tmp_d[Maxn], d[Maxn], Popcnt[1 << 21 | 5];\nlong long s, ans = 1, f2[45], g2[45];\nstring str;\nstruct quad\n{\n\tunsigned s1, s2, c1, c2;\n\tquad (int _s1, int _s2, int _c1, int _c2)\n\t{\n\t\ts1 = _s1, s2 = _s2, c1 = _c1, c2 = _c2;\n\t}\n};\nunsigned get_hash(unsigned _s1, unsigned _s2, unsigned _c1, unsigned _c2)\n{\n\treturn (_s1 << 21) | (_s2 << 10) | (_c1 << 5) | _c2;\n}\nquad trans(unsigned x)\n{\n\treturn quad(x >> 21, (x & ((1 << 21) - 1)) >> 10, (x & ((1 << 10) - 1)) >> 5, x & ((1 << 5) - 1));\n}\nconst int Maxh = 30000005;\nstruct Hashtable\n{\n\tint cnt, head[Maxh], value[7000005], pre[7000005];\n\tunsigned key[7000005];\n\tHashtable()\n\t{\n\t\tcnt = 0;\n\t\tmemset(pre, -1, sizeof(pre));\n\t\tmemset(head, -1, sizeof(head));\n\t}\n\tvoid add(unsigned now, int y)\n\t{\n\t\tint pos = now % 30000001;\n\t\tfor (int i = head[pos]; ~i; i = pre[i])\n\t\t\tif (key[i] == now)\n\t\t\t{\n\t\t\t\t(value[i] += y) %= p;\n\t\t\t\treturn ;\n\t\t\t}\n\t\tpre[++cnt] = head[pos];\n\t\tvalue[cnt] = y;\n\t\tkey[cnt] = now;\n\t\thead[pos] = cnt;\n\t}\n\tvoid clear(void)\n\t{\n\t\tcnt = 0;\n\t\tmemset(pre, -1, sizeof(pre));\n\t\tmemset(head, -1, sizeof(head));\n\t\tmemset(value, 0, sizeof(value));\n\t}\n\tvoid swap(Hashtable &y)\n\t{\n\t\tstd::swap(head, y.head);\n\t\tstd::swap(value, y.value);\n\t\tstd::swap(pre, y.pre);\n\t\tstd::swap(key, y.key);\n\t\tstd::swap(cnt, y.cnt);\n\t}\n} f1, g1;\nlong long fast_pow(long long x, long long y)\n{\n\tlong long ans = 1, now = x;\n\twhile (y)\n\t{\n\t\tif (y & 1) ans = ans * now % p;\n\t\tnow = now * now % p;\n\t\ty >>= 1;\n\t}\n\treturn ans;\n}\nint popcnt(long long x)\n{\n\treturn Popcnt[x >> 21] + Popcnt[x & ((1 << 21) - 1)];\n}\nvector <pair <long long, long long> > S1, Stmp;\nmap <long long, long long> Ma;\nvoid work1(int x)\n{\n\tif (x == maxi23)\n\t{\n\t\tfor (vector <pair <long long, long long> > :: iterator it = S1.begin(); it != S1.end(); it++)\n\t\t\tfor (int i = 0; i < x; i++)\n\t\t\t{\n\t\t\t\tlong long tmp = it -> first;\n\t\t\t\tfor (int j = i; j < m; j += x)\n\t\t\t\t\ttmp |= 1LL << j;\n\t\t\t\tif ((tmp & s) != tmp) continue;\n\t\t\t\tpair <long long, long long> now = make_pair(tmp, it -> second);\n\t\t\t\tlong long mid_now = (now.first & ((1LL << mini) - 1)) ^ (now.first & maxi), mid_goal = (s & ((1LL << mini) - 1)) ^ (s & maxi);\n\t\t\t\tlong long lt_now = now.first & maxi, rt_now = now.first >> mini;\n\t\t\t\tlong long lt_goal = s & maxi, rt_goal = s >> mini;\n\t\t\t\tf1.add(get_hash((int)(lt_now & lt_goal), (int)(rt_now & rt_goal), popcnt(mid_now), popcnt(mid_now ^ mid_goal)), now.second);\n\t\t\t}\n\t}\n\telse\n\t{\n\t\tfor (vector <pair <long long, long long> > :: iterator it = S1.begin(); it != S1.end(); it++)\n\t\t\tfor (int i = 0; i < x; i++)\n\t\t\t{\n\t\t\t\tlong long tmp = it -> first;\n\t\t\t\tfor (int j = i; j < m; j += x)\n\t\t\t\t\ttmp |= 1LL << j;\n\t\t\t\tif ((tmp & s) != tmp) continue;\n\t\t\t\tif (x != 19) (Ma[tmp] += it -> second) %= p;\n\t\t\t\telse Stmp.push_back(make_pair(tmp, it -> second));\n\t\t\t}\n\t\tfor (map <long long, long long> :: iterator it = Ma.begin(); it != Ma.end(); it++)\n\t\t\tStmp.push_back(*it);\n\t\tMa.clear();\n\t}\n\tS1.swap(Stmp);\n\tStmp.clear();\n}\nvoid trans(int x, int y)\n{\n\tfor (int i = 0; i <= f1.cnt; i++)\n\t\tif (f1.value[i])\n\t\t{\n\t\t\tquad now = trans(f1.key[i]);\n\t\t\tint tmp1 = now.s1 & ((1 << x) - 1), tmp2 = now.s2 >> (y - x);\n\t\t\tint delta1 = tmp1 ^ now.s1, delta2 = now.s2 ^ (tmp2 << (y - x));\n\t\t\tint done1 = ((s & ((1 << y) - 1)) ^ (s & ((1 << x) - 1))) ^ delta1, done2 = ((s >> (m - y)) & ((1 << (y - x)) - 1)) ^ delta2;\n\t\t\tg1.add(get_hash(tmp1, tmp2, now.c1 + popcnt(delta1) + popcnt(delta2), now.c2 + popcnt(done1) + popcnt(done2)), f1.value[i]);\n\t\t}\n\tf1.swap(g1);\n\tg1.clear();\n}\nvoid work2(int x)\n{\n\tfor (int i = 0; i <= f1.cnt; i++)\n\t\tif (f1.value[i])\n\t\t{\n\t\t\tquad now = trans(f1.key[i]);\n\t\t\tfor (int q = mini - x; q < m - mini; q++)\n\t\t\t{\n\t\t\t\tif (q >= 0 && q + x < m && str[q] == '0' && str[q + x] == '0')\n\t\t\t\t{\n\t\t\t\t\tlong long tmp = ((now.s2 | (1LL << (q + x - mini))) << mini) + (now.s1 | (1 << q));\n\t\t\t\t\tif ((tmp & s) == tmp)\n\t\t\t\t\t\tg1.add(get_hash(now.s1 | (1 << q), now.s2 | (1 << (q + x - mini)), now.c1, now.c2), f1.value[i]);\n\t\t\t\t}\n\t\t\t\tif (q + x >= m && str[q] == '0')\n\t\t\t\t{\n\t\t\t\t\tlong long tmp = ((long long) now.s2 << mini) + (now.s1 | (1 << q));\n\t\t\t\t\tif ((tmp & s) == tmp)\n\t\t\t\t\t\tg1.add(get_hash(now.s1 | (1 << q), now.s2, now.c1, now.c2), f1.value[i]);\n\t\t\t\t}\n\t\t\t\tif (q < 0 && str[q + x] == '0')\n\t\t\t\t{\n\t\t\t\t\tlong long tmp = ((now.s2 | (1LL << (q + x - mini))) << mini) + now.s1;\n\t\t\t\t\tif ((tmp & s) == tmp)\n\t\t\t\t\t\tg1.add(get_hash(now.s1, now.s2 | (1 << (q + x - mini)), now.c1, now.c2), f1.value[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (now.c1) g1.add(get_hash(now.s1, now.s2, now.c1, now.c2), now.c1 * (long long) f1.value[i] % p);\n\t\t\tif (now.c2) g1.add(get_hash(now.s1, now.s2, now.c1 + 1, now.c2 - 1), now.c2 * (long long) f1.value[i] % p);\n\t\t}\n\tf1.swap(g1);\n\tg1.clear();\n}\nvoid work3(int x)\n{\n\tfor (int i = 0; i <= m; i++)\n\t\tg2[i] = f2[i] * (x - m) % p;\n\tfor (int i = 0; i <= m; i++)\n\t{\n\t\t(g2[i] += i * f2[i]) %= p;\n\t\t(g2[i + 1] += (cntS - i) * f2[i]) %= p;\n\t}\n\tmemcpy(f2, g2, sizeof(g2));\n}\nint main()\n{\n\tfor (int i = 0; i < (1 << 21); i++)\n\t\tPopcnt[i] = Popcnt[i >> 1] + (i & 1);\n\tios::sync_with_stdio(false);\n\tcin >> str >> n;\n\tm = str.size();\n\tfor (int i = 0; i < m; i++)\n\t\tif (str[i] == '0') s |= 1LL << i;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint x;\n\t\tcin >> d[i] >> x;\n\t\t(ans *= fast_pow(d[i], x - 1)) %= p;\n\t}\n\tsort(d + 1, d + 1 + n);\n\tmini = min(m, 31);\n\tS1.push_back(make_pair(0, 1));\n\tfor (int i = 1; i <= n; i++)\n\t\tif (d[i] <= 23) maxi23 = max(maxi23, d[i]);\n\t\telse mini = min(mini, d[i]);\n\tmaxi = (1 << (m - mini)) - 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (d[i] <= 23) work1(d[i]);\n\tif (!maxi23)\n\t{\n\t\tlong long mid_goal = (s & ((1LL << mini) - 1)) ^ (s & maxi);\n\t\tf1.add(get_hash(0, 0, 0, popcnt(mid_goal)), 1);\n\t}\n\tint las = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (d[i] > 23 && d[i] < m)\n\t\t{\n\t\t\tif (las && d[i] != 37) trans(m - d[i], m - las), mini = d[i], maxi = (1 << (m - mini)) - 1;\n\t\t\twork2(d[i]);\n\t\t\tlas = d[i];\n\t\t}\n\tfor (int i = 0; i <= f1.cnt; i++)\n\t\tif (f1.value[i])\n\t\t{\n\t\t\tquad now = trans(f1.key[i]);\n\t\t\t(f2[popcnt(now.s1) + popcnt(now.s2) + now.c1] += f1.value[i]) %= p;\n\t\t}\n\tcntS = popcnt(s);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (d[i] >= m && d[i] > 23) work3(d[i]);\n\tcout << f2[cntS] * ans % p << endl;\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1603721423,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF765G \u3010Math, math everywhere\u3011"
    }
]