[
    {
        "content": "[CF86C Genetic engineering](https://www.luogu.com.cn/problem/CF86C)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1769451)\n\n## \u9898\u610f\n- \u7ed9\u5b9a$n$\u4e2a\u7531ATCG\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u6c42\u6784\u9020\u4e00\u4e2a\u957f\u5ea6\u4e3a$m$\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u5f97\u6240\u6709\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5339\u914d\u8986\u76d6\u6574\u4e2a\u65b0\u5b57\u7b26\u4e32\uff0c\u6c42\u65b9\u6848\u603b\u6570\u3002\n- $1\\leqslant n\\leqslant 10,1\\leqslant m\\leqslant 10^3$\uff0c\u7ed9\u51fa\u7684\u4e32\u957f\u4e0d\u8d85\u8fc7$10$\uff0c\u5bf9$10^9+7$\u53d6\u6a21\u3002\n\n## \u5206\u6790\n\u4e00\u9053\u8f83\u5957\u8def\u7684AC\u81ea\u52a8\u673adp\u9898\uff0c\u4f46\u6211\u6ca1\u60f3\u51fa\u6765/kk\u3002\n\n\u8003\u8651\u5148\u5bf9\u6240\u6709\u7ed9\u51fa\u7684\u5b57\u7b26\u4e32\u5efa\u51faAC\u81ea\u52a8\u673a\u3002\n\n\u5957\u8def\u5730\u8bbe\u72b6\u6001$f_{i,j}$\u4e3a\u5728AC\u81ea\u52a8\u673a\u4e0a\u5339\u914d\u5230\u4e86\u4f4d\u7f6e$j$\uff0c\u4e14\u5df2\u7ecf\u7528\u4e86$i$\u4e2a\u5b57\u7b26\u7684\u65b9\u6848\u603b\u6570\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5728AC\u81ea\u52a8\u673a\u4e0a\u8f6c\u79fb\u8fb9\u5206\u4e3atrie\u6811\u4e0a\u539f\u6709\u7684\u8f6c\u79fb\u8fb9\u548cAC\u81ea\u52a8\u673a\u6dfb\u52a0\u7684\u8f6c\u79fb\u8fb9\uff0c\u8003\u8651\u76f4\u63a5\u5728\u4e0a\u9762dp\uff0c\u53ef\u4ee5\u6b63\u5e38\u8fdb\u884ctrie\u6811\u8fb9\u7684\u8f6c\u79fb\uff0c\u5bf9\u4e8eAC\u81ea\u52a8\u673a\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u80fd\u8f6c\u79fb\u5f53\u4e14\u4ec5\u5f53\u5f53\u524d\u7ed3\u70b9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7ed3\u675f\u4f4d\u7f6e\u3002\n\n\u4e0a\u9762\u7684\u8f6c\u79fb\u65b9\u5f0f\u4e4d\u4e00\u770b\u597d\u50cf\u6ca1\u9519\uff0c\u56e0\u4e3a\u8f6c\u79fbAC\u81ea\u52a8\u673a\u6dfb\u52a0\u7684\u8f6c\u79fb\u8fb9\u65f6\u9700\u8981\u8df3fail\u8fb9\uff0c\u53d8\u6210\u539f\u6765\u5339\u914d\u4e32\u7684\u540e\u7f00\uff0c\u56e0\u6b64\u4f1a\u8ba9\u4e00\u4e9b\u6ca1\u6709\u8986\u76d6\u7684\u70b9\u65e0\u6cd5\u8986\u76d6\u3002\n\n\u4f46\u662f\u6211\u4eec\u8003\u8651\u4e00\u79cd\u60c5\u51b5\uff1a\u5148\u901a\u8fc7trie\u6811\u4e0a\u7684\u5339\u914d\u5230\u4e86\u4e00\u4e2a\u7ed3\u675f\u4f4d\u7f6e$x$\uff0c\u7136\u540e\u5f80\u4e0b\u8df3\u4e00\u6b21trie\u6811\u8fb9\uff0c\u5e76\u8df3\u4e00\u6b21AC\u81ea\u52a8\u673a\u6dfb\u52a0\u7684\u8f6c\u79fb\u8fb9\uff0c\u6700\u540e\u518d\u8df3\u4e00\u6b21\u5230\u4e86\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u8f83\u6df1\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002\n\n\u8fd9\u6837\u8fd9\u4e2a\u7ed3\u675f\u4f4d\u7f6e\u7684\u957f\u5ea6\u8db3\u4ee5\u8986\u76d6\u524d\u9762\u6ca1\u6709\u8986\u76d6\u7684\u5185\u5bb9\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4ecd\u7136\u662f\u5408\u6cd5\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c**\u6211\u4eec\u8df3fail\u8fb9\u65f6\uff0c\u53ef\u80fd\u53bb\u9664\u7684\u524d\u7f00\u5df2\u7ecf\u8986\u76d6\u8fc7\u4e86**\uff0c\u56e0\u6b64\u8fd9\u6837\u7684\u72b6\u6001\u662f\u4e0d\u80fd\u8f6c\u79fb\u7684\u3002\n\n\u8003\u8651\u53e6\u4e00\u79cd\u72b6\u6001\u8bbe\u8ba1\u65b9\u5f0f\uff1a$f_{i,j,k}$\u8868\u793a\u5728AC\u81ea\u52a8\u673a\u4e0a\u5339\u914d\u5230\u4e86\u4f4d\u7f6e$k$\uff0c\u7528\u4e86$i$\u4e2a\u5b57\u7b26\uff0c\u4e14\u540e$j$\u4e2a\u5b57\u7b26\u8fd8\u6ca1\u6709\u8986\u76d6\u7684\u65b9\u6848\u6570\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4$len_x$\uff0c\u8868\u793a\u5230\u4e86AC\u81ea\u52a8\u673a\u4e0a\u7684\u4f4d\u7f6e$x$\uff0c\u4ee5$x$\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a\u591a\u5c11\u3002\n\n\u8fd9\u6837\u7684\u8f6c\u79fb\u4e5f\u975e\u5e38\u6e05\u6670\uff1a\u6211\u4eec\u5f53\u524d\u7684\u72b6\u6001\u4e3a$i,j,k$\uff0c\u901a\u8fc7AC\u81ea\u52a8\u673a\u7684\u8f6c\u79fb\u8fb9\uff08\u65e0\u8bba\u662ftrie\u6811\u8fb9\u8fd8\u662fAC\u81ea\u52a8\u673a\u65b0\u6dfb\u52a0\u7684\u8f6c\u79fb\u8fb9\uff09\u8f6c\u79fb\u5230\u4e86\u70b9$x$\uff0c\u90a3\u4e48\u6211\u4eec\u6709\uff1a\n\n- \u5f53$len_x>j$\u65f6\uff0c$f_{i,j,k}\\rightarrow f_{i+1,0,x}$\n- \u5426\u5219\uff0c$f_{i,j,k}\\rightarrow f_{i+1,j+1,x}$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nm|S|)$\u3002\n\n## \u4ee3\u7801\n```\n#include<stdio.h>\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int maxn=105,maxk=4,maxl=12,mod=1000000009,maxm=1005;\nint n,m,tot,ans,maxlen;\nint chd[maxn][maxk],fail[maxn],f[maxm][maxl][maxn],dep[maxn],len[maxn];\nstring s;\nqueue<int>q;\ninline int get(char c){\n\treturn c=='A'? 0:(c=='C'? 1:(c=='G'? 2:3));\n}\nvoid insert(string s){\n\tint now=1;\n\tfor(int i=0;i<s.size();now=chd[now][get(s[i])],i++)\n\t\tif(chd[now][get(s[i])]==0)\n\t\t\tchd[now][get(s[i])]=++tot,dep[tot]=dep[now]+1;\n\tlen[now]=dep[now];\n}\nvoid getfail(){\n\twhile(!q.empty())\n\t\tq.pop();\n\tfor(int i=0;i<=3;i++){\n\t\tif(chd[1][i])\n\t\t\tq.push(chd[1][i]),fail[chd[1][i]]=1;\n\t\telse chd[1][i]=1;\n\t}\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<=3;i++){\n\t\t\tif(chd[x][i])\n\t\t\t\tq.push(chd[x][i]),fail[chd[x][i]]=chd[fail[x]][i];\n\t\t\telse chd[x][i]=chd[fail[x]][i];\n\t\t}\n\t\tlen[x]=max(len[x],len[fail[x]]);\n\t}\n}\nvoid dp(){\n\tf[0][0][1]=1;\n\tfor(int i=0;i<m;i++)\n\t\tfor(int j=0;j<=maxlen;j++)\n\t\t\tfor(int k=1;k<=tot;k++)\n\t\t\t\tif(f[i][j][k])\n\t\t\t\t\tfor(int p=0;p<=3;p++){\n\t\t\t\t\t\tint x=chd[k][p];\n\t\t\t\t\t\tif(len[x]>j)\n\t\t\t\t\t\t\tf[i+1][0][x]=(f[i+1][0][x]+f[i][j][k])%mod;\n\t\t\t\t\t\telse f[i+1][j+1][x]=(f[i+1][j+1][x]+f[i][j][k])%mod;\n\t\t\t\t\t}\n}\nint main(){\n\ttot=1;\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>s,maxlen=max(maxlen,(int)s.size());\n\t\tinsert(s);\n\t}\n\tgetfail();\n\tdp();\n\tfor(int i=1;i<=tot;i++)\n\t\tans=(ans+f[m][0][i])%mod;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1610193188,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF86C \u3010Genetic engineering\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6[AC\u81ea\u52a8\u673a](https://www.luogu.com.cn/problem/P3808)  \n\n\u63a8\u8350\u535a\u5ba2[<1>](https://blog.csdn.net/weixin_30633405/article/details/98803470) [<2>](http://www.mamicode.com/info-detail-1920297.html)(\u5410\u69fd\u4e00\u4e0b\u8fd9\u9898\u5f88\u504f\u50fb\u672c\u6765\u5199\u7684\u4eba\u5c31\u5c11\uff0c\u9898\u89e3\u6211\u4e5f\u4e0d\u600e\u4e48\u770b\u5f97\u61c2~~\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u592a\u84bb\u4e86QAQ~~)  \n\n\u524d\u9762\u4e24\u4f4d\u72b6\u6001\u7684\u8bbe\u7f6e\u662f\u5957\u8def\uff1a$dp[i][j]$\u4e3a\u524d$i$\u4f4d\u5728$j$\u53f7\u8282\u70b9\u4e0a\u7684\u603b\u65b9\u6848\u6570\uff08\u8fd9\u9898\u63a8\u8350\u7528\u6570\u7ec4\uff0c\u7528\u6307\u9488\u4e5f\u968f\u4fbf\u5566\uff09\u3002\u4f46\u8fd9\u6837\u80af\u5b9a\u4e0d\u591f\u3002\n\nAC\u81ea\u52a8\u673a\u6709\u8fd9\u6837\u4e00\u4e2a\u7279\u6027:\u8282\u70b9\u62e5\u6709\u5f53\u524d\u4e32\u6240\u6709\u540e\u7f00\u7684\u4fe1\u606f,\u5e76\u53ef\u4ee5\u6cbf\u7740fail\u6307\u9488\u5bfb\u627e\u5176\u540e\u7f00\u3002  \n\n\u6211\u4eec**\u8d70fail\u65f6**\u4f1a\u4f7f\u5f53\u524d\u5b50\u4e32*\u5269\u4f590~len-1\u957f\u5ea6\u672a\u88ab\u8986\u76d6\u540e\u7f00*\u7684\u72b6\u6001\u90fd\u8f6c\u79fb\u5230\u6700\u6df1\u7684\u70b9\u4e0a\uff0c\u800c\u8f6c\u79fb\u4e4b\u540e\u6211\u4eec\u4e22\u5931\u4e86\u5f53\u524d\u72b6\u6001\u7684\u5df2\u7ecf\u5339\u914d\u7684\u957f\u5ea6\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6b64\u65f6**\u65b0\u589e\u4e00\u7ef4\u72b6\u6001**\u8868\u793a**\u5f53\u524d\u4e32\u8fd8\u5269\u591a\u5c11\u6ca1\u6709\u5339\u914d**\uff08\u4e0d\u77e5\u9053\u5230\u5e95\u6709\u591a\u5c11\u6240\u4ee5\u8fd9\u4e00\u7ef4\u4ece0\u679a\u4e3e\u5230\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6~~\u5176\u5b9e\u5c31\u662f10~~\uff09\uff0c\u8f6c\u79fb\u8fc7\u53bb\u540e\u5728\u8fd9\u4e2a\u6811\u4e0b\u9762\u53ef\u80fd\u4f1a\u6709\u5339\u914d\u7684\u9879\u3002\u5339\u914d\u4e0a\u5c31\u8f6c\u79fb\u52300\uff0c\u5426\u5219\u8f6c\u79fb\u5230\u672a\u5339\u914d+1\uff08\u8fd9\u91cc\u7684\u8f6c\u79fb\u89c4\u5219\u548c\u5b9a\u4e49\u5e76\u4e0d\u4e00\u6837\uff0c\u662f\u4e3a\u4e86\u5224\u65ad\u5408\u6cd5\u6027\uff09\u3002\n\n**\u4f7f\u7528\u5237\u8868\u6cd5\uff08%Imakf orz\uff09**\n\n\u53ef\u80fd\u5230\u8fd9\u91cc\u8fd8\u662f\u6709\u4eba\u4e00\u8138\u8499\u903c\uff08\u8ddf\u6211\u4e00\u6837\uff09\uff0c\u4f46\u662f\u753b\u4e2a\u56fe\u4ec0\u4e48\u7684\u4ed4\u7ec6\u63a8\u6572\u63a8\u6572\u8fd8\u662f\u6709\u620f\u7684\u3002\n\n\n```\n#include<bits/stdc++.h>\n#define int long long\n#define f(i,a,b) for(register int i=a;i<=b;++i)\nusing namespace std;\nconst int mod =1e9+9;\nconst int N = 1024;\nint dp[N][N][11],n,m,len,son[N][4],val[N],fail[N],sz,root,mx;\nvoid add(int &x,int y) {x=((x+y%mod)%mod+mod)%mod;}\nint idx(char c) {return c=='T'?3:c=='G'?2:c=='C';}\nint newnode() {son[sz][0]=0;son[sz][1]=0;\nson[sz][2]=0;son[sz][3]=0;val[sz]=0;return sz++;}\nvoid insert(char *s,int len) {\n\tint u=0;\n\tf(i,0,len-1) {\n\t\tint v=idx(s[i]);\n\t\tif(!son[u][v]) son[u][v]=newnode();\n\t\tu=son[u][v];\n\t} val[u]=max(val[u],len);\n}\nvoid build() {\n\tqueue<int> q;\n\tf(i,0,3) if(!son[root][i]) son[root][i]=root;\n\t\telse fail[son[root][i]]=root,q.push(son[root][i]);\n\twhile(!q.empty()) {\n\t\tint u=q.front();q.pop();\n\t\tf(i,0,3) {\n\t\t\tint &v=son[u][i];\n\t\t\tif(!v) v=son[fail[u]][i];\n\t\t\telse fail[v]=son[fail[u]][i],q.push(v),\n\t\t\t\tval[v]=max(val[v],val[fail[v]]);\n\t\t}\n\t}\n}\n\nvoid DP() {\n\tdp[0][0][0]=1;\n\tf(i,0,n-1) f(j,0,sz-1) f(k,0,mx) {\n\t\tint v=dp[i][j][k];\n\t \tif(v) {\n\t\t\t//printf ( \"dp[%d][%d][%d] = %d\\n\" , i , j , k , dp[i][j][k] );\n\t\t\tf(p,0,3) {\n\t\t\t\tint now=son[j][p];\n\t\t\t\tadd(dp[i+1][now][(val[now]>k?0:k+(k!=mx))],v);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tf(i,0,sz-1) add(ans,dp[n][i][0]);\n\tprintf(\"%d\\n\",ans);\n\t//f(i,0,sz) cout<<val[i]<<\"\\n\";\n}\nchar str[12];\nsigned main() {\n\troot=newnode();\n\tcin>>n>>m;\n\tf(i,1,m) scanf(\"%s\",str),len=strlen(str),\n\t\tmx=max(mx,len),insert(str,len);\n\tbuild();\n\tDP();\n}\n```",
        "postTime": 1580746287,
        "uid": 30048,
        "name": "\u4e5d\u601d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF86C \u3010Genetic engineering\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u6765\u8003\u8651\u5f53\u6211\u4eec\u5df2\u77e5\u4e00\u79cd\u65b9\u6848\u6ee1\u8db3\u9898\u610f\u8981\u6c42\uff0c\u6211\u4eec\u5982\u4f55\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u5176\u6bcf\u4e2a\u4f4d\u7f6e $i$ \u6240\u5bf9\u5e94\u7684\u662f\u54ea\u4e2a\u4e32\u3002\u663e\u7136\u662f\u5728 trie \u6811\u4e0a\u904d\u5386\uff0c\u5bf9\u4e8e\u904d\u5386\u5230\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9 $x$ \u5728 fail \u6811\u4e0a\u627e\u7956\u5148\uff0c\u770b\u80fd\u4e0d\u80fd\u627e\u5230\u4e00\u4e2a\u662f\u5b57\u7b26\u4e32\u96c6 $S$ \u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u8282\u70b9\uff0c\u5982\u679c\u627e\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u5b57\u7b26\u4e32\u662f $s$\u3002\u90a3\u4e48\u5176\u53ef\u4ee5\u8986\u76d6 $x-|s|\\dots x$ \u8fd9\u4e2a\u533a\u95f4\u4e0a\u7684\u8282\u70b9\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u5224\u65ad\u5b57\u7b26\u4e32\u524d $x$ \u4e2a\u662f\u5426\u88ab\u5b8c\u5168\u8986\u76d6\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u524d $x$ \u4e2a\u7684\u540e\u7f00\u6709\u591a\u957f\u662f\u6ca1\u6709\u88ab\u8986\u76d6\u7684\uff0c\u7136\u540e\u6211\u4eec\u518d\u4e0e\u5f53\u524d\u5339\u914d\u5230\u7684\u5b8c\u6574\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4f5c\u6bd4\u8f83\u3002\u52a0\u5165\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u592a\u77ed\uff0c\u65e0\u6cd5\u5b8c\u5168\u8986\u76d6\u6574\u4e2a\u540e\u7f00\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u9009\u5b83\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49 $f_{i,j,k}$ \u8868\u793a\u6211\u4eec\u73b0\u5728\u9700\u8981\u5339\u914d\u7684\u662f\u524d $i$ \u4e2a\u5b57\u7b26\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u72b6\u6001\u662f trie \u6811\u4e0a\u7684 $k$\uff0c $i$ \u4e2a\u5b57\u7b26\u7684\u957f\u5ea6\u4e3a $j$ \u7684\u540e\u7f00\u6ca1\u6709\u88ab\u8986\u76d6\u3002\n\n\u5bf9\u4e8e\u73b0\u5728\u7684 $k$ \u8282\u70b9\uff0c\u5982\u679c\u4ed6\u662f\u5176\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\uff0c\u90a3\u4e48\u4ed6\u53ef\u4ee5\u4f7f\u7528\u5b83\u672c\u8eab\u7684\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u6765\u5c1d\u8bd5\u8986\u76d6 $j$ \u7684\u957f\u5ea6\uff0c\u4f46\u5bf9\u4e8e\u66f4\u4e00\u822c\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 $k$\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u5bf9\u5e94\u7684 fail \u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u3002\u5047\u5982\u6307\u5411\u7684\u8282\u70b9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u6307\u5411\u8282\u70b9\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u6765\u5c1d\u8bd5\u6765\u8986\u76d6\u3002\u5bf9\u4e8e\u4e24\u79cd\u60c5\u51b5\u90fd\u517c\u5907\u7684\u8282\u70b9\uff0c\u53d6\u66f4\u957f\u7684\u4e00\u4e2a\u5373\u53ef\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u957f\u5ea6\u8bb0\u4e3a $len_x$\u3002\u7136\u540e\u5728 insert \u548c build \u7684\u65f6\u5019\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u3002\u5bf9\u4e8e\u73b0\u5728\u7684\u72b6\u6001 $f_{i,j,k}$ \u5047\u8bbe\u6211\u4eec\u679a\u4e3e\u51fa\u6211\u4eec\u8d70\u5230 $x$ \u8282\u70b9 (\u5176\u5b9e\uff0c\u8fd9\u5c31\u662f\u51b3\u7b56\uff0c\u7b2c $i+1$ \u4f4d\u586b\u4ec0\u4e48\uff0c\u5148\u679a\u4e3e\u51fa\u6765\u518d\u8003\u8651\u662f\u5426\u53ef\u884c\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u4ee5\u4e0b\u72b6\u6001\u8f6c\u79fb\n\n- $len_x \\ge k+1\\ $ $ f_{i,j,k} \\Rightarrow f_{i+1,0,x}$\n\n- $len_x < k+1\\ $ $ f_{i,j,k} \\Rightarrow f_{i+1,j+1,x}$\n\n\u90a3\u4e48\u5c31\u6709\n\n$$\\boxed{ans=\\sum\\limits_{i=0}^{tot}f_{n,0,i}}$$\n\n\u4ee3\u7801\u6709\u6240\u53c2\u8003\n\n```cpp\n#include<bits/stdc++.h>\n#define mod 1000000009\n#define N 15\nusing namespace std;\nint get(char c){\n\treturn c=='A'? 0:(c=='C'? 1:(c=='G'? 2:3));\n}\nint n,m,dep[N*100],len[1500],ch[N*100][26],fail[N*100],tot,mlen=0;\nchar s[N];\nint f[N*100][N][N*100];\nvoid insert(char *s){\n\tint slen=strlen(s);\n\tmlen=max(mlen,slen);\n\tint x=0;\n\tfor(int i=0;i<slen;i++){\n\t\tint k=get(s[i]);\n\t\tif(!ch[x][k]){\n\t\t\tch[x][k]=++tot;\n\t\t\tdep[tot]=dep[x]+1;\n\t\t}\n\t\tx=ch[x][k];\n\t}\n\tlen[x]=dep[x];\n}\nvoid build(){\n\tqueue<int> q;\n\tfor(int i=0;i<=3;i++){\n\t\tif(ch[0][i]) q.push(ch[0][i]);\n\t}\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<=3;i++){\n\t\t\tif(ch[x][i]) fail[ch[x][i]]=ch[fail[x]][i],q.push(ch[x][i]);\n\t\t\telse ch[x][i]=ch[fail[x]][i];\n\t\t}\n\t\tlen[x]=max(len[x],len[fail[x]]);\n\t}\n}\nvoid dp(){\n\tf[0][0][0]=1;\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<=mlen;j++){\n\t\t\tfor(int k=0;k<=tot;k++){\n\t\t\t\tif(f[i][j][k]){\n\t\t\t\t\tfor(int p=0;p<=3;p++){\n\t\t\t\t\t\tint x=ch[k][p];\n\t\t\t\t\t\tif(len[x]>j)f[i+1][0][x]=(f[i+1][0][x]+f[i][j][k])%mod;\n\t\t\t\t\t\telse f[i+1][j+1][x]=(f[i+1][j+1][x]+f[i][j][k])%mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%s\",s);\n\t\tinsert(s);\n\t}\n\tbuild();\n\tdp();\n\tint ans=0;\n\tfor(int i=0;i<=tot;i++) ans=(ans+f[n][0][i])%mod;\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1614915699,
        "uid": 128870,
        "name": "chen_qian",
        "ccfLevel": 7,
        "title": "CF86C"
    },
    {
        "content": "\u8fd9\u79cd\u840c\u840c\u9898\u662f\u4e0d\u662f\u8be5\u8bc4\u84dd\uff1f\u8c37\u6c11\u4eec\u4f60\u4eec\u8bf4\u662f\u4e0d\u662f\uff1f\n\n[lnk](https://www.luogu.com.cn/problem/CF86C)\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a DNA \u5e8f\u5217\u4e3a\u4ec5\u6709 `ATCG` \u56db\u4e2a\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u3002\n\n\u7ed9\u51fa $m$ \u4e2a DNA \u5e8f\u5217\u6a21\u5f0f\u4e32 $s_i$\uff0c\u6bcf\u4e2a\u957f\u5ea6\u5747\u4e0d\u8d85\u8fc7 $10$ \uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a DNA \u5e8f\u5217 w \u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e w \u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$ \uff0c\u90fd\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u6a21\u5f0f\u4e32 $s_j$\uff0c\u4f7f\u5f97 $w_{[l...r]} = s_j$\uff08 $w_{[l...r]}$ \u8868\u793a\u4e00\u4e2a\u539f\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b50\u4e32\uff09\uff0c\u5176\u4e2d $1 \\le l \\le i \\le r \\le w$\uff08 $|w|$ \u4e3a DNA \u5e8f\u5217 w \u7684\u957f\u5ea6\uff09 \u3002\n\n\u8bf7\u4f60\u8ba1\u7b97\u51fa\u6240\u6709\u957f\u5ea6\u4e3a S \u7684\u597d\u7684 $DNA$ \u5e8f\u5217\u7684\u4e2a\u6570\u3002\n\n\u7b54\u6848\u5bf9 $1000000009$ \u53d6\u6a21\u3002\n\n$n,m\\le 10,|S|\\le 1000$\u3002\n\n### Sol.\n\n\u9996\u5148\u591a\u6a21\u4e32\u5339\u914d\u5f88\u5bb9\u6613\u60f3\u5230 AC \u81ea\u52a8\u673a\u3002\n\n\u7136\u540e\u5c31\u663e\u7136\u662f DP \u4e86\uff0c\u518d\u5f00\u4e00\u7ef4\u8bb0\u5f55\u5f53\u524d\u6ca1\u88ab\u5339\u914d\u7684\u540e\u7f00\u957f\u5ea6\u3002\n\n\u6bcf\u6b21\u5339\u914d\u80af\u5b9a\u662f\u4e00\u4e2a\u540e\u7f00\uff0c\u90a3\u4e48\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u540e\u7f00\u8981\u6bd4\u6ca1\u5339\u914d\u7684\u957f\u7684\u8bdd\uff0c\u90a3\u4e48\u8bf4\u660e\u53ef\u4ee5\u5339\u914d\u3002\u5426\u5219\u4e0d\u884c\uff08\u540e\u7f00\u4e0d\u80fd\u5b8c\u5168\u5305\u542b\uff09\uff0c\u90a3\u5c31\u5c06\u540e\u7f00\u957f\u5ea6 +1 \u5f80\u4e0b\u8d70\u3002\n\n\u8bbe $dp_{i,j,k}$ \u8868\u793a AC \u81ea\u52a8\u673a\u4e0a\u7b2c $i$ \u4e2a\u70b9\uff0c \u5339\u914d\u5230\u7b2c $j$ \u4f4d\uff0c\u6709 $k$ \u4f4d\u672a\u88ab\u5339\u914d\u3002\n\n$dp_{i,j,k}\\to dp_{v,j+1,0}(len_{v}>j) $\n\n$dp_{i,j,k}\\to dp_{v,j+1,k+1}(len_v\\le j)$\n\n$len_v$ \u53ef\u4ee5\u7528 fail \u6c42\u51fa\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(4nm|S|)$\n\n### Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define I inline\n#define RI register int\n#define rep(i,a,b) for(RI i=a;i<=b;++i)\n#define dow(i,a,b) for(RI i=a;i>=b;--i)\nusing namespace std;\nconst int N=1005,mo=1e9+9;\nint ch[N][26],n,m,ans,cnt,fail[N],len[N],dp[N][N][13];\nchar c[15];\nI int add(int a,int b){ return a+b>=mo?a+b-mo:a+b; }\nI int sub(int a,int b){ return a-b<0?a-b+mo:a-b; }\nI int mul(int a,int b){ return 1ll*a*b%mo; }\nI int Hash(char c){\n\tif(c=='A') return 0;\n\tif(c=='C') return 1;\n\tif(c=='T') return 2;\n\treturn 3;\n}\nI void ins(char *c,int l){\n\tRI now=0;rep(i,1,l) {\n\t\tif(!ch[now][Hash(c[i])]) ch[now][Hash(c[i])]=++cnt;\n\t\tnow=ch[now][Hash(c[i])];\n\t} len[now]=l;\n}\nI void build(){\n\tqueue<int> q;\n\trep(i,0,25) if(ch[0][i]) q.push(ch[0][i]);\n\twhile(!q.empty()){\n\t\tRI u=q.front();q.pop();\n\t\trep(i,0,3)\n\t\t\tif(ch[u][i]) fail[ch[u][i]]=ch[fail[u]][i],q.push(ch[u][i]);\n\t\t\telse ch[u][i]=ch[fail[u]][i];\n\t\tlen[u]=max(len[u],len[fail[u]]);\n\t}\n}\nI void DP(){\n\tdp[0][0][0]=1;\n\trep(j,0,m-1) rep(i,0,cnt) rep(k,0,10) if(dp[i][j][k]) rep(l,0,3) \n\t\tif(len[ch[i][l]]>k) dp[ch[i][l]][j+1][0]=add(dp[ch[i][l]][j+1][0],dp[i][j][k]);\n\t\telse dp[ch[i][l]][j+1][k+1]=add(dp[ch[i][l]][j+1][k+1],dp[i][j][k]);\t\t\t\n}\nint main(){\n\tscanf(\"%d%d\",&m,&n);\n\trep(i,1,n) scanf(\"%s\",c+1),ins(c,strlen(c+1));\n\tbuild(),DP();rep(i,0,cnt) ans=add(ans,dp[i][m][0]);\n\treturn printf(\"%d\\n\",ans),0;\n}\n```",
        "postTime": 1638085914,
        "uid": 115857,
        "name": "resound_WANYI_13Ell",
        "ccfLevel": 0,
        "title": "CF86C"
    },
    {
        "content": "\u7b80\u5355\u7684 AC \u81ea\u52a8\u673a\u4e0a DP \u9898\u3002\n\n\u5148\u5bf9\u9898\u76ee\u6761\u4ef6\u505a\u4e00\u6b65\u8f6c\u5316\uff1a\u6240\u6709\u5728\u6587\u672c\u4e32\u4e2d\u7684\u5339\u914d\u6bb5\u80fd\u591f\u8986\u76d6\u6574\u4e2a\u6587\u672c\u4e32\u3002\u8003\u8651\u5c06\u6bcf\u6b21\u5339\u914d\u7684\u8d21\u732e\u653e\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u5efa\u51fa AC \u81ea\u52a8\u673a\u540e\uff0c\u8bbe $f_{i,j,k}$ \u4e3a\u6b64\u65f6\u5728 AC \u81ea\u52a8\u673a\u4e0a\u7b2c $i$ \u4e2a\u7ed3\u70b9\uff0c\u6587\u672c\u4e32\u957f\u5ea6\u4e3a $j$\uff0c\u4e14\u540e $k$ \u4e2a\u5b57\u7b26\u672a\u88ab\u5339\u914d\u7684\u65b9\u6848\u6570\u3002\u521d\u59cb\u72b6\u6001 $f_{0,0,0}=1$\uff0c\u7b54\u6848\u4e3a $\\sum_i f_{i,n,0}$\u3002\n\n\u9884\u5904\u7406\u51fa\u81ea\u52a8\u673a\u4e0a\u6bcf\u4e2a\u7ed3\u70b9\u6240\u80fd\u591f\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6 $siz_i$\u3002\u5229\u7528\u5237\u8868\u6cd5\uff0c\u679a\u4e3e\u63a5\u4e0b\u6765\u586b\u7684\u540e\u4e00\u4e2a\u5b57\u7b26 $c$ \u8f6c\u79fb\uff1a\n\n- $f_{i,j,k}\\to f_{i\\to c,j+1,0}$\uff0c\u6b64\u65f6 $siz_{i\\to c}>k$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u4e4b\u524d\u672a\u88ab\u5339\u914d\u7684\u5b57\u7b26\u90fd\u5728\u8fd9\u4e00\u6b21\u88ab\u5339\u914d\u6389\u4e86\u3002\n\n- $f_{i,j,k}\\to f_{i\\to c,j+1,k+1}$\uff0c\u6b64\u65f6 $siz_{i\\to c}\\le k$\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ee5\u5f53\u524d\u7684\u5339\u914d\u957f\u5ea6\u8fd8\u4e0d\u8db3\u4ee5\u5339\u914d\u5b8c\uff0c\u4e0e\u5176\u5728\u8fd9\u91cc\u5339\u914d\uff0c\u4e0d\u5982\u7b49\u5230\u540e\u9762\u4e00\u8d77\u641e\u5b9a\u3002\n\n**\u6ce8\u610f\u6a21\u6570\u4e3a $10^9+9$**\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int Maxn=1e3,Maxk=100,Mod=1e9+9;\n\nint n,m,f[Maxk+5][Maxn+5][11]; char str[Maxn+5];\nint t[Maxn+5][4],siz[Maxn+5];\nint fail[Maxn+5],chk[Maxn+5],tot;\nqueue<int> q;\n\ninline int Get(char ch)\n{\n    if(ch=='A') return 0;\n    if(ch=='G') return 1;\n    if(ch=='C') return 2;\n    if(ch=='T') return 3;\n}\ninline void Insert()\n{\n    int l=strlen(str+1),p=0;\n    For(i,1,l)\n    {\n        int x=Get(str[i]);\n        if(!t[p][x]) t[p][x]=++tot;\n        p=t[p][x];\n    }\n    chk[p]=l;\n}\ninline void Build()\n{\n    For(i,0,3) if(t[0][i]) q.push(t[0][i]);\n    while(!q.empty())\n    {\n        int x=q.front(); q.pop();\n        For(i,0,3)\n        {\n            if(t[x][i]) fail[t[x][i]]=t[fail[x]][i],q.push(t[x][i]);\n            else t[x][i]=t[fail[x]][i];\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    For(i,1,n) scanf(\"%s\",str+1),Insert();\n    Build();\n    For(i,0,tot)\n    {\n        int now=i;\n        while(now) siz[i]=max(siz[i],chk[now]),now=fail[now];\n    }\n    f[0][0][0]=1;\n    For(j,1,m) For(i,0,tot) For(k,0,10) if(f[i][j-1][k])\n    {\n        int res=f[i][j-1][k];\n        For(l,0,3)\n        {\n            int x=t[i][l];\n            if(siz[x]>k) f[x][j][0]=(f[x][j][0]+res)%Mod;\n            else if(k<10) f[x][j][k+1]=(f[x][j][k+1]+res)%Mod;\n        }\n    }\n    int ans=0;\n    For(i,0,tot) ans=(ans+f[i][m][0])%Mod;\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1669170977,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF86C\u3010Genetic engineering\u3011"
    }
]