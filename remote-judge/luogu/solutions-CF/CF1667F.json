[
    {
        "content": "3500 \u7684\u6784\u9020\u9898\uff0c\u81ea\u884c\u4f53\u4f1a\u2026\u2026\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a $4n\\times 4m$ \u7684\u65b9\u683c\u56fe\uff0c\u6bcf\u4e2a\u683c\u5b50\u90fd\u662f\u9ed1\u8272\u6216\u767d\u8272\u3002\u6709\u4e9b\u683c\u5b50\u5df2\u7ecf\u88ab\u6d82\u8272\u4e86\uff0c\u4f60\u8981\u7ed9\u5269\u4e0b\u7684\u683c\u5b50\u6d82\u8272\uff0c\u4f7f\u5f97\u9ed1\u8272\u683c\u5b50\u548c\u767d\u8272\u683c\u5b50\u5206\u522b\u7ec4\u6210\u8fde\u901a\u5757\u3002\u6784\u9020\u4e00\u79cd\u65b9\u6848\u6216\u5224\u65ad\u65e0\u89e3\u3002\n\n**\u4fdd\u8bc1\u5df2\u7ecf\u88ab\u6d82\u8272\u7684\u683c\u5b50\u6ca1\u6709\u516c\u5171\u70b9\u6216\u516c\u5171\u8fb9\u3002**\n\n$4\\leq 4n,4m\\leq 500$\uff0c\u591a\u7ec4\u6570\u636e\uff0c\u6570\u636e\u7ec4\u6570 $\\leq4000$\uff0c\u4fdd\u8bc1 $\\sum nm \\leq 250000$\u3002\n\n## \u9898\u89e3\n\n\u6ce8\uff1a\u9898\u89e3\u914d\u56fe\u4e2d\u4e3a\u4e86\u533a\u5206\u672a\u67d3\u8272\u683c\u5b50\u548c\u5df2\u67d3\u8272\u683c\u5b50\uff0c\u5c06\u9ed1\u767d\u67d3\u8272\u6539\u4e3a\u7ea2\u84dd\u67d3\u8272\u3002\n\n\u5148\u6765\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5982\u679c\u56db\u4e2a\u8fb9\u754c\u4e0a\u6ca1\u6709\u683c\u5b50\u88ab\u67d3\u8272\uff0c\u5982\u4f55\u6784\u9020\uff1f\n\n\u8054\u60f3 [AGC004C And Gird](https://www.luogu.com.cn/problem/AT2043)\uff0c\u8003\u8651\u6784\u9020\u201c\u68b3\u5b50\u201d\u72b6\u7684\u56fe\u6848\uff0c\u5982\u56fe 1\uff1a\n\n![\u56fe 1](https://pic.imgdb.cn/item/62b6be7c094754312933b98b.png)\n\n\u8003\u8651\u5230\u4efb\u610f\u4e24\u4e2a\u9650\u5236\u989c\u8272\u7684\u683c\u5b50\u4e0d\u516b\u8054\u901a\uff0c\u8fd9\u79cd\u65b9\u6848\u4e00\u5b9a\u662f\u53ef\u884c\u7684\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u679c\u8fb9\u754c\u4e0a\u6709\u9650\u5236\u989c\u8272\u7684\u683c\u5b50\u600e\u4e48\u505a\u3002\u9996\u5148\u5982\u679c\u8fb9\u754c\u4e0a\u5b58\u5728\u5f62\u5982 `BWBW` \u7684\u5e8f\u5217\uff0c\u662f\u4e00\u5b9a\u65e0\u89e3\u7684\uff0c\u5982\u56fe 2\uff08\u683c\u5b50\u4e0a\u6709\u201c\u9650\u5236\u201d\u4e8c\u5b57\u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u989c\u8272\u56fa\u5b9a\uff09\uff1a\n\n![\u56fe 2](https://pic.imgdb.cn/item/62b6bfc509475431293599be.png)\n\n\u5bf9\u4e8e\u4e0d\u5b58\u5728\u5f62\u5982 `BWBW` \u5e8f\u5217\u7684\u60c5\u51b5\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u5b8c\u6574\u7684\u4e00\u4e2a\u8fb9\u754c\uff08\u4e0a/\u4e0b/\u5de6/\u53f3\uff09\uff0c\u8fd9\u6761\u8fb9\u4e0a\u53ef\u4ee5\u5168\u90e8\u8d4b\u6210\u540c\u4e00\u4e2a\u989c\u8272\uff0c\u800c\u4e14\u5b83\u5bf9\u9762\u90a3\u6761\u8fb9\u754c\u4e0a\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u662f\u4e0d\u540c\u7684\u989c\u8272\u3002\u4e0d\u59a8\u628a\u8fd9\u4e2a\u5b8c\u6574\u7684\u8fb9\u754c\u4e0a\u7684\u989c\u8272\u5f53\u6210\u84dd\u8272\uff0c\u53c2\u8003\u56fe 1 \u201c\u68b3\u5b50\u201d\u578b\u6784\u9020\u7684\u84dd\u8272\u90e8\u5206\uff0c\u7ed9\u5b83\u5b89\u6392\u597d\u3002\n\n\u8fd9\u6837\u81f3\u5c11\u53ef\u4ee5\u4fdd\u8bc1\u84dd\u8272\u7684\u683c\u5b50\u76f8\u4e92\u4e4b\u95f4\u53ef\u4ee5\u8fde\u901a\u4e86\u3002\u73b0\u5728\u5904\u7406\u7ea2\u8272\u683c\u5b50\uff0c\u53ef\u4ee5\u5217\u4e3e\u51fa\u5982\u4e0b\u4e09\u4e2a\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u4e00\u4e00\u89e3\u51b3\uff1a\n\n1. \u8fb9\u6846\u88ab\u84dd\u8272\u5305\u56f4\u4e86\uff0c\u90e8\u5206\u8fb9\u6846\u4e0a\u7684\u7ea2\u8272\u4e0e\u68b3\u5b50\u7684\u6761\u7eb9\u4e0d\u8054\u901a\u3002\n2. \u63a5\u8fd1\u8fb9\u6846\u4f4d\u7f6e\uff08\u7b2c $2$ \u548c\u7b2c $n-1$ \u884c\uff09\u7684\u683c\u5b50\u4e0d\u8054\u901a\u3002\n3. \u7ea2\u8272\u68b3\u5b50\u6761\u7eb9\u4e0d\u8054\u901a\u3002\n\n\u56fe 3 \u7684\u4e09\u4e2a\u4f8b\u5b50\u5206\u522b\u5bf9\u5e94\u4e86\u4e0a\u9762\u7684\u4e09\u79cd\u4e0d\u5408\u6cd5\u60c5\u51b5\uff1a\n\n![\u56fe 3](https://pic.imgdb.cn/item/62b6c4de09475431293df46c.png)\n\n~~\u4f60\u95ee\u6211\u8fd9\u4e9b\u4f8b\u5b50\u90fd\u662f\u600e\u4e48\u6765\u7684\uff1fWA on test 1,2,3,17\u3002~~\n\n\u5b9e\u9645\u4e0a\u8fd9\u4e09\u79cd\u60c5\u51b5\u90fd\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u8c03\u6574\u5b9e\u73b0\uff1a\n\n1. \u4f60\u628a\u4e0b\u9762\u4e5f\u53d8\u6210\u84dd\u8272\u4e0d\u884c\u5417\uff1f\n2. \u56e0\u4e3a\u4e0a/\u4e0b\u90e8\u5206\u7684\u84dd\u8272\u662f\u8fde\u901a\u7684\uff0c\u76f4\u63a5\u628a\u9053\u8def\u6253\u901a\u5c31\u53ef\u4ee5\u4e86\u3002\n3. \u663e\u7136\u628a\u84dd\u8272\u90fd\u8fde\u8d77\u6765\u4e4b\u540e\uff0c\u6253\u7a7f\u4e00\u4e2a\u84dd\u8272\u6761\u7eb9\u5c31\u53ef\u4ee5\u8fde\u63a5\u8d77\u6765\u3002\n\n\u6ce8\u610f\u8fd9\u4e09\u79cd\u8c03\u6574\u7684\u987a\u5e8f\u3002\n\n\uff08\u8bf7\u65f6\u523b\u6ce8\u610f `BWBW` \u7684\u60c5\u51b5\u65e9\u5c31\u88ab\u5224\u6389\u4e86\uff0c\u5728\u8fd9\u91cc\u662f\u4e0d\u5b58\u5728\u7684\u3002\uff09\n\n\u4e3b\u8981\u7684\u95ee\u9898\u662f\u8fd9\u4e09\u4e2a\uff0c\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u7410\u788e\u7684\u7ec6\u8282\u9700\u8981\u8003\u8651\u3002\u4e2a\u4eba\u611f\u89c9\u5c31\u53ea\u51ed\u8fd9\u4e2a\u7ec6\u8282\u96be\u5ea6\u90fd\u80fd\u503c\u8fd9\u4e2a 3500 \u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nbool Begin;\nconst int max_n=502;\ninline int read(){\n    int x=0;bool w=0;char c=getchar();\n    while(c<'0' || c>'9') w|=c=='-',c=getchar();\n    while(c>='0' && c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    return w?-x:x;\n}\ninline void write(int x){\n    putchar(x==2?'B':'W');\n}\ninline int reads(){\n    char c=getchar();\n    while(c!='B' && c!='W' && c!='.') c=getchar();\n    if(c=='B') return 2;\n    if(c=='W') return 3;\n    return 0;\n}\n\nint n,m,cntr;\nint a[max_n][max_n],ans[max_n][max_n];\n\nint Tmp[max_n][max_n];\ninline void rotate(){\n    for(register int i=1;i<=n;++i)\n        for(register int j=1;j<=m;++j)\n            Tmp[i][j]=a[i][j];\n    for(register int i=1;i<=n;++i)\n        for(register int j=1;j<=m;++j)\n            a[j][n-i+1]=Tmp[i][j];\n    for(register int i=1;i<=n;++i)\n        for(register int j=1;j<=m;++j)\n            Tmp[i][j]=ans[i][j];\n    for(register int i=1;i<=n;++i)\n        for(register int j=1;j<=m;++j)\n            ans[j][n-i+1]=Tmp[i][j];\n    swap(n,m),++cntr;\n}\ninline void clear(){\n    cntr=0;\n    for(register int i=0;i<=n;++i)\n        for(register int j=0;j<=m;++j)\n            a[i][j]=ans[i][j]=a[j][i]=ans[j][i]=0;\n}\n\ninline int calc(){\n    int res=0;\n    for(register int p=1;p<=2;++p){\n        for(register int i=2;i<=m;++i)\n            if(!ans[1][i])\n                ans[1][i]=ans[1][i-1];\n        for(register int i=2;i<=n;++i)\n            if(!ans[i][m])\n                ans[i][m]=ans[i-1][m];\n        for(register int i=m-1;i;--i)\n            if(!ans[n][i])\n                ans[n][i]=ans[n][i+1];\n        for(register int i=n-1;i;--i)\n            if(!ans[i][1])\n                ans[i][1]=ans[i+1][1];\n        if(!ans[1][1])\n            ans[1][1]=2;\n    }\n    for(register int i=2;i<=m;++i)\n        if(ans[1][i]!=ans[1][i-1])\n            ++res;\n    for(register int i=2;i<=n;++i)\n        if(ans[i][m]!=ans[i-1][m])\n            ++res;\n    for(register int i=m-1;i;--i)\n        if(ans[n][i]!=ans[n][i+1])\n            ++res;\n    for(register int i=n-1;i;--i)\n        if(ans[i][1]!=ans[i+1][1])\n            ++res;\n    return res;\n}\n\ninline bool Nice(){\n    bool ok=0;\n    for(register int i=1;i<=n;++i){\n        if(ans[i][1]!=ans[1][1])\n            return 0;\n        if(i>1 && i<n && ans[i][m]!=ans[1][1])\n            ok=1;\n    }\n    return ok;\n}\n\nint Red,Blue;\n\ninline void findroad(int x,int y){\n    if(ans[x-1][y]==Red || ans[x+1][y]==Red || ans[x][y+1]==Red) return;\n    int X1=(x==2?1:n);\n    if(y<=m-2 && ans[X1][y+2]==Red){\n        ans[X1][y]=ans[X1][y+1]=Red;\n        return;\n    }\n    int X2=(x==2?2:n-1);\n    if(y<=m-2 && ans[X2][y+2]==Red){\n        ans[X2][y+1]=Red;\n        return;\n    }\n    int X3=(x==2?3:n-2),X4=(x==2?4:n-3);\n    if(a[X4][y]!=Blue){\n        ans[X3][y]=Red;\n        return;\n    }\n    int Y=(y<=m-2?y+1:y-1);\n    ans[X2][Y]=ans[X3][Y]=Red;\n}\n\ninline void bigroad(int x){\n    for(register int j=2;j<=4;++j){\n        bool ok=1;\n        for(register int i=x-1;i<=x+2;++i)\n            if(a[i][j]==Blue){\n                ok=0;\n                break;\n            }\n        if(ok){\n            ans[x][j]=ans[x+1][j]=Red;\n            return;\n        }\n    }\n    for(register int i=x-1;i<=x+2;++i)\n        if(!a[i][3])\n            ans[i][3]=Red;\n    if(a[x-1][3]){\n        ans[x-1][2]=Blue,\n        ans[x][4]=Red;\n    }\n    if(a[x+2][3]){\n        ans[x+2][2]=Blue,\n        ans[x+1][4]=Red;\n    }\n    if(a[x][3] || a[x+1][3]){\n        ans[x][2]=ans[x+1][2]=Red;\n    }\n}\n\ninline void buildroad(){\n    int fr=0,ls=0;\n    for(register int i=1;i<=n;++i)\n        if(ans[i][m]==Red){\n            if(!fr) fr=i;\n            ls=i;\n        }\n    if(!fr || (ls>3 && fr<n-2)) return;\n    if(ls<=3 && a[4][m-1]==Blue){\n        ans[3][m]=ans[4][m]=ans[5][m]=Red;\n        return;\n    }\n    if(fr>=n-2 && a[n-3][m-1]==Blue){\n        ans[n-4][m]=ans[n-3][m]=ans[n-2][m]=Red;\n        return;\n    }\n    int x=(ls<=3?2:n-2);\n    for(register int i=x;i<=x+1;++i)\n        for(register int j=m-1;j<=m;++j)\n            if(!a[i][j])\n                ans[i][j]=Red;\n}\n\nbool End;\n#define File \"\"\nsigned main(){\n    // #ifndef ONLINE_JUDGE\n    // freopen(File \".in\",\"r\",stdin);\n    // freopen(File \".out\",\"w\",stdout);\n    // #endif\n    for(register int T=read();T;--T,clear()){\n        n=read(),m=read();\n        for(register int i=1;i<=n;++i)\n            for(register int j=1;j<=m;++j)\n                a[i][j]=ans[i][j]=reads();\n        int tmp=calc();\n        if(tmp>=4){\n            puts(\"NO\");\n            continue;\n        }\n        if(tmp>0) while(!Nice()) rotate();\n        Blue=ans[1][1],Red=Blue^1;\n        for(register int i=2;i<n;++i)\n            for(register int j=2;j<m;++j)\n                if(!a[i][j])\n                    ans[i][j]=(i%4>1?Blue:Red);\n        for(register int i=1;i<n;++i)\n            if(ans[i][m-1]==ans[i+1][m] && ans[i+1][m-1]==ans[i][m] && ans[i][m]!=ans[i+1][m]){\n                if(!a[i][m]) ans[i][m]^=1;\n                else ans[i+1][m]^=1;\n            }\n        buildroad();\n        for(register int i=2;i<m;++i){\n            if(a[2][i]==Red) findroad(2,i);\n            if(a[n-1][i]==Red) findroad(n-1,i);\n        }\n        for(register int i=6;i<=n-6;i+=4)\n            if(ans[i][m]==Blue || ans[i+1][m]==Blue)\n                bigroad(i);\n        while(cntr%4!=0) rotate();\n        puts(\"YES\");\n        for(register int i=1;i<=n;++i){\n            for(register int j=1;j<=m;++j)\n                write(ans[i][j]);\n            putchar('\\n');\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1656145853,
        "uid": 181776,
        "name": "_Arahc_",
        "ccfLevel": 7,
        "title": "CF1667F Yin Yang"
    }
]