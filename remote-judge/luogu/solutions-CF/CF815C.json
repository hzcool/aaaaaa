[
    {
        "content": "\u9898\u76ee\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u60f3\u4f18\u5316\u5374\u4e0d\u5bb9\u6613\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u5217\u51faDP\u65b9\u7a0b\uff0c\u4e5f\u5c31\u662f\u8003\u8651\u67d0\u4e2a\u4f18\u60e0\u5238\u662f\u5426\u4f7f\u7528\u6765\u8f6c\u79fb\u72b6\u6001\u3002\u5b83\u4f7f\u7528\u4e86\uff0c\u90a3\u4e48\u4f9d\u8d56\u5b83\u7684\u4f18\u60e0\u5238\u53ef\u4f7f\u7528\u53ef\u4e0d\u4f7f\u7528\uff1b\u5b83\u6ca1\u4f7f\u7528\uff0c\u90a3\u4e48\u4f9d\u8d56\u5b83\u7684\u4f18\u60e0\u5238\u5c31\u4e0d\u80fd\u4f7f\u7528\u3002\u53c2\u8003@[feng_chengjie](https://www.luogu.org/space/show?uid=36294) \u7684\u9898\u89e3\uff0c\u8bbedp[u][j][0/1]\u662f\u4ee5u\u4e3a\u6839\u5b50\u6811\u4e2d,u\u7528\u6216\u8005\u4e0d\u7528\u4f18\u60e0\u5238\u65f6,\u9009j\u4ef6\u7269\u54c1\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7DP\u65b9\u7a0b\uff1a\n\n$$dp[u][sum][1]=\\min(dp[u][sum][1],dp[u][i][1]+dp[son][sum-i][1])$$\n$$dp[u][sum][1]=\\min(dp[u][sum][1],dp[u][i][1]+dp[son][sum-i][0])$$\n$$dp[u][sum][0]=\\min(dp[u][sum][0],dp[u][i][0]+dp[son][sum-i][0])$$\n\n\u901a\u8fc7\u679a\u4e3e\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5373\u53ef\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5b83\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2)$\uff0c\u800c\u4e14\u5728\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e2a\u8282\u70b9\u8f6c\u79fb\u5b8c\u6bd5\u4e4b\u540e\u5176DP\u6570\u7ec4\u662f\u6ca1\u7528\u7684\uff0c\u4e5f\u5c31\u662f\u8fd9\u6837\u6d6a\u8d39\u4e86\u5f88\u591a\u7a7a\u95f4\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u67d0\u4e2a\u513f\u5b50DP\u5b8c\u6bd5\u4e4b\u540e\uff0c\u91ca\u653e\u6389\u8be5\u513f\u5b50\u5360\u7528\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528vector\u5b9e\u73b0\u3002\n\n\u8003\u8651\u5176\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u6700\u574f\u60c5\u51b5\uff0c\u6ce8\u610f\u5230\u6211\u4eec\u6bcf\u6b21\u90fd\u662f\u5728DP\u5b8c\u5b50\u6811\u4e4b\u540e\u624d\u5bf9\u8be5\u8282\u70b9\u6269\u5145\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u8282\u70b9\u81f3\u5c11\u8981\u6709\u4e24\u4e2a\u513f\u5b50\u624d\u80fd\u5bf9\u7a7a\u95f4\u4ea7\u751f\u4e00\u5b9a\u7684\u201c\u6d6a\u8d39\u201d\uff0c\u800c\u6bcf\u6b21\u6269\u5145\u7684\u7a7a\u95f4\u90fd\u662f\u8be5\u8282\u70b9\u524d\u9762\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u5bf9\u4e8e\u5f53\u524d\u513f\u5b50\u6765\u8bf4\uff0c\u5b83\u6269\u5145\u7684\u7a7a\u95f4\u53c8\u662f\u5b83\u7684\u5f53\u524d\u8003\u8651\u7684\u513f\u5b50\u7684\u5de6\u5144\u5f1f\uff0c\u800c\u6211\u4eec\u4e0a\u8ff0\u8003\u8651\u7684\u8282\u70b9\u5747\u4e92\u4e0d\u76f8\u540c\uff0c\u56e0\u6b64\u7d2f\u79ef\u8d77\u6765\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$\u3002\u5f53\u7136\uff0cvector\u53ef\u80fd\u6709\u70b9\u5c0f\u5e38\u6570\uff0c\u4f46\u662f\u5b9e\u9645\u6d4b\u8bd5\u4e2d\u65f6\u95f4\u4f1a\u6bd4\u4f18\u5316\u524d\u66f4\u5feb\u3002\n\n\u5bf9\u4e8evector\u7684\u91ca\u653e\u7a7a\u95f4\u7684\u64cd\u4f5c\uff0c\u4e0d\u662f\u4ec0\u4e48clear\u5c31\u80fd\u89e3\u51b3\u7684\u4e8b\u3002\u56e0\u4e3aclear\u770b\u4e0a\u53bb\u7a7a\u95f4\u6e05\u7a7a\u4e86\uff0c\u5b9e\u9645\u4e0a\u6307\u9488\u8fd8\u5728\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5\u3002\u5b9e\u8d28\u4e0a\u7684\u91ca\u653e\u7a7a\u95f4\u662f\u7528\u3010`vector<\u7c7b\u578b>().swap(\u8981\u91ca\u653e\u7a7a\u95f4\u7684vector\u53d8\u91cf)`\u3011\uff0c\u6269\u5145\u7a7a\u95f4\u7528\u3010`\u53d8\u91cf.resize(\u6269\u5145\u5230\u591a\u5927\u7a7a\u95f4,\u586b\u5145\u5185\u5bb9)`\u3011\u3002\u6211\u7684\u7a0b\u5e8f\u6700\u6162\u70b9\u8017\u65f6187ms\uff0c\u6700\u5927\u7a7a\u95f4\u6d88\u8017\u4e3a1.27MB\u3002\n\n```cpp\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nvector<int> G[5005];\nstruct F\n{\n    long long y, n;\n};\nvector<F> f[5005];\nint c[5005],`d[5005], si[5005], n, q, tot;\n\ninline void add(int a, int b)\n{\n    G[a].push_back(b);\n}\n\nvoid dfs(int x)\n{\n    int s = G[x].size(), e;\n    long long rr, ss, tt;\n    si[x] = 1;\n    //f[x].insert(f[x].begin(), n+1, (F){998244353998244353, 998244353998244353});\n    f[x].resize(2);\n    f[x][0].n = 0;///\u4ec0\u4e48\u90fd\u4e0d\u7528\n    f[x][0].y = 998244353998244353;\n    f[x][1].y = c[x] - d[x];\n    f[x][1].n = c[x];\n    ///\u6ca1\u6709\u4f7f\u7528\u4f18\u60e0\u5238\n    ///\u4f7f\u7528\u4e86\u4f18\u60e0\u5238\n    for(register int i = 0; i < s; i += 1)\n    {\n        e = G[x][i];\n        dfs(e);\n        f[x].resize(si[x]+si[e]+1, (F){998244353998244353, 998244353998244353});\n        for(register int j = si[x]; j >= 0; j -= 1)\n            for(register int k = 0; k <= si[e]; k += 1)\n            {\n                rr = f[x][j].n+f[e][k].n;\n                ss = f[x][j]`y+f[e][k].n;\n                tt = f[x][j].y+f[e][k].y;\n                if(rr <= tot && f[x][j+k].n > rr)\n                    f[x][j+k].n = rr;\n                if(ss <= tot && f[x][j+k].y > ss)\n                    f[x][j+k].y = ss;\n                if(tt <= tot && f[x][j+k].y > tt)\n                    f[x][j+k].y = tt;\n            }\n        vector<F>().swap(f[e]);\n        si[x] += si[e];\n    }\n    //if(!s)\n    //    f[x].resize(f[x].begin()+2, n-1, (F){998244353998244353, 998244353998244353});\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &tot);\n    scanf(\"%d%d\", &c[1], &d[1]);\n    for(register int i = 2; i <= n; i += 1)\n    {\n        scanf(\"%d%d%d`\", &c[i], &d[i], &q);\n        add(q, i);\n    }\n    dfs(1);\n    for(register int i = n; i; i -= 1)\n    {\n        printf(\"%lld %lld\\n\", f[1][i].y, f[1][i].n);\n        if(f[1][i].y <= tot || f[1][i].n <= tot)\n        {\n            printf(\"%d\", i);\n            return 0;\n        }\n    }\n    printf(\"0`\");//might wrong at here\n    return 0;\n}\n```\n-\n\n-\n\n-\n\n\u6284\u9898\u89e3\u7684\u4f60\u7edd\u5bf9\u8fc7\u4e0d\u4e86\u3002",
        "postTime": 1539314844,
        "uid": 50871,
        "name": "Euler_Pursuer",
        "ccfLevel": 6,
        "title": "CF815C\u7684\u7a7a\u95f4\u4f18\u5316"
    },
    {
        "content": "\u9898\u76ee\n-------\n\u9898\u610f:\n\u6709n\u4ef6\u5546\u54c1,\u6bcf\u4ef6\u6709\u4ef7\u683cci,\u4f18\u60e0\u5238di,\u5bf9\u4e8ei>=2,\u4f7f\u7528di\u7684\u6761\u4ef6\u4e3a:xi\u7684\u4f18\u60e0\u5238\u9700\u8981\u88ab\u4f7f\u7528,\u95ee\u521d\u59cb\u91d1\u94b1\u4e3ab\u65f6 \u6700\u591a\u80fd\u4e70\u591a\u5c11\u4ef6\u5546\u54c1? n<=5000,ci,di,b<=1e9\n\n\u9898\u89e3\n---\n\u8bbe$dp[u][j][0/1]$\u662f\u4ee5u\u4e3a\u6839\u5b50\u6811\u4e2d,u\u7528\u6216\u8005\u4e0d\u7528\u4f18\u60e0\u5238\u65f6,\u9009j\u4ef6\u7269\u54c1\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7  \n\u6613\u5f97\uff1a\n$dp[u][sum][1]=min(dp[u][sum][1],dp[u][i][1]+dp[son][sum-i][1])$       \n$dp[u][sum][1]=min(dp[u][sum][1],dp[u][i][1]+dp[son][sum-i][0])$\n$dp[u][sum][0]=min(dp[u][sum][0],dp[u][i][0]+dp[son][sum-i][0])$\n\u6bcf\u6b21\u679a\u4e3e\u5b50\u6811\u8fdb\u884c\u66f4\u65b0\uff0c\u628a\u5df2\u7ecf\u8003\u8651\u8fc7\u7684\u524d\u9762\u6240\u6709\u5b50\u6811\u770b\u505a\u4e00\u4e2a\u6574\u4f53\uff0c\u4e0e\u5f53\u524d\u5b50\u6811\u5171\u540c\u5212\u5206sum\u4e2a\u8d21\u732e\n\n\u6709\u7ec6\u8282\u770b\u4ee3\u7801\n\n\u4ee3\u7801\n---\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <stack>\n#include <queue>\nusing namespace std;\nconst int maxn=5005;\nstruct point \n{\n\tint to;\n\tint nxt;\n}edge[maxn];\nstruct nod\n{\n\tint aa;\n\tint pos;\n}ah[maxn];\nint n,tot,idx;\nint ncon;\nlong long mon;\nlong long a[maxn],b[maxn],tmp[maxn];\nint is[50],c[maxn],head[maxn];\nlong long f[maxn][maxn][2];\nint siz[maxn];\nint bin[20];\nbool subt_2,ch[maxn];\nstack<int> st;\n\ninline void add(int u,int v)\n{\n\ttot++;\n\tedge[tot].nxt=head[u];\n\tedge[tot].to=v;\n\thead[u]=tot;\n}\n\n\nvoid DP(int x)\n{\n\tsiz[x]=1;\n\tf[x][0][0]=0;\n\tf[x][1][0]=a[x];\n\tf[x][1][1]=a[x]-b[x];\n\tfor(int i=head[x];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tDP(v);\n\t\tfor(int i=siz[x];i>=0;i--)//this represents all the sons before\n\t\t\tfor(int j=0;j<=siz[v];j++)\n\t\t\t{\n\t\t\t\tf[x][i+j][0]=min(f[x][i+j][0],f[x][i][0]+f[v][j][0]);\t\n\t\t\t\tf[x][i+j][1]=min(f[x][i+j][1],f[x][i][1]+f[v][j][1]);\n\t\t\t\tf[x][i+j][1]=min(f[x][i+j][1],f[x][i][1]+f[v][j][0]);\n\t\t\t}\n\t\tsiz[x]+=siz[v];//prepare for next son_tree\n\t}\n}\n\nvoid solve()\n{\n\tint M=0;\n\tmemset(f,0x3f3f3f3f,sizeof(f));\n\tDP(1);\n\tfor(int i=n;i>=1;i--)\n\t\tif(f[1][i][1]<=mon || f[1][i][0]<=mon)\n\t\t\t{M=i; break;}\n\tprintf(\"%d\",M);\n}\n\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&mon);\n\tcin>>a[1]>>b[1];\n\tsubt_2=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tcin>>a[i]>>b[i]>>c[i];\n\t\tif(c[i]!=i-1) subt_2=0;\n\t\tadd(c[i],i);\n\t}\n\tsolve();\n\treturn 0;\n}\n\n\n```\n\n",
        "postTime": 1517747540,
        "uid": 36294,
        "name": "feng_chengjie",
        "ccfLevel": 0,
        "title": "CF815C Karen and Supermarket\u3010\u6811\u5f62DP\u3011"
    },
    {
        "content": "[CF815C Karen and Supermarket](https://www.luogu.com.cn/problem/CF815C)\n\n\u539f\u9898\u7f51\u5740\uff1a[Codeforces Round #419 (Div. 1)C. Karen and Supermarket](https://codeforces.com/problemset/problem/815/C)\n\n\u5f88\u660e\u663e\u662f\u5728\u96f6\u4e00\u80cc\u5305\u52a0\u7ef4\u64cd\u4f5c\uff0c $DP$ \u7684\u601d\u8def\u5f88\u597d\u60f3\uff0c\u5047\u8bbe\u4e00\u4e2a\u6570\u5b57\uff0c\u5b58\u50a8\u5728\u9009\u7b2c\u51e0\u4e2a\u7269\u54c1\u65f6\uff0c\u5df2\u7ecf\u6709\u51e0\u4e2a\u88ab\u9009\u4e86\uff0c\u4e14\u8003\u8651\u7528\u4e0d\u7528\u4f18\u60e0\u5238\uff0c\u5373\uff1a\n\n$$\ndp[i][sum][0/1]\n$$\n\n\u4f46\u662f\u6570\u636e\u91cf\u7565\u5927\uff0c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\uff0c\u8981\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\u3002\u8003\u8651\u5176\u6709 $n$ \u4ef6\u7269\u54c1\uff0c $n-1$ \u4e2a\u4f18\u60e0\u5238\u4f7f\u7528\u6761\u4ef6\uff0c\u4e8e\u662f\u8003\u8651\u6811\u5f62 $DP$ \u3002\n\n\u9488\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u53d1\u73b0\u7684\u5b50\u6811\u6211\u53ef\u4ee5\u9009\u62e9\u90e8\u5206\u8282\u70b9\u4e70\u5165\uff0c\u5bf9\u4e8e\u539f\u6709\u5b50\u6811\u4e5f\u662f\u540c\u7406\uff0c\u6240\u4ee5\u6784\u5efa\u4e00\u4e2a\u4ee5 $1$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\uff0c\u540c\u65f6\u4e5f\u8981\u8bb0\u5f55\u5b50\u6811\u5927\u5c0f\u3002\n\n\u800c\u8be5\u70b9\u8981\u662f\u8981\u4f7f\u7528\u4f18\u60e0\u5238\uff0c\u5219\u5b57\u6570\u5185\u81f3\u5c11\u6709\u4e00\u4e2a\u5b50\u6811\u6709\u7528\u4f18\u60e0\u52b5\u3002\n\n\u7ed3\u5408\u8fd9\u4e2a\u601d\u8def\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$$\ndp[u][i+j][0] = \\min(dp[u][i+j][0],dp[u][i][0]+dp[v][j][0])\n$$\n$$\ndp[u][i+j][1] = \\min(dp[u][i+j][1],dp[u][i][1]+dp[v][j][1])\n$$\n$$\ndp[u][i+j][1] = \\min(dp[u][i+j][1],dp[u][i][1]+dp[v][j][0])\n$$\n\n# code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int SIZE = 5050;\n\ninline int read()\n{\n\tint x = 0;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9')\n\t{\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn x;\n}\n\nint n,money,num_edge;\nint num[SIZE],low[SIZE],son[SIZE],head[SIZE],siz[SIZE];\nint dp[SIZE][SIZE][2];\nstruct node\n{\n\tint to,nxt;\n};\nnode edge[SIZE];\n\ninline void add(int u,int v)\n{\n\tedge[++num_edge].to = v;\n\tedge[num_edge].nxt = head[u];\n\thead[u] = num_edge;\n}\n\nvoid dfs(int u)\n{\n\tsiz[u] = 1;\n\tdp[u][0][0] = 0;\n\tdp[u][1][0] = num[u];\n\tdp[u][1][1] = num[u] - low[u];\n\tfor (int i = head[u]; i ; i = edge[i].nxt)\n\t{\n\t\tint v = edge[i].to;\n\t\tdfs(v);\n\t\tfor (int j = siz[u]; j >= 0; --j)\n\t\t{\n\t\t\tfor (int k = 0; k <= siz[v]; ++k)\n\t\t\t{\n\t\t\t\tdp[u][j+k][0] = min(dp[u][j+k][0],dp[u][j][0]+dp[v][k][0]);\n\t\t\t\tdp[u][j+k][1] = min(dp[u][j+k][1],dp[u][j][1]+dp[v][k][1]);\n\t\t\t\tdp[u][j+k][1] = min(dp[u][j+k][1],dp[u][j][1]+dp[v][k][0]);\n\t\t\t}\n\t\t}\n\t\tsiz[u] += siz[v];\n\t}\n}\n\nint main()\n{\n\tn = read();money = read();\n\tnum[1] = read();low[1] = read();\n\tfor (int i = 2; i <= n; ++i)\n\t{\n\t\tnum[i] = read();low[i] = read();son[i] = read();\n\t\tadd(son[i],i);\n\t}\n\tmemset(dp,0x3f,sizeof(dp));\n\tdp[1][1][1] = num[1] - low[1];\n\tdfs(1);\n\tfor (int i = n; i >= 1; --i)\n\t{\n\t\tif (dp[1][i][1] <= money || dp[1][i][0] <= money)\n\t\t{\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"0\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1603931924,
        "uid": 415231,
        "name": "nomonick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF815C \u3010Karen and Supermarket\u3011"
    },
    {
        "content": "\n\u56e0\u4e3a\u4f7f\u7528\u4f18\u60e0\u52b5\u5c31\u5fc5\u987b\u4e70\u8fd9\u4ef6\u5546\u54c1\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4f18\u60e0\u52b5\u7684\u5173\u7cfb\u770b\u6210\u4e00\u68f5\u6811\u3002\n\n\u4ee4 $dp[u][i][0/1]$ \u8868\u793a \u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811 \uff0c \u8d2d\u4e70 $i$ \u4ef6\u5546\u54c1 \uff0c $u$ \u662f\u5426\u4f7f\u7528\u4f18\u60e0\u52b5\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u8fb9\u754c\u6761\u4ef6\uff1a$dp[u][0][0]=0,dp[u][1][0]=c[u],dp[u][1][1]=c[u]-d[u]$\n\n\u6ce8\u610f\uff1a$dp[u][0][1]$ \u662f\u4e0d\u6210\u7acb\u7684\uff0c\u56e0\u4e3a\u4f7f\u7528\u4f18\u60e0\u5238\u5c31\u5fc5\u987b\u8d2d\u4e70\u5546\u54c1\uff0c\u5176\u4f59\u8bbe\u4e3a\u6781\u5927\u503c\u3002\n\n\u7136\u540e\u6709\u5982\u4e0b\u8f6c\u79fb\uff1a\n\n$$\\begin{cases}\ndp[ u ][ j + k ][ 0 ] = \\min( dp[ u ][ j ][ 0 ] + dp[ v ][ k ][ 0 ] )\\\\\ndp[ u ][ j + k ][ 1 ] = \\min( dp[ u ][ j ][ 1 ] + \\min( dp[ v ][ k ][ 0 ] , dp[ v ][ k ][ 1 ] ) )\n\\end{cases}$$\n\n\u6700\u540e\u770b\u6ee1\u8db3 $\\min(dp[1][k][0],dp[1][k][1])\\le b$ \u7684\u6700\u5927\u7684 $k$ \u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\nusing namespace std;\n\ntemplate<typename _T>\nvoid Read( _T &x ) {\n\tx = 0; int f = 1;\n\tchar s = getchar( );\n\tfor( ; s < '0' || s > '9' ; s = getchar( ) ) f = s == '-' ? -f : f;\n\tfor( ; s >= '0' && s <= '9' ; s = getchar( ) ) x = x * 10 + s - '0';\n\tx *= f;\n}\ntemplate<typename _T>\nvoid Write( _T x ) {\n\tif( x < 0 ) putchar('-') , x = -x;\n\tif( x >= 10 ) Write( x / 10 );\n\tputchar( x % 10 + '0' );\n} \n\nconst int MAXN = 5000;\nint n , m , fa , c[ MAXN + 5 ] , d[ MAXN + 5 ] , Size[ MAXN + 5 ];\nint dp[ MAXN + 5 ][ MAXN + 5 ][ 2 ];\nvector< int > Graph[ MAXN + 5 ];\n\nvoid dfs( int u ) {\n\tSize[ u ] = 1;\n\tdp[ u ][ 0 ][ 0 ] = 0 , dp[ u ][ 1 ][ 0 ] = c[ u ];\n\tdp[ u ][ 1 ][ 1 ] = c[ u ] - d[ u ];\n\t\n\tfor( int i = 0 ; i < Graph[ u ].size( ) ; i ++ ) {\n\t\tint v = Graph[ u ][ i ];\n\t\tdfs( v ); \n\t\t\n\t\tfor( int j = Size[ u ] ; j >= 0 ; j -- ) //\u6ce8\u610f\u5faa\u73af\u987a\u5e8f\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\n\t\t\tfor( int k = 0 ; k <= Size[ v ] ; k ++ ) {\n\t\t\t\tdp[ u ][ j + k ][ 0 ] = min( dp[ u ][ j + k ][ 0 ] , dp[ u ][ j ][ 0 ] + dp[ v ][ k ][ 0 ] );\n\t\t\t\tdp[ u ][ j + k ][ 1 ] = min( dp[ u ][ j + k ][ 1 ] , dp[ u ][ j ][ 1 ] + min( dp[ v ][ k ][ 0 ] , dp[ v ][ k ][ 1 ] ) );\n\t\t\t}\n\t\tSize[ u ] += Size[ v ];\n\t}\n}\n\nint main( ) {\n\tRead( n ) , Read( m );\n\tfor( int i = 1 ; i <= n ; i ++ ) {\n\t\tRead( c[ i ] ) , Read( d[ i ] );\n\t\tif( i >= 2 ) {\n\t\t\tRead( fa );\n\t\t\tGraph[ fa ].push_back( i );\n\t\t}\n\t}\n\t\n\tmemset( dp , 0x3f , sizeof( dp ) );\n\tdfs( 1 );\n\t\n\tfor( int i = n ; i >= 0 ; i -- )\n\t\tif( dp[ 1 ][ i ][ 0 ] <= m || dp[ 1 ][ i ][ 1 ] <= m ) {\n\t\t\tWrite( i ) , putchar('\\n');\n\t\t\treturn 0;\n\t\t} \n\treturn 0;\n}\n```\n",
        "postTime": 1578059348,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF815C \u3010Karen and Supermarket\u3011"
    },
    {
        "content": "# CF815C Karen and Supermarket\n\n\u6811\u4e0aDP\u3002\n\n\u9996\u5148\uff0c\u8003\u8651\u5efa\u8fb9\u3002\u663e\u7136\u8fde\u4e00\u6761$x[i]->i$\u7684\u8fb9\u3002\n\n\u5176\u6b21\uff0c\u8003\u8651DP\u3002\u90a3\u4e48\u6709\u6570\u7ec4$f[i][j][k]$\u8868\u793a**\u4ee5$i$\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u62e9$j$\u4ef6\u7269\u54c1\u7684\u4ee3\u4ef7\uff1b$k$\u4ee3\u8868\u662f\u5426\u4f7f\u7528\u6298\u6263**\u3002\n\n\u6700\u540e\u770b\u8f93\u51fa\u3002\u90a3\u5c31\u770b\u4ee5$1$\u4e3a\u6839\u8282\u70b9\uff0c\u9009\u62e9$ans$\u4ef6\u7269\u54c1\uff0c\u65e0\u8bba\u6253\u4e0d\u6253\u6298\uff0c\u5982\u679c\u4ee3\u4ef7\u5c0f\u4e8e$b$\uff0c\u5219\u53ef\u884c\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u4f7f$ans$\u5c3d\u91cf\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4ece$n$\u5230$1$\u904d\u5386\u5bfb\u627e\u7b54\u6848\u3002\n```cpp\n#include<bits/stdc++.h>\n#define N 5010\n\nusing namespace std;\n\nint n,b,cnt,ans;\nint c[N],d[N],x[N],head[N],siz[N],f[N][N][2]; //f[i][j][k] \u4ee5i\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u62e9j\u4ef6\u7269\u54c1\u7684\u4ee3\u4ef7\uff1bk\u4ee3\u8868\u662f\u5426\u4f7f\u7528\u6298\u6263\n\nstruct node {\n\tint nxt,to;\n}edge[N];\n\nvoid addEdge(int u,int v) {\n\tedge[++cnt]=(node){head[u],v};\n\thead[u]=cnt;\n\treturn;\n}\n\nvoid Read() {\n\tscanf(\"%d%d%d%d\",&n,&b,&c[1],&d[1]);\n\tfor(int i=2;i<=n;i++) {\n\t\tscanf(\"%d%d%d\",&c[i],&d[i],&x[i]);\n\t\taddEdge(x[i],i);\n\t}\n\treturn;\n}\n\nvoid Init() {\n\tmemset(f,0x3f,sizeof(f));\n\treturn;\n}\n\nvoid DP(int x) {\n\tsiz[x]=1;\n\tf[x][0][0]=0;\n\tf[x][1][0]=c[x];\n\tf[x][1][1]=c[x]-d[x];\n\tfor(int i=head[x];i;i=edge[i].nxt) {\n\t\tint v=edge[i].to;\n\t\tDP(v);\n\t\tfor(int i=siz[x];i>=0;i--) {\n\t\t\tfor(int j=0;j<=siz[v];j++) {\n\t\t\t\t//\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\t\t\t\tf[x][i+j][0]=min(f[x][i+j][0],f[x][i][0]+f[v][j][0]);\n\t\t\t\tf[x][i+j][1]=min(f[x][i+j][1],f[x][i][1]+f[v][j][0]);\n                f[x][i+j][1]=min(f[x][i+j][1],f[x][i][1]+f[v][j][1]);\n\t\t\t}\n\t\t}\n\t\tsiz[x]+=siz[v];\n\t}\n\treturn;\n}\n\nvoid Print() {\n\tfor(int i=n;i>=1;i--) {\n\t\tif(f[1][i][0]<=b||f[1][i][1]<=b) {\n\t\t\tans=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn;\n}\n\nint main()\n{\n\tRead();\n\tInit();\n\tDP(1);\n\tPrint();\n\treturn 0;\n}\n```",
        "postTime": 1572082651,
        "uid": 161364,
        "name": "Walker_V",
        "ccfLevel": 0,
        "title": "CF815C Karen and Supermarket"
    },
    {
        "content": "# \u9898\u89e3\n\u4e0d\u96be\u53d1\u73b0\u9898\u76ee\u4e2d\u7684\u4f18\u60e0\u6784\u6210\u4e86\u6811\u5f62\u4f9d\u8d56\u5173\u7cfb\uff0c\u4e14\u6570\u636e\u4fdd\u8bc1\u4e86\u6bcf\u4e2a\u8282\u70b9\u7684 $fa\\leq i$\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u68f5\u4ee5 $1$ \u4e3a\u6839\u8282\u70b9\u7684\u6811\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6811\u5f62\u80cc\u5305\u3002\n\n\u4e00\u822c\u6811\u5f62\u80cc\u5305\u7b2c\u4e8c\u7ef4\u7684\u72b6\u6001\u8bbe\u6210\u82b1\u8d39\uff0c\u4f46\u662f\u56e0\u4e3a $b$ \u5f88\u5927\uff0c\u6240\u4ee5\u663e\u7136\u4e0d\u80fd\u8fd9\u6837\u8bbe\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u6bcf\u4e2a\u7269\u54c1\u53ea\u80fd\u4e70\u4e00\u6b21\uff0c\u4e14\u6211\u4eec\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u7269\u54c1\u7684\u8d21\u732e\u90fd\u8bb0\u4e3a $1$\uff0c \u6240\u4ee5\u5f53\u8d21\u732e\u4e00\u5b9a\u7684\u65f6\u5019\uff0c\u82b1\u8d39\u8d8a\u5c0f\u8d8a\u4f18\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u72b6\u6001\u8bbe\u4e3a $dp[x][j]$ \u8868\u793a\u5728\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4e70 $j$ \u4e2a\u7269\u54c1\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u7136\u540e\u679a\u4e3e $dp[1][j]$ \u5982\u679c\u5b83\u7684\u82b1\u8d39\u5c0f\u4e8e $b$\uff0c\u518d\u7528 $j$ \u53bb\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u4f46\u662f\u5982\u679c\u5f53\u6839\u8282\u70b9\u4f18\u60e0\u4e4b\u540e\u7684\u4ef7\u683c\u5f88\u9ad8\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u8fd9\u68f5\u5b50\u6811\u5185\u5373\u4f7f\u5168\u90e8\u4e0d\u4f7f\u7528\u4f18\u60e0\uff0c\u4e5f\u6bd4\u6839\u8282\u70b9\u4f7f\u7528\u4f18\u60e0\u518d\u5728\u5b50\u6811\u4e2d\u4e70\u66f4\u4f18\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6839\u8282\u70b9\u4f7f\u4e0d\u4f7f\u7528\u4f18\u60e0\u662f\u6709\u533a\u522b\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u628a\u72b6\u6001\u8bbe\u8ba1\u6210 $dp[x][j][0/1]$ \u8868\u793a\u6839\u8282\u70b9\u4e0d\u4f7f\u7528\u548c\u4f7f\u7528\u4f18\u60e0\u5238\uff0c\u5728\u5305\u62ec $x$ \u7684\u5b50\u6811\u4e2d\u4e70 $j$ \u4e2a\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u5176\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f88\u663e\u7136\uff0c\u5373\uff08\u8fd9\u91cc\u628a\u53d8\u91cf\u540d\u6362\u6210\u4e86\u6211\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\uff09\uff1a\n\n$$dp[x][t][1] = min_{j = 0}^{t}(dp[x][t - j][1] + dp[y][j][1], dp[x][t - j][1] + dp[y][j][0])$$\n\n$$dp[x][t][0] = min_{j = 0}^{t}(dp[x][t - j][0] +dp[y][j][0])$$\n\n\u5176\u4e2d $t$ \u4e3a\u5012\u5e8f\u679a\u4e3e\uff0c\u4fdd\u8bc1 $dp[x][t - j]$ \u6ca1\u6709\u5148\u88ab\u66f4\u65b0\u8fc7\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u7684 $t$ \u76f4\u63a5\u4ece $n$ \u5012\u5e8f\u679a\u4e3e\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u663e\u7136\u662f $n^3$ \u7684\u3002\n\n\u56e0\u4e3a\u6bcf\u6b21\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u5df2\u7ecf\u679a\u4e3e\uff0c\u7b97\u5728\u4e86 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u8282\u70b9\u624d\u6709\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u8fd8\u6ca1\u6709\u52a0\u4e0a $siz[y]$ \u7684 $siz[x]$ \u5f00\u59cb\u679a\u4e3e\uff0c\u4f7f\u8f6c\u79fb\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a\u5408\u6cd5\u70b9\u5bf9\u6570 $n^2$\u3002\n\n\u6ce8\u610f\u521d\u59cb\u5316\u65f6\u7684\u5c0f\u7ec6\u8282\uff0c$dp[x][0][1]$ \u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u4e0d\u5e94\u8be5\u521d\u59cb\u5316\u4e3a $0$\u3002\n# \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<iostream>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 5e3 + 5;\n\nint n, m, siz[N], head[N], nex[N], to[N], c[N], d[N], tot = 1;\n\ninline void add(int x, int y) {\n\tnex[++ tot] = head[x], to[tot] = y, head[x] = tot;\n}\n\nint dp[N][N][2], ans = 0;\n\ninline void dfs(int x) {\n\tdp[x][0][0] = 0, siz[x] = 1;\n\tdp[x][1][0] = c[x], dp[x][1][1] = d[x];\n\tfor(int i = head[x], y; i; i = nex[i]) {\n\t\ty = to[i];\n\t\tdfs(y);\n\t\tfor(int t = siz[x]; ~t; t--) {\n\t\t\tfor(int j = 1; j <= siz[y]; j++) {\n\t\t\t\tdp[x][t + j][1] = min(dp[x][t + j][1], dp[x][t][1] + dp[y][j][1]);\n\t\t\t\tdp[x][t + j][1] = min(dp[x][t + j][1], dp[x][t][1] + dp[y][j][0]);\n\t\t\t\tdp[x][t + j][0] = min(dp[x][t + j][0], dp[x][t][0] + dp[y][j][0]);\n\t\t\t}\n\t\t}\n\t\tsiz[x] += siz[y];\n\t}\n}\n\ninline void read(int &x) {\n\tx = 0; int c = getchar(), f = 1;\n\tfor(; !isdigit(c); c = getchar())\n\t\tif(c == '-') f = -1;\n\tfor(; isdigit(c); c = getchar())\n\t\tx = x * 10 + c - 48;\n\tx *= f;\n}\n\nint main() {\n\tfreopen(\"shopping.in\", \"r\", stdin);\n\tfreopen(\"shopping.out\", \"w\", stdout);\n\tread(n), read(m);\n\tread(c[1]), read(d[1]);\n\td[1] = c[1] - d[1];\n\tfor(int i = 2, f; i <= n; i++) {\n\t\tread(c[i]), read(d[i]), read(f);\n\t\tadd(f, i); d[i] = c[i] - d[i];\n\t}\n\tfor(int i = 0; i <= n; i++)\n\t\tfor(int j = 0; j <= n; j++)\n\t\t\tdp[i][j][0] = dp[i][j][1] = m + 1;\n\tdfs(1);\n\tfor(int i = 0; i <= siz[1]; i++)\n\t\tif(dp[1][i][0] <= m || dp[1][i][1] <= m)\n\t\t\tans = i;\n\tcout << ans << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1634521633,
        "uid": 385145,
        "name": "\u795e\u7737\u4e4b\u6a31\u82b1",
        "ccfLevel": 4,
        "title": "CF815C Karen and Supermarket"
    }
]