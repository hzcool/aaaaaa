[
    {
        "content": "\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7b2c\u4e00\u53cd\u5e94\u80af\u5b9a\u662f\u8d2a\u5fc3\uff0c\u4f46\u662f\u5e94\u8be5\u5982\u4f55\u8d2a\u5fc3\u5462\u3002\n\n\u6709\u4eba\u53ef\u80fd\u4e00\u5f00\u59cb\u4e0e\u6211\u601d\u8def\u76f8\u540c\uff0c\u770b\u5230 $k$  \u7684\u8303\u56f4\u53ea\u67091000\uff0c \u5c31\u60f3\u5230\u5f00 $ k $ \u4e2a\u6570\u7ec4\uff0c\u6309\u7167\u5bf9 $ k $ \u53d6\u4f59\u7684\u7ed3\u679c\u5b58\u5165\u6570\u7ec4\u4e2d\uff0c\u4f46\u662f\u8fd9\u6837\u8d2a\u5fc3\u4f1a\u975e\u5e38\u590d\u6742\uff0c\u4ee3\u7801\u4e5f\u4f1a\u975e\u5e38\u96be\u5199\u3002\u4e8e\u662f\u5c31\u9700\u8981\u8f6c\u53d8\u4e00\u4e0b\u601d\u8def\uff0c\u65e2\u7136\u60f3\u5230\u4e86\u5148\u6309\u7167\u53d6\u4f59\u7684\u7ed3\u679c\u5206\u7c7b\uff0c\u90a3\u76f4\u63a5\u5c06\u53d6\u4f59\u7684\u7ed3\u679c\u5b58\u4e0b\u6765\u4f1a\u600e\u4e48\u6837\u5462\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u5c06 $a$ \u5e8f\u5217\u4e2d\u7684\u4e66\u9664 $ k $ \u7684\u7ed3\u679c\u8bb0\u5f55\u5230\u7b54\u6848\u4e2d\uff0c \u5c06\u5bf9 $k$ \u53d6\u6a21\u7684\u7ed3\u679c\u5b58\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4 $b $ \u4e2d, \u8fd9\u65f6\u6211\u4eec\u53ea\u7528\u5355\u72ec\u8003\u8651\u6570\u7ec4 $b$ \u3002 \u6570\u7ec4 $b$ \u4e2d\u4efb\u610f\u4e24\u4e2a\u6570\u76f8\u52a0\u90fd\u4e0d\u53ef\u80fd\u5927\u4e8e $2k$   \u3002 \u90a3\u4e48\u6700\u4f18\u7684\u65b9\u5f0f\u5c31\u662f\u8ba9\u5c3d\u91cf\u591a\u7684\u7ec4\u5408\u76f8\u52a0\u5927\u4e8e\u7b49\u4e8e $k$ , \u8fd9\u65f6\u5c31\u53ef\u4ee5\u7528\u53cc\u6307\u9488\uff0c \u5148\u5c06\u6570\u7ec4 $b$ \u6392\u5e8f\uff0c \u4e24\u4e2a\u6307\u9488\u4e00\u4e2a\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\uff0c \u53e6\u4e00\u4e2a\u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\uff0c \u76f4\u5230\u627e\u4e0d\u5230\u4e3a\u6b62\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u6b65\u9aa4\uff1a\n\n 1. \u5c06 $a $ \u6570\u7ec4\u53d6\u4f59\n 2. \u5bf9\u53d6\u4f59\u540e\u7684\u6570\u7ec4\u6392\u5e8f\n 3. \u53cc\u6307\u9488\u8d2a\u5fc3\n \n \n \u77e5\u9053\u6b65\u9aa4\u4e4b\u540e\u4ee3\u7801\u5c31\u975e\u5e38\u597d\u5199\u4e86\u3002\n ```cpp\n #include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define int long long\nusing namespace std;\nconst int N = 2e5 + 5;\nint t, n, k, a[N], ans;\nint b[N];\nsigned main(){\n\tscanf(\"%lld\", &t);\n\twhile(t--){\n\t\tscanf(\"%lld%lld\", &n, &k);\n\t\tans = 0;\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tscanf(\"%lld\", &a[i]);\n\t\t\tans += a[i]/k;\n\t\t\tb[i] = a[i] % k;\n\t\t}\n\t\tsort(b + 1, b + 1 + n);\n\t\tint l = 1, r = n;\n\t\twhile(l < r){\n\t\t\twhile(b[l] + b[r] < k) l++;\n\t\t\tif(b[l] + b[r] >= k && l < r) ans++, l++, r--;\n\t\t\telse break;\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n \n ```",
        "postTime": 1654678529,
        "uid": 265453,
        "name": "strange757",
        "ccfLevel": 0,
        "title": "CF1690E Price Maximization\u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a $\\left\\lfloor \\frac{a_i+a_j}{k}\\right\\rfloor=\\left\\lfloor\\frac{a_i}{k}\\right\\rfloor+\\left\\lfloor \\frac{a_j}{k}\\right\\rfloor+\\left\\lfloor \\frac{a_i\\bmod k+a_j\\bmod k}{k}\\right\\rfloor$\uff0c\u6240\u4ee5 $\\sum \\left\\lfloor\\frac{a_i}{k}\\right\\rfloor$ \u4e00\u5b9a\u5728\u7b54\u6848\u4e2d\uff0c\u6545\u53ef\u4ee5\u5148\u7b97\u51fa\u8fd9\u4e00\u90e8\u5206\uff0c\u8bbe $b_i=a_i\\bmod k$\u3002\n\n\u8003\u8651 $b_i$\uff0c\u82e5 $b_i+b_j\\ge k$\uff0c\u4f1a\u7ed9\u7b54\u6848\u8d21\u732e $1$\uff0c\u90a3\u4e48\u53ef\u4ee5\u6bcf\u6b21\u627e\u5230\u6700\u5927\u7684 $b_i$\uff0c\u8ba9\u5b83\u4e0e\u80fd\u5339\u914d\u7684\u6700\u5c0f\u7684 $b_j$ \u5339\u914d\uff0c\u82e5\u9009\u62e9\u66f4\u5927\u7684 $b_j$ \u4e0e $b_i$ \u5339\u914d\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4 $<b_i$ \u7684 $b_k$ \u65e0\u6cd5\u5339\u914d\uff0c\u6545\u8fd9\u79cd\u65b9\u6848\u662f\u6700\u4f18\u7684\u3002\n\n\u5148\u5c06 $b_i$ \u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u521d\u59cb\u65f6 $i=n,j=1$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u627e\u5230\u5408\u9002\u7684 $j$\uff0c\u4e14\u6bcf\u4e2a $j$ \u53ea\u80fd\u5339\u914d\u4e00\u6b21\uff0c\u5f53 $i$ \u51cf\u5c0f\u65f6 $j$ \u4f1a\u4e0d\u65ad\u589e\u5927\u3002\u5f53 $j\\ge i$ \u65f6\u8bf4\u660e\u4e0d\u5b58\u5728\u8fd8\u80fd\u5339\u914d\u7684 $i,j$\uff0c\u9000\u51fa\u5faa\u73af\u3002\n\n```cpp\nn=read(),k=read(),ans=0;\nfor(int i=1;i<=n;++i) a[i]=read(),ans+=a[i]/k,a[i]%=k;\nsort(a+1,a+n+1);\nfor(int i=n,j=1;i>=1;--i){\n    while(j<i&&a[j]+a[i]<k) ++j; if(j>=i) break; ++ans,++j;\n}\nprintf(\"%lld\\n\",ans);\n```",
        "postTime": 1654669648,
        "uid": 336653,
        "name": "include_BM",
        "ccfLevel": 0,
        "title": "CF1690E Price Maximization"
    },
    {
        "content": "## \u4e3b\u8981\u9898\u610f\uff1a\n\u6709 $n$ \u4e2a\u793c\u7269\uff0c\u8981\u4e24\u4e24\u5408\u5e76\uff0c\u7136\u540e\u9664\u4ee5 $k$ \u6700\u540e\u6c42\u548c\u6700\u5927\u3002\n\n## \u601d\u8def\uff1a\n\u5148\u52a0\u5165\u6bcf\u4e2a\u6570\u9664\u4ee5 $k$ \u7684\u5546\uff08\u5355\u72ec\u7ec4\u6210 $k$ \u7684\u4e2a\u6570\uff09\uff0c\u7136\u540e\u5168\u90e8 $ \\bmod \\ k$ \u5b58\u5165\u6570\u7ec4\uff0c\u6392\u5e8f\uff0c\u6700\u540e\u53cc\u6307\u9488\u4e00\u4e2a\u524d\u4e00\u4e2a\u540e\u6c42\u4e24\u4e2a\u4f59\u6570\u53ef\u4ee5\u5927\u4e8e\u7b49\u4e8e $k$ \u7684\u4e24\u4e2a\u793c\u7269\u3002\n\n## \u4ee3\u7801\uff1a\n ```cpp\n #include <bits/stdc++.h>\n using namespace std;\n \n const int Maxn = 2e5 + 5;\n int n, t, a[Maxn], k, l, r;\n long long cnt;\n \n int main()\n {\n     ios::sync_with_stdio(0);//\u5176\u5b9e\u4e0d\u7528\u5feb\u8bfb\n     cin.tie(), cout.tie();//\u5173\u540c\u6b65\u6d41\u5373\u53ef\n     cin >> t;\n     while (t--)\n     {\n         cnt = 0;\n         cin >> n >> k;\n         for (int i = 1; i <= n; i++)\n         {\n             cin >> a[i];\n             cnt += a[i] / k;//\u6c42\u5355\u72ec\u7ec4\u6210k\u7684\u6570\n             a[i] = a[i] % k;//\u6c42\u4f59\u6570\n         }\n         sort(a + 1, a + 1 + n);//\u6392\u5e8f\n         l = 1;\n         r = n;\n         while (l < r)\n         {\n             while (a[l] == 0)\n             {\n                 l++;//0\u662f\u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u80fd\u7ec4\u6210k\u7684\n             }\n             while ((a[l] + a[r]) % k == 0 && l < r)//\u7b49\u4e8e\u65f6\n             {\n                 cnt++;\n                 l++;\n                 r--;\n             }\n             while (a[l] + a[r] > k && l < r)//\u5927\u4e8e\u65f6\uff08\u5176\u5b9e\u53ef\u4ee5\u5408\u5e76\uff09\n             {\n                 cnt++;\n                 r--;\n                 l++;\n             }\n             while (a[l] + a[r] < k && l < r)//\u5c0f\u4e8e\n             {\n                 l++;\n             }\n         }\n         cout << cnt << \"\\n\";\n     }\n     return 0;\n }\n```\n",
        "postTime": 1678266651,
        "uid": 661494,
        "name": "mouth_boy",
        "ccfLevel": 4,
        "title": "CF1690E\u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u5c06\u4e24\u4e2a\u5305\u88f9\u5408\u5e76\uff0c\u5176\u4ef7\u503c\u4e3a\u4e24\u6570\u4e4b\u548c\u9664\u4ee5 $k$\uff08\u5411\u4e0b\u53d6\u6574\uff09\uff0c\u6c42\u5408\u5e76\u6240\u6709\u5305\u88f9\u540e\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\n------------\n\n\u5206\u6790\uff1a\u5148\u4e0d\u8003\u8651\u5408\u5e76\uff0c\u82e5\u4e00\u4e2a\u6570 $x$ \u5927\u4e8e\u7b49\u4e8e $k$ \uff0c\u5176\u5bf9\u6700\u7ec8\u7b54\u6848\u7684\u8d21\u732e\u81f3\u5c11\u4e3a $x/k$\u3002\u6839\u636e\u8fd9\u70b9\uff0c\u53ef\u4ee5\u5c06\u8f93\u5165\u7684\u6570\u636e\u4fee\u6539\u4e3a $x\\bmod k$\u3002\u56e0\u4e3a $k$ \u5c0f\u4e8e $1000$\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u6876\u6765\u50a8\u5b58\u8fd9\u4e9b\u6570\uff0c\u5e76\u7528\u8d2a\u5fc3\u6765\u5408\u5e76\u5904\u7406\u3002\n\n\n------------\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint sca[200010],b[2000];\nint main(){\n        ios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tint t,n,k;\n\tcin>>t;\n\twhile(t--){\n\t\tmemset(b,0,sizeof(b));\n\t\tcin>>n>>k;\n\t\tfor(int i=1;i<=n;i++) cin>>sca[i];\n\t\tlong long ans=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tans+=sca[i]/k;\n\t\t\tb[sca[i]%k]++;\n\t\t}\n\t\tint l=1,r=k-1;\n\t\twhile(l<=r){\n\t\t\twhile(b[l]==0&&l<=r) l++;\n\t\t\twhile(b[r]==0&&l<=r) r--;\n\t\t\tif(l>r) break;\n\t\t\tif(l+r<k){\n\t\t\t\tl++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(l==r){\n\t\t\t\tans+=b[l]/2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint minn=min(b[l],b[r]);\n\t\t\tans+=minn;\n\t\t\tb[l]-=minn;\n\t\t\tb[r]-=minn;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1667014941,
        "uid": 788868,
        "name": "Tsdristy",
        "ccfLevel": 0,
        "title": "CF1690E\u9898\u89e3"
    },
    {
        "content": "\u6765\u6c34\u4e00\u53d1\u9898\u89e3~\n\n## \u9898\u610f\uff1a\n\u4f60\u6709 $n$ \u4e2a\u6570\uff0c\u5176\u4e2d $n$ \u4e3a\u5076\u6570\uff0c\u5206\u6210 $n\\div 2$ \u7ec4\u6570\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\uff0c\u5b83\u7684\u4ef7\u503c\u662f\u8fd9\u4e24\u4e2a\u6570\u7684\u52a0\u548c\u9664\u4ee5\u7ed9\u5b9a\u5e38\u6570 $k$ \u5e76\u5411\u4e0b\u53d6\u6574\uff0c\u4e5f\u5c31\u662f $ \\left \\lfloor \\frac{a[i]+a[j]}{k} \\right \\rfloor $\uff0c\u6c42\u51fa\u6700\u5927\u8d21\u732e\u548c\u3002\n\n## \u5206\u6790\n\u8fd9\u9898\u5173\u952e\u5728\u4e8e\u5411\u4e0b\u53d6\u6574\uff0c\u8fd9\u4f1a\u5403\u6389\u5f88\u591a\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8ba9\u53d6\u6574\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u6700\u5c0f\uff0c\u90a3\u4e48\u4f59\u6570\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\u3002\n\n\u9996\u5148\u4e00\u4e2a\u5c0f\u8d2a\u5fc3\uff0c\u5c06\u6240\u6709\u6570\u5b57\u6309\u7167\u5347\u5e8f\u6392\u5e8f\uff0c\u4fbf\u4e8e\u6211\u4eec\u5728\u505a\u9664\u6cd5\u53d6\u6574\u65f6\u5c3d\u53ef\u80fd\u5f97\u5230\u5927\u7684\u8d21\u732e\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u6309\u4f59\u6570\u5c06\u8fd9\u4e9b\u6570\u5206\u7c7b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\uff0c\u6211\u4eec\u4ece\u540e\u9762\u5f00\u59cb\u53d6\uff0c\u9009\u62e9\u5927\u7684\uff0c\u7136\u540e\u6839\u636e\u5f53\u524d\u8fd9\u4e00\u7c7b\u5bf9\u5e94\u7684\u4f59\u6570\u5047\u8bbe\u4e3a $i$\uff0c\u90a3\u4e48\u6211\u4eec\u6700\u597d\u7684\u9009\u62e9\u80af\u5b9a\u662f $d=(k-i)\\mod{i}$\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u6211\u4eec\u53d6\u51fa\u4e24\u4e2a\u6570\u5b57\u52a0\u548c\uff0c\u6839\u636e\u4f59\u6570\u7684\u7ed3\u5408\u5f8b\uff0c\u4f59\u6570\u4e3a $0$\uff0c\u4e5f\u5c31\u662f\u6574\u9664\uff0c\u6700\u4e3a\u5212\u7b97\uff0c\u5982\u679c $d$ \u5bf9\u5e94\u7684\u96c6\u5408\u4e3a\u7a7a\uff0c\u90a3\u4e48\u7ee7\u7eed\u81ea\u589e\u5bfb\u627e\u5c3d\u53ef\u80fd\u533a\u522b\u4e0d\u5927\u7684\u4f59\u6570\uff0c\u51cf\u5c11\u635f\u5931\uff0c\u76f4\u5230\u627e\u5230\u975e\u7a7a\u96c6\u5408\uff0c\u4e5f\u4ece\u540e\u9762\u53d6\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n[\u4ee3\u7801\u5728\u8fd9~](https://www.luogu.com.cn/paste/iszrk6et)",
        "postTime": 1654698128,
        "uid": 141058,
        "name": "Xu_brezza",
        "ccfLevel": 0,
        "title": "CF1690E Price Maximization"
    }
]