[
    {
        "content": "\u7ed3\u8bba\uff1a\u4e00\u79cd\u6700\u4f18\u65b9\u6848\u53ef\u4ee5\u5982\u4e0b\u6784\u9020\uff1a\u4ece\u76ee\u524d\u5269\u4e0b\u7684\u6240\u6709\u8d28\u56e0\u5b50\u91cc\u5404\u53d6\u4e00\u4e2a\u51d1\u6210\u65b0\u7684\u6570\u3002\n\n\u8bc1\u660e\u4e5f\u5f88\u663e\u7136\uff0c\u6211\u4eec\u53ea\u8003\u8651\u6307\u6570\u4e3a $ 1 $ \u7684\u60c5\u51b5\uff0c\u5426\u5219\u4e0d\u6ee1\u8db3\u9898\u610f\u3002\u56e0\u4e3a\u5bf9\u4e8e\u4e24\u4e2a\u8d28\u6570 $ p,q \\geq 2 $\uff0c\u5c06\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u5f0f\u5b50 $ \\sum a_i \\times p_i $ \u4ee3\u5165\u8ba1\u7b97\uff0c\u5219\u663e\u7136\u6709 $ p+q+2 \\leq pq+1 $\uff0c\u90a3\u4e48\u5408\u5e76\u4e24\u4e2a\u6570\u603b\u662f\u66f4\u4f18\uff0c\u518d\u8003\u8651\u7b2c\u4e09\u4e2a\u6570\uff0c\u8fd9\u65f6\u5019\u6709 $ pq+1+k+1 \\leq pqk+1 $\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u56e0\u6b64\u8fd9\u4e48\u505a\u7b54\u6848\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u52a3\u3002\n\n\u6ce8\u610f\u5230 $ n \\leq 10^9 $\uff0c\u4e8e\u662f\u6211\u4eec\u7528 Pollard-rho \u5206\u89e3\u8d28\u56e0\u5b50\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(Tn^\\frac{1}{4}) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\uff08\u5df2\u7ecf\u7701\u7565\u8fc7\u957f\u7684\u6a21\u677f\u90e8\u5206\uff09\n\n```cpp\nint main() \n{\n    uint64_t T;\n    cin>>T;\n    while(T--)\n    {\n        uint64_t n;\n        cin>>n;\n        uint64_t ans=0;\n        auto map = OY::Pollard_Rho::decomposite(n);\n        while(map.size())\n        {\n        uint64_t mul=1;\n        for(int i=0;i<map.size();i++)\n       mul*=map[i].prime,map[i].count--;\n        auto tmp=map;\n\t\ttmp.resize(0);\n        for(auto now:map)\n        if(now.count)\n        tmp.push_back(now);\n        map=tmp;\n        ans+=mul;\n        }\n        cout<<ans<<'\\n';\n    }\n}\n```",
        "postTime": 1675051457,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "CF1787B\u9898\u89e3"
    }
]