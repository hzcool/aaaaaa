[
    {
        "content": "~~\u4e0a\u5929\u4e0d\u8981\u60e9\u7f5a\u6211\u6c34\u9898\u89e3\u3002~~\n\n___\n\n\u5176\u5b9e\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u539f\u56e0\u662f\u6211\u770b\u5230\u9898\u89e3\u533a\u91cc\u9762\u5168\u662f $O(n\\log^2n)$ \u611f\u5230\u5f88\u8ff7\u60d1\u3002\n\n\u672c\u7bc7\u9898\u89e3\u590d\u6742\u5ea6\u662f $O(n\\log n)$\u3002\n\n\u539f\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5efa\u56fe\u8fde\u8fb9\u8dd1\u6700\u77ed\u8def\uff0c\u4e0d\u591a\u63d0\u3002\u4f46\u662f\u95ee\u9898\u5728\u4e8e**\u8fb9\u6570\u8fc7\u591a**\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u4e8b\u60c5\u3002\n\n\u9996\u5148\uff0c\u663e\u7136\u5730\uff0c\u56fe\u4e2d\u6240\u6709\u8fb9\u6743\u90fd\u4e3a 1\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 BFS \u6765\u4ee3\u66ff Dij \u7b49\u6700\u77ed\u8def\u7b97\u6cd5\u3002\n\n\u89c2\u5bdf\u5230\uff0c\u4e00\u4e2a\u70b9\u5728\u5165\u961f\u540e\u662f\u4e0d\u4f1a\u518d\u6b21\u5165\u961f\u7684\uff0c\u5373\uff0c**\u5230\u8fbe\u5b83\u7684\u8fb9\u4e5f\u4e0d\u4f1a\u518d\u4e00\u6b21\u88ab\u7528\u5230**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6709\u8fd9\u6837\u4e00\u79cd\u60f3\u6cd5\uff1a\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0cBFS\uff0c\u4e00\u4e2a\u70b9\u51fa\u961f\u65f6\uff0c\u5c06\u6240\u6709\u5176\u80fd\u5230\u8fbe\u7684\u70b9\u5165\u961f\u5e76\u4ece\u6570\u636e\u7ed3\u6784\u4e2d\u5220\u9664\u3002\n\n\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u5904\u7406\u7684\u662f**\u4e8c\u7ef4\u504f\u5e8f**\uff0c\u6240\u4ee5\u5f53\u7136\u53ef\u4ee5\u76f4\u63a5 \u6811\u72b6\u6570\u7ec4 + set \u786c\u8349\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u8fd9\u4e2a\u9898\u53ea\u6709\u5220\u9664\uff0c\u6240\u4ee5\u53ef\u4ee5\u53ea\u7ef4\u62a4\u4e00\u7ef4\u504f\u5e8f\u5728\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7b2c\u4e8c\u7ef4\u6302\u5728\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684 vector \u91cc\u3002\n\n\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u65f6\u53ca\u65f6\u56de\u6eaf\uff0c\u590d\u6742\u5ea6\u5c31\u53ef\u5747\u644a\u4e3a $O(n\\log n)$\u3002\n\n____\n\nCode\uff1a\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing std::min;\nconst int maxn = 1e5+5;\nint n,a[maxn],b[maxn],c[maxn],d[maxn];\nint lsh[maxn],M,mn[maxn<<2];\nint Erf(int x){return std::upper_bound(lsh+1,lsh+M+1,x)-lsh-1;}\nstd :: vector <int> pt[maxn];\nvoid ins(int k,int l,int r,int p,int v){\n\tif(l == r){\n\t\tpt[l].push_back(v);\n\t\tmn[k] = min(mn[k],b[v]);\n\t\treturn ;\n\t}\n\tint mid = l+r>>1;\n\tp<=mid?ins(k<<1,l,mid,p,v):ins(k<<1|1,mid+1,r,p,v);\n\tmn[k] = min(mn[k<<1],mn[k<<1|1]);\n}\nint dis[maxn],pre[maxn];\nstd :: queue <int> q;\nvoid chk(int k,int l,int r,int x,int y,int P){\n\tif(l>x||mn[k]>y)return ;\n\tif(l == r){\n\t\tint id;\n\t\twhile(pt[l].size() && b[id=*--pt[l].end()] <= y)\n\t\t\tpre[id] = P,dis[id] = dis[P] + 1,q.push(id),pt[l].pop_back();\n\t\tmn[k] = pt[l].size()?b[id=*--pt[l].end()]:0x3f3f3f3f;\n\t\treturn ;\n\t}\n\tint mid = l+r>>1;\n\tchk(k<<1,l,mid,x,y,P),chk(k<<1|1,mid+1,r,x,y,P);\n\tmn[k] = min(mn[k<<1],mn[k<<1|1]);\n}\nvoid groute(int x){\n\tif(pre[x])groute(pre[x]);\n\tprintf(\"%d \",x);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d %d %d %d\",&a[i],&b[i],&c[i],&d[i]);\n\tfor(int i=1;i<=n;++i)lsh[++M] = a[i];\n\tstd :: sort(lsh+1,lsh+M+1),M = std :: unique(lsh+1,lsh+M+1)-lsh-1;\n\tfor(int i=1;i<=n;++i)a[i] = std :: lower_bound(lsh+1,lsh+M+1,a[i])-lsh,ins(1,1,M,a[i],i);\n\tfor(int i=1;i<=M;++i)sort(pt[i].begin(),pt[i].end(),[](int x,int y){return b[x]>b[y];});\n\tmemset(dis,-1,sizeof(dis)),dis[0] = 0;\n\tq.push(0);\n\twhile(!q.empty()){\n\t\tint u = q.front();\n\t\tq.pop(),chk(1,1,M,Erf(c[u]),d[u],u);\n\t}\n\tprintf(\"%d\\n\",dis[n]);if(~dis[n])groute(n);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1646038015,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF605D"
    },
    {
        "content": " [\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF605D)\t[CF\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/605/D)\n\n### Solution\n\n\u53ef\u4ee5\u60f3\u5230\u4ece $(0,0)$ \u5f00\u59cbBFS\uff0c\u7b2c\u4e00\u6b21\u66f4\u65b0\u67d0\u4e2a\u70b9\u5373\u4e3a\u6700\u5c0f\u3002\n\n\u4f46\u662f\u600e\u4e48\u7ef4\u62a4\u5bf9\u4e8e\u6bcf\u5bf9 $(a,b,c,d)$ \u53ef\u4ee5\u9009\u62e9\u7684\u70b9\uff1f\n\n\u80af\u5b9a\u8981\u627e\u6240\u6709\u6bd4 $(a,b)$ \u5c0f\u7684\u6570\uff0c\u90a3\u4e48\u5c31\u662f\u5728\u4e00\u4e2a\u7b2c\u4e00\u7ef4\u5c0f\u4e8e $a$ \u7684\u96c6\u5408\u4e2d\uff0c\u627e\u4e00\u4e2a\u7b2c\u4e8c\u7ef4\u5c0f\u4e8e $b$ \u7684\u96c6\u5408\u3002\n\n\u8003\u8651\u4f7f\u7528\u6811\u72b6\u6570\u7ec4+ $\\operatorname{set}$ \u6765\u7ef4\u62a4\u3002\n\n\u5728\u4e00\u4e2a\u5750\u6807\u4e3a $a$ \u7684\u8282\u70b9\u50a8\u5b58\u4e00\u4e2a $\\operatorname{set}$ \uff0c\u5176\u4e2d\u662f\u6240\u6709\u6bd4 $a$ \u5c0f\u7684\u96c6\u5408\uff0c\u7136\u540e\u627e\u7b2c\u4e8c\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u7528 $\\operatorname{set}$ \u81ea\u5e26\u7684\u4e8c\u5206\u67e5\u627e\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n\\log ^2n)$ \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a $O(n\\log n)$ \n\n### Code\n\n```c++\n#include<bits/stdc++.h>\n#define PII pair<int,int>\n\nusing namespace std;\nconst int N=100010;\nbool vis[N<<1];\nint n,m,cnt,a[N],b[N],c[N],d[N];\nmap<int,int> mp;\nset<PII> tr[N<<1];\nvector<int> vec;\n\ninline int lowbit(int x){\n    return x&-x;\n}\n\ninline void update(int x,PII val){\n    for(;x<=m;x+=lowbit(x)) tr[x].insert(val);\n}\n\nvector<int> query(int x,int y){\n    vector<int> tmp;\n    for(;x;x-=lowbit(x)){\n        set<PII>::iterator p=tr[x].upper_bound(make_pair(y,N));\n        set<PII>::iterator it;\n        for(it=tr[x].begin();it!=p;it++) tmp.push_back(it->second);\n        tr[x].erase(tr[x].begin(),p);\n    }\n    return tmp;\n}\n\nint dist[N],from[N],rd[N];\ninline void bfs(){\n    memset(from,-1,sizeof(from));\n    memset(dist,-1,sizeof(dist));\n    vector<int> u=query(mp[0],0);\n    queue<int> q;\n    for(int i=0;i<u.size();i++)\n        q.push(u[i]),vis[u[i]]=true,dist[u[i]]=1;\n    while(!q.empty()){\n        int k=q.front();q.pop();\n        vector<int> v=query(mp[c[k]],d[k]);\n        for(int i=0;i<v.size();i++){\n            if(vis[v[i]]) continue;\n            vis[v[i]]=true;\n            dist[v[i]]=dist[k]+1;\n            from[v[i]]=k;\n            q.push(v[i]);\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d%d%d\",&a[i],&b[i],&c[i],&d[i]);\n        vec.push_back(a[i]),vec.push_back(c[i]);\n    }\n    sort(vec.begin(),vec.end());\n    mp[vec[0]]=++m;\n    for(int i=1;i<vec.size();i++)\n        if(vec[i]>vec[i-1]) mp[vec[i]]=++m;\n    for(int i=1;i<=n;i++)\n        update(mp[a[i]],make_pair(b[i],i));\n    bfs();\n    printf(\"%d\\n\",dist[n]);\n    if(dist[n]==-1) return 0;\n    int pos=n;\n    while(pos!=0){\n        rd[++cnt]=pos;\n        pos=from[pos];\n    }\n    for(int i=cnt-1;i>=1;i--)\n        printf(\"%d \",rd[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1604287631,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "CF605D Board Game"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u3002\n\n\u6bcf\u6b21\u5728\u539f\u5e8f\u5217\u505a\u4e00\u4e2a\u64cd\u4f5c\uff0c\u628a $a_i$ \u4fee\u6539\u6210 $k$\u3002\n\n\u95ee\u6bcf\u6b21\u64cd\u4f5c\u540e\u5e8f\u5217\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u3002\n\n## \u601d\u8def\n\n\u9996\u5148 LIS \u6709\u4e2a $O(n \\log n)$ \u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4ee5\u7b2c $i$ \u4e2a\u6570\u7ed3\u5c3e\u7684 LIS \u957f\u5ea6 $d_i$\u3002\n\n\u540c\u7406\u53cd\u7740\u6c42\u4e00\u904d\u4e5f\u53ef\u4ee5\u6c42\u51fa\u4ee5\u7b2c $i$ \u4e2a\u6570\u5f00\u5934\u7684 LIS \u957f\u5ea6\u3002\n\n\u56de\u5230\u672c\u9898\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539 $a_i = x$\uff1b\n\n\u5f88\u663e\u7136\u6709 $2$ \u79cd\u60c5\u51b5\uff1a\n\n1. \u65b0\u7684 LIS \u5305\u542b $a_i$\u3002\n2. \u65b0\u7684 LIS \u4e0d\u5305\u542b $a_i$\u3002\n\n\u6211\u4eec\u5148\u6c42\u4e00\u5b9a\u5305\u542b $a_i$ \u7684 LIS\u3002\n\n\u6211\u4eec\u9884\u5904\u7406\u51fa\u4ee5\u7b2c $i$ \u4e2a\u6570\u7ed3\u5c3e\u7684 LIS $left_i$\uff0c\u548c\u4ee5\u7b2c $i$ \u4e2a\u6570\u5f00\u5934\u7684 LIS $right_i$\u3002\n\n\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u5de6\u8fb9 $\\max(left_j)$ \uff08\u4e14 $j<i$\uff0c$a_k<x$\uff09 \u548c\u53f3\u8fb9 $\\max( right_j)$ \uff08\u4e14 $j>i$\uff0c$a_j>x$\uff09\uff0c\u4e24\u8005\u957f\u5ea6\u76f8\u52a0\u518d\u52a0 $1$ \u5c31\u662f\u5305\u542b $a_i$ \u7684\u65b0  LIS\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u503c\u5927\u4e8e\u539f\u5e8f\u5217\u7684 LIS\uff0c\u90a3\u5b83\u4e00\u5b9a\u662f\u7b54\u6848\u3002\n\n\u518d\u5206\u6790 LIS \u4e0d\u5305\u542b $x$ \u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u4fee\u6539\u7684\u6570\u5fc5\u987b\u5728\u539f\u5e8f\u5217\u7684 LIS \u4e2d\uff0c\u5219\u4e0d\u5305\u542b\u4fee\u6539\u7684\u6570\u7684 LIS \u4e00\u5b9a\u4f1a\u51cf\u5c11 $1$\u3002\n\n\u5982\u679c\u4fee\u6539\u7684\u6570\u53ef\u4ee5\u4e0d\u5728\u539f\u5e8f\u5217\u7684 LIS \u4e2d\uff0c\u4e0d\u5305\u542b\u4fee\u6539\u7684\u6570\u7684 LIS \u5219\u4e0d\u4f1a\u53d8\u5316\u3002\n\n\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\uff0c\u5224\u65ad\u5176\u662f\u5426\u5fc5\u987b\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u5148\u7528\u4e4b\u524d\u7684\u601d\u8def\u7b97\u51fa\u5305\u542b $a_i$ \u7684 LIS\uff1a\n\n$$ len_i = \\max(left)+1+\\max(right)$$\n\n\u5982\u679c $len_i =$ \u539f\u5e8f\u5217\u7684 LIS\uff0c\u90a3\u4e48 $i$ \u53ef\u80fd\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u5982\u679c $i$ \u53ef\u80fd\u51fa\u73b0\uff1a\n\n\u53c8\u5982\u679c\u5b58\u5728 $j<i$ \u4e14 $a_j \\ge a_i$ \u4e14 $j$ \u53ef\u80fd\u51fa\u73b0\u5728 LIS \u4e2d\uff0c$i$ \u6709\u53ef\u4ee5\u4e0d\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u540c\u7406\u5982\u679c\u5b58\u5728 $j>i$ \u4e14 $a_j \\le a_i$ \u4e14 $j$ \u53ef\u80fd\u51fa\u73b0\u5728 LIS \u4e2d\uff0c\u90a3\u4e48 $i$ \u53ef\u4ee5\u4e0d\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u6240\u4ee5\u5982\u679c $i$ \u4e0d\u6ee1\u8db3\u53ef\u4ee5\u4e0d\u51fa\u73b0\u5728 LIS \u4e2d\u7684\u6761\u4ef6\uff0c\u5219 $i$ \u4e00\u5b9a\u51fa\u73b0\u5728 LIS \u4e2d\u3002\n\n\u5219\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539 $a_i=x$\uff0c\u5148\u8ba1\u7b97\u5305\u542b $x$ \u7684 LIS \u957f\u5ea6\u3002\n\n\u5982\u679c\u6bd4\u539f\u5e8f\u5217 LIS \u5927\uff0c\u5219\u4e00\u5b9a\u662f\u7b54\u6848\u3002\n\n\u5426\u5219\uff0c\u5982\u679c $i$ \u53ef\u4ee5\u4e0d\u51fa\u73b0\uff0c\u5219 $LIS$ \u4e0d\u53d8\uff0c\u5426\u5219\u5982\u679c $i$ \u4e00\u5b9a\u51fa\u73b0\uff0c\u5219 LIS \u4f1a\u51cf\u5c11 $1$\u3002\n\n\u56de\u8fc7\u5934\u6765\uff0c\u8003\u8651\u8ba1\u7b97 $\\max(left_j$\uff08\u4e14 $j<i$\uff0c$a_j<x$\uff09\n\n\u8fd9\u4e2a\u5c31\u662f\u7ecf\u5178\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\n\n\u5bf9 $a_j$ \u548c $x$ \u6392\u5e8f\u3002\n\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $x$\uff0c\u628a $a_j<x$ \u7684 $left_j$ \u63d2\u5165\u6811\u72b6\u6570\u7ec4\u7684\u7b2c $j$ \u4e2a\u4f4d\u7f6e\u3002\n\n\u6211\u4eec\u628a\u7ef4\u62a4\u66f4\u65b0\u548c\u8be2\u95ee\u6811\u72b6\u6570\u7ec4\u7684\u52a0\u6cd5\u53d8\u6210\u6c42 $\\max$\u3002\n\n\u95ee\u9898\u8f6c\u5316\u6210\u6c42\u524d\u7f00\u6700\u5927\u503c\u3002",
        "postTime": 1681635794,
        "uid": 675646,
        "name": "Dyousks",
        "ccfLevel": 0,
        "title": "CF605D \u9898\u89e3"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/605/problem/D) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF605D)\n\n\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n\u4e8b\u5b9e\u4e0a\u662f\u4e00\u9053\u975e\u5e38\u5bb9\u6613\u7684\u9898\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u5982\u679c $c_i\\geq a_j$ \u4e14 $d_i\\geq b_j$ \u5c31\u8fde\u4e00\u6761 $i\\to j$ \u7684\u8fb9\u8868\u793a\u7528\u5b8c $i$ \u4e4b\u540e\u53ef\u4ee5\u7528 $j$\u3002\u7136\u540e\u8dd1 BFS\u3002\n\n\u76f4\u63a5\u8dd1\u590d\u6742\u5ea6\u662f $n^2$\uff0c\u4e0d\u8fc7\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff0c\u6545\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316 BFS \u7684\u8fc7\u7a0b\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u5957 `set` \u7ef4\u62a4\u6240\u6709 $(a_i,b_i)$ \u7684\u5750\u6807\uff0c\u5f53\u8bbf\u95ee\u5230\u67d0\u4e2a $j$ \u65f6\u5019\u5c31\u76f4\u63a5\u5728\u6811\u72b6\u6570\u7ec4\u5957 `set` \u4e0a\u627e\u51fa**\u5168\u90e8\u6ee1\u8db3** $a_i\\leq c_j,b_i\\leq d_j$ \u7684 $i$ \u5e76\u5c06\u5176\u538b\u5165\u961f\u5217\uff0c\u5e76\u76f4\u63a5\u5c06\u8fd9\u4e9b\u70b9\u4ece `set` \u4e2d\u5220\u9664\u3002\u6ce8\u610f\u5230\u6bcf\u4e2a\u70b9\u4f1a\u6070\u597d\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u6545\u603b\u5220\u9664\u6b21\u6570\u662f\u7ebf\u6027\u7684\uff0c\u518d\u52a0\u4e0a\u6811\u72b6\u6570\u7ec4\u5957 `set` \u672c\u8eab\u7684 2log\uff0c\u590d\u6742\u5ea6 $n\\log^2n$\u3002\n\n\u8bb0\u5f97\u4e4b\u524d\u505a\u8fc7\u4e00\u9053\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u4f18\u5316\u4e8c\u5206\u56fe\u67d3\u8272\u7684\u9898\u6765\u7740\u7684\uff1f\u8fd9\u9898\u601d\u60f3\u4f3c\u4e4e\u4e0e\u90a3\u9898\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u5229\u7528\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u8bbf\u95ee\u4e00\u6b21\u8fd9\u4e2a\u6027\u8d28\uff0c\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u66b4\u529b\u7684\u8fc7\u7a0b\uff08\u4e0d\u8fc7\u4f3c\u4e4e\u8fd9\u9898\u6bd4\u90a3\u9898\u8fd8\u5bb9\u6613\u4e00\u4e9b\uff09\u3002\n\n\u4e0a\u5e1d\u4e0d\u8981\u60e9\u7f5a\u6211\u5237\u6c34\u9898/kk\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nconst int MAXN=1e5;\nint n,a[MAXN+5],b[MAXN+5],c[MAXN+5],d[MAXN+5];\nint key[MAXN*2+5],cnt=0,uni[MAXN*2+5],num=0;\nset<pii> st[MAXN*2+5];\nvoid insert(int x,int y,int z){\n\tfor(int i=x;i<=num;i+=(i&(-i))) st[i].insert(mp(y,z));\n}\nvoid del(int x,int y,int z){\n\tfor(int i=x;i<=num;i+=(i&(-i))) st[i].erase(st[i].find(mp(y,z)));\n}\nvector<int> query(int x,int y){\n\tvector<int> ret;\n\tfor(int i=x;i;i&=(i-1)){\n\t\tset<pii>::iterator t=st[i].lower_bound(mp(y+1,0));\n\t\tfor(set<pii>::iterator it=st[i].begin();it!=t;++it){\n\t\t\tret.pb(it->se);\n\t\t}\n\t} return ret;\n}\nint dis[MAXN+5],from[MAXN+5];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d%d%d\",&a[i],&b[i],&c[i],&d[i]);\n\t\tkey[++cnt]=a[i];key[++cnt]=c[i];\n\t} key[++cnt]=0;sort(key+1,key+cnt+1);key[0]=-1;\n\tfor(int i=1;i<=cnt;i++) if(key[i]!=key[i-1]) uni[++num]=key[i];\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=lower_bound(uni+1,uni+num+1,a[i])-uni;\n\t\tc[i]=lower_bound(uni+1,uni+num+1,c[i])-uni;\n\t}\n\tfor(int i=1;i<=n;i++) insert(a[i],b[i],i);\n\tmemset(dis,-1,sizeof(dis));queue<int> q;\n\tvector<int> v=query(1,0);\n\tfor(int i=0;i<v.size();i++) dis[v[i]]=1,q.push(v[i]),del(a[v[i]],b[v[i]],v[i]);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();v=query(c[x],d[x]);\n\t\tfor(int i=0;i<v.size();i++){\n\t\t\tint t=v[i];dis[t]=dis[x]+1;from[t]=x;q.push(t),del(a[t],b[t],t);\n\t\t}\n\t}\n\tif(dis[n]==-1) printf(\"-1\\n\");\n\telse{\n\t\tprintf(\"%d\\n\",dis[n]);vector<int> v;\n\t\tfor(int i=n;i;i=from[i]) v.pb(i);\n\t\treverse(v.begin(),v.end());\n\t\tfor(int i=0;i<v.size();i++) printf(\"%d \",v[i]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1614401663,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF605D\u3010Board Game\u3011"
    }
]