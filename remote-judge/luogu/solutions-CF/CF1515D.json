[
    {
        "content": "[CF1515D](https://www.luogu.com.cn/problem/CF1515D)\n\n\u4e00\u9053\u86ee\u6709\u610f\u601d\u7684\u9898\n\n------------\n\n\u5728\u672c\u9898\u89e3\u4e2d\uff0c\u8bb0\u5de6\u889c\u5b50\u4e3a $a_i$\uff0c\u53f3\u889c\u5b50\u4e3a $b_i$\u3002\u4e00\u5f00\u59cb\uff0c\u5de6\u889c\u5b50\u6570\u8bb0\u4f5c $L$\uff0c\u53f3\u889c\u5b50\u6570\u8bb0\u4f5c $R$\u3002\n\n------------\n\n\u628a\u889c\u5b50\u5b58\u5165\u6570\u7ec4 $a$\u3001$b$ \u4e2d\u3002\n\n\u9996\u5148\u53ef\u4ee5\u628a\u5df2\u7ecf\u914d\u5bf9\u7684\uff08\u540c\u8272\u540c\u5de6\u53f3\uff09\u889c\u5b50\u4ece\u6570\u7ec4\u4e2d\u5220\u53bb\u4e86\u3002\u5177\u4f53\u64cd\u4f5c\u5341\u5206\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u8bf4\u660e\u3002\n\n\u5220\u5b8c\u540e\u6211\u4eec\u7684 $a$\u3001$b$ \u6570\u7ec4\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\uff1a$\\min(a_i,b_i)=0 \\space (1 \\le i \\le \\max(L,R))$\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5bf9\u4e8e\u4efb\u610f\u989c\u8272\u7684\u889c\u5b50\uff0c\u8981\u4e48\u5de6\u889c\u5b50\u6ca1\u4e86\uff0c\u8981\u4e48\u53f3\u889c\u5b50\u6ca1\u4e86\uff0c\u8981\u4e48\u5de6\u53f3\u889c\u5b50\u90fd\u6ca1\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u8f6c\u6362\u889c\u5b50\uff0c\u4e00\u5171\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1. \u6709\u4e24\u53ea\u540c\u8272\u540c\u5de6\u53f3\u7684\u889c\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u82b1\u8d391\u5143\u628a\u5b83\u4fe9\u5176\u4e2d\u4e4b\u4e00\u7684\u5de6\u53f3\u6539\u53d8\uff0c\u5f62\u6210\u914d\u5bf9\u3002\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/46n8ccud.png)\n\n2. \u6709\u4e24\u53ea\u4e0d\u540c\u8272\u4e0d\u540c\u5de6\u53f3\u7684\u889c\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u82b1\u8d391\u5143\u4f7f\u5f97\u4ed6\u4fe9\u540c\u8272\uff0c\u5f62\u6210\u914d\u5bf9\u3002\n\n![2](https://cdn.luogu.com.cn/upload/image_hosting/cnl20q2x.png)\n\n3. \u6709\u4e24\u53ea\u4e0d\u540c\u8272\u540c\u5de6\u53f3\u7684\u889c\u5b50\uff0c\u6211\u4eec\u81f3\u5c11\u8981\u82b12\u5143\u914d\u5bf9\u4ed6\u4fe9\u3002\n\n![3](https://cdn.luogu.com.cn/upload/image_hosting/378cjw44.png)\n\n\u663e\u7136\u6211\u4eec\u60f3\u8ba9\u60c5\u51b53\u5c3d\u53ef\u80fd\u5c11\u51fa\u73b0\u3002\n\n\u90a3\u4e48\u5230\u5e95\u4f55\u65f6\u4f1a\u51fa\u73b0\u60c5\u51b53\u5462\uff1f\n\n\u8003\u8651\u6709\u4e24\u5806\u5f02\u8272\u540c\u5de6\u53f3\u4e2a\u6570\u5747\u4e3a\u5947\u6570\u7684\u889c\u5b50\uff0c\u5219\u6bcf\u4e00\u5806\u4e2d\u889c\u5b50\u6309\u60c5\u51b51\u4e24\u4e24\u914d\u5bf9\uff0c\u6700\u540e\u4e24\u5806\u5404\u5269\u4e0b1\u53ea\u889c\u5b50\u3002\u6b64\u65f6\u5c31\u4f1a\u51fa\u73b0\u60c5\u51b53\u3002\n\n\u77e5\u9053\u4e86\u8fd9\u4e2a\uff0c\u672c\u9898\u5c31\u597d\u89e3\u4e86\u3002\n\n------------\n\n\u66b4\u529b\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u73b0\u5728\uff0c\u8bb0 $u$ \u4e3a\u5de6\u889c\u5b50\u7684\u4e2a\u6570\u548c\uff0c$v$ \u4e3a\u53f3\u889c\u5b50\u7684\u4e2a\u6570\u548c\uff0c$conu$ \u4e3a\u4e2a\u6570\u4e3a\u5947\u6570\u7684\u5de6\u889c\u5b50\u5806\u6570\uff0c$conv$ \u4e3a\u4e2a\u6570\u4e3a\u5947\u6570\u7684\u53f3\u889c\u5b50\u5806\u6570\u3002\n\n1. \u82e5 $u=v$\uff1a\n\n\t\u5168\u90e8\u6309\u60c5\u51b52\u8ba1\u7b97\uff0c\u6ca1\u6709\u60c5\u51b53\uff0c\u7b54\u6848\u5c31\u662f $u$\u3002\n    \n2. \u82e5 $u>v$\uff08$v>u$ \u540c\u7406\uff09\uff1a\n\n\ta.\u82e5 $v>=conu$\uff1a\n    \t\n\t\u8003\u8651\u53f3\u889c\u5b50\u4e00\u5b9a\u53ef\u4ee5\u6309\u7167\u60c5\u51b51\u6216\u60c5\u51b52\u628a $conu$ \u7684\u90e8\u5206\u914d\u5bf9\u5b8c\uff0c\u5269\u4f59\u7684\u5de6\u889c\u5b50\u4e00\u5b9a\u662f\u60c5\u51b51\u3002\u6ca1\u6709\u60c5\u51b53\uff0c\u7b54\u6848\u662f $\\frac{u+v}{2}$\u3002\n    \n    b.\u82e5 $v<conu$\uff1a\n    \n    \u5fc5\u7136\u4f1a\u51fa\u73b0\u60c5\u51b53\uff0c\u7b54\u6848\u662f\u53f3\u889c\u5b50\u5168\u90e8\u6309\u60c5\u51b51\u62162\u914d\u5bf9\u7684\u82b1\u8d39 $v$\uff0c\u52a0\u4e0a\u5de6\u889c\u5b50\u6309\u60c5\u51b51\u90e8\u5206\u7684\u82b1\u8d39 $u-conu$\uff0c\u52a0\u4e0a\u5fc5\u7136\u6309\u60c5\u51b53\u914d\u5bf9\u7684\u82b1\u8d39 $2 \\times \\frac{conu-v}{2}$.\u6574\u7406\u5f97\u7b54\u6848\u4e3a $\\frac{u+conu}{2}$.\n\n------------\n\n\u6709\u4e86\u5206\u7c7b\u8ba8\u8bba\u7684\u7ed3\u679c\uff0c\u4ee3\u7801\u81ea\u7136\u800c\u7136\u5c31\u51fa\u6765\u4e86\u3002\n\nCODE:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nlong long t,n,l,r,ans,a[200010],b[200010],conu,conv;\n\nvoid init(){\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tans=0;\n}\n\nint main(){\n\tlong long i,j,u,v;\n\tcin>>t;\n\twhile(t--){\n\t\tinit();\n\t\tcin>>n>>l>>r;\n\t\tfor(i=1;i<=l;i++){\n\t\t\tcin>>u;\n\t\t\ta[u]++;\n\t\t}\n\t\tfor(i=1;i<=r;i++){\n\t\t\tcin>>u;\n\t\t\tb[u]++;\n\t\t}\n\t\tfor(i=1;i<=n;i++){//\u53bb\u9664\u672c\u6765\u5c31\u914d\u5bf9\u7684\n\t\t\tif(a[i]>b[i]){\n\t\t\t\ta[i]-=b[i];\n\t\t\t\tb[i]=0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tb[i]-=a[i];\n\t\t\t\ta[i]=0;\n\t\t\t}\n\t\t}\n\t\tu=v=conu=conv=0;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tu+=a[i];\n\t\t\tconu+=a[i]%2;\n\t\t\tv+=b[i];\n\t\t\tconv+=b[i]%2;\n\t\t}\n\t\tif(u==v){//\u6ca1\u6709\u60c5\u51b53\n\t\t\tans=u;\n\t\t}\n\t\telse if(u>v){\n\t\t\tif(v>=conu){//\u4e5f\u6ca1\u6709\u60c5\u51b53\n\t\t\t\tans=(u+v)/2;\n\t\t\t}\n\t\t\telse{//\u5fc5\u7136\u6709\u60c5\u51b53\n\t\t\t\tans=(u+conu)/2;\n\t\t\t}\n\t\t}\n\t\telse{//v>u\u4e0eu>v\u540c\u7406\n\t\t\tif(u>=conv){\n\t\t\t\tans=(u+v)/2;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tans=(v+conv)/2;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1620124482,
        "uid": 150064,
        "name": "Gokix",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1515D \u3010Phoenix and Socks\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\n\n- \u7ed9\u5b9a $n$ \u53ea\u889c\u5b50\uff0c\u5176\u4e2d\u6709 $l$ \u53ea\u5de6\u889c\u5b50\uff0c$r$ \u53ea\u53f3\u889c\u5b50\uff0c\u6bcf\u53ea\u889c\u5b50\u90fd\u6709\u4e00\u4e2a\u989c\u8272\u3002\n\n- \u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e00\u53ea\u889c\u5b50\u7684\u5de6\u53f3\u5c5e\u6027\u8fdb\u884c\u5207\u6362\u6216\u66f4\u6362\u4e00\u53ea\u889c\u5b50\u7684\u989c\u8272\u3002\n\n- \u6c42\u628a\u6240\u6709\u889c\u5b50\u90fd\u4e24\u4e24\u914d\u5bf9\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\n\n- $2\u2264n\u22642\\times 10^5$\n\n\u5206\u6790\uff1a\n\n\u8981\u5206\u6210\u4e09\u4e2a\u9636\u6bb5\uff1a\u9996\u5148\uff0c\u5148\u5c06\u80fd\u914d\u5bf9\u7684\u914d\u4e0a\uff0c\u6b64\u65f6\u5bf9\u4e8e\u4e00\u79cd\u989c\u8272\u7684\u889c\u5b50\uff0c\u8981\u4e48\u5168\u662f\u5de6\u889c\u5b50\uff0c\u8981\u4e48\u5168\u662f\u53f3\u889c\u5b50\u3002\u6b64\u65f6\u6ca1\u6709\u82b1\u8d39\u3002\n\n\u63a5\u7740\uff0c\u518d\u6539\u53d8\u67d0\u4e9b\u889c\u5b50\u7684\u989c\u8272\uff0c\u4f7f\u5f97\u8981\u4e48\u5168\u662f\u5de6\u889c\u5b50\uff0c\u8981\u4e48\u5168\u662f\u53f3\u889c\u5b50\u3002\u5982\u679c\u4e00\u79cd\u989c\u8272\u7684\u889c\u5b50\u7684\u53ea\u6570\u5927\u4e8e1\uff0c\u5c31\u53ef\u4ee5\u628a\u4e00\u534a\u7684\u5de6\u53f3\u5c5e\u6027\u5207\u6362\u3002\u8fd9\u6837\u6bcf\u4e00\u79cd\u989c\u8272\u7684\u889c\u5b50\u7684\u53ea\u6570\u4e0d\u591a\u4e8e1\u53ea\u3002\u6b64\u65f6\u6bcf\u6b21\u914d\u5bf9\u82b1\u8d39\u4e00\u6b21\u64cd\u4f5c\u3002\n\n\u6700\u540e\uff0c\u540c\u65f6\u6539\u53d8\u889c\u5b50\u7684\u989c\u8272\u548c\u5de6\u53f3\uff0c\u6bcf\u6b21\u914d\u5bf9\u82b1\u8d39\u4e24\u6b21\u64cd\u4f5c\u3002\n\n\u5b9e\u73b0\u65f6\u53ef\u4ee5\u5c06\u4e24\u79cd\u889c\u5b50\u7684\u6570\u5217\u653e\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u7528\u4e0b\u68070\u548c1\u533a\u5206\uff0c\u8fd9\u6837\u6bd4\u8f83\u597d\u5199\u3002\n\n[\u8d5b\u65f6\u4ee3\u7801](https://codeforces.com/contest/1515/submission/114926182)\n\n\u6bd4\u8d5b\u7ed3\u675f\u540e\uff0c\u672c\u849f\u84bb\u770b\u5230\u4e86\u4e00\u4f4d\u5927\u4f6c\u7684\u4ee3\u7801\uff0c\u5f88\u53d7\u542f\u53d1\uff01\uff01111\uff0c\u7ed9\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\n\n[\u53c2\u8003\u4ee3\u7801](http://codeforces.com/contest/1515/submission/114883138)\n\n\u5176\u4e2d\u6709\u4e00\u6bb5\u6211\u89c9\u5f97\u5199\u7684\u633a\u597d\uff1a\n```\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\twhile(tab[i][0]>1 && x>0)\n\t\t{\n\t\t\tx-=2;\n\t\t\ttab[i][0]-=2;\n\t\t\twyn++;\n\t\t}\n\t\twhile(tab[i][1]>1 && x<0)\n\t\t{\n\t\t\tx+=2;\n\t\t\ttab[i][1]-=2;\n\t\t\twyn++;\n\t\t}\n\t}\n```\n\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c$x$ \u4ee3\u8868\u5de6\u889c\u5b50\u672a\u914d\u5bf9\u6570\u91cf\u548c\u53f3\u889c\u5b50\u672a\u914d\u5bf9\u7684\u5dee\u3002\n\n\u5982\u679c $x$ \u5927\u4e8e $0$\uff0c\u8bf4\u660e\u5de6\u889c\u5b50\u672a\u5339\u914d\u7684\u6570\u91cf\u66f4\u591a\uff0c\u5982\u679c\u67d0\u79cd\u989c\u8272\u7684\u5de6\u889c\u5b50\u53ea\u6570\u5927\u4e8e $1$\uff0c\u5219\u53ef\u4ee5\u628a\u5176\u4e2d\u7684\u4e00\u53ea\u5de6\u889c\u5b50\u53d8\u6210\u53f3\u889c\u5b50\uff0c\u540c\u65f6\u5b8c\u6210\u4e00\u6b21\u914d\u5bf9\u3002\u5bf9\u4e8e\u53f3\u889c\u5b50\u4e5f\u662f\u540c\u7406\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u4e0d\u52a3\u7684\u3002",
        "postTime": 1620212031,
        "uid": 240812,
        "name": "45dino",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1515D \u3010Phoenix and Socks\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u81ea[link](https://www.cnblogs.com/dixiao/p/14728152.html)\u3002\n\n\u770b\u51fa\u6765\u5982\u679c $l,r$ \u4e0d\u76f8\u7b49\uff0c\u5219\u4e00\u5b9a\u8981\u4ece\u591a\u7684\u4e00\u8fb9\u5411\u5c11\u7684\u4e00\u8fb9\u8f6c\u53d8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c3d\u91cf\u8ba9\u80fd\u5339\u914d\u7684\u889c\u5b50\u591a\u5c31\u884c\u4e86\uff0c\u5373\u628a\u591a\u7684\u4e00\u8fb9\u7684\u591a\u51fa\u6765\u7684\u540c\u8272\u889c\u5b50\u79fb\u5230\u53e6\u4e00\u8fb9\u3002\n\n\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7edf\u8ba1\u4e3a\u9700\u8981\u66f4\u6539\u7684\u889c\u5b50\uff0c\u4ee5\u53ca\u8fd8\u672a\u914d\u5bf9\u7684\u889c\u5b50\u7684\u6570\u76ee\u7684\u4e00\u534a\u3002\n\n```cpp\n// code by fhq_treap\n#include<bits/stdc++.h>\n#define ll long long\n#define N 300005\n\ninline ll read(){\n    char C=getchar();\n    ll A=0 , F=1;\n    while(('0' > C || C > '9') && (C != '-')) C=getchar();\n    if(C == '-') F=-1 , C=getchar();\n    while('0' <= C && C <= '9') A=(A << 1)+(A << 3)+(C - 48) , C=getchar();\n    return A*F;\n}\n\n\nstruct P{\n\tint to,next;\n};\n\nstruct Map{\n\tP e[N << 1];\n\tint head[N],cnt;\n\tMap(){\n\t\tstd::memset(head,0,sizeof(head));\n\t\tcnt = 0;\n\t}\n\tinline void add(int x,int y){\n\t\te[++cnt].to = y;\n\t\te[cnt].next = head[x];\n\t\thead[x] = cnt;\n\t}\n};\n\nll t,n,l,r;\nll c[N],lc[N],rc[N],cnt[N];\nbool del[N];\n\nint main(){\n\tt = read();\n\twhile(t -- ){\n\t\tn = read(),l = read(),r = read();\n\t\tfor(int i = 1;i <= n;++i)\n\t\tc[i] = read(),lc[c[i]] = 0,rc[c[i]] = 0,cnt[c[i]] = 0,del[c[i]] = 0;\n\t\tfor(int i = 1;i <= l;++i)\n\t\tlc[c[i]] ++ ,cnt[c[i]] ++ ;\n\t\tfor(int i = l + 1;i <= n;++i)\n\t\trc[c[i]] ++ ,cnt[c[i]] ++ ;\n\t\tfor(int i = 1;i <= l;++i)\n\t\tif(rc[c[i]])\n\t\trc[c[i]] -- ,lc[c[i]] -- ,cnt[c[i]] -= 2;\n\t\tll need = abs(r - l) / 2;\n\t\tif(l > r){\n\t\t\tfor(int i = 1;i <= l;++i){\n\t\t\t\twhile(need && lc[c[i]] >= 2)\n\t\t\t\tlc[c[i]] -= 2,cnt[c[i]] -= 2,need -- ;\n\t\t\t}\n\t\t}else{\n\t\t\tif(l < r){\n\t\t\t\tfor(int i = l + 1;i <= n;++i)\n\t\t\t\twhile(need && rc[c[i]] >= 2)\n\t\t\t\trc[c[i]] -= 2,cnt[c[i]] -= 2,need -- ;\n\t\t\t}\n\t\t}\n\t\tll ans = 0;\n\t\tfor(int i = 1;i <= n;++i){\n\t\t\tif(!del[c[i]])\n\t\t\tdel[c[i]] = 1,ans += cnt[c[i]] ;\n\t\t}\n\t\tstd::cout<<ans / 2 + abs(r - l) / 2<<std::endl;\n\t}\n}\n```\n",
        "postTime": 1620046629,
        "uid": 138390,
        "name": "fhq_treap",
        "ccfLevel": 7,
        "title": "Phoenix and Socks"
    },
    {
        "content": "\u6a21\u62df\u9898\u3002                \n\n\u663e\u7136\u5148\u628a\u5de6\u53f3\u889c\u5b50\u53ef\u4ee5\u914d\u5bf9\u7684\u914d\u5bf9\u4e86\u662f\u6700\u4f18\u7684\u3002                \n\n\u63a5\u7740\u6211\u4eec\u5206\u5f00\u5904\u7406\uff0c\u628a\u6570\u91cf\u591a\u7684\u90a3\u79cd\u889c\u5b50\u4e2d\u989c\u8272\u76f8\u540c\u7684\u62ff\u51fa\u6765\u76f4\u63a5\u6539\u889c\u5b50\u79cd\u7c7b\u914d\u5bf9\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u8bc1\u660e\u662f\u4e0d\u52a3\u7684\u3002\uff08\u8fd9\u91cc\u5b9a\u4e49\u889c\u5b50\u79cd\u7c7b\u8bf4\u7684\u662f\u5de6\u53f3\u889c\u5b50\uff09                      \n\n\u4f46\u8fd9\u91cc\u8981\u6ce8\u610f\u6211\u4eec\u6570\u91cf\u591a\u7684\u889c\u5b50\u6700\u540e\u914d\u5bf9\u5b8c\u540e\u6570\u91cf\u4ecd\u7136\u9700\u8981\u4e25\u683c\u5927\u4e8e\u7b49\u4e8e\u6570\u91cf\u5c11\u7684\u889c\u5b50\uff0c\u5426\u5219\u6211\u4eec\u53c8\u4f1a\u727a\u7272\u6b21\u6570\u53bb\u6539\u53d8\u889c\u5b50\u7684\u79cd\u7c7b\u3002\n\n\u6700\u540e\u6211\u4eec\u76f4\u63a5\u914d\u5bf9\u5c31\u597d\u4e86\u3002                  \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$ \u3002                 \n\n~~\u5982\u679c\u4e0d\u662f\u665a\u4e0a\u6253\u8bf4\u4e0d\u5b9a\u771f\u7684\u662f\u968f\u4fbf\u5207~~                    \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Len = 2e5 + 5;\nint n,m,a[Len],l,r,lcnt[Len],L[Len],R[Len];\nbool flag[Len];\nint Iabs(int x){return x < 0 ? -x : x;}\nvector<int> v[Len];\nint idx[Len],smr[Len];\nint main()\n{\n\tint t;scanf(\"%d\",&t);\n\twhile(t --)\n\t{\n\t\tscanf(\"%d %d %d\",&n,&l,&r);\n\t\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&a[i]);\n\t\tfor(int i = 1 ; i <= l ; i ++) v[a[i]].push_back(i);\n\t\tint ans = 0 , sizl = 0 , sizr = 0;\n\t\tfor(int i = l + 1 ; i <= n ; i ++) \n\t\t{\n\t\t\tint lens = v[a[i]].size();\n\t\t\tif(idx[a[i]] >= lens) continue;\n\t\t\tflag[v[a[i]][idx[a[i]]]] = flag[i] = 1 ; idx[a[i]] ++;\n\t\t}\n\t\tfor(int i = 1 ; i <= l ; i ++) \n\t\t{\n\t\t\tif(flag[i]) continue;\n\t\t\tL[++ sizl] = a[i]; \n\t\t}\n\t\tfor(int i = l + 1 ; i <= n ; i ++)\n\t\t{\n\t\t\tif(flag[i]) continue;\n\t\t\tR[++ sizr] = a[i];\n\t\t}\n\t\tsort(L + 1 , L + 1 + sizl) ; sort(R + 1 , R + 1 + sizr);\n\t\tif(sizl > sizr) \n\t\t{\n\t\t\tfor(int i = 1 ; i <= sizl ; i ++) smr[i] = L[i];\n\t\t\tfor(int i = 1 ; i <= sizr ; i ++) L[i] = R[i];\n\t\t\tfor(int i = 1 ; i <= sizl ; i ++) R[i] = smr[i];\n\t\t\tswap(sizl , sizr);\n\t\t}\n\t\tfor(int i = 1 ; i <= n ; i ++) flag[i] = 0;\n\t\tint ccz = sizr;\n\t\tint siml = sizl , simr = sizr;\n\t\tfor(int i = 2 ; i <= sizr ; i ++)\n\t\t{\n\t\t\tif(R[i] == R[i - 1] && simr > siml)\n\t\t\t{\n\t\t\t\tans ++;\n\t\t\t\tsimr -= 2;\n\t\t\t\ti ++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans + (simr - siml) / 2 + (simr + siml) / 2);\n\t\tfor(int i = 1 ; i <= n ; i ++) v[i].clear() , flag[i] = idx[i] = 0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1620192714,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3  CF1515D Phoenix and Socks"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u4e2a\u4eba\u535a\u5ba2\uff1a[Link](https://www.watertomato.com/cf1515d-phoenix-and-socks-%e9%a2%98%e8%a7%a3/)\u3002\n\n## \u9898\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1515D)\u3002\n\n\u6709 $n$ \u53ea\u889c\u5b50\uff0c\u6bcf\u53ea\u889c\u5b50\u90fd\u53ef\u80fd\u662f\u5de6/\u53f3\u889c\u5b50\u4e14\u6709\u4e00\u79cd\u989c\u8272\u3002\u6bcf\u6b21\u64cd\u4f5c\u4f60\u53ef\u4ee5\uff1a\u6539\u53d8\u889c\u5b50\u7684\u989c\u8272\u6216\u6539\u53d8\u889c\u5b50\u7684\u5de6\u53f3\u6027\u3002\u4f60\u9700\u8981\u4f7f\u5de6\u53f3\u889c\u5b50\u4e00\u4e00\u914d\u5bf9\uff08\u5177\u4f53\u5730\uff0c\u82e5\u4e24\u53ea\u889c\u5b50\u4e00\u5de6\u4e00\u53f3\u4e14\u989c\u8272\u76f8\u540c\uff0c\u5219\u8fd9\u4e24\u53ea\u889c\u5b50\u914d\u5bf9\uff09\u3002\u6c42\u6700\u5c0f\u64cd\u4f5c\u6570\u3002\n\n## \u89e3\u6790\n\n\u9996\u5148\u7531\u4e8e\u5de6\u53f3\u889c\u5b50\u5fc5\u987b\u8981\u4e00\u4e00\u914d\u5bf9\uff0c\u6240\u4ee5\u4e24\u8005\u6570\u91cf\u4e00\u5b9a\u8981\u76f8\u7b49\uff0c\u56e0\u6b64\u7b54\u6848\u6700\u5c0f\u4e3a $|\\frac{l-r}{2}|$\uff0c\u5373\u6211\u4eec\u81f3\u5c11\u8981\u8fdb\u884c $|\\frac{l-r}{2}|$ \u6b21\u66f4\u6539\u5de6\u53f3\u6027\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u8003\u8651\u600e\u4e48\u4f7f\u8fd9\u4e9b\u64cd\u4f5c\u6536\u76ca\u6700\u5927\u5316\uff0c\u5373\u64cd\u4f5c\u540e\u6539\u53d8\u989c\u8272\u7684\u64cd\u4f5c\u6570\u6700\u5c0f\u3002\n\n> \u7a7f\u63d2\u4e00\u4e2a\u5c0f\u8bc1\u660e\uff1a\u6211\u4eec\u4e00\u5b9a\u53ea\u4f1a\u8fdb\u884c $|\\frac{l-r}{2}|$ \u6b21\u66f4\u6539\u5de6\u53f3\u6027\u7684\u64cd\u4f5c\u3002\u56e0\u4e3a\u5047\u8bbe\u5de6\u53f3\u889c\u5b50\u6570\u76f8\u7b49\uff0c\u6211\u4eec\u6700\u4f18\u518d\u8fdb\u884c\u4e24\u6b21\u66f4\u6539\u5de6\u53f3\u6027\u64cd\u4f5c\u624d\u80fd\u4f7f\u4e24\u5bf9\u889c\u5b50\u914d\u5bf9\uff0c\u800c\u66f4\u6539\u989c\u8272\u4e5f\u53ea\u9700\u8981\u4e24\u6b21\uff0c\u6ca1\u5fc5\u8981\u518d\u8fdb\u884c\u66f4\u6539\u5de6\u53f3\u6027\u7684\u64cd\u4f5c\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u5df2\u7ecf\u914d\u597d\u5bf9\u7684\u889c\u5b50\u6392\u9664\u6389\uff0c\u663e\u7136\u6539\u53d8\u5df2\u914d\u5bf9\u7684\u889c\u5b50\u7684\u5de6\u53f3\u6027\u662f\u611a\u8822\u7684\u3002\u53c8\u6709\u663e\u7136\u5730\uff0c\u66f4\u6539\u5de6\u53f3\u6027\u7684\u64cd\u4f5c\u53ea\u4f1a\u5728\u889c\u5b50\u591a\u7684\u90a3\u8fb9\u8fdb\u884c\u3002\u5047\u8bbe\u5de6\u889c\u5b50\u591a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5de6\u889c\u5b50\u4e2d\u672a\u5339\u914d\u7684\u889c\u5b50\uff0c\u5982\u679c\u6709\u4e00\u79cd\u989c\u8272\u7684\u889c\u5b50\u4e0d\u5c11\u4e8e\u4e24\u53ea\uff0c\u66f4\u6539\u5176\u4e2d\u4e00\u53ea\u7684\u5de6\u53f3\u6027\u4e00\u5b9a\u662f\u66f4\u4f18\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u66f4\u6539\u4e4b\u540e\u5c31\u76f4\u63a5\u5339\u914d\u4e86\uff0c\u65e0\u9700\u518d\u66f4\u6539\u989c\u8272\u3002\u5148\u5c3d\u53ef\u80fd\u627e\u51fa\u8fd9\u79cd\u889c\u5b50\uff0c\u7136\u540e\u5269\u4e0b\u7684\u889c\u5b50\u5c31\u968f\u610f\u4e86\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u65f6\u518d\u52a0\u4e0a\u4ecd\u672a\u5f97\u5230\u5339\u914d\u7684\u889c\u5b50\u6570\u5373\u53ef\u3002\n\n\u4ee3\u7801\u9644\u6709\u6ce8\u91ca\uff0c\u53ef\u98df\u7528\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nint T,n,l,r,ans,x;\nint c[N],tl[N],tr[N];\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d%d%d\",&n,&l,&r);\n\t\tans=abs(l-r)/2;//\u66f4\u6539\u5de6\u53f3\u6027\u7684\u64cd\u4f5c\u6570\n\t\tfor(int i=1;i<=n;i++) tl[i]=tr[i]=0;\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&c[i]);\n\t\tfor(int i=1;i<=l;i++) tl[c[i]]++;\n\t\tfor(int i=l+1;i<=n;i++) tr[c[i]]++;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(tl[i]>0&&tr[i]>0){\n\t\t\t\tint t=min(tl[i],tr[i]);\n\t\t\t\ttl[i]-=t;\n\t\t\t\ttr[i]-=t;//\u8fd9\u91cc\u662f\u53bb\u9664\u5df2\u914d\u5bf9\u7684\u889c\u5b50\n\t\t\t}\n\t\t}\n\t\tint x=ans;\n\t\tif(l>r){//\u627e\u889c\u5b50\u591a\u7684\u90a3\u8fb9\uff0c\u8fdb\u884c\u64cd\u4f5c\n\t\t\tfor(int i=1;i<=n&&x>0;i++){\n\t\t\t\twhile(x>0&&tl[i]>=2){//\u5982\u679c\u6709\u4e0d\u5c11\u4e8e 2 \u53ea\u7684\uff0c\u9009\u5b83\n\t\t\t\t\tx--;\n\t\t\t\t\ttl[i]-=2;//\u4e00\u53ea\u5de6\u53f3\u6027\u6362\u4e86\uff0c\u4e00\u53ea\u5339\u914d\u4e0a\u4e86\uff0c\u6545\u672a\u5339\u914d\u7684\u76f4\u63a5\u51cf 2\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=1;i<=n&&x>0;i++){\n\t\t\t\twhile(x>0&&tl[i]>=1){//\u5904\u7406\u5269\u4f59\u7684\u64cd\u4f5c\u6b21\u6570\n\t\t\t\t\tx--;\n\t\t\t\t\ttl[i]-=1;//\u672a\u5339\u914d\u7684\u889c\u5b50\u6570\u53ea\u80fd\u51cf 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tans+=tl[i];//\u7b54\u6848\u52a0\u4e0a\u672a\u5339\u914d\u7684\u889c\u5b50\u6570\n\t\t\t}\n\t\t}\n\t\telse{//\u540c\u4e0a\n\t\t\tfor(int i=1;i<=n&&x>0;i++){\n\t\t\t\twhile(x>0&&tr[i]>=2){\n\t\t\t\t\tx--;\n\t\t\t\t\ttr[i]-=2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=1;i<=n&&x>0;i++){\n\t\t\t\twhile(x>0&&tr[i]>=1){\n\t\t\t\t\tx--;\n\t\t\t\t\ttr[i]-=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tans+=tr[i];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1620042486,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "CF1515D Phoenix and Socks \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u200b\t\u4f60\u6709$n$\u53ea\u6709\u989c\u8272\u4e14\u5206\u4e3a\u5de6\u53f3\u7684\u889c\u5b50\uff0c\u524d$l$\u53ea\u889c\u5b50\u662f\u5de6\u889c\u5b50\uff0c\u540e$r$\u53ea\u889c\u5b50\u662f\u53f3\u889c\u5b50\uff0c\u6bcf\u53ea\u889c\u5b50\u90fd\u6709\u4e00\u4e2a\u989c\u8272$C_i$\uff0c\u4f60\u53ef\u4ee5\u82b1\u8d391\u4ee3\u4ef7\u505a\u5982\u4e0b**\u67d0\u4e00\u4e2a**\u64cd\u4f5c\n\n\u200b\t\uff081\uff09\u628a\u67d0\u53ea\u889c\u5b50\u91cd\u65b0\u67d3\u6210\u4efb\u610f\u4e00\u79cd\u989c\u8272\n\n\u200b\t\uff082\uff09\u628a\u67d0\u53ea\u5de6\u889c\u5b50\u53d8\u6210\u53f3\u889c\u5b50\uff08\u4e0d\u6539\u53d8\u989c\u8272\uff09\n\n\u200b\t\uff083\uff09\u628a\u67d0\u53ea\u53f3\u889c\u5b50\u53d8\u6210\u5de6\u889c\u5b50\n\n\u200b\t\u95ee\u6700\u5c11\u8981\u82b1\u8d39\u591a\u5c11\u4ee3\u4ef7\uff0c\u53ef\u4ee5\u628a\u8fd9$n$\u53ea\u889c\u5b50\u914d\u6210\u5bf9\uff0c\u4e24\u53ea\u889c\u5b50\u914d\u6210\u5bf9\u662f\u6307\u8fd9\u5176\u4e2d\u4e00\u53ea\u889c\u5b50\u662f\u5de6\u889c\u5b50\uff0c\u53e6\u4e00\u53ea\u889c\u5b50\u662f\u53f3\u889c\u5b50\uff0c\u4e14\u4e24\u53ea\u889c\u5b50\u989c\u8272\u76f8\u540c\u3002\n\n\u200b\t\u6570\u636e\u8303\u56f4\t$1\\leq n \\leq 2*10^5$\uff0c$n$\u662f\u5076\u6570\uff0c$l+r=n$\uff0c$1\\leq C_i \\leq n $\n\n## \u9898\u89e3\n\n\u200b\t\u5bf9\u4e8e\u5de6\u53f3\u889c\u5b50\uff0c\u6211\u4eec\u5206\u522b\u5efa\u4e00\u4e2a\u6876\uff0c\u5982\u679c\u539f\u5148\u5c31\u53ef\u4ee5\u914d\u5bf9\u7684\uff0c\u6211\u4eec\u6210\u5bf9\u5148\u5220\u53bb\u3002\n\n\u200b\t\u4e4b\u540e\u6211\u4eec\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u5806\u76f8\u540c\u989c\u8272\u7684\u5de6\u6216\u53f3\u889c\u5b50\u6216\u8005\u67d0\u4e2a\u5de6\u889c\u5b50\u914d\u5bf9\u67d0\u4e2a\u53f3\u889c\u5b50\uff0c\u82b1\u8d391\u4ee3\u4ef7\u5c31\u53ef\u4ee5\u914d\u5bf9\u51fa1\u5bf9\uff0c\u5148\u6210\u5bf9\u7edf\u8ba1\u3002\t\n\n\u200b\t\u4e8e\u662f\u95ee\u9898\u5728\u4e8e\u90a3\u4e9b\u7684\u843d\u5355\u7684\u4e00\u8fb9\u7684\u889c\u5b50\uff0c\u5b83\u4eec\u53c8\u9700\u8981\u6362\u989c\u8272\uff0c\u53c8\u9700\u8981\u6362\u65b9\u5411\uff0c\u6211\u4eec\u8981\u5c3d\u91cf\u51cf\u5c11\u8fd9\u6837\u7684\u60c5\u51b5\u7684\u53d1\u751f\u3002\n\n\u200b\t\u90a3\u6211\u4eec\u5148\u7edf\u8ba1\u51fa\u5de6\u548c\u53f3\u6876\u4e2d\u67d0\u4e2a\u989c\u8272\u7684\u889c\u5b50\u6570\u4e3a\u5947\u6570\u7684\u6570\u91cf\uff0c\u4f18\u5148\u8003\u8651\u7528\u5bf9\u4fa7\u7684\u889c\u5b50\u6d88\u53bb\uff0c\u5373\u5c3d\u91cf\u4f7f\u82b12\u4ee3\u4ef7\u914d\u5bf9\u7684\u5bf9\u6570\u5c3d\u91cf\u5c11\u3002\n\n# CODE\n\n\u200b\t```\n\n\u200b\t\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define ll long long\n#define ri register int\n#define rep(i,l,r) for(ll i=(l);i<=(r);++i)\n#define req(i,r,l) for(ll i=(r);i>=(l);--i)\n#define wif while\nconst ll inf = INT_MAX , df = 3e5 + 7 ;\ninline ll read()\t{\n\tll x = 0 , y = 1 ;\tchar ch=getchar();\n\twif(ch>'9'||ch<'0')\ty=(ch=='-')?-1:1,ch=getchar();\n\twif(ch>='0'&&ch<='9')\tx=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn x*y;\t}\nll i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,buc[2][df];\nint main()\t{\n\tt=read();\n\twif(t--)\t{\n\t\tn=read(),l=read(),r=read();\n\t\trep(i,1,n)\tbuc[0][i]=buc[1][i]=0;\n\t\trep(i,1,l)\tx=read(),buc[0][x]++;\n\t\trep(i,1,r)\tx=read(),buc[1][x]++;\n\t\trep(i,1,n)\t{\n\t\t\tll tmp = min(buc[0][i],buc[1][i]);\n\t\t\trep(j,0,1)\tbuc[j][i] -= tmp ;\n\t\t}\n\t\tll cnt0=0,cnt1=0,ans=0,num0=0,num1=0;\n\t\trep(i,1,n)\tcnt0+=buc[0][i],cnt1+=buc[1][i],num0+=buc[0][i]%2,num1+=buc[1][i]%2;\n\t\tcnt0-=num0,cnt1-=num1;\n\t\tll tmp=min(num0,num1);\n\t\tans+=tmp;num0-=tmp,num1-=tmp;\n\t\tif(num1)\tswap(num0,num1),swap(cnt0,cnt1),swap(buc[0],buc[1]);\n\t\tif(num0<=cnt1)\t{\n\t\t\tans+=num0,cnt1-=num0;\n\t\t\tans+=cnt0/2+cnt1/2;\n\t\t}\n\t\telse\t{\n\t\t\tans+=num0+cnt0/2;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n}\n```\n\n\u200b\t",
        "postTime": 1620035417,
        "uid": 181164,
        "name": "CLZY",
        "ccfLevel": 0,
        "title": "CF1515D Phoenix and Socks \u9898\u89e3"
    },
    {
        "content": "\u6709 $n$ \u53ea\u889c\u5b50\uff0c\u73b0\u5728\u53ef\u4ee5\u6539\u989c\u8272\u6216\u8005\u66f4\u6539\u5de6\u53f3\uff0c\u6c42\u6700\u5c0f\u64cd\u4f5c\u6570\u4f7f\u889c\u5b50\u5168\u90e8\u914d\u5bf9\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbe $l\\ge r$\uff08\u5426\u5219\u53ef\u4ee5\u4ea4\u6362\uff0c\u4e0d\u5f71\u54cd\u7b54\u6848\uff09\uff0c\u540c\u65f6\uff0c\u6211\u4eec\u7ef4\u62a4\u6bcf\u79cd\u989c\u8272\u889c\u5b50\u7684\u6570\u91cf\u3002\u5982\u679c\u5de6\u53f3\u90fd\u6709\u8fd9\u79cd\u989c\u8272\u7684\u889c\u5b50\uff0c\u5219\u663e\u7136\u53ef\u4ee5\u5c06\u5176\u5220\u9664\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7b54\u6848\u3002\u5047\u8bbe\u5220\u5b8c\u540e\u5de6\u889c\u5b50\u6709 $l^\\prime$ \u53ea\uff0c\u53f3\u889c\u5b50\u6709 $r^\\prime$ \u53ea\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u5de6\u53f3\u6ca1\u6709\u989c\u8272\u76f8\u540c\u7684\u889c\u5b50\uff0c\u6211\u4eec\u8981\u5c06\u4e00\u90e8\u5206\u5de6\u889c\u5b50\u53d8\u6210\u53f3\u889c\u5b50\u3002\u6ce8\u610f\u5230\uff0c\u5982\u679c\u67d0\u79cd\u989c\u8272\u7684\u5de6\u889c\u5b50\u6709\u591a\u53ea\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u5176\u4e2d\u4e00\u53ea\u53d8\u6210\u53f3\u889c\u5b50\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf\u5c11\u66f4\u6539\u989c\u8272\u7684\u64cd\u4f5c\u6570\u91cf\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u7edf\u8ba1\u80fd\u591f\u5339\u914d\u6210\u5bf9\u7684\uff08\u989c\u8272\u76f8\u540c\u7684\uff09\u5de6\u889c\u5b50\u6570\uff08\u8bbe\u5176\u6709 $k$ \u5bf9\uff09\uff0c\u7136\u540e\u6839\u636e\u5927\u5c0f\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u82e5 $l^\\prime - r^\\prime \\ge 2k$\uff0c\u5373\u5c06\u6240\u6709\u7684\u889c\u5b50\u5bf9\u62c6\u6563\u540e\uff0c\u4f9d\u65e7\u65e0\u6cd5\u4f7f\u5de6\u53f3\u889c\u5b50\u6570\u76f8\u540c\u3002\u6b64\u65f6\u4e00\u90e8\u5206\u5de6\u889c\u5b50\uff08\u6307\u6ca1\u6709\u5339\u914d\u7684\uff0c\u4e0b\u540c\uff09\u8981\u79fb\u8fc7\u53bb\uff0c\u5269\u4e0b\u7684\u5de6\u889c\u5b50\u8981\u6539\u989c\u8272\uff08\u7531\u4e8e\u989c\u8272\u4e24\u4e24\u4e0d\u540c\uff0c\u6240\u4ee5\u4e00\u5b9a\u5168\u90e8\u8981\u6539\uff09\uff0c\u7b54\u6848\u5c31\u662f $l^\\prime + k$\uff1b\n- \u82e5 $l^\\prime - r^\\prime < 2k$\uff0c\u5373\u5de6\u889c\u5b50\u914d\u7684\u5bf9\u5b50\u6570\uff0c\u5927\u4e8e\u5de6\u53f3\u889c\u5b50\u5dee\uff0c\u5373\u6709\u4e00\u90e8\u5206\u5bf9\u5b50\u65e0\u6cd5\u62c6\u6563\u3002\u6b64\u65f6\u5269\u4e0b\u7684\u5de6\u889c\u5b50\uff08\u6b64\u5904\u6307\u6ca1\u6709\u79fb\u8fc7\u53bb\uff0c\u6216\u6ca1\u6709\u4e0e\u79fb\u8fc7\u53bb\u7684\u914d\u5bf9\u7684\uff0c\u4e0b\u540c\uff09\u4f9d\u65e7\u8981\u5168\u90e8\u6539\u989c\u8272\u3002\u6ce8\u610f\u5230\u79fb\u8fc7\u53bb\u4e86 $\\dfrac{l^\\prime+r^\\prime+2k}{2}-r^\\prime = \\dfrac{l^\\prime+2k-r^\\prime}{2}$ \u53ea\u889c\u5b50\uff0c\u5269\u4e0b\u7684\u5de6\u889c\u5b50\u4e0e\u53f3\u889c\u5b50\u6570\u76f8\u540c\uff0c\u6240\u4ee5\u7b54\u6848\u662f $\\dfrac{l^\\prime+2k-r^\\prime}{2}+r^\\prime = \\dfrac{l^\\prime+r^\\prime}{2}+k$\u3002\n\nCode\uff1a\n\n```cpp\n#include <iostream>\nusing namespace std;\n \nconst int max_n = 200000;\n \nstruct ass\n{\n\tint cnt[max_n], siz;\n \n\tvoid insert(int x)\n\t{\n\t\tcnt[x]++;\n\t\tsiz++;\n\t}\n \n\tvoid clear(int n)\n\t{\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tcnt[i] = 0;\n\t\tsiz = 0;\n\t}\n \n\tint operator[](const int& id)\n\t{\n\t\treturn cnt[id];\n\t}\n \n\tint at(const int& id)\n\t{\n\t\treturn cnt[id];\n\t}\n\t\n\tvoid reduce(int id, int x)\n\t{\n\t\tsiz -= x;\n\t\tcnt[id] -= x;\n\t}\n \n\tint size() const { return siz; }\n} bass[2];\n \ninline int my_min(int a, int b) { return (a < b)? a:b; }\n \nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\t\n\tint cas, n, l, r, offst;\n\tass *pl, *pr;\n\t\n\tcin >> cas;\n\twhile (cas--)\n\t{\n\t\tcin >> n >> l >> r;\n\t\tbass[0].clear(n), bass[1].clear(n);\n \n\t\tfor (int i = 0, ta; i < l; i++)\n\t\t{\n\t\t\tcin >> ta;\n\t\t\tbass[0].insert(ta-1);\n\t\t}\n\t\tfor (int i = 0, ta; i < r; i++)\n\t\t{\n\t\t\tcin >> ta;\n\t\t\tbass[1].insert(ta-1);\n\t\t}\n \n\t\tif (bass[0].size() > bass[1].size())\n\t\t\tpl = bass, pr = bass + 1;\n\t\telse\n\t\t\tpl = bass + 1, pr = bass;\n\t\t\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (pl->at(i) > 0 && pr->at(i) > 0)\n\t\t\t{\n\t\t\t\tauto x = my_min(pl->at(i), pr->at(i));\n\t\t\t\tpl->reduce(i, x);\n\t\t\t\tpr->reduce(i, x);\n\t\t\t}\n\t\t\n\t\toffst = 0;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (pl->at(i) > 1)\n\t\t\t{\n\t\t\t\toffst += pl->at(i) / 2;\n\t\t\t\tpl->reduce(i, (pl->at(i) / 2) * 2);\n\t\t\t}\n\t\t\n\t\tif (pl->size() >= pr->size())\n\t\t\tcout << pl->size() + offst << endl;\n\t\telse\n\t\t\tcout << (pl->size() + pr->size()) / 2 + offst << endl;\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1620008958,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1515D -- Phoenix and Socks"
    }
]