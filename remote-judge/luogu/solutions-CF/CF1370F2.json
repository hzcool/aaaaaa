[
    {
        "content": "\u9000\u5f79\u524d\u53ea\u60f3\u505a\u81ea\u5df1\u559c\u6b22\u7684\u601d\u7ef4\u9898\uff0c\u5e0c\u671b\u8003\u573a\u4e0a\u4e0d\u8981\u964d\u667a\u3002\n\n\u8fd9\u9053\u9898\u8fd8\u4e0d\u7b97\u592a\u96be\uff0c\u6bd4\u8f83\u5957\u8def\u3002\n\n\u89c2\u5bdf Easy Version \u548c Hard Version\uff0c\u663e\u7136\u8fd9\u4e2a\u8be2\u95ee\u6b21\u6570\u662f $\\log$ \u7ea7\u522b\u7684\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u6b21\u5168\u5c40\u67e5\u8be2\u6765\u5f97\u5230\u4fe9\u9690\u85cf\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u7684\u8ddd\u79bb\u548c\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u5e76\u8003\u8651\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6811\u3002\n\n\u8bbe\u4fe9\u9690\u85cf\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u8ddd\u79bb\u4e3a $l$\u3002\n\n\u90a3\u4e48\u5047\u8bbe\u5176\u4e2d\u4e00\u4e2a\u9690\u85cf\u70b9\u7684\u6df1\u5ea6\u4e3a $dep$\uff0c\u53e6\u5916\u4e00\u4e2a\u9690\u85cf\u70b9\u7684\u6df1\u5ea6\u4e5f\u5c31\u4e0d\u95ee\u81ea\u6765\uff0c\u540c\u65f6\u6211\u4eec\u53ea\u9700\u8981\u4e00\u6b21\u8be2\u95ee\u5c31\u80fd\u628a\u53e6\u5916\u4e00\u4e2a\u9690\u85cf\u70b9\u7ed9\u95ee\u51fa\u6765\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\u95ee\u6df1\u5ea6\u4e3a $x-pos$ \u7684\u4e14\u4e0d\u5728\u7b2c\u4e00\u4e2a\u9690\u85cf\u70b9\u5230\u6839\u7684\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6240\u6709\u70b9\uff08\u7279\u522b\u7684\uff0c\u82e5 $x=pos$ \u5219\u4e0d\u9700\u8981\u95ee\uff0c\u9632\u6b62\u51fa\u73b0\u5947\u602a\u9519\u8bef\uff09\u3002\n\n\u90a3\u4e48\u7b2c\u4e00\u4e2a\u9690\u85cf\u70b9\u548b\u95ee\uff0c\u4e8c\u5206\uff01\n\n\u6bcf\u6b21\u5c06\u6df1\u5ea6\u5728 $[mid,maxdep]$ \u7684\u70b9\u5168\u90e8\u95ee\u4e00\u904d\uff0c\u82e5\u8fd4\u56de\u7684 $dis$ \u4e3a\u6700\u5f00\u59cb\u8be2\u95ee\u7684\u503c\uff0c\u8bf4\u660e\u6df1\u5ea6\u5728 $[mid,maxdep]$ \u7684\u70b9\u4e0a\u5b58\u5728\u4e00\u4e2a\u9690\u85cf\u70b9\uff0c\u53cd\u4e4b\u6ca1\u6709\u3002\n\n\u8fd9\u6837\u4e0b\u53bb\uff0c\u6211\u4eec\u5c31\u80fd\u95ee\u5230\u4e24\u4e2a\u9690\u85cf\u70b9\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u70b9\uff0c\u7ee7\u800c\u7528\u4e00\u6b21\u8be2\u95ee\u5c31\u80fd\u6c42\u51fa\u7b2c\u4e8c\u4e2a\u70b9\u3002\n\n\u8ba1\u7b97\u8be2\u95ee\u6b21\u6570\u4e0a\u754c\uff0c\u53d1\u73b0\u6b21\u6570\u4e3a $1+\\left\\lceil\\log n\\right\\rceil+1=12$ \u6b21\uff0c\u901a\u8fc7 Easy Version \u7ef0\u7ef0\u6709\u4f59\uff0c\u4f46 Hard Version \u8fd8\u5dee\u4e00\u6b21\u3002\n\n\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u4ec0\u4e48\u9ad8\u660e\u7684\u4e8c\u5206\u80fd\u8fc7 Hard Version\uff0c\u53cd\u6b63\u6211\u7684\u4e0d\u80fd\u3002\n\n\u90a3\u8fd8\u80fd\u4ece\u54ea\u4e0b\u624b\u4f18\u5316\u554a\uff0c\u603b\u4e0d\u80fd\u4f18\u5316\u90a3\u4e24\u6b21\u8be2\u95ee\u5427\uff0c\u8fd9\u4e24\u6b21\u90fd\u662f\u5b9a\u4f4f\u7684\u554a\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u53ea\u80fd\u4f18\u5316\u4e8c\u5206\u4e86\uff0c\u4f46\u662f\u521a\u521a\u8bf4\u4e86\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u9ad8\u660e\u7684\u4e8c\u5206\u80fd\u8fc7\u8fd9\u9898\uff0c\u6240\u4ee5\u60f3\u6d3b\u751f\u751f\u7684\u5c06 $1000$ \u8303\u56f4\u5185\u7684\u4e8c\u5206\u4f18\u5316\u6210 $9$ \u6b21\u662f\u4e0d\u592a\u53ef\u80fd\u4e86\u3002\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4ece\u4e8c\u5206\u8303\u56f4\u4e0b\u624b\uff0c\u56e0\u4e3a\u4e0d\u662f $1$ ~ $1000$ \u4e2d\u7684\u6bcf\u4e2a\u6df1\u5ea6\u90fd\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff0c\u6bd4\u5982\u6bd4 $l$ \u5927\u7684\u5c31\u4e0d\u884c\u3002\n\n\u4f46\u8fd9\u8fd8\u4e0d\u591f\uff0c\u5176\u5b9e\u6211\u4eec\u8981\u67e5\u7684\u662f\u9690\u85cf\u70b9\u4e2d\u6df1\u5ea6\u8f83\u5927\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684\u6df1\u5ea6\u81f3\u5c11\u662f $\\left\\lceil\\dfrac l2\\right\\rceil$ \u7684\u3002\u8fd9\u6837\uff0c\u4e8c\u5206\u8303\u56f4\u5c31\u88ab\u6d3b\u751f\u751f\u7684\u7f29\u5c0f\u5230\u4e86 $500$\uff0c\u6b63\u597d\u80fd\u8ba9\u4e8c\u5206\u6b21\u6570\u5c11\u4e00\u6b21\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u539f\u6765\u8fd9\u4e2a trick \u53ef\u4ee5\u8ba9\u8bc4\u5206\u591a\u4e0a $300$/kx\u3002\n# AC code\uff1a\n```cpp\nvector<int> edge[1005],v[1005];\nint dep,ask[1005],maxdep,fa[1005];\nbool ban[1005];\nvoid dfs(int u,int f){\n\tv[dep].eb(u),fa[u]=f,maxdep=max(maxdep,dep++);\n\tfor(int v:edge[u]) if(v^f) dfs(v,u);dep--; \n}\nvoid solve(){\n\tint n=rd(n),i,cnt=0;maxdep=0;ms(ban,0);\n\tfor(i=1;i<=n;i++) vector<int>().swap(edge[i]),vector<int>().swap(v[i-1]);\n\tfor(i=1;i<n;i++){int u=rd(u),v=rd(v);edge[u].eb(v),edge[v].eb(u);}\n\tprintf(\"? %d \",n);for(i=1;i<=n;i++) pr(i),sp;en,fs;int rt=rd(rt),d=rd(d);\n\tdfs(rt,0);int l=d+1>>1,r=min(d,maxdep),pos,p;\n\twhile(l<=r){\n\t\tint mid=l+r>>1,cnt=0;\n\t\tfor(i=mid;i<n;i++) for(int j:v[i]) ask[++cnt]=j;\n\t\tprintf(\"? %d \",cnt);for(i=1;i<=cnt;i++) pr(ask[i]),sp;en,fs;\n\t\tint x=rd(x),dis=rd(dis);if(dis==d) pos=mid,p=x,l=mid+1;else r=mid-1;\n\t}\n\tfor(i=p;i;i=fa[i]) ban[i]=1;\n\tif(pos^d){\n\t\tfor(int val:v[d-pos]) cnt+=!ban[val];printf(\"? %d \",cnt);\n\t\tfor(int val:v[d-pos]) if(!ban[val]) pr(val),sp;en,fs;\n\t\tint x=rd(x),tmp=rd(tmp);printf(\"! %d %d\\n\",p,x),fs;\n\t}else printf(\"! %d %d\\n\",rt,p),fs;string s;cin>>s;\n}\n```",
        "postTime": 1650636282,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1370F1&F2"
    },
    {
        "content": "\u4e0d\u751a\u56f0\u96be\u7684\u4ea4\u4e92\u9898\uff0c\u4f46\u6700\u540e\u4e00\u6b65\u786e\u5b9e\u6ca1\u60f3\u5230\uff0c\u8fd8\u662f\u6280\u4e0d\u5982\u4eba\u3002\n\n\u4e0d\u59a8\u79f0\u4e24\u4e2a\u88ab\u6807\u8bb0\u7684\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e3a\u201c\u6807\u8bb0\u8def\u5f84\u201d\u3002\n\n\u9700\u8981\u5148\u83b7\u53d6\u4e00\u4e9b\u5168\u5c40\u7684\u4fe1\u606f\u3002\u7b2c\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u6211\u4eec\u4ee4\u67e5\u8be2\u7684\u96c6\u5408\u4e3a\u6240\u6709\u9876\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u5fc5\u7136\u5728\u6807\u8bb0\u8def\u5f84\u4e0a\u7684\u9876\u70b9 $r$\uff0c\u4ee5\u53ca\u6807\u8bb0\u8def\u5f84\u7684\u957f\u5ea6 $l$\u3002\u81ea\u7136\u5730\uff0c\u6211\u4eec\u5c06 $r$ \u5b9a\u4e3a\u6811\u7684\u6839\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u8bbe\u4e00\u4e2a\u70b9 $x$ \u5230\u4e24\u4e2a\u6807\u8bb0\u70b9\u7684\u8ddd\u79bb\u548c\u4e3a $d$\uff0c\u5219\uff1a\n\n- \u82e5 $x$ \u5904\u5728\u6807\u8bb0\u8def\u5f84\u4e0a\uff0c\u5219 $d=l$\uff1b\n\n- \u5426\u5219 $d>l$\u3002\n\n\u5229\u7528\u8fd9\u4e00\u6761\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u67e5\u8be2\u7684\u96c6\u5408\u4e2d\u662f\u5426\u6709\u70b9\u5728\u6807\u8bb0\u8def\u5f84\u4e0a\u3002\n\n\u5728\u786e\u5b9a\u6839\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u518d\u9884\u5904\u7406\u51fa\u82e5\u5e72\u96c6\u5408 $S_1,S_2,\\cdots$\uff0c\u5176\u4e2d $S_t$ \u662f\u6240\u6709\u6df1\u5ea6\u4e3a $t$ \u7684\u70b9\u7ec4\u6210\u7684\u96c6\u5408\u3002\n\n\u663e\u7136\uff0c\u6807\u8bb0\u8def\u5f84\u4e0a\u6df1\u5ea6\u6700\u5927\u7684\u9876\u70b9\u4e00\u5b9a\u662f\u7b54\u6848\u4e4b\u4e00\uff0c\u6839\u636e\u8fd9\u4e00\u70b9\u6211\u4eec\u60f3\u5230\u53ef\u4ee5\u4e8c\u5206\u6b64\u6df1\u5ea6\u3002\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5982\u679c\u5f53\u524d\u4e8c\u5206\u7684\u4e2d\u503c\u4e3a $m$\uff0c\u90a3\u6211\u4eec\u5c31\u67e5\u8be2 $S_m$ \u8fd9\u4e2a\u96c6\u5408\uff0c\u5e76\u5224\u65ad\u8fd4\u56de\u7684 $d$ \u503c\u662f\u5426\u7b49\u4e8e $l$\u3002\u5982\u679c\u76f8\u7b49\uff0c\u90a3\u4e48\u6700\u5927\u6df1\u5ea6\u4e0d\u5c0f\u4e8e $m$\uff0c\u5426\u5219\u6700\u5927\u6df1\u5ea6\u5c0f\u4e8e $m$\u3002\u8fd9\u6837\u4e0b\u53bb\uff0c\u6700\u540e\u4e00\u6b21 $d=l$ \u7684\u67e5\u8be2\u4e2d\uff0c\u8fd4\u56de\u7684 $x$ \u503c\u5373\u4e3a\u5176\u4e2d\u4e00\u4e2a\u7b54\u6848\u70b9\uff0c\u4e0d\u59a8\u8bb0\u4e3a $a_1$\u3002\n\n\u6700\u540e\u518d\u67e5\u8be2\u6240\u6709\u4e0e $a_1$ \u8ddd\u79bb\u4e3a $l$ \u7684\u70b9\u5373\u53ef\uff0c\u6240\u5f97\u7684 $x$ \u5373\u4e3a\u53e6\u4e00\u4e2a\u7b54\u6848\u70b9\u3002\u8fd9\u6837\u7684\u67e5\u8be2\u6b21\u6570\u81f3\u591a\u662f $1+\\lceil\\log_2 1000\\rceil+1=12$\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7248\u3002\n\n\u6700\u540e\u7684\u4f18\u5316\u4e5f\u5341\u5206\u7b80\u660e\uff1a\u6700\u5927\u6df1\u5ea6\u81f3\u5c11\u662f $\\lceil\\frac{l}{2}\\rceil$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u4e8c\u5206\u5de6\u7aef\u70b9\u521d\u503c\u8bbe\u4e3a $\\lceil\\frac{l}{2}\\rceil$\uff0c\u5373\u53ef\u5c06\u4e8c\u5206\u90e8\u5206\u7684\u67e5\u8be2\u6b21\u6570\u51cf\u5c11 $1$\uff0c\u4ece\u800c\u901a\u8fc7\u6b64\u9898\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n#define mp make_pair\n#define pii pair<int,int>\n#define fi first\n#define se second\n\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 1005;\ninline int readint()\n{\n\tint res = 0, f = 1;\n\tchar c = 0;\n\twhile(!isdigit(c))\n\t{\n\t\tc = getchar();\n\t\tif(c=='-')\n\t\t\tf = -1;\n\t}\n\twhile(isdigit(c))\n\t\tres = res*10+c-'0', c = getchar();\n\treturn res*f;\n}\nint n;\nstruct Edge\n{\n\tint u,v;\n\tEdge *next;\n}*h[MAXN],pool[MAXN<<1];\nint tot;\ninline void addEdge(int u, int v)\n{\n\tEdge *p = &pool[++tot], *q = &pool[++tot];\n\tp->v = v, p->next = h[u], h[u] = p;\n\tq->v = u, q->next = h[v], h[v] = q; \n}\nvector<int> qs;\ninline pii query(vector<int> &a)\n{\n\tcout << \"? \" << a.size() << \" \";\n\tfor(int i = 0; i<a.size(); i++)\n\t\tcout << a[i] << \" \";\n\tcout << endl, cout.flush();\n\tpii res;\n\tres.fi = readint(), res.se = readint();\n\treturn res;\n}\nint dep[MAXN],dis[MAXN];\nvector<int> d[MAXN];\ninline void dfs(int u, int fa)\n{\n\td[dep[u]].push_back(u);\n\tfor(Edge *p = h[u]; p; p = p->next)\n\t\tif(p->v!=fa)\n\t\t\tdep[p->v] = dep[u]+1, dfs(p->v,u);\n}\ninline void dfs1(int u, int fa)\n{\n\tfor(Edge *p = h[u]; p; p = p->next)\n\t\tif(p->v!=fa)\n\t\t\tdis[p->v] = dis[u]+1, dfs1(p->v,u);\n}\nint len,res;\ninline bool check(int x)\n{\n\tif(!d[x].size())\n\t\treturn false;\n\tpii t = query(d[x]);\n\tif(t.se==len)\n\t\tres = t.fi;\n\treturn t.se==len;\n}\nchar stat[MAXN];\ninline bool solve()\n{\n\tmemset(h,0,sizeof(h));\n\tmemset(dep,0,sizeof(dep));\n\tmemset(dis,0,sizeof(dis));\n\tres = tot = 0;\n\tfor(int i = 0; i<MAXN; i++)\n\t\td[i].clear();\n\tn = readint();\n\tfor(int i = 1; i<n; i++)\n\t\taddEdge(readint(),readint());\n\tqs.clear();\n\tfor(int i = 1; i<=n; i++)\n\t\tqs.push_back(i);\n\tpii t = query(qs);\n\tdfs(t.fi,0), len = t.se;\n\tint left = (len-1)/2+1, right = len, mid;\n\twhile(left<=right)\n\t{\n\t\tmid = (left+right)>>1;\n\t\tif(check(mid))\n\t\t\tleft = mid+1;\n\t\telse\n\t\t\tright = mid-1; \n\t}\n\tint ans1 = res, ans2;\n\tdfs1(ans1,0);\n\tqs.clear();\n\tfor(int i = 1; i<=n; i++)\n\t\tif(dis[i]==len)\n\t\t\tqs.push_back(i);\n\tans2 = query(qs).fi;\n\tcout << \"! \" << ans1 << \" \" << ans2 << endl;\n\tcout.flush();\n\tcin >> stat+1;\n\treturn stat[1]=='C';\n}\n\nint main()\n{\n\tint T = readint();\n\twhile(T--)\n\t\tif(!solve())\n\t\t\tbreak;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1593086553,
        "uid": 31098,
        "name": "Caro23333",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1370F2 \u3010The Hidden Pair (Hard Version)\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6709\u4e24\u4e2a\u70b9 $a,b$ \u88ab\u6697\u4e2d\u6807\u8bb0\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8be2\u95ee\u4e00\u4e2a\u96c6\u5408\uff0c\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u96c6\u5408\u91cc\u7684\u67d0\u4e2a\u8282\u70b9 $u$ \uff0c\u6ee1\u8db3 $dis_{a,u}+dis_{b,u}$ \u6700\u5c0f\u3002\u8bf7\u5728 $11$ \u6b21\u4ee5\u5185\u5b8c\u6210\u8be2\u95ee\u5e76\u8f93\u51fa\u88ab\u6807\u8bb0\u7684\u70b9\u3002\n\n### \u9898\u89e3\n\n\u8003\u8651\u5982\u4f55\u77e5\u9053 $s \\rightarrow t$ \u7684\u8def\u5f84\u957f\u5ea6\uff1a\u628a\u6240\u6709\u70b9\u62ff\u53bb\u8be2\u95ee\u4e00\u904d\u3002\u8fd9\u6837\u6211\u4eec\u4e00\u5b9a\u4f1a\u5f97\u5230\u8def\u5f84\u4e0a\u7684\u4efb\u610f\u4e00\u70b9 $x$ \u4ee5\u53ca\u8def\u5f84\u957f\u5ea6 $L$ \u3002\n\n\u7136\u540e\u6211\u4eec\u628a $x$ \u4f5c\u4e3a\u6811\u7684\u6839 $root$ \u8fdb\u884c $dfs$ \uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u662f\u627e\u4e24\u4e2a\u70b9 $a,b$ \u4f7f\u5f97 $dis_{a,root}+dis_{b,root}=L$ \uff0c\u6613\u5f97\u77e5\u4e00\u5b9a\u6709\u4e00\u4e2a\u70b9\u5230 $root$ \u7684\u8ddd\u79bb $\\geq \\lceil \\frac{L}{2} \\rceil$ \uff0c\u53e6\u4e00\u4e2a\u70b9\u5230 $root$ \u7684\u8ddd\u79bb $\\leq \\lfloor \\frac{L}{2} \\rfloor$ \uff0c\u53c8\u53d1\u73b0$11-1=10=log_2(1024)$ \uff0c\u4e5f\u5c31\u662f\u6700\u591a\u8fdb\u884c $log$  \u6b21\u8be2\u95ee\uff0c\u53ef\u4ee5\u60f3\u5230\u4e8c\u5206\u3002\u6240\u4ee5\u6211\u4eec\u4e8c\u5206\u5176\u4e2d\u4e00\u4e2a\u70b9\u5230 $root$ \u7684\u8ddd\u79bb\u518d\u901a\u8fc7\u8be2\u95ee\u627e\u53e6\u4e00\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u6ce8\u610f\n\n\u6bcf\u6b21\u8981\u8bfb\u5165\u4e00\u4e2a\u8868\u793a\u6b63\u786e\u548c\u9519\u8bef\u7684\u5b57\u7b26\u4e32\uff01\n\n### \u4ee3\u7801\n\n$\\color{#abcdef}{Code:}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2005;\nint h[N], nxt[N], adj[N], u, v, t, rot, T, L, d[N], n;\nstring tmp;\nvector<int> vec, g[N];\ninline void add() { nxt[++t] = h[u], h[u] = t, adj[t] = v, nxt[++t] = h[v], h[v] = t, adj[t] = u; }\ninline void que() {\n    cout << '?' << ' ' << vec.size();\n    for (const int &i : vec) cout << ' ' << i;\n    cout << endl, cout << flush, cin >> u >> v;\n}\nvoid dfs(int x, int fa) {\n    d[x] = d[fa] + 1, g[d[x] - 1].push_back(x);\n    for (int i = h[x]; i; i = nxt[i])\n        if (adj[i] != fa)\n            dfs(adj[i], x);\n}\nvoid dfs(int x, int fa, int dis) {\n    if (!dis) return vec.push_back(x), void();\n    for (int i = h[x]; i; i = nxt[i])\n        if (adj[i] != fa)\n            dfs(adj[i], x, dis - 1);\n}\nvoid MidSearch() {\n    int l = L + 1 >> 1, r = L, mid, s = 0;\n    while (l <= r) {\n        mid = l + r >> 1, vec = g[mid];\n        if (vec.empty()) {\n            r = mid - 1;\n            continue;\n        }\n        que(), v <= L ? s = u, l = mid + 1 : r = mid - 1;\n    }\n    vec.clear(), dfs(s, 0, L), que(), cout << '!' << ' ' << s << ' ' << u << endl, cout << flush;\n}\nint main() {\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    cin >> T; int i;\n    while (T--) {\n        cin >> n, vec.clear();\n        for (i = 1; i <= n; ++i) h[i] = 0, vec.push_back(i), g[i].clear(); t = 0;\n        for (i = 1; i < n; ++i) cin >> u >> v, add();\n        que(), rot = u, L = v, dfs(rot, 0), MidSearch(), cin >> tmp;\n    }\n    return 0;\n}",
        "postTime": 1598947044,
        "uid": 87724,
        "name": "\u58a8\u821e\u7075\u7eaf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1370F2 \u3010The Hidden Pair (Hard Version)\u3011"
    },
    {
        "content": "\u672c\u6765\u60f3\u628aCF1370F1\u7684\u6587\u7ae0 Ctrl+C+V \u4e0a\u6765\u7684\uff0c\u4f46\u611f\u89c9\u5341\u6709\u516b\u4e5d\u8fc7\u4e0d\u4e86\uff0c\u6240\u4ee5\u91cd\u65b0\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n~~\u5176\u5b9e\u5c31\u662f\u628a\u4e0d\u540c\u4e4b\u5904\u5199\u4e00\u5199~~\n\n>**\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002\u56f0\u96be\u7248\u4e0e\u7b80\u5355\u7248\u552f\u4e00\u7684\u533a\u522b\u662f\u4ea4\u4e92\u6b21\u6570\u9650\u5236\u3002**\n\n\u7b80\u5355\u7248\uff1a14\u6b21\n\u590d\u6742\u7248\uff1a11\u6b21\n\n$2\\le n\\le 1000$\n\n\u6240\u4ee5\u6700\u591a\u8981\u8fdb\u884c $1+log2(1000)+1\\approx 12$ \u6b21\u64cd\u4f5c\u3002\n\n~~\u554a\u554a\u554a\u554a\uff0c\u5c45\u7136\u591a\u4e86\u4e00\u6b21\uff0c\u592a\u73c2\u6015\u4e86\u5427\uff01~~\n\n\u5176\u5b9e\u6709\u4e00\u4e2a\u5730\u65b9\u53ef\u4ee5\u5316\u7b80\uff1a\u5728\u4e8c\u5206\u65f6\u521d\u59cb\u7684 $l,r$ \u5206\u522b\u8bbe\u5b9a\u7684\u662f $0,max(y,dis)$ \uff08y\u7684\u610f\u4e49\u89c1\u7b80\u5355\u7248\u9898\u89e3,dis\u6307\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u7684\u6700\u5927\u503c\uff09\uff0c\u4f46\u5176\u5b9e $l$ \u53ef\u4ee5\u8bbe\u6210 $\\frac y 2$ \u3002\n\n\u539f\u56e0\u5f88\u7b80\u5355\uff1a$a$ \u7684\u6df1\u5ea6\u5927\u4e8e\u7b49\u4e8e $b$ \uff0c\u548c\u7b49\u4e8e $y$ \uff0c\u6240\u4ee5 $a$ \u7684\u6df1\u5ea6\u5927\u4e8e\u7b49\u4e8e $\\frac y 2$ \u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c11\u4e00\u6b21\u64cd\u4f5c\u3002 \uff08$log2(1000)->log2(500)$\uff09\n\n~~\u8fd8\u6709\u4e00\u4e2a\u5f69\u86cb\uff0c\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u80fdAC\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0 ``Incorrect`` \uff0c\u6240\u4ee5\u5bf9 ``Incorrect`` \u7684\u5904\u7406\u5bf9\u7b54\u6848\u4e0d\u5f71\u54cd\uff0c\u5982\u679c\u8bfb\u5165\u4e86 ``Incorrect`` \u4e0d\u4e00\u5b9a\u8981\u6309\u7167\u5b83\u7684\u65b9\u6cd5\u7ed3\u675f\u7a0b\u5e8f\uff0c\u751a\u81f3\u53ef\u4ee5\u7ee7\u7eed\u4e0b\u53bb\uff0c\u4f46 AC \u662f\u4e0d\u53ef\u80fd\u7684\u4e86\u3002~~\n\n\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\uff1a\uff08\u522b\u8dd1\uff0c\u540e\u9762\u8fd8\u6709\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint to,next;\n} edge[2000];\nint t,n,cnt,maxx,ans,head[1001],dep[1001];\nvector<int> v,d[1001];\nstring s;\nvoid add(int x,int y)\n{\n\tedge[++cnt].to=y;\n\tedge[cnt].next=head[x];\n\thead[x]=cnt;\n}\npair<int,int> query(vector<int> &x)\n{\n\tcout<<\"? \"<<x.size()<<\" \"; \n\tfor(int i=0;i<x.size();i++)\n\t\tcout<<x[i]<<\" \";\n\tcout<<endl;\n\tpair<int,int> p;\n\tscanf(\"%d%d\",&p.first,&p.second);\n\treturn p;\n}\nvoid dfs(int x,int fa)\n{\n    d[dep[x]].push_back(x);\n    maxx=max(maxx,dep[x]);\n\tfor(int i=head[x];i;i=edge[i].next)\n\t\tif(edge[i].to!=fa)\n\t\t{\n\t\t\tdep[edge[i].to]=dep[x]+1;\n\t\t\tdfs(edge[i].to,x);\n\t\t}\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tmaxx=cnt=ans=0; \n\t\tv.clear();\n\t\td[0].clear();\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\thead[i]=0;\n\t\t\tv.push_back(i);\n\t\t\td[i].clear();\n\t\t}\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tint a,b;\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tadd(a,b);\n\t\t\tadd(b,a);\n\t\t}\n\t\tpair<int,int> p=query(v);\n\t\tint dis=p.second;\n\t\tdep[p.first]=0;\n\t\tdfs(p.first,0);\n\t\tint l=(dis-1)/2,r=min(maxx,dis);\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tp=query(d[mid]);\n\t\t\tif(p.second==dis)\n\t\t\t{\n\t\t\t\tans=p.first;\n\t\t\t\tl=mid+1;\n\t\t\t}\t\n\t\t\telse\n\t\t\t\tr=mid-1;\n\t\t}\n\t\tdep[ans]=0;\n\t\tv.clear();\n\t\tdfs(ans,0);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(dep[i]==dis)\n\t\t\t\tv.push_back(i);\n\t\tcout<<\"! \"<<ans<<\" \"<<query(v).first<<endl;\n\t\tcin>>s;\n\t\tif(s!=\"Correct\")\n        while(1)\n\t\t\t\tputs(\"MikeMirzayanov is an idiot!\");//\u5927\u5371\n\t}\n\treturn 0;\n}\n```\n### \u5199\u5728\u6700\u540e\n~~\u82b1\u4e86\u4e09\u5929\u65f6\u95f4A\u4e24\u9053\u7d2b\u9898\u597d\u50cf\u4e0d\u4e8f~~\n\n\u901a\u8fc7\u8fd9\u9053\u9898\uff0c\u5bf9\u4ea4\u4e92\u9898\u548c\u6811\u5f62\u7ed3\u6784\u90fd\u6709\u4e86\u8f83\u591a\u7684\u8ba4\u8bc6\u3002\n\n\u5f53\u65f6\u770b\u5230\u6b63\u89e3\u65f6\uff0c\u89c9\u5f97\u6bcf\u4e00\u6b65\u90fd\u5341\u5206\u5de7\u5999\u3002\n\n\u5176\u5b9e\u80fd\u60f3\u5230\u4e8c\u5206\uff08\u8fd9\u6570\u636e\u8303\u56f4\u4e0d\u4e8c\u5206\u5e72\u4ec0\u4e48\uff09\uff0c\u4f46\u6ca1\u6709\u60f3\u5230\u4e8c\u5206\u7684\u8303\u56f4\u548c $check$ \u51fd\u6570\u3002\n\n\u603b\u800c\u8a00\u4e4b\uff0c\u8fd8\u662f\u592a\u84bb\u4e86\uff0c\u7ee7\u7eed\u52a0\u6cb9QAQ\uff01\uff01\uff01\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2udom91v.png)",
        "postTime": 1596362842,
        "uid": 334379,
        "name": "45din\u043e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1370F2 \u3010The Hidden Pair (Hard Version)\u3011"
    }
]