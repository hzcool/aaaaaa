[
    {
        "content": "~~\u4e3a\u5565\u8fd9\u9898\u662f\u4e2a\u84dd\u554a~~\n\n\u9996\u5148\u6bcf\u6761\u8fb9\u90fd\u8981\u6709\u4e2a\u76f8\u540c\u7684\u51fa\u8fb9\uff0c\u8bbe\u7b2c $i$ \u4e2a\u70b9\u6709 $a_i$ \u5bf9\u76f8\u540c\u7684\u8fb9\u3002\n\n\u90a3\u4e48\u540c\u65f6\u8bbe\u7b2c $i$ \u4e2a\u70b9\u7684\u51fa\u5ea6\u4e3a $deg_i$\uff0c\u90a3\u4e48 $deg_i - a_i \\leq k$\uff0c\u5373 $deg_i - k \\leq a_i$\u3002\n\n\u90a3\u4e48\u5c31\u6709\u4e86 $a_i$ \u7684\u53d6\u503c\u8303\u56f4\u3002\n\n\u7136\u540e\u6211\u4eec\u53c8\u53d1\u73b0\uff0c\u4e00\u6761\u8fb9\u53ea\u80fd\u7ed9\u5b83\u7684\u4e00\u4e2a\u7aef\u70b9\u505a\u8d21\u732e\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u516c\u53f8\u90fd\u53ea\u638c\u7ba1\u7740\u4e24\u6761\u9053\u8def\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u4e00\u6761\u8fb9\u540c\u65f6\u5bf9\u5b83\u7684\u7aef\u70b9\u505a\u8d21\u732e\u3002\n\n\u6240\u4ee5\u8bf4\u5c31\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u6765\u505a\u4e86\u3002\u7136\u540e\u6784\u9020\u7684\u65f6\u5019\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u770b\u662f\u5426\u6d41\u91cf\u662f $0$\uff0c\u662f $0$ \u5c31\u76f8\u5f53\u4e8e\u53d6\u8fd9\u6761\u8fb9\u3002\n\n\u6700\u540e\u76f4\u63a5\u6784\u9020\u5373\u53ef\u3002\n\n```cpp\n/*\n    \u957f\u5f13\u80cc\u8d1f\uff0c\u4ed9\u5973\u6708\u9e6b\uff0c\n\t\u68a6\u4e2d\u5f90\u6765\uff0c\u957f\u591c\u60a0\u60a0\u3002\n\t\u4eca\u5bb5\u5171\u541b\uff0c\u591c\u8d4f\u56c3\u5b50\uff0c\n\t\u76fc\u541b\u901f\u5f52\uff0c\u957f\u591c\u60a0\u60a0\u3002\n\t\u7761\u610f\u88ad\u6211\uff0c\u773c\u9616\u68a6\u5fad\uff0c\n\t\u7761\u610f\u88ad\u6211\uff0c\u610f\u5f52\u8941\u8913\u3002\n\t\u624b\u6276\u5353\u63ed\uff0c\u4ed9\u5973\u6c34\u72c3\uff0c\n\t\u76fc\u541b\u901f\u5f52\uff0c\u957f\u591c\u60a0\u60a0\u3002\n\t\u4eca\u5bb5\u5171\u541b\uff0c\u620f\u4e8e\u897f\u697c\uff0c\n\t\u76fc\u541b\u901f\u5f52\uff0c\u957f\u591c\u60a0\u60a0\u3002\n\t\u7761\u610f\u88ad\u6211\uff0c\u6d9f\u951c\u6c60\u7559\uff0c\n\t\u7761\u610f\u88ad\u6211\uff0c\u610f\u5f52\u6d77\u89d2\u3002\n\t\t\t\t\t                  \u2014\u2014\u300aever17\u300b\n*/\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\ninline int read()\n{\n\tint sum = 0, nega = 1;\n\tchar ch = getchar();\n\twhile (ch > '9'||ch < '0')\n\t{\n\t    if (ch == '-') nega = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch <= '9'&&ch >= '0') sum = sum * 10 + ch - '0', ch = getchar ();\n\treturn sum * nega;\n}\nconst int N = 1e4 + 9, M = 1e6 + 9;\nint n, m, s, t;\nint val[M << 1], cnt = 1, head[N], nxt[M << 1], to[M << 1], ans;\nint dep[N], q[N], f, e, deg[N];\ninline void addedge(int u, int v, int w)\n{\n\tto[++cnt] = v, nxt[cnt] = head[u], head[u] = cnt, val[cnt] = w;\n\tto[++cnt] = u, nxt[cnt] = head[v], head[v] = cnt, val[cnt] = 0;\n}\ninline bool bfs()\n{\n\tfor (int i = 1; i <= t; i++) dep[i] = 0;\n\tf = 0, e = 1; q[1] = s; dep[s] = 1;\n\twhile(f < e)\n\t{\n\t\tf++;\n\t\tint u = q[f];\n\t\tfor (int i = head[u]; i; i = nxt[i])\n\t\t\tif(!dep[to[i]] && val[i])\n\t\t\t{ \n\t\t\t\tq[++e] = to[i];\n\t\t\t\tdep[to[i]] = dep[u] + 1;\n\t\t\t}\n\t}\n\tif(dep[t]) return 1;\n\treturn 0;\n}\ninline int dfs(int u, int flow)\n{\n\tint tot = 0;\n\tif(u == t) return flow;\n\tfor (int i = head[u]; i && flow; i = nxt[i]) \n\t\tif(dep[to[i]] == dep[u] + 1 && val[i])\n\t\t{\n\t\t\tint res = dfs(to[i], min(flow, val[i]));\n\t\t\tval[i] -= res;\n\t\t\tval[(i ^ 1)] += res;\n\t\t\tflow -= res;\n\t\t\ttot += res;\n\t\t}\n\tif(!tot) dep[u] = 0;\n\treturn tot;\n}\nint x[M], y[M], k;\nint col[N];\nvector<int> G[N];\ninline void work()\n{\n\tmemset(head, 0, sizeof(head)); cnt = 1;\n\tn = read(), m = read(), k = read(); ans = 0;\n\tint qwqaq = 0;\n\ts = n + m + 1, t = n + m + 2;\n\tfor (int i = 1; i <= n; i++) deg[i] = 0, G[i].clear();\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tx[i] = read(), y[i] = read(); deg[x[i]]++, deg[y[i]]++;\n\t\taddedge(s, i, 1); addedge(i, m + x[i], 1); addedge(i, m + y[i], 1);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif(deg[i] > k * 2) \n\t\t{\n\t\t\tfor (int j = 1; j <= m; j++) printf(\"0 \"); puts(\"\");\n\t\t\treturn ;\n\t\t} \n\t\tint now = max(0ll, (deg[i] - k) * 2);\n\t\taddedge(m + i, t, now); qwqaq += now;\n\t}\n\twhile(bfs()) ans += dfs(s, 1e18);\n\tif(qwqaq != ans)\n\t{\n\t\tfor (int i = 1; i <= m; i++) printf(\"0 \"); puts(\"\");\n\t\treturn ;\n\t}\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tif(val[i * 6 - 2] == 0) G[to[i * 6 - 2] - m].push_back(i);\n\t\telse if(val[i * 6] == 0) G[to[i * 6] - m].push_back(i);\n\t}\n\tint cnt = 0;\n\tfor (int i = 1; i <= m; i++) col[i] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j < G[i].size(); j += 2)\n\t\t\tcol[G[i][j]] = col[G[i][j + 1]] = ++cnt;\n\tfor (int i = 1; i <= m; i++)\n\t\tif(!col[i]) col[i] = ++cnt;\n\tfor (int i = 1; i <= m; i++) printf(\"%lld \", col[i]); puts(\"\");\n\treturn ;\n}\nsigned main()\n{\n\tint T = read();\n\tfor (int ttt = 1; ttt <= T; ttt++)\n\t\twork();\n}\n```\n",
        "postTime": 1637138495,
        "uid": 97304,
        "name": "Mophie",
        "ccfLevel": 0,
        "title": "CF1070I Privatization of Roads in Berland \u9898\u89e3"
    }
]