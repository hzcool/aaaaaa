[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1611D)\n\n~~\u4e00\u773c\u9898\uff0c\u597d\u50cf\u4e0d\u81f3\u4e8e\u7eff\uff1f~~\n\n\u65e2\u7136\u7ed9\u51fa\u6700\u540e\u5230\u6839\u8ddd\u79bb\u6392\u540d\uff0c\u60f3\u5230\u6784\u9020\u4f7f\u6392\u7b2c $i$ \u7684\u8282\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u4e3a $i-1$\u3002\u8fd9\u6837\u5c31\u6ee1\u8db3\u4e86\u6392\u5217\u7684\u8981\u6c42\u3002\n\n\u7136\u540e\u5904\u7406\u51fa\u7b54\u6848\uff1a\u8bbe\u4e00\u4e2a\u70b9 $i$ \u6392\u540d $rk_i$\uff0c\u5176\u7236\u4eb2\u8282\u70b9\u4e3a $fa_i$\uff0c\u56e0\u4e3a $i$ \u5230\u6839\u8282\u70b9\u8ddd\u79bb $rk_i-1$\uff0c$fa_i$ \u5230\u6839\u8282\u70b9\u8ddd\u79bb $rk_{fa_i}-1$\uff0c\u6240\u4ee5\u8be5\u8282\u70b9\u5230\u5b83\u7236\u4eb2\u7684\u8fb9\u6743\u4e3a $(rk_i-1)-(rk_{fa_i}-1)=rk_i-rk_{fa_i}$\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u8981\u5c1d\u8bd5\u8bc1\u660e\u5728\u8fd9\u79cd\u6784\u9020\u4e2d\u8fb9\u6743\u5168\u4e3a\u6b63\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u9664\u6839\u8282\u70b9\u5916\u7684\u8282\u70b9\u7684\u6392\u540d\u4e00\u5b9a\u5927\u4e8e\u7236\u4eb2\u8282\u70b9\u7684\u6392\u540d\uff0c\u5426\u5219\u8fb9\u6743\u5c31\u4f1a\u51fa\u73b0\u8d1f\u6570\uff0c\u4fdd\u8bc1\u4e86\u8fb9\u6743\u4e3a\u6b63\uff0c\u6784\u9020\u6210\u7acb\u3002\n\n\u5982\u679c\u8fb9\u6743\u6709\u8d1f\u6570\uff0c\u5373\u4efb\u610f\u4e00\u4e2a $rk_i-rk_{fa_i}<0$\uff0c\u5219\u65e0\u89e3\u3002\n\n\u6ce8\u610f\uff1a\u6839\u8282\u70b9\u7684\u7236\u4eb2\u5728\u8f93\u5165\u4e2d\u8868\u793a\u4e3a\u5b83\u672c\u8eab\u3002\n\ncode\uff1a\n\n```cpp\nint n,rk[N],dep[N],ans[N];\nbool flag;\nint tot,head[N];struct node{int to,nxt;}e[N];\ninline void add(int u,int v){e[++tot]={v,head[u]},head[u]=tot;}\nvoid dfs(int u,int f){\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f)continue;\n\t\tans[v]=rk[v]-rk[u];\n\t\tif(ans[v]<0)flag=false;\n\t\tdep[v]=dep[u]+ans[v];\n\t\tdfs(v,u);\n\t}\n}\ninline void init(){mems(ans,0),mems(dep,0),mems(head,0),tot=0;}\nvoid solve(){\n\tinit();\n\tscanf(\"%d\",&n);\n\tint root;\n\tfor(int v=1,u;v<=n;v++){\n\t\tscanf(\"%d\",&u);\n\t\tif(u!=v)add(u,v);\n\t\telse root=v;\n\t}\n\tfor(int i=1,x;i<=n;i++)scanf(\"%d\",&x),rk[x]=i;\n\tflag=true,dfs(root,0);\n\tif(!flag){puts(\"-1\");return;}\n\tfor(int i=1;i<=n;i++)printf(\"%d \",ans[i]);\n\tputchar('\\n');\n}\nsigned main(){\n\tint t=1;\n\tscanf(\"%d\",&t);\n\twhile(t--)solve();\n}\n```",
        "postTime": 1670329096,
        "uid": 578590,
        "name": "yinhee",
        "ccfLevel": 0,
        "title": "CF1611D\u9898\u89e3"
    },
    {
        "content": "### $\\text{Difficulty : 1500}$\n\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u601d\u7ef4\u9898\u3002\n\n\u5148\u8f6c\u6362\u4e00\u4e0b $p_i$ \u4e3a\u6bcf\u4e00\u4e2a\u70b9\u7684\u6392\u540d\uff0c\u8bbe\u4e3a $r_i$\uff0c\u4e0d\u59a8\u5f3a\u5236\u8ba9 $r_i$ \u5230\u6839\u7684\u8ddd\u79bb\u4e3a $r_i$\uff08\u6216\u8005\u79f0 $p_i$ \u5230\u6839\u7684\u8ddd\u79bb\u4e3a $i$\uff0c\u4e24\u8005\u7b49\u4ef7\uff09\u3002\n\n\u77e5\u9053\u4e86\u6bcf\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u4ee5\u540e\u76f4\u63a5\u904d\u5386\u4e00\u4e0b\u6811\u5c31\u53ef\u4ee5\u5224\u65ad\u4e86\u3002\n\n\u66f4\u5177\u4f53\u5730\uff0c\u6709\u6bcf\u4e00\u4e2a\u70b9\u7684\u5230\u5176\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u7b49\u4e8e\u4e24\u8005\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u4e4b\u5dee\uff0c\u5982\u679c\u51fa\u73b0\u8d1f\u6570\u5219\u4e00\u5b9a\u65e0\u89e3\u3002\n\n---\n\u8fd9\u4e00\u8f6c\u5316\u4e0e\u539f\u6761\u4ef6\u7b49\u4ef7\u8fd8\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u9996\u5148\u9898\u76ee\u8981\u6c42\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u4e25\u683c\u9012\u589e\uff0c\u4e0d\u80fd\u6709\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u800c\u4e14\u5982\u679c\u5230\u6392\u5217\u4e2d\u7684\u76f8\u90bb\u4e24\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u6bd4 $1$ \u66f4\u5927\uff0c\u5219\u4e00\u5b9a\u6709\u65b9\u6cd5\u5c06\u5176\u8f6c\u6362\u4e3a $1$ \u5e76\u4e14\u4fdd\u6301\u5408\u6cd5\uff0c\u8fd9\u4e00\u6b65\u8f6c\u5316\u662f\u4e3a\u4e86\u8ba9\u95ee\u9898\u66f4\u52a0\u5f62\u5f0f\u5316\u3002\n\n---\n\n\u5f53\u7136\u4ee5\u4e0a\u53ea\u662f\u4e00\u4e2a\u6bd4\u8f83\u89c4\u8303\u7684\u505a\u6cd5\uff0c\u5176\u5b9e\u968f\u4fbf\u4e00\u4e2a\u4ec0\u4e48\u5dee\u4e0d\u591a\u7684\u4e25\u683c\u9012\u589e\u6570\u5217\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u5230\u8fbe\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u6ce8\u610f\u4e0d\u8981\u8d85\u8fc7 $10^9$ \u7684\u4e0a\u9650\u5c31\u884c\u4e86\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int MAXN=400005;\nint n,T,head[MAXN],nxt[MAXN],num[MAXN],x,dep[MAXN],w[MAXN],tot,flag,root;\nvoid add(int x,int y){\n\tnxt[++tot]=head[x];head[x]=tot;num[tot]=y;\n}\nvoid dfs(int now,int deep){\n\tw[now]=dep[now]-deep;\n\tfor(int i=head[now];i;i=nxt[i])\n\tdfs(num[i],deep+w[now]);\n}\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(i!=x)add(x,i);\n\t\t\telse root=i;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)scanf(\"%d\",&x),dep[x]=i;\n\t\tdfs(root,0);\n\t\tflag=1;\n\t\tfor(int i=1;i<=n;i++)\n\t\tif(w[i]<0){\n\t\t\tprintf(\"-1\\n\");\n\t\t\tflag=0;break;\n\t\t}\n\t\tif(flag){\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\tprintf(\"%d \",i==root?0:w[i]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\ttot=0;\n\t\tfor(int i=1;i<=tot;i++)nxt[i]=0,num[i]=0;\n\t\tfor(int i=1;i<=n;i++)dep[i]=w[i]=0,head[i]=0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1645685116,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF1611D Weights Assignment For Tree Edges \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u4e00\u9053**\u9605\u8bfb\u7406\u89e3\u9898**\uff0c\u9996\u5148\u8981\u8bfb\u61c2\u9898\u76ee\u8981\u6c42\u3002\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n\u7528\u6570\u7ec4 tree \u6765\u8868\u793a**\u6811**\uff0c\u5176\u4e2d $tree[i]$ \u4ee3\u8868\u8282\u70b9 i \u7684\u7236\u8282\u70b9\u3002\u6811\u7684\u5927\u5c0f\u662f n .\n\n\u7ed9\u4f60\u4e00\u4e2a\u5927\u5c0f\u4e5f\u4e3a n \u7684\u5168\u6392\u5217 p \uff0c  $p[i]$ \u987e\u540d\u601d\u4e49.\n\n\u73b0\u5728\u4f60\u7684\u5de5\u4f5c\u662f\u8d4b\u4e88\u6811\u4e0a\u7684\u6bcf\u6761\u8fb9\u4e00\u4e2a\u957f\u5ea6\uff0c\u4f7f\u5f97\u6811\u4e0a\u6240\u6709\u8282\u70b9**\u6309\u7167\u5230\u6839\u8282\u70b9\u7684\u957f\u5ea6\u6392\u5e8f**\u4e4b\u540e\u7684\u7ed3\u679c\u4e0e\u5168\u6392\u5217 p \u76f8\u540c\uff0c\u505a\u4e0d\u5230\u5c31\u8f93\u51fa $-1$ .\n\n## \u601d\u8def\u5206\u6790\uff1a\n\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\uff0c\u6811\u4e0a\u7684\u70b9\uff0c\u548c\u5168\u6392\u5217\u662f\u80fd\u591f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u901a\u8fc7\u8d4b\u4e88\u6bcf\u4e2a\u8fb9\u957f\u5ea6\uff0c\u8ba9\u8fd9\u68f5\u6811\u4e0a\u6240\u6709\u70b9**\u6309\u7167**\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb**\u6392\u5e8f**\u4e4b\u540e\u7684**\u987a\u5e8f**\u662f\u5168\u6392\u5217 p \u7684\u987a\u5e8f\uff08\u8fd8\u662f\u90a3\u53e5\u8bdd\uff0c\u9605\u8bfb\u7406\u89e3\uff09.\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\uff0c\u5168\u6392\u5217 p \u4e2d\u7b2c i \u4e2a\u70b9 $p[i]$ \u5230\u6811\u6839\u7684\u8ddd\u79bb\u5c31\u662f i \uff0c\u4ee5\u6b64\u4e3a\u636e\uff0c\u6765\u63a8\u5bfc\u51fa\u6bcf\u4e2a\u8fb9\u5e94\u6709\u7684\u957f\u5ea6.\n\n\u6211\u4eec\u80fd\u591f\u53d1\u73b0\uff1a\u6839\u8282\u70b9\u5fc5\u987b\u5728\u5168\u6392\u5217\u7684\u7b2c\u4e00\u4f4d $p[1]$ \uff0c\u8fd9\u662f\u56e0\u4e3a\u6811\u4e0a\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u6bd4\u6839\u8282\u70b9\u81ea\u8eab\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u66f4\u5c0f\uff0c\u6392\u5e8f\u5b8c\u6210\u4e4b\u540e\u6839\u8282\u70b9\u4e00\u5b9a~~\u9996\u5f53\u5176\u51b2~~.\n\n\u6240\u4ee5\u5018\u82e5 $p[1] != root$ \uff0c\u5bf9\u4e0d\u8d77\uff0c\u76f4\u63a5 $-1$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7b97\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u7279\u5224\u5427\uff0c\u5176\u5b9e\u6ca1\u6709\u4e5f\u884c\uff0c\u4f46\u662f\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u7406\u89e3\u9898\u610f.\n\n\u90a3\u4e48\u73b0\u5728\u5f00\u59cb\u8003\u8651\u666e\u904d\u60c5\u51b5\uff0c\u5bf9\u4e8e\u6392\u5217 p \u4e2d\u7b2c $i$ \u4e2a\u5143\u7d20\uff0c\u5bf9\u5e94\u5728\u6811\u4e0a\u4e5f\u5c31\u662f\u8282\u70b9 $p[i]$ \uff0c\u5b83\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u662f $i$ .\n\n\u90a3\u4e48\u6211\u4eec**\u53ef\u4ee5\u80af\u5b9a**\u7684\u4e00\u70b9\u5c31\u662f\uff1a\n\n\u5b83\u7684\u7236\u8282\u70b9 $tree[ p[i] ]$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u5fc5\u987b\u5f97\u662f\u5df2\u77e5\u7684\uff0c\u800c\u5df2\u77e5\u7684\u5c31\u8bf4\u660e\u6211\u4eec\u5728 $p[i]$ \u4e4b\u524d\u5c31\u6c42\u8fc7\u5b83\u7684\u8ddd\u79bb\uff0c\u56e0\u4e3a\u8ddd\u79bb\u5c31\u7b49\u4e8e $i$ \uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u7684**\u7236\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u4e00\u5b9a\u6bd4\u5f53\u524d\u8282\u70b9\u5c0f**\uff0c\u8fd9\u4e0d\u521a\u597d\u5c31\u662f\u6811\uff08\u6ca1\u6709\u8d1f\u8fb9\uff09\u7684\u6027\u8d28\u5417\uff01\uff01\n\n\u53cd\u8fc7\u6765\u60f3\uff0c\u5982\u679c\u5b83\u7236\u8282\u70b9\u8fd8\u6ca1\u88ab\u6c42\u51fa\u6765\uff0c\u5c31\u8bf4\u660e\u5b83\u7236\u8282\u70b9\u4e00\u5b9a\u5728 $p[i]$  \u7684\u540e\u9762\u51fa\u73b0\uff0c\u90a3\u4e48\u5b83\u7684**\u7236\u8282\u70b9\u5230\u6811\u6839\u7684\u8ddd\u79bb\u5c31\u4e00\u5b9a\u6bd4\u5b50\u8282\u70b9\u5927\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684**\n\n\u6240\u4ee5\uff0c\u8fd9\u662f\u6211\u4eec\u5224\u65ad\u80fd\u5426\u6210\u529f\u6784\u5efa\u7684\u4f9d\u636e.\n\n\u5982\u679c\u5728\u4e2d\u9014\u51fa\u73b0\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u7ea6\u675f\u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u5c31\u8bf4\u660e\u6ca1\u529e\u6cd5\u6784\u5efa.\n\n\u5728\u77e5\u5230\u6784\u5efa\u7ea6\u675f\u4e4b\u540e\uff0c\u6784\u5efa\u65b9\u6cd5\u4f1a\u6bd4\u8f83\u597d\u60f3\u4e00\u4e9b.\n\n\u6211\u4eec\u4ee4 $tall[i]$ \u4ee3\u8868\u8282\u70b9 $i$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u7528 $ans[i]$ \u4ee3\u8868\u7b2c $i$ \u4e2a\u8282\u70b9\u4e0e\u5176\u7236\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u8ddd\u79bb\uff08\u5373\u9898\u76ee\u6240\u6c42\u7684\u7b54\u6848\uff09.\n\n\u90a3\u4e48 $ans[i] = i- tall[ tree[ p[i] ] ]$ .\n\n\u540c\u65f6\u522b\u5fd8\u4e86\u66f4\u65b0\u5f53\u524d\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb: $tall[ p[i] ]=i$ .\n\n\u522b\u5acc\u6211\u7f57\u55e6\uff0c\u8fd9\u79cd\u601d\u7ef4\u504f\u91cd\u4e00\u70b9\u7684\u9898\u76ee\uff0c\u8981\u8bb2\u5c31\u8981\u8bb2\u5f97\u975e\u5e38\u8be6\u7ec6\uff0c\u56e0\u4e3a\u54ea\u6015\u6709\u4e00\u70b9\u5361\u4f4f\uff0c\u4e5f\u6ca1\u529e\u6cd5\u505a.\n\n## \u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n;\nint tree[200005];//\u6811\u4e0a\u67d0\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\nint p[200005];//\u8981\u6c42\u6811\u6309\u7167\u8ddd\u79bb\u6811\u6839\u7684\u6392\u5217\u987a\u5e8f\nint tall[200005];//\u6811\u4e0a\u67d0\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\nint ans[200005];//\u8bb0\u5f55\u7b54\u6848\uff08\u8fb9\u7684\u957f\u5ea6\uff09\nint main()\n{\n    cin.sync_with_stdio(false);\n    cin >> t;\n    while(t--)\n    {\n        cin >> n;\n        int root;\n        for(int i=1;i<=n;i++)\n        {\n            cin >> tree[i];\n            if(tree[i]==i) root=i;//\u5bfb\u627e\u6839\u8282\u70b9\n            tall[i]=-1;\n        }\n        for(int i=1;i<=n;i++) cin >> p[i];\n        tall[root]=0;//\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u662f0\n        ans[root]=0;\n        if(p[1]!=root)//\u6392\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u70b9\u5fc5\u7136\u662froot\u624d\u884c\n        {\n            cout << -1 << endl;\n            continue;\n        }\n        bool flag=1;\n        for(int i=2;i<=n;i++)//\u6838\u5fc3\u4ee3\u7801\n        {\n            if( tall[ tree[ p[i] ] ] <0 )//\u5bf9\u4e8e\u7b2ci\u4e2a\u6392\u5217\u6765\u8bf4\uff0cp[i] \u7684\u7236\u8282\u70b9\u5fc5\u987b\u6bd4p[i]\u8ddd\u79bb\u6839\u8981\u8fd1\uff0c\u5373\u5728[1,i)\u4e2d\u5df2\u7ecf\u51fa\u73b0\u8fc7\u624d\u884c\uff0c\u56e0\u4e3a\u4e0d\u53ef\u80fd\u505a\u5230\u7236\u8282\u70b9\u6bd4\u5b50\u8282\u70b9\u66f4\u8fdc\n            {\n                flag=0;//\u51fa\u73b0\u77db\u76fe\n                break;\n            }\n            else\n            {\n                ans[ p[i] ] = i- tall[ tree[ p[i] ] ];//\u8bb0\u5f55\u7b54\u6848\uff1a\u5047\u8bbe\u7b2ci\u4e2a\u51fa\u73b0\u7684\u70b9\u8ddd\u79bb\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u5c31\u662fi\uff0c\u90a3\u4e48\uff0c\u8fd9\u6761\u8fb9\u7684\u957f\u5ea6\u5c31\u7b49\u4e8e  i-\u7236\u8282\u70b9[ p[i] ] (\u5373\uff1ai-tall[ tree[ p[i] ] ])\n                tall[ p[i] ] =i;\n            }\n        }\n        if(flag)\n        {\n            for(int i=1;i<=n;i++) cout << ans[ i ] << \" \";\n            cout << endl;\n        }\n        else\n        {\n            cout << -1 << endl;\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1637868948,
        "uid": 448502,
        "name": "JCLinux",
        "ccfLevel": 0,
        "title": "CF1611D\u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u8f93\u5165\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6709\u6839\u6811\u548c\u4e00\u4e2a\u6392\u5217 $p$\uff0c\u4f60\u9700\u8981\u7ed9\u6811\u4e0a\u7684\u6bcf\u6761\u8fb9\u8d4b\u4e88\u4e00\u4e2a\u6743\u503c\uff0c\u4f7f\u5f97\u6bcf\u4e2a $p_{i - 1}$ \u5230\u6839\u7ed3\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e $p_i$ \u5230\u6839\u7ed3\u70b9\u7684\u8ddd\u79bb\u3002\n\n## \u601d\u8def\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u6bcf\u4e2a $p_{i - 1}$ \u5230\u6839\u7ed3\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e $p_i$ \u5230\u6839\u7ed3\u70b9\u7684\u8ddd\u79bb\uff0c\u4e0d\u59a8\u4ee4 $p_i$ \u5230\u6839\u7ed3\u70b9\u7684\u8ddd\u79bb\u4e3a $i - 1$\uff0c\u8bbe\u4e3a $dis_{p_i}$\uff0c\u90a3\u4e48 $w_i$ \u5c31\u7b49\u4e8e $dis_{p_i} - dis_{p_{fa_i}}$\u3002\n\n\u7136\u540e\u5c31\u9700\u8981\u5224\u65ad\u65e0\u89e3\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u8ba1\u7b97 $p_i$ \u7684\u7b54\u6848\u65f6\uff0c$p_i$ \u7684\u7236\u8282\u70b9\u7684\u7b54\u6848\u8fd8\u6ca1\u88ab\u7b97\u51fa\u6765\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u4e3a\u65e0\u89e3\u3002\u53e6\u5916\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a $p_1$ \u4e0d\u662f\u6839\u7ed3\u70b9\uff0c\u663e\u7136\u65e0\u89e3\uff0c\u56e0\u4e3a\u8ddd\u79bb\u6839\u7ed3\u70b9\u6700\u8fd1\u7684\u8282\u70b9\u663e\u7136\u5c31\u662f\u6839\u7ed3\u70b9\u672c\u8eab\uff0c\u4e0d\u53ef\u80fd\u662f\u5176\u4ed6\u8282\u70b9\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<vector>\nusing namespace std;\n\nconst int MAXN = 200000 + 5;\n\nvector<int> G[MAXN];\nint fa[MAXN], pos[MAXN], ans[MAXN], dis[MAXN];\nint n, rt;\n\nint main() {\n    int T;\n\n    scanf(\"%d\", &T);\n    while(T--) {\n        scanf(\"%d\", &n);\n        for(int i = 1; i <= n; i++) {\n            scanf(\"%d\", &fa[i]);\n            G[i].clear();\n        }\n        rt = 0;\n        for(int i = 1; i <= n; i++) {\n            if(fa[i] == i) {\n                rt = i;\n                continue;\n            }\n            G[fa[i]].push_back(i);\n        }\n        for(int i = 1; i <= n; i++) {\n            scanf(\"%d\", &pos[i]);\n        }\n        int flag = 1;\n        memset(ans, -1, sizeof(ans));\n        memset(dis, 0, sizeof(dis));\n        ans[rt] = 0;\n        for(int i = 1; i <= n; i++) {\n            if(ans[fa[pos[i]]] == -1) {\n                flag = 0;\n                break;\n            }\n            if(pos[i] == rt) {\n                continue;\n            }\n            dis[pos[i]] = dis[pos[i - 1]] + 1;\n            ans[pos[i]] = dis[pos[i]] - dis[fa[pos[i]]];\n        }\n        if(!flag || pos[1] != rt) {\n            printf(\"-1\\n\");\n            continue;\n        }\n        for(int i = 1; i <= n; i++) {\n            printf(\"%d \", ans[i]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1638197729,
        "uid": 132435,
        "name": "\u667a\u5b50",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1611D Weights Assignment For Tree Edges"
    },
    {
        "content": "~~\u60f3\u534a\u5929\u4ee5\u4e3a\u8fd9\u9053\u9898\u96be\u70b9\u5728\u627e\u6839...\uff0c\u7136\u540e\u53d1\u73b0\u6211\u771f\u662f\u4e2a\u61a8\u61a8~~  \n  \n# \u627e\u6839\n\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u7236\u8282\u70b9\u662f\u81ea\u5df1\uff0c\u90a3\u5b83\u5c31\u662f\u6839...\uff08\u4e0d\u4f1a\u5c31\u6211\u4e00\u4e2a\u4eba\u8fd9\u5730\u65b9\u770b\u534a\u5929\u5427  \n\n# \u68c0\u67e5  \n\u7531\u4e8e $p[]$ \u8868\u793a\u5148\u540e\u987a\u5e8f\uff0c\u6211\u4eec\u8bbe $p'[i]$ \u8868\u793a $i$ \u662f $p[]$ \u4e2d\u7b2c\u51e0\u4e2a  \n\n```cpp\nint pr[N];\nint rp[N];\nfor ( int i = 1; i <= n; i ++ ) \n\t\tscanf(\"%d\", &pr[i]),\n\t\trp[pr[i]] = i;\n```\n\n\u4e00\u6761\u94fe\u4e0a\u7684 $dis[]$ \u5fc5\u5b9a\u8d8a\u6765\u8d8a\u5927\uff0c $p'[]$ \u540c\u6837    \n\u90a3\u4e48\u53ef\u4ee5\u77e5\u9053\u7684\u662f\uff0c\u5982\u679c\u4e00\u5806\u7236\u5b50\u5173\u7cfb\u4e2d\uff0c$p'[$ \u7236\u8282\u70b9 $]\\gt p'[$ \u5b50\u8282\u70b9 $]$ \u90a3\u4e48\u4e00\u5b9a\u4e0d\u884c   \n\u8fd9\u4e2a\u8dd1\u4e00\u904d\u70b9\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\uff0c\u4e5f\u8981\u5728\u8f93\u5165 $b[]$ \u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u7236\u5b50\u5173\u7cfb \n\n**\u8bb0\u5f55**\n```cpp\nfor ( int i = 1, x; i <= n; i ++ ) {\n\t\tscanf(\"%d\", &x); b[i] = { x, i };\n}\n```\n\n**\u68c0\u67e5**\n```cpp\ninline bool check() {\n        for ( int i = 1; i <= n; i ++ ) {\n                if ( rp[b[i].first] > rp[b[i].second] ) return false;\n        }\n        return true;\n}\n\nif ( !check() ) { printf(\"-1\\n\"); return;};\n```\n\n# \u8fb9\u6743  \n\u6211\u4eec\u4e0d\u60f3\u5f71\u54cd\u4ed6\u4eec\u7684\u5148\u540e\u987a\u5e8f  \n\u90a3\u4e48\u53ef\u4ee5\u8ba9 $dis[i]=p'[i]$  \n\u8fd9\u6837\u7684\u8bdd\u4e00\u6761\u8fb9 $(fath\\rightarrow son)$ \u7684\u8fb9\u6743\u5c31\u662f $p'[fath]-p'[son]$   \n\n```cpp\nfor ( int i = 1; i <= n; i ++ ) {\n\t\tprintf(\"%d \", rp[b[i].second] - rp[b[i].first]);\n} printf(\"\\n\");\n```\n\n# \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <queue>\n\n#define ll long long\n\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint n;\npair<int, int> b[N]; // first: fath, second: son\nint pr[N]; // \u6b63p\u6570\u7ec4\nint rp[N]; // \u53cdp\u6570\u7ec4\n\ninline bool check() {\n        for ( int i = 1; i <= n; i ++ ) {\n                if ( rp[b[i].first] > rp[b[i].second] ) return false;\n        }\n        return true;\n}\n\ninline void Solve () {\n\n        scanf(\"%d\", &n);\n        for ( int i = 1, x; i <= n; i ++ ) {\n                scanf(\"%d\", &x); b[i] = { x, i };\n        }\n        for ( int i = 1; i <= n; i ++ ) \n                scanf(\"%d\", &pr[i]),\n                rp[pr[i]] = i;\n\n        if ( !check() ) { printf(\"-1\\n\"); return;};\n\n        for ( int i = 1; i <= n; i ++ ) {\n                printf(\"%d \", rp[b[i].second] - rp[b[i].first]);\n        } printf(\"\\n\");\n        \n}\n\n\nint main () {\n        int cass; scanf(\"%d\", &cass); while ( cass -- ) {\n                Solve ();\n        }\n}\n```",
        "postTime": 1637888810,
        "uid": 445933,
        "name": "Chivas_Regal",
        "ccfLevel": 0,
        "title": "CF1611D_Weights Assignment For Tree Edges\u2014\u2014\u6784\u9020"
    }
]