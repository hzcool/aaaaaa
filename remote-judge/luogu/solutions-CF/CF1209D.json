[
    {
        "content": "\u56e0\u4e3a\u6bcf\u53ea\u52a8\u7269\u90fd\u67092\u4e2a\u6700\u559c\u6b22\u7684\u70b9\u5fc3\uff0c\u6240\u4ee5\u4ee5\u70b9\u5fc3\u4e3a\u70b9\uff0c\u8fde\u63a5\u6240\u6709\u52a8\u7269\u559c\u6b22\u7684\u4e24\u79cd\u70b9\u5fc3\u89c1\u56fe\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5927\u5c0f$>1$\u7684\u8054\u901a\u5757\u3002\u80af\u5b9a\u6709\u4e00\u4e2a\u52a8\u7269\u5f97\u5403\u52302\u79cd\u70b9\u5fc3\uff0c\u800c\u603b\u6709\u4e00\u79cd\u6392\u961f\u987a\u5e8f\u4f7f\u5f97\u8fd9\u4e2a\u5757\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e00\u5934\u52a8\u7269\u518d\u5403\u52302\u79cd\u70b9\u5fc3\uff08\u6bd4\u5982\u8bf4BFS\u5e8f\uff09\uff0c\u90a3\u4e48\u4e00\u4e2a\u5927\u5c0f\u4e3a$c$\u7684\u8054\u901a\u5757\u53ef\u4ee5\u6ee1\u8db3$c-1$\u4e2a\u52a8\u7269\u3002\n\n\u8bbe\u8054\u901a\u5757\u4e2a\u6570\u4e3a$C$\uff0c\u5219\u9ad8\u5174\u7684\u52a8\u7269\u6709$n-C$\u4e2a\uff0c\u60b2\u4f24\u7684\u52a8\u7269\u6709$m-(n-C)$\u4e2a\u3002\n\n\u4f7f\u7528$DSU$\uff08\u5e76\u67e5\u96c6\uff09\u5b9e\u73b0\u3002\n\n```cpp\n    #include <bits/stdc++.h>\n    using namespace std;\n    const int N = 100005;\n    int n,kk,f[N],sz[N];\n    int getf(int v) {if (f[v] != v) f[v] = getf(f[v]);return f[v];}\n    int main ()\n    {\n        ios::sync_with_stdio(false);\n        cin >> n >> kk;\n        int t1,t2;\n        for (int i = 1;i <= n;i++) f[i] = i;\n        for (int i = 1;i <= kk;i++)\n        {\n            cin >> t1 >> t2;\n            f[getf(t1)] = getf(t2);\n        }\n        int cnt = 0;\n        for (int i = 1;i <= n;i++) if (f[i] == i) ++cnt;\n        cout << kk - (n - cnt);\n        return 0;\n    }\n```",
        "postTime": 1568805922,
        "uid": 92602,
        "name": "SIGSEGV",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1209D \u3010Cow and Snacks\u3011"
    },
    {
        "content": "**\u9898\u610f\uff1a**\u6709 $k$ \u4e2a\u5ba2\u4eba\uff0c\u5230\u5e97\u91cc\u4e70\u8d70\u4ed6\u6240\u559c\u6b22\u7684 $2$ \u6735\u82b1\u4e2d\u5e97\u5185\u6709\u7684\u3002\u800c\u5e97\u91cc\u6807\u53f7\u4ece $1$ ~ $n$ \u6bcf\u79cd\u82b1\u53ea\u6709\u4e00\u6735\u3002\u53ef\u4ee5\u968f\u610f\u8c03\u6574 $k$ \u4e2a\u5ba2\u4eba\u7684\u987a\u5e8f\uff0c\u4f7f\u4e70\u4e0d\u5230\u82b1\u7684\u5ba2\u4eba\u6570\u91cf\u6700\u5c11\u3002\n\n**\u601d\u8def\uff1a**\u6211\u4eec\u5982\u679c\u4ee5\u6bcf\u79cd\u5316\u4e3a\u4e00\u4e2a\u70b9\uff0c\u4ee5\u6bcf\u4e2a\u5ba2\u4eba\u559c\u6b22\u7684\u4e24\u6735\u82b1\u7ed9\u4e24\u6735\u82b1\u8fde\u4e00\u6761\u65e0\u5411\u8fb9\u3002\u5219\u4f1a\u51fa\u73b0\u4e00\u5b9a\u6570\u76ee\u7684\u8fde\u901a\u5757\uff0c\u8fde\u901a\u5757\u603b\u4e2a\u6570\u4e3a $ans$\u3002\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\u8fdb\u884c\u5206\u6790\uff1a\u7b2c\u4e00\u4e2a\u5ba2\u4eba\u4e70\u8d70 $2$ \u6735\uff0c\u4e4b\u540e\u7684\u5ba2\u4eba\u6bcf\u4eba\u4e70\u8d70 $1$ \u6735\uff0c\u8fd9\u6837\u5728\u4e00\u4e2a\u70b9\u6570\u4e3a $cnt$ \u7684\u8fde\u901a\u5757\u4e2d\uff0c\u53ef\u4ee5\u6ee1\u8db3 $cnt-1$ \u4e2a\u5ba2\u4eba\u3002\u8fd9\u6837\u4fbf\u53ef\u4f7f\u88ab\u6ee1\u8db3\u7684\u5ba2\u4eba\u6700\u591a\u3002\u5219\u6700\u7ec8\u7b54\u6848\u5c31\u662f $k-(n-ans)=k-n+ans$\u3002\n\n\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0\u3002\n\n\n## Code\n```cpp\n#include<cstdio>\nconst int N=1e5+1; \nint n,k,x,y,f[N],ans;\ninline int find(int x){//\u57fa\u672c\u64cd\u4f5c\uff1a\u627e\u7238\u7238\n\treturn f[x]^x?f[x]=find(f[x]):x;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(register int i=1;i<=n;++i)f[i]=i;//\u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c\n\tfor(register int i=0;i<k;++i){//k\u4e2a\u5ba2\u4eba\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx=find(x),y=find(y),f[x]=y;//\u8fde\u8fb9\n\t}\n\tfor(register int i=1;i<=n;++i)\n\t\tif(f[i]==i)++ans;//\u7edf\u8ba1\u8fde\u901a\u5757\u4e2a\u6570\n\tprintf(\"%d\\n\",k-n+ans);\n\treturn 0;\n}\n```",
        "postTime": 1673061792,
        "uid": 530915,
        "name": "zyc200156",
        "ccfLevel": 5,
        "title": "CF1209D Cow and Snacks"
    },
    {
        "content": "### \u9898\u610f\n\n+ \u6709 $n$ \u79cd\u96f6\u98df\uff0c\u6bcf\u79cd\u96f6\u98df\u53ea\u6709\u4e00\u4e2a\uff0c\u7f16\u53f7\u4ece $1 \\sim n$ \u6392\u5217\u3002\n\n+ \u6709 $m$ \u4f4d\u5ba2\u4eba\u6392\u5e8f\u540e\u4f1a\u4f9d\u6b21\u53d6\u8d70\u96f6\u98df\u3002\u7b2c $i$ \u4e2a\u5ba2\u4eba\u6709 $a_i,b_i$ \u4e24\u79cd\u559c\u7231\u53e3\u5473\uff0c\u5f53\u8be5\u5176\u53d6\u7528\u96f6\u98df\u65f6\uff0c\u4ed6\u4f1a\u53d6\u8d70\u5269\u4f59\u96f6\u98df\u4e2d\u6240\u6709\u4ed6\u7684\u559c\u7231\u53e3\u5473\u3002\n\n+ \u5b89\u6392\u5ba2\u4eba\u4eec\u7684\u987a\u5e8f\uff0c\u4f7f\u81f3\u5c11\u53d6\u5230\u4e00\u79cd\u559c\u7231\u53e3\u5473\u96f6\u98df\u7684\u5ba2\u4eba\u6570\u76ee\u6700\u5927\u5316\u3002\n\n### \u89e3\u9898\n\n\u770b\u5230 $n,m$\uff0c$a_i,b_i$ \u662f\u4e0d\u662f\u6709\u719f\u6089\u7684\u611f\u89c9\uff1f\u597d\u53ed\uff0c\u8fd9\u9053\u9898\u5176\u5b9e\u53ef\u4ee5\u8f6c\u6362\u6210\u4e00\u4e2a\u56fe\u8bba\u6a21\u578b\u3002\n\n\u6211\u4eec\u60f3\u5230\uff0c\u7b2c\u4e00\u4f4d\u5ba2\u4eba\u80af\u5b9a\u628a\u4ed6\u7684\u559c\u7231\u53e3\u5473\u5168\u4f1a\u53d6\u8d70\uff0c\u4e3a\u4e86\u8ba9\u7ed3\u679c\u66f4\u4f18\uff0c\u6211\u4eec\u5e0c\u671b\u63a5\u4e0b\u6765\u7684\u5ba2\u4eba\u7684\u559c\u7231\u53e3\u5473\u4e0e\u4e4b\u6709\u91cd\u5408\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ea\u4f1a\u53d6\u8d70\u4e00\u4e2a\u96f6\u98df\uff0c\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u7684\u601d\u8def\u662f\u6b63\u786e\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5efa\u4e00\u4e2a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u56fe\u3002\u7b2c $m$ \u6761\u8fb9\u8fde\u63a5 $a_i,b_i$ \u4e24\u70b9\u3002\u663e\u7136\u8fd9\u6837\u4f1a\u5f62\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u5982\u4e0a\u8ff0\u5904\u7406\uff0c\u5047\u8bbe\u8be5\u8fde\u901a\u5757\u6709 $x$ \u4e2a\u70b9\uff0c\u90a3\u4e48\u8be5\u8fde\u901a\u5757\u4e2d\u6700\u7ec8\u6709 $x-1$ \u4f4d\u5ba2\u4eba\u53ef\u4ee5\u53d6\u8d70\u96f6\u98df\u3002\u4e8e\u662f\u7b54\u6848\u5c31\u53d8\u6210\u4e86\u7edf\u8ba1\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u70b9\u6570\u2026\u2026\n\n\u6211\u76f4\u63a5\u628a\u56fe\u5efa\u51fa\u6765\u8dd1\u4e86\u4e00\u904d dfs \u2026\u2026 \u53e6\u5916\u6ce8\u610f\u6700\u540e\u6c42\u7684\u7b54\u6848\u662f\u201c\u60b2\u4f24\u7684\u6765\u5bbe\u201d\u7684\u6570\u91cf\u3002\u7ec6\u8282\u53c2\u89c1\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n \n#define Maxk 100010\n#define Maxn 100010\n \nusing namespace std;\n \nint read() {\n\tint x = 0,f = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile('0' <= c && c <= '9') {\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n \nint N,K;\nint rest[Maxn];\n \nstruct Edge {\n\tint next,to;\n}\nedge[Maxk * 2];\nint head[Maxn],edge_num;\n \nvoid add_edge(int from,int to) {\n\tedge[++edge_num].next = head[from];\n\tedge[edge_num].to = to;\n\thead[from] = edge_num;\n}\n \nint vis[Maxn];\n \nint dfs(int u) {\n\tvis[u] = 1;\n\tint res = 0;\n\tfor(int i = head[u];i;i = edge[i].next) {\n\t\tint v = edge[i].to;\n\t\tif(!vis[v]) res += (dfs(v) + 1);\n\t}\n\treturn res;\n}\n \nint main() {\n\tN = read(); K = read();\n\tint x,y;\n\tfor(int i = 1;i <= K; i++) {\n\t\tx = read(); y = read();\n\t\tadd_edge(x,y);\n\t\tadd_edge(y,x);\n\t}\n\tint ans = 0;\n\tfor(int i = 1;i <= N; i++) {\n\t\tif(!vis[i]) ans += dfs(i);\n\t}\n\tcout << K - ans;\n\treturn 0;\n}\n```",
        "postTime": 1583030695,
        "uid": 39278,
        "name": "Sqrtyz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1209D \u3010Cow and Snacks\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9898\u76ee\u7684\u552f\u4e00\u4f5c\u7528\u5c31\u662f\u63a9\u4eba\u8033\u76ee\uff0c\u5c06\u4eba\u5f15\u5165\u201c\u56fe\u4e0a\u6c42\u8fde\u901a\u5757\u201d\u7684\u6b67\u9014\u3002\uff08\u672c\u573aDiv2\uff0c\u672c\u73ed\u540c\u5b66[mwr\u5927\u4f6c](https://www.luogu.org/space/show?uid=235926)\u56e0\u6b7b\u6b7b\u7ea0\u7f20\u8fde\u901a\u56fe\u800c\u9519\u5931D\u9898\uff09\n\u4e3a\u4f55\u4e0d\u80fd\u76f4\u63a5**\u5e76\u67e5\u96c6**\uff1f\n\n\u5373\u6bcf\u6b21\u5c06\u6700\u8fd1\u8be5\u5934\u725b\u7684$x_i$\u548c$y_i$\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u5728\u540c\u4e00\u96c6\u5408\u4e2d\uff0c\u7b54\u6848\u52a0\u4e00\uff1b\u53cd\u4e4b\u5219\u5408\u5e76$x_i$\u548c$y_i$\u3002\n\n\u7136\u540e\u5c31\u6ca1\u6709\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N=100005;\nint n,k,x,y,ans,f[N];\n\nint find (int x) {\n    return f[x]==x?x:find(f[x]);\n}\n//\u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c\uff1a\u627e\u7238\u7238\u3002\u4e0d\u4f1a\u7684\u81ea\u5df1\u4e0a\u7f51\u67e5\n\nint main () {\n    scanf (\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++) f[i]=i;\n    //\u4e00\u5f00\u59cb\uff0c\u6bcf\u4e2a\u98df\u7269\u662f\u81ea\u5df1\u7684\u7238\u7238\uff08\u602a\u602a\u7684\uff09\n    while(k--){\n        scanf (\"%d%d\",&x,&y);\n        int r1=find(x),r2=find(y);\n        if (r1!=r2)\n\t\t\tf[r1]=r2;\n        else ans++;\n        //\u5982\u4e0a\u8ff0\u6587\u5b57\n    }\n    printf(\"%d\\n\",ans);\n    //\u5b8c\u7ed3\u6492\u82b1\n\treturn 0;\n}\n```\n",
        "postTime": 1570282367,
        "uid": 109640,
        "name": "\u5fae\u9999\u7389\u70db\u6697",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1209D \u3010Cow and Snacks\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u8fd9\u9898\u4e0d\u9700\u8981\u5176\u4ed6\u4e1c\u897f\uff0c\u7528\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u4e86 $qwq$ \u3002\n\n\u6ce8\u610f\u5230\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6709 $k$ \u4e2a\u70b9\u7684\u56fe $G$ \uff0c\u5982\u679c\u60f3\u8981\u8ba9\u5b83\u8fde\u901a\uff0c\u90a3\u4e48**\u9700\u8981\u4e14\u4ec5\u9700**\u5728 $k$ \u4e2a\u70b9\u95f4\u8fde $k-1$ \u6761\u8fb9\uff08\u65e0\u91cd\u8fb9\uff09\u3002\n\n\u66f4\u8fdb\u4e00\u6b65\u8bf4\uff0c\u65e0\u8bba\u8fde\u8fb9\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u5728 $k$ \u4e2a\u70b9\u95f4\u8fde $k-1$ \u6761\u8fb9\uff08\u65e0\u91cd\u8fb9\uff09\u80fd\u591f\u8ba9 $G$ \u8fde\u901a\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e00\u8fb9\u8bfb\u5165\u8fb9\u4e00\u8fb9\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5173\u7cfb\u5c31\u884c\u4e86\uff1a\n\n+ \u5982\u679c\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u5728\u540c\u4e00\u8054\u901a\u5757\uff0c\u8d21\u732e $+1$\n+ \u5426\u5219\u5c06\u5b83\u4eec\u5408\u5e76\n\n\u7edd\u8d5e\u8d85\u77ed\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=2e5+5;\nint f[N];\nint find(int x){return f[x]==x?x:f[x]=find(f[x]);}\nint main(){\n\tint n, m; cin>>n>>m;\n\tfor(int i=1; i<=n; i++) f[i]=i;\n\t\n\tint res=0;\n\twhile(m--){\n\t\tint u, v; cin>>u>>v;\n\t\tif(find(u)==find(v)) res++;\n\t\telse f[find(u)]=find(v);\n\t}\t\n\tcout<<res<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1619063639,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "CF1209D Cow and Snacks \u89e3\u7b54"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[$\\texttt{Link}$](https://www.luogu.com.cn/problem/CF1209D)\n## $\\textbf{Solution}$\n\u4ee5\u5c0f\u5403\u4e3a\u7ed3\u70b9\uff0c\u6bcf\u6b21\u7ed9\u5ba2\u4eba\u559c\u6b22\u7684\u4e24\u79cd\u5c0f\u5403\u4e4b\u95f4\u8fde\u65e0\u5411\u8fb9\uff0c\u5f62\u6210\u4e00\u4e9b\u8054\u901a\u5757\u3002\n\n\u9996\u5148\u53ef\u4ee5\u89c2\u5bdf\u51fa\u8fd9\u9898\u662f\u4e00\u4e2a\u8d2a\u5fc3\u3002\u5bf9\u4e8e\u8d2a\u5fc3\u7b56\u7565\uff0c\u6709\uff1a\n\n> \u82e5\u60f3\u8981\u8ba9\u66f4\u591a\u7684\u5ba2\u4eba\u6709\u6240\u9009\u62e9\uff0c\u5c31\u8981\u8ba9\u6bcf\u4e00\u4e2a\u5ba2\u4eba\u5403\u5f97\u5c3d\u91cf\u5c11\u3002\n\n\u8fd9\u4e2a\u8d2a\u5fc3\u662f\u6210\u7acb\u7684 \u2014\u2014 \u6bcf\u4e2a\u8054\u901a\u5757\u5185\uff0c\u7b2c\u4e00\u4e2a\u5ba2\u4eba\u5403\u6389\u4e24\u4e2a\u5c0f\u5403\uff0c\u5269\u4f59\u5c0f\u5403\u6bcf\u4eba\u4e00\u4e2a\u3002\u5269\u4e0b\u7684\u5ba2\u4eba\u53ea\u80fd\u53d8\u5f97\u4f24\u5fc3\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff1a\u5bf9\u4e8e\u6bcf\u6b21\u8fde\u8fb9\u64cd\u4f5c\uff0c\u7b54\u6848\u4e0d\u7d2f\u52a0\uff0c\u76f8\u5f53\u4e8e\u8ba9\u7b2c\u4e00\u4e2a\u5ba2\u4eba\u5403\u6389\u4e24\u4e2a\uff1b\u968f\u540e\u82e5\u4e24\u4e2a\u5ba2\u4eba\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u5c31\u8bf4\u660e\u5fc5\u987b\u6709\u4e00\u4e2a\u5ba2\u4eba\u8981\u53d8\u5f97\u4f24\u5fc3\uff0c\u7b54\u6848\u7d2f\u52a0\u3002\n## $\\textbf{AC Code}$\n```cpp\n#include <bits/stdc++.h>\nconst int N = 1e5 + 5;\nint n, k, ans, fa[N];\n\ninline int find(int x) {\n    return fa[x] == x ? x : fa[x] = find(fa[x]);\n}\n\ninline void merge(int x, int y) {\n\tint fx = find(x), fy = find(y);\n\tif(fx == fy) ans++;\n\telse fa[fx] = fy;\n}\n\nsigned main() {\n\tstd::cin >> n >> k;\n    for(int i = 1; i <= n; i++) fa[i]=i;\n    for(int u, v; k--; ) {\n    \tstd::cin >> u >> v;\n    \tmerge(u, v);\n\t}\n    std::cout << ans;\n    return 0;\n}\n```",
        "postTime": 1655285313,
        "uid": 498779,
        "name": "Matrix_mlt",
        "ccfLevel": 4,
        "title": "CF1209D Cow and Snacks \u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u662f\u4e00\u9053\u5f88\u5999\u7684\u731c\u7ed3\u8bba+\u8bc1\u660e\u9898\n\n# \u601d\u8def\n\n\uff08\u8fd9\u91cc\u7684\u4e00\u4e9b\u540d\u8bcd\u6309\u7167\u82f1\u6587\u9898\u9762\u7684\u6765\u8bb2\uff09\n\n- \u6211\u4eec\u8003\u8651\u4ee5\u6bcf\u4e00\u79cd\u5c0f\u5403\u4e3a\u70b9\uff0c\u4ee5\u6bcf\u4e00\u4e2a\u5ba2\u4eba\u4e3a\u8fb9\u6765\u7ed9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u65e0\u5411\u8fb9\u3002\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u8fdb\u884c\u5206\u6790\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u65e2\u7136\u8981\u9009**\u6700\u591a\u7684\u5ba2\u4eba**\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u5c3d\u91cf\u8ba9\u5ba2\u4eba\u5403\u7684\u5c0f\u5403**\u5c3d\u91cf\u5c11**\u3002\u800c\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff0c\u5728\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u5ba2\u4eba\u5fc5\u987b\u5403\u63892\u4e2a\u5c0f\u5403\uff0c\u800c\u5269\u4e0b\u7684\u5ba2\u4eba\u90fd\u6700\u5c11\u5403\u63891\u4e2a\u5c0f\u5403\u3002\u6240\u4ee5\u5728\u4e00\u4e2a\u70b9\u6570\u4e3a $n$ \u7684\u8054\u901a\u5757\u4e2d\uff0c\u6211\u4eec\u9009\u62e9\u5ba2\u4eba\u6570\u91cf\u7684**\u7406\u8bba\u6700\u5927\u503c**\u5c31\u662f $n-1$ \u3002\u800c\u8fd9\u4e2a\u7406\u8bba\u6700\u5927\u503c\u662f\u53d6\u5f97\u5230\u7684\uff0c\u4e5f\u975e\u5e38\u5bb9\u6613\u6784\u9020\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u56fe\u4e2d\u8054\u901a\u5757\u7684\u4e2a\u6570 $cnt$ \uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $m-n+cnt$ \u4e86\uff01\n\n- \u8054\u901a\u5757\u4e2a\u6570\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u67e5\u8be2\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define I using\n#define love namespace\n#define Elaina std\nI love Elaina;\nconst int N=100010;\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<3)+(x<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint n,m,x,y,fi[N],cnt;\nint find(int x){\n\treturn x==fi[x]?x:fi[x]=find(fi[x]);\n}\nvoid merge(int x,int y){\n\tx=find(x),y=find(y);\n\tif(x==y)return;\n\tfi[x]=y;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)fi[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tx=read(),y=read();\n\t\tmerge(x,y);\n\t}\n\tfor(int i=1;i<=n;i++)if(i==fi[i])cnt++;\n\tprintf(\"%d\",m-n+cnt);\n\treturn 0;\n}\n```\n\n\u795d\u5404\u4f4d\u5927\u795e\u4eec $NOI$ \u52a0\u6cb9\uff01",
        "postTime": 1650894773,
        "uid": 178556,
        "name": "Skyjoy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1209D \u3010Cow and Snacks\u3011"
    },
    {
        "content": "\u5c06\u6bcf\u4e00\u5934\u725b\u4e0e\u5b83\u559c\u6b22\u7684\u5c0f\u5403\u8fde\u8fb9\n\n\u6bcf\u4e00\u4e2a\u8054\u901a\u7684\u70b9\u96c6\u5305\u542b\u7684\u5c0f\u5403\u7684\u6570\u91cf\u4e3a$i$\n\n\u90a3\u4e48\u6700\u591a\u6ee1\u8db3$i-1$\u5934\u725b\n\n\u56e0\u4e3a\u603b\u80fd\u627e\u51fa\u4e00\u79cd\u65b9\u6848\u8ba9\u4e00\u5934\u725b\u9009\u4e24\u4e2a\u5c0f\u5403\uff0c\u5176\u4ed6\u7684\u725b\u9009\u4e00\u4e2a\n\n\u6700\u540e\u5c06\u7b54\u6848\u76f8\u52a0\uff0c\u603b\u725b\u6570\u51cf\u8fd9\u4e2a\u6570\u5c31\u662f\u7b54\u6848\n\n```cpp\n//Code by : Y-k-y\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <vector>\n#include <set>\n#define ll long long\nconst int N=1000010;\nusing namespace std;\ninline int rnd(){\n\tint res=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){res=res*10+ch-'0';ch=getchar();}\n\treturn res*f;\n}\ninline void wr(int x){\n\tif(x<0){putchar('-');x=-x;}if(x>9) wr(x/10);putchar(x%10+'0');\n}\nstruct pp{\n\tint v,nxt;\n}edge[N];\nint head[N];\nint tot,n,m,col,ans;\nint co[N],tong[N];\ninline void add(int u,int v){\n\tedge[++tot].nxt=head[u],head[u]=tot;\n\tedge[tot].v=v;\n\tedge[++tot].nxt=head[v],head[v]=tot;\n\tedge[tot].v=u;\n}\ninline void dfs(int u){\n\tif(u>m)tong[col]++;\n\tco[u]=col;\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].v;\n\t\tif(co[v])continue;\n\t\tdfs(v);\n\t}\n}\nint main(){\n\tcin>>n>>m;int x,y;\n\tfor(int i=1;i<=m;i++){\n\t\tx=rnd();y=rnd();\n\t\tadd(i,x+m);add(i,y+m);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tif(!co[i]){\n\t\t\t++col;\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tfor(int i=1;i<=col;i++){\n\t\tans+=tong[i]-1;\n\t}\n\twr(m-ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568507007,
        "uid": 71844,
        "name": "\u6768\u94e0\u8fdc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1209D \u3010Cow and Snacks\u3011"
    },
    {
        "content": "\u8003\u8651\u4ee5\u96f6\u98df\u4e3a\u70b9\u5efa\u65e0\u5411\u56fe\uff0c$(u,v)\\in E$ \u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u5ba2\u4eba\u559c\u6b22\u96f6\u98df $u,v$\u3002\n\n\u5bf9\u4e8e\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5927\u5c0f\u4e3a $m$ \u7684\u8fde\u901a\u5757\uff0c\u603b\u80fd\u5b89\u6392\u51fa\u4e00\u79cd\u987a\u5e8f\u4f7f\u5f97\u8fde\u901a\u5757\u4e2d\u7684\u96f6\u98df\u53ef\u4ee5\u6ee1\u8db3 $m-1$ \u4e2a\u5ba2\u4eba\uff0c\n\n\u5373\u7b2c\u4e00\u4e2a\u5ba2\u4eba\u5403\u6389\u5176\u4e2d $2$ \u4e2a\u96f6\u98df\uff0c\u5269\u4e0b $m-2$ \u4e2a\u5ba2\u4eba\u5206\u522b\u5403\u6389\u5176\u4e2d $1$ \u4e2a\u96f6\u98df\u3002\n\n\u4e5f\u5c31\u662f\u5728\u6ee1\u8db3 $n$ \u4e2a\u5ba2\u4eba\u7684\u524d\u63d0\u4e0b\uff0c\u56fe\u4e2d\u6bcf\u591a\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5c31\u5c11\u4e00\u4e2a\u80fd\u6ee1\u8db3\u7684\u5ba2\u4eba\u3002\n\n\u5e76\u67e5\u96c6\u7edf\u8ba1\u56fe\u4e2d\u8fde\u901a\u5757\u4e2a\u6570 $c$\uff0c\u7b54\u6848\u5373\u4e3a $k - n + c$\u3002\n```cpp\n#include <cstdio>\nint n, k, u, v, c, f[100050];\nint F(int x) {return x == f[x] ? x : f[x] = F(f[x]);}\nint main()\n{\n\tscanf(\"%d%d\", &n, &k);for(int i = 1;i <= n;++i) f[i] = i;for(int\n\ti = 0;i < k;++i) scanf(\"%d%d\", &u, &v), f[F(u)] = F(v);for(int i\n\t= 1;i <= n;++i) c += i == F(i);return printf(\"%d\", k - n + c), 0;\n}\n```",
        "postTime": 1665576467,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "CF1209D Cow and Snacks \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u7b80\u8ff0\n\n- \u6709 $n$ \u79cd\u82b1\uff0c$k$ \u4e2a\u4eba\u3002\u6bcf\u4e2a\u4eba\u90fd\u60f3\u4e70\u4e24\u79cd\u82b1 $a_i,b_i$\u3002\n- \u8fd9 $n$ \u4e2a\u4eba\u4f9d\u6b21\u8fdb\u5165\uff08\u4f60\u53ef\u4ee5\u64cd\u63a7\u987a\u5e8f\uff09\u3002\u4e00\u4e2a\u4eba\u8fdb\u53bb\u540e\u4f1a\u628a\u4ed6\u60f3\u8981\u7684\u82b1\u90fd\u4e70\u8d70\u3002\n- \u81f3\u5c11\u6709\u591a\u5c11\u4e2a\u4eba\u4e70\u4e0d\u5230\u82b1\uff1f\n- $n,k\\leq10^5$\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u4e0d\u59a8\u5efa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u8fb9\u4e3a $(a_i,b_i)$\u3002\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u7b2c\u4e00\u4e2a\u4eba\u5fc5\u7136\u62ff\u8d70 $2$ \u79cd\uff0c\u7136\u800c\u56e0\u4e3a\u8fd9\u4e2a\u8fde\u901a\u5757\u8054\u901a\uff0c\u6240\u4ee5\u5728\u540e\u9762\u7684\u64cd\u4f5c\u4e2d\u4f60\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u62ff\u8d70 $1$ \u79cd\u3002\n\n\u6240\u4ee5\u8bf4\u4e00\u4e2a\u5927\u5c0f\u4e3a $u$ \u7684\u8fde\u901a\u5757\u4f1a\u6709 $u-1$ \u4e2a\u4eba\u4e70\u5f97\u5230\u82b1\u3002\u6240\u4ee5\u7b54\u6848\u5c31\u662f\uff1a$k-(n-c)$\u3002\u5176\u4e2d $c$ \u662f\u8fde\u901a\u5757\u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u67e5\u5230\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<iostream>\nusing namespace std;\nconst int MAXN=1e5+5;\nint fa[MAXN];int n,k;\nint find(int x){return (fa[x]==x)?x:fa[x]=find(fa[x]);}\nint main(){\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i;\n\tfor(int i=1;i<=k;i++){\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\tfa[find(a)]=find(b);\n\t}\n\tint cnt=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(fa[i]==i) cnt++;\n\tcout<<k-(n-cnt);\n\treturn 0; \n}\n```",
        "postTime": 1657072386,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "CF1209D Cow and Snacks \u9898\u89e3"
    },
    {
        "content": "\u4ee5\u82b1\u4e3a\u70b9\uff0c\u6bcf\u4e2a\u4eba\u559c\u6b22\u7684\u4e24\u79cd\u82b1\u4e4b\u95f4\u5efa\u56fe\n\n\u82e5\u627e\u51fa\u4e00\u4e2a\u8fde\u901a\u5757\u4e14\u8282\u70b9\u4e2a\u6570\u5927\u4e8e $1$ \u4e14\u5927\u5c0f\u4e3a $C$\uff0c\u8003\u8651\u8fd9\u4e2a\u8fde\u901a\u5757\u91cc\u7684\u4eba\u7684\u6240\u6709\u987a\u5e8f\uff0c\u7b2c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u9009\u5230 $2$ \u4e2a\uff0c\u800c $2 \\cdots C-1$ \u7684\u4eba\u53ea\u80fd\u9009\u5230\u4e00\u4e2a\uff0c\u7b2c $C$ \u4e2a\u4eba\u4e0d\u53ef\u4ee5\u9009\n\n\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\n\n```cpp\nll n,m,fa[maxn],ans;\nll find(ll tmp){return fa[tmp]==tmp?tmp:(fa[tmp]=find(fa[tmp]));}\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tll x=read(),y=read();\n\t\tif(find(x)==find(y))ans++;\n\t\telse fa[find(x)]=find(y);\n\t}\n\tcout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1604217794,
        "uid": 359952,
        "name": "_lbw_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1209D \u3010Cow and Snacks\u3011"
    },
    {
        "content": "\u81ea\u5df1\u7684\u4e00\u70b9\u60f3\u6cd5\uff0c\u7528\u5e76\u67e5\u96c6\u505a\u7684\uff0c\u5206\u4e86\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u5b9e\u9645\u53ea\u9700\u8981\u5224\u65ad\u7b2c\u56db\u79cd\u60c5\u51b5\n\n**\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a\u5143\u7d20>=2\u7684\u96c6\u5408\u53eb\u505a\u8054\u901a\u5757**\n\n**1**.x,y \u5747\u4e0d\u5728\u4efb\u4e00\u4e2a\u8054\u901a\u5757\u5185\uff0c\u53ef\u4ee5\u9009\uff0c\u8fd9\u4fe9\u90fd\u6ca1\u4eba\u9884\u5b9a\n\n**2**.x,y \u5176\u4e2d\u6709\u4e00\u4e2a\u5728\u4e00\u4e2a\u8054\u901a\u5757\u5185\uff0c\u4e5f\u53ef\u4ee5\u9009\uff0c\u56e0\u4e3a\u4e0d\u5728\u8054\u901a\u5757\u5185\u7684\u5143\u7d20\u6ca1\u4eba\u9884\u5b9a\n\n****3****.x,y \u90fd\u5728\u8054\u901a\u5757\u4e2d\uff0c\u4f46\u6240\u5728\u7684\u8054\u901a\u5757\u4e0d\u662f\u4e00\u4e2a\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7b2c2\u79cd\u60c5\u51b5\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u67094\u79cd\u751c\u70b9\uff0c3\u4e2a\u5ba2\u4eba\uff0c\u8bfb\u5165\u6570\u636e\u5982\u4e0b\n\n(1,2),(3,4),(2,3)\n\n2\u5728(1,2)\u7ec4\u6210\u7684\u8054\u901a\u5757\u4e2d\uff0c3\u5728(2,3)\u7ec4\u6210\u7684\u8054\u901a\u5757\u4e2d\n\n1,2\u5c5e\u4e8e\u540c\u4e00\u8054\u901a\u5757\uff0c3,4\u5c5e\u4e8e\u540c\u4e00\u8054\u901a\u5757\uff0c\u7531\u4e8e\u6211\u4eec\u60f3\u8ba9\u6cae\u4e27\u7684\u725b\u6700\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\n\n\u8be5\u5c3d\u53ef\u80fd\u7684\u4f18\u5316\u987a\u5e8f\uff0c\u4f7f\u5f97\u76f8\u90bb\u4e4b\u95f4\u6709\u4e00\u4e2a\u91cd\u53e0\uff0c\u8fd9\u6837\u4e0d\u4f1a\u51fa\u73b0\u4e00\u5934\u725b\u5403\u4e86\u4e24\u79cd\u7684\u60c5\n\n\u51b5\uff08\u9664\u4e86\u7b2c\u4e00\u5934\uff09\uff0c\u4e5f\u5c31\u662f\u7b2c2\u79cd\u60c5\u51b5\uff0c\u4f18\u5316\u4e4b\u540e\u987a\u5e8f\u4e3a\n\n(1,2),(2,3),(3,4),\u8fd9\u6837\u6ca1\u6709\u4efb\u4f55\u4e00\u5934\u725b\u662f\u6cae\u4e27\u7684\n\n**4**.x,y \u90fd\u5728\u540c\u4e00\u8054\u901a\u5757\u4e2d\uff0c\u65e0\u8bba\u600e\u4e48\u4f18\u5316\u987a\u5e8f\u4e5f\u5f97\u6709\u4e00\u5934\u725b\u4ec0\u4e48\u4e5f\u5403\u4e0d\u5230\uff0c\n\n\u80af\u5b9a\u5f97\u6709\u4e00\u5934\u725b\u6cae\u4e27\u4e86\uff0cans++\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,k,ans;\nint fa[100010];\nint find(int x)\n{\n\tif(fa[x]==x) return x;\n\treturn fa[x]=find(fa[x]);\n}\nvoid unionn(int x,int y)\n{\n\tfa[find(x)]=find(y);\n} \nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfa[i]=i;\n\t}\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tint x1=find(x),y1=find(y);\n\t\tif(x1!=y1)\n\t\tunionn(x1,y1);\n\t\telse ans++;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n",
        "postTime": 1596795948,
        "uid": 250699,
        "name": "Herkaii",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1209D \u3010Cow and Snacks\u3011"
    },
    {
        "content": "\u6a21\u62df\u8d5b T3 \n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u5982\u4e0b \n\n\u66b4\u529b \u2014\u2014 \u8d2a\u5fc3 \u2014\u2014 \u4e8c\u5206\u56fe \u2014\u2014 DP \u2014\u2014 \u5e76\u67e5\u96c6 \n\n~~\u7a9d\u592a\u83dc\u4e86~~ \n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u662f\u628a\u96f6\u98df\u770b\u6210\u70b9 \n\n\u4eba\u770b\u6210\u8fb9 \n\n\u90a3\u4e48\u5047\u8bbe\u8054\u901a\u5757\u6570\u91cf n\n\n\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u7ec4\u8fb9 \u628a\u5b83\u4eec\u8fde\u8d77\u6765 \u8fb9\u7684\u6570\u91cf\u662fn-1\n\n\u628a\u6240\u6709\u8fb9\u8fde\u8d77\u6765 \u4e4b\u540e \n\n\u628a\u8054\u901a\u5757\u904d\u5386\u4e00\u904d \u5f97\u51fa\u6709Ans\u4e2a\u5976\u725b\u53ef\u4ee5\u6ee1\u8db3 \n\n\u90a3\u4e48\u53cd\u8fc7\u6765 \u5c31\u6709n-Ans\u5934\u5976\u725b\u4e0d\u6ee1\u8db3 \n\n\u6b63\u786e\u6027 \uff1f \u81ea\u5df1\u53e3\u80e1\u4e71\u4e3e\u4f8b\u5c31\u5dee\u4e0d\u591a\u4e86\n\n```cpp\n#include <bits/stdc++.h> \n#define MAX 100005 \n#define R register \nusing namespace std  ; \nint pre[MAX] , siz[MAX] , n , m , Ans ; \nint f ( R int x ) { return pre[x] == x ? x : pre[x] = f(pre[x]) ; }\nvoid join( R int x , R int y ) { siz[f(x)] += siz[f(y)] ; pre[f(y)] = f(x) ; }\nbool too( R int x , R int y ) { return f(x) == f(y) ; }\nsigned main() \n{\n\tR int xi , yi ; \n//\tfreopen( \"cow.in\" , \"r\" , stdin ) ;\n\t//freopen( \"cow.out\" , \"w\", stdout ) ; \n\tios::sync_with_stdio(false) ; \n\tcin >> m >> n ;\n\tfor(R int i=1; i<=m; i++)\n\t  pre[i] = i , siz[i] = 1 ; \n\tfor(R int i=1; i<=n; i++) \n\t{\n\t\tcin >> xi >> yi ;\n\t\tif( !too(xi ,yi) ) \n\t\t join( xi , yi ) ;\n\t}\n\tfor(R int i=1; i<=m; i++) \n\t  if( pre[i] == i ) Ans += siz[i]-1 ;\n\tcout << max( 0 , n-Ans )<< endl; \n\treturn 0 ;\n}\n```\n\n",
        "postTime": 1573804798,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1209D \u3010Cow and Snacks\u3011"
    }
]