[
    {
        "content": "\u4e8c\u5206\u7b54\u6848+\u4ea4\u4e92\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u8be2\u95ee\u7ed3\u679c\u662f\u5947\u6570\uff0c\u90a3\u4e48\u5934\u5c3e\u4e2d\u5fc5\u6709\u4e00\u4e2a\u5728\u91cc\u9762\u800c\u53e6\u4e00\u4e2a\u4e0d\u5728\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u884c\u6bcf\u5217\u8fdb\u884c\u8be2\u95ee\uff0c\u5982\u679c\u4e00\u884c\u7684\u7ed3\u679c\u4e3a\u5947\u6570\uff0c\u5c31\u4e8c\u5206\u8fd9\u4e00\u884c\u627e\u5230\u7b54\u6848\u3002\n\n\u4e24\u4e2a\u5982\u679c\u90fd\u627e\u5230\u5c31\u76f4\u63a5\u8df3\u51fa\u53bb\n\n\u6700\u591a\u591a\u5c11\u6b21\uff1f\n\nn\\*2+(\\[logn\\]+1)\\*2\n\n\u5f53n=1000\u662f\u8fd9\u4e2a\u662f2020\n\n\u521a\u597d\u591a\u4e00\u4e2aQAQ\n\n\u600e\u4e48\u529e\uff1f\n\n\u5982\u679c\u524d\u9762\u53ea\u6709\u4e00\u4e2a\u89e3\uff0c\u7b2c1000\u5217\u4e0d\u7528\u95ee\u4e86\uff0c\u76f4\u63a5\u4e8c\u5206\uff0c\u521a\u597d\u7701\u4e00\u6b21\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nll n,x1,Y1,x2,y2;\n\ninline ll read(){\n    ll x=0,tmp=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-') tmp=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        x=(x<<3)+(x<<1)+ch-48;\n        ch=getchar();\n    }\n    return tmp*x;\n}\n\ninline bool check_hang(ll x){//\u5bf9\u6bcf\u884c\u8fdb\u884c\u4e8c\u5206\n    ll l=1,r=n,mid=(l+r)>>1,ans;\n    while(l<=r){\n        printf(\"? %I64d %I64d %I64d %I64d\\n\",x,l,x,mid); fflush(stdout);\n        if(read()&1){ans=mid;r=mid-1;}\n        else l=mid+1;\n        mid=(l+r)>>1;\n    }\n    if(x1==0){x1=x;Y1=ans;} \n    else{x2=x;y2=ans;} \n}\n\ninline bool check_lie(ll x){//\u5bf9\u6bcf\u5217\u8fdb\u884c\u4e8c\u5206\n    ll l=1,r=n,mid=(l+r)>>1,ans;\n    while(l<=r){\n        printf(\"? %I64d %I64d %I64d %I64d\\n\",l,x,mid,x); fflush(stdout);\n        if(read()&1){ans=mid;r=mid-1;}\n        else l=mid+1;\n        mid=(l+r)>>1;\n    }\n    if(x1==0){x1=ans;Y1=x;} \n    else{x2=ans;y2=x;} \n}\n\nint main(){\n    n=read();\n    for(ll i=1; i<=n; i++){\n    \tif(x2) break;//\u8fd9\u53e5\u8bdd\u4e00\u5b9a\u8981\u5199\u5728\u524d\u9762\n        printf(\"? %I64d 1 %I64d %I64d\\n\",i,i,n); fflush(stdout);//\u68c0\u67e5\n        if(read()&1) check_hang(i);//\u5982\u679c\u53ef\u4ee5\u786e\u5b9a\u5728\u8fd9\u4e00\u884c\uff08\u5217\uff09\uff0c\u5c31\u4e8c\u5206\n    }\n    //\u540c\u4e0a\n    for(ll i=1; i<n; i++){\n    \tif(x2) break;\n        printf(\"? 1 %I64d %I64d %I64d\\n\",i,n,i); fflush(stdout);\n        if(read()&1) check_lie(i);\n    }\n    if(x2==0) check_lie(n);//\u524d1000\u884c\u548c999\u5217\u90fd\u6ca1\u6709\u627e\u5230\u7b2c\u4e8c\u4e2a\u89e3\n    printf(\"! %I64d %I64d %I64d %I64d\\n\",x1,Y1,x2,y2); fflush(stdout);//\u8f93\u51fa\u5e76\u7ed3\u675f\n    return 0;\n}\n```",
        "postTime": 1555251220,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1153E \u3010Serval and Snake\u3011"
    },
    {
        "content": "[$$\\huge\\texttt{\u5728\u672c\u4ebablog\u98df\u7528\u66f4\u4f73}$$](https://dilute.xyz/2019/04/14/Solutions/Solution-CF1153E/)\n\n## \u6709\u8da3\u7684\u4ea4\u4e92\u9898\n\n\u6211\u4eec\u8003\u8651\u4e00\u4ef6\u4e8b\u60c5\n\n\u5982\u679c\u6211\u4eec\u8be2\u95ee\u7684\u77e9\u5f62\u4e2d\u6709\u4e00\u4e2a\u7aef\u70b9\n\n\u90a3\u4e48\u7b54\u6848 $\\mod 2 = 1$\n\n\u5426\u5219\u7b54\u6848 $\\mod 2 = 0$\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5982\u679c\u8be2\u95ee\u5230\u7684\u7b54\u6848$\\mod 2 = 0$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u77e9\u5f62\u5185\u8981\u4e48\u6ca1\u6709\u7aef\u70b9\uff0c\u8981\u4e48\u6709\u4e24\u4e2a\u7aef\u70b9\n\n\u6211\u4eec\u8003\u8651\n\n\u5982\u679c\u4e24\u4e2a\u7b54\u6848\u4e0d\u5728\u540c\u4e00\u884c\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5$O(n)$\u6b21\u8be2\u95ee\u627e\u5230\u8fd9\u4e24\u884c\u7136\u540e\u4e8c\u5206\u7b54\u6848\uff0c\u8fd9\u662f\u975e\u5e38\u7b80\u5355\u6613\u61c2\u8f7b\u677e\u6109\u5feb\u7684\n\n\u5982\u679c\u5728\u540c\u4e00\u884c\n\n\u90a3\u4e48\u4ed6\u4eec\u80af\u5b9a\u4e0d\u5728\u540c\u4e00\u5217\n\n\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e2a\uff0c\u800c\u4e14\u53ea\u9700\u8981\u4e8c\u5206\u4e00\u6b21\u5c31\u884c\u4e86\n\n\u56e0\u4e3a\u4e24\u4e2a\u5728\u540c\u4e00\u884c\uff0c\u4ed6\u4eec\u6709\u4e00\u7ef4\u5750\u6807\u662f\u4e00\u6837\u7684\uff0c\u5982\u679c\u4e8c\u5206\u4e24\u6b21\u7684\u8bdd\u88ab\u5361\u6ee1\u5c31\u662f$n + n + 2\\log n = 2020$\u6b21\u8be2\u95ee\uff0c\u521a\u521a\u597d\u7206\u6389\uff08\u6765\u81ea\u51fa\u9898\u4eba\u7684\u6076\u610f\uff09\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n#define INF 2147483647\n\nint inp(){\n    char c = getchar();\n    while(c < '0' || c > '9')\n        c = getchar();\n    int sum = 0;\n    while(c >= '0' && c <= '9'){\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return sum;\n}\n\nstd::pair<int, int> ans[4];\nint n;\n\nint query(int x1, int y1, int x2, int y2){\n    printf(\"? %d %d %d %d\\n\", x1, y1, x2, y2);\n    fflush(stdout);\n    return inp();\n}\n\nint solve1(int cur){\n    int l = 1;\n    int r = n;\n    while(l < r){\n        int mid = (l + r) >> 1;\n        if(query(cur, l, cur, mid) & 1)\n            r = mid;\n        else\n            l = mid + 1;\n    }\n    return l;\n}\n\nint solve2(int cur){\n    int l = 1;\n    int r = n;\n    while(l < r){\n        int mid = (l + r) >> 1;\n        if(query(l, cur, mid, cur) & 1)\n            r = mid;\n        else\n            l = mid + 1;\n    }\n    return l;\n}\n\nint main(){\n    n = inp();\n    int cnt = 0;\n    for(int i = 1; i <= n; i++){\n        int num = query(i, 1, i, n);\n        if(num & 1)\n            ans[++cnt] = std::make_pair(i, solve1(i));\n    }\n    if(cnt == 0){\n        for(int i = 1; i <= n; i++){\n            int num = query(1, i, n, i);\n            if(num & 1){\n                if(cnt == 0)\n                    ans[++cnt] = std::make_pair(solve2(i), i);\n                else\n                    ans[++cnt] = std::make_pair(ans[1].first, i);\n            }\n        }\n    }\n    printf(\"! %d %d %d %d\\n\", ans[1].first, ans[1].second, ans[2].first, ans[2].second);\n    fflush(stdout);\n}\n```",
        "postTime": 1555231407,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1153E \u3010Serval and Snake\u3011"
    },
    {
        "content": "\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\uff0c\u5982\u679c\u91cc\u9762\u6709**\u4e00\u4e2a**\u5934(\u6216\u5c3e)\uff0c\u90a3\u4e48\u7b54\u6848\u4e00\u5b9a\u662f\u5947\u6570\u3002\n\n\u76f4\u63a5\u67e5\u8be2\u6bcf\u4e00\u884c\uff0c\u6bcf\u4e00\u5217\uff0c\u4f1a\u5f97\u5230$2$\u4e2a\u6216$4$\u4e2a\u5947\u6570\u3002\n\n- $2$\u4e2a\u5947\u6570\uff1a\u5934\u548c\u5c3e\u5728\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\n- $4$\u4e2a\u5947\u6570\uff0c\u5934\u548c\u5c3e\u5728\u4e0d\u540c\u884c\u4e0d\u540c\u5217\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5947\u6570\u884c\u6216\u5217\uff0c\u76f4\u63a5**\u4e8c\u5206**\uff0c\u5c31\u80fd\u5f97\u5230\u5934\u6216\u5c3e\u4e86\n\n\u9700\u8981\u7684\u6700\u5927\u6b65\u6570\u662f$2\\times 1000+2\\times \\lfloor\\log_2n\\rfloor=2020$\u3002\u597d\u50cf\u6709\u70b9\u591a\u554a\n\n\u8003\u8651**\u67e5\u8be2\u5b8c$n-1$\u884c**\u65f6\uff0c\u82e5\u4e4b\u524d\u6709\u4e00\u4e2a\u5947\u6570\uff0c\u90a3\u4e48\u7b2c$n$\u884c\u4e00\u5b9a\u662f\u5947\u6570\uff0c\u82e5\u4e4b\u524d\u6ca1\u6709\u5947\u6570\uff0c\u90a3\u4e48\u7b2c$n$\u884c\u4e00\u5b9a\u662f\u5076\u6570\u3002\n\n\u8fd9\u6837\u6700\u5927\u6b65\u6570\u5c31\u662f$2020-2=2018$\u6b65\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u4f46\u662f\u6709\u6ca1\u6709\u66f4\u65e0\u803b\u4e00\u70b9\u7684\u505a\u6cd5\u5462\uff1f\n\n**\u968f\u673a\u8be2\u95ee\uff01**\n\n\u76f4\u63a5\u4f7f\u7528$2020$\u6b65\u7684\u505a\u6cd5\uff0c\u968f\u673a\u8be2\u95ee\u884c\u548c\u5217\uff0c\u7136\u540e\u518d\u4e8c\u5206\u3002\n\nCF\u8bc4\u6d4b\u65f6300~1800\u6b65\u51fa\u7b54\u6848 ~~\u8fd0\u6c14\u8fd8\u662f\u4e0d\u9519\u7684~~\n\n\u8fd9\u91cc\u7ed9\u51fa\u968f\u673a\u8be2\u95ee\u7684\u505a\u6cd5\n\n```cpp\n#include<cstdio>\n#include<ctime>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\ntypedef pair<int,int> pr;\ntypedef pair<int,pr> prr;\nint n,opt,x,wz1,wz2,ans1,ans2;prr a[2019];\nint main(){\n\tsrand((int)time(0));\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)a[i]=prr(rand()*rand(),pr(i,1));\n\tfor(int i=1;i<=n;i++)a[i+n]=prr(rand()*rand(),pr(i,2));\n\tsort(a+1,a+n+n+1);//\u968f\u673a\u884c\u548c\u5217\n\tfor(int i=1;i<=n+n;i++){\n\t\tif(opt&&a[i].second.second!=opt)continue;//\u627e\u5230\u7b2c\u4e00\u4e2a\u5947\u6570\u540e\uff0c\u53ea\u8be2\u95ee\u884c\u6216\u53ea\u8be2\u95ee\u5217\n\t\tif(a[i].second.second==1)\n\t\t\tprintf(\"? %d %d %d %d\\n\",a[i].second.first,1,a[i].second.first,n);\n\t\telse printf(\"? %d %d %d %d\\n\",1,a[i].second.first,n,a[i].second.first);//\u8be2\u95ee\n\t\tfflush(stdout);\n\t\tscanf(\"%d\",&x);\n\t\tif(x&1)\n\t\t\tif(!opt)opt=a[i].second.second,wz1=a[i].second.first;//\u627e\u5230\u7b2c\u4e00\u4e2a\u5947\u6570\uff0c\u5e76\u94a6\u5b9a\u8be2\u95ee\u884c\u8fd8\u662f\u5217\n\t\t\telse {wz2=a[i].second.first;break;}//\u627e\u5230\u7b2c\u4e8c\u4e2a\u5947\u6570\uff0c\u76f4\u63a5break\n\t}\n\tif(opt==1){//\u884c\n\t\tfor(int l=1,r=n,m;l!=r;ans1=l){//\u4e8c\u5206\u627e\u7b54\u6848\n\t\t\tm=l+r>>1;\n\t\t\tprintf(\"? %d %d %d %d\\n\",wz1,l,wz1,m);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x&1)r=m;\n\t\t\telse l=m+1;\n\t\t}\n\t\tfor(int l=1,r=n,m;l!=r;ans2=l){//\u4e8c\u5206\u627e\u7b54\u6848\n\t\t\tm=l+r>>1;\n\t\t\tprintf(\"? %d %d %d %d\\n\",wz2,l,wz2,m);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x&1)r=m;\n\t\t\telse l=m+1;\n\t\t}\n\t\tprintf(\"! %d %d %d %d\\n\",wz1,ans1,wz2,ans2);\n\t}else{//\u5217\n\t\tfor(int l=1,r=n,m;l!=r;ans1=l){//\u4e8c\u5206\u627e\u7b54\u6848\n\t\t\tm=l+r>>1;\n\t\t\tprintf(\"? %d %d %d %d\\n\",l,wz1,m,wz1);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x&1)r=m;\n\t\t\telse l=m+1;\n\t\t}\n\t\tfor(int l=1,r=n,m;l!=r;ans2=l){//\u4e8c\u5206\u627e\u7b54\u6848\n\t\t\tm=l+r>>1;\n\t\t\tprintf(\"? %d %d %d %d\\n\",l,wz2,m,wz2);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x&1)r=m;\n\t\t\telse l=m+1;\n\t\t}\n\t\tprintf(\"! %d %d %d %d\\n\",ans1,wz1,ans2,wz2);\n\t}\n}\n```",
        "postTime": 1555237001,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1153E \u3010Serval and Snake\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002\n\n\u6211\u4eec\u5148\u89c2\u5bdf\u90a3\u4e2a~~\u5f88\u50cf\u63d2\u5934dp\u7684~~\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1153E/310ecca9dbe4567ceada9b3d4a9ef179d283444f.png)\n\n\u7136\u540e\u8003\u8651\u4e00\u4e2a\u77e9\u5f62\u91cc\u8fde\u51fa\u53bb\u7684\u8fb9\u7684\u6570\u91cf\u6709\u4ec0\u4e48\u6027\u8d28\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5f53\u8fb9\u7684\u6570\u91cf\u4e3a\u5947\u6570\u65f6\uff0c\u4e00\u5b9a\u6709\u4e14\u4ec5\u67091\u4e2a\u7aef\u70b9\u5728\u77e9\u5f62\u91cc\u9762\uff0c\u53e6\u5916\u4e00\u4e2a\u7aef\u70b9\u5728\u77e9\u5f62\u5916\u9762\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u7528\u5c3d\u91cf\u5c11\u7684\u8be2\u95ee\u53bb\u5b9a\u4f4d\u8fd9\u4e24\u4e2a\u7aef\u70b9\u3002\n\n\u7136\u540e\u770b\u6570\u636e\u8303\u56f4\uff0c$n \\leq 1000$\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u505a$2019$\u6b21\u8be2\u95ee\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5982\u679c\u6211\u4eec\u8981\u5b9a\u4f4d\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u5206\u522b\u5bf9\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u505a\u8be2\u95ee\u5c31\u53ef\u4ee5\u786e\u5b9a\u7aef\u70b9\u5728\u54ea\u4e24\u884c\u548c\u54ea\u4e24\u5217\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u6837\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u53ef\u80fd\u6709\u4e24\u4e2a\u7aef\u70b9\u5728\u4e00\u884c\uff08\u6216\u4e00\u5217\uff09\u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u6bd4\u5982\uff1a\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1153E/50d2eabe2572f343f866cfbec6f391d3bf47c83f.png)\n\n\uff08\u6ca1\u9519\u8fd9\u5c31\u662f\u7b2c\u4e8c\u4e2a\u6837\u4f8b\uff09\n\n\u8fd9\u65f6\u5019\u6839\u636e\u5bf9\u884c\u548c\u5217\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u7aef\u70b9\u5728\u7b2c1\u5217\u548c\u7b2c3\u5217\uff0c\u4f46\u4e0d\u77e5\u9053\u5b83\u5728\u54ea\u4e00\u884c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5206\u522b\u8003\u8651\uff0c\u5bf9\u8fd9\u4e24\u5217\u505a\u4e8c\u5206\u3002\u65b9\u6cd5\u662f\u6bcf\u6b21\u53d6$mid$\uff0c\u7136\u540e\u770b$[l, mid]$\u5411\u5916\u8fde\u4e86\u591a\u5c11\u6761\u8fb9\u3002\u5982\u679c\u662f\u5947\u6570\u7684\u8bdd\u8bf4\u660e\u8fd9\u4e2a\u7aef\u70b9\u5728$[l, mid]$\u5185\uff0c\u5426\u5219\u5728$[mid+1, r]$\u5185\u3002\n\n\u8fd9\u6837\u6211\u4eec\u603b\u5171\u505a\u4e86$n+n+logn+logn$\u6b21\u8be2\u95ee\uff0c\u5f53$n = 1000$\u65f6\u8be2\u95ee\u6b21\u6570\u6b63\u597d\u4e3a$2020$\uff0c~~\u88ab\u5361\u4e86\u4e00\u6b21~~qwq\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u4e00\u4e2a~~\u795e\u5947\u7684~~\u6027\u8d28\u3002\u6211\u4eec\u5728\u5bf9\u884c\u548c\u5217\u5206\u522b\u8fdb\u884c\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u51fa\u73b0\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u4e24\u4e2a\u7aef\u70b9\u4e0d\u5728\u540c\u4e00\u884c\uff08\u5217\uff09\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4e00\u5b9a\u80fd\u5f97\u52302\u4e2a\u5947\u6570\u7684\u7b54\u6848\u3002\n\n2. \u4e24\u4e2a\u7aef\u70b9\u5728\u540c\u4e00\u884c\uff08\u5217\uff09\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4e00\u5b9a\u5f97\u4e0d\u5230\u5947\u6570\u7684\u7b54\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u53ea\u8981\u8be2\u95ee\u4e86\u524d$n-1$\u884c\uff08\u5217\uff09\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u7b2c$n$\u884c\uff08\u5217\uff09\u7684\u5947\u5076\u6027\u4e86\uff0c\u8fd9\u6837\u6211\u4eec\u5c11\u4e862\u6b21\u8be2\u95ee\uff0c\u5269\u4e0b$2018$\u6b21\uff0c\u53ef\u4ee5\u8fc7\u4e86qwq\n\n\u603b\u4ee3\u7801\uff08~~\u6bd4\u8f83\u9b3c\u755c~~\uff09\uff1a\n```cpp\n#include <cstdio>\nint n, res;\nint lpos[5], totl, rpos[5], totr;\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 1; i < n; ++i) {\n        printf(\"? %d %d %d %d\\n\", i, 1, i, n);\n        fflush(stdout);\n        scanf(\"%d\", &res);\n        if(res&1) lpos[++totl] = i;\n    }\n    if(totl == 1) lpos[++totl] = n;\n    if(totl == 2) {\n        // \u8fd9\u91cc\u5982\u679c\u53d1\u73b0\u4e24\u4e2a\u7aef\u70b9\u5728\u4e0d\u540c\u7684\u884c\u4e86\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u53bb\u5bf9\u5217\u505a\u8be2\u95ee\u4e86\n        int l = 1, r = n;\n        for(int i = 1; l < r && i <= 10; ++i) {\n            int mid = (l+r)>>1;\n            printf(\"? %d %d %d %d\\n\", lpos[1], l, lpos[1], mid);\n            fflush(stdout);\n            scanf(\"%d\", &res);\n            if(res&1) r = mid;\n            else l = mid+1;\n        }\n        int lans = r;\n        l = 1, r = n;\n        for(int i = 1; l < r && i <= 10; ++i) {\n            int mid = (l+r)>>1;\n            printf(\"? %d %d %d %d\\n\", lpos[2], l, lpos[2], mid);\n            fflush(stdout);\n            scanf(\"%d\", &res);\n            if(res&1) r = mid;\n            else l = mid+1;\n        }\n        printf(\"! %d %d %d %d\", lpos[1], lans, lpos[2], r);\n        return 0;\n    }\n    // \u5982\u679c\u4e24\u4e2a\u7aef\u70b9\u5728\u76f8\u540c\u7684\u884c\uff0c\u5b83\u4eec\u4e00\u5b9a\u5728\u4e0d\u540c\u5217\n    for(int i = 1; i < n; ++i) {\n        printf(\"? %d %d %d %d\\n\", 1, i, n, i);\n        fflush(stdout);\n        scanf(\"%d\", &res);\n        if(res&1) rpos[++totl] = i;\n    }\n    if(totl == 1) rpos[++totl] = n;\n    int l = 1, r = n;\n    for(int i = 1; l < r && i <= 10; ++i) {\n        int mid = (l+r)>>1;\n        printf(\"? %d %d %d %d\\n\", l, rpos[1], mid, rpos[1]);\n        fflush(stdout);\n        scanf(\"%d\", &res);\n        if(res&1) r = mid;\n        else l = mid+1;\n    }\n    int lans = r;\n    l = 1, r = n;\n    for(int i = 1; l < r && i <= 10; ++i) {\n        int mid = (l+r)>>1;\n        printf(\"? %d %d %d %d\\n\", l, rpos[2], mid, rpos[2]);\n        fflush(stdout);\n        scanf(\"%d\", &res);\n        if(res&1) r = mid;\n        else l = mid+1;\n    }\n    printf(\"! %d %d %d %d\", lans, rpos[1], r, rpos[2]);\n    return 0;\n}\n```\n\u7136\u540e\u6211\u4eec\u5b9e\u9645\u4e0a\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u7aef\u70b9\u5728\u540c\u4e00\u884c\u4e0d\u540c\u5217\u4e2d\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e00\u5217\u8fdb\u884c\u4e8c\u5206\uff0c\u53e6\u4e00\u5217\u7684\u7aef\u70b9\u6240\u5728\u884c\u4e0e\u8fd9\u4e00\u4e2a\u76f8\u540c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u505a\u5230\u4e86\u6700\u591a\u4f7f\u7528$2008$\u6b21\u8be2\u95ee\u3002\n\n---\n\u8868\u793a\u6211\u505a\u5b8c\u8fd9\u9053\u9898\uff08\u7528\u7684\u662f$2018$\u6b21\u8be2\u95ee\u7684\u505a\u6cd5\uff09\u4e4b\u540e\uff0c\u53d1\u73b0CF\u7ed9\u7684\u6807\u7b97\u53ea\u9700\u8981$2007$\u6b21\u8be2\u95ee\u3002\u4e8e\u662f\u6211\u53bb\u7ffb\u4e86CF\u7684\u5b98\u65b9\u9898\u89e3\u3002\n\n\u7136\u540e\u5927\u4f53\u601d\u8def\u662f\uff1a\u6211\u4eec\u53ea\u5bf9$2$\u5230$n-1$\u7684\u884c\u8be2\u95ee\uff0c\u5bf9\u4e8e\u5217\u8fd8\u662f\u8be2\u95ee$1$\u5230$n-1$\u3002\u7136\u540e\u52063\u79cd\u60c5\u51b5\uff1a\n\n1. \u6211\u4eec\u90fd\u6ca1\u6709\u8be2\u95ee\u5230\u7b54\u6848\uff0c\u90a3\u4e48\u4e24\u4e2a\u7aef\u70b9\u4e00\u5b9a\u5728\u540c\u4e00\u5217\uff0c\u800c\u4e14\u4e00\u4e2a\u5728\u7b2c$1$\u884c\uff0c\u4e00\u4e2a\u5728\u7b2c$n$\u884c\u3002\u7136\u540e\u7528\u4e0a\u9762$2008$\u6b21\u8be2\u95ee\u7684\u65b9\u6cd5\u8fdb\u884c\u4e8c\u5206\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981$2007$\u6b21\u3002\n\n2. \u5728\u884c\u4e0a\u6ca1\u6709\u8be2\u95ee\u5230\u7b54\u6848\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u4e86\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u5728\u54ea\u4e00\u5217\u3002\u6839\u636e\u4e0a\u9762\u7684\u601d\u8def\uff0c\u4e24\u4e2a\u7aef\u70b9\u8981\u4e48\u5728\u540c\u4e00\u884c\uff0c\u8981\u4e48\u4e00\u4e2a\u5728\u7b2c$1$\u884c\uff0c\u4e00\u4e2a\u5728\u7b2c$n$\u884c\u3002\u5bf9\u4e8e\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u591a\u4e00\u6b21\u8be2\u95ee\u6765\u786e\u5b9a\u5b83\u662f\u4e0d\u662f\u540c\u4e00\u884c\u3002\u8fd9\u6837\u6211\u4eec\u9700\u8981\u51cf\u5c11\u4e8c\u5206\u7684\u6b21\u6570\u3002\u6211\u4eec\u53d1\u73b0\u5f53\u6211\u4eec\u9700\u8981\u591a\u4e00\u6b21\u8be2\u95ee\u65f6\uff0c\u6700\u7ec8\u4e8c\u5206\u5230\u7684\u7ed3\u679c\u8981\u4e48\u662f$1$\u8981\u4e48\u662f$n$\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u5305\u542b$1$\u6216$n$\u7684\u533a\u95f4\u77ed\u4e00\u70b9\u5373\u53ef\u3002\uff08\u8fd9\u6837\u505a\u5982\u679c\u7b54\u6848\u4e0d\u662f$1$\u6216$n$\uff0c\u8be2\u95ee\u6570\u6ca1\u6709\u6539\u53d8\uff0c\u4f46\u6211\u4eec\u4e5f\u4e0d\u9700\u8981\u90a3\u4e2a\u591a\u4f59\u7684\u8be2\u95ee\u4e86\uff09\u4ecd\u7136\u53ea\u9700\u8981$2007$\u6b21\u3002\n\n3. \u5728\u884c\u4e0a\u8be2\u95ee\u5230\u4e86\u7b54\u6848\uff0c\u76f4\u63a5\u5206\u522b\u4e8c\u5206\u5373\u53ef\uff0c\u8be2\u95ee\u4e0d\u4f1a\u8d85\u8fc7$1019$\u6b21\u3002\n\n---\n\u6240\u4ee5\uff0c\u6709\u4e9b\u9898\u76ee\u7684\u4f18\u5316\u65b9\u6848\u662f\u4e00\u6b65\u4e00\u6b65\u4f18\u5316\u51fa\u6765\u7684\uff0c\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u5145\u5206\u5229\u7528\u9898\u76ee\u7684\u6027\u8d28\u6765\u4f18\u5316\u6211\u4eec\u7684\u7b97\u6cd5\u3002",
        "postTime": 1555296715,
        "uid": 79017,
        "name": "\u82b1\u91cc\u5fc3\u7231",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1153E \u3010Serval and Snake\u3011"
    },
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[CF1153E Serval and Snake](https://www.luogu.org/problemnew/show/CF1153E)\n\n\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\n\n\u7531\u4e8e\u53ea\u9700\u8981\u786e\u5b9a\u8d77\u70b9\u548c\u7ec8\u70b9\n\n\u4f60\u9009\u62e9\u7684\u77e9\u5f62\u4f1a\u5c06\u6574\u4e2a\u77e9\u5f62\u5206\u6210\u7684\u4e24\u4e2a\u90e8\u5206\n\n\u5982\u679c\u8d77\u70b9\u548c\u7ec8\u70b9\u5728\u540c\u4e00\u4e2a\u90e8\u5206\u91cc\uff0c\u90a3\u4e48\u5f88\u663e\u7136\u56de\u7b54\u5e94\u8be5\u662f\u4e2a\u5076\u6570\n\n\u53cd\u4e4b\u5219\u4e3a\u5947\u6570\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7\n\n```cpp\n\tint i;\n\tfor (i = 1; i < n; i++) {\n\t\tprintf(\"? 1 1 %d %d\\n\", n, i);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &x);\n\t\tif (x & 1) break;\n\t}\n```\n\n\u6765\u786e\u5b9a\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u5426\u5728\u540c\u4e00\u5217\n\n\u5982\u679c\u4e0d\u5728\u540c\u4e00\u5217\uff08\u5373 $i!=n$ \uff09\uff0c\u90a3\u4e48 $i$ \u5373\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u9760\u5de6\u7684\u90a3\u4e2a\u70b9\u6240\u5728\u7684\u5217\n\n\u90a3\u4e48\u540c\u7406\u53ef\u4ee5\u627e\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u9760\u53f3\u7684\u90a3\u4e2a\u70b9\u6240\u5728\u7684\u5217\n\n\u5982\u679c\u5728\u540c\u4e00\u5217\uff08\u5373 $i==n$ \uff09 \uff0c\u90a3\u4e48\u4ed6\u4eec\u80af\u5b9a\u4e0d\u4f1a\u5728\u540c\u4e00\u884c\uff08\u56e0\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u4e0d\u540c\u7684\u70b9\uff09\n\n\u90a3\u4e48\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5c06\u4e24\u4e2a\u70b9\u786e\u5b9a\u5728\u4e24\u884c\u5185\n\n\u73b0\u5728\u5df2\u7ecf\u80fd\u591f\u9501\u5b9a\u4e24\u4e2a\u70b9\u5728\u54ea\u4e24\u6761\uff08\u884c\u6216\u5217\uff09\u4e86\n\n\u5728\u4e00\u6761\u4e2d\u786e\u5b9a\u4e00\u4e2a\u70b9\uff0c\u4e8c\u5206\u518d\u7528\u5947\u5076\u5224\u65ad\u5373\u53ef\n\n\u8fd9\u6837\u6700\u574f\u7684\u8be2\u95ee\u6b21\u6570\u4e3a $999+1000+10+10=2019$\n\n\u6b63\u597d\uff01\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, x, i, j;\nint ax1, ay1, ax2, ay2;\n\nint main() {\n\tcin >> n;\n\tfor (i = 1; i < n; i++) {\n\t\tprintf(\"? 1 1 %d %d\\n\", n, i);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &x);\n\t\tif (x & 1) break;\n\t}\n\tif (i != n) {\n\t\tfor (j = n; j > 1; j--) {\n\t\t\tprintf(\"? 1 %d %d %d\\n\", j, n, n);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x & 1) break;\n\t\t}\n\t\tint l = 1, r = n;\n\t\twhile (l < r) {\n\t\t\tint mid = (l + r + 1) >> 1;\n\t\t\tprintf(\"? %d %d %d %d\\n\", mid, i, n, i);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x & 1) l = mid;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tax1 = l, ay1 = i;\n\t\tl = 1, r = n;\n\t\twhile (l < r) {\n\t\t\tint mid = (l + r + 1) >> 1;\n\t\t\tprintf(\"? %d %d %d %d\\n\", mid, j, n, j);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x & 1) l = mid;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tax2 = l, ay2 = j;\n\t} else {\n\t\tfor (i = 1; i < n; i++) {\n\t\t\tprintf(\"? 1 1 %d %d\\n\", i, n);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x & 1) break;\n\t\t}\n\t\tfor (j = n; j > 1; j--) {\n\t\t\tprintf(\"? %d 1 %d %d\\n\", j, n, n);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x & 1) break;\n\t\t}\n\t\tint l = 1, r = n;\n\t\twhile (l < r) {\n\t\t\tint mid = (l + r + 1) >> 1;\n\t\t\tprintf(\"? %d %d %d %d\\n\", i, mid, i, n);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x & 1) l = mid;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tax1 = i, ay1 = l;\n\t\tl = 1, r = n;\n\t\twhile (l < r) {\n\t\t\tint mid = (l + r + 1) >> 1;\n\t\t\tprintf(\"? %d %d %d %d\\n\", j, mid, j, n);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x & 1) l = mid;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tax2 = j, ay2 = l;\n\t}\n\tprintf(\"! %d %d %d %d\\n\", ax1, ay1, ax2, ay2);\n\treturn 0;\n}\n```",
        "postTime": 1555229654,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "CF1153E Serval and Snake"
    },
    {
        "content": "\u5148\u8003\u8651\u8fd9\u4e48\u4e00\u4e2a\u6027\u8d28\uff1a\n\n\u5f53\u67d0\u4e2a\u77e9\u5f62\u5185\u6709\u86c7\u5934\u86c7\u5c3e\u4e4b\u4e00\u7684\u65f6\u5019\uff0c\u77e9\u5f62\u4e0a\u4e00\u5b9a\u4f1a\u6709\u5947\u6570\u6761\u8fb9\uff0c\u5426\u5219\u4e00\u5b9a\u6709\u5076\u6570\u6761\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u8bc1\u660e\uff1a\n\n\u5f53\u7aef\u70b9\u4e0d\u5728\u77e9\u5f62\u5185\u65f6\uff0c\u86c7\u8eab\u8fdb\u5165\u77e9\u5f62\u540e\u4e00\u5b9a\u8981\u51fa\u53bb\uff0c\u56e0\u6b64\u8fb9\u6570\u4e00\u5b9a\u662f\u5076\u6570\u3002\u5f53\u53ea\u6709\u4e00\u4e2a\u7aef\u70b9\u5728\u77e9\u5f62\u91cc\u65f6\uff0c\u4e0e\u7aef\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u86c7\u8eab\u8fdb\u5165\u77e9\u5f62\u540e\u5c31\u4e0d\u518d\u51fa\u53bb\uff0c\u56e0\u6b64\u8fb9\u6570\u662f\u5947\u6570\u3002\u6709\u4e24\u4e2a\u7aef\u70b9\u5728\u77e9\u5f62\u5185\u65f6\uff0c\u7ed3\u679c\u662f\u4e24\u4e2a\u5947\u6570\u76f8\u52a0\u4e5f\u662f\u5076\u6570\u3002\n\n\u4e8e\u662f\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u6bcf\u884c\u6bcf\u5217\uff0c\u6839\u636e\u7ed3\u679c\u5206\u4e24\u79cd\u8ba8\u8bba\uff1a\n\n1.\u6bcf\u884c\u6bcf\u5217\u5404\u6709\u4e24\u4e2a\u662f\u5947\u6570\u3002\u86c7\u5934\u86c7\u5c3e\u88ab\u786e\u5b9a\u5728\u4e86 $4$ \u4e2a\u70b9\u4e4b\u5185\uff0c\u66b4\u529b\u679a\u4e3e\u6392\u9664\u5373\u53ef\u3002\u64cd\u4f5c\u6b21\u6570\u4e3a $2n+1$\u3002\n\n2.\u53ea\u6709\u4e00\u884c\u6216\u8005\u4e00\u5217\u6709\u4e24\u4e2a\u6570\u662f\u5947\u6570\u3002\u86c7\u5934\u86c7\u5c3e\u5728\u540c\u4e00\u5217\u6216\u8005\u4e00\u884c\uff0c\u5e76\u4e14\u6211\u4eec\u786e\u5b9a\u4e86\u5b83\u4eec\u7684\u884c\u6216\u5217\u3002\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u884c\u6216\u4e00\u5217\uff0c\u4e8c\u5206\u7aef\u70b9\u7684\u6240\u5728\u7684\u5217\u6216\u884c\u5373\u53ef\u3002\u64cd\u4f5c\u6b21\u6570\u4e3a $2n+\\log n$\u3002\n",
        "postTime": 1646656135,
        "uid": 414210,
        "name": "Iam1789",
        "ccfLevel": 0,
        "title": "CF1153E Serval and Snake \u9898\u89e3"
    },
    {
        "content": "# CF1153E Serval and Snake\n\n\n---\n\n\u9898\u610f\u7b80\u5355\u7248\uff1a\n\n\u5728$n\\times m$\u7684\u65b9\u683c\u4e0a\u6709\u4e00\u6761\u94fe\uff08\u86c7\uff09\uff0c\u4f60\u9700\u8981\u901a\u8fc7\u67e5\u8be2\u6765\u627e\u51fa\u8fd9\u6761\u94fe\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\n\n\u4f60\u7684\u67e5\u8be2\u5f62\u5982`x1 y1 x2 y2`\uff0c\u8fd9\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u77e9\u5f62\uff0c\u67e5\u8be2\u7ed3\u679c\u662f\u94fe\u5728\u77e9\u5f62\u4e0a\u7684\u8fb9\u6570\u3002\n\n\u4f60\u6700\u591a\u80fd\u8fdb\u884c$2019$\u6b21\u67e5\u8be2\u3002\u6700\u540e\u8bf7\u8f93\u51fa`x1 y1 x2 y2`\uff0c\u8868\u793a\u94fe\u4e24\u4e2a\u7aef\u70b9\u7684\u5750\u6807\u3002\n\n\u53ef\u4ee5\u5bf9\u4e8e\u4e24\u4e2a\u7aef\u70b9\u7684x,y\u5750\u6807\u5206\u522b\u67e5\u8be2\u3002\n\n\u5047\u8bbe\u73b0\u5728\u5148\u786e\u5b9ax\u5750\u6807\uff0c\u5148\u67e5\u8be2\u86c7\u4e0e\u6bcf\u4e00\u6839\u7ad6\u7ebf\u7684\u4ea4\u8fb9\u6570\uff0c\u8bbe\u4e3a$cn_i$\u3002\n\n\u5982\u679c\u86c7\u4e0e\u4e00\u6839\u7ad6\u7ebf\u7684\u4ea4\u8fb9\u6570\u662f\u5947\u6570\uff0c\u90a3\u4e48\u8868\u793a\u4e24\u4e2a\u9876\u70b9\u5728\u8fd9\u6761\u7ebf\u7684\u4e24\u7aef\uff0c\u5426\u5219\u5728\u540c\u4e00\u8fb9\u3002\n\n\u5982\u679c$x1\\neq x2$\uff0c\u90a3\u4e48$cn$\u6570\u7ec4\u5c06\u4f1a\u662f\u4e00\u6bb5\u5076\u6570\uff0c\u4e00\u6bb5\u5947\u6570\uff0c\u63a5\u7740\u4e00\u6bb5\u5076\u6570\u3002\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u4e00\u6bb5\u5947\u6570\u7684\u5de6\u53f3\u7aef\u70b9\u77e5\u9053$x1,x2$\u3002\n\n\u5426\u5219\u5982\u679c$x1=x2$\uff0c$cn$\u6570\u7ec4\u5c31\u662f\u4e00\u6574\u6bb5\u5076\u6570\u3002\n\n\u90a3\u4e48\u73b0\u5728\u5982\u679c$x1\\neq x2$\u53ef\u4ee5\u77e5\u9053$x1,x2$\u7684\u786e\u5207\u503c\uff1b\u5426\u5219\u53ea\u77e5\u9053$x1=x2$\u3002\n\n\u5bf9\u4e8e$y$\u4e5f\u8fd9\u6837\u505a\u4e00\u904d\uff0c\u73b0\u5728\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u5982\u679c$x,y$\u786e\u5207\u503c\u90fd\u77e5\u9053\u4e86\uff0c\u90a3\u4e48\u6ce8\u610f\u4e00\u4e0b\u4f60\u4e0d\u77e5\u9053\u7aef\u70b9\u662f$(x1,y1),(x2,y2)$\u8fd8\u662f$(x1,y2),(x2,y1)$\uff0c\u6240\u4ee5\u8981\u591a\u67e5\u8be2\u4e00\u6b21\u3002\n\n\u5426\u5219\u80af\u5b9a\u53ea\u6709\u4e00\u4e2a\u5750\u6807\u76f8\u7b49\u800c\u4e14\u4e0d\u77e5\u9053\uff0c\u53ef\u4ee5\u4e8c\u5206\u6c42\u51fa\u3002\u6ce8\u610f\u8fd9\u91cc\u5c31\u4e0d\u9700\u8981\u518d\u591a\u67e5\u8be2\u4e00\u6b21\u4e86\uff0c\u7136\u800c\u6211\u4ee3\u7801\u91cc\u6ca1\u5224\n\n\u90a3\u4e48\u603b\u7684\u67e5\u8be2\u6b21\u6570\u6700\u574f\u5e94\u8be5\u662f$999+999+10$\u7684\u3002\uff08\uff1f\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define vd void\n#define rg register\n#define ll long long\nil int gi(){\n    rg int x=0,f=0;rg char ch=getchar();\n    while(!isdigit(ch))f^=ch=='-',ch=getchar();\n    while(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n    return f?-x:x;\n}\nint cn[1010],cm[1010];\nint main(){\n    int n=gi();\n    for(int i=1;i<n;++i){\n        printf(\"? %d %d %d %d\\n\",1,1,i,n);\n        fflush(stdout);\n        cn[i]=gi();\n    }\n    for(int i=1;i<n;++i){\n        printf(\"? %d %d %d %d\\n\",1,1,n,i);\n        fflush(stdout);\n        cm[i]=gi();\n    }\n    int x1,x2,y1,y2;\n    {\n        int mn=1e9,mx=0;\n        for(int i=1;i<n;++i)if(cn[i]&1)mn=std::min(mn,i),mx=std::max(mx,i);\n        if(mn==1e9&&mx==0)x1=x2=0;\n        else x1=mn,x2=mx+1;\n    }\n    {\n        int mn=1e9,mx=0;\n        for(int i=1;i<n;++i)if(cm[i]&1)mn=std::min(mn,i),mx=std::max(mx,i);\n        if(mn==1e9&&mx==0)y1=y2=0;\n        else y1=mn,y2=mx+1;\n    }\n    if(x1==0&&x2==0){\n        int l=1,r=n,mid;\n        while(l<r){\n            mid=(l+r)>>1;\n            printf(\"? %d %d %d %d\\n\",1,y1,mid,y1);\n            fflush(stdout);\n            if(gi()&1)r=mid;\n            else l=mid+1;\n        }\n        x1=x2=l;\n    }\n    if(y1==0&&y2==0){\n        int l=1,r=n,mid;\n        while(l<r){\n            mid=(l+r)>>1;\n            printf(\"? %d %d %d %d\\n\",x1,1,x1,mid);\n            fflush(stdout);\n            if(gi()&1)r=mid;\n            else l=mid+1;\n        }\n        y1=y2=l;\n    }\n    printf(\"? %d %d %d %d\\n\",x1,y1,x1,y1);\n    fflush(stdout);\n    if(gi()!=1)std::swap(x1,x2);\n    printf(\"! %d %d %d %d\\n\",x1,y1,x2,y2);\n    return 0;\n}\n```",
        "postTime": 1555243091,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1153E \u3010Serval and Snake\u3011"
    },
    {
        "content": "\u5bf9\u4e8e**\u5934\u548c\u5c3e\u4e0d\u5728\u4e00\u884c**\u7684\u60c5\u51b5\n![](http://1.z9ls.com/t6/701/1555215072x2890205873.png)\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u6bcf\u6b21\u53d6\u51fa\u4e00\u884c\u6765\u8be2\u95ee\uff0c\u5f97\u5230\u7684\u7b54\u6848\u5982\u679c\u662f\u5947\u6570\uff0c\u90a3\u4e48\u8fd9\u4e00\u884c\u91cc\u5fc5\u7136\u6709\u5934\u6216\u8005\u5c3e\u3002\n\n\u6bd4\u5982\u4e0a\u56fe\u8be2\u95ee$1,2,3$\u884c\u5f97\u5230\u7684\u7b54\u6848\u662f$1,3,2$\n\n\u90a3\u4e48\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u5934\u548c\u5c3e\u5728\u54ea\u4e00\u884c\u3002\n\n\u5217\u7684\u5904\u7406\u540c\u7406\u3002\n\n\u4e4b\u540e\u5462\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4e24\u884c$x1,x2$\u4e24\u5217$y1,y2$\uff0c\u90a3\u8fd9\u4e24\u4e2a\u70b9\u4e00\u5b9a\u662f$(x1,y1),(x2,y2)$\u6216$(x1,y2),(x2,y1)$\uff0c\u90a3\u6211\u4eec\u8be2\u95ee\u4e00\u4e0b$(x1,y1)$\u8fd9\u4e00\u4e2a\u70b9\uff0c\u770b\u4e00\u4e0b\u662f\u4e0d\u662f\u5947\u6570\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e86\u3002\n\n\u4e0a\u9762\u64cd\u4f5c\u662f$2*n+1(<=2001)$\u6b21\u7684\n\n\u4f46\u662f\u5982\u679c**\u5934\u548c\u5c3e\u5728\u540c\u4e00\u884c**\n\n\u90a3\u4ed6\u4fe9\u4e00\u5b9a\u4e0d\u5728\u540c\u4e00\u5217\uff0c\u6211\u4eec\u5148\u53ef\u4ee5\u786e\u5b9a$y1,y2$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8be2\u95ee$(1,1)~(z,y1$\u548c$y2$\u95f4\u7684\u4e00\u4e2a\u6570$)$\uff0c\u7ed3\u679c\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u771f\u6b63\u7684\u4f4d\u7f6e$x<=z$\n\n\uff08\u5982\u56fe\uff09\n\n![](http://1.z9ls.com/t6/701/1555215764x2890205861.png)\n\n\u5982\u679c$z=1$\uff08\u7ea2\u6846\uff09\uff0c\u4f1a\u5f97\u5230$0$\uff0c\u8bf4\u660e$x>1$\n\n\u5982\u679c$z=2$\uff08\u6a59\u6846\uff09\uff0c\u4f1a\u5f97\u5230$1$\uff0c\u8bf4\u660e$x<=2$\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u4e8c\u5206\u5566\uff01\n\n\u6ce8\u610f\u4e0a\u9762\u4f8b\u5b50\u7684\u4e24\u4e2a\u7ed3\u679c\u867d\u7136\u662f$0$\u548c$1$\uff0c\u4f46\u662f\u5fc5\u987b\u5224\u65ad\u662f\u5426\u662f\u5947\u6570\u800c\u4e0d\u662f\u662f\u5426\u6709\u503c\uff0c\u56e0\u4e3a\u53ef\u80fd\u65e0\u5173\u7684\u7ebf\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002\u5982\u4e0b\u56fe\u3002\n\n![](http://1.z9ls.com/t6/701/1555216083x2890205873.png)\n\n\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,X[3],Y[3],cnt,x;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"? %d %d %d %d\\n\",i,1,i,n);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\",&x);\n\t\tif(x%2)\n\t\t\t X[++cnt]=i;\n\t}\n\tcnt=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"? %d %d %d %d\\n\",1,i,n,i);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\",&x);\n\t\tif(x%2)\n\t\t\t Y[++cnt]=i;\n\t}\n\tif(X[2]&&Y[2])\n\t{\n\t\tprintf(\"? %d %d %d %d\\n\",X[1],X[1],Y[1],Y[1]);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\",&x);\n\t\tif(x%2)\n\t\t\tprintf(\"! %d %d %d %d\\n\",X[1],Y[1],X[2],Y[2]),fflush(stdout);\n\t\telse printf(\"! %d %d %d %d\\n\",X[1],Y[2],X[2],Y[1]),fflush(stdout);\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tif(!X[1])\n\t\t{\n\t\t\tint YY=(Y[1]+Y[2])/2;\n\t\t\tint l=1,r=n;\n\t\t\twhile(l+1<=r)\n\t\t\t{\n\t\t\t\tint mid=(l+r)/2;\n\t\t\t\tprintf(\"? 1 1 %d %d\\n\",mid,YY);\n\t\t\t\tfflush(stdout);\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tif(x%2)\n\t\t\t\t\tr=mid;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t\tprintf(\"! %d %d %d %d\\n\",l,Y[1],l,Y[2]);\n\t\t\tfflush(stdout);\n\t\t\treturn 0;\n\t\t}\n\t\tif(!Y[1])\n\t\t{\n\t\t\tint XX=(X[1]+X[2])/2;\n\t\t\tint l=1,r=n;\n\t\t\twhile(l+1<=r)\n\t\t\t{\n\t\t\t\tint mid=(l+r)/2;\n\t\t\t\tprintf(\"? 1 1 %d %d\\n\",XX,mid);\n\t\t\t\tfflush(stdout);\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tif(x%2)\n\t\t\t\t\tr=mid;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t\tprintf(\"! %d %d %d %d\\n\",X[1],l,X[2],l);\n\t\t\tfflush(stdout);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1555216151,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1153E \u3010Serval and Snake\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u4e92\u52a8\u9898\n\n\u9898\u76ee\u5927\u610f:\n\n\u5728\u4e00\u4e2an*n\u7684\u77e9\u9635\u4e2d\uff0c\u6709\u4e00\u6761\u94fe\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u67e5\u8be2\uff0c\u8be2\u95ee\u5de6\u4e0a\u89d2\u4e3a(a,b)\uff0c\u53f3\u4e0b\u89d2\u4e3a(c,d)\u7684\u77e9\u9635\u80fd\u5c06\u8fd9\u6761\u94fe\u5272\u5f00\u51e0\u9053\u3002\u6c42\u5934\u548c\u5c3e\u7684\u5750\u6807\u3002\n\n\u9898\u89e3:\n\n\u6211\u4eec\u77e5\u9053\uff0c\u8fd9\u6761\u94fe\u662f\u4e0d\u4f1a\u65ad\u5f00\u7684\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u90a3\u4e00\u884c\u6216\u4e00\u5217\u4e2d\u6ca1\u6709\u5934\u6216\u5c3e\uff0c\u90a3\u4e48\u4ed6\u5c31\u8981\u88ab\u8fdb\u5165x\u6b21\uff0c\u51fa\u53bbx\u6b21(x\u4e3a\u975e\u8d1f\u6574\u6570),\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e00\u884c\u6216\u8fd9\u4e00\u5217\u5982\u679c\u5f53\u4f5c\u4e00\u4e2a\u77e9\u9635\u6765\u67e5\u8be2\u7684\u8bdd\uff0c\u5f97\u5230\u7684\u4e00\u5b9a\u662f2x\uff0c\u4e00\u4e2a\u5076\u6570\u3002\u8fd9\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u884c\u67e5\u8be2(i,1,i,n)\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\u67e5\u8be2(1,i,1,n),\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e24\u4e2a\u5934\u548c\u4e24\u4e2a\u5c3e\u7684\u884c\u548c\u5217\u4e86\u3002\u6700\u540e\uff0c\u5bf9\u4e8e\u53ea\u5728\u540c\u4e00\u884c\u6216\u8005\u540c\u4e00\u5217\u7684\u94fe\uff0c\u7279\u5224\u4e00\u4e0b\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC diagnostic error \"-std=c++11\"\nusing namespace std;\ninline bool query(int aa,int b,int c,int d){\n\tcout<<\"? \"<<a<<' '<<b<<\" \"<<c<<' '<<d<<endl;\n\tint rt;\n\tcin>>rt;\n\trt&=1;\n\treturn rt; \n} \nvector<int> vx,vy;\ninline void answer(int a,int b,int c,int d){\n\tcout<<\"! \"<<a<<' '<<b<<' '<<c<<' '<<d<<endl;\n\texit(0);\n}\nint main(){\n\tios_base::sync_with_stdio(false);\n\tint n,i,j;\n\tcin>>n;\n\tfor(i=1;i<=n;++i){\n\t\tif(query(i,1,i,n)) vx.push_back(i);\n\t\tif(query(1,i,n,i)) vy.push_back(i);\n\t}\n\tif(!vx.size()){\n\t\tint l=1,r=n,md;\n\t\twhile(l<r){\n\t\t\tmd=l+r>>1;\n\t\t\tif(query(1,1,md,vy[0])) r=md;\n\t\t\telse l=md+1;\n\t\t}\n\t\tanswer(l,vy[0],l,vy[1]);\n\t\treturn 0;\n\t}\n\tif(!vy.size()){\n\t\tint l=1,r=n,md;\n\t\twhile(l<r){\n\t\t\tmd=l+r>>1;\n\t\t\tif(query(1,1,vx[0],md)) r=md;\n\t\t\telse l=md+1;\n\t\t}\n\t\tanswer(vx[0],l,vx[1],l);\n\t\treturn 0; \n\t}\n\tif(query(vx[0],vy[0],vx[0],vy[0])) answer(vx[0],vy[0],vx[1],vy[1]);\n\telse answer(vx[0],vy[1],vx[1],vy[0]);\n    return 0;\n}\n```\n",
        "postTime": 1555249089,
        "uid": 125964,
        "name": "\u4e16\u672bOIer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1153E \u3010Serval and Snake\u3011"
    }
]