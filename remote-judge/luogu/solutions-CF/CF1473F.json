[
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $a$ \u548c $b$\uff0c\u8bbe $S \\subset \\{1,2,3,\\cdots,n\\}$\uff0c\u5176\u6ee1\u8db3\u5bf9\u4e8e\u4efb\u610f\u7684 $i \\in S$\uff0c$j \\in [1,i-1]$\uff0c\u82e5 $a_i$ \u88ab $a_j$ \u6574\u9664\uff0c\u5219 $j \\in S$\u3002\u6c42 $\\sum_{i \\in S}b_i$ \u7684\u6700\u5927\u503c\u3002\n\n**\u6570\u636e\u8303\u56f4**\uff1a$n \\le 3000$\uff0c$1 \\le a_i \\le 100$\uff0c$-10^5 \\le b_i \\le 10^5$\n\n## \u5206\u6790 + \u9898\u89e3\n\n\u770b\u5b8c\u9898\u610f\uff0c\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u8fd9\u662f\u4e00\u9053\u8d2a\u5fc3\u9898\uff0c\u4f46\u662f\u4e00\u770b\u5230\u6570\u636e\u8303\u56f4 $n \\le 3000$\uff0c\u5c31\u611f\u89c9\u4e0d\u592a\u5bf9\u52b2\u2014\u2014\u4e3a\u4f55 $n$ \u8fd9\u4e48\u5c0f\uff1f\u518d\u4ed4\u7ec6\u4e00\u60f3\uff0c\u8fd9\u662f\u4e00\u9053**\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u3001\u6570\u636e\u8303\u56f4\u4e0d\u662f\u5f88\u5927\u7684\u6700\u4f18\u6027\u9009\u62e9\u95ee\u9898**\uff0c\u4e8e\u662f\u8003\u8651**\u7f51\u7edc\u6d41**\u3002~~\u4e8b\u5b9e\u4e0a\u6211\u5728\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u538b\u6839\u6ca1\u60f3\u5230\u8fd9\u4e00\u70b9\u3002~~\n\n\u5982\u679c\u60f3\u5230\u4e86\u7f51\u7edc\u6d41\uff0c\u90a3\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u79cd**\u6700\u5c0f\u5272**\u6a21\u578b\uff0c\u5efa\u56fe\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u8bbe\u6e90\u70b9\u4e3a $s$\uff0c\u6c47\u70b9\u4e3a $t$\uff0c\u7b2c $i$ \u4e2a\u5143\u7d20\u5bf9\u5e94 $i$ \u53f7\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$\uff0c\u8bbe $j<i$ \u4e14 $a_i$ \u88ab $a_j$ \u6574\u9664\uff0c\u5219\u7531 $i$ \u53f7\u70b9 \u5411 $j$ \u53f7\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $inf$ \u7684\u8fb9\u3002\u82e5 $b_i>0$\uff0c\u5219\u7531 $s$ \u5411 $i$ \u53f7\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $b_i$ \u7684\u8fb9\uff1b\u5426\u5219\uff0c$b_i<0$\uff0c\u5219\u7531 $i$ \u53f7\u70b9\u5411 $t$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $-b_i$ \u7684\u8fb9\u3002\n\n**\u8bf4\u660e**\uff1a\u9996\u5148\u8003\u8651\u6240\u6709 $b_i>0$ \u7684 $i$ \u53f7\u70b9\uff0c\u82e5\u9009\u62e9 $i$\uff0c\u5373 $i \\in S$\uff0c\u5219\u5fc5\u7136\u9009\u62e9\u4e0e\u4e4b\u6709\u4f9d\u8d56\u5173\u7cfb\u7684 $b_j<0$ \u7684 $j$\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c$i$ \u5230 $j$ \u6709\u6d41\u91cf\u4e3a $inf$ \u7684\u8fb9\u6070\u597d\u6ee1\u8db3\u4e86\u8fd9\u4e00\u70b9\u3002\u800c\u8fd9\u5f20\u56fe\u7684\u5272\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5de6\u534a\u90e8\u5206\u5bf9\u5e94**\u6ca1\u6709\u9009\u62e9**\u7684 $b_i>0$ \u7684 $b_i$ \u4e4b\u548c\uff0c\u53f3\u534a\u90e8\u5206\u5bf9\u5e94**\u88ab\u8feb\u9009\u62e9**\u7684 $b_i<0$ \u7684 $-b_i$ \u4e4b\u548c\uff0c\u56e0\u6b64**\u7b54\u6848**\u6070\u4e3a **$\\sum_{b_i>0}b_i$ \u51cf\u53bb\u6700\u5c0f\u5272**\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u6ce8\u610f\u5230\u82e5\u6240\u6709\u7684 $a$ \u76f8\u7b49\uff0c\u5219\u8fb9\u6570\u4f1a\u5230\u8fbe\u4e0a\u754c $O(n^2)$\uff0c\u800c\u8fd9\u9053\u9898\u7684\u7a7a\u95f4\u4e3a 32MB\uff0c\u6839\u672c\u5b58\u4e0d\u4e0b\u3002\u7531\u4e8e $1 \\le a_i \\le 100$\uff0c\u6211\u4eec\u5c06\u5176\u6539\u8fdb\u4e3a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u679a\u4e3e $a_i$ \u7684\u7ea6\u6570\uff0c\u627e\u5230\u6bcf\u4e2a\u7ea6\u6570\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e $j$\uff0c\u7531 $i$ \u5411 $j$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $inf$ \u7684\u8fb9\uff0c\u8fb9\u6570\u4e0a\u754c\u964d\u4e3a $12n$\u3002\n\n\u7531\u4e8e\u6700\u5c0f\u5272\u548c\u6700\u5927\u6d41\u76f8\u7b49\uff0c\u53ea\u9700\u6309\u4e0a\u8ff0\u65b9\u6cd5\u5efa\u56fe\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\nPS\uff1a\u5982\u679c\u4f60\u4e0d\u4f1a\u5199\u6700\u5927\u6d41\uff0c\u5efa\u8bae\u524d\u5f80 [P3376 \u3010\u6a21\u677f\u3011\u7f51\u7edc\u6700\u5927\u6d41](https://www.luogu.com.cn/problem/P3376) \u8fdb\u884c\u5b66\u4e60\u3002\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint N,S,T;\nconst int max_N=3e3+5;//3000+2 \u4e2a\u70b9 \nconst int max_M=39e3+5;//12*3000+3000 \u6761\u8fb9 \nconst int inf=1e9;\nint End[max_M<<1],Last[max_N],Next[max_M<<1],cap[max_M<<1],e=1;//\u6ce8\u610f e \u521d\u59cb\u4e3a 1\uff08\u6b63\u53cd\u8fb9\u5e38\u89c4\u64cd\u4f5c\uff09 \ninline void add_edge(int x,int y,int c)\n{\n\tEnd[++e]=y;\n\tNext[e]=Last[x];\n\tLast[x]=e;\n\tcap[e]=c;\n\tEnd[++e]=x;\n\tNext[e]=Last[y];\n\tLast[y]=e;\n\tcap[e]=0;\n}\nint dis[max_N],q[max_N],_head,_tail;\nint Last1[max_N],cnt[max_N];\nvoid bfs()\n{\n\tfor(int i=1;i<=N;++i)\n\t\tdis[i]=N,cnt[i]=0;\n\tdis[T]=0;\n\t_head=1,_tail=0;\n\tq[++_tail]=T;\n\twhile(_head<=_tail)\n\t{\n\t\tint x=q[_head++];\n\t\tfor(int i=Last[x];i;i=Next[i])\n\t\t{\n\t\t\tint y=End[i];\n\t\t\tif(cap[i^1]>0&&dis[y]>dis[x]+1)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+1;\n\t\t\t\tq[++_tail]=y;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=N;++i)\n\t{\n\t\tLast1[i]=Last[i];\n\t\t++cnt[dis[i]];\n\t}\n}\nint dfs(int x,int flow)\n{\n\tif(x==T)\n\t\treturn flow;\n\tint flow_now=0;\n\tfor(int &i=Last1[x];i;i=Next[i])\n\t{\n\t\tint y=End[i];\n\t\tif(dis[x]==dis[y]+1&&cap[i]>0)\n\t\t{\n\t\t\tint f=dfs(y,min(cap[i],flow-flow_now));\n\t\t\tflow_now+=f;\n\t\t\tcap[i]-=f;\n\t\t\tcap[i^1]+=f;\n\t\t\tif(flow==flow_now||dis[S]==N)\n\t\t\t\treturn flow_now;\n\t\t}\n\t}\n\tLast1[x]=Last[x];\n\tif(!(--cnt[dis[x]]))\n\t\tdis[S]=N;\n\t++cnt[++dis[x]];\n\treturn flow_now;\n}\n/*----\u4ee5\u4e0a\u4e3a\u6700\u5927\u6d41\u6a21\u677f----*/\nconst int max_n=3e3+5;\nint a[max_n],b[max_n];\nconst int max_a=100+5;\nint pos[max_a];//pos[i] \u8bb0\u5f55\u5f53\u524d i \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",a+i);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",b+i);\n\tN=n+2,S=n+1,T=n+2;\n\tint ans=0;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(b[i]>0)\n\t\t{\n\t\t\tadd_edge(S,i,b[i]);\n\t\t\tans+=b[i];\n\t\t}\n\t\telse if(b[i]!=0)\n\t\t\tadd_edge(i,T,-b[i]);\n\t\tfor(int j=1;j<=a[i];++j)\n\t\t{\n\t\t\tif(a[i]%j==0&&pos[j]!=0)//\u5224\u65ad j \u662f\u5426\u4e3a a[i] \u7684\u7ea6\u6570\u53ca j \u662f\u5426\u51fa\u73b0\u8fc7 \n\t\t\t\tadd_edge(i,pos[j],inf);\n\t\t}\n\t\tpos[a[i]]=i;//\u66f4\u65b0 pos \n\t}\n\tbfs();\n\tint flow=0;\n\twhile(dis[S]<N)\n\t\tflow+=dfs(S,inf);\n\tprintf(\"%d\\n\",ans-flow);\n\treturn 0;\n}\n```",
        "postTime": 1610974449,
        "uid": 145355,
        "name": "wsyhb",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1473F Strange Set"
    },
    {
        "content": "~~\u600e\u4e48\u611f\u89c9\u8fd9\u573a\u6bd4\u8d5b C \u6bd4 F \u96be\u554a/px~~\n### Description.\n\u5b9a\u4e49\u4e00\u4e2a\u96c6\u5408\u662f\u597d\u7684\u5f53\u4e14\u4ec5\u5f53 $\\forall i\\in S,\\forall j<i\\land a_j|a_i,\\texttt{\u90fd\u6709},j\\in S$\n\u5b9a\u4e49\u4e00\u4e2a\u96c6\u5408\u7684\u6743\u503c\u662f $\\sum_{i\\in S}b_i$ \uff0c\u6c42\u597d\u96c6\u5408\u4e2d\u6700\u5927\u6743\u503c\u3002  \n### Solution.\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u3002  \n~~\u5f53\u4f60\u4f1a\u4e86\u524d\u7f6e\u77e5\u8bc6\u540e\u4f60\u4f1a\u53d1\u73b0\u4f60\u505a\u5b8c\u4e86\u6b64\u9898~~  \n\u6211\u4eec\u5bf9 $i$ \u5411\u4e4b\u524d\u7684\u6240\u6709\u6ee1\u8db3 $j<i\\land a_j|a_i$ \u7684 $j$ \u62c9\u8fb9\u3002  \n\u800c\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u662f\u5b83\u539f\u6765\u7684 $b_i$\u3002  \n\u5bf9\u8fd9\u4e2a\u56fe\u6c42\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5c31\u597d\u4e86\u3002  \n\u4e0d\u8fc7\uff0c\u8fd9\u9898\u6709\u70b9\u5361\u7a7a\u95f4\u3002  \n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u6309\u7167\u65b9\u6cd5\u5efa\u7acb\u7684\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6700\u5927\u8fb9\u6570\u53ef\u80fd\u662f $N^2$\u3002  \n\u90a3\u4e48\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u8fb9\u4e0d\u662f\u6e90\u70b9\u8fd9\u4e00\u4fa7\u4e8c\u5206\u56fe\u6307\u5411\u6c47\u70b9\u4e00\u4fa7\u4e8c\u5206\u56fe\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4e0d\u8981\u5b83\u3002  \n\u663e\u7136\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u5176\u4ed6\u7684\u8fb9\u663e\u7136\u4e0d\u4f1a\u88ab\u6d41\u5230\u3002  \n\u8fd9\u6837\u6211\u4eec\u5c31\u6210\u529f\u7684\u628a\u8fb9\u6570\u538b\u7f29\u6210\u4e86 $\\left(\\frac{N}2\\right)^2$\uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002  \n\n### Coding.\n```cpp\n//\u613f\u4f60\u548c\u4f60\u91cd\u8981\u7684\u4eba\u80fd\u591f\u518d\u6b21\u91cd\u9022\uff01\n#include<bits/stdc++.h>\nusing namespace std;typedef long long typf;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<48||c>57;c=getchar()) if(!(c^45)) f=1;\n\tfor(;c>=48&&c<=57;c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tf?x=-x:0;\n}\nstruct edge{int to,w,nxt;}e[2551005];int et=1,head[3005],s,t;\nint d[3005],cur[3005];const typf INF=(typf)0x3f3f3f3f3f3f3f3f;\ninline void ADDE(int x,int y,int w) {e[++et]=(edge){y,w,head[x]},head[x]=et;}\ninline void adde(int x,int y,int w) {ADDE(x,y,w),ADDE(y,x,0);}\ninline char\tbfs(int s,int t)\n{\n\tqueue<int>q;memset(d,0,sizeof(d)),d[s]=1,q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=e[i].nxt) if(!d[e[i].to]&&e[i].w) q.push(e[i].to),d[e[i].to]=d[x]+1;\n\t}\n\treturn !!d[t];\n}\ninline int dfs(int x,int t,int lim=(int)INF)\n{\n\tint f=lim;if(x==t) return lim;\n\tfor(int &i=cur[x];i;i=e[i].nxt) if(e[i].w&&d[e[i].to]==d[x]+1)\n\t\t{int g=dfs(e[i].to,t,min(f,e[i].w));e[i].w-=g,e[i^1].w+=g,f-=g;if(!f) break;}\n\treturn lim-f;\n}\ninline typf dinic(int s,int t) {typf r=0;while(bfs(s,t)) memcpy(cur,head,sizeof(cur)),r+=dfs(s,t);return r;}\nint n,a[3005],b[3005];\nint main()\n{\n\tread(n),s=n+1,t=s+1;for(int i=1;i<=n;i++) read(a[i]);\n\tint cnt=0;for(int i=1;i<=n;i++) read(b[i]);\n\tfor(int i=1;i<=n;i++) if(b[i]<0) adde(i,t,-b[i]);else cnt+=b[i],adde(s,i,b[i]);\n\tfor(int i=1;i<=n;i++) for(int j=i+1;j<=n;j++) if(a[j]%a[i]==0&&b[j]>0&&b[i]<0) adde(j,i,(int)INF);\n\treturn printf(\"%lld\\n\",cnt-dinic(s,t)),0;\n}\n```",
        "postTime": 1612091986,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF1473F Strange Set\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "> \u5728\u67e5\u770b\u6b64\u9898\u89e3\u524d\u5e0c\u671b\u60a8\u80fd\u5148\u53bb\u4e86\u89e3\u4ec0\u4e48\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\uff0c\u5c31\u4e0d\u5728\u9898\u89e3\u4e2d\u9610\u91ca\u8be5\u6a21\u578b\u7684\u57fa\u672c\u539f\u7406\u4e86\u3002\u4f18\u5316\u5efa\u56fe\u624d\u662f\u5173\u952e\u561b\uff08\uff08\n\nCF 2700 \u786e\u5b9e\u5047\u7684\u79bb\u8c31\u3002\n\n$A$ \u5e8f\u5217\u5df2\u7ecf\u7ed9\u51fa\u4e86\u975e\u5e38\u660e\u786e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4e14\u6743\u503c $B$ \u56fa\u5b9a\uff0c\u6240\u4ee5\u5b83\u662f\u4e00\u9053\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u88f8\u9898\u3002\n\n\u4f46\u662f\u76f4\u63a5\u83bd\u4f1a\u53d1\u73b0\u56e0\u4e3a\u8fb9\u6570\u5728 $A$ \u4e2d\u6240\u6709\u5143\u7d20\u90fd\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\u4f1a\u8fbe\u5230 $n^2$ \u7ea7\u522b\uff0c\u4e8e\u662f\u8003\u8651\u4f18\u5316\u8fb9\u3002\n\n\u5f88\u663e\u7136\u6709\u8fd9\u6837\u7684\u5173\u7cfb\uff0c\u82e5 $a_p=a_q=a_i(i \\in [3, n], p, q \\in [1, i - 1], p \\neq q)$\uff0c\u5219\u5728\u4f9d\u8d56\u5173\u7cfb\u4e2d\uff0c$a_p, a_q$ \u90fd\u4f9d\u8d56\u4e8e $a_i$\uff0c\u4e14 $a_p$ \u4f9d\u8d56\u4e8e $a_q$\u3002\n\n\u90a3\u4e48\u76f4\u63a5\u6309\u7167\u9898\u76ee\u7ed9\u5b9a\u7684\u4f9d\u8d56\u5173\u7cfb\u8fde\u8fb9\u4f1a\u53d1\u73b0\u6211\u4eec\u8fde\u4e86 $a_p \\to a_q, a_p \\to a_i, a_q \\to a_i$\uff0c\u4f46\u5176\u5b9e\u8fd9\u548c\u6211\u4eec\u53ea\u8fde $a_p \\to a_q, a_q \\to a_i$ \u662f\u7b49\u4ef7\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$\uff0c\u6211\u4eec\u66b4\u529b\u679a\u4e3e $a_i$ \u7684\u7ea6\u6570\uff0c\u8ba9\u8be5\u6570\u76ee\u524d\u6700\u665a\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0e\u5f53\u524d\u4f4d\u7f6e\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u8f6c\u5316\u5230\u8fd9\u91cc\uff0c\u4ecd\u7136\u662f\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u88f8\u9898\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\nusing namespace std;\n\nint Abs(int x) { return x < 0 ? -x : x; }\nint Max(int x, int y) { return x > y ? x : y; }\nint Min(int x, int y) { return x < y ? x : y; }\n\nint read() {\n    int x = 0, k = 1;\n    char s = getchar();\n    while(s < '0' || s > '9') {\n        if(s == '-')\n            k = -1;\n        s = getchar();\n    } \n    while('0' <= s && s <= '9') {\n        x = (x << 3) + (x << 1) + (s ^ 48);\n        s = getchar();\n    }\n    return x * k;\n}\n\nvoid write(int x) {\n    if(x < 0) {\n        x = -x;\n        putchar('-');\n    }\n    if(x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\n\nvoid print(int x, char s) {\n    write(x);\n    putchar(s);\n}\n\nconst int MAXN = 3e3 + 5;\nconst int MAXM = 2e5 + 5;\nconst int MAXL = 3e3 + 5;\nconst int INF = 2147483647;\n\nstruct Maximum_flow {\n    struct edge {\n        int v, nxt;\n        edge() {}\n        edge(int V, int Nxt) {\n            v = V, nxt = Nxt;\n        }\n    } e[MAXM << 1];\n    int n, cnt, s, t;\n    int Cap[MAXM << 1], Flow[MAXM << 1];\n    int Lab[MAXL], Cur[MAXL], head[MAXL], Col[MAXL];\n    queue<int> q;\n\n    void init(int N, int S, int T) {\n        for(int i = 0; i <= cnt; i++) \n            Flow[i] = 0, Cap[i] = 0;\n        n = N, cnt = 0, s = S, t = T;\n        for(int i = 1; i <= n; i++)\n            head[i] = -1, Col[i] = 0;\n    }\n\n    void Add_Edge(int u, int v, int w) {\n        Cap[cnt] += w;\n        e[cnt] = edge(v, head[u]);\n        head[u] = cnt++;\n        e[cnt] = edge(u, head[v]);\n        head[v] = cnt++;\n    }\n\n    bool Lab_Vertex() {\n        for(int i = 1; i <= n; i++)\n            Lab[i] = 0;\n        Lab[t] = 1;\n        while(!q.empty())\n            q.pop();\n        q.push(t);\n        while(!q.empty()) {\n            int v = q.front();\n            q.pop();\n            for(int i = head[v], u; ~i; i = e[i].nxt) {\n                u = e[i].v;\n                if(!Lab[u] && Cap[i ^ 1] - Flow[i ^ 1]) {\n                    Lab[u] = Lab[v] + 1;\n                    q.push(u);\n                    if(u == s)\n                        return Lab[s];\n                }\n            }\n        }\n        return Lab[s];\n    }\n\n    int Widen(int u, int Limit) {\n        if(u == t)\n            return Limit;\n        int Used = 0, Delta;\n        for(int i = Cur[u], v; ~i; i = e[i].nxt) {\n            v = e[i].v;\n            Cur[u] = i;\n            if(Lab[v] + 1 != Lab[u] || Cap[i] - Flow[i] <= 0)\n                continue;\n            Delta = Widen(v, Min(Limit - Used, Cap[i] - Flow[i]));\n            Used += Delta, Flow[i] += Delta, Flow[i ^ 1] -= Delta;\n            if(Used == Limit)\n                return Used;\n        }\n        return Used;\n    }\n\n    int Dinic() {\n        int res = 0;\n        while(Lab_Vertex()) {\n            for(int i = 1; i <= n; i++)\n                Cur[i] = head[i];\n            res += Widen(s, INF);\n            if(res < 0)\n                return INF;\n        }\n\n        return res;\n    }\n\n    void Color(int u) {\n        Col[u] = 1;\n        for(int i = head[u]; ~i; i = e[i].nxt) \n            if(Cap[i] - Flow[i] > 0 && !Col[e[i].v])\n                Color(e[i].v);\n    }\n} Flow_Graph;\n\nint a[MAXN], b[MAXN], to[MAXN];\n\nint main() {\n    int n = read(), S = n + 1, T = n + 2, ans = 0;\n    Flow_Graph.init(T, S, T);\n    for(int i = 1; i <= n; i++) {\n        a[i] = read();\n        for(int j = 1; j <= a[i]; j++)\n            if(a[i] % j == 0 && to[j])\n                Flow_Graph.Add_Edge(i, to[j], INF);\n        to[a[i]] = i;\n    }\n    for(int i = 1; i <= n; i++) {\n        b[i] = read();\n        if(b[i] > 0) {\n            Flow_Graph.Add_Edge(S, i, b[i]);\n            ans += b[i];\n        }\n        else    \n            Flow_Graph.Add_Edge(i, T, -b[i]);\n    }\n    print(ans - Flow_Graph.Dinic(), '\\n');\n    return 0;\n}\n```",
        "postTime": 1641171672,
        "uid": 266779,
        "name": "STrAduts",
        "ccfLevel": 6,
        "title": "\u300cCF1473F\u300dStrange Set"
    },
    {
        "content": "[link](https://www.luogu.com.cn/problem/CF1473F)\n## \u9898\u610f\u7b80\u8ff0\n\u6709\u4e24\u4e2a\u957f\u5ea6\u5747\u4e3a n \u7684\u5e8f\u5217 $a,b$\uff0c\u6784\u9020\u4e00\u4e2a\u7531 1 \u5230 n \u6784\u6210\u7684\u96c6\u5408 $S$\uff0c\u6ee1\u8db3\u5bf9\u4e8e\u4efb\u610f $i\\in S$\uff0c\u5982\u679c\u6709 $j\\in [1,i-1]$\uff0c\u6ee1\u8db3 $a_j|a_i$\uff0c\u5219\u4e5f\u6709 $ j\\in S$\u3002\u6c42 $\\sum\\limits_{i \\in S}b_i$ \u6700\u5927\u503c\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leq n \\leq3000$\uff0c$1\\leq a_i\\leq100$\uff0c$-10^5\\leq b_i\\leq10^5$\u3002\n\n**\u65f6\u7a7a\u9650\u5236\uff1a4S 31.25MB\u3002**\n\n## \u5206\u6790\n\n\u7531\u4e8e\u9898\u76ee\u4e2d $a_j$ \u7684\u51fa\u73b0\u53d7\u9650\u5236\u4e8e $a_i$ \u7684\u51fa\u73b0\uff0c\u4e0d\u96be\u60f3\u5230\u53ef\u4ee5\u5957\u7528\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u5957\u8def\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$ \uff0c\u5411 $[1,i-1]$ \u4e2d\u6240\u6709 $a_i$ \u7684\u56e0\u6570\u8fde\u4e00\u6761\u4e3a $INF$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u6b64\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\tfor (int i=1;i<=n;i++){\n\t\tif (b[i]>0) sum+=b[i],Add(s,i,b[i]);\n\t\telse Add(i,t,-b[i]);\n\t\tfor (int j=1;j<i;j++){\n\t\t\tif (a[i]%a[j]==0) Add(i,j,INF);\n\t\t}\n\t}\n```\n\u7136\u800c\u6b64\u9898\u8fde\u8fb9\u6570\u91cf\u7ea7\u5f88\u5bb9\u6613\u8fbe\u5230 $n^2$ \u7ea7\u522b\uff0c\u94c1\u5b9a\u4f1a MLE\u3002\u6545\u9700\u8981\u8003\u8651\u4f18\u5316\u3002\n\n\u5148\u653e\u4e00\u5f20\u56fe \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zkxkb6ze.png)\n\n\u7528\u4e4b\u524d\u7684\u65b9\u6cd5\u5efa\u56fe\uff0c\u56fe\u4e2d\u663e\u7136\u6709\u5f88\u591a\u591a\u4f59\u7684\u8fb9\u3002\u4f8b\u5982\u4ece 4 \u5230\u7b2c\u4e00\u4e2a 2 \u53ef\u4ee5\u8d70 1 \u548c 2\uff0c\u7b2c 3 \u6761\u8def\u5c31\u662f\u591a\u4f59\u7684\u3002\n\n\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u70b9\u548c\u6bcf\u4e00\u4e2a\u56e0\u6570\u53ea\u8fde\u63a5\u4e00\u6b21\uff0c\u4e3a\u4fdd\u8bc1\u6b63\u786e\u6027,\u662f\u6bcf\u4e2a\u70b9\u548c\u56e0\u6570\u4ecd\u80fd\u8054\u901a\uff0c\u6211\u4eec\u518d\u94a6\u5b9a\u6bcf\u4e2a\u70b9\u548c\u6bcf\u4e2a\u56e0\u6570\u6700\u540e\u4e00\u4e2a\u70b9\u76f8\u8fde\u63a5\u5373\u53ef\u3002\n\n\u4f18\u5316\u540e\u7684\u56fe\u5982\u4e0b\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/oglstclj.png)\n\n\u4f18\u5316\u540e\uff0c\u6bcf\u4e2a\u70b9\u6700\u591a\u548c 100 \u4e2a\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u6545\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u4e3a\u4e86 $100n$\u3002\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n## AC Code\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<map>\n#include<cctype>\n#include<cstdlib>\n#include<queue>\n\nusing namespace std;\n\nconst int MAXV=3005;\nconst int MAXM=1e6+5;\n\nnamespace graph{\n\tstruct Edge{\n\t\tint to,nxt,w;\n\t}E[MAXM<<1];\n\tint head[MAXV],ecnt=1,ans[MAXV];\n\tvoid add(int u,int v,int w){\n\t\tE[++ecnt].to=v;\n\t\tE[ecnt].w=w;\n\t\tE[ecnt].nxt=head[u];\n\t\thead[u]=ecnt;\n\t}\n\tvoid Add(int u,int v,int w){\n\t\tadd(u,v,w);add(v,u,0);\n\t}\n\t#define ll long long\n\tconst ll INF=0x3f3f3f3f;\n\tint dep[MAXV],cur[MAXV];\n\tbool Bfs(int s,int t){\n\t\tqueue <int> q;\n\t\tmemset(dep,0,sizeof dep);\n\t\tfor (int i=s;i<=t;i++) cur[i]=head[i];\n\t\tdep[s]=1;\n\t\tq.push(s);\n\t\twhile(q.size()){\n\t\t\tint u=q.front();\n\t\t\tq.pop();\n\t\t\tfor (int i=head[u];i;i=E[i].nxt){\n\t\t\t\tint v=E[i].to;\n\t\t\t\tif (E[i].w&&!dep[v]){\n\t\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\t\tif (v==t) return 1;\n\t\t\t\t\tq.push(v);\t\t\t\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tint Dfs(int u,int flow,int t){\n\t\tif (u==t) return flow;\n\t\tint rest=flow;\n\t\tfor (int i=cur[u];i;i=E[i].nxt){\n\t\t\tint v=E[i].to;\n\t\t\tif (E[i].w&&dep[v]==dep[u]+1){\n\t\t\t\tint ret=Dfs(v,min(rest,E[i].w),t);\n\t\t\t\tE[i].w-=ret;E[i^1].w+=ret;\n\t\t\t\trest-=ret;\n\t\t\t\tif (!rest) return flow;\n\t\t\t}\n\t\t\tcur[u]=i;\n\t\t}\n\t\treturn flow-rest;\n\t}\t\n\tll Dinic(int s,int t){\n\t\tll flow=0,ret=0;\n\t\twhile(Bfs(s,t)){\n\t\t\twhile((ret=Dfs(s,INF,t))) flow+=ret;\n\t\t}\n\t\treturn flow;\n\t}\n}\n\nusing namespace graph;\nconst int MAXN=3005;\n\nint n,a[MAXN],b[MAXN],s,t,cnt[MAXN];\nll sum;\n\nint main(){\n\tscanf(\"%d\",&n);\n\ts=0;t=n+1;\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&b[i]);\n\tfor (int i=1;i<=n;i++){\n\t\tif (b[i]>0) sum+=b[i],Add(s,i,b[i]);\n\t\telse Add(i,t,-b[i]);\n\t\tfor (int j=1;j<=100;j++){\n\t\t\tif (a[i]%j==0&&cnt[j]) Add(i,cnt[j],INF);\n\t\t}\n\t\tcnt[a[i]]=i;\n\t}\n\tprintf(\"%lld\\n\",sum-Dinic(s,t));\n}\n```\n",
        "postTime": 1639207182,
        "uid": 353280,
        "name": "I_CE_IOI",
        "ccfLevel": 0,
        "title": "CF1473F Strange Set"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u975e\u5e38\u7b80\u5355\uff0c\u800c\u4e14\u8d3c\u6709\u6548\u7684\u8fde\u8fb9\u65b9\u5f0f\n\n\u9996\u5148\u56e0\u4e3a\u9760\u540e\u7684\u70b9\u4f1a\u88ab\u9760\u524d\u7684\u70b9\u9650\u5236\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u9053 \u6700\u5927\u95ed\u5408\u5b50\u56fe \u7684\u677f\u9898\u3002\n\n\u4f46\u662f\u51fa\u9898\u4eba\u5361\u4e86\u7a7a\u95f4\uff0c\u5f53\u6240\u6709\u7684 $a_i$ \u76f8\u540c\u7684\u65f6\u5019\uff0c\u8fde\u8fb9\u7684\u590d\u6742\u5ea6\u662f $n^2$ \u7684\uff0c\u4f1a\u88ab\u5361\u6389\u3002\n\n\u6211\u4eec\u8003\u8651\u4f18\u5316\uff0c\u56e0\u4e3a $a_i \\leq 100$\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u591a\u53ea\u9700\u8981\u8fde $100$ \u6761\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5f53 $i$ \u5df2\u7ecf\u5411 $j$ \u8fde\u8fb9\u4e86\uff0c\u90a3\u4e48\u5f53 $a_k=a_j,k\\neq j$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u7531 $i$ \u5411 $k$ \u8fde\u8fb9\u4e86\u3002\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u7528\u6876\u6765\u5b9e\u73b0\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u7a7a\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230\u4e86 $O(n)$ \u7ea7\u522b\u3002\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define int ll\nconst int INF=0x3f3f3f3f;\n\nstruct zz{\n\tint u,w,id;\n};\nvector<zz> v[200005];\nstruct Dinic{\n\tint dist[200005],be[200005];\n\tint s,t;\n\tvoid Add(int x,int y,int z){\n\t\tint idx=v[x].size(),idy=v[y].size();\n\t\tv[x].push_back((zz){y,z,idy});\n\t\tv[y].push_back((zz){x,0,idx});\n\t}\n\tbool BFS(){\n\t\tbool f=0;memset(dist,-1,sizeof dist);\n\t\tqueue<int> q;q.push(s);\n\t\tdist[s]=be[s]=0;\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tint siz=v[x].size();\n\t\t\tfor(int i=0;i<siz;i++){\n\t\t\t\tint y=v[x][i].u,w=v[x][i].w;\n\t\t\t\tif(!w||dist[y]!=-1) continue;\n\t\t\t\tq.push(y),be[y]=0,dist[y]=dist[x]+1;\n\t\t\t\tif(y==t) f=1;\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\tint DFS(int x,int sum){\n\t\tif(x==t||!sum) return sum;\n\t\tint siz=v[x].size(),ans=0;\n\t\tfor(int i=be[x];i<siz;i++){\n\t\t\tint y=v[x][i].u,w=v[x][i].w,id=v[x][i].id;be[x]=i;\n\t\t\tif(!w||dist[x]!=dist[y]-1) continue;\n\t\t\tint now=DFS(y,min(sum-ans,w));\n\t\t\tif(!now) dist[y]=0;\n\t\t\tv[x][i].w-=now,v[y][id].w+=now,ans+=now;\n\t\t}\n\t\treturn ans;\n\t}\n\tint dinic(){\n\t\tint ans=0,now=0;\n\t\twhile(BFS()) while(now=DFS(s,INF)) ans+=now;\n\t\treturn ans;\n\t}\n}T;\nint n,sum=0;\nint a[10005],b[10005];\nbool f[3005];\n\nvector<int> V[100005];\n\nsigned main(){\n\tcin>>n;T.s=0,T.t=n+1;\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&b[i]);\n\tfor(int i=1;i<=n;i++) {\n\t\tmemset(f,0,sizeof f);\n\t\tfor(int j=i-1;j>=1;j--){\n\t\t\tif(f[a[j]]) continue;\n\t\t\tif(a[i]%a[j]==0) T.Add(i,j,INF),f[a[j]]=1;\n\t\t\t\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(b[i]>=0) T.Add(T.s,i,b[i]),sum+=b[i];\n\t\telse T.Add(i,T.t,-b[i]);\n\t}\n\tprintf(\"%lld\\n\",sum-T.dinic());\n\treturn 0;\n}\n```",
        "postTime": 1639202241,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "CF1473F \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb](http://lycltb.top/post/solution-cf1473f/)\n\n\u597d\u54e6 \u662f\u72ec\u7acb\uff08\u5e76\u6ca1\u6709\uff09\u505a\u51fa\u6765\u7684\u7b2c\u4e00\u9053 *2700\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u6709\u5148\u51b3\u6761\u4ef6\u7684\u9009\u6570 \u4ee5\u53ca\u6570\u636e\u8303\u56f4\u90fd\u957f\u5f97\u5f88\u50cf\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u578b\uff0c\u4e8e\u662f\u7528\u8fd9\u4e2a\u6a21\u578b\u53bb\u505a\u3002\n\n\u8d85\u7ea7\u6e90 $S$ \u5411\u6bcf\u4e2a\u6b63\u6743\u70b9 $i$\uff08$b_i$ \u4e3a\u6b63\u7684\u6570\uff09\u8fde\u6d41\u91cf\u4e3a $b_i$ \u7684\u8fb9\uff0c\u6bcf\u4e2a\u8d1f\u6743\u70b9 $i$\uff08$b_i$ \u4e3a\u8d1f\u7684\u6570\uff09\u5411\u8d85\u7ea7\u6c47 $T$ \u8fde\u6d41\u91cf\u4e3a $-b_i$ \u7684\u8fb9\uff0c\u6240\u6709\u6ee1\u8db3 $a_j\\ |\\ a_i$ \u4e14 $i\\in [1,n],\\  j\\in [1,i-1]$ \u7684\u6709\u5e8f\u5bf9 $(i,j)$ \u8fde\u8fb9 $(i,j)$\uff0c\u6743\u503c\u4e3a $\\texttt{INF}$\u3002\u7b54\u6848\u5373\u4e3a\u6240\u6709\u6b63\u6743\u70b9\u4e4b\u548c\u51cf\u53bb\u6700\u5c0f\u5272\u3002\n\n\u5230\u8fd9\u91cc\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u6709\u4e00\u4e2a\u6bd2\u7624\u7684 32MB \u7684\u7a7a\u95f4\u9650\u5236\uff0c\u800c\u76f4\u63a5\u8fde\u8fb9\u7684\u8bdd\u8fb9\u6570\u662f $10^7$ \u7ea7\u522b\u7684\uff0c\u521a\u597d\u88ab\u5361\u6389\u3002\n\n\u8003\u8651\u4f18\u5316\u4e00\u4e0b\u8fde\u8fb9\uff1a\u5982\u679c\u5df2\u7ecf\u6709\u8fb9 $(i,j)$\uff0c$(j,k)$ \u5b58\u5728\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u518d\u8fde $(i,j)$ \u7684\u8fb9\u3002\u5f00\u4e00\u4e2a $\\texttt{vis}$ \u6570\u7ec4\u8868\u793a $(i,j)$ \u662f\u5426\u8fd8\u9700\u8981\u8fde\u8fb9\uff08\u521a\u597d\u80fd\u5f00\u4e0b\uff09\u5373\u53ef\uff0c\u8fde\u8fb9\u6570\u91cf\u964d\u5230\u4e86\u7ebf\u6027\u3002\n\n```cpp\n// 2021.01.17\n// Code by LTb\n#pragma GCC optimize(2)\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int x=0,f=1;\n    char ch;\n    while(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n    return f*x;\n}\ninline void chmax(int &x,int y){x=max(x,y);}\ninline void chmin(int &x,int y){x=min(x,y);}\n\nconst int INF=1e9+7;\nconst int MAXN=3005;\nconst int MAXM=20005;\nint s,t;\nint Index=0;\nint w[MAXM*2];\nvector<int> v[MAXN];\nint point[MAXM*2];\nint label[MAXN];\nint cur[MAXN*2];\n\nvoid add_edge(int x,int y,int f){\n\tv[x].push_back((++Index)*2);\n\tv[y].push_back(Index*2+1);\n\tw[Index*2]=f;\n\tw[Index*2+1]=0;\n\tpoint[Index*2]=y;\n\tpoint[Index*2+1]=x;\n}\n\nbool bfs(){\n\tmemset(label,0,sizeof(label));\n\tmemset(cur,0,sizeof(cur));\n\tqueue<int> q;\n\tq.push(s);\n\tlabel[s]=1;\n\twhile (!q.empty()){\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor (int i=0;i<v[now].size();i++){\n\t\t\tint edge=v[now][i];\n\t\t\tint u=point[edge];\n\t\t\tif (!label[u] && w[edge]){\n\t\t\t\tlabel[u]=label[now]+1;\n\t\t\t\tq.push(u);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn label[t]!=0;\n}\n\nint dfs(int p,int limit){\n\tif (limit==0||p==t) return limit;\n\n\tint used=0;\n\tfor (int i=cur[p];i<v[p].size();i++){\n\t\tcur[p]=i;\n\t\tint edge=v[p][i];\n\t\tint u=point[edge];\n\t\tif (w[edge] && label[p]+1==label[u]){\n\t\t\tint flow=dfs(u,min(limit-used,w[edge]));\n\t\t\tused+=flow;\n\t\t\tw[edge]-=flow;\n\t\t\tw[edge^1]+=flow;\n\t\t\tif (used==limit) break;\n\t\t}\n\t}\n\n\treturn used;\n}\n\nint dinic(){\n\tint ans=0;\n\twhile (bfs())\n\t\tans+=dfs(s,INF);\n\treturn ans;\n}\n\nint n;\nint a[MAXN],b[MAXN];\nint sum=0;\nbool vis[MAXN][MAXN];\n\nsigned main()\n\n{\n\tn=read();\n\ts=0;t=n+1;\n\tfor (int i=1;i<=n;i++)\n\t\ta[i]=read();\n\n\tfor (int i=1;i<=n;i++){\n\t\tb[i]=read();\n\t\tif (b[i]>0) {sum+=b[i];add_edge(s,i,b[i]);}\n\t\telse add_edge(i,t,-b[i]);\n\n\t\tfor (int j=i-1;j>=1;j--){\n\t\t\tif (a[i]%a[j]==0 && !vis[i][j]){\n\t\t\t\tadd_edge(i,j,INF);\n\t\t\t\tvis[i][j]=true;\n\t\t\t\tfor (int k=1;k<j;k++)\n\t\t\t\t\tvis[i][k]|=vis[j][k];\n\t\t\t}\n\t\t}\n\t}\n\n\tcout<<sum-dinic()<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1610882216,
        "uid": 48981,
        "name": "LTb_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1473F \u3010Strange Set\u3011"
    }
]