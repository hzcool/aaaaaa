[
    {
        "content": "# CF1547G How Many Paths?\n\n\u6389\u4f30\u503c\u4e86\uff0c\u5199\u7bc7\u9898\u89e3\u3002  \n\u672c\u6587\u4e3a\u53ea\u6709 dfs \u7684\u7b80\u5355\u505a\u6cd5\u3002\n\n## \u9898\u610f\n\u7565\u3002\n## \u9898\u89e3\n\u56db\u79cd\u60c5\u51b5\uff0c\u4e0d\u59a8\u4e00\u4e2a\u4e00\u4e2a\u8003\u8651\u3002\n\n1. \u65e0\u6cd5\u5230\u8fbe\uff080\uff09\u3002\u76f4\u63a5 dfs\uff0c\u5230\u4e0d\u4e86\u5c31\u5230\u4e0d\u4e86\u3002\n2. \u65e0\u9650\u8def\u5f84\uff08-1\uff09\u3002\u6b64\u65f6\u5fc5\u7ecf\u8fc7\u67d0\u73af\uff0c\u90a3\u4e48\u5728 1. \u7684 dfs \u91cc\u9762\u987a\u4fbf\u6c42\u51fa\u6240\u6709\u8d77\u70b9\u53ef\u8fbe\u7684\u73af\uff0c\u518d\u989d\u5916\u4e00\u6b21 dfs \u6c42\u51fa\u54ea\u4e9b\u70b9\u53ef\u4ee5\u88ab\u73af\u4e0a\u70b9\u5230\u8fbe\u5373\u53ef\u3002\n3. \u591a\u6761\u8def\u5f84\uff082\uff09\u3002\u5b58\u5728\u4e24\u6761\u4e0d\u540c\u7684\u8def\u5f84\u5230\u8fbe\u67d0\u70b9\uff0c\u8bf4\u660e\u4e24\u6761\u8def\u5f84\u4e0a\u81f3\u5c11\u6709\u4e00\u4e2a\u5206\u53c9\u3002\u90a3\u4e48\u5728 1. \u7684 dfs \u91cc\u9762\u987a\u4fbf\u6c42\u51fa\u6240\u6709\u53ef\u4ee5\u7531\u4e24\u6761\u4e0d\u540c\u8def\u5f84\u5230\u8fbe\u7684\u70b9\uff0c\u518d\u989d\u5916\u4e00\u6b21 dfs \u6c42\u51fa\u54ea\u4e9b\u70b9\u53ef\u4ee5\u88ab\u8fd9\u4e9b\u70b9\u5230\u8fbe\u5373\u53ef\u3002\n4. \u5355\u6761\u8def\u5f84\uff081\uff09\u3002\u6ee1\u8db3 1. \u4f46\u4e0d\u6ee1\u8db3 2. \u548c 3. \u7684\u90fd\u6ee1\u8db3 4.\u3002\n\n\u6545\u53ea\u9700 3 \u4e2a dfs \u5373\u53ef\u3002  \n\u6838\u5fc3\uff1a\n```cpp\nvoid dfs(int x) {\n\tif(ins[x]) L=min(L,ins[x]),R=q[0];\n\tif(v[x]) return b[x]=1,void();\n\tv[x]=1,q[++q[0]]=x,ins[x]=q[0];\n\tfor(auto y:g[x]) dfs(y);\n\tif(L<=q[0]&&q[0]==R) c[x]=1,--R;\n\tif(L>R) L=R=0x7fffffff;\n\t--q[0],ins[x]=0;\n}\nvoid _dfs(int x) {B[x]=1;for(auto y:g[x]) if(!B[y]) _dfs(y);}\nvoid __dfs(int x) {C[x]=1;for(auto y:g[x]) if(!C[y]) __dfs(y);}\n\nmain:\ndfs(1);\nfor(int i=1;i<=n;i++) if(b[i]) _dfs(i);\nfor(int i=1;i<=n;i++) if(c[i]) __dfs(i);\n```\n\n\u70b9\u4e2a\u8d5e\u5427\u3002",
        "postTime": 1626406636,
        "uid": 106182,
        "name": "KaisuoShutong",
        "ccfLevel": 0,
        "title": "CF1547G How Many Paths? \u9898\u89e3"
    },
    {
        "content": "# CF1547G How Many Paths?\n\n> \u5f15\u8a00\uff1a\u5bf9\u4e8e\u56fe\u8bba\u9898\uff0c\u4e00\u822c\u7684\uff0c\u5148\u8003\u8651\u56fe\u662f\u6811\u6216\u662f DAG \u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u7136\u540e\u8fc7\u6e21\u5230\u4e00\u822c\u60c5\u51b5\u3002\n\n#### \u5bf9\u4e8e DAG\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/oyr0du77.png)\n\n\u4e0a\u56fe\u51e0\u4e4e\u5305\u542b\u4e86\u6240\u6709\u60c5\u51b5\u3002\u89c2\u5bdf\u4e0a\u56fe\uff1a\n\n> \u9644\uff1a\u4e0b\u6587\u4e2d\u7684\u62d3\u8865\u90fd\u662f\u6307\u5728\u7f29\u70b9\u540e\u7684\u56fe\u4e2d\u62d3\u8865\u3002\n\n- \u5bf9\u4e8e\u7ed3\u70b9 \u2461 \uff0c\u56e0\u4e3a\u6709\u81ea\u73af\uff0c\u6240\u4ee5 $ans(2)=-1$ \uff0c\u8fd9\u4e00\u6b65\u5e94\u8be5**\u5728\u62d3\u8865\u7684\u65f6\u5019\u8fdb\u884c\u5224\u65ad**\u3002\u5177\u4f53\u7684\uff0c\u7528 $nb(u)$ \u8bb0\u5f55\u7ed3\u70b9 $u$ \u7684 $belong(u)$ \u7684\u53cd\u5411\u6620\u5c04(\u5373 $nb(belong(u))=u$ \uff0c $belong(u)$ \u4e3a\u7f29\u70b9\u540e\u7ed3\u70b9 $u$ \u5c5e\u4e8e\u7684\u90a3\u4e2a\u5f3a\u8fde\u901a\u5757)\uff0c\u7528 $cic(u)$ \u8bb0\u5f55**\u5728\u539f\u56fe**\u4e0a\u7ed3\u70b9 $u$ \u662f\u5426\u6709\u81ea\u73af\uff0c\u7136\u540e\u5728\u62d3\u8865\u65f6\u901a\u8fc7 ``if(cic[nb[u]])\u200b`` \u5c31\u53ef\u4ee5\u5224\u65ad $u$ \u662f\u5426\u81ea\u73af\u4e86\u3002\n\n> \u6ce8\u610f\uff1a**\u4e0d\u80fd**\u5728\u8f93\u5165\u65f6\u5c31**\u76f4\u63a5\u5c06\u81ea\u73af\u7684\u70b9\u7b54\u6848\u8d4b\u4e3a-1\u200b**\uff0c\u56e0\u4e3a**\u82e5\u8be5\u70b9 $u$ \u4e0d\u53ef\u8fbe\u5219 $ans(u)=0$ **\u3002\n\n- \u5bf9\u4e8e\u7ed3\u70b9 \u2462 \uff0c\u56e0\u4e3a**\u7236\u7ed3\u70b9**\u4e2d\u6709**\u4e00\u4e2a**\u7ed3\u70b9 \u2461 \u7684 $ans(2)=-1$ \uff0c\u6240\u4ee5\u76f8\u5e94\u7684\u8be5\u7ed3\u70b9 \u2462 \u7684 $ans(3)=-1$ \u3002\u56e0\u4e3a\u663e\u7136\u901a\u8fc7 \u2461 \u6709\u65e0\u6570\u6761\u8fb9\u53ef\u8fbe \u2462 \u3002\n\n> \u5373\u7ed3\u70b9 $u$ \u82e5\u6709\u4e00\u4e2a\u7236\u4eb2 $ans(from(u))$ \u7b49\u4e8e-1\uff0c\u90a3\u4e48\u8be5\u7ed3\u70b9 $u$ \u7684 $ans(u)=-1$ \u3002\n\n- \u5bf9\u4e8e\u7ed3\u70b9 \u2466 \uff0c\u56e0\u4e3a\u4e0d\u53ef\u8fbe\uff0c\u6240\u4ee5 $ans(7)=0$ \u3002\u8fd9\u4e00\u6b65\u4e0d\u9700\u8981\u7279\u6b8a\u5904\u7406\uff0c\u76f4\u63a5**\u5728\u7ed9 $ans$ \u6570\u7ec4\u521d\u59cb\u5316\u65f6\u9ed8\u8ba4\u4e3a $0$ **\u5373\u53ef\u3002\n\n- \u5bf9\u4e8e\u7ed3\u70b9 \u2465 \uff0c\u663e\u7136 $ans(6)=2$ \uff0c\u53ea\u9700\u8981\u5728\u62d3\u8865\u7684\u540c\u65f6\u7edf\u8ba1 \u2465 \u7684\u5165\u5ea6\u5373\u53ef\u3002\n\n#### \u5bf9\u4e8e\u4e00\u822c\u56fe\n\n\u5148\u8fdb\u884c\u7f29\u70b9\uff0c\u5bf9\u4e8e\u7f29\u70b9\u540e\u7684 DAG\u200b \uff1a\n\n- \u5bf9\u4e8e\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u70b9\u6570\u91cf\u5927\u4e8e $1$ \u7684\uff0c\u663e\u7136\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u5185\u7684\u6240\u6709\u70b9\u7684 $ans(u)=-1$ \uff0c\u82e5\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u70b9\u6570\u91cf\u7b49\u4e8e 1 \u4e14\u8be5\u70b9\u662f\u81ea\u73af,\u4e5f\u662f $ans(u)=-1$ \uff08\u5224\u65ad\u65b9\u6cd5\u89c1\u4e0a\uff09\uff1b\n\n- \u5bf9\u4e8e\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u70b9\u6570\u7b49\u4e8e $1$ \u7684\u4e14\u4e0d\u662f\u81ea\u73af\u7684\u70b9\uff0c\u90a3\u4e48 $ans(u)=1$  \u6216 $ans(u)=2$ \uff08\u5728\u62d3\u8865\u7684\u65f6\u5019**\u5224\u65ad\u5165\u961f\u6b21\u6570**\u5373\u53ef\uff09\u3002\n\n> \u6ce8\u610f\uff1a\u5bf9\u4e8e\u62d3\u8865\u65f6\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u7684\u5165\u961f\u6b21\u6570\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5165\u961f\u4e86\u592a\u591a\u6b21\uff0c\u90a3\u4e48\u53ef\u80fd\u4f7f\u961f\u5217 MLE \uff1a\u53ef\u4ee5\u9650\u5b9a\u4e00\u4e2a\u4e0a\u9650\uff0c\u5982\u679c\u7ed3\u70b9\u5165\u961f\u6b21\u6570\u8d85\u8fc7\u67d0\u4e00\u6570\u503c\uff0c\u5c31\u4e0d\u518d\u8ba9\u8be5\u7ed3\u70b9\u5165\u961f\uff1b\u5047\u8bbe\u672c\u9898\u7a7a\u95f4\u9650\u5236\u5bf9\u4e8e int \u7c7b\u578b\u662f $3\\times10^7$ \uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u53d6\u4e0a\u7ebf\u4e3a $70$ \uff1a $\\dfrac{3\\times10^7}{4\\times10^5}\\approx70$ \u3002\n\n##### The code:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxN(4e5);\nint knot,belong[maxN+5],nb[maxN+5],size[maxN+5],statu[maxN+5];\n//\u5168\u5c40\u6570\u7ec4:nb[u]\u4e3abelong[u]\u7684\u53cd\u5411\u6620\u5c04,size[u]\u8bb0\u5f55\u5f3a\u8fde\u901a\u5206\u91cf\u5757\u5185\u5927\u5c0f,statu[u]\u8bb0\u5f55\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u72b6\u6001(\u76f8\u5f53\u4e8e\u4e0a\u6587\u7684ans).\nbool cic[maxN+5];//cic[u]\u8bb0\u5f55\u5728\u539f\u56fe\u4e2du\u662f\u5426\u81ea\u73af.\nstruct G2_{//\u7f29\u70b9\u540e\u7684\u56fe.\n\tvector<int>node[maxN+5];\n\tvoid init(){for(int u(0);u<=knot;++u)node[u].clear();}\n\tvoid add(int u,int v){node[u].push_back(v);}\n\tvoid DAG(){\n\t\tqueue<int>q;\n\t\tq.push(belong[1]);statu[belong[1]]=1;//\u9ed8\u8ba4\u7f6e\u4e3a1.\n\t\twhile(!q.empty()){\n\t\t\tint u(q.front());q.pop();\n\t\t\tif(cic[nb[u]]||size[u]!=1)statu[u]=-1;\n\t\t\t//(\u6ce8\u610f\u6b64\u5904\u5224\u65ad\u81ea\u73af\u8981\u53cd\u5411\u6620\u5c04\u5224\u65ad,\u56e0\u4e3a\u8fd9\u91cc\u7ed3\u70b9\u7f16\u53f7\u662f\u7f29\u70b9\u540e\u7684\u7f16\u53f7)\u6709\u81ea\u73af\u7684\u70b9\u6216\u5927\u4e8e2\u4e2a\u7ed3\u70b9\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u6240\u6709\u7ed3\u70b9statu\u4e3a-1(\u6709\u65e0\u6570\u6761\u53ef\u8fbe).\n\t\t\tfor(int i(0);i<node[u].size();++i){\n\t\t\t\tint v(node[u][i]);\n\t\t\t\tif(statu[u]==-1)statu[v]=-1;//\u7236\u4eb2\u4e2d\u67091\u4e2a-1\u5219\u513f\u5b50\u5168\u4e3a-1.\n\t\t\t\telse if(statu[v]!=-1)++statu[v];//\u5426\u5219\u7edf\u8ba1\u8def\u5f84\u6761\u6570.\n\t\t\t\tif(statu[v]<=70)q.push(v);//\u907f\u514d\u7a7a\u95f4\u8fc7\u5927(\u907f\u514d\u53cd\u590d\u8fdb\u5165\u961f\u5217).\n\t\t\t}\n\t\t}\n\t}\n\tvoid solve(){\n\t\tDAG();\n\t\tfor(int u(1);u<=knot;++u){\n\t\t\tif(statu[belong[u]]>=2)printf(\"2 \");\n\t\t\telse printf(\"%d \",statu[belong[u]]);\n\t\t}\n\t\tputs(\"\");\n\t}\n}G2;\nstruct G1_{//\u539f\u56fe.\n\tint n,m;vector<int>node[maxN+5];\n\tint dfn[maxN+5],low[maxN+5],cnt;\n\tint st[maxN+5],top;bool exist[maxN+5];\n\tint scc;\n\tvoid init(){\n\t\tcnt=top=scc=0;\n\t\tfor(int i(0);i<=n;++i)node[i].clear(),dfn[i]=low[i]=st[i]=size[i]=0,exist[i]=cic[i]=false;\n\t}\n\tvoid add(int u,int v){node[u].push_back(v);}\n\tvoid tarjan(int u){//\u7f29\u70b9.\n\t\tdfn[u]=low[u]=++cnt,st[++top]=u,exist[u]=true;\n\t\tfor(int i(0);i<node[u].size();++i){\n\t\t\tint v(node[u][i]);\n\t\t\tif(!dfn[v])tarjan(v),low[u]=min(low[u],low[v]);\n\t\t\telse if(exist[v])low[u]=min(low[u],dfn[v]);\n\t\t}\n\t\tif(dfn[u]==low[u]){\n\t\t\t++scc;\n\t\t\twhile(1){\n\t\t\t\tbelong[st[top]]=scc,nb[scc]=st[top],exist[st[top]]=0,++size[scc];\n\t\t\t\tif(st[top]==u){--top;break;}\n\t\t\t\t--top;\n\t\t\t}\n\t\t}\n\t}\n\tvoid solve(){\n\t\tscanf(\"%d%d\",&n,&m),knot=n;\n\t\tint u,v;for(int i(1);i<=m;++i){\n\t\t\tscanf(\"%d%d\",&u,&v);\n\t\t\tif(u==v)cic[u]=true;else add(u,v);\n\t\t}\n\t\tfor(int u(1);u<=n;++u)if(!dfn[u])tarjan(u);\n\t\tfor(int u(1);u<=n;++u){\n\t\t\tfor(int i(0);i<node[u].size();++i){\n\t\t\t\tint v(node[u][i]);\n\t\t\t\tif(belong[u]!=belong[v])G2.add(belong[u],belong[v]);//\u4e0d\u80fd\u5efa\u53cd\u56fe,\u5e94\u5148\u6392\u9664\u56e0\u4e3a\u7956\u5148\u9020\u6210\u7684\u65e0\u6570\u6761\u53ef\u8fbe\u8def\u5f84\u7684\u5f71\u54cd.\n\t\t\t}\n\t\t}\n\t}\n}G1;\nvoid init(){for(int i(0);i<=knot;++i)statu[i]=belong[i]=size[i]=0,cic[i]=false;}//\u9ed8\u8ba4\u7f6e\u4e3a\u8be5\u7ed3\u70b9\u4e0d\u53ef\u8fbe.\nint main(){\n\t//freopen(\"out.txt\",\"w\",stdout);\n\tint T;scanf(\"%d\",&T);\n\twhile(T--)init(),G1.init(),G2.init(),G1.solve(),G2.solve();\n\treturn 0;\n}\n```",
        "postTime": 1626789678,
        "uid": 261046,
        "name": "Cht_master",
        "ccfLevel": 5,
        "title": "CF1547G How Many Paths?"
    },
    {
        "content": "\u641c\u7d22\u9898\uff0c\u4e00\u5f00\u59cb\u60f3\u590d\u6742\u4e86\uff0c\u4e14\u592a\u9ebb\u70e6\u4e86\u505a\u4e0d\u51fa\u6765\uff0c\u770b\u4e86\u6807\u7b7e\u624d\u60f3\u5230\u8fd9\u5757\u3002\n\n\u9996\u5148\u663e\u7136\u7684\u4e00\u4e9b stuff\uff1a\u8f93\u51fa $-1$ \u7684\u5c31\u662f**\u53ef\u4ee5**\u7ecf\u8fc7\u73af\u5230\u8fbe\u7684\u70b9\uff0c\u8f93\u51fa $0$ \u7684\u5c31\u662f\u4ece\u70b9 $1$ \u641c\u7d22\u5230\u4e0d\u4e86\u7684\u70b9\u3002\n\n\u60f3\u8c61\u6211\u4eec\u4ece\u8282\u70b9 $1$ \u505a\u4e00\u6b21 dfs\uff0c\u5982\u4f55\u5728\u8fc7\u7a0b\u4e2d\u627e\u5230\u4e00\u4e9b\u5173\u4e8e $-1$ \u548c $2$ \u7684 clue\uff1f\n\n\u5047\u5982\u5f62\u8c61\u5730\u4f7f\u7528\u4e00\u4e2a\u6808\u6765\u8bb0\u5f55 dfs \u4e2d\u53ea\u7ecf\u8fc7\u800c\u8fd8\u672a\u56de\u6eaf\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u5728\u904d\u5386\u5230\u5b83\u7684\u65f6\u5019\u5c06\u5b83\u52a0\u5165\u6808\u9876\uff0c\u79bb\u5f00\u7684\u65f6\u5019\u5f39\u51fa\u6808\u9876\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u73b0\u5728\u6240\u5728\u7684\u8282\u70b9 $x$ \u6709\u8fb9\u8fde\u5411 $y$\uff0c\u5e76\u4e14 $y$ \u662f\u5df2\u7ecf**\u5230\u8fc7**\u7684\uff0c\u90a3\u4e48\n1. $y$ \u5728\u6808\u4e2d\uff0c\u5219\u6784\u6210\u4e00\u4e2a\u73af\u3002\n2. $y$ \u4e0d\u5728\u6808\u4e2d\uff0c\u5219\u5230\u8fbe $y$ \u7684\u8def\u5f84\u6709 $\\ge 2$ \u6761\u3002\n\n\u5f53\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$ \u5df2\u7ecf\u786e\u5b9a\u5b83\u5c5e\u4e8e\u4e0a\u8ff0\u7684\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u7ed9\u5b83\u6253\u4e0a\u4e00\u4e2a $ans_u$ \u7684\u6807\u7b7e\u3002\u4e00\u4e2a\u6ce8\u610f\u70b9\u662f\uff1a**$-1$ \u6807\u7b7e\u53ef\u4ee5\u8986\u76d6 $2$\uff0c\u4f46 $2$ \u4e0d\u80fd\u8986\u76d6 $-1$\u3002** \u4ee5\u4e0b\u7b80\u79f0\u201c\u6ce8\u610f\u70b9\u201d\u3002\n\n\u8fd9\u4e00\u8f6e dfs \u8fd9\u6837\u7ed3\u675f\u4e86\u3002\u73b0\u5728\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6807\u7b7e $2/-1$ \u5df2\u7ecf\u786e\u5b9a\u7684\u70b9\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u201cclue\u201dexpand \u4e00\u4e0b\u3002\u6bcf\u4e00\u4e2a\u6253\u6709\u6807\u7b7e $2$ \u7684\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u90fd\u5e94\u8be5\u88ab\u6253\u4e0a $2$\uff0c\u6bcf\u4e00\u4e2a\u6253\u6709\u6807\u7b7e $-1$ \u7684\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u90fd\u5e94\u8be5\u88ab\u6253\u4e0a $-1$\uff0c\u5f53\u7136\u9996\u5148\u4e0d\u8fdd\u80cc\u524d\u63d0\u201c\u6ce8\u610f\u70b9\u201d\u3002\n\n\u6700\u540e\uff0c\u8fd8\u6ca1\u6709\u88ab\u6253\u4e0a\u6807\u7b7e\u7684\u3001\u8282\u70b9 $1$ \u80fd\u591f\u5230\u8fbe\u7684\u70b9\u90fd\u88ab\u6253\u4e0a $1$ \u6807\u7b7e\uff0c\u5269\u4e0b\u7684\u81ea\u7136\u5c31\u662f $0$ \u6807\u7b7e\u4e86\u3002\n\n---\n\n\u4ee3\u7801\u5b9e\u73b0\u6ce8\u610f\u4e8b\u9879\uff1a\n1. \u6ce8\u610f\u591a\u6d4b\u6e05\u7a7a\uff0c\u5e76\u4e14**\u4e0d\u8981\u7528 `memset`**\uff08\u8fd9\u4e5f\u662f\u8bb8\u591a\u8fd9\u79cd\u9898\u7684 hack \u673a\u4f1a\uff09\n2. \u53ef\u4ee5\u5728\u7b2c\u4e00\u6b21 dfs \u65f6\u5c31\u5c06\u6240\u6709\u5230\u8fbe\u7684\u70b9\u6253\u4e0a $1$ \u6807\u8bb0\uff0c\u4f46 $1$ \u6807\u8bb0\u53ef\u4ee5\u88ab $-1,2$ \u4efb\u4f55\u4e00\u4e2a\u8986\u76d6\u3002\u8fd9\u6837\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u3002\n3. \u7b2c\u4e8c\u8f6e dfs \u65f6\u4e00\u5b9a\u8981 $-1$ \u6807\u7b7e expand \u4e00\u6b21\uff0c$2$ \u6807\u7b7e expand \u4e00\u6b21\uff0c\u5206\u5f00\u505a\uff0c\u4e0d\u7136 `vis` \u6570\u7ec4\u4f1a\u9020\u6210\u51b2\u7a81\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=4e5+5;\nvector<int>G[N];\nint n,m,o[N],vis[N],inst[N];\nvoid dfs(int x){\n\tvis[x]=inst[x]=o[x]=1;\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint y=G[x][i];\n\t\tif(!vis[y])dfs(y);\n\t\telse if(inst[y])o[y]=-1;\n\t\telse if(o[y]!=-1)o[y]=2;\n\t}\n\tinst[x]=0;\n}\nvoid dfs2(int x,int op){\n\tvis[x]=1;\n\tif(o[x]!=-1&&o[x]!=op)o[x]=op;\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint y=G[x][i];\n\t\tif(!vis[y])dfs2(y,op);\n\t}\n}\ninline void mset(int*a){for(int i=0;i<=n;i++)a[i]=0;}\nvoid solve(){\n\tcin>>n>>m;\n\tfor(int i=0;i<=n;i++)G[i].clear();\n\tfor(int i=1,u,v;i<=m;i++)cin>>u>>v,G[u].push_back(v);\n\tmset(vis),mset(inst),dfs(1);\n\tmset(vis);\n\tfor(int i=1;i<=n;i++)if(o[i]==2)dfs2(i,2);\n\tmset(vis);\n\tfor(int i=1;i<=n;i++)if(o[i]==-1)dfs2(i,-1);\n\tfor(int i=1;i<=n;i++)cout<<o[i]<<' ';puts(\"\");\n}\nint main(){int T;cin>>T;while(T--)mset(o),solve();}\n```",
        "postTime": 1636639148,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "CF1547G How Many Paths?"
    },
    {
        "content": "\u5148\u7528\u4e00\u6b21 bfs \u4ece $1$ \u5f00\u59cb\u627e\u51fa\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u3002\u65e0\u6cd5\u5230\u8fbe\u7684\u7b54\u6848\u663e\u7136\u4e3a $0$\uff1b\u5426\u5219\u6211\u4eec\u5c06\u5176\u9884\u8bbe\u4e3a $1$\u3002\n\n\u5426\u5219\uff0c\u6211\u4eec\u8003\u8651\u62d3\u6251\u6392\u5e8f\u3002\u6ce8\u610f\u5230\u5982\u679c\u4e00\u4e2a\u73af\u53ef\u4ee5\u5230\u8fbe\uff0c\u90a3\u4e48\u8fd9\u4e2a\u73af\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u548c\u8fd9\u4e2a\u73af\u4e0a\u7684\u70b9\u7b54\u6848\u90fd\u662f $-1$\u3002\u56e0\u6b64\u62d3\u6251\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u53ef\u8fbe\uff0c\u5728\u9664\u53bb\u53ef\u8fbe\u70b9\u4e2d\u6784\u6210\u7684\u6240\u6709\u73af\u540e\u4e0d\u53ef\u8fbe\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u4e3a $-1$\u3002\n\n\u6240\u4ee5\u6240\u6709\u505a\u62d3\u6251\u6392\u5e8f\u7684\u524d\u63d0\u662f\u53bb\u9664\u6389\u4e0d\u53ef\u8fbe\u70b9\u3002\u7136\u540e\u5728\u62d3\u6251\u6392\u5e8f\u7684\u65f6\u5019\u987a\u4fbf dp \u7b97\u4e00\u4e0b\u8def\u5f84\u6570\u91cf\u5c31\u884c\u4e86\u3002\n\n\u8003\u8651\u66f4\u65b0\u7b54\u6848\uff1a\n\n- \u5982\u679c $1$ \u4e00\u5f00\u59cb\u5c31\u6ca1\u6709\u88ab\u62d3\u6251\u6392\u5e8f\uff0c\u90a3\u4e48\u6240\u6709\u4e4b\u524d\u9884\u8bbe\u7b54\u6848\u4e3a $1$ \u7684\u7b54\u6848\u90fd\u4e3a $-1$\uff1b   \n- \u5426\u5219\uff1a\n  - \u5982\u679c\u8fd9\u4e2a\u70b9\u53ef\u8fbe\u4f46\u662f\u6ca1\u6709\u88ab\u62d3\u6251\u6392\u5e8f\uff0c\u7b54\u6848\u4e3a $-1$\uff1b   \n  - \u5982\u679c\u8fd9\u4e2a\u70b9\u53ef\u8fbe\uff0c\u8def\u5f84\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e $2$\uff0c\u7b54\u6848\u4e3a $2$\uff1b   \n  - \u5426\u5219\u5982\u679c\u8fd9\u4e2a\u70b9\u53ef\u8fbe\uff0c\u7b54\u6848\u4e3a $1$\u3002\n  \n\u6ce8\u610f\u5230\uff0c\u8def\u5f84\u6570\u91cf\u53ef\u80fd\u4f1a\u5f88\u5927\uff0c\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u66f4\u65b0\u8def\u5f84\u6570\u91cf\u7684\u65f6\u5019\u5411 $2$ \u53d6 $\\min$\uff0c\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u662f\u7528 `double` \u5b58\u50a8\uff08\u52a0\u7740\u52a0\u7740\u5c31\u662f `inf` \u5566\u54c8\u54c8\u54c8\uff09\u3002\u6784\u9020\u65b9\u6cd5\u662f\uff1a\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u70b9\u548c\u7b2c $i+1$ \u4e2a\u70b9\uff0c\u65b0\u6dfb\u4e24\u4e2a\u70b9\u90fd\u8fde\u5411 $i$ \u548c $i+1$\u3002\u8fd9\u6837\u5230\u8fbe\u7b2c $i$ \u4e2a\u70b9\u7684\u8def\u5f84\u6570\u91cf\u662f $2^{i-1}$ \u6b21\u65b9\u6761\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> G[400005];\nbool vis[400005],tpd[400005];\nint n,m,ans[400005],deg[400005];\ndouble pth[400005];\nvoid bfs()\n{\n\tqueue<int> Q;\n\tQ.push(1);\n\twhile(!Q.empty())\n\t{\n\t\tint now=Q.front();\n\t\tQ.pop();\n\t\tif(vis[now])\tcontinue;\n\t\tvis[now]=true;\n\t\tans[now]=1;\n\t\tfor(auto to:G[now])\tQ.push(to);\n\t}\n}\nvoid topSort()\n{\n\tfor(int i=1;i<=n;++i)\tif(vis[i])\tfor(auto to:G[i])\t++deg[to];\n\tqueue<int> Q;\n\tfor(int i=1;i<=n;++i)\tif(!deg[i] && vis[i])\tQ.push(i),pth[i]=1;\n\twhile(!Q.empty())\n\t{\n\t\tint now=Q.front();\n\t\tQ.pop();\n\t\ttpd[now]=true;\n\t\tfor(auto to:G[now])\n\t\t{\n\t\t\t--deg[to];\n\t\t\tpth[to]+=pth[now];\n\t\t\tif(!deg[to])\tQ.push(to);\n\t\t}\n\t}\n\tif(!tpd[1])\n\t{\n\t\tfor(int i=1;i<=n;++i)\tif(ans[i])\tans[i]=-1;\n\t\treturn ;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(ans[i])\n\t\t{\n\t\t\tif(!tpd[i])\tans[i]=-1;\n\t\t\telse if(pth[i]>=2)\tans[i]=2;\n\t\t}\n\t}\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T-->0)\n\t{\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tfor(int i=1;i<=n;++i)\tpth[i]=ans[i]=0,vis[i]=tpd[i]=false,G[i].clear(),deg[i]=0;\n\t\tfor(int i=1;i<=m;++i)\n\t\t{\n\t\t\tint u,v;\n\t\t\tscanf(\"%d %d\",&u,&v);\n\t\t\tG[u].push_back(v);\n\t\t}\n\t\tbfs();\n\t\ttopSort();\n\t\tfor(int i=1;i<=n;++i)\tprintf(\"%d \",ans[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626050585,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9634\u95f41"
    },
    {
        "content": "$\\color{blue}{\\texttt{[Solution]}}$\n\n\u9996\u5148\uff0c\u5982\u679c\u4e00\u4e2a\u70b9 $u$ \u6709\u81ea\u73af\u4e14 $1$ \u80fd\u5230\u8fbe $u$\uff0c\u90a3\u4e48 $\\text{ans}_{u}$ \u663e\u7136\u5c31\u662f $-1$\uff08\u56e0\u4e3a\u4f60\u53ef\u4ee5\u5728\u81ea\u73af\u4e2d\u8dd1\u4efb\u610f\u6b21\uff09\u3002\n\n\u5176\u6b21\uff0c\u5982\u679c\u4ece $u$ \u5728\u4e00\u4e2a\u70b9\u6570\u5927\u4e8e $1$ \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e0a\uff0c\u90a3\u4e48 $\\text{ans}_{u}=-1$\uff08\u56e0\u4e3a\u4f60\u53ef\u4ee5\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u8dd1\u4efb\u610f\u6b21\uff09\u3002\n\n\u518d\u6b21\uff0c\u5982\u679c\u4ece $1$ \u5230 $x$ \u7684\u8def\u5f84\u901a\u8fc7\u4e86\u4e00\u4e2a\u70b9 $u$ \u6ee1\u8db3 $\\text{ans}_{u}=-1$\uff0c\u90a3\u4e48 $\\text{ans}_{x}=-1$\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\n\n\u6240\u4ee5\uff0c\u672c\u9898\u5c31\u7528 tarjan \u7f29\u70b9\uff0c\u7136\u540e\u62d3\u6251\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0d\u8fc7\uff0c\u8fd9\u53ea\u662f\u53e3\u5934 AC \u4e86\u672c\u9898\uff0c\u79bb\u7a0b\u5e8f AC \u8fd8\u6709\u4e00\u5b9a\u7684\u8ddd\u79bb\u3002\n\n\u672c\u9898\u662f\u7ec6\u8282\u9898\uff0c\u6709\u4ee5\u4e0b\u597d\u591a\u70b9\u8981\u6ce8\u610f\uff1a\n\n- \u521d\u59cb\u5316\u62d3\u6251\u961f\u5217\u65f6\uff0c\u53ea\u80fd\u628a\u70b9 $1$ \u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u52a0\u5165\u961f\u5217\u3002\u5426\u5219\u4f1a\u51fa\u73b0\u672c\u6765\u67d0\u4e2a\u70b9 $u$ \u4e0d\u53ef\u8fbe\uff0c\u4f46\u5374\u88ab\u8bbf\u95ee\u5230\u4e86\u800c\u5bfc\u81f4\u7b54\u6848\u9519\u8bef\u3002\n- \u56e0\u4e3a\u521d\u59cb\u7684\u65f6\u5019\u53ea\u628a\u70b9 $1$ \u52a0\u5165\u4e86\u961f\u5217\uff0c\u6240\u4ee5\u4e0d\u80fd\u5f53\u70b9\u7684\u5165\u5ea6\u7b49\u4e8e $0$ \u65f6\u624d\u628a\u70b9\u52a0\u5165\u961f\u5217\uff0c\u5426\u5219\u5b83\u53ef\u80fd\u4e00\u8f88\u5b50\u90fd\u4e0d\u88ab\u8bbf\u95ee\u3002\u4f60\u5e94\u8be5\u8bbf\u95ee\u5230\u70b9 $u$ \u65f6\u5c31\u628a\u5b83\u52a0\u5165\u961f\u5217\u3002\n- \u56e0\u4e3a\u6211\u4eec\u8bbf\u95ee\u5230\u70b9 $u$ \u65f6\u5c31\u628a $u$ \u52a0\u5165\u4e86\u961f\u5217\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u9650\u5236\u6bcf\u4e00\u4e2a\u70b9\u7684\u5165\u961f\u6b21\u6570\uff0c\u5426\u5219\u4f1a TLE\u3002\u7a0b\u5e8f\u5b9e\u73b0\u4e0a $70$ \u6b21\u624d\u80fd AC\u3002\n- \u521d\u59cb\u5316\u6570\u7ec4\u7684\u65f6\u5019\u4e0d\u80fd\u7528 `memset`\uff0c\u56e0\u4e3a\u5355\u6b21 `memset` \u662f $\\mathcal{O}(\\text{size})$ \u7684\uff0c\u5f53\u8f93\u5165\u6570\u636e\u7ec4\u6570\u5f88\u591a\u65f6\uff0c\u4f1a TLE\u3002\u4f60\u5e94\u8be5\u7528 `for` \u66b4\u529b\u6e05\u7a7a\u3002\n\n\u5176\u5b9e\u8fd9\u91cc\u8fd8\u6ca1\u6709\u8bb2\u5b8c\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\u6709\u6ce8\u91ca\u7684\u5730\u65b9\u90fd\u8981\u6ce8\u610f\u3002\n\n$\\color{blue}{\\texttt{[code]}}$\n\n```cpp\ninline int ckmin(int &a,int b){\n\treturn (a=((a<b)?a:b));\n}\ninline int ckmax(int &a,int b){\n\treturn (a=((a>b)?a:b));\n}\n\nconst int N=4e5+100;\nconst int inf=0x3f3f3f3f;\n\nstruct edge{\n\tint next,to;\n}e[N],E[N];int h[N],te,H[N],Te;\ninline void add(int u,int v){\n\te[++te]=(edge){h[u],v};h[u]=te;\n}\ninline void Add(int u,int v){\n\tE[++Te]=(edge){H[u],v};H[u]=Te;\n}\n\nint Stack[N],stack_top;\nint dfn[N],low[N],dfscnt;\nint belong[N],num[N],scc;\nvoid tarjan(int u){\n\tStack[++stack_top]=u;\n\tdfn[u]=low[u]=++dfscnt;\n\t\n\tfor(int i=h[u];i;i=e[i].next){\n\t\tregister int v=e[i].to;\n\t\tif (!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tckmin(low[u],low[v]);\n\t\t}\n\t\telse if (!belong[v])\n\t\t\tckmin(low[u],dfn[v]);\n\t}\n\t\n\tif (dfn[u]==low[u]){\n\t\tnum[belong[u]=++scc]=1;\n\t\t\n\t\twhile (Stack[stack_top]!=u){\n\t\t\tint v=Stack[stack_top--];\n\t\t\tnum[belong[v]=scc]++;\n\t\t}\n\t\t\n\t\t--stack_top;\n\t}\n}\n\nint n,m,ans[N],ind[N];\nbool UniQue[N];//\u662f\u5426\u6709\u81ea\u73af \n\ninline void init_data(int n){\n\tte=Te=scc=dfscnt=stack_top=0;\n\tfor(int i=1;i<=n;i++) h[i]=H[i]=0;\n\tfor(int i=1;i<=n;i++) ans[i]=num[i]=0;\n\tfor(int i=1;i<=n;i++) dfn[i]=low[i]=0;\n\tfor(int i=1;i<=n;i++) ind[i]=Stack[i]=0;\n\tfor(int i=1;i<=n;i++) belong[i]=0;\n\tfor(int i=1;i<=n;i++) UniQue[i]=true;\n}//\u4e0d\u80fd\u7528 memset \n\ninline void build_new_graph(){\n\tfor(int u=1;u<=n;u++)\n\t\tfor(int i=h[u];i;i=e[i].next){\n\t\t\tregister int v=e[i].to;\n\t\t\tif (belong[u]!=belong[v]){\n\t\t\t\tAdd(belong[u],belong[v]);\n\t\t\t\t++ind[belong[v]];\n\t\t\t}\n\t\t}\n}\n\ninline void topo_sort(){\n\tfor(int i=1;i<=n;i++)\n\t\tif (num[belong[i]]==1&&!UniQue[i])\n\t\t\tnum[belong[i]]=inf;\n\t\n\tif (num[belong[1]]>1)\n\t\tans[belong[1]]=-1;\n\telse ans[belong[1]]=1;\n\t\n\tqueue<int> q;\n\tq.push(belong[1]);\n\t\n\twhile (!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=H[u];i;i=E[i].next){\n\t\t\tregister int v=E[i].to;//\u6ce8\u610f\u5927\u5c0f\u5199 E \n\t\t\tif (num[v]>1||ans[u]==-1) ans[v]=-1;\n\t\t\telse if (ans[v]!=-1) ans[v]++;//\u4e0d\u80fd\u5199\u6210 ans[v]+=ans[u]\uff0c\u540c\u65f6\u6ce8\u610f\u6761\u4ef6 \n\t\t\tif (ans[v]<=70) q.push(v);//\u6ce8\u610f\u9650\u5236\u5165\u961f\u6b21\u6570 \n\t\t}\n\t}\n}\n\nint main(){\n\tfor(int T=1,Q=read();T<=Q;T++){\n\t\tn=read();m=read();\n\t\t\n\t\tinit_data(n);\n\t\t\n\t\tfor(int i=1,u,v;i<=m;i++){\n\t\t\tu=read();v=read();\n\t\t\tif (u!=v) add(u,v);\n\t\t\telse UniQue[u]=false;\n\t\t}\n\t\t\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif (!dfn[i]) tarjan(i);//\u5c0f\u5fc3\u5168\u56fe\u4e0d\u8fde\u901a \n\t\t\n\t\tbuild_new_graph();\n\t\t\n\t\ttopo_sort();\n\t\t\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif (ans[belong[i]]>=2) printf(\"2 \");//\u4e0d\u80fd\u7701\u7565\u6389\u8fd9\u91cc \n\t\t\telse printf(\"%d \",ans[belong[i]]);\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}\n```\n\n\u5176\u5b9e\u4ee3\u7801\u4e0d\u662f\u5f88\u957f\uff0c\u53ea\u662f\u7a7a\u884c\u5f88\u591a\u3002\n\n\u4ece\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u53e3\u5934 AC \u548c\u4ee3\u7801 AC \u662f\u6709\u533a\u522b\u7684\u3002",
        "postTime": 1631352106,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "the Solution of the Problem CF1547G"
    },
    {
        "content": "## \u9898\u76ee\n[CF1547G How Many Paths?](https://www.luogu.com.cn/problem/CF1547G)\n\n\u6a21\u62df\u8d5b\u505a\u5230\u7684\u9898\uff0c\u5f53\u65f6\u7f29\u70b9\u4e0d\u4f1a\u554a\uff01~~\uff08\u539f\u5730\u81ea\u6bd9\uff09~~\n\n## \u601d\u8def\n\u9996\u5148\u6211\u4eec\u9700\u8981\u5c06\u539f\u56fe\u7f29\u70b9\uff0c\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u3002\n\n~~\u5426\u5219\u5c31\u50cf\u672c\u849f\u84bb\u4e00\u6837\u6253\u4e86\u534a\u5929 bfs \u6700\u540e\u5fc3\u6001\u70b8\u4e86\u3002~~\n\n\u7f29\u70b9\u7684\u65b9\u6cd5\u6709\u4e24\u79cd\uff0c\u8fd9\u91cc\u6211\u63a8\u8350\u6ca1\u5b66\u8fc7\u7f29\u70b9\u7684\u540c\u5b66\u5148\u5b66 Kosaraju\uff0c\u6bd4\u8f83\u597d\u5199\uff0c\u6613\u61c2\u3002\n\n\u4e0d\u4f1a\u7f29\u70b9\u7684\u540c\u5b66\uff0c\u5de6\u8f6c [P3387 \u3010\u6a21\u677f\u3011\u7f29\u70b9](https://www.luogu.com.cn/problem/P3387)\u3002\n\n\u7f29\u70b9\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4eff\u7167 P3387 \u7684\u505a\u6cd5\uff0c\u7528\u4e00\u4e2a\u62d3\u6251\u6392\u5e8f\uff0c\u5c06\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u6c42\u51fa\u6765\u3002\n\n\u73b0\u5728\u53ea\u6709\u4e00\u4e2a\u70b9\u662f\u8981\u6ce8\u610f\u7684\uff1a\n\n\u7531\u4e8e\u8fd9\u91cc\u5fc5\u987b\u662f\u4ece 1 \u53f7\u8282\u70b9\u51fa\u53d1\u7684\uff0c\u4f46\u662f\u6700\u5f00\u59cb\u90a3\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u4e0d\u4e00\u5b9a\u662f 1 \u53f7\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u4e24\u79cd\u60c5\u51b5\u3002\n\n1. \u5047\u8bbe 1 \u53f7\u70b9\u4e3a\u6700\u5f00\u59cb\u5165\u5ea6\u4e3a 0 \u7684\u70b9\uff0c\u5219\u628a 1 \u53f7\u70b9\u5148\u5165\u961f\u3002 \n\n2. \u5047\u8bbe $x(x\\neq 1)$ \u53f7\u70b9\u662f\u6700\u5f00\u59cb\u5165\u5ea6\u4e3a 0 \u7684\u90a3\u4e2a\u70b9\uff0c\u5219\u628a $x$ \u53f7\u70b9\u5148\u7ed9\u5220\u4e86\uff0c",
        "postTime": 1628167460,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "CF1547G How Many Paths?"
    }
]