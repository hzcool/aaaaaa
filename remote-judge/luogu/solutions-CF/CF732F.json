[
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF732F)\n\n\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5728\u65e0\u5411\u56fe\u72b6\u6001\u4e0b\u662f\u4e00\u4e2a\u8fb9\u53cc\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u79cd\u65b9\u6cd5\u901a\u8fc7\u7ed9\u8fb9\u8d4b\u65b9\u5411\u6ee1\u8db3\u8fd9\u4e2a\u8fde\u901a\u5757\u5728\u6709\u5411\u56fe\u72b6\u6001\u4e0b\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u8003\u8651\u628a\u8fb9\u53cc\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e9b\u70b9\u6784\u6210\u4e86\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\u3002\n\n\u56e0\u4e3a\u8981\u628a\u8fd9\u4e9b\u6811\u8fb9\uff08\u4e5f\u5c31\u662f\u5272\u8fb9\uff09\u9644\u4e0a\u65b9\u5411\uff0c\u6240\u4ee5\u80af\u5b9a\u6709\u4e00\u4e2a\u8fb9\u53cc\u4e0d\u80fd\u8d70\u5230\u5176\u4ed6\u8fb9\u53cc\u3002\u6211\u4eec\u8ba9\u90a3\u4e2a\u8fb9\u53cc\u4e3a\u6240\u542b\u8282\u70b9\u6570\u6700\u591a\u7684\u4e00\u4e2a\u8fb9\u53cc\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u8fb9\u53cc\u7684\u8282\u70b9\u6570\u5c31\u662f\u9898\u4e2d\u8981\u6c42\u7684 $r_i$\u3002\n\n\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u6784\u9020\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\u3002\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5728\u6700\u5927\u7684\u8fb9\u53cc\u4e2d\u4efb\u53d6\u4e00\u70b9\uff0c\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb dfs\uff0c\u628a\u6811\u8fb9\u7684\u65b9\u5411\u5b9a\u4e3a\u4ece\u4e0a\u5230\u4e0b\uff0c\u975e\u6811\u8fb9\u7684\u65b9\u5411\u5b9a\u4e3a\u4ece\u4e0b\u5230\u4e0a\u3002\n\n\u8fd9\u6837\u539f\u6709\u7684\u8fb9\u53cc\u8d4b\u5b8c\u65b9\u5411\u4e4b\u540e\u90fd\u662f\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4e14\u5176\u4ed6\u8fb9\u53cc\u90fd\u80fd\u591f\u8d70\u5230\u6700\u5927\u7684\u90a3\u4e2a\u8fb9\u53cc\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int MAXN = 4e5 + 50;\nint bcc[MAXN], bcctot, siz[MAXN], dfn[MAXN], low[MAXN], timtot;\nint s[MAXN], top, vis[MAXN];\nstruct edge\n{\n    int nxt, to, from, tag;\n} e[MAXN * 2];\nint head[MAXN], edgetot = 1;\nint ans[MAXN];\nint N, M;\nvoid add(int x, int y)\n{\n    e[++edgetot].to = y;\n    e[edgetot].from = x;\n    e[edgetot].nxt = head[x];\n    head[x] = edgetot;\n}\nvoid tarjan(int x, int fa)\n{\n    dfn[x] = low[x] = ++timtot;\n    s[++top] = x;\n    vis[x] = 1;\n    for (int i = head[x]; i; i = e[i].nxt)\n    {\n        int v = e[i].to;\n        if (v == fa)\n            continue;\n        // cout << x << \" \" << v << \":\" << dfn[v] << \" \" << low[v] << endl;\n        if (!dfn[v])\n        {\n            tarjan(v, x);\n            low[x] = min(low[x], low[v]);\n        }\n        else if (vis[v])\n            low[x] = min(low[x], dfn[v]);\n    }\n    // cout << x << \":\" << fa << \" \" << dfn[x] << \" \" << low[x] << endl;\n    if (low[x] == dfn[x])\n    {\n        bcctot++;\n        while (true)\n        {\n            int t = s[top];\n            top--;\n            siz[bcctot]++;\n            bcc[t] = bcctot;\n            vis[t] = 0;\n            if (t == x)\n                break;\n        }\n    }\n}\nvoid dfs(int x, int fa)\n{\n    vis[x] = 1;\n    for (int i = head[x]; i; i = e[i].nxt)\n    {\n        int v = e[i].to;\n        if (v == fa)\n            continue;\n        // cout << x << \"-->\" << v << endl;\n        if (vis[v])\n        {\n            if (!ans[i / 2])\n                ans[i / 2] = i ^ 1;\n        }\n        else\n        {\n            if (!ans[i / 2])\n                ans[i / 2] = i ^ 1;\n            dfs(v, x);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\", &N, &M);\n    for (int i = 1; i <= M; ++i)\n    {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        add(u, v);\n        add(v, u);\n    }\n    for (int i = 1; i <= N; ++i)\n        if (!dfn[i])\n            tarjan(i, 0);\n    int idx = 0;\n    for (int i = 1; i <= N; ++i)\n    {\n        if (siz[bcc[i]] > siz[bcc[idx]])\n            idx = i;\n        // cout << i << \":\" << bcc[i] << \" \" << siz[bcc[i]] << endl;\n    }\n    memset(vis, 0, sizeof(vis));\n    // cout << idx << endl;\n    dfs(idx, 0);\n    printf(\"%d\\n\", siz[bcc[idx]]);\n    for (int i = 1; i <= M; ++i)\n        printf(\"%d %d\\n\", e[ans[i]].from, e[ans[i]].to);\n    return 0;\n}\n```\n",
        "postTime": 1617195639,
        "uid": 63743,
        "name": "DrBit",
        "ccfLevel": 6,
        "title": "CF732F Tourist Reform \uff08\u8fb9\u53cc+\u6784\u9020\uff09"
    },
    {
        "content": "\u56e0\u4e3a\u77e5\u9053\u4e86\u7b97\u6cd5tag\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u6b63\u89e3\uff1a\n\n\u5148\u7ed9\u51fa\u4e24\u4e2a\u6027\u8d28\uff1a\n 1. \u8fb9\u53cc\u7ed9\u8fb9\u5b9a\u5411\u4e00\u5b9a\u53ef\u4ee5\u8f6c\u4e3a\u5f3a\u8fde\u901a\u56fe,\u6b64\u4e3a\u6700\u4f18\u89e3\n 2. \u6811\u7ed9\u8fb9\u5b9a\u5411\u540eR\u7684\u6700\u5c0f\u503c\u5fc5\u4e3a0\n\n\u6027\u8d282\u8bc1\u660e\u5982\u4e0b\uff1a\n```\n\u8bbe\u6811\u6709n\u4e2a\u8282\u70b9,\n\u82e5R_min!=0,\n\u5219\u6bcf\u70b9\u51fa\u5ea6\u81f3\u5c11\u4e3a1,\u5404\u70b9\u51fa\u5ea6\u4e4b\u548c\u81f3\u5c11\u4e3an,\n\u5219\u81f3\u5c11\u6709n\u6761\u8fb9,\u4f46\u6811\u53ea\u6709n-1\u6761\u8fb9,\u77db\u76fe\n```\n\u90a3\u4e48\u8fd9\u9053\u9898\u53ea\u8981\u5728\u539f\u56fe\u4e0a\u628a\u8fb9\u53cc\u7f29\u6210\u70b9\u5373\u53ef\n\n\u95ee\u9898\u662f\u5982\u4f55\u6784\u9020\uff1f\n\n\u8981\u89e3\u51b3\u6811\u7684\u6784\u9020\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u6811\u4e0a\u5fc5\u6709\u4e00\u70b9\u65e0\u6cd5\u5230\u8fbe\u5176\u5b83\u8282\u70b9\uff0c\u800c\u6211\u4eec\u53c8\u8981\u4ee4R_min\u6700\u5927\uff0c\u90a3\u4e48\u5c31\u4ee4\u8fd9\u4e2a\u65e0\u6cd5\u5230\u8fbe\u5176\u5b83\u8282\u70b9\u7684\u70b9\u4e3a **\u5305\u542b\u70b9\u7684\u4e2a\u6570\u6700\u591a\u7684\u8fb9\u53cc** \u4ee3\u8868\u7684\u70b9 \uff0c\u628a\u8fd9\u4e2a\u70b9\u5f53\u505a **\u6839\u8282\u70b9** dfs\u8fd9\u68f5\u6811\uff0c\u628a\u6811\u4e0a\u7684\u8fb9\uff08\u539f\u56fe\u4e0a\u7684\u6865\uff09\u5b9a\u5411\u4e3a **son\u2014>fa**\uff0c\u53ef\u4ee5\u4fdd\u8bc1R_min=\u6839\u8282\u70b9\u4ee3\u8868\u7684\u8fb9\u53cc\u5305\u542b\u70b9\u7684\u4e2a\u6570\n\n\u7136\u540e\u5c31\u662f\u6211\u60f3\u4e0d\u5230\u7684\u4e86\uff0c\u8fb9\u53cc\u5185\u90e8\u8981\u5982\u4f55\u6784\u9020\u5462\uff1f\n\n\u867d\u7136\u6211\u81ea\u5df1\u60f3\u4e86\u4e00\u79cd\u6784\u9020\u65b9\u6cd5\uff0c\u4f46\u662fT\u5f97\u5341\u5206\u60e8\u70c8\u2026\u2026\n\n\u7136\u540e\uff0c\u7b2c\u4e8c\u5929\u6211\u53bb\u5b66\u4e60\u4e86dfs\u6811\uff0c\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u53d8\u5f97\u5f88\u7b80\u5355\n\n\u8fd9\u662f\u6211\u6700\u540e\u7528\u7684\u6784\u9020\u65b9\u6848\uff1a\n```cpp\nvoid dfs(int u){\n\tvis[u]=1;\n\tfor(int i=head[u];i!=-1;i=edge_nxt[i]){\n\t\tint v=edge_v[i];\n\t\tif(edge_br[i]){\n\t\t\tadd_e(edge_u[i],edge_v[i],edge_id[i]);\n\t\t\tcontinue;\n\t\t}\n\t\tif(!aa[edge_id[i]]) aa[edge_id[i]]=u,bb[edge_id[i]]=v;//\u52a0\u5224\u65ad\u662f\u4e3a\u4e86\u9632\u6b62\u5c06\u5b9a\u597d\u5411\u7684(fa[u],u)\u8fb9\u518d\u53cd\u5411 \n\t\tif(!vis[v]) dfs(v);\n\t}\n}\n```\n\u4e3a\u4ec0\u4e48\u53ef\u884c\uff1f\n\n\u7528dfs\u6811\u7406\u89e3\uff0c\u8fd9\u4e2a\u6784\u9020\u65b9\u6848\u5c31\u662f**\u5c06\u6240\u6709\u6811\u8fb9\u5b9a\u5411\u5411\u4e0b\u5e76\u5c06\u6240\u6709\u56de\u8fb9\u5b9a\u5411\u5411\u4e0a**\uff0c\u7531dfs\u6811\u7684\u6027\u8d28\u77e5\u8fd9\u4e00\u5b9a\u53ef\u884c\n\n\u6700\u540e\u653e\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<stack>\nusing namespace std;\nconst int N=4e5+5;\nint edge_u[N<<1],edge_v[N<<1],edge_id[N<<1],edge_nxt[N<<1],edge_br[N<<1];\nint n,m,head[N],cnt,a[N],b[N],aa[N],bb[N];\nint dfn[N],low[N],ind,bcc[N],Bcc,bcc_sz[N];\nstack<int> s;\nvoid add_edge(int u,int v,int id){\n\tedge_u[cnt]=u;\n\tedge_v[cnt]=v;\n\tedge_id[cnt]=id;\n\tedge_nxt[cnt]=head[u];\n\thead[u]=cnt++;\n}\nvoid tarjan(int u,int fa){\n\tdfn[u]=low[u]=++ind;\n\ts.push(u);\n\tfor(int i=head[u];i!=-1;i=edge_nxt[i]){\n\t\tint v=edge_v[i];\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v,u);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t\tif(low[v]>dfn[u]){\n\t\t\t\tedge_br[i]=1;\n\t\t\t\tedge_br[i^1]=1;\n\t\t\t\tBcc++;\n\t\t\t\tint k;\n\t\t\t\tdo{\n\t\t\t\t\tk=s.top();\n\t\t\t\t\ts.pop();\n\t\t\t\t\tbcc[k]=Bcc;\n\t\t\t\t\tbcc_sz[Bcc]++;\n\t\t\t\t}while(k!=v);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(dfn[v]<dfn[u]&&v!=fa)\n\t\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t}\n\t//\u52ff\u5fd8\u8003\u8651u\u4e3a\u6839\u7684\u60c5\u51b5: \n\tif(!fa){\n\t\tBcc++;\n\t\twhile(!s.empty()){\n\t\t\tbcc[s.top()]=Bcc;\n\t\t\tbcc_sz[Bcc]++;\n\t\t\ts.pop();\n\t\t}\n\t}\n}\nint e_u[N<<1],e_v[N<<1],e_id[N<<1],e_nxt[N<<1];\nint hd[N],ct;\nvoid add_e(int u,int v,int id){\n\te_u[ct]=u;\n\te_v[ct]=v;\n\te_id[ct]=id;\n\te_nxt[ct]=hd[bcc[u]];//highlight\n\thd[bcc[u]]=ct++;//highlight\n}\nint num,maxn=0;\nbool vis_bcc[N],vis[N];\nvoid dfs(int u){\n\tvis[u]=1;\n\tfor(int i=head[u];i!=-1;i=edge_nxt[i]){\n\t\tint v=edge_v[i];\n\t\tif(edge_br[i]){\n\t\t\tadd_e(edge_u[i],edge_v[i],edge_id[i]);\n\t\t\tcontinue;\n\t\t}\n\t\tif(!aa[edge_id[i]]) aa[edge_id[i]]=u,bb[edge_id[i]]=v;//\u52a0\u5224\u65ad\u662f\u4e3a\u4e86\u9632\u6b62\u5c06\u5b9a\u597d\u5411\u7684(fa[u],u)\u8fb9\u518d\u53cd\u5411 \n\t\tif(!vis[v]) dfs(v);\n\t}\n}\nvoid dfs2(int u,int fa){\n\tfor(int i=hd[u];i!=-1;i=e_nxt[i]){\n\t\tint v=bcc[e_v[i]];\n\t\tif(v==fa) continue;\n\t\taa[e_id[i]]=e_v[i],bb[e_id[i]]=e_u[i];\n\t\tdfs2(v,u);\n\t}\n}\nint main(){\n\tmemset(head,-1,sizeof(head));\n\tmemset(hd,-1,sizeof(hd));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\tadd_edge(a[i],b[i],i);\n\t\tadd_edge(b[i],a[i],i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i]) tarjan(i,0);\n\tfor(int i=1;i<=n;i++){\n\t\tif(!vis_bcc[bcc[i]]){\n\t\t\tdfs(i);\n\t\t\tvis_bcc[bcc[i]]=1;\n\t\t\tif(bcc_sz[bcc[i]]>maxn){\n\t\t\t\tmaxn=bcc_sz[bcc[i]];\n\t\t\t\tnum=bcc[i];\n\t\t\t}\n\t\t}\n\t}\n\tdfs2(num,0);\n\tprintf(\"%d\\n\",maxn);\n\tfor(int i=1;i<=m;i++){\n\t\tif(aa[i]&&bb[i]) printf(\"%d %d\\n\",aa[i],bb[i]);\n\t\telse printf(\"%d %d\\n\",a[i],b[i]);\n\t}\n\treturn 0;\n}  \n```\n",
        "postTime": 1611724919,
        "uid": 111081,
        "name": "Mistletoes",
        "ccfLevel": 0,
        "title": "CF732F Tourist Reform\uff08dfs\u6811\u3001\u8fb9\u53cc\u8fde\u901a\u56fe\u3001tarjan\uff09"
    },
    {
        "content": "![](https://cdn.luogu.com.cn/upload/pic/22702.png)\n\n\u5b66\u4e60\u5230\u4e86\u4e00\u53d1Tarjan\u7f29\u8fb9\u53cc\uff1b\n\n\u6570\u7ec4\u5f00\u5927\u70b9\u2026\u2026\n\n```\n\t\tif (vis[v[i]]) {\n            au[i >> 1] = x;\n            av[i >> 1] = v[i];\n            continue;\n        }\n```\n\n\u8fd9\u53e5\u8bdd\u5f88\u91cd\u8981\uff0c\u56e0\u4e3aDFS\u5b9a\u5411\u65f6\uff0c\u9047\u5230\u4e86\u73af\uff0c\u4e00\u5b9a\u8981\u8ba9\u73af\u63a5\u4e0a\uff1b\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<deque>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof (x))\n#define mem1(x) memset((x),0x3f,sizeof (x))\n#define gc getchar\n#define pb push_back\ntemplate<class T>void in(T &x)\n{\n    x = 0; bool f = 0; char c = gc();\n    while (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n    while ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n    if (f) x = -x;\n}\n#undef gc\n#define N 1000100\n#define M N<<1\nint n, m;\nint v[M], u[M], nx[M];\nint cnt = 1, head[N];\nil void add(int uu, int vv) {\n    u[++cnt] = uu, v[cnt] = vv, nx[cnt] = head[uu];\n    head[uu] = cnt;\n}\nint cv[M], cu[M], cnx[M];\nint cn = 1, ch[N];\nil void cadd(int uu, int vv) {\n    cu[++cn] = uu, cv[cn] = vv, cnx[cn] = ch[uu];\n    ch[uu] = cn;\n}\nint low[N], dfn[N], dfc;\nint mx, rt;\nint st[N], top;\nbool ins[N];\nint au[M], av[M];\nvoid tarjan(int x, int fe) {\n    low[x] = dfn[x] = ++dfc;\n    st[++top] = x;\n    ins[x] = 1;\n    //printf(\"V %d %d %d\\n\", x, dfn[x], dfc);\n    for (ri i = head[x]; i; i = nx[i]) {\n        if (i == fe) continue;\n        if (!dfn[v[i]]) {\n            tarjan(v[i], i ^ 1);\n            low[x] = min(low[x], low[v[i]]);\n        }\n        else if (ins[v[i]]) {\n            low[x] = min(low[x], dfn[v[i]]);\n        }\n    }\n    if (low[x] == dfn[x]) {\n        int sz = 0;\n        //printf(\"LT \");\n        while (st[top + 1] != x) {\n            sz++;\n            ins[st[top]] = 0;\n            //printf(\"%d \", st[top]);\n            top--;\n        }\n        //puts(\"\");\n        if (sz > mx) mx = sz, rt = x;\n    }\n}\n/*int uni[N];\nint nc;\nil int getn(int x) {\n    return lower_bound(uni + 1, uni + 1 + nc, x) - uni;\n}*/\nbool vis[N];\n//vector<int> bs[N];\n/*void dfs(int x, int k) {\n    vis[x] = 1;\n    bs[k].pb(x);\n    for (ri i = head[x]; i; i = nx[i]) {\n        if (vis[v[i]] || low[v[i]] != k) continue;\n        else {\n            au[i >> 1] = x;\n            av[i >> 1] = v[i];\n            dfs(v[i], k);\n        }\n    }\n}*/\nvoid dfs2(int x) {\n    vis[x] = 1;\n    for (ri i = head[x]; i; i = nx[i]) {\n        if (vis[v[i]]) {\n            au[i >> 1] = x;\n            av[i >> 1] = v[i];\n            continue;\n        }\n        if (low[v[i]] != low[x]) {\n            au[i >> 1] = v[i];\n            av[i >> 1] = x;\n        }\n        else {\n            au[i >> 1] = x;\n            av[i >> 1] = v[i];\n        }\n        dfs2(v[i]);\n    }\n}\nsigned main() {\n    in(n), in(m);\n    for (ri i = 1, a, b; i <= m; ++i) {\n        in(a), in(b);\n        //au[i] = a, av[i] = b;\n        add(a, b);\n        //kk[cnt] = i;\n        add(b, a);\n        //kk[cnt] = i;\n    }\n    tarjan(1, 0);\n    /*memcpy(uni, low, sizeof uni);\n    sort(uni + 1, uni + 1 + n);\n    nc = unique(uni + 1, uni + 1 + n) - uni - 1;*/\n    /*for (ri i = 1; i <= n; ++i) {\n        printf(\"T %d %d %d\\n\", i, dfn[i], low[i]);\n    }\n    for (ri i = 1; i <= n; ++i) {\n        if (!vis[i]) {\n            dfs(i, low[i]);\n        }\n    }\n    int mxn = 1;\n    for (ri i = 2; i <= n; ++i) {\n        if (bs[i].size() > bs[mxn].size()) mxn = i;\n    }\n    q.push(mxn);\n    mem0(vis);\n    //dfs2(mxn, low[mxn]);\n    while (!q.empty()) {\n        int x = q.front(); q.pop();\n        dfs2(x);\n    }*/\n    printf(\"%d\\n\", mx);\n    dfs2(rt);//cout<<\"A\";\n    for (ri i = 1; i <= m; ++i) {\n        printf(\"%d %d\\n\", au[i], av[i]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1531106996,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a-CF732F"
    }
]