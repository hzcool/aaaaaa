[
    {
        "content": "$\\text{upd on }2020.3.3$ \u4fee\u6539\u4e86\u4e00\u4e2a\u5c0f\u7b14\u8bef\u3002\n\n---\n\n[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1491H) & [CF \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/1491/H)\n\n> \u9898\u610f\uff1a\u7ed9\u5b9a $n-1$ \u4e2a\u6570 $a_2, a_3,\\ldots,a_n(a_i \\in [1, i))$\uff0c\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\u662f\u7531\u6240\u6709 $a_i$ \u4e0e $i$ \u7684\u8fde\u8fb9\u3002$q$ \u6b21\u8be2\u95ee\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n> * `1 l r x`\uff1a$\\forall i \\in [l, r], a_i\\leftarrow (1, a_i - x)$\u3002\n> * `2 u v`\uff1a\u67e5\u8be2\u5f53\u524d\u6811\u4e0a $u$ \u548c $v$ \u7684 LCA\u3002\n\n> $n, m \\le 10^5$\u3002\n\n~~\u662f\u771f\u7684\u60f3\u4e0d\u5230\u6839\u53f7\u6570\u636e\u7ed3\u6784\uff0csto \u51fa\u9898\u4eba orz~~\n\n---\n\n$Solution:$\n\n\u94a6\u5b9a\u6811\u6839\u4e3a $1$\uff0c\u90a3\u4e48\u6240\u6709\u7684\u8fde\u8fb9\u90fd\u662f\u5c0f\u7f16\u53f7\u8282\u70b9\u5f80\u5927\u7f16\u53f7\u8282\u70b9\u8fde\u8fb9\u3002\n\n\u8003\u8651\u5206\u5757\u3002\u5c06 $a$ \u5e8f\u5217\u5206\u6210 $\\sqrt n$ \u5757\uff0c\u6bcf\u5757\u6709 $\\sqrt n$ \u4e2a\u6570\uff0c\u8bb0\u6bcf\u4e00\u5757\u7684\u5de6\u8fb9\u754c\u4e3a $L_i$\uff0c\u53f3\u8fb9\u754c\u4e3a $R_i$\u3002$pos_i$ \u8868\u793a\u8282\u70b9 $i$ \u6240\u5c5e\u7684\u5757\u3002\n\n\u63a5\u4e0b\u6765\u662f\u6bd4\u8f83\u795e\u4ed9\u7684\u4e00\u6b65\u3002\u5b9a\u4e49 $b_i$ \u4e3a**\u8282\u70b9 $i$ \u7684\u7956\u5148\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u4e0e $i$ \u4e0d\u5728\u4e00\u4e2a\u5757\u7684\u8282\u70b9\u7f16\u53f7**\u3002\u8003\u8651\u5982\u4f55\u5728 $a_i$ \u66f4\u65b0\u65f6\u91cd\u6784\u4e00\u4e2a\u5757 $x$ \u7684 $b_i$ \u503c\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u5757 $x$\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5de6\u5f80\u53f3\u679a\u4e3e\u8282\u70b9 $i$\uff0c\u5224\u65ad\u5176 $a_i$ \u662f\u5426\u5c0f\u4e8e $L_x$\uff0c\u5982\u679c\u662f\u7684\u8bdd\u5219 $b_i=a_i$\uff0c\u5426\u5219\u8282\u70b9 $i$ \u7684 $b$ \u503c\u5c31\u53ef\u4ee5\u8f6c\u79fb\u5230\u8282\u70b9 $a_i$ \u7684 $b$ \u503c\uff0c\u5373 $b_i = b_{a_i}$\u3002\n\n\u9996\u5148\u770b\u4fee\u6539\u64cd\u4f5c\uff0c\u76f4\u63a5\u8003\u8651\u6574\u5757\u548c\u96f6\u6563\u70b9\u600e\u4e48\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u96f6\u6563\u70b9\uff0c\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u5176 $a_i$ \u503c\uff0c\u7136\u540e\u91cd\u6784\u6574\u4e2a\u5757\u7684 $b$ \u503c\u5373\u53ef\u3002\n\n\u800c\u5bf9\u4e8e\u6574\u5757\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6253\u61d2\u6807\u8bb0 $f_i$ \u8868\u793a\u5176 $a_i$ \u8fd8\u6ca1\u51cf\u591a\u5c11\u3002\u53ef\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u6574\u5757\u7684 $b$ \u5df2\u7ecf\u53d8\u4e86\uff0c\u5bf9\u540e\u9762\u7684\u67e5\u8be2\u64cd\u4f5c\u5c31\u6709\u5f71\u54cd\uff0c\u800c\u6bcf\u6b21\u66b4\u529b\u4fee\u6539 $b$ \u9700\u8981\u904d\u5386\u6574\u4e2a\u5757\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4fbf\u65e0\u6cd5\u4fdd\u8bc1\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757 $i$\uff0c\u5b83\u7ecf\u8fc7 $\\sqrt n $ \u6b21\u4fee\u6539\u64cd\u4f5c\u540e\uff0c$a_i$ \u90fd\u81f3\u5c11\u4f1a\u53d8\u4e3a $a_i - \\sqrt n$\uff0c\u6b64\u65f6\u8282\u70b9 $i$ \u7684\u6240\u6709\u7956\u5148**\u90fd\u4e00\u5b9a\u5728\u8fd9\u4e00\u5757\u4e4b\u524d**\uff0c\u4e8e\u662f\u6b64\u65f6\u7684 $b_i$ \u503c\u90fd\u4e0d\u53d8\uff0c\u4e14\u4e3a $a_i$\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e00\u5757\u88ab\u4fee\u6539\u7684\u6b21\u6570 $cnt_i$\u3002\u5f53 $cnt_i > \\sqrt n$ \u65f6\u5c31\u76f4\u63a5\u7565\u8fc7\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u4e86\u3002\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\uff0c\u6bcf\u4e2a\u5757\u6700\u591a\u4fee\u6539 $\\sqrt n$ \u6b21\uff0c\u6bcf\u6b21\u9700\u8981 $\\sqrt n$ \u6b21\u8ba1\u7b97\uff0c\u4e00\u5171\u6709 $\\sqrt n$ \u4e2a\u5757\uff0c\u4e8e\u662f\u4fee\u6539\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e3a $O(n\\sqrt n)$\u3002\n\n\u5176\u6b21\u8003\u8651\u8be2\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a $b_i$ \u5f88\u50cf\u6211\u4eec\u5199\u6811\u94fe\u5256\u5206\u65f6\u7684 $top_i$\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u6811\u94fe\u5256\u5206\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u8282\u70b9 $u, v$\uff0c\u6211\u4eec\u8fd9\u6837\u5bfb\u627e\u5b83\u4eec\u7684 LCA\uff1a\n\n* \u5f53 $pos_u \\neq pos_v$ \u65f6\uff0c\u8ba9 $pos$ \u503c\u5927\u7684\u90a3\u4e2a\u8282\u70b9\u8df3\u5230\u5b83\u7684 $b$ \u503c\u3002\n\n* \u5f53 $pos_u = pos_v$ \u4e14 $b_u \\neq b_v$ \u65f6\uff0c\u4e24\u4e2a\u8282\u70b9\u5747\u8df3\u5230\u5b83\u4eec\u7684 $b$ \u503c\u3002\n\n* \u5f53 $pos_u = pos_v$ \u4e14 $b_u = b_v$ \u65f6\uff0c\u76f4\u63a5\u4e00\u76f4\u8ba9\u7f16\u53f7\u5927\u7684\u90a3\u4e2a\u70b9\u8df3\u5230\u81ea\u5df1\u7684\u7236\u4eb2\uff0c\u76f4\u81f3\u4e24\u70b9\u76f8\u540c\u5373\u53ef\u3002\n\n\u5206\u6790\u4e00\u6ce2\u590d\u6742\u5ea6\u3002\u7531\u4e8e\u4e00\u6761\u94fe\u4e0a\u6700\u591a\u6709 $\\dfrac{n}{\\sqrt n}=\\sqrt n$ \u6b21\u8df3 $b$ \u64cd\u4f5c\uff0c\u800c\u4e14\u8df3\u5b8c $b$ \u540e\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u4f1a\u8df3 $\\sqrt n$ \u6b21\uff0c\u6240\u4ee5\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f $O(\\sqrt n)$ \u7684\u3002\n\n\u56e0\u6b64\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q\\sqrt n+n\\sqrt n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u5b9e\u73b0\u65f6\u5982\u679c\u5361\u5e38\u4e86\u7684\u8bdd\u53ef\u4ee5\u9002\u5f53\u8c03\u5757\u957f\uff0c\u4e0d\u8fc7\u6211\u505a\u8fd9\u9898\u597d\u50cf\u4e0d\u5361\u5e38\u7684\u6837\u5b50\uff1f\n\n---\n\n### $Code:$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define ld long double\n#define fi first\n#define se second\n#define dingyi int mid = l + r >> 1, ls = p << 1, rs = p << 1 | 1\n#define y0 y_csyakioi_0\n#define y1 y_csyakioi_1\n#define rep(i, x, y) for(int i = x; i <= y; ++i)\n#define per(i, x, y) for(int i = y; i >= x; --i)\n#define repg(i, u) for(int i = head[u]; i; i = e[i].nxt)\ninline int read(){\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){ if(ch == '-') f = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9'){ x = x * 10 + (ch ^ 48); ch = getchar(); }\n\treturn x * f;\n}\nconst int N = 100010, M = 350;\nint n, m, k, p, opt, x, y, z, a[N], b[N], cnt[M], f[M], L[M], R[M], pos[N];\ninline void update(int x){\n\trep(i, L[x], R[x]) a[i] = max(1, a[i] - f[x]);\n\tf[x] = 0; rep(i, L[x], R[x]){\n\t\tif(a[i] < L[x]) b[i] = a[i];\n\t\telse b[i] = b[a[i]];\n\t}\n}\ninline void change(int x, int y, int z){\n\tint l = pos[x], r = pos[y];\n\tif(l == r){\n\t\trep(i, x, y) a[i] = max(a[i] - z, 1);\n\t\tupdate(l); return;\n\t}\n\trep(i, x, R[l]) a[i] = max(a[i] - z, 1); update(l);\n\trep(i, L[r], y) a[i] = max(a[i] - z, 1); update(r);\n\trep(i, l + 1, r - 1){\n\t\t++cnt[i]; f[i] = min(N, f[i] + z);\n\t\tif(cnt[i] <= k) update(i);\n\t}\n}\ninline int realb(int x){ return max(1, b[x] - f[pos[x]]); }\ninline int lca(int x, int y){\n\twhile(1){\n\t\tif(pos[x] < pos[y]) swap(x, y);\n\t\tif(pos[x] != pos[y]) x = realb(x);\n\t\telse{\n\t\t\tif(realb(x) != realb(y)) x = realb(x), y = realb(y);\n\t\t\telse break;\n\t\t}\n\t}\n\twhile(x != y){\n\t\tif(x < y) swap(x, y);\n\t\tx = max(1, a[x] - f[pos[x]]);\n\t}\n\treturn x;\n}\ninline void work(){\n\tn = read(); m = read(); k = sqrt(n); pos[1] = 1; p = (n - 1) / k + 1;\n\trep(i, 2, n) a[i] = read(), pos[i] = (i - 1) / k + 1; \n\trep(i, 1, p) L[i] = (i - 1) * k + 1, R[i] = min(n, i * k);\n\trep(i, 1, p) update(i); while(m--){\n\t\topt = read(); x = read(); y = read();\n\t\tif(opt == 1) z = read(), change(x, y, z);\n\t\telse printf(\"%d\\n\", lca(x, y));\n\t}\n}\nint main(){ int qwq = 1; while(qwq--) work(); return 0; }\n```\n",
        "postTime": 1614760203,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1491H\u3010Yuezheng Ling and Dynamic Tree\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u76ee](/problem/P7446) & [CF\u9898\u76ee](/problem/CF1491H), 16th\n\n## \u9898\u610f\n\n> \u7ed9\u5b9a\u4e00\u68f5\u4ee5 $1$ \u4e3a\u6839\u7684\u6811 $fa_2,\\cdots,fa_n$ \u4e0e $m$ \u4e2a\u64cd\u4f5c\uff0c\u8fd9\u91cc\u6ee1\u8db3 $fa_i\\lt i$\n>\n> \u64cd\u4f5c 1: \u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u5c06\u8fd9\u4e2a\u533a\u95f4\u7684 $fa_i\\gets \\max(fa_i-x,1)$   \n> \u64cd\u4f5c 2: \u6c42\u4e24\u70b9\u6700\u8fd1\u516c\u5171\u7956\u5148\n\n## \u9898\u89e3\n\n\u5efa\u8bae\u5148\u5199 [P3203 [HNOI2010]\u5f39\u98de\u7ef5\u7f8a](/problem/P3203) \u7684\u5206\u5757\u505a\u6cd5\u3002\u8fd9\u91cc\u53ef\u53c2\u8003\u7684\u4e00\u70b9\u662f\uff1a\u7ef4\u62a4 $top_x$ \u4ee3\u8868 $x$ \u4e00\u76f4\u8df3\uff0c\u8df3\u51fa\u5f53\u524d\u5757\u540e\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u70b9\u3002\n\n\u867d\u7136\u8fd9\u4e2a\u9898\u770b\u8d77\u6765\u662f\u6811\u4e0a\u7684\u91cd\u6784\u4e0e LCA\uff0c\u4f46\u662f\u548c \u6811\u5256/LCT \u7b49\u6811\u4e0a\u7b97\u6cd5\u6ca1\u6709\u5173\u7cfb\u3002\n\n---\n\n\u8003\u8651\u5206\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u7ef4\u62a4 $pa_i$ \u4ee3\u8868\u8fd9\u4e2a\u70b9\u79bb\u5f00\u5757\u7684\u7b2c\u4e00\u4e2a\u7956\u5148\uff0c$fa_i$ \u4ee3\u8868\u8fd9\u4e2a\u70b9\u7684\u7236\u4eb2\u3002\n\n\u90a3\u4e48\u8f6c\u5316\u6c42 LCA \u7684\u8fc7\u7a0b\uff1a\u5b9a\u4e49 **\u5c0f\u8df3** \u4e3a $i\\gets fa_i$ \u5728\u5757\u5185\u8df3\u7236\u4eb2\uff0c**\u5927\u8df3** \u4e3a $i\\gets pa_i$ \u5728\u5757\u95f4\u8df3\u7956\u5148\u3002\u4e8e\u662f\u6c42\u4e00\u6b21 LCA \u5c31\u7b49\u4ef7\u4e8e\uff1a\u5bf9\u4e8e\u4e24\u70b9\u4e0d\u505c\u505a\u4ee5\u4e0b\u64cd\u4f5c\n\n+ \u5982\u679c\u4e24\u4e2a\u70b9\u5927\u8df3\u540e\u975e\u540c\u4e00\u5757\uff0c\u7956\u5148\u7f16\u53f7\u5927\u7684\u5927\u8df3\n+ \u5982\u679c\u4e24\u4e2a\u70b9\u5927\u8df3\u540e\u540c\u5757\u800c\u975e\u540c\u4e00\u70b9\uff0c\u7956\u5148\u7f16\u53f7\u5927\u7684\u5927\u8df3\u3002\n+ \u5426\u5219\u8ba9\u7f16\u53f7\u5927\u7684\u5c0f\u8df3\n+ \u4e24\u70b9\u76f8\u540c\u65f6\u8fd9\u4e2a\u70b9\u5373\u4e3a LCA\n\n\u8fd9\u6837\u6c42 LCA\uff0c\u6bd4\u8f83\u5bb9\u6613\u548c\u4fee\u6539\u517c\u5bb9\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u8fd8\u4f1a\u53d1\u73b0\u548c\u6811\u5256\u7c7b\u4f3c\uff08$pa_i$ \u5176\u5b9e\u5c31\u662f\u6811\u5256\u7684\u91cd\u94fe\u94fe\u5934\u7236\u4eb2\uff09\uff0c\u4f46\u662f\u6811\u5256\u56e0\u4e3a\u91cd\u94fe\u6027\u8d28\u6240\u4ee5\u662f $\\log n$ \u7684\uff0c\u800c\u8fd9\u91cc\u662f\u5206\u5757\u8df3\u6cd5\uff0c\u5e73\u8861\u5927\u8df3\u5c0f\u8df3\uff0c\u590d\u6742\u5ea6\u662f $\\sqrt n$\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u5c0f\u5757\u91cd\u6784\uff0c\u4f46\u662f\u6ce8\u610f\uff1a**\u4fee\u6539 $l\\sim r$ \u5e94\u8be5\u91cd\u6784 $l\\sim$ \u5757 $r$ \u53f3\u7aef\u70b9**\u3002\u5927\u5757\uff1f\u53d1\u73b0\u597d\u50cf\u53ea\u80fd\u91cd\u6784\uff1f\uff1f\n\n\u597d\uff0c\u5176\u5b9e\u4e0d\u662f\u8fd9\u6837\u7684\u3002\u6ce8\u610f\u5230\u56e0\u4e3a\u5b83\u7ed9\u51fa\u7684\u6811\u7684\u65b9\u6cd5\u4e0e\u4fee\u6539\u6811\u7684\u65b9\u6cd5\u90fd\u6bd4\u8f83\u7279\u522b\uff0c\u6240\u4ee5\u5f97\u77e5 **$\\sqrt n$ \u6b21\u6574\u5757\u4fee\u6539\u540e\u4e00\u4e2a\u5757\u5185\u6bcf\u4e2a\u5143\u7d20\u8df3 $fa$ \u90fd\u4f1a\u51fa\u5757\uff0c\u6b64\u65f6 $pa_i=fa_i$\uff0c\u6253\u4e2a\u6807\u8bb0\u5373\u5b8c\u4e8b**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7ef4\u62a4 $chg_i$ \u4ee3\u8868\u5757 $i$ \u88ab\u4fee\u6539\u7684\u6b21\u6570\uff0c$tag_i$ \u4ee3\u8868\u76ee\u524d\u88ab\u4fee\u6539\u7684\u6807\u8bb0\u7684\u603b\u548c\u3002\u5982\u679c $chg_i\\lt\\sqrt n$ \u5c31\u66b4\u529b\u91cd\u6784\uff0c\u5426\u5219\u8fd9\u65f6\u6bcf\u4e2a\u5143\u7d20\u4e00\u5b9a\u8df3\u7236\u4eb2\u540e\u4f1a\u51fa\u5757\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<stdio.h>\n#include<math.h>\n#include<vector>\n\nnamespace IO{ } // by OneZzz6174\n\nusing IO::read;\nusing IO::readc;\nusing IO::print;\nusing IO::flush;\n\n#define rint register int\n\ntypedef long long ll;\n\ninline int max2(rint a,rint b){ return a>b?a:b; }\ninline int min2(rint a,rint b){ return a<b?a:b; }\ninline void swap2(rint &a,rint &b){ a^=b^=a^=b; }\n\n#define rep(i,a,b) for(rint i = (a);i <= (b);++i)\n\nconst int maxn = 4e5 + 5;\nconst int sqr = sqrt(maxn) + 5;\n\nint n,m,b,c;\nint st[sqr],ed[sqr],bl[maxn];\nint pa[maxn],fa[maxn];\nll tag[sqr]; // \u8fd9\u4e2a\u8981\u5f00 long long\nint chg[maxn];\n\nvoid init(){ // \u9884\u5904\u7406\u5206\u5757\u7684 st,ed,bl \u6570\u7ec4\n\tb = sqrt(n); c = (n - 1) / b + 1;\n\trep(i,1,c){\n\t\tst[i] = (i - 1) * b + 1;\n\t\ted[i] = i == c ? n : i * b;\n\t\trep(j,st[i],ed[i]) bl[j] = i;\n\t}\n}\n\n#define C(i) (chg[i] <= b) // \u8fd9\u4e00\u5757\u518d\u4fee\u6539\u662f\u5426\u9700\u8981\u91cd\u6784\n#define Pa(x) (C(bl[x]) ? pa[x] : max2(1,fa[x] - tag[bl[x]]))\n#define Fa(x) (C(bl[x]) ? fa[x] : max2(1,fa[x] - tag[bl[x]]))\n// pa,fa \u6570\u7ec4\u53ea\u6709\u5728 chg[bl[i]]<=b \u7684\u65f6\u5019\u624d\u6709\u7528\uff0c\u6240\u4ee5\u8fd9\u91cc\u5199\u4e00\u4e2a\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u6709\u7528\u7684 pa,fa \u8be2\u95ee\n\nvoid chg1(int i){ // \u5355\u72ec\u66f4\u65b0 1 \u4e2a\u70b9\u7684 pa \u503c\uff0c\u8fd9\u79cd\u5199\u6cd5\u53ef\u4ee5\u7684\u539f\u56e0\u662f fa[i]<i\n\tif(C(bl[i])) pa[i] = bl[i] ^ bl[fa[i]] ? fa[i] : pa[fa[i]];\n}\n\nvoid chg2(int i,int x){ // \u4fee\u6539\u4e00\u4e2a\u5757\n\tif(!C(i)) return void(tag[i] = min2(tag[i] + x,n)); // \u5982\u679c\u4e0d\u7528\u91cd\u6784\uff0c\u90a3\u4e48\u52a0 tag\n\trep(j,st[i],ed[i]) fa[j] = max2(1,fa[j] - x),chg1(j); // \u91cd\u6784\n}\n\nvoid upd0(int l,int r,int x){ // \u4fee\u6539\u96f6\u6563\u5757\n\trep(i,l,r) fa[i] = max2(1,fa[i] - x); // \u4fee\u6539 l~r\n\trep(i,l,ed[bl[r]]) chg1(i); // \u8981\u91cd\u6784\u7684\u4f4d\u7f6e\u662f l~end[bl[r]] !!!!!\n\t// \u539f\u56e0\uff1a\u524d\u9762\u7684\u4fee\u6539\u53ef\u80fd\u4f1a\u5bf9\u8fd9\u4e2a\u5757\u540e\u9762\u7684\u4f4d\u7f6e\u4ea7\u751f\u5f71\u54cd\n}\n\nvoid upd(int l,int r,int x){ // \u771f\u6b63\u7684\u4fee\u6539\u51fd\u6570\n\tif(bl[l] == bl[r]) return upd0(l,r,x); // \u96f6\u6563\u5757\n\tupd0(l,ed[bl[l]],x); upd(st[bl[r]],r,x); // \u96f6\u6563\u5757\n\trep(i,bl[l] + 1,bl[r] - 1) chg2(i,x),++chg[i]; // \u6574\u5757\u66b4\u529b\u91cd\u6784/\u6253tag\n}\n\nint qry(int u,int v){ // \u6c42 LCA\n\twhile(u ^ v){ // u=v \u65f6\u5373\u4e3a\u7b54\u6848\n\t\tint pu = Pa(u),pv = Pa(v); // \u627e\u5230\u7b2c\u4e00\u4e2a\u7956\u5148\n\t\tif(bl[pu] ^ bl[pv]) bl[pu] < bl[pv] ? v = pv : u = pu;\n\t\t// \u7956\u5148\u4e0d\u5728\u540c\u4e00\u5757\uff0c\u6df1\u5ea6\u5927\u7684\u5fc5\u7136\u662f\u7f16\u53f7\u5927\u7684\uff0c\u8ba9\u5b83\u5148\u8df3\n\t\telse if(pu ^ pv) pu > pv ? u = pu : v = pv;\n\t\t// \u7956\u5148\u5728\u540c\u4e00\u5757\uff0c\u6df1\u5ea6\u5927\u7684\u4e5f\u5fc5\u7136\u662f\u7f16\u53f7\u5927\u7684\n\t\telse u > v ? u = Fa(u) : v = Fa(v);\n\t\t// \u7f16\u53f7\u5927\u7684\u6765\u5c0f\u8df3\n\t}\n\treturn u;\n}\n\nsigned main(){\n\tread(n,m);\n\tfa[1] = pa[1] = 1; /* this */ init();\n\trep(i,2,n) fa[i] = read(),chg1(i);\n\tint op,l,r,lst = 0;\n\twhile(m--){\n\t\tread(op,l,r); l ^= lst,r ^= lst;\n\t\top == 1 ? upd(l,r,read() ^ lst) : print(lst = qry(l,r),'\\n');\n\t}\n\treturn flush(),0;\n}\n```\n",
        "postTime": 1651832543,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF1491H Yuezheng Ling and Dynamic Tree"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u5b98\u65b9\u9898\u89e3\u3002\n\n\u8003\u8651\u5c06\u4e0b\u6807\u5206\u5757\uff0c\u5e76\u7ef4\u62a4 $g_i$ \u8868\u793a $i$ \u7684\u7b2c\u4e00\u4e2a\u5728\u5757\u5916\u7684\u7956\u5148\u3002\n\n\u663e\u7136 $g_i$ \u53ef\u4ee5\u66b4\u529b\u4fee\u6539\uff1a\u5f53\u4e00\u4e2a\u5757\u88ab\u4fee\u6539\u8d85\u8fc7 $\\sqrt{n}$ \u6b21\u65f6\uff0c$g_i=fa_i$\uff0c\u6253\u6807\u8bb0\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u6574\u5757\u4e8b\u5b9e\u4e0a\u6700\u591a\u88ab\u4fee\u6539 $\\sqrt{n}$ \u5c31\u53ef\u4ee5\u901a\u8fc7\u6253\u6807\u8bb0\u8fdb\u884c\u7ef4\u62a4\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u66b4\u529b\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u7136\u540e\u7528\u7c7b\u4f3c\u91cd\u94fe\u5256\u5206\u7684\u601d\u8def\u8df3 `LCA` \u5373\u53ef\u505a\u5230 $O(m\\sqrt{n}+n)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u7531\u4e8e\u8fd9\u9898\u7684\u5b9e\u73b0\u9700\u8981\u6bd4\u8f83\u7cbe\u7ec6 \u5173\u4e8e EA \u7684\u4ee3\u7801\u95ee\u9898\u6211\u5728[\u8fd9\u91cc](https://codeforces.ml/blog/entry/88248?#comment-766382)\u5df2\u7ecf\u9610\u91ca\u4e86 \u4e0d\u518d\u8fc7\u591a\u8bf4\u660e \u8fd9\u91cc\u6211\u7ed9\u51fa\u6211\u7684\u5b9e\u73b0\u4f5c\u4e3a\u4f8b\u5b50\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define N 100005\n#define int long long\nusing namespace std;\n\ntemplate <typename T>\n\nvoid read(T &a)\n{\n\tT x = 0,f = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9')\n\t{\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\ta = x * f;\n}\n\ntemplate <typename T>\n\nvoid write(T x)\n{\n\tif (x < 0) putchar('-'),x = -x;\n\tif (x < 10) return (void) putchar(x + '0');\n\twrite(x / 10);\n\tputchar(x % 10 + '0');\n}\n\ntemplate <typename T>\n\nvoid writeln(T x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n\ntemplate <typename T>\n\nvoid writes(T x)\n{\n\twrite(x);\n\tputchar(' ');\n}\n\ntemplate <typename T,typename... Args> \n\nvoid read(T &maxx,Args &... args)\n{\n\tread(maxx);\n\tread(args...);\n}\n\ntemplate <typename T,typename... Args>\n\nvoid writeln(T maxx,Args ... args)\n{\n\twrites(maxx);\n\twrites(args...);\n\tputchar('\\n');\n}\n\nconst int B = 300;\nint n,q,a[N],num,bl[N],vis[N];\nstd::vector<int> v;\n\nstruct Block\n{\n\tint f[B],lazy,flag,cnt,L,R;\n\tvoid update()\n\t{\n\t\tflag = 1;\n\t\tfor (int i = L; i <= R; i++)\n\t\t{\n\t\t\tif (bl[i] != bl[a[i]]) f[i - L] = i;\n\t\t\telse f[i - L] = f[a[i] - L],flag = 0;\n\t\t}\n\t}\n\tvoid update(int l,int r,int x)\n\t{\n\t\tfor (int i = l; i <= r; i++)\n\t\t\ta[i] = i == 1 ? 0 : max(a[i] - x,1LL);\n\t\tupdate();\n\t}\n\tvoid update(int x)\n\t{\n\t\tif (flag) lazy += x;\n\t\telse update(L,R,x);\n\t}\n}T[(N - 1) / B + 5];\n\nvoid update(int l,int r,int x)\n{\n\tif (bl[l] == bl[r])\n\t{\n\t\tT[bl[l]].update(l,r,x);\n\t\treturn ;\n\t}\n\tT[bl[l]].update(l,T[bl[l]].R,x);\n\tfor (int i = bl[l] + 1; i < bl[r]; i++)\n\t\tT[i].update(x);\n\tT[bl[r]].update(T[bl[r]].L,r,x);\n}\n\nvoid clear()\n{\n\tfor (int i = 0; i < v.size(); i++)\n\t\tvis[v[i]] = 0;\n\tv.clear();\n}\n\nint query(int x,int y)\n{\n\twhile (T[bl[x]].f[x - T[bl[x]].L] != T[bl[y]].f[y - T[bl[y]].L])\n\t{\n\t\tif (bl[x] < bl[y]) swap(x,y);\n\t\tx = (T[bl[x]].f[x - T[bl[x]].L] == 1) ? 0 : max(a[T[bl[x]].f[x - T[bl[x]].L]] - T[bl[x]].lazy,1LL);\n\t}\n\tint qaq = (T[bl[x]].f[x - T[bl[x]].L] == 1) ? 0 : max(a[T[bl[x]].f[x - T[bl[x]].L]] - T[bl[x]].lazy,1LL);\n\twhile (x != qaq)\n\t{\n\t\tassert(x != qaq);\n\t\tvis[x] = 1;\n\t\tv.push_back(x);\n\t\tx = (x == 1) ? 0 : max(a[x] - T[bl[x]].lazy,1LL);\n\t}\n\twhile (y != qaq)\n\t{\n\t\tif (vis[y]) return clear(),y;\n\t\ty = (y == 1) ? 0 : max(a[y] - T[bl[y]].lazy,1LL);\n\t}\n}\n\nsigned main()\n{\n\tread(n,q);\n\tfor (int i = 2; i <= n; i++) read(a[i]);\n\tnum = (n - 1) / B + 1;\n\tfor (int i = 1; i <= num; i++)\n\t{\n\t\tT[i].L = (i - 1) * B + 1;\n\t\tT[i].R = min(i * B,n);\n\t\tT[i].cnt = i * B - (i - 1) * B;\n\t\tT[i].flag = T[i].lazy = 0;\n\t\tfor (int j = T[i].L; j <= T[i].R; j++)\n\t\t\tbl[j] = i;\n\t}\n\tfor (int i = 1; i <= num; i++)\n\t\tT[i].update();\n\twhile (q--)\n\t{\n\t\tint opt;\n\t\tread(opt);\n\t\tif (opt == 1)\n\t\t{\n\t\t\tint l,r,x;\n\t\t\tread(l,r,x);\n\t\t\tupdate(l,r,x);\n\t\t}\n\t\tif (opt == 2)\n\t\t{\n\t\t\tint u,v;\n\t\t\tread(u,v);\n\t\t\twriteln(query(u,v));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1614611602,
        "uid": 68030,
        "name": "serverkiller",
        "ccfLevel": 0,
        "title": "CF1491H Yuezheng Ling and Dynamic Tree"
    },
    {
        "content": "\u5c06 $a$ \u5e8f\u5217\u5206\u5757\uff0c\u5047\u8bbe\u5757\u957f\u4e3a $B$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u9884\u5904\u7406\u51fa\u5b83\u7684\u7956\u5148\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u548c\u5b83\u4e0d\u518d\u540c\u4e00\u4e2a\u5757\u7684\u7956\u5148\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5728\u4e0b\u6587\u4e2d\u6211\u4eec\u79f0\u5176\u4e3a\u5f53\u524d\u70b9\u7684\u524d\u9a71\uff0c\u6211\u4eec\u5148\u8003\u8651\u5982\u4f55\u6c42\u4e24\u4e2a\u70b9\u7684 LCA\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n1. $u,v$ \u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5757\uff1a\u5c06\u5c5e\u4e8e\u7f16\u53f7\u8f83\u5927\u7684\u4e00\u4e2a\u5757\u7684\u8282\u70b9\u8df3\u81f3\u5b83\u7684\u524d\u9a71\u3002\n1. $u,v$ \u5c5e\u4e8e\u540c\u4e00\u4e2a\u5757\uff1a\u63a5\u4e0b\u6765\u8fd8\u662f\u8981\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n   1. $u$ \u7684\u524d\u9a71\u548c $v$ \u7684\u524d\u9a71\u4e0d\u540c\uff1a\u5c06 $u,v$ \u540c\u65f6\u8df3\u81f3\u5404\u81ea\u7684\u524d\u9a71\u3002\n   1. $u$ \u7684\u524d\u9a71\u548c $v$ \u7684\u524d\u9a71\u76f8\u540c\uff1a\u6b64\u65f6\u53ef\u4ee5\u8f6e\u6d41\u8df3 $u,v$ \u4e2d\u7f16\u53f7\u8f83\u5927\u7684\u70b9\u7684\u7236\u4eb2\u76f4\u81f3\u4e24\u4e2a\u70b9\u76f8\u7b49\u3002\n\n\u63a5\u4e0b\u6765\u5206\u6790\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u56e0\u4e3a\u524d\u9a71\u6700\u591a\u4e0d\u8d85\u8fc7 $\\frac{n}{B}$ \u4e2a\uff0c\u800c\u66b4\u529b\u8df3\u7236\u4eb2\u4e0d\u8d85\u8fc7 $B$ \u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(B+\\frac{n}{B})$\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u6765\u8003\u8651\u4fee\u6539\uff1a\u6309\u7167\u5e8f\u5217\u5206\u5757\u7684\u60ef\u4f8b\uff0c\u6211\u4eec\u5206\u6574\u5757\u548c\u6563\u5757\u6765\u8003\u8651\uff0c\u5bf9\u4e8e\u6563\u5757\uff0c\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u7136\u540e\u66b4\u529b\u91cd\u6784\u524d\u9a71\u5373\u53ef\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u6574\u5757\uff0c\u6211\u4eec\u9700\u8981\u6253\u61d2\u60f0\u6807\u8bb0\uff0c\u4f46\u662f\u8fd9\u79cd\u65f6\u5019\u65e0\u6cd5\u7ef4\u62a4\u524d\u9a71\u7684\u4fee\u6539\uff0c\u56e0\u4e3a\u4fee\u6539\u4e00\u4e2a\u5757\u7684\u524d\u9a71\u662f\u9700\u8981\u904d\u5386\u6574\u5757\u7684\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u5757\u6700\u591a\u5728\u7ecf\u8fc7 $B$ \u6b21\u4fee\u6539\u4e4b\u540e\uff0c\u5757\u4e2d\u6bcf\u4e00\u4e2a\u6570\u7684\u7236\u4eb2\u90fd\u4f1a\u5728\u8fd9\u4e2a\u5757\u4e4b\u524d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u5757\u9700\u8981\u66b4\u529b\u91cd\u6784\u524d\u9a71\u7684\u6b21\u6570\u6700\u591a\u662f $B$ \u6b21\uff0c\u4e4b\u540e\u7684\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u61d2\u6807\u8bb0\u76f4\u63a5\u51cf\u6765\u89e3\u51b3\u3002\n\n\u90a3\u4e48\u5206\u6790\u4fee\u6539\u7684\u590d\u6742\u5ea6\uff0c\u5bf9\u4e8e\u6563\u5757\u4fee\u6539\u662f $O(B)$ \u7684\uff0c\u5bf9\u4e8e\u6574\u5757\u4fee\u6539\uff08\u4e0d\u8003\u8651\u91cd\u6784\u524d\u9a71\uff09\u662f $O(\\frac{n}{B})$ \u7684\uff0c\u5bf9\u4e8e\u91cd\u6784\u524d\u9a71\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nB)$ \u7684\u3002\n\n\u7efc\u4e0a\uff0c\u82e5\u53d6 $B=\\sqrt{n}$\uff0c\u5219\u53ef\u4ee5\u83b7\u5f97 $O(n\\sqrt{n}+q\\sqrt{n})$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee3\u7801\u53ef\u4ee5\u53bb\u6211\u7684\u535a\u5ba2\u67e5\u770b\uff1a[Codeforces 1491H. Yuezheng Ling and Dynamic Tree \u9898\u89e3](https://www.cnblogs.com/withhope/p/14462136.html)",
        "postTime": 1614564887,
        "uid": 33362,
        "name": "Suiseiseki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1491H \u3010Yuezheng Ling and Dynamic Tree\u3011"
    },
    {
        "content": "\u4e00\u62ff\u5230\u8fd9\u9053\u9898\uff0c\u8fd9\u4e0d\u662f\u7a33\u59a5\u59a5\u7684\u5f39\u98de\u7ef5\u7f8a\u5417\uff1f\u5c31\u7279\u522b\u6709\u611f\u89c9\u3002        \n\n\u4e8e\u662f\u8003\u8651\u66b4\u529b\u5206\u5757\uff0c\u5177\u4f53\u800c\u8a00\u6211\u4eec\u5148\u753b\u846b\u82a6\u5957\u4e00\u4e2a\u5f39\u98de\u7ef5\u7f8a\u7684\u5206\u5757\u4e0a\u53bb\uff1a     \n- ```to[i]``` \u8868\u793a\u7b2c i \u4e2a\u70b9\u8df3\u51fa\u5f53\u524d\u5757\u540e\u8df3\u5230\u4e86\u54ea\u91cc\n\n- ??? \u4e5f\u5c31\u662f\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u4e1c\u897f             \n\n\u5148\u628a\u67e5\u8be2\u64cd\u4f5c\u641e\u4e86\uff0c\u611f\u89c9\u5c31\u662f\u4e00\u4e2a\u524d\u540e\u6307\u9488\u8df3\uff0c\u5982\u679c\u5728\u76f8\u540c\u5757\u5c31\u7528\u6211\u4eec\u7ef4\u62a4\u7684\u4e1c\u897f\u8fdb\u884c $O(1)$ \u67e5\u8be2\uff0c\u8fd9\u4e2a\u73a9\u610f\u513f\u80af\u5b9a\u5f97\u56ca\u62ec\u8fdb\u8fd9\u4e2a\u5757\u5185\u7684\u6240\u6709\u5143\u7d20\uff0c\u5426\u5219\u5f53\u524d\u5757\u5185\u6ca1\u6709\u7b54\u6848\uff0c\u5c31\u76f4\u63a5\u8fdb\u884c\u8df3\u5757\u64cd\u4f5c\u5373\u53ef\u3002\u53cd\u6b63\u5c31\u662f\u5728\u540c\u4e00\u4e2a\u5757\u5185\u6211\u4eec\u5c31\u76f4\u63a5\u67e5\u8be2\u5426\u5219\u5c31\u8df3\u5757\u3002             \n\n\u63a5\u7740\u611f\u89c9\u8fd9\u4e2a\u53ea\u52a0\u4e0d\u51cf\uff0c\u867d\u7136\u5f88\u663e\u7136\u5728\u672c\u9898\u4e2d\u662f\u4e3a\u4e86\u4e0d\u8ba9\u6709\u70b9\u5f80\u540e\u9762\u6307\uff0c\u4f46\u662f\u8fd9\u4e2a\u73a9\u610f\u513f\u7ed9\u4eba\u611f\u89c9\u5c31\u662f\u5176\u80cc\u540e\u9690\u85cf\u4e86\u52bf\u80fd\u5206\u6790\u8fd9\u4e2a\u5e38\u89c1\u5957\u8def\u3002\u6240\u4ee5\u80af\u5b9a\u6709\u52bf\u80fd\u5206\u6790\uff0c\u8fd9\u4e2a\u5957\u8def\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b[\u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c](https://www.luogu.com.cn/problem/P4117) \u3002            \n\n\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u5c31\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u6027\u8d28\uff1a\u5982\u679c\u4e00\u4e2a\u5757\u6267\u884c\u7684 -x \u64cd\u4f5c\u4e4b\u548c\u5927\u4e8e\u4e86\u5757\u957f\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u91cc\u9762\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u4e00\u6b21\u8df3\u8dc3\u90fd\u8df3\u51fa\u4e86\u5757\u554a\uff01\uff01\uff01\u91cd\u8981\u6027\u8d28\uff01\uff01\uff01\u6240\u4ee5\u8fd9\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u8df3\u5c31\u597d\u4e86\u3002             \n\n\u73b0\u5728\uff0c\u5c31\u7b97\u4fee\u6539\u5361\u6ee1\u4e86\u6211\u4eec\uff0c\u6bcf\u4e2a\u5757\u4e5f\u53ea\u4f1a\u8fdb\u884c\u81f3\u591a $\\sqrt n$ \u6b21\u66b4\u529b\u4fee\u6539\u64cd\u4f5c\uff0c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u6b21\u6570\u540e\u6211\u4eec\u76f4\u63a5\u6253\u4e86\u61d2\u6807\u8bb0\u5c31\u597d\u4e86\u3002\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8fd9\u65f6\u5019\u5bf9\u6bcf\u4e2a\u5757\u53ef\u4ee5\u5141\u8bb8\u4e00\u4e2a $\\sqrt n$ \u7684\u91cd\u6784\uff0c\u8fd9\u5c31\u53ca\u5176\u6709\u5229\u4e8e\u6211\u4eec\u7684\u7ef4\u62a4\u3002                 \n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u53ef\u4ee5\u652f\u6301\u4e00\u4e2a\u5757\u5185 $O(1)$ \u67e5\u8be2\u662f\u5426\u4efb\u610f\u4e24\u70b9\u5728\u5757\u5185\u6709\u5171\u540c\u7236\u4eb2\uff0c\u8fd8\u53ef\u4ee5\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u63a8\u5e73\u5b83\u3002           \n\n\u663e\u7136\u5e76\u67e5\u96c6\u561b\u3002         \n\n\u4e8e\u662f\u6211\u4eec\u91cd\u65b0\u7406\u4e00\u4e0b\u6211\u4eec\u7684\u601d\u8def\uff1a           \n\n- \u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u7ef4\u62a4\u7684\u662f\u5757\u5185\u4efb\u610f\u4e24\u70b9\u5728\u5757\u5185\u662f\u5426\u6709\u5171\u540c\u7236\u4eb2\u3002            \n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u6211\u4eec\u4fee\u6539\u65f6\u8fb9\u89d2\u5757\u91cd\u6784\uff0c\u5bf9\u4e8e\u6574\u5757\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff0c\u5982\u679c\u5f53\u524d -x \u64cd\u4f5c\u4e4b\u548c\u5927\u4e8e\u4e86\u5757\u957f\u6211\u4eec\u5c31\u76f4\u63a5\u6253\u61d2\u6807\u8bb0\uff0c\u5728\u67e5\u8be2\u64cd\u4f5c\u65f6\u76f4\u63a5\u8df3\u8d70\u5c31\u597d\u4e86\uff1b\u53cd\u4e4b\u6211\u4eec\u76f4\u63a5\u51cf\u7136\u540e\u91cd\u6784\u3002              \n\n- \u5728\u67e5\u8be2\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u7528\u7d2f\u4f3c\u53cc\u6307\u9488\u7684\u65b9\u6cd5\uff0c\u5148\u628a\u4e24\u4e2a\u6307\u9488\u8df3\u8fdb\u4e00\u4e2a\u5757\u91cc\u9762\uff0c\u63a5\u7740\u6765\u4e00\u6ce2\u67e5\u8be2\uff0c\u5982\u679c\u67e5\u8be2\u6210\u529f\u8f93\u51fa\u5373\u53ef\uff0c\u5426\u5219\u4e24\u4e2a\u5c31\u4e00\u8d77\u98de\u76f4\u5230\u6709\u70b9\u53d8\u6210 1 \u4e3a\u6b62\u3002        \n\n\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u628a $to$ \u6570\u7ec4\u7701\u4e86\uff0c\u5e76\u67e5\u96c6\u53ef\u4ee5\u652f\u6301\u8fd9\u4e00\u64cd\u4f5c\u3002          \n```cpp\n/*\n\u601d\u8def\uff1a\u5f39\u98de\u7ef5\u7f8a\u66b4\u529b\u5206\u5757\uff1a \n\u4fee\u6539\uff1a\u6574\u5757\u76f4\u63a5\u6539\uff0c\u8fb9\u89d2\u5757\u91cd\u6784\u597d\u6b38          \n\u67e5\u8be2\uff1a\u524d\u540e\u6307\u9488\uff0c\u5927\u5757\u76f4\u63a5\u8df3\u7136\u540e\u5757\u5185\u5e76\u67e5\u96c6\u67e5\u8be2\n\u91cd\u6784\uff1a\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u8fb9\u89d2\u5757\u91cd\u6784~~\u8fd9\u662f\u7b97\u5728\u4fee\u6539\u91cc\u9762\u7684~~\u6ca1\u6709\u5f71\u54cd\uff0c\u800c\u53e6\u4e00\u79cd\u91cd\u6784\u662f\u5c5e\u4e8e\u6709\u70b9\u5230\u6839\u8282\u70b91\u7684\u91cd\u6784\uff0c\u4e00\u4e2a\u5757\u53ea\u6709\\sqrt_n\u7684\u5143\u7d20\u6240\u4ee5\u91cd\u6784\u81f3\u591an\u6b21\uff0c\u800c\u4e00\u6b21\u91cd\u6784\u5c31\\sqrt n\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6240\u4ee5\u8fd9\u4e00\u5757\u65f6\u95f4\u590d\u6742\u5ea6\u6211\u4eec\u4e0d\u4f1a\u7206\u70b8 \n\u6ce8\u610f\u5e76\u67e5\u96c6\u91cc\u9762\u7ef4\u62a4\u7684\u662f\u5728\u540c\u4e00\u4e2a\u5757\u91cc\u9762\u7684\u70b9\n\u6211\u4eec\u91cd\u65b0\u7406\u4e00\u4e0b\u601d\u8def\uff1a\u6211\u4eec\u5e76\u67e5\u96c6\u91cc\u9762\u7ef4\u62a4\u7684\u76f8\u5f53\u4e8e\u662f\u8fd8\u5728\u8fd9\u4e00\u4e2a\u5757\u91cc\u9762\u7684\u60c5\u51b5\u5bf9\u5427\uff0c\u79bb\u5f00\u4e86\u8fd9\u4e2a\u5757\u6700\u597d\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u9519\uff01\uff01\uff01 \n\u88ab\u8ba8\u8bba\u533a\u5e26\u4e86\u6ce2\u8282\u594f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8d85\u8fc7\u4e86\u6839\u53f7\u6b21\u7684\u5757\u76f4\u63a5\u8d70\u5c31\u597d\u4e86\u2026\u2026 \n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int Len = 4e5 + 5 , SIZE = 1500;\nlong long Del[SIZE];\nint t,n,m,L[SIZE],R[SIZE],pos[Len],siz[SIZE],fa[Len],a[Len],tot[SIZE];\ninline void makeSet(int l,int r){for(int i = l ; i <= r ; i ++) fa[i] = i;}\ninline int findSet(int x){return fa[x] == x ? fa[x] : fa[x] = findSet(fa[x]);}\ninline void unionSet(int x,int y)\n{\n\tint u = findSet(x) , v = findSet(y);\n\tif(u == v) return;\n\tfa[v] = u;\n}\ninline void maintain(int Blk)\n{\n\tmakeSet(L[Blk] , R[Blk]);\n\tfor(int j = L[Blk] ; j <= R[Blk] ; j ++) if(pos[a[j]] == Blk) unionSet(a[j] , j);\n}\ninline void DDel(int Blk,int x)\n{\n\ttot[Blk] += x;\n\tfor(int j = L[Blk] ; j <= R[Blk] ; j ++) a[j] = max(a[j] - x , 1);\n\tmakeSet(L[Blk] , R[Blk]);\n\tfor(int j = L[Blk] ; j <= R[Blk] ; j ++) if(pos[a[j]] == Blk) unionSet(a[j] , j);\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\ta[1] = 0;\n\tpos[0] = 0;\n\tfor(int i = 2 ; i <= n ; i ++) scanf(\"%d\",&a[i]);\n\tt = sqrt(n);\n\tfor(int i = 1 ; i <= t ; i ++) L[i] = (i - 1) * t + 1 , R[i] = i * t , siz[i] = R[i] - L[i] + 1;\n\tif(R[t] != n)\n\t{\n\t\tt ++;\n\t\tL[t] = R[t - 1] + 1;\n\t\tR[t] = n;\n\t\tsiz[t] = R[t] - L[t] + 1;\n\t}\n\tfor(int i = 1 ; i <= t ; i ++)\n\t{\n\t\ttot[i] = 0;\n\t\tmakeSet(L[i] , R[i]);\n\t\tfor(int j = L[i] ; j <= R[i] ; j ++) pos[j] = i;\n\t\tfor(int j = L[i] ; j <= R[i] ; j ++) if(pos[a[j]] == i){unionSet(a[j] , j);}\n\t}\n\tint lstans = 0;\n\twhile(m --)\n\t{\n\t\t//for(int i = 1 ; i <= n ; i ++) printf(\"%d\\n\",a[i] - Del[pos[i]]);\n\t\tint opt;scanf(\"%d\",&opt);\n\t\tif(opt == 1)\n\t\t{\n\t\t\tint l,r,x;scanf(\"%d %d %d\",&l,&r,&x);\n\t\t\tl ^= lstans , r ^= lstans , x ^= lstans;\n\t\t\tif(l > r) swap(l , r);\n\t\t\tint Ll = pos[l] , Rr = pos[r];\n\t\t\tif(Ll == Rr) \n\t\t\t{\n\t\t\t\tfor(int i = l ; i <= r ; i ++) a[i] = max(a[i] - x , 1);\n\t\t\t\tif(tot[Ll] < siz[Ll]) maintain(Ll);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor(int i = Ll + 1 ; i <= Rr - 1 ; i ++)\n\t\t\t{\n\t\t\t\tif(tot[i] >= siz[i]) Del[i] += x;\n\t\t\t\telse DDel(i , x);\n\t\t\t}\n\t\t\tfor(int i = l ; i <= R[Ll] ; i ++) a[i] = max(a[i] - x , 1);\n\t\t\tif(tot[Ll] < siz[Ll]) maintain(Ll);\n\t\t\tfor(int i = L[Rr] ; i <= r ; i ++) a[i] = max(a[i] - x , 1);\n\t\t\tif(tot[Rr] < siz[Rr]) maintain(Rr);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint u,v;scanf(\"%d %d\",&u,&v);\n\t\t\tu ^= lstans , v ^= lstans;\n\t\t\tbool flag = false;\n\t\t\twhile(u != 1 && v != 1)\n\t\t\t{\n\t\t\t\tif(pos[u] == pos[v])\n\t\t\t\t{\n\t\t\t\t\tif(tot[pos[u]] >= siz[pos[u]])\n\t\t\t\t\t{\n\t\t\t\t\t\tif(u == v) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlstans = u;\n\t\t\t\t\t\t\tprintf(\"%d\\n\",u);\n\t\t\t\t\t\t\tflag |= 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}//\u5426\u5219\u4e00\u5b9a\u5728\u8fd9\u4e2a\u5757\u5185\u6ca1\u6709\u7b54\u6848 \n\t\t\t\t\t\tu = max(1LL , 1LL * a[u] - Del[pos[u]]);\n\t\t\t\t\t\tv = max(1LL , 1LL * a[v] - Del[pos[v]]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(findSet(u) == findSet(v))//\u8868\u660e\u7b54\u6848\u5c31\u5728\u8fd9\u4e2a\u5757\u5185 \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twhile(u != v)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(u > v) swap(u , v);\n\t\t\t\t\t\t\t\tv = max(1LL , 1LL * a[v] - Del[pos[v]]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlstans = u;\n\t\t\t\t\t\t\tprintf(\"%d\\n\",u);\n\t\t\t\t\t\t\tflag |= 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tu = max(1LL , 1LL * a[findSet(u)] - Del[pos[u]]);\n\t\t\t\t\t\t\tv = max(1LL , 1LL * a[findSet(v)] - Del[pos[v]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\telse\n \t\t\t\t{\n\t\t\t\t\tif(u > v) swap(u , v);\n\t\t\t\t\tif(tot[pos[v]] >= siz[pos[v]]) v = max(1LL , 1LL * a[v] - Del[pos[v]]);\n\t\t\t\t\telse v = max(1LL , 1LL * a[findSet(v)] - Del[pos[v]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!flag){lstans = 1;printf(\"1\\n\");}\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1620883157,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1491H Yuezheng Ling and Dynamic Tree"
    },
    {
        "content": "~~\u6240\u4ee5 Chinese Round \u51fa DS \u662f\u4f20\u7edf\u4e86\u5bf9\u5427\u3002~~\n\n## Description\n\n[Link](https://www.luogu.com.cn/problem/CF1491H).\n\nGiven is a rooted tree with the $\\sf1$-th node as the root.\n\nThe tree will be given in this way: it will tell you that the parent of the $\\sf i$-th node is $a_{i}$.\n\nSupporting the following operations:\n\n- `1 l r x`: let $\\sf \\forall i\\in[l,r],a_{i}=max\\{a_{i}-x,1\\}$.\n- `2 u v`: find the LCA (Lowest Common Ancestor) of $\\sf u$ and $\\sf v$.\n\n## Solution\n\n![](http://codeforces.com/predownloaded/ff/89/ff8966699d3f169f29b1e05c06b36e1c3ab67a91.png)\n\n\u7ecf\u5178\u6c38\u6d41\u4f20\u3002\n\n\u8003\u8651\u5230\u4fee\u6539\u64cd\u4f5c\u662f\u5bf9\u7ed3\u70b9\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u592a\u80fd\u76f4\u63a5 LCT \u6216\u6811\u5256\uff0c\u8003\u8651\u7167\u5e8f\u5217\u6765\u5206\u5757\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u5bf9\u7ed3\u70b9\u7f16\u53f7\u5206\u5757\u3002\n\n1. \u4fee\u6539\uff1b\n\n$\\quad$\u7ef4\u62a4\u4e00\u4e2a\u5c5e\u6027 $\\sf top_{u}$ \u8868\u793a\u5728\u539f\u6811\u4e0a\u7ed3\u70b9 $\\sf u$ \u7684\u7956\u5148\u4e2d\u4e0d\u548c $\\sf u$ \u5728\u540c\u4e00\u4e2a\u5757\u91cc\u9762\u7684\u7f16\u53f7\u6700\u5927\u7684\u4e00\u4e2a\u7ed3\u70b9\u7684\u7f16\u53f7\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u7684\u8bdd\u5c31\u4ee4 $\\sf top_{u}=1$\u3002\u8fd9\u6837\u7684\u8bdd\u4f60\u4ece\u7ed3\u70b9 $\\sf u$ \u8df3\u5230 root \u7684\u590d\u6742\u5ea6\u4e3a $\\sf O(\\sqrt{n})$\u3002\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n$\\quad$\u6563\u5757\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u626b\u7740\u6539\uff1b\u5bf9\u4e8e\u6574\u5757\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u5757\u7684\u88ab\u4fee\u6539\u6b21\u6570\u8d85\u8fc7\u4e86\u5757\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u4f1a\u6709 $\\sf top_{u}=fa_{u}$\u3002\n\n2. \u8be2\u95ee\u3002\n\n$\\quad$\u5206\u4e09\u4e2a\u7c7b\u8ba8\u8bba\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u597d\u505a\uff08\u5dee\u4e0d\u591a\u548c\u6811\u5256\u627e LCA \u4e00\u4e2a\u6837\u5b50\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,top[100010],deln[320],tag[320],belong[100010],bl[320],br[320],fa[100010],bs;\n#define gtlf(x) ((x-1)*bs+1)\n#define gtrg(x) (min(x*bs,n))\nvoid updtop(int x)\n{\n\tif(belong[x]^belong[fa[x]])\ttop[x]=fa[x];\n\telse\ttop[x]=top[fa[x]];\n}\nvoid turndown(int x)\n{\n\tif(tag[x])\n\t{\n\t\tfor(int i=gtlf(x);i<=gtrg(x);++i)\tfa[i]=max(fa[i]-tag[x],1);\n\t\ttag[x]=0;\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m),bs=sqrt(double(n))+1,fa[1]=belong[1]=1;\n\tfor(int i=2;i<=n;++i)\tscanf(\"%d\",&fa[i]);\n\tfor(int i=2;i<=n;++i)\tbelong[i]=(i-1)/bs+1,updtop(i);\n\twhile(m--)\n\t{\n\t\tint opt; scanf(\"%d\",&opt);\n\t\tif(opt==1)\n\t\t{\n\t\t\tint opl,opr,opx;\n\t\t\tscanf(\"%d %d %d\",&opl,&opr,&opx);\n\t\t\tturndown(belong[opl]);\n\t\t\tif(belong[opl]==belong[opr])\n\t\t\t{\n\t\t\t\tturndown(belong[opl]);\n\t\t\t\tfor(int i=opl;i<=opr;++i)\tfa[i]=max(fa[i]-opx,1),updtop(i);\n\t\t\t\tfor(int i=opr+1;i<=gtrg(belong[opl]);++i)\tupdtop(i);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tturndown(belong[opl]);\n\t\t\t\tfor(int i=opl;i<=gtrg(belong[opl]);++i)\tfa[i]=max(fa[i]-opx,1),updtop(i);\n\t\t\t\tfor(int i=gtlf(belong[opl]);i<opl;++i)\tupdtop(i);\n\t\t\t\tturndown(belong[opr]);\n\t\t\t\tfor(int i=gtlf(belong[opr]);i<=opr;++i)\tfa[i]=max(fa[i]-opx,1),updtop(i);\n\t\t\t\tfor(int i=opr+1;i<=gtrg(belong[opr]);++i)\tupdtop(i);\n\t\t\t\tfor(int i=belong[opl]+1;i<belong[opr];++i)\n\t\t\t\t{\n\t\t\t\t\tif(deln[i]>=bs)\ttag[i]+=opx;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t++deln[i];\n\t\t\t\t\t\tfor(int j=gtlf(i);j<=gtrg(i);++j)\tfa[j]=max(fa[j]-opx,1),updtop(j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint opx,opy; scanf(\"%d %d\",&opx,&opy);\n\t\t\twhile(opx^opy)\n\t\t\t{\n\t\t\t\tint fopx,fopy;\n\t\t\t\tif(deln[belong[opx]]>=bs)\tturndown(belong[opx]),fopx=fa[opx];\n\t\t\t\telse\tfopx=top[opx];\n\t\t\t\tif(deln[belong[opy]]>=bs)\tturndown(belong[opy]),fopy=fa[opy];\n\t\t\t\telse\tfopy=top[opy];\n\t\t\t\tif(belong[opx]^belong[opy])\n\t\t\t\t{\n\t\t\t\t\tif(belong[opx]>belong[opy])\topx=fopx;\n\t\t\t\t\telse\topy=fopy;\n\t\t\t\t}\n\t\t\t\telse if(fopx^fopy)\topx=fopx,opy=fopy;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(opx>opy)\tturndown(belong[opx]),opx=fa[opx];\n\t\t\t\t\telse\tturndown(belong[opy]),opy=fa[opy];\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",opx);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1615807428,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "solution-cf1491h"
    },
    {
        "content": "\u8003\u8651\u6839\u53f7\u505a\u6cd5\uff0c\u5bf9\u7f16\u53f7\u5206\u5757\u3002\n\n\u8bb0 $pa_i$ \u8868\u793a\u70b9 $i$ \u79bb\u5f00\u5757\u7684\u7b2c\u4e00\u4e2a\u7956\u5148\uff0c$fa_i$ \u8868\u793a\u7236\u4eb2\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u4e0d\u65ad\u50cf\u6811\u5256\u90a3\u6837\u8df3\u7236\u4eb2\u5373\u53ef\uff0c\u5355\u6b21 $\\mathcal O(\\sqrt n)$\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u6563\u5757\u66b4\u529b\uff0c\u6574\u5757\u4e5f\u66b4\u529b\u3002\n\n\u56e0\u4e3a $fa_i<i$ \u4e14\u6bcf\u6b21\u4fee\u6539 $fa_i$ \u90fd\u4f1a\u51cf\u5c11\uff0c\u6545\u5bf9\u4e00\u4e2a\u5757\u4fee\u6539 $\\sqrt n$ \u6b21 $fa_i$ \u540e\uff0c\u5757\u5185\u6bcf\u4e2a\u5143\u7d20\u8df3 $fa_i$ \u90fd\u4f1a\u8df3\u51fa\u5757\uff0c\u6b64\u65f6 $pa_i=fa_i$\uff0c\u6253\u4e2a\u6807\u8bb0\u5373\u53ef\uff0c\u4e0a\u754c $\\mathcal O(n\\sqrt n)$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt n)$\u3002",
        "postTime": 1669855191,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF1491H Yuezheng Ling and Dynamic Tree"
    },
    {
        "content": "800 \u5e74\u4e4b\u524d\u52a0\u5230\u4e3b\u9898\u5e93\u91cc\u9762\u7684 Ynoi\u3002\u7a81\u7136\u610f\u8bc6\u5230\u54e6\u539f\u6765\u8fd9\u662f\u4e2a Global Round \u7684\u9898\u76ee\u3002\u521a\u51fa\u6765\u7684\u65f6\u5019\u633c\u4e86\u597d\u4e45\u90fd\u6ca1\u641e\u51fa\u6765\uff0c\u770b\u4e86\u773c\u505a\u6cd5\u6ca1\u53bb\u8865\u2026\u2026\u7ed3\u679c\u4eca\u5929\u5728\u8d5b\u65f6\u7a81\u7136\u9047\u89c1\u4e86\uff0c\u7136\u540e\u5c31\u5199\u51fa\u6765\u4e86\u3002\u5f53\u7136\u8fd9\u662f\u9898\u5916\u8bdd\u3002\n\n\u8fd9\u4e2a\u9898\u663e\u7136\u4e0d\u53ef\u80fd\u7ef4\u62a4\u51fa\u6811\u7684\u5f62\u6001\uff0c\u4e5f\u4e0d\u597d\u7528 $\\log$ \u4e00\u7c7b\u4e1c\u897f\u53bb\u7ef4\u62a4\u3002\u4e8e\u662f\u8003\u8651\u6839\u53f7\u7b97\u6cd5\u3002\n\n\u8054\u60f3\u5230\u6811\u94fe\u5256\u5206\u6c42 LCA\u3002\u5728\u6811\u94fe\u5256\u5206\u6c42 LCA \u7684\u505a\u6cd5\u4e2d\uff0c\u6211\u4eec\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u662f\uff0c\u6784\u9020\u300c\u91cd\u94fe\u300d\u8fd9\u6837\u4e00\u4e2a\u6982\u5ff5\uff0c\u4f18\u5316\u4e86\u5728\u91cd\u513f\u5b50\u4e2d\u5f80\u4e0a\u8df3\u7684\u590d\u6742\u5ea6\u3002\u5c06\u5e8f\u5217\u5206\u5757\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4f7f\u5f97\u8df3 LCA \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\sqrt n)$\u3002\u56e0\u4e3a\u53ea\u4f1a\u5f80\u524d\u8df3\uff0c\u4e0d\u96be\u60f3\u5230\u5904\u7406\u6bcf\u4e2a\u70b9\u5757\u5916\u7684\u6700\u8fd1\u7956\u5148\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5728 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u5185\u8df3\u5230\u67d0\u4e00\u4e2a\u7956\u5148\u7684\u5757\u5185\uff0c\u5e76\u4e14\u4ee5 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u5757\u5185\u66b4\u529b\u627e\u5230\u8fd9\u4e2a\u7956\u5148\u3002\u4e4b\u540e\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u8df3 LCA\uff1a\n\n- \u5982\u679c\u4e24\u4e2a\u70b9\u5757\u5916\u7684\u6700\u8fd1\u7956\u5148\u4e0d\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff1a\u4e24\u4e2a\u70b9\u4e2d\u5757\u5916\u7684\u6700\u8fd1\u7956\u5148\u7f16\u53f7\u5927\u7684\u90a3\u4e2a\u8df3\u5411\u5176\u5757\u5916\u6700\u8fd1\u7956\u5148\uff1b   \n- \u5426\u5219\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u5757\u5916\u7684\u6700\u8fd1\u7956\u5148\u4e0d\u662f\u540c\u4e00\u4e2a\u70b9\uff1a\u4e24\u4e2a\u70b9\u4e2d\u5757\u5916\u7684\u6700\u8fd1\u7956\u5148\u7f16\u53f7\u5927\u7684\u90a3\u4e2a\u8df3\u5411\u5176\u5757\u5916\u6700\u8fd1\u7956\u5148\uff1b   \n- \u5426\u5219\uff1a\u56e0\u4e3a\u662f\u5757\u5916\u6700\u8fd1\u7956\u5148\uff0c\u6211\u4eec\u66b4\u529b\u8df3\u4e5f\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u7f16\u53f7\u5927\u7684\u90a3\u4e2a\u70b9\u5f80\u5176\u7236\u4eb2\u8df3\u5373\u53ef\u3002\n\n\u73b0\u5728\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\u6709\u4e00\u4e2a\u70b9\u5757\u5916\u7684\u6700\u8fd1\u7956\u5148\u548c\u5176\u7236\u4eb2\u7ed3\u70b9\u3002\u8003\u8651\u7ef4\u62a4\u65b9\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u5728\u4e00\u4e2a\u5757\u4fee\u6539\u4e86\u5f88\u591a\u6b21\u4e4b\u540e\uff0c\u8fd9\u4e2a\u5757\u5185\u7684\u7236\u4eb2\u8282\u70b9\u548c\u5757\u5916\u6700\u8fd1\u7956\u5148\u5176\u5b9e\u662f\u4e00\u4e2a\u4e1c\u897f\u3002\u53d1\u73b0\u8fd9\u4e2a\u503c\u6700\u5927\u662f\u8fd9\u4e2a\u5757\u7684\u957f\u5ea6\uff0c\u5373 $O(\\sqrt n)$\u3002\u56e0\u6b64\u6211\u4eec\u4e00\u4e2a\u5757\u6700\u591a\u4fee\u6539 $O(\\sqrt n)$ \u6b21\uff0c\u5171 $O(\\sqrt n)$ \u4e2a\u5757\u3002\u603b\u5171\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\sqrt n)$\uff0c\u662f\u5b8c\u5168\u652f\u6301\u6211\u4eec\u53bb\u91cd\u6784\u7684\u3002\u81f3\u4e8e\u6563\u5757\u6211\u4eec\u76f4\u63a5\u4fee\u6539\u91cd\u6784\u80af\u5b9a\u6ca1\u6709\u95ee\u9898\u3002\n\n\u5982\u679c\u4e00\u4e2a\u5757\u88ab\u4fee\u6539\u4e86\u591a\u6b21\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u6253\u61d2\u6807\u8bb0\u4e86\u3002\u6700\u540e\u67e5\u8be2\u5757\u5916\u6700\u8fd1\u7956\u5148\u548c\u7236\u4eb2\u7684\u65f6\u5019\uff0c\u5148\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5b58\u5728\u6807\u8bb0\uff0c\u5982\u679c\u6709\u6807\u8bb0\u5c31\u8bf4\u660e\u7236\u4eb2\u5df2\u7ecf\u5230\u5757\u5916\u53bb\u4e86\uff0c\u76f4\u63a5\u8df3\u5c31\u884c\u3002\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\tc=getchar();\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x;\n}\nvoid write(int x)\n{\n\tif(x>=10)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nconst int MAXN=100010;\nint n,T,brk,bel[MAXN],L[505],R[505],tag[505],sum[505],fa[MAXN],top[MAXN];\nint getAcOut(int x){return sum[bel[x]]>brk?max(1,fa[x]-tag[bel[x]]):top[x];}\nint getAcIn(int x){return sum[bel[x]]>brk?max(1,fa[x]-tag[bel[x]]):fa[x];}\nvoid modify(int x){if(sum[bel[x]]<=brk)\ttop[x]=(bel[fa[x]]!=bel[x])?fa[x]:top[fa[x]];}\nvoid modify(int x,int val)\n{\n\tif(sum[x]>brk)\ttag[x]=min(tag[x]+val,n);\n\telse\tfor(int i=L[x];i<=R[x];++i)\tfa[i]=max(fa[i]-val,1),modify(i);\n}\nvoid modify(int lp,int rp,int val)\n{\n\tint l=bel[lp],r=bel[rp];\n\tif(l==r)\n\t{\n\t\tfor(int i=lp;i<=rp;++i)\tfa[i]=max(fa[i]-val,1);\n\t\tfor(int i=lp;i<=R[r];++i)\tmodify(i);\n\t\treturn ;\n\t}\n\tfor(int i=lp;i<=R[l];++i)\tfa[i]=max(fa[i]-val,1),modify(i);\n\tfor(int i=L[r];i<=rp;++i)\tfa[i]=max(fa[i]-val,1);\n\tfor(int i=L[r];i<=R[r];++i)\tmodify(i);\n\tfor(int i=l+1;i<=r-1;++i)\tmodify(i,val),++sum[i];\n}\nint main(){\n\tn=read(),T=read();\n\tbrk=sqrt(n);\n\tfor(int i=2;i<=n;++i)\tfa[i]=read();\n\tfa[1]=top[1]=1;\n\tfor(int i=1;i<=n;++i)\tbel[i]=(i-1)/brk+1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(!L[bel[i]])\tL[bel[i]]=i;\n\t\tR[bel[i]]=i;\n\t}\n\tfor(int i=2;i<=n;++i)\tmodify(i);\n\twhile(T-->0)\n\t{\n\t\tint op=read();\n\t\tif(op==1)\n\t\t{\n\t\t\tint l=read(),r=read(),x=read();\n\t\t\tmodify(l,r,x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint u=read(),v=read();\n\t\t\twhile(u!=v)\n\t\t\t{\n\t\t\t\tint acu=getAcOut(u),acv=getAcOut(v);\n\t\t\t\tif(bel[acu]!=bel[acv])\n\t\t\t\t{\n\t\t\t\t\tif(bel[acu]<bel[acv])\tv=acv;\n\t\t\t\t\telse\tu=acu;\n\t\t\t\t}\n\t\t\t\telse if(acu!=acv)\n\t\t\t\t{\n\t\t\t\t\tif(acu<acv)\tv=acv;\n\t\t\t\t\telse\tu=acu;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(u<v)\tv=getAcIn(v);\n\t\t\t\t\telse\tu=getAcIn(u);\n\t\t\t\t}\n\t\t\t}\n\t\t\twrite(u),puts(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1634803739,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u671b\u5148\u751f\u4e0d\u541d\u8d50\u6559"
    }
]