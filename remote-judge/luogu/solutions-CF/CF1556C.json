[
    {
        "content": "## CF1556C\n\n\u9996\u5148\u8003\u8651\u5c06\u62ec\u53f7\u4f5c\u4e3a\u6298\u7ebf\uff0c\u5de6\u62ec\u53f7\u6bb5\u5bf9\u5e94\u4e00\u6bb5\u659c\u5411\u4e0a\u7684\u76f4\u7ebf\uff08\u4e0a\u5761\uff09\uff0c\u53f3\u62ec\u53f7\u5411\u4e0b\uff08\u4e0b\u5761\uff09\u3002\n\n\u50cf\u8fd9\u6837:\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/kls8ha7p.png)\n\n\u89c2\u5bdf\u8fd9\u6bb5\u6298\u7ebf\uff0c\u5bb9\u6613\u53d1\u73b0\u4e00\u6bb5\u5408\u6cd5\u5e8f\u5217\uff0c\u5c31\u50cf\u4e0a\u9762\u7eff\u8272\u7684\u4e00\u6bb5\u4e00\u6837\uff0c\u4e24\u7aef\u70b9\u9f50\u5e73\u4e14\u4e3a\u6574\u4e2a\u7eff\u6bb5\u7684\u6700\u4f4e\u7684\uff08\u5373\u4e2d\u95f4\u6ca1\u6709\u5927\u201c\u5c71\u8c37\u201d\u51f9\u4e0b\u6765\uff09\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u4e0b\u5761\uff0c\u8ba1\u7b97\u4ee5\u7942\u7ed3\u5c3e\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u4e0b\u5761\u4e0a\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5411\u53f3\u6c34\u5e73\u78b0\u5230\u7684\u7b2c\u4e00\u4e2a\u70b9\u4e00\u5b9a\u662f\u7942\u5bf9\u5e94\u7684\u4e00\u4e2a\u53f3\u7aef\u70b9\u3002\n\n\u540c\u65f6\u5982\u679c\u78b0\u5230\u7684\u70b9\u662f\u62d0\u70b9\uff08\u5373\u7ee7\u7eed\u5411\u53f3\u4e0d\u4f1a\u548c\u8f6e\u5ed3\u7ebf\u76f4\u63a5\u76f8\u4ea4\u800c\u662f\u76f8\u5207\uff09\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5411\u5de6\u8d70\u3002\n\n\u5728\u6298\u7ebf\u56fe\u4e0a\u753b\u4e00\u753b\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u4e0b\u5761\u8ddf\u82e5\u5e72\u4e2a\u4e0a\u5761\u5339\u914d\u3002\n\n![2](https://cdn.luogu.com.cn/upload/image_hosting/hso8kn5n.png)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8bbe\u7eff\u7bad\u5934\u6307\u7684\u5c71\u5cf0\u9ad8 $h$ \uff0c\u5219\u4e0d\u5305\u62ec\u7a7a\u5fc3\u84dd\u70b9\u7684\u533a\u95f4\u6709 $h-\\max(h-a_i,low)$ \uff0c\n\u5176\u4e2d $low$ \u6307\u524d\u9762\u6700\u4f4e\u7684\u5c71\u8c37\u3002\n\n\u8fd9\u662f\u7b2c\u4e00\u7c7b\u8d21\u732e\uff0c\u8003\u8651\u84dd\u70b9\u7684\u8d21\u732e\u3002\n\n\u518d\u770b\u4e00\u5f20\u56fe\n\n![3](https://cdn.luogu.com.cn/upload/image_hosting/0mecqfnb.png)\n\n\n\u6240\u6709\u7a7a\u5fc3\u84dd\u70b9\u90fd\u5728\u5c71\u8c37\u91cc\n\n\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u770b\u6bcf\u4e00\u4e2a\u5c71\u8c37\uff0c\u5411\u53f3\u626b\u5230\u5f53\u524d\u8003\u8651\u7684\u4e0b\u5761\u90fd\u6ca1\u6709\u963b\u62e6\uff0c\u5373\u7942\u540e\u9762\u5c71\u8c37\u7684\u6d77\u62d4\u90fd\u6bd4\u7942\u9ad8\uff0c\u4e14\u6d77\u62d4 $\\ge$ \u4e0b\u5761\u53f3\u7aef\u70b9\uff0c\u90a3\u4e48\u7942\u6709 $1$ \u7684\u7b2c\u4e8c\u7c7b\u8d21\u732e\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u80fd\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a\u5355\u589e\u7684\u6808\uff0c\u6808\u5185\u7684\u5143\u7d20\u662f\u53ef\u80fd\u505a\u4e8c\u7c7b\u8d21\u732e\u7684\u70b9\uff0c\u5373\u626b\u8fc7\u7684\u90e8\u5206\u4e2d\u540e\u9762\u5c71\u8c37\u7684\u6d77\u62d4\u90fd\u6bd4\u81ea\u8eab\u9ad8\u7684\u5c71\u8c37\u3002\n\n\u626b\u5230\u4e00\u4e2a\u5143\u7d20\uff0c\u5148\u7b97\u4e8c\u7c7b\u8d21\u732e\u7b54\u6848\uff0c\u5373\u6808\u5185\u6d77\u62d4 $\\ge h-a_i$ \u7684\u5143\u7d20\u3002\n\n\u518d\u7ef4\u62a4\u5355\u8c03\u6808\uff0c\u53d1\u73b0\u6b63\u597d\u9700\u8981\u5f39\u6389 $> h-a_i$ \u7684\u5143\u7d20\u3002\n\n\u6ce8\u610f\u8981\u628a\u6d77\u62d4\u76f8\u7b49\u7684\u70b9\u538b\u8d77\u6765\uff0c\u5426\u5219\u590d\u6742\u5ea6\u6709\u95ee\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$ \u3002\n\n---\n\n$\\color{orange}{code}\\color{green}{:}$\n\n```cpp\n//h[i]\u5373\u6d77\u62d4\u3002\n//st[*].fs:\u6d77\u62d4\u3002\n//st[*].sc:\u8fd9\u4e2a\u6d77\u62d4\u70b9\u7684\u4e2a\u6570\u3002\nint ans=0;\nfor(int i=1;i<n;i+=2){\n\tans+=h[i]-max(h[i]-a[i+1],st[1].fs);\n\twhile(top>0&&st[top].fs>h[i+1]){\n\t\tif(top>1)ans+=st[top].sc;//\u6ce8\u610flow\u8fd9\u4e2a\u70b9\n\t\ttop--;\n\t}\n\tif(st[top].fs!=h[i+1])st[++top]=pii(h[i+1],1);\n\telse ans+=st[top].sc,st[top].sc++;\n}\nprintf(ans);\n```\n",
        "postTime": 1632992148,
        "uid": 157677,
        "name": "maruize",
        "ccfLevel": 0,
        "title": "CF1556C Compressed Bracket Sequence"
    },
    {
        "content": "\u6574\u4e00\u4e2a $\\texttt{O}(n)$ \u7684\u9898\u89e3\u5427\u3002\n\n\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff1a\n\n1. \u53bb\u6389\u6700\u5de6\u8fb9\u7684 `'('` \u548c\u6700\u53f3\u8fb9\u7684 `')'` \u4ecd\u662f\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\uff08\u5047\u8bbe\u7a7a\u4e32\u4e5f\u5408\u6cd5\uff09\uff0c\u6bd4\u5982 `(()()((())))`\uff1b\n2. \u53bb\u6389\u6700\u5de6\u8fb9\u7684 `'('` \u548c\u6700\u53f3\u8fb9\u7684 `')'` \u4e0d\u662f\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 `()((())())`\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u7b2c\u4e00\u79cd\u62ec\u53f7\u5e8f\u5217\u662f\u201c\u72ec\u7acb\u7684\u201d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5979\u4e0d\u80fd\u88ab\u5206\u88c2\u6210\u4e24\u4e2a\u5408\u6cd5\u62ec\u53f7\u4e32\uff1b\u800c\u7b2c\u4e8c\u79cd\u62ec\u53f7\u5e8f\u5217\u662f\u201c\u4e0d\u72ec\u7acb\u7684\u201d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5979\u80fd\u88ab\u5206\u88c2\u6210\u4e24\u4e2a\u5408\u6cd5\u7684\u62ec\u53f7\u4e32\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u4e24\u79cd\u5b57\u7b26\u4e32\u5206\u5f00\u8003\u8651\u3002\u5f88\u663e\u7136\uff0c\u6bcf\u4e2a `')'`\uff0c\u53ea\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u62ec\u53f7\u4e32\u7684\u53f3\u7aef\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u7edf\u8ba1\u8fd9\u90e8\u5206\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff1a\u8dd1\u4e00\u904d\u6808\uff0c\u548c\u5e73\u65f6\u4e00\u6837\uff0c\u53ea\u662f\u6279\u91cf\u5730\u538b\u6808\u548c\u5f39\u6808\uff0c\u8bb0\u5f55\u5f39\u51fa\u7684 `'('` \u6b21\u6570\uff0c\u5373\u662f\u8fd9\u90e8\u5206\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u975e\u72ec\u7acb\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8003\u8651\u5728\u8ba1\u7b97\u72ec\u7acb\u4e32\u7684\u65f6\u5019\u540c\u65f6\u7edf\u8ba1\u4ed6\u4eec\uff0c\u4e0d\u96be\u53d1\u73b0\u5728\u5bf9\u4e8e\u4e00\u4e2a\u72ec\u7acb\u4e32\uff0c\u5c06\u6b64\u4e32\u4f5c\u4e3a\u771f\u540e\u7f00\u7684\u975e\u72ec\u7acb\u4e32\u4e2a\u6570\u5373\u4f7f\u4ed6\u5de6\u8fb9\u7684\u8fde\u7eed\u72ec\u7acb\u4e32\u4e2a\u6570\u5373\u53ef\uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u8981\u53d1\u73b0\u51fa\u73b0 `)(` \u7684\u65f6\u5019\u624d\u4f1a\u6709\u975e\u72ec\u7acb\u4e32\u51fa\u73b0\uff0c\u6211\u4eec\u8003\u8651\u5728\u6808\u4e2d\u52a0\u6807\u8bb0\uff0c\u8bb0\u5f55\u4e00\u4e0b\u51fa\u73b0 `)(` \u7684\u65f6\u5019\u5176\u5de6\u8fb9\u8fde\u7eed\u72ec\u7acb\u4e32\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u8bdd\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u6808\uff0c\u6808\u4e2d\u538b\u5165 `pair`\uff0c$\\left<x,1\\right>$ \u8868\u793a\u6709 $x$ \u4e2a\u8fde\u7eed\u7684 `'('`\uff0c$\\left<x,0\\right>$ \u8868\u793a\u8fd9\u91cc\u51fa\u73b0\u4e86\u4e00\u4e2a `)(`\uff0c\u8fd9\u4e2a `)(` \u5de6\u8fb9\u8fd8\u6709\u51e0\u4e2a\u8fde\u7eed\u7684\u72ec\u7acb\u4e32\u3002\u538b\u5165\u5c31\u76f4\u63a5\u538b\u8fde\u7eed\u7684 `'('` \u5373\u53ef\uff0c\u800c\u5f39\u6808\u7684\u65f6\u5019\u9047\u5230 $\\left<x,1\\right>$\uff0c\u5c31\u7edf\u8ba1\u72ec\u7acb\u4e32\uff0c\u9047\u5230 $\\left<x,0\\right>$ \u5c31\u7edf\u8ba1\u4e00\u4e0b\u975e\u72ec\u7acb\u4e32\u3002\n\n\u8003\u8651\u5230\u5927\u90e8\u5206\u9009\u624b\u5e94\u8be5\u90fd\u4e0d\u662f\u5f88\u719f\u6089 `python`\uff0c\u7a9d\u628a\u4ee3\u7801\u505a\u4e86\u5c3d\u91cf\u8be6\u7ec6\u7684\u6ce8\u91ca\uff0c\u5e94\u8be5\u5dee\u4e0d\u591a\u80fd\u770b\u61c2\u4e86 qaq\u3002\n\n```python\nn = int(input())\naa = list(map(int, input().split())) # \u8bfb\u5165\u6570\u7ec4\nans = 0\nstk = [] # \u6808\nfor i in range(n): # [0, n)\n  if not stk: # \u6808\u975e\u7a7a\n    stk.append([0, 1]) # push\n  if i & 1:\n    while aa[i] and stk:\n      if stk[-1][1] == 0:\n        stk.pop()\n      if stk:\n        now = stk.pop()\n        sub = min(now[0], aa[i])\n        aa[i] -= sub\n        now[0] -= sub\n        ans += sub\n        if now[0]:\n          stk.append(now)\n        if stk and stk[-1][1] == 0:\n          ans += stk[-1][0]\n    if aa[i]:\n      stk.append([0, 1])\n    else:\n      if not stk:\n        stk.append([0, 0])\n      if stk[-1][1] == 0:\n        stk[-1][0] += 1\n      else:\n        stk.append([1, 0])\n  else:\n    if stk[-1][1] == 0:\n      stk.append([0, 1])\n    stk[-1][0] += aa[i]\nprint(ans)\n```",
        "postTime": 1630655509,
        "uid": 84088,
        "name": "pufanyi",
        "ccfLevel": 7,
        "title": "CF1556C Compressed Bracket Sequence"
    },
    {
        "content": "$n\\le 1000$\uff0c\u8003\u8651\u7528 $n^2$ \u7b97\u6cd5\u3002\n\n\u679a\u4e3e\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u62ec\u53f7\u5206\u522b\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u4e2d\u95f4\u7684\u90e8\u5206\u5df2\u7ecf\u88ab\u786e\u5b9a\u4e86\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u7aef\u70b9\u53d6\u5728\u54ea\u91cc\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4826zj41.png)\n\n\u5982\u4e0a\u56fe\u5de6\u53f3\u7aef\u70b9\u6709\u4e09\u79cd\u53d6\u6cd5\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u7684\u6761\u4ef6\uff1a\n\n1. \u5de6\u53f3\u62ec\u53f7\u6570\u91cf\u76f8\u7b49\uff1b\n2. \u4efb\u4f55\u4f4d\u7f6e\u5de6\u8fb9\u7684\u5de6\u62ec\u53f7\u6570\u91cf\u4e0d\u5c0f\u4e8e\u53f3\u62ec\u53f7\u6570\u91cf\u3002\n\n\u6211\u4eec\u56fa\u5b9a\u5de6\u7aef\u70b9\uff0c\u6bcf\u6b21\u5411\u53f3\u6269\u5c55\uff0c\u540c\u65f6\u7b97\u51fa\u6700\u5de6\u8fb9\u7aef\u70b9\u81f3\u5c11\u9009\u591a\u5c11\u4e2a\u624d\u80fd\u6ee1\u8db3\u6761\u4ef6 $2$\u3002\n\n\u518d\u7ef4\u62a4\u4e00\u4e2a\u5de6\u53f3\u62ec\u53f7\u7684\u6570\u91cf\u5dee\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u7b97\u51fa\u80fd\u9009\u591a\u5c11\u4e2a\u4e86\u3002\n\n\u4ee3\u7801\u89c1 [link](https://codeforces.com/contest/1556/submission/127356816)\u3002",
        "postTime": 1630371130,
        "uid": 171487,
        "name": "cmll02",
        "ccfLevel": 8,
        "title": "awa"
    },
    {
        "content": "\u7eaa\u5ff5\u62ff\u5230\u6700\u4f18\u89e3\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u9996\u5148\u8fd9\u9898\u6211\u4eec\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u60f3\u6cd5\uff1a\u8bbe\u4e00\u4e2a $sum$ \u8868\u793a\u5f53\u524d\u6709\u591a\u5c11\u4e2a\u5de6\u62ec\u53f7\u672a\u5339\u914d\u3002\u5f53\u6211\u4eec\u5230\u4e00\u4e2a\u5947\u6570\u4f4d\u7f6e\u65f6 $sum$ \u52a0\u4e0a $c_i$ ,\u5426\u5219$sum$ \u51cf\u53bb $c_i$\uff0c$ans$ \u52a0\u4e0a $c_i$\u3002\n\n\u4f46\u8fd9\u6837\u6709\u4e00\u79cd\u60c5\u51b5\u6211\u4eec\u5c31\u4f1a\u7b97\u6f0f\u3002\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217 $ \\text{()()}$\uff0c\u6309\u7167\u6211\u4eec \u4e0a\u9762\u7684\u7b97\u6cd5\u5f97\u5230\u7684 \u7b54\u6848\u662f $2$\uff0c\u4f46\u5b9e\u9645\u6709  $ \\text{()}$\u3001$ \\text{()}$\u3001$ \\text{()()}$ \u8fd9\u4e09\u4e2a\u5408\u6cd5\u5e8f\u5217\u3002\n\n\u4e3a\u793e\u4e48\u4f1a\u9519\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u5728\u7528\u4e0a\u9762\u7b97\u6cd5\u7684\u65f6\u5019\u9ed8\u8ba4\u8ba1\u7b97\u7684\u5e8f\u5217\u90fd\u662f\u9996\u5c3e\u914d\u5bf9\u7684\u5373\u7c7b\u4f3c  $\\text{(s)}$ \u8fd9\u6837\u7684\u5e8f\u5217\uff0c\u6211\u4eec\u6f0f\u6389\u4e86$\\text{(s)(s)}$ \u8fd9\u6837\u7684\u5e8f\u5217\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u8bbe\u4e00\u4e2a\u6570\u7ec4 $f$\uff0c$f_i$ \u8868\u793a**\u4ee5 $i$ \u7ed3\u5c3e\u7684\u5408\u6cd5\u5e8f\u5217**\uff0c\u5373\u628a $c_i$ \u4e2a\u53f3\u62ec\u53f7\u90fd\u5339\u914d\u5b8c\u540e\uff0c\u6784\u6210\u7684\u5408\u6cd5\u5e8f\u5217\u6570\u5c31\u4e3a $f_i$\uff0c\u6bcf\u6b21\u66f4\u65b0 $ans$ \u7684\u65f6\u5019\u518d\u52a0\u4e0a $f_i$ \u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\u8bbe $pre$ \u4e3a\u4e0e $c_i$ \u4e2d\u6700\u540e\u4e00\u4e2a\u62ec\u53f7\u5339\u914d\u7684\u4f4d\u7f6e,\u82e5 $c_i$ \u6ca1\u7528\u5b8c\u5219\u4e0d\u66f4\u65b0 \n$$\n\t\n  f_i = \\begin{cases}\nf_{\\text{pre}}+1 & \\text{pre}>0\\\\\n0 & \\text{otherwise.}\n\\end{cases}\n$$\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\u65f6\u95f4 \n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=1e3+5;\nll ans,f[maxn];\nint n,tot;\nint c[maxn],st[maxn];//\u5f00\u4e2a\u6808\u6765\u8bb0\u5f55\u8fd8\u6709\u5de6\u62ec\u53f7\u7684\u4f4d\u7f6e\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&c[i]);\n\tfor(int i=1;i<=n;i++){\n\t\tif(i&1)\n\t\t\tst[++tot]=i;\n\t\telse{\n\t\t\tint las=0;\n\t\t\tfor(int j=tot;j>=1;j--){\n\t\t\t\tif(c[i]>=c[st[j]]){\n\t\t\t\t\tlas=st[j]-1;//las\u4f1a\u88ab\u4e0d\u65ad\u66f4\u65b0\uff0c\u76f4\u5230c[i]\u88ab\u51cf\u52300\u3002\n\t\t\t\t\tans+=c[st[j]]+f[st[j]-1];\n\t\t\t\t\tc[i]-=c[st[j]];\n\t\t\t\t\tc[st[j]]=0;\n\t\t\t\t\t--tot;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans+=c[i];\n\t\t\t\t\tc[st[j]]-=c[i];\n\t\t\t\t\tc[i]=las=0;//\u5982\u679c\u5728\u5339\u914d\u7684\u65f6\u5019\uff0cpre\u8fd8\u6709i\u6ca1\u4e86\uff0c\u6b64\u65f6\u4e0d\u80fd\u4ecef[las]\u8f6c\u79fb\u8fc7\u6765\n\t\t\t\t\tif(!c[st[j]])\n\t\t\t\t\t\t--tot;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!c[i])\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(!c[i])\n\t\t\t\tf[i]=f[las]+1;//\u5982\u679c\u53f3\u62ec\u53f7\u90fd\u7528\u5b8c\u4e86\u5c31\u66f4\u65b0f\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1636091371,
        "uid": 362627,
        "name": "frank15",
        "ccfLevel": 0,
        "title": "CF1556C Compressed Bracket Sequence\u9898\u89e3"
    },
    {
        "content": "# \u533a\u95f4DP\u89e3\u6cd5\n\n\u8003\u8651\u4e24\u4e2a DP \u6570\u7ec4\uff1a\n\n- $\\text{open}[l][r]$ \u6570\u7ec4\u8868\u793a\u7531\u533a\u95f4 $[l,r]$ \u7ec4\u6210\u7684\u62ec\u53f7\u5e8f\u5217\u8fd8\u9700\u8981\u591a\u5c11\u4e2a \"(\" \u624d\u80fd\u4f7f\u5176\u533a\u95f4\u5185\u6240\u6709 \")\" \u90fd\u95ed\u5408\u3002\n- $\\text{close}[l][r]$ \u6570\u7ec4\u8868\u793a\u7531\u533a\u95f4 $[l,r]$ \u7ec4\u6210\u7684\u62ec\u53f7\u5e8f\u5217\u8fd8\u9700\u8981\u591a\u5c11\u4e2a \")\" \u624d\u80fd\u4f7f\u5176\u533a\u95f4\u5185\u6240\u6709 \"(\" \u90fd\u95ed\u5408\u3002\n\n\u6211\u4eec\u8003\u8651\u533a\u95f4 $[l,r]$ \u548c $[l + 1,r]$\u7684\u8f6c\u79fb\u5173\u7cfb\uff1a\n\n1. \u5982\u679c $l$ \u662f\u5947\u6570\uff0c\u5219\u5bf9 $\\text{open}$ \u6709\u8d21\u732e\uff1a\n\n- \u5982\u679c $\\text{arr}[l] \\geq \\text{open}[l + 1][r]$ \uff0c\u90a3\u4e48 $\\text{arr}[l]$ \u80fd\u95ed\u5408\u6240\u6709\u7684 $\\text{open}[l + 1][r]$\uff0c\u540c\u65f6\u8fd8\u8981\u5c06\u591a\u4e8e\u7684\u7b97\u8fdb $\\text{close}$ \u4e2d\uff0c\u5373 $\\text{open}[l][r] = 0,\\text{close}[l][r] = \\text{close}[l + 1][r] + \\text{arr}[l] - \\text{open}[l + 1][r]$\u3002\n- \u5982\u679c $\\text{arr}[l] \\lt \\text{open}[l + 1][r]$ \uff0c\u90a3\u4e48 $\\text{arr}[l]$ \u5c31\u4e0d\u80fd\u5b8c\u5168\u95ed\u5408$\\text{open}[l + 1][r]$\uff0c\u5373 $\\text{open}[l][r] = \\text{open}[l + 1][r] - \\text{arr}[l],\\text{close}[l][r] = \\text{close}[l + 1][r]$\u3002\n\n2. \u5982\u679c\u5982\u679c $l$ \u662f\u5076\u6570\uff0c\u5219\u5bf9 $\\text{open}$ \u65e0\u8d21\u732e\uff0c\u6b64\u65f6 $\\text{close}[l][r] = \\text{close}[l + 1][r],\\text{open}[l][r] = \\text{open}[l + 1][r] + \\text{arr}[l]$\n\n\u4e4b\u540e\uff0c\u679a\u4e3e $l$ \u548c $r$ \uff0c\u4f7f\u5f97 $l$ \u662f\u5947\u6570\uff0c $r$ \u662f\u5076\u6570\u3002\u8003\u8651 $l,r$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff1a\n\n\u5982\u679c$\\text{arr}[l] \\geq open[l + 1][r - 1]$ \u5e76\u4e14 $\\text{arr}[r] \\geq close[l + 1][r - 1]$ \uff0c\u90a3\u4e48\u8bf4\u660e\u8fb9\u754c\u6709\u8db3\u591f\u7684\u62ec\u53f7\u5bf9\u53bb\u95ed\u5408\u533a\u95f4\u5185\u7684\u62ec\u53f7\u5bf9\uff0c\u6b64\u65f6\u6211\u4eec\u627e\u5230\u4e86\u6700\u5c0f\u7684\u8fb9\u754c\u3002\u4e4b\u540e\u8ba1\u7b97\u6700\u5927\u6269\u5c55\u5373\u53ef\u3002\n\n```cpp\nans += min(arr[r] - close[l + 1][r - 1], arr[l] - open[l + 1][r - 1]);\n```\n\n\u6700\u540e\u8fd8\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u975e\u7a7a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXT = 1005;\n\nll arr[MAXT];\nint n;\nll open[MAXT][MAXT];\nll close[MAXT][MAXT];\n\nvoid solve()\n{\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n    {\n        cin >> arr[i];\n    }\n\n    for (int len = 1; len <= n; len++)\n        for (int st = 1; st + len - 1 <= n; st++)\n        {\n            int ed = st + len - 1;\n            if (st & 1)\n            {\n                if (arr[st] >= open[st + 1][ed])\n                {\n                    open[st][ed] = 0;\n                    close[st][ed] = close[st + 1][ed] + arr[st] - open[st + 1][ed];\n                }\n                else\n                {\n                    close[st][ed] = close[st + 1][ed];\n                    open[st][ed] = open[st + 1][ed] - arr[st];\n                }\n            }\n            else\n            {\n                close[st][ed] = close[st + 1][ed];\n                open[st][ed] = open[st + 1][ed] + arr[st];\n            }\n        }\n    ll ans = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j < i; j++)\n        {\n            if (!(i & 1) && (j & 1) && close[j + 1][i - 1] <= arr[i] && open[j + 1][i - 1] <= arr[j])\n            {\n                ans += min(arr[i] - close[j + 1][i - 1], arr[j] - open[j + 1][i - 1]);\n                if (close[j + 1][i - 1] != 0 || open[j + 1][i - 1] != 0)\n                    ans++;\n            }\n        }\n    }\n    cout << ans << endl;\n}\n\nint main()\n{\n    solve();\n    return 0;\n}\n```",
        "postTime": 1630654847,
        "uid": 94887,
        "name": "LoveLonelyTime",
        "ccfLevel": 0,
        "title": "CF1556C\uff1a\u533a\u95f4DP"
    },
    {
        "content": "CF1556C Compressed Bracket Sequence \u9898\u89e3\n\n>\u9898\u89e3\u4e2d\u542b\u56fe\u7247\uff0c\u4ee5\u8ba4\u771f\u7ed8\u5236\uff0c\u611f\u89c9\u53ef\u4ee5\u770b\u61c2\u3002\n\n\u60f3\u5fc5 CF \u7684\u5b98\u65b9\u9898\u89e3\u5e76\u4e0d\u662f\u90a3\u4e48\u9192\u76ee\uff0c\u5e0c\u671b\u60a8\u53ef\u4ee5\u5728\u8fd9\u770b\u61c2\u3002(~~\u5f53\u7136\u5bf9\u4e8e\u90e8\u5206\u4eba\u6765\u8bf4\uff0c\u8fd9\u9898\u662f\u90a3\u4e48\u7684\u663e\u7136~~\n\n\u9996\u5148\u4e00\u4e2a\u663e\u773c\u7684\u6027\u8d28\u662f\u4efb\u4f55\u5e8f\u5217\u6570\u91cf\u90fd\u4e0d\u4e3a\u96f6\uff0c\u8fd9\u4e2a\u8868\u660e\u6bcf\u4e00\u5bf9\u5de6\u53f3\u62ec\u53f7\u5e8f\u5217\u81f3\u5c11\u4ea7\u751f\u4e00\u7684\u8d21\u732e\u3002\n\n\u6b64\u65f6\u5047\u8bbe\u7ed9\u51fa $c_x$ \u7684\u5de6\u62ec\u53f7\uff0c$c_y$ \u7684\u53f3\u62ec\u53f7\u3002\u8981\u6c42 $c_x>c_y$ \uff0c\u5bf9\u4e8e\u8fd9\u6570\u5bf9 $(x,y)$ \u4ea7\u751f\u7684\u62ec\u53f7\u4e00\u5b9a\u662f\u5305\u542b\u5173\u7cfb\u5373\uff1a$((()))$ \u7c7b\u4f3c\u8fd9\u6837\uff0c\u53ea\u4e0d\u8fc7\u5de6\u62ec\u53f7\u591a\u4e86 $c_x-c_y$ \u4e2a\u3002\n\n\u6211\u4eec\u8bbe\u591a\u7684\u4e3a $res$\uff0c\u8003\u8651 $res$ \u53ef\u4ea7\u751f\u8d21\u732e\u7684\u6240\u6709\u60c5\u51b5\n\n- \u663e\u7136\u4e0d\u80fd\u518d\u5f53\u524d\u6570\u5bf9 $(x,y)$ \u4ea7\u751f\u8d21\u732e\n- \u5bf9\u540e\u9762\u65b0\u7684\u6570\u5bf9\u4e14\u53f3\u62ec\u53f7\u591a\u7684\u4e0e\u4e4b\u5339\u914d\u4ea7\u751f\u8d21\u732e\n\n\u5982\u4e0b\u56fe\u4e3a\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sr6ng6qn.png)\n\n\u6b64\u65f6\u7684\u5de6\u62ec\u53f7\u8dd1\u53bb\u548c\u540e\u9762\u7684\u53f3\u62ec\u53f7\u5339\u914d\uff0c\u8fd9\u610f\u5473\u7740\u4ed6 **\u8de8\u8fc7\u4e86** \u81f3\u5c11\u4e24\u4e2a\u6570\u5bf9\uff0c\u5373\uff1a`(()) ()` \uff0c\u6b64\u65f6\u4f1a\u4ea7\u751f**\u989d\u5916\u7684\u7ec4\u5408\u8d21\u732e**\u3002\n\n**\u5982\u4f55\u7edf\u8ba1\u7ec4\u5408\u8d21\u732e\uff1f**\n\n\u7ecf\u89c2\u5bdf\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4f4d\u7f6e $i$ \u6700\u591a\u4ea7\u751f $n-i$ \u4e2a\u7ec4\u5408\u8d21\u732e\u3002**\u5224\u65ad\u7684\u6761\u4ef6\u662f\uff1a** \u6bcf\u5f53\u4e00\u4e2a\u5de6\u62ec\u53f7\u8de8\u8d8a\u4e86\u81f3\u5c11\u4e24\u4e2a\u6570\u5bf9\u5e76\u4e14\u53bb\u548c\u4e00\u4e2a**\u65b0**\u7684\u672a\u5230\u8fbe\u8fc7\u7684\u6570\u5bf9\u53f3\u62ec\u53f7\u5339\u914d\u65f6\uff0c\u4ea7\u751f\u4e00\u7684\u7ec4\u5408\u8d21\u732e\u3002\n\n\u6709\u70b9\u7ed5\uff0c\u91cd\u70b9\u662f\u8de8\u8d8a\u548c\u65b0\u7684\u6570\u5bf9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\u5bf9\u7684\u5de6\u62ec\u53f7\uff0c\u4f9d\u6b21\u5f80\u540e\u770b\u80fd\u4ea7\u751f\u591a\u5c11\u7ec4\u5408\u8d21\u732e\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n**\u4ee3\u7801\u7ec6\u8282**\n\n\u8bf7\u5148\u770b\u8fc7\u4ee3\u7801\u3002\n\n ```c\n int res=a[i]-1;\n ```\n\n$-1$ \u662f\u4fdd\u8bc1\u5728\u5c5e\u4e8e\u81ea\u5df1\u7684\u6570\u5bf9\u65f6\uff0c\u4e0d\u4ea7\u751f\u7ec4\u5408\u8d21\u732e\uff0c\u56e0\u4e3a\u4e0b\u9762\u7684\u64cd\u4f5c\u662f\u4e00\u76f4\u8ba1\u7b97\u5f53\u524d\u6570\u5bf9\u7684\u5de6\u62ec\u53f7\u548c\u540e\u9762\u6570\u5bf9\u7684\u53f3\u62ec\u53f7\u4ea7\u751f\u7684\u7ec4\u5408\u8d21\u732e\uff0c\u5bf9\u4e8e\u81ea\u5df1\u7684\u5de6\u53f3\u62ec\u53f7\u5339\u914d\u65f6\u4e0d\u4ea7\u751f\u7ec4\u5408\u8d21\u732e\uff0c\u6240\u4ee5 $-1$ \u76f8\u4e92\u62b5\u6d88\u6389\u3002\n\n```c\nans+=max(0ll,res-max(0ll,tot-a[j])+1ll);\n```\n\nAC \u4ee3\u7801\uff1a\n\n```c\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define int long long\nusing namespace std;\nconst int B=2000;\nint a[B];\nint n;\nint read() {int x;scanf(\"%lld\",&x); return x;}\nsigned main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t}\n\tint ans=0;\n\tfor (int i=1;i<=n;i+=2)\n\t{\n\t\tint res=a[i]-1;\n\t\tint tot=a[i];\n\t\tfor (int j=i+1;j<=n;j+=2)\n\t\t{\n\t\t\tans+=max(0ll,res-max(0ll,tot-a[j])+1ll);\n\t\t\ttot-=a[j];\n\t\t\tif (tot<0) break;\n\t\t\tres=min(tot,res);\n\t\t\ttot+=a[j+1];\n\t\t}\n\t}\n\tprintf(\"%lld\",ans);\n} \n```\n\u4e5f\u8bb8\u6211\u5217\u7684\u6027\u8d28\u6ca1\u6709\u5f88\u597d\u7684\u878d\u5408\u5728\u4e00\u8d77\u4f7f\u5f97\u8bfb\u8005\u80fd\u591f\u61c2\u7684\u663e\u7136\uff0c\u4f46\u662f\u6bcf\u4e00\u6761\u6027\u8d28\u90fd\u662f\u6709\u7528\u7684\uff0c\u5982\u679c\u4e0d\u61c2\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u7406\u89e3\u8fd9\u4e9b\u6027\u8d28\u3002\n",
        "postTime": 1630372142,
        "uid": 230808,
        "name": "Zxsoul",
        "ccfLevel": 4,
        "title": "CF1556C Compressed Bracket Sequence \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1556C)\n\n-----------\n\n#### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_n$\uff0c\u5947\u6570\u4f4d\u4ee3\u8868 ```(```\uff0c\u5076\u6570\u4e3a\u4ee3\u8868 ```)```\u3002\n\u6570\u91cf\u5373\u4e3a $a_i$ \u7684\u6570\u503c\u5927\u5c0f\u3002\u6c42\u5408\u6cd5\u7684\u62ec\u53f7\u8fde\u7eed\u5b50\u5e8f\u5217\u6709\u591a\u5c11\u3002\n\n---------\n#### \u5206\u6790\n\n~~\u62ec\u53f7\u6811\u7684\u597d\u5144\u5f1f~~\u3002\n\n\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a ```)```\uff1a\n\n- \u5982\u679c\u4e0e\u5176\u76f8\u90bb\u7684 ```(``` \u7684\u6570\u91cf\u5927\u4e8e\u5b83\uff0c\u5373 ```...((())....``` \u7684\u60c5\u51b5\u3002\u4ea7\u751f\u7684\u8d21\u732e\u662f ```)``` \u7684\u6570\u91cf\u3002\n- \u5982\u679c\u4e0e\u5176\u76f8\u90bb\u7684 ```(``` \u7684\u6570\u91cf\u7b49\u4e8e\u5b83\uff0c\u5373 ```...((()))...``` \u7684\u60c5\u51b5\u3002\u4ea7\u751f\u7684\u8d21\u732e\u662f ```)``` \u7684\u6570\u91cf\u52a0\u4e0a\u4e0e\u8be5\u5408\u6cd5\u62ec\u53f7\u4e32\u76f8\u90bb\u7684\u5408\u6cd5\u62ec\u53f7\u4e32\u7684\u6570\u91cf\u3002\u5728\u521a\u624d\u7684\u4f8b\u5b50\u4e2d\uff0c\u5de6\u8fb9\u7684\u7701\u7565\u53f7\u6709\u53ef\u80fd\u4e3a ```..()()((()))...```\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u5408\u6cd5\u62ec\u53f7\u4e32\u76f8\u90bb\u7684\u5408\u6cd5\u62ec\u53f7\u4e32\u7684\u6570\u91cf\u4e3a $3$\u3002\n- \u5982\u679c\u4e0e\u5176\u76f8\u90bb\u7684 ```(``` \u7684\u6570\u91cf\u5c0f\u4e8e\u5b83\uff0c\u5373 ```...(()))....``` \u7684\u60c5\u51b5\u3002\u4ea7\u751f\u7684\u8d21\u732e\u4e3a ```(``` \u7684\u6570\u91cf\u52a0\u4e0a\u4e0e\u8be5\u5408\u6cd5\u62ec\u53f7\u4e32\u76f8\u90bb\u7684\u5408\u6cd5\u62ec\u53f7\u4e32\u7684\u6570\u91cf\u3002\u7406\u7531\u540c\u4e0a\u3002\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\u6b64\u65f6\u4f9d\u65e7\u5269\u4e0b\u82e5\u5e72 ```)```\u6ca1\u6709\u5339\u914d\uff0c\u4f46\u662f\u5bb9\u6613\u53d1\u73b0\u7b2c\u4e00\u79cd\u60c5\u51b5\u4f1a\u5269\u4e0b\u82e5\u5e72 ```(```\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5f80\u524d\u679a\u4e3e ```(``` \u91cd\u590d\u4ee5\u4e0a\u4e09\u79cd\u60c5\u51b5\u5373\u53ef\u3002\n\n\u6ce8\u610f\u7ef4\u62a4\u5408\u6cd5\u62ec\u53f7\u4e32\u76f8\u90bb\u7684\u5408\u6cd5\u62ec\u53f7\u4e32\u7684\u6570\u91cf\u3002\n\n### $\\texttt{Code}$\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\nconst int N = 1e3 + 10;\n\nint a[N];\nlong long sum[N];\n\nint main()\n{\n    freopen(\"aa.in\",\"r\",stdin);\n    int n; scanf(\"%d\",&n);\n    for(int i = 1;  i <= n; i++)\n        scanf(\"%d\",&a[i]);\n    \n    long long ans = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        if(i & 1) continue; int tot = a[i];\n        for(int j = i - 1; j >= 1; j -= 2)\n        {\n            if(!tot) break;\n            if(!a[j]) continue;\n            if(tot < a[j]) \n            {\n                ans += tot;\n                a[j] -= tot;\n                sum[i]++;break;\n            }\n            if(tot == a[j])\n            {\n                ans += tot + sum[j - 1];\n                sum[i] += 1 + sum[j - 1];\n                a[j] = 0;break;\n            }\n            // tot > a[j]\n            tot -= a[j]; \n            ans += a[j] + sum[j - 1];\n            a[j] = 0;\n        }\n    }\n    printf(\"%lld\",ans); return 0;\n}\n```",
        "postTime": 1630330026,
        "uid": 232191,
        "name": "NXYorz",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1556C \u3010Compressed Bracket Sequence\u3011"
    },
    {
        "content": "\u6765\u4e00\u7bc7\u5355\u8c03\u6808\u505a\u6cd5\u7684 $O(n)$ \u9898\u89e3\u3002\n\n\u6211\u4eec\u628a\u8fde\u7eed $a$ \u4e2a\u5de6\u62ec\u53f7\u770b\u505a\u4e0a\u5347 $a$ \u4e2a\u5355\u4f4d\u957f\u5ea6\u7684\u6298\u7ebf\uff1b\u628a\u8fde\u7eed $b$ \u4e2a\u53f3\u62ec\u53f7\u770b\u505a\u4e0b\u964d $b$ \u4e2a\u5355\u4f4d\u957f\u5ea6\u7684\u6298\u7ebf\u3002\u8fd9\u6837\u5c31\u628a $c$ \u5e8f\u5217\u8f6c\u4e3a\u4e86\u4e00\u5f20\u8fde\u7eed\u7684\u6709 $n+1$ \u4e2a\u62d0\u70b9\u7684\u6298\u7ebf\u56fe\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u5de6\u8fb9\u662f\u4e0b\u964d\u6298\u7ebf\u53f3\u8fb9\u662f\u4e0a\u5347\u6298\u7ebf\u7684\u62d0\u70b9\u79f0\u4e3a**\u5c71\u8c37**\uff0c\u5176\u4f59\u62d0\u70b9\u79f0\u4e3a**\u5c71\u5cf0**\u3002\u5982\u679c\u4e24\u4e2a\u70b9\u843d\u5728\u6298\u7ebf\u4e0a\uff0c\u4e14\u5176\u76f8\u8fde\u5f62\u6210\u7684\u7ebf\u6bb5\u6b63\u4e0b\u65b9\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\uff0c\u8fd9\u4e24\u4e2a\u70b9\u5c31\u662f**\u5339\u914d**\u7684\u3002\u6240\u6c42\u5373\u4e3a\u8fd9\u5f20\u6298\u7ebf\u56fe\u4e2d\u7684\u6240\u6709\u5339\u914d\u7684\u6570\u91cf\u3002\n\n\u663e\u7136\u5de6\u7aef\u70b9\u4e00\u5b9a\u5728\u4e0a\u5347\u6298\u7ebf\u4e0a\uff0c\u53f3\u7aef\u70b9\u4e00\u5b9a\u5728\u4e0b\u964d\u6298\u7ebf\u4e0a\u3002\u8003\u8651\u56fa\u5b9a\u53f3\u7aef\u70b9\uff0c\u8ba1\u7b97\u5de6\u7aef\u70b9\u7684\u8d21\u732e\u3002\u4ece\u5de6\u5f80\u53f3\u5904\u7406\u6bcf\u4e00\u6761\u4e0b\u964d\u6298\u7ebf\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u60f3\u8c61\u6709\u4e00\u6761\u626b\u63cf\u7ebf\u4ece\u5f53\u524d\u4e0b\u964d\u6298\u7ebf\u5bf9\u5e94\u7684\u5c71\u8c37\u5f00\u59cb\u5f80\u4e0a\u626b\uff0c\u4ee4\u5f53\u524d\u6700\u4f4e\u70b9\uff08\u5373\u6700\u4f4e\u5c71\u8c37\uff09\u7684\u9ad8\u5ea6\u4e3a $low$\uff0c\u8fd9\u6761\u4e0b\u964d\u6298\u7ebf\u662f\u4ece\u9ad8\u5ea6 $h$ \u4e0b\u964d\u81f3\u9ad8\u5ea6 $h'$\uff0c\u90a3\u4e48\u8fd9\u6761\u6298\u7ebf\u4e0a\u9ad8\u5ea6\u4f4d\u4e8e $[max(low,h'),h]$ \u7684\u70b9\u90fd\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u81f3\u5c11 $1$ \u7684\u8d21\u732e\uff0c\u5176\u4f59\u70b9\u65e0\u8d21\u732e\u3002\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u5339\u914d\u4e2d\u5de6\u7aef\u70b9\u6700\u9760\u5de6\u7684\u5339\u914d\u770b\u4e3a\u5e73\u51e1\u7684\uff0c\u5176\u4f59\u5339\u914d\u770b\u505a\u975e\u5e73\u51e1\u7684\u3002\u4e0d\u96be\u53d1\u73b0\u5e73\u51e1\u5339\u914d\u7684\u5de6\u7aef\u70b9\u8981\u4e48\u4e3a\u6700\u4f4e\u70b9\uff0c\u8981\u4e48\u4e0d\u662f\u62d0\u70b9\u3002\u800c\u975e\u5e73\u51e1\u5339\u914d\u7684\u5de6\u7aef\u70b9\u53ea\u53ef\u80fd\u4e3a\u5c71\u8c37\u3002\n\n\u5e73\u51e1\u5339\u914d\u7684\u8d21\u732e\u5373\u4e3a $[max(low,h'),h]$ \u533a\u95f4\u7684\u957f\u5ea6\u3002\u5bf9\u4e8e\u975e\u5e73\u51e1\u5339\u914d\uff0c\u53ea\u6709\u90a3\u4e9b\u6ee1\u8db3\u53f3\u8fb9\u6ca1\u6709\u66f4\u4f4e\u7684\u5c71\u8c37\u7684\u5c71\u8c37\u624d\u53ef\u80fd\u4ea7\u751f $1$ \u7684\u8d21\u732e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9ad8\u5ea6\u66f4\u4f4e\u7684\u5c71\u8c37\u4f1a\u906e\u6321\u524d\u9762\u66f4\u9ad8\u7684\u5c71\u8c37\uff0c\u90a3\u4e9b\u88ab\u906e\u6321\u7684\u5c71\u8c37\u5c31\u4e0d\u4f1a\u518d\u4ea7\u751f\u8d21\u732e\u4e86\u3002\u800c\u5bf9\u4e8e\u4e00\u4e2a\u6ca1\u88ab\u906e\u6321\u7684\u5c71\u8c37\uff0c\u5982\u679c\u5b83\u7684\u9ad8\u5ea6\u4f4d\u4e8e\u5f53\u524d\u6298\u7ebf\u7684\u9ad8\u5ea6\u8303\u56f4 $[h',h]$\uff0c\u90a3\u5b83\u4e00\u5b9a\u4f1a\u4ea7\u751f $1$ \u7684\u8d21\u732e\u3002\u8fd9\u662f\u4e00\u4e2a\u5929\u7136\u7684**\u5355\u8c03\u6808\u7ed3\u6784**\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u5904\u7406\u51fa\u5f53\u524d\u672a\u88ab\u906e\u6321\u7684\u5c71\u8c37\u3002\u7531\u4e8e\u5f53\u524d\u7684\u6298\u7ebf\u662f\u4ece $h$ \u5230 $h'$\uff0c\u90a3\u4e48\u524d\u4e00\u4e2a\u5c71\u8c37\u7684\u9ad8\u5ea6\u4e00\u5b9a\u5c0f\u4e8e $h$\uff0c\u6545\u672a\u88ab\u906e\u6321\u7684\u5c71\u8c37\u7684\u9ad8\u5ea6\u4e00\u5b9a\u90fd\u5c0f\u4e8e $h$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u770b\u6709\u591a\u5c11\u4e2a\u5c71\u8c37\u7684\u9ad8\u5ea6\u5927\u4e8e\u7b49\u4e8e $h'$\u3002\u800c $h'$ \u53c8\u6070\u597d\u662f\u6211\u4eec\u8981\u65b0\u52a0\u8fdb\u6765\u7684\u5c71\u8c37\uff0c\u6240\u4ee5\u53ef\u4ee5**\u8fb9\u5f39\u6808\u8fb9\u8ba1\u7b97\u8d21\u732e**\u3002\u590d\u6742\u5ea6 $O(n)$\u3002\u6ce8\u610f\u8981\u628a\u9ad8\u5ea6\u76f8\u540c\u7684\u5c71\u8c37\u7f29\u5728\u4e00\u8d77\uff0c\u7136\u540e\u9ad8\u5ea6\u6700\u4f4e\u7684\u5c71\u8c37\u53ef\u80fd\u4f1a\u5728\u5e73\u51e1\u5339\u914d\u548c\u975e\u5e73\u51e1\u5339\u914d\u4e2d\u90fd\u88ab\u8ba1\u7b97\u4e00\u904d\uff0c\u9700\u8981\u52a0\u4e2a\u7279\u5224\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u70b9\u4e2a\u8d5e\u518d\u8d70\u5427QAQ\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<vector>\n#include<queue>\n#include<map>\n#define pii pair<ll,int>\n#define pb push_back\n#define sml(x,y) (x=min(x,y))\n#define big(x,y) (x=max(x,y))\n#define ll long long\n#define db double\n#define fo(i,x,y) for(register int i=x;i<=y;++i)\n#define go(i,x,y) for(register int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){int x=0,fh=1; char ch=getchar(); while(!isdigit(ch)){if(ch=='-') fh=-1; ch=getchar();} while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0'; ch=getchar();} return x*fh;}\ninline void out(int *a,int l,int r){fo(i,l,r) printf(\"%d \",*(a+i));puts(\"\");}\n\nconst int N=1005;\nint a[N],top,n;\nll ans,h;\npii stk[N];\n//\u6ce8\u610f\u5f00 ll\uff01\n//\u5148\u628a\u5411\u4e0b\u7684\u6298\u7ebf\u4e0a\u7684\u6bcf\u4e2a\u70b9\u4e0e\u5b83\u80fd\u5339\u914d\u5230\u7684\u6700\u5de6\u8fb9\u7684\u70b9\u89c6\u4e3a\u4e00\u7ec4\uff0c\u5b83\u4eec\u7684\u8d21\u732e\u662f\u5e73\u51e1\u7684\n//\u540c\u65f6\u9664\u975e\u8fd9\u4e2a\u6700\u5de6\u8fb9\u7684\u70b9\u662f\u6700\u4f4e\u7684\u5c71\u8c37\uff0c\u5426\u5219\u5b83\u4eec\u4e00\u5b9a\u4e0d\u662f\u5c71\u8c37\u5904 \n//\u7ee7\u7eed\u8003\u8651\u4e0d\u5e73\u51e1\u7684\u8d21\u732e\uff0c\u663e\u7136\u662f\u6bcf\u4e2a\u6070\u597d\u5207\u5230\u626b\u63cf\u7ebf\u7684\u5c71\u8c37\u4f1a\u591a 1 \u7684\u8d21\u732e\n//\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u5c71\u8c37\u6070\u597d\u5c31\u662f\u672a\u88ab\u906e\u6321\u7684\u4e14\u9ad8\u5ea6\u5927\u4e8e\u7b49\u4e8e\u5411\u4e0b\u7684\u6298\u7ebf\u65b0\u5f62\u6210\u7684\u5c71\u8c37\u7684\u4e2a\u6570\uff0c\u800c\u8fd9\u4e9b\u4f1a\u4ea7\u751f\u8d21\u732e\u7684\u5c71\u8c37\u53c8\u4f1a\u88ab\u65b0\u5c71\u8c37\u6240\u906e\u6321\n//\u8fd9\u662f\u4e00\u4e2a\u5929\u7136\u7684\u5355\u8c03\u6808\u7ed3\u6784\uff0c\u5f39\u6808\u65f6\u5373\u53ef\u5904\u7406\u6389\u4e0d\u5e73\u51e1\u7684\u8d21\u732e \n//\u6ce8\u610f\u6700\u4f4e\u70b9\u7684\u5c71\u8c37\u53ef\u80fd\u4f5c\u4e3a \u6700\u5de6\u8fb9\u70b9 \u548c \u9ad8\u5ea6\u5927\u4e8e\u7b49\u4e8e\u65b0\u5c71\u8c37\u7684\u5c71\u8c37 \u540c\u65f6\u88ab\u8ba1\u7b97\u8d21\u732e\uff0c\u6b64\u65f6\u8981\u6392\u9664\u4e00\u79cd \n//\u8fd8\u6709\u4e00\u70b9\u662f\uff0c\u7531\u4e8e\u65b0\u5c71\u8c37\u662f\u4ece h->h-a[i]\uff0c\u6240\u4ee5\u5b83\u7684\u524d\u4e00\u4e2a\u5c71\u8c37\u7684\u9ad8\u5ea6\u4e00\u5b9a <h\uff0c\u4e0d\u4f1a\u8ba1\u5165\u4e0d\u5408\u6cd5\u7684\u5c71\u8c37 \n\nint main(){\n\tcin>>n;\n\tfo(i,1,n) a[i]=read();\n\tstk[++top].first=0;\n\tstk[top].second=1;\n\th=a[1];\n\tfo(i,2,n+1){\n\t\t//printf(\"%d,%d\\n\",i,h);\n\t\t//fo(j,1,top) printf(\"(%d,%d) \",stk[j].first,stk[j].second);puts(\"\");\n\t\tif(i&1){\t\n\t\t\twhile(top&&h<stk[top].first) ans+=stk[top].second,top--;\n\t\t\tif(!top||h!=stk[top].first) stk[++top]=make_pair(h,1);\n\t\t\telse ans+=stk[top].second,stk[top].second++;\n\t\t\th+=a[i];\n\t\t} \n\t\telse{\n\t\t\t//ans+=max(h-max(stk[1].first,h-a[i])-(stk[1].first==h-a[i]),0);\n\t\t\tif(stk[1].first>=h-a[i]) ans+=max(h-stk[1].first-1,0ll);\n\t\t\telse ans+=a[i];\n\t\t\th-=a[i];\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n/*\n3\n1 3 39\n-------------------------------------------------\n1\n*/\n```\n",
        "postTime": 1632960693,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1556C Compressed Bracket Sequence"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://codeforces.com/contest/1556/problem/C)\n\n\u4f5c\u4e3a C \u8d28\u91cf\u5f88\u9ad8\u3002\n\n#### \u5206\u6790\uff1a\n\n\u5bb9\u6613\u60f3\u5230\u679a\u4e3e\u6700\u5de6\u8fb9\u7684\u62ec\u53f7\u5728 $c$ \u4e2d\u7684\u4e0b\u6807 $l$\uff0c\u679a\u4e3e\u6700\u53f3\u8fb9\u7684\u62ec\u53f7\u5728 $c$ \u4e2d\u7684\u4f4d\u7f6e $r$\uff0c\u6ce8\u610f\u5230 $l$ \u5fc5\u987b\u4e3a\u5947\u6570\uff0c$r$ \u5fc5\u987b\u4e3a\u5076\u6570\u3002\u7136\u540e\u8ba1\u7b97 $[l,r]$ \u7684\u7b54\u6848\u3002\n\n\u9996\u5148\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5982\u679c $l=r-1$ \u90a3\u4e48\u7b54\u6848\u5e94\u8be5\u4e3a $\\min\\{c_l,c_r\\}$ \u4e2a\uff0c\u5426\u5219\u610f\u5473\u7740 $(l,r)$ \u533a\u95f4\u662f\u6709\u6570\u7684\u3002\n\n\u4e00\u4e2a\u5408\u6cd5\u62ec\u53f7\u4e32\u7684\u5b9a\u4e49\u662f\uff0c\u5982\u679c\u6211\u4eec\u628a\u5de6\u62ec\u53f7\u89c6\u4f5c $+1$\uff0c\u53f3\u62ec\u53f7\u89c6\u4f5c $-1$\uff0c\u90a3\u4e48\u5bf9\u5176\u505a\u524d\u7f00\u548c $s$\uff0c\u8bbe\u957f\u5ea6\u4e3a $n$\uff0c\u5219\u6709\uff1a\n\n- $\\forall 1\\le i\\le n,s_i \\ge 0$\u3002\n\n- $s_n=0$\u3002\n\n\u6211\u4eec\u8003\u8651\u5728 $c_l$ \u4e2d\u9009\u62e9\u82e5\u5e72\u4e2a\uff0c\u5728 $c_r$ \u4e2d\u9009\u62e9\u82e5\u5e72\u4e2a\uff0c\u4f7f\u5f97\u6700\u540e\u7684\u4e32\u6ee1\u8db3\u4e0a\u9762\u7684\u7ea6\u675f\u3002\u6ce8\u610f\u5230\u4e3a\u4e86\u4e0d\u8ba9\u7b2c\u4e00\u4e2a\u7ea6\u675f\u5931\u6548\uff0c\u6211\u4eec\u5fc5\u987b\u9009\u62e9\u82e5\u5e72\u4e2a $c_l$ \u91cc\u7684\u5de6\u62ec\u53f7\u3002\u6bd4\u5982\u8bf4 ```(((```\uff0c```))```\uff0c```((```\uff0c```))))```\u3002$l$ \u662f\u7b2c\u4e00\u4e2a\uff0c$r$ \u662f\u7b2c\u56db\u4e2a\u3002\u90a3\u4e48\u6ce8\u610f\u5230\u5fc5\u987b\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u9009\u62e9\u4e24\u4e2a\u5de6\u62ec\u53f7\u4f7f\u5f97\u5176\u540e\u9762\u7684\u6bcf\u4e2a\u524d\u7f00\u548c\u975e\u8d1f\u3002\n\n\u5177\u4f53\u5730\uff0c\u8bbe $s_{i,j}$ \u662f $[i,j]$ \u7684\u548c\uff0c$minn_{i,j}=\\min\\{s_{i,k}|i\\le k\\le j\\}$\uff0c\u90a3\u4e48\uff0c\u5728 $minn_{l+1,r-1} < 0$ \u7684\u65f6\u5019\uff0c$c_l$ \u5904\u5fc5\u987b\u9009\u62e9 $|minn_{l+1,r-1}|$ \u4e2a\u5de6\u62ec\u53f7\u3002\n\n\u7136\u540e\u6b64\u65f6\u6211\u4eec\u80fd\u8ba1\u7b97\u51fa\u5f53\u524d\u7684 $[l,r-1]$ \u7684\u548c\uff0c\u8bb0\u4e3a $sum$\uff0c\u90a3\u4e48 $c_r$ \u5904\u5fc5\u987b\u9009\u62e9  $sum$ \u4e2a\u53f3\u62ec\u53f7\u3002\n\n\u90a3\u4e48\u66f4\u65b0\u5b8c $c_l,c_r$ \u7684\u503c\u540e\uff0c\u7b54\u6848\u5c31\u662f $\\max\\{c_l,c_r\\}+1$\uff08\u8003\u8651\u66f4\u65b0\u5b8c\u540e\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u4e32\u6240\u4ee5 $+1$\uff09\u3002\n\n```\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define Max(a,b) (a>b?a:b)\n#define Min(a,b) (a<b?a:b)\n#define next Cry_For_theMoon\n#define il inline\n#define pb(x) push_back(x)\n#define is(x) insert(x)\n#define sit set<int>::iterator\n#define mapit map<int,int>::iterator\n#define pi pair<int,int>\n#define ppi pair<int,pi>\n#define pp pair<pi,pi>\n#define fr first\n#define se second\n#define vit vector<int>::iterator\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef double db;\nusing namespace std;\nconst ll MAXN=1e3+10,INF=1e18;\nll n,c[MAXN],sum[MAXN][MAXN],minn[MAXN][MAXN];\nll ans;\nll solve(ll l,ll r){\n\tif(l==r-1){\n\t\treturn min(c[l],c[r]);\n\t}\n\tll mn=minn[l+1][r-1],s=sum[l+1][r-1];\n\tl=c[l];r=c[r]; \n\tif(mn<0){\n\t\tif(l<abs(mn))return 0;\n\t\tl+=mn;\n\t\ts-=mn;\n\t}\n\tif(s<0)return 0;\n\tif(r<s)return 0;\n\tr-=s;\n\treturn min(l,r)+1;\n}\nint main(){\n\tcin>>n;\n\trep(i,1,n){\n\t\tcin>>c[i];\n\t}\n\trep(i,1,n){\n\t\trep(j,i,n){\n\t\t\tsum[i][j]=sum[i][j-1];\n\t\t\tif(odd(j))sum[i][j]+=c[j];\n\t\t\telse sum[i][j]-=c[j];\n\t\t\tif(j==i)minn[i][j]=sum[i][j];\n\t\t\telse minn[i][j]=min(minn[i][j-1],sum[i][j]);\n\t\t}\n\t}\n\trep(l,1,n){\n\t\tif(even(l))continue;\n\t\trep(r,l+1,n){\n\t\t\tif(odd(r))continue;\n\t\t\tans+=solve(l,r);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n}\n```",
        "postTime": 1630591429,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u3010CF1556C\u3011Compressed Bracket Sequence"
    }
]