[
    {
        "content": "\u8003\u8651\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u56fa\u5b9a\u53f3\u7aef\u70b9 $i$\uff0c\u8fd9\u91cc\u53ea\u8003\u8651\u6ee1\u8db3 $j<i,a_j>a_i$ \u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u5c06 $a_i$ \u7684\u503c\u57df\u7ffb\u8f6c\u540e\u518d\u505a\u4e00\u904d\u5c31\u80fd\u5f97\u5230\u6240\u6709\u60c5\u51b5\u3002\u8be2\u95ee\u5c31\u662f\u67e5\u8be2\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e $j$ \u5f97\u5230\u7684\u7b54\u6848\u7684\u540e\u7f00\u6700\u5c0f\u503c\u3002\n\n\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u80fd\u627e\u5230\u6ee1\u8db3 $j<i,a_j>a_i$ \u7684\u6700\u5927\u4f4d\u7f6e $j$\uff0c\u4f46\u4e00\u4e2a\u4e00\u4e2a\u5f80\u524d\u8df3\u627e\u51fa\u6240\u6709\u7684\u4f4d\u7f6e $j$\uff0c\u590d\u6742\u5ea6\u65e0\u6cd5\u63a5\u53d7\uff0c\u8fd8\u9700\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n\n\u8003\u8651\u5f53\u524d\u4f4d\u7f6e\u4e3a $j$\uff0c\u8981\u60f3\u4e0b\u4e00\u6b21\u627e\u5230\u7684\u4f4d\u7f6e $j'$ \u80fd\u66f4\u65b0\u7b54\u6848\uff0c\u5176\u5fc5\u987b\u6ee1\u8db3 $a_{j'}-a_i<a_j-a_{j'}$\uff0c\u56e0\u4e3a\u4f4d\u7f6e $j'$ \u66f4\u65b0\u8fc7\u4f4d\u7f6e $j$\uff0c\u8981\u66f4\u65b0\u540e\u7f00\u6700\u5c0f\u503c\u5c31\u5fc5\u987b\u6ee1\u8db3\u8fd9\u4e2a\u5f0f\u5b50\u3002\u79fb\u9879\u5f97 $a_{j'}-a_i<\\frac{1}{2}(a_j-a_i)$\uff0c\u53d1\u73b0\u5dee\u503c\u6bcf\u6b21\u51cf\u534a\uff0c\u8bbe\u503c\u57df\u4e3a $V$\uff0c\u56e0\u6b64\u5728\u9650\u5236\u4e0b\u5f80\u524d\u8df3\u7684\u5408\u6cd5\u4f4d\u7f6e\u4e2a\u6570\u4e3a $O(\\log V)$\u3002\u7b54\u6848\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u540e\u7f00\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u4e3a $O(n \\log^2 V)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 300010\n#define maxm 10000010\n#define all 1000000000\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,m,tot,root;\nint a[maxn],ans[maxn],t[maxn],ls[maxm],rs[maxm],mx[maxm];\nvector<pair<int,int> > ve[maxn];\nvoid update(int x,int v)\n{\n    while(x) t[x]=min(t[x],v),x-=lowbit(x);\n}\nint ask(int x)\n{\n    int v=all;\n    while(x<=n) v=min(v,t[x]),x+=lowbit(x);\n    return v;\n}\nvoid modify(int l,int r,int pos,int v,int &cur)\n{\n    if(!cur) cur=++tot;\n    mx[cur]=max(mx[cur],v);\n    if(l==r) return;\n    if(pos<=mid) modify(l,mid,pos,v,ls[cur]);\n    else modify(mid+1,r,pos,v,rs[cur]);\n}\nint query(int L,int R,int l,int r,int cur)\n{\n    if(!cur) return 0;\n    if(L<=l&&R>=r) return mx[cur];\n    int v=0;\n    if(L<=mid) v=max(v,query(L,R,l,mid,ls[cur]));\n    if(R>mid) v=max(v,query(L,R,mid+1,r,rs[cur]));\n    return v;\n}\nvoid clear()\n{\n    for(int i=1;i<=n;++i) t[i]=all;\n    for(int i=1;i<=tot;++i) ls[i]=rs[i]=mx[i]=0;\n    tot=root=0;\n}\nvoid work()\n{\n    clear();\n    for(int i=1;i<=n;++i)\n    {\n        int pos=query(a[i],all,0,all,root);\n        while(pos)\n        {\n            update(pos,a[pos]-a[i]);\n            pos=query(a[i],(a[i]+a[pos])/2-(~(a[i]+a[pos])&1),0,all,root);\n        }\n        modify(0,all,a[i],i,root);\n        for(int j=0;j<ve[i].size();++j)\n            ans[ve[i][j].second]=min(ans[ve[i][j].second],ask(ve[i][j].first));\n    }\n}\nint main()\n{\n    read(n);\n    for(int i=1;i<=n;++i) read(a[i]);\n    read(m);\n    for(int i=1;i<=m;++i)\n    {\n        int l,r;\n        read(l),read(r),ans[i]=all;\n        ve[r].push_back({l,i});\n    }\n    work();\n    for(int i=1;i<=n;++i) a[i]=all-a[i];\n    work();\n    for(int i=1;i<=m;++i) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1602332974,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF765F \u3010Souvenirs\u3011"
    },
    {
        "content": "~~\u6709\u672c\u4e8b\u5f3a\u5236\u5728\u7ebf\u554a~~\n\n\u8fd9\u9898\u5206\u5757\u3002\n\n\u6211\u4eec\u5bf9\u5757\u5185\u7684\u5143\u7d20\u6392\u5e8f\u3002\u7136\u540e\u9884\u5904\u7406\u51fa$f[i][j]$\u8868\u793a\u7b2c$j$\u5757\u5230$i$\u6240\u5728\u5757\u7684\u4e0a\u4e00\u4e2a\u5757\u8fd9\u90e8\u5206\uff0c\u4e0e$i$\u6240\u5728\u5757\u7684\u4ee5$i$\u7ed3\u5c3e\u7684\u8fd9\u90e8\u5206\u524d\u7f00\uff0c\u80fd\u4ea7\u751f\u7684\u6700\u5c0f\u7b54\u6848\u3002$g[i][j]$\u8868\u793a$i$\u6240\u5728\u5757\u7684\u4e0b\u4e00\u4e2a\u5757\u5230\u7b2c$j$\u5757\u8fd9\u90e8\u5206\uff0c\u4e0e$i$\u6240\u5728\u5757\u7684\u4ee5$i$\u7ed3\u5c3e\u7684\u8fd9\u90e8\u5206\u540e\u7f00\uff0c\u80fd\u4ea7\u751f\u7684\u6700\u5c0f\u7b54\u6848\u3002\u4ee4$s[i][j]$\u8868\u793a\u7b2c$i$\u5757\u7684\u5f00\u5934\u5230\u7b2c$j$\u5757\u7684\u672b\u5c3e\u7684\u7b54\u6848\u3002\n\n\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u5982\u679c\u533a\u95f4\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u628a\u5757\u5185\u5143\u7d20\u6392\u5e8f\uff0c\u6240\u4ee5\u76f4\u63a5\u626b\u4e00\u904d\u5757\uff0c\u628a\u5728\u533a\u95f4\u5185\u7684\u5143\u7d20\u62ff\u51fa\u6765\uff0c\u5219\u5b83\u4eec\u672c\u8eab\u6709\u5e8f\u3002\u7136\u540e\u76f8\u90bb\u4e24\u4e2a\u6570\u5224\u65ad\u4e00\u4e0b\u5373\u53ef\u3002\u5355\u6b21\u590d\u6742\u5ea6$O(\\sqrt n)$\u3002\n\n\u5982\u679c\u533a\u95f4\u5728\u4e0d\u540c\u5757\uff0c\u5219\u5206\u4e09\u90e8\u5206\uff1a\u5de6\u8fb9\u7684\u96f6\u6563\u90e8\u5206\uff0c\u4e2d\u95f4\u7684\u8bb8\u591a\u6574\u5757\uff0c\u53f3\u8fb9\u7684\u96f6\u6563\u90e8\u5206\u3002\n\n\u5bf9\u4e8e\u4e2d\u95f4\u90e8\u5206\u5185\u90e8\u7684\u7b54\u6848\uff0c\u76f4\u63a5\u67e5\u8be2$s$\u6570\u7ec4\uff0c\u5bf9\u4e8e\u5de6\u8fb9\u3001\u53f3\u8fb9\u5bf9\u4e2d\u95f4\u7684\u7b54\u6848\uff0c\u76f4\u63a5\u67e5\u8be2$f,g$\u6570\u7ec4\u3002\u5bf9\u4e8e\u5de6\u8fb9\u3001\u53f3\u8fb9\u5185\u90e8\u7684\u7b54\u6848\u548c\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\uff0c\u6211\u4eec\u8fd8\u662f\u628a\u4e24\u5757\u7684\u6709\u5e8f\u6570\u5217\u63d0\u53d6\u51fa\u6765\uff0c\u7136\u540e\u8fdb\u884c\u5f52\u5e76\uff0c\u518d\u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002\u8fd9\u90e8\u5206\u590d\u6742\u5ea6$O(\\sqrt n)$\u3002\n\n\u8003\u8651\u5982\u4f55\u9884\u5904\u7406$f$\u548c$g$\u3002\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u6570\u548c\u6bcf\u4e2a\u5757\u80fd\u4ea7\u751f\u7684\u7b54\u6848\uff0c\u7136\u540e\u518d\u524d\u3001\u540e\u7f00\u4e00\u4e0b\u5373\u53ef\u3002\u7531\u4e8e\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5757\u5185\u5df2\u7ecf\u6392\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u5757\u5185\u7684\u6240\u6709\u5143\u7d20\u5230\u5176\u4ed6\u5757\u7684\u7b54\u6848\u4e00\u8d77\u5904\u7406\u3002\u53ea\u9700\u8981\u6bcf\u6b21\u53cc\u6307\u9488\u626b\u63cf\u5373\u53ef\u3002\u603b\u590d\u6742\u5ea6$O(n\\sqrt n)$\u3002\n\n\u5904\u7406$s$\uff0c\u53ef\u4ee5\u6839\u636e$f$\u7684\u503c\u9012\u63a8\u3002\u590d\u6742\u5ea6$O(n)$\u3002\n\n$f$\u548c$g$\u5b58\u7684\u503c\u6ca1\u6709\u76f8\u4ea4\u90e8\u5206\uff0c\u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u6570\u7ec4\u3002\n\n\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O((n+m)\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n\\sqrt n)$\uff0c\u5e76\u4e14\u662f\u5728\u7ebf\u7684\u3002\n\n## Code\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<utility>\n#include<cstdlib>\n#include<vector>\nusing namespace std;\nconst int siz=320,N=1e5+2;\n#define bel(x)((x-1)/siz+1)\nint f[N][320],s[320][320],L[320],R[320],n,m,a[N],blocks,ans[N];\npair<int,int>b[N];\ninline void chkmin(int&a,int b){a=b>a?a:b;}\nvector<int>vl,vr;\ninline int merge(){\n    int l1=0,l2=0,ans=0x3f3f3f3f;\n    for(int i=0;i<vl.size()-1;++i)chkmin(ans,vl[i+1]-vl[i]);\n    for(int i=0;i<vr.size()-1;++i)chkmin(ans,vr[i+1]-vr[i]);\n    while(l1<vl.size()&&l2<vr.size()){\n        chkmin(ans,abs(vl[l1]-vr[l2]));\n        if(vl[l1]<vr[l2])++l1;else ++l2;\n    }\n    return ans;\n}\nint main(){\n    ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n    cin>>n;\n    for(int i=1;i<=n;++i)cin>>a[i],b[i]=make_pair(a[i],i);\n    blocks=bel(n);\n    for(int i=1;i<=blocks;++i)L[i]=R[i-1]+1,R[i]=i*siz;R[blocks]=n;\n    for(int i=1;i<=blocks;++i)sort(b+L[i],b+R[i]+1);\n    for(int i=1;i<=blocks;++i){\n        for(int j=1;j<=blocks;++j)if(i!=j){\n            for(int k=L[i],l=L[j];k<=R[i];++k){\n                while(l<R[j]&&b[l+1].first<b[k].first)++l;\n                f[b[k].second][j]=abs(b[k].first-b[l].first);\n                if(l<R[j])chkmin(f[b[k].second][j],abs(b[l+1].first-b[k].first));\n            }\n        }\n        for(int k=L[i];k<=R[i];++k){\n            for(int j=i-2;j>=0;--j)chkmin(f[k][j],f[k][j+1]);\n            for(int j=i+2;j<=blocks;++j)chkmin(f[k][j],f[k][j-1]);\n        }\n        for(int j=1;j<i;++j)\n        for(int k=L[i]+1;k<=R[i];++k)chkmin(f[k][j],f[k-1][j]);\n        for(int j=i+1;j<=blocks;++j)\n        for(int k=R[i]-1;k>=L[i];--k)chkmin(f[k][j],f[k+1][j]);\n        int&S=s[i][i];S=0x3f3f3f3f;\n        for(int j=L[i];j<R[i];++j)chkmin(S,b[j+1].first-b[j].first);\n    }\n    for(int i=1;i<=blocks;++i)\n    for(int j=i+1;j<=blocks;++j)s[i][j]=min(min(s[i][j-1],f[R[j]][i]),s[j][j]);\n    for(cin>>m;m--;){\n        int l,r;\n        cin>>l>>r;\n        const int bL=bel(l),bR=bel(r);\n        int ans=0x3f3f3f3f;\n        if(bL<bR){\n            if(bL+1<=bR-1)\n            ans=s[bL+1][bR-1],chkmin(ans,min(f[r][bL+1],f[l][bR-1]));\n            vl.clear(),vr.clear();\n            for(int i=L[bL];i<=R[bL];++i)if(b[i].second>=l)vl.push_back(b[i].first);\n            for(int i=L[bR];i<=R[bR];++i)if(b[i].second<=r)vr.push_back(b[i].first);\n            chkmin(ans,merge());\n        }else{\n            int pre=-0x3f3f3f3f;\n            for(int i=L[bL];i<=R[bL];++i)\n            if(l<=b[i].second&&b[i].second<=r)chkmin(ans,b[i].first-pre),pre=b[i].first;\n        }\n        cout<<ans<<'\\n';\n    }\n    return 0;\n}\n```",
        "postTime": 1563241217,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF765F \u3010Souvenirs\u3011"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e2a\u9898\u8bf4\u4e0d\u5b9a\u53ef\u4ee5\u83ab\u961f\u5957\u5e73\u8861\u6811\u5361\u8fc7\u53bb\uff0c\u6ca1\u4ec0\u4e48\u522b\u7684\u60f3\u6cd5\u8fd8\u662f\u5199\u5199\u5427\uff0c\u4f30\u8ba1\u6bd4\u66b4\u529b\u8fd8\u662f\u5f3a\u4e00\u4e9b\u7684\u3002\n\n\u7136\u540e\u8003\u8651\u4e00\u4e9b\u601d\u8003\u7684\u51fa\u53d1\u70b9\uff0c\u6bd4\u5982\n\n- \u503c\u57df\uff1f\u4e8c\u5206\u503c\u57df\uff1f\u5212\u5206\u4fee\u6539\uff1f\n- \u79fb\u52a8\u8be2\u95ee\u7684\u6307\u9488\uff1f\n- \u628a\u8be2\u95ee\u7ed9\u7ebf\u6bb5\u6811\u5206\u6cbb\u6389\uff1f\n- \u5355\u8c03\u6027\uff1f\n\n------\n\n\u4e0d\u59a8\u5148\u8003\u8651\u4e00\u4e9b\u7b80\u5355\u7684\u66b4\u529b\uff0c\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u628a\u8be2\u95ee\u6309\u53f3\u6307\u9488\u6392\u5e8f\uff0c\u7136\u540e\u5f00\u59cb\u5904\u7406\u5b83\u4eec\u3002\n\n\u82e5\u5f53\u524d\u5904\u7406\u5230\u7684\u4f4d\u7f6e\u4e3a$r$\uff0c\u6211\u4eec\u5bf9$r$\u524d\u9762\u7684\u4f4d\u7f6e$i$\u7ef4\u62a4\u7b54\u6848\u6570\u7ec4$ans_i$\uff0c\u4ee3\u8868\u533a\u95f4$[i,r]$\u7684\u7b54\u6848\uff0c\u6bcf\u6b21\u79fb\u52a8\u53f3\u6307\u9488\u65f6\uff0c\u6211\u4eec\u66b4\u529b\u66f4\u65b0\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u4fee\u8865\u8fd9\u4e2a\u66b4\u529b\u3002\n\n- \u53d1\u73b0\u8be2\u95ee$ans_i$\u4e5f\u53ef\u4ee5\u770b\u505a\u8be2\u95ee$\\min_{i\\le k <r} ans_k$\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u53bb\u533a\u95f4\u67e5\u8be2\uff0c\u7136\u540e\u6bcf\u6b21\u79fb\u52a8\u65f6\u4e0d\u4fee\u6539\u6240\u6709\u7684\u503c\uff0c\u9009\u62e9\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u3002\n- \u5177\u4f53\u7684\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u4e0a\uff0c\u5b58\u4e0b\u8fd9\u4e2a\u533a\u95f4\u6240\u6709\u7684$a_i$\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u533a\u95f4\u4e0a\u4e8c\u5206\u5c31\u80fd\u591f\u66f4\u65b0\u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u4e86\u3002\n- \u7136\u540e\u53d1\u73b0\u590d\u6742\u5ea6\u66f4\u9ad8\u4e86\uff0c\u6309\u9053\u7406\u6709\u4e9b\u503c\u662f\u4e0d\u9700\u8981\u4fee\u6539\u7684\uff0c\u54ea\u4e9b\u503c\u5462\uff1f\n- \u53d1\u73b0$ans_i$\u6570\u7ec4\u662f\u5355\u8c03\u4e0d\u5347\u7684\u3002\u5982\u679c\u6211\u4eec\u6210\u529f\u4fee\u6539\u4e86\u4f4d\u7f6e\u9760\u53f3\u7684\u67d0\u4e2a\u503c\uff0c\u5e76\u8bbe\u5f53\u524d\u7684\u7b54\u6848\u4e3a$mi$(\u6ce8\u610f\u8fd9\u4e2a\u662f\u5305\u542b\u539f\u672c\u8282\u70b9\u7684\u7b54\u6848\u7684\u6700\u5c0f\u503c)\uff0c\u90a3\u4e48\u5728\u4e00\u4e2a\u67d0\u4e2a\u5728$Ta$\u5de6\u8fb9\u7684\u8282\u70b9\u4e0a\u8d21\u732e\u7684\u7b54\u6848\u4e0d\u5982$mi$\u65f6\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u5fc5\u8981\u8fdb\u5165\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e86\u3002\n- \u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u5355\u6b21\u64cd\u4f5c\u662f$\\log n \\log Maxa_i$\u7684\uff0c\u539f\u56e0\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u6210\u529f\u8d21\u732e\u7b54\u6848\u540e\u7b54\u6848\u5fc5\u5b9a\u51cf\u534a\u3002\u4e3a\u4ec0\u4e48\uff1f\u5982\u679c$r$\u5bf9$j$\u7684\u7b54\u6848\u4e3a$mi_j$\uff0c$r$\u5bf9$i$\u7684\u7b54\u6848\u4e3a$mi_i$\uff0c\u4e3a\u4e86\u907f\u514d$i$\u76f4\u63a5\u628a$j$\u7ed9\u66f4\u65b0\u6389\uff0c\u4e00\u5b9a\u6709$mi_i< \\frac{mi_j}{2}$\n\n------\n\n\u603b\u7ed3\uff1a\u79ef\u7d2f\u505a\u9898\u7ecf\u9a8c,\u591a\u5f00\u8111\u6d1e..\n\n------\n\n**Code:**\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\nconst int N=1e5+10;\nstruct node\n{\n    int i,l,r;\n    bool friend operator <(node n1,node n2){return n1.r<n2.r;}\n}q[N<<2];\nint ans[N<<2],Ans[N<<2],n,m,a[N],mi;\nstd::vector <int> seg[N<<2];\nint min(int x,int y){return x<y?x:y;}\n#define ls id<<1\n#define rs id<<1|1\nconst int inf=0x3f3f3f3f;\nvoid build(int id,int l,int r)\n{\n    for(int i=l;i<=r;i++) seg[id].push_back(a[i]);\n    std::sort(seg[id].begin(),seg[id].end());\n    ans[id]=inf;\n    if(l==r) return;\n    int mid=l+r>>1;\n    build(ls,l,mid),build(rs,mid+1,r);\n}\nvoid change(int id,int l,int r,int p,int x)\n{\n    if(r<=p)\n    {\n        std::vector <int>::iterator it=std::upper_bound(seg[id].begin(),seg[id].end(),x);\n        if(it!=seg[id].end()) ans[id]=min(ans[id],*it-x);\n        if(it!=seg[id].begin()) ans[id]=min(ans[id],x-*(it-1));\n        if(mi<=ans[id]) return;//\u53f3\u8fb9\u5df2\u7ecf\u6709\u6bd4Ta\u4f18\u79c0\u7684\u4e86\n        if(l==r){mi=min(mi,ans[id]);return;}\n    }\n    int mid=l+r>>1;\n    if(p>mid) change(rs,mid+1,r,p,x);//\u6ce8\u610f\u5148\u8d70\u53f3\u8fb9\n    change(ls,l,mid,p,x);\n    ans[id]=min(ans[id],min(ans[ls],ans[rs]));\n    mi=min(mi,ans[id]);//\u6700\u540e\u66f4\u65b0Ta\n}\nint query(int id,int L,int R,int l,int r)\n{\n    if(L==l&&R==r) return ans[id];\n    int Mid=L+R>>1;\n    if(r<=Mid) return query(ls,L,Mid,l,r);\n    else if(l>Mid) return query(rs,Mid+1,R,l,r);\n    else return min(query(ls,L,Mid,l,Mid),query(rs,Mid+1,R,Mid+1,r));\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",a+i);\n    build(1,1,n);\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&q[i].l,&q[i].r);\n        q[i].i=i;\n    }\n    std::sort(q+1,q+1+m);\n    for(int p=1,i=2;i<=n;i++)\n    {\n        mi=inf;\n        change(1,1,n,i-1,a[i]);\n        for(;p<=m&&q[p].r<=i;++p)\n            Ans[q[p].i]=query(1,1,n,q[p].l,i);\n    }\n    for(int i=1;i<=m;i++)\n        printf(\"%d\\n\",Ans[i]);\n    return 0;\n}\n```",
        "postTime": 1543490969,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF765F \u3010Souvenirs\u3011"
    },
    {
        "content": "\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f3\u7aef\u70b9 $r$ \uff0c\u7ef4\u62a4 $ans_i$ \u8868\u793a $\\min |a_i-a_j|,j\\in[i,r]$ \u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u79bb\u7ebf\u4e0b\u6765\u8be2\u95ee\uff0c\u6211\u4eec\u8981\u6c42\u7684 $[l,r]$ \u7684\u7b54\u6848\u5c31\u662f\u4e00\u6bb5\u540e\u7f00\u7684\u6700\u5c0f\u503c\u3002\u4f46\u662f\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u7ef4\u62a4\u7684 $ans_i$ \u53ea\u662f\u4fdd\u8bc1\u4e86\u4e00\u6bb5\u540e\u7f00\u7684\u6700\u5c0f\u503c\u5c31\u662f $[l,r]$ \u7684\u7b54\u6848\uff0c\u800c $ans_i$ \u662f\u53ef\u80fd\u5927\u4e8e $\\min |a_i-a_j|,j\\in[i,r]$ \u3002\n\n\u73b0\u5728\u8003\u8651\u6211\u4eec\u628a $r - 1$ \u79fb\u52a8\u5230\u4e86 $r$ \uff0c\u5e76\u4e14\u5df2\u7ecf\u7ef4\u62a4\u597d\u4e86\u53f3\u7aef\u70b9\u4e3a $r - 1$ \u65f6\u7684 $ans$ \uff0c\u6ee1\u8db3\u4e86 $[l,r]$ \u7684\u7b54\u6848\u5c31\u662f $ans$ \u7684\u4e00\u6bb5\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u8003\u8651\u63a5\u4e0b\u6765\u5982\u4f55\u4fee\u6539\u3002\n\n\u9996\u5148\uff0c\u66b4\u529b\u4fee\u6539\u7684\u590d\u6742\u5ea6\u80af\u5b9a\u6709\u95ee\u9898\u3002\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8e\u6211\u4eec\u6c42\u7b54\u6848\u662f\u7b97\u540e\u7f00\u7684\u6700\u5c0f\u503c\uff0c\u4e8b\u5b9e\u4e0a\u6709\u4e9b\u4f4d\u7f6e\u662f\u6ca1\u6709\u5fc5\u8981\u4fee\u6539\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $ans_i$ \uff0c\u53ea\u4f1a\u6709 $O(\\log a_i)$ \u4e2a\u4f4d\u7f6e\u8ba9\u8fd9\u4e2a\u4f4d\u7f6e\u7b54\u6848**\u5fc5\u987b**\u88ab\u4fee\u6539\u3002\n\n\u5fc5\u987b \u88ab\u4fee\u6539\uff1f\u56e0\u4e3a\u6709\u4e9b\u4f4d\u7f6e\u662f\u53ef\u4ee5\u4e0d\u7528\u88ab\u4fee\u6539\u7684\u3002\u5982\u4e0b\u56fe\uff1a\n\n![image.png](https://i.loli.net/2020/06/11/rwzCgZXMaO5eBis.png)\n\n\u5982\u56fe\uff0c\u8003\u8651 $a_i$ \uff0c\u4e4b\u524d\u6700\u4f18\u4f4d\u7f6e\u5728 $a_j$ \uff0c\u5f53\u524d\u52a0\u5165\u4e86 $r$ \uff0c\u5176\u4e2d\u9ed1\u7ebf\u8868\u793a $\\frac{a_i+a_j} 2$ \u7684\u4f4d\u7f6e\u3002\n\n\u8003\u8651\u52a0\u5165\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u5728\u84dd\u8272\u4f4d\u7f6e\uff0c\u660e\u663e\u6211\u4eec\u5fc5\u987b\u5f97\u4fee\u6539 $ans_i$ \uff0c\u540c\u65f6 $ans_i$ \u7684\u503c\u53d8\u5c0f\u4e86\u81f3\u5c11\u4e00\u534a\u3002\n\n\u5426\u5219\uff0c\u5982\u679c\u4fee\u6539\u5728\u7d2b\u8272\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 $ans_j$ \u800c\u4e0d\u4fee\u6539 $ans_i$ \uff0c\u6c42\u4e86\u540e\u7f00\u6700\u5c0f\u503c $i$ \u8fd9\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u5de6\u7aef\u70b9\u65f6\u7b54\u6848\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n\n\u5982\u679c\u52a0\u5165\u7684\u70b9\u5728 $a_i$ \u4e0b\u9762\uff0c\u753b\u4e00\u4e0b\u53d1\u73b0\u662f\u4e00\u6837\u7684\u3002\n\n\u8fd9\u6837\u603b\u4fee\u6539\u7684\u70b9\u6570\u5c31\u662f $O(n\\log a)$\u3002\n\n\u4f46\u662f\u5982\u4f55\u4fee\u6539\u5462\uff1f\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\u8fd9\u91cc\u5f97\u5148\u4fee\u6539\u53f3\u533a\u95f4\u518d\u4fee\u6539\u5de6\u533a\u95f4\uff0c\u4e14\u5982\u679c\u4fee\u6539\u5f53\u524d\u533a\u95f4\u7684\u65f6\u5019\u66f4\u65b0\u5f97\u5230\u7684\u7b54\u6848\u4e0d\u5982\u4e4b\u524d\u4fee\u6539\u8fc7\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u76f4\u63a5\u8df3\u8fc7\u5c31\u597d\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5bf9\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u6709\u5e8f\u7684\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u7684\u6570\u3002\n\n\u8fd9\u6837\u5b9e\u9645\u9012\u5f52\u4e0b\u53bb\u4fee\u6539\u7684\u5c31\u53ea\u6709\u4e0a\u6587\u63d0\u5230\u7684 \u5fc5\u987b\u88ab\u4fee\u6539\u7684\u4f4d\u7f6e\u3002\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log n\\log a)$\u3002\n\n```cpp\n#include \"iostream\"\n#include \"algorithm\"\n#include \"cstring\"\n#include \"cstdio\"\n#include \"cmath\"\n#include \"vector\"\n#include \"map\"\n#include \"set\"\n#include \"queue\"\nusing namespace std;\n#define MAXN 300006\n//#define int long long\n#define rep(i, a, b) for (int i = (a), i##end = (b); i <= i##end; ++i)\n#define per(i, a, b) for (int i = (a), i##end = (b); i >= i##end; --i)\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n#define vi vector<int>\n#define all(x) (x).begin() , (x).end()\n#define mem( a ) memset( a , 0 , sizeof a )\ntypedef long long ll;\nint n , m;\nint A[MAXN];\n\nstruct poi {\n\tint l , r , idx;\n} Q[MAXN] ;\nbool cmp( const poi& a , const poi& b ) {\n\treturn a.r < b.r;\n}\n\nint T[MAXN << 2]; vi S[MAXN << 2];\ninline void pu( int rt ) {\n\tT[rt] = min( T[rt << 1] , T[rt << 1 | 1] );\n}\nvoid build( int rt , int l , int r ) {\n\trep( i , l , r ) S[rt].pb( A[i] );\n\tsort( all( S[rt] ) );\n\tT[rt] = 0x3f3f3f3f;\n\tif( l == r ) return;\n\tint m = l + r >> 1;\n\tbuild( rt << 1 , l , m ) , build( rt << 1 | 1 , m + 1 , r );\n\tpu( rt );\n}\nint cur;\nvoid mdfy( int rt , int l , int r , int p , int x ) {\n\tif( r <= p ) {\n\t\tauto it = lower_bound( all( S[rt] ) , x );\n\t\tif( it != S[rt].end() ) T[rt] = min( T[rt] , ( *it ) - x );\n\t\tif( it != S[rt].begin() ) T[rt] = min( T[rt] , x - *( it - 1 ) );\n\t\tif( T[rt] >= cur ) return;\n\t}\n\tif( l == r ) {\n\t\tcur = min( cur , T[rt] );\n\t\treturn;\n\t}\n\tint m = l + r >> 1;\n\tif( p > m ) mdfy( rt << 1 | 1 , m + 1 , r , p , x );\n\tmdfy( rt << 1 , l , m , p , x );\n\tpu( rt );\n\tcur = min( cur , T[rt] );\n}\nint que( int rt , int l , int r , int L ) {\n\tif( L <= l ) return T[rt];\n\tint m = l + r >> 1;\n\tif( L <= m ) return min( T[rt << 1 | 1] , que( rt << 1 , l , m , L ) );\n\telse return que( rt << 1 | 1 , m + 1 , r , L );\n}\n\nint ans[MAXN];\n\nvoid solve() {\n\tcin >> n;\n\trep( i , 1 , n ) scanf(\"%d\",A + i);\n\tcin >> m;\n\trep( i , 1 , m ) \n\t\tscanf(\"%d%d\",&Q[i].l,&Q[i].r) , Q[i].idx = i;\n\tsort( Q + 1 , Q + 1 + m , cmp );\n\tbuild( 1 , 1 , n );\n\tint cc = 1;\n\twhile( Q[cc].r <= 1 ) ++ cc;\n\trep( i , 2 , n ) {\n\t\tcur = 0x3f3f3f3f;\n\t\tmdfy( 1 , 1 , n , i - 1 , A[i] );\n\t\twhile( Q[cc].r == i ) ans[Q[cc].idx] = que( 1 , 1 , n , Q[cc].l ) , ++ cc;\n\t}\n\trep( i , 1 , m ) printf(\"%d\\n\",ans[i]);\n}\n\nsigned main() {\n//    int T;cin >> T;while( T-- ) solve();\n    solve();\n}\n\n\n```\n\n",
        "postTime": 1591838844,
        "uid": 63398,
        "name": "yijan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF765F \u3010Souvenirs\u3011"
    },
    {
        "content": "\u6ca1\u6709\u5b9e\u73b0\u8fc7\uff0c\u82e5\u672c\u6587\u6709\u8bef\u8bf7\u6307\u51fa\u3002\n\n\u611f\u8c22 abruce \u63d0\u4f9b\u7684\u4e00\u4e9b\u542f\u53d1\u3002\n\n\u8003\u8651\u79bb\u7ebf\u626b\u53f3\u7aef\u70b9 $r$\uff0c\u5e76\u4e14\u53ea\u89e3\u51b3 $i<j,a_i\\le a_j$ \u7684\u60c5\u51b5\u3002\u89e3\u51b3\u539f\u95ee\u9898\u663e\u7136\u628a\u6570\u7ec4\u7ffb\u8f6c\u505a\u4e24\u6b21\u5373\u53ef\u3002\n\n#### Lemma\uff1a\u82e5 $j=r$\uff0c\u90a3\u4e48 $i$ \u5fc5\u7136\u6ee1\u8db3\u5b58\u5728\u4e00\u4e2a\u81ea\u7136\u6570 $d$ \u4f7f\u5f97 $i$ \u662f $[1,r]$ \u4e2d\u6700\u5927\u7684\u6570\u6ee1\u8db3\uff0c$a_i\\ge a_j -2^d$ \u4e14 $a_i \\le a_j$ \u6216\u8005 $a_i=a_j$\u3002\n\n\u82e5 $i$ \u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u663e\u7136 $a_j-1\\le a_i\\le a_j$ \u7684\u60c5\u51b5\u5e73\u51e1\u3002\u90a3\u4e48\u8bbe $a_j-2^{d+1}\\le a_i < a_j-2^d$\uff0c\u5219\u5b58\u5728 $a_k$ \u4f7f\u5f97 $a_j-2^{d+1}\\le a_k < a_j-2^d$\uff0c\u663e\u7136 $|a_k-a_j|<2^d$\uff0c$a_j-a_i>2^d$\u3002\u4e14 $k>i$\uff0c\u6240\u4ee5 $(i,j)$ \u7684\u5339\u914d\u5305\u542b\u4e86 $(k,j)$\uff0c\u90a3\u4e48\u5305\u542b $(i,j)$ \u7684\u533a\u95f4\u4e00\u5b9a\u5305\u542b $(k,j)$\uff0c$(i,j)$ \u7684\u5339\u914d\u603b\u662f\u4e0d\u4f18\u7684\u3002\n\n\u95ee\u9898\u5c31\u662f\u6c42\u51fa\u524d\u7f00\u4e2d\u6240\u6709\u5728 $[a_r-2^d,a_r]$ \u4e2d\u4e0b\u6807\u6700\u5927\u7684\u6570\u3002$a_i=a_j$ \u7684\u60c5\u51b5\u662f\u5e73\u51e1\u7684\u3002\n\n\u5bf9\u5e8f\u5217 $n\\to 1$ \u505a\u626b\u63cf\u7ebf\uff0c\u5bf9\u503c\u57df\u79bb\u6563\u5316\u540e\u7ef4\u62a4\u732b\u6811\u7ed3\u6784\u3002\u6bcf\u6b21\u626b\u5230\u4e00\u4e2a\u4f4d\u7f6e $p$ \u5c31\u5728\u732b\u6811\u4e0a\u505a\u626b\u63cf\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4 veb\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u627e\u5230 $p$ \u4ea7\u751f\u8d21\u732e\u7684\u533a\u95f4\u3002\u7136\u540e\u628a\u6240\u6709\u7684 $[a_p-2^d,a_p]$ \u52a0\u5165\u732b\u6811\u4e2d\u3002\u6ce8\u610f\u5230\u503c\u57df\u7ecf\u8fc7\u79bb\u6563\u5316\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u8981\u7528 veb \u7ef4\u62a4 $a_p-2^d$ \u7684\u79bb\u6563\u5316\u503c\u3002\n\n\u7136\u540e\u9700\u8981\u652f\u6301 $O(n\\log v)$ \u6b21\u5355\u70b9\u4fee\u6539\u4e0e\u540e\u7f00\u67e5\u8be2\uff0c\u8fd9\u663e\u7136\u53ef\u4ee5\u7ef4\u62a4\u540e\u7f00\u6700\u5c0f\u503c\u3002\u7ef4\u62a4\u5355\u8c03\u6808\u72b6\u7ed3\u6784\uff0c\u7528 veb \u652f\u6301\u63d2\u5165\u4e0e\u5747\u644a\u7684\u5220\u9664\u3002\n\n\u8bbe\u5e8f\u5217\u957f\u5ea6\u4e3a $n$\uff0c\u67e5\u8be2\u6b21\u6570\u4e3a $m$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log v\\log \\log v+m\\log \\log v)$\u3002",
        "postTime": 1673962580,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u533a\u95f4\u4e00\u7ef4\u6700\u8fd1\u70b9\u5bf9\u7684 O(nlogvloglogv) \u7b97\u6cd5"
    },
    {
        "content": "[CF765F Souvenirs](https://www.luogu.com.cn/problem/CF765F)\n\n\u5148\u89c2\u5bdf\u9898\u76ee\u8981\u6c42\uff1a\u9759\u6001\u533a\u95f4\u67e5\u8be2\uff0c\u4e0d\u5f3a\u5236\u5728\u7ebf\u3002\u7531\u6b64\u60f3\u5230\u4f7f\u7528\u83ab\u961f\u6765\u89e3\u51b3\u672c\u9898\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5c06\u4e00\u4e2a\u5b50\u4e32\u6392\u5e8f\u540e\uff0c\u5176\u7b54\u6848\u7684\u5019\u9009\u9879\u53ea\u6709\u76f8\u90bb\u4e24\u9879\u4e4b\u5dee\u3002\u6700\u66b4\u529b\u7684\u65b9\u5f0f\u662f\u7528 `multiset` \u6765\u7ef4\u62a4\u67e5\u8be2\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u3002\u6700\u540e\u66f4\u65b0\u7b54\u6848\u9700\u8981\u904d\u5386\u6574\u4e2a `multiset`\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm)$\uff0c\u80af\u5b9a\u8fc7\u4e0d\u4e86\u3002\n\n\u8003\u8651\u5728\u6269\u5c55\u83ab\u961f\u533a\u95f4\u7684\u540c\u65f6\u66f4\u65b0\u7b54\u6848\u3002\u7531\u4e8e\u66f4\u65b0\u7b54\u6848\u7684\u65b9\u5f0f\u662f\u53d6\u6700\u5c0f\u503c\uff0c\u64a4\u9500\u65f6\u96be\u4ee5\u5904\u7406\uff0c\u9700\u8981\u7528\u5230\u56de\u6eda\u83ab\u961f\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt{m} \\log{n})$\uff0c\u4e5f\u8fc7\u4e0d\u4e86\u3002[\u4ee3\u7801](https://codeforces.com/contest/765/submission/182916397)\uff0cTLE on #13\u3002\n\n\u7531\u4e8e\u63d2\u5165\u7684\u6570\u4e00\u5b9a\u662f $a$ \u4e2d\u7684\u67d0\u4e00\u9879\uff0c\u6700\u591a\u53ea\u6709 $n$ \u4e2a\u4e0d\u540c\u4f4d\u7f6e\uff0c\u4e8e\u662f\u53ef\u4ee5\u628a $a$ \u79bb\u6563\u5316\uff08\u5373\u83b7\u53d6\u6392\u540d\uff09\u540e\u7528 `bitset` \u7ef4\u62a4\u83ab\u961f\u533a\u95f4\u3002\u5177\u4f53\u5730\uff0c\u82e5 $a_i$ \u5728\u672c\u6b21\u67e5\u8be2\u7684\u533a\u95f4\u5185\uff0c\u5219\u4ee4 `bitset` \u4e2d\u5176\u6392\u540d\u7684\u76f8\u5e94\u4f4d\u7f6e\u4e3a $1$\u3002\u5229\u7528 `_Find_next` \u51fd\u6570\u53ef\u4ee5\u627e\u5230\u540e\u7ee7 $1$ \u7684\u4f4d\u7f6e\u3002\u82e5\u662f\u8981\u627e\u524d\u9a71 $1$\uff0c\u53e6\u5f00\u4e00\u4e2a `bitset` \u8bb0\u5f55\u5012\u5e8f\u7684\u4fe1\u606f\uff0c\u7136\u540e `_Find_next` \u5373\u53ef\u3002\u8fd9\u4e2a\u505a\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{n^2\\sqrt{m}}{w})$\uff0c\u8dd1\u5f97\u633a\u5feb\uff0c\u4f46\u662f\u4ecd\u7136\u8fc7\u4e0d\u4e86\u3002[\u4ee3\u7801](https://codeforces.com/contest/765/submission/182990203)\uff0cTLE on #37\u3002\n\n\u8ba9\u6211\u4eec\u6765\u601d\u8003\u4e00\u4e0b\u8fd9\u4e2a\u505a\u6cd5\u7684\u74f6\u9888\u3002\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $l$ \u7684 `bitset`\uff0c\u6bcf\u6b21 `_Find_next` \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{l}{w})$\uff0c\u8fd9\u4e2a\u505a\u6cd5\u6bcf\u6b21\u9700\u8981 $O(\\frac{n}{w})$\uff0c\u592a\u8d39\u65f6\u95f4\u3002\u53ef\u4e0d\u53ef\u4ee5\u8ba9 $l$ \u5c0f\u4e00\u4e9b\uff1f\u5f53\u7136\u53ef\u4ee5\uff01\u5bf9\u4e8e\u6392\u540d\u7684\u503c\u57df\u518d\u8fdb\u884c\u5206\u5757\uff0c\u6269\u5c55\u83ab\u961f\u533a\u95f4\u65f6\u4ec5\u5728\u4e00\u5757\u4e2d\u66f4\u65b0\u7b54\u6848\uff0c\u56de\u6eda\u4e4b\u524d\u518d\u7528 `_Find_first` \u51fd\u6570\uff08\u8fd4\u56de `bitset` \u4e2d\u7b2c\u4e00\u4e2a $1$ \u7684\u4f4d\u7f6e\uff09\u66f4\u65b0\u5757\u95f4\u7b54\u6848\u3002\u503c\u57df\u5757\u957f\u53d6 $\\sqrt{n}$ \u65f6\u8f83\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{nm}{w})$\uff0c\u4f46\u662f\u5e38\u6570\u6781\u5c0f\uff0c\u6839\u672c\u8dd1\u4e0d\u6ee1\uff0c\u80fd\u8fc7\u3002[\u4ee3\u7801](https://codeforces.com/contest/765/submission/183141053)\uff0cAccepted\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u8bf4\u660e\uff1a\n\n- \u4e0a\u9762\u7684\u6587\u5b57\u7ed3\u5408\u76f8\u5e94\u4ee3\u7801\u6765\u9605\u8bfb\u66f4\u5bb9\u6613\u7406\u89e3\u3002\n- \u503c\u57df\u5757\u957f $l$ \u8bbe\u5b9a\u4e3a $\\sqrt{n}$ \u6ca1\u6709\u4ec0\u4e48\u4f9d\u636e\uff0c\u4f46\u662f\u53ef\u4ee5\u8fc7\uff0c\u6362\u4e00\u4e2a\u6570\u53ef\u80fd\u8fc7\u4e0d\u4e86\u3002\u4f7f\u7528\u4e25\u8c28\u7684\u6570\u5b66\u63a8\u5bfc\u6c42\u6700\u4f18\u5757\u957f\u5bf9\u4e8e\u8fd9\u4e2a\u505a\u6cd5\u5e76\u4e0d\u9002\u7528\uff0c\u6bd5\u7adf `_Find_first` \u548c `_Find_next` \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u7384\u5b66\u4e86\u3002\n- \u79bb\u6563\u5316\u7684\u65f6\u5019\u4e0d\u8981\u53bb\u91cd\uff0c\u5426\u5219\u7b54\u6848\u4e3a $0$ \u65f6\u4e0d\u597d\u5904\u7406\u3002\n- \u5bf9\u4e8e\u503c\u57df\u5206\u5757\uff0c\u66f4\u65b0\u5757\u95f4\u7b54\u6848\u7684\u65f6\u5019\u4e0d\u80fd\u53ea\u8003\u8651\u76f8\u90bb\u7684\u4e24\u4e2a `bitset`\uff0c\u6709\u53ef\u80fd\u9694\u7740\u51e0\u4e2a\u7a7a\u7684 `bitset` \u66f4\u65b0\u7b54\u6848\u3002\n- \u6ce8\u610f\u7a7a\u95f4\u7684\u95ee\u9898\uff0c\u4e0d\u8981\u628a `bitset` \u5f00\u592a\u5927\uff0c\u5426\u5219\u6e05\u7a7a\u4f1a\u5f88\u8d39\u65f6\u95f4\u3002",
        "postTime": 1669785520,
        "uid": 709949,
        "name": "tratser",
        "ccfLevel": 0,
        "title": "CF765F Souvenirs"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u5927\u5bb6\u90fd\u4e0d\u5199\u83ab\u961f\uff01\n\n### \u9898\u9762\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c$m$ \u6b21\u8be2\u95ee\u4e00\u4e2a $[l, r]$\uff0c\u6c42 $\\min\\limits_{i, j \\in [l, r]}{|a_i - a_j|}$\u3002\n\n### \u9898\u89e3\n\n\u8003\u8651\u83ab\u961f\uff0c\u6700\u66b4\u529b\u7684\u6734\u7d20\u83ab\u961f\u5fc5\u7136\u662f\u7528 `set` \u7ef4\u62a4\u5143\u7d20\u96c6\u5408\u548c\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u5dee\u7684\u96c6\u5408\uff0c\u590d\u6742\u5ea6 $O(n \\sqrt m \\log n)$\uff0c\u5927\u6982\u6b7b\u7684\u6bd4\u8f83\u60e8\u70c8\u3002\n\n\u8003\u8651\u5230\u5982\u679c\u6bcf\u6b21\u53ea\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u8fd9\u4e2a\u6570\u7684\u524d\u9a71\u548c\u540e\u7ee7\u5373\u53ef\u5feb\u901f\u66f4\u65b0\u7b54\u6848\uff0c\u4e8e\u662f\u4e0d\u96be\u60f3\u5230\u4f7f\u7528\u56de\u6eda\u83ab\u961f\u548c\u94fe\u8868\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u53ea\u52a0\u5165\u7684\u56de\u6eda\u83ab\u961f\u548c\u53ea\u5220\u9664\u7684\u56de\u6eda\u83ab\u961f\u786c\u7f1d\u4e00\u4e0b\uff0c\u5e76\u5c06\u8ba1\u7b97\u7b54\u6848\u7684\u8fc7\u7a0b\u5206\u6210\u4e24\u6b65\u3002\n\n\u7b2c\u4e00\u6b65\uff0c\u9996\u5148\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $[l, r]$\uff0c\u4e0d\u59a8\u8bbe $l \\in [bl, br]$\uff0c$r \\in (br, n]$\uff0c\u5176\u4e2d $bl, br$ \u662f\u8fd9\u4e00\u5757\u7684\u8fb9\u754c\u3002\u5982\u679c\u6211\u4eec\u53ea\u6c42 $(br, r]$ \u7684\u7b54\u6848\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff0c\u5148\u641e\u4e00\u4e2a\u7ef4\u62a4 $(br, n]$ \u7684\u94fe\u8868\uff0c\u679a\u4e3e\u4e0b\u6807\u4ece\u5927\u5230\u5c0f\u5168\u5220\u6389\uff0c\u518d\u5012\u7740\u64a4\u9500\u5373\u53ef\u3002\n\n\u73b0\u5728\u5982\u679c\u6211\u4eec\u62ff\u5230\u4e86 $(br, r]$ \u7684\u94fe\u8868\u548c\u5bf9\u5e94\u7684\u7b54\u6848\uff0c\u518d\u987a\u7740\u5f80\u91cc\u9762\u63d2\u5165 $[l, br]$ \u5c31\u53ef\u4ee5\u6c42\u51fa\u6700\u7ec8\u7684\u7b54\u6848\u4e86\u3002$(br, r]$ \u7684\u7b54\u6848\u6211\u4eec\u7528\u4e0a\u9762\u7684\u8fc7\u7a0b\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u62ff\u5230\u4e00\u4e2a\u94fe\u8868\uff0c\u800c\u4e14\u53ef\u4ee5\u901a\u8fc7\u64a4\u9500\u5230 $[l, r]$ \u7684\u72b6\u6001\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u7528\u521a\u521a\u7684\u90a3\u4e2a\u94fe\u8868\uff0c\u4f1a\u53d1\u73b0\u5404\u79cd\u64a4\u9500\u7684\u987a\u5e8f\u76f4\u63a5\u63c9\u5728\u4e00\u6b21\uff0c\u6839\u672c\u505a\u4e0d\u4e86\u3002\n\n\u6240\u4ee5\u8003\u8651\u7b2c\u4e8c\u6b65\uff0c\u518d\u62ff\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\uff0c\u521d\u59cb\u7ef4\u62a4 $[bl, n]$\uff0c\u7136\u540e\u8fd8\u662f\u5148\u5220\u9664\u518d\u6162\u6162\u64a4\u9500\uff0c\u64a4\u56de\u5230 $[bl, r]$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u987a\u7740\u5220\u6389 $[bl, br]$\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86 $(br, r]$ \u7684\u94fe\u8868\u4e86\uff0c\u518d\u64a4\u56de\u5230 $l$ \u5e76\u540c\u65f6\u7edf\u8ba1\u7b54\u6848\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\uff08\u5f53\u7136\u8bb0\u5f97\u6700\u540e\u518d\u64a4\u56de\u5230 $bl$\uff0c\u4e0d\u7136\u505a\u4e0d\u4e86\u5269\u4e0b\u7684\u8be2\u95ee\uff09\u3002\n\n\u53e6\u5916\u5982\u679c $r$ \u4e5f\u5728\u5757\u5185\uff0c\u90a3\u7b2c\u4e00\u6b65\u5c31\u8ddf\u5b83\u6ca1\u6709\u5173\u7cfb\uff0c\u7b2c\u4e8c\u6b65\u7684\u65f6\u5019\u5220\u5230 $r$ \u5c31\u505c\u4e0b\u5f00\u59cb\u64a4\u9500\u5c31\u884c\u3002\n\n\u590d\u6742\u5ea6\u4e0e\u6b63\u5e38\u7684\u56de\u6eda\u83ab\u961f\u6ca1\u6709\u4efb\u4f55\u5dee\u5f02\uff0c\u4e3a $O(n\\sqrt m)$\uff0c\u7531\u4e8e\u83ab\u961f\u5e38\u6570\u504f\u5c0f\uff0c\u6240\u4ee5\u8dd1\u5f97\u5f88\u5feb\uff0c\u751a\u81f3\u80fd\u548c $O(n \\log^2 n)$ \u62fc\u4e00\u62fc\u3002\n\n\u4ee3\u7801\u4e2d\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u94fe\u8868\uff0c\u5e76\u4e14\u91cd\u590d\u5229\u7528\u4e86\u4e00\u4e0b\uff0c\u5148\u505a\u4e86\u7b2c\u4e8c\u6b65\uff0c\u518d\u505a\u7b2c\u4e00\u6b65\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <utility>\n#include <vector>\nconst int N = 100005, M = 300005, B = 190, C = N / B + 10;\nint n, m, a[N], bel[N];\nstd::pair<int, int> pr[N];\nint hh[N];\nstruct List\n{\n\tint pre[N], nxt[N]; \n\tinline void init(void)\n\t{\n\t\tnxt[0] = 1, pre[n + 1] = n;\n\t\tfor(int i = 1;i <= n;++i)\n\t\t\tpre[i] = i - 1, nxt[i] = i + 1;\n\t\treturn;\n\t}\n\tinline void erase(int k)\n\t{\n\t\tnxt[pre[k]] = nxt[k], pre[nxt[k]] = pre[k];\n\t\treturn;\n\t}\n\tinline int back(int k)\n\t{\n\t\tnxt[pre[k]] = pre[nxt[k]] = k;\n\t\tint res = 0x3f3f3f3f;\n\t\tif(pre[k] != 0)\n\t\t\tres = std::min(res, hh[k] - hh[pre[k]]);\n\t\tif(nxt[k] != n + 1)\n\t\t\tres = std::min(res, hh[nxt[k]] - hh[k]);\n\t\treturn res;\n\t}\n} L;\nint ans[M];\nstruct node\n{\n\tint l, r, id;\n\tinline bool operator<(node b) const\n\t{\n\t\treturn r < b.r;\n\t}\n};\nint big[N];\nstd::vector<node> vec[C];\nint main(void)\n{\n\tscanf(\"%d\", &n);\n\tfor(int i = 1;i <= n;++i)\n\t\tscanf(\"%d\", &pr[i].first), pr[i].second = i;\n\tstd::sort(pr + 1, pr + 1 + n);\n\tfor(int i = 1;i <= n;++i)\n\t\ta[pr[i].second] = i, hh[i] = pr[i].first, bel[i] = (i - 1) / B + 1;\n\tscanf(\"%d\", &m);\n\tfor(int i = 1, l, r;i <= m;++i)\n\t{\n\t\tscanf(\"%d%d\", &l, &r);\n\t\tvec[bel[l]].push_back({l, r, i});\n\t}\n\tmemset(ans, 0x3f, sizeof(ans));\n\tL.init();\n\tfor(int b = 1;b <= bel[n];++b)\n\t{\n\t\tstd::sort(vec[b].begin(), vec[b].end());\n\t\tint bl = (b - 1) * B + 1, br = std::min(b * B, n);\n\t\tfor(int i = n;i >= bl;--i)\n\t\t\tL.erase(a[i]);\n\t\tint pt = bl - 1;\n\t\tfor(const node &x : vec[b])\n\t\t{\n\t\t\twhile(pt < x.r)\n\t\t\t\tL.back(a[++pt]);\n\t\t\tint k = std::min(x.r, br);\n\t\t\tfor(int i = bl;i <= k;++i)\n\t\t\t\tL.erase(a[i]);\n\t\t\tfor(int i = k;i >= x.l;--i)\n\t\t\t\tans[x.id] = std::min(ans[x.id], L.back(a[i]));\n\t\t\tfor(int i = x.l - 1;i >= bl;--i)\n\t\t\t\tL.back(a[i]);\n\t\t}\n\t\twhile(pt < n)\n\t\t\tL.back(a[++pt]);\n\t\tfor(int i = bl;i <= br;++i)\n\t\t\tL.erase(a[i]);\n\t\tfor(int i = n;i > br;--i)\n\t\t\tL.erase(a[i]);\n\t\tbig[br] = 0x3f3f3f3f;\n\t\tfor(int i = br + 1;i <= n;++i)\n\t\t\tbig[i] = std::min(big[i - 1], L.back(a[i]));\n\t\tfor(const node &x : vec[b])\n\t\t\tif(x.r > br)\n\t\t\t\tans[x.id] = std::min(ans[x.id], big[x.r]);\n\t}\n\tfor(int i = 1;i <= m;++i)\n\t\tprintf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1664676870,
        "uid": 244204,
        "name": "namelessgugugu",
        "ccfLevel": 9,
        "title": "CF765F \u9898\u89e3"
    },
    {
        "content": "[$\\Large\\color{#FFBBFF}\\textit{Tian-Xing's blog}$](https://Tian-Xing.github.io)\n\n------------\n\n# Description\n\n[\u4f20\u9001\u95e8](https://codeforces.com/contest/765/problem/F)\n\n------------\n\n# Solution\n\n\u9996\u5148\u5bb9\u6613\u60f3\u5230\u8981\u628a\u8be2\u95ee\u79bb\u7ebf\u6389\uff0c\u6309\u7167\u5957\u8def\u679a\u4e3e\u53f3\u7aef\u70b9$r$,$ans_i$\u8868\u793a$[i, r]$\u7684\u7b54\u6848\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6bcf\u6b21\u52a0\u8fdb\u6765\u4e00\u4e2a\u70b9$a_r$\u5bf9\u6240\u6709\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u4ee5$a_r$\u5c06\u70b9\u5206\u4e3a\u4e24\u79cd\uff1a\u6743\u503c\u5927\u4e8e\u5b83\u7684\u548c\u5c0f\u4e8e\u5b83\u7684\u3002\n\n\u56e0\u4e3a\u4e24\u79cd\u662f\u5bf9\u79f0\u7684\u6240\u4ee5\u53ea\u8ba8\u8bba\u6743\u503c\u5927\u4e8e\u5b83\u7684\u3002\n\n\u5148\u627e\u5230\u6700\u9760\u53f3\u7684\u5927\u4e8e\u5b83\u7684\u70b9$a_x$\uff0c\u8fd9\u4e2a\u70b9\u53ef\u80fd\u4e0d\u662f\u4efb\u4f55\u533a\u95f4\u7684\u6700\u4f18\u7b54\u6848\uff0c\u4f46\u662f\u5b83\u80fd\u66f4\u65b0\u5230\u7684\u533a\u95f4\u662f\u6700\u591a\u7684\uff0c\u5373\u5de6\u7aef\u70b9\u4e3a$1 \\dots x$\uff0c\u53f3\u7aef\u70b9\u4e3a$r$\u7684\u6240\u6709\u533a\u95f4\u3002\n\n\u8fd9\u6837\u518d\u5728$x$\u5de6\u8fb9\u627e\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u7684\u70b9$a_z$\uff0c\u5b83\u80fd\u66f4\u65b0\u5230\u7684\u533a\u95f4\u662f\u5de6\u7aef\u70b9\u4e3a$1 \\dots z$\uff0c\u53f3\u7aef\u70b9\u4e3a$r$\u7684\u6240\u6709\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u80fd\u66f4\u65b0\u5230\u7684\u533a\u95f4\u662f\u88ab$a_x$\u80fd\u66f4\u65b0\u7684\u533a\u95f4\u5b8c\u5168\u5305\u542b\u7684\u3002\u6240\u4ee5\u5982\u679c\u65b0\u7684\u70b9\u7684\u6743\u503c\u6bd4$a_x$\u8fd8\u5927\uff0c\u80af\u5b9a\u4e0d\u4f1a\u66f4\u4f18\uff0c\u4e5f\u5c31\u662f\u8bf4$a_z$\u5fc5\u987b\u5c0f\u4e8e$a_x$\u3002\n\n\u4f46\u662f\u8fd9\u6837\u8fd8\u662f\u4e0d\u884c\uff0c\u4e25\u683c\u9012\u589e\u5e8f\u5217\u4f1a\u628a\u8fd9\u6837\u7684\u8fc7\u7a0b\u5361\u5230\u5355\u6b21$O(n)$\u3002\n\n\u8003\u8651\u4e4b\u524d\u4ee5\u53f3\u7aef\u70b9\u679a\u4e3e\u5230$x$\u7684\u65f6\u5019\uff0c$a_z$\u80fd\u66f4\u65b0\u7684\u6240\u6709\u533a\u95f4\u5df2\u7ecf\u88ab$a_x - a_z$\u66f4\u65b0\u8fc7\u4e86\uff0c\u90a3\u4e48\u5982\u679c\u73b0\u5728\u7684$a_z - a_r$\u6bd4$a_x - a_z$\u66f4\u5927\uff0c\u5c31\u6ca1\u6709\u4efb\u4f55\u7528\u5904\u4e86\u3002\n\n\u5316\u7b80\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6709\n\n$$a_z < \\frac{a_x + a_r}{2}$$\n\n\u8fd9\u6837\u679a\u4e3e\u53f3\u7aef\u70b9\u4e4b\u540e\u6bcf\u6b21\u53ea\u9700\u8981\u627e$log(n)$\u6b21\u5c31\u884c\u4e86\uff0c\u6bcf\u6b21\u67e5\u627e\u7684\u590d\u6742\u5ea6\u662f$o(logn)$\u7684\uff0c\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u662f$O(n log^2 n)$\u3002\n\n\u6bcf\u6b21\u8981\u7528\u67d0\u4e2a\u6743\u503c\u53bb\u66f4\u65b0\u4e00\u6bb5\u524d\u7f00\u7684\u7b54\u6848\uff0c\u76f4\u63a5~~\u5409\u53f8\u673a\u7ebf\u6bb5\u6811~~\u663e\u7136\u975e\u5e38\u4e0d\u884c\u3002\n\n\u6240\u4ee5\u8003\u8651\u53ea\u5bf9\u67d0\u4e2a\u70b9\u66f4\u65b0\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u67e5\u4e00\u4e2a\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0\u5373\u53ef\u3002\n\n------------\n\n# Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nconst int N = 100000;\nconst int INF = 0x7f7f7f7f;\n\nint n, a[N + 50], root[N + 50], tot, cwq, b[N + 50], q, pos;\n\nstruct Ask\n{\n\tint l, r, id, ans;\n} ask[N * 3 + 50];\n\nstruct Bit\n{\n\tint minn[N + 50];\n\tvoid Pre()\n\t{\n\t\tmemset(minn, 0x7f, sizeof(minn));\n\t\treturn;\n\t}\n\tint Lowbit(int x)\n\t{\n\t\treturn x & -x;\n\t}\n\tvoid Update(int pos, int v)\n\t{\n\t\tfor (int i = pos; i <= n; i += Lowbit(i))\n\t\t\tminn[i] = min(minn[i], v);\n\t\treturn;\n\t}\n\tint Query(int pos)\n\t{\n\t\tint minnn = INF;\n\t\tfor (int i = pos; i; i -= Lowbit(i)) minnn = min(minnn, minn[i]);\n\t\treturn minnn;\n\t}\n} bit;\n\nstruct SegmentTree\n{\n\tint s[(N << 2) + 50];\n\tvoid Update(int k, int l, int r, int pos, int zhi)\n\t{\n\t\tif (l == r)\n\t\t{\n\t\t\ts[k] = zhi;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (pos <= mid) Update(k << 1, l, mid, pos, zhi);\n\t\telse Update(k << 1 | 1, mid + 1, r, pos, zhi);\n\t\ts[k] = max(s[k << 1], s[k << 1 | 1]);\n\t\treturn;\n\t}\n\tint Query(int k, int l, int r, int x, int y)\n\t{\n\t\tif (x > y) return 0;\n\t\tif (x <= l && r <= y) return s[k];\n\t\tint mid = (l + r) >> 1;\n\t\tif (y <= mid) return Query(k << 1, l, mid, x, y);\n\t\telse if (x > mid) return Query(k << 1 | 1, mid + 1, r, x, y);\n\t\telse return max(Query(k << 1, l, mid, x, y), Query(k << 1 | 1, mid + 1, r, x, y));\n\t}\n} tr;\n\nvoid Read(int &x)\n{\n\tx = 0; int p = 0; char st = getchar();\n\twhile (st < '0' || st > '9') p = (st == '-'), st = getchar();\n\twhile (st >= '0' && st <= '9') x = (x << 1) + (x << 3) + st - '0', st = getchar();\n\tx = p ? -x : x;\n\treturn;\n}\n\nvoid Print(int x)\n{\n\tif (x > 9) Print(x / 10);\n\tputchar(x % 10 + '0');\n\treturn;\n}\n\nint Cmp(Ask a, Ask b)\n{\n\treturn a.r < b.r;\n}\n\nint Cmp1(Ask a, Ask b)\n{\n\treturn a.id < b.id;\n}\n\nint Abs(int x)\n{\n\treturn x < 0 ? -x : x;\n}\n\nint Find(int x)\n{\n\tint l = 0, r = cwq;\n\twhile (l < r)\n\t{\n\t\tint mid = (l + r + 1) >> 1;\n\t\tif (b[mid] <= x) l = mid;\n\t\telse r = mid - 1;\n\t} \n\treturn l;\n}\n\nint main()\n{\n\tRead(n);\n\tfor (int i = 1; i <= n; i++) Read(a[i]), b[++cwq] = a[i];\n\tsort(b + 1, b + cwq + 1);\n\tcwq = unique(b + 1, b + cwq + 1) - b - 1;\n\tfor (int i = 1; i <= n; i++) a[i] = lower_bound(b + 1, b + cwq + 1, a[i]) - b;\n\tRead(q);\n\tfor (int i = 1; i <= q; i++) Read(ask[i].l), Read(ask[i].r), ask[i].id = i;\n\tsort(ask + 1, ask + q + 1, Cmp);\n\tpos = 1;\n\tbit.Pre();\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (i != 1) \n\t\t{\n\t\t\tint sj = cwq, xj = a[i], tmp;\n\t\t\ttmp = tr.Query(1, 1, cwq, xj, sj);\n\t\t\twhile (tmp)\n\t\t\t{\n\t\t\t\tbit.Update(n - tmp + 1, Abs(b[a[tmp]] - b[a[i]]));\n\t\t\t\tsj = Find((b[a[tmp]] + b[a[i]]) / 2);\n\t\t\t\tif (!sj) break;\n\t\t\t\tif (sj >= a[tmp]) sj = a[tmp] - 1;\n\t\t\t\ttmp = tr.Query(1, 1, cwq, xj, sj);\n\t\t\t}\n\t\t\tsj = a[i], xj = 1;\n\t\t\ttmp = tr.Query(1, 1, cwq, xj, sj);\n\t\t\twhile (tmp)\n\t\t\t{\n\t\t\t\tbit.Update(n - tmp + 1, Abs(b[a[tmp]] - b[a[i]]));\n\t\t\t\txj = Find((b[a[tmp]] + b[a[i]]) / 2);\n\t\t\t\tif (!xj) break;\n\t\t\t\tif (xj <= a[tmp]) xj = a[tmp] + 1;\n\t\t\t\ttmp = tr.Query(1, 1, cwq, xj, sj);\n\t\t\t}\n\t\t\twhile (ask[pos].r == i)\n\t\t\t{\n\t\t\t\task[pos].ans = bit.Query(n - ask[pos].l + 1);\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\ttr.Update(1, 1, cwq, a[i], i);\n\t}\n\tsort(ask + 1, ask + q + 1, Cmp1);\n\tfor (int i = 1; i <= q; i++) Print(ask[i].ans), putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1602766333,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF765F \u3010Souvenirs\u3011"
    },
    {
        "content": "## Preface\r\n\r\n\u5728\u4f1a\u538b\u4f4d Trie \u7684\u524d\u63d0\u4e0b\uff0c\u672c\u9898\u6700\u597d\u60f3\u7684\u505a\u6cd5\u5e94\u8be5\u662f\u538b\u4f4d Trie+\u56de\u6eda\u83ab\u961f\uff0c\u53ef\u662f\u7adf\u7136\u6ca1\u4eba\u5199\u8fd9\u4e2a\u505a\u6cd5\u7684\u9898\u89e3\uff1f\r\n\r\n## Solution\r\n\r\n\u6211\u4eec\u5148\u8f6c\u5316\u9898\u610f\uff1a\u8bbe $a_i$ \u5728 $[l,r]$ \u4e2d\u7684\u524d\u9a71\u540e\u7ee7\u5206\u522b\u4e3a $s_i,p_i$\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6c42 $\\min_{\\forall i \\in [l,r]}\\min(s_i - a_i,p_i - a_i)$\u3002\r\n\r\n\u9759\u6001\u67e5\u8be2\u8ba9\u6211\u4eec\u8054\u60f3\u5230\u83ab\u961f\uff0c\u6c42 $\\min$ \u8ba9\u6211\u4eec\u8054\u60f3\u5230\u56de\u6eda\u83ab\u961f\uff0c\u6c42\u524d\u9a71\u540e\u7ee7\u8ba9\u6211\u4eec\u8054\u60f3\u5230 set\u3002\r\n\r\n\u6b64\u65f6\u6211\u4eec\u83b7\u5f97\u4e86\u4e00\u4e2a $O(n\\sqrt n\\log n)$ \u7684\u505a\u6cd5\uff0c\u4f46\u662f\u663e\u7136\u901a\u8fc7\u4e0d\u4e86 $10^5$ \u7684\u6570\u636e\u3002\r\n\r\n\u6b64\u65f6\u60f3\u5230\u538b\u4f4d Trie \u662f\u53ef\u4ee5\u5728 $O(\\log_w V)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3 [Dynamic Predecessor Problem](https://www.luogu.com.cn/problem/U156719) \u7684\uff0c\u90a3\u4e48\u5c06 set \u66ff\u6362\u6210\u538b\u4f4d Trie\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a $O(n\\sqrt n\\log_w V)$\u3002\r\n\r\n\u867d\u7136\u4e0a\u8ff0\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7406\u8bba\u4e0a\u53ef\u4ee5\u901a\u8fc7\uff0c\u4f46\u662f\u5e38\u6570\u592a\u5927\uff0c\u4ea4\u4e0a\u53bb\u540e\u663e\u793a Time limit exceeded on test 16\u3002\r\n\r\n\u6211\u4eec\u518d\u8fdb\u884c\u4e00\u4e2a\u4f18\u5316\uff1a\u56e0\u4e3a\u6c42\u524d\u9a71\u540e\u7ee7\u53ea\u662f\u6bd4\u8f83\u5927\u5c0f\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u503c\u57df\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u5728\u8ba1\u7b97 $\\min$ \u65f6\u518d\u66ff\u6362\u56de\u539f\u6765\u7684 $a_i$\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\sqrt n\\log_w n)$\u3002\r\n\r\n\u867d\u7136\u80fd\u8fc7\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u88ab 2log \u548c\u5206\u5757\u505a\u6cd5\u540a\u6253\u3002/kk\r\n\r\n## Code\r\n\r\n\u5361\u4e86\u4e2a\u795e\u5947\u5757\u957f\u3002\r\n\r\n```cpp\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n//#define int long long\r\nnamespace IO\r\n{\r\n    inline int read()\r\n    {\r\n        int x = 0, f = 1;\r\n        char ch = getchar();\r\n        while(!isdigit(ch)) {if(ch == '-') f = -1; ch = getchar();}\r\n        while(isdigit(ch)) x = (x << 3) + (x << 1) + ch - '0', ch = getchar();\r\n        return x * f;\r\n    }\r\n    template <typename T> inline void print(T x)\r\n    {\r\n        if(x < 0) putchar('-'), x = -x;\r\n        if(x > 9) print(x / 10);\r\n        putchar(x % 10 + '0');\r\n    }\r\n}\r\nusing namespace IO;\r\nconst int N = 1e5 + 5;\r\ntypedef unsigned long long ull;\r\nconst int g = 6;\r\nconst int mod = (1 << g) - 1;\r\null BUFF[1 << 25], *BT = BUFF + sizeof(BUFF) / sizeof(ull);\r\null *alloc(int sz) {return BT -= sz;}\r\nint dep;\r\null *a[5];\r\nvoid trie(int sz)\r\n{\r\n    dep = 1;\r\n    int cnt;\r\n    for ( ; ; dep++)\r\n    {\r\n        cnt = (sz + (1ull << g * dep) - 1) >> g * dep;\r\n        a[dep - 1] = alloc(cnt);\r\n        if (cnt == 1) return ;\r\n    }\r\n}\r\nvoid insert(int x)\r\n{ \r\n    for (int i = 0; i < dep; i++)\r\n    {\r\n        ull p = 1ull << (x >> i * g & mod);\r\n        if (a[i][x >> (i + 1) * g] & p) return ;\r\n        a[i][x >> (i + 1) * g] |= p;\r\n    } \r\n}\r\nvoid erase(int x)\r\n{\r\n    for (int i = 0; i < dep; i++)\r\n        if (a[i][x >> (i + 1) * g] &= ~(1ull << (x >> i * g & mod))) return ;\r\n}\r\nint fdsuf(int x)\r\n{\r\n    for (int i = 0; i < dep; i++)\r\n    {\r\n        int cur = (x >> i * g) & mod;\r\n        ull v = a[i][x >> (i + 1) * g];\r\n        if (v >> cur > 1)\r\n        {\r\n            int res = x >> (i + 1) * g << (i + 1) * g;\r\n            res += (__builtin_ctzll(v >> (cur + 1)) + cur + 1) << i * g;\r\n            for (int j = i - 1; ~j; j--) \r\n                res += __builtin_ctzll(a[j][res >> (j + 1) * g]) << j * g;\r\n            return res;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nint fdpre(int x)\r\n{\r\n    for (int i = 0; i < dep; i++)\r\n    {\r\n        int cur = (x >> i * g) & mod;\r\n        ull v = a[i][x >> (i + 1) * g];\r\n        if (v & ((1ull << cur) - 1))\r\n        {\r\n            int res = x >> (i + 1) * g << (i + 1) * g;\r\n            res += (mod - __builtin_clzll(v & ((1ull << cur) - 1))) << i * g;\r\n            for (int j = i - 1; ~j; j--) \r\n                res += (mod - __builtin_clzll(a[j][res >> (j + 1) * g])) << j * g;\r\n            return res;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nint n, m, tmp, sq, mp[N], va[N], lsh[N], b[N], bel[N], ans[N * 3], c[N], mn = 1e9;\r\nstruct block\r\n{\r\n    int l, r, id;\r\n    bool operator < (block x) const\r\n    {\r\n        if (bel[x.l] == bel[l]) return r < x.r;\r\n        return l < x.l;\r\n    } \r\n}q[N * 3];\r\nvoid upmin(int &x, int y) {x = (x > y ? y : x);}\r\nvoid add(int p) \r\n{\r\n    int x = va[p], y = b[p];\r\n    int suf = fdsuf(y), pre = fdpre(y);\r\n    if (suf != -1) suf = va[c[suf]];\r\n    if (pre != -1) pre = va[c[pre]];\r\n    if (mp[y]) suf = pre = x;\r\n    if (suf != -1) upmin(mn, suf - x);\r\n    if (pre != -1) upmin(mn, x - pre);\r\n    if (!mp[y]++) insert(y);\r\n}\r\nvoid del(int p) {if (!--mp[b[p]]) erase(b[p]);}\r\nsigned main()\r\n{\r\n    n = read();\r\n    for (int i = 1; i <= n; i++) lsh[i] = b[i] = va[i] = read();\r\n    sort(lsh + 1, lsh + n + 1);\r\n    tmp = unique(lsh + 1, lsh + n + 1) - lsh - 1;\r\n    m = read(), sq = n / sqrt(m * 3.5 / 6);\r\n    for (int i = 1; i <= n; i++) \r\n    {\r\n        int tm = lower_bound(lsh + 1, lsh + tmp + 1, b[i]) - lsh;\r\n        c[tm] = i, b[i] = tm, bel[i] = (i - 1) / sq + 1;\r\n    }\r\n    trie(1 << 18);\r\n    for (int i = 1; i <= m; i++) q[i].l = read(), q[i].r = read(), q[i].id = i;\r\n    sort(q + 1, q + m + 1);\r\n    int l = 1, r = 0, lst;\r\n    for (int i = 1; i <= m; i++)\r\n    {\r\n        int nl = min(bel[q[i].l] * sq, n);\r\n        if (bel[q[i].l] != bel[q[i - 1].l]) \r\n        {\r\n            while (l <= r) del(l++);\r\n            l = nl, r = nl - 1, mn = 1e9;\r\n        }\r\n        l = nl;\r\n        if (bel[q[i].l] == bel[q[i].r + 1])\r\n        {\r\n            nl = q[i].r + 1, l = nl, r = nl - 1, mn = 1e9;\r\n            while (l > q[i].l) add(--l);\r\n            while (l < nl) del(l++);\r\n            ans[q[i].id] = mn, mn = 1e9;\r\n            continue;\r\n        }\r\n        if (r < l - 1) r = l - 1; \r\n        while (r < q[i].r) add(++r);\r\n        lst = mn;\r\n        while (l > q[i].l) add(--l);\r\n        while (l < nl) del(l++);\r\n        ans[q[i].id] = mn, mn = lst;\r\n    }\r\n    for (int i = 1; i <= m; i++) print(ans[i]), puts(\"\");\r\n    return 0;\r\n} \r\n```\r\n",
        "postTime": 1675499185,
        "uid": 570066,
        "name": "Fatal_Cactus",
        "ccfLevel": 6,
        "title": "CF765F Souvenirs \u9898\u89e3"
    },
    {
        "content": "\u6211\u6765\u4e00\u53d1\u6bd4\u8f83\u96be\u5199\u4f46\u662f\u597d\u60f3\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u6b64\u9898\u53ef\u4ee5\u76f4\u63a5\u4e0a\u53ea\u51cf\u4e0d\u52a0\u7684\u56de\u6eda\u83ab\u961f\uff0c\u5728\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u7684\u6570\u503c\u6309\u5927\u5c0f\u6392\u5e8f\u7684\u94fe\u8868\uff0c\u7531\u4e8e\u662f\u627e\u5230\u4e24\u4e2a\u6570\u76f8\u51cf\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u94fe\u8868\u4e0a\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e4b\u95f4\u7684\u5dee\u3002\n\n\u94fe\u8868\u5220\u9664\u662f $\\mathcal{O(1)}$ \u7684\uff0c\u90a3\u4e48\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u5220\u9664\u540e\u7684\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\u5220\u53bb\u4e00\u4e2a\u6570\u76f8\u5f53\u4e8e\u628a\u65c1\u8fb9\u4e24\u4e2a\u6570\u7684\u5dee\u503c\u5408\u5e76\uff0c\u53ef\u4ee5\u7528\u503c\u57df\u7ebf\u6bb5\u6811/\u5806\u7ef4\u62a4\uff0c\u4f46\u662f\u52a0\u4e0a\u83ab\u961f\u603b\u590d\u6742\u5c31\u4f1a\u8fbe\u5230 $\\mathcal{O(n\\sqrt{n}\\log n)}$ \uff0c\u5927\u6982\u7387\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u6bd4\u8f83\u597d\u5165\u624b\u7684\u65b9\u5411\u662f\u4fee\u6539\u662f $\\mathcal{O(n\\sqrt{n})}$ \u7ea7\u522b\u7684\uff0c\u4f46\u662f\u67e5\u8be2\u5374\u662f $\\mathcal{O(n)}$ \u7ea7\u522b\u7684\uff0c\u4e0d\u96be\u60f3\u5230\u6839\u53f7\u5206\u6cbb\u4e00\u4e0b\uff0c\u4f7f\u5f97\u4fee\u6539\u53ef\u4ee5\u505a\u5230 $\\mathcal{O(1)}$ \uff0c\u901a\u7528\u65b9\u6cd5\u662f\u503c\u57df\u5206\u5757\uff0c\u7ef4\u62a4\u6bcf\u4e00\u5757\u7684\u5305\u542b\u5728\u5185\u7684\u4e2a\u6570\uff0c\u4fee\u6539\u53ef\u4ee5\u901a\u8fc7\u666e\u901a\u7684\u52a0\u51cf $\\mathcal{O(1)}$ \u7ef4\u62a4\uff0c\u67e5\u8be2\u4ece\u7b2c\u4e00\u5757\u5411\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u5305\u542b\u4e2a\u6570\u4e0d\u4e3a $0$ \u7684\u5757\uff0c\u7136\u540e\u66b4\u529b\u627e\u6574\u4e2a\u5757\u6c42\u6700\u5c0f\u503c\u3002\n\n\u4f46\u662f\u8fd9\u9898\u7684\u503c\u57df\u8303\u56f4\u5f88\u5927\uff0c\u76f4\u63a5\u5206\u5757\u53ef\u5b9a\u4e0d\u884c\uff0c\u6240\u4ee5\u8fd8\u8981\u4e00\u4e9b\u5904\u7406\u3002\n\n\u7531\u4e8e\u8fd9\u4e9b\u503c\u90fd\u662f\u94fe\u8868\u4e0a\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u7684\u5dee\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u603b\u548c\u5c0f\u4e8e\u7b49\u4e8e $10^9$ \uff0c\u90a3\u4e48\u6839\u636e\u62bd\u5c49\u539f\u7406\uff0c\u5982\u679c\u76ee\u524d\u6709 $x$ \u4e2a\u6570\uff0c\u90a3\u4e48\u6700\u5c0f\u503c\u5c31\u5c0f\u4e8e\u7b49\u4e8e $\\frac{10^9}{x}$ \u3002\n\n\u90a3\u4e48\u8003\u8651\u518d\u6765\u4e00\u6b21\u6839\u53f7\u5206\u6cbb\uff0c\u8bbe\u4e00\u4e2a\u9619\u503c $B$ \uff0c\u5bf9\u4e8e\u5bf9\u4e8e\u5927\u4e8e $B$ \u7684\u4e2a\u6570\u53ef\u4ee5\u4e0a\u503c\u57df\u5206\u5757\u7684\u65b9\u6cd5\uff0c\u4fee\u6539\u6548\u7387 $\\mathcal{O(n\\sqrt{n})}$ \uff0c\u67e5\u8be2\u6548\u7387 $\\mathcal{O(n\\sqrt{\\frac{10^9}{B}})}$ \uff0c\u5c0f\u4e8e $B$ \u7684\u4e2a\u6570\u53ef\u4ee5\u76f4\u63a5\u4e0a\u503c\u57df\u7ebf\u6bb5\u6811/\u5806\uff0c\u4fee\u6539\u6548\u7387 $\\mathcal{O(B\\sqrt{n}\\log n)}$ \uff0c\u67e5\u8be2\u6548\u7387 $\\mathcal{O(n\\log n)}$ \u3002\n\n\u6570\u5b66\u4e0d\u592a\u884c\uff0c\u5927\u6982 $B$ \u53d6\u5230 $2000$ \u5de6\u53f3\u6bd4\u8f83\u597d\u5427\u3002\u3002\u3002\n\n\u4f46\u662f\u56de\u6eda\u83ab\u961f\u67e5\u8be2\u65f6\u8981\u66b4\u529b\u5220\u9664\u5c0f\u5757\u5728\u5c0f\u4e8e $B$ \u7684\u4e2a\u6570\u65f6\u662f $\\mathcal{O(nB\\log n)}$ \u7684\uff0c\u53ea\u8c03 $B$ \u7684\u5927\u5c0f\u65e0\u6cd5\u83b7\u5f97\u66f4\u4f18\u7684\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u8003\u8651\u8c03\u83ab\u961f\u7684\u5757\u7684\u5927\u5c0f\uff0c\u8bbe\u83ab\u961f\u7684\u5757\u7684\u5927\u5c0f\u4e3a $A$ \u3002\n\n\u67e5\u8be2\u64cd\u4f5c\u548c $m$ \u7684\u5927\u5c0f\u4ee5\u53ca $B$ \u7684\u5927\u5c0f\u6302\u94a9\uff0c\u6240\u4ee5\u53ea\u770b\u4fee\u6539\uff0c\u5927\u4e8e $B$ \u65f6\u662f $\\mathcal{O(\\frac{n^2}{A})}$ \uff0c\u5c0f\u4e8e $B$ \u662f $\\mathcal{O(\\frac{nB\\log n}{A})}$ \u548c $\\mathcal{O(AB\\log n)}$ \uff0c\u53d6 $A=\\frac{n}{\\sqrt{n\\log n}}$ \u65f6\u603b\u590d\u6742\u8fd1\u4f3c\u4e8e $\\mathcal{O(n\\sqrt{n\\log n})}$ \uff0c\u5927\u6982\u7387\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002",
        "postTime": 1606984696,
        "uid": 116015,
        "name": "bellmanford",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF765F \u3010Souvenirs\u3011"
    },
    {
        "content": "# \u77e5\u8bc6\u70b9: \u7ebf\u6bb5\u6811\uff0c\u4e3b\u5e2d\u6811\n\n\u539f\u9898\u9762 [Luogu](https://www.luogu.com.cn/problem/CF765F)\n\n---\n\n## \u626f\n\n\u8fd9\u79cd\u5199\u6cd5\u597d\u96be\u53d7\u554a\u554a\uff0c\u8fb9\u754c [\u8c03\u5410\u4e86](https://www.luogu.com.cn/record/list?pid=CF765F&user=186186&page=1)\u3002  \n\u611f\u8c22 [\u795e\u4ed9 zzy \u7684\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/33642925) \u6551\u6211\u4e00\u547d\uff01\n\n---\n\n## \u9898\u610f\u7b80\u8ff0\n\n>\u7ed9\u5b9a\u4e00\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c$m$ \u6b21\u8be2\u95ee\u3002  \n>\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u53c2\u6570 $l,r$\uff0c\u6c42 $\\min\\limits_{i,j\\in[l,r](l\\not= r)}|a_i-a_j|$\u3002  \n>$1\\le n\\le 10^5$\uff0c$1\\le m\\le 3\\times 10^5$\uff0c$0\\le a_i\\le 10^9$\u3002\n\n---\n\n## \u5206\u6790\u9898\u610f\n\n\u4e0d\u5f3a\u5236\u5728\u7ebf\uff0c\u8003\u8651\u79bb\u7ebf\u8be2\u95ee\uff0c\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u3002  \n\u5347\u5e8f\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 \u53f3\u7aef\u70b9\u4e3a\u5f53\u524d\u679a\u4e3e\u5230\u7684\u7aef\u70b9\u7684 \u4e0d\u540c\u5de6\u7aef\u70b9\u7684\u7b54\u6848\u3002  \n\u6bcf\u6b21\u4ec5\u9700\u8003\u8651 $r-1\\rightarrow r$ \u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u5373\u5fc5\u9009\u62e9 $a_r$ \u7684\u6570\u5bf9\u3002  \n\n---\n\n\u5206\u7c7b\u8ba8\u8bba\uff0c\u5148\u8003\u8651 $a_r$ \u4e0e $a_l>a_r(1<l<r)$ \u7ec4\u6210\u7684\u6570\u5bf9\uff0c\u5176\u8d21\u732e\u4e3a $a_r - a_l$\u3002  \n\u5148\u627e\u5230\u6700\u5927\u7684 $x$\uff0c\u6ee1\u8db3 $a_x>a_r$\uff0c\u663e\u7136\u5bf9\u4e8e $1<l\\le x$\uff0c\u65b0\u589e\u4e86\u4e00\u4e2a\u5019\u9009\u7b54\u6848\u4e3a $a_r-a_l$\uff0c\u7ebf\u6bb5\u6811\u533a\u95f4\u53d6 $\\min$ \u5373\u53ef\u3002  \n\n\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u53ef\u80fd $\\exists y<x, a_y>a_r$\uff0c\u4e14 $a_r-a_y<a_r-a_x$\uff0c\u53ef\u80fd\u5bf9\u7b54\u6848\u4f5c\u51fa\u8d21\u732e\u3002  \n\u53c8\u53d1\u73b0 $y$ \u60f3\u8981\u5bf9\u7b54\u6848\u505a\u51fa\u8d21\u732e\uff0c\u8fd8\u9700\u6ee1\u8db3 $a_r-a_y < a_y-a_x$\uff0c\u5426\u5219\u6570\u5bf9 $(a_x,a_y)$ \u66f4\u4f18\u3002  \n\u5219 $a_y$ \u7684\u53d6\u503c\u8303\u56f4\u4e3a\uff1a$a_r<a_y<\\dfrac{a_r+a_x}{2}$\u3002  \n\u5df2\u77e5 $y$ \u7684\u53d6\u503c\u8303\u56f4\u548c\u4f4d\u7f6e\u8303\u56f4\uff0c\u8003\u8651\u4f7f\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4 **\u6743\u503c** \u533a\u95f4\u5185 \u6700\u53f3\u4fa7\u7684\u4f4d\u7f6e\u3002  \n\u6ce8\u610f\u67e5\u8be2\u7684\u8fb9\u754c\u53d6\u503c\uff0c\u5728\u7206\u96f6\u5c0f\u6280\u5de7\u4e2d\u4f1a\u7ed9\u51fa\u3002  \n\u627e\u5230 $y$ \u540e\uff0c\u66f4\u65b0 $1\\le l\\le y$ \u7684\u7b54\u6848\u3002\n\n\u540c\u7406\uff0c\u8fd8\u53ef\u80fd $\\exists y<x, a_y>a_r$\uff0c\u4e14 $a_r<a_z<\\dfrac{a_r+a_y}{2}$\u3002  \n\u4e0d\u65ad\u627e\u4e0b\u53bb\u5e76\u66f4\u65b0\u7b54\u6848\u3002  \n\u8fc7\u7a0b\u4e2d\u6bcf\u6b21\u4e3b\u5e2d\u6811\u67e5\u8be2\u7684\u503c\u57df \u90fd\u4f1a\u51cf\u534a\uff0c\u6545\u67e5\u8be2\u6b21\u6570\u4e0d\u591a\u4e8e $\\log r$ \u6b21\u3002\n\n---\n\n\u518d\u8003\u8651 $a_r$ \u4e0e $a_l<a_r(1<l<r)$ \u7ec4\u6210\u7684\u6570\u5bf9\uff0c\u65b9\u6cd5\u540c\u4e0a\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log^2 n)$ \u7ea7\u522b\u3002\n\n---\n\n## \u7206\u96f6\u5c0f\u6280\u5de7\n\n\u4e00\u4e2a\u5947\u602a\u7684\u8fb9\u754c\u95ee\u9898\u3002\u5bf9\u4e8e $x\\in \\mathbf{Z}$\uff1a\n\n$x\\le \\dfrac{a + b}{2}\\iff x\\le \\left\\lfloor\\dfrac{a+b}{2}\\right\\rfloor$  \n\n$x> \\dfrac{a+b}{2}\\iff x\\ge \\left\\lfloor\\dfrac{a+b}{2}\\right\\rfloor+1$\n\n---\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n//\u77e5\u8bc6\u70b9\uff1a\u7ebf\u6bb5\u6811\uff0c\u4e3b\u5e2d\u6811\n/*\nBy:Luckyblock\n*/\n#include <algorithm>\n#include <cstdio>\n#include <ctype.h>\n#include <cstring>\n#define ll long long\nconst int kMaxn = 1e5 + 10;\nconst int kMaxm = 3e5 + 10;\nconst int kInf = 1e9 + 5;\n//=============================================================\nstruct Que {\n  int l, r, id;\n} q[kMaxm];\nint n, m, a[kMaxn], ans[kMaxm];\n//=============================================================\ninline int read() {\n  int f = 1, w = 0;\n  char ch = getchar();\n  for (; !isdigit(ch); ch = getchar())\n    if (ch == '-') f = -1;\n  for (; isdigit(ch); ch = getchar()) w = (w << 3) + (w << 1) + (ch ^ '0');\n  return f * w;\n}\nvoid GetMax(int &fir, int sec) {\n  if (sec > fir) fir = sec;\n}\nvoid GetMin(int &fir, int sec) {\n  if (sec < fir) fir = sec;\n}\nbool Compare(Que fir, Que sec) {\n  if (fir.r != sec.r) return fir.r < sec.r;\n  return fir.l < sec.l;\n}\n//\u67e5\u627e\u6700\u5927\u4e0b\u6807\uff0c\u4e3b\u5e2d\u6811\uff0c\u7ef4\u62a4 **\u6743\u503c** \u533a\u95f4\u5185 \u6700\u53f3\u4fa7\u7684\u4f4d\u7f6e \nstruct ScientificConceptOfDevelopmentTree {\n  #define ls (lson[now_])\n  #define rs (rson[now_])\n  #define mid ((L_+R_)>>1) \n  int node_num, root[kMaxn];\n  int lson[kMaxn << 5], rson[kMaxn << 5], maxpos[kMaxn << 5];\n  void Insert(int pre_, int &now_, int L_, int R_, int val_, int pos_) {\n    now_ = ++ node_num;\n    maxpos[now_] = pos_, ls = lson[pre_], rs = rson[pre_];\n    if (L_ >= R_) return ;\n    if (val_ > mid) Insert(rson[pre_], rs, mid + 1, R_, val_, pos_);\n    else Insert(lson[pre_], ls, L_, mid, val_, pos_);\n  }\n  int Query(int now_, int L_, int R_, int ql_, int qr_) {\n    if (L_ > R_) return 0; // \n    if (ql_ <= L_ && R_ <= qr_) return maxpos[now_];\n    int ret = 0;\n    if (ql_ <= mid) GetMax(ret, Query(ls, L_, mid, ql_, qr_));\n    if (qr_ > mid) GetMax(ret, Query(rs, mid + 1, R_, ql_, qr_));\n    return ret;\n  }\n} hjt;\n//\u533a\u95f4\u53d6\u6700\u5c0f\u503c\uff0c\u5355\u70b9\u67e5\u8be2\nstruct SegmentTree {\n  #define ls (now_<<1)\n  #define rs (now_<<1|1)\n  #define mid ((L_+R_)>>1)\n  int minnum[kMaxn << 2], tag[kMaxn << 2]; \n  void Build(int now_, int L_, int R_) {\n    minnum[now_] = kInf, tag[now_] = kInf;\n    if (L_ == R_) return ;\n    Build(ls, L_, mid), Build(rs, mid + 1, R_);\n  }\n  void Pushup(int now_) {\n    minnum[now_] = std :: min(minnum[ls], minnum[rs]);\n  }\n  void Pushdown(int now_) {\n    if (tag[now_] == kInf) return ;\n    GetMin(minnum[ls], tag[now_]), GetMin(tag[ls], tag[now_]);\n    GetMin(minnum[rs], tag[now_]), GetMin(tag[rs], tag[now_]);\n    tag[now_] = kInf;\n  }\n  void Modify(int now_, int L_, int R_, int l_, int r_, int val_) {\n    if (L_ > R_) return ;\n    if (l_ <= L_ && R_ <= r_) {\n      GetMin(minnum[now_], val_);\n      GetMin(tag[now_], val_);\n      return ;\n    }\n    Pushdown(now_);\n    if (l_ <= mid) Modify(ls, L_, mid, l_, r_, val_);\n    if (r_ > mid) Modify(rs, mid + 1, R_, l_, r_, val_);\n    Pushup(now_);\n  }\n  int Query(int now_, int L_, int R_, int pos_) {\n    if (L_ >= R_) return minnum[now_];\n    Pushdown(now_);\n    if (pos_ <= mid) return Query(ls, L_, mid, pos_);\n    return Query(rs, mid + 1, R_, pos_);\n  }\n} seg;\nvoid Update(int r) {\n  for (int pre = hjt.Query(hjt.root[r - 1], 0, kInf, a[r], kInf); pre; ) {\n    seg.Modify(1, 1, n, 1, pre, a[pre] - a[r]);\n    if (a[r] == a[pre]) break;\n    pre = hjt.Query(hjt.root[pre - 1], 0, kInf, a[r], (a[r] + a[pre]) / 2);\n  }\n  for (int pre = hjt.Query(hjt.root[r - 1], 0, kInf, 0, a[r]); pre; ) {\n    seg.Modify(1, 1, n, 1, pre, a[r] - a[pre]);\n    if (a[r] == a[pre]) break;\n    pre = hjt.Query(hjt.root[pre - 1], 0, kInf, (a[r] + a[pre]) / 2 + 1, a[r]); //\n  } \n}\n//=============================================================\nint main() {\n  n = read(); seg.Build(1, 1, n);\n  for (int i = 1; i <= n; ++ i) a[i] = read();\n  m = read();\n  for (int i = 1; i <= m; ++ i) q[i] = (Que) {read(), read(), i};\n  std :: sort (q + 1, q + m + 1, Compare);\n  \n  for (int r = 1, cntq = 1; r <= n; ++ r) {\n    Update(r);\n    for (; q[cntq].r <= r && cntq <= m; ++ cntq) ans[q[cntq].id] = seg.Query(1, 1, n, q[cntq].l);\n    hjt.Insert(hjt.root[r - 1], hjt.root[r], 0, kInf, a[r], r);\n  }\n  for (int i = 1; i <= m; ++ i) printf(\"%d\\n\", ans[i]);\n  return 0;\n}\n```",
        "postTime": 1598441943,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF765F \u3010Souvenirs\u3011"
    },
    {
        "content": "[CF765F Souvenirs](/problem/CF765F)\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u7c7b\u4f3c\u8be2\u95ee\u533a\u95f4\u9006\u5e8f\u5bf9\uff08\u90fd\u548c\u6392\u5e8f\u76f8\u5173\uff0c\u90fd\u548c\u70b9\u5bf9\u76f8\u5173\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u987a\u7740 [P5046](/problem/P5046) \u7684\u65b9\u6cd5\u53bb\u60f3\u3002\n\n\u5206\u5757\u3002\u628a\u8be2\u95ee\u5206\u6210\u8be2\u95ee\u7aef\u70b9\u540c\u5757\u4e0e\u8be2\u95ee\u7aef\u70b9\u5f02\u5757\u7684\u60c5\u51b5\u3002\n\n## \u8be2\u95ee\u7aef\u70b9\u540c\u5757\n\n\u6b64\u65f6\u53ef\u4ee5\u8003\u8651\u5904\u7406\u51fa\u6bcf\u4e2a\u5757\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u3002\u6cbf\u7740\u6392\u5e8f\u540e\u7684\u6570\u7ec4\uff0c\u6309\u5927\u5c0f\u987a\u5e8f\u5730\u201c\u53d6\u51fa\u201d$l\\sim r$ \u7684\u8fd9\u4e00\u6bb5\u533a\u95f4\uff0c\u7136\u540e\u7edf\u8ba1\u3002\n\n## \u8be2\u95ee\u7aef\u70b9\u5f02\u5757\n\n\u53c2\u7167 [P5046](/problem/P5046) \u5206\u6210\u5982\u4e0b\u51e0\u90e8\u5206\uff1a\n\n1. \u6563\u5757\u5185\u90e8\u4e0e\u6563\u5757\u4e4b\u95f4\n2. \u6574\u5757\u4e0e\u6563\u5757\u4e4b\u95f4\n3. \u6574\u5757\u5185\u90e8\u4e0e\u6574\u5757\u4e4b\u95f4\n\n### \u6563\u5757\u5185\u90e8\u4e0e\u6563\u5757\u4e4b\u95f4\n\n\u4e0e\u8be2\u95ee\u7aef\u70b9\u540c\u5757\u60c5\u51b5\u7c7b\u4f3c\uff0c\u53d6\u51fa\u4e24\u4e2a\u6563\u5757\u5206\u522b\u5f97\u6392\u5e8f\u540e\u7684\u72b6\u6001\uff0c\u5f52\u5e76\u8d77\u6765\uff0c\u7136\u540e\u7edf\u8ba1\uff0c\u6211\u76f4\u63a5\u7528\u4e86 `STL`\u3002\n\n### \u6574\u5757\u4e0e\u6563\u5757\u4e4b\u95f4\n\n\u9884\u5904\u7406\u4e24\u4e2a\u6570\u7ec4\uff1a\n\n+ $D1_{i,j}$ \u4ee3\u8868 **$i$ \u6240\u5728\u5757\u4ee5 $i$ \u7ed3\u5c3e\u7684\u524d\u7f00** \u4e0e **$i$ \u6240\u5728\u5757\u7684\u4e0b\u4e00\u5757\u81f3\u7b2c $j$ \u5757** \u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u3002\n+ $D2_{i,j}$ \u4ee3\u8868 **$i$ \u6240\u5728\u5757\u4ee5 $i$ \u5f00\u5934\u7684\u540e\u7f00** \u4e0e **$i$ \u6240\u5728\u5757\u7684\u4e0a\u4e00\u5757\u81f3\u7b2c $j$ \u5757** \u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u3002\n\n\u90a3\u5982\u4f55\u9884\u5904\u7406\u5462\uff1f\u53ef\u4ee5\u8003\u8651\u5148\u5904\u7406 **\u4e00\u4e2a\u4f4d\u7f6e\u5bf9\u4e00\u4e2a\u5757\u7684\u7b54\u6848**\uff0c\u518d\u524d\u7f00\u548c\u53d8\u6210 **\u4e00\u4e2a\u524d\u7f00/\u540e\u7f00\u5bf9\u4e00\u4e2a\u5757\u7684\u7b54\u6848**\uff0c\u518d\u524d\u7f00\u548c\u6210 **\u4e00\u4e2a\u524d\u7f00/\u540e\u7f00\u5bf9\u4e00\u4e9b\u5757\u7684\u7b54\u6848**\u3002\n\n\u90a3 **\u4e00\u4e2a\u4f4d\u7f6e\u5bf9\u4e00\u4e2a\u5757\u7684\u7b54\u6848** \u600e\u4e48\u7b97\u5462\uff1f\u53ef\u4ee5\u5148\u94a6\u5b9a\u4e24\u4e2a\u5757 $a,b$\uff0c\u7136\u540e\u7528\u53cc\u6307\u9488\u7b97\u5757 $a$ \u5185\u7684\u6240\u6709\u6570\u5206\u522b\u4e0e\u5757 $b$ \u7684\u7b54\u6848\u3002\n\n\u5177\u4f53\u7b97\u6cd5\u4e3a\uff1a\u5757 $a$ \u5185\u7684\u5143\u7d20\u4ece\u5c0f\u5f80\u5927\u7b97\uff08\u522b\u5fd8\u4e86\u6211\u4eec\u4e4b\u524d\u7ed9\u6bcf\u4e2a\u5757\u6392\u8fc7\u5e8f\uff09\uff0c\u7136\u540e\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488 $p$\uff0c$p$ \u4e00\u5f00\u59cb\u4f4d\u4e8e $b$ \u7684\u5757\u9996\uff0c\u7136\u540e\u968f\u7740 $a$ \u5185\u8ba1\u7b97\u7684\u4f4d\u7f6e\u4ece\u524d\u5f80\u540e\uff0c$p$ \u4e5f\u968f\u7740\u53d8\u5927\uff0c\u671f\u95f4\u6ee1\u8db3\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u5185 $a_p<a_i$\u3002\n\n\u8fd9\u4e24\u4e2a\u6570\u7ec4\u6ca1\u6709\u76f8\u4ea4\u7684\u5730\u65b9\uff0c\u8003\u8651\u5c06\u5176\u5408\u5e76\u3002\n\n### \u6574\u5757\u5185\u90e8\u4e0e\u6574\u5757\u4e4b\u95f4\n\n\u8003\u8651\u9884\u5904\u7406 $S_{i,j}$ \u4ee3\u8868\u5757 $i$ \u5f00\u5934\u81f3\u5757 $j$ \u7ed3\u5c3e\u4e4b\u95f4\u7684\u7b54\u6848\u3002\n\n\u53ef\u4ee5\u5148\u5904\u7406 $S_{i,i}$ \u4ee3\u8868\u4e00\u4e2a\u5757\u7684\u7b54\u6848\uff0c\u7136\u540e\u5229\u7528 $D$ \u6570\u7ec4\u6269\u5c55\u5230\u591a\u4e2a\u5757\u7684\u7b54\u6848\u3002\n\n## \u4ee3\u7801\n\n\u611f\u89c9\u5199\u7684\u8fd8\u7b97\u7b80\u5355\uff0c100 \u884c\u4e0d\u5230\u3002\n\n```cpp\n#include<stdio.h>\n#include<math.h>\n#include<algorithm>\n\nconst int SIZ = 1000000;\n\nnamespace IO{ // by OneZzz6174\n\nusing IO::read;\nusing IO::readc;\nusing IO::print;\nusing IO::flush;\n\n#define rint register int\n#define rep(i,a,b) for(rint i = (a);i <= (b);++i)\n#define Rep(i,a,b) for(rint i = (a);i >= (b);--i)\n\ninline int max2(rint a,rint b){ return a>b?a:b; }\ninline int min2(rint a,rint b){ return a<b?a:b; }\ninline int chkmax(rint &a,rint b){ return a=a>b?a:b; }\ninline int chkmin(rint &a,rint b){ return a=a<b?a:b; }\ninline int abs2(rint x){ return x>0?x:-x; }\n\nconst int maxn = 1e5 + 5;\nconst int sqr = 325;\nconst int inf = 1e9 + 5;\n\nint n,m,a[maxn],B,C;\nint D[maxn][sqr],S[sqr][sqr];\nint st[sqr],ed[sqr],bl[maxn];\nint tmp[maxn];\n\nstruct value{\n\tint i,x;\n\tbool operator<(const value& v) const {\n\t\treturn x < v.x;\n\t}\n} b[maxn];\n\nint qry0(rint l,rint r){\n\tint ans = inf,len = 0;\n\trep(i,st[bl[l]],ed[bl[l]])\n\t\tif(l <= b[i].i && b[i].i <= r) tmp[++len] = b[i].x;\n\trep(i,2,len) chkmin(ans,tmp[i] - tmp[i - 1]);\n\treturn ans;\n}\n\nint qry1(rint l1,rint r1,rint l2,rint r2){\n\tint len = 0,p = r1 - l1 + 1,ans = inf;\n\trep(i,st[bl[l1]],ed[bl[l1]])\n\t\tif(l1 <= b[i].i && b[i].i <= r1) tmp[++len] = b[i].x;\n\trep(i,st[bl[l2]],ed[bl[l2]])\n\t\tif(l2 <= b[i].i && b[i].i <= r2) tmp[++len] = b[i].x;\n\tstd::inplace_merge(tmp + 1,tmp + p + 1,tmp + len + 1);\n\trep(i,2,len) chkmin(ans,tmp[i] - tmp[i - 1]); \n\treturn ans;\n}\n\nvoid init(){\n\tB = sqrt(n); C  = (n - 1) / B + 1;\n\trep(i,1,C){\n\t\tst[i] = (i - 1) * B + 1;\n\t\ted[i] = i == C ? n : i * B;\n\t\trep(j,st[i],ed[i]) bl[j] = i,b[j].i = j,b[j].x = a[j];\n\t\tstd::sort(b + st[i],b + ed[i] + 1);\n\t}\n\trep(i,1,C){\n\t\trep(j,1,C) if(i ^ j){\n\t\t\trint p = st[j];\n\t\t\trep(k,st[i],ed[i]){\n\t\t\t\twhile(p < ed[j] && b[p + 1].x < b[k].x) ++p;\n\t\t\t\tD[b[k].i][j] = abs2(b[k].x - b[p].x);\n\t\t\t\tif(p < ed[j]) chkmin(D[b[k].i][j],abs2(b[k].x - b[p + 1].x));\n\t\t\t}\n\t\t}\n\t\trep(j,st[i],ed[i]) rep(k,i + 2,C) chkmin(D[j][k],D[j][k - 1]);\n\t\trep(j,st[i],ed[i]) Rep(k,i - 2,0) chkmin(D[j][k],D[j][k + 1]);\n\t\trep(k,1,i - 1) rep(j,st[i] + 1,ed[i]) chkmin(D[j][k],D[j - 1][k]);\n\t\trep(k,i + 1,C) Rep(j,ed[i] - 1,st[i]) chkmin(D[j][k],D[j + 1][k]);\n\t\tS[i][i] = qry0(st[i],ed[i]);\n\t}\n\trep(i,1,C) rep(j,i + 1,C) S[i][j] = min2(min2(S[i][j - 1],S[j][j]),D[ed[j]][i]);\n}\t\n\nint qry(rint l,rint r){\n\tif(bl[l] == bl[r]) return qry0(l,r);\n\tint ans = qry1(l,ed[bl[l]],st[bl[r]],r);\n\tif(bl[l] + 1 <= bl[r] - 1){\t\n\t\tchkmin(ans,S[bl[l] + 1][bl[r] - 1]);\n\t\tchkmin(ans,min2(D[r][bl[l] + 1],D[l][bl[r] - 1]));\n\t}\n\treturn ans;\n}\n\nint main(){\n\tread(n); rep(i,1,n) read(a[i]);\n\tinit(); read(m);\n\twhile(m--){\n\t\tint l,r; read(l,r);\n\t\tprint(qry(l,r),'\\n');\n\t}\n\treturn flush(),0;\n}\n```\n\n",
        "postTime": 1648620587,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF765F Souvenirs"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n- \u7ef4\u62a4\u957f\u5ea6\u4e3a $n(1 \\le n \\le 10^5)$ \u7684\u6574\u6570\u5e8f\u5217 $a(1 \\le a_i \\le 10^9)$\uff0c\u652f\u6301 $m(1 \\le m\\le 3 \\times 10^5)$ \u4e2a\u4ee5\u4e0b\u67e5\u8be2\uff1a\n- \u7ed9\u51fa $l,r(1 \\le l \\le r \\le n)$\uff0c\u8f93\u51fa\u5bf9\u4e8e $i,j \\in [l,r]$\uff0c\u4e14\u6ee1\u8db3 $i \\ne j$\uff0c$|a_i-a_j|$ \u7684\u6700\u5c0f\u503c\u3002\n\n## \u7b80\u8981\u505a\u6cd5\n\n- \u770b\u5230\u5141\u8bb8\u79bb\u7ebf\uff0c\u8003\u8651\u79bb\u6563\u5316\u540e\u83ab\u961f\u3002\n- \u73b0\u5728\u95ee\u9898\u53d8\u6210\u4e86\uff1a\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u652f\u6301\u52a0\u6570\u5220\u6570\uff0c\u627e\u4e00\u4e2a\u6570\u7684\u524d\u9a71\u540e\u7ee7\u3002\n- \u5f88\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005 `std::set` \u7b49\u7ef4\u62a4\u8fd9\u4e2a\u96c6\u5408\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u8ba9\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a $O(n \\sqrt m \\log n)$\uff0c\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u3002\n- \u6211\u4eec\u6362\u4e00\u79cd\u601d\u8def\uff0c\u76f4\u63a5\u628a\u83ab\u961f\u6362\u6210\u56de\u6eda\u83ab\u961f\uff08\u53ea\u52a0\u4e0d\u5220\uff09\uff0c\u540c\u65f6\u503c\u57df\u5206\u5757\u3002\n- \u8003\u8651\u628a\u67e5\u8be2\u65f6\u7684\u8d21\u732e\u5206\u4e3a\u4e24\u7c7b\uff1a\u6765\u81ea\u4e0d\u540c\u5757\u7684\u548c\u6765\u81ea\u76f8\u540c\u5757\u7684\u3002\u4e0d\u540c\u5757\u7684\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5757\u5185\u8bb0\u5f55\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6765\u5f88\u65b9\u4fbf\u7684\u7ef4\u62a4\uff0c\u95ee\u9898\u662f\u5982\u4f55\u7ef4\u62a4\u6765\u81ea\u76f8\u540c\u5757\u7684\u6570\u7684\u8d21\u732e\u3002\n- \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u503c\u57df\u5206\u5757\u6362\u6210\u4e00\u4e2a bitset\uff0c\u7136\u540e\u7528 bitset \u7684 `_Find_next` \u6765\u627e\u5230\u4e00\u4e2a\u6570\u7684\u540e\u7ee7\u3002\u524d\u9a71\u7684\u7ef4\u62a4\u540c\u540e\u7ee7\uff0c\u53ef\u4ee5\u5f00\u4e00\u4e2a\u53cd\u5411\u7684 bitset \u6765\u7ef4\u62a4\u3002\n- \u6211\u4eec\u8bbe\u5b9a\u503c\u57df\u5206\u5757\u7684\u5757\u957f\u4e3a $B$\uff0c\u8fd9\u6837\u7684\u8bdd\u79fb\u52a8\u4e00\u6b21\u83ab\u961f\u7aef\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\dfrac B w)$\uff0c\u67e5\u8be2\u65f6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\dfrac n B)$\u3002\n- \u8bbe\u5b9a\u83ab\u961f\u5757\u957f\u4e3a $\\left \\lceil \\dfrac n{\\sqrt m} \\right\\rceil$\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\dfrac{n \\sqrt mB}w + \\dfrac{nm}B)$\uff0c\u5f53 $B=256$ \u65f6\u901f\u5ea6\u8f83\u5feb\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n[\u4ee3\u7801\u53c2\u8003](http://codeforces.com/contest/765/submission/149596166)",
        "postTime": 1647252747,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "CF765F \u9898\u89e3"
    },
    {
        "content": "[\u9898\u610f](https://www.luogu.com.cn/problem/CF765F)\n\n\n\u53ef\u4ee5\u7528\u8054\u8d5b\u96be\u5ea6\u7b97\u6cd5\u89e3\u51b3\uff0c\u4f46\u5927\u6982\u9898\u89e3\u533a\u91cc\u5e76\u6ca1\u6709\uff1f\n\n\u5728\u7ebf\u80af\u5b9a\u662f\u4e0d\u592a\u884c\u7684\uff0c\u8003\u8651\u5148\u5c06\u8be2\u95ee\u6309\u53f3\u7aef\u70b9\u5347\u5e8f\u6392\u5e8f\uff0c\u5efa\u7acb\u666e\u901a\u7684\u7ebf\u6bb5\u6811\uff0c\u6811\u4e0a $[l,r]$ \u50a8\u5b58\u7684\u5c31\u662f\u5de6\u7aef\u70b9\u5728 $l,r$ \u4e2d\uff0c\u53f3\u7aef\u70b9\u5728 $[1,R]$ \u4e2d\u7684 $|a_i-a_j|$ \u6700\u5c0f\u503c\uff0c\u5176\u4e2d $R$ \u4ece $2$ \u626b\u63cf\u81f3 $n$ \uff0c\u4e0d\u65ad\u52a0\u5165\u65b0\u7684\u53f3\u7aef\u70b9\uff0c\u6b64\u5916\u518d\u8bb0\u4e00\u4e0b\u6bcf\u4e2a\u533a\u95f4\u7684\u6570\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u3002\n\n\u5728\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u5f53\u524d\u6307\u5b9a\u52a0\u5165\u7684\u6570 $va$ \uff0c\u627e\u5230 $[l,r]$ \u5185\u5b83\u7684\u524d\u9a71 $\\text{pre}$ \u4e0e\u540e\u7ee7 $\\text{nxt}$\uff0c\u540c\u65f6\u7528 $va-\\text{pre}$ \u4e0e $\\text{nxt}-va$ \u66f4\u65b0\u7b54\u6848\uff0c\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u7c7b\u4f3c\u4e8e segment tree beats \uff0c\u5e94\u8be5\u518d\u8bb0\u5f55\u4e00\u4e2a cur \u4ee3\u8868\u5df2\u7ecf\u5904\u7406\u5b8c\u7684\u8282\u70b9\u4e2d\u6700\u5c0f\u503c\uff0c\u5e76\u968f\u65f6\u526a\u679d\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u6309\u6b63\u5e38\u60c5\u51b5\u67e5\u8be2\u3002\n\n\u590d\u6742\u5ea6\u5927\u6982\u52bf\u80fd\u5206\u6790\u5427\uff0c\u4e0d\u592a\u4f1a\u8bc1\u3002\n\n\u4ee3\u7801\uff1a\n```cpp#include<bits/stdc++.h>\n#define MAXN 1000010\n#define int long long\n#define pb push_back\nusing namespace std;\nint n,q,cur,a[MAXN+5],T[MAXN<<3],ans[MAXN<<2];\nvector<int>seq[MAXN<<3];\nstruct node{int li,ri,id;}o[MAXN+5];\nvoid pushup(int rt){cur=min(cur,T[rt]=min(T[rt],min(T[rt<<1],T[rt<<1|1])));}\nvoid build(int rt,int l,int r){\n\tfor(int i=l;i<=r;i++) seq[rt].pb(a[i]);\n\tsort(seq[rt].begin(),seq[rt].end()); T[rt]=0x3f3f3f3f;\n\tif(l==r) return; int md=(l+r)>>1;\n\tbuild(rt<<1,l,md),build(rt<<1|1,md+1,r);\n\tpushup(rt);\n}void modify(int rt,int l,int r,int rlim,int va){\n\tif(r<=rlim){\n\t\tauto p=upper_bound(seq[rt].begin(),seq[rt].end(),va);\n\t\tif(p!=seq[rt].begin()) T[rt]=min(T[rt],va-*(p-1));\n\t\tif(p!=seq[rt].end()) T[rt]=min(T[rt],*p-va);\n\t\tif(cur<=T[rt]) return;\n\t\tif(l==r){cur=min(cur,T[rt]); return;}\n\t}int md=(l+r)>>1;\n\tif(rlim>md) modify(rt<<1|1,md+1,r,rlim,va);\n\tmodify(rt<<1,l,md,rlim,va); pushup(rt);\n}int query(int rt,int l,int r,int L,int R){\n\tif(L<=l&&r<=R) return T[rt];\n\tint md=(l+r)>>1,ret=0x3f3f3f3f;\n\tif(L<=md) ret=min(ret,query(rt<<1,l,md,L,R));\n\tif(R>md) ret=min(ret,query(rt<<1|1,md+1,r,L,R));\n\treturn ret;\n}bool cmp(node x,node y){return x.ri<y.ri;}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n\tbuild(1,1,n); scanf(\"%lld\",&q);\n\tfor(int i=1;i<=q;i++) scanf(\"%lld%lld\",&o[i].li,&o[i].ri),o[i].id=i;\n\tsort(o+1,o+q+1,cmp); int i=1;\n\tfor(int R=2;R<=n;R++){\n\t\tcur=0x3f3f3f3f; modify(1,1,n,R-1,a[R]);\n\t\twhile(o[i].ri==R) ans[o[i].id]=query(1,1,n,o[i].li,R),++i;\n\t}for(i=1;i<=q;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1641032199,
        "uid": 132040,
        "name": "S00021",
        "ccfLevel": 0,
        "title": "CF765F"
    },
    {
        "content": "## [My Blog](https://yzxoi.top/archives/1868)\n\n## Description\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[CF765F](https://www.luogu.com.cn/problem/CF765F)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u6709 $m$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $l,r$\uff0c\u6c42\u5bf9\u4e8e $i,j\\in[l,r]$\uff0c\u4e14\u6ee1\u8db3 $i\\not = j$\uff0c$|a_i - a_j|$ \u7684\u6700\u5c0f\u503c\u3002\n\n$1\\leq n\\leq 10^5,1\\leq m\\leq 3\\times 10^5,0\\leq a_i\\leq 10^9$\u3002\n\n## Solution\n\n\u5206\u5757\uff08\u611f\u89c9 mrsrz \u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u4f46\u611f\u89c9\u590d\u6742\u5ea6\u5206\u6790\u6709\u70b9\u5947\u602a\uff1f\u5f88\u597d\u5947 mrsrz \u9519\u8bef\u7684\u5757\u957f\u662f\u548b\u8fc7\u7684\uff09\u3002\n\n\u8bbe $suf_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u6570\u5b57\u4e0e\u7b2c $i$ \u4e2a\u6570\u5b57\u6240\u5bf9\u5e94\u7684\u5757\u540e\u9762\u7684\u5757\u4e00\u76f4\u5230\u7b2c $j$ \u4e2a\u5757\u7684\u8d21\u732e\uff0c$pre_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u6570\u5b57\u6240\u5bf9\u5e94\u7684\u5757\u540e\u9762\u7684\u5757\u4e00\u76f4\u5230\u7b2c $j$ \u4e2a\u5757\u7684\u8d21\u732e\uff0c$F_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u5230\u7b2c $j$ \u4e2a\u5757\u7684\u7b54\u6848\u3002\n\n\u663e\u7136\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u6743\u503c $a_i$ \u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e4b\u95f4\u6240\u53d6\u5f97\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5148\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u6309\u7167\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u4e00\u904d\u5e8f\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a $a_i$\uff0c\u7136\u540e\u53cc\u6307\u9488\u679a $j$\uff0c\u4f7f\u5f97 $a_i<a_j$\uff0c\u90a3\u4e48\u4ee5 $a_i$ \u66f4\u65b0\u4f4d\u7f6e $j$ \u6240\u5728\u5757\u7684 $suf_i$\u3002\n\n\u7136\u540e $suf_{i,j}$ \u663e\u7136\u662f\u53ef\u4ee5\u4ece $suf_{i,j-1}$ \u6216\u8005\u662f $suf_{i+1,j}$ \u7ee7\u627f\u6765\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u53d6\u4e2a $\\min$ \u5373\u53ef\u3002\n\n\u7136\u540e $pre$ \u7684\u9884\u5904\u7406\u540c\u7406\u3002\n\n\u90a3\u4e48 $F$ \u663e\u7136\u53ef\u4ee5\u7531 $pre$ \u8f6c\u79fb\uff0c$F_{i,j}=pre_{R_j,i}$\uff0c\u6ce8\u610f $F_{i,j}$ \u8fd8\u53ef\u4ee5\u4ece $F_{i,j-1}$ \u4ee5\u53ca $F_{j,j}$ \u7ee7\u627f\u3002\n\n\u81f3\u6b64\u5c31\u53ef\u4ee5\u5728 $\\mathcal O(\\frac{n^2}{B})$ \u7684\u65f6\u95f4\u5185\u9884\u5904\u7406\u51fa $F,pre,suf$\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u6563\u5757\u66b4\u529b\u53cc\u6307\u9488\u626b\u63cf\uff08\u8fd8\u662f\u5229\u7528\u7b54\u6848\u4e00\u5b9a\u662f\u6743\u503c\u6392\u5e8f\u540e\u76f8\u90bb\u4e24\u4e2a\u6570\u95f4\u53d6\u5f97\u7684\u6027\u8d28\uff09\uff0c\u4e2d\u95f4\u6574\u5757\u67e5\u8be2\u7b54\u6848 $F_i,j$ \u5373\u53ef\uff0c\u4e24\u8fb9\u6563\u5757\u5230\u4e2d\u95f4\u7684\u7b54\u6848\u76f4\u63a5\u67e5 $pre,suf$\uff0c\u5177\u4f53\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\uff0c\u663e\u7136\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(mB)$\u3002\n\n\u4ee4\u5757\u5927\u5c0f\u4e3a $B$\uff0c\u5219\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\frac{n^2}B+mB)$\u3002\n\n\u663e\u7136\u5f53 $B=\\frac{n}{\\sqrt m}\\approx 182$ \u65f6\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u4e3a $\\mathcal O(n\\sqrt m)$\u3002\n\n## Code\n\n```c++\n#pragma GCC optimize(2)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define W while\n#define I inline\n#define RI register int\n#define LL long long\n#define Cn const\n#define CI Cn int&\nusing namespace std;\nnamespace Debug{\n\tTp I void _debug(Cn char* f,Ty t){cerr<<f<<'='<<t<<endl;}\n\tTs I void _debug(Cn char* f,Ty x,Ar... y){W(*f!=',') cerr<<*f++;cerr<<'='<<x<<\",\";_debug(f+1,y...);}\n\tTp ostream& operator<<(ostream& os,Cn vector<Ty>& V){os<<\"[\";for(Cn auto& vv:V) os<<vv<<\",\";os<<\"]\";return os;}\n\t#define gdb(...) _debug(#__VA_ARGS__,__VA_ARGS__)\n}using namespace Debug;\nnamespace FastIO{\n\t#define FS 100000\n\t#define tc() (FA==FB&&(FB=(FA=FI)+fread(FI,1,FS,stdin),FA==FB)?EOF:*FA++)\n\t#define pc(c) (FC==FE&&(clear(),0),*FC++=c)\n\tint OT;char oc,FI[FS],FO[FS],OS[FS],*FA=FI,*FB=FI,*FC=FO,*FE=FO+FS;\n\tI void clear() {fwrite(FO,1,FC-FO,stdout),FC=FO;}\n\tTp I void read(Ty& x) {x=0;W(!isdigit(oc=tc()));W(x=(x<<3)+(x<<1)+(oc&15),isdigit(oc=tc()));}\n\tTs I void read(Ty& x,Ar&... y) {read(x),read(y...);}\n\tTp I void writeln(Ty x) {W(OS[++OT]=x%10+48,x/=10);W(OT) pc(OS[OT--]);pc('\\n');}\n}using namespace FastIO;\nCn int N=1e5+10,M=N/185+5;\nint n,m,S=185,a[N],L[M],R[M],F[M][M],suf[N][M],pre[N][M],tot;\n#define abs(x) ((x)<0?-(x):(x))\n#define P pair<int,int>\n#define MP make_pair\n#define fi first\n#define se second\nvector<P> b[M];\nI void B(){\n\tRI i,j,k,t,X,sz;for(i=1;i<=n;i++) !((i-1)%S)&&(R[tot]=i-1,L[++tot]=i),b[tot].push_back(MP(a[i],i));R[tot]=n;\n\tfor(memset(pre,63,sizeof(pre)),memset(suf,63,sizeof(suf)),i=1;i<=tot;i++) for(F[i][i]=2e9,sort(b[i].begin(),b[i].end()),j=1;j<b[i].size();j++) F[i][i]=min(F[i][i],abs(b[i][j].fi-b[i][j-1].fi));\n\tfor(i=1;i<=tot;i++) for(j=i+1;j<=tot;j++){for(t=0,k=0,sz=b[i].size();k<sz;k++){W(t<b[j].size()&&b[j][t].fi<b[i][k].fi) t++;t>0&&(suf[b[i][k].se][j]=min(suf[b[i][k].se][j],abs(b[i][k].fi-b[j][t-1].fi))),t<b[j].size()&&(suf[b[i][k].se][j]=min(suf[b[i][k].se][j],abs(b[i][k].fi-b[j][t].fi)));}for(k=R[i]-1;k>=L[i];k--) suf[k][j]=min(suf[k][j],suf[k+1][j]);}//\u6392\u8fc7\u5e8f\u540e\uff0c\u53cc\u6307\u9488\u626b\u63cf\u9884\u5904\u7406\u51fa suf\n\tfor(i=1;i<=tot;i++) for(j=i-1;j;j--){for(t=0,k=0,sz=b[i].size();k<sz;k++){W(t<b[j].size()&&b[j][t].fi<b[i][k].fi) t++;t>0&&(pre[b[i][k].se][j]=min(pre[b[i][k].se][j],abs(b[i][k].fi-b[j][t-1].fi))),t<b[j].size()&&(pre[b[i][k].se][j]=min(pre[b[i][k].se][j],abs(b[i][k].fi-b[j][t].fi)));}for(k=L[i]+1;k<=R[i];k++) pre[k][j]=min(pre[k][j],pre[k-1][j]);}\n\tfor(i=1;i<=tot;i++) for(j=L[i];j<=R[i];j++){for(k=i+2;k<=tot;k++) suf[j][k]=min(suf[j][k],suf[j][k-1]);for(k=i-2;k>=1;k--) pre[j][k]=min(pre[j][k],pre[j][k+1]);}\n\tfor(i=1;i<=tot;i++) for(j=i+1;j<=tot;j++) F[i][j]=min(pre[R[j]][i],min(F[i][j-1],F[j][j]));//\u6574\u5757\u7b54\u6848\u66f4\u65b0\n}\n#define bl(x) ((x-1)/S+1)\nvector<int> v,g;\nI int Merge(CI L1,CI R1,CI L2,CI R2){//\u4e24\u4e2a\u6563\u5757\u66b4\u529b\u53cc\u6307\u9488\u626b\u63cf\n\tRI i,j,X=2e9,sz,vs,gs;for(v.clear(),g.clear(),sz=b[bl(L1)].size(),i=0;i<sz;i++) if(L1<=b[bl(L1)][i].se&&b[bl(L1)][i].se<=R1) v.push_back(b[bl(L1)][i].fi);\n\tfor(i=0,sz=b[bl(L2)].size();i<sz;i++) if(L2<=b[bl(L2)][i].se&&b[bl(L2)][i].se<=R2) g.push_back(b[bl(L2)][i].fi);\n\tfor(j=i=0,vs=v.size(),gs=g.size();i<vs;i++){W(j<gs&&g[j]<v[i]) j++;j>0&&(X=min(X,abs(g[j-1]-v[i]))),j<g.size()&&(X=min(X,abs(g[j]-v[i])));}return X;\n}\nI int G(CI L,CI R){//\u5355\u5757\u5185\u66b4\u529b\n\tRI i,j,X,sz=b[bl(L)].size();j=0;W(j<sz&&!(L<=b[bl(L)][j].se&&b[bl(L)][j].se<=R)) j++;\n\tfor(X=2e9,i=j+1;i<sz;j=i,i=j+1){W(i<sz&&!(L<=b[bl(L)][i].se&&b[bl(L)][i].se<=R)) i++;i<sz&&(X=min(X,abs(b[bl(L)][i].fi-b[bl(L)][j].fi)));}return X;\n}\nI int Q(CI l,CI r){\n\tRI i,j,X;if(bl(l)==bl(r)) return G(l,r);\n\treturn X=min(suf[l][bl(r)-1],pre[r][bl(l)+1]),bl(l)+1<=bl(r)-1&&(X=min(X,F[bl(l)+1][bl(r)-1])),X=min(X,min(G(l,R[bl(l)]),G(L[bl(r)],r))),min(X,Merge(l,R[bl(l)],L[bl(r)],r));\n}\nint main(){\n\tRI i,l,r;for(read(n),i=1;i<=n;i++) read(a[i]);for(B(),read(m),i=1;i<=m;i++) read(l,r),writeln(Q(l,r));return clear(),0;\n} \n```\n\n",
        "postTime": 1626824323,
        "uid": 37103,
        "name": "yzxoi",
        "ccfLevel": 7,
        "title": "CF765F Souvenirs"
    },
    {
        "content": "## [Link](https://www.luogu.com.cn/problem/CF765F)\n\n\u9898\u76ee\u5927\u610f\uff1a\n\n\u5df2\u77e5\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\u3002\u8be2\u95ee $m$ \u6b21\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u4e2d $|a_i-a_j|$ \u7684\u6700\u5c0f\u503c\u3002\u4e0d\u5f3a\u5236\u5728\u7ebf\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le10^5,1\\le m\\le3\\times 10^5,0\\le a_i\\le 10^9$\u3002\n\n------------\n\u8fd9\u9053\u9898\u5bb9\u6613\u60f3\u5230\u83ab\u961f\u5957\u5e73\u8861\u6811\u7684 $\\mathcal{O}(n\\sqrt{n}\\log n)$ \u7684\u505a\u6cd5\u3002\u4f46\u662f\u8fc7\u4e0d\u53bb\u3002\n\n\u7ffb\u4e86\u4e0b\u9898\u89e3\u53d1\u73b0\u6709 $\\tt bitset$ \u7684~~\u4e71\u641e~~\u505a\u6cd5\uff0c\u5c45\u7136\u53ef\u4ee5\u8fc7\u53bb\u3002\n\n\u8fd9\u91cc\u518d\u5199\u4e00\u7bc7\u5206\u5757\u7684\u89e3\u6cd5\u3002\n\n------------\n\u5206\u5757\uff0c\u8bbe\u5757\u957f\u4e3a $\\sqrt{n}$\u3002\n\n\u8bbe $pos_i$ \u8868\u793a $a_i$ \u6240\u5728\u7684\u5757\uff0c$L_i$ \u548c $R_i$ \u5206\u522b\u8868\u793a\u7b2c $i$ \u5757\u7684\u5de6\u53f3\u7aef\u70b9\u3002\n\n\u5757\u5185\u5347\u5e8f\u6392\u5e8f\uff0c\u5e76\u4e14\u8bb0\u5f55\u4e0b\u6807\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\u3002\n\n\u8bbe $pre_{i,j}(i\\le pos_j)$ \u8868\u793a\u4ece\u4f4d\u7f6e $j$ \u5230\u7b2c $i$ \u5757\u7684\u5757\u9996\u7684\u7b54\u6848\uff0c$nxt_{i,j}(pos_j\\le i)$ \u8868\u793a\u4f4d\u7f6e $j$ \u5230\u7b2c $i$ \u5757\u7684\u5757\u5c3e\u7684\u7b54\u6848\u3002\n\n\u4ee5\u4e0b\u53ea\u8bf4 $pre$ \u6570\u7ec4\u7684\u6c42\u6cd5\uff0c$nxt$ \u6570\u7ec4\u540c\u7406\u3002\n\n\u5bb9\u6613\u6c42\u51fa $pre_{i,j}(i=pos_j)$\u3002\u8fd9\u91cc\u66b4\u529b\u5c31\u884c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\sqrt n)$\u3002\u6ce8\u610f\u9700\u8981\u5c06 $pre_{i,L_i}$ \u8bbe\u6210\u6781\u5927\u503c\uff0c$nxt_{i,R_i}$ \u540c\u7406\u3002\n\n\u8003\u8651\u5982\u4f55\u5f97\u5230 $pre_{i,j}(i\\neq pos_j)$\u3002\n\n\u7528\u5bb9\u65a5\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u53d1\u73b0 $pre_{i,j}=\\min(pre_{i,j-1},pre_{i+1,j},cal(i,j))$\u3002\u5176\u4e2d $cal(i,j)$ \u8868\u793a\u7b2c $i$ \u5757\u4e0e $a_j$ \u7684\u7b54\u6848\u3002\n\n\u76f4\u63a5\u6c42 $cal(i,j)$ \u663e\u7136\u4e0d\u80fd $\\mathcal{O}(1)$\u3002\u4f46\u6211\u4eec\u4e00\u8d77\u7b97\u51fa $L_k$ \u5230 $R_k$ \u662f\u53ef\u4ee5\u505a\u5230 $\\mathcal{O}(\\sqrt{n})$ \u7684\u3002\u5177\u4f53\u662f\u901a\u8fc7\u6392\u5e8f\u5b8c\u7684\u6570\u7ec4\uff0c\u626b\u4e00\u904d\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u7528\u533a\u95f4\u52a8\u89c4\u7684\u601d\u60f3\u5408\u5e76\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\sqrt n)$\u3002\n\n------------\n\u67e5\u8be2\u65f6\uff0c\u4e00\u4e2a\u6563\u5757\u52a0\u4e00\u4e2a\u6574\u5757\u7684\u7b54\u6848\u53ef\u4ee5\u76f4\u63a5\u5f97\u77e5\u3002\u8003\u8651\u5982\u4f55\u6c42\u4e24\u4e2a\u6563\u5757\u7684\u7b54\u6848\u3002\n\n\u5176\u5b9e\u548c\u9884\u5904\u7406\u4e00\u6837\uff0c\u628a\u6392\u5e8f\u5b8c\u7684\u6570\u7ec4\u626b\u4e00\u904d\u5c31\u597d\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\sqrt n)$\u3002\n\n\u5f53 $pos_l=pos_r$ \u7684\u65f6\u5019\u8fd8\u9700\u8981\u7279\u5224\u4e00\u4e0b\u3002\u4f46\u8fd9\u91cc\u76f4\u63a5 $\\mathcal{O}(n)$ \u66b4\u529b\u4e5f\u53ef\u4ee5\u8fc7\u2026\u2026\n\n\u5355\u6b21\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\sqrt n)$\u3002\n\n------------\n\u7136\u540e\u672c\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n+m)\\sqrt{n})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\sqrt{n})$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint s=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())\n\t\ts=s*10+c-'0';\n\treturn s;\n}\nint n,m,a[100005];\npair<int,int>b[100005];\nint len,block,L[320],R[320],pos[100005];\nint pre[320][100005],nxt[320][100005];\nint ans[100005];\nvoid get_ans(int p,int q)\n{\n\tint pos=L[p];\n\tfor(int i=L[q];i<=R[q];i++)\n\t{\n\t\tint x=b[i].first;\n\t\twhile(pos<R[p]&&b[pos+1].first<=x)pos++;\n\t\tint y=b[pos].first,z=pos+1>R[p]?y:b[pos+1].first;\n\t\tans[b[i].second]=min(abs(x-y),abs(x-z));\n\t}\n}\nvoid input()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=b[i].first=read(),b[i].second=i;\n\tlen=sqrt(n),block=n/len;\n\tfor(int i=1;i<=block;i++)\n\t\tL[i]=R[i-1]+1,R[i]=i*len;\n\tR[block]=n;\n\tfor(int i=1;i<=block;i++)\n\t{\n\t\tsort(b+L[i],b+R[i]+1);\n\t\tfor(int j=L[i];j<=R[i];j++)\n\t\t{\n\t\t\tpos[j]=i;\n\t\t\tint minn=2e9;\n\t\t\tfor(int k=L[i];k<j;k++)\n\t\t\t\tminn=min(minn,abs(a[j]-a[k]));\n\t\t\tif(j==L[i])pre[i][j]=2e9;\n\t\t\telse pre[i][j]=min(pre[i][j-1],minn);\n\t\t}\n\t\tfor(int j=R[i];j>=L[i];j--)\n\t\t{\n\t\t\tint minn=2e9;\n\t\t\tfor(int k=R[i];k>j;k--)\n\t\t\t\tminn=min(minn,abs(a[j]-a[k]));\n\t\t\tif(j==R[i])nxt[i][j]=2e9;\n\t\t\telse nxt[i][j]=min(nxt[i][j+1],minn);\n\t\t}\n\t}\n\tfor(int len=2;len<=block;len++)\n\t{\n\t\tfor(int i=1;i+len-1<=block;i++)\n\t\t{\n\t\t\tint k=i+len-1;\n\t\t\tget_ans(i,k);\n\t\t\tfor(int j=L[k];j<=R[k];j++)\n\t\t\t\tpre[i][j]=min(pre[i][j-1],min(pre[i+1][j],ans[j]));\n\t\t}\n\t\tfor(int i=block;i-len+1>=1;i--)\n\t\t{\n\t\t\tint k=i-len+1;\n\t\t\tget_ans(i,k);\n\t\t\tfor(int j=R[k];j>=L[k];j--)\n\t\t\t\tnxt[i][j]=min(nxt[i][j+1],min(nxt[i-1][j],ans[j]));\n\t\t}\n\t}\n}\nint temp[320];\ninline int query(int l,int r)\n{\n\tint p=pos[l],q=pos[r],res=2e9,pos=1,tot=0;\n\tif(p==q)\n\t{\n\t\tfor(int i=L[p];i<=R[p];i++)\n\t\t\tif(l<=b[i].second&&b[i].second<=r)\n\t\t\t\ttemp[++tot]=b[i].first;\n\t\tfor(int i=L[p];i<=R[p];i++)\n\t\t{\n\t\t\tif(b[i].second<l||r<b[i].second)continue;\n\t\t\tint x=b[i].first;\n\t\t\twhile(pos<tot&&temp[pos+1]<=x)pos++;\n\t\t\tint y=pos==1?2e9:temp[pos-1],z=pos+1>tot?y:temp[pos+1];\n\t\t\tres=min(res,min(abs(x-y),abs(x-z)));\n\t\t}\n\t\treturn res;\n\t}\n\tfor(int i=L[q];i<=R[q];i++)\n\t\tif(L[q]<=b[i].second&&b[i].second<=r)\n\t\t\ttemp[++tot]=b[i].first;\n\tfor(int i=L[p];i<=R[p];i++)\n\t{\n\t\tif(b[i].second<l||R[p]<b[i].second)continue;\n\t\tint x=b[i].first;\n\t\twhile(pos<tot&&temp[pos+1]<=x)pos++;\n\t\tint y=temp[pos],z=pos+1>tot?y:temp[pos+1];\n\t\tres=min(res,min(abs(x-y),abs(x-z)));\n\t}\n\treturn min(res,min(nxt[q-1][l],pre[p+1][r]));\n}\nvoid solve()\n{\n\tm=read();\n\twhile(m--)\n\t{\n\t\tint l=read(),r=read();\n\t\tprintf(\"%d\\n\",query(l,r));\n\t}\n}\nint main()\n{\n\tinput();\n\tsolve();\n\treturn 0;\n}\n```\n",
        "postTime": 1659164608,
        "uid": 306049,
        "name": "Utilokasteinn",
        "ccfLevel": 0,
        "title": "CF765F Souvenirs"
    },
    {
        "content": "~~\u60f3\u4e86 2 \u5929\u597d\u50cf\u8fd8\u662f\u53ea\u4f1a\u5e26 log \u7684\u3002~~\n\n\u4e00\u4e0a\u6765\uff0c\u8fd9\u4e0d\u5c31\u662f [#246. \u3010UER #7\u3011\u5957\u8def](https://www.luogu.com.cn/blog/125901/post-gen-hao-fen-zhi-ge-chao-yuan-li-246-uer-7-tao-lu)\uff0c\u4f46\u7b2c\u4e8c\u4e2a\u505a\u6cd5\u4e0d\u662f\u5f88\u597d\u505a\u3002\u7531\u4e8e\u7b2c\u4e00\u4e2a\u505a\u6cd5\u662f $O(n^2)$ \u7684\uff0c\u90a3\u5c31\u5206\u5757\uff08\u5757\u957f\u4e3a $T$\uff09\u3002\u6574\u5757\u7684\u8d21\u732e\u5f88\u597d\u505a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e2a\u503c\u57df\u524d\u540e\u9a71\u5c31\u53ef\u4ee5\u5408\u5e76\uff0c\u5927\u81f4\u5c31\u662f\u8bb0 $f[l][r]$ \u4e3a\u5757 l \u4e0e\u5757 r \u95f4\u7684\u8d21\u732e\uff0c\u7136\u540e $f[l][r]=\\min(f[l+1][r],f[l][r-1],cal(l,r))$\uff0c\u5176\u4e2d $cal(l,r)$ \u53ef\u4ee5 $O(T)$ \u6c42\u3002\u4f46\u6563\u5757\u4e0d\u662f\u5f88\u597d\u7ef4\u62a4\u3002\n\n\u7136\u540e\u6211\u5c31\u5f03\u4e86\uff0c\u51b2\u4e86 2 \u4e2a\u505a\u6cd5\uff0c\u56de\u6eda\u83ab\u961f+```set```\uff0c\u5206\u5757+\u4e3b\u5e2d\u6811\u3002~~\u5e26 log \u663e\u7136\u51b2\u4e0d\u8fc7\u3002~~\n\n\u6eda\u56de\u6765\u7ee7\u7eed\u60f3\uff0c\u53d1\u73b0\u8d21\u732e\u53ef\u4ee5\u518d\u62c6\u3002\u62c6\u6210 2 \u4e2a\u6563\u5757\u5206\u522b\u4e0e\u6574\u5757\u7684\u8d21\u732e\u4ee5\u53ca 2 \u4e2a\u6563\u5757\u5408\u5e76\u8d77\u6765\u7684\u8d21\u732e\u3002\u524d\u8005\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u6574\u5757\u7684\u601d\u8def\u7ef4\u62a4\uff0c\u5408\u5e76\u7684\u8bdd\u5c31\u53ea\u9700\u8981\u8ba1\u7b97\u5355\u70b9\u4e0e\u4e00\u4e2a\u6574\u5757\u7684\u8d21\u732e\uff08\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u503c\u57df\u94fe\u8868 $O(1)$ \u6c42\u51fa\uff09\uff0c**\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u5199\u8d77\u6765\u5f88\u70e6\uff01\u7ec6\u8282\u591a\u7684\u8981\u6b7b**\u3002\u6563\u5757\u95f4\u76f8\u4e92\u7684\u8d21\u732e\u600e\u4e48\u529e\uff1f\u628a\u5176\u5f53\u6210\u4e00\u4e2a\u5757\u66b4\u529b\u6392\u5e8f\u7684\u8bdd\u5c31\u8981\u5e26 log\uff0c\u5047\u5982\u7528\u94fe\u8868\u5f62\u5f0f\u7684\u8bdd\u79bb\u6563\u5316\u540e\u5c31\u662f $O(n)$ \u7684\u3002\u4e8c\u8005\u663e\u7136\u4e0d\u884c\u3002\u8003\u8651\u5047\u5982\u80fd\u591f\u4e0d\u6392\u5e8f\uff0c\u800c\u662f\u53d8\u6210\u76f4\u63a5\u5408\u5e76\uff0c\u90a3\u5c31\u662f $O(T)$ \u7684\u3002\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5bf9\u4e8e\u539f\u6765\u7684\u5757\u6392\u5e8f\u4e4b\u540e\u518d\u7c7b\u5f52\u5e76\u6392\u5e8f\u7ef4\u62a4\u597d\u50cf\u5c31\u884c\u4e86\uff0c\u60f3\u5230\u8fd9\u8f6c\u5ff5\u4e00\u60f3\u524d\u9762\u7684 cal\uff0c\u53d1\u73b0\u6839\u672c\u4e0d\u7528\u94fe\u8868\u5f62\u5f0f\u7ef4\u62a4\uff0c\u4e5f\u53ea\u9700\u8981\u7c7b\u5f52\u5e76\u5373\u53ef\u3002\u6392\u5e8f\u590d\u6742\u5ea6 $O(\\dfrac{n}{T}T\\log T)$\uff0c\u5373 $O(n\\log n)$\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n+(\\dfrac{n}{T})^2T+mT)$\uff0c$T$ \u53d6\u6839\u53f7\u5373\u53ef\u3002\n\n\n\n## AC Code\n\n```cpp\n//qwq\n#include <bits/stdc++.h>\nusing namespace std;\nint rd() {\n    int f=1,sum=0; char ch=getchar();\n    while(!isdigit(ch)) {if(ch=='-') f=-1; ch=getchar();}\n    while(isdigit(ch)) {sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n    return sum*f;\n}\nvoid pr(int x) {\n\tint f=1,tot=0; static int st[30];\n\tif(x<0) x=-x,f=-1;\n\twhile(x) st[++tot]=x%10,x/=10;\n\tif(!tot) putchar('0');\n\telse for(int i=tot;i>=1;i--) putchar(st[i]+'0');\n}\n#define N (int)(1e5+5)\n#define M 320\n#define inf (int)(2e9)\nvector<int>vec[M],tmp,tmp2,tmp3;\nint n,m,bl,b[N],lsh[N],cnt[N],LLas[M][N],NNex[M][N],\na[N],id[N],L[M],R[M],f[M][M],ff[N][M],fff[M][N],tf[M][M],g[M];\n\nbool cmp(const int &x,const int &y) {\n\treturn a[x]<a[y];\n}\n\nvoid init(int x) {\n\tmemset(cnt,0,sizeof(int)*(n+1));\n\tfor(int i=L[x];i<=R[x];i++) ++cnt[b[i]];\n\tint qwq=-1;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(cnt[i]) qwq=i;\n\t\tLLas[x][i]=qwq; \n\t}\n\tqwq=n+1;\n\tfor(int i=n;i>=1;i--) {\n\t\tif(cnt[i]) qwq=i;\n\t\tNNex[x][i]=qwq;\n\t}\n\tvec[x].clear();\n\tfor(int i=L[x];i<=R[x];i++) vec[x].push_back(i);\n\tsort(vec[x].begin(),vec[x].end(),cmp); \n\tg[x]=inf;\n\tfor(int i=L[x];i<=R[x];i++)\n\t\tfor(int j=i+1;j<=R[x];j++)\n\t\t\tg[x]=min(g[x],abs(a[i]-a[j]));\n}\n\nint ssolve(int x,int y) {\n\tint res=inf;\n\tif(LLas[y][b[x]]!=-1) res=abs(a[x]-lsh[LLas[y][b[x]]]);\n\tif(NNex[y][b[x]]!=n+1) res=min(res,abs(lsh[NNex[y][b[x]]]-a[x]));\n//\tprintf(\"%d %d %d %d %d\\n\",x,y,L[y],R[y],res);\n\treturn res;\n}\n\nint solve(const vector<int>&x,const vector<int>&y) {\n\tif(!x.size()||!y.size()) return inf;\n\ttmp.clear();\n\tint nw1=0,nw2=0,res=inf;\n\twhile(1) {\n\t\tif(a[x[nw1]]<a[y[nw2]]) {\n\t\t\tif(!tmp.empty()) res=min(res,a[x[nw1]]-tmp.back());\n\t\t\ttmp.push_back(a[x[nw1]]); ++nw1;\n\t\t} else {\n\t\t\tif(!tmp.empty()) res=min(res,a[y[nw2]]-tmp.back());\n\t\t\ttmp.push_back(a[y[nw2]]); ++nw2;\n\t\t}\n\t//\tcout<<nw1<<\" : \"<<nw2<<endl;\n\t\tif(nw1>=x.size()||nw2>=y.size()) break;\n\t}\n\twhile(nw1<x.size()) res=min(res,a[x[nw1]]-tmp.back()),tmp.push_back(a[x[nw1]]),++nw1;\n\twhile(nw2<y.size()) res=min(res,a[y[nw2]]-tmp.back()),tmp.push_back(a[y[nw2]]),++nw2;\n//\tcout<<res<<endl;\n\treturn res;\n}\n/*\nint cal1(int x,int y) {\n\tint res=inf;\n\tfor(int i=id[x]+1;i<=y;i++) \n\t\tfor(int j=x;j<=R[id[x]];j++)\n\t\t\tres=min(res,ssolve(j,i));\n\tfor(int i=x;i<=R[id[x]];i++)\n\t\tfor(int j=x;j<i;j++)\n\t\t\tres=min(res,abs(a[j]-a[i]));\n\treturn res;\n}\n\nint cal(int x,int y) {\n\tint res=inf;\n\t\tfor(int i=x;i<=y;i++)\n\t\t\tfor(int j=i+1;j<=y;j++)\n\t\t\t\tres=min(res,abs(a[i]-a[j]));\n\treturn res;\n}\n*/\nint Solve(int x,int y) {\n\tif(id[x]==id[y]) { //\u5047\uff0c\u4f46\u80fd\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u79bb\u7ebf\u4e0b\u6765\u9010\u5757\u5904\u7406 \n\t\tint res=inf;\n\t\tfor(int i=x;i<=y;i++)\n\t\t\tfor(int j=i+1;j<=y;j++)\n\t\t\t\tres=min(res,abs(a[i]-a[j]));\n\t\treturn res;\n\t} else {\n\t\tint res=f[id[x]+1][id[y]-1];\n\t\tres=min(res,min(ff[x][id[y]-1],fff[id[x]+1][y]));\n\t\ttmp2.clear(); tmp3.clear();\n\t//\tprintf(\": %d %d\\n\",x,y);\n\t\tfor(int i=0;i<vec[id[x]].size();i++) if(vec[id[x]][i]>=x) tmp2.push_back(vec[id[x]][i]);\n\t//\tputs(\"\");\n\t\tfor(int i=0;i<vec[id[y]].size();i++) if(vec[id[y]][i]<=y) tmp3.push_back(vec[id[y]][i]);\n\t//\tputs(\"\");\n\t\tres=min(res,solve(tmp2,tmp3));\n\t\treturn res;\n\t}\n}\n\nint Pos(int x,int y) {\n\treturn L[x]+y-1;\n}\n\nint main() {\n\tn=rd(); bl=sqrt(n);\n\tfor(int i=1;i<=n;i++) id[i]=(i-1)/bl+1,lsh[i]=a[i]=rd();\n\tsort(lsh+1,lsh+1+n);\n\tfor(int i=1;i<=n;i++) b[i]=lower_bound(lsh+1,lsh+1+n,a[i])-lsh;\n\tfor(int i=1;i<=id[n];i++) L[i]=(i-1)*bl+1,R[i]=i*bl; R[id[n]]=n;\n\tfor(int i=1;i<=id[n];i++) init(i);\n\tmemset(f,0x3f,sizeof(f)); memset(ff,0x3f,sizeof(ff)); memset(fff,0x3f,sizeof(fff));\n\t// \u5757\u4e0e\u5757 \n\tfor(int i=1;i<=id[n];i++) f[i][i]=g[i];\n\tfor(int len=2;len<=id[n];len++)\n\t\tfor(int l=1,r=l+len-1;r<=id[n];l++,r=l+len-1)\n\t\t\tf[l][r]=min(f[l+1][r],min(f[l][r-1],solve(vec[l],vec[r]))); \n\tfor(int i=1;i<=id[n];i++) ff[L[i]][i]=g[i],fff[i][R[i]]=g[i];\n\t// \u7aef\u70b9\u5230\u5757\uff0c\u53ef\u7406\u89e3\u4e3a ff[i][j]:[i,R[j]]\n\t// \u7c7b f \u8f6c\u79fb\u5373\u53ef\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7c7b f \u8f6c\u79fb\u8981\u8bb0\u5f97\u8003\u8651\u6563\u5757\u5185\u90e8\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u6bcf\u6b21\u6211\u4eec\u90fd\u8981\u8dd1\u4e00\u904d n \u65b9\u7684 \n\tfor(int i=id[n]-1;i>=1;i--) {\n\t\tmemset(tf,0x3f,sizeof(tf));\n\t\tint qwq=R[i]-L[i]+1;\n\t\tfor(int j=1;j<qwq;j++) tf[j][j+1]=abs(a[Pos(i,j)]-a[Pos(i,j+1)]);\n\t\tfor(int len=3;len<=qwq;len++) {\n\t\t\tfor(int l=1,r=l+len-1;r<=qwq;l++,r=l+len-1)\n\t\t\t\ttf[l][r]=min(tf[l+1][r],min(tf[l][r-1],abs(a[Pos(i,l)]-a[Pos(i,r)]))); \n\t\t}\n\t\tfor(int j=R[i];j>=L[i];j--) ff[j][i+1]=min(ff[j+1][i+1],min(tf[j-L[i]+1][R[i]-L[i]+1],ssolve(j,i+1)));\n\t\tfor(int j=i+2;j<=id[n];j++) {\n\t\t\tfor(int k=R[i];k>=L[i];k--) {\n\t\t\t\tff[k][j]=min(ff[k+1][j],min(ff[k][j-1],ssolve(k,j)));\n\t\t\t}\n\t\t} \n\t}\n\t// fff[i][j]:[L[i],j] \u5757\u5230\u70b9 \n\tfor(int i=id[n]-1;i>=1;i--) {\n\t\tmemset(tf,0x3f,sizeof(tf));\n\t\tint qwq=R[i]-L[i]+1;\n\t\tfor(int j=1;j<qwq;j++) tf[j][j+1]=abs(a[Pos(i,j)]-a[Pos(i,j+1)]);\n\t\tfor(int len=3;len<=qwq;len++) {\n\t\t\tfor(int l=1,r=l+len-1;r<=qwq;l++,r=l+len-1)\n\t\t\t\ttf[l][r]=min(tf[l+1][r],min(tf[l][r-1],abs(a[Pos(i,l)]-a[Pos(i,r)]))); \n\t\t}\n\t\tfor(int j=L[i+1];j<=R[i+1];j++) fff[i][j]=min(fff[i][j-1],ssolve(j,i));\n\t\tfor(int j=R[i+1]+1;j<=n;j++) fff[i][j]=min(fff[i][j-1],min(fff[i+1][j],ssolve(j,i)));\n\t}\n\t// \u6709\u4e9b\u6ca1\u8f6c\u79fb\u5230\uff0c\u5373\u6563\u5757\u5185\u90e8\u7684 \n\tfor(int i=1;i<=id[n];i++) {\n\t\tmemset(tf,0x3f,sizeof(tf));\n\t\tint qwq=R[i]-L[i]+1;\n\t\tfor(int j=1;j<qwq;j++) tf[j][j+1]=abs(a[Pos(i,j)]-a[Pos(i,j+1)]);\n\t\tfor(int len=3;len<=qwq;len++) {\n\t\t\tfor(int l=1,r=l+len-1;r<=qwq;l++,r=l+len-1)\n\t\t\t\ttf[l][r]=min(tf[l+1][r],min(tf[l][r-1],abs(a[Pos(i,l)]-a[Pos(i,r)]))); \n\t\t}\n\t\tfor(int j=L[i];j<=R[i];j++) ff[j][i]=min(ff[j][i],tf[j-L[i]+1][R[i]-L[i]+1]),fff[i][j]=min(fff[i][j],tf[1][j-L[i]+1]);\n\t\tfor(int j=1;j<i;j++)\n\t\t\tfor(int k=L[i];k<=R[i];k++)\n\t\t\t\tfff[j][k]=min(fff[j][k],tf[1][k-L[i]+1]);\n\t}\n\tm=rd();\n\twhile(m--) {\n\t\tint x=rd(),y=rd();\n\t\tprintf(\"%d\\n\",Solve(x,y));\n\t}\n\treturn 0;\n}\n```\n[\u5176\u4ed6\u4ee3\u7801](https://www.luogu.com.cn/paste/oq6egzhf)",
        "postTime": 1641539642,
        "uid": 125901,
        "name": "FxorG",
        "ccfLevel": 7,
        "title": "\u3010DS\u3011CF765F Souvenirs"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8 to CF](http://codeforces.com/problemset/problem/765/F)\n\n# \u601d\u8def\n\n\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5\u6240\u6709\u76f8\u90bb\u7684 $a_i,a_j$ \u7684\u8d21\u732e\uff08\u5373\u4e0d\u5b58\u5728 $a_i<a_k<a_j$ \u7684\u6392\u540d\u76f8\u90bb\u7684\u6570\uff09\u3002\n\n\u90a3\u4e48\u5047\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u5f88\u597d\uff01\u4f46\u662f\u6211\u4eec\u8fd8\u8981\u7ef4\u62a4\u4e0b\u6807\u53c8\u600e\u4e48\u529e\uff1f\n\n\u4e8e\u662f\u53c8\u53bb\u8003\u8651\u7c7b\u4f3c\u5212\u5206\u6811\u7684\u505a\u6cd5\uff0c\u53d1\u73b0\u4e24\u8fb9\u90fd\u9700\u8981\u9012\u5f52\u3002\u4e8e\u662f\u5c31 $yy$ \u4e00\u4e0b\uff0c\u5982\u679c\u53ea\u9012\u5f52 $\\frac{\\log n}{2}$ \u5c42\u600e\u4e48\u6837\uff1f\u7ed3\u679c\u4ed4\u7ec6\u4e00\u60f3\uff0c\u8fd9\u4e0d\u5c31\u662f\u4e2a __\u503c\u57df\u5206\u5757__ \u561b\uff01\n\n\u76f4\u63a5\u5bf9\u503c\u57df\u5206\u5757\u3002\u90a3\u4e48\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u4f1a\u62c6\u6210\u82e5\u5e72\u4e2a\u503c\u57df\u533a\u95f4\u5185\u7684\u4e0b\u6807\u8fde\u7eed\u6bb5\u3002\u6211\u4eec\u53ea\u9700\u8981\u6bb5\u5185\u90e8\u6c42\u51fa\u4e00\u4e2a\u7b54\u6848\uff0c\u4e24\u4e2a\u6bb5\u4e4b\u95f4\u7684\u8d21\u732e\u5c31\u662f\u4e00\u4e2a\u7684 $\\max$ \u51cf\u53e6\u4e00\u4e2a\u7684 $\\min$ \u561b\uff0c\u56e0\u4e3a\u503c\u57df\u662f\u4e0d\u4ea4\u7684\u3002\n\n\u6bb5\u5185\u90e8\u600e\u4e48\u6c42\u7b54\u6848\uff1f\u82e5\u5757\u957f\u4e3a $B$\uff0c\u5219\u4e00\u5171\u53ea\u6709 $\\frac{n}{B}(B^2)=nB$ \u4e2a\u4e0d\u540c\u7684\u6bb5\u5185\u533a\u95f4\uff0c\u5b8c\u5168\u53ef\u4ee5\u66b4\u529b\uff0c$f(i,j)=\\max\\{f(i,j{\\rm-}1),f(i{\\rm+}1,j),|a_i{\\rm-}a_j|\\}$\uff0c\u7ef4\u62a4\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u4e5f\u5f88\u7b80\u5355\u3002\n\n\u4e8e\u662f\u5c31\u505a\u5b8c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(nB+\\frac{qn}{B})\\geqslant \\mathcal O(n\\sqrt{q})$\uff0c\u5728 $B=\\sqrt{q}$ \u65f6\u6700\u4f18\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230 $\\mathcal O(B^2+{qn\\over B})=\\mathcal O(q+n\\sqrt{q})$\uff0c\u4f46\u8fd9\u9700\u8981\u4e00\u4e9b\u7e41\u7410\u7684\u79bb\u7ebf\u3002\u5982\u679c\u5b8c\u5168\u5728\u7ebf\uff0c\u5219\u8fd8\u662f\u9700\u8981 $\\mathcal O(nB+{n^2\\over B})$ \u7684\u7a7a\u95f4\u3002\n\n__\u7279\u522b\u6ce8\u610f__\uff1a\u672c\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e __\u5185\u5b58\u8bbf\u95ee__\u3002\u5982\u679c\u7528\u4e09\u7ef4\u6570\u7ec4\uff08\u7b2c\u4e00\u7ef4\u662f\u5757\u7684\u7f16\u53f7\uff0c\u540e\u4e24\u7ef4\u662f\u533a\u95f4\u7aef\u70b9\uff09\u5b58\u50a8 $\\max,\\min,f$ \u7b49\u4fe1\u606f\uff0c\u5e38\u6570\u5927\u7684\u60ca\u4eba\u3002\u6240\u4ee5\u5fc5\u987b\u628a\u8be2\u95ee\u653e\u5728\u6bcf\u4e2a\u5757\u4e0a\uff0c\u7136\u540e\u6bcf\u4e2a\u5757\u79bb\u7ebf\u6c42\u89e3\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u5b9e\u9645\u6d4b\u8bd5\u4e2d\uff0c\u5757\u957f\u4e5f\u662f $5\\sqrt{q}$ \u9644\u8fd1\u6700\u5feb\u2026\u2026\n\n# \u4ee3\u7801\n\n\u4e0b\u9762\u8fd9\u4e00\u4efd\u662f $AC$ \u4ee3\u7801\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include <ctime>\nusing namespace std;\ntypedef long long int_;\n# define rep(i,a,b) for(int i=(a); i<=(b); ++i)\n# define drep(i,a,b) for(int i=(a); i>=(b); --i)\ninline int readint(){\n\tint a = 0, c = getchar(), f = 1;\n\tfor(; '0'>c||c>'9'; c=getchar())\n\t\tif(c == '-') f = -f;\n\tfor(; '0'<=c&&c<='9'; c=getchar())\n\t\ta = (a<<3)+(a<<1)+(c^48);\n\treturn a*f;\n}\ninline void writeint(int x){\n\tif(x < 0) putchar('-'), x = -x;\n\tif(x > 9) writeint(x/10);\n\tputchar((x-x/10*10)^48);\n}\ninline int ABS(const int &x){\n\treturn x < 0 ? -x : x;\n}\ninline void getMin(int &x,const int &y){\n\tif(y < x) x = y;\n}\n\nconst int MAXN = 100005;\nconst int STEP = 2500;\nconst int COUNT = MAXN/STEP+1;\nconst int infty = (1<<30)-1;\nint haxi[MAXN], a[MAXN];\n\nint id[COUNT][STEP];\nint lb[COUNT][MAXN]; // lower_bound\nint mx[STEP][STEP]; // max\nint mn[STEP][STEP]; // min\nint val[STEP][STEP]; // inner value\nstruct triple{ int a, b, c; };\nvector<triple> ask[COUNT]; // query range and id\n\nconst int MAXQ = 300005;\nint tmp[MAXN], xyx[MAXQ], lst[MAXQ];\nint main(){\n\tint n = readint();\n\trep(i,0,n-1) a[i] = readint();\n\tmemcpy(haxi,a,n<<2);\n\tsort(haxi,haxi+n); // no unique\n\tfor(int i=0; i<n; ++i){\n\t\ta[i] = static_cast<int>(\n\t\t\tlower_bound(haxi,haxi+n,a[i])-haxi);\n\t\tint &p = tmp[a[i]]; // count of this\n\t\ta[i] += p; ++ p; // keep stable\n\t}\n\tmemset(tmp,0,n<<2);\n\trep(i,0,n-1){\n\t\tconst int bel = a[i]/STEP;\n\t\tid[bel][tmp[bel] ++] = i;\n\t}\n\tconst int COUNT_OF_BLOCK = (n-1)/STEP;\n\trep(i,0,COUNT_OF_BLOCK)\n\t\tfor(int j=n-1,v=tmp[i]; ~j; --j){\n\t\t\tif(v && id[i][v-1] == j) -- v;\n\t\t\tlb[i][j] = v; // lower_bound\n\t\t}\n\n\tint q = readint();\n\tfor(int j=1,l,r; j<=q; ++j){\n\t\tl = readint()-1, r = readint()-1;\n\t\trep(i,0,COUNT_OF_BLOCK){\n\t\t\tint lp = lb[i][l]; // >= l\n\t\t\tif(lp == tmp[i]) continue; // no number\n\t\t\tint rp = ((r == n-1) ? tmp[i] : lb[i][r+1]);\n\t\t\tif(lp == rp) continue; // no number\n\t\t\ttriple now; now.a = lp, now.b = rp-1;\n\t\t\tnow.c = j; ask[i].push_back(now);\n\t\t}\n\t\tlst[j] = -infty; // unvisited\n\t\txyx[j] = infty<<1;\n\t}\n\n\trep(i,0,COUNT_OF_BLOCK){\n\t\tdrep(l,tmp[i]-1,0){\n\t\t\tmx[l][l] = mn[l][l] = haxi[a[id[i][l]]];\n\t\t\tval[l][l] = infty; // no pair\n\t\t\tint *ptr = id[i]+l; // &id[i][l][r]\n\t\t\tconst int &_ori = haxi[a[id[i][l]]];\n\t\t\trep(r,l+1,tmp[i]-1){\n\t\t\t\t++ ptr; // optimization on constant\n\t\t\t\tconst int &xez = haxi[a[*ptr]];\n\t\t\t\tmx[l][r] = max(mx[l][r-1],xez);\n\t\t\t\tmn[l][r] = min(mn[l][r-1],xez);\n\t\t\t\tval[l][r] = min(ABS(_ori-xez),\n\t\t\t\t\tmin(val[l][r-1],val[l+1][r]));\n\t\t\t}\n\t\t}\n\t\tfor(triple wen : ask[i]){\n\t\t\tgetMin(xyx[wen.c],val[wen.a][wen.b]);\n\t\t\tif(lst[wen.c] != -infty)\n\t\t\t\tgetMin(xyx[wen.c],mn[wen.a][wen.b]-lst[wen.c]);\n\t\t\tlst[wen.c] = mx[wen.a][wen.b];\n\t\t}\n\t}\n\n\trep(j,1,q) writeint(xyx[j]), putchar('\\n');\n\treturn 0;\n}\n```\n\n\u800c\u4e0b\u9762\u8fd9\u4e00\u4efd\u7eaf\u5728\u7ebf\u4ee3\u7801\u662f\u5947\u6162\u65e0\u6bd4\u7684\u3002\u968f\u4fbf\u9020\u4e00\u7ec4\u8f83\u5927\u7684\u6570\u636e\u5373\u53ef\u53d1\u89c1\u3002\u8bd5\u8bd5\u6ce8\u91ca\u6389\u7b2c $90$ \u884c\u548c\u7b2c $91$ \u884c\uff08\u663e\u7136\u5b83\u4eec\u662f $\\mathcal O(1)$ \u7684\uff09\uff0c\u4f60\u5c06\u4f1a\u77e5\u9053\u5185\u5b58\u8df3\u8dc3\u8bbf\u95ee\u7684\u6050\u6016\uff01\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include <ctime>\nusing namespace std;\ntypedef long long int_;\n# define rep(i,a,b) for(int i=(a); i<=(b); ++i)\n# define drep(i,a,b) for(int i=(a); i>=(b); --i)\ninline int readint(){\n\tint a = 0, c = getchar(), f = 1;\n\tfor(; '0'>c||c>'9'; c=getchar())\n\t\tif(c == '-') f = -f;\n\tfor(; '0'<=c&&c<='9'; c=getchar())\n\t\ta = (a<<3)+(a<<1)+(c^48);\n\treturn a*f;\n}\ninline void writeint(int x){\n\tif(x < 0) putchar('-'), x = -x;\n\tif(x > 9) writeint(x/10);\n\tputchar((x-x/10*10)^48);\n}\ninline int ABS(const int &x){\n\treturn x < 0 ? -x : x;\n}\ninline void getMin(int &x,const int &y){\n\tif(y < x) x = y;\n}\n\nconst int MAXN = 100005;\nconst int STEP = 1000;\nconst int COUNT = MAXN/STEP+1;\nconst int infty = (1<<30)-1;\nint haxi[MAXN], a[MAXN];\n\nint id[COUNT][STEP];\nint lb[COUNT][MAXN]; // lower_bound\nint mx[COUNT][STEP][STEP]; // max\nint mn[COUNT][STEP][STEP]; // min\nint val[COUNT][STEP][STEP];\n\nint tmp[MAXN];\nint main(){\n\tint n = readint();\n\trep(i,0,n-1) a[i] = readint();\n\tmemcpy(haxi,a,n<<2);\n\tsort(haxi,haxi+n); // no unique\n\tfor(int i=0; i<n; ++i){\n\t\ta[i] = static_cast<int>(\n\t\t\tlower_bound(haxi,haxi+n,a[i])-haxi);\n\t\tint &p = tmp[a[i]]; // count of this\n\t\ta[i] += p; ++ p; // keep stable\n\t}\n\tmemset(tmp,0,n<<2);\n\trep(i,0,n-1){\n\t\tconst int bel = a[i]/STEP;\n\t\tid[bel][tmp[bel] ++] = i;\n\t}\n\tconst int COUNT_OF_BLOCK = (n-1)/STEP;\n\trep(i,0,COUNT_OF_BLOCK){\n\t\tfor(int j=n-1,v=tmp[i]; ~j; --j){\n\t\t\tif(v && id[i][v-1] == j) -- v;\n\t\t\tlb[i][j] = v; // lower_bound\n\t\t}\n\t\tdrep(l,tmp[i]-1,0){\n\t\t\tmx[i][l][l] = mn[i][l][l] = haxi[a[id[i][l]]];\n\t\t\tval[i][l][l] = infty; // no pair\n\t\t\tint *ptr = id[i]+l; // &id[i][l][r]\n\t\t\tconst int _ori = haxi[a[id[i][l]]];\n\t\t\trep(r,l+1,tmp[i]-1){\n\t\t\t\t++ ptr; // optimization on constant\n\t\t\t\tmx[i][l][r] = max(mx[i][l][r-1],haxi[a[*ptr]]);\n\t\t\t\tmn[i][l][r] = min(mn[i][l][r-1],haxi[a[*ptr]]);\n\t\t\t\tval[i][l][r] = min(ABS(_ori-haxi[a[*ptr]]),\n\t\t\t\t\tmin(val[i][l][r-1],val[i][l+1][r]));\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int q=readint(),l,r; q; --q){\n\t\tl = readint()-1, r = readint()-1;\n\t\tint lst = -infty, ans = infty<<1;\n\t\trep(i,0,COUNT_OF_BLOCK){\n\t\t\tint lp = lb[i][l]; // >= l\n\t\t\tif(lp == tmp[i]) continue; // no number\n\t\t\tint rp = ((r == n-1) ? tmp[i] : lb[i][r+1]);\n\t\t\tif(lp == rp) continue; // no number\n\t\t\tif(lst != -infty) // maybe not small enough\n\t\t\t\tgetMin(ans,mn[i][lp][rp-1]-lst);\n\t\t\tlst = mx[i][lp][rp-1]; // move ahead\n\t\t\tgetMin(ans,val[i][lp][rp-1]);\n\t\t}\n\t\twriteint(ans), putchar('\\n');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1634131969,
        "uid": 123796,
        "name": "Damo",
        "ccfLevel": 0,
        "title": "[CF765F]Souvenirs \u9898\u89e3"
    },
    {
        "content": "\u7ed9\u51fa $n$ \u4ee5\u53ca\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\u3002\n\n\u7ed9\u51fa $m$\uff0c\u63a5\u4e0b\u6765 $m$ \u7ec4\u8be2\u95ee\u3002\n\n\u6bcf\u7ec4\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a $l,r$\uff0c\u4f60\u9700\u8981\u6c42\u51fa\uff0c\u5bf9\u4e8e $i,j \\in [l,r]$\uff0c\u4e14\u6ee1\u8db3 $i \\neq j$\uff0c$|a_i-a_j|$ \u7684\u6700\u5c0f\u503c\u3002\n\n$1 \\leq n \\leq 10^5$\uff0c$1 \\leq m \\leq 3\\times 10^5$\uff0c$0 \\leq a_i \\leq 10^9$\u3002\n\n#### sol\n\n\u611f\u89c9\u505a\u5206\u5757\u987a\u624b\u4e86\u8bb8\u591a\uff0c\u4e0d\u5230\u4e00\u5c0f\u65f6\u3002\n\n\u9996\u5148\u770b\u5230\u8fd9\u9898\u7c7b\u4f3c\u4e8e\u7b2c\u56db\u5206\u5757\uff0c\u4e8e\u662f\u8003\u8651\u5206\u5757\u3002\n\n\u8003\u8651\u5bf9\u5e8f\u5217\u5206\u5757\uff0c\u53d6\u5757\u957f\u4e3a $\\sqrt n$\uff0c\u4fbf\u5229\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u540e\u7eed\u53ef\u624b\u52a8\u8c03\u6574\u3002\n\n\u6309\u7167\u5957\u8def\uff0c\u5148\u60f3\u533a\u95f4\u5728\u540c\u4e00\u4e2a\u5757\u5185\u7684\u7b54\u6848\uff0c\u5757\u5185\u6392\u5e8f\uff0c\u7136\u540e\u66b4\u529b\u8ba1\u7b97\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\sqrt n)$\u3002\n\n\u5982\u679c\u533a\u95f4\u4e0d\u5728\u540c\u4e00\u4e2a\u5757\uff0c\u5219\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a\u5de6\u6563\u5757\uff0c\u4e2d\u591a\u6574\u5757\uff0c\u53f3\u6563\u5757\uff08\u90fd\u662f\u5957\u8def\u4e86\u5427\uff09\u3002\n\n\u8bb0 $s[i][j]$ \u8868\u793a\u7b2c $i$ \u5757\u5230\u7b2c $j$ \u5757\u7684\u7b54\u6848\uff0c$f[i][j]$ \u8868\u793a $i$ \u5728\u5757\u5185\u7684 $i$ \u524d\u7f00\u4e0e\u7b2c $j$ \u5757\u5230 $i$ \u7684\u4e0a\u4e00\u5757\u7684\u7b54\u6848\uff0c$g[i][j]$ \u8868\u793a $i$ \u6240\u5728\u5757\u5185\u7684 $i$ \u540e\u7f00\u4e0e $i$ \u7684\u4e0b\u4e00\u5757\u5230\u7b2c $j$ \u5757\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u4e2d\u591a\u6574\u5757\u7684\u7b54\u6848\uff0c\u76f4\u63a5\u67e5\u8be2 $s$ \u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(1)$\u3002\n\n\u5bf9\u4e8e\u5de6\u6563\u5757\u53ca\u53f3\u6563\u5757\u5bf9\u4e2d\u95f4\u5757\u7684\u7b54\u6848\uff0c\u76f4\u63a5\u67e5\u8be2 $f,g$ \u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(1)$\u3002\n\n\u5bf9\u4e8e\u5de6\u3001\u53f3\u6563\u5757\u7684\u5185\u90e8\u7b54\u6848\uff0c\u7531\u4e8e\u6392\u5e8f\u540e\u662f\u6709\u5e8f\u7684\uff0c\u5f52\u5e76\u53cc\u6307\u9488\u8ba1\u7b97\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\sqrt n)$\u3002\n\n\u6700\u540e\u8003\u8651\u9884\u5904\u7406 $f,g,s$ \u3002\n\n\u5bf9\u4e8e $f,g$\uff0c\u5148\u8ba1\u7b97\u6bcf\u4e2a\u6570\u4e0e\u6bcf\u4e2a\u5757\u7684\u7b54\u6848\uff0c\u7136\u540e\u524d\u3001\u540e\u7f00\u4e00\u4e0b\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\sqrt n)$\uff08\u6ce8\u610f\u6b64\u65f6\u6709\u5e8f\uff0c\u4f7f\u7528\u53cc\u6307\u9488\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8fbe\u5230 $\\mathcal O(n^2)$\uff09\u3002\n\n\u90a3\u4e48 $s$ \u53ef\u7531 $f$ \u9012\u63a8\u800c\u6765\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\u3002\n\n\u90a3\u4e48\u603b\u65f6\u7a7a\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\sqrt n)$\u3002\n\n\u6ce8\u610f\uff0c\u4ee3\u7801\u4e2d $f$ \u6570\u7ec4\u662f\u628a\u4e0a\u9762\u7684 $f,g$ \u7ed3\u5408\u6210\u7684\uff0c\u4f18\u5316\u7a7a\u95f4\u3002\n\n$\\text{45.72s / 124.22MB / 3.90KB C++20 O2}$\uff0c\u7a0d\u900a\u4e8e\u7ebf\u6bb5\u6811\uff0c\u4e0d\u8fc7\u4f18\u52bf\u662f\u53ef\u5f3a\u5236\u5728\u7ebf\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define re register\n\ninline int read()\n{\n    re int x = 0, f = 1;\n    re char c = getchar();\n    while (c < '0' || c > '9')\n    {\n        if (c == '-')\n            f = -1;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9')\n        x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n\ninline void write(re int x)\n{\n    if (x < 0)\n    {\n        putchar('-');\n        x = -x;\n    }\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\n\ninline void cmin(int &a, int b)\n{\n    a = b > a ? a : b;\n}\n\nconst int _ = 1e5 + 2, BEL = 320;\n\nint n, m, a[_], blo, ans[_];\n\nint f[_][BEL], s[BEL][BEL], L[BEL], R[BEL];\n\npair<int, int> b[_];\n\nvector<int> vl, vr;\n\ninline int merge()\n{\n    re int l1 = 0, l2 = 0, ans = 0x3f3f3f3f;\n    for (re int i = 0; i < vl.size() - 1; ++i)\n        cmin(ans, vl[i + 1] - vl[i]);\n    for (re int i = 0; i < vr.size() - 1; ++i)\n        cmin(ans, vr[i + 1] - vr[i]);\n    while (l1 < vl.size() && l2 < vr.size())\n    {\n        cmin(ans, abs(vl[l1] - vr[l2]));\n        if (vl[l1] < vr[l2])\n            ++l1;\n        else\n            ++l2;\n    }\n    return ans;\n}\n\nsigned main()\n{\n    n = read();\n    for (re int i = 1; i <= n; ++i)\n        a[i] = read(), b[i] = {a[i], i};\n    blo = (n - 1) / BEL + 1;\n    for (re int i = 1; i <= blo; ++i)\n        L[i] = R[i - 1] + 1, R[i] = i * BEL;\n    R[blo] = n;\n    for (re int i = 1; i <= blo; ++i)\n        sort(b + L[i], b + R[i] + 1);\n    for (re int i = 1; i <= blo; ++i)\n    {\n        for (re int j = 1; j <= blo; ++j)\n            if (i != j)\n                for (re int k = L[i], l = L[j]; k <= R[i]; ++k)\n                {\n                    while (l < R[j] && b[l + 1].first < b[k].first)\n                        ++l;\n                    f[b[k].second][j] = abs(b[k].first - b[l].first);\n                    if (l < R[j])\n                        cmin(f[b[k].second][j], abs(b[l + 1].first - b[k].first));\n                }\n        for (re int k = L[i]; k <= R[i]; ++k)\n        {\n            for (re int j = i - 2; j >= 0; --j)\n                cmin(f[k][j], f[k][j + 1]);\n            for (re int j = i + 2; j <= blo; ++j)\n                cmin(f[k][j], f[k][j - 1]);\n        }\n        for (re int j = 1; j < i; ++j)\n            for (re int k = L[i] + 1; k <= R[i]; ++k)\n                cmin(f[k][j], f[k - 1][j]);\n        for (re int j = i + 1; j <= blo; ++j)\n            for (re int k = R[i] - 1; k >= L[i]; --k)\n                cmin(f[k][j], f[k + 1][j]);\n        s[i][i] = 0x3f3f3f3f;\n        for (re int j = L[i]; j < R[i]; ++j)\n            cmin(s[i][i], b[j + 1].first - b[j].first);\n    }\n    for (re int i = 1; i <= blo; ++i)\n        for (re int j = i + 1; j <= blo; ++j)\n            s[i][j] = min(min(s[i][j - 1], f[R[j]][i]), s[j][j]);\n    m = read();\n    re int l, r, bl, br, ans;\n    while (m--)\n    {\n        l = read(), r = read();\n        bl = (l - 1) / BEL + 1, br = (r - 1) / BEL + 1;\n        ans = 0x3f3f3f3f;\n        if (bl < br)\n        {\n            if (bl + 1 <= br - 1)\n            {\n                ans = s[bl + 1][br - 1];\n                cmin(ans, min(f[r][bl + 1], f[l][br - 1]));\n            }\n            vl.clear(), vr.clear();\n            for (re int i = L[bl]; i <= R[bl]; ++i)\n                if (b[i].second >= l)\n                    vl.push_back(b[i].first);\n            for (re int i = L[br]; i <= R[br]; ++i)\n                if (b[i].second <= r)\n                    vr.push_back(b[i].first);\n            cmin(ans, merge());\n        }\n        else\n        {\n            re int lst = -0x3f3f3f3f;\n            for (re int i = L[bl]; i <= R[bl]; ++i)\n                if (l <= b[i].second && b[i].second <= r)\n                {\n                    cmin(ans, b[i].first - lst);\n                    lst = b[i].first;\n                }\n        }\n        printf(\"%d\\n\", ans);\n    }\n}\n```\n\n\n\n\n\n",
        "postTime": 1648619792,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF765F Souvenirs"
    }
]