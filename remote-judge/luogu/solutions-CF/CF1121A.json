[
    {
        "content": "AC\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48 UKE\u3002\u8fd9\u54ea\u91cc\u662f\u7f16\u7a0b\u9898\uff0c\u7b80\u76f4\u5c31\u662f\u9605\u8bfb\u7406\u89e3\u3002\n\n## \u601d\u8def\n\u8f93\u5165\u7684 $n$\uff0c$m$\uff0c$k$ \u5206\u522b\u8868\u793a\u5b66\u751f\u6570\uff0c\u5b66\u6821\u6570\uff0c\u963f\u5361\u8fea\u60f3\u8981\u7684\u5929\u9009\u4e4b\u5b50\u7684\u6570\u91cf\uff08\u867d\u7136\u6211\u4e0d\u77e5\u9053\u4e3a\u5565\u4f1a\u7ffb\u8bd1\u6210\u5929\u9009\u4e4b\u5b50\uff09\u3002\n\n\u6ce8\u610f\u4e86\uff0c\u539f\u6587\u4e2d\u4e00\u53e5\u8bdd\n\nUnfortunately, not all of them are the strongest in their schools\u3002\n\n\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u5e94\u8be5\u7ffb\u8bd1\u6210\uff1a\u201c\u4e0d\u5e78\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u5b66\u751f\u90fd\u662f\u4ed6\u4eec\u7684\u5b66\u6821\u91cc\u6700\u5f3a\u7684\u201d\uff0c\u800c\u4e0d\u662f\u201c\u4e0d\u5e78\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5b66\u6821\u90fd\u662f\u6700\u5f3a\u7684\u201d\u3002\u8fd9\u91cc\u771f\u7684\u5f88\u5f71\u54cd\u5bf9\u9898\u610f\u7684\u7406\u89e3\u3002\n\n\u63a5\u4e0b\u6765\u7684 $a$\uff0c$b$ \u6570\u7ec4\u90fd\u5f88\u597d\u89e3\u91ca\u3002\u6765\u770b $c$ \u6570\u7ec4\u3002$c$ \u6570\u7ec4\u8868\u793a\u963f\u5361\u8fea\u60f3\u62bd\u4e2d\u7684\u5b66\u751f\u3002\u800c\u6211\u4eec\u77e5\u9053\u79d1\u6280\u706b\u7130\u676f\uff08\u5176\u5b9e\u5c31\u662f\u9898\u76ee\u7ffb\u8bd1\uff09\u53ea\u4f1a\u9009\u62e9\u6700\u5f3a\u7684\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8ba9\u963f\u5361\u8fea\u60f3\u62bd\u4e2d\u7684\u5b66\u751f\u662f\u54ea\u4e2a\u5b66\u6821\u6700\u5f3a\u7684\u5c31\u597d\u4e86\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u7ecf\u662f\u54ea\u4e2a\u5b66\u6821\u6700\u5f3a\u7684\u5b66\u751f\uff0c\u65e0\u9700\u65b0\u589e\u5b66\u6821\u540d\uff0c\u5426\u5219\u5c31\u65b0\u589e\u4e00\u6240\u5b66\u6821\u540d\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<ctime>\n#include<cstring>\n#include<algorithm>\n#include<climits>\n#include<queue>\n#include<map>\n#include<set>\n#include<sstream>\n#include<cassert>\n#include<stdio.h>\n#define ll long long\n#define inf 0x3f3f3f3f\n#define fr(i , a , b) for(ll i = a ; i <= b ; ++i)\n#define fo(i , a , b) for(ll i = a ; i >= b ; --i)\nusing namespace std;\ninline char gchar()\n{\n    static char buf[1000000] , *p1 = buf , *p2 = buf;\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf , 1 , 1000000 , stdin) , p1 == p2) ? EOF : *p1++;\n}\ninline ll read()\n{\n    ll x = 0 , f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n\t  {\n        if(ch == '-')\n        {\n        \tf = -1;\n\t\t}\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n\t  {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x * f;\n}\nll n , m , k;\nll a[101] , b[101] , c;\nll maxn[101] , sum;\nsigned main()\n{\n    memset(maxn , -1  , sizeof(maxn));\n    n = read();\n    m = read();\n    k = read();\n    fr(i , 1 , n)\n    {\n        a[i] = read();\n    }\n    fr(i , 1 , n)\n    {\n        b[i] = read();\n        maxn[b[i]] = max(maxn[b[i]] , a[i]);\n    }\n    fr(i , 1 , k)\n    {\n        c = read();\n        if(maxn[b[c]] != a[c])\n        {\n            sum++;\n        }\n    }\n    printf(\"%lld\" , sum);\n    system(\"pause\");\n    return 0;\n}\n```\n",
        "postTime": 1684849567,
        "uid": 461407,
        "name": "\u6731\u91d1\u5e73",
        "ccfLevel": 0,
        "title": "CF1121A Technogoblet of Fire \u9898\u89e3"
    },
    {
        "content": "# \u5206\u6790\nArkady \u7684\u5b66\u751f\u5fc5\u987b\u8981\u5728\u5b66\u6821\u4e2d\u6392\u540d\u7b2c\u4e00\uff0c\u90a3\u4e48\u901a\u8fc7\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u53ea\u8981\u8fd9\u4e2a\u5b66\u751f\u5df2\u7ecf\u662f\u7b2c\u4e00\u4e86\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u9020\u4e00\u4e2a\u65b0\u7684\u5b66\u6821\u540d\u79f0\u3002   \n\u63a5\u4e0b\u6765\uff0c\u53ea\u9700\u8bb0\u5f55\u6240\u6709\u5b66\u6821\u7684\u6700\u9ad8\u5206\uff0c\u5982\u679c\u4e00\u4e2a\u5b66\u751f\u7684\u5206\u6570\u4e0d\u662f\u4ed6\u5b66\u6821\u7684\u6700\u9ad8\u5206\uff0c\u90a3\u4e48\u5c31\u9020\u4e00\u4e2a\u65b0\u7684\u5b66\u6821\u540d\u79f0\u3002\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e2+5;\nint n,m,k;\nint a[N],b[N],c[N],f[N];\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&b[i]);\n    for(int i=1;i<=k;i++) scanf(\"%d\",&c[i]);\n    for(int i=1;i<=n;i++) f[b[i]]=max(f[b[i]],a[i]);\n    int ans=0;\n    for(int i=1;i<=k;i++)\n        if(f[b[c[i]]]!=a[c[i]]) ans++;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1673439705,
        "uid": 511639,
        "name": "KevinLikesCoding",
        "ccfLevel": 5,
        "title": "CF1121A Technogoblet of Fire \u9898\u89e3"
    }
]