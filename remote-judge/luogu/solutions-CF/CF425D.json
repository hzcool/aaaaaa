[
    {
        "content": "\u6765\u63d0\u4f9b\u4e00\u79cd\u590d\u6742\u5ea6\u795e\u5947\uff0c\u4f46\u662f\u80fd\u8fc7\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u66b4\u529b\u600e\u4e48\u505a\uff0c\u66b4\u529b\u663e\u7136\u662f\u76f4\u63a5\u679a\u4e3e\u4e24\u4e2a\u70b9\uff0c\u7136\u540e\u66b4\u529b\u786e\u5b9a\u53e6\u5916\u4e24\u4e2a\u70b9\u662f\u5426\u5b58\u5728\u3002\n\n\u4f46\u662f\u8fd9\u6837\u663e\u7136\u4f1a\u88ab\u4e00\u6761\u76f4\u7ebf\u7ed9 hack\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u7528\u53e6\u5916\u4e00\u79cd\u667a\u6167\u7684\u65b9\u6cd5\u6765\u786e\u5b9a\u503c\u3002\n\n\u6211\u4eec\u6765\u601d\u8003\u4e00\u4e0b\uff0c\u968f\u4fbf\u753b\u4e2a\u6b63\u65b9\u5f62\uff0c\u7136\u540e\u6211\u4eec\u53bb\u679a\u4e3e\u90a3\u4e2a\u5de6\u4e0b\u89d2\u7684\u90a3\u4e2a\u5730\u65b9\uff0c\u518d\u5728\u4ed6\u7684\u6b63\u4e0a\u65b9\u548c\u53f3\u8fb9\u679a\u4e3e\u4e24\u4e2a\uff0c\u4f46\u662f\u8fd9\u6837\u4e5f\u4e0d\u591f\u4f18\u79c0\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u8981\u8003\u8651\u6027\u8d28\u4e86\uff0c\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u5168\u90fd\u662f\u76f8\u7b49\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5229\u7528\u4e24\u4e2a\u6307\u9488\u626b\u63cf\uff0c\u5982\u679c\u4e00\u4e2a\u8ddd\u79bb\u5c0f\u4e86\uff0c\u90a3\u5c31\u53bb\u4ed6\u7684\u5730\u65b9\uff0c\u5982\u679c\u76f8\u7b49\u7528 map \u6765\u5224\u65ad\u53f3\u4e0a\u89d2\u8fd9\u4e2a\u70b9\u662f\u5426\u5b58\u5728\uff0c\u7136\u540e\u4e24\u4e2a\u6307\u9488\u5411\u540e\u626b\u3002\n\n\u6211\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u8bc1\u660e\u8be5\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u6b63\u65b9\u5f62\u5176\u5b9e\u6570\u91cf\u633a\u5c11\u7684\uff0c\u6211\u8fd9\u4e2a\u505a\u6cd5\u4e5f\u5927\u81f4\u4f9d\u8d56\u4e8e\u6b63\u65b9\u5f62\u7684\u4e2a\u6570\u3002\n\n\u6b22\u8fce\u6765 hack \u6211\u7684\u9898\u89e3\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <set>\n#include <algorithm>\n#include <vector>\n#include <map>\n#define pb push_back\n#define int long long\nusing namespace std;\nconst int INF=1e5+5;\nint n,k,m,p[INF],p1[INF],x[INF],y[INF];\nvector <int> v[INF],vv[INF];\nmap <int,map<int,int> > L;\nvoid solve() {\n\tcin>>n;\n\tfor (int i=1;i<=n;i++) \n\t\tcin>>x[i]>>y[i],v[x[i]].pb(y[i]),vv[y[i]].pb(x[i]),L[x[i]][y[i]]=1;\n\tfor (int i=0;i<=1e5;i++) sort(v[i].begin(),v[i].end());\n\tfor (int i=0;i<=1e5;i++) sort(vv[i].begin(),vv[i].end());\n\tint ans=0;\n\tfor (int i=1;i<=n;i++) {\n\t\tint it=lower_bound(v[x[i]].begin(),v[x[i]].end(),y[i])-v[x[i]].begin()+1;\n\t\tint it1=lower_bound(vv[y[i]].begin(),vv[y[i]].end(),x[i])-vv[y[i]].begin()+1;\n\t\t\n\t\tfor (int l1=it,l2=it1;l1<v[x[i]].size() && l2<vv[y[i]].size();) {\n\t\t\twhile (l2<vv[y[i]].size() && v[x[i]][l1]-y[i]>vv[y[i]][l2]-x[i]) l2++;\n\t\t\twhile (l1<v[x[i]].size() && v[x[i]][l1]-y[i]<vv[y[i]][l2]-x[i]) l1++;\n\t\t\t//23333\n\t\t\tif (l1<v[x[i]].size() && l2<vv[y[i]].size()) ;\n\t\t\telse break;\n\t\t\t\n//\t\t\tcout<<x[i]<<\" \"<<y[i]<<\" \"<<l1<<\" \"<<l2<<\" \"<<v[x[i]][l1]<<\" \"<<vv[y[i]][l2]<<\" qprit\\n\";\n\t\t\t\n\t\t\tif (v[x[i]][l1]-y[i]==vv[y[i]][l2]-x[i]) \n\t\t\t\tans+=L[vv[y[i]][l2]][v[x[i]][l1]],l1++,l2++;\n\t\t}\n\t}\n\tcout<<ans<<\"\\n\";\n\treturn ;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tint t=1;\n\twhile (t--) solve();\n\treturn 0;\n}\n```\n",
        "postTime": 1665298406,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF425D"
    },
    {
        "content": "## CF425D Sereja and Squares\n### \u9898\u610f\n\u5728\u5e73\u9762\u4e0a\u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u6240\u6709\u8fb9 **\u5e73\u884c\u5750\u6807\u8f74** \u7684\u6b63\u65b9\u5f62\uff0c\u56db\u4e2a\u9876\u70b9\u90fd\u662f\u7ed9\u5b9a\u70b9\u3002\n\n$n\\le10^5$, $0 \\le x_i,y_i\\le 10^5$\u3002\n\n### \u5206\u6790\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4e24\u4e2a\u66b4\u529b\uff1a\n\n**\u66b4\u529b 1**\uff1a\u679a\u4e3e\u7eb5\u5750\u6807\u76f8\u540c\u7684\u70b9\u5bf9\uff0c\u5f97\u5230\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\uff0c\u7528\u54c8\u5e0c\u8868\u5224\u65ad\u5269\u4e0b\u7684\u4e24\u4e2a\u70b9\u662f\u5426\u662f\u7ed9\u5b9a\u70b9\u3002\u590d\u6742\u5ea6\u6700\u574f $\\Theta(n^2)$\u3002\n\n**\u66b4\u529b 2**\uff1a\u679a\u4e3e\u4e24\u5217\uff0c\u5f97\u5230\u4e24\u5217\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u5373\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u3002\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u5217\u7684\u6bcf\u4e2a\u70b9\uff0c\u7528\u54c8\u5e0c\u8868\u5224\u65ad\u5269\u4e0b\u4e09\u4e2a\u70b9\u662f\u5426\u662f\u7ed9\u5b9a\u70b9\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f $\\Theta(n^2)$\u3002\n\n\u628a\u4e24\u4e2a\u66b4\u529b\u64ae\u5408\u4e00\u4e0b\u3002\n\n1. \u5bf9\u4e8e\u5305\u542b\u70b9\u6570 $\\le \\sqrt n$ \u7684\u5217\uff0c\u8fdb\u884c\u66b4\u529b 1\u3002\u5f53\u6709 $\\Theta(\\sqrt n)$ \u4e2a\u5305\u542b $\\Theta (\\sqrt n)$ \u4e2a\u70b9\u7684\u5217\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5dee\uff0c\u4e3a $\\Theta (n \\sqrt n)$\u3002\n\n2. \u679a\u4e3e\u6240\u6709\u5305\u542b\u70b9\u6570 $> \\sqrt n$ \u7684\u4e24\u5217\uff0c\u8fdb\u884c\u66b4\u529b 2\u3002\u8fd9\u6837\u7684\u5217\u6700\u591a\u6709 $\\sqrt n$ \u4e2a\uff0c\u5bf9\u4e8e\u6bcf\u5217\uff0c\u6700\u591a\u88ab\u8bbf\u95ee $\\sqrt n$ \u6b21\uff0c\u6bcf\u5217\u957f\u5ea6\u6700\u5927\u4e3a $\\Theta(n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta (n\\sqrt n)$\u3002\n\n\u5176\u4e2d\uff0c\u4e00\u5217\u5c0f\u4e8e\u7b49\u4e8e $\\sqrt n$\uff0c\u4e00\u5217\u5927\u4e8e $\\sqrt n$ \u7684\u60c5\u51b5\u4f1a\u5728 1 \u4e2d\u88ab\u7edf\u8ba1\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\Theta(n \\sqrt n)$\uff0c\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define rint register int\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+5,K=(1<<17);\nint n,id[N],top,ans;\nvector<int> vec[N];\nstruct table{\n\tint hd[K],nxt[K],x[K],y[K],tot;\n\tvoid add(int X,int Y){\n\t\tll k=1ll*X*Y+X+Y;\n\t\tx[++tot]=X,y[tot]=Y;\n\t\tnxt[tot]=hd[k&(K-1)],hd[k&(K-1)]=tot;\n\t}\n\tbool find(int X,int Y){\n\t\tll k=1ll*X*Y+X+Y;\n\t\tfor(rint i=hd[k&(K-1)];i;i=nxt[i])\n\t\t\tif(x[i]==X&&y[i]==Y) return 1;\n\t\treturn 0; \n\t}\n} T; // \u54c8\u5e0c\u8868\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(rint i=1,x,y;i<=n;++i){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tvec[x].push_back(y),T.add(x,y);\n\t}\n\tint S=sqrt(n);\n\tfor(rint x=0;x<=100000;++x){\n\t\tif(!vec[x].size()) continue;\n\t\tif(vec[x].size()<=S){\n\t\t\tsort(vec[x].begin(),vec[x].end());\n\t\t\tfor(rint i=0;i<vec[x].size();++i)\n\t\t\tfor(rint j=i+1,len;j<vec[x].size();++j){\n\t\t\t\tlen=vec[x][j]-vec[x][i];\n\t\t\t\tif(x-len>=0&&T.find(x-len,vec[x][j])&&T.find(x-len,vec[x][i]))\n\t\t\t\t\tans+=(vec[x-len].size()<=S?1:2);\n           \t\t\t// \u5411\u5de6\u7684\u6b63\u65b9\u5f62\n\t\t\t\tif(x+len<=100000&&T.find(x+len,vec[x][j])&&T.find(x+len,vec[x][i]))\n\t\t\t\t\tans+=(vec[x+len].size()<=S?1:2);\n              \t\t// \u5411\u53f3\u7684\u6b63\u65b9\u5f62\n              \t\t// \u6ce8\u610f\uff1a\u5982\u679c\u6b63\u65b9\u5f62\u7684\u5de6\u53f3\u8fb9\u5728\u5c0f\u4e8e\u7b49\u4e8e sqrt(n) \u7684\u5217\u4e0a\uff0c\u4f1a\u88ab\u8ba1\u7b97 2 \u6b21\uff0c\u56e0\u6b64\u7b54\u6848 + 1\n              \t\t// \t \u5982\u679c\u6b63\u65b9\u5f62\u7684\u5de6\u53f3\u8fb9\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u5728\u5927\u4e8e sqrt(n) \u7684\u5217\u4e0a\uff0c\u53ea\u4f1a\u88ab\u8ba1\u7b97\u4e00\u6b21\uff0c\u56e0\u6b64\u7b54\u6848 + 2\n\t\t\t}\n\t\t}\n\t\telse sort(vec[x].begin(),vec[x].end()),id[++top]=x;\n\t}\n\tfor(rint t1=1;t1<=top;++t1)\n\tfor(rint t2=t1+1;t2<=top;++t2){\n\t\trint X1=id[t1],X2=id[t2];\n\t\tif(vec[X1].size()>vec[X2].size()) swap(X1,X2);\n     \t// \u679a\u4e3e\u8f83\u5c0f\u7684\u5217\uff0c\u5e38\u6570\u4f18\u5316\n\t\trint len=abs(X1-X2);\n\t\tfor(rint i=0;i<vec[X1].size();++i)\n\t\t\tif(T.find(X1,vec[X1][i]+len)&&T.find(X2,vec[X1][i])&&T.find(X2,vec[X1][i]+len)) ans+=2;\n      \t// \u53ea\u4f1a\u88ab\u8ba1\u7b97\u4e00\u6b21\uff0c\u7b54\u6848 + 2\n\t}\n\tcout<<ans/2; // \u6700\u540e\u7b54\u6848\u8981\u9664\u4ee5 2\n\treturn 0;\n}\n```",
        "postTime": 1627983474,
        "uid": 133060,
        "name": "henryhu2006",
        "ccfLevel": 0,
        "title": "Solution CF425D"
    }
]