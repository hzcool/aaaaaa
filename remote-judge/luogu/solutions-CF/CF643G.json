[
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\uff1a\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5e8f\u5217\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff0c1.\u533a\u95f4\u8d4b\u503c\uff0c2.\u67e5\u8be2\u533a\u95f4$[l,r]$\u4e2d\u51fa\u73b0\u6b21\u6570$\\geq \\frac{p(r-l+1)}{100}$\u7684\u6570\uff0c\u8981\u6c42\u628a\u5bf9\u7684\u7b54\u6848\u8f93\u51fa\u5b8c\uff0c\u53ef\u4ee5\u8f93\u51fa\u65e0\u5173\u7684\u7b54\u6848\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$n,m\\leq 1.5\\times 10^5,20\\leq p\\leq 100$\n\n\u9996\u5148\u8003\u8651$p=51$\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8981\u6c42\u533a\u95f4\u7684\u7edd\u5bf9\u4f17\u6570\uff0c\u6709\u4e00\u4e2a\u65b9\u6cd5\u662f\u8fd9\u6837\u7684\uff0c\u7ef4\u62a4\u5f53\u524d\u7684\u4f17\u6570\u548c\u5b83\u7684HP\uff0c\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u5b83\u548c\u8fd9\u4e2a\u6570\u76f8\u7b49\uff0c\u90a3\u4e48HP+1\uff0c\u5426\u5219HP-1\uff0c\u5982\u679c\u5b83\u7684HP\u4e3a0\uff0c\u90a3\u4e48\u5b83die\u4e86\uff0c\u7531kill\u6389\u5b83\u7684\u6570\u5b57\u6765\u4ee3\u66ff\u5b83\uff0c\u65b0\u7684HP\u4e3a1\uff0c\u6700\u540e\u5269\u4e0b\u7684\u6570\u5c31\u662f\u53ef\u80fd\u7684\u7b54\u6848\u3002\n\n\u6b63\u786e\u6027\u4e5f\u6bd4\u8f83\u663e\u7136\uff0c\u56e0\u4e3a\u5982\u679c\u5b83\u7684\u51fa\u73b0\u6b21\u6570$\\geq \\frac{r-l+1}{2}$\u90a3\u4e48\u5b83\u80af\u5b9a\u4e0d\u4f1a\u88ab\u5176\u4ed6\u6570\u7ed9\u6253\u7206\u3002\n\n\u7136\u540e\u63a8\u5e7f\u5230$p=20$\u7684\u60c5\u51b5\uff0c\u7ef4\u62a4\u5f53\u524d\u76845\u4e2a\u4f17\u6570\u548c\u5b83\u4eec\u7684HP\uff0c\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u5b83\u548c\u8fd95\u4e2a\u6570\u4e2d\u7684\u67d0\u4e2a\u6570\u76f8\u7b49\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684HP+1\uff0c\u5426\u5219\u5168\u90e8-1\uff0c\u7136\u540e\u628aHP\u4e3a0\u7684\u53bb\u6389\u4e4b\u540e\u52a0\u5165kill\u6389\u5b83\u4eec\u7684\u6570\uff0cHP\u4e3a1\u3002\n\n\u7531\u4e8e\u662f\u533a\u95f4\u8be2\u95ee\uff0c\u6240\u4ee5\u53ef\u4ee5\u642c\u5230\u7ebf\u6bb5\u6811\u4e0a\u505a\uff0c\u5408\u5e76\u4e5f\u53ef\u4ee5\u66b4\u529b\u628a\u4e00\u8fb9\u7684\u6570\u63d2\u5165\u53e6\u4e00\u8fb9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(nk^2\\log n)$\uff0c\u5176\u4e2d$k=\\lfloor\\frac{100}{p}\\rfloor$.\n\n```cpp\n#include<bits/stdc++.h>\n#define Rint register int\nusing namespace std;\nconst int N = 150003;\nint n, m, p;\nstruct Node{\n\tint num, tag, a[5], b[5];\n\tinline Node operator = (const Node &o){\n\t\tnum = o.num; tag = 0;\n\t\tmemcpy(a, o.a, sizeof a);\n\t\tmemcpy(b, o.b, sizeof b);\n\t\treturn *this;\n\t}\n\tinline Node operator + (const Node &o) const {\n\t\tNode res = o;\n\t\tfor(Rint i = 0;i < num;i ++){\n\t\t\tbool flag = false;\n\t\t\tfor(Rint j = 0;j < res.num && !flag;j ++)\n\t\t\t\tif(a[i] == res.a[j]){\n\t\t\t\t\tres.b[j] += b[i];\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\tif(flag) continue;\n\t\t\tif(res.num < p){res.a[res.num] = a[i]; res.b[res.num] = b[i]; ++ res.num; continue;}\n\t\t\tint k = 0;\n\t\t\tfor(Rint j = 1;j < res.num;j ++)\n\t\t\t\tif(res.b[j] < res.b[k]) k = j;\n\t\t\tif(b[i] < res.b[k])\n\t\t\t\tfor(Rint j = 0;j < res.num;j ++) res.b[j] -= b[i];\n\t\t\telse {\n\t\t\t\tint tmp = res.b[k];\n\t\t\t\tres.a[k] = a[i]; res.b[k] = b[i];\n\t\t\t\tfor(Rint j = 0;j < res.num;j ++) res.b[j] -= tmp;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n} seg[N << 2];\ninline void pushup(int x){seg[x] = seg[x << 1] + seg[x << 1 | 1];}\ninline void pushtag(int x, int len, int val){\n\tseg[x].num = 1;\n\tseg[x].tag = seg[x].a[0] = val;\n\tseg[x].b[0] = len;\n}\ninline void pushdown(int x, int len){\n\tif(seg[x].tag){\n\t\tpushtag(x << 1, len - (len >> 1), seg[x].tag);\n\t\tpushtag(x << 1 | 1, len >> 1, seg[x].tag);\n\t\tseg[x].tag = 0;\n\t}\n}\ninline void build(int x, int L, int R){\n\tif(L == R){\n\t\tscanf(\"%d\", &seg[x].a[0]); seg[x].b[0] = seg[x].num = 1;\n\t\treturn;\n\t}\n\tint mid = L + R >> 1;\n\tbuild(x << 1, L, mid);\n\tbuild(x << 1 | 1, mid + 1, R);\n\tpushup(x);\n}\ninline void modify(int x, int L, int R, int l, int r, int val){\n\tif(l <= L && R <= r){\n\t\tpushtag(x, R - L + 1, val); return;\n\t}\n\tint mid = L + R >> 1;\n\tpushdown(x, R - L + 1);\n\tif(l <= mid) modify(x << 1, L, mid, l, r, val);\n\tif(mid < r) modify(x << 1 | 1, mid + 1, R, l, r, val);\n\tpushup(x);\n}\ninline Node query(int x, int L, int R, int l, int r){\n\tif(l <= L && R <= r) return seg[x];\n\tint mid = L + R >> 1;\n\tpushdown(x, R - L + 1);\n\tif(r <= mid) return query(x << 1, L, mid, l, r);\n\telse if(mid < l) return query(x << 1 | 1, mid + 1, R, l, r);\n\telse return query(x << 1, L, mid, l, r) + query(x << 1 | 1, mid + 1, R, l, r);\n}\nint main(){\n\tscanf(\"%d%d%d\", &n, &m, &p); p = 100 / p;\n\tbuild(1, 1, n);\n\twhile(m --){\n\t\tint opt, l, r, val;\n\t\tscanf(\"%d%d%d\", &opt, &l, &r);\n\t\tif(opt == 1){\n\t\t\tscanf(\"%d\", &val);\n\t\t\tmodify(1, 1, n, l, r, val);\n\t\t} else {\n\t\t\tNode now = query(1, 1, n, l, r);\n\t\t\tprintf(\"%d\", now.num);\n\t\t\tfor(Rint i = 0;i < now.num;i ++) printf(\" %d\", now.a[i]);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n}\n```",
        "postTime": 1564315596,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "\u5982\u679c $p = 50 + \\varepsilon$ \u4f1a\u600e\u4e48\u6837\uff1f\n\n\u8fd9\u4fbf\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff1a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217\u4e2d\u5b58\u5728\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $n / 2$ \u7684\u6570\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u627e\u5230\u5b83\u3002\n\n\u53ea\u8981\u6bcf\u6b21\u5220\u9664\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u6700\u540e\u7559\u4e0b\u7684\u90a3\u4e2a\u6570\uff08\u6216\u90a3\u4e9b\u6570\uff0c\u4f46\u8fd9\u4e9b\u6570\u5168\u90e8\u76f8\u540c\uff09\u5c31\u662f\u8981\u6c42\u7684\u7b54\u6848\u3002\n\n\u539f\u7406\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e86 $a$ \u6b21\uff0c\u5176\u4e2d $a > n - a$\uff0c\u5219\u4e24\u8fb9\u90fd\u51cf\u53bb $1$\uff0c\u4ecd\u6709 $a - 1 > n - a - 1 = (n - 2) - (a - 1)$\u3002\n\n\u5bf9\u4e8e\u62d3\u5c55\u60c5\u51b5\u6211\u4eec\u5982\u6cd5\u70ae\u5236\uff0c\u4ee4 $\\displaystyle k = \\left\\lfloor \\frac{100}{p} \\right\\rfloor$\u3002\u6bcf\u6b21\u5220\u9664 $k + 1$ \u4e2a\u6570\uff0c\u5219\u5bf9\u7684\u6570\u4e00\u5b9a\u4f1a\u7559\u4e0b\u6765\u3002\n\n\u56e0\u4e3a $k$ \u6700\u5927\u5c31\u662f $5$\uff0c\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4f7f\u7528\u6bcf\u6b21 $\\mathcal O (k^2)$ \u7684\u65f6\u95f4\u5408\u5e76\u533a\u95f4\uff0c\u4e0d\u96be\u7ef4\u62a4\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O (n k^2 \\log n)$\uff0c[\u8bc4\u6d4b\u94fe\u63a5](https://codeforces.com/contest/674/submission/72281677)\u3002",
        "postTime": 1583204731,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "[$\\Huge\\color{#ffa030}{\\tt My~Cnblogs}$](https://www.cnblogs.com/Wendigo/p/13026847.html)\n\n---\n> [CF643G Choosing Ads](https://www.luogu.com.cn/problem/CF643G)\n\n> $n$ \u548c $m$ \u548c $p$ \u548c\u5e8f\u5217 $a_i(1\\le i\\le n)$\u3002$m$ \u79cd\u5982\u4e0b\u64cd\u4f5c\uff1a\n> 1. ``1 l r id`` \u4ee4 $i\\in[l,r]:a_i=id$\u3002\n> 2. ``2 l r`` \u8f93\u51fa\u81f3\u591a $\\lfloor\\frac{100}{p}\\rfloor$ \u4e2a\u6570\uff0c\u5176\u4e2d\u5305\u62ec\u6240\u6709 $[l,r]$ \u533a\u95f4\u5185\u51fa\u73b0 $\\ge\\lceil\\frac{p(r-l+1)}{100}\\rceil$ \u6b21\u7684 $a_i$\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le n,m,id,a_i\\le 150000$\uff0c$20\\le p\\le 100$\uff0c$1\\le l\\le r\\le n$\n\n---\n**\u4e00\u773c\u60f3\u6cd5\uff1a\u641e\u4e2a\u7ebf\u6bb5\u6811\uff0c\u8282\u70b9\u5b58\u8be5\u533a\u95f4\u51fa\u73b0\u9891\u7387 $\\ge\\frac{p}{100}$ \u7684 $a_i$ \u503c\u548c\u51fa\u73b0\u6b21\u6570\u5b58\u4e0b\u6765\uff0c\u5408\u5e76\u3002**\n\n**\u8fd9\u4e2a\u505a\u6cd5\u7684\u4f9d\u636e\uff1a** \u5982\u679c\u533a\u95f4 $[l,r]$ \u4e2d $a_i$ \u51fa\u73b0\u9891\u7387 $\\ge\\frac{p}{100}$\uff0c$[l,mid]$ \u6216 $[mid+1,r]$ \u5fc5\u4e2d\u6709\u4e00\u4e2a\u4e5f\u6ee1\u8db3\u3002\n\n**\u8fd9\u4e2a\u505a\u6cd5\u7684 $\\tt bug$\uff1a** \u82e5 $a_i$ \u5b58\u5728\u4e8e $[l,mid]$ \u7684\u8282\u70b9\u4e2d\u800c\u4e0d\u5b58\u5728\u4e8e $[mid+1,r]$ \u7684\u8282\u70b9\u4e2d\uff08\u6216\u53cd\u8fc7\u6765\uff09\uff0c\u8282\u70b9\u7684\u4fe1\u606f\u96be\u4ee5\u5408\u5e76\u3002\n\n\u4e8e\u662f\uff0c\u6211\u8fd9\u4e2a\u601d\u7ef4\u611a\u949d\u7684\u5927\u849f\u84bb\u5c31\u6ca1\u5728\u8003\u573a\u4e0a\u505a\u51fa\u6765\u3002\n\n---\n\u8fd9\u9898\u7684\u6b63\u89e3\u7c7b\u4f3c\u4ee5\u524d\u7684\u4e00\u9053\u7ecf\u5178\u9898\uff1a\u4e00\u4e2a\u5e8f\u5217\u6c42**\u4f17\u6570\uff08\u51fa\u73b0\u9891\u7387 $\\ge \\frac 12$\uff09**\uff0c**\u7a7a\u95f4\u590d\u6742\u5ea6** \u53ea\u80fd $\\Theta(1)$\u3002\n\n\u505a\u6cd5\u662f\u8bb0\u5f55 $now$ \u548c $cnt$\u3002\u65b0\u52a0\u5165\u6570 $a$ \u7684\u65f6\u5019\uff0c\u5982\u679c $[now=a]$\uff0c$cnt++$\uff1b\u5982\u679c $[now\\not=a]$\uff0c$cnt--$\uff0c\u5982\u679c $[cnt<0]$\uff0c$cnt=1$ \u5e76\u4e14 $now=a$\u3002\n\n---\n\u8fd9\u9898\u4e5f\u7c7b\u4f3c\u3002\u51fa\u73b0\u9891\u7387 $\\ge\\frac{p}{100}$ \u7684\u6570\u81f3\u591a $\\lfloor\\frac{100}{p}\\rfloor$ \u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bb0\u5f55 $\\lfloor\\frac{100}{p}\\rfloor$ \u4e2a $now_i$ \u548c $cnt_i$\u3002\n\n\u6bcf\u6b21\u52a0\u5165 $a$\uff0c\u5982\u679c $[now_i=a]$\uff0c$cnt_i++$\uff1b\u5982\u679c $[now_i\\not=a]$\uff0c$cnt_i--$\uff0c\u5982\u679c $[cnt_i<0]$\uff0c$cnt_i=1$ \u5e76\u4e14 $now_i=a$\u3002\n\n**\u8fd9\u6837\u7684\u8bdd\u867d\u7136\u53ea\u5b58\u4e86 $\\lfloor\\frac{100}{p}\\rfloor$ \u79cd\u6570\uff0c\u4f46\u5df2\u7ecf\u5b8c\u5168\u53cd\u6620\u4e86\u533a\u95f4\u5185\u6570\u7684\u6570\u91cf\u5bf9\u6bd4\uff0c\u6240\u4ee5\u8282\u70b9\u4fe1\u606f\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u3002**\n\n\u6700\u540e\u6bcf\u4e2a\u8282\u70b9\u6216\u8bb8\u4f1a\u5b58\u4e0b\u4e0d\u6ee1\u8db3\u51fa\u73b0\u9891\u7387 $\\ge\\frac{p}{100}$ \u7684\u503c\uff0c\u4f46\u662f\u8f93\u51fa\u53ea\u8981\u5305\u542b\u7b54\u6848\u5c31\u884c\u4e86\uff08\u9898\u4e2d\u8bf4\u7684\uff09\u3002\n\n---\n- **\u4ee3\u7801**\n\n\u7a0d\u5fae\u957f\u4e86\u70b9\uff0c\u4f46\u662f\u6ca1\u6709\u5751\u4eba\u7684\u7ec6\u8282\uff0c\u76f4\u63a5\u5199\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair(a,b)\n#define x first\n#define y second\n#define b(a) a.begin()\n#define e(a) a.end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\nconst int inf=0x3f3f3f3f;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=150000;\nint n,m,p,pl,a[N+7];\n\n//Segmenttree\ntypedef vector<pair<int,int>> vpii;\n#define mid ((l+r)>>1)\n#define ls k<<1,l,mid\n#define rs k<<1|1,mid+1,r\nint mk[N<<2]; vpii ca[N<<2]; //pair.x \u8868\u793a now_i\uff0cpair.y \u8868\u793a cnt_i\nvoid fill(vpii&v,int id,int c){v.clear(),v.pb(mp(id,c));}\nvpii operator+(vpii p,vpii q){ //\u5c06 p \u4e2d\u7684\u6570\u4e00\u4e00\u52a0\u5165 q\n\tvpii r;\n\tfor(auto&u:p){\n\t\tint ok=0; for(auto&v:q)if(u.x==v.x){v.y+=u.y,ok=1;break;}\n\t\tif(ok) continue; q.pb(u); if(sz(q)<=pl) continue;\n\t\tint mn=n; for(auto&v:q) mn=min(mn,v.y);\n\t\tr.clear(); for(auto&v:q)if(v.y-mn) r.pb(mp(v.x,v.y-mn)); q=r; \n\t}\n\treturn q;\n}\nvoid down(int k,int l,int r){\n\tif(!mk[k]) return;\n\tfill(ca[k<<1],mk[k],mid-l+1),fill(ca[k<<1|1],mk[k],r-mid);\n\tmk[k<<1]=mk[k<<1|1]=mk[k],mk[k]=0;\n}\nvoid build(int k=1,int l=1,int r=n){\n\tif(l==r) return void(fill(ca[k],a[l],1));\n\tbuild(ls),build(rs),ca[k]=ca[k<<1]+ca[k<<1|1];\n}\nvoid fix(int x,int y,int z,int k=1,int l=1,int r=n){\n\tif(x<=l&&r<=y) return void((fill(ca[k],z,r-l+1),mk[k]=z)); down(k,l,r);\n\tif(mid>=x) fix(x,y,z,ls); if(mid<y) fix(x,y,z,rs);\n\tca[k]=ca[k<<1]+ca[k<<1|1];\n}\nvpii query(int x,int y,int k=1,int l=1,int r=n){\n\tif(x<=l&&r<=y) return ca[k]; down(k,l,r);\n\tvpii res; if(mid>=x) res=res+query(x,y,ls); if(mid<y) res=res+query(x,y,rs);\n\treturn res;\n}\nvoid Print(int k=1,int l=1,int r=n){ //\u8c03\u8bd5\u7528\u7684\uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\uff0c\u603b\u662f\u4ee3\u7801\u5199\u6302\n\tprintf(\"[%d,%d,%d]:mk=%d\\n\",k,l,r,mk[k]);\n\tfor(auto&u:ca[k]) printf(\"(%d,%d)\",u.x,u.y);puts(\"\");\n\tif(l==r) return; down(k,l,r);\n\tPrint(ls),Print(rs);\n}\n\n//Main\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&p),pl=100/p;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]); build();\n\tfor(int i=1;i<=m;i++){\n\t\tint o; scanf(\"%d\",&o);\n\t\tif(o==1){int l,r,id; scanf(\"%d%d%d\",&l,&r,&id); fix(l,r,id);}\n\t\telse {\n\t\t\tint l,r; scanf(\"%d%d\",&l,&r);\n\t\t\tvpii res=query(l,r); printf(\"%d\",sz(res));\n\t\t\tfor(auto&u:res) printf(\" %d\",u.x); puts(\"\");\n\t\t}\n//\t\tputs(\"+++++\");\n//\t\tPrint();\n//\t\tputs(\"-----\");\n\t}\n\treturn 0;\n}\n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1591009855,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "~~\u5728\u51ac\u4ee4\u8425\u4e0a\u542c\u4e86\u5404\u8def\u795e\u4ed9\u7684\u8be6\u7ec6\u8bb2\u89e3\u540e\u8fd8\u662f\u505a\u4e0d\u51fa\u6765\u7684\u6211\u6eda\u8fc7\u6765\u6c34\u9898\u89e3\u4e86~~\n\n\u9996\u5148\uff0c\u9898\u610f\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\u8f93\u51fa\u67d0\u4e2a\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u524d$k$\u591a\u7684\u6570\u3002\u5176\u4e2d$k=\\left\\lfloor\\dfrac{100}{p}\\right\\rfloor$\u3002\u56e0\u4e3a\u54ea\u6015\u8f93\u51fa\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\u4e5f\u65e0\u59a8\uff0c\u6240\u4ee5\u8fd9\u662f\u6b63\u786e\u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u5f53$k=1$\u7684\u7279\u4f8b\uff0c\u5373$p>50$\u7684\u60c5\u51b5\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u5220\u9664$2$\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u4e00\u76f4\u5220\uff0c\u76f4\u5230\u53ea\u5269\u4e0b\u5c0f\u4e8e\u7b49\u4e8e$1$\u4e2a\u6570\u4e3a\u6b62\uff0c\u5219\u5269\u4e0b\u7684\u90a3\u4e2a\u6570\u5373\u4e3a\u7b54\u6848\u3002\u56e0\u4e3a\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u5982\u679c\u51fa\u73b0\u6b21\u6570$>50\\%$\uff0c\u5219\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5220\u5149\uff0c\u56e0\u4e3a\u6700\u591a\u53ea\u80fd\u5220\u53bb$\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$\u5bf9\u6570\uff0c\u4f46\u8fd9\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u662f\u4e25\u683c\u5927\u4e8e$\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$\u6b21\u7684\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u6700\u591a\u7684\u6570\u51fa\u73b0\u6b21\u6570$\\leq 50\\%$\uff0c\u90a3\u5c31\u4e0d\u597d\u8bf4\u4e86\uff0c\u53ef\u80fd\u4f1a\u8f93\u51fa\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\uff0c\u4e0d\u8fc7\u53cd\u6b63\u4e0d\u5b58\u5728\u8fd9\u4e48\u4e2a$>50\\%$\u7684\u6570\uff0c\u5947\u5947\u602a\u602a\u5c31\u5947\u5947\u602a\u602a\u5427\u3002\n\n\u8003\u8651\u5f53$k$\u4e3a\u4efb\u610f\u503c\u65f6\u7684\u4e00\u822c\u60c5\u51b5\u3002\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u5220\u53bb$k+1$\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u4e00\u76f4\u5220\uff0c\u76f4\u5230\u53ea\u5269\u4e0b\u5c0f\u4e8e\u7b49\u4e8e$k$\u4e2a\u6570\u4e3a\u6b62\uff0c\u5269\u4e0b\u7684\u6570\u5373\u4e3a\u7b54\u6848\u3002\u8bc1\u660e\u540c\u7406\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u591a\u53ea\u80fd\u5220\u53bb$\\left\\lfloor\\dfrac{n}{k+1}\\right\\rfloor$\u7ec4\u8fd9\u6837\u7684\u6570\uff0c\u800c\u4efb\u610f\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570$\\geq p\\%$\u7684\u6570\u90fd\u81f3\u5c11\u51fa\u73b0\u4e86\u4e25\u683c\u5927\u4e8e$\\left\\lfloor\\dfrac{n}{k+1}\\right\\rfloor$\u6b21\u3002\n\n\u56e0\u4e3a$p\\geq 20$\uff0c\u6240\u4ee5$k\\leq 5$\u3002\n\n\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u8be2\u95ee\u3002\n\n\u5728\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\uff0c\u6211\u4eec\u7ef4\u62a4\u5b83\u4ee3\u8868\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u524d$k$\u591a\u7684\u6570\u4ee5\u53ca\u5b83\u4eec\u7684\u51fa\u73b0\u6b21\u6570\uff08\u5728\u8fdb\u884c\u5b8c\u5220\u9664\u64cd\u4f5c\u540e\uff09\u3002\n\n\u6211\u4eec\u4f7f\u7528```std::vector<pair<int,int>>```\u7ef4\u62a4\u8fd9\u4e9b\u4e1c\u897f\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c```pii```\u6307```pair<int,int>```\uff0c```vp```\u6307```std::vector<pair<int,int>>```\u3002\u4ee3\u7801\u4e2d\u7684$p$\u5373\u4e3a\u4e0a\u6587\u4e2d\u7684$k$\u3002\n\n\u8fd9\u662f\u5408\u5e76\u64cd\u4f5c\uff1a\n\n```cpp\nbool cmp(const pii &x,const pii &y){\n\treturn x.second>y.second;\n}\nvp operator +(const vp &x,const vp &y){\n\tvp z=x;\n\tfor(int i=0;i<y.size();i++){\n\t\tbool qwq=false;\n\t\tfor(int j=0;j<z.size();j++)if(z[j].first==y[i].first){z[j].second+=y[i].second,qwq=true;break;}\n\t\tif(!qwq)z.push_back(y[i]);\n\t}\n\tsort(z.begin(),z.end(),cmp);\n\twhile(z.size()>=p){\n\t\tfor(int i=0;i<z.size();i++)z[i].second-=z.rbegin()->second;\n\t\tz.pop_back();\n\t}\n\treturn z;\n}\n```\n\u5176\u4e2d\uff0cfirst\u662f\u6570\uff0csecond\u662f\u51fa\u73b0\u6b21\u6570\u3002\n\n\u6211\u4eec\u9996\u5148\u5408\u5e76\u6240\u6709\u76f8\u540c\u7684\u6570\uff1b\u7136\u540e\uff0c\u6211\u4eec\u628a\u6570\u6309\u7167\u51fa\u73b0\u6b21\u6570\u5927\u5c0f\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n\n```cpp\nwhile(z.size()>=p){\n\tfor(int i=0;i<z.size();i++)z[i].second-=z.rbegin()->second;\n\tz.pop_back();\n}\n```\n\n\n\u6309\u7167\u8fd9\u6bb5\u8bdd\u7684\u610f\u601d\uff0c\u5b9e\u9645\u6bcf\u7ec4\u5220\u53bb\u7684\u6570\u4e0d\u6b62$p+1$\u4e2a\u3002\u4f46\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u4e00\u6b21\u5220\u6570\u7684\u6570\u91cf\u59cb\u7ec8$\\geq p+1$\u7684\u8bdd\uff0c\u5219\u6700\u7ec8\u8fd8\u662f\u53ea\u4f1a\u5220\u6389$\\leq\\left\\lfloor\\dfrac{n}{p+1}\\right\\rfloor$\u7ec4\u6570\uff0c\u8fd8\u662f\u53ea\u4f1a\u4fdd\u7559\u524d$p$\u5927\u7684\u6570\u3002\n\n\u7136\u540e\u5269\u4e0b\u7684\u5c31\u662f\u5e38\u89c4\u7ebf\u6bb5\u6811\u64cd\u4f5c\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define lson x<<1\n#define rson x<<1|1\n#define mid ((l+r)>>1)\n#define pii pair<int,int>\n#define vp vector<pii>\nint n,m,p,num[150010],tag[600100];\nvp v[600100];\nbool cmp(const pii &x,const pii &y){\n\treturn x.second>y.second;\n}\nvp operator +(const vp &x,const vp &y){\n\tvp z=x;\n\tfor(int i=0;i<y.size();i++){\n\t\tbool qwq=false;\n\t\tfor(int j=0;j<z.size();j++)if(z[j].first==y[i].first){z[j].second+=y[i].second,qwq=true;break;}\n\t\tif(!qwq)z.push_back(y[i]);\n\t}\n\tsort(z.begin(),z.end(),cmp);\n\twhile(z.size()>=p){\n\t\tfor(int i=0;i<z.size();i++)z[i].second-=z.rbegin()->second;\n\t\tz.pop_back();\n\t}\n\treturn z;\n}\nvoid build(int x,int l,int r){\n\tif(l==r){v[x].push_back(make_pair(num[l],1));return;}\n\tbuild(lson,l,mid),build(rson,mid+1,r),v[x]=v[lson]+v[rson]; \n}\nvoid change(int x,int l,int r,int val){\n\ttag[x]=val;\n\tv[x].clear();\n\tv[x].push_back(make_pair(val,r-l+1));\n}\nvoid pushdown(int x,int l,int r){\n\tif(!tag[x])return;\n\tchange(lson,l,mid,tag[x]);\n\tchange(rson,mid+1,r,tag[x]);\n\ttag[x]=0;\n}\nvoid modify(int x,int l,int r,int L,int R,int val){\n\tif(l>R||r<L)return;\n\tif(L<=l&&r<=R){change(x,l,r,val);return;}\n\tpushdown(x,l,r),modify(lson,l,mid,L,R,val),modify(rson,mid+1,r,L,R,val),v[x]=v[lson]+v[rson];\n} \nvp query(int x,int l,int r,int L,int R){\n\tif(l>R||r<L)return {};\n\tif(L<=l&&r<=R)return v[x];\n\tpushdown(x,l,r);\n\treturn query(lson,l,mid,L,R)+query(rson,mid+1,r,L,R);\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&p),p=(100/p)+1;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&num[i]);\n\tbuild(1,1,n);\n\tfor(int i=1,t1,t2,t3,t4;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&t1,&t2,&t3);\n\t\tif(t1==1)scanf(\"%d\",&t4),modify(1,1,n,t2,t3,t4);\n\t\telse{\n\t\t\tvp z=query(1,1,n,t2,t3);\n\t\t\tprintf(\"%d \",z.size());\n\t\t\tfor(auto j:z)printf(\"%d \",j.first);puts(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1583665354,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "> [CF643G Choosing Ads](https://codeforces.com/contest/643/problem/G)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u548c\u4e00\u4e2a\u6574\u6570 $p$\u3002\n- \u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u8981\u4e48\u662f\u533a\u95f4\u8d4b\u503c\uff0c\u8981\u4e48\u662f\u8be2\u95ee\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u81f3\u5c11\u5360 $p\\%$ \u7684\u6570\u3002\n- \u8f93\u51fa\u8be2\u95ee\u7684\u7b54\u6848\u65f6\uff0c\u53ef\u4ee5\u5305\u542b\u9519\u7684\u6570\uff0c\u4e5f\u53ef\u4ee5\u91cd\u590d\u8f93\u51fa\uff0c\u4f46\u5bf9\u7684\u6570\u4e00\u5b9a\u8981\u5728\u7b54\u6848\u4e2d\uff0c\u4e14\u8f93\u51fa\u7684\u6570\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $\\lfloor \\frac{100}{p} \\rfloor$\u3002\n- $n,m \\le 1.5 \\times 10^5$\uff0c$20 \\le p \\le 100$\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u8003\u8651 $p > 50$ \u7684\u60c5\u51b5\uff0c\u95ee\u9898\u53d8\u6210\u533a\u95f4\u7edd\u5bf9\u4f17\u6570\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u540c\u65f6\u5220\u9664\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u5219\u6700\u540e\u5269\u4e0b\u7684\u4e92\u4e0d\u76f8\u540c\u7684\u6570\u6700\u591a\u53ea\u6709\u4e00\u4e2a\uff0c\u8fd9\u4e00\u4e2a\u5c31\u662f\u7b54\u6848\u3002\n\n\u6269\u5c55\u5230 $p \\le 50$ \u7684\u60c5\u51b5\u4e5f\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u6bcf\u6b21\u540c\u65f6\u5220\u9664 $\\lfloor \\frac{100}{p} \\rfloor + 1$ \u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u6570\uff0c\u5219\u6700\u540e\u5269\u4e0b\u7684\u4e92\u4e0d\u76f8\u540c\u7684\u6570\u6700\u591a\u53ea\u6709 $\\lfloor \\frac{100}{p} \\rfloor$ \u4e2a\uff0c\u8fd9\u4e9b\u6570\u4e00\u5b9a\u5305\u542b\u4e86\u6240\u6709\u7b54\u6848\u3002\n\n\u7531\u4e8e $p \\ge 20$\uff0c\u56e0\u6b64 $\\lfloor \\frac{100}{p} \\rfloor \\le 5$\uff0c\u5408\u5e76\u7684\u90e8\u5206\u53ef\u4ee5\u5f53\u6210\u5e38\u6570\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5e8f\u5217\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((n+m) \\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 1.5e5 + 7;\nint n, m, p, k, a[N];\nstruct T {\n\tint l, r, z;\n\tvector<pi> c;\n} t[N<<2];\n\ninline vector<pi> merge(vector<pi> a, vector<pi> b) {\n\tfor (pi o : b) {\n\t\tbool ok = 0;\n\t\tfor (pi &p : a)\n\t\t\tif (p.fi == o.fi) {\n\t\t\t\tp.se += o.se, ok = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (ok) continue;\n\t\ta.pb(o);\n\t\tif ((int)a.size() <= k) continue;\n\t\tint x = n;\n\t\tfor (pi p : a) x = min(x, p.se);\n\t\tvector<pi> c;\n\t\tfor (pi p : a)\n\t\t\tif (p.se - x) c.pb(mp(p.fi, p.se - x));\n\t\ta = c;\n\t}\n\treturn a;\n}\n\nvoid build(int p, int l, int r) {\n\tt[p].l = l, t[p].r = r;\n\tif (t[p].l == t[p].r) return t[p].c.pb(mp(a[l], 1)), void();\n\tbuild(ls, l, md), build(rs, md + 1, r);\n\tt[p].c = merge(t[ls].c, t[rs].c);\n}\n\ninline void setx(int p, int x) {\n\tt[p].z = x, t[p].c.clear(), t[p].c.pb(mp(x, t[p].r - t[p].l + 1));\n}\n\ninline void spd(int p) {\n\tif (t[p].z) setx(ls, t[p].z), setx(rs, t[p].z), t[p].z = 0;\n}\n\nvoid change(int p, int l, int r, int x) {\n\tif (t[p].l >= l && t[p].r <= r) return setx(p, x);\n\tspd(p);\n\tif (l <= md) change(ls, l, r, x);\n\tif (r > md) change(rs, l, r, x);\n\tt[p].c = merge(t[ls].c, t[rs].c);\n}\n\nvector<pi> ask(int p, int l, int r) {\n\tif (t[p].l >= l && t[p].r <= r) return t[p].c;\n\tspd(p);\n\tvector<pi> c;\n\tif (l <= md) c = ask(ls, l, r);\n\tif (r > md) c = merge(c, ask(rs, l, r));\n\treturn c;\n}\n\nint main() {\n\trd(n), rd(m), rd(p), k = 100 / p, rda(a, n);\n\tbuild(1, 1, n);\n\tfor (int i = 1, o, l, r, x; i <= m; i++) {\n\t\trd(o), rd(l), rd(r);\n\t\tif (o == 1) rd(x), change(1, l, r, x);\n\t\telse {\n\t\t\tauto ans = ask(1, l, r);\n\t\t\tprint(ans.size(), ' ');\n\t\t\tfor (pi o : ans) print(o.fi, ' ');\n\t\t\tprints(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1583236371,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u4e71\u641e\u505a\u6cd5\u3002\n\n\u5bf9\u4e8e\u5b83\u8be2\u95ee\u7684\u8981\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u8be2\u95ee\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u524d $\\lfloor{\\frac{100}{p}}\\rfloor$ \u4e2a\u6570\u3002\u7531\u4e8e\u6709\u5bb9\u9519\u7387\u7684\u8bbe\u7f6e\uff0c\u6211\u4eec\u4e0d\u7528\u5173\u5fc3\u5b83\u7684\u51fa\u73b0\u9891\u7387\u662f\u5426\u8fbe\u5230\u4e86\u8981\u6c42\u3002\n\n\u8fd9\u4e2a\u8be2\u95ee\u53ef\u4ee5\u8003\u8651\u7528\u968f\u673a\u5316\u6765\u9a97\uff0c\u968f\u673a\u51e0\u767e\u6b21\u540e\uff0c\u5c06\u5b83\u7684\u51fa\u73b0\u9891\u7387\u6392\u5e8f\uff0c\u9009\u53d6\u6700\u5927\u7684\u51e0\u4e2a\u5373\u53ef\u3002\u4e8b\u5b9e\u4e0a\u7531\u4e8e\u5982\u679c\u6709\u5f88\u591a\u4e2a\u6570\u51fa\u73b0\u9891\u7387\u76f8\u8fd1\u7684\u8bdd\uff0c\u5b83\u5927\u6982\u7387\u8981\u4e48\u5168\u90e8\u53d6\u8981\u4e48\u51fa\u73b0\u9891\u7387\u90fd\u6ca1\u6709\u8fbe\u5230 $p\\%$\uff0c\u6240\u4ee5\u968f\u591a\u6b21\u65f6\u6b63\u786e\u6027\u8fd8\u662f\u6bd4\u8f83\u6709\u4fdd\u969c\u7684\u3002  \n\n\u8003\u8651\u5230\u8fd8\u5b58\u5728\u533a\u95f4\u8d4b\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u3002\u5982\u679c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u53ef\u4ee5\u505a\u5230 \u533a\u95f4\u8d4b\u503c $O(\\log n)$ \u5355\u70b9\u67e5\u8be2 $O(\\log n)$\uff0c\u4f46\u7531\u4e8e\u6211\u4eec\u9700\u8981\u8fdb\u884c\u8bb8\u591a\u6b21\u5355\u70b9\u67e5\u8be2\uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u663e\u7136\u8fd8\u4e0d\u591f\u4f18\u3002\u8003\u8651\u7528\u5206\u5757\u505a\u5230 \u533a\u95f4\u8d4b\u503c $O(\\sqrt{n})$ \u5355\u70b9\u67e5\u8be2 $O(1)$\u3002\n\n\u5177\u4f53\u7528\u5206\u5757\u600e\u4e48\u7ef4\u62a4\u5927\u5bb6\u60f3\u5fc5\u90fd\u77e5\u9053\u5427\uff0c\u6574\u5757\u8d4b\u540c\u6837\u7684\u503c\u7684\u65f6\u5019\u5728\u4e0a\u9762\u6253\u4e2a tag\uff0c\u96f6\u6563\u5757\u66b4\u529b\u5904\u7406\u5373\u53ef\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n~~\u4e8b\u5b9e\u8bc1\u660e\u6709\u65f6\u5019\u968f\u673a\u5316\u8fd8\u662f\u6709\u524d\u9014\u7684~~\n\n\u4ee3\u7801\u53ef\u80fd\u6709\u70b9\u4e11\uff0c\u4e0d\u559c\u52ff\u55b7\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,abm,mmx,avx,avx2\")\n#pragma GCC optimize(\"unroll-loops\")\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\n#define req(i,a,b) for(int i=(a);i>=(b);--i)\n#define rep_(i,a,b) for(int i=(a);i<(b).size();++i)\n#define F(a) rep(a,1,n)\n#define ll long long\n#define Z(a,b) sort(a+1,a+b+1)\nusing namespace std;\nvoid rd(auto &x){x=0;int f=1;char ch=getchar();while(ch<48||ch>57){if(ch==45)f=-1;ch=getchar();}while(ch>=48&&ch<=57)x=x*10+ch-48,ch=getchar();x*=f;}\n//\u7f3a\u7701\u6e90\nint n,m,p,a[150010],bl[150010],tag[10010],sz,op,l,r,x,vis[1500010],cnt[1500010],y;\ninline int get(int x){return tag[bl[x]]?tag[bl[x]]:a[x];}//\u67e5\u8be2\nint main()\n{\n    cin>>n>>m>>p;\n    F(i) rd(a[i]);\n    sz=sqrt(n);\n    F(i) bl[i]=(i-1)/sz+1;\n    mt19937_64 rnd(clock());//\u6492\u64ad\u968f\u673a\u79cd\u5b50,\u5355\u63a8mt19937\n    rep(_,1,m)\n    {\n        rd(op),rd(l),rd(r);\n        if (op==1)\n        {\n            rd(x);\n            int L=bl[l],R=bl[r];\n            if (tag[L]) rep(i,L*sz-sz+1,L*sz) a[i]=tag[L];\n            if (tag[R]) rep(i,R*sz-sz+1,R*sz) a[i]=tag[R];//tag\u4e0b\u653e\n            tag[L]=tag[R]=0;//\u96f6\u6563\u5757tag\u6e05\u96f6\n            rep(i,L+1,R-1) tag[i]=x;//\u6574\u5757\u6253tag\n            if (L!=R)\n            {\n                rep(i,l,L*sz) a[i]=x;\n                rep(i,R*sz-sz+1,r) a[i]=x;\n            }\n            else rep(i,l,r) a[i]=x;//\u96f6\u6563\u5757\u66b4\u529b\u5904\u7406\n        }//\u5206\u5757\u7ef4\u62a4\n        if (op==2)\n        {\n            y++;\n            pair<int,int> A[1310];\n            int tot=0,pq,qp[1310];\n            rep(i,1,678)//\u5982\u679c\u677e\u4e00\u70b9\u7684\u8bdd\u8fd9\u91cc\u53ef\u4ee5\u591arand\u51e0\u6b21 \n            {\n                pq=get(rnd()%(r-l+1)+l);\n                if (vis[pq]!=y) vis[pq]=y,cnt[pq]=0,qp[++tot]=pq;\n                cnt[pq]++;\n            }//\u968f\u673a\u5316\u7edf\u8ba1\u6b21\u6570\n            rep(i,1,tot) A[i]={cnt[qp[i]],qp[i]};\n            Z(A,tot);\n            reverse(A+1,A+tot+1);\n            rep(i,1,5) A[tot+i].second=A[tot].second;//\u9632\u6b62\u603b\u6570\u4e0d\u8db3100/p\n            cout<<100/p<<' ';\n            rep(i,1,100/p) cout<<A[i].second<<' ';\n            putchar(10);//\u8fdb\u884c\u5904\u7406\u5e76\u8f93\u51fa\n        }\n    }\n    return 0;\n}\n//\u8fd9\u4efd\u4ee3\u7801\u4e0d\u4e00\u5b9a\u80fd\u4e00\u904d\u8fc7\uff0c\u5b9e\u5728\u4e0d\u884c\u7684\u8bdd\u53ef\u4ee5\u591a\u4ea4\u51e0\u53d1\n```",
        "postTime": 1616464070,
        "uid": 71491,
        "name": "shenmadongdong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "## $\\text{Description}$\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u548c\u4e00\u4e2a\u6574\u6570 $p$\u3002\n- \u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u8981\u4e48\u662f\u533a\u95f4\u8d4b\u503c\uff0c\u8981\u4e48\u662f\u8be2\u95ee\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u81f3\u5c11\u5360 $p\\%$ \u7684\u6570\u3002\n- \u8f93\u51fa\u8be2\u95ee\u7684\u7b54\u6848\u65f6\uff0c\u53ef\u4ee5\u5305\u542b\u9519\u7684\u6570\uff0c\u4e5f\u53ef\u4ee5\u91cd\u590d\u8f93\u51fa\uff0c\u4f46\u5bf9\u7684\u6570\u4e00\u5b9a\u8981\u5728\u7b54\u6848\u4e2d\uff0c\u4e14\u8f93\u51fa\u7684\u6570\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $\\lfloor \\dfrac{100}{p} \\rfloor$\u3002\n- $n,m \\le 1.5 \\times 10^5$\uff0c$20 \\le p \\le 100$\u3002\n## $\\text{Solution}$\n\u9b54\u6cd5\u64cd\u4f5c\u3002  \n\u8003\u8651 $p>50$ \uff08\u4e25\u683c\u4f17\u6570\uff09\u65f6\u5982\u4f55\u505a\u3002  \n\u6bcf\u6b21\u5220\u53bb\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u76f4\u5230\u5220\u5230\u5269\u4e0b\u7684\u79cd\u7c7b\u4e0d\u8d85\u8fc7\u4e00\u79cd\u65f6\uff0c\u5982\u679c\u6709\u4e25\u683c\u4f17\u6570\uff0c\u663e\u7136\u4f1a\u5269\u5230\u6700\u540e\u3002 \n\n\u7c7b\u4f3c\u7684\uff0c\u63a8\u5e7f\u5230 $p\\ge 20$ \u7684\u60c5\u51b5\u3002\u4ee4 $k=\\lfloor \\dfrac{100}{p}\\rfloor$\uff0c\u6bcf\u6b21\u5220\u53bb $k+1$ \u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u76f4\u5230\u4e0d\u80fd\u5220\u4e3a\u6b62\uff0c\u4e5f\u6613\u8bc1\u5982\u679c\u6709\u7b26\u5408\u6761\u4ef6\u7684\u6570\u6700\u540e\u4e00\u5b9a\u4f1a\u5269\u4e0b\u3002  \n\u73b0\u5728\u8981\u5bf9\u4e8e\u533a\u95f4\u8be2\u95ee\u5feb\u901f\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u5373\u53ef\uff0c\u6bcf\u6b21\u66b4\u529b $O(k^2)$ \u66b4\u529b\u5408\u5e76\u533a\u95f4\uff0c\u5177\u4f53\u5b9e\u73b0\u5efa\u8bae\u89c2\u770b\u4ee3\u7801\u3002  \n## $\\text{Code}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ull unsigned long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\nconst int N=2e5+100;\n#define ll long long\n#define ui unsigned int\ninline ll read(){\n  ll x(0),f(1);char c=getchar();\n  while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n  while(isdigit(c)) {x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n  return x*f;\n}\n\nint n,k,m;\n\nstruct node{\n  int val[6],num[6],tot;\n}tr[N<<2];\nnode operator + (const node &a,const node &b){\n  node res=a;\n  for(int i=1;i<=b.tot;i++){\n    bool jd(0);\n    for(int j=1;j<=res.tot;j++){\n      if(res.val[j]==b.val[i]){\n\tjd=1;res.num[j]+=b.num[i];break;\n      }\n    }\n    if(jd) continue;\n    if(res.tot<k){\n      ++res.tot;res.val[res.tot]=b.val[i];res.num[res.tot]=b.num[i];\n      continue;\n    }\n    int pl(1);\n    for(int j=2;j<=res.tot;j++){\n      if(res.num[j]<res.num[pl]) pl=j;\n    }\n    if(res.num[pl]>b.num[i]){\n      for(int j=1;j<=res.tot;j++) res.num[j]-=b.num[i];\n    }\n    else{\n      int o=res.num[pl];\n      res.num[pl]=b.num[i];res.val[pl]=b.val[i];\n      for(int j=1;j<=res.tot;j++) res.num[j]-=o;\n    }\n  }\n  return res;\n}\n\n#define mid ((l+r)>>1)\n#define ls (k<<1)\n#define rs (k<<1|1)\nint laz[N<<2];\ninline void pushup(int k){tr[k]=tr[ls]+tr[rs];}\ninline void tag(int k,int l,int r,int v){\n  laz[k]=v;tr[k].tot=1;tr[k].num[1]=r-l+1;tr[k].val[1]=v;\n  return;\n}\ninline void pushdown(int k,int l,int r){\n  int o=laz[k];laz[k]=0;\n  if(!o) return;\n  tag(ls,l,mid,o);tag(rs,mid+1,r,o);\n  return;\n}\ninline void change(int k,int l,int r,int x,int y,int v){\n  if(x<=l&&r<=y){\n    tag(k,l,r,v);return;\n  }\n  pushdown(k,l,r);\n  if(x<=mid) change(ls,l,mid,x,y,v);\n  if(y>mid) change(rs,mid+1,r,x,y,v);\n  pushup(k);\n}\nnode ask(int k,int l,int r,int x,int y){  \n  if(x<=l&&r<=y) return tr[k];\n  pushdown(k,l,r);\n  if(y<=mid) return ask(ls,l,mid,x,y);\n  else if(x>mid) return ask(rs,mid+1,r,x,y);\n  else{\n    node a=ask(ls,l,mid,x,y),b=ask(rs,mid+1,r,x,y);\n    return a+b;\n  }\n}\nint a[N];\nvoid build(int k,int l,int r){\n  if(l==r){\n    tr[k].tot=1;tr[k].num[1]=1;tr[k].val[1]=a[l];\n    return;\n  }\n  build(ls,l,mid);build(rs,mid+1,r);\n  pushup(k);\n}\n\nsigned main(){\n#ifndef ONLINE_JUDGE\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n#endif\n  n=read();m=read();k=100/read();\n  for(int i=1;i<=n;i++) a[i]=read();\n  build(1,1,n);\n  for(int i=1;i<=m;i++){\n    int op=read(),l=read(),r=read();\n    if(op==1){\n      int x=read();\n      change(1,1,n,l,r,x);\n    }\n    else{\n      node res=ask(1,1,n,l,r);\n      printf(\"%d \",res.tot);\n      for(int j=1;j<=res.tot;j++) printf(\"%d \",res.val[j]);\n      putchar('\\n');\n    }\n  }\n  return 0;\n}\n/*\n*/\n\n```\n",
        "postTime": 1640610718,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "CF643G Choosing Ads"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u591f\u7b80\u5355\u4e86\u3002\n\n## \u9898\u89e3\n\n\u6211\u89c9\u5f97\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\u76ee\u3002\n\n\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u55ef\uff0c\u4e0d\u8bb2\u3002\n\n\u6211\u4eec\u7740\u91cd\u6765\u770b\u770b\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u3002\n\n\u8fd9\u4e2a\u67e5\u8be2\u64cd\u4f5c\u8981\u6211\u4eec\u8f93\u51fa\u6240\u6709\u51fa\u73b0\u6b21\u6570\u7684\u9891\u7387 $\\ge p\\%$ \u7684\u6570\u5b57\u3002\n\n\u5148\u8003\u8651\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5373\u5f53 $p>50$ \u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\u8fd9\u4e2a\u95ee\u9898\u7684\u672c\u8d28\u5c31\u6210\u4e86\u6c42\u533a\u95f4\u7684\u7edd\u5bf9\u4f17\u6570\u3002\n\n\u533a\u95f4\u7edd\u5bf9\u4f17\u6570\u6709\u4e00\u4e2a\u7ecf\u5178\u7684 $\\Theta(1)$ \u7a7a\u95f4\u7684\u505a\u6cd5\uff0c\u6469\u5c14\u6295\u7968\u3002\n\n\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u6469\u5c14\u6295\u7968\u6cd5\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5e8f\u5217 $\\texttt{7 5 7 6 7 7 4 7}$\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf `major,cnt`\u3002\n\n\u6211\u4eec\u904d\u5386\u4e00\u904d\u5e8f\u5217\uff1a\n\n\u8d77\u521d `major=7,cnt=1`\u3002\n\n\u7136\u540e $5\\neq 7$\uff0c`cnt--`\u3002\n\n\u6b64\u65f6 `cnt==0`\uff0c\u6211\u4eec\u4ee4 `major=5,cnt=1`\u3002\n\n\u540e\u9762\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u90a3\u4e48\u62d3\u5c55\u5230\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u7684 `p` \u6700\u5c0f\u662f 20\u3002\n\n\u548c\u666e\u901a\u7684\u6469\u5c14\u6295\u7968\u6cd5\u7c7b\u4f3c\uff0c\u6211\u4eec\u628a `major,cnt` \u66ff\u6362\u4e3a `major[5],cnt[5]`\uff0c\u7528\u6570\u7ec4\u6765\u6c42\u51fa\u5206\u522b\u7684\u4f17\u6570\u3002\n\n\u4e0d\u8fc7\u8fd9\u6837\u505a\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u51fa\u73b0\u9891\u7387\u4e0d\u7b26\u5408\u7b54\u6848\u89c4\u8303\u7684\u6570\u5b58\u8fdb\u6765\uff0c\u4e0d\u8fc7\u53cd\u6b63\u826f\u5fc3\u51fa\u9898\u4eba\u5141\u8bb8\u6211\u4eec\u8f93\u51fa\u65e0\u610f\u4e49\u5185\u5bb9\uff0c\u6240\u4ee5\u5c31\u4e0d\u7528\u7ba1\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u52a0\u901f\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u533a\u95f4\u63a8\u5e73\u3001\u67e5\u8be2\u9996\u9009\u7ebf\u6bb5\u6811\u3002\n\n\u90a3\u4e48\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u5c31\u5f88\u660e\u663e\u4e86\u3002\n\n\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u4e00\u4e2a\u6469\u5c14\u6295\u7968\u7684\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u518d\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u63a8\u5e73\u7684 `tag`\u3002\n\n\u6700\u540e `pushup` \u5408\u5e76\u5de6\u53f3\u513f\u5b50\u8d21\u732e\u65f6\uff0c\u76f4\u63a5\u628a\u53f3\u533a\u95f4\u5408\u5e76\u5230\u5de6\u8fb9\u6765\u5373\u53ef\u3002\n\n\u4e0b\u4f20\u6807\u8bb0\u5f88\u7b80\u5355\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e0b\u4f20\u65f6\u56e0\u4e3a\u65f6\u533a\u95f4\u63a8\u5e73\uff0c\u6240\u4ee5\u6469\u5c14\u6295\u7968\u7684\u7ed3\u6784\u4f53\u91cc\u7684 `cnt` \u90e8\u5206\u8981\u8bbe\u4e3a `r-l+1`\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <assert.h>\n\nusing namespace std;\n\nconst int Maxn = 15e4 + 5;\nint n, m, p, isa[Maxn];\nstruct Major_Voting // \u6469\u5c14\u6295\u7968\u7684\u7ed3\u6784\u4f53\n{\n\tint major[5], cnt[5];\n\tMajor_Voting()\n\t{\n\t\tmemset(major, 0, sizeof(major));\n\t\tmemset(cnt, 0, sizeof(cnt));\n\t}\n};\nstruct Segment_Tree\n{\n\tMajor_Voting val;\n\tint tag;\n} t[Maxn << 2];\n\nMajor_Voting make_vote(int major) // \u4ee5 major \u4e3a\u5173\u952e\u5b57\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6469\u5c14\u6295\u7968\n{\n\tMajor_Voting ret;\n\tmemset(ret.major, 0, sizeof(ret.major));\n\tmemset(ret.cnt, 0, sizeof(ret.cnt));\n\tret.major[0] = major;\n\tret.cnt[0] = 1;\n\treturn ret;\n}\n\nMajor_Voting merge(Major_Voting one, Major_Voting ano) // \u5408\u5e76\u533a\u95f4\uff0c\u8fd9\u4e00\u6b65\u7684\u7ec6\u8282\u8f83\u591a\n{\n\tMajor_Voting ret = one;\n\tfor (int i = 0; i < p; ++i)\n\t{\n\t\tif (ano.cnt[i])\n\t\t{\n\t\t\tbool flag = 0;\n\t\t\tfor (int j = 0; j < p; ++j)\n\t\t\t{\n\t\t\t\tif (ret.major[j] == ano.major[i])\n\t\t\t\t{\n\t\t\t\t\tret.cnt[j] += ano.cnt[i];\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag == 0)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < p; ++j)\n\t\t\t\t{\n\t\t\t\t\tif (ret.cnt[j] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tret.major[j] = ano.major[i];\n\t\t\t\t\t\tret.cnt[j] = ano.cnt[i];\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // \u628a\u53f3\u533a\u95f4\u7684\u8d21\u732e\u7b97\u5230\u5de6\u8fb9\u6765\n\t\t\tif (flag)\tcontinue;\n\t\t\tint line = 2e9;\n\t\t\tfor (int j = 0; j < p; ++j)\tline = min(line, ret.cnt[j]);\n\t\t\tif (line >= ano.cnt[i])\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < p; ++j) \tret.cnt[j] -= ano.cnt[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbool book = 0;\n\t\t\tfor (int j = 0; j < p; ++j)\n\t\t\t{\n\t\t\t\tif (ret.cnt[j] == line && book == 0)\n\t\t\t\t{\n\t\t\t\t\tret.major[j] = ano.major[i];\n\t\t\t\t\tret.cnt[j] = ano.cnt[i] - line;\n\t\t\t\t\tbook = 1;\n\t\t\t\t}\n\t\t\t\telse\tret.cnt[j] -= line;\n\t\t\t} // \u5206\u7c7b\u8ba8\u8bba\u6700\u5c0f\u503c\u7684\u5904\u7406\n\t\t}\n\t}\n\treturn ret;\n}\n\nvoid maintain(int p)\n{\n\tt[p].val = merge(t[p << 1].val, t[p << 1 | 1].val);\n}\n\n\nvoid spread(int p, int l, int r)\n{\n\tif (t[p].tag)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tt[p << 1].tag = t[p].tag;\n\t\tt[p << 1 | 1].tag = t[p].tag;\n\t\tt[p << 1].val = make_vote(t[p].tag);\n\t\tt[p << 1].val.cnt[0] = mid - l + 1;\n\t\tt[p << 1 | 1].val = make_vote(t[p].tag);\n\t\tt[p << 1 | 1].val.cnt[0] = r - mid;\n\t\tt[p].tag = 0;\n\t}\n}\n\nvoid build(int p, int l, int r)\n{\n\tif (l == r)\n\t{\n\t\tt[p].val = make_vote(isa[l]);\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(p << 1, l, mid);\n\tbuild(p << 1 | 1, mid + 1, r);\n\tmaintain(p);\n}\n\nvoid change(int p, int l, int r, int x, int y, int v)\n{\n\tif (l > y || r < x) \treturn ;\n\tif (l >= x && r <= y)\n\t{\n\t\tt[p].tag = v;\n\t\tt[p].val = make_vote(v);\n\t\tt[p].val.cnt[0] = r - l + 1;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tspread(p, l, r);\n\tif (mid >= x)\tchange(p << 1, l, mid, x, y, v);\n\tif (mid < y)\tchange(p << 1 | 1, mid + 1, r, x, y, v);\n\tmaintain(p);\n}\n\nMajor_Voting query(int p, int l, int r, int x, int y)\n{\n\tif (l > y || r < x) \treturn make_vote(0);\n\tif (l >= x && r <= y)\treturn t[p].val;\n\tint mid = (l + r) >> 1;\n\tMajor_Voting ret;\n\tspread(p, l, r);\n\tif (mid >= x)\tret = merge(ret, query(p << 1, l, mid, x, y));\n\tif (mid < y)\tret = merge(ret, query(p << 1 | 1, mid + 1, r, x, y));\n\treturn ret;\n} // \u4ee5\u4e0a\u677f\u5b50\n\nsigned main()\n{\n\tscanf(\"%d %d %d\", &n, &m, &p);\n\tassert(p >= 20 && p <= 100);\n\tp = 100 / p;\n\tfor (int i = 1; i <= n; ++i)\tscanf(\"%d\", &isa[i]);\n\tbuild(1, 1, n);\n\tfor (int i = 0, t, l, r, x; i < m; ++i)\n\t{\n\t\tscanf(\"%d %d %d\", &t, &l, &r);\n\t\tif (t == 1)\n\t\t{\n\t\t\tscanf(\"%d\", &x);\n\t\t\tchange(1, 1, n, l, r, x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tMajor_Voting ans = query(1, 1, n, l, r);\n\t\t\tprintf(\"%d\", p);\n\t\t\tfor (int i = 0; i < p; ++i) \tprintf(\" %d\", ans.major[i]); // \u56e0\u4e3a\u9898\u76ee\u7684\u7279\u6b8a\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u4e71\u8f93\u51fa\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1596781073,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u4f53\u9a8c](https://mrsrz.github.io/2020/01/15/CF643G/)\n\n\u4ee5\u4e0b\u662f\u4e00\u79cd\u5206\u5757\u505a\u6cd5\u3002\n\n\u5bf9\u539f\u6570\u5217\u8fdb\u884c\u5206\u5757\uff0c\u5e76\u5bf9\u503c\u57df\u8fdb\u884c\u5206\u5757\u3002\u6211\u4eec\u8bb0\u5f55 $tot[i][k]$ \u8868\u793a**\u524d** $i$ \u4e2a\u5757\u4e2d\uff0c$k$ \u7684\u51fa\u73b0\u6b21\u6570\uff08\u5206\u5757\u524d\u7f00\u548c\u601d\u60f3\uff09\u3002\u5e76\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u5757\u4e2d\u51fa\u73b0\u8fc7\u7684\u5143\u7d20\u3002\n\n\u7528 set \u7ef4\u62a4\u6240\u6709**\u603b**\u51fa\u73b0\u6b21\u6570\u8fbe\u5230 $20\\%S$\uff08$S$ \u4e3a\u5757\u5927\u5c0f\uff0c\u4e0b\u540c\uff09\u7684\u6570\u3002\n\n\u5bf9\u4fee\u6539\u64cd\u4f5c\uff0c\u8fb9\u89d2\u76f4\u63a5\u66b4\u529b\u4fee\u6539\uff0c\u6574\u5757\u7684\u76f4\u63a5\u6253\u4fee\u6539\u6807\u8bb0\u3002\u7136\u540e\u6211\u4eec\u63d0\u53d6\u51fa\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4ea7\u751f\u53d8\u5316\u7684\u6570\u503c\uff0c\u5bf9\u8fd9\u4e9b\u6570\u503c\u7684\u524d\u7f00\u548c\u6570\u7ec4\u66b4\u529b\u8fdb\u884c\u4fee\u6539\u3002\u5355\u6b21\u6c42\u524d\u7f00\u548c\u7684\u590d\u6742\u5ea6\u662f $O(\\frac n S)$ \u7684\uff0c\u4f46\u7531\u4e8e\u4fee\u6539\u64cd\u4f5c\u662f\u533a\u95f4\u8d4b\u503c\uff0c\u6240\u4ee5\u91cd\u65b0\u6c42\u524d\u7f00\u548c\u7684\u603b\u6b21\u6570\u662f $O(n+m)$\uff0c\u590d\u6742\u5ea6\u5747\u644a\u6b63\u786e\u3002\n\n\u5bf9\u67e5\u8be2\u64cd\u4f5c\uff0c\u5982\u679c\u533a\u95f4\u6bd4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u6c42\u4ee5\u51cf\u5c0f\u5e38\u6570\u3002\u533a\u95f4\u6bd4\u8f83\u5927\u65f6\u91c7\u7528\u53e6\u5916\u65b9\u6cd5\u3002\n\n\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u7528 set \u8bb0\u5f55\u4e86**\u603b**\u51fa\u73b0\u6b21\u6570\u8fbe\u5230 $20\\%S$\uff08$S$ \u4e3a\u5757\u5927\u5c0f\uff0c\u4e0b\u540c\uff09\u7684\u6570\uff0c\u8fd9\u6837\u7684\u6570\u6700\u591a $\\frac {5n} S$ \u4e2a\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u6570\uff0c$O(1)$ \u6c42\u5176\u5728\u533a\u95f4\u5185\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u4e9b\u6570\u5728\u8fb9\u89d2\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u904d $O(S)$ \u7684\u626b\u63cf\u6c42\u51fa\u5bf9\u4e8e\u5168\u90e8\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\u800c\u5728\u5757\u95f4\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5206\u5757\u524d\u7f00\u548c\u6570\u7ec4\u76f8\u51cf $O(1)$ \u6c42\u5f97\u3002\n\n\u4e0d\u8003\u8651 $20\\%$ \u5e26\u6765\u7684\u5e38\u6570\u5f71\u54cd\uff0c\u5bb9\u6613\u5f97\u5230\u5f53 $S=\\sqrt n$ \u65f6\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u4e3a $O((n+m)\\sqrt n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#include<set>\n#include<ctime>\nconst int N=1.6e5,siz=600,M=N/siz+2,K=siz*2/5;\nstd::set<int>st;\nchar buf[(int)1e8],*ss=buf;\ninline void init(){buf[fread(buf,1,(int)1e8-1,stdin)]='\\n',fclose(stdin);}\ninline int readint(){\n\tint d=0;\n\twhile(!isdigit(*ss))++ss;\n\twhile(isdigit(*ss))d=d*10+(*ss++^'0');\n\treturn d;\n}\n#define bel(x)((x-1)/siz+1)\nint n,m,p,a[N];\nint L[M],R[M],blocks,sta[N],top,vis[N],tag[M];\nint STA[M][siz+2],TP[N],cnt[N];\nint sum[N][M];\nint pre[N][M];\ninline void prefix(int id){\n\tst.erase(id);\n\tint*sum=::sum[id];int*pre=::pre[id];\n\tfor(int i=1;i<=blocks;++i)\n\tpre[i]=pre[i-1]+sum[i];\n\tif(pre[blocks]>=K)st.insert(id);\n}\ninline void pushdown(int id){\n\tconst int v=tag[id];\n\ttag[id]=0;\n\tTP[id]=1;\n\tSTA[id][1]=v;\n\tfor(int i=L[id];i<=R[id];++i)a[i]=v;\n}\ninline void rebuild(int id){\n\tint*s=STA[id],&top=TP[id];\n\ttop=0;\n\tfor(int i=L[id];i<=R[id];++i)if(!vis[a[i]])vis[a[i]]=1,s[++top]=a[i];\n\tfor(int i=1;i<=top;++i)vis[s[i]]=0;\n}\nstruct ostream{\n\tchar buf[15000005],*s;\n\tinline ostream(){s=buf;}\n\tinline ostream&operator<<(int d){\n\t\tif(!d){\n\t\t\t*s++='0';\n\t\t}else{\n\t\t\tstatic int w;\n\t\t\tfor(w=1;w<=d;w*=10);\n\t\t\tfor(;w/=10;d%=w)*s++=d/w^'0';\n\t\t}\n\t\treturn*this;\n\t}\n\tinline ostream&operator<<(const char&c){*s++=c;return*this;}\n\tinline void flush(){\n\t\tfwrite(buf,1,s-buf,stdout);\n\t\ts=buf;\n\t}\n\tinline~ostream(){flush();}\n}cout;\nint main(){\n\tinit();\n\tn=readint(),m=readint(),p=readint();\n\tblocks=bel(n);\n\tfor(int i=1;i<=blocks;++i)L[i]=R[i-1]+1,R[i]=i*siz;R[blocks]=n;\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]=readint();\n\t\t++sum[a[i]][bel(i)];\n\t}\n\tfor(int i=1;i<=n;++i)prefix(i);\n\tfor(int x=1;x<=blocks;++x)rebuild(x);\n\twhile(m--){\n\t\tif(readint()==1){\n\t\t\tint l=readint(),r=readint(),x=readint();\n\t\t\tconst int bL=bel(l),bR=bel(r);\n\t\t\tif(bL==bR){\n\t\t\t\tif(tag[bL])pushdown(bL);\n\t\t\t\ttop=0;\n\t\t\t\tfor(int i=l;i<=r;++i){\n\t\t\t\t\t--sum[a[i]][bL];\n\t\t\t\t\tif(!vis[a[i]])vis[a[i]]=1,sta[++top]=a[i];\n\t\t\t\t\t++sum[a[i]=x][bL];\n\t\t\t\t}\n\t\t\t\tif(!vis[x])sta[++top]=x;\n\t\t\t\tfor(int i=1;i<=top;++i)vis[sta[i]]=0,prefix(sta[i]);\n\t\t\t\trebuild(bL);\n\t\t\t}else{\n\t\t\t\tif(tag[bL])pushdown(bL);\n\t\t\t\ttop=0;\n\t\t\t\tfor(int i=R[bL];i>=l;--i){\n\t\t\t\t\t--sum[a[i]][bL];\n\t\t\t\t\tif(!vis[a[i]])vis[a[i]]=1,sta[++top]=a[i];\n\t\t\t\t\t++sum[a[i]=x][bL];\n\t\t\t\t}\n\t\t\t\tif(tag[bR])pushdown(bR);\n\t\t\t\tfor(int i=L[bR];i<=r;++i){\n\t\t\t\t\t--sum[a[i]][bR];\n\t\t\t\t\tif(!vis[a[i]])vis[a[i]]=1,sta[++top]=a[i];\n\t\t\t\t\t++sum[a[i]=x][bR];\n\t\t\t\t}\n\t\t\t\tfor(int i=bL+1;i<bR;++i){\n\t\t\t\t\tif(tag[i]){\n\t\t\t\t\t\tsum[tag[i]][i]=0;\n\t\t\t\t\t\tif(!vis[tag[i]])vis[tag[i]]=1,sta[++top]=tag[i];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tconst int*s=STA[i],&tp=TP[i];\n\t\t\t\t\t\tfor(int j=1;j<=tp;++j){\n\t\t\t\t\t\t\tsum[s[j]][i]=0;\n\t\t\t\t\t\t\tif(!vis[s[j]])vis[s[j]]=1,sta[++top]=s[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsum[x][i]=R[i]-L[i]+1;\n\t\t\t\t\ttag[i]=x;\n\t\t\t\t}\n\t\t\t\tif(!vis[x])sta[++top]=x;\n\t\t\t\tfor(int i=1;i<=top;++i)vis[sta[i]]=0,prefix(sta[i]);\n\t\t\t\trebuild(bL),rebuild(bR);\n\t\t\t}\n\t\t}else{\n\t\t\tint l=readint(),r=readint();\n\t\t\tif(l>r)continue;\n\t\t\tconst int LEN=r-l+1,C=LEN*p/100+!!(LEN*p%100),bL=bel(l),bR=bel(r);\n\t\t\tint ans[15],tans=0;\n\t\t\tif(r-l+1<=3*siz){\n\t\t\t\ttop=0;\n\t\t\t\tfor(int i=l;i<=r;++i){\n\t\t\t\t\tconst int x=tag[bel(i)]?tag[bel(i)]:a[i];\n\t\t\t\t\tif(!vis[x])sta[++top]=x;\n\t\t\t\t\t++vis[x];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=top;++i)\n\t\t\t\tif(vis[sta[i]]>=C)ans[++tans]=sta[i];\n\t\t\t\tif(tans)\n\t\t\t\tstd::sort(ans+1,ans+tans+1);\n\t\t\t\tcout<<tans<<' ';\n\t\t\t\tfor(int i=1;i<=tans;++i)\n\t\t\t\tcout<<ans[i]<<' ';\n\t\t\t\tcout<<'\\n';\n\t\t\t\tfor(int i=1;i<=top;++i)vis[sta[i]]=0;\n\t\t\t}else{\n\t\t\t\ttop=0;\n\t\t\t\tif(tag[bL])pushdown(bL);\n\t\t\t\tif(tag[bR])pushdown(bR);\n\t\t\t\tfor(int i:st)\n\t\t\t\tif(!vis[i])vis[i]=1,sta[++top]=i;\n\t\t\t\tfor(int i=R[bL];i>=l;--i){\n\t\t\t\t\tif(!vis[a[i]])vis[a[i]]=1,sta[++top]=a[i];\n\t\t\t\t\t++cnt[a[i]];\n\t\t\t\t}\n\t\t\t\tfor(int i=L[bR];i<=r;++i){\n\t\t\t\t\tif(!vis[a[i]])vis[a[i]]=1,sta[++top]=a[i];\n\t\t\t\t\t++cnt[a[i]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=top;++i){\n\t\t\t\t\tcnt[sta[i]]+=pre[sta[i]][bR-1]-pre[sta[i]][bL];\n\t\t\t\t\tif(cnt[sta[i]]>=C)ans[++tans]=sta[i];\n\t\t\t\t}\n\t\t\t\tif(tans)\n\t\t\t\tstd::sort(ans+1,ans+tans+1);\n\t\t\t\tcout<<tans<<' ';\n\t\t\t\tfor(int i=1;i<=tans;++i)\n\t\t\t\tcout<<ans[i]<<' ';\n\t\t\t\tcout<<'\\n';\n\t\t\t\tfor(int i=1;i<=top;++i)\n\t\t\t\tcnt[sta[i]]=vis[sta[i]]=0;\n\t\t\t}\n\t\t}\n\t}\n//\tfprintf(stderr,\"%.3f\\n\",1.*clock()/CLOCKS_PER_SEC);\n\treturn 0;\n}\n```",
        "postTime": 1579103039,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/643/problem/G) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF643G)\n\n\u9996\u5148\u8003\u8651 $p>50$ \u7684\u65f6\u5019\u600e\u4e48\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u6c42\u4e00\u4e2a\u533a\u95f4\u7684**\u7edd\u5bf9\u4f17\u6570**\u3002\u6211\u4eec\u77e5\u9053\u4f17\u6570\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e0d\u80fd\u7528\u7ebf\u6bb5\u6811\u76f4\u63a5\u7ef4\u62a4\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u533a\u95f4 $[l,r]$ \u548c $x\\in [l,r)$\uff0c\u533a\u95f4 $[l,r]$ \u7684\u4f17\u6570\u4e0d\u4e00\u5b9a\u662f $[l,x]$ \u7684\u4f17\u6570\u6216 $[x+1,r]$ \u7684\u4f17\u6570\u3002\n\n\u4e0d\u8fc7\u6b64\u9898\u6709\u4e00\u4e2a\u7279\u6b8a\u4e4b\u5904\uff0c\u5c31\u662f\u6211\u4eec\u8981\u6c42\u533a\u95f4\u7684**\u7edd\u5bf9\u4f17\u6570**\u800c\u4e0d\u662f\u533a\u95f4\u7684\u4f17\u6570\u3002\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\uff0c\u56e0\u4e3a\u533a\u95f4 $[l,r]$ \u7684\u7edd\u5bf9\u4f17\u6570\u4e00\u5b9a\u81f3\u5c11\u662f\u533a\u95f4 $[l,x],[x+1,r]$ \u4e2d\u67d0\u4e2a\u533a\u95f4\u7684\u7edd\u5bf9\u4f17\u6570\uff08\u63d0\u793a\uff1a\u53cd\u8bc1\u6cd5\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u601d\u8def\uff0c\u5bf9\u4e8e $[l,r]$ \u4e2d\u7684\u6240\u6709\u6570\u7ec4\u6210\u4e00\u4e2a\u53ef\u91cd\u96c6 $S$\uff0c\u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a\u6570 $x,y\\in S$ \u4e14 $x\\ne y$ \u5e76\u5c06 $x,y$ \u4ece $S$ \u4e2d\u5220\u9664\uff0c\u76f4\u5230 $S=\\varnothing$ \u6216 $S$ \u4e2d\u6240\u6709\u6570\u90fd\u76f8\u540c\u4e3a\u6b62\u3002\u4e0d\u96be\u53d1\u73b0\u5728\u4efb\u610f\u65f6\u523b\uff0c\u539f\u533a\u95f4\u4e2d\u7684\u7edd\u5bf9\u4f17\u6570\u8fd8\u662f $S$ \u4e2d\u7684\u7edd\u5bf9\u4f17\u6570\uff0c\u56e0\u4e3a\u5bf9\u4e8e $[l,r]$ \u4e2d\u7684\u7edd\u5bf9\u4f17\u6570 $z$\uff0c\u6211\u4eec\u8bbe\u5176\u51fa\u73b0\u6b21\u6570\u4e3a $c$\uff0c\u82e5\u5220\u53bb\u7684\u4e24\u6570\u6ee1\u8db3 $x\\ne z\\land y\\ne z$\uff0c\u90a3\u4e48\u5220\u53bb $x,y$ \u540e\u8fd8\u5269 $n-2$ \u4e2a\u6570\uff0c\u5176\u4e2d $z$ \u51fa\u73b0\u7684\u6b21\u6570\u4e3a $c$\uff0c$c>\\lfloor\\dfrac{n}{2}\\rfloor>\\lfloor\\dfrac{n-2}{2}\\rfloor$\uff1b\u82e5\u5220\u53bb\u7684\u4e24\u6570\u6ee1\u8db3 $x=z\\lor y=z$\uff0c\u90a3\u4e48\u5220\u53bb $x,y$ \u540e $z$ \u51fa\u73b0\u7684\u6b21\u6570\u4e3a $c-1$\uff0c\u7531 $c>\\lfloor\\dfrac{n}{2}\\rfloor$ \u77e5 $c-1>\\lfloor\\dfrac{n-2}{2}\\rfloor$\u3002\u6211\u4eec\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u533a\u95f4 $[l,r]$ \u8868\u793a\u7684\u8282\u70b9\u4e0a\u7ef4\u62a4\u4e24\u4e2a\u503c $x,y$\uff0c$x$ \u4e3a\u5c06 $[l,r]$ \u4e2d\u6240\u6709\u6570\u538b\u5165 $S$ \u540e\u5bf9 $S$ \u8fdb\u884c\u4e0a\u6587\u6240\u8bf4\u7684\u64cd\u4f5c\u540e $S$ \u4e2d\u5269\u4f59\u7684\u6570\uff0c\u5982\u679c\u6700\u7ec8 $S=\\varnothing$ \u5219\u8be5\u503c\u4e3a $0$\uff0c$y$ \u662f\u5220\u5b8c\u540e $x$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5408\u5e76\u4e24\u4e2a\u533a\u95f4 $[l,r]$ \u65f6\u5c31\u5c06\u4e24\u4e2a\u5b50\u533a\u95f4\u7684 $y$ \u503c\u4f5c\u6bd4\u8f83\uff0c\u5e76\u4ee4\u5f53\u524d\u533a\u95f4\u7684 $x$ \u4e3a\u4e24\u4e2a\u5b50\u533a\u95f4\u7684 $y$ \u503c\u8f83\u5927\u7684 $x$\uff0c$y$ \u503c\u4e3a\u4e24\u4e2a\u5b50\u533a\u95f4\u7684 $y$ \u503c\u76f8\u51cf\u5373\u53ef\u3002\n\n\u5230\u8fd9\u91cc\u4f60\u53ef\u80fd\u4f1a\u6709\u7591\u60d1\uff0c\u90a3\u5c31\u662f\u4efb\u610f\u65f6\u523b $x$ \u4e3a $S$ \u4e2d\u7684\u7edd\u5bf9\u4f17\u6570\u5e76\u4e0d\u662f $x$ \u4e3a\u539f\u533a\u95f4\u7684\u7edd\u5bf9\u4f17\u6570\u7684**\u5145\u8981\u6761\u4ef6**\uff0c\u5b83\u4ec5\u4ec5\u53ea\u662f**\u5fc5\u8981\u6761\u4ef6**\u3002\u4e5f\u5c31\u662f\u8bf4\u6709\u53ef\u80fd\u51fa\u73b0\u6700\u7ec8\u7559\u4e0b\u7684\u6570\u4e0d\u662f\u539f\u533a\u95f4\u7684\u7edd\u5bf9\u4f17\u6570\u3002\u4f46\u662f\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u6709\u4e2a\u5947\u5947\u602a\u602a\u7684\u6761\u4ef6\uff0c\u53eb\u505a\u201c\u8f93\u51fa\u7684\u6570\u4e2d\u53ef\u4ee5\u5305\u542b\u9519\u8bef\u7684\u6570\uff0c\u4f46\u6b63\u786e\u7684\u6570\u5fc5\u987b\u5305\u542b\u5728\u8f93\u51fa\u4e2d\uff0c\u5e76\u4e14\u8f93\u51fa\u7684\u6570\u4e0d\u80fd\u8d85\u8fc7 $\\lfloor\\dfrac{100}{p}\\rfloor$\u201d\uff0c\u5728\u4e0a\u8ff0\u7b97\u6cd5\u4e2d\u6211\u4eec\u6700\u591a\u8f93\u51fa\u4e00\u4e2a\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u4fdd\u8bc1\u82e5 $[l,r]$ \u5b58\u5728\u7edd\u5bf9\u4f17\u6570\uff0c\u90a3\u4e48\u5176\u7edd\u5bf9\u4f17\u6570\u4e00\u5b9a\u88ab\u8f93\u51fa\uff0c\u6545\u8fd9\u6837\u662f\u7b26\u5408\u9898\u610f\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u539f\u9898\u3002\u6211\u4eec\u8bb0 $k=\\lfloor\\dfrac{100}{p}\\rfloor$\u3002\u7531\u4e8e $p\\geq 20$\uff0c\u4e00\u5b9a\u6709 $k\\leq 5$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6700\u591a\u8f93\u51fa $5$ \u4e2a\u6570\u3002\u6211\u4eec\u8fd8\u662f\u8003\u8651\u4e4b\u524d\u7684\u7b97\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u628a\u201c\u6bcf\u6b21\u5220\u9664 $2$ \u4e2a\u6570\u201d\u6539\u4e3a\u201c\u6bcf\u6b21\u5220\u9664 $k+1$ \u4e2a\u6570\u201d\uff0c\u7136\u540e\u7528\u4e00\u4e2a ```std::vector<pair<int,int> >``` \u7ef4\u62a4\u8be5\u533a\u95f4\u4e2d\u7684\u6570\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u540e\u5269\u4f59\u7684\u6570\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5408\u5e76\u65f6\u5019\u5c31\u66b4\u529b\u5408\u5e76\u5de6\u53f3\u5b50\u533a\u95f4\u7684 ```vector```\uff0c\u53d6\u51fa\u73b0\u6b21\u6570\u6700\u5927\u7684 $k$ \u4e2a\u6570\u5373\u53ef\u3002\u501f\u9274\u4e0a\u9762\u7684\u5206\u6790\u53ef\u77e5\u8f93\u51fa\u7684\u6570\u4ecd\u53ef\u80fd\u5305\u542b\u9519\u8bef\u7684\u6570\uff0c\u4f46\u6b63\u786e\u7684\u6570\u4e00\u5b9a\u88ab\u5305\u542b\u5728\u7b54\u6848\u4e2d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $nk^2\\log n$\uff0c\u5176\u4e2d $k_{\\max}=5$\n\n\u4e0d\u8fc7\u4f3c\u4e4e ```std::vector<pair<int,int> >``` \u5e38\u6570\u6709\u4ebf\u70b9\u70b9\u5927\uff1f\u6216\u8bb8\u662f wtcl \u7f62\uff0c\u7528 ```std::vector<pair<int,int> >``` \u5b9e\u73b0\u7684\u4ee3\u7801 TLE 50 \u4e86\uff0c\u6545\u8fd9\u91cc\u662f\u7528\u7ed3\u6784\u4f53\u5b9e\u73b0\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef unsigned int u32;\ntypedef unsigned long long u64;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nconst int MAXN=1.5e5;\nconst int INF=0x3f3f3f3f;\nint n,qu,p,a[MAXN+5];\nstruct seq{\n\tint cnt,x[8],y[8];\n\tseq(){cnt=0;fill0(x);fill0(y);}\n};\nstruct node{int l,r,lz;seq v;} s[MAXN*4+5];\nseq merge(seq a,seq b){\n\tfor(int i=1;i<=b.cnt;i++){\n\t\tbool ok=0;\n\t\tfor(int j=1;j<=a.cnt;j++){\n\t\t\tif(a.x[j]==b.x[i]){\n\t\t\t\ta.y[j]+=b.y[i];\n\t\t\t\tok=1;break;\n\t\t\t}\n\t\t} if(ok) continue;\n\t\ta.x[++a.cnt]=b.x[i];a.y[a.cnt]=b.y[i];int mn=INF;\n\t\tif(a.cnt<=p) continue;\n\t\tfor(int j=1;j<=a.cnt;j++) chkmin(mn,a.y[j]);\n\t\tseq c;\n\t\tfor(int j=1;j<=a.cnt;j++) if(a.y[j]-mn)\n\t\t\tc.x[++c.cnt]=a.x[j],c.y[c.cnt]=a.y[j]-mn;\n\t\ta=c;\n\t} return a;\n}\nvoid pushup(int k){s[k].v=merge(s[k<<1].v,s[k<<1|1].v);}\nvoid build(int k=1,int l=1,int r=n){\n\ts[k].l=l;s[k].r=r;if(l==r){s[k].v.cnt=1;s[k].v.x[1]=a[l];s[k].v.y[1]=1;return;}\n\tint mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);pushup(k);\n}\nvoid pushdown(int k){\n\tif(s[k].lz){\n\t\ts[k<<1].v.cnt=1;s[k<<1].v.x[1]=s[k].lz;\n\t\ts[k<<1].v.y[1]=s[k<<1].r-s[k<<1].l+1;\n\t\ts[k<<1].lz=s[k].lz;\n\t\ts[k<<1|1].v.cnt=1;s[k<<1|1].v.x[1]=s[k].lz;\n\t\ts[k<<1|1].v.y[1]=s[k<<1|1].r-s[k<<1|1].l+1;\n\t\ts[k<<1|1].lz=s[k].lz;\n\t\ts[k].lz=0;\n\t}\n}\nvoid modify(int k,int l,int r,int x){\n\tif(l<=s[k].l&&s[k].r<=r){\n\t\ts[k].v.cnt=1;s[k].v.x[1]=x;\n\t\ts[k].v.y[1]=s[k].r-s[k].l+1;\n\t\ts[k].lz=x;return;\n\t} pushdown(k);int mid=s[k].l+s[k].r>>1;\n\tif(r<=mid) modify(k<<1,l,r,x);\n\telse if(l>mid) modify(k<<1|1,l,r,x);\n\telse modify(k<<1,l,mid,x),modify(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\nseq query(int k,int l,int r){\n\tif(l<=s[k].l&&s[k].r<=r) return s[k].v;\n\tint mid=s[k].l+s[k].r>>1;pushdown(k);\n\tif(r<=mid) return query(k<<1,l,r);\n\telse if(l>mid) return query(k<<1|1,l,r);\n\telse return merge(query(k<<1,l,mid),query(k<<1|1,mid+1,r));\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&qu,&p);p=100/p;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);build();\n\twhile(qu--){\n\t\tint opt;scanf(\"%d\",&opt);\n\t\tif(opt==1){int l,r,x;scanf(\"%d%d%d\",&l,&r,&x);modify(1,l,r,x);}\n\t\telse{\n\t\t\tint l,r;scanf(\"%d%d\",&l,&r);seq ret=query(1,l,r);\n\t\t\tprintf(\"%d \",ret.cnt);for(int i=1;i<=ret.cnt;i++) printf(\"%d \",ret.x[i]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1615020772,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF643G\u3010Choosing Ads\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u4e8e\u6211\u7684 [cnblog](https://www.cnblogs.com/ZigZagKmp/p/14373762.html)\n\n## \u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u548c\u6574\u6570 $P$ \uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u683c\u5f0f\u5982\u4e0b\uff1a\n- `1 l r v` $[l,r]$ \u533a\u95f4\u8d4b\u503c\u4e3a $v$ \uff1b\n- `2 l r` \u67e5\u8be2 $[l,r]$ \u4e2d\u51fa\u73b0\u9891\u7387\u4e0d\u5c11\u4e8e $P\\%$ \u7684\u6570\u3002\n\u8be2\u95ee2\u53ef\u4ee5\u8f93\u51fa\u9519\u8bef\u6570\u5b57\uff0c\u4e5f\u53ef\u4ee5\u91cd\u590d\u8f93\u51fa\uff0c\u4f46\u662f\u603b\u6570\u4e0d\u80fd\u8d85\u8fc7 $\\lfloor \\frac{100}{P} \\rfloor$\u3002\n\n$n,m\\le 1.5\\times 10^5,20\\le P\\le 100$\u3002\n## \u7b97\u6cd5\u5206\u6790\n\u6211\u7684\u505a\u6cd5\u4e0e\u9898\u89e3\u4e2d\u7684\u4e3b\u6d41\u505a\u6cd5\u4f3c\u4e4e\u4e0d\u540c\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u8bc1\u660e\uff0c\u5982\u679c\u80fd\u6c42\u51fa\u4e24\u4e2a**\u957f\u5ea6\u76f8\u7b49**\u7684\u533a\u95f4\u5185\u51fa\u73b0\u9891\u7387\u4e0d\u5c0f\u4e8e $P\\%$ \u7684\u6570\u96c6\u5408$A,B$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u96c6\u5408\u7684\u5e76\u4e2d\u6ee1\u8db3\u8981\u6c42\u7684\u6570 $x\\in A\\cup B$\u3002\n\n\u8fd9\u4e2a\u4e0d\u96be\u8bc1\u660e\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5728\u4e24\u4e2a\u533a\u95f4\u5185\u51fa\u73b0\u7684\u9891\u7387\u90fd\u5c0f\u4e8e $P\\%$ \uff0c\u8bb0\u5206\u522b\u51fa\u73b0 $x,y$ \u6b21\uff0c\u5219 $x<len\\times P\\%,y<len\\times P\\%$ \u90a3\u4e48\u4e24\u8fb9\u51fa\u73b0\u7684\u6b21\u6570\u548c\u4e3a $x+y$ \uff0c\u4e00\u5b9a\u5c0f\u4e8e $2\\times len \\times P\\%$ \uff0c\u56e0\u6b64\u8fd9\u4e2a\u6570\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u4e0d\u4e00\u5b9a\u8981\u8f93\u51fa\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684 $K=\\lceil\\frac{100}{P}\\rceil$ \u4e2a\u5143\u7d20\u53ca\u5176\u51fa\u73b0\u6b21\u6570\uff0c\u5408\u5e76\u76f4\u63a5\u628a\u76f8\u540c\u7684\u6570\u6b21\u6570\u7d2f\u52a0\uff0c\u5f97\u5230\u81f3\u591a $2K$ \u4e2a\u5143\u7d20\uff0c\u53d6\u51fa\u73b0\u6b21\u6570\u524d $K$ \u5927\u7684\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u9996\u5148\u628a $n$ \u53d8\u6210\u6bd4 $n$ \u5927\u7684\u7b2c\u4e00\u4e2a $2^p$ \u7684\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5efa\u7acb\u7684\u7ebf\u6bb5\u6811\u5c31\u662f\u4e00\u4e2a\u6ee1\u4e8c\u53c9\u6811\uff0c\u5e76\u4e14\u6bcf\u4e00\u6b21\u5408\u5e76\u90fd\u662f\u4e24\u4e2a**\u76f8\u7b49\u957f\u5ea6**\u7684\u533a\u95f4\u7684\u5408\u5e76\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O\\left((n+m)K^2\\log n\\right)$ \uff0cK\u542b\u4e49\u89c1\u4e0a\u6587\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 300005\n#define maxm 2000005\n#define inf 0x3f3f3f3f\n#define LL long long\n#define mod 1000000007\n#define local\nvoid file(string s){freopen((s+\".in\").c_str(),\"r\",stdin);freopen((s+\".out\").c_str(),\"w\",stdout);}\ntemplate <typename Tp> void read(Tp &x){\n\tint fh=1;char c=getchar();x=0;\n\twhile(c>'9'||c<'0'){if(c=='-'){fh=-1;}c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c&15);c=getchar();}x*=fh;\n}\nint n,m,P;\nint a[maxn];\nstruct nd{\n\tint id,vl;\n\tbool operator <(nd y)const{\n\t\treturn vl>y.vl;\n\t}\n};\nnd tmp[20];int cnt;\n#define lson ((x<<1))\n#define rson ((x<<1)|1)\n#define mid ((l+r)>>1)\nstruct node{\n\tnd nm[7];\n\tnode operator +(node y)const{\n\t\tnode z;\n\t\tcnt=0;\n\t\tfor(int i=1;i<=P;++i)tmp[++cnt]=nm[i];\n\t\tfor(int i=1;i<=P;++i){\n\t\t\tint flg=0;\n\t\t\tfor(int j=1;j<=P;++j){\n\t\t\t\tif(y.nm[i].id==tmp[j].id){\n\t\t\t\t\tflg=j;break;\n\t\t\t\t}\n\t\t\t}//\u5408\u5e76\n\t\t\tif(flg)tmp[flg].vl+=y.nm[i].vl;//\u5904\u7406\u76f8\u540c\u5143\u7d20\n\t\t\telse tmp[++cnt]=y.nm[i];//\u5904\u7406\u4e0d\u540c\u5143\u7d20\n\t\t}\n\t\tsort(tmp+1,tmp+cnt+1);\n\t\tfor(int i=1;i<=P;++i)z.nm[i]=tmp[i];//\u53d6\u524dK\u5927\n\t\treturn z;\n\t}\n}st[maxn<<2];\nint laz[maxn<<2];\nvoid pushup(int x){st[x]=st[lson]+st[rson];}\nvoid build(int x,int l,int r){\n\tif(l==r){\n\t\tst[x].nm[1]=(nd){a[l],1};\n\t\treturn;\n\t}\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\tpushup(x);\n}\nvoid pushc(int x,int l,int r,int v){memset(st[x].nm,0,sizeof(st[x].nm));st[x].nm[1]=(nd){v,r-l+1};laz[x]=v;}\n// \u4e0b\u63a8\u61d2\u6807\u8bb0\u76f4\u63a5\u4fdd\u7559\u4e00\u4e2a\u5c31\u884c\u4e86\nvoid pushdown(int x,int l,int r){\n\tif(laz[x]){\n\t\tpushc(lson,l,mid,laz[x]);\n\t\tpushc(rson,mid+1,r,laz[x]);\n\t\tlaz[x]=0;\n\t}\n}\nvoid upd(int x,int l,int r,int L,int R,int v){\n\tif(l>R||r<L)return ;\n\tif(l>=L&&r<=R){\n\t\tpushc(x,l,r,v);\n\t\treturn;\n\t}\n\tpushdown(x,l,r);\n\tupd(lson,l,mid,L,R,v);\n\tupd(rson,mid+1,r,L,R,v);\n\tpushup(x);\n}\nnode query(int x,int l,int r,int L,int R){\n\tif(l>=L&&r<=R)return st[x];\n\tpushdown(x,l,r);\n\tif(L>mid)return query(rson,mid+1,r,L,R);\n\tif(R<=mid)return query(lson,l,mid,L,R);\n\treturn query(lson,l,mid,L,R)+query(rson,mid+1,r,L,R);\n}\nsigned main(){\n\tread(n);read(m);read(P);\n\tP=100/P;++P;//\u8fd9\u91cc\u76f4\u63a5+1\uff0c\u4e3b\u8981\u662f\u540e\u9762\u8f93\u51fa\u4e2a\u6570\u5904\u7406\u65b9\u4fbf\n\tfor(int i=1;i<=n;++i)read(a[i]);\n\t\n\tint NN;for(NN=1;NN<n;NN<<=1);n=NN;//\u6269\u62102^p\n\t\n\tbuild(1,1,n);\n\tfor(int i=1,op,l,r,v;i<=m;++i){\n\t\tread(op);read(l);read(r);\n\t\tif(op==1){\n\t\t\tread(v);upd(1,1,n,l,r,v);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%d\",P-1);\n\t\t\tnode tt=query(1,1,n,l,r);\n\t\t\tfor(int j=1;j<P;++j){\n\t\t\t\tprintf(\" %d\",tt.nm[j].id?tt.nm[j].id:1);\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1612429689,
        "uid": 35871,
        "name": "ZigZagKmp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF643G \u3010Choosing Ads\u3011"
    },
    {
        "content": "\u6765\u8865\u4e00\u4e0b\u533a\u95f4\u56fa\u5b9a\u9891\u7387\u4f17\u6570\u7684\u505a\u6cd5\uff0c\u6628\u5929\u624d\u77e5\u9053\uff08                 \n\n\u8003\u8651\u6469\u5c14\u6295\u7968\u6cd5\uff0c\u6211\u4eec\u5982\u679c\u6c42\u533a\u95f4\u51fa\u73b0\u8fc7\u4e00\u534a\u4ee5\u4e0a\u7684\u4f17\u6570\u53ef\u4ee5\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u6b8b\u4f59\u503c\uff0c\u5408\u5e76\u65f6\u5982\u679c\u4e24\u8fb9\u6570\u76f8\u540c\u5c31\u76f8\u52a0\u6b8b\u4f59\u503c\uff0c\u5426\u5219\u5c31\u5c06\u4e24\u8fb9\u7684\u6570\u76f8\u4e92\u62b5\u6d88\u8fd4\u56de\u6b8b\u4f59\u503c\u66f4\u5927\u7684\u90a3\u4e00\u4e2a\u3002           \n\n\u8003\u8651\u5ef6\u5c55\u6211\u4eec\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u6c42\u51fa\u73b0\u6b21\u6570\u5728 $\\lfloor \\frac{n}{k + 1} \\rfloor$ \u4ee5\u4e0a\u7684\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u6d88\u6389 $k + 1$ \u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u51fa\u73b0\u6b21\u6570\u5728 $\\lfloor \\frac{n}{k + 1}\\rfloor$ \u4ee5\u4e0a\u7684\u4f17\u6570\u6700\u540e\u4ecd\u80fd\u5b58\u6d3b\u4e0b\u6765\u3002    \n\n\u5b9e\u73b0\u65f6\u7ebf\u6bb5\u6811\u4e0a\u53ea\u7ef4\u62a4\u6b8b\u4f59\u503c\u6700\u5927\u7684 $k$ \u4e2a\u6570\uff0c$O(k ^ 2)$ \u5b9e\u73b0\u5408\u5e76 $2k$ \u4e2a\u540e\u6309\u7167\u6b8b\u4f59\u503c\u91cd\u65b0\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff08\u8c8c\u4f3c sort \u5728\u6570\u7ec4\u5f88\u5c0f\u65f6\u662f\u4f1a\u624b\u52a8\u8c03\u6574\uff0c\u6240\u4ee5\u8fd9\u91cc\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5e38\u6570\uff09\uff0c\u6700\u540e\u5012\u7740\u5185\u8017\u540e\u518d\u8fd4\u56de\u6b8b\u4f59\u503c\u6700\u5927\u7684 $k$ \u4e2a\u6570\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(k^2n \\log n)$\u3002\n\n```cpp\n/*\n\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u53ea\u5220\u4e0d\u540c\u7684\u6570\n\u4e0d\u59a8\u5148\u5168\u90e8\u5408\u8d77\u6765\u540e\u5012\u7740\u5185\u8017\u5373\u53ef \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 1.5e5 + 5;\nint n,q,P,a[Len],tag[Len << 2];\nstruct Node\n{\n\tint col,w;\n\tNode(){col = w = 0;}\n\tNode(int COL,int W){col = COL , w = W;}\n\tinline void clear(){col = w = 0;}\n};\nbool cmd(Node x,Node y){return x.w > y.w;}\nstruct node\n{\n\tNode ch[6];\n\tnode(){for(int i = 1 ; i < P ; i ++) ch[i].clear();}\n\tnode(Node CH1){ch[1] = CH1;for(int i = 2 ; i < P ; i ++) ch[i].clear();}\n\tinline void clear(){for(int i = 1 ; i < P ; i ++) ch[i].clear();}\n}Seg[Len << 2];\nvector<Node> ud;\n#define ls(x) x << 1\n#define rs(x) x << 1 | 1\nnode merge(node x,node y)\n{\n\tnode pst;ud.clear();\n\tfor(int i = 1 ; i < P ; i ++)\n\t\tfor(int j = 1 ; j < P ; j ++) \n\t\t{\n\t\t\tif(y.ch[j].col == x.ch[i].col) \n\t\t\t{\n\t\t\t\tx.ch[i].w += y.ch[j].w , y.ch[j].col = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\tfor(int i = 1 ; i < P ; i ++) if(x.ch[i].col > 0) ud.push_back(x.ch[i]);\n\tfor(int i = 1 ; i < P ; i ++) if(y.ch[i].col > 0) ud.push_back(y.ch[i]);\n\t/*printf(\"%d\\n\",ud.size());\n\tfor(int i = 0 ; i < ud.size() ; i ++) printf(\"(%d,%d) \",ud[i].col,ud[i].w);\n\tputs(\"\");*/ \n\tsort(ud.begin() , ud.end() , cmd);\n\tif(ud.size() <= P - 1)//\u6570\u91cf\u4e0d\u8d85\u8fc7 P - 1\uff0c\u76f4\u63a5\u8fd4\u56de \n\t{\n\t\tfor(int i = 0 ; i < ud.size() ; i ++) pst.ch[i + 1] = ud[i];\n\t\treturn pst;\n\t}\n\tfor(int i = ud.size() - 1 ; i >= P - 1 ; i --)//\u9009\u62e9 k + 1 \u4e2a\u6570\uff0c\u5012\u5e8f\u5185\u8017 \n\t{\n\t\tint del = ud[i].w;\n\t\tfor(int j = i ; j >= i - P + 1 ; j --) ud[j].w -= del;\n\t}\n\tfor(int i = 0 ; i < P - 1 ; i ++) pst.ch[i + 1] = ud[i];\n\treturn pst;\n}\nvoid push_up(int p){Seg[p] = merge(Seg[ls(p)] , Seg[rs(p)]);}\nvoid push_down(int p,int l,int r)\n{\n\tif(tag[p])\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\ttag[ls(p)] = tag[rs(p)] = tag[p];\n\t\tSeg[ls(p)] = node(Node(tag[p] , mid - l + 1)) , Seg[rs(p)] = node(Node(tag[p] , r - mid));\n\t\ttag[p] = 0;\n\t}\n}\nvoid build(int p,int l,int r)\n{\n\ttag[p] = 0;\n\tif(l == r)\n\t{\n\t\tSeg[p] = node(Node(a[l] , 1));\n\t\t/*printf(\"%d:\\n\",l);\n\t\tfor(int i = 1 ; i < P ; i ++) printf(\"(%d,%d) \",Seg[p].ch[i].col,Seg[p].ch[i].w);\n\t\tputs(\"\");*/ \n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid);\n\tbuild(rs(p) , mid + 1 , r);\n\tpush_up(p);\n}\nvoid update(int p,int l,int r,int nl,int nr,int w)\n{\n\tif(nl <= l && nr >= r) \n\t{\n\t\ttag[p] = w;\n\t\tSeg[p] = node(Node(w , r - l + 1));\n\t\treturn;\n\t}\n\tpush_down(p , l , r);\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) update(ls(p) , l , mid , nl , nr , w);\n\tif(nr > mid) update(rs(p) , mid + 1 , r , nl , nr , w);\n\tpush_up(p);\n}\nnode ans;int udd;\nvoid query(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r)\n\t{\n\t\t//printf(\"!!!%d %d\\n\",l,r);\n\t\t/*printf(\"%d:\\n\",l);\n\t\tfor(int i = 1 ; i < P ; i ++) printf(\"(%d,%d) \",Seg[p].ch[i].col,Seg[p].ch[i].w);\n\t\tputs(\"\");*/ \n\t\tif(!udd) ans = Seg[p] , udd = 1;\n\t\telse ans = merge(ans , Seg[p]);\n\t\treturn;\n\t}\n\tpush_down(p , l , r);\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) query(ls(p) , l , mid , nl , nr);\n\tif(nr > mid) query(rs(p) , mid + 1 , r , nl , nr);\n\t//push_up(p);\n}\nvector<int> Print;\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&q,&P);\n\tP = 100 / P;P ++;\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&a[i]);\n\tbuild(1 , 1 , n);\n\tfor(int i = 1 ; i <= q ; i ++)\n\t{\n\t\tint opt,l,r,id;scanf(\"%d %d %d\",&opt,&l,&r);\n\t\tif(opt == 1)\n\t\t{\n\t\t\tscanf(\"%d\",&id);\n\t\t\tupdate(1 , 1 , n , l , r , id);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans.clear();Print.clear();\n\t\t\tudd = 0;\n\t\t\tquery(1 , 1 , n , l , r);\n\t\t\tfor(int j = 1 ; j < P ; j ++) if(ans.ch[j].col) Print.push_back(ans.ch[j].col);\n\t\t\tprintf(\"%d \",Print.size());\n\t\t\tfor(int j = 0 ; j < Print.size() ; j ++) printf(\"%d \",Print[j]); \n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1646445463,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF643G Choosing Ads"
    }
]