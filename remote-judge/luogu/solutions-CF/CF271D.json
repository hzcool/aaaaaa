[
    {
        "content": "[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF271D)  \n\n\u597d\u50cf\u9898\u89e3\u91cc\u8fd8\u6ca1\u6709 $\\text{Trie}$ \u6811\u7684\u505a\u6cd5\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u3002  \n\n\u4ee4 $tot$ \u4e3a\u6ee1\u8db3\u7b54\u6848\u7684\u5b50\u4e32\u4e2a\u6570\uff0c  \n\u6211\u4eec\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5b50\u4e32\u7684\u5f00\u59cb\u8282\u70b9 $i$ \uff0c  \n\u4ee4 $cnt$ \u4e3a\u7279\u6b8a\u8282\u70b9\u4e2a\u6570\uff0c $now$ \u4e3a\u5f53\u524d\u8282\u70b9\uff0c  \n\u679a\u4e3e\u7ed3\u675f\u8282\u70b9 $j$ \uff0c\u5bf9\u4e8e\u6bcf\u4e2a $j$ \uff0c\u9996\u5148\u5224\u65ad\u8be5\u5b57\u7b26\u662f\u5426\u4e3a\u7279\u6b8a\u5b57\u7b26\uff0c\u5982\u679c\u662f\uff0c```cnt++``` \uff0c\u5f53 $cnt>k$ \u65f6\uff0c\u679a\u4e3e\u4e0b\u4e00\u4e2a $i$ \u3002  \n\u4e4b\u540e\u5c1d\u8bd5\u7ee7\u7eed\u5efa\u6811\uff0c\u5982\u679c\u53d1\u73b0\u8be5\u5b50\u4e32\u5df2\u88ab\u6253\u4e0a\u6807\u8bb0\uff08\u5373\u73b0\u5728\u6240\u5728\u8282\u70b9\u5df2\u88ab\u8d4b\u503c\uff09\uff0c\u5219\u8df3\u8fc7\uff0c\u5426\u5219\u7ed9\u8be5\u8282\u70b9\u6253\u4e0a\u6807\u8bb0\uff08\u6700\u597d\u4e3a\u8be5\u5b50\u4e32\u7684\u53d1\u73b0\u987a\u5e8f\uff0c\u4e5f\u5373 ```++tot```\uff09\u3002  \n\u6700\u540e\u76f4\u63a5\u8f93\u51fa $tot$ \u5373\u53ef\u3002  \n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint n;\nint k;\nint tot;\nchar sp[29];\nchar ch[1505];\nint TRIE[2250005][29];\n//inline void output(int l,int r){\n//\tprintf(\"[%d,%d]:\",l,r);\n//\tfor (int i=l;i<=r;i++){\n//\t\tprintf(\"%c\",ch[i]);\n//\t}\n//\tputs(\"\");\n//}\nint main(){\n\tscanf(\"%s\",ch+1);\n\tscanf(\"%s\",sp+1);\n\tscanf(\"%d\",&k);\n\tn=strlen(ch+1);\n\tfor (int i=1;i<=n;i++){\n\t\tint now=0,cnt=0; //\u542b\u4e49\u5982\u4e0a\u6587\u6240\u8ff0\n\t\tfor (int j=i;j<=n;j++){\n\t\t\tif (sp[ch[j]-'a'+1]=='0'){ //\u5224\u65ad\u7279\u6b8a\u5b57\u7b26\n\t\t\t\t++cnt;\n\t\t\t}\n\t\t\tif (cnt>k){ //\u5982\u679c\u7279\u6b8a\u5b57\u7b26\u8d85\u8fc7k\uff0c\u5219\u679a\u4e3e\u4e0b\u4e00\u4e2ai\n\t\t\t\tbreak;\n\t\t\t}\n//\t\t\tprintf(\"[%d,%d]:%d\\n\",i,j,TRIE[now][ch[j]-'a'+1]);\n\t\t\tif (!TRIE[now][ch[j]-'a'+1]){ //\u8be5\u8282\u70b9\u672a\u88ab\u6253\u4e0a\u6807\u8bb0\uff0c\u6240\u4ee5\u6253\u4e0a\u65b0\u6807\u8bb0\n\t\t\t\tTRIE[now][ch[j]-'a'+1]=(++tot);\n//\t\t\t\toutput(i,j);\n\t\t\t}\n\t\t\tnow=TRIE[now][ch[j]-'a'+1]; //\u8fdb\u5165\u5b50\u8282\u70b9\n\t\t}\n\t}\n\tprintf(\"%d\",tot); //\u8f93\u51fa\n\treturn 0;\n}\n\n```  \n~~\u8fd9\u91cc\u6709AC\u4ee3\u7801\u54e6\uff0c\u4f46\u6211\u76f8\u4fe1\u4f60\u4e0d\u4f1a\u6284\u9898\u89e3\u7684\uff01~~",
        "postTime": 1602167790,
        "uid": 113521,
        "name": "muyang_233",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF271D \u3010Good Substrings\u3011"
    },
    {
        "content": "### \u96be\u5ea6\n\n\u8bdd\u8bf4\u8fd9\u9053\u9898\u662f\u7701\u9009\u96be\u5ea6\u6b38\uff01\n\n### \u601d\u8def\n\n\u9996\u5148\uff0c\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u540e\u7f00\u6811\uff08\u663e\u5f0f\u540e\u7f00\u6811\uff09\uff0c\u518d\u6309\u7167\u7d22\u5f15\u589e\u52a0\u7684\u987a\u5e8f\u904d\u5386\u6240\u6709\u5b50\u5b57\u7b26\u4e32\u3002\u6ce8\u610f\uff0c\u4ece\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\u53ea\u662f\u5c06\u5355\u4e2a\u5b57\u7b26\u6dfb\u52a0\u5230\u7ed3\u675f\u3002\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7ef4\u62a4\u574f\u5b57\u7b26\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u6811\u4e2d\u7684\u201c\u5f53\u524d\u201d\u8282\u70b9\u3002\u5982\u679c\u574f\u5b57\u7b26\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 k\uff0c\u5219\u5b50\u5b57\u7b26\u4e32\u662f\u597d\u7684\u3002\u5982\u679c\u6211\u4eec\u4ee5\u524d\u4ece\u672a\u8fd9\u6837\u505a\u8fc7\uff0c\u6211\u4eec\u9700\u8981\u6807\u8bb0\u6811\u7684\u76f8\u5e94\u8282\u70b9\u3002\u7b54\u6848\u5c06\u662f\u6811\u4e2d\u6807\u8bb0\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u4eec\u4f7f\u7528\u6eda\u52a8\u54c8\u5e0c\u7b97\u6cd5\u6765\u8ba1\u7b97\u5185\u5bb9\u4e0d\u540c\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u800c\u4e0d\u662f\u6811\u3002\u53ea\u9700\u5bf9\u6240\u6709\u597d\u7684\u5b50\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u627e\u5230\u552f\u4e00\u54c8\u5e0c\u7684\u6570\u91cf\uff08\u6392\u5e8f\u540e\u76f8\u540c\u7684\u54c8\u5e0c\u5c06\u4f4d\u4e8e\u76f8\u90bb\u4f4d\u7f6e\uff09\u3002\u4f46\u662f\u8fd9\u4e9b\u6563\u5217\u901a\u5e38\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u6240\u4ee5\u4f7f\u7528\u7cbe\u786e\u7684\u7b97\u6cd5\u603b\u662f\u66f4\u597d\u7684\u3002\n\n\u6211\u52a0\u4e0a\u4e86\u4e00\u4e9b\u677f\u5b50\uff0c\u6240\u4ee5\u4f1a\u663e\u5f97\u4ee3\u7801\u7279\u522b\u957f\u3002\u4e0d\u8fc7\u53bb\u6389\u8fd9\u4e9b\u677f\u5b50\u5176\u5b9e\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002\n\n### \u4ee3\u7801\n\n```python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ns = input()\nl = [int(k) for k in input()]\nbad = set()\nfor i in range(26):\n    if l[i] == 0:\n        bad.add(97+i)\nk = int(input())\nhashes = set()\nbase = 999983\ns = [ord(x) for x in s]\nvalue = 0\nbadcount = 0\nmod = 10**16 + 11\nbasemod = [1]*1501\nfor i in range(1, 1501):\n    basemod[i] = basemod[i-1] * base % mod\nfor length in range(1, len(s)+1):\n    value = value * base % mod\n    value = (value + s[length-1]) % mod\n    if s[length-1] in bad:\n        badcount += 1\n    if badcount <= k:\n        hashes.add(value)\n    val, brbad = value, badcount\n    for i in range(length, len(s)):\n        if s[i] in bad:\n            brbad += 1\n        if s[i-length] in bad:\n            brbad -= 1\n        val = ((val - s[i-length]*(basemod[length-1]))*base + s[i]) % mod\n        if brbad <= k:\n            hashes.add(val)\nprint(len(hashes))\n```",
        "postTime": 1643604517,
        "uid": 542047,
        "name": "EC75",
        "ccfLevel": 0,
        "title": "CF271D\u9898\u89e3"
    },
    {
        "content": "\u9898\u89e3\u533a\u91cc\u597d\u50cf\u8fd8\u6ca1\u6709 $O(n\\log{n})$ \u7684 $SA$ \u505a\u6cd5\uff0c\u6211\u6765\u4ea4\u4e00\u53d1\n\n\u9996\u5148\u8003\u8651\u9650\u5b9agood substring \u7684\u5f00\u5934\uff0c\u53d1\u73b0\u5982\u679c\u5f00\u5934\u786e\u5b9a\uff0c\u53ef\u884c\u7684\u7ed3\u5c3e\u662f\u8fde\u7eed\u7684\uff08\u663e\u7136\uff09\n\n\u6240\u4ee5\u53ef\u4ee5\u8bbe $f[i]$ \u8868\u793a\u4ee5 $i$ \u5f00\u5934\u7684\u6700\u5927 good substring \u957f\u5ea6\n\n\u6ce8\u610f\u5230 $f[i] \\ge f[i-1] - 1$ (\u5373 good substring \u7684\u4efb\u4f55\u4e00\u4e2a\u5b50\u4e32\u90fd\u662f good substring)\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u6c42\u51fa $f$ \n\n\u63a5\u4e0b\u6765\u662f\u600e\u6837\u53bb\u91cd\u7684\u95ee\u9898\n\u6ce8\u610f\u5230\u5728 [P2408 \u4e0d\u540c\u5b50\u4e32\u4e2a\u6570](https://www.luogu.com.cn/problem/P2408) \u4e2d\uff0c\u6211\u4eec\u53bb\u91cd\u65f6\u51cf\u53bb $\\sum\\limits_{i=2}^n height[i]$\n\n\u90a3\u6211\u4eec\u8fd9\u91cc\u5c31\u51cf\u53bb $\\sum\\limits_{i=2}^n \\min \\{ height[i],f[sa[i-1]],f[sa[i]] \\}$ \u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint fir[N],sec[N],ton[N];\nint sa[N];\ninline bool cmp(int *r,int i,int j,int l) { return r[i] == r[j] && r[i+l] == r[j+l];}\n#define For(i,a,b) for(int i = (a),end_##i = (b);i <= end_##i;i++)\n#define Rof(i,a,b) for(int i = (a),end_##i = (b);i >= end_##i;i--)\ninline void get_sa(char *s,int *sa,int n,int m)\n{\n\tint *x = fir,*y = sec,*t;\n\tFor(i,1,m) ton[i] = 0;\n\tFor(i,1,n) ton[x[i] = s[i]]++;\n\tFor(i,2,m) ton[i] += ton[i-1];\n\tRof(i,n,1) sa[ton[x[i]]--] = i;\n\tfor(int j = 1,p = 1;j <= n;j *= 2,m = p)\n\t{\n\t\tp = 0;\n\t\tFor(i,n-j+1,n) y[++p] = i;\n\t\tFor(i,1,n) if(sa[i] > j) y[++p] = sa[i] - j;\n\t\tFor(i,1,m) ton[i] = 0;\n\t\tFor(i,1,n) ton[x[i]]++;\n\t\tFor(i,2,m) ton[i] += ton[i-1];\n\t\tRof(i,n,1) sa[ton[x[y[i]]]--] = y[i];\n\t\tt=x;x=y;y=t;p=1;x[sa[1]] = 1;\n\t\tFor(i,2,n)\n\t\tx[sa[i]] = cmp(y,sa[i-1],sa[i],j) ? p : (++p);\n\t}\n}\nint rk[N],height[N];\ninline void get_hi(char *s,int n)\n{\n\tFor(i,1,n) rk[sa[i]] = i;\n\tint j = 0;\n\tFor(i,1,n)\n\t{\n\t\tif(j) j--;\n\t\twhile(s[i+j] == s[sa[rk[i]-1] + j]) ++j;\n\t\theight[rk[i]] = j;\n\t}\n}\nint ST[N][20],lg[N];\ninline int lcp(int l,int r)\n{\n\tl = rk[l];r = rk[r];\n\tif(l > r)swap(l,r);l++;\n\tint k = lg[r-l+1];\n\treturn min(ST[l][k],ST[r-(1<<k)+1][k]);\n}\nchar s[N];\nint n,k;\nint f[N];\nbool good[26];\nint sum[N];\ninline int Qry(int l,int r) { return sum[r] - sum[l-1];}\nint main()\n{\n\tscanf(\"%s\",s+1);\n\tstring tmp;\n\tcin>>tmp;\n\tfor(int i = 0;i < 26;i++) good[i] = (tmp[i] - '0');\n\tscanf(\"%d\",&k);\n\tn = std::strlen(s+1);\n\tget_sa(s,sa,n,256);\n\tget_hi(s,n);\n\n\tlg[0] = -1;\n\tfor(int i = 1;i <= n;i++)\n\t\tlg[i] = lg[i >> 1] + 1,\n\t\tST[i][0] = height[i];\n\tfor(int j = 1;j <= 19;j++)\n\t\tfor(int i = 1;i + (1 << j) - 1 <= n;i++)\n\t\t\tST[i][j] = min(ST[i][j-1],ST[i+(1<<j-1)][j-1]);\n\tfor(int i = 1;i <= n;i++) sum[i] = sum[i-1] + (!good[s[i] - 'a']);\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tf[i] = max(f[i-1] - 1,0);\n\t\twhile(i + f[i] <= n && Qry(i ,i+ f[i]) <= k) ++f[i];\n//\t\tprintf(\"%d,%d\\n\",i,f[i]);\n\t}\n\tint ans = 0;\n\tfor(int i = 1;i <= n;i++) ans += f[i];\n\tfor(int i = 1;i < n;i++) ans -= min(lcp(sa[i],sa[i+1]),min(f[sa[i]],f[sa[i+1]]));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1642992281,
        "uid": 226435,
        "name": "\u5929\u547d\u4e4b\u8def",
        "ccfLevel": 0,
        "title": "CF271D \u9898\u89e3"
    },
    {
        "content": "\u5b9a\u4e49\u54c8\u5e0c\u51fd\u6570 $H(c)=\\sum_{i = 1} ^ m c_i*b^{m-i}$\n\n$H(C,K+1)=H(C,K)*b+C_{K+1}$\uff08K\u4e2a\u574f\u5b57\u6bcd\uff09\n\n### \u7528long long\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long a[3000010], k, x, y, cnt;\nchar s[3000010], s1[300010];\nint main(){\n    scanf(\"%s%s%lld\", s, s1, &k);\n    for (long long i = 0;s[i]; i ++) {\n\t\tx = k, y = 0;\n\t\tfor (long long j = i; s[j] && (s1[s[j] - 'a'] > '0' || x --); j ++)\n\t\t\ta[cnt ++] = y = (y * 131) ^ s[j];\n\t}\n\tsort(a, a + cnt);\n\tcnt = unique(a, a + cnt) - a;\n\tprintf(\"%lld\\n\", cnt);\n\treturn 0;\n}\n```",
        "postTime": 1554813788,
        "uid": 13746,
        "name": "Trimsteanima",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF271D \u3010Good Substrings\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u4e32\u662f\u4e0d\u662f\u5408\u6cd5\uff0c\u5229\u7528\u524d\u7f00\u548c\u5f88\u5bb9\u6613\u5224\u51fa\u3002\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u627e\u51fa\u6bcf\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e86\u3002\n\n\u8003\u8651\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u540e\u7f00\u6392\u5e8f\uff0c\u6392\u540d\u76f8\u90bb\u7684\u540e\u7f00\u6709\u76f8\u540c\u90e8\u5206\uff0c\u5c31\u662f$LCP$\u3002\u4e8e\u662f\u6211\u4eec\u9884\u5904\u7406\u51fa$height$\u6570\u7ec4\uff0c\u6bcf\u6b21\u8df3\u8fc7$LCP$\u90e8\u5206\u5bf9\u5269\u4f59\u90e8\u5206\u8fdb\u884c\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6$O(n^2)$\n\n```cpp\n/*DennyQi 2019*/\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int N = 1510;\ninline int read(){\n    int x(0),w(1); char c = getchar();\n    while(c^'-' && (c<'0' || c>'9')) c = getchar();\n    if(c=='-') w = -1, c = getchar();\n    while(c>='0' && c<='9') x = (x<<3)+(x<<1)+c-'0', c = getchar(); \n    return x*w;\n}\nchar s[N],gb[30];\nint n,K,ans,sum[N],sa[N],x[N],y[N],c[N],h[N],rk[N];\ninline void Build_SA(int m){\n\tint p;\n\tfor(int i = 1; i <= m; ++i) c[i] = 0;\n\tfor(int i = 1; i <= n; ++i) ++c[x[i] = s[i]];\n\tfor(int i = 1; i <= m; ++i) c[i] += c[i-1];\n\tfor(int i = n; i >= 1; --i) sa[c[x[i]]--] = i;\n\tfor(int k = 1; k <= n; k += k){\n\t\tp = 0;\n\t\tfor(int i = n-k+1; i <= n; ++i) y[++p] = i;\n\t\tfor(int i = 1; i <= n; ++i) if(sa[i] > k) y[++p] = sa[i]-k;\n\t\tfor(int i = 1; i <= m; ++i) c[i] = 0;\n\t\tfor(int i = 1; i <= n; ++i) ++c[x[i]];\n\t\tfor(int i = 1; i <= m; ++i) c[i] += c[i-1];\n\t\tfor(int i = n; i >= 1; --i) sa[c[x[y[i]]]--] = y[i], y[i] = 0;\n\t\tswap(x,y);\n\t\tx[sa[1]] = 1, p = 1;\n\t\tfor(int i = 2; i <= n; ++i) x[sa[i]] = (y[sa[i]]==y[sa[i-1]] && y[sa[i]+k]==y[sa[i-1]+k]) ? p : ++p;\n\t\tif(p >= n) break;\n\t\tm = p;\n\t}\n\tfor(int i = 1; i <= n; ++i) rk[sa[i]] = i;\n\tint k = 0;\n\tfor(int i = 1; i <= n; ++i){\n\t\tif(k) --k;\n\t\twhile(s[i+k] == s[sa[rk[i]-1]+k]) ++k;\n\t\th[rk[i]] = k;\n\t}\n}\nint main(){\n\t// freopen(\"file.in\",\"r\",stdin);\n\tscanf(\"%s\\n\",s+1);\n\tscanf(\"%s\\n\",gb);\n\tscanf(\"%d\",&K);\n\tn = strlen(s+1);\n\tfor(int i = 1; i <= n; ++i){\n\t\tsum[i] = sum[i-1] + ((gb[s[i]-'a'] - '0') ^ 1);\n\t}\n\tBuild_SA('z'+1);\n\tfor(int i = 1; i <= n; ++i){\n\t\tfor(int j = sa[i]+h[i]; j <= n; ++j){\n\t\t\tif(sum[j]-sum[sa[i]-1] <= K){\n\t\t\t\t++ans;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1561431789,
        "uid": 115065,
        "name": "DennyQi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF271D \u3010Good Substrings\u3011"
    },
    {
        "content": "# $CF271D$ `Good Substrings`\n\n## $Description$\n+ \u95ee\u6ee1\u8db3\u9898\u76ee\u5305\u542b\u4e0d\u8d85\u8fc7 $k$ \u4e2a\u4e0d\u597d\u7684\u5b57\u6bcd\u6761\u4ef6\u7684\uff0c\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u6709\u591a\u5c11\u4e2a\u3002\n\n## $Solution$\n+ SAM??? LCP??? ~~\u6211\u90fd\u4e0d\u4f1a~~\n+ \u9996\u5148\u5b50\u4e32\u4e2a\u6570\u662f $n^2$ \u7684\uff0c\u90a3\u4e48\u95ee\u9898\u53d8\u6210\u4e86\u5408\u6cd5\u5b50\u4e32\u53bb\u91cd\u3002\n+ ~~\u4f17\u6240\u5468\u77e5~~\uff0c\u4f18\u79c0\u7684\u5b57\u7b26\u4e32 $hash$ \u662f\u53ef\u4ee5\u8fc7\u6389\u6240\u6709\u5b57\u7b26\u4e32\u7684\u9898\u76ee\u7684\u3002\n+ $Codeforces$ \u6bd4\u8d5b\u65f6\u53ef\u80fd\u6709\u4eba\u5bf9\u7740\u4f60\u9501\u6389\u7684\u7a0b\u5e8f\u5361\u4f60\uff0c\u4f46\u662f\u5bf9\u4e8e $CSP$ \u8fd9\u79cd\u6570\u636e\u56fa\u5b9a\u7684\u662f\u51e0\u4e4e\u4e0d\u53ef\u80fd\u5361\u6389\u4f60\u7684 $hash$ \u7684\u3002\n+ \u8fd9\u6837\u54c8\u5e0c\u51b2\u7a81\u7684\u6982\u7387\u5927\u6982\u662f $\\frac{n^2}{mod}$\uff0c\u53ea\u8981\u4ee4 $mod$ \u8db3\u591f\u5927\uff0c\u5373\u4fdd\u8bc1\u4e86 $hash$ \u6b63\u786e\u6027\u3002\n+ \u95ee\u9898\u518d\u6b21\u8f6c\u6362\u6210\u4e86\u5927\u6574\u6570 $hash$\u3002\n+ \u8fd9\u91cc\u5c31\u6709\u4e24\u79cd\u7ecf\u5178\u65b9\u6cd5\uff1a\n\t1. \u79bb\u7ebf\u6392\u5e8f\uff0c\u6216\u8005\u5077\u61d2\u7528 $set$ \u4e4b\u7c7b\u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\n    2. $hash$ $list$\u3002\u8fd8\u662f\u4e0d\u5bf9\u7740\u7a0b\u5e8f\u5361\u51e0\u4e4e\u5361\u4e0d\u6389\u7684\u65b9\u6cd5\u3002\u65f6\u95f4\u4e0a\u6bd4 $set$ \u4f18\u79c0\u8bb8\u591a\u3002\n\n+ set\u6c34\u8fc7\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z6q1h72t.png)\n\n```cpp\n#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n#define rr int\nusing namespace std;\ntypedef long long ll;\ninline ll read() {\n    char i = getchar();\n    ll f = 1, res = 0;\n    while (i < '0' || i > '9') {\n        if (i == '-') f = -1;\n        i = getchar();\n    }\n    while (i >= '0' && i <= '9') {\n        res = res * 10 + i - '0';\n        i = getchar();\n    }\n    return f * res;\n}\nconst int N = 1505;\nbool pd[N];\nchar s[N], p[N];\nset<ll> st;\nset<ll>::iterator ite;\nconst ll base = 29;\nconst ll mod = 1e16 + 19260817 + 10000007 + 2333666;\nconst ll P = 3214567;\nint main() {\n    scanf(\"%s\", s + 1);\n    scanf(\"%s\", p);\n    for (rr i = 0; i < 26; ++i) pd[i] = int(p[i] - '0');\n    int k = read();\n    int n = strlen(s + 1);\n    for (rr i = 1; i <= n; ++i) {\n        // cout << pd[s[i] - 'a'] << ' ';\n        int cnt = 0;\n        ll now = 0;\n        for (rr j = i; j <= n; ++j) {\n            if (!pd[s[j] - 'a']) ++cnt;  //\u4e0d\u597d\u7684\u5b57\u6bcd\u4e0d\u8d85\u8fc7 K\n            now = now * base + (s[j] - 'a' + 1);\n            now %= mod;\n            if (cnt <= k) {\n                if (st.find(now) == st.end()) {\n                    st.insert(now);\n                }\n            }\n            if (cnt > k) break;\n        }\n    }\n    int ans = st.size();\n    cout << ans << endl;\n}\n```\n\n+ hash list\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/noc02g36.png)\n\n\n```cpp\n#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n#define rr int\nusing namespace std;\ntypedef long long ll;\ninline ll read() {\n    char i = getchar();\n    ll f = 1, res = 0;\n    while (i < '0' || i > '9') {\n        if (i == '-') f = -1;\n        i = getchar();\n    }\n    while (i >= '0' && i <= '9') {\n        res = res * 10 + i - '0';\n        i = getchar();\n    }\n    return f * res;\n}\nconst int N = 1505;\nbool pd[N];\nchar s[N], p[N];\nconst ll base = 29;\nconst ll mod = 1e16 + 19260817 + 10000007 + 2333666;\nconst ll P = 3214567;\nstruct H {\n    int nxt[P], head[P];\n    ll key[P];\n    int sz;\n    int size() { return sz; }\n    int find(ll x) {\n        int u = x % P;\n        for (rr i = head[u]; i; i = nxt[i]) {\n            if (key[i] == x) return 1;\n        }\n        return 0;\n    }\n    void insert(ll x) {\n        ++sz;\n        key[sz] = x;\n        int u = x % P;\n        nxt[sz] = head[u];\n        head[u] = sz;\n    }\n} hashlist;\nint main() {\n    scanf(\"%s\", s + 1);\n    scanf(\"%s\", p);\n    for (rr i = 0; i < 26; ++i) pd[i] = int(p[i] - '0');\n    int k = read();\n    int n = strlen(s + 1);\n    for (rr i = 1; i <= n; ++i) {\n        // cout << pd[s[i] - 'a'] << ' ';\n        int cnt = 0;\n        ll now = 0;\n        for (rr j = i; j <= n; ++j) {\n            if (!pd[s[j] - 'a']) ++cnt;  //\u4e0d\u597d\u7684\u5b57\u6bcd\u4e0d\u8d85\u8fc7 K\n            now = now * base + (s[j] - 'a' + 1);\n            now %= mod;\n            if (cnt <= k) {\n                if (!hashlist.find(now)) {\n                    hashlist.insert(now);\n                }\n            }\n            if (cnt > k) break;\n        }\n    }\n    int ans = hashlist.size();\n    cout << ans << endl;\n}\n```\n\n+ \u636e\u8bf4\u8003\u524d\u53d1\u9898\u89e3 RP++\uff0c\u795d\u5927\u5bb6CSP2019 RP+++++",
        "postTime": 1573567092,
        "uid": 19905,
        "name": "DarkMoon_Dragon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF271D \u3010Good Substrings\u3011"
    },
    {
        "content": "\u7531\u4e8en\u5341\u5206\u4e4b\u5c0f  \n\n\u5728SAM\u7684\u62d3\u6251\u56fe\u4e0a\u66b4\u529bdfs\u5373\u53ef\uff0c\u8bb0\u5f55\u6df1\u641c\u5230\u5f53\u524d\u8282\u70b9\u65f6\u5df2\u7ecf\u6709\u51e0\u4e2a\u574f\u5b57\u7b26\u7684\u524d\u9a71\u5c31\u53ef\u4ee5\u7edf\u8ba1\u65b9\u6848\u4e86\u590d\u6742\u5ea6O(n^2)\n\n\u5b58\u5728O(nlogn)\u7684\u505a\u6cd5\uff0c\u9700\u8981\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n```cpp\n\n#define For(n) for(int i=0;i<n;++i)\nusing namespace std;\nconst int N = 200100;\nstruct SAM_node\n{\n\tSAM_node *pre, *next[26];\n\tint next2_sum;\n\tint step;\n\tlong child;\n\tint cnt3;\n\tint cnt;\n\tunsigned long long ans;\n\tint firstpos;\n\tvoid clear()\n\t{\n\t\tans = 0;\n\t\tcnt = 0;\n\t\tcnt3 = 0;\n\t\tpre = 0;\n\t\tstep = 0;\n\t\tfirstpos = 0;\n\t\tmemset(next, 0, sizeof(next));\n\t}\n};\nlong d[N * 2];\nSAM_node *pool[N * 2];\nSAM_node SAM_Pool[N * 2];\nint part2[26];\nint k;\nstruct SAM \n{\n\tSAM_node *root, *last;\n\tSAM_node  *cur;\n\tvoid init()\n\t{\n\t\tcur = SAM_Pool;  \n\t\troot = last = cur++;\n\t\troot->clear();\n\t}\n\tvoid topo()\n\t{\n\t\t// \u6c42\u51faparent\u6811\u7684\u62d3\u6251\u5e8f\n\t\tint cnt = cur - SAM_Pool;\n\t\tint maxVal = 0;\n\t\tmemset(d, 0, sizeof(d));\n\t\tfor (int i = 1; i < cnt; i++)\n\t\t\tmaxVal = max(maxVal, SAM_Pool[i].step), d[SAM_Pool[i].step]++;\n\t\tfor (int i = 1; i <= maxVal; i++)\n\t\t\td[i] += d[i - 1];\n\t\tfor (int i = 1; i < cnt; i++)\n\t\t\tpool[d[SAM_Pool[i].step]--] = &SAM_Pool[i];\n\t\tpool[0] = root;\n\t}\n\tvoid Insert(int w)\n\t{\n\t\tSAM_node *p = last;\n\t\tSAM_node *np = cur++;\n\t\tnp->clear();\n\t\tnp->step = p->step + 1;\n\t\tnp->firstpos = np->step - 1; //\u786e\u5b9a\u539f\u4e32\u521d\u59cb\u4f4d\u7f6e\n\t\twhile (p && !p->next[w])\n\t\t{\n\t\t\tp->next[w] = np, p = p->pre;\n\t\t}\n\t\tif (p == 0)\n\t\t\tnp->pre = root;\n\t\telse\n\t\t{\n\t\t\tSAM_node *q = p->next[w];\n\t\t\tif (p->step + 1 == q->step)\n\t\t\t\tnp->pre = q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tSAM_node *nq = cur++;\n\t\t\t\tnq->clear();\n\t\t\t\tmemcpy(nq->next, q->next, sizeof(q->next));\n\t\t\t\tnq->firstpos = q->firstpos;\n\t\t\t\tnq->cnt = q->cnt;\n\t\t\t\tnq->step = p->step + 1;\n\t\t\t\tnq->pre = q->pre;\n\t\t\t\tq->pre = nq;\n\t\t\t\tnp->pre = nq;\n\t\t\t\twhile (p&&p->next[w] == q)\n\t\t\t\t{\n\t\t\t\t\tp->next[w] = nq, p = p->pre;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlast = np;\n\t}\n\tvoid build(string &s)\n\t{\n\t\tinit();\n\t\tfor (int i = 0; i < s.size(); ++i)\n\t\t\tInsert(s[i] - 'a');\n\t}\n\tlong dfs(SAM_node *part,int p)\n\t{\n\t\tif(part!=root)\n\t\tpart->ans = 1;\n\t\tif (p == k)\n\t\t{\n\t\t\tfor (int i = 0; i < 26; ++i)\n\t\t\t\tif (part->next[i] != NULL && part2[i]==1)\n\t\t\t\t{\n\t\t\t\t\tpart->ans += dfs(part->next[i], p);\n\t\t\t\t}\n\t\t}\n\t\telse\n\t\t\tfor (int i = 0; i < 26; ++i)\n\t\t\t\tif (part->next[i] != NULL)\n\t\t\t\t{\n\t\t\t\t\tif(part2[i] == 1)\n\t\t\t\t\t    part->ans += dfs(part->next[i], p);\n\t\t\t\t\telse\n\t\t\t\t\t\tpart->ans += dfs(part->next[i], p+1);\n\t\t\t\t}\n\t\treturn part->ans;\n\t}\n};\nint main()\n{\n\tios::sync_with_stdio(0);\n\tstring a,b;\n\tcin >> a>>b>>k;\n\tfor (int i = 0; i < 26; ++i)\n\t{\n\t\tpart2[i] = b[i] - '0';\n\t}\n\tSAM part9;\n\tpart9.build(a);\n\tcout << part9.dfs(part9.root,0) << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1570000184,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF271D \u3010Good Substrings\u3011"
    },
    {
        "content": "[$My\\ blog$](https://ctz45562.github.io/2019/04/30/\u6d1b\u8c37-CF271D-Good-Substrings)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/CF271D)\n\n\u5341\u5206\u677f\u5b50\u7684$SAM$\u9898\u4e86\u3002\n\n\u6ca1\u6709$SAM$\u9898\u89e3\u8d76\u7d27\u6c34\u4e00\u53d1\u3002\n\n\u628a\u4e0d\u597d\u7684\u5b57\u6bcd\u7684\u8f6c\u79fb\u8fb9\u6743\u503c\u89c6\u4e3a$1$\uff0c\u597d\u7684\u5b57\u6bcd\u6743\u503c\u89c6\u4e3a$0$\uff0c\u8fd9\u4e2a\u9898\u5c31\u662f\u6c42$SAM$\u4e0a\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u6709\u591a\u5c11\u6761\u8def\u5f84\u957f\u5ea6$\\le k$\u3002\n\n\u8bbe$f(i,j)$\u8868\u793a\u4ece\u8282\u70b9$i$\u51fa\u53d1\uff0c\u6709\u591a\u5c11\u6761\u8def\u5f84\u957f\u5ea6\u4e3a$j$\u3002\n\n\u65b9\u7a0b\uff1a$f(i,j)=\\sum f(son(i,c),j-ba[c])$\uff08$ba[c]$\u8868\u793a$k$\u662f\u5426\u4e3a\u4e0d\u597d\u7684\u5b57\u6bcd\uff09\n\n\u8fd8\u6709\u4e00\u79cd\u8def\u5f84\u662f\u76f4\u63a5\u4ece$i$\u5230\u5b83\u7684\u513f\u5b50\u7684\uff0c\u5bf9\u4e8e$i$\u7684\u6bcf\u4e00\u6761\u5b58\u5728\u7684\u8f6c\u79fb\u8fb9\uff0c$++f(i,ba[c])$\u5373\u53ef\u3002\n\n\u7b54\u6848\u4e3a$\\sum\\limits_{i=0}^{k}f(1,i)$\u3002\u56e0\u4e3a$SAM$\u5305\u542b\u7684\u5b50\u4e32\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u6240\u4ee5\u6c42\u51fa\u6765\u7684\u4e5f\u5c31\u672c\u8d28\u4e0d\u540c\u3002\n\n\u590d\u6742\u5ea6\u770b\u8d77\u6765\u6709\u70b9\u5047\uff0c\u5b9e\u9645\u4e0a\u5206\u6790\u4e00\u6ce2\u5c31\u4f1a\u53d1\u73b0\u8f6c\u79fb\u6b21\u6570\u4e0d\u8d85\u8fc7\u8fb9\u6570\uff0c\u5355\u6b21\u8f6c\u79fb\u662f$O(n)$\u7684\uff0c\u603b\u590d\u6742\u5ea6$O(n^2)$\n\n\u4ee3\u7801\uff1a\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 5005\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\n#define son(x,y) son[x][y]\nint son[maxn][26],fa[maxn],len[maxn],f[maxn][1505],n,m,k,last=1,cnt=1;\nbool vis[maxn],ba[26];\nchar s[maxn];\nvoid insert(int c){\n\tint p=last,ne=last=++cnt;\n\tlen[ne]=len[p]+1;\n\twhile(p&&!son(p,c))son(p,c)=ne,p=fa[p];\n\tif(!p)fa[ne]=1;\n\telse {\n\t\tint q=son(p,c);\n\t\tif(len[q]==len[p]+1)fa[ne]=q;\n\t\telse {\n\t\t\tint sp=++cnt;\n\t\t\tmemcpy(son[sp],son[q],sizeof son[q]);\n\t\t\tfa[sp]=fa[q],len[sp]=len[p]+1,fa[q]=fa[ne]=sp;\n\t\t\twhile(p&&son(p,c)==q)son(p,c)=sp,p=fa[p];\n\t\t}\n\t}\n}\nvoid dp(int node=1){\n\tvis[node]=1;\n\tint x;\n\tfor(register int i=0;i<26;++i){\n\t\tx=son(node,i);\n\t\tif(!x)continue;\n\t\tif(!vis[x])dp(x);\n\t\t++f[node][ba[i]];\n\t\tfor(register int j=0;j<=k;++j)\n\t\t\tif(j-ba[i]>=0)f[node][j]+=f[x][j-ba[i]];\n\t}\n}\nint main(){\n\tscanf(\"%s\",s+1),n=strlen(s+1);\n\tfor(register int i=1;i<=n;++i)insert(s[i]-'a');\n\tscanf(\"%s\",s+1);\n\tfor(register int i=0;i<26;++i)ba[i]=(s[i+1]=='0');\n\tk=read(),dp();\n\tint ans=0;\n\tfor(register int i=0;i<=k;++i)ans+=f[1][i];\n\tprintf(\"%d\\n\",ans);\n}\n\n```\n\n",
        "postTime": 1556585317,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF271D \u3010Good Substrings\u3011"
    }
]