[
    {
        "content": "\u8003\u8651\u5728\u7ebf\u7ef4\u62a4\u975e\u5e38\u96be\u4ee5\u7ef4\u62a4\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8003\u8651\u79bb\u7ebf\u3002\u800c\u4e14\uff0c\u5f53\u4e00\u4e2a\u70b9\u6210\u4e3a\u53e6\u4e00\u4e2a\u70b9\u7684\u7956\u5148\u65f6\uff0c\u5c31\u4e0d\u4f1a\u518d\u6539\u53d8\u4e86\u3002\n\n\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u64cd\u4f5c1\u7684\u96c6\u5408\u8fde\u8fb9\u95ee\u9898\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u8003\u8651\u4e00\u4e2a\u6587\u4ef6\u4f1a\u88ab\u4e00\u4e2a\u4eba\u770b\u89c1\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u4eba\u5728\u5f53\u524d\u64cd\u4f5c\u7684\u8fd9\u4e2a\u4eba\u548c\u6700\u9876\u7aef\u7684\u4eba\u4e4b\u95f4\u7684\u94fe\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u4eba\u3002\n\n\u6700\u540e\uff0c\u5bf9\u4e8e\u64cd\u4f5c3\uff0c\u53ea\u9700\u8981\u770b\u8fd9\u4e2a\u4eba\u662f\u4e0d\u662f\u5728\u8fd9\u4e2a\u6587\u4ef6\u5bf9\u5e94\u8bb0\u5f55\u7684\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u94fe\u4e0a\u5373\u53ef\u3002\n\n\uff08\u81f3\u4e8e\u600e\u4e48\u5224\u65ad\uff0c\u5c31\u53ef\u4ee5\u5404\u663e\u795e\u901a\u4e86\uff0c\u53ef\u4ee5\u500d\u589e\u4e5f\u53ef\u4ee5\u5165\u6808\u51fa\u6808\u5e8f\u6765\u5224\u65ad\uff0c\u6211\u7528\u7684\u5165\u6808\u51fa\u6808\u5e8f\uff09\n\n```cpp\nconst int N = 1e5 + 5;\ntypedef std::pair<int,int> pp;\n#define mp std::make_pair\nint n , m , num , cnt;\nint fa[N] , s[N] , t[N] , c[N];\nbool vis[N];\nstd::vector<pp> v[N];\nstruct Edge\n{\n\tint to; Edge *nxt;\n\tEdge(int to = 0,Edge *nxt = NULL) : to(to) , nxt(nxt) {}\n} *head[N] , pool[N] , *tail = pool;\ninline void add(int u,int v) { head[u] = new (tail ++) Edge(v,head[u]);}\nint find(int x) { return x == fa[x] ? x : fa[x] = find(fa[x]);}\nvoid dfs(int x)\n{\n\tvis[x] = 1;\n\tfor(Edge *i = head[x];i;i = i -> nxt) dfs(i -> to);\n\tfor(int i = 0;i < (int)v[x].size();i ++) if(vis[v[x][i].first]) c[v[x][i].second] ++;\n\tvis[x] = 0;\n}\nint main()\n{\n\tn = read(); m = read();\n\tfor(int i = 1;i <= n;i ++) fa[i] = i;\n\tfor(int i = 1;i <= m;i ++)\n\t{\n\t\tint opt = read() , x = read() , y;\n\t\tif(opt != 2) y = read();\n\t\tif(opt == 1)\n\t\t{\n\t\t\tadd(y,x);\n\t\t\tfa[x] = find(y);\n\t\t}\n\t\telse if(opt == 2) \n\t\t{\n\t\t\tnum ++;\n\t\t\ts[num] = x; t[num] = find(x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcnt ++;\n\t\t\tv[x].push_back(mp(t[y],cnt));\n\t\t\tv[s[y]].push_back(mp(x,cnt));\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i ++) if(i == find(i)) dfs(i);\n\tfor(int i = 1;i <= cnt;i ++) puts(c[i] == 2 ? \"YES\" : \"NO\");\n\treturn 0;\n}\n```\n",
        "postTime": 1589928699,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF466E \u3010Information Graph\u3011"
    },
    {
        "content": "## CF466E \u9898\u89e3\n\n\u5224\u8bcd\uff1a\u4e00\u9053\u6bd4\u8f83\u597d\u7684\u7efc\u5408\u9898\u3002\n\n\u663e\u7136\u5730\uff0c\u5728\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\uff0c\u5458\u5de5\u4eec\u7684\u5173\u7cfb\u4e00\u5b9a\u7c7b\u4f3c\u4e8e**\u6811**\uff08\u4e3a\u4ec0\u4e48\u662f\u7c7b\u4f3c\u4e8e\u7a0d\u540e\u89e3\u91ca\uff09\u3002\u8003\u8651\u5230\u5728\u7ebf\u66f4\u65b0\u548c\u8be2\u95ee\u8f83\u4e3a\u9ebb\u70e6\uff0c\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u5904\u7406\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u6837\u4e00\u53e5\u8bdd\uff1a\n\n> $y$ \u6210\u4e3a\u4e86 $x$ \u7684\u4e0a\u53f8\uff0c\u4fdd\u8bc1\u8fd9\u65f6 $x$ \u4e0d\u4f1a\u6709\u4e0a\u53f8\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u79bb\u7ebf\u5904\u7406\u7684\u6b63\u786e\u6027\u3002\n\n\u79bb\u7ebf\u7684\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\u3002\n\n- \u5bf9\u4e8e\u6587\u4ef6 $i$\uff0c\u6211\u4eec\u8bb0\u5f55\u7b2c\u4e00\u4e2a\u770b\u5230\u5b83\u7684\u5458\u5de5 $ st $ \u4ee5\u53ca\u6700\u540e\u4e00\u4e2a\u770b\u89c1\u5b83\u5e76\u4e14\u5c06\u5176\u9500\u6bc1\u7684\u5458\u5de5 $ ed $ \u3002\n\n- \u5bf9\u4e8e\u8be2\u95ee $i$\uff0c\u6211\u4eec\u8bb0\u5f55\u5458\u5de5\u7f16\u53f7 $ cur $ \u4ee5\u53ca\u6587\u4ef6\u7f16\u53f7 $id$ \u3002\u79bb\u7ebf\u56de\u7b54\u8be2\u95ee\u3002\n\n\u5bb9\u6613\u60f3\u5230\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4efd\u6587\u4ef6 $i$\uff0c\u5458\u5de5\u80fd\u8bfb\u5230\u6587\u4ef6\uff0c**\u5f53\u4e14\u4ec5\u5f53**\u6b64\u5458\u5de5\u5728\u4ece $ st_i $ \u5230 $ ed_i $ \u7684\u8fd9\u4e00\u6761\u94fe\u4e0a\u3002\u8fd9\u662f\u56e0\u4e3a\u5458\u5de5\u4f20\u9012\u6587\u4ef6\u65f6\uff0c\u53ea\u4f1a\u5411\u5176**\u76f4\u63a5\u4e0a\u53f8**\uff08\u53ef\u4ee5\u62bd\u8c61\u7406\u89e3\u4e3a\u7236\u4eb2\u8282\u70b9\uff09\u4f20\u9012\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa $ ed_i $ \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528**\u5e76\u67e5\u96c6**\u7ef4\u62a4\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\u4e00\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $ st_i $\uff0c\u53ef\u4ee5\u77e5\u9053\u76f8\u5bf9\u5e94\u7684 $ ed_i $ \u5e94\u662f\u6b64\u8fde\u901a\u5757\u7684\u6839\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u5b98\u6700\u5927\u7684\u4e0a\u53f8\uff09\u3002\u663e\u7136\u5730\uff0c$ ed_i $ \u5e94\u8be5\u5728\u7ebf\u6c42\u5f97\u3002\n\n\u8003\u8651\u5982\u4f55\u56de\u7b54\u8be2\u95ee\u3002\u5982\u4f55\u5224\u65ad\u5f53\u524d\u8be2\u95ee\u4e2d\u7684\u5458\u5de5\u662f\u5426\u5904\u4e8e\u5f53\u524d\u8be2\u95ee\u4e2d\u7684\u6587\u4ef6\u6240\u5728\u7684\u94fe\u4e0a\u5462\uff1f\n\n\u6765\u770b\u4e0b\u9762\u8fd9\u5f20\u56fe\u7247\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hipk18na.png)\n\n\u8bbe $ low(5) $ \u662f\u6587\u4ef6\u7684\u8d77\u70b9\uff0c$ hig(1) $ \u662f\u6587\u4ef6\u7684\u7ec8\u70b9\uff0c$ cur(4) $ \u4ee3\u8868\u5f53\u524d\u8be2\u95ee\u7684\u5458\u5de5\u3002\u90a3\u4e48 $ 1\\to  5 $ \u5373\u662f\u8fd9\u4e00\u6761\u94fe\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u5728\u8fd9\u6837\u7684\u4e00\u6761\u94fe\u4e0a\u6c42**\u6700\u8fd1\u516c\u5171\u7956\u5148**\uff0c\u4e00\u5b9a\u6709 $ \\text{LCA(low,cur)} = \\text{cur} $\uff1b$ \\text{LCA(hig,cur)} = \\text{hig} $\u3002\u5f53\u7136\uff0c\u524d\u63d0\u662f $ cur $ \u7684\u6df1\u5ea6\u5728 $ low $ \u548c $ hig $ \u4e4b\u95f4\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u7ef4\u62a4\u4e00\u4e2a $ \\text{LCA} $\uff0c\u8be2\u95ee\u7684\u5224\u65ad\u5c31\u80fd\u591f\u6c42\u89e3\u4e86\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u672c\u9898\u4e2d\uff0c\u6240\u6709\u5458\u5de5\u6784\u6210\u7684\u5173\u7cfb\u7f51\u7edc\u5e76\u4e0d\u4e00\u5b9a\u662f\u4e00\u9897\u6811\u3002\u5f88\u6709\u53ef\u80fd\u5728 $m$ \u6b21\u64cd\u4f5c\u4e2d\uff0c\u6709\u5f88\u591a\u7684\u5458\u5de5\u6839\u672c\u6ca1\u6709\u88ab\u63d0\u53ca\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6240\u6709\u5458\u5de5\u4e4b\u95f4\u7684\u5173\u7cfb\u5e76\u4e0d\u662f\u6811\uff0c\u800c\u662f**\u68ee\u6797**\uff0c\u800c\u4e14\u8fd8\u6709\u53ef\u80fd\u5b58\u5728\u5b64\u70b9\u3002\n\n\u56e0\u6b64\uff0c\u5728\u56de\u7b54\u8be2\u95ee\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u5224\u65ad\u5458\u5de5\u548c\u6587\u4ef6\u7684\u59cb\u7ec8**\u662f\u5426\u90fd\u5904\u4e8e\u540c\u4e00\u8fde\u901a\u5757\u5185**\uff0c\u624d\u80fd\u901a\u8fc7\u6c42 $ \\text{LCA} $ \u8fdb\u884c\u5224\u65ad\u3002\n\n\u540c\u6837\u5730\uff0c\u5728\u8fdb\u884c $ \\text{LCA} $ \u7684\u9884\u5904\u7406\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff1a\u5982\u679c\u8be5\u70b9\u662f\u5176\u6240\u5c5e\u7684\u8fde\u901a\u5757\u7684\u6839\uff0c\u6211\u4eec\u90fd\u8981\u4ee5\u5b83\u4e3a\u6839\u8282\u70b9\u8fdb\u884c\u4e00\u6b21 $ \\text{dfs} $ \u7684\u9884\u5904\u7406\u3002\n\n\u8bb2\u5f97\u5e94\u8be5\u662f\u633a\u6e05\u695a\u4e86\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u8bf7\u770b\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n\nconst int MAXN=1e5+1;\nint n,m,fa[MAXN],dep[MAXN],F[MAXN][21];\nint file_tot,query_tot;\nvector <int> E[MAXN];\nstruct File{int st,ed;}file[MAXN];\nstruct Q{int worker,id;}query[MAXN];\n\ninline int root(int x)\n{\n\tif(fa[x]==x)\n\t\treturn x;\n\treturn fa[x]=root(fa[x]);\n}//\u5e76\u67e5\u96c6+\u8def\u5f84\u538b\u7f29 \n\ninline void dfs(int x,int fa)\n{\n\tdep[x]=dep[fa]+1;\n\tF[x][0]=fa;\n\tfor(int i=1;i<=20;i++)\n\t\tF[x][i]=F[F[x][i-1]][i-1];  //\u500d\u589e \n\tfor(int i=0;i<E[x].size();i++)\n\t\tdfs(E[x][i],x); \n}//\u9884\u5904\u7406 \n\ninline int LCA(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=20;i>=0;i--)\n\t\tif(dep[F[x][i]]>=dep[y])\n\t\t\tx=F[x][i];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--)\n\t\tif(F[x][i]!=F[y][i])\n\t\t{\n\t\t\tx=F[x][i];\n\t\t\ty=F[y][i];\n\t\t}\n\treturn F[x][0];\n}//LCA\u677f\u5b50 \n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i;  //\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316 \n\t\n\twhile(m--)\n\t{\n\t\tint idx;\n\t\tscanf(\"%d\",&idx);\n\t\tif(idx==1)\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tE[y].push_back(x);  //\u9898\u4e2d\u660e\u786e\u7ed9\u51fa\u4e86x, y\u4e24\u70b9\u7684\u4ece\u5c5e\u5173\u7cfb\uff0c\u65e0\u987b\u5efa\u53cc\u5411\u8fb9 \n\t\t\tfa[x]=root(y);  //\u4fdd\u8bc1root\u51fd\u6570\u67e5\u8be2\u5230\u7684\u662f\u8fde\u901a\u5757\u7684\u6839 \n\t\t}\n\t\telse if(idx==2)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tfile[++file_tot].st=x;  //\u5b58\u50a8\u4e3a\u94fe\u7684\u8d77\u59cb\u70b9 \n\t\t\tfile[file_tot].ed=root(x);  //\u67e5\u8be2\u8fde\u901a\u5757\u7684\u6839\uff0c\u5b58\u50a8\u4e3a\u94fe\u7684\u7ec8\u6b62\u70b9 \n\t\t}\n\t\telse\n\t\t{\n\t\t\tint x,i;\n\t\t\tscanf(\"%d%d\",&x,&i);\n\t\t\tquery[++query_tot].worker=x;\n\t\t\tquery[query_tot].id=i;\n\t\t}//\u79bb\u7ebf\u5904\u7406 \n\t}\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tif(i==root(i))\n\t\t\tdfs(i,0);  //\u68ee\u6797\uff01 \n\t\t\t\n\tfor(int i=1;i<=query_tot;i++)\n\t{\n\t\tint fid=query[i].id;\n\t\tint low=file[fid].st,hig=file[fid].ed,cur=query[i].worker;\n\t\tint rl=root(low),rh=root(hig),rc=root(cur);  //\u5206\u522b\u627e\u5230\u4e09\u8005\u7684\u6839 \n\t\tif(rl!=rh||rl!=rc||rh!=rc)  //\u5224\u65ad\u662f\u5426\u5904\u4e8e\u540c\u4e00\u8fde\u901a\u5757\u4e2d \n\t\t{\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(LCA(low,cur)==cur&&LCA(hig,cur)==hig)  //\u6ee1\u8db3\u521a\u624d\u6240\u8bf4\u7684\u6027\u8d28 \n\t\t\tputs(\"YES\");\n\t\telse\n\t\t\tputs(\"NO\");\n\t}\n\t\n\treturn 0;\n}\n```\n\n------------\n\n\u4e00\u70b9\u9898\u5916\u8bdd\uff1a\n\n$ \\text{MnZn} $ \u7684\u7b2c\u4e00\u7bc7\u7d2b\u9898\u9898\u89e3\uff0c\u8c22\u8c22\u5927\u5bb6\u7684\u9605\u8bfb\u3002",
        "postTime": 1604318610,
        "uid": 177531,
        "name": "ZolaWatle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF466E \u3010Information Graph\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u76f8\u4fe1\u770b\u4e86\u9898\u5927\u5bb6\u90fd\u80fd\u660e\u767d\uff0c\u9996\u5148\u662f\u4e00\u4e2a\u52a8\u6001\u52a0\u8fb9\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u662f\u4ece\u5f53\u524d\u70b9\u5230\u4ed6\u7684\u6839\u8282\u70b9\u5168\u90e8\u6253\u4e0a\u6807\u8bb0\uff0c\u8be2\u95ee\u4e00\u4e2a\u8282\u70b9\u6709\u6ca1\u6709\u6807\u8bb0\u3002\n# \u601d\u8def\n\u9996\u5148\u6ca1\u6709\u60f3\u5230\u5728\u7ebf\u505a\u6cd5\uff0c\u6240\u4ee5\u8003\u8651\u79bb\u7ebf\u3002\n\n\u6700\u9ebb\u70e6\u7684\u662f\u8fd9\u4e2a\u52a0\u8fb9\u64cd\u4f5c\uff0c\u6211\u4eec\u60f3\u53ef\u4e0d\u53ef\u4ee5\u5c06\u52a0\u8fb9\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\u53d8\u6210\u4e00\u4e2a\u68ee\u6797\uff0c\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u94fe\u4e0a\u7684\u95ee\u9898\uff0c\u53d1\u73b0\u8fd9\u662f\u53ef\u4ee5\u7684\u3002\n\n\u7531\u4e8e\u9898\u76ee\u7684\u52a0\u8fb9\u64cd\u4f5c\u4fdd\u8bc1\u4e86\u8fd9\u662f\u4e00\u68f5\u68ee\u6797\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u786e\u5b9a\u94fe\u7684\u4e24\u4e2a\u7aef\u70b9\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\u53d1\u73b0\u6bcf\u6b21\u90fd\u662f\u4e00\u8def\u7a7f\u5230\u76ee\u524d\u7684\u6839\u8282\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u6839\u8282\u70b9\u5373\u53ef\uff0c\u8fd9\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u89e3\u51b3\u95ee\u9898\u4e86\uff0c\u6bcf\u6b21\u6211\u4eec\u90fd\u5c06 $x$ \u5408\u5e76\u5230 $y$ \u4fdd\u8bc1 $y$ \u7684\u7956\u5148\u4e5f\u662f $x$ \u7684\u7956\u5148\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5feb\u901f\u627e\u51fa\u6bcf\u4e2a\u8282\u70b9\u6240\u5728\u7684\u6839\u8282\u70b9\u4e86\uff0c\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u94fe\u4e0a\u95ee\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u5904\u7406\u51fa\u6765\u6bcf\u4e2a\u6587\u4ef6\u5bf9\u5e94\u7684\u94fe\u5373\u53ef\uff0c\u8fd9\u91cc\u6211\uff08~~\u5341\u5206sb\u7684~~\uff09\u4f7f\u7528\u4e86\u6811\u5256\uff0c\u5c06\u94fe\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u533a\u95f4\uff0c\u7531\u4e8e\u6bcf\u4e2a\u533a\u95f4\u4e0a\u7684 dfs \u5e8f\u90fd\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u67e5\u8be2\u7684\u65f6\u5019\u66b4\u529b\u5224\u65ad\u5f53\u524d\u70b9\u7684 dfs \u5e8f\u662f\u5426\u88ab\u5305\u542b\u4e8e\u67d0\u4e2a\u4e2a\u533a\u95f4\u5373\u53ef\u3002\n\n\u8fd9\u6837\u65f6\u7a7a\u590d\u6742\u5ea6\u590d\u6742\u5ea6\u90fd\u662f\u662f $O(n\\log n)$\u3002\n\n\u663e\u7136\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u66f4\u667a\u6167\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7531\u4e8e\u6bcf\u4e2a\u6587\u4ef6\u5bf9\u5e94\u7684\u94fe\u7684\u4e24\u4e2a\u7aef\u70b9\u4e00\u5b9a\u6709\u7956\u5b59\u5173\u7cfb\uff0c\u5373 lca \u5728\u67d0\u4e00\u70b9\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u77e5\u76f4\u63a5\u5224\u65ad\u8981\u8be2\u95ee\u7684\u70b9\u662f\u4e0d\u662f\u6df1\u5ea6\u8f83\u5c0f\u70b9\u7684\u540e\u4ee3\uff0c\u662f\u4e0d\u662f\u6df1\u5ea6\u8f83\u5927\u70b9\u7684\u7956\u5148\u5c31\u884c\u4e86\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7 dfs \u5e8f\u505a\u5230 $O(1)$ \u6240\u4ee5\u8fd9\u4e2a\u9898\u5c31\u80fd\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u89e3\u51b3\u3002\n\n# \u4ee3\u7801\n\u6811\u5256\u7684\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u60f3\u770b\u7684\u7ffb\u6211\u63d0\u4ea4\u8bb0\u5f55\uff0c\u7136\u540e\u8fd9\u91cc\u5728\u8bf4\u4e00\u4e0b\u5224\u65ad\u7956\u5148\u7684\u64cd\u4f5c\uff0c\u5c06\u6838\u5fc3\u4ee3\u7801\u8d34\u51fa\u6765\uff1a\n```cpp\nvi in(n+1),out(n+1);int tt=0;\nfunction<void(int)>dfs=[&](int u)\n{\n\tin[u]=++tt;\n\tfor(const int& v:e[u])dfs(v);\t\n\tout[u]=tt;\t\n};\nfor(int i=1;i<=n;i++)if(getf(i)==i)dfs(i);\nauto is=[&](int u,int v){return in[v]>=in[u]&&out[v]<=out[u];};//\u8be2\u95eeu \u662f\u4e0d\u662fv \u7684\u7956\u5148 \n```\n\n\u90a3\u4e2a is \u51fd\u6570\u5c31\u662f\u5173\u952e\uff0cin \u5c31\u662f dfs \u5e8f\uff0cout \u5c31\u662f\u7ed3\u675f\u904d\u5386\u5f53\u524d\u5b50\u6811\u65f6\u7684 dfs \u5e8f\uff0c\u5176\u4ed6\u7684\u770b\u4e00\u4e0b\u4ee3\u7801\u5c31\u61c2\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>\ninline void cmax(T& a,const T& b){a<b?a=b:0;}\ntemplate<typename T>\ninline void cmin(T& a,const T& b){b<a?a=b:0;}\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef unsigned long long ull;\ntypedef unsigned int ui;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vii;\n#define X first\n#define Y second\nconst int mod=998244353;\nsigned main()\n{\n\tios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tint n,m;\n\tcin>>n>>m;\n\tvii e(n+1);\n\tvector<pii> as;as.reserve(m+1);\n\tvi F(n+1);\n\tiota(F.begin(),F.end(),0);\n\tfunction<int(int)>getf=[&](int x){return F[x]==x?x:F[x]=getf(F[x]);};\n\tvector<pii> ch;ch.reserve(m+1);\n\tint op,x,y;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>op>>x;\n\t\tif(op==1)\n\t\t{\n\t\t\tcin>>y;\n\t\t\te[y].push_back(x);\n\t\t\tF[getf(x)]=getf(y);\n\t\t}\n\t\telse if(op==2)ch.push_back({getf(x),x});\t\n\t\telse\n\t\t{\n\t\t\tcin>>y;\n\t\t\tas.push_back({x,y});\n\t\t}\n\t}\n\tvi in(n+1),out(n+1);int tt=0;\n\tfunction<void(int)>dfs=[&](int u)\n\t{\n\t\tin[u]=++tt;\n\t\tfor(const int& v:e[u])dfs(v);\t\n\t\tout[u]=tt;\t\n\t};\n\tfor(int i=1;i<=n;i++)if(getf(i)==i)dfs(i);\n\tauto is=[&](int u,int v){return in[v]>=in[u]&&out[v]<=out[u];};//\u8be2\u95eeu \u662f\u4e0d\u662fv \u7684\u7956\u5148 \n\tfor(const pii& p:as)\n\t{\n\t\tint i=p.Y-1,x=p.X;\n\t\tif(is(ch[i].X,x)&&is(x,ch[i].Y))cout<<\"YES\\n\";\n\t\telse cout<<\"NO\\n\";\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1661572660,
        "uid": 571229,
        "name": "__stick",
        "ccfLevel": 7,
        "title": "CF466E"
    }
]