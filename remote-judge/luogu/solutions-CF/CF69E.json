[
    {
        "content": "\u6bd4\u8f83\u57fa\u7840\u7684\u4e00\u9053\u6743\u503c\u7ebf\u6bb5\u6811\u9898\u76ee\uff0c\u53ef\u4ee5\u7528\u6765\u7ec3\u624b\u3002\n\n\n**\u4ec0\u4e48\u662f\u6743\u503c\u7ebf\u6bb5\u6811\uff1f**\n\n\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u89c6\u4e3a\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u6876\u3002\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5b8c\u6210\u8bb8\u591a\u4e0e\u6876\u6709\u5173\u7684\u64cd\u4f5c\uff0c\u800c\u4e14\u66f4\u52a0\u65b9\u4fbf\u5feb\u6377\u3002\u53ef\u4ee5\u5b9e\u73b0\u7684\u64cd\u4f5c\uff0c\u5305\u62ec\u4e0d\u9650\u4e8e\u533a\u95f4\u6700\u5927\u3001\u533a\u95f4\u6700\u5c0f\u3001\u533a\u95f4 k \u5927\u503c\u7b49\u3002\n\n\u5177\u4f53\u601d\u8def\u662f\u5c06\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9**\u770b\u4f5c\u4e00\u4e2a\u6743\u503c**\uff0c\u5b58\u50a8\u4e00\u4e9b\u503c\uff08\u6bd4\u5982\u8fd9\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff09\uff0c\u7136\u540e\u518d\u50cf\u666e\u901a\u7ebf\u6bb5\u6811\u90a3\u6837\u8fdb\u884c\u503c\u7684\u5408\u5e76\u4e0e\u8ba1\u7b97\u3002\n\n\n**\u9898\u76ee\u8be6\u89e3**\n\n\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6c42\u6bcf\u4e00\u6bb5\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u4e32\u91cc\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u6570\u7684\u6700\u5927\u503c\uff1b\u5982\u679c\u90fd\u51fa\u73b0\u8fc7\uff0c\u8f93\u51fa ``Nothing``\u3002\n\n\u770b\u5230\u8fd9\u79cd\u51fa\u73b0\u6b21\u6570\u9898\uff0c\u9996\u5148\u8003\u8651\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\u5b58\u50a8\u4e0b\u6765\u6bcf\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5982\u679c\u662f 1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u53ef\u4ee5\u6210\u4e3a\u7b54\u6848\uff0c\u5c06\u5176\u7b54\u6848\u50a8\u5b58\u4e3a\u8fd9\u4e2a\u6570\uff1b\u5426\u5219\u5c06\u5176\u7b54\u6848\u50a8\u5b58\u4e3a 0\n\n\u5728\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u7684\u70b9\u4e0a\uff0c\u51fa\u73b0\u6b21\u6570\u53ef\u4ee5\u5ffd\u7565\uff0c\u7b54\u6848\u5373\u4e3a\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u6700\u5927\u503c\u3002\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0 $-10^9\\le a_i \\le 10^9$\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u660e\u663e\u5b58\u4e0d\u4e86\u8fd9\u4e48\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u79bb\u6563\u5316\u3002\n\n\u6211\u91c7\u7528\u7684\u79bb\u6563\u5316\u65b9\u5f0f\u662f\u4f7f\u7528 ``unique`` \u548c ``lower_bound`` \u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define eps 1e-8\nconst int inf=0x3f3f3f3f;\nconst int Maxn=1e5+10;\nint n,k; \nstruct SegTree{\n\tint ans; // \u6ee1\u8db3\u7684\u7b54\u6848\u7684\u6700\u5927\u503c \n\tint sum; // \u53f6\u5b50\u8282\u70b9 only\uff1a\u5b58\u50a8\u6570\u51fa\u73b0\u7684\u6b21\u6570 \n}t[Maxn<<4];\n#define ls node<<1\n#define rs node<<1|1\nvoid pushup(int node)\n{\n\tt[node].ans=max(t[ls].ans,t[rs].ans);\n}\nvoid update(int node,int l,int r,int pos,int val)\n{\n\tif(l==r)\n\t{\n\t\tt[node].sum+=val;\n\t\tif(t[node].sum==1)\n\t\t{\n\t\t\tt[node].ans=l;\n\t\t}else{\n\t\t\tt[node].ans=0;\n\t\t}\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)\n\t{\n\t\tupdate(ls,l,mid,pos,val);\n\t}else{\n\t\tupdate(rs,mid+1,r,pos,val);\n\t}\n\tpushup(node); // \u5408\u5e76\u53f6\u5b50\u8282\u70b9\u7b54\u6848\n}\nint Ar[Maxn];\nint tmp[Maxn];\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&Ar[i]);\n\t\ttmp[i]=Ar[i];\n\t}\n\tsort(tmp+1,tmp+1+n);\n\tint newn=unique(tmp+1,tmp+1+n)-tmp-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tAr[i]=lower_bound(tmp+1,tmp+1+newn,Ar[i])-tmp;\n//\t\tcout<<Ar[i]<<\" \";\n\t}\n\t \n\t// \u4e0a\u9762\u662f\u79bb\u6563\u5316\n\n//\tcout<<endl;\n\tfor(int i=1;i<k;i++)\n\t{\n\t\tupdate(1,1,newn,Ar[i],1); // \u5c06\u524d k-1 \u4e2a\u503c\u63d2\u5165\u6743\u503c\u7ebf\u6bb5\u6811\n\t}\n\tfor(int i=k;i<=n;i++)\n\t{\n\t\tupdate(1,1,newn,Ar[i],1); // \u63d2\u5165\u65b0\u4e00\u4e2a\u503c\n\t\tint ans=t[1].ans;\n//\t\tcout<<\"ans=\"<<ans<<endl;\n\t\tif(ans==0)\n\t\t{\n\t\t\tputs(\"Nothing\");\n\t\t}else{\n\t\t\tprintf(\"%d\\n\",tmp[ans]);\n\t\t}\n\t\tupdate(1,1,newn,Ar[i-k+1],-1); // \u5220\u9664\u73b0\u5728\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u503c\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1668252657,
        "uid": 358739,
        "name": "BFSDFS123",
        "ccfLevel": 0,
        "title": "CF69E Subsegments \u9898\u89e3"
    },
    {
        "content": "[\u4e5f\u8bb8\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zheyuanxie/p/wsgt.html)\n\n## \u7b80\u8981\u9898\u610f\n\n\u7ed9\u51fa\u4e24\u4e2a\u6574\u6570 $n,k$ \u548c\u4e00\u4e2a\u5e8f\u5217 $a$\u3002\n\n\u4f60\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\u3002\u6c42\u51fa\u533a\u95f4\u4e2d\u4ec5\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u5143\u7d20\u7684\u6700\u5927\u503c\u3002\u5982\u679c\u4e0d\u5b58\u5728\u4ec5\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u5143\u7d20\uff0c\u8f93\u51fa `Nothing`\u3002\n\n$1 \\leq n \\leq 10^5,1 \\leq k \\leq n,-10^9\\leq a_i\\leq 10^9$\n\n## \u601d\u8def\n\n\u8003\u8651\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5148\u5c06 $[1,k-1]$ \u7684\u5143\u7d20\u63d2\u8fdb\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u7ef4\u62a4\u4e00\u4e2a\u7c7b\u4f3c\u6ed1\u52a8\u7a97\u53e3\u7684\u4e1c\u897f\u3002\u6211\u4eec\u6ed1\u52a8\u533a\u95f4\u65f6\u5220\u9664\u4e0d\u5728\u7a97\u53e3\u91cc\u7684\u5143\u7d20\uff0c\u63d2\u5165\u65b0\u6765\u7684\u5143\u7d20\u3002\u7136\u540e\u8003\u8651\u5982\u4f55\u6c42\u51fa\u4ec5\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u5143\u7d20\u7684\u6700\u5927\u503c\u3002\n\n\u5355\u70b9\u4fee\u6539\u65f6\uff0c\u7ef4\u62a4 $t,v$\u3002$t$ \u8868\u793a\u5143\u7d20\u4e2a\u6570\uff0c$v$ \u8868\u793a\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u5148\u66f4\u65b0 $t$\u3002\u5982\u679c $t=1$\uff0c\u5219 $v=l$\uff0c\u5426\u5219 $v=0$\u3002\u7136\u540e `pushup` \u65f6\u5bf9 $v$ \u53d6 $\\max$ \u5373\u53ef\u3002\u7b54\u6848\u4e3a `Nothing` \u5f53\u4e14\u4ec5\u5f53\u6839\u8282\u70b9\u7684 $v=0$\u3002\n\n\u81f3\u4e8e\u503c\u57df\u95ee\u9898\uff0c\u6211\u4eec\u52a0\u4e0a\u504f\u79fb\u503c $10^9$\uff0c\u7136\u540e\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define ls (t[i].l)\n#define rs (t[i].r)\n#define mid ((l+r)>>1)\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\nusing namespace std;\n\nconst int N = 1e5+5;\nconst int MOV = 1e9;\n\nstruct node{\n    int v,t,l,r;\n} t[N<<4];\nint tot,root;\n\ninline void pushup(int i){\n    t[i].v=max(t[ls].v,t[rs].v);\n}\n\nvoid update(int p,int v,int &i,int l,int r){\n    if(!i) i=(++tot);\n    if(l==r){\n        t[i].t+=v;\n        if(t[i].t==1) t[i].v=l;\n        else t[i].v=0;\n        return; \n    }\n    if(p<=mid) update(p,v,ls,l,mid);\n    else update(p,v,rs,mid+1,r);\n    pushup(i);\n}\n\nint n,k,a[N];\n\nsigned main(){\n    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    cin>>n>>k;\n    for(int i=1;i<=n;i++) cin>>a[i];\n    for(int i=1;i<k;i++) update(a[i]+MOV,1,root,0,2e9);\n    for(int i=1;i<=(n-k+1);i++){\n        update(a[i+k-1]+MOV,1,root,0,2e9);\n        if(t[root].v) cout<<(t[root].v-MOV)<<'\\n';\n        else cout<<\"Nothing\"<<'\\n';\n        update(a[i]+MOV,-1,root,0,2e9);\n    }\n    return 0;\n}\n```",
        "postTime": 1674825593,
        "uid": 413065,
        "name": "xiezheyuan",
        "ccfLevel": 5,
        "title": "CF69E Subsegments"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u5c31\u662f\u7ed9\u4f60\u4e2a\u957f\u5ea6\u4e3a n \u5e8f\u5217\uff0c\u6c42\u6bcf\u4e00\u6bb5\u957f\u5ea6\u4e3a k \u7684\u5b57\u4e32\u4e2d\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u6570\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u90fd\u91cd\u590d\u51fa\u73b0\u8fc7\uff0c\u5c31\u8f93\u51fa Nothing\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u5199\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5148\u63d2\u5b8c $ [1,k-1] $ \u7684\u533a\u95f4\uff0c\u6bcf\u4e00\u6b21\u67e5\u8be2\u5c31\u628a\u7b2c\u4e00\u4e2a\u5220\u6389\uff0c\u5f80\u540e\u65b0\u6dfb\u4e00\u4e2a\u3002\u79bb\u6563\u5316\u540e\u63d2\u5165\u5c31\u5c31\u7ef4\u62a4\u5982\u679c x \u8fd9\u4e2a\u70b9\u53ef\u4ee5\u8d21\u732e\uff0c\u5c31\u6807\u8bb0\uff0c\u4e0d\u80fd\u5c31\u6807\u4e3a 0\uff0c\u8981\u7684\u5c31\u662f\u6807\u8bb0\u6700\u5927\u90a3\u4e2a\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>//\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01\n\nusing namespace std;\n\nconst int maxn=1e5+10;\nint tr[maxn<<2],bot[maxn<<2];\nint tmp[maxn],a[maxn];\n\nvoid pushup(int x){\n\ttr[x]=max(tr[x<<1],tr[x<<1|1]);\n}\nvoid update(int now,int l,int r,int x,int v){//\u6b63\u5e38\u677f\u5b50\n\tif(l==r){\n\t\tbot[now]+=v;\n\t\tif(bot[now]==1) tr[now]=l;\n\t\telse tr[now]=0;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid) update(now<<1,l,mid,x,v);\n\telse update(now<<1|1,mid+1,r,x,v);\n\tpushup(now); \n}\n\nint main(){\n\t\n\tint n,k;\n\t\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\ttmp[i]=a[i];\n\t}\n\t\n\tsort(tmp+1,tmp+n+1);//\u79bb\u6563\u5316\n\tint cnt=unique(tmp+1,tmp+n+1)-tmp-1;\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(tmp+1,tmp+cnt+1,a[i])-tmp;\n\t\n\tfor(int i=1;i<k;i++) update(1,1,cnt,a[i],1);//\u5148\u63d2\u597d k-1 \u4e2a\n\t\n\tfor(int i=1;i<=(n-k+1);i++){\n\t\tupdate(1,1,cnt,a[i+k-1],1);//\u52a0\u5165\u540e\u4e00\u4e2a\n\t\tif(tr[1]) printf(\"%d\\n\",tmp[tr[1]]);//tr[1]\u5c31\u662f\u6807\u8bb0\u6700\u5927\u7684\uff0c\u8981\u5957\u56de\u539f\u6765\u7684\u6570\u3002\n\t\telse puts(\"Nothing\");\n\t\tupdate(1,1,cnt,a[i],-1);//\u5220\u6389\u524d\u4e00\u4e2a\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1652253778,
        "uid": 234469,
        "name": "hxyqwq",
        "ccfLevel": 6,
        "title": "CF69E \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u601d\u8def\u5f88\u597d\u60f3\uff0c\u5148\u6c42\u51fa\u524d $k$ \u4e2a\u7684\u7b54\u6848\uff0c\u7528\u4e00\u4e2a $set$ \u6765\u4fdd\u5b58 $1$ \u7684\u7b54\u6848\uff0c\u7528\u4e00\u4e2a $map$ \u6765\u4fdd\u5b58\u6570\u51fa\u73b0\u7684\u6570\u91cf\uff0c\u4e4b\u540e\u7528\u7c7b\u4f3c\u6ed1\u52a8\u7a97\u53e3\u7684\u505a\u6cd5\u505a\u5c31\u884c\u4e86\u3002\n\n$Tips$ : \u5728 $set$ \u4e2d\u627e\u6700\u5927\u503c\u53ef\u4ee5\u63d2\u5165\u8fd9\u4e2a\u6570\u7684\u8d1f\u6570\uff0c\u76f4\u63a5\u8c03\u7528 $s.begin()$ \u5c31\u884c\u4e86\n\n$Code$ :\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define forn(i,a,b) for(int i=a;i<b;i++)\nusing namespace std;\ntypedef long long ll;\nmap<int,int> mp;\nset<int> st;\nint n,k;\nint a[100010];\nint main(){\n\tcin>>n>>k;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>a[i];\n\t}\n\tfor(int i=0;i<k;i++){\n\t\tmp[a[i]]++;\n\t}\n\tfor(int i=0;i<k;i++){\n\t\tif(mp[a[i]]==1)st.insert(-a[i]);\n\t}\n\tif(st.empty()){\n\t\tcout<<\"Nothing\\n\";\n\t}\n\telse cout<<-(*st.begin())<<\"\\n\";\n\tfor(int i=k;i<n;i++){\n\t\tif(mp[a[i-k]]==1)st.erase(-a[i-k]);\n\t\tif(mp[a[i]]==1)st.erase(-a[i]);\n\t\tmp[a[i-k]]--;\n\t\tmp[a[i]]++;\n\t\tif(mp[a[i-k]]==1)st.insert(-a[i-k]);\n\t\tif(mp[a[i]]==1)st.insert(-a[i]);\n\t\tif(!st.empty())cout<<-(*st.begin())<<\"\\n\";\n\t\telse cout<<\"Nothing\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1645334790,
        "uid": 340345,
        "name": "Bailyeden",
        "ccfLevel": 5,
        "title": "\u3010CF69E Subsegments\u3011\u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $a_i$\uff0c\u6c42\u6bcf\u4e2a\u533a\u95f4 $[a_i,a_{i+k-1}](1 \\leq i \\leq n-k+1)$ \u4e2d\uff0c\u51fa\u73b0\u6b21\u6570\u4e3a $1$ \u7684\u6570\u7684\u6700\u5927\u503c\u3002\u6ca1\u6709\u5219\u8f93\u51fa $Nothing$\u3002\n\n$1 \\leq k \\leq n \\leq 10^5,-10^9 \\leq a_i \\leq 10^9$\n\n### \u9898\u76ee\u5206\u6790\n\n\u672c\u4eba\u4e0d\u5584\u7528 STL\uff0c\u6240\u4ee5\u6765\u5199\u4e00\u7bc7\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u67e5\u8be2\u7684\u533a\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u533a\u95f4\u5728\u4e0d\u65ad\u5f80\u53f3\u79fb\u3002\u6240\u4ee5\u6bcf\u5f80\u53f3\u79fb\u4e00\u4e2a\u6570\uff0c\u76f8\u5f53\u4e8e\u5220\u9664\u6700\u524d\u9762\u7684\u6570\uff0c\u7136\u540e\u52a0\u5165\u6700\u540e\u9762\u7684\u6570\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u80fd\u5feb\u901f\u77e5\u9053\u54ea\u4e9b\u6570\u51fa\u73b0\u7684\u6b21\u6570\u4e3a $1$ \u4e86\u3002\u53ef\u4ee5\u5148\u5bf9 $a_i$ \u79bb\u6563\u5316\uff0c\u518d\u5f00\u4e2a\u6876\uff0c\u8bb0\u5f55\u4e00\u4e0b $a_i$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\u5f53\u6b21\u6570\u4e3a $1$ \u65f6\uff0c\u5b83\u5c31\u80fd\u5bf9\u7b54\u6848\u505a\u8d21\u732e\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u6c42\u6700\u5927\u503c\u4e86\u3002\u5f00\u4e00\u9897\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u4e3a $1$ \u7684\u6570\u7684\u6700\u5927\u503c\uff0c\u8ba9\u6b21\u6570\u4e0d\u4e3a $1$ \u7684\u6700\u5927\u503c\u4e3a $0$\uff0c\u66f4\u65b0\u7684\u65f6\u5019\u4e0e\u5de6\u53f3\u513f\u5b50\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u50cf\u6211\u4e00\u6837\uff0c\u628a\u6876\u653e\u5230\u7ebf\u6bb5\u6811\u91cc\u4e00\u8d77\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\uff0c\u4ee3\u7801\u53ef\u80fd\u4f1a\u76f8\u5bf9\u6bd4\u8f83\u957f\uff0c\u4f46\u633a\u597d\u5199\u7684\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define LC x<<1\n#define RC x<<1|1\nusing namespace std;\nint n,k,a[100010],lsh[100010],cnt=0,tree[400040],maxx[400040];//tree\uff1a\u6876\uff0cmaxx\uff1a\u533a\u95f4\u6700\u5927\u503c \nvoid pushup(int x){\n\tmaxx[x]=max(maxx[LC],maxx[RC]);//\u76f4\u63a5\u53d6\u6700\u5927\u503c \n}\nvoid mdf(int x,int l,int r,int pos,int v){//\u6b63\u5e38\u7684\u7ebf\u6bb5\u6811\u4fee\u6539\u64cd\u4f5c \n\tif(l==r){\n\t\ttree[x]+=v;//\u66f4\u65b0\u6b21\u6570 \n\t\tif(tree[x]==1) maxx[x]=l;//\u5982\u679c\u51fa\u73b0\u6b21\u6570\u6070\u597d\u4e3a1\uff0c\u5c31\u628amaxx\u8d4b\u6210l \n\t\telse maxx[x]=0;//\u5426\u5219\u53d8\u62100\uff0c\u8bf4\u660e\u4e0d\u53ef\u8d21\u732e \n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid) mdf(LC,l,mid,pos,v);\n\telse mdf(RC,mid+1,r,pos,v);\n\tpushup(x);\n}\nint main(){\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++) lsh[++cnt]=a[i];\n\tsort(lsh+1,lsh+cnt+1);//\u79bb\u6563\u5316 \n\tcnt=unique(lsh+1,lsh+cnt+1)-lsh-1;\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(lsh+1,lsh+cnt+1,a[i])-lsh;\n\tfor(int i=1;i<k;i++) mdf(1,1,cnt,a[i],1);//\u5148\u628a\u524d\u9762k-1\u4e2a\u52a0\u8fdb\u53bb \n\tfor(int i=1;i<=(n-k+1);i++){\n\t\tmdf(1,1,cnt,a[i+k-1],1);//\u628a\u6700\u540e\u4e00\u4e2a\u52a0\u8fdb\u6765 \n\t\tif(!maxx[1]) printf(\"Nothing\\n\");//maxx[1]\u5c31\u662f\u5168\u5c40\u6700\u5927\u503c\uff0c\u7b49\u4e8e0\u8bf4\u660e\u6ca1\u6709 \n\t\telse printf(\"%d\\n\",lsh[maxx[1]]);\n\t\tmdf(1,1,cnt,a[i],-1);//\u628a\u6700\u524d\u9762\u7684\u5220\u6389 \n\t}\n}\n```",
        "postTime": 1641360006,
        "uid": 224336,
        "name": "AFewSuns",
        "ccfLevel": 8,
        "title": "\u3010\u9898\u89e3\u3011CF69E Subsegments"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\u5bf9\u4e8e\u56fa\u5b9a\u957f\u5ea6\u7684\u6bcf\u4e2a\u6570\u5217\uff0cSasha\u5fc5\u987b\u627e\u5230\u5728\u7ed9\u5b9a\u6570\u5217\u4e0a\u51fa\u73b0\u7684\u5143\u7d20\u7684\u6700\u5927\u503c\u3002\u5e2eSasha\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570$n$ \u548c$k$ $(1\\leq n \\leq 10^5,1 \\leq k \\leq n)$,\u8868\u793a\u6570\u7ec4\u5143\u7d20\u7684\u6570\u76ee\u548c\u6570\u5217\u7684\u957f\u5ea6\u3002\n\n\u7136\u540e $n$ \u884c\uff0c\u7b2c $i$ \u884c\u5305\u542b\u4e00\u4e2a\u6570\u5b57$a_i(-10^9 \\leq a_i \\leq 10^9)$\n\n\u8f93\u51fa $n\u2212k+1$ \u4e2a\u6570\uff0c\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u6570\uff0c\u7b2c$i$\u884c\u8f93\u51fa\u4ee5\u4e3a$i$\u4e3a\u8d77\u70b9\uff0c\u957f\u5ea6\u4e3a$k$\u7684\u6570\u5217\u4e2d\u7684\u6700\u5927\u503c\u3002\n\n\u5e76\u4e14\u5728$a_i  a_{i+1} .....a_{i+k-1}$,\u4e2d\u6bcf\u4e2a\u6570\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21(\u91cd\u590d\u89c6\u4e3a\u6ca1\u6709\u5143\u7d20)\uff0c\u5982\u679c\u6570\u5217\u4e2d\u6ca1\u6709\u5143\u7d20\uff0c\u8f93\u51fa$Nothing$\u3002\n\n### \u5206\u6790\uff1a\n\u4e0d\u96be\u770b\u51fa\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6570\u5217\u5185\u6700\u5927\u503c\u5373\u53ef\u3002\n\n**\u6ce8\u610f:** \u5982\u679c\u6570\u5217\u4e2d\u51fa\u73b0\u4e86$i (i>1)$\u6b21\u540c\u4e00\u4e2a\u6570\uff0c\u5219\u8fd9\u4e2a\u6570\u5bf9\u6570\u5217\u8d21\u732e\u4e3a$0$\u3002\n\n### Code\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <set>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\ninline int read() {\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0') {\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\n\nint a[100000];\nset<int> now;\nmap<int,int> cnt;\n\nvoid push(int v, int c){\n    if((cnt[v]+=c)==1){\n        now.insert(v);\n    }else{\n        now.erase(v);\n    }\n}\n\nint main(){\n    int n,k;\n    n=read(),k=read();\n    for(int i=0;i<n;i++){\n        a[i]=read();\n        push(-a[i],1);\n        if(i-k>=0) push(-a[i-k],-1);\n        if(i-k>=-1) if(now.empty()){\n\t\t printf(\"Nothing\"); \n\t\t }else {\n\t\t printf(\"%d\\n\",-*now.begin());\n\t}\n    }\n}\n```\n\n\n",
        "postTime": 1604045376,
        "uid": 283083,
        "name": "fisheep",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 CF69E \u3010Subsegments\u3011"
    },
    {
        "content": "\u597d\u7b80\u5355\u7684\u4e00\u9053E\u9898\u554a\u3002\u3002\u3002\n\n\u628a\u6570\u6254\u8fdbset\u6765\u6c42\u5f97\u6700\u5927\u503c\uff0c\u7528map\u7eaa\u5f55\u6bcf\u4e2a\u6570\u4e0a\u6b21\u8fdb\u5165\u7684\u65f6\u95f4\u6765\u53bb\u91cd\uff0c\u7136\u540e\u6a21\u62df\u5c31\u884c\u4e86\u554a\u3002\u3002\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <set>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nint a[100000];\nset<int> now;\nmap<int,int> cnt;\n\nvoid push(int value, int offset){\n    if((cnt[value]+=offset)==1){\n        now.insert(value);\n    }else{\n        now.erase(value);\n    }\n}\n\nint main(){\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        push(-a[i],1);\n        if(i-k>=0) push(-a[i-k],-1);\n        if(i-k>=-1) if(now.empty()) puts(\"Nothing\"); else printf(\"%d\\n\",-*now.begin());\n    }\n}\n```",
        "postTime": 1543585788,
        "uid": 119553,
        "name": "rEdWhitE_uMbrElla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF69E \u3010Subsegments\u3011"
    }
]