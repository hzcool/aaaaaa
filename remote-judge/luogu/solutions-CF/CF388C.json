[
    {
        "content": "\u5148\u6765\u8003\u8651\u6240\u6709\u5806\u5747\u6709\u5076\u6570\u5f20\u724c\u7684\u60c5\u5f62\u3002\n\n\u6211\u4eec\u5c06\u8981\u8bc1\u660e\uff0c\u6700\u7ec8 C \u4f1a\u53d6\u8d70\u6bcf\u5806\u724c\u9876\u7aef\u4e00\u534a\u7684\u724c\uff0cJ \u4f1a\u53d6\u8d70\u6bcf\u5806\u724c\u5e95\u7aef\u4e00\u534a\u7684\u724c\u3002\u5c06\u8fd9\u4e2a\u5c40\u9762\u7b80\u79f0\u4e3a $\\star$\u3002\n\n\u8003\u8651 $\\star$ \u5c40\u9762\u7684\u7279\u6b8a\u6027\u8d28\uff1a\n\n1.  \u65e0\u8bba J \u5982\u4f55\u64cd\u4f5c\uff0cC \u90fd\u53ef\u4ee5\u8feb\u4f7f\u5c40\u9762\u5230\u8fbe $\\star$\u3002\n2.  \u65e0\u8bba C \u5982\u4f55\u64cd\u4f5c\uff0cJ \u90fd\u53ef\u4ee5\u8feb\u4f7f\u5c40\u9762\u5230\u8fbe $\\star$\u3002\n\n1 \u60c5\u5f62\u4e2d C \u7684\u7b56\u7565\u4e3a\uff0c\u6bcf\u6b21\u53d6\u724c\u65f6\uff0c\u82e5\u5df2\u7ecf\u53d6\u8fc7\u7684\u6240\u6709\u724c\u5bf9\u79f0\uff0c\u5219\u4efb\u610f\u53d6\u4e00\u5f20\uff1b\u5426\u5219\u4ece J \u4e0a\u6b21\u53d6\u724c\u7684\u724c\u5806\u53d6\u724c\u30022 \u60c5\u5f62\u4e2d J \u7684\u7b56\u7565\u4e3a\uff1a\u6bcf\u6b21\u4ece C \u53d6\u724c\u7684\u724c\u5806\u53d6\u724c\u3002\n\n\u56e0\u6b64\uff0c\u8003\u8651\u4efb\u610f\u4e00\u4e2a\u4e0e $\\star$ \u4e0d\u540c\u7684\u6700\u7ec8\u5c40\u9762 $\\circ$ \u3002\u82e5 J \u5728 $\\circ$ \u4e2d\u7684\u5f97\u5206\u6bd4\u4ed6\u5728 $\\star$ \u4e2d\u7684\u5f97\u5206\u4f4e\uff0c\u5219\u4ed6\u4e00\u5b9a\u4e0d\u4f1a\u8ba9\u6e38\u620f\u4ee5 $\\circ$ \u7ed3\u675f\uff1b\u5bf9\u4e8e C \u4e5f\u662f\u540c\u7406\u3002\u8fd9\u6837\u770b\u6765\uff0c\u6240\u6709\u5176\u4ed6\u7684\u5c40\u9762\u90fd\u4e0d\u53ef\u80fd\u6210\u4e3a\u7ed3\u675f\u5c40\u9762\uff0c\u6700\u7ec8\u7684\u5c40\u9762\u5c31\u662f $\\star$ \u4e86\u3002 \n\n\u6ce8\u610f\u8fd9\u91cc\u7684\u8fc7\u7a0b\u4e0e\u5148\u540e\u624b\u65e0\u5173\u3002\n\n---\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u6709\u5947\u6570\u7684\u60c5\u5f62\u3002\n\n\u56e0\u4e3a\u6bcf\u5806\u724c\u5806\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u90a3\u4e9b\u5076\u6570\u5806\u7684\u724c\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u5728\u4e00\u8fb9\u4e86\u3002\u6700\u540e\u76f4\u63a5\u9876\u4e00\u534a\u7ed9 C\uff0c\u5e95\u4e00\u534a\u7ed9 J\u3002\n\n\u8003\u8651 C \u53d6\u4e00\u5806\u5947\u6570\u7684\u724c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n\n![img](https://cdn.luogu.com.cn/upload/image_hosting/l3q5tkv2.png)\n\nC \u4ece\u5947\u6570\u5806\u4e2d\u53d6\u8d70\u7b2c\u4e00\u5f20\u724c\uff0c\u628a\u5b83\u53d8\u6210\u5076\u6570\u5806\u7684\u65f6\u5019\uff0c\u6700\u4e2d\u95f4\u8fd9\u5f20\u724c\u7684\u5f52\u5bbf\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u7136\u540e\u8fd9\u5806\u724c\u53d8\u6210\u4e86\u5076\u6570\u6211\u4eec\u5c31\u4e0d\u7ba1\u4e86\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u5947\u6570\u5806\u6765\u8bb2\uff0c\u8c01\u5148\u4ece\u4e2d\u53d6\u724c\uff0c\u8c01\u5c31\u4f1a\u6700\u7ec8\u53d6\u8d70\u4e2d\u95f4\u90a3\u4e2a\u724c\u3002\u90a3\u4e48\u8fd9\u4e00\u6b65\u7684\u7b56\u7565\u663e\u7136\u5e94\u8be5\u662f\u8d2a\u5fc3\uff0cC \u5148\u4ece\u4e2d\u95f4\u90a3\u4e2a\u6570\u6700\u5927\u7684\u5947\u6570\u5806\u53d6\u724c\uff0c\u7136\u540e\u8f6e\u5230 J \u53d6\uff0c\u76f4\u5230\u6ca1\u6709\u5947\u6570\u5806\u4e86\uff0c\u5c31\u8f6c\u5316\u4e3a\u5148\u524d\u7684\u95ee\u9898\u4e86\u3002\u56e0\u4e3a\u524d\u9762\u90a3\u4e2a\u95ee\u9898\u5148\u540e\u624b\u65e0\u5173\uff0c\u56e0\u6b64\u8fd9\u91cc\u6211\u4eec\u4e0d\u9700\u8981\u989d\u5916\u8003\u8651\u662f\u8c01\u53d6\u4e86\u6700\u540e\u4e00\u4e2a\u5947\u6570\u5806\u7684\u77f3\u5b50\u3002\n\n\u8fd9\u65f6\u5019\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5728\u6700\u5f00\u59cb\u8f6e\u6d41\u53d6\u5947\u6570\u5806\u7684\u65f6\u5019\u6709\u4eba\u7a81\u7136\u8dd1\u53bb\u53d6\u5076\u6570\u5806\u4e86\u600e\u4e48\u529e\uff1f\u8fd9\u6837\u7684\u7b56\u7565\u662f\u4e0d\u4f18\u7684\uff0c\u56e0\u4e3a\u4f60\u7684\u5bf9\u624b\u53ef\u4ee5\u53d6\u8d70\u5bf9\u79f0\u7684\u724c\u6765\u62b5\u6d88\u4f60\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u8fd9\u6837\u7684\u7b56\u7565\u4e0d\u53ef\u80fd\u4f7f\u5f97\u5206\u53d8\u9ad8\uff0c\u8fd8\u53ef\u80fd\u4f7f\u5f97\u5206\u53d8\u4f4e\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5bf9\u6574\u4e2a\u6e38\u620f\u8fc7\u7a0b\u7684\u5206\u6790\uff1a\n\n1.  \u53cc\u65b9\u73a9\u5bb6\u8f6e\u6d41\u9009\u62e9\u4e2d\u95f4\u7684\u724c\u4ef7\u503c\u6700\u9ad8\u7684\u3001\u542b\u6709\u5947\u6570\u5f20\u7684\u724c\u5806\uff0c\u53d6\u8d70\u6b64\u724c\u5806\u4e2d\u95f4\u7684\u724c\u3002\n2.  \u5269\u4e0b\u7684\u724c\uff0c\u724c\u5806\u9876\u7684\u4e00\u534a\u7531 C \u83b7\u5f97\uff0c\u5e95\u7684\u4e00\u534a\u7531 J \u83b7\u5f97\u3002\n\n\u7b2c\u4e00\u90e8\u5206\u53ef\u4ee5\u5c06\u6240\u6709\u4e2d\u95f4\u7684\u724c\u653e\u8fdb\u4e00\u4e2a\u6570\u7ec4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u53cc\u65b9\u8f6e\u6d41\u53d6\u8d70\u5269\u4e0b\u7684\u6700\u5927\u7684\u6570\u3002",
        "postTime": 1657178128,
        "uid": 79067,
        "name": "dottle",
        "ccfLevel": 10,
        "title": "CF388C"
    },
    {
        "content": "\u975e\u5e38\u660e\u663e\u7684\u4e00\u9053\u8d2a\u5fc3\u9898\u3002\n\n\u663e\u7136\u4e24\u4eba\u4f1a\u91c7\u53d6\u8fd9\u6837\u7684\u7b56\u7565\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u5806\u724c\uff0c\u4fdd\u62a4\u5c5e\u4e8e\u81ea\u5df1\u5bb9\u6613\u53d6\u5230\u7684\u90a3\u4e00\u534a\u4e0d\u88ab\u5bf9\u65b9\u53d6\u8d70\u3002\n\n\u90a3\u4e48\u5982\u679c\u724c\u6570\u662f\u5947\u6570\u7684\u724c\u5806\u7684\u4e2d\u95f4\u90a3\u4e00\u5f20\uff0c\u5c31\u4f1a\u9677\u5165\u4e24\u96be\u7684\u5883\u5730\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u4e2d\u95f4\u724c\u7684\u6743\u503c\u585e\u5165\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u4e24\u4eba\u8f6e\u6d41\u53d6\u6700\u5927\u503c\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u4e24\u4eba\u6240\u5f97\u5206\u6570\u6700\u5927\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,A,B;\npriority_queue<int>Q;//\u5927\u6839\u5806\nsigned main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&m);\n\t\tfor(int j=1,x;j<=m;j++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(m&1&&j==(m+1)>>1)Q.push(x);//\u4e2d\u95f4\u724c\n\t\t\telse{//\u975e\u4e2d\u95f4\u724c\n\t\t\t\tif(j<=m>>1)A+=x;\n\t\t\t\telse B+=x;\n\t\t\t}\n\t\t}\n\t}\n\tint p=1;\n\twhile(!Q.empty())p?A+=Q.top():B+=Q.top(),Q.pop(),p^=1;//\u8f6e\u6d41\u53d6\u6700\u5927\u503c\n\tprintf(\"%d %d\",A,B);\n\treturn 0;\n}\n```\n",
        "postTime": 1627028549,
        "uid": 120010,
        "name": "CaiXY06",
        "ccfLevel": 6,
        "title": "solution-cf388c"
    },
    {
        "content": "# \u9898\u89e3\n#### \u7ffb\u8bd1\u5df2\u7ecf\u63d0\u4f9b\n## \u8d2a\u5fc3\u89e3\u51b3\n\n\u8d2a\u5fc3\u662f\u6307\u8003\u8651\u5c0fA\u5c0fB\u62ff\u724c\u8fc7\u7a0b\n\n### \u5206\u6790\uff1a\n\u6bcf\u4e2a\u4eba\u80af\u5b9a\u90fd\u60f3\u8981\u5927\u7684\u5206\u6570\u7684\u724c\uff0c\u5982\u679c\u8fd9\u5f20\u724c\u5728\u5c0fA\u8fd9\u8fb9\uff08\u5728\u67d0\u4e00\u5806\u4e2d\u4f4d\u7f6e\u66f4\u9760\u8fd1\u4e0a\u90e8\uff09\uff0c\u5c0fA\u663e\u7136\u4e0d\u4f1a\u653e\u5f03\u8fd9\u5f20\u724c\uff0c\u5373\u5979\u770b\u5230\u5c0fB\u53d6\u8fd9\u5806\u7684\u5806\u5e95\u65f6\uff0c\u4e5f\u53ef\u53d6\u5806\u9876\uff0c\u9632\u6b62\u5c0fB\u90a3\u9053\u90a3\u5f20\u724c\n\n### \u7ed3\u8bba\uff1a\n\u8c01\u90fd\u4e0d\u653e\u5f03\u81ea\u5df1\u7684\u5927\u724c\uff0c\u5c31\u5bfc\u81f4\u5c0fA\u548c\u5c0fB\u80fd\u4e14\u53ea\u80fd\u62ff\u5230\u79bb\u81ea\u5df1\u8fd1\u7684\u724c\n\n### \u89e3\u51b3\uff1a\n\u5bf9\u4e8e\u6709\u5076\u6570\u5f20\u724c\u7684\u5806\uff1a\u5c0fA\u5c0fB\u5404\u62ff\u4e00\u534a\uff0c\u7b54\u6848\u52a0\u4e0a\u8fd9\u4e9b\u724c\u7684\u5206\u6570\u5373\u53ef\n\n\u5bf9\u4e8e\u6709\u5947\u6570\u5f20\u724c\u7684\u5806\uff1a\u5c0fA\u548c\u5c0fB\u5148\u6309\u7167\u7b56\u7565\u62ff\u5f97\u53ea\u5269\u4e2d\u95f4\u4e00\u5f20\uff0c\u6700\u540e\u4f1a\u5269\u4e0b\u201c\u5947\u6570\u5806\u6570\u201d\u5f20\u7684\u201c\u4e2d\u95f4\u201d\u3002\n\u5bf9\u4e8e\u8fd9\u4e9b\u724c\uff0c\u6309\u5206\u6570\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5c0fA\u5c0fB\u4f9d\u6b21\u62ff\uff0c\u76f4\u81f3\u62ff\u5b8c\uff0c\u7b54\u6848\u4e5f\u5f88\u597d\u7edf\u8ba1\n\n\u8bf4\u660e\uff1a\u4e3a\u4ec0\u4e48\u5bf9\u4e8e\u201c\u4e2d\u95f4\u201d\u724c\u662f\u5c0fA\u5148\u62ff\u5462\uff1f\n\u56e0\u4e3a\u4e4b\u524d\u5c0fA\u62ff\u4e00\u5f20\uff0c\u5c0fB\u62ff\u4e00\u5f20\uff0c\u5b8c\u5168\u5bf9\u79f0\uff0c\u6240\u4ee5\u53d6\u5230\u6700\u540e\u5c40\u9762\u7684\u65f6\u5019\uff0c\u4ecd\u662f\u5c0fA\u5148\u62ff\n\n## code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a,mid[110],ans1,ans2,tot;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&m);\n\t\tfor(int j=1;j<=m>>1;++j)\n\t\t\tscanf(\"%d\",&a),ans1+=a;\n\t\tif(m&1)\n\t\t\tscanf(\"%d\",&mid[++tot]);\n\t\tfor(int j=1;j<=m>>1;++j)\n\t\t\tscanf(\"%d\",&a),ans2+=a;\n\t}\n\tsort(mid+1,mid+tot+1);\n\tfor(int i=tot;i>0;i-=2)\n\t\tans1+=mid[i];\n\tfor(int i=tot-1;i>0;i-=2)\n\t\tans2+=mid[i];\n\tprintf(\"%d %d\",ans1,ans2);\n\treturn 0;\n}\n```\n",
        "postTime": 1596270778,
        "uid": 286239,
        "name": "ql12345",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF388C \u3010Fox and Card Game\u3011"
    },
    {
        "content": "\u4ee3\u7801\u5b9e\u73b0\u65e0\u5927\u533a\u522b\uff0c\u4f46\u601d\u8def\u7565\u6709\u4e0d\u540c\u3002\n\n## \u3010\u601d\u8def\u3011\n\u4e2a\u4eba\u4f18\u5148\u4ece\u72b6\u6001\u7684\u5f97\u5206\u60c5\u51b5\u6765\u8ba8\u8bba\u3002\n\n\u9996\u5148\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u5927\u5c0f\u4e3a $k$ \u7684\u724c\u5806\uff0c\u65e0\u8bba $k$ \u662f\u5947\u6570 \u8fd8\u662f\u5076\u6570\uff0c\u53cc\u65b9\u90fd\u5fc5\u5b9a\u6709\u7b56\u7565\u4f7f\u5f97\u9760\u8fd1\u81ea\u5df1\u7684 $\\lfloor\\frac{k}{2}\\rfloor$ \u5f20\u724c\u4e0d\u88ab\u5bf9\u624b\u62ff\u5230\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u5e94\u8be5\u4e0d\u9700\u8981\u8be6\u7ec6\u8bf4\u5427\uff0c\u8981\u662f\u6211\u771f\u7684\u60f3\u8981\u4fdd\u7559\u81ea\u5df1\u8fd9\u8fb9\u7684\u724c\u90a3\u4e48\u5bf9\u624b\u6bcf\u6b21\u62ff\u4e00\u5f20\u8fd9\u4e2a\u724c\u5806\u7684\u724c\uff0c\u6211\u5c31\u53ef\u4ee5\u53bb\u62ff\u540c\u4e00\u724c\u5806\u7684\u6700\u540e\u4e00\u5f20\uff0c\u4e00\u76f4\u62ff\u5230\u4e0d\u5269\u6216\u8005\u5269\u6700\u540e\u4e00\u5f20\u3002\n\n\u8fdb\u4e00\u6b65\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u5b9a\u4f1a\u62ff\u5230\u9760\u8fd1\u81ea\u5df1\u7684 $\\lfloor\\frac{k}{2}\\rfloor$ \u5f20\u724c\u3002\n\n\u8fd9\u4e2a\u4e5f\u4e0d\u96be\u5206\u6790\uff0c\u9996\u5148\u5bf9\u624b\u4e0d\u53ef\u80fd\u6765\u62a2\u4f60\u4e00\u4e2a **\u53ef\u4ee5\u653e\u5f03** \u7684\u724c\u5806\uff0c\u8fd9\u91cc **\u53ef\u4ee5\u653e\u5f03** \u662f\u6307\u4f60\u4e0d\u9700\u8981\u4fdd\u62a4\u4f60\u81ea\u5df1\u8fd9\u4e2a\u724c\u5806\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u5bf9\u624b\u6765\u62a2\uff0c\u90a3\u4e48\u5fc5\u7136\u5728\u53e6\u4e00\u4e2a\u724c\u5806\u4e2d\u6709\u4e00\u5f20 **\u4f60\u539f\u6765\u591f\u4e0d\u5230\uff0c\u5bf9\u624b\u7ed9\u673a\u4f1a\u4e4b\u540e\u4f60\u5c31\u591f\u5f97\u5230\u4e86\u7684\uff0c\u6bd4\u4f60\u5f53\u524d\u724c\u5806\u4fdd\u62a4\u7684\u724c\u66f4\u5927\u7684\u724c**\uff08\u6709\u70b9\u7ed5\uff0c\u81ea\u884c\u7406\u89e3\u4e00\u4e0b\uff09\uff0c\u7531\u4e8e\u53cc\u65b9\u90fd\u662f\u6700\u4f18\u7b56\u7565\uff0c\u5bf9\u624b\u4e00\u5b9a\u4e0d\u4f1a\u7ed9\u4f60\u673a\u4f1a\uff0c\u800c\u53bb\u653b\u53e6\u4e00\u4e2a\u724c\u5806\uff0c\u800c\u4e0d\u662f\u4f60\u8fd9\u4e2a\u53ef\u4ee5\u653e\u5f03\u7684\u724c\u5806\u3002\n\n\u90a3\u4e48\uff0c\u7531\u4e8e\u5bf9\u624b\u653b\u7684\u6bcf\u4e00\u4e2a\u724c\u5806\u90fd **\u4e0d\u53ef\u653e\u5f03** \uff0c\u4f60\u5c31\u5fc5\u5b9a\u548c\u5bf9\u624b\u4f1a\u4e92\u76f8\u62ff\u8d70\u9760\u8fd1\u81ea\u5df1\u7684 $\\lfloor\\frac{k}{2}\\rfloor$ \u5f20\u724c \u3002\n\n\u6700\u540e\u8003\u8651 $k$ \u4e3a\u5947\u6570\u7684\u60c5\u51b5\u3002\n\n\u5df2\u7ecf\u5f88\u7b80\u5355\u4e86\u3002\n\n\u7531\u4e8e\u6240\u6709\u724c\u5806\u90fd\u53ea\u5269\u4e0b\u4e00\u5f20\u724c\u6216\u4e00\u5f20\u4e5f\u4e0d\u5269\uff0c\u800c\u4e14\u663e\u7136\u62ff\u5b8c\u5076\u6570\u5f20\u724c\u540e\uff0c\u5148\u624b\u8fd8\u662f\u5148\u624b\u3002\n\n\u90a3\u4e48\u53cc\u65b9\u7684\u6700\u4f18\u7b56\u7565\u90fd\u662f\u76f4\u63a5\u62ff\u5f53\u524d\u6240\u6709\u724c\u4e2d\u6700\u5927\u7684\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntemplate <typename T>\ninline void read(T &x){\n    x = 0;int fu = 1;\n    char c = getchar();\n    while(c > 57 || c < 48){\n        if(c == 45) fu = -1;\n        c = getchar();\n    }\n    while(c <= 57 && c >= 48){\n        x = (x << 3) + (x << 1) + c - 48;\n        c = getchar();\n    }\n    x *= fu;\n}\ntemplate <typename T>\ninline void fprint(T x){\n    if(x < 0) putchar(45), x = -x;\n    if(x > 9) fprint(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T>\ninline void fprint(T x, char ch){\n    fprint(x);putchar(ch);\n}\n\nint n, ans1, ans2;\nvector <int> vec;\nint main(){\n    read(n);\n    while(n --){\n        int k;read(k);\n        for (register int i = 1;i <= k;i ++){\n            int x;read(x);\n            if(i <= (k >> 1)) ans1 += x;\n            else if((k & 1) && i == ((k + 1) >> 1)) vec.push_back(x);\n            else ans2 += x;\n        }\n    }\n    sort(vec.begin(), vec.end());\n    int it = 1;\n    while(!vec.empty()){\n        if(it) ans1 += vec.back();\n        else ans2 += vec.back();\n        vec.pop_back();it ^= 1;\n    }\n    fprint(ans1, 32);fprint(ans2, 10);\n    return 0;\n}\n```",
        "postTime": 1601335212,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF388C \u3010Fox and Card Game\u3011"
    },
    {
        "content": "\u7b80\u5355\u9898\uff0c\u6c34\u8bc4$\\texttt\\color{blueviolet}\\colorbox{white}{\u7d2b}$\u3002\n\n\u65b9\u6cd5\u548c\u697c\u4e0a $dalao$ \u5dee\u4e0d\u591a\uff0c\u672c\u6587\u91cd\u5728\u601d\u8def\u3002\n\n------------\n\n### \u6837\u4f8b\u624b\u73a9\uff1a\n\n\u6211\u4eec\u5206\u522b\u4ee5 $A$\u3001$B$ \u4e24\u4eba\u7684\u4e3b\u89c6\u89d2\u6765\u5c1d\u8bd5\u60f3\u51fa\u601d\u8def\uff0c\u7528\u7684\u662f\u7b2c3\u7ec4\u6837\u4f8b\uff1a\n\n```\n3\n3 1 3 2\n3 5 4 6\n2 8 7\n```\n\n\u6211\u4eec\u9996\u5148\u6e05\u695a\uff0c\u5018\u82e5\u4e00\u5f20\u724c\u5728\u724c\u5806\u4e2d\u7684\u4f4d\u7f6e\u662f\u9760 $A$ \u8fd9\u4e00\u8fb9\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u65ad\u5b9a $A$ \u5728\u62ff\u8fd9\u5f20\u724c\u65f6**\u66f4\u6709\u4f18\u52bf**\u3002\n\n\u5bf9\u4e8e $A$ \u6765\u8bf4\uff0c\u4ed6\u5728**\u62ff\u724c\u65b9\u9762**\u6bd4\u8f83\u5360\u4f18\u52bf\u7684\u6709\uff1a\u58061\u4e2d\u7684\u70b9\u6570\u4e3a1\u7684\u724c\uff08\u4ee5\u4e0b\u4ee5 $(1,1)$ \u5f62\u5f0f\u8868\u793a\uff09\uff0c $(2,5)$ \uff0c $(3,8)$ \u3002\n\n\u5bf9\u4e8e $B$ \u6765\u8bf4\uff0c\u4ed6\u5728**\u62ff\u724c\u65b9\u9762**\u6bd4\u8f83\u5360\u4f18\u52bf\u7684\u6709\uff1a$(1,2)$ \uff0c $(2,6)$ \uff0c$(3,7)$ \u3002\n\n\u800c\u4e4b\u4e8e $(1,3)$ \u548c $(2,4)$ \uff0c\u5219\u4e24\u8fb9\u7684\u4f18\u52bf\u76f8\u7b49\uff0c\u4e92\u4e0d\u5403\u4e8f\u3002\n\n-------\n\n### \u7b56\u7565\u6a21\u62df\uff1a\n\n\u73b0\u5728\u6211\u4eec\u4ece $A$ \u5f00\u59cb\u3002$A$ \u8ba4\u4e3a\uff0c\u62ff\u4e00\u5f20\u5bf9\u65b9\u6709\u4f18\u52bf\u7684\u5361\u8981\u4ed8\u51fa\u7684**\u6b65\u6570\u7684\u4ee3\u4ef7**\u5fc5\u7136\u5f88\u5927\uff0c\u5bf9\u65b9\u5982\u679c\u770b\u51fa\u4e86\u8fd9\u4e00\u610f\u56fe\uff0c\u5fc5\u80fd\u4ee5**\u8f83\u5c11\u7684\u6b65\u6570**\u91c7\u53d6\u4fdd\u536b\u63aa\u65bd\u3002\u6240\u4ee5 $A$ \u51b3\u5b9a\u62ff\u81ea\u5df1**\u638c\u63e1\u4f18\u52bf**\u7684\u724c\u3002\u4ed6\u5148\u62ff\u4e86\u4e00\u5f20 $(3,8)$ \u3002\n\n\u56de\u5408\u8f6e\u5230 $B$ \uff0c\u4ed6\u4e5f\u8ba4\u4e3a\u62ff\u81ea\u5df1\u638c\u63e1\u4f18\u52bf\u7684\u724c\u66f4\u4e3a\u5212\u7b97\uff0c\u6240\u4ee5\u4ed6\u62ff\u4e86\u4e00\u5f20 $(3,7)$ \u3002\n\n\u4e24\u4eba\u4f60\u6765\u6211\u5f80\u4e86\u51e0\u4e2a\u56de\u5408\u3002\u81ea\u5df1\u6700\u521d\u6709\u4f18\u52bf\u7684\u724c\u90fd\u5df2\u7ecf\u88ab\u62ff\u5b8c\u4e86\u3002\n\n**\u6ce8\u610f**\uff1a\u201d\u62ff\u5b8c\u6709\u4f18\u52bf\u7684\u724c\u201c\u8fd9\u4e00\u60c5\u51b5\u5fc5\u7136\u5728**\u76f8\u90bb**\u7684\u4e24\u56de\u5408\u53d1\u751f\uff0c\u4e14\u8fd9\u4e00\u60c5\u51b5\u7ed3\u675f\u540e**\u5fc5\u4e3a $A$ \u7684\u56de\u5408**\uff0c\u56e0\u4e3a\u4e24\u4eba\u6700\u5f00\u59cb\u7684\u4f18\u52bf\u724c\u6570\u662f**\u76f8\u7b49**\u7684\u3002\n\n\u73b0\u5728\u573a\u4e0a\u5269\u4e0b\u4e24\u5f20\u724c\uff0c$(1,3)$ \u548c $(2,4)$ \uff0c\u5982\u679c $A$ \u7761\u7720\u5145\u8db3\uff0c\u4ed6\u4e0d\u7528\u60f3\u4e5f\u77e5\u9053\u8be5\u62ff\u6700\u5927\u7684\u90a3\u5f20\u3002\n\n\u4e3a\u4ec0\u4e48\u4ed6**\u53ef\u4ee5\u62ff\u5230**\u6700\u5927\u7684\u90a3\u5f20\uff1f\n\n\u56e0\u4e3a\u4f18\u52bf\u5747\u7b49\u7684\u724c\uff0c\u5728\u6bcf\u4e00\u5806\u4e2d\u90fd\u6700\u591a\u53ea\u6709**\u4e00\u4e2a**\uff08\u5018\u82e5\u6709\u4e24\u4e2a\u5c31\u5fc5\u7136\u5206\u9760\u4e24\u65b9\uff09\uff0c\u6545\u6700\u540e\u5269\u4e0b\u7684\u8fd9\u4e9b\u724c\uff0c\u76f8\u4e92\u4e4b\u95f4\u5fc5\u7136\u6ca1\u6709\u6761\u4ef6\u5173\u7cfb\u3002\u90a3\u4ed6\u53d6\u54ea\u5f20\u90fd\u662f\u5408\u6cd5\u7684\u3002\n\n\u6700\u540e\u4e24\u4e2a\u4eba\u8f6e\u6d41\u53d6\u5b8c\u5f53\u65f6\u60c5\u51b5\u4e0b\u70b9\u6570\u6700\u5927\u7684\u724c\uff0c\u6e38\u620f\u7ed3\u675f\u4e86\u3002\n\n------\n\n### \u5b9e\u73b0\u6709\u5173\uff1a\n\n\u6211\u4eec\u56de\u60f3\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u524d\u9762\u7684\u4f60\u6765\u6211\u5f80\u5b9e\u5219\u53ef\u4ee5\u5f52\u7ed3\u4e3a\u4e00\u53e5\u8bdd\uff1a**\u4e24\u4e2a\u4eba\u90fd\u628a\u81ea\u5df1\u6709\u4f18\u52bf\u7684\u724c\u7ed9\u62ff\u5b8c\u4e86**\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u6709\u4f18\u52bf\u7684\u724c\u662f\u5fc5\u7136\u786e\u5b9a\u7684\uff0c\u5c31\u662f\u6bcf\u4e00\u5806\u4e2d**\u9760\u4e0a\u7684\u4e00\u534a**\u548c**\u9760\u4e0b\u7684\u4e00\u534a**\u3002\n\n\u6b64\u5916\uff0c\u5018\u82e5\u724c\u5806\u4e2d\u724c\u7684\u6570\u91cf\u662f\u5947\u6570\uff0c\u5219\u6700\u4e2d\u95f4\u7684\u90a3\u5f20\u88ab\u5b9a\u4e3a**\u4f18\u52bf\u5747\u7b49\u7684\u724c**\u3002\n\n\u6211\u4eec\u5148\u628a\u4f18\u52bf\u724c\u7684\u70b9\u6570\u52a0\u5230 $A$ \u3001 $B$ \u7684\u5f97\u5206\u4e0a\u53bb\u3002\n\n\u5bf9\u4e8e\u4f18\u52bf\u5747\u7b49\u7684\u724c\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u53d6\u70b9\u6570\u6700\u5927\u7684\uff0c\u53ef\u4ee5\u7528**\u4f18\u5148\u961f\u5217**\u6765\u7ef4\u62a4\u8fd9\u4e00\u6700\u5927\u503c\u3002\n\n\u76f4\u5230\u4f18\u5148\u961f\u5217\u4e3a\u7a7a\uff0c\u6e38\u620f\u5373\u53ef\u7ed3\u675f\u3002\n\n------------\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 107;\nint N;\nint card[MAX][MAX], num[MAX];\nint A, B;\npriority_queue<int> q;\nint main()\n{\n\tcin >> N;\n    \n\tfor (int i = 1; i <= N; i++)\n\t{\n\t\tcin >> num[i];\n        \n        /*\u8f93\u5165\u6570\u636e*/\n\t\tfor (int j = 1; j <= num[i]; j++)\n\t\t{\n\t\t\tcin >> card[i][j];\n\t\t}\n        \n        /*\u62ff\u4f18\u52bf\u724c*/\n\t\tfor (int j = 1; j <= num[i] / 2; j++)\n\t\t{\n\t\t\tA += card[i][j];\n\t\t\tB += card[i][num[i] - j + 1];\n\t\t}\n        \n        /*\u4f18\u52bf\u5747\u52bf\u724c\u5165\u4f18\u5148\u961f\u5217*/\n\t\tif (num[i] % 2)\n\t\t{\n\t\t\tq.push(card[i][num[i] / 2 + 1]);\n\t\t}\n        \n\t}\n\tint turn = 1;\n    \n    /*\u62ff\u5f53\u524d\u6700\u5927\u724c*/\n\twhile (!q.empty())\n\t{\n\t\tif (turn)\n\t\t{\n\t\t\tA += q.top();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tB += q.top();\n\t\t}\n\t\tq.pop();\n\t\tturn = 1 - turn;\n\t}\n\tcout << A << ' ' << B << endl;\n}\n```\n",
        "postTime": 1601303140,
        "uid": 150879,
        "name": "quest_2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF388C \u3010Fox and Card Game\u3011"
    },
    {
        "content": "### \u9898\u610f\u6982\u8ff0\n\n\u6709 $n$ \u5806\u724c\uff0c\u6bcf\u5806\u724c\u4e2d\u6709 $s_i$ \u5f20\u724c\uff0c\u6bcf\u5f20\u724c\u4e0a\u6709\u4e00\u4e2a\u6570\u5b57 $c_i$ \u3002\n\n$( 1 \\leq n \\leq 100 , 1 \\leq s_i \\leq 100 , 1 \\leq c_i \\leq 1000 )$\n\n\u73b0\u6709 A \u5148\u624b\uff0cB \u540e\u624b\u8f6e\u6d41\u4ece\u724c\u5806\u4e2d\u62bd\u724c\u3002A \u53ea\u80fd\u4ece\u724c\u5806\u9876\u62bd\u8d77\uff0cB \u53ea\u80fd\u4ece\u724c\u5806\u5e95\u62bd\u8d77\u3002\n\nA B \u4e24\u4eba\u5747\u8d2a\u5a6a\uff0c\u5373\u671f\u671b\u6240\u62bd\u724c\u4e0a\u7684\u6570\u5b57\u4e4b\u548c\u6700\u5927\uff0c\u4e14\u5747\u505a\u5b8c\u5168\u7406\u6027\u51b3\u7b56\uff0c\u6c42\u4e24\u4eba\u5404\u81ea\u6240\u62bd\u53d6\u7684\u724c\u4e0a\u7684\u6570\u5b57\u4e4b\u548c\u3002\n\n---\n\n### \u601d\u8def\n\n\u6839\u636e\u62bd\u724c\u7684\u89c4\u5219\uff0c\u4e00\u5806\u724c\u4e00\u5b9a\u80fd\u88ab\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u62bd\u53d6\u7ed3\u675f\uff1a\n\n\u672c\u5806\u724c\u7684\u524d $\\lfloor \\frac{n}{2} \\rfloor$ \u5f20\u724c\u88ab A \u62bd\u53d6\uff0c\u540e $\\lfloor \\frac{n}{2} \\rfloor$ \u5f20\u724c\u88ab B \u62bd\u53d6\u3002\n\n\u5982\u679c\u6709\u4e00\u5f20\u724c\u5269\u4f59\uff0c\u5219\u88ab\u5f00\u59cb\u62bd\u53d6\u672c\u5806\u724c\u65f6\u7684\u5148\u624b\u65b9\u62bd\u53d6\u3002\n\n\u56e0\u4e3a\u4e24\u8005\u5747\u8d2a\u5a6a\uff0c\u6240\u4ee5\u53ef\u80fd\u6709\u4e00\u8005\u8bd5\u56fe\u7528\u81ea\u5df1\u4e00\u4fa7\u7684\u4e00\u5f20\u724c\u53bb\u201c\u6362\u53d6\u201d\u5bf9\u65b9\u4e00\u4fa7\u7684\u4e00\u5f20\u6570\u5b57\u66f4\u5927\u7684\u724c\u3002\n\n\u6211\u4eec\u4e3e\u51fa\u4f8b\u5b50\uff1a\n\n\u6709\u4e24\u5806\u724c\uff0c\u5206\u522b\u4e3a $\\{ 5,6,1,5\\}$ \u4e0e $\\{ 5,2,6,5\\}$\u3002\n\n\u6b64\u65f6 B \u53ef\u80fd\u4f1a\u8bd5\u56fe\u653e\u5f03\u7b2c\u4e00\u5806\u4e2d\u7684 $1$ \u4ee5\u6362\u53d6\u7b2c\u4e8c\u5806\u4e2d\u7684 $2$ \u3002\n\n\u4f46\u56e0\u4e3a A \u540c\u6837\u8d2a\u5a6a\uff0c\u6240\u4ee5 A \u7edd\u4e0d\u4f1a\u8ba9 B \u5f97\u624b\u3002\n\n\u56e0\u4e3a A \u4e0e B \u8f6e\u6d41\u62bd\u724c\uff0c\u8d77\u521d\u540e\u624b\u65b9\u53ef\u4ee5\u4e00\u76f4\u8ddf\u5148\u624b\u65b9\u5bf9\u79f0\u62bd\u724c\u3002\n\n\u5047\u5982\u540e\u624b\u65b9\u4e0d\u8ddf\u7740\u5148\u624b\u65b9\u5bf9\u79f0\u62bd\u724c\u4e86\uff0c\u5148\u624b\u65b9\u5c31\u53ef\u4ee5\u53cd\u8fc7\u6765\u8ddf\u7740\u540e\u624b\u65b9\u5bf9\u79f0\u62bd\u724c\uff0c\u4f7f\u5f97\u540e\u624b\u65b9\u603b\u662f\u6ca1\u6709\u673a\u4f1a\u6362\u8d70\u5148\u624b\u65b9\u4e00\u4fa7\u7684\u4f18\u52bf\u724c\u3002\n\n\u6240\u4ee5\u5728 B \u62bd\u8d70\u7b2c\u4e8c\u5806\u7684 $6$ \u65f6\uff0cA \u5c31\u4f1a\u7acb\u523b\u628a $2$ \u62bd\u8d70\uff0c\u8ba9 B \u65e0\u6cd5\u5f97\u901e\u3002\n\n\u90a3\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u540e\u624b\u65b9\u4e00\u4fa7\u62ff\u5230\u4e86\u4f18\u52bf\u724c\uff0c\u53ea\u8981\u5b83\u4e00\u76f4\u4e0e\u5148\u624b\u65b9\u5bf9\u79f0\u51fa\u724c\uff0c\u5148\u624b\u65b9\u4e5f\u662f\u6c38\u8fdc\u6362\u4e0d\u8d70\u4ed6\u7684\u4f18\u52bf\u724c\u7684\u3002\n\n\u7efc\u4e0a\uff0c**\u6362\u724c\u6709\u76c8\u6709\u4e8f\uff0c\u800c\u8d2a\u5a6a\u7684\u53cc\u65b9\u603b\u662f\u4f1a\u4fdd\u62a4\u81ea\u5df1\u4e0d\u53d7\u4e8f\u635f\uff0c\u6240\u4ee5\u6362\u724c\u662f\u4e0d\u53ef\u80fd\u5b9e\u73b0\u7684\u3002**\n\n\u4f46\u6211\u4eec\u8fd8\u6ca1\u8003\u8651\u6bcf\u5806\u724c\u5269\u4e0b\u7684\u5355\u5f20\u724c\u3002\n\n\u5176\u5b9e\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u4e00\u5806\u724c\u7684\u724c\u6570\u4e3a\u5076\u6570\u65f6\uff0c\u4ea4\u6362\u5148\u540e\u624b\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\n\n\u4f46\u662f\u5f53\u4e00\u5806\u724c\u4e3a\u5947\u6570\u65f6\uff0c\u5269\u4e0b\u7684\u4e00\u5f20\u724c\u4f1a\u88ab\u5148\u624b\u65b9\u62bd\u53d6\uff0c\u5e76\u4e14\u4f7f\u5b83\u5728\u65b0\u7684\u4e00\u4e2a\u724c\u5806\u91cc\u53d8\u4e3a\u540e\u624b\u65b9\u3002\n\n\u56e0\u4e3a\u6ca1\u6709\u89c4\u5b9a\u5fc5\u987b\u62bd\u5b8c\u4e00\u4e2a\u724c\u5806\u624d\u80fd\u5f00\u4e0b\u4e00\u4e2a\u724c\u5806\uff0c\u6240\u4ee5\u8fd9\u65f6\u6bcf\u4e2a\u5947\u6570\u724c\u6570\u7684\u724c\u5806\uff0c\u90fd\u53ef\u4ee5\u628a\u5b83\u7684\u4e2d\u95f4\u8fd9\u5f20\u724c\u5148\u62bd\u51fa\u6765\uff0c\u5de6 A \u53f3 B\uff0c\u6700\u540e\u518d\u6765\u8003\u8651\u600e\u4e48\u53d6\u8fd9\u4e9b\u4e2d\u95f4\u724c\u3002\n\n\u56e0\u4e3a\u6bcf\u62bd\u53d6\u4e00\u5f20\u4e2d\u95f4\u724c\uff0c\u5148\u540e\u624b\u5c31\u53d8\u4e00\u6b21\uff0c\u5e76\u4e14 A \u548c B \u90fd\u8d2a\u5a6a\uff0c\u6240\u4ee5 A \u548c B \u4f1a\u5728\u8fd9\u4e9b\u4e2d\u95f4\u724c\u4e2d\u8f6e\u6d41\u62bd\u8d70\u6700\u5927\u7684\u90a3\u5f20\u3002\n\n---\n\n### Code\n\n```cpp\n#include <queue>\n#include <cstdio>\nusing namespace std;\n\nconst int MAXN=3e5+10;\nint T,n,a[MAXN],ansa,ansb;\npriority_queue<int> q;\n\ninline int read()\n{\n\tint x=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x;\n}\n\nint main()\n{\n\tT=read();\n\twhile (T--)\n\t{\n\t\tn=read();\n\t\tfor (int i=1;i<=(n>>1);i++) ansa+=read();\n\t\tif (n&1) q.push(read());\n\t\tfor (int i=1;i<=(n>>1);i++) ansb+=read();\n\t}\n\twhile (!q.empty())\n\t{\n\t\tansa+=q.top();\n\t\tq.pop();\n\t\tif (!q.empty())\n\t\t{\n\t\t\tansb+=q.top();\n\t\t\tq.pop();\n\t\t}\n\t}\n\tprintf(\"%d %d\",ansa,ansb);\n\treturn 0;\n}\n```\n",
        "postTime": 1647869988,
        "uid": 253712,
        "name": "jzcrq",
        "ccfLevel": 6,
        "title": "CF388C Fox and Card Game \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u684c\u5b50\u4e0a\u6709 $n$ \u5806\u724c\uff0c\u6bcf\u5f20\u724c\u4e0a\u90fd\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u3002\n\n`A` \u53ef\u4ee5\u4ece\u4efb\u4f55\u975e\u7a7a\u724c\u5806\u7684\u9876\u90e8\u53d6\u51fa\u4e00\u5f20\u724c\uff0c`B` \u53ef\u4ee5\u4ece\u4efb\u4f55\u975e\u7a7a\u724c\u5806\u7684\u5e95\u90e8\u53d6\u51fa\u4e00\u5f20\u724c\u3002\n\n`A` \u5148\u53d6\uff0c\u5f53\u6240\u6709\u7684\u724c\u5806\u90fd\u53d8\u7a7a\u65f6\u6e38\u620f\u7ed3\u675f\u3002\n\n\u4ed6\u4eec\u90fd\u60f3\u6700\u5927\u5316\u4ed6\u6240\u62ff\u724c\u7684\u5206\u6570\uff08\u5373\u6bcf\u5f20\u724c\u4e0a\u6b63\u6574\u6570\u7684\u548c\uff09\u3002\n\n\u95ee\u4ed6\u4eec\u6240\u62ff\u724c\u7684\u5206\u6570\u5206\u522b\u662f\u591a\u5c11\uff1f\n\n### \u89e3\u9898\u601d\u8def\n\n\u7ecf\u5178\u7684\u535a\u5f08\u8bba\u3002\n\n\u663e\u7136\u7684\u8d2a\u5fc3\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5806\u724c\uff0c\u4e24\u4e2a\u4eba\u90fd\u8981\u4fdd\u62a4\u5c5e\u4e8e\u81ea\u5df1\u90a3\u4e00\u534a\u4e0d\u88ab\u62ff\u8d70\uff08\u4e0a\u9762\u7684\u4e00\u534a\u6216\u4e0b\u9762\u7684\u4e00\u534a\uff09\u3002\n\n\u90a3\u4e48\u5982\u679c\u724c\u5806\u4e2d\u724c\u6570\u662f\u5076\u6570\uff0c\u90a3\u4e48\u5404\u81ea\u5206\u4e00\u534a\u3002\n\n\u5426\u5219\uff0c\u724c\u5806\u4e2d\u724c\u6570\u662f\u5947\u6570\uff0c\u90a3\u4e48\u4f1a\u5728\u4e2d\u95f4\u90a3\u4e00\u5f20\u4e0a\u8d77\u4e89\u6267\u3002\n\n\u4e8e\u662f\u4e24\u4e2a\u4eba\u5c31\u4f1a\u8f6e\u6d41\u53d6\u4e2d\u95f4\u724c\u7684\u6700\u5927\u503c\u3002\n\n\u7528 `priority_queue` \u7ef4\u62a4\u5f53\u524d\u8fd8\u5269\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\n### CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, m;\n\nint a[100007];\n\nint A, B;\n\npriority_queue<int> pq;\n\nsigned main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1, j, x; i <= n; ++i)\n    {\n        scanf(\"%d\", a + i);\n        for (j = 1; j <= (a[i] >> 1); ++j)\n        {\n            scanf(\"%d\", &x);\n            A += x;\n        }\n        if (a[i] & 1)\n        {\n            scanf(\"%d\", &x);\n            pq.push(x);\n            ++j;\n        }\n        for (; j <= a[i]; ++j)\n        {\n            scanf(\"%d\", &x);\n            B += x;\n        }\n    }\n    int p = 1;\n    while (!pq.empty())\n    {\n        if (p)\n            A += pq.top();\n        else\n            B += pq.top();\n        pq.pop();\n        p ^= 1;\n    }\n    printf(\"%d %d\\n\", A, B);\n    return 0;\n}\n```",
        "postTime": 1636262558,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF388C Fox and Card Game"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\n\u57fa\u7840\u535a\u5f08\u8bba\uff0c\u8d2a\u5fc3\n## \u601d\u8def\n\u663e\u7136\u4e24\u4e2a\u4eba\u90fd\u8981\u4fdd\u62a4\u81ea\u5df1\u5e94\u8be5\u5f97\u5230\u7684\u90a3\u4e00\u534a\uff08\u4e0a\u9762\u7684\u4e00\u534a\u6216\u4e0b\u9762\u7684\u4e00\u534a\uff09\u3002\n\n\u90a3\u4e48\u5982\u679c\u724c\u5806\u4e2d\u724c\u6570\u662f\u5076\u6570\uff0c\u90a3\u4e48\u5404\u81ea\u5206\u4e00\u534a\u3002\n\n\u5982\u679c\u724c\u5806\u4e2d\u724c\u6570\u662f\u5947\u6570\uff0c\u90a3\u4e48\u4f1a\u5728\u4e2d\u95f4\u90a3\u4e00\u5f20\u4e0a\u8d77\u4e89\u6267\u3002\n\n\u4e8e\u662f\u4e24\u4e2a\u4eba\u5c31\u4f1a\u8f6e\u6d41\u53d6\u6700\u5927\u503c\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u7528\u5927\u6839\u5806\u7ef4\u62a4\u5f53\u524d\u8fd8\u5269\u7684\u6700\u5927\u503c\u4e86\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[100001];\nint A,B;//\u4e24\u4e2a\u4eba\u7684\u603b\u6570 \npriority_queue<int> pq;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,j,x;i<=n;++i){\n\t\tscanf(\"%d\",a+i);\n\t\tfor(j=1;j<=(a[i]>>1);++j){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tA+=x;\n\t\t}//B\u7684\n\t\tif(a[i]&1){\n\t\t\tscanf(\"%d\",&x);//\u4e2d\u95f4\u724c \n\t\t\tpq.push(x);\n\t\t\t++j;\n\t\t}\n\t\tfor(;j<=a[i];++j){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tB+=x;\n\t\t}//B\u7684 \n\t}\n\tint p=1;//\u5f53\u524d\u8c01\u53d6 \n\twhile(!pq.empty()){\n\t\tif(p)A+=pq.top();\n\t\telse B+=pq.top();\n\t\tpq.pop();\n\t\tp^=1;\n\t\t//\u8f6e\u6d41\u53d6\u6700\u5927\u503c\n\t}\n\tprintf(\"%d %d\\n\",A,B);\n\treturn 0;\n}\n```\n",
        "postTime": 1629900429,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "CF388C Fox and Card Game \u9898\u89e3"
    }
]