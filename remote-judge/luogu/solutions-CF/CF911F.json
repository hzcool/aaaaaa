[
    {
        "content": "\u6211\u4eec\u9700\u8981\u6700\u5927\u5316\u5220\u6389\u7684\u53f6\u5b50\u8282\u70b9\u7684\u8d21\u732e\u3002\n\n\u7531\u4e8e\u65e0\u6743\u6811\u4e0a\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\uff0c\u4e0e\u5b83\u8ddd\u79bb\u6700\u8fdc\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u67d0\u4e2a\u7aef\u70b9\uff0c\u6240\u4ee5\u628a\u76f4\u5f84\u7684\u7aef\u70b9\u6c42\u51fa\u6765\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u5224\u65ad\u54ea\u4e2a\u7aef\u70b9\u4e0e\u5b83\u8ddd\u79bb\u8f83\u8fdc\uff0c\u52a0\u4e0a\u8d21\u732e\u5373\u53ef\u3002\n\n\u6700\u540e\u5220\u5230\u53ea\u5269\u76f4\u5f84\u65f6\uff0c\u5c31\u4e00\u4e2a\u4e00\u4e2a\u5220\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nstruct edge{\n\tint to,nxt;\n}e[N<<1];\nint n,dis[N],head[N],cnt=0,u,v,fa[N];\nlong long ans=0;\nbool on[N];\nvector<pair<int,int>>s;\nvoid dfs(int now){\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(!~dis[e[i].to]){\n\t\tdis[e[i].to]=dis[now]+1;\n\t\tdfs(e[i].to);\n\t}\n}\nvoid dfs2(int now){\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(dis[e[i].to]>dis[now]){\n\t\tfa[e[i].to]=now;\n\t\tdfs2(e[i].to);\n\t\ton[now]=on[now]||on[e[i].to];\n\t}\n}\ninline void dfs3(int now,int rt){\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(dis[e[i].to]>dis[now])dfs3(e[i].to,on[e[i].to]?e[i].to:rt);\n\tif(!on[now]){\n\t\tif(dis[now]>dis[now]+dis[v]-(dis[rt]<<1)){\n\t\t\tans+=dis[now];\n\t\t\ts.push_back(make_pair(u,now));\n\t\t}else{\n\t\t\tans+=dis[now]+dis[v]-(dis[rt]<<1);\n\t\t\ts.push_back(make_pair(v,now));\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;++i){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\te[++cnt]=(edge){v,head[u]};\n\t\thead[u]=cnt;\n\t\te[++cnt]=(edge){u,head[v]};\n\t\thead[v]=cnt;\n\t}\n\tmemset(dis,-1,sizeof dis);\n\tdis[1]=0;\n\tdfs(1);\n\tu=1;\n\tfor(int i=2;i<=n;++i)\n\tif(dis[i]>dis[u])u=i;\n\tmemset(dis,-1,sizeof dis);\n\tdis[u]=0;\n\tdfs(u);\n\tv=u;\n\tfor(int i=1;i<=n;++i)\n\tif(dis[v]<dis[i])v=i;\n\ton[v]=true;\n\tdfs2(u);dfs3(u,u);\n\tfor(;u!=v;v=fa[v])ans+=dis[v],s.push_back(make_pair(u,v));\n\tprintf(\"%lld\\n\",ans);\n\tfor(auto i:s)printf(\"%d %d %d\\n\",i.first,i.second,i.second);\n\treturn 0;\n}\n```",
        "postTime": 1535088157,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF911F \u3010Tree Destruction\u3011"
    },
    {
        "content": "## \u6253\u4e86\u4e00\u4e2a\u4e0a\u5348\uff0c\u7ec8\u4e8e\u6253\u5b8c\u4e86\n\n\u8865\u4e00\u4e0b\u8f93\u51fa\u7684\u7ffb\u8bd1\uff1a\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u7684\u8ddd\u79bb\u548c\u3002\n\n\u540e\u9762\u51e0\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\uff1a\n\n\u9009\u62e9\u7684\u4e24\u4e2a\u53f6\u5b50\uff0c\u4ee5\u53ca\u5220\u6389\u7684\u7ed3\u70b9\u3002\n\n\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u662f\u601d\u8def\u3002\n\n\u6211\u4eec\u80af\u5b9a\u8981\u8ba9\u4e24\u4e2a\u70b9\u5c3d\u91cf\u8fdc\uff0c\u90a3\u4e48\u8fdc\u7684\u70b9\u600e\u4e48\u5feb\u901f\u6c42\uff1f\uff1f\n\n\u6bcf\u4e00\u6b21\u53bb\u505a\u4e00\u904ddfs\u663e\u7136\u4e0d\u591f\u4f18\u79c0\u3002\n\n\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e0b\u6811\u7684\u76f4\u5f84\u7684\u6c42\u6cd5\u3002\uff08~~\u6ca1\u5b66\u8fc7\u7684\u53bb\u8865\u4e60~~\uff09\n\n\u627e\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u7136\u540e\u627e\u5230\u79bb\u4ed6\u6700\u8fdc\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\n\n\u7136\u540e\u4ece\u8fd9\u4e2a\u7ed3\u70b9\u5f00\u59cb\u627e\u6700\u8fdc\u7684\u70b9\uff0c\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u56e0\u4e3a\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\u90fd\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\n\n\u6240\u4ee5\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\u7684\u6700\u8fdc\u70b9\u4e00\u5b9a\u662f\u6811\u7684\u76f4\u5f84\u7684\u7aef\u70b9\u7684\u5176\u4e2d\u4e00\u4e2a\uff01\uff01\uff01\n\n\u7136\u540e\u628a\u5269\u4e0b\u7684\u6811\u7684\u76f4\u5f84\u7684\u7ed3\u70b9\u4e00\u4e2a\u4e00\u4e2a\u7edf\u8ba1\u7136\u540e\u5220\u6389\u3002\n\n\u5177\u4f53\u6b65\u9aa4\uff1a\n\n1.\u627e\u51fa\u6811\u7684\u76f4\u5f84\u3002\n\n2.\u7528$vis$\u6570\u7ec4\u8868\u793a\u8be5\u70b9\u662f\u5426\u5728\u6811\u7684\u76f4\u5f84\u4e0a\u3002\u66f4\u65b0vis\u3002\n\n3.\u7edf\u8ba1\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u6bd4\u8f83\u79bb\u6811\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u53d6\u5927\u7684\u5e76\u7d2f\u52a0\uff0c\u5c06\u4e24\u70b9\u5b58\u5165\u3002\n\n4.\u628a\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u8ddd\u79bb\u7d2f\u52a0\uff0c\u5c06\u4e24\u70b9\u5b58\u5165\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring> \nusing namespace std;\nstruct edge{\n    int to,nxt;\n}e[400005];\nint n,dep[300005],head[300005],father[300005],x1,x2,cnt=0,maxn=0,sum=0,ax[300005],bx[300005];\nlong long ans=0;\nbool vis[300005];\nvoid addedge(int x,int y) {\n\te[++cnt].to=y;\n\te[cnt].nxt=head[x];\n\thead[x]=cnt;\n}\nvoid dfs(int u){\n    for(int i=head[u];i;i=e[i].nxt)\n    if(!~dep[e[i].to]){\n        dep[e[i].to]=dep[u]+1;\n        dfs(e[i].to);\n    }\n}\nvoid dfs2(int u){\n    for(int i=head[u];i;i=e[i].nxt)\n    \tif(dep[e[i].to]>dep[u]){\n        \tfather[e[i].to]=u;\n        \tdfs2(e[i].to);\n        \tvis[u]=vis[u]||vis[e[i].to];\n    \t}\n    return ;\n}\ninline void dfs3(int u,int v) {\n    for(int i=head[u];i;i=e[i].nxt)\n    \tif(dep[e[i].to]>dep[u]) {\n    \t\tif(vis[e[i].to]) dfs3(e[i].to,e[i].to);\n    \t\telse dfs3(e[i].to,v);\n\t\t}\n    if(!vis[u]){\n        if(dep[u]>dep[u]+dep[x2]-(dep[v]<<1)) {\n            ans+=dep[u];\n            ++sum;\n            ax[sum]=x1;\n            bx[sum]=u;\n        }else{\n            ans+=dep[u]+dep[x2]-(dep[v]<<1);\n            ++sum;\n            ax[sum]=x2;\n            bx[sum]=u;\n        }\n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;++i) {\n    \tint a,b;\n        scanf(\"%d%d\",&a,&b);\n        addedge(a,b);\n        addedge(b,a);\n    }\n    memset(dep,-1,sizeof(dep));\n    dep[1]=0;\n    dfs(1);\n    maxn=0;\n    for(int i=2;i<=n;++i) \n\t\tif(dep[i]>maxn) {\n\t\t\tmaxn=dep[i];\n\t\t\tx1=i;\n\t\t}\n    memset(dep,-1,sizeof(dep));\n    dep[x1]=0;\n\tdfs(x1);\n\tmaxn=0;\n    for(int i=1;i<=n;++i) {\n    \tif(dep[i]>maxn) {\n    \t\tmaxn=dep[i];\n    \t\tx2=i;\n\t\t}\n\t}\n    vis[x2]=1;\n    dfs2(x1);\n\tdfs3(x1,x1);\n    while(x1!=x2) {\n\t\tans+=dep[x2];\n\t\t++sum;\n\t\tax[sum]=x1;\n\t\tbx[sum]=x2;\n\t\tx2=father[x2];\n\t}\n    printf(\"%lld\\n\",ans);\n    for (int i=1;i<=sum;++i) {\n    \tprintf(\"%d %d %d\\n\",ax[i],bx[i],bx[i]);\n\t}\n    return 0;\n}\n\n```",
        "postTime": 1557117367,
        "uid": 78187,
        "name": "zjjcth330",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF911F \u3010Tree Destruction\u3011"
    },
    {
        "content": "[\u66f4\u597d\u4f53\u9a8c](https://www.cnblogs.com/caijiLYC/p/14375280.html)  \nWC\u8bb2\u7684\u7b2c\u4e8c\u9053\u4f8b\u9898\uff0c\u88ab\u4e00\u5206\u949f\u5e26\u8fc7\uff0c\u6211\u88c2\u5f00\u4e86  \n\u9996\u5148\u77e5\u9053\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u4e1c\u897f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u8ddd\u79bb\u6700\u957f\u7684\u70b9\u5fc5\u5b9a\u662f\u8be5\u6811\u7684\u76f4\u5f84\u7684\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u3002  \n\u867d\u7136\u8fd9\u4e2a\u633a\u663e\u7136\u7684\uff0c\u4e0d\u8fc7\u8fd8\u662f\u8bc1\u4e00\u4e0b\uff08\u8001\u5e08\u6628\u5929\u4e00\u79d2\u5e26\u8fc7\u592a\u8ba9\u4eba\u70b8\u88c2\u4e86\uff09\uff08\u8fd9\u91cc\u7528\u4e00\u4e2a\u53cd\u8bc1\u6cd5\u5427\uff09  \n![y3y28O.png](https://s3.ax1x.com/2021/02/04/y3y28O.png)  \n\u8bbe $0,4$ \u4e3a\u76f4\u5f84\u4e24\u7aef\uff0c$5,6$ \u4e3a\u76f4\u5f84\u5916\u4e24\u70b9  \n\u82e5 $5->6$ \u4e3a\u6700\u957f\u7684\u94fe\uff0c\u90a3\u4e48 $1->6$ \u4f1a\u5927\u4e8e $1->4$  \n\u90a3\u4e48\u76f4\u5f84\u5c31\u4f1a\u53d8\u6210 $0->6$ \u8fd9\u4e0e\u524d\u63d0\u77db\u76fe\uff0c\u6240\u4ee5\u5bf9\u4e8e $5$ \uff0c$4$ \u662f\u6700\u4f18\u7684\u9009\u62e9\uff0c\u5bf9 $6$\uff0c$0$ \u662f\u6700\u4f18\u7684\u9009\u62e9  \n\u7136\u540e\u600e\u4e48\u6574\u5462\uff0c\u6211\u4eec\u5148\u628a\u76f4\u5f84\u641e\u51fa\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u9009\u62e9\u4e00\u4e2a\u7aef\u70b9\u4f7f\u5f97\u94fe\u6700\u957f\uff0c\u6700\u540e\u518d\u6309\u987a\u5e8f\u5220\u6389\u94fe\u4e0a\u7684\u6240\u6709\u70b9  \n\u7136\u540e\u60f3\u4e00\u4e0b\u7ec6\u8282\uff08\u4f1a\u7684\u540c\u5fd7\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u5199\u4e86\uff09  \n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u53ef\u80fd\u6709\u4e24\u79cd\u60c5\u51b5\uff08\u8fd9\u91cc\u4f7f\u7528\u6362\u6839\u6cd5\uff0c\u6ca1\u8003\u8651\u4e0d\u4f7f\u7528\u7684\u505a\u6cd5\uff09\n* 1.\u4e0e\u4e0a\u9762\u7684\u7aef\u70b9\u5339\u914d\n* 2.\u4e0e\u4e0b\u9762\u7684\u7aef\u70b9\u5339\u914d\n\u600e\u4e48\u627e\u5230\u6700\u4f18\u7684\u7aef\u70b9\uff0c\u8fd8\u8981\u8ba1\u7b97\u957f\u5ea6\u5462\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u7ecf\u5178\u7684 $dep_x+dep_y-2*dep_{lca_{x,y}}$  \n\u53c8\u60f3\u5230\uff0c\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u662f\u5728\u94fe\u4e0a\u7684\uff0c\u6240\u4ee5\u4e24\u70b9\u7684 $lca$\u4e5f\u4f1a\u5728\u94fe\u4e0a  \n\u4e8e\u662f\u6211\u4eec\u5728 $dfs$ \u7684\u65f6\u5019\uff0c\u8bb0\u5f55\u4e00\u4e2a $top$ \uff0c\u8868\u793a\u5728 $dfs$ \u8fc7\u7a0b\u4e2d\u4e0a\u4e00\u4e2a\u627e\u5230\u7684\u4e00\u4e2a\u5728\u94fe\u4e0a\u7684\u70b9\uff0c\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u5c31\u662f $lca$\u4e86  \n\u8fd9\u662f\u8003\u8651\u4e0b\u9762\u54ea\u4e2a\u7aef\u70b9\uff0c\u800c\u4e0e\u4e0a\u9762\u7aef\u70b9\u5339\u914d\u7684\u60c5\u51b5\u5176\u5b9e\u6211\u4eec\u6c42\u8fc7\u4e86  \n\u7531\u4e8e\u662f\u6362\u6839\u6cd5\uff0c\u6839\u8282\u70b9\u5c31\u662f\u4e0a\u9762\u7684\u7aef\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 $dep$ \u503c\u5c31\u597d  \n\u554a\uff0c\u672c\u4eba\u8bed\u6587\u4e0d\u597d\uff0c\u5982\u679c\u770b\u4e0d\u61c2\u4e5f\u522b\u614c\uff0c\u7ed3\u5408\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u597d\u61c2\u5f97\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\nusing namespace std;\nconst ll N=2e5+10;\nll n,m,cnt,head[N],dep[N],faa[N],toper;\nll ans,Ans,final_ans,Time;\nbool on[N];\n\nstruct answer{\n\tll a,b,c;\n}A[N];\n\nstruct star_platinum{\n\tll to,nxt;\n}q[N*3];\n\ninline void add(ll u,ll v){\n\tq[++cnt].to=v,q[cnt].nxt=head[u],head[u]=cnt;\n\tq[++cnt].to=u,q[cnt].nxt=head[v],head[v]=cnt;\n}\n\nvoid dfs1(ll x,ll fa){\n\tif(Time==0&&dep[x]>dep[ans])ans=x;\n\tif(Time==1&&dep[x]>dep[Ans])Ans=x;\n\tfor(ll i=head[x];i;i=q[i].nxt){\n\t\tll v=q[i].to;\n\t\tif(v!=fa){\n\t\t\tdep[v]=dep[x]+1;\n\t\t\tdfs1(v,x);\n\t\t}\n\t}\n}\n\nvoid dfs2(ll x,ll fa){\n\tfor(ll i=head[x];i;i=q[i].nxt){\n\t\tll v=q[i].to;\n\t\tif(v!=fa){\n\t\t\tdfs2(v,x);\n\t\t\tfaa[v]=x;\n\t\t\tif(on[v])on[x]=1;\n\t\t}\n\t}\n}\n\nvoid dfs3(ll x,ll fa,ll topf){\n\tfor(ll i=head[x];i;i=q[i].nxt){\n\t\tll v=q[i].to; \n\t\tif(fa!=v){\n\t\t\tif(on[v])dfs3(v,x,v);\n\t\t\telse dfs3(v,x,topf);\n\t\t}\n\t}\n\tif(!on[x]){\n\t\tif(dep[x]>dep[x]+dep[Ans]-(dep[topf]*2)){\n\t\t\tfinal_ans+=dep[x];\n\t\t\tA[++toper]=(answer){x,ans,x};\n\t\t}\n\t\telse {\n\t\t\tfinal_ans+=dep[x]+dep[Ans]-(dep[topf]*2);\n\t\t\tA[++toper]=(answer){Ans,x,x};\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%lld\",&n);\n\tfor(ll a1,a2,i=1;i<n;i++){\n\t\tscanf(\"%lld%lld\",&a1,&a2);\n\t\tadd(a1,a2);\n\t}\n\tdfs1(1,0);\n\tmemset(dep,0,sizeof(dep)),Time++;\n\tdfs1(ans,0);\n\ton[Ans]=1;\n\tdfs2(ans,0);\n\tdfs3(ans,0,ans);\n\tfor(ll i=Ans;i!=ans;i=faa[i]){\n\t\tfinal_ans+=dep[i];\n\t\tA[++toper]=(answer){ans,i,i};\n\t}\n\tprintf(\"%lld\\n\",final_ans);\n\tfor(ll i=1;i<=toper;i++){\n\t\tprintf(\"%lld %lld %lld\\n\",A[i].a,A[i].b,A[i].c);\n\t}\n}\n\n```\n",
        "postTime": 1612448614,
        "uid": 251882,
        "name": "\u849f\u84bb\u4e01",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF911F \u3010Tree Destruction\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u6267\u884c$n-1$\u6b21\u5982\u4e0b\u64cd\u4f5c\n- \u9009\u62e9\u4e24\u4e2a\u53f6\u5b50\u7ed3\u70b9\n- \u52a0\u4e0a\u8fd9\u4e24\u70b9\u7684\u8ddd\u79bb\n- \u5220\u53bb\u5176\u4e2d\u7684\u4e00\u4e2a\u70b9\n\n\u8bf7\u6c42\u51fa\u8ddd\u79bb\u4e4b\u548c\u7684\u6700\u5927\u503c\n## \u9898\u89e3\n\u4e00\u9053\u7070\u5e38\u795e\u5947\u7684\u8d2a\u5fc3\u9898\n\n\u5f88\u660e\u663e\uff0c\u5bf9\u4e8e$n-1$\u6b21\u64cd\u4f5c\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u5176\u8ddd\u79bb\u6700\u5927\uff0c\u4f46\u662f\u524d\u9762\u7684\u64cd\u4f5c\u4f3c\u4e4e\u4f1a\u5f71\u54cd\u540e\u9762\u7684\u64cd\u4f5c\uff0c\u90a3\u8be5\u8fd9\u4e48\u529e\u5462\uff1f\uff08\u96fe\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9$x$\uff0c\u5176\u8d21\u732e\u6700\u5927\u4e3a$max(dis_{x\\to\\text{\u76f4\u5f84\u7684\u4e00\u7aef}},dis_{x\\to\\text{\u76f4\u5f84\u7684\u53e6\u4e00\u7aef}})$\uff0c\u6211\u4eec\u7a0d\u5fae\u6765\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u5bf9\u4e8e\u4efb\u610f\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u4e24\u70b9$e,f$\uff0c\u90fd\u80fd\u8f6c\u6362\u4e3a\u4e00\u6761\u76f4\u5f84\u548c\u4e24\u6761\u4ece$e,f$\u5230\u76f4\u5f84\u7684\u7b80\u5355\u8def\u5f84\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff08$a,b$\u4e3a\u76f4\u5f84\u4e24\u7aef\u70b9\uff09\n![\u4e00\u5f20\u795e\u5947\u7684\u56fe\u7247](https://cdn.luogu.com.cn/upload/image_hosting/u0zza8vl.png)\n\n\n\u90a3\u4e48\uff0c\u6839\u636e\u76f4\u5f84\u7684\u6027\u8d28$dis_{a\\to d}\\leq dis_{e\\to d}$\uff0c\u5373\n$$dis_{a\\to b}+dis_{b\\to d}\\leq dis_{e\\to b}+dis_{b\\to d} \\ \\Rightarrow dis_{a\\to b} \\leq dis_{e\\to b}$$\n\n\u540c\u7406\u53ef\u5f97\uff0c$dis_{c\\to f}\\leq dis_{c \\to d}$\n\u56e0\u6b64\uff0c$e$\u7684\u6700\u5927\u8d21\u732e\u4e3a$max(dis_{e\\to a},dis_{e\\to d})$\n\n\u77e5\u9053\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u9020\u7b54\u6848\u4e86\uff0c\u5373\n1. \u5bf9\u4e8e\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u76f4\u63a5\u6784\u9020\u5230\u76f4\u5f84\u66f4\u8fdc\u7684\u4e00\u7aef\u5373\u53ef\n1. \u5bf9\u4e8e\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u90a3\u5c31\u76f4\u63a5\u5220\u53bb\u5230\u67d0\u4e00\u7aef\u5373\u53ef\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u7b54\u6848\u662f\u6709\u987a\u5e8f\u8981\u6c42\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4ee5\u67d0\u79cd\u987a\u5e8f\u6784\u9020\u7b54\u6848\uff0c\u6211\u7684\u65b9\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\n\n1. \u628a\u76f4\u5f84\u4e0a\u7684\u70b9\u52a0\u5165\u961f\u5217\n1. \u5bf9\u961f\u5217\u91cc\u7684\u70b9\u8fdb\u884c\u641c\u7d22\u5e76\u52a0\u5165\u67d0\u79cd\u6570\u636e\u7ed3\u6784\n1. \u5012\u53d9\u8f93\u51fa\u7b54\u6848\n\n### \u4e3a\u4ec0\u4e48\u8fd9\u662f\u6b63\u786e\u7684\uff1f\uff1f\n\n\u5e7f\u641c\u4fdd\u8bc1\u4e86\u5904\u7406\u7684\u70b9\u79bb\u76f4\u5f84\u7684\u8ddd\u79bb\u662f\u9012\u589e\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5012\u7740\u8f93\u51fa\uff0c\u5c31\u5f88\u597d\u7684\u786e\u4fdd\u4e86\u5220\u53bb$x$\u7684\u65f6\u5019\uff0c\u5b83\u540e\u9762\u7684\u8282\u70b9\u5df2\u7ecf\u5220\u5b8c\u4e86\u3002\u90a3\u4e48\u5f88\u660e\u663e\u8fd9\u5c31\u662f\u6b63\u786e\u7684\n## ~~\u4e71\u6253\u7684~~\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nnamespace in{\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\tinline int getc(){\n\t    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n\t}\n\ttemplate <typename T>inline void read(T& t){\n\t    t=0;int f=0;char ch=getc();\n\t    while (!isdigit(ch)){\n\t        if(ch=='-')f = 1;\n\t        ch=getc();\n\t    }\n\t    while(isdigit(ch)){\n   \t    \tt=t*10+ch-48;\n   \t    \tch = getc();\n   \t\t}\n\t\tif(f)t=-t;\n\t}\n\ttemplate <typename T,typename... Args> inline void read(T& t, Args&... args){\n\t    read(t);read(args...);\n\t}\n}\nnamespace out{\n\tchar buffer[1<<21];\n\tint p1=-1;\n\tconst int p2 = (1<<21)-1;\n\tinline void flush() {\n\t\tfwrite(buffer,1,p1+1,stdout),\n\t\tp1=-1;\n\t}\n\tinline void putc(const char &x) {\n\t\tif(p1==p2)flush();\n\t\tbuffer[++p1]=x;\n\t}\n\ttemplate <typename T>void write(T x) {\n\t\tstatic char buf[15];\n\t\tstatic int len=-1;\n\t\tif(x>=0){\n\t\t\tdo{\n    \t\t\tbuf[++len]=x%10+48,x/=10;\n    \t\t}while (x);\n\t\t}else{\n    \t\tputc('-');\n\t\t\tdo {\n    \t\t\tbuf[++len]=-(x%10)+48,x/=10;\n\t\t\t}while(x);\n\t\t}\n\t\twhile (len>=0)\n\t\t\tputc(buf[len]),--len;\n\t}\n}\nusing namespace std;\nconst int maxn=2e5+1000;\nstruct node{int v,nxt;}e[maxn<<1];\nint cnt=0,head[maxn];\nvoid add(int u,int v){e[++cnt]=(node){v,head[u]};head[u]=cnt;}\nint dis[maxn],fath[maxn],maxp;\nbool flag[maxn];//\u76f4\u5f84\u6807\u8bb0 \nint n,u,v;long long sum; \nstruct nnn{int a,b,c;nnn(int A=0,int B=0,int C=0){a=A,b=B,c=C;}};\nvector<nnn>ans;\nqueue<nnn>q;\nint st,ed;\n#define v e[i].v\nvoid dfs1(int u,int fa){\n\t//\u7528\u6765\u627e\u6700\u8fdc\u7684\u70b9\n\t//printf(\"%d %d\\n\",u,fa); \n\tif(dis[u]>dis[maxp])maxp=u;fath[u]=fa; \n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tif(v==fa)continue;\n\t\tdis[v]=dis[u]+1;dfs1(v,u);\n\t}\n}\nvoid dfs2(int u){\n\tq.push(nnn(u,dis[u],dis[ed]-dis[u]));\n\tfor(int i=head[u];i;i=e[i].nxt)\n\tif(flag[v]&&fath[u]!=v)dfs2(v);\n}\n#undef v\n#define mp make_pair\n#define pb push_back\nsigned main(){\n\tin::read(n);\n\tfor(int i=1;i<n;i++)in::read(u,v),add(u,v),add(v,u);\n\tdis[maxp=0]=0,dfs1(1,-1);\n\tst=maxp;//\u627e\u5230\u76f4\u5f84\u8d77\u70b9 \n\tdis[st]=dis[maxp=0]=0,dfs1(st,-1);\n\ted=maxp;//\u627e\u5230\u76f4\u5f84\u7ec8\u70b9\n\tint _tmp=maxp;\n\twhile(_tmp!=st)flag[_tmp]=true,_tmp=fath[_tmp];\n\tflag[st]=true;\n\tdfs2(st);\n\twhile(!q.empty()){\n\t\t#define v e[i].v\n\t\tnnn tmp=q.front();q.pop();\n\t\t//printf(\"%d %d %d\\n\",tmp.a,tmp.b,tmp.c);\n\t\tif(flag[tmp.a])sum+=tmp.b,ans.pb(nnn(tmp.a,st,tmp.a));\n\t\telse {\n\t\t\tif(tmp.b>tmp.c)sum+=tmp.b,ans.pb(nnn(tmp.a,st,tmp.a));\n\t\t\telse \t\t   sum+=tmp.c,ans.pb(nnn(tmp.a,ed,tmp.a));\n\t\t} \n\t\tfor(int i=head[tmp.a];i;i=e[i].nxt){\n\t\t\tif(v==fath[tmp.a]||flag[v])continue;\n\t\t\telse\t   q.push(nnn(v,tmp.b+1,tmp.c+1));\n\t\t}\n\t\t#undef v\n\t}\n\tout::write(sum);out::putc('\\n');\n\tfor(int i=ans.size()-1;i>=0;i--)if(ans[i].c!=st)\n\t\tout::write(ans[i].a),out::putc(' '),\n\t\tout::write(ans[i].b),out::putc(' '),\n\t\tout::write(ans[i].c),out::putc('\\n'); \n\tout::flush();\n\treturn 0;\n}\n\n```",
        "postTime": 1593175456,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF911F \u3010Tree Destruction\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/CF911F)\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n- [\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 DFS](https://oi-wiki.org/graph/dfs/)\n- [\u6811\u7684\u76f4\u5f84](https://oi-wiki.org/graph/tree-diameter/)\n- [\u62d3\u6251\u6392\u5e8f](https://oi-wiki.org/graph/topo/)\n\n## \u9898\u610f\n\n\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u65e0\u6839\u65e0\u6743\u6811\uff0c\u8fdb\u884c $n-1$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n- \u9009\u62e9\u6811\u4e0a\u7684\u4e24\u4e2a\u70b9 $u,v$\u3002\n- $ans$ \u52a0\u4e0a $u,v$ \u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u7ecf\u8fc7\u7684\u8fb9\u6570\u3002\n- \u5220\u9664\u70b9 $u$ \u6216\u70b9 $v$\uff0c\u5e76\u8f93\u51fa\u5220\u9664\u8fc7\u7a0b\u3002\n\n\u6c42 $ans$ \u7684\u6700\u5927\u503c\u3002\n\n## \u5206\u6790\n\n\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u70b9\u5728\u6811\u4e0a\u80fd\u6700\u8fdc\u8fbe\u5230\u7684\u70b9\u5fc5\u5b9a\u662f\u6811\u7684\u76f4\u5f84\u7684\u7aef\u70b9\uff0c\u4e3a\u4e86\u4f7f\u7b54\u6848\u6700\u5927\uff0c\u6211\u4eec\u8981\u4f7f\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u6700\u5927\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u5148\u628a\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u5220\u53bb\uff08\u8981\u4fdd\u8bc1\u4e0d\u5f71\u54cd\u5176\u4ed6\u70b9\u7684\u6700\u5927\u8d21\u732e\uff09\uff0c\u518d\u9010\u4e2a\u5220\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\n\n\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\uff1a\n\n- \u6c42\u51fa\u6811\u7684\u76f4\u5f84\u957f\u5ea6 $len$\u3001\u4e24\u4e2a\u7aef\u70b9 $s,t$\u3002\n- \u7528\u4e24\u6b21 $\\text{dfs}$ \u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5230 $s,t$ \u7684\u8ddd\u79bb $ds_i,dt_i$\u3002\n- \u7b54\u6848 $ans$ \u521d\u59cb\u4e3a $\\sum_{i=1}^{len}i=\\frac{len\\times(len+1)}{2}$\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u8981\u9010\u4e2a\u5220\u6389\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u8d21\u732e\u4e3a $\\sum_{i=1}^{len}i$\u3002\n- \u901a\u8fc7\u6bd4\u8f83 $ds_i+dt_i$ \u662f\u5426\u548c $len$ \u76f8\u7b49\u5224\u65ad\u70b9 $i$ \u662f\u5426\u662f\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u5e76\u6253\u4e0a\u6807\u8bb0 $vis_i\\Leftarrow 1$\u3002\n- \u5bf9\u4e8e\u6240\u6709\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9 $i$\uff0c$ans$ \u52a0\u4e0a $i$ \u5230 $s$ \u6216 $t$ \u7684\u6700\u5927\u8ddd\u79bb $\\max(ds_i,dt_i)$\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u548c\u4e0a\u4e00\u6b65\u4e00\u8d77\u5b9e\u73b0\u3002\n- \u8f93\u51fa $ans$\u3002\n- \u4e0d\u65ad\u627e\u51fa\u4e00\u4e2a\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u76f4\u81f3\u6ca1\u6709\uff0c\u8981\u4fdd\u8bc1\u8fd9\u4e2a\u70b9\u6240\u8fde\u63a5\u7684\u70b9\u5230\u76f4\u5f84\u4efb\u610f\u4e00\u7aef\u7684\u8def\u5f84\u4e0d\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\uff0c\u5220\u9664\u8fd9\u4e2a\u70b9\u5e76\u8f93\u51fa\u8fc7\u7a0b\u3002**\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3**\uff1a\u628a\u76f4\u5f84 $s\\Rightarrow t$ \u8fd9\u6761\u7ebf\u4e3e\u8d77\u6765\uff0c\u8ba9\u5176\u4ed6\u70b9\u6cbf\u5730\u5fc3\u5f15\u529b\u81ea\u7531\u4e0b\u843d\uff0c\u5f62\u6210\u4e00\u9897\u9897\u5b50\u6811\uff0c\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u5220\u9664\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u5b50\u8282\u70b9\u90fd\u88ab\u5220\u9664\uff0c~~\u4f5c\u8005\u753b\u56fe\u6280\u672f\u592a\u70c2\u8bf7\u8bfb\u8005\u81ea\u884c\u8111\u8865~~\u3002\n- \u9009\u62e9\u76f4\u5f84\u7684\u4e00\u7aef\uff0c\u4ece\u8fd9\u4e00\u7aef\u5f00\u59cb\u5220\u76f4\u5f84\u4e0a\u7684\u8282\u70b9\u5e76\u8f93\u51fa\u8fc7\u7a0b\u3002\n\n\u6c42\u51fa $ans$ \u663e\u7136\u5341\u5206\u7b80\u5355\uff0c\u4f46\u662f\u6c42\u51fa\u5220\u70b9\u8fc7\u7a0b\u5374\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u4e5f\u6b63\u662f\u8fd9\u7bc7\u9898\u89e3\u4e0e\u5176\u4ed6\u9898\u89e3\u7684\u4e0d\u540c\u4e4b\u5904\uff1a\u5982\u4f55\u6c42\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u8f93\u5165\u52a0\u8fb9\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u6240\u8fde\u7684\u8fb9\u6570 $in_i$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9 $i$\uff0c\u4ee4 $in_i$ \u81ea\u51cf\uff0c\u4e5f\u5c31\u662f\u51cf\u53bb\u5b83\u5230\u7236\u8282\u70b9\u7684\u4e00\u6761\u8fb9\uff08**\u6811\u7684\u5f62\u6001\u5c31\u662f\u8d2a\u5fc3\u7b56\u7565\u4e2d\u6240\u8bf4\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u6682\u65f6\u4e0d\u77e5\u9053\u5177\u4f53\u957f\u4ec0\u4e48\u6837**\uff09\uff0c\u6b64\u65f6\u4e00\u4e2a\u6ca1\u6709\u5b50\u8282\u70b9\u7684 $i$ \u7684 $in_i$ \u4e3a $0$\uff0c\u4eff\u7167**\u62d3\u6251\u6392\u5e8f**\u7684\u505a\u6cd5\uff0c\u5c06 $in_i=0$ \u7684\u8282\u70b9\u5165\u961f\u3002\n\n\u4e0d\u65ad\u53d6\u51fa\u961f\u5934 $x$\uff0c\u8f93\u51fa $x$ \u70b9\u7684\u5220\u9664\u8fc7\u7a0b\uff0c\u628a\u6240\u6709\u4e0e $x$ \u76f8\u8fde\u7684\u70b9 $y$ \u7684 $in_y$ \u51cf $1$\uff0c\u4f7f\u7236\u8282\u70b9 $y$ \u7684 $in_y$ \u51cf\u5c11 $1$\uff0c\u5982\u679c $in_y=0$\uff0c\u628a $y$ \u5165\u961f\u3002\n\n\u4e0a\u8ff0\u64cd\u4f5c\u6267\u884c\u5230\u961f\u5217\u4e3a\u7a7a\uff0c\u6211\u4eec\u5c31\u5220\u5b8c\u4e86\u6240\u6709\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\n\n>**Q:** \u4e3a\u4ec0\u4e48\u8981\u628a\u6240\u6709\u4e0e $x$ \u76f8\u8fde\u7684\u70b9 $y$ \u7684 $in_y$ \u51cf $1$\uff1f\u8fd9\u6837\u4e0d\u662f\u4f1a\u628a\u5b50\u8282\u70b9 $y$ \u7684 $in_y$ \u91cd\u590d\u51cf\u4e86\u5417\uff1f\n>\n>**A:** \u8fd9\u6837\u662f\u4f7f\u5176\u7236\u8282\u70b9\u7684\u8fb9\u6570\u51cf\u5c11\uff0c\u8ba9\u5176\u7236\u4eb2\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u53f6\u5b50\u8282\u70b9\uff1b\u5b50\u8282\u70b9\u91cd\u590d\u51cf\u4e0d\u4f1a\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8282\u70b9\u7684 $in$ \u4e4b\u524d\u5df2\u7ecf\u4e3a $0$\uff0c\u518d\u51cf $1$ \u5c31\u53d8\u6210\u8d1f\u6570\uff0c\u4e0d\u4f1a\u88ab\u5165\u961f\u3002\n\n\u5904\u7406\u597d\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u540e\uff0c\u6211\u4eec\u4ece\u76f4\u5f84\u7684\u4e00\u7aef\u5f00\u59cb $\\text{dfs}$ \u5220\u70b9\u5e76\u8f93\u51fa\u8fc7\u7a0b\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nlong long read(){\n\tlong long x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nvoid write(long long x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nconst int N=2e5+10;\nint n,u,v,in[N];\nvector<int>e[N];\nbool vis[N];\n#define T_D_T long long\nstruct Tree_Diameter{\n\tint s,t;\n\tT_D_T d[N],len;\n\tvoid init(){\n\t\ts=t=len=0;\n\t\tmemset(d,0,sizeof(d));\n\t}\n\tvoid dfs(int x,int fa){\n\t\tfor(int i=0;i<e[x].size();i++){\n\t\t\tif(e[x][i]==fa)\n\t\t\t\tcontinue;\n\t\t\td[e[x][i]]=d[x]+1;\n\t\t\tif(d[e[x][i]]>d[s])\n\t\t\t\ts=e[x][i];\n\t\t\tdfs(e[x][i],x);\n\t\t}\n\t}\n\tvoid calc(){\n\t\tinit();\n\t\tdfs(1,0);\n\t\td[t=s]=0;\n\t\tdfs(s,0);\n\t\tlen=d[s];\n\t}\n}tree;\nll D[2][N];\nvoid dfs(int t,int x,int fa){\n\tfor(int i=0;i<e[x].size();i++){\n\t\tif(e[x][i]==fa)\n\t\t\tcontinue;\n\t\tD[t][e[x][i]]=D[t][x]+1;\n\t\tdfs(t,e[x][i],x);\n\t}\n}\nvoid topu(){\n\tqueue<int>q;\n\tfor(int i=1;i<=n;i++)\n\t\tif(!in[i])\n\t\t\tq.push(i);\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();\n\t\tprintf(\"%d %d %d\\n\",(D[0][x]>D[1][x]?tree.s:tree.t),x,x);\n\t\tfor(int i=0;i<e[x].size();i++)\n\t\t\tif(vis[e[x][i]]&&!(--in[e[x][i]]))\n\t\t\t\tq.push(e[x][i]);\n\t}\n}\nvoid dfs2(int x,int fa){\n\tif(x==tree.t)\n\t\treturn;\n\tprintf(\"%d %d %d\\n\",tree.t,x,x);\n\tfor(int i=0;i<e[x].size();i++)\n\t\tif(!vis[e[x][i]]&&e[x][i]!=fa)\n\t\t\tdfs2(e[x][i],x);\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<n;i++){\n\t\tu=read();v=read();\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t\tin[u]++;in[v]++;\n\t}\n\ttree.calc();\n\tll ans=(tree.len+1)*tree.len/2;\n\tdfs(0,tree.s,0);dfs(1,tree.t,0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(D[0][i]+D[1][i]!=tree.len){\n\t\t\tans+=max(D[0][i],D[1][i]);\n\t\t\tvis[i]=1;\n\t\t\tin[i]--;\n\t\t}\n\twrite(ans);cout<<endl;\n\ttopu();\n\tdfs2(tree.s,0);\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002",
        "postTime": 1632239903,
        "uid": 419144,
        "name": "chenjunxiu",
        "ccfLevel": 7,
        "title": "CF911F Tree Destruction"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u7684\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4efb\u610f\u70b9 $x$\uff0c\u4e0e\u5176\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u53ea\u4f1a\u662f\u4e00\u6761\u76f4\u5f84 $\\text{Path}(s\\to t)$ \u7684\u4e24\u4e2a\u7aef\u70b9 $s,t$ \u4e4b\u4e00\u3002\u7ecf\u5178\u7684\u56fe\u8bba\u4e66\u7c4d\u4e0a\u90fd\u5b58\u5728\u76f8\u5173\u8bc1\u660e\uff0c\u53ef\u4ee5\u81ea\u884c\u7ffb\u9605\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5148\u6c42\u51fa\u76f4\u5f84\uff0c\u4ece\u53f6\u5b50\u5f00\u59cb\u4e00\u4e2a\u4e00\u4e2a\u5220\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bcf\u4e2a\u8282\u70b9 $x$ \u7684\u8d21\u732e\u4e3a $\\max(\\text{dis}(x,s),\\text{dis}(x,t))$\u3002\u4f46\u662f\u8fd9\u6837\u975e\u5e38\u96be\u5b9e\u73b0\u3002\n\n\u4e0d\u59a8\u4f7f\u7528 $\\text{bfs}$\uff0c\u4ece\u76f4\u5f84\u5f00\u59cb\u5411\u5916\u5ef6\u4f38\uff0c\u6700\u540e\u5012\u5e8f\u8f93\u51fa\u3002\u7531\u4e8e $\\text{bfs}$ \u7684\u6027\u8d28\uff0c\u8fd9\u6837\u80fd\u591f\u4fdd\u8bc1\u5728\u5220\u9664\u4e00\u4e2a\u70b9 $x$ \u4e4b\u524d\uff0c\u5b83\u7684\u6240\u6709\u5b50\u8282\u70b9\u90fd\u5df2\u88ab\u5220\u9664\uff0c\u6240\u4ee5\u662f\u5408\u6cd5\u7684\u3002\n\n\u611f\u89c9\u81ea\u5df1\u7684\u4ee3\u7801\u8d8a\u5199\u8d8a\u6bd2\u7624\u4e86\uff08\u96fe\n\n```cpp\n#include<cstdio>\n#include<queue>\ntypedef long long ll;\nint cnt=0,pos;\nstruct state {int x,st,ed;}ans[200005];\nstd::queue<state> Q;\nint s[200005],dep[200005],pre[200005],tag[200005];\nint h[200005],to[400005],ver[400005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y) {to[++cnt]=y;ver[cnt]=h[x];h[x]=cnt;}\ninline void dfs(int x,int fa) {\n\tpre[x]=fa; pos=(dep[pos]<dep[x]? x:pos);\n\tfor(register int i=h[x];i;i=ver[i]) {\n\t\tint y=to[i];\n\t\tif(y==fa) continue;\n\t\tdep[y]=dep[x]+1; dfs(y,x);\n\t}\n}\nint main() {\n\tll res=0;\n\tint n=read(),top=0,st,ed;\n\tfor(register int i=1;i<n;++i) {int x=read(),y=read();add(x,y);add(y,x);}\n\tdfs(1,-1); st=pos; pos=dep[st]=pre[st]=0; dfs(st,-1); ed=pos; \n\tint cur=ed; while(cur!=-1) {s[++top]=cur;tag[cur]=1;cur=pre[cur];} \n\tfor(;top;--top) {Q.push((state){s[top],dep[s[top]],dep[ed]-dep[s[top]]});}\n\twhile(Q.size()) {\n\t\tstate now=Q.front(); Q.pop();\n\t\tif(tag[now.x]) {ans[++top]=(state){now.x,st,now.x};res+=now.st;}\n\t\telse {\n\t\t\tif(now.st<now.ed) ans[++top]=(state){now.x,ed,now.x},res+=now.ed;\n\t\t\telse ans[++top]=(state){now.x,st,now.x},res+=now.st;\n\t\t}\n\t\tfor(register int i=h[now.x];i;i=ver[i]) {int y=to[i]; if(pre[now.x]==y||tag[y]) continue; Q.push((state){y,now.st+1,now.ed+1});}\n\t}\n\tprintf(\"%lld\\n\",res);\n\tfor(;top-1;--top) {printf(\"%d %d %d\\n\",ans[top].x,ans[top].st,ans[top].ed);}\n\treturn 0;\n}\n```",
        "postTime": 1602227071,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF911F \u3010Tree Destruction\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $N$ \u4e2a\u70b9\u7684\u6811\uff0c\u6bcf\u6b21\u9009\u5b9a\u4e24\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u5c06\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u52a0\u5165\u5230\u7ed3\u679c\u4e2d\uff0c\u5e76\u5220\u6389\u5176\u4e2d\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\u76f4\u5230\u6811\u4e0a\u5269\u4e0b\u4e00\u4e2a\u70b9\u3002\u6c42\u7ed3\u679c\u7684\u6700\u5927\u503c\u548c\u5220\u70b9\u7684\u65b9\u6848\u3002\n\n$$ N \\leq 2 \\times 10^5 $$\n\n## \u9898\u89e3\n\n\u8fd9\u9053\u9898\u7684\u7ed3\u8bba\u6bd4\u8f83\u597d\u60f3\uff0c\u4f46\u662f\u8981\u4e25\u8c28\u8bc1\u660e\u4e0b\u6765\u8fd8\u662f\u633a\u6709\u610f\u601d\u7684\u3002\n\n\u9898\u76ee\u8981\u6c42\u9009\u4e24\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u7136\u540e\u5220\u6389\u4e00\u4e2a\u70b9\u3002\u5b9e\u9645\u4e0a\u6ca1\u5220\u6389\u7684\u90a3\u4e2a\u70b9\u5bf9\u540e\u9762\u7684\u64cd\u4f5c\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002\n\n\u6240\u4ee5\u539f\u95ee\u9898\u53ef\u4ee5\u8f6c\u53d8\u4e3a\u6bcf\u6b21\u9009\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u5411\u7ed3\u679c\u4e2d\u52a0\u5165\u8fd9\u4e2a\u70b9\u5728\u6811\u4e0a\u7684\u6700\u8fdc\u8ddd\u79bb\uff0c\u7136\u540e\u5220\u6389\u8be5\u70b9\u3002\n\n\u5220\u70b9\u7684\u64cd\u4f5c\u770b\u8d77\u6765\u4f1a\u5bf9\u540e\u9762\u9009\u7684\u70b9\u4ea7\u751f\u5f71\u54cd\u3002\u4f46\u662f\uff0c\u8054\u7cfb\u76f4\u5f84\u7684\u6027\u8d28\u53ef\u4ee5\u77e5\u9053\uff0c\u5bf9\u4e8e**\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9**\uff0c\u79bb\u5b83\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f**\u76f4\u5f84\u7684\u4e00\u7aef**\u3002\u53ea\u8981\u6811\u7684\u76f4\u5f84\u4e0d\u88ab\u5220\u6389\uff0c**\u76f4\u5f84\u5916**\u6bcf\u4e00\u4e2a\u70b9\u53ef\u80fd\u7684\u6700\u5927\u8d21\u732e\u5c31\u662f\u5230\u76f4\u5f84\u8f83\u8fdc\u7aef\u7684\u8ddd\u79bb\u3002\n\n\u552f\u4e00\u9700\u8981\u8003\u8651\u7684\u5c31\u662f\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\u76f4\u5f84\u4e0a\u7684\u70b9\u56e0\u4e3a\u5220\u70b9\u7684\u5f71\u54cd\uff0c\u6709\u4e00\u534a\u7684\u70b9\u7684\u8d21\u732e\u53d6\u4e0d\u5230\u6700\u5927\u3002\n\n\u4f46\u4ed4\u7ec6\u4e00\u60f3\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u56e0\u4e3a\u6700\u540e\u65e0\u8bba\u5982\u4f55\u90fd\u662f\u5220\u6210\u4e00\u6761\u94fe\uff0c\u6240\u4ee5\u8fd9\u548c\u5148\u5c06\u5176\u4ed6\u70b9\u5220\u6389\uff0c\u518d\u5c06\u76f4\u5f84\u4e0a\u7684\u70b9\u5220\u6389\u4e00\u4e9b\u7684**\u6548\u679c\u662f\u4e00\u6837**\u7684\u3002\u800c\u5148\u5220\u76f4\u5f84\u4e0a\u7684\u7684\u70b9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u4ed6\u70b9\u8d21\u732e\u51cf\u5c11\uff0c\u6240\u4ee5\u5148\u5220\u76f4\u5f84\u4e0a\u7684\u70b9\u7684\u65b9\u6848**\u4e0d\u4f18\u4e8e**\u6700\u540e\u518d\u5220\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\n\n\u81f3\u6b64\uff0c\u53ef\u4ee5\u63a8\u51fa\uff0c**\u5c06\u6811\u5220\u5269\u76f4\u5f84\uff0c\u6700\u540e\u4e00\u4e2a\u4e00\u4e2a\u70b9\u5220**\u7684\u505a\u6cd5\u662f\u6700\u4f18\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(N)$ \u3002\n\n## \u4ee3\u7801\n\n\u6811\u7684\u76f4\u5f84\u548c\u62d3\u6251\u6392\u5e8f\u4ee3\u7801\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u5199\u7684\u65f6\u5019\u8981\u4fdd\u6301\u601d\u8def\u6e05\u6670\u3002\n\n\u522b\u5fd8\u4e86\u65e0\u5411\u56fe\u53cc\u5411\u8fb9\u5f00\u53cc\u500d\u6570\u7ec4\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\nusing namespace std;\n\nconst int MAXN= 400005;\n\nint N,head[MAXN],nex[MAXN],targ[MAXN],indeg[MAXN],cur;\nint dis[MAXN][2],maxv[2];\nint ans[MAXN],ansv[MAXN],cnt;\nlong long sumans;\nint Que[MAXN],Qhead,Qtail;\nvoid BFS(int s,int k){\n\tQhead= Qtail= 1;\n\tfor(int i=1;i<=N;++i) dis[i][k]= -1;\n\tQue[Qtail++]= s;\n\tdis[s][k]= 0;maxv[k]= s;\n\twhile(Qhead<Qtail){\n\t\tint u= Que[Qhead++],v;\n\t\tfor(int e=head[u];e;e=nex[e]){\n\t\t\tv= targ[e];\n\t\t\tif(dis[v][k]!= -1) continue;\n\t\t\tdis[v][k]= dis[u][k]+1;\n\t\t\tif(dis[v][k]>dis[maxv[k]][k]) maxv[k]= v;\n\t\t\tQue[Qtail++]= v;\n\t\t}\n\t}\n\treturn;\n}\n\nvoid Topsort(){\n\tQhead= Qtail= 1;\n\tfor(int i=1;i<=N;++i)\n\t\tif(indeg[i]<=1 && i!=maxv[0] && i!=maxv[1])\n\t\t\tQue[Qtail++]= i;\n\twhile(Qhead<Qtail){\n\t\tint u= Que[Qhead++],v;\n\t\tans[++cnt]= u;\n\t\tsumans+= max(dis[u][0],dis[u][1]);\n\t\tif(dis[u][0]> dis[u][1]) ansv[cnt]= 1;\n\t\telse ansv[cnt]= 0;\n\t\tfor(int e=head[u];e;e=nex[e]){\n\t\t\tv= targ[e];\n\t\t\tif(indeg[v]<=1) continue;\n\t\t\tindeg[u]--;\n\t\t\tindeg[v]--;\n\t\t\tif(indeg[v]<=1) Que[Qtail++]= v;\n\t\t}\n\t}\n\treturn;\n}\n\nvoid solve(){\n\tBFS(1,0);\n\tBFS(maxv[0],0);\n\tBFS(maxv[0],1);\n\tTopsort();\n\tint u= maxv[1],v;\n\twhile(u!=maxv[0]){\n\t\tsumans+= dis[u][1];\n\t\tans[++cnt]= u;\n\t\tansv[cnt]= 0;\n\t\tfor(int e=head[u];e;e=nex[e]){\n\t\t\tv= targ[e];\n\t\t\tif(dis[v][1]+1 == dis[u][1]){\n\t\t\t\tu= v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nvoid AddEdge(int u,int v){\n\tnex[++cur]= head[u];\n\thead[u]= cur;\n\ttarg[cur]= v;\n\tindeg[v]++;\n\treturn;\n}\n\nvoid Input(){\n\tscanf(\"%d\",&N);\n\tfor(int i=1;i<=N-1;++i){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tAddEdge(x,y);\n\t\tAddEdge(y,x);\n\t}\n\treturn;\n}\n\nint main(){\n\tInput();\n\tsolve();\n\tprintf(\"%lld\\n\",sumans);\n\tfor(int i=1;i<=cnt;++i)\n\t\tprintf(\"%d %d %d\\n\",ans[i],maxv[ansv[i]],ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1606493015,
        "uid": 102091,
        "name": "NashChen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF911F \u3010Tree Destruction\u3011"
    }
]