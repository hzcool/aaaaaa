[
    {
        "content": "\u601d\u8def by @houzhiyuan  \n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/dd-d/p/16656875.html)\n### Sol\n\u611f\u89c9\u5728\u7ebf\u4e0d\u600e\u4e48\u53ef\u505a\uff0c\u8003\u8651\u79bb\u7ebf\u3002  \n\u90a3\u4e48\u95ee\u9898\u53d8\u6210\u4e86\u7ef4\u62a4\u8def\u5f84\u4e0a\u7b2c $k$ \u5927\u51fa\u73b0\u6b21\u6570\u7684\u6570\u3002  \n\u8003\u8651\u7ebf\u6bb5\u6811\uff0c\u4ee5\u51fa\u73b0\u6b21\u6570\u4e3a\u8282\u70b9\u7684\u4e0b\u6807\uff0c\u90a3\u4e48\u67e5\u8be2\u76f8\u5f53\u4e8e\u662f\u6c42\u7b2c $k$ \u5927\u3002  \n\u7ebf\u6bb5\u6811\u4e8c\u5206\u5373\u53ef\u3002  \n\u5b58\u65b9\u6848\u7684\u8bdd\u5f00\u4e2a set \u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u503c\u5373\u53ef\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6 $O(Q \\log n)$\u3002  \n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u3002  \n###  Code\n```cpp\n//LYC_music yyds!\n#include<bits/stdc++.h>\n#define IOS ios::sync_with_stdio(0)\n#define lowbit(x) (x&(-x))\nusing namespace std;\ninline char gc()\n{\n\tstatic char buf[1000000],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++;\n}\nint read()\n{\n\tint pos=1,num=0;\n\tchar ch=getchar();\n\twhile (!isdigit(ch))\n\t{\n\t\tif (ch=='-') pos=-1;\n\t\tch=getchar();\n\t}\n\twhile (isdigit(ch))\n\t{\n\t\tnum=num*10+(int)(ch-'0');\n\t\tch=getchar();\n\t}\n\treturn pos*num;\n}\nvoid write(int x)\n{\n\tif (x<0)\n\t{\n\t\tputchar('-');\n\t\twrite(-x);\n\t\treturn;\n\t}\n\tif (x>=10) write(x/10);\n\tputchar(x%10+'0');\n}\nvoid writesp(int x)\n{\n\twrite(x);\n\tputchar(' ');\n}\nvoid writeln(int x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\nconst int N=1e6+10;\nstruct node\n{\n\tint l,k,id;\n};\nset<int> s[N];\nvector<int> G[N];\nvector<node> q[N];\nint siz[N<<2],n,m,a[N],cnt[N],ans[N];\nvoid update(int k,int l,int r,int pos,int x1,int x2)\n{\n\tsiz[k]+=x2;\n\tif (l==r)\n\t{\n\t\tif (x2==1) s[l].insert(x1);\n\t\telse s[l].erase(x1);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif (pos<=mid) update(k<<1,l,mid,pos,x1,x2);\n\telse update(k<<1|1,mid+1,r,pos,x1,x2);\n}\nint querysum(int k,int l,int r,int L,int R)\n{\n\tif (L>R) return 0;\n\tif (L<=l&&r<=R) return siz[k];\n\tint mid=(l+r)>>1,res=0;\n\tif (L<=mid) res+=querysum(k<<1,l,mid,L,R);\n\tif (mid<R) res+=querysum(k<<1|1,mid+1,r,L,R);\n\treturn res;\n}\nint query(int k,int l,int r,int val)\n{\n\tif (siz[k]<val) return -1;\n\tif (l==r) return *s[l].begin();\n\tint mid=(l+r)>>1;\n\tif (siz[k<<1]>=val) return query(k<<1,l,mid,val);\n\telse return query(k<<1|1,mid+1,r,val-siz[k<<1]);\n}\nvoid dfs(int x,int fa)\n{\n\tif (cnt[a[x]]) update(1,1,n,cnt[a[x]],a[x],-1);\n\tcnt[a[x]]++;\n\tupdate(1,1,n,cnt[a[x]],a[x],1);\n\tfor (auto now:q[x])\n\t\tans[now.id]=query(1,1,n,now.k+(now.l>1)*(querysum(1,1,n,1,now.l-1)));\n\tfor (auto v:G[x])\n\t{\n\t\tif (v==fa) continue;\n\t\tdfs(v,x);\n\t}\n\tupdate(1,1,n,cnt[a[x]],a[x],-1);\n\tcnt[a[x]]--;\n\tif (cnt[a[x]]) update(1,1,n,cnt[a[x]],a[x],1);\n}\nvoid solve()\n{\n\tn=read(); m=read();\n\tfor (int i=1;i<=n;i++)\n\t\ta[i]=read(),G[i].clear(),q[i].clear();\n\tfor (int i=2;i<=n;i++)\n\t{\n\t\tint x=read();\n\t\tG[x].emplace_back(i); G[i].emplace_back(x);\n\t}\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint x=read(),l=read(),k=read();\n\t\tq[x].push_back({l,k,i});\n\t}\n\tdfs(1,0);\n\tfor (int i=1;i<=m;i++)\n\t\twritesp(ans[i]);\n\tputchar('\\n');\n}\nsigned main()\n{\n\tint T=read();\n\twhile (T--) solve();\n}\n\n\n\n\n\n```",
        "postTime": 1662339759,
        "uid": 167999,
        "name": "dd_d",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011CF1585E Frequency Queries"
    }
]