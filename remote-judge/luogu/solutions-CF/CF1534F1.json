[
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1534F1)\n\n## #1.0 \u9898\u76ee\u5927\u610f\n\n\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c`#` \u8868\u793a\u6c99\u5b50\uff0c`.` \u8868\u793a\u7a7a\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u67d0\u4e9b\u6c99\u5b50\u4f7f\u5176\u6389\u843d\uff0c\u6c99\u5b50\u6389\u843d\u8fc7\u7a0b\u4e2d\u4f1a\u6270\u52a8\u5b83\u4e0b\u843d\u8def\u5f84\u5468\u56f4\u56db\u683c\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\u7684\u6c99\u5b50\uff0c\u4f7f\u4ed6\u4eec\u4e00\u540c\u6389\u843d\uff0c\u95ee\u6700\u5c11\u9009\u62e9\u51e0\u5757\u6c99\u5b50\u53ef\u4ee5\u4f7f\u5168\u90e8\u6c99\u5b50\u6389\u843d\u3002\n\n## #2.0 \u601d\u8def\n\n### #2.1 \u6574\u4f53\u60f3\u6cd5\n\n\u8003\u8651\u5c06 \u201c\u6270\u52a8\u201d \u8fd9\u4e00\u5173\u7cfb\u8f6c\u5316\u6210\u8fb9\uff0c\u201c\u6270\u52a8\u201d \u8fd9\u4e00\u5173\u7cfb\u662f\u5355\u5411\u7684\uff0c\u5373\u82e5 $A$ \u80fd\u6270\u52a8 $B$\uff0c\u4e0d\u4ee3\u8868 $B$ \u80fd\u6270\u52a8 $A$\u3002\n\n\u5c06\u56fe\u4e2d\u7684 `#` \u7528 \u201c\u6270\u52a8\u201d \u4e3a\u8fb9\u8fde\u63a5\u540e\u4f1a\u5f97\u5230\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u8fd9\u5f20\u56fe\u4e2d\u5b58\u5728\u8bb8\u591a**\u5f3a\u8fde\u901a\u5206\u91cf\uff08SCC\uff09**\uff0c\u5f88\u663e\u7136\uff0c\u6bcf\u4e00\u4e2a $\\text{SCC}$ \u4e2d\u7684\u6c99\u5b50\u6270\u52a8\u4efb\u610f\u4e00\u4e2a\uff0c\u8be5 $\\text{SCC}$ \u4e2d\u7684\u6240\u6709\u6c99\u5b50\u90fd\u4f1a\u6389\u843d\uff0c\u90a3\u4e48\u6211\u4eec\u4fbf\u53ef\u4ee5\u5c06\u6bcf\u4e2a $\\text{SCC}$ \u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u5373\u7528 $\\text{Tarjan}$ \u7b97\u6cd5\u8fdb\u884c\u7f29\u70b9\u3002\n\n\u7f29\u70b9\u4e4b\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a**\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09**\uff0c\u5728\u8fd9\u5f20\u56fe\u4e0a\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u88ab\u6270\u52a8\u7684\u70b9\u5c31\u662f\u6211\u4eec\u8981\u9009\u62e9\u7684\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u5f20 $\\text{DAG}$ \u4e2d\u6709\u591a\u5c11\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5373\u53ef\u3002\n\n\u4e0b\u9762\u6765\u770b\u6bcf\u4e00\u6b65\u7684\u7ec6\u8282\u3002\n\n### #2.2 \u50a8\u5b58\n\n\u9898\u76ee\u4e2d\u53ea\u7ed9\u4e86\u8fd9\u6837\u4e00\u6761\u5bf9\u7f51\u683c\u5927\u5c0f\u7684\u9650\u5236\uff1a\n\n$$\nn\\cdot m\\leq400000.\n$$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$n$ \u548c $m$ \u90fd\u6709\u53ef\u80fd\u8fbe\u5230 $4\\cdot10^5$ \u7684\u7ea7\u522b\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u76f4\u63a5\u5f00\u4e24\u7ef4\u5927\u5c0f\u90fd\u662f $4\\cdot10^5$ \u7684\u4e8c\u7ef4\u6570\u7ec4\u8fdb\u884c\u50a8\u5b58\u3002\u4f46\u662f\uff0c**\u683c\u5b50\u7684\u6570\u91cf\u8303\u56f4\u662f\u786e\u5b9a\u7684**\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f00\u4e00\u7ef4\u6570\u7ec4 ```mp[400010]``` \u6765\u50a8\u5b58\u683c\u5b50\u7684\u4fe1\u606f\u3002\n\n\u8f6c\u6362\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5c06\u683c\u5b50 $(i,j)$ \u7f16\u53f7\u4e3a $(i-1)\\cdot m+j$ \u5373\u53ef\uff0c\u5176\u5b9e\u5c31\u662f\u81ea\u5de6\u800c\u53f3\u3001\u81ea\u4e0a\u800c\u4e0b\u5730\u7f16\u53f7\u3002\n\n``` cpp\ninline int get_ind(const int &i,const int &j){\n    return (i - 1) * m + j;\n}\n```\n\n### #2.3 \u5efa\u56fe\n\n\u627e\u5230\u771f\u6b63\u53ef\u80fd\u51fa\u73b0\u7684 \u201c\u6270\u52a8\u201d \u5e76\u8f6c\u5316\u6210\u8fb9\u662f\u5efa\u56fe\u7684\u5173\u952e\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u6c99\u5b50 $A$ \u4e0b\u843d\u65f6\u7a76\u7adf\u53ef\u80fd\u4f1a\u6270\u52a8\u54ea\u4e9b\u6c99\u5b50\uff08\u5047\u8bbe\u8fd9\u4e9b\u6c99\u5b50\u5b58\u5728\uff09\u3002\n\n- $A$ \u6b63\u4e0a\u65b9\u4e00\u683c\u7684\u6c99\u5b50\uff1b\n- $A$ \u6b63\u4e0b\u65b9\u8ddd\u79bb\u6700\u8fd1\u7684\u6c99\u5b50\uff1b\n- $A$ \u5de6\u8fb9\u4e00\u5217\uff0c\u6bd4 $A$ \u6b63\u4e0b\u65b9\u8ddd\u79bb\u6700\u8fd1\u7684\u6c99\u5b50\u9ad8\u5ea6\u66f4\u9ad8\u7684\u6700\u9ad8\u7684\u6c99\u5b50\u3002\n- $A$ \u53f3\u8fb9\u4e00\u5217\uff0c\u6bd4 $A$ \u6b63\u4e0b\u65b9\u8ddd\u79bb\u6700\u8fd1\u7684\u6c99\u5b50\u9ad8\u5ea6\u66f4\u9ad8\u7684\u6700\u9ad8\u7684\u6c99\u5b50\u3002\n\n![](https://pic.imgdb.cn/item/60c73fb2844ef46bb266b8a8.png)\n\n\u4e0a\u56fe\u4e2d\uff0c$A$ \u88ab\u9009\u4e2d\uff0c\u53ea\u6709 $B,C,D,E$ \u4f1a\u88ab\u6270\u52a8\uff0c\u56e0\u4e3a $F$ \u4f1a\u88ab $D$ \u5148\u6270\u52a8\uff0c$G$ \u4f1a\u5148\u88ab $C$ \u6270\u52a8\uff0c\u6b63\u5bf9\u5e94\u4e86\u6211\u4eec\u4e0a\u9762\u7684\u56db\u79cd\u60c5\u51b5\u3002\n\n\u5f53\u7136\uff0c\u5047\u82e5 $C$ \u4e0d\u5b58\u5728\uff0c$G$ \u4e5f\u4e0d\u4f1a\u88ab $A$ \u6270\u52a8\uff0c\u663e\u7136 $B$ \u4f1a\u6bd4 $A$ \u66f4\u65e9\u63a5\u89e6 $G.$\n\n### #2.4 \u7f29\u70b9 & \u7edf\u8ba1\n\n\u7f29\u70b9\u6b63\u5e38\u7528 $\\text{Tarjan}$ \u7f29\u70b9\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u6211\u7528\u7684\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0c\u8bb0\u5f55\u4e86\u8fb9\u7684\u6570\u91cf\uff0c\u5728\u7edf\u8ba1\u65f6\u76f4\u63a5\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u5224\u65ad\u8be5\u8fb9\u4e24\u7aef\u70b9\u662f\u5426\u5728\u540c\u4e00 $\\text{SCC}$ \u4e2d\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5c06\u7ec8\u70b9\u6240\u5728\u7684 $\\text{SCC}$ \u7684\u5165\u5ea6\u52a0\u4e00\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u4e0d\u7528\u53bb\u91cd\u8fb9\uff0c\u56e0\u4e3a\u5165\u5ea6\u53ea\u8981\u6709\uff0c\u518d\u591a\u4e5f\u662f\u6709\uff0c\u5165\u5ea6\u8981\u6ca1\u6709\uff0c\u548b\u6574\u4e5f\u6ca1\u6709\u3002\n\n\u4e4b\u540e\u7edf\u8ba1\u5165\u5ea6\u4e3a $0$ \u7684 $\\text{SCC}$ \u7684\u6570\u91cf\u5373\u53ef\u3002\n\n## #3.0 \u4ee3\u7801\u5b9e\u73b0\n\n``` cpp\nconst int N = 500010;\nconst int INF = 0x3fffffff;\n\nstruct Edge{\n    int u,v;\n    int nxt;\n};\nEdge e[N << 2];\n\nchar mp[N];\nint n,m,a[N],head[N],cnt = 1,ck[N];\nint T,dfn[N],low[N],inst[N],st[N],frt;\nint scc[N],scnt,icnt[N],ans;\n\n/*\u83b7\u53d6\u683c\u5b50\u7684\u7f16\u53f7*/\ninline int get_ind(const int &i,const int &j){\n    return (i - 1) * m + j;\n}\n\n/*\u52a0\u8fb9*/\ninline void add(const int &u,const int &v){ \n    e[cnt].u = u;\n    e[cnt].v = v;\n    e[cnt].nxt = head[u];\n    head[u] = cnt ++;\n}\n\ninline void tarjan(int x){ // Tarjan \u7b97\u6cd5\u7f29\u70b9\n    dfn[x] = low[x] = ++ T;\n    inst[x] = true;st[++ frt] = x;\n    for (int i = head[x];i;i = e[i].nxt)\n      if (!dfn[e[i].v]){\n          tarjan(e[i].v);\n          low[x] = min(low[x],low[e[i].v]);\n      }\n      else if (inst[e[i].v])\n        low[x] = min(low[x],dfn[e[i].v]);\n    if (dfn[x] == low[x]){\n        int y = 0;++ scnt;\n        do{\n            y = st[frt --];\n            scc[y] = scnt;\n            inst[y] = false;\n        }while (y != x);\n    }\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (int i = 1;i <= n;i ++)\n      for (int j = 1;j <= m;j ++)\n        cin >> mp[get_ind(i,j)];\n    for (int i = 1;i <= n;i ++)\n      scanf(\"%d\",&a[i]);\n    /*\u5efa\u56fe*/\n    for (int i = 1;i <= n;i ++)\n      for (int j = 1;j <= m;j ++){\n          if (mp[get_ind(i,j)] == '#'){\n              ck[get_ind(i,j)] = true;//\u6807\u8bb0\u4e3a\u6c99\u5b50\n              if (i > 1 && mp[get_ind(i - 1,j)] == '#')//\u5982\u679c\u6b63\u4e0a\u65b9\u4e00\u683c\u6709\u6c99\u5b50\n                add(get_ind(i,j),get_ind(i - 1,j));\n              /*\u627e\u6b63\u4e0b\u65b9\u6700\u8fd1\u7684\u6c99\u5b50*/\n              for (int k = i + 1;k <= n;k ++)\n                if (mp[get_ind(k,j)] == '#'){\n                    add(get_ind(i,j),get_ind(k,j));\n                    break;\n                }\n              /*\u5de6\u8fb9\u4e00\u5217\uff0c\u6bd4\u6b63\u4e0b\u65b9\u8ddd\u79bb\u6700\u8fd1\u7684\u6c99\u5b50\u9ad8\u5ea6\u66f4\u9ad8\u7684\u6700\u9ad8\u7684\u6c99\u5b50*/\n              if (j > 1) for (int k = i;k <= n && (mp[get_ind(k,j)] != '#' || k ==  i);k ++)\n                if (mp[get_ind(k,j - 1)] == '#'){\n                    add(get_ind(i,j),get_ind(k,j - 1));\n                    break;\n                }\n              /*\u53f3\u8fb9\u4e00\u5217\uff0c\u6bd4\u6b63\u4e0b\u65b9\u8ddd\u79bb\u6700\u8fd1\u7684\u6c99\u5b50\u9ad8\u5ea6\u66f4\u9ad8\u7684\u6700\u9ad8\u7684\u6c99\u5b50*/\n              if (j < m) for (int k = i;k <= n && (mp[get_ind(k,j)] != '#' || k ==  i);k ++)\n                if (mp[get_ind(k,j + 1)] == '#'){\n                    add(get_ind(i,j),get_ind(k,j + 1));\n                    break;\n                }\n          }\n      }\n    /*\u627e SCC, \u7f29\u70b9*/\n    for (int i = 1;i <= n * m;i ++)\n      if (ck[i] && !dfn[i]) tarjan(i);\n    for (int i = 1;i < cnt;i ++)\n      if (scc[e[i].u] != scc[e[i].v])\n        icnt[scc[e[i].v]] ++;//\u7edf\u8ba1\u5165\u5ea6\n    for (int i = 1;i <= scnt;i ++)\n      if (!icnt[i]) ans ++;//\u7edf\u8ba1\u7b54\u6848\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n## End\n\n\u5e0c\u671b\u80fd\u7ed9\u60a8\u5e26\u6765\u6536\u83b7\u3002",
        "postTime": 1623672080,
        "uid": 162191,
        "name": "Dfkuaid",
        "ccfLevel": 6,
        "title": "[\u9898\u89e3]CF1534F1 Falling Sand (Easy Version)"
    },
    {
        "content": "\u6839\u636e\u6c99\u5b50\u4e4b\u95f4\u7684\u6270\u52a8\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u51fa\u56fe\uff0c\u82e5 $i$ \u53ef\u4ee5\u76f4\u63a5\u6270\u52a8 $j$\uff0c\u5219 $i$ \u5411 $j$ \u8fde\u4e00\u6761\u6709\u5411\u8fb9\u3002\u90a3\u4e48\u6bcf\u5f53\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u6c99\u5b50\u4e4b\u540e\uff0c\u6240\u6709\u5b83\u80fd\u5230\u8fbe\u7684\u6c99\u5b50\u90fd\u4f1a\u6389\u843d\u3002\n\n\u76f4\u63a5\u7f29\u70b9\uff0c\u9009\u62e9\u6240\u6709\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u5efa\u56fe\u4e0d\u80fd $n^2$ \u5efa\uff0c\u53d1\u73b0\u6bcf\u4e00\u4e2a\u70b9\u548c\u5b83\u6b63\u4e0b\u65b9\u7684\u70b9\u4e00\u5b9a\u6709\u8fb9\uff0c\u4e8e\u662f\u4e00\u4e2a\u70b9\u53ea\u9700\u8981\u5411\u4e0a\uff0c\u4e0b\uff0c\u4ee5\u53ca\u5de6/\u53f3\u5217\u5728\u5b83\u4e0b\u9762\u7b2c\u4e00\u4e2a\u70b9\uff0c\u4e8e\u662f\u8fb9\u6570\u5c31\u662f $4n$ \u7684\u7ea7\u522b\u3002\n\n```\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\ninline int read(){\n\tre int t=0;re char v=getchar();\n\twhile(v<'0')v=getchar();\n\twhile(v>='0')t=(t<<3)+(t<<1)+v-48,v=getchar();\n\treturn t;\n}\nstruct edge{int to,next;}e[8000002];\nint t,n,m,ans,cnt,head[1000002],b[1000002],dfn[400002],low[400002],tot,stk[400002],ist[400002],tp,tim,bl[400002],blk,rd[400002],lst[400002];\ninline void add(re int x,re int y){\n\te[++cnt]=(edge){y,head[x]},head[x]=cnt;\n}\ninline void tj(re int x){\n\tdfn[x]=low[x]=++tim,ist[x]=1,stk[++tp]=x;\n\tfor(re int i=head[x];i;i=e[i].next)\n\t\tif(!dfn[e[i].to])tj(e[i].to),low[x]=min(low[x],low[e[i].to]);\n\t\telse if(ist[e[i].to])low[x]=min(low[x],dfn[e[i].to]);\n\tif(dfn[x]==low[x]){\n\t\t++blk;\n\t\tdo{\n\t\t\tist[stk[tp]]=0;\n\t\t\tbl[stk[tp]]=blk;\n\t\t\t--tp;\n\t\t}while(stk[tp+1]^x);\n\t}\n}\nvector<char>a[400002];\nvector<int>pos[400002];\nchar s[400002];\nsigned main(){\n\tn=read(),m=read();\n\ta[0].resize(m+3),pos[0].resize(m+3);\n\tfor(re int i=1;i<=n;++i){\n\t\ta[i].resize(m+3),pos[i].resize(m+3);\n\t\tscanf(\"%s\",s+1);\n\t\tfor(re int j=1;j<=m;++j)pos[i][j]=++tot,a[i][j]=s[j];\n\t}\n\tfor(re int i=n;i;--i){\n\t\tfor(re int j=1;j<=m;++j)\n\t\t\tif(a[i][j]=='#'){\n\t\t\t\tif(a[i][j-1]=='#')add(pos[i][j],pos[i][j-1]);\n\t\t\t\telse if(lst[j-1])add(pos[i][j],lst[j-1]);\n\t\t\t\tif(lst[j])add(pos[i][j],lst[j]);\n\t\t\t\tif(a[i][j+1]=='#')add(pos[i][j],pos[i][j+1]);\n\t\t\t\telse if(lst[j+1])add(pos[i][j],lst[j+1]);\n\t\t\t\tif(a[i-1][j]=='#')add(pos[i][j],pos[i-1][j]);\n\t\t\t}\n\t\tfor(re int j=1;j<=m;++j)\n\t\t\tif(a[i][j]=='#')lst[j]=pos[i][j];\n\t}\n\tfor(re int i=1;i<=n;++i)for(re int j=1;j<=m;++j)if(a[i][j]=='#'&&!dfn[pos[i][j]])tj(pos[i][j]);\n\tfor(re int i=1;i<=tot;++i)for(re int j=head[i];j;j=e[j].next)if(bl[i]^bl[e[j].to])++rd[bl[e[j].to]];\n\tfor(re int i=1;i<=blk;++i)if(rd[i]==0)++ans;\n\tprintf(\"%d\",ans);\n}\n",
        "postTime": 1623753129,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1534F1"
    },
    {
        "content": "\u9996\u5148\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5728\u7b2c $ i $ \u884c $ j $ \u5217\u7684\u6c99\u5b50\uff0c\u5982\u679c\u4ed6\u5f00\u59cb\u4e0b\u964d\uff0c\u4ed6\u80fd\u591f\u4f7f\u54ea\u4e9b\u6c99\u5b50\u4e0b\u964d\u5462\uff1f\n\n\u5f88\u5bb9\u6613\u5f97\u77e5\u662f\u7b2c $ j-1,j,j+1 $ \u5217\u6240\u6709\u884c\u53f7\u4e0d\u5c0f\u4e8e $ i $ \u7684\u6c99\u5b50\u3002\n\n\u5bf9\u4e8e\u6c99\u5b50 $ u $ \u4e0b\u964d\u80fd\u591f\u4f7f\u6c99\u5b50 $ v $ \u4e0b\u964d\uff0c\u6211\u4eec\u8fde\u4e00\u6761\u8fb9 $ (i,j) $\u3002\u7136\u540e\u7f29\u70b9\uff0c\u5bf9\u4e8e\u5ea6\u6570\u4e3a0\u7684\u70b9\uff0c\u6211\u4eec\u4ed6\u4e0d\u53ef\u80fd\u56e0\u4e3a\u522b\u7684\u6c99\u5b50\u4e0b\u964d\u800c\u4e0b\u964d\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u624b\u52a8\u6270\u52a8\u8fd9\u4e9b\u6c99\u5b50\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u7f29\u70b9\u540e\u7684\u56fe\u4e2d\u5ea6\u6570\u4e3a $ 0 $ \u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u7136\u800c\u66b4\u529b\u8fde\u8fb9\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u662f $ O(n^2m) $ \u7684\uff0c\u6211\u4eec\u8003\u8651\u7701\u6389\u4e00\u4e9b\u4e0d\u8981\u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u4e09\u4e2a\u70b9 $ (u,v,w) $\uff0c\u82e5\u5b58\u5728\u8fb9 $ (u,v) $ \u548c $ (v,w) $\uff0c\u90a3\u4e48\u8fb9 $ (u,w) $ \u660e\u663e\u53ef\u4ee5\u88ab\u7701\u6389\u3002\n\n\u6839\u636e\u8fd9\u4e2a\u4f18\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u7701\u6389\u5f88\u591a\u8fb9\u3002\n\n\u6bd4\u5982\u5bf9\u4e8e\u4e09\u4e2a\u70b9 $ u,v,w $\uff0c\u5176\u4e2d $ v $ \u5728 $ u $ \u7684\u5de6\u4e0b\u65b9\uff0c$ w $ \u5728 $ v $ \u6b63\u4e0b\u65b9\uff0c\u90a3\u4e48 $ u $ \u5f88\u660e\u663e\u53ea\u9700\u8981\u8fde\u63a5 $ v $ \u800c\u4e0d\u9700\u8981\u8fde\u63a5 $ w $\u3002\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u9700\u8981\u8fde\u63a5\u8fd9\u4e9b\u8fb9\uff1a\n\n1. \u82e5 $ (i,j) $ \u6709\u4e00\u5757\u6c99\u5b50\u4e14 **\u6b63\u4e0a\u65b9\u4e00\u683c** \u4e5f\u6709\u4e00\u5757\u6c99\u5b50\uff0c\u8fde\u63a5 $ (i,j) $ \u548c $ (i-1,j) $\uff1b\n2. \u82e5 $ (i,j) $ \u7684\u6b63\u4e0b\u65b9\u5b58\u5728\u6c99\u5b50\uff0c\u8fde\u63a5\u6b63\u4e0b\u65b9\u7b2c\u4e00\u5757\u6c99\u5b50\uff1b\n3. \u82e5 $ (i,j) $ \u7684\u4e0b\u4e00\u5217\u7684\u4e0b\u65b9\u5b58\u5728\u6c99\u5b50\uff0c\u8fde\u63a5\u4e0b\u4e00\u5217\u7684\u4e0b\u65b9\u7b2c\u4e00\u5757\u6c99\u5b50\uff1b\n4. \u82e5 $ (i,j) $ \u7684\u4e0a\u4e00\u5217\u7684\u4e0b\u65b9\u5b58\u5728\u6c99\u5b50\uff0c\u8fde\u63a5\u4e0a\u4e00\u5217\u7684\u4e0b\u65b9\u7b2c\u4e00\u5757\u6c99\u5b50\uff1b\n\n\u5bf9\u4e8e $ 3 $ \u7c7b\u8fb9\u548c $ 4 $ \u7c7b\u8fb9\uff0c\u53cd\u8fc7\u6765\u4ece\u5de6\u4e0a/\u53f3\u4e0a\u7b2c\u4e00\u4e2a\u6c99\u5b50\u8fde\u63a5\u81ea\u5df1\uff0c\u9884\u5904\u7406\u6b63\u4e0a\u65b9\u7b2c\u4e00\u5757\u6c99\u5b50\u5373\u53ef\u3002\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u9884\u5904\u7406\u6b63\u4e0b\u65b9\u7684\u7b2c\u4e00\u5757\u6c99\u5b50\uff0c\u7136\u540e\u4e0d\u53cd\u8fc7\u6765\u3002\n\ncode:\n```cpp\n#include<cstdio>\n#include<vector>\nconst int M=4e5+5;\nint n,m,ans,dfc,BCC,in[M],on[M],bl[M],dfn[M],low[M];std::vector<int>G[M];\nbool val[M],istk[M];int top,stk[M];\ninline int id(const int&x,const int&y){\n\treturn x?(x-1)*m+y:0;\n}\ninline int min(const int&a,const int&b){\n\treturn a>b?b:a;\n}\ninline char read_c(){\n\tchar s;while(s=getchar(),s!='.'&&s!='#');\n\treturn s;\n}\nvoid Tarjan(int u){\n\tistk[stk[++top]=u]=true;\n\tlow[u]=dfn[u]=++dfc;\n\tfor(int&v:G[u]){\n\t\tif(!dfn[v]){\n\t\t\tTarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(istk[v])low[u]=min(low[u],dfn[v]);\n\t}\n\tif(low[u]==dfn[u]){\n\t\tregister int v;++BCC;\n\t\tdo bl[v=stk[top--]]=BCC,istk[v]=false;while(v!=u);\n\t}\n}\nsigned main(){\n\tregister int i,j,lst;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;++i){\n\t\tfor(j=1;j<=m;++j){\n\t\t\ton[id(i,j)]=(val[id(i,j)]=read_c()=='#')?id(i,j):on[id(i-1,j)];\n\t\t}\n\t}\n\tfor(j=1;j<=m;++j){\n\t\tlst=0;\n\t\tfor(i=n;i>=1;--i){\n\t\t\tif(!val[id(i,j)])continue;\n\t\t\tif(lst)G[id(i,j)].push_back(lst);lst=id(i,j);\n\t\t\tif(val[id(i-1,j)])G[id(i,j)].push_back(id(i-1,j));\n\t\t\tif(j!=1&&on[id(i,j-1)])G[on[id(i,j-1)]].push_back(id(i,j));\n\t\t\tif(j!=m&&on[id(i,j+1)])G[on[id(i,j+1)]].push_back(id(i,j));\n\t\t}\n\t}\n\tfor(i=1;i<=n*m;++i)if(!dfn[i]&&val[i])Tarjan(i);\n\tfor(i=1;i<=n*m;++i){\n\t\tfor(int&v:G[i])if(bl[v]!=bl[i])++in[bl[v]];\n\t}\n\tfor(i=1;i<=BCC;++i)ans+=!in[i];\n\tprintf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1625140333,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u56fe\u8bba \u8fde\u901a\u6027 CF1534F1\u9898\u89e3"
    },
    {
        "content": "\u6211\u722c\u4e86\uff0c\u5e76\u67e5\u96c6\u7f29\u70b9\u88ab\u5361\u4e86\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1534F1)\n\n\u9898\u76ee\u8981\u6c42\u6240\u6709\u7684\u6c99\u5b50\u90fd\u8981\u6389\u4e0b\u53bb\uff0c\u56e0\u6b64\u6700\u540e\u4e00\u884c\u6570\u6ca1\u7528\u3002~~\u4f46\u662f\u6211\u56e0\u4e3a\u8bfb\u9519\u6570\u800c\u5361\u4e86\u597d\u4e45\u73c2\u6d77\u661f\u3002~~\n\n\u56e0\u4e3a\u4e00\u4e2a\u6c99\u5b50\u82e5\u73c2\u4ee5\u5f71\u54cd\u5230\u975e\u81ea\u8eab\u64cd\u4f5c\u5217\u7684\u5176\u4ed6\u6c99\u5b50\uff0c\u90a3\u4e48\u5b83\u5fc5\u7136\u4e8b\u901a\u8fc7\u67d0\u4e00\u6761\u94fe\u5f0f\u7684\u64cd\u4f5c\u5f71\u54cd\u8be5\u70b9\u3002\n\n\u8bf4\u7684\u597d\u8ff7\uff0c\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n```\n#..\n\n.#.\n\n..#\n```\n\n\u5982\u4e0a\uff0c\u5de6\u4e0a\u89d2\u7684\u6c99\u5b50\u901a\u8fc7\u4e2d\u95f4\u7684\u6c99\u5b50\u5c06\u53f3\u4e0b\u89d2\u7684\u6c99\u5b50\u7ed9\u62c9\u4e86\u4e0b\u53bb\u3002\n\n\u8fd9\u5f15\u8d77\u6211\u4eec\u7684\u4e00\u4e2a\u601d\u8def\uff1a\u5982\u679c\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u6c99\u5b50\u4e0e\u5176\u6bcf\u4e00\u4e2a\u73c2\u6270\u52a8\u7684\u6c99\u5b50\u8fde\u4e0a\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u6700\u540e\u7edf\u8ba1\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u4e0d\u5c31\u597d\u4e86\uff1f\n\n\u5b9e\u9645\u4e0a\u4e8b\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u4f60\u5c11\u8003\u8651\u4e86\u4e00\u4e2a\u70b9\uff1a\u56fe\u4e2d\u6709\u73af\uff0c\u8fd9\u7b80\u5355\uff0c\u4e0a Tarjan\n\n\u7136\u540e\u4f60\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u627e\u70b9\u7684\u8fc7\u7a0b\u4e8b $O(n^2m)$ \u7684\uff0c\u6781\u5176\u5bb9\u6613\u88ab\u5361\u3002\n\n\u7136\u540e\u5c31\u8fd0\u7528\u5230\u53ef\u6211\u4eec\u4e0a\u9762\u7684\u90a3\u4e2a\u4f8b\u5b50\uff1a\u6211\u4eec\u6ca1\u5fc5\u8981\u5728\u5de6\u4e0a\u5f80\u53f3\u4e0b\u4e4b\u95f4\u8fde\u8fb9\uff0c\u56e0\u4e3a\u4e2d\u95f4\u70b9\u5df2\u7ecf\u5e2e\u6211\u4eec\u8fde\u597d\u4e86\u3002\n\n\u6211\u4eec\u76f4\u63a5\u5f80\u6bcf\u4e00\u4e2a\u70b9\u4e0a\u4e0b\u5de6\u53f3\u6700\u8fd1\u7684\u56db\u4e2a\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u8fb9\u7684\u89c4\u6a21\u5c31\u964d\u5230\u4e86 $4mn$ \uff0c\u518d\u8dd1 Tarjan \u5c31\u73c2\u4ee5\u4e86\u3002\n\n### Code\uff1a\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <vector>\n#include <stdlib.h>\n#include <queue>\n#define N 410005\nusing namespace std;\nconst int M=1e6+5;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n, m, a[N], cnt;\nvector <int> las[N];\nvector <int> pos[N];\nchar tmp[N];\nstruct edge{\n\tint to, nxt;\n}G[M*8];\n//int f[N], dep[N];\nint h[N], tot, in[N];\nvoid add(int x, int y){G[++tot].to=y, G[tot].nxt=h[x], h[x]=tot;}\n//int find(int x){\n//\tif(f[x]==x) return x;\n//\treturn f[x]=find(f[x]);\n//}\n//void dfs(int x){//\u88ab\u5361\u7684\u5e76\u67e5\u96c6\u7f29\u70b9\n//\tqueue <int> Q;\n//\tfor(int i=h[x]; i; i=nxt[i]){\n//\t\tint ot=to[i];\n//\t\tif(!dep[ot]) dep[ot]=dep[i]+1, dfs(ot);\n//\t\tif(dep[find(ot)]>0){\n//\t\t\tif(dep[find(x)]<dep[f[ot]]) f[f[ot]]=f[x];\n//\t\t\telse f[f[x]]=f[ot];\n//\t\t}\n//\t}\n//\tdep[x]=-dep[x];\n//}\nint dfn[N], low[N], st[N], top, T, SCC[N], tnc;\nbool vis[N];\nvoid tarjan(int x){\n\tdfn[x]=low[x]=++T;\n\tvis[x]=true, st[++top]=x;\n\tfor(int i=h[x]; i; i=G[i].nxt){\n\t\tint ot=G[i].to;\n\t\tif(!dfn[ot]) tarjan(ot), low[x]=min(low[x], low[ot]);\n\t\telse if(vis[ot]) low[x]=min(low[x], dfn[ot]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tint y=0;tnc++;\n\t\tdo{SCC[st[top]]=tnc;vis[st[top]]=false;top--;}while(st[top+1]!=x);\n\t}\n}\nvoid solve(){\n\tint ans=0;\n//\tfor(int i=1; i<=cnt; i++) f[i]=i;\n\tfor(int i=1; i<=cnt; i++)\n\t\tif(!dfn[i]) tarjan(i);\n\tfor(int x=1; x<=cnt; x++)\n\t\tfor(int i=h[x]; i; i=G[i].nxt)\n\t\t\tif(SCC[x]!=SCC[G[i].to]) in[SCC[G[i].to]]++;\n//\t\t\tif(find(x)!=find(to[i])) in[f[to[i]]]++;\n//\tfor(int i=1; i<=cnt; i++)\n//\t\tif(!in[i]&&find(i)==i) ans++;\n\tfor(int i=1; i<=tnc; i++)\n\t\tif(!in[i]) ans++;\n\tprintf(\"%d\", ans);\n}\nsigned main(){\n//\tfreopen(\"1.in\", \"r\", stdin);\n//\tfreopen(\"1.out\", \"w\", stdout);\n\tn=read(), m=read();\n\tlas[0].resize(m+9), pos[0].resize(m+9);\n\tpos[n+1].resize(m+9), las[n+1].resize(m+9);\n\tfor(int i=1; i<=n; i++){\n\t\tscanf(\"%s\", tmp+1);\n\t\tpos[i].resize(m+9), las[i].resize(m+9);\n\t\tfor(int j=1; j<=m; j++)\n\t\t\tlas[i][j]=0, pos[i][j]=tmp[j]=='#'?++cnt:0;\n\t}\n\tfor(int i=1; i<=m; i++) a[i]=read();\n\tfor(int j=1, lt=0; j<=m; j++, lt=0)\n\t\tfor(int i=n; i>=1; i--)\n\t\t\tlas[i][j]=lt, lt=pos[i][j]?i:lt;\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=m; j++)\n\t\t\tif(pos[i][j]){\n\t\t\t\tif(j<m&&pos[i][j+1]) \n\t\t\t\t\tadd(pos[i][j], pos[i][j+1]);\n\t\t\t\telse if(j<m&&las[i][j+1]) \n\t\t\t\t\tadd(pos[i][j], pos[las[i][j+1]][j+1]);\n\t\t\t\tif(j>1&&pos[i][j-1]) \n\t\t\t\t\tadd(pos[i][j], pos[i][j-1]);\n\t\t\t\telse if(j>1&&las[i][j-1]) \n\t\t\t\t\tadd(pos[i][j], pos[las[i][j-1]][j-1]);\n\t\t\t\tif(las[i][j]) \n\t\t\t\t\tadd(pos[i][j], pos[las[i][j]][j]);\n\t\t\t\tif(i>1&&pos[i-1][j]) \n\t\t\t\t\tadd(pos[i][j], pos[i-1][j]);\n\t\t\t}\n\tsolve();\n\treturn 0;\n}\n\n```",
        "postTime": 1624413866,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "CF1534F1 Falling Sand (Easy Version)"
    },
    {
        "content": "\u8003\u8651\u5c06\u4e00\u5757\u6c99\u5757\u5411\u5176\u80fd\u5f71\u54cd\u5230\u7684\u6c99\u5757\u8fde\u6709\u5411\u8fb9\u3002\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u6211\u4eec\u8bbe $\\textit{last}(i,j)$ \u4e3a\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u5f80\u4e0b\u671b\u89c1\u7684\u7b2c\u4e00\u4e2a\u6c99\u5757\uff0c\u82e5\u6ca1\u6709\u5219\u8bbe\u4e3a $-1$\u3002\u7136\u540e\u8fde\u8fb9\u65b9\u5f0f\u5c31\u662f\uff08\u7814\u7a76 $(i,j)$\uff09\uff1a\n\n1. \u9996\u5148 $(i,j)$ \u672c\u8eab\u662f\u6c99\u5757\uff1b\n2. \u5411 $\\textit{last}(i,j)$ \u8fde\u8fb9\uff08\u5982\u679c\u5b58\u5728\uff0c\u4e0b\u540c\uff09\uff1b\n3. \u82e5 $(i,j+1)$ \u5b58\u5728\uff0c\u5219\u8fde $(i,j+1)$\uff0c\u5426\u5219\u8fde $\\textit{last}(i,j+1)$\uff1b\n4. $(i,j-1)$ \u540c\u7406\u3002\n\n\u8fde\u51fa\u6765\u4e00\u5f20\u56fe\uff0c\u4f60\u53ef\u80fd\u89c9\u5f97\u8fd9\u5f20\u56fe\u91cc\u9762\u6240\u6709\u51fa\u5ea6\u4e3a $0$ \u7684\u5c31\u662f\u7b54\u6848\uff0c\u5b9e\u5219\u9700\u8981\u7f29\u4e2a\u70b9\uff0c\u7136\u540e\u624d\u6210\u7acb\uff08\u6837\u4f8b #2 \u5c31\u80fd hack \u975e\u5e38\u826f\u5fc3\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing ll = long long;\n#define all(x) (x).begin(), (x).end()\nint main() {\n\tstd::ios_base::sync_with_stdio(false);\n\tstd::cin.tie(nullptr);\n\tstd::cout.tie(nullptr);\n\tint n, m, cnt = 0;\n\tstd::cin >> n >> m;\n\tstd::vector<std::vector<char>> a(n, std::vector<char>(m));\n\tstd::vector<std::vector<int>> last(n, std::vector<int>(m)), id = last;\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tstd::cin >> a[i][j];\n\t\t\tif (a[i][j] == '#') id[i][j] = cnt++;\n\t\t}\n\t}\n\tfor (int j = 0; j < m; ++j) {\n\t\tint pos = -1;\n\t\tfor (int i = n - 1; ~i; --i) {\n\t\t\tlast[i][j] = pos;\n\t\t\tif (a[i][j] == '#') pos = i;\n\t\t}\n\t}\n\tint col = 0, tot = 0;\n\tstd::vector<std::pair<int, int>> edgeSet;\n\tstd::vector<std::vector<int>> e(cnt);\n\tstd::vector<int> color(cnt), order(cnt), low(cnt);\n\tstd::vector<bool> inStk(cnt);\n\tstd::stack<int> stk;\n\tauto add = [&] (int x, int y) {\n\t\te[x].emplace_back(y);\n\t\tedgeSet.emplace_back(std::make_pair(x, y));\n\t};\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tif (a[i][j] == '#') {\n\t\t\t\tif (j < m - 1) {\n\t\t\t\t\tif (a[i][j + 1] == '#') add(id[i][j], id[i][j + 1]);\n\t\t\t\t\telse if (~last[i][j + 1]) add(id[i][j], id[last[i][j + 1]][j + 1]);\n\t\t\t\t}\n\t\t\t\tif (j > 0) {\n\t\t\t\t\tif (a[i][j - 1] == '#') add(id[i][j], id[i][j - 1]);\n\t\t\t\t\tif (~last[i][j - 1]) add(id[i][j], id[last[i][j - 1]][j - 1]);\n\t\t\t\t}\n\t\t\t\tif(~last[i][j]) add(id[i][j], id[last[i][j]][j]);\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tif (a[i - 1][j] == '#') add(id[i][j], id[i - 1][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstd::function<void(int)> compress = [&] (int x) {\n\t\torder[x] = low[x] = tot++;\n\t\tinStk[x] = true;\n\t\tstk.emplace(x);\n\t\tfor (int y : e[x]) {\n\t\t\tif (!order[y]) {\n\t\t\t\tcompress(y);\n\t\t\t\tlow[x] = std::min(low[x], low[y]);\n\t\t\t}\n\t\t\telse if (inStk[y]) low[x] = std::min(low[x], order[y]);\n\t\t}\n\t\tif (order[x] == low[x]) {\n\t\t\tint y = 0;\n\t\t\t++col;\n\t\t\twhile (x != y) {\n\t\t\t\ty = stk.top();\n\t\t\t\tstk.pop();\n\t\t\t\tcolor[y] = col;\n\t\t\t\tinStk[y] = false;\n\t\t\t}\n\t\t}\n\t};\n\tfor (int i = 0; i < cnt; ++i) {\n\t\tif (!order[i]) compress(i);\n\t}\n\tstd::vector<int> deg(col);\n\tfor (std::pair<int, int> edge : edgeSet) {\n\t\tif (color[edge.first] != color[edge.second]) ++deg[color[edge.second]];\n\t}\n\tstd::cout << std::count(all(deg), 0) << \"\\n\";\n\treturn 0;\n}\n```",
        "postTime": 1623994401,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "solution-cf1534f1"
    }
]