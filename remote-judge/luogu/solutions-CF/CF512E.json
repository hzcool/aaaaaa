[
    {
        "content": "# \u5199\u5728\u524d\u9762\n\n\u4f3c\u4e4e\u9664\u4e86\u7ebf\u6027 $O(n)$ \u505a\u6cd5\u5c31\u662f $O(n\\log n)$\uff1f\u8865\u4e00\u7bc7\u6734\u7d20\u7684 $O(n^2)$ \u505a\u6cd5\uff0c\u4e5f\u4fbf\u4e8e\u7406\u89e3\u5176\u4ed6\u505a\u6cd5\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n- \u6784\u9020\n\n- \u6a21\u62df\n\n## \u9898\u76ee\u63cf\u8ff0\uff08\u6233\u8fd9\u91cc[\u67e5\u770b\u539f\u9898](https://www.luogu.com.cn/problem/CF512E)\uff09\n\n- \u7ed9\u51fa\u4e00\u4e2a $n$ \u8fb9\u5f62\u3002\u5e76\u7ed9\u51fa\u521d\u59cb\u7684 $n-3$ \u6761\u5bf9\u89d2\u7ebf\uff0c\u5c06\u8be5\u591a\u8fb9\u5f62\u5206\u6210 $n-2$ \u4e2a\u4e09\u89d2\u5f62\u3002\u6ce8\u610f\u4efb\u610f\u4e24\u6761\u5bf9\u89d2\u7ebf\u4e0d\u76f8\u4ea4\u3002\n\n- \u5b9a\u4e49 \u201c\u7ffb\u8f6c\u201d \u64cd\u4f5c\uff1a\u5bf9\u4e8e\u5bf9\u89d2\u7ebf $AB$\uff0c\u5b83\u5206\u51fa\u6765\u7684\u4e24\u4e2a\u4e09\u89d2\u5f62\u662f $\\triangle ABC$\u3001$\\triangle ABD$\uff0c\u5219\u6b64\u65f6\u5220\u53bb\u7ebf\u6bb5 $AB$\uff0c\u5e76\u6dfb\u52a0\u7ebf\u6bb5 $CD$\u3002\u79f0\u4e3a\u5bf9\u89d2\u7ebf $AB$ \u7684\u4e00\u6b21 \u201c\u7ffb\u8f6c\u201d\u3002\uff08\u5982\u4e0b\u56fe\uff09\n![](https://cdn.luogu.com.cn/upload/image_hosting/vcf9bnei.png)\n\n- \u7ed9\u51fa\u65b0\u7684\u4e00\u7ec4\u5212\u5206\u8be5\u591a\u8fb9\u5f62\u7684\u5bf9\u89d2\u7ebf\u96c6\u5408\uff0c\u95ee\u5982\u4f55\u53ea\u901a\u8fc7\u7ffb\u8f6c\u64cd\u4f5c\u4ece\u539f\u96c6\u5408\u53d8\u6210\u65b0\u96c6\u5408\uff0c\u8f93\u51fa\u65b9\u6848\u6570\u3002\n\n# \u6b63\u6587\n\n\u4e00\u822c\u6784\u9020\u9898\u7684\u6837\u4f8b\u90fd\u6ca1\u5565\u7528\uff0c\u56e0\u4e3a\u4f1a\u6545\u610f\u51fa\u7684\u8ba9\u4f60\u65e0\u6cd5\u627e\u89c4\u5f8b\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u81ea\u5df1\u5206\u6790\u3002\u4ee5\u6837\u4f8b\u4e8c\u4e3a\u4f8b\u3002\n\n## \u5206\u6790\n\n\u4ece\u539f\u56fe\u5230\u65b0\u56fe\uff0c\u5176\u5b9e\u53d8\u5316\u7684\u70b9\u5f88\u591a\uff0c\u53d8\u5316\u7684\u7ebf\u6bb5\u4e5f\u5f88\u591a\uff0c\u6211\u4eec\u5f88\u96be\u627e\u5230\u4e00\u4e2a\u542f\u53d1\u6027\u7684\u601d\u8def\u8ba9\u7a0b\u5e8f\u627e\u5230\u8fd9\u79cd\u65b9\u6cd5\u3002\u597d\u5728\u6ca1\u6709\u64cd\u4f5c\u6b21\u6570\u6700\u4f18\u7b49\u8981\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u52a1\u5b9e\u4e00\u4e9b\u3002\n\n\u76f8\u5e94\u7684\uff0c\u5982\u679c\u5f88\u591a\u4e2a\u70b9\u4e0d\u597d\u8003\u8651\uff0c\u6211\u4eec\u5c1d\u8bd5\u90fd\u5f52\u7ed3\u5230\u4e00\u4e2a\u70b9\u3002\u6bd4\u5982\u90fd\u62ff $1$ \u53f7\u70b9\uff0c\u4e5f\u5c31\u662f\u8ba9\u539f\u56fe\u4e2d\u7684\u5bf9\u89d2\u7ebf\u5206\u5e03\u53d8\u6210\u8d77\u70b9\u90fd\u662f $1$\uff0c\u518d\u4ece $1$ \u53d8\u6210\u65b0\u56fe\u7684\u5206\u5e03\u5f62\u5f0f\uff0c\u50cf\u8fd9\u6837\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/uu6m54hc.png)\n\u8fd9\u6837\uff0c\u6211\u4eec\u6210\u529f\u521b\u5efa\u4e86\u4e00\u4e2a \u201c\u4e2d\u7ee7\u5f62\u6001\u201d\uff0c\u65b9\u4fbf\u6211\u4eec\u8f6c\u79fb\u3002\n      \n\u63a5\u4e0b\u6765\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u4ece\u539f\u56fe\u53d8\u6362\u5230\u4e2d\u7ee7\u5f62\u6001\u3002   \n\u6211\u4eec\u5c1d\u8bd5\u679a\u4e3e\u6240\u6709\u5bf9\u89d2\u7ebf\uff08\u5df2\u7ecf\u4e0e $1$ \u76f8\u8fde\u5c31\u4e0d\u7528\u8003\u8651\u4e86\uff09\u5bf9\u4e8e\u6bcf\u6761\u5bf9\u89d2\u7ebf\uff1a\n- \u5982\u679c\u6ee1\u8db3\u5b83\u7684\u4e24\u4e2a\u7aef\u70b9\u53ef\u4ee5**\u4e0e $1$ \u6784\u6210\u4e09\u89d2\u5f62**\uff08**\u5373\u53ef\u53ea\u7ecf\u8fc7\u4e00\u6761\u7ebf\u6bb5\u5230\u8fbe $1$ \u70b9**\uff09\uff0c\u5219\u5224\u65ad\u8fd9\u6761\u7ebf\u6bb5**\u662f\u5426\u8fd8\u5c5e\u4e8e\u53e6\u4e00\u4e2a\u4e09\u89d2\u5f62**\uff0c\u5982\u679c\u5c5e\u4e8e\u7684\u8bdd\u5219\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21**\u6709\u76ca**\u7684\u7ffb\u8f6c\uff08\u56e0\u4e3a\u6210\u529f\u5411\u4e2d\u7ee7\u5f62\u6001\u524d\u8fdb\u4e86\u4e00\u6b65\uff09\u3002\n\n- \u5bf9\u4e8e\u4e0d\u5b8c\u5168\u6ee1\u8db3\u4e0a\u8ff0\u4e24\u4e2a\u6761\u4ef6\u7684\u7ebf\u6bb5\uff0c\u6211\u4eec\u5c1d\u8bd5\u5c06\u5b83\u4eec\u6401\u7f6e\u4e00\u65c1\uff0c\u5148\u8003\u8651\u5176\u4ed6\u7ebf\u6bb5\uff0c\u7b49\u6ee1\u8db3\u4ed6\u4eec\u7684\u6761\u4ef6\u540e\u518d\u8fdb\u884c\u51b3\u7b56\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u51b3\u7b56\u662f\u5bf9\u7684\uff1f\u56e0\u4e3a\u9898\u76ee\u91cc\u8bf4\u53ef\u4ee5\u8bc1\u660e\u6bcf\u4e2a\u70b9\u90fd\u6709\u5408\u6cd5\u65b9\u5f0f\uff08~~\u4e0d\u662f~~   \n\n\u6211\u4eec\u5c1d\u8bd5**\u7b80\u5355\u8bc1\u660e**\u4e00\u4e0b\uff1a\n\u6211\u4eec\u5047\u8bbe**\u5b58\u5728**\u4e00\u6761\u5bf9\u89d2\u7ebf\u5728**\u5176\u4ed6\u5bf9\u89d2\u7ebf\u90fd\u53d8\u6362\u5b8c\u6210**\u7684\u60c5\u51b5\u4e0b\u4ecd\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u3002\u7531\u4e8e \u201c\u7ffb\u8f6c\u201d \u64cd\u4f5c\u4e0d\u4f1a\u589e\u52a0\u6216\u51cf\u5c11\u5bf9\u89d2\u7ebf\u6761\u6570\u6216\u4e09\u89d2\u5f62\u4e2a\u6570\uff0c\u6240\u4ee5\u8fd9\u6761\u5bf9\u89d2\u7ebf\u4e24\u4fa7\u4e00\u5b9a\u662f\u4e24\u4e2a\u4e09\u89d2\u5f62\u3002\u53c8\u56e0\u4e3a\u5176\u4ed6\u5bf9\u89d2\u7ebf\u5df2\u7ecf\u8fde\u63a5\u4e86 $1$ \u70b9\uff0c\u6240\u4ee5\u4e00\u5b9a\u53ef\u4ee5\u4e0e $1$ \u70b9\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u53c8\u53e6\u4e00\u7aef\u4e5f\u662f\u4e09\u89d2\u5f62\uff0c\u4e00\u5b9a\u53ef\u4ee5\u8fdb\u884c\u64cd\u4f5c\uff0c\u524d\u540e\u77db\u76fe\u3002\n\n\u5176\u4ed6\u6761\u4ef6\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u81ea\u5df1\u610f\u4f1a\u4e00\u4e0b\uff0c\u6709\u65f6\u5019\u731c\u5230\u4e86\u7ed3\u8bba\u4e5f\u8981\u575a\u4fe1\u81ea\u5df1\u3002\n\n\u6545\u6211\u4eec\u73b0\u5728\u638c\u63e1\u4e86\u5411\u4e2d\u7ee7\u5f62\u6001\u53d8\u6362\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u76ee\u6807\u5f62\u6001\uff0c\u6211\u4eec\u4e5f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u6cd5\u8f6c\u6362\u6210\u4e2d\u7ee7\u5f62\u6001\uff0c\u8fd9\u6837\u662f\u53cd\u7740\u7684\uff0c\u5982\u4f55\u89e3\u51b3\uff1f\u53ea\u8981\u8bb0\u5f55\u64cd\u4f5c\u6b65\u9aa4\u540e\u9006\u7740\u6765\u4e00\u904d\u5c31\u884c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u6784\u9020\u65b9\u6cd5\u3002\n\n## \u7ec6\u8282\u4e0e\u5b9e\u73b0\n\n1.  \u5982\u4f55\u77e5\u9053\u4e24\u4e2a\u70b9\u80fd\u5426\u4e00\u6b65\u5230\u8fbe\uff1f\n\n\t\u5b9a\u4e49 $G[u][v]$ \u8868\u793a $u$ \u70b9\u80fd\u5426\u4e00\u6b65\u5230\u8fbe $v$\u3002\u521d\u59cb\u65f6\u591a\u8fb9\u5f62\u4e0a\u76f8\u90bb\u8282\u70b9\u53ef\u4e92\u76f8\u4e00\u6b65\u5230\u8fbe\uff1b\u539f\u59cb\u5f62\u6001\u7684\u6bcf\u6761\u5bf9\u89d2\u7ebf\u4e24\u7aef\u70b9\u53ef\u4ee5\u4e92\u76f8\u4e00\u6b65\u5230\u8fbe\u3002\u8fd9\u4e9b\u72b6\u6001\u7684\u503c\u4e3a**\u771f**\u3002\n    \n    \u540c\u6837\u7684\uff0c\u5728\u7ffb\u8f6c\u64cd\u4f5c\u4e2d\uff0c\u5bf9\u89d2\u7ebf\u7684\u53d8\u6362\u4e5f\u4f1a\u5f15\u8d77\u4e00\u6b65\u5230\u8fbe\u72b6\u6001\u7684\u53d8\u6362\uff0c\u539f\u6765\u7684\u4e24\u7aef\u70b9\u4e0d\u80fd\u4e00\u6b65\u5230\u8fbe\uff0c\u64cd\u4f5c\u540e\u5bf9\u89d2\u7ebf\u7684\u4e24\u7aef\u70b9\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u3002\u7531\u4e8e\u5bf9\u89d2\u7ebf\u7684\u6027\u8d28\uff0c\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u4f1a\u6709\u5f71\u54cd\u3002\n   \n2.\t\u5f53\u8981\u51b3\u7b56\u4e00\u6761\u5bf9\u89d2\u7ebf ${u, v}$ \u65f6\uff08**\u94a6\u5b9a $u< v$**\uff09\uff0c\u6709\u5982\u4e0b\u51e0\u70b9\u7ec6\u8282\uff1a\n\n\t- \u5728\u786e\u5b9a\u80fd\u4e0e $1$ \u6784\u6210\u4e09\u89d2\u5f62\u540e\uff0c\u53e6\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u7b2c\u4e09\u4e2a\u9876\u70b9 $P$ \u7684\u9009\u62e9\u8303\u56f4\u6ee1\u8db3 $P\\in[u+1, v-1]$\u3002\u56e0\u4e3a\u8d85\u51fa\u8fd9\u4e2a\u533a\u95f4\u4e24\u4e2a\u4e09\u89d2\u5f62\u5c31\u4f1a\u76f8\u4ea4\uff0c\u800c\u5728\u9898\u76ee\u5b9a\u4e49\u4e2d\u4efb\u610f\u4e24\u4e2a\u4e09\u89d2\u5f62\u4e0d\u80fd\u6709\u91cd\u5408\u9762\u79ef\u3002\n    - $P$ \u4e0d\u4e00\u5b9a\u662f $u+1$ \u6216 $v-1$\u3002\u56e0\u6b64\u6211\u4eec\u8981\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u80fd\u4e00\u6b65\u5230\u8fbe\u7684\u6240\u6709\u70b9\uff0c\u53ef\u4ee5\u76f8\u5e94\u7684\u5efa\u8fb9\u3002\u5224\u65ad\u65f6\u53ef\u4ee5\u679a\u4e3e $u$ \u6240\u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9 $to$\uff0c\u5982\u679c $G[to][v] = true$ \u4e14\u6ee1\u8db3\u4e0a\u4e00\u6761\u7684\u6761\u4ef6\uff0c\u5219\u662f\u4e00\u4e2a\u5408\u6cd5\u7aef\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528\u3002\n    \n3.\t\u5220\u9664\u548c\u65b0\u589e\u5bf9\u89d2\u7ebf\u4e5f\u8981\u5bf9\u76f8\u5e94\u7684\u8fb9\u66f4\u6539\u3002\n\t\u76f8\u5e94\u7684\uff0c\u5220\u9664\u53ef\u4ee5\u5bf9\u8fde\u63a5\u539f\u5bf9\u89d2\u7ebf\u7684\u65e0\u5411\u8fb9\u6253\u4e0a\u6807\u8bb0\u3002\u540e\u7eed\u51b3\u7b56\u8df3\u8fc7\u5373\u53ef\u3002\u4e0d\u8fc7\u4e0d\u5acc\u9ebb\u70e6\u4e5f\u53ef\u4ee5\u628a\u5bf9\u5e94\u4f4d\u7f6e\u66ff\u6362\u4e3a\u65b0\u7684\u5bf9\u89d2\u7ebf\u7684\u65e0\u5411\u8fb9\uff0c\u5b9e\u73b0\u8d77\u6765\u7565\u590d\u6742\u3002\n    \n\u679a\u4e3e\u6240\u6709\u5bf9\u89d2\u7ebf\u662f $O(n)$\uff0c\u7136\u800c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u53ef\u80fd\u8981\u540e\u9519 $n$ \u6b21\uff0c\u6545\u4e0a\u7ebf\u679a\u4e3e\u91cf\u662f $O(n^2)$ \u7ea7\u522b\u3002\u5bf9\u4e8e\u679a\u4e3e\u5bf9\u89d2\u7ebf\u7684\u4e24\u7aef\u70b9\uff0c\u627e\u53e6\u4e00\u4e09\u89d2\u5f62\u7684\u64cd\u4f5c\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u4f18\u5316\uff0c\u6545\u4e00\u6b21\u51b3\u7b56\u662f $O(m)$ \u7684\uff0c\u5176\u4e2d $m$ \u662f\u8fb9\u6570\u3002\u800c\u6ee1\u8db3\u8fb9\u6570\u603b\u548c\u4e0d\u4f1a\u8fc7\u5927\uff0c$\\sum m$ \u4e5f\u662f $O(n)$ \u7ea7\u522b\uff0c\u6240\u4ee5\u6700\u7ec8\u590d\u6742\u5ea6\u4e0a\u7ebf\u662f $O(n^2)$\u3002\u5f53\u7136\u5e78\u8fd0\u7684\u8bdd\u53ef\u4ee5\u8dd1\u5230 $O(n)$\u3002\n\n# \u4ee3\u7801\n\n\u679a\u4e3e\u5373\u540e\u9519\u5bf9\u89d2\u7ebf\u7528\u4e86\u961f\u5217\uff0c\u5199\u8d77\u6765\u66f4\u5bb9\u6613\u61c2\u3002\u53d8\u91cf\u540d\u89e3\u91ca\u5728\u6ce8\u91ca\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\ntypedef pair<int, int> PII;\nconst int maxn = 1005;\n\nbool G[maxn][maxn];//\u5224\u65ad\u80fd\u5426\u4e00\u6b21\u5230\u8fbe\nint n;\nstruct Diagonal{//\u5f85\u64cd\u4f5c\u5bf9\u89d2\u7ebf\n    int u, v;\n}D[maxn];\nPII steps[maxn * 20];//\u8bb0\u5f55\u6b65\u9aa4\nint tot;\nstruct Edge{//\u56fe\u4e0a\u7684\u8fb9\n    int v, next;\n    bool st;\n}e[maxn << 3];\nint p[maxn], len;\n\nvoid add(int u, int v){\n    e[len] = (Edge){v, p[u], false}, p[u] = len ++;\n}\n\nint prev(int p){//\u627e\u73af\u4e0a\u524d\u4e00\u4e2a\u70b9\n    return p == 1 ? n : p - 1;\n}\n\nint next(int p){//\u627e\u73af\u4e0a\u540e\u4e00\u4e2a\u70b9\n    return p % n + 1;\n}\n\nvoid init(){\n    memset(p, -1, sizeof p), len = 0;\n    memset(G, 0, sizeof G);\n    for (int i = 1; i <= n; i ++){\n        int u = i, v = next(u);\n        G[u][v] = G[v][u] = true;\n        add(u, v), add(v, u);\n    }\n}\n\nvoid getMethod(int &cnt, bool st){\n    init();\n    cnt = 0;\n    queue<Diagonal> q;\n    for (int i = 1, u, v; i <= n - 3; i ++){\n        cin >> u >> v;\n        add(u, v), add(v, u);\n        if (u > v) swap(u, v);//\u94a6\u5b9a u < v\n        D[i] = (Diagonal){u, v}, G[u][v] = G[v][u] = true;\n        if (u != 1 && v != 1) q.push(D[i]);//\u4e0e 1 \u76f8\u8fde\u6ca1\u5fc5\u8981\u518d\u64cd\u4f5c\u4e86\n    }\n    while (!q.empty()){\n        Diagonal D = q.front();\n        q.pop();\n        int u = D.u, v = D.v;\n        if (!G[u][1] || !G[v][1]){//\u4e0d\u80fd\u4e0e 1 \u6784\u6210\u4e09\u89d2\u5f62\n            q.push(D); \n            continue;\n        }\n        int temp = -1, idx = -1;//\u53e6\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u7b2c\u4e09\u4e2a\u9876\u70b9\uff1b\u51b3\u7b56\u5bf9\u89d2\u7ebf\u7684\u7d22\u5f15\uff08\u65b9\u4fbf\u5220\u9664\uff09\n        for (int i = p[u]; ~i; i = e[i].next){\n            int to = e[i].v;\n            if (to == v && !e[i].st) idx = i;\n            if (to >= v || e[i].st || to == 1){\n                continue;\n            }\n            if (G[to][v]){\n                temp = to;\n                break;\n            }\n        }\n        if (temp == -1){//\u627e\u4e0d\u5230\u53e6\u4e00\u4e2a\u5408\u6cd5\u4e09\u89d2\u5f62\n            q.push(D); \n            continue;\n        }\n        /* \u5220\u9664\u539f\u5bf9\u89d2\u7ebf\uff0c\u52a0\u5165\u65b0\u5bf9\u89d2\u7ebf\uff0c\u6ce8\u610f\u56fe\u4e2d\u8fb9\u548c\u4e00\u6b65\u5230\u8fbe\u72b6\u6001\u4e5f\u8981\u66f4\u6539 */\n        G[u][v] = G[v][u] = false;\n        G[1][temp] = G[temp][1] = true;\n        e[idx].st = e[idx ^ 1].st = true;\n        add(1, temp), add(temp, 1);\n        /* \u63d2\u5165\u64cd\u4f5c\u3002\u5982\u679c\u64cd\u4f5c\u8981\u53cd\u8fc7\u6765\u7ffb\u8f6c\u7684\u5bf9\u89d2\u7ebf\u5c31\u662f\u51b3\u7b56\u4e2d\u65b0\u7684\u5bf9\u89d2\u7ebf */\n        steps[++ tot] = st ? make_pair(1, temp) : make_pair(u, v), cnt ++;\n    }\n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n    cin >> n;\n    tot = 0;\n    int cnt1 = 0, cnt2 = 0;\n    /* now -> P1 */\n    getMethod(cnt1, 0);\n    /* now -> P2 */\n    getMethod(cnt2, 1);\n    \n    /* out */\n    cout << tot << endl;\n    /* \u539f\u59cb\u72b6\u6001\u5230\u4e2d\u7ee7\u72b6\u6001\u7684\u64cd\u4f5c\u65b9\u6848 */\n    for (int i = 1; i <= cnt1; i ++){\n        cout << steps[i].first << ' ' << steps[i].second << endl;\n    }\n    /* \u4e2d\u7ee7\u72b6\u6001\u5230\u6700\u7ec8\u72b6\u6001\u7684\u64cd\u4f5c\u65b9\u6848 \u6ce8\u610f\u64cd\u4f5c\u6b65\u9aa4\u8981\u53cd\u8fc7\u6765 */\n    for (int i = tot; i > cnt1; i --){\n        cout << steps[i].first << ' ' << steps[i].second << endl;\n    }\n\n    return 0;\n}\n```\n\n\n\n------------\n\n",
        "postTime": 1663161666,
        "uid": 528114,
        "name": "jjsnam",
        "ccfLevel": 6,
        "title": "CF512E\u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u5b58\u5728\u7ebf\u6027\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u64cd\u4f5c\u6b21\u6570\u4e0a\u754c\u4e3a $2n$\u3002\n\n\u4ecd\u7136\u662f\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u7684\u4e2d\u7ee7\u72b6\u6001\uff0c\u4efb\u4f55\u72b6\u6001\u90fd\u53ef\u4ee5\u7b80\u5355\u5730\u8f6c\u79fb\u5230\u6b64\u72b6\u6001\uff0c\u90a3\u4e48\u6211\u4eec\u5206\u522b\u6c42\u51fa\u8d77\u59cb\u548c\u7ec8\u6b62\u6001\u5230\u8fd9\u4e2a\u4e2d\u7ee7\u72b6\u6001\u7684\u6b65\u9aa4\uff0c\u7136\u540e\u5bf9\u4e8e\u7ec8\u6b62\u6001\u5230\u4e2d\u7ee7\u6001\u7684\u64cd\u4f5c\u5168\u90e8\u53d6\u53cd\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee5\u4e0a\u505a\u6cd5\u5176\u5b9e\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0c\u4f46\u662f\u5b9e\u73b0\u90fd\u4f7f\u7528\u4e86 $n^2$ \u7684\u6784\u9020\u6cd5\uff0c\u63a5\u4e0b\u6765\u6211\u4ecb\u7ecd\u4e00\u79cd\u7ebf\u6027\u6784\u9020\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u6bcf\u6b21\u90fd\u4f1a\u9009\u62e9\u4e00\u4e2a\u5f62\u5982 $1-a-x-b$ \u7684\u56db\u8fb9\u5f62\uff0c\u5176\u4e2d $a$ \u548c $b$ \u90fd\u76f4\u63a5\u4e0e $a$ \u76f8\u8fde\uff0c\u5e76\u4e14 $a$\uff0c$b$ \u4e4b\u95f4\u6709\u76f4\u63a5\u8fde\u8fb9\u3002\u7136\u540e\u5bf9 $(a,b)$ \u6267\u884c\u64cd\u4f5c\uff0c\u5c31\u5f97\u5230\u4e86 $(1,x)$ \u7684\u8fb9\u3002\n\n\u4e00\u79cd\u505a\u6cd5\u662f\u5bfb\u627e\u6709\u8fde\u8fb9\u7684 $(a,b)$\uff0c\u7136\u540e\u679a\u4e3e $x$ \u68c0\u67e5\u662f\u5426\u4e0e $(a,b)$ \u90fd\u6709\u8fde\u8fb9\uff0c\u5176\u4ed6\u90e8\u5206\u9898\u89e3\u662f\u8fd9\u4e2a\u505a\u6cd5\u6211\u4e0d\u518d\u591a\u8bf4\uff0c\u4f46\u8fd9\u6837\u662f\u6ca1\u6709\u524d\u9014\u7684 $n^2$\uff0c\u6700\u591a\u4f7f\u7528 bitset \u4f18\u5316\u5230 $\\frac {n^2}\\omega$\u3002\n\n\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u66f4\u597d\u5730\u5229\u7528\u4e86\u9898\u76ee\u7684\u6027\u8d28\uff0c\u6211\u4eec\u79f0\u4e0e $1$ \u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u4e3a\u5173\u952e\u70b9\uff0c\u5219\u6211\u4eec\u8f6c\u4e3a\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u4e0e\u591a\u5c11\u4e2a\u5173\u952e\u70b9\u76f8\u8fde\u3002\u5177\u4f53\u7684\u65b9\u6cd5\u662f\u5f53\u6bcf\u4e2a\u70b9\u6210\u4e3a\u5173\u952e\u70b9\u7684\u65f6\u5019\u6211\u4eec\u679a\u4e3e\u5176\u51fa\u8fb9\uff0c\u82e5\u7ec8\u70b9\u8fd8\u672a\u4e0e\u5173\u952e\u70b9\u76f8\u8fde\uff0c\u5219\u8bb0\u5f55\u4e0b\u6765\u7ec8\u70b9\u4e0e\u6b64\u5173\u952e\u70b9\u76f8\u8fde\uff1b\u5426\u5219\uff0c\u7ec8\u70b9\u5df2\u7ecf\u8fde\u5411\u7684\u5173\u952e\u70b9\u548c\u5f53\u524d\u5173\u952e\u70b9\u5c31\u5f62\u6210\u4e86\u4e00\u7ec4 $(a,x,b)$\u3002\u73b0\u5728\u7684\u95ee\u9898\u662f\u5982\u4f55\u68c0\u67e5 $(a,b)$ \u662f\u5426\u6709\u8fb9\u76f8\u8fde\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u6b64\u65f6 $1$ \u4e0d\u4e0e $x$ \u8054\u901a\uff0c\u5219 $a$ \u5c31\u4e00\u5b9a\u4e0e $b$ \u76f8\u8fde\u3002\u6211\u4eec\u5bf9 $(a,b)$ \u6267\u884c\u64cd\u4f5c\uff0c\u7136\u540e\u5c06 $x$ \u8bbe\u4e3a\u5173\u952e\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u9012\u5f52\u5730\u5b9e\u73b0\u3002\n\n\u5b8c\u4e86\u3002\u6bcf\u4e2a\u70b9\u548c\u8fb9\u53ea\u4f1a\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u6240\u4ee5\u662f\u7ebf\u6027\u3002\n\n```cpp\n#include<bits/stdc++.h>\nconst int N=4050;\nusing namespace std;\n\n#define _to e[i].to\n#define fore(k) for(int i=hd[k];i;i=e[i].nx)\nstruct edge{\n    int to,nx;\n}e[N];int hd[N],S;\nvoid add(int fr,int to){\n    e[++S]=(edge){to,hd[fr]},hd[fr]=S;\n}\nint v[N],con[N];\nvector<pair<int,int>>ans1,ans2;\n\nint n,fl;\n\nvoid push(int k){\n\tv[k]=-1;//\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\n\tfore(k){\n\t\tif(v[_to]==0)\n\t\t\tv[_to]=k;\n\t\telse if(v[_to]!=-1){\n\t\t\tif(fl){\n\t\t\t\tif(!con[_to])ans1.push_back({k,v[_to]});\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!con[_to])ans2.push_back({1,_to});\n\t\t\t}\n\t\t\tpush(_to);\n\t\t}\n\t}\n}\n\nvoid solve(){\n\tmemset(hd,0,sizeof(hd));S=0;\n\tmemset(v,0,sizeof(v));\n\tmemset(con,0,sizeof(con));\n\tv[1]=-1;\n\tfor(int i=1;i<=n;i++)\n\t\tadd(i,i%n+1),add(i%n+1,i);\n\tfor(int i=1;i<=n-3;i++){\n\t\tint x,y;cin>>x>>y;\n\t\tadd(x,y),add(y,x);\n\t\tif(x==1||y==1)\n\t\t\tcon[x+y-1]=1;\n\t}\n\tfore(1)push(_to);\n}\n\nint main(){\n\tcin>>n;\n\tfl=1;solve();\n//\tcout<<endl;\n\tfl=0;solve();\n\tcout<<ans1.size()+ans2.size()<<endl;\n\tfor(int i=0;i<ans1.size();i++)\n\t\tcout<<ans1[i].first<<' '<<ans1[i].second<<endl;\n\tfor(int i=ans2.size()-1;~i;i--)\n\t\tcout<<ans2[i].first<<' '<<ans2[i].second<<endl;\n}\n```\n\n\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u4ee3\u7801\uff1a\n\n- $fl$ \u4ee3\u8868\u6b64\u65f6\u64cd\u4f5c\u662f\u5426\u662f\u6b63\u5e8f\u7684\uff0c\u6b63\u5e8f\u548c\u9006\u5e8f\u7684\u64cd\u4f5c\u662f\u76f8\u53cd\u7684\u3002\u6b63\u5e8f\u6267\u884c $(a,b)$\uff0c\u9006\u5e8f\u6267\u884c $(1,x)$\u3002\n- `push(x)` \u4ee3\u8868\u5c06 $x$ \u8bbe\u4e3a\u5173\u952e\u70b9\u3002\n\n",
        "postTime": 1635508807,
        "uid": 390297,
        "name": "Sagari",
        "ccfLevel": 0,
        "title": "CF512E"
    },
    {
        "content": "~~\u672c\u6765\u4ee5\u4e3a\u662f\u4e00\u9053\u5947\u602a\u7684dp\u9898\uff0c\uff0c\uff0c\u7136\u800c\u53d1\u73b0\u5b83\u4e0d\u662f\u6c42\u6700\u5c0f\u503c\uff0c\u800c\u662f\u6c42\u5177\u4f53\u65b9\u6848\u3002\u3002\u3002~~\n\n\u6709\u4e00\u79cd\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n\u5c06\u8fd9\u4e2a\u88ab\u5206\u6210\u8bb8\u591a\u4e09\u89d2\u5f62\u7684\u591a\u8fb9\u5f62\u6620\u5c04\u6210\u4e00\u4e2a\u6709\u6839\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u4e09\u89d2\u5f62\u662f\u4e00\u4e2a\u975e\u6839\u3001\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u6bcf\u6761\u5bf9\u89d2\u7ebf\u662f\u4e00\u6761\u8fb9\uff0c\u6839\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u591a\u8fb9\u5f62\u5916\u3002\u901a\u8fc7\u65cb\u8f6c\u8be5\u6811\u76f4\u5230\u65cb\u8f6c\u6210\u4e86\u76ee\u6807\u72b6\u6001\u3002\u76ee\u6807\u72b6\u6001\u53ef\u4e3a\u4efb\u4f55\u4e00\u79cd\u6784\u578b\u7684\u6811\u3002\u5b9e\u9645\u4e0a\u662f**\u5148\u6784\u9020\u51fa\u521d\u59cb\u72b6\u6001\u4e0b\u7684\u6570\uff0c\u7136\u540e\u4ee5\u540c\u6837\u7684\u6839\u6784\u9020\u51fa\u76ee\u6807\u72b6\u6001\u4e0b\u7684\u6811\uff0c\u7136\u540e\u65cb\u8f6c\u3001\u8ba1\u6570**\u3002\u8bf7\u5141\u8bb8\u6211\u7528\u5b98\u65b9\u9898\u89e3\u4e2d\u7684\u56fe\u3002\n\n![](https://puu.sh/e4tiX/db64342636.png)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\nvector <int> e[1001];\nbool have[1001];\n\nstruct node {\n\tint leftMark, rightMark;\n\tnode* sonLeft, *sonRight;\n\tvoid updateMark() {\n\t\tleftMark = sonLeft->leftMark;\n\t\trightMark = sonRight->rightMark;\n\t}\n}*start, *want;\n\nstruct step {\n\tint fromA, fromB;\n\tint toA, toB;\n};\n\nnode* addNode(int L, int R, int from) {\n\tnode *t = new node();\n\tt->leftMark = L;\n\tt->rightMark = R;\n\tif(L == R+1)\n\t\treturn t;\n\tfor(int i = 0; i < e[L].size(); i++)\n\t\tif(e[L][i] != from)\n\t\t\thave[e[L][i]] = true;\n\tint M = -1;\n\tfor(int j = 0; j < e[R].size(); j++)\n\t\tif(e[R][j] != from)\n\t\t\tif(have[e[R][j]])\n\t\t\t\tM = e[R][j];\n\tfor(int i = 0; i < e[L].size(); i++)\n\t\thave[e[L][i]] = false;\n\tt->sonLeft = addNode(L, M, R);\n\tt->sonRight = addNode(M, R, L);\n\treturn t;\n}\n\nnode* input() {\n\tfor(int i = 1; i <= n; i++)\n\t\te[i].clear();\n\tfor(int i = 1; i <= n-3; i++) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\te[a].push_back(b);\n\t\te[b].push_back(a);\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tint j = i+1;\n\t\tif(i == n) j = 1;\n\t\te[i].push_back(j);\n\t\te[j].push_back(i);\n\t}\n\treturn addNode(n, 1, -1);\n}\n\nvoid print(node *p, string append) {\n\tcout << append << p->leftMark << \" \" << p->rightMark << endl;\n\tif(p->sonLeft != NULL)\n\t\tprint(p->sonLeft, append + \"\\t\");\n\tif(p->sonRight != NULL)\n\t\tprint(p->sonRight, append + \"\\t\");\n}\n\nvector <step> record;\n\nvoid rotateR(node *r) {\n\tstep t;\n\tnode *s = r->sonLeft;\n\tnode *a = s->sonLeft;\n\tnode *b = s->sonRight;\n\tnode *c = r->sonRight;\n\tt.fromA = s->leftMark;\n\tt.fromB = s->rightMark;\n\tr->sonLeft = a;\n\tr->sonRight = s;\n\ts->sonLeft = b;\n\ts->sonRight = c;\n\ts->updateMark();\n\tr->updateMark();\n\tt.toA = s->leftMark;\n\tt.toB = s->rightMark;\n\trecord.push_back(t);\n}\n\nvoid rotateL(node *r) {\n\tstep t;\n\tnode *s = r->sonRight;\n\tnode *a = r->sonLeft;\n\tnode *b = s->sonLeft;\n\tnode *c = s->sonRight;\n\tt.fromA = s->leftMark;\n\tt.fromB = s->rightMark;\n\tr->sonLeft = s;\n\tr->sonRight = c;\n\ts->sonLeft = a;\n\ts->sonRight = b;\n\ts->updateMark();\n\tr->updateMark();\n\tt.toA = s->leftMark;\n\tt.toB = s->rightMark;\n\trecord.push_back(t);\n}\n\nvoid rotateRT(node *p, int middle) {\n\tint myMiddle = p->sonLeft->rightMark;\n\tif(myMiddle == middle)\n\t\treturn;\n\tif(myMiddle < middle) {\n\t\trotateRT(p->sonLeft, middle);\n\t\trotateR(p);\n\t} else if(myMiddle > middle) {\n\t\trotateRT(p->sonRight, middle);\n\t\trotateL(p);\n\t}\n}\n\nvoid norm(node *p) {\n\tif(p->leftMark - p->rightMark <= 2) return;\n\tint middle = (p->leftMark + p->rightMark) / 2;\n\trotateRT(p, middle);\n\tnorm(p->sonLeft);\n\tnorm(p->sonRight);\n}\n\nint main() {\n\tios :: sync_with_stdio(false);\n\tmemset(have, 0, sizeof(have));\n\tcin >> n;\n\tstart = input();\n\tnorm(start);\n\tvector <step> record1 = record;\n\trecord.clear();\n\twant = input();\n\tnorm(want);\n\tcout << record.size() + record1.size() << endl;\n\tfor(int i = 0; i < record1.size(); i++)\n\t\tcout << record1[i].fromA << \" \" << record1[i].fromB << endl;\n\tfor(int i = record.size()-1; i >= 0; i--)\n\t\tcout << record[i].toA << \" \" << record[i].toB << endl;\n\treturn 0;\n}\n```\n\n~~\u597d\u70e6\u554aQAQ~~\n\n\u7136\u800c\u8fd8\u6709\u4e00\u79cd\u7b80\u5355\u800c\u66b4\u529b\u7684\u601d\u8def\uff1a\n\n\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u53d8\u6362\u4f7f\u521d\u59cb\u72b6\u6001\u4e2d\u6240\u6709\u7684\u5bf9\u89d2\u7ebf\u53d8\u6210\u4ee51\u53f7\u8282\u70b9\u4e3a\u7aef\u70b9\u7684\u5bf9\u89d2\u7ebf\u5e76\u6b63\u5e8f\u5b58\u50a8\u53d8\u6362\u7684\u6b65\u9aa4\uff0c\u7136\u540e\u5728\u8fdb\u884c\u4e00\u7cfb\u5217\u53d8\u6362\u4f7f\u76ee\u6807\u72b6\u6001\u4e2d\u6240\u6709\u7684\u5bf9\u89d2\u7ebf\u4e5f\u53d8\u6210\u4ee51\u53f7\u8282\u70b9\u4e3a\u7aef\u70b9\u7684\u5bf9\u89d2\u7ebf\u5e76**\u5012\u5e8f\u5b58\u50a8**\u53d8\u6362\u7684\u6b65\u9aa4\uff08\u6bd5\u7adf\u8fd9\u5b9e\u9645\u4e0a\u662f\u5012\u63a8\uff09\uff0c\u8bb0\u4e00\u4e0b\u603b\u6570\u5e76\u8f93\u51fa\u6b65\u9aa4\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> pii;\ntypedef vector<pii> vii;\n\nconstexpr int maxn = 1010;\n\nint n;\nbool e[maxn][maxn];\n\npii flip(int a, int b, bool inv) {\n\tint x = -1, y;\n\tfor (int i = 0; i < n; i++)\n\t\tif (e[a][i] && e[b][i])\n\t\t\tif (x == -1) x = i;\n\t\t\telse {\n\t\t\t\ty = i;\n\t\t\t\tbreak;\n\t\t\t}\n\te[a][b] = e[b][a] = false;\n\te[x][y] = e[y][x] = true;\n\treturn inv ? make_pair(x, y) : make_pair(a, b);\n}\n\nvii solve(bool inv) {\n\tmemset(e, 0, sizeof(e));\n\tfor (int i = 0; i < n; i++) e[i][(i + 1) % n] = e[(i + 1) % n][i] = true;\n\tfor (int i = 0, a, b; i < n - 3; i++) {\n\t\tcin >> a >> b;\n\t\ta--;\n\t\tb--;\n\t\te[a][b] = e[b][a] = true;\n\t}\n\tvii res;\n\tfor (int i = 1; i < n;) {\n\t\tif (e[0][i]) {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tint j;\n\t\tfor (j = i + 1; e[0][j] == 0; j++);\n\t\tres.push_back(flip(i - 1, j, inv));\n\t}\n\treturn res;\n}\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tcin >> n;\n\tvii a = solve(false), b = solve(true);\n\tcout << a.size() + b.size() << endl;\n\tfor (int i = 0; i < (int)a.size(); i++) cout << a[i].first + 1 << \" \" << a[i].second + 1 << endl;\n\tfor (int i = b.size() - 1; i >= 0; i--) cout << b[i].first + 1 << \" \" << b[i].second + 1 << endl;\n\treturn 0;\n}\n```\n\n~~\u660e\u663e\u7b80\u5355\u4e86\u8bb8\u591a~~",
        "postTime": 1543417000,
        "uid": 119553,
        "name": "rEdWhitE_uMbrElla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF512E \u3010Fox And Polygon\u3011"
    },
    {
        "content": "# \u9898\u5916\u8bdd\n\n\u8054\u8003\u4e2d\u6709\u8da3\u7684\u6784\u9020\u9898\uff0c\u7b2c\u4e00\u6b21\u8d5b\u65f6\u60f3\u51fa\u6765\u9898(~~\u53ea\u53ef\u60dc\u521a\u5f00\u8003\u65f6\u7761\u7740\u4e86\u5bfc\u81f4\u60f3\u5b8c\u4e86\u6ca1\u5199\u5b8c~~)\u3002\n\n# \u9898\u610f\n\n- \u7ed9\u4f60\u4e24\u4e2a $N$ \u4e2a\u70b9\u7684\u591a\u8fb9\u5f62\u7684\u4e09\u89d2\u5256\u5206\u65b9\u6848\uff08\u5c06\u591a\u8fb9\u5f62\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u4e09\u89d2\u5f62\uff0c\u5373\u591a\u8fb9\u5f62\u5185\u8fde\u8fb9\u4e14\u4e0d\u5b58\u5728\u4e24\u6761\u76f8\u4ea4\u7684\u8fb9\uff0c\u8fde\u8fb9\u6570\u4e3a $N-3$\uff09\u3002\n- \u73b0\u5728\u4f60\u80fd\u591f\u8fdb\u884c\u4e00\u79cd\u64cd\u4f5c\uff1a\u9009\u62e9\u591a\u8fb9\u5f62\u5185\u90e8\u7684\u4e00\u6761\u8fb9\uff0c\u8fde\u63a5\u8fd9\u6761\u8fb9\u6240\u5728\u7684\u4e24\u4e2a\u4e09\u89d2\u5f62\u5bf9\u5e94\u7684\u9876\u70b9\uff08\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u64cd\u4f5c\u540e\u8fd9\u5f20\u56fe\u4f9d\u7136\u662f\u591a\u8fb9\u5f62\u7684\u4e00\u79cd\u4e09\u89d2\u5256\u5206\u65b9\u5f0f\uff09\u3002\n- \u8981\u6c42\u4f60\u7ed9\u51fa\u6784\u9020\u65b9\u6848\uff0c\u5e76\u9650\u5236\u6b65\u6570\u4e3a $Q$\uff0c\u5c06\u7ed9\u51fa\u7684\u7b2c\u4e00\u79cd\u4e09\u89d2\u5256\u5206\u65b9\u6848\u8f6c\u5316\u4e3a\u7b2c\u4e8c\u79cd\u4e09\u89d2\u5256\u5206\u65b9\u6848\u3002\n- \u6570\u636e\u8303\u56f4 $N \\leq 1000,Q \\leq 20000$\u3002\n\n# \u5206\u6790\n\n\u901a\u8fc7\u5bf9\u4e8e\u6837\u4f8b\u7684\u6a21\u62df\uff0c\u6211\u4eec\u53d1\u73b0\u76f4\u63a5\u8bbe\u8ba1\u5256\u5206\u65b9\u6848\u72b6\u6001\u540e\u5e76\u8fdb\u884c\u8f6c\u79fb\u662f\u6781\u5176\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u9700\u8981\u627e\u51fa\u4e00\u4e9b\u7279\u6b8a\u7684\u72b6\u6001\u6765\u8fdb\u884c\u4e2d\u95f4\u8f6c\u79fb\uff0c\u800c\u6837\u4f8b\u6709\u4e86\u5f88\u597d\u7684\u63d0\u793a\uff0c\u5373\u9664 $2$ \u4e0e $N$ \u4ee5\u5916\u7684\u6240\u6709\u70b9\u5411 $1$ \u8fde\u8fb9\u7684\u4e09\u89d2\u5256\u5206(\u4e0b\u6587\u79f0\u8fd9\u79cd\u72b6\u6001\u4e3a\u83ca\u82b1)\uff0c\u53c8\u7531\u4e8e\u64cd\u4f5c\u65b9\u6848\u662f\u53ef\u9006\u7684\uff0c\u6211\u4eec\u5c31\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u6784\u9020\u51fa\u4e00\u79cd\u4ece\u83ca\u82b1\u5230\u4efb\u610f\u72b6\u6001(\u4e0b\u79f0\u9700\u8981\u5230\u8fbe\u7684\u72b6\u6001\u4e3a\u7b54\u6848\u72b6\u6001)\u7684\u65b9\u6848\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u6765\u8003\u8651\u4e00\u79cd\u7b80\u5355\u7684\u60c5\u51b5\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/irxm55ap.png)\n\u6b64\u65f6\u4e09\u4e2a\u70b9\u90fd\u5411 $1$ \u6709\u8fde\u8fb9\u4e14\u8fd9\u4e09\u4e2a\u70b9\u4e2d\u4e0d\u5b58\u5728 $1$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u56fe\u4e2d\u4e2d\u95f4\u70b9\u4e0e $1$ \u4e4b\u95f4\u7684\u8fb9\u505a\u4e00\u6b21\u64cd\u4f5c\u53d8\u4e3a\u56fe\u4e2d\u865a\u7ebf\u8fb9\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\u4e00\u822c\u60c5\u51b5\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/e4xlvuhd.png)\n\u6839\u636e\u4e0a\u9762\u7684\u63a8\u5bfc\u6211\u4eec\u53ef\u4ee5\u731c\u60f3\uff0c\u5982\u679c\u60f3\u8981\u6ee1\u8db3\u7b54\u6848\u72b6\u6001\u4e2d\u7684\u4e24\u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u70b9(\u6211\u4eec\u5b9a\u4e49\u201c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u201d\u4e3a\u4e0d\u5305\u62ec $1$ \u7684\u94fe\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u8bbe\u94fe\u957f\u4e3a$len = \\max(a, b) - \\min(a, b)$)\u90fd\u5df2\u7ecf\u5230\u8fbe\u4e86\u7b54\u6848\u72b6\u6001\uff0c\u4e0d\u96be\u53d1\u73b0\u4e2d\u95f4\u5fc5\u7136\u8fd8\u6709\u4e00\u4e2a\u70b9\u4e0e $1$ \u6709\u8fde\u8fb9\u800c\u4e14\u4e0e $A, B$ \u6709\u8fde\u8fb9\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b65\u64cd\u4f5c\u4f7f\u5f97 $A, B$ \u6ee1\u8db3\u7b54\u6848\u72b6\u6001\uff0c\u6b64\u65f6\u6211\u4eec\u5df2\u6784\u9020\u51fa\u4e00\u79cd\u603b\u64cd\u4f5c\u6570\u4e3a $2N$ \u7684\u65b9\u6848\u3002\n\n# \u7b97\u6cd5\u6d41\u7a0b\n\n- \u5177\u4f53\u5730\uff0c\u5f00\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u8bb0\u5f55\u8fde\u8fb9\u60c5\u51b5\u3002\n\n- \u6839\u636e\u4e0a\u6587\u63a8\u51fa\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u5148\u5c06\u7b54\u6848\u72b6\u6001\u4e2d\u7684 $(u, v)$ \u6309\u7167\u5b83\u4eec\u7684 $len$ \u4e0a\u5347\u6392\u5e8f\uff0c\u521d\u59cb\u5316\u8fde\u8fb9\u72b6\u6001($i \\rightarrow i \\bmod N + 1, 1 \\rightarrow i$)\uff0c\u6bcf\u6b21\u627e\u51fa $(u, v)$ \u6240\u5728\u7684\u56db\u8fb9\u5f62\u4e2d\u7684\u53e6\u5916\u4e24\u70b9\u5e76\u5c06\u5176\u8fde\u8fb9\uff0c\u65ad\u5f00 $(u, v)$\u3002\n\n- \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u72b6\u6001\u5230\u83ca\u82b1\u56fe\uff0c\u6211\u4eec\u53ea\u9700\u8981\u91cd\u590d\u4e0a\u8ff0\u7b97\u6cd5\u6d41\u7a0b\u540e\u5c06\u64cd\u4f5c\u5012\u5e8f\u5e76\u53d6\u53cd\u8fdb\u884c\u5373\u53ef\u3002\n\n- \u65f6\u95f4\u590d\u6742\u5ea6 $O(N^2)$ \u7a7a\u95f4\u590d\u6742\u5ea6 $O(N^2)$\u3002\n\n# Code\n\n\n*Talk is cheap, show me the code.*\n\n\n\n```C++\n/*\n                  _/_/_/                _/     _/_/_/_/_/                                   _/             _/       _/_/_/_/   \n                _/      _/              _/    _/                                           _/_/          _/_/      _/      _/  \n_/        _/   _/        _/             _/    _/                                          _/ _/         _/ _/      _/       _/ \n _/      _/    _/        _/             _/    _/                          _/ _/_/_/_/        _/        _/  _/      _/       _/ \n  _/    _/    _/          _/            _/    _/ _/_/_/                   _/_/       _/      _/       _/   _/      _/      _/  \n   _/  _/     _/          _/     _/_/_/ _/    _/       _/                 _/         _/      _/      _/    _/      _/_/_/_/    \n    _/_/      _/          _/  _/      _/_/              _/                _/         _/      _/     _/     _/      _/     _/   \n   _/  _/      _/        _/   _/        _/              _/                _/         _/      _/    _/_/_/_/_/_/_/  _/     _/   \n  _/    _/     _/        _/   _/        _/              _/                _/         _/      _/            _/      _/      _/  \n _/      _/     _/      _/     _/       _/    _/       _/                 _/         _/      _/            _/      _/       _/ \n_/        _/      _/_/_/         _/_/_/   _/   _/_/_/_/     _/_/_/_/_/_/  _/         _/    _/_/_/          _/      _/        _/\nProblem: CF512E Fox And Polygon\nContest: Codeforces\nURL: http://codeforces.com/problemset/problem/512/E\n===================\nMemory Limit: 256.0MB\nTimeLimit: 2.0s\n*/\n#include <iostream>\n#include <algorithm>\n#define FOR(i, l, r) for (int i = l; i < r+1; i++)\n#define ROF(i, r, l) for (int i = r; i > l-1; i--)\n\nconst int MAXN = 1e3+9;\nusing namespace std;\n\nstruct Edge {\n    int u, v, dis;\n}def[MAXN], to[MAXN], ans1[MAXN], ans2[MAXN], ans3[MAXN];\n\n//-----read & write begin-----\ninline int read () {\n    int x = 0;bool w = 0;char ch = getchar();\n    while (!isdigit(ch)) {w = (ch == '-'), ch = getchar();}\n    while (isdigit(ch)) {x = (x << 3) + (x << 1) + ch - '0', ch = getchar();}\n    return w ? -x : x;\n}\nvoid write (int x) {\n    if (x > 9) write(x/10);\n    putchar((char)(x % 10 + '0'));\n}\n//------read & write end------\n\nint N, M;\n\ninline bool cmp (const Edge &a, const Edge &b) {return a.dis < b.dis;}\ninline void Read () {\n    N = read();\n    FOR(i, 1, N-3) {\n        def[i].u = read(), def[i].v = read();\n        if (def[i].u > def[i].v) swap(def[i].u, def[i].v);\n        def[i].dis = def[i].v - def[i].u;\n    }\n    FOR(i, 1, N-3) {\n        to[i].u = read(), to[i].v = read();\n        if (to[i].u > to[i].v) swap(to[i].u, to[i].v);\n        to[i].dis = to[i].v - to[i].u;\n    }\n}\n\nbool edge[MAXN][MAXN];\ninline int nxt (const int &i) {return i % N + 1;}\ninline void Solve (Edge* A, Edge *B, int n, int &sz) {\n    sort(A+1, A+1+n, cmp);\n    FOR(i, 1, N)FOR(j, 1, N) edge[i][j] = 0;\n    FOR(i, 1, N) edge[i][nxt(i)] = edge[nxt(i)][i] = 1;\n    FOR(i, 3, N-1) edge[1][i] = edge[i][1] = 1;\n    int cnt = 0, c1, c2;\n    FOR(i, 1, n) {\n        int u = A[i].u, v = A[i].v;\n        if (u == 1) continue;\n        c1 = c2 = 0;\n        FOR(j, 1, N) {\n            if (edge[u][j] && edge[j][v]) {\n                if (!c1) c1 = j;\n                else c2 = j;\n            }\n        }\n        B[++cnt] = (Edge){c1, c2, max(c1, c2) - min(c1, c2)};\n        edge[c1][c2] = edge[c2][c1] = 0;\n        edge[u][v] = edge[v][u] = 1;\n    }\n    sz = cnt;\n}\n\nint main () {\n\tRead();\n    int M1 = 0, M2 = 0;\n    Solve(def, ans1, N-3, M1);\n\tSolve(to, ans2, N-3, M2);\n    \n    FOR(i, 1, N) FOR(j, 1, N) edge[i][j] = 0;\n    FOR(i, 1, N) edge[i][nxt(i)] = edge[nxt(i)][i] = 1;\n    FOR(i, 1, N-3) edge[def[i].u][def[i].v] = edge[def[i].v][def[i].u] = 1;\n\n    ROF(i, M1, 1) {\n        int c1 = 0, c2 = 0, u = ans1[i].u, v = ans1[i].v;\n        FOR(j, 1, N) if (edge[j][u] & edge[j][v]) {\n            if (!c1) c1 = j;\n            else c2 = j;\n        }\n        ans3[M1-i+1] = (Edge){c1, c2, max(c1, c2) - min(c1, c2)};\n        edge[u][v] = edge[v][u] = 1;\n        edge[c1][c2] = edge[c2][c1] = 0;\n    }\n    write(M1+M2), putchar('\\n');\n    FOR(i, 1, M1) write(ans3[i].u), putchar(' '), write(ans3[i].v), putchar('\\n');\n    FOR(i, 1, M2) write(ans2[i].u), putchar(' '), write(ans2[i].v), putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1679146826,
        "uid": 226527,
        "name": "x0d5_n14R",
        "ccfLevel": 6,
        "title": "CF512E Fox And Polygon"
    },
    {
        "content": "\u6765\u4e00\u53d1\u590d\u6742\u5ea6\u4e3a $O(\\frac{n^2}{32}+n\\log n)$\u7684\u9898\u89e3\u3002\n\n\u8003\u8651\u5230\u6211\u4eec\u8981\u628a\u7b2c\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u6210\u7b2c\u4e8c\u4e2a\uff0c\u800c\u4e14\u72b6\u6001\u8f6c\u79fb\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u60f3\u5230\u8981\u628a\u4e24\u4e2a\u72b6\u6001\u8f6c\u79fb\u6210\u4e00\u4e2a\u4e2d\u95f4\u72b6\u6001\uff0c\u7136\u540e\u5012\u9000\u56de\u53bb\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5b9a\u4e49\u4e2d\u95f4\u72b6\u6001\u4e3a\u6240\u6709\u8282\u70b9\u90fd\u548c $1$ \u53f7\u7ed3\u70b9\u8fde\u8fb9\u3002\n\n\u8003\u8651\u600e\u4e48\u8f6c\u79fb\uff0c\u663e\u7136\u5982\u679c\u4e24\u4e2a\u8fde\u7eed\u7684\u548c $1$ \u76f8\u8fde\u7684\u70b9\u4e0d\u76f8\u90bb\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e24\u4e2a\u4e4b\u95f4\u4e00\u5b9a\u4f1a\u6709\u8fde\u8fb9\uff0c\u4e0d\u7136\u5c31\u4f1a\u51fa\u73b0\u56db\u8fb9\u5f62\u6216\u8005\u4e94\u8fb9\u5f62\u7b49\u7b49\u3002\u8bbe\u8fd9\u4e24\u4e2a\u548c $1$ \u76f8\u8fde\u7684\u70b9\u4e3a $x,y$ \uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u8fd9\u6761\u8fb9\u4e24\u8fb9\u7684\u4e09\u89d2\u5f62\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e3a $1,x,y$ \u6784\u6210\u7684\u4e09\u89d2\u5f62\uff0c\u8fd8\u6709\u4e00\u4e2a\u6211\u4eec\u679a\u4e3e $x,y$ \u4e2d\u95f4\u7684\u70b9\uff0c\u770b\u54ea\u4e2a\u70b9\u548c $x,y$ \u90fd\u6709\u8fde\u8fb9\uff0c\u8bbe\u5176\u4e3a $i$ \uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\u5373\u4e3a $i,x,y$ \u3002\n\n\u627e\u5230\u8fd9\u4e24\u4e2a\u4e09\u89d2\u5f62\u540e\uff0c\u6211\u4eec\u628a $x,y$\u4e4b\u95f4\u7684\u5bf9\u89d2\u7ebf\u8f6c\u6362\u6210 $1,i$\u3002\n\n\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u6b21\u8f6c\u79fb\u3002\n\n\u518d\u8003\u8651\u600e\u6837\u80fd\u8f6c\u79fb\u6240\u6709\u4e0d\u5408\u6cd5\uff08\u8fd9\u91cc\u7684\u4e0d\u5408\u6cd5\u5373\u4e0d\u542b $1$ \u7684\u8fb9\uff09\u7684\u8fb9\uff0c\u6211\u4eec\u4ece $2$ \u5230 $n$ \u679a\u4e3e\u548c $1$ \u6709\u8fde\u8fb9\u7684\u70b9 $x$\uff0c\u627e\u5230\u4e0b\u4e00\u4e2a\u548c $1$ \u6709\u8fde\u8fb9\u7684\u70b9 $y$\u3002\u5982\u679c $x,y$ \u4e0d\u76f8\u90bb\u5219\u5bf9\u8fd9\u6761\u5bf9\u89d2\u7ebf\u8f6c\u79fb\uff0c\u8f6c\u79fb\u540e $x,y$ \u4e4b\u95f4\u591a\u51fa\u4e86\u4e00\u4e2a\u4e0e $1$ \u76f8\u8fde\u7684\u70b9\uff0c\u4e8e\u662f\u5c06 $x$ \u51cf\u4e00\u91cd\u65b0\u653e\u5165\u5faa\u73af\uff0c\u76f4\u5230 $x$ \u7684\u4e0b\u4e00\u4e2a\u4e0e $1$ \u76f8\u8fde\u7684\u70b9 \u4e0e $x$ \u76f8\u90bb\u4e3a\u6b62\u3002\n\n\u4e3a\u4e86\u5feb\u901f\u6267\u884c\u63d2\u5165\u548c\u5bfb\u627e\u540e\u7ee7\u64cd\u4f5c\uff0c\u6211\u4eec\u4f7f\u7528\u5e73\u8861\u6811(`set`)\u6765\u5b8c\u6210\uff0c\u5373\u5c06\u6240\u6709\u4e0e $1$ \u76f8\u8fde\u7684\u70b9\u63d2\u5165\u5e73\u8861\u6811\u4e2d\u3002\n\n\u5728\u5224\u65ad $i$ \u548c $x,y$ \u6709\u6ca1\u6709\u8fde\u8fb9\u65f6\u6211\u4eec\u4f7f\u7528 `bitset`\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u7684\u5e38\u6570\u53c8\u4e58\u4e0a\u4e86 $\\frac{1}{32}$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u679a\u4e3e\uff0c\u4ed6\u7684\u8d21\u732e\u662f\u201c\u5e72\u6389\u4e86\u4e00\u6761\u4e0d\u542b $1$ \u7684\u8fb9\u201d\uff0c\u603b\u5171\u6709 $O(n)$ \u6761\u8fd9\u6837\u7684\u8fb9\uff0c\u6240\u6709\u4f1a\u8fd0\u884c $O(n)$ \u6b21\u5faa\u73af\uff0c\u590d\u6742\u5ea6\u5373\u4e3a $O(\\frac{n^2}{32})$\uff0c\u518d\u52a0\u4e0a\u5916\u9762\u7684\u679a\u4e3e $x$ \u548c\u5e73\u8861\u6811\u64cd\u4f5c\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(\\frac{n^2}{32}+n\\log n)$\u3002\n\n\u6682\u65f6\u7684\u6700\u4f18\u89e3\n[link](https://www.luogu.com.cn/record/list?pid=CF512E&orderBy=1&status=&page=1)\n\n\n$\\sf{Code}$\n\n```cpp\n#include<bits/stdc++.h>\n#define N 2001001\n#define MAX 2001\n#define re register\n#define inf 1e18\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ninline void read(re ll &ret)\n{\n\tret=0;re char c=getchar();re bool pd=false;\n\twhile(!isdigit(c)){pd|=c=='-';c=getchar();}\n\twhile(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();}\n\tret=pd?-ret:ret;\n\treturn;\n}\nll n,x,y;\nbitset<MAX>b[MAX],tmp;\nset<ll>st;\nvector<pair<ll,ll> >ans1,ans2;\ninline ll work(re ll x,re ll y)\n{\n\ttmp=b[x]&b[y];\n\tfor(re int i=x+1;i<y;i++)\n\t\tif(tmp[i])\n\t\t{\n\t\t\tb[x][y]=b[y][x]=0;\n\t\t\tb[1][i]=b[i][1]=1;\n\t\t\treturn i;\n\t\t}\n}\nsigned main()\n{\n\tread(n);\n\tst.insert(n),st.insert(2);\n\tfor(re int i=2;i<=n;i++)\n\t\tb[i-1][i]=b[i][i-1]=1;\n\tb[1][n]=b[n][1]=1;\n\tfor(re int i=1;i<=n-3;i++)\n\t{\n\t\tread(x);\n\t\tread(y);\n\t\tb[x][y]=b[y][x]=true;\n\t\tif(x==1)\n\t\t\tst.insert(y);\n\t\telse if(y==1)\n\t\t\tst.insert(x);\n\t}\n\tfor(re int i=2;i<=n;i++)\n\t{\n\t\tif(b[1][i])\n\t\t{\n\t\t\tre set<ll>::iterator it=st.find(i);\n\t\t\tit++;\n\t\t\tif(it!=st.end()&&(*it)!=i+1)\n\t\t\t{\n\t\t\t\tre ll tmp=work(i,*it);\n\t\t\t\tans1.push_back(make_pair(i,*it));\n\t\t\t\tst.insert(tmp);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(re int i=1;i<=n;i++)\n\t\tb[i].reset();\n\tst.clear();\n\tst.insert(n),st.insert(2);\n\tfor(re int i=2;i<=n;i++)\n\t\tb[i-1][i]=b[i][i-1]=1;\n\tb[1][n]=b[n][1]=1;\n\tfor(re int i=1;i<=n-3;i++)\n\t{\n\t\tread(x);\n\t\tread(y);\n\t\tb[x][y]=b[y][x]=true;\n\t\tif(x==1)\n\t\t\tst.insert(y);\n\t\telse if(y==1)\n\t\t\tst.insert(x);\n\t}\n\tfor(re int i=2;i<=n;i++)\n\t{\n\t\tif(b[1][i])\n\t\t{\n\t\t\tre set<ll>::iterator it=st.find(i);\n\t\t\tit++;\n\t\t\tif(it!=st.end()&&(*it)!=i+1)\n\t\t\t{\n\t\t\t\tre ll tmp=work(i,*it);\n\t\t\t\tans2.push_back(make_pair(1,tmp));\n\t\t\t\tst.insert(tmp);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(re int i=1;i<=n;i++)\n\t\tb[i].reset();\n\tst.clear();\n\tprintf(\"%d\\n\",ans1.size()+ans2.size());\n\tfor(re int i=0;i<ans1.size();i++)\n\t\tprintf(\"%lld %lld\\n\",ans1[i].first,ans1[i].second);\n\tfor(re int i=ans2.size()-1;i>=0;i--)\n\t\tprintf(\"%lld %lld\\n\",ans2[i].first,ans2[i].second);\n\texit(0);\n}\n```\n",
        "postTime": 1612233654,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF512E \u3010Fox And Polygon\u3011"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u6b63$n$\u8fb9\u5f62\u548c\u5b83\u7684$n-3$\u6761\u4e0d\u76f8\u4ea4\u7684\u5bf9\u89d2\u7ebf\u3002\n\n\u4e00\u6b21\u64cd\u4f5c\u53ef\u4ee5\u8ba9\u4e00\u6761\u5bf9\u89d2\u7ebf\u53d8\u6210\u5176\u6240\u5728\u7684\u56db\u8fb9\u5f62\uff08\u6ce8\u610f\uff1a\u56e0\u4e3a\u6709$n-3$\u6761\u4e0d\u76f8\u4ea4\u7684\u5bf9\u89d2\u7ebf\uff0c\u6240\u4ee5\u4efb\u610f\u4e00\u6761\u5bf9\u89d2\u7ebf\u4e00\u5b9a\u5305\u542b\u5728\u4e00\u4e2a\u56db\u8fb9\u5f62\u91cc\uff09\u7684\u53e6\u4e00\u6761\u5bf9\u89d2\u7ebf\u3002\n\n\u95ee\u4e00\u79cd\u5728$20000$\u6b65\u4e4b\u5185\uff0c\u5c06\u4e00\u79cd\u5bf9\u89d2\u7ebf\u7684\u65b9\u5f0f\u53d8\u4e3a\u53e6\u4e00\u79cd\u5bf9\u89d2\u7ebf\u7684\u65b9\u5f0f\u7684\u64cd\u4f5c\u6b65\u9aa4\n\n\u5206\u6790\uff1a\n\n\u624b\u73a9\u51e0\u4e2a\u6837\u4f8b\uff0c\u5bb9\u6613\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u53ef\u4ee5\u901a\u8fc7\u5f88\u591a\u79cd\u64cd\u4f5c\u5c06\u4e00\u5f20\u521d\u59cb\u7684\u56fe\u53d8\u6210\u4efb\u610f\u4e00\u79cd\u56fe\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\u5c31\u662f\u64cd\u4f5c\u53ef\u9006\uff0c\u53ef\u4ee5\u901a\u8fc7\u518d\u6765\u4e00\u6b21\u64cd\u4f5c\u53d8\u6210\u539f\u6765\u7684\u56fe\u3002\n\n\u5bb9\u6613\u60f3\u5230\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u7684\u5bf9\u89d2\u7ebf\u90fd\u6302\u5230\u8282\u70b9$1$\u4e0a\uff0c\u7136\u540e\u5c06\u5b83\u53d8\u4e3a\u53e6\u4e00\u5f20\u56fe\u3002\n\n\u7531\u4e8e\u4e0a\u8ff0\u6027\u8d28\u7684\u5b58\u5728\uff0c\u56e0\u6b64\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e24\u5f20\u56fe\uff0c\u90fd\u53d8\u6210\u6240\u6709\u5bf9\u89d2\u7ebf\u90fd\u6302\u5230$1$\u4e0a\u3002\n\n\u800c\u5c06\u6240\u6709\u5bf9\u89d2\u7ebf\u6302\u5230$1$\u53f7\u8282\u70b9\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5148\u5f3a\u5236\u89c4\u5b9a\u4e00\u6761\u5bf9\u89d2\u7ebf\u53ea\u80fd\u4ece\u7f16\u53f7\u5c0f\u7684\u70b9\u8fde\u5230\u7f16\u53f7\u5927\u7684\u70b9\uff0c\u4ece$2-n$\u4f9d\u6b21\u8003\u8651\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5f53\u524d\u70b9\u7684\u51fa\u8fb9\u6709\u5f88\u591a\u6761\uff0c\u5982\uff1a$2\\to3,2\\to4$\u90fd\u6709\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f$1,2,3,4$\u8fd9\u4e2a\u51e0\u4e2a\u70b9\u6784\u6210\u4e86\u4e00\u4e2a\u56db\u8fb9\u5f62\uff0c\u5982\u679c\u5f53\u524d\u70b9\u51fa\u8fb9\u53ea\u6709\u4e00\u6761\uff08\u8bbe\u5f53\u524d\u70b9\u4e3a$i$\uff09\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f$1,i,i+1,nxt$\u6784\u6210\u7684\u56db\u8fb9\u5f62\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n``` cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<set> \n#define N 20005\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint n,a[N],b[N],c[N],d[N],ans1[N],ans2[N],k,ans3[N],ans4[N],kk;\nset<int>st[N];\nset<int>stt[N];\nset<int>::iterator it;\nint main()\n{\n//\tfreopen(\"CF512E.in\",\"r\",stdin);\n//\tfreopen(\"CF512E.out\",\"w\",stdout);\n\tn=read();\n\tfor(int i=1;i<=n-3;i++)\n\t{\n\t\ta[i]=read();\n\t\tb[i]=read();\n\t\tif(a[i]>b[i])swap(a[i],b[i]);\n\t\tst[a[i]].insert(b[i]);\n\t}\n\t//it=st[2].end();\n\t//it--;\n\t//cout<<(*it)<<endl;\n\t//return 0;\n\tfor(int i=1;i<=n-3;i++)\n\t{\n\t\tc[i]=read();\n\t\td[i]=read();\n\t\tif(c[i]>d[i])swap(c[i],d[i]);\n\t\tstt[c[i]].insert(d[i]);\n\t}\n//\tif(n==4)\n//\t{\n//\t\tcout<<1<<endl;\n//\t\tcout<<a[1]<<\" \"<<b[1]<<endl;;\n//\t\treturn 0;\n//\t}\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\twhile(st[i].size())\n\t\t{\n\t\t\tit=st[i].end();\n\t\t\tit--;\n\t\t\tint now=*it;\n\t\t\t//cout<<i<<\" \"<<now<<endl;\n\t\t\tint nxt;\n\t\t\tst[i].erase(now);\n\t\t\t//return 0;\n\t\t\tif(!st[i].size())\n\t\t\t{\n\t\t\t\tnxt=i+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tit=st[i].end();it--;\n\t\t\t\tnxt=*it;\n\t\t\t}\n\t\t\tst[1].insert(nxt);\n\t\t\tans1[++k]=i;\n\t\t\tans2[k]=now;\n\t\t}\n\t}\n\t//cout<<\"-----------\"<<endl;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\twhile(stt[i].size())\n\t\t{\n\t\t\tit=stt[i].end();\n\t\t\tit--;\n\t\t\tint now=*it;\n\t\t\t//cout<<i<<\" \"<<now<<endl;\n\t\t\tint nxt;\n\t\t\tstt[i].erase(now);\n\t\t\t//return 0;\n\t\t\tif(!stt[i].size())\n\t\t\t{\n\t\t\t\tnxt=i+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tit=stt[i].end();it--;\n\t\t\t\tnxt=*it;\n\t\t\t}\n\t\t\tstt[1].insert(nxt);\n\t\t\tans3[++kk]=1;\n\t\t\tans4[kk]=nxt;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",k+kk);\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tprintf(\"%d %d\\n\",ans1[i],ans2[i]);\n\t}\n\tfor(int i=kk;i>=1;i--)\n\t{\n\t\tprintf(\"%d %d\\n\",ans3[i],ans4[i]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1609910362,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF512E \u3010Fox And Polygon\u3011"
    },
    {
        "content": "\u6709\u610f\u601d\u7684\u6784\u9020\u9898\n\n\uff08\u4e0d\u5f97\u4e0d\u8bf4CF\u6784\u9020\u9898\u662f\u771f\u7684\u592a\u591a\u4e86\n\n# \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\uff0c\u9664\u4e86\u51f8\u591a\u8fb9\u5f62\u7684\u8fb9\u4e4b\u5916\u5728\u5185\u90e8\u8fde\u597d\u4e86$N-3$\u6761\u4e0d\u76f8\u4ea4\u7684\u8fb9\uff0c\u5c06\u5b83\u5206\u6210\u4e86$N-2$\u4e2a\u4e09\u89d2\u5f62\n\n\u6bcf\u6b21\u60a8\u53ef\u4ee5\u9009\u62e9\u4e00\u6761\u5185\u90e8\u7684\u8fb9\uff0c\u5c06\u4ee5\u5b83\u4e3a\u5bf9\u89d2\u7ebf\u7684\u56db\u8fb9\u5f62\u7684\u53e6\u4e00\u6761\u5bf9\u89d2\u7ebf\u52a0\u5165\u8fb9\u96c6\u3002\u5e76\u5c06\u9009\u4e2d\u7684\u8fb9\u5220\u9664\n\n\u60a8\u9700\u8981\u572820000\u6b21\u53d8\u6362\u4e4b\u5185\u4ece\u7ed9\u5b9a\u7684\u521d\u6001\u53d8\u6362\u4e3a\u7ed9\u5b9a\u7684\u7ec8\u6001\u3002\u9898\u76ee\u4fdd\u8bc1\u6709\u89e3\u3002\n\n# \u9898\u89e3\n\n\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u4e2a\u6700\u4f18\u5316\u95ee\u9898+\u6784\u9020\u95ee\u9898\uff0c\u601d\u7d22\u4e4b\u4e0b\u60f3\u5199\u4e2a\u53cc\u5411BFS\n\n\u4f46\u662f\u53d1\u73b0\u8fd9\u4e2ak\u7684\u9650\u5236\u5927\u7684\u79bb\u8c31\uff0c\u518d\u7ed3\u5408\u521a\u521a\u7684\u201c\u53cc\u5411BFS\u201d\u7684\u601d\u8def\uff0c\u53ef\u4ee5\u6bd4\u8f83\u8f7b\u677e\u7684\u60f3\u5230\u786e\u5b9a\u4e00\u4e2a\u4e2d\u95f4\u72b6\u6001\u5373\u53ef\n\n\u5177\u4f53\u4e2d\u95f4\u72b6\u6001\u53ef\u4ee5~~\u6309\u81ea\u5df1\u559c\u597d~~\u786e\u5b9a\uff0c\u8fd9\u91cc\u4e3a\u4e86\u597d\u53d8\u6362\u5c31\u8bbe\u4e3a\u4e86$\\{(1,2),(1,3),...,(1,n)\\}$\u8fd9\u6837\u7684\u8fb9\u96c6\u4e3a\u4e2d\u95f4\u72b6\u6001\n\n\u4e0b\u8868\u9762\u8003\u8651\u5982\u4f55\u8fdb\u884c\u5408\u7406\u7684\u53d8\u6362\uff1a\n\n\u753b\u51e0\u4e2a\u56fe\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u6ca1\u6709\u4e0e1\u8fde\u8fb9\u7684\u70b9\u4e00\u5b9a\u5728\u4e24\u4e2a\u4e0e1\u8fde\u8fc7\u8fb9\u7684\u70b9\u4e2d\u95f4\n~~\uff08\u5e9f\u8bdd~~\n\n\u5e76\u4e14\u4ed6\u4e0e\u90a3\u4e24\u4e2a\u70b9\u4e00\u5b9a\u6709\u8fb9\u76f8\u8fde\uff0c\u5e76\u4e14\u90a3\u4e24\u4e2a\u70b9\u4e00\u5b9a\u76f4\u63a5\u76f8\u8fde\uff08\u5426\u5219\u65e0\u6cd5\u6ee1\u8db3$N-2$\u6761\u8fb9\u7684\u9650\u5236)\n\n\u76f8\u5e94\u7684\uff0c\u4e0e1\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u4e2d\uff0c\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u6709\u5176\u4ed6\u70b9\u6ca1\u6709\u4e0e1\u76f8\u8fde\uff0c\u5219\u8fd9\u4e24\u4e2a\u70b9\u5fc5\u5b9a\u76f8\u8fde\n\n\u53ef\u4ee5\u8bc1\u660e\u8fd9\u662f\u4e2a\u5145\u8981\u6761\u4ef6\n\n\u6240\u4ee5\u53ef\u4ee5\u8bb0\u5f55\u4e0e1\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u96c6\uff0c\u6bcf\u6b21\u6392\u5e8f\u5e76\u5bf9\u4e0d\u76f8\u90bb\u7684\u4e24\u70b9\u4e4b\u95f4\u7684\u8fde\u7ebf\u8fdb\u884c\u53d8\u6362\uff0c\u76f4\u5230\u6240\u6709\u70b9\u5168\u90fd\u8fde\u5230\u4e861\u4e0a\uff0c\u8bb0\u5f55\u64cd\u4f5c\u65b9\u6848\n\n\u6700\u540e\u522b\u5fd8\u4e86\u521d\u6001->\u4e2d\u95f4\u6001\u8981\u6b63\u5e8f\u8f93\u51fa\uff0c\u7ec8\u6001->\u4e2d\u95f4\u6001\u8981\u5012\u5e8f\u8f93\u51fa\n\n\u5c31\u5b8c\u4e8b\u4e86\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define p(x,y) make_pair((x), (y))\nusing namespace std;\nint ans1x[20001], ans1y[20001], ans2x[20001], ans2y[20001], tot1, tot2, tot;\nint qwq[20001];\nmap<pair<int,int>, bool>mp;\nint n;\nvoid work1(int x, int y)\n{\n    for(int i = 2; i <= n; i++)\n    {\n        if(mp[p(x, i)] && mp[p(y, i)])\n        {\n            mp[p(x, y)] = mp[p(y, x)] = 0;\n            mp[p(1, i)] = mp[p(i, 1)] = 1;\n            qwq[++tot] = i;\n            ans1x[++tot1] = x;\n            ans1y[tot1] = y;\n            return;\n        }\n    }\n}\nvoid work2(int x, int y)\n{\n    for(int i = 2; i <= n; i++)\n    {\n        if(mp[p(x, i)] && mp[p(y, i)])\n        {\n            mp[p(x, y)] = mp[p(y, x)] = 0;\n            mp[p(1, i)] = mp[p(i, 1)] = 1;\n            qwq[++tot] = i;\n            ans2x[++tot2] = 1;\n            ans2y[tot2] = i;\n            return;\n        }\n    }\n}\nint main()\n{\n    cin >> n;\n    for(int i = 2; i <= n; i++) mp[p(i, i - 1)] = mp[p(i - 1, i)] = 1;\n    mp[p(n, 1)] = mp[p(1, n)] = 1;\n    qwq[++tot] = n;\n    qwq[++tot] = 2;\n    for(int i = 1; i <= n - 3; i++)\n    {\n        int x, y;\n        cin >> x >> y;\n        if(x == 1) qwq[++tot] = y;\n        else if(y == 1) qwq[++tot] = x;\n        mp[p(x, y)] = mp[p(y, x)] = 1;\n    }\n    while(tot < n - 1)\n    {\n        sort(qwq + 1, qwq + tot + 1);\n        int qqq = tot;\n        for(int i = 2; i <= qqq; i++)\n        {\n            if(qwq[i] - qwq[i - 1] > 1) work1(qwq[i - 1], qwq[i]);\n        }\n    }\n    tot = 0;\n    mp.clear();\n    memset(qwq, 0, sizeof(qwq));\n    for(int i = 2; i <= n; i++) mp[p(i - 1, i)] = mp[p(i, i - 1)] = 1;\n    mp[p(1, n)] = mp[p(n, 1)] = 1;\n    qwq[++tot] = n;\n    qwq[++tot] = 2;\n    for(int i = 1; i <= n - 3; i++)\n    {\n        int x, y;\n        cin >> x >> y;\n        if(x == 1) qwq[++tot] = y;\n        else if(y == 1) qwq[++tot] = x;\n        mp[p(x, y)] = mp[p(y, x)] = 1;\n    }\n    while(tot < n - 1)\n    {\n        sort(qwq + 1, qwq + tot + 1);\n        int qqq = tot;\n        for(int i = 2; i <= qqq; i++)\n        {\n            if(qwq[i] - qwq[i - 1] > 1) work2(qwq[i - 1], qwq[i]);\n        }\n    }\n    cout << tot1 + tot2 << endl;\n    for(int i = 1; i <= tot1; i++)\n    {\n        cout << ans1x[i] << ' ' << ans1y[i] << endl;\n    }\n    for(int i = tot2; i >= 1; i--)\n    {\n        cout << ans2x[i] << ' ' << ans2y[i] << endl;\n    }\n    return 0;\n}\n\n```\n\n~~\u5176\u5b9e`std::map`\u633a\u6162\u7684\uff0c\u6210\u529f\u6700\u52a3\u89e3~~",
        "postTime": 1609722077,
        "uid": 75954,
        "name": "AuCloud",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF512E \u3010Fox And Polygon\u3011"
    },
    {
        "content": "# CF512E Fox And Polygon\n\n\u5206\u6790\u9898\u610f\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u77e5\u9053\u8fd9\u6837\u4e00\u4e2a\u6027\u8d28\uff1a\u56fe\u5f62\u7684\u4efb\u610f\u4e24\u79cd\u72b6\u6001\u4e4b\u95f4\u662f\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u54ea\u79cd\u72b6\u6001\u662f\u521d\u59cb\u72b6\u6001\u4e0d\u80fd\u53d8\u5316\u5230\u7684\uff1b\u540c\u7406\uff0c\u4e5f\u6ca1\u6709\u54ea\u79cd\u72b6\u6001\u662f\u7ec8\u6b62\u72b6\u6001\u4e0d\u80fd\u53d8\u5316\u5230\u7684\u3002\n\n\u6b64\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\uff0c\u53d8\u5316\u6b65\u9aa4\u662f\u53ef\u4ee5\u5012\u63a8\u7684\u3002\n\n\u7ed3\u5408\u4ee5\u4e0a\u51e0\u70b9\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u4e2d\u95f4\u72b6\u6001\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u4e2d\u95f4\u72b6\u6001\u5b9a\u4e3a\u6240\u6709\u70b9\u8054\u5411$1$\u53f7\u70b9\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u6211\u4eec\u5206\u522b\u6c42\u51fa\u7531\u521d\u59cb\u72b6\u6001\u53d8\u5316\u4e3a\u4e2d\u95f4\u72b6\u6001\uff0c\u548c\u7531\u7ec8\u6b62\u72b6\u6001\u53d8\u5316\u4e3a\u4e2d\u95f4\u72b6\u6001\u7684\u6b65\u9aa4\u3002\n\n\u8fd9\u4e2a\u627e\u6b65\u9aa4\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u5728\u8fd9\u4e2a\u70b9\u7684\u5de6\u53f3\u4e24\u8fb9\u5206\u522b\u627e\u5230\u4e00\u4e2a\u4e0e$1$\u70b9\u76f8\u8fde\u7684\u70b9\u3002\u6839\u636e\u5206\u6cd5\uff08\u5212\u5206\u4e3a\u6570\u4e2a\u4e09\u89d2\u5f62\uff09\u53ef\u77e5\uff0c\u8fd9\u4e24\u4e2a\u70b9\u5fc5\u7136\u76f8\u8fde\u3002\u7136\u540e\u5220\u53bb\u8fd9\u4e24\u70b9\u95f4\u7684\u8fd9\u6761\u5bf9\u89d2\u7ebf\u5e76\u5b58\u50a8\u6b65\u9aa4\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u65b0\u51fa\u73b0\u7684\u5bf9\u89d2\u7ebf\u5e76**\u4e0d\u4e00\u5b9a\u662f$1$\u53f7\u70b9\u548c\u5f53\u524d\u679a\u4e3e\u70b9\u7684\u8fde\u7ebf**\uff0c\u6240\u4ee5\u8981\u679a\u4e3e\u627e\u51fa\u8fd9\u4e2a\u540c\u65f6\u4e0e\u88ab\u5220\u53bb\u5bf9\u89d2\u7ebf\u4e24\u7aef\u70b9\u76f8\u8fde\u7684\u70b9\u3002\n\n\u518d\u8fd9\u6837\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u5f53\u524d\u679a\u4e3e\u70b9\u4e0d\u4e00\u5b9a\u5c31\u4f1a\u4e0e$1$\u53f7\u70b9\u76f8\u8fde\uff0c\u6240\u4ee5\u8981\u5faa\u73af\u76f4\u5230$1$\u53f7\u70b9\u548c\u5f53\u524d\u70b9\u76f8\u8fde\u4e3a\u6b62\uff0c\u518d\u679a\u4e3e\u4e0b\u4e00\u4e2a\u70b9\u3002\n\n\u7528\u540c\u6837\u7684\u65b9\u6cd5\u627e\u5230\u7531\u7ec8\u6b62\u72b6\u6001\u5230\u4e2d\u95f4\u72b6\u6001\u7684\u53d8\u5316\u8fc7\u7a0b\u3002\u6ce8\u610f\u5b58\u50a8\u7684\u6b65\u9aa4\u662f**\u65b0\u51fa\u73b0\u5bf9\u89d2\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9**\u3002\n\n\u6700\u540e\u8f93\u51fa\u6240\u6709\u6b65\u9aa4\u5373\u53ef\uff0c\u5176\u4e2d\u7531\u7ec8\u6b62\u72b6\u6001\u53d8\u5316\u5230\u4e2d\u95f4\u72b6\u6001\u7684\u6b65\u9aa4\u9700\u8981\u5012\u5e8f\u8f93\u51fa\u3002\n\n\uff08\u4f46\u662f\u6211\u73b0\u5728\u8fd8\u6ca1\u8bc1\u660e\u6b65\u9aa4\u6570\u5fc5\u5b9a\u5728$20000$\u4e4b\u5185\uff0c\u6240\u4ee5\u8bb0\u5f55\u6b65\u9aa4\u7528vector\u4f1a\u66f4\u597d\uff09\n```cpp\n#include<bits/stdc++.h>\n#define N 1010\n\nusing namespace std;\n\nint n,cnt1,cnt2;\nbool edge1[N][N],edge2[N][N];\n\nstruct node {\n\tint frm,to;\n}op1[20010],op2[20010];\n\nvoid Read() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n-3;i++) {\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tedge1[u][v]=1;\n\t\tedge1[v][u]=1;\n\t}\n\tfor(int i=1;i<=n-3;i++) {\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tedge2[u][v]=1;\n\t\tedge2[v][u]=1;\n\t}\n\treturn;\n}\n\nvoid Solve() {\n\tfor(int i=1;i<=n;i++) {\n\t\tedge1[i][i%n+1]=1;\n\t\tedge1[i%n+1][i]=1;\n\t\tedge2[i][i%n+1]=1;\n\t\tedge2[i%n+1][i]=1;\n\t}\n\n\tfor(int i=2;i<=n;i++) {\n\t\twhile(!edge1[1][i]) {\n\t\t\tint su=i-1,sv,eu=0,ev; //su=i-1:i\u7684\u4e0a\u4e00\u4e2a\u70b9\u5fc5\u4e0e1\u70b9\u76f8\u8fde su-sv -> es-ev\n\t\t\tfor(int j=i+1;j<=n;j++) {\n\t\t\t\tif(edge1[1][j]) {\n\t\t\t\t\tsv=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int k=1;k<=n;k++) {\n\t\t\t\tif(edge1[su][k]&&edge1[sv][k]) {\n\t\t\t\t\tif(eu==0) {\n\t\t\t\t\t\teu=k;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tev=k;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tedge1[su][sv]=0;\n\t\t\tedge1[sv][su]=0;\n\t\t\tedge1[eu][ev]=1;\n\t\t\tedge1[ev][eu]=1;\n\t\t\top1[++cnt1]=(node){su,sv};\n\t\t\t//printf(\"op:%d %d %d %d i:%d\\n\",su,sv,eu,ev,i);\n\t\t}\n\t}\n\tfor(int i=2;i<=n;i++) {\n\t\twhile(!edge2[1][i]) {\n\t\t\tint su=i-1,sv,eu=0,ev; //su=i-1:i\u7684\u4e0a\u4e00\u4e2a\u70b9\u5fc5\u4e0e1\u70b9\u76f8\u8fde su-sv -> es-ev\n\t\t\tfor(int j=i+1;j<=n;j++) {\n\t\t\t\tif(edge2[1][j]) {\n\t\t\t\t\tsv=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int k=1;k<=n;k++) {\n\t\t\t\tif(edge2[su][k]&&edge2[sv][k]) {\n\t\t\t\t\tif(eu==0) {\n\t\t\t\t\t\teu=k;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tev=k;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tedge2[su][sv]=0;\n\t\t\tedge2[sv][su]=0;\n\t\t\tedge2[eu][ev]=1;\n\t\t\tedge2[ev][eu]=1;\n\t\t\top2[++cnt2]=(node){eu,ev};\n\t\t\t//printf(\"op:%d %d %d %d i:%d\\n\",su,sv,eu,ev,i);\n\t\t}\n\t}\n\n\treturn;\n}\n\nvoid Print() {\n\tprintf(\"%d\\n\",cnt1+cnt2);\n\tfor(int i=1;i<=cnt1;i++) {\n\t\tprintf(\"%d %d\\n\",op1[i].frm,op1[i].to);\n\t}\n\tfor(int i=cnt2;i>=1;i--) {\n\t\tprintf(\"%d %d\\n\",op2[i].frm,op2[i].to);\n\t}\n\treturn;\n}\n\nint main()\n{\n\tRead();\n\tSolve();\n\tPrint();\n\treturn 0;\n}\n```",
        "postTime": 1579014913,
        "uid": 161364,
        "name": "Walker_V",
        "ccfLevel": 0,
        "title": "CF512E Fox And Polygon"
    },
    {
        "content": "CF\u4e0a\u7684\u6784\u9020\u9898\u679c\u7136\u540d\u4e0d\u865a\u4f20......\n\n\u597d\u4e86\u8fdb\u5165\u6b63\u9898.\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9: \u5f53\u6784\u9020\u9898\u8981\u6c42\u4f60\u5bfb\u627e\u4ece\u72b6\u6001A\u8f6c\u79fb\u5230\u72b6\u6001B\u65f6, \u5c1d\u8bd5\u5bfb\u627e\u7279\u6b8a\u72b6\u6001X, \u4f7f\u5f97A->X->B\u662f\u5f88\u5bb9\u6613\u5b9e\u73b0\u7684. \u8fd9\u4e5f\u662f\u8fd9\u79cd\u6784\u9020\u9898\u7684\u5e38\u89c1\u601d\u8def.\n\n\u8fd9\u4e00\u9053\u9898\u76ee\u7684\u601d\u8def\u4e5f\u6b63\u662f\u8fd9\u6837.\n\n\u90a3\u4e48X\u662f\u4ec0\u4e48\u5462? \u5c31\u662f\u6240\u6709\u70b9\u90fd\u548c1\u76f8\u8fde\u7684\u60c5\u51b5.\n\nA->X: \n\n\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e00\u4e2a\u76f4\u63a5\u548c1\u76f8\u8fde\u7684\u70b9\u4f5c\u4e3a$a_1, a_2, a_3......$\n\n\u7136\u540e\u53d1\u73b0\u82e5$a_x+1<a_{x+1}$\u90a3\u4e48$a_x, a_{x+1}$\u4e4b\u95f4\u5fc5\u5b9a\u8fde\u8fb9.\n\n\u7136\u540e\u6211\u4eec\u53cd\u8f6c\u8fd9\u4e2a\u4e1c\u4e1c.\n\nX->B\u5c31\u662fB->X\u53cd\u8fc7\u6765, \u8bb0\u4f4f\u8fb9\u4e5f\u8981\u53cd\u8fc7\u6765!\n\n\u81f3\u4e8e\u5b9e\u73b0\u561b, \u53ef\u4ee5\u7528`set`\u5947\u6280\u6deb\u5de7\u4e00\u6ce2, \u7136\u540e\u5c31\u597d\u4e86. \u5176\u5b9e\u4ee3\u7801\u4e0d\u50cf\u697c\u4e0a\u8bf4\u7684\u90a3\u4e48\u957f, \u53ef\u4ee5\u5199\u7684\u5f88\u77ed.\n\n\u56e0\u4e3a\u4e4b\u524d\u5457\u5410\u69fd\u4e86\u6570\u5341\u6b21\u7801\u98ce\u592a\u4e11, \u6211\u8fd9\u6b21clangformat\u4e86\u4e00\u4e0b......\n\n```\n#include <iostream>\n#include <bitset>\n#include <queue>\n#include <set>\nusing namespace std;\nnamespace fio\n{\nstreambuf *in = cin.rdbuf();\nchar bb[1000000], *s = bb, *t = bb;\n#define gc() (s == t && (t = (s = bb) + in->sgetn(bb, 1000000), s == t) ? EOF : *s++)\ninline int read()\n{\n    int x = 0;\n    char ch = gc();\n    while (ch < 48)\n        ch = gc();\n    while (ch >= 48)\n        x = x * 10 + ch - 48, ch = gc();\n    return x;\n}// \u5feb\u4e50\u8bfb\u5165\n} // namespace fio\nusing fio::read;\nint n;\nbitset<1005> huaji[1005];\ntypedef pair<int, int> mp;\nvector<mp> sa, sb;\nset<int> alt;\nint op(int x, int y)\n{// \u53cd\u8f6c\u5bf9\u5e94\u8fb9\n    bitset<1005> ax = huaji[x] & huaji[y];\n    int i;\n    for (i = 2; i <= n; i++)\n        if (ax[i])\n            break;// \u66b4\u529b\u67e5\u627e\n    huaji[1][i] = huaji[i][1] = 1, huaji[x][y] = huaji[y][x] = 0;\n    return i;\n}\nint main()\n{\n    n = read();\n    for (int i = 1; i < n; i++)\n        huaji[i][i + 1] = huaji[i + 1][i] = 1;\n    huaji[1][n] = huaji[n][1] = 1;\n    for (int i = 1, l, r; i <= n - 3; i++)\n        l = read(), r = read(), huaji[l][r] = huaji[r][l] = 1;\n    for (int i = 2; i <= n; i++)\n        if (huaji[1][i])\n            alt.insert(i);\n    for (int i = 2; i <= n; i++)\n        if (huaji[1][i])\n            if (alt.upper_bound(i) != alt.end())\n            {\n                int nex = *alt.upper_bound(i);// \u5bfb\u627e\u4e0b\u4e00\u4e2a\u70b9\n                if (nex == i + 1)\n                    continue;// \u6ca1\u6709\u5fc5\u8981\u53cd\u8f6c\n                sa.emplace_back(i, nex);// \u8bb0\u5f55\u7b54\u6848\n                alt.insert(op(i, nex));// \u53cd\u8f6c\n                i--;\n            }\n    for (int i = 1; i <= n; i++)\n        huaji[i].reset();\n    huaji[1][n] = huaji[n][1] = 1, alt.clear();// \u6e05\u7a7a\u56fe\u50cf\n    for (int i = 1; i < n; i++)\n        huaji[i][i + 1] = huaji[i + 1][i] = 1;\n    for (int i = 1, l, r; i <= n - 3; i++)\n        l = read(), r = read(), huaji[l][r] = huaji[r][l] = 1;\n    for (int i = 1; i <= n; i++)\n        if (huaji[1][i])\n            alt.insert(i);\n    for (int i = 2; i <= n; i++)\n        if (huaji[1][i])\n            if (alt.upper_bound(i) != alt.end())\n            {\n                int nex = *alt.upper_bound(i), temp;\n                if (nex == i + 1)\n                    continue;\n                sb.emplace_back(1, temp = op(i, nex));// \u8bb0\u5f97\u53cd\u5411\u8f93\u51fa\n                alt.insert(temp);\n                i--;\n            }\n    cout << sa.size() + sb.size() << endl;\n    for (mp it : sa)\n        cout << it.first << ' ' << it.second << endl;\n    for (int i = sb.size() - 1; ~i; i--)\n        cout << sb[i].first << ' ' << sb[i].second << endl;// \u8bb0\u5f97\u53cd\u5411\u653eQ\n}\n```\n",
        "postTime": 1569064631,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF512E \u3010Fox And Polygon\u3011"
    },
    {
        "content": "\u6211\u4eec\u5145\u5206\u53d1\u626c\u4eba\u7c7b\u667a\u6167\uff0c\u8003\u8651\u4e71\u641e\u3002\n\n\u9996\u5148\u89c2\u5bdf\u6837\u4f8b\uff0c\u5728\u7eb8\u4e0a\u753b\u56fe\u53ef\u4ee5\u5f97\u51fa\u51e0\u4e2a\u6027\u8d28\uff1a\n\n> \u6027\u8d28 1. \u5df2\u7ecf\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\u7684\u5bf9\u89d2\u7ebf\u4e0d\u9700\u8981\u518d\u8fdb\u884c\u64cd\u4f5c\n\n> \u8bc1\u660e\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u8003\u8651\u5982\u679c\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\uff0c\u90a3\u4e48\u539f\u56fe\u548c\u76ee\u6807\u56fe\u4e00\u5b9a\u88ab\u5212\u5206\u6210\u4e86\u4e24\u4e2a\u90e8\u5206\uff0c\u7531\u4e8e\u64cd\u4f5c\u524d\u548c\u64cd\u4f5c\u540e\u90fd\u662f\u4e09\u89d2\u5256\u5206\uff08\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u76ee\u6807\u5bf9\u89d2\u7ebf\u76f8\u4ea4\u4e8e\u591a\u8fb9\u5f62\u5185\u90e8\u7684\u60c5\u51b5\uff09\u6240\u4ee5\u53ef\u4ee5\u5212\u5206\u4e3a\u4e24\u4e2a\u5b50\u591a\u8fb9\u5f62\u8003\u8651\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u90a3\u4e9b\u5df2\u7ecf\u5728\u76ee\u6807\u4f4d\u7f6e\u4e0a\u7684\u5bf9\u89d2\u7ebf\u4e86\u3002\n\n> \u6027\u8d28 2. \u5982\u679c\u4e00\u6761\u5bf9\u89d2\u7ebf\u6ee1\u8db3\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u7ffb\u8f6c\u5230\u8fbe\u76ee\u6807\u5bf9\u89d2\u7ebf\uff0c\u90a3\u4e48\u4e00\u5b9a\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\n\n> \u8fd9\u6837\u8d2a\u5fc3\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u8fdb\u884c\u64cd\u4f5c\u540e\uff0c\u5c31\u53d8\u6210\u4e86\u6027\u8d28 1 \u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5148\u5bf9\u539f\u56fe\u8dd1\u4e00\u904d\uff0c\u770b\u770b\u6709\u6ca1\u6709\u4e00\u6b21\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5230\u8fbe\u76ee\u6807\u72b6\u6001\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u5269\u4e0b\u7684\u6ca1\u6709\u5230\u8fbe\u76ee\u6807\u5bf9\u89d2\u7ebf\u7684\u5bf9\u89d2\u7ebf\u3002\n\n\u6b64\u65f6\u53d1\u626c\u4eba\u7c7b\u667a\u6167\uff0c\u5bf9\u4e00\u4e9b\u6bd4\u8f83\u5927\u7684\u751f\u6210\u6570\u636e\uff08\u5982 $n = 15$\uff09\u8fdb\u884c\u6a21\u62df\uff0c\u53d1\u73b0\u5bf9\u4e8e\u5269\u4e0b\u7684\u5bf9\u89d2\u7ebf\uff0c\u5982\u679c\u968f\u673a\u7ffb\u8f6c\u5176\u4e2d\u7684\u4e00\u6761\u5bf9\u89d2\u7ebf\uff0c\u5219\u4f1a\u51fa\u73b0\u5927\u91cf\u7684\u6027\u8d282\u7684\u60c5\u51b5\uff0c\u800c\u4e14\u90fd\u57fa\u672c\u76f8\u90bb\u3002\n\n\u518d\u6b21\u89c2\u5bdf\u9898\u76ee\uff0c\u53d1\u73b0\u64cd\u4f5c\u7684\u4e0a\u9650\u4e0e $n$ \u7684\u76f8\u5dee\u8fbe\u5230\u4e86 $20$ \u500d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u79cd\u5f88\u4e71\u641e\u7684\u505a\u6cd5\uff1a\u5bf9\u4e8e\u6240\u6709\u5c1a\u672a\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\u7684\u5bf9\u89d2\u7ebf\uff0c\u6211\u4eec\u6bcf\u6b21\u968f\u673a\u5176\u4e2d\u7684 $20$ \u4e2a\u5e76\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u7136\u540e\u5bf9\u4e8e\u5b83\u4eec\u6240\u5728\u7684\u56db\u8fb9\u5f62 $(a, b, c, d)$\uff0c\u5bfb\u627e\u4e0e $a,b$ \u76f8\u8fde\u7684\u5bf9\u89d2\u7ebf\uff0c\u5e76\u5c1d\u8bd5\u5c06\u5176\u7ffb\u8f6c\uff08\u5373\u5982\u679c\u80fd\u591f\u7ffb\u8f6c\u5230\u76ee\u6807\u72b6\u6001\uff0c\u5c31\u7ffb\u8f6c\u8fd9\u4e2a\u5bf9\u89d2\u7ebf\uff09\uff0c\u8fd9\u6837\u5b50\u505a\u5747\u644a\u590d\u6742\u5ea6\u662f $\\Theta(n^2)$ \u7684\uff0c\u5b9e\u9645\u4e0a\u4f1a\u66f4\u5c0f\uff0c\u56e0\u4e3a\u8dd1\u4e0d\u6ee1\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u4e0a\u8ff0\u64cd\u4f5c\u591a\u8dd1\u51e0\u904d\uff0c\u6700\u540e\u518d\u91cd\u65b0\u68c0\u67e5\u4e00\u904d\uff0c\u770b\u770b\u8fd8\u6709\u6ca1\u6709\u5269\u4e0b\u7684\u4e00\u6b21\u64cd\u4f5c\u8fbe\u5230\u76ee\u6807\u72b6\u6001\u7684\u70b9\u3002\u5f53\u6b21\u6570 $T = 1000$ \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u901a\u8fc7\u6240\u6709\u6570\u636e\u70b9\uff0c\u6b64\u65f6\u751f\u6210\u7684\u64cd\u4f5c\u6b21\u6570\u7ea6\u4e3a $13000$ \u6b21\uff0c\u5927\u7ea6\u8017\u8d39\u65f6\u95f4 $500$ \u6beb\u79d2\u3002\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\n/* Author : Alpha_Drawer\n   Problem : CF512E\n*/\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e3 + 103;\n\nint n, a[N][N], tgt[N][N]; // a[x][y] \u8868\u793a\u5bf9\u89d2\u7ebf\u53ca\u591a\u8fb9\u5f62\u7684\u8fb9 (x, y), tg[x][y] \u8868\u793a\u76ee\u6807\u5bf9\u89d2\u7ebf\nbool aimed[N]; // \u8868\u793a\u5bf9\u4e8e\u5bf9\u89d2\u7ebf i \u662f\u5426\u5df2\u7ecf\u5230\u8fbe\u76ee\u6807\u5bf9\u89d2\u7ebf\u4f4d\u7f6e\n\nstruct pairs { // \u5bf9\u89d2\u7ebf\n\tint x, y;\n}eg[N], rec[N * N]; int sum = 0; // eg \u8868\u793a\u5f53\u524d\u5bf9\u89d2\u7ebf\uff0crec \u8868\u793a\u8bb0\u5f55\u7684\u7b54\u6848\uff0csum \u662f\u7b54\u6848\u5927\u5c0f\n\npairs mp(int x, int y) { // make_pair(int, int)\n\tpairs a;\n\ta.x = x, a.y = y;\n\treturn a;\n}\n\npairs vt(int u, int v) { // \u865a\u62df\u7ffb\u8f6c\uff0c\u5373\u5bf9\u4e8e\u5bf9\u89d2\u7ebf (u, v) \u6c42\u51fa\u7ffb\u8f6c\u4e4b\u540e\u7684\u5bf9\u89d2\u7ebf\uff0c\u4f46\u4e0d\u5b9e\u9645\u64cd\u4f5c\n\tint x = 0, y = 0;\n\tfor(int i = 1; i <= n; i++)\n\t\tif(a[i][u] && a[i][v]) (x ? y : x) = i;\n\treturn mp(x, y);\n}\n\nvoid transform(int pos, int u, int v) { // \u7ffb\u8f6c\u64cd\u4f5c\n\tint x = 0, y = 0;\n\tfor(int i = 1; i <= n; i++)\n\t\tif(a[i][u] && a[i][v]) (x ? y : x) = i;\n\tif(!x || !y)\n\t\treturn;\n\trec[++sum].x = u, rec[sum].y = v;\n\ta[u][v] = a[v][u] = 0; a[x][y] = a[y][x] = 1;\n\teg[pos].x = x, eg[pos].y = y;\n\treturn;\n}\n\nint main() {\n\tsrand(time(0)); // rand() \u521d\u59cb\u5316\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) {\n\t\tint x = i, y = i % n + 1;\n\t\ta[x][y] = a[y][x] = 1;\n\t}\n\tfor(int i = 1; i <= n - 3; i++) {\n\t\tscanf(\"%d%d\", &eg[i].x, &eg[i].y);\n\t\ta[eg[i].x][eg[i].y] = a[eg[i].y][eg[i].x] = 1;\n\t}\n\tfor(int i = 1; i <= n - 3; i++) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\ttgt[u][v] = tgt[v][u] = 1;\n\t} // \u8f93\u5165\u4e0e\u8fde\u8fb9\n\tfor(int i = 1; i <= n - 3; i++) {\n\t\tif(tgt[eg[i].x][eg[i].y]) {\n\t\t\taimed[i] = 1;\n\t\t\tcontinue;\n\t\t}\n\t\tpairs res = vt(eg[i].x, eg[i].y);\n\t\tif(tgt[res.x][res.y]) {\n\t\t\ttransform(i, eg[i].x, eg[i].y);\n\t\t\taimed[i] = 1;\n\t\t}\n\t} // \u770b\u770b\u6709\u6ca1\u6709\u4e00\u6b21\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5230\u8fbe\u76ee\u6807\u72b6\u6001\u7684\u60c5\u51b5\uff0c\u6709\u5c31\u76f4\u63a5\u64cd\u4f5c\n\tint TIMES = 1000; // \u968f\u673a\u64cd\u4f5c\u6b21\u6570\n\tfor(; TIMES; --TIMES) {\n\t\tfor(int tms = 1; tms <= 20; tms++) { // \u6bcf\u6b21\u5c1d\u8bd5\u4fee\u653920\u6761\u5bf9\u89d2\u7ebf\n\t\t\tint pos = rand() % n + 1, trt = 0;\n\t\t\tif(tgt[eg[pos].x][eg[pos].y])\n\t\t\t\taimed[pos] = 1; // \u6027\u8d281\n\t\t\twhile(aimed[pos]) {\n\t\t\t\ttrt++;\n\t\t\t\tpos = rand() % n + 1;\n\t\t\t\tif(tgt[eg[pos].x][eg[pos].y])\n\t\t\t\t\taimed[pos] = 1;\n\t\t\t\tif(trt > 100)\n\t\t\t\t\tbreak; // \u5982\u679c\u4e00\u76f4\u968f\u673a\u4e0d\u5230\u60f3\u8981\u7684\u8fb9\u76f4\u63a5 break \u9632\u6b62\u6d6a\u8d39\u65f6\u95f4\n\t\t\t}\n\t\t\tif(trt > 100)\n\t\t\t\tcontinue;\n\t\t\tint x = eg[pos].x, y = eg[pos].y;\n\t\t\ttransform(pos, eg[pos].x, eg[pos].y); // \u5bf9\u76ee\u6807\u8fb9\u8fdb\u884c\u7ffb\u8f6c\n\t\t\tif(tgt[eg[pos].x][eg[pos].y])\n\t\t\t\taimed[pos] = 1;\n\t\t\tfor(int i = 1; i <= n; i++) {\n\t\t\t\tif(abs(x - i) > 1 && a[x][i]) {\n\t\t\t\t\tint fnd = 0;\n\t\t\t\t\tfor(int j = 1; j <= n; j++) { // \u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u5bf9\u89d2\u7ebf\uff0c\u4e0b\u540c\n\t\t\t\t\t\tif(eg[j].x == x || eg[j].x == i) {\n\t\t\t\t\t\t\tif(eg[j].y == x || eg[j].y == i) {\n\t\t\t\t\t\t\t\tfnd = j;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!aimed[fnd]) {\n\t\t\t\t\t\tpairs res = vt(eg[fnd].x, eg[fnd].y);\n\t\t\t\t\t\tif(tgt[res.x][res.y]) {\n\t\t\t\t\t\t\ttransform(fnd, eg[fnd].x, eg[fnd].y);\n\t\t\t\t\t\t\taimed[fnd] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(abs(y - i) > 1 && a[y][i]) {\n\t\t\t\t\tint fnd = 0;\n\t\t\t\t\tfor(int j = 1; j <= n; j++) {\n\t\t\t\t\t\tif(eg[j].x == y || eg[j].x == i) {\n\t\t\t\t\t\t\tif(eg[j].y == y || eg[j].y == i) {\n\t\t\t\t\t\t\t\tfnd = j;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(aimed[fnd])\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tpairs res = vt(eg[fnd].x, eg[fnd].y);\n\t\t\t\t\tif(tgt[res.x][res.y]) {\n\t\t\t\t\t\ttransform(fnd, eg[fnd].x, eg[fnd].y);\n\t\t\t\t\t\taimed[fnd] = 1;\n\t\t\t\t\t}\n\t\t\t\t} // \u5bf9\u6240\u6709\u5728\u8fd9\u4e2a\u56db\u8fb9\u5f62\u4e0a\u4e24\u70b9\u7684\u8fdb\u884c\u7ffb\u8f6c\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1; i <= n - 3; i++) {\n\t\tif(aimed[i])\n\t\t\tcontinue;\n\t\tpairs res = vt(eg[i].x, eg[i].y);\n\t\tif(tgt[res.x][res.y]) {\n\t\t\ttransform(i, eg[i].x, eg[i].y);\n\t\t\taimed[i] = 1;\n\t\t}\n\t} // \u6700\u540e\u68c0\u67e5\u662f\u5426\u5b58\u5728\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u7ffb\u8f6c\u7684\u60c5\u51b5\uff0c\u4e0d\u653e\u5fc3\u53ef\u4ee5\u591a\u505a\u51e0\u904d\n\tprintf(\"%d\\n\", sum);\n\tfor(int i = 1; i <= sum; i++) {\n\t\tprintf(\"%d %d\\n\", rec[i].x, rec[i].y);\n\t} // \u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n",
        "postTime": 1679131024,
        "uid": 181571,
        "name": "Alpha_Drawer",
        "ccfLevel": 0,
        "title": "CF512E Editorial"
    },
    {
        "content": "\u9898\u610f\uff1a$n-3$ \u6761\u5bf9\u89d2\u7ebf\u5c06 $n$ \u8fb9\u5f62\u5206\u4e3a $n-2$ \u4e2a\u4e09\u89d2\u5f62\u3002\u7ed9\u5b9a\u4e24\u79cd\u5206\u5272\u65b9\u6cd5\u548c\u4e00\u79cd\u53d8\u6362\u64cd\u4f5c\uff0c\u6c42\u5c06\u4e00\u79cd\u53d8\u4e3a\u53e6\u4e00\u79cd\u7684\u65b9\u6cd5\u3002\n\n\u6838\u5fc3\u601d\u60f3\uff1a\u6784\u9020\n\n\u89e3\uff1a\n\n\u4e0d\u59a8\u5c06\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u7f16\u53f7\u4e3a $i\\sim n$\u3002\u5bf9\u4e8e\u6bcf\u6761\u5bf9\u89d2\u7ebf\u5b9a\u4e49\u56db\u4e2a\u503c $s, e, l, r$\uff0c\u5206\u522b\u8868\u793a\u9898\u9762\u4e2d\u7684 $A, B, C, D$\uff0c\u4e14\u6ee1\u8db3 $s<l<e, e<r<s+n$ \u6216 $e<r+n<s+n$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6240\u6709\u5bf9\u89d2\u7ebf\uff0c\u5747\u6709\u5176\u4ed6\u5bf9\u89d2\u7ebf\u6216\u8fb9\u8fde\u63a5 $s-l,e-l,s-r,e-r$\u3002\u56e0\u6b64\u53ef\u4ee5\u521d\u59cb\u5316 $l=s+1,r=s-1$\uff08\u8fd9\u91cc\u7684 $0$ \u6307 $n$\uff0c\u4e0b\u540c\uff09\uff0c\u4e4b\u540e\u5bf9\u4e8e\u6240\u6709\u5305\u542b $s$ \u7684\u5bf9\u89d2\u7ebf\uff0c\u82e5\u5176\u53e6\u4e00\u7aef\u70b9\u8ddd $e$ \u66f4\u8fd1\uff0c\u5c31\u66f4\u65b0\u5bf9\u5e94\u65b9\u5411\u7684 $l$ \u6216 $r$\u3002\n\n\u5bf9\u89d2\u7ebf\u7684\u53d8\u6362\u64cd\u4f5c\u5728\u8fd9\u79cd\u5f62\u5f0f\u4e0b\u542b\u4e49\u5982\u4e0b\uff1a$l-r$ \u53d8\u4e3a $s-e$\uff0c$s,e$ \u53d8\u4e3a $l,r$\uff0c\u518d\u66f4\u65b0\u5176\u4ed6\u6709\u5173\u8fb9\u7684 $l$ \u6216 $r$\u3002\u5177\u4f53\u5b9e\u73b0\u7528\u6587\u5b57\u63cf\u8ff0\u6bd4\u8f83\u56f0\u96be\uff0c\u6545\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\u4f53\u73b0\u3002\n\n\u5bf9\u4e8e\u521d\u59cb\u548c\u7ed3\u675f\u72b6\u6001\uff0c\u5206\u522b\u53ef\u4ee5\u8ba1\u7b97\u5176\u5230 $1-3,1-4,...,1-(n-1)$ \u7684\u9014\u5f84\u3002\u5c06\u524d\u8005\u6b63\u5e38\u8f93\u51fa\uff0c\u540e\u8005\u53cd\u5411\u8f93\u51fa\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nstruct line\n{\n\tint s, e, l, r;\n}a[1001];\nstruct r\n{\n\tint s, e;\n}res[10001], res2[10001];\nint n, cnt, flag, t, pre;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1; i<=n-3; i++)\n\t{\n\t\tcin>>a[i].s>>a[i].e;\n\t\tif(a[i].e<a[i].s)\n\t\t\tswap(a[i].s, a[i].e);\n\t}\n\tfor(int i=1; i<=n-3; i++)\n\t{\n\t\ta[i].l=a[i].s+1;\n\t\ta[i].r=(a[i].s-2+n)%n+1;\n\t}//\u521d\u59cb\u5316\u521d\u59cb\u5316\n\tfor(int i=1; i<=n-3; i++)\n\t\tfor(int j=1; j<=n-3; j++)\n\t\t\tif(i!=j)\n\t\t\t{\n\t\t\t\tif(a[i].s==a[j].s && a[j].e<a[i].e)\n\t\t\t\t\tif(a[i].l==0 || a[i].e-a[i].l>a[i].e-a[j].e)\n\t\t\t\t\t\ta[i].l=a[j].e;//\u66f4\u65b0\u5de6\u4fa7\n\t\t\t\tif(a[i].s==a[j].s && a[j].e>a[i].e)\n\t\t\t\t\tif(a[i].r==0 || (a[i].r-a[i].e+n)%n>a[j].e-a[i].e)\n\t\t\t\t\t\ta[i].r=a[j].e;\n\t\t\t\tif(a[i].s==a[j].e)\n\t\t\t\t\tif(a[i].r==0 || (a[i].r-a[i].e+n)%n>a[j].s+n-a[i].e)\n\t\t\t\t\t\ta[i].r=a[j].s;//\u66f4\u65b0\u53f3\u4fa7\n\t\t\t}//\u521d\u59cb\u5316\n\tfor(int i=1; i<=n-3; i++)\n\t{\n\t\tcnt=0;\n\t\tfor(int j=1; j<=n-3; j++)\n\t\t{\n\t\t\tif(a[j].s==1)\n\t\t\t\tcnt++;\n\t\t\tif(a[j].r==1)\n\t\t\t{\n//\t\t\t\tcout<<j<<endl; \n//\t\t\t\tfor(int k=1; k<=n-3; k++)\n//\t\t\t\t\tcout<<a[k].s<<\" \"<<a[k].e<<\" \"<<a[k].l<<\" \"<<a[k].r<<endl;\n//\t\t\t\tcout<<endl;\n\t\t\t\tres[++flag].s=a[j].s;\n\t\t\t\tres[flag].e=a[j].e;//\u8bb0\u5f55\u6b65\u9aa4\n\t\t\t\tfor(int k=1; k<=n-3; k++)\n\t\t\t\t\tif(a[k].s==a[j].s || a[k].e==a[j].s || a[k].s==a[j].e || a[k].e==a[j].e)//l,r\u53d1\u751f\u6539\u53d8\u7684\u53ea\u53ef\u80fd\u662f\u5171\u70b9\u7684\u8fb9\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[k].l==a[j].s || a[k].l==a[j].e)\n\t\t\t\t\t\t\ta[k].l=a[j].l;//\u66f4\u65b0l\n\t\t\t\t\t\tif(a[k].r==a[j].e || a[k].r==a[j].s)\n\t\t\t\t\t\t\tif(a[k].s==a[j].s || a[k].e==a[j].e)\n\t\t\t\t\t\t\t\ta[k].r=a[j].r;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\ta[k].r=a[j].l;//\u5206\u7c7b\u8ba8\u8bba\u66f4\u65b0r\n\t\t\t\t\t}\n\t\t\t\tt=a[j].s;\n\t\t\t\ta[j].s=a[j].l;\n\t\t\t \ta[j].l=a[j].e;\n\t\t\t\ta[j].e=a[j].r;\n\t\t\t\ta[j].r=t;\n\t\t\t\tif(a[j].s>a[j].e)\n\t\t\t\t{\n\t\t\t\t\tswap(a[j].s, a[j].e);\n\t\t\t\t\tswap(a[j].l, a[j].r);\n\t\t\t\t}//\u53d8\u6362\u8fd9\u6761\u5bf9\u89d2\u7ebf\u672c\u8eab\n\t\t\t}\n\t\t}\n\t\tif(cnt==n-3)//\u82e5\u5168\u90e8\u8c03\u6574\u5b8c\u6bd5\u5219\u7ed3\u675f\n\t\t\tbreak;\n\t}\n//\tfor(int k=1; k<=n-3; k++)\n//\t\tcout<<a[k].s<<\" \"<<a[k].e<<\" \"<<a[k].l<<\" \"<<a[k].r<<endl;\n//\tcout<<endl;\n\tpre=flag;\n\tcnt=0;\n\tflag=0;\n\tt=0;//\u4e0b\u534a\u4e0e\u4e0a\u534a\u57fa\u672c\u540c\n\tfor(int i=1; i<=1000; i++)\n\t{\n\t\ta[i].e=0;\n\t\ta[i].l=0;\n\t\ta[i].r=0;\n\t\ta[i].s=0;\n\t}\n\tfor(int i=1; i<=n-3; i++)\n\t{\n\t\tcin>>a[i].s>>a[i].e;\n\t\tif(a[i].e<a[i].s)\n\t\t\tswap(a[i].s, a[i].e);\n\t}\n\tfor(int i=1; i<=n-3; i++)\n\t{\n\t\ta[i].l=a[i].s+1;\n\t\ta[i].r=(a[i].s-2+n)%n+1;\n\t}\n\tfor(int i=1; i<=n-3; i++)\n\t\tfor(int j=1; j<=n-3; j++)\n\t\t\tif(i!=j)\n\t\t\t{\n\t\t\t\tif(a[i].s==a[j].s && a[j].e<a[i].e)\n\t\t\t\t\tif(a[i].l==0 || a[i].e-a[i].l>a[i].e-a[j].e)\n\t\t\t\t\t\ta[i].l=a[j].e;\n\t\t\t\tif(a[i].s==a[j].s && a[j].e>a[i].e)\n\t\t\t\t\tif(a[i].r==0 || (a[i].r-a[i].e+n)%n>a[j].e-a[i].e)\n\t\t\t\t\t\ta[i].r=a[j].e;\n\t\t\t\tif(a[i].s==a[j].e)\n\t\t\t\t\tif(a[i].r==0 || (a[i].r-a[i].e+n)%n>a[j].s+n-a[i].e)\n\t\t\t\t\t\ta[i].r=a[j].s;\n\t\t\t}\n\tfor(int i=1; i<=n-3; i++)\n\t{\n\t\tcnt=0;\n\t\tfor(int j=1; j<=n-3; j++)\n\t\t{\n\t\t\tif(a[j].s==1)\n\t\t\t\tcnt++;\n\t\t\tif(a[j].r==1)\n\t\t\t{\n//\t\t\t\tcout<<j<<endl;\n//\t\t\t\tfor(int k=1; k<=n-3; k++)\n//\t\t\t\t\tcout<<a[k].s<<\" \"<<a[k].e<<\" \"<<a[k].l<<\" \"<<a[k].r<<endl;\n//\t\t\t\tcout<<endl;\n\t\t\t\tres2[++flag].s=a[j].l;\n\t\t\t\tres2[flag].e=a[j].r;//\u4f46\u8fd9\u91cc\u8981\u8bb0\u5f55\u53d8\u6362\u5b8c\u6210\u7684\u7ed3\u679c\n\t\t\t\tfor(int k=1; k<=n-3; k++)\n\t\t\t\t\tif(a[k].s==a[j].s || a[k].e==a[j].s || a[k].s==a[j].e || a[k].e==a[j].e) \n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[k].l==a[j].s || a[k].l==a[j].e)\n\t\t\t\t\t\t\ta[k].l=a[j].l;\n\t\t\t\t\t\tif(a[k].r==a[j].e || a[k].r==a[j].s)\n\t\t\t\t\t\t\tif(a[k].s==a[j].s || a[k].e==a[j].e)\n\t\t\t\t\t\t\t\ta[k].r=a[j].r;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\ta[k].r=a[j].l;\n\t\t\t\t\t}\n\t\t\t\tt=a[j].s;\n\t\t\t\ta[j].s=a[j].l;\n\t\t\t\ta[j].l=a[j].e;\n\t\t\t\ta[j].e=a[j].r;\n\t\t\t\ta[j].r=t;\n\t\t\t\tif(a[j].s>a[j].e)\n\t\t\t\t{\n\t\t\t\t\tswap(a[j].s, a[j].e);\n\t\t\t\t\tswap(a[j].l, a[j].r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(cnt==n-3)\n\t\t\tbreak;\n\t}\n\tcout<<flag+pre<<endl;\n\tfor(int i=1; i<=pre; i++)\n\t\tcout<<res[i].s<<\" \"<<res[i].e<<endl;//\u6b63\u5e8f\u8f93\u51fa\n\tfor(int i=flag; i>=1; i--)\n\t\tcout<<res2[i].s<<\" \"<<res2[i].e<<endl;//\u5012\u5e8f\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1670951987,
        "uid": 191387,
        "name": "\u03a6\u03c1\u03b1\u03bd\u03ba",
        "ccfLevel": 0,
        "title": "CF512E Fox And Polygon \u9898\u89e3"
    },
    {
        "content": "## Description\n\n\u5b9a\u4e49\u4e00\u4e2a $n$ \u8fb9\u5f62\u7684\u4e00\u79cd\u5206\u5272\u4e3a\u7528 $n-3$ \u6761\u5bf9\u89d2\u7ebf\u5c06\u591a\u8fb9\u5f62\u5206\u4e3a $n-2$ \u4e2a\u4e09\u89d2\u5f62\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u5bf9\u89d2\u7ebf $(A,B)$\uff0c\u8bb0\u4e0e\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u4e09\u89d2\u5f62\u4e3a $\\triangle ABC,\\triangle ABD$\u3002\n\n\u5b9a\u4e49\u7ffb\u8f6c\u64cd\u4f5c\u4e3a\u5220\u9664\u5bf9\u89d2\u7ebf $(A,B)$ \u5e76\u6dfb\u52a0\u5bf9\u89d2\u7ebf $(C,D)$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u4efb\u610f\u4e24\u79cd\u5206\u5272\u90fd\u80fd\u591f\u901a\u8fc7\u7ffb\u8f6c\u64cd\u4f5c\u76f8\u4e92\u8f6c\u6362\u3002\n\n\u7ed9\u51fa\u8d77\u59cb\u72b6\u6001 $S$ \u548c\u7ec8\u6b62\u72b6\u6001 $T$\uff0c\u8981\u6c42\u4f60\u5728 $20000$ \u6b65\u5185\u5c06\u8d77\u59cb\u72b6\u6001\u53d8\u6362\u4e3a\u7ec8\u6b62\u72b6\u6001\u3002\n\n$n\\le1000$\n\n## Solution\n\n\u65e2\u7136\u4efb\u610f\u4e24\u79cd\u72b6\u6001\u4e4b\u95f4\u90fd\u80fd\u591f\u76f8\u4e92\u8f6c\u6362\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5bfb\u627e\u4e00\u4e2a\u4e2d\u95f4\u72b6\u6001 $M$\uff0c\u901a\u8fc7 $S\\to M\\to T$ \u7684\u65b9\u5f0f\u5b8c\u6210\u8f6c\u6362\u3002\n\n\u540c\u65f6\u6211\u4eec\u8fd8\u53d1\u73b0\u53d8\u6362\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8003\u8651\u5982\u4f55\u5c06 $M$ \u8f6c\u6362\u4e3a\u5176\u4ed6\u72b6\u6001\uff0c\u90a3\u4e48 $S\\to M$ \u7684\u90e8\u5206\u4f5c\u9006\u53d8\u6362\u5373\u53ef\u3002\n\n\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6700\u7279\u6b8a\u7684\u5206\u5272\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6240\u6709\u5bf9\u89d2\u7ebf\u90fd\u4ece $1$ \u51fa\u53d1\u7684\u60c5\u51b5\u3002\n\n![](http://www.hsyoj.top/file/4/hexagon-0.png)\n\n\u6211\u4eec\u5c31\u5c06\u8fd9\u79cd\u72b6\u6001\u5b9a\u4e49\u4e3a $M$\uff0c\u8003\u8651\u6b64\u65f6\u4ece\u54ea\u4e9b\u5bf9\u89d2\u7ebf\u5165\u624b\u6784\u9020\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u5bf9\u89d2\u7ebf $(A,B)$ \u5b9a\u4e49 $dis$ \u4e3a $|A-B|-1$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6b64\u65f6\u76ee\u6807\u72b6\u6001\u4e2d\u6240\u6709 $dis=1$ \u7684\u5bf9\u89d2\u7ebf\u6211\u4eec\u90fd\u80fd\u591f\u901a\u8fc7\u4e00\u6b21\u7ffb\u8f6c\u5f97\u5230\u3002\n\n![](http://www.hsyoj.top/file/4/hexagon-1.png)\n\n\u6bcf\u505a\u4e00\u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u4e0d\u96be\u53d1\u73b0\u53ef\u4ee5\u89c6\u4f5c\u524a\u6389\u4e86\u539f\u6765 $n$ \u8fb9\u5f62\u7684\u4e00\u4e2a\u89d2\uff0c\u8fb9\u6570 $-1$\u3002\n\n\u5728\u6240\u6709 $k$ \u6761 $dis=1$ \u7684\u5bf9\u89d2\u7ebf\u6784\u9020\u5b8c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u539f\u6765\u6240\u6709 $dis=2$ \u7684\u5bf9\u89d2\u7ebf\u5728\u65b0\u7684 $n-k$ \u8fb9\u5f62\u4e2d $dis=1$\u3002\n\n\u4e8e\u662f\u53ea\u9700\u4f9d\u6b21\u6784\u9020 $dis=1\\to n-3$ \u7684\u5bf9\u89d2\u7ebf\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4e00\u4e0b\u4ee3\u7801\u5b9e\u73b0\u7684\u7ec6\u8282\uff0c$S\\to M$ \u65f6\u53ea\u9700\u8003\u8651 $S$ \u4e2d $dis=n-3\\to1$ \u7684\u5bf9\u89d2\u7ebf\uff0c\u800c $M\\to T$ \u7684\u90e8\u5206\uff0c\u82e5\u60f3\u8981\u6784\u9020 $T$ \u4e2d\u7684\u4e00\u6761\u5bf9\u89d2\u7ebf $(P,Q)$\uff0c\u6211\u4eec\u9700\u8981\u67e5\u8be2 $P,Q$ \u4e4b\u95f4\u8fd8\u672a\u4f5c\u8fc7\u7ffb\u8f6c\u64cd\u4f5c\u7684\u70b9 $R$\uff0c\u5bf9 $(1,R)$ \u8fdb\u884c\u7ffb\u8f6c\u64cd\u4f5c\uff0c\u5e76\u5c06 $R$ \u6807\u8bb0\u4e3a\u5df2\u505a\u8fc7\u7ffb\u8f6c\u64cd\u4f5c\uff0c\u8fd9\u4e00\u90e8\u5206\u7528 `std::set` \u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4ee3\u7801\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\uff0c$\\log$ \u6765\u81ea `std::set`\u3002\n\n\u64cd\u4f5c\u6b21\u6570\u7684\u4e0a\u754c\u4e3a $2n-6$\uff0c\u8fdc\u4f4e\u4e8e $20000$\u3002\n\n## Code\n\n```cpp\nnamespace Main{\n    int n, tot;\n    struct line{\n        int u, v;\n        line() {}\n        line(int u, int v): u(u), v(v) {}\n    };\n    vector<line> ans1[N], ans2[N];\n    set<int> ext;\n    void Main(){\n        input(n);\n        for(ri i = 0, u, v; i < n - 3; i++){\n            input(u, v);\n            if(u == 1 || v == 1) continue;\n            if(u < v) swap(u, v);\n            ans1[u - v].emplace_back(u, v);\n            tot++;\n        }\n        for(ri i = 0, u, v; i < n - 3; i++){\n            input(u, v);\n            if(u == 1 || v == 1) continue;\n            if(u < v) swap(u, v);\n            ans2[u - v].emplace_back(u, v);\n            tot++;\n        }\n        write(tot); puts(\"\");\n        for(ri i = N - 1; i; i--)\n            for(line x: ans1[i])\n                printf(\"%d %d\\n\", x.u, x.v);\n        for(ri i = 3; i <= n - 1; i++) ext.emplace(i);\n        for(ri i = 1; i < N; i++){\n            for(line x: ans2[i]){\n                set<int>::iterator iter = ext.upper_bound(x.v);\n                printf(\"%d %d\\n\", 1, *iter);\n                ext.erase(iter);\n            }\n        }\n        return;\n    }\n} // namespace\n```",
        "postTime": 1635297738,
        "uid": 371439,
        "name": "Liuxizai",
        "ccfLevel": 6,
        "title": "\u300cSolution\u300dCF512E Fox and Polygon"
    }
]