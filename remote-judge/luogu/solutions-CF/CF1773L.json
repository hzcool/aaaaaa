[
    {
        "content": "\u7ec8\u4e8e\u5199\u51fa\u6765\u4e86 QaQ\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\uff01\n\n\u8fd8\u6709\uff0c\u7ffb\u8bd1\u662f\u51fa\u9505\u7684\uff01\uff01\uff01\u4e0d\u662f\u5b50\u5e8f\u5217\u662f\u5b50\u6bb5\uff01\uff01\uff01\uff01\n\n\u8003\u8651\u600e\u4e48\u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u5408\u6cd5\u3002\n\n\u4e09\u4e2a\u5143\u7d20 $d,s,t$\u3002\n\n1. $d$ \u5206\u4e3a\u72b6\u6001 $-1$ \u548c $1$\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u5b50\u4e32\u662f\u5728\u4e0b\u964d\u8fd8\u662f\u5728\u4e0a\u5347\n2. $t$ \u8868\u793a\u4ee5\u904d\u5386\u5230\u73b0\u5728\u7684\u7ed3\u5c3e\u7684\uff0c\u5355\u8c03\u7684\u5b50\u4e32\u7684\u957f\u5ea6\n3. $s$ \u8868\u793a\u4ee5\u904d\u5386\u5230\u73b0\u5728\u7684\u7ed3\u5c3e\u7684\uff0c\u5168\u90e8\u76f8\u540c\u7684\u6700\u957f\u7684\u5b50\u4e32\u7684\u957f\u5ea6\n\n\u5bb9\u6613\u53d1\u73b0 $s\\leqslant t$\u3002\n\n\u521d\u59cb\u5316\u7684\u65f6\u5019\u5c06 $d,s,t$ \u7f6e\u6210 $0,0,0$\uff0c\u5b9e\u9645\u4e0a $d$ \u6700\u5f00\u59cb\u662f\u4ec0\u4e48\u6839\u672c\u6ca1\u5fc5\u8981\u7ba1\u3002\n\n\u5f88\u660e\u663e $a_1$ \u662f\u4e0d\u5347\u4e5f\u4e0d\u964d\u7684\uff0c\u8bbe $a_0=a_1$ \u5c31\u597d\u3002\n\n\u8003\u8651\u987a\u7740\u8fc7\u53bb\u600e\u4e48\u66f4\u65b0\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u53d1\u73b0\uff0c\u5171\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u4e0e\u524d\u4e00\u4e2a\u65b9\u5411\u76f8\u540c\uff0c\u90a3\u5c31\u7d2f\u52a0 $t$\uff0c$s$ \u91cd\u7f6e\uff0c\u5982\u679c\u4e0e\u524d\u4e00\u4e2a\u65b9\u5411\u76f8\u53cd\uff0c\u628a $t$ \u7f6e\u4e3a $s$ \u540e\u7d2f\u52a0\uff0c$s$ \u91cd\u7f6e\uff0c\u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u6570\u76f8\u540c\uff0c\u5219 $s$ \u548c $t$ \u90fd\u7d2f\u52a0\u3002\n\n\u5982\u679c\u67d0\u4e00\u4e2a\u65f6\u523b\u5f97\u5230 $k=t$\uff0c\u5219\u8fd9\u4e2a\u5e8f\u5217\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u628a\u4ed6\u53d8\u5f97\u5408\u6cd5\uff0c\u63a5\u4e0b\u6765\u7ed9\u51fa\u4e00\u4e2a\u5f15\u7406\u3002\n\n\u5f15\u7406\uff1a\u5b58\u5728\u4e00\u7ec4\u89e3 $b$\uff0c\u4f7f\u5f97\u8fd9\u7ec4\u89e3\u4e2d\u6240\u6709\u7684\u4fee\u6539\u8981\u4e48\u662f\u6539\u65e0\u7a77\u5927\uff08\u5373 $10^5$\uff09\uff0c\u8981\u4e48\u662f\u6539\u65e0\u7a77\u5c0f \uff08\u5373 $0$\uff09\u3002\n\n\u6211\u4eec\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\uff0c\u6211\u4eec\u6539\u4e00\u4e2a\u6570\u80af\u5b9a\u662f\u4e3a\u4e86\u6539\u53d8\u5927\u5c0f\u5173\u7cfb\uff0c\u65ad\u6389\u4e00\u4e2a\u6570\u4e4b\u540e\uff0c\u5982\u679c\u4e0d\u8d70\u6781\u7aef\uff0c\u5f88\u53ef\u80fd\u4f1a\u7ed9\u540e\u9762\u7684\u76f8\u53cd\u65b9\u5411\u4e0a\u7684\u5355\u8c03\u5b50\u4e32\u957f\u5ea6\u9020\u6210\u8d21\u732e\uff0c\u7740\u660e\u663e\u662f\u4e0d\u4f18\u4e8e\u8d70\u6781\u7aef\u7684\u3002\n\n\u8003\u8651\u50cf\u4e4b\u524d\u4e00\u6837\uff0c\u6211\u4eec\u518d\u505a\u4e00\u6b21\u904d\u5386\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u76f8\u8f83\u4e8e\u4e4b\u524d\uff0c\u6211\u4eec\u591a\u4e86\u4e24\u4e2a\u53d8\u91cf\u3002\n\n1. $m$ \u8868\u793a\u8fc4\u4eca\u4e3a\u6b62\u66f4\u65b0\u7684\u5143\u7d20\u6570\u91cf\n2. $u$ \u5206\u4e3a\u72b6\u6001 $-1$\uff0c$0$ \u548c $1$\uff0c\u5206\u522b\u8868\u793a\u4e0a\u4e00\u4e2a\u5143\u7d20\u662f\u53d8\u4e3a\u65e0\u7a77\u5c0f\u6216\u8005\u6ca1\u53d8\u6216\u8005\u53d8\u6210\u65e0\u7a77\u5927\u3002\n\n\u8003\u8651\u8bbe\u96c6\u5408 $r_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u5408\u6cd5\u7684\u72b6\u6001\uff0c\u8003\u8651\u5982\u679c\u6709 $r_{i-1}$ \u9a6c\u4e0a\u5c31\u80fd\u63a8\u51fa $r_i$\uff0c\u9700\u8981\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff08\u53d8\u5927\uff0c\u4e0d\u53d8\u548c\u53d8\u5c0f\uff09\uff0c\u7136\u540e\u62ff\u5230\u7684\u72b6\u6001\u5982\u679c\u5408\u6cd5\uff0c\u5373 $t<k$\uff0c\u5c31\u628a\u4ed6\u62c9\u8fdb\u96c6\u5408\u91cc\u9762\uff0c\u6700\u540e $r_n$ \u91cc\u9762\u6700\u5c0f\u7684 $m$ \u5c31\u662f\u7b54\u6848\u3002\n\n\u8fd9\u6837\u660e\u663e\u662f\u53ef\u884c\u7684\uff0c\u4f46\u662f\u6700\u52a3\u60c5\u51b5\u6bcf\u6b21\u72b6\u6001\u6570\u91cf\u7ffb $3$ \u500d\uff0c\u4f1a\u8d85\u65f6\u3002\n\n\u8003\u8651\u51cf\u5c11\u98de\u821e\u72b6\u6001\uff01\n\n\u8bbe\u8ba1\u4e00\u4e2a\u7f29\u51cf\u96c6 $R_i$\uff0c\u5176\u4e2d\u5bf9\u4e8e\u6bcf\u5bf9 $u,d$ \u6700\u591a\u53ea\u6709\u4e00\u7ec4\u89e3\u3002\n\n\u5982\u679c\u6709\u591a\u4e2a\uff0c\u90a3\u4e48\u4fdd\u7559 $m$ \u6700\u5c0f\u7684\u90a3\u4e2a\u3002\n\n\u5982\u679c\u518d\u6709\u591a\u4e2a\uff0c\u90a3\u4e48\u4fdd\u7559 $t$ \u6700\u5c0f\u7684\u90a3\u4e2a\u3002\n\n\u5982\u679c\u518d\u6709\u591a\u4e2a\uff0c\u90a3\u4e48\u4fdd\u7559 $s$ \u6700\u5c0f\u7684\u90a3\u4e2a\u3002\n\n\u8003\u8651\u56e0\u4e3a $u$ \u548c $d$ \u5408\u8d77\u6765\u62e2\u5171 $6$ \u79cd\u60c5\u51b5\uff0c\u7136\u540e\u653e\u6700\u5c0f\u7684\u4e0a\u5347\u548c\u653e\u6700\u5927\u7684\u4e0b\u964d\u4e24\u4e2a\u60c5\u51b5\u6ca1\u6709\u7528\uff08\u56e0\u4e3a\u4e0d\u4ec5\u4fee\u6539\u4e86\u8fd8\u4f1a\u5e2e\u52a9\u540e\u9762\u7684\u5355\u8c03\u5b50\u6bb5\uff09\uff0c\u6240\u4ee5\u53ea\u6709\u56db\u79cd\u60c5\u51b5\u3002\n\n\u7136\u540e\u6309\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6\u4e0b\u518d\u53bb\u6574\u4e2a\u8dd1\u4e00\u904d\u5f97\u5230\u6700\u5c0f\u7b54\u6848\u3002\n\n\u4f60\u8003\u8651\u8bc1\u660e\u8fd9\u4e2a\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff0c\u6211\u4eec\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u5bf9\u4e8e\u53d8\u5927\u4e0a\u5347\u548c\u53d8\u5c0f\u4e0b\u964d\uff0c\u8003\u8651\u8fd9\u4e24\u79cd\u60c5\u51b5\u80af\u5b9a\u662f\u8f83\u4f18\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u505a\u9996\u5148\u6211\u66f4\u65b0\u8fc7\u6765\u7684\u72b6\u6001\u4e00\u5b9a\u662f $(m,t,1)$\uff0c\u7136\u540e\u4f60\u8003\u8651\u8fd9\u6837\u4e5f\u4e00\u5b9a\u80fd\u4fdd\u8bc1 $t$ \u8fbe\u5230 $1$\uff0c\u7136\u540e $m$ \u53c8\u662f\u7531\u4e4b\u524d\u7684\u6700\u4f18\u7684 $m$ \u8f6c\u79fb\u8fc7\u6765\u7684\u6240\u4ee5\u80af\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u5bf9\u4e8e\u4e0d\u4fee\u6539\u7684\uff0c\u8003\u8651\u4e0a\u5347\u548c\u4e0b\u964d\u4e24\u79cd\u60c5\u51b5\u8c01\u5360\u4f18\u52bf\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u53ea\u7167\u7740\u6700\u4f18\u503c\u7edf\u8ba1\u7684\uff0c\u6240\u4ee5\u5176\u4e2d\u80af\u5b9a\u6709\u4e00\u4e2a\u53d6\u5230\u4e86\u6700\u540e\u6700\u4f18\u7684\u503c\uff0c\u5177\u4f53\u662f\u8c01\u6ca1\u5fc5\u8981\u77e5\u9053\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u6709\u72b6\u6001\u66b4\u529b\u5f80\u524d\u63a8\u5c31\u884c\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,k;\nstruct node{\n    int m,t,s;\n    bool friend operator < (const node &a,const node &b){\n        return a.m<b.m||\n        a.m==b.m&&a.t<b.t||\n        a.m==b.m&&a.t==b.t&&a.s<b.s;\n    }\n}r[1000005][4];\nint a[1000005];\nint pre[1000005][4];\nbool check(node a){\n    return a.t<k;\n}\nvoid print(int cur,int S){\n    if(cur==0)return;\n    print(cur-1,pre[cur][S]);\n    if(S>=2)printf(\"%lld \",a[cur]);\n    if(S==0)printf(\"0 \");\n    if(S==1)printf(\"100000 \");\n    return;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&n,&k);\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld\",&a[i]);\n        r[i][0]=r[i][1]=r[i][2]=r[i][3]=node{10000000005,10000000005,10000000005};\n    }\n    for(int i=1;i<=n;i++){\n        for(int S1=0;S1<4;S1++){\n            int P=a[i-1];\n            if(S1==0)P=0;\n            if(S1==1)P=100000;\n            for(int S2=0;S2<4;S2++){\n                int S=a[i];\n                if(S2==0)S=0;\n                if(S2==1)S=100000;\n                if(S2&1){\n                    if(S1&1){\n                        if(S>P){\n                            node tmp=node{r[i-1][S1].m+(S2<2),r[i-1][S1].t+1,1};\n                            if(check(tmp)){\n                                if(tmp<r[i][S2]){\n                                    pre[i][S2]=S1;\n                                }\n                                r[i][S2]=min(r[i][S2],tmp);\n                            }\n                        }\n                        else if(S==P){\n                            node tmp=node{r[i-1][S1].m+(S2<2),r[i-1][S1].t+1,r[i-1][S1].s+1};\n                            if(check(tmp)){\n                                if(tmp<r[i][S2]){\n                                    pre[i][S2]=S1;\n                                }\n                                r[i][S2]=min(r[i][S2],tmp);\n                            }\n                        }\n                    }\n                    else{\n                        if(S>P){//\n                            node tmp=node{r[i-1][S1].m+(S2<2),r[i-1][S1].s+1,1};\n                            if(check(tmp)){\n                                if(tmp<r[i][S2]){\n                                    pre[i][S2]=S1;\n                                }\n                                r[i][S2]=min(r[i][S2],tmp);\n                            }\n                        }\n                    }\n                }\n                else{\n                    if(!(S1&1)){\n                        if(S<P){\n                            node tmp=node{r[i-1][S1].m+(S2<2),r[i-1][S1].t+1,1};\n                            if(check(tmp)){\n                                if(tmp<r[i][S2]){\n                                    pre[i][S2]=S1;\n                                }\n                                r[i][S2]=min(r[i][S2],tmp); \n                            }\n                        }\n                        else if(S==P){\n                            node tmp=node{r[i-1][S1].m+(S2<2),r[i-1][S1].t+1,r[i-1][S1].s+1};\n                            if(check(tmp)){\n                                if(tmp<r[i][S2]){\n                                    pre[i][S2]=S1;\n                                }\n                                r[i][S2]=min(r[i][S2],tmp);\n                            }\n                        }\n                    }\n                    else{\n                        if(S<P){\n                            node tmp=node{r[i-1][S1].m+(S2<2),r[i-1][S1].s+1,1};\n                            if(check(tmp)){\n                                if(tmp<r[i][S2]){\n                                    pre[i][S2]=S1;\n                                }\n                                r[i][S2]=min(r[i][S2],tmp);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    int MIN=r[n][0].m,mini=0;\n    for(int i=1;i<4;i++){\n        if(r[n][i].m<MIN){\n            MIN=r[n][i].m;\n            mini=i;\n        }\n    }\n    printf(\"%lld\\n\",MIN);\n    print(n,mini);\n    return 0;\n}\n```",
        "postTime": 1677305949,
        "uid": 653218,
        "name": "kisara_qwq",
        "ccfLevel": 0,
        "title": "CF1773L\u7684\u89e3\u6cd5\uff01"
    }
]