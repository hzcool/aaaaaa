[
    {
        "content": "### \u524d\u8a00\n$lukelin$ ~~\u81ea\u8ba4\u4e3a~~\u8fd9\u7bc7\u9898\u89e3\u5199\u5f97\u975e\u5e38\u5730\u8be6\u7ec6\u3002  \n**[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/linzhengmin/p/11794875.html)**  \n\u5728\u4e0b\u6587\u4e2d\uff0c\u6211\u4eec\u8bb0 $A$ \u4e3a $a$ \u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5728\u4ee3\u7801\u4e2d\u5c31\u662f \"_max\" \u3002\n### \u9898\u610f\u7b80\u8ff0\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/problemset/problem/1223/G)  \n\u7ed9\u51fa\u4e00\u7ec4 $n$ \u5757\u6728\u677f\u4ee5\u53ca\u5b83\u4eec\u7684\u957f\u5ea6 $a_i$\uff0c\u73b0\u5728\u8981\u5207\u5272\u51fa\u4e24\u5757\u6728\u677f\u4f7f\u4e4b\u957f\u5ea6\u4e3a $x$ \uff0c\u5207\u5272 $x$ \u5757\u6728\u677f\u4f7f\u4e4b\u957f\u5ea6\u4e3a $y$\u3002  \n\u6c42 $x \\times y$ \u7684\u6700\u5927\u503c\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/vok7us63.png?x-oss-process=image/resize,m_lfit,h_170,w_225)  \n\n### \u9898\u89e3\n#### \u57fa\u672c\u601d\u60f3\n\u6211\u4eec\u6709\u4e00\u4e2a\u975e\u5e38\u7f8e\u5999\u7684\u4f7f\u7528\u4e8c\u5206\u7684 $\\Theta(Aln_Alog_A)$ \u7684\u505a\u6cd5\uff0c  \n\u4f46\u662f\u6211\u4eec\u4eca\u5929\u8981\u8bf4\u7684\u662f\u4e00\u4e2a\u6bd4\u5b83\u4f18\u79c0\u7684 $\\Theta(Aln_A)$ \u7684\u7b97\u6cd5\u3002  \n\u5bf9\u4e8e\u51e0\u4e4e\u6240\u6709\u7684\u505a\u6cd5\uff0c\u90fd\u6709\u4e24\u4e2a\u663e\u7136\u7684\u601d\u60f3\uff0c  \n\u679a\u4e3e $y$ \uff0c\u7136\u540e\u8ba1\u7b97 $x$\uff1b  \n\u8d2a\u5fc3\u5730\u628a\u957f\u5ea6\u4e3a $l$ \u7684\u6728\u677f\u5206\u89e3\u4e3a $l = tx + ky + \\delta, t \\in [0, 2]$ \u5176\u4e2d $\\delta$ \u8d8a\u5c0f\u8d8a\u597d\u3002  \n\u6709\u4e86\u8fd9\u4e2a\u601d\u60f3\u4ee5\u540e\u6211\u4eec\u8fd8\u9700\u8981\u6309\u7167 $l / y$ \u7684\u503c\u5bf9\u6728\u677f\u5206\u5757(\u5373\u5757\u7684\u533a\u95f4 $[ ky, (k+1)y )$ )\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/xmna7gir.png?x-oss-process=image/resize,m_lfit,h_170,w_225)  \n\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u6765\u8fdb\u884c\u4e00\u6ce2\u5206\u7c7b\u8ba8\u8bba\u3002  \n#### \u4e24\u4e2a $x$ \u5728\u540c\u4e00\u5757\u6728\u677f\u4e2d\u88ab\u5207\u5272\u51fa  \n![](https://cdn.luogu.com.cn/upload/image_hosting/jq6shxb4.png?x-oss-process=image/resize,m_lfit,h_170,w_225)  \n\u6211\u4eec\u8bb0 $p_1, p_2$ \u4e3a\u4e24\u4e2a\u70b9\uff0c\u4e14 $p_1$ \u8ddd\u79bb\u5b83\u6240\u5728\u5757\u7684\u53f3\u7aef\u70b9\u6bd4 $p_2$ \u66f4\u8fdc\u3002  \n\u53ef\u4ee5\u8bc1\u660e\uff0c $p_1$ \u7684\u51b3\u7b56\u4e00\u5b9a\u52a3\u4e8e $p_2$ \uff0c\u56e0\u4e3a\u5728\u629b\u53bb $ky$ \u7684\u60c5\u51b5\u4e0b\uff0c\n\u9009\u62e9 $p_2$ \u6240\u5f97\u7684 $x$ \u663e\u7136\u66f4\u5927\u3002  \n\u90a3\u4e48\u6211\u4eec\u4ece\u53f3\u5f80\u5de6\u626b\u63cf\uff0c\u8bbe\u5f53\u524d\u7684\u5757\u4e3a $c$ \u3002  \n\u5728\u5f0f\u5b50 $l = x + ky + \\delta$\uff0c\u82e5\u5f53\u524d\u7684\u5757\u4e3a $c$ \uff0c\u5f53\u524d\u5757\u5f80\u53f3\u7684\u6240\u6709\u5757(\u5305\u62ec\u81ea\u5df1)\u91cc\u6240\u5728\u5757\u53f3\u7aef\u70b9\u6700\u8fdc\u7684\u70b9\u4e3a $p$ \u3002  \n\u5219\u5b9a\u4e49$x = (c \\times y + p \\% y) / 2$ \uff0c\u5269\u4e0b\u7684\u90e8\u5206\u7ed9 $ky$ \u3002\n\u8bb0 $p$ \u5728 $c$ \u4e2d\u7684\u6620\u5c04\u4e3a $p'$\uff0c\u5373 $p' \\in c$ \u4e14 $p' \\equiv p \\mod(y)$(\u4e0b\u6587\u4e2d\u7684 $p_1',p_2'$ \u540c\u7406)\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/6m8vy343.png?x-oss-process=image/resize,m_lfit,h_170,w_225)  \n\u5177\u4f53\u5982\u4e0a\u56fe\u6240\u793a\u3002  \n#### \u4e24\u4e2a $x$ \u5206\u522b\u5728\u4e24\u5757\u6728\u677f\u4e2d\u88ab\u5207\u5272\u51fa  \n\u6839\u636e\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u4ecd\u7136\u4ece\u53f3\u5f80\u5de6\u626b\u63cf\uff0c\u8bbe\u5f53\u524d\u7684\u5757\u4e3a $c$\u3002\u7136\u540e\u6211\u4eec\u8bb0\uff0c  \n\u5f53\u524d\u5757\u5f80\u53f3\u7684\u6240\u6709\u5757(\u5305\u62ec\u81ea\u5df1)\u91cc\u6240\u5728\u5757\u53f3\u7aef\u70b9\u6700\u8fdc\u7684\u6728\u677f\u4e3a $p_1$ \u3002  \n\u5f53\u524d\u5757\u5f80\u53f3\u7684\u6240\u6709\u5757(\u5305\u62ec\u81ea\u5df1)\u91cc\u6240\u5728\u5757\u53f3\u7aef\u70b9\u6b21\u8fdc\u7684\u6728\u677f\u4e3a $p_2$ \u3002  \n\u90a3\u4e48\u6211\u4eec\u603b\u7ed3\u51fa\u5e76\u8ba8\u8bba\u5982\u4e0b\u56db\u79cd\u60c5\u51b5:  \n**\u60c5\u51b51\u30012**\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/9zatrpv4.png?x-oss-process=image/resize,m_lfit,h_170,w_225)$\\quad \\quad$![](https://cdn.luogu.com.cn/upload/image_hosting/3euqsmjo.png?x-oss-process=image/resize,m_lfit,h_170,w_225)  \n\u6211\u4eec\u5728\u60c5\u51b5\u4e00\u5185\u5206\u7c7b\u8ba8\u8bba\uff0c\u53d1\u73b0\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\u53ef\u80fd\u6700\u4f18\uff0c  \n\u7b2c\u4e00\u79cd\u662f\u628a $p_2$ \u6728\u677f\u5206\u89e3\u5b8c\u5168(\u5373 $=x + ky$\uff0c$k$ \u4e3a $c$ \u5230 $p_2$ \u6240\u5728\u5757\u8de8\u8d8a\u7684\u5757\u6570\uff09\uff0c\u7b2c\u4e8c\u79cd\u662f\u628a $p_1$ \u6728\u677f\u5206\u89e3\u5b8c\u5168\u3002  \n\u4f46\u662f\u6ce8\u610f\u5230\u5982\u679c $p_1$ \u6728\u677f\u5206\u89e3\u5b8c\u5168\uff0c\u90a3\u4e48 $p_2$ \u6728\u677f\u957f\u5ea6\u663e\u7136\u4e0d\u591f\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u727a\u7272 $p_2$ \u6728\u677f\u88c1\u51fa\u7684\u4e00\u4e2a $y$ \uff0c\u6765\u4fdd\u8bc1\u80fd\u591f\u5207\u9664\u4e00\u4e2a $x$ \u3002  \n\n\u518d\u6765\u8003\u8651\u60c5\u51b5\u4e8c\uff0c\u6211\u4eec\u53d1\u73b0\u60c5\u51b5\u4e8c\u7684\u4e0d\u540c\u4e4b\u5904\u662f\uff0c $p_2$ \u6728\u677f\u4e0d\u80fd\u591f\u727a\u7272\u4e00\u4e2a $y$ \u6765\u4fdd\u8bc1\u5207\u9664 $x$ \u4e86(\u957f\u5ea6\u4e0d\u8db3)\uff0c  \n\u90a3\u4e48\u5904\u7406\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u820d\u5f03\u6389\u5b8c\u5168\u5206\u89e3 $p_1$ \u65b9\u6848(~~\u6ed1\u7a3d~~)\uff0c\u53ea\u8003\u8651\u5b8c\u5168\u5206\u89e3 $p_2$\u3002  \n\n\u60a8\u89c9\u5f97\u8ba8\u8bba\u7ed3\u675f\u4e86\uff1f\u8fd8\u6709\u4e24\u79cd\u54e6 QwQ \u3002  \n\n**\u60c5\u51b53**:  \n![](https://cdn.luogu.com.cn/upload/image_hosting/mbu0644m.png?x-oss-process=image/resize,m_lfit,h_170,w_225)  \n\u6211\u4eec\u53d1\u73b0\u60c5\u51b53\u4e0e\u60c5\u51b51\u76f8\u540c(\u663e\u7136\u6613\u89c1\u8fd8\u662f\u5c06 $p_1$ \u6216 $p_2$ \u5206\u89e3\u5b8c\u5168)\u3002  \n\n**\u60c5\u51b54**  \n![](https://cdn.luogu.com.cn/upload/image_hosting/qfjcxjgu.png?x-oss-process=image/resize,m_lfit,h_170,w_225)  \n\u6211\u4eec\u53d1\u73b0\u60c5\u51b54\u4e0e\u60c5\u51b52\u76f8\u540c(\u663e\u7136\u6613\u89c1\u8fd8\u662f\u4e0d\u80fd\u727a\u7272 $p_2$ \u7684\u4e00\u4e2a $y$)\u3002  \n\n\u7136\u540e\u6211\u4eec\u6ce8\u610f\u5230\u8ba1\u7b97\u7684\u65f6\u5019\uff0c$x$ \u4e0d\u4e00\u5b9a\u5c0f\u4e8e $y$\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u8981\u53d6\u4e00\u4e2a $min$ \u3002  \n\n### \u4ee3\u7801\nnote: \u6ce8\u91ca\u662f\u82f1\u6587\u7684\uff0c\u56e0\u4e3a\u6015\u51fa\u7384\u5b66\u9519\u8bef\u3002  \n```cpp\n/*\n    author: lukelin\n    note: I'm sorry that my English is poor.\n*/\n#include <cstdio>\n\n// input data\nint a[500005];\n// make length -> pos & the prefix\nint cnt[1000005], prfc[1000005];\nint l1[1000005], l2[1000005];\n\n#define min(a,b) ((a<b)?a:b)\n#define max(a,b) ((a>b)?a:b)\ninline void swap(int &a, int &b){\n    int tmp = a; a = b, b = tmp;\n}\n\nlong long ans;\n\ninline void flush(int x, int cnty, int y){\n    if (min(cnty, x) <= 1) return ;\n    ans = max(ans, 1ll * min(cnty, x) * y);\n}\n\nint main(){\n    int n, _max = 0; scanf(\"%d\", &n);\n    for (int i = 1; i <= n; ++i){\n        scanf(\"%d\", &a[i]), ++cnt[a[i]];\n        if (_max < a[i]) _max = a[i];\n    }\n    int prfc_lim = _max << 1; //the max id we will use in prfc\n    for (int i = 1; i <= prfc_lim; ++i) prfc[i] = prfc[i - 1] + cnt[i];\n    l1[0] = l2[0] = -1;\n    for (int i = 1; i <= prfc_lim; ++i){\n        //l1 - the longest wood whick less equal than i\n        //l2 - the second longest wood whick less equal than i\n        if (cnt[i] >= 2) l1[i] = l2[i] = i;\n        else if (cnt[i] == 1) l2[i] = l1[i - 1], l1[i] = i;\n        else l1[i] = l1[i - 1], l2[i] = l2[i - 1];\n    }\n    for (int y = 2; y <= _max; ++y){\n        int ycnt = 0;\n        for (int c = 1; c * y <= _max; ++c){\n            //prefix[block c's end] - prefix[block c's begin - 1]\n            ycnt += (prfc[c * y + y - 1] - prfc[c * y - 1]) * c;\n        }\n        // first the situation that both x in one wood\n        int p = -1;\n        for (int c = _max / y + 1; ~c; --c){\n            // the start position and the end position of current block(c)\n            int blk_sp = c * y, blk_ep = c * y + y - 1;\n            if (l1[blk_ep] >= blk_sp && (p == -1 || p % y < l1[blk_ep] % y))\n                p = l1[blk_ep];\n            if (~p)\n                flush((c * y + p % y) >> 1, ycnt - c, y);\n        }\n        // second the situation that each x in one different wood\n        int p1 = -1, p2 = -1;\n\t\tfor(int c = _max / y + 1; ~c; --c){\n\t\t    // the start position and the end position of current block(c)\n\t\t    int blk_sp = c * y, blk_ep = c * y + y - 1;\n\t\t\tif(~p2){\n\t\t\t    //situation 1 - now both p1 and p2 is behind c\n\t\t\t    flush(c * y + p1 % y, ycnt - c * 2 - 1, y);\n\t\t\t    flush(c * y + p2 % y, ycnt - c * 2, y);\n\t\t\t}\n\t\t\tif (~p1 && l1[blk_ep] >= blk_sp && l1[blk_ep] % y > p2 % y){\n                if (l1[blk_ep] % y >= p1 % y){\n                    //situation 3 - p1 is in c, p2 is behind c\n                    flush(c * y + p1 % y, ycnt - c * 2, y),\n                    flush(l1[blk_ep], ycnt - c * 2 - 1, y);\n                }\n                else{\n                    //situation 4 - p1 is behind c, p2 is in c\n                    flush(l1[blk_ep], ycnt - c * 2, y);\n                }\n            }\n            //update\n            if (l1[blk_ep] >= blk_sp && p2 % y < l1[blk_ep] % y)\n                p2 = l1[blk_ep];\n\t\t\tif (p1 % y < p2 % y) swap(p1, p2);\n\t\t\tif (l2[blk_ep] >= blk_sp && p2 % y < l2[blk_ep] % y)\n                p2 = l2[blk_ep];\n\t\t\tif (p1 % y < p2 % y) swap(p1, p2);\n\t\t\tif (~p2){\n\t\t\t    //situation 2 - p1, p2 is both behind c\n                //* if (p1, p2) isn't both in c, it's useless but won't cause WA\n\t\t\t    flush(c * y + p2 % y, ycnt - c * 2, y);\n\t\t\t}\n\t\t}\n    }\n    printf(\"%I64d\", ans);\n    return 0;\n}\n```",
        "postTime": 1573021105,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1223G \u3010Wooden Raft\u3011"
    },
    {
        "content": "- \u4e00\u4e9b\u5de7\u5999\u7684\u9898\u76ee\u5bf9\u6211\u7684\u5e2e\u52a9\u662f\u542f\u53d1\u5f0f\u7684\u3002\n- \u5148\u8bb0\u4e0b\u6765\uff0c\u56e0\u4e3a\u6bd4\u8f83\u96be\u4ee5\u5206\u7c7b\u3002\n## **CF1223G Wooden Raft**\n**\u9898\u610f**\n- \u7ed9\u51fa\u4e00\u4e2a\u6570\u5217 $\\lbrace a_n\\rbrace$ \u4ee3\u8868\u6bcf\u6bb5\u6728\u5934\u7684\u957f\u5ea6\uff0c\u4f60\u53ef\u4ee5\u5c06\u6bcf\u6bb5\u6728\u5934\u952f\u6210\u4efb\u610f\u957f\u5ea6\u4e3a\u6574\u6570\u7684\u5c0f\u6bb5\uff0c\u627e\u5230 $2$ \u6839\u957f\u4e3a $x$ \u7684\u6728\u5934\uff0c$x$ \u6839\u957f\u5ea6\u4e3a $y$ \u7684\u6728\u5934\u4e14\u6ee1\u8db3 $x,y\\ge 2$\uff08\u5bb9\u6613\u53d1\u73b0\u5b83\u5f62\u6210\u4e86\u4e00\u4e2a\u6728\u7b4f\u5f62\u72b6\uff09\uff0c\u6c42 $x\\cdot y$ \u7684\u6700\u5927\u503c\u3002 \n\n**\u66b4\u529b\u5b9e\u73b0**\n- \u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $x,y$\uff0c\u518d\u7528\u4e00\u4e2a\u80cc\u5305\u5224\u65ad\u80fd\u5426\u88c5\u4e0b\uff0c\u590d\u6742\u5ea6 $\\Theta(n^3)$ \u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/6wjxrcck)\u3002\n- \u679a\u4e3e $x$ \u4e8c\u5206 $y$ \u590d\u6742\u5ea6 $\\Theta(n^2\\lg n)$ \u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/njl68zh9)\u3002\n- \u6ca1\u4ec0\u4e48\u4f18\u5316\u7a7a\u95f4\u4e86\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u4eec\u7528\u7684 DP \u592a low \u4e86\u3002\n\n**\u601d\u8def**\n- \u663e\u7136 $\\lbrace a_n\\rbrace$ \u5e94\u8be5\u5148\u6392\u5e8f\u3002\n- \u8003\u8651\u679a\u4e3e $y$\uff0c\u7136\u540e\u6709\u4e2a\u6bd4\u8f83\u5de7\u5999\u7684\u4e1c\u897f\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/ot0s9uhb.png)\n- \u4ee5\u4e0b\u662f\u6bcf\u5757\u6a21\u677f\u7684\u957f\u5ea6\u4ee5 $y$ \u7684\u500d\u6570\u4e3a\u5206\u754c\u70b9\u6240\u5f62\u6210\u7684\u56fe\u50cf\u3002\n- \u5999\u5904\u5728\u54ea\uff1f\n- \u82e5\u6700\u5927\u7684\u6570\u5b57\u4e3a $A$ \uff0c\u7b2c\u4e00\u6b21\u6700\u591a $A$ \u5757\uff0c\u7b2c\u4e8c\u6b21 $\\lfloor\\frac A2\\rfloor$\uff0c\u7b2c\u4e09\u6b21 $\\lfloor\\frac A3\\rfloor$ \u5757\u2026\u2026\n- \u679a\u4e3e\u5757\u6570\u7684\u603b\u548c\u662f\u4e00\u4e2a\u8c03\u548c\u7ea7\u6570\uff1a\n$$\\sum_{i=1}^n\\bigg\\lfloor\\frac Ai\\bigg\\rfloor=O(A\\ln A)$$\n- \u54b1\u4eec\u4e0b\u4e00\u6bb5\u89e3\u51b3\u4e00\u4e2a\u6bd4\u8f83\u56f0\u6270\u7684\u7ec6\u8282\u95ee\u9898\uff0c\u5982\u4f55\u8fd9\u6837\u5206\u5757\uff0c\u5982\u679c\u518d\u7528\u6734\u7d20\u7684\u7b97\u6cd5\u663e\u7136\u662f\u4e0d\u884c\u7684\u3002\n- \u7136\u540e\u6211\u4eec\u518d\u8bd5\u7740\u5229\u7528\u5757\u5185\u7684\u6027\u8d28\u3002\n\n**\u5206\u5757\u7684\u5999\u7528**\n- \u600e\u4e48\u5206\uff1f\n- \u6bcf\u4e00\u5757\u4e8c\u5206\u7ed3\u679c\uff0c\u603b\u590d\u6742\u5ea6\u662f $O(A\\cdot\\ln A\\cdot\\lg n)$\u3002\n- \u5f88\u5371\u9669\u3002\n- \u5f00\u4e00\u5927\u4e2a\u6876\uff0c$b_i$ \u4fdd\u5b58\u503c\u4e3a $i$ \u7684\u5143\u7d20\u4e2a\u6570\u3002\n- $\\Theta(A\\ln A)$ \u5b8c\u7f8e\uff0c~~\u5c3d\u7ba1\u4e00\u4e0b\u5b50\u5c31\u53d6\u5230\u4e86\u6700\u574f\u7684\u590d\u6742\u5ea6~~\u3002\n- \u9274\u4e8e\u540e\u9762\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u6765\u4e00\u4e2a\u6307\u9488\u67e5\u8be2\u6bcf\u4e2a\u5143\u7d20\u7684\u975e\u96f6\u524d\u9a71\uff0c\u7528\u4e8e\u627e\u5230\u6bcf\u5757\u5185\u7684\u6700\u5927\u6216\u6b21\u5927\u5143\u7d20\u3002\n- \u540c\u6837\u7684\u539f\u56e0\u6211\u4eec\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u548c\u7528\u4e8e\u6c42\u5757\u5185\u7684\u533a\u95f4\u548c\u3002\n\n**\u7ee7\u7eed\u5b9e\u73b0\u7ec6\u8282**\n- \u8003\u8651\u6ca1\u6709 $x$ \u7684\u60c5\u51b5\u80fd\u5206\u591a\u5c11\u6bb5 $y$ \u3002\n- \u7b54\u6848\u662f $\\sum\\lfloor\\frac {a_i}y\\rfloor$\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5bf9\u4e8e\u6bcf\u5757\u7edf\u8ba1\u4e2a\u6570\u5373\u53ef\u5728 $\\Theta(\\lfloor\\frac Ay\\rfloor)$  \u7684\u65f6\u95f4\u5f97\u5230\u7ed3\u679c\u3002\n- \u7136\u540e\u8003\u8651\u4e24\u4e2a\u76f8\u7b49\u7684 $x$ \u5e94\u8be5\u600e\u4e48\u529e\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u4e24\u4e2a $x$ \u5728\u540c\u4e00\u5757\u6728\u677f\u5185\uff0c\u6216\u8005\u4e0d\u5728\u3002\n\n**\u4e24\u5757 x \u6728\u677f\u5728\u540c\u4e00\u5757\u6728\u677f\u5185\u88ab\u5207\u5272**\n![](https://cdn.luogu.com.cn/upload/image_hosting/yhrdmmsn.png)\n- \u50cf\u8fd9\u56fe\u7247\u4e00\u6837\uff0c\u6728\u677f\u7684\u9009\u62e9\u662f\u8d2a\u5fc3\u7684\uff0c\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $2x$\uff0c\u9664\u4ee5 $y$ \u7684\u4f59\u6570\u6700\u5927\uff08\u8fd8\u6709\u4e00\u4e2a\u9690\u5f62\u7684\u6761\u4ef6\uff0c\u5fc5\u987b\u662f\u6bcf\u5757\u5185\u90e8\u7684\u6700\u5927\u503c\uff09\n- \u4f60\u4e5f\u77e5\u9053\u8be5\u600e\u4e48\u529e\u4e86\u5427\uff0c\u679a\u4e3e\u6bcf\u4e2a\u5757\uff0c\u5904\u7406\u540e\u7f00\u6a21 $y$ \u6700\u5927\u503c\u3002\n- \u5982\u679c\u679a\u4e3e\u5230 $ky\\le2x<ky+y$ \u540e\u7f00\u548c\uff0c\u5219 $y$ \u7684\u6bb5\u6570\u663e\u7136\u4e3a $-k+\\sum\\lfloor\\frac {a_i}y\\rfloor$ \u4e24\u8005\u53d6 $\\min$ \u5f97\u5230\u5408\u6cd5\u7684 $x$ \u3002\n\n**\u4e24\u5757 x \u6728\u677f\u5206\u522b\u53d6\u81ea\u4e0d\u540c\u6728\u677f**\n![](https://cdn.luogu.com.cn/upload/image_hosting/idv8apv9.png)\n- \u50cf\u8fd9\u56fe\u7247\u4e00\u6837\uff0c\u6728\u677f\u7684\u9009\u62e9\u662f\u8d2a\u5fc3\u7684\uff0c\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $x$\uff0c\u9664\u4ee5 $y$ \u7684\u4f59\u6570\u6700\u5927\uff08\u8fd8\u6709\u4e00\u4e2a\u9690\u5f62\u7684\u6761\u4ef6\uff0c\u5fc5\u987b\u662f\u6bcf\u5757\u5185\u90e8\u7684\u6700\u5927\u503c\u6216\u6b21\u5927\u503c\uff09\n- \u679a\u4e3e\u6bcf\u4e2a\u5757\uff0c\u5904\u7406\u540e\u7f00\u6a21 $y$ \u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u3002\n- \u5982\u679c\u679a\u4e3e\u5230 $ky\\le x<ky+y$ \u540e\u7f00\u548c\uff08$x$ \u5e94\u8be5\u53d6\u6b21\u5927\u7684\uff09\uff0c\u5219 $y$ \u7684\u6bb5\u6570\u663e\u7136\u4e3a $-2k+\\sum\\lfloor\\frac {a_i}y\\rfloor$ \u4e24\u8005\u53d6 $\\min$ \u5f97\u5230\u5408\u6cd5\u7684 $x$\u3002\n- \u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u60c5\u51b5\uff1a\uff08$x$ \u53d6\u6700\u5927\u7684\uff09\u6b64\u65f6\u8981\u5728\u66f4\u957f\u7684\u4e00\u5757\u6728\u5934\u4e0a\u524a\u53bb\u4e00\u6bb5\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\uff0c$y$ \u7684\u6bb5\u6570\u4e3a $-2k-1+\\sum\\lfloor\\frac {a_i}y\\rfloor$\uff0c\u65b9\u6cd5\u5f88\u7c7b\u4f3c\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u51fa\u56fe\u7247\u4e86\u3002\n\n**\u4ee3\u7801\u5b9e\u73b0**\n- \u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n+A\\ln A)$ \u7a7a\u95f4\u590d\u6742\u5ea6 $\\Theta(n+A)$\u3002\n- \u5e38\u6570\u4f3c\u4e4e\u4f1a\u6bd4\u8f83\u5927\uff0c\u4e0d\u7ba1\u4e86\u5c31\u8fd9\u4e48\u53d1\u51fa\u6765\u5427\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/0qonx74a)\u3002",
        "postTime": 1633351433,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u597d\u9898"
    },
    {
        "content": "## [\u9898\u610f](https://blog.csdn.net/BeNoble_/article/details/102535366)\n\u7ed9\u4f60$n$\u6839\u6728\u5934\uff0c\u7b2c$i$\u6839\u957f$a_i$\n\n\u952f\u51fa$2$\u6bb5\u957f\u5ea6\u4e3a$x$\u7684\u6728\u5934\u548c$x$\u6bb5\u957f\u5ea6\u4e3a$y$\u7684\u6728\u5934\n\n\u6728\u5934\u952f\u5b8c\u540e**\u4e0d\u80fd**\u518d\u62fc\u63a5\u4e14\u5fc5\u987b\u6ee1\u8db3$x\\ge2,y\\ge2$\n\n\u6c42$x\\times y$\u7684\u6700\u5927\u503c\n\n$n\\le5\\times10^5,2\\le a_i\\le5\\times10^5$\n\n---\n\n## \u9898\u89e3\n\u56e0\u4e3a\u8981\u952f$x$\u6bb5\u957f\u5ea6\u4e3a$y$\u7684\u6728\u5934\uff0c$y$\u5f71\u54cd\u66f4\u5927\uff0c\u6240\u4ee5\u8003\u8651\u5bf9\u4e8e\u67d0\u4e00\u4e2a$y$\u600e\u4e48\u8981\u6c42\u51fa\u6700\u5927\u7684$x$\n\n\u5bf9\u4e8e\u4e00\u4e2a$y$\u80fd\u952f\u7684\u7684\u6728\u5934\u603b\u6570$cntY=\\sum_{i=1}^n\\lfloor\\frac{a_i}y\\rfloor$\n\n\u5269\u4e0b\u4e24\u6839\u957f\u5ea6\u4e3a$x$\u7684\u6728\u5934\u53ef\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\u2460\u6765\u81ea\u4e8e\u540c\u4e00\u6839\u6728\u5934\uff1b\u2461\u6765\u81ea\u4e8e\u4e0d\u540c\u6728\u5934\n\n\u2460\uff1a\u6765\u81ea\u4e8e\u540c\u4e00\u6839\u6728\u5934\n\n\u5047\u8bbe\u9650\u5b9a$2x\\in[ky,ky+y)$\uff0c\u90a3\u4e48$2x$\u7684\u6700\u5927\u503c\u5c31\u662f$ky+\\max\\{a_i\\mod y|a_i\\ge ky\\}$\n\n$k$\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u5e76\u8bb0\u5f55$a_i\\mod y$\u7684\u6700\u5927\u503c\u5373\u53ef\n\n\u5269\u4f59\u6728\u5934\u6570\u91cf\u5373\u4e3a$cntY-k$\n\n\u2461\uff1a\u6765\u81ea\u4e8e\u4e0d\u540c\u6728\u5934\n\n\u5047\u8bbe\u9650\u5b9a$x\\in[ky,ky+y)$\uff0c\u8bb0\u5f55$a_i\\mod y$\u7684\u6700\u5927\u503c$m_1$\uff0c\u6b21\u5927\u503c$m_2$\n\n\u5982\u679c$x$\u53d6$ky+m_2$\uff0c\u90a3\u4e48\u5269\u4f59\u6728\u5934\u6570\u91cf\u5c31\u662f$cntY-2k$\n\n\u5982\u679c$x$\u53d6$ky+m_1$\uff0c\u8fd9\u6837\u5c31\u8981\u628a\u4e00\u6bb5\u66f4\u957f\u7684\u6728\u5934\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\u591a\u952f\u5f00\u4e00\u5c0f\u6bb5\uff0c\u90a3\u4e48\u5269\u4f59\u6728\u5934\u6570\u91cf\u5c31\u662f$cntY-2k-1$\n\n\u518d\u5904\u7406\u4e00\u4e9b\u7ec6\u8282\u5373\u53ef\uff08\u8be6\u89c1\u4ee3\u7801\uff09\n\n\u8bb0$A=\\max a_i$,\u65f6\u95f4\u590d\u6742\u5ea6$O(n+\\sum_{y=2}^A\\lfloor\\frac Ay\\rfloor)=O(n+A\\ln A)$\n\n```cpp\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n\tchar c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n\twhile(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nconst int N=5e5+5,M=N<<1,inf=~0u>>1;\ntypedef long long ll;\ntypedef int arr[N];\nstruct Pair{\n\tint Mod,Len;\n\tPair(int x=-1,int y=-1){Mod=x,Len=y;}\n\tbool operator<(Pair b)const{return Mod==b.Mod?Len<b.Len:Mod<b.Mod;}\n};\nstruct  Rest{\n\tPair x,y;\n\tvoid Up(Pair z){y=max(y,min(x,z)),x=max(x,z);}\n};\nint n,Mx;arr pr,cnt,sum;ll ans,cntY;\ninline void Upd(int x,int y){x<2?0:cmax(ans,(ll)x*y);}\nint main(){\n\t#ifndef ONLINE_JUDGE\n\t\tfile(\"s\");\n\t#endif\n\tsd(n);\n\tint x;\n\tfp(i,1,n)sd(x),++cnt[x],cmax(Mx,x);\n\tfp(i,1,Mx){\n\t\tsum[i]=sum[i-1]+cnt[i];\t\n\t\tpr[i]=cnt[i]?i:pr[i-1];\n\t}\n\tfp(y,2,Mx){\n\t\tcntY=0;Rest res;\n\t\tfor(int i=y;i<=Mx;i+=y)\n\t\t\tcntY+=(ll)(sum[min(i+y-1,Mx)]-sum[i-1])*(i/y);\n\t\tfor(int k=Mx/y,m=Mx+1;k>=0;m=k*y,--k){\n\t\t\tint val=pr[m-1],More=(res.x.Mod>=0)+(res.y.Mod>=0),ky=k*y;\n\t\t\tif(val>=ky){\n\t\t\t\tres.Up(Pair(val% y,val));\n\t\t\t\tif(cnt[val]==1)val=pr[val-1];\n\t\t\t\tif(val>=ky)res.Up(Pair(val%y,val));\n\t\t\t}\n\t\t\tif(res.x.Mod>=0)\n\t\t\t\tUpd(min((ll)(ky+res.x.Mod)>>1,cntY-k),y);\n\t\t\tif(res.y.Mod>=0){\n\t\t\t\tUpd(min((ll)(ky+res.y.Mod),cntY-2*k),y);\n\t\t\t\tif(More+(res.x.Len<m)>1)\n\t\t\t\t\tUpd(min((ll)(ky+res.x.Mod),cntY-2*k-1),y);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\nreturn 0;\n}\n```",
        "postTime": 1571234593,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1223G"
    }
]