[
    {
        "content": "\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u8981\u4ece\u4e00\u6761\u7287\u7287\u8bf4\u8d77\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/a7oc8sj1.png)\n\n\u4e8e\u662f\uff0c\u6211\u5c31\u6000\u7740\u80fd\u5bb3\u6b7b\u732b\u7684\u597d\u5947\u5fc3\uff0c\u6253\u5f00\u4e86CF1200E\uff0c\u4ece\u6b64\u5c31\u8d70\u4e0a\u4e86\u4e00\u6761\u4e0d\u5f52\u8def\u2026\u2026\n\n\u9898\u76ee\u8bf4\u4eba\u8bdd\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\n\u7ed9\u4f60$n$\u4e2a\u5b57\u7b26\u4e32\uff0c\u76f8\u540c\u7684\u5730\u65b9\u53ef\u4ee5\u62fc\u63a5\u5728\u4e00\u8d77\uff08\u5982$\\text {be\\color{purple}{ast}}$\u548c$\\text {\\color{purple}{ast}\\color{black}onish}$\u73c2\u4ee5\u62fc\u5728\u4e00\u8d77\u53d8\u6210$\\text {be\\color{purple}{ast}\\color{black}onish}$\uff09\uff0c\u95ee\u4f60\u6700\u540e\u80fd\u62fc\u6210\u4ec0\u4e48\u4e1c\u897f\n\n\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u9898\u76ee\u5c31\u662f\u627e **\u7b2c\u4e00\u4e2a\u4e32\u7684$\\text {\\color{purple}{\u540e\u7f00}}$\u548c\u7b2c\u4e8c\u4e2a\u4e32\u7684$\\text {\\color{purple}{\u524d\u7f00}}$** \uff0c\u627e\u5230\u4ed6\u4eec **$\\text {\\color{purple}{\u6700\u957f}}$\u7684$\\text {\\color{purple}{\u516c\u5171\u90e8\u5206}}$** \u62fc\u5728\u4e00\u8d77\n\n\n\u7b49\u4f1a\uff0c\u6700\u957f\uff1f\u516c\u5171\uff1f\uff1f\uff1f\u524d\u540e\u7f00\uff1f\uff1f\uff1f\uff1f\uff1f\n\n\u8fd9\u4e0d\u5c31\u662f **$\\text {\\color{purple}{KMP}}$\u4e2d$\\text {\\color{purple}{next\u6570\u7ec4}}$\u7684\u5b9a\u4e49\u5417\uff1f\uff01**\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u73c2\u4ee5**\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884cKMP\uff0c\u6c42\u51fa\u5b83\u7684next\u6570\u7ec4**\uff0c\u8fdb\u800c\u89e3\u51b3\u95ee\u9898\n\n\u90a3\u95ee\u9898\u6765\u4e86\uff1a\u7a76\u7adf\u5982\u4f55\u6784\u9020\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5462\uff1f\uff1f\uff1f\n\n\u6784\u9020\u4ec0\u4e48\u6837\u7684\u5b57\u7b26\u4e32\uff1f\u65e0\u975e\u5c31\u662f**\u8ba9\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u548c\u540e\u7f00\u5206\u522b\u5bf9\u5e94\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u8fd9\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00**\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u80fd\u628a\u521a\u624d\u7684\u4f8b\u5b50\u91cc\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u6210$\\text {\\color{purple}{ast}\\color{black}onishbe\\color{purple}{ast}}$\uff0c\u7528\u8fd9\u4e2a\u5b57\u7b26\u4e32\u53bb\u641e\u4e00\u641eKMP\uff0c\u6c42\u51fanext\u6570\u7ec4\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5f97\u5230\u516c\u5171\u90e8\u5206\u4e3a\u957f\u5ea6\u4e3a$3$\u7684$\\text{\\color{purple}ast}$\n\n\u8fd9\u4e48\u5feb\u5c31\u641e\u5b9a\u4e86\u601d\u8def\uff0c\u4e16\u754c\u4e0a\u7adf\u7136\u8fd8\u6709\u8fd9\u4e48\u7b80\u5355\u800cE\u9898\uff1f\uff01\u6211\u4e00\u8fb9\u8fd9\u6837\u60f3\uff0c\u4e00\u8fb9\u6253\u51fa\u4e86\u4ee3\u7801\uff1a\n\n```cpp\n//\u8fd9\u8fb9\u6211\u91c7\u7528\u4e86STL\u4e2d\u7684string\n//string\u591a\u9999\u554a\uff0c\u53ef\u4ee5\u76f4\u63a5\u52a0\u51cf\uff0c\u8fd8\u6709\u597d\u7528\u7684\u6210\u5458\u51fd\u6570\uff0c\u9664\u4e86\u6162\u4ebf\u70b9\u70b9\u5916\u7b80\u76f4\u6beb\u65e0\u7f3a\u70b9\uff01\n//\u90a3\u4e9b\u53eb\u56a3\u7740\u8bf4string\u4e0d\u5982char\u6570\u7ec4\u7684\uff0c\u8fd9\u4e9b\u4e1c\u897f\u4f60\u4eec\u6709\u5417\uff1f\uff01\n//\u6d88\u706dchar\u6570\u7ec4\u66b4\u653f\uff0c\u4e16\u754c\u5c5e\u4e8estring\uff01\uff01\uff01\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint nxt[1000005];//next\u6570\u7ec4\uff08\u4e0d\u8981\u5199next\uff0c\u5728CF\u4e0a\u662f\u5173\u952e\u5b57\uff0c\u4f1aCE\uff09\nvoid kmp(string s){//\u6211\u61d2\u5f97\u8bb2KMP\u4e86\u600e\u4e48\u529e\u554aQwQ\n\tint l=s.size();\n\ts=' '+s;//\u524d\u9762\u52a0\u4e2a\u7a7a\u683c\uff0c\u8ba9s\u4e0b\u6807\u4ece1\u5f00\u59cb\n\tnxt[0]=nxt[1]=0;//\u521d\u59cb\u5316next\u6570\u7ec4\n\tint j=0;//\u4e0b\u6807\n\tfor(int i=2;i<=l;i++){\n\t\twhile(j>0&&s[i]!=s[j+1])j=nxt[j];//\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5c31\u501f\u7528\u5df2\u77e5\u4fe1\u606f\u8df3\u5230next\n\t\tif(s[i]==s[j+1])j++;//\u5339\u914d\u6210\u529f\uff01j++;\n\t\tnxt[i]=j;//\u66f4\u65b0next\u6570\u7ec4\u7684\u4fe1\u606f\n\t} \n}\nint main(){\n    ios::sync_with_stdio(false);//\u8ba9cin\u53d8\u5f97\u5feb\u4e00\u70b9\n\tint n;\n    cin>>n;\n\tstring s,ans;\n\tcin>>ans;//\u5148\u62ff\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f53\u6210\u7b54\u6848\uff0c\u540e\u9762\u9010\u6b65\u5408\u5e76\n\tfor(int i=2;i<=n;i++){\n\t\tcin>>s;//\u8f93\u5165\n\t\tstring ss=s+ans;//\u6784\u9020\u65b0\u7684\u5b57\u7b26\u4e32\n\t\tkmp(ss);//\u8fdb\u884ckmp\n\t\tfor(int j=nxt[ss.size()];j<s.size();j++)//\u66f4\u65b0\u4e0d\u662f\u516c\u5171\u90e8\u5206\uff08\u4e5f\u5c31\u662f\u4e0b\u6807>=next[ss.size()]\u7684\u90e8\u5206\uff09\u5230ans\u91cc\n\t\tans+=s[j];\n\t}\n\tcout<<ans;//\u8f93\u51fa\n} \n```\n\u7ed3\u679c\u5462\uff1f\uff1f\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/f78owapq.png)\n\n~~\u6bd2\u7624\uff01\uff01\uff01\uff01\uff01~~\n\n\u5230\u5e95\u4e3a\u5565T\u4e86\u5462\uff1f\u672c\u84bb\u4ece\u4e0a\u5348\u60f3\u5230\u4e0b\u5348\uff0c\u624d\u53d1\u73b0\u4e86\u7aef\u502a\n\n\u5982\u679c\u6211\u4eec\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u8fd9\u6837\u7684\uff1a\n\n\u7b54\u6848\u4e32\uff1a$\\text{stOOOOOOOOOOOOOOOOOOOOO}\\cdots \\text{\uff08\u6b64\u5904\u7565\u53bb}10^6\\text{\u4e2aO\uff09Orzvector\\purple{wyx}}$\n\n\u65b0\u8f93\u5165\u7684\u6587\u672c\u4e32\uff1a$\\text{\\purple{wyx}tql}$\n\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u62fc\u63a5\u51fa\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u7b80\u76f4\u6bd4\u300a\u6e05\u660e\u4e0a\u6cb3\u56fe\u300b\u8fd8\u957f\u2026\u2026\u8fd9\u8981\u662fKMP\u4e00\u904d\uff0c\u5f97\u5339\u914d\u5230\u7334\u5e74\u9a6c\u6708\u554a\u2026\u2026\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u6ce8\u610f\u5566\uff01\u6211\u4eec\u7684\u524d\u540e\u7f00\u53ea\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u7684\u5b57\u7b26\u4e32$\\text{\\purple {wyx}}$\uff0c\u8ddf\u524d\u9762\u7684$\\text{stOOOOOOOOOOOOO}\\cdots$\u4e00\u70b9\u5173\u7cfb\u90fd\u6ca1\u6709\uff01\u6240\u4ee5\uff0c**\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u7684\u957f\u5ea6\u5b9e\u9645\u4e0a\u53ea\u8981\u5230$\\min(\\text{\u5b57\u7b26\u4e321\u7684\u957f\u5ea6},\\text{\u5b57\u7b26\u4e322\u7684\u957f\u5ea6})$\u5c31\u884c**\u5566\uff01\n\n\u6240\u4ee5\uff0c\u8fd9\u91cc\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u7684\u957f\u5ea6\u6700\u591a\u4e3a$6$\uff0c\u90a3\u6211\u4eec\u76f4\u63a5\u622a\u53d6\u524d\u9762\u7684\u5b57\u7b26\u4e32\u7684\u540e$6$\u4e2a\u5b57\u7b26\uff0c\u62fc\u63a5\u6210$\\text{\\purple{wyx}tqltor\\purple{wyx}}$\uff0c\u662f\u4e0d\u662f\u6e05\u723d\u4e86\u4e0d\u5c11\uff1f\u800c\u4e14\u6548\u679c\u4e00\u70b9\u4e5f\u4e0d\u5dee\u5462\uff01\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u4ee3\u7801\u91cc\u7684\u66f4\u65b0\u5b57\u7b26\u4e32\u90a3\u53e5\u6539\u6210\uff1a\n\n```cpp\n\t\tint l=min(s.size(),ans.size());//\u771f\u6b63\u9700\u8981KMP\u7684\u957f\u5ea6\t\t\n\t\tstring ss=s+ans.substr(ans.size()-l,l);//\u5229\u7528string\u91cc\u7684substr\u51fd\u6570\uff0c\u622a\u53d6\u4ece\u4e0b\u6807ans.size()-l\uff0c\u957f\u5ea6\u4e3al\u7684\u5b50\u4e32\uff0c\u4e5f\u5c31\u662f\u540el\u4e2a\u5b57\u7b26\n```\n\u7ecf\u8fc7\u8fd9\u6837\u4e00\u4f18\u5316\uff0c\u7ec8\u4e8e\u4e0d\u518d\u662fTLE\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/orssyded.png)\n\n\u4e3a\u5565\u5c31WA\u4e86\u561e\uff1f\u5b9e\u5728\u627e\u4e0d\u5230\u6709\u5565\u5751\u70b9\u4e86\uff0c\u4e8e\u662f\u6211\u53ea\u597d\u53bb\u4e86CF\uff0c\u627e\u5230\u4e86\u4f20\u8bf4\u4e2d\u7684**\u6d4b\u8bd5\u6570\u636e**\uff1a\n\n\u8f93\u5165\uff1a\n\n```\n5\n1101 1001 001001 101 010\n```\n\u6807\u51c6\u7b54\u6848\uff1a\n```\n1101001001010\n```\n\u6211\u7684\u8f93\u51fa\uff1a\n```\n110100100101\n```\n\n\u7ecf\u8fc7\u68c0\u67e5\uff0c\u662f\u6700\u540e\u5c06$101$\u548c$010$\u5408\u5e76\u540eKMP\u65f6\u51fa\u73b0\u4e86\u95ee\u9898\n\n\u5408\u5e76\u540e\u7684\u5b57\u7b26\u4e32\uff1a$101010$\n\n\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u957f\u5ea6\uff1a$4$\n\n\uff1f\uff1f\uff1f\n\n\u8fd9\u4e2aKMP\u7684\u5339\u914d\u786e\u5b9e\u662f\u6ca1\u6bdb\u75c5\u7684\uff0c\u4f46\u95ee\u9898\u662f\u4ed6\u4fe9**\u9694\u7740\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u6c42\u51fa\u4e86\u4e00\u4e2anext\u503c**\uff0c\u8de8\u754c\u4e86\u5582\uff01\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u5b66\u4e60\u4e00\u4e0b\u738b\u6bcd\u5a18\u5a18\u5bf9\u4ed8\u725b\u90ce\u7ec7\u5973\u7684\u65b9\u6cd5\uff0c**\u4ece\u5b57\u7b26\u4e32\u4e2d\u95f4\u52a0\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\uff0c\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u9694\u5f00**\uff0c\u53eb\u4f60\u4eec\u8de8\u754c\u7ea6\u4f1a\uff0c\u54fc\uff01\n\n```cpp\nstring ss=s+\"#*@$woxiangqiediaoYnoi,yingyingying~~~\"+ans.substr(ans.size()-l,l);//\u5947\u602a\u7684\u4e1c\u897f\u589e\u52a0\u4e86\uff01\n```\n\uff08\u54a6\uff0c\u8fd9\u91cc\u7684Markdown\u548c$\\LaTeX$\u70b8\u4e86\uff1f\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u51d1\u6d3b\u7740\u770b\u5427\uff09\n\n![](https://www.luogu.com.cn/images/congratulation.png)\n\n\u6700\u540e\uff0c\u795d\u5927\u5bb6\u7684CF\u7a33\u6da8Rating\u54e6\uff01$\\large{\\color{yellow}{QwQ}}$",
        "postTime": 1587044178,
        "uid": 239405,
        "name": "yangrunze",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e8b\u5b9e\u4e0a\u8981\u6211\u4eec\u6c42\u7684\u662f:\n\n\u5f53\u524d\u62fc\u63a5\u597d\u7684\u4e32\u7684**\u540e\u7f00** \u548c \u5f85\u62fc\u63a5\u4e32\u7684**\u524d\u7f00** \u7684**\u6700\u5927\u5339\u914d\u957f\u5ea6**\u3002\n\n\u53ef\u80fd\u6709\u70b9\u7ed5\uff0c\u6211\u4eec\u7ed3\u5408\u6837\u4f8b2\u6765\u7406\u89e3\u4e0b\u3002\n\n\u5f53\u524d\u62fc\u63a5\u597d\u7684\u4e32 $sample$\n\n\u5f85\u62fc\u63a5\u4e32 $please$\n\n\u540e\u7f00\u548c\u524d\u7f00\u7684\u6700\u5927\u5339\u914d $ple$ \n\n\u6700\u5927\u5339\u914d\u957f\u5ea6 $3$\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u628a $ase$ \u52a0\u5165\u5230\u5f53\u524d\u62fc\u63a5\u597d\u7684\u4e32\u3002\n\n\u6b64\u65f6\u5f53\u524d\u62fc\u63a5\u597d\u7684\u4e32 $samplease$\n\n~~\u8fd9\u4e0b\u5e94\u8be5\u7406\u89e3\u4e86\u5427~~\n\n\u90a3\u4e48\u600e\u4e48\u6c42\u6700\u5927\u5339\u914d\u957f\u5ea6\u5462\uff1f\n\n\u5339\u914d\uff1f\u60f3\u5230\u5565\uff1f KMP!\n\n\u548c\u5f85\u62fc\u63a5\u4e32\u7684\u524d\u7f00\u5339\u914d\uff1f\n\n\u90a3\u4e48\u6784\u9020\u4e00\u4e2a\u5f85\u62fc\u63a5\u4e32\u5728**\u524d**,\u5f53\u524d\u62fc\u63a5\u597d\u7684\u4e32\u5728**\u540e**\u7684\u65b0\u4e32\uff0c\u6c42\u51fa\u5f53\u524d\u62fc\u63a5\u597d\u7684\u4e32\u7684**\u6700\u540e\u4e00\u4e2a\u5b57\u7b26**\u7684$kmp[i]$\u503c\u4e0d\u5c31\u884c\u4e86\uff1f(\u5565\u662f[$kmp[i]$](https://www.luogu.org/problem/P3375)?)\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6700\u5927\u5339\u914d\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u5f85\u62fc\u63a5\u4e32\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u6bcf\u6b21\u53ea\u8981\u622a\u53d6\u5f53\u524d\u62fc\u63a5\u597d\u7684\u4e32\u7684\u4e00\u90e8\u5206\u4e32\u5c31\u884c\u4e86\n\n\u7406\u89e3\u7684\u8bdd\u4ee3\u7801\u5b9e\u73b0\u5e76\u4e0d\u56f0\u96be:\n\n```cpp\n/*\n\tAuthor:Frozencode\n*/\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll,ll> pii;\nconst ll maxn = 1000010;\nconst ll INF = 2147483647;\nll n,len,anslen,top,minn,kmp[maxn];\nchar c[maxn],ans[maxn];\nint main()\n{ \n\tcin>>n;\n\tfor(int i = 1;i <= n;i++){\n\t\tscanf(\"%s\",c + 1);\n\t\tlen = strlen(c + 1);\n\t\tminn = min(anslen,len);//\u622a\u53d6\u957f\u5ea6\u3002\n\t\ttop = len;\n\t\tc[++top] = '#';//\u52a0\u4e2a\u5947\u602a\u5b57\u7b26\u9632\u6b62\u6700\u5927\u5339\u914d\u957f\u5ea6\u8d85\u8fc7\u5f85\u62fc\u63a5\u4e32\u7684\u957f\u5ea6\u3002\n\t\tkmp[0] = 0;\n\t\tkmp[1] = 0;\n\t\tfor(int j = 1;j <= minn;j++)c[++top] = ans[anslen - (minn - j)];//\u62fc\u63a5\u3002\n\t\tfor(int j = 1;j < top;j++){\n\t\t\tll k = kmp[j];\n\t\t\twhile(k && c[k + 1] != c[j + 1])k = kmp[k];\n\t\t\tif(c[k + 1] == c[j + 1])k++;\n\t\t\tkmp[j + 1] = k;\n\t\t}//\u6c42kmp\u6570\u7ec4\u7684\u503c,\u8fd9\u91cc\u4e0d\u7406\u89e3\u7684\u8bdd\u53ef\u4ee5\u70b9\u4e0a\u9762\u7684\u94fe\u63a5\u8fdb\u53bb\u770b\u770b\u3002\n\t\tfor(int j = kmp[top] + 1;j <= len;j++)ans[++anslen] = c[j];//\u66f4\u65b0\u5f53\u524d\u62fc\u63a5\u597d\u7684\u4e32\u3002\n\t}\n\tfor(int i = 1;i <= anslen;i++)cout<<ans[i];\n\treturn 0;\n}\n```\n",
        "postTime": 1565660314,
        "uid": 64166,
        "name": "Frozencode",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "# \u54c8\u5e0c\n\n\u76f4\u63a5\u54c8\u5e0c\n\n\u6bcf\u6b21\u5224\u65ad\u5f53\u524d\u4e32\u7684\u6bcf\u4e00\u4e2a\u524d\u7f00\u662f\u5426\u662f\u7b54\u6848\u7684\u540e\u7f00\uff0c\u53d6\u6700\u957f\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u524d\u7f00\n\n\u5982\u4f55\u5224\u65ad\uff1f\n\n\u6309\u7167\u54c8\u5e0c\u7684\u65b9\u6cd5\uff1a\n\n```cpp\nhans1[ansl] = ((ll)hans1[ansl-1]*b1 + s[i])%mod1;//b1\u662f\u968f\u673a\u51fa\u6765\u7684\u8fdb\u5236\n```\n\n\u53ea\u8981\u8fd9\u6837\uff1a\n\n```cpp\n(h1 + (ll)hans1[ansl-i]*pb1[i])%mod1\n```\n\n\u5373\uff1a\u7528\u5f53\u524d\u201c\u4f4d\u6570\u201d\u4e3a $i$ \u7684\u54c8\u5e0c\u503c(```h1```)\u53bb \u201c\u66ff\u6362\u201d \u5f53\u524d\u7b54\u6848\u7684\u540e$i$\u4f4d\n\n\u5982\u679c\u8fd9\u4e2a\u503c\u4e0e\u5f53\u524d\u7b54\u6848\u76f8\u7b49\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5f53\u524d\u7b54\u6848\u7684\u540e\u7f00\n\n\u4f7f\u7528\u4e86\u53cc\u54c8\u5e0c\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<ctime>\ntypedef long long ll;\nconst int MAXL = 1e6 + 5;\nconst int mod1 = 19260817;\nconst int mod2 = 19491001;\n\nint b1,pb1[MAXL],b2,pb2[MAXL];\nint hans1[MAXL],hans2[MAXL];\n\nchar ans[MAXL],s[MAXL];\n\nint main(void)\n{\n\tsrand(time(0));\n\t\n\tb1 = rand()%321 + 233;\n\tpb1[0] = 1;\n\tfor(int i=1; i<MAXL; ++i) pb1[i] = (ll)pb1[i-1]*b1 %mod1;\n\t\n\tb2 = rand()%233 + 321;\n\tpb2[0] = 1;\n\tfor(int i=1; i<MAXL; ++i) pb2[i] = (ll)pb2[i-1]*b2 % mod2;\n\t\n\tint n;\n\tscanf(\"%d\",&n);\n\t\n\tint ansl=0;\n\tfor(int j=1; j<=n; ++j)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tint sl = strlen(s+1);\n\t\t\n\t\tint h1=0, h2=0, len=0;\n\t\tfor(int i=1; i<=sl && i<=ansl; ++i)\n\t\t{\n\t\t\th1 = ((ll)h1*b1%mod1 + s[i]) %mod1;\n\t\t\th2 = ((ll)h2*b2%mod2 + s[i]) %mod2;\n\t\t\t\n\t\t\tif(hans1[ansl] == (h1 + (ll)hans1[ansl-i]*pb1[i])%mod1 && hans2[ansl] == (h2 + (ll)hans2[ansl-i]*pb2[i])%mod2)\n\t\t\t\tlen=i;\n\t\t}\n\t\t\n\t\tfor(int i=len+1; i<=sl; ++i)\n\t\t{\n\t\t\tans[++ansl] = s[i];\n\t\t\thans1[ansl] = ((ll)hans1[ansl-1]*b1 + s[i])%mod1;\n\t\t\thans2[ansl] = ((ll)hans2[ansl-1]*b2 + s[i])%mod2;\n\t\t}\n\t}\n\tprintf(\"%s\",ans+1);\n\treturn 0;\n}\n```\n\n# z\u7b97\u6cd5\n\n\u53d6\u5f53\u524d\u4e32$a$\u7684\u957f\u5ea6\u4e0e\u5f53\u524d\u7b54\u6848$ans$\u957f\u5ea6\u7684min\n\n\u8bbe$size = \\min(|a|,|ans|)$\n\n\u91cd\u5408\u5728\u4e00\u8d77\u7684\u957f\u5ea6\u6700\u957f\u662f\u5c31$size$\n\n\u4e8e\u662f\u628a\u5f53\u524d\u4e32\u7684\u524d$size$\u4f4d\uff0c\u4e0e\u7b54\u6848\u7684\u540e$size$\u4f4d\u62fc\u5728\u4e00\u8d77\uff08\u4e2d\u95f4\u52a0\u4e00\u4e2a\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u5b57\u7b26\"$\"\uff09\n\n$S = a[1,2,\\cdots,size] + \\$ + ans[ansl-size+1,\\cdots,ansl]$\n\n\u6c42\u51faz\u6570\u7ec4\n\n\u5982\u679c\u4e00\u4e2a\u5143\u7d20$S_i$(\u5c5e\u4e8e$S$\u7684\u540e$size$\u4f4d\uff09\uff0c\u5b83\u7684z\u503c\u7b49\u4e8e\u5b83\u5230\u7ed3\u5c3e\u7684\u8ddd\u79bb\n\n\u5373\uff1a\u5b83\u662f$ans$\u7684\u67d0\u4e00\u4e2a\u540e\u7f00\uff0c\u4e14\u5b83\u7b49\u4e8e$a$\u7684\u524d\u7f00\n\n```cpp\nif(z[sz-i] == i)\n```\n\n\u90a3\u4e48\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u91cd\u5408\u90e8\u5206\n\n**\u8fd9\u662f\u91cc\u672c\u7b97\u6cd5\u7684\u6838\u5fc3**\n\n```cpp\n#include<cstdio>\n#include<cstring>\nconst int MAXL = 1e6 + 5;\n\nconst int min(int a,int b){ return a<b? a: b;}\n\nchar a[MAXL],s[MAXL*2],ans[MAXL];\nint z[MAXL*2];\n\nint main(void)\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\t\n\tint ansl=0;\n\tfor(int j=1; j<=n; ++j)\n\t{\n\t\tscanf(\"%s\",a);\n\t\tint al = strlen(a), bl = min(al,ansl);\n\t\t\n\t\tint sz = bl*2 + 1;\n\t\tfor(int i=0; i<bl; ++i)\n\t\t\ts[i]=a[i], s[i+bl+1] = ans[ansl-bl+i];\n\t\ts[bl] = '$';\n\t\ts[sz] = 0;\n\t\t\n\t\tint l=0,r=0;\n\t\tfor(int i=1; i<sz; ++i)\n\t\t{\n\t\t\tz[i]=0;\n\t\t\tif(i<r) z[i] = min(r-i,z[i-l]);\n\t\t\twhile(s[z[i]] == s[i+z[i]]) ++z[i];\n\t\t\tif(i+z[i]>r) l=i, r=i+z[i];\n\t\t}\n\t\t\n\t\tint len = 0;\n\t\tfor(int i=bl; i>=1; --i)\n\t\t\tif(z[sz-i] == i)\n\t\t\t{\n\t\t\t\tlen=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tfor(int i=len; i<al; ++i) ans[ansl++] = a[i];\n\t}\n\tprintf(\"%s\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1565834133,
        "uid": 73687,
        "name": "He_Ren",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "### \u5927!\u7ec6\u8282\u9898\n\n#### \u7b97\u6cd5\n\nKMP\n\n#### \u601d\u8def\n\n\u5176\u5b9e\u8fd8\u86ee\u597d\u60f3\u7684\uff0c\u9898\u76ee\u8981\u6c42\u6700\u957f\u76f8\u540c\u524d\u540e\u7f00\uff0c\u4e8e\u662f\u60f3\u5230$KMP$\uff0c\u6bcf\u6b21\u5c06\u65b0\u5355\u8bcd\u653e\u5230\u539f\u53e5\u524d\u9762\u518d\u8dd1$KMP$\uff0c\u540c\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62$nxt$\u627e\u5230\u65b0\u5355\u8bcd\u540e\u9762\uff0c\u8981\u5728\u65b0\u5355\u8bcd\u4e0e\u539f\u53e5\u4e4b\u95f4\u52a0\u4e00\u4e9b\u5206\u9694\u7b26\u53f7\uff08\u5982\u201c\uffe5%\u2026\u2026@%\u201d\uff09\u3002\n\n**\u7136\u800c**\uff0c~~\u5b83\u6bd5\u7adf\u662f\u4e00\u9053E\u9898~~\uff0c\u8fd9\u6837\u4f1a\u88ab\u7b2c\u4e09\u4e2a\u70b9\u5361\u6389\uff08\u597d\u50cf\u603b\u5171\u6709**\u4e00\u767e\u4e09\u5341**\u591a\u4e2a\u70b9\u5462~\uff09\uff0c\u56e0\u4e3a\u539f\u53e5\u53ef\u80fd\u957f\u8fbe$1e6$\uff0c\u8fd9\u6837\u66b4\u529b\u5408\u5e76\u663e\u7136\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e00\u6b21\u7684$nxt_n$\u6700\u591a\u4e0d\u8d85\u8fc7\u65b0\u5355\u8bcd\u7684\u957f\u5ea6\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u628a$min({\u539f\u53e5\u957f\u5ea6\uff0c\u65b0\u5355\u8bcd\u957f\u5ea6)}$\u7684\u90e8\u5206\u5408\u5e76\u3002\n\n#### \u6ce8\u610f\uff01\uff01\uff01\uff01\n\n+ \u4e0d\u8981\u6bcf\u6b21\u7528$memset$\u6e05\u7a7a$nxt$\uff0c\u56e0\u4e3a$memset$\u5e76\u4e0d\u662f$O(1)$\u7684\n+ \u4e0d\u8981\u5c06$strlen$\u653e\u5728\u5185\u90e8\u7684$for$\u91cc\u9762\uff08\u4e0d\u7136\u4f1a\u540e\u6094\u7684\uff09\n+ $string$\u5927\u6cd5\u597d\uff0c**but**\u4e3a\u4e86\u5b81\u7684\u751f\u547d\u5b89\u5168\uff0c\u8fd8\u662f\u7528$*char$\u5427\n+ \u4e00\u5b9a\u8981**\u60f3\u6e05\u695a**\u518d\u5f00\u59cb\u5199\uff0c~~\u4e0d\u7136\u4f60\u4f1a\u50cf\u6211\u4e00\u6837\u8c03\u4e00\u4e0b\u5348~~\n\n#### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int maxn = 1e6 + 10;\nint n,nxt[maxn],top;\nchar ans[maxn],s[maxn];\n\nint main(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++ i){\n        scanf(\"%s\", s + 1);    \n        if(i == 1){\n            int len = strlen(s + 1);\n            for(int j = 1; j <= len; ++ j) ans[++top] = s[j];\n        }\n        else{\n            int lena = top, lenb = strlen(s + 1);\n            int nlen = min(lena, lenb), cnt = lenb;\n            s[++cnt] = '@';\n            for(int j = 1; j <= nlen; ++ j) s[++cnt] = ans[lena - nlen + j];\n            //cout << cnt << endl;\n            nxt[0] = nxt[1] = 0; int j = 0;\n            for(int k = 2; k <= cnt; ++ k){\n                while(j && s[k] != s[j + 1]) j = nxt[j];\n                if(s[k] == s[j + 1]) j += 1;\n                nxt[k] = j;\n            }\n            for(int j = nxt[cnt] + 1; j <= lenb; ++ j) ans[++top] = s[j];\n        }\n    }\n    for(int i = 1; i <= top; ++ i) cout << ans[i];\n    cout << endl;\n    return 0;\n}\n```\n\n\n\n\u5e0c\u671b\u5bf9\u5b81\u6709\u6240\u5e2e\u52a9\n\n",
        "postTime": 1603710315,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "\u521a\u521a\u5b66\u4e86 kmp\uff0c\u60f3\u627e\u70b9\u7b80\u5355\u7684\u6a21\u7248\u9898\u5237\uff0c\u4e8e\u662f\u6211\u627e\u5230\u4e86\u8fd9\u9898\u3002\n\n------------\n\n\u9996\u5148\uff0c\u8fd9\u9898\u8981\u5148\u6ce8\u610f\u9898\u9762\u3002\u5982\u679c\u4f60\u628a\u5408\u5e76\u5355\u8bcd\u7684\u8fc7\u7a0b\u7406\u89e3\u6210\u201c\u5355\u8bcd\u4e0e\u5355\u8bcd\u5408\u5e76\u201d\uff0c\u4f60\u5c31\u4f1a\u88ab test 4 \u5361\u6389\u3002~~\u3010\u8c03\u4e86\u5f88\u4e45\u624d\u53d1\u73b0\u3011~~\n\n\u6b63\u786e\u7684\u7406\u89e3\u65b9\u5f0f\u662f\uff1a\u201c**\u5355\u8bcd\u4e0e\u5408\u5e76\u5b8c\u6210\u7684\u53e5\u5b50\u5408\u5e76**\u201d\n\n\u60f3\u6e05\u695a\u9898\u9762\u95ee\u9898\u540e\uff0c\u6211\u4eec\u53ea\u8981\u628a\u6bcf\u4e2a\u5355\u8bcd\u4e0e\u5408\u5e76\u5b8c\u6210\u7684\u7b54\u6848\u53e5\u5b50\u8fdb\u884c kmp \u5339\u914d\uff0c\u5339\u914d\u540e\u5220\u6389\u76f8\u5e94\u957f\u5ea6\u7684\u5355\u8bcd\u524d\u7f00\u5373\u53ef\u3002\n\n\u4e8e\u662f\u6211\u6572\u51fa\u4e86\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<string>\n#define rgt register int\nusing namespace std;\n\nconst int mxn = 1e6+6;\n\nint n,f[mxn],nxt[mxn];\nstring words[mxn],ans=\"\";\n\ninline int kmp(string s1,string s2){\n\tmemset(nxt,0,sizeof(nxt));  //\u91cd\u7f6enext\u6570\u7ec4\n\tint ls1=s1.size(),ls2=s2.size();\n\tfor(rgt j,i=1;i<ls2;i++){\n\t\tj=nxt[i];\n\t\twhile(j&&s2[i]!=s2[j])\n\t\t\tj=nxt[j];\n\t\tif(s2[i]==s2[j])\n\t\t\tnxt[i+1]=j+1;\n\t}   //\u6c42next\u6570\u7ec4\n    \n\tmemset(f,0,sizeof(f));  //\u91cd\u7f6ef\u6570\u7ec4\uff0cf[i]\u8bb0\u5f55s1\u7684\u7b2ci\u4e2a\u4f4d\u7f6e\u5339\u914d\u5230s2\u7684\u7b2cj\u4e2a\u5b57\u7b26\n\tfor(rgt j=0,i=0;i<ls1;i++){\n\t\twhile(j&&s1[i]!=s2[j])\n\t\t\tj=nxt[j];\n\t\tif(s1[i]==s2[j])\n\t\t\tj++;\n\t\tf[i]=j;\n\t}\n\treturn f[ls1-1];  //\u663e\u7136\uff0cf[s1\u7684\u957f\u5ea6-1]\u5c31\u662f\u91cd\u590d\u7684\u524d\u7f00\u957f\u5ea6\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tfor(rgt i=1;i<=n;i++)\n\t\tcin>>words[i];\n        \n\tans+=words[1];\n\tfor(rgt l,i=2;i<=n;i++){\n\t\tl=kmp(ans,words[i]);\n\t\twords[i].erase(0,l);   //\u5220\u6389\u5bf9\u5e94\u524d\u7f00\n\t\tans+=words[i];   //\u5408\u5e76\u7b54\u6848\u53e5\u5b50\n\t}\n    \n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\u7136\u540e\uff0c\u5b83\u5728test 3\u8d85\u65f6\u4e86.....\n\n----------\n\n\u5f00\u59cb\u8003\u8651\u5982\u4f55\u8fdb\u4e00\u6b65\u4f18\u5316\u4ee3\u7801\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u9762\u7684 f \u6570\u7ec4\u662f\u4e0d\u9700\u8981\u7684\uff0c\u6211\u4eec\u6700\u540e\u8fd4\u56de j \u5373\u53ef\u3002\u56e0\u4e3a j \u5728\u6700\u540e\u8bb0\u5f55\u7684\u5c31\u662f\u5339\u914d\u6210\u529f\u7684\u5355\u8bcd\u524d\u7f00\u957f\u5ea6\u3002\n\n\u5176\u6b21\uff0c\u6211\u4eec\u60f3\u5230\u4e00\u4e2a\u95ee\u9898\uff1a**\u6bcf\u6b21\u5339\u914d\u90fd\u8981\u4ece ans \u5b57\u7b26\u4e32\u7684\u5f00\u5934\u5f00\u59cb\u5339\u914d\u5417\uff1f**\n\n\u6211\u4eec\u53ea\u60f3\u8981\u77e5\u9053\u5339\u914d\u6210\u529f\u7684\u540e\u7f00\u957f\u5ea6\u3002\u800c\u5339\u914d\u6210\u529f\u7684\u540e\u7f00\u957f\u5ea6\u6700\u957f\u4e5f\u53ea\u80fd\u662f $\\min(ans.size(),words_i.size())$\u3002\u4e8e\u662f\u8fd9\u91cc\u53ef\u4ee5\u51cf\u5c11\u4e00\u6b21\u5339\u914d\u9700\u8981\u82b1\u8d39\u7684\u65f6\u95f4\u3002\n\n\u8fdb\u884c\u4e86\u4e0a\u8ff0\u4f18\u5316\uff0c\u8d85\u65f6\u7684\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u53e6\u5916\uff0c\u8fd9\u9898\u4e5f\u53ef\u4ee5\u7528 hash \u901a\u8fc7\u3002\u6709\u80fd\u529b\u7684\u4eba\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u4e00\u4e0b\u3002\n\n\u4e0b\u9762\u662f\u672c\u4eba\u7528 kmp \u901a\u8fc7\u6b64\u9898\u7684\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<string>\n#define rgt register int\nusing namespace std;\n\nconst int mxn = 1e6+6;\n\nint n,nxt[mxn],lans,lw;\nstring words[mxn],ans=\"\";\n\nint main(){\n  \n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tfor(rgt i=1;i<=n;i++)\n\t\tcin>>words[i];\n\tans+=words[1];\n\tlans=ans.size();\n  \n\tfor(rgt j,i=2;i<=n;i++){\n       \n               //\u4e3a\u4e86\u8282\u7701\u51fd\u6570\u8c03\u7528\u9700\u8981\u7684\u65f6\u95f4\uff0c\u628akmp\u5199\u5230\u4e86\u4e3b\u51fd\u6570\u91cc\u9762\n\t\tlw=words[i].size();\n\t\tmemset(nxt,0,sizeof(int)*lw);  //\u7528\u66f4\u5feb\u7684\u65b9\u6cd5\u521d\u59cb\u5316next\u6570\u7ec4\n\t\tfor(rgt ki=1;ki<lw;ki++){\n\t\t\tj=nxt[ki];\n\t\t\twhile(j&&words[i][ki]!=words[i][j])\n\t\t\t\tj=nxt[j];\n\t\t\tif(words[i][ki]==words[i][j])\n\t\t\t\tnxt[ki+1]=j+1;\n\t\t}//\u6c42next\u6570\u7ec4\n        \n\t\tint tp=lans<lw?lans:lw;  //\u53d6\u9700\u8981\u5339\u914d\u7684\u6700\u5c0f\u957f\u5ea6\n\t\tj=0;\n\t\tfor(rgt ki=lans-tp;ki<lans;ki++){\n\t\t\twhile(j&&ans[ki]!=words[i][j])\n\t\t\t\tj=nxt[j];\n\t\t\tif(ans[ki]==words[i][j])\n\t\t\t\tj++;\n\t\t}  //\u8fdb\u884c\u5339\u914d\n        \n\t\twords[i].erase(0,j);  //\u5220\u9664\u524d\u7f00\n\t\tans+=words[i];  //\u5408\u5e76\u7b54\u6848\u4e32\uff0c\u66f4\u65b0\u7b54\u6848\u4e32\u957f\u5ea6\n\t\tlans+=words[i].size();\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1596775402,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "\u66b4\u529b\u6570\u636e\u7ed3\u6784\u505a\u6cd5\u3002\n\n\u9700\u8981\u610f\u8bc6\u5230\u533a\u95f4\u591a\u9879\u5f0f\u5b9a\u503c\u6c42\u503c\u662f\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u3002\n\n\u5f0f\u5b50\uff1a$a_l+a_{l+1}x^1+a_{l+2}x^2+\\cdots+a_{r}x^{r-l}=\\dfrac{pre(r)-pre(l-1)}{x^{l-1}}$\n\n\u5176\u4e2d $pre(t)=a_1+a_2x^1+a_3x^2+\\cdots+a_tx^{t-1}$\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5229\u7528\u54c8\u5e0c\u4f18\u5316\u66b4\u529b\u5224\u65ad\u4e24\u5b50\u4e32\u662f\u5426\u76f8\u7b49\u3002\n\n\u590d\u6742\u5ea6 $O(m\\log m)$\uff0c$m=10^6$\u3002\n\n\u5176\u5b83\u601d\u8def\u90fd\u8ddf\u66b4\u529b\u4e00\u6837\uff0c\u7531\u4e8e\u53ea\u9700\u8981\u5355\u70b9\u63d2\u5165\uff0c\u6811\u72b6\u6570\u7ec4\u751a\u81f3\u76f4\u63a5\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u7ef4\u62a4\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\n#define N 1000010\n#define mod 998244353\n#define int long long\n\nint n;\nconst int base = 121;\nint basepow[N];\nint basepowinv[N];\nint tr[N];\nint ksm(int a,int b)\n{\n\tint res = 1;\n\twhile(b)\n\t{\n\t\tif(b & 1)\n\t\t\tres = res * a % mod;\n\t\ta = a * a % mod;\n\t\tb >>= 1;\n\t}\n\treturn res;\n}\n\nvoid add(int x,int z)\n{\n\twhile(x <= N - 10)\n\t{\n\t\ttr[x] = (tr[x] + z) % mod;\n\t\tx += (x & (-x));\n\t}\n}\n\nint query(int x)\n{\n\tint res = 0;\n\twhile(x)\n\t{\n\t\tres = (res + tr[x]) % mod;\n\t\tx -= (x & (-x));\n\t}\n\treturn res;\n}\n\nvoid init()\n{\n\tbasepow[0] = 1;\n\tfor(int i = 1;i <= N - 10;i++)\n\t\tbasepow[i] = basepow[i - 1] * base % mod;\n\tbasepowinv[0] = 1;\n\tbasepowinv[1] = ksm(base,mod - 2);\n\tfor(int i = 2;i <= N - 10;i++)\n\t\tbasepowinv[i] = basepowinv[i - 1] * basepowinv[1] % mod;\n}\n\nint query_hash(int l,int r)\n{\n\tint t = query(r) - query(l - 1);\n\tt = (t + mod) % mod;\n\tt = t * basepowinv[l - 1] % mod;\n\treturn t;\n}\n\nchar str[N];\nchar ans[N];\nint top;\n\nint getid(char x)\n{\n\tif('0' <= x && x <= '9')\n\t\treturn x - '0' + 1;\n\tif('A' <= x && x <= 'Z')\n\t\treturn 11 + x - 'A';\n\treturn 10 + 26 + 1 + x - 'a';\n}\n\nsigned main()\n{\n\tinit();\n\tscanf(\"%lld\",&n);\n\tint idx = 0;\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tscanf(\"%s\",str + 1);\n\t\tint m = strlen(str + 1);\n\t\tint s = 1;\n\t\tint now = 0;\n\t\tfor(int j = 1;j <= m;j++)\n\t\t{\n\t\t\tnow += getid(str[j]) * basepow[j - 1] % mod;\n\t\t\tnow %= mod;\n\t\t\tif(idx - j + 1 >= 1 && now == query_hash(idx - j + 1,idx))\n\t\t\t{\n\t\t\t\ts = j + 1;\n\t\t\t}\n\t\t}\n\t\tfor(int j = s;j <= m;j++)\n\t\t{\n\t\t\tidx++;\n\t\t\tadd(idx,getid(str[j]) * basepow[idx - 1]);\n\t\t\tans[++top] = str[j];\n\t\t}\n\t}\n\tfor(int i = 1;i <= top;i++)\n\t\tputchar(ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1671026994,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "CF1200E"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u5c06\u5b57\u7b26\u4e32\u63a5\u8d77\u6765\uff0c\u76f8\u90bb\u7684\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u540e\u7f00\u8981\u53ea\u7559\u4e0b\u4e00\u4e2a\u3002\n\n\u6bd4\u5982 `abcabc` \u548c `bcd` \u63a5\u8d77\u6765\u5c31\u662f `abcabcd`\u3002\n\n## \u601d\u8def\uff1a\n\n\u6211\u4eec\u8003\u8651\u54c8\u5e0c\u3002\n\n\u7528\u4e00\u4e2a $ans$ \u6570\u7ec4\u6765\u5b58\u50a8\u7b54\u6848\u5b57\u7b26\u4e32\u3002\n\n\u6709\u4e24\u4e2a\u54c8\u5e0c\u6570\u7ec4\uff0c\u4e00\u4e2a\u662f\u5b50\u4e32\u7684\uff0c\u4e00\u4e2a\u662f\u7b54\u6848\u4e32\u7684\u3002\n\n\u6bcf\u8bfb\u5165\u4e00\u4e2a\u5b50\u4e32\uff0c\u5c06\u8fd9\u4e2a\u5b57\u4e32\u7684\u54c8\u5e0c\u503c\u8ba1\u7b97\uff0c\u7136\u540e\u4e0e\u7b54\u6848\u6570\u7ec4\u5339\u914d\uff0c\u5339\u914d\u5230\u6700\u4f18\u7684\u5730\u65b9\u540e\u8df3\u51fa\u6765\u66f4\u65b0 $ans$ \u6570\u7ec4\u548c\u4ed6\u5bf9\u4e8e\u7684\u54c8\u5e0c\u6570\u7ec4\u3002\n\n## Code:\n\n```cpp\n/*\n\tWork by: TLE_Automation\n*/\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define LL long long\n#define int long long\nusing namespace std;\n\nconst int N = 1e6 + 10;\nconst int MAXN = 2e5 + 10;\n\ninline char readchar() {\n\tstatic char buf[100000], *p1 = buf, *p2 = buf;\n\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;\n}\n\ninline int read() {\n#define readchar getchar\n\tint res = 0, f = 0;char ch = readchar();\n\tfor(; !isdigit(ch); ch = readchar()) if(ch == '-') f = 1;\n\tfor(; isdigit(ch); ch = readchar()) res = (res << 1) + (res << 3) + (ch ^ '0');\n\treturn f ? -res : res;\n}\n\ninline void print(int x) {\n\tif (x < 0 ) putchar('-'), x = -x;\n\tif (x > 9 ) print(x / 10);\n\tputchar(x % 10 + '0');\n}\nconst int base = 131;\ntypedef unsigned long long ull;\n\nint has[N], pw[N], Hans[N];\nchar s[N], ans[N];\nint sc = 0;\n\n\nsigned main() {\n\tint Q = read();\n\tpw[0] = 1;\n\tfor(int i = 1; i <= N; i++) pw[i] = pw[i - 1] * base;\n\tfor(int i = 1; i <= Q; i++) {\n\t\tcin >> (s + 1);\n\t\tint Len = strlen(s + 1);\n\t\tint wz = 0;\n\t\tfor(int j = 1; j <= Len; j++) has[j] = (has[j - 1] * base + s[j]);\n\t\tfor(int j = min(Len, sc); j >= 0; j--) {\n\t\t\tif(has[j] == Hans[sc] - Hans[sc - j] * pw[j]) {\n\t\t\t\twz = j; break;\n\t\t\t}\n\t\t}\n\t\tfor(int j = wz + 1; j <= Len; j++) {\n\t\t\tans[++sc] = s[j];\n\t\t\tHans[sc] = Hans[sc - 1] * base + (ans[sc]);\n\t\t}\n\t}\n\tfor(int i = 1; i <= sc; i++) cout << ans[i];\n\treturn 0;\n}",
        "postTime": 1654827483,
        "uid": 396974,
        "name": "Buried_Dream",
        "ccfLevel": 4,
        "title": "CF1200E Compress Words \u9898\u89e3"
    },
    {
        "content": "# 1.\u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9an\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u5408\u5e76\uff0c\u5e76\u5728\u5408\u5e76\u65f6\u53bb\u91cd\uff08\u53bb\u91cd\u7684\u5b9a\u4e49\uff1a\u627e\u6700\u5927\u7684i(i\u22650),\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u4e3ai\u7684\u540e\u7f00\u548c\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u957f\u5ea6\u4e3ai\u7684\u524d\u7f00\u76f8\u7b49,\u7136\u540e\u628a\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u7b2ci\u4f4d\u4ee5\u540e\u7684\u90e8\u5206\u63a5\u5230\u7b2c\u4e00\u4e2a\u5355\u8bcd\u540e\u9762\uff09\u3002\n\n# 2.\u9898\u89e3\n\u8fd9\u662f\u4e00\u9053\u88f8\u7684KMP\u7b97\u6cd5\u7684\u9898\u3002~~\u524d\u7f00\u3001\u540e\u7f00\u3001\u6700\u5927\u76f8\u540c\u7684\u4f4d\u7f6e\u5df2\u7ecf\u66b4\u9732\u4e86\u672c\u9898\u7b97\u6cd5~~\n\n\u65e2\u7136\u5df2\u7ecf\u786e\u5b9a\u4e86\u7b97\u6cd5\uff0c\u90a3\u6211\u4eec\u5c31\u6765\u60f3\u4e00\u60f3\u4ee5\u8c01\u4e3a\u6a21\u5f0f\u4e32\uff1f\u7531\u9898\u610f\u77e5\uff0c\u5355\u8bcd\u7684\u603b\u957f\u5ea6\u4e0d\u8d85\u8fc71e6\uff0c~~\uff08\u4f17\u6240\u5468\u77e5\uff0cOI\u4e2d\u7684\u4e0d\u8d85\u8fc7\u5c31\u662f\u6700\u5927\u6570\u636e\u4e3a1e6\uff09~~\u5982\u679c\u6211\u4eec\u4ee5\u6700\u7ec8\u7684\u7b54\u6848\u4e32\u4e3a\u6a21\u5f0f\u4e32\uff0c\u90a3\u80af\u5b9a\u4f1a\u88abT\u98de\u7684\u3002\n\n\u8fd9\u65f6\u5019\uff0c\u5c31\u9700\u8981\u6211\u4eec\u8111\u52a8\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u6700\u957f\u5339\u914d\u957f\u5ea6\uff08\u9898\u610f\u7b80\u8ff0\u4e2d\u7684i\uff09<=min\uff08\u7b54\u6848\u4e32\u957f\u5ea6\uff0c\u65b0\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u3002\u90a3\u6211\u4eec\u53ea\u9700\u8981\u5c06\u7b54\u6848\u4e32\u4e2d\u540emin\uff08\u7b54\u6848\u4e32\u957f\u5ea6\uff0c\u65b0\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u548c\u65b0\u5b57\u7b26\u4e32\u4e2d\u524dmin\uff08\u7b54\u6848\u4e32\u957f\u5ea6\uff0c\u65b0\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u653e\u5728\u4e00\u8d77\u7ec4\u6210\u6a21\u5f0f\u4e32\uff0c\u5728\u5bf9\u8fd9\u4e2a\u6a21\u5f0f\u4e32\u8fdb\u884c\u4e00\u904dKMP\u5373\u53ef\u3002\n\n\u6bcf\u5f53\u6211\u4eec\u5f97\u610f\u4e4b\u65f6\uff0c\u73b0\u5b9e\u603b\u4f1a\u7ed9\u6211\u4eec\u5f53\u5934\u4e00\u68d2\u3002\u56e0\u4e3a\u4ee5\u4e0a\u7b97\u6cd5\u8fc7\u4e0d\u4e86\u4ee5\u4e0b\u6837\u4f8b\n\n\t\u7b54\u6848\u4e32:ababa\n    \u65b0\u5b57\u7b26\u4e32:baba\n\t\u5408\u5e76\u540e\u7684\u6a21\u5f0f\u4e32:ababababa\n\t\u524d\u7f00:a,ab,aba,abab,ababa,ababab,abababa,abababab,ababababa\n\t\u540e\u7f00:a,ba,aba,baba,ababa,bababa,abababa,babababa,ababababa\n\u5f88\u660e\u663e\uff0c\u8fd9\u65f6i=7\uff0c\u7b49\u7b49\uff0c\u8fd9\u4e0d\u662f\u8de8\u8fc7\u4e86\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e86\u5417\uff1f\u4e0d\u7b26\u5408\u6700\u957f\u5339\u914d\u957f\u5ea6\uff08\u9898\u610f\u7b80\u8ff0\u4e2d\u7684i\uff09<=min\uff08\u7b54\u6848\u4e32\u957f\u5ea6\uff0c\u65b0\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u3002\u90a3\u6211\u4eec\u662f\u4e0d\u662f\u8981\u4ece\u5934\u5728\u6765\u4e86\u5462\uff1f\u4e5f\u4e0d\u662f\uff0c\u4e09\u5ce1\u4e0d\u662f\u53ef\u4ee5\u5c06\u6c5f\u9762\u5206\u6210\u4e24\u534a\u5417\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u95f4\u52a0\u4e00\u70b9\u4e1c\u897f\u9694\u5f00\u5b83\u4eec\u3002\u9898\u76ee\u4fdd\u8bc1\u4e86\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f\u975e\u7a7a\u7684\uff0c\u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u548c\u6570\u5b57\u7ec4\u6210\uff0c\u90a3\u53ea\u8981\u52a0\u4e00\u4e9b\u4e0d\u662f\u82f1\u6587\u5b57\u6bcd\u548c\u6570\u5b57\u7684\u5b57\u7b26\u8fdb\u53bb\u5373\u53ef\u3002\n\n# 3.\u597d\u4e86\uff0c\u8bb2\u4e86\u8fd9\u4e48\u4e45\uff0c\u5c31\u4e0a\u4ee3\u7801\u5427\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#define il inline\n#define ll long long\n#define gc getchar\n#define R register\nusing namespace std;\n//---------------------\u521d\u59cb\u51fd\u6570-------------------------------\n//\u521d\u59cb\u51fd\u6570\u4e2d\u90fd\u662f\u4e00\u4e9b\u4f18\u5316\uff0c\u6ca1\u6709\u4e5f\u6ca1\u592a\u5927\u5f71\u54cd\nil int read(){\n\tR int x=0;R bool f=0;R char ch=gc();\n\twhile(!isdigit(ch)) {f|=ch=='-';ch=gc();}\n\twhile(isdigit(ch)) {x=(x<<1)+(x<<3)+(ch^48);ch=gc();}\n\treturn f?-x:x;\n}\n\nil int max(int a,int b) {return a>b?a:b;}\n\nil int min(int a,int b) {return a<b?a:b;}\n\n\n//---------------------\u521d\u59cb\u51fd\u6570-------------------------------\n\nconst int MAXN=1e6+10;\nint n,len,anslen,top,minlen;//len:\u65b0\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0canslen:\u7b54\u6848\u4e32\u7684\u957f\u5ea6\uff0ctop:\u5408\u5e76\u540e\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\uff0cminlen:min\uff08\u7b54\u6848\u4e32\u957f\u5ea6\uff0c\u65b0\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\nint kmp[MAXN];//\u7528\u4e8e\u5339\u914d\u5931\u914d\u6570\u7ec4\nchar ans[MAXN],opt[MAXN];//ans:\u7b54\u6848\u4e32,opt:\u65b0\u5b57\u7b26\u4e32\n\nsigned main(){//signed main==int main\n\tn=read();\n\tfor(R int i=1;i<=n;++i){\n\t\tscanf(\"%s\",opt+1);//\u5c06\u5176\u6574\u4f53\u5f80\u53f3\u79fb\u4e00\u4f4d\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u5904\u7406\n\t\ttop=len=strlen(opt+1);\n\t\tminlen=min(anslen,len);\n\t\topt[++top]='~';//\u5c06\u7b54\u6848\u4e32\u548c\u65b0\u5b57\u7b26\u4e32\u9694\u5f00\n\t\tfor(R int j=1;j<=minlen;++j) opt[++top]=ans[anslen-(minlen-j)];//\u5408\u5e76\u540e\u7684\u6a21\u5f0f\u4e32\n        //KMP\u7b97\u6cd5\u6c42\u5931\u914d\u6570\u7ec4\n\t\tkmp[0]=0;kmp[1]=0;\n\t\tfor(R int j=1;j<top;++j){\n\t\t\tint k=kmp[j];\n\t\t\twhile(k&&opt[k+1]!=opt[j+1]) k=kmp[k];\n\t\t\tif(opt[j+1]==opt[k+1]) {++k;}\n\t\t\tkmp[j+1]=k;\n\t\t}\n         //KMP\u7b97\u6cd5\u6c42\u5931\u914d\u6570\u7ec4\n\t\tfor(R int j=kmp[top]+1;j<=len;++j) ans[++anslen]=opt[j];\n        //kmp[top]\u8868\u793a\u6700\u957f\u5339\u914d\u957f\u5ea6\uff0c\u90a3kmp[top]+1\u5230len\u5c31\u662f\u7b54\u6848\u4e32\u548c\u65b0\u5b57\u7b26\u4e32\u4e0d\u91cd\u5408\u7684\u90e8\u5206\uff0c\u5c31\u5c06\u5176\u52a0\u5165\u5230\u7b54\u6848\u4e32\u4e2d\n\t}\n\tfor(R int i=1;i<=anslen;++i) printf(\"%c\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1605623274,
        "uid": 109931,
        "name": "WJX3078",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1200E Compress Words"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e5f\u662f\u975e\u5e38\u6bd2\u4e86\u3002\u3002\u3002\n\n~~\u4e3b\u8981\u662f\u9898\u610f\uff0c\u6211\u731c\u5e94\u8be5\u6709\u5f88\u591a\u4eba\u548c\u6211\u4e00\u6837\u4ee5\u4e3a\u662f\u5408\u5e76$i$\u548c$i-1$\u5427~~\n\n~~\u5b9e\u9645\u4e0a~~\u9898\u610f\u662f\u8bf4\u6bcf\u65b0\u8bfb\u5165\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\u5c31\u5c06\u5176\u548c\u5df2\u6709\u7684\u5b57\u7b26\u4e32\u5408\u5e76\u3002\n\n$Sol.$\n\n\u8003\u8651\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\u5355\u8bcd\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e00\u4e2a\u957f\u5ea6\uff0c\u5224\u65ad\u5176\u524d\u7f00\u548c\u5df2\u6709\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u662f\u5426\u76f8\u540c\u3002\n\n\u8fd9\u4e2a\u76f8\u540c\u7528$hash$\u5224\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u66b4\u529b\u7b97\u7684\u8bdd\u590d\u6742\u5ea6\u4f1a\u5e26\u4e2a$\\log$\uff0c\u6240\u4ee5\u8fd8\u8981\u9884\u5904\u7406\u4e00\u4e0b\u6bcf\u4e2a\u6570\u524d\u9762\u7684\u7cfb\u6570\u7684$k$\u6b21\u65b9\u5728$\\%hash$\u610f\u4e49\u4e0b\u662f\u591a\u5c11\u3002\n\n\u8fd9\u6837\u5c31\u662f$O(S)$\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\n#define int long long\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int mod = 1e9 + 7 ;\nconst int mod2 = 1e9 + 9 ;\nconst int ha = 233 ; \nconst int ha2 = 377 ;\nconst int N = 1e6 + 5 ;\nint n, cnt, r, inv[N], inv2[N] ;\nchar out[N], s[N] ; \nsigned main()\n{\n\tn = read() ; int Maxa = 1e6 ; inv[0] = 1, inv2[0] = 1 ; \n\trep( i, 1, Maxa ) inv[i] = ( inv[i - 1] * ha ) % mod, inv2[i] = ( inv2[i - 1] * ha2 ) % mod ; \n\trep( i, 1, n ) {\n\t\tscanf(\"%s\", s + 1 ) ;\n\t\tr = strlen( s + 1 ) ; \n\t\tint hash1 = 0, hash2 = 0 ;\n\t\tint hash12 = 0, hash22 = 0 ;\n\t\tint k = min( r, cnt ), ans = 0 ;\n\t\trep( i, 1, k ) {\n\t\t\thash1 = ( hash1 * ha + s[i] ) % mod ;\n\t\t\thash2 = ( hash2 + out[cnt - i + 1] * inv[i - 1] ) % mod ;\n\t\t\thash12 = ( hash12 * ha2 + s[i] ) % mod ;\n\t\t\thash22 = ( hash22 + out[cnt - i + 1] * inv2[i - 1] ) % mod ;\n\t\t\tif( hash1 == hash2 && hash12 == hash22 ) ans = i ;\n\t\t}\n\t\tfor( int i = ans + 1; i <= r; ++ i ) out[++ cnt] = s[i] ;\n\t}\n\trep( i, 1, cnt ) printf(\"%c\", out[i] ) ;\n\treturn 0;\n}\n\n```",
        "postTime": 1565615321,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "# Solution\n\u5047\u8bbe\u524d $i - 1$ \u4e2a\u5b57\u7b26\u4e32\u5df2\u7ecf\u8fdb\u884c\u4e86\u5408\u5e76\uff0c\u7ec4\u5408\u6210\u4e86\u5b57\u7b26\u4e32 $t$\uff0c\u73b0\u5728\u8981\u5c06\u5b57\u7b26\u4e32 $s$ \u4e0e $t$ \u8fdb\u884c\u5408\u5e76\u3002\n\n\u53ea\u9700\u8981\u7b97\u51fa\u5b57\u7b26\u4e32 $s$ \u7684\u524d\u7f00\u51fd\u6570\u503c\uff0c\u518d\u4ee5\u6b64\u7b97\u51fa $t$ \u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u524d\u7f00\u51fd\u6570\u503c\uff0c\u5c31\u80fd\u591f\u77e5\u9053 $s$ \u4e0e $t$ \u91cd\u5408\u7684\u90e8\u5206\u3002\n\n\u8003\u8651\u4f7f\u7528\u79bb\u7ebf\u7248 `KMP`\uff0c\u7531\u4e8e\u6709\u5f88\u591a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c$t$ \u90fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4e8e\u662f\u53c8\u8981\u91cd\u65b0\u8ba1\u7b97 $t$ \u7684\u524d\u7f00\u51fd\u6570\u503c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\times |s|)$\uff0c\u8d85\u65f6\u3002\n\n\u56e0\u4e3a\u9700\u8981\u8ba1\u7b97 $s$ \u548c $t$ \u7684\u91cd\u5408\u90e8\u5206\u6700\u957f\u503c\uff0c\u76f8\u5f53\u4e8e\u8ba1\u7b97 $t$ \u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u524d\u7f00\u51fd\u6570\u503c $p$\uff0c\u5219 $p$ \u5b9a\u4e0d\u4f1a\u8d85\u8fc7 $|s|$\uff0c\u6240\u4ee5\u53ea\u9700\u8981 $t$ \u4e2d\u672b\u5c3e\u7684 $|s|$ \u4e2a\u5b57\u7b26\uff0c\u8ba1\u7b97\u8fd9\u4e9b\u5b57\u7b26\u7684\u524d\u7f00\u51fd\u6570\u503c\uff0c\u8fd9\u6837 $p$ \u80fd\u591f\u4fdd\u8bc1\u6b63\u786e\uff0c\u867d\u7136\u5176\u4ed6 $|s| - 1$ \u4e2a\u5b57\u7b26\u7684\u524d\u7f00\u51fd\u6570\u503c\u4e0d\u80fd\u4fdd\u8bc1\u6b63\u786e\uff0c\u4f46\u662f\u4e0d\u96be\u53d1\u73b0\uff0c\u5b83\u4eec\u4e0d\u5f71\u54cd $p$ \u7684\u8ba1\u7b97\u3002\u5c3d\u7ba1\u8fd9\u6837\u4e5f\u9700\u8981\u505a $n$ \u6b21\u524d\u7f00\u51fd\u6570\u503c\u7684\u8ba1\u7b97\uff0c\u4f46\u662f\u6574\u4f53\u957f\u5ea6\u53ea\u6709 $10^6$\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(|s|) = \\mathcal{O}(10^6)$\u3002\n\n# Tip\n\u672c\u9898\u6bcf\u6b21\u5408\u5e76\u662f\u4e0e\u524d\u9762\u5df2\u7ecf\u5408\u5e76\u5b8c\u7684\u6574\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5408\u5e76\uff0c\u800c\u4e0d\u662f\u4e0e\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5408\u5e76\u3002\n\n# Code\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 1e6 + 5;\n\nint n;\nvector <int> p;\nchar s[maxn], t[maxn];\n\nvoid prefix(int len)\n{\n    p[0] = 0;\n    for (int i = 1; i < len; i ++)\n    {\n        int j = p[i - 1];\n        while (j > 0 && s[i] != s[j])\n            j = p[j - 1];\n        if (s[i] == s[j])\n            j ++;\n        p[i] = j;\n    }\n}\n\n// \u8ba1\u7b97 s \u548c t \u7684\u91cd\u5408\u90e8\u5206\uff0c\u76f8\u5f53\u4e8e\u5c06 t \u4e2d |s| \u4e2a\u5b57\u7b26\u6dfb\u52a0\u5230 s \u672b\u5c3e\nint KMP(int len1, int len2)\n{\n    int pre = 0, pos = max(len2 - len1, 0);\n    if (s[0] == t[pos])\n        pre ++;\n    for (int i = pos + 1; i < len2; i ++)\n    {\n        int j = pre;\n        while (j > 0 && t[i] != s[j])\n            j = p[j - 1];\n        if (t[i] == s[j])\n            j ++;\n        pre = j;\n    }\n    return pre;\n}\n\nint main()\n{\n    cin >> n;\n    cin >> t;\n    int lent = strlen(t);\n    for (int i = 2; i <= n; i ++)\n    {\n        cin >> s;\n        int lens = strlen(s);\n        int cnt;\n        p.resize(lens);\n        prefix(lens);\n        cnt = KMP(lens, lent);\n        for (int j = cnt; j < lens; j ++)\n            t[lent ++] = s[j];\n    }\n    cout << t;\n    return 0;\n}\n```",
        "postTime": 1677376816,
        "uid": 509154,
        "name": "CrazyWolf",
        "ccfLevel": 4,
        "title": "CF1200E \u9898\u89e3"
    },
    {
        "content": "\u6211\u7684\u7b2c\u4e00\u7bc7 *luogu* \u9898\u89e3\n\n### \u9898\u76ee\n[CF1200E Compress Words](https://www.luogu.com.cn/problem/CF1200E)\n\n\u5927\u610f: \u6309\u7ed9\u5b9a\u987a\u5e8f\u5408\u5e76 *N* \u4e2a\u5b57\u7b26\u4e32(\u603b\u957f *S* ), \u8981\u6c42\u6bcf\u6b21\u5408\u5e76\u5355\u8bcd\u7684\u6700\u957f\u524d\u7f00.  ( $N\\leq10^5,\\ S\\leq 10^6$ )\n\n\u6bd4\u5982, *last* $+$ *step* $=$ *lastep*; *moon* $+$ *on* $=$ *moon*\n\n### \u7b80\u6790\n> \u4e00\u9053\u5b57\u7b26\u4e32\u7684\u9898\u76ee\u5173\u7cfb\u524d\u540e\u7f00, \u5219 *KMP* \u6709\u5f88\u5927\u5acc\u7591\n\n\u7814\u7a76\u9898\u76ee\u6027\u8d28, \u53d1\u73b0\u4e00\u4e2a\u5b57\u7b26 *B* \u82e5\u8981\u63a5\u5230 *A* \u7684\u540e\u9762,\u5219**\u91cd\u5408\u90e8\u5206\u7684\u957f\u5ea6\u6700\u591a\u4e3a *B* \u7684\u957f\u5ea6**, \u4e8e\u662f\u76f4\u63a5\u5728 *A* \u7684\u672b\u5c3e\u5339\u914d *B*\n\n```cpp\nvoid KMP(char B[M], int len){\n    int j = 0;\n    REP(i, max(1, top-len+1), top){\n        while(j && A[i] != B[j+1]) j = Next[j];\n        if(A[i] == B[j+1]) ++j;\n    }\n    while(j < len) A[++top] = B[++j];\n}\n```\n\n\u590d\u6742\u5ea6 $O(S)$\n\n### \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define REP(i, a, b) for(int i=(a); i<=(b); ++i)\nusing namespace std;\n\nconst int N=1e5+9, M=1e6+9;\nint n, m;\nint lens; char s[M];\nint top; char S[M];\nint Next[M];\n\nvoid init_Next(char s[M], int len){\n    int j=0;\n    REP(i, 2, len){\n        while(j && s[j+1] != s[i]) j = Next[j];\n        if(s[j+1] == s[i]) ++j;\n        Next[i] = j;\n    }\n}\n\nvoid KMP(char s[M], int len){\n    int j=0;\n    REP(i, max(1, top-len+1), top){\n        while(j && S[i] != s[j+1]) j = Next[j];\n        if(S[i] == s[j+1]) ++j;\n        // if(j==len) j = Next[j];\t\t// (\u2299_\u2299)\n    }\n    while(j<len) S[++top] = s[++j];\n}\n\nint main(){\n    scanf(\"%d\", &n);\n    REP(i, 1, n){\n        scanf(\"%s\", s+1), lens=strlen(s+1);\n        init_Next(s, lens);\n        KMP(s, lens);\n    }\n    REP(i, 1, top) putchar(S[i]);\t// putchar \u6bd4 printf \u901f\u5ea6\u66f4\u5feb~\n    return 0;\n}\n```\n\u603b\u65f6\u95f4 *1.81 s*",
        "postTime": 1643880356,
        "uid": 374291,
        "name": "OldPan",
        "ccfLevel": 0,
        "title": "CF1200E \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n- \u7ed9\u5b9a $n$ \u4e2a\u5355\u8bcd\uff0c\u5c06\u8fd9 $n$ \u4e2a\u5355\u8bcd\u4ece\u524d\u5f80\u540e\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u82e5\u76f8\u90bb\u4e24\u4e2a\u5355\u8bcd\u7684\u540e\u7f00\u548c\u524d\u7f00\u76f8\u540c\u5219\u5c06\u5176\u91cd\u5408\u5728\u4e00\u8d77\u3002\n\n- \u5982\u8f93\u5165 sample please ease in out\uff0csample \u4e0e please \u62fc\u63a5\u5f97 samplease\uff0csamplease \u4e0e ease \u62fc\u63a5\u4ecd\u5f97 samplease\uff0c\u6700\u7ec8\u5f97 sampleaseinout\n\n## \u9898\u76ee\u5206\u6790\n\n\u9898\u76ee\u7684\u5173\u952e\u5728\u4e8e\u6c42\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u6700\u957f\u516c\u5171\u90e8\u5206\uff0c\u5373\u76f8\u7b49\u7684\u524d\u7f00\u4e0e\u540e\u7f00\u3002\u8fd9\u5f88\u5bb9\u6613\u8ba9\u4eba\u8054\u60f3\u5230 KMP \u7684 $next$ \u6570\u7ec4\uff0c\u5b83\u7684\u5b9a\u4e49\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u7684\u6700\u957f\u7684\u76f8\u540c\u7684\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u957f\u5ea6\uff0c$next[len - 1]$ \u7684\u5b9a\u4e49\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u7684\u76f8\u540c\u7684\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u957f\u5ea6\u3002\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32 $s1$ \u548c $s2$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 $s2$ \u62fc\u63a5\u5728 $s1$ \u524d\u9762\uff0c\u4f8b\u5982\u5c06 sample \u4e0e please \u62fc\u63a5\u4e3a pleasesample\uff0c\u518d\u6c42\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684 $next[len - 1]$ \u7b49\u4e8e $2$\uff0c\u5c31\u53ef\u4ee5\u7b80\u5355\u5730\u5f97\u5230\u516c\u5171\u90e8\u5206\u4e3a ple\uff0c\u518d\u4ece $2$ \u5f00\u59cb\u622a\u53d6 please \u7684\u540e\u534a\u90e8\u5206 ease \u62fc\u63a5\u5230 sample \u540e\u9762\u5373\u53ef\u3002\n\n\u5bf9\u4e8e $n$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u5e94\u8be5\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u4f9d\u6b21\u62fc\u63a5\u3002\n\nP.S. \u4e00\u4e2a\u4f18\u5316\uff1a\u56e0\u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u6700\u957f\u516c\u5171\u90e8\u5206\u7684\u957f\u5ea6\u663e\u7136\u4e0d\u53ef\u80fd\u5927\u4e8e\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u5728\u4e00\u5f00\u59cb\u62fc\u63a5\u65f6\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u8f83\u77ed\u7684\u7684\u957f\u5ea6 $l$\uff0c\u5c06\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u540e $l$ \u4e2a\u5b57\u7b26\u62fc\u63a5\u5230\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\uff0c\u518d\u6c42 $next[len - 1]$ \u7684\u503c\u3002\n\n\u540c\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62\u6c42next\u65f6\u5c06\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e5f\u7b97\u8fdb\u6765\uff0c\u5bfc\u81f4\u201c\u5171\u540c\u90e8\u5206\u201d\u8de8\u8fc7\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\uff0c\u8981\u5728\u4e2d\u95f4\u63d2\u5165\u4e00\u6bb5\u6570\u636e\u4e2d\u51e0\u4e4e\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\u3002\u56e0\u4e3a\u5982\u679c\u67d0\u4e2a\u771f\u5b50\u4e32\u5728\u5b57\u7b26\u4e32\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u6700\u957f\u7684\u76f8\u540c\u524d\u540e\u7f00\u5c31\u4e0d\u53ef\u80fd\u5305\u62ec\u8fd9\u4e2a\u5b57\u4e32\uff0c\u4e5f\u5c31\u675c\u7edd\u4e86\u6c42\u51fa\u7684\u957f\u5ea6\u8d8a\u8fc7\u4e24\u4e2a\u5b57\u7b26\u4e4b\u95f4\u7684\u53ef\u80fd\u6027\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 1000000 + 500;\n\nint nxt[MAXN];\n\nint getNext(string s2) {\n\tnxt[0] = -1;\n\tint i = 0, j = -1;\n\tint len2 = s2.size();\n\twhile(i < len2) {\n\t\tif(j == -1 || s2[i] == s2[j]) {\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tnxt[i] = j;\n\t\t} else {\n\t\t\tj = nxt[j];\n\t\t}\n\t}\n\treturn j;\n}\n\nint main() {\n\tstring s, ans;\n\tint n, len;\n\t\n\tcin >> n >> s;\n\tans = s;\n\tfor(int i = 2; i <= n; i++) {\n\t\tcin >> s;\n\t\tlen = min(ans.size(), s.size()); //\u663e\u7136\uff0c\u5171\u540c\u90e8\u5206\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\n        //\u4e3a\u4e86\u9632\u6b62\u6c42next\u65f6\u5c06\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e5f\u7b97\u8fdb\u6765\uff0c\u5bfc\u81f4\u201c\u5171\u540c\u90e8\u5206\u201d\u8de8\u8fc7\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\uff0c\u8981\u5728\u4e2d\u95f4\u63d2\u5165\u4e00\u6bb5\u6570\u636e\u4e2d\u51e0\u4e4e\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\n\t\tstring tmp = s + \"Idealistoj neniam maljuni\u011das.\" + ans.substr(ans.size() - len);\n\t\tint res = getNext(tmp); //\u6c42\u51fa\u76f8\u540c\u7684\u6700\u957f\u524d\u7f00\u548c\u540e\u7f00\uff0c\u5373\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u90e8\u5206\u7684\u957f\u5ea6\n\t\tans += s.substr(res); //0 ~ res-1 \u7684\u90e8\u5206\u90fd\u662f\u4e0es\u7684\u516c\u5171\u90e8\u5206\uff0c\u53ea\u8981\u5c06res\u4e4b\u540e\u7684\u90e8\u5206\u63a5\u5230ans\u540e\u9762\u65e2\u53ef\u4ee5\u4e86\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}\n```",
        "postTime": 1609516319,
        "uid": 132435,
        "name": "\u667a\u5b50",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "\u5229\u7528\u54c8\u5e0c\u8868\uff0c\u52a0\u5165\u4e00\u4e2a\u4e32\u65f6\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u76f8\u540c\u7684\u957f\u5ea6\u5224\u65ad\u662f\u5426\u76f8\u7b49\u7136\u540e\u5408\u5e76\u5c31\u884c\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u662fCF\u7684\u9898\uff0c\u7528\u54c8\u5e0c\u5f88\u5bb9\u6613\u88abHack\n\n\u4e00\u5f00\u59cb\u5199\u4e86\u4e24\u4e2abase+\u4e00\u4e2a\u6a21\u6570\u88abHack\u4e86\n\n\u7136\u540e\u4e24\u4e2abase+\u53cc\u6a21\u6570\u8fd8\u662f\u88abHack\u4e86\n\n\u7136\u540e\u53c8\u6539\u6210\u4e86\u4e09\u4e2abase+\u4e09\u4e2a\u6a21\u6570\u8fd8\u662f\u88abHack\u4e86......\uff08orz zh\u5927\u4f6c\uff09\n\n\u4e8e\u662f\u5c31\u6539\u6210\u4e86\u968f\u673a\u4e09base\u4e09\u6a21\u6570\n\n\u6709\u4eba\u6709\u5174\u8da3\u5361\u7684\u8bdd\u53ef\u4ee5\u53bbCF\u5361\u4e00\u4e0b\uff1a[58846690](http://codeforces.com/problemset/submission/1200/58846690)\n\n\u8fd8\u6709\u4e00\u4e2a\u63d0\u4ea4\u662f\u53e6\u4e00\u4e2a\u540c\u673a\u623f\u5927\u4f6c\u7684\uff0c\u4e5f\u53ef\u4ee5\u53bb\u5c1d\u8bd5\u4e00\u4e0b\uff1a[58847045](http://codeforces.com/problemset/submission/1200/58847045)\n```cpp\n#include<ctime>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint mod1,mod2,mod3;\nlong long base1,base2,base3;\nconst int L=1000010,N=10000010;\nint n,lens,lent,tot,hashs1[L],hasht1[L],bs1[L],hashs2[L],hasht2[L],bs2[L],hashs3[L],hasht3[L],bs3[L],prm[N],vis[N];\nchar s[L],t[L];\nvoid init(){\n\tfor(int i=2;i<N;i++){\n\t\tif(!vis[i])\n\t\t\tprm[tot++]=i;\n\t\tfor(int j=0,p=prm[j],k=p*i;j<tot&&k<N;j++,p=prm[j],k=p*i){\n\t\t\tvis[k]=1;\n\t\t\tif(!(i%prm[j]))\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s+1);\n\tsrand(time(NULL));\n\tinit();\n\tint x=((rand()<<15ll)+rand())%(tot/2);\n\tx+=tot/2;\n\tmod1=prm[x];\n\tx=((rand()<<15ll)+rand())%(tot/2);\n\tx+=tot/2;\n\tmod2=prm[x];\n\tx=((rand()<<15ll)+rand())%(tot/2);\n\tx+=tot/2;\n\tmod3=prm[x];\n\tx=((rand()<<15ll)+rand())%(tot/2);\n\tbase1=prm[x];\n\tx=((rand()<<15ll)+rand())%(tot/2);\n\tbase2=prm[x];\n\tx=((rand()<<15ll)+rand())%(tot/2);\n\tbase3=prm[x];\n\tlens=strlen(s+1);\n\tbs1[0]=bs2[0]=bs3[0]=1;\n\tfor(int i=1;i<=1000000;i++)\n\t\tbs1[i]=bs1[i-1]*1ll*base1%mod1,bs2[i]=bs2[i-1]*1ll*base2%mod2,bs3[i]=bs3[i-1]*1ll*base3%mod3;\n\tfor(int i=1;i<=lens;i++)\n\t\thashs1[i]=(hashs1[i-1]*1ll*base1+s[i])%mod1,hashs2[i]=(hashs2[i-1]*1ll*base2+s[i])%mod2,hashs3[i]=(hashs3[i-1]*1ll*base3+s[i])%mod3;\n\tfor(int i=2;i<=n;i++){\n\t\tscanf(\"%s\",t+1);\n\t\tlent=strlen(t+1);\n\t\tfor(int j=1;j<=lent;j++)\n\t\t\thasht1[j]=(hasht1[j-1]*1ll*base1+t[j])%mod1,hasht2[j]=(hasht2[j-1]*1ll*base2+t[j])%mod2,hasht3[j]=(hasht3[j-1]*1ll*base3+t[j])%mod3;\n\t\tfor(int j=min(lens,lent);j>=0;j--)\n\t\t\tif((hashs1[lens]-1ll*hashs1[lens-j]*bs1[j]%mod1+mod1)%mod1==hasht1[j]&&(hashs2[lens]-1ll*hashs2[lens-j]*bs2[j]%mod2+mod2)%mod2==hasht2[j]&&(hashs3[lens]-1ll*hashs3[lens-j]*bs3[j]%mod3+mod3)%mod3==hasht3[j]){\n\t\t\t\tfor(int k=lens+j+1;k<=lens+lent;k++)\n\t\t\t\t\thashs1[k-j]=(hashs1[k-j-1]*1ll*base1+t[k-lens])%mod1,hashs2[k-j]=(hashs2[k-j-1]*1ll*base2+t[k-lens])%mod2,hashs3[k-j]=(hashs3[k-j-1]*1ll*base3+t[k-lens])%mod3,s[k-j]=t[k-lens];\n\t\t\t\tlens+=lent-j;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\ts[lens+1]='\\0';\n\tprintf(\"%s\",s+1);\n\treturn 0;\n}\n```",
        "postTime": 1565870361,
        "uid": 49097,
        "name": "ezoiHQM",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "\u6700\u957f\u76f8\u540c\u524d\u540e\u7f00\uff0c\u8003\u8651 KMP\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u7b54\u6848\u4e32 $q$\uff0c\u8981\u5408\u5e76\u7684\u5355\u8bcd $s$\uff0c\u6c42\u51fa $s+q$ \u7684 border \u5373\u4e3a\u6700\u957f\u76f8\u540c\u524d\u540e\u7f00\u3002\n\n\u6ce8\u610f\u5230 $q$ \u7684\u957f\u5ea6\u53ef\u80fd\u76f8\u5f53\u957f\uff0c\u800c border \u957f\u5ea6\u4e0d\u8d85\u8fc7 $|s|$\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u622a\u53d6 $q$ \u957f\u5ea6\u4e3a $\\min(|q|,|s|)$ \u7684\u540e\u7f00\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u6240\u6c42\u524d\u540e\u7f00\u4e0d\u5e94\u76f8\u4ea4\uff0c\u53ef\u4ee5\u5728 $s$ \u4e0e $q$ \u4e4b\u95f4\u52a0\u5165\u7279\u6b8a\u5b57\u7b26\u89e3\u51b3\u3002\n```cpp\n#include <string>\n#include <iostream>\nusing namespace std;\nint n, K[1000050];\nstring s, q, a;\nint main()\n{\n    cin >> n;\n    for (int i = 1, l, m; i <= n; ++i)\n    {\n        cin >> s;\n        l = min(s.length(), q.length());\n        a = s + '\\0' + q.substr(q.length() - l); //\u622a\u53d6 q \u7684\u540e\u7f00\uff0c\u52a0\u5165\u7279\u6b8a\u5b57\u7b26\n        m = a.length();\n        a = '\\0' + a;\n        for (int i = 2, j = 0;i <= m;++i) //KMP\n        {\n            while(j && a[i] != a[j + 1]) j = K[j];\n            K[i] = j += a[i] == a[j + 1];\n        }\n        q += s.substr(K[m]);\n    }\n    cout << q;\n    return 0;\n}\n```\n",
        "postTime": 1670716958,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "CF1200E Compress Words \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4f60 $n$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u8981\u6c42\u628a\u4ed6\u4eec\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u76f8\u540c\u7684\u90e8\u5206\u53ef\u4ee5\u4e92\u76f8\u91cd\u5408\u3002\n\n## \u601d\u8def\n\n\u770b\u5230\u5b57\u7b26\u4e32\u548c\u76f8\u540c\u7684\u90e8\u5206\uff0c\u60f3\u5230 $\\text{KMP}$ \u5339\u914d\u7b97\u6cd5\uff0c\u7531\u4e8e\u76f8\u540c\u7684\u90e8\u5206\u80af\u5b9a\u662f\u6700\u957f\u7684\u76f8\u540c\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u60f3\u5230 $\\text{KMP}$ \u7684 $\\text{next}$ \u6570\u7ec4\u3002\n\n\u5047\u5982\u6211\u4eec\u8981\u628a $s_1$ \u548c $s_2$ \u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u5408\u5e76\uff0c\u90a3\u4e48\u5982\u4f55\u6c42\u51fa\u5b83\u4eec\u6700\u957f\u53ef\u4ee5\u91cd\u53e0\u7684\u90e8\u5206\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5c06 $s_2$ \u548c $s_1$ \u5b8c\u5b8c\u5168\u5168\u62fc\u63a5\u8d77\u6765\uff0c\u6ce8\u610f\uff0c$s_2$ \u5728\u524d\u9762\u3002\u8fd9\u6837\u7684\u8bdd\u6700\u957f\u7684\u91cd\u53e0\u90e8\u5206\u7684\u957f\u5ea6\u5c31\u662f\u8fd9\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u4e86\uff01\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\uff1a\n\n\u7531\u4e8e\u8981\u5408\u5e76 $n$ \u4e2a\u4e32\uff0c\u4e00\u5171\u6709 $10^5$ \u4e2a\u4e32\uff0c\u603b\u957f\u5ea6\u4e3a $10^6$\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5927\u6982\u5c31\u662f $O(n|s|) = O(10^5 \\times 10^6) = O(10^{11})$\uff0ckls \u6765\u4e86\u90fd\u8981\u53f9\u6c14\u3002\n\n\u6211\u4eec\u60f3\uff0c\u5047\u8bbe\u4e4b\u524d\u90a3\u4e2a\u4e32\u6ee1\u8db3\u6761\u4ef6 $|s_1| > |s_2|$\uff0c\u90a3\u4e48\u663e\u7136 $s_2 + s_1$ \u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u6700\u957f\u4e5f\u5c31\u53ea\u6709 $|s_2|$ \u8fd9\u4e48\u957f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u622a\u53d6 $s_1$ \u7684\u540e $|s_2|$ \u4f4d\u4e3a $s_3$\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u7528\u6c42 $s_3 + s_2$ \u7684\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u6700\u591a\u662f $O(2|s|)$ \u7684\uff0c\u800c $|s|$ \u662f $10^6$ \u7ea7\u522b\u7684\uff0c**\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u662f\u53ef\u4ee5\u8fc7\u7684\u3002**\n\n\u4f46\u662f\uff0c\u6211\u4eec\u5199\u5b8c\u4ee3\u7801\uff0c\u53d1\u73b0\u63d0\u4ea4\u5230 Codeforces \u4e0a\u5947\u5999\u7684 WA \u4e86\uff0c\u8fd9\u5e76\u4e0d\u662f\u4f60\u4ee3\u7801\u5199\u9519\u4e86\uff0c\u800c\u662f\u4e0a\u9762\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u6709\u95ee\u9898\uff0c\u672c\u9898\u89e3\u7684\u7cbe\u9ad3\u5c31\u6765\u4e86\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\uff0c\u6211\u4eec\u4ee4\u4e0a\u8ff0\u7b97\u6cd5 $s_3 + s_2$ \u4e3a\u5b57\u7b26\u4e32 $s_4$\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53 $s_4$ \u7684\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u7684\u957f\u5ea6 $> |s_3|$ \u65f6\uff08\u7531\u4e8e $|s_2| = |s_3|$\uff0c\u6240\u4ee5\u63cf\u8ff0\u4e86 $s_4 > s_3$ \u540e\uff0c$s_4 > s_2$ \u5c31\u662f\u5fc5\u7136\u7684\uff09\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u9519\u8bef\uff0c\u56e0\u4e3a\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u7684\u957f\u5ea6\u90fd\u5927\u4e8e\u4e86 $s_3$\uff0c\u8fd8\u8bb2\u4ec0\u4e48\u91cd\u53e0\u4e0d\u91cd\u53e0\u5462\uff1f\n\n\u53ef\u80fd\u6709\u4eba\u542c\u4e0d\u61c2\uff0c\u653e\u4e2a\u6837\u4f8b\u6765\u770b\u770b\uff1a\n\n```\n2\n010 101\n```\n\n\u663e\u7136\u6b64\u65f6\u7684 $s_4$ \u4e3a $101010$\uff0c\u6211\u4eec\u53d1\u73b0\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u957f\u5ea6\u4e3a $4$\uff0c\u4f46\u662f\u5408\u5e76\u51fa\u6765\u7684\u7ed3\u679c\u662f $010101$\uff0c\u8fd9\u65f6\u56e0\u4e3a $4 > |010|$\uff0c\u8fd9\u4e2a\u6700\u957f\u91cd\u53e0\u7684\u4e32\u5728 $010$ \u4e0e $101$ \u4e2d\u90fd\u6ca1\u6709\u51fa\u73b0\u8fc7\u3002\n\n\u8fd9\u4e0b\u542c\u61c2\u4e86\u5427\uff01\u6211\u4eec\u53ef\u4ee5\u5c06 $s_4$ \u8bbe\u4e3a $s_3 + c + s_2$\uff0c\u5176\u4e2d $c$ \u662f\u4ec0\u4e48\uff0c\u5f85\u4f1a\u518d\u8bb2\u3002\n\n\u73b0\u5728\u6765\u89e3\u91ca\u8fd9\u4e2a\u795e\u5947\u7684 $c$\uff0c**\u7406\u8bba\u6765\u8bb2**\uff0c$c$ \u53ef\u4ee5\u4e3a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u3002\u672c\u4eba\u66fe\u7ecf\u8017\u8d39\u7cbe\u529b\u8bc1\u660e $c$ \u4e3a\u4e00\u4e2a\u5b57\u7b26\u662f\u5047\u7684\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u662f\u672c\u4eba\u5047\u4e86\u3002\n\n**\u4e0b\u9762\u5185\u5bb9\u60f3\u6df1\u7a76\u7684\u53ef\u4ee5\u770b\uff0c\u4e0d\u7136\u53ef\u4ee5\u76f4\u63a5\u770b\u4ee3\u7801\u3002**\n\n\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u6784\u9020\u4e00\u7ec4\u6570\u636e\uff1a\n\n```\n3\n1 1 1\n```\n\n\u672c\u6765\u5e0c\u671b\u7a0b\u5e8f\u8f93\u51fa\u4e2a\u9519\u8bef\u7ed3\u679c\uff0c\u6ca1\u60f3\u5230\u8f93\u51fa\u4e86 $1$\u3002\n\n\u6211\u4eec\u601d\u8003\u4e3a\u4ec0\u4e48\u4f1a\u8f93\u51fa $1$\uff0c\u6211\u4eec\u62fc\u63a5\u7684 $s_4$ \u4e3a $101$\uff0c\u800c $0$ \u4e3a $c$\uff0c\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u54e6\uff01\u7531\u4e8e $\\text{next}$ \u6570\u7ec4\u7684\u5b9a\u4e49\u662f\u6240\u6709\u524d\u7f00\u7684\u6700\u957f\u516c\u5171**\u771f**\u524d\u540e\u7f00\uff0c\u6240\u4ee5\u5176\u5b9e $101$ \u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a $1$\uff0c\u53ef\u4ee5\u8bc1\u660e\u6240\u6709\u8fd9\u79cd\u60c5\u51b5\u4ee5\u53ca\u5176\u4ed6\u60c5\u51b5\u90fd\u4f1a\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u6709\u7684\u9898\u89e3 $c$ \u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fc7\u4e86\u5462\uff1f\u4e0b\u9762\u89e3\u91ca\uff1a\n\n\u6211\u4eec\u8bbe $c$ \u4e3a `IAKIOI!!!`\n\n\u90a3\u4e48\u4e0b\u9762\u8fd9\u7ec4\u6837\u4f8b\u5373\u53ef\u5361\u6389\uff1a\n\n```\n2\nIAKIOI!!! IAKIOI!!!IAKIOI!!!\n```\n\n\u6b64\u65f6\u6211\u4eec\u5728\u4e2d\u95f4\u52a0\u4e0a `IAKIOI!!!` \u5c31\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a\n\n```\nIAKIOI!!!IAKIOI!!!IAKIOI!!!IAKIOI!!!\n```\n\n\u6b64\u65f6\u663e\u7136\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u4e3a $3$ \u4e2a `IAKIOI!!!`\uff0c\u800c\u8fd9\u4e2a\u957f\u5ea6\u8981\u6bd4\u8f93\u5165\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u90fd\u8981\u957f\uff0c\u6240\u4ee5\u4f1a\u9519\u3002\n\n\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 $c$\uff0c\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u51fa\u4ee5\u4e0b\u8fd9\u7ec4\u6570\u636e\u5361\u6389\uff1a\n\n```\n2\nc cc\n```\n\n\u5176\u4e2d $c$ \u4ee3\u8868\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n\n\u4f46\u662f\u5b57\u7b26\u4e32\u7ec4\u5408\u8fd9\u4e48\u591a\uff0c\u6240\u4ee5\u6ca1\u6709\u51fa\u5168\uff0c\u6240\u4ee5\u624d\u4f1a\u6709 $c$ \u4e3a\u4e00\u4e2a\u957f\u5ea6 $> 1$ \u7684\u5b57\u7b26\u4e32\u65f6 AC \u4e86\u3002\n\n\u4e0a\u9762\u7684 hack \u4ec5\u9002\u7528\u4e8e\u7b2c\u4e00\u79cd\u66b4\u529b\u7b97\u6cd5\uff0c\u5e76\u4e14\u6ca1\u6709\u8003\u8651 $|s_1| < |s_2|$\uff0c\u66f4\u591a\u7684 $\\text{hack}$\uff0c\u53ef\u4ee5\u5728 Codeforces \u4e0a\u627e\u3002\n\n\u6700\u540e\u6ce8\u610f\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ea\u9002\u7528\u4e8e $|s_1| > |s_2|$ \u7684\u60c5\u51b5\uff0c\u81f3\u4e8e $|s_1| < |s_2|$ \u7684\u60c5\u51b5\uff0c\u8ddf\u4e0a\u9762\u7684\u5dee\u4e0d\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n## \u4ee3\u7801\n\n\u4ee3\u7801\u5c31\u597d\u7406\u89e3\u4e86\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1e6 + 5;\n\nint n;\nint nxt[N];\nstring s[N], ans;\n\nint getnxt(string t){ //\u6c42 next \u6570\u7ec4\n\tint i = 0, j = -1;\n\tnxt[0] = -1;\n\tfor(; i < t.size(); ){\n\t\tif(j == -1 || t[i] == t[j]){\n\t\t\tnxt[++i] = ++j;\n\t\t}\n\t\telse{\n\t\t\tj = nxt[j];\n\t\t}\n\t}\n\treturn j;   //\u8fd9\u91cc\u7684 j \u8868\u793a\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u7684\u957f\u5ea6\uff0c\u4e5f\u53ef\u4ee5\u7528 nxt[n] \u8868\u793a\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie();\n\tcout.tie();\n\tcin >> n;\n\tfor(int i = 1; i <= n; ++i){\n\t\tcin >> s[i];\n\t}\n\tans = s[1];\n\tfor(int i = 2; i <= n; ++i){\n\t\tint len = min(ans.size(), s[i].size()), res = 0;  //\u8fd9\u91cc\u8981\u8003\u8651 s1 < s2 \u7684\u60c5\u51b5\n\t\tint start = ans.size() - len;  //\u5f00\u59cb\u7684\u4f4d\u7f6e\n\t\tstring tmp = s[i] + \"w\" + ans.substr(start);  //\u4e2d\u95f4\u52a0\u5b57\u7b26\n\t\tres = getnxt(tmp);\n\t\tres = min(res, len);   //\u8981\u8003\u8651 < \u7684\u60c5\u51b5\n\t\tans += s[i].substr(res);\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1660352499,
        "uid": 363006,
        "name": "_Alexande_",
        "ccfLevel": 5,
        "title": "CF1200E \u9898\u89e3"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\nKMP\n## \u5206\u6790\n### \u9898\u610f\n1. \u8f93\u5165\u4e00\u5806\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u628a\u5b83\u4eec\u62fc\u63a5\u8d77\u6765\uff0c\u76f8\u540c\u7684\u5730\u65b9\u53ea\u9700\u4fdd\u7559\u4e00\u6b21\uff0c\u6c42\u6700\u540e\u62fc\u6210\u4ec0\u4e48\n2. \uff08\u7b80\u5316\u4e86\u7684\u9898\u610f\uff1f\uff09\u8f93\u5165\u4e00\u5806\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u6700\u77ed\u7684\u5305\u542b\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff08\u6309\u987a\u5e8f\u51fa\u73b0\uff09\u7684\u5b57\u7b26\u4e32\n\n\n### \u601d\u8def\n\u9996\u5148\u7ef4\u62a4\u4e00\u4e2a\u5f53\u524d\u7684\u5b57\u7b26\u4e32\u7b54\u6848\uff0c\u6bcf\u6b21\u63d2\u5165\u65f6\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u5339\u914d\u5230\u6700\u540e\u65f6\u7684\u4e0b\u6807\u5c31\u662f\u76f8\u540c\u7684\u5730\u65b9\uff0c\u540e\u9762\u76f4\u63a5\u63d2\u5165\u3002\n\n\u7136\u540e\u6ce8\u610f\u8fd9\u91cc\u6709\u4e00\u4e9b\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\u3002\n\n1. \u83b7\u53d6 nxt \u6570\u7ec4\u65f6\u56e0\u4e3a\u5339\u914d\u65f6\u53ea\u9700\u5339\u914d\u7b54\u6848\u4e32\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3e\u5230 $\\min\\{l1, l2\\}$ \u5373\u53ef\n2. \u5339\u914d\u65f6\u56e0\u4e3a\u53ea\u9700\u5339\u914d\u540e\u7f00\uff0c\u6240\u4ee5\u53ea\u9700\u4ece $l1 - \\min\\{l1, l2\\} + 1$ \u5f00\u59cb\u5339\u914d\u3002\n\n\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint nxt[1000001];\nint l1, l2;\nvoid getnxt(const char * cstr) {\n\tnxt[1] = 0;\n\tfor (int i = 2, j = 0; i <= l1 && i <= l2; ++ i) {\n\t\twhile (j && cstr[i] != cstr[j + 1])\n\t\t\tj = nxt[j];\n\t\tif (cstr[i] == cstr[j + 1]) ++ j;\n\t\tnxt[i] = j;\n\t}\n}\n// \u83b7\u53d6 nxt \u6570\u7ec4 \nint match(const char * str1, const char * str2) {\n\tint ret = 0;\n\tfor (int i = l1 - min(l1, l2) + 1; i <= l1; ++ i) {\n\t\twhile (ret && str1[i] != str2[ret + 1])\n\t\t\tret = nxt[ret];\n\t\tif (str1[i] == str2[ret + 1])\n\t\t\t++ ret;\n\t}\n\treturn ret;\n}\n// \u5b57\u7b26\u4e32\u5339\u914d \nchar ans[2000001];\nint cnt;\nvoid insert(const char * cstr) {\n\tl2 = strlen(cstr + 1);\n\tgetnxt(cstr);\n\tint k = match(ans, cstr);\n\t// \u5728 k \u4e2a\u4e4b\u540e\u624d\u6709\u6ca1\u5339\u914d\u7684\u90e8\u5206 \n\tfor (int i = k + 1; i <= l2; ++ i)\n\t\tans[++ l1] = cstr[i];\n}\nint n;\nchar str[1000001];\nint main() {\n\tscanf(\"%d%s\", &n, ans + 1);\n\tl1 = strlen(ans + 1);\n\tfor (int i = 1; i < n; ++ i) {\n\t\tscanf(\"%s\", str + 1);\n\t\tinsert(str); // \u63d2\u5165 \n\t}\n\tprintf(\"%s\\n\", ans + 1);\n}\n```",
        "postTime": 1654857840,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "CF1200E Compress Words \u9898\u89e3"
    },
    {
        "content": "#### \u601d\u8def\n\n\u4f7f\u7528\u54c8\u5e0c\u7b97\u6cd5\n\n\u6bcf\u6b21\u7528\u54c8\u5e0c\u6c42\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\n\n\u4f46\u662f\u53ea\u80fd\u5f53\u66f4\u65b0\u5b57\u7b26\u4e32\u65f6\u6c42\u54c8\u5e0c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5927\u4e3a $ 10 ^ 6 $ \n\n\u53ef\u4ee5\u8fc7\n\n#### \u4ee3\u7801\n\n\u5355\u54c8\u5e0c\u5c31\u8fc7\u4e86 $ QWQ $\n\n```\n#include <bits/stdc++.h>\nusing namespace std; \n#define sed 131\n#define mod 998244353\ntypedef long long ll;\nconst int N = 1000000 + 5; \nint t , n , m;\nll h[N] , H[N] , pw[N];\nchar s[N] , ans[N];\nint query(int l , int r)\n{\n\tif(l > r) return 0;\n\treturn (H[r] - H[l - 1] * pw[r - l + 1] % mod + mod) % mod;\n}\nvoid debug()\n{\n\tcout << m << endl;\n\tfor(int i = 1 ; i <= m ; ++ i) cout << ans[i];\n\tcout << endl;\n}\nint main()\n{\n\tcin >> t;\t\n\tpw[0] = 1;\n\tfor(int i = 1 ; i < N ; ++ i ) pw[i] = pw[i - 1] * sed % mod;\n\tfor(int i = 1 ; i <= t ; ++i )\n\t{\n\t\tcin >> (s + 1);\n\t\tn = strlen(s + 1);\n\t\tint l = 0;\n\t\tfor(int j = 1 ; j <= n ; ++ j) h[j] = (h[j - 1] * sed % mod + s[j]) % mod;\n\t\tfor(int j = min(n , m) ; j >= 0 ; -- j)\n\t\t{\n\t\t\tif(h[j] == query(m - j + 1 , m)) \n\t\t\t{\n\t\t\t\tl = j;\n\t\t\t\tbreak; \n\t\t\t}\n\t\t}\n\t\tfor(int j = l + 1 ; j <= n ; ++ j){\n\t\t\tans[++m] = s[j];\n\t\t\tH[m] = (H[m - 1] * sed % mod + s[j]) % mod;\n\t\t}\n//\t\tdebug();\n\t}\n\tfor(int i = 1 ; i <= m ; ++ i) cout << ans[i];\n\treturn 0;\t\n}",
        "postTime": 1648954320,
        "uid": 594904,
        "name": "TNTtramcar",
        "ccfLevel": 0,
        "title": "CF1200E"
    },
    {
        "content": "\n[\u539f\u9898](https://www.luogu.com.cn/problem/CF1200E)\n## \u524d\u8a00\n\n\u840c\u65b0\u521a\u5b66 KMP \u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\n## \u9898\u610f\n\n\u7ed9\u51fa $n$ \u4e2a\u5355\u8bcd\uff0c\u8981\u6c42\u5c06\u8fd9 $n$ \u4e2a\u5355\u8bcd\u7ec4\u5408\u6210\u4e00\u4e2a\u53e5\u5b50\uff0c\u5373\u8981\u627e\u5230\u6700\u5927\u7684 $i (i\u22650)$\uff0c\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u4e3a $i$ \u7684\u540e\u7f00\u548c\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u957f\u5ea6\u4e3a $i$ \u7684\u524d\u7f00\u76f8\u7b49\uff0c\u7136\u540e\u628a\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u7b2c $i$ \u4f4d\u4ee5\u540e\u7684\u90e8\u5206\u63a5\u5230\u7b2c\u4e00\u4e2a\u5355\u8bcd\u540e\u9762\u3002\n\n## \u505a\u6cd5\n\n\u4e0d\u96be\u60f3\u5230\u5c06\u540e\u4e00\u4e2a\u5355\u8bcd\u548c\u524d\u4e00\u4e2a\u5355\u8bcd\u5408\u5e76\u4e3a\u4e00\u4e2a\u5355\u8bcd\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u5355\u8bcd\u505a KMP\uff0c**\u6ce8\u610f\u662f\u540e\u4e00\u4e2a\u5355\u8bcd\u5728\u524d**\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u662f\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u524d\u7f00\u548c\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u540e\u7f00\u3002\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u770b\u5230\u5355\u8bcd\u6570\u662f $10^5$\uff0c\u800c\u5355\u8bcd\u957f\u5ea6\u5230\u4e86 $10^6$\uff0c\u663e\u7136\u4f1a\u70b8\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u53ea\u8bb0\u5f55\u7b54\u6848\u4e32\u548c\u5f53\u524d\u4e32\u3002\n\n\u6b64\u65f6\u63d0\u4ea4\u5c31\u4f1a\u53d1\u73b0\u5728\u7b2c\u4e09\u4e2a\u70b9\u5c31 T \u4e86\uff0c**\u4e3a\u5565\u4f1a\u8fd9\u6837\u5462**\uff0c\u56e0\u4e3a\u6211\u4eec\u524d\u9762\u662f\u5c06\u6574\u4e2a\u7b54\u6848\u4e32\u8bb0\u5f55\u8d77\u6765\uff0c\u6240\u4ee5\u7b54\u6848\u4e32\u6709\u53ef\u80fd\u5f88\u957f\u5f88\u957f\uff0c\u90a3\u5c31\u4f1a\u5bfc\u81f4\u505a KMP \u65f6\u679a\u4e3e\u4e86\u4e00\u4e2a\u5f88\u957f\u7684\u4e32\u3002**\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462**\uff0c\u60f3\u4e00\u60f3\u53ef\u4ee5\u53d1\u73b0\uff0c\u56e0\u4e3a\u5f53\u524d\u4e32\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\uff0c\u6240\u4ee5\u516c\u5171\u90e8\u5206\u5fc5\u7136\u662f\u4e0d\u4f1a\u5927\u4e8e\u5f53\u524d\u4e32\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u8868\u793a\u524d\u7f00\u548c\u540e\u7f00\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5fc5\u7136\u90fd\u4e0d\u4f1a\u8d85\u8fc7 $\\min(\\text{\u7b54\u6848\u4e32\u957f\u5ea6,\u5f53\u524d\u4e32\u957f\u5ea6})$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#define N 100005\n#define M 1000005\n\nusing namespace std;\n\nint n; \nstring s,ans,cur;\nint nxt[M];\n\ninline int kmp(string s){\n\tint n=s.size(),j=0;\n\ts=' '+s; // \u524d\u52a0\u4e00\u4e2a\u7a7a\u683c\u8ba9\u5b57\u7b26\u4e32\u4ece\u4e00\u5f00\u59cb \n\tnxt[1]=nxt[0]=0; // \u4e0d\u7528\u628a nxt \u6570\u7ec4\u6e05\u7a7a \n\tfor(int i=2;i<=n;++i){\n\t\twhile(j && s[i]!=s[j+1]) j=nxt[j];\n\t\tif(s[i]==s[j+1]) ++j;\n\t\tnxt[i]=j;\n\t}\n\treturn nxt[n];\n} \n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>s;\n\t\tif(i==1) ans+=s;\n\t\telse{\n\t\t\tint minn=min(s.size(),ans.size());\n\t\t\tint len=kmp(s+'#'+ans.substr(ans.size()-minn,minn)); // substr\u4e2d\u7b2c\u4e00\u4e2a\u6570\u8868\u793a\u5f00\u59cb\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u6570\u8868\u793a\u5b57\u7b26\u4e32\u957f\u5ea6 \n\t\t\tfor(int j=len;j<s.size();++j)\n\t\t\t\tans+=s[j];\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1636818744,
        "uid": 224926,
        "name": "\u8ba9\u98ce\u5ffd\u60a0\u4f60",
        "ccfLevel": 0,
        "title": "CF1200E Compress Words \u9898\u89e3"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u8fd8\u662f\u633a\u88f8\u7684,\u5c31\u662f\u592a\u5751\u4e86!\n\n\u9898\u610f\uff1a\u7ed9\u4f60n\u4e2a\u5355\u8bcd\uff0c\u7136\u540e\u628an\u4e2a\u5355\u8bcd\u53d8\u6210\u4e00\u4e2a\u53e5\u5b50\uff0c\u6bcf\u6b21\u5408\u5e76\u90fd\u662f\u5c06\u4e4b\u524d\u5355\u8bcd\u5f62\u6210\u7684\u53e5\u5b50\u4e0e\u5f53\u524d\u5355\u8bcd\u5408\u5e76\u5408\u5e76\u4e24\u4e2a\u5355\u8bcd\u7684\u65f6\u5019,\u8981\u627e\u5230\u6700\u5927\u7684$i$,\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u4e3a$i$\u7684\u540e\u7f00\u548c\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u957f\u5ea6\u4e3a$i$\u7684\u524d\u7f00\u76f8\u7b49,\u7136\u540e\u628a\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u7b2c$i$\u4f4d\u4ee5\u540e\u7684\u90e8\u5206\u63a5\u5230\u7b2c\u4e00\u4e2a\u5355\u8bcd\u540e\u9762.\u8f93\u51fa\u6700\u540e\u90a3\u4e2a\u5355\u8bcd.\n\n\u601d\u8def\uff1a\u8fd9\u9053\u9898\u601d\u8def\u5176\u5b9e~~\u975e\u5e38\u7b80\u5355\uff0c(\u5c31\u662f\u4e00\u4e2aKMP\u677f\u5b50\u9898)~~\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5b83\u8981\u6c42\u7684\u5176\u5b9e\u5c31\u662f$kmp$\u677f\u5b50(\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u4e0e\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u7684\u6700\u5927\u76f8\u540c\u5b50\u4e32),\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u5bf9\u5355\u8bcd\u548c\u4e4b\u524d\u7b54\u6848\u6c42\u4e2a$kmp$\u3002\u7136\u540e\u6c42$n$\u6b21$kmp$,\u4f46\u4ea4\u4e0a\u53bb\u5374\u53d1\u73b0$T$\u6389\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f \u56e0\u4e3a\u5230\u6700\u540e\u7b54\u6848\u4e32\u7684\u957f\u5ea6\u975e\u5e38\u5927\uff0c\u6bcf\u6b21\u6c42\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u89c6\u4e3a$1e6$.\u90a3\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5dee\u5c31\u4e3a $O(nm)$\u7684\uff0c\u800c$n$\u4e3a$1e5$,$m$\u4e3a$1e6$,\u8fd9\u6837\u80af\u5b9a\u5c31$T$\u6389\u4e86\n\n\u8003\u8651\u4f18\u5316\u7b97\u6cd5\u3002\n\n\u7531\u4e8e\u6bcf\u6b21$kmp$\u6211\u4eec\u90fd\u53ea\u662f\u6c42\u7b54\u6848\u4e32\u7684\u540e\u7f00\u4e0e\u5f53\u524d\u5355\u8bcd\u7684\u524d\u7f00,\u6240\u4ee5\u6211\u4eec\u6700\u591a\u622a\u53d6 \u7b54\u6848\u4e32\u4e0e\u5f53\u524d\u5355\u8bcd\u7684\u957f\u5ea6\u53d6$min $\u7684\u503c\u8dd1$kmp$ \u5c31\u884c\u4e86.\n\n\u9700\u8981\u6ce8\u610f\u7684\u5c0f\u7ec6\u8282\u633a\u591a\u7684,\u8be6\u89c1\u4ee3\u7801.\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nchar ans[1000005],s[1000005],str[1000005];\nint kmp[1000015];\nint  KMP(char *a,int la)\n{\n\tfor(int i=0;i<=la;++i)kmp[i]=-1;\n\tfor(int i=1;i<la;i++)\n\t{\n\t\tint j=kmp[i-1];\n\t\twhile((~j)&&a[j+1]!=a[i])\n\t\t{\n\t\t\tj=kmp[j];\n\t\t}\n\t\tif(a[j+1]==a[i])j++;\n\t\tkmp[i]=j;\n\t}\n\tint j=kmp[la-1]//\u7531\u4e8e\u7b54\u6848\u4e32\u53ef\u80fd\u81ea\u5df1\u5339\u914d\u81ea\u5df1,\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8df3\u5230\u5355\u8bcd\u4e32\u4e0a\n\twhile(j>=la/2)//\u76f4\u5230\u8df3\u5230\u5355\u8bcd\u4e32\u4e0a\u624d\u884c\n\t{\n\t\tj=kmp[j];\n\t}\n\treturn j+1;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tcin>>ans;\n\tint L=strlen(ans);\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tint l=strlen(s);\n\t\tint ne=min(l,L);//\u8981\u53d6\u4e24\u4e32\u6700\u5c0f\u503c\n\t\tfor(int j=0;j<ne;++j)str[j]=s[j];\n\t\tfor(int j=0;j<ne;j++)\n\t\t{\n\t\t\tstr[j+ne]=ans[L-ne+j];\n\t\t}\n\t\tint len=KMP(str,ne*2);//\u8fd9\u91cc\u8981\u8bb2\u957f\u5ea6*2\u4f20\u4e0a\u53bb\n      len=min(len,ne);//\u8bb0\u5f97\u53bbmin\n\t\tfor(int j=len;j<l;j++)//\u590d\u5236\u7b54\u6848\n\t\t{\n\t\t\tans[L]=s[j];++L;\n\t\t}\n\t}\n\tcout<<ans;\n}\n```\n",
        "postTime": 1565772025,
        "uid": 53852,
        "name": "\u5f26\u5dfb\u3053\u3053\u308d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "\u8d5b\u573a\u4e0a\u7528KMP\u6c34\u8fc7\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u7528Z\u7b97\u6cd5AC\u7684\u65b9\u6cd5\n\nZ Algorithm\n\n\u5bf9Z\u7b97\u6cd5\u4e0d\u719f\u6089\u7684\u53ef\u4ee5\u53bb[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/gaofeiji/qian-tan-z-suan-fa)\u91cc\u4e86\u89e3\u4e00\u4e0b\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define mp make_pair\nusing namespace std;\nint n;\nstring s[100005],t;\nint z[2000005];\ninline void calc_z(string s){         //\u8ba1\u7b97\u6240\u6709\u7684z[i]\n\tfor(int i=0;i<s.size();++i)z[i]=0;\n    int l=0,r=0,n=s.size();\n    for(int i=1;i<n;++i){\n        if(i<=r)z[i]=min(r-i,z[i-l]);\n\t\tfor(;i+z[i]<n&&s[z[i]]==s[i+z[i]];)++z[i];\n\t\tif(i+z[i]>r)l=i,r=i+z[i]; \n    }\n    return;\n}\nint main(){\n\tios_base::sync_with_stdio(false);cin.tie(0),cout.tie(0);\n\tcin>>n;\n\tfor(int i=0;i<n;++i)cin>>s[i];\n\tt=s[0];\n\tfor(int i=1;i<n;++i){\n\t\tstring st=s[i]+'$'+t.substr(max(0,int(t.size()-s[i].size())));  //\u8fde\u63a5\u8d77\u6765\u3002\u8fd9\u662f\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u53ea\u7528\u622a\u53d6\u4e0e\u5b83\u7684\u957f\u5ea6\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\u4e0e\u5b83\u5339\u914d\u3002\u591a\u7684\u80af\u5b9a\u5339\u914d\u4e0d\u4e0a\n\t\tcalc_z(st);\n\t\tint mx=st.size();\n\t\tfor(int j=st.size()-1;st[j]!='$';--j)if(j+z[j]==st.size())mx=j;  //\u5982\u679cj+z[j]==st.size(),\u8bf4\u660e\u5b8c\u5168\u91cd\u5408\uff0c\u5219\u7b54\u6848\u66f4\u65b0\n\t\tint len=st.size()-mx;\n\t\tfor(int j=len;j<s[i].size();++j)t+=s[i][j];\n\t}\n\tcout<<t<<endl;\n}\n```",
        "postTime": 1565606326,
        "uid": 125964,
        "name": "\u4e16\u672bOIer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1200E \u3010Compress Words\u3011"
    },
    {
        "content": "\u672c\u6587\u5c06\u540c\u6b65\u5230 [Hexo \u535a\u5ba2](https://mraymes.github.io).\n\n\u5b57\u7b26\u4e32\u5339\u914d\u677f\u5b50\u9898. ~~Dilute: \u6700\u8fd1 CF \u7684\u9898\u76ee\u8d28\u91cf\u8d8a\u6765\u8d8a\u4f4e\u4e86...~~\n\n\u5927\u90e8\u5206\u4eba\u90fd\u7528\u7684\u662f\u53cc\u6a21\u54c8\u5e0c, \u4f46\u7531\u4e8e\u79cd\u79cd\u539f\u56e0, \u6709\u4e00\u90e8\u5206 FST \u4e86.  \n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd KMP \u7684\u505a\u6cd5, \u867d\u7136\u7801\u91cf\u5927\u4e86\u4e00\u70b9, \u96be\u60f3\u4e00\u70b9, ~~\u4f46\u4e0d\u4f1a\u88ab\u53c9~~.\n\n\u666e\u901a\u7684 KMP \u7b97\u6cd5\u662f\u5b8c\u5168\u5339\u914d, \u4f46\u8fd9\u91cc\u53ea\u662f\u627e\u4e86\u540c\u65f6\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00, \u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u7684\u6700\u957f\u5b57\u7b26\u4e32, \u6240\u4ee5\u9700\u8981\u5728\u539f\u7b97\u6cd5\u57fa\u7840\u4e0a\u4fee\u6539\u4e00\u4e0b.\n\n\u6709\u4eba\u8bf4\u7528\u62d3\u5c55 KMP, \u4f46\u662f\u5e76\u6ca1\u5fc5\u8981 ~~\u800c\u4e14\u6211\u4e0d\u4f1a~~.\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f, \u4e24\u4e2a\u5b57\u7b26\u4e32\u64cd\u4f5c\u5b8c\u4e86\u4e4b\u540e, \u8981\u548c\u64cd\u4f5c\u5b8c\u540e\u7684\u5b57\u7b26\u4e32\u4e0e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\u5339\u914d.  \ntest 4 \u5361\u4e86\u90a3\u4e9b\u6ca1\u5b8c\u5168\u7406\u89e3\u9898\u610f\u7684\u4eba\u7684\u505a\u6cd5 ~~(\u6211\u4e5f\u662f\u5176\u4e2d\u4e00\u4e2a)~~\n\n\u6570\u636e:  \n```\n3\nabcde bcdef abcdefg\n```\n\n\u5177\u4f53\u89c1\u4ee3\u7801.\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n;\nchar str[1000001];\nint lps[1000001]; // \u540c\u65f6\u4f5c\u4e3a str[0..i] \u7684\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u5b57\u7b26\u4e32\u7684\u6700\u5927\u957f\u5ea6\nchar ans[1000001]; // \u7b54\u6848\nint len;\nint pos; // \u5339\u914d\u5230\u7684\u4f4d\u7f6e\nint l_ans; // ans \u4e32\u7684\u957f\u5ea6\n\ntemplate <typename T>\ninline T read() {\n    T x = 0;\n    T multiplier = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-') {\n            multiplier = -1;\n        }\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        x = (x << 3) + (x << 1) + (ch & 15);\n        ch = getchar();\n    }\n    return x * multiplier;\n}\n\nint main() {\n    n = read<int>();\n\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%s\", str);\n        len = strlen(str);\n\n        if (i == 1) { // \u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u521d\u59cb ans \u4e32\n            copy(str, str + len, ans);\n            l_ans = len;\n        } else {\n            // \u81ea\u884c\u5339\u914d, \u4e0e\u539f KMP \u7b97\u6cd5\u76f8\u540c, \u8ba1\u7b97\u51fa lps[] \u6570\u7ec4\n            int l = 0;\n            for (int j = 1; j < len; j++) {\n                while (l != 0 && str[j] != str[l]) {\n                    l = lps[l - 1];\n                }\n\n                if (str[j] == str[l]) {\n                    lps[j] = ++l;\n                } else {\n                    lps[j] = 0;\n                }\n            }\n\n            pos = -1;\n            l = 0;\n            // \u6b64\u5904\u6709\u6539\u52a8.\n            // \u56e0\u4e3a\u8981\u6c42\u7684\u662f\u540c\u65f6\u4e3a ans \u7684\u540e\u7f00\u4e0e str (\u5f53\u524d\u5b57\u7b26\u4e32) \u7684\u524d\u7f00\n            // \u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6, \u6240\u4ee5\u5982\u679c\u5339\u914d\u4f4d\u7f6e\u4f7f\u5f97 str \u88ab\u5b8c\u5168\u5305\u56f4, \u90a3\u4e48\n            // \u8fd9\u79cd\u5c31\u662f\u4e0d\u5408\u6cd5\u7684.\n            // \u6bd4\u5982:\n            //        0123456          012\n            // ans = \"abcdefg\", str = \"cde\"\n            // \u6b64\u65f6, \u5339\u914d\u5230\u7684 pos \u4e3a 2, \u4f46\u56e0\u4e3a \"cde\" \u5e76\u4e0d\u662f\u540e\u7f00, \u6240\u4ee5\u820d\n            // \u53bb.\n            // \u4e3a\u4e86\u89e3\u51b3, \u5c31\u4ece ans \u4e32\u7684\u7b2c l_ans - len \u4f4d\u7f6e\u5f00\u59cb\u5339\u914d.\n            // \u5e76\u56e0\u4e3a\u8fd9\u91cc\u662f\u4e0d\u5b8c\u5168\u5339\u914d, \u6700\u540e\u5339\u914d\u5230 l_ans + len - 1 \u7684\u4f4d\u7f6e.\n            // \u76f8\u5f53\u4e8e\u5728 ans \u4e32\u7684\u540e\u9762\u6dfb\u52a0 len \u4e2a\u901a\u914d\u7b26.\n            for (int j = l_ans - len; j < l_ans + len; j++) {\n                while (j < l_ans\n                       && (l >= len || l != 0 && ans[j] != str[l])) {\n                    // \u5931\u914d\n                    // \u5fc5\u987b\u6ee1\u8db3 j < l_ans, \u56e0\u4e3a\u4e00\u65e6\u8d85\u8fc7\u4e86\u539f ans \u4e32\u7684\u6700\u53f3\u7aef,\n                    // \u5c31\u4e0d\u518d\u4f1a\u51fa\u73b0\u5931\u914d\u60c5\u51b5.\n                    l = lps[l - 1];\n                }\n\n                // \u7ee7\u7eed\u5339\u914d\n                if (j >= l_ans || ans[j] == str[l]) {\n                    l++;\n                }\n                // \u5339\u914d\u5b8c\u6bd5\n                if (l == len && j >= l_ans - 1) {\n                    // \u7b2c\u4e00\u6b21\u5339\u914d\u5b8c\u6bd5\u5373\u53ef\u9000\u51fa.\n                    // \u56e0\u4e3a\u8981\u6ee1\u8db3\u4e24\u4e32\u91cd\u53e0\u90e8\u5206\u5c3d\u91cf\u957f.\n                    pos = j - l + 1;\n                    break;\n                }\n            }\n\n            // \u5339\u914d\u5931\u8d25\n            if (pos == -1) {\n                pos = l_ans;\n            }\n\n            // \u4ece pos \u5904\u5f00\u59cb, \u5c06\u65b0\u4e32\u6dfb\u52a0\u5230 ans \u4e32.\n            for (int j = pos, k = 0; k < len; j++, k++) {\n                ans[j] = str[k];\n            }\n            // \u66f4\u65b0\u957f\u5ea6\n            l_ans = pos + len;\n        }\n    }\n\n    cout << ans << '\\n';\n\n    return 0;\n}\n```",
        "postTime": 1565611276,
        "uid": 22227,
        "name": "mraymes",
        "ccfLevel": 7,
        "title": "Solution for Codeforces Problem 1200E - Compress Words"
    }
]