[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u5b9a\u4e00\u9897 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u5728 $k$ \u4e2a\u8282\u70b9\uff08 $a_1$ , $a_2$ , $a_3 \\dots$ \uff09\u4e0a\u5206\u522b\u6709\u4e00\u4e2a\u68cb\u5b50\n\n- \u8fd9 $k$ \u4e2a\u70b9\u6700\u521d\u662f\u9ed1\u8272\u7684\uff0c\u5176\u5b83\u7684\u662f\u767d\u8272\u7684\u3002\u4f60\u9700\u8981\u6309 $a_1,a_2 \\dots a_k,a_1,a_2,\\dots$  \u7684\u987a\u5e8f\u4f9d\u6b21\u79fb\u52a8\u8fd9 $k$ \u4e2a\u68cb\u5b50\n\n- \u68cb\u5b50\u6bcf\u6b21\u79fb\u52a8\u4e00\u683c\uff0c\u79fb\u52a8\u7684\u76ee\u6807\u70b9\u4e0d\u80fd\u662f\u9ed1\u8272\uff0c\u68cb\u5b50\u7ecf\u8fc7\u7684\u7684\u70b9\u4f1a\u88ab\u67d3\u6210\u9ed1\u8272\n\n- \u6c42\u81f3\u591a\u80fd\u79fb\u52a8\u591a\u5c11\u6b65\n\n- $1 \\leq k \\leq n \\leq 2 \\times 10^5$\n\n## \u9898\u89e3\n\n\u6b63\u5411\u8003\u8651\u4e0d\u65b9\u4fbf\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u4e00\u4e2a\u70b9\u5230\u5e95\u5e94\u8be5\u5411\u4e0a\u8d70\u66f4\u4f18\u8fd8\u662f\u5411\u4e0b\u8d70\u66f4\u4f18\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u70b9\u9700\u8981\u79fb\u52a8\u591a\u5c11\u6b65\uff0c\u5c31\u4f1a\u597d\u89e3\u51b3\u5f97\u591a\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u77e5\u6bcf\u4e2a\u70b9\u7684\u76ee\u6807\u6b65\u6570\uff0c\u90a3\u4e48\u53ef\u4ee5\u4efb\u9009\u4e00\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u5bf9\u6811\u8fdb\u884c dfs\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u7edf\u8ba1\u8fd9\u4e2a\u8282\u70b9\u5411\u4e0b\u8d70\u81f3\u591a\u80fd\u8d70\u591a\u5c11\u6b65\u3002\n\n\u5728\u9012\u5f52\u8fd4\u56de\u65f6\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u6709\u68cb\u5b50\uff0c\u5c31\u8fdb\u884c\u5982\u4e0b\u5224\u65ad\uff1a\n\n- \u5982\u679c\u5411\u4e0b\u8d70\u80fd\u8d70\u7684\u6700\u5927\u6b65\u6570\u5927\u4e8e\u5f53\u524d\u68cb\u5b50\u8fd8\u9700\u8981\u8d70\u7684\u6b65\u6570\uff0c\u5c31\u76f4\u63a5\u5411\u4e0b\u8d70\n\n- \u5426\u5219\u5c31\u5c1d\u8bd5\u5411\u4e0a\u8d70\u5230\u7236\u8282\u70b9\uff0c\u5982\u679c\u7236\u8282\u70b9\u5df2\u7ecf\u662f\u9ed1\u8272\u6216\u5f53\u524d\u8282\u70b9\u5df2\u7ecf\u662f\u6811\u6839\uff0c\u5219\u8868\u660e\u8fd9\u9897\u68cb\u5b50\u4e0d\u53ef\u80fd\u5b8c\u6210\u76ee\u6807\n\n\u4f18\u5148\u5411\u4e0b\u8d70\u7684\u8d2a\u5fc3\u4e00\u5b9a\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u9012\u5f52\u8fd4\u56de\u65f6\uff0c\u4e00\u5b9a\u662f\u6309\u7167\u6df1\u5ea6\u4ece\u5927\u5230\u5c0f\u5904\u7406\uff0c\u5373\u8d70\u5230\u5f53\u524d\u8282\u70b9\u65f6\uff0c\u5176\u5b50\u6811\u4e2d\u6ca1\u6709\u68cb\u5b50\uff0c\u6216\u8005\u5b50\u6811\u4e2d\u7684\u68cb\u5b50\u90fd\u5df2\u7ecf\u8fbe\u6210\u8981\u6c42\uff0c\u800c\u5411\u4e0b\u8d70\u53ea\u4f1a\u5f71\u54cd\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u800c\u5bf9\u672a\u5904\u7406\u7684\u8282\u70b9\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u80fd\u5411\u4e0b\u8d70\u65f6\uff0c\u5411\u4e0b\u8d70\u4e00\u5b9a\u6700\u4f18\u3002\n\n\n\u663e\u7136\u6b65\u6570\u8d8a\u591a\uff0c\u8981\u6c42\u8d8a\u96be\u4ee5\u5b9e\u73b0\uff0c\u4e8c\u5206\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\n\n\u4ee3\u7801\uff1a\n\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>\nvoid read(T &res) {\n\tres=0;bool f=false;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=true; ch=getchar();}\n\twhile(ch>='0'&&ch<='9') res=(res<<3)+(res<<1)+(ch^48),ch=getchar();\n\tres=f?-res:res;\n}\ntemplate<typename T,typename ...Args>\nvoid read(T &res,Args &...args) {read(res); read(args...);}\ntemplate<typename T>\nvoid write(T x) {if(x<0) putchar('-'),x=-x; if(x>9) write(x/10); putchar(x%10+'0');}\ntemplate<typename T>\ninline void writeln(T x) {write(x);putchar('\\n');}\ntemplate<typename T,typename ...Args>\nvoid write(T x,Args ...args) {write(x); putchar(' '); write(args...);}\ntemplate<typename T,typename ...Args>\nvoid writeln(T x,Args ...args) {write(x); putchar('\\n'); writeln(args...);}\n#define MAXN 200001\nclass Edge {\npublic:\n\tEdge() {\n\t\tto=next=len=0;\n\t}\n\tint to,next,len;\n};\nclass Graph {\npublic:\n\tGraph() {\n\t\tmemset(g,0,sizeof(g));\n\t\tmemset(head,0,sizeof(head));\n\t\ttot=0;\n\t}\n\tinline void clear(int n) {\n\t\tmemset(head,0,sizeof(int)*(n+1));\n\t\tmemset(g,0,sizeof(Edge)*(tot+1));\n\t\ttot=0;\n\t}\n\tinline void addEdge(int from,int to,int len) {\n\t\tg[++tot].to=to;g[tot].next=head[from];g[tot].len=len;head[from]=tot;\n\t\tg[++tot].to=from;g[tot].next=head[to];g[tot].len=len;head[to]=tot;\n\t}\n\tEdge g[MAXN<<1];\n\tint head[MAXN],tot;\n}g;\nint n,k,need[MAXN],dep[MAXN],a[MAXN];\nbool vis[MAXN];\nbool dfs(int u,int fa) {\n\tdep[u]=0;\n\tfor(int i=g.head[u];i;i=g.g[i].next) {\n\t\tint v=g.g[i].to;\n\t\tif(v==fa) continue;\n\t\tif(!dfs(v,u)) return false;\n\t\tif(!vis[v]) dep[u]=max(dep[u],dep[v]+1);\n\t}\n\tif(dep[u]>=need[u]) {\n\t\treturn true;\n\t}\n\tif(dep[u]<need[u]) {\n\t\tif(!fa||vis[fa]) return false;\n\t\tvis[fa]=true;\n\t\tneed[fa]=need[u]-1;\n\t\tneed[u]=0;\n\t}\n\treturn true;\n}\ninline bool check(int len) {\n\tmemset(vis,0,sizeof(bool)*(n+1));\n\tmemset(need,0,sizeof(int)*(n+1));\n\tvis[0]=1;\n\tfor(int i=1;i<=k;i++) {\n\t\tneed[a[i]]=len/k;\n\t\tvis[a[i]]=true;\n\t}\n\tfor(int i=1;i<=len%k;i++) {\n\t\t++need[a[i]];\n\t}\n\treturn dfs(1,0);\n}\ninline void solve() {\n\tread(n);\n\tfor(int i=1;i<n;i++) {\n\t\tint u=0,v=0;\n\t\tread(u,v);\n\t\tg.addEdge(u,v,1);\n\t}\n\tread(k);\n\tfor(int i=1;i<=k;i++) {\n\t\tread(a[i]);\n\t}\n\tint l=0,r=n,res=0;\n\twhile(l<=r) {\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) {\n\t\t\tres=mid;\n\t\t\tl=mid+1;\n\t\t} else {\n\t\t\tr=mid-1;\n\t\t}\n\t}\n\tg.clear(n);\n\twriteln(res);\n}\nint main() {\n\tint T=0;\n\tread(T);\n\twhile(T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1676884309,
        "uid": 180576,
        "name": "Transparent",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1795F \u3010Blocking Chips\u3011"
    },
    {
        "content": "\u7b54\u6848\u5177\u6709\u53ef\u4e8c\u5206\u6027\u3002\n\n\u7531\u4e8e\u4e0e $n$ \u548c $k$ \u6709\u5173\u7684 DP \u5728\u6570\u636e\u8303\u56f4\u7684\u7ea6\u675f\u4e0b\u4e0d\u592a\u53ef\u80fd\u5b9e\u73b0\uff0c\u6240\u4ee5\u8003\u8651\u8d2a\u5fc3\u3002\n\n\u7136\u540e\u53d1\u73b0\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848 $x$\uff0c\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u68cb\u5b50\u7684\u79fb\u52a8\u6b21\u6570\u3002\n\n\u8003\u8651\u6700\u5e95\u90e8\u7684\u68cb\u5b50\uff0c\u6700\u4f18\u65b9\u6848\u662f\u5f80\u4e0b\u79fb\u52a8\uff0c\u907f\u514d\u4e0e\u4e0a\u9762\u7684\u68cb\u5b50\u4ea7\u751f\u51b2\u7a81\uff0c\u5e76\u4e14\u79fb\u52a8\u5230\u6700\u6df1\u7684\u53f6\u5b50\u3002\n\n\u5982\u679c\u5176\u4e0d\u80fd\u79fb\u52a8\u5230\u6df1\u5ea6\u6700\u6df1\u7684\u53f6\u5b50\uff0c\u90a3\u4e48\u53ea\u80fd\u5f80\u7236\u4eb2\u4e0a\u79fb\u52a8\u4e00\u683c\uff0c\u7136\u540e\u5f53\u5176\u7236\u4eb2\u6210\u4e3a\u6df1\u5ea6\u6700\u6df1\u7684\u68cb\u5b50\u65f6\uff0c\u518d\u5411\u4e0b\u79fb\u52a8\uff0c\u5982\u6b64\u5faa\u73af\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u79fb\u52a8\u4e0d\u5230\u7236\u4eb2\uff0c\u663e\u7136\u662f\u65e0\u89e3\u7684\u3002\n\n\u8003\u8651\u5982\u4f55\u5904\u7406\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u8bbe $f_u$ \u8868\u793a $u$ \u70b9\u662f\u5426\u6709\u68cb\u5b50\uff0c\u4ee5\u53ca $rev_u$ \u8868\u793a $u$ \u8fd8\u9700\u8981\u8d70\u591a\u5c11\u6b65\uff0c$dep_u$ \u8868\u793a $u$ \u5411\u4e0b\u8d70\u6700\u8fdc\u53ef\u8d70\u7684\u8ddd\u79bb\u3002\n\n\u4e09\u8005\u90fd\u662f\u53ef\u4ee5\u81ea\u5e95\u5411\u4e0a\u63a8\u8fc7\u6765\u7684\u3002\n\n\u7531\u4e8e\u8fd8\u6ca1\u6709\u9898\u89e3\uff0c\u6211\u653e\u4e00\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\ninline void dfs(int u,int fa)\n{\n\tgra(i,u)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v!=fa)\n\t\t{\n\t\t\tdfs(v,u);\n\t\t    if(!flag[v]) dep[u]=Max(dep[u],dep[v]+1);//\u5904\u7406\u6700\u8fdc\u53ef\u8d70\u7684\u8ddd\u79bb \n\t\t}\n\t}\n\tif(!flag[u]) return;//\u6ca1\u6709\u68cb\u5b50\u65e0\u9700\u5904\u7406 \n\tif(rev[u]<=dep[u])//\u53ef\u4ee5\u5728\u5b50\u6811\u5185\u81ea\u884c\u89e3\u51b3 \n\t{\n\t\trev[u]=0;\n\t\treturn;\n\t}\n\tif(!flag[fa])//\u5426\u5219\uff0c\u9700\u8981\u79fb\u52a8\u5230\u7236\u4eb2\uff0c\u5224\u65ad\u7236\u4eb2\u662f\u5426\u6709\u68cb\u5b50 \n\t{\n\t\tflag[fa]=true;//\u5c06\u7236\u4eb2\u8bbe\u6210\u6709\u68cb\u5b50 \n\t\trev[fa]=rev[u]-1;//\u79fb\u52a8\u4e86\u4e00\u6b21\uff0c\u7236\u4eb2\u9700\u8981\u79fb\u52a8 rev-1 \u6b21 \n\t\trev[u]=0;\n\t}\n\treturn;\n}\n\ninline bool check(int x)\n{\n\tflag[0]=true;\n\trep(i,1,n) flag[i]=false,dep[i]=0,rev[i]=0;\n\trep(i,1,k) rev[a[i]]=x/k+(i<=x%k),flag[a[i]]=true;\n\tdfs(1,0);\n\trep(i,1,n) if(rev[i]) return false;\n\treturn true;\n}\n\ninline void solve()\n{\n\tmemset(edge,0,sizeof(edge));\n\tmemset(head,0,sizeof(head));\n\ttot=0;\n\tn=read();\n\trep(i,2,n)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd_edge(u,v),add_edge(v,u);\n\t}\n\tk=read();\n\trep(i,1,k) a[i]=read();\n\tint l=0,r=n,res=0;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) res=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tprintf(\"%d\\n\",res);\n\treturn;\n} \n```",
        "postTime": 1676773806,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u8fd9\u662f\u4e00\u4e2a\u6b63\u7ecf\u7684\u6807\u9898"
    },
    {
        "content": "\u8003\u8651\u5230\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684\u7b54\u6848\uff0c\u6bcf\u4e2a\u68cb\u5b50\u8d70\u7684\u6b65\u6570\u4e5f\u662f\u786e\u5b9a\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4fbf\u53ef\u4ee5\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\u56e0\u4e3a\u5982\u679c\u5f53\u524d\u603b\u6b65\u6570\u80fd\u591f\u5b9e\u73b0\uff0c\u90a3\u4e48\u66f4\u5c0f\u7684\u4e5f\u4e00\u5b9a\u80fd\u5b9e\u73b0\u3002\n\n\u6211\u4eec\u8003\u8651\u4ee5 $1$ \u4e3a\u6839\u3002\n\n\u5148\u8003\u8651\u6700\u4e0b\u9762\u7684\u70b9\u3002\u5982\u679c\u5b83\u80fd\u591f\u5f80\u4e0b\u8d70\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u4f1a\u5f80\u4e0b\u8d70\uff08\u8fd9\u6837\u66f4\u4f18\uff09\u3002\u5426\u5219\u6211\u4eec\u53ea\u80fd\u8d70\u5230\u5b83\u7684\u7236\u4eb2\uff0c\u5e76\u7b49\u5230\u9012\u5f52\u5230\u5b83\u7236\u4eb2\u65f6\u518d\u7ee7\u7eed\u5b89\u6392\u8def\u5f84\u3002\n\n\u5177\u4f53\u7ec6\u8282\uff1a\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $u$ \u6c42\u4e00\u4e2a\u80fd\u591f\u5f80\u4e0b\u8d70\u7684\u6700\u6df1\u7684\u6df1\u5ea6 $dwn_u$\uff0c\u6709 $(v\\in son_u \\& col_v=white)dwn_u=\\max (dwn_v+1)$\u3002\n\n\u6bcf\u4e2a\u70b9\u5b58\u4e00\u4e2a $a_i$ \u8868\u793a\u5b83\u8fd8\u9700\u8981\u8d70 $a_i-1$ \u6b65\u3002\u82e5 $a_i=0$ \u5219\u8868\u793a\u8fd9\u4e2a\u70b9\u662f\u767d\u8272\uff0c\u5426\u5219\u5c31\u662f\u9ed1\u8272\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint head[200010],to[400010],nxt[400010],tot=0;\nvoid add(int x,int y)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\nint b[200010];\nint a[200010];\nint dwn[200010];\nbool flag=0;\nvoid dfs(int u,int f)\n{\n\tfor(int i=head[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(v==f) continue;\n\t\tdfs(v,u);\n\t\tif(!a[v]) dwn[u]=max(dwn[u],dwn[v]+1);\n\t}\n\tif(a[u]>=2&&dwn[u]<a[u]-1)\n\t{\n\t\tif(!a[f]) a[f]=a[u]-1;\n\t\telse flag=1;\n\t}\n}\nbool check(int x)\n{\n\tflag=0;\n\tfor(int i=1;i<=n;i++) a[i]=0,dwn[i]=0;\n\tfor(int i=1;i<=m;i++) a[b[i]]=int(x/m)+bool(i<=x%m)+1;\n\tdfs(1,1);\n\treturn !flag;\n}\nvoid solve()\n{\n\ttot=0; for(int i=1;i<=n;i++) head[i]=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y); add(y,x);\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++) scanf(\"%d\",&b[i]);\n\tint l=0,r=n+1,ans;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) l=mid+1,ans=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--) solve();\n\treturn 0;\n}\n/*\n\n*/\n```\n",
        "postTime": 1676690548,
        "uid": 444135,
        "name": "thostever",
        "ccfLevel": 7,
        "title": "CF1795F\u9898\u89e3"
    }
]