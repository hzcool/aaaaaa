[
    {
        "content": "\u524d\u5929\u665a\u4e0a\u7684\u7206\u809d\u8d5b\uff0c\u56de\u6765\u8865\u9505\u3002\u5f88\u591a\u5927\u4f6c\u5230\u4e86\u8fd9\u9898\u90fd\u4e0d\u5c51\u4e8e\u505a\u4e0b\u53bb\u4e86\uff0c\u6240\u4ee5\u53c8\u662f\u4e00\u573a\u6389\u5206\u8d5b\u3002\n\n\u521a\u5f00\u59cb\u4e0d\u592a\u80fd\u770b\u660e\u767d\u82f1\u6587\u9898\u89e3\uff0c\u611f\u8c22 z7z_Eta \u63d0\u4f9b\u7684\u601d\u8def\u548c\u89e3\u91ca\u3002\n\n~~\u9898\u89e3\u53cd\u6b63\u4e5f\u6ca1\u4eba\u770b\uff0c\u8865\u4e2a\u9505\u81ea\u5df1\u7559\u7740\uff0c\u6015\u5fd8\u4e86\u3002\u3002\u3002~~\n\n### \u9898\u610f\uff1a\n\n>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6392\u5217$a$\uff0c\u518d\u6765\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6392\u5217$b$\uff0c$b$\u8868\u793a\u5b89\u653e\u70b8\u5f39\u7684\u987a\u5e8f\uff0c$b_i$\u8868\u793a\u6bcf\u6b21\u653e\u70b8\u5f39\u7684\u4f4d\u7f6e\u3002\u6bcf\u5b89\u653e\u4e00\u4e2a\u70b8\u5f39\uff0c\u5b83\u4f1a\u8be2\u95ee\u4f60\u6574\u4e2a\u5e8f\u5217$a$\u7684\u503c\u3002\u5373\u628a$a$\u6392\u5217\u7684\u6570\u4f9d\u6b21\u653e\u5165\u96c6\u5408\u4e2d\uff0c\u82e5\u5f53\u524d\u4f4d\u7f6e\u6709\u70b8\u5f39\uff0c\u5219\u53bb\u6389\u96c6\u5408\u4e2d\u7684\u6700\u5927\u503c\uff0c\u6700\u7ec8\u96c6\u5408\u4e2d\u6700\u5927\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u9996\u5148\u4ece\u6837\u4f8b\u4e5f\u80fd\u770b\u51fa\u6765\uff1a**\u7b54\u6848\u662f\u5355\u8c03\u4e0d\u9012\u589e\u7684**\uff0c\u8fd9\u4e2a\u5f88\u91cd\u8981\u3002\u4e5f\u5f88\u597d\u8bc1\uff1a\u82e5\u5f53\u524d\u7b54\u6848\u88ab\u70b8\u6389\u540e\uff0c\u5b83\u5c31\u6c38\u8fdc\u6210\u4e3a\u4e0d\u4e86\u7b54\u6848 \uff0c\u5b83\u8981\u4e48\u88ab\u65b0\u653e\u7684\u70b8\u5f39\u70b8\uff0c\u8981\u4e48\u88ab\u66fe\u7ecf\u70b8\u5b83\u7684\u70b8\u5f39\u70b8\uff0c\u4e0d\u53ef\u80fd\u8d77\u6b7b\u56de\u751f\u3002\n\n\u90a3\u4e48\u7b54\u6848\u4ec0\u4e48\u65f6\u5019\u4f1a\u51cf\u3002\u6211\u4eec\u8003\u8651\u5f53\u524d\u7b54\u6848$x$\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b$x$\u7559\u7740\uff0c\u5c31\u5f97\u4fdd\u8bc1 **\u5b58\u5728\u4e00\u4e2a $i$**\uff0c\u4f7f\u5f97$i$\u540e\u9762 \u201c $\\geq x$ \u7684\u6570 \u201d \u6bd4$i$\u540e\u9762\u7684 \u201c \u70b8\u5f39\u6570 \u201d \u8981\u591a\u3002\u8fd9\u6837\u8bf4\u660e$i$\u540e\u9762\u7684\u70b8\u5f39\u70b8\u4e0d\u5b8c \u201c $\\geq x$ \u7684\u6570 \u201d\uff0c$x$ \u5f53\u7136\u5c31\u53ef\u4ee5\u7559\u4e0b\u4e86\u3002\uff08\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u60f3\u5982\u679c\u540e\u9762\u7684\u70b8\u5f39\u5148\u628a $x$ \u70b8\u4e86\u7559\u4e0b\u66f4\u5927\u7684\u6570\u600e\u4e48\u529e\uff1f\u8fd9\u4e2a\u5c31\u4e0d\u9700\u8981\u8003\u8651\u4e86\uff0c\u56e0\u4e3a\u7b54\u6848\u662f\u5355\u8c03\u7684\uff0c\u65e2\u7136\u4f60\u73b0\u5728\u6b63\u5728\u8003\u8651\u7b54\u6848\u662f\u5426\u4e3a $x$\uff0c\u90a3\u4e48\u8bf4\u660e\u6bd4 $x$ \u5927\u7684\u90a3\u4e9b\u6570\uff0c\u4e4b\u524d\u80af\u5b9a\u662f\u88ab\u70b8\u8fc7\u7684\uff0c\u7ffb\u4e0d\u4e86\u8eab\u3002\uff09\n\n\u663e\u7136\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u4e48\u4e00\u4e2a $i$ \u6ee1\u8db3\u6761\u4ef6\uff0c\u8bf4\u660e**\u4ece\u4efb\u4f55\u4f4d\u7f6e\u5f00\u59cb**\uff0c$x$ \u90fd\u907f\u514d\u4e0d\u4e86\u88ab\u70b8\u7684\u60b2\u5267\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u8981\u51cf\u4e86\uff0c\u8fd9\u91cc\u5f97\u5faa\u73af\u5224\u65ad\uff0c\u56e0\u4e3a\u7b54\u6848\u53ef\u80fd\u51cf\u5c11\u4e0d\u6b62\u4e00\u6b21\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u662f\u5426**\u6240\u6709\u7684\u4f4d\u7f6e**\uff1a \u201c $\\geq x$ \u7684\u6570 \u201d \u5c0f\u4e8e\u7b49\u4e8e \u201c \u70b8\u5f39\u6570 \u201d \uff0c\u82e5\u662f\uff0c\u7b54\u6848 $x$ \u51cf $1$\u3002\u7528\u7ebf\u6bb5\u6811\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\u540e\u9762 \u201c $\\geq x$ \u7684\u6570 \u201d\u51cf\u201c \u70b8\u5f39\u6570 \u201d \uff0c\u7ef4\u62a4\u5168\u5c40\u6700\u5927\u503c\uff0c\u82e5\u6700\u5927\u503c\u5c0f\u4e8e\u7b49\u4e8e$0$\uff0c\u6ee1\u8db3\u6761\u4ef6\uff0c\u7b54\u6848\u51cf\u3002\u6bcf\u6539\u53d8\u4e00\u4e2a $x$\uff0c$x$ \u4f4d\u7f6e\u524d\u9762\u503c\u52a0\u4e00\uff0c\u6bcf\u5b89\u653e\u4e00\u4e2a\u70b8\u5f39\uff0c\u70b8\u5f39\u4f4d\u7f6e\u524d\u9762\u503c\u51cf\u4e00\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\u4e5f\u5f88\u7b80\u5355\uff0c\u8fd9\u662f\u9053\u964d\u667a\u9898\u3002\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#define QWQ cout<<\"QwQ\"<<endl;\n#define ll long long\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#define ls now<<1\n#define rs now<<1|1\nusing namespace std;\nconst int N=301010;\nconst int qwq=1203030;\nconst int inf=0x3f3f3f3f;\n\nint n;\nint ans;\nint a[N],wei[N];\nint tree[qwq],tag[qwq];\n\ninline int read() {\n\tint sum = 0, f = 1; char c = getchar();\n\twhile(c<'0' || c>'9') { if(c=='-') f = -1; c = getchar(); }\n\twhile(c>='0'&&c<='9') { sum = sum * 10 + c - '0'; c = getchar(); }\n\treturn sum * f;\n}\n\ninline void pushdown(int now) {\n\tif(tag[now]==0) return ;\n\ttag[ls] += tag[now]; tag[rs] += tag[now];\n\ttree[ls] += tag[now]; tree[rs] += tag[now];\n\ttag[now] = 0;\n}\n\nvoid insert(int now,int l,int r,int x,int y,int g) {\n\tif(x<=l && r<=y) { tree[now] += g; tag[now] += g; return ; }\n\tpushdown(now);\n\tint mid = l+r >> 1;\n\tif(x<=mid) insert(ls, l, mid, x, y, g);\n\tif(y>mid)  insert(rs, mid+1, r, x, y, g);\n\ttree[now] = max(tree[ls],tree[rs]);\n}\n\nint main() {\n\tint x;\n\tn = read();\n\tfor(int i=1;i<=n;i++) a[i] = read(), wei[ a[i] ] = i;\n\tans = n; cout<<ans<<\" \";\n\tinsert(1, 1, n, 1, wei[n], 1);\n\tfor(int i=1;i<n;i++) {\n\t\tx = read();\n\t\tinsert(1, 1, n, 1, x, -1);\n\t\twhile(tree[1]<=0) {\n\t\t\tans--;\n\t\t\tinsert(1, 1, n, 1, wei[ans], 1);\n\t\t}\n\t\tcout<<ans<<\" \";\n\t}\n\treturn 0;\n}\n```\n\n\u4f46\u613f\u8fd9\u4e0d\u662f\u6211\u9000\u5f79\u524d\u7684\u6700\u540e\u4e00\u7bc7\u9898\u89e3\u3002",
        "postTime": 1584755115,
        "uid": 102726,
        "name": "Flandre_495",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1326E \u3010Bombs\u3011"
    },
    {
        "content": "# [CF1326E](https://www.luogu.com.cn/problem/CF1326E)\n## \u9898\u610f\n\u7ed9\u5b9a$n$\u7684\u6392\u5217\uff0c\u6bcf\u4e2a\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u6700\u591a\u6709\u4e00\u4e2a\u6807\u8bb0\u3002\n\n\u6bcf\u6b21\u5904\u7406\u6392\u5217\u90fd\u4ece\u7a7a\u96c6\u5f00\u59cb\uff0c\u4f9d\u6b21\u5c06\u6570\u52a0\u5165\u96c6\u5408\uff0c\u5982\u679c\u9047\u5230\u4f4d\u7f6e\u4e0a\u6709\u6807\u8bb0\u5219\u5220\u6389\u96c6\u5408\u4e2d\u6700\u5927\u7684\u6570\u3002\n\n\u4f9d\u6b21\u6dfb\u52a0$n$\u4e2a\u6807\u8bb0\uff0c\u6c42\u6bcf\u6b21\u6dfb\u52a0\u6807\u8bb0\u540e\uff0c\u5904\u7406\u6392\u5217\u540e\u5269\u4e0b\u7684\u6700\u5927\u6570\u3002\n\n## \u601d\u8def\n### \u6821\u9a8c\u7b54\u6848\n\u5982\u679c\u5f53\u524d\u6700\u5927\u7684$i$\u4e2a\u6570\u88ab\u5220\u9664\u4e86\uff0c\u90a3\u4e48\u5728\u6dfb\u52a0\u4e00\u4e2a\u6807\u8bb0\u540e\uff0c\u8fd9$i$\u4e2a\u6570\u80af\u5b9a\u8fd8\u662f\u4f1a\u88ab\u5220\u9664\uff0c\u6240\u4ee5\u7b54\u6848\u662f\u4e0d\u589e\u7684\u3002\n\n### \u6821\u9a8c\u7b56\u7565\n\u4ee4\u6700\u5927$i$\u4e2a\u6570\u7684\u4f4d\u7f6e\u6309\u987a\u5e8f\u4f9d\u6b21\u4e3a$p_1$\u2026\u2026$p_i$\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a$i$\u6570\u4f1a\u88ab\u5220\u9664\uff0c\u7b49\u4ef7\u4e8e\u6709$i$\u4e2a\u6807\u8bb0\u7684\u4f4d\u7f6e $\\geq p_1$\u3001\u6709$i -1$\u4e2a\u6807\u8bb0\u7684\u4f4d\u7f6e $\\geq p_i$ \u3001\u2026\u2026 \u3001\u67091\u4e2a\u6807\u8bb0\u7684\u4f4d\u7f6e$\\geq p_i$\u3002\n\n## \u52a0\u901f\n\u7ad9\u5728\u6bcf\u4e2a\u4f4d\u7f6e$p$\u7684\u89d2\u5ea6\u6765\u8003\u8651\uff0c\u5c31\u662f\u4ece$p$\u8d77\u9760\u53f3\u7684\u6807\u8bb0\u6570\u8981\u4e0d\u5c11\u4e8e\u6570\u7684\u6570\u91cf\u3002\n#### \u6bcf\u6b21\u589e\u52a0\u6807\u8bb0\u6216\u8005\u6570\u65f6\uff0c\u90fd\u6709\u4e00\u6bb5\u8fde\u7eed\u4f4d\u7f6e\u4e0a\u7684\u503c\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u8fdb\u884c\u52a0\u901f\u3002\n### \u4ee3\u7801\u5982\u4e0b \n```cpp\n#include <iostream>\n\nusing namespace std;\n\nconst int kMaxN = 300001;\n\nstruct T {  // \u7ebf\u6bb5\u6811\u8282\u70b9\n  int v;    // \u533a\u95f4\u7d2f\u52a0\u503c\n  int d;    // \u533a\u95f4\u6700\u5c0f\u503c\n} t[kMaxN * 4];\nint p[kMaxN];\nint n, x, a;\n\nvoid Add(int i, int ml, int mr, int nl, int nr, int v) {  // \u8303\u56f4\u589e\u52a0\n  if (ml == nl && mr == nr) {                             // \u533a\u95f4\u5339\u914d\n    t[i].v += v;                                          // \u589e\u52a0\u7d2f\u8ba1\u503c\n    t[i].d += v;                                          // \u589e\u52a0\u6700\u5c0f\u503c\n    return;\n  }\n  int m = (ml + mr) >> 1;\n  if (nl <= m) {  // \u5de6\u534a\u533a\u95f4\u7d2f\u52a0\n    Add(i * 2, ml, m, nl, min(nr, m), v);\n  }\n  if (nr > m) {  // \u53f3\u534a\u533a\u95f4\u7d2f\u52a0\n    Add(i * 2 + 1, m + 1, mr, max(nl, m + 1), nr, v);\n  }\n  t[i].d = min(t[i * 2].d, t[i * 2 + 1].d) + t[i].v;  // \u66f4\u65b0\u533a\u95f4\u6700\u5c0f\u503c\n}\n\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> x;\n    p[x] = i;  // \u8bb0\u5f55\u4f4d\u7f6e\n  }\n  a = n + 1;  // \u521d\u59cb\u5316\u7b54\u6848\n  for (int i = 1; i <= n; i++) {\n    while (t[1].d >= 0) {  // \u68c0\u67e5\u7b54\u6848\u8303\u56f4\u6700\u5c0f\u503c\n      a--;\n      Add(1, 1, n, 1, p[a], -1);  // \u589e\u52a0\u6570\u7684\u6570\u91cf\n    }\n    cout << a << \" \";\n    cin >> x;\n    Add(1, 1, n, 1, x, 1);  // \u589e\u52a0\u6807\u8bb0\u7684\u6570\u91cf\n  }\n  return 0;\n}\n```\n## \u590d\u6742\u5ea6\u5206\u6790\n### \u65f6\u95f4\n\u6570\u548c\u6807\u8bb0\u5206\u522b\u589e\u52a0$O(n)$\u6b21\uff0c\u6bcf\u6b21\u6dfb\u52a0$O(log_2 n)$\uff0c\u603b\u5171$O(n log2 n)$\u3002\n\n### \u7a7a\u95f4\n\u8bb0\u5f55\u6570\u7684\u4f4d\u7f6e$O(n)$\u3002\n\n\u7ebf\u6bb5\u6811\u7edf\u8ba1$O(n)$\u3002\n\n\u603b\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$\u3002 ",
        "postTime": 1598102970,
        "uid": 369251,
        "name": "\u80d6\u5934\u9c7c\u5b66\u5458",
        "ccfLevel": 5,
        "title": "CF1326E"
    },
    {
        "content": "\u601d\u7ef4\u9898\u6740\u6211\uff01\u73b0\u573a$^*2600$\u7684\u72b6\u538bDP\u90fd\u4f1a\u505a\uff0c$^*2400$\u7684\u601d\u7ef4\u9898\u5c31\u4e0d\u4f1a\u4e86\uff0c\u770b\u6765\u662fwtcl/ll\n\n>### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF1326E) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/1326/problem/E)\n\n>\u7ed9\u5b9a$2$\u4e2a$1\\sim n$\u7684\u6392\u5217$a,b$\u3002$a$\u4e0a\u67d0\u4e9b\u4f4d\u7f6e\u4f1a\u5b58\u5728\u70b8\u5f39\u3002\u5bf9\u4e8e\u67d0\u4e9b\u4f4d\u7f6e\u6709\u70b8\u5f39\u7684$a$\uff0c\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u521d\u59cb\u4e3a\u7a7a\uff0c\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u6574\u4e2a\u6392\u5217$a$\uff0c\u6bcf\u5230\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u5c31\u5c06\u6b64\u4f4d\u7f6e\u4e0a\u7684\u6570\u538b\u8fdb\u96c6\u5408\uff0c\u82e5\u6b64\u4f4d\u7f6e\u6709\u70b8\u5f39\u5c31\u628a\u96c6\u5408\u4e2d\u6700\u5927\u7684\u6570\u5f39\u51fa\uff0c\u6211\u4eec\u79f0\u6700\u7ec8\u96c6\u5408\u4e2d\u6700\u5927\u7684\u5143\u7d20\u4e3a$a$\u7684\u7ed3\u679c\u3002$\\forall i\\in[0,n)$\uff0c\u6c42\u82e5\u5728$\\forall j\\in[1,i],b_i$\u8fd9\u4e9b\u4f4d\u7f6e\u653e\u4e0b\u70b8\u5f39\uff0c\u7ed3\u679c\u662f\u591a\u5c11\u3002\n\n>$n\\in\\left[1,3\\times10^5\\right]$\u3002\n\n\u663e\u7136\uff0c\u4f9d\u6b21\u7b97\u6bcf\u4e2a\u7ed3\u679c\u7684\u8bdd\uff0c\u7b2c$i$\u6b21\u88ab\u5f39\u51fa\u7684\u96c6\u5408\u662f\u7b2c$i+1$\u6b21\u88ab\u5f39\u51fa\u7684\u96c6\u5408\u7684\u5b50\u96c6\uff0c\u5373\u4eca\u671d\u88ab\u5f39\u51fa\uff0c\u6c38\u8fdc\u5c31\u4e0d\u4f1a\u590d\u6d3b\u4e86\u3002\u53ef\u4ee5\u63a8\u51fa\u8fd9$n$\u4e2a\u7ed3\u679c\u975e\u4e25\u683c\u5355\u8c03\u9012\u51cf\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5two-pointers\uff0c\u7ef4\u62a4\u76ee\u524d\u6700\u5927\u7684\u6ca1\u6709\u88ab\u5f39\u51fa\u7684\u6570$now$\uff0c\u521d\u59cb\u65f6$now=n$\uff0c\u6bcf\u6b21\u7b97\u7b54\u6848\u65f6\u4e0d\u505c\u5730\u4ee4$now=now-1$\u76f4\u5230$now$\u6ca1\u6709\u88ab\u5f39\u51fa\u3002\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5feb\u901f\u5224\u65ad$now$\u662f\u5426\u88ab\u5f39\u51fa\u3002\n\n\u5982\u679c\u771f\u5c31\u4e00\u76f4\u5728\u60f3$now$\u88ab\u5f39\u51fa\u7684\u5145\u8981\u6761\u4ef6\uff0c\u606d\u559c\u4f60\uff0c\u4f60\u88ab\u9b54\u6cd5\u6740\u6b7b\u4e86\u3002\u4e0d\u96be\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u65e0\u8bba\u4f55\u65f6\uff0c\u53ea\u8981\u4f60\u6b63\u5728\u8003\u8651\u5224\u65ad$now$\u662f\u5426\u88ab\u5f39\u51fa\uff0c\u90a3\u4e48\u4e00\u5b9a\u6240\u6709$>now$\u7684\u6570\u5df2\u7ecf\u786e\u8ba4\u88ab\u5f39\u51fa\u4e86\uff08\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u90a3\u6837\uff0c$now$\u81ea\u51cf\u7684\u8fc7\u7a0b\u5c31\u4f1a\u5728\u67d0\u4e2a$>now$\u7684\u6570\u5904\u505c\u4e0b\uff09\u3002\u4e8e\u662f**\u6211\u4eec\u6240\u8003\u8651\u7684**$now$\u88ab\u5f39\u51fa\uff0c\u5176\u5b9e\u7b49\u4ef7\u4e8e\u6240\u6709$\\geq now$\u7684\u6570\u90fd\u88ab\u5f39\u51fa\u3002\u8fd9\u4e2a\u4e1c\u897f\u7684\u5145\u8981\u6761\u4ef6\u770b\u4e0a\u53bb\u5bb9\u6613\u63a2\u7d22\u4e00\u70b9\uff08\u7136\u9e45\u7684\u786e\u662f\u8fd9\u6837\uff09\u3002\n\n\u4e0b\u9762\u6211\u4eec\u6765\u63a2\u7d22\u6240\u6709$\\geq now$\u7684\u6570\u90fd\u88ab\u5f39\u51fa\u7684\u5145\u8981\u6761\u4ef6\u3002\u8003\u8651\u6bcf\u4e2a$\\geq now$\u7684\u6570$a_x$\uff0c\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e2a\u5728$a_x$\u53f3\u8fb9\u4e14$\\geq now$\u7684\u6570$a_y$\uff08\u5305\u62ec$a_x$\u81ea\u5df1\uff09\uff0c\u5f39\u51fa\u5b83\u4eec\u7684\u70b8\u5f39\u5728$a_y$\u53f3\u8fb9\uff08\u5305\u62ec$a_y$\u4f4d\u7f6e\u4e0a\uff09\uff0c\u7ed3\u5408$a_y$\u5728$a_x$\u53f3\u8fb9\u53ef\u4ee5\u5f97\u5230\u5f39\u51fa\u5b83\u4eec\u7684\u70b8\u5f39\u4e00\u5b9a\u5728$a_x$\u53f3\u8fb9\uff08\u5305\u62ec$a_x$\u4f4d\u7f6e\u4e0a\uff09\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u6240\u6709\u5728$a_x$\u53f3\u8fb9\u4e14$\\geq now$\u7684\u6570\uff08\u5305\u62ec$a_x$\u81ea\u5df1\uff09\u90fd\u88ab\u5f39\u51fa\u7684\u4e00\u4e2a\u5f88\u5f31\u7684\u5fc5\u8981\u6761\u4ef6\uff1a$a_x$\u53f3\u8fb9\u7684\u70b8\u5f39\uff08\u5305\u62ec$a_x$\u4f4d\u7f6e\u4e0a\uff09\u6570\u91cf\u4e0d\u4f4e\u4e8e\u5728$a_x$\u53f3\u8fb9\u4e14$\\geq now$\u7684\u6570\uff08\u5305\u62ec$a_x$\u81ea\u5df1\uff09\u7684\u6570\u91cf\u3002\u5145\u5206\u6027\u663e\u7136\u4e0d\u6ee1\u8db3\u3002\n\n\u4e0d\u8fc7\uff0c\u5982\u679c\u5c06$\\forall x(a_x\\geq now)$\uff0c\u6240\u6709\u5728$a_x$\u53f3\u8fb9\u4e14$\\geq now$\u7684\u6570\uff08\u5305\u62ec$a_x$\u81ea\u5df1\uff09\u90fd\u88ab\u5f39\u51fa\u7684\u8fd9\u4e48\u591a\u5fc5\u8981\u6761\u4ef6\u5408\u5e76\u8d77\u6765\uff0c\u5f97\u5230\u6240\u6709$\\geq now$\u7684\u6570\u90fd\u88ab\u5f39\u51fa\u7684\u4e00\u4e2a\u5fc5\u8981\u6761\u4ef6\uff1a$\\forall x(a_x\\geq now)$\uff0c$a_x$\u53f3\u8fb9\u7684\u70b8\u5f39\uff08\u5305\u62ec$a_x$\u4f4d\u7f6e\u4e0a\u7684\uff09\u6570\u91cf\u4e0d\u4f4e\u4e8e\u5728$a_x$\u53f3\u8fb9\u4e14$\\geq now$\u7684\u6570\uff08\u5305\u62ec$a_x$\u81ea\u5df1\uff09\u7684\u6570\u91cf\u3002\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u6761\u4ef6\u4f3c\u4e4e\u5f88\u5f3a\uff0c\u4e8e\u662f\u6211\u4eec\u8bd5\u56fe\u8bc1\u660e\u5b83\u7684\u5145\u5206\u6027\u3002\u7136\u540e\u771f\u5c31\u8bc1\u51fa\u6765\u4e86\uff01\n\n\u5145\u5206\u6027\u8bc1\u660e\uff08\u611f\u6027\uff09\uff1a\u627e\u5230$a_x=n$\uff0c\u663e\u7136\uff0c$a_x$\u53f3\u8fb9\uff08\u5305\u62ec$a_x$\u4f4d\u7f6e\u4e0a\uff09\u7684\u6700\u5de6\u8fb9\u7684\u70b8\u5f39\u4e0e$a_x$\u5339\u914d\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u5c06\u8fd9\u4e2a\u70b8\u5f39\u6254\u6389\uff0c\u5e76\u5c06$a_x$\u6254\u51fa\u6392\u5217\uff0c\u4e24\u8fb9\u6328\u7d27\u5f62\u6210\u4e00\u4e2a\u65b0\u7684$1\\sim n-1$\u7684\u6392\u5217\u3002$a_x$\u5de6\u8fb9\u6240\u6709$\\geq now$\u7684\u6570\u53f3\u8fb9$\\geq now$\u7684\u6570\uff08\u5305\u62ec\u81ea\u5df1\uff09\u6570\u91cf$-1$\uff0c\u53f3\u8fb9\u7684\u70b8\u5f39\uff08\u5305\u62ec\u81ea\u5df1\u4f4d\u7f6e\u4e0a\uff09\u6570\u91cf$-1$\uff1b$a_x$\u53f3\u8fb9\u3001\u70b8\u6389$a_x$\u7684\u70b8\u5f39\u5de6\u8fb9\uff08\u5305\u62ec\u70b8\u5f39\u4f4d\u7f6e\u4e0a\uff09\u6240\u6709$\\geq now$\u7684\u6570\uff0c\u53f3\u8fb9$\\geq now$\u7684\u6570\uff08\u5305\u62ec\u81ea\u5df1\uff09\u7684\u6570\u91cf\u4e0d\u53d8\uff0c\u7531\u4e8e$a_x$\u4e0e\u70b8\u5f39\u4e4b\u95f4\u6ca1\u6709\u70b8\u5f39\uff0c\u6240\u4ee5\u5b83\u4eec\u53f3\u8fb9\u7684\u70b8\u5f39\uff08\u5305\u62ec\u81ea\u5df1\u4f4d\u7f6e\u4e0a\uff09\u6570\u91cf\u81f3\u5c11\u5269$a_x$\u539f\u6765\u53f3\u8fb9\u70b8\u5f39\uff08\u5305\u62ec\u81ea\u5df1\u4f4d\u7f6e\u4e0a\uff09\u7684\u6570\u91cf$-1$\uff1b\u70b8\u5f39\u53f3\u8fb9\u6240\u6709$\\geq now$\u7684\u6570\u53f3\u8fb9$\\geq now$\u7684\u6570\uff08\u5305\u62ec\u81ea\u5df1\uff09\u7684\u6570\u91cf\u3001\u70b8\u5f39\uff08\u5305\u62ec\u81ea\u5df1\u4f4d\u7f6e\u4e0a\uff09\u6570\u91cf\u90fd\u6ca1\u53d8\u3002\u7531\u6b64\u770b\u6765\u6761\u4ef6\u4f9d\u7136\u6ee1\u8db3\u3002\u4e8e\u662f\u539f\u8bc1\u660e\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u89c4\u6a21$-1$\u7684\u8bc1\u660e\u9898\uff0c\u53ef\u4ee5\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u52a0\u4ee5\u8bc1\u660e\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u63a5\u4e0b\u6765\u5c31\u597d\u529e\u4e86\u3002\u8bbe$a_i$\u53f3\u8fb9$\\geq now$\u7684\u6570\uff08\u5305\u62ec$a_i$\u81ea\u5df1\uff09\u6709$grt_i$\u4e2a\uff0c\u53f3\u8fb9\u7684\u70b8\u5f39\uff08\u5305\u62ec$a_i$\u4f4d\u7f6e\u4e0a\uff09\u6709$bmb_i$\u4e2a\u3002\u90a3\u4e48$\\forall x(a_x\\geq now)$\uff0c$a_x$\u53f3\u8fb9\u7684\u70b8\u5f39\uff08\u5305\u62ec$a_x$\u4f4d\u7f6e\u4e0a\u7684\uff09\u6570\u91cf\u4e0d\u4f4e\u4e8e\u5728$a_x$\u53f3\u8fb9\u4e14$\\geq now$\u7684\u6570\uff08\u5305\u62ec$a_x$\u81ea\u5df1\uff09\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u5199\u6210$\\forall x(a_x\\geq now),bmb_x\\geq grt_x$\uff0c\u5373$\\forall x(a_x\\geq now),bmb_x-grt_x\\geq0$\u3002\u4e8e\u662f\u6211\u4eec\u9700\u8981\u7ef4\u62a4$\\forall i\\in[1,n],bmb_i-grt_i$\u3002\u5224\u65ad$now$\u662f\u5426\u88ab\u5f39\u51fa\u65f6\u53ea\u9700\u5224\u65ad\u5168\u5c40\u6700\u5c0f\u503c\u662f\u5426$\\geq0$\uff0c\u6bcf\u5f53$now=now-1$\u65f6\uff08\u521d\u59cb$now=n$\u65f6\u4e5f\u8981\uff09\u5c31\u5c06\u4f4d\u7f6e$a^{-1}_{now}$\u4e0a\u7684$bmb_{a^{-1}_{now}}-grt_{a^{-1}_{now}}$\u6fc0\u6d3b\uff08\u5373\u4eca\u540e\u7b97\u8fdb\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u6fc0\u6d3b\u4e4b\u524d\u61d2\u6807\u8bb0\u53ef\u4ee5\u5e2e\u5fd9\u4fdd\u5b58$bmb_{a^{-1}_{now}}-grt_{a^{-1}_{now}}$\uff09\u5e76\u4ee4$\\forall i\\in\\left[1,a^{-1}_{now}\\right],grt_i=grt_i+1$\uff0c\u6bcf\u5f53\u65b0\u589e\u4e00\u4e2a\u70b8\u5f39$b_x$\u5c31\u4ee4$\\forall i\\in[1,b_x],bmb_i=bmb_i+1$\u3002\u8fd9\u53ea\u9700\u8981\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u589e\u52a0\u3001\u5168\u5c40\u67e5\u8be2\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u5b9e\u73b0\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int N=300000;\nint n;//\u6392\u5217\u957f\u5ea6 \nint a[N+1]/*\u6392\u5217*/,b[N+1]/*\u70b8\u5f39\u6dfb\u52a0\u987a\u5e8f*/;\nint pos[N+1];//pos[i]\u4e3a\u6570i\u5728a\u4e2d\u7684\u4f4d\u7f6e \nstruct segtree{//\u7ebf\u6bb5\u6811 \n\tstruct node{int l,r,mn_dif/*\u6b64\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5185bmb[i]-grt[i]\u7684\u6700\u5c0f\u503c*/,lz/*\u84dd\u6807\u8bb0*/;}nd[N<<2];\n\t#define l(p) nd[p].l\n\t#define r(p) nd[p].r\n\t#define mn_dif(p) nd[p].mn_dif\n\t#define lz(p) nd[p].lz\n\tvoid bld(int l=1,int r=n,int p=1){//\u5efa\u6811 \n\t\tl(p)=l;r(p)=r;mn_dif(p)=inf;/*\u4e00\u5f00\u59cb\u90fd\u662f\u672a\u6fc0\u6d3b\u72b6\u6001*/lz(p)=0;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tbld(l,mid,p<<1);bld(mid+1,r,p<<1|1);\n\t}\n\tvoid init(){bld();}//\u521d\u59cb\u5316 \n\tvoid sprup(int p){mn_dif(p)=min(mn_dif(p<<1),mn_dif(p<<1|1));}//\u4e0a\u4f20\u8282\u70b9\u4fe1\u606f \n\tvoid sprdwn(int p){//\u4e0b\u4f20\u61d2\u6807\u8bb0 \n\t\tif(lz(p)){\n\t\t\tmn_dif(p<<1)+=lz(p);mn_dif(p<<1|1)+=lz(p);\n\t\t\tlz(p<<1)+=lz(p);lz(p<<1|1)+=lz(p);\n\t\t\tlz(p)=0;\n\t\t}\n\t}\n\tvoid on(int x,int p=1){//\u6fc0\u6d3b\u4f4d\u7f6ex \n\t\tif(l(p)==r(p)){mn_dif(p)=lz(p)/*\u4e4b\u524d\u7684bmb[l(p)]-grt[l(p)]\u4fdd\u5b58\u5728lz(p)\u91cc*/;return;}\n\t\tsprdwn(p);\n\t\tint mid=l(p)+r(p)>>1;\n\t\ton(x,p<<1|(x>mid));\n\t\tsprup(p);\n\t}\n\tvoid add(int l,int r,int v,int p=1){//\u533a\u95f4\u589e\u52a0 \n\t\tif(l<=l(p)&&r>=r(p)){mn_dif(p)+=v;lz(p)+=v;return;}\n\t\tsprdwn(p);\n\t\tint mid=l(p)+r(p)>>1;\n\t\tif(l<=mid)add(l,r,v,p<<1);\n\t\tif(r>mid)add(l,r,v,p<<1|1);\n\t\tsprup(p);\n\t}\n\tint _mn_dif(){return mn_dif(1);}//\u5168\u5c40\u6700\u5c0f\u503c \n}segt;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i],pos[a[i]]=i;\n\tfor(int i=1;i<=n;i++)cin>>b[i];\n\tint now=n;//\u521d\u59cbnow=n \n\tcout<<now<<\" \";//\u4e0d\u653e\u70b8\u5f39\u65f6 \n\tsegt.init();\n\tsegt.on(pos[n]);\n\tsegt.add(1,pos[n],-1);//\u589e\u52a0\u4e00\u4e2a>=now\u7684\u6570 \n\tfor(int i=1;i<n;i++){\n\t\tsegt.add(1,b[i],1);//\u589e\u52a0\u4e00\u4e2a\u70b8\u5f39 \n\t\twhile(segt._mn_dif()>=0/*now\u88ab\u5f39\u51fa*/){\n\t\t\tnow--;\n\t\t\tsegt.on(pos[now]);\n\t\t\tsegt.add(1,pos[now],-1);//\u589e\u52a0\u4e00\u4e2a>=now\u7684\u6570 \n\t\t}\n\t\tcout<<now<<\" \";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1585098753,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 1326E - Bombs"
    },
    {
        "content": "\u9996\u5148\u6709\u7b54\u6848\u662f\u9012\u51cf\u7684\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u7b54\u6848 $x$\uff0c\u6211\u4eec\u5982\u4f55\u5224\u65ad\u5b83\u65f6\u5019\u80fd\u88ab\u4fdd\u7559\u4e0b\u6765\u5462\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$x$ \u80fd\u7559\u4e0b\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u4f4d\u7f6e\u6ee1\u8db3\u5b83\u53f3\u8fb9 $\\ge x$ \u7684\u6570\u5927\u4e8e\u5b83\u53f3\u8fb9\u7684\u70b8\u5f39\u6570\u3002\n\n\u4e8e\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5168\u5c40 $\\max$ \u548c\u533a\u95f4\u4fee\u6539\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n \\log n)$\u3002\n\n```cpp\nconst int N = 3e5 + 7;\nint n, a[N], b[N], p[N], ans;\nstruct T {\n\tint l, r, x, z;\n} t[N<<2];\n\nvoid build(int p, int l, int r) {\n\tt[p].l = l, t[p].r = r;\n\tif (l == r) return;\n\tbuild(ls, l, md), build(rs, md + 1, r);\n\tt[p].x = max(t[ls].x, t[rs].x);\n}\n\nvoid spd(int p) {\n\tif (t[p].z) {\n\t\tt[ls].x += t[p].z;\n\t\tt[ls].z += t[p].z;\n\t\tt[rs].x += t[p].z;\n\t\tt[rs].z += t[p].z;\n\t\tt[p].z = 0;\n\t}\n}\n\nvoid add(int p, int l, int r, int k) {\n\tif (t[p].l >= l && t[p].r <= r) return t[p].x += k, t[p].z += k, void();\n\tspd(p);\n\tif (l <= md) add(ls, l, r, k);\n\tif (r > md) add(rs, l, r, k);\n\tt[p].x = max(t[ls].x, t[rs].x);\n}\n\nint main() {\n\trd(n);\n\tfor (int i = 1; i <= n; i++) rd(a[i]), p[a[i]] = i; \n\tfor (int i = 1; i <= n; i++) rd(b[i]);\n\tbuild(1, 1, n), ans = n, print(n, ' ');\n\tadd(1, 1, p[n], 1);\n\tfor (int i = 1; i < n; i++) {\n\t\tadd(1, 1, b[i], -1);\n\t\twhile (t[1].x <= 0) add(1, 1, p[--ans], 1);\n\t\tprint(ans, ' ');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1584821650,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1326E \u3010Bombs\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u5230\u7b54\u6848\u662f\u968f\u70b8\u5f39\u6570\u589e\u52a0\u800c\u51cf\u5c0f\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f9d\u6b21\u52a0\u5165\u70b8\u5f39\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u56fa\u5b9a\u7684\u70b8\u5f39\u8bbe\u7f6e\u518d\u4ece\u5927\u5230\u5c0f\u52a0\u5165\u6bcf\u4e2a\u6570\u3002\u5982\u679c\u5f53\u524d\u7684\u8fd9\u4e9b\u6570\u53ef\u4ee5\u88ab\u70b8\u5f39\u5168\u90e8\u5f39\u6389\uff0c\u90a3\u4e48\u8bf4\u660e\u6211\u4eec\u9700\u8981\u7ee7\u7eed\u52a0\u6570\u3002\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u5feb\u901f\u5224\u65ad\u5f53\u524d\u7684\u6570\u662f\u5426\u80fd\u88ab\u5168\u90e8\u5f39\u6389\u3002\n\n\u5047\u8bbe\u5f53\u524d\u5df2\u7ecf\u52a0\u5165\u7684\u6570\u662f $[x,n]$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u70b8\u5f39\u5f39\u4e86\u5c0f\u4e8e $x$ \u7684\u6570\u5c31\u76f8\u5f53\u4e8e\u6ca1\u6709\u5339\u914d\uff0c\u8fd9\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\u8003\u8651\u5efa\u7acb\u4e8c\u5206\u56fe\uff0c\u628a\u8fd9\u4e9b\u6570\u89c6\u4e3a\u5de6\u90e8\u70b9\uff0c\u5f53\u524d\u7684\u70b8\u5f39\u89c6\u4e3a\u53f3\u90e8\u70b9\uff0c\u6bcf\u4e2a\u6570\u53ef\u4ee5\u5411\u5b83\u540e\u9762\uff08\u4e0b\u6807\u4e0d\u5c0f\u4e8e\u5b83\uff09\u7684\u6240\u6709\u70b8\u5f39\u5339\u914d\u3002\u53ef\u4ee5\u53d1\u73b0 $[x,n]$ \u88ab\u5168\u90e8\u5f39\u6389\u7684\u5145\u8981\u6761\u4ef6\u5c31\u662f\u8fd9\u5f20\u56fe\u6709\u5b8c\u7f8e\u5339\u914d\u3002\u5e94\u7528 Hall \u5b9a\u7406\uff0c\u56e0\u4e3a\u5339\u914d\u8fb9\u662f\u5355\u5411\u7684\uff0c\u6211\u4eec\u53ea\u7528\u68c0\u6d4b\u6bcf\u4e2a\u540e\u7f00\u7684\u5de6\u90e8\u70b9\u6570 $\\leq$ \u5339\u914d\u5230\u7684\u53f3\u90e8\u70b9\u6570\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e $i$ \u68c0\u6d4b $[i,n]$ \u7684\u6570\u7684\u4e2a\u6570 \u51cf\u53bb\u70b8\u5f39\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e $0$\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u52a0\u5165\u4e00\u4e2a\u6570\u6216\u70b8\u5f39\u76f8\u5f53\u4e8e\u533a\u95f4\u52a0 $1$ \u6216 $-1$\uff0c\u5224\u65ad\u65f6\u9700\u8981\u8be2\u95ee\u5168\u5c40\u6700\u5c0f\u503c\u3002\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=330000;\nconst int INF=1E9;\nstruct SegmentTree\n{\n\tstruct Node\n\t{\n\t\tint val, add;\n\t} tr[4*MAXN];\n\t#define lc (o<<1)\n\t#define rc (o<<1|1)\n\tvoid pushup(int o)\n\t{\n\t\ttr[o].val=max(tr[lc].val, tr[rc].val);\n\t}\n\tint plus(int o, int k)\n\t{\n\t\ttr[o].val+=k, tr[o].add+=k;\n\t}\n\tvoid pushdown(int o)\n\t{\n\t\tif (tr[o].add)\n\t\t{\n\t\t\tplus(lc, tr[o].add);\n\t\t\tplus(rc, tr[o].add);\n\t\t\ttr[o].add=0;\n\t\t}\n\t}\n\tvoid update(int o, int l, int r, int ul, int ur, int k)\n\t{\n\t\tif (l>ur||r<ul) return;\n\t\tif (ul<=l&&r<=ur) { plus(o, k); return; }\n\t\tpushdown(o); int mid=l+r>>1;\n\t\tupdate(lc, l, mid, ul, ur, k);\n\t\tupdate(rc, mid+1, r, ul, ur, k);\n\t\tpushup(o);\n\t}\n\t#undef lc\n\t#undef rc\n} sgt;\nint p[MAXN];\nint main()\n{\n//\tfreopen(\"E.in\", \"r\", stdin);\n//\tfreopen(\"E.out\", \"w\", stdout);\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tint x; scanf(\"%d\", &x);\n\t\tp[x]=i;\n\t}\n\tsgt.update(1, 1, n, 1, p[n], 1);\n\tfor (int i=1, j=n; i<=n; i++)\n\t{\n\t\tprintf(\"%d \", j);\n\t\tint x; scanf(\"%d\", &x);\n\t\tsgt.update(1, 1, n, 1, x, -1);\n\t\twhile (j>=1&&sgt.tr[1].val<=0)\n\t\t\tsgt.update(1, 1, n, 1, p[--j], 1);\n\t}\n\tputchar('\\n');\n\treturn 0;\n}\n```\n\n",
        "postTime": 1584749006,
        "uid": 152449,
        "name": "\u7075\u68a6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1326E \u3010Bombs\u3011"
    },
    {
        "content": "~~\u4e3a\u4ec0\u4e48\u6709\u90a3\u4e48\u591a\u4eba\u559c\u6b22\u628a\u5957\u8def\u9898\u53eb\u6210\u601d\u7ef4\u9898\uff0c\u771f\u662f\u795e\u5947\u3002~~\n\n\u5728\u4e0d\u77e5\u9053\u5957\u8def\u7684\u60c5\u51b5\u4e0b\uff0c\u5957\u8def\u9898\u4fbf\u662f\u601d\u7ef4\u9898\uff1b\u5982\u679c\u80fd\u719f\u7ec3\u8fd0\u7528\u5957\u8def\uff0c\u601d\u7ef4\u9898\u4fbf\u6210\u4e86\u5957\u8def\u9898\u7f62\u3002\n\n\u8fd9\u9053\u9898\u7684\u5957\u8def\u662f\u4e24\u79cd\u7ecf\u5178\u5957\u8def\u76f8\u4e58\u3002\n1. \u5bf9\u4e8e\u4e00\u7c7b\u4e8c\u5206\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e8c\u5206\u540e\u628a\u6ee1\u8db3\u6761\u4ef6\u7684\u8bbe\u4e3a $1$ \uff0c\u4e0d\u6ee1\u8db3\u7684\u8bbe\u4e3a $0$ \u6216 $-1$ \uff08\u89c6\u60c5\u51b5\u800c\u5b9a\uff09\uff0c\u8fd9\u65f6\u6211\u4eec\u80fd\u5f88\u65b9\u4fbf\u4e0e\u7edf\u8ba1/\u505a\u524d\u540e\u7f00\u548c\u3002\n2. \u5bf9\u4e8e\u4e00\u7c7b\u52a8\u6001\u7684\u524d\u540e\u7f00\u548c\u95ee\u9898\uff08\u6216\u8005\u4e0a\u8ff0\u95ee\u9898\uff09\uff0c\u5f88\u591a\u65f6\u5019\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u52a8\u6001\u7684\u3002\n\n\u6211\u592a\u83dc\u4e86\uff0c\u7b2c\u4e00\u79cd\u5957\u8def\u90fd\u6ca1\u60f3\u5230\u3002\n\n\u6240\u4ee5\u5230\u5e95\u8be5\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u5148\u4ece\u7b80\u5355\u5165\u624b\u7f62\u3002\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u54ea\u4e9b\u4f4d\u7f6e\u6709\u70b8\u5f39\uff0c\u90a3\u4e48\u53ef\u4ee5\u5957\u7528\u7b2c\u4e00\u79cd\u5957\u8def\u3002\u5c31\u662f\u53bb\u4e8c\u5206\u7b54\u6848 $x$ \uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u628a\u5927\u4e8e $x$ \u7684\u5168\u90e8\u6807\u4e3a $1$ \uff0c\u8868\u793a\u53ef\u4ee5\u5220\u6389\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u7531\u4e8e $x$ \u53ea\u8981\u5269 $1$ \u4e2a\uff0c\u800c\u4e14\u76f8\u540c\u7684\u6743\u503c\u628a\u8d8a\u524d\u9762\u7f6e $1$ \u5fc5\u5b9a\u66f4\u4f18\uff08\u90a3\u4e48\u540e\u9762\u5c31\u8d8a\u53ef\u80fd\u6709\u4e1c\u897f\u80fd\u5220\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u9664\u6700\u540e\u4e00\u4e2a\u5916\u6743\u503c\u7b49\u4e8e $x$ \u7684\u4e5f\u7f6e $1$ \uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u6709\u524d\u7f00\u548c\u5c0f\u4e8e\u7b49\u4e8e $0$ \u5373\u53ef\u3002\n\n\u7531\u4e8e\u8fd9\u79cd\u505a\u6cd5\u975e\u5e38\u7684\u900a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f18\u5316\u4ed6\uff08\u5bf9\u6bcf\u4e2a\u6570\u505a\u4e00\u904d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2 \\log n)$ \uff09\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f18\u5316\u6389\u4e00\u4e2a $n$ \u7684\u7ea7\u522b\u3002\u8fd9\u65f6\u4e5f\u8bb8\u8fd8\u662f\u88ab\u4e8c\u5206\u9650\u5236\u7740\uff0c\u4f46\u662f\u53ea\u8981\u9605\u8bfb\u4e86\u5957\u8def\u4e8c\uff0c\u4f60\u5c06\u4f1a\u8c41\u7136\u5f00\u6717\u3002\n\n\u7531\u4e8e\u6709\u5355\u8c03\u6027\u6240\u4ee5\u80fd\u4e8c\u5206\uff0c\u800c\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u6240\u4ee5\u5462\u6211\u4eec\u53d1\u73b0\u5728\u8fd9\u6837\u7684\u6027\u8d28\u4e0b\u4e00\u4e2a\u7b54\u6848\u662f\u5408\u6cd5\u7684\u4ec5\u5f53\u6709\u4e00\u4e2a\u70b9\u53f3\u8fb9\u7684\u5927\u4e8e\u7b49\u4e8e $ans$ \u7684\u6570\u5927\u4e8e\u70b8\u5f39\u6570\uff0c\u8fd9\u6837\u5fc5\u5b9a\u4f1a\u5269\u4e0b\u81f3\u5c11\u4e00\u4e2a\u6ca1\u6709\u88ab\u5220\uff0c\u800c\u56e0\u4e3a\u7b54\u6848\u662f\u5355\u8c03\u9012\u51cf\u7684\u6240\u4ee5\u7b54\u6848\u4e00\u5b9a\u662f\u5f53\u524d\u7684\u3002\u6211\u4eec\u8bb0\u5f55\u6bcf\u79cd\u6570\u503c\u7684\u4f4d\u7f6e\uff08\u6ce8\u610f\u6570\u503c\u662f $1$ \u5230 $n$ \u7684\u5168\u6392\u5217\uff09\uff0c\u6bcf\u6b21\uff0c\u628a $1$ \u5230 $q[i-1]$ \u7684\u4f4d\u7f6e\u7f6e\u4f4d\u51cf $1$ \uff0c\u7136\u540e\u628a\u7b54\u6848\u51cf\u5c0f\u65f6\u5bf9 $1$ \u5230\u7b54\u6848\u5728 $p$ \u4e2d\u7684\u4f4d\u7f6e\u52a0 $1$ \uff0c\u8fd9\u6837\u53ef\u4ee5\u7b97\u51fa\u540e\u7f00\u548c\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define L(i, a, b) for(int i = a; i <= b; i++)\n#define R(i, a, b) for(int i = a; i >= b; i--)\nusing namespace std;\nconst int N = 300010;\nstruct Tree{\n\tint l, r, mid, mx, lazy;\n\tvoid Tag(int v){mx += v, lazy += v;}\n}t[N << 2];\nint n, id[N], p[N], q[N];\nvoid Pushup(int p){\n\tt[p].mx = max(t[p << 1].mx, t[p << 1 | 1].mx);\n}\nvoid Pushdown(int p){\n\tt[p << 1].Tag(t[p].lazy);\n\tt[p << 1 | 1].Tag(t[p].lazy);\n\tt[p].lazy = 0;\n}\nvoid Build(int p, int l, int r){\n\tt[p] = {l, r, l + r >> 1, 0, 0};\n\tif(l == r) return;\n\tBuild(p << 1, t[p].l, t[p].mid);\n\tBuild(p << 1 | 1, t[p].mid + 1, t[p].r);\n\tPushup(p);\n}\nvoid Update(int p, int l, int r, int v){\n\tif(l <= t[p].l && t[p].r <= r){\n\t\tt[p].Tag(v);\n\t\treturn;\n\t}\n\tPushdown(p);\n\tif(l <= t[p].mid) Update(p << 1, l, r, v);\n\tif(t[p].mid < r) Update(p << 1 | 1, l, r, v);\n\tPushup(p);\n}\nint main(){\n\tscanf(\"%d\", &n);\n\tL(i, 1, n) scanf(\"%d\", &p[i]), id[p[i]] = i;\n\tL(i, 1, n) scanf(\"%d\", &q[i]);\n\tBuild(1, 1, n);\n\tint x = n;\n\tL(i, 1, n){\n\t\tif(i > 1) Update(1, 1, q[i - 1], -1);\n\t\twhile(t[1].mx <= 0) Update(1, 1, id[x--], 1);\n\t\tprintf(\"%d \", x + 1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1674135643,
        "uid": 341946,
        "name": "zac2010",
        "ccfLevel": 7,
        "title": "CF1326E \u9898\u89e3"
    },
    {
        "content": "\u7531\u4e8e\u672c\u4eba\u592a\u83dc\u4e86\u6240\u4ee5\u6ca1\u592a\u7406\u89e3\u5176\u4ed6\u9898\u89e3\u63a8\u51fa\u6765\u7684\u7ed3\u8bba\u662f\u600e\u4e48\u6765\u7684\uff0c\u6240\u4ee5\u5c31\u51b3\u5b9a\u8bb2\u4e00\u8bb2\u6211\u80fd\u7406\u89e3\u7684$dengyaotriangle$\u5927\u4f6c\u7684\u505a\u6cd5\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4ef6\u4e8b\u90a3\u5c31\u662f\u7b54\u6848\u80af\u5b9a\u662f\u9012\u51cf\u7684\uff0c\u7531\u4e8e\u9012\u51cf\u6027\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u4ee3\u8868\u5f53\u524d\u7b54\u6848\uff0c\u6bcf\u52a0\u8fdb\u4e00\u4e2a\u7b54\u6848\u5c31\u4e0d\u65ad\u5f80\u4e0b\u51cf\uff0c\u76f4\u5230\u5b83\u5408\u6cd5\u4e3a\u6b62\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u4e3a**\u5982\u4f55\u8fc5\u901f\u7684\u5224\u65ad\u4e00\u4e2a\u7b54\u6848\u4ed6\u662f\u4e0d\u662f\u5408\u6cd5\u7684**\n\n\u5148\u505a\u4e00\u4e9b\u5b9a\u4e49\uff0c\u6211\u4eec\u4ee4$x$ \u8868\u793a\u5f53\u524d\u7684\u7b54\u6848\uff0c$pos$\u8868\u793a\u4ed6\u5728$p$\u4e2d\u662f\u7b2c\u51e0\u4e2a\n\n\u53ea\u8981\u4e00\u4e2a\u7b54\u6848\u5408\u6cd5\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u662f\u6bd4\u5b83\u5927\u7684\u5143\u7d20\u5e2e\u4ed6\u628a\u70b8\u5f39\u5168\u6321\u6389\u4e86\uff0c\u7531\u4e8e\u7b54\u6848\u662f\u4e0d\u65ad\u5f80\u4e0b\u51cf\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u7406\u89e3\u4e3a\u6211\u4eec\u662f\u5728\u4e0d\u65ad\u7684\u52a0\u5143\u7d20\n\n\u73b0\u5728\u6211\u4eec\u628a\u5e8f\u5217\u5206\u4e3a\u4e24\u90e8\u5206\u5206\u522b\u8003\u8651\u4e0e\u7ef4\u62a4\n\n$Case 1:i\\in[1,pos-1]$\n\n\u8fd9\u65f6\u5019\u8fd9\u91cc\u9762\u7684\u70b8\u5f39\u4e0d\u7ba1\u600e\u4e48\u6837\u90fd\u4e0d\u4f1a\u628a$x$\u7ed9\u5f39\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8003\u8651\u8fd9\u4e2a\u533a\u95f4\u91cc\u6709\u591a\u5c11\u6570\u80fd\u5269\u4e0b\u6765\u5e2e$x$\u6321\u5200\uff0c\u8fd9\u4e2a\u4e1c\u897f\u7c7b\u4f3c\u4e00\u4e2a\u524d\u7f00\u548c$a[i]=max(0,a[i-1]+(p[i]>x)-(i$\u6709\u70b8\u5f39$)),i\\in[1,pos-1]$\uff0c(\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u8fd9\u4e2a\u91cc\u9762\u82e5$a[i]<0$\u65f6\u5219\u5fc5\u5b9a\u4f1a\u6709$<x$\u7684\u6570\u88ab\u5f39\u6389\u4e86\u6240\u4ee5\u5c31\u4e0d\u7528\u7ba1\u4e86)\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5f0f\u5b50\u9012\u63a8\uff0c \u90a3\u4e48\u524d\u9762\u7559\u7ed9\u540e\u9762\u7684\u798f\u7949\u5c31\u662f$a[pos-1]$\n\n\u8fd9\u4e1c\u897f\u548b\u7ef4\u62a4\u540e\u9762\u518d\u8bf4\n\n$Case 2:i\\in[pos,n]$\n\n\u73b0\u5728\u70b8\u5f39\u53ef\u80fd\u4f1a\u628a$x$\u5f39\u6389\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u76f4\u63a5\u7ef4\u62a4\u5f53\u524d\u6bd4$x$\u5927\u7684\u5143\u7d20\u7684\u4e2a\u6570\n$b[i]=b[i-1]+(p[i]>x)-(i$\u6709\u70b8\u5f39$),i\\in[pos,n]$ \u5176\u4e2d$b[pos-1]=a[pos-1]$\u73b0\u5728\u53ea\u8981\u6709\u4e00\u4e2a$b[i]<0$\u6211\u4eec\u5c31\u76f4\u63a5$gg$\uff0c\u56e0\u4e3a$x$\u80af\u5b9a\u88ab\u5f39\u6389\u4e86\n\n\u8003\u8651\u548b\u7ef4\u62a4$b-a[pos-1]$\uff08\u5148\u4e0d\u7ba1$a[pos-1]$\u540e\u9762\u76f4\u63a5\u52a0\u5c31\u884c\u4e86\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u62ff\u4e00\u4e2a\u7ebf\u6bb5\u6811\u8bb0\u5f55$b$\u4ece$1$\u5f00\u59cb\u9012\u63a8\u7684\u7ed3\u679c\uff0c\u6bcf\u6b21\u6539\u5bf9\u5e94\u540e\u7f00\u52a0\u51cf\uff0c\u4f46\u662f\u6211\u4eec\u5728\u8fd9\u91cc\u53ea\u662f\u4ece$pos$\u9012\u63a8\uff0c\u53ef\u662f\u7531\u4e8e\u6211\u4eec\u7b97\u7684\u8fd9\u4e2a\u503c\u662f\u6ee1\u8db3\u76f4\u63a5\u52a0\u51cf\u7684\uff0c\u6240\u4ee5\u540e\u9762\u5b9e\u9645\u7684$b$\u503c\u5c31\u662f\u7ebf\u6bb5\u6811\u91cc\u7684$b[i]-b[pos-1]$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7b97\u51fa\u6765$b[i]-a[pos-1]$\u7684\u503c\u4e86\uff0c\u7531\u4e8e\u53ea\u7528\u8003\u8651\u6700\u5c0f\uff0c\u6240\u4ee5\u9700\u8981\u8bb0\u5f55\u6700\u5c0f\u503c\n\n\u73b0\u5728\u8003\u8651\u7ef4\u62a4$a$\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u524d\u7f00\u7684\u4e1c\u897f\uff0c\u540c\u65f6\u4fee\u6539\u4e5f\u662f\u5bf9\u5e94\u4e00\u4e2a\u540e\u7f00\uff0c\u6211\u4eec\u8003\u8651\u5f00**\u53e6\u4e00\u9897**\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4f46\u662f\u53d1\u73b0\u53d6$max$\u548b\u529e\u5462\uff0c\u7531\u4e8e\u53d1\u751f\u53d6$max$\u7684\u60c5\u51b5\u53ea\u4f1a\u5728\u51cf\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u5728\u63d2\u5165\u4e00\u4e2a\u70b8\u5f39\u7684\u65f6\u5019\u51fa\u73b0\uff0c\u5148\u5047\u5b9a\u6211\u4eec\u76f4\u63a5\u628a\u540e\u7f00$-1$\uff0c\u90a3\u73b0\u5728\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u8d1f\u6570\u4e86\uff0c\u540c\u65f6\u4ed6\u6700\u5c0f\u662f$-1$\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u7ebf\u6bb5\u6811\u591a\u7ef4\u62a4\u4e00\u4e2a\u503c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053$-1$\u6700\u65e9\u51fa\u73b0\u5728\u4f55\u5904\uff0c\u6211\u4eec\u8bbe\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a$tp$\uff0c\u90a3\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u628a$[tp,n]$\u91cc\u9762\u6240\u6709\u6570$+1$\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u5168\u975e\u8d1f\u4e86\uff0c\u4f46\u662f\u540c\u65f6\u6211\u4eec\u4e5f**\u6b20\u4e0b\u4e00\u7b14\u503a**\uff0c\u8fd9\u662f\u56e0\u4e3a\u5047\u5982\u540e\u9762\u6709\u4e00\u4e2a\u52a0\u7684\u64cd\u4f5c\u5148\u4e8e$tp$\uff0c\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u767d\u53d6\u4e86$max$\uff0c\u4e5f\u5c31\u662f\u591a\u52a0\u4e86\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a$set$\u8bb0\u5f55\u6240\u6709$tp$\u7684\u503c\uff0c\u5728\u4ee5\u540e\u505a\u52a0\u7684\u64cd\u4f5c\u65f6\u628a$[tp,n]$\u51cf\u4e00\n\n\u6240\u4ee5\u5f62\u5f0f\u5316\u7684\u628a\u6b65\u9aa4\u5199\u51fa\u6765\u5c31\u662f\n\n1\uff0c\u63d2\u5165\u70b8\u5f39\uff0c\u5728\u4e24\u9897\u7ebf\u6bb5\u6811\u4e0a\u90fd\u505a\u4fee\u6539\uff0c\u5047\u5982\u6709$-1$\u5c31\u6b20\u4e0b\u503a\uff0c\u4ee5\u540e\u8fd8\n\n2\uff0c\u4e0d\u65ad\u7684\u628a\u7b54\u6848\u51cf\u5c0f\u5e76\u63d2\u5165\uff0c\u76f4\u5230\u6ee1\u8db3\uff0c\u63d2\u5165\u662f\u5728\u4e24\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u540e\u7f00\u52a0\uff0c\u52a0\u5165\u53d1\u73b0\u524d\u9762\u6b20\u503a\u4e86\uff0c\u5c31\u8fd8\u503a\uff0c\u8fd8\u7684\u503a\u662f$set$\u91cc$pos$\u7684$lower$_$bound$\n\n3\uff0c\u8f93\u51fa\u7b54\u6848\n\n\u4e0b\u9762\u4fbf\u662f\u4ee3\u7801\u4e86\n\n\u5728\u6211\u7684\u4ee3\u7801\u91cc\uff0c$id=0$\u662f$a$\uff0c$id=1$\u662f$b$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include <cstdlib>\n#include <cmath>\n#include <queue>\n#include <set>\nusing namespace std;\nconst int maxn=3e5+5;\ntypedef long long ll;\npair<int,int> t1[maxn*4][2];\nint tag[maxn*4][2];\npair<int,int> merged(pair<int,int> a1,pair<int,int> b1){\n\tif (a1.first<b1.first) return a1;\n\tif (a1.first>b1.first) return b1;\n\treturn make_pair(a1.first,min(a1.second,b1.second));\n}\ninline int lc(int u){\n\treturn u<<1;\n}\ninline int rc(int u){\n\treturn u<<1|1;\n}\ninline void co(int u,int id){\n\tt1[u][id]=merged(t1[lc(u)][id],t1[rc(u)][id]);\n}\ninline void pushdown(int u,int id){\n\tif (tag[u][id]==0) return;\n\ttag[lc(u)][id]+=tag[u][id];\n\ttag[rc(u)][id]+=tag[u][id];\n\tt1[lc(u)][id].first+=tag[u][id];\n\tt1[rc(u)][id].first+=tag[u][id];\n\ttag[u][id]=0;\n}\ninline void add(int u,int l,int r,int ql,int qr,int d,int id){\n\tif (d==0) return;\n\tif (ql<=l&&r<=qr){\n\t\tt1[u][id].first+=d;\n\t\ttag[u][id]+=d;\n\t\treturn;\n\t}\n\tpushdown(u,id);\n\tint mid=(l+r)/2;\n\tif (ql<=mid) add(lc(u),l,mid,ql,qr,d,id);\n\tif (mid+1<=qr) add(rc(u),mid+1,r,ql,qr,d,id);\n\tco(u,id);\n\treturn;\n}\ninline pair<int,int> qmin(int u,int l,int r,int ql,int qr,int id){\n\tif (ql<=l&&r<=qr) return t1[u][id];\n\tint mid=(l+r)/2;\n\tpushdown(u,id);\n\tif (ql<=mid&&mid+1<=qr){\n\t\treturn merged(qmin(lc(u),l,mid,ql,qr,id),qmin(rc(u),mid+1,r,ql,qr,id));\n\t}\n\tif (ql<=mid) return qmin(lc(u),l,mid,ql,qr,id);\n\tif (mid+1<=qr) return qmin(rc(u),mid+1,r,ql,qr,id);\n}\ninline void build(int u,int l,int r,int id){\n\tif (l==r){\n\t\tt1[u][id]=make_pair(0,l);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(lc(u),l,mid,id);\n\tbuild(rc(u),mid+1,r,id);\n\tco(u,id);\n}\nint pos[maxn];\nint a[maxn],p[maxn];\nint n;\ninline bool chk(int x){\n\tint tp=pos[x];\n\tint mem=0;\n\tif (tp!=1){\n\t\tmem=qmin(1,1,n,tp-1,tp-1,0).first;\n\t}\n\tint fw=0;\n\tif (tp!=1){\n\t\tfw=qmin(1,1,n,tp-1,tp-1,1).first;\n\t}\n\tif (qmin(1,1,n,tp,n,1).first+mem-fw>=0) return true;\n\telse return false;\n}\nmultiset<int> mem;\nmultiset<int>::iterator it;\n// 0 mdf 1 real \nint main(){\n\tcin>>n;\n\tbuild(1,1,n,0);\n\tbuild(1,1,n,1);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tpos[a[i]]=i;\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&p[i]);\n\t}\n\tint res=n;\n\tfor (int i=1;i<=n;i++){\n\t\tif (i==1){\n\t\t\tprintf(\"%d \",res);\n\t\t\tcontinue;\n\t\t}\n\t\telse{\n\t\t\tadd(1,1,n,p[i-1],n,-1,1);\n\t\t\tadd(1,1,n,p[i-1],n,-1,0);\n\t\t\tpair<int,int> tp=qmin(1,1,n,p[i-1],n,0);\n\t\t\tif (tp.first<0){\n\t\t\t\tadd(1,1,n,tp.second,n,1,0);\n\t\t\t\tmem.insert(tp.second);\n\t\t\t}\n\t\t}\n\t\twhile(chk(res)==false){\n\t\t\tadd(1,1,n,pos[res],n,1,1);\n\t\t\tadd(1,1,n,pos[res],n,1,0);\n\t\t\tit=mem.lower_bound(pos[res]);\n\t\t\tif (it!=mem.end()){\n\t\t\t\tint x=(*it);\n\t\t\t\tadd(1,1,n,x,n,-1,0);\n\t\t\t\tmem.erase(it);\n\t\t\t}\n\t\t\tres--;\n\t\t}\n\t\tprintf(\"%d \",res);\n\t}\n}\n```\n\n%%%dengyaotriangle",
        "postTime": 1587658400,
        "uid": 122077,
        "name": "momo5440",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1326E \u3010Bombs\u3011"
    },
    {
        "content": "# \u9898\u89e3-Bombs\n\n[$\\color{#344622}{\\texttt{Read it in my cnblogs}}$](https://www.cnblogs.com/Wendigo/p/12558365.html)\n\n**\u524d\u7f6e\u77e5\u8bc6\uff1a**\n\n> \u7ebf\u6bb5\u6811\n\n---\n> [$\\color{orange}{\\texttt{Bombs on luogu}}$](https://www.luogu.com.cn/problem/CF1326E) / [$\\color{orange}{\\texttt{Bombs on CF}}$](http://codeforces.com/problemset/problem/1326/E)\n\n> \u6709\u4e00\u4e2a $n$ \u7684\u6392\u5217 $p_i$\u3002\u5176\u4e2d\u6709\u4e00\u4e9b $i$ \u88ab\u6253\u4e86**\u6807\u8bb0**\u3002\u5bf9\u4e8e $i=1\\to n$\uff0c\u5c06 $p_i$ \u653e\u5165\u96c6\u5408\uff0c\u5982\u679c $i$ \u88ab**\u6807\u8bb0**\uff0c\u5c31\u5220\u9664\u96c6\u5408\u4e2d\u7684**\u6700\u5927\u6570**\u3002\u6700\u540e**\u5269\u4e0b\u7684\u96c6\u5408\u7684\u6700\u5927\u6570**\u5c31\u662f\u8fd9\u79cd\u6807\u8bb0\u72b6\u6001\u4e0b**\u8be5\u5e8f\u5217\u7684\u503c**\u3002\u7ed9\u5b9a\u53e6\u4e00\u4e2a $n$ \u7684\u6392\u5217 $q_j$\uff0c\u6c42\u5bf9\u4e8e $j=1\\to n$\uff0c\u5c06 $q_1\\sim q_j$ \u6807\u8bb0\u540e\u5bf9\u5e94\u7684**\u5e8f\u5217\u503c**\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le 3\\times 10^5$\u3002\n\n---\n\u8003\u8651\u5f53\u524d\u5e8f\u5217\u503c\u4e3a $p_i$\uff0c\u5982\u679c\u6253\u4e0a\u6807\u8bb0 $q_j$ \u540e\u7684\u5e8f\u5217\u503c\u53d8\u5316\u3002\n\n1. \u5982\u679c $q_j<i$\uff1a\u5e8f\u5217\u503c\u4e0d\u6539\u53d8\u3002\n2. \u5982\u679c $q_j\\ge i$\uff1a\u5e8f\u5217\u503c**\u53d8\u5c0f**\u3002\n\n\u6240\u4ee5\u6253\u4e0a\u6807\u8bb0 $q_j$ \u76f8\u5f53\u4e8e**\u7834\u574f $1\\sim q_j$ \u7684\u6700\u5927\u503c**\u3002\n\n\u53ef\u4ee5\u628a\u6253\u6807\u8bb0 $q_j$ \u53d8\u5316\u4e3a\u4ee4 $[1,q_j]$ \u7684 $w$ \u533a\u95f4\u503c $-1$\u3002\n\n\u800c\u5c06\u5f53\u524d\u5e8f\u5217\u503c $p_i$ \u9000\u8ba9\u6210 $p_k=p_i-1$ \u5219\u76f8\u5f53\u4e8e**\u6811\u7acb $1\\sim k$ \u7684\u6700\u5927\u503c**\u3002\n\n\u53ef\u4ee5\u628a\u9000\u8ba9\u5e8f\u5217\u503c\u53d8\u5316\u4e3a\u4ee4 $[1,k]$ \u7684 $w$ \u533a\u95f4\u503c $+1$\u3002\n\n\u8fd9\u6837\u7684\u8bdd**\u5982\u679c\u6709 $w_i>0$ \u5c31\u8bf4\u660e\u5f53\u524d\u5e8f\u5217\u503c\u672a\u88ab\u5220\u9664\uff0c\u5426\u5219\u5c31\u8be5\u9000\u8ba9\u6700\u5927\u503c**\u3002\n\n---\n\n\u56e0\u4e3a\u8981\u770b\u662f\u5426\u6ee1\u8db3\u6709 $w_i>0$\uff0c\u6240\u4ee5\u53ef\u4ee5**\u7ebf\u6bb5\u6811\u7ef4\u62a4 $w$ \u533a\u95f4\u6700\u5927\u503c**\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//&Start\n#define re register\n#define il inline\n#define inf 0x3f3f3f3f\ntypedef long long lng;\n\n//&Data\n#define N 300000\nint n,p[N+10],q[N+10],I[N+10];\n\n//&Segmenttree\nstruct smt{ //\u7ebf\u6bb5\u6811\n\tint mx[N<<2|7],mk[N<<2|7];\n\til void pushdown(re int k){\n\t\tif(mk[k]!=0) mx[k<<1]+=mk[k],mx[k<<1|1]+=mk[k],mk[k<<1]+=mk[k],mk[k<<1|1]+=mk[k],mk[k]=0;\n\t}\n\til void add(re int x,re int y,re int z,re int k=1,re int l=1,re int r=n){\n\t\tif(x<=l&&r<=y){mx[k]+=z,mk[k]+=z;return;}\n\t\tint mid=(l+r)>>1; pushdown(k);\n\t\tif(mid>=x) add(x,y,z,k<<1,l,mid);if(mid<y) add(x,y,z,k<<1|1,mid+1,r);\n\t\tmx[k]=max(mx[k<<1],mx[k<<1|1]);\n\t}\n}tree;\n\n//&Main\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(re int i=1;i<=n;i++) scanf(\"%d\",p+i),I[p[i]]=i; //\u8bb0\u5f55pk\u5bf9\u5e94\u7684k\uff0c\u65b9\u4fbf\u9000\u8ba9\n\tfor(re int i=1;i<=n;i++) scanf(\"%d\",q+i);\n\tre int res=n;\n\ttree.add(1,I[res],1),printf(\"%d%c\",res,\"\\n \"[1<n]);\n\tfor(re int i=1;i<n;i++){\n\t\ttree.add(1,q[i],-1); //\u6253\u6807\u8bb0-\u5220\u9664\n\t\twhile(tree.mx[1]<=0) tree.add(1,I[--res],1);//\u9000\u8ba9\u77e5\u9053\u672a\u88ab\u5220\u9664\n\t\tprintf(\"%d%c\",res,\"\\n \"[i<n-1]); //\u672a\u88ab\u5220\u9664\u7684\u5e8f\u5217\u503c\n\t}\n\treturn 0;\n}\n```\n---\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**\n",
        "postTime": 1585026675,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1326E \u3010Bombs\u3011"
    },
    {
        "content": "# CF1326E Bombs\n\n## Solution\n\u63d0\u4f9b\u4e00\u79cd\u6bd4\u8f83\u9ebb\u70e6\u7684\u505a\u6cd5\u3002\n\n\u7531\u4e8e\u732a\u5934\u4e0d\u592a\u597d\u4f7f\uff0c\u53ea\u60f3\u51fa\u4e86\u4e00\u4e2a\u65e0\u8111\u7684\u5224\u65ad $x$ \u662f\u5426\u5b58\u7559\u7684\u65b9\u6cd5\uff1a\n1. \u5bf9\u4e8e\u4e00\u4e2a\u5168 $0$ \u7684\u6570\u7ec4 $a$ \uff0c\u6211\u4eec\u5148\u628a\u6807\u8bb0\u7684\u4f4d\u7f6e\u7684 $a$ \u52a0\u4e0a $-1$ \uff0c\u7136\u540e\u5bf9\u4e8e $p_i$ \u5927\u4e8e\u7b49\u4e8e $x$ \u7684 $i$ \u7684 $a_i$ \u52a0 $1$ \u3002\n2. \u5bf9\u4e8e $\\{a\\}$ \u6c42\u4e00\u4e2a\u201c\u7c7b\u524d\u7f00\u548c\u201d\uff08\u5982\u679c\u5f53\u524d\u5c0f\u4e8e $0$ \u5c31\u8bbe\u4e3a $0$ \u7684\u90a3\u79cd\uff09\uff0c\u8bb0\u4f5c $\\{s\\}$\u3002\n3. \u4ee4 $x$ \u5728 $p$ \u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\u4e3a $pos$ \uff0c\u8fd9\u6837\u5982\u679c $x$ \u4e0d\u4f1a\u88ab\u5220\u6389\u5f53\u4e14\u4ec5\u5f53 $s_i<1$ \u7684 $i$ \u90fd\u6bd4 $pos$ \u5c0f\u3002\n\n\u8fd9\u662f\u4e00\u4e2a $O(n)$ \u7684\u66b4\u529b\u5224\u65ad\u65b9\u6cd5\u3002\n\n\u8003\u8651\u5982\u4f55\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u662f\u6c42\u51fa $1...pos-1$ \u7684\u201c\u7c7b\u524d\u7f00\u548c\u201d\uff0c\u518d\u6c42\u51fa $pos...n$ \u7684\u524d\u7f00\u548c\u7684\u6700\u5c0f\u503c\uff0c\u4e24\u8005\u76f8\u52a0\u5927\u4e8e\u7b49\u4e8e $1$ \u5c31\u8bf4\u660e $x$ \u53ef\u884c\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u3001\u201c\u7c7b\u524d\u7f00\u548c\u201d\u3001\u201c\u524d\u7f00\u548c\u6700\u5c0f\u503c\u201d\uff0c\u8fd9\u4e09\u4e2a\u90fd\u662f\u5e38\u89c1\u7684\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7ef4\u62a4\u7684\u4e1c\u897f\u3002\n\n\u6700\u540e\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u6c42\u54ea\u4e2a $x$ \u6700\u4f18\uff0c\u663e\u7136\u7b54\u6848\u662f\u9012\u51cf\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u53cc\u6307\u9488\u6765\u7ef4\u62a4\uff0c\u4fee\u6539\u76f8\u5f53\u4e8e\u67d0\u4e00\u4e2a $a_i$ \u52a0\u4e00\u6216\u51cf\u4e00\uff0c~~\u56e0\u6b64\u8fd9\u4e2a\u505a\u6cd5\u751a\u81f3\u4e0d\u9700\u8981 lazy_tag \uff01~~\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n## Code\n```cpp\nstruct Node{\n\tint sum, mn, Sum;\n\tNode(){}\n\tNode(int x, int y, int z):sum(x), mn(y), Sum(z){};\n\tfriend Node operator + (const Node &a, const Node &b) {\n\t\tint t = (a.Sum >= -b.mn ? a.Sum + b.sum : b.Sum); \n\t\treturn Node(a.sum + b.sum, min(a.mn, a.sum + b.mn), t);\n\t}\n} s[MAXN << 2];\nvoid update(int x, int l, int r, int y, int z) {\n\tif (l == r) { s[x].sum += z, s[x].mn += z, s[x].Sum = max(s[x].sum, 0); return; }\n\tint mid = (l + r) >> 1;\n\tif (y <= mid) update(x << 1, l, mid, y, z);\n\telse update(x << 1 | 1, mid + 1, r, y, z);\n\ts[x] = s[x << 1] + s[x << 1 | 1];\n}\nNode query(int x, int l, int r, int L, int R) {\n\tif (l >= L && r <= R) return s[x];\n\tint mid = (l + r) >> 1;\n\tif (R <= mid) return query(x << 1, l, mid, L, R);\n\telse if (L > mid) return query(x << 1 | 1, mid + 1, r, L, R);\n\telse return query(x << 1, l, mid, L, mid) + query(x << 1 | 1, mid + 1, r, mid + 1, R);\n}\n\n\nint Q[MAXN], pos[MAXN];\nsigned main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"a.in\", \"r\", stdin);\n#endif\n\tint n;\n\tread(n);\n\tfor (int i = 1, x; i <= n ; ++ i) read(x), pos[x] = i;\n\tfor (int i = 1; i <= n ; ++ i) read(Q[i]);\n\n\tupdate(1, 1, n, pos[n], 1);\n\tfor (int i = 1, nw = n; i <= n ; ++ i) {\n\t\tprint(nw), putc(' ');\n\t\tupdate(1, 1, n, Q[i], -1);\n\t\twhile (nw > 1 && (pos[nw] == 1 ? 0 : query(1, 1, n, 1, pos[nw] - 1).Sum) + query(1, 1, n, pos[nw], n).mn < 1) update(1, 1, n, pos[-- nw], 1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1629719677,
        "uid": 32063,
        "name": "fade_away",
        "ccfLevel": 0,
        "title": "CF1326E Bombs"
    }
]