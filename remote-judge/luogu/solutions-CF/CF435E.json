[
    {
        "content": "\u5355\u6311\u62bd\u5230\u8fd9\u9053\u9898\uff0c\u60e8\u8d25\u4e4b\u540e\u56de\u6765\u8865\u9898\uff0c\u53d1\u73b0\u4e5f\u4e0d\u662f\u5f88\u96be\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u7279\u5b9a\u6784\u9020\u7684\u77e9\u9635\u56fe\uff0c\u5176\u4e2d\u6709\u4e00\u4e9b\u70b9\u5df2\u7ecf\u67d3\u4e0a\u4e86\u989c\u8272\u3002\n\n\u95ee\u4f60\u662f\u5426\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u56fe\u5168\u90e8\u56db\u8272\u67d3\u8272\uff0c\u4f7f\u5f97\u6ee1\u8db3\u6bcf\u4e00\u6761\u8fb9\u4e0a\u7684\u4e24\u4e2a\u70b9\u90fd\u4e0d\u662f\u540c\u4e00\u4e2a\u989c\u8272\u3002\n\n\u8bf7\u6784\u9020\u51fa\u4e00\u4e2a\u5408\u6cd5\u89e3\u3002\n\n### \u89e3\u6cd5\n\n\u6837\u4f8b\u975e\u5e38\u6709\u89c4\u5f8b\uff0c\u4e0d\u96be\u731c\u6d4b\u6b63\u786e\u7684\u6784\u9020\u5e94\u8be5\u662f\u5f62\u5982\u6837\u4f8b\u4e00\u7684\u5f62\u5f0f\uff0c\u5373\u6bcf\u4e00\u884c\uff08\u4ea6\u6216\u8005\u662f\u6bcf\u4e00\u5217\uff0c\u4e0b\u540c\uff09\u7531\u4e24\u79cd\u989c\u8272\u4ea4\u66ff\u586b\u6d82\uff0c\u76f8\u90bb\u7684\u884c\u7684\u4e24\u79cd\u989c\u8272\u4e0d\u540c\uff0c\u5982\u679c\u7b2c\u4e00\u884c\u9009\u62e9\u7684\u989c\u8272\u662f $(1,3)$\uff0c\u5219\u7b2c\u4e8c\u884c\u5c31\u662f $(2,4)$\uff0c\u800c\u6574\u4e2a\u77e9\u9635\u5c31\u4f1a\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u6240\u5c55\u793a\u7684\u4e00\u6837\uff08\u4e0b\u56fe\u5c55\u793a\u4e86 $n = 4, m = 4$ \u7684\u60c5\u51b5\uff09\uff1a\n$$\n\\begin{bmatrix}\n\t1 & 3  & 1 & 3 \\\\\n\t2 & 4 & 2 & 4 \\\\\n\t3 & 1 & 3 & 1 \\\\\n\t2 & 4 & 2 & 4\n\\end{bmatrix}\n$$\n\n\n\u4e0b\u9762\u6211\u4eec\u6765\u8bc1\u660e\u8fd9\u79cd\u505a\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\n\u9996\u5148\u8bc1\u660e\u8fd9\u4e48\u586b\u4e00\u5b9a\u53ef\u4ee5\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\uff0c\u8fd9\u4e2a\u8bc1\u660e\u662f\u663e\u7136\u7684\uff0c\u5047\u8bbe\u6211\u4eec\u662f\u76f8\u90bb\u6bcf\u4e00\u884c\u4e0d\u540c\u989c\u8272\uff0c\u90a3\u4e48\u9996\u5148\u5c31\u6392\u9664\u884c\u51b2\u7a81\u7684\u60c5\u51b5\uff0c\u800c\u6211\u4eec\u6bcf\u4e00\u5217\u90fd\u662f\u4ea4\u66ff\u7684\u586b\u5199\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u80af\u5b9a\u53ef\u4ee5\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u3002\n\n\u518d\u6765\u8bc1\u660e\u5982\u679c\u51fa\u73b0\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u60c5\u51b5\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u662f\u65e0\u89e3\u7684\uff0c\u5177\u4f53\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba8\u8bba\u5f62\u5982\n$$\n\\begin{bmatrix}\n\t1 & 0 & 2 & 0 \\\\\n\t2 & 0 & 0 & 0 \\\\\n\t0 & 1 & 0 & 0 \\\\\n\t0 & 0 & 0 & 0\n\\end{bmatrix}\n$$\n\u7684\u89e3\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u76f4\u63a5\u5c06\u5176\u6784\u9020\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u662f\u6784\u9020\u4e0d\u51fa\u89e3\u7684\u3002\u8003\u8651\u5bf9\u4e8e\u6ee1\u8db3\u5176\u4e2d\u7684\u4e00\u5bf9\u8981\u6c42\uff0c\u4ee5\u4e0a\u9762\u7684 $1$ \u4f5c\u4e3a\u4f8b\u5b50\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u76f8\u90bb\u6bcf\u4e00\u884c\u989c\u8272\u4e0d\u540c\u3002\u7136\u800c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e0e $2$ \u76f8\u90bb\u7684\u70b9\uff0c\u4e00\u5b9a\u662f\u4f1a\u51fa\u73b0\u540c\u65f6\u4e0e $1,2,3,4$ \u76f8\u90bb\u7684\u60c5\u51b5\uff0c\u800c\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u62d3\u5c55\uff0c\u4fbf\u5f97\u5230\u4e86\u7ed3\u8bba\u3002\n\n\u6700\u540e\u8003\u8651\u8fd9\u79cd\u6784\u9020\u65b9\u6cd5\u7684\u552f\u4e00\u6027\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e00\u884c\u6216\u8005\u67d0\u4e00\u5217\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u6570\u5b57\uff0c\u90a3\u4e48\u4e0e\u5176\u76f8\u90bb\u7684\u884c\u6216\u8005\u5217\u4e00\u5b9a\u662f\u4f1a\u5b58\u5728\u4e00\u4e2a\u4f4d\u7f6e\u6ca1\u6709\u529e\u6cd5\u653e\u6570\u5b57\u7684\u3002\n\n\u8fd9\u6837\u6211\u4eec\u4fbf\u4e25\u8c28\u7684\u8bc1\u660e\u4e86\u8fd9\u79cd\u65b9\u6cd5\u7684\u6b63\u786e\u6027\u7684\u3002\n\n\u7136\u540e\u9700\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u6709\u60c5\u51b5\u679a\u4e3e\u4e00\u904d\uff0c\u662f\u5e38\u6570\u4e2a\u6570\u7684\uff0c\u4e0e $a$ \u6bd4\u5bf9\u770b\u662f\u5426\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u5bf9\u4e8e\u67d0\u4e9b\u5b9e\u73b0\u65b9\u6cd5\uff0c\u9700\u8981\u7279\u5224 $n = 1$ \u6216 $m = 1$ \u7684\u60c5\u51b5\u3002\n\n### \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e3 + 104;\n\nint n, m;\nint a[N][N];\nint gen[N][N];\n\nint fil[5];\nbool inq[5];\n\nbool check() {\n    bool flag = 1;\n    for(int i = 1; i <= n + 1; i += 2) {\n        for(int j = 1; j <= m + 1; j += 2) {\n            gen[i][j] = fil[1], gen[i][j + 1] = fil[2];\n        }\n        bool tg = 1;\n        for(int j = 1; j <= m; j++) {\n            if(a[i][j] && gen[i][j] != a[i][j])\n                tg = 0;\n        }\n        if(!tg) {\n            for(int j = 1; j <= m + 1; j += 2) {\n                gen[i][j] = fil[2], gen[i][j + 1] = fil[1];\n            }\n            for(int j = 1; j <= m; j++) {\n                if(a[i][j] && gen[i][j] != a[i][j])\n                    flag = 0;\n            }\n        }\n        for(int j = 1; j <= m + 1; j += 2) {\n            gen[i + 1][j] = fil[3], gen[i + 1][j + 1] = fil[4];\n        }\n        tg = 1;\n        for(int j = 1; j <= m; j++) {\n            if(a[i + 1][j] && gen[i + 1][j] != a[i + 1][j])\n                tg = 0;\n        }\n        if(!tg) {\n            for(int j = 1; j <= m + 1; j += 2) {\n                gen[i + 1][j] = fil[4], gen[i + 1][j + 1] = fil[3];\n            }\n            for(int j = 1; j <= m; j++) {\n                if(a[i + 1][j] && gen[i + 1][j] != a[i + 1][j])\n                    flag = 0;\n            }\n        }\n    }\n    if(flag)\n        return 1;\n    flag = 1;\n    for(int j = 1; j <= m + 1; j += 2) {\n        for(int i = 1; i <= n + 1; i += 2) {\n            gen[i][j] = fil[1], gen[i + 1][j] = fil[2];\n        }\n        bool tg = 1;\n        for(int i = 1; i <= n; i++) {\n            if(a[i][j] && gen[i][j] != a[i][j])\n                tg = 0;\n        }\n        if(!tg) {\n            for(int i = 1; i <= n + 1; i += 2) {\n                gen[i][j] = fil[2], gen[i + 1][j] = fil[1];\n            }\n            for(int i = 1; i <= n; i++) {\n                if(a[i][j] && gen[i][j] != a[i][j])\n                    flag = 0;\n            }\n        }\n        for(int i = 1; i <= n + 1; i += 2) {\n            gen[i][j + 1] = fil[3], gen[i + 1][j + 1] = fil[4];\n        }\n        tg = 1;\n        for(int i = 1; i <= n; i++) {\n            if(a[i][j + 1] && gen[i][j + 1] != a[i][j + 1])\n                tg = 0;\n        }\n        if(!tg) {\n            for(int i = 1; i <= n + 1; i += 2) {\n                gen[i][j + 1] = fil[4], gen[i + 1][j + 1] = fil[3];\n            }\n            for(int i = 1; i <= n; i++) {\n                if(a[i][j + 1] && gen[i][j + 1] != a[i][j + 1])\n                    flag = 0;\n            }\n        }\n    }\n    if(flag)\n        return 1;\n    return 0;\n}\n\nvoid dfs(int x) {\n    if(x == 5) {\n        if(check()) {\n            for(int i = 1; i <= n; i++) {\n                for(int j = 1; j <= m; j++) {\n                    printf(\"%d\", gen[i][j]);\n                }\n                printf(\"\\n\");\n            }\n            exit(0);\n        }\n        return;\n    }\n    for(int i = 1; i <= 4; i++) {\n        if(!inq[i]) {\n            inq[i] = 1;\n            fil[x] = i;\n            dfs(x + 1);\n            inq[i] = 0;\n        }\n    }\n    return;\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i++) {\n        char str = getchar();\n        while(str < 33 || str > 126)\n            str = getchar();\n        int j = 0;\n        while(str >= 33 && str <= 126) {\n            a[i][++j] = str - '0';\n            str = getchar();\n        }\n    }\n    dfs(1);\n    printf(\"0\\n\");\n    return 0;\n}\n```\n\n",
        "postTime": 1685716768,
        "uid": 181571,
        "name": "Alpha_Drawer",
        "ccfLevel": 0,
        "title": "CF435E Editorial"
    }
]