[
    {
        "content": "### Solution\n\n\u539f\u9898\u6700\u540e\u7684\u7b54\u6848\u6bd4\u8f83\u96be\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53cd\u65b9\u5411\u601d\u8003\uff1a\u53ea\u9700\u8981\u6c42\u51fa\u6240\u6709\u4eba\u751f\u65e5\u4e0d\u540c\u7684\u6982\u7387\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u6982\u7387\u4e3a $\\dfrac{A_{2^n}^m}{2^{nm}}=\\dfrac{\\prod_{i=2^n-m+1}^{2^n-1}}{2^{n(m-1)}}$ \u3002\n\n\u5206\u6bcd\u90e8\u5206\u7528\u5feb\u901f\u5e42\u5373\u53ef\uff0c\u800c\u5206\u5b50\u90e8\u5206\u9700\u8981\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u56e0\u4e3a\u6a21\u6570\u4e3a $10^6+3$ \uff0c\u5f53 $m$ \u5927\u4e8e\u6a21\u6570\u65f6\uff0c\u5206\u5b50\u7684\u56e0\u6570\u5fc5\u6709\u4e00\u9879\u4e3a\u6a21\u6570\u7684\u500d\u6570\uff0c\u7b54\u6848\u53ef\u8f93\u51fa $0$ \uff0c\u5176\u4ed6\u60c5\u51b5\u66b4\u529b\u6c42\u89e3\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u4e2a\u9898\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f\u5206\u6570\u7684\u7ea6\u5206\u3002\u56e0\u4e3a\u5206\u6bcd\u4e3a $2$ \u7684\u5e42\uff0c\u6240\u4ee5\u627e\u51fa\u5206\u5b50\u4e2d $2$ \u7684\u5e42\u6b21\u5373\u53ef\u3002\u8fd9\u91cc\u7528\u5230\u4e86 $Legendre's~formula$ \u3002\u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709 $1\\leq a\\leq 2^n$ \uff0c\u90fd\u6709 $a$ \u4e0e $2^n-a$ \u7684 $2$ \u7684\u5e42\u6b21\u76f8\u540c\uff0c\u6240\u4ee5\u6c42\u51fa $(m-1)!$ \u4e2d\u7684 $2$ \u7684\u6b21\u6570\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(\\log k+\\log n)$ \n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n\nusing namespace std;\nconst int mod=1e6+3;\nll n,k,num=0,fz=1,fm=1;\n\nll fpow(ll a,ll b){\n    ll res=1;\n    while(b){\n        if(b&1) res=res*a%mod;\n        a=a*a%mod;\n        b>>=1;\n    }\n    return res;\n}\n\nint main(){\n    scanf(\"%lld%lld\",&n,&k);\n    num=1;\n    while((1LL<<num)<k)  num++;\n    if(num>n){\n        printf(\"1 1\");\n        return 0;\n    }\n    num=0;\n    for(ll i=k-1;i>=1;i>>=1) num+=(i>>1);\n    ll a=fpow(2,n);\n    fz=1;\n    for(int i=1;i<k;i++){\n        fz=(ll)fz*(a-i+mod)%mod;\n        if(fz==0) break;\n    }\n    fm=fpow(a,k-1);\n    int inv=fpow(fpow(2,num),mod-2);\n    fz=(ll)fz*inv%mod,fm=(ll)fm*inv%mod;\n    fz=(fm-fz+mod)%mod;\n    printf(\"%lld %lld\",fz,fm);\n    return 0;\n}\n```\n\n",
        "postTime": 1599048995,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "CF711E ZS and The Birthday Paradox"
    },
    {
        "content": "\u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4 \u81f3\u5c11 \u4e24\u4e2a\u5c0f\u670b\u53cb\u751f\u65e5\u76f8\u540c\u7684\u6982\u7387\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u53cd\u9762\u6765\u8003\u8651\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\n\n\u7684\u5c0f\u670b\u53cb\u7684\u751f\u65e5\u90fd\u4e0d\u76f8\u540c\u7684\u6982\u7387\u662f\u591a\u5c11\uff0c\u90a3\u4e48\u6211\u4eec\u8fd9\u4e2a\u53ef\u4ee5\u5217\u51fa\u4e00\u4e2a\u5f0f\u5b50\uff1a\n\nA(2n,k)(2n)k\u2014\u2014(1)\nA(2n,k)(2n)k\u2014\u2014(1)\n\u90a3\u4e48\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\uff1a\u9996\u5148\u56e0\u4e3a\u6709 kk \u4e2a\u5c0f\u670b\u53cb\uff0c\u6240\u4ee5\u6709 kk\u4e2a\u751f\u65e5,\u7136\u540e\u4e00\u4e2a\u5c0f\u670b\u53cb\u751f\u65e5\u662f\u67d0\u4e00\u5929\u7684\u6982\u7387\u662f\n\n12n12n\uff0c\u6240\u4ee5 kk \u4e2a\u5c0f\u670b\u53cb\u7684\u751f\u65e5\u7684\u6982\u7387\u5c31\u662f 1(2n)k1(2n)k\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u4fdd\u8bc1\u6bcf\u4e2a\u5c0f\u670b\u53cb\u7684\u751f\u65e5\u90fd\u4e0d\u662f\n\n\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u5c31\u662f\u4ece 2n2n \u5929\u4e2d\u9009 kk \u4e2a\uff0c\u7136\u540e\u6709 kk \u79cd\u6392\u5217\uff0c\u6240\u4ee5\u5c31\u662f A(2n,k)A(2n,k)\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5316\u7b80 (1)(1) \u5f0f,\n\n\u90a3\u4e48\u6211\u4eec\u901a\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff1a\u5206\u5b50\u548c\u5206\u6bcd\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e00\u5b9a\u662f 2i2i\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5c06 GCDGCD \u6c42\u51fa\u6765\u4e86\uff0c\u7136\u540e\u5206\u5b50\u5206\u6bcd\u5206\n\n\u522b\u9664\u4ee5\u6700\u5927\u516c\u7ea6\u6570\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u5206\u5b50\u7684 22 \u80af\u5b9a\u662f\u6bd4\u5206\u6bcd\u5c11\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u6c42\u51fa\u5206\u5b50\u4e2d\u6709\u591a\u5c11 22 \u5c31\u884c\u4e86\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u662f\u76f8\u5f53\u4e8e\n\nn!n! \u540e\u9762\u6709\u591a\u5c11\u4e2a 00\uff0c\u56e0\u4e3a\u5206\u5b50\u5c55\u5f00\u4e3a\uff1a\n\nA(2n,k)\u00a0=\u00a0(2n)\u2217(2n\u22121)\u2217(2n\u22122)\u2217\u00a0...\u00a0\u2217(2n\u2212k+1)A(2n,k)\u00a0=\u00a0(2n)\u2217(2n\u22121)\u2217(2n\u22122)\u2217\u00a0...\u00a0\u2217(2n\u2212k+1)\n\u9996\u5148\u53ef\u4ee5\u5148\u5c06 2n2n \u4e0e \u5206\u6bcd\u7ea6\u5206\u4e00\u4e0b\uff0c\u7136\u540e\u627e\u7684\u662f (k\u22121)!(k\u22121)! \u6709\u591a\u5c11\u4e2a 22 \uff0c\u6bcf\u6b21\u9664\u4ee5 22\uff0c\u8fd9\u4e2a\u5c31\u4e0d\u7ec6\u8bf4\u4e86\uff0c\u90a3\u4e48\u627e\u5230\n\nGCDGCD \u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u8fdb\u884c\u8ba1\u7b97\uff0c\u56e0\u4e3a\u5206\u6bcd\u597d\u64cd\u4f5c\u5c31\u662f n\u2217(k\u22121)n\u2217(k\u22121) \u6ce8\u610f\u7528\u5feb\u901f\u4e58\u6cd5\u5c0f\u5fc3\u7206 long\u00a0longlong\u00a0long\uff0c\u7136\u540e\u5c31\u662f\u5206\u5b50\u4e86\uff0c\u5176\n\n\u5b9e\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u4e00\u4e0b\u7684\u8bdd\uff0c\u4f1a\u53d1\u73b0\u5982\u679c MOD\u00a0<\u00a0kMOD\u00a0<\u00a0k \u7684 \u65f6\u5019\u5206\u5b50\u4e00\u5b9a\u662f 00\uff0c\u56e0\u4e3a\u5206\u5b50\u4e00\u76f4\u662f (2n\u2212i)(2n\u2212i) \u8fd9\u6837\u7684\uff0c\u5269\u4e0b\u7684\u66b4\u529b\u505a\u5c31\u884c\u4e86\uff0c\u5f97\u5230\u5206\u5b50\u4e4b\u540e\u522b\u5fd8\u8bb0\u9664\u4ee5 GCDGCD\uff0c\u8fd9\u4e2a\u5730\u65b9\u5c31\u8981\u901a\u8fc7\u9006\u5143\u6765\u5b9e\u73b0\u4e86\uff0c\u8fd8\u6709\u9700\u8981\u6ce8\u610f\u7684\u662f\u5f53 2n<k2n<k \u7684\u65f6\u5019 \u76f4\u63a5\u8f93\u51fa 1\u00a011\u00a01 \u5c31\u884c\u4e86 \u6700\u540e\u4e0d\u8981\u5fd8\u8bb0 \u6982\u7387\u662f 1\u2212ans1\u2212ans \u3002\n\nMy\u00a0Code\uff1a\n~~~\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <algorithm>\n#include <set>\nusing namespace std;\ntypedef long long LL;\ntypedef unsigned long long ULL;\nconst int INF = 1e9+5;\nconst int MAXN = 1e3+5;\nconst LL MOD = 1e6+3;\nconst double eps = 1e-7;\nconst double PI = acos(-1);\nusing namespace std;\nLL Scan_LL()///\u8f93\u5165\u5916\u6302\n{\n    LL res=0,ch,flag=0;\n    if((ch=getchar())=='-')\n        flag=1;\n    else if(ch>='0'&&ch<='9')\n        res=ch-'0';\n    while((ch=getchar())>='0'&&ch<='9')\n        res=res*10+ch-'0';\n    return flag?-res:res;\n}\nint Scan_Int()///\u8f93\u5165\u5916\u6302\n{\n    int res=0,ch,flag=0;\n    if((ch=getchar())=='-')\n        flag=1;\n    else if(ch>='0'&&ch<='9')\n        res=ch-'0';\n    while((ch=getchar())>='0'&&ch<='9')\n        res=res*10+ch-'0';\n    return flag?-res:res;\n}\nvoid Out(LL a)///\u8f93\u51fa\u5916\u6302\n{\n    if(a>9)\n        Out(a/10);\n    putchar(a%10+'0');\n}\nLL Multi(LL a, LL b)\n{\n    LL ans = 0;\n    while(b)\n    {\n        if(b & 1)\n            ans = (ans+a)%(MOD-1);\n        b>>=1LL;\n        a = (a+a)%(MOD-1);\n    }\n    return ans;\n}\nLL quick(LL a, LL b)\n{\n    LL ans = 1;\n    while(b)\n    {\n        if(b & 1)\n            ans = (ans*a) % MOD;\n        b>>=1LL;\n        a = (a*a) % MOD;\n    }\n    return ans;\n}\nvoid Exgcd(LL a, LL b, LL &x, LL &y)\n{\n    if(b == 0)\n    {\n        x = 1;\n        y = 0;\n        return;\n    }\n    LL x1, y1;\n    Exgcd(b, a%b, x1, y1);\n    x = y1;\n    y = x1 - (a/b)*y1;\n}\nint main()\n{\n    LL Inv, y;\n    Exgcd(2, MOD, Inv, y);\n    Inv = (Inv%MOD+MOD)%MOD;\n    LL n, k;\n    while(cin>>n>>k)\n    {\n        if(n < 63LL)\n        {\n            if(k > (1LL<<n))\n                puts(\"1 1\");\n            else\n            {\n                LL ans = 0, fm = k, tmp;\n                fm--;\n                while(fm)\n                {\n                    fm>>=1LL;\n                    ans += fm;\n                }\n                fm = k-1LL;\n                fm = Multi(n, fm);\n                fm = (fm-ans)%(MOD-1);\n                fm = (fm%(MOD-1)+(MOD-1))%(MOD-1);\n                fm = quick(2LL, fm);\n                if(k > MOD)\n                {\n                    cout<<fm<<\" \"<<fm<<endl;\n                    continue;\n                }\n                tmp = quick(2LL, n);\n                LL fz = 1;\n                for(LL i=1; i<k; i++)\n                    fz = fz*(tmp-i)%MOD;\n                fz = (fz%MOD+MOD)%MOD;\n                fz = fz*quick(Inv, ans)%MOD;\n                fz = fm - fz;\n                fz = (fz%MOD+MOD)%MOD;\n                cout<<fz<<\" \"<<fm<<endl;\n            }\n        }\n        else\n        {\n            LL ans = 0, fm = k, tmp;\n            fm--;\n            while(fm)\n            {\n                fm>>=1LL;\n                ans += fm;\n            }\n            /** 2^ans \u662f\u6700\u5927\u516c\u7ea6\u6570 **/\n            fm = k-1LL;\n            fm = Multi(n, fm);\n            fm = (fm-ans)%(MOD-1);\n            fm = (fm%(MOD-1)+(MOD-1))%(MOD-1);\n            fm = quick(2LL, fm);\n            if(k > MOD)\n            {\n                cout<<fm<<\" \"<<fm<<endl;\n                continue;\n            }\n            tmp = quick(2LL, n);\n            LL fz = 1;\n            for(LL i=1; i<k; i++)\n                fz = fz*(tmp-i)%MOD;\n            fz = fz*quick(Inv, ans)%MOD;\n            fz = fm - fz;\n            fz = (fz%MOD+MOD)%MOD;\n            cout<<fz<<\" \"<<fm<<endl;\n        }\n    }\n    return 0;\n}\n~~~",
        "postTime": 1548573401,
        "uid": 115066,
        "name": "yang2018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF711E \u3010ZS and The Birthday Paradox\u3011"
    }
]