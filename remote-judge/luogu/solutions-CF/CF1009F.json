[
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1ahttps://thomasguo666.github.io/post/solution-cf1009f/\n\n---\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u53ef\u4ee5\u60f3\u5230\u662f\u4e00\u4e2aDP\u3002\u72b6\u6001\u8bbe\u8ba1\uff1a$f_{u,dep}$ \u8868\u793a u \u7684\u5b50\u6811\u4e2d\u4e0e u \u8ddd\u79bb\u4e3a dep \u7684\u70b9\u7684\u4e2a\u6570\u3002\n\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b: \n $$\nf_{u,dep}=\\sum_{v \\in son_u} f_{v,dep-1}\n$$\n\n\u7136\u800c\u5982\u679c\u76f4\u63a5\u66b4\u529b\u8f6c\u79fb\u7684\u8bdd\u663e\u7136\u4f1a T \u98de\u6216\u8005 M \u98de\uff0c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u70b9\u70b9\u7684\u4f18\u5316\u3002\n\n---\n\n\u5f15\u5165\u4e00\u4e2a\u6982\u5ff5\uff1a**\u957f\u94fe\u5256\u5206**\n\n\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u7ed3\u70b9 u \u7684\u5b50\u6811\u4e2d\uff0c\u5230\u8fd9\u4e2a\u8282\u70b9\u8ddd\u79bb\u6700\u5927\u7684\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u8ba1\u4e3a $dep_u$ \u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 u\uff0c\u6211\u4eec\u628a\u4ed6\u7684\u6240\u6709\u5b69\u5b50\u4e2d dep \u503c\u6700\u5927\u7684\u79f0\u4f5c\u8fd9\u4e2a\u8282\u70b9\u7684 **\u957f\u513f\u5b50**\u3002\n\n\u4ece\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u8d70\u5411\u4ed6\u7684\u957f\u513f\u5b50\uff0c\u4e00\u76f4\u8d70\u5230\u53f6\u5b50\u8282\u70b9\u4e3a\u6b62\uff0c\u7ecf\u8fc7\u7684\u8def\u5f84\u5c31\u662f\u4e00\u6761**\u957f\u94fe**\u3002\u663e\u7136\uff0c\u4e00\u6574\u68f5\u6811\u4f1a\u88ab\u5206\u6210\u82e5\u5e72\u6761\u957f\u94fe\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u90fd\u5728\u6070\u597d\u4e00\u6761\u957f\u94fe\u4e0a\uff0c\u6bcf\u6761\u8fb9\u8981\u4e48\u5728\u957f\u94fe\u4e0a\uff0c\u8981\u4e48\u628a\u4e00\u6761\u957f\u94fe\u7684\u9876\u7aef\u8fde\u5411\u53e6\u4e00\u6761\u957f\u94fe\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n\nint dep[1000005],son[1000005];\nvoid dfs1(int u,int fa)\n{\n    for (int e=head[u];e;e=nex[e]) // \u94fe\u5f0f\u524d\u5411\u661f\n    {\n        int v=tail[e];\n        if (v==fa) continue;\n        dfs1(v,u);\n        if (dep[v]>dep[son[u]]) son[u]=v; // \u5bfb\u627e\u957f\u513f\u5b50\n    }\n    dep[u]=dep[son[u]]+1; // \u7edf\u8ba1 u \u7684 dep\n}\n```\n\n---\n\n\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u548c DP \u53c8\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e00\u4e2a\u4f18\u5316\u7b56\u7565\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 u\uff0c\u6211\u4eec\u5148\u5bf9\u5b83\u7684\u957f\u513f\u5b50\u505aDP\uff0c\u4f46\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u6280\u5de7\uff0c\u8ba9\u957f\u513f\u5b50\u628a dp \u51fa\u6765\u7684\u4e1c\u897f\u76f4\u63a5\u5b58\u5230 $f_u$ \u91cc\u9762\u53bb\uff08\u5f53\u7136\u89c2\u5bdf dp \u5f0f\u53ef\u4ee5\u53d1\u73b0\u8fd9\u8fb9\u9700\u8981\u9519\u4e00\u4f4d\uff09\uff0c\u7136\u540e\u518d\u628a\u5176\u4ed6\u513f\u5b50 dp \u51fa\u6765\u7684\u4e1c\u897f\u4e0e $f_u$ \u66b4\u529b\u5408\u5e76\u3002\n\n\u8fd9\u91cc\u8be6\u7ec6\u5730\u8bf4\u4e00\u8bf4\u5230\u5e95\u600e\u4e48\u6837\u5b9e\u73b0\u8fd9\u4e2a\u4f18\u5316\uff08\u8c8c\u4f3c\u5176\u4ed6\u9898\u89e3\u5199\u5f97\u90fd\u5f88\u7b80\u7565\u554a\u2026\u2026\u7a9d\u770b\u4e86\u534a\u5929\u90fd\u770b\u4e0d\u61c2\uff0c\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86\uff09\n\n\u9996\u5148\uff0c\u6211\u4eec\u629b\u5f03\u4f20\u7edf DP \u7684\u9884\u5148\u4e3a\u6bcf\u4e2a\u8282\u70b9\u90fd\u7533\u8bf7\u4e00\u7247\u7a7a\u95f4\u7684\u5199\u6cd5\uff08\u7a7a\u95f4\u5f00\u9500\u8fc7\u5927\uff09\uff0c\u800c\u662f\u5728 DP \u7684\u8fc7\u7a0b\u4e2d\uff0c\u52a8\u6001\u7684\u4e3a\u8282\u70b9\u7533\u8bf7\uff08DP\u6570\u7ec4\u7684\uff09\u5185\u5b58\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u8981\u91c7\u7528\u6307\u9488\u7684\u5199\u6cd5\u3002\n\n\u7136\u540e\uff0c**\u6211\u4eec\u53ea\u5bf9\u6bcf\u4e00\u4e2a\u957f\u94fe\u7684\u9876\u7aef\u8282\u70b9\u7533\u8bf7\u5185\u5b58**\uff0c\u800c\u5bf9\u4e8e\u4e00\u6761\u957f\u94fe\u4e0a\u7684\u6240\u6709\u8282\u70b9\uff0c\u6211\u4eec\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u516c\u7528\u4e00\u7247\u7a7a\u95f4\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5047\u8bbe\u5bf9\u8282\u70b9 u \u7533\u8bf7\u4e86\u5185\u5b58\u4e4b\u540e\uff0c\u8bbe v \u662f u \u7684\u957f\u513f\u5b50\uff0c\u6211\u4eec\u5c31\u628a $f_u$ \u6570\u7ec4\u7684\u8d77\u70b9\uff08\u7684\u6307\u9488\uff09\u52a0\u4e00\u5f53\u4f5c $f_v$ \u6570\u7ec4\u7684\u8d77\u70b9\uff08\u7684\u6307\u9488\uff0c\u4e0b\u540c\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u4e5f\u5c31\u662f\u4e0a\u9762\u8bf4\u7684\u201c\u8ba9\u957f\u513f\u5b50\u628a dp \u51fa\u6765\u7684\u4e1c\u897f\u76f4\u63a5\u5b58\u5230 $f_u$ \u91cc\u9762\u53bb\u201d\u3002\u5f53\u7136\uff0c\u7533\u8bf7\u7684\u5185\u5b58\u8981\u80fd\u88c5\u4e0b\u4e00\u6761\u957f\u94fe\u3002\n\n\u90a3\u4e48\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f7f\u7528\u4e86\u8fd9\u4e2a\u4f18\u5316\u4e4b\u540e\u53ef\u4ee5\u628a\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u51cf\u5230 $O(n)$ \u7ea7\u522b\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u4f1a\u5728\u5b83\u6240\u5728\u7684\u957f\u94fe\u9876\u7aef\u88ab\u7edf\u8ba1\uff08\u6216\u8005\u8bf4\u662f\u88ab\u66b4\u529b\u5408\u5e76\uff09\u4e00\u6b21\u3002\n\n\u8fd9\u90e8\u5206\u4f18\u5316\u7684\u4ee3\u7801\u957f\u6210\u8fd9\u4e2a\u6837\u5b50\uff1a\n```cpp\nvoid dfs2(int u,int fa)\n{\n    f[u][0]=1; // \u5148\u7b97\u4e0a\u81ea\u5df1\n    if (son[u])\n    {\n        f[son[u]]=f[u]+1; // \u5171\u4eab\u5185\u5b58\uff0c\u8fd9\u6837\u4e00\u6b65\u4e4b\u540e\uff0cf[son[u]][dep]\u4f1a\u88ab\u81ea\u52a8\u4fdd\u5b58\u5230f[u][dep-1]\n        dfs2(son[u],u);\n    }\n    for (int e=head[u];e;e=nex[e])\n    {\n        int v=tail[e];\n        if (v==son[u] || v==fa) continue;\n        f[v]=now;now+=dep[v]; // \u4e3a v \u8282\u70b9\u7533\u8bf7\u5185\u5b58\uff0c\u5927\u5c0f\u7b49\u4e8e\u4ee5 v \u4e3a\u9876\u7aef\u7684\u957f\u94fe\u7684\u957f\u5ea6\n        dfs2(v,u);\n        for (int i=1;i<=dep[v];i++)\n        {\n            f[u][i]+=f[v][i-1]; //\u66b4\u529b\u5408\u5e76\n        }\n    }\n}\n```\n\n\u5f53\u7136\uff0c\u5728 dp \u5f00\u59cb\u524d\u8981\u5148\u4e3a\u4ee5\u6811\u6839\u4e3a\u9876\u7aef\u7684\u957f\u94fe\u7533\u8bf7\u5185\u5b58\u3002\n\n\u7136\u800c\uff0c\u5149\u6709 dp \u6570\u7ec4\u8fd8\u6ca1\u7528\uff0c\u6211\u4eec\u8fd8\u8981\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u4ee4 u \u8282\u70b9\u7684\u7b54\u6848\u4e3a\u5b83\u7684\u957f\u513f\u5b50\u7684\u7b54\u6848\u52a0\u4e00\u3002\u7136\u540e\u5728\u66b4\u529b\u5408\u5e76\u7684\u8fc7\u7a0b\u5f53\u4e2d\u6bcf\u6b21\u68c0\u67e5\u5f53\u524d\u7684 dep \u662f\u5426\u4f18\u4e8e $ans_u$ \uff08$ans_u$ \u5c31\u662f\u9898\u76ee\u8981\u6c42\u7684\u4e1c\u897f\uff09\uff0c\u5982\u679c\u662f\u7684\u8bdd\u90a3\u5c31\u66f4\u65b0\u7b54\u6848\u3002\n\n\u6700\u540e\u5982\u679c\u53d1\u73b0 $f_{u,ans_u}=1$\uff0c\u5373 u \u7684\u5b50\u6811\u4e3a\u4e00\u6761\u94fe\uff0c\u65e0\u8bba\u5728\u54ea\u4e2a\u6df1\u5ea6\u4e0b\u90fd\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u628a\u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848 $ans_u$ \u8bbe\u4e3a 0 \uff0c\u8fd9\u4e2a\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u3002\n\n\u6700\u540e\u653e\u4e0a\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define debug printf(\"Running %s on line %d...\\n\",__FUNCTION__,__LINE__)\n#define in inline\n#define re register\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nin int read()\n{\n    int ans=0,f=1;char c=getchar();\n    for (;!isdigit(c);c=getchar()) if (c=='-') f=-1;\n    for (;isdigit(c);c=getchar()) ans=(ans<<3)+(ans<<1)+(c^48);\n    return ans*f;\n}\nin int cmin(int &a,int b) {return a=min(a,b);}\nin int cmax(int &a,int b) {return a=max(a,b);}\nint n;\nint buf[1000005];\nint *f[1000005],*g[1000005],*now=buf;\nint nex[2000005],head[1000005],tail[2000005],tot;\nint ans[1000005];\nvoid addedge(int u,int v)\n{\n    nex[++tot]=head[u];\n    head[u]=tot;\n    tail[tot]=v;\n}\nint dep[1000005],son[1000005];\nvoid dfs1(int u,int fa) // \u957f\u94fe\u5256\u5206\n{\n    for (int e=head[u];e;e=nex[e])\n    {\n        int v=tail[e];\n        if (v==fa) continue;\n        dfs1(v,u);\n        if (dep[v]>dep[son[u]]) son[u]=v;\n    }\n    dep[u]=dep[son[u]]+1;\n}\nvoid dfs2(int u,int fa) //\u505adp\n{\n    f[u][0]=1;\n    if (son[u])\n    {\n        f[son[u]]=f[u]+1; // \u5171\u4eab\u5185\u5b58\n        dfs2(son[u],u);\n        ans[u]=ans[son[u]]+1; //\u4ece\u957f\u5b69\u5b50\u8282\u70b9\u7ee7\u627f\u7b54\u6848\n    }\n    for (int e=head[u];e;e=nex[e])\n    {\n        int v=tail[e];\n        if (v==son[u] || v==fa) continue;\n        f[v]=now;now+=dep[v]; // \u5206\u914d\u5185\u5b58\n        dfs2(v,u);\n        for (int i=1;i<=dep[v];i++)\n        {\n            f[u][i]+=f[v][i-1]; //\u66b4\u529b\u5408\u5e76\n            if (f[u][i]>f[u][ans[u]] || (f[u][i]==f[u][ans[u]] && i<ans[u])) ans[u]=i; //\u66f4\u65b0\u7b54\u6848\n        }\n    }\n    if (f[u][ans[u]]==1) ans[u]=0;\n}\nint main()\n{\n    n=read();\n    for (int i=1;i<n;i++)\n    {\n        int u=read(),v=read();\n        addedge(u,v);\n        addedge(v,u);\n    }\n    dfs1(1,0); // \u957f\u94fe\u5256\u5206\n    f[1]=now;now+=dep[1]; // \u4e3a\u6839\u8282\u70b9\u7684\u7b54\u6848\u5206\u914d\u5185\u5b58\n    dfs2(1,0);\n    for (int i=1;i<=n;i++) cout<<ans[i]<<endl;\n    return 0;\n}\n\n```\n\n\u5b8c\u7ed3\u6492\u82b1\\*\u2605,\u00b0\\*:.\u2606(\uffe3\u25bd\uffe3)/$:\\*.\u00b0\u2605\\* \u3002\uff01",
        "postTime": 1586352320,
        "uid": 107935,
        "name": "Thomasguo666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "\u4e00\u9053\u975e\u5e38\u4e0d\u9519\u7684\u957f\u94fe\u5256\u5206\u7ec3\u624b\u9898\u3002\n\n\u9996\u5148\u662f\u5e38\u89c4\u7684 DP\uff1a\u8bbe $f_{i,j}$ \u8868\u793a\u70b9 $i$ \u7684 $j$ \u7ea7\u5b50\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u5f88\u663e\u7136\uff08\u5176\u4e2d $v$ \u662f $i$ \u7684\u5b50\u8282\u70b9\uff09\uff1a\n\n$$\nf_{i,j}=\\sum f_{v,j-1}\n$$\n\n\u8fb9\u754c\u662f $f_{i,0}=1$\u3002\n\n\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u9700\u8981\u4f18\u5316\u3002\n\n\u8fd9\u65f6\u5019\u957f\u94fe\u5256\u5206\u5c31\u767b\u573a\u4e86\uff08\u5b9e\u9645\u4e0a\u662f\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u601d\u8def\uff09\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5148\u904d\u5386\u5b83\u7684\u91cd\u513f\u5b50\uff0c\u5c06\u91cd\u513f\u5b50\u7684\u7ed3\u679c\u5408\u5e76\uff08\u8bf4\u662f\u5408\u5e76\uff0c\u5176\u5b9e\u76f4\u63a5\u7ee7\u627f\u4e86\u91cd\u513f\u5b50\u7684\u7ed3\u679c\uff0c\u5e76\u6dfb\u52a0\u4e86\u5f53\u524d\u70b9\u7684\u4fe1\u606f\uff09\u5230\u5f53\u524d\u70b9\u4e0a\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u904d\u5386\u8fd9\u4e2a\u70b9\u7684\u5176\u4ed6\u8f7b\u513f\u5b50\uff0c\u5c06\u8fd9\u4e9b\u8f7b\u513f\u5b50\u7684\u7ed3\u679c\u5e76\u5230\u5f53\u524d\u8282\u70b9\u4e0a\u3002\n\n\u6bcf\u6761\u91cd\u94fe\u90fd\u53ea\u5408\u5e76\u4e86\u4e00\u6b21\uff0c\u6545\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n---\n\n\u9898\u89e3\u533a\u4f3c\u4e4e\u6ca1\u6709\u975e\u6307\u9488\u7248\u7684\u5b9e\u73b0\uff1f\u5176\u5b9e\u7528 vector \u4e5f\u662f\u53ef\u4ee5\u641e\u7684\u3002\n\n\u601d\u8def\u4ecd\u7136\u662f\u7528 vector \u5b58\u4e0b\u6bcf\u4e2a\u70b9\u7684\u4fe1\u606f\u3002\u4e0d\u8fc7\u6709\u51e0\u4e2a\u7279\u6b8a\u4e4b\u5904\uff1a\n\n1. \u6309\u6df1\u5ea6\u9012\u589e\u7684\u987a\u5e8f\u5b58\u50a8\u7684\u8bdd\uff0c\u56e0\u4e3a\u5408\u5e76\u91cd\u513f\u5b50\u4fe1\u606f\u65f6\u8981\u5728\u5f00\u5934\u63d2\u5165\u5143\u7d20\uff0c\u6548\u7387\u4f4e\u4e0b\u3002\u6240\u4ee5\u8003\u8651\u6309\u6df1\u5ea6\u9012\u51cf\u7684\u987a\u5e8f\u5b58\u50a8\u4fe1\u606f\u3002\n2. \u5408\u5e76\u91cd\u513f\u5b50\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u7528 swap \u4ea4\u6362\u800c\u4e0d\u662f\u590d\u5236\uff0c\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u90fd\u66f4\u4f18\uff08swap \u4ea4\u6362 vector \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(1)$ \u7684\uff09\u3002\n\n```cpp\n// Problem : F. Dominant Indices\n// Contest : Educational Codeforces Round 47 (Rated for Div. 2)\n// URL : https://codeforces.com/contest/1009/problem/F\n// Author : StudyingFather\n// Site : https://studyingfather.com\n// Memory Limit : 512 MB\n// Time Limit : 4500 ms\n// Powered by CP Editor (https://github.com/cpeditor/cp-editor)\n\n#include <cstdio>\n#include <vector>\nusing namespace std;\nvector<int> e[1000005],f[1000005];\nint fa[1000005],len[1000005],son[1000005];\nint ans[1000005];\nvoid dfs1(int u,int f)\n{\n fa[u]=f;\n for(auto v:e[u])\n  if(v!=f)\n  {\n   dfs1(v,u);\n   if(len[v]>=len[son[u]])\n    son[u]=v,len[u]=len[v]+1;\n  }\n}\nvoid dfs2(int u)\n{\n if(son[u])\n {\n  dfs2(son[u]);\n  swap(f[u],f[son[u]]);//\u76f4\u63a5\u4ea4\u6362\uff0c\u964d\u4f4e\u65f6\u95f4\u7a7a\u95f4\u5f00\u9500\n  f[u].push_back(1);//\u5c3e\u90e8\u63d2\u5165\u6df1\u5ea6\u4e3a\u96f6\u7684\u7ed3\u679c\n  ans[u]=ans[son[u]];\n  if(f[u][ans[u]]==1)ans[u]=len[u];\n  for(auto v:e[u])\n  {\n   if(v==fa[u]||v==son[u])continue;\n   dfs2(v);\n   for(int i=len[v];i>=0;i--)\n   {\n    int tmp=i+len[u]-len[v]-1;\n    f[u][tmp]+=f[v][i];\n    if(f[u][tmp]>f[u][ans[u]]||(f[u][tmp]==f[u][ans[u]]&&tmp>ans[u]))\n     ans[u]=tmp;//\u8fd9\u91cc\u5b58\u50a8\u7684\u662f\u6700\u4f18\u89e3\u5728\u6570\u7ec4\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u7ed3\u679c\u9700\u8981\u5012\u8fc7\u6765\n   }\n  }\n }\n else\n {\n  f[u].push_back(1);\n  ans[u]=0;\n }\n}\nint main()\n{\n int n;\n scanf(\"%d\",&n);\n for(int i=1;i<n;i++)\n {\n  int u,v;\n  scanf(\"%d%d\",&u,&v);\n  e[u].push_back(v);\n  e[v].push_back(u);\n }\n dfs1(1,0);\n dfs2(1);\n for(int i=1;i<=n;i++)\n  printf(\"%d\\n\",len[i]-ans[i]);\n return 0;\n}\n```",
        "postTime": 1584368914,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "\u9664\u4e86\u957f\u94fe\u5256\u5206\uff0c\u6b64\u9898\u8fd8\u53ef\u4ee5\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u53f6\u8282\u70b9\uff0c\u5c06\u5b83\u4e0e\u5b50\u6811\u5408\u5e76\u3002\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u7684\u4e0b\u6807\u4e3adeep\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u8282\u70b9\u91cc\u7684\u6570\u91cf\u6700\u5927\u503c\uff0c\u4f18\u5148\u9760\u5728\u5de6\u8fb9\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint res=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\t\n\twhile(ch>='0'&&ch<='9'){res=(res<<3)+(res<<1)+ch-'0';ch=getchar();}\n\treturn res*f;\n}\nvoid write(int x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) write(x/10);\n\tputchar(x%10|'0');\n}\nconst int N=2000005;\nconst int M=21000005;\nint n,fir[N],nxt[N<<1],go[N<<1],dep[N],cnt,CNT;\nint root[N],lc[M],rc[M],tr[M],id[M],ans[N];\ninline void Add(int u,int v){\n\tnxt[++cnt]=fir[u];\n\tfir[u]=cnt;\n\tgo[cnt]=v;\n}\nvoid init(int u,int fa){\n\tdep[u]=dep[fa]+1;\n\tfor(int e=fir[u];e;e=nxt[e]){\n\t\tint v=go[e];\n\t\tif(v==fa) continue;\t\n\t\tinit(v,u);\n\t}\n}\nvoid insert(int &now,int l,int r,int x,int val){\n\tif(!now) now=++CNT;\n\tif(l==r){\n\t\ttr[now]+=val;\n\t\tid[now]=x;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid) insert(lc[now],l,mid,x,val);\n\telse insert(rc[now],mid+1,r,x,val);\n\tif(tr[lc[now]]>=tr[rc[now]]){\n\t\ttr[now]=tr[lc[now]];\t\n\t\tid[now]=id[lc[now]];\n\t}else{\n\t\ttr[now]=tr[rc[now]];\n\t\tid[now]=id[rc[now]];\n\t}\n}\nint merge(int x,int y,int l,int r){\n\tif(!x) return y;\n\tif(!y) return x;\n\tif(l==r){\n\t\ttr[x]+=tr[y];\n\t\tid[x]=l;\n\t\treturn x;\n\t}\n\tint mid=(l+r)>>1;\n\tlc[x]=merge(lc[x],lc[y],l,mid);\n\trc[x]=merge(rc[x],rc[y],mid+1,r);\n\tif(tr[lc[x]]>=tr[rc[x]]){\n\t\ttr[x]=tr[lc[x]];\n\t\tid[x]=id[lc[x]];\n\t}else{\n\t\ttr[x]=tr[rc[x]];\n\t\tid[x]=id[rc[x]];\t\n\t}\t\n\treturn x;\n}\nvoid dfs(int u,int fa){\n\tinsert(root[u],1,n,dep[u],1);\n\tfor(int e=fir[u];e;e=nxt[e]){\n\t\tint v=go[e];\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\t\n\t\troot[u]=merge(root[u],root[v],1,n);\n\t}\n\tans[u]=id[root[u]]-dep[u];\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<n;i++){\n\t\tint u=read(),v=read();\n\t\tAdd(u,v);Add(v,u);\n\t}\n\tinit(1,0);\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++){\n\t\twrite(ans[i]);putchar('\\n');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1561355535,
        "uid": 20504,
        "name": "Rachel_in",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "[\u5728\u535a\u5ba2\u67e5\u770b](https://www.cnblogs.com/chenxiaoran666/p/CF1009F.html)\n\n**\u5927\u81f4\u9898\u610f\uff1a** \u8bbe$d(x,y)$\u8868\u793a$x$\u5b50\u6811\u5185\u5230$x$\u8ddd\u79bb\u4e3a$y$\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u5bf9\u4e8e\u6bcf\u4e2a$x$\uff0c\u6c42\u6ee1\u8db3$d(x,y)$\u6700\u5927\u7684\u6700\u5c0f\u7684$y$\u3002\n\n### \u66b4\u529b$DP$\n\n\u9996\u5148\u8ba9\u6211\u4eec\u6765\u601d\u8003\u5982\u4f55\u66b4\u529b$DP$\u3002\n\n\u8fd9\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u5427\u3002\n\n\u76f4\u63a5\u8bbe$f_{x,i}$\u8868\u793a**\u5728$x$\u7684\u5b50\u6811\u5185\uff0c\u5230$x$\u7684\u8ddd\u79bb\u4e3a$i$\u7684\u70b9\u7684\u4e2a\u6570**\u3002\n\n\u5219\u4e0d\u96be\u63a8\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_{x,0}=1,f_{x,i}=\\sum f_{son_x,i-1}$$\n\n\u4f46\u8fd9\u6837\u663e\u7136\u8dd1\u4e0d\u8fc7\uff0c\u8981\u4f18\u5316\u3002\n\n### \u957f\u94fe\u5256\u5206\n\n\u8fd9\u662f\u4e00\u9053[**\u957f\u94fe\u5256\u5206**](https://www.cnblogs.com/chenxiaoran666/p/LongChainDissection.html)\u4f18\u5316$DP$\u7684\u5178\u578b\u4f8b\u9898\u3002\n\n\u8bbe$len_x$\u4e3a$x$\u5230\u53f6\u8282\u70b9\u7684\u6700\u957f\u8ddd\u79bb\uff0c\u5219\u4e0d\u96be\u53d1\u73b0\u8f6c\u79fb\u65b9\u7a0b\u7b2c\u4e8c\u7ef4$i$\u663e\u7136\u4e0d\u53ef\u80fd\u8d85\u8fc7$len_x$\u3002\n\n\u8003\u8651\u4f7f\u7528**\u6307\u9488**\uff08\u867d\u7136\u6211\u5f88\u4e0d\u559c\u6b22\u6307\u9488\uff0c\u4f46\u8c8c\u4f3c\u8fd9\u91cc\u5fc5\u987b\u7528$2333$\uff09\uff0c\u5bf9\u4e8e\u6bcf\u6761\u957f\u94fe\u9876\u70b9\u7ed9\u5b83\u5f00\u4e00\u4e2a\u957f\u5ea6\u4e3a$len_x$\u7684\u5185\u5b58\u4f9b\u5b83\u5b58\u50a8\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u6761\u957f\u94fe\u7684\u7b2c$i$\u4e2a\u5143\u7d20$t_i$\uff0c\u6211\u4eec\u5c31\u7528\u7b2c$i$\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a$f_{t_i,0}$\u3002\n\n\u8fd9\u6837\u7684\u597d\u5904\u5c31\u5728\u4e8e\uff0c\u5bf9\u4e8e\u4e00\u6761\u957f\u94fe\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u76f4\u63a5\u8ba9\u7236\u8282\u70b9\u4ece\u5b50\u8282\u70b9\u90a3\u91cc\u7ee7\u627f\u7b54\u6848\u7684\uff01\n\n\u662f\u4e0d\u662f\u975e\u5e38\u795e\u5947\uff1f\n\n\u800c\u5bf9\u4e8e\u975e\u957f\u513f\u5b50\uff0c\u6211\u4eec\u66b4\u529b\u5408\u5e76\u4e24\u6761\u94fe\u3002\n\n\u7531\u4e8e\u6bcf\u6761\u94fe\u53ea\u4f1a\u88ab\u5408\u5e76\u4e00\u6b21\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u5c31\u8fbe\u5230\u4e86\u65e0\u6bd4\u4f18\u79c0\u7684$O(n)$\uff01\n\n\u662f\u4e0d\u662f\u5f88\u795e\u5947\uff1f\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define Reg register\n#define RI Reg int\n#define Con const\n#define CI Con int&\n#define I inline\n#define W while\n#define N 1000000\n#define add(x,y) (e[++ee].nxt=lnk[x],e[lnk[x]=ee].to=y)\nusing namespace std;\nint n,ee,lnk[N+5];struct edge {int to,nxt;}e[N<<1];\nclass FastIO\n{\n\tprivate:\n\t\t#define FS 100000\n\t\t#define tc() (A==B&&(B=(A=FI)+fread(FI,1,FS,stdin),A==B)?EOF:*A++)\n\t\t#define pc(c) (C^FS?FO[C++]=c:(fwrite(FO,1,C,stdout),FO[(C=0)++]=c))\n\t\t#define tn (x<<3)+(x<<1)\n\t\t#define D isdigit(c=tc())\n\t\tint T,C;char c,*A,*B,FI[FS],FO[FS],S[FS];\n\tpublic:\n\t\tI FastIO() {A=B=FI;}\n\t\tTp I void read(Ty& x) {x=0;W(!D);W(x=tn+(c&15),D);}\n\t\tTs I void read(Ty& x,Ar&... y) {read(x),read(y...);}\n\t\tTp I void write(Ty x) {W(S[++T]=x%10+48,x/=10);W(T) pc(S[T--]);}\n\t\tTp I void writeln(Con Ty& x) {write(x),pc('\\n');}\n\t\tI void clear() {fwrite(FO,1,C,stdout),C=0;}\n\t\t#undef D\n}F;\nclass LongChainDissection//\u957f\u94fe\u5256\u5206\u4f18\u5316DP\n{\n\tprivate:\n\t\t#define Assign(x) (f[x]=p,p+=len[x])//\u5206\u914d\u5185\u5b58\n\t\t#define F5(x,v) ((f[x][ans[x]]<f[x][v]||(f[x][ans[x]]==f[x][v]&&ans[x]>v))&&(ans[x]=v))//\u66f4\u65b0\u7b54\u6848\n\t\tint son[N+5],len[N+5],ans[N+5],*p,*f[N+5],_f[N+5];\n\t\tI void dfs(CI x,CI lst)//DFS\u9884\u5904\u7406\u957f\u513f\u5b50\u4e0elen\u6570\u7ec4\n\t\t{\n\t\t\tfor(RI i=lnk[x];i;i=e[i].nxt) e[i].to^lst&&\n\t\t\t\t(dfs(e[i].to,x),len[e[i].to]>len[son[x]]&&(son[x]=e[i].to));\n\t\t\tlen[x]=len[son[x]]+1;\n\t\t}\n\t\tI void DP(CI x,CI lst)//DP\n\t\t{\n\t\t\tRI i,j;son[x]&&(f[son[x]]=f[x]+1,DP(son[x],x),ans[x]=ans[son[x]]+1);//\u4f18\u5148\u5904\u7406\u957f\u513f\u5b50\uff0c\u5e76\u7ee7\u627f\u7b54\u6848\n\t\t\tfor(i=lnk[x];i;i=e[i].nxt) if(e[i].to^lst&&e[i].to^son[x])//\u679a\u4e3e\u975e\u957f\u513f\u5b50\n\t\t\t\tfor(Assign(e[i].to),DP(e[i].to,x),j=1;j<=len[e[i].to];++j)//\u66b4\u529b\u5408\u5e76\n\t\t\t\t\tf[x][j]+=f[e[i].to][j-1],F5(x,j);f[x][0]=1,F5(x,0);\n\t\t}\n\tpublic:\n\t\tI LongChainDissection() {p=_f;}I void Init() {dfs(1,0);}//\u521d\u59cb\u5316\n\t\tI void Solve() {Assign(1),DP(1,0);for(RI i=1;i<=n;++i) F.writeln(ans[i]);}//DP\u5e76\u8f93\u51fa\u7b54\u6848\n}D; \nint main()\n{\n\tRI i,x,y;for(F.read(n),i=1;i^n;++i) F.read(x,y),add(x,y),add(y,x);//\u8bfb\u5165+\u5efa\u8fb9\n\treturn D.Init(),D.Solve(),F.clear(),0;//\u6c42\u89e3\n}\n```",
        "postTime": 1555758380,
        "uid": 28382,
        "name": "TheLostWeak",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "\u4ee5\u4e3a\u5341\u4e8c\u7bc7\u9898\u89e3\u91cc\u9762\u600e\u4e48\u4e5f\u5f97\u6709\u542f\u53d1\u5f0f\u5408\u5e76\u8001\u54e5\uff0c\u6ca1\u60f3\u5230\u771f\u7684\u6ca1\u6709\u3002    \n\n\u6309\u7406\u6765\u8bf4\u8fd9\u9053\u9898\u4e0d\u662f\u5f52\u4e8e\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u7ecf\u5178\u4f8b\u9898\u91cc\u9762\u5417\uff1f    \n\n\u9996\u5148\u542f\u53d1\u5f0f\u5408\u5e76\u6709\u70b9\u5c0f\u5361\uff0c\u5982\u679c\u60a8\u8ffd\u6c42\u4e8e\u66f4\u5feb\u7684\u505a\u6cd5\u4e0d\u59a8\u4f7f\u7528\u6811\u4e0a\u500d\u589e\u3002    \n\u5176\u6b21\u5c31\u8bb2\u89e3\u4e00\u4e9b\u6b64\u9898\u5982\u4f55\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u5f88\u660e\u663e\u8fd9\u9053\u9898\u7b26\u5408\u6211\u4eec\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u4e00\u4e9b\u57fa\u672c\u7279\u5f81\uff0c\u5373\uff1a    \n\n```\n1.\u53ea\u5177\u5907\u67e5\u8be2\u64cd\u4f5c\uff1b    \n2.\u53ea\u548c\u5b50\u6811\u6709\u5173\uff1b\n```   \n\n\u6240\u4ee5\u8003\u8651\u5230\u4e86 $DSU$  \uff0c\u6211\u4eec\u76f4\u63a5\u5148\u626b\u4e00\u904d\u628a\u91cd\u513f\u5b50\u4eec\u90fd\u627e\u51fa\u6765\uff0c\u7136\u540e\u5c31\u662f\u5e38\u89c4\u5957\u8def\u4e86\uff0c\u5bf9\u4e8e\u4e00\u68f5\u5b50\u6811\u9012\u5f52\u8fc7\u7a0b\u4e2d\u6700\u540e\u67e5\u8be2\u91cd\u513f\u5b50\uff0c\u6b64\u65f6\u6211\u4eec\u83b7\u53d6\u4e86\u91cd\u513f\u5b50\u7684\u60c5\u51b5\u5e76\u4e14\u8981\u8ba1\u7b97\u5f53\u524d\u60c5\u51b5\uff0c\u7136\u540e\u6211\u4eec\u5c31\u5c11\u67e5\u8be2\u4e86\u4e00\u6b21\u91cd\u513f\u5b50\u7684\u60c5\u51b5\u3002    \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$ \u6839\u636e\u542f\u53d1\u5f0f\u5408\u5e76\u800c\u6765\u8fd9\u91cc\u4e0d\u7ec6\u8bb2\u3002    \n\n\u552f\u4e00\u6ce8\u610f\u7684\u5c31\u662f\u8981\u8003\u8651\u600e\u4e48\u521d\u59cb\u5316 $0$ \u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u6211\u76f4\u63a5\u6ca1\u7ba1\u76f4\u63a5\u5728 $add$ \u8ba9\u5b83\u66f4\u65b0\u4e86\u4e00\u6b21\uff0c\u5176\u4ed6\u5c31\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\u3002     \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\nconst int Len = 1e6 + 5;\nint Mx,Dis,n,m,Cnt[Len],head[Len],cnt,Print[Len],dep[Len],siz[Len],son[Len],Son;\nstruct node\n{\n\tint next,to;\n}edge[Len << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nvoid dfs1(int x,int f)\n{\n\tdep[x] = dep[f] + 1;\n\tsiz[x] = 1;\n\tint maxson = -1;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f) continue;\n\t\tdfs1(to , x);\n\t\tsiz[x] += siz[to];\n\t\tif(siz[to] > maxson) maxson = siz[to] , son[x] = to; \n\t}\n}\nvoid add(int x,int f,int val,int now)\n{\n\tCnt[dep[x]] += val;\n\tif(Cnt[dep[x]] > Mx || (Cnt[dep[x]] == Mx && dep[x] -  dep[now] < Dis - dep[now])) Mx = Cnt[dep[x]] , Dis = dep[x];\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f || to == Son) continue;\n\t\tadd(to , x , val , now);\n\t} \n}\nvoid dfs2(int x,int f,int opt)\n{\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f || to == son[x]) continue;\n\t\tdfs2(to , x , 0);\n\t}\n\tif(son[x]) dfs2(son[x] , x , 1) , Son = son[x];\n\tadd(x , f , 1 , x) , Son = 0;\n\tPrint[x] = Dis;\n\tif(!opt) add(x , f , -1 , x) , Mx = Dis = 0;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i < n ; i ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tadd(x , y) , add(y , x);\n\t}\n\tdfs1(1 , 0);\n\tdfs2(1 , 0 , 1);\n\tfor(int i = 1 ; i <= n ; i ++) printf(\"%d\\n\",Print[i] - dep[i]);\n\treturn 0;\n}\n```",
        "postTime": 1604497124,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "\u975e\u5e38\u677f\u5b50\u7684dsu on tree\u7684\u9898\uff0c\u7ef4\u62a4\u6700\u5927\u7684$d(u,x)$\u4e0b\u6700\u5c0f\u7684\u6df1\u5ea6\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u503c\u51cf\u53bb\u5f53\u524d\u6df1\u5ea6\u5c31\u662f\u7b54\u6848\u3002\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nconst int N = 1e6;\nusing namespace std;\nint n,edge_cnt,edge[N * 2 + 5],nxt[N * 2 + 5],head[N + 5],dep[N + 5],son[N + 5],size[N + 5],L[N + 5],R[N + 5],dfn_cnt,ID[N + 5],ans[N + 5],sm,mx,mi,cnt[N + 5];\nvoid add_edge(int u,int v)\n{\n    edge[++edge_cnt] = v;\n    nxt[edge_cnt] = head[u];\n    head[u] = edge_cnt;\n}\nvoid dfs1(int u,int fa)\n{\n    size[u] = 1;\n    dep[u] = dep[fa] + 1;\n    L[u] = ++dfn_cnt;\n    ID[dfn_cnt] = u;\n    for (int i = head[u];i;i = nxt[i])\n    {\n        int v = edge[i];\n        if (v == fa)\n            continue;\n        dfs1(v,u);\n        size[u] += size[v];\n        if (size[v] > size[son[u]])\n            son[u] = v;\n    }\n    R[u] = dfn_cnt;\n}\nvoid add(int u,int val)\n{\n    cnt[dep[u]] += val;\n    if (cnt[dep[u]] > mx)\n        mx = cnt[dep[u]],mi = dep[u];\n    else\n        if (cnt[dep[u]] == mx)\n            mi = min(mi,dep[u]);\n}\nvoid modify(int u,int val)\n{\n    for (int i = L[u];i <= R[u];i++)\n        add(ID[i],val);\n}\nvoid dfs2(int u,int fa)\n{\n    for (int i = head[u];i;i = nxt[i])\n    {\n        int v = edge[i];\n        if (v == son[u] || v == fa)\n            continue;\n        dfs2(v,u);\n        modify(v,-1);\n        mx = mi = 0;\n    }\n    if (son[u])\n        dfs2(son[u],u);\n    for (int i = head[u];i;i = nxt[i])\n    {\n        int v = edge[i];\n        if (v == son[u] || v == fa)\n            continue;\n        modify(v,1);\n    }\n    add(u,1);\n    ans[u] = mi - dep[u];\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    int u,v;\n    for (int i = 1;i < n;i++)\n    {\n        scanf(\"%d%d\",&u,&v);\n        add_edge(u,v);\n        add_edge(v,u);\n    }\n    dfs1(1,0);\n    dfs2(1,0);\n    for (int i = 1;i <= n;i++)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1593770825,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u7a7a\u95f4\u662f $O(n\\log n)$\uff0c\u5bb9\u6613\u88ab\u5361\u7a7a\u95f4\u3001\u5176\u5b9e\u5229\u7528\u5783\u573e\u56de\u6536\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u3002\n\n\u7531\u4e8e\u5728\u4efb\u610f\u65f6\u523b\uff0c\u6709\u7528\u7684\u53ea\u6709\u6df1\u5ea6\u4e3a $i$ \u7684\u548c\u6df1\u5ea6\u4e3a $i+1$ \u7684\u70b9\u7684\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5408\u5e76\u5b8c\u6210\u540e\u5c06\u4e0d\u7528\u7684\u70b9\u91cd\u590d\u5229\u7528\uff0c\u5f00\u4e00\u4e2a\u6808\u6765\u8bb0\u5f55\u5e9f\u5f03\u7684\u70b9\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint n,cnt,cntt,h[1000005],root[1000005],ans[1000005];\nint st[4000005],top;\nstruct TreeNode{\n\tint ls,rs,maxx,maxp;\n\tvoid Clear(){\n\t\tls=rs=maxx=maxp=0;\n\t}\n}t[4000005];\nstruct Edge{\n\tint to,next;\n}e[2000005];\nstruct Que{\n\tint k,id;\n};\nint NewNode(){\n\tif(top)return st[top--];\n\treturn ++cntt;\n}\nvoid Add_Edge(int x,int y){\n\te[++cnt].to=y;\n\te[cnt].next=h[x];\n\th[x]=cnt;\n}\nvoid Pushup(int p){\n\tint l=t[p].ls,r=t[p].rs;\n\tif(t[l].maxx==t[r].maxx){\n\t\tt[p].maxx=t[l].maxx,t[p].maxp=t[l].maxp;\n\t\treturn ;\n\t}\n\tif(t[l].maxx>t[r].maxx){\n\t\tt[p].maxx=t[l].maxx,t[p].maxp=t[l].maxp;\n\t}\n\telse {\n\t\tt[p].maxx=t[r].maxx,t[p].maxp=t[r].maxp;\n\t}\n}\nvoid Update(int &p,int l,int r,int x){\n\tif(!p)p=NewNode();\n\tif(l==r){\n\t\tt[p].maxx++,t[p].maxp=l;\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid)Update(t[p].ls,l,mid,x);\n\telse Update(t[p].rs,mid+1,r,x);\n\tPushup(p);\n}\nvoid Merge(int &p,int q,int l,int r){\n\tif(!p||!q){\n\t\tp=p+q;\n\t\treturn ;\n\t}\n\tif(l==r){\n\t\tt[p].maxx+=t[q].maxx;\n\t\tt[q].Clear(),st[++top]=q;\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tMerge(t[p].ls,t[q].ls,l,mid);\n\tMerge(t[p].rs,t[q].rs,mid+1,r);\n\tPushup(p);\n\tt[q].Clear(),st[++top]=q;\n}\nvoid Solve(int now,int fa,int dep){\n    root[now]=++cntt;\n\tfor(int i=h[now];i;i=e[i].next){\n\t\tint y=e[i].to;\n\t\tif(y==fa)continue;\n\t\tSolve(y,now,dep+1);\n\t\tMerge(root[now],root[y],1,n);\n\t}\n\tUpdate(root[now],1,n,dep);\n\tans[now]=t[root[now]].maxp-dep;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=2,x,y;i<=n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tAdd_Edge(x,y);\n\t\tAdd_Edge(y,x);\n\t}\n\tSolve(1,0,1);\n\tfor(int i=1;i<=n;i++)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1583913980,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "$$\\text{CF1009F Dominant Indices}$$\n\n$\\quad$\u9898\u76ee\u94fe\u63a5\uff1a[CF1009F Dominant Indices](https://www.luogu.com.cn/problem/CF1009F)(\u6d1b\u8c37\u7684\u94fe\u63a5)\n\n$\\quad$\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u8be2\u95ee\u5b50\u6811\uff0c\u8fd9\u5c31\u662f\u4e00\u9053 Dsu \u677f\u5b50\u9898\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53c8\u53eb\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76(\u4e0b\u9762\u4f1a\u7ec6\u8bb2)\u3002\n\n$\\quad$\u5173\u4e8e\u6b64\u9898\uff0c\u7528 $cnt_i$ \u6570\u7ec4\u6765\u8868\u793a\u6df1\u5ea6\u4e3a $i$ \u7684\u7ed3\u70b9\u6570\u91cf\uff0c\u53e6\u5916\u8981\u6ce8\u610f\u8981\u5728\u4fee\u6539\u7684\u65f6\u5019\u987a\u4fbf\u8bb0\u5f55 $cnt$ \u6700\u5927\u7684\u6df1\u5ea6\uff0c\u4e0d\u7136\u4f1aT\u98de(~~\u4eb2\u8eab\u7ecf\u5386~~)\u3002\n\n$\\quad$\u4e0b\u9762\u5c31\u7b80\u5355\u8bb2\u8bb2\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76 (Dsu on Tree)\u7b97\u6cd5\uff0c\u5982\u679c\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u63d0\u51fa\u6765\u3002\n\n$$\\text{\u5173\u4e8e\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76(Dsu)\u524d\u7f6e\u77e5\u8bc6}$$\n\n$\\quad$\u5b66\u8fd9\u4e2a\u4e4b\u524d\u9700\u8981\u5bf9\u6811\u4e0a\u64cd\u4f5c\u3001 $dfs$ \u5e8f\u548c\u8f7b\u91cd\u94fe\u5256\u5206\u7b49\u77e5\u8bc6\u6709\u4e00\u5b9a\u4e86\u89e3\uff0c\u6700\u597d\u5df2\u7ecf\u638c\u63e1\u4e86\u6811\u94fe\u5256\u5206\u3002\n\n$$\\text{\u7b97\u6cd5\u601d\u60f3}$$\n\n$\\quad$\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76 (Dsu on Tree)\uff0c\u662f\u4e00\u4e2a\u5728 $O(n\\log n)$ \u65f6\u95f4\u5185\u89e3\u51b3\u8bb8\u591a\u6811\u4e0a\u95ee\u9898\u7684\u6709\u529b\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u6811\u4e0a\u79bb\u7ebf\u95ee\u9898\u53ef\u4ee5\u901f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u5927\u90e8\u5206\u7b97\u6cd5\u4e14\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u5b9e\u73b0\u3002\n\n$\\quad$\u5148\u60f3\u4e00\u4e0b\u66b4\u529b\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\u90fd\u904d\u5386\u6574\u68f5\u5b50\u6811\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\uff0c\u6700\u540e\u518d\u6e05\u7a7a $cnt$ \u6570\u7ec4\uff0c\u6700\u574f\u60c5\u51b5\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$ \uff0c\u5bf9\u4e8e $10^5$ \u7684\u6570\u636e\u80af\u5b9a\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\n\n$\\quad$\u73b0\u5728\u8003\u8651\u4f18\u5316\u7b97\u6cd5\uff0c\u66b4\u529b\u7b97\u6cd5\u8dd1\u5f97\u6162\u7684\u539f\u56e0\u5c31\u662f\u591a\u6b21\u904d\u5386\uff0c\u591a\u6b21\u6e05\u7a7a\u6570\u7ec4\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u4f18\u5316\u5c31\u662f\u5c06\u8be2\u95ee\u540c\u4e00\u4e2a\u5b50\u6811\u7684\u8be2\u95ee\u653e\u5728\u4e00\u8d77\u5904\u7406\uff0c\u4f46\u8fd9\u6837\u8fd8\u662f\u6ca1\u6709\u5904\u7406\u5230\u5173\u952e\uff0c\u6700\u574f\u60c5\u51b5\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f $O(n^2)$ \uff0c\u8003\u8651\u5230\u8be2\u95ee $x$ \u8282\u70b9\u65f6\uff0c $x$ \u7684\u5b50\u6811\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u6e05\u7a7a\u6570\u7ec4\uff0c\u5148\u7edf\u8ba1 $x$ \u7684\u5b50\u6811\u4e2d\u7684\u7b54\u6848\uff0c\u518d\u7edf\u8ba1 $x$ \u7684\u7b54\u6848\uff0c\u8fd9\u6837\u5c31\u9700\u8981\u63d0\u524d\u5904\u7406\u597d $dfs$ \u5e8f\u3002\n\n$\\quad$\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u4f18\u5316\uff0c\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2a\u5b50\u6811\u65f6\u662f\u4e0d\u7528\u6e05\u7a7a\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u4ea7\u751f\u5bf9\u5176\u4ed6\u8282\u70b9\u5f71\u54cd\u4e86\uff0c\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\u6211\u4eec\u5f53\u7136\u8981\u628a\u8282\u70b9\u6570\u6700\u591a\u7684\u5b50\u6811\uff08\u5373\u91cd\u513f\u5b50\u5f62\u6210\u7684\u5b50\u6811\uff09\u653e\u5728\u6700\u540e\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u770b\u4f3c\u6bd4\u8f83\u5feb\u7684\u7b97\u6cd5\uff0c\u5148\u904d\u5386\u6240\u6709\u7684\u8f7b\u513f\u5b50\u8282\u70b9\u5f62\u6210\u7684\u5b50\u6811\uff0c\u7edf\u8ba1\u7b54\u6848\u4f46\u662f\u4e0d\u4fdd\u7559\u6570\u636e\uff0c\u7136\u540e\u904d\u5386\u91cd\u513f\u5b50\uff0c\u7edf\u8ba1\u7b54\u6848\u5e76\u4e14\u4fdd\u7559\u6570\u636e\uff0c\u6700\u540e\u518d\u904d\u5386\u8f7b\u513f\u5b50\u4ee5\u53ca\u7236\u8282\u70b9\uff0c\u5408\u5e76\u91cd\u513f\u5b50\u7edf\u8ba1\u8fc7\u7684\u7b54\u6848\u3002\n\n$\\quad$\u5176\u5b9e\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u57fa\u672c\u601d\u8def\u5c31\u662f\u8fd9\u6837\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee3\u7801\u7406\u89e3\u3002\n\n```cpp\nil int check(int x)//\u7edf\u8ba1\u7b54\u6848\n{\n  int num=0,ret=0;\n  for(re i=1;i<=n;i++)\n    {\n      if(cnt[i]==num){ret+=i;}\n      else if(cnt[i]>num){num=cnt[i],ret=i;}\n    }\n  return ret;\n}\nil void add(int x){cnt[col[x]]++;}//\u5355\u70b9\u589e\u52a0\nil void del(int x){cnt[col[x]]--;}//\u5355\u70b9\u51cf\u5c11\nil void raise(int x){for(re i=seg[x];i<=seg[x]+size[x]-1;i++)add(rev[i]);}//\u589e\u52a0x\u5b50\u6811\u7684\u8d21\u732e\nil void clear(int x){for(re i=seg[x];i<=seg[x]+size[x]-1;i++)del(rev[i]);}//\u6e05\u7a7ax\u5b50\u6811\u7684\u8d21\u732e\nil void dfs1(int x,int fa)\n{\n  dep[x]=dep[fa]+1;father[x]=fa;//\u5904\u7406\u6df1\u5ea6\uff0c\u7236\u4eb2\n  seg[x]=++seg[0];rev[seg[x]]=x;size[x]=1;//\u5b50\u6811\u5927\u5c0f\uff0cdfs\u5e8f\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==fa)continue;dfs1(y,x);\n      size[x]+=size[y];\n      if(size[y]>size[son[x]])son[x]=y;//\u91cd\u513f\u5b50\n    }\n}\nil void dfs2(int x,int flag)//flag\u8868\u793a\u662f\u5426\u4e3a\u91cd\u513f\u5b50\uff0c1\u8868\u793a\u91cd\u513f\u5b50\uff0c0\u8868\u793a\u8f7b\u513f\u5b50\n{\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==son[x]||y==father[x])continue;\n      dfs2(y,0);//\u5148\u904d\u5386\u8f7b\u513f\u5b50\n    }\n  if(son[x])dfs2(son[x],1);//\u518d\u904d\u5386\u91cd\u513f\u5b50\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==son[x]||y==father[x])continue;\n      raise(y);//\u66f4\u65b0\u8f7b\u513f\u5b50\u7684\u8d21\u732e\n    }add(x);//\u52a0\u4e0ax\u7ed3\u70b9\u672c\u8eab\u7684\u8d21\u732e\n  ans[x]=check(x);//\u66f4\u65b0\u7b54\u6848\n  if(!flag)clear(x);//\u5982\u679c\u662f\u8f7b\u513f\u5b50\uff0c\u5c31\u6e05\u7a7a\n}\n```\n$\\quad$\u4e0a\u9762\u7684\u53ea\u662f\u6a21\u677f\u7684\u4ee3\u7801\uff0c\u6b64\u9898\u7684\u5b8c\u6574\u4ee3\u7801\u5728\u4e0b\u9762\uff0c\u5efa\u8bae\u81ea\u5df1\u5199\u51fa\u6765\uff0c\u90a3\u6837\u4f1a\u66f4\u6709\u6548\u679c\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<vector>\nusing namespace std;\n#define re register int\n#define int long long\n#define LL long long\n#define il inline\n#define next nee\n#define inf 1e18\nil int read()\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nil void print(int x)\n{\n  if(x<0)putchar('-'),x=-x;\n  if(x/10)print(x/10);\n  putchar(x%10+'0');\n}\nconst int N=1e6+5;\nint n,ans[N],next[N<<1],go[N<<1],head[N],tot,seg[N],son[N],father[N],size[N];\nint cnt[N],dep[N],rev[N],Maxdep,Max,num;\nil void Add(int x,int y)\n{\n  next[++tot]=head[x];\n  head[x]=tot;go[tot]=y;\n}\nil void check(int x)//\u66f4\u65b0Max\u548cnum\u7684\u503c\n{\n  if(cnt[x]>Max)Max=cnt[x],num=x;\n  else if(cnt[x]==Max&&x<num)num=x;//\u5982\u679c\u6709\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u53d6\u6df1\u5ea6\u5c0f\u7684\n}\nil void dfs1(int x,int fa)//\u9884\u5904\u7406\n{\n  father[x]=fa;size[x]=1;seg[x]=++seg[0];dep[x]=dep[fa]+1;rev[seg[x]]=x;//\u5904\u7406\u5b50\u6811\u5927\u5c0f\uff0c\u7236\u4eb2\uff0c\u6df1\u5ea6\uff0cdfs\u5e8f\n  if(dep[x]>Maxdep)Maxdep=dep[x];\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==fa)continue;dfs1(y,x);\n      size[x]+=size[y];\n      if(size[y]>size[son[x]])son[x]=y;//\u8bb0\u5f55\u91cd\u513f\u5b50\n    }\n}\nil void dfs2(int x,int flag)\n{\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==father[x]||y==son[x])continue;\n      dfs2(y,0);Max=num=0;//\u5148\u904d\u5386\u8f7b\u513f\u5b50\n      for(re j=seg[y];j<=seg[y]+size[y]-1;j++)\n\t{int z=rev[j];cnt[dep[z]]=0;}//\u987a\u4fbf\u6e05\u7a7acnt\u6570\u7ec4\uff0cMax\u548cnum\u6e05\u96f6\n    }if(son[x])dfs2(son[x],1);//\u518d\u904d\u5386\u91cd\u513f\u5b50\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==father[x]||y==son[x])continue;\n      for(re j=seg[y];j<=seg[y]+size[y]-1;j++)\n\t{\n\t  int z=rev[j];cnt[dep[z]]++;//\u66f4\u65b0\u8f7b\u513f\u5b50\u7684\u8d21\u732e\n\t  check(dep[z]);\n\t}\n    }cnt[dep[x]]++;check(dep[x]);//\u52a0\u4e0ax\u7ed3\u70b9\u672c\u8eab\u7684\u8d21\u732e\n  ans[x]=num-dep[x];//\u66f4\u65b0\u7b54\u6848\n}\nsigned main()\n{\n  n=read();\n  for(re i=1,x,y;i<n;i++)x=read(),y=read(),Add(x,y),Add(y,x);\n  dfs1(1,0);dfs2(1,1);\n  for(re i=1;i<=n;i++)print(ans[i]),putchar('\\n');\n  return 0;\n}\n```",
        "postTime": 1605751188,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "**\u672c\u9898\u524d\u7f6e\u829d\u58eb\uff1a\u57fa\u7840 dp \u7684\u601d\u60f3\u3001\u6811\u94fe\u5256\u5206\uff08\u6216\u7ebf\u6bb5\u6811\uff09**\n\n\u9996\u5148\uff0c\u5eb7\u5eb7\u9898\u76ee\uff0c\u6211\u4eec\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u8fd9\u4e00\u9898\u66b4\u529b dp \u7684\u601d\u8def\uff0c\u80fd\u5f88\u5feb\u63a8\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\u6211\u4eec\u4ee5 $dp_{i,d}$ \u8868\u793a i \u8282\u70b9\u7684\u5b50\u6811\u4e2d\u4e0e i \u8ddd\u79bb\u4e3a d \u7684\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$$dp_{i,d}=\\sum f_{dp,d-1}$$\n\n\u5176\u4e2d j \u4e3a i \u7684\u513f\u5b50\uff0c\u663e\u7136\u8fd9\u79cd\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u662f $O(n^2)$ \uff0c\u6210\u529f\u5347\u5929\u3002\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u7528\u957f\u94fe\u5256\u5206\u5c31\u53ef\u4ee5\u628a\u590d\u6742\u5ea6\u964d\u4f4e\u4e3a $O(n)$ \u4e86\uff01\n\n\u5565\u662f\u957f\u94fe\u5256\u5206\u5462\uff1f\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u6811\u5256\u7684\u4e00\u79cd\uff0c\u8be6\u60c5\u770b\n\n# [\u8fd9\u91cc](https://www.baidu.com/s?tn=50000021_hao_pg&ie=utf-8&sc=UWd1pgw-pA7EnHc1FMfqnHR4nHDsP163P1D4nauW5y99U1Dznzu9m1Y1PHbLPjf3rj0z&ssl_sample=normal&srcqid=4253924105139110542&H123Tmp=nunew7&word=%E9%95%BF%E9%93%BE%E5%89%96%E5%88%86)\n\n~~\u770b\u4e0a\u53bb\u6709\u70b9\u6076\u5fc3\u554a~~\n\n\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u5427\uff1a\n\n\u9996\u5148\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u70b9 u \uff0c\u4ee4\u5176\u5230\u5176\u5b50\u6811\u8ddd\u79bb\u6700\u8fdc\u7684\u53f6\u5b50\u7ed3\u70b9\u7684\u8ddd\u79bb\u4e3a $dep_u$ \uff0c\u5219 u \u8282\u70b9 dep \u503c\u6700\u5927\u7684\u513f\u5b50\u5c31\u662f u \u8282\u70b9\u7684**\u957f\u513f\u5b50**\uff0c\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u5c31\u80fd\u641e\u5b9a\u7684\u3002\n\n\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u4ece\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u6bcf\u4e00\u6b21\u90fd\u8d70\u5411\u5b83\u7684\u957f\u513f\u5b50\uff0c\u76f4\u5230\u8d70\u5230\u53f6\u5b50\uff0c\u8fd9\u6837\u7684\u4e00\u6761\u8def\u5f84\u5c31\u662f\u4e00\u6761**\u957f\u94fe**\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u68f5\u6811\u6070\u597d\u5256\u6210\u82e5\u5e72\u4e2a\u957f\u94fe\u3002\u8fd9\u548c\u8fc7\u53bb\u6211\u4eec\u505a\u8fc7\u91cd\u94fe\u5256\u5206\u7684\u601d\u8def\u662f\u4e00\u6837\u4e00\u6837\u7684\uff01\n\n\u770b\u4ee3\u7801\uff1a\n\n```cpp\nvoid dfs1(int u,int f){//\u957f\u94fe\u5256\u5206 \n\tsize[u]=1,fa[u]=f;//\u5199\u7740\u65e0\u804a\uff0c\u8fd9\u9898\u6ca1\u7528 \n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(v==f){\n\t\t\tcontinue;\n\t\t}\n\t\tdfs1(v,u);\n\t\tsize[u]+=size[v];\n\t\tif(dep[v]>dep[son[u]]){\n\t\t\tson[u]=v;\n\t\t}\n\t}\n\tdep[u]=dep[son[u]]+1;//\u7ee7\u627f\u6df1\u5ea6\n}\n```\n\n\u63a5\u4e0b\u6765\u600e\u4e48\u505a dp \u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 u \uff0c\u5bf9 $son_u$ \u505a dp \uff0c\u7136\u540e\u628a\u7ed3\u679c\u76f4\u63a5\u653e\u5165 $dp_u$ \uff0c\u7136\u540e\u5728\u5c06\u5176\u4ed6\u513f\u5b50\u7684\u7ed3\u679c\u4e0e $dp_u$ \u5408\u5e76\u5373\u53ef\u3002\n\n\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u7528\u6307\u9488\u5b9e\u73b0\u3002\n\n\u770b\u4ee3\u7801\uff1a\n\n```cpp\nvoid dfs2(int u,int f){//dp\u8fc7\u7a0b \n\tid[u]=++tot,pos[id[u]]=u;//\u5199\u7740\u65e0\u804a\uff0c\u8fd9\u9898\u6ca1\u7528 \n\tdp[u][0]=1;\n\tif(son[u]){\n\t\tdp[son[u]]=dp[u]+1;//\u5171\u4eab\u5185\u5b58 \n\t\tdfs2(son[u],u);\n\t\tk[u]=k[son[u]]+1;//\u7ee7\u627f\u7b54\u6848 \n\t}\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(v==son[u]||v==f){\n\t\t\tcontinue;\n\t\t}\n\t\tdp[v]=cur,cur+=dep[v];//\u5206\u914d\u5185\u5b58 \n\t\tdfs2(v,u);\n\t\tfor(int i=1;i<=dep[v];i++){\n\t\t\tdp[u][i]+=dp[v][i-1];\n\t\t\tif(dp[u][i]>dp[u][k[u]]||(dp[u][i]==dp[u][k[u]]&&i<k[u])){\n\t\t\t\tk[u]=i;//\u66f4\u65b0 \n\t\t\t}\n\t\t}\n\t}\n\tif(dp[u][k[u]]==1){\n\t\tk[u]=0;\n\t} \n}\n```\n\n# \u6700\u540e\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000010\nusing namespace std;\nint read(){\n\tint x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<3)+(x<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x;\n}\nint qwq[N];\nint n,*dp[N],*cur=qwq,head[N],fa[N],son[N],size[N],dep[N],id[N],pos[N],cnt,tot,k[N],x,y;\nstruct edge{\n\tint to,next;\n}e[N<<1];\nvoid add(int u,int v){//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe \n\te[++cnt].to=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\nvoid dfs1(int u,int f){//\u957f\u94fe\u5256\u5206 \n\tsize[u]=1,fa[u]=f;//\u5199\u7740\u65e0\u804a\uff0c\u8fd9\u9898\u6ca1\u7528 \n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(v==f){\n\t\t\tcontinue;\n\t\t}\n\t\tdfs1(v,u);\n\t\tsize[u]+=size[v];\n\t\tif(dep[v]>dep[son[u]]){\n\t\t\tson[u]=v;\n\t\t}\n\t}\n\tdep[u]=dep[son[u]]+1;//\u7ee7\u627f\u6df1\u5ea6 \n}\nvoid dfs2(int u,int f){//dp\u8fc7\u7a0b \n\tid[u]=++tot,pos[id[u]]=u;//\u5199\u7740\u65e0\u804a\uff0c\u8fd9\u9898\u6ca1\u7528 \n\tdp[u][0]=1;\n\tif(son[u]){\n\t\tdp[son[u]]=dp[u]+1;//\u5171\u4eab\u5185\u5b58 \n\t\tdfs2(son[u],u);\n\t\tk[u]=k[son[u]]+1;//\u7ee7\u627f\u7b54\u6848 \n\t}\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(v==son[u]||v==f){\n\t\t\tcontinue;\n\t\t}\n\t\tdp[v]=cur,cur+=dep[v];//\u5206\u914d\u5185\u5b58 \n\t\tdfs2(v,u);\n\t\tfor(int i=1;i<=dep[v];i++){\n\t\t\tdp[u][i]+=dp[v][i-1];\n\t\t\tif(dp[u][i]>dp[u][k[u]]||(dp[u][i]==dp[u][k[u]]&&i<k[u])){\n\t\t\t\tk[u]=i;//\u66f4\u65b0 \n\t\t\t}\n\t\t}\n\t}\n\tif(dp[u][k[u]]==1){\n\t\tk[u]=0;\n\t} \n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<n;i++){\n\t\tx=read(),y=read();\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs1(1,0);\n\tdp[1]=cur,cur+=dep[1];//\u5206\u914d\u5185\u5b58 \n\tdfs2(1,0);\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",k[i]);\n\t}\n\treturn 0;\n}\n```\n\n# \u50f5\u5367\u5b64\u6751\u4e0d\u81ea\u54c0\uff0c[\u521b\u5b87](https://www.luogu.com.cn/user/147999) AK IOI",
        "postTime": 1591443823,
        "uid": 178556,
        "name": "Skyjoy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u9898\u76ee\u53ef\u4ee5\u76f4\u63a5\u7528 dsu on tree \u8fc7\u6389\uff0c\u5199\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u7edf\u8ba1\u6bcf\u68f5\u5b50\u6811\u4e2d\u6bcf\u4e2a\u6df1\u5ea6\u7684\u6570\u91cf\uff0c\u9009\u5176\u4e2d\u6700\u5927\u4e14\u6df1\u5ea6\u6700\u5c0f\u7684\u51cf\u53bb\u5f53\u524d\u6df1\u5ea6\u5373\u53ef\u3002\n\n```cpp\n/* Header {{{ */\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long readtype;\ntypedef long long var;\ntypedef long double let;\n\nreadtype read() {\n  readtype a = 0, c = getchar(), s = 0;\n  while (!isdigit(c)) s |= c == '-', c = getchar();\n  while (isdigit(c)) a = a * 10 + c - 48, c = getchar();\n  return s ? -a : a;\n}\n/* }}} */\n\nconst int N = 1e6 + 1;\n\nint n;\nint top, fi[N], ne[N << 1], to[N << 1];\nint fa[N], size[N], deep[N], maxson[N];\nint maxid, have[N];\nint res[N];\n\nvoid Add(int u, int v);\nvoid GetInfo(int t);\nvoid GetRes(int t);\nvoid GetDeep(int rt, int t, int v);\n\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"1009F.in\", \"r\", stdin);\n  freopen(\"1009F.out\", \"w\", stdout);\n#endif\n  n = read();\n  for (int i = 1; i < n; ++i) {\n    int u = read(), v = read();\n    Add(u, v), Add(v, u);\n  }\n  GetInfo(1);\n  GetRes(1);\n  for (int i = 1; i <= n; ++i) printf(\"%d\\n\", res[i]);\n  return 0;\n}\n\nvoid Add(int u, int v) {\n  ne[++top] = fi[u], fi[u] = top, to[top] = v;\n}\n\nvoid GetInfo(int t) {\n  size[t] = 1, deep[t] = deep[fa[t]] + 1;\n  for (int i = fi[t]; i; i = ne[i]) {\n    if (to[i] == fa[t]) continue;\n    fa[to[i]] = t;\n    GetInfo(to[i]);\n    size[t] += size[to[i]];\n    if (size[to[i]] > size[maxson[t]])\n      maxson[t] = to[i];\n  }\n}\n\nvoid GetRes(int t) {\n  for (int i = fi[t]; i; i = ne[i]) {\n    if (to[i] == fa[t] || to[i] == maxson[t]) continue;\n    GetRes(to[i]);\n    GetDeep(t, to[i], -1);\n    maxid = 0;\n  }\n  \n  if (maxson[t]) GetRes(maxson[t]);\n\n  GetDeep(t, t, 1);\n\n  res[t] = maxid - deep[t];\n}\n\nvoid GetDeep(int rt, int t, int v) {\n  have[deep[t]] += v;\n  if (have[deep[t]] > have[maxid]\n      || (have[deep[t]] == have[maxid] && deep[t] < maxid)) maxid = deep[t];\n  for (int i = fi[t]; i; i = ne[i]) {\n    if (to[i] == fa[t] || to[i] == maxson[rt]) continue;\n    GetDeep(rt, to[i], v);\n  }\n}\n```",
        "postTime": 1591835151,
        "uid": 20522,
        "name": "ccviolett",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/CF1009F)\n\n\u957f\u94fe\u5256\u5206\u3002\n\n\u9996\u5148\u8981\u53d1\u73b0$O(n^2)$\u7684DP\uff0c\u8fd9\u5e94\u8be5\u662f\u597d\u5199\u7684\u3002$dp[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u79bb$i$\u8ddd\u79bb\u4e3a$j$\u7684\u8282\u70b9\u4e2a\u6570\u3002\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5c31\u5f88\u597d\u5199\u4e86\uff1a$dp[i][j]+=dp[tox][j-1]$\u3002\u7136\u540e\u4e3a\u4e86\u597d\u770b\u4e00\u70b9\uff0c\u65b9\u7a0b\u6539\u6210$dp[i][j+1]+=dp[tox][j]$\u3002\u53d1\u73b0\u8fd9\u4e2a\u65b9\u7a0b\u6781\u5176\u773c\u719f\uff0c\u8fd9\u4e0d\u5c31\u662f\u7b80\u5355\u7248\u7684[HOT](https://www.lydsy.com/JudgeOnline/problem.php?id=4543)\u5417\uff1f\u4e8e\u662f\u76f4\u63a5\u957f\u94fe\u5256\u5206\u5c31\u597d\u4e86\u3002\n\ncode:\n```\n//2018.9.12 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=1e6+10;\nnamespace MAIN{\n    int n;\n    struct E{\n        int next,to;\n        E() {}\n        E(res next,res to):next(next),to(to) {}\n    }edge[N<<1];\n    int head[N],cnt;\n    inline void addedge(res u,res v){\n        edge[++cnt]=E(head[u],v),head[u]=cnt;\n        edge[++cnt]=E(head[v],u),head[v]=cnt;\n    }\n    int fa[N],maxdep[N],dep[N],son[N];\n    void dfs(res x,res fax,res depx){\n        fa[x]=fax,maxdep[x]=dep[x]=depx;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax)continue;\n            dfs(tox,x,depx+1);\n            maxdep[x]=_max(maxdep[x],maxdep[tox]);\n            if(maxdep[tox]>maxdep[son[x]])son[x]=tox;\n        }\n    }\n    int ans[N];\n    int *dp[N],tmp[N<<5],*now=tmp+1;\n    inline void Dp(res x){\n        dp[x]=now,now+=maxdep[x]-dep[x]+1;\n    }\n    void DP(res x){\n        if(son[x])dp[son[x]]=dp[x]+1,DP(son[x]),ans[x]=ans[son[x]]+1;\n        dp[x][0]=1;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fa[x]||tox==son[x])continue;\n            Dp(tox);\n            DP(tox);\n            for(res j=0;j<=maxdep[tox]-dep[tox];j++){\n                dp[x][j+1]+=dp[tox][j];\n                if(dp[x][j+1]>dp[x][ans[x]]||(dp[x][j+1]==dp[x][ans[x]]&&ans[x]>j+1))ans[x]=j+1;\n            }\n        }\n        if(dp[x][ans[x]]==1)ans[x]=0;\n    }\n    inline void MAIN(){\n        memset(head,-1,sizeof(head));\n        n=read();\n        for(res i=1;i<n;i++){\n            res u=read(),v=read();\n            addedge(u,v);\n        }\n        dfs(1,0,1);\n        Dp(1);\n        DP(1);\n        for(res i=1;i<=n;i++)printf(\"%d\\n\",ans[i]);\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1536731107,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF1009F\u3011Dominant Indices"
    },
    {
        "content": "\u5f88\u660e\u663e\u7684$dp$\u65b9\u7a0b\uff1a\n\n$dp_{u,i}=\\sum dp_{v,i-1}$\n\n\u7136\u800c\u7a7a\u95f4\u548c\u65f6\u95f4\u4e0a\u90fd\u8fc7\u4e0d\u53bb\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a$dp$\u6570\u7ec4\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u90fd\u5f00\u4e00\u68f5\u4ee5\u6df1\u5ea6\u4e3a\u4e0b\u6807\u7684\u7ebf\u6bb5\u6811\uff0c\u53f6\u8282\u70b9\u7ef4\u62a4\u7684\u662f\u5f53\u524d\u5b50\u6811\u4e2d**\u6df1\u5ea6**\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\u8ddd\u79bb\u4e86\uff09\u4e3a$i$\u7684\u8282\u70b9\u6570\uff0c\u800c\u975e\u53f6\u8282\u70b9\u7ef4\u62a4\u533a\u95f4\u4e2d\u53f6\u8282\u70b9\u4fe1\u606f\u7684\u6700\u5927\u503c\u3002\uff08\u7ebf\u6bb5\u6811\u4ee5\u6df1\u5ea6\u4e3a\u4e0b\u6807\u662f\u56e0\u4e3a\u5408\u5e76\u662f\u8282\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\u5e94\u8be5\u5bf9\u5e94\uff09\n\n\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u5148\u5904\u7406\u513f\u5b50\uff0c\u518d\u5c06\u513f\u5b50\u4e0a\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u5230\u5f53\u524d\u8282\u70b9\u3002\u5904\u7406\u5b8c\u6240\u6709\u513f\u5b50\u4e4b\u540e\u5c31\u53ef\u4ee5\u5230\u5f53\u524d\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0a\u67e5\t\u8be2\u7b54\u6848\u3002\n\n\u67e5\u8be2\u7b54\u6848\u65f6\u5c31\u53ef\u4ee5\u91c7\u7528\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u8d2a\u5fc3\u7b56\u7565\uff1a\u5de6\u513f\u5b50\u7684\u503c**\u5927\u4e8e\u7b49\u4e8e**\u53f3\u513f\u5b50\u5219\u5411\u5de6\u513f\u5b50\u67e5\u8be2\uff0c\u5426\u5219\u5411\u53f3\u513f\u5b50\u67e5\u8be2\uff0c\u5230\u53f6\u8282\u70b9\u5219\u76f4\u63a5\u8fd4\u56de\u3002\u4e0d\u8fc7\t\u6b64\u65f6\u67e5\u8be2\u5230\u7684\u7b54\u6848\u662f\u6df1\u5ea6\u800c\u9898\u76ee\u8981\u6c42\u7684\u662f\u8ddd\u79bb\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u7b54\u6848\u51cf\u53bb\u5f53\u524d\u8282\u70b9\u7684\u6df1\u5ea6\u3002\n\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n\nusing namespace std;\n\n#define re register\n#define il inline\n#define isdigit(ch) (ch>=48&&ch<=57)\n\nconst int N=1000010;\n\nil void read(int &x)\n{\n\tx=0;char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n}\nil void write(int x){if(x/10)write(x/10);putchar(x%10+48);}\n//IO\u4f18\u5316\n\n#define max(a,b) (a>b?a:b)\n\nint cnt,h[N];\nstruct edge{int v,nxt;}e[N<<1];\nil void add(int u,int v){e[++cnt]=(edge){v,h[u]};h[u]=cnt;}\n//\u94fe\u5f0f\u524d\u5411\u661f\n\nint n;\n\nint rt[N],pool;\nint ls[N<<5],rs[N<<5],val[N<<5];\n//val\u8868\u793a\u5f53\u524d\u8282\u70b9\u7ef4\u62a4\u7684\u6df1\u5ea6\u533a\u95f4\u4e2d\u6700\u5927\u7684\u8282\u70b9\u6570\u91cf\n#define update(p) (val[p]=max(val[ls[p]],val[rs[p]]))\n//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f\nil int merge(int p,int q,int l,int r)\n{\n\tif(!p||!q) return q|p;\n\tif(l==r){val[p]+=val[q];return p;}\n\tre int mid=(l+r)>>1;\n\tls[p]=merge(ls[p],ls[q],l,mid);\n\trs[p]=merge(rs[p],rs[q],mid+1,r);\n\tupdate(p);return p;\n}\n//\u5408\u5e76\u7ebf\u6bb5\u6811\nil void insert(int &p,int l,int r,int x)\n{\n\tif(!p) p=++pool;\n\tif(l==r){++val[p];return;}\n\tre int mid=(l+r)>>1;\n\tif(x>mid) insert(rs[p],mid+1,r,x);\n\telse insert(ls[p],l,mid,x);\n\tupdate(p);\n}\nil int query(int p,int l,int r)\n{\n\tif(l==r) return l;\n\tre int mid=(l+r)>>1;\n\tif(val[ls[p]]<val[rs[p]]) return query(rs[p],mid+1,r);\n\telse return query(ls[p],l,mid);\n}\n//\u67e5\u8be2\u7b54\u6848\nint ans[N],dep[N];\nil void dfs(int x,int fa)\n{\n\tdep[x]=dep[fa]+1;\n\tinsert(rt[x],1,n,dep[x]);\n\tfor(re int i=h[x];i;i=e[i].nxt)\n\t\tif(e[i].v^fa)//if(e[i].v!=fa)\n\t\t{\n\t\t\tdfs(e[i].v,x);\n\t\t\trt[x]=merge(rt[x],rt[e[i].v],1,n);\n\t\t}\n\tans[x]=query(rt[x],1,n)-dep[x];\n    //\u7531\u4e8e\u7b54\u6848\u662f\u8981\u5f53\u524d\u8282\u70b9\u5f80\u4e0b\u7684\u8ddd\u79bb\uff0c\u800cquery\u8fd4\u56de\u7684\u662f\u6df1\u5ea6\uff0c\u56e0\u6b64\u8981\u51cf\u53bbdep[x]\n}\n\nint main()\n{\n\tread(n);\n\tfor(re int i=1,u,v;i<n;++i)\n\t{\n\t\tread(u),read(v);\n\t\tadd(u,v);add(v,u);\n\t}\n\tdfs(1,0);\n\tfor(re int i=1;i<=n;++i)\n\t\twrite(ans[i]),puts(\"\");\n\treturn 0;\n}\n```\n",
        "postTime": 1601810178,
        "uid": 209454,
        "name": "watermonster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "dsu on tree\u7ecf\u5178  \u4e0d\u7b97\u96be\u7684STL\u7ec3\u4e60\u9898\uff08~~\u7b80\u5355\u7684dsu on tree\u4e3a\u5565\u8981\u624b\u5199\u6570\u636e\u7ed3\u6784\u5462~~\uff09  \u5199\u7684\u5e94\u8be5\u7b97\u662f\u6bd4\u8f83\u7b80\u6d01\u660e\u4e86\u7684\u4e86\n\n\u5177\u4f53\u7ec6\u8282\u601d\u8def\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u4e0b\u9762\u8fd9\u9898\n\n[\u53e6\u4e00\u9053dsu_on_tree\u7ecf\u5178\u9898](https://www.luogu.org/blog/qiyue7ACM/solution-cf375d)\n\n1A\u4ee3\u7801\uff1a\n\n```cpp\n\nusing namespace std;\nvector<int> edge[1100000];\nbool vis[1100000];\nqueue<int> que;\nstack<int> st;\nint deep[1100000],ans[1100000],fa[1100000];\nset<pair<int, int> > *se[1100000];\nunordered_map<int, int> *trans[1100000];\nint32_t main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcout.tie(NULL);\n\tint n, u, v,kk;\n\tcin >> n;\n\tmemset(vis, 0, sizeof(vis));\n\tfor (int i = 1; i <= n - 1; ++i)\n\t{\n\t\tcin >> u >> v;\n\t\tedge[u].push_back(v);\n\t\tedge[v].push_back(u);\n\t}\n\tque.push(1);\n\tdeep[1] = 0;\n\twhile (!que.empty())\n\t{\n\t\tkk = que.front();\n\t\tvis[kk] = 1;\n\t\tst.push(kk);\n\t\tque.pop();\n\t\tfor (auto &s : edge[kk])\n\t\t\tif (!vis[s])\n\t\t\t\tque.push(s),deep[s]=deep[kk]+1,fa[s]=kk;\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tse[i] = new set<pair<int, int> >();\n\t\ttrans[i] = new unordered_map<int,int>();\n\t\tse[i]->insert({ -1, deep[i] });\n\t\t(*trans[i])[deep[i]] = 1;\n\t}\n\twhile (!st.empty())\n\t{\n\t\tkk=st.top();\n\t\tst.pop();\n\t\tans[kk] = (se[kk]->begin())->second-deep[kk];\n\t\tif (fa[kk])\n\t\t{\n\t\t\tif (trans[kk]->size() > trans[fa[kk]]->size())\n\t\t\t\tswap(trans[kk], trans[fa[kk]]), swap(se[kk], se[fa[kk]]);\n\t\t\tfor (auto &s : (*trans[kk]))\n\t\t\t{\n\t\t\t\tif (trans[fa[kk]]->find(s.first) == trans[fa[kk]]->end())\n\t\t\t\t{\n\t\t\t\t\t(*trans[fa[kk]])[s.first] = s.second;\n\t\t\t\t\tse[fa[kk]]->insert({ -s.second,s.first });\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tse[fa[kk]]->erase({-(*trans[fa[kk]])[s.first],s.first});\n\t\t\t\t\t(*trans[fa[kk]])[s.first] += s.second;\n\t\t\t\t\tse[fa[kk]]->insert({ -(*trans[fa[kk]])[s.first],s.first });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttrans[kk]->clear();\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t\tcout << ans[i] << '\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1563072655,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    },
    {
        "content": "\u957f\u94fe\u5256\u5206\u7ec3\u624b\u9898\u3002\n\n\u5148\u628a\u6811\u957f\u94fe\u5256\u5206\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u76f4\u63a5\u7ee7\u627f\u5b83\u504f\u7231\u513f\u5b50\u7684$dp$\u6570\u7ec4\uff0c\u7136\u540e\u5176\u4ed6\u513f\u5b50\u66b4\u529b\u5408\u5e76\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u6bcf\u4e2a\u70b9\u6240\u5bf9\u5e94\u7684$dp$\u4f4d\u7f6e\u53ea\u4f1a\u88ab\u66b4\u529b\u5408\u5e761\u6b21\u3002\u56e0\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(n)$\u7684\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define pb push_back\n#define Chkmax(a,b) a=a>b?a:b\n#define Chkmin(a,b) a=a<b?a:b\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\n\nusing namespace std;\n\nnamespace IO\n{\n    const uint32 Buffsize=1<<15,Output=1<<23;\n    static char Ch[Buffsize],*S=Ch,*T=Ch;\n    inline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n    static char Out[Output],*nowps=Out;\n    \n    inline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n    template<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t}\n}\nusing namespace IO;\n\ninline void file()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"water.in\",\"r\",stdin);\n\tfreopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\nconst int MAXN=1e6+7;\n\nstatic int n,m,a[MAXN];\n\nvector<int>ed[MAXN];\n\ninline void init()\n{\n    read(n);\n    static int u,v;\n    Rep(i,1,n-1)read(u),read(v),ed[u].pb(v),ed[v].pb(u);\n}\n\nstatic int dps[MAXN],fa[MAXN],son[MAXN];\n\nvoid dfs(int u)\n{\n    dps[u]=1;\n\tfor(int v:ed[u])if(v^fa[u])\n\t{\n\t    fa[v]=u;dfs(v);\n\t    Chkmax(dps[u],dps[v]+1);\n\t    if(dps[v]>dps[son[u]])son[u]=v;\n\t}\n}\n\nstatic int ans[MAXN],cnt[MAXN],e,st[MAXN];\n\nvoid getans(int u)\n{\n    int *f=&cnt[st[u]=++e],*g;\n    f[ans[u]=0]=1;\n    if(son[u])getans(son[u]),ans[u]=ans[son[u]]+1;\n\telse return;\n\tif(ans[u]==1)ans[u]=0;\n    for(int v:ed[u])if(v^fa[u]&&v^son[u])\n\t{\n\t\tgetans(v);\n\t\tg=&cnt[st[v]];\n\t\tRep(i,0,dps[v]-1)\n\t\t    if((f[i+1]+=g[i])>=f[ans[u]]&&i+1<ans[u]\n\t\t    \t||f[i+1]>f[ans[u]])\n\t\t\t\t    ans[u]=i+1;\n    }\n}\n\ninline void solve()\n{\n    dfs(1);\n    getans(1);\n    Rep(i,1,n)write(ans[i]);\n    flush();\n}\n\nint main()\n{\n    file();\n    init();\n    solve();\n    return 0;\n}\n\n```",
        "postTime": 1533201713,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1009F \u3010Dominant Indices\u3011"
    }
]