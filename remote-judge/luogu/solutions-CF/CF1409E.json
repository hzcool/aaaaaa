[
    {
        "content": "### \u9898\u610f\n\n\u6709 $n$ \u4e2a\u70b9\uff0c\u5206\u522b\u4f4d\u4e8e $(x_i,y_i)$\uff0c\u6c42\u6700\u591a\u80fd\u7528\u4e24\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u5e73\u53f0\u63a5\u4f4f\u591a\u5c11\u4e2a\u70b9\u3002\n\n$\\texttt{Data Range:}n\\leq 2\\times 10^5,k\\leq 10^9$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13736456.html)\n\n\u8fd9\u662f Div.3 \u7684 E \u554a\uff0c\u4e3a\u4ec0\u4e48\u4f60\u4eec\u7684\u5199\u6cd5\u90fd\u8fd9\u4e48\u7e41\u7410\u554a\u2026\u2026\n\n\u8fd9\u9898\u53ef\u4ee5\u4e0d\u7528\u4efb\u4f55\u6570\u636e\u7ed3\u6784\uff0c\u751a\u81f3\u53cc\u6307\u9488\u90fd\u53ef\u4ee5\u4e0d\u7528\u7684\u554a\uff0c\u800c\u4e14\u4ee3\u7801\u8fd8\u77ed\uff0c\u4e3a\u4ec0\u4e48\u4f60\u4eec\u90fd\u4e0d\u8fd9\u6837\u5199\u554a\n\n\u6ce8\u610f\u5230 $y$ \u5750\u6807\u6ca1\u4ec0\u4e48\u5375\u7528\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651 $x$ \u5750\u6807\u5373\u53ef\u3002\n\n\u540c\u65f6\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5728\u67d0\u4e2a\u6700\u4f18\u7684\u65b9\u6848\u4e2d\u4e24\u4e2a\u5e73\u53f0\u7684\u5de6\u7aef\u70b9\u4e00\u5b9a\u4e0e\u67d0\u4e00\u4e2a\u70b9\u7684 $x$ \u5750\u6807\u4e00\u6837\u3002\n\n\u5982\u679c\u4e0d\u4e00\u6837\u7684\u8bdd\u6211\u53ef\u4ee5\u5c06\u5e73\u53f0\u5411\u53f3\u79fb\u6765\u8fbe\u5230\u4e00\u6837\uff0c\u53f3\u79fb\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u8fd8\u4f1a\u63a5\u5230\u4e00\u4e9b\u65b0\u7684\u70b9\uff0c\u80af\u5b9a\u4e0d\u6bd4\u4e4b\u524d\u7684\u7b54\u6848\u8981\u5dee\u3002\n\n\u628a\u6240\u6709\u70b9\u7684 $x$ \u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u4e14\u8bbe $f_i$ \u8868\u793a\u67d0\u4e2a\u5e73\u53f0\u5de6\u7aef\u70b9\u4e3a $x_i$ \u7684\u65f6\u5019\u80fd\u63a5\u5230\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u6211\u4eec\u8003\u8651\u679a\u4e3e\u6700\u5de6\u8fb9\u5e73\u53f0\u7684\u5de6\u7aef\u70b9 $x_u$\uff0c\u8fd9\u4e2a\u65f6\u5019\u5728\u8fd9\u4e2a\u5e73\u53f0\u53f3\u8fb9 $x$ \u5750\u6807\u6700\u5c0f\u4e0d\u80fd\u63a5\u5230\u7684\u70b9\u4e00\u5b9a\u662f\u7b2c $u+f_u$ \u4e2a\u3002\u6b64\u65f6\u7b2c\u4e8c\u4e2a\u5e73\u53f0\u7684\u6700\u5927\u8d21\u732e\u5c31\u662f $f$ \u5728 $u+f_u\\sim n$ \u7684\u6700\u5927\u503c\u3002\n\n\u5bb9\u6613\u770b\u51fa $f$ \u53ef\u4ee5\u76f4\u63a5\u6307\u9488\u626b\u5c31\u597d\u4e86\uff0c\u800c\u90a3\u4e2a\u6700\u5927\u503c\u5176\u5b9e\u5c31\u662f\u540e\u7f00\u6700\u5927\u503c\uff0c\u9664\u53bb\u6392\u5e8f\u90e8\u5206 $O(n)$ \u5b8c\u4e8b\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51;\nll test,n,kk,r,res;\nll x[MAXN],f[MAXN],mx[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline void solve()\n{\n\tn=read(),kk=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tx[i]=read();\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tread();\n\t}\n\tsort(x+1,x+n+1),r=1,res=0,f[n+1]=mx[n+1]=0;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\twhile(r<n&&x[r+1]-x[i]<=kk)\n\t\t{\n\t\t\tr++;\n\t\t}\n\t\tf[i]=r-i+1;\n\t}\n\tfor(register int i=n;i;i--)\n\t{\n\t\tmx[i]=max(mx[i+1],f[i]);\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tres=max(res,f[i]+mx[i+f[i]]);\n\t}\n\tprintf(\"%d\\n\",res);\n}\nint main()\n{\n\ttest=read();\n\tfor(register int i=0;i<test;i++)\n\t{\n\t\tsolve();\n\t}\n}\n```",
        "postTime": 1601120792,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1409E \u3010Two Platforms\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u9996\u5148\u663e\u800c\u6613\u89c1\u7684\u662f\uff0c\u7eb5\u5750\u6807\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u90a3\u4e2a\u5e73\u53f0\u653e\u5728\u90a3\u91cc\u5c31\u4e00\u76f4\u5728\u90a3\u91cc\u4e0d\u4f1a\u52a8\uff0c\u6240\u4ee5\u6839\u672c\u4e0d\u7528\u8003\u8651\u7eb5\u5750\u6807\u3002\n\n\u90a3\u4e48\u4e0b\u9762\u5f00\u59cb\u8003\u8651\u5982\u4f55\u63a5\u4f4f\u5c3d\u53ef\u80fd\u591a\u7684\u70b9\uff0c\u9996\u5148\u4e00\u4e2a\u5c0f\u8d2a\u5fc3\u80fd\u591f\u8bc1\u660e\uff0c\u5f53\u5e73\u53f0\u7684\u8fb9\u7f18\u521a\u597d\u80fd\u63a5\u4f4f\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u653e\u6cd5\uff0c\u6240\u4ee5\u5148\u7528\u4e24\u5c42\u5faa\u73af\u5957\u8d77\u6765\uff0c\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u7528\u6570\u7ec4\u6765\u8bb0\u5f55\u4ee5\u5f53\u524d\u70b9\u7ed3\u5c3e\u7684\u5e73\u53f0\u6700\u591a\u80fd\u63a5\u4f4f\u51e0\u4e2a\u70b9\u3002\u4f46\u662f\u4e00\u770b\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u5141\u8bb8\u6211\u4eec\u4e24\u5c42\u5faa\u73af\uff0c\u4e8e\u662f\u60f3\u5230\u4e8c\u5206\u67e5\u627e\u3002\u627e\u5230\u90a3\u4e00\u4e2a\u521a\u597d\u80fd\u63a5\u4f4f\u7684\u70b9\uff0c\u7136\u540e\u53f3\u7aef\u70b9-\u5de6\u7aef\u70b9+1\u5c31\u662f\u7aef\u70b9\u4e2a\u6570\u3002\u6b64\u5904\u590d\u6742\u5ea6\u662f$O(nlogn)$\u3002\n\n\u4e00\u5f00\u59cb\u6211\u60f3\u4e86\u4e00\u4e2a\u9519\u7684\u8d2a\u5fc3\uff0c\u628a\u80fd\u63a5\u4f4f\u6700\u591a\u70b9\u7684\u90a3\u4e2a\u5e73\u53f0\u5148\u653e\u5165\u7b54\u6848\uff0c\u7136\u540e\u4ece\u5269\u4e0b\u7684\u5e73\u53f0\u4e2d\u627e\u6700\u5927\u503c\uff0c\u4f46\u8fd9\u663e\u7136\u662f\u4e0d\u5bf9\u7684\uff0c\u6709\u53ef\u80fd\u4e24\u8fb9\u8f83\u957f\u7684\u5e73\u53f0\u63a5\u4f4f\u7684\u70b9\u6bd4\u4e00\u4e2a\u6700\u591a\u7684\u548c\u4e00\u4e2a\u8f83\u5c0f\u7684\u591a\uff0c\u6700\u540e\u4e00\u7ec4\u6570\u636e\u5c31\u662f\u53cd\u4f8b\u3002\u60f3\u4e86\u4e00\u4f1a\uff0c\u5148\u6253\u4e86\u4e2a\u4e24\u5c42\u66b4\u529b\uff0c\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u7136\u540e\u7b97\u51fa\u4e24\u4e2a\u5e73\u53f0\u7684\u70b9\u548c\uff0c\u627e\u6700\u5927\u503c\uff0c~~\u6211\u6000\u7740\u68a6\u60f3\u63d0\u4ea4\uff0c\u7136\u540e$T$\u98de\u4e86~~\u3002\n\n\u63a5\u7740\u60f3\u600e\u4e48\u4f18\u5316\u3002\u53d1\u73b0\u4e24\u4e2a\u5e73\u53f0\u5982\u679c\u6709\u91cd\u5408\u51fa\u73b0\u90a3\u4e48\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u53ef\u4ee5\u4e00\u5c42\u5faa\u73af\u6765\u679a\u4e3e\uff0c\u7136\u540e\u627e\u5269\u4e0b\u4e24\u6bb5\u5206\u522b\u7684\u6700\u5927\u503c\u518d\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\u3002\u800c\u533a\u95f4\u6700\u5927\u503c\u67e5\u8be2\u53c8\u8ba9\u6211\u60f3\u5230\u4e86$ST$\u8868\u8fd9\u4e2a\u795e\u5947\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u662f\u6253\u5b8c$ST$\u6211\u53c8\u60f3\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u6bcf\u6b21\u7528\u4e00\u4e2a\u5e73\u53f0\u628a\u5269\u4e0b\u7684\u90e8\u5206\u5206\u6210\u4e24\u6bb5\uff0c\u800c\u6211$ST$\u8868\u53ea\u80fd\u7ef4\u62a4\u4ee5\u8fd9\u4e2a\u6570\u7ed3\u5c3e\u7684\u6700\u5927\u503c\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u6211\u65e0\u6cd5\u51c6\u786e\u5b9a\u4f4d\u540e\u9762\u7684\u533a\u95f4\u8303\u56f4\u7684\u8d77\u70b9\u5230\u5e95\u4ece\u54ea\u91cc\u5f00\u59cb\u4e0d\u4f1a\u4e0e\u5f53\u524d\u5e73\u53f0\u91cd\u590d\u3002\u4f46\u662f\u6211\u7b2c\u4e8c\u4e2a$ST$\u8868\u6253\u5b8c\u4e00\u534a\u604d\u7136\u5927\u609f\uff0c\u6211\u76f4\u63a5\u5012\u7740\u5faa\u73af\u5c31\u4e0d\u7528\u7ba1\u53f3\u8fb9\u90a3\u4e00\u6bb5\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u53d6\u53f3\u8fb9\u90a3\u4e00\u6bb5\u5c31\u76f8\u5f53\u4e8e\u662f\u6211\u7528\u53f3\u8fb9\u90a3\u4e00\u6bb5\u53bb\u627e\u5de6\u8fb9\u90a3\u4e00\u6bb5\uff0c\u800c\u5de6\u8fb9\u90a3\u4e00\u6bb5\u6211\u77e5\u9053\u5177\u4f53\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f$O(nlogn)$\u3002\n\n## \u9898\u76ee\u7ffb\u8bd1\u7684\u662fn\u7684\u8303\u56f4\u800c\u4e0d\u662fn\u7684\u548c\uff0c\u8ba9\u6211\u767d\u60f3\u4e86\u4e00\u4e07\u5e74\u66f4\u52a0\u9ad8\u6548\u7684\u7b97\u6cd5\n\n## \u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<cstdlib>\n#include<ctime>\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nint t,ans,maxx,n,k;\nint x[200005],y[200005],maxn[200005][25];\nint qry(int l,int r){\n\tif(l>r) return 0;//\u8fd9\u91cc\u6709\u4e2a\u7ec6\u8282\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5de6\u7aef\u70b9\u5927\u4e8e\u53f3\u7aef\u70b9\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\u8981\u8fd4\u56de0\n\tint k=log(r-l+1)/log(2);\n\treturn max(maxn[l][k],maxn[r-(1<<k)+1][k]);\n}\nstruct F{\n\tint sum,front,tail;\n}f[200005];\nint main()\n{\n\tt=read();\n\twhile(t--){\n\t\tmaxx=0;\n\t\tn=read();\n\t\tk=read();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tx[i]=read();\n\t\t}\n\t\tsort(x+1,x+1+n);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\ty[i]=read();\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint l=1,r=i,now;\n\t\t\twhile(l<=r){\n\t\t\t\tint mid=(r+l)>>1;\n\t\t\t\tif(x[i]-x[mid]>k){\n\t\t\t\t\tl=mid+1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tr=mid-1;\n\t\t\t\t\tnow=mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tf[i].sum=i-now+1;\n\t\t\tf[i].front=now;\n\t\t\tf[i].tail=i;//\u7528\u7ed3\u6784\u4f53\u8bb0\u5f55\u6240\u9700\u8981\u7684\u53d8\u91cf\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tmaxx=max(maxx,f[i].sum);\n\t\t\tmaxn[i][0]=f[i].sum;\n\t\t}\n\t\tfor(int j=1;j<=20;j++){\n\t\t\tfor(int i=1;i+(1<<j)-1<=n;i++){\n\t\t\t\tmaxn[i][j]=max(maxn[i][j-1],maxn[i+(1<<(j-1))][j-1]);\n\t\t\t}\n\t\t}\n\t\tfor(int i=n;i>=1;i--){\n\t\t\tmaxx=max(maxx,f[i].sum+qry(1,f[i].front-1));//\u5de6\u8fb9\u533a\u95f4\u7684\u8d77\u59cb\u70b9\u5c31\u662f1\uff0c\u800c\u7ed3\u675f\u7684\u5c31\u662f\u5f53\u524d\u5e73\u53f0\u7684\u8d77\u70b9\u518d-1\n\t\t}\n\t\tprintf(\"%d\\n\",maxx);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1600571026,
        "uid": 306982,
        "name": "\u4e8cgou\u5b50",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1409E \u3010Two Platforms\u3011"
    },
    {
        "content": "### [\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1409E)\n\n## \u5206\u6790\n\u672c\u9898\u7684\u4e24\u4e2a\u5e73\u53f0\u80fd\u5426\u63a5\u4f4f\u6c34\u6ef4\u4ec5\u4e0e\u6c34\u6ef4\u7684\u6a2a\u5750\u6807\u6709\u5173\uff0c\u6240\u4ee5\u7eb5\u5750\u6807\u53ef\u4ee5\u76f4\u63a5\u6254\u6389\u4e0d\u7ba1\n\n\n\u5c0f\u8d2a\u5fc3\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6c34\u73e0\uff0c\u663e\u7136\uff0c\u4e24\u4e2a\u5e73\u53f0\u5fc5\u987b\u4e0d\u80fd\u91cd\u5408\uff08 \u9664\u975e\u4e24\u4e2a\u5e73\u53f0\u7684\u603b\u957f\u5ea6\u5927\u4e8e $n$ \uff09\uff0c\u800c\u4e14\uff0c\u5e73\u53f0\u82e5\u60f3\u8981\u6700\u5927\u5316\u63a5\u4f4f\u7684\u6c34\u6ef4\u6570\uff0c\u663e\u7136\u5e73\u53f0\u7684\u4e00\u4e2a\u7aef\u70b9\u5fc5\u7136\u8981\u63a5\u5230\u81f3\u5c11\u4e00\u4e2a\u6c34\u73e0\n\n\n\u90a3\u4e48\uff0c\u672c\u9898\u7684\u89e3\u6cd5\u5c31\u663e\u7136\u6613\u89c1\u4e86\uff1a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6c34\u73e0\u7684\u6a2a\u5750\u6807\uff0c\u8ba1\u7b97\u4ee5\u8be5\u6c34\u73e0\u4e3a\u8d77\u70b9\u7684\u4e00\u4e2a\u5e73\u53f0\u957f\u5ea6\u5185\u4e00\u5171\u80fd\u63a5\u5230\u591a\u5c11\u6c34\u73e0\uff0c\u6700\u540e\u8f93\u51fa\u4e24\u4e2a\u4e92\u4e0d\u91cd\u5408\u7684\u5e73\u53f0\u80fd\u63a5\u5230\u7684\u6c34\u73e0\u603b\u6570\u7684\u6700\u5927\u503c\n\n\n\n## Solution\n\u663e\u7136\uff0c\u5982\u679c\u5355\u7eaf\u7684\u679a\u4e3e\u4e0e\u5224\u65ad\u662f\u81f3\u5c11\u8981 $O(nk)$ \u7684\uff0c\u4f1a T \u5f97\u98de\u8d77\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\n\n\n\u6211\u4eec\u8981\u505a\u7684\u662f\u627e\u5230\u533a\u95f4\u957f\u5ea6\u4e3a $k$ \u5185\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5e76\u4e0d\u7528\u8ba1\u7b97\u6570\u503c\u5927\u5c0f\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u79bb\u6563\u5316\u5904\u7406\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5229\u7528\u524d\u7f00\u548c\u9884\u5904\u7406\u5f97\u5230\n\n\u5982\uff1a\n```cpp\nsort(a+1,a+n+1);\nm=unique(a+1,a+n+1)-a-1;\nfor(int i=1;i<=n;i++)\n{\n      b[lower_bound(a+1,a+m+1,x[i])-a]++;//\u6b63\u5e38\u79bb\u6563\u5316\n}\nfor(int i=1;i<=n;i++)\n{\n      pre[i]=pre[i-1]+b[i];//\u8bb0\u5f55\u524d\u7f00\u548c\n}\nfor(int i=1;i<=n;i++)\n{\n      fg[i]=pre[upper_bound(a+i+1,a+m+1,a[i]+k)-a-1]-pre[i-1];\n      //\u8bbe\u5e73\u53f0\u8d77\u70b9\u6a2a\u5750\u6807\u4e3a i \uff0c\u67e5\u627e\u6700\u540e\u4e00\u4e2a\u6a2a\u5750\u6807\u5c0f\u4e8e i+k \u7684\u6c34\u73e0\u7684\u4f4d\u7f6e\uff0c\u5229\u7528\u524d\u7f00\u548c\u505a\u5dee\u5feb\u901f\u6c42\u51fa\u8be5\u533a\u95f4\u5185\u4e00\u5171\u6709\u591a\u5c11\u6c34\u73e0\n}\n```\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u5229\u7528\u7ebf\u6bb5\u6811\uff0c\u5c06\u53e6\u4e00\u5757\u5e73\u53f0\u6240\u80fd\u63a5\u5230\u7684\u6700\u5927\u6c34\u73e0\u6570\u91cf\u6c42\u51fa\n\n```cpp\nnode *rot=New(1,n);\nfor(int i=1;i<=m;i++)\n{\n      ans=max(ans,rot->qry(upper_bound(a+i+1,a+m+1,a[i]+k)-a,m)+fg[i]);\n      //\u8fd9\u91cc\u7684fg[i]\u8868\u793a\u4e86\u70b9\u7b2c\u4e00\u5757\u5e73\u53f0\u6240\u80fd\u63a5\u5230\u7684\u6700\u5927\u6c34\u73e0\u6570\u91cf\n      //\u7528\u7ebf\u6bb5\u6811\u67e5\u8be2\u8be5\u5e73\u53f0\u672b\u7aef\u4ee5\u540e\u7684\u533a\u95f4\u5185\uff0c\u53e6\u4e00\u5757\u5e73\u53f0\u6240\u80fd\u8986\u76d6\u5230\u7684\u6700\u5927\u6c34\u73e0\u6570\u91cf\n}\n```\n\n## Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<math.h>\n#define ll long long\nusing namespace std;\n\nconst ll maxn=2e5+10;\nll t,n,m,k,ans;\nll x[maxn],y[maxn],a[maxn],b[maxn],pre[maxn],fg[maxn];\n\nstruct node\n{\n\tll v,l,r;\n\tnode *ls,*rs;\n\t\n\tinline void pushup()\n\t{\n\t\tv=max(max(v,ls->v),rs->v);\n\t}\n\tinline bool inrange(ll L,ll R)\n\t{\n\t\treturn (L<=l)&&(r<=R);\n\t}\n\tinline bool outofrange(ll L,ll R)\n\t{\n\t\treturn (l>R)||(r<L);\n\t}\n\tinline ll qry(ll L,ll R)\n\t{\n\t\tif(inrange(L,R)) return v;\n\t\tif(outofrange(L,R)) return 0;\n\t\t\n\t\treturn max(ls->qry(L,R),rs->qry(L,R));\n\t}\n};\n\nnode Mem[maxn<<1];\nnode *pool=Mem;\n\ninline node *New(ll L,ll R)\n{\n\tnode *u=pool++;\n\tu->l=L;\n\tu->r=R;\n\t\n\tif(L==R)\n\t{\n\t\tu->v=fg[L];\n\t\tu->ls=u->rs=NULL;\n\t}\n\telse\n\t{\n\t\tll M=(L+R)>>1;\n\t\tu->ls=New(L,M);\n\t\tu->rs=New(M+1,R);\n\t\tu->pushup();\n\t}\n\treturn u;\n}\n\nint main(void)\n{\n\tscanf(\"%lld\",&t);\n\t\n\twhile(t--)\n\t{\t\n\t\tans=0;\n\t\t\n\t\tscanf(\"%lld%lld\",&n,&k);\n\t\t\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%lld\",&x[i]);\n\t\t\ta[i]=x[i];\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%lld\",&y[i]);\n\t\t}\n\t\t\n\t\tmemset(b,0,sizeof(b));\n        memset(pre,0,sizeof(pre));\n        memset(fg,0,sizeof(fg));\n\t\tsort(a+1,a+n+1);\n\t\tm=unique(a+1,a+n+1)-a-1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tb[lower_bound(a+1,a+m+1,x[i])-a]++;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tpre[i]=pre[i-1]+b[i];\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfg[i]=pre[upper_bound(a+i+1,a+m+1,a[i]+k)-a-1]-pre[i-1];\n\t\t}\n\t\t\n\t\tnode *rot=New(1,n);\n\t\t\t\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tans=max(ans,rot->qry(upper_bound(a+i+1,a+m+1,a[i]+k)-a,m)+fg[i]);\n\t\t}\n\t\t\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\t\n\treturn 0;\n}\n```\n\u53e6\u5916\uff0c\u8981\u6ce8\u610f $lower\\_bound$ \u4e0e $upper\\_bound$ \u7684\u4f7f\u7528",
        "postTime": 1600592809,
        "uid": 306957,
        "name": "_HwH_",
        "ccfLevel": 4,
        "title": "CF1409E Two Platforms"
    },
    {
        "content": "# \u9898\u89e3- $\\mathrm{CF1409E}$\n\n## \u9898\u76ee\u610f\u601d\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1409E)\n\n## $\\mathrm{Sol}$\n\n\u771f\u5c31\u6211\u7528\u6570\u636e\u7ed3\u6784\u505a\u8fd9\u9053\u9898\u76ee\uff1f\uff1f\uff01\n\n\u6211\u4eec\u9996\u5148\u5bf9\u5750\u6807\u79bb\u6563\u5316\u4e00\u4e0b\u7136\u540e\u8ba1\u7b97\u51fa\u4ee5 $i$ \u5f00\u5934\u7684\u5e73\u53f0 $[i,i+k]$ \u80fd\u843d\u4e0b\u51e0\u4e2a\u5c0f\u7403\u8bb0\u505a $s_i$ \u3002\u6211\u4eec\u5bf9 $s_i$ \u5efa\u4e00\u9897\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u679a\u4e3e\u7b2c\u4e00\u4e2a\u5e73\u53f0\u7684\u8d77\u70b9 $st$ \uff0c\u90a3\u4e48\u8fd9\u6b21\u7684\u8d21\u732e\u5373\u4e3a $s_{st}+\\max\\limits_{j=st+1}^{n}(s_j)$\uff0c\u76f4\u63a5\u7ebf\u6bb5\u6811\u7b97\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\n\n## $\\mathrm{Code}$\n\n```cpp\nint n,m,Q,x[N],y[N],a[N],gs[N],pre[N],s[N],mx[N<<2],ans;\n\ninline void build(int x,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tmx[x]=s[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(x<<1,l,mid);\n\tbuild(x<<1|1,mid+1,r);\n\tmx[x]=max(mx[x<<1],mx[x<<1|1]);\n}\n\ninline int ask(int x,int l,int r,int ll,int rr)\n{\n\tif(ll>r||rr<l) return 0;\n\tif(ll<=l&&r<=rr) return mx[x];\n\tint mid=l+r>>1,ans=0;\n\tans=max(ask(x<<1,l,mid,ll,rr),ask(x<<1|1,mid+1,r,ll,rr));\n\treturn ans;\n}\n\nint main()\n{\n\tio.read(Q);\n\tfor (;Q--;)\n\t{\n\t\tio.read(n),io.read(m);\n\t\tFor(i,0,n) gs[i]=0,pre[i]=s[i]=0;\n\t\tFor(i,1,n) io.read(x[i]),a[i]=x[i];\n\t\tFor(i,1,n) io.read(y[i]);\n\t\tsort(a+1,a+n+1);\n\t\tint tot=unique(a+1,a+n+1)-a-1;\n\t\tFor(i,1,n) gs[lower_bound(a+1,a+tot+1,x[i])-a]++;\n\t\tFor(i,1,n) pre[i]=pre[i-1]+gs[i];\n\t\tFor(i,1,n) s[i]=pre[upper_bound(a+i+1,a+tot+1,a[i]+m)-a-1]-pre[i-1];\n\t\tbuild(1,1,tot);\n\t\tFor(i,1,tot) ans=max(ans,s[i]+ask(1,1,tot,upper_bound(a+i+1,a+tot+1,a[i]+m)-a,tot));\n\t\tio.write(ans),puts(\"\"),ans=0;\n\t}\n\treturn 0;\n}\n\t\t\n```\n",
        "postTime": 1599314515,
        "uid": 308464,
        "name": "\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1409E \u3010Two Platforms\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u9605\u8bfb\u9898\u76ee\u53ef\u53d1\u73b0\u7eb5\u5750\u6807\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u4e8e\u662f\u53ea\u8981\u8003\u8651\u6a2a\u5750\u6807\u3002\n\n\u5c06\u6a2a\u5750\u6807\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u9884\u5904\u7406\u51fa $lpos$ \u548c $rpos$ \u4e24\u4e2a\u6570\u7ec4\u3002\n\n$lpos(i)$ \u8868\u793a\u5728\u533a\u95f4 $[1, i]$ \u4e2d\u653e\u7b2c\u4e00\u5757\u677f\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u7b54\u6848\u3002\n\n$rpos(i)$ \u8868\u793a\u5728\u533a\u95f4 $[i, n]$ \u4e2d\u653e\u7b2c\u4e8c\u5757\u677f\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u7b54\u6848\u3002\n\n\u8fd9\u4e24\u4e2a\u6570\u7ec4\u90fd\u53ef\u4ee5\u7528\u6307\u9488\u626b\u63cf\u4e00\u904d\u5f97\u5230\uff0c\u6700\u540e\u5728\u5c06\u6bcf\u4e00\u9879\u52a0\u8d77\u6765\u5f97\u5230\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlog_{2}{n})$ \u3002\n\n```cpp\nconst int Maxn = 2e5 + 5;\nint T, n, k, a[Maxn], b[Maxn];\nint lpos[Maxn], rpos[Maxn];\n\nsigned main(void) {\n//\tfile(\"\");\n\tfor (read(T); T; T--) {\n\t\tread(n), read(k);\n\t\tfor (int i = 1; i <= n; i++) read(a[i]);\n\t\tfor (int i = 1; i <= n; i++) read(b[i]);\n\t\tsort(a + 1, a + n + 1);\n\t\tif (a[n] - a[1] <= k << 1) { writeln(n); continue; }\n\t\t\n\t\tfor (int i = 1, pos = 1; i <= n; i++) {\n\t\t\twhile (pos < n && a[pos + 1] - a[i] <= k) ++pos;\n\t\t\trpos[i] = pos - i + 1;\n\t\t} for (int i = n - 1; i >= 1; i--) chkmax(rpos[i], rpos[i + 1]);\n\t\t\n\t\tfor (int i = n, pos = n; i >= 1; i--) {\n\t\t\twhile (pos > 1 && a[i] - a[pos - 1] <= k) --pos;\n\t\t\tlpos[i] = i - pos + 1; \n\t\t} for (int i = 2; i <= n; i++) chkmax(lpos[i], lpos[i - 1]);\n\t\t\n\t\tint ans = 0;\n\t\tfor (int i = 1; i < n; i++) chkmax(ans, lpos[i] + rpos[i + 1]);\n\t\twriteln(ans);\n\t}\n//\tfwrite(pf, 1, o1 - pf, stdout);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1599285495,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1409E \u3010Two Platforms\u3011"
    },
    {
        "content": "\u663e\u7136 $y$ \u6ca1\u7528\n\n\u628a\u70b9\u6309\u7167 $x$ \u6392\u5e8f\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cc\u6307\u9488\u6216\u4e8c\u5206\u627e\u5230\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u5de6/\u53f3\u7aef\u70b9\u7684\u7ebf\u6bb5\u53ef\u4ee5\u8986\u76d6\u5230\u5de6/\u53f3\u4fa7\u54ea\u4e2a\u70b9\uff0c\u8bb0\u4e3a pre \u548c nxt\u3002\u518d\u9884\u5904\u7406\u51fa\u5728\u6bcf\u4e2a\u70b9\u5de6/\u53f3\u4fa7\u653e\u7f6e\u4e00\u6761\u7ebf\u6bb5\u6700\u591a\u53ef\u4ee5\u8986\u76d6\u591a\u5c11\u4e2a\u70b9\uff08\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u7684\u6570\u7ec4\u5904\u7406\u5b9e\u73b0\uff09\uff0c\u8bb0\u4e3a z \u548c y\u3002\u663e\u7136\u4ee4\u7b54\u6848\u7ebf\u6bb5\u6ca1\u6709**\u6709\u957f\u5ea6\u7684\u91cd\u5408**\u4e0d\u52a3\uff0c\u5219\u679a\u4e3e\u7b54\u6848\u7ebf\u6bb5\u7684\u4e2d\u95f4\u5206\u754c\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u4e3a $\\max\\{z_i+y_{i+1}\\}$\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+2;\nint x[N],nxt[N],pre[N],f[N][2],z[N],y[N];\nint t,n,m,i,j,c;\ninline void read(int &x)\n{\n\tc=getchar();\n\twhile ((c<48)||(c>57)) c=getchar();\n\tx=c^48;c=getchar();\n\twhile ((c>=48)&&(c<=57))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n}\nint main()\n{\n\tread(t);\n\twhile (t--)\n\t{\n\t\tread(n);read(m);\n\t\tfor (i=1;i<=n;i++) read(x[i]);\n\t\tsort(x+1,x+n+1);\n\t\tfor (i=1;i<=n;i++) read(j);\n\t\tpre[1]=1;\n\t\tfor (i=j=1;i<=n;i++)\n\t\t{\n\t\t\tf[i][0]=f[i][1]=0;\n\t\t\twhile ((j<n)&&(x[j+1]<=x[i]+m)) pre[++j]=i;\n\t\t\tnxt[i]=j;\n\t\t}y[n+1]=0;\n\t\tfor (i=1;i<=n;i++) z[i]=max(z[i-1],i-pre[i]+1);\n\t\tfor (i=n;i;i--) y[i]=max(y[i+1],nxt[i]-i+1);c=0;\n\t\tfor (i=1;i<=n;i++) c=max(c,z[i]+y[i+1]);printf(\"%d\\n\",c);\n\t}\n}\n```",
        "postTime": 1599278441,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1409E \u3010Two Platforms\u3011"
    },
    {
        "content": "# \u5206\u6790\n\n\u8fd9\u662f\u4e00\u9053\u7b80\u5355\u7684\u7ebf\u6027 DP\u3002\n\n\u9996\u5148\u901a\u8fc7\u89c2\u5bdf\uff0c\u53ef\u77e5\u70b9\u7684\u7eb5\u5750\u6807 $y$ \u662f\u4e0d\u8d77\u4f5c\u7528\u7684\uff08\u6211\u4eec\u53ef\u4ee5\u5c06\u5e73\u53f0\u653e\u7f6e\u4e8e\u7eb5\u5750\u6807\u8d1f\u65e0\u7a77\u7684\u4f4d\u7f6e\uff09\u3002\u901a\u8fc7\u5bf9\u5269\u4e0b\u7684\u6a2a\u5750\u6807 $x$ \u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u5728 $x$ \u8f74\u4e0a\u5f97\u5230\u4e86\u4e00\u7cfb\u5217\u6709\u5e8f\u7684\u70b9\uff0c\u8fd9\u4e9b\u6709\u5e8f\u7684\u70b9\u5c31\u662f\u7ebf\u6027 DP \u7684\u5904\u7406\u7ebf\u7d22\u3002\n\n\u8ba9\u6211\u4eec\u5148\u5c06\u95ee\u9898\u7b80\u5316\uff0c\u53ea\u4f7f\u7528\u4e00\u4e2a\u5e73\u53f0\uff0c\u6c42\u6240\u80fd\u63a5\u4f4f\u7684\u70b9\u7684\u6700\u5927\u6570\u91cf\u3002\u6b64\u65f6\uff0c\u53ef\u4f5c\u4e3a\u72b6\u6001\u7684\u4fe1\u606f\u6709\uff1a`x \u8f74\u4e0a\u6709\u5e8f\u7684\u70b9`\u3001`\u5e73\u53f0\u6240\u80fd\u63a5\u4f4f\u7684\u70b9\u7684\u6570\u91cf`\uff1b\u800c\u540e\u8005\u4e3a\u9898\u76ee\u6240\u6c42\uff0c\u6545\u72b6\u6001\u8bbe\u7f6e\u547c\u4e4b\u6b32\u51fa\u2014\u2014\n\n$f(i)$ \u8868\u793a\u5904\u7406\u5230\u7b2c $i$ \u4e2a\u70b9\u65f6\uff0c\u5e73\u53f0\u6240\u80fd\u63a5\u4f4f\u7684\u70b9\u7684\u6700\u5927\u6570\u91cf\u3002\n\n\u5982\u4f55\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u5462\uff1f\u60f3\u8c61\u4e00\u4e2a\u5e73\u53f0\u5728 $x$ \u8f74\u4e0a\u4ece\u5de6\u5f80\u53f3\u6ed1\u52a8\uff0c\u603b\u662f\u8bd5\u56fe\u63a5\u4f4f\u7b2c $i$ \u4e2a\u70b9\u3002\u8ba9\u6211\u4eec\u8bbe\u8fd9\u4e2a\u5df2\u63a5\u4f4f\u4e86\u7b2c $i$ \u4e2a\u70b9\u7684\u5e73\u53f0\u6b64\u65f6\u4e00\u5171\u63a5\u4f4f\u4e86 `cnt` \u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$f(i)=\\max\\{f(i-1),cnt\\}$\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u653e\u7f6e\u4e24\u4e2a\u5e73\u53f0\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f5c\u4e3a\u72b6\u6001\u7684\u4fe1\u606f\u589e\u52a0\u4e86\u4e00\u4e2a`\u5df2\u653e\u7f6e\u5e73\u53f0\u7684\u4e2a\u6570`\uff0c\u4e8e\u662f\u672c\u9898\u7684\u72b6\u6001\u8bbe\u7f6e\u4e3a\u2014\u2014\n\n$f(i,j)$ \u8868\u793a\u5904\u7406\u5230\u7b2c $i$ \u4e2a\u70b9\uff0c\u5df2\u653e\u7f6e\u4e86 $j$ \u4e2a\u5e73\u53f0\u65f6\uff0c\u6240\u80fd\u63a5\u4f4f\u7684\u70b9\u7684\u6700\u5927\u6570\u91cf\u3002\uff08\u5f53\u7136\uff0c$j$ \u53ef\u4ee5\u53d6 $0$ \u548c $1$ \u6765\u5206\u522b\u4ee3\u8868\u653e\u7f6e\u4e86 $1$ \u548c $2$ \u4e2a\u5e73\u53f0\uff09\n\n\u8ba9\u6211\u4eec\u8bbe\u8fd9\u4e2a\u5df2\u63a5\u4f4f\u4e86\u7b2c $i$ \u4e2a\u70b9\u7684\u5e73\u53f0\u6b64\u65f6\u4e00\u5171\u63a5\u4f4f\u4e86 `cnt` \u4e2a\u70b9\uff0c\u63a5\u4f4f\u7684\u7b2c\u4e00\u4e2a\u70b9\u662f $x$ \u8f74\u4e0a\u4ece\u5de6\u5f80\u53f3\u7684\u7b2c `k` \u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$\\begin{cases}f(i,0)=\\max\\{f(i-1,0),cnt\\}\\\\f(i,1)=\\max\\{f(i-1,1),f(k-1,0)+cnt\\}\\end{cases}$\n\n\u5982\u4f55\u6c42\u5f97 `cnt` \u4e0e `k` \u5462\uff1f\u53ef\u4ee5\u53c2\u8003\u6ed1\u52a8\u7a97\u53e3\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u4ece\u7b2c\u4e00\u4e2a\u70b9\u5f00\u59cb\u4f5c\u4e3a\u5e73\u53f0\u7684\u5de6\u7aef\u70b9\uff0c\u7531\u4e8e\u957f\u5ea6\u786e\u5b9a\uff0c\u6b64\u65f6\u5e73\u53f0\u53f3\u7aef\u70b9\u4e5f\u88ab\u786e\u5b9a\uff0c\u5e73\u53f0\u6240\u80fd\u63a5\u4f4f\u70b9\u7684\u8303\u56f4\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002\u6bcf\u52a0\u5165\u4e00\u4e2a\u70b9 $i$ \uff0c\u5982\u679c\u5728\u5e73\u53f0\u6240\u80fd\u63a5\u4f4f\u70b9\u7684\u8303\u56f4\u5185\uff0c`cnt` \u5c31\u52a0\u4e00\uff1b\u5982\u679c\u5728\u8303\u56f4\u5916\uff0c\u5c31\u53f3\u79fb\u5e73\u53f0\uff08\u5de6\u7aef\u70b9\u66f4\u6539\u4e3a\u4e0b\u4e00\u4e2a\u70b9\uff09\uff0c\u6bcf\u53f3\u79fb\u4e00\u6b21 `cnt` \u4fbf\u51cf\u53bb\u4e00\uff0c\u76f4\u5230\u70b9 $i$ \u80fd\u591f\u88ab\u5e73\u53f0\u63a5\u4f4f\u3002`k` \u5c31\u662f\u5e73\u53f0\u5de6\u7aef\u70b9\u3002\n\n# AC\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 10;\n\nint t, n, k, x[MAXN], f[MAXN][2];\n\nint main()\n{\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        scanf(\"%d%d\", &n, &k);\n        for (int i = 1; i <= n; i++)\n            scanf(\"%d\", &x[i]);\n        for (int i = 1; i <= n; i++)\n            scanf(\"%*d\");\n        sort(x + 1, x + 1 + n);\n        for (int i = 1, j = 1, cnt = 1; i <= n; i++)\n        {\n            while (x[j] + k < x[i])\n                ++j, --cnt;\n            f[i][0] = max(f[i - 1][0], cnt);\n            f[i][1] = max(f[i - 1][1], f[j - 1][0] + cnt);\n            ++cnt;\n        }\n        printf(\"%d\\n\", f[n][1]);\n    }\n    return 0;\n}\n```",
        "postTime": 1629539980,
        "uid": 375012,
        "name": "MagicalSheep",
        "ccfLevel": 0,
        "title": "CF1409E"
    },
    {
        "content": "[\u5728\u672c\u849f\u84bb\u7684\u535a\u5ba2\u98df\u7528\u66f4\u4f73](https://www.luogu.com.cn/blog/LXLDuliu-IAKIOI/solution-cf1409e)\n\n### \u4e0b\u9762\u7b80\u5355\u63cf\u8ff0\u4e00\u4e0b\u9898\u610f\u3002**\uff08\u8bf7\u6ce8\u610f\u9898\u610f\u6709\u8f6c\u4e49\uff09**\u3002\n\n\u4e00\u6761\u76f4\u7ebf\u4e0a\u6709\u82e5\u5e72\u4e2a\u70b9\uff0c\u4ee5\u53ca\u4e24\u6761\u957f\u5ea6\u90fd\u4e3a $k$ \u7684\u7ebf\u6bb5\u3002\u53ef\u4ee5\u5728\u76f4\u7ebf\u7684\u4efb\u610f\u4f4d\u7f6e\u653e\u7f6e\u7ebf\u6bb5\uff0c\u4f46\u662f\u7ebf\u6bb5\u7684\u8d77\u6b62\u70b9\u5fc5\u987b\u90fd\u662f\u6574\u70b9\uff08\u5373\u6a2a\u5750\u6807\u4e3a\u6574\u6570\u7684\u70b9\uff09\u3002\u8bf7\u6c42\u51fa\u8fd9\u4e24\u6761\u7ebf\u6bb5\u6700\u591a\u80fd\u8986\u76d6\u591a\u5c11\u4e2a\u70b9\u3002\n\n\n### \u63a5\u4e0b\u6765\u8bb2\u8bb2\u6b63\u89e3\u3002\n\n\u4ece\u4e0a\u9762\u7684\u63cf\u8ff0\u53ef\u4ee5\u770b\u51fa\uff0c\u672c\u9898\u7684\u89e3\u51b3\u8ddf\u70b9\u7684\u7eb5\u5750\u6807**\u4e00\u70b9\u5173\u7cfb\u4e5f\u6ca1\u6709**\u3002\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u9996\u5148\u5c06\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u5904\u7406\u6bcf\u4e2a\u70b9\u3002\n\n\u5728\u5904\u7406\u7b2c $i$ \u4e2a\u70b9\u65f6\uff1a\n1. \u5411\u53f3\u641c\u7d22\u7b2c\u4e00\u4e2a\u6a2a\u5750\u6807\u5927\u4e8e $x_i+k$ \u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u4ece\u7b2c $i$ \u4e2a\u70b9\u5411\u53f3\u653e\u677f\u88c5\u4e0d\u4e0b\u7684\u70b9\uff0c\u5e76\u8ba1\u7b97\u8fd9\u4e2a\u70b9\u5230 $i$ \u80fd\u88c5\u4e0b\u591a\u5c11\u4e2a\u70b9\u3002**\u8bf7\u6ce8\u610f\uff1a\u641c\u7d22\u5230\u7684\u90a3\u4e2a\u70b9\u4e0d\u5305\u62ec\u5728\u88c5\u4e0b\u7684\u70b9\u91cc**\n2. \u5411\u5de6\u641c\u7d22\u7b2c\u4e00\u4e2a\u6a2a\u5750\u6807\u5927\u4e8e\u7b49\u4e8e $x_{i-1}-k$ \u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u4ece\u7b2c $i-1$ \u4e2a\u70b9\u5411\u5de6\u653e\u677f\u88c5\u4e0b\u7684\u70b9\uff0c\u5e76\u8ba1\u7b97\u8fd9\u4e2a\u70b9\u5230 $i-1$ \u80fd\u88c5\u4e0b\u591a\u5c11\u4e2a\u70b9\u3002**\u8bf7\u6ce8\u610f\uff1a**\n\t1. **\u5f53\u5904\u7406\u5230\u7b2c $1$ \u4e2a\u70b9\u7684\u65f6\u5019\u518d\u5f00\u59cb\u5411\u5de6\u641c\u7d22\uff1b**\n    2. **\u641c\u7d22\u5230\u7684\u70b9\u4e00\u5b9a\u8981\u5305\u62ec\u5728\u88c5\u4e0b\u7684\u70b9\u91cc\u3002**\n3. \u7ef4\u62a4 max \u503c\uff0c\u5373\u6bd4\u5bf9\u4e00\u4e0b\u3002**\u6ce8\u610f\u5411\u53f3\u641c\u7d22\u7684\u548c\u5411\u5de6\u641c\u7d22\u7684\u8981\u5206\u5f00\u8bb0\u5f55**\n\n\n\u505a\u5230\u8fd9\u4e9b\u5c31\u53ef\u4ee5AC\u5566\uff01\n\nAC Code: \n```cpp\n/*\n\tAuthor: \u6211\u7231Chtholly\n\tDate: 2020/09/05\n\tProblem: CF1409E Two Platforms \n    Time: 2.01s\n    Memory: 4.80MB\n*/\n#include<bits/stdc++.h>\n#define re register\n//\u5c0f\u5c0f\u5361\u4e2a\u5e38 \n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\nusing namespace std;\ntypedef long long ll ;\nconst int N = 2e5 + 9 ;\nint x[N],t,n,k;\n//\u4ee5\u4e0b\u5168\u90e8\u90fd\u662f\u5feb\u8bfb\u5feb\u8f93\u7684\u5185\u5bb9 \nchar buf[1 << 21], * p1 = buf, * p2 = buf;\ninline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++;\n\t}\ninline int read() {\n\tint ret = 0, f = 0;\n\tchar ch = getc();\n\twhile (!isdigit(ch)) {\n\t\tif (ch == '-')\n\t\t\tf = 1;\n\t\tch = getc();\n\t}\n\twhile (isdigit(ch)) {\n\t\tret = ret * 10 + ch - 48;\n\t\tch = getc();\n\t}\n\treturn f ? -ret : ret;\n}\nchar Buf[1 << 21], out[20];\nint P, Size = -1;\ninline void flush() {\n\tfwrite(Buf, 1, Size + 1, stdout);\n\tSize = -1;\n}\ninline void write(int x, char ch) {\n\tif (Size > 1 << 20) flush();\n\tif (x < 0) Buf[++Size] = 45, x = -x;\n\tdo {\n\t\tout[++P] = x % 10 + 48;\n\t} while (x /= 10);\n\tdo {\n\t\tBuf[++Size] = out[P];\n\t} while (--P);\n\tBuf[++Size] = ch;\n}\n//\u5feb\u8bfb\u5feb\u8f93\u7ed3\u675f \ninline int max(int a, int b) {\n    return a>b?a:b;\n}\nint main()\n{\n    t=read();\n    while(t--){\n        n=read(),k=read();\n        for(re int i = 0 ; i < n ; i++) *(x+i)=read();\n        for(re int i = 0 ; i < n ; i++) read();   //\u4ee5\u4e0a\u90fd\u662f\u8bfb\u5165 \n        sort(x , x + n); \n        int maxi = 0 , opt = 0 , fans = 0;\n        for(re int i = 0 ; i < n ; i++){\n            int curr = upper_bound(x + i, x + n , *(x+i) + k)  - x - i;  //\u4ece\u7b2ci\u4e2a\u70b9\u5411\u53f3\u4e8c\u5206\u6700\u591a\u80fd\u88c5\u4e0b\u7684\u70b9\u6570 \n            if(i) opt = x + i - lower_bound(x , x + i - 1 , *(x+i-1) - k); //\u4ece\u4e0a\u4e00\u4e2a\u70b9\u5411\u5de6\u4e8c\u5206\u53e6\u4e00\u5757\u677f\u6700\u591a\u80fd\u88c5\u4e0b\u7684\u70b9\u6570 \n            maxi = max(maxi , opt); \n            curr+=maxi;\n            fans = max(fans , curr);  //\u4ee5\u4e0a\u7ef4\u62a4max \n        }\n        write(fans, '\\n');\n    }\n    flush();  //\u5343\u4e07\u522b\u5fd8\u4e86\u5237\u65b0fwrite\u7684\u7f13\u51b2\u533a \n    return 0;\n}\n```\n\n~~\u4e0d\u52a0\u90a3\u4e00\u5806\u5361\u5e381.99s\u6765\u7684~~\n\n## \u770b\u6211\u5199\u7684\u8fd9\u4e48\u8be6\u7ec6\uff0c\u4e0d\u70b9\u4e2a\u8d5e\u518d\u8d70\u561bQAQ",
        "postTime": 1599306957,
        "uid": 372299,
        "name": "\u8d85\u7ea7\u739b\u4e3d\u738b\u5b50",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1409E \u3010Two Platforms\u3011"
    },
    {
        "content": "\u5199\u7bc7\u9898\u89e3\u5e86\u795d\u6211\u7b2c $1$ \u6b21\u53c2\u52a0 $div3$\uff0c\u800c\u4e14\u8fd8 $AK$ \u4e86\n\n\u6211\u4eec\u53d1\u73b0 $y$ \u5750\u6807\u8d8a\u4f4e\u8d8a\u597d\uff0c\u6240\u4ee5\u7b54\u6848\u4e0e $y$ \u5750\u6807\u65e0\u5173\u3002\n\n\u73b0\u5728\u95ee\u9898\u7b49\u4ef7\u4e8e\u4e00\u6761\u6570\u8f74\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u6c42 $2$ \u6761\u7ebf\u6bb5\u8986\u76d6\u5c3d\u53ef\u80fd\u591a\u7684\u70b9.\n\n\u6211\u4eec\u8003\u8651\u7c7b\u4f3c\u4e8e[\u53cc\u5b50\u5e8f\u5217\u6700\u5927\u548c](https://www.luogu.com.cn/problem/P2642)\u4e00\u6837\u7684[\u505a\u6cd5](https://www.luogu.com.cn/blog/180242/solution-p2642)\n\n\u9996\u5148\uff0c\u6709 $2$ \u4e2a\u7ed3\u8bba\uff1a\n- $2$ \u6761\u7ebf\u6bb5\u91cd\u53e0\u660e\u663e\u662f\u4e0d\u4f18\u7684\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8ba9\u8fd9\u4e24\u6761\u65e0\u91cd\u53e0\u3002\n- \u7ebf\u6bb5\u7684\u81f3\u5c11 $1$ \u7684\u7aef\u70b9\u8981\u662f $n$ \u4e2a\u70b9\u5f53\u4e2d\u7684\u4e00\u4e2a\uff0c\u8fd9\u6837\u663e\u7136\u4f1a\u6bd4\u7ebf\u6bb5 $2$ \u6bb5\u90fd\u4e0d\u662f $n$ \u4e2a\u4e2d\u7684\u4e00\u4e2a\u7684\u8981\u4f18\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\n\n\u4ee3\u7801\uff1a\n```cpp\nint work(){\n\tmemset(f,0,sizeof(f));\n\tmemset(g,0,sizeof(g));\n\tmemset(k,0,sizeof(k));\n\tint n,k;read(n);read(k);\n\tfor(int i=1;i<=n;i++)read(a[i]);\n\tfor(int i=1;i<=n;i++)read(b[i]);\n\tsort(a+1,a+n+1);//\u4e0d\u8981\u5fd8\u4e86\u6392\u5e8f\n\tfor(int i=1;i<=n;i++)f[i]=i-(lower_bound(a+1,a+n+1,a[i]-k)-a)+1;//\u4ee5\u7b2ci\u4e2a\u70b9\u4e3a\u5de6\u7aef\u70b9\n\tfor(int i=n;i;i--)p[i]=upper_bound(a+1,a+n+1,a[i]+k)-a-i;//\u4ee5\u7b2ci\u4e2a\u70b9\u4e3a\u53f3\u7aef\u70b9\n\tfor(int i=1;i<=n;i++)g[i]=max(g[i-1],f[i]);\n\tfor(int i=n;i;i--)::k[i]=max(::k[i+1],p[i]);\n\tint ans=0;\n\tfor(int i=1;i<=n+1;i++)ans=max(ans,g[i-1]+::k[i]);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1599290305,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1409E \u3010Subsequences of Length Two\u3011"
    },
    {
        "content": "\u8ddf\u8fd9\u9053\u9898\u975e\u5e38\u76f8\u4f3c [https://www.luogu.com.cn/problem/P3143](https://www.luogu.com.cn/problem/P3143) \u53ef\u4ee5\u4e00\u5e76 `AC` \u8fd9\u9053\u9898\u3002\n\n`two-pointer`\u95ee\u9898\uff0c \u5229\u7528\u6570\u7ec4\u7684\u5355\u8c03\u6027\u3002 \n\n\u56e0\u4e3a\u662f\u8981\u5bfb\u627e\u4e24\u4e2a\u5408\u6cd5\u7684\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e24\u4e2a\u6570\u7ec4\u7ef4\u62a4\u7b54\u6848\uff1a\n\n - `InL[i]`\u8868\u793a\u533a\u95f4\u5168\u90e8\u5728`i`\u524d\u9762\u7684\u6700\u5927\u533a\u95f4\u3002 \n - `InR[i]`\u8868\u793a\u533a\u95f4\u5168\u90e8\u5728`i`\u540e\u9762\u7684\u6700\u5927\u533a\u95f4\u3002 \n \n\u6700\u540e\u679a\u4e3e\u4e00\u4e2a\u4e2d\u95f4\u70b9\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <iostream>\n#include <climits>\n#include <algorithm>\n#include <map>\ninline int read() { char c = getchar(); int sign = 1; int x = 0; while(c > '9' || c < '0') { if(c=='-')sign = -1; c = getchar(); } while(c <= '9' && c >= '0') { x *= 10; x += c - '0'; c = getchar(); } return x * sign; }\nusing namespace std;\nconst int _ = 2e5 + 100;\nint n, k;\nint A[_];\nint B[_];\nint W[_];\nint InL[_];\nint InR[_];\nmap<int, int > M;\nvoid doit(){\n    n = read(), k = read();\n    for(int i = 1; i <= n; i++) B[i] = read();\n    for(int i = 1; i <= n; i++) read();\n    for(int i = 1; i <= n; i++) ++M[B[i]];\n    memcpy(A, B, sizeof(A));\n    sort(A + 1, A + 1 + n);\n    n = unique(A + 1, A + 1 + n) - A - 1;\n    for(int i = 1; i <= n; i++) W[i] = M[A[i]];\n    int L = 1;\n    int sum = 0;\n    for(int R = 1; R <= n; R++){\n        sum += W[R];\n        while(A[R] - A[L] > k) sum -= W[L], L++;\n        InL[R] = sum;\n    }\n    int R = n;\n    sum = 0;\n    for(int L = n; L >= 1; L--){\n        sum += W[L];\n        while(A[R] - A[L] > k) sum -= W[R], R--;\n        InR[L] = sum;\n    }\n    for(int i = 1; i <= n; i++) InL[i] = max(InL[i - 1], InL[i]);\n    for(int i = n; i >= 1; i--) InR[i] = max(InR[i + 1], InR[i]);\n    int ans = 0;\n    for(int i = 0; i <= n; i++){\n        ans = max(ans, InL[i] + InR[i + 1]);\n    }\n    if(A[n] - A[1] <= k + k) {\n        ans = 0;\n        for(int i = 1; i <= n; i++) ans += W[i];\n    }\n    printf(\"%d\\n\", ans);\n    for(int i = 0; i <= n + 2; i++) A[i] = B[i] = W[i] = InL[i] = InR[i] = 0;\n    M.clear();\n}\n\nint main(){\n    int T = read();\n    while(T--) doit();\n    return 0;\n}\n```",
        "postTime": 1599277901,
        "uid": 44615,
        "name": "ShuYuMo",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1409E \u3010Two Platforms\u3011"
    }
]