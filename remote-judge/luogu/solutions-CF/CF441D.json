[
    {
        "content": "## \u9898\u610f  \n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6392\u5217$p$\u3002$f(p)$\u4e3a\u4f7f\u53d8\u4e3a\u6392\u5217$1,2...n$\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002  \n\n\u6bcf\u6b21\u4ea4\u6362$(i,j)$\u6307\u4ea4\u6362$p_i$\u4e0e$p_j$\u3002  \n\n\u7ed9\u5b9a\u4e00\u4e2a$m$\uff0c\u95ee\u4f7f$f(p)=m$\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002  \n\n## \u5206\u6790 \n\n\u5148\u8003\u8651$f(p)$\u600e\u4e48\u6c42\u3002  \n\n\u53d1\u73b0\u6392\u5217\u4e2d\u7684\u5173\u7cfb\u662f\u51e0\u4e2a\u73af\u3002\u6bd4\u5982\u6392\u5217$2,1,4,5,3$\u3002  \n  \n\u5c06$-$\u770b\u505a\u76ee\u6807\u4f4d\u7f6e\u7684\u8bdd\u7684\u8bdd\uff0c\u4e0a\u9762\u8fd9\u4e2a\u6392\u5217\u53ef\u4ee5\u8868\u793a\u6210\u3002  \n  \n$2-1-2,4-5-3-4$\u3002\u4e24\u4e2a\u73af\uff0c\u90a3\u4e48\u4e0a\u9762\u6392\u5217\u7684$f$\u503c\u5c31\u662f$5-2=3$\u3002(\u56e0\u4e3a\u4e00\u4e2a\u73af\u53ef\u4ee5\u51cf\u5c11\u4e00\u6b21\u4ea4\u6362\uff0c\u5efa\u8bae\u81ea\u5df1\u8bd5\u8bd5\u770b\u66f4\u597d\u7406\u89e3)\u3002  \n\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u6c42\u51fa$O(n)$\u6c42\u51fa\u4e00\u4e2a\u6392\u5217\u7684$f$\u4e86\u3002  \n\n\u8bbe\u73af\u7684\u4e2a\u6570\u4e3a$k$,\u6bd4\u8f83\u521d\u59cb\u7684$n-k$\u4e0e$m$\u3002  \n\n\u5982\u679c$n-k<m$\u5c31\u8981\u51cf\u5c11\u73af\u7684\u6570\u91cf\u3002\u4efb\u53d6\u4e24\u4e2a\u73af\uff0c\u4ea4\u6362\u5176\u4e2d\u4efb\u610f\u5143\u7d20\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u5c31\u628a\u4e24\u4e2a\u73af\u76f8\u8fde\u4e86\uff0c\u73af\u7684\u4e2a\u6570\u51cf\u5c11\u4e86$1$\u3002  \n\n\u5982\u679c$n-k>m$\u5c31\u8981\u589e\u52a0\u73af\u7684\u6570\u91cf\u3002\u5728\u4e00\u4e2a\u70b9\u6570\u5927\u4e8e$2$\u7684\u73af\u5185\uff0c\u4efb\u610f\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\uff0c\u8fd9\u4e2a\u73af\u5c31\u65ad\u6210\u4e86\u4e24\u4e2a\uff0c\u4e5f\u5c31\u51cf\u5c11\u4e86\u4e00\u4e2a\u73af\u3002  \n\n\n\u8fd9\u9898\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u6bcf\u6b21\u679a\u4e3e\u5408\u6cd5\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u65b9\u6848\uff0c\u7136\u540e\u518d\u5728\u6392\u5217\u4e0a\u628a\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u73af\u4ee5\u53ca\u73af\u7684\u5927\u5c0f\u8dd1\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002  \n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\u3002    \n\n\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u8fd9\u91cc\u662f\u8ba9\u4ea4\u6362\u7684\u7f16\u53f7\u6700\u5c0f\uff0c\u5373$(i,j)$\u6700\u5c0f\uff0c\u4e0d\u662f$(p_i,p_j)$\u6700\u5c0f\u3002\n\n## \u4ee3\u7801 \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 3020;\nint tot,in[N],siz[N];\nint n,a[N];\nvoid build()\n{\n\tmemset(in,0,sizeof(in));\n\ttot = 0;\n\tfor(int i=1;i<=n;i++)if(!in[i])\n\t{\n\t\t++tot;siz[tot]=1;\n\t\tin[i] = tot;\n\t\tfor(int j=a[i];j!=i;j=a[j])in[j]=tot,siz[tot]++;\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tbuild();\n\tint m;\n\tscanf(\"%d\",&m);\n\tprintf(\"%d\\n\",abs(n-tot-m));\n\tif(n-tot>m)\n\t{\n\t\twhile(n-tot>m)\n\t\t{\n\t\t\tfor(int i=1;i<=n;i++)if(siz[in[i]]>=2)\n\t\t\t{\n\t\t\t\tint lag=0;\n\t\t\t\tfor(int j=i+1;j<=n;j++)if(in[j]==in[i])\n\t\t\t\t{\n\t\t\t\t\tlag=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswap(a[i],a[lag]);\n\t\t\t\tprintf(\"%d %d \",i,lag);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuild();\n\t\t}\n\t}\n\telse\n\t{\n\t\twhile(n-tot<m)\n\t\t{\n\t\t\tfor(int i=2;i<=n;i++)if(in[i]!=in[1])\n\t\t\t{\n\t\t\t\tswap(a[1],a[i]);\n\t\t\t\tprintf(\"%d %d \",1,i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuild();\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1606205360,
        "uid": 13197,
        "name": "zhendelan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF441D \u3010Valera and Swaps\u3011"
    }
]