[
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u65e0\u9650\u5c42\u6570\u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u6709 $n$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5f62\u5982\u4ee5\u4e0b\u4e09\u79cd\uff1a\n\n- `1 x k`\uff1a\u5c06 $x$ \u6240\u5728\u5c42\u7684\u6240\u6709\u8282\u70b9\u7684\u5f80\u53f3\u5faa\u73af\u79fb\u52a8 $k$ \u5355\u4f4d\u3002\n\n- `2 x k`\uff1a\u5c06 $x$ \u6240\u5728\u5c42\u7684\u6240\u6709\u8282\u70b9\u8fde\u5e26\u5b50\u6811\u5f80\u53f3\u5faa\u73af\u79fb\u52a8 $k$ \u5355\u4f4d\u3002\n\n- `3 x`\uff1a\u6c42\u51fa $x$ \u5230\u6839\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u7f16\u53f7\u3002\n\n\u4e0d\u4fdd\u8bc1 $k$ \u662f\u6b63\u6570\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq 10^5$\n\n### \u9898\u89e3\n\n\u8fd8\u884c\u5427\uff0c\u5c31\u662f\u7ec6\u8282\u6709\u70b9\u591a\u3002\n\n\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u8282\u70b9 $x$ \u7684\u987a\u4f4d\u4e3a\uff1a\u5c06\u8fd9\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\u4f9d\u6b21\u62ff\u51fa\u6765\uff0c\u8fd9\u4e2a $x$ \u6240\u5728\u7684\u4f4d\u7f6e\u51cf $1$\uff0c\u6bd4\u5982\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF960D/3753965d34e08b83256fa92db7096f66de1db941.png)\n\n$12$ \u7684\u987a\u4f4d\u4e3a $4$\uff0c\u56e0\u4e3a\u5c06\u8fd9\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\u62ff\u51fa\u6765\u4e4b\u540e $12$ \u6392\u7b2c\u4e94\u4e2a\uff0c\u51cf\u53bb $1$ \u5373\u4e3a $4$\u3002\n\n\u5f88\u660e\u663e\uff0c\u5728\u6ca1\u6709\u4efb\u4f55\u4fee\u6539\u7684\u65f6\u5019 $x$ \u7684\u987a\u4f4d\u4e3a $x-2^k$\uff0c\u5176\u4e2d $2^k\\leq x<2^{k+1}$\uff0c\u6709\u4e86\u8fd9\u4e2a\u6982\u5ff5\u4e4b\u540e\u5c31\u5f88\u65b9\u4fbf\u7406\u89e3\u4e86\u3002\n\n\u5bf9\u4e8e $1$ \u64cd\u4f5c\u800c\u8a00\uff0c\u5b9e\u9645\u4e0a\u662f\u5c06\u8fd9\u4e00\u5c42\u5185\u6240\u6709\u8282\u70b9\u7684\u987a\u4f4d\u589e\u52a0 $k$\u3002\u5bf9\u4e8e $2$ \u64cd\u4f5c\u800c\u8a00\uff0c\u662f\u5c06\u8fd9\u4e00\u5c42\u5185\u6240\u6709\u8282\u70b9\u987a\u4f4d\u589e\u52a0 $1$\uff0c\u4e0b\u4e00\u5c42\u5185\u6240\u6709\u8282\u70b9\u987a\u4f4d\u589e\u52a0 $2$\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u4e1c\u897f\u8868\u793a\u8fd9\u4e00\u5c42\u5185\u6bcf\u4e2a\u70b9\u7684\u5b9e\u9645\u987a\u4f4d\u76f8\u8f83\u4e8e\u6ca1\u4fee\u6539\u65f6\u5019\u7684\u987a\u4f4d\u589e\u52a0\u4e86\u591a\u5c11\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u5728\u987a\u4f4d\u548c\u5b9e\u9645\u7684\u4f4d\u7f6e\u4e4b\u95f4\u8f6c\u6362\u3002\n\n\u5bf9\u4e8e $3$ \u64cd\u4f5c\u6765\u8bf4\uff0c\u987a\u4f4d\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff1a$x$ \u7684\u7236\u4eb2\u7684\u987a\u4f4d\u4e3a $x$ \u7684\u987a\u4f4d\u9664\u4ee5 $2$ \u4e0b\u53d6\u6574\u3002\u4e8e\u662f\uff0c\u5bf9\u4e8e\u6240\u9700\u8981\u8be2\u95ee\u7684\u8282\u70b9 $x$ \u6765\u8bf4\uff0c\u6c42\u51fa\u5b83\u7684\u987a\u4f4d\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u518d\u7528\u987a\u4f4d\u8fd8\u539f\u4f1a\u771f\u6b63\u7684\u8282\u70b9\u5c31\u597d\u4e86\u3002\n\n\u7528\u4f4d\u8fd0\u7b97\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u6ce8\u610f\u7684\u5730\u65b9\u5c31\u662f**\u4e00\u5b9a\u662f `1ll<<d` \u800c\u4e0d\u662f `1<<d`\uff01**\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\nconst ll MAXN=2e5+51;\nll n,op,x,kk,d;\nll rot[64];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline void rotate(ll d,ll kk)\n{\n\twhile(d!=63)\n\t{\n\t\trot[d]=(rot[d]+kk)&((1ll<<d)-1),d++,kk<<=1;\n\t}\n}\ninline void query(ll d,ll x)\n{\n\tx=((x+rot[d])&((1ll<<d)-1))+(1ll<<d);\n\twhile(d)\n\t{\n\t\tprintf(\"%lld \",((x-rot[d])&((1ll<<d)-1))+(1ll<<d)),x>>=1,d--;\n\t}\n\tputs(\"1\");\n}\nint main()\n{\n\tn=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\top=read(),x=read(),d=63-__builtin_clzll(x);\n\t\tif(op==1)\n\t\t{\n\t\t\tkk=(read()&((1ll<<d)-1)+(1ll<<d))&((1ll<<d)-1);\n\t\t\trot[d]=(rot[d]+kk)&((1ll<<d)-1);\n\t\t}\n\t\tif(op==2)\n\t\t{\n\t\t\tkk=(read()&((1ll<<d)-1)+(1ll<<d))&((1ll<<d)-1),rotate(d,kk);\n\t\t}\n\t\tif(op==3)\n\t\t{\n\t\t\tquery(d,x);\n\t\t}\n\t}\n}\n```",
        "postTime": 1605748825,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF960D \u3010Full Binary Tree Queries\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u4e00\u5e74\u524d\u7684\u4e00\u573adiv 1+2\uff0c\u5f53\u65f6\u601d\u7ef4\u80fd\u529b\u6bd4\u8f83\u5dee\u60f3\u9519\u4e86\u8fd8\u4e0d\u77e5\u9053\uff0c\u6700\u540e\u679c\u7136\u7ffb\u8f66\u4e86\u3002\n\n\u73b0\u5728\u770b\u770b\u5c31\u662f\u4e00\u9053\u4e0d\u592a\u96be\u7684\u9898\uff0c\u56e0\u4e3a\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u5bf9\u6574\u4e2a\u4e00\u5c42\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u4e0d\u96be\u53d1\u73b0\u5176\u5b9e\u53ea\u9700\u8bb0\u5f55\u4e00\u4e2a\u6570\u7ec4d[i]\u8868\u793a\u7b2ci\u5c42\u6574\u4f53\u53f3\u79fb\u4e86d[i]\u4f4d\u3002\u5176\u4e2dd[i]\u8981\u5bf92^(i-1)\uff0c\u5373\u7b2ci\u5c42\u7684\u8282\u70b9\u6570\u53d6\u6a21\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u76f4\u63a5\u4fee\u6539d[i]\uff1b\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u65cb\u8f6c\u5b50\u6811\u7b49\u4e8e\u628a\u4e0b\u4e00\u5c42\u65cb\u8f6c2k\u4e2a\u4f4d\u7f6e\uff0c\u76f4\u63a5\u5411\u4e0b\u9012\u5f52\uff0c\u4e00\u5171\u53ea\u670963\u5c42\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8d85\u65f6\u3002\u5bf9\u4e8e\u64cd\u4f5c3\uff0c\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u51fd\u6570pos\uff0c\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u5728\u6b64\u884c\u4ece\u5de6\u5411\u53f3\u7b2c\u51e0\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u6839\u636ed[i]\u4e5f\u4e0d\u96be\u8ba1\u7b97\u3002\u8d70\u7684\u65f6\u5019\u6ce8\u610f\u6309\u7167d[i]\u504f\u79fb\u5373\u53ef\uff0c\u5177\u4f53\u7ec6\u8282\u89c1code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll c[80],d[80];\nll getdep(ll x)\n{\n\tll tmp=1,cnt=0;\n\twhile(tmp<=x)tmp*=2,cnt++;\n\treturn cnt;\n}\nll getpos(ll x)\n{\n\tll tmp=1,cnt=0;\n\twhile(tmp<=x)tmp*=2,cnt++;\n\tll pos=x-tmp/2;\n\treturn (pos+d[cnt])%c[cnt];\n}\nint main()\n{\n\tc[1]=1;for(int i=2;i<=63;i++)c[i]=2*c[i-1];\n\tint T;scanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tint op;ll x,k,dep,pos;\n\t\tscanf(\"%d%lld\",&op,&x);\n\t\tif(op==1)\n\t\t{\n\t\t\tscanf(\"%lld\",&k);\n\t\t\tdep=getdep(x),k%=c[dep];\n\t\t\td[dep]=(d[dep]+k+c[dep])%c[dep];\n\t\t}\n\t\telse if(op==2)\n\t\t{\n\t\t\tscanf(\"%lld\",&k);\n\t\t\tdep=getdep(x),k%=c[dep];\n\t\t\twhile(dep<=62)d[dep]=(d[dep]+k+c[dep])%c[dep],k=k*2%c[++dep];\n\t\t}\n\t\telse{\n\t\t\tdep=getdep(x),pos=getpos(x);\n\t\t\twhile(dep>=1)\n\t\t\t{\n\t\t\t\tll tmp=(pos-d[dep]+c[dep])%c[dep];\n\t\t\t\tprintf(\"%lld \",c[dep]+tmp);\n\t\t\t\tdep--,pos=pos/2;\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1551701276,
        "uid": 3525,
        "name": "hfctf0210",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF960D \u3010Full Binary Tree Queries\u3011"
    },
    {
        "content": "\u4ee5\u4e0b\u505a\u6cd5\u6e10\u8fdb\u590d\u6742\u5ea6\u6700\u4f4e\uff0c\u4e3a `log_2` \u5916\u7ebf\u6027\u3002\u662f\u8fc4\u4eca\u4e3a\u6b62\u5168\u7ad9\u6700\u5feb\u7684\u505a\u6cd5\u3002\n\n\u6b63\u6587\uff1a\n\n\u6bd4\u8f83\u9ebb\u70e6\u7684\u627e\u6027\u8d28+\u6a21\u62df\u9898\uff0c\u4f46\u8fd8\u662f\u79d2\u4e86\u3002~~\u4f46\u662f\u7531\u4e8e\u5404\u79cd\u7ec6\u8282\u5b9e\u73b0\u4e0a\u82b1\u4e86\u597d\u4e45~~\n\n\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u5c31\u662f\uff0c\u5bf9\u64cd\u4f5c $(1)$ \u7684\u6bcf\u4e00\u5c42\u6253\u53cd\u5411\u7684\u6807\u8bb0\uff0c\u7136\u540e\u5411\u4e0a\u8df3\u7684\u65f6\u5019\u9047\u5230\u8fd9\u4e00\u5c42\u53cd\u5411\u8df3\u4e00\u4e0b\uff0c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6253\u53e6\u4e00\u79cd\u6b63\u5411\u7684\u6807\u8bb0\u5c31\u597d\u4e86\u3002\u5199\u4e86\u534a\u5929\u624d\u5199\u51fa\u6765\uff0c\u8fd9\u91cc\u8bf4\u51e0\u4e2a\u5c0f\u7ec6\u8282\uff1a\n\n1\u3001\u4e24\u4e2a\u64cd\u4f5c\u7684\u6807\u8bb0\u90fd\u6253\u5728\u5f53\u524d\u5c42\u800c\u4e0d\u662f\u4e0a\u4e00\u5c42\u3002\u4f46\u662f\u4e24\u4e2a\u6807\u8bb0\u91ca\u653e\u7684\u65f6\u523b\u4e0d\u540c\u3002\u7b2c\u4e8c\u4e2a\u6807\u8bb0\u6bcf\u6b21\u8981\u5728\u8df3\u4e4b\u524d\u4e0b\u4f20\u5f53\u524d\u5c42\u7684\uff0c\u800c\u7b2c\u4e00\u4e2a\u6807\u8bb0\u8981\u5728\u8df3\u4e4b\u540e\u4e0b\u4f20\u4e0b\u4e00\u5c42\u7684\u3002\u539f\u56e0\u662f\u7b2c\u4e00\u4e2a\u6807\u8bb0\u662f\u6574\u4f53\u6709\u6548\u7684\uff0c\u7b2c\u4e8c\u4e2a\u6807\u8bb0\u662f\u6682\u65f6\u6709\u6548\u7684\u3002\n\n2\u3001\u7b2c\u4e00\u4e2a\u6807\u8bb0\u5728\u8f93\u51fa\u4e4b\u540e\u8981\u6e05\u9664\u3002\n\n3\u3001\u6ce8\u610f\u5230\u64cd\u4f5c $(1)$ \u6807\u8bb0\u53cd\u5411\u662f\u56e0\u4e3a\u8df3\u7684\u65f6\u5019\u8981\u8d70\u76f8\u5bf9\u4f4d\u79fb\u3002\u4f46\u662f\u5982\u679c\u4e00\u5f00\u59cb\u8d77\u70b9\u65f6\u5b58\u5728\u6807\u8bb0\uff0c\u8fd9\u4e2a\u6807\u8bb0\u7684\u4f5c\u7528\u5e94\u8be5\u662f\u6b63\u5411\u7684\u3002\u5224\u4e00\u4e0b\u5373\u53ef\u3002\n\n4\u3001`<cmath> log2()` \u8d3c\u6162\uff0c\u751a\u81f3\u6bd4\u624b\u5199\u7684\u8fd8\u8981\u6162\u2026\n\n\n```cpp\nint T ;\nll buc1[70] ;\nll buc2[70] ;\n\nil int i_lg2(ll n){\n    int m = 0 ;\n    if (n >> 32) m |= 32, n >>= 32 ;\n    if (n >> 16) m |= 16, n >>= 16 ;\n    if (n >> 8) m |= 8, n >>= 8 ;\n    if (n >> 4) m |= 4, n >>= 4 ;\n    if (n >> 2) m |= 2, n >>= 2 ;\n    if (n >> 1) m |= 1, n >>= 1 ;\n    return m ;\n}\n\nint main(){\n    qr(T) ; int p ;\n    ll x, y, z, s, t, yf ;\n    while (T --){\n        qr(x), qr(y) ;\n        if (x == 1)\n            y = i_lg2(y), qr(z), buc1[y] -= z ;\n        else if (x == 2)\n            y = i_lg2(y), qr(z), buc2[y] += z ;\n        else {\n            qw(y, ' ') ;\n            p = i_lg2(y) ;\n            z = 1ll << p ;\n            s = (z << 1) - 1 ;\n            t = - buc1[p] & (z - 1) ;\n            if (t < 0)\n                t = (t + z) & (z - 1) ;\n            x = y + t ;\n            if (x > s)\n                x = (x & s) + z ;\n            y = x ;\n            while (p > 0){\n                s = (z << 1) - 1 ;\n\t\t\t\tt = buc2[p] & (z - 1) ;\n                if (t < 0)\n                    t = (t + z) & (z - 1) ;\n                x = y + t ;\n                if (x > s)\n                    x = (x & s) + z ;\n                y = x ;\n                \n                -- p ;\n                s = z - 1 ;\n                z = z >> 1 ;\n                y = y >> 1 ;\n                t = buc1[p] & (z - 1) ;\n                if (t < 0)\n                    t = (t + z) & (z - 1) ;\n                x = y + t ;\n                if (x > s)\n                    x = (x & s) + z ;\n                yf = y ; y = x ;\n                qw(y, ' '), y = yf ;\n            }\n            putchar('\\n') ;\n        }\n    }\n}\n```\n\n# ",
        "postTime": 1591661469,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u300c\u627e\u6027\u8d28+\u6a21\u62df\u300d CF960D Full Binary Tree Queries"
    },
    {
        "content": "\u5148\u6784\u9020\u51fa\u6765\u4e00\u4e2a\u5c42\u6b21\u6570\u91cf\u4e3a $60$ \u7684\u4e00\u4e2a\u865a\u6ee1\u4e8c\u53c9\u6811\u3002\u89c2\u5bdf\u5230\u5982\u679c\u5bf9\u6bcf\u4e00\u4e2a\u5c42\u7ef4\u62a4\u201d\u65cb\u8f6c\u5ea6\u6570\u201c\uff0c\u6240\u6709\u4fee\u6539\u64cd\u4f5c\u4ec5\u4ec5\u4f1a\u4fee\u6539\u8fd9\u4e9b\u65cb\u8f6c\u6b21\u6570\u3002\n\n\u7136\u540e\u5c31\u76f4\u63a5\u662f\u5927\u7ec6\u8282\u6a21\u62df\u4e86\uff1a\n\n - \u8f93\u5165\u9700\u8981\u628a\uff08\u65cb\u8f6c\u8fc7\u7684\u503c\uff09\u8f6c\u6362\u6210\uff08\u771f\u5b9e\u4f4d\u7f6e\uff09\u3002\n - \u8f93\u51fa\u9700\u8981\u628a\uff08\u771f\u5b9e\u4f4d\u7f6e\uff09\u8f6c\u6362\u6210\uff08\u65cb\u8f6c\u8fc7\u7684\u7f6e\uff09\u3002\n - \u8f93\u5165\u65cb\u8f6c\u5ea6\u9700\u8981\u5bf9\u5f53\u524d\u5c42\u5927\u5c0f\u53d6\u6a21\uff0c\u5e76\u4e14\u8f6c\u6362\u6210\u6b63\u6570\u3002\n - \u7528 `63-__builtin_clzll(x)` \u627e\u5230 `x` \u6240\u5728\u7684\u5c42\u3002\n\n\u8d5b\u65f6\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define fi first\n#define se second\n#define pb push_back\n \n#define ll long long\n#define pii pair<int, int>\n//#define int ll\nconst int MOD = 1000000007;\n\nll b[62];\nll sh[62];\n\nvoid pr(ll node) {\n    int d = 63 - __builtin_clzll(node);\n    cout << (node - sh[d]) % b[d] + b[d] << ' ';\n    if(d) pr(node/2);\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    b[0] = 1;\n    rep1(i, 61) b[i] = 1ll<<i;\n    int q; cin >> q;\n    while(q--) {\n        int t; ll x; cin >> t >> x;\n        int d = 63 - __builtin_clzll(x);\n        x = b[d] + (x + sh[d]) % b[d];\n        if(t == 1) { \n            ll k;\n            cin >> k; \n            k = ((k % b[d]) + b[d]) % b[d]; \n            sh[d] = (sh[d] + k) % b[d];\n        }\n        if(t == 2) {\n            ll k;\n            cin >> k; \n            k = ((k % b[d]) + b[d]) % b[d]; \n            iter(dd, d, 62) {\n                sh[dd] = (sh[dd] + k) % b[dd];\n                k *= 2;\n            }\n        }\n        if(t == 3) {\n            //cout << x << endl;\n            pr(x);\n            cout << endl;\n        }\n    }\n}\n\n```",
        "postTime": 1601693572,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "10/2 \u6a21\u62df\u8d5b \u9898\u89e3 CF960D"
    }
]