[
    {
        "content": "\u4e8c\u5408\u4e00\u50bb\u903c\u9898\u3002\u6ca1\u770b\u5230\u8fb9\u6743\u4e00\u5b9a\u4e3a\u6b63\u6570\uff0c\u4ee5\u4e3a\u6709 0 \u8fb9\u641e max \u90e8\u5206\u641e\u4e86\u534a\u5929...\n\n\u4e8b\u5b9e\u4e0a min \u90e8\u5206\u611f\u89c9\u5c31\u662f[\u8fd9\u9898](https://www.luogu.com.cn/problem/P1875)\u6539\u4e00\u6539\uff0c\u662f\u4e00\u4e2a dij \u57fa\u7840\u9898\u3002\n\n\u5177\u4f53\u8bf4\u5c31\u662f\u6211\u4eec\u8bbe $f(i)$ \u662f\u4e00\u53ea\u602a\u7269 $i$ \u80fd\u5f97\u5230\u7684\u6700\u5c11\u94bb\u77f3\u6570\u91cf\uff0c\u7136\u540e\u8f6c\u79fb\u5c31\u662f\u679a\u4e3e\u5b83\u7684\u62c6\u5206\u65b9\u5f0f\uff0c\u8bbe\u5f97\u5230\u602a\u7269\u96c6\u5408 $S$ \u548c $n$ \u9897\u94bb\u77f3\uff0c\u90a3\u4e48\u53d6 $n+\\sum_{j\\in S}f(j)$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u53ea\u8981\u5012\u7740\u8dd1\u6700\u77ed\u8def\u5c31\u884c\uff0c\u5c31\u662f\u6bcf\u6b21\u786e\u5b9a\u4e00\u4e2a\u602a\u7269\u7684 $f$ \u4ee5\u540e\uff0c\u679a\u4e3e\u6240\u6709\u62c6\u5206\u65b9\u5f0f\u5305\u542b\u5b83\u7684\u62c6\u5206\uff0c\u5982\u679c\u5b83\u662f\u8be5\u62c6\u5206\u6700\u540e\u4e00\u4e2a\u786e\u5b9a $f$ \u7684\u602a\u7269\uff0c\u90a3\u4e48\u8fd9\u4e2a\u62c6\u5206\u7684 $start$\uff08\u5c31\u662f\u8f93\u5165\u91cc\u6bcf\u7ec4\u62c6\u5206\u7684\u7b2c\u4e00\u4e2a\u6570\uff09\u5c31\u53ef\u4ee5\u88ab\u66f4\u65b0\u4e86\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u80fd\u987a\u4fbf\u8dd1\u51fa -1 \u7684\u4fe1\u606f\u3002\n\n\u7136\u540e max \u5c31\u5f88\u50bb\u903c\u4e86\uff0c\u6211\u4eec\u5148\u628a\u90a3\u4e9b\u4e3a -1 \u7684\u70b9\u5ffd\u7565\u6389\u6765\u770b\u3002\u7136\u540e\u6bcf\u79cd\u62c6\u5206\u65b9\u5f0f\u90fd\u81f3\u5c11\u5f97\u5230\u4e00\u9897\u94bb\u77f3\uff0c\u6240\u4ee5\u5c31\u5f88\u6709\u610f\u601d\uff0c\u5c31\u662f\u4f60\u4e0d\u80fd\u51fa\u73b0\u73af\uff0c\u5177\u4f53\u5730\u5c31\u662f\u5982\u679c $a$ \u62c6\u5230\u6700\u540e\u53c8\u6765\u4e00\u53ea $a$ \u90a3\u5c31 -2 \u4e86\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u4f60\u53ef\u4ee5\u7f29\u70b9\u5728 dag \u4e0a\u8dd1\u4e00\u4e2a dp\u3002\u6211\u672c\u6765\u8fd9\u6837\u5199\u7684\u7ed3\u679c\u6700\u540e\u5f03\u4e86\uff08\uff09\n\n\u8003\u8651\u76f4\u63a5\u8bb0\u5fc6\u5316\uff0c\u641c\u5230\u8fd8\u5728 dfs \u6808\u4e2d\u7684\u70b9\u8bf4\u660e -2\uff0c\u641c\u5230\u5df2\u7ecf\u660e\u786e\u7b54\u6848\u662f -2 \u7684\u70b9\uff0c\u4e5f\u53ef\u4ee5\u786e\u5b9a\u7b54\u6848\u662f -2\u3002\u5426\u5219\uff0c\u679a\u4e3e\u6240\u6709\u62c6\u5206\u65b9\u5f0f\u7136\u540e\u76f4\u63a5\u8f6c\u79fb\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define Max(a,b) (a>b?a:b)\n#define Min(a,b) (a<b?a:b)\n#define next Cry_For_theMoon\n#define il inline\n#define pb(x) push_back(x)\n#define is(x) insert(x)\n#define sit set<int>::iterator\n#define mapit map<int,int>::iterator\n#define pi pair<int,int>\n#define ppi pair<int,pi>\n#define pp pair<pi,pi>\n#define fr first\n#define se second\n#define vit vector<int>::iterator\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef double db;\nusing namespace std;\nconst int MAXN=1e5+10,INF=1e9,LIM=3.14e8;\nint m,n,l[MAXN],st[MAXN],cnt[MAXN],ins[MAXN];\nmap<int,int>occ[MAXN];\nset<int>s1[MAXN],s2[MAXN];\nint ans[MAXN][2];\nvector<int>e1[MAXN],e2[MAXN],from[MAXN];\nstruct Node{\n    int u,dis;\n    bool operator<(const Node& n2)const{return dis>n2.dis;}\n};\npriority_queue<Node>q;\nint vis[MAXN],dis[MAXN];\nqueue<int>qu;\nvoid output();\nint dfs(int u){\n    vis[u]=1;\n    if(ans[u][0]==-1)return ans[u][1]=ans[u][0]=-1;\n    ins[u]=1;\n    for(int idx:from[u]){\n        //\u8ba1\u5212idx\n        int ret=0,val,flag1=1,flag2=1;\n        for(pi p:occ[idx]){\n            int v=p.fr,w=p.se; //w\u4e2av\n            if(ans[v][0]==-1){flag1=0;continue;}\n            if(ins[v]){flag2=0;continue;}\n            val=vis[v]?ans[v][1]:dfs(v);\n            if(val==-2){flag2=0;continue;}\n            ret=Min(LIM,ret+1ll*w*val);\n        }\n        if(!flag1)continue;\n        if(!flag2){ins[u]=0;return ans[u][1]=-2;}\n        ret=min(LIM,ret+cnt[idx]);\n        ans[u][1]=max(ans[u][1],ret);\n    }\n    ins[u]=0;\n    return ans[u][1];\n}\nint main(){\n    scanf(\"%d%d\",&m,&n);\n    rep(i,1,m){\n        int tmp;scanf(\"%d%d\",&st[i],&l[i]);\n        from[st[i]].pb(i);\n        rep(j,1,l[i]){\n            scanf(\"%d\",&tmp);\n            if(tmp==-1)cnt[i]++;\n            else{\n                occ[i][tmp]++;\n                s1[tmp].is(i);\n            }\n        }\n    }\n    //calculate min\n    rep(i,0,n)dis[i]=INF;\n    rep(i,1,m){\n        if(occ[i].size()==0){\n            dis[st[i]]=min(dis[st[i]],cnt[i]);\n            q.push(((Node){st[i],dis[st[i]]}));\n        }\n    }\n    while(q.size()){\n        Node tmp=q.top();q.pop();\n        int u=tmp.u;if(vis[u])continue;\n        vis[u]=1;\n        for(int idx:s1[u]){\n            int v=st[idx],w=cnt[idx];\n            s2[idx].is(u);\n            if(s2[idx].size()==occ[idx].size()){\n                int sum=0;\n                for(auto p:occ[idx]){\n                    sum=min((ll)LIM,sum+1ll*p.se*dis[p.fr]);\n                }\n                sum=min(LIM,sum+w);\n                if(dis[v]>sum){\n                    dis[v]=sum;\n                    q.push(((Node){v,dis[v]}));\n                }\n            }\n        }\n    }\n    rep(i,1,n)if(dis[i]==INF)ans[i][0]=-1;else ans[i][0]=dis[i];\n    //calculate max\n    memset(vis,0,sizeof vis);\n    rep(i,1,n){\n        if(vis[i])continue;\n        dfs(i);\n    }\n    output();\n    return 0;\n}\nvoid output(){\n    rep(i,1,n){\n        if(ans[i][0]==-1)printf(\"-1 -1\\n\");\n        else printf(\"%d %d\\n\",ans[i][0],ans[i][1]);\n    }\n}\n```",
        "postTime": 1642548155,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u3010CF325C\u3011Monsters and Diamonds"
    }
]