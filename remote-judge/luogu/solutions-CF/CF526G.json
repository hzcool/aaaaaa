[
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u65e0\u6839\u6811\uff0c\u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\u3002\n\n\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa $x,y$\uff0c\u4f60\u9700\u8981\u9009\u62e9 $y$ \u6761\u6811\u4e0a\u7684\u8def\u5f84\uff0c\u4f7f\u8fd9\u4e9b\u8def\u5f84\u5f62\u6210\u4e00\u4e2a\u5305\u542b $x$ \u7684\u8fde\u901a\u5757\uff0c\u4e14\u8fde\u901a\u5757\u4e2d\u5305\u542b\u7684\u8fb9\u6743\u548c\u6700\u5927\u3002\n\n\u5f3a\u5236\u5728\u7ebf\u3002\n\n- $1 \\le n, q \\le {10}^5$\u3002\n\n### \u9898\u89e3\n\n\u53ef\u4ee5\u8bc1\u660e\uff1a\u4f7f\u7528 $k$ \u6761\u8def\u5f84\u5c31\u53ef\u4ee5\u8986\u76d6\u4e00\u68f5\u6709 $2 k$ \u7684\u53f6\u5b50\u7684\u6811\u3002\n\n\u5148\u4ee5\u4efb\u610f\u65b9\u5f0f\u5339\u914d\u53f6\u5b50\u3002\u5982\u679c\u6709\u4e24\u6761\u8def\u5f84\u4e0d\u76f8\u4ea4\uff0c\u53ef\u4ee5\u8c03\u6574\u6210\u76f8\u4ea4\u7684\u60c5\u51b5\u3002  \n\u4e0d\u65ad\u8c03\u6574\u5c31\u53ef\u4ee5\u8ba9\u4efb\u610f\u4e24\u6761\u8def\u5f84\u90fd\u76f8\u4ea4\uff0c\u4e8e\u662f\u663e\u7136\u8986\u76d6\u4e86\u6574\u68f5\u6811\u3002  \n\uff08\u8bc1\u660e\u4e0d\u4e25\u8c28\uff0c\u56e0\u4e3a\u6ca1\u6709\u8bf4\u660e\u8c03\u6574\u80fd\u5728\u6709\u9650\u6b65\u5185\u7ed3\u675f\uff0c\u4e0d\u8fc7\u8fd9\u4e0d\u91cd\u8981\uff09\n\n\u6240\u4ee5\u5f53\u8be2\u95ee $y$ \u7684\u65f6\u5019\uff0c\u5c31\u662f\u8981\u5728\u539f\u6811\u4e2d\u9009\u53d6\u4e0d\u8d85\u8fc7 $2 y$ \u4e2a\u53f6\u5b50\uff0c\u8ba9\u8fd9\u4e9b\u53f6\u5b50\u7ec4\u6210\u7684\u6781\u5c0f\u8fde\u901a\u5757\u7684\u8fb9\u6743\u548c\u5c3d\u91cf\u5927\u3002\n\n\u518d\u8003\u8651\uff1a\u6bcf\u6b21\u8be2\u95ee\u4e2d\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u76f4\u5f84\u7684\u4e24\u7aef\u4e2d\u81f3\u5c11\u6709\u4e00\u7aef\u88ab\u9009\u53d6\u3002  \n\u90a3\u4e48\u6211\u4eec\u4ee5\u4e24\u4e2a\u76f4\u5f84\u7aef\u70b9\u4e3a\u6839\uff0c\u6bcf\u6b21\u8be2\u95ee\u5728\u4e24\u68f5\u6811\u4e2d\u5206\u522b\u67e5\u8be2\u5373\u53ef\u3002\n\n\u90a3\u4e48\uff0c\u73b0\u5728\u6839\u662f\u4e00\u4e2a\u53f6\u5b50\uff08\u76f4\u5f84\u7aef\u70b9\u5fc5\u7136\u662f\u53f6\u5b50\uff09\uff0c\u4e14\u6839\u5fc5\u9009\u3002  \n\u4e5f\u5c31\u662f\u8bf4\uff0c\u9700\u8981\u9009\u5176\u5b83\u81f3\u591a $2 y - 1$ \u4e2a\u53f6\u5b50\uff0c\u6253\u901a\u4ed6\u4eec\u5230\u6839\u7684\u94fe\uff0c\u5e76\u4e14\u6700\u5927\u5316\u8fb9\u6743\u548c\u3002\n\n\u8003\u8651\u5e26\u8fb9\u6743\u7684\u957f\u94fe\u5256\u5206\uff0c\u53d1\u73b0\u8fd9\u548c\u9009\u53d6\u8fc7\u7a0b\u662f\u7b49\u4ef7\u7684\uff0c\u4e5f\u5c31\u662f\u8d2a\u5fc3\u5730\u9009\u53d6\u524d $2 y - 1$ \u4e2a\u6700\u957f\u94fe\u5373\u53ef\u3002\n\n\u4f46\u662f\u9009\u5b8c\u4e4b\u540e\u4e0d\u4e00\u5b9a\u7ecf\u8fc7 $x$\uff0c\u6240\u4ee5\u9700\u8981\u505a\u4e00\u4e0b\u8c03\u6574\u3002\n\n\u9996\u5148\u6253\u901a $x$ \u5b50\u6811\u4e2d\u6700\u6df1\u7684\u70b9\u5230\u6839\u7684\u8def\u5f84\uff0c\u7136\u540e\u9700\u8981\u53bb\u6389\u53e6\u4e00\u4e2a\u53f6\u5b50\uff0c\u4f7f\u5f97\u51cf\u5c0f\u91cf\u5c3d\u91cf\u5c0f\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8981\u4e0d\u7136\u662f\u5220\u6389\u7b2c $2 y - 1$ \u4e2a\u6700\u957f\u94fe\uff0c\u4e5f\u5c31\u662f\u4ec5\u9009\u53d6\u524d $2 y - 2$ \u4e2a\u6700\u957f\u94fe\uff0c\u7136\u540e\u628a $x$ \u63a5\u4e0a\u3002\n\n\u8981\u4e0d\u7136\u5c31\u662f\u5728\u9009\u53d6\u524d $2 y - 1$ \u4e2a\u6700\u957f\u94fe\u7684\u57fa\u7840\u4e0a\uff0c\u5148\u628a $x$ \u63a5\u4e0a\uff0c\u7136\u540e\u5220\u53bb\u7b2c\u4e00\u4e2a\u78b0\u5230\u7684\u70b9\u7684\u5176\u5b83\u5b50\u6811\u3002\n\n\u6700\u4f18\u89e3\uff0c\u4e00\u5b9a\u7b26\u5408\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff0c\u4e14\u4e0d\u4f1a\u7edf\u8ba1\u5230\u9519\u8bef\u7684\u60c5\u51b5\uff08\u53f6\u5b50\u6570\u90fd\u4e0d\u8d85\u8fc7 $2 y - 1$\uff09\uff0c\u6240\u4ee5\u662f\u6b63\u786e\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O ((n + q) \\log n)$\uff0c[\u8bc4\u6d4b\u94fe\u63a5](https://codeforces.com/contest/526/submission/73419392)\u3002",
        "postTime": 1584374426,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF526G \u3010Spiders Evil Plan\u3011"
    },
    {
        "content": "> [CF526G Spiders Evil Plan](https://codeforces.com/contest/526/problem/G)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u65e0\u6839\u6811\uff0c\u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\u3002\n- \u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa $x,y$\uff0c\u4f60\u9700\u8981\u9009\u62e9 $y$ \u6761\u6811\u4e0a\u7684\u8def\u5f84\uff0c\u4f7f\u8fd9\u4e9b\u8def\u5f84\u5f62\u6210\u4e00\u4e2a\u5305\u542b $x$ \u7684\u8fde\u901a\u5757\uff0c\u4e14\u8fde\u901a\u5757\u4e2d\u5305\u542b\u7684\u8fb9\u6743\u548c\u6700\u5927\u3002\n- $n, q \\le 10^5$\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n## \u9898\u89e3\n\n\u8bbe\u53f6\u5b50\u4e2a\u6570\u4e3a $k$\u3002\n\n\u9996\u5148\uff0c\u82e5 $2y \\ge k$\uff0c\u5219 $y$ \u6761\u8def\u5f84\u53ef\u4ee5\u76f4\u63a5\u8986\u76d6\u6574\u68f5\u6811\u3002\n\n\u5426\u5219\uff0c\u6bcf\u6761\u8def\u5f84\u7684\u4e24\u7aef\u4e00\u5b9a\u662f\u4e24\u4e2a\u53f6\u5b50\uff0c\u5373\u4e00\u5171\u8981\u9009\u62e9 $2y$ \u4e2a\u53f6\u5b50\u3002\n\n\u8003\u8651\u4ee5 $x$ \u4e3a\u6839\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u9009\u62e9\u53f6\u5b50\u5462\uff1f\n\n\u6ce8\u610f\u5230\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9 $x$ \u7684\u5b50\u6811\u4e2d\u6709\u53f6\u5b50\u88ab\u9009\u4e86\uff0c\u90a3\u4e48 $x$ \u6240\u5728\u957f\u94fe\u5305\u542b\u7684\u53f6\u5b50\u4e00\u5b9a\u4e5f\u88ab\u9009\u62e9\u4e86\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\uff0c\u5b83\u7684\u8d21\u732e\u5b9e\u9645\u4e0a\u7b49\u4e8e\u5b83\u5230\u5b83\u6240\u5728\u7684\u957f\u94fe\u7684\u9876\u70b9\u7684\u7236\u4eb2\u7684\u8ddd\u79bb\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6309\u8d21\u732e\u4ece\u5927\u5230\u5c0f\u9009\u62e9\u53f6\u5b50\u4e86\u3002\n\n\u4f46\u5982\u679c\u6bcf\u6b21\u8be2\u95ee\u90fd\u4ee5 $x$ \u4e3a\u6839\u8fdb\u884c\u4e00\u6b21 $\\mathcal O(n)$ \u7684\u957f\u94fe\u5256\u5206\uff0c\u590d\u6742\u5ea6\u663e\u7136\u592a\u9ad8\u3002\n\n\u4f46\u53c8\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5728\u6811\u4e0a\u7ecf\u8fc7\u70b9 $x$ \u7684\u6700\u957f\u94fe\u4e00\u5b9a\u7ecf\u8fc7\u76f4\u5f84\u7684\u67d0\u4e00\u7aef\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u4ee5\u76f4\u5f84\u4e24\u7aef\u7684\u4e24\u4e2a\u70b9\u4e3a\u6839\u5206\u522b\u505a\u4e00\u6b21\u5c31\u597d\u4e86\u3002\u7531\u4e8e\u76f4\u5f84\u4e24\u7aef\u4e00\u5b9a\u662f\u53f6\u5b50\uff0c\u56e0\u6b64\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u5e94\u8be5\u9009\u62e9 $2y-1$ \u4e2a\u53f6\u5b50\u3002\n\n\u4f46\u8fd9\u4e48\u505a\u6709\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u9009\u62e9\u7684\u53f6\u5b50\u7ec4\u6210\u7684\u8fde\u901a\u5757\u5e76\u4e0d\u5305\u62ec $x$ \u600e\u4e48\u529e\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u5c06\u8d21\u732e\u6700\u5c0f\u7684\u957f\u94fe\u53bb\u6389\u5e76\u52a0\u5165 $x$ \u6240\u5728\u957f\u94fe\u3002\n2. \u662f\u627e\u5230\u79bb $x$ \u6700\u8fd1\u7684\u957f\u94fe\u5c06\u4e0b\u534a\u90e8\u5206\u66ff\u6362\u6210 $x$ \u6240\u5728\u957f\u94fe\u3002\n\n\u5bf9\u4e8e\u4e24\u79cd\u60c5\u51b5\uff0c\u90fd\u9700\u8981\u5411\u4e0a\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u5728\u8d21\u732e\u5185\u7684\u70b9\u3002\u5982\u679c\u66b4\u529b\u8df3\u957f\u94fe\uff0c\u5728\u8fb9\u6743\u90fd\u4e3a $1$ \u7684\u60c5\u51b5\u4e0b\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u66b4\u529b\u8df3\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\sqrt n)$\u3002\n\n\u4f46\u8fd9\u9053\u9898\u8fb9\u5e26\u6743\uff0c\u56e0\u6b64\u66b4\u529b\u8df3\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n)$\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u500d\u589e\u5f80\u4e0a\u627e\uff0c\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\log n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((n + q) \\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 1e5 + 7;\nint n, q, k, s, ans;\nvector <pi> e[N];\nstruct T {\n\tint rt, f[N][21], g[N][21], d[N], dep[N], son[N], top[N], rnk[N];\n\tint l[N], r[N], s[N], t;\n\t\n\tvoid dfs1(int x, int fa) {\n\t\tfor (pi o : e[x])\n\t\t\tif (o.fi != fa) d[o.fi] = d[x] + o.se, dfs1(o.fi, x);\n\t}\n\t\n\tvoid dfs2(int x) {\n\t\tfor (pi o : e[x])\n\t\t\tif (o.fi != f[x][0]) {\n\t\t\t\tf[o.fi][0] = x, g[o.fi][0] = o.se;\n\t\t\t\tfor (int i = 0; f[o.fi][i]; i++)\n\t\t\t\t\tf[o.fi][i+1] = f[f[o.fi][i]][i],\n\t\t\t\t\tg[o.fi][i+1] = g[o.fi][i] + g[f[o.fi][i]][i];\n\t\t\t\td[o.fi] = d[x] + o.se, dfs2(o.fi);\n\t\t\t\tif (dep[o.fi] + o.se > dep[x])\n\t\t\t\t\tdep[x] = dep[o.fi] + o.se, son[x] = o.fi;;\n\t\t\t}\n\t\tfor (pi o : e[x])\n\t\t\tif (o.fi != f[x][0] && o.fi != son[x])\n\t\t\t\ts[l[++t]=o.fi] = dep[o.fi] + o.se;\n\t}\n\t\n\tvoid getrt(int x) {\n\t\tdfs1(x, 0), rt = x;\n\t\tfor (int i = 1; i <= n; i++) if (d[i] > d[rt]) rt = i;\n\t\td[rt] = 0, dfs2(rt), s[l[++t]=rt] = dep[rt];\n\t\tsort(l + 1, l + t + 1, [&](int i, int j) { return s[i] > s[j]; });\n\t\tfor (int i = 1; i <= t; i++) r[i] = r[i-1] + s[l[i]];\n\t\tfor (int i = 1; i <= t; i++) {\n\t\t\tint x = l[i], p = x;\n\t\t\twhile (x) top[x] = p, rnk[x] = i, x = son[x];\n\t\t}\n\t}\n\t\n\tinline int plan1(int x, int y) {\n\t\tint z = dep[x];\n\t\tfor (int i = 20; ~i; i--)\n\t\t\tif (rnk[f[x][i]] >= y) z += g[x][i], x = f[x][i];\n\t\treturn r[y-1] + z + g[x][0];\n\t}\n\t\n\tinline int plan2(int x, int y) {\n\t\tint z = dep[x];\n\t\tfor (int i = 20; ~i; i--)\n\t\t\tif (rnk[f[x][i]] > y) z += g[x][i], x = f[x][i];\n\t\treturn r[y] - dep[f[x][0]] + z + g[x][0];\n\t}\n\t\n\tinline int ask(int x, int y) {\n\t\ty = 2 * y - 1;\n\t\treturn rnk[x] <= y ? r[y] : max(plan1(x, y), plan2(x, y));\n\t}\n} t[2];\n\nint main() {\n\trd(n), rd(q);\n\tfor (int i = 1, x, y, z; i < n; i++)\n\t\trd(x), rd(y), rd(z),\n\t\te[x].pb(mp(y, z)), e[y].pb(mp(x, z)), s += z;\n\tfor (int i = 1; i <= n; i++) k += e[i].size() == 1u;\n\tt[0].getrt(1), t[1].getrt(t[0].rt);\n\tfor (int i = 1, x, y; i <= q; i++)\n\t\trd(x), rd(y),\n\t\tx = (x + ans - 1) % n + 1, y = (y + ans - 1) % n + 1,\n\t\tprint(ans = 2 * y >= k ? s : max(t[0].ask(x, y), t[1].ask(x, y)));\n\treturn 0;\n}\n```",
        "postTime": 1578492594,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF526G \u3010Spiders Evil Plan\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u5355\u6b21\u8be2\u95ee\u600e\u4e48\u529e\u3002\n\n\u5982\u679c\u53ea\u6709\u4e00\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u5c31\u628a\u8be2\u95ee\u7684\u70b9$x$\u63d0\u4f5c\u6839\uff0c\u5982\u679c$x$\u7684\u5ea6\u6570\u4e0d\u4e3a$1$\uff0c\u90a3\u4e48\u9009$y$\u8def\u5f84\u7684\u6700\u4f18\u65b9\u6848\u5fc5\u7136\u53ef\u4ee5\u8f6c\u5316\u4e3a\u9009$2y$\u4e2a\u53f6\u5b50\uff0c\u7136\u540e\u6c42\u8fd9$2y$\u4e2a\u53f6\u5b50\u5230$x$\u7684\u8def\u5f84\u7684\u5e76\u7684\u957f\u5ea6\u3002\u5982\u679c$x$\u7684\u5ea6\u6570\u4e3a$1$\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u662f\u9009$2y-1$\u4e2a\uff0c\u56e0\u4e3a\u6709\u4e00\u6761\u8def\u5f84\u8981\u4ece$x$\u51fa\u53d1\u3002\n\n\u90a3\u4e48\u663e\u7136\u5c31\u53ef\u4ee5\u8d2a\u5fc3\u7684\u9009**\u5f53\u524d**\u8d21\u732e\u6700\u5927\u7684\u53f6\u5b50\u52a0\u5165\u7b54\u6848\u4e86\u3002\n\n\u90a3\u4e48\u5982\u679c\u6709\u591a\u7ec4\u8be2\u95ee\u5462\uff1f\n\n\u6bcf\u6b21\u8be2\u95ee\u90fd\u6362\u6839\u663e\u7136\u4e0d\u73b0\u5b9e\uff0c\u4f46\u53d1\u73b0\u53ea\u8981\u9009\u4e86\u81f3\u5c11\u4e00\u4e2a\u53f6\u5b50\uff0c\u5c31\u5fc5\u5b9a\u4f1a\u9009\u76f4\u5f84\u7684\u67d0\u4e00\u4e2a\u7aef\u70b9\u3002\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u4f5c\u4e3a\u6839\u6765\u8003\u8651\uff0c\u6700\u540e\u8be2\u95ee\u7684\u65f6\u5019\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u68f5\u6811\u9884\u5904\u7406\u51fa$ans_i$\u8868\u793a\u5f53\u524d\u9009\u4e86$i$\u4e2a\u53f6\u5b50\u7684\u6700\u5927\u6743\u503c\u548c\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528$DFS$\u5e8f\u7684\u7ebf\u6bb5\u6811\u6216\u8005\u662f\u957f\u94fe\u5256\u5206\u6765\u5b9e\u73b0\u3002\n\n\u7136\u540e\u8003\u8651\u4e00\u6b21\u8be2\u95ee$x,y$\u3002\u5982\u679c$ans_{2y-1}$\u4e2d\u5305\u542b\u4e86$x$\u70b9\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa$ans_{2y-1}$\u5373\u53ef\u3002\u5426\u5219\uff0c\u5c31\u9700\u8981\u5bf9$ans_{2y-1}$\u505a\u4e00\u4e9b\u6539\u53d8\u4f7f\u5f97$x$\u88ab\u5305\u542b\u8fdb\u8fde\u901a\u5757\u4e2d\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- 1.\u5c06\u6700\u540e\u52a0\u8fdb\u6765\u7684\u53f6\u5b50\uff08\u4e5f\u5c31\u662f\u6743\u503c\u6700\u5c0f\u7684\uff09\u5220\u6389\uff0c\u7136\u540e\u627e$x$\u7684\u5b50\u6811\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u52a0\u8fdb\u6765\u3002\n- 2.\u627e\u79bb$x$\u6700\u8fd1\u7684\u6709\u53f6\u5b50\u88ab\u9009\u7684\u7956\u5148\u7684\u4e00\u6761\u8def\u5f84\uff0c\u780d\u6389\u4e00\u534a\u540e\u8ddf$x$\u7684\u5b50\u6811\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u63a5\u4e0a\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u597d\u529e\uff0c\u500d\u589e\u8df3\u5230\u5230\u7b2c\u4e00\u4e2a\u88ab\u8bbf\u95ee\u65f6\u95f4$\\leq 2y-2$\u7684\u7956\u5148$u$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f$ans_{2y-2}-dep[u]+mx[x]$\u3002\n\n\u7136\u540e\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e4d\u4e00\u770b\u9700\u8981\u7ef4\u62a4\u5728\u6240\u6709\u65f6\u95f4\u6240\u6709\u70b9\u7684\u5b50\u6811\u5185\u9009\u7684\u53f6\u5b50\u8282\u70b9\u7684\u6743\u503c\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u4e2a\u5f88\u9ebb\u70e6\u3002\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u6709\u5728\u8fd9\u4e2a\u7956\u5148\u7684\u5b50\u6811\u5185\u53ea\u6709\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u88ab\u9009\u7684\u65f6\u5019\uff0c\u8fd9\u79cd\u60c5\u51b5\u624d\u53ef\u80fd\u6709\u7b2c\u4e00\u79cd\u60c5\u51b5\u4f18\u3002\u56e0\u4e3a\u5982\u679c\u591a\u4e8e\u4e24\u4e2a\u53f6\u5b50\uff0c\u90a3\u4e48\u5220\u6389\u6700\u5c0f\u7684\u90a3\u4e2a\u53f6\u5b50\u8282\u70b9\u6240\u51cf\u53bb\u7684\u4f9d\u65e7\u662f\u8fd9\u4e2a\u70b9\u52a0\u8fdb\u6765\u65f6\u5019\u7684\u6743\u503c\uff0c\u65e2\u7136\u662f\u51cf\u53bb\u52a0\u8fdb\u6765\u7684\u6743\u503c\u90a3\u4e48\u7b2c\u4e00\u79cd\u60c5\u51b5\u663e\u7136\u662f\u6700\u5c0f\u7684\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53f6\u5b50\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53f6\u5b50\u6240\u4ee3\u8868\u7684\u94fe\u8ddf$x$\u5230\u6839\u7684\u8def\u5f84\u662f\u6709\u4ea4\u7684\uff0c\u6240\u4ee5\u624d\u6709\u53ef\u80fd\u66f4\u77ed\u3002\u5b9e\u73b0\u65b9\u9762\u53ef\u4ee5\u500d\u589e\u8df3\u5230\u7b2c\u4e00\u4e2a\u88ab\u8bbf\u95ee\u65f6\u95f4$\\leq 2y-1$\u7684\u8282\u70b9$u$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u4f1a\u662f$ans_{2y-1}-mx[u]+mx[x]$\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\u4e24\u9897\u6811\u7684\u4e24\u79cd\u60c5\u51b5\u7684\u6700\u5927\u503c\u4e86\u3002\n\n\u590d\u6742\u5ea6$O((n+q)\\log n)$\u3002\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100010\n#define mp(x,y) make_pair(x,y)\n#define fi first\n#define se second\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>pii;\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch-'0'<0||ch-'0'>9){if(ch=='-') f=-1;ch=getchar();}\n    while(ch-'0'>=0&&ch-'0'<=9){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n,Q,A,B;\nint head[maxn],nxt[maxn*2],to[maxn*2],c[maxn*2],tot;\nvoid add(int u,int v,int x)\n{\n    tot++;\n    nxt[tot]=head[u];\n    head[u]=tot;\n    to[tot]=v;\n    c[tot]=x;\n}\nint mx,pos;\nvoid dfs(int x,int las,int d)\n{\n    if(d>mx)  mx=d,pos=x;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        if(to[i]==las)  continue;\n        dfs(to[i],x,d+c[i]);\n    }\n}\nvoid Find()\n{\n    mx=pos=0;\n    dfs(1,0,0);\n    A=pos;mx=pos=0;\n    dfs(A,0,0);\n    B=pos;\n}\nstruct Tree{\n    int up[maxn][22],dep[maxn],mx[maxn],ans[maxn];\n    int s[maxn],top,p[maxn],up_dis[maxn],size[maxn];\n    void dfs(int x,int las)\n    {\n        p[++top]=x;s[x]=top;size[x]=1;mx[x]=dep[x];\n        for(int i=1;i<=20;i++)  up[x][i]=up[up[x][i-1]][i-1];\n        for(int i=head[x];i;i=nxt[i])\n        {\n            if(to[i]==las)  continue;\n            dep[to[i]]=dep[x]+c[i]; \n            up[to[i]][0]=x;\n            up_dis[to[i]]=c[i];\n            dfs(to[i],x);\n            mx[x]=max(mx[x],mx[to[i]]);\n            size[x]+=size[to[i]];\n        }\n    }\n    pii t[maxn*4];\n    int vis[maxn],tag[maxn*4];\n    void update(int k)\n    {\n        t[k]=max(t[k*2],t[k*2+1]);\n    }\n    void build(int k,int l,int r)\n    {\n        if(l==r)\n        {\n            t[k]=mp(dep[p[l]],p[l]);\n            return;\n        }\n        int mid=(l+r)/2;\n        build(k*2,l,mid);\n        build(k*2+1,mid+1,r);\n        update(k);\n    }\n    void pushdown(int k)\n    {\n        if(!tag[k])  return;\n        tag[k*2]+=tag[k];tag[k*2+1]+=tag[k];\n        t[k*2].fi+=tag[k];t[k*2+1].fi+=tag[k];\n        tag[k]=0;\n    }\n    void modi(int k,int l,int r,int x,int y,int z)\n    {\n        if(l>=x&&r<=y)\n        {\n            tag[k]+=z;\n            t[k].fi+=z;\n            return;\n        }\n        pushdown(k);\n        int mid=(l+r)/2;\n        if(mid>=x)  modi(k*2,l,mid,x,y,z);\n        if(mid<y)   modi(k*2+1,mid+1,r,x,y,z);\n        update(k);\n    }\n    void pre()\n    {\n        for(int i=1;i<=n;i++)\n        {\n            int x=t[1].se;\n            ans[i]=ans[i-1]+t[1].fi;\n            while(!vis[x]&&x)\n            {\n                modi(1,1,n,s[x],s[x]+size[x]-1,-up_dis[x]);\n                vis[x]=i;\n                x=up[x][0];\n            }\n        }\n    }\n    int query(int x,int y)\n    {\n        y=min(y,n);\n        if(vis[x]<=y)  return ans[y];\n        int now=x;\n        for(int i=20;i>=0;i--)\n          if(vis[up[now][i]]>=y)  now=up[now][i];\n        now=up[now][0];\n        int res=mx[x]-dep[now]+ans[y-1];\n        now=x;\n        for(int i=20;i>=0;i--)\n          if(vis[up[now][i]]>y)  now=up[now][i];\n        now=up[now][0];\n        res=max(res,ans[y]-mx[now]+mx[x]);\n        return res;\n    }\n}T1,T2;\nint main()\n{\n    n=read();Q=read();\n    for(int i=1;i<n;i++)\n    {\n        int q=read(),w=read(),e=read();\n        add(q,w,e);\n        add(w,q,e);\n    }\n    Find();\n    T1.dfs(A,0);T1.build(1,1,n);T1.pre();\n    T2.dfs(B,0);T2.build(1,1,n);T2.pre();\n    int las=0;\n    while(Q--)\n    {\n        int x=(read()+las-1)%n+1,y=(read()+las-1)%n+1;\n        printf(\"%d\\n\",las=max(T1.query(x,2*y-1),T2.query(x,2*y-1)));\n    }\n    return 0;\n}\n```",
        "postTime": 1581418366,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF526G \u3010Spiders Evil Plan\u3011"
    },
    {
        "content": "OmNom\u2026\u2026\u5f15\u8d77\u4e86\u56de\u5fc6\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u6211\u60f3\u8bf4\uff0c\u8fd9\u9898\u771f\u662f\u592a\u795e\u4ed9\u4e86 %%%%%%%%%%%%%%\n\n---\n\n\u9996\u5148\u663e\u7136\u9009\u7684\u6bcf\u6761\u8def\u5f84\u90fd\u662f\u4ee5\u53f6\u5b50\u4e3a\u4e24\u7aef\u7684\uff0c\u800c\u4e14\u4e0d\u5728\u4e0d\u5f97\u5df2\u7684\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u9009\u91cd\u590d\u7684\u53f6\u5b50\u3002\u90a3\u4e48\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9 $2x$ \u4e2a\u53f6\u5b50\uff0c\u9009\u62e9\u5b83\u4eec\u9009\u51fa\u7684\u8def\u5f84\u7684\u5e76\uff0c\u6700\u4f18\u4e5f\u4f18\u4e0d\u8fc7\u5b83\u4eec\u751f\u6210\u7684\u865a\u6811\u3002\u5b9e\u9645\u4e0a\u7a0d\u5fae\u52a8\u52a8\u8111\u5b50\u5c31\u80fd\u8bc1\u660e\uff1a\u5bf9\u4efb\u610f $2x$ \u4e2a\u53f6\u5b50\uff0c\u4e00\u5b9a\u5b58\u5728\u5c06\u5b83\u4eec\u4e24\u4e24\u914d\u5bf9\u9009\u51fa $x$ \u6761\u8def\u5f84\u7684\u65b9\u5f0f\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u8def\u5f84\u7684\u5e76\u4e3a\u5b83\u4eec\u751f\u6210\u7684\u865a\u6811\u3002\n\n\u7a0d\u5fae\u52a8\u8111\u5b50\u5c31\u80fd\u4f1a\u7684\uff08\u611f\u6027\uff09\u8bc1\u660e\uff1a\u8003\u8651\u5f52\u7eb3\uff0c\u90a3\u4e48\u53ea\u8981\u8bc1\u5bf9\u4efb\u610f $2x$ \u4e2a\u53f6\u5b50\uff0c\u4e00\u5b9a\u80fd\u627e\u5230\u4e00\u5bf9\u53f6\u5b50\uff0c\u5b83\u4eec\u7684\u8def\u5f84\u548c\u5269\u4e0b\u6765 $2x-2$ \u4e2a\u53f6\u5b50\u751f\u6210\u7684\u865a\u6811\u7684\u5e76\u7b49\u4e8e\u8fd9 $2x$ \u4e2a\u53f6\u5b50\u751f\u6210\u7684\u865a\u6811\u3002\u6839\u636e\u865a\u6811\u7684\u6bcf\u4e2a\u975e\u53f6\u8282\u70b9\u81f3\u5c11\u6709\u4e24\u4e2a\u513f\u5b50\u8fd9\u4e2a\u6027\u8d28\uff0c\u8fd9\u53ea\u8981\u5206\u4e2a\u51e0\u7c7b\u5c31\u968f\u4fbf\u8bc1\u4e86\uff0c\u518d\u6b64\u4e0d\u8d58\u8ff0\u3002\n\n\u90a3\u4e48\u8be2\u95ee\u5c31\u8f6c\u5316\u6210\u4e86\uff1a\u9009\u51fa\u4efb\u610f $2y$ \u4e2a\u53f6\u5b50\u751f\u6210\u7684\u5305\u542b $x$ \u7684\u865a\u6811\uff0c\u6c42\u5176\u4e2d\u8fb9\u6743\u548c\u6700\u5927\u7684\u65b9\u6848\u3002\u4e0d\u96be\u60f3\u5230\u4ee5 $x$ \u4e3a\u6839\u6765\u641e\uff0c\u8fd9\u6837\u7531\u4e8e\u865a\u6811\u5fc5\u987b\u5305\u542b $x$\uff0c\u90a3\u4e48\u8fd9\u68f5\u865a\u6811\u663e\u7136\u662f\u6240\u6709\u53f6\u5b50\u5230\u6839\uff08$x$\uff09\u7684\u8def\u5f84\u7684\u5e76\u3002\u5148\u4e0d\u7ba1\u5b83\u4eec\u751f\u6210\u7684\u865a\u6811\u80fd\u4e0d\u80fd\u5305\u542b $x$\uff0c\u90a3\u8fd9\u4e0d\u5c31\u662f\u653b\u7565\u90a3\u9898\u4e86\u5417\uff1f\u957f\u5256\u968f\u4fbf\u505a\u3002\u7136\u540e\u5982\u679c\u8981\u7b26\u5408\u8981\u6c42\u7684\u8bdd\uff0c\u5fc5\u987b\u6ee1\u8db3 $x$ \u662f\u53f6\u5b50\u5e76\u4e14\u88ab\u9009\u6216\u8005 $x$ \u7684\u4e24\u4e2a\u4e0d\u540c\u513f\u5b50\u5b50\u6811\u91cc\u90fd\u6709\u88ab\u9009\u7684\u53f6\u5b50\u3002\u8fd9\u662f\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u8c03\u6574\u5373\u53ef\u6ee1\u8db3\uff0c\u8c03\u6574\u6307\u7684\u662f\u5220\u53bb\u4e00\u4e2a\u53f6\u5b50\u5e76\u52a0\u5165\u4e00\u4e2a\u53f6\u5b50\u3002\u5220\u53bb\u5c31\u5220\u5f53\u524d\u9009\u7684\u8d21\u732e\u6700\u5c0f\u7684\uff0c\u52a0\u5165\u5c31\u52a0\u8d21\u732e\u6700\u5927\u7684\u3002\u5f53\u7136\u5177\u4f53\u662f\u4ec0\u4e48\u4e0d\u7528\u8bf4\u4e86\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u672c\u6765\u5c31\u662f\u66b4\u529b\uff0c\u8fc7\u4e0d\u53bb\u3002\n\n\u74f6\u9888\u5728\u4e8e\u6211\u4eec\u6bcf\u6b21\u90fd\u641e\u4e86\u4e2a\u4e0d\u540c\u7684\u6839\uff0c\u800c\u8fd9\u53ea\u53ef\u80fd\u5728\u79bb\u7ebf\u7684\u65f6\u5019\u6709\u6548\uff0c\u53ef\u4ee5\u5b58\u4e0b\u6765\u7136\u540e\u6362\u6839\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u4e2d\u7b2c\u4e00\u4e2a\u9009\u7684\u90a3\u4e2a\u8d21\u732e\u6700\u5927\u7684\u662f\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5220\u7684\uff0c\u56e0\u4e3a $2y$ \u662f\u5076\u6570\uff0c\u8981\u5220\u7684\u8bdd\u6700\u9760\u524d\u4e5f\u662f\u7b2c $2$ \u540d\u3002\u800c\u8fd9\u4e2a\u8d21\u732e\u6700\u5927\u7684\u663e\u7136\u662f\u6839\u6240\u5728\u957f\u94fe\u5305\u542b\u7684\u53f6\u5b50\uff0c\u4e5f\u5c31\u662f\u5230\u6839\u8ddd\u79bb\u6700\u5927\u7684\u53f6\u5b50\u3002\u6839\u636e\u76f4\u5f84\u7684\u6027\u8d28\uff0c\u8fd9\u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\uff01\u4e5f\u5c31\u662f\u8bf4\u4efb\u9009\u4e00\u6761\u76f4\u5f84\uff0c\u6bcf\u7ec4\u8be2\u95ee\u9009\u7684\u6700\u4f18\u53f6\u5b50\u96c6\u5408\u4e00\u5b9a\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u7aef\u70b9\uff08\u6709\u591a\u6761\u76f4\u5f84\u4e0d\u7528\u6015\uff0c\u662f\u7b49\u6548\u7684\uff09\u3002\n\n\u4e8e\u662f\u8003\u8651\u4ee5\u4e24\u4e2a\u76f4\u5f84\u7aef\u70b9\u5206\u522b\u4e3a\u6839\uff0c\u6bcf\u6b21\u8be2\u95ee\u5728\u4e24\u4e2a\u65b9\u6848\u91cc\u5206\u522b\u67e5\u8be2\u53d6 $\\max$\u3002\u8003\u8651\u5982\u4f55\u67e5\u8be2\u3002\u6211\u4eec\u8003\u8651\u5148\u9009\u51fa\u6700\u4f18\u7684 $2y-1$\uff08\u6709\u4e00\u4e2a\u53f6\u5b50\u662f\u76f4\u5f84\u7aef\u70b9\uff08\u6839\uff09\uff0c\u5df2\u7ecf\u88ab\u9009\uff09\u4e2a\u53f6\u5b50\uff0c\u7136\u540e\u518d\u8c03\u6574\u4f7f\u5f97 $x$ \u88ab\u5305\u542b\u8fdb\u53bb\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u8bbe\u6839\uff0c\u6bcf\u7ec4\u9009\u7684\u53f6\u5b50\u7684\u7b54\u6848\u4e5f\u4e00\u5b9a\u662f\u5b83\u4eec\u5230\u6839\u7684\u8def\u5f84\u7684\u5e76\uff0c\u56e0\u4e3a\u6839\u5fc5\u987b\u88ab\u9009\u3002\u90a3\u4f9d\u7136\u53ef\u4ee5\u957f\u5256\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u957f\u5256\uff0c\u4e0d\u50cf\u4e0a\u9762\u90a3\u79cd\u66b4\u529b\uff0c\u7adf\u7136\u60f3\u5728\u6362\u6839\u7684\u65f6\u5019\u641e\u4e0d\u53ef\u9057\u4f20\u7684\u957f\u5256\u3002\n\n\u90a3\u8003\u8651\u5982\u4f55\u8c03\u6574\u3002\u5982\u679c $x$ \u5df2\u7ecf\u88ab\u9009\u4e86\uff08\u4e00\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u9009\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6240\u6709\u957f\u94fe\u7684\u6392\u540d\uff0c\u7136\u540e\u770b\u6240\u5728\u957f\u94fe\u662f\u5426\u6392\u540d\u9760\u524d\u6765\u5e38\u6570\u65f6\u95f4\u67e5\u8be2\uff09\uff0c\u90a3\u6ca1\u4e8b\u4e86\u3002\u5426\u5219\uff0c\u5c06 $x$ \u52a0\u8fdb\u53bb\uff08\u8d21\u732e\u663e\u7136\u662f\u5b83\u5230\u5f80\u4e0a\u7b2c\u4e00\u4e2a\u88ab\u9009\u7684\u7956\u5148\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u500d\u589e\u627e\u5230\uff08\u5728\u65e0\u8fb9\u6743\u65f6\u8df3\u957f\u94fe\u662f\u6839\u53f7\u7684\uff0c\u4f46\u662f\u8fd9\u9898\u6709\u8fb9\u6743\uff0c\u4e0d\u884c\u4e86\uff09\uff09\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u5220\u6389\u539f\u6765\u7684\u4efb\u610f\u4e00\u4e2a\u53f6\u5b50\u5373\u53ef\u3002\u8003\u8651\u5220\u6389\u6bcf\u4e2a\u53f6\u5b50\u7684\u8d21\u732e\uff08\u5f53\u7136\u662f\u8d1f\u7684\uff09\uff0c\u90a3\u5c31\u662f\u5230\u5f80\u4e0a\u7b2c\u4e00\u4e2a\u5b50\u6811\u5305\u542b\u5176\u5b83\u88ab\u9009\u53f6\u5b50\u7684\u7956\u5148\u7684\u8ddd\u79bb\u554a\u2026\u2026\u90a3\u4e48\u8d21\u732e\u6700\u5927\u7684\u663e\u7136\u662f\u6309\u8d2a\u5fc3\u6700\u540e\u4e00\u4e2a\u9009\u7684\uff0c\u76f4\u63a5\u8c03\u7528\u524d\u7f00\u548c\u5c31\u597d\u4e86\uff1b\u4f46\u6709\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\uff1a\u5f53 $x$ \u52a0\u5165\u4e4b\u540e\uff0c\u5b83\u5230\u5f80\u4e0a\u7b2c\u4e00\u4e2a\u88ab\u9009\u7684\u7956\u5148\u5b50\u6811\u5185\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u88ab\u9009\u53f6\u5b50\u7684\u8bdd\uff0c\u90a3\u4e48\u6309\u7167\u4e4b\u524d\u8bf4\u7684\uff0c\u5e94\u8be5\u8fd8\u8981\u5f80\u4e0a\u6d88\uff0c\u4f46\u662f $x$ \u7684\u52a0\u5165\u80fd\u7ed9\u5b83\u4fdd\u62a4\u5230\u300c\u5b83\u5230\u5f80\u4e0a\u7b2c\u4e00\u4e2a\u88ab\u9009\u7684\u7956\u5148\u300d\uff0c\u8fd9\u4e2a\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u3002\n\n\u603b\u590d\u6742\u5ea6\u662f\u7ebf\u5bf9\uff0c\u56e0\u4e3a\u6709\u500d\u589e\u3002\n\n**_[code](https://www.luogu.com.cn/paste/y20qztbz)_**",
        "postTime": 1612427885,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF526G \u3010Spiders Evil Plan\u3011"
    },
    {
        "content": "\u573a\u4e86\u4e2a 3300\uff0c\u4e50\u574f\u4e86\u3002\n\n\u50cf\u6211\u8fd9\u79cd\u4f4e\u667a\u529b\u4eba\u7fa4\u9002\u5408\u7684\u66b4\u529b\u505a\u6cd5\uff0c\u548c\u76ee\u524d\u6240\u6709\u9898\u89e3\u4e0d\u540c\u3002\n\n\u7ed3\u8bba\u662f\u5bf9\u4e8e\u70b9 $u$ \u9009\u62e9\u4e0d\u5728\u4ee5 $u$ \u4e3a\u6839\u540c\u4e00\u4e2a\u5b50\u6811\u5185\u7684  $2k$ \u4e2a\u70b9\u7136\u540e\u8fde\u8d77\u6765\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u8fc7 $u$ \u4e14\u8fde\u901a\u7684\u65b9\u6848\uff0c\u5426\u5219\u5c06\u4e24\u6761\u4e0d\u4ea4\u7684\u8def\u5f84\u4ea4\u9519\u4e00\u5b9a\u66f4\u4f18\uff0c\u5176\u5b83\u9898\u89e3\u6709\u5f88\u6e05\u695a\u7684\u8bc1\u660e\u3002\n\n\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u662f\u8be2\u95ee\u6bcf\u4e2a\u70b9\u9009\u51fa\u4ee5\u5b83\u4e3a\u6839\u7684 $2k$ \u4e2a\u53f6\u5b50\uff0c\u4e0d\u5728\u5b83\u7684\u540c\u4e00\u4e2a\u5b50\u6811\u91cc\u8fd9\u4e2a\u9650\u5236\u5148\u4e0d\u7ba1\uff0c\u4f7f\u5f97\u8def\u5f84\u7684\u5e76\u7684\u548c\u6700\u5927\u3002\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8be2\u95ee\u600e\u4e48\u505a\uff1f\n\n\u628a $u$ \u5f53\u6210\u6839\uff0c\u7136\u540e\u6bcf\u6761\u8fb9\u8d21\u732e\u7ed9\u5b50\u6811\u91cc\u6700\u6df1\u7684\u53f6\u5b50\u3002 \u8fd9\u4e2a\u505a\u6cd5\u663e\u7136\u6b63\u786e\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u7b2c\u4e00\u6b21\u8986\u76d6\u4e00\u5b9a\u662f\u4e00\u4e2a\u5b50\u6811\u5185\u7684\u6700\u6df1\u7684\u53f6\u5b50\u9020\u6210\u7684\uff0c\u5426\u5219\u6362\u6210\u5b83\u66f4\u4f18\uff0c\u7136\u540e\u6309\u7167 \n$val_i$ \u6392\u5e8f\u8d2a\u5fc3\u53d6\u3002\n\n\n\u591a\u4e2a\u8be2\u95ee\u600e\u4e48\u505a\uff1f \n\n\u5f88\u591a\u4eba\u5728\u8fd9\u4e2a\u65f6\u5019\u9009\u62e9\u4e86\u89c2\u5bdf\u6027\u8d28\uff0c\u800c\u6211\u6ca1\u90a3\u4e48\u806a\u660e\u9009\u62e9\u4e86\u66b4\u529b\uff1a\n\n\u73b0\u5728\u4ee5 $1$ \u4e3a\u6839\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u6362\u6839\u64cd\u4f5c\u3002\n\n\u76f4\u63a5\u6362\u6839\uff0c\u8003\u8651\u4e0e\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5b50\u6811\u5185\u6700\u8fdc\u7684\u70b9\u548c\u5b50\u6811\u5916\u6700\u8fdc\u7684\u70b9\n\uff0c\u5206\u522b\u4e3a $f_x,g_x$\uff0c\u5219\u6362\u6839\u65f6\u628a\u6839\u4ece $u\\to v$\uff0c\u8fb9\u6743\u4e3a $w$\uff0c\u5219\u8fd9\u4e2a\u65f6\u5019\u56e0\u4e3a\u6bcf\u6761\u8fb9\u6700\u591a\u53ea\u4f1a\u7528\u4e00\u6b21\uff0c\u6240\u4ee5\u4f1a\u66f4\u6539\u7684\u503c\u6709\u4e14\u4ec5\u6709 \n\n$$val_{f_x} \\gets val_{f_x}-w$$\n\n$$val_{g_x} \\gets val_{g_x}+w$$\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u6539\u5143\u7d20\u5e76\u67e5\u8be2\u524d $k$ \u5927\u7684\u548c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd8\u5f97\u5f3a\u5236\u5728\u7ebf\uff0c\u4f7f\u7528\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u6216\u8005\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\u5c31\u884c\u4e86\u3002\n\n\u8003\u8651\u90a3\u4e2a\u8981\u6c42\u5728\u4e0d\u540c\u5b50\u6811\u91cc\u600e\u4e48\u5904\u7406\uff1a\n\n\u7531\u4e8e\u6211\u4eec\u7684\u8d2a\u5fc3\u65b9\u5f0f\uff0c\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f\u4f1a\u88ab\u9009\u5230\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u4e00\u4e2a\u548c\u6700\u8fdc\u7684\u70b9\u4e0d\u5728\u540c\u4e00\u5b50\u6811\u91cc\u7684\u6b21\u5143\u7684\u70b9\u5e76\u4e14\u4ece\u6570\u636e\u7ed3\u6784\u91cc\u6263\u6389\u67e5\u8be2\u524d $2k -2$ \u5927\u5c31\u5b8c\u4e86\u3002\n\n\u65f6\u7a7a\u90fd\u662f $O((n+q)\\log n)$\u3002 \n\n[\u4e3b\u5e2d\u6811\u5b9e\u73b0](https://codeforces.com/contest/526/submission/191826058)  \n\n\n\n\n\n",
        "postTime": 1675427795,
        "uid": 161697,
        "name": "\u10e6\ua9bf\u0fd0",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011 CF526G  Spiders Evil Plan"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/526/problem/G) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF526G)\n\n%%%%% \u8fd9\u9898\u4e5f\u592a\u795e\u4e86\u5427 storz 57072 %%%%%\n\n\u9996\u5148\u5bb9\u6613\u6ce8\u610f\u5230\u6211\u4eec\u9009\u62e9\u7684\u8fd9 $y$ \u6761\u8def\u5f84\u7684\u7aef\u70b9\u4e00\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5426\u5219\u6211\u4eec\u603b\u53ef\u4ee5\u5c06\u5176\u8c03\u6574\u5230\u53f6\u5b50\u8282\u70b9\u5e76\u4f7f\u7b54\u6848\u4e0d\u4f1a\u66f4\u52a3\uff0c\u5e76\u4e14\u5982\u679c\u975e\u5fc5\u987b\uff08$2y\\le$ \u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\uff09\uff0c\u6211\u4eec\u9009\u62e9\u7684\u8fd9 $y$ \u4e2a\u8def\u5f84\u7684 $2y$ \u4e2a\u7aef\u70b9\u4e00\u5b9a\u4e24\u4e24\u4e0d\u76f8\u540c\uff0c\u5426\u5219\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u8c03\u6574\u91cd\u590d\u7684\u53f6\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\u4f7f\u7b54\u6848\u4e0d\u53d8\u52a3\u3002\n\n\u5176\u6b21\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u7684 $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u603b\u5b58\u5728\u4e00\u79cd\u9009\u6cd5\u4f7f\u5f97\u8fd9 $y$ \u4e2a\u8def\u5f84\u7684\u5e76\u96c6\u5c31\u662f\u8fd9 $2y$ \u4e2a\u8282\u70b9\u7684\u865a\u6811\uff0c\u8bc1\u660e\u5e94\u8be5\u4e0d\u96be\uff0c\u5927\u6982\u5f52\u7eb3\u4e00\u4e0b\u5c31\u884c\u4e86\uff1f\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\u7279\u5224\u6389 $2y>$ \u6811\u5728\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\u7684\u60c5\u51b5\uff0c\u9898\u76ee\u5c31\u7b49\u4ef7\u4e8e\u6c42\u4e00\u4e2a\u5305\u542b $x$ \u7684\u542b $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u865a\u6811\uff0c\u4f7f\u5f97\u865a\u6811\u4e2d\u8fb9\u6743\u4e4b\u548c\u5c3d\u53ef\u80fd\u5927\u3002\u6211\u4eec\u8003\u8651\u4ee5 $x$ \u4e3a\u6839\uff0c\u5148\u4e0d\u8003\u8651\u201c\u865a\u6811\u5fc5\u987b\u5305\u542b $x$\u201d\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5373\u6211\u4eec\u5047\u8bbe\u8981\u6c42 $x$ \u4e0e\u8fd9 $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\u5171\u540c\u7684\u865a\u6811\uff0c\u663e\u7136\u8fd9\u4e2a\u96c6\u5408\u5c31\u7b49\u4e8e\u8fd9 $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u7684\u5e76\u96c6\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u9009 $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\u4f7f\u5f97\u5b83\u4eec\u5230\u6839\u8282\u70b9\u8def\u5f84\u7684\u5e76\u96c6\u4e2d\u8fb9\u6743\u548c\u5c3d\u53ef\u80fd\u5927\u3002\u8fd9\u4f3c\u4e4e\u770b\u8d77\u6765\u6709\u4e9b\u719f\u6089\uff1f\u2026\u2026\u4e0d\u5c31 BZOJ3252 \u653b\u7565\u5417\uff1f\u76f4\u63a5\u957f\u94fe\u5256\u5206\u4e00\u904d\u6392\u4e2a\u5e8f\u5373\u53ef\u3002\u53ea\u4e0d\u8fc7\u8fd9\u8fb9\u8981\u7279\u5224\u6389 $x$ \u672c\u8eab\u5c31\u662f\u53f6\u5b50\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u663e\u7136 $x$ \u5fc5\u987b\u88ab\u9009\u5165\u8fd9 $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\u4e2d\uff0c\u6545\u6211\u4eec\u8fd8\u9700\u989d\u5916\u9009\u51fa $2y-1$ \u4e2a\u53f6\u5b50\u8282\u70b9 instead of $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\u3002\u52a0\u4e0a\u201c\u865a\u6811\u5fc5\u987b\u5305\u542b $x$\u201d\u8fd9\u4e2a\u6761\u4ef6\u4e5f\u4e0d\u56f0\u96be\uff0c\u4e0d\u96be\u53d1\u73b0\u51fa\u95ee\u9898\u7684\u60c5\u51b5\u53ea\u6709\u4e00\u79cd\u53ef\u80fd\uff0c\u90a3\u5c31\u662f $x$ \u672c\u8eab\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5e76\u4e14\u9009\u62e9\u7684 $2y$ \u7684\u53f6\u5b50\u8282\u70b9\u5168\u5728 $x$ \u7684\u540c\u4e00\u5b50\u6811\u4e2d\uff0c\u90a3\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u727a\u7272\u6743\u503c\u6700\u5c0f\u7684\u957f\u94fe\uff0c\u5e76\u52a0\u5165\u53f6\u5b50\u8282\u70b9\u5c5e\u4e8e $x$ \u7684\u5176\u4ed6\u5b50\u6811\u4e2d\u6743\u503c\u6700\u5927\u7684\u957f\u94fe\uff0c\u8fd9\u4e2a\u968f\u4fbf\u641e\u641e\u5c31\u884c\u4e86\uff0c\u81f3\u6b64\u6211\u4eec\u89e3\u51b3\u4e86\u5355\u8bcd\u8be2\u95ee\u7684\u60c5\u51b5\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u591a\u7ec4\u8be2\u95ee\u7684\u60c5\u51b5\uff0c\u4e0d\u96be\u53d1\u73b0\u4e0a\u8ff0\u7b97\u6cd5\u7684\u74f6\u9888\u5728\u4e8e\u6bcf\u6b21\u8be2\u95ee\u90fd\u8981\u91cd\u65b0\u4ee5 $x$ \u4e3a\u6839\u641e\u4e00\u904d\u957f\u94fe\u5256\u5206\uff0c\u800c\u957f\u94fe\u5256\u5206\u8fd9\u7c7b\u6570\u636e\u7ed3\u6784\u4e5f\u4e0d\u652f\u6301\u53ef\u6301\u4e45\u5316\u4ec0\u4e48\u7684\uff0c\u56e0\u6b64\u8be5\u7b97\u6cd5\u4e5f\u65e0\u6cd5\u76f4\u63a5\u4f18\u5316\u3002\u90a3\u6709\u4ec0\u4e48\u529e\u6cd5\u5462\uff1f\u4e0d\u59a8\u6765\u627e\u627e\u6027\u8d28\u7f62\uff0c\u4e0d\u96be\u53d1\u73b0\u5728\u9009\u62e9\u7684 $2y$ \u4e2a\u53f6\u8282\u70b9\u4e2d\uff0c\u603b\u6709\u4e00\u4e2a\u6700\u7279\u6b8a\u7684\u8282\u70b9\u2014\u2014\u90a3\u5c31\u662f\u79bb $x$ \u6700\u8fdc\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8282\u70b9\u4e0d\u8bba\u600e\u6837\u4e5f\u4e0d\u53ef\u80fd\u88ab\u5220\u9664\uff08\u6bcf\u6b21\u6700\u591a\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u6211\u4eec\u9009\u62e9\u7684\u8282\u70b9\u6570 $\\ge 2$\uff09\u3002\u800c\u6839\u636e\u6811\u7684\u76f4\u5f84\u7684\u6027\u8d28\uff0c\u8be5\u70b9\u4e00\u5b9a\u662f\u6811\u7684\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u7740\u773c\u4e8e\u6811\u7684\u76f4\u5f84\u4e0a\uff0c\u6211\u4eec\u5bf9\u4e8e\u6811\u7684\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9 $u,v$ \u5206\u522b\u8be2\u95ee\u4ee5\u4e0b\u4e8b\u60c5\uff1a\u6c42\u9009\u62e9 $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f $u$\uff08\u6216 $v$\uff09\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u865a\u6811\u5305\u542b $x$\uff0c\u5b83\u4eec\u865a\u6811\u8fb9\u6743\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\u663e\u7136\u6211\u4eec\u53ea\u9700\u5728\u4e24\u4e2a\u65b9\u6848\u4e2d\u53d6\u4e2a\u8f83\u5927\u503c\u5373\u53ef\u3002\u90a3\u4e48\u8fd9\u4e2a\u6700\u5927\u503c\u600e\u4e48\u6c42\u5462\uff1f\u4e0d\u59a8\u4ee5\u5305\u542b $u$ \u7684\u90e8\u5206\u4e3e\u4f8b\uff0c\u6211\u4eec\u8fd8\u662f\u8003\u8651\u4ee5 $u$ \u4e3a\u6839\uff0c\u663e\u7136\u5bf9\u4e8e\u56fa\u5b9a\u7684\u53e6\u5916 $2y-1$ \u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u96c6\u5408 $\\{x_1,x_2,\\cdots,x_{2k-1}\\}$\uff0c\u5b83\u4eec\u4e0e $u$ \u7684\u865a\u6811\u4e5f\u4e00\u5b9a\u662f\u8fd9 $2k-1$ \u4e2a\u8282\u70b9\u5230 $u$ \u8def\u5f84\u7684\u5e76\u96c6\u3002\u5982\u679c\u4e0d\u8003\u8651\u201c\u5fc5\u987b\u5305\u542b $x$\u201d\u8fd9\u4e2a\u6761\u4ef6\uff0c\u90a3\u4f9d\u65e7\u4e00\u904d\u957f\u94fe\u5256\u5206\u5c31\u53ef\u4ee5\u641e\u5b9a\u3002\u52a0\u4e0a\u8fd9\u4e2a\u6761\u4ef6\u600e\u4e48\u529e\u5462\uff1f\u8fd8\u662f\u8003\u8651\u5148\u6309\u7167\u4e0d\u5fc5\u987b\u5305\u542b $x$ \u7684\u65b9\u6848\u6765\u9009\u62e9\u53f6\u5b50\u8282\u70b9\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u8c03\u6574\uff0c\u8bb0 $rk_x$ \u4e3a\u5bf9\u4e8e $x$ \u8282\u70b9\u6240\u5728\u957f\u94fe\uff0c\u5176\u94fe\u4e0a\u6240\u6709\u8fb9\u6743\u503c\u4e4b\u548c\u5728\u6240\u6709\u957f\u94fe\u4e2d\u4ece\u5927\u5230\u5c0f\u6392\u540d\u662f\u591a\u5c11\u3002\u5982\u679c $rk_x\\le 2y-1$\uff0c\u90a3 $x$ \u5df2\u7ecf\u88ab\u5305\u542b\u5165\u8fd9 $2y$ \u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u865a\u6811\u4e2d\u4e86\uff0c\u5c31\u4e0d\u7528\u518d\u8c03\u6574\u4e86\uff0c\u5426\u5219\u8c03\u6574\u65b9\u6cd5\u53ea\u53ef\u80fd\u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a\n\n1. \u5220\u53bb\u5df2\u7ecf\u9009\u62e9\u7684 $2y-1$ \u4e2a\u957f\u94fe\u4e2d\uff0c\u6743\u503c\u6700\u5c0f\u7684\u957f\u94fe\uff08\u8bbe\u5176\u6743\u503c\u4e3a $val$\uff09\uff0c\u5e76\u6253\u901a $x$ \u5b50\u6811\u5185\u6df1\u5ea6\u6700\u5927\u7684\u53f6\u5b50\u8282\u70b9 $w$ \u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\uff0c\u8bbe $x$ \u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7b2c\u4e00\u4e2a $rk\\le 2y-2$ \u7684\u8282\u70b9\u4e3a $z$\uff0c\u90a3\u663e\u7136\u6253\u901a\u8fd9\u6761\u8def\u5f84\u6743\u503c\u7684\u589e\u91cf\u4e3a $dis_{w}-dis_z$\uff0c\u5176\u4e2d $dis_i$ \u4e3a\u6839\u8282\u70b9\u5230 $i$ \u8def\u5f84\u4e0a\u6743\u503c\u4e4b\u548c\uff0c\u603b\u589e\u91cf\u4e3a $\\Delta=-val+dis_w-dis_z$\u3002\n2. \u8bb0\u8bbe $x$ \u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7b2c\u4e00\u4e2a $rk\\le 2y-1$ \u7684\u8282\u70b9\u4e3a $t$\uff0c\u5982\u679c $t$ \u5b50\u6811\u4e2d\u53ea\u6709\u4e00\u4e2a\u53f6\u8282\u70b9\u88ab\u9009\u62e9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7d22\u6027\u628a $t$ \u5b50\u6811\u5185\u539f\u6765\u9009\u62e9\u7684\u8fb9\u76f4\u63a5\u53bb\u6389\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u8fde\u63a5 $t$ \u4e0e $x$ \u5b50\u6811\u5185\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9 $w$ \u7684\u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u8fd9\u90e8\u5206\u7684\u589e\u91cf\u4e3a $\\Delta=-mxdep_t+mxdep_x$\u3002\n\n\u6c42\u4e00\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u4e0a\u7b2c\u4e00\u4e2a $rk\\le t$ \u7684\u70b9\u53ef\u4ee5\u7528\u500d\u589e\uff0c\u603b\u590d\u6742\u5ea6 $n\\log n$\uff0c\u56e0\u4e3a\u6709\u4e2a\u500d\u589e\u7684 $\\log$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef unsigned int u32;\ntypedef unsigned long long u64;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nconst int MAXN=1e5;\nconst int LOG_N=17;\nint n,qu,hd[MAXN+5],to[MAXN*2+5],nxt[MAXN*2+5],val[MAXN*2+5],ec;\nvoid adde(int u,int v,int w){to[++ec]=v;val[ec]=w;nxt[ec]=hd[u];hd[u]=ec;}\nnamespace dia{\n\tint dis1[MAXN+5],dis2[MAXN+5],rt1=1,rt2=1;\n\tvoid dfs1(int x,int f){\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e],z=val[e];if(y==f) continue;\n\t\t\tdis1[y]=dis1[x]+z;dfs1(y,x);\n\t\t}\n\t}\n\tvoid dfs2(int x,int f){\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e],z=val[e];if(y==f) continue;\n\t\t\tdis2[y]=dis2[x]+z;dfs2(y,x);\n\t\t}\n\t}\n\tvoid find_dia(){\n\t\tdfs1(1,0);for(int i=1;i<=n;i++) if(dis1[i]>dis1[rt1]) rt1=i;\n\t\tdfs2(rt1,0);for(int i=1;i<=n;i++) if(dis2[i]>dis2[rt2]) rt2=i;\n\t}\n}\nstruct solver{\n\tint rt,dep[MAXN+5],mxdep[MAXN+5],dson[MAXN+5],top[MAXN+5];\n\tint fa[MAXN+5][LOG_N+2],rnk[MAXN+5];\n\tpii chain[MAXN+5];int chain_n=0,sum[MAXN+5];\n\tvoid dfs0(int x,int f){\n\t\tfa[x][0]=f;\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e],z=val[e];if(y==f) continue;\n\t\t\tdep[y]=mxdep[y]=dep[x]+z;dfs0(y,x);\n\t\t\tif(mxdep[y]>mxdep[x]) mxdep[x]=mxdep[y],dson[x]=y;\n\t\t}\n\t}\n\tvoid dfs1(int x,int tp){\n\t\ttop[x]=tp;if(dson[x]) dfs1(dson[x],tp);\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];if(y==fa[x][0]||y==dson[x]) continue;\n\t\t\tdfs1(y,y);\n\t\t}\n\t}\n\tvoid init(){\n\t\tdfs0(rt,0);dfs1(rt,rt);\n\t\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j<=n;j++)\n\t\t\tfa[j][i]=fa[fa[j][i-1]][i-1];\n\t\tfor(int i=1;i<=n;i++) if(top[i]==i)\n\t\t\tchain[++chain_n]=mp(mxdep[i]-dep[fa[i][0]],i);\n\t\tsort(chain+1,chain+chain_n+1);reverse(chain+1,chain+chain_n+1);\n//\t\tfor(int i=1;i<=chain_n;i++) printf(\"%d %d\\n\",chain[i].fi,chain[i].se);\n\t\tfor(int i=1;i<=chain_n;i++) rnk[chain[i].se]=i;\n\t\tfor(int i=1;i<=n;i++) rnk[i]=rnk[top[i]];\n\t\tfor(int i=1;i<=chain_n;i++) sum[i]=sum[i-1]+chain[i].fi;\n\t}\n\tint getfst(int x,int rk){\n\t\tfor(int i=LOG_N;~i;i--) if(rnk[fa[x][i]]>rk) x=fa[x][i];\n\t\treturn fa[x][0];\n\t}\n\tint query(int x,int y){\n\t\ty=(y<<1)-1;if(y>chain_n) return sum[chain_n];\n\t\tif(rnk[x]<=y) return sum[y];int anc=getfst(x,y);\n//\t\tprintf(\"anc=%d\\n\",anc);\n\t\treturn max(sum[y-1]+mxdep[x]-dep[getfst(x,y-1)],sum[y]-mxdep[anc]+mxdep[x]);\n\t}\n} t[2];\nint main(){\n\tscanf(\"%d%d\",&n,&qu);\n\tfor(int i=1,u,v,w;i<n;i++){scanf(\"%d%d%d\",&u,&v,&w);adde(u,v,w);adde(v,u,w);}\n\tdia::find_dia();t[0].rt=dia::rt1;t[1].rt=dia::rt2;t[0].init();t[1].init();\n\tint ans=0;while(qu--){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);x=(x+ans-1)%n+1;y=(y+ans-1)%n+1;\n//\t\tprintf(\"real %d %d\\n\",x,y);\n\t\tprintf(\"%d\\n\",ans=max(t[0].query(x,y),t[1].query(x,y)));\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1616168049,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF526G Spiders Evil Plan"
    }
]