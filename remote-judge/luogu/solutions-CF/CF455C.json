[
    {
        "content": "**Update 2020.08.25**\uff1a\u4fee\u6539\u4e86\u4e00\u4e9b\u9519\u522b\u5b57\u4e0e\u4e0d\u901a\u987a\u7684\u5730\u65b9\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7ec4\u6210\u7684\u68ee\u6797\uff0c\u6709 $q$ \u7ec4\u8be2\u95ee\uff1a  \n\n1. \u7ed9\u51fa\u70b9 $x$\uff0c\u6c42\u70b9 $x$ \u6240\u5728\u7684\u6811\u7684\u76f4\u5f84  \n2. \u7ed9\u51fa\u70b9 $x,y$\uff0c\u8981\u6c42\u5c06 $x,y$ \u6240\u5728\u7684\u6811\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u5e76\u6784\u6210\u4e00\u68f5\u65b0\u7684\u6811\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u65b0\u7684\u6811\u7684\u76f4\u5f84\u6700\u5c0f\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u7528\u6811\u5f62DP\uff08\u6216bfs\uff09\u6c42\u51fa\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u5e76\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u60c5\u51b5  \n\u7ef4\u62a4 $c$ \u6570\u7ec4\uff1a\u5bf9\u4e8e\u6bcf\u68f5\u6811\u7684\u6839\u8282\u70b9 $x$\uff0c$c[x]=$ \u8be5\u6811\u7684\u76f4\u5f84\u957f\u5ea6\n\n\u63a5\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee $2$\uff08\u5982\u679c\u7ed9\u51fa\u7684\u4e24\u70b9\u5728\u540c\u4e00\u68f5\u6811\u5185\u5219\u5ffd\u7565\uff09\uff0c\u5229\u7528\u5e76\u67e5\u96c6\u627e\u51fa\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9 $x,y$\uff0c\u5e76\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u4e24\u68f5\u6811\uff1b\u5408\u5e76\u540e\u7684\u6811\u7684\u76f4\u5f84\u5219\u4e3a $max\\{ \\lceil\\frac{c[x]}{2}\\rceil  + \\lceil\\frac{c[y]}{2}\\rceil +1,c[x],c[y] \\}$\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u539f\u56e0\n\n\u8981\u60f3\u76f4\u5f84\u6700\u77ed\uff0c\u6211\u4eec\u9009\u62e9\u52a0\u8fb9\u7684\u70b9\u4e00\u5b9a\u8981\u5728\u76f4\u5f84\u4e0a\uff0c\u56e0\u4e3a\u5176\u4ed6\u7684\u70b9\u8d70\u5230\u76f4\u5f84\u8fd8\u8981\u4e00\u6bb5\u8ddd\u79bb\uff0c\u4ece\u800c\u589e\u957f\u4e86\u8def\u5f84\n\n\u90a3\u4e48\u76f4\u5f84\u5c31\u88ab\u9009\u62e9\u7684\u70b9\u5206\u6210\u4e86\u4e24\u6bb5\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u6700\u5c0f\u5316\u8f83\u957f\u7684\u90a3\u4e00\u6bb5\uff0c\u6240\u4ee5\u8981\u8ba9\u9009\u62e9\u7684\u70b9\u5c3d\u91cf\u9760\u8fd1\u76f4\u5f84\u7684\u4e2d\u70b9\u3002\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f \u76f4\u5f84\u957f\u5ea6\u7684\u4e00\u534a\u5411\u4e0a\u53d6\u6574\n\n**\u6ce8\u610f**\uff1a\u540e\u8fb9\u7684 $c[x],c[y]$ \u4e00\u5b9a\u8981\u52a0\u4e0a\uff0c\u4e0d\u7136\u53ea\u6709\u4e09\u5341\u5206\uff08\u50cf\u6211\u4e00\u6837QwQ\uff09  \n\u56e0\u4e3a\u5728\u5408\u5e76\u540e\u7684\u6811\u91cc\uff0c\u539f\u6765\u4e24\u68f5\u6811\u7684\u76f4\u5f84\u8fd8\u662f\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u65b0\u7684\u6811\u7684\u76f4\u5f84\u81f3\u5c11\u662f $max(c[x],c[y])$\n\n\u6bd4\u5982\u8bf4\u4e0b\u56fe\uff1a\n\n![image.png](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDEvMjcvWmROVGdpdjdrcmhDc21jLnBuZw?x-oss-process=image/format,png)\n\n\n$c[x]=4,c[y]=0$  \n\u90a3\u4e48\uff0c\u6309 $\\lceil\\frac{c[x]}{2}\\rceil  + \\lceil\\frac{c[y]}{2}\\rceil +1$ \u7b97\u51fa\u7684\u76f4\u5f84\u5e94\u8be5\u662f $3$\u3002  \n\u800c\u6b63\u786e\u7684\u76f4\u5f84\u8be5\u662f $4$\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u8003\u8651 $c[x],c[y]$\n\n\u6700\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee $1$\uff0c\u8f93\u51fa\u8be5\u6811\u6839\u8282\u70b9\u5bf9\u5e94\u7684 $c$ \u6570\u7ec4\u503c\u5c31\u53ef\u4ee5\u4e86\n\n**AC\u4ee3\u7801**\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int Maxn=300000+10,inf=0x3f3f3f3f;\nint d[Maxn],g[Maxn];\nint f[Maxn],c[Maxn]; // \u8fd9\u91cc\u7684c\u6570\u7ec4\u7684\u542b\u4e49\u4e0d\u662f\u8ddf\u4e0a\u9762\u5bf9\u5e94\u7684\nbool vis[Maxn];\nvector <int> e[Maxn];\nint n,m,q,len;\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nint find(int x)\n{\n\tif(f[x]==x)return x;\n\treturn f[x]=find(f[x]);\n}\nvoid dfs(int x,int fa) // \u6811\u5f62DP\u6c42\u6811\u7684\u76f4\u5f84\n{\n\tint m1=-1,m2=-1;\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tint tmp=d[y]+1;\n\t\td[x]=max(d[x],tmp);\n\t\tif(tmp>m1)m2=m1,m1=tmp;\n\t\telse if(tmp>m2)m2=tmp;\n\t}\n\tg[x]=max(max(0,m1+m2),max(m1,m2));\n\tlen=max(len,g[x]);\n}\nvoid calc(int x) // \u5bfb\u627e\u6811\u7684\u76f4\u5f84\n{\n\tlen=0;\n\tdfs(x,0);\n\tc[x]=len;\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tn=read(),m=read(),q=read();\n\t\n\tfor(int i=1;i<=n;++i)\n\tf[i]=i;\n\t\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read(),y=read();\n\t\tf[find(x)]=find(y);\n\t\te[x].push_back(y);\n\t\te[y].push_back(x);\n\t}\n\t\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(f[i]!=i || vis[i])continue;\n\t\tcalc(i);\n\t\tvis[i]=1;\n\t}\n\t\n\twhile(q--)\n\t{\n\t\tint opt=read(),x=read();\n\t\tif(opt==1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",c[find(x)]);\n\t\t\tcontinue;\n\t\t}\n\t\tint y=read();\n\t\tx=find(x),y=find(y);\n\t\tif(x==y)continue;\n\t\tint tmp=((c[x]+1)>>1)+((c[y]+1)>>1)+1; //\u4e00\u4e2a\u5de7\u5999\u7684\u5411\u4e0a\u53d6\u6574\u7684\u65b9\u6cd5\n\t\t\n\t\ttmp=max(tmp,max(c[x],c[y]));\n\t\t\n\t\tf[find(x)]=find(y);\n\t\tc[find(x)]=tmp;\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1580110449,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF455C \u3010Civilization\u3011"
    },
    {
        "content": "### \u9898\u76ee\u7ffb\u8bd1\n\u539f\u7ffb\u8bd1\u6709\u6bd2  \n\u7ed9\u4f60\u6709$n$\u4e2a\u70b9\u7684\u68ee\u6797\uff0c\u7136\u540e\u4f60\u9700\u8981\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n- \u8be2\u95ee\u67d0\u4e2a\u70b9\u6240\u5728\u7684\u6811\u7684\u76f4\u5f84\n- \u5408\u5e76\u4e24\u68f5\u6811\uff0c\u540c\u65f6\u4f7f\u5408\u5e76\u540e\u7684\u6811\u7684\u76f4\u5f84\u6700\u5c0f\n\n### \u9898\u89e3\n\u611f\u89c9\u6709\u601d\u7ef4\u542b\u91cf\uff0c\u4f46\u662f\u4e0d\u81f3\u4e8e\u5230\u7d2b\u9898qwq\n\n\u8003\u8651\u5230\u6211\u4eec\u53ea\u5173\u5fc3\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u6811\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u53bb\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u5bf9\u5e76\u67e5\u96c6\u7684\u6bcf\u4e00\u68f5\u6811\u7ef4\u62a4\u8fd9\u68f5\u6811\u5bf9\u5e94\u5230\u539f\u56fe\u540e\u7684\u76f4\u5f84\uff0c\u5047\u8bbe\u4e3a$ans_i$\uff0c\u540c\u65f6\u5e76\u67e5\u96c6\u7684\u4e24\u4e2a\u64cd\u4f5c\u5206\u522b\u4e3a`findfa(i),merge(u,v)`\u3002\n\n\u5bf9\u4e8e\u521d\u59cb\u7684\u68ee\u6797\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e38\u89c4\u7684\u4e24\u904ddfs\u6216\u8005\u6811\u5f62dp\u6c42\u51fa\u6bcf\u4e00\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u540c\u65f6\u5c06\u6240\u6709\u5728\u540c\u4e00\u68f5\u6811\u4e2d\u7684\u8282\u70b9`merge`\u8d77\u6765\uff0c\u7528\u4e4b\u524d\u6c42\u7684\u76f4\u5f84\u53bb\u66f4\u65b0\u8fd9\u68f5\u6811\u4e2d\u67d0\u4e2a\u8282\u70b9\u7684`ans[findfa(i)]`\u3002\n\n\u64cd\u4f5c1\u76f4\u63a5\u8f93\u51fa`ans[findfa(i)]`\u5373\u53ef\u3002  \n\n\u96be\u70b9\u662f\u64cd\u4f5c2\uff0c\u6211\u4eec\u9700\u8981\u5408\u5e76\u4e24\u68f5\u6811\u5e76\u4e14\u4fdd\u8bc1\u5408\u5e76\u540e\u7684\u76f4\u5f84\u6700\u5c0f\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8bbe\u8fd9\u4e24\u68f5\u6811\u5206\u522b\u4e3a$u,v$\u3002\n\n\u4e4b\u540e\u6211\u4eec\u8ba4\u4e3a$rt_u,rt_v$\u4e3a\u8fd9\u4e24\u68f5\u6811\u7684\u6839\uff0c\u5e76\u4e14\u5728\u4e4b\u540e\u7684\u5408\u5e76\u4e2d\u8981\u5c06$rt_u,rt_v$\u76f8\u8fde\u3002  \n\u5bb9\u6613\u53d1\u73b0$rt_u,rt_v$\u5747\u4e3a\u5176\u6240\u5728\u6811\u7684\u67d0\u6761\u76f4\u5f84\u7684\u6700\u4e2d\u95f4\u7684\u70b9\u3002 \u6211\u4eec\u8003\u8651\u8bc1\u660e\u3002\n\n\u5c06$u,v$\u5408\u5e76\u540e\u7684\u6811\u7684\u76f4\u5f84\u8981\u4e48\u662f\u5728$u,v$\u4e24\u68f5\u6811\u4e2d\u5355\u72ec\u4ea7\u751f\uff0c\u8981\u4e48\u901a\u8fc7\u65b0\u8fde\u7684\u8fb9\u4ea7\u751f\u3002\u7531\u4e8e$u,v$\u76f4\u5f84\u5df2\u7ecf\u662f\u4e00\u4e2a\u5b9a\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6700\u5c0f\u5316\u540e\u8005\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u65b0\u8fde\u51fa\u6765\u7684\u8fb9\u5f62\u6210\u7684\u53ef\u80fd\u4f5c\u4e3a\u76f4\u5f84\u7684\u8def\u5f84\u7684\u957f\u5ea6\u5c31\u662f$dep_u+dep_v-1$\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece$u,v$\u4e2d\u5206\u522b\u6311\u4e00\u6761\u4ece\u6839\u5f00\u59cb\u7684\u6700\u957f\u7684\u8def\u5f84\uff0c\u5176\u4e2d$dep_u$\u8868\u793a$u$\u8fd9\u68f5\u6811\u7684\u6df1\u5ea6\uff0c\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u6811\u7684\u6df1\u5ea6\u88ab\u5b9a\u4e49\u4e3a1\u3002\n\n\u6700\u5c0f\u5316$dep_u+dep_v-1$\u53ea\u9700\u8981\u4f7f$dep_u,dep_v$\u6700\u5c0f\u5373\u53ef\u3002  \n\n\u8003\u8651\u5230\u6811\u4e2d\u6700\u957f\u8def\u5f84\u5c31\u662f\u76f4\u5f84\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4f7f\u76f4\u5f84\u6298\u534a\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u4ee4$rt_u$\u4e3a\u76f4\u5f84\u7684\u4e2d\u70b9\u3002\u6b64\u65f6$dep_u=\\left\\lfloor\\frac{ans_u+1}2\\right\\rfloor+1$\u3002\n\n\u6b64\u65f6\u662f\u5426\u53ef\u80fd\u5728$u$\u4e2d\u5b58\u5728\u4e00\u6761\u4ece\u6839\u5f00\u59cb\u7684\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u8def\u5f84\u8981\u957f\u4e8e\u6298\u534a\u540e\u7684\u76f4\u5f84\uff1f\n\n\u4e0d\u53ef\u80fd\uff0c\u6211\u4eec\u5047\u8bbe\u5b58\u5728\u8fd9\u6837\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u7528\u8fd9\u6761\u8def\u5f84\u4ee3\u66ff\u539f\u76f4\u5f84\u6298\u534a\u540e\u8f83\u5c0f\u7684\u90a3\u4e00\u6761\u8def\u5f84\u4e00\u5b9a\u4f1a\u4f7f\u627e\u51fa\u7684\u76f4\u5f84\u53d8\u957f\uff0c\u800c\u6c42\u51fa\u7684\u76f4\u5f84\u4e00\u5b9a\u5df2\u7ecf\u662f\u6811\u4e2d\u7684\u6700\u957f\u8def\u5f84\u800c\u4e0d\u53ef\u80fd\u66f4\u957f\uff0c\u4e5f\u5c31\u8bc1\u660e\u8fd9\u6837\u7684\u8def\u5f84\u4e0d\u5b58\u5728\u3002\n\n\u4e8e\u662f\u6211\u4eec\u77e5\u9053$u,v$\u5408\u5e76\u540e\u7684\u6811$x$\u7684ans\u5e94\u8be5\u6709\n$$ ans[x] = \\max(\\left\\lfloor\\frac{ ans[u]+1}2\\right\\rfloor+\\left\\lfloor\\frac{ans[v]+1}2\\right\\rfloor+1,ans[u],ans[v]) $$\n\n\u590d\u6742\u5ea6**\u5927\u6982**\u5728$\\rm O((q+n)logn)$\u6216\u8005$\\rm O((q+n)\\alpha(n))$\u5de6\u53f3\uff0c\u8fd9\u91cc\u53d6\u51b3\u4e8e\u5e76\u67e5\u96c6\u7684\u590d\u6742\u5ea6\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef int int_t;\nconst int_t maxn = 300100;\n\nint_t read(){\n    int_t x = 0,w = 1;char ch = 0;\n    while(!isdigit(ch)) { ch = getchar(); if(ch == '-') w = -1;}\n    while(isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n    return x * w;\n}\n\nvector<int_t> G[maxn];\n\nint_t vis[maxn];\nint_t fa[maxn],ans[maxn];\n\nint_t findfa(int_t rt){return rt == fa[rt] ? rt : fa[rt] = findfa(fa[rt]);}\nvoid merge(int_t a,int_t b){if(findfa(a) != findfa(b)) fa[fa[a]] = fa[b];}\n\nint_t tmp = 0,tmp2 = 0;//tmp\u8bb0\u5f55\u6bcf\u6b21dfs\u65f6\u7684\u6700\u8fdc\u8ddd\u79bb tmp2\u8bb0\u5f55\u6700\u8fdc\u8ddd\u79bb\u662f\u54ea\u4e2a\u70b9\n\nvoid dfs(int_t rt,int_t col,int_t res){\n    if(vis[rt] == col) return;\n    if(res > tmp) tmp = res,tmp2 = rt;\n    vis[rt] = col;\n    for(int_t to : G[rt]) merge(rt,to),dfs(to,col,res+1);    \n}\n\nint main(){\n    int_t n = read(),m = read(),q = read();\n    for(int_t i=1;i<=n;i++) fa[i] = i;\n    while(m--){\n        int_t u = read(),v = read();\n        G[u].push_back(v); G[v].push_back(u);\n    }\n    for(int_t i=1;i<=n;i++) if(!vis[i]) {\n        tmp = 0,tmp2 = i;\n        dfs(i,i,0);\n        tmp = 0;\n        dfs(tmp2,tmp2,0);\n        ans[findfa(i)] = tmp;\n    }\n    while(q--){\n        int_t opt = read();\n        if(opt == 1) printf(\"%d\\n\",ans[findfa(read())]);\n        else{\n            int_t u = read(), v = read();\n            u = findfa(u),v = findfa(v);\n            if(u == v) continue;\n            fa[u] = v;\n            ans[v] = max(max(ans[v],ans[u]),(ans[u] + 1) / 2 + (ans[v] + 1) / 2 + 1);\n        }\n    }\n}\n```\t",
        "postTime": 1569194245,
        "uid": 74020,
        "name": "Rainy_chen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF455C \u3010Civilization\u3011"
    },
    {
        "content": "\u597d\u9898\u554a\u2026\u2026\n\n\u53c8\u662f\u4e00\u9053\u8ba9\u4eba\u5934\u79c3\u7684\u597d\u9898\u554a\u2026\u2026\n\n\u771f\u662f\u6109\u60a6\u2026\u2026\n\n\u5c45\u7136\u5361memset\u2026\u2026\n\n\u770b\u5b8c\u8bb0\u5f97\u70b9\u8d5e\u554a\uff01\n\n#### \u601d\u8def\n\n~~My vegetable has exploded\u2026\u2026~~\u54b3\u54b3\u2026\u2026\u770b\u9898\n\n\u6811\u7684\u76f4\u5f84\u5927\u5bb6\u90fd\u77e5\u9053\u5427\u2026\u2026\u4e0d\u77e5\u9053\u7684\u53ef\u4ee5\u770b[\u8fd9\u7bc7\u535a\u5ba2](https://big-news.github.io/2019/04/11/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/)\u3002\n\n\u8fd9\u91cc\uff0c\u6211\u7528\u7684\u662f\u8dd1\u4e24\u904d\u5927\u6cd5\u5e08\uff08$dfs$\uff09\u6c42\u76f4\u5f84\u3002\n\n\u6811\u7684\u5408\u5e76\uff0c\u90a3\u4e48\uff0c\u5f88\u660e\u663e\uff0c\u6211\u4eec\u8981\u7528\u5e76\u67e5\u96c6\u6765\u89e3\u51b3\u95ee\u9898\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u6839\u636e\u5df2\u77e5\u7684\u8fb9\uff0c\u6765\u5c06\u5df2\u77e5\u7684\u6240\u6709\u6811\uff08**\u6ce8\u610f\u96c6\u5408\u7684\u5408\u5e76**\uff09\u90fd\u5efa\u597d\u3002\u7136\u540e\u5bf9\u4e8e\u8fd9\u6bcf\u4e2a\u6811\uff0c\u90fd\u5355\u72ec\u8dd1\u4e24\u904d\u5927\u6cd5\u5e08\uff0c\u6c42\u51fa\u8fd9\u68f5\u6811\uff08**\u8fd9\u4e2a\u96c6\u5408**\uff09\u6240\u62e5\u6709\u7684\u76f4\u5f84\uff08\u4e5f\u5c31\u662f\u7b2c\u4e00\u95ee\uff09\u3002\n\n\u54e6\u5bf9\uff0c\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u5728\u8dd1\u8fd9\u51e0\u904d\u5927\u6cd5\u5e08\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u7528$memset$\u521d\u59cb\u5316$vis$\u6570\u7ec4\uff0c\u76f4\u63a5\u5728\u5927\u6cd5\u5e08$return$\u524d$vis[x]=false$\u5373\u53ef\uff0c\u5426\u5219\u4f1aT\u5f97\u5f88\u60e8\u3002\n\n\u7136\u540e\uff0c\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u5f53$opt=1$\u65f6\uff0c\u76f4\u63a5\u8f93\u51fax\u6240\u5728\u7684\u6811\uff08\u96c6\u5408\uff09\u6240\u62e5\u6709\u7684\u76f4\u5f84\uff08$dis[find(x)]$\uff09\u5373\u53ef\u3002\n\n\u5f53$opt=2$\u65f6\uff0c\u5c06x\u548cy\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76($merge(x,y)$)\uff0c\u66f4\u65b0\u5408\u5e76\u540e\u7684\u6811\uff08\u96c6\u5408\uff09\u6240\u62e5\u6709\u7684\u76f4\u5f84\u5373\u53ef\u3002\n\n\u600e\u4e48\u66f4\u65b0\u5462\uff1f\u8fd9\u5c31\u662f\u8fd9\u4e2a\u9898\u7684\u96be\u70b9\u6240\u5728\u4e86\u5427\u2026\u2026~~\u4e5f\u8bb8~~\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u8bc1\u660e\uff0c\u4e00\u4e2a\u70b9\u8d8a\u9760\u8fd1\u4e00\u4e2a\u94fe\uff08\u76f4\u5f84\uff09\u7684\u4e2d\u70b9\uff0c\u8fd9\u4e2a\u70b9\u6240\u80fd\u8fbe\u5230\u4e24\u7aef\u7684\u6700\u957f\u8ddd\u79bb\u6700\u77ed\u3002\n\n\u6765\u4e2a\u56febb\u4e00\u4e0b\uff1a\n\n![graph.png](https://img.langlangago.xyz/2019/06/25/5d11ce16eb380.png)\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u8be5\u94fe\u4e2d\uff0c\u4e24\u7aef\u4e3a$0$\u548c$4$\u3002\n\n\u6211\u4eec\u5047\u5982\u53d6$0$\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48$0$\u5230\u4e24\u7aef\u7684\u6700\u957f\u8ddd\u79bb\u4e3a$0$\u5230$4$\u7684\u8ddd\u79bb\uff0c\u4e3a$4$.\n\n\u6211\u4eec\u5047\u5982\u53d6\u6700\u9760\u8fd1\u8be5\u94fe\u7684\u4e2d\u70b9\u7684$2$\uff08\u4e5f\u5c31\u662f\u4e2d\u70b9\uff09\uff0c\u90a3\u4e48$2$\u5230\u4e24\u7aef\u7684\u6700\u957f\u8ddd\u79bb\u4e3a$2$\u5230$4$\u7684\u8ddd\u79bb\uff0c\u4e3a$2$\u3002\u4e5f\u5c31\u662f\u8fd9\u4e2a\u70b9\u6240\u80fd\u8fbe\u5230\u4e24\u7aef\u7684\u6700\u957f\u8ddd\u79bb\u6700\u77ed\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8fde\u63a5\u8fd9\u4e24\u68f5\u6811\u4e2d\u7684\u76f4\u5f84\u4e0a\u6700\u9760\u8fd1\u4e2d\u70b9\u7684\u4e24\u4e2a\u70b9\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u201c\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6\u6700\u5c0f\u201d\u3002\n\n\u4e5f\u5c31\u662f$dis[yy]=max(max((dis[xx]+1)/2+(dis[yy]+1)/2+1,dis[xx]),dis[yy]);$\n\n$xx$\u4e3a$find(x)$,$yy$\u4e3a$find(y)$\n\n#### code\n\n```c++\n#include<cstdio>\n#include<cstring>\n\n#define in inline\n#define re register\n#define mian int main()\n\nconst int maxn=3e6+10;\n\nstruct edge{\n\tint to,next;\n}map[maxn];\n\nint n,m,q,fa[maxn],maxx,dis[maxn],st;\nint cnt,head[maxn];\nbool vis[maxn],vis2[maxn];\n\nin int read(){\n    char ch=getchar();int x=0,f=1;\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\nin void add(int x,int y){\n\tmap[++cnt].to=y;\n\tmap[cnt].next=head[x];\n\thead[x]=cnt;\n}\n\nin int find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\nin void merge(int x,int y){\n\tint xx=find(x),yy=find(y);\n\tfa[xx]=yy;\n}\n\nin void dfs(int x,int val){\n\tif(maxx<val) maxx=val,st=x;\n\tfor(int i=head[x];i;i=map[i].next){\n\t\tint y=map[i].to;\n\t\tif(!vis[y]){\n\t\t\tvis[y]=true;\n\t\t\tdfs(y,val+1);\n\t\t}\n\t}\n\tvis[x]=false;//TLE\u7684\u60e8\u75db\u6559\u8bad\n}\n\nin void dfs2(int x,int val){\n\tif(maxx<val) maxx=val;\n\tfor(int i=head[x];i;i=map[i].next){\n\t\tint y=map[i].to;\n\t\tif(!vis[y]){\n\t\t\tvis[y]=true;\n\t\t\tdfs2(y,val+1);\n\t\t}\n\t}\n\tvis[x]=false;//TLE\u7684\u60e8\u75db\u6559\u8bad\n}\n\nin int max(int a,int b){return a>b?a:b;}\n\nmian{\n\tn=read(),m=read(),q=read();\n\tfor(re int i=1;i<=n;i++) fa[i]=i;//\u521d\u59cb\u5316 \n\tfor(re int i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tadd(x,y),add(y,x);\n\t\tmerge(x,y);\n\t}\n\tfor(re int i=1;i<=n;i++){\n\t\tint x=find(i);\n\t\tif(vis2[x]) continue;\n\t\tmaxx=-1;\n\t\t//memset(vis,false,sizeof(vis));->TLE\u7684\u7f6a\u9b41\u7978\u9996\n\t\tvis[x]=true;\n\t\tdfs(x,0);//\u5927\u6cd5\u5e081\n\t\tmaxx=-1;\n\t\t//memset(vis,false,sizeof(vis));->TLE\u7684\u7f6a\u9b41\u7978\u9996\n\t\tvis[st]=true;\n\t\tdfs2(st,0);//\u5927\u6cd5\u5e082\n\t\tvis2[x]=true;\n\t\tdis[x]=maxx;//\u5c06\u8fd9\u68f5\u6811\uff08\u8fd9\u4e2a\u96c6\u5408\uff09\u6240\u62e5\u6709\u7684\u76f4\u5f84\u8bb0\u5f55\u4e0b\u6765\n\t}\n\tfor(re int i=1;i<=q;i++){\n\t\tint opt=read(),x=read(),y;\n\t\tif(opt==1) printf(\"%d\\n\",dis[find(x)]);\n\t\telse{\n\t\t\ty=read();int xx=find(x),yy=find(y);\n\t\t\tif(xx==yy) continue;\n\t\t\tdis[yy]=max(max((dis[xx]+1)/2+(dis[yy]+1)/2+1,dis[xx]),dis[yy]);\n\t\t\tmerge(x,y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u66f4\u597d\u7684\u4f53\u9a8c\uff1ahttps://www.langlangago.xyz/index.php/archives/76/\n",
        "postTime": 1561449189,
        "uid": 70178,
        "name": "noall",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF455C \u3010Civilization\u3011"
    },
    {
        "content": "[\u66f4\u795e\u5947\u7684\u9605\u8bfb\u4f53\u9a8c](https://chen-jia-liang.gitee.io/blog/2020/06/27/%E9%A2%98%E8%A7%A3-CF455C-%E3%80%90Civilization%E3%80%91/)\n## \u9898\u610f\n\u7ed9\u51fa\u4e00\u7247\u68ee\u6797\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n1. \u67e5\u8be2\u67d0\u68f5\u6811\u7684\u76f4\u5f84\n1. \u628a\u4e24\u9897\u6570\u5408\u5e76\u5e76\u4f7f\u76f4\u5f84\u6700\u5c0f\n\n\n\n\n## \u9898\u89e3\n\u9996\u5148\uff0c\u5bf9\u4e8e\u4e24\u68f5\u6811\uff0c\u5176\u76f4\u5f84\u5206\u522b\u662f$\\ ans_a\\ \\text{\u4e0e}\\ ans_b\\ $\uff0c\u90a3\u4e48\u751f\u6210\u7684\u6570\u7684\u76f4\u5f84\u6700\u5c0f\u4e3a\n$$\\max(ans_a,ans_b)$$\n\u7b80\u5355\u6765\u8bf4\uff0c\u5176\u76f4\u5f84\u4e0d\u80af\u80fd\u8d8a\u5408\u5e76\u8d8a\u5c0f\n\n\u5728\u4e24\u68f5\u6811\u4e0a\u5206\u522b\u9009\u4e24\u70b9\uff0c\u90a3\u4e48\u6b64\u65f6\u6570\u7684\u76f4\u5f84\u8fd8\u6709\u53ef\u80fd\u53d8\u4e3a \u4ee5$a$\u4e3a\u6839\u7684\u6811\u7684\u6df1\u5ea6\u4ee5$b$\u4e3a\u6839\u7684\u6811\u7684\u6df1\u5ea6+1\uff0c\u5c31\u50cf\u4e0b\u56fe\u4e00\u6837\n![\u4e00\u5f20\u5947\u5947\u602a\u602a\u7684\u56fe\u7247](https://cdn.luogu.com.cn/upload/image_hosting/d9l60429.png)\n\n\u6240\u4ee5\u6b64\u65f6\uff0c\u6211\u4eec\u5e0c\u671b$a,b$\u4e24\u70b9\u80fd\u591f\u4f7f\u6811\u7684\u6df1\u5ea6\u6700\u5c0f\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u8ba9$a,b$\u90fd\u4e3a\u76f4\u5f84\u7684\u4e2d\u70b9(\u5982\u679c\u53d6\u4e0d\u5230\u5c31\u53d6\u65c1\u8fb9\u4e24\u4e2a),\u6b64\u65f6\u4e24\u8fb9\u7684\u6df1\u5ea6\u90fd\u4e3a$\\lceil\\frac {ans} 2\\rceil$\uff0c\u6700\u7ec8\u5408\u5e76\u65f6\n$$ans'=\\max\\{ans_a,ans_b,\\lceil\\frac {ans_a} 2\\rceil+\\lceil\\frac {ans_b} 2\\rceil+1\\}$$\n\n\u81f3\u4e8e\u5408\u5e76\u7684\u7ef4\u62a4\u5c31\u5f88\u7b80\u5355\u4e86\uff0c[\u5e76\u67e5\u96c6](https://www.luogu.com.cn/problem/P3367)\uff0c\u5408\u5e76\u4e00\u4e0b\u5c31ok\u4e86\n## \u4ee3\u7801\n```cpp\n #pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include<bits/stdc++.h>\nnamespace in{\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\tinline int getc(){\n\t    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n\t}\n\ttemplate <typename T>inline void read(T& t){\n\t    t=0;int f=0;char ch=getc();\n\t    while (!isdigit(ch)){\n\t        if(ch=='-')f = 1;\n\t        ch=getc();\n\t    }\n\t    while(isdigit(ch)){\n   \t    \tt=t*10+ch-48;\n   \t    \tch = getc();\n   \t\t}\n\t\tif(f)t=-t;\n\t}\n\ttemplate <typename T,typename... Args> inline void read(T& t, Args&... args){\n\t    read(t);read(args...);\n\t}\n}\nnamespace out{\n\tchar buffer[1<<21];\n\tint p1=-1;\n\tconst int p2 = (1<<21)-1;\n\tinline void flush() {\n\t\tfwrite(buffer,1,p1+1,stdout),\n\t\tp1=-1;\n\t}\n\tinline void putc(const char &x) {\n\t\tif(p1==p2)flush();\n\t\tbuffer[++p1]=x;\n\t}\n\ttemplate <typename T>void write(T x) {\n\t\tstatic char buf[15];\n\t\tstatic int len=-1;\n\t\tif(x>=0){\n\t\t\tdo{\n    \t\t\tbuf[++len]=x%10+48,x/=10;\n    \t\t}while (x);\n\t\t}else{\n    \t\tputc('-');\n\t\t\tdo {\n    \t\t\tbuf[++len]=-(x%10)+48,x/=10;\n\t\t\t}while(x);\n\t\t}\n\t\twhile (len>=0)\n\t\t\tputc(buf[len]),--len;\n\t}\n}\nusing namespace std;\nconst int maxn=3e5+100;\nint fa[maxn];\nint getfa(int x){\n\tif(x==fa[x])return x;\n\treturn fa[x]=getfa(fa[x]);\n}\nstruct node{int v,nxt;}e[maxn<<1];\nint tot=0,head[maxn];\ninline void add(int u,int v){e[++tot]=(node){v,head[u]};head[u]=tot;}\nint maxp,dis[maxn];\n#define v e[i].v\nvoid dfs(int u,int fa){\n\t//\u5bfb\u627e\u6700\u8fdc\u7684\u70b9\n\tif(dis[u]>dis[maxp])maxp=u;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tif(v==fa)continue;\n\t\tdis[v]=dis[u]+1,dfs(v,u);\n\t} \n}\nint n,m,q,x,y;\nbool vis[maxn];\nint c[maxn];\nsigned main(){\n\tin::read(n,m,q);\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t\tin::read(x,y),fa[getfa(x)]=getfa(y),add(x,y),add(y,x);\n\tfor(int i=1;i<=n;i++)\n\t\tif(!vis[getfa(i)]){\n\t\t\tdis[maxp=0]=-1;dfs(i,0);\n\t\t\tint st=maxp;dis[maxp=0]=-1;dfs(st,0);\n\t\t\tc[getfa(i)]=dis[maxp]-dis[st],vis[getfa(i)]=true;\n\t\t}\n\tfor(int i=1;i<=q;i++){\n\t\tint opt;in::read(opt);\n\t\tif(opt==1){\n\t\t\tin::read(x);\n\t\t\tout::write(c[getfa(x)]);out::putc('\\n');\n\t\t}\n\t\telse{\n\t\t\tin::read(x,y);\n\t\t\tif(getfa(x)==getfa(y))continue;\n\t\t\tc[getfa(y)]=max((c[getfa(x)]+1)/2+(c[getfa(y)]+1)/2+1,max(c[getfa(x)],c[getfa(y)]));\n\t\t\tfa[getfa(x)]=getfa(y);\n\t\t}\n\t}\n\tout::flush();\n\treturn 0;\n}\n```",
        "postTime": 1593231320,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF455C \u3010Civilization\u3011"
    },
    {
        "content": "##\n\u795e\u5947\u7684\u6811\u7684\u76f4\u5f84+\u5e76\u67e5\u96c6\u65b9\u6cd5\uff0c\u4e0d\u5f97\u4e0d\u8bf4CF\u7684\u9898\u771f\u7684\u5f88\u8003\u5bdf\u601d\u7ef4\uff1b\n\n\u6811\u7684\u76f4\u5f84\u67092\u79cd\u6c42\u6cd5\uff0c\u4e00\u79cd\u662f2\u6b21bfs||dfs\uff0c\u7b2c\u4e8c\u79cd\u662f\u6811\u5f62DP,2\u79cd\u65b9\u6cd5\u5404\u6709\u4f18\u7f3a\u70b9\uff0c\u7b2c\u4e00\u79cd\u53ef\u4ee5\u8bb0\u5f55\u8def\u5f84,\u4e5f\u5c31\u662f\u76f4\u5f84\u4e0a\u6709\u54ea\u51e0\u4e2a\u70b9\uff0c\u7f3a\u70b9\u662f\u6ca1\u6cd5\u5904\u7406\u5e26\u6709\u8d1f\u8fb9\u6743\u7684\u95ee\u9898\uff1b\u800c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7684\u4f18\u7f3a\u70b9\u548c\u7b2c\u4e00\u79cd\u521a\u597d\u76f8\u53cd\uff0c\u800c\u6709\u7684\u6bd2\u7624\u9898\u521a\u597d\u4e24\u79cd\u65b9\u6cd5\u90fd\u8981\u4f1a\u6240\u4ee5\u5c3d\u91cf\u90fd\u638c\u63e1\u4e00\u4e0b\u5427\uff0c\u6211\u8fd9\u4e2a\u9898\u7684\u65b9\u6cd5\u662f\u6811\u5f62DP\uff08\u5f53\u7136\u4e0d\u662f\u56e0\u4e3a\u597d\u5199QwQ\uff09;\n\n\u8fd9\u4e2a\u662f\u6811\u5f62DP\u7684\u4e00\u4e2a\u6a21\u677f\n```\nvoid tree_dp(int x)\n{\n\tvis[x]=1;\n\tfor(int i=head[x];i;i=nexts[i])\n\t{\n\t\tint v=ver[i];\n\t\tif(vis[v])continue;\n\t\ttree_dp(v);\n\t\tans=max(ans,dp[x]+dp[v]+edge[i]);\n\t\tdp[x]=max(dp[x],dp[v]+edge[i]);\n\t}\n}\n```\n\u8fd9\u4e2a\u662fBFS\u7684\u6a21\u677f\n```\nvoid do_bfs(int x)\n{\n    memset(vis,0,sizeof(vis));\n    queue<int>q;\n    memset(d,0,sizeof(d));\n    q.push(x);\n    vis[x]=1;\n    while(!q.empty())\n    {\n        w=q.front();q.pop();\n        for(int i=head[w];i;i=nexts[i])\n        {\n            int y=ver[i];\n            if(vis[y])continue;\n            dis[y]=w;\n            d[y]=d[w]+edge[i];\n            q.push(y);\n            vis[y]=1;\n        }\n    }\n}\n//\u5206\u884c(\u4e0b\u9762\u5e94\u8be5\u5728\u4e3b\u51fd\u6570\u91cc\u5934\uff09\n maxx=0;\n    do_bfs(1);\n    for(int i=1;i<=n;i++)\n    {\t\n        if(d[i]>maxx)\n        {\n            maxx=d[i];\n            w=i;\n        }\n    }\n    memset(dis,0,sizeof(dis));\n    do_bfs(w);\n    maxx=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(d[i]>maxx)\n        {\n            maxx=d[i];\n            w=i;\n        }\n}\n//2\u6b21bfs,\u7b2c\u4e00\u6b21\u6c42\u51fa\u4ece\u4efb\u610f\u8282\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb\u7684\u70b9\u662f\u54ea\u4e00\u4e2a\uff0c\u7b2c\u4e8c\u6b21\u4ece\u6240\u6c42\u7684\u6700\u8fdc\u8ddd\u79bb\u7684\u70b9\u518d\u8dd1\u4e00\u6b21bfs,\u6240\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb\u7684\u70b9\u7684\u8def\u5f84\u5c31\u662f\u6811\u7684\u76f4\u5f84\u4e86;\u6b63\u786e\u6027\u5f88\u663e\u7136\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u4e2a\u56fe\u8bd5\u8bd5\uff1b\n```\n\u8fd9\u4e2a\u9898\u7684\u4ee3\u7801\uff0c\u5176\u5b9e\u53ea\u8981\u4f1a\u4e86\u6811\u7684\u76f4\u5f84\u548c\u5e76\u67e5\u96c6\uff0c\u81ea\u5df1\u5199\u5e76\u4e0d\u96be\uff1b\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\nconst int N=6*100000+5;\n\nint n,m,p;\n\nint head[N],ver[N],nexts[N],cnt=0,dis[N],dp[N],vis[N];\n\nvoid add(int x,int y)\n{\n\tver[++cnt]=y,nexts[cnt]=head[x],head[x]=cnt;\n}\nint fa[N];\nint vix[N];\nint find(int x)\n{\n\tif(fa[x]==x)return x;\n\treturn fa[x]=find(fa[x]);\n}//\u7b80\u5355\u7684\u5e76\u67e5\u96c6;\nint ans=0;\nvoid tree_dp(int x)\n{\n\tvis[x]=1;\n\tfor(int i=head[x];i;i=nexts[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(vis[y])continue;\n\t\ttree_dp(y);\n\t\tans=max(ans,dp[x]+dp[y]+1);\n\t\tdp[x]=max(dp[x],dp[y]+1);\n\t}\n}//\u6811\u5f62DP\u6c42\u6811\u7684\u76f4\u5f84\uff1b\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor(int i=1;i<=n;i++)fa[i]=i;//\u521d\u59cb\u5343\u4e07\u4e0d\u80fd\u5fd8\u4e86\uff1b\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t\tint xx=find(x),yy=find(y);\n\t\tif(xx!=yy)fa[xx]=yy;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=find(i);\n\t\tif(vix[x])continue;\n\t\tvix[x]=1;\n\t\tans=0;\n\t\ttree_dp(x);\n\t\tdis[x]=ans;\n\t}\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tint p;\n\t\tscanf(\"%d\",&p);\n\t\tif(p==2)\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tint xx=find(x),yy=find(y);\n\t\t\tif(xx!=yy)\n\t\t\t{\n\t\t\t\tfa[xx]=yy;\n\t\t\t\tdis[yy]=max(max(dis[xx],dis[yy]),(dis[xx]+1)/2+(dis[yy]+1)/2+1);//\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u81ea\u5df1\u753b\u753b\u56fe\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e86\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\u8fd9\u4e2a\u55bd\uff1b\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint z;\n\t\t\tscanf(\"%d\",&z);\n\t\t\tint zz=find(z);\n\t\t\tcout<<dis[zz]<<endl;\n\t\t}\n\t}\n}\n```",
        "postTime": 1551354160,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF455C \u3010Civilization\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/455/problem/C)\n\n\n> \u7ed9\u51fa\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u68ee\u6797\uff0c\u6709 $q$ \u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u6709\u4e24\u79cd\uff1a\n>\n> 1. \u67e5\u8be2\u70b9 $x$ \u6240\u5728\u6811\u7684\u76f4\u5f84\n> 2. \u8981\u6c42\u6dfb\u52a0\u4e00\u6761\u8fb9\uff0c\u5408\u5e76\u70b9 $x$ \u548c $y$ \u6240\u5728\u7684\u4e24\u68f5\u6811\uff0c\u4f7f\u5408\u5e76\u540e\u6811\u7684\u76f4\u5f84\u6700\u5c0f\u3002\uff08\u5982\u679c $x$ \u548c $y$ \u5728\u540c\u4e00\u68f5\u6811\u4e2d\u5219\u4e0d\u7528\u64cd\u4f5c\uff09\n>\n> $n,m,q \\le 3\\cdot 10^5$\n\n\u8bbe\u6dfb\u52a0\u7684\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e3a $u,v$\uff0c\u4e24\u68f5\u6811\u76f4\u5f84\u5206\u522b\u4e3a $d_1,d_2$\u3002\n\n\u4f7f\u5408\u5e76\u540e\u6811\u7684\u76f4\u5f84\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u4f7f\u7ecf\u8fc7 $u,v$ \u7684\u6700\u957f\u8def\u5f84\u6700\u77ed\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\u4e3a $dis(u,u')+dis(v,v')+1$\uff0c\u5176\u4e2d $u',v'$ \u5206\u522b\u662f\u5408\u5e76\u524d\u4e24\u68f5\u6811\u4e2d\u7684\u70b9\u3002\n\n\u8003\u8651\u6700\u5c0f\u5316 $dis(u,u')$\uff0c\u90a3\u4e48\u5c31\u662f\u8981\u5728\u627e\u5230\u4e00\u4e2a $u$\uff0c\u4f7f\u5f97\u5b83\u5230\u6811\u4e2d\u5176\u4ed6\u70b9\u8ddd\u79bb\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ecf\u5178\u7ed3\u8bba\uff0c\u4ece\u4e00\u4e2a\u70b9\u5230\u6811\u4e2d\u5176\u4ed6\u7684\u6700\u957f\u8def\u5f84\uff0c\u53e6\u4e00\u7aef\u70b9\u4e00\u5b9a\u662f\u8fd9\u68f5\u6811\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u9009\u7684 $u$ \u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e2d\u70b9\uff08\u82e5\u76f4\u5f84\u4e3a\u5947\u6570\u5219\u4e2d\u95f4\u4e24\u4e2a\u70b9\u4efb\u53d6\u4e00\u4e2a\uff09\u3002\u56e0\u6b64 $\\max(dis(u,u'))=\\left\\lceil\\dfrac{d_1}{2}\\right\\rceil$\u3002\n\n\u6240\u4ee5\uff0c\u5408\u5e76\u540e\u6811\u7684\u6700\u5c0f\u76f4\u5f84\u5c31\u662f $\\max\\left(d1,d2,\\left\\lceil\\dfrac{d_1}{2}\\right\\rceil+\\left\\lceil\\dfrac{d_2}{2}\\right\\rceil\\right)$\u3002\n\n\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u5373\u53ef\u3002\n\n## Code\n\n```cpp\nint n, m, q, op, u, v;\nvector<int> g[N];\nint fa[N];\nint Find(int i) {\n\tif(fa[i] == i) return i;\n\telse return fa[i] = Find(fa[i]);\n}\nint mx, id;\nint d[N];\nvoid dfs(int x, int f, int cnt) {\n\tif(cnt > mx) mx = cnt, id = x;\n\tfor(int y: g[x]) {\n\t\tif(y == f) continue;\n\t\tdfs(y, x, cnt + 1);\n\t}\n}\nint div2(int x) {\n\tif(!x) return 0;\n\telse return (x - 1) / 2 + 1;\n}\nvoid solve() {\n\tcin >> n >> m >> q;\n\trep(i, n) fa[i] = i;\n\trep(i, m) {\n\t\tcin >> u >> v;\n\t\tu--, v--;\n\t\tg[u].pb(v), g[v].pb(u);\n\t\tfa[Find(u)] = Find(v);\n\t}\n\tmemset(d, -1, sizeof(d));\n\trep(i, n) if(d[Find(i)] == -1) {\n\t\tmx = -1;\n\t\tdfs(i, -1, 0);\n\t\tmx = -1;\n\t\tdfs(id, -1, 0);\n\t\td[Find(i)] = mx;\n\t}\n\twhile(q--) {\n\t\tcin >> op;\n\t\tif(op == 1) {\n\t\t\tcin >> u;\n\t\t\tu--;\n\t\t\tcout << d[Find(u)] << '\\n';\n\t\t}\n\t\telse {\n\t\t\tcin >> u >> v;\n\t\t\tu--, v--;\n\t\t\tif(Find(u) == Find(v)) continue;\n\t\t\telse {\n\t\t\t\td[Find(v)] = max(max(d[Find(u)], d[Find(v)]), div2(d[Find(u)]) + div2(d[Find(v)]) + 1);\n\t\t\t\tfa[Find(u)] = Find(v);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1680005848,
        "uid": 407564,
        "name": "Rushroom",
        "ccfLevel": 7,
        "title": "CF455C Civilization"
    },
    {
        "content": "\u67e5\u8be2\u4e00\u4e2a\u70b9\u7684\u76f4\u5f84\u4e0d\u96be\uff0c\u6211\u4eec\u8003\u8651\u600e\u6837\u5408\u5e76\u4e24\u68f5\u6811\u4f7f\u5f97\u65b0\u6811\u7684\u76f4\u5f84\u6700\u5c0f\u3002\n\n\u8bb0\u4e24\u68f5\u6811\u5206\u522b\u4e3a $i, j$\uff0c\u76f4\u5f84\u4e3a $d_i, d_j$\u3002\u56e0\u4e3a\u539f\u6765\u4e24\u9897\u6811\u5b58\u5728\uff0c\u6240\u4ee5\u76f4\u5f84\u81f3\u5c11\u662f $\\max{\\{d_i, d_j\\}}$\uff080\uff09\u3002\n\n\u5047\u8bbe\u8fde\u63a5\u70b9\u5bf9 $(u, v)$\uff0c\u90a3\u4e48\u6839\u636e\u76f4\u5f84\u7684\u6027\u8d28\uff08\u4e00\u4e2a\u70b9\u80fd\u5230\u8fbe\u6700\u8fdc\u7684\u70b9\u662f\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\uff09\uff0c\u901a\u8fc7\u8fd9\u6761\u8fb9\u7684\u6700\u5927\u8def\u5f84\u5373\u4e3a **$u$ \u5230\u6811 $i$ \u76f4\u5f84\u4e24\u7aef\u70b9\u8ddd\u79bb\u7684\u8f83\u5927\u503c\uff081\uff09** + **$v$ \u5230\u6811 $j$ \u76f4\u5f84\u4e24\u7aef\u70b9\u8ddd\u79bb\u7684\u8f83\u5927\u503c\uff082\uff09** + 1\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u6700\u5c0f\u5316\uff081\uff09\uff082\uff09\u7684\u503c\u3002\n\n\u5047\u5982 $u$ \u4e0d\u5728\u76f4\u5f84\u4e0a\uff0c\u90a3 $u$ \u5230\u76f4\u5f84\u4e24\u7aef\u70b9\u7684\u8def\u5f84\u4e00\u5b9a\u662f\u7ecf\u8fc7\u4e00\u4e9b\u8fb9\u5230\u8fbe\u76f4\u5f84\u7684\u94fe\u4e0a\u518d\u8d70\u5230\u76f4\u5f84\uff0c\u4e00\u5b9a\u4e0d\u4f18\u3002\u56e0\u6b64 $u$ \u8981\u5728\u76f4\u5f84\u4e0a\u3002\u663e\u7136\uff0c\u5f53 $u$ \u662f\u76f4\u5f84\u7684\u4e2d\u70b9\u7684\u65f6\u5019\uff081\uff09\u5f0f\u6700\u5c0f\u3002$v$ \u540c\u7406\u3002\n\n\u5f53 $d_i$ \u4e3a\u5947\u6570\u65f6\u5f88\u597d\u5904\u7406\uff0c\u5076\u6570\u65f6\uff081\uff09\u5f0f\u5219\u4f1a\u662f $\\lceil d_i / 2 \\rceil$ (\u9700\u8981\u53d6\u8f83\u957f\u4e00\u7aef\uff09\u3002$v$ \u540c\u7406\u3002\n\n\u6700\u7ec8\u7b54\u6848\u5c31\u662f $\\lceil d_i / 2 \\rceil + \\lceil d_j / 2 \\rceil + 1$\u3002\n\u5f53 $d_i = d_j$ \u4e14\u662f\u5947\u6570\u65f6\uff0c\u6709\u66f4\u4f18\u7684\u8fde\u6cd5\uff08\u4e00\u6761\u4e0a\u53d6\u6574\uff0c\u4e00\u6761\u4e0b\u53d6\u6574\uff0c\u518d +1\uff09\uff0c\u7136\u800c\u957f\u5ea6\u4e5f\u7b49\u4e8e $d_i$\u3002\n\n\u6700\u7ec8\u53d6\u4e2a max \u5373\u53ef\u3002\n\n[\u4e11\u964b\u7684\u4ee3\u7801](https://www.luogu.com.cn/paste/mn4y2uzs)",
        "postTime": 1645007054,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] CF455C"
    },
    {
        "content": "\u4ee5\u4e0b\u7684 \u201c \u6811 $x$ \u201d\u5747\u4ee3\u6307 $x$ \u8282\u70b9\u6240\u5728\u7684\u6811\u3002\n\n### \u9898\u610f\uff1a\n\n$n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u4e00\u4e2a\u68ee\u6797\uff0c\u5171 $q$ \u6b21\u8be2\u95ee\uff0c\u505a\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1.\u8f93\u51fa \u6811 $x$ \u7684\u76f4\u5f84\u3002\n\n2.\u5c06 \u6811 $x$ \u548c \u6811 $y$ \u7684\u67d0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u8fb9\u5f62\u6210\u65b0\u6811\uff0c\u8981\u6c42\u8fd9\u4e2a\u65b0\u6811\u7684\u76f4\u5f84\u6700\u5c0f\uff08\u82e5\u4e24\u8005\u672c\u6765\u5c31\u5728\u540c\u4e00\u68f5\u6811\u4e2d\u5219\u5ffd\u7565\u6b64\u64cd\u4f5c\uff09\u3002\n\n$1 \\leqslant m < n \\leqslant 3 \\cdot 10^5$\n\n$1 \\leqslant q \\leqslant 3 \\cdot 10^5$\n\n### \u89e3\u6cd5\uff1a\n\n#### \u66b4\u529b\u89e3\u6cd5\uff1a\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u66b4\u529b\u505a\u6cd5\uff1a\n\n\u5173\u4e8e\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u5728\u4e00\u68f5\u6811\u4e2d\uff0c\u5f88\u660e\u663e\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\n\n\u9884\u5904\u7406\uff1a\u6bcf\u68f5\u6811\u7528\u4e24\u6b21 dfs \u6c42\u6811\u7684\u76f4\u5f84\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$ \u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c\u4e00\uff1a\u53ef\u4ee5\u7528\u4e24\u6b21 dfs \u6c42\u6811\u7684\u76f4\u5f84 \uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3a $O(n)$ \uff0c\u6267\u884c $q$ \u6b21\u590d\u6742\u5ea6\u4e3a $O(nq)$ \u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c\u4e8c\uff1a\u679a\u4e3e\u4e24\u68f5\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u8fde\u8fb9\u4e4b\u540e\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u627e\u5230\u6700\u5c0f\u76f4\u5f84\u7684\u8fde\u8fb9\u65b9\u5f0f\u3002\u5355\u6b21\u590d\u6742\u5ea6\u4e3a $O(n^3)$ \uff0c \u6267\u884c $q$ \u6b21\u590d\u6742\u5ea6\u4e3a $O(n^3q)$ \u3002\n\n\u603b\u590d\u6742\u5ea6\u4e3a $O(n^3q)$ \u3002\n\n#### \u4f18\u5316\u7b97\u6cd5\uff1a\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u4e0d\u96be\u53d1\u73b0\u8fd9\u9898\u9700\u8981\u5728 $O(n)$ \u6216 $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u5185\u5b8c\u6210\uff0c$O(n\\sqrt{n})$ \u5c31\u57fa\u672c\u5361\u4e0d\u8fc7\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u5230\u66b4\u529b\u7b97\u6cd5\u7684\u74f6\u9888\uff1a\n\n\u9884\u5904\u7406\u662f $O(n)$ \u7684\uff0c\u590d\u6742\u5ea6\u5f88\u4f18\u79c0\uff0c\u6240\u4ee5\u74f6\u9888\u5904\u4e8e\u4e24\u79cd\u64cd\u4f5c\u3002\n\n\u76ee\u6807\u5f88\u660e\u786e\u4e86\uff1a\u5982\u4f55\u5feb\u901f\u7b97\u51fa\u4e00\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u5e76\u627e\u5230\u4e24\u68f5\u6811\u5408\u5e76\u540e\u76f4\u5f84\u6700\u5c0f\u7684\u8fde\u63a5\u65b9\u5f0f\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u628a\u4e24\u68f5\u6811\u7684\u76f4\u5f84\u62bd\u79bb\u51fa\u6765\u5206\u6790\uff0c\u89c2\u5bdf\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/aowbesq7.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u8fd9\u662f\u4e00\u68f5\u76f4\u5f84\u4e3a 3 \u4e0e\u4e00\u68f5\u76f4\u5f84\u4e3a 2 \u7684\u4e24\u68f5\u5de8\u6811\u3002\n\n\u624b\u73a9\u8fd9\u4e2a\u5c0f\u6837\u4f8b\uff0c\u4e0d\u96be\u53d1\u73b0\u5f53\u6811\u7684\u76f4\u5f84\u4e3a $siz$ \u65f6\uff0c\u7b2c $i$ \u4e2a\u70b9\u53ef\u4ee5\u628a\u4e00\u68f5\u6811\u7684\u76f4\u5f84\u5212\u5206\u4e3a $i - 1$ \u548c $siz - i + 1$ \u4e24\u90e8\u5206\u3002\n\n\u6240\u4ee5\u6811\u76f4\u5f84\u7684\u516c\u5f0f\u5c31\u4e3a $\\max(siz_1 , siz_2 , \\min(\\max(i - 1 , siz_1 - i + 1) + \\max(j - 1 , siz_2 - j + 1) + 1))$ \u3002\n\n\u5bf9\u8fd9\u4e2a\u5f0f\u5b50\u8fdb\u884c\u5206\u6790\uff0c\u53d1\u73b0\u5f53 $i , j$ \u90fd\u53d6\u76f4\u5f84\u4e2d\u70b9\u7684\u65f6\u5019\u65b0\u6811\u76f4\u5f84\u6700\u5c0f\uff0c\u6b64\u65f6\u65b0\u6811\u7684\u76f4\u5f84\u7684\u516c\u5f0f\u4e3a $\\max(siz_1 , siz_2 , \\lceil \\frac{siz_1}{2} \\rceil +\\lceil \\frac{siz_2}{2} \\rceil + 1)$ \u3002\n\n\u5230\u6b64\u4e3a\u6b62\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e86\u64cd\u4f5c 1 \u548c 2 \u7684 $O(1)$ \u5904\u7406\u65b9\u5f0f\u4e86\uff1a\u7528 $str[i]$ \u8868\u793a \u6811 $i$ \u7684\u76f4\u5f84\u5927\u5c0f\uff0c\u7136\u540e\u52a8\u6001\u4f7f\u7528\u516c\u5f0f\u7ef4\u62a4\u65b0\u6811\u7684\u76f4\u5f84\u5373\u53ef\u3002\n\n[Code](https://www.luogu.com.cn/paste/wa4y4sxd)\n\n#### \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u5e76\u67e5\u96c6\u5e26 $\\log n$ \u7684\u590d\u6742\u5ea6\uff0c\u5176\u4ed6\u7684\u5355\u6b21\u64cd\u4f5c\u590d\u6742\u5ea6 $O(1)$ \uff0c\u64cd\u4f5c\u6b21\u6570\u4e3a $q$ \u6b21\u3002\n\n\u603b\u590d\u6742\u5ea6\u4e3a $O(q \\log n)$ \u3002\n\n#### \u603b\u7ed3\uff1a\n\n\u8fd9\u9053\u9898\u662f\u5f88\u5e38\u89c4\u7684\u68ee\u6797\u4e2d\u4e24\u68f5\u6811\u7684\u5408\u5e76\u95ee\u9898\uff0c\u5173\u952e\u5728\u4e8e\u53d1\u6398\u5408\u5e76\u7684\u6027\u8d28\u3002\n\n\u867d\u7136\u662f\u84dd\u9898\u4f46\u662f\u7b97\u6bd4\u8f83\u7b80\u5355\u7684\u90a3\u4e00\u7c7b\uff0c\u5b8c\u5168\u53ef\u4ee5\u653e\u5728\u63d0\u9ad8\u7ec4\u7b2c\u4e00\u9898\u3002\u8fd9\u9898\u5e94\u8be5\u662f\u548c\u5eca\u6865\u5206\u914d\u96be\u5ea6\u5dee\u4e0d\u591a\u3002\n\n\u8fd8\u6709\u79cd\u6811\u7684\u5408\u5e76\u65b9\u5f0f\u53eb\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4e5f\u5f88\u6709\u610f\u601d\uff0c\u8fd9\u91cc\u53ea\u662f\u63d0\u4e00\u4e0b\u4e0d\u591a\u505a\u8d58\u8ff0\u3002",
        "postTime": 1636516268,
        "uid": 376265,
        "name": "BrotherCall",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF455C Civilization"
    },
    {
        "content": "\u6211\u4eec\u9996\u5148\u8003\u8651\u5982\u4f55\u505a\u64cd\u4f5c 2 \u3002                  \n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u6211\u4eec\u53ef\u4ee5\u600e\u4e48\u8f6c\u79fb\u6211\u4eec\u7684\u76f4\u5f84\uff0c\u5047\u5982\u5f97\u5230\u4e24\u4e2a\u5b50\u6811\u7684\u76f4\u5f84\u53ca\u76f4\u5f84\u7aef\u70b9\u4fe1\u606f\u4ee5\u53ca\u5f97\u5230\u4e24\u4e2a\u8fde\u63a5\u70b9\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b50\u6811\u76f4\u5f84\u7aef\u70b9\u5206\u522b\u5230\u8fd9\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u62ff\u51fa\u6765\u4ea4\u53c9\u76f8\u52a0\uff0c\u7136\u540e\u518d\u548c\u539f\u6765\u4e24\u4e2a\u5b50\u6811\u7684\u76f4\u5f84\u6bd4\u8f83\u5c31\u53ef\u4ee5\u8f6c\u79fb\u4e86\u3002               \n\n\u4ee4\u7b2c\u4e00\u4e2a\u5b50\u6811 $A$ \u7684\u76f4\u5f84\u7aef\u70b9\u4e3a $a , b$ , \u53e6\u4e00\u4e2a\u5b50\u6811 $B$ \u76f4\u5f84\u7aef\u70b9\u4e3a $c , d$ \uff0c\u8fde\u63a5\u7684\u70b9\u662f $u , v$ \uff0c\u5199\u6210\u5f62\u8c61\u70b9\u7684\u6570\u5b66\u5f0f\u5b50\u5c31\u662f\uff1a          \n\n- $dist_{now} = max(max(dist_{a,u} , dist_{b ,u}) + max(dist_{c , v} + dist_{d , v}) , len_A,len_B)$ \n\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u53ef\u4ee5\u8fde\u76f4\u5f84\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u5404\u81ea\u76f4\u5f84\u4e0a\u627e\u4e00\u4e2a\u70b9 $k$ \u4f7f\u5f97 $max(dist_{a , k} , dist_{b , k})$ \u7684\u503c\u6700\u5c0f\u7136\u540e\u8fde\u63a5\u3002                \n\n\u8fd9\u91cc\u53ef\u4ee5\u53cd\u8bc1\uff0c\u5982\u679c\u4e0d\u8fd9\u4e48\u9009\u62e9\u7684\u8bdd\u90a3\u4e48\u5fc5\u7136\u8fde\u51fa\u4e00\u6761\u6bd4\u8fd9\u4e48\u9009\u62e9\u8fde\u51fa\u6765\u4e0d\u66f4\u77ed\u7684\u4e00\u6761\u76f4\u5f84\u3002        \n\n\u5e76\u4e14\u6211\u4eec\u77e5\u9053\uff0c\u5f97\u5230\u7684\u65b0\u6811\u7684 $k$ \u70b9\u5fc5\u7136\u4e5f\u662f\u8fd9\u4e24\u4e2a\u70b9\u7684\u5176\u4e2d\u4e00\u4e2a\uff0c\u6bd5\u7adf\u5982\u679c\u9009\u62e9\u5176\u5b83\u70b9\u7684\u8bdd\u90fd\u4f1a\u4f7f\u5f97\u65b0\u6811 $max(dist_{a , k} , dist_{b , k})$ \u7684\u503c\u5fc5\u5b9a\u6bd4\u9009\u8fd9\u4e24\u4e2a\u70b9\u66f4\u597d\u60c5\u51b5\u4e0b\u90a3\u4e2a\u70b9\u7684\u503c\u66f4\u52a3\uff0c\u6240\u4ee5\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5373\u53ef\u5728 $O(1)$ \u65f6\u95f4\u590d\u6742\u5ea6\u8f6c\u79fb\u3002                         \n\n\u63a5\u7740\u521d\u59cb\u5316\u65f6\u76f4\u63a5\u8dd1\u6811\u7684\u76f4\u5f84\u5c31\u597d\u4e86\uff0c\u7a0d\u5fae\u6709\u70b9\u96be\u5199\u6240\u4ee5\u6ce8\u91cd\u4e00\u4e0b\u7ec6\u8282\u3002      \n```cpp\n/*\n\u8003\u8651\u7ef4\u62a4\u4e00\u68f5\u6811\u7684\u4ee5\u53ca\u70b9min{max(dis(u , a)) + dis(u , b)}\n\u6211\u4eec\u5408\u5e76\u5b8c\u540e\u76f4\u63a5\u770b\u4e24\u4e2a\u70b9\u54ea\u4e2a\u70b9\u66f4\u8fd1\u5c31\u597d\u4e86  \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 3e5 + 5;\nint n,m,fa[Len],q;\nstruct node\n{\n\tint u,v,pos,disu,disv,len;\n\tnode(){u = v = pos = disu = disv = len = 0;}\n\tnode(int U,int V,int POS,int DISU,int DISV,int LEN){u = U , v = V , pos = POS , disu = DISU , disv = DISV , len = LEN;}\n}tree[Len];\nvoid makeSet(int x){for(int i = 1 ; i <= x ; i ++) fa[i] = i;}\nint findSet(int x){return fa[x] == x ? fa[x] : fa[x] = findSet(fa[x]);}\nvoid unionSet(int x,int y)\n{\n\tint u = findSet(x) , v = findSet(y);\n\tif(u == v) return;\n\tfa[v] = u;\t\n\t//printf(\"###%d %d %d %d %d %d\\n\",tree[u].u,tree[u].v,tree[u].pos,tree[u].disu,tree[u].disv,tree[u].len);\n\t//printf(\"###%d %d %d %d %d %d\\n\",tree[v].u,tree[v].v,tree[v].pos,tree[v].disu,tree[v].disv,tree[v].len);\n\tif(tree[u].disu < tree[u].disv) swap(tree[u].disu , tree[u].disv) , swap(tree[u].u , tree[u].v);\n\tif(tree[v].disu < tree[v].disv) swap(tree[v].disu , tree[v].disv) , swap(tree[v].u , tree[v].v);\n\tif(tree[u].disu + tree[v].disu + 1 < tree[u].len || tree[u].disu + tree[v].disu + 1 < tree[v].len)\n\t{\n\t\tif(tree[u].len < tree[v].len) tree[u] = tree[v];\n\t}\n\telse\n\t{\n\t\tif(max(tree[v].disu + 1 , tree[u].disu) < max(tree[u].disu + 1 , tree[v].disu)) tree[u] = node(tree[u].u , tree[v].u , tree[u].pos , tree[u].disu , tree[v].disu + 1 , tree[u].disu + tree[v].disu + 1);\n\t\telse tree[u] = node(tree[u].u , tree[v].u , tree[v].pos , tree[u].disu + 1 , tree[v].disu , tree[u].disu + tree[v].disu + 1);\n\t}\n\t//printf(\"%d %d %d %d %d %d\\n\",tree[u].u,tree[u].v,tree[u].pos,tree[u].disu,tree[u].disv,tree[u].len);\n\ttree[v] = node(0 , 0 , 0 , 0 , 0 , 0);\n} \nint head[Len],cnt,Fa[Len],dis[Len];\nstruct Node\n{\n\tint next,to;\n}edge[Len << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nint maxu,maxdis;\nbool flag[Len];\nvoid dfs(int x,int f,int Val,int root,bool ort)\n{\n\tflag[x] = ort;\n\tfa[x] = root;\n\tFa[x] = f;\n\tif(Val > maxdis)\n\t{\n\t\tmaxu = x;\n\t\tmaxdis = Val;\n\t}\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f) continue;\n\t\tdfs(to , x , Val + 1 , root , ort);\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&q);\n\tfor(int i = 1 ; i <= n ; i ++) tree[i] = node(i , i , i , 0 , 0 , 0);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tadd(x , y) , add(y , x);\t\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tif(!flag[i])\n\t\t{\n\t\t\tmaxu = i , maxdis = 0;\n\t\t\tdfs(i , 0 , 0 , i , 0);\n\t\t\ttree[i].u = maxu;\n\t\t\tdfs(maxu , 0 , 0 , i , 1);\n\t\t\ttree[i].v = maxu;\n\t\t\ttree[i].len = maxdis;\n\t\t\tint Up = tree[i].len >> 1;\n\t\t\twhile(Up) maxu = Fa[maxu] , Up --;\n\t\t\ttree[i].pos = maxu;\n\t\t\ttree[i].disv = (tree[i].len >> 1) , tree[i].disu = tree[i].len - (tree[i].len >> 1);\n\t\t}\n\t}\n\t//for(int i = 1 ; i <= n ; i ++) printf(\"%d %d %d %d %d %d\\n\",tree[i].u,tree[i].v,tree[i].pos,tree[i].disu,tree[i].disv,tree[i].len);\n\tfor(int i = 1 ; i <= q ; i ++) \n\t{\n\t\tint op,x,y;scanf(\"%d\",&op);\n\t\tif(op == 1) \n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tint Fat = findSet(x);\n\t\t\tprintf(\"%d\\n\",tree[Fat].len);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d %d\",&x,&y);\n\t\t\tunionSet(x , y);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1624793534,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF455C Civilization"
    },
    {
        "content": "\u5bf9\u4e8e\u4e24\u4e2a\u8fde\u901a\u5757\u8fde\u8d77\u6765\uff0c\u80af\u5b9a\u662f\u5728\u4e24\u4e2a\u76f4\u5f84\u4e2d\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u4f7f\u5f97\u65b0\u7684\u76f4\u5f84\u6700\u77ed\n\n\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u540c\u65f6\u8bb0\u5f55\u8fde\u901a\u5757\u7684\u76f4\u5f84\u5927\u5c0f\n\n\u4ee4\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u76f4\u5f84\u5206\u522b\u4e3a$len_{s1}>len_{s2}$\n\n\u5219\u65b0\u7684\u76f4\u5f84\u662f$max(len_{s1},\\frac{len_{s1}+1}{2}+\\frac{len_{s2}+1}{2}+1)$\n\n\u9664\u6cd5\u662f\u4e0a\u53d6\u6574\u7684\u610f\u601d\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 300010\nusing namespace std;\nstruct Edge{\n\tint to, next;\n}edge[maxn << 1];\nint num, head[maxn], rt, Max;\nint n, m, q, f[maxn], len[maxn];\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid addedge(int x, int y){ edge[++num] = (Edge){y, head[x]}, head[x] = num; }\nint getfa(int k){ return f[k] == k ? k : f[k] = getfa(f[k]); }\n\nvoid dfs(int u, int pre, int s){\n\tif (s > Max) Max = s, rt = u;\n\tfor (int i = head[u]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif (v != pre) dfs(v, u, s + 1);\n\t}\n}\n\nvoid merge(int x, int y){\n\tint s1 = getfa(x), s2 = getfa(y);\n\tif (len[s1] < len[s2]) swap(s1, s2);\n\tf[s2] = s1, len[s1] = max(len[s1], (len[s1] + 1) / 2 + (len[s2] + 1) / 2 + 1);\n}\n\nint main(){\n//\tfreopen(\"1.txt\", \"r\", stdin);\n//\tfreopen(\"21.out\", \"w\", stdout);\n\tn = read(), m = read(), q = read();\n\tfor (int i = 1; i <= n; ++i) f[i] = i;\n\twhile (m--){\n\t\tint x = read(), y = read(), s1 = getfa(x), s2 = getfa(y);\n\t\taddedge(x, y), addedge(y, x);\n\t\tf[s1] = s2;\n\t}\n\tfor (int i = 1; i <= n; ++i){\n\t\tint x = getfa(i);\n\t\tif (!len[x]){\n\t\t\trt = 0, Max = 0;\n\t\t\tdfs(i, 0, 0);\n\t\t\tMax = 0;\n\t\t\tdfs(rt, 0, 0);\n\t\t\tlen[x] = Max;\n\t\t}\n\t}\n\twhile (q--){\n\t\tint opt = read();\n\t\tif (opt == 1) printf(\"%d\\n\", len[getfa(read())]); else{\n\t\t\tint x = read(), y = read();\n\t\t\tif (getfa(x) != getfa(y)) merge(x, y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1599657671,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF455C \u3010Civilization\u3011"
    },
    {
        "content": "~~\u53c8\u6c34\u4e86\u4e00\u9053\u7d2b\u9898~~\n\n\u53cc\u500d\u7ecf\u9a8c\uff1a[P2195 HXY\u9020\u516c\u56ed](https://www.luogu.com.cn/problem/P2195)\n~~\u8fde\u6837\u4f8b\u90fd\u4e00\u6837~~\n\n### \u4e00. \u9898\u610f\n\n\u539f\u9898\u8fde\u63a5\uff1a[CF455C Civilization](https://www.luogu.com.cn/problem/CF455C)\n\n- \u7ed9\u5b9a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u68ee\u6797\uff0c\u4e00\u5171 $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5305\u62ec\u4ee5\u4e0b\u4e24\u79cd\uff1a  \n\n1. `1 x` \uff1a\u8f93\u51fa\u70b9 $x$ \u6240\u5728\u7684\u6811\u7684\u76f4\u5f84\u3002  \n\n2. `2 x y` \uff1a\u7528\u4e00\u6761\u8fb9\u8fde\u63a5\u70b9 $x$ \u548c $y$ \u6240\u5728\u7684\u6811\uff0c\u5e76\u4f7f\u65b0\u6811\u7684\u76f4\u5f84\u6700\u5c0f\u3002\u82e5\u70b9 $x$\uff0c$y$ \u5df2\u8fde\u901a\u5219\u5ffd\u89c6\u8be5\u64cd\u4f5c\u3002\n\n- $1 \\le m \\lt n \\le 3 \\times10^{5} , 1 \\le q \\le 3\\times10^{5}$\n\n### \u4e8c. \u5206\u6790\u4e0e\u89e3\u7b54\n\n\u9996\u5148\u663e\u7136\u9700\u8981\u9884\u5904\u7406\u521d\u59cb\u65f6\u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\u3002  \n  \n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6811\u5f62dp $O(n)$ \u89e3\u51b3\u3002\n\n\u5177\u4f53\u5c31\u662f\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u5b50\u6811\u4e2d\u5230\u8be5\u7ed3\u70b9\u7684\u6700\u5927\u957f\u5ea6\u548c\u6b21\u5927\u957f\u5ea6\uff08\u4e0d\u80fd\u5728\u540c\u4e00\u68f5\u5b50\u6811\u4e2d\uff09\uff0c\u7136\u540e\u7528\u6700\u5927\u957f\u5ea6\u548c\u6b21\u5927\u957f\u5ea6\u7684\u548c\u66f4\u65b0\u5f53\u524d\u76f4\u5f84\u3002\n\n\u5982\u679c\u4e0a\u9762\u7684\u6ca1\u770b\u61c2\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u5728\u8fd9\u91cc\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6811\u7684\u8fde\u901a\uff0c\u5e76\u4e14\u7528\u5e76\u67e5\u96c6\u7684\u6839\u5b58\u50a8\u8fd9\u68f5\u6811\u7684\u76f4\u5f84\u957f\u5ea6\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u7b49\u60a8\u770b\u5b8c\u540e\u9762\u5c31\u77e5\u9053\u5566\u3002\n\n---\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u5904\u7406\u4e24\u4e2a\u64cd\u4f5c\u3002  \n  \n\u9996\u5148\u89c2\u5bdf\u64cd\u4f5c 2\uff0c\u8981\u6c42\u7ef4\u62a4\u96c6\u5408\u7684\u8fde\u901a\u6027\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u60f3\u5230\u5e76\u67e5\u96c6\u3002\n\n\u90a3\u4e48\u4e0d\u59a8\u7528\u5e76\u67e5\u96c6\u7684\u6839\u6765\u4ee3\u8868\u8fd9\u68f5\u6811\u3002\n\n\u8bb0 $val$ \u8868\u793a\u8fde\u901a\u5757\u4e2d\u7684\u76f4\u5f84\u957f\u5ea6\u3002\n\n\u5728\u5408\u5e76\u4e24\u68f5\u6811 $x$\uff0c$y$ \u65f6\uff0c\u8fd9\u91cc\u4e0d\u59a8\u76f4\u63a5\u8bbe $x$\u3001$y$ \u90fd\u4e3a\u6811\u6839\u3002\u7531\u4e8e\u8981\u6c42\u65b0\u7684\u76f4\u5f84\u6700\u5c0f\uff0c\u6240\u4ee5\u5bb9\u6613\u60f3\u5230\u53d6\u4e24\u68f5\u6811\u7684\u76f4\u5f84\u7684\u4e2d\u70b9\u8fde\u8fb9\u3002\u8fd9\u6837\u65b0\u6811\u76f4\u5f84\u7684\u957f\u5ea6\u5c31\u4e3a\uff1a\n$$ max(val_x,val_y,\\lceil\\dfrac{val_x}{2}\\rceil + \\lceil\\dfrac{val_y}{2}\\rceil+1) $$\n\n\u4e5f\u5c31\u662f\u5728\u539f\u6765 $x$ \u7684\u76f4\u5f84\u548c $y$ \u7684\u76f4\u5f84\u4ee5\u53ca\u65b0\u4ea7\u751f\u7684\u8de8\u8d8a\u4e24\u68f5\u6811\u7684\u6700\u957f\u8def\u5f84\u4e2d\u53d6\u6700\u5927\u503c\u3002\n\n\u5728\u6700\u540e\u4e00\u4e2a\u5f0f\u5b50\u4e2d\uff0c\u4e0a\u53d6\u6574\u8868\u793a\u53d6\u8f83\u957f\u7684\u4e00\u6bb5\uff0c\u56e0\u4e3a\u8981\u7b97\u4e0a\u65b0\u8fde\u4e0a\u7684\u8fb9\u6240\u4ee5\u8981 +1 \u3002\n\n---\n\n\u63a5\u4e0b\u6765\u518d\u770b\u64cd\u4f5c 1\uff0c\u5c31\u4f1a\u53d1\u73b0\u53ea\u9700\u8981\u8f93\u51fa\u5904\u7406\u597d\u7684 $x$ \u6240\u5728\u7684\u8fde\u901a\u5757\u76f4\u5f84\u5373\u53ef\u3002\n\n\u5c31\u505a\u5b8c\u4e86\u3002\n\n### Code\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n\nusing namespace std;\n\nconst int MAXN = 300010;\n\nint n, m, q;\n\nstruct edge{\n\tint ne, to;\n\tedge(int N=0,int T=0):ne(N),to(T){}\n}e[MAXN<<1];\nint fir[MAXN], num = 0;\ninline void join(int a, int b)\n{\n\te[++num] = edge(fir[a], b);\n\tfir[a] = num;\n}\n\nint f[MAXN], val[MAXN];\nint find(int x)\n{\n\treturn f[x] == x ? x : f[x] = find(f[x]);\n}\ninline void merge(int x, int y) // \u5408\u5e76\u4e24\u68f5\u6811 \n{\n\tint fx = find(x), fy = find(y);\n\tif(fx == fy) return ;\n\tval[fx] =  max((val[fx]+1)/2+(val[fy]+1)/2+1, max(val[fx], val[fy]));\n\t// \u66f4\u65b0\u65b0\u7684\u76f4\u5f84 \n\tf[fy] = fx;\n}\n\nint maxx[MAXN][2];\nvoid dfs(int u, int fa, int rt) // \u5904\u7406\u76f4\u5f84 \n{\n\tmaxx[u][0] = maxx[u][1] = 0;\n\tfor(int i=fir[u];i;i=e[i].ne)\n\t{\n\t\tint v = e[i].to;\n\t\tif(v == fa) continue;\n\t\tdfs(v, u, rt);\n\t\tint now = maxx[v][0] + 1;\n\t\tif(now > maxx[u][1])\n\t\t{\n\t\t\tif(now > maxx[u][0])\n\t\t\t{\n\t\t\t\tmaxx[u][1] = maxx[u][0];\n\t\t\t\tmaxx[u][0] = now;\n\t\t\t}\n\t\t\telse maxx[u][1] = now;\n\t\t}\n\t}\n\tval[rt] = max(val[rt], maxx[u][0] + maxx[u][1]);\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=n;i++)\n\t\tf[i] = i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a, b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tjoin(a, b);\n\t\tjoin(b, a);\n\t\tint fx = find(a), fy = find(b);\n\t\tif(fx != fy) f[fx] = fy;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i] == i)\n\t\t\tdfs(i, 0, i);\n\twhile(q--)\n\t{\n\t\tint opt, x, y;\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt == 1) \n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tprintf(\"%d\\n\",val[find(x)]);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tmerge(x, y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1590056022,
        "uid": 151601,
        "name": "Aphros",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF455C \u3010Civilization\u3011"
    },
    {
        "content": "## \u95ee\u9898\u63cf\u8ff0\n\n[LG-CF455C](https://www.luogu.org/problem/CF455C)\n\n---\n\n## \u9898\u89e3\n\n\u9996\u5148\uff0c\u9898\u76ee\u7ed9\u51fa\u4e86 $m$ \u6761\u8fb9\uff0c\u5bf9\u8fd9 $n$ \u4e2a\u70b9\uff0c $m$ \u6761\u8fb9\u7ec4\u6210\u7684\u68ee\u6797\uff0c\u8dd1\u51fa\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u540c\u65f6\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6811\u7684\u8fde\u901a\u6027\u3002\n\n\u8003\u8651\u5408\u5e76\u4e24\u68f5\u6811\u7684\u60c5\u51b5\uff1a\u8bbe\u8fd9\u4e24\u68f5\u6811\u7684\u4ee3\u8868\u5143\u4e3a $u,v$ \uff0c\u8fd9\u68f5\u6811\u7684\u76f4\u5f84\u6709\u4e09\u79cd\u6765\u6e90\uff1a\n\n- $u$ \u8fd9\u68f5\u6811\u7684\u76f4\u5f84\n\n- $v$ \u8fd9\u68f5\u6811\u7684\u76f4\u5f84\n\n- \u7a7f\u8fc7 $u,v$ \u5408\u5e76\u8fb9\u7684\u4e00\u6761\u8def\u5f84\n\n$u,v$ \u4e24\u68f5\u6811\u7684\u76f4\u5f84\u662f\u5df2\u77e5\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6700\u5c0f\u5316\u7b2c\u4e09\u79cd\u60c5\u51b5\u3002\n\n\u8bbe\u6811 $u,v$ \u5408\u5e76\u65f6\u7684\u70b9\u4e3a $rt_u,rt_v$ \uff0c\u6b64\u65f6\u7b2c\u4e09\u79cd\u60c5\u51b5\u7684\u503c\u4e3a $\\frac{maxdis_{rt_u}}{2}+\\frac{maxdis_{rt_v}}{2}+1$\n\n\u663e\u7136\uff0c\u4e3a\u4e86\u6700\u5c0f\u5316\u4e24\u4e2a $maxdis$ \uff0c\u8fd9\u4e24\u4e2a\u70b9\u9009\u53d6\u7684\u4e00\u5b9a\u662f\u539f\u6765\u4e24\u68f5\u6811\u76f4\u5f84\u7684\u4e2d\u70b9\u3002\n\n---\n\n## $\\mathrm{Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntemplate <typename Tp>\nvoid read(Tp &x){\n\tx=0;char ch=1;int fh;\n\twhile(ch!='-'&&(ch>'9'||ch<'0')) ch=getchar();\n\tif(ch=='-') ch=getchar(),fh=-1;\n\telse fh=1;\n\twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\tx*=fh;\n}\n\nconst int maxn=300007;\nconst int maxm=600007;\n\nint n,m,T;\nvector<int> G[maxn];\nint fa[maxn];\n\nint bel[maxn],cnt;\n\nvoid add(int x,int y){\n\tG[x].push_back(y);\n}\n\nint find(int x){\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}\n\nint dep[maxn],ans[maxn];\n\nint pos,lst;\n\nvoid merge(int x,int y){\n\tif(find(x)!=find(y)) fa[fa[x]]=fa[y];\n}\n\nvoid dfs(int x,int col,int dis){\n\tif(bel[x]==col) return;\n\tif(dis>=lst) lst=dis,pos=x;\n\tbel[x]=col;\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint y=G[x][i];\n\t\tmerge(x,y);\n\t\tdfs(y,col,dis+1);\n\t}\n}\n\nvoid Getmax(){\n\tint mx=-1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(dep[i]>mx) mx=dep[i],pos=i;\n\t}\n}\n\nvoid cz1(){\n\tint x;read(x);\n\tprintf(\"%d\\n\",ans[find(x)]);\n}\n\nvoid cz2(){\n\tint x,y;read(x);read(y);\n\tint xx=find(x),yy=find(y);\n\tif(xx==yy) return;\n\tfa[xx]=yy;\n\tans[yy]=max(ans[xx],max(ans[yy],(ans[xx]+1)/2+(ans[yy]+1)/2+1));\n}\n\nvoid preprocess(){\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n}\n\nint main(){\n\tread(n);read(m);read(T);\n\t\n\tpreprocess();\n\t\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tread(x);read(y);\n\t\tadd(x,y);add(y,x);\n\t}\n\t\n\tfor(int i=1;i<=n;i++){\n\t\tif(bel[i]) continue;\n\t\tlst=0,pos=i;\n\t\tdfs(i,i,0);\n\t\tlst=0;\n\t\tdfs(pos,pos,0);\n\t\tans[find(i)]=lst;\n\t}\n\t\n\tint op;\n\twhile(T--){\n\t\tread(op);\n\t\tif(op==1) cz1();\n\t\telse cz2();\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1573199396,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF455C \u3010Civilization\u3011"
    }
]