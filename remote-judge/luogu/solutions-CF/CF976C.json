[
    {
        "content": "### \u9898\u610f\uff1a\n\n\u7ed9\u4f60 $n$ \u4e2a\u533a\u95f4 $[l_1,r_1],[l_2,r_2],\\dots,[l_n,r_n]$\uff0c\u6c42\u4e24\u4e2a\u6709\u5305\u542b\u5173\u7cfb\u7684\u533a\u95f4\u3002\n\n### \u89e3\u6cd5\uff1a\n\n\u65e2\u7136\u8981\u6c42\u4e24\u4e2a\u533a\u95f4\u5305\u542b\uff0c\u90a3\u5c31\u4e00\u4e2a\u4e2a\u679a\u4e3e\u597d\u4e86\uff1f\n\n\u7136\u800c\u8fd9\u6837\u662f\u4e0d\u884c\u7684\uff0c$3\\times 10^5$ \u7684\u6570\u636e\u89c4\u6a21\u4e0d\u5141\u8bb8\u3002\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u53e6\u60f3\u529e\u6cd5\u3002\n\n\u8003\u8651\u5c06\u6240\u6709\u533a\u95f4\u6392\u5e8f\uff0c\u4f7f\u4e00\u4e2a\u533a\u95f4\u5982\u679c\u5305\u542b\u4e86\u5176\u4ed6\u533a\u95f4\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u4e2a\u88ab\u5305\u542b\u7684\u533a\u95f4\u5728\u539f\u533a\u95f4\u524d\u4e00\u4e2a\u4f4d\u7f6e\u5904\u3002\u90a3\u4e48\u6392\u5e8f\u7684\u4f9d\u636e\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u5982\u679c\u8981\u8ba9\u4e00\u4e2a\u533a\u95f4 $a$ \u5c3d\u53ef\u80fd\u5305\u542b\u53e6\u4e00\u4e2a\u533a\u95f4 $b$\uff0c\u5219\u8981\u8ba9 $a$ \u7684\u5de6\u8fb9\u754c\u5c3d\u91cf\u5728\u5de6\uff0c\u53f3\u8fb9\u754c\u5c3d\u91cf\u5411\u53f3\u3002\u56e0\u6b64\u6211\u4eec\u63a8\u51fa\u4e86\u6bd4\u8f83\u51fd\u6570 `cmp()`\uff1a\n\n```cpp\nbool cmp(node x,node y){\n\tif(x.l!=y.l) return x.l<y.l;\n\treturn x.r>y.r;\n}\n```\n\n\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u5f88\u597d\u89e3\u51b3\u4e86\u3002\u6ce8\u610f\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u7684\u662f\u539f\u6765\u7684\u5e8f\u53f7\uff0c\u6240\u4ee5\u7ed3\u6784\u4f53\u8fd8\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u539f\u6765\u7684\u5e8f\u53f7\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint l,r,id;//\u8bb0\u5f55\u4e00\u4e0b\u539f\u6765\u7684\u7f16\u53f7\n} a[314514];\nbool cmp(node x,node y){\n\tif(x.l!=y.l) return x.l<y.l;\n\treturn x.r>y.r;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i].l>>a[i].r;\n\t\ta[i].id=i;\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=2;i<=n;i++){\n\t\tif(a[i-1].r>=a[i].r&&a[i-1].l<=a[i].l){//\u5224\u65ad\u533a\u95f4\u662f\u5426\u5305\u542b\n\t\t\tcout<<a[i].id<<' '<<a[i-1].id<<endl;//\u8f93\u51fa\u539f\u4f4d\u7f6e\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"-1 -1\";//\u6ca1\u8f99\u4e86\n\treturn 0;\n}\n```\n",
        "postTime": 1636548234,
        "uid": 392304,
        "name": "caibyte",
        "ccfLevel": 0,
        "title": "CF976C Nested Segments\u9898\u89e3"
    },
    {
        "content": "\u65f6\u9694\u4e00\u5e74\uff0c\u672c\u849f\u84bb\u53c8\u56de\u6765\u770b\u8fd9\u9053\u4e4b\u524d\u6ca1\u505a\u51fa\u6765\u7684\u9898\u3002~~\uff08\u849f\u84bb\u53f9\u606f\uff09~~\n\n~~\u7136\u540e\u5c31\u628a\u5b83 AC \u4e86\u3002~~\n\n## Solution\n\n\u5bf9\u4e8e\u4e24\u4e2a\u533a\u95f4 $(l_1,r_1)$ \u548c $(l_2,r_2)$\u3002\n\n\u5f53 $l_1\\geq l_2$ \u5e76\u4e14 $r_1\\le r_2$ \u65f6\uff0c\u533a\u95f4 $(l_1,r_1)$ \u5305\u542b\u5728 $(l_2,r_2)$ \u5185\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5148\u6309 $l$ \u6392\u5e8f\u3002\n\n$l$ \u5c0f\u7684\u5728\u524d\uff0c\u5982\u679c $l$ \u76f8\u540c $r$ \u5927\u7684\u5728\u524d\u3002\n\n\u8fd9\u6837\u80fd\u4fdd\u8bc1\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u533a\u95f4\uff0c\u53ea\u6709\u7b2c $x\\ (i\\le x\\le n)$ \u4e2a\u533a\u95f4\u53ef\u80fd\u88ab\u5b83\u5305\u542b\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u5224\u65ad\u5bf9\u4e8e\u4e00\u4e2a $i$ \u662f\u5426\u5b58\u5728\u4e00\u4e2a $x$\uff0c\u4f7f\u5f97 $r_x\\le r_i$ \u5e76\u4e14 $x>i$\u3002\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u5224\u65ad\u3002\n\n\u5bf9\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u6570\u52a0\u4e0a $1$\uff0c\u5982\u679c\u67e5\u8be2\u5230\u524d $r_i$ \u4e2a\u6570\u7684\u548c\u5927\u4e8e $0$ \u5219\u8bf4\u660e\u6709\u3002\n\n\u9000\u51fa\u5faa\u73af\u540e\u66b4\u529b\u641c\u4e00\u4e0b\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0)\n#define UP(l,i,a,b) for(l i=a;i<=b;i++)\nconst int N=3e5+10;\nstruct node {\n\tint l,r,id;\n}a[N];\nint d[N],n,x=0,y=0;\nbool flag=false;\nstruct Tree {\n\tint t[N];\n\tinline void clear() {\n\t\tmemset(t,0,sizeof(t));\n\t}\n\tinline int lowbit(int x) {\n\t\treturn x&(-x);\n\t}\n\tinline void change(int x,int v) {\n\t\twhile (x<=n) {\n\t\t\tt[x]+=v;\n\t\t\tx+=lowbit(x);\n\t\t}\n\t}\n\tinline int query(int x) {\n\t\tint ans=0;\n\t\twhile (x>0) {\n\t\t\tans+=t[x];\n\t\t\tx-=lowbit(x);\n\t\t}\n\t\treturn ans;\n\t}\n}T;\ninline bool cmp(node a,node b) {\n\treturn a.l<b.l||a.l==b.l&&a.r>b.r;\n}\nint main() {\n\tIOS; cin>>n; UP(int,i,1,n) cin>>a[i].l>>a[i].r,d[i]=a[i].r,a[i].id=i;\n\tsort(d+1,d+n+1); int M=unique(d+1,d+n+1)-d-1;\n\tUP(int,i,1,n) a[i].r=lower_bound(d+1,d+n+1,a[i].r)-d; // \u7531\u4e8e\u6570\u636e\u8303\u56f4\u4e3a 1e9\uff0c\u6240\u4ee5\u9700\u8981\u79bb\u6563\u5316\u3002\n\tsort(a+1,a+n+1,cmp);\n\tT.clear(); UP(int,i,1,n) T.change(a[i].r,1);\n\tUP(int,i,1,n) {\n\t\tT.change(a[i].r,-1);\n\t\tif (T.query(a[i].r)) {flag=true; x=i; break;}\n\t}\n\tif (flag==false) {\n\t\tcout<<\"-1 -1\"<<endl; return 0;\n\t}\n\tUP(int,i,x+1,n) if (a[i].r<=a[x].r) {\n\t\ty=i; break;\n\t}\n\tcout<<a[y].id<<\" \"<<a[x].id<<endl;\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1 \u306e_^",
        "postTime": 1639396210,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "CF976C Nested Segments"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u627e\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u53e6\u4e00\u4e2a\u533a\u95f4\uff0c\u76f4\u63a5\u627e\u662fn\u65b9\u7684\uff0c3e5\u57fa\u672c\u4e0a\u662f\u51c9\u4e86~~\u4e0d\u8fc7\u5982\u679c\u4f60\u53ef\u4ee5n\u65b9\u8fc7\u767e\u4e07\u7684\u8bdd\u5f53\u6211\u6ca1\u8bf4~~\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u53e6\u4e00\u4e2a\u533a\u95f4\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u7684l\u503c\u66f4\u5c0f\uff0cr\u503c\u66f4\u5927\u3002\u5982\u679c\u6211\u4eec\u6309\u7167l\u503c\u4ece\u5c0f\u5230\u5927\u628a\u533a\u95f4\u6392\u5e8f\u7684\u8bdd\uff0c\u540e\u9762\u7684\u662f\u4e0d\u53ef\u80fd\u5305\u542b\u524d\u9762\u7684\u533a\u95f4\u7684\uff1b\u524d\u9762\u7684\u5982\u679c\u60f3\u5305\u542b\u540e\u9762\u7684\u533a\u95f4\uff0c\u5c31\u9700\u8981r\u503c\u6bd4\u540e\u9762\u7684\u5927\u3002\n\n\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5df2\u77e5\u4e00\u4e2a\u6570\u5217\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u4e00\u7ec4\u9006\u5e8f\u5bf9\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u627e\u4e00\u7ec4\u9006\u5e8f\u5bf9\uff0c\u6211\u4eec\u601d\u8003\u5feb\u6392\u7684\u8fc7\u7a0b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e0d\u65ad\u5730\u4ea4\u6362\u9006\u5e8f\u5bf9\uff0c\u53ea\u9700\u8981\u5728\u5feb\u6392\u4e2d\u9b54\u6539\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n```\n#include<cstdio>\n#include<algorithm> \n\nusing namespace std;\n\nint x, y, n;\n\nstruct Node{\n\tint l, r, id;\n};\nNode a[300100], b[300100], r[300100];\n\nbool cmp(Node p, Node q) {\n\tif (p.l == q.l) {\n\t\treturn p.r > q.r;\n\t}\n\treturn p.l < q.l;\n}\n\nbool flag;\n\nvoid qsort(int l,int r){\n\tint i, j, mid, p;\n\ti = l;j = r;\n\tmid = a[(l + r) / 2].r;\n\tdo{\n\t\twhile (a[i].r < mid) {\n        \ti++;\n        }\n\t\twhile (a[j].r > mid) {\n        \tj--;\n        }\n\t\tif (i <= j){\n\t\t\tif (i != j) {\n\t\t\t\tprintf(\"%d %d\\n\", a[j].id, a[i].id);\n\t\t\t\texit(0);\t\t\t\t\n\t\t\t}\n\t\t\ti++;\n            j--;\n\t\t}\n\t} while(i <= j);\n\tif(l < j) qsort(l,j);\n\tif(i < r) qsort(i,r);\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d %d\", &a[i].l, &a[i].r);\n\t\ta[i].id = i;\n\t}\n\tsort(a + 1, a + 1 + n, cmp);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (a[i].l == a[i + 1].l && a[i].r == a[i + 1].r) {\n\t\t\tprintf(\"%d %d\", a[i].id, a[i + 1].id);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tqsort(1,n);\n\tprintf(\"-1 -1\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1525419143,
        "uid": 49866,
        "name": "\u9f99\u4e4b\u543b\u2014\u6c34\u8d27",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF976C \u3010Nested Segments\u3011"
    },
    {
        "content": "\u4f30\u8ba1\u662f\u505a\u590d\u6742\u4e86\u3002\u5f53\u65f6\u534a\u591c\u5934\u53d1\u660f\u53ea\u60f3\u5f97\u5230\u8fd9\u4e48\u641e\u3002\n\n\u9996\u5148\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u5728\u6240\u6709\u5de6\u7aef\u70b9\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u5de6\u7aef\u70b9\u7684\u533a\u95f4\u7684\u533a\u95f4\u4e2d\u5b58\u5728\u53f3\u7aef\u70b9\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u53f3\u7aef\u70b9\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u88ab\u90a3\u4e2a\u533a\u95f4\u5305\u542b\u7684\u3002\n\n\u7528\u5806\u641e\u4e00\u641e\u5c31\u597d\u4e86\u3002\u6700\u540e\u8fd8\u8981\u5224\u4e00\u4e0b\u4e24\u4e2a\u533a\u95f4\u662f\u5426\u662f\u540c\u4e00\u4e2a\u533a\u95f4\u3002\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n\nstruct segment {\n\tint l, r, id;\n} a[4000000];\n\nint cmp(segment p, segment q) {\n\tif (p.l!=q.l) return p.l<q.l;\n\telse return p.r>q.r;\n}  bool operator < (segment a, segment b) {\n    return a.r<b.r;\n}\n\nint main() {\n\tint l, r;\n\tint n; scanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d %d\", &l, &r);\n\t\ta[i].l=l; a[i].r=r; a[i].id=i;\n\t}std::sort(a+1, a+n+1, cmp);\n\tstd::priority_queue <segment> q;\n\tl=1;r=1; int last = a[1].l; int New;\n\t//for (int i = 1; i <= n; ++i) printf(\"%d %d\\n\", a[i].l, a[i].r);\n\tq.push(a[1]);\n\twhile (l<=n) {\n\t\tr++;\n\t\tNew=a[r].l;\n\t\twhile (a[r].l==New&&r<=n+1) {\n\t\t\tif (r<=n) {\n\t\t\t\tq.push(a[r]);\n\t\t\t//\tprintf(\"push > %d %d-%d\\n\", a[r].id, a[r].l, a[r].r);\n\t\t\t}r++;\n\t\t}r--; \n\t//\tprintf(\"%d-%d\\n\", l+1, r);\n\t\tfor (int i =l+1;i<=r&&i<=n;++i) {\n\t\t\tsegment s = q.top();\n\t\t\tif (s.r>=a[i].r) {\n\t\t\t\tif (s.id!=a[i].id) {\n\t\t\t\t\tprintf(\"%d %d\", a[i].id, s.id);\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (!q.empty()) {\n\t\t\t\t\t\tq.pop();\n\t\t\t\t\t\tsegment s2 = q.top();\n\t\t\t\t\t\tif (s2.r>=a[i].r) {\n\t\t\t\t\t\t\tprintf(\"%d %d\", a[i].id, s2.id);\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}q.push(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}l=r;\n\t}printf(\"-1 -1\");\n}\n```\n\n~~\u4f1a\u4e0d\u4f1a\u88ab\u53c9\u5440~~",
        "postTime": 1525147942,
        "uid": 48355,
        "name": "EternalAlexander",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF976C \u3010Nested Segments\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u533a\u95f4\u5148\u6309\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5982\u679c\u5de6\u7aef\u76f8\u540c\uff0c\u5219\u6309\u53f3\u7aef\u70b9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n\n\u6b64\u65f6\u4e0d\u96be\u770b\u51fa\uff0c\u5982\u679c\u6392\u5e8f\u540e\u7684\u533a\u95f4 $i$ \u5c06\u533a\u95f4 $j$ \u5305\u542b\uff08$i < j$\uff09\uff0c\u90a3\u4e48 $i$ \u7684\u53f3\u7aef\u70b9\u4e00\u5b9a**\u5927\u4e8e\u7b49\u4e8e** $j$ \u7684\u53f3\u7aef\u70b9\u3002\n\n\u6709\u6ca1\u6709\u611f\u89c9\u975e\u5e38\u773c\u719f\uff1f\n\n\u8fd9\u4e0e[P1908 \u9006\u5e8f\u5bf9](https://www.luogu.com.cn/problem/P1908)\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff01\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4ece $1$ \u5230 $n$ \u53bb\u7edf\u8ba1\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\uff0c\u5f53\u51fa\u73b0\u9006\u5e8f\u5bf9\u65f6\uff0c\u5219\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u53bb\u67e5\u627e\u5177\u4f53\u662f\u54ea\u4e00\u5bf9\u662f\u9006\u5e8f\u5bf9\u3002\u5982\u679c\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u4e00\u76f4\u4e3a $0$\uff0c\u5219\u76f4\u63a5\u8f93\u51fa`-1 -1`\u3002\n\n\u540c\u65f6\uff0c\u8fd8\u8981\u6ce8\u610f\u4e0b\u9762\u4e09\u70b9\uff1a\n\n1. P1908 \u4e2d\u7684\u201c\u9006\u5e8f\u5bf9\u201d\u6307\u7684\u662f\u201c\u5e8f\u5217\u4e2d $a_i > a_j$ \u4e14 $i<j$ \u7684\u6709\u5e8f\u5bf9\u201d\uff0c\u8fd9\u91cc\u5219\u8981\u6539\u6210`str[i].r>=str[j].r`\u3002\u76f8\u5e94\u7684\uff0c\u539f\u6765\u7684\u4ee3\u7801\u4e2d`i-sum(a[i])`\u4e5f\u8981\u76f8\u5e94\u5730\u6539\u4e3a`i-sum(str[i].r-1)-1`\u3002\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u540e\u9762\u4f1a\u8bb2\u3002\uff09\n\n2. \u7531\u4e8e $l$ \u4e0e $r$ \u7684\u6700\u5927\u503c\u53ef\u4ee5\u8fbe\u5230 $10^9$\uff0c\u5f00\u4e00\u4e2a\u8fd9\u4e48\u5927\u7684\u6570\u7ec4\u80af\u5b9a\u4f1a\u7206\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981**\u79bb\u6563\u5316**\u3002\u5982\u679c\u4e0d\u4e86\u89e3\u79bb\u6563\u5316\u662f\u4ec0\u4e48\u7684\u8bdd\uff0c\u53ef\u4ee5\u770b\u770b[\u8fd9\u7bc7](https://www.cnblogs.com/cytus/p/8933597.html)\u535a\u5ba2\u3002\n\n3. \u8f93\u51fa\u65f6\u8981\u8f93\u51fa**\u539f\u6765\u7684\u7f16\u53f7**\uff0c\u800c\u4e0d\u662f\u6392\u5e8f\u540e\u7684\u4e0b\u6807\u3002~~\uff08\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u5728\u8fd9\u91cc\u5361\u4e86\u5c06\u8fd1\u4e00\u5c0f\u65f6\u7684\u2026\u2026\uff09~~\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,c[500001],ans,t[500001],m;\nstruct node{\n    int l,r,id;\n    bool operator<(node x)const{\n        return l==x.l?r>x.r:l<x.l;\n    }\n}str[500001];\ninline int lowbit(int x){\n    return x&-x;\n}\nvoid add(int i,int x){\n    while(i<=n){\n        c[i]+=x;\n        i+=lowbit(i);\n    }\n    return;\n}\nint sum(int i){\n    int s=0;\n    while(i>0){\n        s+=c[i];\n        i-=lowbit(i);\n    }   \n    return s;\n}\nvoid find(int x){\n    for(int i=1;i<x;i++){\n        if(str[i].r>=str[x].r){\n            cout<<str[x].id<<\" \"<<str[i].id;\n            return;\n        }\n    }\n}\nvoid work(){\n    for(int i=1;i<=n;i++){\n        add(str[i].r,1);\n        if(i-sum(str[i].r-1)-1>=1){//\u4e0e\u6392\u5e8f\u540e\u7684\u7b2ci\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u7ec4\u6210\u9006\u5e8f\u5bf9\u7684\u6570\u91cf \n        \tfind(i);\n        \treturn;\n\t\t}\n\t}\n    cout<<\"-1 -1\"<<endl;\n    return;\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>str[i].l>>str[i].r;\n        str[i].id=i;\n        t[i]=str[i].r;\n    }\n    sort(str+1,str+n+1);\n    /*\u79bb\u6563\u5316*/\n    sort(t+1,t+n+1);\n    int m=unique(t+1,t+n+1)-t-1;\n    for(int i=1;i<=n;i++){\n        str[i].r=lower_bound(t+1,t+m+1,str[i].r)-t;\n    }\n    work();\n    return 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u6392\u5e8f\u3001\u79bb\u6563\u5316\u548c\u6811\u72b6\u6570\u7ec4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $O(n \\log n)$\uff0c\u6240\u4ee5\u6574\u4e2a\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n \\log n)$\u3002\n\n\u6ce8\uff1a\n\n`sum(str[i].r-1)`\u7edf\u8ba1\u7684\u662f\u6240\u6709\u5c0f\u4e8e`str[i].r`\u7684\u6570\u7684\u4e2a\u6570\uff0c`i-sum(str[i].r-1)`\u81ea\u7136\u5c31\u662f\u5927\u4e8e\u7b49\u4e8e`str[i].r`\u7684\u6570\u7684\u4e2a\u6570\u4e86\u3002\u4f46\u8981\u6ce8\u610f\uff0c\u521a\u521a\u6211\u4eec\u628a`str[i].r`\u63d2\u5165\u4e86\u6811\u72b6\u6570\u7ec4\uff0c`i-sum(str[i].r-1)`\u4f1a\u628a`str[i].r`\u81ea\u5df1\u4e5f\u7b97\u8fdb\u53bb\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u51cf\u53bb`str[i].r`\u81ea\u5df1\u8fd9\u4e00\u4e2a\u6570\uff0c\u5373`i-sum(str[i].r-1)-1`\u3002\n\n`lowbit()`\u3001`add()`\u548c`sum()`\u51fd\u6570\u90fd\u662f\u6811\u72b6\u6570\u7ec4\u7684\u51fd\u6570\uff0c\u5982\u679c\u8fd8\u4e0d\u662f\u5f88\u4e86\u89e3\u6811\u72b6\u6570\u7ec4\uff0c\u5efa\u8bae\u770b\u770b[\u8fd9\u7bc7](https://www.cnblogs.com/xenny/p/9739600.html)\u535a\u5ba2\uff0c\u5e76\u505a\u4e00\u4e0b P1908\u3002\n\n\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u7ed3\u6784\u4f53`node`\u4e2d\u7684`operator<()`\u51fd\u6570\u91cd\u8f7d\u4e86\u8fd0\u7b97\u7b26`operator<`\uff08\u5c0f\u4e8e\u53f7\uff09\uff0c \u5e76\u4f7f\u7528\u4e86\u4e09\u76ee\u8fd0\u7b97\u7b26\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6548\u7387\u3002\u5982\u679c\u8fd8\u4e0d\u4e86\u89e3\uff0c\u53ef\u4ee5\u770b\u770b[\u8fd9\u7bc7](https://www.runoob.com/cplusplus/cpp-overloading.html)\u6559\u7a0b\uff08\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff09\u4e0e[\u8fd9\u7bc7](https://www.cnblogs.com/yjd_hycf_space/p/7881345.html)\u535a\u5ba2\u3002",
        "postTime": 1631366643,
        "uid": 511907,
        "name": "\u4e00\u53ea\u5927\u9f99\u732b",
        "ccfLevel": 5,
        "title": "CF976C \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u9898\u610f\u5f88\u660e\u663e\uff0c\u96be\u70b9\u5728\u4e8e\u6570\u636e\u8f83\u5927\uff0cn*n\u5927\u5c0f\u7684\u6a21\u62df\u6bd4\u8f83\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u60f3\u4e2a\u65b9\u6cd5\u6765\u4f18\u5316\u4e00\u4e0b\u3002\n\n\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5148\u6309\u5de6\u533a\u95f4\u6765\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5de6\u533a\u95f4(l)\u5927\u7684\u660e\u663e\u662f\u4e0d\u53ef\u80fd\u5305\u542b\u5de6\u533a\u95f4\u5c0f\u7684\uff0c\u6bd4\u5982 \n\n3 5\n\n1 4\n\n3 5\u5f88\u660e\u663e\u662f\u5305\u542b\u4e0d\u4e861 4\u8fd9\u4e2a\u533a\u95f4\u7684\u56e0\u4e3a\u5de6\u533a\u95f43\u6bd41\u5927\u3002\n\n\u540c\u65f6\u5982\u679c\u5de6\u533a\u95f4\u76f8\u7b49\u7684\u6211\u4eec\u5c31\u6309\u53f3\u533a\u95f4(r)\u9012\u589e\u6765\u6392\u5e8f\uff0c\u4e5f\u5c31\u662f\u5982\u679ci\u548ci+1\u7684\u5de6\u533a\u95f4\u76f8\u7b49\u7684\u8bdd\uff0c\u90a3\u4e48\u53f3\u533a\u95f4\u5927\u7684\u6392\u5728\u540e\u9762,\n\ni: 2 3\n\ni+1: 2 4\n\n(\u53ef\u4ee5\u53d1\u73b0i\u548ci+1\u7684\u5de6\u533a\u95f4\u5982\u679c\u76f8\u7b49\u7684\u8bdd\uff0c\u90a3\u4e00\u5b9a\u6709\u7b54\u6848\u7684\uff0c\u800c\u4e14\u7b54\u6848\u5c31\u662fi\u548ci+1)\n\n\u4f46\u662f\u53ef\u80fd\u4f1a\u5b58\u5728\u90fd\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6dl\u4eec\u796d\u51fa\u4e86\u7ebf\u6bb5\u6811\uff0c\u5806\u7b49\u6570\u636e\u7ed3\u6784\u3002\u3002\u3002\u800c\u770b\u4e0d\u61c2\u7684\u6211\u5c31\u81ea\u95ed\u4e86\uff0c\u7136\u540e\u60f3\u4e86\u4e00\u4e0b\uff0c\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\uff01\n\n\u5982\u679c\u5b58\u5728\u89e3a b(0 <= a,b < n)\u7684\u8bdd\uff0c\u90a3\u4e48\u80af\u5b9a\u6709r(b) < r(a)\uff01\n\n\u56e0\u4e3a\u6392\u5e8f\u540e\u5df2\u7ecf\u4fdd\u8bc1l(a)<l(b)\u4e86\uff0c\u4e5f\u5c31\u662f\u5b58\u5728ra<rb\u7684\u60c5\u51b5\u5c31\u884c\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u4ecel\u6700\u5927\u7684\u4e5f\u5c31\u662f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u5c06\u5176\u5b58\u4e3atemp,\u7136\u540e\u5f80\u540e\u626b\uff0c\u9047\u5230r\u6bd4\u5b83\u5c0f\u7684\u5c31\u66f4\u65b0temp\uff0c\u9047\u5230\u6bd4\u5b83r\u5927\u7684\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\uff0c\u626b\u5b8c\u4e00\u904d\u8fd8\u6ca1\u6709\u7b54\u6848\uff0c\u8bf4\u660e\u4e0d\u5b58\u5728\uff0c\u76f4\u63a5\u8f93\u51fa-1 -1.\n\n\n```c\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n#define MAX 300005\nstruct Node{\n\tint l,r;//\u5de6\u53f3\u533a\u95f4\n\tint index;\n}N[MAX];\nbool cmp(Node a,Node b)\n{\n\tif(a.l > b.l)return 1;\n\telse if(a.l == b.l)return a.r < b.r;\n\treturn 0;\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i = 0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&N[i].l,&N[i].r);\n\t\tN[i].index = i+1;\n\t}\n\tsort(N,N+n,cmp);\n\tNode temp;\n\tfor(int i = 0;i < n;i++)\n\t{\n\t\tif(i<n-1 && N[i].l == N[i+1].l)\n\t\t{\n\t\t\tprintf(\"%d %d\",N[i].index,N[i+1].index);\n\t\t\treturn 0;\n\t\t}\n\t\tif(i && N[i].r >= temp.r)\n\t\t{\n\t\t\tprintf(\"%d %d\",temp.index,N[i].index);\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t\ttemp = N[i];//\u6b64\u65f60~i\u91ccr\u6700\u5c0f\u7684\n\t}\n\tprintf(\"-1 -1\");\n\treturn 0;\n}\n```\n",
        "postTime": 1551112223,
        "uid": 123342,
        "name": "linwenchen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF976C \u3010Nested Segments\u3011"
    }
]