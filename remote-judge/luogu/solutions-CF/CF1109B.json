[
    {
        "content": "\u770b\u5230\u5927\u5bb6\u90fd\u662f\u91c7\u7528\u5206\u5947\u5076\u5206\u7c7b\u8ba8\u8bba\u7684\u65b9\u6cd5\uff0c\u90a3\u6211\u5c31\u6765\u4e00\u7bc7\u4e0d\u4e00\u6837\u7684\u9898\u89e3\u5427\u3002\n\n\u7b54\u6848\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff0cImpossible\uff0c$1$ \u6216\u8005 $2$\u3002\n\n\u5148\u8003\u8651 Impossible \u7684\u60c5\u51b5\uff1a\u5982\u679c\u8be5\u56de\u6587\u4e32\u5185\u5168\u662f\u540c\u4e00\u4e2a\u5b57\u6bcd\uff08\u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a\u5947\u6570\u4e0d\u5305\u62ec\u6700\u4e2d\u95f4\u7684\u5b57\u7b26\uff09\uff0c\u90a3\u4e48\u5fc5\u5b9a\u65e0\u89e3\u3002\u56e0\u4e3a\u4f60\u6240\u6709\u5b57\u7b26\u76f8\u540c\uff08\u82e5\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u4e2d\u5fc3\u7684\u5b57\u7b26\u663e\u7136\u4e0d\u80fd\u79fb\u52a8\uff09\u65e0\u8bba\u5982\u4f55\u90fd\u627e\u4e0d\u51fa\u4e0e\u539f\u4e32\u4e0d\u540c\u7684\u65b9\u6848\u3002\n\n\u7531\u4e8e\u7ed9\u5b9a\u7684\u662f\u56de\u6587\u4e32\uff0c\u9664\u53bb Impossible \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5de6\u53f3\u4e24\u7aef\u80af\u5b9a\u4f1a\u5b58\u5728\u4e24\u79cd\u4e0d\u540c\u7684\u5b57\u6bcd\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u7531\u5916\u5411\u5185\u7684\u524d\u7f00\uff08\u6216\u540e\u7f00\uff09\u4e2d\u627e\u5230\u4e00\u4e2a\u7531\u4e24\u6bb5\u4e0d\u540c\u5b57\u6bcd\u7ec4\u6210\u7684\u4e32\uff0c\u4ea4\u6362\u4f4d\u7f6e\u4e4b\u540e\u4ea7\u751f\u7684\u4e32\u5fc5\u7136\u4e0e\u539f\u4e32\u4e0d\u540c\u3002\u6240\u4ee5\u7b54\u6848\u4e0d\u4f1a\u8d85\u8fc7 $2$\u3002\n\n\u6211\u4eec\u6700\u540e\u8003\u8651\u53ea\u5206\u6210\u4e24\u6bb5\u7684\u60c5\u51b5\u3002\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u65ad\u70b9\uff0c\u5c06\u4e24\u6bb5\u5b57\u7b26\u4e32\u98a0\u5012\u4f4d\u7f6e\u540e\u91cd\u65b0\u62fc\u63a5\u3002\u7136\u540e\u518d\u7ee7\u7eed\u5224\u65ad\u8be5\u65b0\u4e32\u662f\u5426\u56de\u6587\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u4e32\u5012\u7f6e\uff0c\u4e0e\u539f\u65b0\u4e32\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u540c\u90a3\u4e48\u56de\u6587\uff0c\u53cd\u4e4b\u5219\u4e0d\u7136\u3002\u4ee5\u4e0a\u8fd9\u4e9b\u90e8\u5206\u90fd\u53ef\u4ee5\u7528 **Hash** \u89e3\u51b3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u56e0\u8f6c\u6765\u8f6c\u53bb\u9ebb\u70e6\u800c\u4e0d\u60f3\u5199 **Hash** \u8be5\u600e\u4e48\u529e\uff1f\n\n\u53ef\u4ee5\u89c2\u5bdf\u5230\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 $5000$\uff0c\u663e\u7136 $O(n^2)$ \u7684\u7b97\u6cd5\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 **STL** \u4e2d\u7684 **string** \u4ee5\u53ca\u5b83\u7684\u5e93\u51fd\u6570 **substr** \u6765\u89e3\u51b3\u95ee\u9898\uff08\u61d2\u4eba\u4e13\u5c5e\u4e14 **string** \u7684\u5185\u90e8\u91cd\u5b9a\u4e49\u8fd0\u7b97\u5e38\u6570\u5927\uff0c\u90fd\u9700\u4ea7\u751f\u65b0\u4e32\u6765\u8fd0\u7b97\uff0c\u8fd0\u7b97\u590d\u6742\u5ea6\u4e3a $O(|s|)$ \u7684\uff0c\u6570\u636e\u91cf\u4e00\u5927\u5c31 **GG** \u4e86\uff0c\u6240\u4ee5\u4e0d\u63a8\u8350\uff0c\u6240\u4ee5\u8fd8\u662f\u5efa\u8bae\u5199 **Hash**\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,res;\nstring s,S,T;\nint main(){\n\tstd::ios::sync_with_stdio(0);cin.tie(0);\n\tcin>>s;n=s.size();\n\tfor(int i=0;i<n>>1;i++)res+=(s[i]!=s[0]);\n\tif(!res)return puts(\"Impossible\"),0;//\u5224\u65ad\u65e0\u89e3\n\tfor(int i=1;i<=n>>1;i++){\n\t\tT=s.substr(i,n)+s.substr(0,i);//\u83b7\u5f97\u65b0\u4e32\n\t\tS=T;reverse(S.begin(),S.end());//\u7ffb\u8f6c\u65b0\u4e32\n\t\tif(S==T&&S!=s)return puts(\"1\"),0;//\u5224\u65ad\u662f\u5426\u56de\u6587\uff0c\u4e14\u662f\u5426\u4e0e\u539f\u4e32\u4e00\u81f4\n\t}\n\tputs(\"2\");\n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1629380433,
        "uid": 120010,
        "name": "CaiXY06",
        "ccfLevel": 6,
        "title": "solution-cf1109b"
    },
    {
        "content": "\u5148\u8003\u8651`Impossible`\u7684\u60c5\u51b5\u3002\n\n\u663e\u7136\u5982\u679c\u6240\u6709\u5b57\u7b26\u5168\u4e00\u6837\u90a3\u80af\u5b9a\u65e0\u89e3\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u5c31\u662f $n$ \u4e3a\u5947\u6570\u4e14\u9664\u4e86\u4e2d\u95f4\u7684\u4e00\u4e2a\u5b57\u7b26\u5176\u4f59\u5168\u90e8\u76f8\u7b49\uff0c\u4e5f\u65e0\u89e3\u3002\n\n\u7406\u7531\u5f88\u7b80\u5355\uff0c\u5269\u4e0b\u7684\u5b57\u7b26\u5168\u76f8\u7b49\uff0c\u7531\u4e8e\u65b0\u4e32\u662f\u56de\u6587\u7684\uff0c\u6240\u4ee5\u548c\u539f\u6765\u7684\u4e32\u4e00\u5b9a\u662f\u540c\u4e00\u4e2a\u4e32\u3002\n\n\u4e0b\u9762\u6211\u4eec\u5206\u5947\u5076\u6027\u6765\u8ba8\u8bba\u3002\n\n-  $n$ \u4e3a\u5947\u6570\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7b54\u6848\u4e0d\u5927\u4e8e $2$ \uff0c\u56e0\u4e3a\u9664\u4e86\u4e2d\u95f4\u7684\u65c1\u8fb9\u7684\u5b57\u7b26\u4e0d\u5168\u76f8\u7b49\uff0c\u6240\u4ee5\u4e00\u5b9a\u6709\u4e2d\u95f4\u7684\u4e00\u6bb5\uff0c\u4ed6\u7684\u4e24\u8fb9\u4e0d\u662f\u56de\u6587\u4e32\uff0c\u76f4\u63a5\u5207\u4e24\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u540c\u65f6\uff0c\u7b54\u6848\u4e5f\u4e0d\u53ef\u80fd\u5c0f\u4e8e $2$ \uff0c\u56e0\u4e3a\u5982\u679c\u4e00\u5200\u5c31\u884c\u7684\u8bdd\uff0c\u7531\u4e8e\u65b0\u4e32\u56de\u6587\uff0c\u4e14\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u6240\u4ee5\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u5c31\u80fd\u770b\u51fa\uff0c\u8fd9\u6837\u4e00\u5b9a\u6240\u6709\u5b57\u7b26\u90fd\u76f8\u7b49\u624d\u80fd\u8ba9\u65b0\u4e32\u548c\u539f\u4e32\u5168\u90fd\u56de\u6587\uff0c\u800c\u8fd9\u65f6\u7b54\u6848\u4e3a`Impossible`\uff0c\u4e0d\u7b26\u5408\u9898\u610f\u3002\n\n\u6240\u4ee5\u5f53 $n$ \u4e3a\u5947\u6570\u65f6\uff0c\u7b54\u6848\u4e3a $2$ \u3002\n\n-  $n$ \u4e3a\u5076\u6570\n\n\u8fd9\u65f6\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u6211\u4eec\u53d6\u4e32\u7684\u524d\u4e00\u534a\uff0c\u7531\u4e8e\u662f\u56de\u6587\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u4e32\uff0c\u6240\u4ee5\u540e\u4e00\u534a\u4e00\u6837\u7684\u4e0d\u7528\u7ba1\u5c31\u53ef\u4ee5\u4e86\u3002\n1. \u53d6\u51fa\u7684\u8fd9\u4e2a\u4e32\u4e0d\u662f\u56de\u6587\u4e32\uff0c\u8fd9\u65f6\u76f4\u63a5\u4e00\u5200\u628a\u539f\u4e32\u4ece\u4e2d\u95f4\u5206\u6210\u4e24\u6bb5\u5373\u53ef\uff0c\u7b54\u6848\u4e3a $1$ \u3002\n1. \u53d6\u51fa\u7684\u4e32\u662f\u56de\u6587\u4e32\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u4e2a\u539f\u4e32\u5206\u6210\u4e24\u534a\uff0c\u56e0\u4e3a\u8fd9\u4e00\u534a\u56de\u6587\uff0c\u6240\u4ee5\u6c42\u51fa\u5f53\u4e32\u957f\u4e3a $\\frac{n}{2}$ \u65f6\u7684\u7b54\u6848\u3002\u5982\u679c\u662f $2$ \u5c31\u5bf9\u79f0\u7684\u5207\u4e00\u5200\uff0c\u539f\u4e32\u7b54\u6848\u4ecd\u4e3a $2$ \u3002\u5982\u679c\u662f $1$ \u5c31\u8fd8\u5728\u90a3\u4e2a\u4f4d\u7f6e\u5207\uff0c\u539f\u4e32\u7b54\u6848\u4ecd\u4e3a $1$ \u3002\u6240\u4ee5\u65b0\u4e32\u7684\u7b54\u6848\u5373\u4e3a\u539f\u4e32\u7684\u7b54\u6848\uff0c\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define N 1001001\n#define MAX 2001\n#define inf 1e18\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ninline void read(re ll &ret)\n{\n    ret=0;re ll pd=0;re char c=getchar();\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();}\n    ret=pd?-ret:ret;\n    return;\n}\nll t,n;\nchar s[N];\nsigned main()\n{\n    t=1;\n    while(t--)\n    {\n        scanf(\"%s\",s+1);\n        n=strlen(s+1);\n        re bool flag=true;\n        for(re int i=2;i<=(n>>1);i++)\n            flag&=(s[i]==s[i-1]);\n        if(flag)\n        {\n            puts(\"Impossible\");\n            continue;\n        }\nstart:\n        flag=true;\n        for(re int i=1;(i<<1)<=n;i++)\n        {\n            if(s[(n>>1)-i+1]!=s[i])\n                flag=false;\n        }\n        if(!flag&&(n&1))\n        {\n            puts(\"2\");\n            continue;\n        }\n        else if(!flag&&!(n&1))\n        {\n            puts(\"1\");\n            continue;\n        }\n        else if(flag&&(n&1))\n        {\n            puts(\"2\");\n            continue;\n        }\n        else if(flag&&!(n&1))\n        {\n            n>>=1;\n            goto start;//\u5373\u4e3a\u524d\u6587\u6240\u8bf4\u7684\u9012\u5f52\uff0cgoto\u7b80\u5316\u4ee3\u7801\n        }\n \n    }\n\texit(0);\n}\n```\n",
        "postTime": 1602936420,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1109B \u3010Sasha and One More Name\u3011"
    },
    {
        "content": "\u5148\u8bf4\u65e0\u89e3\u60c5\u51b5\n1. \u5947\u56de\u6587\u4e32\u65f6\uff0c\u5de6\u53f3\u4e24\u7aef\u7684\u4e32\u7684\u5b57\u7b26\u90fd\u76f8\u7b49\n2. \u5076\u56de\u6587\u4e32\u65f6\uff0c\u6574\u4e2a\u4e32\u7684\u5b57\u7b26\u90fd\u76f8\u7b49\n\n\u9664\u4e86\u65e0\u89e3\u60c5\u51b5\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6709\u4e09\u79cd\u60c5\u51b5\u3002\n\n\u6211\u4eec\u8bbe\u8fd9\u4e2a\u56de\u6587\u4e32\u53eb\u505a`s`,\u5176\u957f\u5ea6\u4e3a`l`\u3002\n\n---\n\n\u7b2c\u4e00\u79cd\uff1a\u5947\u56de\u6587\u4e32\n\n\u6709\u7ed3\u8bba\uff0c\u8fd9\u65f6\u5fc5\u987b\u8981\u5207\u5206`2`\u6b21\u3002\n\n\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8981\u9009\u62e9\u5207\u6389\u4e32`A`\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cod553ox.png)\n\n\u90a3\u4e48\u7531\u4e8e\u4e00\u5171\u6709\u4e24\u4e2a\u5bf9\u79f0\u4e2d\u5fc3\uff0c\u90a3\u4e48\u5de6\u53f3\u5bf9\u79f0\u7684\u64cd\u4f5c\u4f1a\u4e00\u76f4\u6301\u7eed\u4e0b\u53bb\u3002\n\n\u53c8\u56e0\u4e3a\u8fd9\u4e2a\u5947\u56de\u6587\u4e32\u662f\u6709\u5bf9\u79f0\u4e2d\u5fc3\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u4e0b\u53bb\u4e00\u5b9a\u4f1a\u4f7f\u5f97\u6574\u4e2a\u4e32\u90fd\u662f`A`\u4e32\uff0c\u6709\u7531\u4e8e`A`\u4e32\u4f1a\u6709\u91cd\u53e0\uff0c\u5bfc\u81f4\u6574\u4e2a\u4e32\u90fd\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u6b64\u65f6\u5f52\u4e8e\u65e0\u89e3\u60c5\u51b5\u3002\n\n\u800c\u6211\u4eec\u53ef\u4ee5\u4ece\u5de6\u53f3\u627e\u51fa\u7b2c\u4e00\u4e2a\u4e0d\u662f\u56de\u6587\u7684\u5730\u65b9\uff0c\u7136\u540e\u5207\u65ad\uff0c\u518d\u4ea4\u6362\u5c31\u662f\u4e00\u79cd\u5408\u6cd5\u60c5\u51b5\u3002\n\n\u5f53\u7136\u7531\u4e8e\u5de6\u53f3\u5e76\u4e0d\u662f\u5168\u90e8\u76f8\u540c\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728\u53ef\u4ee5\u5207\u5206\u7684\u5730\u65b9\u3002\n\n---\n\u7b2c\u4e8c\u79cd \u5076\u56de\u6587\u4e32\uff0c\u4e14\u4e24\u8fb9\u7684\u5b50\u4e32\u4e0d\u662f\u56de\u6587\n\n\u6709\u7ed3\u8bba\u6b64\u65f6\u53ea\u9700\u8981\u5207\u5206`1`\u6b21\u3002\n\n\u76f4\u63a5\u4ece\u5bf9\u79f0\u8f74\u90a3\u91cc\u5207\u5f00\uff0c\u518d\u4ea4\u6362\uff0c\u7531\u4e8e\u5de6\u53f3\u5b57\u4e32\u4e0d\u662f\u56de\u6587\u4e32\u6240\u4ee5\u4e00\u5b9a\u662f\u76f8\u5f02\u7684\u4e32\u3002\n\n---\n\u7b2c\u4e8c\u79cd \u5076\u56de\u6587\u4e32\uff0c\u4e14\u4e24\u8fb9\u7684\u5b50\u4e32\u90fd\u662f\u56de\u6587\n\n\u6709\u7ed3\u8bba\uff0c\u6b64\u65f6\u7684\u7b54\u6848\u7b49\u4e8e\u8be5\u4e32\u4ece\u4e2d\u70b9\u5207\u5f00\u4e24\u7aef\u4e32\u7684\u7b54\u6848\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u6700\u540e\u4e00\u5b9a\u662f\u4e00\u5806\"\u5168\u7b49\"\u7684\u5b50\u4e32\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9ge1viwo.png)\n\n\u5982\u56fe\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u6211\u4eec\u5b50\u4e32\u53ea\u8981\u80fd\u591f\u88ab\u5207\u5f00\uff0c\u90a3\u4e48\u6574\u4e2a\u56de\u6587\u4e32\u4e5f\u53ef\u4ee5\u88ab\u5207\u51fa\u6765\u3002\n\n\u800c\u5bf9\u79f0\u4e2d\u5fc3\u7684\u4f4d\u7f6e\u4e5f\u6070\u597d\u79fb\u52a8\u5230\u4e86\u90a3\u4e2a\u5b50\u4e32\u7684\u5207\u5272\u5904\uff0c\u7531\u4e8e\u6bcf\u4e2a\u5b50\u4e32\u90fd\u662f\u56de\u6587\u4e32\u3002\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u73b0\u5728\u7684\u7684\u4e32\u5c31\u662f\u65b0\u7684\u56de\u6587\u4e32\u3002\n\n$\\text{code}$\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=300000;\nchar s[N];\nint t;\ninline int cmp(char *s,int l)\n{\n    bool f=1;\n    int mid=l/2;\n    for(int i=1,j=mid;i<=mid;i++,j--)\n    {\n        if(s[i]!=s[j])\n        {\n            f=0;\n            break;\n        }\n    }\n    if(f==1&&l%2==1) return 2;\n    if(f==1) return  cmp(s,mid);\n    if(!f&&(l%2==1))\n        return 2;\n    return 1;\n}\nint main()\n{\n    t=1;\n    while(t--)\n    {\n        scanf(\"%s\",s+1);\n        int n=strlen(s+1);\n        int l=n;\n        if(l%2==1)\n        {\n            int mid=l/2;\n            bool f=1;\n            for(int i=1,j=mid;i<=mid;i++)\n            {\n                if(s[i]!=s[1])\n                {\n                    f=0;\n                    break;\n                }\n            }\n            if(f) puts(\"Impossible\");\n            else puts(\"2\");\n            continue;\n        }\n        bool f=1;\n        int mid=l/2;\n        for(int i=1,j=mid;i<=mid;i++,j--)\n        {\n            if(s[i]!=s[1])\n            {\n                f=0;\n                break;\n            }\n        }\n        if(f==1) {puts(\"Impossible\");continue;}\n        int k=cmp(s,n);\n        if(k==0) puts(\"Impossible\");\n        else cout<<k<<endl;\n    }\n}\n\n```",
        "postTime": 1602937643,
        "uid": 184069,
        "name": "Imitators",
        "ccfLevel": 0,
        "title": "CF1109B"
    },
    {
        "content": "\u8fd9\u9898\u771f\u6b63\u8bc1\u660e\u6211\u4e0d\u4f1a\u554aQAQ\u627e\u89c4\u5f8b\u505a\u7684\n\n\u8fd8\u662f\u8bf4\u8bf4qwq\n\n\u9996\u5148\u7b54\u6848\u8981\u4e48\u662f$1$\u8981\u4e48\u662f$2$\u8981\u4e48$Impossible$\n\n\u611f\u6027\u7406\u89e3\u4e0b\u5c31\u597d\n\n\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u65f6\u5019\u5f88\u65b9\u4fbf\uff0c\u4f46\u662f\u5076\u6570\u5c31\u5f88\u9ebb\u70e6\u4e86\n\n\u4e00\u5f00\u59cb\u7684\u601d\u8def\u662f\u548c\u5947\u6570\u4e00\u6837\uff0c\u5224\u65ad\u524d\u4e00\u534a\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u4f1a\u53d1\u73b0\u8fc7\u4e0d\u4e86\u6837\u4f8b\n\n\u8003\u8651\u5230\u5076\u6570\u4e2a\u53ef\u4ee5\u62c6\u5206\u6210\u5f88\u591a\u4e2a\u5c0f\u7684\u56de\u6587\u4e32\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a$k\\times 2^m(1\\leq m)$\u7684\u56de\u6587\u4e32\uff0c\u53ef\u4ee5\u62c6\u6210$k$\u4e2a\u5b50\u4e32\u6765\u7ec4\u5408\n\n\u6240\u4ee5\u53ea\u8981\u6bcf\u6b21\u5c06\u5224\u65ad\u957f\u5ea6\u9664\u4ee5\u4e8c\u6765\u770b\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u76f4\u5230\u5176\u4e3a\u5947\u6570\u957f\u5ea6\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar s[5010],p[5010];\nint main()\n{\n    cin>>s;\n    int k=strlen(s);\n    if(k&1)\n    {\n        int flag=0;\n        for(int i=1;i<(k>>1);i++)\n        {\n            if(s[i]!=s[i-1])\n            {\n                flag=1;\n                break;\n            }\n        }\n        if(!flag)\n        {\n            cout<<\"Impossible\";\n            return 0;\n        }\n        cout<<2;\n        return 0;\n    }\n    else\n    {\n        int flag=0;\n        for(int i=1;i<=(k>>1);i++)\n        {\n            if(s[i]!=s[i-1])\n            {\n                flag=1;\n                break;\n            }\n        }\n        if(!flag)\n        {\n            cout<<\"Impossible\";\n            return 0;\n        }\n        for(int i=0;i<k;i++)\n        {\n            p[i]=s[i];\n        }\n        int flags=0;\n        for(int m=k;(m%2==0)&&m>0;m>>=1)\n        {\n            reverse(s,s+(m>>1));\n            if(strcmp(s,p)!=0)\n            {\n                flags=1;\n                break;\n            }\n            reverse(s,s+(m>>1));\n        }\n        if(flags)\n        {\n            cout<<1;\n        }\n        else\n        {\n            cout<<2;\n        }\n    }\n}\n```",
        "postTime": 1551451507,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1109B \u3010Sasha and One More Name\u3011"
    },
    {
        "content": "## \u7ed3\u8bba\n\n\u7b80\u5355\u89c2\u5bdf\u540e\uff0c\u76f4\u63a5~~\u6254~~\u731c\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\u7b54\u6848\u53ea\u6709 `Impossible`\uff0c$1$ \u6216\u8005 $2$\u3002\n\n## \u8bc1\u660e\n\n\u4e8e\u662f\u6211\u4eec\u5c1d\u8bd5\u8bc1\u660e\u8fd9\u4e2a\u7ed3\u8bba\u3002\u8bbe\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a $l$\uff0c\u5e76\u4ee4 $t=\\lceil\\frac l 2\\rceil$\u3002\n\n\u76f4\u63a5\u8bc1\u6bd4\u8f83\u96be\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5224\u5b9a `Impossible` \u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u5927\u81f4\u6709\u4e24\u79cd\u60c5\u51b5\u3002\n\n1. \u5168\u90e8\u90fd\u662f\u540c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u6bd4\u8f83\u663e\u7136\u3002\n2. $l$ \u4e3a\u5947\u6570\uff0c\u5e76\u4e14\u9664\u4e86 $s_{t}$ \u4e4b\u5916\uff0c\u5176\u4f59\u5b57\u6bcd\u90fd\u76f8\u540c\u3002\u8fd9\u6837\u7684\u8bdd\u8fd9\u4e2a\u5b57\u6bcd\u4e00\u5b9a\u653e\u5728\u4e2d\u95f4\uff0c\u6240\u4ee5\u65e0\u8bba\u600e\u4e48\u6362\uff0c\u4e00\u5171\u5c31\u4e00\u79cd\u53ef\u80fd\u7684\u56de\u6587\u4e32\uff0c\u5373\u539f\u4e32\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5728\u5224\u65ad\u5b8c `Impossible` \u4e4b\u540e\uff0c\u53d1\u73b0\u5269\u4e0b\u7684 $s$ \u90fd\u662f\u6709\u89e3\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53d1\u73b0 $s$ \u4e00\u5b9a\u6ee1\u8db3\u4e00\u4e2a\u6027\u8d28\uff1a\u603b\u662f\u5b58\u5728\u81f3\u5c11\u4e24\u4e2a $i\\ (1\\leqslant i<t)$ \u6ee1\u8db3 $s_i\\neq s_{i+1}$\u3002\u5e76\u4e14\u5bb9\u6613\u53d1\u73b0 $l\\geqslant 4$\u3002\n\n\u4e3a\u4ec0\u4e48\u6ee1\u8db3\u6b64\u6027\u8d28\uff1f\u56e0\u4e3a\u5982\u679c\u4e0d\u6ee1\u8db3\u6b64\u6027\u8d28\u7684\u5b57\u7b26\u4e32\u90fd\u662f `Impossible` \u7684\u3002\n\n\u73b0\u5728\u6211\u4eec\u6765\u8bc1\u660e\u9700\u8981\u7684\u5207\u5206\u6b21\u6570\u4e0d\u591a\u4e8e $2$\uff1a\n\n\u6839\u636e\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u7b2c\u4e8c\u4e2a $j$ \u4f7f $1\\leqslant j<t$\uff0c\u6211\u4eec\u5c06 $s$ \u5212\u5206\u6210 $1\\sim j+1,\\ j+1\\sim l-j-1,\\ l-j\\sim l$ \u4e09\u6bb5\u3002\n\n\u7531\u4e8e $s$ \u4e3a\u56de\u6587\u4e32\uff0c\u5e76\u4e14\u7b2c\u4e00\u6bb5\u4e0e\u7b2c\u4e09\u6bb5\u957f\u5ea6\u76f8\u7b49\u7684\u3002\u5728\u7b2c\u4e00\u6bb5\u4e2d\uff0c\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e4b\u5916\uff0c\u5176\u4f59\u5747\u76f8\u7b49\uff1b\u5728\u7b2c\u4e09\u6bb5\u4e2d\uff0c\u9664\u4e86\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5916\uff0c\u5176\u4f59\u5747\u76f8\u7b49\u3002\u53c8 $s_1=s_l,s_{j+1}=s_{l-j}$\uff0c\u6240\u4ee5\u7b2c\u4e00\u6bb5\u548c\u7b2c\u4e09\u6bb5\u4e0d\u76f8\u7b49\u3002\u56e0\u6b64\u4ea4\u6362\u540e\uff0c\u65b0\u4e32\u4e0e\u539f\u4e32\u4e0d\u76f8\u7b49\u3002\n\n\u4ea4\u6362\u7b2c\u4e00\u6bb5\u548c\u7b2c\u4e09\u6bb5\u4e4b\u540e\uff0c\u7531\u4e8e\u539f\u4e32\u7684\u56de\u6587\u6027\u8d28\uff0c\u7b2c\u4e8c\u6bb5\u662f\u56de\u6587\u4e32\uff0c\u7b2c\u4e00\u6bb5\u548c\u7b2c\u4e09\u6bb5\u6b63\u597d\u662f\u4e92\u76f8\u7ffb\u8f6c\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u65b0\u4e32\u4e5f\u662f\u56de\u6587\u4e32\u3002\n\n\u4e8e\u662f\uff0c\u53ea\u8981\u6309\u6b64\u65b9\u6cd5\u4ea4\u6362\uff0c\u5207\u5206\u6b21\u6570\u4e00\u5b9a\u4e0d\u591a\u4e8e $2$\uff0c\u8bc1\u6bd5\u3002\n\n## \u601d\u8def\n\n\u5148\u5224\u65ad `Impossible`\uff0c\u5f88\u7b80\u5355\uff0c\u4ece $1$ \u626b\u5230 $t$ \u5373\u53ef\u3002\n\n\u5176\u6b21\uff0c\u5df2\u7ecf\u8bc1\u660e\u7b54\u6848\u662f $1$ \u6216 $2$\u3002\u7531\u4e8e\u9700\u8981\u6700\u5c0f\u503c\uff0c\u4e0d\u96be\u53d1\u73b0\u66f4\u91cd\u8981\u7684\u662f\u5224\u65ad $1$ \u53ef\u4e0d\u53ef\u884c\u3002\n\n\u5b9e\u9645\u4e0a\u8fd9\u662f\u5f88\u7b80\u5355\u7684\uff0c\u6211\u4eec\u679a\u4e3e\u5728\u54ea\u91cc\u5207\u5206\u5373\u53ef\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u5207\u5206\uff0c\u76f4\u63a5\u66b4\u529b\u4ea4\u6362\u4e0e\u5224\u65ad\u56de\u6587\uff0c\u89c2\u5bdf\u5230 $l\\leqslant 5000$\uff0c\u8fd9\u6837\u505a\u662f $l^2$ \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u5982\u679c\u679a\u4e3e\u5b8c\u4e4b\u540e\u6ca1\u6709\u53ef\u884c\u7684\uff0c\u8bf4\u660e $1$ \u6b21\u5207\u5206\u4e0d\u80fd\u6ee1\u8db3\uff0c\u8f93\u51fa $2$ \u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```C++\n#include <string>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nstring s; bool d;\nint main()\n{\n    cin >> s; const int l(s.size()); s = ' ' + s; // \u4e0b\u6807\u4ece 1 \u5f00\u59cb\uff0c\u65b9\u4fbf\u5904\u7406\n    for (int i(2); i <= l >> 1; ++i) if (s[i] != s[1]) { d = true; break; }\n    if (!d) { puts(\"Impossible\"); return 0; } // \u4e0d\u53ef\u884c\n    for (int i(1); i <= l >> 1; ++i) {\n        const string t(s.substr(i + 1) + s.substr(1, i));        // \u4ea4\u6362\n        string r(t); reverse(r.begin(), r.end());                // \u7ffb\u8f6c\n        if (s.substr(1) != t && r == t) { puts(\"1\"); return 0; } // \u5224\u65ad\n    } puts(\"2\"); return 0;\n}\n```",
        "postTime": 1665044329,
        "uid": 282929,
        "name": "\u67f3\u6613\u8fb0",
        "ccfLevel": 0,
        "title": "CF1109B \u9898\u89e3"
    }
]