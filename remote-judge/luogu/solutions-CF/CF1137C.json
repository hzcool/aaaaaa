[
    {
        "content": "[CF1137C Museums Tour\n](https://www.luogu.com.cn/problem/CF1137C)\n\n---\n\n# \u601d\u8def\n\n\u5206\u5c42\u56fe & \u5f3a\u8fde\u901a\u7f29\u70b9\u3002\n\n\u6ce8\u610f\u4e00\u4e9b\u8981\u70b9\uff1a\n\n1. \u53ea\u8981\u80fd\u8d70\uff0c\u65c5\u884c\u8005\u53ef\u4ee5\u8d70\u65e0\u6570\u5929\u3002\n2. \u4e00\u5468 $d$ \u5929\u7684\u5f00\u653e\u662f\u5faa\u73af\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u62c6\u70b9\uff0c\u628a\u4e00\u4e2a\u70b9 $u$ \u62c6\u6210 $[u,0],[u,1],\\dots,[u,d-1]$\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u7684\u535a\u7269\u9986\u5bf9\u5e94\u4e00\u4e2a\u786e\u5b9a\u7684\u72b6\u6001 \u5f00/\u5173\u3002\n\n\u5bf9\u4e8e\u539f\u56fe\u4e0a\u7684\u8fb9 $u\\to v$ \uff0c\u62c6\u6210 $d$ \u6761\u8fb9 $[u,i]\\to [v,(i+1)\\bmod d] (0\\le i\\le d-1)$ \uff0c\u76f8\u5f53\u4e8e\u4eca\u5929\u7684 $u$ \u5411\u660e\u5929\u7684 $v$ \u8fde\u8fb9\u3002\n\n\u7136\u540e\u4ece $[1,0]$ \u5f00\u59cb\u8dd1\u4e00\u6b21\u6700\u957f\u8def\u5c31\u53ef\u4ee5\u4e86\uff1f\u4e0d\u884c\uff0c\u56fe\u4e0a\u8fd8\u6709\u73af\u3002\n\n\u4e8e\u662f\u60f3\u5230 Tarjan \u7f29\u70b9\uff0c\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u6743\u4e3a **\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u5f00\u542f\u7684\u4e0d\u540c\u535a\u7269\u9986\u4e2a\u6570**\u3002\n\n\u7f29\u70b9\u540e\u5f62\u6210\u4e00\u4e2a DAG \u5c31\u53ef\u4ee5\u76f4\u63a5 dfs \u6c42\u6700\u957f\u8def\u4e86\u3002\n\nQ: \u4f1a\u4e0d\u4f1a\u91cd\u590d\u7edf\u8ba1\u76f8\u540c\u535a\u7269\u9986\uff1f\n\n\u4e0d\u4f1a\u7684\uff0c\u5047\u8bbe $[u,i]$ \u4e0e $[u,j]$ \u5728\u4e0d\u540c\u5f3a\u8fde\u901a\u5206\u91cf\u4e14 $[u,i]$ \u53ef\u5230 $[u,j]$ \uff0c\u90a3\u4e48\u4ece $[u,j]$ \u4e5f\u80fd\u8d70\u5230 $[u,i]$ \u3002\n\nupd:\u4e0a\u9762\u90a3\u53e5\u8bdd\u7684\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u5982\u679c\u5b58\u5728 $[i,a]\\to [i,a+x]$ \uff0c\u90a3\u4e48\n$[i,a+x]\\to[i,a+x+x]$ \uff0c \u4ee5\u6b64\u7c7b\u63a8 $[i,a+x]\\to [i,(a+x*d)\\ \\bmod \\ d]$\n\n\u800c $[i,(a+x*d)\\ \\bmod \\ d]$ \u5c31\u662f $[i,a]$\n\n\u4e5f\u5c31\u662f\u8bf4 \u5982\u679c $[i,a]\\to [i,a+x]$ \uff0c\u90a3\u4e48\n$[i,a+x]\\to[i,a]$\n\n\u65f6\u95f4/\u7a7a\u95f4\u590d\u6742\u5ea6 $O(nd)$ \u3002\n\n\u8fd9\u9898\u601d\u8def\u8fd8\u662f\u633a\u987a\u7684\uff08\n\n# \u4ee3\u7801\n\n\u6709\u70b9\u96be\u5199\uff0c\u8fd8\u8981\u6ce8\u610f\u4e0d\u88ab\u5361\u7a7a\u95f4\uff08\n\n\u6ce8\u610f\uff1a\u8ba1\u7b97\u70b9\u6743\u7684\u65f6\u5019\uff0cvis \u6570\u7ec4\u4e0d\u80fd memset \u3002\n\n```cpp\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#define For(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Rep(i,a,b) for(register int i=(a);i>=(b);--i)\nusing namespace std;\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\n#define maxn 100005\n#define N 100005*50\nint n,m,k;\nlong long sta[maxn];\n\nstruct edge{\n\tint to,nxt;\n}e[N],e2[N];\nint tot,tot2,head[N],head2[N];\ninline void adde(int u,int v){\n\te[++tot]=(edge){v,head[u]};\n\thead[u]=tot;\n}\ninline void adde2(int u,int v){\n\te2[++tot2]=(edge){v,head2[u]};\n\thead2[u]=tot2;\n}\n\nint idx,scc,bel[N],dfn[N],low[N];\nint f[N],val[N];\nbool ins[N],vis[N];\nstack<int>s,q;\ninline void tarjan(int u){\n\tdfn[u]=low[u]=++idx;\n\tins[u]=1;s.push(u);\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}else if(ins[v])\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t}\n\tif(low[u]!=dfn[u])return;\n\t++scc;int v; \n\tdo{\n\t\tv=s.top();s.pop();\n\t\tins[v]=0,bel[v]=scc;\n\t\tint x=(v-1)%n+1,day=(v-1)/n;\n      // x:\u54ea\u4e2a\u57ce\u5e02\n      // day:\u54ea\u5929\n\t\tif(!vis[x] && (sta[x]>>day&1)){\n\t\t\tval[scc]++,vis[x]=1;\n\t\t\tq.push(x);\n\t\t}\n\t}while(u!=v);\n\twhile(!q.empty())vis[q.top()]=0,q.pop();\n}\n\ninline int P(int i,int j){\n\treturn j*n+i;\n}\n//dfs \u6700\u957f\u8def\nint dfs(int u)\n{\n\tif(vis[u])return f[u];\n\tvis[u]=1;\n\tfor(int i=head2[u];i;i=e2[i].nxt){\n\t\tint v=e2[i].to;\n\t\tf[u]=max(f[u],dfs(v));\n\t}\n\treturn f[u]+=val[u];\n}\n\nint main()\n{\n\tn=read(),m=read(),k=read();\n\tFor(i,1,m){\n\t\tint u=read(),v=read();\n\t\tFor(j,0,k-1)adde(P(u,j),P(v,(j+1)%k));\n\t}\n\tchar ch;\n\tFor(i,1,n)\n\t\tFor(j,0,k-1){\n\t\t\twhile(!isdigit(ch=getchar()));\n\t\t\tsta[i]|=1ll*(ch-'0')<<j;\n\t\t}\n\n\ttarjan(1);\n\t\n\tFor(i,1,n*k)\n\t{\n\t\tif(!dfn[i])continue;\n\t\tint u=bel[i];\n\t\tfor(int j=head[i];j;j=e[j].nxt){\n\t\t\tint v=e[j].to;\n\t\t\tif(!dfn[v])continue;\n\t\t\tv=bel[v];\n\t\t\tif(u!=v)adde2(u,v);\n\t\t}\n\t}\n\tcout<<dfs(bel[1]);\n    return 0;\n}\n```",
        "postTime": 1591000382,
        "uid": 151935,
        "name": "Rainbow_qwq",
        "ccfLevel": 0,
        "title": "CF1137C \u3010Museums Tour\u3011"
    },
    {
        "content": "## \u849f\u84bb\u8bed\n\u672c\u6765\u4e0d\u5230 $1$ \u5c0f\u65f6\u5c31\u5199\u51fa\u6765\u4e86, \u6570\u7ec4\u5374\u6e05\u7a7a\u9519\u4e86 QAQ\n\n$\\Huge \\text{sto sjy orz}$\n\n## \u849f\u84bb\u89e3\n\n\u8003\u8651\u5230\u6bcf\u4e00\u5929\u535a\u7269\u9986\u5f00\u653e\u60c5\u51b5\u662f\u4e0d\u76f8\u540c\u7684, \u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u535a\u7269\u9986\u4e00\u5468\u7684\u6bcf\u4e00\u5929\u7684\u60c5\u51b5\u5b58\u4e0b\u6765, \u7b2c $u$ \u4e2a\u535a\u7269\u9986 $k$ \u5929\u7684\u7f16\u53f7\u662f $u + (k-1)n$\u3002\u6bcf\u4e00\u6761\u8fb9\u3000$(u, v)$, \u5bf9\u4e8e $\\forall x \\in [1, d]$, \u8fde\u4e00\u6761 $(u + (x - 1) n, v + (x \\mod d) n + v)$ \u7684\u8fb9\u3002\n\n\u73b0\u5728\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5bf9\u5e94\u7740\u4e00\u4e2a\u535a\u7269\u9986\u548c\u4e00\u5468\u4e2d\u7684\u67d0\u4e00\u5929\u3002\n\n\u6700\u540e\u8981\u6c42\u7684\u662f\u4ece $1$ \u53f7\u70b9\u51fa\u53d1, \u80fd\u5230\u8fbe\u51e0\u4e2a\u5f00\u7740\u535a\u7269\u9986\u3002\n\n\u9996\u5148\u5148\u7f29\u70b9\u3002\n\n**\u4e24\u4e2a\u5bf9\u5e94\u76f8\u540c\u535a\u7269\u9986\u7684\u8981\u4e48\u7f29\u5b8c\u4e4b\u540e\u5728\u7edf\u4e00\u4e2a\u70b9, \u8981\u4e48\u4e0d\u8054\u901a**\n\n\u5982\u4f55\u8bc1\u660e\u5462\uff1fsjy \u8bf4\u5f88\u7b80\u5355\u3002 \n\n\u5047\u8bbe\u7b2c $u$ \u5929\u5bf9\u5e94\u7684\u70b9\u80fd\u5230\u7b2c $v$ \u5929\u5bf9\u5e94\u7684\u70b9 (\u4e0d\u59a8 $v > u$), \u6240\u4ee5\u8fd9\u4e2a\u535a\u7269\u9986\u7ecf\u8fc7 $v - u$ \u5929\u53ef\u4ee5\u8fd4\u56de\u5230\u81ea\u5df1\u3002\u56e0\u6b64 $lcm(n, v - u) - (v - u)$ \u5929\u540e\u8fd8\u662f\u53ef\u4ee5\u8fd4\u56de\u5230\u8fd9\u4e2a\u535a\u7269\u9986\u3002 $lcm(u, v - u) - v - u \\equiv (v - u)\\pmod{n}$\u3002\n\n\u6240\u4ee5\u7b2c $v$ \u5929\u5bf9\u5e94\u7684\u70b9\u53ef\u4ee5\u5230\u8fbe $v-u$ \u5929\u524d\u5bf9\u5e94\u7684\u70b9\u3002\u6240\u4ee5\u7b2c $v$ \u5929\u5bf9\u5e94\u7684\u70b9\u53ef\u4ee5\u5230\u8fbe\u7b2c $u$ \u5929\u5230\u8fbe\u7684\u70b9\u3002\n\n---\n\u6240\u4ee5\u73b0\u5728\u53ea\u8981\u5148\u7f29\u70b9, \u7136\u540e\u7edf\u8ba1\u4e00\u4e0b\u7f29\u4e86\u4e4b\u540e\u7684\u70b9\u91cc\u9762\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684 \u535a\u7269\u9986\u5f00\u95e8\u7684\u72b6\u6001\uff0c \u6700\u540e\u8dd1\u4e00\u904d\u6700\u957f\u8def\u5c31\u597d\u4e86\u3002\n\n## \u849f\u84bb\u7801\n\n```\n#include<bits/stdc++.h>\n#define N 100010\n#define M 5000010\n#define L(i, j, k) for(int i = j; i <= k; i++)\n#define R(i, j, k) for(int i = j; i >= k; i--)\nusing namespace std;\nbitset<M> vis, used;\nbitset<N> day[55];\n// bool [M];\n\nint n, m, d, low[M], dfn[M], tot, bh[M], cnt, stot, st[M], dp[M], val[M];\nint head[M], edge_id;\nstruct node {\n    int to, next;\n} e[M];\n\nvoid add_edge(int u, int v) { // \u52a0\u8fb9\n    ++edge_id, e[edge_id].next = head[u], e[edge_id].to = v, head[u] = edge_id;\n}\n\nint gw(int x) { return (x - 1) % n + 1; } // \u627e\u8fd9\u662f\u54ea\u4e00\u4e2a\u70b9\nint gd(int x) { return (x - 1) / n + 1; } // \u627e\u8fd9\u662f\u54ea\u4e00\u5929\n\ninline void dfs(int x) { // tarjan \u7f29\u70b9, \u5df2\u7ecf\u624b\u5199\u6808\u4e86 QAQ\n    low[x] = dfn[x] = ++tot, st[++stot] = x, vis[x] = 1;\n    for(int i = head[x]; i; i = e[i].next) {\n        int v = e[i].to;\n        if(!dfn[v]) dfs(v), low[x] = min(low[x], low[v]);\n        else if(vis[v]) low[x] = min(low[x], dfn[v]);\n    }\n    if(low[x] == dfn[x]) {\n        int now = stot, pp;\n        ++cnt;\n        while(st[now] != x) {\n            pp = st[now], bh[pp] = cnt, vis[pp] = 0, --now;\n            if(!used[gw(pp)] && day[gd(pp)][gw(pp)]) \n                used[gw(pp)] = 1, val[cnt]++;\n        }\n        bh[x] = cnt, vis[x] = 0, --now;\n        if(!used[gw(x)] && day[gd(x)][gw(x)]) used[gw(x)] = 1, val[cnt]++;\n        L(i, now, stot) used[gw(st[i])] = 0;\n        stot = now;\n    }\n}\n\nint hd[M], eid;\nstruct ndeo {\n    int to, next;\n} g[M];\n\nvoid ad_edge(int u, int v) { // \u52a0\u8fb9\n    ++eid, g[eid].next = hd[u], g[eid].to = v, hd[u] = eid;\n}\n\ninline int DFS(int x) { // DFS \u627e\u6700\u957f\u8def\n    if(vis[x]) return dp[x];\n    for(int i = hd[x]; i; i = g[i].next) dp[x] = max(DFS(g[i].to), dp[x]);\n    vis[x] = 1, dp[x] += val[x];\n    return dp[x];\n}\n\nvoid rebuild() { // \u7f29\u70b9\u540e\u5efa\u56fe\n    L(i, 1, n * d) for(int j = head[i]; j; j = e[j].next) {\n        int v = e[j].to;\n        if(bh[i] != bh[v]) ad_edge(bh[i], bh[v]);\n    }\n}\n\nchar s[55];\nint main() {\n    scanf(\"%d%d%d\", &n, &m, &d);\n    L(i, 1, m) {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        L(j, 1, d) add_edge(n * (j - 1) + u, n * (j % d) + v); // \u8fde\u8fb9\n    }\n    L(i, 1, n) {\n        scanf(\"%s\", s + 1);\n        L(j, 1, d) day[j][i] = (s[j] == '1');\n    }\n    L(i, 1, n * d) if(!dfn[i]) dfs(i);\n    rebuild();\n    vis.reset();\n    printf(\"%d\\n\", DFS(bh[1])); \n    return 0;\n}\n```",
        "postTime": 1599881564,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1137C \u3010Museums Tour\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u8282\u9009\u81ea\u6211\u7684\u535a\u5ba2\u56ed\u6587\u7ae0[CodeForces Contest #1137: Round #545 (Div. 1)](https://www.cnblogs.com/PinkRabbit/p/CF1137.html)\u3002\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u7b80\u5355\u6709\u5411\u56fe\uff0c\u4e00\u5468\u6709 $d$ \u5929\u3002\n\n\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u535a\u7269\u9986\uff0c\u7ed9\u51fa\u535a\u7269\u9986 $i$ \u5728\u4e00\u5468\u7684\u7b2c $j$ \u5929\u7684\u5f00\u95e8\u60c5\u51b5\uff08$1\\le i\\le n$\uff0c$1\\le j\\le d$\uff09\u3002\n\n\u8fd9\u5468\u7684\u7b2c $1$ \u5929\uff0c\u4f60\u4ece $1$ \u53f7\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u8d70\u4e00\u6761\u8fb9\u9700\u8981\u82b1\u8d39 $1$ \u5929\uff0c\u5982\u679c\u5f53\u524d\u70b9\u7684\u535a\u7269\u9986\u5f00\u7740\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fdb\u53bb\u6e38\u89c8\u3002\n\n\u95ee\u5728\u8db3\u591f\u957f\u7684\u65f6\u95f4\u540e\uff0c\u4f60\u6700\u591a\u53ef\u4ee5\u6e38\u89c8\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u535a\u7269\u9986\uff08\u4e00\u4e2a\u70b9\u7684\u535a\u7269\u9986\u6e38\u89c8\u591a\u6b21\u53ea\u7b97\u4e00\u6b21\uff09\u3002\n\n### \u9898\u89e3\uff1a\n\n\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\uff0c\u4e00\u79cd\u6bd4\u8f83\u590d\u6742\uff0c\u6211\u5199\u7684\u662f\u590d\u6742\u7684\u3002\n\n\u8003\u8651 $\\mathrm{f}[i][j]$ \u8868\u793a\u4e00\u5468\u7684\u7b2c $j$ \u5929\u5728 $i$ \u53f7\u70b9\uff0c\u6700\u7ec8\u80fd\u6e38\u89c8\u591a\u5c11\u4e2a\u535a\u7269\u9986\u3002\n\n\u4f46\u662f\u56fe\u4e0a\u6709\u73af\uff0c\u8f6c\u79fb\u6bd4\u8f83\u56f0\u96be\u3002\u4e8e\u662f\u8003\u8651\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9\u3002\u8fd9\u6837\u5f62\u6210\u4e00\u4e2a DAG\u3002\n\n\u89c2\u5bdf\u53ef\u4ee5\u5f97\u5230\uff0c\u4e00\u4e2a\u7f29\u70b9\u540e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u662f\u62e5\u6709\u81ea\u5df1\u7684\u201c\u5468\u671f\u201d\u7684\uff0c\u5373\u82e5\u7b2c $j$ \u5929\u5728\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u7b2c $j+x$ \u5929\u4e5f\u80fd\u5728\u540c\u4e00\u4e2a\u70b9\u4e0a\uff0c\u6700\u5c0f\u7684\u6b63\u6574\u6570 $x$ \u4fbf\u662f\u5468\u671f\u3002\n\n\u8fd9\u4e2a\u5468\u671f\u4e00\u5b9a\u662f $d$ \u7684\u56e0\u6570\uff0c\u56e0\u4e3a $d$ \u662f\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u603b\u5468\u671f\uff0c\u5468\u671f\u53ef\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff1a\n\n- \u5468\u671f $\\mathrm{period}$ \u521d\u59cb\u5316\u4e3a $d$\u3002\n\n- \u8003\u8651\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684 DFS \u6811\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6 $\\mathrm{dep}$\u3002\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9 $u\\to v$\uff0c\u4ee4 $\\mathrm{period}=\\gcd(\\mathrm{period},\\mathrm{dep}[u]-\\mathrm{dep}[v]+1)$\u3002\n\n\u5173\u4e8e\u8bc1\u660e\uff0c\u53ea\u80fd\u611f\u6027\u7406\u89e3\u3002\n\n\u8fd9\u4e4b\u540e\u5c31\u53ef\u4ee5 DP \u4e86\uff0cDP \u7684\u72b6\u6001\u53d8\u4e3a $\\mathrm{f}[i][j]$ \u8868\u793a $i$ \u53f7\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u65f6\u95f4\u6233\u4e3a $j$ \u7684\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u6d89\u53ca\u5230\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u6240\u6709\u70b9\u7684\u65f6\u95f4\u6233\uff0c\u9700\u8981\u5bf9\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u8bbe\u7f6e\u4e00\u4e2a\u57fa\u51c6\u65f6\u95f4\u6233\u4ee5\u4fbf\u4e92\u76f8\u8f6c\u5316\uff0c\u6240\u5e78\u6211\u4eec\u53ef\u4ee5\u7528 $\\mathrm{dep}\\bmod \\mathrm{period}$ \u6765\u5f53\u4f5c\u8282\u70b9\u7684\u76f8\u5bf9\u65f6\u95f4\u6233\uff0c\u57fa\u51c6\u65f6\u95f4\u6233\u4e3a $0$\u3002\n\nDP \u65f6\u9700\u8981\u5904\u7406\u4e00\u4e2a $\\mathrm{cnt}[j]$ \u6570\u7ec4\u8868\u793a\u5f53\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\u95f4\u6233\u4e3a $j$ \u65f6\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u5f00\u542f\u7684\u4e0d\u540c\u535a\u7269\u9986\u4e2a\u6570\u3002DP \u65f6\u8981\u683c\u5916\u6ce8\u610f\u4e0d\u540c\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u65f6\u95f4\u6233\u7684\u8f6c\u6362\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n+m)d)$\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\nconst int MN = 100005, MD = 55;\n\nint N, M, D;\nstd::vector<int> G[MN], T[MN];\nchar s[MD]; int w[MN][MD];\n\nint dfn[MN], low[MN], stk[MN], instk[MN], tp, dfc;\nint dep[MN], bel[MN], per[MN], tic[MN], itic[MN], bcnt;\nvoid Tarjan(int u) {\n\tlow[u] = dfn[u] = ++dfc;\n\tstk[++tp] = u, instk[u] = 1;\n\tfor (auto v : G[u]) {\n\t\tif (!dfn[v]) {\n\t\t\tdep[v] = dep[u] + 1, Tarjan(v);\n\t\t\tlow[u] = std::min(low[u], low[v]);\n\t\t}\n\t\telse if (instk[v]) low[u] = std::min(low[u], dfn[v]);\n\t}\n\tif (low[u] == dfn[u]) {\n\t\t++bcnt;\n\t\tfor (int x = 0; x != u; --tp) {\n\t\t\tx = stk[tp];\n\t\t\tbel[x] = bcnt;\n\t\t\tT[bcnt].push_back(x);\n\t\t\tinstk[x] = 0;\n\t\t}\n\t}\n}\n\nint f[MN][MD];\n\nint main() {\n\tscanf(\"%d%d%d\", &N, &M, &D);\n\tfor (int i = 1; i <= M; ++i) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tG[u].push_back(v);\n\t}\n\tfor (int i = 1; i <= N; ++i)\n\t\tif (!dfn[i]) dep[i] = 1, Tarjan(i);\n\tfor (int i = 1; i <= bcnt; ++i) per[i] = D;\n\tfor (int u = 1; u <= N; ++u)\n\t\tfor (auto v : G[u]) if (bel[u] == bel[v])\n\t\t\tper[bel[u]] = std::__gcd(per[bel[u]], std::abs(dep[u] - dep[v] + 1));\n\tfor (int i = 1; i <= N; ++i)\n\t\ttic[i] = dep[i] % per[bel[i]], itic[i] = tic[i] ? per[bel[i]] - tic[i] : 0;\n\tfor (int i = 1; i <= N; ++i) {\n\t\tscanf(\"%s\", s);\n\t\tfor (int j = 0; j < D; ++j) w[i][j] = s[j] - '0';\n\t}\n\tfor (int id = 1; id <= bcnt; ++id) {\n\t\tint pr = per[id];\n\t\tstatic int cnt[MD];\n\t\tfor (int j = 0; j < pr; ++j) cnt[j] = 0;\n\t\tfor (int j = 0; j < pr; ++j) {\n\t\t\tfor (auto u : T[id]) for (int k = 0; k < D; k += pr)\n\t\t\t\tif (w[u][(k + tic[u] + j) % D]) { ++cnt[j]; break; }\n\t\t}\n\t\tfor (int j = 0; j < pr; ++j) {\n\t\t\tf[id][j] = cnt[j];\n\t\t\tfor (auto u : T[id]) {\n\t\t\t\tint ticv = (j + tic[u] + 1) % pr;\n\t\t\t\tfor (auto v : G[u]) if (bel[v] != id) {\n\t\t\t\t\tfor (int k = 0; k < D; k += pr)\n\t\t\t\t\t\tf[id][j] = std::max(f[id][j], cnt[j] + f[bel[v]][(itic[v] + k + ticv) % per[bel[v]]]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", f[bel[1]][itic[1]]);\n\treturn 0;\n}\n\n// 19-03-10 00:18 ~ 19-03-10 00:54\n```\n\n\u800c\u76f8\u5bf9\u7b80\u5355\u7684\u505a\u6cd5\u662f\uff0c\u5c06\u6bcf\u4e2a\u70b9\u5728\u4e00\u5468\u7684\u6bcf\u5929\u62c6\u6210\u4e0d\u540c\u7684\u70b9\u3002\u8fd9\u6837\u6709 $n\\times d$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u8bb0\u4f5c $\\langle u,j\\rangle$ \u5373 $u$ \u53f7\u70b9\u5728\u7b2c $j$ \u5929\u62c6\u51fa\u7684\u70b9\uff08$1\\le u\\le n$\uff0c$0\\le j<d$\uff09\u3002\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u4e3a $0$ \u6216 $1$\uff0c\u53d6\u51b3\u4e8e\u5f53\u5929\u6b64\u70b9\u7684\u535a\u7269\u9986\u662f\u5426\u5f00\u542f\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u8fb9 $u\\to v$\uff0c\u5c06\u5176\u62c6\u6210 $d$ \u6761\u8fb9\uff0c\u8fde\u63a5 $\\langle u,j\\rangle$ \u548c $\\langle v,(j+1)\\bmod d\\rangle$\u3002\n\n\u8fd9\u6837\u518d\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9\u540e\uff0c\u5f62\u6210\u4e00\u4e2a DAG\u3002\u6bcf\u4e2a\u7f29\u70b9\u540e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u6743\u503c\u4e3a\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u5f00\u542f\u7684\u4e0d\u540c\u535a\u7269\u9986\u4e2a\u6570\uff0c\u76f4\u63a5\u6c42\u6700\u957f\u8def\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u91cd\u590d\u7edf\u8ba1\uff1f\u8003\u8651\u91cd\u590d\u7edf\u8ba1\u7684\u60c5\u51b5\uff0c\u5373\u5b58\u5728\u4e00\u6761\u8def\u5f84\u4f7f\u5f97 $\\langle u,j_1\\rangle$ \u53ef\u4ee5\u5230\u8fbe $\\langle u,j_2\\rangle$ \u4f46\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u5355\u72ec\u770b\u8fd9\u6761\u8def\u5f84\u7ecf\u8fc7\u7684\u9876\u70b9\u7f16\u53f7\u5e8f\u5217\uff0c\u6cbf\u7740\u8fd9\u4e2a\u5e8f\u5217\u518d\u91cd\u590d\u8d70 $d-1$ \u904d\u4e00\u5b9a\u80fd\u56de\u5230 $\\langle u,j_1\\rangle$\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u540c\u4e00\u9876\u70b9\u62c6\u51fa\u7684\u4e24\u70b9\u5f31\u8fde\u901a\uff0c\u5b83\u4eec\u5fc5\u7136\u4e5f\u5f3a\u8fde\u901a\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u62c5\u5fc3\u91cd\u590d\u7edf\u8ba1\u7684\u60c5\u51b5\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u7ed9\u4e86\uff0c\u6bd4\u8f83\u7b80\u5355\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u505a\u6cd5\u4f3c\u4e4e\u7a7a\u95f4\u7ffb\u597d\u51e0\u756a\uff0c\u8981\u5c0f\u5fc3\u5904\u7406\u3002",
        "postTime": 1552229573,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1137C \u3010Museums Tour\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[$luogu$](https://www.luogu.org/problem/CF1137C).\n# \u9898\u89e3\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u819c\u4e00\u4e0b\u5404\u4f4d\u6709\u91d1\u52fe\u52fe\u7684\u5de8\u4f6c\u4eec\u7684\u9898\u89e3\u6551\u56de\u4e86\u6211\u653e\u5f03\u6389\u7684\u601d\u8def$w$.  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0, \u6211\u4eec\u5047\u8bbe\u4e00\u5468$d$\u5929\u4ece\u7b2c$0$\u5929\u5f00\u59cb, \u7b2c$d-1$\u5929\u7ed3\u675f.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u62ff\u5230\u9898\u76ee, \u7b2c\u4e00\u53cd\u5e94\u662f\u5efa\u5206\u5c42\u56fe, \u7b2c$i$\u5c42\u7684$n$\u4e2a\u70b9\u8868\u793a\u661f\u671f$i$\u7684\u535a\u7269\u9986\u72b6\u6001 ( $0/1$ ). \u90a3\u4e48\u5728\u8fde\u63a5\u4e00\u6761\u5b9e\u9645\u7684\u8fb9$<s,t>$\u65f6, \u5c31\u662f\u5bf9\u4e8e\u6240\u6709\u661f\u671f$i$, \u7b2c$i$\u5c42\u7684$s$\u5411\"\u660e\u5929\"\u7684$t$\u8fde\u8fb9. \u6211\u4eec\u5bf9\u8fd9\u4e2a\u5927\u5c0f\u4e3a$n\\times d$\u7684\u56fe\u7f29\u70b9\u540e, \u5c06\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u4ee4\u4e3a\u8be5\u70b9\u5185\u5f00\u653e\u535a\u7269\u9986\u7684\u6570\u91cf, \u8c8c\u4f3c\u6c42\u4e00\u6761\u6700\u957f\u94fe\u5c31\u884c\u4e86.\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u90a3\u4e48\u95ee\u9898\u6765\u4e86, \u662f\u5426\u4f1a\u51fa\u73b0\u5bf9\u4e8e\u540c\u4e00\u535a\u7269\u9986\u7684\u91cd\u590d\u8ba1\u7b97\u5462?  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5177\u4f53\u6765\u8bf4, \u662f\u5426\u5b58\u5728\u4e00\u4e2a\u535a\u7269\u9986$u$\u548c\u4e00\u661f\u671f\u4e2d\u4e0d\u540c\u7684\u4e24\u5929$i,j$, \u661f\u671f$i$\u7684\u535a\u7269\u9986$u$\u548c\u661f\u671f$j$\u7684\u535a\u7269\u9986$u$\u540c\u65f6\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e? \u8fd9\u79cd\u60c5\u51b5\u6709\u662f\u5426\u80fd\u907f\u514d? \u6211\u4eec\u8bbe$u_i$\u8868\u793a\u661f\u671f$i$\u7684\u535a\u7269\u9986$u$, \u5bf9$u_i,u_j$\u5206\u7c7b\u8ba8\u8bba:\n### 1) $u_i,u_j$\u5c5e\u4e8e\u540c\u4e00$SCC$\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u51fa\u73b0, \u5374\u5bb9\u6613\u907f\u514d. \u6211\u4eec\u5728\u6c42\u4e00\u4e2a$SCC$\u7684\u70b9\u6743\u65f6, \u6807\u8bb0\u5df2\u7ecf\u4ea7\u751f\u8d21\u732e\u7684\u7ed3\u70b9, \u5c31\u4e0d\u4f1a\u91cd\u590d\u7edf\u8ba1\u4e86.\n### 2) otherwise\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u9274\u4e8e\u96be\u4ee5\u5224\u65ad\u6389\u91cd\u590d, \u8fd9\u79cd\u60c5\u51b5\u5c31\u4e00\u5b9a\u4e0d\u5b58\u5728.~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7684\u786e, \u5728$u_i,u_j$\u4e0d\u5c5e\u4e8e\u540c\u4e00$SCC$\u65f6, \u5b83\u4eec\u4e0d\u53ef\u80fd\u540c\u65f6\u8d21\u732e\u7b54\u6848. \u53cd\u4e4b, \u5047\u8bbe$u_i$\u5148\u4ea7\u751f\u8d21\u732e, \u90a3\u4e48\u5fc5\u7136\u5b58\u5728\u4e00\u6761\u8def\u5f84$P<u_i,...,u_j>$. \u56de\u5f52\u5230\u539f\u56fe, \u5c31\u610f\u5473\u7740\u5b58\u5728\u4e00\u4e2a\u5305\u542b$u$\u7684\u73af, \u8bbe\u5176\u5305\u542b$t$\u4e2a\u7ed3\u70b9, \u5219\u5e94\u6709:\n$$\nj\\equiv i+kt\\pmod{d}\n$$\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5176\u4e2d$k\\in\\mathbb{N}\\cap\\lbrack 0,d)$. \u4e0a\u5f0f\u53d8\u6362\u53ef\u5f97:\n$$\ni\\equiv j+(d-k)t\\pmod{d}\n$$\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u610f\u5473\u7740, \u540c\u6837\u5b58\u5728$k'\\in\\mathbb{N}\\cap\\lbrack0,d)$, \u4f7f\u5f97\u4ece$u_j$\u5f00\u59cb, \u6cbf\u7740\u73af\u8f6c$k'$\u5708\u540e\u56de\u5230$u_i$, \u90a3\u4e48$<u_i,u_j>$\u4e0e$<u_j,u_i>$\u540c\u65f6\u5b58\u5728, \u8fd9\u4e0e$u_i,u_j$\u4e0d\u5c5e\u4e8e\u540c\u4e00$SCC$\u76f8\u77db\u76fe.  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u90a3\u4e48\u95ee\u9898\u4fbf\u8fce\u5203\u800c\u89e3, \u7f29\u70b9\u4e4b\u540e\u518d$DAG$\u4e0a\u8dd1\u4e00\u8fb9\u6700\u957f\u94fe\u7684$DP$\u5373\u53ef.  \n## \u4ee3\u7801\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tips$: \u6ce8\u610f\u63a7\u5236\u7a7a\u95f4, \"#define int long long\"\u5565\u7684\u5c31\u6ca1\u6709\u5fc5\u8981\u4e86. \u7528\u6765\u6807\u8bb0\u4ea7\u751f\u8d21\u732e\u7684\u6570\u7ec4\u5229\u7528\u60f0\u6027\u6e05\u9664\u6cd5, \u4fdd\u8bc1\u5747\u644a$O(nd)$.\n```cpp\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <cstring>\n\n#define Int register int\n\nusing namespace std;\n\ntypedef long long int LL;\n\nconst int MAXN = 1e5, MAXM = 1e5, MAXD = 50, MAXND = MAXN * MAXD;\nint n, m, d, Cnte, CprC, Indx, Cnts, Head[MAXND + 5] = {}, CprH[MAXND + 5] = {};\nint DFN[MAXND + 5] = {}, Low[MAXND + 5] = {}, SCC[MAXND + 5] = {}, Val[MAXND + 5] = {}, F[MAXND + 5] = {};\nLL Status[MAXN + 5] = {};\nbool Instk[MAXND + 5] = {}, Appear[MAXN + 5] = {};\nstack<int> S;\nqueue<int> Appr;\n\nstruct Edge { int To, _nxt; } Graph[MAXND + 5] = {}, CprG[MAXND + 5] = {};\n\ninline int Min ( const int a, const int b ) { return a < b ? a : b; }\n\ninline int Max ( const int a, const int b ) { return a > b ? a : b; }\n\ninline void Link ( const int From, const int To ) {\n\tGraph[++ Cnte] = { To, Head[From] };\n\tHead[From] = Cnte;\n}\n\ninline void CprLink ( const int From, const int To ) {\n\tCprG[++ CprC] = { To, CprH[From] };\n\tCprH[From] = CprC;\n}\n\ninline void Tarjan ( const int u ) {\n\tint v;\n\tDFN[u] = Low[u] = ++ Indx, Instk[u] = true, S.push ( u );\n\tfor ( Int i = Head[u]; i; i = Graph[i]._nxt ) {\n\t\tif ( ! DFN[v = Graph[i].To] ) {\n\t\t\tTarjan ( v ), Low[u] = Min ( Low[u], Low[v] );\n\t\t} else if ( Instk[v] ) {\n\t\t\tLow[u] = Min ( Low[u], DFN[v] );\n\t\t}\n\t}\n\tif ( DFN[u] == Low[u] ) {\n\t\t++ Cnts;\n\t\tdo {\n\t\t\tv = S.top (); S.pop (), Instk[v] = false;\n\t\t\tSCC[v] = Cnts;\n\t\t\tif ( ! Appear[( v - 1 ) % n + 1] && ( Status[( v - 1 ) % n + 1] >> ( v - 1 ) / n ) & 1 ) {\n\t\t\t\t++ Val[Cnts], Appear[( v - 1 ) % n + 1] = true, Appr.push ( ( v - 1 ) % n + 1 );\n\t\t\t}\n\t\t} while ( v ^ u );\n\t\tfor ( ; ! Appr.empty (); Appear[Appr.front ()] = false, Appr.pop () );\n\t}\n}\n\ninline void MakeGraph () {\n\tfor ( Int i = 1; i <= d * n; ++ i ) {\n\t\tif ( ! DFN[i] ) continue;\n\t\tint u = SCC[i], v;\n\t\tfor ( Int j = Head[i]; j; j = Graph[j]._nxt ) {\n\t\t\tif ( ! DFN[Graph[j].To] ) continue;\n\t\t\tif ( u ^ ( v = SCC[Graph[j].To] ) ) CprLink ( u, v );\n\t\t}\n\t}\n}\n\ninline void DFS ( const int u ) {\n\tif ( F[u] ) return ;\n\tfor ( Int i = CprH[u], v; i; i = CprG[i]._nxt ) {\n\t\tDFS ( v = CprG[i].To ), F[u] = Max ( F[u], F[v] );\n\t}\n\tF[u] += Val[u];\n}\n\ninline void Work () {\n\tscanf ( \"%d %d %d\", &n, &m, &d );\n\tfor ( Int i = 1, s, t; i <= m; ++ i ) {\n\t\tscanf ( \"%d %d\", &s, &t );\n\t\tfor ( Int j = 0; j ^ d; ++ j ) Link ( j * n + s, ( j + 1 ) % d * n + t );\n\t}\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tchar str[MAXD + 5] = {}; scanf ( \"%s\", str );\n\t\tfor ( Int j = 0; j ^ d; ++ j ) Status[i] |= 1LL * ( str[j] ^ '0' ) << j;\n\t}\n\tTarjan ( 1 );\n\tMakeGraph ();\n\tDFS ( SCC[1] );\n\tprintf ( \"%d\\n\", F[SCC[1]] );\n}\n\nint main () {\n\tWork ();\n\treturn 0;\n}\n```",
        "postTime": 1572095620,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1137C \u3010Museums Tour\u3011"
    },
    {
        "content": "\u597d\u9898\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u6bcf\u4e00\u5929\u62c6\u6210 $d$ \u4e2a\u70b9\uff0c\u4ee4\u7b2c $i$ \u53f7\u70b9\u5728\u7b2c $j$ \u5929\u7684\u70b9\u4e3a $[i,j]$\u3002\u5b58\u5728 $\\left<i,v\\right>$\uff0c\u5219\u8ba9 $[i,j]$ \u5411 $[v,j\\bmod d+1]$ \u8fde\u8fb9\u3002\n\n**\u6ce8\u610f\uff1a\u535a\u7269\u9986\u4e0d\u5f00\u653e\u4ec5\u4ee3\u8868\u4e0d\u505a\u51fa\u8d21\u732e\uff0c\u4e0d\u4ee3\u8868\u90a3\u5929\u4e0d\u80fd\u53bb\u90a3\u4e2a\u57ce\u5e02\u3002\u56e0\u6b64\u8fde\u8fb9\u4e0d\u80fd\u7701\u3002**\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u4e0a\u8dd1 tarjan \u7f29\u70b9\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u5728\u65b0\u7684 DAG \u4e0a\u7684\u4efb\u610f\u4e00\u6761\u94fe\u4e2d\uff0c**\u539f\u56fe**\u7684\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u51fa\u73b0\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u3002\n\n- \u5728\u8fde\u8fb9\u540e\u7684\u56fe\u4e0a\uff0c\u5982\u679c\u539f\u56fe\u4e2d\u7684\u70b9 $[i,j]$ \u5411 $[i,k]$ \u6709\u8fde\u8fb9\uff0c\u90a3\u4e48 $[i,k]$ \u4e00\u5b9a\u5411 $[i,j]$ \u6709\u8fde\u8fb9\u3002\u56e0\u6b64\u5728\u8def\u5f84\u4e0a\u53ef\u80fd\u51fa\u73b0\u7684\u539f\u56fe\u540c\u4e00\u4e2a\u70b9\u7684\u65b0\u70b9\u90fd\u4f1a\u88ab\u7f29\u5230\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a SCC \u7684\u8d21\u732e\u3002\u5f53\u7ed9\u51fa\u7684\u77e9\u9635\u4e2d $[i,j]$ \u4e3a $1$ \u65f6\u5219\u505a\u51fa $1$ \u7684\u8d21\u732e\uff0c$i$ \u76f8\u540c\u7684\u4e0d\u91cd\u590d\u7edf\u8ba1\u3002\n\n\u7136\u540e\u8ba1\u7b97\u4ece $[1,1]$ \u5f00\u59cb\u7684\u6743\u503c\u6700\u957f\u8def\u3002\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u5b8c\u6210\u3002\n\n\u4f46\u662f\u7531\u4e8e\u4e00\u5171\u6709 $5\\times 10^6$ \u4e2a\u70b9\uff0c\u9012\u5f52~~\u53ef\u80fd~~\u4f1a\u7206\u6808\uff0c\u56e0\u6b64\u6211\u5199\u7684\u975e\u9012\u5f52\uff08\u7801\u91cf\u6709\u70b9\u5927\u4f46\u662f\u4e0d\u662f\u5f88\u96be\u5199\uff09\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\nstruct edge\n{\n    int from,n,nxt;\n    edge(int from,int n,int nxt)\n    {\n        this->from=from;\n        this->n=n;\n        this->nxt=nxt;\n    }\n    edge(){}\n    friend bool operator ==(edge a,edge b)\n    {\n        return a.from==b.from&&a.n==b.n;\n    }\n    friend bool operator <(edge a,edge b)\n    {\n        if(a.from!=b.from)\n            return a.from<b.from;\n        return a.n<b.n;\n    }\n}e[5000000];\nint head[5000100],ecnt=-1;\nvoid add(int from,int to)\n{\n    e[++ecnt]=edge(from,to,head[from]);\n    head[from]=ecnt;\n}\nint dfn[5000100],low[5000100],cnt=0,del[5000100],dcnt=0;\nint f[5000100],sz[5000100],cur[5000100];\nint stk[5000100],tp=0,d,stk_[5000100],tp_=0;\nbool in[5000100],used[5000100];\nbool ava[5000100];\nvoid tarjan(int x)\n{\n    stk[++tp]=x;\n    cur[x]=-1;\n    while(tp)\n    {\n        x=stk[tp];\n        if(x==7)\n        {\n            int o;\n            o=1;\n        }\n        if(cur[x]==-1)\n        {\n            cur[x]=head[x];\n            dfn[x]=++cnt;\n            low[x]=dfn[x];\n            in[x]=1;\n            stk_[++tp_]=x;\n        }\n        else\n        {\n            low[x]=low[x]<low[e[cur[x]].n]?low[x]:low[e[cur[x]].n];\n            cur[x]=e[cur[x]].nxt;\n        }\n\n        if(cur[x]!=-1)\n        for(int i=cur[x];~i;cur[x]=i=e[i].nxt)\n            if(!dfn[e[i].n])\n            {\n                stk[++tp]=e[i].n;\n                cur[e[i].n]=-1;\n                break;\n            }\n            else if(in[e[i].n])\n                low[x]=low[x]<dfn[e[i].n]?low[x]:dfn[e[i].n];\n\n        if(cur[x]==-1)\n        {\n            if(low[x]==dfn[x])\n            {\n                ++dcnt;\n                int b=tp_;\n                do\n                {\n                    if(ava[stk_[tp_]]&&!used[(stk_[tp_]-1)/d+1])\n                    {\n                        ++sz[dcnt];\n                        used[(stk_[tp_]-1)/d+1]=1;\n                    }\n                    del[stk_[tp_]]=dcnt;\n                    in[stk_[tp_--]]=0;\n                }while(stk_[tp_+1]!=x);\n                for(int i=tp_+1;i<=b;++i)\n                    used[(stk_[i]-1)/d+1]=0;\n            }\n            --tp;\n        }\n    }\n}\nint D[5000100],q[5000100],l=0,r=0;\n\nchar s[100];\nint main()\n{\n    memset(head,-1,sizeof(head));\n    int n,m,u,v;\n    scanf(\"%d%d%d\",&n,&m,&d);\n\n    for(int i=1;i<=m;++i)\n    {\n        scanf(\"%d%d\",&u,&v);\n        for(int j=1;j<=d;++j)\n            add((u-1)*d+j,(v-1)*d+j%d+1);\n    }\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%s\",s+1);\n        for(int j=1;j<=d;++j)\n            if(s[j]=='1')\n                ava[(i-1)*d+j]=1;\n    }\n    for(int i=1;i<=n*d;++i)\n        if(!dfn[i])\n            tarjan(i);\n    for(int i=0;i<=ecnt;++i)\n    {\n        e[i].from=del[e[i].from];\n        e[i].n=del[e[i].n];\n    }\n    std::sort(e,e+ecnt+1);\n    std::unique(e,e+1+ecnt);\n    int t=ecnt;\n    for(int i=0;i<ecnt;++i)\n        if(e[i]<e[i+1]==false)\n        {\n            t=i;\n            break;\n        }\n    ecnt=-1;\n    memset(head,-1,sizeof(head));\n    for(int i=0;i<=t;++i)\n        if(e[i].n!=e[i].from)\n        {\n            ++D[e[i].from];\n            add(e[i].n,e[i].from);\n        }\n\n    for(int i=1;i<=dcnt;++i)\n        if(!D[i])\n            q[++r]=i;\n    while(l<r)\n    {\n        int x=q[++l];\n        f[x]+=sz[x];\n        for(int i=head[x];~i;i=e[i].nxt)\n        {\n            --D[e[i].n];\n            f[e[i].n]=f[e[i].n]>f[x]?f[e[i].n]:f[x];\n            if(!D[e[i].n])\n                q[++r]=e[i].n;\n        }\n    }\n    printf(\"%d\\n\",f[del[1]]);\n    return 0;\n}\n```",
        "postTime": 1552265221,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1137C \u3010Museums Tour\u3011"
    },
    {
        "content": "### [\u539f\u9898\u63cf\u8ff0](https://www.luogu.org/problemnew/show/CF1137C)\n\n~~\u8fd9\u662f\u4e00\u4e2a\u8d3c\u96be\u7684Div1\u7684C\u9898\u3002\u3002\u3002~~\n\n\u8003\u8651\u628a\u6bcf\u4e00\u4e2a\u57ce\u5e02\u62c6\u6210$D$\u4e2a\u8282\u70b9\uff0c\u5206\u522b\u4e3a\u6bcf\u4e00\u4e2a\u57ce\u5e02\u4e00\u5468\u6bcf\u4e00\u5929\u3002\u8fd9\u6837\u4e00\u5171\u4f1a\u6709$N*D$\u4e2a\u8282\u70b9\u3002\n\n\u63a5\u7740\u5728\u539f\u6765\u6bcf\u4e00\u4e2a\u9053\u8def\u8fde\u63a5\u7684\u4e24\u4e2a\u57ce\u5e02\u62c6\u6210\u7684$D$\u4e2a\u57ce\u5e02\u5206\u522b\u5efa\u6709\u5411\u8fb9\uff0c\n\u5373\uff1a\u5982\u679c\u539f\u6765$A$\u5230$B$\u6709\u4e00\u6761\u8fb9\uff0c\u5c31\u5bf9$(A_1, B_2), (A_2, B_3), ..., (A_d-1, B_d), (A_d, B_1)$\u8fd9\u4e9b\u8282\u70b9\u5bf9\u5206\u522b\u5efa\u6709\u5411\u8fb9\u3002\n\n\u63a5\u7740\u5728\u5efa\u597d\u7684\u56fe\u4e0a\u5f3a\u8fde\u901a\u7f29\u70b9\u3002\n\u6bcf\u4e00\u4e2a\u7f29\u70b9\u4e4b\u540e\u7684$DAG$\u7684\u70b9\u6743\u5373\u662f\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u662f$Open$\u7684\u3002\n\n\u5728\u7f29\u5b8c\u70b9\u4e4b\u540e\u7684$DAG$\u4e2d\u8dd1\u4e00\u6b21\u6700\u957f\u8def\u5c31\u80fd **$\\color{green} \\text{Accepted}$** \u4e86\u3002\n\n\u5443\u5443\u5443$\u2026\u2026$ \u4e0d\u662f **$\\color{green} \\text{Accepted}$** \uff0c\u800c\u662f  **$\\color{red} \\text{Memory Limit Exceed}$** \u3002\n\n\u539f\u56e0\u662f\u8fd9\u9898\u592a\u5361\u7a7a\u95f4\u4e86$\u2026\u2026$\n\u6240\u4ee5\uff0c\u8981\u60f3\u529e\u6cd5\u4f18\u5316\u7a7a\u95f4\u3002\n\n\u9996\u5148\uff0c\u4e0d\u80fd\u7528$STL$\u7684$vector$\u5b58\u8fb9\uff0c\u4f1a **$\\color{red} \\text{Memory Limit Exceed on test 10}$** \u3002\n\n\u6240\u4ee5\u836f\u7528**\u94fe\u5f0f\u5411\u661f\u5f0f**\u5b58\u8fb9\u3002\n\n\u63a5\u7740\uff0c\u73c2\u4ee5\u628a\u8f93\u5165\u7684$string$\u8f6c\u5316\u6210$bool$\u6570\u7ec4\u3002\n\n\u518d\u628a$bool$\u6570\u7ec4\u8f6c\u5316\u6210$bitset$\u5c31\u73c2\u4ee5\u4f18\u5316\u5f88\u591a\u7a7a\u95f4\u3002\n\n\u4e8e\u662f\uff0c\u8fd9\u6837\u5c31\u73c2\u4ee5 **$\\color{green} \\text{Accepted}$** \u4e86\u3002\n\n\u6700\u540e\u732e\u4e00\u4e0b\u849f\u84bb\u7684 **$\\color{green} \\text{Accepted}$** \u4ee3\u7801\uff1a\n```cpp\n// Code By H~S~C\n\n//#define __FILE_JUDGE\n\n#ifdef ONLINE_JUDGE\n#define __ONLINE_OPTIMIZE\n#else\n#define __DEBUG\n#endif\n\n#define __SINGLE_TEST\n//#define __MUlTIPUL_TEST\n\n#ifdef __ONLINE_OPTIMIZE\n#pragma comment(linker, \"/STACK:1024000000,1024000000\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#endif\n\n#if __cplusplus >= 201103L\n#include <unordered_map>\n#include <unordered_set>\n#include <tuple>\n#else\n#include <tr1/unordered_map>\n#include <tr1/unordered_set>\n#include <tr1/tuple>\n#endif\n#include <algorithm>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <utility>\n#include <cstring>\n#include <cstdlib>\n#include <cassert>\n#include <cstdarg>\n#include <vector>\n#include <memory>\n#include <bitset>\n#include <cstdio>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <cmath>\n#include <ctime>\n#include <list>\n#include <set>\n#include <map>\nusing namespace std;\n#if __cplusplus < 201103L\nusing namespace tr1;\n#endif\n\n#define rep(i, n) for (int i = 0; i < (n); ++ i)\n#define rep1(i, n) for (int i = 1; i <= (n); ++ i)\n#define Rep(i, a, b) for (int i = (a); i <= (b); ++ i)\n#define repit(it, a) for (__typeof(a.begin()) it = a.begin(); it != a.end(); it ++)\n#define MP make_pair\n#define All(a) a.begin(), a.end()\n#define SZ(a) ((int)a.size())\n#define sqr(s) ((s) * (s))\n#define fillset(a, val) memset(a, val, sizeof(a))\n#define fi first\n#define se second\n#define endl '\\n'\n#define FILEOPEN(f) freopen(f\".in\", \"r\", stdin); \\\n                    freopen(f\".out\", \"w\", stdout)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long long llong;\ntypedef unsigned long long ullong;\ntypedef long double ld;\ntypedef pair <int, int> pii;\n#ifndef __linux__\ntypedef unsigned long long hash_type;\n#else\ntypedef unsigned __int128 ulllong;\ntypedef __int128 lllong;\ntypedef ulllong hash_type;\n#endif\n\n#ifndef __DEBUG\n#define Debug(...)\n#else\n#if __cplusplus >= 201103L\ntemplate <typename T> inline void _debug(const char* names, T && t) {\n  (cerr << names << \" = \" << t << endl).flush();\n}\ntemplate <typename T1, typename ...T>\ninline void _debug(const char* names, T1 && t1, T && ... t) {\n  const char* comma = strchr(names, ',');\n  (cerr.write(names, comma - names) << \" = \" << t1 << \", \").flush();\n  _debug(comma + 1, t ...);\n}\n#define Debug(...) _debug(#__VA_ARGS__, __VA_ARGS__)\n#else\n#define Debug(x) cerr << #x << \" = \" << x << '\\n'\n#define Debug(x, y) cerr << #x << \" = \" << x << \", \" << #y << \" = \" << y << '\\n'\n#define Debug(x, y, z) cerr << #x << \" = \" << x << \", \" << #y << \" = \" << y << \", \" << #z << \" = \" << z << '\\n'\n#endif\n#endif\n\ntemplate <typename T>\ninline void chmax(T &x, T y) { x = max(x, y); }\ntemplate <typename T>\ninline void chmin(T &x, T y) { x = min(x, y); }\n\nconst int inf = 0x3f3f3f3f;\nconst ll lnf = 0x3f3f3f3f3f3f3f3f;\nconst double EPS = 1e-9, PI = acos(-1.0);\nconst int mod1 = 1000000007, mod2 = 998244353;\n\nbool solve(const int &CASENUM);\nsigned main(int argc, const char *argv[]) {\n#ifdef ONLINE_JUDGE\n  cerr << \"Program by H~S~C: \\n\";\n#endif\n#ifdef __FILE_JUDGE\n  FILEOPEN(__FILE__);\n#endif\n  ios_base :: sync_with_stdio(0);\n  cin.tie(0); cout.tie(0);\n#ifdef __SINGLE_TEST\n  solve(1);\n#elif defined(__MUlTIPUL_TEST)\n  int Tests = 1; while (!solve(Tests ++));\n#else\n  int Tests, Test; cin >> Tests; for (Test = 1; Test <= Tests; ++ Test) solve(Test);\n#endif\n  return 0;\n}\n// TODO XXX starts HERE!!\n\nconst int Maxn = 100005;\nconst int Maxd = 5e6 + 5;\n\nint n, m, d, nn, ans;\nbitset <55> grid[Maxn];\nint dfn[Maxd], low[Maxd], instk[Maxd], scc[Maxd];\nint index_ = 0, cnt = 0, st[Maxd], top;\nstruct Edge {\n  int to, next;\n}ng[Maxd], g[Maxd];\nint nghead[Maxd], ghead[Maxd];\nint ngcnt, gcnt;\ninline void add_edge_g(int u, int v) {\n  g[++ gcnt] = (Edge) {v, ghead[u]};\n  ghead[u] = gcnt;\n}\ninline void add_edge_ng(int u, int v) {\n  ng[++ ngcnt] = (Edge) {v, nghead[u]};\n  nghead[u] = ngcnt;\n}\nvector <int> has[Maxd];\nint dp[Maxd], val[Maxd];\n\ninline void tarjan(int u);\nbool solve(const int &CASENUM){\n  memset(scc, -1, sizeof scc);\n  cin >> n >> m >> d;\n  rep(i, m) {\n    int u, v;\n    cin >> u >> v; -- u, -- v;\n    rep(i, d) add_edge_g(u * d + i, v * d + (i + 1) % d);\n  } nn = n * d;\n  rep(i, n) {\n    string s;\n    cin >> s;\n    rep(j, SZ(s))\n      grid[i][j] = s[j] - '0';\n  }\n  rep(i, nn) if (!dfn[i]) tarjan(i);\n  rep(i, cnt) {\n    sort(All(has[i]));\n    int last = -1;\n    rep(j, SZ(has[i])) {\n      int v = has[i][j];\n      if (v / d != last)\n        if (grid[v / d][v % d])\n          ++ val[i], \n          last = v / d;\n    }\n  }\n  rep(u, nn) {\n    for (int j = ghead[u]; j; j = g[j].next) {\n      int v = g[j].to;\n      if (scc[u] == scc[v]) continue;\n      add_edge_ng(scc[u], scc[v]);\n    }\n  }\n  rep(u, cnt) {\n    dp[u] = val[u];\n    for (int i = nghead[u]; i; i = ng[i].next)\n      dp[u] = max(dp[u], val[u] + dp[ng[i].to]);\n  }\n  printf(\"%d\\n\", dp[scc[0]]);\n  return false;\n}\n\nvoid tarjan(int x) {\n  low[x] = dfn[x] = ++ index_;\n  st[++ top] = x; instk[x] = 1;\n  for (int i = ghead[x]; i; i = g[i].next)\n    if (!dfn[g[i].to])\n      tarjan(g[i].to), \n      low[x] = min(low[x], low[g[i].to]);\n    else if (instk[g[i].to])\n      low[x] = min(low[x], dfn[g[i].to]);\n  if (dfn[x] == low[x]) {\n    while (st[top] ^ x)\n      has[scc[st[top]] = cnt].push_back(st[top]), \n      instk[st[top --]] = 0;\n    has[scc[st[top]] = cnt].push_back(st[top]);\n    instk[st[top --]] = 0, cnt ++;\n  }\n}\n```\n",
        "postTime": 1552192469,
        "uid": 114495,
        "name": "libra9z",
        "ccfLevel": 0,
        "title": "Codeforces 1137C"
    },
    {
        "content": "> [CF1137C Museums Tour](https://codeforces.com/problemset/problem/1137/C)\n\n\u8fd9\u9053\u9898\u5c31\u662f\u5361\u7a7a\u95f4\u9650\u5236\u6bd4\u8f83\u7d27\u7684\u9898\uff0c\u5361\u4e86\u597d\u4e45\u624d\u5361\u8fdb\u53bb\u3002\n\n\u8fd9\u4e2a\u9898\u770b\u4e0a\u53bb\u50cf\u4e00\u4e2a\u6700\u957f\u8def\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u540c\u4e8e\u6700\u957f\u8def\u7684\u6709 2 \u70b9\uff1a\n+ \u6bcf\u4e2a\u70b9\u4e0d\u662f\u6240\u6709\u65f6\u95f4\u8bbf\u95ee\u90fd\u53ef\u4ee5\u7684\n+ \u56fe\u6709\u53ef\u80fd\u6709\u73af\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u7528\u5230\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u628a\u4e00\u4e2a\u70b9\u5206\u6210 $d$ \u4e2a\u70b9\uff0c\u8fd9\u6837\u6bcf\u4e2a\u65b0\u5efa\u51fa\u6765\u7684\u70b9\u5c31\u53ef\u4ee5\u4ee3\u8868\u8282\u70b9\u7f16\u53f7\u548c\u8bbf\u95ee\u65f6\u95f4\u4e86\u3002\u8fde\u8fb9\u65b9\u6848\u5c31\u662f\u539f\u56fe\u4e0a\u6709\u4e00\u6761\u8fb9 $(u,v)$\uff0c\u5219\u65b0\u56fe\u5c31\u5c06 $(u,0)\\rightarrow (v,1),(u,1)\\rightarrow (v,2),...,(u,d-2)\\rightarrow (v,d-1),(u,d-1)\\rightarrow (v,0)$ \u8fde\u8d77\u6765\uff0c\u8fd9\u6837\u7b2c\u4e00\u4e2a\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u7ecf\u5178\u7684\u5957\u8def\u5c31\u662f Tarjan \u7f29\u70b9\uff0c\u7f29\u70b9\u5b8c\u7684\u70b9\u6743\u5c31\u662f\u5728\u8fd9\u4e2a\u70b9\u91cc\u7684\u539f\u56fe\u7684\u70b9\u7684\u4e2a\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u540c\u4e00\u4e2a\u70b9\u4e0d\u540c\u65f6\u95f4\u8bbf\u95ee\u53ea\u7b97\u4e00\u6b21\uff0c\u800c\u4e14\u8fd9\u4e2a\u65f6\u95f4\u8bbf\u95ee\u5fc5\u987b\u5408\u6cd5\u3002\n\n\u540e\u9762\u8dd1\u4e00\u4e2a\u6700\u957f\u8def\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nd)$\uff0c\u9898\u76ee\u65f6\u95f4\u5bbd\u677e\uff0c\u53ef\u4ee5\u8f83\u5bb9\u6613\u5730\u901a\u8fc7\u3002\n\n**\u5173\u4e8e\u5361\u7a7a\u95f4\uff1a**\n\n\u8fd9\u9053\u9898\u7684\u7a7a\u95f4\u53ea\u6709 `512MB`\uff0c\u7136\u540e\u4f60\u9700\u8981\u8bb0\u5f55\uff1a\n+ \u539f\u56fe\u4fe1\u606f\n+ Tarjan \u4e2d\u7684\u4fe1\u606f\uff08\u65f6\u95f4\u6233\u3001\u7ef4\u62a4\u6808\u7b49\uff09\n+ \u7f29\u70b9\u540e\u7684\u56fe\u7684\u4fe1\u606f\n+ \u6700\u957f\u8def\u7684 DP \u6570\u7ec4\n\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u662f\u5f00\u4e0d\u4e0b\u7684\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u4e00\u4e9b\u7a7a\u95f4\u7684\u4f18\u5316\u3002\u6211\u7684\u4f18\u5316\u6709\uff1a\n+ \u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n+ \u6808\u4f7f\u7528 STL \u7684\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u4f46\u662f\u52a0\u4e0a\u5c31\u5bf9\u4e86\uff09\n+ \u6c42\u6700\u957f\u8def\u4e0d\u7528\u62d3\u6251\u6392\u5e8f\uff0c\u800c\u4f7f\u7528 DFS\uff08\u5c31\u53ef\u4ee5\u4e0d\u7528\u7ef4\u62a4\u961f\u5217\u4e86\uff09\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5 AC \u4e86\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/1137/submission/170153725)\n\n```cpp\n#include<bits/stdc++.h>\n//#define JERRY_JIANG\n#define fi first\n#define se second\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\ninline int read() {\n\tint x = 0;\n\tbool f = 0;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) f |= ch == '-', ch = getchar();\n\twhile(isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n\treturn f ? -x : x;\n}\ninline void print(int x) {\n\tif(x < 0) return putchar('-'), print(-x);\n\tif(x >= 10) print(x / 10);\n\tputchar(x % 10 + '0');\n}\nbool Memst;\nconstexpr int N = 1e5 + 10, D = 55;\nint n, m, d, val[N * D], col[N * D], dp[N * D];\nll sta[N];\nint dfn[N * D], low[N * D], tim = 0, tp = 0, tp2 = 0, scc = 0;\nbool instk[N * D], vis[N];\nint head1[N * D], t1[N * D], nxt1[N * D], head2[N * D], t2[N * D], nxt2[N * D], tot1 = 0, tot2 = 0;\nstack<int> stk, stk2;\nvoid addEdge1(int u, int v) {\n\tnxt1[++tot1] = head1[u]; head1[u] = tot1; t1[tot1] = v;\n}\nvoid addEdge2(int u, int v) {\n\tnxt2[++tot2] = head2[u]; head2[u] = tot2; t2[tot2] = v; \n}\nvoid tarjan(int x) {\n\tdfn[x] = low[x] = ++tim;\n\tstk.push(x); instk[x] = 1;\n\tfor(int i = head1[x]; i; i = nxt1[i]) {\n\t\tint to = t1[i];\n\t\tif(!dfn[to]) {\n\t\t\ttarjan(to); low[x] = min(low[x], low[to]);\n\t\t}\n\t\telse if(instk[to]) low[x] = min(low[x], dfn[to]);\n\t}\n\tif(dfn[x] == low[x]) {\n\t\tint cur; scc++;\n\t\tdo {\n\t\t\tcur = stk.top(); stk.pop(); instk[cur] = 0; col[cur] = scc;\n\t\t\tint x = cur / d, day = cur % d;\n\t\t\tif(!vis[x] && ((sta[x] >> day) & 1)) {\n\t\t\t\tvis[x] = 1; val[scc]++; stk2.push(x);\n\t\t\t}\n\t\t} while(cur != x);\n\t\twhile(!stk2.empty()) {vis[stk2.top()] = 0; stk2.pop();}\n\t}\n}\nint dfs(int x) {\n\tif(vis[x]) return dp[x];\n\tvis[x] = 1;\n\tfor(int i = head2[x]; i; i = nxt2[i]) {\n\t\tint to = t2[i];\tdp[x] = max(dp[x], dfs(to));\n\t}\n\treturn dp[x] += val[x];\n}\nbool Memed;\nint main(){\n\tfprintf(stderr, \"%.3lf MB\\n\", (&Memst - &Memed) / 1048576.0);\n\t#ifdef JERRY_JIANG\n\t\tFILE *IN = freopen(\"wd.in\", \"r\", stdin);\n\t\tFILE *OUT = freopen(\"wd.out\", \"w\", stdout);\n\t#endif\n\tcin >> n >> m >> d;\n\tint u, v;\n\tfor(int i = 1; i <= m; i++) {\n\t\tcin >> u >> v;\n\t\t--u, --v;\n\t\tfor(int j = 0; j < d; j++) {\n\t\t\taddEdge1(u * d + j , v * d + (j + 1) % d);\n\t\t}\n\t}\n\tfor(int i = 0; i < n; i++) {\n\t\tfor(int j = 0; j < d; j++) {\n\t\t\tchar ch = getchar();\n\t\t\twhile(!isdigit(ch)) ch = getchar();\n\t\t\tif(ch == '1') sta[i] |= (1LL << j);\n\t\t}\n\t}\n\ttarjan(0);\n\tfor(int i = 0; i < n * d; i++) if(dfn[i]) {\n\t\tfor(int j = head1[i]; j; j = nxt1[j]) {\n\t\t\tint to = t1[j]; if(!dfn[to]) continue;\n\t\t\tif(col[i] != col[to]) addEdge2(col[i], col[to]);\n\t\t}\n\t}\n\tcout << dfs(col[0]) << '\\n';\n\t#ifdef JERYY_JIANG\n\t\tfprintf(stderr, \"%.3lf ms\\n\", TIME);\n\t#endif\n\treturn 0;\n}\n/*\nauthor: Jerry_Jiang\nstart coding at 30/08/22 17:00\nfinish debugging at 30/08/22 20:09\n*/\n```",
        "postTime": 1661862220,
        "uid": 229669,
        "name": "Jerry__Jiang",
        "ccfLevel": 7,
        "title": "CF1137C Museums Tour"
    }
]