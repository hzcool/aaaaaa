[
    {
        "content": "\u8003\u8651\u7528\u5206\u5757\u89e3\u51b3\u8fd9\u4e2a\u9898\uff0c\u4e00\u6b21\u4ea4\u6362\u5bf9\u5f53\u524d\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u5f71\u54cd\u662f\uff0c\u52a0\u4e0a\u4e24\u500d\u7684\u5728\u533a\u95f4$[l+1,r-1]$\u4e2d\u6bd4$a_r$\u5c0f\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u51cf\u53bb\u4e24\u500d\u7684\u5728\u533a\u95f4$[l+1,r-1]$\u4e2d\u6bd4$a_l$\u5c0f\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u518d\u6839\u636e$a_l$\u548c$a_r$\u7684\u5927\u5c0f\u5173\u7cfb\u51b3\u5b9a\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002\n\n\u53ef\u4ee5\u7528$vector$\u6765\u7ef4\u62a4\u6bcf\u4e2a\u5757\u5185\u5143\u7d20\u6709\u5e8f\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u652f\u6301\u8be2\u95ee\u4e86\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200010\n#define lower(a,x) lower_bound(ve[a].begin(),ve[a].end(),x)\n#define upper(a,x) upper_bound(ve[a].begin(),ve[a].end(),x)\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,k,S;\nint bel[maxn],a[maxn];\nll ans;\nvector<int> ve[maxn];\nvoid change(int l,int r)\n{\n    if(bel[l]!=bel[r])\n    {\n        ve[bel[l]].erase(lower(bel[l],a[l])),ve[bel[l]].insert(upper(bel[l],a[r]),a[r]);\n        ve[bel[r]].erase(lower(bel[r],a[r])),ve[bel[r]].insert(upper(bel[r],a[l]),a[l]);\n    }\n    swap(a[l],a[r]);\n}\nint query(int l,int r,int v)\n{\n    if(l>r) return 0;\n    int cnt=0;\n    for(int i=l;i<=min(S*bel[l],r);++i) cnt+=(a[i]<v);\n    if(bel[l]==bel[r]) return cnt;\n    for(int i=S*(bel[r]-1)+1;i<=r;++i) cnt+=(a[i]<v);\n    for(int i=bel[l]+1;i<=bel[r]-1;++i) cnt+=lower(i,v)-ve[i].begin();\n    return cnt;\n}\nint main()\n{\n    read(n),read(k),S=sqrt(n);\n    for(int i=1;i<=n;++i) a[i]=i,bel[i]=(i-1)/S+1,ve[bel[i]].push_back(a[i]);\n    while(k--)\n    {\n        int l,r;\n        read(l),read(r);\n        if(l>r) swap(l,r);\n        if(l==r)\n        {\n            printf(\"%lld\\n\",ans);\n            continue;\n        }\n        ans+=2*(query(l+1,r-1,a[r])-query(l+1,r-1,a[l]));\n        if(a[l]<a[r]) ans++;\n        else ans--;\n        change(l,r),printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1589387023,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u600e\u4e48\u53ea\u6709\u6811\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\uff0c\u6211\u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u7684\u9898\u89e3\u3002\n\n\u7136\u800c\u6811\u5957\u6811\u7684\u590d\u6742\u5ea6\u4e25\u683c $\\log^2$ \u5374\u8dd1\u4e0d\u8fc7\u5206\u5757\u7684 $\\log \\times \\sqrt{\\ \\ \\ }$\uff0c\u800c\u4e14\u8fd8\u5dee\u70b9 TLE \u4e86\uff0c\u4e0d\u6127\u662f\u6811\u5957\u6811\u3002\n\n---\n\n\u9898\u610f\uff1a\u6bcf\u6b21\u53ef\u4ee5\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u6c42\u6bcf\u6b21\u64cd\u4f5c\u540e\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n---\n\n\u5047\u8bbe\u8fd9\u4e24\u4e2a\u6570\u7684\u4f4d\u7f6e\u4e3a $x_1,x_2$ ($x1 \\leq x2$ )\u3002\n\n\u6211\u4eec\u53ea\u8981\u8ba1\u7b97\u5728 $(x_1,x_2)$ \u4e2d $x_1$ \u4e0e $x_2$ \u79fb\u52a8\u5bf9\u4e8e\u603b\u7684\u9006\u5e8f\u5bf9\u6709\u591a\u5c11\u8d21\u732e\u3002\u5176\u5b9e\u5c31\u662f\u52a8\u6001\u67e5\u8be2 $x$ \u5728\u67d0\u4e2a\u533a\u95f4\u91cc\u7684\u6392\u540d\u3002\n\n\u663e\u7136\u4e00\u6b21\u4ea4\u6362\u4e4b\u540e\uff1a\n\n$$ans=ans+2*query(x_1+1,x_2-1,val[x_1])-2*query(x_1+1,x_2-1,val[x2])+val[x_2]>val[x_1]?1:-1$$\n\n\u5176\u4e2d $query(l,r,X)$ \u8868\u793a\u5728\u533a\u95f4 $[l,r]$ \u4e2d\u6709\u591a\u5c11\u4e2a\u503c\u5927\u4e8e $X$\u3002\n\n---\n\n\u4ee5\u4e0a\u4e1c\u897f\u90fd\u597d\u7406\u89e3\u4e5f\u5bb9\u6613\u63a8\uff0c\u4f46\u662f\u5e73\u8861\u6811\u6211\u4e0d\u60f3\u6253\uff0c\u90a3\u5c31\u7528`pb_ds` \u597d\u4e86\u3002\n\n\u5177\u4f53\u7684\u6240\u6709\u7684\u64cd\u4f5c\u53ef\u4ee5\u81ea\u5df1\u641c\u7d22\uff0c\u8fd9\u91cc\u53ea\u7528\u5230\u4e86\u4ee5\u4e0b\u51fd\u6570\n\n```cpp\na.insert(x)//a\u4e2d\u63d2\u5165x\na.erase(x)//a\u4e2d\u5220\u9664x\na.join(b) //\u628ab\u5e76\u5165a\na.size()//\u5143\u7d20\u4e2a\u6570\na.order_of_key(x)//x\u7684\u6392\u540d\na.lower_bound(x)//\u5927\u4e8e\u7b49\u4e8ex\u7684\u7b2c\u4e00\u4e2a\u6570\n```\n\n\u5176\u4e2d\u8981\u6ce8\u610f\u7684\u662f`tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>` \n\n\u8fd9\u4e2a\u4e1c\u897f\u662f\u4f1a\u81ea\u52a8\u53bb\u91cd\u7684\uff0c\u6240\u4ee5\u5220\u9664\u548c\u4fee\u6539\u64cd\u4f5c\u6709\u65f6\u5019\u8981\u6ce8\u610f\u7ec6\u8282\u3002\n\n\u66f4\u52a0\u7ec6\u8282\u7684\u4e1c\u897f\u6bd4\u5982\u5173\u4e8e\u6811\u5957\u6811\u7684\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u6211\u7684\u4ee3\u7801\uff0c\n\n\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u5957`pb_ds`\u7684\u597d\u5904\u5c31\u662f\u597d\u5199\uff0c\u5927\u6982\u53ea\u662f\u666e\u901a\u7ebf\u6bb5\u6811\u7684\u7801\u91cf\uff0c\u5e76\u4e14 `pb_ds` \u7684\u6548\u7387\u5728\u666e\u901a\u5e73\u8861\u6811\u7684\u6a21\u677f\u91cc\u662f\u53ef\u4ee5\u548c\u79bb\u7ebf\u7684\u6811\u72b6\u6570\u7ec4\u76f8\u5dee\u4e0d\u591a\u7684\uff0c\u53ea\u662f\u7ebf\u6bb5\u6811\u5e38\u6570\u6709\u70b9\u5927\uff0c\u6240\u4ee5\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u786e\uff0c\u4f46\u5b9e\u9645\u901f\u5ea6\u6ca1\u6709\u5206\u5757\u4f18\u79c0\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n#define ls (root<<1)\n#define rs (root<<1|1)\n#define mid (l+r>>1)\n#define int long long \nusing namespace std;\nusing namespace __gnu_pbds;\nconst int Maxn=2e5+5;\ntree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>tr[Maxn*4],tmp;\ninline int R()\n{\n\tchar c;int sign=1,res;\n\twhile((c=getchar())>'9'||c<'0') if(c=='-') sign=-1;res=c-'0';\n\twhile((c=getchar())>='0'&&c<='9') res=res*10+c-'0';\n\treturn res*sign;\n}\nint num[Maxn],pos[Maxn];\nvoid build(int root,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tnum[l]=root;\n\t\ttr[root].insert(l);\n\t\treturn;\n\t}\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\ttmp=tr[ls];//.jion\u4f1a\u628atmp\u6e05\u7a7a \n\ttr[root].join(tmp);\n\ttmp=tr[rs];\n\ttr[root].join(tmp);\n}\nvoid modify(int root,int l,int r,int pos,int pre,int val)\n{\n\tif(pos>r||pos<l) return;\n\tif(*tr[root].lower_bound(val)!=val){tr[root].erase(pre);tr[root].insert(val);}\n\t//\u4e0a\u9762\u8fd9\u53e5\u8868\u793a\u82e5\u533a\u95f4\u5305\u542b\u4e86pre\u548cval\uff0c\u5219\u4e0d\u64cd\u4f5c \n\tif(l==r) return;\n\tmodify(ls,l,mid,pos,pre,val);\n\tmodify(rs,mid+1,r,pos,pre,val);\n}\nint query(int root,int l,int r,int z,int y,int val)//\u627e\u5728[z,y]\u4e2d\u6709\u591a\u5c11\u5143\u7d20\u6bd4val\u5927 \n{\n\tif(l>y||r<z) return 0;\n\tif(l>=z&&r<=y) return tr[root].size()-tr[root].order_of_key(val);\n\treturn query(ls,l,mid,z,y,val)+query(rs,mid+1,r,z,y,val);\n}\nint n,m;\nsigned main()\n{\n\tn=R();m=R();\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++) pos[i]=i;//pos[x]\u8868\u793ax\u5f53\u65f6\u7684\u4f4d\u7f6e \n\tint x,y,X,Y,xxx,yyy,ans=0;\n\twhile(m--)\n\t{\n\t\txxx=R();yyy=R(); \n\t\tif(xxx==yyy){printf(\"%lld\\n\",ans);continue;}\n\t\tx=pos[xxx];y=pos[yyy];\n\t\tif(x>y) swap(x,y);\n\t\tX=*tr[num[x]].begin();//num[i]\u8868\u793ai\u5728\u7ebf\u6bb5\u6811\u7684\u90a3\u4e2a\u53f6\u5b50 \n\t\tY=*tr[num[y]].begin();\n\t\tif(x!=y-1)ans-=2*query(1,1,n,x+1,y-1,Y);\n\t\tif(x!=y-1)ans+=2*query(1,1,n,x+1,y-1,X);\n\t\tans+=X<Y?1:-1;\n\t\tmodify(1,1,n,x,X,Y);\n\t\tmodify(1,1,n,y,Y,X);\n\t\tprintf(\"%lld\\n\",ans);\n\t\tswap(pos[xxx],pos[yyy]);\n\t}\n}\n```",
        "postTime": 1605145132,
        "uid": 220857,
        "name": "\u7d20\u8d28\u73a9\u5bb6\u5b591\u8d85",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "\u76ee\u524d\u5168\u8c37\u6700\u4f18\u89e3\u3002\r\n\r\n\u672c\u9898\u7684\u9898\u89e3\u91cc\u6ca1\u6709\u4e25\u683c $\\sqrt{n}$ \u7684\uff0c\u6545\u6211\u8fd9\u91cc\u4e25\u683c $\\sqrt{n}$ \u7684\u5c31\u540a\u6253\u4e86\u5168\u8c37\uff08bushi\r\n\r\n\u5199\u4e25\u683c $\\sqrt{n}$ \u7684\u539f\u56e0\u7adf\u7136\u662f ~~rp\u592a\u5dee~~ \u5e38\u6570\u592a\u5927\uff0c\u6211\u5e26 $\\log n$ \u8fc7\u4e0d\u53bb\u3002\r\n\r\n### \u5f00\u59cb\u6b63\u9898\r\n\r\n\u4e00\u5f00\u59cb\u7684\u601d\u8def\u662f\uff1a\u5206 $\\sqrt{n}$ \u5757\uff0c\u6bcf\u6b21\u5bf9\u4e8e\u4e24\u4e2a\u6570\u5206\u522b\u7b97\u4e00\u4e0b\u8d21\u732e\uff0c\u6362\u8fc7\u53bb\u518d\u7b97\u8d21\u732e\uff0c\u4e8e\u662f\u4ed6\u5bc4\u4e86\u3002\r\n\r\n\u8003\u8651\u600e\u6837\u964d $\\log$\uff0c\u51b3\u5b9a\u518d\u5957\u4e00\u4e2a\u503c\u57df\u5206\u5757\u3002\r\n\r\n- \u6211\u5148\u7ef4\u62a4\u597d\u6bcf\u4e2a\u5757\u5185 1 \u5230 $\\sqrt{n}$ \u4e00\u5171\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c$\\sqrt{n} + 1$ \u5230 $2*\\sqrt{n}$ \u7b49\u7b49\u3002\r\n\r\n- \u7136\u540e\u7ef4\u62a4\u6bcf\u4e2a\u5757\u8fd9\u4e2a\u503c\u7684\u524d\u7f00\u548c\u3002\r\n\r\n\u5bf9\u4e8e\u4ea4\u6362\uff0c\u5c31\u66b4\u529b -1 \u548c +1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u660e\u663e $\\sqrt{n}$\u3002\r\n\r\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5148\u627e\u5230\u4f60\u8981\u8be2\u95ee\u7684\u90a3\u4e9b\u6574\u5757\uff0c\u4e5f\u5c31\u662f\u8be2\u95ee\u7684\u90a3\u4e2a\u6570\u7684\u5feb\uff0c\u628a\u8fd9\u4e2a\u7b54\u6848 $O(1)$ \u8fd4\u56de\u53bb\u3002\u4f46\u8fd9\u6837\u4f1a\u6709\u4e2a\u5c0f\u95ee\u9898\uff1a\u4f60\u53ef\u80fd\u628a\u67d0\u4e9b\u6bd4\u5f53\u524d\u6570\u5c0f\u7684\u6570\uff0c\u4f46\u5728\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\u7684\u524d\u9762\u4e5f\u7b97\u8fdb\u53bb\u4e86\u3002\r\n\r\n\u4e3a\u4e86\u641e\u8fd9\u4e2a\u4e1c\u897f\uff0c\u53ef\u4ee5\u8bb0\u6bcf\u4e2a\u6570\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e $pos$\uff0c$pos_i$ \u8868\u793a $i$ \u8fd9\u4e2a\u6570\u5728\u54ea\u91cc\u51fa\u73b0\u7684\u3002\u679a\u4e3e $\\sqrt{n}$ \u5224\u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n~~\u8fd9\u6837\u8bf4\u4f60\u53ef\u80fd\u6839\u672c\u4e0d\u77e5\u9053\u600e\u4e48\u5199\uff0c~~ \u6240\u4ee5\u7ed9\u4ee3\u7801\uff0c\u91cc\u9762\u6709\u66f4\u8be6\u5c3d\u7684\u6ce8\u91ca\u3002\r\n\r\n### \u5b8c\u6574\u4ee3\u7801\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long LL;\r\nconst int N = 2e5 + 10;\r\nint n, q;\r\nint block, len;\r\nint _a[N], a[N], st[N], ed[N], mp[N];\r\nLL now;\r\nint sum[505][505], pos[N];\r\n\r\nint check1(int i, int x) { //\u5728\u5f53\u524d\u4f4d\u7f6e\u524d\u9762\uff0c\u6709\u591a\u5c11\u6bd4\u5f53\u524d\u6570\u5927\u7684\r\n    return ed[i] - st[i] + 1 - sum[i][mp[x]];\r\n}\r\n\r\nint check2(int i, int x) { //\u5728\u5f53\u524d\u4f4d\u7f6e\u540e\u9762\uff0c\u6709\u591a\u5c11\u6bd4\u5f53\u524d\u6570\u5c0f\u7684\r\n    return sum[i][mp[x]];\r\n}\r\n\r\n//\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0a\u9762\u4e24\u4e2a\uff0c\u4e00\u4e2a\u5c11\u7b97\u4e86\u4e00\u4e9b\u4e1c\u897f\uff08check1\uff09\uff0c\u53e6\u4e00\u4e2a\u591a\u7b97\u4e86\u4e00\u4e9b\u4e1c\u897f\uff08\u5c31\u662f\u8ddf\u5f53\u524d\u6570\u5728\u4e00\u4e2a\u503c\u57df\u5757\u91cc\uff0c\u4f46\u6bd4\u5f53\u524d\u6570\u5927\u7684\u6570\uff09\r\n\r\nint query(int j) {\r\n    int x = mp[j], ans = 0;\r\n    for (int i = 1; i < x; i ++ ) ans += check1(i, _a[j]);\r\n    for (int i = _a[j]; mp[i] == mp[_a[j]]; i++)\r\n        if(pos[i] < st[x])\r\n            ans ++; //\u5904\u7406check1\u91cc\u5c11\u7b97\u7684\uff0c\u4e0e\u5f53\u524d\u6570\u4e00\u4e2a\u503c\u57df\u5757\u7684\u4e1c\u897f\u4f46\u6bd4\u5f53\u524d\u6570\u5927\u7684\u6570\r\n            \r\n    for (int i = st[x]; i < j; i ++ )\r\n        if (_a[i] > _a[j]) ans ++;\r\n    for (int i = j + 1; i <= ed[x]; i ++ )\r\n        if (_a[i] < _a[j]) ans ++;\r\n        \r\n    for (int i = x + 1; i <= block; i ++ ) ans += check2(i, _a[j]);\r\n    for (int i = _a[j]; mp[i] == mp[_a[j]]; i++)\r\n        if(pos[i] > ed[x])//\u540c\u7406\uff0c\u5904\u7406\u591a\u51fa\u6765\u7684\u6570\uff0c\u8fd9\u91cc\u662f\u591a\u7b97\u4e86\u6bd4\u5f53\u524d\u6570\u5927\u7684\u6570\uff0c\u4e0a\u9762\u662f\u5c11\u7b97\u4e86\u3002\r\n            ans -- ;\r\n    return ans;\r\n}\r\n\r\n//\u8fd9\u5757\u53ef\u80fd\u7565\u5fae\u96be\u61c2\uff0c\u5efa\u8bae\u591a\u770b\u770b\u4e24\u4e2acheck\u662f\u600e\u4e48\u7b97\u7684\r\n\r\nint main() {\r\n    cin >> n >> q;\r\n    for (int i = 1; i <= n; i ++ ) _a[i] = a[i] = i;\r\n    len = sqrt(n);\r\n    for (int i = 1, j = len + 1; i <= n; i ++, j ++ ) {\r\n        if (j == len + 1) {\r\n            block ++;\r\n            st[block] = i;\r\n            ed[block - 1] = i - 1;\r\n            j = 1;\r\n        }\r\n        if (i == n)\r\n            ed[block] = n;\r\n        mp[i] = block;\r\n    }\r\n    for(int i = 1; i <= n; i++)\r\n        sum[mp[i]][mp[_a[i]]]++;\r\n    for(int i = 1; i <= block; i++)\r\n        for(int j = 1; j <= block; j++)\r\n            sum[i][j] += sum[i][j - 1];\r\n    for(int i = 1; i <= n; i++)\r\n        pos[i] = i;\r\n    while (q -- ) {\r\n        int x, y, k = 0;\r\n        cin >> x >> y;\r\n        if (x > y) swap(x, y);\r\n        if (_a[x] == _a[y]) {\r\n            cout << now << endl;\r\n            continue;\r\n        }\r\n        int aa = query(x), bb = query(y);\r\n        if (_a[x] < _a[y]) k = 1;\r\n        for(int i = mp[_a[x]]; i <= block; i++)\r\n            sum[mp[x]][i]--;\r\n        for(int i = mp[_a[y]]; i <= block; i++)\r\n            sum[mp[y]][i]--;\r\n        swap(_a[x], _a[y]);\r\n        for(int i = mp[_a[x]]; i <= block; i++)\r\n            sum[mp[x]][i]++;\r\n        for(int i = mp[_a[y]]; i <= block; i++)\r\n            sum[mp[y]][i]++;//\u66b4\u529b\u52a0\u52a0\u51cf\u51cf\r\n        swap(pos[_a[x]], pos[_a[y]]);\r\n        int a_ = query(x), b_ = query(y);\r\n        int sum = a_ + b_ - k, num = aa + bb - !k; //\u8fd9\u91cc\u7684k\u662f\u4e3a\u4e86\u5904\u7406\u8fd9\u4e24\u4e2a\u6570\u7684\u9006\u5e8f\u5bf9\u5173\u7cfb\r\n        now = (long long)now - num + sum;\r\n        cout << now << endl;\r\n    }\r\n    return 0;\r\n}\r\n```",
        "postTime": 1667124933,
        "uid": 369291,
        "name": "winter2020",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 CF785E Anton and Permutation"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u6b21\u4ea4\u6362\uff0c\u6613\u77e5\u53ea\u4f1a\u5bf9 $l$ \u5230 $r$ \u8fd9\u4e00\u533a\u95f4\u5185\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u9020\u6210\u5f71\u54cd\uff0c\u4e0d\u59a8\u8bbe\u533a\u95f4\u5185\u5c0f\u4e8e $a_l$ \u7684\u6570\u7684\u4e2a\u6570\u4e3a $x_1$, \u5927\u4e8e $a_l$ \u7684\u4e3a $y_1$, \u5c0f\u4e8e $a_r$ \u7684\u4e3a $x_2$, \u5927\u4e8e $a_r$ \u7684\u4e3a $y_2$\uff0c\u5982\u6b64\u6211\u4eec\u53ef\u5f97\u5230\u4ee5\u4e0b\u67ff\u5b50\uff1a\n\n$x_1 + y_1 = r - l + 1$\n\n$x_2 + y_2 = r - l + 1$\n\n\u4e8e\u662f\uff0c\u6709\uff0c\n\n$ans = (y_1 - x_1) + (x_2 - y_2)$\n\n$= ((r - l + 1 - x_1) - x1) + (x_2 - (r - l + 1 - x_2)) $\n\n$= 2 * (x_2 - x_1)$\n\n\u7531\u4e0a\u8ff0\u53ef\u5f97\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u6c42\u51fa $l$ \u5230 $r$ \u533a\u95f4\u5185\u5c0f\u4e8e $a_l$ \u548c\u5c0f\u4e8e $a_r$ \u7684\u6570\u7684\u4e2a\u6570\u5373\u53ef\uff0c\u5177\u4f53\u7528\u5206\u5757\u5b9e\u73b0\uff0c\u5bf9\u4e24\u7aef\u7684\u6563\u5757\u66b4\u529b\u5904\u7406\uff0c\u4e2d\u95f4\u90e8\u5206\u5b8c\u6574\u7684\u5757\u7528\u6743\u503c\u5757\u6392\u597d\u5e8f\uff08\u63d0\u524d\u9884\u5904\u7406\uff09\uff0c\u901a\u8fc7\u4e8c\u5206\u5904\u7406\u7b54\u6848\uff0c\u522b\u5fd8\u4e86\u5728\u6bcf\u6b21\u4ea4\u6362\u8fc7\u540e\u5bf9\u4e24\u4e2a\u6743\u503c\u5757\u91cd\u65b0\u6392\u4e2a\u5e8f\n\n### Code:\n\n```\n#include <bits/stdc++.h>\n\n#define int long long \n\nconst int N = 2e5 + 10;\n\nint n, T, block, cnt, ans;\nint a[N], pre[N], pos[N], l[N], r[N]; \n\nint ask(int x, int k) { //\u4e8c\u5206 \n\tint L = l[x], R = r[x], mid, sum = l[x] - 1;\n\twhile (L <= R) {\n\t\tmid = L + ((R - L) >> 1);\n\t\tif (pre[mid] < k) { L = mid + 1; sum = mid; }\n\t\telse { R = mid - 1; }\n\t} return sum - (l[x] - 1);\n}\n\nint query(int L, int R, int x, int sum = 0) { //\u67e5\u8be2L\u5230R\u4e4b\u95f4\u5c0f\u4e8ex\u7684\u4e2a\u6570 \n\tif (L > R) { return 0; }\n\tif (pos[L] == pos[R]) {\n\t\tfor (int i = L; i <= R; i++) { if (a[i] < x) { sum++; } }\n\t\treturn sum;\n\t}\n\tfor (int i = L; i <= r[pos[L]]; i++) { if (a[i] < x) { sum++; } }\n\tfor (int i = l[pos[R]]; i <= R; i++) { if (a[i] < x) { sum++; } }\n\tfor (int i = pos[L] + 1; i <= pos[R] - 1; i++) { sum += ask(i, x); }\n\treturn sum;\n}\n\nsigned main() {\n\tstd::ios::sync_with_stdio(0);\n\tstd::cin >> n >> T;\n\tblock = std::sqrt(n);\n\tcnt = n / block + (n % block != 0); \n\tfor (int i = 1; i <= n; i++) {\n\t\ta[i] = pre[i] = i;\n\t\tpos[i] = (i - 1) / block + 1;\n\t}\n\tfor (int i = 1; i <= cnt; i++) {\n\t\tl[i] = (i - 1) * block + 1;\n\t\tr[i] = i * block;\n\t} r[cnt] = n;\n\tfor (; T; --T) {\n\t\tint x, y; std::cin >> x >> y;\n\t\tif (x > y) { std::swap(x, y); }\n\t\tans += 2 * (query(x + 1, y - 1, a[y]) - query(x + 1, y - 1, a[x])); //\u4fee\u6539 \n\t\tif (a[x] < a[y]) { ans++; }\n\t\tif (a[x] > a[y]) { ans--; } //\u5bf9\u4e24\u4e2a\u7aef\u70b9\u7279\u5224 \n\t\tstd::swap(a[x], a[y]); \n\t\tfor (int i = l[pos[x]]; i <= r[pos[x]]; i++) { pre[i] = a[i]; }\n\t\tfor (int i = l[pos[y]]; i <= r[pos[y]]; i++) { pre[i] = a[i]; }\n\t\tstd::sort(pre + l[pos[x]], pre + r[pos[x]] + 1);\n\t\tstd::sort(pre + l[pos[y]], pre + r[pos[y]] + 1); //\u66f4\u65b0\u6743\u503c\u5757 \n\t\tstd::cout << ans << \"\\n\";\n\t}\n\treturn 0;\n}\n```\n\n### The end.",
        "postTime": 1610373073,
        "uid": 151791,
        "name": "ykuouzf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u7ecf\u5178\u7684\u9898\u76ee\u600e\u4e48\u5c11\u5f97\u4e86\u6811\u5957\u6811\uff1f\n\n\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u67e5\u8be2\u4e00\u6bb5\u533a\u95f4\u4e2d\u503c\u57df\u5728\u67d0\u533a\u95f4\u5185\u7684\u6570\u6709\u591a\u5c11\u4e2a\u3002\n\n\u4e00\u5f00\u59cb\u7b54\u6848\u662f0\n\n\u6bcf\u6b21\u4ea4\u6362$a[l]$\u548c$a[r](l<r)$\u7684\u65f6\u5019\uff0c\u5c31\u628a\u7b54\u6848\u51cf\u53bb$[l+1,r-1]$\u4e2d\u6bd4$a[l]$\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u52a0\u4e0a$[l+1,r-1]$\u4e2d\u6bd4$a[l]$\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u51cf\u53bb$[l+1,r-1]$\u4e2d\u6bd4$a[r]$\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u52a0\u4e0a$[l+1,r-1]$\u4e2d\u6bd4$a[r]$\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u7136\u540e\u518d\u5355\u72ec\u5224\u65ad\u4e00\u4e0b$a[l]$\u548c$a[r]$\u7684\u5927\u5c0f\u5173\u7cfb\u5373\u53ef\u3002\n\n\u7a7a\u95f4\u8981\u5f00\u4e24\u4e2a$\\log$\uff0c\u4f46\u662f\u53c8\u8981\u5c0f\u5fc3\u4e0d\u8981MLE\uff0c\u597d\u70e6\u3002\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T &x) {\n    int f = 0, c = getchar(); x = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    if (f) x = -x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T &x, Args &...args) {\n    read(x); read(args...);\n}\ntemplate <typename T> void write(T x) {\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T> inline void writeln(T x) { write(x); puts(\"\"); }\ntemplate <typename T> inline bool chkmin(T &x, const T &y) { return y < x ? x = y, 1 : 0; }\ntemplate <typename T> inline bool chkmax(T &x, const T &y) { return x < y ? x = y, 1 : 0; }\n\ntypedef long long LL;\nconst int maxn = 2e5 + 7;\nint lc[maxn << 7], rc[maxn << 7], sum[maxn << 7], tot;\nint root[maxn], a[maxn];\nint n, m;\nLL ans = 0;\n\nvoid insert(int &o, int l, int r, int pos, int val) {\n    if (!o) o = ++tot;\n    sum[o] += val;\n    if (l == r) return;\n    int mid = (l + r) >> 1;\n    if (pos <= mid) insert(lc[o], l, mid, pos, val);\n    else insert(rc[o], mid + 1, r, pos, val);\n}\nint query(int o, int lb, int rb, int l, int r) {\n    if (!o || l > rb || r < lb) return 0;\n    if (l <= lb && r >= rb) return sum[o];\n    int mid = (lb + rb) >> 1;\n    return query(lc[o], lb, mid, l, r) + query(rc[o], mid + 1, rb, l, r);\n}\nvoid insert(int x, int y, int v) {\n    for (; x <= n; x += x & -x)\n        insert(root[x], 1, n, y, v);\n}\nint query(int lb, int rb, int l, int r) {\n    if (lb > rb || l > r) return 0;\n    int ans = 0;\n    for (; rb; rb -= rb & -rb) ans += query(root[rb], 1, n, l, r);\n    for (--lb; lb; lb -= lb & -lb) ans -= query(root[lb], 1, n, l, r);\n    return ans;\n}\n\nint main() {\n    read(n, m);\n    for (int i = 1; i <= n; ++i) insert(i, a[i] = i, 1);\n    for (int i = 1, l, r; i <= m; ++i) {\n        read(l, r); if (l == r) { writeln(ans); continue; }\n        if (l > r) std::swap(l, r);\n        ans -= query(l + 1, r - 1, 1, a[l] - 1);\n        ans += query(l + 1, r - 1, a[l] + 1, n);\n        ans -= query(l + 1, r - 1, a[r] + 1, n);\n        ans += query(l + 1, r - 1, 1, a[r] - 1);\n        a[l] < a[r] ? ++ans : --ans;\n        insert(l, a[l], -1);\n        insert(l, a[r], 1);\n        insert(r, a[r], -1);\n        insert(r, a[l], 1);\n        std::swap(a[l], a[r]);\n        writeln(ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1548687375,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "## \u5206\u5757\u5927\u6cd5\u597d\uff01\uff01\uff01\uff01\uff01\n\n\u8003\u8651\u7528\u5757\u4e2d\u5728 $vector$ \u4e2d\u4e8c\u5206\uff0c\u8fb9\u89d2\u66b4\u529b\uff0c$swap$ \u4e24\u4e2a\u5143\u7d20\u5c31\u4e8c\u5206\u7136\u540e $erase,insert$ \u4e00\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n}\\log n)$\n\n\u4e2a\u4eba\u7ecf\u9a8c\uff1a\u4ee5\u4e0b\u4e24\u79cd\u5206\u5757\u5199\u6cd5\u662f\u4e0d\u7b49\u4ef7\u7684\n\n\u5199\u6cd5\u4e00\uff1a\n\n```cpp\n\tfor(int i=1;i<=blo;i++){\n\t\tL[i]=(i-1)*blo+1,R[i]=i*blo;\n\t\tfor(int j=L[i];j<=R[i];j++) pos[j]=i,v[i].push_back(j);\n\t}\n\tif(blo*blo!=n){\n\t\tint i=blo+1;L[i]=(i-1)*blo+1,R[i]=n;\n\t\tfor(int j=L[i];j<=R[i];j++) pos[j]=i,v[i].push_back(j);\n\t}\n    for(int i=1;i<=n;i++) a[i]=i;\n```\n\n\u5199\u6cd5\u4e8c\uff1a\n\n```cpp\n\tfor(int i=1;i<=blo;i++){\n\t\tL[i]=(i-1)*blo+1,R[i]=i*blo;\n\t\tfor(int j=L[i];j<=R[i];j++) v[i].push_back(j);\n\t}\n\tif(blo*blo!=n){\n\t\tint i=blo+1;L[i]=(i-1)*blo+1,R[i]=n;\n\t\tfor(int j=L[i];j<=R[i];j++) v[i].push_back(j);\n\t}\n    for(int i=1;i<=n;i++) pos[i]=(i-1)/blo+1,a[i]=i;\n```\n\n\u6ce8\u610f\uff1a\u5199\u6cd5\u4e8c\u7684 $pos[i]$ \u662f\u9519\u7684\uff0c\u56e0\u4e3a\u6700\u540e\u4e00\u5757\u7684\u5927\u5c0f\u53ef\u4ee5\u8d85\u8fc7 $\\sqrt{n}$ \u7684\uff01\uff01\uff01\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=200000+10;\nconst int inf=0x3f3f3f3f;\nint n,m,a[maxn],pos[maxn],L[maxn],R[maxn],cnt[maxn],blo;ll ans;\n\nvector<int> v[500];\n\ninline int read(){\n    register int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return (f==1)?x:-x;\n}\n\nvoid update(int l,int r){\n    int p=pos[l],q=pos[r];\n    if(p < q){\n        v[p].erase(lower_bound(v[p].begin(),v[p].end(),a[l]));\n        v[p].insert(upper_bound(v[p].begin(),v[p].end(),a[r]),a[r]);\n        v[q].erase(lower_bound(v[q].begin(),v[q].end(),a[r])); \n        v[q].insert(upper_bound(v[q].begin(),v[q].end(),a[l]),a[l]);\n    }\n    swap(a[l],a[r]);\n}\nll query(int l,int r,int k){\n    if(l > r) return 0;\n    int p=pos[l],q=pos[r];ll ans=0,num;\n    if(p+1>=q){\n        for(int i=l;i<=r;i++)\n            if(a[i]<k) ans++;\n    }\n    else {\n        for(int i=l;i<=R[p];i++)\n            if(a[i]<k) ans++;\n        for(int i=L[q];i<=r;i++)\n            if(a[i]<k) ans++;\n        for(int i=p+1;i<=q-1;i++){\n            num=upper_bound(v[i].begin(),v[i].end(),k)-v[i].begin();\n            ans+=num;\n        }\n    }\n    return ans;\n}\n\nint main()\n{\n    n=read(),m=read();blo=sqrt(n);\n    for(int i=1;i<=blo;i++){\n        L[i]=(i-1)*blo+1,R[i]=i*blo;\n        for(int j=L[i];j<=R[i];j++) pos[j]=i,v[i].push_back(j);\n    }\n    if(blo*blo!=n){\n        int i=blo+1;L[i]=(i-1)*blo+1,R[i]=n;\n        for(int j=L[i];j<=R[i];j++) pos[j]=i,v[i].push_back(j);\n    }\n    for(int i=1;i<=n;i++) a[i]=i;\n    int l,r;\n    for(int i=1;i<=m;i++){\n        l=read(),r=read();\n        if(l>r) swap(l,r);\n        if(l==r) printf(\"%I64d\\n\",ans);\n        else {\n            ans+=2*query(l+1,r-1,a[r])-(r-l-1);\n            ans+=(r-l-1)-2*query(l+1,r-1,a[l]);\n            ans+=(a[l]<a[r])?1:(a[l]>a[r])?-1:0;\n            update(l,r);\n            printf(\"%I64d\\n\",ans);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1542931517,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "\u9898\u76ee\u5728\u8fd9\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF785E)\u3002\n\n### \u505a\u6cd5\uff1a\u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811\uff08\u6811\u72b6\u6570\u7ec4\u5957\u52a8\u6001\u5f00\u70b9\u503c\u57df\u7ebf\u6bb5\u6811\uff09\u3002\n\n\u9898\u76ee\u5199\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u611f\u89c9\u5e76\u6ca1\u6709\u4ec0\u4e48\u9700\u8981\u89e3\u91ca\u7684\u3002\n\n\u5f00\u59cb\u601d\u8003\u601d\u8def\uff1a\n\n\u9996\u5148\uff0c\u770b\u5230\u6c42\u9006\u5e8f\u5bf9\u3001\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u6211\u60f3\u5230\u7684\u4fbf\u662f[\u8fd9\u9898](https://www.luogu.com.cn/problem/P3157)\u3002\n\n\u5f53 x \u4ea4\u6362\u5230 y \u5904\u540e\uff0c\u533a\u95f4 $[1,x-1]$ \u4e0e $a_x$ \u7684\u9006\u5e8f\u5bf9**\u4e0d\u4f1a\u6539\u53d8**\uff0c\u533a\u95f4 $[y+1,n]$ \u4e0e $a_x$ \u7684\u9006\u5e8f\u5bf9\u4e5f**\u4e0d\u4f1a\u6539\u53d8**\uff0c\u4f46\u662f\u533a\u95f4 $[x+1,y-1]$ \u4e0e $a_x$ \u7684\u9006\u5e8f\u5bf9**\u4f1a\u6539\u53d8**\uff0c\u56e0\u4e3a\u8fdb\u884c\u4ea4\u6362 x \u548c y \u540e\u8fd9\u6bb5\u533a\u95f4\u539f\u6765\u4e0e $a_x$ \u9006\u5e8f\u5bf9\u53d8\u6210\u4e86\u987a\u5e8f\u5bf9\uff0c\u539f\u6765\u4e0e $a_x$ \u7684\u987a\u5e8f\u5bf9\u53d8\u6210\u4e86\u9006\u5e8f\u5bf9\u3002\u800c y \u5219\u540c\u7406\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u5224\u65ad x \u4e0e y \u7684\u5173\u7cfb\uff1a\u5982\u679c\u4ea4\u6362\u524d $a_x>a_y$\uff0c\u5373\u539f\u6765 $a_x$ \u4e0e $a_y$ \u662f\u9006\u5e8f\u5bf9\uff0c\u90a3\u4e48\u4ea4\u6362\u540e ans \u5219\u8981\u51cf\u53bb\u8fd9\u5bf9\u9006\u5e8f\u5bf9\uff0c\u53cd\u4e4b\u5219\u52a0\u4e0a\u3002\n\n\u5927\u6982\u601d\u8def\u8bb2\u5b8c\u540e\uff0c\u6211\u4eec\u6765\u76d8\u70b9\u4e00\u4e0b**\u5751\u70b9**\uff1a\n\n1.  $x_j$ \u4f1a\u5927\u4e8e $y_j$\uff0c\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u4ea4\u6362 $x_j$ \u548c $y_j$ \u518d\u8fdb\u884c\u64cd\u4f5c\u3002\n2. \u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6211\u7684\u4ee3\u7801\u95ee\u9898\uff0c\u6b64\u9898\u5361\u7a7a\u95f4\u2026\u2026\u867d\u662f\u52a8\u6001\u5f00\u70b9\u7684\uff0c\u4f46\u8fd8\u662f\u8fc7\u4e0d\u53bb\u3002\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u8fdb\u884c**\u5783\u573e\u56de\u6536**\u6765\u8282\u7701\u4e00\u4e9b\u7a7a\u95f4\u3002\n3. \u5728\u6211\u7684\u5199\u6cd5\u4e2d\uff0c\u9700\u8981\u7279\u5224 $x_j=y_j$ \u7684\u60c5\u51b5\u3002~~\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u53cd\u6b63\u52a0\u4e0a\u6211\u5c31\u5bf9\u4e86\u3002~~\n\n\u53ef\u80fd\u6709\u4e9b dalao \u4f1a\u95ee\u4ec0\u4e48\u662f\u5783\u573e\u56de\u6536\uff0c\u6211\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a**\u8f83\u4e3a\u611f\u6027**\u7684\u56de\u7b54\uff1a\n\n\u56e0\u4e3a\u7ebf\u6bb5\u6811\u4f1a\u5220\u9664\u8282\u70b9\uff0c\u4f46\u662f\u8282\u70b9\u5220\u9664\u4e4b\u540e\u53ef\u80fd\u4e4b\u540e\u90fd\u6ca1\u7528\u4e86\uff08\u64cd\u4f5c\u4e0d\u4f1a\u8c03\u7528\u5230\u8fd9\u4e2a\u8282\u70b9\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6808\uff0c\u5b58\u653e\u6ca1\u7528\u7684\u8282\u70b9\u7f16\u53f7\uff0c\u65b0\u5efa\u8282\u70b9\u65f6\u5148\u5224\u65ad\u6808\u4e2d\u6709\u6ca1\u6709\u6ca1\u7528\u7684\u8282\u70b9\uff0c\u5982\u679c\u6709\u5c31\u7528\u6808\u9876\u7684\u7f16\u53f7\uff0c\u518d\u5f39\u51fa\u6808\u9876\uff0c\u5426\u5219\u5c31\u65b0\u5f00\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u6211\u7684\u4ee3\u7801\uff08\u5e26\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=2e5+10;\nstruct segment_tree{\n\tint lson,rson;\n\tlong long val;\n};\nsegment_tree hjt[N<<7];\nint tmp[2][20];\nint root[N],a[N],sta[N];//sta\u5c31\u662f\u5783\u573e\u56de\u6536\u7684\u6808 \nint t,tot,top;\nint n,m;\nint lowbit(int x){\n\treturn x&-x;\n}\nvoid hjt_ins(int &now,int l,int r,int pos){\n\tif(!now)\n\t\tnow=top?sta[top--]:++tot;//\u5783\u573e\u56de\u6536 \n\thjt[now].val++;\n\tif(l==r)\n\t\treturn ;\n\tint mid=l+r>>1;\n\tif(pos<=mid)\n\t\thjt_ins(hjt[now].lson,l,mid,pos);\n\telse\n\t\thjt_ins(hjt[now].rson,mid+1,r,pos);\n}\nvoid hjt_del(int &now,int l,int r,int pos){\n\tif(!now)\n\t\tnow=top?sta[top--]:++tot;//\u5783\u573e\u56de\u6536 \n\thjt[now].val--;\n\tif(l==r)\n\t\treturn ;\n\tint mid=l+r>>1;\n\tif(pos<=mid)\n\t\thjt_del(hjt[now].lson,l,mid,pos);\n\telse\n\t\thjt_del(hjt[now].rson,mid+1,r,pos);\n\tif(!hjt[now].val)//\u5224\u65ad\u662f\u5426\u8981\u6254\u8fdb\u6808\u91cc \n\t\tsta[++top]=now,now=0;\n}\nlong long hjt_query1(int l,int r,int pos){\n\tif(l==r)\n\t\treturn 0;\n\tlong long val=0;\n\tfor(int i=1;i<=tmp[1][0];i++)\n\t\tval+=hjt[hjt[tmp[1][i]].rson].val;\n\tfor(int i=1;i<=tmp[0][0];i++)\n\t\tval-=hjt[hjt[tmp[0][i]].rson].val;\n\tint mid=l+r>>1;\n\tif(pos<=mid){\n\t\tfor(int i=1;i<=tmp[1][0];i++)\n\t\t\ttmp[1][i]=hjt[tmp[1][i]].lson;\n\t\tfor(int i=1;i<=tmp[0][0];i++)\n\t\t\ttmp[0][i]=hjt[tmp[0][i]].lson;\n\t\treturn (long long)(val+hjt_query1(l,mid,pos));\n\t}\n\telse{\n\t\tfor(int i=1;i<=tmp[1][0];i++)\n\t\t\ttmp[1][i]=hjt[tmp[1][i]].rson;\n\t\tfor(int i=1;i<=tmp[0][0];i++)\n\t\t\ttmp[0][i]=hjt[tmp[0][i]].rson;\n\t\treturn hjt_query1(mid+1,r,pos);\n\t}\n}\nlong long hjt_query2(int l,int r,int pos){\n\tif(l==r)\n\t\treturn 0;\n\tlong long val=0;\n\tfor(int i=1;i<=tmp[1][0];i++)\n\t\tval+=hjt[hjt[tmp[1][i]].lson].val;\n\tfor(int i=1;i<=tmp[0][0];i++)\n\t\tval-=hjt[hjt[tmp[0][i]].lson].val;\n\tint mid=l+r>>1;\n\tif(pos<=mid){\n\t\tfor(int i=1;i<=tmp[1][0];i++)\n\t\t\ttmp[1][i]=hjt[tmp[1][i]].lson;\n\t\tfor(int i=1;i<=tmp[0][0];i++)\n\t\t\ttmp[0][i]=hjt[tmp[0][i]].lson;\n\t\treturn hjt_query2(l,mid,pos);\n\t}\n\telse{\n\t\tfor(int i=1;i<=tmp[1][0];i++)\n\t\t\ttmp[1][i]=hjt[tmp[1][i]].rson;\n\t\tfor(int i=1;i<=tmp[0][0];i++)\n\t\t\ttmp[0][i]=hjt[tmp[0][i]].rson;\n\t\treturn (long long)(val+hjt_query2(mid+1,r,pos));\n\t}\n}\nvoid bit_ins(int pos,int val){\n\tfor(int i=pos;i<=n;i+=lowbit(i))\n\t\thjt_ins(root[i],1,n,val);\n}\nvoid bit_del(int pos,int val){\n\tfor(int i=pos;i<=n;i+=lowbit(i))\n\t\thjt_del(root[i],1,n,val);\n}\nlong long bit_query1(int l,int r,int val){\n//\u67e5\u8be2l~r\u4e2d\u6240\u6709>pos\u7684\u4e2a\u6570 \n\tif(l>r)\n\t\treturn 0;\n\tmemset(tmp,0,sizeof tmp);\n\tfor(int i=r;i;i-=lowbit(i))\n\t\ttmp[1][++tmp[1][0]]=root[i];\n\tfor(int i=l-1;i;i-=lowbit(i))\n\t\ttmp[0][++tmp[0][0]]=root[i];\n\treturn hjt_query1(1,n,val);\n}\nlong long bit_query2(int l,int r,int val){\n//\u67e5\u8be2l~r\u4e2d\u6240\u6709<pos\u7684\u4e2a\u6570 \n\tif(l>r)\n\t\treturn 0;\n\tmemset(tmp,0,sizeof tmp);\n\tfor(int i=r;i;i-=lowbit(i))\n\t\ttmp[1][++tmp[1][0]]=root[i];\n\tfor(int i=l-1;i;i-=lowbit(i))\n\t\ttmp[0][++tmp[0][0]]=root[i];\n\treturn hjt_query2(1,n,val);\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=i;\n\t\tbit_ins(i,a[i]);//\u63d2\u5165\u8282\u70b9 \n\t}\n\tlong long ans=0;//\u56e0\u4e3a\u662f\u987a\u5e8f\uff0c\u6240\u4ee5\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3a0 \n\tint x,y;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>x>>y;\n\t\tif(x>y)//\u7279\u5224x>y\u7684\u60c5\u51b5 \n\t\t\tswap(x,y);\n\t\tif(x==y){//\u7279\u5224x=y\u7684\u60c5\u51b5 \n\t\t\tcout<<ans<<'\\n';\n\t\t\tcontinue;\n\t\t}\n\t\tans+=bit_query1(x+1,y-1,a[x]);//\u52a0\u4e0a\u65b0\u589e\u7684\u9006\u5e8f\u5bf9 \n\t\tans-=bit_query2(x+1,y-1,a[x]);//\u51cf\u53bb\u539f\u6765\u7684\u9006\u5e8f\u5bf9 \n\t\tans+=bit_query2(x+1,y-1,a[y]);//\u52a0\u4e0a\u65b0\u589e\u7684\u9006\u5e8f\u5bf9 \n\t\tans-=bit_query1(x+1,y-1,a[y]);//\u51cf\u53bb\u539f\u6765\u7684\u9006\u5e8f\u5bf9 \n\t\tif(a[x]<a[y])//\u539f\u6765p[x]\u4e0ep[y]\u662f\u9006\u5e8f\u5bf9 \n\t\t\tans++;\n\t\telse//\u539f\u6765p[x]\u4e0ep[y]\u4e0d\u662f\u9006\u5e8f\u5bf9 \n\t\t\tans--;\n\t\tbit_del(x,a[x]);//\u5728x\u5904\u5220\u9664x \n\t\tbit_del(y,a[y]);//\u5728y\u5904\u5220\u9664y \n\t\tbit_ins(x,a[y]);//\u5728x\u5904\u52a0\u5165y \n\t\tbit_ins(y,a[x]);//\u5728x\u5904\u52a0\u5165x \n\t\tswap(a[x],a[y]);//\u4ea4\u6362 \n\t\tcout<<ans<<'\\n';\n\t}\n}\n```",
        "postTime": 1607689514,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "## [Link](https://www.luogu.com.cn/problem/CF785E)\n\n\u5148\u7b97\u51fa\u539f\u6570\u7ec4\u7684\u9006\u5e8f\u5bf9\u6570 $ans$\u3002\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u5bb9\u6613\u53d1\u73b0\u4ea4\u6362 $a_i$ \u548c $a_j$ \u65f6\uff1a\n\n\u82e5 $a_i>a_j$\uff0c\u5219\u7b54\u6848\u51cf $1$\u3002\n\n\u82e5 $a_i<a_j$\uff0c\u5219\u7b54\u6848\u52a0 $1$\u3002\n\n\u7136\u540e\n\n$ans$ \u52a0\u4e0a $[i+1,j-1]$ \u4e2d\u5927\u4e8e $a_i$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\n\n$ans$ \u51cf\u53bb $[i+1,j-1]$ \u4e2d\u5c0f\u4e8e $a_i$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\n\n$ans$ \u52a0\u4e0a $[i+1,j-1]$ \u4e2d\u5c0f\u4e8e $a_j$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\n\n$ans$ \u51cf\u53bb $[i+1,j-1]$ \u4e2d\u5927\u4e8e $a_j$ \u7684\u6570\u7684\u4e2a\u6570\u3002 \n\n\u6700\u540e\u8bb0\u5f97\u4ea4\u6362 $a_i$ \u548c $a_j$\u3002\n\n\u53d1\u73b0\u53ef\u4ee5\u7528\u5206\u5757\u7ef4\u62a4\u3002\n\n\u5bf9\u6bcf\u4e00\u5757\u90fd\u8bbe\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4 $b$\uff0c\u5148\u8ba9 $b=a$\uff0c\u7136\u540e\u5bf9 $b$ \u8fdb\u884c\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u76f4\u63a5\u4ea4\u6362\uff0c\u7136\u540e\u5c06\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u5757\u7684 $b$ \u6570\u7ec4\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u6574\u5757\u7684\u8bdd\u4e8c\u5206\u5728 $b$ \u91cc\u9762\u627e\uff0c\u6563\u5757\u66b4\u529b\u626b\u4e00\u904d\u5373\u53ef\u3002\u6700\u540e\u7b54\u6848\u7d2f\u52a0\u3002\n\n\u6ce8\u610f\u8981\u5f00 ```long long```\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint n,m,a[200005],c[200005],d[200005];\nint pos[200005],L[480],R[480];\nll ans;\nvector<int>b[480];\ninline int read()\n{\n\tint s=0,f=1;char c=getchar();\n\tfor(;!isdigit(c);c=getchar())\n\t\tif(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())\n\t\ts=s*10+c-'0';\n\treturn s*f;\n}\nvoid merge_sort(int l,int r)\n{\n\tif(l==r)return;\n    int mid=(l+r)/2;\n    merge_sort(l,mid);\n    merge_sort(mid+1,r);\n    int i=l,j=mid+1,k=l;\n    while(i<=mid&&j<=r)\n    \tif(c[i]>c[j])\n    \t\td[k++]=c[j++],ans+=mid-i+1;\n    \telse d[k++]=c[i++];\n    while(i<=mid)d[k++]=c[i++];\n    while(j<=r)d[k++]=c[j++];\n    for(int i=l;i<=r;i++)\n\t\tc[i]=d[i];\n}\nvoid input()\n{\n\tn=read(),m=read();\n\tint len=sqrt(n),block=n/len;\n    for(int i=1;i<=n;i++)\n\t\ta[i]=c[i]=i;\n\tfor(int i=1;i<=block;i++)\n        L[i]=R[i-1]+1,R[i]=i*len;\n    R[block]=n;\n    for(int i=1;i<=block;i++)\n    \tfor(int j=L[i];j<=R[i];j++)\n            pos[j]=i,b[i].push_back(a[j]);\n    for(int i=1;i<=block;i++)\n\t\tsort(b[i].begin(),b[i].end());\n}\nvoid query(int l,int r)\n{\n\tint p=pos[l],q=pos[r],ps;\n    if(a[l]>a[r])ans--;\n    if(a[r]>a[l])ans++;\n    if(p==q)\n    {\n    \tfor(int i=l+1;i<r;i++)\n            ans+=(a[i]>a[l])-(a[i]<a[l])+(a[i]<a[r])-(a[i]>a[r]);\n        swap(a[l],a[r]);\n        return;\n\t}\n\tfor(int i=p+1;i<=q-1;i++)\n\t{\n\t\tps=upper_bound(b[i].begin(),b[i].end(),a[l])-b[i].begin();\n\t\tif(ps!=b[i].size())ans+=b[i].size()-ps;\n\t\tps=lower_bound(b[i].begin(),b[i].end(),a[l])-b[i].begin()-1;\n\t\tans-=ps+1;\n\t\tps=lower_bound(b[i].begin(),b[i].end(),a[r])-b[i].begin()-1;\n\t\tans+=ps+1;\n\t\tps=upper_bound(b[i].begin(),b[i].end(),a[r])-b[i].begin();\n        if(ps!=b[i].size())ans-=b[i].size()-ps;\n    }\n    b[p].erase(lower_bound(b[p].begin(),b[p].end(),a[l]));\n    b[q].erase(lower_bound(b[q].begin(),b[q].end(),a[r]));\n    b[p].insert(upper_bound(b[p].begin(),b[p].end(),a[r]),a[r]);\n    b[q].insert(upper_bound(b[q].begin(),b[q].end(),a[l]),a[l]);\n    for(int i=l+1;i<=R[p];i++)\n\t\tans+=(a[i]>a[l])-(a[i]<a[l])+(a[i]<a[r])-(a[i]>a[r]);\n    for(int i=L[q];i<r;i++)\n        ans+=(a[i]>a[l])-(a[i]<a[l])+(a[i]<a[r])-(a[i]>a[r]);\n    swap(a[l],a[r]);\n}\nint main()\n{\n    input();\n    while(m--)\n\t{\n        int l=read(),r=read();\n        if(l>r)swap(l,r);\n        if(a[l]==a[r])\n\t\t{\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t\tcontinue;\n\t\t}\n\t\tquery(l,r);\n\t\tprintf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1644402293,
        "uid": 306049,
        "name": "Utilokasteinn",
        "ccfLevel": 0,
        "title": "CF785E Anton and Permutation"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217 $\\pi$\uff0c\u4e00\u5f00\u59cb $\\pi_i=i$\u3002\u6709 $k$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u5b9a $l,r$\uff0c\u4ea4\u6362 $\\pi_l$ \u548c $\\pi_r$ \u5e76\u56de\u7b54\u4ea4\u6362\u540e\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq 2\\times 10^5,1\\leq k\\leq 5\\times 10^4$\u3002\n\n### \u9898\u89e3\n\n\u597d\u4e45\u6ca1\u5199\u5206\u5757\u4e86\uff0c\u5199\u4e00\u4e0b\u3002\n\n\u7b80\u5355\u60f3\u4e86\u4e00\u4e0b\u53d1\u73b0\u4e0d\u4f1a\u505a\u53ea\u5e26 $\\log$ \u7684\uff0c\u8003\u8651\u5206\u5757\u3002\n\n\u9996\u5148\u8003\u8651\u5982\u4f55\u6c42\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5f71\u54cd\uff0c\u8fd9\u4e2a\u76f8\u5f53\u4e8e\u5c31\u662f\u67e5\u8be2\u4e00\u6574\u5757\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5927\u4e8e\u6216\u8005\u5c0f\u4e8e\u8fd9\u4e2a\u6570\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u5757\u6392\u5e8f\u7136\u540e\u4e8c\u5206\u3002\n\n\u5bf9\u4e8e\u4ea4\u6362\u7684\u8bdd\uff0c\u7531\u4e8e\u5757\u5185\u5143\u7d20\u6539\u53d8\u4e86\u6240\u4ee5\u9700\u8981\u91cd\u65b0\u6392\u5e8f\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51;\nll n,kk,blockSize,u,v;\nli res,d1,d2;\nll x[MAXN],sz[MAXN],lx[MAXN],rx[MAXN],bel[MAXN],r[551][551];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline li query(ll pos)\n{\n\tli res=0;\n\tfor(register int i=1;i<bel[pos];i++)\n\t{\n\t\tres+=sz[i]-(upper_bound(r[i]+1,r[i]+sz[i]+1,x[pos])-r[i]-1);\n\t}\n\tfor(register int i=lx[bel[pos]];i<pos;i++)\n\t{\n\t\tres+=(x[i]>x[pos]);\n\t}\n\tfor(register int i=pos+1;i<=rx[bel[pos]];i++)\n\t{\n\t\tres+=(x[i]<x[pos]);\n\t}\n\tfor(register int i=bel[pos]+1;i<=bel[n];i++)\n\t{\n\t\tres+=upper_bound(r[i]+1,r[i]+sz[i]+1,x[pos])-r[i]-1;\n\t}\n\treturn res;\n}\nint main()\n{\n\tn=read(),kk=read(),blockSize=sqrt(n);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tx[i]=i,bel[i]=bel[i-1]+(i%blockSize==1);\n\t\tr[bel[i]][++sz[bel[i]]]=x[i];\n\t\ti%blockSize==1?lx[bel[i]]=i,rx[bel[i-1]]=i-1:1;\n\t}\n\tfor(register int i=1;i<=bel[n];i++)\n\t{\n\t\tsort(r[i]+1,r[i]+sz[i]+1);\n\t}\n\trx[bel[n]]=n;\n\tfor(register int i=1;i<=kk;i++)\n\t{\n\t\tu=read(),v=read();\n\t\tif(u==v)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",res);\n\t\t\tcontinue;\n\t\t}\n\t\tu>v?swap(u,v):(void)1,d1=query(u),d2=query(v);\n\t\tres-=d1+d2-(x[u]>x[v]);\n\t\tif(bel[u]!=bel[v])\n\t\t{\n\t\t\tfor(register int j=1;j<=sz[bel[u]];j++)\n\t\t\t{\n\t\t\t\tif(r[bel[u]][j]==x[u])\n\t\t\t\t{\n\t\t\t\t\tr[bel[u]][j]=x[v];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(register int j=1;j<=sz[bel[v]];j++)\n\t\t\t{\n\t\t\t\tif(r[bel[v]][j]==x[v])\n\t\t\t\t{\n\t\t\t\t\tr[bel[v]][j]=x[u];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\tsort(r[bel[u]]+1,r[bel[u]]+sz[bel[u]]+1);\n\t\tsort(r[bel[v]]+1,r[bel[v]]+sz[bel[v]]+1);\n\t\tswap(x[u],x[v]);\n\t\td1=query(u),d2=query(v);\n\t\tres+=d1+d2-(x[u]>x[v]),printf(\"%lld\\n\",res);\n\t}\n}\n```",
        "postTime": 1617091518,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "#### \u9898\u76ee\u89e3\u6cd5\n\u9996\u5148\u53ef\u4ee5\u5206\u6790\u4e00\u4e0b\uff0c\u5047\u8bbe\u4ea4\u6362\u7684\u4f4d\u7f6e\u4e3a $i,j(i < j)$ \uff0c \u90a3\u4e48\u5b9e\u9645\u4e0a\u5bf9\u4e8e $[1,i - 1]$ \u548c $[j + 1, n]$ \u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\n\n\u771f\u6b63\u53d7\u5230\u5f71\u54cd\u7684\u5b9e\u9645\u4e0a\u7684\u662f $[i,j]$ \u7684\u533a\u95f4\u9006\u5e8f\u5bf9\u6570\u91cf\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u4e0b\u9762\u8bbe $l = i+1$\uff0c$r=j - 1$\u3002\n\n\u6211\u4eec\u8bbe\u4ea4\u6362\u4e4b\u524d\u5e8f\u5217 $[l, r]$ \u4e2d\u6bd4 $A[i]$ \u5927\u7684\u6570\u6709 $x_1$ \u4e2a\uff0c\u6bd4 $A[i]$ \u5c0f\u7684\u6570\u6709 $y_1$ \u4e2a\uff0c\u6bd4 $A[j]$ \u5927\u7684\u6570\u6709 $x_2$ \u4e2a\uff0c\u6bd4 $A[j]$ \u5c0f\u7684\u6570\u6709 $y_2$ \u4e2a\u3002\u90a3\u4e48\u7b54\u6848\u7684 $Ans$ \u76f8\u5bf9\u4e8e\u4e0a\u4e00\u6b21\u7684\u7b54\u6848 $Ans_{last}$ \u5c31\u4f1a\u53d8\u6210\uff1a \n\n$Ans = Ans_{last} + x_1 - y_1 - x_2 + y_2$ \n\n$A_i > A_j$ \u7684\u8bdd\uff0c\u7b54\u6848\u8fd8\u9700\u8981\u51cf\u4e00\uff0c\u5426\u5219\u52a0\u4e00\u3002\n\n\u4e0a\u8ff0\u7b54\u6848\u53d8\u5316\u5e76\u4e0d\u96be\u4ee5\u7406\u89e3\uff0c\u4e3b\u8981\u662f\u96be\u5728\u7ef4\u62a4\u533a\u95f4\u4e2d\u6bd4\u67d0\u4e2a\u6570\u5927 / \u5c0f\u7684\u6570\u7684\u6570\u91cf\u800c\u4e14\u8981\u52a8\u6001\u4ea4\u6362\u4e24\u4e2a\u6570\u3002\n\n\u4f46\u662f\u8fd9\u5176\u5b9e\u5c31\u662f [hzwer](http://hzwer.com/8053.html) \u7684\u6570\u5217\u5206\u5757\u5165\u95e8$2$ \u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\u3002\u4e8e\u662f\u4e0a\u5927\u5206\u5757\u3002\n\n\u8003\u8651\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u6574\u5757\u90fd\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u597d\u7684\uff0c\u8bbe $i$ \u6240\u5728\u7684\u5757\u662f $pos[i]$\uff0c $j$ \u6240\u5728\u7684\u5757\u662f\u5728 $pos[j]$\uff0c\u8bbe\u5757\u7684\u5927\u5c0f\u662f $\\sqrt{n}$ \uff0c\u5757\u7684\u6570\u91cf\u4e5f\u662f $\\sqrt{n}$\u3002\n\n+ \u5bf9\u4e8e\u4ea4\u6362\u64cd\u4f5c\uff0c\u76f4\u63a5\u66b4\u529b\u4ea4\u6362\u5373\u53ef\uff0c\u7136\u540e\u91cd\u65b0\u6392\u5e8f\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(\\sqrt{n}\\log n)$\u3002\n\n+ \u5bf9\u4e8e\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u5185\u6709\u4e2a\u6570\u6bd4 $A_i,A_j$ \u5927 / \u5c0f\uff0c\u56e0\u4e3a\u6211\u4eec\u7ef4\u62a4\u7684\u6bcf\u4e00\u4e2a\u5757\u90fd\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u597d\u7684\uff0c\u800c\u4e14\u540e\u4e00\u5757\u7684\u5728\u539f\u5e8f\u5217\u7684\u4f4d\u7f6e\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u5927\u4e8e\u8fd9\u4e00\u5757\u7684\u6700\u5927\u7f16\u53f7\u3002\u90a3\u4e48\u7b2c $pos[i] + 1$ \u5230\u7b2c $pos[j] - 1$ \u5757\u90fd\u53ef\u4ee5\u5bf9\u4e8e\u6574\u5757\u8fdb\u884c\u4e8c\u5206\u77e5\u9053\u6709\u591a\u5c11\u4e2a\u6570\u6bd4 $A_i,A_j$ \u5927 / \u5c0f\uff0c\u5bf9\u4e8e\u96f6\u6563\u7684\u5757\u6211\u4eec\u5c31\u76f4\u63a5\u66b4\u529b\u5224\u65ad\u5373\u53ef\uff0c\u5904\u7406\u96f6\u6563\u5757\u7684\u590d\u6742\u5ea6\u662f $O(\\sqrt{n})$\uff0c\u6574\u5757\u7684\u5904\u7406\u662f$O(\\sqrt{n}\\log n)$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6: $O(Q\\sqrt{n}\\log n)$ \n\nps: $\\log {\\sqrt{n}} = \\frac{1}{2}\\log n$ \uff0c\u6240\u4ee5\u8ba4\u4e3a\u662f $\\log n$\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\u89c1\u4ee3\u7801\u5904\u3002\n\n### Code\n\n\u867d\u7136\u8dd1\u5f97\u6162\u800c\u4e14\u957f\uff0c\u4f46\u662f\u81ea\u8ba4\u4e3a\u601d\u8def\u8fd8\u633a\u6e05\u6670\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n    int x = 0, flag = 1;\n    char ch = getchar();\n    for( ; ch > '9'|| ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n    return x * flag;\n}\nconst int MAXN = 2e5 + 56;\nint n, m;\nlong long Ans = 0; // \u7b54\u6848\u53ef\u80fd\u662f n^2 \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u8981\u5f00long long\nint block, L[MAXN], R[MAXN], num = 0, pos[MAXN];\n\nstruct data {\n    int val, id; //id \u8868\u793a\u5b83\u5728\u539f\u6765\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0cval \u8868\u793a\u5b83\u5f53\u524d\u7684\u503c\n} A[MAXN]; //\u8fd9\u4e2a\u8868\u793a\u4e00\u4e2a\u6570\u7ec4\n\nbool cmp(data a, data b) {return a.val < b.val;}\n\nvoid change(int l, int r) {\n    int bl = pos[l], br = pos[r], rl, rr;\n    for(int i = L[bl] ; i <= R[bl] ; i ++) //\u83b7\u53d6\u771f\u5b9e\u4f4d\u7f6e\n        if(A[i].id == l) rl = i;\n    for(int i = L[br] ; i <= R[br] ; i ++)\n        if(A[i].id == r) rr = i;\n    swap(A[rl].val, A[rr].val); // \u8fdb\u884c\u4ea4\u6362\n    sort(A + L[bl], A + 1 + R[bl], cmp); // \u9632\u6b62\u5931\u5e8f\uff0c\u8fdb\u884c\u6574\u5757\u6392\u5e8f\n    sort(A + L[br], A + 1 + R[br], cmp);\n    return ;\n}\n\nvoid Get(int l, int r) {\n    int B1 = 0, B2 = 0, S1 = 0, S2 = 0; // B1 \u8868\u793a\u6bd4 l \u5927\u7684\uff0cS1 \u8868\u793a\u6bd4 l \u5c0f\u7684\n    int bl = pos[l], br = pos[r], rl, rr;\n    //------------Step 1\uff1a\u83b7\u53d6\u5f53\u524dl \u548c r \u5728\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e --------\n    for(int i = L[bl] ; i <= R[bl] ; i ++) // \u5b9a\u4f4d l \u4ee5\u53ca r \u5f53\u524d\u7684\u201c\u771f\u5b9e\u4f4d\u7f6e\u201d \n        if(A[i].id == l) rl = i;\n    for(int i = L[br] ; i <= R[br] ; i ++)\n        if(A[i].id == r) rr = i;\n    //------------Step 2\uff1a\u83b7\u53d6\u6563\u5757\u7b54\u6848----------\n    if(bl == br) { // \u6ce8\u610f\u8fd9\u91cc\u8981\u5224\u65ad\u4e00\u4e0b\u4e24\u4e2a\u5728\u540c\u4e00\u4e2a\u5757\u5185\u7684\u60c5\u51b5\n        for(int i = L[bl] ; i <= R[bl] ; i ++) { //\u83b7\u53d6\u6563\u5757\u7684\u7b54\u6848\n            if(A[i].id >= l && A[i].id <= r - 1 && A[i].val > A[rl].val) B1 ++;\n            if(A[i].id >= l && A[i].id <= r - 1 && A[i].val < A[rl].val) S1 ++;\n            if(A[i].id >= l + 1 && A[i].id <= r && A[i].val > A[rr].val) B2 ++;\n            if(A[i].id >= l + 1 && A[i].id <= r && A[i].val < A[rr].val) S2 ++;\n        }\n        int flag = 0; \n        if(A[rl].val < A[rr].val) flag = 1;\n        else flag = -1;\n        Ans = Ans + B1 - S1 + S2 - B2 + flag;\n        return ;\n    }\n    for(int i = L[bl] ; i <= R[bl] ; i ++) { //\u83b7\u53d6\u6563\u5757\u7684\u7b54\u6848\n        if(A[i].id >= l && A[i].id <= r - 1 && A[i].val > A[rl].val) B1 ++;\n        if(A[i].id >= l && A[i].id <= r - 1 && A[i].val < A[rl].val) S1 ++;\n        if(A[i].id >= l + 1 && A[i].id <= r && A[i].val > A[rr].val) B2 ++;\n        if(A[i].id >= l + 1 && A[i].id <= r && A[i].val < A[rr].val) S2 ++;\n    }\n    for(int i = L[br] ; i <= R[br] ; i ++) {\n        if(A[i].id >= l && A[i].id <= r - 1 && A[i].val > A[rl].val) B1 ++;\n        if(A[i].id >= l && A[i].id <= r - 1 && A[i].val < A[rl].val) S1 ++;\n        if(A[i].id >= l + 1 && A[i].id <= r && A[i].val > A[rr].val) B2 ++;\n        if(A[i].id >= l + 1 && A[i].id <= r && A[i].val < A[rr].val) S2 ++;\n    }\n    //-------------Step 3\uff1a\u91c7\u7528\u5757\u5185\u4e8c\u5206\u7684\u65b9\u6cd5\u83b7\u53d6\u6574\u5757\u7b54\u6848----------\n    //Step:3.1 \u83b7\u53d6\u5c0f\u4e8e\u8981\u4ea4\u6362\u7684 l \u5bf9\u5e94\u7684\u6570\u7684\u6570\u91cf\n    for(int i = pos[l] + 1 ; i <= pos[r] - 1 ; i ++) {\n        int now = L[i];\n        if(A[rl].val > A[R[i]].val) {S1 += R[i] - L[i] + 1; continue;}\n        if(A[rl].val < A[L[i]].val) continue;\n        for(int j = log2(R[i] - L[i] + 1) ; j >= 0 ; j --) {\n            int t = now + (1 << j);\n            if(t <= R[i] && A[t].val < A[rl].val) now = t;\n        }\n        S1 += now - L[i] + 1;\n    }\n    //Step:3.2 \u83b7\u53d6\u5927\u4e8e\u8981\u4ea4\u6362\u7684 l \u5bf9\u5e94\u7684\u6570\u7684\u6570\u91cf\n    for(int i = pos[l] + 1 ; i <= pos[r] - 1 ; i ++) {\n        int now = R[i];\n        if(A[rl].val > A[R[i]].val) continue;\n        if(A[rl].val < A[L[i]].val) {B1 += R[i] - L[i] + 1; continue;}\n        for(int j = log2(R[i] - L[i] + 1) ; j >= 0 ; j --) {\n            int t = now - (1 << j);\n            if(t >= L[i] && A[t].val > A[rl].val) now = t;\n        }\n        B1 += R[i] - now + 1;\n    }\n    //Step:3.3 \u83b7\u53d6\u5c0f\u4e8e\u8981\u4ea4\u6362\u7684 r \u5bf9\u5e94\u7684\u6570\u7684\u6570\u91cf\n    for(int i = pos[l] + 1 ; i <= pos[r] - 1 ; i ++) {\n        int now = L[i];\n        if(A[rr].val > A[R[i]].val) {S2 += R[i] - L[i] + 1; continue;}\n        if(A[rr].val < A[L[i]].val) continue;\n        for(int j = log2(R[i] - L[i] + 1) ; j >= 0 ; j --) {\n            int t = now + (1 << j);\n            if(t <= R[i] && A[t].val < A[rr].val) now = t;\n        }\n        S2 += now - L[i] + 1;\n    }\n    //Step:3.4 \u83b7\u53d6\u5927\u4e8e\u8981\u4ea4\u6362\u7684 r \u5bf9\u5e94\u7684\u6570\u7684\u6570\u91cf\n    for(int i = pos[l] + 1 ; i <= pos[r] - 1 ; i ++) {\n        int now = R[i];\n        if(A[rr].val > A[R[i]].val) continue;\n        if(A[rr].val < A[L[i]].val) {B2 += R[i] - L[i] + 1; continue;}\n        for(int j = log2(R[i] - L[i] + 1) ; j >= 0 ; j --) {\n            int t = now - (1 << j);\n            if(t >= L[i] && A[t].val > A[rr].val) now = t;\n        }\n        B2 += R[i] - now + 1;\n    }\n    //--------------Step 4 \u66f4\u65b0\u7b54\u6848---------------\n    // \u7b54\u6848\u7684\u8868\u8fbe\u5f0f\u4e3a Ans = Ans + B1 - S1 + S2 - B2\n    int flag = 0;\n    if(A[rl].val < A[rr].val) flag = 1;\n    else flag = -1;\n    Ans = Ans + B1 - S1 + S2 - B2 + flag;\n    return ;\n}\n\nint main() {\n    n = read(), m = read();\n    for(int i = 1 ; i <= n ; i ++)\n        A[i].id =  A[i].val = i;\n    block = (int)(sqrt(n)) + 1;\n    while(R[num] != n) {\n        num ++;\n        L[num] = R[num - 1] + 1;\n        R[num] = min(n, block * num);\n        for(int i = L[num] ; i <= R[num] ; i ++)\n        pos[i] = num;\n    }\n    for(int i = 1 ; i <= m ; i ++) {\n        int l = read(), r = read();\n        if(l > r) swap(l, r);\n        if(l != r) Get(l, r), change(l, r);\n        printf(\"%lld\\n\", Ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1615443683,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "CF785E Anton and Permutation \u9898\u89e3"
    },
    {
        "content": "\u9700\u8981\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u4e00\u4e2a\u6570\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e\u8fd9\u4e2a\u6570\u3002\n\n\u9047\u4e8b\u4e0d\u51b3\u5148\u5206\u5757\uff0c\u5047\u8bbe\u5206 $B$ \u4e2a\u5757\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\uff0c\u8bb0\u5f55\u4e0d\u5927\u4e8e\u6bcf\u4e00\u4e2a\u6570\u7684\u6570\u6709\u591a\u5c11\u4e2a\u3002\n\n\u90a3\u4e48\u67e5\u8be2\u4e4b\u524d/\u4e4b\u540e\u6709\u591a\u5c11\u4e2a\u5757\uff0c\u53ef\u4ee5\u5c06\u5757\u5185\u6b8b\u4f59\u90e8\u5206\u66b4\u529b\u8ba1\u7b97\uff0c\u522b\u7684\u4f7f\u7528\u8bb0\u5f55\u597d\u7684\u7b54\u6848\u3002\n\n\u5355\u70b9\u4fee\u6539\uff0c\u4e5f\u5c31\u662f\u5c06\u5f53\u524d\u5757\u8bb0\u5f55\u7684\u7b54\u6848\u533a\u95f4\u4fee\u6539\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u8bb0\u5f55\u7684\u7b54\u6848\uff0c\u9700\u8981\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n\u5355\u6b21\u4fee\u6539\uff1a$O(\\log N)$\n\n\u5355\u6b21\u67e5\u8be2\uff1a$O(B\\log N+\\dfrac{N}{B})$\n\n\u8ba9 $B\\log N=\\dfrac{N}{B}$\uff0c\u4e5f\u5c31\u662f $B=\\sqrt{\\dfrac{N}{\\log N}}$ \u7684\u65f6\u5019\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5c0f\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(M\\sqrt{N\\log N})$\n\n\u597d\u5728\u65f6\u95f4\u6709 4 s\uff0c\u590d\u6742\u5ea6\u4e0a\u597d\u50cf\u662f $3.6\\times 10^8$\uff0c\u5e38\u6570\u5e94\u8be5\u4e0d\u5927\uff0c\u5927\u6982\u80fd\u8fc7\u7684\u6837\u5b50\u3002\n\n\u7136\u800c\u7a7a\u95f4\u7206\u70b8\u4e86...\n\n\u7136\u540e\u6211\u53d1\u73b0 $B=\\sqrt{N}$ \u7684\u65f6\u5019\u4e0d\u4f1a\u7206\u70b8\u3002\n\n\u7136\u540e A \u4e86\u3002\n\n\u53d1\u73b0 CF feature\uff1a`fread` \u6bd4 `getchar` \u6162\uff0c\u800c\u4e14\u7406\u8bba\u4e0a $B=\\sqrt{\\dfrac{N}{\\log N}}$ \u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f4e\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u597d\u50cf\u5e76\u4e0d\u662f /yiw \n\n\u8c8c\u4f3c $B=\\sqrt N$ \u66f4\u5feb\u4e00\u4e9b\uff1f~~\u677e\u677e\u677e\u5361\u5e38~~\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 200005, B = 455;\nint n, m, tree[B][N], b, t, L[B], R[B], in[N], a[N];\nlong long ans;\n\ninline void add(int pos, int val, int id) {\n\twhile (pos <= n) {\n\t\ttree[id][pos] += val;\n\t\tpos += pos & (-pos);\n\t}\n}\n\ninline int sum(int pos, int id) {\n\tint res = 0;\n\twhile (pos) {\n\t\tres += tree[id][pos];\n\t\tpos &= pos - 1;\n\t}\n\treturn res;\n}\n\ninline int query(int l, int r, int val) {\n\tint bl = in[l], br = in[r], res = 0;\n\tif (bl + 1 >= br) {\n\t\tfor (register int i = l; i <= r; i++) res += a[i] <= val;\n\t\treturn res;\n\t}\n\tfor (register int i = bl + 1; i < br; i++) res += sum(val, i);\n\tfor (register int i = l; i <= R[bl]; i++) res += a[i] <= val;\n\tfor (register int i = L[br]; i <= r; i++) res += a[i] <= val;\n\treturn res;\n}\n\ninline void modify(int pos, int val) {\n\tadd(val, 1, in[pos]);\n\tadd(a[pos], -1, in[pos]);\n}\n\ninline void read(int &ret) {\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9') ch = getchar();\n\tret = 0;\n\twhile (ch >= '0' && ch <= '9') ret = ret * 10 + ch - '0', ch = getchar();\n}\n\ninline void makeblock() {\n\tb = sqrt(n), t = (b + n - 1) / b;\n\tfor (register int i = 1; i <= t; i++) {\n\t\tL[i] = R[i - 1] + 1, R[i] = min(L[i] + b - 1, n);\n\t\tfor (register int j = L[i]; j <= R[i]; j++) in[j] = i, a[j] = j, add(j, 1, i);\n\t}\n}\n\nint main() {\n\tread(n), read(m);\n\tmakeblock();\n\twhile (m--) {\n\t\tint x, y;\n\t\tread(x), read(y);\n\t\tif (x > y)\n\t\t\tswap(x, y);\n\t\tif (x ^ y) {\n\t\t\tif (a[x] > a[y])\n\t\t\t\tans--;\n\t\t\telse\n\t\t\t\tans++;\n\t\t\tans -= (query(x + 1, y - 1, a[x]) - query(x + 1, y - 1, a[y])) * 2;\n\t\t\tmodify(x, a[y]), modify(y, a[x]);\n\t\t\tswap(a[x], a[y]);\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n#### THE END\n\n",
        "postTime": 1615285979,
        "uid": 253946,
        "name": "ClHg2",
        "ccfLevel": 7,
        "title": "CF785E \u9898\u89e3"
    },
    {
        "content": "\u6700\u8fd1\u6211\u90fd\u5728\u7ec3\u5206\u5757\uff0c\u6240\u4ee5\u6211\u8003\u8651\u7528\u7684\u5206\u5757\n\n\u9996\u5148\u8981\u77e5\u9053\uff0c\u4ea4\u6362 $i$\uff0c$j$  \u4e24\u4e2a\u4f4d\u7f6e\u7684\u6570\u5bf9\u4e8e $1\\sim i-1$\n\u548c $j+1\\sim n$ \u7684\u9006\u5e8f\u5bf9\u5bf9\u6570\u65e0\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8003\u8651\u4e2d\u95f4\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u6309\u7167\u4ee5\u5f80\u7684\u5957\u8def\uff0c\u5148\u5206\u5757\uff0c\u4ea4\u6362 $i$\uff0c$j$\u65f6\uff0c\u66b4\u529b\u8ba1\u7b97\u4e24\u8fb9\u4e0d\u5b8c\u6574\u7684\u5757\uff0c\u5bf9\u4e8e\u4e2d\u95f4\u7684\u5757\uff0c\u4f7f\u7528\u4e8c\u5206\u627e\u51fa\u5c0f\u4e8ei\u548c\u5c0f\u4e8ej\u7684\u6570\u7684\u4e2a\u6570$x$\uff0c$y$\uff0c\n\n\u90a3\u4e48\u9006\u5e8f\u5bf9\u5bf9\u6570\u7684\u6539\u53d8\u91cf\u5219\u4e3a$(y-x)*2$\uff0c\uff08\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u89c4\u5f8b\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=200005;\nint a[N],b[N],dt[N],la[N],ra[N];\nint n,m,len;\nll ans;\nvoid chang(int l,int r){\n\tif(dt[l]==dt[r]){//\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u76f4\u63a5\u8ba1\u7b97 \n\t\tll cnt=0;\n\t\tif(a[l]>a[r])cnt--;\n\t\telse if(a[l]<a[r])cnt++;\n\t\tfor(int i=l+1;i<=r-1;i++){\n\t\t\tif(a[l]>a[i])cnt--;\n\t\t\telse if(a[l]<a[i])cnt++;\n\t\t\tif(a[r]>a[i])cnt++;\n\t\t\telse if(a[r]<a[i])cnt--;\n\t\t}\n\t\tswap(a[l],a[r]);\n\t\tfor(int i=la[dt[l]];i<=ra[dt[l]];i++)b[i]=a[i];//\u6bcf\u6b21\u4ea4\u6362\u540e\uff0c\u6bcf\u4e2a\u5757\u7684\u4f4d\u7f6e\u8981\u91cd\u65b0\u6392 \n\t\tsort(b+la[dt[l]],b+ra[dt[l]]+1);\n\t\tans+=cnt;\n\t}\n\telse {\n\t\tint i=l+1,j=r-1;\n\t\tll cnt=0;\n\t\tif(a[l]>a[r])cnt--;\n\t\telse if(a[l]<a[r])cnt++;\n\t\twhile(dt[i]==dt[l]){//\u66b4\u529b\u8ba1\u7b97\u4e24\u8fb9\u4e0d\u5b8c\u6574\u7684\u5757 \n\t\t\tif(a[l]>a[i])cnt--;\n\t\t\telse if(a[l]<a[i])cnt++;\n\t\t\tif(a[r]>a[i])cnt++;\n\t\t\telse if(a[r]<a[i])cnt--;\n\t\t\ti++;\n\t\t}\n\t\twhile(dt[j]==dt[r]){\n\t\t\tif(a[l]>a[j])cnt--;\n\t\t\telse if(a[l]<a[j])cnt++;\n\t\t\tif(a[r]>a[j])cnt++;\n\t\t\telse if(a[r]<a[j])cnt--;\n\t\t\tj--;\n\t\t}\n\t\tfor(int k=dt[i];k<=dt[j];k++){//\u4e2d\u95f4\u7684\u7528\u627e\u51fa\u7684\u89c4\u5f8b\u76f4\u63a5\u8ba1\u7b97 \n\t\t\tint x=lower_bound(b+la[k],b+ra[k]+1,a[l])-(b+la[k]);\n\t\t\tint y=lower_bound(b+la[k],b+ra[k]+1,a[r])-(b+la[k]);\n\t\t\tcnt=cnt-2*(x-y);\n\t\t}\n\t\tans+=cnt;\n\t\tswap(a[l],a[r]);\n\t\tfor(int k=la[dt[l]];k<=ra[dt[l]];k++)b[k]=a[k];//\u91cd\u65b0\u8bb0\u5f55\u5757 \n\t\tfor(int k=la[dt[r]];k<=ra[dt[r]];k++)b[k]=a[k];\n\t\tsort(b+la[dt[l]],b+ra[dt[l]]+1);\n\t\tsort(b+la[dt[r]],b+ra[dt[r]]+1);\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tlen=sqrt(n);\n\tfor(int i=1;i<=n;i++){\n\t\tdt[i]=(i-1)/len+1;//\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u5728\u7b2c\u51e0\u5757\u91cc\u9762 \n\t\ta[i]=b[i]=i;//b[i]\u5c06\u6bcf\u4e2a\u5757\u5206\u5f00\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e8c\u5206\u67e5\u627e\u65f6\u597d\u7528 \n\t}\n\tfor(int i=1;i<=dt[n];i++){\n\t\tla[i]=(i-1)*len+1;//\u8bb0\u5f55\u6bcf\u4e2a\u5757\u7684\u5de6\u53f3\u7aef\u70b9 \n\t\tra[i]=i*len;\n\t\tif(i==dt[n])ra[i]=n;\n\t}\n\tint l,r;\n\twhile(m--){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tif(l>r)swap(l,r);\n\t\tchang(l,r);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1612249293,
        "uid": 277664,
        "name": "\u968f\u4fbfAK",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "# \u52a8\u6001\u9006\u5e8f\u5bf9\u4e13\u7ec3\n\n\u4e3a\u4e86\u8bf4\u660e\u8fd9\u9053\u9898\uff0c\u987a\u4fbf\u5199\u4e86\u5176\u4ed6\u4e24\u9053\u9898\uff0c\u5171\u4e09\u9053\u9898\uff0c~~\u4e09\u9053\u9898\u6709\u9012\u8fdb\u5173\u7cfb~~\n\n### \u9898\u610f\n\n\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u4fee\u6539\u540e\u6c42\u51fa\u5f53\u524d\u5e8f\u5217\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n### \u601d\u8def\n\n\u9898\u76ee\u8ba9\u6211\u4eec\u6c42\u51fa\n$$\n\\sum_{i=1}^n\\sum_{j=i+1}^n[a_i>a_j]\n$$\n\u4e5f\u5c31\u662f\u8ba9\u6211\u4eec\u6c42\u51fa\u6ee1\u8db3\n$$\npos_i<pos_j\\&\\&a_i>a_j\n$$\n\u7684\u70b9\u5bf9\u6570\u91cf\u3002\n\n\u5bf9\u4e8e\u4e0d\u4fee\u6539\u7684\u60c5\u51b5\uff0c\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6216\u5f52\u5e76\u5904\u7406\u90fd\u53ef\u4ee5\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528CDQ\u5206\u6cbb\u79bb\u7ebf\u89e3\u51b3\uff0c\u6216\u8005\u4f7f\u7528\u6811\u5957\u6811\u5728\u7ebf\u5904\u7406\u3002\n\n\u6211\u8fd9\u4e48\u61d2\u5f53\u7136\u662f\u7528\u6811\u5957\u6811\u5566~\n\n## \u6811\u72b6\u6570\u7ec4\u5957\u503c\u57df\u7ebf\u6bb5\u6811\n\n### \u601d\u60f3\n\n\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5e8f\u5217\uff0c\u503c\u57df\u7ebf\u6bb5\u6811\u7ef4\u62a4\u503c\u57df\u3002\n\n\u4f18\u70b9\u662f\u53ef\u4ee5\u5199\u6210\u975e\u9012\u5f52\u5f0f\u67e5\u8be2\uff0c\u5e38\u6570\u76f8\u5bf9\u8f83\u5c0f\u3002\n\n\u7f3a\u70b9\u662f\u5373\u4f7f\u662f\u52a8\u6001\u5f00\u70b9\u7a7a\u95f4\u6d88\u8017\u4ecd\u7136\u5f88\u5927\u3002\n\n### \u5b9e\u73b0\n\n\u5177\u4f53\u5b9e\u73b0\u662f\u6bcf\u4e2a\u6811\u72b6\u6570\u7ec4\u8282\u70b9\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\u3002\u4fee\u6539\u65f6\u4fee\u6539\u6240\u6709\u6811\u72b6\u6570\u7ec4\u4e0a\u5305\u62ec\u7684\u7ebf\u6bb5\u6811\uff0c\u67e5\u8be2\u65f6\u7c7b\u4f3c\u3002\n\n```cpp\nvoid update(int &ro,int l,int r,int x,int k){//l\u548cr\u662f\u5f53\u524d\u503c\u57df\u533a\u95f4\uff0cx\u4e3a\u4f4d\u7f6e\n    if(!ro) ro=++tot;\n    val[ro]+=k;\n    if(l==r)return;\n    int mid=l+r>>1;\n    if(x<=mid)update(ls[ro],l,mid,x,k);\n    else update(rs[ro],mid+1,r,x,k);\n}\n```\n\n\u5899\u88c2\u5b89\u5229\u975e\u9012\u5f52\u5f0f\u7ebf\u6bb5\u6811\u67e5\u8be2\n\n```cpp\ninline long long query(int l,int r,int x,int type){\n    int cnta=0,cntb=0;\n    long long ans=0;\n    for(int i=l-1;i;i-=i&-i) qa[++cnta]=rt[i];//\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u65b9\u6cd5\uff1a\u5dee\u5206\n    for(int i=r;i;i-=i&-i)   qb[++cntb]=rt[i];//\u5148\u5c06\u6240\u6709\u8981\u5904\u7406\u7684\u6811\u72b6\u6570\u7ec4\u4e0a\u7684\u7ebf\u6bb5\u6811\u5168\u90e8\u8bb0\u5f55\uff0c\u7136\u540e\u4e00\u8d77\u67e5\u8be2\n    l=1,r=n;\n    while(l<r){\n        int mid=l+r>>1;\n        if(x>mid){\n            if(type){//type\u8868\u793a\u67e5\u8be2\u7684\u7c7b\u578b\uff0c\u6309\u7167\u6b63\u5e38\u7ebf\u6bb5\u6811\u67e5\u8be2\u7684\u601d\u8def\u5904\u7406\u5373\u53ef\u3002\u8fd9\u91cctype=1\u8868\u793a\u67e5\u5de6\u8fb9\n                for(int i=1;i<=cnta;i++) ans-=val[ls[qa[i]]];\n                for(int i=1;i<=cntb;i++) ans+=val[ls[qb[i]]];\n            }\n            for(int i=1;i<=cnta;i++) qa[i]=rs[qa[i]];\n            for(int i=1;i<=cntb;i++) qb[i]=rs[qb[i]];\n            l=mid+1;\n        }else{\n            if(!type){\n                for(int i=1;i<=cnta;i++) ans-=val[rs[qa[i]]];\n                for(int i=1;i<=cntb;i++) ans+=val[rs[qb[i]]];\n            }\n            for(int i=1;i<=cnta;i++) qa[i]=ls[qa[i]];\n            for(int i=1;i<=cntb;i++) qb[i]=ls[qb[i]];\n            r=mid;\n        }\n    }\n    return ans;\n}\n```\n\n## [P3157 [CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9](https://www.luogu.com.cn/problem/P3157)\n\n\u7ed9\u4f60\u4e00\u4e2a\u6392\u5217\uff0c\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\uff0c\u6c42\u6bcf\u6b21\u64cd\u4f5c\u540e\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n### \u601d\u8def\n\n\u63d2\u5165\u539f\u5e8f\u5217\u4e4b\u540e\u5f97\u5230\u539f\u5e8f\u5217\u7b54\u6848\uff0c\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u6570 $x$ \u67e5\u8be2 $pos_i<x$ \u3001$a_i>a_x$ \u548c $pos_i>x$ \u3001$a_i<a_x$ \u7684\u7b54\u6848\u5e76\u7528\u4e4b\u524d\u7684\u7b54\u6848\u51cf\u53bb\uff0c\u7136\u540e\u5220\u9664\u5b83\u7684\u5f71\u54cd\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ninline int read(){\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nnamespace star\n{\n\tconst int maxn=1e5+10,maxm=3e7+10;\n\tint n,m,a[maxn],ls[maxm],rs[maxm],tot,rt[maxn],val[maxm];\n\tvoid update(int &ro,int l,int r,int x,int k){\n\t\tif(!ro) ro=++tot;\n\t\tval[ro]+=k;\n\t\tif(l==r)return;\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid) update(ls[ro],l,mid,x,k);\n\t\telse update(rs[ro],mid+1,r,x,k);\n\t}\n\tint qa[maxn],qb[maxn];\n\tlong long ans;\n\tinline long long query(int l,int r,int x,int type){\n\t\tint cnta=0,cntb=0;\n\t\tlong long ans=0;\n\t\tfor(int i=l-1;i;i-=i&-i) qa[++cnta]=rt[i];\n\t\tfor(int i=r;i;i-=i&-i)   qb[++cntb]=rt[i];\n\t\tl=1,r=n;\n\t\twhile(l<r){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(x>mid){\n\t\t\t\tif(type){\n\t\t\t\t\tfor(int i=1;i<=cnta;i++)ans-=val[ls[qa[i]]];\n\t\t\t\t\tfor(int i=1;i<=cntb;i++)ans+=val[ls[qb[i]]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=cnta;i++)qa[i]=rs[qa[i]];\n\t\t\t\tfor(int i=1;i<=cntb;i++)qb[i]=rs[qb[i]];\n\t\t\t\tl=mid+1;\n\t\t\t}else{\n\t\t\t\tif(!type){\n\t\t\t\t\tfor(int i=1;i<=cnta;i++)ans-=val[rs[qa[i]]];\n\t\t\t\t\tfor(int i=1;i<=cntb;i++)ans+=val[rs[qb[i]]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=cnta;i++)qa[i]=ls[qa[i]];\n\t\t\t\tfor(int i=1;i<=cntb;i++)qb[i]=ls[qb[i]];\n\t\t\t\tr=mid;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\tint pos[maxn];\n\tinline void work(){\n\t\tn=read(),m=read();\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\tans+=query(1,i-1,a[i]=read(),0);pos[a[i]]=i;\n\t\t\tfor(int x=i;x<=n;x+=x&-x) update(rt[x],1,n,a[i],1);\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\twhile(--m){\n\t\t\tint x=read();\n\t\t\tans-=query(1,pos[x]-1,x,0)+query(pos[x]+1,n,x,1);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t\tfor(int j=pos[x];j<=n;j+=j&-j) update(rt[j],1,n,x,-1);\n\t\t}\n\t}\n}\nsigned main(){\n\tstar::work();\n\treturn 0;\n}\n```\n\n## [CF785E Anton and Permutation](https://www.luogu.com.cn/problem/solution/CF785E)\n\n\u7ed9\u4f60\u4e00\u4e2a\u539f\u5e8f\u5217\u4e3a\u9012\u589e\u6392\u5217\u7684\u5e8f\u5217\uff0c\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\uff0c\u6c42\u6bcf\u6b21\u64cd\u4f5c\u540e\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n### \u601d\u8def\n\n\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u9898\uff0c\u5e76\u975e\u5220\u9664\u800c\u662f\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u539f\u4f4d\u7f6e\u5220\u9664\u4e24\u4e2a\u6570\u7136\u540e\u5728\u5f7c\u6b64\u7684\u4f4d\u7f6e\u53c8\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u6570\u3002\n\n\u8fd9\u91cc\u6211\u5148\u51cf\u53bb\u5f71\u54cd\u7136\u540e\u66f4\u65b0\u518d\u52a0\u4e0a\u5f71\u54cd\uff0c\u6700\u540e\u5355\u72ec\u8ba8\u8bba\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u6570\u4e4b\u95f4\u4e92\u6362\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ninline int read(){\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nnamespace star\n{\n\tconst int maxn=2e5+1,maxm=3e7+1;\n\tint n,Q,a[maxn],rt[maxn];\n\tlong long ans;\n\tint ls[maxm],rs[maxm],tot,val[maxm];\n\tvoid update(int &ro,int l,int r,int x,int k){\n\t\tif(!ro) ro=++tot;\n\t\tval[ro]+=k;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tif(x<=mid)update(ls[ro],l,mid,x,k);\n\t\telse update(rs[ro],mid+1,r,x,k);\n\t}\n\tint qa[maxn],qb[maxn];\n\tinline long long query(int l,int r,int x,int type){\n\t\tint cnta=0,cntb=0;\n\t\tlong long ans=0;\n\t\tfor(int i=l-1;i;i-=i&-i) qa[++cnta]=rt[i];\n\t\tfor(int i=r;i;i-=i&-i)   qb[++cntb]=rt[i];\n\t\tl=1,r=n;\n\t\twhile(l<r){\n\t\t\tint mid=l+r>>1;\n\t\t\tif(x>mid){\n\t\t\t\tif(type){\n\t\t\t\t\tfor(int i=1;i<=cnta;i++) ans-=val[ls[qa[i]]];\n\t\t\t\t\tfor(int i=1;i<=cntb;i++) ans+=val[ls[qb[i]]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=cnta;i++) qa[i]=rs[qa[i]];\n\t\t\t\tfor(int i=1;i<=cntb;i++) qb[i]=rs[qb[i]];\n\t\t\t\tl=mid+1;\n\t\t\t}else{\n\t\t\t\tif(!type){\n\t\t\t\t\tfor(int i=1;i<=cnta;i++) ans-=val[rs[qa[i]]];\n\t\t\t\t\tfor(int i=1;i<=cntb;i++) ans+=val[rs[qb[i]]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=cnta;i++) qa[i]=ls[qa[i]];\n\t\t\t\tfor(int i=1;i<=cntb;i++) qb[i]=ls[qb[i]];\n\t\t\t\tr=mid;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\tinline void work(){\n\t\tn=read(),Q=read();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\ta[i]=i;\n\t\t\tfor(int j=i;j<=n;j+=j&-j) update(rt[j],1,n,a[i],1);\n\t\t}\n\t\twhile(Q--){\n\t\t\tint x=read(),y=read();\n\t\t\tif(x==y){\n\t\t\t\tprintf(\"%lld\\n\",ans);continue;\n\t\t\t}\n\t\t\tif(x>y)swap(x,y);\n\t\t\tans=ans-query(1,x-1,a[x],0)-query(x+1,n,a[x],1)-query(1,y-1,a[y],0)-query(y+1,n,a[y],1);\n\t\t\tfor(int i=x;i<=n;i+=i&-i) update(rt[i],1,n,a[x],-1),update(rt[i],1,n,a[y],1);\n\t\t\tfor(int i=y;i<=n;i+=i&-i) update(rt[i],1,n,a[x],1),update(rt[i],1,n,a[y],-1);\n\t\t\tswap(a[x],a[y]);\n\t\t\tans=ans+query(1,x-1,a[x],0)+query(x+1,n,a[x],1)+query(1,y-1,a[y],0)+query(y+1,n,a[y],1);\n\t\t\tans+=(a[x]<a[y]?1:-1);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n}\nsigned main(){\n\tstar::work();\n\treturn 0;\n}\n```\n\n## [P1975 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f](https://www.luogu.com.cn/problem/P1975)\n\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\uff0c\u6c42\u6bcf\u6b21\u64cd\u4f5c\u540e\u9006\u5e8f\u5bf9\u6570\u3002\n\n### \u601d\u8def\n\n\u7ed9\u4e0a\u9762\u7684\u4ee3\u7801\u52a0\u4e2a\u79bb\u6563\u5316~~XD~~\n\n\u540e\u9762\u5355\u72ec\u8ba8\u8bba\u4e24\u4e2a\u6570\u7684\u8d21\u732e\u65f6\u6709\u4e00\u70b9\u533a\u522b\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ninline int read(){\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nnamespace star\n{\n\tconst int maxn=2e4+1,maxm=3e6+1;\n\tint n,Q,a[maxn],cnt,b[maxn],rt[maxn];\n\tlong long ans;\n\tint ls[maxm],rs[maxm],tot,val[maxm];\n\tvoid update(int &ro,int l,int r,int x,int k){\n\t\tif(!ro) ro=++tot;\n\t\tval[ro]+=k;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tif(x<=mid)update(ls[ro],l,mid,x,k);\n\t\telse update(rs[ro],mid+1,r,x,k);\n\t}\n\tint qa[maxn],qb[maxn];\n\tinline long long query(int l,int r,int x,int type){\n\t\tint cnta=0,cntb=0;\n\t\tlong long ans=0;\n\t\tfor(int i=l-1;i;i-=i&-i) qa[++cnta]=rt[i];\n\t\tfor(int i=r;i;i-=i&-i)   qb[++cntb]=rt[i];\n\t\tl=1,r=n;\n\t\twhile(l<r){\n\t\t\tint mid=l+r>>1;\n\t\t\tif(x>mid){\n\t\t\t\tif(type){\n\t\t\t\t\tfor(int i=1;i<=cnta;i++) ans-=val[ls[qa[i]]];\n\t\t\t\t\tfor(int i=1;i<=cntb;i++) ans+=val[ls[qb[i]]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=cnta;i++) qa[i]=rs[qa[i]];\n\t\t\t\tfor(int i=1;i<=cntb;i++) qb[i]=rs[qb[i]];\n\t\t\t\tl=mid+1;\n\t\t\t}else{\n\t\t\t\tif(!type){\n\t\t\t\t\tfor(int i=1;i<=cnta;i++) ans-=val[rs[qa[i]]];\n\t\t\t\t\tfor(int i=1;i<=cntb;i++) ans+=val[rs[qb[i]]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=cnta;i++) qa[i]=ls[qa[i]];\n\t\t\t\tfor(int i=1;i<=cntb;i++) qb[i]=ls[qb[i]];\n\t\t\t\tr=mid;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\tinline void work(){\n\t\tn=read();\n\t\tfor(int i=1;i<=n;i++) a[i]=b[i]=read();\n\t\tsort(b+1,b+1+n);\n\t\tcnt=unique(b+1,b+1+n)-b-1;\n\t\tfor(int i=1;i<=n;i++) a[i]=lower_bound(b+1,b+1+cnt,a[i])-b;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tans+=query(1,i-1,a[i],0);\n\t\t\tfor(int j=i;j<=n;j+=j&-j) update(rt[j],1,n,a[i],1);\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\tQ=read();\n\t\twhile(Q--){\n\t\t\tint x=read(),y=read();\n\t\t\tif(x==y){\n\t\t\t\tprintf(\"%lld\\n\",ans);continue;\n\t\t\t}\n\t\t\tif(x>y)swap(x,y);\n\t\t\tans=ans-query(1,x-1,a[x],0)-query(x+1,n,a[x],1)-query(1,y-1,a[y],0)-query(y+1,n,a[y],1);\n\t\t\tfor(int i=x;i<=n;i+=i&-i) update(rt[i],1,n,a[x],-1),update(rt[i],1,n,a[y],1);\n\t\t\tfor(int i=y;i<=n;i+=i&-i) update(rt[i],1,n,a[x],1),update(rt[i],1,n,a[y],-1);\n\t\t\tswap(a[x],a[y]);\n\t\t\tans=ans+query(1,x-1,a[x],0)+query(x+1,n,a[x],1)+query(1,y-1,a[y],0)+query(y+1,n,a[y],1);\n\t\t\tif(a[x]<a[y]) ans+=1;\n\t\t\telse if(a[x]>a[y]) ans-=1;\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n}\nsigned main(){\n\tstar::work();\n\treturn 0;\n}\n```\n\n****\n\n~~\u590d\u5236\u4e86\u4e09\u904d\u4ee3\u7801\u663e\u5f97\u5f88\u957f\u7684\u96c5\u5b50~~\n\n\u5bf9\u4e8e\u540e\u4e24\u4e2a\u9898\u66f4\u7b80\u5355\u5e76\u4e14\u66f4\u4f18\u79c0\u7684\u5206\u5757\u89e3\u6cd5\uff0c~~\u6211\u4e0d\u4f1a~~\u56e0\u4e3a\u6ca1\u6709\u666e\u9002\u6027\u6240\u4ee5\u6211\u4eec\u4e0d\u5b66\uff0c\u55ef\u55ef\u3002",
        "postTime": 1604282429,
        "uid": 280015,
        "name": "Star_Cried",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "## \u601d\u8def\u5206\u4eab\n\n\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u4ec5\u4f1a\u4ea4\u6362\u4e24\u4e2a\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5 $\\Theta(1)$ \u5730\u89e3\u51b3\u4e24\u4e2a\u503c\u7684\u4ea4\u6362\uff0c\u6545\u6211\u4eec\u552f\u4e00\u9700\u8981\u8003\u8651\u7684\u662f\u4ea4\u6362\u4e24\u4e2a\u503c\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u8bbe\u4ea4\u6362\u7684\u4e24\u4e2a\u8282\u70b9\u662f $x,y\\,\\left( x \\leqslant y \\right)$\u3002\u82e5 $x=y$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ec0\u4e48\u90fd\u4e0d\u505a\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u4e0a\u4e00\u95ee\u7684\u7b54\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u8fd9\u4e2a\u6392\u5217\u5206\u6210 $5$ \u4e2a\u90e8\u5206\uff1a$\\left[1,x\\right)$\u3001$x$\u3001$\\left(x,y\\right)$\u3001$y$\u3001$\\left(y,n\\right]$\u3002\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u6bcf\u51e0\u4e2a\u90e8\u5206\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u9996\u5148\u601d\u8003\u5bf9\u4e8e\u7b2c $1$\u3001$5$ \u4e2a\u90e8\u5206\uff0c\u4e5f\u5c31\u662f $\\left[ 1,x \\right)$ \u548c $\\left( y,n \\right]$\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u90e8\u5206\u5728\u4ea4\u6362\u524d\u540e\u672c\u8eab\u7684\u4f4d\u7f6e\u4e0d\u53d1\u751f\u53d8\u5316\uff0c\u4e0e\u5176\u4ed6\u51e0\u4e2a\u90e8\u5206\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e5f\u4e0d\u53d1\u751f\u53d8\u5316\uff0c\u6545\u7b54\u6848\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u7136\u540e\u601d\u8003\u5bf9\u4e8e\u7b2c $2$\u3001$4$ \u4e2a\u90e8\u5206\uff0c\u4e5f\u5c31\u662f $x$ \u548c $y$\uff0c\u7531\u4e8e\u8fd9\u4e24\u4e2a\u90e8\u5206\u90fd\u4ec5\u6709\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5 $\\Theta \\left( 1 \\right)$ \u5904\u7406\u6389\u3002\n\n\u6700\u540e\u7684\u51e0\u4e2a\u90e8\u5206\u662f\u6700\u96be\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u7b2c $2$\u3001$3$ \u90e8\u5206\uff0c\u4e5f\u5c31\u662f $x$ \u548c $\\left( x,y \\right)$\uff0c\u601d\u8003\u8f6c\u6362\u540e\u8fd9\u4e24\u4e2a\u90e8\u5206\u662f\u4e92\u6362\u4e86\u7684\u3002\n\n\u6211\u4eec\u8bbe $len=y-x-1$\uff0c\u4e5f\u5c31\u662f $x$ \u4e0e $y$ \u4e2d\u95f4\u7684\u5143\u7d20\u4e2a\u6570\uff0c$z_1$ \u4e3a\u6240\u6709 $i\\in\\left( x,y \\right)$ \u4e14 $a_i<a_x$ \u7684 $i$ \u7684\u4e2a\u6570\u3002\uff08\u7528\u4eba\u80fd\u542c\u61c2\u7684\u8bdd\u6765\u8bb2\uff0c\u5c31\u662f\u6c42 $x+1$ \u5230 $y-1$ \u4e2d\u6709\u591a\u5c11\u4e2a $i$ \u6ee1\u8db3 $a_i < a_x$\uff09\u3002\n\n\u6545\u8fd9\u4e24\u4e2a\u90e8\u5206\u95f4\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3a $z_1$\uff0c\u53c8\u56e0\u4e3a $a$ \u6570\u7ec4\u662f\u4e00\u4e2a\u6392\u5217\uff0c\u6240\u4ee5\u8fd9\u4e2a\u533a\u95f4\u5185\u6ee1\u8db3 $a_i > a_x$ \u7684 $i$ \u7684\u4e2a\u6570\u4e3a $len-z_1$\n\n\u76f8\u540c\u7684\uff0c\u6211\u4eec\u8bbe\u6240\u6709 $i\\in\\left( x,y \\right)$ \u4e14 $a_i<a_y$ \u7684 $i$ \u7684\u4e2a\u6570\u4e3a $z_2$\uff0c\u540c\u7406\u53ef\u5f97\uff0c\u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709\u6ee1\u8db3 $a_i > a_y$ \u7684 $i$ \u7684\u4e2a\u6570\u4e3a $len-z_2$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u539f\u6765\u6709\u7684\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u4e3a $len+z_1-z_2$\uff0c\u8fd9\u4e9b\u9006\u5e8f\u5bf9\u9700\u8981\u4ece\u7b54\u6848\u4e2d\u51cf\u6389\u3002\u800c\u65b0\u589e\u7684\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u4e3a $len-z_1+z_2$\uff0c\u9700\u8981\u52a0\u4e0a\u3002\u6545\u6700\u540e\u7b54\u6848\u4e3a\uff1a\n$$\n\\boxed{len-z_1+z_2-\\left(len+z_1-z_2 \\right)=2*\\left(z_2-z_1\\right)}\n$$\n\u6545\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u67d0\u4e2a\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\u4e86\u3002\n\n\u90a3\u600e\u4e48\u505a\u5462\uff1f\n\n\u9996\u5148\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5206\u5757\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\uff0c\u6211\u4e0d\u4f1a $lower_bound$\uff0c\u6240\u4ee5\u6211\u5c31\u7ed9\u6bcf\u4e00\u4e2a\u5757\u5f00\u4e86\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u6574\u4e2a\u7b97\u6cd5\u7b97\u4e0b\u6765\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta \\left( n\\log(n)\\sqrt n \\right)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\Theta \\left( n \\sqrt n \\right)$\uff0c\u53ef\u4ee5\u8e29\u7740\u8fc7\u53bb\u7684\u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n\uff08\u7565\u6709\u5197\u957f\uff0c\u5c0f\u5fc3\u98df\u7528\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=200100,logn=20,sqrtn=500;\nint n,s,q,nu[sqrtn][maxn],a[maxn];\nlong long ans;//\u7b54\u6848\u53ef\u80fd\u4f1a\u7206int\nint le[sqrtn],ri[sqrtn],num[maxn];\nint lowbit(int x){//\u6811\u72b6\u6570\u7ec4\u7684lowbit\n\treturn x&(-x);\n}\nint query2(int x,int y){//\u67e5\u8be2\u5728\u7b2cy\u4e2a\u5757\u4e2d\u5c0f\u4e8e\u7b49\u4e8ex\u7684\u503c\u7684\u4e2a\u6570\n\tlong long sum=0;\n\twhile(x){\n\t\tsum+=nu[y][x];\n\t\tx-=lowbit(x);\n\t}\n\treturn sum;\n}\nvoid change2(int x,int y,int i){//\u4fee\u6539\u7b2cy\u4e2a\u5757\u4e2d\u503cx\u7684\u6570\u5b57\n\twhile(x<=n){\n\t\tnu[y][x]+=i;\n\t\tx+=lowbit(x);\n\t}\n}\nint query1(int l,int r,int v){//\u8be2\u95ee\u533a\u95f4[l,r]\u4e2d\u5c0f\u4e8e\u7b49\u4e8ev\u7684\u503c\u7684\u4e2a\u6570\n\tint nl=num[l],nr=num[r];\n\tlong long sum=0;\n\tif(nl==nr){//\u540c\u4e00\u4e2a\u5757\u4e2d\u66b4\u529b\u5904\u7406\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tsum+=(a[i]<v);\n\t\t}\n\t\treturn sum;\n\t}\n\tfor(int i=l;i<=ri[nl];i++){//\u7ef4\u62a4\u4e24\u7aef\u591a\u51fa\u6765\u7684\u51e0\u4e2a\u6570\n\t\tsum+=(a[i]<v);\n\t}\n\tfor(int i=le[nr];i<=r;i++){//\u540c\u4e0a\u4e00\u4e2a\u5faa\u73af\n\t\tsum+=(a[i]<v);\n\t}\n\tfor(int i=nl+1;i<nr;i++){//\u6c42\u6bcf\u4e00\u4e2a\u5757\u4e2d\u7684\u7b54\u6848\n\t\tsum+=query2(v,i);\n\t}\n\treturn sum;\n}\nvoid change1(int l,int v,int i){//\u628a\u7b2cl\u4e2a\u4f4d\u7f6e\u6743\u503c\u4e3av\u7684\u7b54\u6848\u4fee\u6539i\n\tint nl=num[l];\n\tchange2(v,nl,i);\n\treturn;\n}\nint main(){\n\tcin>>n>>q;\n\ts=(int)sqrt(n);//\u5904\u7406\u5757\u7684\u5927\u5c0fs\n\tint tot=n/s;\n\tif(s*s<n){\n\t\ts++;\n\t}\n\tfor(int i=1;i<=s;i++){//\u521d\u59cb\u5316\u6bcf\u4e00\u4e2a\u5757\n\t\tle[i]=ri[i-1]+1;\n\t\tri[i]=min(le[i]+s-1,n);\n\t\tfor(int j=le[i];j<=ri[i];j++){\n\t\t\tnum[j]=i;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){//\u521d\u59cb\u5316\u5f00\u59cb\u7684\u6392\u5217\n\t\ta[i]=i;\n\t\tchange1(i,a[i],1);\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x==y){\n\t\t\tprintf(\"%lld\\n\",ans);//x=y\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\n\t\t\tcontinue;\n\t\t}\n\t\tif(x>y){\n\t\t\tswap(x,y);\n\t\t}\n\t\tif(a[x]<a[y]){//\u7ef4\u62a4x\u4e0ey\u6784\u6210\u7684\u9006\u5e8f\u5bf9\n\t\t\tans++;\n\t\t}\n\t\telse{\n\t\t\tans--;\n\t\t}\n\t\tif(x+1<=y-1){//\u66f4\u65b0ans\n\t\t\tans+=2*(query1(x+1,y-1,a[y])-query1(x+1,y-1,a[x]));\n\t\t}\n\t\tchange1(y,a[y],-1);//\u5f80\u4e0b5\u884c\u90fd\u662f\u4ea4\u6362x\u4e0ey\n\t\tchange1(x,a[x],-1);\n\t\tswap(a[x],a[y]);\n\t\tchange1(y,a[y],1);\n\t\tchange1(x,a[x],1);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1603290800,
        "uid": 90176,
        "name": "xixiup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/CF785E)\n\n\u600e\u4e48\u80fd\u6ca1\u6709CDQ\u5206\u6cbb\u7684\u505a\u6cd5\u5462\uff1f\u4ea4\u6362\u64cd\u4f5c\u53ef\u4ee5\u770b\u6210\uff1a$2$\u6b21\u63d2\u5165\uff0c$2$\u6b21\u5220\u9664\n\n\u8bb0\u4e94\u5143\u7ec4$<a,b,c,type,id>$\u5206\u522b\u8868\u793a\uff1a\n\n\u65f6\u95f4\u3001\u4f4d\u7f6e\u3001\u503c\u3001\u63d2\u5165/\u5220\u9664/\u3001\u5bf9\u5e94\u8be2\u95ee\u7684\u7f16\u53f7\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u5b83\u80fd\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\uff1a\n\n\u524d\u9762\uff08\u4f4d\u7f6e\uff09\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570$+$\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u4e2a\u6570\uff0c\u5f88\u663e\u7136\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u7684\u95ee\u9898\uff08\u65f6\u95f4\u4e0a\u4e5f\u8981\u6ee1\u8db3\u504f\u5e8f\uff09\n\n\u9996\u5148\u628a\u7b2c\u4e00\u7ef4\u65f6\u95f4\u6392\u5e8f\uff08\u539f\u672c\u5c31\u6709\u5e8f\u4e86\uff09\n\n\u7136\u540e\u5bf9\u4f4d\u7f6e\u8fdb\u884cCDQ\u5206\u6cbb\uff0c\u5bf9\u53f3\u534a\u90e8\u5206\u8ba1\u7b97\u5de6\u534a\u90e8\u5206\uff1a\u4f4d\u7f6e\u5728\u5176\u5de6\u8fb9\u503c\u5927\uff0c\u4f4d\u7f6e\u5728\u5176\u53f3\u8fb9\u503c\u5c0f\u7684\u65b9\u6848\n\n\u6ce8\u610f\uff1a\u5de6\u53f3\u4e24\u534a\u90e8\u5206\u5728\u4f4d\u7f6e\u4e0a\u662f\u72ec\u7acb\u6709\u5e8f\u7684\uff0c\u5728\u8ba1\u7b97\u65f6\u8fd8\u8981\u770b\u53e6\u4e00\u8fb9\u662f\u5426\u6ee1\u8db3\u4f4d\u7f6e\u4e0a\u7684\u9650\u5236\n\n\u8fd9\u6837\u5c31\u80fd\u5f97\u5230\u5f53\u524d\u533a\u95f4\uff0c\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u5bf9\u5e94\u7684\u9006\u5e8f\u5bf9\uff0c\u5982\u679c\u662f\u63d2\u5165\uff0c\u5bf9\u5e94\u7b54\u6848\u5c31\u52a0\u4e0a\uff0c\u5982\u679c\u662f\u5220\u9664\uff0c\u5c31\u526a\u6389\n\n\u6ce8\u610f\u4e0a\u9762\u7684\u8fd9\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u5176\u5b9e\u53ea\u662f\u5355\u72ec\u8003\u8651\u6bcf\u4e2a\u64cd\u4f5c\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u6700\u540e\u8fd8\u8981\u628a\u7b54\u6848\u6c42\u4e2a\u524d\u7f00\u548c\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#define ll long long\nusing namespace std;\nconst int N=2e5+10,M=5e4+10;\nint n;\nint val[N],t[N];\nll ans[M];\nstruct node\n{\n\tint a,b,c;\n\tint type,id;\n}v[N+4*M],w[N+4*M];\ninline int lowbit(int x)\n{\n\treturn x&(-x);\n}\ninline void change(int x,int c)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tt[i]+=c;\n}\ninline int query(int x)\n{\n\tint res=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\n\t\tres+=t[i];\n\treturn res;\n}\ninline void CDQ(int l,int r)\n{\n\tif(l==r) return;\n\tint mid=(l+r)/2,p,q;\n\tCDQ(l,mid),CDQ(mid+1,r);\n\tp=l,q=mid+1;\n\twhile(q<=r)//\u8ba1\u7b97\u5de6\u8fb9\u4f4d\u7f6e\u5c0f\u503c\u5927 \n\t{\n\t\twhile(p<=mid&&v[p].b<=v[q].b) change(v[p].c,v[p].type),p++;\n\t\tans[v[q].id]+=v[q].type*(query(n)-query(v[q].c)),q++;\n\t}\n\tfor(int i=l;i<p;i++) change(v[i].c,-v[i].type);\n\tp=mid,q=r;\n\twhile(q>mid)//\u8ba1\u7b97\u5de6\u8fb9\u4f4d\u7f6e\u5927\u503c\u5c0f \n\t{\n\t\twhile(p>=l&&v[p].b>=v[q].b) change(v[p].c,v[p].type),p--;\n\t\tans[v[q].id]+=v[q].type*query(v[q].c-1),q--;\n\t}\n\tfor(int i=mid;i>p;i--) change(v[i].c,-v[i].type);\n\tp=l,q=mid+1;\n\tfor(int i=l;i<=r;i++)//\u5f52\u5e76\u6392\u5e8f\n\t{\n\t\tif((p<=mid&&v[p].b<=v[q].b)||q>r) w[i]=v[p++];\n\t\telse w[i]=v[q++];\n\t} \n\tfor(int i=l;i<=r;i++) v[i]=w[i];\n}\nint main()\n{\n\tint m,tot=0,a,b;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tval[i]=i,v[++tot]=(node){tot,i,i,1,0};\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tv[++tot]=(node){tot,a,val[a],-1,i};\n\t\tv[++tot]=(node){tot,b,val[b],-1,i};\n\t\tv[++tot]=(node){tot,a,val[b],1,i};\n\t\tv[++tot]=(node){tot,b,val[a],1,i};\n\t\tswap(val[a],val[b]);\n\t}\n\tCDQ(1,tot);\n\tfor(int i=1;i<=m;i++)\n\t\tans[i]+=ans[i-1];\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1599363590,
        "uid": 81238,
        "name": "MCAdam",
        "ccfLevel": 7,
        "title": "CF785E Anton and Permutation"
    },
    {
        "content": "[$\\Large \\color{Green}{Blog}$](http://geiz-revive.github.io/)\n\n\u9898\u610f \uff1a\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$$(n\\le 200000)$\u7684\u5e8f\u5217\u8fdb\u884c$q$$(q \\le 50000)$\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662f\u4ea4\u6362\u5e8f\u5217\u4e2d\u7684\u67d0\u4e24\u4e2a\u6570\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c\uff0c\u56de\u7b54\u5f53\u524d\u5e8f\u5217\u4e2d\u6709\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\u3002\n\n\u672c\u9898\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u6240\u6c42\u5373\u4e3a\u6ee1\u8db3$pos_i>pos_j \u4e14 val_i<val_j$$\u6216$$pos_i<pos_j \u4e14 val_i>val_j$\u7684$(i,j)$\u200b\u7684\u5bf9\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u4ea4\u6362\u64cd\u4f5c\uff0c\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u5220\u9664\u548c\u4e24\u4e2a\u63d2\u5165\uff0c\u5148\u51cf\u53bb\u8d21\u732e\uff0c\u7136\u540e\u5728\u539f\u4f4d\u7f6e\u5220\u9664\uff0c\u518d\u4ea4\u6362\u4e24\u4e2a\u503c\u7684$pos$\uff0c\u4e4b\u540e\u5728\u65b0\u4f4d\u7f6e\u63d2\u5165\uff0c\u518d\u52a0\u4e0a\u73b0\u5728\u7684\u8d21\u732e\uff0c\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86$......$\u5417\uff1f\n\n\u5199\u51fa\u6765\u4f1a\u53d1\u73b0\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\uff0c\u539f\u56e0\u662f\u6211\u4eec\u5728\u8fd9\u6837\u5904\u7406\u65f6\u4f1a\u989d\u5916\u8ba1\u7b97\u4e00\u4e9b\u8d21\u732e\n\n- \u5f53\u4ea4\u6362\u540e\u8fd9\u4e24\u4e2a\u6570\u4ea7\u751f\u4e86\u4e00\u5bf9\u9006\u5e8f\u5bf9\u65f6\uff0c$ans$- -\n- \u5f53\u4ea4\u6362\u540e\u8fd9\u4e24\u4e2a\u6570\u51cf\u5c11\u4e86\u4e00\u5bf9\u9006\u5e8f\u5bf9\u65f6\uff0c$ans$++\n\n\u56e0\u4e3a\u5f53\u4ea4\u6362\u540e\u4ea7\u751f\u4e86\u4e00\u5bf9\u9006\u5e8f\u5bf9\u65f6\uff0c\u52a0\u8d21\u732e\u4f1a\u628a\u8fd9\u4e00\u5bf9\u52a0\u4e24\u904d\uff0c\u540c\u7406\u51cf\u5c11\u4e86\u4e00\u5bf9\u65f6\u51cf\u8d21\u732e\u4f1a\u51cf\u4e24\u904d\u3002\n\n\u7136\u540e\u5c31\u662f\u4e0a\u6811\u72b6\u6570\u7ec4\u5957\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u662f$\\Theta(nlog^2_n)$\n\n$\\Large Code:$\n\n```cpp\n#pragma region revive\n#include <set>\n#include <map>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <cstdio>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <unordered_map>\n#define inl inline\n#define re register int\n#define fa(x) t[x].fa\n#define son(x,y) t[x].child[y]\n#define ls(x) t[x].child[0]\n#define rs(x) t[x].child[1]\n#define ll long long\nconst int inf = 0x3f3f3f3f;\n#define lowbit(x) ((x) & (-x))\nusing namespace std;\n#ifndef _DEBUG\n#define getchar() (*(IOB.in.p++))\n#define putchar(c) (*(IOB.out.p++)=(c))\n#define io_eof() (IOB.in.p>=IOB.in.pend)\nstruct IOBUF { struct { char buff[1 << 26], *p, *pend; }in; struct { char buff[1 << 26], *p; }out; IOBUF() { in.p = in.buff; out.p = out.buff; in.pend = in.buff + fread(in.buff, 1, 1 << 26, stdin); }~IOBUF() { fwrite(out.buff, 1, out.p - out.buff, stdout); } }IOB;\n#endif\ntemplate<typename IO>\ninl void write(IO x) {\n\tif (x == 0) return (void)putchar('0');\n\tif (x < 0)putchar('-'), x = -x;\n\tstatic char buf[30];\n\tchar* p = buf;\n\twhile (x) {\n\t\t*(p++) = x % 10 + '0';\n\t\tx /= 10;\n\t}\n\twhile (p > buf)putchar(*(--p));\n}\ninl void writestr(const char *s) { while (*s != 0)putchar(*(s++)); }\ntemplate<typename IO>inl void writeln(IO x) { write(x), putchar('\\n'); }\ntemplate<typename IO>inl void writesp(IO x) { write(x), putchar(' '); }\ninl int readstr(char *s) {\n\tchar *begin = s, c = getchar();\n\twhile (c < 33 || c>127) {\n\t\tc = getchar();\n\t}\n\twhile (c >= 33 && c <= 127) {\n\t\t*(s++) = c;\n\t\tc = getchar();\n\t}\n\t*s = 0;\n\treturn s - begin;\n}\ntemplate<typename IO>\ninl IO read() {\n\tIO x = 0;\n\tregister bool w = 0;\n\tregister char c = getchar();\n\twhile (c > '9' || c < '0') {\n\t\tif (c == '-') w = 1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn w ? -x : x;\n}\n#pragma endregion\n#undef ls\n#undef rs\n#define ls(x) t[x].l\n#define rs(x) t[x].r\nint root[1000001], cnt, pos[1000001], tmpl[51], tmpr[51], cntl, cntr, n;\nstruct node {\n\tint w, l, r;\n}t[20000001];\ninl void maintain(int x) {\n\tt[x].w = t[ls(x)].w + t[rs(x)].w;\n}\ninl void change(int &k, int l, int r, int p, int w) {\n\tif (!k)k = ++cnt;\n\tif (l == r)return (void)(t[k].w += w);\n\tre mid = l + r >> 1;\n\tif (p <= mid)change(ls(k), l, mid, p, w);\n\telse change(rs(k), mid + 1, r, p, w);\n\tmaintain(k);\n}\ninl int query(int l, int r, int x, bool op) {\n\tcntl = cntr = 0;\n\tfor (re i = l - 1; i; i -= lowbit(i)) tmpl[++cntl] = root[i];\n\tfor (re i = r; i; i -= lowbit(i))tmpr[++cntr] = root[i];\n\tl = 1, r = n;\n\tre mid, ans = 0;\n\twhile (l != r) {\n\t\tmid = l + r >> 1;\n\t\tif (x <= mid) {\n\t\t\tif (op) {\n\t\t\t\tfor (re i = 1; i <= cntl; i++)ans -= t[rs(tmpl[i])].w;\n\t\t\t\tfor (re i = 1; i <= cntr; i++)ans += t[rs(tmpr[i])].w;\n\t\t\t}\n\t\t\tfor (re i = 1; i <= cntl; i++)tmpl[i] = ls(tmpl[i]);\n\t\t\tfor (re i = 1; i <= cntr; i++)tmpr[i] = ls(tmpr[i]);\n\t\t\tr = mid;\n\t\t}\n\t\telse {\n\t\t\tif (!op) {\n\t\t\t\tfor (re i = 1; i <= cntl; i++)ans -= t[ls(tmpl[i])].w;\n\t\t\t\tfor (re i = 1; i <= cntr; i++)ans += t[ls(tmpr[i])].w;\n\t\t\t}\n\t\t\tfor (re i = 1; i <= cntl; i++)tmpl[i] = rs(tmpl[i]);\n\t\t\tfor (re i = 1; i <= cntr; i++)tmpr[i] = rs(tmpr[i]);\n\t\t\tl = mid + 1;\n\t\t}\n\t}\n\treturn ans;\n}\nsigned main() {\n\tn = read<int>();\n\tre m = read<int>(), x, y;\n\tll ans = 0;\n\tfor (re i = 1; i <= n; i++) {\n\t\tpos[i] = i;\n\t\tfor (re j = i; j <= n; j += lowbit(j)) change(root[j], 1, n, i, 1);\n\t}\n\twhile (m--) {\n\t\tx = read<int>(), y = read<int>();\n\t\tif (x == y) {\n\t\t\twriteln(ans);\n\t\t\tcontinue;\n\t\t}\n\t\tans -= query(1, pos[x] - 1, x, 1) + query(pos[x] + 1, n, x, 0);\n\t\tans -= query(1, pos[y] - 1, y, 1) + query(pos[y] + 1, n, y, 0);\n\t\tfor (re i = pos[x]; i <= n; i += lowbit(i))change(root[i], 1, n, x, -1);\n\t\tfor (re i = pos[y]; i <= n; i += lowbit(i))change(root[i], 1, n, y, -1);\n\t\tswap(pos[x], pos[y]);\n\t\tfor (re i = pos[x]; i <= n; i += lowbit(i))change(root[i], 1, n, x, 1);\n\t\tfor (re i = pos[y]; i <= n; i += lowbit(i))change(root[i], 1, n, y, 1);\n\t\tans += query(1, pos[x] - 1, x, 1) + query(pos[x] + 1, n, x, 0);\n\t\tans += query(1, pos[y] - 1, y, 1) + query(pos[y] + 1, n, y, 0);\n\t\tans -= (pos[x] > pos[y] && x < y) || (pos[x] < pos[y] && x > y);\n\t\tans += (pos[x] > pos[y] && x > y) || (pos[x] < pos[y] && x < y);\n\t\twriteln(ans);\n\t}\n}\n```\n\n",
        "postTime": 1561104224,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "CF785E Anton and Permutation"
    },
    {
        "content": "## \t\t\t    \u9898\u89e3 CF785E \u3010Anton and Permutation\u3011\n\n## \u200b\u4e00.\u95f2\u8c08\n\n\u542c\u8bf4\u672c\u9898\u5206\u5757\u53ef\u4ee5\u8fc7\u800c\u4e14\u540a\u6253\u6811\u5957\u6811\uff1forz\u3002\u3002\u3002\u6211\u679c\u7136\u8fd8\u662f\u592a\u83dc\u4e86\u3002\u3002\u3002\n\n## \u4e8c.\u5206\u6790\n\n### 1.\u6c42\u9006\u5e8f\u5bf9\n\n\u7b80\u5316\u9898\u76ee:\u7ed9\u51fa\u5e8f\u52171-n\uff0c\u4ee5\u53cam\u4e2a\u64cd\u4f5c\uff0c\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u6c42\u5f53\u524d\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\n\n\u5982\u679c,\u4ea4\u6362\u7684\u4e24\u4e2a\u6570\u76f8\u540c\uff0c\u6211\u4eec\u76f4\u63a5\u8f93\u51fa\u5f53\u524d\u7b54\u6848\u5373\u53ef\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u60c5\u51b5\u5462\uff1f\n\n**\u5047\u8bbe\uff0c\u6211\u4eec\u77e5\u9053\u4ea4\u6362\u524d\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u90a3\u4e48\u65b0\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u4fbf\u7b49\u4e8e\u539f\u9006\u5e8f\u5bf9\u6570\u52a0\u4e0a\u4e24\u4e2a\u6570\u4ea4\u6362\u540e\u7684\u8d21\u732e**\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u4e24\u4e2a\u6570\u4ea4\u6362\u7684\u8d21\u732e\n\n**\u6211\u4eec\u8bbe\u4e24\u4e2a\u6570\u5206\u522b\u4e3ax\u548cy,\u6211\u4eec\u518d\u8bbefind_max(l,r,x)\u8868\u793a\u533a\u95f4l->r\u5185\u6bd4x\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0cfind_min(l,r,x)\u540c\u7406\uff0c\u518d\u8bbea[x]\u8868\u793ax\u7684\u4f4d\u7f6e**\n\n\u90a3\u4e48\u4ea4\u6362\u540e\uff0c\u4e0ex\uff0cy\u6709\u5173\u7684\u9006\u5e8f\u5bf9\u4e3a(\u6ce8:\u8fd9\u91cca[x]\u4e0ea[y]\u5c1a\u672a\u4ea4\u6362,\u4e14\u4ee5\u4e0b\u4e0d\u8003\u8651x\u4e0ey\u5f62\u6210\u7684\u9006\u5e8f\u5bf9):\n\nfind_max(1,a[y]-1,x)+find_min(a[y]+1,n,x)+find_max(1,a[x]-1,y)+find_min(a[x]+1,n,y)\n\n\u90a3\u4e48\u6211\u4eec\u52a0\u4e0a\u8fd9\u4e2a\u7b54\u6848\u5c31\u597d\u4e86\u5417\uff1f\n\n\u4e0d\u5bf9\uff01\u601d\u8003\u4e0b\uff0c\u4ea4\u6362\u524d\uff0c\u53ef\u80fd\u6709\u4e0ex,y\u6709\u5173\u7684\u9006\u5e8f\u5bf9\uff0c**\u5982\u679c\u6211\u4eec\u76f4\u63a5\u52a0\u4e0a\u5f53\u524d\u7684\u9006\u5e8f\u5bf9\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u80fd\u91cd\u590d\u8ba1\u7b97\u4e86\uff01**\u6240\u4ee5\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u628a\u7b54\u6848\u51cf\u53bb\u4ea4\u6362\u524d\u7684\u4e0ex,y\u6709\u5173\u7684\u9006\u5e8f\u5bf9\u6570,\u5373:\n\nfind_max(1,a[x]-1,x)+find_min(a[x]+1,n,x)+find_max(1,a[y]-1,y)+find_min(a[y]+1,n,y)\n\n\u7136\u540e\uff0c\u6211\u4eec\u518d\u6765\u8003\u8651x,y\u5f62\u6210\u7684\u9006\u5e8f\u5bf9:\n\n\u4ea4\u6362\u540e\uff0cx\u4e0ey\u6709\u4e24\u4e2a\u60c5\u51b5:\n\n#### 1.x\u4e0ey\u5f62\u6210\u4e00\u4e2a\u9006\u5e8f\u5bf9:\n\n\u6211\u4eec\u76f4\u63a5\u5c06\u7b54\u6848\u52a0\u4e00\u5373\u53ef\n\n#### 2.x\u4e0ey\u4e0d\u5f62\u6210\u9006\u5e8f\u5bf9\uff0c\u539f\u9006\u5e8f\u5bf9\u6d88\u5931:\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u662f\u5426\u9700\u8981\u5c06\u7b54\u6848\u51cf\u4e00\u5462\uff1f\n\n\u4e0d\u662f\u7684\uff0c\u56e0\u4e3a\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\uff0c\u4e0d\u662f\u51cf\u53bb\u4e86\u4e0ex,y\u6709\u5173\u7684\u9006\u5e8f\u5bf9\u6570\u561b\uff1f**\u8fd9\u65f6\uff0c\u6211\u4eec\u5728x\u91cc\u51cf\u53bb\u4e86\u9006\u5e8f\u5bf9(x,y)\uff0c\u53c8\u5728y\u91cc\u51cf\u53bb\u4e86\u9006\u5e8f\u5bf9(x,y)\uff0c\u800c\u6211\u4eec\u672c\u6765\u53ea\u9700\u8981\u51cf\u4e00\u6b21\u7684\u5374\u51cf\u4e86\u4e24\u6b21\uff01\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5c06\u7b54\u6848\u52a0\u4e00\uff01**\n\n\u6240\u4ee5\uff0c\u4e24\u79cd\u60c5\u51b5\u7684\u5904\u7406\u65b9\u5f0f\u662f\u76f8\u540c\u7684\uff01\n\n### 2.\u6c42\u51fd\u6570find_min\u3001find_max\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u6c42\u9006\u5e8f\u5bf9\u4e86\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u77e5\u9053\u5982\u4f55\u6c42find_min\u3001find_max\u4e24\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u9996\u5148\u8003\u8651\u4f18\u79c0\u7684\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u800c\uff0c\u5168\u5c40\u7ebf\u6bb5\u6811\u5e76\u4e0d\u64c5\u957f\u533a\u95f4\uff0c\u4e8e\u662f\u6211\u4eec\u542f\u7528\u5b83\u7684\u5347\u7ea7\u7248:\u4e3b\u5e2d\u6811\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u6c42\u51fa\u6765\u4e86\uff0c\u4e0d\u8fc7\uff0c\u6211\u4eec\u8fd9\u65f6\uff0c\u53d1\u73b0\uff0c\u6211\u4eec\u8fd8\u6709\u4ea4\u6362\u64cd\u4f5c\u6ca1\u7528\uff0c\u5982\u679c\uff0c\u6211\u4eec\u5199\u666e\u901a\u7684\u4e3b\u5e2d\u6811\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5bf9a[x]>a[y]\u7684\u6bcf\u4e00\u4e2a\u4e3b\u5e2d\u6811\u90fd\u4fee\u6539\u4e00\u904d\uff0c\u8fd9\u65f6\uff0c\u6211\u4eec\u518d\u7ed9\u5b83\u5347\u7ea7\u4e00\u4e0b:\u6211\u4eec\u7528\u5e26\u4fee\u4e3b\u5e2d\u6811\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff01\n\n\u81f3\u4e8e\u4ea4\u6362\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5982\u6b64\u7406\u89e3:\n\n**\u5c06a[x]\u4f4d\u7f6e\u4e0a\u7684x\u4fee\u6539\u6210y\uff0c\u5c06a[y]\u4f4d\u7f6e\u4e0a\u7684y\u4fee\u6539\u6210x,\u4e4b\u540e\u6211\u4eec\u518d\u628aa[x]\u4e0ea[y]\u4ea4\u6362\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff01**\n\n\u590d\u6742\u5ea6\uff1aO(mloglogn*\u5de8\u5927\u5e38\u6570(\u96fe))\n\n## \u4e09.\u4f18\u5316\n\n\u8fd9\u9898\u751a\u4e3a\u6bd2\u7624\u7684\u4e00\u70b9\u5728\u4e8e:\u5361\u7a7a\u95f4\n\n\u7ecf\u8fc7\u8bd5\u9a8c(\u7c7b\u4f3c\u65b9\u6cd5)\uff0c\u5f00long long\u7684\u76f4\u63a5\u51c9\n\n\u5f00int 2e7\u4f1aMLE,\u5f001e7\u4f1aRe\n\n\u4e8e\u662f\u6211~~\u6124\u6012\u4e4b\u4e0b~~\uff0c\u5199\u4e86\u4e00\u4e2a\u5783\u573e\u56de\u6536\uff0c\u7136\u540e\u7a7a\u95f4\u5f00\u62101e7+5e6\u624d\u8fc7\u7684QwQ\n\n**\u6ce8\u610f:\u5199\u5783\u573e\u56de\u6536\u65f6\uff0c\u4e0d\u8981\u628aroot[i]\u56de\u6536\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u9700\u8981\u67e5\u8be2\u503c\u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002\u3002\u3002**\n\n## \u56db.\u4ee3\u7801\n\n```c++\n//#pragma GCC optimize()//\u624b\u52a8Ox\u4f18\u5316\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e7+5e6;\nstruct node{\n    int val,lson,rson;\n}t[N];\nint n,m;\nint a[N];\nint siz,root[N];\nint Now[N],Pas[N],L,R;\nint sta[N],top;\ninline int lowbit(int x){\n    return x&-x;\n}\ninline int news(){\n    if(top){\n        return sta[top--];\n    }\n    return ++siz;\n}\ninline void delt(int x){\n    sta[++top]=x;\n}\n//\u5783\u573e\u56de\u6536 \ninline void mest(int x){\n    t[x].lson=t[x].rson=t[x].val=0;\n}\ninline void insert(int &now,int l,int r,int x){\n    if(!now){\n        now=news();\n        mest(now);\n    }\n    t[now].val++;\n    if(l==r){\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(x<=mid){\n        insert(t[now].lson,l,mid,x);\n    }else{\n        insert(t[now].rson,mid+1,r,x);\n    }\n}\ninline int find_Max(int l,int r,int lc,int rc){\n    int sum=0,tot=0;\n    for(int i=1;i<=L;++i){\n        sum-=t[Pas[i]].val;\n        tot-=t[t[Pas[i]].rson].val;\n    }\n    for(int i=1;i<=R;++i){\n        sum+=t[Now[i]].val;\n        tot+=t[t[Now[i]].rson].val;\n    }\n    if(lc<=l&&r<=rc){\n        return sum;\n    }\n    int mid=(l+r)>>1;\n    if(rc<=mid){\n        for(int i=1;i<=L;++i){\n            Pas[i]=t[Pas[i]].lson;\n        }\n        for(int i=1;i<=R;++i){\n            Now[i]=t[Now[i]].lson;\n        }\n        return find_Max(l,mid,lc,rc);\n    }\n    if(lc>mid){\n        for(int i=1;i<=L;++i){\n            Pas[i]=t[Pas[i]].rson;\n        }\n        for(int i=1;i<=R;++i){\n            Now[i]=t[Now[i]].rson;\n        }\n        return find_Max(mid+1,r,lc,rc);\n    }\n    for(int i=1;i<=L;++i){\n        Pas[i]=t[Pas[i]].lson;\n    }\n    for(int i=1;i<=R;++i){\n        Now[i]=t[Now[i]].lson;\n    }\n    return find_Max(l,mid,lc,rc)+tot;\n}\ninline int find_Min(int l,int r,int lc,int rc){\n    int sum=0,tot=0;\n    for(int i=1;i<=L;++i){\n        sum-=t[Pas[i]].val;\n        tot-=t[t[Pas[i]].lson].val;\n    }\n    for(int i=1;i<=R;++i){\n        sum+=t[Now[i]].val;\n        tot+=t[t[Now[i]].lson].val;\n    }\n    if(lc<=l&&r<=rc){\n        return sum;\n    }\n    int mid=(l+r)>>1;\n    if(rc<=mid){\n        for(int i=1;i<=L;++i){\n            Pas[i]=t[Pas[i]].lson;\n        }\n        for(int i=1;i<=R;++i){\n            Now[i]=t[Now[i]].lson;\n        }\n        return find_Min(l,mid,lc,rc);\n    }\n    if(lc>mid){\n        for(int i=1;i<=L;++i){\n            Pas[i]=t[Pas[i]].rson;\n        }\n        for(int i=1;i<=R;++i){\n            Now[i]=t[Now[i]].rson;\n        }\n        return find_Min(mid+1,r,lc,rc);\n    }\n    for(int i=1;i<=L;++i){\n        Pas[i]=t[Pas[i]].rson;\n    }\n    for(int i=1;i<=R;++i){\n        Now[i]=t[Now[i]].rson;\n    }\n    return find_Min(mid+1,r,lc,rc)+tot;\n}\ninline int find_min(int l,int r,int x){\n    if(!r){\n        return 0;\n    } \n    if(x==1){\n        return 0;\n    } \n    int now=l-1;\n    L=R=0;\n    while(now){\n        Pas[++L]=root[now];\n        now-=lowbit(now);\n    }\n    now=r;\n    while(now){\n        Now[++R]=root[now];\n        now-=lowbit(now);\n    }\n    return find_Min(1,n,1,x-1);\n}\ninline int find_max(int l,int r,int x){//\u5bfb\u627el-r\u533a\u95f4\u5185\uff0c\u6bd4x\u5927\u7684\u6570\n    if(l==n+1){\n        return 0;\n    }\n    if(x==n){\n        return 0;\n    }\n    int now=l-1;\n    L=R=0;\n    while(now){\n        Pas[++L]=root[now];\n        now-=lowbit(now);\n    }\n    now=r;\n    while(now){\n        Now[++R]=root[now];\n        now-=lowbit(now);\n    }\n    return find_Max(1,n,x+1,n);\n}\ninline void delted(int now,int l,int r,int x){\n    t[now].val--;\n    if(l==r){\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(x<=mid){\n        delted(t[now].lson,l,mid,x);\n        if(!t[t[now].lson].val){\n            delt(t[now].lson);\n            t[now].lson=0;\n        }\n        return;\n    }else{\n        delted(t[now].rson,mid+1,r,x);\n        if(!t[t[now].rson].val){\n            delt(t[now].rson);\n            t[now].rson=0;\n        }\n    }\n}\ninline void change(int t,int x,int y){//\u5c06t\u4f4d\u7f6e\u7684x\u4fee\u6539\u4e3ay \n    int now=t;\n    while(now<=n){\n        delted(root[now],1,n,x);\n        insert(root[now],1,n,y);\n        now+=lowbit(now);\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i){\n        a[i]=i;\n        int now=i;\n        while(now<=n){\n            insert(root[now],1,n,i);\n            now+=lowbit(now);\n        }\n    }\n    long long ans=0;\n    while(m--){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        if(x>y){\n            swap(x,y);\n        }\n        if(x==y){\n            printf(\"%lld\\n\",ans);\n            continue;\n        }\n        ans-=(find_max(1,a[x]-1,x)+find_min(a[x]+1,n,x));\n        ans-=(find_max(1,a[y]-1,y)+find_min(a[y]+1,n,y));\n        ans+=(find_max(1,a[y]-1,x)+find_min(a[y]+1,n,x));\n        ans+=(find_max(1,a[x]-1,y)+find_min(a[x]+1,n,y));\n        ans++;\n        change(a[x],x,y),change(a[y],y,x);\n        swap(a[x],a[y]);\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1550731509,
        "uid": 81847,
        "name": "ThinkofBlank",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10329505.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u6709\u4e00\u4e32\u6570\u4e3a$1\\sim n(n\\leqslant2\\times10^5)$\uff0c$m(m\\leqslant5\\times10^4)$\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u95ee\u4ea4\u6362\u4f4d\u7f6e\u4e3a$l,r$\u7684\u4e24\u4e2a\u6570\u540e\u6570\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n**\u9898\u89e3\uff1a**\u53d1\u73b0\u4ea4\u6362\u4f4d\u7f6e\u4e3a$l,r$\u7684\u6570\u540e\uff0c\u9006\u5e8f\u5bf9\u7684\u53d8\u5316\u53ea\u548c\u533a\u95f4$(l,r)$\u5185\u7684\u6570\u4e0e$s_l,s_r$\u7684\u5927\u5c0f\u5173\u7cfb\u6709\u5173\uff0c\u8bbe$S_i$\u8868\u793a\u533a\u95f4$(l,r)$\u4e2d\u6bd4$s_i$\u5c0f\u7684\u6570\uff0c$B_i$\u8868\u793a\u533a\u95f4$(l,r)$\u4e2d\u6bd4$s_i$\u5927\u7684\u6570\uff0c$ans'=ans+S_r-B_r-S_l+B_l$\u3002\u8bbe$len=r-l-1$\uff0c$ans'=ans+S_r-(len-S_r)-S_l+(len-S_l)=ans+2(S_r-S_l)$\u3002\n\n\u8003\u8651\u5206\u5757\uff0c\u8bbe\u5757\u5927\u5c0f\u4e3a$S$\uff0c\u5728\u5757\u5185\u6392\u5e8f\uff0c\u5728\u8fb9\u89d2\u5904\u66b4\u529b\uff0c\u5728\u6574\u5757\u5904\u4e8c\u5206\u67e5\u627e\u4f4d\u7f6e\uff0c\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u662f$O(2S+\\dfrac n S\\log_2S)$\uff1b\u4fee\u6539\u4e3a\u4e8c\u5206\u5904\u4f4d\u7f6e\u76f4\u63a5\u63d2\u5165\u6216\u5220\u9664\uff0c\u590d\u6742\u5ea6$O(4S)$\uff0c\u6240\u4ee5\u5f53$S$\u7565\u5927\u4e8e$\\sqrt n$\u65f6\u6700\u4f18\u3002\uff08\u53cd\u6b63\u6211\u61d2\u5f97\u7b97\uff0c\u968f\u4fbf\u731c\u4e00\u4e2a\uff09\n\n\n\n**C++ Code\uff1a**\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <vector>\n#define maxn 200010\nconst int BSZ = 1000, BNUM = maxn / BSZ + 10;\n\nint n, m;\nlong long ans;\nint L[BNUM], R[BNUM], bel[maxn], s[maxn];\nstd::vector<int> V[BNUM];\n\nint query(int l, int r, int x) {\n\tif (l > r) return 0;\n\tconst int lb = bel[l], rb = bel[r];\n\tint res = 0;\n\tif (lb == rb) for (int i = l; i <= r; ++i) res += s[i] < x;\n\telse {\n\t\tfor (int i = l; i <= R[lb]; ++i) res += s[i] < x;\n\t\tfor (int i = lb + 1; i < rb; ++i) res += std::upper_bound(V[i].begin(), V[i].end(), x) - V[i].begin();\n\t\tfor (int i = L[rb]; i <= r; ++i) res += s[i] < x;\n\t}\n\treturn res;\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; ++i) V[bel[i] = i / BSZ + 1].push_back(s[i] = i);\n\tconst int B = bel[n];\n\tfor (int i = 1; i <= B; ++i) {\n\t\tL[i] = (i - 1) * BSZ;\n\t\tR[i] = L[i] + BSZ - 1;\n\t}\n\tL[1] = 1, R[B] = n;\n\twhile (m --> 0) {\n\t\tint l, r;\n\t\tscanf(\"%d%d\", &l, &r);\n\t\tif (l == r) {\n\t\t\tprintf(\"%lld\\n\", ans);\n\t\t\tcontinue;\n\t\t}\n\t\tif (l > r) std::swap(l, r);\n\t\tconst int lb = bel[l], rb = bel[r];\n\n\t\tans += (query(l + 1, r - 1, s[r]) - query(l + 1, r - 1, s[l])) * 2;\n\t\tans += (s[l] < s[r]) ? 1 : -1;\n\t\tprintf(\"%lld\\n\", ans);\n\n\t\tif (lb != rb) {\n\t\t\tV[lb].erase(std::lower_bound(V[lb].begin(), V[lb].end(), s[l]));\n\t\t\tV[lb].insert(std::upper_bound(V[lb].begin(), V[lb].end(), s[r]), s[r]);\n\t\t\tV[rb].erase(std::lower_bound(V[rb].begin(), V[rb].end(), s[r]));\n\t\t\tV[rb].insert(std::upper_bound(V[rb].begin(), V[rb].end(), s[l]), s[l]);\n\t\t}\n\t\tstd::swap(s[l], s[r]);\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n",
        "postTime": 1548646337,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u5206\u5757\u9898\uff0c\u9898\u76ee\u8981\u6c42\u7684\u662f\u9006\u5e8f\u5bf9\u6570\u91cf\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4ea4\u6362\u4f4d\u7f6e$l,r(l \\le r)$\u7684\u64cd\u4f5c,\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u533a\u95f4$(L,R)$\u4e2d\u5927\u4e8e\u4e0e\u5c0f\u4e8e\u4e24\u4e2a\u7aef\u70b9\u7684\u6570\u5b57\u4e2a\u6570\u5373\u53ef,\u53ef\u4ee5\u8003\u8651\u5c06\u6bcf\u4e2a\u5757\u4e2d\u8fdb\u884c\u6392\u5e8f\u518d\u4e8c\u5206\u8fbe\u5230\u5feb\u901f\u67e5\u8be2,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\sqrt{n}\\log{n})$\n\n\u5177\u4f53\u89c1\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int N = 2e5 + 500;\n\nint len, num[N], block[N], gt[N], L[N], R[N];\nlong long ans = 0;\n\nlong long work(int x, int k)\n{\n    int l = L[k], r = R[k], res = R[k] + 1;\n    while (l <= r)\n    {\n        int mid = (l + r) >> 1;\n        if (block[mid] > x)\n            res = mid, r = mid - 1;\n        else \n            l = mid + 1;\n    }\n    return R[k] - res + 1;\n}\n\nvoid update(int l, int r)\n{\n    if (gt[l] == gt[r])//\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\n    {\n        for (int i = l + 1; i < r; i++)\n        {\n            if (num[r] > num[i])\n                ans++;\n            else if (num[r] < num[i])\n                ans--;\n            if (num[l] < num[i])\n                ans++;\n            else if (num[l] > num[i])\n                ans--;\n        }\n        if (num[l] > num[r])\n            ans--;\n        else if (num[l] < num[r])\n            ans++;\n        swap(num[l], num[r]);\n    }\n    else \n    {\n        int i = l, j = r;\n        i++, j--;\n        while (gt[i] == gt[l])\n        {\n            if (num[r] > num[i])\n                ans++;\n            else if (num[r] < num[i])\n                ans--;\n            if (num[l] < num[i])\n                ans++;\n            else if (num[l] > num[i])\n                ans--;\n            i++;\n        }\n        while (gt[j] == gt[r])\n        {\n            if (num[r] > num[j])\n                ans++;\n            else if (num[r] < num[j])\n                ans--;\n            if (num[l] < num[j])\n                ans++;\n            else if (num[l] > num[j])\n                ans--;\n            j--;\n        }\n        for (int k = gt[i]; k <= gt[j]; k++)\n        {\n            ans += work(num[l], k);\n            ans -= len - work(num[l], k);\n            ans += len - work(num[r], k);\n            ans -= work(num[r], k);\n        }//\u4e8c\u5206\u627e\u4e2a\u6570\n        if (num[l] > num[r])\n            ans--;\n        else if (num[l] < num[r])\n            ans++;\n        swap(num[l], num[r]);\n        for (int k = L[gt[r]]; k <= R[gt[r]]; k++)\n            block[k] = num[k];\n        for (int k = L[gt[l]]; k <= R[gt[l]]; k++)\n            block[k] = num[k];\n        sort(block + L[gt[l]], block + R[gt[l]] + 1);\n        sort(block + L[gt[r]], block + R[gt[r]] + 1);//\u66f4\u884c\u5757\u4e2d\u7684\u6570\u503c\n    }\n}\n\nint main()\n{\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    len = sqrt(n);\n    for (int i = 1; i <= n; i++)\n        gt[i] = (i - 1) / len + 1, block[i] = i, num[i] = i;\n    for (int i = 1; i <= gt[n]; i++)\n    {\n        L[i] = (i - 1) * len + 1, R[i] = i * len;\n        sort(block + L[i], block + R[i] + 1);\n    }//\u9884\u5904\u7406\u533a\u95f4\u7aef\u70b9\n    while (k--)\n    {\n        int l, r;\n        scanf(\"%d%d\", &l, &r);\n        if (l > r)\n            swap(l, r);\n        update(l, r);//\u8fdb\u884c\u66f4\u65b0\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1612181651,
        "uid": 277863,
        "name": "BzhH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    },
    {
        "content": "\u8003\u8651\u5206\u5757\n\n\u4f7f\u7528vector\uff0c\u5728\u8fb9\u89d2\u5904\u66b4\u529b\u6c42\uff0c\u5757\u4e2d\u66b4\u529b\n\n\u5355\u4e2a\u5757\u4e00\u822c\u6765\u8bf4\u5c31\u5f00$\\sqrt {N}$\u5c31\u597d\u4e86\n\ncode:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 200005;\ntypedef long long ll;\n#define fd(a, b) find(f[a].begin(), f[a].end(), b) - f[a].begin()\n#define lb(a, b) lower_bound(f[a].begin(), f[a].end(), b)\n#define ub(a, b) upper_bound(f[a].begin(), f[a].end(), b)\n#define st(a) sort(f[a].begin(), f[a].end())\nint N, B, Q;\nint a[maxn];\nll tot;\nvector<int> f[maxn];\nvoid init() {\n    B = sqrt(N);\n    for (int i = 1; i <= N; i++) {\n        a[i] = i;\n        f[i / B].push_back(i);\n    }\n}\nvoid change(int &fx, int &fy, int &x, int &y, int &k, int &l, int &r) { //\u4fee\u6539\n    x = a[l], y = a[r];\n    fx = l / B, fy = r / B;\n    k = fd(fx, x);\n    f[fx][k] = y;\n    st(fx);\n    k = fd(fy, y);\n    f[fy][k] = x;\n    st(fy);\n}\nll query(int l, int r) {\n    if (l == r)\n        return 0;\n    int fx, fy, x, y, k;\n    change(fx, fy, x, y, k, l, r);\n    int res = 0, ch = 1;\n    if (x > y) { // x>y\uff0c\u76f8\u5f53\u4e8e\u8003\u8651x<y\u4e4b\u540e\u53d6\u76f8\u53cd\u6570\n        ch = -1; //\u4e58\u4e0a-1\u76f8\u5f53\u4e8e\u53d6\u76f8\u53cd\u6570\n        swap(x, y);\n    }\n    if (fx != fy) {\n        for (int i = l + 1; i < (fx + 1) * B; i++)\n            if (x < a[i] && a[i] < y)\n                res++;\n        for (int id = fx + 1; id < fy; id++)\n            res += ub(id, y) - lb(id, x);\n        for (int i = fy * B; i < r; i++)\n            if (x < a[i] && a[i] < y)\n                res++;\n    } else {\n        for (int i = l + 1; i <= r - 1; i++) {\n            if (x < a[i] && a[i] < y)\n                res++;\n        }\n    }\n    swap(a[l], a[r]);\n    return (2 * res + 1) * ch;\n}\nint main() {\n    ios::sync_with_stdio(false);\n    cin >> N >> Q;\n    init();\n    int l, r;\n    ll ans = 0;\n    while (Q--) {\n        cin >> l >> r;\n        if (l > r)\n            swap(l, r);\n        ans += query(l, r); // ans\u201c\u589e\u52a0\u201d\u4e86\u591a\u5c11\u5bf9\n        cout << ans << endl;\n    }\n}\n```",
        "postTime": 1592645815,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF785E \u3010Anton and Permutation\u3011"
    }
]