[
    {
        "content": "## \u672c\u9898\u601d\u8def\uff1a\n1. \u5224\u65ad\u6240\u6709\u7269\u4f53\u662f\u5426\u8fd0\u52a8\u65b9\u5411\u5747\u4e00\u81f4\uff0c\u6ce8\u610f\u9898\u76ee\u4e2d\u7684\u201c**\u4ee5\u5750\u6807\u9012\u589e\u987a\u5e8f\u5217\u51fa**\u201d\uff0c\u5177\u4f53$\\ O(n)$\u7684\u5224\u65ad\u65b9\u6cd5\u89c1\u4ee3\u7801\u3002\n2. \u5f88\u663e\u7136\uff0c\u6b64\u9898\u6b63\u89e3\u662f\u4e8c\u5206\u7b54\u6848\uff0c\u4e0b\u754c\u4e3a$\\ 0$\uff0c\u4e0a\u754c\u4e3a$\\ 1e9$\u3002\u5faa\u73af\u7684\u6761\u4ef6\u4e3a`fabs(r-l)>1e-10`\uff08\u7b54\u6848\u8bef\u5dee\u5728$\\ 1e-9$\uff09\u3002\n3. \u6bcf\u6b21\u4e8c\u5206\u5f97\u5230\u4e00\u4e2a**\u65f6\u95f4**\uff0c\u7ef4\u62a4\u5411\u53f3\u79fb\u52a8\u7684\u7269\u4f53\u7684\u6700\u5927\u6700\u7ec8\u5750\u6807$\\ rr$\u3002\u5982\u679c\u9047\u5230\u5411\u5de6\u8fd0\u52a8\u7684\u7269\u4f53\uff0c\u90a3\u4e48\u8ba1\u7b97\u5b83\u7684\u6700\u7ec8\u5750\u6807$\\ ll$\u3002\u5982\u679c$\\ rr>ll$\uff0c\u8bf4\u660e\u6709\u4e24\u8005\u4f1a\u76f8\u9047\uff0c\u66f4\u65b0\u7b54\u6848\u4e0a\u754c\u3002\u5426\u5219\u610f\u5473\u7740\u6b64\u65f6\u7684\u65f6\u95f4\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u66f4\u65b0\u7b54\u6848\u4e0b\u754c\u3002\n\n--------\n\n### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n$PS$\uff1a\u611f\u8c22 @\u6d6a\u6d6a\u66f4\u5065\u5eb70106 \u7684\u601d\u8def\u548c\u4ee3\u7801\u53c2\u8003\n\n```\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=5*1e5+10;\nint n,x[MAXN],v[MAXN];\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&x[i],&v[i]);\n\tbool flg=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(v[i]>0)\n\t\t{\n\t\t\tfor(int j=i+1;j<=n;j++)\n\t\t\t\tif(v[j]<0){flg=1;break;}\n\t\t\tbreak;\n\t\t}\n\tif(!flg)  return puts(\"-1\"),0;\n    \n\tdouble l=0,r=1e9;\n\twhile(fabs(r-l)>1e-10)\n\t{\n\t\tdouble mid=(l+r)/2;\n\t\tdouble ll=0,rr=-1e30;\n\t\tbool flg=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(v[i]>0)  rr=max(rr,x[i]+v[i]*mid);\n\t\t\telse{\n\t\t\t\t//\u8fd9\u6837\u5199\u662f\u9519\u7684 -> ll=min(ll,x[i]+v[i]*mid);\n                //\u56e0\u4e3a\u8fd9\u6837\u53ef\u80fd\u4f1a\u4f7f\u7ed3\u679c\u53d8\u5c0f\uff0c\u6bcf\u6b21\u5224\u65ad\u7684\u5e94\u8be5\u662f\u5f53\u524d\u7269\u4f53\u7684\u6700\u7ec8\u5750\u6807\u3002\n\t\t\t\tll=x[i]+v[i]*mid;\n\t\t\t\tif(rr>ll)\n\t\t\t\t{\n\t\t\t\t\tr=mid;\n\t\t\t\t\tflg=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!flg)  l=mid;\n\t}\n\tprintf(\"%.20lf\",r);\n\treturn 0;\n}\n```",
        "postTime": 1524147220,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF24E \u3010Berland collider\u3011"
    },
    {
        "content": "### \u5206\u6790\n\n\u5c06\u65f6\u95f4\u4e8c\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e8c\u5206\u5f97\u5230\u7684\u65f6\u95f4\uff0c\u4ece\u5de6\u81f3\u53f3\u641c\u6bcf\u4e00\u4e2a\u5b50\u5f39\uff0c\u5982\u679c\u662f\u4ece\u5de6\u5f80\u53f3\u98de\u7684\uff0c\u5c31\u8ba1\u7b97\u51fa\u5b83\u5728\u8fd9\u4e2a\u65f6\u523b\u7684\u5750\u6807\uff0c\u53d6\u6240\u6709\u73b0\u5750\u6807\u7684\u6700\u5927\u503c\uff1b\u5982\u679c\u662f\u4ece\u53f3\u5f80\u5de6\u98de\u7684\uff0c\u5c31\u770b\u76ee\u524d\u6709\u6ca1\u6709\u4ece\u5de6\u5f80\u53f3\u98de\u7684\u5b50\u5f39\u6b64\u524d\u80fd\u548c\u5b83\u76f8\u9047\uff0c\u4e5f\u5c31\u662f\u6bd4\u8f83\u5b83\u7684\u73b0\u5750\u6807\u662f\u5426\u5c0f\u4e8e\u4ece\u5de6\u5f80\u53f3\u98de\u5b50\u5f39\u7684\u73b0\u5750\u6807\u6700\u5927\u503c\u3002\u5982\u679c\u80fd\u76f8\u9047\uff0c\u5c31\u66f4\u65b0\u7b54\u6848\uff0c\u5426\u5219\u7ee7\u7eed\u4e8c\u5206\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=5e5+7;\ninline void qread(){}template<class T1,class ...T2>\ninline void qread(T1 &a,T2&... b)\n{\n\tregister T1 x=0;register bool f=false;char ch=getchar();\n\twhile(ch<'0') f|=(ch=='-'),ch=getchar();\n\twhile(ch>='0') x=(x*10)+(ch^48),ch=getchar();\n\tx=(f?-x:x);a=x;qread(b...);\n}\ntemplate<class T>inline T qmax(const T &x,const T &y){return x>y?x:y;}\ntemplate<class T>inline T qmin(const T &x,const T &y){return x<y?x:y;}\nlong long n;\nstruct node\n{\n\tlong double x,v;\n\tnode(){;}\n\tnode(long double _x,long double _v):x(_x),v(_v){}\n\tbool operator < (const node &o)const{return x<o.x;}\n}a[MAXN];\nbool check(long double mid)\n{\n\tlong double mx=-1e30;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(a[i].v>0) mx=qmax(mx,a[i].x+a[i].v*mid);\n\t\telse\n\t\t{\n\t\t\tlong double t=(a[i].x+a[i].v*mid);\n\t\t\tif(t<mx) return true;\n\t\t}\n\t}\n\treturn false;\n}\nlong double ans;\nsigned main()\n{\n\tqread(n);int i,j;\n\tfor(i=0;i<n;i++) qread(a[i].x,a[i].v);\n\tlong double l=0,r=1e9+7;\n\twhile(r-l>=1e-10)\n\t{\n\t\tlong double mid=(l+r)/2;\n\t\tif(check(mid)) ans=r=mid;\n\t\telse l=mid;\n\t}\n\tif(r==1e9+7) ans=-1;\n\tprintf(\"%.10Lf\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1636978313,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF24E Berland collider \u9898\u89e3"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\uff0c\u8981\u5224\u65ad\u662f\u5426\u6709\u76f8\u5411\u800c\u884c\u4e14\u53ef\u80fd\u76f8\u9047\u7684\u5b50\u5f39\uff0c\u8fd9\u4e2a\u76f4\u63a5\u627e\u51fa\u6700\u5de6\u8fb9\u7684\u5411\u53f3\u7684\u5b50\u5f39\u548c\u6700\u53f3\u8fb9\u7684\u5411\u5de6\u7684\u5b50\u5f39\u7684\u4f4d\u7f6e\u5224\u65ad\u5c31\u884c\u4e86\u3002\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u4e8c\u5206\u51fa\u4e00\u4e2a\u65f6\u95f4\u7136\u540e\u8f6c\u5316\u4e3a\u53ef\u884c\u6027\u95ee\u9898\uff0c\u5373\u5bf9\u4e8e\u8fd9\u4e00\u4e2a\u65f6\u95f4\u5224\u65ad\u51fa\u662f\u5426\u6709\u533a\u95f4\u76f8\u4ea4\u3002\n\n\u533a\u95f4\u76f8\u4ea4\u53ef\u4ee5\u4f7f\u7528 $O(n)$ \u7684\u5224\u65ad\u65b9\u6cd5\uff0c\u4ece\u5de6\u5411\u53f3\u626b\u63cf\u6240\u6709\u7684\u533a\u95f4\uff0c\u7ef4\u62a4\u6700\u53f3\u8fb9\u7684\u5411\u53f3\u98de\u7684\u5b50\u5f39\uff0c\u6ca1\u5f53\u9047\u5230\u4e00\u4e2a\u5411\u5de6\u7684\u5b50\u5f39\uff0c\u5224\u65ad\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u662f\u5426\u6709\u4ea4\u96c6\uff0c\u6709\u5219\u53ef\u4ee5\u9884\u89c1\uff0c\u53cd\u4e4b\u4e0d\u884c\u3002\n\n----\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nlong long n,x[500005],v[500005];\nbool check(long double tim){\n\tlong double rt=0,fi=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(v[i]>0){\n\t\t\tif(fi==0)rt=(long double)x[i]+(long double)v[i]*tim;\n\t\t\trt=max(rt,(long double)x[i]+(long double)v[i]*tim),fi=1;\n\t\t}else\n\t\tif(rt>=(long double)x[i]+(long double)v[i]*tim&&fi)return 1;\n\t}\n\treturn 0;\n}\nint main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%lld%lld\",&x[i],&v[i]);\n\tlong double l=0,r=1e9+5,ans,mid;\n\twhile(r-l>=1e-10){\n\t\tmid=(l+r)/2;\n\t\tif(check(mid))r=mid,ans=mid;\n\t\telse l=mid;\n\t}\n\tif(r==1e9+5){\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"%.20Lf\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1633833831,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF24E Berland collider"
    },
    {
        "content": "## \u601d\u8def\n\n\u8fd9\u9053\u9898\u6c42\u7684\u5c31\u662f\u8fd9\u4e2a\u5f0f\u5b50\u7684\u6700\u5c0f\u503c\uff1a\uff08 $x_1,v_1$ \u4e3a\u5411\u53f3\uff0c$x_2,v_2$ \u4e3a\u5411\u5de6 \uff09\n\n$$\\frac{x_2-x_1}{v_1-v_2}$$\n\n\u7b49\u7b49...\u8fd9\u4e2a\u5f0f\u5b50\u662f\u4e0d\u662f\u6709\u70b9\u50cf\u5206\u6570\u89c4\u5212\uff1f\n\n\u8003\u8651\u4e8c\u5206\u65f6\u95f4\u3002\u5047\u8bbe\n\n$$\\frac{x_2-x_1}{v_1-v_2}\\le \\text{mid}$$\n\n\u90a3\u4e48\u5c31\u6709\n\n$$\n\\begin{matrix}\n(x_2-x_1)\\le \\text{mid} \\cdot (v_1-v_2) \\\\\nx_2+ \\text{mid} \\cdot v_2 \\le x_1 + \\text{mid} \\cdot v_1\n\\end{matrix}\n$$\n\n\u5728\u4e4b\u524d\u5c06\u6240\u6709\u7684\u5b50\u5f39\u6309\u7167\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u6309\u7167\u8fd9\u4e2a\u5173\u7cfb\u4e8c\u5206\u5224\u65ad\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Maxn=int(5e5);\n\ninline int read()\n{\n    char ch=getchar();\n    int f=1,x=0;\n    while(ch>'9' || ch<'0')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nint n,typ[Maxn+5];\nstruct Node{int a,b;} k[Maxn+5];\ninline int cmp(Node x,Node y) {return x.a<y.a;}\n\ninline int Check(double mid)\n{\n    double res=-1e20; // \u6ce8\u610f\u8fd9\u91cc\u7684\u503c\u8981\u5341\u5206\u5c0f\n    for(register int i=1;i<=n;++i)\n    {\n        if(typ[i]) res=max(res,k[i].a+mid*k[i].b);\n        else if(k[i].a+mid*k[i].b<=res) return 1;\n    }\n    return 0;\n}\n\nint main()\n{\n    n=read();\n    for(register int i=1;i<=n;++i)\n        k[i].a=read(),k[i].b=read(),typ[i]=(k[i].b>0);\n    double l=0.0,r=1e10;\n    for(register int i=1;i<=100;++i) // \u9632\u6b62\u6b7b\u5faa\u73af\n    {\n        double mid=(l+r)/2;\n        if(Check(mid)) r=mid;\n        else l=mid;\n    }\n    if(r==1e10) printf(\"-1\");\n    else printf(\"%.12lf\",l);\n    return 0;\n}\n```",
        "postTime": 1607162077,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF24E \u3010Berland collider\u3011"
    }
]