[
    {
        "content": "## \u524d\u8a00\ndsu on tree \u597d\u9898\u3002\n\n\u5f53\u65f6\u5728 vp\uff0c\u7136\u540e\u5927\u6982\u662f\u8fd9\u6837\u7684\u3002\n\n* \u554a\u6211\u4f1a $O(n^2)$\n* \u554a\u6211\u89c9\u5f97\u8fd9\u80fd dsu on tree\n* \u554a\u8fd9\u600e\u4e48 dsu on tree\n* \u554a\u8fd9\u4e0d\u80fd dsu on tree \u5427\n* \uff08zhouAKngyang \u5199\u4e86\u4e00\u53d1 dsu on tree \u7136\u540e\u7acb\u9a6c A \u6389\u4e86\uff09\n\n\n## \u601d\u8def\n\u9996\u5148\u8003\u8651 $O(n^2)$ \u7684\u66b4\u529b\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u5408\u5e76\u5b50\u6811\uff0c\u5728\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u6709\u51e0\u6761\u8fb9\u4e0d\u9700\u8981\u3002\n\n\u4e8e\u662f\u4f60\u60f3\u6709\u54ea\u4e9b\u4fe1\u606f\u53ef\u4ee5\u4e0a\u4f20\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u4ec0\u4e48\u4fe1\u606f\u90fd\u4e0d\u9700\u8981\u4e0a\u4f20\uff01\n\n\u7531\u4e8e\u6211\u4eec\u53ea\u9700\u8981\u5408\u5e76\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u5b50\u6811\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u600e\u4e48**\u4e0d\u904d\u5386\u8003\u8651\u91cd\u513f\u5b50\u6240\u5728\u7684\u5b50\u6811\u3002**\n\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u5f02\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728**\u91cd\u513f\u5b50\u6240\u5728\u7684\u5b50\u6811\u7684\u57fa\u7840\u4e0a**\u5408\u5e76\u5176\u4f59\u5b50\u6811\u5373\u53ef\u3002\n\n\u7136\u540e\u590d\u6742\u5ea6\u5c31\u548c\u542f\u53d1\u5f0f\u5408\u5e76\u4e00\u6837\u4e86\uff0c\u5373 $O(n\\log n)$\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint nxt[1500003][26];\nint v[1500003];\nint w[1500003],hs[1500003];\nint X[1500003],Y[1500003],C=0;\nint CNT=700000;\nint qwq;\nvoid merge(int x,int y)\n//merge x to y\n{\n\t//printf(\"%d %d\\n\",x,y);\n\tfor(int i=0; i<26; ++i)\n\t{\n\t\tif(nxt[x][i])\n\t\t{\n\t\t\tif(!nxt[y][i]) \n\t\t\t{\n\t\t\t\tX[++C]=y,Y[C]=i;\n\t\t\t\tnxt[y][i]=++CNT;\n\t\t\t\t//return ;\n\t\t\t}\n\t\t\telse ++v[qwq];\n\t\t\tmerge(nxt[x][i],nxt[y][i]);\n\t\t}\n\t}\n\treturn ;\n}\nvoid clear()\n{\n\tfor(int i=1; i<=C; i++)\n\tnxt[X[i]][Y[i]]=0;\n\tC=0;\n\treturn ;\n}\nvoid dfs(int d,int x)\n{\n\tfor(int i=0; i<26; i++) \n\tif(nxt[x][i]) ++v[d],dfs(d+1,nxt[x][i]);\n\tqwq=d;CNT=700000;\n\tfor(int i=0; i<26; i++) \n\tif(nxt[x][i]&&(nxt[x][i]!=hs[x])) merge(nxt[x][i],hs[x]);\n\tclear(); \n\treturn ;\n}\nvoid init(int x)\n{\n\tfor(int i=0,g=-1; i<26; i++) \n\tif(nxt[x][i]) \n\t{\n\t\tinit(nxt[x][i]),w[x]+=w[nxt[x][i]];\n\t\tif(w[nxt[x][i]]>g) hs[x]=nxt[x][i],g=w[nxt[x][i]];\n\t}\n\treturn ;\n}\nint to[1000003],Nxt[1000003],c[1000003],head[1000003];\nint Q=0;\nvoid DFS(int x,int y)\n{\n\tfor(int i=head[x]; i; i=Nxt[i]) if(to[i]!=y)\n\t{\n\t\tnxt[x][c[i]]=to[i];\n\t\tDFS(to[i],x);\n\t}\n\treturn ;\n}\nsigned main()\n{\n    int n=read();\n    char s;\n    for(int i=1; i<=n; i++) w[i]=1;\n    for(int i=1,u,v; i<n; i++) \n    {\n    \tu=read(),v=read(),s=getchar();\n    \twhile(!islower(s)) s=getchar();\n    \ts-='a';\n    \tto[++Q]=v,Nxt[Q]=head[u],head[u]=Q,c[Q]=s;\n    \t//nxt[u][s-'a']=v;c=c;\n    }\n    DFS(1,1);\n\tinit(1);\n    dfs(1,1);\n    int mx=99999999,id=1;\n    for(int i=n; i>=1; i--)\n    {\n    \tif(n-v[i]<=mx)\n    \t{\n    \t\tmx=n-v[i];\n    \t\tid=i;\n    \t}\n    }\n    printf(\"%d\\n%d\\n\",mx,id);\n\treturn 0;\n}\n```",
        "postTime": 1610280148,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF778C \u3010Peterson Polyglot\u3011"
    },
    {
        "content": "[my cnblogs](https://www.cnblogs.com/Oier-GGG/articles/16211508.html)\n\n~~\u9898\u76ee\u8fde\u63a5\u5c31\u4e0d\u653e\u4e86\uff0c\u4eba\u7c7b\u5e94\u8be5\u53cd\u5bf9\u9634\u95f4\u9898\u76ee\u63cf\u8ff0~~\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f5c\u4e3a\u6b63\u5e38\u4eba\u80fd\u591f\u770b\u61c2\u7684\u9898\u9762\u63cf\u8ff0\uff1a\n\n* \u7ed9\u4e00\u68f5 $\\text{trie}$ \u6811\uff0c\u53ef\u4ee5\u5220\u6389\u67d0\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\u548c\u8fb9\u3002\n\n* \u88ab\u5220\u9664\u7684\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4f1a\u4ee3\u66ff\u5f53\u524d\u8282\u70b9,\u5f62\u6210\u65b0\u7684\u4e00\u5c42\u8282\u70b9,\u5982\u679c\u6709\u76f8\u540c\u7684\u53ef\u4ee5\u5408\u5e76\u3002\n\n* \u6c42\u5220\u6389\u54ea\u4e00\u5c42\u8fb9\u540e\u5408\u5e76\u51fa\u7684 $\\text{trie}$ \u6811\u6700\u5c0f\uff1f\n\n-----\n\n\u8003\u8651 $\\text{trie}$ \u7684\u5408\u5e76\u3002\n\n\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u5220\u53bb\u4e86\u4e00\u4e2a\u8282\u70b9\uff0c\u89c2\u5bdf\u4e0b\u4e00\u6b65\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u4e00\u5b9a\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u4eec\u6240\u4ee3\u8868\u7684\u5b50\u6811\u5408\u5e76\u6210\u4e00\u4e2a$\\text{trie}$ \u7136\u540e\u548c\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u76f8\u8fde\u3002\n\n\n\u7136\u540e\u6211\u4eec\u6765\u8003\u8651\u8fd9\u6837\u4e00\u6bb5 $\\text{Trie}$ \u6811\u5408\u5e76\u7684\u4ee3\u7801\uff1a\n\n```cpp\ninline int merge(int x, int y) {\n  if (x == 0 || y == 0) \n    return x + y;\n  int now = ++cnt;\n  for (int i = 0; i < 26; i++)\n    son[now][i] = merge(son[x][i], son[y][i]);\n  return now;\n}\n```\n\u76f8\u4fe1\u5927\u5bb6\u5bf9 $\\text{merge}$ \u7684\u6d41\u7a0b\u5df2\u7ecf\u975e\u5e38\u719f\u6089\u4e86\u3002\n\n--------\n\n\u4e0b\u9762\u6211\u4eec\u6765\u8003\u8651\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\u7684\u610f\u4e49\uff1a\n\n\u6211\u4eec\u53d1\u73b0\u5728\u8fdb\u884c\u4e00\u6b21\u65b0\u5efa\u8282\u70b9\u65f6\u4e00\u5b9a\u662f\u628a\u5176\u4e2d\u7684\u4e24\u4e2a\u8282\u70b9\u5408\u5e76\u6210\u4e3a\u4e00\u4e2a\u70b9\u3002\n\n\u6240\u4ee5\u4e5f\u5c31\u53ef\u4ee5\u76f4\u63a5\u7b49\u4ef7\u4e8e\u662f\u5220\u9664\u4e86\u539f\u6765 $\\text{Trie}$ \u6811\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\u3002\n\n---------\n\n\u6211\u4eec\u7528 $num$ \u6765\u8bb0\u5f55\u4e00\u4e0b\u6b64\u65f6\u65b0\u5220\u9664\u7684\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u8fd9\u662f\u5220\u9664\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u5220\u9664\u6574\u6574\u4e00\u4e2a\u5c42\u600e\u4e48\u529e\u5462\uff1f\n\n\u76f4\u63a5\u7528 $\\text{dfs}$ \u8dd1\u4e00\u8fb9\u5373\u53ef\uff0c\u8bb0\u5f97\u5e26\u5165 $\\text{deep}$ \u8bb0\u5f55\u5f53\u524d\u7684\u6df1\u5ea6\u3002\n\n#### Code\n```cpp\n#include <bits/stdc++.h>\n\n#define file(a) freopen(a\".in\", \"r\", stdin), freopen(a\".out\", \"w\", stdout)\n\n#define Enter putchar('\\n')\n#define quad putchar(' ')\n\nconst int N = 600005;\n\nint n, son[N][30], root, ans, maxn, sum[N], cnt;\nchar c[10];\n\ninline int merge(int x, int y) {\n  if (x == 0 || y == 0) \n    return x + y;\n  int now = ++cnt;\n  for (int i = 0; i < 26; i++)\n    son[now][i] = merge(son[x][i], son[y][i]);\n  return now;\n}\n\ninline void dfs(int now, int deep) {\n  int num;\n  num = cnt = n + 1;\n  for (int i = 0; i < 26; i++)\n    if (son[now][i])\n      num = merge(num, son[now][i]);\n  sum[deep] += cnt - n - 1;\n  for (int i = 0; i < 26; i++)\n    if (son[now][i]) dfs(son[now][i], deep + 1);\n}\n\nsigned main(void) {\n  // file(\"CF778C\");\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(0);\n  std::cout.tie(0);\n  std::cin >> n;\n  root = 1;\n  for (int i = 1, x, y; i < n; i++) {\n    std::cin >> x >> y >> c;\n    son[x][c[0] - 'a'] = y;\n  }\n  dfs(1, 1);\n  for (int i = 1; i <= n; i++) \n    if (sum[i] > maxn) {\n      maxn = sum[i];\n      ans = i;\n    }\n  std::cout << n - maxn << std::endl << ans << std::endl;\n}\n```",
        "postTime": 1651326837,
        "uid": 47531,
        "name": "Aonynation",
        "ccfLevel": 0,
        "title": "CF778C \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f: \n\n\u7ed9\u4e00\u68f5trie\u6811\uff0c\u53ef\u4ee5\u5220\u6389\u67d0\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\u548c\u8fb9\n\n\u88ab\u5220\u9664\u7684\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4f1a\u4ee3\u66ff\u5f53\u524d\u8282\u70b9,\u5f62\u6210\u65b0\u7684\u4e00\u5c42\u8282\u70b9,\u5982\u679c\u6709\u76f8\u540c\u7684\u53ef\u4ee5\u5408\u5e76\n\n\u6c42\u5220\u6389\u54ea\u4e00\u5c42\u8fb9\u540e\u5408\u5e76\u51fa\u7684trie\u6811\u6700\u5c0f\uff1f\n\n\u89e3\u6cd5: \n\ntrie\u7684\u542f\u53d1\u5f0f\u5408\u5e76\n\n```cpp\nint mg(int x,int y){\n    if(!x||!y)return x+y;\n    int now=++cnt;\n    Fur(i,0,25)c[now][i]=mg(c[x][i],c[y][i]);\n    return now;\n}\n```\n\n\u8fd9\u4e2a\u5408\u5e76\u7684\u590d\u6742\u5ea6\u662f$\\Theta(\\log n)$\u7684\n\n\u8bc1\u660e:\n\n> \u6bcf\u6b21\u5408\u5e76\u5411\u4e0b\u9012\u5f52\u7684\u65f6\u5019\u89c4\u6a21$n$\u4f1a\u53d8\u6210\u539f\u6765\u7684\u4e00\u534a$\\frac n2$\n> \n> \u6240\u4ee5\u6700\u591a\u9700\u8981\u5408\u5e76$\\log_2 n$\u6b21\n\n\u5b8c\u6574\u4ee3\u7801: \n\n```cpp\nconst int N=600011;\nint n,cnt,c[N][26],a[N];\nint mg(int x,int y){\n    if(!x||!y)return x+y;\n    int now=++cnt;\n    Fur(i,0,25)c[now][i]=mg(c[x][i],c[y][i]);\n    return now;\n}\nvoid dfs(int x,int d){\n    int now=n+1;cnt=n+1;\n    Fur(i,0,25)if(c[x][i])\n        now=mg(now,c[x][i]);\n    a[d]+=cnt-n-1;\n    Fur(i,0,25)if(c[x][i])\n        dfs(c[x][i],d+1);\n}\nint main(){\n    in(n);\n    int x,y,ans=0,as=0;char w;\n    Fur(i,2,n)in(x,y,w),c[x][w-'a']=y;\n    dfs(1,1);\n    Fur(i,1,n)if(a[i]>ans)as=i,ans=a[i];\n    printf(\"%d\\n%d\\n\",n-ans,as);\n}\n```",
        "postTime": 1582969581,
        "uid": 36532,
        "name": "localhost",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF778C \u3010Peterson Polyglot\u3011"
    }
]